incl
inc
mov
lea
or
push
shlb
mov
inc
add
idiv
out
incl
call
inc
or
add
incl
inc
jne
push
mov
int
fstpl
xor
sub
lea
rolb
dec
mov
pop
imul
dec
je
mov
push
cmp
sti
je
add
inc
sub
mov
incl
and
decl
add
add
push
or
add
fildll
and
push
or
add
std
mov
add
rclb
add
add
or
adc
mov
lea
call
or
jnp
xchg
mov
addl
subl
fstpl
pop
je
sbb
mov
lods
mov
jne
inc
and
fidivl
pop
leave
add
mov
mov
out
fwait
sti
je
push
or
cmpsl
test
mov
in
push
push
rclb
and
lods
xchg
xor
sbbl
fcmovbe
jne
decl
imulb
or
sub
ret
lea
mov
mov
push
mov
mov
jae
jns
decl
call
pop
jo
push
sub
mov
pop
fadds
mov
jae
lods
imul
nop
add
outsl
push
data16
fwait
mov
or
inc
jl
jnp
lock
cmpl
mov
outsb
lcall
inc
or
xor
and
xchg
add
mov
int
insl
mov
adc
inc
jo
pop
mov
sbb
push
pop
jnp
push
aaa
sbb
push
mov
pop
mov
in
jae
push
jo
adcl
or
test
inc
mov
adc
xorl
mov
mov
pop
sub
xchg
popf
bound
ljmp
xchg
orl
fildl
xchg
iret
mov
xchg
or
ljmp
adc
sub
sub
sbb
fsubs
ficoml
mov
mov
ficoml
rcll
dec
push
pop
mov
or
pusha
cmpsl
fistpl
pop
add
push
sbb
pop
imul
sub
nop
mov
ja
push
rolb
dec
in
and
aad
mov
dec
or
and
lods
adc
jg
push
push
fidivrs
cltd
fcomps
mov
sub
xchg
add
lds
sub
les
mov
and
insl
fnsave
or
lea
orl
and
orl
and
pushf
fbstp
pusha
push
loope
es
sahf
cmpsb
inc
jae
push
dec
fmull
cs
pushw
mov
dec
fwait
mov
inc
push
test
pop
xlat
and
cmp
jge
push
jns
rcrb
xor
sbb
pusha
fidivl
lods
xlat
xchg
xor
push
cmp
jno
dec
clc
hlt
imul
scas
lea
xchg
imul
sub
mov
fimull
movsb
pop
cmpsb
or
shl
pop
jnp
sub
and
std
add
outsl
and
xor
fidivs
xor
adc
xchg
js
lea
inc
cmp
push
inc
push
lcall
je
shll
jne
lods
cltd
or
mov
outsb
inc
scas
mov
scas
cltd
test
jl
xor
in
es
cmp
sbb
mov
loop
pop
lods
push
jo
movsl
jbe
sbb
rolb
or
rcrl
or
lcall
mov
pop
and
sbb
pop
mov
pushw
mov
shll
rolb
push
xorl
push
xchg
sub
mov
adc
enter
push
in
cmp
add
pop
lods
cmp
js
or
xchg
loopne
data16
lds
insl
and
mov
popa
add
je
jb
ret
ljmp
data16
dec
dec
sbb
mov
jp
int
mov
sbb
int
lcall
pop
imul
testl
data16
sbb
mov
daa
shl
or
iret
pop
mov
sub
shll
cmp
push
sahf
sub
adc
push
loopne
ret
lcall
push
inc
mov
pop
imul
add
cmp
or
add
pop
call
jp
sub
push
addl
sbb
mov
pop
in
lahf
and
inc
cmp
push
lret
and
mov
mov
out
pop
jae
addr16
add
dec
scas
xchg
pushw
adc
subl
and
lret
flds
jne
push
je
jb
push
jno
push
mov
jne
sbb
insb
xchg
imul
int
add
mov
xchg
mov
fs
adc
lds
fwait
jae
inc
and
mov
mov
add
inc
mov
xor
test
jle
xor
fmuls
jge
shlb
fiaddl
mov
popf
imul
mov
shrb
sbb
dec
adc
push
or
cmpsb
inc
insb
or
push
imul
js
fs
sbb
shrb
pop
sarl
hlt
mov
or
xchg
push
jne
test
xchg
jg
imul
xchg
push
sub
loope
sbb
adc
movsl
lret
pushf
ret
fs
jne
loopne
andl
into
inc
leave
cli
loop
mov
loopne
jne
jno
or
ds
push
inc
shll
dec
sub
shll
pop
xor
pop
jne
add
jmp
jp
xor
adc
and
rcll
or
daa
in
mov
and
dec
cmp
cmp
lcall
stc
mov
adc
aam
mov
push
jne
inc
push
cmp
pop
int
shr
mov
sbb
jmp
call
cs
mov
lds
pop
mov
scas
inc
bound
inc
pop
sbb
lret
jne
aaa
or
lods
rorl
divb
xor
test
adcb
lahf
orl
test
push
sub
stos
pop
scas
not
gs
pop
and
and
push
xor
mov
ret
shl
xor
and
pop
addr16
cmpb
test
sub
clc
adc
gs
test
xchg
loope
test
or
and
jecxz
cmp
cmp
push
in
add
pushaw
xorl
in
lods
push
enter
sbb
adc
cwtl
push
mov
int
push
mov
movsl
dec
shlb
pop
mov
pop
lret
push
xor
andl
pop
in
push
xor
push
adc
inc
ds
scas
and
jns
mov
clc
out
inc
lcall
mov
mov
xor
dec
rorl
jne
pop
lods
lcall
add
mov
test
mov
ds
js
xor
inc
outsl
cmp
sbb
inc
stos
rcll
push
jo
dec
iret
jne
pop
sbb
mov
add
add
mov
xor
insb
fwait
mov
xor
andl
adc
pop
int
loop
mov
inc
add
imulb
mov
in
fisubs
test
xchg
mov
into
fnstcw
sub
mov
mov
mov
rolb
cltd
inc
lds
pushf
sub
roll
xchg
inc
insb
popf
pop
out
add
dec
shrb
or
push
lods
ds
xor
jo
xor
outsb
jne
and
icebp
mov
fiaddl
shlb
lcall
xchg
sarl
pop
push
negl
les
xchg
add
je
cwtl
lcall
pop
int
pusha
sub
or
rcr
je
rolb
je
jbe
popa
xlat
inc
in
sub
test
xor
xor
imul
adcb
ljmp
push
and
adc
rorb
sbbl
jne
or
test
pusha
inc
mov
dec
add
jne
es
into
push
sub
scas
aam
es
pop
or
sbb
test
mov
lcall
add
or
je
dec
cwtl
sbb
outsb
subl
imul
mov
push
or
scas
or
add
add
mov
mov
data16
jmp
cli
push
sub
mov
clc
lea
push
xorb
push
jle
xchg
jle
xchg
outsl
jb
jle
cmp
jle
ljmp
outsl
add
lahf
cmp
outsl
sub
cmp
cli
pop
das
add
xchg
jg
xor
cs
and
xor
cmp
cmp
mov
cmp
sbbb
dec
xor
cmp
pop
sub
push
push
cmp
mov
clc
clc
rcl
negl
cmp
cli
add
push
push
jge
fucomi
adc
gs
les
jns
sub
pop
sti
mov
clc
cmpb
adc
add
mov
in
mov
xor
shlb
les
add
mov
outsl
fcomi
incl
mov
rcrb
les
mov
in
fcomi
pop
rcrb
add
cmp
dec
jle
sub
imul
imulb
mov
cmp
ret
inc
les
cmp
outsl
and
jb
push
pop
dec
pop
lahf
add
jo
mov
xor
and
xor
sbb
xor
cmp
test
mov
mov
lea
fdiv
mov
fstpt
dec
or
sbbb
push
dec
jle
jb
inc
negb
xor
pop
jp
and
out
rorl
sbb
fidivrl
mov
adc
adc
sbb
add
xor
inc
push
popa
mov
rclb
and
xchg
push
das
sub
sti
fbstp
pop
push
rcrb
outsl
lahf
lea
pop
jo
cmp
or
inc
sti
push
cli
lea
les
loope
pop
jbe
and
inc
pop
cmpb
fisttps
mov
mov
cmp
test
ret
mov
ret
dec
clc
daa
cmp
xchg
and
mov
mov
daa
pop
pop
push
ljmp
pop
push
lahf
adc
jb
xchg
push
inc
cmp
cmp
cmpb
fcomi
das
lahf
ret
pop
xchg
jne
mov
das
push
dec
pop
ret
jae
fcomi
outsl
adc
pop
cmp
stc
sub
sbb
sub
mov
jp
add
sub
mov
push
pop
mov
fdivrl
cmp
add
dec
push
adc
sbb
das
xchg
les
inc
mov
pop
arpl
pop
adc
outsl
fbstp
dec
pop
mov
dec
pop
xor
insl
mov
out
pop
add
cmp
aaa
or
xor
sub
fistl
xor
dec
dec
shrb
jg
or
mov
loopne
out
xor
paddw
out
add
fisttps
add
and
jno
inc
add
mov
adc
push
or
jnp
or
sbb
mov
add
inc
add
out
std
dec
jmp
ret
in
shrl
pop
dec
jl
jecxz
std
mov
ret
push
mov
add
movl
pop
xchg
pop
jle
gs
sbb
pop
ja
sbb
lahf
fstpl
into
test
or
jbe
mov
sbb
push
in
adc
or
mov
add
mov
xor
cmp
daa
mov
mov
sub
adc
sbb
rorl
repz
data16
push
push
lock
sub
mov
jge
test
incb
rclb
decb
or
and
inc
cmp
mov
mov
mov
push
loopne
fcmovb
in
or
insb
jae
loop
mov
ficompl
cmp
fimull
mov
das
push
loope
inc
adc
jne
cmp
roll
dec
not
sbb
loope
fidivrl
outsl
cmp
xor
ja
std
or
ror
pop
mov
stc
mov
fisubl
jne
and
ret
sahf
jne
or
ret
mov
and
sbb
push
fcmovnu
fidivs
and
std
mov
dec
mov
int3
pusha
pop
push
pop
xor
in
pop
popa
popa
popf
pop
jg
shll
popa
jno
cmpb
mov
and
inc
jecxz
pop
pop
je
repz
push
xor
jmp
add
out
sbb
pop
insl
push
out
xchg
jb
subl
fidivl
adc
sub
jecxz
stos
push
xchg
stc
adc
cs
push
push
cmp
cli
mov
xchg
xor
imul
add
gs
jle
mov
push
fisubrl
cmp
adcb
inc
jb
pop
jns
clc
push
imul
adc
adc
insl
jmp
pop
lahf
xor
mov
push
mov
clc
dec
cmp
outsl
das
bound
sub
dec
lea
add
mov
dec
push
and
outsl
cmp
out
negl
pop
pop
and
mov
aam
movsl
lods
mov
fadds
das
das
gs
mov
rolb
lea
cli
inc
pop
cmpsb
in
push
lea
sbb
insl
mov
and
push
jb
cmp
sbb
push
rolb
subb
pushf
rcr
fsubs
add
add
add
add
or
cs
jmp
mov
sbb
mov
cmp
add
pusha
push
je
stos
inc
subl
inc
stos
rolb
and
or
loope
cli
fwait
cs
cli
push
outsb
insl
int
xchg
adc
lahf
lahf
jp
sub
push
dec
and
jb
clc
sub
sbb
sti
mov
outsb
mov
pop
mov
xor
push
jo
ret
pop
clc
ljmp
sub
insl
sbb
repz
push
lcall
test
sarl
outsl
jno
insl
or
adc
sbb
pop
dec
shl
xorb
sarb
sub
sub
add
testb
orl
test
push
lods
ja
and
jbe
lea
sbb
cmp
mov
lds
pop
cli
movsb
pusha
pop
loopne
dec
call
insl
ret
mov
push
popf
outsl
dec
jge
divl
adc
sar
and
and
lcall
add
push
xor
pop
cli
das
dec
push
fmuls
lods
sarb
lahf
std
cwtl
jb
or
jge
aas
dec
adc
pop
pop
out
mov
fisubl
ret
add
mov
testl
test
flds
ret
mov
mov
inc
jl
rcll
mov
mov
add
push
jnp
jmp
mov
jg
jge
clc
int3
cs
or
cmpsb
lods
mov
xor
fdivl
insb
mov
cltd
hlt
sub
add
faddl
pop
stos
int3
sub
insb
nop
sub
repnz
lcall
lods
lcall
jmp
ljmp
cmp
loope
add
inc
pop
jp
incb
les
shlb
jmp
sub
push
cmp
sarl
jnp
mov
insb
popa
clc
and
ja
mov
idivb
or
pop
test
push
and
adc
lock
mov
inc
int3
stos
hlt
push
push
mov
fistl
in
call
xchg
pop
cld
sbb
add
repz
xor
add
mov
dec
cmp
jle
mov
andb
sbb
push
test
out
push
fcmovnu
add
adc
loopne
mov
mov
negl
pop
pusha
cld
mov
mov
sbb
pop
scas
out
xor
mov
incl
pop
xor
jmp
inc
fisttps
incb
pop
pusha
mov
cmp
aam
push
add
cmp
stos
sahf
mov
repz
lea
clc
pop
call
xchg
push
jno
sub
adc
rorl
test
aam
mov
mov
push
imul
cmp
mov
or
insb
cmp
pop
sub
movsl
mov
aam
test
xchg
outsl
dec
testl
cli
lahf
jbe
and
lahf
pop
addl
dec
cmpb
rcl
xor
dec
inc
sub
mov
add
and
mov
jo
cmp
jle
clc
xor
stos
test
push
fsubrs
scas
mov
mov
cmp
add
pop
lods
mov
ljmp
or
test
xor
push
fiaddl
add
mov
testb
mov
ret
mov
jb
mov
mov
jmp
jb
sub
sti
and
adc
pushf
mov
ss
sbb
movsl
addb
insl
add
push
push
cmp
push
outsl
cld
test
shld
or
out
cmpsl
imul
sarb
sahf
lods
icebp
clc
jle
push
cli
shrb
push
add
push
pop
daa
push
inc
int3
lahf
mov
fidivrl
lcall
cmp
mov
adc
mov
pop
fcmovbe
pop
mov
rep
rol
jno
and
pop
fstps
jno
jg
dec
leave
sub
mov
add
pusha
cmp
xchg
or
pop
mov
mov
mov
or
mov
daa
and
push
fdivs
add
push
mov
add
shlb
ret
sti
cmp
adc
sub
shl
fisubl
sahf
pop
dec
push
mov
pop
mov
sub
mov
sub
xchg
shrb
lods
sub
xor
ss
loopne
jle
and
and
cmp
xchg
adc
loop
mov
sub
jb
add
push
xchg
dec
sbb
jno
cmpsb
or
push
jno
lods
and
pop
rorb
add
bound
push
dec
ljmp
sub
into
xlat
mov
jg
aaa
pop
into
daa
mov
xchg
xchg
pushf
mov
fldenv
xchg
divl
pop
mov
xchg
test
lods
shl
cltd
pop
scas
mov
and
mov
in
das
scas
push
add
mov
lea
das
ret
imul
mov
jne
inc
scas
adc
shll
ss
xor
push
scas
lcall
bound
add
aaa
cmpb
addl
adc
fisttpl
adc
push
xlat
data16
jp
lea
sti
insl
xchg
xchg
pop
fistpl
xchg
pop
jno
or
movsl
mov
notl
sbbb
pop
test
mov
das
jne
or
sbb
mov
sti
movsb
repnz
in
insl
lahf
subb
into
mov
or
out
xor
loope
mov
adc
mov
notl
adc
lods
lock
test
cmp
das
testl
cmpsb
ret
cmp
sub
pop
bound
insb
adc
cmp
pop
jno
jmp
aam
inc
jb
rcll
aaa
add
fwait
inc
mov
xchg
dec
jge
jns
sti
inc
imul
push
shll
mov
or
ja
jmp
call
repnz
aad
cmp
push
test
cmp
sbbl
cmp
popa
aam
xor
mov
test
sti
add
or
mov
cmpsb
cmp
or
subl
call
fisubrl
lret
mov
inc
or
movb
fsubl
mov
sub
outsb
int3
rorl
sbb
sbb
push
jnp
in
les
or
pop
jge
jnp
sbb
push
push
add
jge
sahf
sbb
xor
cld
cld
or
jb
in
jnp
mov
mov
add
shlb
sbb
dec
pop
xor
insb
mov
sbbb
jno
dec
fwait
jnp
sbb
into
or
aas
push
out
in
xor
in
xor
roll
loope
sub
push
adc
lods
cmp
test
js
xchg
in
or
iret
insl
inc
ficoml
fucomi
out
sbb
xor
or
push
add
jno
cmp
dec
mov
cmp
fsubs
addb
in
cld
pushf
cmp
sub
jge
enter
shl
jecxz
pop
int
push
cmp
adc
into
push
jecxz
jp
ds
pop
clc
pusha
and
jge
xlat
add
xlat
mov
push
insl
pop
mov
daa
in
xor
xchg
xor
filds
fisttpll
push
mov
push
push
adc
call
sahf
imul
fninit
inc
pop
mov
jbe
sub
enter
sti
adc
pop
movsl
or
push
dec
push
or
xchg
dec
lods
lea
push
fiaddl
jns
pop
sti
fildll
je
aas
add
adc
ficompl
inc
test
sub
test
xchg
dec
xchg
lahf
mov
mov
sub
int
adc
roll
mov
xor
mov
pop
xor
test
dec
pusha
lahf
cs
mov
data16
sub
pop
mov
dec
loop
push
imul
jno
lods
inc
movsl
xchg
test
mov
pop
adc
xor
mov
pop
movsl
gs
jno
xor
pusha
fcmovbe
ret
faddl
cmp
lods
xor
push
js
dec
lods
push
lods
incl
ret
gs
insl
xchg
loop
clc
fnstcw
pop
adc
cld
fs
dec
shll
add
rolb
les
clc
push
inc
fidivl
fs
sbb
cmp
imul
add
dec
pushl
insl
mov
lret
pop
sub
jle
adc
mov
jecxz
jb
mov
dec
and
imul
or
xor
mov
call
add
xor
test
push
pop
xlat
xor
or
out
dec
mov
sbb
sub
push
mov
push
movsb
jo
inc
fisttpl
pop
dec
ret
add
or
pop
hlt
cmp
push
ss
xchg
jb
clc
lahf
mov
mov
push
sbb
ret
mov
xor
inc
int
les
insl
inc
addl
outsb
movsl
or
ljmp
lods
adc
iret
xor
sub
jecxz
xlat
cmp
stc
push
pop
inc
push
lods
lret
clc
icebp
outsl
add
adc
cmp
mov
sub
stc
arpl
mov
jb
fwait
repz
add
mov
pop
pop
lods
stc
das
xchg
sub
inc
cmp
call
lcall
data16
scas
push
mov
insl
loope
outsl
dec
cmp
sbb
shrb
mov
shll
and
inc
sub
clc
cmc
xchg
xor
cli
into
pop
out
push
mov
push
orb
dec
and
dec
pop
xor
inc
cmp
sarb
or
xor
push
stos
and
push
jb
fistpl
test
and
mov
inc
mov
or
in
jg
shlb
scas
test
push
sbb
inc
mov
lods
mov
xchg
mov
jno
push
mov
pop
and
aam
or
fstps
push
sub
adc
xor
mov
push
rolb
sub
adc
insl
sbb
idivl
sbb
loopne
sbb
lock
cmp
xchg
push
lods
sub
xchg
rorb
push
in
cmp
inc
jecxz
data16
sub
les
imul
in
push
pop
xor
lods
inc
lret
rorb
sub
pop
roll
dec
test
dec
dec
jmp
addb
sbb
inc
ret
mov
push
sub
pop
pop
clc
pop
and
pop
sub
ss
sbb
jno
inc
add
pop
xor
movsl
pop
mov
test
mov
and
addr16
out
xor
testl
fdivrs
inc
ffreep
lahf
pop
clc
or
pop
pop
xchg
das
or
fsubrs
daa
add
subb
lea
jo
xor
pop
pop
fcmovbe
inc
pop
cli
ret
cmp
int
aaa
xchg
or
add
jmp
movl
pop
jecxz
dec
leave
or
xlat
fcmove
pusha
jmp
mov
sub
add
push
mov
inc
clc
aam
mov
add
imul
inc
jno
push
push
push
test
xor
dec
xchg
push
push
fldcw
inc
mov
int3
shrb
push
stos
adc
dec
imul
xor
es
mov
shll
aam
jbe
imul
pop
lods
lea
push
jp
imul
insl
sub
xor
or
orb
jae
ficompl
cld
das
sbb
sub
sbb
rcll
mov
xorb
jle
jno
push
push
imul
loopne
push
add
mov
mov
sarb
dec
or
gs
inc
and
dec
cmp
cmp
push
pushf
out
pop
xchg
dec
xchg
mov
shrb
ss
jmp
sbbb
mov
dec
push
dec
jge
lfs
inc
imul
jne
push
shrl
test
fcomip
out
call
pop
pop
into
inc
push
jmp
bnd
dec
and
push
mov
adc
push
push
cmp
mov
push
out
pop
jb
sbb
push
sub
push
push
pop
mov
push
xchg
jle
pop
lahf
jecxz
sbb
mov
cmp
jp
test
xchg
dec
lods
mov
fwait
or
roll
sub
in
pop
xchg
xlat
int3
inc
sub
loopne
into
add
ret
mov
cwtl
mov
enter
dec
adc
sub
inc
scas
mov
repnz
mov
adc
mov
out
in
addb
lret
cmp
push
sub
xorl
fucomi
mov
aam
ficomps
sti
jle
push
push
lret
sahf
pop
imull
xor
rorl
push
push
lods
inc
imul
inc
push
cmp
add
and
push
test
cmc
les
push
and
xchg
pop
and
inc
add
out
aaa
outsl
in
mov
jno
mov
push
pop
stc
xor
cmp
xchg
test
cmp
test
insl
pop
jno
dec
cmc
cmp
incl
add
je
dec
mov
lahf
mov
loope
ljmp
or
or
je
scas
les
pop
ljmp
les
or
lea
push
shrl
cs
in
push
push
les
push
mov
pop
mov
rol
jns
push
rcrb
clc
xor
dec
inc
int3
mov
sbb
adcb
push
jb
xor
popa
repnz
jp
dec
and
xlat
jbe
mov
dec
rol
cltd
add
sub
in
add
sbb
incl
test
out
lods
push
mov
filds
xor
fadd
aaa
sbb
dec
jmp
outsl
sub
cld
outsb
pop
insb
cmp
inc
cmpsb
or
les
inc
or
cli
fs
or
xchg
mov
pop
faddl
adc
lret
jp
dec
xor
outsb
divl
in
inc
sub
push
sub
movsb
sub
lea
jg
push
mov
and
stos
mov
mov
xchg
testl
pop
mov
cmc
push
xor
and
pop
rcll
sub
jno
test
test
pop
movsl
push
leave
xchg
fs
xchg
push
addl
xchg
xor
lahf
sbb
xor
stos
push
outsl
cmpsb
cmc
and
or
inc
xor
fwait
or
lods
mov
repz
pop
movsl
push
xor
mov
imul
pop
imul
loopne
enter
mov
cmp
sub
xorb
dec
pop
movsb
add
sub
push
push
imul
sbb
pop
mov
xchg
jns
cmp
test
hlt
imul
imul
mov
das
insl
and
cli
shlb
sti
pop
dec
je
adc
fidivs
add
andl
in
add
add
pop
int
dec
scas
lret
xor
or
outsb
in
mov
inc
rcl
mov
into
add
outsl
sbb
fisubrs
add
test
and
stos
mov
out
add
enter
sarl
or
sbb
jo
ret
jb
insb
aaa
rclb
push
lea
add
or
roll
inc
push
mov
mov
pop
xor
dec
test
mov
push
mov
daa
jb
icebp
xor
inc
sbb
cmp
loop
sub
cld
mov
push
sub
aas
ret
jmp
pop
mov
add
mov
cmc
cmp
mov
xchg
jae
test
sub
push
mov
adcb
sub
fldt
cmc
mov
out
push
ret
xor
or
or
into
inc
imul
push
push
pop
sbb
lea
mov
add
push
daa
push
mov
lahf
mov
mov
mov
lahf
push
pop
imul
or
mov
pushf
pop
jb
inc
mov
leave
das
xchg
xchg
call
push
xor
std
and
pushf
outsl
jecxz
push
test
mov
mov
dec
push
push
and
les
repnz
adc
xor
push
pop
fildl
push
push
or
clc
mov
mov
add
enter
mov
add
rorb
sar
loop
fdivl
adc
pop
hlt
stos
xchg
xor
icebp
or
mov
cmp
repz
aad
adc
pop
mov
xor
xor
mov
fwait
int
push
push
ret
xor
cmc
fimull
call
in
push
add
in
inc
lods
pop
lea
add
jg
sub
mov
add
divb
sub
add
mov
js
sbb
xchg
adc
loope
cmp
enter
cwtl
inc
pop
sti
sarb
mov
mov
int
mov
mov
pop
jmp
sub
add
into
push
xor
pusha
adc
or
push
aam
dec
add
or
lahf
test
inc
neg
outsb
cmp
push
jne
cwtl
pusha
mov
dec
sub
sbb
cmpsb
fdivs
cmpsb
js
fists
stos
ljmp
adc
sub
jmp
dec
or
subl
xchg
dec
testb
inc
call
push
jg
shlb
scas
push
jmp
add
mov
cmp
sub
faddl
or
jge
xor
loopne
pop
rcrb
mov
xchg
inc
mov
adc
and
dec
mov
popa
push
bound
mov
rcll
js
adc
add
sub
and
mov
push
sub
cmp
sub
nopl
inc
cld
les
and
enter
mov
mov
sbb
in
add
pushf
xor
lock
fwait
add
xor
cmp
jge
xchg
dec
jne
inc
scas
lahf
cmpsb
ljmp
fwait
xor
fists
gs
push
loopne
movsl
add
mov
jae
in
in
and
mov
dec
ficompl
pushf
push
js
out
dec
xor
jbe
ficoms
mov
movsl
or
sahf
adc
jmp
mov
jge
dec
or
or
out
add
fcmovne
test
add
pop
adcb
es
mov
jne
inc
xlat
add
stos
das
sbb
cmpb
dec
sub
pop
and
js
shll
inc
add
inc
dec
jb
push
rolb
mov
lock
sbb
mov
cmp
subl
mov
in
cmp
cld
jge
jecxz
fstpl
imul
loopne
aad
inc
sarl
insb
lret
fidivl
mov
pop
push
ljmp
neg
outsl
xor
call
or
sbb
jg
sub
pop
ret
xchg
jle
test
sahf
pop
xchg
hlt
push
sbb
jl
mov
mov
paddb
sarl
mov
loopne
pusha
or
scas
loopne
leave
adc
gs
and
lods
or
pusha
push
dec
xorl
add
push
jge
test
test
mov
jg
mov
cmp
imul
xor
xchg
push
add
cmpl
push
addl
sbb
push
cli
xor
mov
add
adc
js
ret
arpl
or
xchg
push
xor
mov
inc
sbb
adc
sbb
xchg
fdivrs
mov
inc
xchg
xor
inc
pop
jno
loope
push
sub
xchg
mov
mull
fs
subb
push
mov
lret
or
inc
clc
jnp
push
stos
push
sbbb
xchg
das
test
insl
fistl
push
outsl
imull
cmp
movsb
dec
push
xor
jno
and
mov
mov
das
jle
test
fcmove
addb
add
adc
push
mov
or
and
rclb
js
add
fcoms
dec
cli
les
push
mov
fwait
idivl
mov
xorb
add
fimuls
inc
sub
adc
mov
data16
les
xor
mov
clc
cmpsb
outsl
inc
mov
pop
and
call
pop
test
stos
and
imul
mov
pop
jno
mov
dec
xchg
dec
or
xchg
pop
cli
and
mov
inc
test
jbe
mov
xor
push
insb
jno
mov
push
je
das
or
pop
push
mov
sub
push
subb
rol
and
and
popf
test
and
fidivl
xor
add
jno
ds
or
imul
push
test
mov
push
repz
insb
sbb
test
pop
add
mov
xor
inc
repz
mov
adc
mov
outsb
insb
sub
int3
pusha
and
test
insb
lods
ret
dec
sti
roll
int
cmpsl
lahf
das
subl
pop
test
add
jne
push
or
lret
lahf
test
sub
lock
cmp
pop
insl
mov
lea
ret
test
movsl
jp
pop
mov
out
test
outsl
jno
cmpsb
pusha
mov
adc
pop
mov
in
movsl
lahf
dec
xor
add
sub
fimull
imul
pop
decl
and
push
decl
pop
inc
outsb
cs
pop
mov
dec
xchg
mov
jmp
dec
mov
inc
adc
inc
jo
mov
orl
mov
xchg
sbb
cwtl
shrb
movsb
lods
sarl
xor
xor
lds
mov
add
add
adc
es
add
or
inc
mov
pusha
hlt
inc
out
xor
jbe
outsl
sub
insb
lock
inc
iret
inc
push
jmp
sub
jnp
adcb
cmp
push
jp
call
mov
loop
jge
push
lea
mov
push
xlat
lea
xor
outsl
adc
enter
rcll
enter
mov
repnz
mov
pushf
aam
fstpt
scas
push
test
pop
aam
mov
sub
sbb
jmp
add
pop
sub
adc
loopne
sub
xchg
cmp
lea
cmpsb
mov
mov
lods
sbb
or
fsubrs
lea
mov
pop
adc
or
add
das
cltd
shll
shrl
jb
cmp
clc
fnstsw
popa
or
lods
pop
inc
sub
inc
les
jge
lea
inc
fsubrl
pop
jle
jnp
rorl
mov
jae
rcl
push
mov
xchg
test
mov
sub
push
dec
mov
imull
in
fstl
and
sbb
push
xchg
and
dec
push
push
les
add
xchg
lods
push
dec
insl
cmp
mov
jb
sbb
and
fiaddl
sbb
movsl
push
arpl
jae
stos
mov
push
movsl
data16
and
adc
call
push
mov
and
jb
setg
xor
stos
test
loope
sub
add
jo
ficoml
js
mov
mov
and
mov
shrb
cmpsl
mov
or
or
repz
das
ds
dec
lods
pop
sub
xor
lcall
push
fcmovb
cmp
mov
xor
pop
in
inc
stos
push
pusha
pop
push
cmp
mov
pop
cmp
or
sbb
imul
cmp
roll
and
enter
jb
push
rol
mov
decb
and
mov
mov
loope
jb
insl
imul
inc
cmp
pop
fadds
dec
xchg
sub
outsl
push
xchg
pop
add
mov
add
add
fwait
pop
aad
pop
mov
dec
pop
pop
lods
pop
stos
in
imul
loopne
fcoml
lock
pop
mov
outsb
std
pop
cmp
push
dec
aad
loopne
or
subl
push
mov
lret
fadds
jbe
add
ret
push
sti
inc
push
mov
and
addl
lea
sbb
pop
cmpsb
out
sub
add
adcb
mov
mov
jns
lret
pushl
insb
mov
stos
xor
js
add
dec
mov
imul
add
lahf
cmp
mov
das
cli
cmpsb
cmc
sbb
or
mov
pop
rol
fildl
add
xchg
xchg
mov
jmp
insl
imul
rcrb
xor
imul
das
test
sahf
cmp
xor
lods
adc
add
scas
xchg
fadd
outsl
jl
add
inc
fistpl
arpl
push
nop
cmp
pusha
add
pop
push
push
unpckhps
rcrb
int3
mov
test
rol
lahf
jno
adc
sar
xor
or
jmp
and
daa
adc
xorl
mov
sub
inc
push
mov
sbb
or
push
mov
sub
inc
cld
sub
outsl
pusha
mov
repz
add
andb
pop
call
les
pop
mov
rcrl
mov
xor
pop
xor
dec
lea
divl
pop
inc
mov
aam
pusha
jb
imul
ja
mov
scas
scas
sub
aas
hlt
das
cmc
test
scas
enter
adcl
decl
dec
jmp
mov
decb
adc
mov
add
or
jo
mov
cmp
mov
mov
lock
mov
mov
rorl
movsb
sbb
adc
xor
or
adc
hlt
sbb
lds
pop
sub
push
int
push
in
lcall
cmp
sbb
mov
cmp
pusha
sub
fwait
pop
sub
mov
addb
jle
jb
pusha
jle
sub
or
mov
push
jo
mov
out
movsl
shlb
rcll
mov
sub
aam
jb
call
or
orb
lods
insl
pop
pop
pop
pop
dec
les
lods
aad
gs
push
mov
inc
mov
cli
xchg
in
mov
inc
mov
xchg
imul
test
popa
test
add
ret
imull
xorl
xchg
div
mov
or
int
push
sub
mov
test
cli
xchg
xlat
scas
lea
push
adc
add
add
inc
lods
mov
sbb
add
xor
faddl
mov
or
mov
pop
fwait
loopne
js
or
push
pop
inc
add
decl
or
inc
add
mov
notl
jecxz
add
mov
and
inc
loopne
inc
incl
cmp
movsl
sahf
cmp
into
mov
or
daa
aam
or
insl
sub
push
incl
or
adc
loop
pop
aam
pop
sub
ret
out
and
lea
out
sar
fisttpl
test
pop
lock
adc
mov
cmp
mov
mov
ret
or
mov
push
aad
out
int
push
push
mov
add
out
outsl
sbb
mov
lods
pop
jge
mov
push
sub
push
loop
or
and
mov
pop
std
fcmovbe
jle
or
call
mov
cmpsl
push
inc
xorl
sub
xchg
pop
sarl
lea
lods
aam
mov
orb
lods
insl
mov
sbb
cmp
pop
insl
mov
push
inc
rcrb
mov
movsl
push
mov
dec
xchg
jno
out
mov
loope
fisubs
dec
pop
lock
testb
xchg
ret
mov
mov
xor
pop
inc
mov
sbb
sub
cwtl
sbbb
icebp
rolb
xor
aaa
inc
push
pop
iret
out
or
add
mov
add
add
or
je
cmc
pop
push
and
push
hlt
fs
bound
dec
rolb
ss
and
rcl
push
sub
add
pushf
pop
pop
aad
sbb
fdivrl
cmp
mov
or
mov
inc
mov
pop
xor
dec
push
test
addr16
or
sahf
sbb
scas
ret
add
sti
pop
cmp
push
jb
and
rcrl
jle
pop
cmp
push
push
cmpsl
mov
pop
fcoml
rcrl
cmp
sar
insl
push
sub
sub
mov
and
adcl
pop
ret
aas
mov
cs
jg
cli
aaa
xor
mov
mov
push
ja
push
inc
rorb
aaa
mov
in
adc
in
inc
outsl
lcall
xchg
push
fwait
call
repz
mov
mov
inc
pop
out
imul
sub
jle
out
cmp
jmp
xchg
fdivs
inc
jno
nop
lahf
xor
sub
mov
sbb
adc
push
sbb
pop
ds
lds
insl
scas
push
mov
fistps
popa
sub
sbb
lret
ljmp
enter
add
pop
cmpsl
call
mov
dec
shrb
adc
xchg
inc
mov
sub
in
add
xchg
lock
out
shl
add
or
jge
and
adc
negl
mov
adc
andl
xchg
aam
jle
mov
add
js
or
lea
mov
jge
fnstenv
repz
ds
into
add
popf
inc
cmp
inc
mov
add
jle
xor
mov
mov
xor
mov
sub
dec
jne
pop
pop
cmp
adc
pop
mov
ret
inc
dec
imul
movsl
sbb
and
pop
jo
xor
inc
jmp
add
jecxz
es
add
fisttps
lcall
shll
push
adc
fdivr
cmpl
jne
mov
xlat
add
in
xchg
add
sti
sub
inc
xor
sub
int3
clc
fwait
stos
clc
flds
inc
roll
add
push
js
jbe
fs
xchg
inc
out
std
xlat
adc
dec
clc
and
dec
dec
mov
out
cmpsb
aaa
or
xor
imull
sbb
stos
mov
shll
jb
add
movsl
mov
xchg
ss
push
sarl
jo
sbb
jle
sbb
sbb
xchg
pop
sbb
les
push
mov
mov
lahf
push
pushf
cmp
dec
cs
jb
loope
aad
in
rcl
hlt
inc
imul
pop
pop
lahf
clc
cmp
xor
sub
pop
stos
push
nop
pop
dec
sub
mov
mov
add
shrl
adc
push
adcb
popa
mov
das
lds
push
in
outsl
lea
lods
pusha
shrd
inc
nop
xchg
mov
jne
add
mov
mov
les
insb
xor
push
mov
sub
mov
ss
xor
mov
arpl
xlat
pop
outsl
fisttpll
daa
ret
arpl
ljmp
mov
mov
add
xchg
sbb
inc
test
lret
pop
test
mov
lods
imul
daa
xchg
push
add
std
pushl
xchg
mov
xchg
popf
scas
add
test
dec
xor
push
pop
and
es
add
inc
push
add
push
sti
add
mov
fs
jae
loope
inc
or
xor
xchg
sub
inc
dec
aad
scas
lds
mov
mov
push
xor
xchg
or
mov
cmc
or
pop
mov
pop
xor
hlt
cli
sub
push
jae
outsl
inc
insl
test
xlat
dec
xor
mov
mov
add
lock
xor
push
jb
cmc
add
mov
cmp
stos
push
roll
clc
xor
inc
stos
pop
mov
mov
pop
sub
leave
pop
mov
xor
sbb
sub
orb
test
addl
mov
insb
insl
imul
push
xor
or
push
sub
add
mov
pop
sbb
ret
push
enter
mov
jle
mov
testl
cmp
sub
fmuls
inc
jno
and
fnstcw
iret
mov
test
rcl
lcall
aas
sbb
lock
mov
out
inc
and
inc
or
fiadds
push
jmp
subb
aas
shlb
xchg
inc
dec
mov
sbb
xor
mov
mov
sbb
dec
push
lahf
shrb
mov
leave
or
and
shlb
mov
pusha
push
lods
sar
lock
fcomps
aaa
rorl
adc
push
mov
add
or
cmc
and
inc
xchg
mov
push
movb
or
jmp
mov
pop
cld
punpckldq
jne
or
cmpb
push
mov
fld
arpl
in
dec
fscale
dec
xlat
mov
xor
pop
lock
test
push
lea
cltd
clc
hlt
and
pop
aam
or
inc
mov
or
sbb
cmp
test
or
ljmp
mov
add
fst
adc
sub
in
aaa
mov
xor
pop
pop
push
repnz
sub
imul
clc
cli
xor
movsl
sub
fcomps
cmp
xchg
pop
imull
dec
or
jo
sbb
pop
mov
push
dec
movsl
lea
dec
stos
adc
sbb
dec
dec
insb
adc
push
es
push
or
shrb
add
roll
mov
push
add
push
push
adc
testb
pop
xchg
rcrb
test
mov
push
ss
movsl
and
lret
xor
mov
sub
imul
add
sbb
les
push
popf
mov
push
gs
and
sub
or
pop
mov
stos
xchg
in
cli
outsl
aaa
push
ss
xor
push
mov
xor
andl
stos
adc
and
imul
loope
xchg
lods
xor
mov
cmp
mov
mov
mov
pop
lahf
clc
mov
shrl
dec
inc
xchg
xchg
mov
das
cmp
and
mov
fwait
mov
and
or
decl
fsts
mov
fnstcw
int3
lods
or
add
push
sub
jp
inc
push
sub
lods
cld
shll
lahf
or
jns
clc
sti
les
sub
xchg
xchg
test
mov
mov
in
cld
or
imul
sub
aad
imul
gs
push
adc
lret
cmpsb
int
fiaddl
pop
and
das
mov
int
aad
mov
push
mov
stos
repz
or
mov
pop
imul
adc
dec
lock
or
lods
inc
and
int
inc
stos
mov
add
cld
lock
or
inc
gs
mov
and
jb
or
sub
repz
cs
pop
insl
aam
movl
mov
cmpsb
cmp
jle
cmp
inc
xor
mov
bound
jmp
lods
or
jns
add
sub
gs
mov
or
xor
out
add
sub
test
ds
pusha
or
xor
aam
push
and
sub
jg
sub
jo
dec
mull
mov
lock
test
jl
jno
orl
sub
pop
mov
cmp
cmp
mov
ja
roll
rcrl
test
mov
sahf
pop
test
and
cmp
scas
cmp
cltd
cli
pop
pop
jb
test
addl
push
in
lods
xor
mov
xlat
jg
jae
push
call
cmp
rolb
sub
insl
div
enter
pop
lds
xchg
jb
jb
push
rorl
clc
sbb
test
sbb
jg
outsl
mov
adc
and
add
dec
push
imul
sbb
ja
adc
push
ret
and
pop
imul
addr16
push
mov
sub
test
mov
add
int3
aad
subl
adc
jnp
xchg
test
andb
sbb
mov
subb
add
jbe
sub
andl
or
rcrb
jbe
mov
roll
jle
mov
cmpsb
push
mov
mov
sti
mov
sub
or
fists
jecxz
aam
sbb
je
aaa
loopne
add
std
cmpsl
jmp
fildll
sbb
mov
jo
outsb
xor
adc
fisttpll
xor
push
test
inc
jae
and
fists
push
mov
das
aas
arpl
rcrb
push
sub
sbb
int
sub
test
inc
sub
iret
dec
jb
push
rcll
xchg
pop
adc
lret
or
pop
bound
xchg
jle
test
cld
and
xor
inc
gs
dec
dec
push
sub
mov
or
push
or
cmp
cmpsb
pop
in
outsb
aas
std
mov
push
mov
jbe
mov
inc
jno
ret
subl
mov
in
mov
sub
dec
dec
cmp
cmpb
cmp
pop
outsl
sub
repz
mov
lods
mov
add
sub
cmp
insl
cltd
sub
push
push
inc
stos
xchg
or
inc
test
dec
push
jle
les
mov
mulb
or
push
icebp
insl
add
push
les
or
and
push
pop
icebp
adc
fmuls
xchg
mov
outsb
mov
inc
daa
idivl
jne
and
sbbl
pop
insl
and
movsl
fadds
or
pop
push
push
jo
fdivl
clc
cmp
xor
cwtl
aas
sbb
mov
dec
or
pop
and
jns
cmc
loopne
loop
les
dec
outsb
adc
rclb
cli
cmp
dec
sbb
lret
sub
jp
fsubrl
data16
dec
pop
adc
push
imul
inc
and
jmp
jl
xchg
mov
add
fildl
hlt
pop
imul
add
jae
addb
dec
mov
add
call
add
inc
xchg
jo
lods
cmp
fidivrl
into
dec
mov
pop
xor
push
fdivrl
inc
scas
sbb
add
pop
mov
scas
rcrb
jecxz
xor
sub
cmp
es
sbb
mov
xor
testl
add
pop
les
mov
mov
cmp
xchg
add
adc
add
aam
mov
ja
ret
mov
add
andl
je
inc
sbb
out
ljmp
jl
jns
xchg
add
clc
mov
cmp
add
lds
and
xor
lcall
jp
mov
jmp
jge
out
popf
sub
cmc
adc
leave
sbb
sbb
lret
mov
addr16
add
out
jg
testl
pop
push
adc
lods
loopne
mov
jns
lret
fmuls
xchg
and
and
outsb
xor
xor
pop
rcr
xor
mov
jge
and
ficoms
insl
add
les
out
pop
in
test
imul
in
inc
lret
int3
xchg
adc
in
add
out
ret
add
sbb
ljmp
jmp
inc
add
movsb
push
iret
jo
jo
js
dec
cld
sub
pop
sbb
into
sarl
pushf
dec
daa
int3
fcomps
add
or
out
sub
data16
add
testl
ja
enter
or
pusha
adcb
out
lret
push
rcrb
mov
dec
add
inc
les
sub
lds
rolb
xchg
shll
or
insl
sbb
pop
andl
lods
mov
jl
pop
mov
cmc
or
icebp
arpl
and
loopne
cmp
inc
mov
sub
mov
mov
xor
imul
mov
or
decl
mov
imul
add
mov
jbe
jle
xchg
xor
cmp
pop
mov
clc
movmskps
stos
add
push
adcl
cmp
inc
sbb
xchg
jb
and
outsl
scas
popf
lods
or
xchg
push
popf
lods
test
test
pop
adc
adc
test
xchg
sub
add
shll
sub
pusha
or
fsin
cmp
xchg
mov
insl
add
shrb
jle
inc
test
cmp
repz
lahf
and
ret
mov
lods
mov
inc
push
loop
shrl
cmp
pop
rcrl
xor
sbb
add
cmp
cmp
cmp
adc
cmp
mov
clc
cmpsl
push
add
push
or
test
fisubl
push
or
pop
inc
mov
pop
inc
cli
sbb
pop
mov
jae
pop
bound
pop
es
dec
mov
mov
imul
movsl
dec
lock
lahf
add
and
das
ds
cltd
add
add
cli
in
lods
sub
popa
pop
mov
jle
mov
sbb
and
bound
sub
into
out
adc
xor
jne
sbb
aam
inc
jge
pop
xchg
lods
shrl
pop
or
stos
nop
mov
pop
and
bound
push
sub
popa
push
inc
or
cmp
sub
sbb
pushl
xchg
cmp
adc
addb
pop
push
sub
push
push
bound
xor
bound
iret
xchg
test
cmpsb
push
dec
mov
les
test
cmp
mov
sar
mov
insl
sub
and
mov
add
clc
shrl
adc
mov
les
mov
push
mov
or
pop
mov
fimull
jmp
mov
or
and
push
imul
adc
push
lods
sbb
xchg
add
pop
fisubs
ljmp
lea
push
lods
or
dec
mov
inc
pusha
dec
mov
mov
push
aad
push
jo
inc
cmp
ljmp
scas
push
cmp
andl
mov
and
mov
in
jg
mov
insb
pop
push
stos
aam
cmp
push
mov
pop
outsb
ss
push
sub
cmp
pop
ret
or
dec
aam
shll
mov
je
xchg
and
push
xor
aam
jne
ret
cli
pop
imul
subb
ret
adc
ret
outsl
addb
or
test
adc
stc
push
push
arpl
lea
dec
in
lahf
or
xchg
notl
dec
pusha
push
or
add
xchg
rorb
test
cmp
mov
ss
out
cmc
pop
aas
and
insb
lahf
push
push
pop
pop
mov
xchg
sub
mov
or
arpl
je
push
push
das
out
mov
lahf
xchg
adc
xchg
aad
mov
adc
inc
mov
cmpsb
test
icebp
xchg
popa
mov
pop
int3
pop
imul
jo,pn
and
das
xor
jb
inc
mov
in
adc
or
sub
pusha
xchg
popa
stos
lods
push
jle
xor
xor
mov
add
shll
dec
mov
inc
push
bound
aam
adc
cwtd
aam
in
add
inc
and
call
repz
pop
sub
dec
in
icebp
aam
push
mov
inc
in
xor
les
shlb
mov
push
or
pop
cwtl
sbbb
fldcw
mov
aam
cmpsb
inc
add
call
nop
jae
aam
sub
out
rcll
sub
in
or
and
fidivrl
test
rcll
cmpl
dec
pusha
aas
and
push
mov
lcall
call
mov
jo
fdivrp
fwait
lds
add
mov
or
add
ss
add
xor
gs
mov
nop
push
mov
shl
add
andnps
add
not
jo
add
pop
out
daa
jbe
add
lea
xor
push
mov
inc
lock
sub
mov
and
sti
xor
sbb
xor
icebp
adc
pop
clc
and
mov
push
adc
imull
addr16
and
inc
cmp
xor
add
ljmp
cmp
jne
test
or
lds
xor
adc
test
jge
aaa
push
cltd
ja
gs
pop
call
mov
std
push
adc
push
pop
ret
add
mov
out
lahf
add
xor
bound
icebp
sub
and
test
in
jae
push
mov
inc
jp
dec
xor
pusha
jo
test
test
add
scas
xchg
mov
mov
xchg
dec
inc
add
outsb
or
pop
mov
ja
or
xor
and
mov
push
shlb
or
call
jae
adc
ret
testb
aas
and
add
notb
roll
mov
push
clc
insb
andl
rcll
cmp
lods
sar
cmpsl
ds
sbb
stos
shr
or
sti
sub
xchg
mov
or
xchg
repnz
mov
stos
les
in
pop
mov
push
mov
scas
rolb
in
xor
xchg
or
jb
outsl
xchg
sub
loop
test
mov
jno
fisubs
stos
aad
or
inc
lods
push
fwait
mov
outsl
movsl
sbb
mov
lahf
mov
push
stos
add
pop
lock
shlb
les
cmp
jo
in
push
jb
or
adc
push
loop
lea
fsubl
iret
fistpl
add
dec
push
sub
in
mov
ret
adc
mov
and
js
mov
mov
idivl
sub
mov
inc
stos
inc
js
sbb
pop
stos
subb
pop
out
add
les
es
add
or
pop
mov
dec
xor
test
pop
push
xlat
push
rcrl
push
loop
xchg
in
fbstp
jmp
mov
cmpsb
xor
inc
or
addl
or
or
pop
adc
xchg
push
pop
imul
ljmp
adc
mov
arpl
jl
sbb
lods
in
adc
push
cmp
adc
sbb
aas
imul
mov
inc
les
lods
inc
sub
shl
test
int
stc
adc
push
lcall
jo
mov
dec
divl
push
pop
inc
pop
mov
push
pop
sub
and
or
js
lea
or
mov
push
jno
aam
push
push
orl
push
sub
jb
and
mov
cmp
lahf
xor
pop
sub
jno
jno
hlt
sub
xchg
sub
or
xor
lcall
xchg
mov
inc
insl
and
rclb
test
xchg
mov
jb
xlat
or
add
ret
arpl
push
pop
and
sub
xorb
dec
adc
push
adc
inc
imul
es
dec
lar
jg
jmp
mov
sub
and
clc
and
sar
fisttpl
add
sarb
es
repnz
or
mov
xor
inc
str
and
outsb
jbe
inc
adc
in
and
push
ss
popf
xchg
lods
in
in
sub
pop
push
stos
push
clc
ret
cmp
or
mov
xchg
inc
cmp
shr
or
adc
cmp
aad
outsl
mov
add
dec
sahf
add
jmp
fst
enter
cmc
lods
or
stos
loop
and
add
push
testb
shlb
fsts
pop
hlt
pop
jbe
fbld
mov
mov
icebp
addl
out
ficoms
movsb
nop
sahf
dec
int3
push
cld
sub
ss
insb
or
test
stos
sub
test
rcrb
push
push
jb
xchg
daa
dec
or
ficoms
add
es
fbstp
scas
outsl
repz
test
pop
rorl
filds
push
pop
and
out
in
sti
andl
mov
loopne
mov
call
add
shll
xor
andl
jge
inc
inc
inc
push
xchg
js
or
aas
ss
inc
sbb
mov
loope
mov
jg
jmp
adc
ja
and
mov
rorb
pushf
add
adc
cmpsb
insb
pop
pop
fsubrs
inc
adc
sbb
adc
enter
sarb
fmuls
filds
adc
call
fs
les
mov
ret
inc
adc
cmc
or
orb
sti
addr16
in
les
js
out
dec
sub
jno
mov
popf
pop
add
std
enter
sbb
and
rcrb
mov
movsb
shlb
lcall
call
add
out
mov
aam
data16
es
add
jne
or
js
clc
fistpll
sbb
out
push
or
sbb
or
xorb
mov
inc
imull
add
or
sti
cmp
or
pop
xor
lcall
test
mov
xchg
js
pusha
inc
mov
xlat
jno
push
pop
mov
sub
stos
push
mov
and
mov
inc
lods
mov
or
add
sti
rolb
xor
pusha
adc
add
outsl
test
sub
ljmp
cmp
jmp
add
push
push
mov
stos
xchg
push
mov
test
mov
push
or
mov
add
add
scas
adc
add
adc
in
jge
lahf
push
push
jae
pop
ret
cmp
lods
adc
inc
mov
xchg
stos
inc
aaa
sbb
aaa
rorl
mov
or
orb
xlat
add
add
sbb
aad
add
dec
xor
pushl
mov
clc
add
add
ret
adc
push
or
lods
subb
shr
pop
addl
test
nop
lea
add
mov
movsl
or
mov
rolb
push
jle
cmp
add
xchg
mov
jg
aam
fldl
movsl
xor
out
and
in
scas
mov
sbb
sbb
imul
lahf
fcompl
adc
and
push
lock
push
shll
or
add
loope
loop
jb
xchg
in
iret
cli
sahf
add
jmp
repnz
sbb
sub
push
xchg
inc
sbb
or
adc
enter
jo
scas
rol
dec
adc
push
sbb
in
jmp
or
andb
icebp
add
sbb
mov
fisubl
mov
xchg
dec
push
frstor
enter
jmp
and
xchg
movsb
sahf
xor
jno
mov
sub
jl
or
xchg
popa
push
inc
cmp
xor
cmp
sbb
repnz
cmp
sbb
or
adc
push
xor
mov
fdivl
pushf
and
data16
lods
adc
hlt
xor
mov
push
inc
out
xchg
add
jmp
mov
in
sti
or
fucom
popf
out
xchg
les
add
clc
cli
mov
into
mov
push
lock
adc
sub
mov
add
or
scas
push
jns
add
imul
dec
or
xchg
stos
xlat
sarb
and
fstps
sbb
push
push
add
loope
sbb
lock
push
aam
xchg
sti
lock
cld
adc
add
dec
aaa
and
ds
orl
adc
xorl
inc
xchg
popf
outsl
add
cli
shll
pop
dec
push
jle
sub
out
cmp
push
push
inc
pop
pop
or
inc
lods
stos
dec
mov
stos
add
push
or
mov
inc
and
sub
jae
pop
sbb
jge
push
sub
push
not
xchg
lods
xchg
mov
cli
xor
inc
lea
add
stos
adc
sub
or
xchg
inc
sub
dec
clc
adc
movsl
pop
movsl
add
loopne
xchg
adc
mov
stos
test
mov
test
mov
repz
orb
shr
inc
mov
add
pop
ffree
sbb
bound
mov
test
xor
inc
pop
sub
push
ror
rolb
and
dec
negl
push
ljmp
test
cmpsb
mov
inc
mov
or
test
jae
inc
cmp
mov
push
add
shlb
into
clc
test
sbb
rclb
xchg
and
mov
and
rcrb
xor
rcl
jecxz
inc
fwait
pop
fdivr
ja
scas
mov
inc
inc
adc
jmp
pop
sub
pop
incb
dec
fnstsw
negb
xor
sub
sbb
mov
or
call
subb
int3
mov
test
ret
clc
es
push
lret
lea
sbb
sbb
push
xchg
and
lret
push
call
pop
rcr
ret
add
int
mov
add
sbb
add
inc
bound
pop
aad
pop
aam
inc
xor
negl
dec
loop
xchg
adc
or
dec
ljmp
gs
iret
cvtpi2ps
adc
je
lock
ret
xor
dec
std
and
inc
cs
add
adc
inc
lods
inc
or
fistl
sahf
sbb
sub
inc
mov
fwait
mov
mov
cmp
add
in
add
mov
pop
mov
push
popf
add
mov
pushf
add
enter
dec
mov
ljmp
pop
sub
incl
mov
shlb
mov
rcrb
xchg
mov
cli
inc
jo
popa
mov
shll
das
or
xor
les
gs
dec
mov
add
lods
pop
mov
push
lods
movb
push
add
lods
mov
dec
xchg
dec
fsubrl
sarb
cmp
outsb
push
jle
pop
mov
lahf
fimuls
shrb
insl
dec
inc
test
addb
jno
and
push
xchg
cmp
lea
subb
push
pop
mov
cwtl
sti
test
cmp
adc
xor
cmp
jecxz
mov
dec
pop
ja
sub
sbb
insl
rclb
pushl
orb
in
cmp
push
pop
push
push
sub
fimull
mov
xor
shlb
dec
add
inc
mov
push
jge
test
sub
mov
clc
das
pop
sub
inc
add
mov
jno
mov
shlb
ret
xchg
clc
popa
test
outsl
mov
and
incl
or
insl
imul
pop
sub
aam
jp
sbb
fs
mov
aad
push
daa
mov
pop
test
out
rorb
pop
imul
mov
mov
and
or
cs
add
dec
lahf
jne
icebp
call
mov
imul
cmp
cmp
jns
pop
mov
dec
xor
or
lods
in
lods
add
pop
subl
jnp
inc
imul
hlt
mov
subb
or
rolb
inc
cmp
sbb
xor
xor
cli
outsb
mov
pop
outsl
inc
call
ss
cmp
es
inc
rorl
in
rol
jp
sbb
aas
add
xorl
dec
dec
jo
sbb
push
and
adc
or
xchg
mov
clc
mov
jbe
add
jno
jmp
int
insb
in
sub
adc
scas
movsb
lcall
pop
leave
mov
mov
xor
lods
push
inc
aam
imul
push
mov
test
rep
cmp
push
stos
out
add
push
add
lods
pop
pop
loope
mov
inc
nop
ret
adc
jle
icebp
repnz
imul
jmp
xchg
js
pusha
add
add
repz
xor
adc
inc
pop
jmp
std
mov
inc
mov
icebp
push
cmpsl
in
inc
lods
adc
dec
rclb
lds
ret
pop
add
sub
divb
jno
loop
lods
mov
arpl
sbb
adc
inc
popa
cli
or
loop
push
jle
scas
and
sub
inc
mov
mov
jle
and
lahf
or
sbb
xchg
lea
adcb
xchg
je
push
and
ss
ljmp
outsb
and
or
lods
adc
jnp
or
or
in
cmp
jb
pop
addr16
das
xor
fcomps
out
mov
dec
push
imul
push
sub
xchg
and
push
jno
dec
sub
jno
mov
movsl
mov
push
sbb
inc
aam
std
outsl
xchg
clc
sti
das
fistpl
repnz
inc
es
adc
push
mov
rorb
sub
mov
push
cwtl
xor
bound
cwtl
push
jmp
arpl
rcl
add
mov
data16
jle
cli
xor
sbbb
shrl
inc
dec
add
adc
lock
inc
xor
insl
inc
lods
addr16
pop
cld
daa
mov
pop
inc
movsb
and
adcb
dec
cltd
adcb
inc
call
add
jns
mov
cmc
xor
push
imul
repz
iret
inc
mov
dec
xchg
or
lea
xchg
gs
pop
insl
push
xchg
add
add
or
adc
jbe
dec
xor
movsl
jo
rcrb
lcall
subb
lods
xchg
cmp
xchg
test
xor
pusha
push
push
push
fisttpl
test
lret
push
xchg
xchg
inc
ljmp
mov
or
mov
pop
adc
mov
mov
je
test
push
inc
sbb
lahf
push
mov
and
sub
mov
inc
das
xchg
push
push
add
imul
cmp
hlt
icebp
mov
mov
in
or
mov
incl
mov
mov
xchg
adc
pop
or
pop
fistpl
lods
out
popa
add
mov
lods
push
outsb
jecxz
imul
imul
inc
adcl
inc
cmp
sub
mov
inc
rcrl
insl
pop
imull
sbb
sbbb
mov
lea
jno
dec
test
add
sbb
insl
push
rclb
push
xchg
jmp
ds
movsl
push
mov
or
inc
add
inc
cmp
cmpb
pop
mov
or
sub
arpl
xor
sub
je
and
sub
insl
xchg
jae
mov
pop
jb
adc
mov
mov
es
sub
dec
jno
jb
xor
push
pop
pop
mov
outsb
push
pop
movsl
sub
imul
jle
sub
sbb
add
mov
mov
lods
mov
iret
mov
mov
shlb
or
mov
das
push
icebp
or
jae
lahf
mull
push
addb
lods
sub
hlt
in
mov
popl
jae
dec
mov
push
outsl
ja
pushl
rcrl
mov
add
adc
add
test
xor
push
xor
adc
dec
ljmp
inc
sahf
pop
or
sbb
inc
roll
pop
nop
int
mov
mov
roll
fcmovbe
mov
or
inc
rol
jnp
or
pop
adc
sub
cld
fistl
and
fiaddl
pop
test
outsl
ret
mov
insl
lods
mov
adc
push
or
test
push
dec
push
add
mov
add
fidivs
sub
outsl
cmp
push
sub
cltd
into
jp
lods
data16
clc
xor
or
or
mov
inc
mov
shlb
inc
pop
mov
adc
lods
iret
adc
test
or
aaa
lret
arpl
pop
or
cmp
lods
test
xor
inc
out
sub
xchg
mov
stos
and
cmp
inc
jne
dec
std
adc
pop
outsl
jb
jle
sti
or
mov
jo
inc
test
std
jno
mov
push
cld
adc
xchg
dec
push
stos
into
cmp
mov
bound
mov
sbb
test
in
adc
roll
fists
add
push
push
mov
ret
ficoml
mov
mov
push
push
pop
loop
rolb
inc
add
cmp
shr
or
push
push
test
xchg
lods
push
mov
stos
les
cli
xor
scas
dec
lret
mov
add
int3
mov
movsl
stc
fcmovnu
push
je
jnp,pn
cmp
cmp
sbb
cld
pop
mov
xchg
pop
pop
dec
mov
mov
jns
test
pop
mov
testb
pop
insl
jmp
les
cwtl
cmp
xchg
sub
lods
mov
leave
push
push
stos
adc
or
sub
pop
or
mov
cmc
mov
sub
jne
das
aam
cmp
mov
aaa
mov
xchg
pop
les
inc
adc
jmp
enter
stos
sbb
sarb
mov
dec
mov
mov
imul
or
cs
lea
insl
push
icebp
popa
ret
mul
inc
stos
mov
jl
les
addb
ja
mov
sub
pop
xor
rorb
mov
mov
nop
mov
pushf
fbld
stos
mov
clc
mov
sub
jle
adc
inc
mov
fdivp
jmp
enter
cwtl
push
fldt
pop
les
lret
and
ss
pop
mov
mov
fadds
pop
jp
jle
push
subl
mov
push
add
aam
sub
inc
xor
inc
mov
jb
test
sub
pop
jmp
out
mov
rcr
fisttpl
lods
inc
mov
lock
pop
add
inc
pop
and
out
or
sub
fidivl
push
mov
add
xchg
sahf
sbb
aam
sbb
pop
push
das
add
add
xor
sub
cs
push
fimull
cwtl
xchg
adcl
push
jp
das
xchg
fisttps
mov
popf
stos
ss
lods
out
ret
cmp
adc
add
cmpsl
add
fisubrl
ja
sbb
int3
cmp
cld
pop
add
mov
cmp
xchg
sub
dec
xor
inc
or
dec
lods
subl
std
mov
or
pop
out
test
insb
insb
inc
pop
fidivl
sbb
ret
movsl
pop
ljmp
inc
test
jmp
ss
jnp
dec
inc
test
out
adc
jb
loopne
mov
stos
or
mov
or
sub
loope
pop
imul
in
cwtl
xchg
push
mov
and
and
stos
and
dec
xchg
sub
test
enter
lcall
shll
mov
xchg
add
sub
cmp
sub
and
xor
push
mov
imul
push
adc
sbb
lods
mov
lea
pop
ljmp
xor
clc
test
sub
pop
les
and
imul
pop
inc
inc
out
push
loope
leave
push
xacquire
insl
es
pop
add
push
inc
and
push
mov
push
lahf
psubd
pusha
call
dec
inc
loop
fnsave
dec
pop
fwait
mov
cmpsl
add
inc
call
mov
sbb
adc
hlt
lcall
inc
mov
aad
sbb
incl
dec
adc
add
testl
fcomip
ficomps
pop
adc
add
push
fcmovnu
loopne
or
rcrb
inc
or
mov
xor
imul
shrl
push
add
int3
push
je
cmp
inc
push
jb
dec
insl
sub
sbb
sub
jno
das
addb
sarl
dec
aaa
lcall
jb
and
push
cmpsl
xchg
sbb
jo
add
xor
push
inc
js
or
xchg
push
xorb
push
mov
stos
shrb
test
sbb
ret
add
test
lods
test
adc
enter
mov
loopne
push
outsb
add
lods
and
clc
rcr
add
hlt
and
rorl
popa
ucomiss
popf
or
or
mov
mov
testl
xorl
arpl
xchg
les
js
pop
and
mov
movsl
data16
mov
mov
mov
je
fmuls
cmpsb
push
xchg
sarl
mov
inc
xchg
cmpsl
mov
fists
lods
inc
scas
xchg
push
cmp
xor
cltd
pop
arpl
push
push
sbb
xchg
movsb
sarl
mov
inc
dec
xchg
lea
in
ljmp
cmpsb
shl
fimuls
push
mov
mov
fs
and
in
incb
decl
test
mov
dec
mov
fists
clc
push
je
sub
psubw
pop
cmc
sub
lea
mov
add
push
sub
lds
add
sub
jo
popf
adc
add
fiaddl
loop
pop
mov
lds
adc
adc
or
mov
pop
adc
fistps
cmpsl
rcr
sbb
adc
mov
neg
sarl
dec
fisttpll
jne
inc
loope
sbb
pop
stos
sub
sbb
sbb
pop
and
dec
push
push
sti
arpl
fcoml
call
aaa
jbe
mov
inc
addb
mov
mov
cs
iret
xor
les
sbb
mov
add
adc
jmp
test
fnstcw
rolb
jle
push
es
cmp
cwtl
scas
outsl
shlb
adc
cld
mov
ss
mov
pop
mov
cwtl
push
adc
push
xor
jae
cmp
sub
hlt
fadd
scas
ss
pop
jnp
sbb
mov
xlat
dec
cmp
mov
dec
push
out
adc
movsb
stc
or
push
or
les
pop
adc
xor
sub
inc
push
lea
xor
inc
call
add
mov
push
mov
push
test
movsl
enter
pop
push
imul
cmp
fisttpll
nop
addb
repz
mov
xchg
xor
mov
dec
pop
lods
mov
push
imul
push
int3
shlb
push
add
sbb
push
cmp
xchg
pop
xor
pop
movsl
addb
daa
fldenv
lcall
int3
push
pop
push
test
mov
ficoml
push
mov
scas
pusha
nop
andl
or
add
loopne
imul
sbb
pop
add
pop
in
xor
xchg
stc
stos
lahf
enter
push
push
xchg
mov
jg
jo
jle
mov
sti
xchg
out
insl
xchg
cld
mov
mov
push
sbb
cmp
xchg
pop
lret
adcl
sub
sub
add
or
mov
push
sub
sbb
sub
jb
xchg
xchg
test
movsl
lock
mov
jg
dec
or
push
les
add
out
push
test
add
push
rcl
or
or
adcl
fcmovbe
push
test
and
dec
inc
sub
outsb
pop
jmp
inc
imul
cmc
push
add
cli
and
push
xor
sub
pusha
repz
push
imul
jo
push
xor
repnz
adc
cli
jo
xor
inc
sbbb
or
mov
mov
test
and
push
pop
enter
sbb
sub
mov
lcall
orb
rcrl
jle
mov
cmp
pop
jle
mov
and
iret
pop
aaa
add
and
mov
sub
or
in
mov
cli
shl
or
lock
pop
dec
mov
or
loop
or
es
mov
dec
xchg
popl
pop
push
xlat
jns
inc
sbb
jmp
inc
popa
imul
leave
and
sub
inc
test
adc
dec
outsl
cmp
jno
adc
push
add
add
cmp
push
sub
dec
lahf
adc
push
lret
int
imul
add
sub
fisubrl
test
push
dec
adc
mov
pusha
jle
pop
push
sbb
jno
or
cmp
popa
and
add
mov
sub
add
lahf
fsubrs
xchg
push
jno
dec
cmp
ret
adc
ret
inc
imul
xchg
sub
pusha
sub
clc
add
xchg
add
add
sub
push
mov
les
mov
inc
movl
mov
and
sub
shrl
test
inc
xchg
jb
or
push
mov
push
sub
subb
xor
sbb
shll
sub
ret
ret
mov
loope
xchg
test
lods
jg
sbb
sahf
dec
fstl
ljmp
int
rolb
mov
push
and
incl
adc
loop
or
inc
sbb
add
jmp
jecxz
les
aam
lea
xchg
cmp
popa
outsl
push
inc
aam
pop
stos
cmp
and
aam
jp
idivb
pop
test
ljmp
inc
push
stos
push
cmp
push
push
ljmp
popa
push
mov
push
jle
jb
mov
test
rcpps
int3
mov
sub
pop
cmp
pop
mov
cltd
out
and
mov
es
xchg
pop
sub
clc
jmp
test
and
adc
and
je
add
add
sub
fcmovnbe
ss
add
pop
mov
add
int
sahf
jmp
pop
outsb
xchg
ret
lods
xchg
les
mov
xor
fwait
bnd
sub
arpl
mov
mov
aaa
test
jbe
inc
imul
sbb
or
lea
jo
mov
lods
adc
cmp
test
inc
and
pop
push
sbb
push
xor
or
push
dec
jne
clc
mov
lret
xorl
repnz
mov
fistpl
adc
mov
movsl
push
sub
add
jmp
scas
push
add
xchg
mov
lea
and
push
xchg
sbb
xor
mov
sub
mov
adc
lahf
lahf
push
or
mov
lea
and
lea
and
sbb
mov
and
adc
push
mov
and
add
inc
pop
xchg
push
xor
or
and
mov
ss
dec
xor
aad
mov
push
push
sub
cmp
rolb
xchg
lea
mov
mov
movsl
mov
pop
and
jno
lods
mov
inc
sahf
enter
inc
sub
push
rcll
sub
imull
les
push
push
loop
les
jbe
push
mov
adc
xor
cli
fistps
adcb
pop
lahf
mov
add
hlt
addr16
inc
mov
mov
pushf
cmpl
shlb
xor
bound
xor
aaa
and
pop
outsb
mov
xor
push
popa
iret
pop
jmp
mov
or
test
inc
lret
pop
add
inc
jmp
ror
test
out
and
push
pop
sub
xchg
mov
cli
pop
add
xchg
sub
fcmove
mov
pop
lea
inc
loop
jle
das
mov
mov
mov
setl
ss
and
stos
pop
in
lret
inc
mov
filds
cmp
mov
subb
adc
xchg
cmp
imul
add
xchg
push
sbb
adc
inc
pop
pop
js
adc
mov
fcmovbe
push
lea
sub
add
ret
les
or
inc
sub
xor
mov
add
jo
fdivl
pop
sub
aam
in
movsl
push
lret
xchg
pop
aas
aam
lock
xchg
imul
sub
pop
mov
addr16
sub
out
push
sahf
add
adc
adc
mov
mov
mov
pop
jmp
pop
jge
in
outsl
scas
ss
ret
mov
cmp
andb
xchg
adc
dec
lcall
xchg
aaa
dec
aaa
push
clc
mov
fadd
lcall
pop
int3
or
rcrl
loopne
push
dec
rcrb
and
or
in
sub
pop
jge
add
sbb
cmp
cwtl
pop
loope
push
dec
les
lds
sarb
fistpl
adc
icebp
sbb
adc
adc
inc
or
cmp
aaa
pop
lret
in
sahf
sbb
xor
add
xchg
cli
movsl
or
jp
int
or
mov
sbb
subb
mov
mov
andb
add
sbb
or
jnp
stc
xlat
out
xchg
add
add
notb
inc
and
les
mov
bound
or
jno
icebp
xchg
or
jb
jecxz
mov
aad
roll
xor
fdivrl
or
ret
stos
mov
push
lret
mov
adc
mov
mov
bound
xchg
test
inc
inc
xor
mov
jecxz
rclb
std
jg
xchg
imulb
mov
dec
add
mov
inc
cmp
arpl
ds
sbb
sub
lods
lret
mov
movsl
push
push
int
xor
xchg
not
cmp
pop
cmc
inc
mov
call
test
mov
shlb
xor
dec
sbb
stos
mov
xor
add
jns
xchg
adc
push
xchg
push
and
sub
repnz
shll
filds
inc
test
xor
xor
sbb
adc
notb
add
push
sub
add
mov
push
stos
pop
push
and
jl
insl
in
sub
mov
push
push
and
push
lret
scas
ds
rolb
push
sub
inc
push
aaa
and
push
sub
inc
mov
cmpsl
lods
jl
fldl
xchg
dec
push
sbb
and
fisubrs
push
cld
adc
cmp
mov
adc
push
adc
movb
jl
pop
pop
pop
test
aad
cmp
cmp
and
lds
popa
repnz
movsl
and
adc
xor
clc
std
das
mov
pop
test
divl
rcrl
lea
nopl
sub
stos
es
push
imul
pop
mov
stos
std
pushf
lods
and
enter
cli
in
aad
test
or
xor
sub
cmp
dec
add
or
xor
ss
push
pop
loopne
and
adc
loop
add
and
add
inc
add
push
and
jb
dec
aad
lock
jne
push
test
push
xchg
mov
push
adcb
les
movsl
dec
in
inc
mov
stos
lods
inc
mov
lcall
rcl
cmp
jle
fcomps
sbb
and
push
adc
or
pop
mov
cltd
inc
push
push
movsl
push
notl
loopne
push
or
ficoml
sbb
cmp
xchg
into
cmp
mov
xor
pop
stos
rorl
into
pop
mov
mov
mov
lahf
fnstenv
in
pop
push
sub
add
addl
and
add
xor
lret
jnp
sub
cmc
call
pop
stc
enter
shll
das
adc
fsubs
jnp
in
xchg
sbbb
inc
sub
cmpsb
cmp
sbb
pop
sahf
loopne
popf
xor
cmp
push
bound
cmc
inc
ds
push
adc
sub
jp
out
out
push
jl
mov
mov
push
outsb
adc
icebp
clc
lods
aam
cltd
sub
imulb
xchg
and
sbb
aaa
ret
fildll
call
add
push
push
jb
sbb
push
adc
call
dec
dec
repz
push
je
mov
fdivrs
adc
dec
shrb
push
inc
inc
inc
xor
mov
jle
cli
add
mov
lods
push
shlb
mov
shlb
or
jmp
push
and
jo
adc
xor
hlt
mov
bnd
dec
cmp
mov
push
fwait
jmp
in
rclb
mov
leave
sub
popa
cmpb
fwait
adc
dec
lds
stc
das
xor
xorl
mov
aad
aad
pop
rorb
adc
pusha
negb
aaa
and
mov
sub
lea
push
call
and
sarb
add
fbstp
inc
push
daa
jo
dec
sub
cwtl
jle
pop
fcomps
pop
loopne
sub
dec
mov
mov
mov
pop
into
dec
rcll
push
jns
mov
mov
repz
push
cli
ja
jbe
mov
dec
push
jecxz
mov
and
sub
mov
fiaddl
jne
push
mov
inc
test
xchg
mov
mov
cli
jb
xchg
push
and
mov
in
push
adcb
add
andb
push
add
sbb
mov
rcrl
adc
fs
mov
aas
jecxz
aad
xlat
xor
push
imul
add
push
test
lds
scas
push
subb
stos
dec
sub
in
pop
jno
xchg
out
aad
pop
xchg
xchg
xchg
subl
ret
lahf
lea
sub
lcall
addl
mov
sub
lret
inc
loope
shrb
add
mov
inc
movsl
push
mov
lret
pop
imul
push
push
add
lods
mov
pop
sbbl
pop
lods
dec
scas
fdivrs
movsl
push
mov
mov
push
test
mov
mov
dec
cli
outsl
add
push
movsl
cmp
sbbl
mov
push
lock
ljmp
divb
stc
dec
int
adc
cmp
inc
jle
sbb
hlt
add
lahf
adc
mov
stos
out
out
fimull
sar
dec
or
jo
cmp
cmpsb
movsl
fmul
mov
and
sarl
pop
add
mov
cmp
xorb
dec
aam
xor
inc
push
test
in
or
xchg
mov
push
les
shr
sbb
bound
mov
shll
sub
inc
add
mov
add
lcall
jno
mov
push
pusha
pop
hlt
lea
movsl
push
aam
push
call
decb
add
xchg
arpl
loopne
es
inc
mov
shlb
les
add
push
mov
dec
inc
mov
push
sub
mov
push
mov
adc
dec
pop
std
js
add
mov
push
dec
mov
inc
daa
xor
or
lea
xor
adc
xor
push
jle
sbb
fadds
mov
add
mov
cmp
sub
into
jno
pusha
jle
test
mov
cmp
scas
rcrl
mov
divb
and
xchg
cmp
or
rolb
lock
sub
test
adc
jle
movsl
push
aad
mov
fs
pop
lods
dec
mov
jmp
mov
adcl
inc
in
fbld
jl
and
push
mov
or
movsl
add
mov
sub
add
out
in
imul
or
mov
sub
add
movsl
pop
lret
loopne
push
or
leave
test
dec
dec
cmp
adc
jo
pop
loopne
mov
stc
sbb
sbb
inc
adc
pop
mov
add
jno
jae
cmp
pop
push
or
fwait
adc
fbstp
test
es
add
popa
leave
push
mov
cli
or
subb
jnp
subl
mov
inc
or
and
add
out
lahf
mov
movsl
push
lahf
lcall
cmc
push
pop
mov
add
insb
sub
mov
pop
push
pop
dec
or
lahf
cvtdq2ps
mov
xor
xor
and
push
or
cmp
sbb
xchg
in
insl
dec
lods
stos
insl
and
mov
jle
sub
das
jl
pop
clc
sub
sub
xchg
subl
add
mov
inc
lds
dec
dec
ja
imull
cli
into
cmp
xchg
adc
pop
loopne
pop
or
adc
inc
push
pop
mov
sub
lret
pop
push
sbb
cmp
xchg
mov
inc
popf
lods
sub
mov
mov
xchg
stc
cmp
icebp
xchg
adcl
xor
xchg
ret
insb
add
or
push
imul
aas
pop
loope
inc
inc
mov
adc
mov
adcl
cmp
ficompl
je
popa
sbb
adc
dec
in
mov
and
movb
xchg
inc
mov
daa
sub
jmp
mov
mov
and
mov
pop
ret
or
mov
sub
inc
into
xchg
stos
insl
add
mov
sti
pusha
mov
cli
sub
inc
test
jb
push
aam
adc
or
or
pop
movsb
mov
xor
jo
les
lods
jl
ljmp
add
add
push
sub
cmpsl
cmp
add
out
xchg
pop
test
xor
cmp
ficompl
pop
push
das
cmp
callw
add
dec
add
sub
or
mov
push
push
sub
or
inc
pop
mov
add
sub
mov
add
rclb
sti
and
xchg
sbb
or
les
xchg
pop
and
bound
jno
int3
sarb
inc
lods
fistpl
mov
mov
clc
filds
jp
and
mov
mov
adc
or
mov
sub
add
pop
push
adc
cld
add
adc
xor
mov
pop
sarb
cwtl
xlat
dec
jl
std
sbb
mov
add
xlat
mov
dec
shll
es
sbb
out
sub
mov
add
push
cli
pop
mov
cltd
pop
test
out
adc
inc
bound
mov
stc
rolb
jmp
mov
and
into
insl
gs
fmull
sarb
xlat
rolb
push
mov
mov
add
dec
add
xchg
inc
add
xor
push
adc
add
jne
sbb
addl
cltd
add
lds
mov
mov
add
pop
push
dec
cli
or
push
sbb
add
loop
push
xor
addr16
sarb
test
test
and
movsl
rcrb
or
inc
fs
aas
in
cld
lds
mov
add
js
inc
pop
fsubl
ljmp
lods
sbb
dec
add
inc
outsl
pop
adcb
popa
loopne
pusha
jecxz
add
sbb
and
dec
shlb
xchg
inc
xchg
mov
clc
pop
andnps
push
xor
xchg
jmp
dec
inc
enter
adc
xor
add
adcb
data16
mov
jo
inc
or
jg
roll
and
addb
les
ss
loop
test
mov
xchg
and
ds
dec
filds
pop
call
push
insb
pop
or
mov
pop
inc
sbb
shr
imul
jo
sbb
shlb
loope
out
sbb
iret
mov
int3
mov
gs
jmp
aam
push
inc
inc
sub
fwait
push
std
outsb
and
addb
mov
push
pop
js
adc
xor
add
push
or
jl,pt
shrb
jmp
inc
xor
pop
imul
cltd
mov
dec
add
push
add
or
or
add
mov
vucomiss
mov
jb
lods
push
pop
xor
popa
ret
jmp
and
add
pusha
adc
inc
fcmovbe
mov
fdivrp
dec
pushl
les
pop
insl
push
mov
fmuls
inc
mov
and
push
es
push
mov
dec
in
cwtl
fiaddl
dec
lea
sbb
jb
push
mov
mov
mull
test
test
pop
add
xor
jb
pop
jno
add
push
mov
mov
and
push
push
je
add
rolb
add
cmp
sub
push
cli
sub
xchg
jb
mov
and
adc
adc
lock
scas
push
mov
fstpt
mov
pop
xorl
addb
jmp
cmp
rcrl
test
pop
sub
icebp
cmp
pop
or
pop
mov
pop
pop
or
xor
and
mov
mov
push
lods
push
ss
pop
movsl
mov
jbe
sub
divl
loopne
inc
imul
mov
push
loopne
push
das
ret
push
loope
xchg
mov
lea
push
push
lcall
push
inc
repnz
lea
jg
jg
loop
adcb
add
cmp
xor
sbb
mov
cmpsl
dec
xchg
out
int3
xor
je
dec
push
add
add
clc
push
xor
jp
mov
cld
or
mov
xchg
into
inc
addb
decb
lock
add
jno
addl
scas
in
and
xor
pop
loope
out
loopne
loope
pusha
testb
dec
in
mov
inc
pop
jb
loope
lods
add
dec
mov
xchg
arpl
test
mov
jno
ljmp
es
inc
cmp
add
ret
cmp
arpl
cmc
fmuls
mov
and
pop
mov
mov
icebp
int3
sahf
arpl
sbb
fwait
mov
out
icebp
cmp
mov
push
cmpb
xor
jb
push
insb
js
cmc
cli
rolb
add
inc
adc
dec
fwait
aaa
test
mov
stos
mov
pop
xchg
ficomps
addb
xchg
mov
and
or
xor
sub
lea
push
or
pop
add
xchg
adc
and
movsl
sub
add
xorb
dec
rorl
lahf
adc
sbb
in
pop
pop
mov
popa
test
inc
call
xor
or
sbb
pop
mov
push
aam
pop
add
jne
pop
imul
das
ret
iret
rcl
mov
fmuls
mov
mov
lea
and
das
ret
xor
mov
addb
push
stos
push
cltd
fbstp
jb
adc
dec
adc
pop
and
add
test
and
arpl
jb
pop
add
cmp
aad
adc
les
mov
push
pop
adc
cmpsb
cmp
pop
das
fimull
dec
stc
inc
push
jg
inc
xor
xor
lock
lcall
adcb
sti
xorb
lods
push
pop
es
ret
orl
sub
and
pop
xchg
and
mov
mov
int3
push
lahf
and
das
daa
push
and
fstpl
xor
aad
jns
mov
push
xchg
daa
out
push
imul
dec
inc
mov
aad
or
pop
push
mov
in
xor
mov
and
andb
inc
jmp
notl
rorl
loop
sbb
mov
shll
in
pop
pop
inc
imul
push
mov
insb
push
pop
subb
je
add
lods
jno
cmp
lea
pop
sti
jb
cmp
andb
push
sub
mov
out
dec
icebp
push
mov
pop
and
insb
test
pop
cmp
push
push
stos
push
movsb
out
mov
push
jecxz
jb
cmp
and
pusha
pop
jg
outsl
test
movsl
stos
mov
ds
mov
inc
insl
mov
sub
pop
stos
mov
jnp
aas
adc
lea
and
mov
cmp
cld
aaa
test
ljmp
out
mov
dec
in
addl
rcl
addr16
or
repz
ss
scas
adc
fdivs
or
mov
in
lds
push
popl
dec
rcrl
push
add
and
aam
xor
cmp
rcrb
cmp
jge
pop
test
pop
inc
out
add
cs
sbb
mov
out
mov
loop
add
add
inc
adc
fstl
inc
pusha
in
std
in
lret
lods
ret
adc
jbe
xor
es
push
adc
cli
cs
or
pop
xchg
sub
sub
cmp
or
stos
in
xor
sub
jmp
jb
scas
inc
pop
aam
jge
lock
je
fbstp
or
inc
add
in
and
cmp
in
decl
jmp
and
add
sbb
leave
sti
or
and
sbb
inc
cmp
or
jge
cmp
lods
mov
in
in
mov
int3
push
and
bound
and
movsb
jo
mov
arpl
jo
mov
out
inc
std
mov
arpl
inc
dec
add
push
add
out
lds
push
in
sub
mov
loopne
mov
mov
lods
adc
jge
mov
enter
loopne
std
mov
push
clc
push
jb
aad
andb
aad
popa
fdivrs
mov
add
sbb
lock
push
outsl
jns
pop
addl
mov
adc
fisubl
xor
xor
sbb
scas
fwait
mov
sarb
or
mov
addl
add
in
decl
shll
lret
mov
jg
dec
and
dec
jmp
insl
xlat
mov
fldl
test
adc
mov
add
lea
push
mov
jp
push
push
pusha
pop
dec
cmp
adc
adcb
into
shrl
ficomps
rcrl
mov
xor
aad
mov
xchg
bound
sub
inc
add
ficoml
push
adc
movsl
add
rorl
push
insl
popf
rolb
jno
jae
jmp
cmp
xor
sti
sub
in
push
inc
xchg
cmp
jnp
mov
xchg
mov
sbb
imul
inc
mov
bound
rolb
aaa
pop
xchg
sub
mov
aaa
cmpsl
lea
push
or
and
adc
push
lret
sbb
mull
rcr
add
xor
imul
xchg
mov
jno
mov
xor
es
shrb
pusha
sub
jae
xchg
inc
inc
imul
pop
or
dec
xor
xor
sbb
pop
add
push
and
sub
adc
inc
rorb
xor
enter
call
pop
cmpsb
into
fadds
lock
push
sbb
dec
ljmp
and
mov
pop
or
lock
mov
in
rsm
aaa
add
roll
data16
addb
mov
shl
popf
rorb
add
pop
dec
inc
mov
loop
fwait
jne
dec
and
sub
push
adc
addr16
jo
jp
iret
xor
rorl
pop
add
add
jle
jne
sbb
sub
shll
xor
push
mov
xor
xor
mov
add
push
lods
arpl
aad
rolb
and
test
movsb
add
push
jae
xor
cmp
xchg
lahf
lret
xor
or
inc
movsl
fs
fadds
mov
xor
fisubs
movsb
stos
iret
lods
adc
ret
dec
aad
mov
and
jo
mov
dec
lahf
xor
rcrl
lea
out
loopne
add
adc
movsl
enter
ret
icebp
mov
aaa
and
add
xchg
push
adc
out
or
lahf
and
or
push
js
or
push
push
cmp
test
outsl
sbb
in
adc
popa
dec
scas
sub
mov
mov
push
and
cmp
inc
dec
pop
rcl
stos
cmp
add
lea
inc
sub
aam
xchg
pop
outsl
mov
sbb
pop
imul
imul
mov
pop
lea
mov
or
icebp
roll
rolb
mov
fcomps
inc
fwait
stos
and
sub
int
and
adc
dec
jmp
aam
insb
xchg
adc
cmp
mov
xchg
subb
jp
sarb
pop
fisttpll
or
ss
or
cmp
push
or
mov
sbb
subb
mov
jns
mov
inc
xor
nop
movsb
add
dec
andb
fwait
sbb
or
cmpl
loop
xor
fisubs
add
sbbb
addb
adc
adc
xor
xchg
push
mov
mov
mov
cmpb
imul
not
adc
lret
adc
cmp
addl
outsb
subl
fisubl
imul
movsb
push
loopne
xchg
xchg
adc
inc
adc
push
movsl
test
cli
mov
add
pop
mov
outsl
loop
loop
dec
rcpps
add
aad
xor
int3
xor
mov
stos
lds
add
cwtl
ljmp
adc
imul
mov
and
fs
cmpl
roll
add
jno
inc
in
mov
push
inc
stos
stos
mov
neg
mov
jg
jno
adc
shlb
shrl
sahf
in
nop
addl
orl
push
repz
push
sub
pop
inc
jl
or
inc
pop
test
lret
imul
sbb
lods
and
imul
fldt
mov
fwait
add
or
test
xor
push
mov
cmpb
sbbb
imul
jbe
adc
popf
cmp
add
mov
xor
jns
xchg
das
jb
or
test
lods
xchg
adc
add
aam
jbe
sub
inc
sbb
pop
sub
rcrb
jb
sbb
pop
outsb
sarb
gs
aaa
pop
clc
adc
pop
dec
mov
mov
scas
push
mov
fwait
inc
push
imul
pop
lods
mov
mov
cmp
int
rolb
cmp
aaa
inc
xchg
adcb
push
test
inc
mov
push
mov
adc
mov
sbb
dec
andl
lds
xchg
out
shlb
push
stc
or
xor
pop
arpl
aam
dec
cwtl
add
push
and
insl
push
insl
jle
jp
sahf
lods
add
jne
push
rclb
xchg
imul
fisubl
inc
stos
mov
mov
mov
cmp
dec
mov
sub
and
push
inc
mov
test
and
fiaddl
mov
push
loope
mov
fcoml
loop
shll
and
jl
insb
loope
push
xor
movsl
pop
inc
sub
imulb
pop
add
jle
add
sub
aam
mov
cmp
movsl
sub
sbb
push
cmp
sbb
jp
sub
cli
outsl
xchg
pop
sub
sub
int
pop
pop
rol
in
lahf
mov
jno
push
ret
mov
les
lock
mov
push
mov
sbb
sti
sub
and
jno
and
rcr
mull
xchg
mov
jnp
push
decl
hlt
and
push
sbb
adc
fisubrl
and
lahf
adcb
test
aam
jb
or
adc
xchg
enter
les
sti
jb
fildll
push
aam
or
add
mov
fs
push
daa
inc
xor
sbb
jo
loopne
stos
dec
mov
mov
pusha
sub
cmpsl
dec
gs
sbb
andps
aam
aam
in
stos
pop
dec
sbb
sbb
jb
out
push
or
add
inc
mov
and
mov
xchg
pushf
sbbb
fs
adc
dec
xchg
enter
or
repnz
xchg
adc
fcomps
mov
les
cmp
std
ret
inc
xor
in
flds
adc
jne
mov
loope
or
pop
jg
shlb
clc
mov
seto
and
add
rorb
sub
and
into
int
int3
and
int3
and
dec
lods
jne
mov
lds
and
adc
mov
jmp
and
add
or
add
push
mov
test
add
mov
add
dec
clc
and
cmp
popw
xor
push
dec
movsl
xchg
mov
mov
add
sbb
lods
sub
rolb
or
adc
mov
fmull
shlb
clc
popa
add
pop
pop
loope
mov
shl
inc
dec
inc
aam
xor
mov
mul
jg
xor
lret
test
mov
add
pop
pop
clc
insl
fsubrl
adc
imul
adc
movsl
fsubrl
and
or
xor
mov
mov
jns
mov
mov
lcall
pop
ret
pop
das
adc
sub
aam
push
add
add
xor
inc
and
sub
cmpsl
je
add
shll
mov
mov
xchg
or
lahf
dec
push
imul
xor
outsb
mov
sub
out
sub
add
aam
divl
jecxz
jb
mov
mov
push
testl
ret
sub
push
cmp
push
push
lahf
push
adcl
movsl
sub
imull
idivl
inc
push
xchg
notl
mov
inc
push
sub
mov
push
jno
test
insl
mov
mov
pop
mov
jb
outsl
les
pop
test
adcl
pushf
sbb
push
js
push
mov
cli
ret
mov
sub
stos
adc
rolb
push
lea
mov
xchg
out
cmp
mov
add
cmpsl
add
push
dec
push
xor
incl
add
sbb
movsb
aas
and
adc
push
popf
mov
cli
loope
fcmovbe
mov
cmp
or
pop
mov
push
and
jb
and
mov
mov
inc
mov
xor
or
or
dec
adcb
jmp
or
add
push
sub
pop
and
lods
mov
or
cltd
fwait
ljmp
adc
out
lea
push
rcll
ret
andb
loopne
add
pop
push
sub
jno
fldcw
dec
push
cmp
xor
rol
nop
imul
dec
insl
test
les
lret
aaa
outsl
fwait
sub
lcall
lods
push
sar
inc
repz
hlt
test
mov
sahf
enter
orl
cmp
add
out
mov
in
or
das
stos
push
addl
and
sub
mov
add
dec
push
pop
test
jno
or
xor
jbe
imul
sub
push
add
adcb
test
cld
mov
xor
dec
xchg
les
adc
and
pop
mov
push
stos
idivb
dec
or
aas
pop
pop
adc
adc
cmp
add
push
jbe
xor
inc
jns
out
or
aam
add
push
lea
lods
push
jns
sub
test
pop
mov
jns
lods
adc
dec
pop
or
pop
cs
sbb
bound
adc
testl
sub
mov
xchg
or
mov
je
push
and
sub
cmpb
mov
dec
inc
sbb
jno
out
cs
adc
dec
cmp
ret
xchg
add
fadds
subb
test
or
or
push
repnz
das
sub
mov
idiv
cmp
test
data16
rorb
sub
or
orb
insl
push
insl
mov
push
fisubl
and
test
loopne
neg
or
mov
in
aam
pop
push
add
insl
leave
push
arpl
clc
and
xor
outsl
add
push
pop
ret
cmp
mov
dec
adc
jae
rorl
mov
dec
sbb
fcmovu
pop
xchg
js
sub
cli
mov
aam
testl
pop
add
sbb
pop
cwtl
inc
out
adc
mov
push
xchg
jo
push
cmp
dec
add
inc
mov
stos
mov
cmp
idivb
or
sub
imul
test
dec
stos
mov
pop
xor
xchg
inc
stos
push
xchg
push
repnz
jb
mov
xchg
out
mov
rclb
sbb
and
bound
aad
lods
push
repz
xchg
pop
ret
xchg
outsl
or
mov
sbb
push
mov
push
aam
lea
inc
test
push
mov
lds
xchg
sub
iret
das
cmp
pop
inc
pushf
sub
adc
jb
add
inc
dec
adc
xchg
repnz
xor
push
adc
aam
sub
push
jb
push
or
mov
xor
pop
imul
push
mov
push
mov
push
rorl
sub
imul
aas
lods
adc
dec
and
lea
jo
sbb
dec
xchg
jb
adc
add
loopne
push
mov
insl
cs
cld
add
into
not
mov
push
je
inc
cld
push
adc
or
add
js,pn
inc
add
mov
sub
in
daa
push
ret
roll
cmp
ret
insb
push
test
xchg
comiss
insl
sub
add
and
aam
add
adc
xor
sub
cmp
pusha
cmp
push
inc
scas
testl
adc
pop
jb
inc
push
fisubl
imul
cmpsl
gs
and
lods
add
outsl
inc
stos
inc
or
in
fcomps
push
inc
push
jnp
sub
loope
jle
push
mov
xchg
mov
xchg
das
outsl
ljmp
or
or
pop
xchg
lods
pop
sub
pusha
mov
dec
outsl
call
mov
mov
or
or
add
insl
mov
cli
mov
push
push
pop
clc
and
inc
xorl
jle
rcrb
or
adc
in
push
add
pop
cmpsl
jle
aad
fidivl
pop
cmp
sub
push
stos
shlb
mov
push
jge
scas
test
sub
or
sub
js
xchg
pop
jo
or
lock
ficomps
mov
sbb
lahf
lods
or
push
xor
enter
movsl
sub
push
addb
push
push
scas
stos
inc
and
push
and
mov
test
stos
push
sub
sub
add
loope
les
subl
xor
cmp
push
push
lods
mov
or
insl
cmpsb
lret
push
iret
jle
push
mov
xchg
pop
fdivs
mov
and
pop
adc
or
lcall
sbbb
subb
addb
xchg
push
popf
and
fcoms
sub
rep
xchg
dec
mov
and
xlat
rorb
inc
mov
rolb
xchg
mov
pop
or
or
mov
dec
xchg
sub
dec
xor
sub
xor
scas
pop
adc
mov
mov
sub
jnp
sarb
jo
xchg
push
clc
adc
push
adc
lds
pop
push
pop
lcall
imul
cmp
sbb
sbb
mov
cs
pusha
cmpsb
sahf
or
push
xor
or
or
xchg
andb
sbb
mov
enter
mov
inc
lea
dec
rolb
outsb
mov
cmp
lcall
lods
cltd
push
imul
jb
sbb
adc
and
cld
mov
lahf
add
pop
inc
pushf
lds
mov
inc
xor
push
jae
stos
movl
icebp
sub
ret
fdiv
push
mov
popf
sbb
push
jb
test
inc
sub
fwait
test
lcall
push
adc
and
insl
or
daa
adcb
push
inc
sbbb
jmp
add
pop
mov
sub
xor
cmp
mov
jbe
les
xor
enter
mov
push
out
and
fisubrl
push
push
shrl
fistl
loopne
sub
movsb
inc
lods
add
fwait
or
mov
xorb
cli
incb
fcom
jns
sbb
repz
or
arpl
and
outsl
xchg
clc
mov
pop
or
add
or
fcompl
lea
inc
sbb
jg
xchg
lahf
adc
xor
dec
and
inc
inc
sub
testb
bound
add
and
in
cwtl
and
movb
rcrl
dec
push
insl
pop
sub
cmp
loope
add
add
push
mov
repz
fsubl
mov
in
call
fsts
pop
dec
lock
sub
push
nop
aas
aaa
unpckhps
inc
cmp
add
adc
mov
adc
jne
sbb
push
mov
xor
dec
mov
inc
shl
imul
imul
in
sti
inc
jg
inc
sbb
add
push
mov
hlt
adc
mov
mov
push
push
sub
inc
xor
mov
test
sti
int
imul
rolb
cs
lock
xchg
and
add
jg
into
popa
dec
outsb
xchg
mov
mov
pop
lods
xor
mov
push
fstl
inc
subb
loop
fists
fsubrp
cmpsb
sbb
jmp
add
or
pop
pop
stc
dec
outsl
loop
fistps
dec
dec
mov
push
std
jmp
jecxz
push
or
lock
push
mov
inc
ret
imul
xchg
adc
jns
xchg
inc
or
sbb
adc
jno
adc
mov
inc
sub
xchg
icebp
xor
aad
pop
dec
mov
mov
jb
cmpsb
pop
mov
popl
mov
shrl
sbb
int
sub
test
or
sub
adc
stos
add
mov
pop
lock
lret
and
cmp
inc
test
mov
push
and
mov
cmp
jb
push
stos
pop
xchg
clc
xchg
adc
and
insl
cmp
pop
jg
mov
aad
inc
out
jb
mov
inc
stos
push
push
imul
cmc
push
xchg
repnz
push
xorl
push
test
jb
lcall
and
push
mov
xchg
subb
ja
lret
mov
dec
xor
lods
shll
and
or
nop
cmp
mov
jle
loop
xorl
add
lods
inc
mov
add
xor
adc
pop
jmp
or
je
jae
inc
jg
sbb
inc
xor
inc
push
mov
cld
in
inc
jmp
orb
inc
std
mov
or
push
out
cmp
sub
jmp
mov
or
popf
in
rorl
int
das
cli
jb
lods
inc
mov
cmp
in
lods
push
jo
out
sbb
mov
add
data16
popa
sub
or
cmp
push
inc
push
pop
cli
mov
test
push
pop
pop
hlt
in
push
push
lea
mov
push
mov
ss
filds
push
jne
lock
outsl
or
lods
push
or
shlb
sti
inc
adc
lcall
dec
inc
cli
or
cmp
mov
and
lea
sbb
test
or
sub
ljmp
sbb
outsl
inc
inc
imul
stos
or
pop
shl
xor
sbb
pop
dec
add
adcb
push
pop
cltd
cmp
push
mov
cmp
push
pop
and
stos
pop
inc
pop
es
sub
cli
das
int
push
sub
dec
sub
dec
mov
sbb
cmc
cmp
push
fimull
sub
inc
sti
ljmp
fstpt
dec
aam
insl
ret
ret
movsl
xchg
insl
ret
movaps
push
inc
mov
mov
mov
sub
mov
call
lret
insl
lods
pop
movb
sub
or
add
jb
pop
dec
adc
add
and
imul
mov
inc
jmp
enter
pop
xlat
pop
add
or
roll
or
inc
xchg
rcl
scas
subb
inc
stc
mov
sub
or
inc
cmp
movsl
push
mov
sbb
xchg
cmp
dec
push
mov
inc
sub
insl
incl
push
sub
and
push
stos
or
adc
adc
rorb
clc
mov
test
pop
popf
xor
pop
add
sar
or
sbb
and
inc
scas
sbb
jmp
mov
or
push
or
inc
and
add
dec
scas
int
popa
rcll
jp
cwtl
test
adc
mov
lcall
sarb
arpl
loop
mov
std
xchg
int3
cmp
lds
test
mov
and
xchg
or
fcompl
scas
pop
or
lea
xchg
pusha
mov
frstor
repz
loopne
xor
lahf
xor
scas
mov
test
in
mov
add
xchg
lock
adc
shlb
add
or
adc
xor
and
clc
imull
xor
adc
das
roll
adc
cmpsl
push
jle
and
cwtl
test
adcb
or
test
or
dec
push
stos
inc
hlt
out
jno
adc
ret
push
mov
lea
jmp
mov
sarl
adc
insb
mov
insl
jae
sbb
push
pop
fdivs
push
popf
scas
jno
test
cltd
jmp
xchg
mov
pushw
xchg
fiaddl
cmpsl
jno
movsl
jge
fwait
mov
jno
test
sub
inc
rolw
xchg
outsl
mov
stos
sub
and
adc
shll
xor
mov
test
lcall
aam
cmpsl
sub
xor
sub
add
jecxz
je
push
jbe
sub
rcl
sbb
pop
negl
dec
push
cmp
stos
orb
and
xchg
leave
into
push
mov
xchg
xor
xor
and
xchg
mov
xor
lahf
mov
dec
push
or
das
sub
push
lea
pop
scas
xchg
mov
sub
shlb
sbb
xor
lret
addb
push
cmp
ret
sbb
add
adc
inc
xchg
data16
push
dec
push
xor
xor
xor
shll
cmc
sub
and
loope
gs
fidivs
mov
pop
push
lods
xor
push
push
mov
aam
cs
sub
push
hlt
shrb
adc
sub
dec
add
inc
mov
sti
mov
push
xor
add
loopne
and
call
inc
cmpsb
and
or
mov
sub
out
inc
sub
sub
sti
out
and
inc
repnz
and
arpl
xchg
xor
mov
jb
cmp
test
and
mov
bound
push
pop
test
jle
mov
or
lcall
mov
ja
jl
rorl
push
iret
pop
ss
pop
or
mov
pusha
mov
ret
mov
add
scas
popf
enter
push
sub
pop
pop
xchg
push
shrl
sub
pop
shlb
and
adcl
mov
data16
test
push
sub
jle
sub
push
lcall
push
push
push
push
sbb
shll
xor
out
fs
lret
cmp
lds
fimull
sub
lods
stos
push
leave
inc
outsl
popf
push
sbb
cwtl
mov
adc
cmp
lea
sbbl
ret
and
lea
inc
mov
out
mov
shrb
shll
jb
cmc
nop
cmp
push
dec
mov
sahf
fmull
daa
addb
movsl
enter
or
cwtl
add
inc
insl
xchg
push
xchg
dec
movsl
shll
sti
xchg
inc
imul
cmpsl
mov
js
repnz
mov
jecxz
mul
xchg
adcl
add
daa
fiaddl
movsl
mov
das
lahf
mov
cs
add
xchg
lock
inc
mov
mov
jae
xor
adc
mov
xor
sub
mov
cmp
add
pop
ret
fsubr
dec
push
repz
popa
jno
xorl
cmp
inc
cli
pop
jae
inc
mov
add
inc
lods
dec
xchg
dec
lods
cmp
stos
aam
xchg
enter
inc
test
inc
pop
push
or
add
and
add
mov
jo
adc
ja
shrb
cmp
test
jge
push
mov
rcr
inc
push
movsb
rol
outsb
aam
test
lods
mov
shlb
shlb
jb
mov
or
jg
out
inc
das
lcall
out
dec
sbbb
pop
int3
dec
jo
xchg
jbe
add
in
hlt
sbb
mov
lock
and
frstor
or
jg
jl
into
inc
aam
popa
pop
aam
mov
cmpsb
ss
les
add
inc
push
jmp
rclb
push
addr16
cmpl
add
or
or
adc
dec
int
hlt
xchg
mov
push
inc
int
or
stos
xorb
mov
das
dec
ret
ss
push
and
add
fnsetpm(287
movsb
push
into
mov
sub
notl
or
mov
fstp
das
jb
je
inc
mov
sbb
push
sub
add
bound
xchg
cmpsl
mov
lods
mov
xor
clc
xchg
pop
add
sbb
outsl
sub
rorl
ret
cmpsb
inc
adc
sub
scas
xchg
addl
rclb
rol
test
pop
mov
inc
rorb
sbb
push
add
xchg
add
fidivrs
cmp
inc
insb
pop
outsl
lea
jb
inc
mov
and
add
mov
movsl
and
mov
stos
es
inc
sub
jmp
jo
xchg
xchg
add
cmp
cmp
lea
xor
pop
movb
and
pop
pop
xlat
and
imul
insl
fistpl
sbb
xchg
ret
add
xor
xchg
push
or
mov
or
inc
sub
inc
sub
mov
loope
cmp
inc
in
lds
xor
or
jle
adcb
jae
mov
and
aam
sbb
ljmpw
and
jg
xor
adc
sub
mov
jno
push
sub
sub
ds
pop
loopne
adc
sti
jne
pop
cmp
mov
jge
rcrb
push
test
sub
push
mov
mov
lea
sub
or
outsl
cmp
es
imul
mov
das
lea
adc
sub
push
pop
mov
sub
andl
add
daa
inc
dec
add
stos
aas
xchg
mov
jno
mov
push
pop
sub
ficoml
ret
pop
rclb
mov
ds
mov
mov
jl
mov
shlb
inc
lods
int3
popa
lods
inc
aam
pop
or
add
xor
clc
jmp
xor
cmp
mov
mov
or
sub
stos
inc
push
and
sub
adc
jl,pt
stc
mov
sub
push
adc
movl
xor
jmp
jno
shrb
rcrl
adc
mov
js
idivl
repnz
fsubrp
jg
adc
adc
orl
loop
push
stos
jmp
das
add
push
jbe
adc
mov
ljmp
jmp
imul
mov
pop
pop
addl
lret
push
push
stos
inc
jae
jb
fadds
add
push
lahf
or
push
fwait
fistl
bound
cmp
add
xchg
addr16
das
sbb
pop
push
xor
cltd
push
sbb
cltd
ret
cmp
movsl
mov
push
push
mov
movsb
fcoms
pop
aad
jmp
mov
mov
rclb
add
lock
push
rcrl
add
movsl
sub
pop
mov
mov
dec
pop
icebp
add
rclb
mov
roll
call
dec
add
mov
mov
push
push
pushf
jecxz
push
sub
xchg
outsl
jno
leave
ficompl
inc
lods
movsl
imul
pop
test
push
sbb
mov
sbb
and
pop
push
jo
add
add
lahf
sub
inc
sarb
push
rcll
push
enter
mov
sub
push
or
and
bound
test
adc
sub
cld
or
adc
rcr
cwtl
lods
or
les
mov
add
fucomp
cld
push
aaa
rcll
sub
fdivrs
sub
mov
inc
sbb
cwtl
adc
jg
dec
xor
out
das
dec
subl
or
loop
and
xchg
ja
dec
dec
mov
dec
inc
popa
arpl
cmp
cmp
jno
sbb
cwtl
adcb
inc
or
fisubrs
adc
mov
jecxz
mov
or
sbbb
ja
jl
jecxz
cwtl
sub
loop
popa
inc
xchg
or
repz
add
and
adc
sbb
mov
adc
inc
imul
sbb
dec
sub
dec
push
outsl
mov
fdiv
shlb
shll
ja
mov
xlat
add
not
inc
and
adc
hlt
dec
cmp
inc
cmp
dec
scas
mov
mov
or
test
push
add
mov
testb
das
pusha
push
mov
add
sbb
pop
dec
ja
push
add
sub
mov
or
cmp
add
inc
ret
loope
les
mov
jne
stos
jb
neg
lods
inc
mov
push
xor
sbb
push
lea
adc
iret
loopne
push
and
mov
adc
jp
push
adcl
rcrb
jnp
and
sub
cmp
sub
ret
scas
addb
add
inc
push
ss
hlt
push
push
or
leave
xorb
pop
int3
cmp
adc
cmpsb
push
jo
or
add
std
sbb
in
jmp
inc
or
cmp
push
or
cltd
add
movsl
pop
mov
pop
imul
and
or
xchg
sub
xchg
andb
daa
dec
add
js
jecxz
test
adc
mov
std
int3
and
cmp
mov
insb
hlt
shll
lods
jo
sub
adc
notl
push
inc
mov
sub
jne
shrb
sub
popf
ret
stos
mov
testl
stos
mov
sub
mull
inc
pop
imul
clc
mov
sub
cmp
or
pop
push
push
pop
push
pop
add
pop
and
sbb
out
out
shlb
pop
inc
mov
sub
and
mov
pusha
jge
mov
xchg
call
adc
inc
xchg
roll
sbb
cmp
aam
sbb
add
mov
cltd
sub
fistpll
jb
or
fisubl
cmp
pop
in
cmp
xchg
pusha
js
xor
cmp
roll
data16
sub
xor
push
fmul
adc
sbbb
add
pop
cmp
dec
and
xchg
push
xchg
sbbl
cmp
push
shll
adc
je
adc
mov
cmp
pop
mov
inc
insl
loope
mov
jno
filds
ss
jnp
pushf
movb
add
push
jmp
add
xchg
pop
mov
push
adc
add
hlt
es
mov
jmp
aaa
mov
inc
add
push
jge
cmp
outsl
mov
pop
int
push
cmp
adc
jbe
mov
dec
inc
push
out
add
jbe
sar
and
sbb
pop
into
jmp
or
xor
fnstsw
mov
leave
mov
jg
sti
sbb
scas
cmpsl
add
enter
jl
cmp
xchg
and
dec
dec
sub
rcr
inc
jns
jno
push
jno
fwait
jnp
inc
les
add
push
mov
cwtl
ljmp
pop
add
dec
inc
dec
push
mov
testb
or
sbbb
adc
jmp
push
mov
pop
call
jmp
mov
dec
insl
mov
or
dec
xchg
movsb
call
ljmp
mov
or
xor
add
psllw
jge
imul
mov
adcl
adc
add
insl
sub
pop
cmpl
pop
inc
cli
lea
xor
adc
cmpb
pop
stos
pop
sub
xor
mov
outsl
cmp
push
mulb
xchg
test
icebp
add
inc
ret
ret
in
or
inc
sub
cs
rolb
nop
ret
negl
push
sub
test
adc
push
add
inc
pusha
arpl
lret
mov
mov
push
cmp
mov
test
adc
ret
xor
push
mov
pop
fsubp
push
mov
adc
adc
add
and
push
mov
nop
pop
mov
lea
xor
inc
test
push
lods
inc
pop
or
jmp
adc
xorl
jb
cli
roll
add
aaa
push
push
shrb
cmp
pop
fistpl
std
clc
cmp
das
add
push
adc
sub
mov
inc
test
and
jle
dec
loop
xchg
xchg
sti
je
data16
mov
out
clc
shl
lods
cmp
push
fwait
push
pop
leave
shlb
and
cmp
push
or
jno
mov
mov
push
ret
leave
xchg
sub
imul
pop
lods
rorl
andb
push
aaa
inc
mov
mov
sub
xor
movsl
adc
je
in
push
nop
mov
aam
test
inc
jg
pop
lods
xchg
cmc
sub
adc
or
dec
and
push
adc
and
adc
mov
pop
add
sub
lahf
jmp
cmp
jae
xorb
lods
add
dec
push
scas
pop
push
aad
adc
ret
or
fmuls
and
dec
sbb
scas
lock
jne
xchg
mov
cmp
dec
mov
sub
enter
int
andl
jns
or
fisubl
and
xchg
pusha
into
dec
adc
stos
ret
test
rcl
or
jno
inc
add
push
imul
int3
aam
adc
fcoms
fildl
xchg
mov
push
xchg
ss
fcomps
inc
and
mov
xchg
nop
jb
clc
lea
mov
cmp
push
xchg
in
cmp
sub
aaa
mov
push
pusha
and
loopne
stos
or
push
mov
cmp
sub
xchg
inc
int
mov
pop
daa
mov
mov
sub
ljmp
lahf
push
or
or
and
rolb
fistps
add
and
sbb
add
stos
addb
inc
cmp
push
lcall
add
push
or
lea
cmpl
mov
call
shll
adc
sub
push
enter
adc
cs
test
add
add
in
test
adc
cld
inc
mov
lahf
lods
pop
push
movsl
rcl
nop
xchg
xor
mov
cmp
repnz
aam
jo
or
std
aad
pop
pop
insb
mov
mov
add
pop
sbb
mov
cmp
sbb
or
xor
add
insl
lods
loop
out
and
add
fcompl
sbb
cmpl
pop
mov
les
cmp
rclb
cmp
cltd
fisubl
and
jo
add
mov
movsl
das
insb
pushf
cli
clc
push
pop
mov
xor
adc
pusha
add
jb
or
mov
imul
cmp
rcl
inc
insl
pop
bound
ret
xor
sub
and
push
xchg
leave
shll
xor
push
xchg
push
rcrb
pop
rorb
push
adc
or
mov
mov
mov
jmp
pop
adc
cmp
mov
inc
mov
push
mov
jne
aad
adc
jle
lds
shlb
add
popa
mov
xchg
int
adc
cs
adc
jno
pop
xchg
and
rorl
cs
adc
sub
inc
int
mov
andb
push
cwtl
push
jne
sbb
clc
popa
rclb
inc
mov
xchg
and
xor
and
ss
jne
stc
cmp
loopne
xlat
pusha
aad
sbb
rolb
add
jno
dec
in
sub
mov
push
int3
out
push
add
mov
fldenv
add
jge
push
and
stos
lret
sahf
or
pop
add
mov
ja
adc
in
pop
or
adc
loopne
xchg
adc
movl
mov
add
pusha
les
add
in
and
jnp
ds
sbb
dec
xchg
pop
data16
mov
xor
add
aas
jmp
push
nop
popf
mov
add
cs
sbb
or
jge
jns
xor
xchg
push
adc
fwait
add
je
add
mov
or
adc
bound
adc
sbb
mov
add
push
adc
jne
xor
punpckhdq
loopne
dec
adc
sbb
add
inc
out
xor
imul
sbbb
addr16
sbb
leave
arpl
pop
lds
cmc
cmpb
stos
or
push
pop
add
mov
pop
cmp
ss
add
mov
jecxz
mov
mov
incb
rcrb
add
push
mov
movsl
icebp
call
cmp
mov
ret
ror
aas
mov
adc
ljmp
sbb
jns
test
inc
pop
pusha
sbb
outsl
add
adc
push
hlt
inc
and
push
adc
call
sub
add
adc
sbb
mov
ss
icebp
repnz
mov
mov
repnz
int3
add
pop
push
sbb
pop
pop
add
scas
fidivs
push
ret
pop
lds
sbb
cmp
cmp
xor
push
je
jno
sti
adc
sbb
mov
repnz
pushf
adc
or
add
xchg
push
test
clc
aad
push
mov
inc
je
sahf
aaa
mov
push
pop
add
pop
xor
or
adc
mov
cmp
sbb
daa
add
pusha
cmp
mov
add
sub
mov
data16
push
adc
inc
dec
sub
push
push
cmp
pop
sahf
je
adc
xchg
testl
xlat
jmp
aaa
stc
sti
push
in
push
adc
add
mov
cmp
lods
lods
test
push
clc
mov
push
push
sbbb
sti
add
mov
push
ss
cmp
push
adc
adc
push
pmuludq
cmp
test
dec
or
lahf
add
cmp
imul
shll
push
je
push
bnd
push
andb
mov
push
outsb
mov
add
inc
mov
imul
and
mov
add
fdivs
xchg
or
int
mov
xor
sub
insl
add
pop
sar
dec
adc
andb
lods
push
add
add
daa
orl
sbb
dec
mov
pop
cmp
movsl
sub
test
loop
fisubl
inc
inc
jne
rcl
push
fwait
lcall
sub
push
ret
add
lcall
ljmp
sarb
cmpxchg
mov
jb
fiaddl
loopne
repnz
divl
push
mov
or
fiaddl
mov
cmp
xor
add
sbb
cli
sub
adc
pop
sbb
pop
or
jb
sbb
movsl
xchg
dec
ret
add
mov
cwtl
sub
test
stc
add
mov
dec
shlb
pop
sub
pop
and
sub
les
inc
push
pop
mov
xchg
pop
xchg
out
insb
test
or
push
push
inc
push
das
xchg
or
add
pop
adc
or
adc
cmp
lods
test
mov
xchg
in
les
test
sub
and
rolb
adc
push
pop
adc
lods
cmp
mov
rol
lock
xor
inc
lret
scas
sti
pop
stos
mov
jb
popa
subl
sbb
imul
push
xchg
pop
push
and
xchg
add
mov
mov
aam
mov
push
jnp
pop
lods
push
cmp
ss
jb
lcall
ja
cmp
in
stos
pop
or
jno
test
sub
mov
cwtl
and
jle
xlat
cmp
test
fwait
add
jl
xchg
mov
fwait
jp
push
mov
pop
xchg
pop
cmpl
mov
xchg
push
sbb
mov
jle
push
cltd
sub
adc
jo
mov
lea
xchg
mov
xchg
stos
mov
dec
adc
xchg
leave
pop
add
cmp
mov
call
ret
xor
sbb
cvtps2pd
mov
jo
mov
loopne
mov
xchg
pop
add
addr16
cmp
adc
xor
stos
notb
xchg
mov
insb
inc
imul
cltd
jle
or
xchg
or
sub
or
test
xchg
xchg
mov
popf
test
push
mov
decb
xchg
dec
into
dec
mov
inc
cmc
dec
dec
mov
mov
shll
jg
or
shlb
std
push
xor
mov
into
and
or
jae
test
mov
cli
mov
mov
mov
adcl
inc
cld
and
push
jl
jge
dec
sbb
add
outsb
sbb
sbb
pop
mov
sbb
scas
inc
fisubrs
add
or
or
or
pop
mov
jp
jno
nop
and
dec
mov
push
sbb
add
xchg
push
out
mov
call
addl
add
ljmp
orb
sbb
out
pop
nop
add
pusha
pushf
push
pop
cmpsb
test
and
pop
mov
sbb
sub
sahf
jbe
pop
add
mov
ljmp
fnstenv
idivb
mov
xor
mov
jge
add
clc
test
fisubs
cmp
push
inc
inc
iret
add
mov
divb
xchg
cmovbe
and
or
daa
lods
add
inc
iret
xor
or
insl
fmuls
jo
fwait
jb
pop
cmp
push
inc
mov
or
jb
xchg
or
cmp
and
push
rcrb
mov
ficoml
inc
adc
test
in
sub
insb
mov
add
out
pop
or
push
add
mov
pop
jb
push
lea
mov
scas
push
cltd
cmp
sbb
push
add
jbe
mov
sbb
adc
pop
dec
xlat
xchg
and
outsb
cmp
or
insl
pop
cmp
pop
or
sub
cmpsb
add
mov
loopne
addr16
pop
sub
sbb
int
stos
inc
dec
call
add
aaa
xchg
mov
mov
cmp
mov
andl
scas
jle
xchg
xrelease
insb
xor
addb
jb
shrb
pop
adc
add
add
scas
sbb
xchg
xorb
push
adc
sub
fisubl
pushl
cmp
xor
and
test
mov
add
fistps
mov
jmp
cmpsl
loope
shrl
or
inc
inc
std
aaa
pop
mov
mov
cmp
jmp
cmp
inc
push
sub
lock
sbbb
nop
dec
and
in
das
sub
lret
aas
addb
mov
ss
or
add
xchg
add
sub
xchg
fisubs
dec
scas
out
jae
fwait
add
mov
loopne
test
mov
lods
cs
mov
and
popa
mov
xchg
sub
adc
data16
insl
dec
call
dec
mov
jmp
movsl
stc
fwait
dec
sbb
icebp
or
push
push
cmpsl
popa
push
insl
daa
inc
fstpl
int
subl
fisttpl
inc
aam
cmp
and
dec
xor
mov
std
gs
pop
jecxz
xlat
inc
loopne
mov
jg
sbb
incl
add
movsl
dec
test
repz
dec
stos
rcrl
loopne
mov
loopne
jnp
push
sub
enter
dec
mov
ret
test
push
jmp
icebp
mov
es
nop
dec
repz
adcl
or
pop
lods
push
fidivs
add
adc
subl
jno
mov
cli
aaa
jbe
adcl
mov
fbstp
fidivrl
xor
and
fidivl
in
or
mov
and
aad
xor
xchg
ss
testl
orb
push
push
insl
insb
dec
sub
cmp
mov
roll
push
icebp
lea
fwait
lahf
cmp
rorb
call
pop
adcb
xchg
imul
idivb
and
movsb
push
js
movsl
lods
enter
test
mov
shrl
cmp
and
std
gs
mov
mov
push
xorb
and
das
fwait
cli
das
push
mov
or
out
jb
rclb
xor
xchg
pop
orl
pop
aam
inc
outsl
dec
pop
clc
jb
int
adc
push
ja
int3
cmp
jno
std
add
and
and
jg
mov
mov
xchg
cmp
adc
pop
jge
mov
cmp
and
repnz
clc
addl
mov
fucomp
imul
cmpsl
popf
inc
adc
icebp
loop
add
std
out
pop
jno
lcall
mov
pop
scas
xchg
inc
lods
push
stos
push
add
scas
mov
cwtl
test
sub
cltd
mov
test
fldcw
jbe
das
jnp
jb
sub
push
sbb
xor
lcall
and
push
pop
scas
outsl
cmc
adc
mov
dec
push
rorl
dec
xchg
xchg
insb
cmp
or
xchg
clc
mov
inc
mov
push
xor
ffree
dec
and
dec
add
imul
xorl
or
outsb
mov
sbb
inc
sub
xor
cmp
cmp
test
mov
es
sbb
push
sub
xchg
sub
xlat
bound
fildll
adc
rcrl
inc
mov
mov
sub
sbb
fcomps
shlb
push
adc
sbb
jle
rcrb
pop
stos
mov
shlb
stos
lahf
js
mov
xchg
pusha
mov
mov
clc
data16
push
stos
adc
insb
insl
imul
cmp
add
sub
add
add
cmpb
loopne
jmp
out
xor
inc
push
mov
pop
mov
add
scas
jmp
sub
in
mov
xor
cli
sarb
add
sbb
mov
inc
mov
add
lret
repz
push
mov
mov
mov
pop
test
sub
mov
xchg
mov
inc
inc
xchg
test
or
sub
clc
in
pop
aad
lea
and
adc
xchg
nop
push
lcall
arpl
ret
lods
shrb
pop
mov
fisubrl
sbb
cmp
or
hlt
pop
repz
pop
inc
mov
mov
in
mov
adc
and
xor
mov
sbb
mov
mov
and
inc
dec
ljmp
sarl
sub
push
imul
aaa
mov
inc
insl
cmp
lods
add
shlb
mov
lods
xchg
or
xchg
mov
xchg
insb
sarl
or
jae
mov
pushf
test
dec
fiaddl
mov
mov
sbb
pop
mov
and
pop
imul
mov
imul
clc
enter
sbbb
mov
push
imul
adc
add
or
pop
scas
pop
push
xor
leave
add
and
test
push
sbb
jmp
xchg
shl
jle
or
mov
inc
test
call
imul
mov
or
loop
dec
xchg
pop
or
or
xchg
mov
xor
add
mov
iret
movsl
inc
dec
shlb
push
test
test
mov
outsb
or
mov
and
sub
sete
push
stos
dec
push
popl
rolb
jb
lcall
xchg
pop
mov
dec
push
mov
fadd
ret
lahf
push
inc
adc
or
test
xchg
fcos
add
or
in
xchg
dec
cld
pop
pop
and
or
and
xchg
lods
test
movsl
pusha
rcll
in
inc
enter
cli
lds
icebp
or
mov
push
hlt
push
xor
jmp
icebp
mov
xchg
fadds
add
mov
jb
add
mov
fdivrs
pop
outsl
fisubrs
sub
and
rolb
sub
pop
jmp
push
inc
das
mov
dec
adc
aad
rorl
fimull
ret
faddl
push
in
and
xor
inc
pushf
inc
pop
lret
incl
inc
jo
cld
mov
sub
push
mov
add
mov
push
sahf
xchg
add
push
addb
mov
mov
les
stos
outsb
push
or
mov
mov
adc
push
push
cli
push
mov
add
test
cli
jg
sub
ret
scas
test
pop
fidivl
mov
outsb
clc
add
inc
or
push
in
cmp
int
jg
bound
mov
rcr
pop
stc
inc
das
push
sbb
mov
test
mov
aad
subb
mov
jo
popf
mov
mov
lods
xchg
pop
sbb
xorb
inc
add
sub
mov
addb
inc
jp
lock
or
or
xchg
rcrl
mov
sbb
push
stos
ficoms
cmp
pop
scas
iret
jno
lods
mov
adc
sub
sbb
fs
sbb
dec
pop
pop
pop
or
xor
mov
rcl
sub
fs
dec
mov
aad
in
jle
pop
lods
loope
or
lds
mov
hlt
jo
gs
imul
rcrl
jb
les
mov
insb
sub
lea
push
pop
sub
sbb
idivl
fisubrs
cmpl
out
mov
sbb
add
imul
test
add
inc
shrb
inc
call
imul
fstpl
lret
test
sbb
inc
lock
out
mov
out
jg
incb
test
dec
lock
mov
or
ret
out
mov
sub
mov
xor
push
aad
fiadds
mov
push
fcomp
outsl
fisubs
outsl
in
test
push
xchg
mov
jno
add
decl
iret
ja
adc
insl
mov
and
test
inc
pop
rolb
mov
jb
fcoml
or
inc
stos
push
aam
mov
sbb
fsubrs
gs
mov
out
push
stos
inc
sub
mov
sbbb
inc
mov
addb
mov
inc
pop
jb
loopne
mov
adc
lods
cli
and
push
stos
push
sub
cmp
leave
fs
int3
jb
int
xor
mov
and
mov
and
rcrb
mov
andb
mov
push
test
lds
stos
scas
push
add
push
mov
insl
mov
xor
cli
aad
and
dec
inc
xor
mov
add
ret
arpl
ss
sahf
mov
jg
insl
pop
fwait
subb
push
add
sbb
and
das
dec
add
shrb
xchg
fstpt
push
xchg
sbb
inc
sub
xchg
jb
mov
jb
shll
sub
scas
mov
mov
out
pushf
inc
shll
lahf
inc
testl
int
or
sub
test
mov
pop
ja
add
outsb
mov
clc
add
pop
add
in
mov
or
mov
cmp
dec
add
push
sub
inc
xchg
ret
sub
les
push
pop
pop
int3
mov
pop
sub
add
rcl
test
stos
shlb
dec
pop
subb
xor
adc
lahf
push
push
leave
jno
sbb
xchg
or
push
pop
inc
stos
int3
push
inc
mov
stos
push
inc
mov
orl
rcl
mov
mov
sbb
fadd
mov
mov
imul
inc
aam
mov
pop
enter
enter
ficoml
push
subb
or
call
dec
repnz
mov
clc
pop
inc
mov
sbb
add
mov
ss
test
mov
adcb
lahf
shr
push
mov
add
mov
stos
clc
aas
inc
test
inc
popa
mov
adc
xor
pushf
cltd
ficompl
outsb
mov
ret
inc
ret
sub
push
sub
fimull
mov
add
or
mov
js
imul
les
rcrb
pop
pop
mov
and
data16
dec
arpl
mov
rcl
sub
or
xchg
cltd
rcl
add
jl
imul
push
push
mov
leave
sub
loope
mov
add
sarl
pop
repnz
test
mov
pop
mov
or
sbb
pop
xchg
jmp
sbb
movb
sbb
sarb
shl
in
pop
rcll
cmp
pop
rcrl
xchg
adc
cld
inc
popf
sub
xchg
mov
incl
ljmp
mov
fstpl
sbb
or
jno
ss
add
call
fsub
add
leave
add
xor
mov
add
je
cmpb
mov
aas
jno
and
and
repnz
or
add
fcoms
add
adc
inc
push
cmp
inc
jp
jbe
add
lret
dec
sub
dec
or
pop
test
addb
inc
push
lahf
add
and
into
int
jo
or
xchg
ret
adc
sub
sbb
mov
push
adc
dec
mov
xor
lahf
add
mov
mov
popa
push
hlt
mov
lds
sbb
fnstenv
inc
adc
sub
mov
inc
enter
mov
jmp
std
or
imul
lock
mov
inc
in
inc
cmp
mov
bound
adc
cmpsl
mov
mov
pop
jae
sub
adc
stc
jge
mov
cmp
jmp
sbb
fnstcw
mov
sub
insl
inc
xor
push
add
lea
cmp
fisubrs
repz
enter
mov
mov
loope
stos
push
int
mov
xor
or
push
rorb
pusha
fadds
cltd
mov
mov
cld
cltd
fisubrl
scas
loopne
pop
sbb
push
inc
mov
xor
jmp
pop
push
and
push
push
les
daa
pop
fisttpll
insb
mov
lahf
cmp
call
and
cltd
add
fs
shll
into
push
ljmp
add
test
sbb
jmp
mov
jo
xor
adc
movsl
mov
inc
add
jo
add
sbb
mov
mov
loope
mov
loope
sbb
push
pop
outsl
inc
loope
ret
fistpl
adc
out
scas
mov
inc
pop
or
or
sub
pop
movsb
sub
and
sbb
out
adc
rorb
test
inc
pop
rorb
dec
jo
adc
sahf
shll
push
punpckldq
cmp
jae
sbb
aad
ret
or
adc
or
testl
pop
fimull
andb
mov
mov
mov
es
test
test
ja
sbb
inc
call
movsl
inc
test
mov
xchg
movl
xchg
sbb
leave
dec
inc
es
std
pusha
lea
xor
push
sbbl
pop
fstpt
shr
jle
xor
aam
out
sbb
mov
fs
add
sbb
xchg
lods
les
jbe
test
lea
cli
fsubl
lock
add
in
xor
inc
fidivs
shrb
inc
ds
std
cmp
not
jp
xchg
jnp
ret
inc
je
jmp
and
aam
jnp
jl
sbb
mov
pop
or
xor
xchg
add
and
inc
pop
ret
sbb
cwtl
or
es
add
sbb
xchg
rcl
loopne
push
les
inc
lock
add
sub
mov
test
call
sub
xor
dec
push
cmp
or
mov
pop
in
jo
out
jge
cmpsl
xlat
aad
cmp
lock
mov
xor
mov
add
inc
sarb
lea
jb
push
xor
ret
inc
inc
mov
sub
dec
aad
xor
cld
jle
add
pop
shrl
aad
aad
jo
cmp
scas
das
jmp
mov
mov
ret
or
movsl
dec
push
jmp
adc
pop
sub
cmpb
mov
pop
mov
mov
pop
mov
mov
mov
sub
push
sbb
or
push
mov
push
push
mov
sub
lcall
jle
mov
aad
das
jle
xchg
and
jb
ficompl
pop
add
lods
xchg
cmp
fwait
and
push
pop
mov
mov
pushf
sub
jae
test
stos
outsl
fs
jp
cwtl
shrb
mov
les
pop
loope
dec
testl
sbb
push
lods
xchg
mov
mov
xchg
lods
mov
sbb
loope
inc
or
lea
inc
fildll
mov
xchg
insb
add
cli
sbb
aam
push
stos
outsb
xor
scas
add
clc
push
flds
es
mov
lcall
mov
push
dec
movl
add
push
test
addr16
pop
andl
push
pop
mov
stc
dec
mov
xchg
addb
jns
nop
xorb
test
test
push
loope
or
mov
mov
adc
sbbb
inc
mov
inc
flds
enter
xor
push
lcall
jp
inc
add
mov
xchg
stos
add
or
xor
inc
aam
adc
inc
and
insl
mov
test
jb
pop
push
and
pop
push
aad
push
pop
mov
pop
andl
pop
sbb
sbb
inc
push
sub
int
es
xor
je
dec
rolb
or
and
mov
aaa
test
icebp
das
int3
add
mov
mov
mov
mov
pop
mov
add
stos
insl
stos
sbb
jmp
pop
push
mov
xchg
push
jns
cli
loop
jno
pop
add
lds
pop
js
imul
lcall
enter
xor
rolb
stos
add
ficompl
mov
mov
out
imul
xor
sti
xor
je
dec
add
inc
fistps
add
shlb
push
inc
sti
pushf
mov
adc
fchs
push
jne
sbb
xor
or
mov
adc
adc
mov
and
les
or
cmc
add
push
stos
shll
xor
rorb
or
fisubrs
pop
les
loope
jno
sub
dec
jb
mov
mov
mov
fcomps
test
dec
jne
push
pop
and
push
or
mov
fcoms
sub
mov
ss
inc
jne
pop
add
ret
push
pop
cmp
dec
or
mov
lret
inc
int
insl
imul
dec
sub
pop
andl
shrl
adc
mov
jne
sbb
lods
adc
insb
inc
and
test
add
shll
sub
negb
xor
sbb
shlb
push
or
push
pop
gs
inc
or
adc
dec
aam
mov
xor
push
push
dec
mov
insl
jno
jno
lret
jg
mov
dec
inc
pop
mov
xchg
and
add
sti
sub
enter
or
sbb
mov
mov
push
or
and
or
cmp
mov
push
jle
in
push
lahf
fsubl
or
or
mov
shlb
popf
inc
inc
adc
push
loopne
sbb
mov
cmp
xor
ficompl
pusha
test
xchg
daa
popa
or
sarl
testl
fsubr
sub
rclb
data16
mov
test
fnstenv
cmp
das
outsb
outsl
daa
lods
movsl
inc
cmp
inc
and
icebp
les
jo
push
sbb
lret
stos
push
pop
mov
negb
push
xor
cmp
mov
pusha
xchg
fdivr
and
fidivl
ja
or
lods
pusha
inc
cmp
push
lock
xor
pop
hlt
inc
adc
mov
pusha
or
add
push
mov
lahf
dec
xor
addr16
mov
outsl
mov
in
repz
cmc
sbb
adc
xchg
std
jmp
imul
cs
or
out
adc
fsubp
insb
daa
test
mov
inc
scas
rorb
aaa
and
cmp
fs
mov
jl
dec
add
push
push
call
and
adc
add
mov
adc
arpl
mov
push
stos
jp
adc
ja
fwait
aaa
pop
or
in
xlat
setle
adc
ffree
mov
or
sbb
pop
push
sti
jecxz
add
push
popf
enter
stc
fwait
lret
xor
xchg
fsubrs
pop
pop
ror
xchg
movsb
push
or
sub
shrl
test
dec
sbbb
sbb
testl
sub
dec
adc
xlat
rolb
call
sbb
scas
cs
cmp
sub
out
add
ret
mov
dec
add
lret
gs
jge
jne
inc
inc
xchg
sbb
cmp
bound
jle
xchg
rorl
out
bound
sarb
push
test
mov
inc
cltd
shlb
addb
xor
push
pop
mov
pop
cmpsl
sbb
orb
mov
add
jle
and
out
add
das
mov
shrb
jmp
jmp
adc
out
mov
mov
sub
mov
jg
imulb
sub
and
or
das
cmp
or
xchg
mov
movsb
xchg
and
push
add
addb
mov
push
xchg
movsl
daa
mov
push
mov
adc
sbb
lea
movsl
stos
imul
lea
rcrb
outsl
pop
dec
or
ret
testl
or
inc
mov
mov
inc
rorb
push
xchg
mov
insl
inc
add
aad
mov
dec
cmc
xorb
inc
stos
push
pop
inc
push
adc
mov
lods
fcomps
sub
aaa
rcrb
adc
ror
add
ss
push
adcl
sub
add
imul
add
mov
adc
or
stos
lock
push
out
pop
dec
add
lods
adc
mov
insb
or
cltd
cmp
fcomps
mov
mov
pop
imul
sbb
add
push
stos
andb
sbb
push
pop
dec
jno
lahf
das
mov
ss
sub
or
push
and
push
loopne
jg
cmp
push
enter
fiaddl
dec
fidivs
mov
pop
pop
dec
sbb
xor
or
mov
std
data16
push
jl
add
outsl
test
stos
popa
rolb
push
sub
or
int3
lods
sub
addr16
insl
in
inc
inc
adc
cmp
aad
sub
dec
adc
rol
and
test
fwait
pop
lahf
mov
int
mov
mov
inc
mov
adcb
mov
jp
mov
das
ret
mov
fisubrl
mov
jnp
rcrb
xor
lods
xchg
lret
addb
roll
rcr
mov
and
add
outsl
sub
jo
push
cmp
lods
insl
cmpsb
pusha
inc
fwait
mov
cs
push
xor
cli
xchg
inc
clc
adc
pop
mov
push
fsubs
xlat
ret
cmp
push
out
xor
jo
repz
xchg
mov
dec
mov
lea
mov
add
sbb
sbb
inc
push
mov
xor
xor
push
cmp
and
mov
xor
ret
cmp
lcall
mov
push
cmp
cmp
jge
mov
push
push
in
mov
sub
and
inc
adc
sbb
cmp
xchg
stos
inc
imul
test
push
pop
mov
or
inc
sub
loope
jb
mov
xor
mov
mov
mov
pop
pop
ret
pop
jge
fiaddl
iret
jns
stos
xchg
mov
pop
mov
mov
shlb
jno
ret
inc
sub
pop
fs
mov
mov
sbb
and
inc
pop
imul
test
fistpl
pop
sub
mov
dec
rorl
push
cmp
call
adc
inc
cmp
bound
sahf
addr16
pop
sbbb
out
sub
push
ja
sbb
stos
push
xchg
mov
sub
es
cmp
add
ret
xor
xorb
inc
add
mov
mov
clc
cmp
and
add
pop
das
xchg
adc
stos
inc
and
loopne
push
push
and
mov
or
sub
cmp
sub
push
movsl
mov
scas
pop
jmp
mov
inc
xor
xchg
or
jg
xor
outsl
mov
or
aam
lea
fmuls
sbb
lods
push
fcomps
ljmp
inc
lahf
pop
mov
add
mov
ret
cmp
push
push
push
imul
push
and
sbbl
add
ss
mov
sti
sbb
test
out
or
push
hlt
andb
push
test
pop
out
fcmovnbe
test
xchg
dec
or
fstpt
xchg
mov
jecxz
jnp
push
shrb
outsb
inc
movsl
ficompl
rclb
loopne
cmp
jno
fs
inc
xchg
mov
adc
in
or
push
and
and
mov
pop
sub
fwait
jmp
mov
das
stos
mov
iret
scas
and
xchg
push
or
push
insl
and
mov
enter
cmp
inc
add
stos
shlb
ret
mov
mov
imul
gs
mov
push
mov
xor
adc
test
movsl
out
insb
adc
xchg
adc
outsl
mov
insb
mov
push
dec
jg
mov
push
or
loop
pop
in
es
mov
sub
subb
add
insl
das
jno
and
dec
xchg
mov
jo
sbb
jae
call
cmpsb
cmc
and
stos
pop
loop
test
sbb
sub
sub
add
add
rcl
push
mov
xchg
lds
shrb
sub
nop
pop
add
in
mov
jge
mov
stos
adc
dec
out
sub
stos
push
xor
push
rcll
cwtl
lea
lods
test
push
add
fildll
movsl
push
cwtl
and
dec
movl
push
push
pushf
and
mov
inc
adc
or
mov
sub
int3
gs
gs
insl
sub
pop
add
mov
pop
push
mov
add
test
inc
lods
dec
inc
mov
lods
mov
jno
in
jge
pushaw
stos
setnp
push
addb
push
xchg
sarl
mov
outsl
push
sub
pop
js
imul
ja
cltd
add
outsl
jno
push
loope
cmp
ljmp
sbb
xchg
and
scas
imul
push
ss
sar
or
loop
sub
push
add
jne
jae
adcl
stos
addr16
mov
clc
dec
pop
lods
loopne
pusha
pop
mov
pop
add
xor
cmpsl
cmp
fcoms
nop
jb
or
fcoms
inc
mov
push
pop
adc
shlb
push
mov
push
test
or
sbb
jo
jo
mov
xchg
dec
adcb
adc
inc
test
jge
cmpsb
adc
add
dec
rolb
mov
inc
mov
pushf
cmp
aad
mov
mov
orb
dec
lods
pusha
mov
jno
inc
adc
scas
lcall
mov
or
movsb
inc
sbb
inc
push
stos
xor
add
adc
xchg
orb
pusha
sub
adc
mov
inc
xor
inc
gs
push
adcl
cltd
sbb
mov
fdivr
inc
dec
push
sub
xor
imul
insl
sub
sub
arpl
xchg
test
jno
add
sub
out
add
pushl
dec
popa
pop
clc
mov
aad
mov
adc
cmc
or
call
iret
mov
lods
jmp
shrl
sbb
lods
adc
mov
mov
cmp
ror
movsl
mov
pop
push
mov
and
mov
inc
push
push
mov
inc
stos
cmp
inc
in
ret
mov
and
orb
sti
mov
sbb
jb
aas
push
push
push
mov
push
sub
mov
mov
push
outsl
outsl
pop
jns
mov
js
or
xor
in
mov
roll
cmp
xor
cmp
out
sub
lods
sub
and
or
mov
insb
stc
nop
cmp
int
loopne
mov
inc
mov
mov
push
sub
mov
push
stos
xchg
adc
es
mov
mov
add
test
inc
add
inc
rcl
xchg
test
jle
es
lods
xchg
mov
aad
enter
mov
push
repz
push
sub
mov
jmp
stos
jge
mov
jl
mov
jle
cmp
leave
fs
push
adc
mov
sub
mov
add
and
add
mov
lods
add
dec
test
push
mov
cmp
push
mov
in
fiaddl
push
popf
pop
adcl
pusha
push
lcall
add
xor
loop
sbb
mov
test
popa
es
movsl
jae
mov
scas
testb
scas
aad
adc
add
push
nop
adc
xchg
sub
jecxz
push
sub
mov
push
mov
or
pop
xchg
mov
pop
outsl
movsl
cmp
pop
mov
sub
jmp
mov
ficompl
pop
imulb
adc
push
data16
in
fbstp
push
cs
push
imul
aas
push
arpl
pusha
or
push
sub
pop
imul
pop
int
mov
cmp
subl
adc
adc
inc
dec
outsl
add
jp
lret
movsl
mov
inc
dec
cld
pop
add
or
mov
dec
rol
inc
lds
dec
pop
das
add
jmp
add
movsb
adc
dec
jne
divl
cmc
int
mov
adc
or
mov
sahf
or
sbb
test
sarb
add
push
cmp
xchg
jno
xor
addl
stos
loope
push
and
mov
pop
les
inc
xchg
or
pushf
loope
add
mov
pop
cwtl
cmp
pop
shll
fsubrs
sub
jle
xchg
inc
push
push
mov
mov
xchg
xchg
mov
insl
stos
adc
inc
and
je
fists
inc
and
inc
xchg
and
in
out
dec
sbb
pop
les
int
sub
push
movb
fisubrl
jle
stos
mov
cmp
xchg
cmp
push
push
xor
int
jne
pop
fisttpl
std
es
je
movsl
inc
in
pop
cwtl
cmp
mov
sub
lds
lret
movsl
mov
xchg
ret
orb
orl
jle
cmpb
xchg
xor
jo
mov
fimull
mov
loopne
cmc
add
jno
jecxz
test
xchg
sub
fs
inc
push
sti
subb
add
jmp
mov
fwait
movsb
jae
fcoml
adc
cmc
jnp
sub
add
xor
push
mov
xchg
out
xchg
mov
rolb
and
aas
ficoml
das
mov
sbbl
add
push
sahf
test
imul
loope
lock
push
fs
stos
adc
mov
xchg
dec
movsl
pop
xor
push
push
and
and
pop
pop
daa
jb
xor
inc
xor
lret
adcb
xchg
jo
jle
sub
stos
jno
jl
mov
in
dec
adc
or
push
sub
add
test
sub
mov
test
jbe
sbb
sbb
ljmp
insl
jae
fnsave
add
lods
mov
or
xchg
in
cmp
ret
adc
jne
mov
inc
xchg
push
mov
sbb
sub
das
lahf
shlb
sbbb
insl
sub
mov
jle
in
cmp
dec
fdivrs
mov
scas
xchg
incl
outsb
add
pusha
pop
addr16
inc
or
aas
mov
cmpsl
das
aaa
xchg
repz
es
push
cmp
and
pop
mov
fidivrl
mov
cld
push
stos
mov
adc
shlb
and
add
sub
nop
or
or
push
adc
xchg
call
dec
int
xchg
lahf
sbb
or
push
les
xchg
sbb
mov
pop
xchg
test
push
mov
sbb
addr16
lret
and
xchg
push
in
aad
adc
add
test
push
ret
adc
rcrl
nop
cmp
cmp
mov
pop
jno
push
es
mov
out
lods
test
cmpb
or
lods
push
xor
sbb
shrl
lahf
rolb
lea
jb
roll
add
sub
fimuls
clc
jns
push
cld
mov
pop
lahf
jmp
outsl
and
sbb
inc
inc
add
dec
xchg
mov
pop
push
adc
and
dec
sub
pop
add
mov
dec
mov
fbld
call
fmul
fistpl
jp
inc
add
cwtl
adc
icebp
add
call
kmovb
movsb
mov
popl
sub
mov
cmp
pusha
int3
pushf
mov
enter
out
sbb
das
dec
sbb
adc
dec
aam
add
ret
mov
mov
ja
cld
mov
jmp
stos
and
and
ljmp
stos
cmpsl
or
lret
inc
movsl
push
sbb
and
daa
and
clc
aas
aad
add
sub
pop
inc
stc
mov
ret
das
ror
call
sbb
jp
add
mov
add
pop
and
pop
or
js
mov
movsl
js
clc
or
and
cmp
je
test
and
or
sarl
or
mov
shl
in
inc
mov
push
sahf
push
dec
shr
dec
sar
add
rclb
mov
add
mov
rclb
lods
or
js
lods
jp
fdivrs
repnz
outsb
out
mov
dec
push
sbb
and
cmp
lcall
int
or
jne
and
push
pop
and
fisubrl
or
push
push
sbb
inc
adc
call
scas
test
lcall
ret
andb
outsb
and
and
dec
mov
inc
sbbl
aam
add
mov
cmc
push
pop
and
incl
sahf
subl
inc
mov
lret
push
push
mov
int
cld
je
ss
mov
mov
xchg
fnsave
mov
addl
cmpsb
xorb
in
imulb
dec
xor
adc
push
or
or
and
cs
mov
outsl
outsb
cmp
xor
pop
push
cltd
pop
inc
xor
dec
pop
mov
sbb
ss
jo
call
add
addl
lea
orb
test
testb
push
sub
lock
outsb
xor
add
add
aad
xor
gs
dec
xor
sub
or
loopne
mov
add
les
cmp
pop
mov
cmp
sub
sbb
divl
mov
inc
adc
ror
jge
inc
arpl
xchg
push
call
adc
jge
inc
lcall
jnp
mov
adc
loope
adc
scas
or
and
hlt
fimull
add
test
add
and
divl
addb
faddl
dec
xor
les
and
and
mov
add
orb
and
js
and
inc
sti
xchg
adc
lcall
push
xor
add
clc
test
popf
call
sbb
mov
fsubrs
shl
shll
dec
adc
sbb
pop
sti
pop
mov
sub
or
mov
jge
js
or
pop
shrb
adc
xchg
addb
add
adc
in
mov
mov
loop
cmp
js
dec
xor
inc
clc
pop
push
movl
dec
mov
dec
out
out
push
push
cld
xchg
mov
aam
scas
dec
hlt
and
insl
mov
and
sbb
pusha
data16
dec
dec
jle
adc
cld
and
cmp
jb
es
push
popa
lock
add
hlt
inc
mov
cmp
call
adc
inc
sbb
sub
add
and
mov
xor
dec
mov
sub
or
dec
mov
cmp
pop
mov
imul
dec
jb
mov
mov
mov
jmp
adc
ja
sti
pop
or
xor
std
xchg
inc
mov
add
pusha
or
cltd
dec
cmp
fsubr
push
jmp
fisttps
mov
int3
or
testb
and
mov
add
aaa
xor
dec
je
jg
sub
lea
fdivp
mov
mov
ficompl
int3
orb
xor
add
sub
xor
shlb
loope
or
je
pop
sbbb
xor
or
cld
sbb
mov
stos
cmp
sub
jp
leave
ret
push
popl
orl
add
iret
jae
aam
hlt
mov
rolb
pop
loopne,pt
add
and
sbb
sbb
xor
leave
sahf
pusha
or
push
shl
loop
dec
ret
test
movsb
xorb
hlt
mov
cmp
pop
mov
sbb
out
jmp
loopne
push
cmp
ja
icebp
push
fucomip
adc
call
push
add
shll
mov
push
jecxz
sbb
jp
data16
ror
or
std
lahf
inc
in
add
aas
mov
loopne
adc
or
mov
adc
jp
inc
sbb
pop
insl
adc
fisubrs
adc
push
sbb
mov
xchg
ffree
sub
jnp
mov
pop
xchg
shlb
or
jae
fnsetpm(287
clc
sbb
notb
in
jl
xor
jbe
adc
jae
int
call
andl
icebp
pop
adc
pop
call
add
cmp
mov
dec
js
sub
cmc
sti
mov
sbb
pop
cmp
fisttps
jmp
sub
and
jp
mov
pop
in
pop
or
inc
sbb
ds
call
repnz
roll
pop
cmp
pop
and
inc
addr16
cwtl
pop
adc
add
int3
push
push
pop
pushf
push
sbb
test
xor
jnp
adc
fs
mov
pop
jo,pt
cmc
mov
cmc
rorb
ja
popa
adc
xor
cmpsl
scas
cwtl
repnz
pushf
out
push
dec
loopew
xlat
data16
ja
inc
fwait
or
xor
imul
sub
push
loopne
adc
xor
pusha
insb
add
fistpll
sub
sbb
inc
ficoms
enter
pop
sti
loop
in
xchg
jmp
ljmp
add
outsb
or
js
add
bound
cld
mov
xor
add
jo
test
fldenv
sbb
jp
out
add
es
testl
fsubs
int3
cmp
adc
test
test
push
jg
or
adc
lock
loop
pop
repz
or
fiadds
xor
mov
insl
mov
inc
addb
jno
cmp
int
shll
fadds
cmc
push
mov
popf
mov
adc
ja
inc
cmpb
sub
adc
add
jo
movl
adc
cmp
dec
repnz
out
cmp
jnp
icebp
xchg
add
ret
gs
clc
pop
mov
mov
mov
xor
mov
popa
jecxz
xor
adc
xor
movb
mov
sub
jp
adc
mov
add
jp
popa
sti
pop
popf
mov
push
repnz
mov
mov
fists
int3
adc
push
inc
inc
xor
ljmp
mov
and
scas
pusha
rorb
jno
cmp
repz
pop
inc
rol
inc
cld
mov
mov
shlb
add
push
mov
mov
jb
test
roll
mov
jne
xchg
mov
or
dec
stc
lods
aas
mov
push
fiaddl
addb
add
and
out
shrb
sbb
and
loope
pushf
sub
push
repnz
rcll
jmp
jae
add
jo
ret
fistps
pop
es
jmp
xchg
hlt
xor
sub
shrb
dec
cld
rolb
dec
testl
push
jbe
inc
add
mov
sti
cmp
push
xor
jmp
das
loop
xor
rcr
adc
inc
inc
loope
lock
adc
lret
push
loop
inc
adc
loope
shll
roll
jo
xor
roll
sbb
sbb
int3
push
loopne
call
pop
and
xchg
jne
mov
cmp
mov
js
pop
mov
pop
cwtl
xor
push
xor
outsl
dec
fwait
lea
sbb
lahf
hlt
adc
mov
rorb
stc
mov
fsubr
icebp
test
jno
les
mov
inc
idiv
push
xchg
aam
sbb
dec
or
xchg
lahf
sbb
add
cld
call
and
test
insl
adcb
loopne
and
mov
mov
movsl
rol
mov
insb
mov
in
mov
add
cmpsl
pop
imul
sbb
ret
mov
adc
flds
sti
popa
mov
sub
shlb
test
mov
dec
icebp
in
add
lret
dec
lds
mov
divb
addr16
fucomi
addl
jmp
ss
lods
das
icebp
pop
std
incl
testb
nop
adc
lcall
sbb
fcmovb
xchg
dec
shr
adc
sbb
iret
adc
cmp
xchg
fnstcw
sbb
orl
inc
shlb
inc
lcall
bound
sbb
sbb
cmp
jp
cmp
pushf
xchg
aad
jmp
cs
imul
hlt
inc
imul
or
mov
js
sub
lods
jl
pop
pop
add
push
fdivrs
jae
icebp
int
or
icebp
xlat
arpl
sub
mov
mov
add
fildll
rorb
mov
xor
data16
sub
bound
adc
mov
lret
jmp
adc
clc
sub
jmp
dec
ja
stos
and
ret
loope
pop
adc
adc
adc
pop
add
push
pushf
mov
icebp
arpl
in
negb
adc
sbb
fwait
js
mov
popa
repnz
lret
xor
cmpsb
push
mov
bound
add
add
or
push
sub
cli
clc
dec
shrl
rcrb
dec
push
scas
imul
adc
js
loop
call
inc
mov
adc
inc
inc
sub
andl
shll
dec
and
es
enter
bound
imul
sub
jl
cmp
mov
adc
mov
dec
lods
inc
add
and
shll
add
fwait
cmp
mov
ret
push
jge
pusha
orl
cs
mov
imul
mov
xor
rorb
imul
sahf
sbb
xchg
pop
shll
and
pop
iret
xchg
cmp
cmp
rclb
lods
jmp
pop
out
fdivrs
add
lods
jmp
add
in
cmp
fs
into
and
fcomps
mov
enter
cltd
int
mov
flds
mov
nop
test
cmc
sbb
or
jns
ficoms
jo
and
addr16
ret
xchg
enter
popa
mov
neg
pop
bound
dec
sub
dec
xor
bound
pop
adc
cmpsl
fwait
add
and
adc
cmp
adcl
or
aaa
outsl
jne
xor
or
or
mov
outsl
movb
mov
and
rorl
add
add
inc
jns
imul
jp
push
ja
xlat
ja
jbe
push
aaa
jp
inc
push
fs
dec
mov
sub
sbb
push
lcall
push
add
and
sbb
inc
pop
negl
adc
nop
lcall
cmp
pop
adc
in
fnstsw
je
sub
mov
ret
es
cmp
jo
pop
loop
inc
cmp
out
xor
in
add
jno
xor
jbe
add
loopne
inc
xor
rclb
xor
mov
mov
faddl
rep
mov
add
add
xorb
cld
mov
js
or
lret
sub
movsb
mov
aad
sub
sub
adc
add
sbb
xor
push
jl
add
scas
jb
daa
clc
iret
cmc
add
test
sbb
cmp
loopne
lock
pop
mov
or
movsb
sbb
addl
fwait
lcall
cltd
pop
pop
mov
push
icebp
lds
cmp
mov
push
and
push
hlt
cli
mov
fistpl
sub
js
out
ret
or
add
icebp
adc
add
shlb
push
mov
je
adcb
and
sub
jecxz
sbb
mov
sahf
adc
mov
fmuls
sarl
fimuls
jmp
cmpsl
add
arpl
push
cmp
cs
rcrb
pushf
stc
pop
clc
hlt
fcmovnb
pop
daa
jle
or
jmp
nop
xor
pop
pop
xchg
rorl
clc
jg
fidivrs
mov
js
xchg
clc
scas
ja
hlt
inc
xor
cmp
popf
imul
outsl
mov
push
stos
jge
sar
cmp
js
mov
outsl
adc
pushf
cwtl
jl
add
adc
jge
or
adc
push
and
sar
sub
push
lods
mov
cwtl
rolb
gs
sub
xchg
test
bound
hlt
insb
ds
lret
add
ret
mov
lds
sbb
out
sub
pop
and
dec
shrl
andb
mov
and
mov
push
clc
fcmovu
sbb
add
inc
idiv
push
sub
add
sbb
sbb
insl
sbb
add
mov
mov
xor
aam
push
sbb
add
sti
dec
fdivl
mov
sbb
jl
or
adc
cmp
adcb
rolb
mov
mov
popa
gs
mov
xor
loopne
repnz
nop
roll
and
inc
je
push
mov
jle
in
add
or
jae
xchg
movsb
cmp
xor
outsl
push
add
data16
jo
enter
xchg
daa
and
inc
daa
add
add
adc
pop
add
sbb
pop
ror
movsl
popa
cmc
sbb
inc
cmp
and
call
roll
cmp
je
sbb
les
jb
test
push
mov
xor
sbb
pop
dec
mov
das
jmp
incl
pop
sbb
push
sbb
ja
sub
add
push
cmp
mov
push
movsl
rol
iret
push
xor
sbb
sub
sub
mov
sub
push
add
faddl
js
pop
jo
jb
test
add
xor
push
stos
outsb
es
ret
mov
cld
popa
sub
lods
add
or
sbb
nop
or
add
sbbl
pop
pop
or
cmp
shll
sub
and
into
pop
mov
pop
pop
pop
add
inc
fwait
mulb
push
outsb
push
xor
inc
or
cmp
and
xor
add
test
pop
push
xor
inc
add
xchg
push
xchg
sub
dec
adc
pop
in
pop
inc
stos
or
roll
out
pusha
stc
lea
mov
mov
lahf
inc
shll
lahf
push
shr
jne
sub
popf
out
hlt
test
add
loop
mov
push
cwtl
sbb
jmp
js
sbb
sbb
daa
mov
nop
scas
les
mov
pushf
sub
out
mov
ja
push
ss
xor
push
es
inc
div
nop
or
or
adc
loopne
xor
inc
add
cmp
out
leave
bound
inc
cltd
pop
sub
add
not
dec
repnz
lock
loope
mov
fimull
xor
imul
mov
fimull
push
add
scas
and
test
pushf
jbe
outsb
clc
push
or
out
or
add
cmp
push
or
idiv
xchg
test
stc
das
dec
pusha
shlb
pop
lret
inc
adc
lret
es
push
add
lret
mov
cld
outsb
dec
pop
sub
jle
inc
cltd
sub
insl
lds
add
in
push
jne
pop
fmul
clc
and
roll
repz
pop
dec
loopne
jb
pop
pop
aas
dec
and
fxtract
jmp
por
mov
dec
xchg
sub
in
into
or
aam
stc
mov
fildll
mov
add
mov
add
pop
and
test
mov
flds
cmp
fldz
lret
and
dec
jecxz
xchg
cmp
jmp
fisubs
lahf
add
dec
jo
push
mov
and
jl
jnp
push
in
adc
sub
mov
inc
repz
dec
add
out
ret
add
add
cmp
ret
inc
mov
hlt
ds
cmp
icebp
test
sub
adc
fcompp
mov
or
add
ja
sbb
inc
mov
loop
call
mov
test
adc
loop
mov
sbb
jp,pn
and
mov
bound
aad
ja
icebp
mov
call
inc
inc
daa
cli
pop
xor
mov
mov
and
push
mov
dec
test
pusha
mov
cmp
jae
subb
orl
or
jp
das
add
orb
pop
cmpsl
jb
jle
test
out
mov
rcrl
shrl
sbb
xchg
adc
mov
sub
sub
test
push
inc
xor
mov
mov
adc
add
push
jle
cmp
test
aas
test
dec
stc
ljmp
add
data16
iret
sub
push
inc
add
inc
std
lock
add
push
xchg
pop
add
hlt
cmpsb
call
jo
and
or
xor
add
sub
je
in
loop
jp
jbe
inc
jmp
xor
cs
lock
cwtl
imul
roll
test
adc
adc
push
das
mov
arpl
pop
testl
or
jbe
outsb
adc
xchg
test
cmp
cmp
popf
inc
pop
sbb
jmp
or
and
and
pushw
mov
mov
sub
add
xor
sbb
ret
dec
xchg
adc
cmp
and
negl
cmp
jmp
dec
inc
lock
lret
inc
cmp
or
arpl
movsb
and
cmc
add
adc
xor
call
add
and
fsubrs
cmp
ss
adc
sub
inc
push
rcl
pusha
inc
sbb
push
cmp
test
icebp
mov
mov
inc
lcall
lret
xor
fcoms
mov
out
add
icebp
in
adc
daa
and
sbb
xlat
or
mov
add
mov
clc
add
push
jge
add
or
push
fs
dec
iret
cmp
mov
inc
or
lret
dec
sbb
insb
push
sahf
fwait
sbb
pop
leave
adc
jne
push
dec
loop
or
out
out
add
fstpl
or
push
mov
aas
xor
add
lods
push
ds
ja
inc
xchg
mulb
inc
rdtsc
sub
test
jnp
cli
ret
jne
jnp
or
insl
push
adc
adc
movsl
cmp
pushl
test
add
outsb
cmp
sub
pop
gs
icebp
xor
mov
push
inc
js
add
clc
loopne
mov
sub
cmp
add
cmp
adc
stc
mov
pop
inc
add
inc
test
jmp
cmp
and
loopne
fdiv
daa
or
mov
test
ret
notb
call
sbb
es
icebp
stos
sbb
sbb
sub
cltd
cmp
mov
addr16
mov
in
ret
jnp
rorl
jg
sti
push
jb
xor
mov
add
or
movsb
sbb
outsl
shl
cmpsb
jge
mov
in
push
xchg
insb
cmpsl
pop
dec
cmp
and
sub
mov
and
stos
incb
add
scas
and
adc
cmp
aad
and
hlt
jl
add
jb
hlt
sub
inc
aas
xchg
lcall
movsl
mov
and
mov
dec
add
mov
cld
cld
out
xor
cwtl
cltd
push
mov
nop
add
dec
mov
mov
jecxz
mov
xchg
sbb
jo
push
sbb
adc
bound
mov
out
lds
imul
jae
sub
cmp
lret
add
cwtl
aas
mov
mov
pop
loopne
or
jle
shlb
cs
addl
xchg
ljmp
push
sub
mov
aam
cmp
xor
add
ret
pop
xor
inc
fisubrs
adc
jmp
inc
out
push
add
pop
xchg
sub
test
shll
sbb
outsl
xchg
mov
shll
mov
jbe
aaa
xor
push
shll
out
or
xor
adc
add
push
or
sub
lea
and
inc
mov
add
movsb
dec
sub
stos
repz
or
and
fnstenv
jl
mov
js
cmpsb
xchg
sbb
and
jo
or
add
sbb
xadd
dec
sub
daa
mov
fcmovnbe
sub
inc
sar
mov
sub
mov
lret
pop
out
inc
cmp
push
add
mov
or
rcrl
sbb
stos
fnstcw
shl
cltd
add
data16
lahf
and
adc
inc
cmp
adc
jge
xor
pushf
mov
test
jb
inc
clc
loop
addr16
push
sub
adc
and
js
out
and
ljmp
roll
cmp
fwait
add
dec
imul
xor
mov
jo
ja
in
or
test
jb
cmp
sub
insb
dec
jmp
js
fs
add
inc
mov
mov
mov
pop
adc
sub
dec
ds
dec
jg
ret
shll
and
mov
mov
cmp
add
scas
mov
cmp
xor
adc
lods
mov
ret
xor
dec
pop
adc
jbe
fmull
inc
loope
inc
addr16
push
inc
dec
xor
or
js
imul
push
hlt
xchg
sub
xchg
outsl
cmpsb
add
adc
sbb
inc
pop
dec
and
clc
movsl
or
or
mov
sbb
decl
xor
arpl
add
push
mov
fiadds
jne
inc
xor
and
sbb
in
jmp
outsl
in
jbe
mov
hlt
in
popf
jmp
xchg
es
jne
lock
jecxz
sbb
xor
test
sbbb
cwtl
loope
add
mov
add
js
or
dec
lock
push
outsb
prefetch
nop/reserved
cmp
or
jo
adc
sbb
push
xor
pusha
mov
lahf
sub
roll
mov
and
mov
push
mov
xchg
sbbb
test
inc
andb
mov
xor
orb
adc
mov
lret
and
sub
and
inc
add
push
test
mov
dec
add
cmp
adc
sbb
jno
lea
add
out
addr16
push
jge
sbb
pop
sbb
lods
jle
sbb
dec
outsb
push
dec
jne
aaa
pop
sub
ds
mov
ret
sti
negl
imul
dec
int3
shrl
xor
repnz
jbe
clc
sub
cmp
lds
inc
or
in
outsb
or
mull
or
and
xor
jo
push
add
push
add
push
inc
add
add
notb
ret
or
pop
leave
ret
mov
ljmp
jo
sub
push
fmull
and
inc
jg
push
jmp
jle
imul
test
or
ljmp
mov
outsl
pop
jne
cmp
mov
mov
mov
add
push
xchg
dec
pop
xchg
movsb
das
xchg
add
inc
push
push
xchg
mov
pop
xor
or
clc
xrelease
pop
sub
fldl
or
add
outsl
push
insl
push
or
sbb
or
pop
movsl
mov
add
addps
subb
and
testl
movsl
push
stos
xor
push
gs
push
add
outsl
cmp
das
shrb
or
mov
aad
rclb
push
or
push
and
push
mov
xlat
repnz
sub
mov
inc
xchg
les
lods
push
rcrb
call
movsl
adc
mov
test
sub
push
mov
fcomps
mov
push
shlb
mov
inc
pop
stos
pop
icebp
jne
xchg
or
sub
clc
adc
mov
gs
push
push
lea
aad
add
adc
pop
sub
outsb
push
mov
int
pop
sub
sub
sbb
push
add
test
lock
pop
nop
jns
or
sub
adc
inc
cmc
push
ss
or
divb
push
inc
xor
push
push
hlt
sti
jl
jp
pop
inc
inc
outsb
icebp
test
aam
loop
insl
xchg
sar
mov
dec
inc
pop
fmuls
sub
inc
add
inc
xchg
cwtl
insl
dec
inc
inc
xor
push
loop
xor
cmp
push
orb
jp
mov
inc
outsl
neg
mov
sbb
int
adc
xchg
icebp
sahf
mov
jne
dec
mov
sbb
repz
mov
int3
sbb
pushf
lods
mov
pop
inc
test
mov
call
fidivs
push
pushf
xchg
nop
xor
push
adc
sbb
cli
mov
adc
sbb
daa
aam
lock
cmp
icebp
shrb
push
push
jae
adcl
fs
rclb
insb
std
add
pop
fadds
adcb
subl
leave
or
jae
xchg
xor
add
ljmp
daa
jno
pop
push
add
daa
mov
sbb
icebp
ret
xchg
jp
mov
pusha
test
xor
bound
mov
push
ret
cld
fwait
sub
or
lret
lret
cs
call
loope
and
mov
out
or
faddl
inc
jnp
jmp
fsubl
push
cmc
data16
aam
clc
pop
and
push
fisubs
push
and
adc
ret
mov
iret
ss
aam
dec
aad
add
cmp
cmpsb
cmpsl
jno
lcall
mov
add
fcmove
into
fstpl
sub
je
cmp
xor
div
fdiv
loop
inc
icebp
xchg
push
mov
inc
ja
popa
outsb
ljmp
jmp
jbe
and
jp
inc
jnp
call
fs
adc
jno
push
aas
adc
dec
repnz
test
push
adc
xor
mov
sbb
hlt
push
rcrb
xor
mov
mov
clc
lock
fmuls
fistpll
cmpl
and
mov
jbe
jno
xor
xor
jno
inc
shll
addb
add
push
push
int3
mov
push
xor
mov
sub
mov
in
mov
rcrb
call
mov
lods
cmp
inc
test
daa
cmp
testb
xor
or
sahf
jnp
leave
pop
sbb
int
jne
mov
add
mov
mov
inc
add
sbb
sub
xchg
cmp
jg
add
shrb
jge
sub
dec
mov
or
mov
xor
or
xor
aam
popa
jbe
mov
add
inc
dec
and
mull
mov
int
or
mov
or
push
xchg
xor
jle
and
stc
fld
jp
mov
add
pop
hlt
sub
xchg
push
cmp
fistpll
push
sub
cmp
mov
mov
push
mov
pop
in
inc
sbb
cltd
xlat
mov
cmpl
jle
cs
add
mov
decb
ds
popa
xor
shrl
sub
pop
pusha
jno
or
add
mov
xor
mov
push
or
lea
mov
mov
push
insl
lods
adc
sbb
les
or
mov
inc
ja
dec
pop
les
add
adc
pop
pop
mov
dec
push
pop
cmp
inc
rclb
sub
dec
push
adc
mov
dec
bound
jle
jo
jne
jne
push
subb
cltd
sub
sbbb
inc
les
add
movsl
rcrl
add
cmp
lea
adcl
add
cmp
lods
subl
push
adc
stos
pop
mov
or
cmp
adc
push
imul
movsb
xchg
ja
xorb
push
xor
inc
daa
rolb
pop
out
add
lret
xchg
xchg
push
les
and
xor
push
push
mov
fldcw
xchg
add
xchg
sarl
mov
pop
dec
inc
push
rorb
cli
cmp
aas
addl
insb
scas
orb
jb
rolb
inc
mov
inc
pop
cli
out
add
pop
sub
das
mov
add
mov
addr16
inc
hlt
jo
sub
inc
pop
push
jne
push
fs
jns
mov
sbb
ror
dec
insl
int
sub
mov
push
xor
add
clc
cmc
rcrb
xlat
jnp
push
pop
leave
mov
leave
or
jmp
inc
or
int3
mov
fisttpl
inc
sahf
int3
jns
pop
mov
mov
clc
adc
pop
sub
sbbl
mov
sub
push
rclb
xchg
fcmovb
test
ror
jb
cmp
pop
jle
or
sub
leave
dec
inc
lods
or
pop
cli
mov
shll
pop
xor
test
ss
mov
push
push
mov
adc
add
mov
sub
insb
and
or
lods
in
inc
dec
mov
push
imul
fs
ja
mov
mov
dec
sub
adc
movsl
xor
sub
fistpl
jle
das
sub
stos
or
mov
cmpsb
lcall
scas
or
cmp
fistpl
and
sub
or
cmc
cli
jle
push
subb
xchg
adc
mov
adc
adc
push
or
pop
ret
mov
loopne
xor
out
push
adcb
aad
arpl
mov
fistps
or
sbb
jb
and
aam
xchg
push
mov
push
adc
cli
outsl
cmp
or
dec
mov
mov
push
sti
pop
jmp
cmp
add
ja
test
loop
xor
mov
fcmovu
cmc
mov
xchg
or
push
lret
and
hlt
addb
inc
outsb
inc
mov
mov
movsl
adc
mov
cmp
adc
bound
es
bound
gs
xchg
in
mov
adc
push
push
mov
xchg
xlat
aam
sub
imul
sbb
xor
scas
push
insb
and
or
clc
and
sarl
rcrb
mov
hlt
test
cmp
les
push
es
fcmovnb
or
ljmp
mov
inc
add
xor
mov
rclb
or
loopne
dec
movsb
sbb
mov
adc
push
aaa
push
sbb
mov
xchg
jo
mov
movb
sti
dec
and
shll
mov
jo
test
ret
lret
dec
cmovl
mov
pop
jne
out
push
sub
jmp
dec
lods
test
push
inc
jecxz
xchg
push
lret
movsl
arpl
add
cwtl
shlb
or
dec
add
adc
xchg
into
or
push
stos
push
mov
mov
add
sub
jb
nop
cmpsl
xchg
mov
mov
dec
inc
ss
mov
inc
mov
dec
mov
push
jns
mov
or
sub
push
aam
stos
inc
out
arpl
sbb
dec
xor
lea
inc
imul
adc
bound
jb
jne
shrl
jno
in
add
cmp
sub
dec
aaa
mov
or
addr16
add
cmp
add
lret
jb
insb
mov
test
icebp
or
add
push
pop
push
jno
clc
or
dec
fsubrs
test
loop
cli
jp
lock
pop
stos
adc
cmp
les
leave
inc
jl
daa
add
cmp
add
push
stos
adc
ror
inc
rclb
and
mov
inc
pusha
mov
sub
lea
xchg
xorb
sub
pop
movsl
mov
sub
mov
movsb
add
sbb
push
dec
out
cmp
pop
inc
test
stos
cmp
cmp
sbb
cwtl
pop
sarb
adc
mov
sub
or
cmpsl
push
push
mov
push
test
push
push
pop
mov
and
push
push
sbb
sti
movsb
clc
pop
jmp
push
push
mov
cld
insl
subb
cmp
gs
aad
nop
je
push
lods
sbbb
or
push
and
jmp
pushf
add
xchg
cmpb
les
sbb
push
cmp
dec
mov
loopne
fidivrl
jle
mov
lcall
xchg
ficomps
pop
imul
sub
notb
or
mov
jo
push
mov
outsl
push
and
and
inc
mov
dec
adc
lahf
and
dec
test
imul
inc
insl
mov
or
test
movsl
cwtl
repnz
or
mov
jle
mov
pop
fildl
jl
push
les
out
lea
inc
push
out
push
dec
loope
mov
mov
lcall
and
inc
pop
mov
popl
pop
xor
jne
faddl
pop
push
jne
je
add
mov
adc
sahf
adc
sbb
cwtl
and
jae
lea
scas
dec
add
sbb
mov
fidivrl
sbbb
addb
popa
imul
add
jmp
jno
addb
mov
adc
pop
pop
outsb
lahf
sbb
add
les
inc
push
lcall
add
lcall
push
sub
fistl
pusha
rcl
and
push
add
xchg
repz
leave
add
insb
sbb
pop
leave
xor
xchg
adc
and
ljmp
and
test
adc
and
dec
adc
inc
inc
sbb
xor
jns
and
adcb
pusha
imul
jl
dec
aaa
or
popf
fs
add
imul
xchg
mov
fisttpll
dec
add
inc
rcrb
test
subb
mov
ret
imull
or
mov
ljmp
popa
arpl
mov
push
loopne
dec
shl
sti
push
int3
fisubrs
orb
sbb
mov
mov
pop
mov
lret
pop
cwtl
add
mov
inc
arpl
lods
shlb
push
test
test
ja
fcmovnbe
push
jno
mov
movsl
push
push
mov
jno
mov
mov
or
mov
lods
push
rorb
mov
aam
adc
xor
pop
sub
pop
push
outsb
sbb
inc
jno
mov
mov
adc
imul
imul
push
add
sub
ret
or
pop
mov
scas
test
fimull
jo
inc
imul
cmp
mov
jecxz
add
add
cltd
fwait
sub
ret
xor
push
or
fistpl
push
xchg
or
pop
ret
adc
popa
adc
inc
adc
cmpsb
mov
lret
mov
inc
imul
mov
ss
aam
push
or
andl
test
mov
inc
pop
imul
mov
arpl
jae
dec
fldl2e
xor
or
push
adc
xchg
inc
xchg
sbb
adc
jmp
dec
lods
insl
push
sub
mov
push
dec
das
mov
and
fisttpll
and
mov
out
push
pusha
shrl
gs
repnz
and
lods
sbb
sub
cmp
or
loopne
cli
lea
lea
cs
mov
imul
inc
mov
or
mov
sub
outsl
inc
mov
aad
sti
or
adc
orb
fsubs
xchg
incb
pop
push
add
faddl
adc
sbb
lea
mov
mov
mov
cmp
dec
rcr
inc
sbb
mov
movsl
push
test
imul
dec
test
mov
lods
inc
and
inc
mov
sub
dec
sbb
mov
pop
sbb
push
xchg
cld
xchg
lcall
or
rol
jp
subb
xchg
or
add
jno
outsl
mov
lcall
sarl
mov
icebp
sbb
stos
dec
adc
cmp
mov
lcall
sbb
jle
xor
mov
aaa
cmc
xchg
fucomip
jmp
add
in
adc
subb
les
inc
add
ja
pop
push
jae
roll
movsl
pop
inc
jmp
sbb
ljmp
xchg
mov
push
push
mov
rcl
mov
mov
pop
movsl
sub
or
repnz
arpl
inc
push
cmp
lods
sbb
xchg
mov
shrb
dec
xor
test
scas
xlat
sbb
sub
in
notl
mov
out
scas
add
dec
daa
bound
lods
shrb
pop
pop
int3
sbb
int
xchg
js
pop
push
mov
jmp
bound
adc
push
xchg
pop
ret
inc
fnstenv
fisttps
push
sub
dec
pop
pop
mov
add
test
sub
lods
and
pop
incb
sub
or
aas
leave
or
or
nop
in
outsl
or
insl
push
lret
jno
dec
sub
sub
call
cmp
pop
in
lret
push
sub
lock
pop
xor
push
adc
fisubl
stos
adcb
push
push
pop
mov
rep
lods
shll
and
add
sbb
incl
pop
sbb
sbb
push
sahf
xchg
decb
aam
cltd
mov
push
jb
sub
push
jo
add
cs
shlb
out
pop
add
fs
push
xor
sub
mov
pop
es
xchg
or
pop
popa
add
orb
lods
cmp
aaa
fldt
sbb
adc
xchg
adc
push
imul
sub
sbbb
pop
movsl
push
xor
push
xor
movsl
push
jae
outsb
mov
pop
add
adc
push
push
jg
and
loope
pop
fwait
lods
in
rorl
icebp
rcr
sub
add
roll
or
lahf
js
add
das
add
bound
mov
into
scas
nop
jb
adc
mov
mov
test
rcrb
fildll
sbb
cmpsb
sbb
test
pop
mov
push
jmp
lods
gs
jns
inc
adc
adc
adc
insb
xchg
and
xor
xchg
imul
mov
or
or
adcb
adc
and
push
rcrb
cli
lods
pop
cli
pop
fidivs
sbb
mov
sbb
and
jmp
push
xchg
in
mulb
roll
bound
dec
cmp
in
add
aad
dec
stc
or
sarb
add
xor
or
lret
pop
add
dec
pop
enter
push
orl
xchg
dec
movsl
adc
rolb
cmp
aam
xchg
jae
rol
fdivl
push
aas
das
inc
jo
push
mov
inc
add
inc
sub
adc
das
push
dec
pop
push
mov
and
cmp
bound
mov
roll
add
lahf
icebp
add
mov
pop
mov
add
lods
lea
es
addl
push
mov
je
ret
xchg
xchg
xorb
les
negl
sbb
inc
mov
cmp
push
cmp
mov
push
pop
icebp
insl
push
test
push
arpl
dec
fcmovnb
cmp
rcl
push
sub
xchg
int
leave
push
jns
add
xchg
orl
mov
mov
lods
push
push
jg
pop
clc
mov
es
and
data16
je
push
enter
or
mov
sbb
inc
scas
xchg
call
cmp
push
test
scas
mov
jmp
mov
aam
dec
push
movsb
lds
push
inc
pop
push
push
cmp
add
mov
jne
frstor
adc
loopne
push
sub
andb
rep
xor
and
pop
jmp
movsl
lods
push
push
pop
jno
pop
push
adc
sbb
push
popa
subb
outsl
lcall
lahf
adc
push
mov
les
inc
sbb
push
jmp
jle
push
adc
push
add
push
push
rclb
sbb
into
xchg
ss
xor
imul
push
adc
add
mov
ss
inc
cmpsb
and
push
adc
imul
clc
push
dec
cwtl
add
dec
arpl
push
pop
cs
push
cmp
mov
jle
and
aaa
jb
push
or
dec
sub
jmp
ds
lods
loope
test
lods
and
cmp
inc
mov
sub
push
mov
mov
pop
imul
loopne
dec
push
dec
fstps
data16
shrl
sub
xchg
pop
into
lahf
std
or
inc
add
sbb
cmp
and
or
out
dec
cmp
mov
das
inc
mov
in
adcl
stos
mov
pop
mov
sahf
xchg
or
mov
push
sub
in
xor
adc
inc
push
lock
inc
shll
scas
aam
push
push
test
xor
mov
and
push
sbb
test
cmp
test
mov
push
movsb
cmp
sub
in
jbe
test
adc
outsl
out
xor
mov
push
ret
enter
xchg
mov
inc
xchg
imul
pusha
cmc
or
pop
and
rcr
dec
inc
repnz
rclb
lcall
jle
push
lods
rcll
sbb
sbb
adc
enter
or
std
and
je
dec
das
cmp
sbb
sar
stc
add
push
mov
xchg
xchg
sub
mov
or
jb
sbb
inc
xor
add
pop
icebp
lahf
imul
aad
dec
pop
and
mov
push
xchg
ljmp
pop
aaa
ret
xchg
push
outsb
test
pop
push
xchg
jo
repz
andb
pop
xchg
outsl
sub
mov
dec
add
or
push
stos
xlat
lods
and
push
push
in
lock
xchg
dec
sub
imul
or
rorl
test
pop
mov
mov
mov
mov
pop
mov
sub
lods
cmp
xor
push
jbe
cmp
shlb
ret
fyl2x
cmp
push
inc
and
add
and
inc
cmpsb
push
jb
mov
adc
pop
and
aam
cs
inc
pop
adc
xor
sbb
rcrb
mov
dec
pop
es
sbb
inc
push
das
pop
xor
xchg
pusha
xor
xchg
test
mov
cmpb
push
pop
adc
jle
sub
insb
jge
aaa
add
shll
cmpsb
dec
inc
mov
scas
mov
stos
insl
sbb
pop
add
mov
jno
ss
dec
lea
icebp
in
hlt
cmp
push
imul
roll
or
jl
mov
and
sbb
adc
push
mov
dec
sbb
and
and
mov
mov
push
inc
stos
adc
nop
lret
aad
fdivp
jb
stos
fisttpl
adc
adc
es
and
gs
sbb
mov
repnz
lahf
push
sub
shlb
shrl
rcrb
push
push
xchg
xor
ss
pop
inc
shl
jle
lods
push
and
lret
xchg
pushf
stc
fwait
ret
sub
add
idivl
iret
mov
popa
sub
mov
push
add
je
mov
adc
sub
fbld
enter
shl
push
ds
xor
push
and
fldl
mov
sub
mov
je
mov
mov
push
mov
adc
insb
or
pop
xor
inc
or
push
ret
push
inc
outsl
nop
cmp
or
lahf
mov
add
adc
pop
ror
mov
cmp
push
nop
out
sub
push
jae
call
or
fwait
invlpg
sub
fcoms
in
and
and
out
or
sub
and
lock
repz
repnz
and
push
push
and
mov
pop
ficoml
adc
add
xor
xor
sahf
lock
xchg
push
lea
ss
xlat
sub
cli
push
insl
icebp
add
rclb
adc
sub
sub
icebp
dec
ficoml
mov
push
jae
jle
mov
cmp
push
fwait
sub
pop
and
movups
lret
and
add
push
loopne
inc
cmp
cld
int
ret
add
ja
jle
mov
fisttps
push
xor
sub
pop
mov
rcll
or
stc
mov
fidivrs
rcr
movlps
adc
jmp
adc
lret
pop
pop
fsubr
push
test
jbe
and
xchg
cmp
pusha
sbb
dec
stos
xchg
pop
xchg
push
ljmp
adc
and
fistpl
cmp
jo
push
xchg
mov
shll
aam
cs
outsb
rcll
ret
pop
inc
add
inc
cmpsb
mov
lods
mov
xor
stos
lds
mov
in
push
push
inc
lsl
or
push
cmp
test
mov
rorb
int
in
test
roll
mov
jp
mov
cwtl
sbb
loop
sbb
xor
mov
call
lods
cmp
je
inc
sbb
mov
data16
andb
shl
mov
test
mov
stos
xchg
pop
data16
insl
sbb
or
loop
outsl
out
mov
popf
jmp
mov
stos
sub
push
movsl
movsl
jno
ror
test
pop
sete
add
shlb
test
sti
addb
adc
aad
xchg
fucomp
mov
push
xchg
sarl
sbb
pop
shrl
mov
negb
clc
stos
inc
stos
push
sub
in
cli
adc
xor
or
std
fcoml
ss
inc
cwtl
sbb
add
xor
add
jno
add
div
add
mov
dec
mov
dec
cwtl
dec
lahf
in
pusha
mov
and
push
adc
test
cmp
dec
sub
xor
test
adc
addr16
or
xor
mov
mov
imul
sbb
xchg
xor
rcrl
inc
les
sbbb
mov
inc
ds
lods
adc
xchg
mov
sbbl
push
push
test
mov
ret
push
mov
adc
sbb
and
add
clc
orl
scas
sar
cld
and
xor
mov
or
jo
add
mov
sbb
and
mov
rolb
dec
xor
lea
or
sbb
push
pusha
pop
fwait
mov
imul
add
xor
adc
inc
insl
inc
inc
roll
mov
xor
pop
clc
subb
push
lods
mov
mov
in
test
xor
rorl
add
mov
mov
push
and
mov
and
xor
ljmp
outsl
jle
rolb
inc
arpl
notl
or
xor
sub
orb
push
cli
xor
lahf
subb
pop
mov
mov
insl
mov
dec
stc
push
or
adc
adc
insl
mov
mov
push
dec
push
int
jne
or
iret
lods
arpl
push
rol
push
xor
loopne
rol
jbe
push
sbb
test
addr16
mov
icebp
sbb
rcrb
inc
sahf
das
inc
pusha
or
addb
adc
adc
push
ret
fst
lea
mov
xchg
dec
xchg
fldt
das
jg
push
inc
adc
pop
adc
and
and
xor
in
mov
test
inc
add
sbb
leave
cmc
jns
les
aad
rorb
pop
sbb
dec
ljmp
jmp
adc
inc
adc
dec
dec
push
icebp
mov
cmp
jbe
push
adc
loopne
jo
sub
mov
jge
and
mov
pop
inc
enter
fistl
adc
jle
jbe
sbb
mov
inc
adc
lret
pop
inc
je
les
test
sub
push
aad
mov
mov
sbb
fisubs
inc
lea
jmp
cmpsb
cmp
mov
pusha
jmp
jno
mov
jne
or
data16
xchg
rcrl
or
jg
xorb
jle
popa
pop
popf
enter
add
test
xor
and
adc
sbb
push
dec
push
je
jge
add
mov
cmp
ja
mov
fildl
mov
mov
mov
aas
shrb
sub
je
scas
cmc
and
inc
mov
add
and
divb
mov
mov
mov
adcb
mov
or
inc
cmpsb
xor
add
adc
and
mov
pop
mov
sbb
push
shlb
push
pop
adc
mov
jg
push
add
or
adc
add
adc
ret
or
pop
or
dec
sbb
test
add
add
mov
fnstcw
xchg
mov
fists
add
js
ljmp
mov
data16
mov
rcll
xor
xchg
mov
cmpsb
out
inc
dec
std
scas
mov
pop
add
rorb
test
repz
jmp
pop
xchg
add
xchg
sarl
inc
fildl
mov
cltd
mov
dec
mov
add
or
rcll
adc
mov
add
daa
mov
dec
lods
push
sub
pusha
or
jbe
mov
add
cli
aas
or
lahf
push
sbb
sahf
add
xchg
mov
or
and
aad
push
add
rolb
lret
mov
push
and
pop
sti
cmp
add
lahf
sub
test
push
mov
ljmp
rcrl
inc
insb
sbb
lret
push
mov
mov
lahf
jge
and
sbb
mov
sbb
xchg
dec
mov
gs
xor
xchg
hlt
pop
imul
inc
cmp
push
push
sbb
mov
out
mov
mov
cli
mov
pop
sub
das
dec
bound
xor
adcl
push
lret
push
lods
fists
call
jg
sbb
stos
movsl
repnz
mov
mov
or
shrb
cmp
inc
xchg
or
jo
xor
inc
jne
mov
movsl
add
sbb
or
enter
addl
js
jmp
push
pop
rcrb
popf
rcr
and
mov
inc
movsl
rolb
pop
pop
or
lcall
aaa
mov
aad
out
push
add
jb
mov
fcmovnu
cmp
pop
lock
push
adcl
mov
movsl
stos
subb
mov
scas
jle
cmp
lods
pusha
repz
iret
insl
stos
mov
or
xchg
push
xor
add
push
or
cmp
stos
xor
fsubl
xchg
cli
or
jns
out
scas
cmp
adc
lods
out
pusha
icebp
lods
lock
clc
push
jb
sub
adc
lahf
xlat
pop
and
inc
xor
push
daa
adcb
sub
ret
mov
arpl
push
push
mov
out
push
sub
and
inc
test
push
add
rcrl
cld
xchg
mov
mov
les
roll
cmp
adc
push
fstl
or
js
ds
push
xor
ret
and
add
xor
ret
psrlw
or
xchg
mov
rcrl
adc
xchg
cli
popf
icebp
push
in
lea
das
xor
fdivrp
shlb
lret
dec
pushf
movsb
inc
push
cmpsl
and
sbb
xchg
dec
xchg
jne
pop
inc
shrl
test
sub
xor
cmp
fisttpll
mov
pop
xor
and
add
rcrl
mov
dec
jne
or
mov
add
cmp
fimull
sbb
std
sub
rclb
call
mov
xlat
mov
mov
push
push
xchg
pop
push
add
add
mov
adc
xchg
jb
jp
sti
adc
cmpl
int
push
push
or
mov
adc
xchg
rcll
in
popa
push
sub
scas
pop
sub
test
test
inc
shrb
inc
push
push
add
mov
test
mov
add
pop
sub
ret
cmp
push
icebp
sbb
xacquire
dec
cmp
ret
or
and
add
xchg
mov
push
push
sbb
mov
push
lea
or
ljmp
sub
rol
jno
xor
mov
or
mov
fiaddl
pop
inc
sbb
mov
icebp
or
xchg
andl
dec
mov
mov
mov
push
xor
pop
sub
xor
outsl
inc
xchg
sbbb
jge
lods
and
ficomps
popf
shll
test
aam
icebp
lods
mov
pop
mov
mov
or
icebp
mov
push
sub
adc
push
mov
test
adc
add
aad
and
ret
sbb
inc
cmp
mov
vcvtss2sd
fidivl
das
shlb
outsl
clc
ljmp
jae
mov
mov
jnp
mov
movb
mov
insb
jg
dec
xor
adc
jnp
adc
insl
scas
push
stos
push
or
push
xchg
jle
sbb
pop
inc
test
outsl
push
adc
sti
popa
and
sub
and
jae
dec
clc
jbe
lea
adc
ret
repz
sub
push
rorl
inc
imul
mov
dec
push
mov
xchg
nop
and
inc
mov
adc
stc
cmp
xchg
pop
mov
test
xor
add
lcall
sbb
mov
sbb
rol
and
adc
add
mov
into
sub
das
mov
loopne
push
roll
andb
cmp
mov
stc
dec
aad
push
sub
sbb
jl
jl
mov
add
shrb
int3
push
and
xor
or
pop
add
ret
jo
jl
fmuls
inc
sahf
mov
ss
and
orb
sbb
mov
js
popa
add
lea
push
inc
jp
sbb
xchg
scas
movsb
andb
iret
xor
add
or
or
rclb
shrb
enter
add
repz
andb
loope
mov
jae
mov
mov
pusha
insb
mov
fidivs
add
js
push
les
and
adc
movsb
daa
sbb
aas
sbb
dec
add
adc
test
mov
rorb
negl
mov
cli
ja
ss
lcallw
adc
or
or
add
lea
imulb
es
call
push
mov
xchg
mov
jb
stos
lea
push
push
or
xchg
push
add
push
cs
inc
mov
mov
cmp
ficompl
enter
cmp
pop
test
imul
inc
inc
das
adc
xor
dec
insl
push
mov
add
shlb
rcll
bound
shll
jg
sbb
xchg
sub
or
lahf
xchg
mov
stos
aam
add
dec
sub
dec
cmp
orb
jno
lods
inc
sub
je
fcmovbe
xor
sub
scas
mov
mov
push
push
roll
bound
adc
in
ret
push
mov
jne
shlb
pop
pop
push
adc
mov
sahf
cmpsb
push
mov
movsb
test
jg
shl
out
cmp
mov
mov
add
adc
mov
test
mov
outsl
pop
lcall
movsl
mov
and
ficomps
stos
testb
jg
aad
push
and
rcrb
aam
rcrl
sbb
inc
inc
mov
lods
nop
dec
out
sbb
add
push
mov
jbe
adc
jle
mov
mov
pop
scas
mov
sbb
stos
dec
push
test
imul
mov
inc
cmp
or
aam
cmp
mov
outsb
dec
jbe
enter
mov
sub
or
pop
call
cmp
jle
mov
mov
xchg
bound
inc
sub
andb
movsl
xchg
cmp
jb
les
mov
xlat
fadds
jno
fs
mov
mov
push
mov
aas
sbbb
xor
add
push
sahf
mov
lahf
adc
pushf
icebp
das
shrl
cmpsl
pop
inc
lock
imul
adc
mov
push
sub
or
test
push
aad
dec
mov
or
xchg
out
mov
rolb
stc
inc
mov
mov
mov
add
push
mov
cwtl
inc
adc
sub
cli
adc
inc
lods
sbb
and
mov
outsl
adc
or
mov
ret
test
pop
inc
int3
rolb
adcb
mov
mov
pop
test
jno
and
add
in
imul
push
xchg
lret
in
aad
push
mov
add
addb
ss
xor
lods
jb
pop
add
adc
cmp
xor
adc
aaa
mov
aam
mov
pop
adc
cmp
mov
push
ss
add
fiaddl
push
push
mov
pop
inc
pop
pusha
scas
popf
push
test
fdivs
jnp
add
pop
lods
mov
test
cmp
ret
push
xor
mov
inc
pop
cmp
jne
shl
dec
adcb
in
mov
scas
push
pop
pop
sub
hlt
push
mov
cmp
push
rcll
rcrb
mov
dec
icebp
lods
decb
sub
lea
ret
mov
inc
inc
sub
daa
sub
or
jmp
ljmp
mov
sub
dec
jge
aam
cltd
out
addl
and
jmp
add
cmpsb
inc
daa
and
repz
jmp
mov
xchg
das
shll
popf
dec
cwtl
rcll
or
rolb
mov
push
lock
mov
xchg
mov
dec
mov
sahf
adc
in
jge
add
stos
int3
xor
insl
sbbb
inc
fs
inc
jp
int
andb
or
push
scas
push
test
adc
fwait
and
mov
sbb
cmpb
leave
inc
xchg
xor
jle
mov
jmp
jle
inc
je
xlat
repnz
mov
mov
jo
invd
or
jg
shl
cmp
jbe
fsubrl
pop
push
inc
add
daa
sar
jg
inc
mov
adc
add
or
jb
push
mov
dec
and
sbb
dec
and
das
sub
gs
iret
push
mov
popa
or
rcll
or
fldcw
mov
push
add
test
adc
dec
adc
rcl
push
ss
xchg
lea
push
mov
dec
out
lret
imul
divl
dec
mov
xchg
sub
push
cmp
dec
andb
out
pusha
xor
iret
fisttps
or
scas
sub
shlb
lods
adc
push
movsl
dec
mov
aad
push
fcompl
push
xchg
xchg
cmpsb
in
sub
loope
rcrl
cs
cltd
pop
imul
les
xchg
mov
insb
push
test
xor
push
jp
ret
inc
nop
jle
mov
push
mov
lods
clc
inc
lea
fdivs
inc
imul
push
push
mov
jo
insl
xchg
push
pop
xchg
or
lahf
jmp
inc
lret
das
cmp
add
ret
push
cli
or
add
and
clc
pushf
pop
adc
clc
cmp
cmpb
add
jns
les
mov
ljmp
cld
and
and
inc
or
leave
inc
and
pop
rcll
shl
or
xor
pop
push
stos
add
mov
jb
or
les
or
inc
push
dec
mov
add
dec
jge
sbbb
add
adc
and
xorb
push
jb
mov
jbe
xchg
sub
xchg
jne
rorl
flds
gs
ficomps
ja
mov
push
fidivrl
mov
adc
xchg
add
xchg
je
mov
mov
or
xor
mov
jnp
dec
xchg
mov
es
or
inc
push
and
push
aaa
sti
dec
mov
adc
lcall
sub
popa
jge
jmp
push
inc
ret
dec
push
jb
adc
mov
mov
or
push
popa
adc
repz
das
sub
cmp
pop
popa
cmp
mov
call
push
or
fs
mov
add
adc
out
mov
out
adc
mov
and
dec
jbe
arpl
shrb
stc
clc
add
sub
sub
loopne
std
mov
mov
mov
mov
mov
lret
xchg
jae
cmpsl
pop
ret
lds
sub
push
stos
sub
sbb
mov
mov
push
xor
dec
fwait
les
push
pop
push
lret
les
clc
addl
stos
adc
test
ss
movsb
and
or
stos
cmp
in
adc
test
inc
xchg
jns
pop
stos
push
push
popa
dec
scas
jno
inc
and
flds
xor
rolb
sarb
xchg
orb
inc
mov
pop
pop
push
mov
fisttpl
mov
pop
jno
push
stos
xor
sub
adc
dec
xor
and
lahf
mov
daa
xchg
adc
and
sbb
out
icebp
hlt
add
mov
xchg
push
sub
pop
std
out
add
add
mov
icebp
sub
mov
sub
push
pop
jbe
incl
push
mov
lods
add
and
dec
orl
sbb
mov
mov
leave
push
inc
rolb
mov
push
sahf
je
into
mov
sub
movsbl
ret
paddq
inc
aad
dec
push
ficoms
inc
sbb
xor
movsb
mov
subb
dec
jo
pusha
aad
hlt
mov
jmp
repnz
sbb
ja
inc
orb
mov
sbb
add
dec
or
mov
push
inc
inc
imul
stos
jne
add
pop
in
outsl
aas
or
jmp
sbb
fcompl
add
mov
call
test
cli
cli
mov
push
inc
xchg
subb
addb
fildl
outsl
lcall
xchg
cli
pushf
push
rcll
cmp
mov
mov
rcl
in
das
mov
push
adc
sbb
xor
add
add
in
stos
mov
ret
xor
jno
mov
addb
sbb
inc
popf
pop
inc
mov
xor
stos
addb
clc
push
lods
rclb
stos
push
mov
or
fisubrl
cmp
insb
adc
sub
sbb
push
subb
imul
bound
int
imulb
mov
jle
enter
mov
mov
xor
test
sbbl
mov
lea
mov
dec
les
and
mov
repz
or
jb
inc
jae
in
sub
sbb
cmp
movsl
movb
xor
mov
addb
sbb
inc
test
lahf
adc
and
icebp
pusha
inc
sbb
inc
int
jno
add
popa
mov
push
mov
lock
adc
push
push
xchg
or
add
pop
or
in
pop
push
jne
mov
mov
mov
int3
push
jne
ret
pop
adc
movsb
orb
movsb
and
add
push
aas
adcl
enter
outsb
or
ljmp
adc
xchg
or
adc
popa
xor
pop
adc
xor
xor
and
icebp
adc
mov
mov
mov
out
push
std
notb
dec
cmpsb
sub
and
test
inc
push
xor
or
xchg
ss
pop
xor
pop
add
adc
push
push
sub
add
mov
and
mov
adc
adc
sbb
cmp
add
add
cli
sub
or
dec
sbb
dec
stos
add
idiv
sub
cs
sub
inc
xor
push
adc
or
sub
mov
and
pop
dec
and
inc
mov
push
int3
dec
sbb
test
pop
sub
add
add
jb
cmp
sub
test
pop
xor
movsl
stos
push
sub
xor
mov
pop
push
les
push
jae
adc
mov
subb
pop
push
movsl
or
inc
mov
mov
inc
inc
fsubrs
cmpb
and
cmp
bound
lds
inc
insl
sbb
pop
jge
inc
stos
push
cwtl
ret
jle
push
addb
xchg
test
sbb
pop
mov
mov
aam
xchg
mov
pop
aad
ljmp
inc
xchg
sub
inc
add
mov
pop
push
imul
mov
mov
in
pop
inc
sub
push
pop
sbb
mov
dec
punpckldq
xorb
lds
loop
push
sub
inc
les
mov
movsl
stos
inc
sbb
les
outsb
mov
loop
add
sub
enter
mov
xchg
pop
mov
sbbb
decl
fnop
and
sarl
add
sbb
lods
push
das
xor
clc
mov
les
push
sbb
mov
adc
fs
push
sbb
popf
push
imul
mov
gs
xorb
ret
inc
in
insl
mov
sahf
adc
lods
rclb
pop
sub
shrl
mov
mov
or
xchg
mov
xchg
test
imul
xor
mov
loopne
les
adcb
mov
pusha
leave
and
push
mov
mov
inc
inc
test
jno
mov
adc
pop
push
xchg
mov
sbb
add
cmpsl
jne
mov
push
subb
mov
mov
and
inc
push
xor
dec
mov
fst
push
cmp
popa
and
pop
imul
push
je
add
add
pop
and
cmp
iret
jle
push
jno
outsl
jle
mov
push
jno
dec
sbb
lods
jp
std
testl
lcall
add
push
dec
adc
pusha
call
xor
and
pop
adc
push
push
fldcw
in
cwtl
or
or
push
inc
push
adc
aad
mov
and
sub
fwait
loop
inc
xor
aad
lds
and
popa
sub
cmp
clc
add
add
adc
test
adc
pop
in
rolb
gs
adc
pop
ret
jmp
cmpb
or
inc
add
xchg
insb
pop
sbb
mov
xor
test
pop
push
cli
mov
pop
pop
xchg
ss
mov
inc
mov
mov
adc
mov
xor
add
add
pop
or
add
in
aam
stos
mov
xchg
xchg
in
mov
add
add
test
jb
daa
xchg
sub
stos
add
inc
pop
ficompl
or
je
push
mov
push
lea
xchg
ret
stos
imul
push
push
push
rcr
sub
xchg
ficoml
and
mov
sub
sbb
push
hlt
or
push
jnp
test
stos
push
add
jb
incl
fnstsw
fcomps
test
outsb
gs
inc
cmpsb
out
pusha
pop
mov
or
jb
cmp
or
dec
jno
pop
out
movsl
mov
add
test
xchg
or
ret
or
cli
or
stos
inc
imul
dec
lods
mov
iret
jnp
das
inc
add
xchg
cmc
pop
pop
jo
fcomi
popf
and
cmp
sub
pop
jge
test
jae
or
insl
sub
pop
and
pusha
mov
mov
add
stos
ret
lret
xor
mov
push
dec
dec
cmp
mov
add
mov
orb
outsl
mov
sbb
xchg
cs
lahf
push
mov
pop
fldenv
test
stos
inc
add
andb
scas
mov
mov
scas
lods
rcr
ss
cmp
sub
pop
jle
scas
jb
cli
push
test
xchg
scas
mov
push
mov
ret
jae
push
roll
xchg
jg
adc
mov
aam
mov
cmpl
adc
pop
cld
jg
inc
test
das
add
sub
scas
shll
dec
enter
inc
popa
and
push
cmp
adc
push
je
movsl
inc
andl
and
mov
adc
shrl
mov
mov
pop
push
rorl
mov
push
stos
inc
imul
popf
cmc
adcl
fisubrl
pushf
xchg
mov
data16
pop
sub
js
pop
imul
rcll
add
or
gs
sub
test
negl
popa
mov
push
inc
ficoml
test
pop
mov
inc
cwtl
aas
push
cmp
lods
mov
insl
test
cmp
sub
add
pop
push
sub
fnsave
int
data16
inc
imul
test
lahf
push
movsl
mov
mov
xor
dec
scas
sub
push
sub
mov
shll
or
mov
xor
sbb
cpuid
mov
adc
mov
cld
loop
xchg
push
and
sub
shrl
in
inc
int
mov
push
sub
cmp
std
lock
clc
dec
add
pop
pop
jnp
sbb
mov
push
sbb
fcompl
test
test
pop
cmp
out
pop
mov
mov
shll
mov
push
int
mov
sbbb
and
adc
cmp
mov
inc
or
imul
pop
pop
fisttpll
es
and
inc
mov
push
inc
subl
pushf
ret
or
outsl
sub
mov
or
sub
addl
sbb
add
popa
test
test
ret
out
dec
imul
movsl
test
mov
xchg
jno
imul
dec
bound
push
jb
in
pusha
mov
inc
lods
push
loop
dec
pusha
push
push
lods
push
dec
ror
and
adc
mov
insl
adc
fucompp
push
lods
push
mov
adc
outsb
sub
and
push
sub
cwtl
xchg
jne
push
and
jo
inc
popa
mov
add
sbb
mov
negb
mov
xchg
fbstp
popa
out
xchg
imul
mov
mov
lcall
test
cmp
jbe
ss
pop
fldt
cwtl
ret
mov
cli
in
or
std
rcrb
cmp
xchg
dec
cmp
add
or
mov
inc
addl
cmp
or
xor
cmp
adc
pop
insb
push
mov
aad
sbb
lea
cmpsl
int
imul
push
sub
or
mov
dec
test
push
jmp
rorb
add
dec
int3
cmp
rclb
mov
pop
scas
adc
es
add
int
ret
sti
shll
xor
pop
cli
shrb
push
enter
or
mov
mov
lea
jno
add
sub
cmp
stos
add
fcoms
mov
pushf
subb
insb
inc
imul
mov
push
push
and
mov
jne
pop
mov
add
pop
movsl
mov
mov
sub
mov
sbb
sub
decl
jns
push
or
dec
sbb
xor
push
test
loop
stos
out
insb
cwtl
sub
test
push
jp
mov
jmp
xchg
pop
scas
stc
pop
fisubrl
xor
xor
inc
stos
mov
sub
push
scas
add
sbb
sbb
movsb
in
or
adc
testl
xchg
xchg
bound
or
push
mov
dec
mov
push
pop
mov
mov
movsb
movsb
idivl
or
das
sti
mov
add
mov
mov
sbb
mov
inc
rorl
xor
imul
outsl
mov
push
adc
ds
cmp
inc
shll
mov
sbb
cs
xor
addr16
dec
push
bound
jns
and
sbb
add
jb
xlat
jo
add
push
sub
xor
dec
cli
mov
lods
push
push
mov
xor
xchg
xor
ficoms
popa
mov
push
push
mov
add
adc
test
inc
ljmp
lcall
inc
jle
sbb
xchg
gs
enter
outsb
mov
lcall
ja
out
mov
mov
push
mov
mov
sbb
push
clc
push
mov
test
popa
push
lea
test
repnz
lea
clc
mov
inc
push
jmp
sbbb
add
sbb
test
push
loope
jb
push
lea
push
sub
cmp
mov
xchg
ret
lea
push
mov
jo
sbb
mov
frstor
in
push
adc
pop
test
sub
xchg
dec
or
jno
outsb
das
test
call
lcall
cmpb
mov
mov
cmp
in
xlat
push
incb
mov
aad
rolb
imul
in
test
leave
dec
outsl
mov
insb
mov
scas
xor
jecxz
nop
inc
mov
into
in
mov
sub
mov
or
mov
inc
dec
aaa
pop
lahf
or
jnp
pop
lock
mov
xor
add
sarl
dec
stos
pop
into
cmp
xor
imul
das
in
addb
test
mov
push
or
les
lea
push
lcall
or
pop
mov
popa
aas
xor
scas
cs
sbb
sbb
or
add
outsl
fstpl
push
aam
cwtl
fisubl
xchg
pusha
mov
dec
xor
mov
mov
insl
repnz
inc
cwtl
pop
lods
aad
cli
xor
push
es
push
cmp
mov
stos
aam
or
mov
mov
or
sub
je
fisttpll
pop
test
xor
popf
xor
jb
add
add
sarb
mov
jl
mov
lea
and
pop
mov
sarb
lods
add
stos
loop
popf
mov
xor
inc
popa
daa
subb
testb
fldl
xor
rolb
cs
mov
sub
pop
scas
popa
mov
push
mov
mov
pushf
out
jo
add
cmp
mov
test
xor
call
pushl
sahf
testl
les
pop
lea
xchg
popa
shll
jo
push
fwait
dec
sti
dec
mov
jl
lea
or
mov
push
dec
lods
inc
sub
pushf
push
rcl
push
xorl
jmp
fsubrs
inc
sahf
xor
jae
rcl
inc
testl
mov
or
ds
inc
mov
xor
cmp
sub
jns
data16
mov
or
js
push
mov
shlb
inc
int3
pop
addl
mov
xchg
or
dec
aaa
inc
adc
and
jb
push
scas
mov
inc
mov
jne
sub
mov
mov
pop
rorb
lods
push
movb
inc
sub
adc
pop
or
push
out
xchg
pusha
pushf
add
loope
push
mov
xor
fadd
push
sub
or
pop
xchg
add
aam
popa
xchg
jb
mov
push
dec
xor
push
mov
mov
imull
pop
sahf
cwtl
shl
into
adc
xchg
xchg
aam
lods
or
pop
and
test
xchg
movsl
push
push
jg
pop
bound
jo
lods
jmp
xchg
push
mov
and
in
test
and
push
lcall
pop
imul
test
outsl
orl
pop
sbbl
sub
lret
push
sti
cmp
and
cmpsl
daa
or
push
ret
mov
push
fisubl
add
pop
je
xor
cwtl
push
mov
sub
add
xchg
jecxz
pop
cmp
lcall
mov
mov
lret
add
roll
add
test
mov
iret
mov
mov
xchg
outsl
mov
or
mov
mov
mov
cmp
push
xchg
push
jb
lea
test
lcall
mov
pop
inc
mov
inc
mov
sub
inc
ret
push
jmp
cmp
adc
test
add
adcl
jo
mov
lcall
lahf
inc
xlat
ret
sbb
mov
and
ds
cmp
pop
lds
jb
stc
inc
cli
push
test
stos
add
inc
push
or
xchg
mov
stos
ret
adc
add
adc
mov
rcrb
adc
es
outsb
push
les
cmpsl
xchg
sub
push
push
popa
lahf
dec
in
out
shrl
push
push
jno
jmp
dec
lea
ret
inc
sbb
sbbl
sub
or
andl
adc
inc
test
jns
mov
in
dec
pop
jae
or
cmp
or
cwtl
sub
mov
xor
inc
sahf
xchg
insb
mov
dec
lods
addr16
sti
jge
adc
pop
xchg
push
popa
jmp
mov
pop
pop
xchg
or
pop
sarl
sbb
lods
push
mov
dec
cmp
adc
xor
pop
and
mov
test
lea
rcll
ljmp
add
xor
jbe
fstl
lods
push
clc
mov
add
mov
add
add
fistpll
outsl
mov
push
je
mov
insl
lods
push
stos
lret
push
push
mov
or
sbb
cmpsb
cmpsl
add
mov
adc
mov
push
push
add
inc
test
jmp
xor
lret
testl
je
and
pop
addl
lea
mov
mov
inc
andb
adc
mov
push
ss
adc
jo
iret
stos
xor
test
dec
mov
scas
push
dec
lahf
scas
xor
sub
es
adc
addb
pusha
inc
xor
pop
sbb
pop
mov
jne
cmp
sbb
push
sub
push
push
popa
rorb
insb
test
testl
or
mov
dec
mov
adcb
hlt
xchg
mov
xor
mov
mov
movsl
inc
adc
or
scas
adc
jmp
or
jge
push
lods
notb
fstpl
aam
movsl
push
add
mov
adc
out
les
push
push
in
jl
push
or
push
pop
mov
orb
push
xchg
inc
pop
sbb
sbb
adc
lcall
sub
adc
lcall
adc
aam
push
loopne
adc
cmpsb
inc
mov
or
cs
je
adc
fpatan
popa
push
sub
outsl
adc
mov
xchg
mov
mov
lods
add
lods
mov
decl
mov
jb
adc
lea
cwtl
xor
sbb
sbb
pop
call
or
add
push
icebp
sbb
or
push
sub
scas
mov
adc
push
adc
dec
mov
insl
sub
negl
fwait
mov
addb
cmp
adc
adc
or
int3
pop
xchg
jle
inc
adc
loopne
cwtl
push
xchg
lods
mov
sbb
pop
push
cmpsb
paddsb
add
jl
sbb
push
mov
dec
jecxz
cli
add
imul
sbb
mull
sub
popa
dec
int
test
ja
test
push
pop
pop
jb
and
mov
add
mov
lods
rcrl
jp
push
sub
cltd
test
dec
nop
cmp
jo
popa
mov
add
fucomi
sbb
stos
std
cli
jnp
test
push
stos
lods
jo
mov
sbb
cmp
repz
pop
dec
mov
test
test
mov
push
addl
push
les
jae
lods
fdivs
dec
pusha
popa
sub
add
les
push
lods
push
pop
xor
xchg
mov
pop
xor
lods
les
adc
add
clc
daa
or
shrb
mov
test
mov
test
pop
adcl
cmp
sbb
mov
cli
test
jae
inc
insb
push
cmpl
cs
negl
push
push
popa
inc
roll
push
fidivl
xor
dec
hlt
js
lea
sbb
mov
test
arpl
jb
test
dec
push
mov
out
cwtl
or
and
shrb
rcll
inc
notl
adc
xor
adc
cli
mov
push
pop
into
cmp
lods
nop
test
movl
cmp
pop
hlt
push
int
push
sub
push
dec
jecxz
xchg
or
jo
pop
xorb
leave
xor
mov
push
dec
or
in
push
frstor
jno
lahf
and
or
ficoms
mov
popf
dec
push
jae
add
lret
lret
in
shlb
lcall
stos
test
or
addr16
mov
sub
push
or
add
pop
sub
pop
xchg
mov
xchg
sub
push
pop
mov
adc
pop
lods
aad
dec
jnp,pn
rcll
aas
das
and
adc
inc
pop
or
push
out
and
and
int
stos
popa
inc
push
push
je
hlt
cltd
movsb
mov
jae,pt
outsl
aam
mov
insb
sahf
sub
jne
je
lahf
and
rorl
push
outsb
lahf
jns
pop
mov
repz
rcl
mov
cmp
cwtl
mov
lea
mov
hlt
cld
loope
lea
ds
cmp
ss
addb
ret
aam
jo
mov
lea
lret
out
dec
lods
in
mov
dec
and
and
pop
and
adc
orl
cmp
add
sub
movsb
jb
popa
mov
xchg
call
pop
pop
pop
ret
push
lahf
add
push
dec
pop
or
or
mov
mov
fwait
push
mov
xor
ret
mov
push
mov
sub
and
add
cmp
adc
ja
push
pop
mov
inc
cli
lods
inc
inc
lods
push
sbb
mov
jb
xor
sbb
sbb
fidivrl
xchg
popa
and
shrl
xchg
sub
or
decl
ficoml
mov
push
mov
movsb
cwtl
sti
inc
push
lock
cli
sub
xchg
pop
ret
insl
test
and
xchg
stos
push
jb
adcb
push
inc
mov
cli
negb
stos
neg
push
jb
dec
push
push
jno
mov
or
inc
pop
pop
adc
daa
push
rcl
sbb
inc
add
shll
mov
mov
andl
es
mov
pop
xchg
add
enter
or
xchg
andl
xor
mov
add
leave
inc
ljmp
cmp
xchg
fldcw
jnp
popa
push
frstor
test
cmc
jg
mov
pop
xor
xor
in
test
int
aas
pop
push
push
idivb
push
stos
add
add
ss
add
pop
or
xor
cmp
cmp
push
leave
xchg
andl
xchg
clc
loope
push
pop
mov
sub
mov
lea
inc
adc
fwait
sti
fucomip
lea
push
lcall
pop
mov
mov
lods
inc
add
cli
jmp
add
adc
cli
mov
rcrb
cmp
add
in
les
mov
push
test
insl
outsb
das
inc
mov
push
mov
cwtl
imul
lret
pop
push
scas
mov
inc
repnz
mov
add
cltd
ss
adc
into
fsubrs
push
dec
imulb
push
add
add
sarb
add
andb
or
pop
cmpl
push
push
movsl
lods
mov
cmp
and
mov
cwtl
imul
sub
stos
pop
mov
clc
mov
cmp
daa
push
xor
xor
mov
push
cmp
aad
rol
xor
std
insl
lods
aam
jle
mov
aaa
orb
div
dec
or
mov
push
lea
inc
mov
fiadds
cs
inc
addl
mov
xor
pop
loop
dec
mov
push
dec
jecxz
jo
nop
push
addr16
sbb
std
pop
stc
sub
mov
inc
mov
push
pop
push
test
push
notl
test
subb
push
inc
xchg
push
mov
stos
subb
pop
mov
jae
test
notb
subb
pop
mov
and
mov
pop
aad
fcomps
jno
jp
das
mov
test
aad
sub
xchg
enter
imul
movsl
add
xchg
xlat
jb
add
imul
xchg
mov
push
xor
movsl
outsl
mull
xchg
testl
adc
pop
dec
lea
shlb
push
push
ss
mov
fisttps
mov
mov
clc
jne
sub
push
mov
lods
inc
lods
xchg
lods
inc
mov
push
aam
xor
cmp
mov
mov
xchg
mov
pop
mov
aas
pop
xchg
pop
rorl
xor
add
sti
in
sbb
sub
out
testb
sub
mov
out
movsl
cmp
dec
lods
aam
mov
fwait
iret
in
test
mov
mov
cmp
or
lock
shrl
adc
fwait
or
add
inc
xor
cld
push
lods
outsb
stos
in
push
aad
repz
loopne
inc
mov
jmp
test
insb
mov
or
xchg
stos
pusha
lret
inc
adc
sub
pop
inc
xor
scas
add
lods
push
sub
inc
lods
sub
push
or
or
pop
lods
cmp
xor
xorb
xor
xchg
push
or
push
and
push
jo
adc
adc
sub
inc
push
lea
sub
and
cli
xlat
sbb
bound
pop
test
push
subl
les
inc
insl
mov
ja
push
roll
jp
push
add
sbb
push
sub
push
adc
mov
inc
movsl
inc
and
lods
dec
mov
push
add
sbb
scas
mov
stos
ret
fisttpl
loopne
ret
iret
sub
insl
cmp
push
addb
cmp
mov
test
mov
and
jne
test
cli
adc
sub
xchg
push
xchg
mov
inc
aas
mov
inc
dec
push
popf
dec
aad
push
or
mov
aam
pushw
sub
jbe
out
mov
push
push
mov
inc
jecxz
push
and
add
jb
xchg
enter
sub
cmp
sub
loop
pop
sub
ljmp
jle
sub
sub
cli
xchg
mov
insl
mov
xor
stos
add
aam
push
pop
int
cld
adc
sub
xchg
dec
dec
lahf
imull
lahf
xor
pop
mov
mov
push
mov
lahf
jno
jno
lret
fsubr
xor
mov
pop
ret
push
aad
or
or
xchg
rorb
pop
sub
xor
xchg
mov
aaa
sbb
jge
pop
push
ret
mov
ret
into
sub
shrb
std
scas
sbb
mov
fs
rcr
push
sti
xorb
adc
data16
inc
inc
sbb
pushf
mov
jmp
mov
inc
jae
push
sub
movsl
push
dec
lods
lods
xchg
ficompl
fmull
daa
or
add
inc
shrb
sub
xor
inc
lea
das
out
push
lea
mov
popa
pop
stos
inc
test
in
lods
xor
adc
mov
xor
cli
test
pop
mov
pop
mov
stos
inc
pushf
cli
daa
push
push
xlat
jb
sbbb
mov
mov
fcoml
pop
aaa
and
adc
pop
sub
xor
inc
add
rcl
cmpsb
lea
mov
pop
sub
and
imul
or
inc
jg
sbb
jbe
aad
mov
push
insl
decl
sub
and
pop
sahf
push
jl
into
jo
push
mov
or
pop
movsl
push
dec
pusha
es
adc
sti
xor
sub
movsb
xchg
cmp
rol
lret
mov
lods
shll
cli
subb
je
push
das
stos
push
jo
cmp
dec
lods
ja
into
je
inc
test
out
cmp
adc
lea
jne
lods
adc
or
ja
adc
orl
xchg
sbb
aam
rcrl
inc
adc
xchg
pop
test
push
int
dec
mov
test
cmpsb
push
push
mov
xchg
sbb
push
push
sti
into
inc
mov
mov
test
add
sub
adc
rorb
add
fisubrs
add
push
lret
imul
cmp
mov
cwtl
sbb
imul
sub
pusha
pop
filds
inc
insb
or
jne
sub
in
push
das
loop
adc
dec
xchg
dec
push
xor
in
mov
lea
lods
inc
xchg
xchg
mov
and
inc
clc
ljmp
add
dec
push
fidivrs
ljmp
jns
aam
test
mov
fwait
ret
mov
dec
fs
sti
xchg
shrl
repz
call
inc
dec
lret
and
insb
jae
lahf
pop
or
sbb
mov
les
or
ja
popa
and
or
dec
ja
movsl
push
imul
das
add
scas
mov
dec
jno
push
movsl
pop
mov
and
adc
push
and
test
mov
sahf
add
or
mov
mov
pop
jo
hlt
mov
push
mov
ds
das
fiaddl
push
and
or
jecxz
pop
lods
add
sub
jo
rcrl
mov
mov
sub
jbe
jmp
lahf
mov
mov
mov
inc
daa
push
sbb
repz
mov
xchg
mov
mov
sub
subb
inc
lods
jle
and
sub
cmp
sbb
int
cld
ljmp
mov
orb
push
dec
inc
push
inc
xchg
mov
xchg
dec
adc
adc
adc
and
and
mov
push
shlb
pop
insl
cmp
push
pop
test
sub
inc
and
mov
aaa
and
sub
sbb
dec
popf
test
test
inc
xor
mov
addb
imul
mov
popa
cld
ret
sub
mov
stos
es
jmp
je
or
add
cld
pop
push
or
subb
sbb
ja
dec
int
leave
loopne
xor
and
idivb
mov
push
addr16
ret
shlb
pop
.byte
.byte
incl
inc
mov
lea
or
push
shlb
mov
inc
add
idiv
out
incl
call
inc
or
add
incl
inc
jne
push
mov
int
fstpl
xor
sub
lea
rolb
dec
mov
pop
imul
dec
je
mov
push
cmp
sti
je
add
inc
sub
mov
incl
and
decl
add
add
push
or
add
fildll
and
push
or
add
std
mov
add
rclb
add
add
or
adc
mov
lea
call
or
jnp
xchg
mov
addl
subl
fstpl
pop
je
sbb
mov
lods
mov
jne
inc
and
fidivl
pop
leave
add
mov
mov
out
fwait
sti
je
push
or
cmpsl
test
mov
in
push
push
rclb
and
lods
xchg
xor
sbbl
fcmovbe
jne
decl
imulb
or
sub
ret
lea
mov
mov
push
mov
mov
jae
jns
decl
call
pop
jo
push
sub
mov
pop
fadds
mov
jae
lods
imul
nop
add
outsl
push
data16
fwait
mov
or
inc
jl
jnp
lock
cmpl
mov
outsb
lcall
inc
or
xor
and
xchg
add
mov
int
insl
mov
adc
inc
jo
pop
mov
sbb
push
pop
jnp
push
aaa
sbb
push
mov
pop
mov
in
jae
push
jo
adcl
or
test
inc
mov
adc
xorl
mov
mov
pop
sub
xchg
popf
bound
ljmp
xchg
orl
fildl
xchg
iret
mov
xchg
or
ljmp
adc
sub
sub
sbb
fsubs
ficoml
mov
mov
ficoml
rcll
dec
push
pop
mov
or
pusha
cmpsl
fistpl
pop
add
push
sbb
pop
imul
sub
nop
mov
ja
push
rolb
dec
in
and
aad
mov
dec
or
and
lods
adc
jg
push
push
fidivrs
cltd
fcomps
mov
sub
xchg
add
lds
sub
les
mov
and
insl
fnsave
or
lea
orl
and
orl
and
pushf
fbstp
pusha
push
loope
es
sahf
cmpsb
inc
jae
push
dec
fmull
cs
pushw
mov
dec
fwait
mov
inc
push
test
pop
xlat
and
cmp
jge
push
jns
rcrb
xor
sbb
pusha
fidivl
lods
xlat
xchg
xor
push
cmp
jno
dec
clc
hlt
imul
scas
lea
xchg
imul
sub
mov
fimull
movsb
pop
cmpsb
or
shl
pop
jnp
sub
and
std
add
outsl
and
xor
fidivs
xor
adc
xchg
js
lea
inc
cmp
push
inc
push
lcall
je
shll
jne
lods
cltd
or
mov
outsb
inc
scas
mov
scas
cltd
test
jl
xor
in
es
cmp
sbb
mov
loop
pop
lods
push
jo
movsl
jbe
sbb
rolb
or
rcrl
or
lcall
mov
pop
and
sbb
pop
mov
pushw
mov
shll
rolb
push
xorl
push
xchg
sub
mov
adc
enter
push
in
cmp
add
pop
lods
cmp
js
or
xchg
loopne
data16
lds
insl
and
mov
popa
add
je
jb
ret
ljmp
data16
dec
dec
sbb
mov
jp
int
mov
sbb
int
lcall
pop
imul
testl
data16
sbb
mov
daa
shl
or
iret
pop
mov
sub
shll
cmp
push
sahf
sub
adc
push
loopne
ret
lcall
push
inc
mov
pop
imul
add
cmp
or
add
pop
call
jp
sub
push
addl
sbb
mov
pop
in
lahf
and
inc
cmp
push
lret
and
mov
mov
out
pop
jae
addr16
add
dec
scas
xchg
pushw
adc
subl
and
lret
flds
jne
push
je
jb
push
jno
push
mov
jne
sbb
insb
xchg
imul
int
add
mov
xchg
mov
fs
adc
lds
fwait
jae
inc
and
mov
mov
add
inc
mov
xor
test
jle
xor
fmuls
jge
shlb
fiaddl
mov
popf
imul
mov
shrb
sbb
dec
adc
push
or
cmpsb
inc
insb
or
push
imul
js
fs
sbb
shrb
pop
sarl
hlt
mov
or
xchg
push
jne
test
xchg
jg
imul
xchg
push
sub
loope
sbb
adc
movsl
lret
pushf
ret
fs
jne
loopne
andl
into
inc
leave
cli
loop
mov
loopne
jne
jno
or
ds
push
inc
shll
dec
sub
shll
pop
xor
pop
jne
add
jmp
jp
xor
adc
and
rcll
or
daa
in
mov
and
dec
cmp
cmp
lcall
stc
mov
adc
aam
mov
push
jne
inc
push
cmp
pop
int
shr
mov
sbb
jmp
call
cs
mov
lds
pop
mov
scas
inc
bound
inc
pop
sbb
lret
jne
aaa
or
lods
rorl
divb
xor
test
adcb
lahf
orl
test
push
sub
stos
pop
scas
not
gs
pop
and
and
push
xor
mov
ret
shl
xor
and
pop
addr16
cmpb
test
sub
clc
adc
gs
test
xchg
loope
test
or
and
jecxz
cmp
cmp
push
in
add
pushaw
xorl
in
lods
push
enter
sbb
adc
cwtl
push
mov
int
push
mov
movsl
dec
shlb
pop
mov
pop
lret
push
xor
andl
pop
in
push
xor
push
adc
inc
ds
scas
and
jns
mov
clc
out
inc
lcall
mov
mov
xor
dec
rorl
jne
pop
lods
lcall
add
mov
test
mov
ds
js
xor
inc
outsl
cmp
sbb
inc
stos
rcll
push
jo
dec
iret
jne
pop
sbb
mov
add
add
mov
xor
insb
fwait
mov
xor
andl
adc
pop
int
loop
mov
inc
add
imulb
mov
in
fisubs
test
xchg
mov
into
fnstcw
sub
mov
mov
mov
rolb
cltd
inc
lds
pushf
sub
roll
xchg
inc
insb
popf
pop
out
add
dec
shrb
or
push
lods
ds
xor
jo
xor
outsb
jne
and
icebp
mov
fiaddl
shlb
lcall
xchg
sarl
pop
push
negl
les
xchg
add
je
cwtl
lcall
pop
int
pusha
sub
or
rcr
je
rolb
je
jbe
popa
xlat
inc
in
sub
test
xor
xor
imul
adcb
ljmp
push
and
adc
rorb
sbbl
jne
or
test
pusha
inc
mov
dec
add
jne
es
into
push
sub
scas
aam
es
pop
or
sbb
test
mov
lcall
add
or
je
dec
cwtl
sbb
outsb
subl
imul
mov
push
or
scas
or
add
add
mov
mov
data16
jmp
cli
push
sub
mov
clc
lea
push
xorb
push
jle
xchg
jle
xchg
outsl
jb
jle
cmp
jle
ljmp
outsl
add
lahf
cmp
outsl
sub
cmp
cli
pop
das
add
xchg
jg
xor
cs
and
xor
cmp
cmp
mov
cmp
sbbb
dec
xor
cmp
pop
sub
push
push
cmp
mov
clc
clc
rcl
negl
cmp
cli
add
push
push
jge
fucomi
adc
gs
les
jns
sub
pop
sti
mov
clc
cmpb
adc
add
mov
in
mov
xor
shlb
les
add
mov
outsl
fcomi
incl
mov
rcrb
les
mov
in
fcomi
pop
rcrb
add
cmp
dec
jle
sub
imul
imulb
mov
cmp
ret
inc
les
cmp
outsl
and
jb
push
pop
dec
pop
lahf
add
jo
mov
xor
and
xor
sbb
xor
cmp
test
mov
mov
lea
fdiv
mov
fstpt
dec
or
sbbb
push
dec
jle
jb
inc
negb
xor
pop
jp
and
out
rorl
sbb
fidivrl
mov
adc
adc
sbb
add
xor
inc
push
popa
mov
rclb
and
xchg
push
das
sub
sti
fbstp
pop
push
rcrb
outsl
lahf
lea
pop
jo
cmp
or
inc
sti
push
cli
lea
les
loope
pop
jbe
and
inc
pop
cmpb
fisttps
mov
mov
cmp
test
ret
mov
ret
dec
clc
daa
cmp
xchg
and
mov
mov
daa
pop
pop
push
ljmp
pop
push
lahf
adc
jb
xchg
push
inc
cmp
cmp
cmpb
fcomi
das
lahf
ret
pop
xchg
jne
mov
das
push
dec
pop
ret
jae
fcomi
outsl
adc
pop
cmp
stc
sub
sbb
sub
mov
jp
add
sub
mov
push
pop
mov
fdivrl
cmp
add
dec
push
adc
sbb
das
xchg
les
inc
mov
pop
arpl
pop
adc
outsl
fbstp
dec
pop
mov
dec
pop
xor
insl
mov
out
pop
add
cmp
aaa
or
xor
sub
fistl
xor
dec
dec
shrb
jg
or
mov
loopne
out
xor
paddw
out
add
fisttps
add
and
jno
inc
add
mov
adc
push
or
jnp
or
sbb
mov
add
inc
add
out
std
dec
jmp
ret
in
shrl
pop
dec
jl
jecxz
std
mov
ret
push
mov
add
movl
pop
xchg
pop
jle
gs
sbb
pop
ja
sbb
lahf
fstpl
into
test
or
jbe
mov
sbb
push
in
adc
or
mov
add
mov
xor
cmp
daa
mov
mov
sub
adc
sbb
rorl
repz
data16
push
push
lock
sub
mov
jge
test
incb
rclb
decb
or
and
inc
cmp
mov
mov
mov
push
loopne
fcmovb
in
or
insb
jae
loop
mov
ficompl
cmp
fimull
mov
das
push
loope
inc
adc
jne
cmp
roll
dec
not
sbb
loope
fidivrl
outsl
cmp
xor
ja
std
or
ror
pop
mov
stc
mov
fisubl
jne
and
ret
sahf
jne
or
ret
mov
and
sbb
push
fcmovnu
fidivs
and
std
mov
dec
mov
int3
pusha
pop
push
pop
xor
in
pop
popa
popa
popf
pop
jg
shll
popa
jno
cmpb
mov
and
inc
jecxz
pop
pop
je
repz
push
xor
jmp
add
out
sbb
pop
insl
push
out
xchg
jb
subl
fidivl
adc
sub
jecxz
stos
push
xchg
stc
adc
cs
push
push
cmp
cli
mov
xchg
xor
imul
add
gs
jle
mov
push
fisubrl
cmp
adcb
inc
jb
pop
jns
clc
push
imul
adc
adc
insl
jmp
pop
lahf
xor
mov
push
mov
clc
dec
cmp
outsl
das
bound
sub
dec
lea
add
mov
dec
push
and
outsl
cmp
out
negl
pop
pop
and
mov
aam
movsl
lods
mov
fadds
das
das
gs
mov
rolb
lea
cli
inc
pop
cmpsb
in
push
lea
sbb
insl
mov
and
push
jb
cmp
sbb
push
rolb
subb
pushf
rcr
fsubs
add
add
add
add
or
cs
jmp
mov
sbb
mov
cmp
add
pusha
push
je
stos
inc
subl
inc
stos
rolb
and
or
loope
cli
fwait
cs
cli
push
outsb
insl
int
xchg
adc
lahf
lahf
jp
sub
push
dec
and
jb
clc
sub
sbb
sti
mov
outsb
mov
pop
mov
xor
push
jo
ret
pop
clc
ljmp
sub
insl
sbb
repz
push
lcall
test
sarl
outsl
jno
insl
or
adc
sbb
pop
dec
shl
xorb
sarb
sub
sub
add
testb
orl
test
push
lods
ja
and
jbe
lea
sbb
cmp
mov
lds
pop
cli
movsb
pusha
pop
loopne
dec
call
insl
ret
mov
push
popf
outsl
dec
jge
divl
adc
sar
and
and
lcall
add
push
xor
pop
cli
das
dec
push
fmuls
lods
sarb
lahf
std
cwtl
jb
or
jge
aas
dec
adc
pop
pop
out
mov
fisubl
ret
add
mov
testl
test
flds
ret
mov
mov
inc
jl
rcll
mov
mov
add
push
jnp
jmp
mov
jg
jge
clc
int3
cs
or
cmpsb
lods
mov
xor
fdivl
insb
mov
cltd
hlt
sub
add
faddl
pop
stos
int3
sub
insb
nop
sub
repnz
lcall
lods
lcall
jmp
ljmp
cmp
loope
add
inc
pop
jp
incb
les
shlb
jmp
sub
push
cmp
sarl
jnp
mov
insb
popa
clc
and
ja
mov
idivb
or
pop
test
push
and
adc
lock
mov
inc
int3
stos
hlt
push
push
mov
fistl
in
call
xchg
pop
cld
sbb
add
repz
xor
add
mov
dec
cmp
jle
mov
andb
sbb
push
test
out
push
fcmovnu
add
adc
loopne
mov
mov
negl
pop
pusha
cld
mov
mov
sbb
pop
scas
out
xor
mov
incl
pop
xor
jmp
inc
fisttps
incb
pop
pusha
mov
cmp
aam
push
add
cmp
stos
sahf
mov
repz
lea
clc
pop
call
xchg
push
jno
sub
adc
rorl
test
aam
mov
mov
push
imul
cmp
mov
or
insb
cmp
pop
sub
movsl
mov
aam
test
xchg
outsl
dec
testl
cli
lahf
jbe
and
lahf
pop
addl
dec
cmpb
rcl
xor
dec
inc
sub
mov
add
and
mov
jo
cmp
jle
clc
xor
stos
test
push
fsubrs
scas
mov
mov
cmp
add
pop
lods
mov
ljmp
or
test
xor
push
fiaddl
add
mov
testb
mov
ret
mov
jb
mov
mov
jmp
jb
sub
sti
and
adc
pushf
mov
ss
sbb
movsl
addb
insl
add
push
push
cmp
push
outsl
cld
test
shld
or
out
cmpsl
imul
sarb
sahf
lods
icebp
clc
jle
push
cli
shrb
push
add
push
pop
daa
push
inc
int3
lahf
mov
fidivrl
lcall
cmp
mov
adc
mov
pop
fcmovbe
pop
mov
rep
rol
jno
and
pop
fstps
jno
jg
dec
leave
sub
mov
add
pusha
cmp
xchg
or
pop
mov
mov
mov
or
mov
daa
and
push
fdivs
add
push
mov
add
shlb
ret
sti
cmp
adc
sub
shl
fisubl
sahf
pop
dec
push
mov
pop
mov
sub
mov
sub
xchg
shrb
lods
sub
xor
ss
loopne
jle
and
and
cmp
xchg
adc
loop
mov
sub
jb
add
push
xchg
dec
sbb
jno
cmpsb
or
push
jno
lods
and
pop
rorb
add
bound
push
dec
ljmp
sub
into
xlat
mov
jg
aaa
pop
into
daa
mov
xchg
xchg
pushf
mov
fldenv
xchg
divl
pop
mov
xchg
test
lods
shl
cltd
pop
scas
mov
and
mov
in
das
scas
push
add
mov
lea
das
ret
imul
mov
jne
inc
scas
adc
shll
ss
xor
push
scas
lcall
bound
add
aaa
cmpb
addl
adc
fisttpl
adc
push
xlat
data16
jp
lea
sti
insl
xchg
xchg
pop
fistpl
xchg
pop
jno
or
movsl
mov
notl
sbbb
pop
test
mov
das
jne
or
sbb
mov
sti
movsb
repnz
in
insl
lahf
subb
into
mov
or
out
xor
loope
mov
adc
mov
notl
adc
lods
lock
test
cmp
das
testl
cmpsb
ret
cmp
sub
pop
bound
insb
adc
cmp
pop
jno
jmp
aam
inc
jb
rcll
aaa
add
fwait
inc
mov
xchg
dec
jge
jns
sti
inc
imul
push
shll
mov
or
ja
jmp
call
repnz
aad
cmp
push
test
cmp
sbbl
cmp
popa
aam
xor
mov
test
sti
add
or
mov
cmpsb
cmp
or
subl
call
fisubrl
lret
mov
inc
or
movb
fsubl
mov
sub
outsb
int3
rorl
sbb
sbb
push
jnp
in
les
or
pop
jge
jnp
sbb
push
push
add
jge
sahf
sbb
xor
cld
cld
or
jb
in
jnp
mov
mov
add
shlb
sbb
dec
pop
xor
insb
mov
sbbb
jno
dec
fwait
jnp
sbb
into
or
aas
push
out
in
xor
in
xor
roll
loope
sub
push
adc
lods
cmp
test
js
xchg
in
or
iret
insl
inc
ficoml
fucomi
out
sbb
xor
or
push
add
jno
cmp
dec
mov
cmp
fsubs
addb
in
cld
pushf
cmp
sub
jge
enter
shl
jecxz
pop
int
push
cmp
adc
into
push
jecxz
jp
ds
pop
clc
pusha
and
jge
xlat
add
xlat
mov
push
insl
pop
mov
daa
in
xor
xchg
xor
filds
fisttpll
push
mov
push
push
adc
call
sahf
imul
fninit
inc
pop
mov
jbe
sub
enter
sti
adc
pop
movsl
or
push
dec
push
or
xchg
dec
lods
lea
push
fiaddl
jns
pop
sti
fildll
je
aas
add
adc
ficompl
inc
test
sub
test
xchg
dec
xchg
lahf
mov
mov
sub
int
adc
roll
mov
xor
mov
pop
xor
test
dec
pusha
lahf
cs
mov
data16
sub
pop
mov
dec
loop
push
imul
jno
lods
inc
movsl
xchg
test
mov
pop
adc
xor
mov
pop
movsl
gs
jno
xor
pusha
fcmovbe
ret
faddl
cmp
lods
xor
push
js
dec
lods
push
lods
incl
ret
gs
insl
xchg
loop
clc
fnstcw
pop
adc
cld
fs
dec
shll
add
rolb
les
clc
push
inc
fidivl
fs
sbb
cmp
imul
add
dec
pushl
insl
mov
lret
pop
sub
jle
adc
mov
jecxz
jb
mov
dec
and
imul
or
xor
mov
call
add
xor
test
push
pop
xlat
xor
or
out
dec
mov
sbb
sub
push
mov
push
movsb
jo
inc
fisttpl
pop
dec
ret
add
or
pop
hlt
cmp
push
ss
xchg
jb
clc
lahf
mov
mov
push
sbb
ret
mov
xor
inc
int
les
insl
inc
addl
outsb
movsl
or
ljmp
lods
adc
iret
xor
sub
jecxz
xlat
cmp
stc
push
pop
inc
push
lods
lret
clc
icebp
outsl
add
adc
cmp
mov
sub
stc
arpl
mov
jb
fwait
repz
add
mov
pop
pop
lods
stc
das
xchg
sub
inc
cmp
call
lcall
data16
scas
push
mov
insl
loope
outsl
dec
cmp
sbb
shrb
mov
shll
and
inc
sub
clc
cmc
xchg
xor
cli
into
pop
out
push
mov
push
orb
dec
and
dec
pop
xor
inc
cmp
sarb
or
xor
push
stos
and
push
jb
fistpl
test
and
mov
inc
mov
or
in
jg
shlb
scas
test
push
sbb
inc
mov
lods
mov
xchg
mov
jno
push
mov
pop
and
aam
or
fstps
push
sub
adc
xor
mov
push
rolb
sub
adc
insl
sbb
idivl
sbb
loopne
sbb
lock
cmp
xchg
push
lods
sub
xchg
rorb
push
in
cmp
inc
jecxz
data16
sub
les
imul
in
push
pop
xor
lods
inc
lret
rorb
sub
pop
roll
dec
test
dec
dec
jmp
addb
sbb
inc
ret
mov
push
sub
pop
pop
clc
pop
and
pop
sub
ss
sbb
jno
inc
add
pop
xor
movsl
pop
mov
test
mov
and
addr16
out
xor
testl
fdivrs
inc
ffreep
lahf
pop
clc
or
pop
pop
xchg
das
or
fsubrs
daa
add
subb
lea
jo
xor
pop
pop
fcmovbe
inc
pop
cli
ret
cmp
int
aaa
xchg
or
add
jmp
movl
pop
jecxz
dec
leave
or
xlat
fcmove
pusha
jmp
mov
sub
add
push
mov
inc
clc
aam
mov
add
imul
inc
jno
push
push
push
test
xor
dec
xchg
push
push
fldcw
inc
mov
int3
shrb
push
stos
adc
dec
imul
xor
es
mov
shll
aam
jbe
imul
pop
lods
lea
push
jp
imul
insl
sub
xor
or
orb
jae
ficompl
cld
das
sbb
sub
sbb
rcll
mov
xorb
jle
jno
push
push
imul
loopne
push
add
mov
mov
sarb
dec
or
gs
inc
and
dec
cmp
cmp
push
pushf
out
pop
xchg
dec
xchg
mov
shrb
ss
jmp
sbbb
mov
dec
push
dec
jge
lfs
inc
imul
jne
push
shrl
test
fcomip
out
call
pop
pop
into
inc
push
jmp
bnd
dec
and
push
mov
adc
push
push
cmp
mov
push
out
pop
jb
sbb
push
sub
push
push
pop
mov
push
xchg
jle
pop
lahf
jecxz
sbb
mov
cmp
jp
test
xchg
dec
lods
mov
fwait
or
roll
sub
in
pop
xchg
xlat
int3
inc
sub
loopne
into
add
ret
mov
cwtl
mov
enter
dec
adc
sub
inc
scas
mov
repnz
mov
adc
mov
out
in
addb
lret
cmp
push
sub
xorl
fucomi
mov
aam
ficomps
sti
jle
push
push
lret
sahf
pop
imull
xor
rorl
push
push
lods
inc
imul
inc
push
cmp
add
and
push
test
cmc
les
push
and
xchg
pop
and
inc
add
out
aaa
outsl
in
mov
jno
mov
push
pop
stc
xor
cmp
xchg
test
cmp
test
insl
pop
jno
dec
cmc
cmp
incl
add
je
dec
mov
lahf
mov
loope
ljmp
or
or
je
scas
les
pop
ljmp
les
or
lea
push
shrl
cs
in
push
push
les
push
mov
pop
mov
rol
jns
push
rcrb
clc
xor
dec
inc
int3
mov
sbb
adcb
push
jb
xor
popa
repnz
jp
dec
and
xlat
jbe
mov
dec
rol
cltd
add
sub
in
add
sbb
incl
test
out
lods
push
mov
filds
xor
fadd
aaa
sbb
dec
jmp
outsl
sub
cld
outsb
pop
insb
cmp
inc
cmpsb
or
les
inc
or
cli
fs
or
xchg
mov
pop
faddl
adc
lret
jp
dec
xor
outsb
divl
in
inc
sub
push
sub
movsb
sub
lea
jg
push
mov
and
stos
mov
mov
xchg
testl
pop
mov
cmc
push
xor
and
pop
rcll
sub
jno
test
test
pop
movsl
push
leave
xchg
fs
xchg
push
addl
xchg
xor
lahf
sbb
xor
stos
push
outsl
cmpsb
cmc
and
or
inc
xor
fwait
or
lods
mov
repz
pop
movsl
push
xor
mov
imul
pop
imul
loopne
enter
mov
cmp
sub
xorb
dec
pop
movsb
add
sub
push
push
imul
sbb
pop
mov
xchg
jns
cmp
test
hlt
imul
imul
mov
das
insl
and
cli
shlb
sti
pop
dec
je
adc
fidivs
add
andl
in
add
add
pop
int
dec
scas
lret
xor
or
outsb
in
mov
inc
rcl
mov
into
add
outsl
sbb
fisubrs
add
test
and
stos
mov
out
add
enter
sarl
or
sbb
jo
ret
jb
insb
aaa
rclb
push
lea
add
or
roll
inc
push
mov
mov
pop
xor
dec
test
mov
push
mov
daa
jb
icebp
xor
inc
sbb
cmp
loop
sub
cld
mov
push
sub
aas
ret
jmp
pop
mov
add
mov
cmc
cmp
mov
xchg
jae
test
sub
push
mov
adcb
sub
fldt
cmc
mov
out
push
ret
xor
or
or
into
inc
imul
push
push
pop
sbb
lea
mov
add
push
daa
push
mov
lahf
mov
mov
mov
lahf
push
pop
imul
or
mov
pushf
pop
jb
inc
mov
leave
das
xchg
xchg
call
push
xor
std
and
pushf
outsl
jecxz
push
test
mov
mov
dec
push
push
and
les
repnz
adc
xor
push
pop
fildl
push
push
or
clc
mov
mov
add
enter
mov
add
rorb
sar
loop
fdivl
adc
pop
hlt
stos
xchg
xor
icebp
or
mov
cmp
repz
aad
adc
pop
mov
xor
xor
mov
fwait
int
push
push
ret
xor
cmc
fimull
call
in
push
add
in
inc
lods
pop
lea
add
jg
sub
mov
add
divb
sub
add
mov
js
sbb
xchg
adc
loope
cmp
enter
cwtl
inc
pop
sti
sarb
mov
mov
int
mov
mov
pop
jmp
sub
add
into
push
xor
pusha
adc
or
push
aam
dec
add
or
lahf
test
inc
neg
outsb
cmp
push
jne
cwtl
pusha
mov
dec
sub
sbb
cmpsb
fdivs
cmpsb
js
fists
stos
ljmp
adc
sub
jmp
dec
or
subl
xchg
dec
testb
inc
call
push
jg
shlb
scas
push
jmp
add
mov
cmp
sub
faddl
or
jge
xor
loopne
pop
rcrb
mov
xchg
inc
mov
adc
and
dec
mov
popa
push
bound
mov
rcll
js
adc
add
sub
and
mov
push
sub
cmp
sub
nopl
inc
cld
les
and
enter
mov
mov
sbb
in
add
pushf
xor
lock
fwait
add
xor
cmp
jge
xchg
dec
jne
inc
scas
lahf
cmpsb
ljmp
fwait
xor
fists
gs
push
loopne
movsl
add
mov
jae
in
in
and
mov
dec
ficompl
pushf
push
js
out
dec
xor
jbe
ficoms
mov
movsl
or
sahf
adc
jmp
mov
jge
dec
or
or
out
add
fcmovne
test
add
pop
adcb
es
mov
jne
inc
xlat
add
stos
das
sbb
cmpb
dec
sub
pop
and
js
shll
inc
add
inc
dec
jb
push
rolb
mov
lock
sbb
mov
cmp
subl
mov
in
cmp
cld
jge
jecxz
fstpl
imul
loopne
aad
inc
sarl
insb
lret
fidivl
mov
pop
push
ljmp
neg
outsl
xor
call
or
sbb
jg
sub
pop
ret
xchg
jle
test
sahf
pop
xchg
hlt
push
sbb
jl
mov
mov
paddb
sarl
mov
loopne
pusha
or
scas
loopne
leave
adc
gs
and
lods
or
pusha
push
dec
xorl
add
push
jge
test
test
mov
jg
mov
cmp
imul
xor
xchg
push
add
cmpl
push
addl
sbb
push
cli
xor
mov
add
adc
js
ret
arpl
or
xchg
push
xor
mov
inc
sbb
adc
sbb
xchg
fdivrs
mov
inc
xchg
xor
inc
pop
jno
loope
push
sub
xchg
mov
mull
fs
subb
push
mov
lret
or
inc
clc
jnp
push
stos
push
sbbb
xchg
das
test
insl
fistl
push
outsl
imull
cmp
movsb
dec
push
xor
jno
and
mov
mov
das
jle
test
fcmove
addb
add
adc
push
mov
or
and
rclb
js
add
fcoms
dec
cli
les
push
mov
fwait
idivl
mov
xorb
add
fimuls
inc
sub
adc
mov
data16
les
xor
mov
clc
cmpsb
outsl
inc
mov
pop
and
call
pop
test
stos
and
imul
mov
pop
jno
mov
dec
xchg
dec
or
xchg
pop
cli
and
mov
inc
test
jbe
mov
xor
push
insb
jno
mov
push
je
das
or
pop
push
mov
sub
push
subb
rol
and
and
popf
test
and
fidivl
xor
add
jno
ds
or
imul
push
test
mov
push
repz
insb
sbb
test
pop
add
mov
xor
inc
repz
mov
adc
mov
outsb
insb
sub
int3
pusha
and
test
insb
lods
ret
dec
sti
roll
int
cmpsl
lahf
das
subl
pop
test
add
jne
push
or
lret
lahf
test
sub
lock
cmp
pop
insl
mov
lea
ret
test
movsl
jp
pop
mov
out
test
outsl
jno
cmpsb
pusha
mov
adc
pop
mov
in
movsl
lahf
dec
xor
add
sub
fimull
imul
pop
decl
and
push
decl
pop
inc
outsb
cs
pop
mov
dec
xchg
mov
jmp
dec
mov
inc
adc
inc
jo
mov
orl
mov
xchg
sbb
cwtl
shrb
movsb
lods
sarl
xor
xor
lds
mov
add
add
adc
es
add
or
inc
mov
pusha
hlt
inc
out
xor
jbe
outsl
sub
insb
lock
inc
iret
inc
push
jmp
sub
jnp
adcb
cmp
push
jp
call
mov
loop
jge
push
lea
mov
push
xlat
lea
xor
outsl
adc
enter
rcll
enter
mov
repnz
mov
pushf
aam
fstpt
scas
push
test
pop
aam
mov
sub
sbb
jmp
add
pop
sub
adc
loopne
sub
xchg
cmp
lea
cmpsb
mov
mov
lods
sbb
or
fsubrs
lea
mov
pop
adc
or
add
das
cltd
shll
shrl
jb
cmp
clc
fnstsw
popa
or
lods
pop
inc
sub
inc
les
jge
lea
inc
fsubrl
pop
jle
jnp
rorl
mov
jae
rcl
push
mov
xchg
test
mov
sub
push
dec
mov
imull
in
fstl
and
sbb
push
xchg
and
dec
push
push
les
add
xchg
lods
push
dec
insl
cmp
mov
jb
sbb
and
fiaddl
sbb
movsl
push
arpl
jae
stos
mov
push
movsl
data16
and
adc
call
push
mov
and
jb
setg
xor
stos
test
loope
sub
add
jo
ficoml
js
mov
mov
and
mov
shrb
cmpsl
mov
or
or
repz
das
ds
dec
lods
pop
sub
xor
lcall
push
fcmovb
cmp
mov
xor
pop
in
inc
stos
push
pusha
pop
push
cmp
mov
pop
cmp
or
sbb
imul
cmp
roll
and
enter
jb
push
rol
mov
decb
and
mov
mov
loope
jb
insl
imul
inc
cmp
pop
fadds
dec
xchg
sub
outsl
push
xchg
pop
add
mov
add
add
fwait
pop
aad
pop
mov
dec
pop
pop
lods
pop
stos
in
imul
loopne
fcoml
lock
pop
mov
outsb
std
pop
cmp
push
dec
aad
loopne
or
subl
push
mov
lret
fadds
jbe
add
ret
push
sti
inc
push
mov
and
addl
lea
sbb
pop
cmpsb
out
sub
add
adcb
mov
mov
jns
lret
pushl
insb
mov
stos
xor
js
add
dec
mov
imul
add
lahf
cmp
mov
das
cli
cmpsb
cmc
sbb
or
mov
pop
rol
fildl
add
xchg
xchg
mov
jmp
insl
imul
rcrb
xor
imul
das
test
sahf
cmp
xor
lods
adc
add
scas
xchg
fadd
outsl
jl
add
inc
fistpl
arpl
push
nop
cmp
pusha
add
pop
push
push
unpckhps
rcrb
int3
mov
test
rol
lahf
jno
adc
sar
xor
or
jmp
and
daa
adc
xorl
mov
sub
inc
push
mov
sbb
or
push
mov
sub
inc
cld
sub
outsl
pusha
mov
repz
add
andb
pop
call
les
pop
mov
rcrl
mov
xor
pop
xor
dec
lea
divl
pop
inc
mov
aam
pusha
jb
imul
ja
mov
scas
scas
sub
aas
hlt
das
cmc
test
scas
enter
adcl
decl
dec
jmp
mov
decb
adc
mov
add
or
jo
mov
cmp
mov
mov
lock
mov
mov
rorl
movsb
sbb
adc
xor
or
adc
hlt
sbb
lds
pop
sub
push
int
push
in
lcall
cmp
sbb
mov
cmp
pusha
sub
fwait
pop
sub
mov
addb
jle
jb
pusha
jle
sub
or
mov
push
jo
mov
out
movsl
shlb
rcll
mov
sub
aam
jb
call
or
orb
lods
insl
pop
pop
pop
pop
dec
les
lods
aad
gs
push
mov
inc
mov
cli
xchg
in
mov
inc
mov
xchg
imul
test
popa
test
add
ret
imull
xorl
xchg
div
mov
or
int
push
sub
mov
test
cli
xchg
xlat
scas
lea
push
adc
add
add
inc
lods
mov
sbb
add
xor
faddl
mov
or
mov
pop
fwait
loopne
js
or
push
pop
inc
add
decl
or
inc
add
mov
notl
jecxz
add
mov
and
inc
loopne
inc
incl
cmp
movsl
sahf
cmp
into
mov
or
daa
aam
or
insl
sub
push
incl
or
adc
loop
pop
aam
pop
sub
ret
out
and
lea
out
sar
fisttpl
test
pop
lock
adc
mov
cmp
mov
mov
ret
or
mov
push
aad
out
int
push
push
mov
add
out
outsl
sbb
mov
lods
pop
jge
mov
push
sub
push
loop
or
and
mov
pop
std
fcmovbe
jle
or
call
mov
cmpsl
push
inc
xorl
sub
xchg
pop
sarl
lea
lods
aam
mov
orb
lods
insl
mov
sbb
cmp
pop
insl
mov
push
inc
rcrb
mov
movsl
push
mov
dec
xchg
jno
out
mov
loope
fisubs
dec
pop
lock
testb
xchg
ret
mov
mov
xor
pop
inc
mov
sbb
sub
cwtl
sbbb
icebp
rolb
xor
aaa
inc
push
pop
iret
out
or
add
mov
add
add
or
je
cmc
pop
push
and
push
hlt
fs
bound
dec
rolb
ss
and
rcl
push
sub
add
pushf
pop
pop
aad
sbb
fdivrl
cmp
mov
or
mov
inc
mov
pop
xor
dec
push
test
addr16
or
sahf
sbb
scas
ret
add
sti
pop
cmp
push
jb
and
rcrl
jle
pop
cmp
push
push
cmpsl
mov
pop
fcoml
rcrl
cmp
sar
insl
push
sub
sub
mov
and
adcl
pop
ret
aas
mov
cs
jg
cli
aaa
xor
mov
mov
push
ja
push
inc
rorb
aaa
mov
in
adc
in
inc
outsl
lcall
xchg
push
fwait
call
repz
mov
mov
inc
pop
out
imul
sub
jle
out
cmp
jmp
xchg
fdivs
inc
jno
nop
lahf
xor
sub
mov
sbb
adc
push
sbb
pop
ds
lds
insl
scas
push
mov
fistps
popa
sub
sbb
lret
ljmp
enter
add
pop
cmpsl
call
mov
dec
shrb
adc
xchg
inc
mov
sub
in
add
xchg
lock
out
shl
add
or
jge
and
adc
negl
mov
adc
andl
xchg
aam
jle
mov
add
js
or
lea
mov
jge
fnstenv
repz
ds
into
add
popf
inc
cmp
inc
mov
add
jle
xor
mov
mov
xor
mov
sub
dec
jne
pop
pop
cmp
adc
pop
mov
ret
inc
dec
imul
movsl
sbb
and
pop
jo
xor
inc
jmp
add
jecxz
es
add
fisttps
lcall
shll
push
adc
fdivr
cmpl
jne
mov
xlat
add
in
xchg
add
sti
sub
inc
xor
sub
int3
clc
fwait
stos
clc
flds
inc
roll
add
push
js
jbe
fs
xchg
inc
out
std
xlat
adc
dec
clc
and
dec
dec
mov
out
cmpsb
aaa
or
xor
imull
sbb
stos
mov
shll
jb
add
movsl
mov
xchg
ss
push
sarl
jo
sbb
jle
sbb
sbb
xchg
pop
sbb
les
push
mov
mov
lahf
push
pushf
cmp
dec
cs
jb
loope
aad
in
rcl
hlt
inc
imul
pop
pop
lahf
clc
cmp
xor
sub
pop
stos
push
nop
pop
dec
sub
mov
mov
add
shrl
adc
push
adcb
popa
mov
das
lds
push
in
outsl
lea
lods
pusha
shrd
inc
nop
xchg
mov
jne
add
mov
mov
les
insb
xor
push
mov
sub
mov
ss
xor
mov
arpl
xlat
pop
outsl
fisttpll
daa
ret
arpl
ljmp
mov
mov
add
xchg
sbb
inc
test
lret
pop
test
mov
lods
imul
daa
xchg
push
add
std
pushl
xchg
mov
xchg
popf
scas
add
test
dec
xor
push
pop
and
es
add
inc
push
add
push
sti
add
mov
fs
jae
loope
inc
or
xor
xchg
sub
inc
dec
aad
scas
lds
mov
mov
push
xor
xchg
or
mov
cmc
or
pop
mov
pop
xor
hlt
cli
sub
push
jae
outsl
inc
insl
test
xlat
dec
xor
mov
mov
add
lock
xor
push
jb
cmc
add
mov
cmp
stos
push
roll
clc
xor
inc
stos
pop
mov
mov
pop
sub
leave
pop
mov
xor
sbb
sub
orb
test
addl
mov
insb
insl
imul
push
xor
or
push
sub
add
mov
pop
sbb
ret
push
enter
mov
jle
mov
testl
cmp
sub
fmuls
inc
jno
and
fnstcw
iret
mov
test
rcl
lcall
aas
sbb
lock
mov
out
inc
and
inc
or
fiadds
push
jmp
subb
aas
shlb
xchg
inc
dec
mov
sbb
xor
mov
mov
sbb
dec
push
lahf
shrb
mov
leave
or
and
shlb
mov
pusha
push
lods
sar
lock
fcomps
aaa
rorl
adc
push
mov
add
or
cmc
and
inc
xchg
mov
push
movb
or
jmp
mov
pop
cld
punpckldq
jne
or
cmpb
push
mov
fld
arpl
in
dec
fscale
dec
xlat
mov
xor
pop
lock
test
push
lea
cltd
clc
hlt
and
pop
aam
or
inc
mov
or
sbb
cmp
test
or
ljmp
mov
add
fst
adc
sub
in
aaa
mov
xor
pop
pop
push
repnz
sub
imul
clc
cli
xor
movsl
sub
fcomps
cmp
xchg
pop
imull
dec
or
jo
sbb
pop
mov
push
dec
movsl
lea
dec
stos
adc
sbb
dec
dec
insb
adc
push
es
push
or
shrb
add
roll
mov
push
add
push
push
adc
testb
pop
xchg
rcrb
test
mov
push
ss
movsl
and
lret
xor
mov
sub
imul
add
sbb
les
push
popf
mov
push
gs
and
sub
or
pop
mov
stos
xchg
in
cli
outsl
aaa
push
ss
xor
push
mov
xor
andl
stos
adc
and
imul
loope
xchg
lods
xor
mov
cmp
mov
mov
mov
pop
lahf
clc
mov
shrl
dec
inc
xchg
xchg
mov
das
cmp
and
mov
fwait
mov
and
or
decl
fsts
mov
fnstcw
int3
lods
or
add
push
sub
jp
inc
push
sub
lods
cld
shll
lahf
or
jns
clc
sti
les
sub
xchg
xchg
test
mov
mov
in
cld
or
imul
sub
aad
imul
gs
push
adc
lret
cmpsb
int
fiaddl
pop
and
das
mov
int
aad
mov
push
mov
stos
repz
or
mov
pop
imul
adc
dec
lock
or
lods
inc
and
int
inc
stos
mov
add
cld
lock
or
inc
gs
mov
and
jb
or
sub
repz
cs
pop
insl
aam
movl
mov
cmpsb
cmp
jle
cmp
inc
xor
mov
bound
jmp
lods
or
jns
add
sub
gs
mov
or
xor
out
add
sub
test
ds
pusha
or
xor
aam
push
and
sub
jg
sub
jo
dec
mull
mov
lock
test
jl
jno
orl
sub
pop
mov
cmp
cmp
mov
ja
roll
rcrl
test
mov
sahf
pop
test
and
cmp
scas
cmp
cltd
cli
pop
pop
jb
test
addl
push
in
lods
xor
mov
xlat
jg
jae
push
call
cmp
rolb
sub
insl
div
enter
pop
lds
xchg
jb
jb
push
rorl
clc
sbb
test
sbb
jg
outsl
mov
adc
and
add
dec
push
imul
sbb
ja
adc
push
ret
and
pop
imul
addr16
push
mov
sub
test
mov
add
int3
aad
subl
adc
jnp
xchg
test
andb
sbb
mov
subb
add
jbe
sub
andl
or
rcrb
jbe
mov
roll
jle
mov
cmpsb
push
mov
mov
sti
mov
sub
or
fists
jecxz
aam
sbb
je
aaa
loopne
add
std
cmpsl
jmp
fildll
sbb
mov
jo
outsb
xor
adc
fisttpll
xor
push
test
inc
jae
and
fists
push
mov
das
aas
arpl
rcrb
push
sub
sbb
int
sub
test
inc
sub
iret
dec
jb
push
rcll
xchg
pop
adc
lret
or
pop
bound
xchg
jle
test
cld
and
xor
inc
gs
dec
dec
push
sub
mov
or
push
or
cmp
cmpsb
pop
in
outsb
aas
std
mov
push
mov
jbe
mov
inc
jno
ret
subl
mov
in
mov
sub
dec
dec
cmp
cmpb
cmp
pop
outsl
sub
repz
mov
lods
mov
add
sub
cmp
insl
cltd
sub
push
push
inc
stos
xchg
or
inc
test
dec
push
jle
les
mov
mulb
or
push
icebp
insl
add
push
les
or
and
push
pop
icebp
adc
fmuls
xchg
mov
outsb
mov
inc
daa
idivl
jne
and
sbbl
pop
insl
and
movsl
fadds
or
pop
push
push
jo
fdivl
clc
cmp
xor
cwtl
aas
sbb
mov
dec
or
pop
and
jns
cmc
loopne
loop
les
dec
outsb
adc
rclb
cli
cmp
dec
sbb
lret
sub
jp
fsubrl
data16
dec
pop
adc
push
imul
inc
and
jmp
jl
xchg
mov
add
fildl
hlt
pop
imul
add
jae
addb
dec
mov
add
call
add
inc
xchg
jo
lods
cmp
fidivrl
into
dec
mov
pop
xor
push
fdivrl
inc
scas
sbb
add
pop
mov
scas
rcrb
jecxz
xor
sub
cmp
es
sbb
mov
xor
testl
add
pop
les
mov
mov
cmp
xchg
add
adc
add
aam
mov
ja
ret
mov
add
andl
je
inc
sbb
out
ljmp
jl
jns
xchg
add
clc
mov
cmp
add
lds
and
xor
lcall
jp
mov
jmp
jge
out
popf
sub
cmc
adc
leave
sbb
sbb
lret
mov
addr16
add
out
jg
testl
pop
push
adc
lods
loopne
mov
jns
lret
fmuls
xchg
and
and
outsb
xor
xor
pop
rcr
xor
mov
jge
and
ficoms
insl
add
les
out
pop
in
test
imul
in
inc
lret
int3
xchg
adc
in
add
out
ret
add
sbb
ljmp
jmp
inc
add
movsb
push
iret
jo
jo
js
dec
cld
sub
pop
sbb
into
sarl
pushf
dec
daa
int3
fcomps
add
or
out
sub
data16
add
testl
ja
enter
or
pusha
adcb
out
lret
push
rcrb
mov
dec
add
inc
les
sub
lds
rolb
xchg
shll
or
insl
sbb
pop
andl
lods
mov
jl
pop
mov
cmc
or
icebp
arpl
and
loopne
cmp
inc
mov
sub
mov
mov
xor
imul
mov
or
decl
mov
imul
add
mov
jbe
jle
xchg
xor
cmp
pop
mov
clc
movmskps
stos
add
push
adcl
cmp
inc
sbb
xchg
jb
and
outsl
scas
popf
lods
or
xchg
push
popf
lods
test
test
pop
adc
adc
test
xchg
sub
add
shll
sub
pusha
or
fsin
cmp
xchg
mov
insl
add
shrb
jle
inc
test
cmp
repz
lahf
and
ret
mov
lods
mov
inc
push
loop
shrl
cmp
pop
rcrl
xor
sbb
add
cmp
cmp
cmp
adc
cmp
mov
clc
cmpsl
push
add
push
or
test
fisubl
push
or
pop
inc
mov
pop
inc
cli
sbb
pop
mov
jae
pop
bound
pop
es
dec
mov
mov
imul
movsl
dec
lock
lahf
add
and
das
ds
cltd
add
add
cli
in
lods
sub
popa
pop
mov
jle
mov
sbb
and
bound
sub
into
out
adc
xor
jne
sbb
aam
inc
jge
pop
xchg
lods
shrl
pop
or
stos
nop
mov
pop
and
bound
push
sub
popa
push
inc
or
cmp
sub
sbb
pushl
xchg
cmp
adc
addb
pop
push
sub
push
push
bound
xor
bound
iret
xchg
test
cmpsb
push
dec
mov
les
test
cmp
mov
sar
mov
insl
sub
and
mov
add
clc
shrl
adc
mov
les
mov
push
mov
or
pop
mov
fimull
jmp
mov
or
and
push
imul
adc
push
lods
sbb
xchg
add
pop
fisubs
ljmp
lea
push
lods
or
dec
mov
inc
pusha
dec
mov
mov
push
aad
push
jo
inc
cmp
ljmp
scas
push
cmp
andl
mov
and
mov
in
jg
mov
insb
pop
push
stos
aam
cmp
push
mov
pop
outsb
ss
push
sub
cmp
pop
ret
or
dec
aam
shll
mov
je
xchg
and
push
xor
aam
jne
ret
cli
pop
imul
subb
ret
adc
ret
outsl
addb
or
test
adc
stc
push
push
arpl
lea
dec
in
lahf
or
xchg
notl
dec
pusha
push
or
add
xchg
rorb
test
cmp
mov
ss
out
cmc
pop
aas
and
insb
lahf
push
push
pop
pop
mov
xchg
sub
mov
or
arpl
je
push
push
das
out
mov
lahf
xchg
adc
xchg
aad
mov
adc
inc
mov
cmpsb
test
icebp
xchg
popa
mov
pop
int3
pop
imul
jo,pn
and
das
xor
jb
inc
mov
in
adc
or
sub
pusha
xchg
popa
stos
lods
push
jle
xor
xor
mov
add
shll
dec
mov
inc
push
bound
aam
adc
cwtd
aam
in
add
inc
and
call
repz
pop
sub
dec
in
icebp
aam
push
mov
inc
in
xor
les
shlb
mov
push
or
pop
cwtl
sbbb
fldcw
mov
aam
cmpsb
inc
add
call
nop
jae
aam
sub
out
rcll
sub
in
or
and
fidivrl
test
rcll
cmpl
dec
pusha
aas
and
push
mov
lcall
call
mov
jo
fdivrp
fwait
lds
add
mov
or
add
ss
add
xor
gs
mov
nop
push
mov
shl
add
andnps
add
not
jo
add
pop
out
daa
jbe
add
lea
xor
push
mov
inc
lock
sub
mov
and
sti
xor
sbb
xor
icebp
adc
pop
clc
and
mov
push
adc
imull
addr16
and
inc
cmp
xor
add
ljmp
cmp
jne
test
or
lds
xor
adc
test
jge
aaa
push
cltd
ja
gs
pop
call
mov
std
push
adc
push
pop
ret
add
mov
out
lahf
add
xor
bound
icebp
sub
and
test
in
jae
push
mov
inc
jp
dec
xor
pusha
jo
test
test
add
scas
xchg
mov
mov
xchg
dec
inc
add
outsb
or
pop
mov
ja
or
xor
and
mov
push
shlb
or
call
jae
adc
ret
testb
aas
and
add
notb
roll
mov
push
clc
insb
andl
rcll
cmp
lods
sar
cmpsl
ds
sbb
stos
shr
or
sti
sub
xchg
mov
or
xchg
repnz
mov
stos
les
in
pop
mov
push
mov
scas
rolb
in
xor
xchg
or
jb
outsl
xchg
sub
loop
test
mov
jno
fisubs
stos
aad
or
inc
lods
push
fwait
mov
outsl
movsl
sbb
mov
lahf
mov
push
stos
add
pop
lock
shlb
les
cmp
jo
in
push
jb
or
adc
push
loop
lea
fsubl
iret
fistpl
add
dec
push
sub
in
mov
ret
adc
mov
and
js
mov
mov
idivl
sub
mov
inc
stos
inc
js
sbb
pop
stos
subb
pop
out
add
les
es
add
or
pop
mov
dec
xor
test
pop
push
xlat
push
rcrl
push
loop
xchg
in
fbstp
jmp
mov
cmpsb
xor
inc
or
addl
or
or
pop
adc
xchg
push
pop
imul
ljmp
adc
mov
arpl
jl
sbb
lods
in
adc
push
cmp
adc
sbb
aas
imul
mov
inc
les
lods
inc
sub
shl
test
int
stc
adc
push
lcall
jo
mov
dec
divl
push
pop
inc
pop
mov
push
pop
sub
and
or
js
lea
or
mov
push
jno
aam
push
push
orl
push
sub
jb
and
mov
cmp
lahf
xor
pop
sub
jno
jno
hlt
sub
xchg
sub
or
xor
lcall
xchg
mov
inc
insl
and
rclb
test
xchg
mov
jb
xlat
or
add
ret
arpl
push
pop
and
sub
xorb
dec
adc
push
adc
inc
imul
es
dec
lar
jg
jmp
mov
sub
and
clc
and
sar
fisttpl
add
sarb
es
repnz
or
mov
xor
inc
str
and
outsb
jbe
inc
adc
in
and
push
ss
popf
xchg
lods
in
in
sub
pop
push
stos
push
clc
ret
cmp
or
mov
xchg
inc
cmp
shr
or
adc
cmp
aad
outsl
mov
add
dec
sahf
add
jmp
fst
enter
cmc
lods
or
stos
loop
and
add
push
testb
shlb
fsts
pop
hlt
pop
jbe
fbld
mov
mov
icebp
addl
out
ficoms
movsb
nop
sahf
dec
int3
push
cld
sub
ss
insb
or
test
stos
sub
test
rcrb
push
push
jb
xchg
daa
dec
or
ficoms
add
es
fbstp
scas
outsl
repz
test
pop
rorl
filds
push
pop
and
out
in
sti
andl
mov
loopne
mov
call
add
shll
xor
andl
jge
inc
inc
inc
push
xchg
js
or
aas
ss
inc
sbb
mov
loope
mov
jg
jmp
adc
ja
and
mov
rorb
pushf
add
adc
cmpsb
insb
pop
pop
fsubrs
inc
adc
sbb
adc
enter
sarb
fmuls
filds
adc
call
fs
les
mov
ret
inc
adc
cmc
or
orb
sti
addr16
in
les
js
out
dec
sub
jno
mov
popf
pop
add
std
enter
sbb
and
rcrb
mov
movsb
shlb
lcall
call
add
out
mov
aam
data16
es
add
jne
or
js
clc
fistpll
sbb
out
push
or
sbb
or
xorb
mov
inc
imull
add
or
sti
cmp
or
pop
xor
lcall
test
mov
xchg
js
pusha
inc
mov
xlat
jno
push
pop
mov
sub
stos
push
mov
and
mov
inc
lods
mov
or
add
sti
rolb
xor
pusha
adc
add
outsl
test
sub
ljmp
cmp
jmp
add
push
push
mov
stos
xchg
push
mov
test
mov
push
or
mov
add
add
scas
adc
add
adc
in
jge
lahf
push
push
jae
pop
ret
cmp
lods
adc
inc
mov
xchg
stos
inc
aaa
sbb
aaa
rorl
mov
or
orb
xlat
add
add
sbb
aad
add
dec
xor
pushl
mov
clc
add
add
ret
adc
push
or
lods
subb
shr
pop
addl
test
nop
lea
add
mov
movsl
or
mov
rolb
push
jle
cmp
add
xchg
mov
jg
aam
fldl
movsl
xor
out
and
in
scas
mov
sbb
sbb
imul
lahf
fcompl
adc
and
push
lock
push
shll
or
add
loope
loop
jb
xchg
in
iret
cli
sahf
add
jmp
repnz
sbb
sub
push
xchg
inc
sbb
or
adc
enter
jo
scas
rol
dec
adc
push
sbb
in
jmp
or
andb
icebp
add
sbb
mov
fisubl
mov
xchg
dec
push
frstor
enter
jmp
and
xchg
movsb
sahf
xor
jno
mov
sub
jl
or
xchg
popa
push
inc
cmp
xor
cmp
sbb
repnz
cmp
sbb
or
adc
push
xor
mov
fdivl
pushf
and
data16
lods
adc
hlt
xor
mov
push
inc
out
xchg
add
jmp
mov
in
sti
or
fucom
popf
out
xchg
les
add
clc
cli
mov
into
mov
push
lock
adc
sub
mov
add
or
scas
push
jns
add
imul
dec
or
xchg
stos
xlat
sarb
and
fstps
sbb
push
push
add
loope
sbb
lock
push
aam
xchg
sti
lock
cld
adc
add
dec
aaa
and
ds
orl
adc
xorl
inc
xchg
popf
outsl
add
cli
shll
pop
dec
push
jle
sub
out
cmp
push
push
inc
pop
pop
or
inc
lods
stos
dec
mov
stos
add
push
or
mov
inc
and
sub
jae
pop
sbb
jge
push
sub
push
not
xchg
lods
xchg
mov
cli
xor
inc
lea
add
stos
adc
sub
or
xchg
inc
sub
dec
clc
adc
movsl
pop
movsl
add
loopne
xchg
adc
mov
stos
test
mov
test
mov
repz
orb
shr
inc
mov
add
pop
ffree
sbb
bound
mov
test
xor
inc
pop
sub
push
ror
rolb
and
dec
negl
push
ljmp
test
cmpsb
mov
inc
mov
or
test
jae
inc
cmp
mov
push
add
shlb
into
clc
test
sbb
rclb
xchg
and
mov
and
rcrb
xor
rcl
jecxz
inc
fwait
pop
fdivr
ja
scas
mov
inc
inc
adc
jmp
pop
sub
pop
incb
dec
fnstsw
negb
xor
sub
sbb
mov
or
call
subb
int3
mov
test
ret
clc
es
push
lret
lea
sbb
sbb
push
xchg
and
lret
push
call
pop
rcr
ret
add
int
mov
add
sbb
add
inc
bound
pop
aad
pop
aam
inc
xor
negl
dec
loop
xchg
adc
or
dec
ljmp
gs
iret
cvtpi2ps
adc
je
lock
ret
xor
dec
std
and
inc
cs
add
adc
inc
lods
inc
or
fistl
sahf
sbb
sub
inc
mov
fwait
mov
mov
cmp
add
in
add
mov
pop
mov
push
popf
add
mov
pushf
add
enter
dec
mov
ljmp
pop
sub
incl
mov
shlb
mov
rcrb
xchg
mov
cli
inc
jo
popa
mov
shll
das
or
xor
les
gs
dec
mov
add
lods
pop
mov
push
lods
movb
push
add
lods
mov
dec
xchg
dec
fsubrl
sarb
cmp
outsb
push
jle
pop
mov
lahf
fimuls
shrb
insl
dec
inc
test
addb
jno
and
push
xchg
cmp
lea
subb
push
pop
mov
cwtl
sti
test
cmp
adc
xor
cmp
jecxz
mov
dec
pop
ja
sub
sbb
insl
rclb
pushl
orb
in
cmp
push
pop
push
push
sub
fimull
mov
xor
shlb
dec
add
inc
mov
push
jge
test
sub
mov
clc
das
pop
sub
inc
add
mov
jno
mov
shlb
ret
xchg
clc
popa
test
outsl
mov
and
incl
or
insl
imul
pop
sub
aam
jp
sbb
fs
mov
aad
push
daa
mov
pop
test
out
rorb
pop
imul
mov
mov
and
or
cs
add
dec
lahf
jne
icebp
call
mov
imul
cmp
cmp
jns
pop
mov
dec
xor
or
lods
in
lods
add
pop
subl
jnp
inc
imul
hlt
mov
subb
or
rolb
inc
cmp
sbb
xor
xor
cli
outsb
mov
pop
outsl
inc
call
ss
cmp
es
inc
rorl
in
rol
jp
sbb
aas
add
xorl
dec
dec
jo
sbb
push
and
adc
or
xchg
mov
clc
mov
jbe
add
jno
jmp
int
insb
in
sub
adc
scas
movsb
lcall
pop
leave
mov
mov
xor
lods
push
inc
aam
imul
push
mov
test
rep
cmp
push
stos
out
add
push
add
lods
pop
pop
loope
mov
inc
nop
ret
adc
jle
icebp
repnz
imul
jmp
xchg
js
pusha
add
add
repz
xor
adc
inc
pop
jmp
std
mov
inc
mov
icebp
push
cmpsl
in
inc
lods
adc
dec
rclb
lds
ret
pop
add
sub
divb
jno
loop
lods
mov
arpl
sbb
adc
inc
popa
cli
or
loop
push
jle
scas
and
sub
inc
mov
mov
jle
and
lahf
or
sbb
xchg
lea
adcb
xchg
je
push
and
ss
ljmp
outsb
and
or
lods
adc
jnp
or
or
in
cmp
jb
pop
addr16
das
xor
fcomps
out
mov
dec
push
imul
push
sub
xchg
and
push
jno
dec
sub
jno
mov
movsl
mov
push
sbb
inc
aam
std
outsl
xchg
clc
sti
das
fistpl
repnz
inc
es
adc
push
mov
rorb
sub
mov
push
cwtl
xor
bound
cwtl
push
jmp
arpl
rcl
add
mov
data16
jle
cli
xor
sbbb
shrl
inc
dec
add
adc
lock
inc
xor
insl
inc
lods
addr16
pop
cld
daa
mov
pop
inc
movsb
and
adcb
dec
cltd
adcb
inc
call
add
jns
mov
cmc
xor
push
imul
repz
iret
inc
mov
dec
xchg
or
lea
xchg
gs
pop
insl
push
xchg
add
add
or
adc
jbe
dec
xor
movsl
jo
rcrb
lcall
subb
lods
xchg
cmp
xchg
test
xor
pusha
push
push
push
fisttpl
test
lret
push
xchg
xchg
inc
ljmp
mov
or
mov
pop
adc
mov
mov
je
test
push
inc
sbb
lahf
push
mov
and
sub
mov
inc
das
xchg
push
push
add
imul
cmp
hlt
icebp
mov
mov
in
or
mov
incl
mov
mov
xchg
adc
pop
or
pop
fistpl
lods
out
popa
add
mov
lods
push
outsb
jecxz
imul
imul
inc
adcl
inc
cmp
sub
mov
inc
rcrl
insl
pop
imull
sbb
sbbb
mov
lea
jno
dec
test
add
sbb
insl
push
rclb
push
xchg
jmp
ds
movsl
push
mov
or
inc
add
inc
cmp
cmpb
pop
mov
or
sub
arpl
xor
sub
je
and
sub
insl
xchg
jae
mov
pop
jb
adc
mov
mov
es
sub
dec
jno
jb
xor
push
pop
pop
mov
outsb
push
pop
movsl
sub
imul
jle
sub
sbb
add
mov
mov
lods
mov
iret
mov
mov
shlb
or
mov
das
push
icebp
or
jae
lahf
mull
push
addb
lods
sub
hlt
in
mov
popl
jae
dec
mov
push
outsl
ja
pushl
rcrl
mov
add
adc
add
test
xor
push
xor
adc
dec
ljmp
inc
sahf
pop
or
sbb
inc
roll
pop
nop
int
mov
mov
roll
fcmovbe
mov
or
inc
rol
jnp
or
pop
adc
sub
cld
fistl
and
fiaddl
pop
test
outsl
ret
mov
insl
lods
mov
adc
push
or
test
push
dec
push
add
mov
add
fidivs
sub
outsl
cmp
push
sub
cltd
into
jp
lods
data16
clc
xor
or
or
mov
inc
mov
shlb
inc
pop
mov
adc
lods
iret
adc
test
or
aaa
lret
arpl
pop
or
cmp
lods
test
xor
inc
out
sub
xchg
mov
stos
and
cmp
inc
jne
dec
std
adc
pop
outsl
jb
jle
sti
or
mov
jo
inc
test
std
jno
mov
push
cld
adc
xchg
dec
push
stos
into
cmp
mov
bound
mov
sbb
test
in
adc
roll
fists
add
push
push
mov
ret
ficoml
mov
mov
push
push
pop
loop
rolb
inc
add
cmp
shr
or
push
push
test
xchg
lods
push
mov
stos
les
cli
xor
scas
dec
lret
mov
add
int3
mov
movsl
stc
fcmovnu
push
je
jnp,pn
cmp
cmp
sbb
cld
pop
mov
xchg
pop
pop
dec
mov
mov
jns
test
pop
mov
testb
pop
insl
jmp
les
cwtl
cmp
xchg
sub
lods
mov
leave
push
push
stos
adc
or
sub
pop
or
mov
cmc
mov
sub
jne
das
aam
cmp
mov
aaa
mov
xchg
pop
les
inc
adc
jmp
enter
stos
sbb
sarb
mov
dec
mov
mov
imul
or
cs
lea
insl
push
icebp
popa
ret
mul
inc
stos
mov
jl
les
addb
ja
mov
sub
pop
xor
rorb
mov
mov
nop
mov
pushf
fbld
stos
mov
clc
mov
sub
jle
adc
inc
mov
fdivp
jmp
enter
cwtl
push
fldt
pop
les
lret
and
ss
pop
mov
mov
fadds
pop
jp
jle
push
subl
mov
push
add
aam
sub
inc
xor
inc
mov
jb
test
sub
pop
jmp
out
mov
rcr
fisttpl
lods
inc
mov
lock
pop
add
inc
pop
and
out
or
sub
fidivl
push
mov
add
xchg
sahf
sbb
aam
sbb
pop
push
das
add
add
xor
sub
cs
push
fimull
cwtl
xchg
adcl
push
jp
das
xchg
fisttps
mov
popf
stos
ss
lods
out
ret
cmp
adc
add
cmpsl
add
fisubrl
ja
sbb
int3
cmp
cld
pop
add
mov
cmp
xchg
sub
dec
xor
inc
or
dec
lods
subl
std
mov
or
pop
out
test
insb
insb
inc
pop
fidivl
sbb
ret
movsl
pop
ljmp
inc
test
jmp
ss
jnp
dec
inc
test
out
adc
jb
loopne
mov
stos
or
mov
or
sub
loope
pop
imul
in
cwtl
xchg
push
mov
and
and
stos
and
dec
xchg
sub
test
enter
lcall
shll
mov
xchg
add
sub
cmp
sub
and
xor
push
mov
imul
push
adc
sbb
lods
mov
lea
pop
ljmp
xor
clc
test
sub
pop
les
and
imul
pop
inc
inc
out
push
loope
leave
push
xacquire
insl
es
pop
add
push
inc
and
push
mov
push
lahf
psubd
pusha
call
dec
inc
loop
fnsave
dec
pop
fwait
mov
cmpsl
add
inc
call
mov
sbb
adc
hlt
lcall
inc
mov
aad
sbb
incl
dec
adc
add
testl
fcomip
ficomps
pop
adc
add
push
fcmovnu
loopne
or
rcrb
inc
or
mov
xor
imul
shrl
push
add
int3
push
je
cmp
inc
push
jb
dec
insl
sub
sbb
sub
jno
das
addb
sarl
dec
aaa
lcall
jb
and
push
cmpsl
xchg
sbb
jo
add
xor
push
inc
js
or
xchg
push
xorb
push
mov
stos
shrb
test
sbb
ret
add
test
lods
test
adc
enter
mov
loopne
push
outsb
add
lods
and
clc
rcr
add
hlt
and
rorl
popa
ucomiss
popf
or
or
mov
mov
testl
xorl
arpl
xchg
les
js
pop
and
mov
movsl
data16
mov
mov
mov
je
fmuls
cmpsb
push
xchg
sarl
mov
inc
xchg
cmpsl
mov
fists
lods
inc
scas
xchg
push
cmp
xor
cltd
pop
arpl
push
push
sbb
xchg
movsb
sarl
mov
inc
dec
xchg
lea
in
ljmp
cmpsb
shl
fimuls
push
mov
mov
fs
and
in
incb
decl
test
mov
dec
mov
fists
clc
push
je
sub
psubw
pop
cmc
sub
lea
mov
add
push
sub
lds
add
sub
jo
popf
adc
add
fiaddl
loop
pop
mov
lds
adc
adc
or
mov
pop
adc
fistps
cmpsl
rcr
sbb
adc
mov
neg
sarl
dec
fisttpll
jne
inc
loope
sbb
pop
stos
sub
sbb
sbb
pop
and
dec
push
push
sti
arpl
fcoml
call
aaa
jbe
mov
inc
addb
mov
mov
cs
iret
xor
les
sbb
mov
add
adc
jmp
test
fnstcw
rolb
jle
push
es
cmp
cwtl
scas
outsl
shlb
adc
cld
mov
ss
mov
pop
mov
cwtl
push
adc
push
xor
jae
cmp
sub
hlt
fadd
scas
ss
pop
jnp
sbb
mov
xlat
dec
cmp
mov
dec
push
out
adc
movsb
stc
or
push
or
les
pop
adc
xor
sub
inc
push
lea
xor
inc
call
add
mov
push
mov
push
test
movsl
enter
pop
push
imul
cmp
fisttpll
nop
addb
repz
mov
xchg
xor
mov
dec
pop
lods
mov
push
imul
push
int3
shlb
push
add
sbb
push
cmp
xchg
pop
xor
pop
movsl
addb
daa
fldenv
lcall
int3
push
pop
push
test
mov
ficoml
push
mov
scas
pusha
nop
andl
or
add
loopne
imul
sbb
pop
add
pop
in
xor
xchg
stc
stos
lahf
enter
push
push
xchg
mov
jg
jo
jle
mov
sti
xchg
out
insl
xchg
cld
mov
mov
push
sbb
cmp
xchg
pop
lret
adcl
sub
sub
add
or
mov
push
sub
sbb
sub
jb
xchg
xchg
test
movsl
lock
mov
jg
dec
or
push
les
add
out
push
test
add
push
rcl
or
or
adcl
fcmovbe
push
test
and
dec
inc
sub
outsb
pop
jmp
inc
imul
cmc
push
add
cli
and
push
xor
sub
pusha
repz
push
imul
jo
push
xor
repnz
adc
cli
jo
xor
inc
sbbb
or
mov
mov
test
and
push
pop
enter
sbb
sub
mov
lcall
orb
rcrl
jle
mov
cmp
pop
jle
mov
and
iret
pop
aaa
add
and
mov
sub
or
in
mov
cli
shl
or
lock
pop
dec
mov
or
loop
or
es
mov
dec
xchg
popl
pop
push
xlat
jns
inc
sbb
jmp
inc
popa
imul
leave
and
sub
inc
test
adc
dec
outsl
cmp
jno
adc
push
add
add
cmp
push
sub
dec
lahf
adc
push
lret
int
imul
add
sub
fisubrl
test
push
dec
adc
mov
pusha
jle
pop
push
sbb
jno
or
cmp
popa
and
add
mov
sub
add
lahf
fsubrs
xchg
push
jno
dec
cmp
ret
adc
ret
inc
imul
xchg
sub
pusha
sub
clc
add
xchg
add
add
sub
push
mov
les
mov
inc
movl
mov
and
sub
shrl
test
inc
xchg
jb
or
push
mov
push
sub
subb
xor
sbb
shll
sub
ret
ret
mov
loope
xchg
test
lods
jg
sbb
sahf
dec
fstl
ljmp
int
rolb
mov
push
and
incl
adc
loop
or
inc
sbb
add
jmp
jecxz
les
aam
lea
xchg
cmp
popa
outsl
push
inc
aam
pop
stos
cmp
and
aam
jp
idivb
pop
test
ljmp
inc
push
stos
push
cmp
push
push
ljmp
popa
push
mov
push
jle
jb
mov
test
rcpps
int3
mov
sub
pop
cmp
pop
mov
cltd
out
and
mov
es
xchg
pop
sub
clc
jmp
test
and
adc
and
je
add
add
sub
fcmovnbe
ss
add
pop
mov
add
int
sahf
jmp
pop
outsb
xchg
ret
lods
xchg
les
mov
xor
fwait
bnd
sub
arpl
mov
mov
aaa
test
jbe
inc
imul
sbb
or
lea
jo
mov
lods
adc
cmp
test
inc
and
pop
push
sbb
push
xor
or
push
dec
jne
clc
mov
lret
xorl
repnz
mov
fistpl
adc
mov
movsl
push
sub
add
jmp
scas
push
add
xchg
mov
lea
and
push
xchg
sbb
xor
mov
sub
mov
adc
lahf
lahf
push
or
mov
lea
and
lea
and
sbb
mov
and
adc
push
mov
and
add
inc
pop
xchg
push
xor
or
and
mov
ss
dec
xor
aad
mov
push
push
sub
cmp
rolb
xchg
lea
mov
mov
movsl
mov
pop
and
jno
lods
mov
inc
sahf
enter
inc
sub
push
rcll
sub
imull
les
push
push
loop
les
jbe
push
mov
adc
xor
cli
fistps
adcb
pop
lahf
mov
add
hlt
addr16
inc
mov
mov
pushf
cmpl
shlb
xor
bound
xor
aaa
and
pop
outsb
mov
xor
push
popa
iret
pop
jmp
mov
or
test
inc
lret
pop
add
inc
jmp
ror
test
out
and
push
pop
sub
xchg
mov
cli
pop
add
xchg
sub
fcmove
mov
pop
lea
inc
loop
jle
das
mov
mov
mov
setl
ss
and
stos
pop
in
lret
inc
mov
filds
cmp
mov
subb
adc
xchg
cmp
imul
add
xchg
push
sbb
adc
inc
pop
pop
js
adc
mov
fcmovbe
push
lea
sub
add
ret
les
or
inc
sub
xor
mov
add
jo
fdivl
pop
sub
aam
in
movsl
push
lret
xchg
pop
aas
aam
lock
xchg
imul
sub
pop
mov
addr16
sub
out
push
sahf
add
adc
adc
mov
mov
mov
pop
jmp
pop
jge
in
outsl
scas
ss
ret
mov
cmp
andb
xchg
adc
dec
lcall
xchg
aaa
dec
aaa
push
clc
mov
fadd
lcall
pop
int3
or
rcrl
loopne
push
dec
rcrb
and
or
in
sub
pop
jge
add
sbb
cmp
cwtl
pop
loope
push
dec
les
lds
sarb
fistpl
adc
icebp
sbb
adc
adc
inc
or
cmp
aaa
pop
lret
in
sahf
sbb
xor
add
xchg
cli
movsl
or
jp
int
or
mov
sbb
subb
mov
mov
andb
add
sbb
or
jnp
stc
xlat
out
xchg
add
add
notb
inc
and
les
mov
bound
or
jno
icebp
xchg
or
jb
jecxz
mov
aad
roll
xor
fdivrl
or
ret
stos
mov
push
lret
mov
adc
mov
mov
bound
xchg
test
inc
inc
xor
mov
jecxz
rclb
std
jg
xchg
imulb
mov
dec
add
mov
inc
cmp
arpl
ds
sbb
sub
lods
lret
mov
movsl
push
push
int
xor
xchg
not
cmp
pop
cmc
inc
mov
call
test
mov
shlb
xor
dec
sbb
stos
mov
xor
add
jns
xchg
adc
push
xchg
push
and
sub
repnz
shll
filds
inc
test
xor
xor
sbb
adc
notb
add
push
sub
add
mov
push
stos
pop
push
and
jl
insl
in
sub
mov
push
push
and
push
lret
scas
ds
rolb
push
sub
inc
push
aaa
and
push
sub
inc
mov
cmpsl
lods
jl
fldl
xchg
dec
push
sbb
and
fisubrs
push
cld
adc
cmp
mov
adc
push
adc
movb
jl
pop
pop
pop
test
aad
cmp
cmp
and
lds
popa
repnz
movsl
and
adc
xor
clc
std
das
mov
pop
test
divl
rcrl
lea
nopl
sub
stos
es
push
imul
pop
mov
stos
std
pushf
lods
and
enter
cli
in
aad
test
or
xor
sub
cmp
dec
add
or
xor
ss
push
pop
loopne
and
adc
loop
add
and
add
inc
add
push
and
jb
dec
aad
lock
jne
push
test
push
xchg
mov
push
adcb
les
movsl
dec
in
inc
mov
stos
lods
inc
mov
lcall
rcl
cmp
jle
fcomps
sbb
and
push
adc
or
pop
mov
cltd
inc
push
push
movsl
push
notl
loopne
push
or
ficoml
sbb
cmp
xchg
into
cmp
mov
xor
pop
stos
rorl
into
pop
mov
mov
mov
lahf
fnstenv
in
pop
push
sub
add
addl
and
add
xor
lret
jnp
sub
cmc
call
pop
stc
enter
shll
das
adc
fsubs
jnp
in
xchg
sbbb
inc
sub
cmpsb
cmp
sbb
pop
sahf
loopne
popf
xor
cmp
push
bound
cmc
inc
ds
push
adc
sub
jp
out
out
push
jl
mov
mov
push
outsb
adc
icebp
clc
lods
aam
cltd
sub
imulb
xchg
and
sbb
aaa
ret
fildll
call
add
push
push
jb
sbb
push
adc
call
dec
dec
repz
push
je
mov
fdivrs
adc
dec
shrb
push
inc
inc
inc
xor
mov
jle
cli
add
mov
lods
push
shlb
mov
shlb
or
jmp
push
and
jo
adc
xor
hlt
mov
bnd
dec
cmp
mov
push
fwait
jmp
in
rclb
mov
leave
sub
popa
cmpb
fwait
adc
dec
lds
stc
das
xor
xorl
mov
aad
aad
pop
rorb
adc
pusha
negb
aaa
and
mov
sub
lea
push
call
and
sarb
add
fbstp
inc
push
daa
jo
dec
sub
cwtl
jle
pop
fcomps
pop
loopne
sub
dec
mov
mov
mov
pop
into
dec
rcll
push
jns
mov
mov
repz
push
cli
ja
jbe
mov
dec
push
jecxz
mov
and
sub
mov
fiaddl
jne
push
mov
inc
test
xchg
mov
mov
cli
jb
xchg
push
and
mov
in
push
adcb
add
andb
push
add
sbb
mov
rcrl
adc
fs
mov
aas
jecxz
aad
xlat
xor
push
imul
add
push
test
lds
scas
push
subb
stos
dec
sub
in
pop
jno
xchg
out
aad
pop
xchg
xchg
xchg
subl
ret
lahf
lea
sub
lcall
addl
mov
sub
lret
inc
loope
shrb
add
mov
inc
movsl
push
mov
lret
pop
imul
push
push
add
lods
mov
pop
sbbl
pop
lods
dec
scas
fdivrs
movsl
push
mov
mov
push
test
mov
mov
dec
cli
outsl
add
push
movsl
cmp
sbbl
mov
push
lock
ljmp
divb
stc
dec
int
adc
cmp
inc
jle
sbb
hlt
add
lahf
adc
mov
stos
out
out
fimull
sar
dec
or
jo
cmp
cmpsb
movsl
fmul
mov
and
sarl
pop
add
mov
cmp
xorb
dec
aam
xor
inc
push
test
in
or
xchg
mov
push
les
shr
sbb
bound
mov
shll
sub
inc
add
mov
add
lcall
jno
mov
push
pusha
pop
hlt
lea
movsl
push
aam
push
call
decb
add
xchg
arpl
loopne
es
inc
mov
shlb
les
add
push
mov
dec
inc
mov
push
sub
mov
push
mov
adc
dec
pop
std
js
add
mov
push
dec
mov
inc
daa
xor
or
lea
xor
adc
xor
push
jle
sbb
fadds
mov
add
mov
cmp
sub
into
jno
pusha
jle
test
mov
cmp
scas
rcrl
mov
divb
and
xchg
cmp
or
rolb
lock
sub
test
adc
jle
movsl
push
aad
mov
fs
pop
lods
dec
mov
jmp
mov
adcl
inc
in
fbld
jl
and
push
mov
or
movsl
add
mov
sub
add
out
in
imul
or
mov
sub
add
movsl
pop
lret
loopne
push
or
leave
test
dec
dec
cmp
adc
jo
pop
loopne
mov
stc
sbb
sbb
inc
adc
pop
mov
add
jno
jae
cmp
pop
push
or
fwait
adc
fbstp
test
es
add
popa
leave
push
mov
cli
or
subb
jnp
subl
mov
inc
or
and
add
out
lahf
mov
movsl
push
lahf
lcall
cmc
push
pop
mov
add
insb
sub
mov
pop
push
pop
dec
or
lahf
cvtdq2ps
mov
xor
xor
and
push
or
cmp
sbb
xchg
in
insl
dec
lods
stos
insl
and
mov
jle
sub
das
jl
pop
clc
sub
sub
xchg
subl
add
mov
inc
lds
dec
dec
ja
imull
cli
into
cmp
xchg
adc
pop
loopne
pop
or
adc
inc
push
pop
mov
sub
lret
pop
push
sbb
cmp
xchg
mov
inc
popf
lods
sub
mov
mov
xchg
stc
cmp
icebp
xchg
adcl
xor
xchg
ret
insb
add
or
push
imul
aas
pop
loope
inc
inc
mov
adc
mov
adcl
cmp
ficompl
je
popa
sbb
adc
dec
in
mov
and
movb
xchg
inc
mov
daa
sub
jmp
mov
mov
and
mov
pop
ret
or
mov
sub
inc
into
xchg
stos
insl
add
mov
sti
pusha
mov
cli
sub
inc
test
jb
push
aam
adc
or
or
pop
movsb
mov
xor
jo
les
lods
jl
ljmp
add
add
push
sub
cmpsl
cmp
add
out
xchg
pop
test
xor
cmp
ficompl
pop
push
das
cmp
callw
add
dec
add
sub
or
mov
push
push
sub
or
inc
pop
mov
add
sub
mov
add
rclb
sti
and
xchg
sbb
or
les
xchg
pop
and
bound
jno
int3
sarb
inc
lods
fistpl
mov
mov
clc
filds
jp
and
mov
mov
adc
or
mov
sub
add
pop
push
adc
cld
add
adc
xor
mov
pop
sarb
cwtl
xlat
dec
jl
std
sbb
mov
add
xlat
mov
dec
shll
es
sbb
out
sub
mov
add
push
cli
pop
mov
cltd
pop
test
out
adc
inc
bound
mov
stc
rolb
jmp
mov
and
into
insl
gs
fmull
sarb
xlat
rolb
push
mov
mov
add
dec
add
xchg
inc
add
xor
push
adc
add
jne
sbb
addl
cltd
add
lds
mov
mov
add
pop
push
dec
cli
or
push
sbb
add
loop
push
xor
addr16
sarb
test
test
and
movsl
rcrb
or
inc
fs
aas
in
cld
lds
mov
add
js
inc
pop
fsubl
ljmp
lods
sbb
dec
add
inc
outsl
pop
adcb
popa
loopne
pusha
jecxz
add
sbb
and
dec
shlb
xchg
inc
xchg
mov
clc
pop
andnps
push
xor
xchg
jmp
dec
inc
enter
adc
xor
add
adcb
data16
mov
jo
inc
or
jg
roll
and
addb
les
ss
loop
test
mov
xchg
and
ds
dec
filds
pop
call
push
insb
pop
or
mov
pop
inc
sbb
shr
imul
jo
sbb
shlb
loope
out
sbb
iret
mov
int3
mov
gs
jmp
aam
push
inc
inc
sub
fwait
push
std
outsb
and
addb
mov
push
pop
js
adc
xor
add
push
or
jl,pt
shrb
jmp
inc
xor
pop
imul
cltd
mov
dec
add
push
add
or
or
add
mov
vucomiss
mov
jb
lods
push
pop
xor
popa
ret
jmp
and
add
pusha
adc
inc
fcmovbe
mov
fdivrp
dec
pushl
les
pop
insl
push
mov
fmuls
inc
mov
and
push
es
push
mov
dec
in
cwtl
fiaddl
dec
lea
sbb
jb
push
mov
mov
mull
test
test
pop
add
xor
jb
pop
jno
add
push
mov
mov
and
push
push
je
add
rolb
add
cmp
sub
push
cli
sub
xchg
jb
mov
and
adc
adc
lock
scas
push
mov
fstpt
mov
pop
xorl
addb
jmp
cmp
rcrl
test
pop
sub
icebp
cmp
pop
or
pop
mov
pop
pop
or
xor
and
mov
mov
push
lods
push
ss
pop
movsl
mov
jbe
sub
divl
loopne
inc
imul
mov
push
loopne
push
das
ret
push
loope
xchg
mov
lea
push
push
lcall
push
inc
repnz
lea
jg
jg
loop
adcb
add
cmp
xor
sbb
mov
cmpsl
dec
xchg
out
int3
xor
je
dec
push
add
add
clc
push
xor
jp
mov
cld
or
mov
xchg
into
inc
addb
decb
lock
add
jno
addl
scas
in
and
xor
pop
loope
out
loopne
loope
pusha
testb
dec
in
mov
inc
pop
jb
loope
lods
add
dec
mov
xchg
arpl
test
mov
jno
ljmp
es
inc
cmp
add
ret
cmp
arpl
cmc
fmuls
mov
and
pop
mov
mov
icebp
int3
sahf
arpl
sbb
fwait
mov
out
icebp
cmp
mov
push
cmpb
xor
jb
push
insb
js
cmc
cli
rolb
add
inc
adc
dec
fwait
aaa
test
mov
stos
mov
pop
xchg
ficomps
addb
xchg
mov
and
or
xor
sub
lea
push
or
pop
add
xchg
adc
and
movsl
sub
add
xorb
dec
rorl
lahf
adc
sbb
in
pop
pop
mov
popa
test
inc
call
xor
or
sbb
pop
mov
push
aam
pop
add
jne
pop
imul
das
ret
iret
rcl
mov
fmuls
mov
mov
lea
and
das
ret
xor
mov
addb
push
stos
push
cltd
fbstp
jb
adc
dec
adc
pop
and
add
test
and
arpl
jb
pop
add
cmp
aad
adc
les
mov
push
pop
adc
cmpsb
cmp
pop
das
fimull
dec
stc
inc
push
jg
inc
xor
xor
lock
lcall
adcb
sti
xorb
lods
push
pop
es
ret
orl
sub
and
pop
xchg
and
mov
mov
int3
push
lahf
and
das
daa
push
and
fstpl
xor
aad
jns
mov
push
xchg
daa
out
push
imul
dec
inc
mov
aad
or
pop
push
mov
in
xor
mov
and
andb
inc
jmp
notl
rorl
loop
sbb
mov
shll
in
pop
pop
inc
imul
push
mov
insb
push
pop
subb
je
add
lods
jno
cmp
lea
pop
sti
jb
cmp
andb
push
sub
mov
out
dec
icebp
push
mov
pop
and
insb
test
pop
cmp
push
push
stos
push
movsb
out
mov
push
jecxz
jb
cmp
and
pusha
pop
jg
outsl
test
movsl
stos
mov
ds
mov
inc
insl
mov
sub
pop
stos
mov
jnp
aas
adc
lea
and
mov
cmp
cld
aaa
test
ljmp
out
mov
dec
in
addl
rcl
addr16
or
repz
ss
scas
adc
fdivs
or
mov
in
lds
push
popl
dec
rcrl
push
add
and
aam
xor
cmp
rcrb
cmp
jge
pop
test
pop
inc
out
add
cs
sbb
mov
out
mov
loop
add
add
inc
adc
fstl
inc
pusha
in
std
in
lret
lods
ret
adc
jbe
xor
es
push
adc
cli
cs
or
pop
xchg
sub
sub
cmp
or
stos
in
xor
sub
jmp
jb
scas
inc
pop
aam
jge
lock
je
fbstp
or
inc
add
in
and
cmp
in
decl
jmp
and
add
sbb
leave
sti
or
and
sbb
inc
cmp
or
jge
cmp
lods
mov
in
in
mov
int3
push
and
bound
and
movsb
jo
mov
arpl
jo
mov
out
inc
std
mov
arpl
inc
dec
add
push
add
out
lds
push
in
sub
mov
loopne
mov
mov
lods
adc
jge
mov
enter
loopne
std
mov
push
clc
push
jb
aad
andb
aad
popa
fdivrs
mov
add
sbb
lock
push
outsl
jns
pop
addl
mov
adc
fisubl
xor
xor
sbb
scas
fwait
mov
sarb
or
mov
addl
add
in
decl
shll
lret
mov
jg
dec
and
dec
jmp
insl
xlat
mov
fldl
test
adc
mov
add
lea
push
mov
jp
push
push
pusha
pop
dec
cmp
adc
adcb
into
shrl
ficomps
rcrl
mov
xor
aad
mov
xchg
bound
sub
inc
add
ficoml
push
adc
movsl
add
rorl
push
insl
popf
rolb
jno
jae
jmp
cmp
xor
sti
sub
in
push
inc
xchg
cmp
jnp
mov
xchg
mov
sbb
imul
inc
mov
bound
rolb
aaa
pop
xchg
sub
mov
aaa
cmpsl
lea
push
or
and
adc
push
lret
sbb
mull
rcr
add
xor
imul
xchg
mov
jno
mov
xor
es
shrb
pusha
sub
jae
xchg
inc
inc
imul
pop
or
dec
xor
xor
sbb
pop
add
push
and
sub
adc
inc
rorb
xor
enter
call
pop
cmpsb
into
fadds
lock
push
sbb
dec
ljmp
and
mov
pop
or
lock
mov
in
rsm
aaa
add
roll
data16
addb
mov
shl
popf
rorb
add
pop
dec
inc
mov
loop
fwait
jne
dec
and
sub
push
adc
addr16
jo
jp
iret
xor
rorl
pop
add
add
jle
jne
sbb
sub
shll
xor
push
mov
xor
xor
mov
add
push
lods
arpl
aad
rolb
and
test
movsb
add
push
jae
xor
cmp
xchg
lahf
lret
xor
or
inc
movsl
fs
fadds
mov
xor
fisubs
movsb
stos
iret
lods
adc
ret
dec
aad
mov
and
jo
mov
dec
lahf
xor
rcrl
lea
out
loopne
add
adc
movsl
enter
ret
icebp
mov
aaa
and
add
xchg
push
adc
out
or
lahf
and
or
push
js
or
push
push
cmp
test
outsl
sbb
in
adc
popa
dec
scas
sub
mov
mov
push
and
cmp
inc
dec
pop
rcl
stos
cmp
add
lea
inc
sub
aam
xchg
pop
outsl
mov
sbb
pop
imul
imul
mov
pop
lea
mov
or
icebp
roll
rolb
mov
fcomps
inc
fwait
stos
and
sub
int
and
adc
dec
jmp
aam
insb
xchg
adc
cmp
mov
xchg
subb
jp
sarb
pop
fisttpll
or
ss
or
cmp
push
or
mov
sbb
subb
mov
jns
mov
inc
xor
nop
movsb
add
dec
andb
fwait
sbb
or
cmpl
loop
xor
fisubs
add
sbbb
addb
adc
adc
xor
xchg
push
mov
mov
mov
cmpb
imul
not
adc
lret
adc
cmp
addl
outsb
subl
fisubl
imul
movsb
push
loopne
xchg
xchg
adc
inc
adc
push
movsl
test
cli
mov
add
pop
mov
outsl
loop
loop
dec
rcpps
add
aad
xor
int3
xor
mov
stos
lds
add
cwtl
ljmp
adc
imul
mov
and
fs
cmpl
roll
add
jno
inc
in
mov
push
inc
stos
stos
mov
neg
mov
jg
jno
adc
shlb
shrl
sahf
in
nop
addl
orl
push
repz
push
sub
pop
inc
jl
or
inc
pop
test
lret
imul
sbb
lods
and
imul
fldt
mov
fwait
add
or
test
xor
push
mov
cmpb
sbbb
imul
jbe
adc
popf
cmp
add
mov
xor
jns
xchg
das
jb
or
test
lods
xchg
adc
add
aam
jbe
sub
inc
sbb
pop
sub
rcrb
jb
sbb
pop
outsb
sarb
gs
aaa
pop
clc
adc
pop
dec
mov
mov
scas
push
mov
fwait
inc
push
imul
pop
lods
mov
mov
cmp
int
rolb
cmp
aaa
inc
xchg
adcb
push
test
inc
mov
push
mov
adc
mov
sbb
dec
andl
lds
xchg
out
shlb
push
stc
or
xor
pop
arpl
aam
dec
cwtl
add
push
and
insl
push
insl
jle
jp
sahf
lods
add
jne
push
rclb
xchg
imul
fisubl
inc
stos
mov
mov
mov
cmp
dec
mov
sub
and
push
inc
mov
test
and
fiaddl
mov
push
loope
mov
fcoml
loop
shll
and
jl
insb
loope
push
xor
movsl
pop
inc
sub
imulb
pop
add
jle
add
sub
aam
mov
cmp
movsl
sub
sbb
push
cmp
sbb
jp
sub
cli
outsl
xchg
pop
sub
sub
int
pop
pop
rol
in
lahf
mov
jno
push
ret
mov
les
lock
mov
push
mov
sbb
sti
sub
and
jno
and
rcr
mull
xchg
mov
jnp
push
decl
hlt
and
push
sbb
adc
fisubrl
and
lahf
adcb
test
aam
jb
or
adc
xchg
enter
les
sti
jb
fildll
push
aam
or
add
mov
fs
push
daa
inc
xor
sbb
jo
loopne
stos
dec
mov
mov
pusha
sub
cmpsl
dec
gs
sbb
andps
aam
aam
in
stos
pop
dec
sbb
sbb
jb
out
push
or
add
inc
mov
and
mov
xchg
pushf
sbbb
fs
adc
dec
xchg
enter
or
repnz
xchg
adc
fcomps
mov
les
cmp
std
ret
inc
xor
in
flds
adc
jne
mov
loope
or
pop
jg
shlb
clc
mov
seto
and
add
rorb
sub
and
into
int
int3
and
int3
and
dec
lods
jne
mov
lds
and
adc
mov
jmp
and
add
or
add
push
mov
test
add
mov
add
dec
clc
and
cmp
popw
xor
push
dec
movsl
xchg
mov
mov
add
sbb
lods
sub
rolb
or
adc
mov
fmull
shlb
clc
popa
add
pop
pop
loope
mov
shl
inc
dec
inc
aam
xor
mov
mul
jg
xor
lret
test
mov
add
pop
pop
clc
insl
fsubrl
adc
imul
adc
movsl
fsubrl
and
or
xor
mov
mov
jns
mov
mov
lcall
pop
ret
pop
das
adc
sub
aam
push
add
add
xor
inc
and
sub
cmpsl
je
add
shll
mov
mov
xchg
or
lahf
dec
push
imul
xor
outsb
mov
sub
out
sub
add
aam
divl
jecxz
jb
mov
mov
push
testl
ret
sub
push
cmp
push
push
lahf
push
adcl
movsl
sub
imull
idivl
inc
push
xchg
notl
mov
inc
push
sub
mov
push
jno
test
insl
mov
mov
pop
mov
jb
outsl
les
pop
test
adcl
pushf
sbb
push
js
push
mov
cli
ret
mov
sub
stos
adc
rolb
push
lea
mov
xchg
out
cmp
mov
add
cmpsl
add
push
dec
push
xor
incl
add
sbb
movsb
aas
and
adc
push
popf
mov
cli
loope
fcmovbe
mov
cmp
or
pop
mov
push
and
jb
and
mov
mov
inc
mov
xor
or
or
dec
adcb
jmp
or
add
push
sub
pop
and
lods
mov
or
cltd
fwait
ljmp
adc
out
lea
push
rcll
ret
andb
loopne
add
pop
push
sub
jno
fldcw
dec
push
cmp
xor
rol
nop
imul
dec
insl
test
les
lret
aaa
outsl
fwait
sub
lcall
lods
push
sar
inc
repz
hlt
test
mov
sahf
enter
orl
cmp
add
out
mov
in
or
das
stos
push
addl
and
sub
mov
add
dec
push
pop
test
jno
or
xor
jbe
imul
sub
push
add
adcb
test
cld
mov
xor
dec
xchg
les
adc
and
pop
mov
push
stos
idivb
dec
or
aas
pop
pop
adc
adc
cmp
add
push
jbe
xor
inc
jns
out
or
aam
add
push
lea
lods
push
jns
sub
test
pop
mov
jns
lods
adc
dec
pop
or
pop
cs
sbb
bound
adc
testl
sub
mov
xchg
or
mov
je
push
and
sub
cmpb
mov
dec
inc
sbb
jno
out
cs
adc
dec
cmp
ret
xchg
add
fadds
subb
test
or
or
push
repnz
das
sub
mov
idiv
cmp
test
data16
rorb
sub
or
orb
insl
push
insl
mov
push
fisubl
and
test
loopne
neg
or
mov
in
aam
pop
push
add
insl
leave
push
arpl
clc
and
xor
outsl
add
push
pop
ret
cmp
mov
dec
adc
jae
rorl
mov
dec
sbb
fcmovu
pop
xchg
js
sub
cli
mov
aam
testl
pop
add
sbb
pop
cwtl
inc
out
adc
mov
push
xchg
jo
push
cmp
dec
add
inc
mov
stos
mov
cmp
idivb
or
sub
imul
test
dec
stos
mov
pop
xor
xchg
inc
stos
push
xchg
push
repnz
jb
mov
xchg
out
mov
rclb
sbb
and
bound
aad
lods
push
repz
xchg
pop
ret
xchg
outsl
or
mov
sbb
push
mov
push
aam
lea
inc
test
push
mov
lds
xchg
sub
iret
das
cmp
pop
inc
pushf
sub
adc
jb
add
inc
dec
adc
xchg
repnz
xor
push
adc
aam
sub
push
jb
push
or
mov
xor
pop
imul
push
mov
push
mov
push
rorl
sub
imul
aas
lods
adc
dec
and
lea
jo
sbb
dec
xchg
jb
adc
add
loopne
push
mov
insl
cs
cld
add
into
not
mov
push
je
inc
cld
push
adc
or
add
js,pn
inc
add
mov
sub
in
daa
push
ret
roll
cmp
ret
insb
push
test
xchg
comiss
insl
sub
add
and
aam
add
adc
xor
sub
cmp
pusha
cmp
push
inc
scas
testl
adc
pop
jb
inc
push
fisubl
imul
cmpsl
gs
and
lods
add
outsl
inc
stos
inc
or
in
fcomps
push
inc
push
jnp
sub
loope
jle
push
mov
xchg
mov
xchg
das
outsl
ljmp
or
or
pop
xchg
lods
pop
sub
pusha
mov
dec
outsl
call
mov
mov
or
or
add
insl
mov
cli
mov
push
push
pop
clc
and
inc
xorl
jle
rcrb
or
adc
in
push
add
pop
cmpsl
jle
aad
fidivl
pop
cmp
sub
push
stos
shlb
mov
push
jge
scas
test
sub
or
sub
js
xchg
pop
jo
or
lock
ficomps
mov
sbb
lahf
lods
or
push
xor
enter
movsl
sub
push
addb
push
push
scas
stos
inc
and
push
and
mov
test
stos
push
sub
sub
add
loope
les
subl
xor
cmp
push
push
lods
mov
or
insl
cmpsb
lret
push
iret
jle
push
mov
xchg
pop
fdivs
mov
and
pop
adc
or
lcall
sbbb
subb
addb
xchg
push
popf
and
fcoms
sub
rep
xchg
dec
mov
and
xlat
rorb
inc
mov
rolb
xchg
mov
pop
or
or
mov
dec
xchg
sub
dec
xor
sub
xor
scas
pop
adc
mov
mov
sub
jnp
sarb
jo
xchg
push
clc
adc
push
adc
lds
pop
push
pop
lcall
imul
cmp
sbb
sbb
mov
cs
pusha
cmpsb
sahf
or
push
xor
or
or
xchg
andb
sbb
mov
enter
mov
inc
lea
dec
rolb
outsb
mov
cmp
lcall
lods
cltd
push
imul
jb
sbb
adc
and
cld
mov
lahf
add
pop
inc
pushf
lds
mov
inc
xor
push
jae
stos
movl
icebp
sub
ret
fdiv
push
mov
popf
sbb
push
jb
test
inc
sub
fwait
test
lcall
push
adc
and
insl
or
daa
adcb
push
inc
sbbb
jmp
add
pop
mov
sub
xor
cmp
mov
jbe
les
xor
enter
mov
push
out
and
fisubrl
push
push
shrl
fistl
loopne
sub
movsb
inc
lods
add
fwait
or
mov
xorb
cli
incb
fcom
jns
sbb
repz
or
arpl
and
outsl
xchg
clc
mov
pop
or
add
or
fcompl
lea
inc
sbb
jg
xchg
lahf
adc
xor
dec
and
inc
inc
sub
testb
bound
add
and
in
cwtl
and
movb
rcrl
dec
push
insl
pop
sub
cmp
loope
add
add
push
mov
repz
fsubl
mov
in
call
fsts
pop
dec
lock
sub
push
nop
aas
aaa
unpckhps
inc
cmp
add
adc
mov
adc
jne
sbb
push
mov
xor
dec
mov
inc
shl
imul
imul
in
sti
inc
jg
inc
sbb
add
push
mov
hlt
adc
mov
mov
push
push
sub
inc
xor
mov
test
sti
int
imul
rolb
cs
lock
xchg
and
add
jg
into
popa
dec
outsb
xchg
mov
mov
pop
lods
xor
mov
push
fstl
inc
subb
loop
fists
fsubrp
cmpsb
sbb
jmp
add
or
pop
pop
stc
dec
outsl
loop
fistps
dec
dec
mov
push
std
jmp
jecxz
push
or
lock
push
mov
inc
ret
imul
xchg
adc
jns
xchg
inc
or
sbb
adc
jno
adc
mov
inc
sub
xchg
icebp
xor
aad
pop
dec
mov
mov
jb
cmpsb
pop
mov
popl
mov
shrl
sbb
int
sub
test
or
sub
adc
stos
add
mov
pop
lock
lret
and
cmp
inc
test
mov
push
and
mov
cmp
jb
push
stos
pop
xchg
clc
xchg
adc
and
insl
cmp
pop
jg
mov
aad
inc
out
jb
mov
inc
stos
push
push
imul
cmc
push
xchg
repnz
push
xorl
push
test
jb
lcall
and
push
mov
xchg
subb
ja
lret
mov
dec
xor
lods
shll
and
or
nop
cmp
mov
jle
loop
xorl
add
lods
inc
mov
add
xor
adc
pop
jmp
or
je
jae
inc
jg
sbb
inc
xor
inc
push
mov
cld
in
inc
jmp
orb
inc
std
mov
or
push
out
cmp
sub
jmp
mov
or
popf
in
rorl
int
das
cli
jb
lods
inc
mov
cmp
in
lods
push
jo
out
sbb
mov
add
data16
popa
sub
or
cmp
push
inc
push
pop
cli
mov
test
push
pop
pop
hlt
in
push
push
lea
mov
push
mov
ss
filds
push
jne
lock
outsl
or
lods
push
or
shlb
sti
inc
adc
lcall
dec
inc
cli
or
cmp
mov
and
lea
sbb
test
or
sub
ljmp
sbb
outsl
inc
inc
imul
stos
or
pop
shl
xor
sbb
pop
dec
add
adcb
push
pop
cltd
cmp
push
mov
cmp
push
pop
and
stos
pop
inc
pop
es
sub
cli
das
int
push
sub
dec
sub
dec
mov
sbb
cmc
cmp
push
fimull
sub
inc
sti
ljmp
fstpt
dec
aam
insl
ret
ret
movsl
xchg
insl
ret
movaps
push
inc
mov
mov
mov
sub
mov
call
lret
insl
lods
pop
movb
sub
or
add
jb
pop
dec
adc
add
and
imul
mov
inc
jmp
enter
pop
xlat
pop
add
or
roll
or
inc
xchg
rcl
scas
subb
inc
stc
mov
sub
or
inc
cmp
movsl
push
mov
sbb
xchg
cmp
dec
push
mov
inc
sub
insl
incl
push
sub
and
push
stos
or
adc
adc
rorb
clc
mov
test
pop
popf
xor
pop
add
sar
or
sbb
and
inc
scas
sbb
jmp
mov
or
push
or
inc
and
add
dec
scas
int
popa
rcll
jp
cwtl
test
adc
mov
lcall
sarb
arpl
loop
mov
std
xchg
int3
cmp
lds
test
mov
and
xchg
or
fcompl
scas
pop
or
lea
xchg
pusha
mov
frstor
repz
loopne
xor
lahf
xor
scas
mov
test
in
mov
add
xchg
lock
adc
shlb
add
or
adc
xor
and
clc
imull
xor
adc
das
roll
adc
cmpsl
push
jle
and
cwtl
test
adcb
or
test
or
dec
push
stos
inc
hlt
out
jno
adc
ret
push
mov
lea
jmp
mov
sarl
adc
insb
mov
insl
jae
sbb
push
pop
fdivs
push
popf
scas
jno
test
cltd
jmp
xchg
mov
pushw
xchg
fiaddl
cmpsl
jno
movsl
jge
fwait
mov
jno
test
sub
inc
rolw
xchg
outsl
mov
stos
sub
and
adc
shll
xor
mov
test
lcall
aam
cmpsl
sub
xor
sub
add
jecxz
je
push
jbe
sub
rcl
sbb
pop
negl
dec
push
cmp
stos
orb
and
xchg
leave
into
push
mov
xchg
xor
xor
and
xchg
mov
xor
lahf
mov
dec
push
or
das
sub
push
lea
pop
scas
xchg
mov
sub
shlb
sbb
xor
lret
addb
push
cmp
ret
sbb
add
adc
inc
xchg
data16
push
dec
push
xor
xor
xor
shll
cmc
sub
and
loope
gs
fidivs
mov
pop
push
lods
xor
push
push
mov
aam
cs
sub
push
hlt
shrb
adc
sub
dec
add
inc
mov
sti
mov
push
xor
add
loopne
and
call
inc
cmpsb
and
or
mov
sub
out
inc
sub
sub
sti
out
and
inc
repnz
and
arpl
xchg
xor
mov
jb
cmp
test
and
mov
bound
push
pop
test
jle
mov
or
lcall
mov
ja
jl
rorl
push
iret
pop
ss
pop
or
mov
pusha
mov
ret
mov
add
scas
popf
enter
push
sub
pop
pop
xchg
push
shrl
sub
pop
shlb
and
adcl
mov
data16
test
push
sub
jle
sub
push
lcall
push
push
push
push
sbb
shll
xor
out
fs
lret
cmp
lds
fimull
sub
lods
stos
push
leave
inc
outsl
popf
push
sbb
cwtl
mov
adc
cmp
lea
sbbl
ret
and
lea
inc
mov
out
mov
shrb
shll
jb
cmc
nop
cmp
push
dec
mov
sahf
fmull
daa
addb
movsl
enter
or
cwtl
add
inc
insl
xchg
push
xchg
dec
movsl
shll
sti
xchg
inc
imul
cmpsl
mov
js
repnz
mov
jecxz
mul
xchg
adcl
add
daa
fiaddl
movsl
mov
das
lahf
mov
cs
add
xchg
lock
inc
mov
mov
jae
xor
adc
mov
xor
sub
mov
cmp
add
pop
ret
fsubr
dec
push
repz
popa
jno
xorl
cmp
inc
cli
pop
jae
inc
mov
add
inc
lods
dec
xchg
dec
lods
cmp
stos
aam
xchg
enter
inc
test
inc
pop
push
or
add
and
add
mov
jo
adc
ja
shrb
cmp
test
jge
push
mov
rcr
inc
push
movsb
rol
outsb
aam
test
lods
mov
shlb
shlb
jb
mov
or
jg
out
inc
das
lcall
out
dec
sbbb
pop
int3
dec
jo
xchg
jbe
add
in
hlt
sbb
mov
lock
and
frstor
or
jg
jl
into
inc
aam
popa
pop
aam
mov
cmpsb
ss
les
add
inc
push
jmp
rclb
push
addr16
cmpl
add
or
or
adc
dec
int
hlt
xchg
mov
push
inc
int
or
stos
xorb
mov
das
dec
ret
ss
push
and
add
fnsetpm(287
movsb
push
into
mov
sub
notl
or
mov
fstp
das
jb
je
inc
mov
sbb
push
sub
add
bound
xchg
cmpsl
mov
lods
mov
xor
clc
xchg
pop
add
sbb
outsl
sub
rorl
ret
cmpsb
inc
adc
sub
scas
xchg
addl
rclb
rol
test
pop
mov
inc
rorb
sbb
push
add
xchg
add
fidivrs
cmp
inc
insb
pop
outsl
lea
jb
inc
mov
and
add
mov
movsl
and
mov
stos
es
inc
sub
jmp
jo
xchg
xchg
add
cmp
cmp
lea
xor
pop
movb
and
pop
pop
xlat
and
imul
insl
fistpl
sbb
xchg
ret
add
xor
xchg
push
or
mov
or
inc
sub
inc
sub
mov
loope
cmp
inc
in
lds
xor
or
jle
adcb
jae
mov
and
aam
sbb
ljmpw
and
jg
xor
adc
sub
mov
jno
push
sub
sub
ds
pop
loopne
adc
sti
jne
pop
cmp
mov
jge
rcrb
push
test
sub
push
mov
mov
lea
sub
or
outsl
cmp
es
imul
mov
das
lea
adc
sub
push
pop
mov
sub
andl
add
daa
inc
dec
add
stos
aas
xchg
mov
jno
mov
push
pop
sub
ficoml
ret
pop
rclb
mov
ds
mov
mov
jl
mov
shlb
inc
lods
int3
popa
lods
inc
aam
pop
or
add
xor
clc
jmp
xor
cmp
mov
mov
or
sub
stos
inc
push
and
sub
adc
jl,pt
stc
mov
sub
push
adc
movl
xor
jmp
jno
shrb
rcrl
adc
mov
js
idivl
repnz
fsubrp
jg
adc
adc
orl
loop
push
stos
jmp
das
add
push
jbe
adc
mov
ljmp
jmp
imul
mov
pop
pop
addl
lret
push
push
stos
inc
jae
jb
fadds
add
push
lahf
or
push
fwait
fistl
bound
cmp
add
xchg
addr16
das
sbb
pop
push
xor
cltd
push
sbb
cltd
ret
cmp
movsl
mov
push
push
mov
movsb
fcoms
pop
aad
jmp
mov
mov
rclb
add
lock
push
rcrl
add
movsl
sub
pop
mov
mov
dec
pop
icebp
add
rclb
mov
roll
call
dec
add
mov
mov
push
push
pushf
jecxz
push
sub
xchg
outsl
jno
leave
ficompl
inc
lods
movsl
imul
pop
test
push
sbb
mov
sbb
and
pop
push
jo
add
add
lahf
sub
inc
sarb
push
rcll
push
enter
mov
sub
push
or
and
bound
test
adc
sub
cld
or
adc
rcr
cwtl
lods
or
les
mov
add
fucomp
cld
push
aaa
rcll
sub
fdivrs
sub
mov
inc
sbb
cwtl
adc
jg
dec
xor
out
das
dec
subl
or
loop
and
xchg
ja
dec
dec
mov
dec
inc
popa
arpl
cmp
cmp
jno
sbb
cwtl
adcb
inc
or
fisubrs
adc
mov
jecxz
mov
or
sbbb
ja
jl
jecxz
cwtl
sub
loop
popa
inc
xchg
or
repz
add
and
adc
sbb
mov
adc
inc
imul
sbb
dec
sub
dec
push
outsl
mov
fdiv
shlb
shll
ja
mov
xlat
add
not
inc
and
adc
hlt
dec
cmp
inc
cmp
dec
scas
mov
mov
or
test
push
add
mov
testb
das
pusha
push
mov
add
sbb
pop
dec
ja
push
add
sub
mov
or
cmp
add
inc
ret
loope
les
mov
jne
stos
jb
neg
lods
inc
mov
push
xor
sbb
push
lea
adc
iret
loopne
push
and
mov
adc
jp
push
adcl
rcrb
jnp
and
sub
cmp
sub
ret
scas
addb
add
inc
push
ss
hlt
push
push
or
leave
xorb
pop
int3
cmp
adc
cmpsb
push
jo
or
add
std
sbb
in
jmp
inc
or
cmp
push
or
cltd
add
movsl
pop
mov
pop
imul
and
or
xchg
sub
xchg
andb
daa
dec
add
js
jecxz
test
adc
mov
std
int3
and
cmp
mov
insb
hlt
shll
lods
jo
sub
adc
notl
push
inc
mov
sub
jne
shrb
sub
popf
ret
stos
mov
testl
stos
mov
sub
mull
inc
pop
imul
clc
mov
sub
cmp
or
pop
push
push
pop
push
pop
add
pop
and
sbb
out
out
shlb
pop
inc
mov
sub
and
mov
pusha
jge
mov
xchg
call
adc
inc
xchg
roll
sbb
cmp
aam
sbb
add
mov
cltd
sub
fistpll
jb
or
fisubl
cmp
pop
in
cmp
xchg
pusha
js
xor
cmp
roll
data16
sub
xor
push
fmul
adc
sbbb
add
pop
cmp
dec
and
xchg
push
xchg
sbbl
cmp
push
shll
adc
je
adc
mov
cmp
pop
mov
inc
insl
loope
mov
jno
filds
ss
jnp
pushf
movb
add
push
jmp
add
xchg
pop
mov
push
adc
add
hlt
es
mov
jmp
aaa
mov
inc
add
push
jge
cmp
outsl
mov
pop
int
push
cmp
adc
jbe
mov
dec
inc
push
out
add
jbe
sar
and
sbb
pop
into
jmp
or
xor
fnstsw
mov
leave
mov
jg
sti
sbb
scas
cmpsl
add
enter
jl
cmp
xchg
and
dec
dec
sub
rcr
inc
jns
jno
push
jno
fwait
jnp
inc
les
add
push
mov
cwtl
ljmp
pop
add
dec
inc
dec
push
mov
testb
or
sbbb
adc
jmp
push
mov
pop
call
jmp
mov
dec
insl
mov
or
dec
xchg
movsb
call
ljmp
mov
or
xor
add
psllw
jge
imul
mov
adcl
adc
add
insl
sub
pop
cmpl
pop
inc
cli
lea
xor
adc
cmpb
pop
stos
pop
sub
xor
mov
outsl
cmp
push
mulb
xchg
test
icebp
add
inc
ret
ret
in
or
inc
sub
cs
rolb
nop
ret
negl
push
sub
test
adc
push
add
inc
pusha
arpl
lret
mov
mov
push
cmp
mov
test
adc
ret
xor
push
mov
pop
fsubp
push
mov
adc
adc
add
and
push
mov
nop
pop
mov
lea
xor
inc
test
push
lods
inc
pop
or
jmp
adc
xorl
jb
cli
roll
add
aaa
push
push
shrb
cmp
pop
fistpl
std
clc
cmp
das
add
push
adc
sub
mov
inc
test
and
jle
dec
loop
xchg
xchg
sti
je
data16
mov
out
clc
shl
lods
cmp
push
fwait
push
pop
leave
shlb
and
cmp
push
or
jno
mov
mov
push
ret
leave
xchg
sub
imul
pop
lods
rorl
andb
push
aaa
inc
mov
mov
sub
xor
movsl
adc
je
in
push
nop
mov
aam
test
inc
jg
pop
lods
xchg
cmc
sub
adc
or
dec
and
push
adc
and
adc
mov
pop
add
sub
lahf
jmp
cmp
jae
xorb
lods
add
dec
push
scas
pop
push
aad
adc
ret
or
fmuls
and
dec
sbb
scas
lock
jne
xchg
mov
cmp
dec
mov
sub
enter
int
andl
jns
or
fisubl
and
xchg
pusha
into
dec
adc
stos
ret
test
rcl
or
jno
inc
add
push
imul
int3
aam
adc
fcoms
fildl
xchg
mov
push
xchg
ss
fcomps
inc
and
mov
xchg
nop
jb
clc
lea
mov
cmp
push
xchg
in
cmp
sub
aaa
mov
push
pusha
and
loopne
stos
or
push
mov
cmp
sub
xchg
inc
int
mov
pop
daa
mov
mov
sub
ljmp
lahf
push
or
or
and
rolb
fistps
add
and
sbb
add
stos
addb
inc
cmp
push
lcall
add
push
or
lea
cmpl
mov
call
shll
adc
sub
push
enter
adc
cs
test
add
add
in
test
adc
cld
inc
mov
lahf
lods
pop
push
movsl
rcl
nop
xchg
xor
mov
cmp
repnz
aam
jo
or
std
aad
pop
pop
insb
mov
mov
add
pop
sbb
mov
cmp
sbb
or
xor
add
insl
lods
loop
out
and
add
fcompl
sbb
cmpl
pop
mov
les
cmp
rclb
cmp
cltd
fisubl
and
jo
add
mov
movsl
das
insb
pushf
cli
clc
push
pop
mov
xor
adc
pusha
add
jb
or
mov
imul
cmp
rcl
inc
insl
pop
bound
ret
xor
sub
and
push
xchg
leave
shll
xor
push
xchg
push
rcrb
pop
rorb
push
adc
or
mov
mov
mov
jmp
pop
adc
cmp
mov
inc
mov
push
mov
jne
aad
adc
jle
lds
shlb
add
popa
mov
xchg
int
adc
cs
adc
jno
pop
xchg
and
rorl
cs
adc
sub
inc
int
mov
andb
push
cwtl
push
jne
sbb
clc
popa
rclb
inc
mov
xchg
and
xor
and
ss
jne
stc
cmp
loopne
xlat
pusha
aad
sbb
rolb
add
jno
dec
in
sub
mov
push
int3
out
push
add
mov
fldenv
add
jge
push
and
stos
lret
sahf
or
pop
add
mov
ja
adc
in
pop
or
adc
loopne
xchg
adc
movl
mov
add
pusha
les
add
in
and
jnp
ds
sbb
dec
xchg
pop
data16
mov
xor
add
aas
jmp
push
nop
popf
mov
add
cs
sbb
or
jge
jns
xor
xchg
push
adc
fwait
add
je
add
mov
or
adc
bound
adc
sbb
mov
add
push
adc
jne
xor
punpckhdq
loopne
dec
adc
sbb
add
inc
out
xor
imul
sbbb
addr16
sbb
leave
arpl
pop
lds
cmc
cmpb
stos
or
push
pop
add
mov
pop
cmp
ss
add
mov
jecxz
mov
mov
incb
rcrb
add
push
mov
movsl
icebp
call
cmp
mov
ret
ror
aas
mov
adc
ljmp
sbb
jns
test
inc
pop
pusha
sbb
outsl
add
adc
push
hlt
inc
and
push
adc
call
sub
add
adc
sbb
mov
ss
icebp
repnz
mov
mov
repnz
int3
add
pop
push
sbb
pop
pop
add
scas
fidivs
push
ret
pop
lds
sbb
cmp
cmp
xor
push
je
jno
sti
adc
sbb
mov
repnz
pushf
adc
or
add
xchg
push
test
clc
aad
push
mov
inc
je
sahf
aaa
mov
push
pop
add
pop
xor
or
adc
mov
cmp
sbb
daa
add
pusha
cmp
mov
add
sub
mov
data16
push
adc
inc
dec
sub
push
push
cmp
pop
sahf
je
adc
xchg
testl
xlat
jmp
aaa
stc
sti
push
in
push
adc
add
mov
cmp
lods
lods
test
push
clc
mov
push
push
sbbb
sti
add
mov
push
ss
cmp
push
adc
adc
push
pmuludq
cmp
test
dec
or
lahf
add
cmp
imul
shll
push
je
push
bnd
push
andb
mov
push
outsb
mov
add
inc
mov
imul
and
mov
add
fdivs
xchg
or
int
mov
xor
sub
insl
add
pop
sar
dec
adc
andb
lods
push
add
add
daa
orl
sbb
dec
mov
pop
cmp
movsl
sub
test
loop
fisubl
inc
inc
jne
rcl
push
fwait
lcall
sub
push
ret
add
lcall
ljmp
sarb
cmpxchg
mov
jb
fiaddl
loopne
repnz
divl
push
mov
or
fiaddl
mov
cmp
xor
add
sbb
cli
sub
adc
pop
sbb
pop
or
jb
sbb
movsl
xchg
dec
ret
add
mov
cwtl
sub
test
stc
add
mov
dec
shlb
pop
sub
pop
and
sub
les
inc
push
pop
mov
xchg
pop
xchg
out
insb
test
or
push
push
inc
push
das
xchg
or
add
pop
adc
or
adc
cmp
lods
test
mov
xchg
in
les
test
sub
and
rolb
adc
push
pop
adc
lods
cmp
mov
rol
lock
xor
inc
lret
scas
sti
pop
stos
mov
jb
popa
subl
sbb
imul
push
xchg
pop
push
and
xchg
add
mov
mov
aam
mov
push
jnp
pop
lods
push
cmp
ss
jb
lcall
ja
cmp
in
stos
pop
or
jno
test
sub
mov
cwtl
and
jle
xlat
cmp
test
fwait
add
jl
xchg
mov
fwait
jp
push
mov
pop
xchg
pop
cmpl
mov
xchg
push
sbb
mov
jle
push
cltd
sub
adc
jo
mov
lea
xchg
mov
xchg
stos
mov
dec
adc
xchg
leave
pop
add
cmp
mov
call
ret
xor
sbb
cvtps2pd
mov
jo
mov
loopne
mov
xchg
pop
add
addr16
cmp
adc
xor
stos
notb
xchg
mov
insb
inc
imul
cltd
jle
or
xchg
or
sub
or
test
xchg
xchg
mov
popf
test
push
mov
decb
xchg
dec
into
dec
mov
inc
cmc
dec
dec
mov
mov
shll
jg
or
shlb
std
push
xor
mov
into
and
or
jae
test
mov
cli
mov
mov
mov
adcl
inc
cld
and
push
jl
jge
dec
sbb
add
outsb
sbb
sbb
pop
mov
sbb
scas
inc
fisubrs
add
or
or
or
pop
mov
jp
jno
nop
and
dec
mov
push
sbb
add
xchg
push
out
mov
call
addl
add
ljmp
orb
sbb
out
pop
nop
add
pusha
pushf
push
pop
cmpsb
test
and
pop
mov
sbb
sub
sahf
jbe
pop
add
mov
ljmp
fnstenv
idivb
mov
xor
mov
jge
add
clc
test
fisubs
cmp
push
inc
inc
iret
add
mov
divb
xchg
cmovbe
and
or
daa
lods
add
inc
iret
xor
or
insl
fmuls
jo
fwait
jb
pop
cmp
push
inc
mov
or
jb
xchg
or
cmp
and
push
rcrb
mov
ficoml
inc
adc
test
in
sub
insb
mov
add
out
pop
or
push
add
mov
pop
jb
push
lea
mov
scas
push
cltd
cmp
sbb
push
add
jbe
mov
sbb
adc
pop
dec
xlat
xchg
and
outsb
cmp
or
insl
pop
cmp
pop
or
sub
cmpsb
add
mov
loopne
addr16
pop
sub
sbb
int
stos
inc
dec
call
add
aaa
xchg
mov
mov
cmp
mov
andl
scas
jle
xchg
xrelease
insb
xor
addb
jb
shrb
pop
adc
add
add
scas
sbb
xchg
xorb
push
adc
sub
fisubl
pushl
cmp
xor
and
test
mov
add
fistps
mov
jmp
cmpsl
loope
shrl
or
inc
inc
std
aaa
pop
mov
mov
cmp
jmp
cmp
inc
push
sub
lock
sbbb
nop
dec
and
in
das
sub
lret
aas
addb
mov
ss
or
add
xchg
add
sub
xchg
fisubs
dec
scas
out
jae
fwait
add
mov
loopne
test
mov
lods
cs
mov
and
popa
mov
xchg
sub
adc
data16
insl
dec
call
dec
mov
jmp
movsl
stc
fwait
dec
sbb
icebp
or
push
push
cmpsl
popa
push
insl
daa
inc
fstpl
int
subl
fisttpl
inc
aam
cmp
and
dec
xor
mov
std
gs
pop
jecxz
xlat
inc
loopne
mov
jg
sbb
incl
add
movsl
dec
test
repz
dec
stos
rcrl
loopne
mov
loopne
jnp
push
sub
enter
dec
mov
ret
test
push
jmp
icebp
mov
es
nop
dec
repz
adcl
or
pop
lods
push
fidivs
add
adc
subl
jno
mov
cli
aaa
jbe
adcl
mov
fbstp
fidivrl
xor
and
fidivl
in
or
mov
and
aad
xor
xchg
ss
testl
orb
push
push
insl
insb
dec
sub
cmp
mov
roll
push
icebp
lea
fwait
lahf
cmp
rorb
call
pop
adcb
xchg
imul
idivb
and
movsb
push
js
movsl
lods
enter
test
mov
shrl
cmp
and
std
gs
mov
mov
push
xorb
and
das
fwait
cli
das
push
mov
or
out
jb
rclb
xor
xchg
pop
orl
pop
aam
inc
outsl
dec
pop
clc
jb
int
adc
push
ja
int3
cmp
jno
std
add
and
and
jg
mov
mov
xchg
cmp
adc
pop
jge
mov
cmp
and
repnz
clc
addl
mov
fucomp
imul
cmpsl
popf
inc
adc
icebp
loop
add
std
out
pop
jno
lcall
mov
pop
scas
xchg
inc
lods
push
stos
push
add
scas
mov
cwtl
test
sub
cltd
mov
test
fldcw
jbe
das
jnp
jb
sub
push
sbb
xor
lcall
and
push
pop
scas
outsl
cmc
adc
mov
dec
push
rorl
dec
xchg
xchg
insb
cmp
or
xchg
clc
mov
inc
mov
push
xor
ffree
dec
and
dec
add
imul
xorl
or
outsb
mov
sbb
inc
sub
xor
cmp
cmp
test
mov
es
sbb
push
sub
xchg
sub
xlat
bound
fildll
adc
rcrl
inc
mov
mov
sub
sbb
fcomps
shlb
push
adc
sbb
jle
rcrb
pop
stos
mov
shlb
stos
lahf
js
mov
xchg
pusha
mov
mov
clc
data16
push
stos
adc
insb
insl
imul
cmp
add
sub
add
add
cmpb
loopne
jmp
out
xor
inc
push
mov
pop
mov
add
scas
jmp
sub
in
mov
xor
cli
sarb
add
sbb
mov
inc
mov
add
lret
repz
push
mov
mov
mov
pop
test
sub
mov
xchg
mov
inc
inc
xchg
test
or
sub
clc
in
pop
aad
lea
and
adc
xchg
nop
push
lcall
arpl
ret
lods
shrb
pop
mov
fisubrl
sbb
cmp
or
hlt
pop
repz
pop
inc
mov
mov
in
mov
adc
and
xor
mov
sbb
mov
mov
and
inc
dec
ljmp
sarl
sub
push
imul
aaa
mov
inc
insl
cmp
lods
add
shlb
mov
lods
xchg
or
xchg
mov
xchg
insb
sarl
or
jae
mov
pushf
test
dec
fiaddl
mov
mov
sbb
pop
mov
and
pop
imul
mov
imul
clc
enter
sbbb
mov
push
imul
adc
add
or
pop
scas
pop
push
xor
leave
add
and
test
push
sbb
jmp
xchg
shl
jle
or
mov
inc
test
call
imul
mov
or
loop
dec
xchg
pop
or
or
xchg
mov
xor
add
mov
iret
movsl
inc
dec
shlb
push
test
test
mov
outsb
or
mov
and
sub
sete
push
stos
dec
push
popl
rolb
jb
lcall
xchg
pop
mov
dec
push
mov
fadd
ret
lahf
push
inc
adc
or
test
xchg
fcos
add
or
in
xchg
dec
cld
pop
pop
and
or
and
xchg
lods
test
movsl
pusha
rcll
in
inc
enter
cli
lds
icebp
or
mov
push
hlt
push
xor
jmp
icebp
mov
xchg
fadds
add
mov
jb
add
mov
fdivrs
pop
outsl
fisubrs
sub
and
rolb
sub
pop
jmp
push
inc
das
mov
dec
adc
aad
rorl
fimull
ret
faddl
push
in
and
xor
inc
pushf
inc
pop
lret
incl
inc
jo
cld
mov
sub
push
mov
add
mov
push
sahf
xchg
add
push
addb
mov
mov
les
stos
outsb
push
or
mov
mov
adc
push
push
cli
push
mov
add
test
cli
jg
sub
ret
scas
test
pop
fidivl
mov
outsb
clc
add
inc
or
push
in
cmp
int
jg
bound
mov
rcr
pop
stc
inc
das
push
sbb
mov
test
mov
aad
subb
mov
jo
popf
mov
mov
lods
xchg
pop
sbb
xorb
inc
add
sub
mov
addb
inc
jp
lock
or
or
xchg
rcrl
mov
sbb
push
stos
ficoms
cmp
pop
scas
iret
jno
lods
mov
adc
sub
sbb
fs
sbb
dec
pop
pop
pop
or
xor
mov
rcl
sub
fs
dec
mov
aad
in
jle
pop
lods
loope
or
lds
mov
hlt
jo
gs
imul
rcrl
jb
les
mov
insb
sub
lea
push
pop
sub
sbb
idivl
fisubrs
cmpl
out
mov
sbb
add
imul
test
add
inc
shrb
inc
call
imul
fstpl
lret
test
sbb
inc
lock
out
mov
out
jg
incb
test
dec
lock
mov
or
ret
out
mov
sub
mov
xor
push
aad
fiadds
mov
push
fcomp
outsl
fisubs
outsl
in
test
push
xchg
mov
jno
add
decl
iret
ja
adc
insl
mov
and
test
inc
pop
rolb
mov
jb
fcoml
or
inc
stos
push
aam
mov
sbb
fsubrs
gs
mov
out
push
stos
inc
sub
mov
sbbb
inc
mov
addb
mov
inc
pop
jb
loopne
mov
adc
lods
cli
and
push
stos
push
sub
cmp
leave
fs
int3
jb
int
xor
mov
and
mov
and
rcrb
mov
andb
mov
push
test
lds
stos
scas
push
add
push
mov
insl
mov
xor
cli
aad
and
dec
inc
xor
mov
add
ret
arpl
ss
sahf
mov
jg
insl
pop
fwait
subb
push
add
sbb
and
das
dec
add
shrb
xchg
fstpt
push
xchg
sbb
inc
sub
xchg
jb
mov
jb
shll
sub
scas
mov
mov
out
pushf
inc
shll
lahf
inc
testl
int
or
sub
test
mov
pop
ja
add
outsb
mov
clc
add
pop
add
in
mov
or
mov
cmp
dec
add
push
sub
inc
xchg
ret
sub
les
push
pop
pop
int3
mov
pop
sub
add
rcl
test
stos
shlb
dec
pop
subb
xor
adc
lahf
push
push
leave
jno
sbb
xchg
or
push
pop
inc
stos
int3
push
inc
mov
stos
push
inc
mov
orl
rcl
mov
mov
sbb
fadd
mov
mov
imul
inc
aam
mov
pop
enter
enter
ficoml
push
subb
or
call
dec
repnz
mov
clc
pop
inc
mov
sbb
add
mov
ss
test
mov
adcb
lahf
shr
push
mov
add
mov
stos
clc
aas
inc
test
inc
popa
mov
adc
xor
pushf
cltd
ficompl
outsb
mov
ret
inc
ret
sub
push
sub
fimull
mov
add
or
mov
js
imul
les
rcrb
pop
pop
mov
and
data16
dec
arpl
mov
rcl
sub
or
xchg
cltd
rcl
add
jl
imul
push
push
mov
leave
sub
loope
mov
add
sarl
pop
repnz
test
mov
pop
mov
or
sbb
pop
xchg
jmp
sbb
movb
sbb
sarb
shl
in
pop
rcll
cmp
pop
rcrl
xchg
adc
cld
inc
popf
sub
xchg
mov
incl
ljmp
mov
fstpl
sbb
or
jno
ss
add
call
fsub
add
leave
add
xor
mov
add
je
cmpb
mov
aas
jno
and
and
repnz
or
add
fcoms
add
adc
inc
push
cmp
inc
jp
jbe
add
lret
dec
sub
dec
or
pop
test
addb
inc
push
lahf
add
and
into
int
jo
or
xchg
ret
adc
sub
sbb
mov
push
adc
dec
mov
xor
lahf
add
mov
mov
popa
push
hlt
mov
lds
sbb
fnstenv
inc
adc
sub
mov
inc
enter
mov
jmp
std
or
imul
lock
mov
inc
in
inc
cmp
mov
bound
adc
cmpsl
mov
mov
pop
jae
sub
adc
stc
jge
mov
cmp
jmp
sbb
fnstcw
mov
sub
insl
inc
xor
push
add
lea
cmp
fisubrs
repz
enter
mov
mov
loope
stos
push
int
mov
xor
or
push
rorb
pusha
fadds
cltd
mov
mov
cld
cltd
fisubrl
scas
loopne
pop
sbb
push
inc
mov
xor
jmp
pop
push
and
push
push
les
daa
pop
fisttpll
insb
mov
lahf
cmp
call
and
cltd
add
fs
shll
into
push
ljmp
add
test
sbb
jmp
mov
jo
xor
adc
movsl
mov
inc
add
jo
add
sbb
mov
mov
loope
mov
loope
sbb
push
pop
outsl
inc
loope
ret
fistpl
adc
out
scas
mov
inc
pop
or
or
sub
pop
movsb
sub
and
sbb
out
adc
rorb
test
inc
pop
rorb
dec
jo
adc
sahf
shll
push
punpckldq
cmp
jae
sbb
aad
ret
or
adc
or
testl
pop
fimull
andb
mov
mov
mov
es
test
test
ja
sbb
inc
call
movsl
inc
test
mov
xchg
movl
xchg
sbb
leave
dec
inc
es
std
pusha
lea
xor
push
sbbl
pop
fstpt
shr
jle
xor
aam
out
sbb
mov
fs
add
sbb
xchg
lods
les
jbe
test
lea
cli
fsubl
lock
add
in
xor
inc
fidivs
shrb
inc
ds
std
cmp
not
jp
xchg
jnp
ret
inc
je
jmp
and
aam
jnp
jl
sbb
mov
pop
or
xor
xchg
add
and
inc
pop
ret
sbb
cwtl
or
es
add
sbb
xchg
rcl
loopne
push
les
inc
lock
add
sub
mov
test
call
sub
xor
dec
push
cmp
or
mov
pop
in
jo
out
jge
cmpsl
xlat
aad
cmp
lock
mov
xor
mov
add
inc
sarb
lea
jb
push
xor
ret
inc
inc
mov
sub
dec
aad
xor
cld
jle
add
pop
shrl
aad
aad
jo
cmp
scas
das
jmp
mov
mov
ret
or
movsl
dec
push
jmp
adc
pop
sub
cmpb
mov
pop
mov
mov
pop
mov
mov
mov
sub
push
sbb
or
push
mov
push
push
mov
sub
lcall
jle
mov
aad
das
jle
xchg
and
jb
ficompl
pop
add
lods
xchg
cmp
fwait
and
push
pop
mov
mov
pushf
sub
jae
test
stos
outsl
fs
jp
cwtl
shrb
mov
les
pop
loope
dec
testl
sbb
push
lods
xchg
mov
mov
xchg
lods
mov
sbb
loope
inc
or
lea
inc
fildll
mov
xchg
insb
add
cli
sbb
aam
push
stos
outsb
xor
scas
add
clc
push
flds
es
mov
lcall
mov
push
dec
movl
add
push
test
addr16
pop
andl
push
pop
mov
stc
dec
mov
xchg
addb
jns
nop
xorb
test
test
push
loope
or
mov
mov
adc
sbbb
inc
mov
inc
flds
enter
xor
push
lcall
jp
inc
add
mov
xchg
stos
add
or
xor
inc
aam
adc
inc
and
insl
mov
test
jb
pop
push
and
pop
push
aad
push
pop
mov
pop
andl
pop
sbb
sbb
inc
push
sub
int
es
xor
je
dec
rolb
or
and
mov
aaa
test
icebp
das
int3
add
mov
mov
mov
mov
pop
mov
add
stos
insl
stos
sbb
jmp
pop
push
mov
xchg
push
jns
cli
loop
jno
pop
add
lds
pop
js
imul
lcall
enter
xor
rolb
stos
add
ficompl
mov
mov
out
imul
xor
sti
xor
je
dec
add
inc
fistps
add
shlb
push
inc
sti
pushf
mov
adc
fchs
push
jne
sbb
xor
or
mov
adc
adc
mov
and
les
or
cmc
add
push
stos
shll
xor
rorb
or
fisubrs
pop
les
loope
jno
sub
dec
jb
mov
mov
mov
fcomps
test
dec
jne
push
pop
and
push
or
mov
fcoms
sub
mov
ss
inc
jne
pop
add
ret
push
pop
cmp
dec
or
mov
lret
inc
int
insl
imul
dec
sub
pop
andl
shrl
adc
mov
jne
sbb
lods
adc
insb
inc
and
test
add
shll
sub
negb
xor
sbb
shlb
push
or
push
pop
gs
inc
or
adc
dec
aam
mov
xor
push
push
dec
mov
insl
jno
jno
lret
jg
mov
dec
inc
pop
mov
xchg
and
add
sti
sub
enter
or
sbb
mov
mov
push
or
and
or
cmp
mov
push
jle
in
push
lahf
fsubl
or
or
mov
shlb
popf
inc
inc
adc
push
loopne
sbb
mov
cmp
xor
ficompl
pusha
test
xchg
daa
popa
or
sarl
testl
fsubr
sub
rclb
data16
mov
test
fnstenv
cmp
das
outsb
outsl
daa
lods
movsl
inc
cmp
inc
and
icebp
les
jo
push
sbb
lret
stos
push
pop
mov
negb
push
xor
cmp
mov
pusha
xchg
fdivr
and
fidivl
ja
or
lods
pusha
inc
cmp
push
lock
xor
pop
hlt
inc
adc
mov
pusha
or
add
push
mov
lahf
dec
xor
addr16
mov
outsl
mov
in
repz
cmc
sbb
adc
xchg
std
jmp
imul
cs
or
out
adc
fsubp
insb
daa
test
mov
inc
scas
rorb
aaa
and
cmp
fs
mov
jl
dec
add
push
push
call
and
adc
add
mov
adc
arpl
mov
push
stos
jp
adc
ja
fwait
aaa
pop
or
in
xlat
setle
adc
ffree
mov
or
sbb
pop
push
sti
jecxz
add
push
popf
enter
stc
fwait
lret
xor
xchg
fsubrs
pop
pop
ror
xchg
movsb
push
or
sub
shrl
test
dec
sbbb
sbb
testl
sub
dec
adc
xlat
rolb
call
sbb
scas
cs
cmp
sub
out
add
ret
mov
dec
add
lret
gs
jge
jne
inc
inc
xchg
sbb
cmp
bound
jle
xchg
rorl
out
bound
sarb
push
test
mov
inc
cltd
shlb
addb
xor
push
pop
mov
pop
cmpsl
sbb
orb
mov
add
jle
and
out
add
das
mov
shrb
jmp
jmp
adc
out
mov
mov
sub
mov
jg
imulb
sub
and
or
das
cmp
or
xchg
mov
movsb
xchg
and
push
add
addb
mov
push
xchg
movsl
daa
mov
push
mov
adc
sbb
lea
movsl
stos
imul
lea
rcrb
outsl
pop
dec
or
ret
testl
or
inc
mov
mov
inc
rorb
push
xchg
mov
insl
inc
add
aad
mov
dec
cmc
xorb
inc
stos
push
pop
inc
push
adc
mov
lods
fcomps
sub
aaa
rcrb
adc
ror
add
ss
push
adcl
sub
add
imul
add
mov
adc
or
stos
lock
push
out
pop
dec
add
lods
adc
mov
insb
or
cltd
cmp
fcomps
mov
mov
pop
imul
sbb
add
push
stos
andb
sbb
push
pop
dec
jno
lahf
das
mov
ss
sub
or
push
and
push
loopne
jg
cmp
push
enter
fiaddl
dec
fidivs
mov
pop
pop
dec
sbb
xor
or
mov
std
data16
push
jl
add
outsl
test
stos
popa
rolb
push
sub
or
int3
lods
sub
addr16
insl
in
inc
inc
adc
cmp
aad
sub
dec
adc
rol
and
test
fwait
pop
lahf
mov
int
mov
mov
inc
mov
adcb
mov
jp
mov
das
ret
mov
fisubrl
mov
jnp
rcrb
xor
lods
xchg
lret
addb
roll
rcr
mov
and
add
outsl
sub
jo
push
cmp
lods
insl
cmpsb
pusha
inc
fwait
mov
cs
push
xor
cli
xchg
inc
clc
adc
pop
mov
push
fsubs
xlat
ret
cmp
push
out
xor
jo
repz
xchg
mov
dec
mov
lea
mov
add
sbb
sbb
inc
push
mov
xor
xor
push
cmp
and
mov
xor
ret
cmp
lcall
mov
push
cmp
cmp
jge
mov
push
push
in
mov
sub
and
inc
adc
sbb
cmp
xchg
stos
inc
imul
test
push
pop
mov
or
inc
sub
loope
jb
mov
xor
mov
mov
mov
pop
pop
ret
pop
jge
fiaddl
iret
jns
stos
xchg
mov
pop
mov
mov
shlb
jno
ret
inc
sub
pop
fs
mov
mov
sbb
and
inc
pop
imul
test
fistpl
pop
sub
mov
dec
rorl
push
cmp
call
adc
inc
cmp
bound
sahf
addr16
pop
sbbb
out
sub
push
ja
sbb
stos
push
xchg
mov
sub
es
cmp
add
ret
xor
xorb
inc
add
mov
mov
clc
cmp
and
add
pop
das
xchg
adc
stos
inc
and
loopne
push
push
and
mov
or
sub
cmp
sub
push
movsl
mov
scas
pop
jmp
mov
inc
xor
xchg
or
jg
xor
outsl
mov
or
aam
lea
fmuls
sbb
lods
push
fcomps
ljmp
inc
lahf
pop
mov
add
mov
ret
cmp
push
push
push
imul
push
and
sbbl
add
ss
mov
sti
sbb
test
out
or
push
hlt
andb
push
test
pop
out
fcmovnbe
test
xchg
dec
or
fstpt
xchg
mov
jecxz
jnp
push
shrb
outsb
inc
movsl
ficompl
rclb
loopne
cmp
jno
fs
inc
xchg
mov
adc
in
or
push
and
and
mov
pop
sub
fwait
jmp
mov
das
stos
mov
iret
scas
and
xchg
push
or
push
insl
and
mov
enter
cmp
inc
add
stos
shlb
ret
mov
mov
imul
gs
mov
push
mov
xor
adc
test
movsl
out
insb
adc
xchg
adc
outsl
mov
insb
mov
push
dec
jg
mov
push
or
loop
pop
in
es
mov
sub
subb
add
insl
das
jno
and
dec
xchg
mov
jo
sbb
jae
call
cmpsb
cmc
and
stos
pop
loop
test
sbb
sub
sub
add
add
rcl
push
mov
xchg
lds
shrb
sub
nop
pop
add
in
mov
jge
mov
stos
adc
dec
out
sub
stos
push
xor
push
rcll
cwtl
lea
lods
test
push
add
fildll
movsl
push
cwtl
and
dec
movl
push
push
pushf
and
mov
inc
adc
or
mov
sub
int3
gs
gs
insl
sub
pop
add
mov
pop
push
mov
add
test
inc
lods
dec
inc
mov
lods
mov
jno
in
jge
pushaw
stos
setnp
push
addb
push
xchg
sarl
mov
outsl
push
sub
pop
js
imul
ja
cltd
add
outsl
jno
push
loope
cmp
ljmp
sbb
xchg
and
scas
imul
push
ss
sar
or
loop
sub
push
add
jne
jae
adcl
stos
addr16
mov
clc
dec
pop
lods
loopne
pusha
pop
mov
pop
add
xor
cmpsl
cmp
fcoms
nop
jb
or
fcoms
inc
mov
push
pop
adc
shlb
push
mov
push
test
or
sbb
jo
jo
mov
xchg
dec
adcb
adc
inc
test
jge
cmpsb
adc
add
dec
rolb
mov
inc
mov
pushf
cmp
aad
mov
mov
orb
dec
lods
pusha
mov
jno
inc
adc
scas
lcall
mov
or
movsb
inc
sbb
inc
push
stos
xor
add
adc
xchg
orb
pusha
sub
adc
mov
inc
xor
inc
gs
push
adcl
cltd
sbb
mov
fdivr
inc
dec
push
sub
xor
imul
insl
sub
sub
arpl
xchg
test
jno
add
sub
out
add
pushl
dec
popa
pop
clc
mov
aad
mov
adc
cmc
or
call
iret
mov
lods
jmp
shrl
sbb
lods
adc
mov
mov
cmp
ror
movsl
mov
pop
push
mov
and
mov
inc
push
push
mov
inc
stos
cmp
inc
in
ret
mov
and
orb
sti
mov
sbb
jb
aas
push
push
push
mov
push
sub
mov
mov
push
outsl
outsl
pop
jns
mov
js
or
xor
in
mov
roll
cmp
xor
cmp
out
sub
lods
sub
and
or
mov
insb
stc
nop
cmp
int
loopne
mov
inc
mov
mov
push
sub
mov
push
stos
xchg
adc
es
mov
mov
add
test
inc
add
inc
rcl
xchg
test
jle
es
lods
xchg
mov
aad
enter
mov
push
repz
push
sub
mov
jmp
stos
jge
mov
jl
mov
jle
cmp
leave
fs
push
adc
mov
sub
mov
add
and
add
mov
lods
add
dec
test
push
mov
cmp
push
mov
in
fiaddl
push
popf
pop
adcl
pusha
push
lcall
add
xor
loop
sbb
mov
test
popa
es
movsl
jae
mov
scas
testb
scas
aad
adc
add
push
nop
adc
xchg
sub
jecxz
push
sub
mov
push
mov
or
pop
xchg
mov
pop
outsl
movsl
cmp
pop
mov
sub
jmp
mov
ficompl
pop
imulb
adc
push
data16
in
fbstp
push
cs
push
imul
aas
push
arpl
pusha
or
push
sub
pop
imul
pop
int
mov
cmp
subl
adc
adc
inc
dec
outsl
add
jp
lret
movsl
mov
inc
dec
cld
pop
add
or
mov
dec
rol
inc
lds
dec
pop
das
add
jmp
add
movsb
adc
dec
jne
divl
cmc
int
mov
adc
or
mov
sahf
or
sbb
test
sarb
add
push
cmp
xchg
jno
xor
addl
stos
loope
push
and
mov
pop
les
inc
xchg
or
pushf
loope
add
mov
pop
cwtl
cmp
pop
shll
fsubrs
sub
jle
xchg
inc
push
push
mov
mov
xchg
xchg
mov
insl
stos
adc
inc
and
je
fists
inc
and
inc
xchg
and
in
out
dec
sbb
pop
les
int
sub
push
movb
fisubrl
jle
stos
mov
cmp
xchg
cmp
push
push
xor
int
jne
pop
fisttpl
std
es
je
movsl
inc
in
pop
cwtl
cmp
mov
sub
lds
lret
movsl
mov
xchg
ret
orb
orl
jle
cmpb
xchg
xor
jo
mov
fimull
mov
loopne
cmc
add
jno
jecxz
test
xchg
sub
fs
inc
push
sti
subb
add
jmp
mov
fwait
movsb
jae
fcoml
adc
cmc
jnp
sub
add
xor
push
mov
xchg
out
xchg
mov
rolb
and
aas
ficoml
das
mov
sbbl
add
push
sahf
test
imul
loope
lock
push
fs
stos
adc
mov
xchg
dec
movsl
pop
xor
push
push
and
and
pop
pop
daa
jb
xor
inc
xor
lret
adcb
xchg
jo
jle
sub
stos
jno
jl
mov
in
dec
adc
or
push
sub
add
test
sub
mov
test
jbe
sbb
sbb
ljmp
insl
jae
fnsave
add
lods
mov
or
xchg
in
cmp
ret
adc
jne
mov
inc
xchg
push
mov
sbb
sub
das
lahf
shlb
sbbb
insl
sub
mov
jle
in
cmp
dec
fdivrs
mov
scas
xchg
incl
outsb
add
pusha
pop
addr16
inc
or
aas
mov
cmpsl
das
aaa
xchg
repz
es
push
cmp
and
pop
mov
fidivrl
mov
cld
push
stos
mov
adc
shlb
and
add
sub
nop
or
or
push
adc
xchg
call
dec
int
xchg
lahf
sbb
or
push
les
xchg
sbb
mov
pop
xchg
test
push
mov
sbb
addr16
lret
and
xchg
push
in
aad
adc
add
test
push
ret
adc
rcrl
nop
cmp
cmp
mov
pop
jno
push
es
mov
out
lods
test
cmpb
or
lods
push
xor
sbb
shrl
lahf
rolb
lea
jb
roll
add
sub
fimuls
clc
jns
push
cld
mov
pop
lahf
jmp
outsl
and
sbb
inc
inc
add
dec
xchg
mov
pop
push
adc
and
dec
sub
pop
add
mov
dec
mov
fbld
call
fmul
fistpl
jp
inc
add
cwtl
adc
icebp
add
call
kmovb
movsb
mov
popl
sub
mov
cmp
pusha
int3
pushf
mov
enter
out
sbb
das
dec
sbb
adc
dec
aam
add
ret
mov
mov
ja
cld
mov
jmp
stos
and
and
ljmp
stos
cmpsl
or
lret
inc
movsl
push
sbb
and
daa
and
clc
aas
aad
add
sub
pop
inc
stc
mov
ret
das
ror
call
sbb
jp
add
mov
add
pop
and
pop
or
js
mov
movsl
js
clc
or
and
cmp
je
test
and
or
sarl
or
mov
shl
in
inc
mov
push
sahf
push
dec
shr
dec
sar
add
rclb
mov
add
mov
rclb
lods
or
js
lods
jp
fdivrs
repnz
outsb
out
mov
dec
push
sbb
and
cmp
lcall
int
or
jne
and
push
pop
and
fisubrl
or
push
push
sbb
inc
adc
call
scas
test
lcall
ret
andb
outsb
and
and
dec
mov
inc
sbbl
aam
add
mov
cmc
push
pop
and
incl
sahf
subl
inc
mov
lret
push
push
mov
int
cld
je
ss
mov
mov
xchg
fnsave
mov
addl
cmpsb
xorb
in
imulb
dec
xor
adc
push
or
or
and
cs
mov
outsl
outsb
cmp
xor
pop
push
cltd
pop
inc
xor
dec
pop
mov
sbb
ss
jo
call
add
addl
lea
orb
test
testb
push
sub
lock
outsb
xor
add
add
aad
xor
gs
dec
xor
sub
or
loopne
mov
add
les
cmp
pop
mov
cmp
sub
sbb
divl
mov
inc
adc
ror
jge
inc
arpl
xchg
push
call
adc
jge
inc
lcall
jnp
mov
adc
loope
adc
scas
or
and
hlt
fimull
add
test
add
and
divl
addb
faddl
dec
xor
les
and
and
mov
add
orb
and
js
and
inc
sti
xchg
adc
lcall
push
xor
add
clc
test
popf
call
sbb
mov
fsubrs
shl
shll
dec
adc
sbb
pop
sti
pop
mov
sub
or
mov
jge
js
or
pop
shrb
adc
xchg
addb
add
adc
in
mov
mov
loop
cmp
js
dec
xor
inc
clc
pop
push
movl
dec
mov
dec
out
out
push
push
cld
xchg
mov
aam
scas
dec
hlt
and
insl
mov
and
sbb
pusha
data16
dec
dec
jle
adc
cld
and
cmp
jb
es
push
popa
lock
add
hlt
inc
mov
cmp
call
adc
inc
sbb
sub
add
and
mov
xor
dec
mov
sub
or
dec
mov
cmp
pop
mov
imul
dec
jb
mov
mov
mov
jmp
adc
ja
sti
pop
or
xor
std
xchg
inc
mov
add
pusha
or
cltd
dec
cmp
fsubr
push
jmp
fisttps
mov
int3
or
testb
and
mov
add
aaa
xor
dec
je
jg
sub
lea
fdivp
mov
mov
ficompl
int3
orb
xor
add
sub
xor
shlb
loope
or
je
pop
sbbb
xor
or
cld
sbb
mov
stos
cmp
sub
jp
leave
ret
push
popl
orl
add
iret
jae
aam
hlt
mov
rolb
pop
loopne,pt
add
and
sbb
sbb
xor
leave
sahf
pusha
or
push
shl
loop
dec
ret
test
movsb
xorb
hlt
mov
cmp
pop
mov
sbb
out
jmp
loopne
push
cmp
ja
icebp
push
fucomip
adc
call
push
add
shll
mov
push
jecxz
sbb
jp
data16
ror
or
std
lahf
inc
in
add
aas
mov
loopne
adc
or
mov
adc
jp
inc
sbb
pop
insl
adc
fisubrs
adc
push
sbb
mov
xchg
ffree
sub
jnp
mov
pop
xchg
shlb
or
jae
fnsetpm(287
clc
sbb
notb
in
jl
xor
jbe
adc
jae
int
call
andl
icebp
pop
adc
pop
call
add
cmp
mov
dec
js
sub
cmc
sti
mov
sbb
pop
cmp
fisttps
jmp
sub
and
jp
mov
pop
in
pop
or
inc
sbb
ds
call
repnz
roll
pop
cmp
pop
and
inc
addr16
cwtl
pop
adc
add
int3
push
push
pop
pushf
push
sbb
test
xor
jnp
adc
fs
mov
pop
jo,pt
cmc
mov
cmc
rorb
ja
popa
adc
xor
cmpsl
scas
cwtl
repnz
pushf
out
push
dec
loopew
xlat
data16
ja
inc
fwait
or
xor
imul
sub
push
loopne
adc
xor
pusha
insb
add
fistpll
sub
sbb
inc
ficoms
enter
pop
sti
loop
in
xchg
jmp
ljmp
add
outsb
or
js
add
bound
cld
mov
xor
add
jo
test
fldenv
sbb
jp
out
add
es
testl
fsubs
int3
cmp
adc
test
test
push
jg
or
adc
lock
loop
pop
repz
or
fiadds
xor
mov
insl
mov
inc
addb
jno
cmp
int
shll
fadds
cmc
push
mov
popf
mov
adc
ja
inc
cmpb
sub
adc
add
jo
movl
adc
cmp
dec
repnz
out
cmp
jnp
icebp
xchg
add
ret
gs
clc
pop
mov
mov
mov
xor
mov
popa
jecxz
xor
adc
xor
movb
mov
sub
jp
adc
mov
add
jp
popa
sti
pop
popf
mov
push
repnz
mov
mov
fists
int3
adc
push
inc
inc
xor
ljmp
mov
and
scas
pusha
rorb
jno
cmp
repz
pop
inc
rol
inc
cld
mov
mov
shlb
add
push
mov
mov
jb
test
roll
mov
jne
xchg
mov
or
dec
stc
lods
aas
mov
push
fiaddl
addb
add
and
out
shrb
sbb
and
loope
pushf
sub
push
repnz
rcll
jmp
jae
add
jo
ret
fistps
pop
es
jmp
xchg
hlt
xor
sub
shrb
dec
cld
rolb
dec
testl
push
jbe
inc
add
mov
sti
cmp
push
xor
jmp
das
loop
xor
rcr
adc
inc
inc
loope
lock
adc
lret
push
loop
inc
adc
loope
shll
roll
jo
xor
roll
sbb
sbb
int3
push
loopne
call
pop
and
xchg
jne
mov
cmp
mov
js
pop
mov
pop
cwtl
xor
push
xor
outsl
dec
fwait
lea
sbb
lahf
hlt
adc
mov
rorb
stc
mov
fsubr
icebp
test
jno
les
mov
inc
idiv
push
xchg
aam
sbb
dec
or
xchg
lahf
sbb
add
cld
call
and
test
insl
adcb
loopne
and
mov
mov
movsl
rol
mov
insb
mov
in
mov
add
cmpsl
pop
imul
sbb
ret
mov
adc
flds
sti
popa
mov
sub
shlb
test
mov
dec
icebp
in
add
lret
dec
lds
mov
divb
addr16
fucomi
addl
jmp
ss
lods
das
icebp
pop
std
incl
testb
nop
adc
lcall
sbb
fcmovb
xchg
dec
shr
adc
sbb
iret
adc
cmp
xchg
fnstcw
sbb
orl
inc
shlb
inc
lcall
bound
sbb
sbb
cmp
jp
cmp
pushf
xchg
aad
jmp
cs
imul
hlt
inc
imul
or
mov
js
sub
lods
jl
pop
pop
add
push
fdivrs
jae
icebp
int
or
icebp
xlat
arpl
sub
mov
mov
add
fildll
rorb
mov
xor
data16
sub
bound
adc
mov
lret
jmp
adc
clc
sub
jmp
dec
ja
stos
and
ret
loope
pop
adc
adc
adc
pop
add
push
pushf
mov
icebp
arpl
in
negb
adc
sbb
fwait
js
mov
popa
repnz
lret
xor
cmpsb
push
mov
bound
add
add
or
push
sub
cli
clc
dec
shrl
rcrb
dec
push
scas
imul
adc
js
loop
call
inc
mov
adc
inc
inc
sub
andl
shll
dec
and
es
enter
bound
imul
sub
jl
cmp
mov
adc
mov
dec
lods
inc
add
and
shll
add
fwait
cmp
mov
ret
push
jge
pusha
orl
cs
mov
imul
mov
xor
rorb
imul
sahf
sbb
xchg
pop
shll
and
pop
iret
xchg
cmp
cmp
rclb
lods
jmp
pop
out
fdivrs
add
lods
jmp
add
in
cmp
fs
into
and
fcomps
mov
enter
cltd
int
mov
flds
mov
nop
test
cmc
sbb
or
jns
ficoms
jo
and
addr16
ret
xchg
enter
popa
mov
neg
pop
bound
dec
sub
dec
xor
bound
pop
adc
cmpsl
fwait
add
and
adc
cmp
adcl
or
aaa
outsl
jne
xor
or
or
mov
outsl
movb
mov
and
rorl
add
add
inc
jns
imul
jp
push
ja
xlat
ja
jbe
push
aaa
jp
inc
push
fs
dec
mov
sub
sbb
push
lcall
push
add
and
sbb
inc
pop
negl
adc
nop
lcall
cmp
pop
adc
in
fnstsw
je
sub
mov
ret
es
cmp
jo
pop
loop
inc
cmp
out
xor
in
add
jno
xor
jbe
add
loopne
inc
xor
rclb
xor
mov
mov
faddl
rep
mov
add
add
xorb
cld
mov
js
or
lret
sub
movsb
mov
aad
sub
sub
adc
add
sbb
xor
push
jl
add
scas
jb
daa
clc
iret
cmc
add
test
sbb
cmp
loopne
lock
pop
mov
or
movsb
sbb
addl
fwait
lcall
cltd
pop
pop
mov
push
icebp
lds
cmp
mov
push
and
push
hlt
cli
mov
fistpl
sub
js
out
ret
or
add
icebp
adc
add
shlb
push
mov
je
adcb
and
sub
jecxz
sbb
mov
sahf
adc
mov
fmuls
sarl
fimuls
jmp
cmpsl
add
arpl
push
cmp
cs
rcrb
pushf
stc
pop
clc
hlt
fcmovnb
pop
daa
jle
or
jmp
nop
xor
pop
pop
xchg
rorl
clc
jg
fidivrs
mov
js
xchg
clc
scas
ja
hlt
inc
xor
cmp
popf
imul
outsl
mov
push
stos
jge
sar
cmp
js
mov
outsl
adc
pushf
cwtl
jl
add
adc
jge
or
adc
push
and
sar
sub
push
lods
mov
cwtl
rolb
gs
sub
xchg
test
bound
hlt
insb
ds
lret
add
ret
mov
lds
sbb
out
sub
pop
and
dec
shrl
andb
mov
and
mov
push
clc
fcmovu
sbb
add
inc
idiv
push
sub
add
sbb
sbb
insl
sbb
add
mov
mov
xor
aam
push
sbb
add
sti
dec
fdivl
mov
sbb
jl
or
adc
cmp
adcb
rolb
mov
mov
popa
gs
mov
xor
loopne
repnz
nop
roll
and
inc
je
push
mov
jle
in
add
or
jae
xchg
movsb
cmp
xor
outsl
push
add
data16
jo
enter
xchg
daa
and
inc
daa
add
add
adc
pop
add
sbb
pop
ror
movsl
popa
cmc
sbb
inc
cmp
and
call
roll
cmp
je
sbb
les
jb
test
push
mov
xor
sbb
pop
dec
mov
das
jmp
incl
pop
sbb
push
sbb
ja
sub
add
push
cmp
mov
push
movsl
rol
iret
push
xor
sbb
sub
sub
mov
sub
push
add
faddl
js
pop
jo
jb
test
add
xor
push
stos
outsb
es
ret
mov
cld
popa
sub
lods
add
or
sbb
nop
or
add
sbbl
pop
pop
or
cmp
shll
sub
and
into
pop
mov
pop
pop
pop
add
inc
fwait
mulb
push
outsb
push
xor
inc
or
cmp
and
xor
add
test
pop
push
xor
inc
add
xchg
push
xchg
sub
dec
adc
pop
in
pop
inc
stos
or
roll
out
pusha
stc
lea
mov
mov
lahf
inc
shll
lahf
push
shr
jne
sub
popf
out
hlt
test
add
loop
mov
push
cwtl
sbb
jmp
js
sbb
sbb
daa
mov
nop
scas
les
mov
pushf
sub
out
mov
ja
push
ss
xor
push
es
inc
div
nop
or
or
adc
loopne
xor
inc
add
cmp
out
leave
bound
inc
cltd
pop
sub
add
not
dec
repnz
lock
loope
mov
fimull
xor
imul
mov
fimull
push
add
scas
and
test
pushf
jbe
outsb
clc
push
or
out
or
add
cmp
push
or
idiv
xchg
test
stc
das
dec
pusha
shlb
pop
lret
inc
adc
lret
es
push
add
lret
mov
cld
outsb
dec
pop
sub
jle
inc
cltd
sub
insl
lds
add
in
push
jne
pop
fmul
clc
and
roll
repz
pop
dec
loopne
jb
pop
pop
aas
dec
and
fxtract
jmp
por
mov
dec
xchg
sub
in
into
or
aam
stc
mov
fildll
mov
add
mov
add
pop
and
test
mov
flds
cmp
fldz
lret
and
dec
jecxz
xchg
cmp
jmp
fisubs
lahf
add
dec
jo
push
mov
and
jl
jnp
push
in
adc
sub
mov
inc
repz
dec
add
out
ret
add
add
cmp
ret
inc
mov
hlt
ds
cmp
icebp
test
sub
adc
fcompp
mov
or
add
ja
sbb
inc
mov
loop
call
mov
test
adc
loop
mov
sbb
jp,pn
and
mov
bound
aad
ja
icebp
mov
call
inc
inc
daa
cli
pop
xor
mov
mov
and
push
mov
dec
test
pusha
mov
cmp
jae
subb
orl
or
jp
das
add
orb
pop
cmpsl
jb
jle
test
out
mov
rcrl
shrl
sbb
xchg
adc
mov
sub
sub
test
push
inc
xor
mov
mov
adc
add
push
jle
cmp
test
aas
test
dec
stc
ljmp
add
data16
iret
sub
push
inc
add
inc
std
lock
add
push
xchg
pop
add
hlt
cmpsb
call
jo
and
or
xor
add
sub
je
in
loop
jp
jbe
inc
jmp
xor
cs
lock
cwtl
imul
roll
test
adc
adc
push
das
mov
arpl
pop
testl
or
jbe
outsb
adc
xchg
test
cmp
cmp
popf
inc
pop
sbb
jmp
or
and
and
pushw
mov
mov
sub
add
xor
sbb
ret
dec
xchg
adc
cmp
and
negl
cmp
jmp
dec
inc
lock
lret
inc
cmp
or
arpl
movsb
and
cmc
add
adc
xor
call
add
and
fsubrs
cmp
ss
adc
sub
inc
push
rcl
pusha
inc
sbb
push
cmp
test
icebp
mov
mov
inc
lcall
lret
xor
fcoms
mov
out
add
icebp
in
adc
daa
and
sbb
xlat
or
mov
add
mov
clc
add
push
jge
add
or
push
fs
dec
iret
cmp
mov
inc
or
lret
dec
sbb
insb
push
sahf
fwait
sbb
pop
leave
adc
jne
push
dec
loop
or
out
out
add
fstpl
or
push
mov
aas
xor
add
lods
push
ds
ja
inc
xchg
mulb
inc
rdtsc
sub
test
jnp
cli
ret
jne
jnp
or
insl
push
adc
adc
movsl
cmp
pushl
test
add
outsb
cmp
sub
pop
gs
icebp
xor
mov
push
inc
js
add
clc
loopne
mov
sub
cmp
add
cmp
adc
stc
mov
pop
inc
add
inc
test
jmp
cmp
and
loopne
fdiv
daa
or
mov
test
ret
notb
call
sbb
es
icebp
stos
sbb
sbb
sub
cltd
cmp
mov
addr16
mov
in
ret
jnp
rorl
jg
sti
push
jb
xor
mov
add
or
movsb
sbb
outsl
shl
cmpsb
jge
mov
in
push
xchg
insb
cmpsl
pop
dec
cmp
and
sub
mov
and
stos
incb
add
scas
and
adc
cmp
aad
and
hlt
jl
add
jb
hlt
sub
inc
aas
xchg
lcall
movsl
mov
and
mov
dec
add
mov
cld
cld
out
xor
cwtl
cltd
push
mov
nop
add
dec
mov
mov
jecxz
mov
xchg
sbb
jo
push
sbb
adc
bound
mov
out
lds
imul
jae
sub
cmp
lret
add
cwtl
aas
mov
mov
pop
loopne
or
jle
shlb
cs
addl
xchg
ljmp
push
sub
mov
aam
cmp
xor
add
ret
pop
xor
inc
fisubrs
adc
jmp
inc
out
push
add
pop
xchg
sub
test
shll
sbb
outsl
xchg
mov
shll
mov
jbe
aaa
xor
push
shll
out
or
xor
adc
add
push
or
sub
lea
and
inc
mov
add
movsb
dec
sub
stos
repz
or
and
fnstenv
jl
mov
js
cmpsb
xchg
sbb
and
jo
or
add
sbb
xadd
dec
sub
daa
mov
fcmovnbe
sub
inc
sar
mov
sub
mov
lret
pop
out
inc
cmp
push
add
mov
or
rcrl
sbb
stos
fnstcw
shl
cltd
add
data16
lahf
and
adc
inc
cmp
adc
jge
xor
pushf
mov
test
jb
inc
clc
loop
addr16
push
sub
adc
and
js
out
and
ljmp
roll
cmp
fwait
add
dec
imul
xor
mov
jo
ja
in
or
test
jb
cmp
sub
insb
dec
jmp
js
fs
add
inc
mov
mov
mov
pop
adc
sub
dec
ds
dec
jg
ret
shll
and
mov
mov
cmp
add
scas
mov
cmp
xor
adc
lods
mov
ret
xor
dec
pop
adc
jbe
fmull
inc
loope
inc
addr16
push
inc
dec
xor
or
js
imul
push
hlt
xchg
sub
xchg
outsl
cmpsb
add
adc
sbb
inc
pop
dec
and
clc
movsl
or
or
mov
sbb
decl
xor
arpl
add
push
mov
fiadds
jne
inc
xor
and
sbb
in
jmp
outsl
in
jbe
mov
hlt
in
popf
jmp
xchg
es
jne
lock
jecxz
sbb
xor
test
sbbb
cwtl
loope
add
mov
add
js
or
dec
lock
push
outsb
prefetch
nop/reserved
cmp
or
jo
adc
sbb
push
xor
pusha
mov
lahf
sub
roll
mov
and
mov
push
mov
xchg
sbbb
test
inc
andb
mov
xor
orb
adc
mov
lret
and
sub
and
inc
add
push
test
mov
dec
add
cmp
adc
sbb
jno
lea
add
out
addr16
push
jge
sbb
pop
sbb
lods
jle
sbb
dec
outsb
push
dec
jne
aaa
pop
sub
ds
mov
ret
sti
negl
imul
dec
int3
shrl
xor
repnz
jbe
clc
sub
cmp
lds
inc
or
in
outsb
or
mull
or
and
xor
jo
push
add
push
add
push
inc
add
add
notb
ret
or
pop
leave
ret
mov
ljmp
jo
sub
push
fmull
and
inc
jg
push
jmp
jle
imul
test
or
ljmp
mov
outsl
pop
jne
cmp
mov
mov
mov
add
push
xchg
dec
pop
xchg
movsb
das
xchg
add
inc
push
push
xchg
mov
pop
xor
or
clc
xrelease
pop
sub
fldl
or
add
outsl
push
insl
push
or
sbb
or
pop
movsl
mov
add
addps
subb
and
testl
movsl
push
stos
xor
push
gs
push
add
outsl
cmp
das
shrb
or
mov
aad
rclb
push
or
push
and
push
mov
xlat
repnz
sub
mov
inc
xchg
les
lods
push
rcrb
call
movsl
adc
mov
test
sub
push
mov
fcomps
mov
push
shlb
mov
inc
pop
stos
pop
icebp
jne
xchg
or
sub
clc
adc
mov
gs
push
push
lea
aad
add
adc
pop
sub
outsb
push
mov
int
pop
sub
sub
sbb
push
add
test
lock
pop
nop
jns
or
sub
adc
inc
cmc
push
ss
or
divb
push
inc
xor
push
push
hlt
sti
jl
jp
pop
inc
inc
outsb
icebp
test
aam
loop
insl
xchg
sar
mov
dec
inc
pop
fmuls
sub
inc
add
inc
xchg
cwtl
insl
dec
inc
inc
xor
push
loop
xor
cmp
push
orb
jp
mov
inc
outsl
neg
mov
sbb
int
adc
xchg
icebp
sahf
mov
jne
dec
mov
sbb
repz
mov
int3
sbb
pushf
lods
mov
pop
inc
test
mov
call
fidivs
push
pushf
xchg
nop
xor
push
adc
sbb
cli
mov
adc
sbb
daa
aam
lock
cmp
icebp
shrb
push
push
jae
adcl
fs
rclb
insb
std
add
pop
fadds
adcb
subl
leave
or
jae
xchg
xor
add
ljmp
daa
jno
pop
push
add
daa
mov
sbb
icebp
ret
xchg
jp
mov
pusha
test
xor
bound
mov
push
ret
cld
fwait
sub
or
lret
lret
cs
call
loope
and
mov
out
or
faddl
inc
jnp
jmp
fsubl
push
cmc
data16
aam
clc
pop
and
push
fisubs
push
and
adc
ret
mov
iret
ss
aam
dec
aad
add
cmp
cmpsb
cmpsl
jno
lcall
mov
add
fcmove
into
fstpl
sub
je
cmp
xor
div
fdiv
loop
inc
icebp
xchg
push
mov
inc
ja
popa
outsb
ljmp
jmp
jbe
and
jp
inc
jnp
call
fs
adc
jno
push
aas
adc
dec
repnz
test
push
adc
xor
mov
sbb
hlt
push
rcrb
xor
mov
mov
clc
lock
fmuls
fistpll
cmpl
and
mov
jbe
jno
xor
xor
jno
inc
shll
addb
add
push
push
int3
mov
push
xor
mov
sub
mov
in
mov
rcrb
call
mov
lods
cmp
inc
test
daa
cmp
testb
xor
or
sahf
jnp
leave
pop
sbb
int
jne
mov
add
mov
mov
inc
add
sbb
sub
xchg
cmp
jg
add
shrb
jge
sub
dec
mov
or
mov
xor
or
xor
aam
popa
jbe
mov
add
inc
dec
and
mull
mov
int
or
mov
or
push
xchg
xor
jle
and
stc
fld
jp
mov
add
pop
hlt
sub
xchg
push
cmp
fistpll
push
sub
cmp
mov
mov
push
mov
pop
in
inc
sbb
cltd
xlat
mov
cmpl
jle
cs
add
mov
decb
ds
popa
xor
shrl
sub
pop
pusha
jno
or
add
mov
xor
mov
push
or
lea
mov
mov
push
insl
lods
adc
sbb
les
or
mov
inc
ja
dec
pop
les
add
adc
pop
pop
mov
dec
push
pop
cmp
inc
rclb
sub
dec
push
adc
mov
dec
bound
jle
jo
jne
jne
push
subb
cltd
sub
sbbb
inc
les
add
movsl
rcrl
add
cmp
lea
adcl
add
cmp
lods
subl
push
adc
stos
pop
mov
or
cmp
adc
push
imul
movsb
xchg
ja
xorb
push
xor
inc
daa
rolb
pop
out
add
lret
xchg
xchg
push
les
and
xor
push
push
mov
fldcw
xchg
add
xchg
sarl
mov
pop
dec
inc
push
rorb
cli
cmp
aas
addl
insb
scas
orb
jb
rolb
inc
mov
inc
pop
cli
out
add
pop
sub
das
mov
add
mov
addr16
inc
hlt
jo
sub
inc
pop
push
jne
push
fs
jns
mov
sbb
ror
dec
insl
int
sub
mov
push
xor
add
clc
cmc
rcrb
xlat
jnp
push
pop
leave
mov
leave
or
jmp
inc
or
int3
mov
fisttpl
inc
sahf
int3
jns
pop
mov
mov
clc
adc
pop
sub
sbbl
mov
sub
push
rclb
xchg
fcmovb
test
ror
jb
cmp
pop
jle
or
sub
leave
dec
inc
lods
or
pop
cli
mov
shll
pop
xor
test
ss
mov
push
push
mov
adc
add
mov
sub
insb
and
or
lods
in
inc
dec
mov
push
imul
fs
ja
mov
mov
dec
sub
adc
movsl
xor
sub
fistpl
jle
das
sub
stos
or
mov
cmpsb
lcall
scas
or
cmp
fistpl
and
sub
or
cmc
cli
jle
push
subb
xchg
adc
mov
adc
adc
push
or
pop
ret
mov
loopne
xor
out
push
adcb
aad
arpl
mov
fistps
or
sbb
jb
and
aam
xchg
push
mov
push
adc
cli
outsl
cmp
or
dec
mov
mov
push
sti
pop
jmp
cmp
add
ja
test
loop
xor
mov
fcmovu
cmc
mov
xchg
or
push
lret
and
hlt
addb
inc
outsb
inc
mov
mov
movsl
adc
mov
cmp
adc
bound
es
bound
gs
xchg
in
mov
adc
push
push
mov
xchg
xlat
aam
sub
imul
sbb
xor
scas
push
insb
and
or
clc
and
sarl
rcrb
mov
hlt
test
cmp
les
push
es
fcmovnb
or
ljmp
mov
inc
add
xor
mov
rclb
or
loopne
dec
movsb
sbb
mov
adc
push
aaa
push
sbb
mov
xchg
jo
mov
movb
sti
dec
and
shll
mov
jo
test
ret
lret
dec
cmovl
mov
pop
jne
out
push
sub
jmp
dec
lods
test
push
inc
jecxz
xchg
push
lret
movsl
arpl
add
cwtl
shlb
or
dec
add
adc
xchg
into
or
push
stos
push
mov
mov
add
sub
jb
nop
cmpsl
xchg
mov
mov
dec
inc
ss
mov
inc
mov
dec
mov
push
jns
mov
or
sub
push
aam
stos
inc
out
arpl
sbb
dec
xor
lea
inc
imul
adc
bound
jb
jne
shrl
jno
in
add
cmp
sub
dec
aaa
mov
or
addr16
add
cmp
add
lret
jb
insb
mov
test
icebp
or
add
push
pop
push
jno
clc
or
dec
fsubrs
test
loop
cli
jp
lock
pop
stos
adc
cmp
les
leave
inc
jl
daa
add
cmp
add
push
stos
adc
ror
inc
rclb
and
mov
inc
pusha
mov
sub
lea
xchg
xorb
sub
pop
movsl
mov
sub
mov
movsb
add
sbb
push
dec
out
cmp
pop
inc
test
stos
cmp
cmp
sbb
cwtl
pop
sarb
adc
mov
sub
or
cmpsl
push
push
mov
push
test
push
push
pop
mov
and
push
push
sbb
sti
movsb
clc
pop
jmp
push
push
mov
cld
insl
subb
cmp
gs
aad
nop
je
push
lods
sbbb
or
push
and
jmp
pushf
add
xchg
cmpb
les
sbb
push
cmp
dec
mov
loopne
fidivrl
jle
mov
lcall
xchg
ficomps
pop
imul
sub
notb
or
mov
jo
push
mov
outsl
push
and
and
inc
mov
dec
adc
lahf
and
dec
test
imul
inc
insl
mov
or
test
movsl
cwtl
repnz
or
mov
jle
mov
pop
fildl
jl
push
les
out
lea
inc
push
out
push
dec
loope
mov
mov
lcall
and
inc
pop
mov
popl
pop
xor
jne
faddl
pop
push
jne
je
add
mov
adc
sahf
adc
sbb
cwtl
and
jae
lea
scas
dec
add
sbb
mov
fidivrl
sbbb
addb
popa
imul
add
jmp
jno
addb
mov
adc
pop
pop
outsb
lahf
sbb
add
les
inc
push
lcall
add
lcall
push
sub
fistl
pusha
rcl
and
push
add
xchg
repz
leave
add
insb
sbb
pop
leave
xor
xchg
adc
and
ljmp
and
test
adc
and
dec
adc
inc
inc
sbb
xor
jns
and
adcb
pusha
imul
jl
dec
aaa
or
popf
fs
add
imul
xchg
mov
fisttpll
dec
add
inc
rcrb
test
subb
mov
ret
imull
or
mov
ljmp
popa
arpl
mov
push
loopne
dec
shl
sti
push
int3
fisubrs
orb
sbb
mov
mov
pop
mov
lret
pop
cwtl
add
mov
inc
arpl
lods
shlb
push
test
test
ja
fcmovnbe
push
jno
mov
movsl
push
push
mov
jno
mov
mov
or
mov
lods
push
rorb
mov
aam
adc
xor
pop
sub
pop
push
outsb
sbb
inc
jno
mov
mov
adc
imul
imul
push
add
sub
ret
or
pop
mov
scas
test
fimull
jo
inc
imul
cmp
mov
jecxz
add
add
cltd
fwait
sub
ret
xor
push
or
fistpl
push
xchg
or
pop
ret
adc
popa
adc
inc
adc
cmpsb
mov
lret
mov
inc
imul
mov
ss
aam
push
or
andl
test
mov
inc
pop
imul
mov
arpl
jae
dec
fldl2e
xor
or
push
adc
xchg
inc
xchg
sbb
adc
jmp
dec
lods
insl
push
sub
mov
push
dec
das
mov
and
fisttpll
and
mov
out
push
pusha
shrl
gs
repnz
and
lods
sbb
sub
cmp
or
loopne
cli
lea
lea
cs
mov
imul
inc
mov
or
mov
sub
outsl
inc
mov
aad
sti
or
adc
orb
fsubs
xchg
incb
pop
push
add
faddl
adc
sbb
lea
mov
mov
mov
cmp
dec
rcr
inc
sbb
mov
movsl
push
test
imul
dec
test
mov
lods
inc
and
inc
mov
sub
dec
sbb
mov
pop
sbb
push
xchg
cld
xchg
lcall
or
rol
jp
subb
xchg
or
add
jno
outsl
mov
lcall
sarl
mov
icebp
sbb
stos
dec
adc
cmp
mov
lcall
sbb
jle
xor
mov
aaa
cmc
xchg
fucomip
jmp
add
in
adc
subb
les
inc
add
ja
pop
push
jae
roll
movsl
pop
inc
jmp
sbb
ljmp
xchg
mov
push
push
mov
rcl
mov
mov
pop
movsl
sub
or
repnz
arpl
inc
push
cmp
lods
sbb
xchg
mov
shrb
dec
xor
test
scas
xlat
sbb
sub
in
notl
mov
out
scas
add
dec
daa
bound
lods
shrb
pop
pop
int3
sbb
int
xchg
js
pop
push
mov
jmp
bound
adc
push
xchg
pop
ret
inc
fnstenv
fisttps
push
sub
dec
pop
pop
mov
add
test
sub
lods
and
pop
incb
sub
or
aas
leave
or
or
nop
in
outsl
or
insl
push
lret
jno
dec
sub
sub
call
cmp
pop
in
lret
push
sub
lock
pop
xor
push
adc
fisubl
stos
adcb
push
push
pop
mov
rep
lods
shll
and
add
sbb
incl
pop
sbb
sbb
push
sahf
xchg
decb
aam
cltd
mov
push
jb
sub
push
jo
add
cs
shlb
out
pop
add
fs
push
xor
sub
mov
pop
es
xchg
or
pop
popa
add
orb
lods
cmp
aaa
fldt
sbb
adc
xchg
adc
push
imul
sub
sbbb
pop
movsl
push
xor
push
xor
movsl
push
jae
outsb
mov
pop
add
adc
push
push
jg
and
loope
pop
fwait
lods
in
rorl
icebp
rcr
sub
add
roll
or
lahf
js
add
das
add
bound
mov
into
scas
nop
jb
adc
mov
mov
test
rcrb
fildll
sbb
cmpsb
sbb
test
pop
mov
push
jmp
lods
gs
jns
inc
adc
adc
adc
insb
xchg
and
xor
xchg
imul
mov
or
or
adcb
adc
and
push
rcrb
cli
lods
pop
cli
pop
fidivs
sbb
mov
sbb
and
jmp
push
xchg
in
mulb
roll
bound
dec
cmp
in
add
aad
dec
stc
or
sarb
add
xor
or
lret
pop
add
dec
pop
enter
push
orl
xchg
dec
movsl
adc
rolb
cmp
aam
xchg
jae
rol
fdivl
push
aas
das
inc
jo
push
mov
inc
add
inc
sub
adc
das
push
dec
pop
push
mov
and
cmp
bound
mov
roll
add
lahf
icebp
add
mov
pop
mov
add
lods
lea
es
addl
push
mov
je
ret
xchg
xchg
xorb
les
negl
sbb
inc
mov
cmp
push
cmp
mov
push
pop
icebp
insl
push
test
push
arpl
dec
fcmovnb
cmp
rcl
push
sub
xchg
int
leave
push
jns
add
xchg
orl
mov
mov
lods
push
push
jg
pop
clc
mov
es
and
data16
je
push
enter
or
mov
sbb
inc
scas
xchg
call
cmp
push
test
scas
mov
jmp
mov
aam
dec
push
movsb
lds
push
inc
pop
push
push
cmp
add
mov
jne
frstor
adc
loopne
push
sub
andb
rep
xor
and
pop
jmp
movsl
lods
push
push
pop
jno
pop
push
adc
sbb
push
popa
subb
outsl
lcall
lahf
adc
push
mov
les
inc
sbb
push
jmp
jle
push
adc
push
add
push
push
rclb
sbb
into
xchg
ss
xor
imul
push
adc
add
mov
ss
inc
cmpsb
and
push
adc
imul
clc
push
dec
cwtl
add
dec
arpl
push
pop
cs
push
cmp
mov
jle
and
aaa
jb
push
or
dec
sub
jmp
ds
lods
loope
test
lods
and
cmp
inc
mov
sub
push
mov
mov
pop
imul
loopne
dec
push
dec
fstps
data16
shrl
sub
xchg
pop
into
lahf
std
or
inc
add
sbb
cmp
and
or
out
dec
cmp
mov
das
inc
mov
in
adcl
stos
mov
pop
mov
sahf
xchg
or
mov
push
sub
in
xor
adc
inc
push
lock
inc
shll
scas
aam
push
push
test
xor
mov
and
push
sbb
test
cmp
test
mov
push
movsb
cmp
sub
in
jbe
test
adc
outsl
out
xor
mov
push
ret
enter
xchg
mov
inc
xchg
imul
pusha
cmc
or
pop
and
rcr
dec
inc
repnz
rclb
lcall
jle
push
lods
rcll
sbb
sbb
adc
enter
or
std
and
je
dec
das
cmp
sbb
sar
stc
add
push
mov
xchg
xchg
sub
mov
or
jb
sbb
inc
xor
add
pop
icebp
lahf
imul
aad
dec
pop
and
mov
push
xchg
ljmp
pop
aaa
ret
xchg
push
outsb
test
pop
push
xchg
jo
repz
andb
pop
xchg
outsl
sub
mov
dec
add
or
push
stos
xlat
lods
and
push
push
in
lock
xchg
dec
sub
imul
or
rorl
test
pop
mov
mov
mov
mov
pop
mov
sub
lods
cmp
xor
push
jbe
cmp
shlb
ret
fyl2x
cmp
push
inc
and
add
and
inc
cmpsb
push
jb
mov
adc
pop
and
aam
cs
inc
pop
adc
xor
sbb
rcrb
mov
dec
pop
es
sbb
inc
push
das
pop
xor
xchg
pusha
xor
xchg
test
mov
cmpb
push
pop
adc
jle
sub
insb
jge
aaa
add
shll
cmpsb
dec
inc
mov
scas
mov
stos
insl
sbb
pop
add
mov
jno
ss
dec
lea
icebp
in
hlt
cmp
push
imul
roll
or
jl
mov
and
sbb
adc
push
mov
dec
sbb
and
and
mov
mov
push
inc
stos
adc
nop
lret
aad
fdivp
jb
stos
fisttpl
adc
adc
es
and
gs
sbb
mov
repnz
lahf
push
sub
shlb
shrl
rcrb
push
push
xchg
xor
ss
pop
inc
shl
jle
lods
push
and
lret
xchg
pushf
stc
fwait
ret
sub
add
idivl
iret
mov
popa
sub
mov
push
add
je
mov
adc
sub
fbld
enter
shl
push
ds
xor
push
and
fldl
mov
sub
mov
je
mov
mov
push
mov
adc
insb
or
pop
xor
inc
or
push
ret
push
inc
outsl
nop
cmp
or
lahf
mov
add
adc
pop
ror
mov
cmp
push
nop
out
sub
push
jae
call
or
fwait
invlpg
sub
fcoms
in
and
and
out
or
sub
and
lock
repz
repnz
and
push
push
and
mov
pop
ficoml
adc
add
xor
xor
sahf
lock
xchg
push
lea
ss
xlat
sub
cli
push
insl
icebp
add
rclb
adc
sub
sub
icebp
dec
ficoml
mov
push
jae
jle
mov
cmp
push
fwait
sub
pop
and
movups
lret
and
add
push
loopne
inc
cmp
cld
int
ret
add
ja
jle
mov
fisttps
push
xor
sub
pop
mov
rcll
or
stc
mov
fidivrs
rcr
movlps
adc
jmp
adc
lret
pop
pop
fsubr
push
test
jbe
and
xchg
cmp
pusha
sbb
dec
stos
xchg
pop
xchg
push
ljmp
adc
and
fistpl
cmp
jo
push
xchg
mov
shll
aam
cs
outsb
rcll
ret
pop
inc
add
inc
cmpsb
mov
lods
mov
xor
stos
lds
mov
in
push
push
inc
lsl
or
push
cmp
test
mov
rorb
int
in
test
roll
mov
jp
mov
cwtl
sbb
loop
sbb
xor
mov
call
lods
cmp
je
inc
sbb
mov
data16
andb
shl
mov
test
mov
stos
xchg
pop
data16
insl
sbb
or
loop
outsl
out
mov
popf
jmp
mov
stos
sub
push
movsl
movsl
jno
ror
test
pop
sete
add
shlb
test
sti
addb
adc
aad
xchg
fucomp
mov
push
xchg
sarl
sbb
pop
shrl
mov
negb
clc
stos
inc
stos
push
sub
in
cli
adc
xor
or
std
fcoml
ss
inc
cwtl
sbb
add
xor
add
jno
add
div
add
mov
dec
mov
dec
cwtl
dec
lahf
in
pusha
mov
and
push
adc
test
cmp
dec
sub
xor
test
adc
addr16
or
xor
mov
mov
imul
sbb
xchg
xor
rcrl
inc
les
sbbb
mov
inc
ds
lods
adc
xchg
mov
sbbl
push
push
test
mov
ret
push
mov
adc
sbb
and
add
clc
orl
scas
sar
cld
and
xor
mov
or
jo
add
mov
sbb
and
mov
rolb
dec
xor
lea
or
sbb
push
pusha
pop
fwait
mov
imul
add
xor
adc
inc
insl
inc
inc
roll
mov
xor
pop
clc
subb
push
lods
mov
mov
in
test
xor
rorl
add
mov
mov
push
and
mov
and
xor
ljmp
outsl
jle
rolb
inc
arpl
notl
or
xor
sub
orb
push
cli
xor
lahf
subb
pop
mov
mov
insl
mov
dec
stc
push
or
adc
adc
insl
mov
mov
push
dec
push
int
jne
or
iret
lods
arpl
push
rol
push
xor
loopne
rol
jbe
push
sbb
test
addr16
mov
icebp
sbb
rcrb
inc
sahf
das
inc
pusha
or
addb
adc
adc
push
ret
fst
lea
mov
xchg
dec
xchg
fldt
das
jg
push
inc
adc
pop
adc
and
and
xor
in
mov
test
inc
add
sbb
leave
cmc
jns
les
aad
rorb
pop
sbb
dec
ljmp
jmp
adc
inc
adc
dec
dec
push
icebp
mov
cmp
jbe
push
adc
loopne
jo
sub
mov
jge
and
mov
pop
inc
enter
fistl
adc
jle
jbe
sbb
mov
inc
adc
lret
pop
inc
je
les
test
sub
push
aad
mov
mov
sbb
fisubs
inc
lea
jmp
cmpsb
cmp
mov
pusha
jmp
jno
mov
jne
or
data16
xchg
rcrl
or
jg
xorb
jle
popa
pop
popf
enter
add
test
xor
and
adc
sbb
push
dec
push
je
jge
add
mov
cmp
ja
mov
fildl
mov
mov
mov
aas
shrb
sub
je
scas
cmc
and
inc
mov
add
and
divb
mov
mov
mov
adcb
mov
or
inc
cmpsb
xor
add
adc
and
mov
pop
mov
sbb
push
shlb
push
pop
adc
mov
jg
push
add
or
adc
add
adc
ret
or
pop
or
dec
sbb
test
add
add
mov
fnstcw
xchg
mov
fists
add
js
ljmp
mov
data16
mov
rcll
xor
xchg
mov
cmpsb
out
inc
dec
std
scas
mov
pop
add
rorb
test
repz
jmp
pop
xchg
add
xchg
sarl
inc
fildl
mov
cltd
mov
dec
mov
add
or
rcll
adc
mov
add
daa
mov
dec
lods
push
sub
pusha
or
jbe
mov
add
cli
aas
or
lahf
push
sbb
sahf
add
xchg
mov
or
and
aad
push
add
rolb
lret
mov
push
and
pop
sti
cmp
add
lahf
sub
test
push
mov
ljmp
rcrl
inc
insb
sbb
lret
push
mov
mov
lahf
jge
and
sbb
mov
sbb
xchg
dec
mov
gs
xor
xchg
hlt
pop
imul
inc
cmp
push
push
sbb
mov
out
mov
mov
cli
mov
pop
sub
das
dec
bound
xor
adcl
push
lret
push
lods
fists
call
jg
sbb
stos
movsl
repnz
mov
mov
or
shrb
cmp
inc
xchg
or
jo
xor
inc
jne
mov
movsl
add
sbb
or
enter
addl
js
jmp
push
pop
rcrb
popf
rcr
and
mov
inc
movsl
rolb
pop
pop
or
lcall
aaa
mov
aad
out
push
add
jb
mov
fcmovnu
cmp
pop
lock
push
adcl
mov
movsl
stos
subb
mov
scas
jle
cmp
lods
pusha
repz
iret
insl
stos
mov
or
xchg
push
xor
add
push
or
cmp
stos
xor
fsubl
xchg
cli
or
jns
out
scas
cmp
adc
lods
out
pusha
icebp
lods
lock
clc
push
jb
sub
adc
lahf
xlat
pop
and
inc
xor
push
daa
adcb
sub
ret
mov
arpl
push
push
mov
out
push
sub
and
inc
test
push
add
rcrl
cld
xchg
mov
mov
les
roll
cmp
adc
push
fstl
or
js
ds
push
xor
ret
and
add
xor
ret
psrlw
or
xchg
mov
rcrl
adc
xchg
cli
popf
icebp
push
in
lea
das
xor
fdivrp
shlb
lret
dec
pushf
movsb
inc
push
cmpsl
and
sbb
xchg
dec
xchg
jne
pop
inc
shrl
test
sub
xor
cmp
fisttpll
mov
pop
xor
and
add
rcrl
mov
dec
jne
or
mov
add
cmp
fimull
sbb
std
sub
rclb
call
mov
xlat
mov
mov
push
push
xchg
pop
push
add
add
mov
adc
xchg
jb
jp
sti
adc
cmpl
int
push
push
or
mov
adc
xchg
rcll
in
popa
push
sub
scas
pop
sub
test
test
inc
shrb
inc
push
push
add
mov
test
mov
add
pop
sub
ret
cmp
push
icebp
sbb
xacquire
dec
cmp
ret
or
and
add
xchg
mov
push
push
sbb
mov
push
lea
or
ljmp
sub
rol
jno
xor
mov
or
mov
fiaddl
pop
inc
sbb
mov
icebp
or
xchg
andl
dec
mov
mov
mov
push
xor
pop
sub
xor
outsl
inc
xchg
sbbb
jge
lods
and
ficomps
popf
shll
test
aam
icebp
lods
mov
pop
mov
mov
or
icebp
mov
push
sub
adc
push
mov
test
adc
add
aad
and
ret
sbb
inc
cmp
mov
vcvtss2sd
fidivl
das
shlb
outsl
clc
ljmp
jae
mov
mov
jnp
mov
movb
mov
insb
jg
dec
xor
adc
jnp
adc
insl
scas
push
stos
push
or
push
xchg
jle
sbb
pop
inc
test
outsl
push
adc
sti
popa
and
sub
and
jae
dec
clc
jbe
lea
adc
ret
repz
sub
push
rorl
inc
imul
mov
dec
push
mov
xchg
nop
and
inc
mov
adc
stc
cmp
xchg
pop
mov
test
xor
add
lcall
sbb
mov
sbb
rol
and
adc
add
mov
into
sub
das
mov
loopne
push
roll
andb
cmp
mov
stc
dec
aad
push
sub
sbb
jl
jl
mov
add
shrb
int3
push
and
xor
or
pop
add
ret
jo
jl
fmuls
inc
sahf
mov
ss
and
orb
sbb
mov
js
popa
add
lea
push
inc
jp
sbb
xchg
scas
movsb
andb
iret
xor
add
or
or
rclb
shrb
enter
add
repz
andb
loope
mov
jae
mov
mov
pusha
insb
mov
fidivs
add
js
push
les
and
adc
movsb
daa
sbb
aas
sbb
dec
add
adc
test
mov
rorb
negl
mov
cli
ja
ss
lcallw
adc
or
or
add
lea
imulb
es
call
push
mov
xchg
mov
jb
stos
lea
push
push
or
xchg
push
add
push
cs
inc
mov
mov
cmp
ficompl
enter
cmp
pop
test
imul
inc
inc
das
adc
xor
dec
insl
push
mov
add
shlb
rcll
bound
shll
jg
sbb
xchg
sub
or
lahf
xchg
mov
stos
aam
add
dec
sub
dec
cmp
orb
jno
lods
inc
sub
je
fcmovbe
xor
sub
scas
mov
mov
push
push
roll
bound
adc
in
ret
push
mov
jne
shlb
pop
pop
push
adc
mov
sahf
cmpsb
push
mov
movsb
test
jg
shl
out
cmp
mov
mov
add
adc
mov
test
mov
outsl
pop
lcall
movsl
mov
and
ficomps
stos
testb
jg
aad
push
and
rcrb
aam
rcrl
sbb
inc
inc
mov
lods
nop
dec
out
sbb
add
push
mov
jbe
adc
jle
mov
mov
pop
scas
mov
sbb
stos
dec
push
test
imul
mov
inc
cmp
or
aam
cmp
mov
outsb
dec
jbe
enter
mov
sub
or
pop
call
cmp
jle
mov
mov
xchg
bound
inc
sub
andb
movsl
xchg
cmp
jb
les
mov
xlat
fadds
jno
fs
mov
mov
push
mov
aas
sbbb
xor
add
push
sahf
mov
lahf
adc
pushf
icebp
das
shrl
cmpsl
pop
inc
lock
imul
adc
mov
push
sub
or
test
push
aad
dec
mov
or
xchg
out
mov
rolb
stc
inc
mov
mov
mov
add
push
mov
cwtl
inc
adc
sub
cli
adc
inc
lods
sbb
and
mov
outsl
adc
or
mov
ret
test
pop
inc
int3
rolb
adcb
mov
mov
pop
test
jno
and
add
in
imul
push
xchg
lret
in
aad
push
mov
add
addb
ss
xor
lods
jb
pop
add
adc
cmp
xor
adc
aaa
mov
aam
mov
pop
adc
cmp
mov
push
ss
add
fiaddl
push
push
mov
pop
inc
pop
pusha
scas
popf
push
test
fdivs
jnp
add
pop
lods
mov
test
cmp
ret
push
xor
mov
inc
pop
cmp
jne
shl
dec
adcb
in
mov
scas
push
pop
pop
sub
hlt
push
mov
cmp
push
rcll
rcrb
mov
dec
icebp
lods
decb
sub
lea
ret
mov
inc
inc
sub
daa
sub
or
jmp
ljmp
mov
sub
dec
jge
aam
cltd
out
addl
and
jmp
add
cmpsb
inc
daa
and
repz
jmp
mov
xchg
das
shll
popf
dec
cwtl
rcll
or
rolb
mov
push
lock
mov
xchg
mov
dec
mov
sahf
adc
in
jge
add
stos
int3
xor
insl
sbbb
inc
fs
inc
jp
int
andb
or
push
scas
push
test
adc
fwait
and
mov
sbb
cmpb
leave
inc
xchg
xor
jle
mov
jmp
jle
inc
je
xlat
repnz
mov
mov
jo
invd
or
jg
shl
cmp
jbe
fsubrl
pop
push
inc
add
daa
sar
jg
inc
mov
adc
add
or
jb
push
mov
dec
and
sbb
dec
and
das
sub
gs
iret
push
mov
popa
or
rcll
or
fldcw
mov
push
add
test
adc
dec
adc
rcl
push
ss
xchg
lea
push
mov
dec
out
lret
imul
divl
dec
mov
xchg
sub
push
cmp
dec
andb
out
pusha
xor
iret
fisttps
or
scas
sub
shlb
lods
adc
push
movsl
dec
mov
aad
push
fcompl
push
xchg
xchg
cmpsb
in
sub
loope
rcrl
cs
cltd
pop
imul
les
xchg
mov
insb
push
test
xor
push
jp
ret
inc
nop
jle
mov
push
mov
lods
clc
inc
lea
fdivs
inc
imul
push
push
mov
jo
insl
xchg
push
pop
xchg
or
lahf
jmp
inc
lret
das
cmp
add
ret
push
cli
or
add
and
clc
pushf
pop
adc
clc
cmp
cmpb
add
jns
les
mov
ljmp
cld
and
and
inc
or
leave
inc
and
pop
rcll
shl
or
xor
pop
push
stos
add
mov
jb
or
les
or
inc
push
dec
mov
add
dec
jge
sbbb
add
adc
and
xorb
push
jb
mov
jbe
xchg
sub
xchg
jne
rorl
flds
gs
ficomps
ja
mov
push
fidivrl
mov
adc
xchg
add
xchg
je
mov
mov
or
xor
mov
jnp
dec
xchg
mov
es
or
inc
push
and
push
aaa
sti
dec
mov
adc
lcall
sub
popa
jge
jmp
push
inc
ret
dec
push
jb
adc
mov
mov
or
push
popa
adc
repz
das
sub
cmp
pop
popa
cmp
mov
call
push
or
fs
mov
add
adc
out
mov
out
adc
mov
and
dec
jbe
arpl
shrb
stc
clc
add
sub
sub
loopne
std
mov
mov
mov
mov
mov
lret
xchg
jae
cmpsl
pop
ret
lds
sub
push
stos
sub
sbb
mov
mov
push
xor
dec
fwait
les
push
pop
push
lret
les
clc
addl
stos
adc
test
ss
movsb
and
or
stos
cmp
in
adc
test
inc
xchg
jns
pop
stos
push
push
popa
dec
scas
jno
inc
and
flds
xor
rolb
sarb
xchg
orb
inc
mov
pop
pop
push
mov
fisttpl
mov
pop
jno
push
stos
xor
sub
adc
dec
xor
and
lahf
mov
daa
xchg
adc
and
sbb
out
icebp
hlt
add
mov
xchg
push
sub
pop
std
out
add
add
mov
icebp
sub
mov
sub
push
pop
jbe
incl
push
mov
lods
add
and
dec
orl
sbb
mov
mov
leave
push
inc
rolb
mov
push
sahf
je
into
mov
sub
movsbl
ret
paddq
inc
aad
dec
push
ficoms
inc
sbb
xor
movsb
mov
subb
dec
jo
pusha
aad
hlt
mov
jmp
repnz
sbb
ja
inc
orb
mov
sbb
add
dec
or
mov
push
inc
inc
imul
stos
jne
add
pop
in
outsl
aas
or
jmp
sbb
fcompl
add
mov
call
test
cli
cli
mov
push
inc
xchg
subb
addb
fildl
outsl
lcall
xchg
cli
pushf
push
rcll
cmp
mov
mov
rcl
in
das
mov
push
adc
sbb
xor
add
add
in
stos
mov
ret
xor
jno
mov
addb
sbb
inc
popf
pop
inc
mov
xor
stos
addb
clc
push
lods
rclb
stos
push
mov
or
fisubrl
cmp
insb
adc
sub
sbb
push
subb
imul
bound
int
imulb
mov
jle
enter
mov
mov
xor
test
sbbl
mov
lea
mov
dec
les
and
mov
repz
or
jb
inc
jae
in
sub
sbb
cmp
movsl
movb
xor
mov
addb
sbb
inc
test
lahf
adc
and
icebp
pusha
inc
sbb
inc
int
jno
add
popa
mov
push
mov
lock
adc
push
push
xchg
or
add
pop
or
in
pop
push
jne
mov
mov
mov
int3
push
jne
ret
pop
adc
movsb
orb
movsb
and
add
push
aas
adcl
enter
outsb
or
ljmp
adc
xchg
or
adc
popa
xor
pop
adc
xor
xor
and
icebp
adc
mov
mov
mov
out
push
std
notb
dec
cmpsb
sub
and
test
inc
push
xor
or
xchg
ss
pop
xor
pop
add
adc
push
push
sub
add
mov
and
mov
adc
adc
sbb
cmp
add
add
cli
sub
or
dec
sbb
dec
stos
add
idiv
sub
cs
sub
inc
xor
push
adc
or
sub
mov
and
pop
dec
and
inc
mov
push
int3
dec
sbb
test
pop
sub
add
add
jb
cmp
sub
test
pop
xor
movsl
stos
push
sub
xor
mov
pop
push
les
push
jae
adc
mov
subb
pop
push
movsl
or
inc
mov
mov
inc
inc
fsubrs
cmpb
and
cmp
bound
lds
inc
insl
sbb
pop
jge
inc
stos
push
cwtl
ret
jle
push
addb
xchg
test
sbb
pop
mov
mov
aam
xchg
mov
pop
aad
ljmp
inc
xchg
sub
inc
add
mov
pop
push
imul
mov
mov
in
pop
inc
sub
push
pop
sbb
mov
dec
punpckldq
xorb
lds
loop
push
sub
inc
les
mov
movsl
stos
inc
sbb
les
outsb
mov
loop
add
sub
enter
mov
xchg
pop
mov
sbbb
decl
fnop
and
sarl
add
sbb
lods
push
das
xor
clc
mov
les
push
sbb
mov
adc
fs
push
sbb
popf
push
imul
mov
gs
xorb
ret
inc
in
insl
mov
sahf
adc
lods
rclb
pop
sub
shrl
mov
mov
or
xchg
mov
xchg
test
imul
xor
mov
loopne
les
adcb
mov
pusha
leave
and
push
mov
mov
inc
inc
test
jno
mov
adc
pop
push
xchg
mov
sbb
add
cmpsl
jne
mov
push
subb
mov
mov
and
inc
push
xor
dec
mov
fst
push
cmp
popa
and
pop
imul
push
je
add
add
pop
and
cmp
iret
jle
push
jno
outsl
jle
mov
push
jno
dec
sbb
lods
jp
std
testl
lcall
add
push
dec
adc
pusha
call
xor
and
pop
adc
push
push
fldcw
in
cwtl
or
or
push
inc
push
adc
aad
mov
and
sub
fwait
loop
inc
xor
aad
lds
and
popa
sub
cmp
clc
add
add
adc
test
adc
pop
in
rolb
gs
adc
pop
ret
jmp
cmpb
or
inc
add
xchg
insb
pop
sbb
mov
xor
test
pop
push
cli
mov
pop
pop
xchg
ss
mov
inc
mov
mov
adc
mov
xor
add
add
pop
or
add
in
aam
stos
mov
xchg
xchg
in
mov
add
add
test
jb
daa
xchg
sub
stos
add
inc
pop
ficompl
or
je
push
mov
push
lea
xchg
ret
stos
imul
push
push
push
rcr
sub
xchg
ficoml
and
mov
sub
sbb
push
hlt
or
push
jnp
test
stos
push
add
jb
incl
fnstsw
fcomps
test
outsb
gs
inc
cmpsb
out
pusha
pop
mov
or
jb
cmp
or
dec
jno
pop
out
movsl
mov
add
test
xchg
or
ret
or
cli
or
stos
inc
imul
dec
lods
mov
iret
jnp
das
inc
add
xchg
cmc
pop
pop
jo
fcomi
popf
and
cmp
sub
pop
jge
test
jae
or
insl
sub
pop
and
pusha
mov
mov
add
stos
ret
lret
xor
mov
push
dec
dec
cmp
mov
add
mov
orb
outsl
mov
sbb
xchg
cs
lahf
push
mov
pop
fldenv
test
stos
inc
add
andb
scas
mov
mov
scas
lods
rcr
ss
cmp
sub
pop
jle
scas
jb
cli
push
test
xchg
scas
mov
push
mov
ret
jae
push
roll
xchg
jg
adc
mov
aam
mov
cmpl
adc
pop
cld
jg
inc
test
das
add
sub
scas
shll
dec
enter
inc
popa
and
push
cmp
adc
push
je
movsl
inc
andl
and
mov
adc
shrl
mov
mov
pop
push
rorl
mov
push
stos
inc
imul
popf
cmc
adcl
fisubrl
pushf
xchg
mov
data16
pop
sub
js
pop
imul
rcll
add
or
gs
sub
test
negl
popa
mov
push
inc
ficoml
test
pop
mov
inc
cwtl
aas
push
cmp
lods
mov
insl
test
cmp
sub
add
pop
push
sub
fnsave
int
data16
inc
imul
test
lahf
push
movsl
mov
mov
xor
dec
scas
sub
push
sub
mov
shll
or
mov
xor
sbb
cpuid
mov
adc
mov
cld
loop
xchg
push
and
sub
shrl
in
inc
int
mov
push
sub
cmp
std
lock
clc
dec
add
pop
pop
jnp
sbb
mov
push
sbb
fcompl
test
test
pop
cmp
out
pop
mov
mov
shll
mov
push
int
mov
sbbb
and
adc
cmp
mov
inc
or
imul
pop
pop
fisttpll
es
and
inc
mov
push
inc
subl
pushf
ret
or
outsl
sub
mov
or
sub
addl
sbb
add
popa
test
test
ret
out
dec
imul
movsl
test
mov
xchg
jno
imul
dec
bound
push
jb
in
pusha
mov
inc
lods
push
loop
dec
pusha
push
push
lods
push
dec
ror
and
adc
mov
insl
adc
fucompp
push
lods
push
mov
adc
outsb
sub
and
push
sub
cwtl
xchg
jne
push
and
jo
inc
popa
mov
add
sbb
mov
negb
mov
xchg
fbstp
popa
out
xchg
imul
mov
mov
lcall
test
cmp
jbe
ss
pop
fldt
cwtl
ret
mov
cli
in
or
std
rcrb
cmp
xchg
dec
cmp
add
or
mov
inc
addl
cmp
or
xor
cmp
adc
pop
insb
push
mov
aad
sbb
lea
cmpsl
int
imul
push
sub
or
mov
dec
test
push
jmp
rorb
add
dec
int3
cmp
rclb
mov
pop
scas
adc
es
add
int
ret
sti
shll
xor
pop
cli
shrb
push
enter
or
mov
mov
lea
jno
add
sub
cmp
stos
add
fcoms
mov
pushf
subb
insb
inc
imul
mov
push
push
and
mov
jne
pop
mov
add
pop
movsl
mov
mov
sub
mov
sbb
sub
decl
jns
push
or
dec
sbb
xor
push
test
loop
stos
out
insb
cwtl
sub
test
push
jp
mov
jmp
xchg
pop
scas
stc
pop
fisubrl
xor
xor
inc
stos
mov
sub
push
scas
add
sbb
sbb
movsb
in
or
adc
testl
xchg
xchg
bound
or
push
mov
dec
mov
push
pop
mov
mov
movsb
movsb
idivl
or
das
sti
mov
add
mov
mov
sbb
mov
inc
rorl
xor
imul
outsl
mov
push
adc
ds
cmp
inc
shll
mov
sbb
cs
xor
addr16
dec
push
bound
jns
and
sbb
add
jb
xlat
jo
add
push
sub
xor
dec
cli
mov
lods
push
push
mov
xor
xchg
xor
ficoms
popa
mov
push
push
mov
add
adc
test
inc
ljmp
lcall
inc
jle
sbb
xchg
gs
enter
outsb
mov
lcall
ja
out
mov
mov
push
mov
mov
sbb
push
clc
push
mov
test
popa
push
lea
test
repnz
lea
clc
mov
inc
push
jmp
sbbb
add
sbb
test
push
loope
jb
push
lea
push
sub
cmp
mov
xchg
ret
lea
push
mov
jo
sbb
mov
frstor
in
push
adc
pop
test
sub
xchg
dec
or
jno
outsb
das
test
call
lcall
cmpb
mov
mov
cmp
in
xlat
push
incb
mov
aad
rolb
imul
in
test
leave
dec
outsl
mov
insb
mov
scas
xor
jecxz
nop
inc
mov
into
in
mov
sub
mov
or
mov
inc
dec
aaa
pop
lahf
or
jnp
pop
lock
mov
xor
add
sarl
dec
stos
pop
into
cmp
xor
imul
das
in
addb
test
mov
push
or
les
lea
push
lcall
or
pop
mov
popa
aas
xor
scas
cs
sbb
sbb
or
add
outsl
fstpl
push
aam
cwtl
fisubl
xchg
pusha
mov
dec
xor
mov
mov
insl
repnz
inc
cwtl
pop
lods
aad
cli
xor
push
es
push
cmp
mov
stos
aam
or
mov
mov
or
sub
je
fisttpll
pop
test
xor
popf
xor
jb
add
add
sarb
mov
jl
mov
lea
and
pop
mov
sarb
lods
add
stos
loop
popf
mov
xor
inc
popa
daa
subb
testb
fldl
xor
rolb
cs
mov
sub
pop
scas
popa
mov
push
mov
mov
pushf
out
jo
add
cmp
mov
test
xor
call
pushl
sahf
testl
les
pop
lea
xchg
popa
shll
jo
push
fwait
dec
sti
dec
mov
jl
lea
or
mov
push
dec
lods
inc
sub
pushf
push
rcl
push
xorl
jmp
fsubrs
inc
sahf
xor
jae
rcl
inc
testl
mov
or
ds
inc
mov
xor
cmp
sub
jns
data16
mov
or
js
push
mov
shlb
inc
int3
pop
addl
mov
xchg
or
dec
aaa
inc
adc
and
jb
push
scas
mov
inc
mov
jne
sub
mov
mov
pop
rorb
lods
push
movb
inc
sub
adc
pop
or
push
out
xchg
pusha
pushf
add
loope
push
mov
xor
fadd
push
sub
or
pop
xchg
add
aam
popa
xchg
jb
mov
push
dec
xor
push
mov
mov
imull
pop
sahf
cwtl
shl
into
adc
xchg
xchg
aam
lods
or
pop
and
test
xchg
movsl
push
push
jg
pop
bound
jo
lods
jmp
xchg
push
mov
and
in
test
and
push
lcall
pop
imul
test
outsl
orl
pop
sbbl
sub
lret
push
sti
cmp
and
cmpsl
daa
or
push
ret
mov
push
fisubl
add
pop
je
xor
cwtl
push
mov
sub
add
xchg
jecxz
pop
cmp
lcall
mov
mov
lret
add
roll
add
test
mov
iret
mov
mov
xchg
outsl
mov
or
mov
mov
mov
cmp
push
xchg
push
jb
lea
test
lcall
mov
pop
inc
mov
inc
mov
sub
inc
ret
push
jmp
cmp
adc
test
add
adcl
jo
mov
lcall
lahf
inc
xlat
ret
sbb
mov
and
ds
cmp
pop
lds
jb
stc
inc
cli
push
test
stos
add
inc
push
or
xchg
mov
stos
ret
adc
add
adc
mov
rcrb
adc
es
outsb
push
les
cmpsl
xchg
sub
push
push
popa
lahf
dec
in
out
shrl
push
push
jno
jmp
dec
lea
ret
inc
sbb
sbbl
sub
or
andl
adc
inc
test
jns
mov
in
dec
pop
jae
or
cmp
or
cwtl
sub
mov
xor
inc
sahf
xchg
insb
mov
dec
lods
addr16
sti
jge
adc
pop
xchg
push
popa
jmp
mov
pop
pop
xchg
or
pop
sarl
sbb
lods
push
mov
dec
cmp
adc
xor
pop
and
mov
test
lea
rcll
ljmp
add
xor
jbe
fstl
lods
push
clc
mov
add
mov
add
add
fistpll
outsl
mov
push
je
mov
insl
lods
push
stos
lret
push
push
mov
or
sbb
cmpsb
cmpsl
add
mov
adc
mov
push
push
add
inc
test
jmp
xor
lret
testl
je
and
pop
addl
lea
mov
mov
inc
andb
adc
mov
push
ss
adc
jo
iret
stos
xor
test
dec
mov
scas
push
dec
lahf
scas
xor
sub
es
adc
addb
pusha
inc
xor
pop
sbb
pop
mov
jne
cmp
sbb
push
sub
push
push
popa
rorb
insb
test
testl
or
mov
dec
mov
adcb
hlt
xchg
mov
xor
mov
mov
movsl
inc
adc
or
scas
adc
jmp
or
jge
push
lods
notb
fstpl
aam
movsl
push
add
mov
adc
out
les
push
push
in
jl
push
or
push
pop
mov
orb
push
xchg
inc
pop
sbb
sbb
adc
lcall
sub
adc
lcall
adc
aam
push
loopne
adc
cmpsb
inc
mov
or
cs
je
adc
fpatan
popa
push
sub
outsl
adc
mov
xchg
mov
mov
lods
add
lods
mov
decl
mov
jb
adc
lea
cwtl
xor
sbb
sbb
pop
call
or
add
push
icebp
sbb
or
push
sub
scas
mov
adc
push
adc
dec
mov
insl
sub
negl
fwait
mov
addb
cmp
adc
adc
or
int3
pop
xchg
jle
inc
adc
loopne
cwtl
push
xchg
lods
mov
sbb
pop
push
cmpsb
paddsb
add
jl
sbb
push
mov
dec
jecxz
cli
add
imul
sbb
mull
sub
popa
dec
int
test
ja
test
push
pop
pop
jb
and
mov
add
mov
lods
rcrl
jp
push
sub
cltd
test
dec
nop
cmp
jo
popa
mov
add
fucomi
sbb
stos
std
cli
jnp
test
push
stos
lods
jo
mov
sbb
cmp
repz
pop
dec
mov
test
test
mov
push
addl
push
les
jae
lods
fdivs
dec
pusha
popa
sub
add
les
push
lods
push
pop
xor
xchg
mov
pop
xor
lods
les
adc
add
clc
daa
or
shrb
mov
test
mov
test
pop
adcl
cmp
sbb
mov
cli
test
jae
inc
insb
push
cmpl
cs
negl
push
push
popa
inc
roll
push
fidivl
xor
dec
hlt
js
lea
sbb
mov
test
arpl
jb
test
dec
push
mov
out
cwtl
or
and
shrb
rcll
inc
notl
adc
xor
adc
cli
mov
push
pop
into
cmp
lods
nop
test
movl
cmp
pop
hlt
push
int
push
sub
push
dec
jecxz
xchg
or
jo
pop
xorb
leave
xor
mov
push
dec
or
in
push
frstor
jno
lahf
and
or
ficoms
mov
popf
dec
push
jae
add
lret
lret
in
shlb
lcall
stos
test
or
addr16
mov
sub
push
or
add
pop
sub
pop
xchg
mov
xchg
sub
push
pop
mov
adc
pop
lods
aad
dec
jnp,pn
rcll
aas
das
and
adc
inc
pop
or
push
out
and
and
int
stos
popa
inc
push
push
je
hlt
cltd
movsb
mov
jae,pt
outsl
aam
mov
insb
sahf
sub
jne
je
lahf
and
rorl
push
outsb
lahf
jns
pop
mov
repz
rcl
mov
cmp
cwtl
mov
lea
mov
hlt
cld
loope
lea
ds
cmp
ss
addb
ret
aam
jo
mov
lea
lret
out
dec
lods
in
mov
dec
and
and
pop
and
adc
orl
cmp
add
sub
movsb
jb
popa
mov
xchg
call
pop
pop
pop
ret
push
lahf
add
push
dec
pop
or
or
mov
mov
fwait
push
mov
xor
ret
mov
push
mov
sub
and
add
cmp
adc
ja
push
pop
mov
inc
cli
lods
inc
inc
lods
push
sbb
mov
jb
xor
sbb
sbb
fidivrl
xchg
popa
and
shrl
xchg
sub
or
decl
ficoml
mov
push
mov
movsb
cwtl
sti
inc
push
lock
cli
sub
xchg
pop
ret
insl
test
and
xchg
stos
push
jb
adcb
push
inc
mov
cli
negb
stos
neg
push
jb
dec
push
push
jno
mov
or
inc
pop
pop
adc
daa
push
rcl
sbb
inc
add
shll
mov
mov
andl
es
mov
pop
xchg
add
enter
or
xchg
andl
xor
mov
add
leave
inc
ljmp
cmp
xchg
fldcw
jnp
popa
push
frstor
test
cmc
jg
mov
pop
xor
xor
in
test
int
aas
pop
push
push
idivb
push
stos
add
add
ss
add
pop
or
xor
cmp
cmp
push
leave
xchg
andl
xchg
clc
loope
push
pop
mov
sub
mov
lea
inc
adc
fwait
sti
fucomip
lea
push
lcall
pop
mov
mov
lods
inc
add
cli
jmp
add
adc
cli
mov
rcrb
cmp
add
in
les
mov
push
test
insl
outsb
das
inc
mov
push
mov
cwtl
imul
lret
pop
push
scas
mov
inc
repnz
mov
add
cltd
ss
adc
into
fsubrs
push
dec
imulb
push
add
add
sarb
add
andb
or
pop
cmpl
push
push
movsl
lods
mov
cmp
and
mov
cwtl
imul
sub
stos
pop
mov
clc
mov
cmp
daa
push
xor
xor
mov
push
cmp
aad
rol
xor
std
insl
lods
aam
jle
mov
aaa
orb
div
dec
or
mov
push
lea
inc
mov
fiadds
cs
inc
addl
mov
xor
pop
loop
dec
mov
push
dec
jecxz
jo
nop
push
addr16
sbb
std
pop
stc
sub
mov
inc
mov
push
pop
push
test
push
notl
test
subb
push
inc
xchg
push
mov
stos
subb
pop
mov
jae
test
notb
subb
pop
mov
and
mov
pop
aad
fcomps
jno
jp
das
mov
test
aad
sub
xchg
enter
imul
movsl
add
xchg
xlat
jb
add
imul
xchg
mov
push
xor
movsl
outsl
mull
xchg
testl
adc
pop
dec
lea
shlb
push
push
ss
mov
fisttps
mov
mov
clc
jne
sub
push
mov
lods
inc
lods
xchg
lods
inc
mov
push
aam
xor
cmp
mov
mov
xchg
mov
pop
mov
aas
pop
xchg
pop
rorl
xor
add
sti
in
sbb
sub
out
testb
sub
mov
out
movsl
cmp
dec
lods
aam
mov
fwait
iret
in
test
mov
mov
cmp
or
lock
shrl
adc
fwait
or
add
inc
xor
cld
push
lods
outsb
stos
in
push
aad
repz
loopne
inc
mov
jmp
test
insb
mov
or
xchg
stos
pusha
lret
inc
adc
sub
pop
inc
xor
scas
add
lods
push
sub
inc
lods
sub
push
or
or
pop
lods
cmp
xor
xorb
xor
xchg
push
or
push
and
push
jo
adc
adc
sub
inc
push
lea
sub
and
cli
xlat
sbb
bound
pop
test
push
subl
les
inc
insl
mov
ja
push
roll
jp
push
add
sbb
push
sub
push
adc
mov
inc
movsl
inc
and
lods
dec
mov
push
add
sbb
scas
mov
stos
ret
fisttpl
loopne
ret
iret
sub
insl
cmp
push
addb
cmp
mov
test
mov
and
jne
test
cli
adc
sub
xchg
push
xchg
mov
inc
aas
mov
inc
dec
push
popf
dec
aad
push
or
mov
aam
pushw
sub
jbe
out
mov
push
push
mov
inc
jecxz
push
and
add
jb
xchg
enter
sub
cmp
sub
loop
pop
sub
ljmp
jle
sub
sub
cli
xchg
mov
insl
mov
xor
stos
add
aam
push
pop
int
cld
adc
sub
xchg
dec
dec
lahf
imull
lahf
xor
pop
mov
mov
push
mov
lahf
jno
jno
lret
fsubr
xor
mov
pop
ret
push
aad
or
or
xchg
rorb
pop
sub
xor
xchg
mov
aaa
sbb
jge
pop
push
ret
mov
ret
into
sub
shrb
std
scas
sbb
mov
fs
rcr
push
sti
xorb
adc
data16
inc
inc
sbb
pushf
mov
jmp
mov
inc
jae
push
sub
movsl
push
dec
lods
lods
xchg
ficompl
fmull
daa
or
add
inc
shrb
sub
xor
inc
lea
das
out
push
lea
mov
popa
pop
stos
inc
test
in
lods
xor
adc
mov
xor
cli
test
pop
mov
pop
mov
stos
inc
pushf
cli
daa
push
push
xlat
jb
sbbb
mov
mov
fcoml
pop
aaa
and
adc
pop
sub
xor
inc
add
rcl
cmpsb
lea
mov
pop
sub
and
imul
or
inc
jg
sbb
jbe
aad
mov
push
insl
decl
sub
and
pop
sahf
push
jl
into
jo
push
mov
or
pop
movsl
push
dec
pusha
es
adc
sti
xor
sub
movsb
xchg
cmp
rol
lret
mov
lods
shll
cli
subb
je
push
das
stos
push
jo
cmp
dec
lods
ja
into
je
inc
test
out
cmp
adc
lea
jne
lods
adc
or
ja
adc
orl
xchg
sbb
aam
rcrl
inc
adc
xchg
pop
test
push
int
dec
mov
test
cmpsb
push
push
mov
xchg
sbb
push
push
sti
into
inc
mov
mov
test
add
sub
adc
rorb
add
fisubrs
add
push
lret
imul
cmp
mov
cwtl
sbb
imul
sub
pusha
pop
filds
inc
insb
or
jne
sub
in
push
das
loop
adc
dec
xchg
dec
push
xor
in
mov
lea
lods
inc
xchg
xchg
mov
and
inc
clc
ljmp
add
dec
push
fidivrs
ljmp
jns
aam
test
mov
fwait
ret
mov
dec
fs
sti
xchg
shrl
repz
call
inc
dec
lret
and
insb
jae
lahf
pop
or
sbb
mov
les
or
ja
popa
and
or
dec
ja
movsl
push
imul
das
add
scas
mov
dec
jno
push
movsl
pop
mov
and
adc
push
and
test
mov
sahf
add
or
mov
mov
pop
jo
hlt
mov
push
mov
ds
das
fiaddl
push
and
or
jecxz
pop
lods
add
sub
jo
rcrl
mov
mov
sub
jbe
jmp
lahf
mov
mov
mov
inc
daa
push
sbb
repz
mov
xchg
mov
mov
sub
subb
inc
lods
jle
and
sub
cmp
sbb
int
cld
ljmp
mov
orb
push
dec
inc
push
inc
xchg
mov
xchg
dec
adc
adc
adc
and
and
mov
push
shlb
pop
insl
cmp
push
pop
test
sub
inc
and
mov
aaa
and
sub
sbb
dec
popf
test
test
inc
xor
mov
addb
imul
mov
popa
cld
ret
sub
mov
stos
es
jmp
je
or
add
cld
pop
push
or
subb
sbb
ja
dec
int
leave
loopne
xor
and
idivb
mov
push
addr16
ret
shlb
pop
and
pop
dec
cmpb
subb
jns
adc
dec
push
mov
push
mov
mov
imul
or
rclb
xchg
sbb
cmp
mov
add
jo
cltd
and
lods
rorl
pop
xchg
cmp
stos
sub
aad
mov
pop
push
dec
lods
and
mov
jo
shl
shll
mov
and
je
mov
lods
push
xchg
mov
mov
imull
mov
call
fcomip
jno
sbb
js
jp
xor
sbb
les
insl
test
in
mov
cmp
adcb
xchg
sub
rclb
jnp
ds
enter
inc
mov
jp
pusha
or
sub
mov
shrb
loopne
gs
stos
inc
cmp
fistl
xor
xor
xor
sub
js
or
inc
pop
push
int
mov
adc
movsl
push
cmp
scas
popf
shll
push
push
pop
mov
xchg
notb
mov
aad
inc
add
outsl
add
filds
jle
aaa
add
insl
rcl
push
add
das
sub
xor
sub
push
test
rol
mov
aam
ret
xchg
dec
jg
xchg
mov
push
mov
adc
mov
call
insl
and
xor
cwtl
mov
movsl
sub
popa
ret
sub
pop
mov
imul
es
push
push
sub
rcl
mov
or
sub
inc
add
out
push
xchg
adc
mov
push
stos
sub
push
sub
rclb
cmp
xor
imul
sub
outsl
push
mov
nop
call
inc
jo
loopne
lea
mov
mov
push
bound
and
int3
mov
fucomi
stos
lea
notl
or
xchg
popf
call
sbb
stos
push
repz
or
xchg
sub
dec
push
dec
popa
fsubs
push
cmp
mov
enter
stos
mov
jge
cmp
std
dec
jecxz
or
pushf
or
push
lds
cmpb
sbbl
sbb
cltd
das
loope
in
push
sub
push
and
fnstsw
sbb
dec
sbb
push
inc
inc
push
sub
add
lea
int
mov
push
js
xchg
adc
adc
jae
push
dec
fwait
mov
jb
push
adc
sub
push
shl
cmp
or
je
dec
or
clc
cmp
in
jo
movsl
xor
xor
cmp
sub
lods
inc
adc
das
pop
cmpsb
push
or
or
icebp
sbb
mov
aas
out
lods
loopne
and
jno
adc
gs
jo
inc
and
push
popa
mov
int3
sub
mov
xor
xor
rcl
mov
inc
push
mov
mov
out
dec
dec
mov
popa
mov
pop
cld
daa
gs
dec
mov
adc
adc
test
int
cmp
xchg
or
movsl
mov
fildl
or
loopne
push
scas
cltd
sub
dec
dec
pop
dec
stos
push
leave
mov
cmp
nop
test
add
cli
jle
neg
adc
adc
ljmp
into
add
mov
xchg
and
movb
push
or
or
jne
xor
inc
pop
in
aad
push
push
popa
jb
lds
js
movsl
mov
adc
cs
inc
sbb
push
jno
xor
add
mov
push
stos
push
imul
dec
sub
aam
add
outsl
cmp
add
repnz
mov
push
scas
inc
push
inc
or
push
fiadds
pop
push
test
xchg
inc
mov
xor
test
stos
xlat
imul
jb
icebp
push
adc
push
mov
push
ret
adc
mov
sub
xchg
mov
or
pop
leave
inc
jno
and
push
test
pushw
out
cmp
pop
lods
adc
inc
cmp
aam
mov
xchg
mov
lods
dec
inc
sub
shlb
roll
outsl
mov
pop
mov
out
inc
unpckhps
push
inc
inc
push
ret
sub
pop
xor
dec
jo,pn
incl
cmp
js
adc
js
mov
popa
sahf
mov
dec
je
adc
jl
out
movsl
push
inc
js
adc
imul
sub
mov
lock
mov
mov
push
mov
dec
and
inc
push
cs
shrl
rcrl
popf
sbb
sub
mov
insl
sub
xchg
dec
into
jle
adc
pop
and
add
sub
sub
test
sub
test
enter
or
cli
imull
jno
popa
scas
push
mov
and
rolb
mov
jo
sub
push
sbb
das
cli
inc
mov
adc
popa
xor
jne
int3
dec
pop
push
and
repz
cmp
roll
push
add
sub
xor
test
andnps
inc
imul
pop
adc
les
push
inc
xchg
insl
cmp
rcll
sbb
mov
mov
leave
cmp
shrl
push
push
xchg
push
ret
mov
lea
add
lcall
cs
mov
and
cmpsb
sbb
aam
dec
ljmp
ds
outsb
cwtl
push
test
or
mov
mov
push
push
xchg
mov
mov
push
mov
mov
inc
daa
addb
ret
jge
adc
jo
mov
loope
sbb
push
es
inc
rcll
or
cmpb
and
jo
mov
or
and
in
lock
inc
mov
gs
dec
sub
pop
hlt
mov
aam
adc
es
adc
outsl
xchg
push
test
mov
test
mov
outsl
call
movsl
mov
or
jmp
shrb
xchg
xor
xor
jp
in
push
xchg
mov
or
push
lea
test
aaa
inc
jno
lock
or
sbb
lds
add
push
mov
sub
push
sub
jns
inc
lods
icebp
mov
and
stos
repz
xor
mov
inc
mov
push
and
jno
fldl
push
sbb
pop
pop
mov
subl
push
add
xchg
pop
lea
outsb
dec
pop
inc
leave
push
jg
fistps
inc
mov
in
push
stos
addb
test
lods
in
mov
push
adc
into
push
rclb
lock
inc
push
dec
mov
cmp
test
loopne
adc
push
xor
pop
push
jb
lcall
cmp
xor
fmuls
iret
add
push
fists
fcmovbe
mov
stos
add
pop
lret
ret
lods
nop
cmp
push
push
fcomps
daa
imul
ror
add
outsl
and
cltd
jmp
mov
pop
das
or
push
aam
inc
negl
xchg
cmovp
sbb
jbe
inc
cmpsb
add
xchg
dec
xor
push
int
pop
add
pushf
mov
movsl
and
push
orb
imul
pop
cmp
mov
sbb
sbb
inc
inc
dec
js
call
xchg
mov
out
sbb
rolb
xchg
sbb
popl
daa
mov
sub
clc
pusha
hlt
dec
fidivrl
or
sub
adc
xor
loopne
inc
imul
popa
outsl
test
cmpsb
mov
mov
dec
dec
mov
test
in
xchg
inc
dec
inc
xlat
inc
add
cmp
mov
scas
jmp
push
sub
push
xchg
test
sub
inc
push
pop
mov
xlat
cld
jl
add
lahf
mov
xchg
mov
mov
inc
cltd
mov
jo
adc
inc
push
adc
push
sbb
mov
xor
pop
adc
xchg
push
ja
mov
jp
scas
pop
or
cmp
sbb
daa
jno
test
push
mov
xchg
movsl
push
lea
and
or
insl
or
jno
adc
and
mov
xchg
add
int
ret
xor
iret
int
add
imul
sub
xor
fiaddl
ljmp
movsb
lret
push
mov
or
sub
sbb
mov
adc
xor
cmp
pop
xor
and
es
sub
sub
xchg
ja
inc
xchg
push
mov
lret
sbb
pop
inc
xor
cmp
in
test
or
pop
push
sbb
pop
inc
test
add
mov
mov
shlb
loop
rcll
ljmp
mov
lds
insl
xor
cmp
mov
lret
in
add
dec
or
test
push
nop
test
xchg
sahf
ret
cmp
adcb
dec
popa
nop
mov
inc
inc
lods
ret
test
dec
sub
dec
sub
xor
cmpsb
or
adc
xchg
clc
stc
add
mov
popa
add
push
mov
add
and
jno
push
push
xor
jb
and
mov
imull
mov
mov
sbb
push
push
stos
dec
lods
pop
insl
xchg
inc
mov
xchg
or
stos
sub
pushl
mov
andb
in
push
cwtl
shrl
fsubrs
icebp
daa
ret
outsl
imul
jge
cmpsl
int
add
loopne
addb
ret
cld
shrl
das
stos
popa
add
mov
xchg
or
and
sbb
mov
push
and
cld
jb
insl
cmp
lods
jnp
add
dec
add
pop
roll
aas
jg
lods
mov
mov
mov
mov
mov
xchg
outsb
sbb
or
xchg
call
adc
dec
or
mov
sbb
testl
ret
repz
and
mov
loope
cli
push
xchg
jle
or
jb
or
mov
jle
xor
adc
jno
or
clc
mov
push
out
xor
add
jne
lea
jo
jne
lds
faddl
add
pop
pusha
rclb
inc
jle
lcall
push
leave
push
mov
insb
and
jg
push
add
sbb
push
outsb
add
xchg
into
or
jnp
xchg
jne
loope
or
dec
jae
test
das
push
inc
andl
sub
xchg
pop
dec
scas
rclb
test
aam
adc
push
or
xor
mov
dec
push
stos
adc
xchg
or
mov
mov
loope
or
add
xchg
mov
cmp
scas
adc
push
push
sub
dec
in
adc
sub
inc
mov
pop
orb
aaa
mov
mov
movsl
cmpsb
shrb
xchg
sbb
aad
push
add
add
add
aad
or
push
mov
jno
pop
sub
mov
push
stos
jle
stos
pop
pop
cli
insl
sub
out
movsb
les
imul
adc
xor
pop
adc
adc
sub
dec
mov
push
in
imul
or
mov
inc
and
dec
add
push
rcl
mov
imul
dec
notb
xchg
es
push
and
shr
push
xlat
and
cmp
dec
outsl
mov
enter
idiv
xor
test
mov
mov
sti
gs
jno
push
arpl
push
and
pop
test
add
push
mov
inc
pop
pop
xor
or
jl
cwtl
cmp
jno
inc
mov
sub
data16
out
inc
adc
sub
sbb
xchg
dec
adc
test
xor
gs
dec
add
test
push
fdiv
ljmp
dec
repz
popa
sub
into
fbstp
push
iret
push
jae
mov
push
mov
push
xor
adc
add
subb
mov
and
or
ficompl
out
push
xchg
pop
add
sbb
jo
sub
subl
cmp
or
add
cwtl
push
sub
fsubs
pop
push
mov
mov
js
inc
imul
sub
push
lcall
imul
add
mov
fsubr
mov
test
pop
mov
cmp
sub
lds
mov
enter
add
mov
popa
adc
add
pop
sti
and
dec
inc
es
arpl
in
push
lcall
sbb
imul
mov
test
push
mov
mov
mov
subb
in
dec
mov
inc
mov
testb
jo
and
shrb
cmp
das
pop
mov
adc
inc
mov
push
dec
dec
cli
sub
mov
jmp
andb
fdivrs
add
cmpsb
mov
jmp
dec
enter
adc
mov
test
inc
cmp
mov
das
mov
aam
push
push
jno
das
mov
pop
jae
nop
or
push
add
testb
sub
lret
mov
xchg
jo
lods
push
sub
imul
aam
jo
jb
stos
xchg
and
and
das
rolb
stos
push
loope
mov
inc
pusha
dec
fnstcw
and
xor
ficoml
fsubl
adc
mov
push
rcrl
inc
addl
dec
iret
mov
or
pop
das
dec
mov
ret
movsl
push
adc
pop
shrl
xor
add
sbb
andb
aam
loop
sub
adc
enter
or
or
push
sub
sub
ret
pop
xchg
jo
inc
push
pop
dec
dec
pop
hlt
into
cmp
ret
fiaddl
lret
push
inc
imul
jle
and
aad
sbb
jle
add
mov
hlt
testb
inc
push
fisubl
pop
test
push
and
push
adcb
and
pusha
mov
test
push
jmp
mov
adc
add
and
sub
fcmove
jle
mov
mov
sbb
adc
dec
inc
mov
out
divl
sub
mov
rolb
pop
sub
pop
ja
cmp
lcall
aad
mov
mov
adc
aad
sahf
gs
je
aad
pop
xor
mov
push
mov
or
rorl
mov
xchg
dec
ret
fcoms
push
lods
pop
test
xchg
jnp
mov
sub
or
push
das
and
inc
pop
jno
cwtl
stos
inc
mov
aas
cmp
push
inc
sub
or
ja
test
sbb
lods
adc
ret
jo
mov
jno
cmc
leave
ret
push
sub
lds
inc
push
aad
fwait
pop
es
add
or
rcl
push
rorb
sub
rorb
subl
shrb
lahf
pushf
outsl
mov
adc
sub
mov
rorb
or
scas
imul
jg
push
pop
lods
ret
les
or
rolb
shrb
movsb
mov
cmp
jno
push
mov
lock
cmp
sbb
mov
cli
add
mov
stos
shrl
test
lret
push
adc
sbb
addr16
lret
cmp
sbb
add
and
cli
sub
outsb
xor
cmp
cmc
push
fmuls
lods
ret
jo
lea
insb
mov
add
push
int
add
push
push
add
dec
sub
xor
sub
orb
add
add
outsb
jmp
inc
mov
sub
push
pop
call
lea
cmp
fcmovne
push
sub
mov
cmp
rorb
fidivrl
js
adcl
sbb
pop
test
mov
sbb
lea
aad
cmp
xor
in
jle
hlt
add
cmpsb
mov
push
cmc
push
sub
scas
das
out
orb
jmp
adc
xor
push
out
ljmp
aas
or
sub
les
adc
lea
ja
push
jno
mov
jns
sub
in
pop
push
add
add
cmpl
rolb
movb
xchg
ja
sar
outsl
aam
xor
scas
mov
mov
clc
or
aam
or
adc
xchg
clc
daa
test
lods
cltd
ss
add
inc
scas
test
and
push
lock
imul
push
and
loope
cwtl
push
mov
adc
push
mull
push
pop
mov
xchg
mov
or
sub
imul
cli
sub
push
gs
push
add
shrl
mov
icebp
addr16
xor
stos
mov
xchg
in
mov
mov
pop
xchg
shll
lods
push
mov
pop
stos
mov
dec
jno
nop
cmovnp
mov
push
add
frstor
test
jo
inc
jg
and
cli
xchg
inc
xchg
sub
pop
push
sub
insl
leave
aad
pop
pop
andl
into
and
xchg
scas
sub
push
or
pop
mov
add
in
inc
and
inc
sbb
push
mov
pop
xchg
sbbb
mov
enter
xor
fbld
pop
lock
fisubl
mov
ds
into
aad
fcmovbe
mov
mov
push
stos
pop
hlt
js
aam
or
mov
aam
pop
das
in
stos
xor
dec
out
xchg
push
push
mov
insl
lea
imul
xchg
add
js
mov
or
pop
and
or
sbb
push
jmp
into
xor
xor
push
xchg
add
pop
lea
xor
dec
xor
and
push
shll
ss
stos
adc
cmp
push
les
mov
inc
jns
cmp
imul
sbb
popa
adcb
push
int
sbb
and
repz
stos
stos
push
and
test
push
push
push
sbb
rol
xchg
rol
mov
mov
and
incl
push
test
mov
sub
push
sub
es
mov
sub
push
sbb
and
pop
cmp
test
dec
in
add
cmp
pop
lea
fldt
scas
stos
push
shrb
mov
ljmp
es
add
sub
or
push
arpl
outsl
mov
pop
dec
cmp
push
pusha
jbe
push
push
aad
pop
shrb
fsubrl
cmp
mov
adc
insl
rorl
fstpt
adc
mov
dec
or
aas
sub
jge
push
fisttpll
cwtl
aaa
shlb
test
push
add
stc
add
stos
mov
mov
dec
test
lret
xchg
dec
aam
stos
inc
jmp
inc
mov
fldt
pop
inc
je
aam
mov
dec
pop
sbb
cli
mov
subb
sbb
rorb
inc
ret
push
sbb
das
test
sub
adc
pop
scas
dec
in
pop
repz
mov
pusha
fimull
add
testl
push
loope
pop
sbb
xor
jne
mov
jb
sbb
in
into
xorb
movsb
mov
int
mov
cmp
sub
dec
xchg
pop
and
xchg
sub
test
shll
pop
divb
or
mov
sub
pop
lcall
insb
lret
add
popa
push
sbb
loope
scas
test
mov
jno
adc
sub
push
or
sub
test
sbb
push
mov
lods
rorb
mov
cmp
mov
sub
lods
in
fidivl
xchg
vsqrtss
or
adc
pop
aad
xchg
or
mov
adc
sub
shll
adc
sbb
lea
cmp
push
fistl
add
aad
sbb
outsl
insb
inc
sub
test
add
int
add
insb
jmp
repz
sub
pop
mov
add
enter
movsl
push
cmp
das
xor
inc
imul
mul
sbb
arpl
lea
jo
pop
xlat
push
test
mov
fmull
fisubrl
inc
add
outsl
test
jne
jecxz
push
jmp
inc
aaa
scas
call
mov
dec
out
jae
add
cwtl
dec
and
jg
push
rorl
loop
xchg
sbb
lds
fistpll
mov
and
shlb
cmp
sub
mov
push
mov
sbb
cmp
das
sub
and
js
jb
adc
adc
nop
xchg
stos
or
push
pushf
or
mov
push
insl
imul
out
add
mov
cli
xchg
rol
jge
push
lock
inc
test
mov
sbb
pop
mov
sub
xor
out
int
add
jecxz
push
inc
test
clc
dec
sub
sbb
mov
sbb
orl
and
jae
stos
adc
xchg
pop
test
sbb
jns
lea
stos
test
sbb
leave
outsl
push
lods
add
das
pusha
pop
mov
mov
xor
aam
jl
mov
push
insb
pop
roll
add
jecxz,pn
add
dec
repz
dec
push
sub
sub
push
jae
fcmovb
xchg
push
cwtl
push
adc
mov
ret
jnp
sbb
dec
xor
inc
cmp
ss
push
or
dec
aaa
adc
ljmp
inc
es
je
mov
movsb
outsb
lds
fs
and
ss
xor
fisubrl
jle
push
fcmovnu
lcall
push
sbb
shl
or
and
mov
xchg
out
test
adc
mov
test
push
fwait
adcl
jo
cmpsl
stc
inc
mov
and
xchg
lods
icebp
mov
or
xchg
cmp
jecxz
mov
cmp
add
push
dec
xor
inc
xchg
jbe
mov
xchg
adc
and
sub
sub
cltd
pop
sub
mov
es
insb
shll
or
sub
ret
push
loopne
rorb
sbb
imul
or
pop
stos
xchg
or
test
xchg
adc
add
or
push
sti
mov
jg
mov
mov
mov
sub
stos
adc
stos
xchg
scas
lcall
push
mov
fsubr
adc
mov
inc
sub
cmc
cmp
dec
cmpsb
les
lods
cwtl
das
lock
mov
sbb
push
sbb
dec
mov
push
pop
lods
subl
out
cli
mov
loopne
xor
outsb
mov
push
scas
insl
cs
and
add
enter
or
outsl
mov
jno
lods
push
rolb
mov
cwtl
pop
mov
or
rclb
sbb
fildl
jb
cmp
lcall
pop
andl
icebp
fwait
pop
mov
in
mov
lret
dec
cwtl
pop
sub
out
mov
stos
push
test
xor
add
mov
adc
cmp
xor
or
push
adc
movsb
push
mov
rorl
push
lods
push
stos
fldenv
repnz
leave
inc
adc
mov
inc
mov
inc
cs
dec
add
xchg
addl
lods
ror
xchg
mov
push
push
aas
push
xor
sbb
test
jle
loopne
mov
pop
call
add
adc
je
xor
fiaddl
mov
jno
and
mov
xor
nop
adc
or
jb
jg
rclb
push
ljmp
sbb
or
sub
mov
or
inc
imul
push
pusha
sub
add
out
and
sti
lahf
mov
mov
lea
add
dec
xor
dec
push
pop
stos
and
xchg
push
outsb
out
add
push
jb
add
in
ret
jmp
xor
sti
and
jae
adc
adc
inc
adc
xchg
data16
roll
ss
in
lea
and
push
jo
pop
stos
ljmp
inc
mov
dec
ja
sub
push
push
xorb
ss
mov
outsl
jl
movsl
push
daa
lcall
jle
insb
add
repz
inc
jp
add
inc
je
push
and
sbb
adc
inc
or
push
push
call
lea
neg
shll
jge
fisttpl
jg
pop
jns
lahf
ljmp
pop
push
jo
cmp
shll
test
add
sub
mov
push
mov
mov
inc
aad
addl
add
sbb
push
arpl
cmpsb
jl
cmpb
push
sub
sub
or
mov
push
cli
jb
mov
lock
testl
rcl
fs
push
out
inc
and
or
jno
and
mov
or
inc
and
movntps
or
inc
push
stos
fidivs
push
and
push
cmp
inc
add
inc
imul
push
mov
jbe
push
cmp
pop
and
incl
xchg
stos
dec
insb
lds
mov
add
mov
rcrb
inc
jno
in
push
sub
push
xchg
xchg
movsl
mov
dec
inc
xor
inc
popf
push
jle
jo
add
sbb
movsl
inc
leave
push
dec
test
insl
pop
push
pop
lahf
lods
test
sbb
cmpsb
push
cmc
fistps
cmp
lcall
sbb
inc
adc
ljmp
dec
ds
add
mov
sub
ljmp
cmp
stos
or
or
inc
push
stos
lahf
test
sub
lods
add
sub
xor
or
lahf
out
pop
ret
sub
sbb
or
mov
rcrl
adc
mov
jae
imul
adc
and
xchg
jo
notb
test
cli
test
inc
mov
arpl
sahf
push
sbbb
push
sub
aas
inc
into
inc
sub
subl
add
or
loope
rorl
mov
push
dec
dec
out
sub
pop
mov
push
add
push
inc
ja
ds
push
sbb
or
inc
test
add
mov
mov
push
push
aad
std
cmp
int3
add
fistps
in
outsl
xor
jb
pop
inc
jecxz
scas
pop
and
daa
out
adc
adc
fstps
sahf
mov
sbb
mov
or
mov
aad
lods
adc
scas
jnp
sbb
and
stc
pushf
add
push
sti
jmp
dec
pop
ja
add
sub
rcrb
out
mov
addb
jnp
sbbb
aam
mov
mov
lret
outsb
jb
imul
addr16
add
rcrb
add
nop
je
or
cmc
sub
xor
das
or
xor
stos
cs
in
mov
jp
jno
adc
and
cmp
leave
inc
xor
add
lods
push
sub
jbe
push
mov
jnp
cmp
in
adc
ds
mov
push
jo
sub
dec
mov
inc
pop
cli
xor
imul
pop
inc
or
sahf
cmp
pop
ljmp
test
cld
movsl
push
xchg
test
push
mov
mov
inc
lods
stos
and
pop
sub
ficoml
jns
xchg
mov
mov
pushf
subb
pop
test
xchg
dec
xor
cmp
push
shlb
or
daa
fildll
and
dec
test
push
andb
sbb
mov
adc
lods
in
fidivs
pop
test
inc
xor
add
adc
push
sbb
jno
jl
in
adc
and
and
mov
jne
jg
mul
das
jge
push
out
scas
sub
addb
jno
fnstcw
sbb
movsl
sbb
fidivrl
jle
pop
and
cs
insl
push
cmpsb
xchg
jo
ds
lods
inc
adc
sbb
testb
and
insb
sub
xor
in
icebp
push
notl
lea
divl
adc
or
sub
inc
lods
add
mov
push
dec
adc
mov
lods
xchg
les
xor
aam
lret
cmp
loope
and
adc
lcall
popf
mov
sar
int3
xchg
mov
scas
mov
cli
test
xchg
jae
in
test
mov
shrb
hlt
or
stos
pusha
call
movsb
sti
jnp
xor
arpl
les
stos
pop
mov
rol
out
lret
xor
add
push
add
rorb
cs
inc
ret
push
xor
pop
loop
xchg
pop
ret
jb
sub
add
imul
dec
shll
or
push
push
add
or
push
add
adc
mov
jle
or
xchg
dec
pop
sub
push
mov
push
sub
jno
xor
dec
test
cmp
or
adc
loopne
scas
clc
push
push
or
stos
fwait
add
in
push
and
jp
or
sbb
mov
xor
pop
sahf
mov
add
adc
pusha
or
cmp
addb
xchg
inc
or
nop
into
cmp
xor
stos
inc
cmp
lds
push
push
cmp
aad
jp
sub
mov
scas
inc
arpl
push
lods
cmp
adc
in
jo
xor
and
fiaddl
rcr
push
popf
arpl
pop
clc
aam
sbb
mov
mov
adc
mov
add
pop
ret
mov
add
pop
push
shrl
scas
mov
sub
mov
imul
xchg
push
rcrb
or
xchg
jbe
and
sub
outsb
cmp
lods
push
insb
lods
push
mov
cmp
pop
sub
and
sub
and
push
lods
xor
jg
sub
pop
jl
push
mov
add
lcall
test
sbb
daa
data16
mov
cmp
xorb
xchg
imul
inc
xor
mov
mov
aam
stos
jns
popa
or
xchg
in
mov
shl
push
orl
or
add
xchg
lea
lods
mov
mov
inc
dec
push
imul
inc
insl
add
push
xor
push
cmp
and
cmp
stos
sahf
jb
cli
ljmp
dec
repnz
xchg
enter
sahf
int3
or
dec
push
push
sub
sbb
mov
push
stos
pop
mov
pusha
ds
push
subb
sub
push
mov
inc
xchg
andb
add
dec
mov
adc
jne
rorb
inc
mov
or
mov
dec
adc
ficoml
pop
inc
lahf
push
xchg
stos
push
shl
xor
xor
movsl
xor
sub
test
inc
push
aam
pop
pop
repnz
add
outsl
add
pop
lea
add
push
scas
xchg
push
push
cmp
inc
imul
push
inc
insl
mov
dec
xchg
mov
incl
pop
out
icebp
sub
mov
lahf
mov
stos
cltd
std
or
lea
and
sub
mov
stos
mov
adc
push
testb
or
jb
pop
mov
inc
sub
and
inc
inc
sbb
bound
test
loop
jmp
cwtl
mov
nop
jo
subb
or
sti
filds
dec
push
lods
and
or
xchg
cmp
cmp
sub
dec
and
or
lods
push
mov
inc
aad
xor
icebp
push
add
and
lret
divl
jg
cmp
repz
cs
cltd
scas
push
adc
push
ja
test
pop
xchg
sbb
xor
cmpsl
in
inc
insb
and
negl
jno
adc
insl
ret
push
add
int3
jle
jmp
adc
mov
not
ljmp
aad
and
cmp
pop
cltd
adc
les
push
mov
mov
lods
xor
mov
adc
imul
inc
cmpsb
movsl
adc
mov
dec
mov
sub
xor
inc
ret
inc
add
rcrl
adc
add
pop
cmp
das
enter
or
movsl
pusha
mov
mov
or
rcr
int
inc
inc
mov
lahf
push
pop
mov
test
pop
sbb
push
pop
sub
cmc
xor
loop
lods
and
clc
mov
test
inc
pop
in
add
mov
imul
mov
or
push
mov
add
push
push
gs
scas
push
lods
ss
mov
or
cmc
inc
add
push
sbb
stos
push
sbb
fcmovu
test
sub
mov
nop
jg
push
sub
add
cmpsb
inc
mov
movsl
sub
pop
or
int
mov
leave
inc
mov
and
cmc
es
mov
test
pop
insb
jp
sub
add
mov
pop
push
adc
insl
je
jp
sub
test
rclb
xor
push
shlb
push
fsubrs
push
pop
into
sub
push
shrl
rolb
nop
push
adc
cmpsl
xchg
call
sub
sbb
dec
rclb
test
cli
push
int3
andb
adc
push
push
cmp
iret
pop
lods
xchg
subb
push
jo
dec
or
push
js
adc
lods
lret
cmp
sub
inc
repnz
or
dec
scas
push
cmp
test
sbbl
push
stos
push
movsl
mov
loopne
or
lods
xchg
or
add
ljmp
das
loope
push
imul
inc
inc
lea
and
sub
ljmp
enter
fcoml
mov
or
sbbb
test
add
das
repz
jae
ss
dec
cltd
out
cmp
loopne
ss
and
sub
aam
int
inc
subb
jno
xor
pop
or
add
sub
rclb
addr16
fs
ret
mov
mov
lods
test
push
dec
cmpsb
loope
jecxz
pusha
sub
pop
adc
aad
push
scas
push
repnz
mov
push
add
or
dec
xor
out
or
push
lods
shll
shl
inc
mov
add
mov
ret
add
pop
movsb
adc
sub
sub
sub
das
ljmp
test
cmpsb
dec
jecxz
mov
push
stos
xor
imul
subb
xchg
ljmp
test
mov
aad
mov
test
push
rclb
sbb
rcll
push
cmpsb
sub
loop
arpl
loopne
dec
rolb
call
or
and
adc
stos
push
push
push
push
fisttpl
arpl
aad
or
out
or
pop
je
mov
sbb
xchg
add
jg
push
and
or
incl
lods
inc
insl
mov
sbb
aaa
push
inc
mov
add
adc
mov
push
add
push
pop
leave
in
or
inc
xor
adc
adc
xor
test
ret
lret
adc
orb
lea
push
xor
push
test
xchg
popa
jp
andl
or
inc
sub
mov
or
mov
mov
xchg
aam
stos
push
adc
mov
es
rol
lods
les
pushf
mov
scas
add
xor
int
pop
jae
fs
ja
cmp
sbb
dec
scas
mov
aad
lea
inc
adc
shlb
fimuls
pop
fimuls
test
inc
or
mov
and
and
adc
test
stos
push
in
scas
mov
and
adc
push
inc
sub
adc
imul
push
movsb
mov
vfpclassps
cmp
inc
add
mov
sbb
lds
movsl
push
shlb
mov
idivb
jno
adc
movsl
loopne
adc
push
arpl
sbb
and
adc
xchg
fnstenv
inc
pop
in
orl
dec
imul
scas
mov
jo
andb
inc
xchg
push
adc
inc
adc
cli
xchg
xchg
sbb
inc
cmp
aad
ss
inc
jae
mov
pop
es
pop
xchg
xor
add
dec
orl
inc
mov
push
popa
nop
mov
rorl
jbe
xor
fldt
gs
aas
shrb
cwtl
les
mov
inc
xchg
in
adc
ljmp
xor
ret
push
and
sbb
adc
not
push
mov
inc
sbb
or
and
cmp
xchg
xor
push
adc
or
mov
xchg
or
arpl
cmp
add
leave
movsb
jb
jo
push
adc
cmc
push
push
xor
push
int
and
popa
dec
adcb
fistl
mov
xchg
sbb
lea
push
fistpl
roll
in
push
fwait
pop
decb
aad
sub
sub
orl
rclb
in
jns
add
ret
dec
imul
sub
cmp
xchg
xor
or
int
subl
outsl
add
jl
jge
aam
push
leave
shll
lods
push
push
mov
aad
fimuls
or
sub
mov
and
aad
cmp
add
adc
mov
incl
aad
and
mov
push
and
push
stos
andl
aad
dec
jmp
xor
lahf
mov
or
rcll
pop
movsl
cmp
std
je
inc
mov
push
xor
xor
push
cmp
lods
mov
mov
fidivs
push
imul
dec
push
or
push
jl
ljmp
call
mov
loop
aam
push
mov
adc
or
pop
stos
push
pop
imul
ret
scas
clc
fs
sub
mov
adc
stc
stos
xor
xor
cmp
mov
sbb
jle
jge
or
xor
push
cmp
push
popl
cmc
cmp
jecxz
addb
mov
mov
sbb
xchg
sub
adc
push
lea
js
adc
je
sbb
pop
rolb
xor
push
ret
push
mov
xor
lock
jmp
incl
out
xchg
or
push
out
dec
test
sub
or
push
push
xchg
inc
xchg
orb
push
insb
inc
jae
popa
mov
mov
das
jl
jg
insl
mov
arpl
mov
mov
push
cmp
mull
loope
dec
inc
imul
pop
outsl
dec
ss
das
fcoml
or
je
inc
xchg
push
or
mov
add
inc
insb
and
add
xchg
pusha
pop
adc
ret
cmp
xor
mov
jno
cltd
pop
loope
push
xchg
addr16
inc
je
push
pop
mov
push
jp
mov
or
cmpsb
pusha
or
pop
lock
dec
add
add
pop
inc
rcll
xor
xchg
dec
out
push
adc
push
stos
pop
test
icebp
bound
call
jno
shrb
rolb
aam
jb
mov
push
jns
adc
sub
push
test
push
push
loopne
add
push
jb
inc
mov
or
pop
inc
pushf
scas
incl
lds
jo
lret
add
add
aam
jo
xor
mov
xor
xor
add
push
addl
cmp
bound
pop
rep
mov
mov
push
movsl
adc
ret
mov
adc
cmp
mov
mov
push
cs
mov
pop
adc
or
add
sbb
rcrb
jo
mov
and
and
mov
clc
out
ret
popa
imul
push
and
call
push
add
in
inc
int
mov
jb
pop
sbb
mov
jbe
jae
inc
in
les
lahf
push
push
es
jns
pop
sub
mov
mov
inc
xor
ret
mov
or
test
ss
inc
cmp
push
js
mov
sub
pop
mov
xor
jae
dec
orb
push
adc
lea
mov
pushf
decb
push
rcll
cltd
push
pop
inc
jb
cmp
outsl
pop
xchg
pop
adcl
shll
inc
sub
pushf
out
addb
stc
jecxz
pop
orl
fucomip
movsl
or
stc
dec
mov
or
mov
xor
stos
sbb
imul
test
xor
push
cmp
mov
pop
mov
int
js
rclb
sub
push
or
or
mov
test
mov
scas
inc
inc
aad
fcompl
aad
sahf
loopne
jno
mov
frstor
jp
pop
sbb
push
andb
and
sbbl
roll
pop
stos
int3
sub
or
xchg
cli
test
pop
inc
test
mov
js
lods
adc
inc
xchg
jg
adc
outsl
push
aad
lods
jle
push
scas
push
aad
fisubs
xor
popf
rcll
add
data16
pop
lahf
mov
adc
clc
add
adc
add
stos
adc
dec
adcb
js
xor
jg
cmp
lods
adc
inc
mov
loope
dec
movsl
adc
sbb
pop
sub
sbb
lahf
push
push
add
movsl
mov
add
push
xorl
or
cmc
pop
cmp
cmpsb
jle
xor
inc
sub
pop
lods
mov
ret
push
jge
xchg
or
add
ljmp
push
lods
inc
test
mov
mov
and
add
add
enter
xor
aad
pop
sbb
jno
pop
lcall
inc
add
mov
test
jae
ja
cli
push
sub
sub
push
stos
sub
mov
inc
test
inc
pop
push
scas
test
lea
dec
aaa
mov
das
adc
dec
nop
sub
add
aam
pop
mov
cmp
mov
xchg
pop
adc
add
inc
sub
data16
mov
leave
jp,pt
mov
sub
outsl
and
pop
push
cmp
sub
xchg
dec
pop
icebp
out
jecxz
mov
andl
jns
mov
test
int
pusha
mov
lods
jb
sub
mov
and
push
jecxz
mov
pop
rorb
or
jo
adc
popa
test
leave
mov
pop
pop
lods
dec
mov
add
cwtl
push
inc
inc
push
xor
insl
inc
push
stos
andb
push
test
lds
add
das
xchg
aas
or
jbe
push
jb
inc
adc
or
stos
adc
add
test
lahf
dec
data16
pop
cli
cmp
sub
punpcklwd
cmp
pop
insb
add
jo
or
dec
jb
cmp
loopne
xchg
movsw
xchg
mov
sub
cmp
insb
xor
adc
test
add
sub
mov
and
fisubl
adcb
mov
adc
in
daa
cmp
pusha
cli
daa
icebp
bound
das
js
dec
cltd
int
adc
push
out
in
dec
pop
pop
jno
mov
push
xchg
and
in
out
jo
lea
loopne
cmpsl
and
mov
imul
sub
lods
mov
adc
cmp
sbb
pop
add
stos
imul
mov
sahf
xchg
ja
push
mov
mov
jg
mov
jno
mov
push
pop
jp
push
mov
push
and
adc
test
sbb
clc
cs
cli
clc
into
jmp
xchg
push
sbb
and
dec
mov
rcrl
addl
lret
pop
mov
imul
mov
imul
inc
push
xlat
sbb
xor
jae
and
mov
push
jbe
push
jb
jl
aam
dec
xchg
lcall
andl
cli
jle
andb
fs
pop
add
push
jl
jb
inc
xor
push
pushf
add
cltd
or
mov
add
arpl
subb
or
xchg
aaa
mov
inc
jbe
mov
add
jnp
mov
scas
or
or
xor
adc
cs
mov
inc
cmp
push
test
mov
add
xchg
fnop
ret
xchg
adc
push
imul
or
adc
fnstcw
and
xchg
add
xchg
mov
sbb
xchg
addb
cmp
cmp
add
add
mov
lods
stos
pop
loope
das
add
xchg
rorb
lret
xor
xor
bound
or
push
lea
aam
es
mov
add
and
push
add
push
bound
add
dec
sbb
inc
mov
and
vcvtpd2psy
fiadds
mov
push
mov
push
adc
sub
inc
imul
imul
adc
daa
inc
in
pop
scas
inc
mov
lret
pop
rorl
pop
fwait
dec
ljmp
inc
add
mov
rcrb
and
adc
cmp
inc
pop
cmpsb
pop
sub
repnz
cli
test
aam
dec
cmpsl
mov
push
push
mov
rcrb
outsl
mov
mov
pop
or
ds
adc
outsl
mov
push
lods
push
test
popf
fisttpll
sub
fisttpll
mov
xchg
sbbb
inc
cmp
nop
imul
inc
ret
xabort
rcrl
sub
dec
test
xor
push
test
ret
inc
mov
aad
add
xchg
mov
sbb
pop
sub
in
adcl
or
adc
cmp
sbb
mov
in
dec
push
hlt
aad
sub
add
push
sbb
adc
push
les
pop
mov
pop
hlt
clc
aas
pop
aad
je
push
and
notl
inc
stos
mov
or
adc
lretw
xchg
jnp
xor
push
clc
dec
jno
inc
inc
leave
inc
cwtl
mov
push
jo
and
adc
add
pop
aaa
add
mov
xchg
iret
js
ret
mov
push
cld
push
xchg
andl
push
or
mov
push
xor
test
push
fcoms
xchg
cmp
cmp
push
mov
dec
push
orl
mov
mov
in
add
pop
out
xchg
fldt
ljmp
adc
or
sub
test
inc
mov
jp
lea
or
mov
stos
push
or
cmp
lea
adc
and
push
shr
nop
imul
pop
or
dec
push
cmp
xchg
inc
cmp
dec
mov
mov
xor
add
je
mov
adc
stos
inc
mov
xor
dec
add
enter
mov
jo
and
loopne
lea
stos
mov
lcall
and
fdivrp
popa
sub
xchg
jg
pop
mov
pop
mov
inc
pop
push
rcl
add
push
int3
pushl
adc
jmp
xchg
les
sub
xor
sbb
inc
ret
push
jb
adc
shlb
xlat
dec
pop
cmp
push
lcall
push
xchg
push
cmc
mov
xchg
mov
mov
pop
inc
dec
rcrl
mov
icebp
xchg
sbb
ret
xchg
aaa
cmpsb
sub
lods
out
push
xchg
imul
inc
sub
jno
dec
xchg
mov
sahf
imul
pusha
lods
pop
fwait
stos
inc
sbb
sbb
cmp
sub
cmp
dec
aad
add
add
xchg
xor
add
mov
cmp
loopne
cmp
or
push
and
inc
sbbl
and
icebp
dec
test
imulb
shrl
ss
or
mov
outsl
lcall
fcoms
sbb
add
ret
inc
push
add
ret
pusha
add
jb
test
data16
rolb
push
push
inc
cwtl
stos
push
les
mov
mov
push
sahf
sbb
lods
lods
pop
mov
and
mov
or
lcall
rclb
lret
test
nop
mov
xor
pop
leave
push
push
mov
sub
xchg
rorb
push
test
pop
adc
xchg
pop
cmpsb
add
gs
adc
mov
flds
xchg
adcb
mov
rcrb
stc
ret
pop
pop
jno
inc
add
lahf
push
lods
adc
aam
add
mov
adc
jb
cltd
cs
orb
cmp
mov
clc
xor
xor
pop
ret
push
fildll
addr16
push
lds
cmpsl
ja
orl
inc
sub
push
adc
and
ret
pop
push
add
push
dec
mov
xchg
mov
push
cmp
inc
xchg
mov
dec
inc
mov
mov
imul
mov
fsub
xchg
repz
mov
push
mov
and
cld
dec
xchg
or
sub
or
in
push
push
jp
lods
push
mov
push
adc
cmp
pop
mov
fsub
and
adc
xor
xor
xchg
pop
jg
addl
mov
loope
addb
cmp
pop
adc
inc
clc
lock
rorb
mov
xchg
and
mov
mov
pop
fs
outsb
jno
shll
pop
mov
repnz
imul
pop
scas
dec
adc
inc
rclb
or
sti
aam
mov
jle
insl
pusha
sub
les
sbb
adc
push
stos
pop
lea
mov
lods
add
loopne
fimuls
pop
xor
sar
es
loope
sub
sti
fstpt
cmp
pop
adc
popa
push
cmp
imul
mov
js
xor
mov
shlb
dec
adc
lods
adc
push
dec
mov
mov
mov
cmp
push
xchg
stos
add
loopne
xor
add
push
mov
xor
jbe
addl
dec
in
sbb
cmp
add
rcll
push
push
pop
jo
mov
adc
dec
mov
adc
adc
mov
int3
fdivl
sub
stos
jb
xor
roll
pop
es
rcrb
addl
pop
inc
mov
adc
lods
shr
jnp
mov
and
ss
xchg
dec
push
or
sbb
push
add
mov
mov
test
add
mov
or
or
add
sarl
sub
lods
mov
inc
test
dec
mov
mov
mov
lock
test
pop
xchg
sub
xchg
icebp
or
xor
cwtl
push
adc
cs
add
test
or
fcoms
inc
adc
rcl
lret
ret
into
push
jmp
mov
pop
outsl
push
push
insb
mov
cmp
pop
ss
lea
int
iret
adc
clc
ljmp
and
imul
adc
mov
mov
test
jle
push
and
mov
adc
jecxz
adcb
push
ja
mov
xchg
and
xlat
pop
mov
jge
and
sbb
jnp
and
inc
xchg
imul
pop
test
mov
aaa
ds
pusha
adcl
xchg
repnz
add
data16
arpl
fmuls
stos
inc
stos
push
xor
add
push
pop
adc
inc
insl
stos
dec
shlb
popa
push
push
sub
cmp
xor
cmpsl
test
pop
sub
aas
xor
adc
repnz
and
cs
test
out
or
inc
push
xchg
loope
mov
push
push
push
adc
lods
push
test
mov
cmp
sub
xor
inc
dec
mov
mov
mov
push
xor
cmp
das
orl
movsl
dec
mov
inc
sub
or
inc
jne
adc
cmp
out
sub
add
dec
push
stos
pop
pop
aas
add
mov
dec
shl
movl
lcall
pop
cmp
inc
cmp
or
idivb
jnp
pop
mov
add
ljmp
push
lret
push
sub
test
pop
popa
mov
sbb
or
movsb
xor
push
pop
adc
sub
jg
push
pushf
and
inc
lea
nop
xchg
pop
pusha
mov
subb
pop
or
xchg
pop
push
sub
scas
dec
jg
push
test
fnsave
cmp
lods
and
les
adc
push
jnp
xchg
scas
sbb
sbb
outsb
xchg
stos
push
mov
sti
loopne
adcl
push
notb
push
mov
xor
jbe
mov
sbb
je
xor
push
push
pop
lcall
inc
jne
pop
push
imul
leave
ret
pop
mov
mov
dec
jo
and
push
gs
dec
push
mov
push
lret
test
enter
test
cs
lods
cmpsl
lods
aam
add
or
stos
jno
and
add
lret
hlt
push
or
cmp
cmc
jns
sbb
test
loopne
sub
lods
std
inc
dec
pusha
and
sub
inc
daa
xchg
and
and
out
pop
add
lcall
xchg
sub
pushw
sub
xchg
sub
fldt
ss
adc
stos
adc
sub
lods
mov
aam
push
mov
aas
xchg
pop
notb
sub
or
lret
sub
inc
fisttpl
dec
sub
test
xchg
sub
addr16
xchg
sbb
rorb
push
push
add
scas
lods
shlb
push
xchg
cli
jno
jo
add
xor
test
add
mov
ret
jge
subb
pop
shrb
mov
mov
push
dec
and
push
and
inc
or
mov
sub
test
orb
rcl
jae
cmpsb
and
aam
je
ret
rolb
cs
mov
aad
mov
enter
es
pop
fdivrl
push
test
aad
mov
push
je
lahf
mov
pop
or
movl
lock
and
sub
push
or
outsl
arpl
or
mov
add
add
js
arpl
insl
add
push
cmp
push
outsl
push
pop
sub
dec
mov
push
das
jns
pop
sub
ljmp
and
inc
sbb
jmp
pop
lods
inc
lea
xchg
push
or
notb
stos
adc
sbb
fmuls
xchg
pop
fwait
inc
and
adc
enter
mov
sbb
xchg
or
mov
test
arpl
jb
enter
cmp
add
mov
xor
push
or
lcall
push
test
inc
cmpsb
subb
mov
push
stos
push
test
lods
ds
push
and
xchg
xor
test
and
ret
mov
cs
or
pop
xchg
push
push
add
xor
inc
stos
push
mov
lea
lcall
movsl
inc
cmp
or
mov
jbe
xchg
movb
mov
push
mov
adc
jo
push
push
divl
lock
fcomps
mov
cli
and
pop
pop
sbb
or
add
pop
jb
lahf
dec
dec
scas
inc
addl
xchg
or
mov
dec
push
xor
call
mov
lahf
loope
or
push
mov
add
stos
les
ss
addb
aaa
cmp
inc
movsl
xlat
jb
push
sbbl
lods
mov
ficoml
cmp
inc
imul
aad
adc
pop
or
inc
adc
sbb
arpl
mov
sub
arpl
sarb
mov
jae
jb
rcrb
push
add
xorl
dec
push
cmp
mov
sub
adc
sub
xlat
add
or
inc
xchg
mov
xor
pusha
push
xchg
push
mov
sahf
mov
mov
in
add
movsl
dec
lods
rcr
mov
xchg
cmp
ficompl
rcrb
push
jae
push
mov
adc
sbb
mov
adc
cmp
mov
pop
add
push
inc
lods
xchg
fisttpl
pop
jb
xor
pop
into
and
imul
ret
cltd
cli
lods
xchg
test
pop
es
or
inc
lea
imul
das
inc
imul
adc
dec
roll
dec
sub
call
aad
imul
or
test
mov
ret
jbe
adc
xchg
imul
add
inc
cmc
add
mov
mov
xor
sbb
stos
push
jmp
sub
gs
das
imul
pop
in
icebp
sub
orb
test
inc
sub
pop
lods
push
xor
mov
pop
mov
mov
pushf
xor
movsl
mov
or
xchg
out
sub
jnp
pop
mov
mov
inc
add
and
aaa
push
or
inc
stos
cmp
movsl
mov
inc
xchg
pop
adc
inc
lods
lret
xor
js
das
sbb
push
ret
xlat
clc
or
sbb
mov
sub
or
lods
lock
cmpsb
mov
add
mov
dec
ret
imul
enter
add
xor
test
gs
testb
pop
jge
xchg
and
inc
cmp
push
dec
push
sub
in
xchg
call
cli
js
scas
loope
push
stos
jb
daa
sub
mov
dec
ret
js
mov
adc
push
sub
lods
xor
jbe
mov
out
xor
jo
push
jns
sub
adc
and
jge
mov
push
or
xor
push
jb
or
sub
mov
inc
push
sub
push
clc
lds
xchg
fidivl
xchg
pop
dec
inc
insl
dec
and
fnstsw
mov
ret
dec
inc
loope
add
into
mov
cmpsb
and
xor
inc
sub
or
scas
mov
jae
add
push
adc
popf
add
leave
sbb
cs
and
xor
jb
sub
xchg
das
sbb
push
xchg
add
dec
push
stos
data16
pop
aam
mov
pop
aad
xchg
or
mov
and
xchg
addb
pop
ret
dec
insl
mov
cmp
cwtl
inc
mov
scas
shrb
call
push
lods
adc
ja
sub
push
cmp
or
dec
mov
sub
push
outsl
dec
xchg
push
mov
mov
popf
mov
lea
mov
imul
push
lods
adc
leave
nop
and
mov
loope
cli
je
push
add
jecxz
sbb
xchg
mov
jno
inc
sub
lods
test
mov
in
icebp
mov
cmp
or
lods
mov
pop
mov
movl
rclb
cmp
mov
lods
add
arpl
mov
lcall
divb
mov
mov
sub
or
push
sub
mov
mov
jp
enter
push
xor
ljmp
das
push
or
mov
in
push
mov
test
dec
lods
inc
mov
mov
ficoml
test
test
mov
adc
fs
pop
sbb
xor
test
and
sub
mov
jle
pop
add
enter
adcb
addb
sbb
push
xchg
mov
or
lret
mov
loopne
sub
sub
mov
in
rcl
dec
scas
add
out
pop
mov
xchg
dec
and
push
xchg
add
mov
xchg
pop
mov
int
enter
or
out
dec
cmpsb
pop
fisubs
call
pusha
cs
xchg
mov
repnz
mov
jge
addb
mov
cmc
mov
jb
xchg
xor
push
loop
cmp
cmp
xor
mov
pop
lods
jns
mov
sbb
insl
xchg
xchg
mov
xor
and
xchg
nop
sahf
aam
test
dec
mov
or
mov
insb
cmpsb
inc
add
les
inc
pop
jecxz
push
xchg
mov
add
movsl
sbb
mov
call
cli
aam
or
jo
xor
stos
mov
mov
test
lods
push
adc
pop
movsl
mov
xchg
mov
rolb
jne
fprem
pop
lahf
xchg
add
mov
lcall
mov
add
push
jp
mov
push
cs
das
pop
fcomp
adc
add
loopne
test
test
adc
jne
dec
add
aad
xchg
cmp
xchg
xchg
adc
push
and
jo
push
or
or
push
jge
ljmp
adc
xor
ret
or
dec
lods
push
xor
pop
push
adcl
cs
lods
fisubs
pop
int
xor
pop
pop
xchg
outsl
adc
push
or
mov
stos
inc
in
lret
and
popf
xor
fnstcw
inc
imul
lea
adc
xor
xlat
jo
sbb
jmp
sub
pop
mov
dec
ds
mov
test
sub
rorl
or
jmp
imul
aas
jns
mov
mov
push
add
imul
sbb
addb
mov
sbb
ficoml
mov
cs
cmp
les
and
test
xchg
xchg
stos
lcall
mov
in
sbb
push
pop
jo
inc
pop
push
jb
xchg
int3
lea
sbb
ljmp
xchg
xchg
dec
xchg
xor
push
clc
movsl
push
loope
mov
inc
add
rorb
cld
sti
ret
sub
mov
sbb
inc
mov
cltd
xor
in
jle
push
jo
push
or
outsb
outsl
fildl
and
cmp
mov
sbbb
fidivrl
mov
fiadds
inc
cwtl
pop
repnz
pop
add
ret
inc
add
inc
mov
pop
xchg
and
inc
or
mov
lea
jb
enter
xchg
mov
cmpsb
test
aam
fistpl
mov
push
adc
mov
push
dec
mov
and
push
mov
push
inc
fildl
insb
cmpsl
frstor
test
fxch
shll
roll
fiadds
xor
out
and
pop
push
push
aad
sbb
inc
sub
push
push
rcl
clc
cmp
pop
test
sbb
mov
subb
push
or
repnz
push
dec
mov
imul
loope
subl
adc
push
push
inc
inc
jns
sub
rorb
sub
rorb
mov
cmpsl
clc
xor
aam
inc
pop
fsin
loopne
test
inc
rcll
lcall
xchg
das
push
subl
pop
shl
sub
sbbb
mov
cmpsb
std
sub
push
dec
out
sbb
sbb
imul
pusha
call
pop
mov
nop
mov
insl
add
stc
mov
push
dec
and
xor
sbb
sahf
push
or
ss
cs
test
hlt
cmp
mov
subb
repnz
jnp
mov
or
imul
pusha
push
subb
xor
imul
fidivl
or
xor
mov
adc
insb
adc
pop
add
dec
adc
lea
and
cmpsb
pop
push
pop
xchg
orb
sahf
test
pop
sub
jle
mov
loope
mov
pop
xchg
sbb
lcall
add
xor
pop
aam
das
add
inc
lea
adc
mov
repnz
or
mov
sub
nop
ret
push
push
std
das
adc
inc
popf
add
xchg
adc
filds
ss
cs
sahf
imul
aam
add
dec
cltd
sub
or
je
clc
lret
sub
mov
mov
and
cmp
leave
lds
add
insl
leave
add
jb
bound
mov
mov
pop
mov
inc
jbe
push
scas
mov
pop
andl
xchg
mov
sub
sub
adcb
inc
test
push
adc
xchg
lahf
or
lods
sbb
pop
sbb
imull
or
adc
push
fwait
push
mov
mov
jne
xor
sti
pop
dec
mov
push
lds
cmp
lods
adc
or
lds
popf
movsb
mov
rolb
push
push
clc
subl
lods
xchg
xchg
std
movsl
mov
mov
dec
aaa
push
mov
lret
mov
jle
push
mov
jg
inc
sub
and
lcall
int
cmp
mov
jecxz
sub
sub
add
xchg
xchg
and
loope
sbb
scas
mov
push
jae
les
shrl
dec
int
push
sub
sahf
lods
lea
clc
pop
insl
rol
xor
pop
sub
xchg
xor
mov
push
cltd
or
lods
add
nop
mov
add
sahf
mov
add
mov
lods
mov
inc
mov
mov
jle
std
dec
mov
inc
divl
inc
push
add
fidivrs
add
out
xchg
test
mov
and
sub
add
cmc
shll
cmpsl
push
sub
mov
and
cwtl
dec
inc
mov
inc
sub
adc
arpl
and
xor
dec
shrb
push
shrl
xor
fiaddl
pop
mov
mov
sub
mov
jae
faddl
ss
movsl
outsb
dec
outsb
pop
xrelease
pop
lea
sub
push
pop
js
push
mov
mov
aad
inc
mov
test
xchg
add
push
sub
mov
push
sbb
add
mov
jnp
lock
jmp
xor
inc
scas
cmpb
js
fwait
xor
jl
push
stos
test
lret
xchg
sbb
sub
out
sub
pop
imul
push
in
decl
fcomps
and
mov
ret
push
mov
push
lods
fimull
es
iret
add
inc
fwait
lock
and
daa
jg
jo
cmp
imul
mov
stos
inc
shrb
and
xchg
shlb
loopne
jns
rcl
or
and
and
subl
mov
xor
testl
cs
pop
mov
mov
mov
nop
sub
sbb
mov
mov
ret
in
add
or
cli
or
mov
or
lock
jbe
ret
out
xchg
pop
into
cs
adc
adc
mov
movsb
roll
test
xor
imul
icebp
lock
mov
bound
fistpll
mov
sbb
test
sub
mov
aad
nop
push
and
dec
movsb
mov
sbb
outsl
sbbl
dec
xor
sti
add
mov
and
stos
call
scas
xor
push
adc
pushf
push
mov
ja
sub
mov
js
mov
daa
adc
xor
shll
and
dec
push
xor
ja
sbb
mov
test
pop
or
lods
jne
rclb
adc
pop
fisubs
jb
orl
add
int3
push
imul
pop
je
ljmp
push
mov
xorb
lcall
adc
cmp
cmpsb
lcall
pop
mov
mov
adc
and
push
add
bound
add
inc
test
insl
dec
cmp
in
clc
das
push
loope
jg
lcall
popl
pop
mov
movsb
mov
adc
and
add
xchg
or
mov
scas
in
test
lea
push
jnp
lea
mov
or
dec
roll
sbb
adc
push
lret
stos
sub
or
lods
loope
xlat
mov
stos
push
lret
loop
cwtl
pop
stos
mov
inc
icebp
jb
adc
push
mov
add
fisttpll
inc
dec
fadds
mov
add
push
add
sbb
sbb
and
push
jns
ss
loopne
add
cmc
inc
rorl
lret
sahf
xor
cmp
aad
push
adc
ja
daa
push
add
jno
cltd
test
or
jl
aad
inc
add
mov
xor
int
add
mov
pop
lock
mov
xor
lods
cmp
sub
push
sbb
dec
retw
sub
mov
push
sbb
mov
jb
pop
mov
jl
lods
inc
lods
adc
ljmp
ret
xchg
outsb
nop
add
fsubs
cmpsb
test
or
scas
scas
add
stos
bound
sub
push
push
or
mov
dec
mov
and
mov
push
test
das
sub
nop
mov
xchg
push
mov
das
mov
in
loope
dec
cmp
enter
dec
xor
adc
mov
lods
add
xchg
loopne
xor
push
dec
int
leave
inc
outsb
adc
push
mov
aad
pop
mov
sub
mov
gs
push
pusha
mov
mov
and
push
mov
pop
in
leave
adc
test
sbb
inc
sub
xchg
lcall
xor
pop
ds
mov
push
lahf
push
aad
cwtl
pop
xchg
sbb
push
mov
pop
add
pop
jb
inc
test
mov
insl
sub
das
add
mov
aam
test
pop
push
xor
arpl
mov
jg
sub
cld
push
push
popa
pop
xchg
shll
adc
stos
in
cmpsl
fisubl
xchg
sub
fistpl
xlat
rol
sub
sbb
movsl
stos
scas
sbb
rcl
jo
test
xchg
add
inc
movsl
mov
mov
sub
mov
inc
rcll
push
adcl
rorb
rcl
mov
jb
mov
dec
fnstcw
lret
popa
sub
xchg
dec
xchg
mov
mov
jmp
and
push
lea
fsubl
adc
in
sub
sub
addl
lahf
test
mov
xor
push
add
sbbb
sub
xchg
push
push
dec
pop
rcr
sub
gs
push
sub
sti
arpl
mov
xorl
inc
pop
cmpsb
dec
xor
and
xchg
push
int
fcmovnu
ret
sbb
mov
stos
leave
sub
adc
mov
stos
inc
add
push
rcl
add
push
cli
jmp
or
jo
data16
jl
jl
lods
cwtl
xchg
jb
inc
lods
push
cmp
loop
aad
push
pop
imul
test
pusha
rorb
pop
mov
sbb
and
add
mov
push
mov
and
cmpsb
lods
cmp
mov
jae
or
push
loope
push
jb
imul
cmpsb
sti
in
in
mov
push
xchg
das
stos
lods
fstps
shlb
and
inc
mov
dec
lds
test
fdivs
adc
inc
mov
push
roll
inc
lea
lock
pop
pop
aam
data16
in
cwtl
test
mov
ficoml
lea
int3
mov
mov
sub
fdivl
add
and
or
inc
add
pop
mov
push
sub
mov
in
push
push
ret
cwtl
mov
stos
add
and
sub
inc
mov
inc
sbbl
sub
mov
fisubrl
push
jge
loope
mov
jg
jp
push
lods
sbb
sub
dec
mov
add
and
jo
adc
mov
or
pop
push
push
inc
imul
insl
pushf
fistps
je
shrl
sbb
stos
sub
out
add
inc
les
xchg
adc
sbb
xchg
jle
in
je
jb
jb
adc
push
mov
jbe
movsb
test
sub
xor
in
push
or
lods
mov
pop
fwait
adc
sbb
adc
sub
pop
dec
lea
scas
xchg
mov
push
repnz
inc
jb
clc
and
aam
outsl
in
mov
aad
sbb
and
sbb
aam
test
das
test
pandn
mov
movsb
adc
dec
dec
or
sub
mov
addb
sub
dec
or
inc
xor
xchg
cmc
mov
ret
adc
sub
pop
and
or
inc
mov
test
inc
mov
sbb
push
test
stos
data16
test
add
hlt
mov
stos
adc
adc
test
icebp
fs
jns
xchg
push
orb
adc
mov
inc
xor
movsb
and
inc
lods
mov
mov
imul
inc
lret
add
push
fwait
loopne
pop
rcll
push
jae
dec
dec
popf
js
fildl
cmp
xor
push
push
cwtl
or
push
cmp
icebp
cmp
int
lret
and
cli
imul
xor
or
fcoml
push
adc
dec
inc
and
fimull
add
mov
popa
sbb
or
mov
add
cvtps2pd
testl
cli
push
mov
sbb
orb
jg
jb
sbb
jno
or
push
sbb
adcb
cmc
mov
ret
bound
adc
inc
movsl
test
xlat
jbe
push
mov
leave
xchg
das
jmp
or
callw
jae
andb
jns
jmp
or
push
dec
sbb
inc
sbb
orb
lahf
test
jo
call
test
dec
push
lods
daa
xchg
xor
add
mov
or
and
mov
and
test
jge
jno
js
mov
add
fs
or
pop
testb
pop
add
into
xchg
mov
rcrb
sub
mov
sbb
cmp
or
push
or
pop
and
lea
push
int
dec
push
xor
scas
enter
mov
mov
daa
push
mov
and
push
jb
jno
mov
push
sbb
sub
sub
test
inc
sub
pop
inc
xor
lea
sub
push
rcr
mov
lret
imul
add
scas
mov
cmp
xor
push
cltd
pop
add
pusha
mulb
cs
sub
adc
add
push
stos
sbb
sbb
xor
jg
mov
mov
sbb
je
mov
addb
lods
add
push
mov
xorl
ret
aad
test
inc
push
jbe
and
add
mov
sbb
lea
shlb
add
pop
mov
lret
cmp
mov
adc
inc
cmp
jb
cmp
inc
add
adc
dec
stos
xor
dec
inc
cmp
adc
mov
jno
lahf
push
daa
cmc
add
mov
push
xor
inc
mov
mov
ss
add
arpl
adc
cmp
subb
or
aam
insl
orl
pop
push
pop
and
loopne
mov
sub
xlat
mov
sub
or
test
rcrl
lret
push
in
sbb
popa
dec
inc
add
inc
xor
inc
adc
sbb
xor
push
outsl
push
fs
xchg
mov
outsl
push
and
test
mov
aam
mov
sti
cld
dec
loopne
test
and
mov
adc
adc
push
or
jle
adc
test
in
pop
inc
sub
dec
xor
cmp
sbb
jmp
sbb
subb
pop
xor
test
sub
xor
add
mov
add
add
sub
inc
test
pop
push
inc
imul
ret
push
test
aam
lea
mov
push
imul
mov
mov
lea
lahf
lcall
pop
icebp
sbb
push
adc
sub
movsl
or
fdivl
mov
lcall
sbbb
ss
sbb
add
sbb
dec
xor
push
xchg
popf
inc
fstpt
mov
jb
orb
mov
push
xor
enter
movsl
mov
jno
test
jb
aad
inc
xor
sub
shll
mov
mov
or
sub
rorl
popa
int
add
movsb
jmp
mov
sub
mov
push
mov
incl
je
pop
clc
movsb
pop
push
incl
push
mov
push
or
adc
xor
int
inc
xchg
repz
lea
or
push
xchg
mov
mov
shll
xor
xchg
jno
add
push
ret
adc
push
xor
stos
int
sbb
outsl
xchg
insl
lret
stos
adc
outsb
mov
lds
jno
push
xor
mov
add
mov
test
mov
pop
cmp
lock
pop
lret
aad
cmp
test
mov
xor
pop
and
push
mov
testl
pop
adc
lods
sbb
cmc
testl
nop
andl
pop
sbb
lcall
fnstsw
xor
push
mov
jae
adc
pop
rclb
add
xor
sub
pop
sahf
lcall
xor
push
imul
xchg
push
xor
sbb
mov
pop
addb
sub
incl
jmp
or
inc
cwtd
es
xchg
mov
add
pop
js
mov
sbb
adc
lds
sbb
sub
iret
bound
test
shr
leave
jno
inc
sbb
push
mov
and
inc
push
and
push
repnz
mov
push
push
mov
cmp
rclb
mov
ss
sub
or
add
test
xor
mov
clc
fcmovnbe
test
push
add
sub
xor
inc
or
pop
push
push
or
loopne
adc
std
dec
jle
or
ss
scas
icebp
shlb
or
dec
mov
mov
mov
les
icebp
orb
je
pusha
mov
pop
sbb
cmp
pop
mov
inc
xchg
pop
mov
cwtl
data16
shrl
les
hlt
popf
dec
mov
mov
xlat
and
aam
addr16
mov
cmpsb
add
not
aam
out
and
xor
cmpsb
jmp
testb
push
pop
lds
sub
div
push
xchg
es
and
push
mov
mov
aad
push
jne
bound
adc
adcb
addr16
ret
or
mov
xchg
pop
adc
inc
sub
cli
mov
or
inc
shll
std
xchg
in
cltd
or
mov
pop
jae
xchg
stos
add
xor
inc
stos
rcr
lods
push
mov
xchg
leave
push
jne
dec
sbb
jmp
mov
xchg
jmp
rcrl
sbb
push
insb
cmc
add
sbb
mulb
popf
cmp
push
or
out
or
lods
or
pop
add
sub
jne
insl
add
dec
mov
stos
sub
push
dec
jb
push
add
mov
sbb
jecxz
lea
mov
or
adc
pop
dec
push
aam
add
ljmp
adc
fisubl
nop
bound
push
sub
xchg
push
and
jmp
add
lds
movsb
fstp
in
or
movsl
sub
sub
imul
mov
cmp
fldl
movsl
mov
xchg
mov
dec
xchg
inc
xchg
push
data16
mov
fldenv
push
push
cmp
jg
sub
cmp
jl
loopne
test
pop
addb
sub
sbb
in
mov
in
pop
lods
addb
inc
shrl
shrl
adc
lock
mov
out
rorb
sub
push
or
aad
inc
add
cmp
inc
in
sbb
mov
cld
xchg
sub
push
cld
jp
adc
adc
mov
pop
lock
push
addr16
add
xchg
rcll
mov
mov
pop
xchg
mov
cmpb
jmp
or
push
mov
lret
xchg
std
add
or
push
mov
rep
adc
jp
test
lcall
jl
shrb
cmp
enter
or
mov
sbb
test
ja
dec
sahf
push
and
push
mov
or
ljmp
cmc
les
add
imul
ja
mov
fdivr
ret
sbb
popa
pop
test
in
push
mov
imul
ret
and
inc
cwtd
add
test
cmp
push
test
movsl
inc
sub
sti
mov
orl
fsubs
push
or
scas
cmpsb
xchg
cwtl
ficoml
sbb
pop
mov
lahf
pop
in
inc
fisttpl
aad
lods
decb
aam
inc
and
mov
or
cmp
inc
es
xor
sti
or
push
mov
test
bound
inc
lods
pop
lret
mov
mov
push
pop
push
and
mov
pop
mov
dec
cmpsb
inc
mov
push
stos
lods
xor
adcb
adc
stc
lea
mov
add
lea
adc
ffreep
fs
sub
pusha
mov
mov
xchg
nop
xchg
movsb
add
push
xor
mov
jne
sbb
orl
call
xchg
jge
cmc
lea
sbb
ret
stos
mov
pushf
loop
imul
sbb
jne
xchg
push
das
mov
push
or
and
push
add
aam
adc
test
mov
subb
jge
mov
jl
add
push
sarl
in
andb
mov
xor
or
aad
fs
push
xor
inc
mov
dec
jge
add
sub
imul
cmpsb
addb
mov
insb
inc
jg
stos
sbb
in
movsl
aad
mov
push
in
andl
or
imul
stos
add
jae
stos
stos
mov
xor
jae
jp
jae
loopne
sub
loopne
push
push
mov
xor
inc
jl
add
insl
add
mov
popa
aam
in
dec
ret
lret
cmp
in
or
adc
daa
sbbb
lods
inc
imul
rorl
rcl
cmp
add
mov
xor
mov
orb
jmp
adc
ret
lods
inc
mov
inc
das
arpl
xchg
sub
adc
or
and
or
sub
aad
mov
mov
les
dec
stos
cli
mov
xor
adc
or
and
pop
dec
jne
push
adc
sbb
and
jne
ret
orb
lea
sbb
add
push
repz
stos
xor
adc
mov
add
mov
shlb
dec
test
test
movsb
cmp
test
in
push
add
push
stos
or
adc
mov
pop
ffree
or
test
stos
adc
adc
push
or
and
push
xor
pop
adc
sbb
mov
push
mov
les
test
and
push
mov
xchg
sti
icebp
lcall
sbbb
andb
roll
push
xchg
jle
pop
inc
and
adc
test
into
and
sub
rcr
jb
mov
xchg
loope
push
push
jo
or
jo
xchg
subl
in
mov
cs
aad
push
rcll
push
xor
lea
cmp
nop
mov
lcall
xchg
mov
pop
or
mov
or
and
jb
daa
orl
sub
aam
scas
outsl
mov
sbb
pusha
and
subb
add
and
cmp
enter
insl
cltd
fsubs
pop
mov
push
pop
sbb
sub
cmpsb
lock
sub
inc
cs
or
ret
pop
push
popf
mov
dec
inc
loopne
test
mov
fs
mov
mov
in
pop
mov
enter
xor
jno
aas
sub
std
ljmp
inc
lcall
in
jns
out
or
push
mov
mov
das
xor
push
push
cli
inc
push
pop
xchg
ds
push
loope
lods
mov
sub
xor
inc
lods
xor
pop
xor
jno
ret
jle
adc
xchg
fwait
cmp
push
mov
cltd
jnp
lea
shrd
out
dec
daa
stos
sbb
mov
mov
mov
out
pop
add
stos
mov
xor
adc
pop
ret
test
mov
mov
cmp
pop
add
dec
cmp
or
xor
or
mov
xchg
dec
mov
adc
movsb
push
xor
inc
push
xchg
mov
push
enter
xchg
jae
cli
ret
or
mov
dec
mov
and
dec
out
push
push
xorl
and
mov
lods
adc
pop
roll
iret
xchg
fcoml
dec
es
dec
imul
lods
pop
lds
jae
mov
bound
adc
mov
imul
dec
xchg
or
jge
push
or
mov
push
jbe
pop
adc
enter
stc
in
mov
mov
jb
xchg
push
rcrl
push
shl
cs
sbb
pop
test
add
pop
and
ret
mov
imul
daa
mov
mov
ret
push
jne
lea
and
mov
mov
fs
pusha
incb
dec
pop
clc
mov
push
mov
sub
xor
xor
push
xor
add
xchg
sbb
or
and
push
nop
mov
movsl
imul
push
cmp
outsb
mov
add
movsb
ret
mov
mov
ret
push
sbb
popa
xor
lods
aad
in
mov
mov
and
push
pop
pop
and
aaa
mov
dec
jg
int
sub
popf
mov
hlt
mov
lahf
stos
pusha
rolb
loop
movsl
push
mov
pop
and
loop
or
cld
fimull
cmp
cli
push
test
aam
dec
xchg
loope
xchg
xchg
lods
add
xor
add
das
repz
add
cmpsb
roll
lahf
mov
jl
and
aad
shrb
xorl
pop
or
movsl
ret
adc
sub
pop
mov
adc
outsb
outsl
sub
addr16
mov
add
dec
push
subl
dec
jae
nop
ljmp
jge
push
pop
outsb
ljmp
cld
jg
sub
pop
rcll
or
mov
add
push
xor
jge
mov
cs
or
shlb
xchg
lret
or
lods
mov
add
dec
scas
mov
push
loope
inc
lea
cltd
mov
inc
lea
ds
lcall
ret
lret
int3
mov
push
roll
xchg
ja
or
test
and
jno
out
cmp
aad
push
jge
sbb
add
mov
stos
push
pop
cmp
adcb
xlat
adc
adc
nop
mov
ret
adc
push
cmp
pusha
xchg
pop
push
sub
push
mov
inc
test
push
cmpsl
aas
dec
testl
shll
inc
and
or
shlb
mov
dec
cmp
cmp
pop
mov
push
sbb
in
iret
mov
xor
call
inc
ja
jle
aam
mov
add
faddl
cmp
cmp
push
fidivrl
sub
dec
dec
pop
mov
xor
clc
mov
push
orb
mov
lods
and
push
shlb
subl
cmpsb
and
mov
adc
rorb
jp
xchg
test
stos
pop
imull
aam
push
sbb
sub
daa
test
mov
ljmp
mov
add
inc
std
or
push
inc
movsl
xchg
fadd
pop
imul
mov
or
outsl
push
pop
stos
xchg
mov
inc
push
mov
inc
adc
rcl
les
adc
inc
cwtl
test
jno
mov
mov
cmp
sub
bound
pop
and
call
and
sub
or
inc
imul
and
sbb
rcll
lea
inc
push
xor
es
mov
push
xchg
sub
xor
pop
or
test
aaa
movsl
out
ljmp
inc
sub
mov
xchg
or
roll
outsb
popa
ret
cmp
icebp
ret
enter
mov
add
jo
enter
mov
lahf
add
mov
push
and
loope
addl
inc
outsl
dec
push
jno
push
roll
mov
shll
adc
xor
adc
jne
cs
add
lods
lea
pop
lret
inc
inc
imul
push
xor
ss
pop
or
add
lods
cmpsl
or
loop
stos
inc
mov
cmp
cmp
loop
adc
rcr
je
fdivs
push
push
pop
sbb
xor
sub
sub
lods
rolb
xor
jecxz
test
adc
sbb
pop
loop
icebp
mov
push
test
push
push
cwtl
mov
out
add
nop
in
add
sub
icebp
add
or
adc
mov
stos
xchg
ljmp
push
test
push
imul
inc
push
mov
mov
xor
popa
sub
push
int
jae
push
ds
mov
ljmp
or
mov
in
mov
sub
stos
scas
xchg
stos
lds
inc
sub
in
aad
and
add
push
orl
insl
and
pushf
dec
push
sbb
in
or
jecxz
leave
hlt
mov
je
clc
cmc
movsb
mov
pushf
and
dec
xor
lahf
arpl
pop
imul
in
out
adc
push
shrl
dec
adc
andb
lods
pand
push
or
mov
ja
mov
decb
ja
adc
test
mov
add
fcoml
push
push
xor
xor
xor
and
rcll
cli
mov
pop
dec
or
ret
push
mov
mov
lods
sub
mov
mov
sbb
jb
aam
xor
mov
lea
mov
jb
mov
and
shrb
dec
fs
sbb
push
pop
mov
add
shrb
pop
jl
dec
add
insl
movsl
push
push
mov
test
movl
xor
movsl
clc
cli
icebp
outsl
cwtl
mov
mov
mov
jg
aad
mov
inc
mov
cld
pop
or
popf
xchg
test
movsb
cmpb
nop
jle
mov
out
sti
mov
xor
orb
mov
shll
inc
xlat
insl
or
les
add
addb
dec
mov
mov
lock
push
and
inc
xchg
sub
xor
xchg
imul
in
and
cmp
out
sbb
addb
add
ds
gs
pop
add
cmp
sbb
fidivs
mov
test
lea
pop
xchg
test
ret
mov
pop
push
mov
rcrl
mov
inc
shr
testl
push
subb
cmp
sub
cmpsb
push
sub
inc
rcrb
jbe
enter
push
subb
push
adc
add
or
sbb
lods
cli
mov
adc
mov
ret
icebp
pop
mov
xor
xlat
mov
xchg
test
push
adc
mov
push
mov
int
dec
sub
pop
lcall
xor
sub
sub
add
data16
mov
orl
rcrb
fsubs
push
mov
mov
add
xor
pop
sbb
aas
and
adc
mov
add
push
xchg
test
mov
cmpsl
das
mov
ds
xchg
out
ficoml
mov
jo
test
sti
bnd
movsl
pop
cmpl
arpl
int
push
inc
push
xor
pop
mov
pop
fstpl
add
mov
sub
inc
dec
push
push
sub
mov
inc
and
mov
in
jg
push
test
push
pop
push
push
push
shrb
sbb
aam
lahf
push
adc
neg
rorl
out
insb
xchg
mov
ret
sub
sbb
jge
fsts
mov
and
sbb
adc
testl
dec
ds
jns
push
push
notl
or
push
add
sbb
imul
mov
mov
push
les
sub
test
push
cmp
add
push
jo
push
insb
push
rcrb
dec
out
cmp
inc
sub
or
dec
cmp
lods
xchg
mov
xchg
fsubl
cmp
icebp
or
sub
shlb
push
adc
mov
imul
sti
add
adc
inc
movsl
out
lds
mov
inc
jbe
xor
mov
nop
or
test
neg
jg
push
xor
cmp
lea
push
mov
lcall
mov
cmp
shrb
mov
mov
ss
stos
pop
mov
push
es
mov
mov
push
mov
loopne
loop
std
adc
or
shll
inc
cltd
push
pop
in
mov
pop
mov
or
pushw
test
mov
dec
pop
andb
adc
and
loopne
push
sub
loopne
inc
jg
push
mov
pop
das
cli
inc
mov
sar
or
push
in
adc
sub
mov
arpl
cmp
mov
xorb
mov
in
nop
rcl
push
push
outsl
sub
cs
test
imul
push
mov
xorl
orb
xchg
mov
dec
outsb
sub
mov
test
add
lods
js
dec
xorb
roll
push
or
inc
push
add
rcrl
loopne
cmp
mov
int3
sbb
andb
push
or
push
enter
testl
sahf
fistl
stos
movsl
aad
pop
cli
fadds
sub
ficomps
mov
movsb
ret
jbe
add
mov
mov
push
xchg
int3
mov
or
jb
jle
les
mov
mov
mov
lret
pop
rclb
mov
sbb
or
icebp
push
int
stos
push
out
xchg
stos
adc
cmp
add
add
scas
je
imulb
andl
push
stos
sbb
or
sub
cmpl
xchg
adc
xor
ljmp
pop
gs
mov
add
push
mov
jg
and
add
cmp
push
inc
aad
push
insl
pop
pop
mov
cmpsl
lods
inc
push
sub
mov
roll
sub
mov
arpl
push
sub
lcall
sbb
sbb
mov
sub
mov
stos
shlb
lret
movsl
or
sub
mov
xor
inc
adc
jge
mov
repnz
or
inc
xchg
add
mov
sub
lahf
enter
inc
orl
fwait
push
aad
xor
adc
xchg
xchg
sub
mov
pop
and
pop
jae
sub
xchg
pop
lahf
mov
sub
or
outsb
lahf
push
lea
mov
or
mov
or
or
andb
push
stos
andb
movsl
mov
das
add
jo
ror
add
dec
lods
sub
cmp
cmp
js
add
and
and
je
sub
aad
and
mov
insl
xchg
mov
inc
jb
pop
sub
add
xor
mov
cld
jp
xchg
sahf
push
stos
adc
imul
pop
hlt
xchg
aam
xlat
mov
xlat
adc
cltd
cli
je
jo
mov
push
fisubl
pop
cli
add
popa
stc
xor
cmpl
sub
scas
pop
mov
mov
push
adcb
inc
inc
or
push
jnp
xor
add
mov
inc
mov
nop
test
mov
sbb
adc
mov
ret
sbb
mov
daa
mov
ret
add
addr16
call
test
push
popf
pop
mov
xor
loopne
pop
inc
xchg
sub
into
add
shll
add
call
sbbb
call
mov
in
int3
adc
inc
mov
test
add
pop
inc
imul
ret
or
pop
inc
andb
push
aam
bound
je
cmp
imul
repz
jae
mov
imul
jmp
cmp
xor
mov
sub
or
or
xor
loopne
pop
push
ss
out
push
dec
mov
mov
add
ret
divl
das
push
movsl
pushw
les
mov
mov
dec
movsl
push
repz
mov
adc
jo
in
inc
xor
lods
aas
cmp
mov
adc
or
and
or
jp
adc
negl
push
dec
movsl
mov
xlat
or
xor
xchg
mov
mov
mov
inc
loope
test
adc
xchg
pop
jo
mov
and
inc
mov
sub
push
xchg
addb
xchg
mov
movsl
scas
adc
clc
pushl
jns
adc
mov
push
and
insl
lods
imul
daa
sub
sbb
mov
push
je
inc
addl
shll
sub
outsl
xor
sub
xor
out
jmp
mov
lods
fisubrl
add
pop
mov
mov
out
idivb
outsl
lea
adc
xor
push
test
js
cmpsl
sub
push
ret
sub
sbb
outsl
iret
pop
push
imul
hlt
pop
xor
mov
shlb
sub
push
aad
fcoms
mov
adc
es
sub
mov
int
mov
dec
jmp
adcb
xor
loop
push
add
data16
int
xchg
pop
and
xchg
test
mov
jo
ret
js
xor
inc
sub
insl
inc
sub
mov
rorl
or
fiadds
dec
adc
mov
push
cs
mov
nop
add
fistps
sub
loop
movsl
test
push
push
andb
mov
or
ljmp
repz
pop
push
xor
mov
movsb
sbb
scas
push
dec
add
rcrb
cmp
pusha
and
xor
jns
dec
mov
sbb
mov
repnz
jo
imul
adc
pop
mov
inc
fcmove
notl
test
subb
sarl
and
push
jmp
hlt
jno
add
fistpll
cmp
rolb
inc
pop
test
adc
into
lods
push
xor
push
sbb
or
mov
scas
cmp
mov
repz
add
fiaddl
cmp
inc
gs
loope
jb
pop
push
xor
das
xor
dec
test
insl
outsl
mov
inc
inc
xchg
mov
dec
movsl
pop
mov
push
lea
aad
and
test
ds
cmpsb
lea
jns
test
out
jle
mov
roll
inc
fnsave
push
push
adc
mov
push
mov
pop
shlb
jp
cmp
xor
xchg
push
jne
push
out
jmp
shlb
sub
js
test
mov
dec
inc
mov
mov
mov
in
lea
dec
inc
jns
sub
ss
or
sub
push
mov
mov
pop
cltd
mov
push
mov
lahf
xor
push
xor
daa
ljmp
rcrb
push
daa
jge
shrb
loop
ret
xor
mov
cmp
jns
sub
cmp
daa
or
popf
negl
pop
mov
aam
mov
mov
test
pop
adc
mov
push
push
add
cltd
cmc
stos
pusha
imul
cwtl
pop
mov
pusha
sub
push
fildl
cmp
push
lcall
sbb
push
add
add
xlat
lods
inc
imul
lods
out
cltd
sbb
mov
add
stc
cmp
mov
add
popa
push
mov
adc
push
add
rcr
xchg
inc
lock
rcrb
cs
test
sahf
xlat
push
scas
sahf
jle
repnz
call
mov
shrl
inc
into
aaa
sbb
pop
xor
mov
daa
mov
in
push
or
push
orb
outsb
shll
xor
bound
pusha
ret
in
jno
icebp
xorb
jbe
inc
jae
and
loope
mov
test
or
cmp
push
push
push
pop
adc
lds
repz
xchg
lcall
mov
inc
inc
adc
inc
mov
or
aam
cli
sarl
imulb
mov
mov
pop
lahf
xor
adcb
ror
mov
mov
shrl
loopne
out
add
jnp
dec
xchg
mov
movb
adcl
and
xor
xchg
xchg
mov
fld
inc
sub
push
cltd
cli
inc
push
jb
push
and
inc
orl
xor
push
push
xor
inc
cmp
push
add
push
mov
mov
movsl
mov
ret
fdivrs
fdivr
ja
rcrb
xchg
ljmp
jecxz
push
push
pop
jne
in
mov
xorl
out
pusha
inc
or
xor
fdivr
sub
stos
shll
call
xchg
hlt
add
jbe
dec
bound
sti
sbb
scas
mov
mov
gs
push
in
das
mov
mov
jbe
dec
add
pop
ljmp
pop
shrb
roll
jae
cltd
mov
mov
cmc
fldt
aad
sahf
and
push
dec
in
pusha
mov
push
push
mov
pop
cmpl
fldl
push
hlt
in
xlat
cmpsl
sub
popf
repz
xchg
jecxz
or
dec
push
add
dec
xchg
sub
out
mov
dec
sbb
pop
outsl
js
mov
inc
push
push
and
repz
lods
pop
mov
sti
pop
ss
movsb
negb
es
mov
xchg
ljmp
imul
cmp
or
jg
daa
and
add
icebp
test
jmp
int
pop
fwait
call
sub
mov
push
sbb
pop
jp
cwtl
hlt
cld
xorb
shrl
pop
fnstsw
sbb
and
lods
ret
inc
in
push
decl
arpl
mov
into
xor
fwait
gs
mov
jmp
js
jmp
lret
aad
mov
pop
stos
sbb
fldz
mov
lret
push
imul
lods
orb
sub
aam
out
mov
pop
inc
jbe
enter
pop
stos
pop
jge
cmp
mov
andl
pop
or
pushf
mov
jmp
out
xor
orl
fdivs
xor
xor
dec
cli
jbe
aaa
adc
sar
ljmp
icebp
or
dec
out
push
push
hlt
xor
mov
adc
loopne
fcos
inc
mov
ja
loope
hlt
pop
aaa
fldt
aam
nop
jl
aaa
xor
fwait
movsl
xor
mov
in
jg
decl
sub
sbb
inc
aad
test
sbb
fldl
insl
xor
decl
iret
cwtl
movsb
add
addr16
stos
dec
sub
leave
pop
mov
and
mov
jg
mov
cmpsl
mov
popf
push
loop
in
leave
jg
ljmp
fimuls
inc
lret
les
in
repz
mov
jge
pop
lret
fld
xchg
add
cmpsl
xchg
lret
outsb
add
adc
andl
push
xlat
ss
inc
inc
push
lret
subb
xchg
fsub
pop
dec
shlb
dec
jle
lret
sbb
hlt
out
test
mov
cwtl
push
pop
rorb
rolb
imul
xchg
add
mov
jo
loop
in
and
in
decl
sub
ret
movsl
fcmovnbe
or
fistpll
mov
ljmp
decl
xlat
pop
aas
stc
and
sbb
add
xchg
mov
pop
mov
ret
shrl
std
jmp
mov
popf
imul
daa
mov
inc
cmc
mov
das
hlt
jmp
inc
pop
lock
xchg
scas
jae
adcb
and
sbb
or
mov
scas
lret
push
enter
decl
lds
or
inc
stos
jecxz
mov
lods
loope
xchg
cld
lcall
ds
lahf
subb
jnp
in
scas
lods
inc
or
aaa
dec
mov
pop
cmp
jl
jns
xor
outsb
cmp
or
add
sarl
clc
call
mov
cli
dec
movsl
adc
cmp
push
daa
in
fwait
ja
inc
je
pop
sub
xchg
leave
and
jae
push
add
adc
lcall
push
dec
dec
mov
mov
xchg
pop
inc
sbb
sub
adc
lcall
adcb
emms
movsl
pop
or
rolb
adc
in
sub
clc
lods
adc
enter
pop
jne
jg
mov
dec
mov
ss
push
xchg
cmp
ja
xor
mov
pushl
ret
add
inc
push
nop
sub
sub
and
and
add
mov
jmp
push
xchg
ja
push
mov
imul
dec
push
ret
stc
xchg
xor
cmp
jl
je
xor
repz
xrstor
xchg
test
inc
add
mov
andl
inc
push
fsub
lcall
push
ja
add
incl
mov
addr16
inc
jg
in
arpl
jb
jle
sub
jne
sub
inc
mov
fimull
mov
mov
push
xor
repnz
test
inc
movsb
faddl
xor
icebp
andb
in
jmp
lret
mov
mov
daa
sub
and
or
mov
dec
sub
fmul
test
push
mov
decb
addl
add
lret
shr
inc
cltd
aas
dec
cmp
push
rcrb
lret
lret
cltd
pop
mov
aas
and
jnp
dec
pusha
roll
call
inc
mov
call
xor
mov
in
adc
in
mov
leave
add
out
lcall
jmp
mov
arpl
push
cmp
xchg
cmp
test
incl
movsl
jbe
shll
mov
insb
push
add
fisubrl
icebp
call
clc
push
cmp
xchg
inc
orl
jp
xor
fistl
ljmp
ret
cmp
sub
push
jge
add
xchg
dec
cs
cmpw
ljmp
sbb
loope
test
inc
popa
hlt
ljmp
mov
cmp
mov
movsb
inc
xchg
sbb
bnd
sub
cmp
shrl
rcrb
sub
mov
out
adc
loop
pop
xorl
adc
ljmp
inc
cmpb
mov
mov
jl
mov
sbb
fbld
mov
jo
jno
in
inc
xor
outsl
popa
outsb
in
inc
add
fidivrs
lcallw
xlat
addr16
push
xor
inc
decl
or
jl
or
adc
xchg
js,pt
jl
jmp
fnstenv
cmp
lcall
cld
lock
cmp
mov
dec
cmp
std
incl
pop
xor
jo
xor
loope
iret
ret
mov
pushl
out
mov
sbb
xor
fcoms
popf
cmp
sbb
aaa
incl
push
fwait
jp
inc
cwtl
inc
in
xchg
mov
dec
dec
clc
shl
pop
sar
mov
or
in
mov
inc
je
je
movsb
in
sub
mov
push
out
jnp
ficomps
in
pop
stos
add
add
push
sbb
jbe
dec
lcall
test
sbb
arpl
fcom
add
push
jmp
imul
decl
imul
dec
data16
mov
or
mov
sbb
loope
cmp
outsb
pop
mov
jo
mov
ds
jp
inc
push
mov
call
or
js
mov
xchg
push
sbb
mov
test
or
inc
push
inc
cmp
or
mov
add
std
mov
sti
jbe
dec
aas
pop
xchg
lcall
je
rolb
rorl
xchg
sti
adc
add
cmpsb
or
call
push
adc
or
jo
push
pop
dec
jb
mov
pop
sbb
inc
decl
cld
pop
insb
push
xchg
cmp
lahf
fadds
cmp
adcb
test
ljmp
cmp
adc
movsb
lods
fldt
mov
decl
lds
shlb
adc
mov
mov
pop
out
mov
mov
js
adc
mov
and
lret
jb
or
pop
xchg
out
add
ret
ror
and
mov
rorb
jg
out
cwtl
out
inc
mov
stc
sub
and
and
mov
xchg
xchg
fdiv
call
ret
mov
mov
cmp
call
ljmp
fistpll
inc
mov
xchg
insl
sbb
clc
cmp
mov
pop
iret
imul
pop
hlt
push
sub
pushl
dec
lret
jb
and
nop
xor
lds
jg
addr16
or
lcall
mov
es
cmpb
pusha
in
fsubrl
lock
cld
je
stos
inc
push
aaa
mov
inc
adc
cmpsl
cwtl
push
dec
and
jg
rorl
xchg
inc
scas
mov
rclb
fdivl
scas
mov
in
shrb
or
push
cmpsb
sbb
pusha
out
repz
fisubrl
jo
jne
loopne
call
xor
push
pop
mov
xor
dec
cltd
test
or
mov
std
fisttps
pop
int
push
lret
jmp
cli
mov
pushl
xchg
int
adc
inc
popf
jl
rorb
leave
jns
jnp
jmp
pop
xchg
dec
lcall
cld
cmp
call
and
lcall
enter
sbb
inc
aas
fimuls
pop
push
insl
insb
gs
stc
insb
jg
mov
cs
bound
dec
hlt
gs
cwtl
xor
movsl
mov
cld
decl
sbb
xor
mov
inc
push
rcrl
imul
shlb
cli
inc
jmp
fdivs
mov
jnp
mov
push
sahf
push
xchg
sbb
sar
lea
adc
loop
mov
adc
inc
sub
xchg
enter
pushl
jno
fistl
shlb
dec
dec
cld
jge
call
incl
adc
es
scas
cmp
sbb
cmpnleps
push
cmc
leave
shlb
ljmp
push
jae
cmp
stc
enter
xchg
mov
and
jmp
cli
enter
lods
popf
cmp
lods
incl
push
ljmp
leave
push
cmp
cli
jg
decl
xor
jecxz
sti
xchg
lock
in
pushl
push
pop
je
mov
cmp
xor
mov
decl
adc
aad
xchg
ror
push
icebp
inc
mov
xchg
and
out
jne
stos
pop
or
mov
cmp
xor
shr
jns
jl
dec
push
movsl
imul
mov
flds
jp
and
pop
and
and
mov
lock
out
insl
mov
jnp
pop
cli
lret
lret
or
test
inc
dec
pop
ljmp
ds
mov
mov
dec
repz
icebp
xchg
popf
pop
inc
fbstp
push
push
jne
aaa
cli
incl
cmp
sbb
hlt
push
outsl
ret
cmp
cltd
sbb
xchg
push
aas
icebp
pop
push
movsl
rolb
idivb
daa
jl
ficoml
lret
pushf
sub
mov
mov
ljmp
add
mov
leave
xchg
pop
mov
jp
ljmp
icebp
incl
jge
mov
push
shl
fadd
xchg
into
arpl
pop
xchg
sbb
cmp
lock
jge
fbstp
enter
pop
adc
call
lcall
jmp
lcall
mov
jg
sbb
stos
jg
loop
decl
sub
sub
push
das
mov
inc
xchg
mov
cld
dec
cld
lcall
es
mov
lock
frstor
gs
mov
or
call
ljmp
jmp
sub
jp
jg
js
mov
fstps
push
pusha
mov
fistpll
cmp
cld
sbb
in
inc
fistps
das
sbb
popa
sbb
jg
lahf
out
movb
sub
in
call
stos
xlat
movsl
nop
sbb
jb
lds
stc
ljmp
xchg
sbb
fwait
or
jnp
cmpsl
jbe
rorl
mov
push
pop
lahf
sti
adc
iret
inc
jecxz
sbb
insl
scas
out
into
or
out
cmpsl
pop
cmpsl
jp
adc
jg
mov
mov
sbb
testl
cli
pusha
ja
xchg
pop
inc
jnp
cli
and
push
decl
mov
mov
or
fnstcw
or
push
pop
pop
popa
mov
mov
push
pop
lcall
sti
add
stos
bound
lahf
xor
fmul
pushl
arpl
dec
xchg
mov
loope
lock
inc
xor
pop
int3
loope
or
imul
enter
cmc
ljmp
outsl
cld
das
jno
int3
lea
cmp
add
divl
mov
in
hlt
ficoml
adc
out
test
xchg
in
or
loope
sarl
cmpsl
nop
bound
dec
mov
ljmp
lods
dec
or
mov
mull
inc
inc
adc
addr16
mov
incl
shll
jl
xor
data16
movsl
cld
mov
gs
sub
mov
inc
clc
and
fstpl
mov
scas
push
and
push
add
movl
call
cmp
mov
mov
rorb
jg
test
fildll
adc
subl
movsb
pushl
mov
mov
jbe
in
cwtl
add
jecxz
push
xor
insb
xor
fwait
jae
call
test
out
inc
aaa
mov
idiv
sbb
mov
push
inc
jle
aam
cltd
adc
adc
and
dec
cmp
cltd
dec
iret
jne
xchg
sub
jp
inc
arpl
jg
incl
cmp
shll
addb
les
test
or
incl
scas
cmc
pop
daa
fldcw
push
std
and
mov
aaa
adc
stc
push
call
clc
fnstsw
jb
pop
or
cmp
jg
jmp
sbb
jns
popa
lock
das
scas
add
sbb
dec
pop
or
decl
dec
xchg
aam
jp
and
push
mov
pop
fs
ret
das
lock
arpl
ljmp
pop
xchg
sarb
jge
mov
dec
sbb
insl
dec
data16
daa
jmp
push
cmp
inc
cltd
loope,pn
daa
es
test
test
ds
xor
dec
push
mov
jmp
pusha
sub
cmp
testl
data16
lahf
jg
add
and
cld
imul
mov
mov
outsb
sbb
lcall
lcall
movsb
sbb
imul
and
call
or
fsub
out
pop
push
mov
test
loop
addl
into
cmp
and
cmc
inc
lea
imulb
dec
mov
add
ds
scas
shlb
gs
nop
cmc
call
mulb
lret
push
inc
aaa
add
cs
mov
insl
mov
shl
test
mov
jo
movsb
adc
cmpsb
mov
jmp
xor
jle
lds
jmp
jg
adc
cmpb
or
inc
test
sbb
and
pop
add
cmpsl
mov
out
or
dec
jecxz
stos
enterw
loop
ljmp
icebp
aas
xchg
adc
or
scas
call
pushl
bound
cmp
incl
ret
mov
push
or
stos
mov
ds
out
dec
or
in
mov
sbb
test
mov
mov
xchg
jmp
inc
in
or
repz
clc
mov
lret
leave
mov
imul
pusha
lcall
testb
mov
push
int
aas
inc
test
lret
xlat
jg
aad
data16
cld
incl
sahf
mov
dec
inc
xor
lcall
cs
decl
movsl
int
mov
dec
or
jmp
or
enter
icebp
dec
lods
inc
fdivr
push
jmp
add
push
sub
cmc
mov
jmp
pop
or
sub
pop
gs
mov
xor
dec
or
pop
sbb
or
jnp
cmc
sbbl
pusha
inc
sti
push
mov
pop
fistpl
scas
mov
push
adcl
repz
jns
or
bound
adc
or
or
add
mov
xchg
adc
outsl
mov
scas
adc
add
or
push
adc
cmp
sub
incl
repnz
movaps
testl
fnsave
jp
int3
mov
lea
pushl
xchg
into
and
gs
int
sbb
inc
cs
jns
inc
push
dec
sbb
jge
in
push
push
lahf
ficoms
or
imul
rcrb
jl
push
data16
add
decl
incl
jo
mov
js
cld
sbb
cli
mov
ljmp
cmp
pop
std
fists
popf
inc
push
or
mov
xor
jp
jg
mov
lock
lcall
xchg
mov
cmp
lds
call
cmp
cmp
xor
test
repnz
mov
dec
out
jmp
fstl
dec
cld
call
bound
subl
sub
jg
in
add
cmp
scas
inc
adc
xchg
incl
pop
les
sub
jg
sbb
mov
fnsave
xchg
mov
mov
in
push
dec
lret
jl
aas
cwtl
fwait
mov
out
sub
sbbl
fmull
xorl
push
dec
inc
insl
repnz
inc
mov
add
aas
mov
mov
dec
hlt
mov
movsl
cld
and
sub
fwait
daa
jle
dec
arpl
sub
xor
enter
pushl
and
daa
xlat
mov
imull
rolb
ljmp
test
adc
inc
inc
jle
push
push
movsl
std
leave
out
mov
lods
outsl
mov
ret
sbb
add
push
jnp
push
and
out
aam
sub
mov
jbe
and
cmp
dec
mov
popf
out
test
in
hlt
incl
mov
jb
inc
xor
in
sbb
icebp
cli
bound
mov
les
shlb
out
mov
or
mov
mov
adc
dec
shlb
outsl
cmpsb
xor
cmp
bound
xchg
in
lea
sbb
jno
ljmp
mov
sbb
mov
mov
adc
jno
mov
lea
ljmp
sarl
inc
sub
aad
inc
jg
ljmp
sub
dec
cltd
mov
testb
das
icebp
decl
dec
loope
cmp
jb
sbb
xchg
xor
je
jle,pt
lcall
xorl
inc
fs
sub
aad
subb
jg
aam
xchg
insb
xchg
popa
xchg
stos
cmpsl
out
fdivl
cltd
pop
gs
int3
nop
enter
ljmp
fsub
or
xchg
rcr
mov
dec
shlb
call
fnsave
dec
dec
daa
out
cli
insl
jmp
jp
sub
jne
sub
mov
test
lcall
repz
hlt
incl
xchg
jl
nop
sub
ret
inc
xchg
sub
daa
ffreep
add
ljmp
push
imul
pushf
sub
insb
rcl
xor
sar
jno
add
je
loop
inc
inc
call
inc
mov
mov
push
add
sarb
push
push
pop
loopne
out
mov
gs
add
mov
and
out
fld
lret
mov
add
lcall
xor
mov
out
mov
mov
je
loopne
pop
xchg
lods
push
inc
jle
outsb
jecxz
stos
lret
and
repnz
cmp
call
dec
dec
add
aad
jl
dec
or
icebp
add
imul
loopne
stc
pop
cli
pop
mov
addr16
test
insb
lods
movsl
jae
out
nop
cmp
mov
les
data16
pop
stos
loop
out
cmp
pop
outsl
adc
jg
jle
mov
insb
leave
adc
mov
popa
add
dec
lahf
inc
inc
mov
mov
adc
scas
inc
lret
pop
jne
jo
push
das
cmc
ds
and
dec
bound
push
int
add
pop
xchg
cli
pop
ljmp
add
stos
in
scas
inc
xchg
cmp
lcall
or
xchg
jmp
and
xchg
dec
ret
daa
jge
jp
ds
call
fisttpl
mov
leave
fildl
add
mov
inc
aaa
aam
mov
pushl
inc
dec
xchg
fistps
mov
mov
and
push
repnz
mov
ss
bound
ja
dec
lcall
dec
sar
mov
loope
scas
shl
fdivrp
jb
mov
mov
mov
adc
mov
xchg
xchg
add
dec
rcll
or
fistps
and
cmp
dec
scas
or
jp
insb
rcrb
jnp
inc
cmp
mov
lods
repnz
test
into
xchg
cmpl
dec
mov
ds
sti
cmpsl
xor
rclb
lock
add
ljmp
jbe
and
pop
mov
sub
add
loope
jns
aam
mov
add
cmp
jg
js
ret
dec
test
mov
cmpsl
mov
loopne
mov
cmp
pop
arpl
push
pushl
pop
addr16
pop
dec
push
dec
push
inc
dec
pop
adc
fs
js
and
lcall
icebp
repz
lea
and
sbb
jl
inc
imul
lds
sbb
or
mov
enter
clc
push
mov
dec
das
cmc
andl
es
pop
jp
or
lcall
xchg
push
test
cli
push
push
adc
jmp
out
fists
pop
bound
outsl
cmc
call
in
sub
push
arpl
leave
jmp
mov
xchg
pop
pushl
in
dec
test
loop
int3
dec
lret
pushf
xor
mov
test
lock
dec
mov
incl
cmp
cli
hlt
push
add
inc
call
jae
mov
pop
loop
jnp
jae
aaa
push
daa
andl
add
mov
lcall
push
xchg
mov
jb
add
xor
add
mov
fucomp
xchg
pop
jle
dec
ljmp
jmp
push
arpl
and
aaa
jl
jne
push
jp
pop
pop
std
lcall
or
je
push
xchg
xor
or
std
sub
cmp
pop
movsl
pop
and
incl
mov
out
add
ret
jns
outsl
cmp
xor
movsl
mov
popa
adc
dec
mov
mov
cltd
ljmp
shrl
je
pop
xchg
cmpl
mov
stos
push
clc
and
lahf
mov
mov
xor
fwait
int3
or
bound
out
sbb
mov
ss
cli
inc
sbb
lcall
xchg
xchg
mov
sbbl
adc
sahf
inc
jnp
and
vmread
clc
pop
dec
sub
lcall
loop
pusha
sbbl
add
jge
test
out
jg
ljmp
scas
imul
jmp
arpl
ret
pop
scas
lcall
sbb
aam
test
or
sub
cmc
clc
dec
mov
std
cmp
or
pop
mov
jmp
ret
jp
gs
fldt
adc
fcmovu
loope
inc
mov
xor
push
lea
dec
sub
jb
xchg
lahf
rorb
pop
loope
sbb
sar
mov
hlt
ljmp
inc
xchg
insl
adc
outsb
jmp
mov
jge
mov
pop
cli
dec
ljmp
outsb
and
jbe
lea
clc
decl
cwtl
aam
push
sbb
push
stc
decb
push
test
dec
pushf
orl
icebp
and
xchg
aaa
call
jg
mov
aaa
je
add
xchg
mov
or
std
cmp
mov
pop
jns
fs
mov
mov
dec
push
jae
mov
jecxz
roll
sbbb
repnz
push
outsb
mov
and
xor
in
out
loope
or
les
mov
sar
fsubr
scas
adc
jne
dec
inc
ds
loope
sar
mov
icebp
into
lahf
push
sbb
or
je
cmp
rcrb
jg
push
aaa
daa
sbb
or
sbb
dec
out
or
aad
jmp
xor
jae
push
cmp
pop
or
push
cmp
cmp
sub
ret
pop
or
ret
sub
mov
dec
inc
adc
jns
imul
ljmp
std
out
sbbl
mov
inc
les
push
cli
call
inc
xchg
xchg
scas
push
int
lcall
or
cmpsb
fiaddl
dec
hlt
in
shll
cli
int
xchg
pop
mov
dec
mov
pop
fcmovnbe
sub
cld
xchg
inc
lret
add
jecxz
add
add
cltd
jge
or
xor
mov
out
mov
pop
cli
lcall
sub
sti
fucomip
jae
push
idivl
cli
icebp
inc
aam
out
jo
loope
decl
xchg
push
push
fcmovnu
test
stc
add
into
sub
movsb
mov
adc
xchg
sub
sbb
pop
enter
sbb
test
aaa
cli
cmp
add
push
push
xlat
outsb
data16
or
lahf
std
xlat
fwait
test
inc
mov
call
jge
mov
push
fwait
gs
cmp
decl
inc
lock
adc
sub
jne
pop
iret
loope
jg
add
fucomip
xchg
ljmp
movsb
sbb
sbb
pushl
sahf
loopne
repnz
fists
scas
in
daa
mov
call
mov
shlb
pop
push
dec
jmp
mov
sahf
outsl
idivl
leave
and
or
arpl
js
aad
xor
sbb
lahf
push
mov
push
incl
das
popf
out
mov
jno
leave
jg
insb
pop
cmp
jl
popf
lea
cmp
shr
xchg
xchg
and
repnz
pop
call
movsl
jmp
hlt
sbb
mov
adc
cmc
js
cmp
xchg
pop
cmpsb
shll
loop
pushf
fcoml
push
push
and
mov
pop
pop
mov
cld
pop
outsl
adc
xchg
fxch
pop
push
cmp
jg
xchg
out
mov
ljmp
or
call
inc
cmp
mov
mov
bound
aas
jp
push
test
sbb
sbb
aas
cmp
call
sti
xchg
aam
data16
add
push
push
sbb
mov
pop
out
xchg
imul
push
mov
dec
sti
add
jmp
imul
scas
popa
sub
lea
stc
sub
imul
outsl
cld
push
int
sbb
fcmovnbe
xor
cmp
push
test
call
pop
xor
decl
lret
fmull
dec
fimuls
push
xchg
add
pop
or
lahf
sub
imul
sub
mov
and
mov
jle
inc
iret
jae
xchg
test
and
scas
or
add
sub
sub
push
vzeroupper
pop
lea
imul
xchg
ss
sbb
call
pushf
and
shl
or
das
outsl
notb
mov
mov
push
or
fidivs
lcall
mov
lcall
in
cwtl
call
mov
inc
mull
pop
jb
les
xchg
adc
mov
testb
inc
push
sub
ds
andb
mov
dec
dec
cld
pushl
stos
movsl
ss
icebp
fisubs
adc
incl
lods
test
push
mov
push
fstpt
sub
jo
cli
pop
jmp
or
jae
add
bound
pop
jmp
and
and
imul
inc
ret
stos
pop
leave
or
ljmp
push
cmpsl
fnsave
fadds
mov
outsl
sahf
xor
xchg
mov
decl
outsl
inc
inc
mov
and
or
sti
stos
js
pop
outsb
pushl
aam
pop
inc
cmpl
call
jb
add
jmp
sahf
jle
fldt
pop
and
aaa
jg
fildl
mov
out
push
jg
xor
loop
loopne
fprem1
out
lcall
sar
push
jnp
or
lods
inc
or
lock
sub
outsb
mov
adc
call
or
sbb
out
sbb
ljmp
decl
popa
sub
pusha
addr16
mov
out
or
lcall
sbb
nop
add
or
pop
jecxz
sbb
and
ds
ljmp
lock
stc
cmpsb
shl
push
shlb
js
xchg
inc
dec
push
fistpll
xchg
jg
xor
dec
pop
int3
cmp
notb
jns
pop
nop
mov
lret
pop
fmulp
mov
push
hlt
mov
xor
jp
call
cmp
lret
iret
fwait
das
out
mov
sbb
lahf
ja
and
jl
xchg
int
xor
jg
lcall
mov
pop
testb
mov
jns
cld
push
push
xlat
adc
jg
decl
fisttpll
and
mov
inc
mov
push
ljmp
jecxz
sub
lret
test
pop
lods
dec
popf
iret
in
xchg
jnp
fucomip
push
dec
fnstcw
and
out
sub
mov
inc
aas
xchg
dec
std
testb
hlt
incl
xchg
pop
sbb
aaa
lock
dec
test
mov
movsb
pusha
sbb
add
mov
ljmp
sbb
inc
dec
mov
test
shlb
xchg
inc
xchg
test
ffreep
cmpsb
fs
or
mov
lea
dec
push
stc
sub
push
loop
decl
or
push
pushl
sbb
and
adc
movsb
pop
and
icebp
mov
rorb
pushf
fs
cltd
and
loop
ret
add
mov
cmc
mov
xor
xchg
fs
cld
push
cmc
xchg
push
pop
addr16
cli
push
decl
cmpsl
or
into
ret
cmpsl
shrb
mov
mov
std
stos
mov
mov
into
mov
adc
cld
decl
data16
mov
cmc
xor
aas
stc
sbb
pop
or
incl
imul
add
adc
jmp
sub
int3
shr
jg
jg
stos
cmp
mov
scas
pop
cld
call
jg
aad
push
cltd
or
imul
xchg
jle
sub
sti
fidivrs
xor
lock
dec
lcall
xchg
cmc
shll
loop
jmp
sbb
daa
push
pop
jg
sub
add
jbe
cwtl
inc
js
xor
xchg
pop
stc
fwait
add
and
call
jmp
sahf
stos
in
adc
into
insb
outsl
xchg
push
lret
mulb
push
jns
mov
mov
rol
push
leave
ljmp
mov
ret
subl
xlat
mov
enter
mov
jg
js
into
mov
sub
icebp
call
js
int
inc
push
add
out
pushf
dec
mov
inc
fldl
cmc
fnstcw
cmp
pop
cmpsl
test
ja
fs
dec
ret
in
incl
cmp
imul
cmp
gs
dec
jne
ds
cmpsb
xor
adc
outsl
arpl
adc
sub
sbb
dec
xchg
jbe
lcall
xor
dec
adc
push
test
mov
nop
loop
and
lret
std
lcall
nop
in
sti
xchg
bound
clc
and
inc
test
ljmp
pop
sbb
and
pop
inc
loopne
std
jns
add
ljmp
sub
mov
inc
cmp
cmp
popf
push
or
repz
pop
je
loope
loop
incl
sahf
xchg
or
call
scas
push
xor
adc
loope
fisttps
or
sbb
fisttpl
cmp
mov
mov
inc
lock
les
cmp
loopne
adc
and
mov
lods
and
iret
mov
mov
and
adc
mov
leave
loope
xchg
lcall
mov
rorl
jle
jmp
jo
insb
jmp
stc
addb
and
in
out
ljmp
loopne
fstps
jle
shlb
or
and
xlat
dec
pushl
orb
orb
xchg
dec
dec
lods
mov
jnp
enter
incl
or
jecxz
push
dec
test
addb
cmpsl
mov
outsl
es
das
lock
imul
inc
jne
add
out
sbb
adc
aaa
clc
std
or
out
or
iret
mov
into
mov
xor
movsb
pushf
mov
roll
push
incb
out
hlt
jo
mov
jnp
cmp
push
lahf
int
shll
sub
lock
dec
stos
inc
xchg
inc
xchg
dec
pusha
aas
das
std
call
rcrl
and
jecxz
inc
xchg
lock
pop
scas
jnp
lcall
repz
dec
mov
loop
mov
aaa
adc
xchg
jne
xchg
cmpsb
in
inc
pop
cwtl
stos
pop
adc
push
dec
mov
xlat
inc
inc
pop
xor
aaa
mov
outsb
aad
stc
int3
mov
xor
mov
or
repz
cltd
icebp
mov
jo
fnstcw
mov
adc
inc
ja
lret
sahf
je
sbb
jae
jb
idivb
stos
jmp
xor
adc
bound
xchg
xlat
shlb
ret
push
scas
dec
fidivrs
ljmp
fisubrs
shrl
clc
out
rorl
push
pop
std
xchg
sub
and
dec
clc
test
outsb
lods
jle
call
icebp
ret
ret
mov
inc
mov
stos
and
outsl
pop
add
jg
or
mov
test
adc
adc
mov
cmp
je
sbb
push
fsin
jb
or
movb
cli
pushf
cwtl
mov
inc
outsl
icebp
pop
jbe
subps
lds
dec
jg
in
push
mov
cmpsl
lea
add
pop
pop
or
xchg
push
stos
adc
pop
cld
fucomip
mulb
test
cmp
mov
lahf
sbb
mov
xor
mov
mov
addr16
xchg
or
bound
clc
fisubrl
and
repz
leave
gs
mov
sub
arpl
inc
in
cmpb
mov
push
adc
jp
pusha
shlb
ds
arpl
dec
sub
dec
in
xor
in
insl
hlt
xchg
sarb
ljmp
test
jno
es
jns
es
and
xchg
scas
in
decl
mov
movb
cmp
addr16
jnp
push
lret
pushl
clc
lcall
nop
out
inc
mov
ret
scas
inc
mov
pop
push
lcall
pushl
or
loop
mov
test
lock
iret
aas
push
mov
jg
mov
cmp
xor
aad
and
push
mov
cmp
or
ljmp
lock
sarb
loope
xchg
sbb
xchg
add
int
cwtl
xchg
pop
clc
xchg
in
lock
jae
mov
add
test
dec
pop
lock
call
or
xchg
popf
imul
jl
std
sbbb
and
mov
jp
out
mov
sub
in
incl
jbe
int3
loop
xchg
movsl
test
mov
push
outsl
pushl
push
fsts
ss
scas
fiaddl
push
cmp
es
mov
iret
and
ja
or
lahf
test
insb
mov
mov
cmpsl
adc
sbb
lcall
scas
out
add
pop
in
int3
sub
imul
loopne
jmp
mov
adc
arpl
test
ss
sub
cmp
jmp
mov
inc
in
sbb
movsl
out
shrl
fisubrs
ficomps
adc
mov
and
lcall
or
rcrb
inc
out
js
insb
js
xor
and
jge
xchg
sti
clc
mov
cltd
ljmp
decl
sar
addl
jmp
and
cmp
addb
decl
push
aam
imul
fs
in
cli
ljmp
int3
sub
mov
or
adc
test
mov
aad
mov
loope
aad
in
jg
outsl
sbb
fucomip
clc
or
repz
push
add
ret
sbb
inc
pop
push
popa
pop
mov
frstor
pop
lds
lock
adc
movsl
sub
mov
or
jmp
jmp
sbb
cmp
dec
mov
nop
jno
lret
jo
cmc
xchg
sahf
lea
fucomip
outsl
aas
dec
lret
negb
sub
xor
mov
xchg
xchg
fucomip
adc
adc
arpl
lahf
push
adc
std
sti
scas
es
xlat
fistps
push
aas
das
push
dec
adc
arpl
daa
int
popa
inc
mov
fsub
jmp
adc
jp
lahf
add
cmp
dec
ret
jmp
lahf
movsb
int
divb
test
cmpsl
xor
sbb
cli
leave
and
sahf
shrb
inc
jmp
and
sbb
movsb
jecxz
cmpsb
leave
lret
sub
jg
data16
xlat
ret
aaa
int3
loopne
sarl
shll
or
ljmp
cmpsl
xchg
mov
popf
push
lret
cli
adc
adc
imulb
add
hlt
dec
push
sahf
lahf
xchg
xor
jns
xor
push
je
icebp
divb
sbb
inc
mov
xor
jns
push
imul
add
inc
mov
ljmp
cld
dec
cmp
idivb
cltd
popf
jp
sbb
dec
jp
pop
xchg
cmp
sbb
jg
call
testl
inc
cmp
dec
mov
jecxz
jl
xchg
push
pusha
jp
mov
hlt
pushf
das
mov
aas
in
aas
lret
mov
pop
call
scas
fs
loopne
sub
mov
sbb
movsl
pushl
xlat
jg
jge
adc
test
ret
test
and
out
mov
and
dec
ja
maxps
enter
xlat
mov
sub
decb
js
push
call
xchg
sbb
ljmp
cmpl
or
in
sarb
lea
leave
ret
inc
outsb
add
cmp
outsl
icebp
xchg
cltd
xor
ljmp
inc
cmp
mov
std
lea
dec
jmp
sbb
sbb
mov
aaa
incl
jns
cmpsl
decl
icebp
and
std
jle
test
jbe
dec
mov
imul
icebp
mov
push
repz
add
mov
mov
ljmp
xchg
jns
ljmp
pop
mov
sahf
orb
ret
lcall
lret
push
ret
fsts
int3
xchg
dec
fucom
out
adc
popf
sbbl
out
call
pop
loopne
sub
lods
cmp
pop
jp
loopne
mov
jg
ljmp
mov
iret
pop
test
rcrl
cmp
ret
pushl
cmpsb
xchg
mov
rep
es
mov
into
notb
inc
sub
pusha
in
dec
mov
je
mov
test
imul
xlat
push
outsb
push
jg
xor
addr16
pop
push
iret
sarb
lock
sbb
pop
mov
mov
sbb
pop
cld
jmp
xchg
pop
push
sbb
stc
cmp
ret
mov
dec
mov
cmp
and
xchg
inc
cs
cs
addb
icebp
adc
loope
pop
arpl
popa
popa
fdivrs
cmp
int3
dec
bnd
sbb
decl
mov
test
shrl
cmp
and
adcl
clc
ljmp
jp
test
cmp
rclb
xchg
out
push
lods
jbe
mov
daa
call
push
iret
jmp
dec
enter
mov
decl
repz
mov
xlat
inc
xchg
fdivrs
sub
decl
mov
sub
data16
ret
add
imul
stc
xor
mov
or
mov
in
out
mov
push
sub
inc
sbb
gs
mov
mov
je
fnstsw
push
sbb
decl
cld
fnsave
in
shll
data16
fidivrs
sub
data16
pop
bound
call
ljmp
inc
cmpsb
mov
std
stc
jg
inc
mov
sahf
push
cltd
inc
cmpsl
jno
call
clc
mov
imul
jmp
dec
cmp
repnz
out
mov
call
push
or
cmp
cs
lret
arpl
mov
std
jmp
xchg
leave
loop
not
out
mov
jp
sbb
gs
scas
jmp
push
pop
xor
mov
addl
jge
idiv
add
sti
popf
in
call
sbb
fstl
sub
jb
jae
mov
fdivrl
sbb
incl
repz
fcompl
test
cmpsl
push
call
xchg
outsl
stos
adc
mov
rcrb
or
jo
lods
sub
mov
fs
push
push
dec
div
xchg
cmpsb
fucomip
push
mov
clc
lods
push
xlat
clc
and
icebp
es
outsb
lcall
mov
xor
dec
push
lock
mov
inc
ret
mov
incl
mov
mov
sbb
xchg
mov
xor
inc
test
test
jecxz
xor
push
ljmp
out
xchg
inc
jp
dec
stos
test
dec
xchg
fsubl
int
call
scas
pop
decl
dec
mov
add
mov
pop
sbb
or
cmp
repnz
pushl
fnstsw
xchg
inc
add
fcmovb
movsl
mov
call
jo
xchg
inc
lcall
call
in
add
shll
inc
add
mov
pop
shl
pushl
aaa
mov
mov
mov
inc
shll
aaa
js
xchg
sbb
ffreep
pop
sub
adc
dec
sbb
lock
cmp
imul
xor
mov
and
pop
inc
movsl
xchg
and
dec
cli
mov
ja
out
fucomip
ljmp
pop
push
test
push
dec
cli
mov
cs
mov
inc
mov
das
cld
lcall
test
push
notb
lock
pop
movsb
scas
loopne
sub
lcall
push
push
dec
pop
out
outsb
je
xor
ljmp
cmpsb
jg
int3
lock
pusha
lods
or
ret
ss
rsqrtps
ror
pop
cli
movsl
jl
xor
sahf
add
ret
mov
inc
cmc
pushl
xchg
jle
xchg
js
icebp
fs
rclb
or
mov
je
cli
cmc
aam
jecxz
push
shll
adc
decl
pop
stos
mov
ret
in
mov
decl
adc
aam
sub
xchg
lods
and
push
ja
fisttps
cmpsb
ljmp
cmp
cmp
arpl
cli
ljmp
mov
xchg
mov
call
cmp
cmp
js
or
das
out
int
or
cmp
outsl
mov
rclb
dec
ljmp
mov
ds
pushf
inc
icebp
pop
sub
push
xor
mov
fs
loopne
xchg
lcall
pop
movsb
stc
lods
out
sbb
inc
pop
test
repz
and
mov
jg
dec
jmp
xchg
jmp
fcoms
aad
mov
adc
clc
mov
icebp
sbb
lret
iret
jo
pop
int3
shlb
fldl
or
and
ret
pop
out
dec
insb
pop
into
arpl
sub
push
or
lret
push
xchg
sub
mov
sub
fstl
push
adcb
movsb
fcoms
stos
testl
push
stos
mov
das
lea
xchg
addl
dec
ja
ret
jg
push
lds
push
stc
les
add
sub
rcll
jne
inc
sbb
push
push
test
push
add
sub
aad
stos
push
rolb
add
shlb
jle
insl
dec
cmp
sub
adc
push
cmp
xchg
and
insl
aas
pop
movsb
pop
les
inc
inc
inc
outsb
xor
inc
nop
addl
add
adc
pop
mov
das
testl
inc
xor
repz
adcb
dec
test
or
pop
mov
mov
adc
add
clc
pop
fmull
jge
inc
add
adcb
adc
pop
or
add
add
adc
jbe
dec
jb
int
push
mov
imul
dec
lcall
push
pop
mov
sub
mov
mov
into
sub
mov
pop
int3
sbb
push
inc
mov
mov
mov
lahf
jp
dec
jb
sub
and
xchg
adc
fcmovbe
push
int3
lahf
or
dec
push
dec
or
adcb
push
mov
stos
push
mov
add
das
mov
jle
out
mov
mov
cli
aad
add
cmp
mov
and
outsl
mov
jno
push
add
push
and
cmc
or
and
inc
imul
pop
leave
cmpsb
add
dec
jl
dec
mov
stos
push
sahf
lahf
add
xchg
pop
mov
push
sbb
xchg
sbb
push
lods
icebp
insl
push
sub
adc
adc
mov
lcall
or
add
cli
cld
add
adc
shll
dec
or
push
xchg
mov
icebp
push
fcmovnbe
sub
push
xor
pop
push
subl
imul
aam
inc
test
in
sbb
jle
and
push
adc
inc
jno
mov
inc
shlb
sub
xor
inc
insl
adc
addr16
mov
inc
cmp
sbb
sbb
jecxz
ss
and
xchg
add
pop
loop
imul
adc
add
mov
cs
mov
insl
cmp
mov
mov
rcll
xor
add
dec
inc
test
add
adc
sti
push
pop
add
or
mov
rcrb
mov
push
push
mov
fisttpl
sub
push
adc
js
cs
or
mov
adc
pop
fisubrl
and
cmp
mov
aam
out
push
sub
mov
inc
orb
add
shrl
sbb
adc
clc
sarb
push
jo
push
push
sub
pop
mov
jle
sub
cltd
fwait
jb
rcrb
fisubs
cmp
js
aam
pop
push
cmpb
mov
aam
sbbl
cmp
push
fwait
lret
push
and
stos
mov
push
or
not
pop
or
outsl
pop
xchg
cmp
fcoms
out
xor
pop
lods
out
test
cld
dec
sbb
push
pusha
mov
dec
lods
cmp
pop
mov
xor
dec
xchg
add
sub
jno
stos
repnz
cmp
or
clc
pop
xor
push
stos
mov
mov
add
int
pop
xchg
mov
pop
push
cmp
or
pop
mov
and
push
sub
stos
stos
xchg
inc
add
push
sub
mov
or
and
sub
jp
mov
push
popf
lret
lahf
sysret
xor
push
push
push
mov
sub
pop
mov
lea
pushf
jno
cmp
push
test
jo
or
mov
mov
pop
cwtl
sub
clc
cmp
push
xor
push
mov
negl
add
sbb
or
jno
mov
jmp
mov
aam
push
or
insl
lods
mov
xchg
clc
test
cld
sub
jle
fidivs
mov
outsl
sbb
add
push
in
inc
shl
cli
aam
jg
rcrb
test
mov
sbb
xchg
jo
xchg
sbb
pop
sarb
stos
adc
xchg
pop
sbbb
and
iret
pop
inc
orb
xor
out
push
pop
pop
xchg
ja
cli
jl
add
pop
add
xor
mov
shlb
adc
or
aad
xor
out
fiaddl
out
sbb
pop
fmuls
push
in
adc
push
push
cwtl
mov
sbb
pop
push
scas
mov
xor
dec
and
cmp
inc
imul
rolb
push
sbb
test
mov
stc
cmp
lods
push
imul
fdivs
mov
out
mov
push
fldcw
adc
and
add
stos
xchg
xchg
fistpll
xchg
popa
or
rclb
sub
fistpl
xor
ret
or
inc
xchg
fidivrl
xor
xor
push
adc
ret
mov
lods
pusha
and
lds
push
mov
fistpl
ljmp
in
and
adc
xlat
jmp
das
inc
mov
xchg
aaa
les
movsb
sti
jg
or
aas
mov
faddl
mov
mov
fsubs
xor
mov
sub
sbb
xchg
add
inc
pop
mov
test
push
imul
pop
xor
out
ret
push
fdivr
cwtl
cmp
test
inc
pop
push
dec
xchg
rcrl
push
mov
es
subb
push
shlb
loopne
adc
add
sub
out
hlt
and
repz
mov
push
in
es
add
test
and
stc
push
test
test
out
mov
and
sub
adc
js
pop
lods
add
insb
pusha
mov
sub
jne
push
push
add
xchg
mov
push
imul
icebp
repz
sub
sbb
and
mov
sub
dec
xchg
adc
push
xor
jb
test
mov
mov
mov
sub
sub
sahf
and
popf
cmp
mov
incl
andl
push
pop
xchg
lahf
cmp
rol
push
sub
sub
adc
pusha
test
stos
aaa
stos
cli
cli
adc
xchg
cmp
push
inc
xor
in
outsl
dec
or
rclb
test
pop
wrmsr
and
adc
sub
and
push
mov
or
lcall
clc
ffreep
fcmovnb
pop
stos
in
negl
mov
cmp
enter
and
insl
add
jbe
or
aam
and
pop
lods
lret
adc
push
lods
outsb
jns
les
push
lcall
ss
sub
sub
sar
sub
pop
xchg
adc
push
mov
inc
mov
scas
push
add
inc
inc
inc
xor
es
xchg
mov
xor
sbb
xor
or
pop
jno
popa
xor
es
add
in
mov
xchg
xor
xchg
push
xchg
ss
insl
aaa
xchg
add
into
pop
dec
mov
insl
gs
andl
jmp
out
lock
mov
or
xchg
inc
inc
pop
inc
push
and
enter
and
add
stos
push
gs
jne
cmpb
push
lcall
inc
gs
popa
jae
inc
jb
fstpt
outsl
bound
dec
gs
or
push
je
je
jae
dec
jg
outsl
arpl
imul
imul
fstpt
or
inc
jb
sub
popa
imul
bound
jb
adc
imul
and
dec
popa
jo
imul
mov
push
inc
insb
andl
push
jbe
jae
inc
gs
jne
imul
inc
adc
push
outsl
inc
daa
mov
pop
insb
jb
scas
fs
popa
outsb
fs
xorb
inc
cmp
mov
mov
push
das
insl
pop
pop
push
repnz
outsb
pop
sti
arpl
jae
inc
jb
jbe
jns
and
jb
fcmovnu
xchg
cmp
int
je
scas
adc
mov
sti
insl
xchg
cmovbe
gs
jbe
dec
dec
outsl
inc
outsl
fiaddl
insb
push
dec
int
jmp
pop
shr
imul
jnp
popa
or
lock
jbe
jg
insl
lods
push
int
cmp
jbe
imul
stos
outsl
jne
arpl
push
outsb
pushf
sbb
in
mulb
mov
or
mov
push
add
jne
mov
loopne
sub
pop
jae
jns
lcall
lahf
fwait
mov
sbbl
mov
test
push
xor
test
js
jae
lret
add
mov
lods
pop
jo
xor
adc
inc
mov
pop
js
aam
push
jb
xchg
shll
dec
sbb
sbb
fstpt
mov
je
sbb
mov
xchg
and
cwtl
xchg
bound
xchg
push
stos
retw
jo
cmp
adc
lcall
outsb
and
push
repnz
mov
int
pop
cltd
inc
add
cmp
sahf
xchg
xchg
lock
imul
es
ret
repz
fcomp
loope
ss
inc
dec
je
xor
mov
adc
push
jns
cmp
popa
das
or
add
jae
mov
scas
xor
pusha
dec
js
popa
outsb
fldt
jb
test
sub
dec
push
dec
push
pop
shr
sbb
addr16
push
mov
cmp
push
push
lret
sbb
ja
imul
outsb
out
shll
sbb
arpl
insl
push
jecxz
clc
push
dec
jne
dec
jo
sbb
dec
addl
lcall
jecxz
jo
arpl
aaa
mov
gs
sub
insl
adc
lret
push
shll
mov
jo
outsl
cmp
mov
jae
sbb
jne
inc
outsb
push
test
xor
inc
fs
and
test
push
jb
into
xorb
and
xorb
insl
pop
andb
lods
jbe
loop
les
outsl
roll
inc
pop
jo
dec
outsl
and
bound
shrb
out
sarl
push
xchg
std
ret
insl
sub
pop
fwait
aam
outsl
push
es
and
rcrb
sbb
jge
mov
cmc
aam
call
pop
lcall
xorb
ljmp
sbb
lods
jae
jbe
cmp
inc
mov
imul
jb
sbb
les
js
jo
lods
enter
int3
fcomps
ds
xor
nop
sbb
or
or
sti
cmpsb
pusha
jb
mov
test
imul
inc
add
push
jnp
pop
lahf
lods
pop
jecxz
cltd
push
sbb
bound
ret
sbb
call
and
data16
out
es
and
test
shl
data16
popa
xchg
aam
cltd
jb
nop
fs
movntq
scas
insb
cmp
xorb
sbb
or
dec
sbb
xor
xor
push
insb
xor
push
fwait
andl
or
fisubrl
xor
popa
int
mov
fdivrl
data16
outsl
addr16
inc
loop
sahf
jae
ret
adc
mov
xchg
pop
sub
cmp
dec
push
jp
inc
mov
pop
xlat
enter
rolb
je
push
mov
mov
sub
xchg
or
mov
and
mull
pop
mov
inc
fstl
xchg
inc
movl
js
pusha
push
and
cmc
mov
jle
das
popf
xor
sti
lds
and
lret
pop
fwait
xor
out
arpl
imul
xlat
cmp
sbb
and
sub
int3
push
loopne
adc
pushf
iret
insl
shlb
fadd
dec
sbb
test
outsb
mov
and
addl
jnp
popa
loope
dec
gs
dec
push
popa
pop
add
inc
xor
mov
imul
or
push
sahf
add
imul
xchg
jo
jecxz
dec
js
les
push
hlt
pop
in
inc
add
dec
add
dec
loopne
sidtl
add
or
fisttpll
test
rcrl
mov
scas
jmp
adc
and
add
out
mov
and
xor
add
mov
in
mov
push
add
ss
mov
push
push
lods
push
or
sub
dec
add
jne
add
out
mov
mov
adcb
mov
or
ucomiss
fidivs
push
pushl
nop
push
les
shrb
or
imul
xor
adc
pusha
jb,pn
xorl
adc
nop
jl
mov
inc
cs
insl
out
pop
dec
lcall
mov
mov
fisttpll
jo
add
add
pop
dec
jbe
jle
jl
mov
jge
pop
popf
add
add
add
inc
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
cwtl
add
adcb
add
sub
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
or
add
add
insb
pop
add
xchg
sub
add
add
add
add
add
mov
add
add
add
add
call
add
add
cmp
add
pusha
add
xor
add
mov
add
mov
add
fadds
add
add
xorb
add
push
add
addb
add
js
add
mov
add
add
lock
cmpb
add
inc
add
add
push
add
add
add
add
pop
add
loopne
add
or
add
xor
add
pop
push
add
addb
add
add
test
add
rolb
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rolb
cmp
add
call
add
add
or
cmp
add
cmp
add
pusha
or
sbbb
add
mov
add
fmuls
add
add
add
sub
add
push
or
subb
add
mov
add
add
lock
cmpb
sbb
add
inc
or
andb
add
add
nop
or
subb
add
loopne
add
or
add
xor
add
pop
or
xorb
orb
and
add
test
add
rorb
add
clc
or
xorb
add
dec
or
addb
add
cwtl
or
orb
add
call
pop
add
adc
add
cmp
add
pusha
or
add
mov
add
mov
add
fmuls
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
xor
add
add
add
add
add
add
add
add
pushf
mov
add
or
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
movsb
mov
add
or
add
add
or
add
add
add
add
add
add
add
mov
add
or
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
mov
add
or
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
test
add
add
add
add
add
add
add
add
in
roll
add
add
add
add
add
add
add
push
ret
add
add
add
add
add
add
ret
add
add
add
add
add
add
push
add
and
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
pop
add
hlt
ret
add
add
add
add
add
add
add
pop
add
pop
les
add
add
add
add
add
add
add
les
add
add
add
add
add
add
lds
add
add
add
add
add
add
lds
add
add
add
add
add
add
pop
add
cld
lds
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
movb
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
pushf
movl
add
add
add
add
add
enter
add
add
add
add
or
add
add
add
add
add
add
add
or
add
enter
add
add
add
add
or
add
add
add
add
add
add
add
add
add
movsb
leave
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
lret
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
int
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
in
into
add
add
add
add
add
add
add
add
push
iret
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
rolb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
or
add
rolb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
pushf
aam
add
add
add
add
add
add
aad
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
cmp
add
add
add
add
add
add
add
add
add
add
or
add
add
movsb
add
cmp
add
push
add
add
add
push
add
add
add
add
add
add
add
arpl
scas
add
fisttps
out
fildl
mov
int
add
fbld
add
iret
add
std
jnp
out
int
add
fists
add
aad
add
add
fbstp
mov
fwait
add
cmc
pop
add
fistps
idiv
arpl
iret
cmc
fildl
scas
cmc
xchg
xchg
pop
add
xlat
mov
add
add
jnp
xchg
addl
fcomip
add
iret
iret
add
lds
add
in
add
lds
add
std
pop
add
iret
pop
add
iret
testl
xchg
iret
movl
out
incl
xchg
fbstp
mov
jg
xlat
sti
add
xchg
cmpsl
add
push
add
fists
add
out
addl
test
add
in
add
fildll
add
in
adc
out
xchg
cmpsl
fstl
add
std
out
add
std
inc
add
cmc
arpl
mov
in
sti
add
fistps
add
add
divl
add
fbld
add
mull
add
out
xlat
add
xlat
scas
add
aad
add
in
pop
add
in
add
fstp
add
fbstp
add
testl
scas
xlat
xlat
add
out
add
aad
add
fists
add
int
add
int
add
in
add
out
xor
mov
xlat
ja
lahf
cmc
xchg
add
in
add
std
testl
xchg
in
add
out
add
out
incl
iret
fucomp
add
std
cmp
xchg
mov
xchg
filds
int
add
int
add
out
add
xlat
add
lds
jmp
mov
add
xlat
mov
sub
mov
aaa
add
out
add
aad
add
iret
sbb
xlat
lds
add
in
testl
out
jg
out
fistpll
add
mull
add
in
or
fucomip
jae
notl
add
lds
fucomip
pop
add
int
add
in
add
call
add
fnstsw
add
fldl
xchg
int
add
lds
filds
add
out
add
iret
mov
mov
jmp
lahf
cmc
testl
lahf
aad
add
out
ffreep
popl
cmpsl
not
add
int
add
cmc
adc
out
add
xlat
incl
cmpsl
cmc
scas
add
cmc
daa
add
aad
add
out
mov
add
in
daa
add
std
pop
add
mov
add
add
lds
add
aad
add
xlat
sti
add
filds
mov
in
add
divl
add
xlat
fwait
add
aad
add
lds
add
int
add
out
imul
in
incl
mov
out
add
fstpl
add
lds
scas
out
imul
int
add
out
add
out
add
int
add
xlat
lret
add
iret
add
add
in
neg
inc
add
fnsave
fisttpll
add
out
popl
scas
add
in
imul
xchg
out
pop
add
xlat
iret
add
fildll
add
aad
add
iret
sbb
jno
test
jno
gs
repnz
hlt
mov
xor
adc
pop
mov
jno
mov
scas
in
je
mov
aad
daa
inc
push
xor
popa
shlb
sub
popf
rorl
cltd
mov
or
insb
pop
pop
jns
dec
xchg
sub
imul
rolb
jg
push
ja
sti
out
lcall
xchg
pop
inc
lahf
dec
xchg
mov
add
jle
sbb
pop
jge
xlat
xlat
mov
pop
clc
iret
shll
sbb
int3
ljmp
adc
mov
repz
mov
mov
inc
mov
ljmp
mov
pop
pop
add
jge
add
sub
stc
mov
lods
add
add
fwait
mov
and
mov
pusha
jne
fs
add
es
mov
mov
rcrb
xchg
pop
lret
and
gs
mov
inc
addr16
sbb
es
ffree
sbb
popf
sub
mov
xchg
or
mov
test
adc
into
cmpsb
push
add
add
loop
sbb
rcrb
cmp
aas
cltd
and
movl
ljmp
movsl
test
das
mov
test
mov
xchg
inc
out
in
mov
pop
pop
lahf
xor
fwait
out
movsb
repz
mov
cli
xchg
mov
inc
mov
dec
add
add
call
adc
in
sub
mov
dec
sar
push
sbb
mov
pop
jge
mov
dec
cmpsb
and
inc
ss
in
movsb
andl
push
lcall
xchg
xlat
arpl
cmp
or
inc
adc
pusha
jg
push
push
mov
add
mov
sbb
push
adc
mov
sbb
dec
clc
pusha
add
add
imul
outsb
rolb
sbb
add
push
cmpsl
mov
stc
xchg
loopne
mov
test
js
jg
adc
mov
sahf
and
push
pop
add
ficompl
jecxz,pt
pop
push
jecxz
sbb
icebp
inc
push
int
inc
insb
xchg
mov
jo
notb
sbb
mov
loop
nop
mov
test
xor
mov
lret
cmp
cmp
push
rcl
fucomp
int
add
fwait
adc
mov
xchg
out
in
popf
inc
sub
jecxz
fcmovne
pop
push
or
mov
fst
call
lcall
xor
lret
addr16
inc
mov
nop
xor
sub
dec
mov
jne
cmp
lret
mov
cmpl
shlb
pushf
int
daa
or
xlat
scas
lret
mov
cld
mov
scas
xorl
xchg
sbb
loop
in
pop
push
cld
adc
aad
fadd
aam
inc
add
shrb
sbb
pmaxub
mov
xor
inc
mov
add
outsl
cmp
mov
mov
xor
adc
inc
shll
in
test
loop
data16
mov
jae
or
and
mov
imul
dec
pushf
pop
adc
int
jmp
cmp
lods
stos
mov
cli
fdivl
mov
lcall
xor
test
inc
xor
inc
std
push
push
insl
cmpl
dec
and
loop
test
ficoml
adc
popf
dec
fimull
dec
jp
xchg
imul
or
mov
push
jns
mov
int3
or
pop
enter
add
push
cmp
pop
nop
scas
leave
stc
dec
int
adc
xchg
and
and
icebp
ljmp
push
pop
jb
xchg
sub
dec
aam
outsb
xlat
dec
mov
into
or
add
fldt
add
add
pop
and
xlat
add
lret
dec
xchg
cmp
sbbl
jne
xchg
fistl
lds
xchg
daa
fcoms
int3
pushf
outsl
pop
outsb
mov
or
or
out
sahf
js
inc
dec
ss
dec
add
add
fisubrl
lret
lret
stc
lock
rcll
dec
dec
lret
or
add
or
stos
imul
leave
popa
adc
rclb
and
test
fstpl
pop
gs
xchg
cwtl
push
fnstenv
fwait
cld
insl
xlat
mov
repnz
jb
mov
and
adc
adc
fiaddl
lret
cwtl
pop
js
add
loope
mov
pop
and
mov
bound
mov
mov
fsubr
xchg
add
out
xchg
inc
test
fisubrs
iret
popf
fs
push
scas
int3
cmp
arpl
xchg
jmp
xor
std
jg
sbb
lret
dec
fwait
mov
push
jb
cmp
ficoms
in
jmp
data16
adc
loopne
movsb
mov
es
neg
mov
fcoml
xlat
xor
pop
xor
add
add
cmp
xor
dec
lret
xchg
imulb
int3
sub
jmp
aaa
pop
pop
ret
in
aam
repz
notb
aad
jno
mov
add
leave
andl
and
stc
or
ret
sub
xchg
xchg
roll
out
jecxz
je
testb
arpl
rolb
add
add
jmp
icebp
fstps
addr16
push
jo
fwait
xchg
and
fwait
ret
or
sub
and
push
ja
push
sub
ja
fcompl
dec
inc
dec
pop
cli
leave
cmc
pop
fadds
into
jne
xchg
in
cmc
addr16
data16
push
xchg
sahf
iret
xchg
hlt
int3
int3
mov
sub
fmul
jne
jae
and
pop
cmp
sub
push
in
or
or
jmp
into
or
test
and
cmp
mov
lcall
pop
add
mov
daa
leave
out
xor
inc
push
stc
mov
mov
xchg
testb
pop
push
aam
insb
jp
out
addr16
jp
push
push
lret
incb
nop
inc
xor
add
sub
jno
in
cwtl
mov
lods
jg
xchg
cmp
pop
js
mov
cmp
mov
sbb
push
xor
dec
mov
mov
push
setge
outsb
dec
adc
inc
dec
xor
js
cwtl
xor
jge
in
scas
jl
mov
mov
xchg
push
call
es
mov
pop
sub
add
add
pop
sbb
inc
fistps
int
pop
add
dec
xchg
push
mov
outsl
mov
mov
fildll
pop
pop
inc
xchg
data16
ret
pop
cmp
popa
xchg
test
cmp
in
inc
sub
mov
jle
arpl
loope
lods
call
lret
pop
stc
and
dec
cli
inc
lcall
cmp
sbb
shl
xchg
out
xlat
add
add
mov
cltd
inc
jp
sub
lock
mov
add
les
jecxz
add
into
clc
jo
popa
mov
pop
adc
lret
stos
jns
out
cmp
adc
jmp
inc
leave
xor
mov
outsl
int
mov
sbb
in
je
xchg
add
jo
inc
ja
mov
xchg
jne
stc
jo
pop
mov
xorb
nop
xor
add
add
lret
mov
loopne
xchg
adc
sbb
jnp
dec
les
repz
mov
fsubs
jnp
dec
xchg
and
or
xchg
ds
orl
aam
setle
and
je
push
push
loope
add
mov
xchg
aam
fidivrs
jnp
mov
mov
xchg
test
push
test
dec
add
add
pop
add
insb
mov
jo
add
xor
cmp
and
mov
outsb
dec
xchg
cwtl
adc
pop
fimuls
pop
cmp
loope
adc
add
test
xor
repz
jg
mov
xor
push
xchg
es
adc
ret
les
out
sbb
cmpsb
je
dec
dec
jbe
xchg
rclb
mov
xor
mov
inc
stos
xchg
xchg
cli
in
sbb
insl
or
test
mov
popf
imul
mov
xor
jl
jno
mov
add
gs
repnz
xor
mov
add
xor
xchg
pop
inc
adc
push
cmc
pusha
daa
pop
ljmp
loopne
mov
fsubrl
out
cmp
xor
cmpsb
sbb
inc
nop
add
add
dec
pop
sub
jno
stos
js
sbb
call
ret
test
mov
mov
int3
pop
and
inc
scas
jnp
sbb
scas
and
lret
mov
pusha
out
test
jecxz
stc
lods
and
mov
aad
je
pop
push
out
adc
stos
data16
inc
jbe
push
repnz
inc
pop
testl
lahf
add
add
mov
mov
dec
xchg
fst
jnp
jecxz
jl
push
pop
inc
cmp
jno
or
add
fildll
fadds
movsl
dec
mov
add
fwait
stos
stos
push
add
pop
cmc
xlat
sbb
mov
xor
pop
scas
push
xorb
adc
add
inc
out
fisubl
std
xchg
int3
orl
fwait
or
mov
sub
pop
sbb
cmpsb
inc
shll
test
cmpsl
aam
movsl
ret
sbb
ss
ret
outsb
call
mov
sub
adc
mov
inc
pop
notl
not
push
fs
int
jecxz
in
push
push
sub
jo
mov
dec
and
in
in
push
push
movsl
push
xchg
rcll
xchg
jmp
cmp
cmp
add
or
add
xchg
out
leave
push
push
insl
jae
adc
in
mov
ss
out
cmpsb
cwtl
fwait
push
movsb
cmpsb
inc
adc
mov
pushf
bound
or
jge
xchg
xor
sbb
cmp
mov
test
mov
mov
adc
xor
mov
push
in
add
jmp
cwtl
popf
pop
mov
pop
add
add
sbb
xchg
loopne
out
lahf
push
outsl
push
jg
lea
testl
jl
add
mov
movsl
push
mov
pop
xor
push
jmp
jle
adc
dec
jnp
cmpsb
iret
popa
adc
mov
mov
inc
imul
cs
push
lods
inc
idivl
jecxz
add
add
vmovapd
xor
sbb
popf
in
lods
mov
sbb
jae
dec
js
addr16
mov
xorb
xchg
dec
imulb
rclb
dec
int3
push
inc
jmp
aam
dec
movsl
mov
js
gs
out
lock
inc
or
roll
ljmp
pop
je
or
mov
add
mov
dec
xchg
push
push
fcompl
or
mov
sbb
out
pushf
data16
outsb
fcomps
int
divl
xchg
repz
dec
lahf
xchg
cmp
pop
popf
add
or
shll
mov
aas
shld
shl
lods
sbbl
lret
cltd
aas
and
pop
ficoms
add
push
add
ljmp
je
loopne
add
add
aaa
test
pop
pop
imul
mov
add
cmp
ljmp
mov
adc
or
xlat
cmp
mov
sub
scas
dec
dec
jmp
pop
sbb
hlt
fmull
or
dec
push
repz
dec
and
in
mov
pop
loop
cmp
frstpm(287
inc
push
movsb
daa
xor
push
xor
add
add
mov
mov
shrl
in
dec
stos
stos
ds
fisttpl
addl
inc
sub
scas
mov
mov
iret
push
test
lock
push
cltd
mov
inc
dec
fstpl
add
sub
pop
lret
cmpb
lds
push
xchg
pop
fmull
jl
stos
shl
push
dec
jmp
cmp
pusha
lcall
cmp
sub
xor
or
fcmovu
pop
test
mov
push
cwtl
add
mov
cmc
inc
fsts
or
add
push
jg
fxch
xor
xchg
test
js
push
daa
insl
test
leave
mov
in
push
shlb
and
out
mov
pop
push
xchg
mov
hlt
stos
and
clc
cmpsl
mov
cmp
roll
stc
arpl
lea
push
inc
ja
sub
push
cmpsl
cwtl
or
addr16
adc
inc
and
or
cmpsb
adc
jge
subb
jg
in
or
xorl
inc
inc
repnz
mov
push
repz
pop
rolb
lahf
jg
aas
mov
imul
jmp
add
mov
bound
jno
cmpl
and
arpl
imul
inc
fsubl
jle
stos
shll
test
push
insl
popl
pop
test
adc
inc
push
pop
or
jl
insl
aas
stc
push
scas
fwait
mov
rcrl
push
cmp
out
jo
sub
lods
add
add
scas
pushf
sbb
push
sti
mov
movsb
movl
sub
fisttps
mov
adc
int3
daa
ret
nop
inc
das
cmpsb
mov
ret
or
push
lret
and
or
das
push
es
scas
lret
mov
test
aas
push
out
das
mov
xchg
pop
or
jmp
data16
bound
inc
or
rcl
in
les
in
add
mov
push
mov
add
mov
fwait
xorb
adc
in
mov
jb
outsl
loop
jp
adc
push
loopne
xchg
jns
aad
or
jb
xchg
inc
adc
in
mov
cld
test
mov
pusha
xchg
adcb
mov
dec
repz
stos
bound
or
jecxz
push
test
aam
cmp
sub
mov
fldenv
and
ret
jne
rol
and
sub
push
sbbb
xorl
mov
add
or
sub
adc
mov
cli
mov
xor
inc
out
sar
mov
stc
add
hlt
sbb
jmp
mov
dec
sti
or
pop
jo
dec
out
cmp
sub
iret
xorl
loopne
pop
aad
xchg
pop
add
mov
pusha
in
movsl
pop
or
jg
sub
mov
mov
sub
repz
xor
stc
sbb
or
loope
jg
or
and
xlat
jnp
stos
stos
mov
inc
mov
scas
idivl
jnp
or
popa
cs
or
sbb
xchg
fwait
shrl
pop
mov
mov
inc
pushf
out
push
jae
and
and
outsl
repz
dec
jmp
ss
je
add
add
stos
xchg
out
mov
pop
or
mov
sub
push
jge,pt
and
in
scas
and
mov
popa
xlat
push
in
out
out
rorb
xchg
stc
dec
push
clc
fdivs
loop
aam
aaa
loop
lea
mov
push
addl
push
ror
xlat
insl
cmp
scas
mov
ljmp
dec
and
mov
xlat
pop
or
adc
add
icebp
xchg
mov
icebp
or
jmp
cwtl
fdivrl
jg
inc
xor
jno
sbbl
sbb
mov
mov
xor
sahf
fdivrl
inc
fs
xor
push
mov
cmp
inc
add
adc
lea
out
cmp
mov
adc
add
add
xchg
jge
sub
xor
mov
gs
xchg
mov
test
lock
fcomi
inc
mov
cld
in
mov
enter
pop
das
cmpsb
fwait
pop
ret
add
in
cmp
repz
push
pop
hlt
outsb
xorb
add
jo
hlt
mov
outsl
jl
sbb
adc
imul
jmp
xor
or
ljmp
mov
ja
sub
add
add
push
inc
outsb
out
repz
test
xchg
fs
out
int
in
cmpb
xor
mov
popf
fidivrs
test
dec
test
inc
mov
push
mov
mov
cs
jle
icebp
and
aad
push
insl
popa
adc
imul
lds
jnp
pop
inc
imul
pusha
aas
add
add
sbb
sbb
fs
pop
enter
jb
mov
ljmp
mov
ja
clc
fcomps
test
stos
inc
pusha
jnp
or
icebp
in
cmpsb
push
fs
and
jmp
and
push
fstl
lods
mov
loope
imul
addl
lods
popf
ja
cs
push
ret
imul
icebp
jecxz
add
add
cmp
sbb
and
mov
jg
jp
adc
shlb
nop
xor
in
loop
daa
push
iret
push
outsb
test
adc
imul
mov
xor
popl
leave
into
mov
mov
push
jne
call
jmp
idivb
jae
rolb
sbb
pop
test
in
xor
lcall
scas
xor
dec
ret
pop
mov
or
out
mov
push
sbb
inc
xor
insb
sti
jo
or
les
sub
inc
mov
cmp
mov
inc
insb
adc
fisubs
sahf
gs
push
rorb
mov
ret
lods
dec
dec
sbb
les
in
dec
cld
daa
mov
data16
cmpsl
mov
jno
push
sbb
add
jbe
lret
mov
sbb
pusha
arpl
mov
leave
xchg
fldt
sbb
lahf
cwtl
or
repnz
xchg
int3
test
dec
repnz
mov
inc
sbbl
int
lock
cmp
jecxz
mov
jno
pop
adc
bound
enter
xchg
xchg
adc
ds
lret
add
add
adc
or
sti
stc
fs
cmp
lods
adc
das
mov
es
and
fs
or
sti
addl
test
cmp
xchg
or
in
mov
sarl
pusha
fisubrl
or
xor
ret
or
cmpb
sbb
mov
mov
push
mov
dec
bound
shr
cmpsl
popa
jp
sub
faddl
add
xor
push
mov
xchg
mov
ljmp
test
lcall
cs
bound
bound
das
lahf
add
sbb
loopne
in
daa
pop
lock
cwtl
call
movsb
adcl
nop
push
push
arpl
and
arpl
push
xchg
addb
jge
fdivs
adc
scas
xchg
push
fisttps
cltd
adc
mov
ss
test
push
add
add
loop
dec
lahf
sub
clc
nop
fisubrs
push
inc
mov
sbb
inc
shll
clc
mov
jb
push
sub
mov
sbb
hlt
and
adc
sub
or
mov
test
cmp
xchg
aas
sahf
mov
test
andb
jno
es
pop
aad
adc
imul
sub
insl
xor
xorb
jno
sahf
add
pop
outsb
pop
inc
inc
and
mov
shlb
icebp
addl
loop
cmp
pop
and
mov
mov
sbb
push
push
fists
jge
decl
mov
es
or
xor
rol
dec
adc
sub
test
loopne
ret
loop
mov
rolb
inc
nop
sbb
bnd
and
jecxz
mov
mov
lds
mov
dec
les
or
lock
lock
mov
jb
fucomp
into
stc
xchg
ret
test
inc
adc
push
mov
inc
into
sbb
outsb
or
cli
sub
adc
mov
pop
xlat
in
mov
add
and
sbb
repz
aam
xor
fisubl
pop
icebp
andb
mov
lock
xorb
inc
addr16
jp
add
sbb
adc
xchg
dec
pop
fcmovu
repnz
aam
jo
icebp
decl
lds
addr16
mov
and
sub
ret
out
shlb
repz
aam
add
lea
add
add
pop
jge
mov
popa
sbb
push
sbb
dec
push
sti
cli
and
jmp
outsb
fwait
lds
inc
xchg
rorl
dec
mov
jg
mov
sub
push
mov
push
cmpsl
scas
dec
xchg
scas
and
rcrl
je
and
stos
or
iret
repz
sbb
add
add
loopne
jmp
pop
shl
push
jbe
iret
cs
mov
imull
test
push
test
jb
mov
addl
shrl
testl
jno
jle
cmp
in
push
ljmp
jmp
add
adc
cld
popf
cwtl
jbe
cmp
test
and
shlb
push
out
add
add
mov
push
shl
jns
adc
test
jnp
xor
jns
hlt
incb
repz
inc
cmp
mov
add
jge
push
sub
lods
out
shl
cmp
fimuls
xchg
jne
pop
mov
xor
push
pop
std
inc
sahf
js
and
sub
mov
clc
cmpsb
out
or
mov
bound
pusha
lret
adcl
cltd
xchg
jb
xchg
sub
xchg
pop
sub
mov
dec
gs
mov
push
sbb
or
push
cmp
mov
in
fwait
push
push
not
xchg
aas
call
inc
mov
sub
clc
inc
notl
in
pop
mov
dec
or
cmp
dec
rcl
lods
mov
push
mov
js
cwtl
xchg
push
stos
mov
mov
inc
xchg
sarl
adc
and
popa
sbb
sub
or
pop
test
popa
js
and
mov
in
mov
mov
xchg
fld1
aas
cli
outsl
xor
mov
cmp
mov
mov
add
dec
jg
mov
mov
xchg
movsb
jne
add
add
add
shl
jbe
jmp
imul
cld
out
jg
cmc
movsl
loopne
shlb
lods
sbb
clc
xchg
call
jns
std
lods
push
fldt
push
sbb
sbb
out
mov
and
mov
xor
sti
mov
add
das
jnp
add
scas
test
pop
inc
daa
leave
mov
sub
les
es
or
aas
iret
sub
aad
add
clc
outsl
movsl
imul
loope
sub
in
pop
or
les
mov
mov
repnz
sbb
push
adc
lret
stos
cmp
or
js
jb
xor
xchg
rcl
cmp
push
jae
rolb
mov
add
sahf
lret
mov
lods
jle
outsb
int3
cmc
mov
mov
xor
stc
loope
mov
fldenv
inc
add
add
daa
inc
pop
mov
fmull
sub
incl
or
popa
ljmp
inc
lds
hlt
mov
jp
lds
pop
lods
aad
fwait
call
xchg
jns
leave
test
cmp
jmp
adc
cmp
mov
rcr
aam
js
or
mov
aas
mov
dec
and
insl
sbb
lds
jp
int3
imul
iret
gs
sarb
xchg
mov
xor
stos
push
inc
in
add
push
jno
jno
les
je
push
mov
dec
inc
enter
add
jbe
in
out
shl
and
mov
outsb
fstpl
jl
cltd
popf
in
pop
mov
lret
cmp
mov
cmp
mov
push
jbe
mov
cmp
mov
sub
or
mov
or
lcall
aaa
dec
daa
mov
insl
mov
shrl
ret
dec
pop
cs
lods
mov
loopne
xchg
jg
insb
cmpsl
cld
add
and
ja
aam
outsb
pushf
and
idiv
add
jne
mov
jmp
pop
add
add
clc
orl
inc
popf
lcall
mov
ss
sub
mov
stos
inc
add
xchg
add
mov
mov
adc
ficoms
xor
xchg
iret
pop
and
sbb
dec
mov
dec
outsl
push
sub
inc
fwait
sub
leave
push
or
jge
add
add
jecxz
imul
cli
and
push
mov
adc
fsubrs
jbe
xchg
dec
in
fsubrs
repz
shrb
popf
stc
dec
ret
jno
roll
fisttpll
shlb
in
push
cmp
pusha
jecxz
mov
dec
pop
outsl
inc
es
or
in
inc
vpshad
jg
sbb
mov
cmp
add
jg
sqrtps
xor
mov
lock
lahf
repnz
push
add
jnp
and
sbbl
fsubl
lahf
movsl
lahf
jmp
xor
mov
push
sbb
pushaw
fs
dec
outsb
outsb
arpl
inc
push
mov
jge
icebp
push
shrl
mov
rorb
arpl
adc
imul
push
push
xor
mov
xlat
outsb
cmpsl
daa
shll
stos
in
cmp
out
pusha
stc
xorb
ljmp
arpl
pop
sahf
into
les
mov
or
fldpi
scas
data16
mov
int
nop
jecxz
out
hlt
test
call
popa
push
mov
aaa
fsubs
ret
clc
pop
sbb
xchg
lahf
cmpsb
wbinvd
ljmp
add
jo
add
mov
or
cwtl
out
and
test
cmp
out
sbb
push
dec
push
nop
fdivl
jg
dec
and
mov
aaa
das
sub
mov
pop
fstp
adc
in
jnp
sub
bound
push
add
lret
and
in
sub
test
pop
aam
jmp
jge
adc
pop
sbb
call
add
pop
and
dec
jb
push
popf
and
mov
mov
jmp
jle
or
das
mov
jmp
mulb
pop
mov
arpl
scas
xchg
sub
add
movsb
lcall
mov
push
cmp
mov
jnp
mov
ds
pushf
adcb
sti
icebp
jmp
xor
mov
jno
push
add
xor
jbe
xchg
fsubs
push
push
push
test
sahf
ror
cmp
mov
fucomp
popa
push
adc
int
push
je
xchg
adc
les
fsubrp
scas
pop
outsb
imul
xor
imul
sbb
mov
and
mov
push
int
in
fdivrp
pop
cmp
pop
outsb
xor
ret
add
fbstp
add
adc
mov
fisubrl
push
xchg
pop
dec
inc
mov
je
mov
inc
cmpsl
push
pop
jae
js
lahf
arpl
mov
cmp
mov
sbb
leave
imul
fidivs
fs
outsl
xchg
ja
or
push
inc
jnp
rcrl
fldl
push
in
sbb
movsb
jnp
jmp
add
add
ret
inc
jbe
mov
push
jnp
sbb
dec
shl
sub
mov
fwait
mov
pop
bound
cmc
in
dec
iret
mov
popa
and
push
inc
lahf
popa
jb
push
cwtl
movsl
mov
mov
nop
enter
test
ret
pop
fs
push
jmp
sub
add
imulb
pusha
sti
mov
sub
lods
inc
add
add
in
cmp
jmp
js
iret
push
jno
test
repz
inc
jl
lds
gs
in
ja
mov
push
std
dec
pop
sub
push
or
pop
lcall
movsb
mov
inc
adc
ret
stc
lahf
addr16
lods
push
data16
loop
lds
jg
cmpsb
mov
lods
push
jl
jecxz
mov
loop
push
jg
xchg
add
add
in
negb
nop
push
sti
sub
xor
inc
xchg
pusha
out
fnstsw
ret
mov
pop
pop
sbb
fimull
pop
cmp
mov
scas
icebp
push
pop
cmpsl
pop
pop
xor
mov
jae
mov
sub
movsl
mov
inc
outsl
sahf
dec
int3
mov
inc
push
dec
outsl
and
addr16
shlb
scas
cmp
sub
or
add
xchg
and
outsl
lret
imul
shll
mov
dec
sbb
stos
jae
push
movsb
dec
test
mov
jb
mov
jp
lea
into
xchg
inc
int
push
sub
fisubrs
nop
and
or
imul
sub
mov
push
sbb
movsl
inc
loope
push
fsubl
push
pop
add
add
dec
inc
sbb
add
pop
adc
les
sbb
sahf
insl
daa
mov
push
aaa
out
jne
push
sub
pop
pop
call
mov
pop
enter
mov
in
mov
or
bound
cmpl
cltd
push
push
sbb
adc
adc
mov
lcall
cmp
out
icebp
pop
pop
push
aas
hlt
add
add
add
pop
add
lods
xchg
add
adc
cli
jo
sbb
scas
mov
cmp
mov
cltd
rorb
pop
data16
adc
orl
mov
pop
adc
arpl
dec
adc
cld
adc
iret
test
adc
mov
jnp
cmp
cltd
inc
mov
cmp
add
add
call
popf
mov
fwait
test
addr16
jbe
stos
test
iret
dec
in
adc
sbb
and
adc
pop
lmsw
jne
negl
jb
clc
xchg
stos
push
loop
ret
repnz
push
enter
mov
cld
cmp
fsubl
mov
dec
dec
das
sub
out
cltd
inc
fcoms
pushf
jno
add
repnz
test
shlb
sub
ret
cmp
cmc
ret
pusha
cwtl
shll
sbb
popf
xchg
pop
shr
or
mov
lods
mov
jmp
xchg
push
sub
adc
ss
fistps
inc
mov
in
push
mov
enter
pop
arpl
movsb
aam
or
test
mov
adc
add
add
adc
jno
pushf
cli
pop
mov
pop
into
or
pushf
dec
mov
and
repz
inc
out
xchg
inc
cs
sub
mov
insb
repnz
mov
pop
aas
mov
mov
lods
or
inc
std
add
and
adcb
jne
lods
cmp
aam
cmpsl
cmp
lock
imul
add
jge
mov
cmp
gs
movsl
addr16
stos
hlt
xor
movsb
mov
loop
lahf
cmp
xchg
stos
mov
jp
push
jge
jnp
jae
or
sub
pop
push
add
adc
xor
push
xor
imul
pop
sbb
shrl
or
imul
ss
and
lods
test
xchg
mov
add
mov
cmpsl
adc
sub
mov
iret
pop
fdiv
std
aad
pop
rcrb
push
test
test
push
insb
rolb
bound
xchg
jle
pop
imul
pop
xchg
sub
cmc
test
jl
pop
fs
addl
mov
pop
stos
subl
or
adc
cmp
pop
and
pop
or
inc
jnp
arpl
add
nopl
insl
lcall
mov
out
out
mov
jno
jnp
mov
dec
insl
sbb
mov
mov
jecxz
adc
test
inc
fcoml
push
loopne
cmpb
out
inc
adc
cmp
pop
imul
push
push
mov
mov
ret
jbe
adc
sub
mov
add
jmp
ror
jbe
das
mov
cmp
mov
mov
or
arpl
push
mov
pop
push
mov
push
sub
xchg
test
inc
fwait
lods
ret
push
fdivrl
mov
xchg
sub
mov
fadd
or
jle
arpl
mov
cwtl
out
sbb
and
inc
ds
xor
xchg
aad
fmuls
ljmp
stos
cmp
ret
inc
push
adc
call
in
push
cli
sbb
xorl
adc
int
and
sbb
test
cmp
mov
aas
aaa
mov
or
mov
push
clc
sbb
rcrl
sub
pop
sbb
lds
or
dec
out
pushf
sbb
xchg
lcall
dec
adc
stos
hlt
push
subl
mov
inc
xor
ss
mov
sbb
add
adc
xor
mov
icebp
popf
mulb
jo
push
sbb
int3
hlt
mov
repnz
movsb
loope
gs
pop
cli
lcall
pop
and
inc
popa
dec
scas
ret
mov
mov
add
add
cltd
addb
jg
ret
std
or
mov
adc
push
add
pop
leave
outsb
xor
jnp
or
mov
shl
int
dec
jmp
leave
push
cmc
jle
jb
mov
into
mov
popf
insl
sub
or
popf
xchg
and
cmc
sbb
movsl
lret
fwait
push
ret
fldcw
dec
ljmp
mov
aas
push
nop
add
add
jbe
in
or
idiv
ljmp
pop
jo
sbb
ja
and
mov
xor
in
clc
cmpsb
repnz
nop
outsb
outsl
and
add
push
test
mov
jo
sub
sub
push
sub
mov
xchg
popa
xor
adc
jne
pop
inc
ret
jne
inc
sub
adc
test
adc
pop
out
mov
add
add
flds
add
add
add
add
add
or
add
add
xor
add
add
jmp
add
dec
add
sti
add
sti
iret
add
out
fildl
fucomip
jmp
outsl
iret
lret
add
add
filds
add
jmp
xlat
jmp
add
out
add
fucomip
add
dec
add
fucomip
add
sti
iret
add
iret
iret
add
incl
out
iret
add
sti
add
jmp
add
sti
lret
add
sti
add
jmp
add
jmp
dec
sti
fildl
iret
out
incl
dec
out
lret
add
iret
add
add
iret
add
sti
filds
sti
sti
add
fildl
idiv
sti
add
iret
add
add
out
add
filds
ja
fildl
fildl
sti
add
iret
add
sti
sti
add
fucomi
add
add
fcmovne
add
lret
add
filds
jmp
add
add
sti
add
out
filds
out
lret
sti
add
incl
inc
add
sti
add
sti
filds
inc
out
incl
outsl
iret
fildl
ja
iret
add
iret
out
add
incl
out
incl
jmp
outsl
jmp
add
sti
add
iret
sti
add
fcmovne
add
add
incl
jmp
add
fucomip
add
jmp
add
dec
add
out
add
out
out
add
fildl
addr16
add
jmp
add
iret
add
incl
xlat
lret
iret
add
sti
fildl
neg
lret
add
dec
add
fildl
jmp
outsl
fcmovnu
add
lret
add
add
out
sti
add
iret
fildl
ja
sti
add
out
out
add
incl
jmp
add
sti
add
add
fucomip
add
incl
iret
iret
fildl
out
sti
jmp
ja
fildl
out
jmp
add
filds
ja
out
add
filds
jg
filds
add
fucomip
add
iret
lret
add
sti
fildl
jg
sti
add
add
add
filds
fucomip
out
add
iret
add
iret
add
incl
add
iret
fildl
iret
iret
incl
outsl
sti
fildl
dec
jmp
add
sti
add
fildl
push
fildl
ja
lret
add
iret
iret
add
sti
lret
add
fcmovne
add
fcmovne
add
fcmovnu
add
sti
lret
add
fcmovne
add
filds
addr16
iret
add
out
fildl
out
lret
jmp
imul
out
add
iret
add
iret
add
fildl
iret
lret
sti
add
iret
lret
add
incl
jg
lret
add
filds
jg
jmp
imul
iret
add
fucomip
add
out
add
filds
inc
jmp
add
add
add
dec
add
jmp
add
iret
filds
dec
lret
incl
out
jmp
dec
out
sti
add
out
add
filds
filds
xlat
fcmovnu
add
sti
jmp
jg
out
add
out
add
sti
add
fucomip
add
lret
lret
add
iret
jmp
xlat
sti
out
add
jmp
add
sti
incl
addr16
out
add
out
out
add
fildl
out
sti
add
jmp
push
fucomip
add
iret
add
lret
add
add
filds
inc
add
incl
push
iret
fildl
inc
lret
lret
add
filds
xlat
add
fucomi
add
incl
idiv
incl
out
incl
inc
add
out
iret
add
iret
add
iret
filds
out
out
add
fucomi
add
jmp
neg
sti
add
lret
add
jmp
ja
sti
add
add
sti
add
filds
addr16
sti
add
fildl
addr16
add
add
lret
out
add
out
sti
add
filds
dec
out
fildl
iret
out
iret
add
lret
incl
out
lret
add
iret
add
fildl
push
sti
filds
out
sti
filds
xlat
fucomip
add
iret
add
sti
add
dec
add
sti
add
iret
incl
jg
filds
out
jmp
fucomip
iret
add
add
iret
add
filds
pop
iret
iret
add
jmp
add
jmp
pop
filds
outsl
jmp
add
fucomip
add
lret
iret
add
lret
lret
add
incl
jmp
push
lret
sti
add
filds
out
add
out
add
filds
fsubs
js
fsubl
popa
dec
dec
call
mov
sbb
mov
fsts
fwait
mov
cmc
outsb
xchg
inc
pop
mov
insb
mov
push
cmp
inc
xchg
arpl
loop
cmp
xchg
fst
adc
adc
outsb
mov
xchg
mull
out
jmp
xchg
ljmp
adc
aam
xor
pop
push
mov
pop
pop
cwtl
daa
out
mov
out
or
add
loope
dec
mov
inc
mov
std
inc
sub
mov
repnz
mov
mov
iret
push
iret
int
add
push
sbb
inc
dec
scas
pop
xchg
repz
outsl
out
das
adc
mov
xor
xchg
xor
imul
sub
sti
lcall
repz
xchg
mov
dec
ret
repz
shll
jbe
imul
mov
xchg
insb
jae
push
inc
cltd
cmp
ds
and
lcall
jecxz
jge
jecxz
jns
and
out
xlat
lcall
inc
mov
sbb
enter
or
dec
sub
pop
sahf
mov
pop
lret
jg
mov
test
and
sub
inc
add
cmp
icebp
adc
mov
fs
xchg
or
mov
and
xor
mov
sti
jge
divb
jne
cmpsb
jle
mov
and
or
faddp
xchg
adc
movsl
or
leave
imul
das
jmp
inc
mov
jmp
sbb
stos
adc
xor
and
xlat
xorb
dec
sbb
cmp
fmul
daa
jns
loope
cmc
xchg
sbb
gs
mov
pop
jne
xchg
xchg
mov
xchg
jle
bound
daa
movl
iret
cmpb
neg
jbe
push
aaa
or
ja
mov
shrb
ret
daa
xchg
and
xor
imul
aaa
pop
xchg
sbb
push
mov
push
lret
xchg
int
ficomps
out
scas
push
mov
gs
sbb
addr16
insb
clc
fsubs
scas
cli
out
dec
sbb
cmp
es
imul
js
out
pop
pop
xchg
lock
out
and
subl
sbb
fwait
in
loope
adc
test
test
shlb
xchg
sbb
rol
ds
push
lds
cmpsb
push
ficoms
test
inc
mov
pop
cltd
cwtl
cli
or
mov
mov
sbb
out
jae
xor
add
sub
push
pop
mov
int3
mov
add
stos
mov
int
int3
mov
cld
fsubrs
icebp
cs
mov
gs
xlat
xor
mov
cwtl
pand
into
jae
out
cmp
cmp
sub
adc
pop
aas
add
or
sub
sub
adc
push
xor
insl
orl
lods
fistl
mov
fdivr
pop
push
aaa
sbb
cmp
decb
xlat
add
imul
sub
fidivrl
lret
sub
int
adc
stos
fst
cwtl
fldcw
adc
insl
cmp
push
jae
icebp
and
mov
pop
dec
or
inc
inc
mov
sub
xchg
ret
cmpb
scas
js
shl
gs
and
aad
sub
sub
lock
sbb
scas
xor
subb
pop
outsl
jl
mov
dec
call
inc
cmp
fimull
lea
outsb
pop
idivb
arpl
pop
rolb
pop
movsl
fsubrl
loop
enter
mov
and
bound
movsb
jmp
ret
in
call
pop
adcb
inc
sbb
leave
and
lds
jo
andb
pop
outsl
pop
out
in
push
sbb
mov
enter
shrb
jne
xor
or
ffree
jp
or
and
add
or
or
pop
bound
mov
shll
mov
dec
cmp
or
pusha
rcll
jae
lock
js
or
mov
mov
frstor
cmp
gs
mov
out
roll
inc
inc
mov
int
imul
pushf
scas
add
imul
std
outsb
cld
inc
mov
inc
adc
mov
fidivrs
dec
ja
xor
jns
iret
stos
test
xor
in
outsl
inc
push
imul
arpl
xlat
inc
lret
movsl
int3
leave
mov
or
adc
test
fs
stos
filds
leave
sbb
out
pop
idivl
dec
fstpt
lods
xor
ret
int
and
cmc
cmp
out
sub
pushf
pop
es
mov
test
clc
cmp
sub
fstps
and
fsubl
sub
jle
std
jmp
dec
pop
pop
stos
or
lods
mov
add
mov
mov
and
repz
pop
adc
cmpl
rcl
mov
lds
jns
insl
mov
hlt
push
mov
mov
jbe
xchg
pop
cmc
sbb
inc
cmp
mov
add
xor
xchg
adc
enter
cmp
loope
jle
fldenv
outsb
loopne
mov
pop
inc
adc
xchg
aam
dec
adc
dec
fstpt
mov
outsb
subb
push
lcall
cmp
xchg
inc
mov
jnp
jo
push
push
sbb
mov
loope
lahf
xchg
out
adc
mov
cwtl
push
inc
jo
lds
subl
in
fnstenv
xchg
or
negb
rep
aad
pop
pop
pop
ret
xchg
or
mov
or
push
aam
cmp
dec
mov
jecxz
enter
inc
add
xorl
clc
stos
jbe
add
ss
pop
pop
movsl
xchg
push
mov
lret
inc
fisubrs
or
pop
jg
loopne
xchg
enter
leave
jecxz
and
js
fs
sbb
mov
call
ljmp
sbb
or
push
sbb
loop
push
test
add
jns
sub
out
loop
push
out
xor
inc
push
fs
xor
and
scas
js
loope
loop
or
xor
cli
adc
adc
ljmp
sbb
fcoms
xchg
adc
mov
das
sub
stos
insl
pop
mov
push
xchg
xchg
sti
or
mov
pop
je
ret
jmp
lret
jns
push
push
repz
xor
jle
in
pop
bswap
pop
jmp
xor
ss
push
sub
fsubrl
mov
pop
cmp
dec
out
es
dec
insb
nop
jl
push
insb
pusha
sbb
inc
pop
mov
psubw
cltd
sbbl
js
xchg
ret
fisubs
jle
mov
rcll
stc
mov
cmp
sbb
xchg
andb
xchg
add
or
movsb
jmp
mov
mov
or
fldcw
out
sbb
mov
sub
cmp
jmp
xchg
xchg
std
movsl
push
or
inc
lods
orb
mov
sbb
cmova
cmp
dec
ja
int
jle
mov
int
stos
sub
sbb
call
daa
add
lods
xchg
shrb
sbb
and
jge
cmp
jle
lods
inc
mov
xchg
insl
sub
icebp
xchg
mov
jle
shll
into
and
sti
fbstp
test
int3
or
je
loopne
cli
xchg
inc
out
inc
adc
std
push
dec
sahf
ficoms
xchg
add
mov
pop
xchg
add
mov
fs
jo
dec
stc
pushf
push
pop
mov
pop
inc
leave
movsl
loopne
mov
sub
xchg
inc
aam
and
pop
cmp
pop
test
sarb
scas
dec
push
rcrb
arpl
test
mov
inc
lcall
adc
adc
js
or
jecxz
mov
ss
lods
lret
mov
insl
idivw
cmpsb
test
lret
mov
jo
icebp
fistps
lret
sbb
adc
xor
lahf
icebp
push
loope
lock
sub
or
mov
or
pop
dec
add
jg
cmp
mov
add
jl
xchg
xchg
imul
sub
inc
lods
int3
xlat
mov
bound
rolb
pop
outsb
movsb
xor
cld
xchg
cmp
sbb
movl
das
fstpl
hlt
int
push
orb
movsl
fldenv
push
and
fcomps
aaa
add
stos
fmuls
ret
cmp
add
dec
gs
jmp
inc
cmpsb
fdiv
mov
add
std
loope
push
dec
mov
inc
fnstenv
jae
icebp
in
iret
or
fnstenv
pop
fsub
int3
nop
mov
and
sbb
jo
scas
cmp
sbb
mov
lahf
mov
pop
push
jl
jmp
movsb
jb
icebp
leave
popa
adc
xchg
push
leave
loopne
jb
mov
mov
sti
jmp
mov
popf
xor
adc
sti
cli
iret
in
mov
jnp
jmp
push
and
lods
out
push
ret
xlat
pop
clc
push
aad
scas
add
cld
dec
xor
cmpsb
test
subb
mov
stos
cmpsl
imul
xchg
add
and
cmp
jne
test
mov
loop
xchg
sbb
daa
mov
mov
pop
insb
xor
shr
lahf
movsl
cli
dec
mov
ds
bound
in
shll
das
rcrl
scas
aam
inc
mov
loope
les
daa
mov
inc
cmp
outsl
stos
leave
dec
add
out
push
fstps
xor
cltd
fstpt
out
dec
fwait
jb
test
dec
daa
sub
stos
push
lret
xor
nop
xchg
cmpl
fildll
pop
out
adc
dec
mov
loope
pop
jp
push
sbb
jg
movsb
aad
mov
je
mov
inc
inc
fwait
xor
xchg
daa
xchg
je
pushf
std
mov
loop
loop
jae
ret
mov
addr16
or
jno
lcall
jl
test
in
cmpsb
pop
push
lret
xchg
scas
cld
movsl
rclb
cld
pop
lea
sahf
adc
sub
xlat
pop
jno
test
rclb
jle
push
loopne
pop
test
jns
cmc
lods
mov
std
inc
ja
lahf
push
out
jp
and
idivl
popf
out
pop
ret
enter
push
add
jmp
insl
add
mov
out
addb
xchg
sahf
push
addr16
sub
cmp
cmp
jbe
adc
fldenv
popf
int3
fisttpl
jmp
cmp
repz
and
stos
lds
sbb
std
fcmovnu
loope
xor
stc
packsswb
mov
lcall
popf
int3
lock
push
fisubl
dec
fistl
stc
mov
iret
mov
adc
adc
mov
inc
push
cmpsl
js
inc
push
or
adc
jmp
inc
lcall
sbb
loopne
rolb
sub
ljmp
mov
lret
or
dec
sti
imul
mov
dec
dec
loopne
xor
push
pop
pop
inc
dec
in
sbb
xor
mov
stos
mov
into
sbb
shlb
xchg
leave
fadds
lods
scas
lods
lods
jns
sbb
cmp
nop
inc
lds
mov
inc
mov
icebp
add
pushf
jae
insl
and
xchg
out
unpcklps
repz
mov
lock
test
cmp
rcrl
movsb
clc
inc
dec
sbb
jp
inc
cld
mov
xchg
repz
outsl
ret
cmp
xchg
dec
push
xor
xchg
or
fcoml
pop
je
push
pop
xor
out
add
loopne
pop
jo
sbb
scas
jne
loop
jns
out
mov
sbb
cmpb
mov
pop
sbb
jmp
dec
lods
mulb
pop
mov
pop
add
idivb
in
add
pop
lods
loop
dec
mov
adc
adc
cmp
xor
int3
pop
cmpsb
fldz
sub
jns
rolb
xchg
cmc
out
or
test
xchg
ljmp
inc
mov
mov
int3
andl
mov
movsl
pop
mov
pop
xor
insb
int
outsl
sub
stc
push
imul
adc
or
out
lcall
xchg
inc
lea
mov
ljmp
jo,pn
arpl
cmp
lret
jae
and
je
mov
cmp
add
mov
stos
in
arpl
clc
jo
and
shlb
and
cs
pop
mov
inc
cmc
pop
cltd
leave
sahf
notl
xchg
add
cmp
out
aad
or
mov
pusha
repnz
je
cmp
mov
push
adc
inc
in
adc
xchg
loopne
xor
nop
cld
xor
rorb
popa
sbb
pop
dec
std
pop
movl
hlt
push
inc
xchg
pop
jns
mov
dec
lret
add
fimuls
in
sysret
test
notb
clc
cmpsl
cmp
add
sbb
out
shl
iret
cmp
ja
addr16
inc
int3
jns
jae
out
dec
adc
mov
in
dec
js
jbe
je
test
adc
jnp
je
push
fistpl
test
shrl
insb
loop
addr16
sbb
and
daa
repnz
int3
dec
stc
and
stos
into
inc
fwait
pop
pop
ret
nop
push
clc
jnp
xchg
fmull
data16
psubsw
mov
movsb
mov
adc
and
sub
loope
mov
push
jl
sbb
mov
jae
sub
cmp
fld
adc
nop
fdivr
cmpsl
frstor
cmp
mov
fcmovnbe
mov
inc
dec
xor
push
mov
jl
insb
xchg
mov
lcall
pop
ds
mov
iret
std
mov
int
repz
fadds
xchg
cmp
test
mov
bound
cmpb
fwait
sbbb
jmp
jne
sbb
scas
mov
jns
push
scas
xor
push
adc
outsb
fimull
push
movsb
inc
shrb
cli
lahf
popa
fisubl
or
and
sbb
sbb
js
mov
inc
sbb
lods
cmc
loop
sub
imul
mov
outsb
js
mov
insl
or
cmp
unpckhps
and
test
mov
ljmp
rcrl
scas
push
inc
int3
push
jo
cmp
hlt
cmp
adc
mov
fs
pop
ret
into
in
pop
frstor
sbb
mov
adc
rcrb
adc
mov
or
lret
inc
hlt
sbb
jb
xchg
mov
cmp
lahf
cmp
movsl
cli
fs
in
stos
aam
inc
push
insl
test
ja
cmpsb
cltd
lods
xlat
sub
adc
mov
mov
push
mov
add
xchg
in
sbb
cmp
test
pop
out
pop
sbbb
shl
xor
movsb
mov
mov
or
sbb
pop
push
in
orl
popf
cmpsb
cld
xchg
cltd
repz
xchg
mov
lahf
pop
aas
lds
adc
or
add
adc
push
leave
dec
addl
push
sbb
repz
mov
pop
sbb
addl
lods
dec
dec
push
add
fidivs
arpl
imul
pop
mov
jmp
loop
stc
pop
fisubrl
push
jbe
cli
xor
jno
jns
xchg
hlt
sbb
lea
push
orb
fistpll
decb
mov
mov
std
clc
mov
incl
mov
inc
ret
aas
jo
lret
rcrl
imul
sbb
add
sarb
into
pushf
les
add
mov
rcrb
call
xor
sub
pop
mov
xor
xor
ljmp
push
push
sbb
sub
ds
fdiv
dec
loop
xchg
ficomps
mov
inc
cmp
sub
mov
repz
stc
test
xor
push
xor
mov
cs
push
cmp
mov
dec
cltd
cmc
in
add
movsl
fcoml
arpl
lea
and
cmp
lret
fcoml
xchg
mov
inc
pop
mov
int3
cmp
and
sti
in
or
cltd
xchg
mov
fdiv
mov
and
in
cmp
std
mov
inc
xor
addl
iret
push
aaa
xor
fnsave
les
mov
loopne
fimuls
or
shrl
mov
stos
lock
stc
cld
insl
jo
jbe
add
jmp
inc
xchg
adc
aas
lods
rcrl
call
aaa
bound
rolb
add
cli
add
daa
subl
jecxz
inc
bound
out
and
push
ss
and
add
fisubs
mov
jl
gs
jge
cs
xor
or
cmp
test
ret
cltd
cltd
cs
enter
inc
mov
pop
mov
adcl
mov
mov
push
adc
scas
inc
cs
push
in
sub
mov
cld
lods
inc
adc
mov
sbb
xchg
adc
xchg
mov
adc
nop
rcrb
jb
jbe
xchg
repz
adc
shrb
cmp
mov
jmp
cld
push
loop
scas
ljmp
cmp
xchg
aas
sahf
jb
outsb
shl
sbb
push
push
mov
mov
fcmovb
sub
jge
dec
test
cltd
dec
cmp
cmp
mov
in
push
cmp
shrl
aas
out
or
inc
xor
dec
jb,pn
scas
dec
clc
cld
mov
add
sbb
rolb
stos
and
outsl
inc
dec
and
and
push
das
arpl
outsb
push
daa
or
adc
hlt
inc
mov
cmp
pusha
or
in
mov
fsts
in
lods
pop
push
push
std
adc
adc
and
mov
xor
stos
lahf
dec
cltd
jg
xchg
xor
mov
or
xchg
das
ret
call
dec
lea
ds
lds
pop
sub
mov
or
push
test
adc
xor
mov
xor
mov
pop
outsl
inc
add
mov
popa
movaps
pusha
stos
int3
mov
sub
lea
and
jne
mov
jmp
aam
jg
mov
lock
jae
push
push
push
outsb
insl
inc
lds
jae
xorb
and
xor
aad
call
rcr
inc
pop
iret
or
xor
insb
in
movsb
gs
ret
jns
sbb
cwtl
lds
sub
jae
aam
sub
fidivrl
jg
xchg
jp
jnp
sub
pushf
cwtl
scas
xchg
jge
repnz
xchg
into
pop
jno
out
call
cmpsb
outsb
cmp
das
repz
jp
push
fsubp
or
in
jl
xchg
clc
mov
push
movsb
aad
sub
pushf
xchg
repz
cmp
mov
xor
sbb
and
in
sbbb
push
nop
dec
jnp
pop
scas
leave
repnz
aas
inc
and
add
in
xchg
xchg
xor
jno
icebp
jne
or
sbb
bnd
repz
mov
sub
jge
dec
xchg
mov
cmp
js
enter
sbb
xchg
xor
xor
add
jbe
repz
or
inc
dec
xchg
add
mov
loop
xor
mov
fmull
xchg
mov
xor
or
call
or
mov
jns
dec
push
into
push
jg
imul
mov
fildl
push
in
repnz
cld
or
enter
cli
mov
sti
movsb
ret
repz
xorb
xchg
movsl
movb
les
push
push
fwait
gs
ja
xchg
pop
lods
lcall
xchg
sbb
imul
cmp
dec
xor
stos
insb
and
mov
ficompl
mov
dec
test
jle
out
dec
insb
cltd
call
mov
push
cs
nop
mov
fldln2
dec
xchg
mov
shlb
mov
lods
aam
cmp
lea
int
push
enter
sub
mov
mov
or
mov
ljmp
das
es
cmp
pusha
mov
test
in
sbb
ret
mov
mov
das
fmull
cmp
in
or
mov
mov
dec
jg
sar
add
mov
sahf
jl
cmp
xor
mov
mov
sub
adc
imul
lret
pop
dec
leave
push
add
cmp
gs
mov
mov
movsl
xchg
push
jp
shlb
mov
loopne
or
mov
lret
pop
ds
popa
pop
fwait
icebp
xor
dec
push
or
call
into
jnp
xor
movl
nop
sbb
in
mov
fwait
jns
jo
pusha
add
ret
xor
hlt
scas
mov
adc
hlt
inc
inc
leave
jg
enter
lea
add
dec
cmp
roll
sarb
fidivrl
mov
xchg
test
cmp
cmpps
mov
xor
ds
mov
cwtl
and
cmp
dec
popa
cmc
push
imulb
mov
pmulhw
shll
mov
cmc
and
cmpsl
adc
fistpll
das
aaa
les
pusha
inc
aam
loopne
lahf
adc
lret
xchg
jmp
loopne
cmc
aad
jmp
sub
shll
add
ss
fnstsw
fdivs
rol
into
fstps
cmpsb
out
test
clc
imul
push
jne
mov
inc
les
dec
and
adc
or
sub
jmp
and
mov
movsb
fdivrl
out
dec
cmp
inc
mov
negb
incb
lods
cwtl
out
shll
lods
imulb
jecxz
sub
jo
es
mov
pop
repz
insb
mov
icebp
cmpsb
bound
adc
in
out
stc
sbb
int3
mov
mov
test
popf
filds
lcall
shll
cmp
adc
adc
jp
mov
adc
pushf
xor
subb
jp
lcall
xchg
mov
or
jle
push
test
dec
cmpsl
mov
lcall
pop
cltd
lea
and
test
dec
ds
mov
jmp
fstl
icebp
dec
das
popa
dec
aaa
dec
int
popa
mov
cmp
add
cli
add
and
cwtl
push
cmpsb
clc
xchg
test
push
movsb
movsl
outsb
mov
sbb
dec
mov
jo
push
lahf
dec
mov
hlt
test
xchg
jp
jge
pop
mov
mov
jne
lahf
add
in
jo
shll
iret
insb
mov
fwait
rorb
inc
test
sub
loopne
mov
push
lret
adc
inc
cltd
es
scas
sahf
pop
out
out
push
pushf
xor
icebp
or
and
push
aaa
dec
es
inc
call
mov
ds
aas
sub
fstpl
cli
sub
lcall
shll
mov
pop
dec
fnstsw
and
test
or
lret
lock
and
and
mov
fiadds
cmp
mov
test
xor
mov
stc
mov
ss
mov
xor
cmp
insl
loopne
xchg
cmp
lods
mov
mov
mov
aaa
shll
lahf
ss
out
jl,pt
outsl
js
or
enter
cmpsb
rcrb
scas
sub
adc
ja
pop
push
out
imul
lds
test
xor
xchg
repz
inc
push
je
rclb
add
pushf
and
cmp
roll
iret
mov
jmp
fiaddl
test
out
lock
jae
repz
loope
mov
aaa
fs
in
mov
outsb
lcall
sub
sub
stos
fs
mov
mov
ret
imul
add
scas
jne
adc
xchg
jge
popf
mov
imul
shll
jns
pop
mov
outsb
ljmp
xlat
mov
dec
or
repnz
jo
xor
cld
stos
lret
fcomip
inc
add
adc
daa
ret
or
icebp
clc
pop
repz
cs
dec
jecxz
xchg
mov
and
data16
mov
or
or
into
cltd
cmp
lods
push
jno
insb
or
shl
add
or
mov
test
xchg
xchg
jo
nop
vmulpd
push
in
xchg
std
adc
cmpsb
and
das
jne
pop
enter
dec
outsb
inc
sarb
cmp
aas
movsl
sub
xor
sub
orl
test
stos
mov
pop
push
xchg
xor
cld
sub
lock
xor
mov
push
arpl
and
out
movsb
push
out
pushf
into
pop
and
jns
adc
je
mov
imul
pop
inc
mov
cwtl
mov
daa
mov
add
dec
fs
sarl
movb
xor
lcall
enter
nop
cli
stos
insb
fimull
inc
push
or
movsb
xchg
sbb
leave
xchg
cmpl
js
movsb
adc
int3
cmpsb
testb
nop
jg
push
repz
int3
jmp
pop
out
or
push
mov
cli
ja
imul
flds
push
cli
xchg
add
loope
xchg
inc
les
mov
in
xorl
or
adc
inc
fnstenv
mov
xor
and
sti
sub
call
and
mov
nop
lcall
sub
lret
icebp
cwtl
sahf
scas
jo
mov
push
pop
mov
lods
test
and
dec
arpl
adc
popl
bound
nop
adc
daa
test
xlat
cltd
arpl
arpl
sub
fs
xlat
push
shrl
xor
das
push
test
sbb
cmpsl
mov
filds
mov
aas
jmp
sub
aas
xchg
and
out
in
lret
outsl
sub
icebp
adc
jno
nop
mov
dec
gs
xlat
repz
add
fwait
inc
or
sub
aam
out
sub
jbe
movsb
push
iret
arpl
clc
xchg
sub
xor
add
cmp
cli
mov
push
sub
sbb
cmpsl
inc
addb
in
and
jl
stc
mov
loope
scas
stos
fstl
das
dec
sub
sub
lret
pushf
jno
in
enter
adc
out
mov
push
ja
out
mov
cs
orl
lret
cmpsb
cmp
adc
mov
stos
cmp
jp
mov
sub
faddl
pop
mov
test
popf
jp
fldl
ss
adc
lods
adc
jp
lock
movl
add
ljmp
bound
dec
pop
scas
pop
mov
mov
out
fisubl
rolb
jne
sar
jb
xchg
xchg
fbstp
sub
ds
inc
gs
xorl
xchg
popl
aaa
fsubr
xor
call
jne
push
popa
and
jecxz
cmp
rol
mov
shll
cmc
ret
in
sub
cmp
movsl
mov
lcall
xchg
xor
outsl
sub
test
push
call
inc
sub
jmp
cmpsb
dec
loopne
insl
jo
in
arpl
stos
jp,pn
aad
inc
popa
dec
mov
enter
stc
fnstcw
arpl
or
cmc
addr16
cs
mov
mov
push
nop
mov
and
aaa
jl
xchg
push
fiaddl
scas
fcomp
and
or
scas
frstor
mov
pop
inc
imul
push
xchg
dec
sar
adc
test
lcall
das
fisttpll
jae
movsb
mov
mov
je
add
pop
cmp
fwait
or
rcl
cmpsb
movsb
sbb
pusha
stos
pop
inc
scas
insl
cmp
test
lret
in
fadds
adc
adc
pop
mov
repnz
dec
or
dec
sahf
out
not
mov
rcrb
sbb
imul
xor
incb
addr16
mov
scas
cli
xchg
aas
dec
inc
mov
out
insl
sub
cs
mov
and
or
push
cs
rcll
rcr
pop
shrb
movsl
xchg
outsl
arpl
test
shlb
xorb
jle
fwait
test
jae
sahf
xlat
movsb
lods
sub
add
pop
push
cs
mov
addl
fsubrs
push
xor
ljmp
mov
jg
mov
mov
mov
and
mov
cmp
pop
pop
dec
xchg
sub
rorb
cmpsl
shr
mov
push
insl
fisttpll
xchg
mov
ljmp
pop
mov
ret
dec
je
cltd
jp
sbb
fadd
pushf
mov
in
dec
in
sarb
adc
and
out
pop
pop
loop
cs
sbb
xor
cwtl
dec
ret
jbe
scas
in
rcll
scas
insb
lods
out
shrb
ljmp
add
out
add
sarb
or
cwtl
mov
pop
mov
int
jp
push
ljmp
inc
and
repnz
jle
pop
adc
xor
idiv
xchg
pop
adc
lock
mov
setb
std
or
seta
rcl
cmp
sahf
xchg
xor
xchg
lahf
shlb
xor
fucomp
cmp
xor
insb
adc
xchg
pop
xor
jle
xor
adc
sub
std
mov
outsl
ds
mov
daa
mov
fsubl
adc
arpl
push
gs
stos
iret
add
push
sub
ss
ja
mov
adc
or
gs
repnz
cmp
decl
mov
into
jl
stos
and
mov
pop
lods
bound
shrb
insb
test
mov
mov
mov
lret
cmpsb
mov
push
dec
in
dec
cltd
call
cmp
les
xor
sub
dec
adc
sbb
lods
sub
enter
dec
je
sub
stos
fbstp
xchg
push
jo
cmp
jo
lea
and
pop
sbbb
dec
mov
and
xchg
sub
and
cmp
adc
out
or
outsb
ljmp
rcrb
jbe
push
out
jp
in
push
stos
push
dec
cmp
jb
mov
fisubs
ljmp
inc
int3
pushf
pop
sbb
add
sbb
or
shll
ret
pop
jecxz
movsb
scas
out
repnz
and
pop
popf
pop
or
push
and
jns
test
mov
or
add
jg
mov
je
out
ja
inc
mov
ljmp
lods
jb
push
cmp
movsl
incb
insl
test
or
mov
shll
mov
cmp
mov
sub
fldt
int
lea
or
aad
cwtl
lret
mov
or
lcall
sbbl
pop
jns
sahf
xor
jle
ret
cmpsb
mov
dec
movsb
add
jnp
xchg
notb
int
push
sbb
sar
mov
out
mov
movsb
mov
fdivrp
cmpsl
movsl
out
movsl
cmp
cltd
popf
pop
xchg
add
repnz
hlt
and
sbb
or
leave
sti
xchg
dec
ret
push
and
dec
xor
inc
mov
fistl
loope
mov
stos
mov
fs
bound
cmpsl
fsts
outsb
push
mov
or
cmp
fwait
add
cli
and
sub
dec
cld
xlat
or
mov
arpl
out
adc
std
loopne
xchg
pop
das
ss
mov
xlat
mov
popa
ja
fcompp
cmp
pop
pop
cld
jge
movsl
sahf
jg
outsl
mov
push
and
sbb
xor
and
dec
jb
inc
mov
mov
icebp
je
fstps
and
pop
and
jle
mov
fbld
pusha
lret
cld
pop
subl
andb
std
push
rorb
bound
xchg
cmp
dec
push
dec
ljmp
and
int
cmc
xchg
and
jno
das
in
inc
rclb
test
std
pop
add
push
int
cli
out
into
jbe
hlt
rorb
mov
mov
pusha
insl
mov
jle
inc
or
push
and
test
stos
adcb
testl
lods
mov
clc
xchg
jno
sub
cmp
mov
cwtl
popa
dec
pop
mov
cmp
mov
rcl
lret
jecxz
and
out
outsb
adcb
std
jmp
push
daa
daa
push
adc
outsb
loopne
dec
ret
sbb
dec
es
or
pop
add
fsubr
ficompl
pop
pop
outsl
inc
dec
jmp
jo
jle
in
into
test
or
inc
jmp
icebp
mov
ret
daa
call
call
sub
inc
push
je
xor
cmpsb
sbb
jecxz
js
push
adc
cmpsb
shll
mov
fsubrl
test
cmp
jno
adc
or
imul
jge
inc
jp
cmp
push
jmp
mull
mov
icebp
jne
dec
xor
jo
ds
ret
mov
insl
int3
mov
outsb
mov
dec
mov
insl
pusha
sub
pop
in
push
enter
pop
and
cmp
push
push
inc
push
jno
or
jmp
jb
fisttpll
rcll
add
mov
loope
das
sub
ljmp
arpl
es
cmp
adc
pop
mov
in
xor
jno
mov
ss
push
fadd
dec
sub
push
xchg
xchg
xchg
mov
stos
push
mov
xlat
sub
jae
cmp
scas
xchg
xchg
ljmp
fnstsw
jne
xor
sbb
jmp
mov
xchg
and
pop
pop
int
addr16
mov
call
stos
inc
andb
inc
lods
cmp
aaa
and
int
rcll
int3
fisubl
es
mov
lcall
push
cmp
jns
pop
sti
inc
jno
shl
movsb
int
cmp
and
cmp
mov
ds
lea
fdivrp
add
push
jmp
xor
data16
dec
cld
pop
iret
iret
mov
stos
xor
cmp
jmp
mov
add
mov
test
outsb
cmpsl
jmp
xchg
mov
lods
lret
dec
adc
scas
insb
mov
pop
int3
add
mov
push
rorl
xor
pop
jmp
test
movsl
scas
fcomps
outsl
aas
arpl
cmp
into
arpl
or
mov
sahf
xchg
imul
aad
xchg
ja
adc
sti
sbb
stos
imul
outsl
test
xor
sub
hlt
xchg
mov
xchg
fiadds
lds
cmpsb
add
add
xchg
cltd
leave
mov
in
sbb
in
sub
dec
xchg
mov
xor
and
mov
pop
fsubs
rorb
jg
cltd
add
call
and
dec
dec
dec
jo
pop
fldt
jae
and
aam
push
rcl
es
pop
sbb
fs
adc
movsl
mov
aad
cmc
mov
aam
adc
add
dec
cmp
dec
pusha
test
fisubrl
lret
mov
pop
dec
push
lds
mov
push
add
cmp
xor
iret
sbb
dec
dec
xchg
lahf
subb
in
mov
pop
inc
jno
inc
xchg
movsl
push
sahf
mov
mov
cmp
stc
bound
ftst
addr16
shlb
lods
ljmp
jbe
push
std
out
adc
cmp
push
cli
mov
add
inc
adc
jle
inc
mov
dec
xchg
lds
sbb
sbb
lods
xor
sahf
jl
inc
lcall
xchg
iret
or
sbb
fwait
arpl
loopne
scas
js
adc
je
xchg
dec
int3
jae
cwtl
in
mov
dec
pop
enter
sahf
clc
cld
or
inc
mov
mov
je
mov
insl
xchg
jge
in
push
sub
lods
lret
fmull
inc
loope
and
xor
in
fdiv
push
jo
add
jg
lods
stos
cmp
xlat
xor
mov
pop
jbe
adc
mov
in
das
loopne
js
cmp
dec
pop
ret
xchg
shrl
mov
jge
xor
xchg
lret
add
scas
cmp
es
into
or
pop
dec
jp
arpl
insb
add
mov
mul
and
sarb
xchg
shr
pop
test
mov
add
and
adc
push
ret
shl
push
es
shll
pop
fmull
sbb
push
adc
or
mov
xchg
sarl
les
pop
xor
add
sub
movsb
lods
in
add
fcmovnu
jmp
xor
xor
pop
inc
push
sahf
ficomps
jmp
roll
jo
push
cmpsl
xor
int3
add
sarb
add
subb
mov
int
jns
pop
int
ja
and
in
arpl
clc
jnp
ss
adc
fisttpll
and
in
loope
sbb
push
xchg
sub
sbb
cmc
ljmp
cmpsl
cltd
push
sti
insb
add
add
call
je
addl
mov
jmp
mov
call
lea
and
lea
decl
mov
incl
inc
add
pushl
call
call
inc
call
call
add
lea
lea
add
decl
add
inc
inc
add
lea
and
inc
call
je
add
jne
call
mov
lea
call
lea
mov
pushl
incl
add
je
add
addl
and
je
add
call
inc
andl
add
xorl
add
andl
decl
call
and
call
and
je
jne
je
xorl
je
je
mov
add
call
je
je
xorl
and
inc
je
call
and
jne
mov
decl
call
add
or
add
add
lea
decl
call
lea
mov
jne
add
call
mov
and
jne
jne
add
mov
inc
and
incl
incl
add
incl
decl
inc
and
jne
decl
call
pushl
call
add
lea
jne
and
lea
and
call
orl
je
add
addl
mov
call
mov
je
jne
call
incl
call
mov
add
je
incl
je
call
and
add
dec
or
add
mov
call
add
je
jmp
lea
lea
je
je
add
and
call
je
jne
orl
add
add
lea
and
pushl
lea
inc
call
and
incl
lea
addl
add
and
and
lea
je
je
mov
mov
decl
inc
inc
add
call
jne
inc
and
lea
and
mov
add
mov
jne
add
add
mov
je
inc
je
add
jne
add
call
mov
lea
je
call
add
addl
addl
call
call
cmp
add
and
inc
and
and
je
lea
je
and
jne
inc
orl
lea
pushl
call
call
incl
orl
jne
lea
and
inc
je
and
inc
jne
jne
and
lea
add
lea
and
inc
incl
jne
pushl
call
jmp
pushl
incl
lea
je
add
lea
je
incl
mov
pushl
add
inc
lea
and
inc
lea
je
call
mov
add
jne
fmull
add
jne
lea
call
mov
mov
jne
and
pushl
orl
add
call
je
lea
mov
jne
mov
andl
add
call
add
mov
inc
add
and
mov
inc
call
lea
or
jne
addl
add
addl
jne
call
pushl
je
je
incl
add
mov
and
jne
call
add
je
call
je
je
add
xorl
cmp
lea
je
je
andl
inc
call
and
jne
add
movsb
or
inc
je
call
add
jmp
incl
lea
add
inc
add
je
sub
inc
andl
pushl
inc
jne
and
call
inc
inc
add
decl
jne
je
lea
addl
pushl
and
add
add
addl
add
or
add
addl
call
decl
add
incl
add
je
addl
je
lea
and
incl
and
jne
add
add
inc
call
jne
and
lea
mov
jne
add
inc
mov
call
incl
call
push
add
inc
inc
and
add
call
je
pushl
and
add
jne
pushl
and
add
je
mov
call
inc
decl
inc
add
call
decl
jne
lea
andl
and
incl
add
call
add
call
call
add
lea
lea
mov
incl
jmp
add
addl
orl
lea
decl
mov
je
call
add
add
decl
lea
decl
add
add
je
je
and
mov
inc
add
addl
inc
call
lea
pushl
addl
call
add
jne
add
inc
jne
mov
jne
addl
lea
add
add
mov
and
sub
and
inc
add
lea
add
mov
and
jne
addl
add
and
add
addl
add
lea
and
jne
and
add
incl
add
lea
cmp
add
jne
add
and
call
mov
inc
incl
je
jne
je
xorl
jmp
cld
lsl
lea
jmp
inc
je
jne
inc
cmp
add
inc
je
jne
jne
inc
add
je
andl
inc
je
lea
orl
pushl
jne
and
add
je
add
call
inc
addl
call
incl
decl
add
je
call
adc
add
jne
add
jne
jne
mov
je
je
call
inc
je
add
inc
andl
add
inc
inc
je
je
lea
je
jne
lea
inc
and
add
call
and
pushl
and
jne
jne
je
jne
add
jmp
je
les
add
pushl
mov
orl
and
and
pushl
mov
call
jne
and
add
je
jne
and
and
call
add
mov
inc
incl
incl
jne
add
inc
xorl
je
and
jne
mov
xorl
call
je
addl
addl
lea
adc
add
je
call
incl
jne
lea
incl
call
call
add
call
lea
sub
pushl
orl
mov
jne
lea
jne
inc
mov
inc
lea
add
mov
call
addl
add
mov
call
pushl
and
mov
mov
mov
and
xorl
jmp
inc
and
sub
je
incl
and
jne
je
incl
lea
add
orl
mov
inc
jne
lea
and
cmp
call
jmp
add
add
add
add
and
lea
je
inc
mov
lea
cmp
andl
inc
call
call
inc
mov
jne
add
call
add
add
incl
inc
mov
call
call
incl
je
incl
call
lea
lea
push
adc
add
je
add
add
call
add
incl
and
inc
je
lea
and
incl
add
lea
call
jne
je
jmp
call
and
and
add
add
jne
lea
je
decl
inc
add
mov
lea
and
jne
jne
mov
add
xorl
and
jne
jne
add
mov
call
add
inc
add
cmp
mov
inc
lea
add
jne
mov
jne
lea
jne
jne
add
incl
mov
mov
lea
mov
call
and
add
pushl
add
orl
inc
add
jne
mov
inc
lea
jmp
je
add
and
lea
mov
inc
lea
jne
pushl
je
cmp
and
mov
call
jmp
jne
jne
inc
add
call
add
and
lea
add
inc
lea
addl
call
inc
inc
decl
je
add
inc
add
decl
jne
add
je
inc
decl
je
add
jne
add
mov
orl
call
add
pushl
add
jne
in
add
mov
add
inc
call
add
and
je
pushl
inc
addl
call
lea
call
jne
mov
jne
lea
addl
inc
lea
and
incl
decl
addl
pushl
call
call
incl
inc
and
xorl
add
je
jne
je
and
and
inc
and
and
and
call
je
add
and
and
je
xorl
and
lea
je
add
and
and
call
lea
mov
mov
call
mov
incl
lea
call
lods
adc
add
mov
and
add
inc
jne
mov
pushl
incl
decl
jne
je
inc
mov
je
call
add
addl
call
inc
call
incl
add
add
addl
jne
add
mov
incl
adc
jne
call
lea
incl
add
call
incl
and
orl
addl
call
call
jne
add
add
je
xorl
add
mov
jne
add
call
call
call
jne
add
add
and
je
inc
jne
add
and
add
je
addl
and
addl
add
call
je
jne
jne
jne
add
mov
add
add
inc
je
jne
add
decl
inc
andl
call
lea
lea
je
adc
mov
inc
add
sub
pushl
jne
lea
call
call
add
incl
lea
add
lea
jmp
je
mov
lea
and
add
jmp
call
call
inc
add
add
and
addl
add
xorl
decl
lea
add
incl
add
orl
addl
mov
mov
je
jmp
call
je
inc
inc
add
incl
add
add
lea
decl
incl
andl
je
mov
jne
je
add
call
orl
call
mov
inc
inc
mov
incl
orl
inc
je
mov
andl
inc
and
inc
inc
mov
add
inc
mov
and
mov
inc
je
add
cmp
inc
je
jne
pop
add
add
je
mov
pushl
and
lea
and
je
je
call
add
addl
cmp
incl
add
add
add
addl
inc
inc
inc
lea
lea
call
andl
mov
jne
lea
mov
inc
mov
and
call
add
add
add
add
and
add
jne
addl
inc
add
add
incl
and
call
xorl
inc
addl
je
lea
add
lea
je
decl
call
orl
call
jne
add
addl
add
add
incl
int3
pop
add
lea
je
inc
and
add
xorl
add
and
add
add
je
add
add
call
lea
incl
inc
add
and
call
inc
inc
je
add
add
add
inc
call
jne
je
mov
incl
inc
and
mov
call
mov
mov
and
call
sub
pushl
je
lea
and
lea
jne
call
lea
add
call
je
je
je
add
inc
mov
add
add
addl
add
call
jne
jne
jne
sbb
add
add
and
and
jne
jne
and
and
je
addl
jne
orl
call
incl
je
add
and
call
call
inc
incl
mov
add
je
mov
inc
je
add
addl
pushl
and
sbb
add
lea
je
call
incl
je
pushl
incl
call
je
incl
pushl
mov
jne
jmp
orl
add
mov
and
call
addl
lea
jne
jne
je
lea
jne
jne
and
incl
mov
call
lea
add
jne
add
call
inc
mov
inc
sub
je
inc
je
inc
add
je
and
inc
add
and
jne
add
lea
and
mov
jne
jne
jne
pushl
add
call
jne
jne
and
inc
incl
jne
jne
and
incl
inc
call
rcrb
add
mov
jne
add
je
addl
mov
add
and
inc
je
inc
je
pushl
incl
lea
call
add
add
add
add
lea
call
and
jne
add
lea
call
and
add
lea
mov
decl
je
cmp
orl
mov
cmp
and
lea
lea
je
call
mov
add
add
and
jne
add
incl
add
je
and
call
jne
and
add
call
inc
add
inc
je
inc
call
add
jne
mov
call
inc
call
add
call
mov
call
add
inc
inc
add
add
mov
add
add
orl
call
pushl
add
call
add
mov
addl
add
in
sbb
add
add
add
and
jne
mov
add
cmp
je
orl
andl
inc
add
inc
and
jne
inc
lea
cmp
incl
add
inc
je
and
incl
xorl
orl
mov
and
add
call
add
inc
addl
and
add
call
mov
add
mov
lea
call
inc
and
call
add
add
mov
add
pushl
call
addl
call
and
add
incl
addl
and
decl
decl
inc
add
and
add
add
call
mov
sub
jne
call
call
and
lea
je
call
orl
and
inc
addl
jne
lea
mov
incl
orl
je
add
jne
inc
add
inc
and
call
add
add
sub
inc
call
add
add
call
mov
jne
add
add
addl
incl
lea
add
inc
inc
inc
lea
inc
addl
and
jne
add
addl
call
inc
lea
add
and
addl
decl
je
lea
incl
lea
and
inc
call
jne
pushl
add
inc
lea
and
pushl
decl
orl
inc
mov
jne
inc
add
and
add
lea
add
add
je
add
je
call
lea
pushl
inc
mov
call
lea
jne
inc
inc
add
lea
jne
and
je
call
call
cmp
incl
add
call
add
inc
jne
lea
call
xorl
pushl
and
addl
add
je
lea
decl
and
jmp
and
jne
call
add
jne
mov
inc
lea
lea
call
mov
add
add
inc
add
je
call
inc
lea
add
call
addl
call
add
addl
pushl
sub
call
and
inc
and
add
call
add
lea
je
addl
jne
jne
call
mov
je
mov
and
add
jne
mov
add
jne
add
push
add
je
call
lea
inc
mov
incl
je
mov
je
lea
lea
and
je
add
je
inc
lea
call
je
lea
call
mov
call
lea
jne
jne
call
add
inc
decl
add
jne
call
and
call
decl
decl
call
jne
add
mov
inc
call
add
add
xorl
je
lea
and
incl
mov
orl
lea
push
add
add
add
and
add
inc
add
jne
mov
je
mov
and
add
add
and
andl
je
mov
jne
and
call
je
call
incl
add
jne
mov
inc
and
je
cmp
andl
addl
cmp
add
inc
add
call
addl
addl
call
addl
inc
lea
add
incl
inc
sub
lea
mov
addl
je
orl
lea
jne
and
call
andl
add
mov
call
je
pushf
pop
add
call
decl
jne
jne
orl
jne
lea
mov
lea
call
jne
lea
je
call
inc
lea
je
inc
call
mov
add
add
pushl
inc
add
sub
mov
and
je
and
add
mov
inc
mov
add
mov
mov
and
jne
add
cmp
jne
and
add
je
inc
addl
call
jne
and
add
add
addl
pushl
je
mov
jne
incl
call
mov
call
and
add
and
jne
add
jne
je
add
jmp
je
call
je
and
je
call
add
add
lea
inc
and
lea
decl
add
lea
lea
jmp
and
incl
call
inc
je
incl
lea
add
lea
and
jne
jne
decl
call
je
lea
and
mov
je
add
lea
and
add
decl
call
xorl
add
inc
andl
jne
lea
je
je
mov
jne
andl
sub
mov
sub
add
add
call
and
lea
sub
inc
pushl
add
and
add
addl
decl
je
orl
call
lea
add
and
jne
mov
inc
jne
je
lea
call
add
inc
decl
sub
jne
nop
and
add
and
jne
call
add
and
lea
orl
and
add
add
add
add
inc
addl
incl
inc
add
incl
and
call
add
inc
and
mov
jne
je
add
and
add
addl
and
add
pushl
jne
addl
jne
mov
jne
je
call
xorl
inc
orl
add
cmp
inc
add
je
add
addl
inc
call
addl
mov
mov
mov
jne
sub
add
je
pop
and
add
add
xorl
and
add
add
inc
lea
sub
lea
call
and
inc
call
je
incl
call
addl
and
add
and
lea
inc
mov
je
mov
add
mov
lea
and
add
cmpl
call
and
and
je
je
mov
add
lea
mov
decl
decl
xorl
jmp
addl
add
add
sub
add
call
je
and
jne
jne
call
inc
jne
inc
je
inc
inc
inc
and
and
call
mov
add
and
add
add
add
jne
je
pushl
and
add
and
and
je
add
call
add
mov
jne
decl
jne
lea
add
pushl
call
and
je
call
inc
andl
mov
xorl
add
mov
add
call
call
jne
and
add
and
jne
andl
jne
call
mov
add
inc
and
and
add
andl
mov
and
add
je
je
incl
inc
sub
mov
jne
call
jmp
je
incl
mov
and
jmp
xorl
add
add
pushl
je
and
call
inc
add
add
jne
add
addl
je
add
incl
pushl
add
mov
add
call
inc
je
je
add
add
sub
add
add
lea
je
and
add
je
mov
addl
lea
lea
lea
and
add
call
mov
je
add
pushl
je
incl
jne
call
call
inc
inc
call
inc
cmp
jmp
je
mov
jne
inc
and
add
pushl
and
and
add
decl
je
add
lea
inc
addl
xorl
add
call
pushl
pushl
add
inc
call
and
and
add
inc
incl
and
mov
lea
jne
lea
and
je
inc
xorl
xorl
add
add
jne
add
add
mov
jne
jne
and
add
lea
je
lea
add
and
add
je
je
and
call
inc
je
and
mov
pushl
add
mov
mov
add
inc
mov
inc
cmp
addl
and
incl
add
add
cmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
imul
and
push
add
popa
add
and
push
add
add
and
push
add
outsl
add
add
add
add
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
add
add
add
add
and
push
add
imul
and
dec
add
je
add
and
inc
add
outsb
add
add
add
popa
add
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
jo
jns
and
inc
add
add
add
jne
outsb
add
and
dec
add
jb
imul
add
add
add
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jo
jae
and
dec
add
ja
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jne
outsb
add
add
add
je
and
push
add
js
add
add
add
add
add
imul
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
sub
add
fiaddl
add
add
jo
add
push
fiaddl
add
add
mov
add
cwtl
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fiaddl
add
add
add
fiaddl
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jb
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
imul
add
add
je
popa
jb
je
insb
imul
