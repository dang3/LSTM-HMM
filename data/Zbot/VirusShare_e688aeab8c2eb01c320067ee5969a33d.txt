jmp
sbb
mov
stc
sbb
dec
les
sub
pop
lods
mov
xchg
ljmp
xor
fisubrs
pop
ds
ret
pop
pop
push
dec
ds
hlt
sub
incl
in
fs
loope
dec
and
cmp
gs
leave
mov
jne
loopne
roll
js
cmp
xchg
mov
pop
ja
mov
fldl
cmp
fnstsw
lret
pop
ljmp
mov
adc
and
or
stos
mov
xorl
lcall
add
adc
jne
dec
jno
xchg
xor
pop
push
push
dec
lea
push
cmpsb
inc
flds
mov
clc
fwait
sub
std
leave
push
cmp
inc
lea
and
cld
loopne
addb
jmp
repnz
inc
lods
cmp
jbe
dec
and
lahf
shlb
jbe
pop
and
or
or
call
or
xchg
adc
aad
sbb
cmovs
je
sub
jle
nop
insl
lods
and
test
jbe
rolb
jmp
pop
mov
lcall
clc
sub
and
fwait
and
add
outsl
cmpsl
jnp
ret
inc
std
jb
incl
ja
ret
add
xchg
div
bound
sub
pusha
in
jns
das
pop
push
jmp
cmpl
scas
bound
mov
xchg
xor
and
xor
out
pop
xor
dec
push
xchg
stos
xor
mov
cmp
out
fwait
scas
popa
out
pop
sbb
inc
xlat
mov
fadds
mov
int3
jae
std
xchg
inc
scas
insl
out
out
mov
les
movsb
mov
call
dec
into
test
movsb
sarl
mov
movsl
mov
fsubr
cmp
inc
cmp
dec
mov
scas
jne
in
ret
aad
sti
sub
or
stos
nop
sbb
sub
aad
jns
addr16
ljmp
xchg
sbb
cmpsw
test
iret
mov
pop
dec
mov
jp
in
xchg
xchg
dec
sub
jl
cmp
data16
jbe
aaa
aam
cmc
mov
js
sti
test
jae
inc
sub
call
mov
cpuid
fwait
pop
dec
inc
inc
lock
shrl
sbb
sbb
mov
mov
nop
sbb
sbb
jnp
loop
xchg
xlat
cmp
aam
pop
sbb
fnstsw
call
loope
shr
mov
jl
lret
jle
pop
jl
lds
imull
in
xchg
gs
ljmp
xor
xchg
dec
mov
push
adc
sbb
mov
fistpl
jne
aaa
lcall
mov
mov
cmp
or
dec
lret
xchg
inc
outsl
cld
decl
xor
div
mov
imul
pop
sbb
cmpsl
mov
lahf
sti
sbb
cmpsl
push
mov
push
fcomip
sti
push
cli
cwtl
or
sbb
inc
das
icebp
inc
lret
jmp
adc
push
jo
subb
scas
bnd
andl
les
cltd
nop
mov
adc
jmp
test
enter
cmpsb
jb
mov
or
jp
or
call
mov
lret
jo
adc
jg
jo
popa
gs
jb
push
mov
inc
push
sbb
lcall
mov
adcb
das
aas
inc
mov
or
push
mov
jecxz
in
add
sbb
pop
xchg
dec
sub
mov
sub
pusha
movsl
sbb
decl
hlt
or
cli
push
ffreep
mov
mov
arpl
dec
and
xchg
out
lcall
fwait
jmp
aas
push
out
loopne
mov
push
pop
ret
rcl
push
xlat
push
aaa
adc
jmp
mov
movsb
cmp
icebp
fsts
repnz
mov
inc
out
addr16
cmp
mov
cmp
pop
iret
mov
sahf
push
cmp
xor
and
out
mov
pop
addr16
cltd
inc
xor
pop
mov
ss
ljmp
jb
loope
xchg
das
mov
stos
imul
lcall
and
call
aaa
pop
lea
shlb
push
lods
xchg
ret
and
out
dec
mov
hlt
or
dec
jmp
aas
pop
in
clc
leave
iret
xor
pusha
mov
incl
popf
repnz
scas
sbb
jne
jo
adc
dec
std
pop
jae
add
mov
sbb
jae
movsl
mov
hlt
dec
or
repnz
fnstenv
mov
push
xchg
ja
into
incl
adc
imul
sbb
inc
jmp
fadds
lret
sbb
and
or
stos
int3
jno
mov
and
int3
ljmp
scas
pop
testb
pop
pop
sarl
or
or
inc
mov
decl
stc
mov
mov
and
mov
and
sub
divl
push
mov
ljmp
dec
loope
jecxz
ss
data16
adc
xchg
pop
outsb
ljmp
lcall
imul
negb
mov
xchg
jecxz
push
sbb
cmpsb
inc
xor
add
xchg
sub
ds
leave
inc
mov
ret
fmulp
jmp
ficompl
arpl
lcall
in
enter
pop
and
loope
xchg
std
or
and
aad
xor
jmp
cli
int
cwtl
addr16
push
cmpsl
mov
ficompl
dec
rcrb
mov
add
and
ljmp
jbe
test
repnz
push
and
outsl
mov
lea
cmp
dec
sbb
das
std
lret
pop
scas
xchg
out
sbb
rcrb
push
lcall
pushl
gs
pop
ljmp
dec
sbb
mov
jg
dec
lret
dec
mov
loope
into
inc
push
dec
adc
fisubrl
dec
adc
movb
xlat
inc
push
rcrb
jb
outsb
es
cmpsb
mov
cmp
test
dec
incl
aad
xor
clc
outsb
mov
sti
jg
in
fisttpll
rcl
lods
xchg
or
ds
mov
movsb
movsb
es
sub
inc
add
xchg
out
jb
jl
pop
fdivrl
lds
enter
cld
ret
dec
lds
into
inc
ss
dec
int3
rorl
add
xchg
rcr
jo
push
inc
movsl
sbb
ret
cld
les
cmp
rcrl
or
lcall
or
cmp
decl
add
mov
fidivrl
or
sub
test
add
inc
cmp
jg
ljmp
in
in
mov
mov
inc
dec
mov
jo
ds
cmp
jne
fisubl
inc
subl
cmp
scas
pop
mov
lret
mov
pushl
adc
dec
sbb
xchg
mov
xchg
ja,pn
adc
outsl
push
pop
insb
add
fs
decl
cld
push
test
es
jae
sbb
mov
adc
daa
jbe
cmpsl
lcall
fists
fildll
pop
push
popa
mov
pop
sbbb
insb
push
jg
xor
aas
xchg
lds
and
cltd
outsl
out
jne
adc
outsl
inc
pusha
dec
adcw
cwtl
pop
incl
mov
sbb
mov
out
andl
pop
mov
push
movsb
in
call
data16
adc
mov
pusha
cmpsl
add
ret
inc
cmp
xchg
inc
cli
popa
cli
testl
xchg
aaa
inc
inc
cmp
mov
xlat
out
xor
add
stos
ficomps
xorb
lcall
push
out
nop
jnp
cwtl
out
pushf
fldenv
adc
adc
jge
rcll
movsl
fidivl
dec
sub
adc
nop
mov
xchg
jae
sti
xor
cli
jne
pushl
outsl
int3
mov
cmp
cmp
adc
add
pushl
int
loopnew
xor
leave
mov
clc
jmp
fwait
pop
lods
into
inc
rorb
decl
in
or
inc
cmp
nop
add
add
test
addr16
inc
dec
cs
cld
cmp
dec
push
pushf
push
fldcw
mov
sahf
das
and
icebp
fisubs
ljmp
xor
cmp
pop
loop
mov
push
shrl
inc
mov
sbb
cld
loope
mov
ret
test
jecxz
mov
jb
incl
fs
cmpsl
popa
iret
and
mulb
lcall
ja
or
scas
imul
fwait
iret
mov
jp
ret
xchg
sub
xchg
mov
hlt
sbb
std
mov
or
xor
cld
adc
into
bnd
mov
stos
rcl
pop
leave
decl
cld
aas
mov
or
jge
cmp
push
ret
lock
aam
pop
fs
push
push
das
std
sar
or
jp
jl
mov
in
cmp
mov
decl
out
sub
lds
popa
or
pop
hlt
leave
cmc
mov
rclb
add
sbb
adc
repz
incl
incl
sbb
mov
sbb
fldcw
pop
jnp
xor
jp
in
inc
or
iret
jo
popf
movsb
adc
mov
fiaddl
outsb
xor
mov
inc
add
testb
decl
repnz
mov
adcl
out
hlt
in
add
xchg
movsb
ja
sti
jg
lcall
or
repz
push
push
xchg
push
jle
js
std
addl
mov
xchg
mov
clc
ficoml
aam
les
shl
adc
in
xorl
mov
jp
jp
jb
and
mov
std
fbstp
sub
jg
decl
pop
rcrb
es
fucomp
jg
bound
test
lret
test
sbb
stos
mov
scas
enter
fs
mov
jmp
ss
dec
cld
sbb
dec
popa
shl
dec
outsb
int
sub
mov
pop
repz
outsb
call
das
icebp
ljmp
push
mov
mov
adc
test
adc
and
call
adc
and
in
dec
arpl
icebp
data16
xor
fcoms
std
jge
sarl
sar
cld
sbb
aad
sub
dec
mov
insl
jno
insl
pop
and
mov
je
jg
push
push
hlt
push
fmull
push
jno
push
add
dec
icebp
cmp
cmpsl
dec
lcall
jb
or
idiv
std
subl
fstl
call
cmp
call
fs
mov
cmp
popa
jbe
test
push
stos
mov
mov
stos
or
inc
iret
sub
sbb
cmp
mov
sbb
and
shl
and
es
jmp
inc
iret
imul
mov
das
jno
sysexit
scas
or
xchg
push
aaa
sti
adc
pushl
pop
rcrb
mul
loopne
loope
imul
inc
push
aam
rolb
es
ljmp
rorb
xchg
into
fldenv
lahf
lods
nop
xor
pushl
push
dec
push
jg
xor
out
or
aas
dec
and
cmp
movsl
lcall
decl
and
enter
std
pop
pushf
fucomip
jmp
pop
and
aaa
adc
clc
dec
sbb
popf
xchg
orl
jg
ljmp
sti
push
push
xor
mov
imul
mov
dec
cld
pop
cwtl
iret
and
pop
sub
cmp
jns
hlt
inc
popf
mov
or
lret
mov
movsb
or
cmc
xchg
mov
jle
decl
cmpl
push
mov
jle
sub
dec
push
std
imul
sar
cmp
fmuls
shll
push
mov
and
pop
popa
in
in
jmp
outsb
out
repnz
xor
pop
jle
js
sti
aam
inc
push
sub
in
pop
imul
mov
push
dec
xchg
cmpsb
sub
jns
adc
bound
loope
scas
inc
pop
fbstp
and
incb
cwtl
jmp
stc
loop
push
ljmp
mov
stos
adc
sahf
inc
cmc
xor
jbe
jae
mov
sarl
into
mov
lcall
inc
in
mov
push
jns
jl
or
and
push
push
xchg
push
lcall
pushl
andb
shrl
cld
push
test
mov
lcall
inc
test
fwait
push
sbb
out
in
add
jmp
pop
ds
dec
or
ror
jno
jno
mov
ficomps
mov
and
push
mov
int
outsl
push
ljmp
decl
out
add
fwait
cmp
cmp
lock
or
pop
aad
outsl
xchg
mov
addr16
loopne
lock
mov
leave
rclb
scas
jno
adc
std
ret
mov
sbb
add
out
lret
cmp
mov
mov
addb
mov
outsl
jnp
xor
test
fwait
std
outsb
push
icebp
and
cmpsb
loopne
or
movsl
insl
hlt
lcall
arpl
lret
insl
rcl
cmpl
ret
jg
mov
mov
mov
sbb
dec
mov
stc
mov
sbb
mov
movsl
pop
out
add
mov
lcall
cld
ljmp
push
aaa
or
xor
gs
fcoms
cld
fwait
xchg
gs
push
fmuls
shrl
fsts
mov
ljmp
out
sbb
push
push
jge
cmp
pop
imul
call
jmp
mov
cmp
push
fstl
sub
push
fldcw
adcb
pushl
lea
push
sahf
pop
js
mov
jb
cmp
sarb
ljmp
xchg
icebp
xchg
xor
fidivrs
jne
sbb
insl
jmp
mov
jp
fiaddl
or
cmpsb
les
mov
out
repnz
lea
in
pusha
pop
out
adc
mov
fbld
mov
mov
fdivs
adc
ds
adc
out
cmp
jnp
mov
call
loope
pop
sub
push
lock
jbe
fildll
lods
mov
jno
pop
icebp
mov
fidivrl
ror
push
cmp
fs
jg
test
add
call
arpl
enter
add
sbb
cli
fadds
popa
hlt
lcall
pushl
pop
scas
cmpsb
stc
out
jl
lcall
dec
testb
ljmp
push
xchg
xchg
lahf
das
int3
out
loop,pt
and
jge
inc
mov
push
mov
adc
mov
loope
incl
and
dec
lret
scas
insl
mov
mov
mov
jg
in
push
shlb
movsl
enter
dec
jmp
hlt
push
test
cmc
or
xorl
jb
cli
les
add
mov
icebp
sbb
cmp
clc
lcall
fwait
push
je
pusha
ret
sahf
fistps
out
mov
aas
or
jg
call
shlb
pop
mov
arpl
pop
mov
push
jb
nopl
jo
xor
pop
loop
lock
fadds
arpl
xchg
and
add
adc
jg
mov
jmp
inc
std
cld
out
cli
push
pop
xchg
movsb
aad
loope
jmp
or
inc
stos
ja
lods
hlt
int3
and
in
inc
jmp
mov
std
cmpsl
sahf
in
sbb
gs
push
or
lcall
data16
hlt
mov
push
dec
inc
jne
outsl
scas
fyl2x
adc
arpl
jg
mov
cld
pushl
sbb
mov
loop
outsb
xchg
js
movsl
xlat
loop
sbb
fdivrs
inc
sbb
xor
sub
int
dec
mov
ljmp
dec
dec
les
insb
out
dec
sub
xor
leave
pop
arpl
pop
jg
jg
fwait
pop
dec
cmpb
ficoms
pushf
pop
mov
fisubrl
mov
push
cmpsb
dec
cmc
mov
pop
dec
push
inc
testl
jmp
nop
test
mov
loop
sbb
daa
or
pop
loopne
das
sub
mov
cld
cmpsl
cld
xchg
mov
scas
inc
fwait
in
setp
lea
jbe
xor
push
pop
pop
push
sbb
adc
int3
lahf
pop
cld
mov
sti
cmp
scas
sub
fxch
mov
mov
sub
xchg
jp
jl
xor
mov
int3
arpl
decb
add
sub
or
mov
xchg
pop
es
or
pop
call
cmp
mov
cs
inc
xchg
cmc
jecxz
decb
decl
test
insb
cmp
rdmsr
ds
loopne
jl
mov
and
mov
outsb
or
cmp
mov
pop
fnstcw
cwtl
js
ljmp
loop
les
xchg
cmp
icebp
test
sub
ljmp
jo
sub
cmpsl
add
and
and
js
fwait
xchg
push
jg
push
outsl
push
das
mov
rolb
repz
and
add
call
mov
int3
push
xchg
ljmp
pop
inc
mov
mov
incl
test
dec
lahf
and
mov
jns
and
cmp
sbb
or
sti
pop
sbb
mov
jne
or
push
fwait
adc
xchg
in
pop
xlat
xor
push
jmp
call
in
xchg
ss
jecxz
into
pop
or
out
mov
xlat
or
push
popf
push
fisttpll
and
jmp
lcall
sarl
insb
lret
lock
adcl
pop
jl
push
xor
imul
mov
mov
bound
mull
pop
push
jns
mov
pop
inc
mov
lcall
dec
arpl
js
cmp
or
imul
inc
js
ret
jnp
pushl
imul
in
mov
sbb
jae
or
cmp
cmpsb
and
mov
gs
ljmp
dec
and
sbb
push
inc
fs
mov
or
mov
inc
es
adc
rcr
pushf
inc
scas
movsl
mov
and
mov
sti
mov
cmp
decl
test
cmc
adc
arpl
sub
cltd
jg
mov
cmp
and
cmp
sbb
cwtl
mov
dec
pop
inc
xchg
les
add
sbb
sub
cmp
mov
xor
adcb
cli
rcrb
jb
xchg
int
sbb
lock
insb
and
sbb
cmpsl
scas
fs
test
js
call
mov
orb
xor
pop
mov
jle
mov
imul
inc
scas
repnz
jp
lret
icebp
cmp
sti
pop
shlb
inc
shrb
dec
and
inc
push
fistps
lret
xchg
incb
pop
jae
pop
loopne,pt
cmpsw
add
xchg
imul
stc
jmp
divl
mov
jmp
out
or
lret
push
mov
incl
shll
es
loop
sahf
fsub
hlt
mov
pop
inc
ljmp
dec
decl
test
movsb
cli
xchg
hlt
jbe
mov
repz
mov
inc
in
mov
push
or
cmc
aad
ret
sbb
bound
mov
addr16
dec
repnz
jp
and
lcall
sub
inc
jmp
xchg
mov
imul
jne
push
cmp
jmp
pushl
imul
inc
jecxz
pop
xor
sub
push
and
outsl
add
frstor
sti
inc
add
jae,pn
inc
push
dec
ficoms
jg
mov
jmp
insb
push
inc
aam
sbb
call
dec
pop
mov
into
and
jle
mov
out
dec
leave
dec
gs
call
inc
outsl
movsb
frstor
popf
icebp
mov
in
test
leave
ret
je
das
cld
decl
sbbl
fcomp
pushf
rol
sbb
add
cmp
aas
sub
mov
cltd
scas
dec
xor
add
pushf
or
sahf
sbb
push
out
add
jbe
call
mov
or
popa
rcr
jmp
and
ss
pop
inc
cmpxchg
insb
mov
mov
rclb
sub
mov
mov
pop
pop
add
mov
jo
inc
or
lea
int
inc
incl
shrl
add
aam
das
negl
inc
ljmp
mov
xchg
fdivs
mov
imul
out
ret
daa
mov
pushl
xchg
sbb
in
cmp
sbb
aaa
cmp
add
xchg
push
mov
pop
sub
mov
andnps
mov
xor
out
out
fldt
ret
mov
mov
and
dec
mov
out
jg
call
and
add
mov
cltd
in
dec
xor
sub
pop
imulb
mov
dec
mov
sub
add
es
fmul
inc
inc
mov
subb
ljmp
jp
pop
cmp
cli
pop
inc
push
push
mov
imul
mov
mov
cltd
xor
mov
mov
mov
fldenv
sub
decb
test
in
xlat
pop
or
add
sub
imul
fbstp
das
mov
or
testl
sahf
in
xchg
cmp
dec
sbb
xlat
bound
fs
push
push
lods
lock
pusha
mov
or
ret
push
push
push
out
movsb
inc
mov
add
mov
inc
push
sti
insb
imulb
js
push
push
xor
cmp
add
or
jae
arpl
adc
ja
add
adc
add
ds
dec
shll
insl
and
push
cmp
adc
add
pop
stc
out
faddl
popa
adc
jmp
fimull
mov
jae
or
test
insl
scas
std
cwtl
std
pop
jne
jnp
xor
sbb
fcos
loopne
nop
scas
or
test
aas
aam
fs
adc
sbb
lea
call
clc
adc
in
push
dec
rorl
lahf
mov
inc
imul
sub
cld
pushl
jno
mov
dec
or
xor
cmp
cmp
dec
pop
das
std
lcall
inc
push
in
hlt
xchg
adc
adc
push
dec
mov
enter
dec
iret
xchg
incl
loope
lock
pop
xchg
sahf
arpl
lret
cmp
pushl
decb
mov
cld
inc
mov
es
mulb
jb
incl
stos
or
mov
fists
or
ss
push
pop
mov
into
daa
pop
or
and
add
pop
clc
or
push
loopne
std
pop
ja
xor
lock
jbe
lock
imull
and
adc
mov
push
xor
jl
cli
mov
or
xchg
and
fwait
xchg
push
pop
aad
jecxz
dec
int3
je
scas
xor
ljmp
movsl
mov
pop
sub
pop
sub
adc
xor
sbb
fs
or
mov
mov
addr16
scas
dec
pop
cmp
ret
sbb
xchg
scas
in
lret
xor
ds
call
and
and
cmp
mov
fildll
mov
jge
xor
adc
jns
jmp
outsl
incl
arpl
xchg
out
insl
sbb
jmp
push
add
decl
aam
js
mov
cmp
dec
push
daa
mov
dec
and
and
push
xor
incl
test
out
bound
sbb
movsw
stc
into
add
imul
insb
lcall
cli
inc
adc
daa
jmp
push
mov
xchg
fildl
sbb
adc
inc
loope
pushl
imul
sub
test
sub
sti
inc
dec
push
inc
cld
bound
xchg
loope
jg
jl
fidivrl
ficoml
aaa
xor
mov
sub
sbb
out
push
fcos
jg
inc
je
es
pushf
mov
cli
fdivs
test
in
xchg
je
jle
sbb
popa
fstp
jl
jecxz
xchg
mov
in
dec
sahf
outsl
jmp
and
cmc
movsl
call
mov
ret
sub
or
and
mov
outsb
jp
das
mov
xchg
push
mov
imull
ljmp
lock
nop
out
or
repnz
std
sti
divps
xchg
adc
loopne
jmp
xchg
jmp
into
xor
loopne
test
adc
mov
fnstenv
fildll
and
add
negb
into
push
inc
inc
inc
call
lods
push
fs
incl
pop
jns
push
or
sbb
shlb
pop
pop
pop
test
inc
dec
push
push
cmpsb
insb
cmp
add
cmp
fdivr
adc
data16
ljmp
arpl
cld
fsub
jl
lcall
fsub
mov
rorl
ljmp
push
mov
fdivl
cmpl
outsb
int3
scas
xchg
xor
aam
out
ljmp
pop
in
out
or
xchg
lds
cs
lea
pop
iret
jp
fldl
pushl
dec
sbb
mov
mov
cmp
jo
dec
in
dec
xchg
mov
loopne
jmp
mov
dec
in
inc
xchg
xor
in
ja
int3
inc
lret
aam
and
ret
fnstsw
pop
js
mov
xchg
xor
sbb
sbb
or
decl
jbe
inc
jle
fdivrl
jns
out
ljmp
jns
mov
pop
lret
clc
inc
imul
shll
xchg
jae
test
xor
inc
xchg
dec
and
push
lret
pop
add
loop
pop
idivl
inc
xchg
fcmovnb
scas
jne
rcr
mov
cmpsb
pop
mov
xchg
fnstenv
cmp
mov
hlt
repz
aad
mov
sar
inc
sub
inc
sti
push
pop
adc
outsl
cld
test
repnz
jp
movsb
cltd
dec
inc
loope
ljmp
pop
shll
xchg
mov
push
jnp
jl
mov
dec
outsl
movsb
mov
aaa
xor
lods
mov
out
mov
ljmp
std
das
dec
cmp
pushl
sarb
arpl
jo
adc
jmp
inc
pop
and
cmp
aaa
xlat
leave
sbb
repnz
dec
xor
mov
jmp
jae
jno
sahf
jmp
mov
cld
jbe
imul
adc
jmp
sbbl
jnp
testl
jmp
mov
mov
jmp
imul
dec
incl
push
jno
inc
inc
push
jne
pusha
in
sub
rcrb
jge
xor
incl
fdivrs
adc
pop
test
cltd
pop
sbb
push
lock
in
arpl
jge
adc
lock
shlb
lcall
incl
ffreep
lods
lret
jne
inc
and
sub
test
adcb
and
lock
jmp
xor
inc
or
jecxz
jns
adc
clc
decl
pop
push
mov
loope
int
xor
dec
adc
mov
clc
incl
dec
mov
movsl
sub
jo
dec
outsl
or
and
push
and
add
jg
xchg
mov
outsb
mov
fidivl
loop
and
push
pusha
in
ljmp
je
cli
xchg
mov
sahf
cmp
loope
pop
aam
cwtl
stos
fdivrp
lcall
push
adc
add
imul
call
in
out
mov
clc
sbb
pop
loop
cmp
repz
shll
mov
mov
lcall
cmp
out
outsb
or
scas
add
imul
add
loope
loopne
ds
fs
cmp
lods
in
and
sbb
sbb
jle
fwait
movsl
test
iret
inc
idiv
call
popf
aad
pop
xor
fs
add
jg
jmp
inc
dec
sub
and
incl
push
ret
mov
loope
dec
fst
jmp
pop
cltd
test
and
mov
out
adc
in
mov
mov
xor
push
pop
mov
out
ja
call
aam
mov
mov
std
outsl
sbbb
adc
inc
add
adc
add
shrb
pop
ret
cmp
xchg
add
inc
add
and
lock
daa
fbld
adc
stc
fiadds
inc
sub
sbbb
sub
arpl
jne
pop
fwait
jl
mov
xor
fisubrs
iret
or
pop
ss
adc
mov
gs
xor
fcoms
cltd
and
inc
jbe
repnz
loopne
mov
loope
jnp
inc
push
int
sub
or
sub
mov
fsts
inc
sub
in
loopne
or
push
and
or
xchg
jo
es
xchg
sub
adc
ret
daa
cmp
gs
pop
jbe
sarb
add
push
or
dec
inc
and
dec
sbb
dec
sbb
pop
pop
mov
test
pop
sub
pop
ret
adc
test
aas
insb
ret
mov
pop
xchg
ficoms
add
cmp
sub
cmp
mov
imul
mov
mov
outsl
jne
test
add
xor
gs
mov
sbb
mov
mov
xchg
xchg
test
xor
sub
cwtl
pop
lcall
pusha
mov
dec
push
lea
mov
pushf
xchg
int
pop
and
outsl
and
lods
mov
lea
mov
or
pop
loope
xchg
jne
cmp
fldlg2
shlb
sbb
jecxz
fwait
mov
pop
cmp
adc
jne
or
mov
pop
cmp
sbbl
xchg
shll
or
daa
fnstenv
xchg
mov
test
sub
or
sbb
imul
dec
lahf
aam
sbb
push
int
jle
lds
sbb
jne
in
jns
lock
incl
cmpsl
adc
push
mov
pop
xchg
out
imul
je
pop
repnz
decl
xor
jge
or
add
out
sub
testl
outsl
push
push
daa
sti
xchg
mov
aas
ret
adc
lahf
int
clc
ret
cmp
mov
decl
outsl
adc
pop
daa
scas
mov
aam
daa
sbb
icebp
cmp
test
cli
call
movsl
adc
fbstp
inc
sub
xor
shl
negl
cmp
fsubl
repnz
jmp
int
and
mov
aam
insl
jmp
jg
push
into
mov
mov
push
enter
decl
mov
stos
pop
out
sbb
add
out
mov
pop
mov
jmp
mov
jmp
imul
push
loop
loopne,pt
xchg
pop
inc
dec
scas
jbe
pop
std
or
mov
sbb
imul
and
mov
cltd
daa
jo
xchg
push
cmp
lock
incl
imul
xorl
int
xchg
or
push
sbb
ds
cltd
mov
shll
fcomps
mov
test
popa
movsl
loopne
adc
call
xchg
mov
mov
jecxz
enter
dec
test
xor
adc
mov
xor
das
ror
dec
inc
pop
stc
sub
bound
ret
into
in
sbb
inc
push
faddp
imul
mov
scas
xor
rorl
sub
decb
dec
push
jge
push
or
push
lcall
pop
xchg
into
or
hlt
adcb
je
out
stc
push
sbb
mov
sti
imul
fcomps
lcall
cli
and
mov
stc
cmp
scas
cmc
jnp
ljmp
pop
cwtl
xlat
in
clc
inc
int3
cmpsb
and
mov
dec
in
test
lcall
stc
inc
jno
cltd
push
aaa
jg
sub
push
mov
add
sub
jmp
pop
outsb
and
push
add
mov
pusha
cmp
dec
and
dec
div
in
mov
add
add
push
mov
mov
xchg
inc
lds
repnz
jmp
les
xor
pop
in
out
pop
dec
inc
imul
lcall
ss
stos
jecxz
sahf
xchg
call
pop
push
test
pop
cmc
outsb
mov
sbb
cs
push
dec
jecxz
and
mov
or
mov
rclb
or
pushl
mov
pop
cmpsb
into
adc
sub
xchg
mov
mov
adc
je
out
and
sbb
sar
scas
adc
scas
mov
push
ret
decl
insb
jb
into
inc
mul
jmp
inc
dec
imul
mov
sar
ljmp
pcmpgtw
cwtl
jg
push
loop
push
xlat
outsl
rclb
incl
push
dec
sbb
test
cmp
and
mov
pop
jecxz
xor
repnz
pop
pop
xchg
jb
cld
lea
mov
xchg
bound
es
incl
mov
punpckhdq
sti
push
movsb
pop
js
mov
cmc
pop
rorl
je
dec
lret
call
loop
test
sbb
jae
cmc
hlt
into
ljmp
call
xchg
add
xchg
xchg
cmc
das
into
cs
add
mov
pop
lret
decl
adc
ds
xor
popf
loop
pop
sub
jns
gs
rorb
add
pusha
fstpl
push
lea
sub
lock
sbb
xorl
incl
cmpsl
shl
and
push
push
popa
fistl
shl
arpl
xchg
add
notl
xchg
push
inc
dec
and
mov
adc
jge
adc
imul
mov
jmp
lea
cmp
out
icebp
push
sahf
das
jne
imul
jl
sbb
pop
fwait
push
rcr
pop
lret
xchg
pop
cwtl
pop
ss
mov
sbb
fmuls
ljmp
mov
neg
insl
xchg
mov
sbb
and
jne
add
cs
push
leave
pop
clc
decl
jb
jle
push
xchg
stos
jl
mov
and
call
mov
lret
repz
mov
pop
orb
sub
aam
out
es
outsl
call
pop
pop
mov
je
inc
xchg
adc
aas
arpl
xor
imul
mov
pop
adc
mov
add
adc
nop
push
add
add
orl
sub
or
adc
xchg
pushf
or
add
repnz
add
add
dec
sub
add
incl
ljmp
adc
stos
inc
and
inc
add
inc
push
push
inc
add
or
push
orb
add
nop
inc
add
add
xchg
lea
in
roll
call
inc
mov
push
lcall
cvtps2pd
repnz
sbbl
pop
stos
xchg
xchg
mov
pushl
fs
fnstsw
rcll
ret
or
mov
loop
iret
fstpl
or
decl
insb
or
cwtl
int3
xchg
mov
repnz
lock
dec
dec
xor
cmc
call
add
sarl
cltd
push
leave
pop
xchg
mov
mov
sub
dec
or
jp
insl
sub
call
div
pop
jp
dec
leave
push
cs
pop
movsb
popa
js
inc
enter
ret
or
ljmp
mov
js
adc
ficompl
test
ljmp
pop
push
inc
enter
sar
jmp
sti
sbb
scas
imul
pop
stos
sbb
or
jmp
out
cmc
pop
push
fldt
call
fldt
imul
jnp
jae
les
lods
fcoml
pop
cld
ds
lcall
out
mov
test
mov
adc
add
les
mov
call
or
cmp
clc
push
or
fs
mov
clc
or
xchg
into
adc
or
jnp
pop
test
xchg
ljmp
jg
add
test
push
push
sbb
mov
fistpl
mov
pop
loopne
ret
lock
ja
fstp
and
pop
xor
into
es
pop
xchg
fldt
mov
iret
push
test
cmp
pop
add
xchg
mov
push
mov
jns
push
push
push
cltd
das
out
sub
jae
mov
mov
orl
insb
pushl
jmp
pop
std
mov
lods
xor
push
pop
cmp
add
jmp
and
pop
inc
in
jb
mov
cmp
stos
mov
sbb
xchg
sarl
xchg
insb
mov
test
decl
and
xor
mov
jo
adc
push
inc
cmp
dec
mov
call
jecxz
adc
pop
addr16
pop
mov
inc
xchg
test
out
loopne
leave
sbb
call
pusha
les
setg
imul
mov
sbb
push
flds
adc
mov
lea
jl
inc
xor
out
js
leave
dec
mov
xchg
mov
aas
mov
add
inc
lods
xchg
or
inc
add
jmp
and
add
bound
jns
dec
jb
lcall
pop
pop
aas
jge
int3
push
insb
xor
cltd
mov
and
jo
pusha
imul
and
dec
imul
lock
adc
add
xor
pop
sub
jg
mov
movsl
xor
pop
dec
addr16
cmp
mov
popa
out
xor
push
dec
xor
dec
ljmp
fwait
adc
xchg
mov
mov
jle,pt
mov
or
add
dec
and
inc
and
jg
jmp
push
dec
and
dec
sbb
mov
inc
xor
jne
or
pop
call
sub
pop
inc
daa
sbb
lret
xor
or
dec
inc
and
aas
inc
pop
cmp
cld
decl
push
gs
push
push
push
imul
lods
rol
dec
aaa
and
ljmp
pop
dec
pop
sub
and
push
sbb
mov
cmpsl
cmc
pop
out
sti
mov
mov
sub
sub
sub
dec
and
dec
mov
jge
and
popa
stos
int3
hlt
sub
test
mov
out
test
dec
cmp
or
bound
cmp
jg
outsl
addr16
lret
mov
adc
dec
lret
sbb
push
je
cmp
pop
cmp
inc
dec
sbb
mov
mov
xchg
xchg
pop
adc
fwait
or
out
outsl
repz
jp
pop
jo
sbb
lods
lret
sbb
or
mov
jp
push
inc
cmp
dec
jbe
push
insl
sub
dec
imul
pusha
je
clc
sbb
inc
leave
mov
bswap
repz
decl
and
dec
aaa
mov
jg
mov
inc
xchg
cmp
dec
xchg
and
xchg
sub
cmp
pop
in
lret
jno
int
jo
repz
mov
or
dec
arpl
push
outsb
mov
and
fistpl
lret
fistl
and
cmp
sub
mov
fsubs
pop
inc
fwait
es
fstpt
and
dec
arpl
sub
sub
lcall
arpl
mov
mov
pop
and
mov
mov
fisttps
inc
mov
daa
pop
bound
jo
mov
sub
dec
scas
fcmovne
and
sarl
out
mov
jo
inc
int
int3
es
in
mov
mov
pop
dec
mov
dec
inc
nop
jnp
iret
shll
inc
mov
ret
test
shr
push
jbe
mov
and
dec
pop
cmp
inc
fnsave
and
add
or
loop
and
dec
mov
stos
mov
decl
pop
inc
inc
sub
mov
sub
gs
testl
idiv
leave
fbstp
bound
sarl
xor
mov
jge
out
int3
decl
mov
mov
mov
int3
in
das
push
push
mov
mov
std
mov
decl
jb
xchg
stos
sbb
daa
sbb
cmc
out
leave
cmc
cwtl
in
jg
mov
mov
inc
push
in
inc
ret
call
mov
sbb
xchg
push
in
inc
testl
xor
out
dec
jns
movsl
js
adc
pop
pop
lods
xchg
int
sub
fistpll
xchg
cltd
lea
pop
jl
daa
hlt
je
loope
lcall
fdivrs
add
sarl
or
sti
test
rorl
shll
mov
lods
jp
or
lret
fbld
testl
jns
repnz
jo
je
inc
and
jo
cmp
lds
and
cmp
or
mov
sub
or
sub
or
test
outsl
adc
cmpl
lcall
sti
ret
inc
sub
sahf
ja
movaps
xor
adc
mov
pop
jno
cmp
scas
pop
mov
scas
ret
call
sbb
push
dec
imull
or
test
push
sbb
scas
cmp
outsl
mov
daa
jle
loop
add
xor
mov
incl
iret
inc
add
inc
pop
jae
cmpsl
test
jg
mov
mov
nop
and
in
xor
jecxz
inc
hlt
xor
cmp
or
inc
divl
sbb
outsl
clc
inc
add
cld
inc
cmp
inc
xor
lret
jg
subb
mov
mov
insb
adc
xor
mov
jg
mov
sbb
stos
inc
fcmovnbe
sub
push
jg
dec
ret
jg
mov
aas
mov
outsl
pop
xor
and
jecxz
aas
xor
es
lods
fld
jns
xchg
mov
imulb
ret
out
xchg
pop
repz
push
or
popf
or
popf
dec
call
xlat
dec
add
dec
fucomip
xchg
mov
iret
mov
and
das
and
mov
push
jns
ret
lea
test
mov
adc
sbb
pop
or
pop
mov
rorb
shl
jnp
fwait
mov
inc
pop
add
xor
call
inc
xor
xor
scas
cli
insb
mov
pushl
mov
popa
inc
xor
cmpsl
ds
xchg
pop
mov
adc
out
outsl
mov
pop
or
je
pop
lret
xchg
adcb
repnz
fisttpl
pop
mov
arpl
out
adc
aas
call
mov
mov
insb
aaa
xchg
mov
aaa
pop
sbb
mov
imul
int3
das
pop
mov
imul
fisubl
mov
jns
sbbl
jg
jmp
in
push
add
sahf
sti
lahf
fiaddl
popa
popa
inc
les
fadds
scas
std
ljmp
and
inc
xor
or
je
add
sar
decl
fdivrl
ja
and
push
cmpsb
mov
shrb
jmp
test
in
mov
sub
or
adc
jns
in
bound
js
jg
cmp
push
inc
xor
push
push
bound
js
outsb
xor
decl
inc
imul
push
ja
dec
jb
ja
push
addr16
insl
jo
in
sbb
insb
je
dec
dec
js
push
das
dec
inc
dec
dec
xor
aaa
fs
push
ljmp
jp
xor
push
push
push
cmp
xor
outsl
outsl
xor
push
mov
jbe
jne
bound
push
push
sbb
inc
insb
lds
pop
bound
xor
jg
js
outsb
inc
xor
imul
dec
inc
cmp
adc
pushl
xor
inc
xor
jp
dec
jne
push
jp
xor
inc
jne
ljmp
ja
outsl
push
dec
dec
insb
pop
push
aaa
ss
inc
dec
popa
insl
dec
arpl
dec
aaa
inc
outsl
pushl
dec
jo
dec
xor
dec
push
jns
arpl
push
jb
fisttpl
dec
dec
push
insl
push
push
jo
inc
leave
popa
fs
push
dec
inc
xor
jg
jmp
xor
addr16
xor
insb
push
ja
jbe
xor
xor
push
push
push
xor
jp
fs
push
jb
cmp
jne
xor
jb
push
push
cli
in
adc
xor
jae
dec
push
cmp
dec
imul
fistpll
inc
dec
ja
je
jno
inc
push
imul
push
inc
jne
aaa
je
jg
decl
dec
dec
inc
pop
inc
jnp
pop
push
inc
inc
push
pop
jle
mov
pop
imul
pop
dec
dec
push
push
jo
inc
sbb
add
hlt
jg
add
lcall
or
movsb
cmp
add
xor
stc
dec
xchg
add
and
sub
add
in
adc
out
push
out
xor
mov
push
fsubl
int
in
ljmp
sub
adc
jmp
mov
in
dec
inc
jecxz
in
je
jo
out
js
fldenv
inc
cmp
jle
cld
ja
and
ja
inc
sub
outsb
sbb
jbe
add
pop
mov
adc
adc
scas
pop
lock
sub
or
lret
pop
outsb
pop
sbb
sbb
jbe
dec
lahf
xor
faddl
and
inc
mov
lods
aad
ror
mov
aas
cwtl
xor
loop
loopne
mov
xor
ret
dec
dec
daa
mov
mov
mov
subl
aas
mov
push
xchg
push
dec
adc
and
jmp
sti
arpl
adc
dec
test
dec
add
jnp
push
pop
jnp,pt
js
rolb
psubq
sbb
mov
adc
xchg
xor
ss
pop
sub
sar
mov
lahf
lds
mov
sbb
xorl
cmpsl
dec
jo
jmp
xor
cs
or
outsb
pop
or
setno
jecxz
inc
aas
inc
jne
or
arpl
sbb
jnp
fwait
test
cmp
aaa
outsb
pop
mov
in
mov
enter
adc
push
mov
lret
jb
sub
cmp
jg
adc
sub
leave
fildll
push
add
insl
mov
mov
pop
add
out
pop
outsb
xchg
mov
rcrl
add
mov
lret
in
mov
jmp
pushl
jns
pop
lret
test
jbe
je
in
popa
sti
fiaddl
das
jge
insb
les
jnp
test
out
jmp
lcall
pop
into
loope
jbe
add
loop
pop
pop
outsb
lods
or
aad
notb
lahf
and
add
jmp
fwait
ret
imul
jb
gs
xor
cs
mov
fs
insb
cmove
imul
arpl
roll
out
outsl
outsb
pop
dec
gs
jbe
add
mov
lods
sub
adc
sti
add
jb
jne
mov
or
lret
pop
mov
cmp
or
imulb
mov
cltd
push
dec
imul
je
push
jne
cltd
jnp
in
jns
add
jb
popa
outsb
arpl
lea
xchg
clc
data16
jae
or
push
lods
push
sbb
add
jae
mov
hlt
arpl
pop
pop
or
notb
sbb
imul
popa
jb
ss
flds
je
pop
dec
divb
out
out
insb
in
insb
jae
push
inc
inc
or
jns
jno
inc
jae
lea
sbb
movsb
cli
adc
jmp
push
je
jnp
mov
inc
adc
outsb
outsl
sub
sub
xor
dec
lret
jp
dec
pop
fs
ret
imul
fisubrs
dec
adc
inc
ret
inc
sub
inc
sub
cmp
cmp
mov
mov
or
xor
mov
sub
jae
imul
push
outsb
push
ss
pop
cmp
cmp
sbb
outsl
dec
adc
sbb
dec
data16
push
adc
ja
or
pop
popa
jo
xchg
mov
ja
add
fs
jecxz
fwait
or
push
mov
push
jns
inc
imul
xchg
test
adc
bound
fstp
and
cmp
ficompl
and
gs
outsl
hlt
dec
gs
or
mov
fbld
jbe
jo
inc
mov
push
icebp
adc
pop
int3
int
outsb
pop
adc
mov
add
lea
aas
push
jns
and
ucomiss
test
adc
adc
push
test
pop
dec
xchg
mov
inc
jae
push
pop
lret
mov
push
int
in
jae
xchg
cmovg
xor
test
push
jo
sarl
adcb
or
pop
ret
pop
cmp
imul
ja
lcall
inc
rorb
jbe
roll
cmovns
or
nop
ret
and
pop
dec
or
loope
or
inc
ret
adc
adc
push
sbb
push
dec
jae
fbstp
mov
adc
adc
lret
adc
or
adc
popf
mov
add
gs
xchg
or
or
shl
mov
loope
inc
ror
sbb
inc
mov
jecxz
inc
mov
cltd
jno
dec
lret
mov
add
cwtl
cmpsl
jne
fs
sub
shrb
or
pop
mov
lods
xchg
lods
test
fwait
inc
sbb
fs
push
push
mov
lods
sbb
dec
insl
push
dec
push
xor
inc
imul
and
cmp
imul
push
jno
out
or
inc
sti
pop
scas
mov
in
insl
push
ficoms
add
insl
inc
bound
sbb
scas
adc
pop
data16
gs
cmp
push
movb
jae
clc
sub
jno
aaa
or
adc
push
xor
xor
push
or
adc
ja
je
jg
and
loopne
jb
push
rcrl
outsl
ja
testb
leave
arpl
test
pop
sbb
or
and
outsb
mov
cmp
add
imul
outsl
dec
adc
dec
mov
inc
ljmp
mov
adc
nop
inc
add
add
adcl
push
dec
inc
pushl
adc
add
nop
push
add
add
push
subl
add
mov
inc
xor
add
adc
add
and
add
nop
push
adc
push
cwtl
lods
add
adc
add
mov
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
sub
xchg
push
repnz
notb
fisttpll
push
dec
shll
mov
clc
xor
xlat
xor
and
inc
shll
jle
xor
aaa
pop
cwtl
xorl
sarl
push
popl
sub
xor
ss
push
pusha
jb
xor
shll
mov
ss
rcr
ljmp
shll
bound
dec
shll
xchg
movsb
mov
pop
ss
rcr
in
decb
xchg
sbb
imul
imul
cmpsb
imul
adc
xor
shll
inc
push
dec
shll
rcl
dec
shll
lock
push
xchg
and
cmpsb
imul
imul
imul
dec
shll
cmp
xor
shll
xchg
mov
lods
mov
xor
out
add
shll
data16
shll
mov
xor
ljmp
cmpsb
imul
imul
imul
lcall
inc
push
cmpsb
imul
insl
lcall
xchg
cwtl
imul
imul
imul
mov
push
cltd
and
inc
shll
jp
outsb
shll
enter
cmpsb
imul
dec
shll
pop
push
dec
shll
lret
popf
jmp
fwait
add
shll
insb
js
shll
mov
ss
shll
fsub
testb
imul
imul
imul
cmpsb
xor
popf
add
cmp
cmpsb
imul
imul
insb
lcall
cmp
dec
shll
pop
insb
jle
jmp
mov
rcrb
cltd
cmpsb
sahf
lahf
add
xor
shll
pop
push
dec
rcrl
fnstenvs
mov
lcall
imul
imul
shll
dec
pop
xor
shll
jb
nop
mov
mov
call
gs
push
xor
lcall
nop
pushf
test
lcall
lock
cmp
xor
push
pop
push
dec
shll
mov
into
loopne
xchg
dec
shr
adc
cmpsb
inc
dec
pop
jo
lcall
loop
int
imul
xor
xor
roll
pop
insb
jle
shll
int3
ficomps
testb
push
and
cmpsb
imul
imul
imul
dec
shrl
and
push
shll
mov
cmpsb
mov
xor
jmp
test
and
shll
data16
shll
fcomps
lock
cmpsb
imul
cmpsb
imul
dec
rol
test
stos
lcall
inc
push
imul
imul
xor
add
dec
xor
shll
insb
js
xchg
shll
int3
fcomps
lock
or
shll
ds
bound
xor
roll
fnstenvs
lods
adc
xor
pop
fs
lcall
mov
lret
cli
push
scas
lret
lcall
inc
push
imul
scas
cmpsb
imul
xor
push
scas
sbb
inc
push
xor
shll
push
xor
rcrl
dec
addr16
iret
mov
and
xor
shll
push
pop
push
shll
mov
shll
push
mov
cmpsb
imul
cmpsb
imul
lcall
dec
shrl
testb
adc
cmp
shll
bound
shll
aam
dec
addr16
iret
mov
xor
xor
shll
push
mov
mov
sarl
ret
add
cmp
xor
shll
data16
xchg
shll
fsub
cmpsb
imul
cmpsb
imul
cmpsb
imul
loopne
adc
sbb
cmp
fs
shll
mov
sarl
cmpsb
imul
cmpsb
imul
cmpsb
imul
mov
dec
lcall
xchg
imul
mov
dec
shll
jl
xor
shll
lods
mov
or
out
faddl
adc
shll
pop
insb
dec
shll
mov
ss
shll
fsubrp
testb
imul
imul
imul
dec
shrl
and
cmp
xor
rcrl
jbe
lcall
shl
hlt
lcall
and
inc
imul
imul
sub
lock
xor
shll
push
pop
push
roll
fnstenvs
mov
lcall
imul
sbb
out
mov
imul
imul
cmpsb
imul
shll
and
inc
dec
shll
xchg
sahf
mov
aam
imul
cmpsb
imul
imul
mov
out
add
lret
add
sub
inc
dec
pusha
insb
lcall
test
int3
xor
cmpsb
imul
les
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
add
xor
lcall
jl
mov
lods
mov
cmpsb
jmp
movb
and
cmpsb
imul
cmpsb
imul
fsubrp
cld
imul
cmpsb
imul
imul
cmpsb
imul
enter
lcall
lcall
lcall
mov
leave
shll
inc
push
dec
shll
mov
xor
int3
fsubr
imulb
data16
lret
cmp
imul
insb
lcall
lret
xor
lret
add
cmp
lcall
lcall
shl
out
dec
shrl
cli
push
int3
sbb
inc
xor
shll
data16
pushf
shll
fsubr
cmpsb
imul
cmpsb
imul
cmpsb
imul
dec
ret
into
add
lcall
pop
push
imul
imul
shll
dec
push
xor
shll
insb
js
xchg
shll
int3
fsubs
testb
adc
lcall
bound
lcall
into
into
xor
cmpsb
loopne
rcl
rcl
add
cmp
jbe
lcall
lret
lcall
lcall
dec
push
imul
test
imul
xor
or
sbb
dec
pop
xor
shll
je
xchg
movsb
shll
loopne
cmpsb
imul
cmpsb
imul
cmpsb
imul
cli
or
push
sub
push
data16
pushf
mov
rcl
aad
aad
je
imul
dec
shll
orb
mov
aam
xchg
dec
shl
repnz
push
and
inc
dec
pop
push
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
lock
push
sbb
dec
pop
outsb
jp
xor
shll
movsb
mov
aam
cmpsb
arpl
out
fstps
fcmovbe
xor
roll
and
cmp
dec
shll
xchg
cmpsb
xor
shll
loop
shll
add
cmp
shll
mov
ror
in
lcall
and
imul
imul
cmpsb
imul
fst
xor
mov
cmp
je
or
pop
mov
scas
shlb
dec
shl
repnz
ds
test
imul
sub
xor
sarl
dec
jb
test
out
dec
into
hlt
push
loopne
add
ss
shll
pop
push
mov
enter
adc
add
xor
inc
push
data16
xor
shl
das
cmpsb
imul
sbb
xor
dec
data16
scas
mov
xor
cmpsb
clc
or
adc
inc
dec
shll
lcall
fsub
in
incb
add
fstl
in
fwait
and
push
inc
mov
pusha
inc
xchg
test
mov
inc
add
repnz
insb
push
add
jg
in
xchg
push
cmpsb
sbb
xchg
adc
loopne
sbb
call
scas
fnstsw
push
ret
sbb
inc
outsl
rolb
pop
insb
xor
fucom
jmp
push
insl
movsb
dec
loop
pop
leave
gs
mov
leave
add
push
dec
xchg
pusha
xlat
dec
push
stc
jg
cmpsb
jno
cli
sub
add
push
sub
repz
mov
xor
ret
push
and
ljmp
loope
cmp
fucomp
jo
pushf
outsb
cmc
sbb
pop
fldl
push
fstpl
jae
sbb
and
movsb
jmp
ret
push
mov
imul
jle
mov
push
jl
aas
in
cmp
jg
out
sahf
add
addr16
xadd
incl
xchg
loop
pushf
jge
xor
testb
jp
icebp
xor
mov
jnp
mov
lock
mov
std
test
jb
arpl
call
mov
frstor
push
decl
push
jge
test
fistl
add
xchg
mov
lret
imul
inc
aad
or
sbb
pop
je
xchg
push
push
or
iret
push
lret
jle
xchg
out
or
flds
mov
ljmp
std
inc
jae
lods
pop
push
sti
popa
js
les
mov
nop
ja
sar
xor
mov
push
xchg
jmp
cmp
add
jmp
addl
jmp
test
sbb
loope
jle
stos
pop
repnz
test
mov
pop
lcall
bswap
int3
xor
ds
leave
sbb
jge
push
adc
call
enter
jno
xchg
jle
adc
ds
lea
add
inc
jg
xchg
ds
movsb
aas
call
sbb
lock
nop
int
pop
and
shlb
push
jne
push
lcall
lcall
adc
popa
bound
sbb
cmc
cltd
rolb
or
add
jge
notl
mov
test
xor
push
or
mov
shrl
xchg
pop
add
sub
sar
lcall
xchg
hlt
lcall
cmp
sahf
adc
jne
fwait
jnp
clc
and
std
inc
jp
inc
or
xchg
mov
xchg
dec
jbe
sub
out
mov
push
daa
test
mov
enter
jo
aas
sub
lcall
xlat
xchg
inc
push
ljmp
frstor
sbb
movsl
add
test
and
scas
xchg
dec
andl
jg
mov
inc
lret
add
sub
popa
jnp
mov
cmp
sub
jnp
call
cmp
sub
dec
mov
sti
movsb
cld
pop
scas
dec
mov
je
mov
jge
decl
cs
xchg
mov
lods
push
sub
cltd
mov
pop
sub
mov
push
xor
inc
lods
rcrb
xor
fisttps
cld
cmpsl
movsb
lahf
popa
xor
out
adc
push
in
cli
mov
adc
pop
adc
scas
xlat
shlb
nop
xchg
adc
icebp
push
sub
ljmp
bound
mov
ret
mov
mov
jb
cmp
mov
mov
jb
cmp
mov
mov
push
xor
mov
addr16
jnp
pop
mov
xor
mov
mov
and
lcall
gs
ret
bound
mov
ret
gs
xor
and
dec
ss
std
dec
mov
ds
in
test
cmp
stc
les
jl
and
cmpl
mov
mov
mov
xor
lods
inc
xchg
cmp
jg
stc
rorb
inc
ret
lods
mov
es
cmpsl
mov
sub
mov
mov
incl
imul
leave
dec
adc
ficoms
adc
lods
mov
pushl
or
jecxz
fstpt
push
pop
ss
xchg
shr
add
push
daa
in
into
dec
inc
sub
inc
ljmp
push
jmp
mov
dec
dec
push
fadd
and
push
mov
push
pusha
push
sub
jmp
aad
je
neg
lds
dec
push
outsl
xchg
loop
es
sbb
pop
icebp
leave
push
shrl
in
loopne
mov
pmovmskb
clc
xchg
gs
fsts
loop
jns
push
jg
fsubrs
ljmp
jmp
push
dec
lcall
mov
jnp
pusha
lcall
pop
mov
jmp
jbe
int3
jle
adc
adc
fcoml
arpl
mov
lea
pop
movsb
push
push
call
lea
imul
les
ds
orps
or
imul
mov
jmp
jo
subl
gs
adc
mov
xchg
arpl
shlb
xchg
subb
jmp
hlt
lock
in
and
loope
loop
push
ret
mov
loopne
jmp
clc
out
adc
js
mov
sub
xchg
add
xchg
xchg
out
inc
lcall
arpl
lods
out
mov
and
clc
sub
movsb
in
push
cmp
add
jg
dec
insb
mov
gs
test
mov
imul
daa
xchg
jnp
out
jg
sti
mov
xchg
xchg
sbb
adc
pushf
js
sbb
scas
or
stc
push
test
inc
je
cmp
mov
lret
mov
fistpll
pop
arpl
mov
cmp
hlt
jmp
ljmp
mov
lds
push
jae
lcall
dec
sbb
cwtl
sti
sub
cli
js
inc
jnp
mov
andb
decl
cld
lret
test
dec
jnp
loopne
mov
in
cmc
nopl
sti
lcall
add
sub
add
sahf
xchg
subl
pushf
test
mov
scas
jns
mov
lds
mov
pop
add
out
mov
adc
ljmp
lea
cmp
sub
or
fs
std
or
and
incl
mov
sbb
out
xchg
xor
iret
mov
mov
ljmp
popf
xchg
inc
flds
dec
hlt
out
push
add
sti
pop
je
jge
sub
incl
mov
test
or
out
adc
test
iret
inc
cmp
incl
or
mov
push
imul
call
push
daa
fiadds
clc
sbb
adc
bound
xchg
dec
in
xchg
jb
call
inc
and
adc
jb
mov
cmp
mov
xchg
mov
lcall
jp
insl
nop
xor
push
adcl
sub
lods
mov
cmp
jne
adc
sahf
int3
ficoml
es
decl
xchg
pushl
popf
mov
sbb
push
cs
and
lds
test
fsubrl
pusha
out
pop
sbb
rcrl
jb
addr16
jge
sar
jnp
xchg
mov
pop
int
dec
movsb
in
incl
loopne
test
mov
imulb
nop
xor
mov
inc
xchg
inc
repnz
movsb
or
and
jae
xor
push
test
dec
sarl
sub
cmpl
and
push
xor
fbld
enter
decl
insl
sub
inc
movsl
jb
jp
add
cmp
and
popf
ljmp
int3
cmpsb
and
sub
xchg
sub
idivl
ss
sarb
cmp
push
push
mov
push
js
mov
push
mov
stc
lcall
sbb
jecxz
mov
stc
fwait
test
stc
sbb
mov
outsl
xor
cmp
inc
mov
pushf
mov
sbb
pop
sub
cmp
fstpt
cmp
sbb
stos
repnz
sbb
inc
jl
sbb
cmp
imul
cmp
sub
xor
sub
xchg
fisttpll
mov
and
fisubs
push
lahf
aaa
mov
fildll
das
mov
rcll
aad
leave
ljmp
or
mov
mov
push
adc
inc
not
mov
inc
das
push
cmp
push
mov
inc
into
rcrl
mov
xor
inc
and
mov
mov
adcl
dec
dec
jb
stos
xor
aad
push
imul
mov
clc
je
inc
sub
mov
lds
mov
in
std
inc
incl
xlat
movsb
inc
mov
int
inc
push
mov
jbe
rorb
out
ljmp
fidivs
push
dec
ja
dec
mov
arpl
inc
call
js
and
clc
mov
dec
call
dec
shll
push
inc
jae
clc
pushl
dec
arpl
lods
push
ja
ret
push
inc
cmc
pushl
ficoms
sbb
shl
sub
sub
in
or
push
int3
and
jmp
jg
xchg
insb
lret
dec
cli
push
or
out
dec
jmp
xchg
push
push
sbb
std
cmp
incl
mov
and
pop
fistl
sbb
push
aaa
dec
pop
insb
jp
outsl
in
decl
lahf
je
adc
pusha
dec
and
pusha
sub
pusha
and
jg
mov
xor
xorb
jg
mov
imul
add
xlat
mov
xor
addl
mov
loop
pop
sbb
xchg
pop
jge
adc
fld
lods
ljmp
mov
filds
dec
sub
jmp
sub
in
inc
out
sub
es
mov
mov
decl
mov
push
into
sub
and
inc
adc
lret
push
inc
inc
ljmp
push
lods
addl
jl
enter
jb
scas
dec
not
pop
call
or
jg
jae
iret
gs
or
arpl
jno
mov
cs
incl
in
jp
popl
sub
pop
aas
mov
in
push
xor
jmp
stc
mov
xor
add
mov
sahf
ss
stc
out
jge
test
push
in
leave
cmp
mov
cmp
and
loopne
ljmp
dec
sub
imul
insb
mov
xor
fcompl
push
jbe
sbb
std
das
sbb
add
mov
dec
gs
lods
fldcw
xchg
clc
call
aas
sub
std
push
cmp
test
int
and
inc
xchg
leave
je
out
lcall
cli
mov
inc
jo
aas
add
add
mov
in
inc
dec
mov
cld
xor
pop
lea
dec
fistps
mov
xchg
test
push
jmp
mov
lahf
xor
adc
mov
cmpsl
push
decl
push
test
shlb
mov
es
popa
jo
decl
fwait
xor
mov
add
add
int
or
push
lcall
pop
dec
pop
ret
xlat
fsubs
pop
sbb
cmpb
and
leave
enter
or
jbe
ret
decl
jg
dec
pop
mov
andl
mov
pop
cmpb
jle
push
add
clc
decl
fmuls
clc
push
sbb
loope
or
icebp
add
jge
ja
test
jmp
mov
fdivl
add
cs
out
and
push
addr16
adc
ljmp
loop
or
inc
add
idiv
frstor
adc
pop
das
movsl
inc
jno
sti
push
hlt
mov
insb
psubd
and
paddb
push
decl
and
out
cmpsl
and
scas
adc
js
cwtl
mov
lods
ret
add
inc
xor
mov
pop
out
out
mov
icebp
jae
dec
mov
xor
mov
and
pop
cli
je
sub
fs
out
loope
popa
imul
lcall
jge
insl
rcrb
idivb
adc
cltd
sbb
aad
sahf
add
mov
scas
test
lcall
sub
inc
inc
add
lock
xor
fcoms
fimull
xchg
insb
and
lods
inc
mov
lcall
jg
sarl
push
cmp
jp
or
lock
mov
pusha
in
or
push
mov
popf
inc
das
and
call
fmuls
fisubs
jle
sub
jb
in
cmc
std
lahf
sahf
clc
ss
fstpt
stc
or
pop
jp
mov
adc
jb
adc
mov
push
cmpsl
sub
pushl
inc
ret
into
mov
dec
ret
adc
addl
ret
jae
fnsave
cmp
pop
lcall
xlat
jnp
das
popf
pop
inc
jge
cmp
std
mov
stos
jl
cmp
ljmp
hlt
call
xor
shlb
stos
dec
aaa
cmp
jmp
sub
and
add
xor
pushf
bound
in
fcoms
nop
imul
inc
xchg
in
adc
push
pushl
mov
repz
idivl
pop
outsb
mov
iret
leave
dec
inc
mov
loope
pusha
mov
mov
adc
jle
add
xor
xchg
pop
xorb
lcall
add
fsub
inc
lea
xchg
push
out
shrb
stos
das
icebp
aas
push
xor
call
pop
mov
dec
shlb
ds
jmp
aaa
xchg
in
cmp
and
mov
mov
inc
fs
jl
fimuls
lds
xchg
ss
pushl
lahf
and
das
rcrb
imul
fmull
xor
ret
pushl
inc
test
push
pop
inc
lret
aaa
jbe
mov
jmp
repz
ret
pushf
incl
and
mov
das
mov
pop
outsb
mov
out
iret
sub
stos
pop
xor
pop
sub
outsl
sub
pop
ret
aam
not
dec
add
loopne
fucomip
inc
mov
loop
sub
push
nop
mov
lcall
aad
sub
movsb
add
xchg
addb
bound
add
repnz
lea
inc
icebp
inc
mov
sub
xor
xchg
lds
inc
dec
dec
test
pop
imul
ljmp
bound
enter
pop
pop
pop
les
ss
insl
out
test
lcall
out
pop
outsl
adc
lods
test
test
and
stos
jmp
subb
inc
cli
decl
ds
pop
pop
jae
dec
stos
sub
dec
push
sub
pop
imul
pop
sbb
gs
xor
cmp
call
out
pop
cld
movsl
dec
lret
loope
aad
stos
push
test
pop
stos
pop
lcall
ror
or
jbe
jae
int3
inc
cld
jecxz
les
call
decl
lds
std
dec
gs
subl
push
sbb
jg
pushl
add
cmp
jp
lea
cmp
adcl
ljmp
xor
pop
mov
cmpsb
mov
mov
add
mov
inc
sahf
pusha
pop
fnstsw
ljmp
fisubl
push
cs
mov
cmp
sbb
ja
decl
mov
int
cli
or
push
cmpsb
cwtl
and
jle
repnz
jmp
test
ljmp
cmp
push
push
adc
sahf
lret
pushl
pop
data16
ds
cmpsl
mov
mov
or
je
add
dec
push
test
fidivrs
jmp
jl
pop
push
decl
push
cld
scas
lock
and
pop
push
and
pop
loopne
iret
mov
jg
push
sbb
lock
lcall
jo
lahf
cs
jge
mov
or
jp
cmp
inc
or
jg
decl
xchg
or
fsubr
int
jle
add
clc
mov
jg
push
mov
inc
xchg
mov
test
js
pop
mov
jo
sarl
or
add
outsb
hlt
jp
mov
mov
test
xlat
bound
lods
mov
pop
outsb
push
loope
lahf
cli
and
mov
sbb
or
xchg
les
leave
add
ss
mov
mov
push
mov
cmpsb
jle
ja
incl
push
rcrl
push
xchg
sub
lea
mov
movb
and
add
or
push
scas
shr
pop
mov
and
mov
in
decl
mov
add
aaa
fs
mov
aam
outsl
data16
jmp
test
aaa
mov
out
xchg
test
jo
push
fwait
addl
or
es
xchg
fiadds
xor
cmp
mov
call
sarl
xchg
inc
mov
add
ja
adcb
outsl
je
daa
sub
loopne
jmp
mov
movsb
inc
scas
inc
cld
jmp
mov
mov
cwtl
xchg
mov
sbb
icebp
fwait
aam
repnz
jns
outsl
jb
cmc
mov
call
jp
cmp
stc
adc
inc
incl
mov
fidivs
jo
mov
mov
stos
sbb
outsl
hlt
dec
test
aam
push
aas
xchg
cmpsb
je
pop
mov
mov
fwait
call
pop
xchg
outsb
fwait
sub
add
dec
inc
mov
fucomip
ljmp
jo
std
adc
aaa
xchg
xor
pop
clc
xchg
jmp
mov
hlt
dec
cmpsl
hlt
je
pop
clc
lcall
icebp
aad
gs
imul
lods
in
mov
mov
ss
test
inc
pop
inc
mov
jp
sub
pop
cld
ljmp
mov
cmp
jnp
dec
mov
andps
inc
iret
out
dec
imul
sub
adcl
outsl
or
ljmp
cmpsb
xor
fdivrl
cld
mov
stos
cmc
call
push
mov
sti
fidivs
jo
repnz
movsl
sbb
test
push
jns
inc
fimull
mov
lahf
jecxz
jg
decl
sbb
movsb
inc
adc
daa
xchg
pop
mov
mov
inc
xchg
dec
rorl
or
ficoml
pop
mov
add
mov
inc
jp
xchg
ret
adc
std
mov
dec
pop
inc
xchg
mov
inc
icebp
test
stc
sub
clc
pushl
inc
inc
mov
in
mov
push
lock
mov
fistpll
popa
lock
std
jmp
jle
ret
mov
jp,pn
mov
mov
decb
outsl
test
push
loope
pop
mov
cmc
decl
scas
lods
mov
jle
pop
sbb
rcl
into
shll
xor
jg
das
scas
pop
ljmp
inc
mov
add
mov
decl
jne
adc
sub
inc
cmc
xor
sti
push
jg
mov
cwtl
lret
inc
loop
push
fistpll
push
loope
shr
pop
fistps
mov
cld
mov
jge
aad
test
mov
rcrb
into
pushf
jmp
cs
cmp
jb
mov
push
sub
aas
rcl
xor
sarb
add
fsub
xchg
insb
add
cmc
sub
or
std
add
scas
lock
out
xchg
mov
dec
cmp
cs
lcall
pop
addr16
cmpsb
xchg
addr16
andb
jmp
lcall
jg
jmp
push
fidivrl
push
lret
xchg
jnp
inc
push
lods
add
cli
push
sbb
push
mov
cmpsl
outsb
lea
sub
add
aad
vsqrtsd
loope
ss
lret
call
out
jle
cmp
jno
cmc
mov
push
cwtl
outsb
dec
outsl
ljmp
shrl
mov
aam
push
sbb
ljmp
adc
std
scas
jne
mov
push
testb
sub
push
scas
jne
out
xchg
and
fsubrp
arpl
jae
mov
xor
mov
lcall
ljmp
arpl
out
insb
xchg
daa
in
inc
mov
pop
shll
cs
icebp
outsl
cmc
add
test
mov
add
cmp
insl
decl
lcall
and
lods
insl
or
push
loop
fistps
xor
pop
clc
call
mov
jge
cld
shl
push
xor
sub
cmp
repnz
pop
or
cmp
pop
sub
dec
aas
jmp
call
sub
pop
mov
mov
inc
dec
in
cltd
sbb
fsubrs
push
repz
or
pop
pop
xlat
js
jnp
push
cmp
into
jne
pop
jae
cli
inc
push
mov
adcb
cmp
pop
push
call
cli
push
and
incl
cmp
insb
inc
sbb
mov
loop
add
cmp
mov
dec
movhps
imul
mov
jb
cli
pop
mov
pop
ljmp
das
bound
adc
add
int
sub
call
or
std
call
test
push
jge
fwait
loope
add
out
jle
inc
push
ds
decb
adc
and
xchg
test
fnstsw
mov
jnp
mov
dec
divb
and
pop
enter
jb
mov
sarb
xchg
pusha
xorl
push
ljmp
cld
je
icebp
loope
xchg
fstpt
sbb
and
xchg
add
push
out
pop
xorb
cmc
inc
loope
mov
test
loope
dec
lods
pop
cmpsb
sub
dec
xor
call
sbb
lea
mov
pop
cltd
lods
mov
cwtl
inc
jo
pushl
mov
xchg
test
loop
cmp
iret
inc
or
arpl
dec
ss
dec
lea
cmp
mov
decl
sahf
jnp
add
mov
movb
push
push
add
out
leave
in
dec
sub
js
popa
jns
push
sub
outsb
rolb
adc
ret
mov
xchg
or
loope
gs
lcall
mov
pop
les
jge
pop
and
pop
popa
push
or
sbb
mov
lea
aad
in
out
mov
dec
bound
jg
outsl
jnp
xor
insb
hlt
fwait
jno
rorb
pop
aaa
insl
das
cltd
hlt
shl
xlat
ljmp
mov
lock
inc
mov
imul
sbb
xchg
int
sub
rcrl
mov
jmp
jp
js
adc
mov
sbb
outsl
pop
push
jae
xchg
call
cli
ljmp
jo
adc
mov
shrb
sbb
push
dec
cmp
ljmp
add
daa
inc
inc
loope
xor
push
je
lock
or
test
into
sahf
movq
outsl
jp
arpl
cmp
xor
pop
cli
ljmp
rclb
mov
jmp
andl
addr16
lcall
std
xor
mov
out
enter
es
nop
jp
inc
push
jg
cs
xchg
sbb
sbb
fisubrs
dec
and
rolb
lods
call
std
subl
es
clc
push
lcall
ja
cs
scas
mov
pop
xor
sbb
sub
jb
mov
leave
lret
sub
or
decl
push
dec
fsts
mov
pushl
clc
jg
cmp
xchg
in
lret
sahf
push
loopne
cmpsb
push
fcmovbe
jnp
adc
cli
inc
scas
xor
jmp
jb
cmpsl
push
ror
sbb
mov
fistpll
dec
popf
pop
cs
add
cmc
testl
arpl
mov
test
dec
or
fs
enter
decl
fstl
orb
ljmp
popa
add
sub
cli
jbe
repnz
movsb
cmp
sbbl
sti
xchg
inc
xor
test
and
inc
xchg
test
sbb
jg
clc
xor
push
pop
fistpll
ret
xorl
in
jg
inc
push
add
mov
sub
gs
pusha
clc
sub
mov
or
mov
cld
decl
xchg
push
cmp
fstpl
mov
adcl
jg
xor
inc
mov
enter
or
cmp
cmp
push
and
adc
call
or
or
gs
movsl
xchg
push
or
push
iret
sbb
mov
push
aad
jns
shl
sbb
push
notl
mov
js
add
decl
xor
andb
rolb
loope
orl
cmp
pop
les
int3
js
inc
test
push
add
in
outsl
loopne
stc
xchg
fdivrp
outsl
jne
cmp
jp
pop
lahf
in
cmp
inc
imul
loop
sbb
sub
stos
pop
pop
add
xchg
pop
mov
inc
les
lret
add
mov
mov
ret
and
imul
jnp
adc
sub
call
ss
sub
jnp
mov
mov
inc
mov
xor
rcl
ljmp
sti
pushf
pop
mov
sbb
fisubs
sub
mov
popf
pop
add
out
rorb
and
or
mov
out
jp
push
roll
call
sbb
jae
cli
iret
aaa
pusha
in
jge
mov
mov
imull
in
mov
adc
stos
push
xlat
pop
mov
movsl
insb
cli
pop
ret
xchg
or
push
outsl
hlt
incl
xchg
pop
or
dec
or
inc
dec
add
mov
scas
pop
imul
bound
pop
das
sti
pop
fisubrl
pop
ljmp
or
mov
jmp
inc
adc
adc
lea
inc
inc
cmp
call
mov
or
jne
push
jns
std
pop
mov
push
lcall
inc
jge
lods
repz
mov
icebp
sahf
insl
inc
pop
pusha
xor
std
fdivr
js
movsl
push
xchg
icebp
xor
daa
and
ljmp
std
cmp
neg
repz
mov
aaa
sbb
ret
imul
hlt
jg
xchg
adc
xchg
clc
jnp
sub
dec
sub
out
jae
push
sub
ja
pusha
or
and
fxch
mov
ja
fcos
jg
pushl
rcrl
pop
ljmp
cmpsl
adc
xchg
ja
negl
jmp
mov
cmp
mov
adc
mov
fstpl
push
lcall
cmp
hlt
fimull
add
mov
in
test
or
fistps
adc
sub
js
pop
mov
or
cwtl
or
xchg
pcmpgtb
dec
xorl
or
pop
add
sub
jg
lods
mov
aas
enter
pop
jbe
mov
inc
xchg
jnp
sahf
inc
incl
insb
lea
add
add
xchg
sub
fucomip
incl
jge
xchg
test
sub
inc
mov
insb
inc
int
and
adc
aam
test
fcmovnb
mov
xor
mov
pop
pop
call
movsb
xchg
adc
lcall
xchg
jno
mov
dec
push
inc
push
out
mov
loopne
push
mov
cmp
mov
movsl
inc
stc
or
int3
lods
fsincos
or
vdivsd
out
nop
lcall
lret
icebp
in
mov
sbb
rorl
sub
movsl
or
incl
test
sbbb
push
push
dec
stos
xlat
mov
mov
sbb
pop
loope
sub
dec
out
sbb
pop
add
decl
incl
lcall
popa
ljmp
shlb
jg
lock
mov
mov
imul
addl
mov
pop
test
xchg
ljmp
jbe
adc
inc
inc
clc
imul
adc
sub
insl
adc
xor
jg
push
out
add
adc
stos
or
rclb
ljmp
jnp
inc
pop
sbb
mov
cld
bswap
fwait
cmp
roll
mov
jp
in
pshufw
ljmp
jmp
mov
dec
xlat
pop
pop
ret
inc
and
stc
je
adcb
cld
add
adc
jo
pushl
sbb
jne
shr
xchg
push
rcl
add
xor
inc
mov
fisttps
mov
inc
pop
loop
or
stos
xchg
xor
push
mov
push
shl
dec
jo
movsl
lcall
sarl
icebp
pop
addb
xchg
ss
sbb
add
add
pop
ljmp
xchg
and
hlt
in
icebp
adcb
ljmp
sbb
rcll
dec
lods
inc
mov
fwait
rcrl
in
push
outsb
lcall
addl
sbb
mov
out
push
mov
or
pop
and
ret
aas
adc
pushf
pop
clc
pop
loop
sbb
out
movsb
add
xchg
std
sbbl
nop
mov
pop
fprem
mov
ja
imul
inc
xchg
enter
test
incl
sub
and
add
xor
repnz
push
add
cmp
leave
jp
cli
mov
xchg
xchg
adc
jns
mov
xchg
mov
je
or
in
decl
pop
xsaveopt
push
mov
push
jns
pop
mov
decl
jo
adc
cli
movsb
jne
in
mov
scas
fdivl
rcrl
inc
and
or
pushl
popa
loope
pushf
test
xchg
out
je
sbb
sarb
push
adc
lcall
push
add
push
sbb
loop
in
es
sub
in
mov
or
adc
incl
lock
jns
inc
cmp
lret
xor
stos
int
sub
pop
lods
in
mov
sar
pop
call
push
call
clc
or
xor
test
inc
mov
push
rorb
ja
daa
and
sbb
outsl
std
decl
hlt
adc
icebp
icebp
or
dec
enter
mov
sbb
int3
sbb
cltd
mov
jmp
jae
push
xor
jmp
out
divl
pop
jnp
pop
gs
cli
incb
cmp
lahf
pop
inc
sub
rcrl
aad
sbb
sar
jg
mov
clc
pop
mov
mov
pop
aad
leave
sub
ja
jg
incl
cmp
adc
mov
mov
push
decl
inc
insb
jns
push
mov
push
fldenv
dec
mov
xchg
inc
incl
xor
cmpsb
lcall
lret
addr16
jno
mov
jmp
in
fdivrp
decl
push
ret
sbb
je
lret
mov
fs
loop
cld
decl
pop
jnp
pop
jg
mov
int
das
pushf
mov
sbb
imull
addr16
jg
fwait
in
notb
dec
in
mov
cld
push
and
pcmpgtd
std
xchg
call
add
in
out
aas
mov
push
inc
aad
lods
mov
jle
jmp
push
lret
xor
jge,pn
jp
xor
and
clc
decl
lds
mov
aad
jno
or
addr16
mov
pop
cld
aaa
and
jae
dec
inc
sub
iret
jp
ja
jg
cmc
jb
test
mov
mov
test
sub
pop
cld
incl
repz
ret
cmp
mov
pop
inc
pop
inc
cmp
fcompl
rcll
psubd
mov
insl
stos
push
mov
or
jl,pt
call
fcomps
fbstp
add
add
call
shll
pop
sub
mov
mov
cmp
mov
cli
stc
addr16
fsub
sbb
cltd
cmovae
pop
jg
jmp
shll
sub
arpl
push
jg
jmp
out
cld
ss
cmp
sahf
dec
addr16
fsubs
sbb
xor
cmp
pop
loopne
mov
lcall
roll
inc
inc
jecxz
jne
ret
pushf
jno
orl
jmp
add
sbb
xchg
and
addr16
jb
adc
xor
xchg
fstl
inc
xor
dec
and
ds
stos
push
add
mov
fimuls
stos
xlat
push
lcall
addr16
and
popa
test
inc
sub
push
ljmp
aad
pop
xchg
in
pop
fsubs
jo
pop
sub
icebp
inc
dec
cmp
fldenv
jg
jmp
push
sbb
sub
loopew
add
int
popf
inc
aaa
fucomip
jg
or
mov
bound
ret
loopne
add
icebp
push
movsl
cld
aas
jg
push
mov
push
sahf
sbb
lret
aas
jmp
inc
jne
sahf
cli
or
pop
lret
pushf
in
aam
ret
inc
or
add
cmpsb
pusha
jno
pop
and
mov
and
call
cli
call
xchg
mov
jecxz
movsl
leave
test
lea
cli
lcall
cmp
jle
clc
push
xchg
xchg
hlt
lock
std
cmp
push
xor
pushl
sbb
fimuls
cld
mov
mov
je
ja
or
scas
push
hlt
mov
add
adc
dec
scas
aaa
lock
add
and
std
pushl
adc
and
and
dec
dec
iret
or
imul
adc
adcb
lods
aad
movsb
test
roll
xchg
cwtl
mov
inc
push
sbb
pop
loop
das
icebp
loope
mov
imul
pop
sbb
mov
insb
fdivr
mov
call
or
mov
jmp
je
cmp
jp
cmp
hlt
xor
mov
jb
mov
in
cwtl
mov
push
lret
std
ljmp
sbb
inc
das
scas
mov
sarb
mov
pushl
xor
out
mov
mov
cmp
outsl
loop
xchg
int3
mov
sub
out
and
push
pop
mov
loope
jnp
ljmp
dec
mov
cld
lcall
xchg
push
cmp
int3
clc
loop
stos
sub
and
fnsave
cmpsl
aas
sbb
jmp
cmp
out
cltd
xchg
jnp
sbb
bound
mov
iret
ss
shlb
clc
jno
div
xor
xchg
insl
out
rcr
push
in
inc
add
enter
jle
mov
or
and
jbe
xchg
sbb
add
lcall
pop
xchg
lds
lods
into
js
repnz
cmp
das
orl
loopne
test
mov
jge
filds
icebp
mov
xchg
clc
lcall
dec
aad
int3
xor
dec
jmp
ja
xchg
push
stos
repnz
mov
imul
aad
pop
negl
add
faddl
call
imul
pop
xchg
js
push
cli
gs
stc
sub
fs
lea
inc
push
inc
sbb
pop
out
cs
mov
clc
or
sub
dec
adc
sbb
mov
xor
and
pop
jns
out
daa
test
jmp
ljmp
scas
scas
dec
adc
and
jle
sub
bound
pop
mov
mov
cmp
fiadds
les
xor
pop
pop
cmp
insb
test
orb
or
ljmp
insl
andl
mov
mov
push
and
aas
pop
adc
incl
call
mov
insl
mov
push
addr16
loopne
fiaddl
pop
loopne
call
sub
add
rolb
in
inc
imul
adc
push
adc
or
decb
incl
dec
outsl
test
pop
adc
xchg
xor
push
xchg
decl
mov
adc
inc
sbb
dec
loop
out
sub
mov
lds
cmp
incl
and
and
popf
xchg
das
mov
jns
es
ljmp
xor
cmpsb
or
movsl
fsubl
test
in
mov
ficoms
hlt
lcall
shlb
stos
and
pop
sub
call
je
or
call
sub
mov
mov
stos
jne
cld
inc
pop
push
test
aam
sbb
push
sbb
xchg
cltd
scas
bound
jg
cmp
or
xor
test
xchg
xor
mov
flds
incl
ljmp
pop
cli
insl
xor
mov
pop
inc
aad
xchg
imul
jp
ljmp
mov
pop
xchg
cld
xchg
loopne
in
je
incl
in
pop
xchg
sar
lcall
mov
mov
sub
dec
xchg
and
mov
icebp
lea
enter
call
pop
pop
sub
int
jle
in
xchg
xor
or
xor
push
hlt
or
decl
loop
ss
cli
xchg
lahf
and
lods
pop
cmp
stos
sarl
dec
mov
es
cld
pushl
lods
sub
loopne
outsb
mov
std
mov
cmp
repnz
inc
jmp
push
or
adc
mov
xor
push
sub
lods
mov
js
iret
fdivrs
cmpsb
fs
std
jp
hlt
call
dec
outsb
jno
dec
mov
ljmp
push
out
das
mov
fidivrs
xor
fucom
das
sti
sbb
push
adc
incl
aam
jo
test
cmpsb
sub
movsl
dec
std
jg
xchg
cltd
outsl
or
div
push
dec
adc
mull
gs
decl
fstpt
aam
mov
popf
xchg
into
movsb
fld
xor
push
push
insl
mov
aam
lret
popa
aad
ljmp
dec
shr
test
jb
aas
jo
pop
mov
cli
or
mov
cli
out
loop
or
call
addr16
cmp
stos
cmp
ja
mov
xor
aam
add
pop
push
jg
push
mov
imul
cmp
je
sbb
or
mov
sub
mov
mov
sti
push
mov
test
sbb
incl
or
xchg
add
ljmp
push
and
cld
jmp
shlb
dec
mov
pop
pusha
inc
jb
add
repnz
idiv
cmc
pop
insb
repnz
push
jg
bound
push
xchg
loopne
push
sahf
fisubl
clc
shr
jecxz
mov
dec
jnp
mov
pop
pop
not
or
movsb
inc
xlat
incl
and
xchg
fisttpl
es
outsb
ds
repz
mov
jmp
jmp
pop
les
jnp
dec
sar
adc
icebp
test
aam
mov
xchg
daa
jg
in
cmc
outsl
decl
cmp
sub
inc
les
scas
daa
cmpsl
aam
mov
shl
dec
aam
cmp
and
inc
jecxz
rcll
mov
mov
mov
orb
ljmp
loop
test
loop
xchg
sbb
pop
fistpll
insb
adc
adc
inc
stos
pop
test
jb
outsl
mov
xor
adc
lcall
pop
fs
and
incl
mov
cmpsb
push
and
xchg
sbb
lods
test
cmp
std
call
mov
xchg
push
push
pop
xor
push
and
push
or
xchg
inc
sar
add
in
leave
dec
call
incl
or
adc
push
pop
psrlw
hlt
lret
ss
decl
lcall
int3
and
lret
mov
push
xchg
sti
rclb
icebp
test
das
das
cld
decl
push
cmpsb
mov
inc
mov
mov
or
out
ljmp
jmp
sahf
add
xchg
push
pusha
mov
hlt
mov
sbb
sub
push
lahf
push
stc
cli
pop
clc
daa
imul
xor
test
repnz
cmp
aaa
push
addr16
std
add
jno
nop
int
xchg
xlat
ss
xchg
pushl
in
iret
ret
add
lret
dec
lods
inc
sub
call
addr16
pop
jne
loope
sbb
adc
xchg
ds
aad
inc
lods
leave
lret
xchg
shl
jge
mov
imul
lcall
sbb
mov
push
movsb
adc
xchg
nop
adc
sbb
js
ljmp
lock
xor
movsb
push
and
and
inc
dec
scas
push
popf
inc
sub
inc
outsl
cmc
in
sahf
mov
mov
aad
or
lods
mov
cld
inc
int3
inc
adc
js
xchg
xor
inc
popa
addl
cmp
push
je
lcall
pushl
clc
or
mov
cmpsl
push
out
jb
outsl
filds
cmc
call
push
js
hlt
xchg
or
cmp
aas
outsl
mov
incl
cmp
movsb
adc
mov
and
loope
xlat
loope,pn
dec
pop
loopne
call
push
out
arpl
sub
xor
filds
addl
mov
cmpsl
xchg
repnz
arpl
call
inc
std
push
ss
jb
cmc
xchg
lahf
stos
pop
lods
mov
add
fldenv
in
mov
arpl
inc
dec
fisubs
cld
jg
pop
adc
dec
int
pop
dec
fwait
add
leave
ljmp
clc
mov
sbb
iret
push
mov
lcall
fcomps
xchg
or
rorb
push
sub
push
in
pop
or
jb
mov
or
mov
or
xchg
rorb
xor
lcall
das
cld
or
cmpl
in
pop
repnz
leave
loopne
or
ds
jmp
xor
lds
int
ja
add
repz
mov
cmp
pusha
add
jg
lret
mov
outsl
mov
or
test
mov
lods
js
ljmp
ficompl
or
or
das
mov
jge
mov
lcall
adc
jae
xchg
xor
sbb
sub
mov
out
push
dec
call
clc
mov
dec
jle
gs
bound
loope
pop
dec
mov
pop
sbb
mov
outsw
cmpsb
dec
mov
lahf
ficoms
mov
and
in
out
pop
mov
inc
pop
jle
jnp
pop
and
or
pop
mov
cmp
incl
pop
xor
rorb
out
insb
cmc
aas
sub
adc
fucomip
push
jg
mov
inc
icebp
jb
cs
ret
push
fucomip
inc
or
xor
dec
mov
outsb
lret
push
test
adc
dec
fs
inc
fwait
xchg
nop
movsl
push
inc
or
xor
outsl
cld
mov
ljmp
hlt
mov
inc
jp
imul
and
mov
jne
aas
xchg
lea
movsw
or
call
aas
add
adc
gs
jge
dec
mov
jg
ds
repz
aas
mov
mov
mov
std
ret
fidivs
cmp
push
push
jne
sahf
int
xlat
cmpsb
xor
adc
into
jae
and
dec
call
insl
cmp
dec
sti
ss
xchg
les
roll
ja
fists
xchg
xchg
mov
pop
mov
ret
inc
loope
add
fnstcw
ljmp
movsb
cld
or
mov
repnz
pop
and
aad
mov
add
mov
int
mov
jmp
test
lock
sub
jae
incl
pushl
push
jbe
sbb
mov
or
push
pop
hlt
cld
lods
cmp
repz
ljmp
cmc
ret
push
inc
cmp
and
cmp
jnp
orl
jmp
rolb
xor
cmpsb
leave
addr16
sbb
sbb
push
or
cmp
mov
ja
int
stos
jbe
jbe
scas
adc
popf
jecxz
or
inc
jmp
cmovp
fucomip
in
lods
test
sub
cmpsb
dec
loopne
cwtl
adc
mov
outsl
lods
xor
sub
les
sub
gs
lcall
pop
dec
lock
iret
mov
xchg
add
cmpb
shlb
mov
xchg
mov
das
push
in
test
xchg
dec
cmp
push
ret
callw
jg
mov
pop
jmp
call
inc
dec
les
sbb
decl
in
test
lea
push
mov
ret
mov
fbld
ljmp
std
push
pop
jae
mov
jae
dec
and
xor
mov
sti
cli
mov
sbb
sub
decl
push
cmpsl
and
xlat
aas
pop
jmp
xchg
push
sub
test
xchg
into
inc
xor
or
mov
pushf
fisttpll
mov
jnp
test
fcomps
decl
pop
jg
mov
lret
sbb
dec
in
mov
add
test
dec
aas
mov
aas
cld
mov
test
pop
bound
jecxz
mov
mov
loopne
lods
jge
sbbl
and
ljmp
mov
xchg
sbb
dec
test
std
sbb
mov
shrb
sub
pop
cmp
mov
scas
fs
popa
lock
jg
lcall
jo
into
xchg
inc
adc
add
jns
mov
das
std
jns
int
mov
cs
mov
jmp
fldcw
pop
mov
into
cmpsl
pop
int3
je
mov
mov
stc
ds
testb
push
lcall
cmp
stc
add
loopne
sbb
es
sbb
mov
incl
mov
lods
mov
loop
or
insl
inc
inc
mov
sbbb
mov
shr
pop
or
in
pop
mov
sub
mov
add
jge
loop
sbb
ljmp
mov
mov
mov
sbb
cmp
fbld
das
ljmp
jmp
adc
cli
dec
push
test
mov
ficomps
push
cmp
inc
imul
lcall
aad
dec
jg
rorb
mov
test
pushl
leave
add
in
xor
incb
sub
cwtl
sub
jmp
mov
push
mov
mov
arpl
dec
inc
cmp
fs
call
and
xchg
mov
xor
insb
inc
mov
dec
int3
jmp
fisttpl
xor
daa
stos
mov
ret
add
mov
mov
cmp
movsl
decl
repz
xor
add
jl
pop
sbb
loopne
fldenv
enter
decl
lahf
insb
sbbb
xlat
xor
sti
sub
filds
call
mov
aad
mov
mov
decl
xchg
inc
test
fstpl
push
sbb
inc
xor
negb
mov
decl
dec
test
fdivs
imul
adc
scas
es
add
push
inc
lcall
cld
aas
daa
insb
or
sbb
add
push
pop
std
inc
add
mov
repz
shrl
js
repnz
hlt
fcomip
in
outsb
cmp
mov
pop
aaa
cli
in
incl
pop
xchg
inc
outsl
xor
jb
scas
call
hlt
and
mov
dec
xor
jns
fisttpl
nop
xlat
es
test
fists
add
std
cmp
push
lcall
or
cmp
lods
pop
adc
inc
mov
mov
lahf
mov
mov
jg
and
push
repz
cs
xor
jle
aad
sar
incl
mov
cwtl
jp
mov
mov
xchg
sub
or
int
mov
push
icebp
shrl
mov
lcall
dec
and
lcall
sbb
pusha
fisubl
jg
fldt
mov
fidivs
ret
sub
fmuls
jo
and
sbb
mov
ret
jg
test
hlt
mov
inc
in
data16
jmp
cwtl
lock
aam
and
and
lcall
jnp
mov
xchg
fmull
aam
add
mov
mov
in
jo
fdivr
jmp
arpl
fwait
xorb
pop
xchg
scas
lahf
sarb
or
lcall
pop
stos
repnz
outsb
pop
icebp
insb
test
xlat
arpl
popl
stos
jg
jne
ss
shl
fcomps
sub
pop
jo
call
out
arpl
enter
mov
cmpsl
sbb
and
ds
stc
cmp
cwtl
out
jle
xchg
movsb
sub
mov
xchg
dec
js
mov
cmp
decl
inc
aas
movsl
inc
insb
in
push
inc
jg
aad
stos
test
pop
mov
sbb
fdivr
aaa
cli
inc
cs
or
pop
pop
data16
imul
and
loope
je
xor
sbb
jge
pop
or
add
xor
test
aam
jmp
sbb
ret
mov
jne
cmp
test
cmp
mov
mov
cltd
mov
ljmp
adc
sub
xchg
cmpsl
insl
jno
nop
adc
addr16
jo
sub
xchg
pop
fnsave
adcl
pushl
push
xlat
leave
test
lcall
ret
loopne
daa
ret
jecxz
test
outsb
sub
dec
loope
pop
sahf
dec
pop
adc
add
mov
lds
jmp
mulb
les
pop
add
test
clc
adc
push
sub
xor
hlt
mov
pushl
mov
lock
jp
sbb
adc
dec
push
std
imul
adc
decl
cld
inc
xor
icebp
movsb
dec
push
lahf
push
test
fisubrs
decl
adcl
mov
pop
and
cmpsb
repnz
lock
add
add
lret
sub
cli
ud0
push
aas
movsb
pop
pop
fsubl
mov
jno
das
pop
sub
inc
push
arpl
out
incl
dec
jae
and
in
movsb
fs
je
and
ljmp
jmp
jo
cmpsb
jmp
adcl
jmp
subb
loope
fs
jbe
inc
sub
push
cmpsl
push
lods
jg
lea
jae
dec
inc
jmp
loopne
lcall
cld
push
dec
call
xchg
aaa
pop
add
push
mov
idivl
mov
stc
or
xor
fldt
je
scas
dec
insb
cmp
fs
jg
pop
jp,pn
jo
cmp
imul
dec
jl
sub
call
incl
fwait
pop
je
pop
sar
daa
popf
jno
lock
in
pop
xorl
stc
push
ficoml
incl
idiv
int3
xchg
jg
jge
or
stos
xchg
inc
push
add
mov
add
add
mov
sahf
jle
jae
aas
pop
idivl
arpl
loope
idiv
jg
scas
jns
ret
mov
jge
jb
add
jo
test
sub
jle
jo
add
xor
jl
icebp
les
mov
add
and
and
movaps
std
das
jo
and
orb
or
jp
jecxz
je
das
or
hlt
mov
pushl
daa
or
mov
sub
lahf
mov
or
mov
push
call
popa
lods
fcompl
ret
xchg
test
jmp
js
jmp
jge
test
xchg
cmp
popf
mov
push
dec
sub
jle
mov
lahf
ret
sbb
pop
inc
xchg
loope
enter
fwait
cmp
pop
clc
mov
pop
nop
mov
jle
pop
negb
mov
loope
jmp
xchg
mov
inc
cltd
xchg
inc
mov
test
mov
xor
jmp
les
aam
jne
push
sub
repz
xchg
mov
sbb
test
add
ja
data16
mov
xor
mov
mov
lods
jmp
cmpsl
sub
call
cli
cmpsb
push
idivb
es
and
out
test
fadd
pop
lcall
loop
cmp
cmpsl
divl
scas
ja
stos
popa
fdivr
xor
enter
push
xchg
test
lcall
xor
sub
or
inc
sub
push
mov
lcall
and
lret
or
push
es
ljmp
scas
fxch
ja
xchg
lea
clc
mov
mov
pop
sbb
mov
lret
decl
mov
pushf
scas
xor
fdivrl
xor
aad
std
pop
jg
in
lods
movsl
test
stos
adc
icebp
cmp
jge
xchg
aaa
xor
icebp
test
jp
jecxz
or
mov
pop
and
shrl
mov
cmp
mov
pop
in
inc
mov
in
push
push
in
fdivrs
pop
mov
ljmp
in
mov
icebp
jo
push
mov
stos
cmp
xor
adc
frstor
dec
fwait
xchg
rcll
inc
cld
add
mov
incl
cmp
cmp
adc
push
mov
das
xchg
data16
xor
cmp
call
xchg
incb
mov
lret
add
jb
xchg
and
inc
mov
inc
xor
mov
out
aaa
inc
xor
imulb
xlat
or
dec
inc
jg
idiv
call
adc
stos
xchg
dec
arpl
stos
inc
leave
test
enter
inc
cmp
mov
pop
movsb
dec
dec
cltd
iret
dec
pop
ljmp
pop
mov
adc
cli
dec
into
push
sar
incl
sti
xchg
int3
loop
adc
stos
fildl
dec
add
mov
das
pop
jb
mov
mov
fcoml
xchg
out
pusha
dec
push
jmp
in
dec
push
dec
jmp
ja
std
int
pop
adcl
lcall
cs
pop
cmp
sub
and
insl
iret
movsl
push
sbb
cmp
into
call
mov
das
lock
pusha
pop
fsts
and
adc
pushl
cli
pop
sbb
add
adc
dec
bnd
xchg
repnz
das
cmc
jmp
mov
push
arpl
pop
mov
mov
xor
fcmovu
mov
pop
xchg
adc
push
cmp
pusha
not
test
insl
pop
push
jmp
or
jnp
leave
in
jl
xchg
inc
adc
int
movsl
pop
mov
sub
push
jg
test
fidivs
fbld
incl
adc
pop
mov
jae
mov
jmp
or
addr16
push
fsubr
imul
dec
jmp
sub
cld
adc
jns
xchg
sbb
sbb
imul
cmp
push
sbb
jmp
mov
ja
int
sub
push
jno
sti
loop
mov
cmp
clc
out
in
decl
jnp
mov
or
mov
clc
mov
sub
lcall
icebp
inc
dec
outsb
out
int3
shl
mov
out
pop
cmp
fucomi
push
ljmp
xor
gs
push
aam
out
pop
cld
jg
add
ja
dec
adc
or
cmpsb
mov
ljmp
in
lea
outsb
shrb
pop
scas
ja
jo
decl
les
mov
fnstcw
mov
lcall
sbb
xor
push
cmc
cs
jp
repz
add
decl
xchg
jle
aam
cli
ss
cmpsb
sbb
cmp
xchg
adc
jnp
adc
push
clc
aam
ja
movsl
dec
add
add
add
fldl
mov
cli
repnz
or
mov
mov
mov
push
ljmp
mov
mov
out
push
add
rorb
out
das
lock
inc
sub
jmp
lock
aas
rcrb
pop
or
cmp
jg
std
xchg
clc
mov
or
dec
dec
shlb
dec
movsb
or
pop
mov
or
outsb
icebp
mov
dec
xlat
mov
nop
dec
pop
dec
cmp
sti
pop
aaa
cli
jmp
adc
dec
cli
addb
sub
addl
push
je
int
mov
call
in
pop
movsl
aas
lds
movsl
push
ret
aam
test
incl
xor
popf
setae
mov
mov
add
xor
gs
dec
mov
das
lock
pop
mov
xchg
jne
fists
add
xlat
imul
push
mov
or
xor
pop
dec
xchg
or
cmp
icebp
int
clc
jae
push
stc
add
inc
aam
sti
jl
mov
sub
lcall
call
fcomp
jmp
lcall
cmpsb
push
pop
stos
cmp
mov
outsb
xchg
fcompl
pop
loopne
fisubl
and
jbe
xor
movsl
loop
jmp
cld
popf
push
lret
aad
stos
daa
frstor
lock
les
or
jg
add
pop
jle
in
out
cld
lahf
inc
xor
dec
push
lds
fcos
or
incl
xchg
addl
fnsave
imul
jmp
decl
xorb
ret
out
popa
jl
push
in
sub
scas
lods
fistps
pop
ljmp
pop
cmp
dec
cmpl
lret
sub
icebp
loope
cli
loopne
mov
mov
cmp
imul
adc
xor
sar
pushl
push
pop
inc
push
inc
insl
insl
mov
cmp
xor
bnd
mov
dec
mov
addb
adc
push
stos
repnz
sbb
scas
outsl
aam
xor
jl
mov
jle
jbe
cmc
mov
cli
test
xchg
add
xchg
mov
stos
js
insb
sbb
in
push
out
arpl
inc
mov
mov
cmc
jmp
mov
sbb
aaa
mov
xchg
mov
repnz
incl
ret
loop
adc
out
jbe
jp
out
inc
cmp
add
es
js
inc
xor
les
aas
icebp
ret
sahf
mov
xor
ljmp
xchg
sub
arpl
add
in
mov
mov
lods
lcall
ret
and
dec
cmp
cmpsl
ffreep
test
cmp
sbb
ja
lahf
pop
notl
pop
jmp
mov
xlat
add
aad
sbb
jg
jle
cwtl
jmp
cwtl
push
jnp
pop
mov
enter
inc
enter
cmp
aaa
clc
push
inc
cmp
sarb
xchg
ret
push
mov
inc
dec
jp
or
jo
popf
repz
cli
jne
fwait
jnp
or
jg
call
ljmp
inc
lds
adc
sub
outsl
jae
shl
faddl
pusha
lods
leave
rcr
pushf
dec
pop
push
push
iret
int3
mov
sbb
jns
push
mov
fmuls
push
jle
xor
adc
in
dec
xchg
push
movsl
push
push
lret
pop
lcall
int3
mov
dec
xor
das
mov
addl
cmp
pop
xlat
icebp
and
push
lcall
push
lods
nop
pusha
aam
insl
push
push
inc
data16
add
push
push
mov
into
xor
sti
push
popf
add
fs
xchg
cmp
mov
jecxz
pop
and
pop
andl
inc
push
mov
lcall
fimull
test
mov
hlt
out
aad
pop
sbb
lcall
mov
in
mov
add
inc
xchg
nop
gs
aad
fbld
jmp
push
push
cmp
or
mov
rclb
xlat
inc
ljmp
lcall
mov
jno
inc
movsb
cli
mov
outsb
imul
mov
pop
mov
repnz
call
mov
jg
ror
stc
lahf
xor
lahf
xor
pop
adc
outsl
mov
lcall
outsb
je
sahf
in
or
popa
aad
mov
popf
into
daa
push
jbe
dec
cli
cmp
stos
fcmovb
hlt
mov
call
in
leave
cwtl
insl
cmp
test
icebp
adc
ljmp
push
leave
cmp
icebp
cli
je
mov
mov
out
xchg
shl
pop
call
jae
mov
xor
adc
dec
jne
pop
push
mov
add
incl
stc
jnp
fs
ljmp
aad
pop
mov
adc
cld
mov
mov
call
cltd
xchg
jbe
jge
jg
cli
fnstenv
cli
outsl
pop
out
jle
adc
sti
add
stc
xor
mov
pop
movsb
stc
adc
addr16
lds
repz
jle
idivl
ljmp
mov
jne
xchg
xlat
cld
out
cltd
ja
jnp
stc
loop,pn
outsl
icebp
mov
test
test
andb
ja
iret
sub
fistps
lret
arpl
mov
cltd
or
pop
insb
jl
lcall
cmc
jmp
xorb
push
fcmovnbe
stos
rcrl
mov
or
ljmp
int
inc
pop
push
mov
cld
addr16
add
lea
sbb
and
outsl
jmp
daa
fiadds
cmp
scas
mov
cmpsl
sahf
lds
mov
outsl
insb
jl
xchg
mov
mov
jo
das
xor
adc
jne
lret
push
js
mov
mov
ret
nop
xchg
movsb
push
xchg
and
cld
incl
test
movsl
pusha
mov
xor
rol
inc
lcall
pop
decl
dec
aam
fldenv
aaa
mov
repz
stos
adc
sub
orl
pop
icebp
mov
pop
sbb
lock
outsb
mov
jmp
jae
cmpsb
iret
xor
scas
add
cmp
lret
sahf
mov
lea
lcall
arpl
pop
popf
in
push
ss
cld
sahf
xor
jnp
in
rep
xchg
inc
xchg
mov
incl
sub
cmp
mov
cwtl
movsb
lret
sub
pop
xchg
pop
into
loop
pusha
or
call
pop
xchg
push
lret
push
mov
cmpsl
cmp
in
filds
mov
sub
mov
cmc
ljmp
jns
pop
sub
notb
loop
and
pop
hlt
sbb
std
or
jmp
pusha
ds
es
pop
pop
cmpsb
pusha
xor
dec
call
out
scas
or
lcall
dec
xlat
enter
jge
mov
sbb
cld
imul
ljmp
outsb
adc
pop
or
jmp
mov
adc
in
cld
sub
ljmp
aad
jo
push
push
shrb
sub
mov
fs
pop
call
push
inc
and
jecxz
pusha
dec
fstpt
popf
xor
pop
out
test
popa
push
arpl
xchg
pop
cmp
ret
fsubrs
int3
inc
dec
test
aam
mov
cmc
jg
hlt
xor
cmp
push
and
aad
mov
xchg
mov
ljmp
das
mov
incb
xor
xchg
pusha
insl
int
leave
xor
addl
mov
jle
in
aaa
or
test
aas
adc
andl
data16
xor
lcall
pop
mov
insl
or
push
jo
cmpsl
pop
inc
mov
test
cmp
adc
jmp
into
add
shlb
and
jge
and
add
jp
mov
loope
jp
jmp
xchg
push
mov
pushf
mov
out
fildll
or
xor
iret
movsb
ror
pop
cli
jmp
repnz
aam
imul
jle
push
push
int3
xchg
jbe
dec
ljmp
add
cs
aam
gs
ret
and
push
cwtl
inc
or
lcall
xchg
aaa
shll
call
incl
xor
jns
mov
ljmp
mov
mov
pop
cli
jg
bound
jne
lods
mov
das
or
cs
sbb
jle
pop
xchg
negb
add
sub
push
push
push
lahf
movsl
mov
incl
ja
and
jge
andl
fmuls
das
cmc
aam
sbb
pop
push
test
nop
mov
xchg
jg
out
adc
and
xchg
lds
decl
cwtl
push
dec
xchg
add
xor
pop
or
mov
stc
fbld
inc
or
lods
shlb
sbb
outsb
call
and
and
pop
mov
add
nop
out
stos
enter
lcall
cwtl
pop
lahf
sub
outsb
in
pop
and
cwtl
dec
push
divl
je
mov
das
ret
xor
jnp
in
rcrb
arpl
mov
pushl
or
inc
repnz
popa
lds
fs
jecxz
retw
call
ljmp
aam
imul
or
test
sbb
sbb
push
faddl
sar
or
sti
jmp
jns
inc
js
leave
lock
add
loope
stc
cmp
xorb
loope
mov
loope
sub
in
xchg
stc
cmc
inc
or
cmp
sar
incl
icebp
push
int3
pop
loopne
push
out
add
dec
xchg
push
sub
leave
bound
decl
divb
pop
cltd
mov
mov
loopne
outsl
push
pop
dec
clc
xchg
loopne
jne
ljmp
les
addr16
jmp
push
push
scas
aas
fildl
jmp
aam
addr16
shlb
in
out
pop
mov
mov
sub
int
push
lock
lcall
iret
loope
pop
shll
and
push
out
push
loopne
sti
fldl
jns
jg
or
sar
clc
pop
push
int3
jo
sbb
outsl
jns
and
icebp
inc
out
push
outsl
lock
test
jl
push
add
xor
xor
jle
cld
decl
cmpsb
outsl
and
xchg
jp
cmc
dec
ljmp
or
dec
insl
insb
mov
mov
jp
fisubl
add
push
dec
pop
jecxz
xchg
cltd
lods
mov
jge
xor
insl
lods
inc
inc
cwtl
adc
jmp
mov
fcoms
outsl
lds
out
xor
push
aad
fadds
call
jnp
mov
inc
adc
adc
movsl
mov
push
xchg
insb
ljmp
les
xchg
dec
add
push
fnsave
xchg
inc
xor
ljmp
add
push
repz
cmc
js
dec
dec
mov
bound
push
call
jb
pop
push
cmp
mov
test
lods
in
scas
shl
xchg
in
sbbl
lods
push
xchg
cmp
std
push
call
pop
sbb
sub
xchg
push
sub
mov
stos
js
lcall
mov
pop
push
adc
and
cli
out
pop
push
insb
bound
aam
sub
cmc
call
subl
mov
add
popf
xchg
jae
cmp
pop
push
xchg
xchg
mov
lock
mov
jns
loope
adc
dec
sbb
and
icebp
dec
cld
ret
fimull
movsb
fwait
and
sbb
sub
ljmp
cmp
scas
ficoms
push
adc
cmpsb
and
inc
test
pop
sub
push
outsb
mov
xchg
mov
add
mov
mov
pop
frstor
mov
pusha
fs
add
daa
mov
mov
loop
daa
mov
pushl
and
das
sahf
xor
pusha
cmpsl
jmp
jo
mov
jmp
jnp
stos
in
ljmp
adc
pushf
popa
xchg
es
sub
outsb
and
clc
aaa
jne
dec
push
test
add
inc
adc
sub
les
les
pusha
mov
decl
shrb
xchg
jb
jecxz
lds
sti
cmp
xchg
jno
push
outsl
das
aad
mov
out
add
iret
push
jmp
add
rcl
lret
orb
adc
lret
imul
jmp
incl
jmp
and
add
push
mov
jecxz
das
out
popa
jecxz
movsl
popa
ret
rclb
sbb
mov
pop
mov
mov
arpl
push
fadd
jge
bound
jmp
movsb
mov
pushl
jae
pop
incb
in
xor
outsb
out
scas
mov
pop
aaa
dec
pop
xor
iret
outsl
lock
clc
stc
and
mov
mov
adc
mov
cmp
rorl
fisubrl
inc
imul
pushf
xlat
push
pop
adc
data16
pop
notb
xor
xor
fsubl
sbb
imul
sar
lea
fstpt
repnz
push
and
cmp
pop
add
clc
aam
rolb
stc
mov
sub
add
mov
pop
mov
aas
mov
mov
popf
incl
decl
jb
and
xchg
in
mov
repz
mov
inc
mov
xor
in
popf
hlt
pop
js
stos
pop
mov
cs
das
jmp
out
outsl
cmpsb
mov
fsubs
imul
dec
push
cli
in
dec
outsb
push
in
or
incl
fidivl
dec
dec
inc
xor
ljmp
and
fidivrl
or
cmp
repnz
xchg
mov
mov
dec
mov
push
sarl
aam
outsl
in
outsb
jl
imul
cli
cmp
add
mov
ret
test
xchg
jle
shlb
adcl
push
arpl
pop
pop
cmp
push
aaa
popf
mov
jmp
or
lahf
xchg
popa
and
push
loope
ja
jbe
pop
jbe
imul
add
dec
cmp
int3
push
movsl
cmp
pop
xchg
sbb
rclb
lcall
icebp
dec
xchg
bnd
add
rcr
mov
jbe
xor
out
call
adc
jecxz
cmp
xchg
xor
jp
xchg
idivb
pushl
popa
rep
xchg
in
out
shll
ss
fwait
incl
ds
lds
movsb
addr16
adc
jmp
mov
fldenv
outsb
xor
jecxz
cmp
mov
inc
inc
jg
decl
adc
sti
mov
scas
mov
mov
std
lds
imul
insb
add
jg
mov
fisubs
jne
in
pushl
cmp
jmp
jns
push
sbb
nop
fcoml
movaps
fisubs
sub
mov
mov
es
jl
clc
pop
jg
jo
inc
aam
xlat
fwait
push
xchg
lcall
lret
xchg
xor
or
adc
xor
jge
enter
or
ljmp
cmc
ja
mov
push
ret
arpl
lock
ljmp
inc
jl
loope
aas
sbbl
std
shrl
cmp
popf
enter
cmc
sbb
xchg
pop
jo
or
or
add
cli
adc
cs
out
fsub
dec
fucomp
cld
popf
imul
sub
nop
and
ljmp
jle
cmp
mov
mov
loop
lods
shl
jecxz
test
or
cli
filds
lcall
adc
in
int
pop
xor
cmp
push
hlt
mov
pop
call
xchg
sarl
dec
ret
mov
cmpsb
cmp
notb
test
std
lahf
stos
inc
gs
jge
inc
push
adc
mov
cmp
mov
or
call
and
cwtl
mov
adcb
inc
jmp
cmp
push
mov
iret
xchg
adc
pop
sbb
xor
xchg
add
push
push
cli
pop
loopne
sbb
in
add
mov
cmp
add
inc
lods
cwtl
mov
inc
pushf
imul
pmuludq
sti
mov
pop
jg
sbb
dec
das
movaps
icebp
movsb
sbb
icebp
cmp
mov
pushl
rclb
jns
adcl
and
cmp
test
mov
lcall
popf
ds
mov
pop
lahf
idiv
das
cld
mov
icebp
lahf
out
mov
insb
sub
cli
cwtl
test
jmp
movsb
nop
lcall
jnp
out
hlt
test
jge
aad
inc
lahf
dec
sbb
inc
inc
fcmovnb
pushf
ds
mov
dec
pop
lahf
push
and
lock
add
test
std
xor
mov
rorl
add
in
cmpsl
dec
pop
mov
cmp
movsl
pop
xlat
mov
adc
inc
and
mov
add
repz
bound
ja
inc
cs
mov
imul
pop
lock
imulb
lcall
jmp
jns
adc
pop
out
pop
xor
jo
fwait
in
clc
jbe
fs
jbe
div
fstps
hlt
insl
push
and
in
in
imul
or
and
into
repnz
sahf
xchg
jbe
ljmp
arpl
jle
es
out
stc
or
mov
or
push
enter
das
or
xchg
test
or
adc
ffree
icebp
lcall
mov
in
mov
aam
seta
rorb
xchg
sub
jae
call
pop
push
repz
movsb
jg
js
inc
sahf
loopne
adc
fwait
roll
insl
xchg
ret
push
sub
mov
movsb
test
dec
or
mov
ljmp
fiadds
push
mov
inc
notl
add
adc
lcall
cmpb
cwtl
cli
mov
imul
inc
xor
imul
pushl
bound
push
and
fimull
movsl
mov
arpl
shlb
jmp
loopne
outsl
fsts
mov
push
cmc
inc
mov
mov
push
mov
call
jbe
je
mov
in
shll
lahf
push
orl
int
lock
clc
mov
and
enter
leave
sub
mov
negb
cli
xchg
fimuls
push
incl
push
sub
in
lods
sub
and
insb
repnz
push
aad
in
xchg
mov
pop
inc
lahf
mov
aaa
insb
xor
loop
mov
pop
inc
mov
decl
out
hlt
fstpl
aaa
cmc
in
mov
cmp
loopne
mov
pushw
cli
aaa
sbb
sbb
in
add
sub
insl
jns
jg
or
xor
imul
in
push
push
addr16
jge
jno
call
in
push
loop
lcall
je
cmp
jae
in
xchg
xchg
inc
arpl
mov
ss
mov
jp
pop
lods
out
mov
inc
iret
hlt
cmp
test
mov
fdivr
das
lock
mov
jnp,pn
mov
imul
pop
clc
jg
pushl
push
in
lods
je
adc
cmpsb
sbb
jno
add
cli
adc
mov
rolb
mov
inc
jmp
int
outsb
and
dec
jp
fucomip
mov
add
je
jne
hlt
pop
iret
gs
xor
mov
cmp
decl
jno
cmc
inc
iret
push
xchg
orb
movsl
repz
cli
or
jg
jnp
mov
test
ret
xchg
decl
and
sbbl
jae
in
lds
jo
push
idiv
push
pop
loop
out
push
lahf
or
pushw
mov
push
and
jns
mov
jl
leave
inc
cmp
xchg
mov
sti
lret
jbe
mov
pop
push
jmp
inc
dec
imul
push
incl
pop
lea
mov
or
out
xchg
test
sti
pusha
push
jp
mov
xchg
cli
pop
mov
mov
cmpsb
xchg
sub
ljmp
sbb
adc
jecxz
es
or
ljmp
icebp
or
sub
test
sbb
or
push
xchg
adc
setb
add
adc
test
dec
and
mov
mov
jl
outsl
dec
add
dec
inc
xchg
decl
adcb
push
outsl
sbb
popa
xchg
cmp
ja
pop
push
mov
call
xchg
jl
jp
lahf
adc
adc
lcall
mov
lcall
xor
sbb
lds
js
fisttpll
cltd
push
repz
in
decl
lret
pushf
ret
sbb
inc
cmp
in
sbb
adc
das
pop
movsl
and
xchg
xor
sub
adc
sbb
adc
clc
xchg
in
shll
sbb
outsb
and
mov
int
mov
push
gs
cmp
call
mov
and
popf
mov
xchg
data16
jg
aam
mov
ja
daa
pop
push
fcompl
mov
popf
cmpb
xchg
jecxz
jnp
pushf
test
pop
inc
aam
push
ljmp
lds
adc
loope
sbb
pop
loopne
pop
mov
js
adc
outsl
fidivs
jl
jb
add
mov
inc
movsb
mul
xchg
stc
js
xlat
out
bound
gs
hlt
mov
sub
and
std
movsb
mov
cmp
ljmp
mov
cs
sub
xchg
out
inc
sub
scas
fsubrs
mov
scas
pushl
cli
pop
xor
outsl
loop
out
je
jge
mull
ficomps
mov
pusha
nop
mov
mov
mov
and
ss
cmp
cld
call
adc
xor
roll
stos
inc
fnstcw
or
in
cmp
xorb
cmp
lcall
es
test
xchg
add
xor
inc
xchg
call
leave
pop
clc
mov
iret
hlt
jmp
cmc
or
loop
lea
hlt
repz
incl
and
movsb
mov
gs
jno
in
and
xor
add
dec
test
movsb
jg
adc
mov
sub
jge
jmp
test
arpl
sbb
incl
push
jnp
pop
gs
and
mov
and
and
dec
cmp
and
jl,pt
aad
hlt
pop
push
dec
jns
add
pop
inc
fnstcw
mov
stc
pushl
cli
lcall
dec
fwait
stos
mov
push
in
loopne
lods
mov
dec
insl
insb
lcall
iret
ret
dec
fisubrs
inc
aas
insl
ljmp
fldcw
xchg
push
or
lea
into
psrlq
xchg
inc
dec
and
stos
comiss
ljmp
into
or
mov
lret
insl
push
rolb
adc
or
ljmp
pop
xchg
inc
pop
aad
rorl
xorb
xor
rcll
add
push
lret
jg
mov
xorb
sub
and
mov
xlat
xor
test
jmp
jg
sbb
xchg
fwait
jnp
daa
adc
cmpsl
pop
in
and
or
daa
mov
sbb
call
shll
addr16
add
adc
fsubl
mov
lcall
pop
xchg
push
inc
mov
or
or
sub
cmp
gs
incl
xchg
call
jmp
clc
repz
dec
mov
or
clc
mov
push
mov
jg
js
fdivl
jmp
fisubrs
ljmp
decb
mov
imul
imul
jmp
inc
jmp
stos
out
sub
arpl
call
or
jmp
ljmp
mov
out
lea
jecxz
dec
scas
xchg
xor
aas
mov
lods
jl
push
std
cmp
lods
pop
xor
xbegin
jo
repnz
cld
stos
movsl
in
fbstp
gs
test
mov
test
imul
push
call
sbb
ljmp
mov
or
sub
rol
sarb
aas
aaa
aad
push
mov
mov
jge
int3
mov
cs
inc
or
in
mov
cmp
cmp
aam
inc
fidivrs
cmp
cmp
and
jb
adc
mov
adc
adc
call
adc
inc
adc
xchg
test
pop
cmp
ret
aad
push
push
mov
icebp
add
push
push
sbb
roll
sub
mov
jmp
scas
sub
cltd
dec
cmpsb
scas
fldcw
arpl
mov
sub
sub
jmp
mov
sub
mov
loop
xchg
mov
inc
mov
mov
les
push
mov
enter
inc
push
ljmp
aas
mov
dec
jnp
incb
incl
cmp
mov
mov
adc
and
mov
mov
jg
incl
xor
loopne
xorl
sarb
icebp
push
je
je
lock
push
nop
mov
cmp
adc
xchg
mov
movsl
ljmp
mov
sbb
jmp
ret
aad
rcll
cmp
mov
mov
inc
jle
push
stc
ds
popf
movsb
imul
push
jnp
cmpsl
pop
adc
pop
adc
sub
dec
jns
jne
pop
sub
jge
cmpsb
mov
mov
sub
jmp
jg
sub
in
and
dec
dec
xchg
adc
popf
decl
sub
cli
push
ror
jge
je
xor
add
fsubs
add
pmaxub
int
enter
jg
sub
pushl
bound
fcmovb
std
sbb
mov
xchg
lcall
sbb
stc
sbb
int
mov
pushf
lahf
push
decl
lret
cmpsl
nop
ljmp
sub
stos
stos
loop
bound
sbb
insb
dec
std
clc
mov
jl
std
fwait
and
nop
and
sub
cltd
xchg
in
lcall
and
popf
mov
cmpsl
addr16
mov
and
xor
jg
decl
popf
sub
fisubl
loop
pop
sahf
lcall
mov
xor
call
cli
pushl
insb
mov
jg
int
adc
xchg
xchg
loop
jle
jp
ljmp
call
pop
or
sub
scas
lods
add
mov
das
sub
lcall
in
das
mov
in
loop
mov
mov
scas
add
mov
incl
gs
xor
xor
push
mov
add
xor
std
ljmp
xchg
dec
mov
sub
jecxz
push
scas
jnp
fdivs
xor
gs
in
fiadds
imulb
mov
mov
popa
cmpsb
lret
testb
addr16
mov
mov
ja
mov
cmp
das
xor
push
cmp
push
jmp
mov
insb
test
cmp
jmp
jbe
sub
rcrl
push
or
or
lcall
stc
dec
add
jb
enter
das
cmc
inc
and
pop
inc
dec
mov
cmp
mov
cmp
cmp
in
into
sub
mov
mov
lock
scas
sub
push
push
in
test
paddsw
dec
mov
fnstsw
inc
xor
rcll
dec
or
cmpsb
cmp
cmp
out
stos
mov
fmull
call
leave
xchg
filds
cmp
pop
pop
dec
scas
loopne
movsl
decl
mov
jae
jo
push
sarl
jmp
loope
push
mov
push
rclb
lret
cli
shll
pop
jae
jg
adc
aas
aad
ret
jne
push
shrl
add
sahf
ret
test
decl
jb
jo
hlt
dec
sbb
xlat
loope
lcall
icebp
int3
add
dec
dec
cld
das
cmc
mov
mov
and
das
pop
ljmp
inc
pop
xlat
in
leavew
push
xchg
aaa
push
insl
outsl
cld
out
fbld
xlat
mov
cmp
clc
fistps
mov
std
aam
jg
dec
mov
adc
in
movsb
gs
scas
sub
sbb
fwait
arpl
decl
inc
loop
dec
and
sarl
fistpl
pop
shl
mov
call
sti
mull
pop
jbe
pop
out
ret
js
shl
clc
xor
sub
pushl
repnz
inc
insb
push
out
cmp
popa
shld
mov
int
mov
dec
fisttpll
ret
xor
sbb
cmc
ja
sbb
push
ljmp
mov
testb
or
jle
jmp
push
lds
cli
call
clc
stos
add
and
jb
rolb
xlat
xchg
sbb
jmp
ljmp
arpl
cmp
mov
mov
jnp
add
xchg
mov
imul
mov
call
mov
jbe
int
jo
aaa
dec
cltd
movsl
rcl
gs
lods
clc
incl
iret
imul
cmp
adc
jo
call
insl
ret
test
fimuls
sbb
push
ja
aas
stc
xchg
cmp
cmp
cli
pop
xchg
stos
push
xor
push
sbb
push
and
pushl
or
dec
stos
lods
test
and
addr16
mov
in
loopne
pop
clc
js
or
into
lock
lret
ret
xor
shrb
fisubs
or
or
mov
in
lods
frstor
pop
fildll
adc
lret
xor
out
xor
mov
ljmp
mov
mov
xchg
mov
push
adcb
add
cli
cmpb
insb
out
cmpsb
aaa
push
mov
movsl
mov
mov
or
xor
jl
mov
xchg
xchg
int3
jle
movsl
repnz
or
jge
jmp
or
push
mov
test
lea
sti
push
cltd
in
test
nop
pop
mov
xchg
push
call
mov
decl
mov
adc
mov
cltd
cmp
clc
jmp
lret
push
xchg
call
ja
push
pop
shlb
scas
sub
arpl
roll
idivl
or
imul
jae
lcall
cld
rol
mov
adc
cmpsl
cmp
mov
mov
add
das
ljmp
jmp
fists
mov
sbb
movswl
fistpll
imul
dec
out
and
push
imul
aas
insb
bound
jp
subb
pop
ljmp
roll
pop
repz
ljmp
sti
mov
or
xchg
ficomps
repnz
addr16
out
loop
icebp
jg
mov
sbb
in
decl
loopne
push
fistl
mov
scas
mov
sarb
shlb
add
xchg
aad
or
adc
jmp
stos
pop
sub
lcall
mov
adc
dec
dec
call
cli
pop
push
lahf
mov
jp
mov
xchg
xchg
decl
test
push
mov
int3
imul
ljmp
repnz
mov
adc
hlt
ret
test
loopne
or
cwtl
xchg
push
dec
cmp
pop
pop
or
adc
add
mov
negl
das
sahf
test
mov
sub
lahf
aad
push
enterw
and
pushl
popf
lea
mov
cmp
add
cli
je
divb
popf
and
or
mov
js
scas
outsb
pop
clc
insl
jmp
add
xchg
dec
call
outsl
icebp
push
shrb
add
jbe
jno
insl
inc
lcall
sbb
sbb
pop
clc
lret
mov
incl
jge
jbe
mov
js
pushl
clc
loop
xor
mov
cmp
add
add
pushf
adc
mov
sub
or
push
test
int
cs
pop
dec
in
mov
mov
imul
outsl
xchg
xchg
mov
aad
in
mov
cmp
fstl
call
rcll
jae
push
mov
jl
jo
loopne
pop
jmp
mov
pushf
mov
ds
xchg
out
sub
cmp
push
cmp
cmp
or
or
sbb
push
jbe
xor
push
arpl
fbstp
out
std
mov
mov
sarb
inc
outsb
fiadds
push
xor
test
dec
or
incl
pop
sub
lea
filds
bound
push
mov
jmp
repz
jp
sbb
subb
mov
ljmp
fbld
faddp
cmpsl
jle
adc
in
inc
movsl
jns
xchg
xchg
add
inc
xchg
sbb
xchg
incl
stos
mov
cmp
sbb
jmp
cmp
cli
xchg
outsb
and
std
lcall
inc
push
mov
pop
xchg
negl
xor
decl
stos
xchg
xor
sub
jp
mov
jg
mov
mov
pop
loop
out
scas
sbb
xor
xor
adc
lcall
mov
ret
das
dec
test
std
std
push
lcall
pop
sub
pop
mov
adc
adc
imul
loopne
dec
bound
call
adc
out
push
inc
aam
add
mov
lahf
pushf
loopne
cld
fdivrl
add
push
incl
push
pop
adc
out
or
mov
add
lods
imul
fildll
jecxz
pushl
sbb
xlat
dec
sbb
mov
into
push
or
mov
in
and
decl
pop
cs
popa
and
pop
call
xlat
loopne
pop
jl
cli
call
xchg
aaa
scas
xchg
push
add
add
mov
ljmp
or
xchg
pushf
aaa
arpl
mov
inc
sbb
xchg
das
cmc
fstpl
pusha
lock
push
inc
sbb
cmpsb
jg
and
lcall
add
add
fs
xchg
and
pop
sub
pushf
scas
jge
ljmp
aaa
inc
fbld
outsb
addr16
js
pop
add
fcoml
in
cmp
lcall
jle
jle
jns
outsb
ss
lods
inc
pop
test
dec
lcall
lock
mov
cmpsb
add
lods
pop
cmp
jb
mov
or
mov
pushl
push
subb
add
mov
ja
ficoms
clc
push
mov
jecxz
jg
inc
in
sar
pop
push
jb
stc
add
adc
mov
aam
add
jl
xorb
mov
lcall
hlt
xchg
cli
repnz
movsl
out
adc
stos
pop
cmpsb
decb
inc
rcrl
jae
lcall
fistl
adcb
jmp
neg
inc
jmp
or
loope
cli
loope
jle
or
jmp
cmp
or
js
inc
cmp
cmpsb
cmp
sbb
stos
ljmp
ljmp
cmp
test
jmp
or
pop
outsb
lcall
sahf
mov
aad
imul
fisttpl
add
cmp
add
sbb
or
leave
fwait
push
mov
cmc
fiaddl
movsb
add
inc
sub
insl
sar
ljmp
inc
mov
jg
cs
and
loope
lock
xlat
or
dec
ljmp
in
adc
pop
movsb
mov
sbb
lods
sbb
xlat
in
outsb
stos
dec
jge
lcall
xor
std
setbe
sahf
or
cmp
jb
scas
insb
into
push
sbb
mov
cmpsb
fnstsw
jg
sbb
aas
pop
or
scas
jg
sub
es
test
rolb
mov
push
andl
add
push
mov
and
mov
aas
mov
repz
pop
movsb
sbb
jnp
call
fucomip
adc
mov
mull
adc
sbb
pushl
jnp
stos
pop
inc
and
push
stos
lds
mov
fisubrl
mov
jmp
fnstcw
and
and
xor
pop
and
shlb
or
leave
adc
mulb
ja
mov
and
out
ret
pushf
mov
dec
std
das
inc
testl
lcall
jg
sti
sbb
sub
shl
mov
pop
xchg
cli
add
int
jmp
imull
icebp
sbb
cmc
jg
inc
push
lds
xor
nop
and
sub
inc
mov
decl
and
test
add
rcrb
or
cltd
lret
inc
dec
cmp
lock
movsb
mov
hlt
incl
fucomi
xor
adc
dec
or
ja
insl
inc
sub
xor
into
insb
sarb
xchg
cmp
hlt
test
and
fs
sbb
test
jg
outsl
stos
sub
sub
int
and
sub
pop
adc
call
sbb
xor
leave
mov
adc
aam
add
iret
cmpsb
pop
mov
nop
sar
dec
mov
dec
jmp
add
cmp
inc
jns
arpl
sbb
fdecstp
push
jp
adc
and
push
scas
imul
cmpl
pop
lods
pop
mov
leave
push
cmp
mov
sahf
int
inc
xorl
push
test
test
or
fwait
dec
add
outsl
cmc
mov
jp
fdivrl
loop
iret
das
pop
leave
inc
and
xchg
push
dec
fadd
loope
dec
in
jp
fistps
push
pop
fdivr
pop
loop
fcmovu
jecxz
add
mov
es
sub
jne
mov
pop
inc
mov
call
negb
xlat
xor
pop
sahf
es
jp
dec
pop
fidivrl
inc
sbb
call
jb
add
mov
mov
jp
xor
jne
jg
in
popa
in
out
outsl
icebp
pop
cld
test
sbb
dec
test
xchg
jp
mov
incl
shrb
add
into
mov
sub
inc
pop
pop
repz
sti
outsb
aam
call
pminsw
popa
push
loope
iret
lcall
lock
push
jo
push
jmp
sub
call
pop
dec
xchg
fdiv
loopne
dec
lods
imul
push
xchg
ss
pop
cwtl
pop
repnz
pushl
pushl
in
in
and
icebp
test
popa
push
adc
enter
addr16
test
int
repnz
mov
pop
inc
sahf
mov
pop
jne
jg
mov
jmp
lock
fs
xchg
fucomp
outsl
test
jb
imul
push
push
jmp
fisubrl
lret
mov
lock
punpcklwd
out
ret
or
inc
mov
ja
pop
push
out
inc
sub
divl
dec
cmpsl
repz
dec
insb
icebp
stc
cmp
jns
dec
imul
fs
mov
inc
or
insb
in
lods
pop
scas
cli
sbb
adc
jg
jbe
mov
dec
cld
adc
jge
sub
hlt
push
sbb
jl
repz
rcrl
ljmp
mov
pop
outsb
rolb
and
add
in
xlat
je
mov
iret
insb
pop
adc
jmp
add
push
jecxz
mov
lahf
mull
dec
add
add
fisttps
jecxz
std
incl
sub
bound
add
push
xor
push
outsl
jge
lea
fimull
jo
jae
mov
pusha
adc
adc
and
or
addr16
sbb
add
lds
adc
cmpb
out
mov
es
aaa
clc
jge
out
adc
aam
jge
inc
add
iret
dec
fcoml
or
jge
push
sbb
mov
clc
dec
clc
ja
push
mov
jnp
adc
mov
jmp
fldt
mov
insb
jg
das
enter
sub
call
lods
jle
popa
sbb
mov
hlt
scas
shlb
mov
push
ss
dec
mov
pop
ret
jns
mov
xor
test
ljmp
fisttpll
lcall
sahf
xchg
cs
jmp
addr16
add
sbb
pushl
dec
iret
nop
enter
or
mov
sti
pushf
out
and
lcall
pop
in
nop
pop
ret
aas
and
sub
and
into
pop
cltd
jno
aas
lahf
jle
xchg
call
xchg
inc
pop
and
and
sbbl
sbb
iret
dec
xchg
sbb
and
fs
mov
inc
push
daa
adc
cwtl
pop
sbb
adc
out
cwtl
cmpsl
mov
decl
ljmp
ret
add
test
jae
sbb
ljmp
nop
mov
mov
into
nop
andl
in
adc
xchg
in
jae
pop
inc
out
inc
dec
decl
mov
testb
mov
fwait
adc
fs
lcall
sub
and
xor
movb
xchg
sbb
and
lcall
adc
popf
mov
aaa
aaa
notl
js
ljmp
das
push
in
or
movsl
mov
xor
dec
cwtl
mov
iret
push
fwait
leave
lods
lods
add
shlb
cld
mov
xchg
jae
aad
insl
decl
movsl
xchg
mov
ljmp
or
mov
mov
in
movl
cmp
mov
bound
sub
out
rcrl
cmp
jnp
inc
xor
lds
xor
dec
push
movsb
cmp
into
pusha
mov
fmuls
outsl
mov
cmpl
aas
jbe
mov
jg
lods
and
mov
nop
scas
inc
outsl
mov
jl
cmpsb
mov
faddl
mov
inc
dec
push
lds
test
lret
push
mov
loopne
sar
jae
addl
or
pop
pop
decl
xchg
cld
mov
mov
sub
or
dec
les
dec
xchg
push
aas
and
ss
dec
xchg
cmp
cmp
push
nop
imul
mov
dec
leave
and
jo
sub
mov
decl
mov
cld
xchg
shrb
inc
pop
ja
int3
push
cli
notb
lods
leave
test
call
sbb
mov
mov
scas
daa
push
ja
hlt
js
insb
inc
push
mov
add
cmp
lcall
mov
cli
sub
sub
lret
pop
cld
and
mov
mov
jmp
mov
int
jo
aas
mov
pop
dec
mov
decl
cwtl
pop
scas
jl
int3
loope
insl
pop
adc
ret
push
in
movsl
and
cwtl
pop
sarb
je
lcall
push
mov
xchg
ds
push
loope
pop
add
cmp
fucomip
jnp
mov
xlat
iret
repnz
push
or
ljmp
pop
cltd
add
int3
or
bound
fidivrl
push
lcall
mov
aas
aad
jecxz
pop
cmp
cmp
das
cmc
jg
sahf
push
push
shlb
fcmovnbe
inc
xchg
pop
jp
and
adc
jg
pushl
lcall
cmc
dec
xchg
test
sbb
movsb
neg
cmpsb
dec
xlat
rcll
jg
call
pop
mov
cmp
cld
shr
popa
repnz
fucomip
ljmp
sbbb
hlt
shrb
sub
lods
jbe
out
add
lcall
push
hlt
add
adc
push
jbe
jecxz
roll
lds
imul
scas
stos
loopne
fchs
lds
push
inc
sahf
jecxz
in
clc
test
filds
inc
test
outsl
or
lods
out
push
dec
sub
xor
dec
call
mov
getsec
sahf
jmp
fmuls
xchg
add
inc
test
sub
cmpb
mov
pop
push
mov
jg
loope
gs
test
ss
adc
aam
mov
pop
divb
push
cld
xorl
jge
testb
jo
je
ljmp
and
sub
jl
push
xor
call
outsb
test
aam
lods
adcb
pop
xor
and
push
fdivs
shlb
push
cmpsl
outsl
pop
jnp
pushf
mov
cmp
das
in
jae
ret
clc
jmp
bound
adc
fldt
repnz
idiv
xchg
lock
in
inc
jae
cmpsb
aaa
jns
mov
not
ja
jge
add
cmp
js
je
hlt
jmp
adc
decl
and
jmp
push
push
inc
jg
leave
stc
dec
jg
sbb
incl
ja
add
out
lret
not
jg
mov
mov
mov
call
sub
js
pop
pop
jmp
inc
sti
mov
add
stc
adc
fucomip
decl
pop
adc
xchg
fdivl
adc
ret
test
mov
mov
fmull
into
mov
mov
push
dec
call
sbb
ret
std
lods
push
pushl
out
adc
sub
mov
jns
pop
ljmp
icebp
or
or
cmp
xchg
adc
mov
mov
adc
sti
sahf
lods
inc
out
push
mov
insl
mov
out
jge
ds
aas
cmpsb
das
icebp
jnp
cs
sub
sti
int3
scas
mov
in
negl
mov
mov
cmp
pusha
xlat
inc
xchg
fsts
movsl
fstps
loop
jne
pop
inc
sbb
pop
push
sti
dec
sub
ret
jg
call
out
outsl
subl
or
rorl
push
xor
pushl
ljmp
out
aas
add
test
gs
pop
arpl
repnz
sub
inc
jge
jle
icebp
cmp
push
mov
imul
pushf
mov
xchg
jmp
sbb
mull
inc
cli
lods
fdivrl
xor
jbe
subl
decl
pop
and
fidivs
mov
jnp
ja
repnz
ret
push
dec
mov
call
popf
mov
xchg
fst
add
sbb
stos
daa
or
cwtl
lcall
xchg
pop
push
pop
inc
inc
dec
scas
subb
jns
sub
popf
xor
call
jp
pop
xchg
pop
adc
int
dec
ds
fistpll
push
pushf
ja
push
pop
adc
leave
enter
fistpll
xchg
add
mov
or
pop
xorl
xchg
sar
cmp
or
xchg
cmp
and
xor
pop
jge
mov
fdivrs
out
lea
jle
or
dec
rcrb
clc
call
push
inc
addr16
xchg
into
movsb
add
inc
cmp
jle
out
jae
add
push
dec
arpl
bound
aam
ljmp
loop
jae
outsb
mov
dec
inc
ljmp
pop
mov
pop
ljmp
pop
repnz
filds
ss
popa
add
pop
dec
outsl
mov
das
icebp
stos
sbb
sub
sub
loope
insl
xor
xchg
pop
xchg
xor
dec
loopne
fstpt
fs
adc
and
ret
pop
bnd
decl
cmpsl
test
lods
gs
xchg
cmp
je
call
mov
lahf
pushf
xor
movsl
push
xchg
imul
ud0
push
mov
xor
outsl
add
xor
scas
sub
ljmp
jp
mov
cmpb
pop
adc
in
push
fcoml
rcr
loopne
call
aas
xchg
mov
jo
out
adc
pop
inc
fbstp
push
lock
iret
outsb
dec
sbb
lock
rorb
aam
jmp
dec
stos
out
and
sbb
adc
call
add
sub
sbb
stos
mov
sbb
incl
popa
lods
movsb
pslld
sbb
xchg
inc
push
fists
hlt
out
dec
mov
and
push
aad
fisttps
adc
or
sub
mov
mov
push
lcall
cld
push
xor
sub
and
cmp
or
imul
cld
incl
lret
or
dec
gs
jg
ds
sbb
in
sub
or
mov
stos
inc
int
sbbb
push
jmp
lcall
call
lahf
gs
sbb
mov
call
push
push
in
hlt
fisttpl
jmp
subb
notl
fimuls
decl
loopne
test
arpl
enter
mov
push
cmp
incl
jl
pop
pushf
inc
and
push
pop
add
daa
mov
pop
lahf
lret
ja
in
or
mov
and
or
mov
inc
mov
cwtl
mov
lock
shlb
xchg
ss
cmpsb
jmp
scas
lds
jnp
das
cmp
dec
roll
add
ljmp
pop
rcrl
jno
mov
xchg
pop
jb
pushf
fnstenv
mov
mov
dec
ds
stc
adc
mov
mov
jmp
pop
xchg
jb
xchg
or
and
aaa
jge
jo
push
add
and
dec
std
jg
jmp
ja
dec
mov
fists
push
xor
in
mov
fucomip
das
or
shrl
cmp
sub
mov
fwait
jae
mov
adc
cmpsb
dec
push
mov
scas
jne
sub
incl
xchg
movsb
imul
ljmp
cmc
cld
xchg
push
nop
xorl
out
es
xchg
inc
call
jmp
lods
mov
or
lret
add
mov
out
or
in
test
incl
add
add
jo
cmp
add
sbb
add
mov
rcll
dec
inc
cmp
cmp
sub
and
repz
in
mov
outsl
test
and
lahf
xchg
std
jg
ljmp
adc
frstor
mov
or
mov
nop
or
cmpb
mov
cmp
ja
bound
int
incl
aaa
mov
icebp
rorb
in
sti
xor
aad
sub
mov
add
test
or
std
jg
xlat
xorl
cmp
cmpl
or
push
inc
jae
rcrl
fisttpll
test
fildll
add
push
mov
pop
adc
fs
aad
jg
div
lods
pop
fdivs
lahf
cli
lcall
mov
mov
nop
cvttps2pi
sahf
daa
lods
mov
add
dec
mov
fsubrs
add
rclb
add
cltd
adc
xchg
jmp
push
rcrb
dec
pop
cmp
mov
test
into
ja
pushl
scas
cmp
sbb
cmp
in
in
pop
mov
das
adc
jno
sub
fldlg2
or
push
rcrl
mov
mull
stos
mov
imulb
repnz
pop
cli
lcall
repz
adc
xor
cmp
aaa
incb
pusha
andl
jl
xchg
cmpsb
test
ret
jmp
sub
and
mov
aad
sub
out
cli
pushf
scas
sub
data16
jmp
cld
mov
lcall
ljmp
inc
pop
pushf
enter
push
cmp
xor
sub
adc
mov
and
test
or
ret
sub
mov
shl
xchg
fistps
out
cmp
out
push
pushf
and
inc
bound
out
test
xor
jnp
mov
pop
push
mov
stos
ret
imul
loope
je
ja
faddl
inc
push
test
jge
pop
xor
mov
cmp
jmp
int3
imul
decl
loopne
mov
inc
jmp
jb
jnp
decb
std
mov
sbb
jns
fwait
lahf
in
mov
stos
les
cld
call
mov
or
inc
or
dec
repz
jge
and
aaa
lods
jl
mov
push
bound
ljmp
add
aas
pushl
cli
push
dec
inc
out
mov
mov
dec
stos
inc
pusha
jae
arpl
int3
mov
call
or
mov
xor
rorb
mov
in
fimull
dec
jnp
nop
xor
decl
rcll
mov
dec
inc
dec
movb
add
icebp
pop
and
popf
mov
je
jmp
cmovs
testl
nop
adc
repnz
xchg
mov
lcall
mov
inc
jne
pusha
sbb
pop
pop
test
leave
pop
mov
call
mov
inc
sub
pop
mov
into
mov
pushf
add
pop
shlb
sarl
mov
rclb
push
shr
xchg
roll
jo
add
adc
sub
andb
das
dec
stos
push
push
aaa
push
lods
std
les
jb
mov
sbb
ljmp
cmp
lret
and
push
inc
jo
ffree
cmp
mov
insb
mov
ss
or
cld
pop
push
mov
sub
ret
jb
fnstsw
bound
ret
add
push
test
inc
es
cmp
fwait
aas
fcmovnbe
sbb
jg
mov
lods
or
and
ss
in
add
adc
ljmp
std
mov
fistps
push
or
jg
xlat
xchg
test
movsb
into
aam
call
daa
and
jecxz
mov
out
outsb
in
hlt
push
mov
xchg
adc
xlat
es
sub
mov
mov
pop
in
push
xchg
imul
mov
add
repnz
movsb
sub
out
push
mov
ljmp
movb
fbld
fstps
in
aam
outsl
lock
je
jle
xor
test
faddl
push
decl
mov
in
cmp
jne
in
test
jne
fnstcw
fmull
lods
jae
mov
iret
aas
hlt
mov
sti
inc
fistpl
jmp
in
imul
fucom
lret
add
movl
pop
add
decl
call
aas
mov
jo
pusha
mov
call
scas
sti
pusha
pop
or
mov
in
aas
inc
or
mov
sti
dec
cld
aaa
test
cmp
push
or
mov
cwtl
dec
js
dec
jb
jg
rol
les
bnd
repz
movsl
fidivs
stos
in
cwtl
adc
mov
jg
mov
pop
jno
cwtl
cltd
jp
add
das
inc
and
stc
mov
sahf
scas
cli
sbb
or
mov
push
add
shlb
xlat
stos
rcrl
pop
cld
mov
repz
cmp
xchg
mov
cld
xor
sar
mov
dec
jns
or
push
inc
repnz
push
mov
mov
or
test
dec
or
or
jno
hlt
dec
sub
test
out
adc
and
movsl
mov
lods
push
scas
xor
test
ficomps
iret
decl
pop
xor
cmp
mov
shll
orb
insb
sbb
call
or
loopne
stc
je
cmp
repnz
mov
jg
pushl
xor
xor
adc
sub
add
cmp
mov
ljmp
gs
ret
push
inc
aas
out
mov
mov
mov
cmc
fldt
adc
call
fisubrs
sub
mov
pop
dec
rcrb
ljmp
outsl
and
push
mov
jmp
push
nop
adc
out
jmp
mov
and
int3
sbb
sbb
data16
cld
cltd
push
and
jmp
icebp
or
pop
fs
es
stos
hlt
icebp
mov
outsl
fdivrp
mov
test
ret
iret
out
sbb
xor
push
or
call
or
inc
pop
stos
jae
lahf
in
push
les
stc
dec
in
dec
aaa
call
dec
negl
xchg
jg
xchg
mov
push
jne
push
sbb
pop
inc
mov
xchg
push
inc
loop
scas
cmpsl
jb
icebp
ret
call
ljmp
cmp
subb
jmp
and
xchg
jg
pop
cwtl
jb
imul
pop
shrl
fwait
rcrl
jge
or
and
sub
mov
lods
repz
loope
lea
aaa
in
rep
daa
into
aas
rcll
adcl
xor
pusha
shrb
mov
cld
jnp
sub
hlt
aaa
repnz
push
cli
jmp
lods
ljmp
lcall
scas
push
out
adcb
push
push
mov
pop
cs
dec
push
cwtl
mov
or
sub
decl
jno
xchg
mov
testb
push
xchg
xchg
inc
mov
inc
subl
pop
pop
leave
jmp
mov
lret
or
xchg
insl
shll
test
ljmp
leave
lds
bound
daa
mov
mov
dec
mov
ljmp
push
or
cmp
ja
lcall
push
add
add
cmp
out
iret
push
mov
in
push
popf
insl
les
mov
popl
pushf
decl
inc
push
cmpsl
xchg
jns
inc
lret
pop
cltd
fidivrl
sub
rcl
sti
jecxz
iret
mov
cld
lcall
cmp
fsts
cmpsl
aaa
into
fsub
sub
mov
jl
pushl
sub
enter
mov
pop
js
inc
mov
inc
push
jbe
rorb
inc
dec
push
inc
iret
in
in
mov
gs
in
xor
jae
inc
push
push
lret
call
in
dec
sub
mov
mov
lea
lods
pop
mov
xor
call
fmulp
out
popa
stc
addr16
mov
fstl
and
fistps
out
jle
test
jl
mov
sarl
cmp
fmull
mov
lahf
out
fld
cltd
cltd
fstl
xchg
in
mov
jl
xacquire
test
int3
pop
inc
sahf
lds
decl
data16
inc
push
mov
sub
cmp
jmp
in
daa
cmpsl
cmp
lods
aas
push
mov
das
inc
jno
pop
shl
sbb
dec
je
pushf
test
in
push
sub
lcall
addl
mov
iret
mov
nop
inc
lock
inc
and
pushl
xchg
push
add
std
lods
scas
rorb
jle
fildl
jge
jno
shll
xor
aad
mov
mov
fistpl
pop
or
jmp
shll
inc
ds
or
mov
pop
ljmp
decl
scas
mov
cmpb
jb
add
in
cltd
add
in
and
hlt
fistps
jmp
or
shlb
xchg
out
cmc
mov
jg
push
jg
adc
mov
popf
fbld
dec
xchg
inc
dec
push
or
jmp
push
mov
inc
fdivs
cmpsl
aam
xor
mov
push
mov
sub
and
pop
scas
pop
pop
cmpsb
popf
dec
push
push
mov
pushf
push
imul
sbb
and
push
outsl
xchg
sub
dec
push
in
xchg
ljmp
mov
std
aaa
xor
cli
inc
xor
xchg
js
pop
sbb
rclb
ret
adc
inc
in
adc
arpl
inc
xchg
sbb
adc
je
mov
lret
cli
das
cmc
lcall
cli
neg
mov
or
jae
call
push
mov
cmpsb
mov
ljmp
xchg
ds
push
add
or
mov
xor
ljmp
stc
shll
xor
jns
fistl
shrl
mov
lock
push
sbb
iret
adc
das
or
pop
lret
call
pmuludq
shlb
or
jb
xor
jle
imull
mov
xchg
ds
mov
dec
inc
pop
ljmp
js
rorl
and
adc
adc
decl
push
dec
xchg
inc
int
inc
pop
adc
lock
test
mov
sti
mov
cmp
mov
sbb
in
mov
sbb
xchg
imul
jp
imul
mov
add
cmc
sub
cwtl
outsb
loop
cltd
lea
call
shrd
adc
mov
leave
lock
and
sbb
and
pushl
push
push
or
notl
adc
decl
out
loop
icebp
dec
out
icebp
xchg
cmpsb
sbb
mov
lcall
and
sbb
mov
xchg
aas
sbb
stc
aam
aam
mov
xor
fdivr
jge
aaa
mov
dec
push
sub
mov
outsl
and
mov
jge
sub
cli
filds
pop
pop
push
sti
imul
jbe
iret
jg
jmp
out
inc
or
dec
xor
cmpsl
mov
out
sub
insl
mov
mov
adc
call
test
adc
jo
xor
add
mov
or
std
ljmp
cwtl
clc
xor
ja
add
or
test
ljmp
fdivrl
mov
iret
xchg
xchg
int3
dec
cmp
add
scas
enter
imul
ljmp
hlt
imul
xlat
imul
lret
outsb
int3
push
das
lds
inc
cmp
adc
stos
iret
fiaddl
and
lods
bound
mov
push
and
das
lock
xlat
daa
and
push
cmpsb
imul
sbb
mov
pushl
sbbb
xor
jb
add
sub
in
incl
ss
nop
cmpb
push
dec
int
fmul
mov
ret
jg
mov
jp
pop
push
cltd
add
ds
pop
loopne
ds
out
or
ljmp
cld
lcall
rcrb
mov
cmp
cltd
pop
adc
sti
pushl
shrl
inc
jp
shl
push
adc
sub
dec
push
dec
push
mov
inc
sti
incb
popf
jbe
inc
sbb
cli
or
inc
sbb
pop
clc
and
pop
cmp
cmp
or
mov
mov
pop
xchg
inc
mov
sbb
gs
jmp
imul
mov
fldenv
mov
aam
mov
in
les
add
inc
or
inc
adc
mov
aaa
pop
xchg
pop
std
test
dec
jne
pop
std
inc
lcall
sub
mov
xor
hlt
ljmp
jne
push
sub
ja
pop
xorl
subb
scas
xchg
or
sarb
sti
cmp
pusha
mov
enter
pop
or
and
mov
out
inc
mov
or
fiadds
push
aad
iret
int3
fsubp
mov
scas
mov
mov
out
adc
pop
icebp
xor
cli
lcall
and
nop
inc
cmpl
je
xor
insb
rcrl
or
jns
lret
mov
fwait
mov
adc
pop
push
std
call
add
xchg
add
imul
iret
in
jg
sahf
sahf
ret
mov
aas
inc
dec
xor
xor
mov
or
mov
es
dec
test
dec
jg
jmp
test
int3
hlt
adc
add
shrb
dec
jmp
jb
jne
or
fstps
mov
push
aam
cmc
stc
jecxz
jo
in
call
shll
filds
loopne
das
std
cmp
jb
les
push
in
call
jp
pop
adc
jg
adc
pop
aam
lahf
pop
addr16
and
add
jg
icebp
jle
inc
lcall
rcr
adc
or
or
jl
sbb
fs
js
call
clc
stc
push
movl
fstps
and
leave
jb
ljmp
add
in
repnz
mov
insl
loop
jge
pop
imul
ret
sub
xchg
xorb
push
fstpl
lods
ljmp
adc
jp
lds
clc
test
pop
add
test
or
stc
or
or
or
test
fmul
mov
incl
in
rolb
inc
add
cmp
mov
in
std
cmpsl
push
testl
adc
movb
out
mov
insb
andb
outsl
hlt
call
push
insb
inc
or
cli
lret
push
hlt
leave
xchg
es
fisttpl
xor
es
mov
jmp
fistpl
in
xchg
cmp
or
fwait
jb
fcomps
add
enterw
or
lcall
xor
mov
and
push
push
movsb
xchg
lret
aam
sbb
ljmp
fldt
pop
mov
sbb
xchg
mov
pop
mov
add
sbb
mov
arpl
je
inc
negb
ljmp
loop
int
pop
mov
adc
in
pop
js
ja
fstpl
jmp
xchg
xchg
jg
sbb
les
pusha
je
or
stos
dec
push
shll
jne
mov
call
push
cltd
rclb
movsl
push
cmp
mov
jmp
pop
adc
dec
add
and
ret
and
std
pushl
adc
mov
push
leave
cld
lcall
ljmp
sub
sub
sub
sub
test
pop
inc
xchg
insb
mov
jmp
cmp
pop
cs
ljmp
and
iret
outsb
push
int3
fwait
pushf
in
xlat
push
addr16
test
xchg
stos
jmp
push
xchg
pop
push
rcr
sbb
daa
lea
out
rcll
sub
repnz
fcos
push
xor
into
sbb
and
lds
cmpsb
dec
inc
cmp
dec
inc
jl
mov
iret
sbb
jmp
sarl
xchg
cmp
mov
mov
test
ja
cmpsl
repz
daa
in
idiv
jg
aam
pop
sub
jne
pushf
inc
outsb
in
lods
mov
push
cmp
aaa
in
push
jmp
xor
add
cmp
jo
outsb
sub
sub
and
mov
mov
fiaddl
mov
adc
inc
sbb
shlb
aad
jb
cmp
inc
das
ss
lods
cs
adc
xlat
pop
in
bndldx
or
aam
cld
cmp
loope
inc
das
fiaddl
sub
mov
lock
pop
test
cmp
imul
mov
mov
incl
ljmp
int
jb
loope
jmp
lcall
test
lahf
aam
iret
mov
pop
mov
fists
pop
loop
xchg
jmp
dec
mov
jo
adc
lret
jbe
dec
popf
dec
sbb
shl
mov
add
daa
ds
cli
aaa
rol
lret
add
mov
loope
test
testb
mov
xchg
cltd
sarb
das
das
shrb
dec
pushf
movsl
sbb
xlat
xorl
inc
dec
cmp
mov
xchg
adc
add
std
decl
mov
and
rcrl
in
jecxz
pushl
rclb
js
jno
pop
push
data16
jnp
push
enter
xchg
push
jne
incl
hlt
sub
or
sub
fcoml
decl
mov
lcall
icebp
les
push
int
bswap
jo
jecxz
jp
icebp
jae
dec
cltd
jecxz
pushl
dec
aad
repz
mov
mov
imul
in
lcall
jg
fnstcw
neg
es
push
test
pop
mov
xchg
cli
lods
incb
pusha
es
mov
sub
outsb
push
clc
push
or
sarl
adcl
clc
mov
sahf
mov
ljmp
aad
incl
dec
xor
in
xor
and
ret
mov
addl
filds
adc
bound
jno
clc
mov
pop
addr16
jl
mov
mov
sub
ret
and
cltd
ljmp
ret
ds
loope
daa
jmp
pop
in
xor
mov
cmp
push
repnz
mov
sbb
pop
test
mov
nop
aas
and
pop
jae
loope
sub
icebp
pushl
jle
xchg
imul
ret
cmc
mov
push
sbb
and
repnz
sbb
es
xchg
mov
test
mov
jno
fucomip
gs
jg
adc
or
scas
gs
xor
lock
sarb
sub
ljmp
add
cmp
notb
rep
adc
out
data16
cmp
xchg
cld
out
lock
dec
ja
stc
inc
xorb
shl
ret
jns
xlat
push
jns
mov
nop
shlb
bound
out
mov
icebp
decl
sub
sub
out
adc
mov
cmp
idivl
xchg
loope
inc
xchg
notl
mov
fnstenv
pushl
mov
ja
mov
jne
scas
aam
test
sbb
mov
lcall
pop
push
jg
pop
mov
inc
push
mov
push
adc
das
lock
mov
incl
fnsave
pop
jp
inc
push
mov
scas
ja
ja
outsl
xor
jg
jl
rcl
adc
test
add
add
popa
add
push
incl
sbb
inc
mov
inc
inc
or
aad
repz
dec
lock
fstpt
xchg
or
and
fildll
mov
ljmp
out
mov
testl
adc
and
mov
mov
jmp
inc
dec
inc
subb
scas
jge
daa
ret
rclb
in
push
jg
inc
iret
imul
lock
cmp
scas
xor
add
and
dec
cld
call
pop
mov
inc
cmp
bound
cld
jge
push
mov
push
lret
loopne
dec
cmpsb
xchg
xstore-rng
cmpsl
add
lcall
push
inc
frstor
mov
js
sub
pusha
popa
into
add
mov
dec
and
cld
sub
cmp
and
jo
ja
das
mov
fisubs
ds
dec
push
jmp
mov
inc
xchg
out
enter
push
ror
add
jp
sbb
call
push
lock
pop
ja
rcll
stos
mov
push
rcrb
ret
sub
cmp
jmp
call
aaa
ret
and
sub
loopne
xor
ja
std
jp
or
mov
xchg
xchg
lea
lock
push
dec
jecxz
cmpsb
and
xchg
cmc
sub
jge
cli
jmp
loopne
jle
shl
jmp
add
sti
jmp
inc
inc
inc
decl
lds
dec
sbb
outsb
fcomps
lds
mov
mov
repz
ret
adc
in
add
sub
jbe
inc
mov
outsl
std
inc
shrb
mov
lret
mov
sbb
jg
jg
jns
cmp
sahf
sub
sbb
cli
jg
xor
stos
je
outsl
sub
les
cmpsl
cmp
mov
rcll
js
mov
inc
gs
lcall
mov
mov
cmpsb
jno
mov
ds
pop
lods
jmp
shlb
fwait
add
lock
xor
ret
jbe
push
lret
incb
lcall
mov
jl
adc
xchg
mov
jg
ljmp
dec
lahf
adc
sbb
cmpsb
ljmp
jg
mov
lcall
cmpsb
inc
repz
push
adcb
xor
imul
inc
shrb
xor
ret
stos
incl
push
jbe
push
dec
jg
jnp
inc
dec
push
aas
pop
je
cmp
incl
ret
daa
lcall
sbb
iret
mov
cmc
popa
inc
cmp
lret
aaa
mov
pusha
les
xor
push
aam
and
lock
in
cli
stos
sbb
mov
into
gs
cs
mov
pop
in
cmc
pushf
out
xor
mov
ficomps
std
repz
shll
lods
cmp
cmpsb
dec
push
lods
jg
mov
dec
jge
outsl
cltd
mov
dec
lds
outsl
lock
jno
fisubrs
mov
lahf
xor
daa
jb
dec
fs
rcrb
pop
hlt
in
or
out
jle
sub
mov
imul
repnz
jg
lcall
repz
mov
shl
inc
mov
push
mov
iret
insb
lcall
bound
mov
adc
sub
bound
jg
xchg
dec
shl
jmp
xchg
jg
and
push
xor
xor
adc
incl
dec
into
jmp
repz
add
pushf
xchg
or
push
xchg
lods
push
and
cmp
loopne
cmp
inc
jge
or
fistl
jg
sbb
cltd
cltd
inc
adc
xchg
mov
jl
fbld
lds
bound
jmp
sahf
das
mov
push
add
xor
imul
xchg
ud2
cmpb
aaa
mov
mov
decl
xchg
int3
pusha
jp
hlt
nop
test
sub
loop
ds
jg
lods
adc
push
ljmp
or
decl
adc
add
inc
push
icebp
mov
sbb
mov
cld
mov
ret
insb
pop
fdivrp
decl
sub
les
and
and
stc
pushl
pusha
aas
fistps
inc
inc
movsb
push
or
fdivl
push
dec
mov
mov
dec
cwtl
aas
das
cmc
call
pop
je
stc
or
mov
mov
loope
mov
sbb
lahf
shlb
jge
fistps
imul
cmpsb
into
inc
fwait
mov
aaa
mov
jmp
das
dec
inc
insl
mov
ja
inc
mov
inc
adc
ljmp
icebp
call
out
sti
add
aaa
scas
xchg
cmp
dec
jge
pop
or
dec
jecxz
call
bound
mov
adc
or
mov
lcall
or
scas
push
ja
and
mov
sub
jmp
lahf
ljmp
lcall
sbb
add
push
xchg
jae
sbb
popa
lret
mulb
jg
stos
enter
cwtl
paddusb
add
xchg
outsl
shr
add
popf
icebp
push
mov
cli
push
push
cmp
mov
pop
in
clc
mov
jnp
xor
mov
and
adc
orb
movsl
pushl
sub
dec
cs
pop
lock
jge
inc
and
pushl
dec
cmpsl
fdivs
sbb
call
dec
shr
mov
aam
jae
mov
inc
mov
pushl
data16
or
ret
scas
clc
shll
pop
xor
jns
pusha
or
push
pop
add
ljmp
icebp
add
stos
insb
mov
popf
lods
arpl
push
rclb
mov
incl
rolb
mull
dec
js
jge
jp
fstps
mov
mov
divb
adc
loope
adc
incl
xor
xor
mov
xor
dec
push
je
cmp
loop
dec
push
decl
lret
gs
inc
sub
or
pop
pop
xchg
mov
jmp
pop
lea
fldl
cmpsb
inc
inc
cmp
lea
mov
mov
add
jmp
mov
lahf
scas
pop
pop
mov
loop
pop
mov
dec
xchg
lods
fbld
sti
movsl
leave
and
or
idiv
mov
sub
mov
jg
adc
scas
lahf
and
incl
ljmp
adc
fisubrl
pop
mov
jo
lahf
push
out
jb
out
jbe
dec
std
cmp
inc
mov
pop
pop
dec
fcmovu
cmpsb
lock
add
mov
mov
and
sub
add
and
ret
push
fs
pop
scas
mov
jg
mov
lret
lock
out
mov
sub
aam
fdivs
test
outsl
hlt
testl
inc
inc
lods
les
test
pop
out
popa
inc
pop
adc
and
cmp
jbe
stc
fsqrt
lcall
push
mov
mov
push
add
das
cmp
mov
jno
inc
hlt
incl
fisttps
cld
push
jno
or
cmc
pop
pop
sub
push
cld
jg
or
fildll
push
inc
mov
cmp
lret
mov
mov
divb
lcall
outsl
cld
jmp
and
xor
inc
push
mov
sbb
aaa
lds
in
xchg
push
dec
xchg
scas
and
jecxz
paddw
pop
push
mov
and
lcall
hlt
js
gs
test
add
mov
outsb
das
cmpsl
lock
jb
loopne
add
imul
xor
in
ficomps
sub
loope
lcall
inc
adc
mov
cltd
jle
mov
xchg
decl
pop
mov
decl
push
cmp
out
cmp
xor
int
dec
mov
adc
out
mov
mov
pop
cli
ljmp
jbe
mov
mov
pushf
rcr
pop
mov
repz
add
outsb
frstor
add
push
jae
rcrl
inc
add
mov
cmp
out
rcr
jg
mov
ljmp
sbb
jp
das
jb
loope
cli
cmp
and
lds
mov
sar
xchg
jg
clc
ljmp
inc
out
push
outsl
out
loopne
or
lea
dec
lcall
std
repz
repnz
cmp
mov
ret
or
mov
sysenter
pop
loopne
xchg
jnp
in
fwait
cli
push
xchg
mov
xor
pushl
jno
cmpsl
xchg
adc
stos
sarl
inc
or
inc
mov
aam
mov
jg
jl
push
lds
jp
jmp
cmp
mov
push
loopne
loop
scas
sti
test
negl
sbb
call
es
adc
ljmp
fisttps
pop
inc
sbb
dec
repz
add
in
jmp
loopne
and
call
aas
or
jo
sbb
mov
aam
pop
lahf
jno
movsb
stos
and
les
repz
xor
dec
pusha
jle
cmc
mov
enter
das
iret
lods
arpl
call
add
dec
cmp
jo
sahf
shr
mov
lcall
aaa
shrl
popf
jp
cmc
xchg
clc
out
xor
and
push
ljmp
movsb
xor
loope
bound
cmp
jnp
dec
pusha
xor
xchg
decl
ficoml
rolb
mov
in
dec
fsubrl
jb
xchg
jecxz
test
stos
lods
test
cmp
lods
js
add
mov
jge
jg
das
cltd
dec
pop
dec
push
mov
push
stc
out
pop
mov
xchg
test
lret
stos
sub
out
pushl
popf
divl
push
jp
pop
jge
adc
fwait
xor
add
pop
push
aas
mov
jp
inc
mov
ret
aad
or
lea
xor
icebp
lahf
lds
test
pop
clc
incl
fildl
lock
mov
or
lcall
jl
xchg
mov
sub
adc
lret
xor
jmp
mov
cmp
loop
mov
jg
mov
test
sub
mov
fs
add
and
call
pushf
gs
add
lret
sti
mov
adc
mov
add
mov
test
repz
ljmp
lock
and
in
inc
or
mov
stos
mov
imul
lea
icebp
mov
pusha
mov
lret
ds
mov
lcall
mov
lods
push
cli
ror
sahf
lret
test
lods
cmp
pop
and
mov
call
sbb
mov
sub
daa
loopne
xchg
mov
iret
fwait
xor
aaa
add
fbld
in
loop
jl
jnp
pop
lods
popa
push
je
or
nop
xchg
pop
xchg
jg
pushl
jbe
push
jns
and
jmp
outsl
mov
jle
sbb
jl
mov
sbb
subb
jno
pop
ficompl
inc
daa
clc
fdivrl
sbb
jno
cwtl
xchg
or
call
call
push
je
icebp
loopne
ret
jns
or
pop
adc
decl
cld
mov
mov
sti
dec
adcb
icebp
repnz
orl
decl
jne
movsb
mov
pop
rorb
mov
and
rcl
clc
xchg
icebp
and
mov
sub
lcall
lcall
jmp
xor
jp
push
lds
ljmp
cmc
jge
ds
aad
jno
aaa
adc
mov
xchg
add
jne
popf
mov
ja
insb
mov
xchg
inc
mov
mov
mov
decl
dec
bound
add
in
lods
jo
push
xor
jae
adc
xor
fisubrl
and
aam
dec
xor
lcall
dec
adc
push
movsb
push
adc
test
xbegin
xor
jg
fildl
movsb
cmp
jmp
imul
adc
pop
xchg
mov
or
mov
fimuls
cwtl
jns
out
sub
lods
lcall
fnstsw
aas
out
test
jp
xchg
dec
loope
and
sub
pusha
or
mov
pop
imul
mov
lock
out
movb
stos
add
test
pop
hlt
pop
lock
incl
incl
push
and
pop
and
mov
fwait
or
pop
xchg
xor
fs
and
arpl
lcall
lcall
scas
clc
push
loopne
subl
ret
adc
push
cmp
cmp
mov
inc
gs
sahf
inc
dec
hlt
lcall
or
jb
ds
dec
fucomip
add
loope
ds
cmp
fidivrs
loopne
or
incl
or
iret
cltd
mov
sub
test
inc
jae
leave
cli
lcall
mov
lret
sub
mov
pop
inc
add
outsb
adc
es
popf
inc
jb
call
clc
jne
hlt
mov
mov
ljmp
sub
pop
incl
xchg
mov
mov
lods
pop
xchg
pop
int3
adc
in
push
xor
inc
fbstp
insl
pop
xchg
dec
mov
mov
fbld
popa
hlt
inc
xor
daa
iret
loope
add
int3
cmp
mov
int3
rorb
imull
decl
mov
into
pop
clc
add
xchg
add
jg
pushl
inc
inc
imul
xchg
mov
addr16
xchg
cmpsb
outsb
push
jmp
out
stos
inc
inc
test
scas
inc
addr16
mov
rorl
xor
xor
sbb
rol
repz
and
xor
in
mov
adc
ret
dec
cwtl
xchg
dec
push
nop
adc
add
outsl
je
call
inc
cmc
sub
or
lcall
daa
andb
aas
jp,pn
mov
loopne
loopne
js
jl
test
aam
mov
fbld
jae
xchg
out
and
in
mov
cmp
cmpsb
add
loop
jecxz
mov
jge
aas
test
test
stos
add
aaa
jae
sahf
adc
out
fcmovnb
mov
jg
into
arpl
inc
xchg
mov
idivl
pop
pusha
pop
inc
push
adc
add
shll
call
pop
mov
fsts
out
mov
dec
xchg
pop
adc
rcrl
mov
lcall
scas
pop
jnp
ljmp
out
fcmovbe
adc
std
loopne
test
ljmp
dec
pop
mov
cmc
mov
add
dec
shlb
jge
call
dec
out
sarl
cmp
outsb
and
mov
ds
and
std
or
jg
ljmp
push
and
imul
pusha
adc
jns
or
jg
stos
aad
cmp
and
cmpsb
ljmp
iret
push
jmp
outsb
mov
ljmp
shrl
adc
data16
inc
mov
xchg
xor
inc
aas
add
call
cmpsl
fstl
loopne
sti
stos
xor
jbe
mov
cmp
aam
add
xchg
jmp
pusha
mov
sub
mov
std
adc
arpl
adc
push
mov
repz
arpl
sbb
incl
decl
movsb
sbb
mov
daa
dec
push
dec
test
int
pop
cltd
rcr
call
push
or
rcl
push
push
xchg
enter
fildl
call
in
pop
loop
add
mov
lahf
push
xchg
jbe
pop
or
ljmp
decl
loope
xchg
in
nop
push
adc
sbb
mov
xchg
cli
lods
adcl
lock
lcall
cmp
incl
jg
pop
sub
mov
adc
mul
adc
cmp
cld
pop
xchg
test
ljmp
lret
and
pop
sbb
leave
push
mov
fwait
aaa
adc
in
ljmp
mov
dec
dec
jmp
aas
int
or
mov
push
sub
sti
adc
mov
mov
cmp
rolb
aam
jns
xorb
lcall
jns
jo
in
loopne
pop
bound
sub
mov
call
iret
mov
decl
int3
addl
xor
mov
fists
cmpsl
in
mov
imul
dec
cld
stc
lret
and
cmpsb
jns
addr16
mov
xchg
sbb
cs
push
shll
xor
leave
je
test
jmp
mov
outsl
imul
jg
cmp
movsl
mov
or
mov
pop
in
jae
lahf
push
pop
or
sti
xor
sbb
call
xchg
sub
fldl
jle
sbb
pop
in
or
jp
nopl
and
out
mov
flds
xchg
daa
dec
lret
lods
jle
inc
fnstsw
xchg
xchg
push
jmp
xchg
cmp
push
dec
ds
call
dec
push
stc
inc
sbb
mov
lret
dec
sti
mov
cld
je
jmp
rolb
pusha
sub
lcall
mov
pop
in
cmp
out
add
dec
arpl
clc
ljmp
es
into
popf
ficoms
stc
pop
in
push
loopne
ffree
pop
clc
push
lret
out
sub
adc
mov
push
loope
ret
pop
popa
rep
mov
mov
mull
incl
or
pop
xlat
out
inc
xchg
bound
fwait
pop
fidivs
sbb
push
cltd
pop
jb
mov
jmp
cmc
test
mov
icebp
pop
ss
jecxz
xor
jo
dec
dec
inc
loope
mov
lcall
pop
mov
mov
jle
push
dec
xchg
xor
or
or
or
cld
outsl
test
ss
push
or
scas
loop
aaa
call
fistl
andl
ljmp
lods
jmp
pop
sti
cli
or
sbb
jbe
movsb
pusha
xchg
test
xchg
pop
cli
call
jbe
and
sbb
or
sbb
and
jb
and
sbb
xchg
inc
cmp
inc
stos
inc
dec
inc
xorb
outsl
je
mov
cmp
enter
mov
pusha
pusha
adc
xchg
outsl
mov
add
js
and
out
cs
sahf
push
fimuls
iret
decl
std
fcompl
into
idivb
jmp
adc
scas
scas
pop
pop
inc
sub
je
mov
dec
lcall
jge
or
push
cwtl
cli
adc
push
out
stos
gs
pop
cld
dec
aaa
lahf
cmp
and
cmpsb
push
or
dec
fs
inc
fildll
mov
mov
jns
dec
cmp
dec
xchg
xchg
lret
bound
pop
rorb
nop
mov
fdivr
lcall
jne
xlat
cs
fs
jmp
add
add
jl
rol
notb
mov
cld
sub
movsl
pcmpeqw
xor
mov
and
mov
pop
add
adc
test
cmp
pushl
arpl
sarl
stos
jmp
or
sub
aas
das
fisttpll
idivl
jle
insl
cld
decl
popa
or
add
push
out
mov
enter
incl
stc
xchg
push
cmp
sbb
mov
or
xchg
inc
ret
repz
add
mov
ljmp
mov
fsubl
leave
and
cld
mov
and
pop
sub
jg
pop
loopne
mov
cmc
fistl
inc
je
jne
les
imul
and
dec
pop
testl
sbb
jbe
fstp
cltd
and
lcall
mov
out
fcompl
clc
les
loope
xor
lcall
cmp
xchg
in
fildll
rorb
fildl
inc
xlat
sbb
ljmp
jl
mov
adc
jb
insl
shrb
adc
subb
mov
dec
jg
lcall
push
lock
push
add
pop
cli
lock
shlb
fcom
cmp
sbb
loope
cli
fistpll
xchg
fs
mov
test
and
mov
lds
xor
movsl
jle
jp
imull
movb
mov
adcl
lcall
stos
mov
jp
jmp
or
and
adc
lea
sub
mov
mov
sbb
adc
sub
pop
sar
adc
sbb
mov
fidivrl
imul
and
sub
jmp
push
lcall
and
or
int
mov
jge
and
aam
es
cld
cltd
mov
mov
cs
or
add
fldl
xor
loop
add
shll
lcall
insb
aas
rclb
cmc
jl
push
insb
pop
xor
pop
or
out
inc
lret
call
rolb
stos
loop
inc
data16
and
mov
outsl
lock
mov
sbb
sub
add
rorl
loope
push
mov
mov
sbb
iret
stc
in
and
jg
sbb
jge
push
and
and
xchg
decl
scas
gs
add
hlt
sub
pop
xor
pop
mov
jnp
loope
jae
out
outsb
mov
add
ljmp
call
push
inc
leave
mov
shlb
cmpsb
test
cltd
jb,pt
icebp
inc
daa
lret
js
jmp
test
mov
adc
stos
mov
dec
ljmp
and
stos
sub
daa
mov
jb
pop
insl
ret
xchg
mov
cmp
sti
pop
mov
call
xchg
pushf
fst
movsb
push
add
mov
mov
ljmp
sub
faddp
and
cs
mov
cmpsl
adc
push
lret
pop
int3
cmpsl
mov
call
ljmp
and
scas
cs
mov
sbb
jl
clc
sti
mov
mov
dec
jecxz
mov
rolb
mov
cmp
xor
mov
fisubrl
and
and
ss
jbe
dec
adc
aad
mov
mov
mov
outsb
incl
cmpsb
xchg
sbb
sub
mov
add
push
pop
lods
fdiv
sub
jmp
fdivl
jae
out
repnz
sub
ljmp
std
es
dec
mov
cmpsb
mov
pop
jmp
add
adc
sbb
mov
inc
sar
ss
jg
ljmp
out
iret
cli
out
dec
or
mov
shlb
push
jmp
jge
stos
cltd
jns
sub
hlt
pushl
mov
push
pop
inc
dec
adc
mov
jg
fbstp
test
mov
inc
vhsubps
ret
loope
in
imul
outsl
pop
mov
dec
insl
and
icebp
adc
xor
addr16
and
repnz
fdivrs
add
mov
push
iret
notl
and
call
dec
lcall
pop
dec
and
inc
or
fnstenv
dec
cld
mov
sbb
jmp
inc
fwait
out
repz
out
jle
cmc
adc
arpl
fists
fisttpl
scas
icebp
add
adc
mov
std
data16
icebp
repz
xchg
mov
ljmp
jb
dec
scas
pop
mov
sahf
cmc
push
add
dec
inc
ret
std
jg
xor
shl
bound
std
push
andl
cld
mov
sub
jecxz
push
aaa
aaa
add
std
push
add
mov
fisttpl
ja
xchg
pushl
mov
adc
subl
lcall
push
test
pushf
cmp
repz
cmp
outsl
or
push
outsl
lods
inc
leave
loope
push
loop
aad
pop
clc
test
jno
pop
push
in
rcrb
and
mov
jg
push
xor
push
lahf
sbb
push
lods
jns
lods
and
lcall
in
outsl
cmpsl
sbb
jns
fildll
fcmovnu
push
aaa
jmp
das
imul
or
add
xchg
push
inc
and
mov
add
inc
jecxz
dec
fwait
sti
incl
or
dec
outsl
loopne
mov
loope
and
pop
out
mov
clc
pop
jle
push
andb
xchg
cs
and
ljmp
scas
stos
inc
cmp
mov
out
sub
movsb
pop
cld
mov
push
pushl
jb
out
cmp
insl
insb
or
or
in
push
pop
cli
mov
jg
dec
hlt
xchg
int3
push
orl
shlb
pop
cmp
mov
clc
outsl
lock
subb
filds
popf
aaa
pop
out
enter
mov
je
cmp
aam
rcrb
adc
mov
cld
stos
push
jnp
add
les
movsb
dec
addb
lds
dec
pop
test
xchg
sti
dec
pop
mov
xor
movsl
ret
in
xor
imul
int
aad
clc
arpl
ljmp
mov
movq
sbb
inc
gs
call
fdivs
stos
inc
cmpsb
loope
movsl
inc
call
lret
lock
cmp
mov
mov
lock
mov
ss
or
mov
lcall
push
adc
xchg
pop
dec
pand
mov
mov
in
xchg
jmp
xor
cmp
cmp
jmp
or
lcall
js
fucomp
pop
mov
jp
inc
fucom
stos
call
pop
hlt
out
lahf
lock
xlat
mov
push
inc
scas
xchg
mov
movsl
fwait
shl
icebp
jg
mov
mov
or
ja
rolb
repz
pop
mov
pushl
adc
inc
xchg
inc
inc
imul
ljmp
push
xor
push
pop
push
test
repnz
xchg
pop
xchg
in
xchg
xlat
call
call
aaa
pop
cwtl
sub
and
fstpl
jmp
mov
xchg
ljmp
pop
orl
loope
mov
in
mov
data16
sbb
pushl
popf
insb
addb
movl
jg
jmp
adc
outsl
inc
mov
in
pop
jg
and
lcall
popf
inc
sub
int
popf
int
sub
insb
mov
push
jmp
jo
filds
dec
mov
dec
jo
cmp
push
add
test
mov
xor
das
xor
pushf
cmp
sahf
xor
push
notb
lods
push
cltd
inc
nop
pop
ljmp
pop
lahf
push
stos
mov
dec
out
xor
dec
cld
daa
into
push
xor
jmp
loopne
test
das
loopne
xor
outsl
jle
rcrb
int3
and
xchg
stc
orb
cltd
dec
lods
js
popf
cmp
pushl
mov
int
loopne
add
adc
sub
pop
pusha
outsb
add
es
es
sub
lods
ljmp
pop
lcall
testl
test
mov
test
fistps
inc
mov
xchg
sar
and
ret
push
sub
lret
sti
out
jg
das
int3
es
jp
ja
xchg
std
rorl
pop
and
lea
fadd
sbb
sar
rolb
jl
ror
aaa
lods
aaa
add
sahf
inc
add
loopne
jecxz
clc
gs
pushw
mov
xor
mov
icebp
cld
inc
lds
daa
out
aas
loope
gs
in
dec
mov
jge
pop
popf
xchg
jge
dec
cmp
loope
fs
sub
dec
and
mov
sbb
call
clc
lods
mov
dec
mov
shrl
decl
xor
add
les
shll
cld
ljmp
leave
iret
xchg
cwtl
cltd
mov
xchg
and
inc
js
jmp
lahf
lahf
pop
jno
idiv
mov
pusha
nop
out
jp
sbb
call
push
movsb
in
lods
jl
cmp
imul
add
cmp
add
std
mov
call
sub
pop
jle
std
loop
mov
mov
fcomp
adc
xchg
push
mov
lcall
cmp
repnz
test
adc
mov
push
and
inc
into
iret
push
jg
test
push
cmpb
xor
ljmp
lea
test
dec
ja
add
and
ljmp
stos
cwtl
push
imul
sub
dec
sub
jg
popf
inc
dec
mov
insl
jmp
and
jle
xchg
insl
jecxz
xchg
in
lcall
push
jle
enter
xor
pusha
call
xchg
push
pushf
test
call
sub
push
cmp
in
repnz
sub
mov
xchg
cmpsl
div
or
std
xchg
cli
ljmp
push
xor
mov
daa
call
dec
sbb
xor
std
outsl
jle
sub
mov
jmp
jmp
int
add
out
xor
pop
adc
incl
xchg
hlt
stos
in
mov
ljmp
ficomps
addb
mov
stos
and
cltd
int
push
mov
mov
adc
out
mov
jp,pn
xor
adc
pop
roll
pop
repnz
in
xor
cld
leave
es
ljmp
loop
les
out
jb
mov
cld
scas
pop
jno
mov
adc
aam
gs
xchg
adcl
inc
push
push
cmpsl
jecxz
test
ja
notb
mov
or
fstpt
jno
sahf
jmp
stos
int
inc
int3
idivl
dec
pushl
aaa
add
dec
lret
lahf
rclb
xor
add
decl
xor
add
pop
dec
hlt
ret
add
push
mov
dec
and
mov
mov
ds
jecxz
outsl
jns
mov
push
aas
shl
lahf
pop
das
lock
incl
pop
sbbl
adc
pop
xchg
inc
in
mov
push
lcall
pushf
fstps
mov
or
cwtl
fs
or
insb
sub
dec
dec
cmp
dec
cld
jmp
shlb
das
push
or
cli
or
incl
test
lret
mov
cld
jg
jne
adc
xor
xchg
mov
pop
add
push
outsl
lock
jnp
ret
jnp
imul
add
mov
ss
mov
aas
push
xchg
test
adcb
cmp
pushl
test
inc
inc
add
movsl
pop
das
jge
mov
fildl
inc
sahf
outsl
mov
push
lcall
sbb
or
sub
and
pop
jbe
pop
jmp
lret
xchg
mov
dec
mov
mov
dec
jbe
and
pushl
test
mov
xor
ss
mov
daa
xorb
ret
stos
pop
ret
lret
xchg
inc
jg
rorb
stos
push
mov
adc
sub
inc
lods
pop
movsl
mov
out
dec
jne
hlt
in
and
cli
out
call
out
std
cmp
movsb
imul
dec
jle
pop
clc
mov
add
sub
icebp
pushl
push
xor
fxch
addr16
loope
dec
imull
lret
jae
call
push
pop
inc
mov
jl
loope
xchg
sar
mov
push
pop
mov
fistpll
incl
inc
mov
mov
xor
pop
ret
inc
cmp
test
shlb
add
les
lea
test
incl
aam
or
out
push
sahf
fs
inc
popa
int
andb
daa
mov
pushl
or
and
stos
daa
jge
mov
mov
out
mov
cli
pop
xor
aad
push
out
icebp
incl
pushf
add
frndint
cmpsl
fcmove
push
inc
add
sub
push
movsb
rol
pop
dec
push
jg
push
ss
repnz
psubusw
call
das
fisubrl
xor
xor
mov
call
pop
mov
fucomip
cmpsl
pop
pop
mov
imul
add
test
ljmp
pop
adc
test
scas
mov
popa
fwait
xlat
adc
adc
cmp
fstl
jle
mov
andb
ljmp
insl
push
aam
mov
pop
sbb
aas
mov
jo
xchg
lods
iret
mov
pop
jmp
and
inc
hlt
or
xchg
jnp
xor
jb
dec
lahf
mov
add
ljmp
nop
push
or
cld
testb
flds
loop
ret
gs
inc
sar
call
clc
jae
and
and
test
sub
mov
arpl
movsb
aaa
jg
dec
adc
popf
mov
push
popl
add
mov
inc
add
add
outsb
dec
gs
sti
ret
push
ja
stos
stos
jg
fistpll
test
cmpsl
movb
outsl
xlat
imul
inc
fcompl
aas
add
pusha
xchg
fnstsw
aas
or
pop
push
adc
stos
nop
lods
push
cwtl
xchg
movsb
decl
sbb
xor
daa
insb
dec
iret
xchg
mov
xchg
or
std
icebp
gs
pushf
push
lret
adc
lods
and
jp
sbb
lea
fmuls
sbb
jnp
ds
fldl2t
mov
outsl
mov
lods
lret
and
js
stc
dec
lret
movsl
push
sbb
push
data16
mov
pusha
inc
nop
add
lret
xor
jmp
mov
call
fsubrp
cmpsl
add
mov
mov
jmp
idivb
xorl
or
cld
cmp
pop
aam
pop
std
pushl
cmp
add
les
outsl
or
decl
jle,pt
sbbl
dec
lds
cwtl
cmc
sbb
jge
mov
xchg
jle
sbbl
cmpb
iret
inc
xchg
and
aaa
faddl
dec
fwait
xchg
je
test
ja
add
es
mov
sub
movsl
daa
mov
inc
mov
mov
jo
cmp
adc
mov
pop
adc
dec
or
int3
sahf
add
inc
inc
filds
add
add
mov
sub
pcmpeqb
ljmp
mov
je
loopne
test
stc
mov
inc
mov
movsb
fbstp
lock
incl
mov
repnz
ret
mov
push
sti
push
push
outsl
cmc
decl
scas
leave
jecxz
loopne
das
push
xchg
push
bound
dec
pop
aam
aaa
jge
scas
out
out
push
xchg
cmc
test
lcall
andb
ljmp
in
pop
in
es
jno
fbstp
in
stos
mov
imul
stc
testb
data16
incl
jp
jno,pt
sqrtps
sub
jne
push
sub
jbe
push
cmp
sub
addb
add
daa
adc
lea
mov
pop
sbb
pushl
mov
cmp
scas
sbb
jle
flds
test
xlat
adc
popa
inc
sub
decl
jne
jns
push
repnz
sub
xor
fsts
loope
cmp
loopne
xchg
pop
and
adc
mov
shlb
xor
push
aaa
aas
inc
loopne
add
pop
lock
decl
sbb
in
or
dec
cld
adc
inc
cmp
clc
sbb
dec
mov
jle
das
in
subl
ret
add
clc
mov
cwtl
aam
fisttpll
sbb
sub
notl
cld
xor
shl
cmp
cmc
inc
xor
jg
push
aam
roll
in
call
cmp
cli
jne
cld
sar
fildll
push
and
sbb
out
mov
dec
sbb
mov
ljmp
mov
nop
sarb
test
cmp
shl
jge
in
in
js
lcall
add
rcr
inc
cmp
into
and
mov
ret
ljmp
mov
hlt
jp
xchg
cmp
add
ljmp
sarb
xchg
out
add
cld
mov
pop
push
push
mov
push
imul
cld
inc
pop
imul
sbb
cli
enter
mov
ljmp
mov
xchg
test
lcall
add
jbe
lcall
incl
pop
and
add
imul
icebp
decl
xor
loopne
pop
movsb
out
out
or
rcrb
mov
sbb
ljmp
pop
fcoms
test
iret
xchg
jge
ljmp
pushl
addr16
mov
shll
stos
aaa
push
or
lock
pushl
movsb
loop
and
out
jns
mov
xchg
shl
jno
mov
sti
add
sub
dec
push
incl
outsl
out
cmp
scas
outsl
pop
pushf
cmpsb
dec
mov
popf
mov
sbb
push
dec
jl
jle
pop
mov
in
pop
ja
push
or
ljmp
adc
xlat
or
sbb
xor
mov
adc
call
jbe
les
adc
mov
and
movsl
mov
cs
fistpll
xor
sti
aam
push
call
add
mov
push
out
scas
bound
cmpsb
cmpl
pop
lret
sbb
das
sub
sbbl
cli
out
xchg
xlat
sahf
xchg
pop
lds
mov
loop
push
xchg
call
mov
out
jecxz
shlb
jp
or
fmull
fwait
mov
push
add
dec
aad
xchg
and
mov
stc
addr16
in
ljmp
and
lret
bound
dec
inc
xchg
outsb
loop
adc
ljmp
insl
std
decl
imul
push
gs
rcll
lock
mov
fcompp
dec
popa
lret
ret
jno
fildll
push
xchg
popf
adc
inc
dec
mov
push
pop
lock
notb
push
ret
cmp
xchg
mov
lret
pop
pop
mov
ljmp
lret
add
mov
inc
in
repz
enter
adc
fs
out
dec
jge
jmp
adc
sbb
je
jnp
out
sub
ret
push
cmc
decl
clc
pop
mov
testl
inc
xchg
mov
icebp
out
push
out
pop
lcall
dec
jno,pn
inc
rorl
jp
push
idivl
inc
je
jno
cld
sub
mov
stc
xchg
lods
decl
mov
cmpsl
adc
test
dec
outsl
aaa
jb
add
incl
rcrb
inc
fcoml
sbb
lret
loopne
jbe
lret
into
sbb
loope
adc
test
icebp
decl
xchg
pop
push
adc
ficomps
andl
jmp
insl
cs
jg
dec
jns
ret
push
daa
popa
int3
ret
and
xchg
lds
mov
inc
xchg
in
dec
out
cld
and
out
mov
in
xchg
mov
clc
pushl
out
and
icebp
dec
imul
dec
xchg
fs
mov
jl
mov
ficomps
in
sbb
push
data16
jmp
jmp
jae
pop
pushf
cli
cmp
adc
sbb
mov
cmp
call
mov
leave
lods
lods
sti
std
dec
dec
stos
jo
jl
mov
mov
mov
cmp
and
out
sub
cmp
cmpsl
rolb
outsl
arpl
sub
jnp
mov
xor
push
out
mov
or
pop
scas
call
scas
repz
cmp
pop
jae
sbb
mov
clc
jmp
dec
out
inc
dec
jecxz
xor
mov
test
fs
clc
aaa
mov
mov
int
in
divb
das
xchg
push
mov
mov
pop
mov
jp
push
nop
xor
fnstsw
loopne
call
adc
pop
repnz
xor
xchg
sbb
icebp
jl
lret
inc
push
dec
data16
outsl
rolb
cmpsb
inc
pop
std
pushl
out
stos
push
push
xor
cmp
popa
std
jecxz
jp
icebp
ds
adc
inc
adc
mov
jne
jno
movsl
push
or
clc
pop
pop
jge
repz
test
pop
enter
incl
scas
test
cltd
inc
xchg
fldt
lds
xchg
inc
lods
xchg
and
mov
mov
hlt
lahf
pop
and
mov
out
pop
add
pop
pushf
loopne
sbb
push
push
lods
adc
push
dec
divb
enter
nop
dec
xchg
mov
pop
sub
cld
mov
xchg
adc
cmp
jae
icebp
scas
mov
inc
aas
inc
and
pushf
adc
ret
insb
jl
or
pusha
fwait
and
push
call
into
jge
xchg
cmpb
es
mov
xchg
jg
jnp
repz
roll
cmpsl
lods
daa
stos
out
jle
and
pusha
sbb
inc
jmp
xor
fistps
sti
fdiv
push
out
fcom
fstpl
jmp
sahf
pop
sbb
rorb
loop
mov
cli
sbb
jp
inc
pushf
pop
je
pushl
mov
aam
outsb
sub
jp
push
aas
xor
nop
inc
jg
sub
lock
mov
ds
mov
mov
aam
push
ret
mov
jbe
xor
pushl
pushf
and
mov
cwtl
sub
notl
jl
fcoms
das
movsl
mov
push
jmp
jo
pop
add
jo
adc
mov
decl
xor
fwait
or
push
ss
push
xchg
push
ljmp
fildl
out
cld
inc
inc
mov
or
dec
repnz
aas
shlb
in
adc
add
jne
or
mov
outsl
insb
or
or
mov
cmpsl
fs
cld
rol
dec
lcall
and
imul
outsb
je
aaa
clc
jns
xlat
push
imull
push
sub
lcall
inc
and
enter
fdivl
xchg
xor
cmp
lret
mov
pop
mov
or
rcrb
call
mov
imul
les
jmp
lcall
rclb
jne
ds
add
adc
add
push
dec
mov
jp
inc
imul
call
cwtl
jns
push
inc
sub
dec
cld
jae
mov
repnz
sti
je
call
cmp
add
arpl
jmp
mov
fcompl
jno
mov
rcr
jge
jg
cmp
dec
in
xchg
mov
mov
dec
mov
mov
mov
jp
bound
out
mov
lret
sar
repnz
pop
push
call
ljmp
cmp
push
xchg
cmpb
loope
mov
lsl
pushl
es
push
ret
sbb
mov
leave
dec
and
xchg
xchg
push
push
mov
pop
cld
jmp
dec
push
adc
mov
stc
int3
add
or
hlt
ljmp
push
pop
nop
or
fcmovbe
rcrb
pop
add
ljmp
xor
ljmp
jmp
sbb
aas
pushf
aas
rcr
imul
mov
xchg
adc
ss
inc
call
add
sub
cmp
xchg
dec
xchg
iret
daa
iret
insb
push
pushf
out
mov
das
std
pushl
inc
popa
jmp
or
int3
dec
push
fwait
int
aas
loope
rep
gs
sahf
into
stos
loope
decl
push
xchg
cmpsl
mov
xchg
mov
sbb
shll
dec
je
mov
lcall
push
addr16
sbb
inc
div
ret
imul
dec
jg
jmp
test
inc
cli
fs
mov
into
sub
lcall
outsl
hlt
out
mov
sub
adc
jle,pn
push
cmp
out
ja
add
inc
incl
movsl
push
mov
loop
rolb
loope,pn
iret
xlat
push
std
inc
call
leave
sbb
or
sahf
mov
inc
outsl
mov
adc
mov
movsb
rcrb
and
cmp
sub
xor
aaa
decl
push
pop
jle
std
scas
cwtl
dec
test
adc
in
cli
mov
jg
pusha
fldenv
pop
call
cmp
and
aaa
call
repnz
arpl
das
inc
rolb
push
inc
xchg
cli
pushl
adc
sub
aas
ret
xor
std
add
data16
add
sub
fucomip
fldl
jle
pop
cld
sbb
add
sbb
or
scas
mov
pushl
enter
lds
hlt
int
div
in
jp
fistl
mov
pop
xchg
push
push
je
ret
xchg
cmp
test
test
or
ss
and
int3
sbb
cmpsb
mov
mov
es
jbe
cmc
das
icebp
mov
in
cmpsb
in
fiaddl
icebp
mov
fs
and
inc
outsl
sbb
cltd
icebp
xchg
push
mov
mov
out
clc
sti
movsl
mov
out
and
or
repz
out
cld
mov
cmpsb
push
fwait
mov
dec
out
lahf
out
clc
cltd
adc
pop
cmp
jmp
das
pop
je
xor
ljmp
push
inc
orl
mov
fwait
pushf
pop
pop
inc
xchg
pushf
popl
pop
loopne
lods
cwtl
inc
pop
dec
dec
xor
jmp
out
incl
dec
shr
inc
cmpsl
les
into
sbb
jae
mov
rorl
imul
ljmp
addl
movsl
jo
int3
dec
sbb
add
xchg
inc
sarl
insl
data16
jecxz
cs
out
stos
xchg
add
decl
push
or
mov
je
sub
mov
pop
dec
and
mov
cltd
addl
push
call
jmp
aad
xchg
leave
pop
call
mov
decl
dec
scas
xchg
sbb
xor
call
sbb
dec
pop
adc
mov
lahf
add
imul
mov
adc
push
pop
add
mov
sahf
insl
mov
clc
decl
jmp
cli
push
aad
jns
mov
xor
outsl
and
cmp
pop
sub
mov
push
jecxz
mov
das
hlt
decl
lods
test
xchg
and
test
icebp
or
aam
hlt
mov
fadds
mov
xor
imul
xchg
cwtl
xchg
jg
clc
outsb
mov
scas
mov
push
mov
push
call
cmp
ljmp
jb
mov
xchg
mov
mov
mov
push
jg
push
test
lea
jnp
or
leave
scas
lret
or
jg
into
and
sbb
outsb
dec
out
xchg
fwait
aaa
call
aad
sub
or
loopne
jmp
jae
fsubp
stos
cmc
adc
or
aaa
cli
push
lea
add
inc
sbb
in
mov
pushl
cli
pop
mov
mov
adc
jae
jmp
mov
incl
xor
and
mov
adc
mov
push
ror
xchg
or
jb
bound
cmpsl
jg
dec
loop
addr16
sbb
xor
out
sahf
jl,pn
call
call
pop
pushf
mov
in
sub
incb
adc
sub
aad
add
out
mov
fucomip
in
or
cli
mov
sbb
jl
xchg
mov
mov
xchg
inc
jmp
add
mov
pushf
ss
inc
movsl
jbe
sti
cmpsl
jne
inc
push
ds
adc
lcall
cmc
bound
sbb
sub
shrb
jmp
das
adc
mov
sarl
enter
cmp
cmp
int3
dec
or
sub
insb
cld
dec
push
add
sbb
fwait
stos
es
das
cmp
push
in
mov
lret
loope
notb
fldenv
repz
jmp
and
repz
loopne
repnz
int3
sbb
ljmp
hlt
test
mov
add
push
in
mov
ret
mov
add
out
mov
out
loopne
xor
push
dec
fstl
iret
xchg
jae
cld
dec
movsl
cmp
imul
loopne
and
or
mov
ds
ss
in
mov
shll
cmp
lcall
rcr
popa
pop
leave
xchg
and
stos
out
fstpt
sub
sub
jmp
loopne
add
jl
jb
jmp
outsb
mov
pop
sub
out
test
popa
mov
loop
push
xor
pop
js
mov
lcall
push
or
mov
lds
jno
xchg
mov
cld
shl
and
gs
decl
pusha
popf
loopne
inc
jg
mov
cwtl
fistpl
sub
cltd
mov
and
loopne
incl
jecxz
and
or
pop
test
out
sahf
mov
rcr
in
insl
mov
push
sbb
pop
push
arpl
negb
add
pop
ja
fs
arpl
out
jl
mov
mov
out
std
xchg
pop
insl
and
cld
js
cld
cwtl
ficomps
fstps
shrb
xchg
xchg
mov
aad
pushf
push
rcll
xor
dec
std
ljmp
les
xchg
mov
fwait
and
enter
mov
lcall
pop
imul
in
xchg
and
fcoms
mov
cmp
pop
lock
jmp
jae
jb
mov
pop
idivl
inc
fldenv
jle
jge
out
je
sub
xchg
inc
arpl
andl
je
cmpsl
push
push
push
jnp
xchg
clc
movsl
jle
add
in
xor
ret
addr16
call
lahf
cmp
inc
pop
jae
jno
rorb
dec
pop
adc
ficompl
ljmp
push
inc
jbe
imul
ss
data16
mov
icebp
pop
cld
call
and
sbb
scas
idiv
mov
lret
mov
pop
clc
movb
out
mov
addl
inc
lcall
pop
decl
sbb
xchg
mov
adc
dec
mov
mov
adc
jmp
rorl
xchg
jns
pop
push
push
cmp
sub
mov
in
mov
lret
push
clc
xor
lcall
push
add
mov
mov
adc
add
lods
fstl
leave
movsb
scas
loop
test
push
pop
mov
xor
jecxz
xchg
call
pop
xor
js
pop
xor
inc
fistpll
repz
jns
call
push
xor
xor
dec
or
mov
pop
loopne
loop
fidivrl
xchg
inc
daa
push
enter
pop
int
shlb
mov
mov
inc
outsl
lds
inc
stos
or
jns
scas
mov
les
ljmp
ror
es
call
xchg
and
mov
mov
test
xchg
add
jge
ret
mov
xor
jg
lcall
std
xor
fsts
lds
inc
sbb
dec
xor
or
add
and
push
jns
cmp
aad
shlb
outsl
or
loopne
mov
das
jb
pop
clc
test
dec
iret
sbb
dec
inc
pop
in
aaa
repnz
hlt
iret
out
jne
fisubl
incl
pusha
lcall
sbb
stos
enter
fwait
lds
xor
insb
inc
pop
clc
sub
scas
leave
jmp
loopne
inc
out
shufps
orb
push
pusha
push
dec
std
hlt
or
lret
sub
jmp
push
repz
iret
sub
jns
mov
test
push
cmp
ja
aaa
jb
adc
add
xor
outsl
insl
hlt
dec
and
out
and
sub
push
sub
jle
push
cmp
sub
mov
dec
xchg
jo
push
ljmp
jmp
jg
decl
xchg
cmp
inc
or
fcomps
insb
mov
fucomp
cltd
xchg
push
sar
incl
add
cmp
add
sbbl
and
add
mov
mov
lret
xchg
ds
shlb
push
mov
loopne
pop
in
push
pandn
push
bound
stc
bound
sub
push
movsl
and
push
repz
inc
xchg
mov
mov
push
shl
fstps
inc
call
jmp
ficoms
cmp
add
js
mov
lret
dec
ds
sub
lods
ljmp
es
popa
xor
xchg
inc
inc
pushf
or
dec
mov
sbb
or
and
shl
or
sub
add
xchg
cmp
ljmp
inc
cmp
add
loopne
arpl
repnz
outsl
or
and
pushl
out
call
mov
jle
lcall
mov
daa
adc
cmp
pop
clc
inc
divl
adc
inc
inc
push
movsb
cmpsb
adc
mov
mov
push
mov
stc
in
aaa
mov
xchg
and
sub
adc
lcall
inc
nop
jge
leave
sahf
cmp
jle
sbb
cld
push
mov
inc
ja
pop
or
lret
lahf
adc
bound
cmp
or
pop
stos
mov
in
fnstenvs
mov
scas
lock
popa
jp
adc
pop
imul
sahf
push
std
push
lret
ja
clc
sub
mov
filds
dec
ds
push
xlat
mov
test
or
inc
add
jg
fwait
mov
loop
mov
mov
shr
fistpll
stc
outsl
loop
insl
mov
mov
fcomps
bound
std
jg
pop
mov
std
test
jo
cli
push
push
sub
mov
ja
decl
int3
pop
push
mov
fldenv
mov
sahf
dec
int
xchg
pop
ljmp
adc
dec
roll
or
mov
sbb
decl
gs
jl
mov
cmpsl
push
loop
ljmp
sub
fcomp
mov
mov
stos
lock
mov
fcmovnbe
cld
movsb
lahf
xor
loope
mov
movsl
sub
std
cld
cmp
mov
jge
sbb
test
mov
call
pushf
test
or
clc
push
dec
jns
cmpsb
xchg
pop
add
cmp
ljmp
scas
hlt
int3
and
sub
out
mov
adc
xchg
add
lcall
add
adc
inc
incl
xor
lods
addb
subb
mov
inc
push
stc
adc
fildll
loop
loop
push
sbb
xchg
xchg
push
sbb
jp
cwtl
jnp
mov
lcall
popa
mov
aas
pop
jmp
mov
push
mov
decl
lea
repz
test
push
mov
mov
fsub
sub
sub
cmpsb
imul
ljmp
inc
mov
rorb
cmpb
and
or
aas
dec
jge
mov
gs
jo
jg
out
mov
insl
and
jp
out
sar
pushl
sub
stc
adc
int
mov
and
call
pop
sbb
arpl
xchg
cld
mov
push
mov
sub
mov
xchg
scas
add
out
xchg
lahf
sbb
dec
shll
das
pushf
add
inc
xor
xchg
sub
sub
stos
bound
sbb
push
stos
ljmp
mov
test
mov
stos
jns
and
mov
jge
xchg
pop
push
jne
jmp
imul
pop
shll
ds
mov
aaa
clc
cld
xchg
fwait
mov
xchg
jp
inc
add
scas
sub
cltd
faddl
xchg
ret
sti
aad
lcall
xchg
and
mov
mov
cwtl
jp
sti
adc
call
pushf
call
imul
push
sbb
addr16
dec
push
pop
es
lcall
xor
das
in
sbb
std
push
lock
insb
lock
sbb
xchg
xchg
or
leave
mov
mov
xor
or
mov
xor
adc
lods
shlb
dec
lcall
stos
dec
mov
jge
gs
cmp
in
mov
stos
pop
pop
mov
mov
inc
or
pop
not
xchg
in
pop
cli
decl
add
sti
sahf
sti
popa
outsl
xchg
jg
ret
pop
in
inc
inc
decl
into
xlat
mov
cmpl
loope
addr16
mov
decl
dec
fs
fidivrl
or
pop
dec
call
incl
adc
mov
test
xlat
sub
mov
bound
loopne
pop
cld
cmp
addr16
into
sbb
pop
scas
mov
aas
inc
mov
int3
push
cmp
pop
out
ljmp
fs
mov
xor
jecxz
xlat
push
inc
ror
lods
and
push
fidivrl
push
pop
ljmp
int3
inc
out
or
sbb
mov
xchg
jecxz
sub
xor
pop
push
xchg
roll
sar
shlb
nop
repz
cmp
jb
outsl
jb
sahf
push
inc
ljmp
sbb
movl
cmc
sti
outsb
aaa
int
dec
push
add
ljmp
sbb
das
lcall
test
out
insl
mov
in
dec
jo
out
push
sarb
mov
dec
pop
addr16
sub
je
mov
test
lcall
fsub
movsb
inc
mov
call
aam
fwait
mov
mov
call
and
adc
jne
jns
int
push
add
sub
pushl
push
add
add
in
cmpsl
pop
cmpsl
lds
je
cli
fisubl
out
lret
pop
incb
test
mov
movsl
mov
dec
lret
movsl
pop
aam
test
loopne
cld
ljmp
int3
into
outsb
popf
data16
and
in
pop
mov
push
iret
cmp
cmc
sarb
jge
decl
js
mov
das
mov
mov
dec
ljmp
jge
inc
mov
cli
pusha
out
jne
adc
xlat
popf
iret
subl
cmpsl
dec
mov
call
push
cmpl
mov
mov
insl
mov
jg
mov
and
xor
jecxz
movsb
negl
int3
mov
pushl
std
ret
in
sub
xchg
jge
or
inc
addb
fdiv
sbb
mov
dec
jmp
push
add
cmpsb
xor
call
pop
push
mov
xor
push
in
insb
jp
cmp
pushf
or
adc
lock
pushl
cltd
jae
cmp
push
xor
xchg
rolb
cmpb
clc
ftst
xchg
rolb
sar
jg
sub
jecxz
cmpsl
add
ljmp
dec
adcl
mov
sbb
repz
sahf
jl
not
push
arpl
pop
mov
cmp
fs
add
fcmovnb
int
lcall
test
or
cmpsb
hlt
lds
vcvtsd2si
shr
pop
push
fldt
dec
or
push
divb
mov
xchg
rcrl
movsl
cs
jmp
andl
jo
or
xor
lahf
jbe
push
shlb
adc
aam
sbb
lcall
pop
xorb
jp
sub
fwait
jmp
data16
and
fdivr
sub
cs
jp
jecxz
add
lret
push
hlt
incl
xor
jmp
lods
popa
aaa
int3
fmuls
mov
cwtl
cld
jmp
jno
or
and
cmp
rol
decl
sub
popa
lcall
dec
arpl
or
sbb
jge
pop
inc
jne
sar
ljmp
arpl
cmp
mov
nop
sub
mov
jg
xchg
cmp
fcoml
sub
fidivrs
in
add
adc
jae,pt
lods
ss
xchg
cmp
into
add
jmp
lods
adc
stos
push
mov
movsl
in
jl
dec
adc
mov
and
movsb
sub
jge
mov
scas
loop
xchg
jl
inc
faddl
jns
mov
incl
pop
pop
jo
sti
push
repz
int
repnz
int
xchg
popf
and
dec
fsubl
fs
cs
aas
test
insb
incl
jns
pop
pop
mov
dec
mov
in
scas
pop
jno
clc
mov
into
sub
cmpsb
adc
cld
ljmp
divb
rorb
ljmp
sub
aas
or
or
cli
push
insb
jno
outsl
pusha
sub
adc
std
das
lock
pushl
sbb
adc
cmpsl
push
mov
loopne
push
or
aaa
xor
pop
cli
push
inc
adc
les
popf
out
cli
lods
mov
and
rcrb
jnp
in
hlt
cltd
nop
pop
pop
iret
mov
incl
shll
stos
and
cmp
adc
mov
or
jae
jb
std
or
xchg
adc
mov
ds
loop
imul
gs
jecxz
xchg
mov
xor
cmpsl
repz
pop
push
cltd
cli
lcall
adc
xchg
or
push
push
jg
pop
int3
lock
push
shrb
call
loopne
push
ja
cmp
mov
dec
idivb
push
loopne
cld
sub
ljmp
stc
sar
jg
loope
or
sar
je
aad
and
pop
mov
xor
ss
and
leave
call
aad
in
daa
cld
call
pop
jnp
cmpsl
push
push
push
inc
pop
push
mov
xchg
sbb
in
push
push
push
lds
or
jg
or
pop
ljmp
pop
nop
push
inc
mov
lcall
out
sbb
push
fcoml
push
inc
sbbb
lea
ds
mov
xchg
xor
mov
ret
ja
lcall
in
sub
jne
pop
ljmp
pop
and
iret
movsl
and
pop
mov
icebp
and
pop
sub
loop
mov
out
pop
bound
xchg
pushl
add
or
jns
enter
mov
inc
orb
push
jmp
jb
out
xchg
pop
fdivrp
dec
xchg
pop
int
insl
aam
add
jno
mov
push
pop
hlt
sar
ljmp
fwait
ret
push
into
xor
mov
scas
fidivrs
jo
mov
jb
stos
pusha
movsl
jg
incl
gs
push
nop
fwait
ljmp
test
pushf
outsb
imul
and
shrl
cmpsb
int
adc
cmp
or
jno
sahf
pushf
or
xor
decl
lret
add
mov
mov
xchg
popa
into
ja
aas
sub
add
inc
add
mov
test
and
cmc
test
jnp
les
ljmp
push
insl
hlt
repz
js
fidivs
test
sahf
sub
lahf
aam
or
mov
ret
mov
js
inc
dec
push
and
popa
cltd
popa
aam
and
sbb
fisubs
push
pushl
adc
insl
ja
daa
sub
out
pusha
in
mov
out
and
jns
ja
repz
push
xchg
stos
mov
and
pushl
je
inc
daa
cs
dec
mov
mov
cmp
mov
mov
rolb
mov
into
lahf
incl
scas
out
les
mov
negl
push
fmuls
push
mov
stc
stc
test
cltd
cmc
or
pop
cmp
mov
in
je
testb
xchg
fcomi
inc
aam
add
cmp
xchg
inc
dec
cmp
xchg
sar
jg
mov
or
xlat
adc
data16
xchg
cs
push
push
mov
push
jmp
mov
adc
push
or
repz
xor
ljmp
sub
sub
lret
clc
mov
test
aad
sti
fcmovnb
jne
inc
mov
jmp
xchg
lcall
dec
xchg
dec
mov
add
mov
push
sbb
outsl
mov
pop
push
movl
jl
pop
mov
push
pop
mov
cmp
jae
push
jl
mov
sub
cmc
mov
arpl
out
inc
lods
rcr
ljmp
decl
jl
xchg
inc
mov
inc
pop
lods
je
pop
adc
enter
fisttps
sub
repz
out
jmp
inc
not
jg
arpl
fcomps
adc
incl
mov
movsl
mov
mov
shlb
jmp
jle
adc
bound
sbb
mov
popf
repz
adcl
shl
gs
stc
es
push
jg
xor
inc
xchg
mov
or
into
mov
scas
testb
in
mov
repnz
jg
ljmp
in
inc
je,pt
imul
shr
push
and
sti
aaa
sbb
sub
or
inc
stos
negb
clc
lds
in
lock
inc
jg
jo
add
mov
lcall
xchg
inc
add
xlat
dec
xor
imul
xlat
aaa
xchg
mov
mov
push
inc
shlb
jno
adc
push
call
imul
notl
push
mov
push
pop
adc
xchg
movsb
push
movsl
add
adcb
decl
cld
test
push
push
das
sub
sbb
arpl
jbe
lcall
mov
das
cwtl
mov
inc
jge
daa
inc
add
or
pusha
frstor
cmp
lcall
dec
add
adc
fwait
hlt
mov
jns
cmp
push
cmc
mov
clc
mov
inc
cmp
cmp
mov
loop
inc
sub
sbb
sbb
mov
insl
int
xorl
xchg
mov
movsl
fwait
jle
xchg
and
xchg
inc
add
in
fdivl
iret
and
cmc
mov
jecxz
pushl
int3
push
fiadds
imul
dec
fcomp
dec
ret
mov
jg,pt
mov
leave
push
or
decl
rcrl
cli
rcrb
add
cmpsl
mov
xor
adc
jg
aaa
xor
cmp
and
dec
cmp
mov
sti
sarb
or
inc
push
sub
lcall
sub
rcll
imul
jae
add
jg
inc
pop
mov
mov
leave
aaa
jecxz
btr
add
lcall
mov
inc
sbb
dec
jns
dec
cld
loope
in
mov
popf
mov
inc
loop
faddl
popf
fmull
mov
mov
mov
out
jbe
subl
push
adc
inc
out
jo
adc
lcall
in
mov
lcall
and
push
fildl
int
lea
mov
outsl
std
mov
adc
cwtl
popf
mov
inc
mov
call
clc
push
daa
mov
or
sub
jae
inc
and
outsl
fsub
pop
loopne
jne
mov
jle
sub
decl
lahf
inc
loope
dec
adcb
smsw
divl
mov
jbe
in
inc
sub
cmp
cmp
jo
bound
imul
pop
test
incl
push
test
psllq
mov
lea
stc
xchg
jmp
pushl
dec
ja
les
pop
push
das
outsl
cmp
cli
jg
sub
jb
inc
aaa
imul
jmp
daa
xchg
dec
std
ret
adc
cli
insb
adcl
inc
adc
loop
fbstp
mov
mov
dec
and
jmp
add
dec
mov
and
push
pusha
lcall
xchg
sti
or
pop
movsl
jecxz
iret
out
daa
imul
add
jg
call
and
call
push
notb
xor
xor
mov
lcall
adc
cld
mov
adc
roll
outsb
cs
jb
ljmp
push
pop
inc
inc
push
pop
aaa
or
stos
mov
mov
mov
adc
sub
jmp
xchg
cli
push
xchg
das
out
arpl
es
ds
mov
int3
xor
das
mov
jmp
jg
loope
add
xchg
hlt
or
adc
addr16
add
aad
push
decl
xor
xor
push
xlat
add
es
fucomip
jno
push
filds
outsb
dec
les
cmp
ja
sbb
cld
lea
jge
test
or
lds
ds
fcmovu
mov
jb
sub
decl
dec
and
stos
bound
push
adc
sti
mov
pop
call
add
cmp
ljmp
mov
out
dec
cmc
ret
iret
lahf
in
xor
decl
call
lahf
mov
jl
hlt
and
daa
fwait
pushl
clc
mov
dec
addr16
repz
out
pop
pop
add
pop
clc
lcall
jecxz
adcb
dec
aad
adc
lcall
out
mov
adc
lahf
or
push
pop
js
aad
mov
fists
jp
mov
lret
pop
or
add
movsb
jle
jb
mov
cwtl
das
imul
jmp
jmp
push
cmp
push
mov
or
pop
aad
cmp
jbe
flds
mov
daa
aam
and
sbb
out
mov
add
shr
int
jg
ret
repnz
int3
jle
xchg
mov
mov
sbb
jmp
sub
repz
jmp
out
pushf
mov
loopne
cld
jge
push
and
and
aad
pop
inc
lods
ja
jb
out
pop
push
aad
jmp
mov
and
lods
adc
push
mov
sar
and
push
insb
and
andl
lods
icebp
jo
outsb
hlt
decl
cwtl
push
cs
ret
je,pn
cmpsb
das
cmp
cmc
mov
push
dec
sbb
jp
xchg
incl
mov
xchg
ljmp
out
out
sub
mov
decl
movb
inc
fnstcw
xor
pop
cli
fnstenv
aas
jbe
ss
ljmp
mov
jg
add
cmp
scas
js
mov
cli
pop
sub
aam
sub
pop
cmc
sub
lcall
ljmp
outsl
jno
lock
loop
lds
testl
mov
dec
xchg
jg
outsl
mov
jnp
call
mov
into
pushf
movb
scas
jl
jnp
in
push
pop
inc
xchg
icebp
jne
inc
cs
inc
mov
and
xchg
jb
imul
mov
adc
xor
adc
fcomps
lret
inc
sub
stos
icebp
outsl
repnz
insl
mov
cmpsl
insb
push
sar
mov
mov
movsl
pushl
inc
fstpl
sub
mov
dec
push
dec
push
js
dec
decl
insl
lock
pop
movb
mov
in
incl
xchg
fisubrl
das
call
pop
mov
ficomps
pop
ljmp
inc
sar
xor
lods
xchg
push
loopne
lods
stc
adc
scas
mov
popf
ljmp
cmc
jle
mov
fwait
in
fsubr
dec
test
jmp
ljmp
scas
fnstenv
xchg
test
loope
push
sub
repnz
xchg
pop
scas
rcll
lods
jmp
popf
mov
push
pop
ljmp
and
movsb
out
mov
dec
ficompl
cli
sub
shlb
mov
das
adc
outsl
dec
jbe
lret
leave
pop
movsb
jg
pushl
xchg
sahf
in
imul
lea
notl
ljmp
ljmp
lret
mov
fldcw
mov
stos
test
decl
lock
insl
inc
dec
cmpsb
ret
and
daa
add
mov
incl
mov
sub
mov
sub
inc
xchg
mov
mov
fwait
xor
xchg
jg
aaa
fildl
rcr
andb
in
daa
dec
frstor
mov
orl
lret
aam
sbb
push
incl
sub
push
ficoms
pop
mov
orb
cltd
hlt
in
sahf
stos
pop
mov
call
push
lret
sar
cmp
rolb
imul
xchg
loopne
and
push
das
popa
add
stc
ss
xchg
call
xchg
cmp
aad
aad
faddp
negl
cli
insb
call
mov
test
sbb
decl
inc
or
or
and
jbe
push
pop
jle
inc
and
aam
ljmp
pop
cbtw
mov
adc
push
stos
jbe
jbe
sbb
fidivrs
jne
loop
jnp
mov
mov
push
pop
cld
call
imul
mov
cmp
jne
ljmp
aad
lret
push
sbb
mov
jb
jecxz
sub
or
mov
jp
mov
xchg
cmp
in
iret
xchg
or
pop
mov
outsb
push
xor
ror
outsl
jge
jmp
sub
add
xor
push
cmpsl
popl
sub
idiv
call
inc
inc
lahf
cld
jle
cmp
popa
sbb
rol
fimull
jns
and
jmp
cmc
outsl
pause
test
aaa
push
movsl
nop
jg
mov
push
out
add
sub
decl
ret
out
jge
inc
xchg
sub
and
js
cli
js
mov
in
mov
and
shrl
insl
push
ficomps
call
clc
aaa
xlat
test
push
jb
in
mov
insb
add
lahf
jae
decl
push
adc
sub
outsb
mov
jg
lret
addr16
sar
mov
rcrl
fdivr
sbb
mov
incl
dec
ds
scas
imul
test
push
dec
mov
out
jg
pop
std
lock
ret
gs
dec
dec
std
jns
cld
mov
fcoml
and
mov
lret
lret
push
int
cmp
pop
push
fdivrl
lds
mov
sbb
int3
int3
out
xor
sub
mov
bnd
jg
fists
cmp
cmp
das
cmc
jg
lahf
into
inc
adc
aad
icebp
dec
cwtl
in
ficoms
incl
lock
cld
jecxz
cld
and
and
or
pushl
add
out
or
adc
lea
dec
les
push
dec
stc
adc
pusha
aaa
mov
mov
call
stc
sbb
inc
xor
xchg
jmp
leave
mov
xor
stc
push
sbb
shll
lcall
pop
push
enter
sti
add
dec
and
les
mov
cmpsb
add
pop
insb
leave
mov
gs
push
popf
mov
mov
xchg
cmc
push
call
adc
mov
std
or
pop
aaa
insb
clc
pushl
ret
shlb
mov
adc
xor
cwtl
xor
out
and
mov
or
decl
mov
and
clc
or
and
mov
sbb
scas
jmp
mov
test
jns
jge
jg
insl
jae
adc
call
outsl
std
jae
adc
sbb
sbb
push
ss
int
cli
add
cmp
cld
movsb
int3
ljmp
out
pop
repz
stc
out
sbb
pop
data16
dec
mov
jg
decl
in
loopne
stos
push
imul
mov
xchg
xor
sub
or
add
mov
mov
mov
mov
mov
add
mul
call
test
rol
lcall
inc
cld
cltd
inc
jge
mov
mov
push
rolb
lcall
test
sbb
aad
into
cli
inc
push
mov
add
mov
mov
test
mov
mov
jb
mov
clc
push
pop
std
xchg
and
mov
loopne
cli
xchg
push
popa
repnz
movsb
mov
out
hlt
dec
std
lcall
dec
cmp
sbb
lock
lods
jbe
inc
nop
mov
add
cmp
jne
add
stos
push
idivb
sbb
adc
dec
inc
dec
and
or
push
dec
or
adc
bound
push
pusha
push
pop
sbb
ljmp
sbb
out
aam
cltd
cmp
dec
xchg
xchg
in
adc
mov
xor
sub
add
ljmp
in
or
std
inc
rorb
pop
ret
jno
mov
xchg
lret
sbb
push
mov
scas
dec
into
pop
xchg
stc
push
out
pop
xchg
lods
sbb
push
dec
xchg
xchg
push
popf
rorl
cmpsl
out
call
jns
repnz
adc
rcrl
fldenv
mov
shl
cmp
movsb
das
sbb
mov
mov
adc
sub
aaa
and
fwait
imul
push
outsl
fistpl
adc
add
push
jb
insl
xor
ljmp
push
lahf
repz
mov
icebp
into
pop
imul
negb
adcl
lds
sub
push
pop
mov
jne
leave
mov
aaa
clc
dec
pop
inc
pop
repz
cs
mov
pop
sbb
testl
add
sbb
xchg
and
xor
xchg
cli
xor
mov
ljmp
dec
das
dec
jecxz
fisttps
mov
adc
clc
cmp
mov
mov
lcall
cmpsl
stc
out
es
and
xchg
cs
jmp
arpl
popf
es
leave
xor
adcl
add
adc
fwait
lcall
pop
adc
test
mov
divl
stc
xchg
imulb
and
jmp
sbb
ds
adc
stos
add
lods
pop
cli
ss
decl
scas
aad
jmp
xchg
jl
xor
jmp
decb
cli
jmp
test
xor
daa
pop
mov
jae
loop
js
addb
clc
fldenv
pop
cli
mov
jge
push
xchg
mov
stos
dec
xor
stos
js
ret
sbb
inc
lret
imul
sti
pushl
sbb
aas
xchg
jnp
sub
and
mov
mov
jne
inc
sub
sub
fnstsw
in
mov
mov
jl
jecxz
lcall
mov
jle
cmp
call
inc
mov
fldcw
pop
or
pop
xorl
xchg
popf
push
and
cmp
incl
xor
lret
call
mov
mov
push
lods
add
add
test
push
movsb
push
cmp
adc
loope
notb
sub
cmp
jp
fsubrs
test
jo
or
jp
int3
movsb
mov
jp
std
sahf
sbb
lods
cld
stc
adc
cmp
or
xchg
jp
mov
scas
movsb
lahf
jne
pop
sarb
dec
nop
add
call
clc
jle
jl
fisttps
scas
inc
cmp
iret
fsubs
jle
nopl
lret
adc
cmpsb
mov
imul
fisubrl
jns
lcall
movsb
cmp
enter
pusha
ds
cmp
int3
mov
pop
fcomps
incl
sbb
out
mov
popf
outsl
mov
repz
adc
sbb
push
pushl
into
lahf
and
sbb
fisttpl
test
ljmp
clc
pushl
out
mov
mov
adc
das
cmc
pop
mov
jecxz
mov
mov
cmpsl
iret
aad
cmc
jg
movsl
push
cli
lock
xor
adc
mov
xchg
fldl
sub
scas
fucomip
ljmp
xor
mov
mov
adc
jbe
pop
mov
cmp
pop
inc
mov
int
pushf
arpl
addr16
aaa
xlat
std
decl
ljmp
cmp
xchg
test
xor
jg
inc
sub
xor
dec
clc
xor
push
lahf
in
jo
mov
sbb
adc
lcall
mov
pusha
inc
stos
jne
in
jp
js
sub
les
mov
pushl
inc
sub
test
adc
lock
mov
fistps
dec
decl
and
cwtl
mov
movsb
hlt
push
push
or
stc
je
dec
mov
mov
insl
dec
aam
cmp
xchg
scas
jnp
mov
mov
cltd
pushl
incb
xchg
cmpsb
out
inc
xchg
mov
mov
cltd
jmp
into
stos
enter
mov
mov
cmp
adc
mov
int
sbb
mov
aad
int
and
and
push
jne
or
push
out
rep
and
sti
jecxz
lcall
incl
outsl
testl
or
or
fucomp
cmp
jg
dec
cld
in
sahf
adc
iret
rep
push
loopne
xlat
jp
fldt
jg
ljmp
ja
decb
cmpsl
inc
push
add
into
test
push
rcrb
or
lcall
std
ljmp
cmp
nop
ds
sub
jo
es
adc
lea
scas
sub
xchg
mov
cltd
jg
add
jns
lcall
cmpsb
xor
add
pop
and
arpl
ljmp
lods
jl
mov
fsubrl
pop
lock
push
ret
push
mov
or
lret
stos
xchg
fcoml
mov
imul
out
loope
repnz
xchg
js
fs
inc
add
adc
aaa
jecxz
add
das
scas
lret
mov
outsb
add
pop
clc
call
test
cmpsl
shlb
sar
hlt
push
or
loopne
dec
pop
mov
call
imul
mov
cmp
push
push
call
repnz
add
mov
jbe
sub
aad
inc
sbb
int
push
fcmovnbe
pop
js
mov
mov
cmc
adcb
mov
mov
ljmp
xor
aaa
sub
pop
in
pop
inc
jle
jmp
push
add
ret
lock
enter
into
push
mov
sbb
cld
ljmp
lock
cltd
pusha
je
mov
jge
movsb
cmpsl
stos
clc
les
test
adc
add
pop
les
cmpsl
loope
loope
dec
cld
cmp
pop
outsl
test
gs
outsl
shlb
in
add
jmp
cli
incl
jg
movsl
fstps
xchg
add
fwait
mov
pop
and
pushf
repz
pcmpgtw
mov
mov
xchg
xor
call
aaa
clc
sub
xor
xor
jno
pop
dec
in
mov
out
lret
pop
jae
mov
dec
orb
hlt
call
in
lret
loopne
xchg
mov
dec
mov
xchg
add
movsl
cld
pop
ret
orl
dec
cmp
aaa
mov
bound
stc
dec
xchg
xchg
pop
cwtl
insb
and
pop
cld
jmp
mov
xchg
lret
iret
scas
inc
mov
push
cmpsl
gs
mov
and
call
call
pop
les
sbb
or
call
inc
jmp
movl
sahf
push
lds
icebp
idivb
pop
ljmp
xor
pop
and
push
mov
cmp
add
sbb
dec
mov
mov
test
and
js
stos
inc
xchg
rcrb
inc
movsl
lcall
repnz
sbb
int
pop
mov
add
inc
push
push
bound
out
pop
outsb
sbb
push
rcr
cmp
nop
aas
cs
adc
mov
adc
lcall
ret
mov
xchg
in
sbb
aas
cmc
lcall
lret
xchg
and
movsl
out
mov
jg
aad
rcll
dec
hlt
les
or
push
or
xchg
mull
rolb
outsl
sub
pop
adc
popf
loope
inc
add
jp
in
out
out
push
ficomps
jl
jg
ret
lea
into
or
xor
shrl
pop
test
mov
cmp
call
jge
js
sbb
jo
cmc
or
jmp
sub
das
or
sub
mov
mov
adc
inc
adc
or
xlat
fdivl
lcall
adc
lods
cmp
pop
cld
cmpsb
fimuls
mov
call
lods
test
mov
imull
mov
jg
and
add
in
repnz
cltd
push
testl
loop
xchg
inc
mov
lock
in
xor
mov
add
int3
xchg
cmpsb
mov
xchg
and
sbb
arpl
push
mov
jo
shlb
mov
cmc
jg
jmp
dec
dec
lret
and
push
aaa
dec
mov
test
shlb
ja
adc
lds
cmpsl
and
cwtl
sarb
scas
jecxz
fisttpl
fildl
or
jno
jns
jg
pushl
outsl
insb
mov
xchg
fwait
dec
inc
add
std
rep
test
mov
mov
fwait
mov
pop
sub
sahf
aas
popa
xor
lcall
std
inc
bound
cli
push
mov
cmp
insb
pop
pop
mov
fbstp
pop
out
mov
pop
in
sbbl
mov
push
scas
arpl
fucomip
inc
mov
fucomip
xchg
mov
sbbl
incb
cmp
inc
or
ljmp
jae
pop
cld
shl
mov
ja
int3
fs
jl
cmp
retw
dec
push
ljmp
loopne
ds
cmp
jl
fistpll
data16
stos
jg
mov
and
adc
add
adc
push
push
incb
incl
mov
sub
in
or
mov
jb
cltd
nop
cmp
push
pop
mov
icebp
xchg
out
fs
jne
add
push
mov
jg
arpl
push
movsl
out
insl
incl
xor
testl
mov
add
stos
out
ds
aaa
dec
and
xor
mov
rcll
xchg
sti
sub
pusha
jb
and
inc
add
fidivrl
test
cmp
lcall
test
pushf
stos
call
fnstenv
iret
mov
aas
pop
popa
outsl
ret
and
andl
jg
mov
or
jbe
leave
fwait
pop
jae
enter
adc
sub
xchg
push
pop
mov
add
add
int3
pop
mov
notb
mov
repnz
push
mov
and
aam
dec
in
push
mov
mov
insb
lods
or
sahf
push
in
out
jbe
pop
lahf
push
jl
jb
xchg
or
incl
add
fidivs
adc
xorl
dec
rcr
xchg
daa
cwtl
mov
hlt
cli
decl
or
hlt
enter
into
loop
clc
fdiv
test
daa
out
aas
dec
dec
sbb
cmp
dec
cmp
mov
pop
fsubrl
inc
or
scas
cmp
or
push
sub
cmp
pushl
jbe
loope
mov
mov
cmp
adcb
outsb
in
mov
xor
mov
gs
add
out
push
and
sub
in
jo
mov
mov
ljmp
scas
and
lahf
mov
es
sub
shll
cli
inc
add
subl
adc
enter
adc
fsubrl
lcall
lea
cmpsl
movsl
mov
clc
inc
fcomp
ret
pop
dec
nop
and
mov
fcmovnb
and
sub
mov
mov
xlat
mov
adc
rcll
test
cmpsl
or
inc
out
xor
jne
insb
xorb
and
cmp
pop
mov
xor
ljmp
sbb
inc
push
cmp
add
call
insl
mul
les
aad
idivl
push
outsb
cli
inc
loop
sbb
call
mov
cmp
hlt
mov
leave
inc
sbb
ljmp
dec
mov
or
pop
push
es
repz
jg
loop
inc
js
repz
xchg
or
mov
arpl
jg
sub
cwtl
rclb
pop
fs
bound
push
and
or
ljmp
pushl
ret
mov
mov
jge
lahf
sub
xchg
push
mov
jg
mov
rcrb
jl
outsb
jno,pt
ret
punpcklwd
insl
in
in
call
inc
inc
das
cmpsb
call
mov
loope
std
mov
xchg
lahf
or
call
mov
in
sub
sub
out
flds
xchg
pop
jbe
popf
push
xor
loopne
mov
dec
dec
adcl
adc
xchg
addr16
int
pop
xchg
ret
fisttps
imul
mov
push
dec
les
push
loop
xlat
arpl
or
je,pn
push
ljmp
mov
dec
rorb
jns
mov
iret
jle
loop
aad
pusha
sub
je
cmp
lcall
pop
cmp
shl
add
mov
movd
fs
sti
mov
daa
jecxz
sbb
jno
mov
cltd
sub
xchg
dec
mov
call
jmp
popf
push
push
ljmp
mov
loopne
orb
fdivrs
push
call
neg
mov
push
inc
jg
cmp
cli
sbb
stc
cmpsb
pop
jb
mov
insb
dec
call
xchg
jmp
cli
aas
jae
insl
stc
fldt
or
imul
mov
cmp
je
adc
je
test
pop
ljmp
sbb
outsb
dec
fst
ljmp
call
mov
cmpsl
dec
fildll
xor
jmp
sub
div
aad
stos
int3
inc
in
inc
in
adc
jo
shll
popf
pop
xor
outsb
push
incl
jmp
or
mov
sub
fdiv
imul
repnz
decl
push
adc
push
sahf
movsl
and
aas
sti
adc
mov
outsl
jl
ljmp
add
imul
jnp
xchg
add
inc
dec
insb
cmp
pop
dec
cld
das
cmc
jg
mov
in
mov
mov
js
sbb
clc
mov
out
adc
xchg
and
cmp
cmpsl
aad
jne,pn
mov
ljmp
cmc
xchg
add
rcll
mov
inc
lea
mov
pushl
mov
mov
addr16
ss
lcall
in
sbb
pop
std
jmp
rclb
loop
cli
test
push
mov
cmp
imul
lods
sar
pushl
xorb
or
ljmp
push
lahf
loopne
or
incl
psrlw
int3
jo
rcll
cmp
or
loope
adcl
popf
fwait
jmp
dec
ljmp
test
pusha
pop
data16
bound
aad
mov
pusha
mov
shll
ljmp
fmull
and
mov
sbb
lods
leave
push
mov
repnz
loopne
inc
nop
inc
in
loopne
jle
out
and
into
pop
push
fists
decl
xchg
jb
pushl
loop
neg
lds
je
cmp
mov
xor
test
pop
stos
and
xchg
dec
sbb
ljmp
scas
pop
aam
cli
into
sub
pop
lds
fmull
sub
ss
mov
jmp
sub
inc
inc
or
sub
push
lcall
xor
cmc
imulb
popa
inc
push
pusha
or
mov
push
lcall
xchg
ret
mov
icebp
stos
push
fldt
orl
fiadds
call
ds
push
mov
fnstcw
xchg
xchg
rclb
pushf
sub
sub
push
ret
mov
clc
ljmp
psubsb
adc
mov
sahf
js
decl
fucomp
jno
cmp
jno
fwait
lock
ljmp
xor
dec
ja
mov
test
ljmp
cld
std
lcall
jae
fidivrs
cmp
cmp
and
jmp
inc
sub
jnp
dec
push
adc
sti
xlat
sbb
loope
and
shll
sub
dec
stc
jp
lock
fistpl
add
add
ljmp
xchg
jmp
int
jo
pop
or
cmpsb
and
mov
ljmp
push
mov
loop
adcb
adc
adc
xchg
jecxz
jno
jne
call
ja
test
mov
jge
inc
push
dec
mov
and
sbb
sar
jmp
lock
filds
jbe
fstpt
dec
gs
dec
jl
pop
test
cmp
dec
jno
cmp
out
pop
fcomps
shrw
mov
xlat
cmp
jg
lcall
inc
jne
lds
xchg
mov
shll
cwtl
dec
mov
das
push
incl
cli
jp
lret
mulb
jp
icebp
cmp
or
mov
ljmp
push
pop
clc
jbe
push
or
lret
dec
mov
lcall
xchg
sub
or
push
lods
pop
add
iret
pop
sub
xorb
pop
or
sti
rorb
adc
push
mov
xor
jnp
xor
mov
pushf
jmp
aaa
cld
cli
xor
cmpsb
lcall
sbb
into
jmp
mov
jmp
loopne
mov
outsl
xchg
sbb
ljmp
adc
and
mov
lret
add
push
xor
mov
mov
rcl
and
pusha
sarb
decl
pushf
shlb
daa
fcoml
xor
loop
mov
outsl
lock
cmp
add
mulb
ja
inc
jp
call
pushf
push
adc
add
mov
fwait
test
cmp
pop
xor
pushf
andb
mov
push
in
repz
int3
js
out
jecxz
xchg
and
loopne
das
hlt
mov
xor
push
out
movsl
js
leave
push
pop
dec
and
ljmp
pop
rcll
imul
bound
mov
loopne
std
gs
dec
outsl
std
ds
pop
iret
cmp
sbb
pop
pop
jnp
out
adc
enter
pop
add
ss
add
push
add
mov
data16
dec
je
jg
xor
inc
jmp
pop
lret
scas
cmp
fwait
and
push
call
loop
out
imull
pop
and
movsl
into
sbb
push
xor
loopne
dec
fidivs
lahf
xchg
or
pop
outsb
push
sbb
fiaddl
into
data16
push
jmp
xchg
hlt
mov
jmp
mov
and
push
pop
leave
mov
sub
lcall
cld
adc
js
dec
mov
shrb
mov
in
mov
loop
lret
xor
loopne,pn
jae
imul
pop
ljmp
mov
push
les
add
ret
call
test
lds
push
xchg
fisubs
xchg
das
push
imul
sbb
xor
mov
es
pop
xor
in
xor
jae
pop
or
sbb
push
push
dec
push
mov
pop
shll
mov
jb
out
ret
lcall
popa
mov
js
repz
mov
mov
repz
pop
mov
jg
clc
mov
adc
jmp
inc
sub
mov
push
js
sbb
dec
pop
mov
inc
sbb
xchg
dec
mov
imul
movq
orb
jge
mov
jg
ljmp
jmp
adc
filds
pop
and
imul
dec
imulb
shr
pop
push
cltd
xchg
aad
cmpsl
sti
mov
outsb
mov
jne
fsubr
or
xchg
add
ljmp
call
addr16
dec
test
sbb
mov
loop
pushl
jmp
shlb
ljmp
mov
and
test
sbb
dec
cmp
pop
out
ljmp
and
or
xchg
imul
dec
lret
in
sub
inc
pop
xchg
or
scas
push
inc
dec
mov
inc
fwait
push
incl
sub
xchg
hlt
xlat
leave
aad
iret
mov
fistps
add
test
sbb
mov
mov
enter
sahf
add
test
stos
mov
pushl
js
and
push
jmp
sarb
dec
int
repz
ljmp
mov
imull
xchg
xchg
and
enter
cmp
mov
lcall
mov
out
int3
lea
mov
out
pop
push
loope
pop
pop
test
jg
cmp
out
outsl
lahf
mov
inc
mov
ljmp
push
mov
cmc
xor
xor
repnz
lret
nop
cs
leave
stc
cli
decl
or
pusha
stos
push
or
in
xor
pop
jns
in
test
xor
decb
xor
imul
inc
jle
filds
incb
add
roll
xor
movl
xchg
test
fnop
mov
test
jo
not
push
pop
pop
sub
mov
push
mov
stos
cmp
mov
lret
adc
into
negb
lret
jg
test
cmc
push
sub
pop
popf
add
push
dec
xor
jmp
jbe
or
mov
push
add
or
push
pusha
push
jbe
sub
incl
or
sbbb
inc
push
mov
pop
lret
inc
lock
addr16
incl
jo
and
and
out
sub
js
icebp
add
mov
gs
mov
jecxz
scas
decl
dec
loopne
std
fstl
mov
push
add
mov
inc
cld
adc
cli
and
outsb
mov
jbe
or
push
pop
sarl
or
in
insl
mov
adc
and
arpl
jecxz
lods
add
lcall
xor
xlat
test
add
xchg
or
or
lahf
dec
push
jo
and
fnstsw
jnp
aad
push
jp
cmp
dec
aaa
mov
scas
jae
jb
inc
lcall
scas
mov
ja
cwtl
xor
data16
out
sarb
std
call
jno
dec
fnsave
pop
xor
test
js
mov
decl
aam
sbb
shr
fdiv
scas
inc
repz
addr16
fucomip
in
in
pop
lods
int
xchg
setnp
popf
jle
stc
sbb
mov
jg
decl
xor
into
icebp
jne
fldenv
clc
out
mov
mov
mov
fmull
lods
call
pushf
jmp
sbb
pop
aas
outsl
cmp
das
mov
ljmp
jg
movb
in
out
es
pop
inc
mov
rorl
test
aam
incl
inc
jp
fildl
sub
push
jo
jp
out
stos
fildll
mov
dec
lds
call
loop
mov
sub
inc
xor
in
sbb
decb
pop
add
call
fcomip
pop
fst
pop
mov
mov
lds
jecxz
jl
dec
call
xchg
dec
cld
lcall
mov
mov
push
xchg
stos
movsl
call
or
push
jnp
or
fadds
out
incb
and
or
in
mov
push
cmc
jmp
pop
xor
icebp
push
xchg
pop
adc
mov
and
sbb
or
into
iret
pop
inc
jae
jle
incl
inc
arpl
push
mov
inc
sub
sbb
mov
mov
jbe
fistpll
decl
jp
decl
dec
aaa
and
fwait
loopne
adc
outsl
mov
mov
inc
test
call
fisttpl
mov
add
cmc
jmp
loop
sbbl
repz
pop
push
scas
adcb
cmc
adcl
adc
fmuls
fisubrs
ljmp
pop
call
inc
aad
mov
push
stos
and
and
iret
rorb
adcb
xchg
cli
into
push
sub
je
add
in
dec
lret
rcr
movsb
es
inc
push
lea
sbb
sahf
icebp
fdivrl
cwtl
mov
loop
sub
push
ds
aas
call
cli
jg
popf
or
enter
mov
or
sbb
pop
cltd
dec
inc
mov
outsl
std
ljmp
pop
or
dec
dec
pop
call
and
cmp
or
icebp
sbb
sti
int
in
out
xlat
jle
mov
popa
iret
lcall
dec
mov
xchg
add
xchg
cmp
clc
repnz
mov
or
fs
xchg
pushl
cwtl
test
adc
in
loopne
shl
dec
insb
jecxz
pop
dec
sub
adc
inc
cwtl
add
pushl
cmp
out
cmp
pusha
cwtl
mov
and
int
shrl
adc
pop
cli
cmc
ret
xor
inc
lock
bound
cli
roll
sbb
cmp
lcall
dec
in
daa
imul
xchg
aad
incl
cmp
sbb
add
pop
xor
xor
fidivs
loopne
mov
repz
sbb
xchg
and
adc
add
xchg
jmp
mov
xor
jmp
adc
xchg
adc
mov
push
addr16
pusha
icebp
pop
sbb
mov
jns
push
dec
ss
sti
adc
shrl
fwait
call
or
addr16
add
mov
mov
push
mov
mov
mov
dec
cld
incl
pop
push
inc
adc
fisubrs
nop
mov
test
outsl
lock
gs
dec
add
mov
cmp
lahf
iret
pushl
sbb
scas
lds
and
cmpsb
mov
jb
out
in
outsl
lock
jg
je
jp
cmp
mov
call
jge
ret
push
cmpsb
jmp
sbb
add
call
xchg
loope
mov
sub
push
into
lds
sbb
rcrl
outsl
lock
mov
push
mov
push
jae
data16
int3
outsb
addr16
lcall
out
or
fs
mov
jo
into
jg
mov
fbld
int3
fs
hlt
rclb
add
lcall
les
mov
xor
fistpl
cmpsb
int
pop
cli
pop
jge
repnz
mov
cmp
inc
call
in
jns
xor
imul
push
xor
add
push
add
cmp
lcall
sbb
js
mov
and
sbb
mov
clc
out
mov
add
pop
pop
push
pusha
incl
aas
cltd
mov
push
ljmp
adc
pop
push
loope
cwtl
or
lods
push
pop
sub
ljmp
decl
cmp
andb
ror
or
xor
aas
jmp
imul
pop
imul
test
aas
stc
inc
out
into
mov
pushl
bound
mov
enterw
loope
aad
jp
or
or
mov
stos
mov
jg
cld
addr16
and
pop
cmpsb
in
rol
mov
out
scas
movsl
dec
jg
push
ljmp
hlt
aad
lds
fcmovb
jg
pop
pop
dec
inc
and
clc
dec
js
dec
in
xchg
test
pop
sahf
cmpsl
fidivrs
movsl
xchg
addl
jecxz
mov
shll
or
scas
iret
add
mov
incl
out
sub
mov
mov
shlb
xor
mov
decl
push
mov
ss
ds
lock
shrb
fnstsw
push
jmp
cmp
out
jae
es
jle
mov
and
jbe
adc
loopne
sahf
cli
pop
adc
cmpb
inc
xor
rcrl
mov
adc
test
js
adc
adc
inc
cld
cltd
cld
test
cwtl
outsl
add
iret
pop
pushl
xor
popf
add
pop
lds
repz
gs
jg
incl
in
shrl
jmp
xchg
imul
pop
movsb
or
cmp
lcall
out
fsts
sub
arpl
xor
call
stos
push
lret
je
icebp
clc
xlat
pushf
xor
or
dec
mov
arpl
adc
jge
and
push
push
push
packssdw
pop
add
push
jns
xor
pop
lods
stos
dec
jl
repz
mov
cli
mov
or
cli
xchg
call
add
sbbl
dec
cmp
mov
icebp
push
call
lahf
xchg
jmp
fnsave
xchg
and
pushl
clc
ret
je
fadds
pop
es
xor
sbb
testb
ljmp
cmp
cmpsl
adc
aam
push
arpl
or
leave
dec
loope
les
or
pushl
nop
imull
jp
gs
movsl
loopne
lret
or
push
inc
decb
adc
and
test
push
pop
outsb
cmp
mov
in
xchg
gs
out
dec
mov
and
outsl
cld
pop
xchg
inc
movb
fsubrp
punpckldq
data16
stc
repz
test
jmp
call
insb
pop
push
out
and
in
cmpsl
jl
jg
in
cli
mov
xor
pop
mov
sbb
mov
jle
outsl
std
dec
dec
mov
add
add
mov
sub
or
ljmp
aad
mov
inc
js
or
lret
mov
mov
decl
scas
cmp
pop
icebp
cmp
mov
mov
inc
out
push
loope
stos
arpl
lcall
pop
out
insl
jecxz
inc
add
jg
adc
jp
jg
pop
xchg
inc
jno
cmpsb
sbb
and
cltd
inc
mov
sbb
or
outsl
jmp
adc
xchg
sub
dec
incl
incl
addr16
push
push
into
xor
mov
loope
inc
mov
inc
sub
mov
cltd
cli
aaa
pop
mov
gs
loopne
out
jg
fsubrs
and
js
fisubrl
ret
mov
dec
js
rol
mov
imul
push
enter
aas
out
add
ljmp
repz
or
aaa
decl
push
mov
adc
sub
daa
sub
cld
in
jmp
inc
test
dec
out
sub
es
mov
xor
out
test
decl
pop
repz
sarl
enter
test
pop
fadds
pusha
hlt
loope
popa
xor
fwait
stos
ljmp
sbb
les
mov
sub
mov
stos
mov
ljmp
sti
mov
pop
cmp
jnp
fdivs
pop
aas
mov
xchg
shll
mov
call
mov
loop
sti
pop
ljmp
jnp
sbb
ljmp
aaa
jp
pusha
scas
loope
adc
cmc
imul
test
inc
scas
mov
sub
es
xchg
cmpsb
aaa
clc
add
xor
mov
cli
std
lods
and
or
ficompl
xor
xchg
xor
mov
incl
je
repnz
sbb
mov
dec
add
push
mov
inc
mov
in
ljmp
sub
pushf
xchg
adc
fiadds
sti
lock
xor
aaa
jo
addr16
repz
adc
js
ja
ret
dec
or
bnd
or
sbb
xor
jge
jae
or
jmp
push
int3
xchg
inc
cltd
scas
daa
jno
xor
inc
mov
adc
dec
xchg
mov
das
cld
insl
ret
mov
ret
stos
cwtl
rep
dec
fmull
jns
jg
call
fstpt
mulb
pop
jecxz
aad
nop
ljmp
out
pop
testb
cmpsl
sbb
ficompl
mov
cld
pushl
in
push
xchg
popf
bound
rclb
lds
das
dec
mov
ficompl
or
cmp
gs
test
test
lcall
xor
cmp
inc
or
mov
or
xchg
rep
push
xor
inc
xchg
arpl
int
testl
outsl
xchg
rcrl
sar
jle
cmpsl
adc
mov
cmp
ficoms
fildll
jg
adc
test
jno
fsubrl
call
clc
cmp
cld
sub
rorl
shll
loope
push
sbb
jns
mov
mov
std
or
adc
push
mov
clc
or
fmulp
imul
sub
sbb
outsl
out
pop
jl
ljmp
dec
xchg
sbb
sarl
int3
xlat
dec
adc
mov
jne
arpl
xchg
mov
dec
fldenv
loop
cld
xchg
arpl
movsb
xor
out
outsl
and
push
push
in
add
mov
fbstp
xchg
mov
jge
out
cmc
ror
sbb
subl
or
decl
cld
jns
js
or
adc
mov
push
adc
cmp
push
cld
mov
movsl
out
leave
inc
cmp
jno
pop
mov
xchg
sbb
call
cltd
mov
jae
aas
push
cmp
jg
hlt
mov
pusha
inc
add
out
dec
pusha
cmp
inc
ljmp
into
inc
idivl
sbb
stc
push
insb
data16
cmpsl
dec
iret
mov
iret
mov
dec
ja
std
das
push
loop
add
enter
lcall
loopne
lahf
fwait
or
xor
cs
pop
shll
call
cli
movsl
mov
sbb
inc
fdivrs
mov
bound
lea
cld
das
xchg
pop
sbb
adc
addb
xor
ficoml
adc
sti
mov
adc
fisubs
adc
and
adc
or
cmc
das
cmc
ljmp
pusha
mov
push
pushf
bound
loopne
pop
mov
xor
popf
jmp
jbe
jnp
add
xchg
sub
aas
push
loope
loopne
sahf
in
jge
cld
pushl
clc
or
xchg
mov
pushf
in
jg
aaa
sbb
sub
inc
inc
lcall
adc
dec
das
adc
mov
stos
adc
aaa
or
sub
rcll
adc
sahf
add
lods
les
cmc
insl
fwait
lahf
jb
int
pushl
sub
pop
hlt
mov
mov
xchg
or
xchg
mov
add
lock
outsl
pop
ljmp
insb
add
nop
mov
mov
sub
das
push
sub
je
adc
popa
sbb
xchg
int
js
je
sti
cltd
ja
mov
jg
call
pop
ds
sbb
lahf
push
pop
shr
xor
xor
ljmp
std
xchg
mov
jae
jmp
mov
loope
pop
push
cmp
inc
mov
dec
movsb
push
xor
idiv
lds
jo
addl
fucomip
cld
pop
incl
xor
mov
fcom
loop
icebp
push
cli
jo
sub
lods
add
inc
mov
out
push
stc
pop
test
add
xlat
pop
jmp
lds
xchg
add
mov
addb
sub
jg
lcall
out
enter
sub
mov
sub
loopne
xchg
fstpt
or
lcall
lods
xor
in
in
add
imul
pop
pop
outsb
inc
jmp
pop
pop
pop
sub
arpl
adc
xor
incl
pop
inc
sbbl
mov
sbb
les
incl
and
aas
sbb
in
pop
and
jg
dec
mov
mov
sarb
pop
in
ret
incl
fs
outsb
mov
mov
dec
xchg
imul
in
xor
jno
jmp
stos
xchg
mov
aaa
cmp
decl
add
cld
shrb
add
mov
inc
push
jnp
pop
movsb
inc
shrb
lods
mov
arpl
dec
rcrb
push
inc
mov
dec
pop
and
mov
clc
jmp
out
sub
popf
push
lock
xor
pushf
xor
xchg
inc
jg
xchg
mulb
dec
xlat
idivl
js
push
stos
hlt
pop
and
xchg
xchg
mov
call
lcall
in
out
mov
sub
inc
aas
adc
and
dec
push
dec
inc
mov
movsb
into
xchg
into
cmp
adc
mov
popf
jp
sub
decl
xor
mov
pop
out
pop
ret
pop
lcall
sub
rcrl
hlt
ss
jno
test
xor
popf
jnp
clc
lcall
or
dec
clc
cmp
jae
adc
inc
inc
inc
adc
das
hlt
pushl
pop
test
cmp
test
mov
std
xor
push
push
outsl
ja
jbe
inc
pop
decb
pop
mov
test
pop
dec
loop
jg
inc
mov
inc
fdivrs
mov
mov
sub
xchg
dec
push
in
sub
or
jg
xor
loop
pop
ljmp
fstps
sub
rcrb
mov
loopne
fldenv
fdivrp
push
mov
idiv
sub
and
stc
add
lods
jns
in
push
or
and
or
or
jg
mov
mov
fs
insb
or
pop
jg
jns
fwait
mov
fcoml
inc
scas
adc
push
xchg
shlb
sbb
scas
pop
cli
scas
insb
shl
xor
cli
hlt
cli
sub
shrb
xor
test
fdiv
test
test
jp
pop
repnz
mov
inc
push
les
push
mov
in
test
and
cmp
int3
mov
test
addr16
mov
jl
mov
pop
push
test
xchg
push
cmpsl
rcrl
lock
leave
clc
or
sbb
sub
inc
add
dec
addb
mov
int
mov
xchg
fsubs
dec
int
icebp
xor
das
jno
push
inc
adc
arpl
cmp
aad
sub
call
in
hlt
rolb
data16
mov
lods
test
scas
pop
pop
or
rcll
mov
jg
cltd
out
pop
int3
adcl
int
jge
lahf
push
mov
xchg
sarb
jb
mov
mov
jl
aas
xor
adc
cmp
jmp
mov
hlt
xor
mov
movsl
cs
ss
and
or
xchg
or
jl
data16
out
fldenv
xchg
fs
pop
mov
pop
in
jge
addr16
sbb
ljmp
and
pop
and
iret
push
dec
jns
loop
insl
and
shll
decl
push
cmp
sub
int
mov
montmul
cmpsb
ret
inc
mov
cmc
cmp
jnp
lods
leave
call
les
push
push
dec
cmp
out
pop
push
pop
insb
mov
adc
push
int3
or
jmp
andl
leave
mov
fdivrl
xchg
loope,pn
mov
xor
incl
in
inc
dec
or
lock
xchg
mov
jne
cli
sub
xchg
adc
pop
mov
rcll
push
daa
scas
xchg
ljmp
adc
mov
test
out
mov
das
icebp
dec
insb
stos
movb
mov
xor
sub
pop
xlat
repz
sti
jmp
pop
gs
jle
adc
loopne
mov
dec
bound
or
pop
call
or
ret
mov
fucompp
mov
or
icebp
ljmp
inc
jp
lret
or
cwtl
add
dec
stc
inc
mov
mov
aad
divl
call
movsb
les
sub
in
fdivs
adc
ja
decl
xchg
pop
in
xor
xchg
inc
dec
nop
jne
cmp
mov
push
ror
cwtl
adc
sahf
pop
test
aad
sbb
jmp
lret
enter
push
xor
or
push
addr16
pushl
pop
jnp
daa
xchg
pusha
int3
subl
pop
sbbl
jle
lcall
cmp
leave
add
aad
mov
xchg
and
pop
adc
in
std
ljmp
imul
jne
rorl
xor
std
dec
and
ljmp
mov
and
mov
scas
js
jl
inc
mov
imul
ljmp
sbb
hlt
inc
mov
adc
jb
dec
loopne
loopne
pop
push
scas
setns
test
pop
pop
sbb
aaa
sub
cmp
jp
add
addb
inc
xchg
arpl
jl
push
les
rcl
and
pop
popf
and
call
xchg
xlat
push
mov
add
aas
jnp
aaa
xchg
jnp
into
jne
mov
fucomip
mov
adc
pop
xor
cld
pop
fst
stc
lcall
xlat
mov
inc
push
in
ljmp
push
aad
leave
test
sub
xchg
cmpsl
addr16
pop
ljmp
outsb
cmp
bound
cs
ret
push
inc
mov
mov
incl
rcrl
pop
xor
jg
aas
mov
pop
xchg
dec
mov
or
repz
negb
lods
hlt
inc
rol
stos
xor
pop
push
and
mov
call
insl
jge
test
ljmp
test
cmp
mov
sbb
adc
cmc
cmp
cmp
pusha
mov
xchg
jo
dec
xchg
das
ljmp
dec
xor
sbb
leave
and
push
jle
adc
pusha
or
fistpll
cmp
jp
dec
mov
call
call
movsb
ret
mov
pop
pop
inc
rclb
icebp
xchg
cli
inc
dec
ljmp
insb
cmpsl
fisubl
sbb
nop
fnstsw
and
mov
inc
into
dec
jp
into
es
outsl
roll
inc
push
jecxz
not
pop
xor
ljmp
cmp
cmc
xchg
push
jmp
and
dec
mov
das
mov
add
test
das
int3
decl
mov
arpl
int3
push
mov
push
or
repz
incl
xchg
inc
insl
shlb
fnsave
push
fistpl
and
in
cmc
aad
sbb
jg
mov
cmpsl
sti
mov
gs
dec
push
test
ds
xor
push
into
std
aaa
clc
lcall
mov
dec
idivb
or
imul
push
pop
inc
lcall
and
fisubl
and
das
add
cmpsl
cmp
mov
jae
jno
cmp
clc
mov
pusha
in
xchg
mov
mov
cmp
or
jg
dec
jp
iret
adc
lcall
negl
xchg
cmp
in
ljmp
or
pop
aam
fimuls
pop
mov
add
fdivp
ljmp
jbe
les
dec
xor
mov
adc
movsb
mov
inc
inc
je
int3
push
adc
rcll
es
mov
out
jp
or
inc
repnz
push
xorl
mov
lret
jecxz
clc
or
dec
enter
fnsetpm(287
sub
hlt
js
data16
incl
data16
mov
cmp
jg
std
cmpl
scas
ret
test
adc
mov
xchg
sub
pop
jne
out
jbe
inc
mov
ficoms
lock
cwtl
inc
jmp
adc
daa
and
push
add
aam
imul
es
xorb
inc
out
push
add
add
or
push
xor
iret
add
icebp
push
icebp
sarb
out
mov
ljmp
movsl
jmp
std
pop
jnp
adc
xor
pop
mov
mov
mov
insb
pop
ret
movsb
jle
outsb
or
pop
repnz
hlt
mov
decl
xor
or
fdivr
mov
out
adc
sbbb
or
cmc
nop
rolb
add
in
jne
incl
add
mov
repnz
js
ljmp
mov
xor
movsl
and
lods
cmp
popa
mov
dec
arpl
and
jns
mov
sbb
ret
in
pop
add
lcall
sub
pop
xor
icebp
fmuls
pop
movsb
push
ret
sbb
mov
in
lret
shl
adc
sub
pushf
adc
mov
ss
adc
fcomp
jmp
cmpsb
stos
test
and
pop
notl
mov
sbb
jbe
call
xchg
cli
jmp
std
mov
mov
fnstsw
or
jp
cmpsb
clc
popa
dec
arpl
mov
mov
mov
jmp
add
jg
mov
shll
cli
jmp
inc
add
outsb
icebp
lock
mov
xchg
inc
jnp
adc
push
or
mov
mov
push
ficoml
popa
cmp
xchg
negl
mov
add
incl
ss
add
jg
setb
inc
hlt
in
add
inc
fwait
xchg
loopne
aam
xchg
mov
sub
sub
jecxz
cmp
out
jecxz
call
dec
hlt
int3
imul
outsb
popf
dec
shl
push
sbb
xor
cmc
sub
call
aad
xlat
fdivl
sub
loop
int
sub
mov
movsb
fdivr
fisttps
mov
jmp
add
repnz
jmp
mov
lds
icebp
pushl
cmp
jne
aas
aad
pop
xor
movsl
and
add
mov
outsl
or
insl
xor
shrb
dec
fnstsw
inc
push
push
sbb
mov
jg
dec
adc
pusha
adc
lods
push
pop
pushf
xor
iret
mov
lock
push
mov
push
or
inc
js
add
das
cmp
or
cld
rorl
call
or
jg
xor
inc
push
push
xchg
mov
and
cmp
or
jmp
jne
jmp
ret
sti
rcrb
mov
mov
jge
repz
outsb
in
aam
jmp
shll
mov
inc
jo
jle
ljmp
mov
jae
mov
jbe
fcoms
mov
dec
mov
movsl
das
xor
bound
pop
mov
mov
loop
incl
jb
shlb
fidivrs
aas
outsb
dec
inc
push
loope
pusha
cld
pop
mov
and
inc
mov
sub
mov
adc
mov
lret
repnz
dec
push
push
inc
cmp
add
or
lret
les
or
cwtl
testl
sub
dec
cmc
ss
jo
in
adc
mov
pop
sbb
pop
cld
call
fisttpl
mov
pop
push
fnstenv
mov
fdivl
ret
push
pushl
ret
repnz
mov
popf
sub
sub
cmpsb
push
add
fldenv
add
xchg
data16
mov
std
dec
or
push
fcos
outsl
hlt
jmp
aaa
mov
jo
pop
cmp
das
lock
aaa
lcall
and
movsl
jo
jbe
push
push
or
imul
jb
sbb
rclb
push
sub
sarb
push
outsl
jns
sub
mov
stos
sti
sub
pop
add
jmp
lret
call
dec
fists
mov
shlb
xchg
push
iret
or
cmp
pop
movsl
mulb
outsl
mov
mov
cltd
xlat
xchg
loopne
movsl
push
mov
mov
dec
loope
lds
cltd
push
popa
push
rcl
mov
cmp
push
imul
pusha
push
int
sbb
dec
push
sti
repz
cmp
sub
test
decl
ficoml
xchg
inc
jae
outsl
adc
and
cmpsb
fmull
pop
dec
pusha
add
stos
bound
pushl
fsubs
ss
pop
fdivrl
inc
push
xchg
add
ljmp
adc
and
les
hlt
je
call
jge
sarw
push
popf
xchg
sub
fisubs
push
ljmp
cmp
push
and
in
mov
in
or
lret
ljmp
clc
incl
stc
in
push
les
clc
sbb
mov
mov
sbb
iret
cmc
inc
adc
ljmp
xor
in
cmp
push
call
fmul
pop
insl
ret
and
pop
negl
repnz
cmc
xchg
clc
cmp
mov
ret
sub
jmp
fcoms
test
push
mov
lret
and
fnstenv
hlt
into
dec
ja
nop
mov
cmpl
pushl
add
pop
out
loope
mov
sbb
adc
std
mov
je
and
cli
mov
push
dec
add
das
andl
or
mov
lods
mov
pop
jae
lods
idivl
fldenv
jo
lret
lret
sbb
and
lds
das
cld
jg
lods
sbb
cwtl
adc
xchg
mov
es
pop
mov
daa
jne
aaa
sub
inc
pushl
std
daa
imul
ror
sti
clc
stc
dec
add
outsl
hlt
xor
mov
sahf
adc
sub
test
mov
int3
xor
cli
test
movups
rol
iret
aas
push
cmpsb
lret
pop
add
and
cmp
call
pop
enter
test
dec
push
cmc
mov
mov
xor
jp
test
xchg
lock
adc
mov
movlps
jb
cli
jg
xor
loope
or
mov
into
mov
jnp
jg
jg
cmp
push
ss
cmp
adc
sbb
inc
mov
cli
stos
mov
adc
rcrb
scas
dec
dec
dec
out
into
cli
mov
and
push
adc
mov
daa
mulb
call
ret
adc
test
xor
mov
ds
inc
sub
ret
pop
lods
fucomip
ljmp
aas
ss
sbb
sub
pop
sub
out
and
mov
cltd
mov
out
dec
dec
xchg
shr
pop
fcmovb
fs
mov
addr16
sbb
add
add
std
push
pop
clc
mov
icebp
ss
test
jne
xlat
mov
fstps
and
movsl
mov
pop
pusha
push
push
popfw
pop
push
sbb
shll
push
push
fdivs
fildll
cmc
int
ljmp
testl
adc
je
lret
test
scas
out
sbb
mov
push
stc
fisubl
aam
nop
cltd
fs
lret
cld
xchg
clc
decl
out
push
dec
or
jbe
filds
and
aaa
cmc
test
pop
sub
movsl
xlat
int3
or
xor
imulb
int3
bound
ficoms
mov
pop
fstpt
loope
dec
int
lahf
int
lahf
push
cld
jg
das
adcb
js
mov
aad
enter
lcall
in
std
aad
add
sub
sarl
pop
in
cmp
pop
push
xchg
sub
mov
push
pop
mov
test
les
ss
in
inc
cld
push
jp
and
cmp
pop
addr16
mov
mov
imul
lods
push
scas
inc
outsl
int3
imul
pop
incl
sbb
es
in
aad
mov
xchg
popa
mov
dec
cld
decl
mov
and
cmp
fs
jg
fstpl
mov
pop
int3
popa
or
lret
sti
sub
jl
mov
cld
or
fldenv
cmpsl
out
into
fdivl
repz
jl
aaa
or
xchg
adc
or
cmc
lcall
lcall
xor
pop
pop
mov
mov
lcall
mov
ljmp
aaa
iret
dec
data16
mov
xchg
lret
mov
pushf
stos
push
xchg
pop
das
pop
filds
fwait
mov
pop
data16
clc
mov
jb
clc
jbe
cwtl
repz
mov
xchg
xchg
sahf
fdivrl
pushf
sbb
ret
add
gs
dec
pop
xchg
mov
out
sub
clc
cli
or
mov
clc
pop
loop
sub
mov
adc
outsl
push
fadds
lcall
mov
mov
ja
xchg
cltd
xor
push
push
decb
jo
sar
pushl
adc
push
outsb
js
pop
pop
xchg
sbb
pusha
xchg
mov
and
stos
gs
ljmp
mov
dec
and
sti
pusha
pop
pop
dec
movsb
scas
pop
adc
in
pushl
pop
cs
sbb
xchg
fdivrs
pop
ljmp
cwtl
push
dec
js
sbb
inc
sbb
mov
adc
movsl
rcll
stos
jnp
xor
sub
mov
jmp
scas
fs
sbb
mov
scas
popf
lahf
cwtl
adc
mov
inc
enter
pushl
icebp
lret
jl
and
lock
int3
push
fcomps
jle
inc
cli
and
cmpb
push
jg
jg
dec
and
dec
push
mov
cli
test
dec
es
in
scas
out
cmp
xor
ljmp
movsl
ret
jne
pop
out
xchg
add
push
stos
test
fldl
ljmp
in
movsl
gs
dec
aaa
rolb
in
dec
outsl
std
mov
jle
enter
cmpl
mov
mov
cmpsb
xchg
cmp
jp
lea
out
xor
incl
ljmp
ret
and
in
push
lcall
mov
adc
adc
ljmp
jle
sub
das
stos
sub
test
inc
imul
decl
push
lahf
mov
fucompp
adc
loope
cmpsb
imulb
test
lods
cmpsb
sahf
lods
xor
push
lcall
jg
cltd
les
xchg
mov
lcall
lea
xchg
fnstsw
out
or
cs
addr16
shrl
pop
clc
mov
mov
daa
fmull
shl
iret
enter
mov
or
dec
mov
inc
insb
add
adc
int3
sbb
mov
push
jg
movsl
pop
xor
add
push
mov
cld
adc
aad
mov
lcall
xchg
mov
mov
mov
add
mov
jmp
pop
int3
sahf
pop
dec
mov
push
stos
mov
in
dec
sahf
dec
lret
pop
out
sar
incl
pop
repz
into
lret
je
xor
mov
mov
sub
or
not
repnz
sub
mov
jg
aas
inc
movsl
mov
mov
jno
dec
loopne,pn
jmp
jmp
pop
or
and
mov
jg
or
push
and
sti
jecxz
and
and
mov
jmp
xchg
push
pmaddwd
lcall
mov
adc
popf
aaa
adc
mov
xor
add
pop
ret
orb
lods
jg
mov
mov
mov
jmp
jns
jns
pushf
lret
cmpsl
mov
sub
in
out
test
push
jmp
mov
pop
test
hlt
mov
div
aad
mov
outsl
std
cli
clc
enter
data16
stc
or
lock
mov
incl
xchg
insl
dec
push
scas
leave
or
inc
rcll
mov
jge
aas
daa
stc
fldt
mov
and
add
add
push
lods
sbb
rcr
popf
xchg
pop
and
mov
dec
dec
cltd
adc
dec
xor
adcl
call
xchg
and
popa
sbb
sub
pop
mov
mov
dec
sub
push
dec
mov
xchg
push
push
hlt
jl
or
xchg
cld
fucomip
inc
das
pushf
out
jp
push
xchg
lret
adc
jg
jae
outsl
hlt
incl
dec
and
or
cmpsb
push
mov
fdivrp
mov
out
imul
ljmp
mov
push
jmp
pop
add
dec
inc
push
sub
push
repnz
mov
mov
sbb
clc
rol
cli
mov
bound
aas
hlt
mov
loop
push
scas
sub
lcall
sahf
xchg
sub
push
cmc
mov
inc
shll
inc
and
cmpsb
inc
dec
sbb
decl
hlt
repz
or
ljmp
inc
ss
ret
lret
mov
iret
scas
xchg
xchg
decl
lret
lret
pop
pusha
sub
push
pop
jo
xchg
das
mov
sub
inc
add
test
icebp
mov
mov
ljmp
jg
xorb
and
and
xor
inc
pop
add
jmp
rol
bound
sarb
sbb
mov
push
jecxz
pusha
cmp
scas
popf
decl
sbbl
sarb
lahf
aam
mov
cmp
jo
pushl
mov
mov
add
mov
enter
dec
jns
psrld
push
jp
call
lds
and
gs
out
pop
dec
inc
pop
push
imul
lods
filds
xchg
jg
lahf
lahf
push
xchg
int3
cs
pop
jmp
stos
aas
xchg
lcall
add
fldcw
jge
cmc
jl
orl
add
mov
notl
mov
cmp
mov
out
dec
dec
mov
mov
int3
cmp
inc
xchg
jno
lock
call
lds
dec
sbb
imul
cmp
mov
adc
jg
loop
daa
ljmp
scas
inc
and
mov
out
call
pop
pusha
cmp
fsubrl
mov
test
dec
imul
icebp
decl
xor
out
faddl
jmp
jae
push
cmp
popa
add
pushl
ja
fcoms
add
adc
sti
cmp
inc
shrb
pop
mov
scas
cs
xorl
pop
pop
out
mov
mov
lods
das
mov
filds
scas
fldcw
sbb
mov
dec
mov
sbb
pop
stc
ljmp
jge
pop
add
add
adc
pushf
nopl
movsb
enter
jmp
sbb
or
into
mov
cwtl
popf
subb
sub
adc
decl
outsl
rorb
push
inc
jno
push
jmp
push
adc
xchg
push
ljmp
mov
xchg
repnz
jb
mov
rcrl
jg
inc
sub
or
sbb
leave
dec
and
inc
movsb
add
xchg
out
call
lea
std
or
and
mov
aad
ljmp
pop
cld
stos
and
cmp
sbb
adc
jb
pop
bound
loop
sahf
sbb
lock
movsl
jb
sbb
jns
stos
cmp
xchg
cs
fwait
mov
call
insl
push
daa
dec
sub
jnp
mov
aaa
repz
decl
push
iret
cmpsl
and
fwait
in
cltd
dec
mov
dec
or
jb
pop
jae
addl
and
fs
in
xor
and
lret
jg
xchg
pop
inc
cmp
rsqrtps
inc
cmp
xchg
call
cmc
ljmp
pushl
xlat
adc
xor
push
les
pop
ror
adc
clc
pushl
loope
mov
add
lods
rolb
and
movsl
fnstcw
and
repz
inc
jge
adc
ljmp
out
aaa
mov
lret
push
cmpsl
sub
jmp
repnz
cmc
dec
rcrl
and
mov
sbb
int
fnsave
inc
adc
sbb
call
push
sbb
push
push
stos
ds
cmp
insl
test
ficompl
fnsave
adc
mov
pushl
scas
scas
push
popa
shrb
jne
xor
sub
sahf
xor
jg
jno
int3
jecxz
repz
decl
stos
sti
sbb
sbb
cmp
addr16
mov
push
dec
mov
or
mov
stos
incl
mov
int3
fsubl
add
jmp
daa
jns
sar
incl
lcall
xchg
adc
sbb
and
imul
jge
sbb
icebp
push
jns
mov
mov
lahf
rcll
popf
pcmpeqb
or
jmp
xor
adc
xor
ds
mov
rolb
clc
insl
std
outsl
icebp
ljmp
cli
push
jg
std
mov
incb
insl
mov
xlat
inc
xchg
push
ljmp
inc
ss
mov
cmp
ljmp
shl
adc
filds
fsubrl
jge
aaa
rolb
sahf
mov
call
test
cli
push
pop
clc
jmp
data16
addr16
push
ret
xor
bound
lret
fisttps
dec
xorb
xor
cmpsl
cmpsl
jns
jb
and
mov
int
cmc
xchg
pop
cmc
inc
jl
mov
js
inc
sbb
lret
in
aaa
js
xor
mov
cmp
push
push
sbb
lcall
mov
adc
xchg
inc
cltd
arpl
jmp
sbb
jg
decl
xor
jns
leave
std
jae
mov
fisubrl
call
outsl
add
and
ror
aam
enter
ja
cmc
insb
mov
jg
add
mov
cmc
inc
data16
test
and
and
enter
ret
jmp
fldenv
lods
xchg
adc
xchg
adc
cmc
mov
dec
cmp
push
and
call
data16
push
add
pop
ss
aas
add
lods
ljmp
mov
jge
lcall
inc
sbb
mov
incl
jg
lcall
xor
nop
cmp
xchg
cmpsb
pop
pop
jo
xchg
arpl
mov
jge
in
pop
icebp
mov
out
inc
cwtl
and
cmp
push
mov
sub
pop
jp
sbb
and
xor
je
mov
jne
cmpsb
push
and
outsl
icebp
call
add
or
dec
adc
jnp
or
dec
gs
mov
daa
ljmp
loopne
add
mov
inc
jo
mov
mov
jno
push
out
mov
pop
std
ljmp
out
or
nop
add
js
pushf
aas
lret
pop
popf
incl
jno
inc
jnp
imul
jmp
sarl
jecxz
into
jae
sub
int3
into
cld
push
std
das
std
pop
stos
cld
push
sub
pop
cmp
xor
cli
decl
lcall
push
adc
jle
outsl
fnstenv
pop
dec
cwtl
and
inc
push
mov
xorl
inc
fdivl
lret
push
or
call
push
mov
cld
nop
repz
mov
in
pusha
pop
add
sbb
push
mov
fildll
ficompl
mov
pusha
into
xor
sarl
mov
loopne
loope
loop
aad
cwtl
sahf
cmp
std
mov
lret
mov
ffreep
mov
outsb
inc
mov
stc
in
test
and
stos
out
xor
pop
std
cmc
cmp
ror
mov
pop
adc
mov
pop
mov
scas
addr16
push
mov
out
pop
inc
test
jmp
push
flds
xor
decl
jl
push
je
push
aaa
lcall
xchg
mov
fiadds
jle
bound
call
repnz
add
cmp
or
out
or
incl
lcall
push
xchg
pop
adc
in
leave
dec
cmpb
cmp
push
xchg
pushf
add
ficompl
mov
lock
sahf
je
inc
xchg
clc
xor
adc
lock
or
mov
push
xor
popa
dec
push
decl
clc
ror
add
cmpsb
inc
aad
jp
sbb
mov
or
adc
mov
es
xchg
jno
cmp
in
lods
out
push
and
movsl
call
xchg
aas
xchg
fucomip
sbb
clc
lods
or
xchg
addr16
jle
call
les
repz
aad
mov
jg
add
int3
arpl
cmp
aam
in
in
dec
fistps
jae
pop
add
cmpsl
lods
addl
mov
pop
or
dec
and
dec
stos
ss
pushf
pop
inc
push
daa
or
call
jmp
push
insl
ret
pop
mov
cltd
push
mov
sub
movsl
insl
or
pop
or
dec
test
test
loopne
imull
icebp
lcall
fidivl
cmpl
out
pop
ljmp
sub
sub
sarb
push
loopne
cwtl
icebp
jle
jmp
lods
arpl
dec
test
stos
movsl
pop
jl
outsb
loopne
push
jno
mov
xor
daa
outsl
inc
shll
xchg
popf
xchg
or
sbb
mov
cmp
leave
jb
dec
push
rorb
jne
shlb
in
aaa
pop
loopne
inc
mov
lret
inc
adc
mov
or
sbb
xchg
pop
jae
fbld
sbb
sub
xchg
shl
fstl
add
hlt
mov
repz
jl
sbb
mov
push
mov
shlb
shll
pushf
dec
xchg
add
xchg
cltd
push
jbe
mov
and
jae
loope
pop
mov
out
insl
jg
lock
loope
mov
pop
popa
adc
cmp
shl
pop
xor
sub
sub
into
ror
mov
ret
pop
aas
pop
stos
dec
les
pop
sub
pushl
in
mov
adc
xor
pop
fwait
or
pop
pushl
clc
fcmovne
movsb
test
sahf
and
test
cmp
mov
cli
mov
sarb
arpl
sub
inc
test
stc
out
cld
jg
ljmp
mov
ss
shll
inc
enter
std
sub
pusha
cmpsb
sbb
lahf
je
pop
push
push
arpl
movsb
sti
mov
sbb
mov
or
addr16
mov
inc
jg
inc
ficomps
stos
mov
push
cmpb
out
xchg
pop
fnstsw
sbb
stos
lret
pop
loope
adc
mov
es
cmp
pushl
nop
sahf
mov
imulb
inc
test
push
cmp
out
pusha
test
mov
mov
jecxz
jmp
fldt
and
mov
xchg
mov
and
test
call
cld
outsl
hlt
call
lock
cmp
pushf
or
xchg
fcmovnu
sbb
popf
ret
jno
jle
lcall
xchg
test
push
out
xchg
jb
in
mov
xchg
je
sbb
ss
mov
and
push
ja
dec
call
daa
sub
sub
xor
xchg
push
xchg
jmp
jl
push
sbb
popa
fistpll
dec
outsl
mov
xchg
push
loopne
jae
push
outsl
std
dec
mov
push
xor
loope
and
pop
pop
xchg
jmp
add
stos
lcall
mov
and
test
icebp
shlb
sbb
push
jle
xchg
sub
rcr
sbb
lcall
lret
or
inc
or
or
in
call
out
out
inc
sbb
outsb
mov
pop
mov
pop
sub
aad
add
mov
xor
incl
dec
stc
ljmp
or
dec
push
jns
push
loope
clc
pop
pop
push
adc
cmp
jb
push
sub
jno
shll
sub
dec
cmpsb
inc
mov
lods
decl
cld
cmp
jne
shr
in
push
mov
test
fwait
iret
cmp
hlt
inc
push
in
jnp
add
xchg
mov
repnz
nop
ret
loop
jnp
lret
adc
sub
xor
das
sbb
decl
mov
dec
dec
xor
xchg
cmp
daa
in
jle
xor
mov
in
ret
sti
fimuls
xlat
sub
pushf
sub
outsl
jmp
repz
hlt
in
xchg
call
or
lods
and
test
popf
test
out
cmp
mov
scas
mov
leave
stos
jo
sbb
xchg
lock
adc
mov
push
pop
sbb
add
lret
lcall
stos
xchg
mov
in
bnd
and
mov
and
mov
xchg
dec
cwtl
inc
jne
pop
jge
sub
andb
incb
mov
sub
sub
or
add
sbb
xchg
jecxz
inc
lret
dec
cmp
cwtl
dec
dec
dec
mov
sbb
decl
push
mov
pop
ja
js
adc
in
sub
divb
cmp
mov
cld
fwait
pop
daa
roll
pop
nop
add
jo
push
decl
push
rolb
add
popa
xchg
loop
mov
jno
sub
sbb
popa
cmp
push
adc
gs
jno
in
je
push
jl
decl
fdivrp
sbb
cli
popf
dec
sbb
outsl
fcmovu
jno
mov
jp
lods
call
insb
repz
push
int
imul
fidivrl
mov
std
call
jb
scas
clc
ret
adc
out
cmp
nop
push
mov
cltd
cld
decl
enter
int3
xor
cmp
je
inc
frstor
inc
pop
imul
ljmp
popa
sar
lds
bound
adc
inc
adc
inc
rclb
sub
ljmp
inc
paddd
dec
out
push
orb
mov
inc
scas
dec
jge
push
mov
cld
int
jge
jb
mov
stos
movsb
dec
push
push
push
cmp
mov
ret
pop
sar
repz
pop
lahf
mov
ljmp
pop
inc
ja
outsb
xor
add
rorl
and
jecxz
mov
mov
mov
and
lock
outsl
sbb
cmp
jb
pop
clc
pop
adc
pop
push
sti
pop
dec
sti
rorl
aad
mov
filds
bound
cmp
arpl
das
sar
mov
sub
mov
ret
mov
andl
jmp
loope
or
fisttps
mov
idiv
roll
es
xchg
jl
stc
out
pop
sbb
das
mov
or
pushl
cmp
dec
hlt
jmp
test
add
mov
les
fwait
icebp
shll
gs
mov
jge
ljmp
cltd
cmpsb
sub
inc
fdivs
pop
xor
sbb
test
out
test
push
icebp
ljmp
movsl
ret
mov
lcall
push
jb
hlt
pop
lret
push
add
mov
data16
pop
ljmp
cltd
outsb
sbb
jge
xchg
jecxz
adc
cld
inc
lcall
lea
mov
insb
sub
lcall
testb
dec
insb
test
sub
inc
popa
out
dec
fadds
dec
push
call
add
cmc
sub
data16
jmp
mov
out
and
sub
andb
mov
xchg
pusha
xchg
icebp
cld
hlt
sub
jl
xchg
scas
mull
hlt
push
mov
cld
jmp
dec
mov
sbb
xor
fcomps
lcall
lea
movsb
out
xor
jmp
cmpl
mov
lock
out
jmp
sbb
add
lcall
lret
mov
pop
add
cmp
sbb
inc
fbstp
mov
dec
lea
lahf
clc
out
bound
loopne
ds
pop
jp
fbstp
pop
loop
test
fiadds
rorl
or
push
incl
jne
out
and
rorb
ljmp
sub
ret
lret
icebp
incb
cltd
dec
add
or
mov
adc
xor
dec
out
mov
mov
pushf
bswap
add
ud0
lcall
mov
push
cltd
dec
jle
inc
lods
loop
mov
orl
cmp
cli
dec
int3
leave
sbb
mov
js
push
adcb
das
outsb
cmp
ret
ljmp
add
adc
jp
and
decl
xchg
lea
inc
jmp
out
loop
into
mov
or
jg
push
jg
jl
inc
hlt
cmp
push
mov
int3
lcall
loop
inc
mov
sbb
pop
fwait
or
call
clc
call
mov
addr16
shlb
lea
in
cmp
push
sbb
lahf
imul
sbb
dec
mov
dec
cmp
outsl
std
sub
cmpsb
or
stos
xchg
add
repnz
fmul
pop
mov
cmpsl
in
or
vpmaxsw
cmp
out
xlat
enter
subb
incl
add
adc
mov
cwtl
pop
jmp
sub
and
jg
mov
outsl
mov
js
fldenv
das
xchg
pop
mov
loopne
inc
enter
cmpb
jnp
or
stos
cli
fcmovnb
pop
cli
pop
push
out
jnp
aam
stos
jbe
fwait
mov
test
outsl
add
add
shlb
std
cmp
add
cmp
jns
inc
loop
int
dec
stc
pop
push
mov
cld
fdiv
pop
sahf
sbb
jmp
popl
out
mov
mov
test
outsl
mov
ja
adc
test
xchg
pusha
je
add
cwtl
out
pop
xor
jmp
clc
inc
sarl
pop
xchg
inc
add
stos
decl
cmp
in
dec
pop
or
pop
jnp
jmp
mov
push
xchg
lahf
xlat
sbbl
pop
jmp
mov
xchg
bnd
aad
pop
or
aaa
jmp
sbb
incl
adc
adc
cs
cmpsl
mov
add
fstl
push
adc
pop
incl
pop
in
xchg
pop
xchg
pushf
jmp
in
lahf
adc
test
cli
jge
call
cwtl
jmp
icebp
lret
mull
pop
fcomp
fs
mov
sbb
std
fucomip
ds
fs
mov
sahf
ucomiss
lods
sbb
xor
fisttps
sub
cmp
imul
cltd
inc
or
insb
pop
shl
xor
or
mov
sub
push
or
lret
add
imul
or
clc
and
repnz
in
es
sub
sub
inc
movsb
jg
mov
daa
mov
mov
jmp
xor
fcoms
out
xchg
clc
sbb
cld
call
mov
xchg
xchg
xor
lahf
icebp
mov
sbb
fistpl
add
rcrl
cmp
push
int3
add
push
mov
fimuls
add
incl
ljmp
jg
jecxz
aaa
ljmp
hlt
jp
mov
mov
jmp
enter
gs
lret
mov
cmc
ss
inc
test
andl
in
cltd
pop
sbb
push
cltd
and
pop
and
sbb
pop
mov
sti
xor
aam
add
add
mov
loopne
push
mov
lret
xchg
fidivl
loope
ljmp
sub
push
mov
pop
or
fsave
aas
inc
xchg
pushl
push
arpl
loop
pop
frstor
and
mov
icebp
sub
sbb
out
pop
adc
in
jns
cmp
xchg
cli
jp
fimuls
jb
inc
sti
sbb
shrl
ret
lock
push
cmp
pop
les
cmp
and
xor
in
decl
sub
fsub
imul
xchg
xor
adc
push
jb
cli
adc
push
pop
cltd
xchg
mov
push
stos
lahf
addr16
movsl
mov
xlat
in
cmp
jae
out
mov
jg,pt
incl
jge
inc
cmp
jl
jge
data16
jg
shll
cmp
sub
inc
add
pop
sbb
mov
cld
ljmp
test
scas
adc
shlb
pop
add
decl
loopne
push
insb
pop
push
and
mov
rorl
std
call
xchg
push
push
ds
xchg
push
aad
mov
stos
cmpb
adc
mov
inc
xchg
adc
mov
xlat
mov
jle
sti
nop
or
shrl
pushf
jae
mov
cmp
pop
push
pop
arpl
pop
jmp
mov
insl
xor
sahf
sbb
enter
inc
in
jge
mov
cli
cmc
mov
decl
sub
imulb
xorl
mov
mov
sbb
jb
jmp
jmp
fs
movsb
shrb
pop
loopne
movsl
mov
add
push
and
jno
pusha
pop
loop
call
aas
lahf
aam
cld
loope
mov
inc
cs
sub
call
pop
ds
imul
mov
rolb
test
sbb
add
in
and
jmp
xchg
sub
sub
cs
hlt
fsub
hlt
icebp
repnz
push
mov
loope
push
fidivl
jmp
mov
icebp
cmp
pop
cli
pop
xchg
cltd
push
mov
jl
adc
xchg
xor
scas
inc
repz
adc
jmp
xchg
divb
or
push
jmp
fwait
add
aad
lahf
out
cli
cmp
shrb
cmpsb
xchg
aaa
movl
adc
push
in
fnstsw
pushf
std
mov
mov
add
cmp
nop
sbb
xchg
std
pushw
xlat
mov
incl
cmc
js
sbb
out
jl
cmc
pop
cltd
insb
adc
dec
js
mov
decl
ficoms
insl
mov
loop
imul
adc
stos
pop
mov
lods
xor
inc
cmp
decl
lcall
les
sub
es
popa
sbb
push
mov
xchg
test
repnz
sbb
aam
dec
cltd
adc
xor
xlat
adc
movsl
jno
sbb
sub
sbb
jno
push
pop
cs
xchg
rcrl
jecxz
shrb
jge
or
xchg
rcrl
cmpsl
dec
inc
shrl
jg
cmpsl
fnsave
xchg
test
hlt
addr16
mov
ffreep
roll
imul
cmpsl
ss
mov
sahf
mov
aaa
shl
insb
ljmp
mov
mov
aas
data16
popf
cmp
std
pop
cli
mov
rcrb
call
jmp
sbb
inc
add
ljmp
std
xchg
lret
jns
dec
mov
add
cmpl
call
out
repnz
cmc
movsl
fadd
jbe
repnz
push
clc
movsb
adc
sbb
or
call
sub
mov
dec
pop
icebp
fisttpl
repz
ljmp
cld
mov
sbb
jecxz
es
jmp
inc
lea
stos
jg
call
mov
inc
out
cld
sbbl
test
sahf
sbb
out
mov
pop
outsb
mov
mov
xor
jnp
ret
ja
dec
add
mov
adc
xor
inc
sbb
mov
adc
lods
les
leave
cmp
cmp
daa
mov
xchg
shrl
mul
out
imul
mov
cld
scas
push
jge
mov
mov
cmpsb
cs
jmp
or
popl
daa
fisubl
jecxz
mov
push
push
cld
push
cltd
lock
cld
rorb
int3
jg
fisttps
push
inc
inc
dec
add
leave
adc
out
mov
push
loopne
aas
xor
sar
pop
adc
mov
xchg
out
mov
mov
cld
add
outsb
mov
and
fsubr
jb
xchg
adc
push
jle
inc
mov
int
out
xchg
pop
hlt
movb
fstpt
rcll
in
jmp
xchg
pushl
xor
sti
add
pop
sub
in
sarl
das
movsb
sbb
scas
mov
or
rorl
test
mov
mov
push
xorl
mov
ljmp
pushl
mov
push
stos
or
or
and
das
adc
incl
mov
filds
pop
insb
mov
mov
in
inc
xchg
dec
add
call
and
add
test
xchg
pop
or
stos
gs
add
movsb
inc
idivb
decl
stc
ds
and
into
mov
adc
jo
cmp
push
push
out
mov
stos
insl
pop
outsb
xchg
call
and
es
sub
stc
imul
insb
and
or
lahf
out
dec
jmp
jecxz
rcrb
sahf
test
dec
rorb
shrb
or
or
jge
outsb
xchg
cmpsl
adc
cltd
xor
xchg
pusha
scas
adc
loopnew
jo
inc
cltd
inc
cmp
mov
inc
pop
jae
shll
mov
cmpsl
sar
dec
inc
ret
sbb
lea
cmp
cmpsb
jp
lret
mov
xchg
dec
xor
dec
inc
bound
push
pop
aam
xor
jno
adc
pop
push
call
cli
js
and
enter
cltd
cld
shlb
push
loope
cmp
jg
or
sub
test
xor
ds
gs
and
mov
enter
call
popa
decl
push
mov
sbb
imul
outsl
xchg
lret
icebp
call
iret
jmp
loopne
out
popa
in
lods
add
ds
inc
icebp
mov
push
jnp
pop
jne
mov
icebp
jbe
aam
cmp
sub
outsl
add
xchg
xchg
fldl
imulb
cmp
pop
dec
pop
xor
xchg
js
std
mov
dec
push
cmp
inc
xchg
pop
jns
dec
stos
icebp
test
xlat
add
inc
rcr
clc
bound
lock
es
jae
mov
hlt
lahf
faddl
jg
push
shll
pop
lret
jo
fisubrl
push
xor
and
xor
lods
jle
sbb
faddl
mov
test
jg
fisttpl
or
sub
jp
push
nop
sbb
popa
xchg
sub
and
dec
push
xchg
pop
into
lcall
fmuls
out
mov
incl
popa
and
mov
shl
outsb
jb
dec
call
pop
adc
adc
adc
mov
push
inc
mov
js
js
ljmp
ss
std
sub
fwait
xlat
int3
push
orb
fwait
clc
dec
insb
mov
push
xor
cltd
mov
sbb
jo
mov
sahf
sbb
and
mov
pop
outsl
in
sub
jg
out
inc
push
xor
add
jp
sub
incl
push
pop
lods
mov
cwtl
lcall
jle
adc
dec
movsb
mov
jg
inc
imul
into
jns
xchg
gs
add
sbb
int
loope
push
aad
xor
ss
xchg
ss
lret
pop
scas
int
mov
and
add
or
pushl
aam
rcrb
out
xor
cli
mov
and
push
or
jg
xchg
dec
insb
pop
and
and
jg
stc
stos
xor
cli
lcall
in
lcall
outsl
ja
jmp
mov
stos
fiaddl
push
add
sbb
jp
int
mov
ljmp
mov
xchg
cmpb
mov
lcall
push
in
jmp
sub
sub
dec
das
and
sub
push
or
adc
adc
out
cmp
loopne
sbb
sub
data16
lods
pop
xor
push
addr16
ror
and
push
jo
cltd
loop
rclb
adcl
inc
fisubs
insl
ja
sbb
pop
in
inc
sub
int3
js
imul
cmp
pop
dec
and
imul
xchg
icebp
imull
rcrb
push
add
pop
push
mov
add
rcl
inc
cltd
cmp
movsl
stos
ja
adc
or
imul
sbb
adc
cmp
incl
dec
or
fdivs
push
imul
jo
mov
sub
repnz
movsl
pushl
fcoms
add
loop
sahf
mov
pop
hlt
rcr
add
pop
cld
or
jp
out
jl
lds
adc
ret
xor
inc
xchg
cmpsl
xor
mov
sti
jmp
andb
push
cmp
mov
mov
xchg
push
flds
notb
lcall
mov
mov
push
pop
pop
ss
dec
sub
aas
pop
and
clc
inc
pop
mov
clc
decl
xchg
clc
push
jmp
sti
dec
add
add
or
mov
sbb
xchg
mov
rcr
popl
mov
mov
inc
enter
mov
xchg
flds
cmp
mov
mov
push
or
or
pop
lcall
mov
iret
inc
dec
mov
push
cmp
repz
rclb
jmp
mov
jecxz
mov
dec
scas
loopne
in
xchg
cli
ret
xchg
mov
je
js
and
cli
imul
mov
cld
jg
mov
sbb
pushf
cltd
scas
mov
jecxz
cmpsl
pop
jg
jg
ss
in
push
pop
add
push
sub
decl
mov
cmpsb
mov
inc
pop
xchg
cs
pop
enter
push
pop
aaa
int3
rclb
pop
pop
ss
repz
push
lock
out
loope
std
jno
jge
testl
jg
mov
sbb
cmpb
inc
aas
jp
adc
scas
cld
mov
outsl
cld
call
mov
mov
mov
int
adc
mov
dec
fdivrp
sbb
jb
pop
or
fisttpl
mov
lret
mov
aas
outsl
inc
dec
lock
idivb
inc
xchg
inc
pop
lret
rclb
mov
and
mov
popf
call
jle
fsubl
int
lret
jnp
loop
xchg
pop
lds
jne
sbb
inc
clc
mov
sbb
add
and
je
mov
cwtl
push
push
push
mov
cmp
mov
lahf
imull
in
push
lods
xchg
or
pop
jl
popa
lods
adc
sub
stc
mov
incl
dec
or
pusha
loope
movsl
subl
push
es
mov
fsubrs
mov
mov
stos
cs
sahf
shr
decb
call
jmp
ret
sub
mov
push
es
call
pusha
dec
mov
leave
mov
cld
test
pushl
lock
hlt
fimuls
xchg
or
pop
adc
test
aam
inc
aaa
sub
mov
push
mov
mov
aad
enter
femms
dec
xor
test
in
lcall
aas
mov
imul
daa
sbb
mov
int3
jg
jg
out
pop
sub
mov
dec
nop
pop
popf
in
or
cli
jmp
push
lods
xchg
sbb
cmpb
inc
jb
push
aaa
test
int3
mov
das
ds
cmp
inc
jp
jg
and
dec
mov
add
cmp
push
jmp
dec
sub
or
cs
mov
sbbl
divb
mov
outsl
pop
xchg
adc
adc
sbb
xchg
clc
das
fdiv
loop
cmpsb
push
test
dec
aas
push
cmpsl
dec
push
incl
notl
sti
jno
cs
imul
push
das
cmc
ljmp
add
test
cmp
cltd
or
fnstsw
jmp
in
mov
cli
fnsave
imul
mov
outsl
sub
bound
mov
pop
bound
cmp
cmp
pextrw
inc
repz
push
dec
and
inc
xchg
ss
mov
dec
int
push
jge
push
icebp
ljmp
cmp
sub
icebp
push
inc
rolb
mov
ljmp
jle
test
loop
mov
hlt
fstp
andb
add
ljmp
loop
or
js
pop
or
and
ja
out
insl
test
mov
add
push
push
adc
inc
or
mov
sbb
mov
nop
jns
loop
call
pop
sbb
int3
lock
pop
gs
fcmovu
xchg
loope
fs
std
dec
pop
jecxz
sbb
mov
xchg
and
insb
les
outsl
cmc
adc
and
sar
mov
shl
stos
pop
or
xchg
or
clc
mov
loopne
mov
push
jbe
push
cld
xor
inc
jbe
daa
adc
ljmp
inc
push
mov
push
xor
andl
pop
fidivl
jae
aaa
ljmp
or
add
sub
inc
aad
mov
sbb
out
pop
xorl
aaa
and
js
sub
jmp
bnd
out
mov
dec
push
bound
jbe
lods
popl
jns
and
mov
jo
hlt
cmp
inc
pop
inc
icebp
xlat
dec
or
outsl
mov
loopne
aad
ds
jmp
mov
mov
cld
pop
je
jns
mov
cmpsl
cs
aaa
andl
mov
mov
out
ss
decl
loop
mov
inc
dec
sahf
push
in
or
mov
decl
ljmp
jns
push
dec
xlat
and
into
sub
pop
jmp
das
dec
arpl
push
std
dec
xor
sbb
cmp
and
mov
xchg
mov
mov
pop
ret
dec
add
push
mov
sbb
repnz
rcll
les
outsb
cmc
or
pop
xor
cmpsb
xchg
mov
icebp
xorl
test
pushl
cmpb
je
push
pop
fwait
dec
jp
inc
out
xchg
add
decl
sbb
jns
push
cmp
inc
mov
ljmp
mov
xor
adc
popf
loope
pop
rolb
and
subl
pop
jg
gs
dec
fisubl
clc
xor
test
shll
cmc
call
sarb
add
test
cmp
push
lcall
xor
lds
push
ljmp
add
jmp
ljmp
mov
inc
imul
in
cld
xchg
call
and
dec
add
mov
jl
insb
in
lcall
out
dec
loop
std
xchg
xor
cmp
push
shlb
fsubrs
lods
rcr
loop
cli
cwtl
int
ror
sahf
aad
push
lods
push
fisubrs
repnz
push
out
sbbb
aam
cmp
and
adc
jl
popf
pop
jg
add
dec
lea
cmpsb
sub
ds
lock
insl
stc
add
inc
dec
cld
call
movsl
imul
xor
cltd
dec
insb
mov
jbe
cmc
fbld
call
adc
pop
fidivs
mov
dec
sar
out
outsb
push
add
lcall
adc
scas
or
ljmp
hlt
pop
push
jne
xor
jge
mov
inc
loope
stos
sub
jle
dec
xchg
add
sarb
shlb
filds
daa
mov
das
mov
fwait
es
mov
mov
pop
xor
jl
xchg
or
mov
sbb
pop
vsubps
mov
pushl
and
out
mov
maxps
in
or
aaa
jmp
inc
push
cmp
xor
aad
jne
aam
lea
ja
jmp
mov
sub
leave
arpl
fiaddl
push
push
mov
jg
add
arpl
shrl
call
jmp
out
int3
push
cmpsl
lret
cmp
mov
fisubrl
loop
decl
lcall
add
scas
push
movsb
push
insb
or
mov
add
or
pushl
popf
call
lret
addr16
shrl
jno,pt
loop
popf
ret
cmp
pop
push
jle
xor
push
add
inc
loope
adc
ret
or
or
leave
xor
iret
mov
ljmp
cld
pop
sti
aad
sub
xlat
lods
ret
test
les
xor
outsl
pop
ljmp
in
imul
out
fstpt
lcall
fmul
andb
sub
fs
adc
add
repz
jg
icebp
add
pop
shll
adc
add
imul
pushl
sub
enter
or
add
sti
cs
popa
dec
out
or
decl
dec
inc
pusha
icebp
sarb
push
test
sbb
stc
adc
filds
lcall
lock
mov
add
dec
or
dec
bound
mov
adc
cld
stc
data16
enter
pusha
sbb
xlat
mov
adc
loopne
jmp
icebp
xchg
in
adc
sub
sub
mov
push
mov
push
incl
xor
pop
out
in
call
insl
dec
pop
xchg
lcall
xchg
das
cmp
mov
lds
fwait
adc
decl
fildll
fisubrs
pop
xor
mov
cmc
loopne
ss
andl
sub
adc
outsb
push
fwait
mov
adc
xor
std
push
daa
mov
or
mov
mov
and
dec
jne
scas
mov
add
lcall
fsubr
add
dec
dec
jno
into
cmp
and
inc
push
shlb
incl
or
mov
mov
mov
lahf
sarb
cmp
mov
mov
decl
stos
aas
sub
add
sub
mov
cmp
aaa
mov
ljmp
dec
leave
rcrl
push
ss
fiadds
xchg
ror
and
call
mov
add
test
inc
addb
inc
lea
sbb
lcall
lcall
clc
dec
shl
mov
sahf
mov
shrb
loop
cmp
in
pushl
dec
sbb
rcrb
cs
dec
xor
stos
mov
cmp
pushl
sbb
mov
pushf
mov
mov
pop
cld
lcall
or
ficoml
mov
arpl
jge
insb
pop
mov
call
cmc
push
xor
xchg
add
xchg
aas
ds
jne
xor
das
popa
and
mov
mov
decl
dec
ret
adc
pop
ror
xor
inc
clc
add
push
cld
pop
mov
push
decl
mov
add
iret
or
jne
popf
jno
add
repnz
mov
popa
xchg
xchg
mov
shrb
push
dec
mov
out
cmp
call
mov
xor
push
cs
int3
dec
push
mov
mov
in
fisttpl
adc
push
inc
decl
jl
push
xchg
mov
fldcw
adc
jno
insb
pop
xor
adc
cli
loopne
mov
push
or
jns
ljmp
lahf
insb
pop
js
and
lods
mov
xor
xor
fadd
cmp
cli
incl
mov
popf
enter
jmp
int3
cld
cs
mov
and
gs
push
dec
lcall
sbb
add
mov
and
jmp
inc
insb
inc
add
sahf
xchg
pop
loopne
adc
dec
xchg
sub
sti
or
sahf
lds
outsb
add
incl
addr16
push
cmc
out
int3
adc
sbb
cwtl
aad
aad
aam
test
imul
cld
in
outsl
scas
call
or
out
mov
sub
xor
stos
adc
inc
cmp
push
xor
jno
aaa
aad
fwait
movsb
movsl
jmp
cmpl
mov
in
ret
push
add
call
xchg
das
adc
jnp
loopne
lock
outsl
mov
cli
pop
push
pushl
or
push
repz
inc
stos
push
nop
mov
inc
scas
sbb
mov
mov
pop
out
in
lcall
lcall
std
xchg
aaa
fstps
mov
fwait
sbb
insb
xchg
mov
test
dec
movsb
notl
mov
cmp
les
xor
rorb
jbe
sub
in
icebp
dec
vmread
js
jmp
wbinvd
pop
fwait
cmpsb
mov
mov
inc
mov
ljmp
dec
fldt
lret
popf
pop
mov
push
icebp
pop
jnp
lret
bound
ljmp
sub
and
sarb
call
gs
jne
movsl
inc
test
decl
aam
dec
icebp
ljmp
and
mov
mov
fnsave
aad
rcll
jb
into
fiaddl
pushf
sub
test
call
aad
pop
sbb
jmp
lahf
mov
int3
jae
push
push
xor
fcmove
lds
decl
mov
das
mov
push
mov
int
nop
jp
jg
lock
mov
inc
and
mov
cmpsb
mov
dec
inc
sub
call
adc
insl
ljmp
sahf
or
ds
stc
add
sarb
cli
sub
out
jg
xchg
xchg
jge
cmp
stc
xchg
dec
popf
lcall
lock
lcall
push
or
insl
in
fnstsw
cltd
icebp
pusha
xchg
jp
mov
mov
dec
dec
std
cmpsb
jg
lcall
sahf
inc
adc
ret
sti
cltd
clc
mov
test
dec
ljmp
repz
or
les
jne
mov
fucom
cld
stos
movl
incl
mov
clc
popf
mov
jecxz
mov
mov
cld
jmp
pusha
repnz
nop
inc
xchg
lds
sub
push
dec
rolb
into
jg
push
sub
jo
lahf
xchg
pop
mov
fdivr
xchg
incl
mov
jg
mov
inc
pop
xchg
daa
or
les
dec
cmp
cmp
sbb
incl
push
cmp
fldenv
sub
jbe
jnp
jg
decl
in
cmpsl
movsb
push
fwait
mov
mov
int3
xlat
adc
pop
cli
sub
cmp
cmpsb
jne
push
ret
fstl
repz
out
fucomip
jmp
or
fidivrl
jae
movsl
sbb
in
insb
fmuls
pop
lcall
lcall
lods
mov
and
xchg
mov
or
jg
decl
push
pop
pushf
sbb
jg
xchg
jmp
cmp
ljmp
adc
jmp
jp
rorb
scas
mov
jp
and
ja
xor
pop
scas
clc
mov
fucomp
mov
jno
and
rclb
int
out
inc
xor
or
push
ljmp
cmpsl
or
adcb
divb
mov
mov
stos
xchg
jecxz
lret
popf
jmp
push
dec
rclb
rcl
pop
jmp
xlat
push
pop
pushf
push
sbb
inc
clc
iretw
shll
cli
cmp
add
or
popa
mov
inc
cmpsl
xchg
cmpsb
out
xchg
fs
fs
mov
sub
ljmp
mov
div
or
in
push
incl
inc
sti
sbb
push
mov
call
in
mov
jae
push
pusha
jecxz
sub
adc
pushl
lods
adc
and
test
outsl
xor
jnp
leave
or
add
jg
adc
adc
fsubrs
sub
lods
sub
leave
adc
cs
call
imul
es
xchg
xchg
leave
rcrb
jle
push
fcmovnb
in
lret
mov
mov
sub
sub
cltd
push
repz
adc
ror
jecxz
call
mov
cmp
mov
mov
bound
dec
mov
mov
mov
rcrb
int3
inc
fcmovnb
pop
push
shrb
ljmp
jb
stos
lea
je
xor
ficoms
or
cld
add
pop
jmp
lock
icebp
lcall
ror
mov
fwait
or
xchg
or
xor
and
jg
pop
push
mov
movl
sahf
arpl
lods
decl
cmpsl
adc
lcall
rorl
mov
sbb
and
movsl
jne
pushl
outsl
jbe
cmp
lods
jbe
lds
sbb
jnp
push
sbb
dec
pop
in
push
push
inc
ds
rcrl
in
and
cmp
push
cmp
jbe
jbe
sbb
rol
jle
lret
icebp
mov
stos
mov
cmpsl
mov
pushl
xor
ljmp
lcall
scas
pushl
mov
bound
jle
imul
mov
sbb
loopne
and
jo
fisubrs
dec
daa
mov
jbe
or
mov
pushl
inc
mov
cmp
pop
js
xor
out
test
cmp
xchg
incl
imul
nop
call
cli
call
pop
shrb
fnstenv
sbb
sub
jns
aad
or
loop
fistpll
das
lock
xor
adcl
ljmp
mov
sbb
fidivrl
xlat
push
inc
pop
sbb
incl
xchg
or
and
or
addr16
push
rolb
gs
jp
stos
call
loopne
ss
in
inc
daa
and
inc
push
push
sbb
addr16
jg
clc
repnz
sbb
arpl
cmpsb
jge,pt
xchg
imul
ljmp
jmp
lret
jns
in
dec
in
adc
adc
lock
leave
mov
in
xchg
call
push
arpl
ljmp
mov
jle
inc
cmpsb
dec
loop
mov
imul
inc
sar
mov
lods
adc
aam
les
addb
call
push
sub
and
or
popa
jae
xor
shlb
ljmp
popf
movsl
scas
out
test
push
mov
rclb
mov
push
sahf
ret
fwait
and
outsb
push
in
jp
sbb
cld
pushl
push
mov
push
pop
test
add
jecxz
mov
lods
pop
jmp
xor
add
dec
pusha
out
sub
dec
xor
mov
mov
scas
xchg
mov
std
call
jo
xchg
test
adc
inc
mov
add
cmp
out
arpl
push
fnclex
testb
call
das
dec
and
jb
int
add
ret
bound
js
push
pop
mov
fcomp
int3
into
fiadds
call
addr16
mov
sub
mov
ds
lock
lcall
subb
or
jecxz
xor
inc
imul
add
mov
idiv
lcall
rcrl
and
pop
mov
xlat
iret
add
stc
dec
inc
pop
jnp
cmp
jns
or
and
js
push
ss
pop
pushf
ljmp
cmp
jecxz
pop
cmc
pushl
jp
in
movsb
or
xchg
xchg
xchg
sub
cltd
popl
divl
inc
adc
mov
mov
insl
jp
loopne
add
gs
in
repnz
jo
shl
fbstp
leave
ja
add
cmpsb
lcall
xchg
test
adc
ss
push
lods
iret
jbe
cli
jp
mov
lods
dec
adcb
sub
shll
or
fucomip
nop
je
in
inc
dec
and
add
lea
and
sahf
lea
in
and
jle
cmpsb
push
test
inc
pop
cwtl
in
stc
fwait
push
ljmp
adc
push
mov
jnp
insb
or
jb
mov
xchg
and
sbb
dec
xor
or
sahf
cmp
and
insl
xchg
scas
dec
inc
mov
lcall
filds
inc
mov
outsl
std
ljmp
outsb
add
test
loop
stc
aad
adc
add
inc
sbb
inc
adc
xchg
std
mov
fstpt
mov
adc
xchg
ja
decl
mov
xor
inc
xchg
jne
sarl
mov
push
out
pop
pop
pop
mov
mov
outsl
inc
add
sbb
enter
and
pop
jne
mov
push
xchg
xor
test
lock
call
mov
popf
outsb
and
cltd
or
sahf
sbb
cli
cmpsl
fs
cs
xchg
call
sbb
mov
in
call
xchg
mov
data16
inc
xor
sbb
enter
lcall
mov
fstps
jbe
adc
push
mov
scas
cmp
jecxz
and
scas
dec
mov
push
or
outsb
fstpl
or
movsb
addr16
aad
mov
aaa
lcall
xor
or
push
xor
ret
in
rolb
cmp
popa
faddl
lods
lods
jo
cmp
incl
jmp
and
cmc
fwait
and
pop
shr
lret
cwtl
sub
fs
jg
push
push
or
jne
in
nop
pop
and
and
lds
mov
adc
xchg
jmp
jb
sbb
in
lea
nop
sbb
out
fidivl
push
xchg
sub
hlt
fisttpll
xor
incl
lcall
jmp
orl
jns
imul
not
mov
dec
cmp
sbb
pop
adc
in
not
cmp
mov
call
imul
or
fisubrl
inc
mov
or
dec
fisttpl
outsl
dec
shrl
or
stos
insb
and
mov
jle
mov
int
imul
mov
sub
addr16
rorb
loope
fwait
call
enter
xor
lahf
pusha
cmpsl
xchg
pop
imul
push
ds
lcall
jmp
ljmp
inc
dec
push
fistps
lods
inc
add
push
mov
in
das
add
fdivr
and
and
xchg
push
movsl
xor
xchg
mov
jg
mov
scas
add
clc
jle
pop
lds
std
push
incl
outsb
rolb
inc
lcall
nop
xor
mov
clc
lods
cltd
popf
repnz
sub
mov
mull
sub
lret
outsl
std
addr16
dec
inc
icebp
jo
add
add
enter
loope
int3
dec
fsub
fmull
es
fisttps
mov
decl
jmp
shll
sub
loope
lods
sbb
aam
in
cs
bnd
je
idiv
xchg
call
nop
pop
xchg
sbb
out
cmp
adc
es
dec
jg
sub
add
nop
push
push
dec
out
xchg
add
scas
fnstcw
adc
jge
push
mov
aaa
pop
jecxz
into
adc
add
sub
or
bound
subl
pop
std
add
dec
dec
jp
test
in
gs
pushf
mov
test
mov
sti
in
jge
adc
stos
repnz
arpl
push
popf
or
add
orl
or
stc
inc
js
push
out
movb
bound
mov
adc
sbb
cmp
adc
mov
sub
incl
mov
pop
xor
sbb
loopne
nop
inc
lods
mov
jg
insl
mov
fucomip
pop
outsl
adc
fidivs
cmp
pop
out
ljmp
sbb
in
push
stos
stos
mov
push
jl
or
add
sbb
clc
jbe
cmp
xchg
fdivr
in
mov
cmp
aaa
cmp
and
cli
js
ja
loop
movsb
inc
gs
pop
xchg
lcall
call
xlat
add
jne
dec
adc
adc
sub
jmp
repnz
ljmp
and
mov
and
add
lret
and
push
orb
inc
imul
jmp
xchg
arpl
pusha
mov
mov
lds
jnp
mov
fistpll
loope
lds
push
sub
dec
mov
sbb
jmp
sub
iret
outsl
push
jmp
add
mov
mov
or
neg
lcall
icebp
xchg
push
mov
mov
daa
dec
test
add
add
jg
cmpb
inc
sub
decl
pushl
jbe
icebp
xchg
pushf
pushf
fwait
mov
stos
mov
inc
idiv
in
mov
push
bswap
scas
repz
out
outsb
cmp
std
sbb
jne
mov
outsl
pop
sbb
fistpll
mov
arpl
jp
adc
dec
dec
mov
pushf
adc
xchg
ljmp
hlt
cmp
int3
adc
hlt
push
es
inc
mov
jno
xchg
adc
sti
stc
jg
decl
adc
push
ret
mov
push
mov
xchg
push
cltd
dec
sbb
cmp
leave
mov
call
call
pop
repnz
push
movsb
outsl
enter
pop
and
and
xchg
lcall
enter
daa
mov
xchg
pop
cwtl
enter
test
jno
movsl
inc
and
jo
lea
jmp
ljmp
or
push
mov
rorb
ja
cltd
add
outsl
lock
push
xor
jns
jns
xor
mov
mov
inc
or
lea
pop
lea
mov
call
subl
push
sub
or
test
push
call
adc
or
jg
inc
xor
push
loop
stc
stos
lcall
mov
ret
mov
movb
dec
mov
xor
mov
xor
ljmp
ds
xor
arpl
jb
push
add
dec
in
or
es
call
ret
adc
jae
mov
iret
push
jnp
adc
and
adc
adc
cmp
jp
push
mov
mov
jae
xchg
scas
xlat
pusha
xor
and
jmp
pop
sub
in
sti
bound
jo
jecxz
inc
clc
jmp
test
out
fstl
dec
lea
xchg
or
mov
cs
daa
leave
adc
inc
xchg
inc
loop
test
pop
adc
data16
fsubrl
fildll
cli
popa
push
dec
leave
sbb
negb
mov
push
lcall
icebp
sbb
sbbl
cmpsl
fistpl
cmp
jmp
lret
imul
pop
shlb
mov
cli
and
jmp
sbb
and
test
cld
xor
pushl
cli
xchg
subl
clc
xchg
xchg
aad
rol
dec
shl
push
cltd
pushf
je
addb
pop
inc
out
fdivrs
jle
jno
popa
mov
cli
lods
mov
or
xchg
xchg
dec
or
mov
jg
call
das
jle
scas
ds
aaa
mov
mov
fcomps
cli
dec
fnstcw
cmp
mov
add
mov
sbb
mov
lea
cld
mov
movsl
das
sbb
mov
cli
decl
das
mov
mov
cltd
aas
dec
mov
inc
cld
das
insl
lcall
shr
xor
jb
adc
xor
inc
mov
and
jmp
aas
push
lds
inc
xor
lds
cmp
std
lret
lcall
cmpsb
dec
test
decl
cmpsl
movsl
dec
adc
aaa
leave
or
aas
mov
dec
fucomi
mov
and
xchg
ljmp
push
sahf
dec
aam
pop
lret
cltd
push
sub
dec
pop
cmp
enter
inc
inc
pushl
lret
dec
jmp
or
jo
xor
push
jbe
xor
add
les
dec
or
lea
jecxz
fs
scas
sbb
fsubrl
shrb
dec
sub
inc
ja
ret
call
xor
test
inc
add
call
cmp
ljmp
cmp
insl
mov
jnp
adc
mov
pop
test
cwtl
pop
cmp
push
xchg
mov
adc
jg
push
push
inc
dec
push
sbb
and
jmp
and
incl
push
pop
in
mov
jmp
ljmp
arpl
push
fistpl
fldenv
ja
bound
adc
maskmovq
out
das
std
fucomip
mov
mov
xchg
ljmp
add
inc
test
inc
movsb
sub
jnp
scas
pop
outsl
and
ret
bound
inc
jne
jne
pop
out
cmp
pusha
out
adc
jg
gs
stos
call
pop
fnstenv
mov
and
adc
call
mov
mov
test
out
cmp
or
xchg
lods
inc
push
cld
mov
cmc
sub
call
pushl
in
fucomp
add
repz
pop
dec
out
aad
xorb
cmc
pushl
xchg
je
jmp
cmpsl
je
pushf
sub
sbb
lods
insl
push
incl
cmp
push
addl
pop
sbb
sbb
adc
mov
icebp
sbb
jecxz
cwtl
fwait
xor
hlt
roll
sarb
sbb
pop
mov
mov
stos
loope
icebp
aaa
xchg
loope
pusha
outsb
or
popf
cld
out
or
cmpsb
iret
jg
cmc
xchg
sub
test
or
out
mov
sbbl
hlt
mov
sub
aas
sbbl
xchg
imulb
cmc
ljmp
cld
sbb
jns
jns
mov
popf
pop
mov
add
mov
xchg
cli
das
repnz
outsl
sbb
aaa
repnz
clc
pop
xor
nop
stos
cmpsb
sbb
bound
inc
std
mov
js
aaa
sbbb
jmp
jg
test
ds
inc
or
mov
push
ljmp
lock
push
int3
xchg
xor
rolb
xchg
mov
mov
cmp
outsl
in
sub
dec
mov
ss
out
cmpsb
dec
es
pop
and
jg
scas
loop
push
adc
jmp
repz
mov
adc
sti
cmp
leave
inc
scas
ljmp
inc
dec
aas
cmpsl
test
or
or
dec
adc
mov
mov
xchg
pop
sub
push
mov
jp
push
adc
pusha
sub
scas
movsb
jne
cmp
rcrl
and
or
cltd
stc
cmp
fistl
cld
or
bound
bts
cs
inc
decl
cmp
cmp
mov
jne
xor
fists
scas
jmp
subl
mov
shll
and
or
das
xchg
int
lret
jp
sbb
jmp
lds
mov
xchg
pushl
ljmp
xchg
mov
xor
ljmp
enter
or
xchg
jg
lods
pop
mov
push
enter
adc
push
ljmp
repnz
insb
ret
sub
pop
mov
lret
xchg
xorb
call
xor
inc
mov
adc
pop
add
xchg
loope
fsts
xchg
into
pop
push
inc
mov
ljmp
mov
jb
fisubrl
sti
inc
cmpsb
cltd
sti
mulb
adc
incl
dec
orb
adc
insb
xchg
shl
movsb
pop
int3
je
in
add
mov
mov
incl
mov
xchg
xor
and
mov
pushl
jno
test
daa
mov
jge
mov
cltd
int
sbb
lea
mov
mov
ljmp
into
mov
push
aaa
xchg
scas
aaa
sbb
mov
pop
xchg
sbb
cmp
jb
push
clc
fucomip
jo
cmc
addr16
jle
adc
xlat
and
jge
pop
cltd
test
mov
mov
ret
push
pop
pop
push
inc
push
or
into
dec
imul
lock
dec
je
add
mov
aas
std
ja
add
dec
sub
sarl
mov
into
jbe
xchg
ljmp
mov
add
add
jg
sbb
ja
inc
mov
mov
xor
das
hlt
jl
mov
and
cmc
adc
push
or
or
pusha
icebp
jno
decl
xchg
xchg
xlat
inc
iret
cwtl
add
cltd
sub
ljmp
xchg
dec
pop
push
orb
xor
cmp
roll
out
mov
mov
dec
cld
pushl
adc
scas
xchg
out
je
lods
arpl
out
pop
call
int
jmp
out
jle
dec
movsb
data16
decl
insb
lock
xor
aas
out
lret
mov
imul
decl
jo
sub
xchg
mov
in
push
and
sbb
push
jne
incl
inc
dec
sbb
imul
andl
mov
mov
xor
test
add
pop
push
or
jo
cmp
mov
inc
popa
cs
dec
cmp
fimuls
and
bound
mov
adc
fstp
push
xor
or
sbb
ficompl
fstpl
jbe
push
call
add
ror
add
sbb
xchg
adc
pop
push
cld
adc
call
or
adc
and
dec
cmp
stc
xchg
xor
inc
sub
repz
mov
mov
push
fcomps
jecxz
and
test
sub
jae
pop
mov
stc
in
imul
xchg
mov
out
adc
xor
sti
cmp
mul
aad
lock
call
jae
and
mov
imul
adc
stos
repnz
popf
cltd
fmuls
mov
xchg
add
or
divl
cltd
sbb
mov
mov
cwtl
mov
incl
mov
mov
mov
sarl
pushf
ljmp
cwtl
cmpsw
or
ss
mov
shld
and
or
icebp
in
or
push
xchg
jbe
pop
dec
fsts
sub
mov
call
push
jge
xchg
xlat
out
lea
xor
sub
inc
inc
mov
cwtl
mov
fidivrl
ljmp
das
jp
push
cli
in
out
adc
add
hlt
pop
cmpsl
out
cmp
xor
fildll
adc
idivl
adc
fistpl
lahf
scas
aam
jmp
out
in
sbb
mov
pop
jmp
cmpsl
cli
dec
cmp
mov
pop
inc
movsb
stos
pushf
mov
sub
shl
or
das
jbe
fisubl
pushl
xor
in
imul
insl
pop
dec
mov
push
xor
adc
ljmp
mov
or
cs
pop
add
lret
sarb
dec
mov
in
lcall
inc
daa
pop
dec
and
out
sbb
cmp
cmc
cmpsl
imul
call
xor
or
fwait
scas
lea
cmpsl
aaa
pop
inc
mov
pop
and
xor
ljmp
mov
pop
jns
mov
fcomps
mov
sub
adc
dec
and
cmpsl
xor
jbe
sub
out
jle
jmp
add
fdivr
mov
and
pop
loope
movsl
divb
adc
adc
pusha
push
incl
inc
cmp
jecxz
fsubrl
mov
push
jne
lcall
nop
sub
adc
ficomps
mov
sti
lcall
and
out
cmp
sub
inc
enter
bound
xor
outsl
std
jp
rolb
leave
imul
adc
xchg
push
cmp
inc
sahf
addr16
mov
nop
adc
loopne
xchg
push
adc
or
cmpsb
xchg
push
std
and
xchg
push
xchg
mov
or
cld
sub
fs
aaa
pusha
shll
ret
decl
ss
scas
pushf
movsb
js
mov
sbb
arpl
gs
rolb
das
cmc
fsts
data16
aam
fmull
sbbb
in
inc
stos
and
dec
push
nop
lods
fidivrl
dec
pop
popf
xor
inc
cld
or
cmp
and
decl
les
mov
mov
lds
inc
outsl
lahf
enter
and
ljmp
mov
mov
aam
push
mov
lahf
int3
fwait
ljmp
sahf
mov
aad
jg
jbe
fidivl
push
or
call
idiv
mov
aas
xor
and
jg
sub
mov
cltd
out
cmp
dec
incl
int3
mov
lahf
mov
test
stos
or
xor
sbb
decl
push
add
mov
xchg
test
mov
sbb
call
inc
scas
mov
pop
push
mov
hlt
xor
popf
mov
jbe
enter
decl
pop
mov
hlt
fs
lods
fldt
dec
mov
shlb
movsb
xchg
add
cmpsb
sbb
cmpsl
push
imul
fildll
fs
fists
test
jg
xchg
ss
aas
mov
inc
xchg
xlat
inc
sar
cmpsl
mov
xchg
icebp
mov
call
lods
dec
sub
ret
fisubrs
sub
add
jns
push
adc
rcrl
inc
repz
mov
mov
mov
dec
or
dec
pushf
test
cli
lcall
pop
push
mov
mov
aam
sbb
cmc
in
outsb
loopne
push
dec
fimuls
lahf
xor
std
pushl
ret
add
cmpsl
sub
mov
ljmp
lock
mov
pop
repnz
cld
cs
adc
insb
pop
mov
pop
test
dec
sub
fdivrs
lahf
inc
out
or
lahf
pop
pop
leave
inc
fcom
int
pop
xor
push
pusha
stc
inc
aaa
xor
mov
insl
lock
mov
testl
push
mov
mov
adc
push
sbb
into
rcll
inc
or
aad
icebp
push
dec
cmp
inc
pop
ss
ljmp
pop
cmp
aas
pusha
sbb
xchg
and
dec
sbb
pop
cld
call
sub
mov
shrb
dec
inc
add
lds
push
mov
push
lcall
and
movsl
xchg
mov
orb
test
cmp
scas
mov
xor
sarb
movsl
roll
push
shlb
cmp
addl
mov
pop
add
lcall
push
ja
scas
fldl
fucomip
popf
jp
rorb
call
jge
pop
push
pushaw
jp
ljmp
mov
push
add
fcomi
iret
mov
call
mov
sub
mov
xchg
push
jne
pop
xor
adc
and
push
inc
pop
push
sub
push
movsl
ljmp
aas
dec
xor
filds
pop
aad
push
ja
fadds
roll
arpl
push
jg
das
std
call
mov
js
add
mull
mov
lock
fisubl
cmp
insb
inc
sbb
fld
mov
xchg
push
xchg
xchg
scas
fdivp
inc
loope
incl
jnp
and
jmp
dec
mov
push
ret
and
or
inc
ds
ljmp
hlt
jmp
pop
mov
roll
icebp
add
adcb
push
xchg
push
xchg
jne
pop
mov
lret
dec
xor
add
repz
test
gs
lods
out
data16
push
gs
pop
ret
cmpsb
sbbl
cld
push
icebp
call
stos
xchg
xchg
jae
pop
addl
sbb
and
cmp
insb
jmp
dec
push
les
and
pop
test
dec
pop
rolb
cli
popa
in
sub
dec
sbb
xchg
in
xchg
pop
bound
jecxz
lea
sub
pop
incl
xchg
gs
xor
movsl
and
sub
cmp
outsl
lock
push
stos
mov
clc
stos
add
mov
mov
jle
sarb
loope
push
jb
xor
inc
repz
jle
outsl
incl
lods
pop
xchg
ja
outsl
push
divb
xchg
cmp
jg
dec
test
repnz
jmp
xchg
add
mov
out
fcmovu
add
or
ret
call
in
mov
mov
scas
sub
sbb
out
mov
sub
sbb
or
xor
cmp
xor
push
mov
insb
mov
cmp
shlb
and
or
incl
push
repnz
fstl
pop
iret
push
lcall
mov
in
test
mov
add
and
decl
es
ret
mov
pop
test
or
sub
jge
mov
inc
js
lahf
cmp
mov
mov
pop
enter
sbb
lcall
cmp
ss
cmp
jle
mov
push
mov
xor
fchs
jmp
pop
mov
mov
jle
loop
sub
inc
int3
fdivrl
sbb
call
mov
adc
cltd
push
shl
imul
cli
ljmp
sbb
jle
sub
sub
rcl
mov
lcall
pop
and
xchg
push
adc
xchg
and
or
popa
rolb
jge
shrb
push
push
inc
or
call
inc
mov
jp
dec
clc
fisttpll
pop
add
xor
mov
ss
and
inc
and
movsb
pop
out
adc
dec
fcoms
gs
mov
incl
dec
jl
dec
gs
icebp
xor
mov
cwtl
inc
ljmp
icebp
loopne
mov
inc
pop
jno
cs
mov
out
sarb
pop
cld
mov
test
push
in
fnstsw
add
roll
jmp
and
cmp
cmc
loope
cmp
mov
and
xchg
vcvtsd2si
mov
push
enter
push
test
ss
out
mov
idivl
cmp
sub
iret
scas
je
dec
dec
stc
test
pushl
insb
jbe
fwait
push
sbb
or
adc
mov
or
inc
dec
jmp
dec
push
test
popf
es
adc
loopne
cli
lcall
imul
clc
pop
jl
addr16
mov
pop
cmpsb
pushl
and
int3
mov
and
pop
inc
sahf
fmull
or
ljmp
jbe
es
jecxz
or
dec
andb
ds
sbb
std
jg
call
pushf
leave
les
sub
and
pop
pop
xchg
jg
fidivrs
mov
mov
testb
out
sbb
lcall
repnz
loope
push
shrl
xor
pop
out
sub
clc
ret
pop
test
rcrb
insl
int
mov
insl
imul
sbb
out
rcl
fwait
dec
in
outsl
hlt
pop
lds
or
popa
cmp
rolb
addr16
call
inc
incl
mov
ljmp
add
jno
and
mov
stos
pushl
aam
inc
dec
es
pop
sbb
inc
pop
jbe
cmp
cltd
outsl
sub
mov
cld
or
aaa
push
jmp
sbb
mov
jle
mov
decl
mov
pop
push
cwtl
xchg
daa
arpl
mov
mov
xchg
dec
jae
mov
sbb
push
std
icebp
decl
nop
mov
or
ds
call
ljmp
inc
pop
and
sub
in
or
fs
out
ds
clc
mov
mov
and
fdiv
inc
loop
outsl
push
fwait
dec
xchg
ljmp
gs
les
popa
mov
mov
cmp
push
sbb
fisttpl
iret
sbb
mov
popa
and
cmp
addr16
aas
rol
xadd
and
addr16
repz
jg
push
push
in
and
lret
sbb
and
ljmp
adc
mov
cmpsl
lds
push
lds
stos
dec
outsl
incl
std
jno
mov
mov
test
pushl
jg
jb
call
push
cmpsl
arpl
push
mov
sbb
ljmp
lret
lahf
push
add
stc
mov
fs
jp
sti
mov
insb
sbb
incl
clc
ds
stos
insl
dec
pop
push
in
std
inc
aam
dec
std
int3
stc
pop
cld
pop
adc
decl
cld
push
out
lret
lea
iret
mov
loope
jno
jne
in
imul
dec
lock
clc
mov
shr
or
rolb
add
ss
jecxz
or
mov
or
sbb
xchg
cli
pop
cli
test
cmp
mov
das
nop
pop
sbb
and
call
jge
data16
xlat
jge
lret
pop
in
lods
iret
sbb
call
jo
inc
dec
into
sbb
mov
jmp
mov
push
je,pn
cmp
or
mov
push
pushf
jne
inc
in
sbb
pop
push
add
and
mov
call
leave
pavgw
shlb
add
cwtl
fucomi
lret
fmull
sarb
cmpb
lods
addl
cmc
xchg
insl
sbb
sar
daa
pop
sbb
outsb
sahf
iret
mov
testb
xchg
out
xchg
dec
repz
ljmp
enter
shrl
in
mov
out
loop
cmc
lock
adc
pop
and
popa
enter
fldl
scas
addr16
push
inc
sub
cmp
inc
andb
xlat
pop
jg
push
ss
es
call
inc
orl
jae
imul
xchg
ljmp
lock
cld
and
pop
or
mov
mov
imul
push
mov
push
mov
push
jge
pop
cmpsl
pop
jecxz
movsb
mov
lock
mov
scas
clc
aas
pop
lods
dec
mov
call
clc
xchg
icebp
mov
mov
rcrl
fisubrs
pop
loopne
dec
cld
mov
ret
fisttpll
xor
and
inc
ret
nop
pop
adc
loopne
mov
cli
cli
in
int3
jge
shl
out
fsubrl
xor
fistps
jae
inc
hlt
iret
mov
adc
adc
fst
xor
xor
fldl
or
inc
rcl
or
es
clc
xor
iret
push
jne
in
mov
and
pop
xor
lds
cmp
or
ljmp
repz
mov
es
movsl
or
fldz
mov
ljmp
and
stc
mov
xchg
pop
mov
movl
adc
or
pop
mov
and
out
aam
incl
movsb
xchg
pushf
dec
test
sti
test
dec
pop
cwtl
dec
js
jmp
push
mov
mov
adc
iret
loope
rcrl
pusha
out
hlt
and
outsl
mov
clc
mov
xchg
add
lods
insb
mov
xchg
rcrl
lods
mov
pop
imul
dec
sbb
jnp
mov
movsb
decl
mov
jp
mov
adc
pop
mov
test
popa
mov
mov
mov
pop
clc
pop
loop
sahf
scas
pop
jns
inc
mov
aaa
pusha
insl
out
cld
pushl
pop
pop
incb
xor
test
add
inc
ljmp
pop
outsb
lret
dec
adc
out
and
xchg
mov
dec
out
mov
push
jg
ljmp
int
push
ret
mov
outsl
fsts
dec
pop
roll
xchg
fbld
clc
mov
mov
push
loope
aam
icebp
mov
sub
clc
adc
cmp
sti
fcoms
pop
outsb
mov
movsl
jl
sahf
fs
sbb
bound
cltd
cwtl
lea
call
or
push
jne
mov
cmp
push
loope
mulb
sbb
push
and
mov
add
mov
outsl
cmp
push
lcall
popa
and
or
lds
mov
or
lock
cli
add
push
lods
xlat
pop
sbbb
or
decl
mov
outsb
pop
push
mov
mov
repnz
iret
test
sar
add
push
lret
jmp
pop
call
popf
inc
cmc
push
in
ljmp
add
or
mov
out
mov
or
pop
jg
push
jae
subb
sbb
cmp
dec
int
xor
out
dec
mov
adc
aaa
test
in
daa
cmpsl
adc
cmpsb
stos
fwait
pop
push
lods
mov
sahf
mov
cld
mov
ficoms
in
push
xchg
pusha
sub
aam
clc
push
test
icebp
fistps
or
cmp
aaa
mov
mov
rcr
inc
mov
js
lds
push
xor
xchg
nop
push
jecxz
call
jmp
push
push
cli
pushf
jae
cmpl
jl
lcall
mov
push
mov
inc
mov
loop
cmp
or
das
icebp
outsl
dec
pushf
fiaddl
xlat
leave
xchg
sub
out
jmp
sub
mov
clc
inc
mov
add
shll
cmp
outsl
std
jmp
sbb
jge
imul
cmpsl
xchg
mov
loop
lret
and
push
popa
test
add
dec
lcall
out
xchg
lods
ficoml
jnp
imul
adc
mov
xlat
notb
jmp
popf
sub
scas
adc
cmp
repnz
add
cmpsl
repz
push
dec
jle
decl
jecxz
mov
inc
sub
cwtl
in
push
scas
sbb
packuswb
das
std
mov
aaa
aas
jg
mov
int
hlt
push
loop
cmpsb
test
cmc
pop
mov
test
mov
cmp
mov
pushl
jecxz
call
mov
call
mov
xor
jnp
cmpl
shr
rorl
jnp
jae
leave
repz
cmp
iret
jno
decl
cltd
hlt
adc
sahf
ret
in
shlb
stos
leave
std
push
cmp
push
pop
nop
test
xchg
push
sbb
dec
in
loop
stos
push
aad
cmp
sbb
sbb
nop
or
decl
xchg
popa
loop
jb
inc
push
push
mov
loope
or
cmp
jg
pushl
bound
lret
cli
ds
cmc
and
popa
lret
add
orl
sarb
popf
sbb
mov
cmp
addr16
lcall
cld
lcall
cltd
xchg
cli
jne
movsl
inc
out
inc
dec
sub
jne
sbb
es
test
fcompl
xor
mov
decl
mov
lcall
les
fists
mov
rolb
xor
repnz
decl
jg
popa
xchg
aaa
test
loope
sar
jecxz
pop
out
dec
xchg
add
pop
pop
sub
mov
in
cmpxchg
xor
fstl
mov
xor
ret
imul
shlb
enter
mov
out
incl
mov
sub
das
sbb
cwtl
mov
adc
adc
push
clc
jae
ljmp
daa
lahf
pusha
add
nop
lahf
stos
jne
stos
pop
aaa
mov
lods
movsl
push
sub
aam
mov
cmp
test
jg
push
mov
dec
xchg
and
mov
stc
push
ljmp
mov
lcall
jg
shlb
xchg
mov
stc
ljmp
add
fs
inc
or
or
cmp
xchg
or
jle
sub
or
pushl
lock
stc
insb
mov
test
mov
xor
cwtl
aas
scas
xor
mov
lret
jne
scas
shlb
cli
mov
add
push
sbb
dec
sti
sub
xchg
and
cmp
fwait
stos
mov
and
fld1
call
sbb
sbb
pop
xor
sarb
frstor
ljmp
shl
push
mov
pop
xor
sub
movsl
lcall
inc
aaa
mov
nop
scas
ss
add
xor
lret
xchg
mov
mov
xchg
decl
pop
js
imul
in
cmp
movsl
pop
rorl
ss
adc
dec
shrb
clc
jle
rclb
sub
jle
or
out
fldcw
int
push
jno
aad
addr16
jl
movsl
cmp
lock
clc
dec
fwait
jle
sarb
hlt
pop
inc
or
sbb
inc
aaa
sub
in
sbb
mov
jge
xor
jo
inc
mov
std
xor
mov
mov
fwait
jbe
aaa
mov
push
gs
aaa
dec
int
lahf
lahf
cli
jg
push
xchg
fdivrp
xchg
mov
outsl
adc
mov
inc
test
aad
hlt
pushl
jne
mov
test
and
hlt
fs
mov
mov
push
dec
scas
pop
shll
xchg
mov
mov
inc
xlat
inc
imul
loope
jmp
out
orl
decl
dec
push
mov
loop
int
push
daa
jns,pn
dec
jmp
call
lds
cmp
inc
pop
popf
mov
pop
ja
xchg
mov
rorb
jns
mov
out
out
cld
xchg
and
mov
dec
aad
mov
inc
test
mov
test
jp
lcall
mov
dec
cmp
in
pop
les
lock
ja
cs
imul
pop
test
jmp
adc
jbe
or
jb
jmp
jmp
push
lahf
cmpsb
xor
aas
jecxz
pop
daa
aaa
dec
imull
dec
mov
testb
movsl
outsl
shr
adc
cltd
inc
lock
stc
scas
xorl
sbb
pop
pop
jns
mov
and
push
into
pop
mov
out
test
insb
jg
filds
mov
mov
push
movsb
lods
imul
and
stos
or
jp
aam
out
jo
std
jno
cmc
mov
adc
mov
lock
in
nop
ret
fbstp
sbbb
mov
cld
mov
push
mov
rcrl
mov
dec
jecxz
push
pop
lods
cmp
push
mov
mov
insb
xchg
packssdw
mov
push
ss
mov
xchg
cwtl
add
shlb
incl
mov
mov
ljmp
jno
incl
adc
mov
jbe
fistpll
repnz
movsl
pop
lcall
inc
mov
call
mov
orl
or
mov
loop
decl
mov
dec
pop
fsts
xor
arpl
sbb
mov
incl
jbe
sbb
inc
popa
xchg
xor
xchg
fwait
lea
divb
ljmp
subl
jo
xor
jno
cwtl
and
das
inc
and
lods
mov
push
jno
bnd
nop
pushl
incb
jmp
add
cmp
and
sbb
imull
mov
sbb
xlat
out
in
fs
inc
fcomp
mov
negl
dec
int3
cmp
idiv
or
lahf
or
aaa
sahf
mov
repnz
fcoms
inc
ficomps
jecxz
aaa
in
js
push
or
movsb
nop
out
push
adc
push
inc
out
and
pop
clc
jmp
aad
xlat
lahf
aaa
jns
popa
xor
add
or
lahf
jl
fucomip
call
mov
pop
add
ds
stos
jmp
add
std
lods
xchg
inc
test
rcl
int
inc
mov
mov
fisttpl
scas
loopne
cltd
repnz
or
cltd
into
pop
pop
jle
mov
add
jmp
dec
add
shrl
loop
or
xchg
jg
mov
mov
test
xchg
pop
cmp
addr16
lcall
jbe
loop
jmp
sub
xacquire
sahf
sub
lret
call
incl
lds
add
lods
outsb
push
add
and
cmp
lock
xchg
pop
cld
lods
loope
mov
lea
xchg
add
loop
loop
sahf
inc
push
loope
xchg
mov
pop
jle
test
mov
shrl
push
jmp
push
mov
push
dec
rclb
cwtl
or
cwtl
sbb
lea
mov
push
das
xchg
pushl
xor
gs
inc
test
adc
imul
decl
mov
mov
inc
ficoml
push
adc
fisubl
mov
jb
aaa
js
subb
jg
push
stos
xlat
xor
pop
sar
lcall
jo
stc
cld
das
movsl
mov
je
ja
or
sbb
jmp
pop
dec
sbb
push
xchg
mov
sbb
icebp
cmp
imul
cmp
mov
hlt
das
hlt
add
adc
pop
stc
add
dec
lods
scas
pop
icebp
push
int
decl
jle,pn
leave
inc
jno
scas
or
xor
cmp
xchg
or
test
mov
decl
or
movl
dec
xchg
je
aad
cmc
push
les
add
test
mov
test
add
lahf
dec
adc
scas
cli
inc
mov
cmp
inc
rolb
jg
ss
dec
mov
lcall
mov
clc
std
jmp
mov
or
or
or
lods
pop
fwait
dec
das
push
je
sti
lret
sbb
xchg
mov
cmp
pop
call
mov
mov
jl
cmc
cmp
ljmp
popa
jge
mov
xor
leave
jecxz
enter
inc
aas
and
sbbl
adc
xchg
movsb
push
es
lcall
in
pop
ljmp
add
mov
push
cwtl
into
adcb
xor
js
jg
jmp
shlb
ja
jne
xchg
lret
inc
cmp
add
sahf
and
pushl
xor
popa
cmp
mov
cmp
dec
inc
jecxz
incl
and
dec
cs
push
jle
gs
fidivs
mov
add
mov
inc
dec
pop
pop
lcall
xlat
sbb
mov
scas
push
push
call
adcl
add
xchg
dec
pop
leave
pusha
inc
hlt
fdivs
mov
ja
add
mov
les
insl
cmp
shrl
incl
inc
inc
shrb
jae
pop
ljmp
dec
push
sbb
xlat
jg
jmp
cmp
ret
adc
sbb
sub
mov
rorl
call
jle
mov
outsb
sbb
arpl
stos
cmc
adc
push
je
nop
addr16
or
ljmp
and
push
ljmp
mov
push
cmp
or
add
test
push
sbb
jl
cmc
pop
insl
insb
xchg
cli
ss
and
fisubs
push
pushl
fidivrl
sub
pop
outsb
xor
lods
sbb
push
lock
lock
clc
rclb
loop
jns
or
cli
adc
mov
dec
pcmpeqd
jmp
dec
sub
test
js
xor
rorb
pusha
je
clc
mov
mov
pop
shrl
jg
loope
ja
js
sub
incl
decl
pop
daa
mov
sbbb
fs
jmp
or
mov
test
imul
in
gs
aam
sub
fimuls
cmp
cmp
push
mov
mov
jg
filds
mov
shl
inc
or
jg
sarl
repz
sub
jmp
pop
mov
cmpl
ret
daa
push
push
lods
xchg
add
mov
inc
cmp
cmc
jns
pop
xor
int
xorl
jmp
pop
cli
jmp
xlat
imul
lods
sbb
call
inc
mov
sbb
add
incl
mov
in
leave
clc
dec
test
insl
cmp
mov
add
add
pushl
adc
pop
jae
push
int
cmp
xor
dec
sbb
lret
daa
mov
pop
ljmp
call
je
xor
rol
dec
dec
add
sarb
andb
nop
push
int3
iret
cmp
int3
icebp
inc
push
out
vpsubd
or
decl
fnstcw
jge
das
xor
loope
loopne
fdivl
jne
xlat
insb
popf
int
decl
out
pop
xchg
mov
pop
testl
addr16
push
jl
pop
cmp
pushl
mov
aam
rcr
dec
adc
cld
pop
out
xchg
repz
mov
imul
push
xchg
jge
xlat
stc
pushf
repz
fucomip
out
mov
imul
sbb
jno
jae
pop
mov
push
fs
sub
aad
and
imul
out
ret
fimuls
fists
pop
sbb
and
fimull
ljmp
jnp
push
jmp
lret
or
pushl
shl
outsb
sub
cwtl
gs
mov
idivb
ficomps
loopne
xchg
adc
adc
or
add
pusha
jp
lcall
lcall
jbe
insb
jmp
lods
icebp
loopne
push
jae
adc
sbb
ljmp
jne
dec
jae
int
in
adc
xor
sub
jle
pop
jmp
divl
shll
popa
stos
loopne
add
inc
pop
fnsave
decl
cmp
xor
sub
sahf
mov
jae
in
ds
lahf
cmp
cmp
incl
pop
loop
jp
or
mov
repnz
jg
incl
push
fidivrs
outsl
fdivs
push
mov
js
loopne
pusha
insb
pop
cltd
sti
jg
push
dec
jb
outsb
adcl
and
lods
stos
fwait
out
lods
lret
jle
xchg
nop
in
arpl
outsl
jo
fwait
inc
mov
jb
dec
idivb
call
in
mov
inc
push
pop
out
or
lcall
ljmp
lock
mov
in
daa
add
test
jg
loope
ljmp
pushl
loope
cmp
inc
and
call
inc
pop
test
jg
scas
cld
dec
sarl
mov
jnp
dec
or
push
pop
lret
int3
add
cmpl
mov
js
mov
or
clc
sar
fcomi
imul
test
adc
jb
jg
adc
cmp
mov
xchg
lock
pushl
mov
ret
mov
inc
mov
stos
roll
idiv
fistps
push
fcmovnbe
fcoml
int
jb
insl
lods
and
mov
or
xchg
imul
call
das
dec
or
repnz
sahf
pop
leave
lea
mov
nop
sbb
ret
xchg
sub
nop
lret
ljmp
cmc
add
stos
out
jg
push
mov
sub
mov
les
lahf
jae
idiv
adc
fsubrl
xchg
jg
push
adc
or
add
decl
cmp
dec
xor
and
xor
addr16
jmp
divb
xor
dec
push
hlt
nop
lds
push
push
jl
lock
fadd
mov
in
fwait
xchg
aam
xor
int3
sub
rorb
int3
dec
jmp
sti
jns
jg
mov
xchg
nop
dec
add
ret
mov
out
pop
push
jg
stos
lret
rcrl
dec
test
int
push
add
test
ljmp
hlt
xchg
rcrl
out
mov
push
or
cmpsl
or
mov
push
aam
inc
pushl
outsb
adc
mov
dec
pop
xchg
test
add
cmc
popa
push
sbb
jnp
das
mov
lock
jg
push
inc
in
jo
aas
in
adc
sbb
test
jne
xchg
outsb
jbe
in
push
aas
movsl
mov
addr16
jmp
push
test
lret
fldt
cltd
adc
es
stos
jnp
ljmp
push
pushf
sub
clc
and
outsl
icebp
dec
movsb
std
sub
out
jb
mov
mov
cmp
lds
test
push
lock
inc
xor
lret
pop
std
ljmp
lahf
or
add
mov
inc
xor
pop
sbb
push
lods
std
pop
call
js
sbb
mov
sub
test
fdivr
mov
jmp
mov
adc
shr
mov
push
dec
jne
or
jae
jb
push
incl
sbb
push
and
jecxz
mov
and
lahf
pop
lcall
ljmp
xor
call
push
add
cmc
mov
gs
out
pushf
lret
insl
fdivr
decl
push
subb
mov
cmpsb
nop
jnp
add
mov
mov
repnz
xchg
das
icebp
pop
clc
es
cmp
das
jp
inc
mov
mov
pushl
or
cmc
test
sub
fmull
or
jmp
add
push
cmp
sub
push
fadds
jne
sbb
arpl
jp
jle
jg
cmp
insb
lods
ds
aaa
fnstsw
cld
jmp
xor
dec
in
dec
mov
sahf
les
test
and
push
add
fscale
incl
popa
push
in
mov
sti
jno
add
sub
push
add
xor
aad
pop
pop
hlt
hlt
push
sbb
inc
adc
pushl
jo
icebp
sub
movsb
ljmp
mov
or
mov
pop
iret
pop
fnstsw
or
xchg
sbb
and
pushf
sub
push
add
decb
std
cld
sub
aad
push
inc
mov
adc
out
in
test
fwait
mov
ljmp
aad
shr
adc
or
or
push
add
incl
icebp
call
cmp
xchg
out
adc
mov
xor
adc
inc
pushl
add
cmp
rorb
mov
jo
sar
ljmp
lahf
pop
jne
dec
mov
mov
inc
pop
xor
adc
cmc
jae
lcall
mov
inc
mov
adc
adc
cmp
mov
dec
and
lods
mov
sbb
jae
cmc
inc
scas
sti
xchg
outsl
mov
clc
decl
adc
je
adc
bswap
inc
aaa
jle
incl
or
inc
stos
xor
fidivrl
mov
mov
push
lea
push
inc
aaa
cli
incl
subl
movsl
xor
pusha
push
dec
fldcw
icebp
idiv
pop
mov
shl
imul
repnz
cltd
ljmp
rcrl
xor
repnz
jp
inc
gs
inc
and
popaw
jns
stc
and
push
andl
push
push
mov
enter
pushf
or
ficoml
cmp
push
jmp
in
ljmp
mov
sub
aaa
ficoms
add
xorl
dec
add
or
sub
ljmp
enter
leave
or
aas
aas
ficoms
adc
decl
dec
push
and
gs
push
mov
mov
jns
fbstp
loopne
repnz
lcall
aaa
mov
pushf
xchg
std
cmp
repz
into
jecxz
test
cmp
cmp
sar
lcall
movsb
inc
mov
int3
loop
pop
jo
pop
xor
cmp
add
xchg
dec
and
lcall
push
call
movsb
adc
sbbb
aad
notl
inc
push
out
pushl
fs
xor
jo
xchg
add
jmp
ja
mov
rcl
xchg
xchg
or
ud0
xor
push
les
add
sub
ja
and
or
jg
testb
gs
ret
inc
notl
addr16
pop
in
pushl
cmp
cmpb
int3
adc
fildll
adc
pop
mov
shl
and
in
icebp
jmp
int
jo
jno
pop
outsl
lret
ret
ret
push
xchg
cmp
and
in
and
aam
pop
out
sarb
jg
call
xchg
inc
cmp
mov
or
sub
cli
dec
jmp
inc
fldcw
lea
mov
cmp
cmpsb
call
rorl
int3
and
notb
xchg
iret
jae
mov
int
inc
push
loopne
sbb
or
decl
sar
or
mov
jecxz
rcll
adc
incl
in
or
bound
cmp
jnp
jl
scas
mov
aad
sbb
clc
push
mov
lock
jmp
pusha
and
push
jb
mov
mov
pop
cwtl
pop
je
dec
js
lcall
cld
sub
mov
ds
adc
xchg
adc
test
ljmp
ljmp
leave
xorl
bound
xlat
cvtdq2ps
sbb
ljmp
dec
mov
inc
jp
mov
or
cmc
jg
out
shr
pop
nop
mov
jmp
xchg
inc
add
std
jl
dec
add
mov
push
stos
push
mov
lret
sub
push
das
in
popf
dec
test
bnd
sbb
call
pop
mov
lahf
rep
xchg
lret
mov
rolb
pop
cli
incl
jae
fnstenv
jo
out
xchg
clc
popa
mov
stos
addr16
xor
out
decl
std
aas
pop
pop
push
rclb
lea
xor
push
mov
aam
xchg
jmp
inc
mov
or
cmp
dec
cmp
rcrb
and
inc
outsb
dec
enter
ud0
jg
test
js
add
mov
inc
inc
sbb
jae
scas
fcomi
and
out
and
les
std
jg
push
dec
add
incl
insl
inc
ret
or
popa
sbb
divl
pop
nop
je
mov
enter
orb
dec
mov
push
repz
subl
hlt
jo
andb
sub
xor
jmp
adc
dec
and
insl
xchg
sub
mov
xor
jns
sbb
daa
dec
pop
fwait
out
fldenv
lcall
lds
inc
in
sbb
push
pop
repz
push
inc
daa
cmp
sti
daa
sti
incl
pushf
xchg
lea
out
add
inc
pop
aas
sub
xlat
add
mov
daa
mov
jg
sub
xor
cltd
jl
mov
mov
mov
mov
cvtps2pi
outsl
jns
mov
les
push
adcb
mov
mov
pushl
cli
nop
inc
notl
xor
mov
inc
jno
and
pop
dec
mov
sub
push
ljmp
xor
mov
js
push
popa
loop
mov
mov
movsl
and
pop
mov
xchg
inc
adc
lods
enter
add
push
clc
ja
mov
lret
stos
add
bound
ds
push
aas
aam
add
add
xlat
outsb
cmc
mov
xor
or
pop
leave
scas
jnp
decl
test
mov
aam
fbld
dec
push
mov
cmp
jnp
cwtl
fnstenv
div
pop
xorb
dec
data16
lcall
in
mov
jle
mov
jge
movsb
in
mov
mov
push
call
and
pusha
loope
xor
es
mov
push
ljmp
fldl
imul
mov
leave
pop
cmp
push
adc
inc
push
xchg
mov
int3
cmc
js
mov
loope
out
lods
cs
lcall
popf
and
mov
xor
jmp
adc
xor
ret
xor
movsl
orl
and
data16
mov
sbb
jecxz
dec
jns
test
decl
lcall
inc
dec
inc
sbb
aaa
push
pop
pop
adc
je
mov
add
jg
inc
test
pushf
lcall
ss
mov
popa
jg
stos
jae
cmp
xchg
stos
shrl
lods
incl
sbb
inc
imul
push
addr16
xorb
lretw
icebp
outsb
mov
aaa
clc
jecxz
mov
xor
aad
and
adc
call
pop
xor
js
inc
sub
pop
in
sti
mov
out
jecxz
cmp
push
jno
lea
mov
loopne
addr16
xchg
mov
mov
jp
in
cmp
push
pushl
test
enter
stos
call
pop
jns
xchg
mov
ljmp
inc
jmp
lcall
push
sub
mov
pop
xor
sti
test
outsb
adc
dec
xchg
leave
or
lds
psubq
and
lods
push
jmp
pop
data16
dec
stc
repz
sbb
sub
lcall
jmp
push
repnz
push
nop
or
cmp
mov
call
fidivl
js
mov
and
fucom
imul
lcall
sbb
pop
pop
js
jbe
or
adc
cmp
cmpsb
and
call
inc
push
std
push
mov
lahf
jnp
jl
xchg
cmpsl
je
cmp
test
pushl
sbb
mov
mov
insl
sbb
jne
mov
std
pushl
popf
inc
cli
rolb
das
js
sub
adc
rcrl
icebp
das
jnp
sahf
mov
pop
xchg
js
dec
std
xchg
push
and
and
cmp
pop
adc
sub
ljmp
pushl
xchg
iret
loop
and
dec
jmp
dec
pop
popf
cmpb
rcrb
jb
rorb
mov
cld
push
nop
add
push
xchg
sub
les
ror
xchg
mov
popf
mov
daa
mov
pop
push
pop
comiss
xchg
cmp
stc
lock
cmp
jmp
mov
pushl
jge
jl
add
jp
repnz
jno
inc
jns
jecxz
or
enter
nop
xchg
je
loopne
stos
mov
mov
fidivs
pop
pop
dec
mov
cld
mov
mov
in
movsb
js
loope
scas
ja
ret
xchg
movsb
test
call
in
cltd
sub
imul
add
push
out
mov
mov
sahf
aaa
in
cmp
fwait
out
lret
jo
adc
cwtl
push
xchg
nop
pop
out
insb
jns
mov
lcall
cmp
addr16
jg
inc
ret
daa
adc
fwait
adc
outsb
xor
add
test
ret
lahf
pop
jle
mov
sub
add
jl
lret
lcall
cmpl
test
jno
data16
sbb
test
mov
cmp
sbb
cmp
scas
pusha
pop
lahf
push
and
cmp
incl
pop
rcl
jns
repz
push
inc
mov
aas
xor
sub
outsl
cld
dec
std
cmp
pushf
jo
ret
imul
call
or
or
sbb
les
popa
jnp
int3
ljmp
lahf
lcall
mov
xorb
test
shrl
sbb
decl
dec
sub
or
inc
pop
loop
call
xor
iret
dec
cmpsb
mov
mov
ja
daa
fstpt
sbb
xorl
dec
sub
icebp
jg
push
test
add
fcmovbe
push
in
imul
jnp
mov
ljmp
mov
adc
or
xchg
push
mov
add
cld
movb
jl
nop
and
jg
pop
pop
sub
stc
fidivs
sub
pop
ret
cmpsb
dec
or
mov
lcall
pusha
xor
jge
jno
add
or
fldt
lcall
jl
je
cwtl
ficompl
mov
jg
mov
inc
mov
pusha
aam
inc
add
cmp
jg
decl
inc
jae
push
vunpcklps
pop
mov
jecxz
aaa
fcmovnbe
sub
jg
dec
or
inc
sub
out
adc
push
lret
shll
jmp
push
in
stc
sub
fsts
jo
jl
out
das
xchg
in
sbb
iret
lret
push
push
repz
gs
data16
insb
jb
push
sbb
adc
xchg
ljmp
cmp
mov
mov
push
cmpsb
cld
out
loopne
and
into
ljmp
addl
push
adc
jmp
xlat
mov
test
test
ljmp
add
adc
movsb
mov
mov
lods
shl
arpl
pop
xor
jge
iret
pop
inc
divps
jg
dec
mov
and
jg
push
call
jl
sub
pop
jg
rolb
movsl
sub
sbb
push
jmp
decl
or
mov
push
aad
test
rcrl
inc
fadd
shr
jp
cmp
scas
or
push
rolb
loopne
incl
mov
push
dec
ljmp
dec
adc
dec
cmp
lcall
push
jmp
pusha
cld
mov
inc
divl
xchg
mov
cli
pushl
cmpl
xor
sahf
sbb
mov
jmp
in
xchg
sub
mov
inc
adc
outsl
jle
mov
loop
imul
lock
aaa
icebp
add
cmp
jmp
mov
xlat
mov
fildll
notl
xchg
xchg
repz
sub
or
cli
enter
icebp
testl
mov
scas
or
mov
xchg
nop
std
nop
inc
jl
stos
repz
shl
inc
jmp
sub
pop
sbb
inc
int3
push
mov
mov
fildl
cs
in
outsl
imul
fdiv
mov
sti
dec
and
cmc
adc
addl
pop
mov
rcrl
fbld
aaa
and
pushl
mov
mov
movb
xchg
xchg
cmp
sar
sub
xor
push
hlt
das
icebp
jmp
sbb
add
lret
push
cmp
adc
test
lcall
xlat
cwtl
pushaw
std
inc
xor
stos
imul
iret
negb
sbb
xchg
test
sbb
pop
add
mov
cltd
mov
mov
icebp
mov
clc
fucomip
sbb
hlt
cmc
icebp
cmpsb
loop
sarl
aad
mov
sarl
pop
xchg
jbe
mov
addl
pop
xor
dec
cmp
inc
xor
call
jae
cli
and
cmp
ljmp
or
xchg
adc
pop
xor
in
mov
clc
ljmp
add
dec
sub
xchg
xchg
dec
rorl
sub
out
test
xor
rorl
cmpb
inc
out
inc
andl
xor
in
pop
push
jecxz
lcall
pop
mov
movsl
mov
mov
jp
push
and
xor
call
ljmp
fldt
jae
add
inc
xor
sbb
movsl
xchg
pop
lock
call
call
nop
or
pop
in
std
mov
mov
lods
ja
and
fistpl
call
mov
sub
loop
fadds
cmp
mov
loopne
in
cmp
pop
push
pusha
xchg
adc
cwtl
adc
mov
pop
leave
lds
sbb
nop
inc
bound
cmpsl
pop
jnp
sub
mov
or
pushl
xchg
repz
insb
cwtl
pushf
dec
cli
pusha
jb
push
ljmp
icebp
sti
test
nop
cltd
addb
pushf
jbe
mov
sub
push
repnz
or
cli
daa
addr16
ljmp
jns
insb
inc
pop
add
cld
mov
adc
mov
scas
ljmp
mov
stos
roll
sahf
rclb
sub
xor
inc
lahf
jecxz
push
call
dec
push
mov
arpl
xchg
cmp
xor
and
jg
ja
and
clc
repnz
sub
dec
jbe
push
jge
inc
add
call
scas
and
test
lcall
aam
pop
in
rcl
cmpb
inc
sbb
out
cli
js
push
std
and
jae
fs
sub
sub
pushl
mov
sahf
pop
adc
mov
and
inc
push
mov
adc
cwtl
aam
call
fisttpll
push
xor
fistps
jle
scas
xor
lea
mov
repz
fs
shl
iret
scas
lock
cld
loope
or
and
jo
ret
les
decl
psubsb
ljmp
or
out
or
push
out
cmpsl
mov
sub
decl
pop
xchg
push
popa
inc
out
or
mov
cmpsb
xor
sarl
decl
clc
sub
dec
stos
les
loopne
push
stos
adc
fcoml
inc
insb
leave
pop
add
add
lret
cltd
push
xor
fists
cmp
int3
and
push
loope
insl
cmp
lods
ljmp
outsl
push
push
iret
mov
pop
pushl
sbb
jmp
lcall
fdivs
push
pop
mov
mov
jp
mov
add
inc
pushl
imul
fdivs
insb
adc
js
fcmovbe
call
aaa
incb
test
pop
lcall
mov
popf
push
lret
iret
jmp
sbb
mov
or
jg
or
hlt
mov
mov
lcall
pushl
pushf
cmp
bound
jbe
push
push
adc
mov
jg
add
xchg
sbb
repnz
lcall
das
lret
mov
test
ljmp
pop
lsl
push
mov
fadd
jnp
mov
test
icebp
sbb
push
inc
jg
lods
push
out
int3
pop
mov
idivb
js
into
push
ljmp
scas
push
das
push
scas
xor
js
ljmp
test
jmp
cwtl
leave
scas
mov
push
xchg
test
in
or
inc
sub
or
xchg
mov
movsb
mov
pushl
rcll
dec
and
test
mov
call
incl
xlat
jno
mov
dec
fistpl
loop
cs
cmc
enter
test
add
lcall
movaps
cli
sahf
pop
and
cmp
lock
xor
pcmpeqw
dec
leave
push
mov
orl
cwtl
scas
movsb
dec
pop
jge
fnstsw
mov
fdivrs
inc
adc
inc
jge
insb
test
mov
add
jae
cmpsb
ds
test
lret
xchg
push
rorb
cld
mov
bound
cli
cmp
mov
mov
lret
ret
test
rcrb
push
lahf
dec
lcall
int
loop
xlat
or
cmp
insl
cmpsl
mov
fcmovne
jbe
push
mov
outsl
shl
pushl
adc
sbb
sub
ficoms
negb
pushl
in
xor
push
xchg
mov
out
pop
jns
sub
test
stos
ljmp
icebp
dec
cld
cli
jnp
jp
add
shll
mov
and
call
cli
jg
lods
cmp
dec
inc
adc
movsl
pop
push
ljmp
cmpsb
out
fidivrs
out
inc
and
mov
lods
adc
ret
fsubrs
jle
push
std
mov
push
lret
enter
inc
sti
push
inc
leave
setno
mov
call
pusha
xchg
daa
inc
adc
jl
mov
popf
fiaddl
mov
mov
or
sub
psubd
nop
lret
in
inc
rcl
leave
pusha
mov
push
cmp
clc
add
xchg
pop
rcr
mov
jmp
xchg
lcall
xchg
inc
cmp
xorl
xchg
jae
push
out
dec
icebp
mov
int
les
jne
mov
int
loop,pt
dec
cwtl
pop
xchg
out
inc
jo
cs
clc
dec
and
mov
sti
les
xchg
cmpsl
pop
mov
mov
sbb
arpl
xor
ss
pop
sub
inc
mov
pop
outsb
xor
test
push
inc
jle
xchg
ds
call
inc
or
pop
imul
adc
dec
lret
sti
jmp
cld
dec
lods
xor
inc
sub
subl
fucomip
mov
cmp
fnsave
stc
xchg
or
repz
adc
mov
je
pop
mov
lret
test
aas
clc
aaa
push
imul
xchg
call
mov
ret
aam
mov
jmp
xchg
adc
paddd
mov
fbld
ss
decl
std
stc
jp
shll
and
repnz
jle
cli
lcall
mov
push
test
pop
xchg
sbb
jge
test
and
incl
push
je
cs
mulb
cwtl
jge
repz
lds
call
sbb
jecxz
and
lock
loopne
sbb
pushf
pop
test
les
movsl
subb
and
test
prefetcht1
mov
sarl
bound
decl
mov
std
data16
outsb
shrl
xor
mov
cmp
and
movq
fnsave
lock
push
lcall
mov
cmp
test
ret
scas
sub
mov
xor
push
jl
push
sti
cld
in
bound
pop
cmp
cmp
fwait
out
mov
or
add
lods
fcmovnbe
mov
push
int3
addb
add
repnz
jns
mov
bound
cmp
add
insl
inc
jg
enter
scas
loopne
xor
sar
lcall
loopne
shr
call
shrl
push
inc
mov
inc
daa
inc
ret
lods
decb
mov
sbb
sbb
jp
ret
sbb
mov
lods
outsl
test
push
cmp
cwtl
lcall
inc
cmpsb
push
mov
mov
sub
sbb
jae
adc
cmpsl
clc
incl
adc
push
pop
jo
push
dec
and
loopne
mov
push
loopne,pn
adc
insl
mov
fbld
mov
mov
xor
cmpsl
jle
mov
loopne
emms
jmp
xchg
sub
sbb
lahf
test
lret
rcrl
lahf
hlt
mov
icebp
adc
outsl
hlt
movsl
out
mov
sbb
xchg
out
dec
arpl
jg
jg
je
dec
mov
stc
not
mov
mov
stos
xor
lods
out
ret
roll
movsb
out
aaa
pop
dec
xchg
js
loope
adc
mov
in
add
rcrl
push
cmp
pop
mov
sar
xchg
jge
and
insl
mov
lds
out
mov
lea
or
adc
or
fdivl
insl
sub
lods
sub
cld
jg
idivl
mull
fs
and
mov
mov
jle
incl
push
xchg
add
scas
xor
or
cli
mov
clc
sub
insb
pop
jne
decl
pop
lods
inc
hlt
loopne
jno
pop
fimull
inc
push
js
fld
incl
out
push
int
outsl
fisubrl
hlt
lret
sbb
or
ja
sub
dec
clc
adc
mov
fisttps
adc
push
jp
out
dec
push
sarb
xchg
movsl
jge
cmp
fnstsw
decl
xorl
adc
std
xchg
mov
xlat
cmp
icebp
rclb
pop
jecxz
dec
mov
lret
mov
push
or
pop
mov
fildll
fmull
push
dec
movsb
mov
movsb
mov
lods
enter
mov
insl
cld
incl
insl
lods
inc
pop
mov
lahf
int
test
lods
and
cmpl
lods
push
inc
push
mov
xchg
ljmp
mov
orb
mov
push
pop
idiv
lods
dec
xor
pop
mov
lcall
loope
xchg
or
cli
lcall
adc
data16
pop
cmpsb
jle
repnz
roll
arpl
out
and
lock
push
mov
jmp
jmp
jbe
push
lcall
inc
movsl
lock
nop
cmc
or
lret
mov
jne
or
loop
mov
or
insl
cmc
fidivs
lcall
pushf
repnz
scas
sbb
pusha
call
mov
repnz
nop
pop
push
and
or
aad
das
mov
outsl
lock
addr16
push
lahf
fisubl
movsl
cmp
nop
sub
aas
outsl
lea
sub
jno
lret
or
adc
fs
mov
sbb
adc
and
add
lret
test
jl
sub
jb
outsb
adc
decl
or
aam
xchg
push
push
pop
pop
loopne
into
orb
call
and
mov
dec
inc
fbld
xchg
push
inc
rolb
decl
cmpl
pop
xor
ja
mov
insl
push
mov
dec
ss
gs
shl
or
sub
inc
cwtl
fisubl
dec
mov
inc
and
stos
mov
add
mov
lret
shlb
lret
sub
pop
pop
push
pushl
cli
shrl
inc
push
aaa
mov
xor
mov
lcall
mov
xor
xchg
sbb
mov
pop
cwtl
add
and
in
mov
or
mov
jp
mov
decl
ret
jb
and
aas
xorl
and
add
imul
pop
loopne
add
shl
ss
mov
lcall
loope
xor
mov
sbb
js
pushf
ljmp
sub
push
arpl
inc
ljmp
jge
lcall
adc
cltd
subb
xchg
clc
fistpll
mov
insb
lahf
inc
pop
test
or
mov
xor
lret
movsb
pop
cli
cmp
jmp
add
mov
pushf
push
scas
cmpsb
cmp
xchg
and
and
outsl
addr16
in
fs
clc
stc
mov
fstps
or
jae
aam
push
push
cld
dec
dec
addr16
ljmp
inc
adc
xor
ja
push
mov
push
inc
xor
das
std
xchg
hlt
adc
push
jbe
call
shrl
loop
jl
call
and
adc
sub
insw
lock
cli
xchg
sti
or
fdivrp
ljmp
movsb
fdivrl
cld
icebp
lods
testl
adc
xchg
pop
cltd
mov
cmpsl
dec
inc
scas
popa
add
inc
sbb
movsl
dec
adc
clc
std
pop
insl
mov
mov
decl
inc
fldenv
push
xor
fs
sub
mov
xchg
hlt
push
pusha
imul
and
imul
pop
stos
std
decl
adc
loope
pop
xor
fbld
inc
jbe
pop
arpl
mov
xchg
insl
inc
ja
repz
pop
pop
mov
mov
sar
rol
cmp
xchg
adc
rcl
andb
or
add
fisubrl
inc
inc
jmp
and
mov
stc
repnz
dec
orl
js
push
mov
jmp
imul
lea
jp
push
pop
xchg
lret
outsl
add
or
adc
sahf
sbb
jmp
or
cmp
aas
pop
in
jne
mov
jmp
xchg
mov
fwait
sbb
jno
sbb
inc
loopne
ljmp
mov
mov
mov
add
into
cmp
sub
leave
daa
mov
aam
push
cmp
cli
xchg
push
push
mov
into
jns
xor
mov
movsb
mov
mov
das
lret
scas
mov
xchg
push
mov
out
cmp
iret
lahf
dec
call
lret
and
inc
sbb
dec
xor
and
inc
mov
pushl
clc
sbb
mul
lds
idivb
or
pop
outsl
icebp
fcoms
add
sahf
mov
cmp
cli
leave
mov
ret
push
jmp
push
or
pop
popa
aam
push
and
mov
cmp
sub
cmp
push
cmp
ss
cmp
xchg
adc
repnz
lds
sub
lods
incb
roll
dec
mov
cmp
jg
mov
loope
icebp
in
pop
in
cmp
mov
cltd
jg
pushl
sub
dec
rcr
push
or
and
into
dec
into
fdivr
xchg
ficomps
mov
sbb
ja
rorb
pop
in
cmp
mov
or
lods
gs
mov
jge
or
mov
xor
push
push
shl
sbb
sbb
call
in
repnz
enter
jne
jecxz
or
push
push
pop
imul
out
push
dec
lcall
cld
xlat
daa
jns
jge
in
or
xor
out
in
dec
and
arpl
cmpsl
xor
pushl
cmp
fs
ret
lock
add
pop
repnz
cmp
pushl
lock
jle
loopne
stc
inc
push
mov
mov
hlt
lods
add
insl
arpl
test
popa
test
test
hlt
sub
fdiv
repnz
sarl
dec
xchg
mov
roll
aam
push
push
das
mov
push
in
pushf
push
js
cld
pushl
sbb
jmp
add
mov
decl
xchg
pushf
int3
mov
xchg
enter
fxch
lret
push
lods
mov
jmp
out
fs
fdivp
dec
pop
mov
test
lds
out
call
enter
inc
mov
fsubs
in
push
pop
mov
adc
decl
lcall
and
clc
pop
mov
scas
js
or
pop
les
jecxz
cmp
mov
aam
xchg
ja
sub
xor
adcb
mov
pushl
clc
pushl
lcall
outsl
pushf
pop
clc
outsl
cli
jbe
push
negl
mov
and
mov
xor
rorb
aaa
mov
push
add
addb
inc
dec
aas
outsb
cmp
call
sarl
adc
lea
in
pushf
cld
lcall
jnp
push
or
push
aas
icebp
in
add
dec
test
mov
bound
pop
cmpsb
adc
decl
icebp
push
inc
in
xor
adc
shr
inc
enter
sub
bound
mov
mov
jg
ljmp
or
movsl
or
icebp
pushl
dec
adc
testb
xchg
mov
xorl
outsl
std
jmp
repnz
mov
push
jle
xor
xchg
lock
outsl
iret
popa
dec
jo
out
cld
lcall
sti
push
loopne
lock
sahf
xor
pusha
add
ror
xor
outsb
and
push
mov
call
jmp
dec
sbb
or
addr16
mov
mov
mov
loope
jg
repnz
stos
pop
pusha
repz
jmp
mov
xor
js
xchg
adc
pop
dec
inc
inc
cmp
xchg
adc
lea
repz
je
mov
decl
std
push
and
jbe
iret
or
bound
mov
mov
mov
xor
decl
add
aas
div
push
dec
fidivl
arpl
ret
lcall
adc
mov
pop
mov
popf
lcall
int3
inc
lea
pusha
mov
xchg
mov
cld
pushl
push
pop
fwait
xchg
gs
clc
inc
int3
leave
bound
xchg
pop
jae
inc
xchg
ds
jmp
jae
jecxz
cmp
mov
xchg
sbb
jl
mov
outsl
jo
sbb
enter
aaa
out
fisttpll
xchg
jg
dec
sub
xchg
fucomip
decl
aas
or
mov
push
rcll
pusha
loop
adc
cmc
xchg
mov
rcl
mov
sbbl
xor
sub
decb
fdivrl
clc
xchg
mov
inc
jl,pt
cltd
shl
bnd
lock
test
lods
iret
fwait
ret
call
hlt
outsl
cmp
jno
mov
add
sub
call
pop
xchg
lods
and
adc
daa
cmp
push
jb
mov
inc
nop
fsubp
lahf
jp
out
xchg
inc
cmpsb
dec
mov
mov
shll
pusha
and
add
push
ljmp
es
fidivrs
mov
inc
shrb
sbb
cmp
loop
jmp
mov
dec
lods
fisttpll
pop
arpl
and
jge
adc
fnstcw
jno
push
mov
adcb
sub
das
sbb
cli
inc
loop
call
jg
and
int
pushf
sahf
and
jnp
and
push
repz
es
jg
pop
jecxz
cmp
lret
adc
subl
cwtl
comiss
dec
std
decl
dec
push
ss
lret
mov
mov
sbb
outsl
decl
rolb
inc
scas
enter
jg
mov
loopne
sahf
jmp
dec
incl
xlat
lea
pop
lcall
cmpsl
cs
add
sbb
dec
sbb
mov
insb
cmp
in
dec
ds
pushl
dec
test
pop
jae
mov
cmpsb
jbe
inc
mov
xchg
lcall
add
minps
lcall
jo
lock
and
or
lock
rcl
daa
ljmp
xor
xchg
add
sbb
fucomip
inc
mov
ret
imulb
jmp
push
inc
std
arpl
fcoms
test
inc
lret
mov
ja
xor
fsubrl
jg
inc
dec
lea
shl
popa
inc
pop
push
mov
jg
mov
popa
fldl
in
iret
and
dec
add
mov
loopne
add
sbb
fnstsw
mov
aam
in
sub
cli
ja
ja
jg
loope
pop
shrl
push
addr16
jo
xchg
cmp
mov
dec
enter
icebp
adc
into
mov
mull
je
and
inc
movsl
cltd
fildll
aad
adc
aaa
jnp
mov
or
jge
flds
or
jns
add
xchg
lcall
and
in
push
loopne
push
imul
sub
stc
or
dec
cltd
sbb
fmuls
xchg
leave
push
fisubrl
cs
xchg
xor
outsl
icebp
repnz
adc
or
inc
loope
mov
inc
ljmp
fptan
leave
rcrl
test
sub
jbe
xor
mov
mov
fidivrs
adc
jge
or
decl
sbb
dec
shll
xor
call
adcl
out
outsb
test
cmp
ljmp
call
sub
aam
daa
cmp
add
aas
mov
xor
ds
ss
dec
call
push
sub
rolb
dec
ljmp
sbb
sub
ljmp
sbbl
mov
pusha
jne
scas
mov
sub
fs
int
jo
lcall
icebp
frstor
push
leave
dec
roll
mov
jge
test
div
lret
jge
in
xor
jne
aaa
sbb
sub
xor
test
mov
decl
cld
xor
xor
mov
fwait
dec
xchg
jp
adc
insl
pop
xlat
mov
das
adc
xor
xchg
out
jmp
or
inc
call
jle
clc
incl
movsb
sub
movsl
inc
inc
push
mov
sbb
cltd
outsb
lret
fisttpll
cli
jo
ret
call
mov
sub
pop
fsubs
and
in
xchg
mov
loop
cld
in
in
insw
pop
jl
mov
dec
es
das
inc
mov
std
mov
stos
mov
addr16
push
testl
iret
jg
add
inc
sahf
arpl
jbe
mov
daa
pop
lods
sbb
jle
lcall
push
insl
loopne
mov
pop
xchg
mov
xor
test
shll
lcall
and
pushf
jge
jg
aas
cmp
add
mov
jns
ret
cmp
outsb
mov
decl
pop
in
mov
mov
xor
sbb
incl
pusha
add
cld
cli
rcr
iret
inc
in
fiaddl
push
mov
jmp
add
xchg
mov
imul
cmc
sbb
testl
sti
cmovnp
jns
js
jmp
jbe
loop
inc
add
lret
sahf
pop
cmp
adc
adc
mov
popf
movsb
xlat
mov
clc
in
je
mov
out
push
call
jbe
sub
imul
lcall
rolb
clc
cmp
ljmp
xor
pop
pusha
add
or
or
sbb
mov
repz
sub
repnz
or
lods
jg
push
cmpsb
pusha
repnz
rcl
xor
in
aam
jae
es
mov
call
cmpsl
test
push
adc
in
adc
ja
xor
movsb
or
or
push
aaa
lret
pop
ret
pop
cmp
sbb
jnp
rcrb
push
bswap
inc
mov
lods
arpl
push
das
push
scas
jp
adc
push
xlat
das
add
mov
and
pushl
dec
pop
cmpsb
and
xchg
or
js
push
sbb
call
fmull
sub
xchg
jl
mov
inc
or
pop
or
mov
and
decl
iret
lret
movsl
jle
jl
mov
push
hlt
adc
sbb
ljmp
pop
mov
mov
dec
f2xm1
add
mov
hlt
and
repnz
decl
sbb
xchg
adc
inc
dec
add
mov
xor
in
and
ljmp
test
sbbb
jmp
std
xor
std
jg
out
xor
insb
sahf
mov
or
adc
jg
out
mov
fwait
dec
add
lock
and
adc
push
into
mov
mov
push
mov
xor
xchg
adc
dec
jmp
sti
fs
out
sbb
cmp
ljmp
xchg
push
popa
mov
cmpsl
aaa
fsts
add
xor
call
sub
loop
cmpl
movlps
lret
call
push
pushf
and
inc
mov
orb
mov
hlt
clc
jg
decl
mov
mov
or
push
jno
stos
jmp
push
add
test
add
jmp
fs
scas
cmp
leave
lahf
jne
mov
push
dec
xlat
pushf
shrb
ljmp
incl
or
xor
inc
mov
fs
push
mov
jg
adc
jbe
ja
pop
adc
iret
dec
xchg
mov
or
mov
jg
jns
xor
dec
xor
pmaddwd
les
test
pusha
jmp
push
sub
testb
cld
fdivrl
inc
add
jg
clc
lcall
scas
or
add
shl
push
cs
xchg
sub
ljmp
mov
scas
int
push
inc
inc
cmc
dec
iret
or
jnp
xor
and
pop
mov
lcall
out
and
sbb
jecxz
pushl
jg
push
push
fdivrp
jae
jbe
lret
fstpl
dec
lahf
icebp
pop
sbb
lcall
mov
jno
or
and
shll
push
push
mov
mov
jo
mov
mov
mul
pop
push
pop
push
lock
outsl
ds
ja
mov
dec
sub
call
add
pop
call
adc
ljmp
fs
sbb
mov
mov
out
adc
js
mov
mov
ret
mov
or
jg
cmc
rcll
push
cmp
mov
shrb
decl
test
addr16
stc
mov
sub
shll
push
fld
mov
cmp
ljmp
hlt
test
push
enter
pop
call
into
add
xlat
jp
movsl
gs
cwtl
sub
or
fsubl
and
jg
loopne
inc
push
cltd
xchg
cmc
shlb
xchg
add
outsb
jg
lcall
add
xchg
cmp
adc
rcr
test
pop
insl
fidivrs
jmp
pop
das
cmp
cmpsl
sahf
mov
fmulp
outsb
in
pop
push
push
movsl
pop
cmpb
int3
popa
add
decl
cli
loope
push
scas
fstpt
xchg
adc
mov
fisubl
push
fldenv
sbb
push
add
or
mov
mov
shlb
in
xchg
cli
pusha
xlat
mov
inc
fistl
cmp
pushf
inc
in
inc
in
hlt
xor
scas
inc
inc
and
cli
dec
out
lds
bound
xchg
fwait
fs
sti
popa
mov
lods
and
lock
and
das
lock
lods
movsl
call
das
std
mov
adcb
ja
sub
mov
mov
les
jo
int
out
sbb
cmp
pop
pop
add
push
lods
ljmp
sti
push
pop
into
subl
nop
xlat
jl
or
lcall
pop
mov
imul
push
xchg
xor
jl
imul
xchg
dec
cmpl
jg
fisubrl
add
add
jns
ret
imul
cmp
sbb
pop
push
decl
fcmovu
cmp
loop
stos
add
sub
loope
test
sbb
xchg
lcall
mov
stos
test
adc
test
call
out
icebp
xchg
inc
xor
movsl
and
or
fnsave
negb
mov
add
das
cmpsb
es
mov
jle
out
mov
loopne
out
jg
cli
ljmp
add
and
and
fsub
outsl
xchg
test
movsl
jmp
repnz
xor
addr16
mov
mov
call
and
lret
test
shlb
sub
push
xchg
jmp
xchg
decb
aaa
ret
mov
fldenv
xchg
xor
call
fwait
sahf
xor
lret
je
or
sti
jge
dec
push
or
inc
repz
mov
inc
outsb
das
lock
mov
xor
pushl
fadds
or
mov
push
inc
and
shrl
lret
lret
filds
jmp
lcall
movsb
movsl
lods
inc
pop
push
stc
shl
fcompl
ljmp
mov
adc
insb
cmpsl
sub
mov
jmp
mov
jb
and
pushf
mov
stos
stc
and
jae
movsl
add
ljmp
or
ret
push
lcall
mov
mov
jg
inc
inc
xchg
cwtl
adc
dec
aaa
popa
mov
sbb
push
push
and
pushf
pop
and
xor
mov
push
mov
inc
fistl
add
sbb
int
xchg
xor
and
lcall
dec
fucomip
jmp
fdiv
in
mov
sub
gs
and
decl
clc
dec
shlb
hlt
xor
fldt
or
fildll
push
jne,pt
testb
or
cmp
lods
jecxz
aas
out
jae
and
sbb
mov
je
lea
jmp
fidivrs
inc
aaa
push
mov
pop
pushf
xchg
xchg
pop
cmp
xchg
ds
insl
nop
lds
push
pop
and
mov
das
decl
or
addr16
xchg
fstl
frstor
insb
fdiv
icebp
lret
dec
or
cmp
mov
aad
pushl
out
mov
jb
mov
negl
cmp
jno
arpl
fnstsw
mov
fsubs
cmp
lret
jns
cmc
mov
call
ficoms
push
mov
or
ja
data16
cmpl
mov
cld
out
dec
ja
and
enter
pop
dec
mov
and
cltd
insb
fwait
sti
mov
mov
stc
dec
movsb
bound
dec
jl
insb
xchg
out
sub
int
sub
arpl
incl
jl
xchg
xchg
lahf
xor
jne
sbb
das
popa
aaa
sbb
push
sahf
out
dec
mov
adc
push
notl
pop
xor
jle
std
sbb
xchg
fwait
lcall
inc
inc
decl
sub
push
and
sbb
fistpl
cld
cmp
xlat
push
mov
sub
xchg
pushl
mov
test
adc
xor
adc
cmc
mov
jns
jnp
pop
outsl
and
xchg
cli
push
ja
jns
scas
mov
mov
loopne
fwait
sub
pushl
push
mov
out
adc
jle
push
inc
fildll
loopne
or
addr16
pop
sbb
decl
testb
loop
aam
lcall
jp
cwtl
xchg
call
fldz
mov
pop
ljmp
arpl
sbb
hlt
mov
int3
add
jge
push
adcl
push
mov
es
sti
insb
pop
add
inc
scas
jp
inc
imul
out
inc
mov
cmp
testb
fs
lods
push
popa
dec
sub
outsl
idivb
loope
xor
mov
test
jnp
cmp
dec
icebp
mov
adc
xor
outsl
cwtl
loopne
xchg
lcall
test
jo
js
xor
lock
and
in
fsubs
in
cwtl
jp
iret
xlat
sbb
fnstsw
pop
fwait
jnp
shlb
mov
dec
jg
aas
mov
out
xchg
cmp
mov
scas
adc
ljmp
test
mov
lcall
mov
imul
aas
idiv
xor
clc
int3
dec
dec
ficomps
adc
arpl
addr16
aad
inc
push
mov
xor
jmp
out
cltd
xor
sbb
into
inc
mov
fcmovne
stc
shlb
inc
mov
repnz
clc
incl
mov
sbb
decb
mov
jne
decl
addb
push
in
fldcw
stos
mov
push
iret
inc
cmc
ret
mov
inc
and
stos
jns
jo
aam
out
dec
inc
mov
inc
sub
ret
cmp
mov
fucomip
xchg
cli
sarl
xor
clc
pop
cwtl
jge
xchg
pushl
sub
adc
call
xor
sbb
pushl
mov
push
cmp
pop
xchg
cmpsb
fwait
adc
fs
into
sbb
push
adc
dec
in
pop
out
add
mov
cld
lea
mov
and
jne
mov
cld
push
call
lods
mov
jp
inc
mov
jge
mov
jb
call
dec
out
clc
xchg
or
pushf
xchg
inc
cmp
leave
test
ss
or
mov
out
xchg
out
adc
sbb
mov
loopne
ja
jns
add
sub
decl
add
pop
push
and
mov
xchg
std
outsl
outsl
adc
add
pop
js
rcl
in
jb
decl
clc
aam
mov
je
scas
sub
lea
repz
inc
pop
xchg
mov
mov
and
dec
mov
popa
lea
in
sahf
xor
sub
lock
pusha
es
add
decl
add
sbb
jnp
fimull
mov
aas
sbb
aas
jo
mov
dec
jp
inc
jecxz
push
in
inc
or
ljmp
int
fisttpll
xchg
fdiv
sahf
adc
insb
dec
lcall
fwait
call
clc
dec
pop
stc
jecxz
jno
xor
popf
push
cmp
popa
mov
sub
add
add
ljmp
and
clc
jne
daa
xor
dec
pop
cmp
xor
ss
out
dec
test
incl
cwtl
sbb
out
sub
shll
ja
je
addr16
mov
xchg
fsts
mov
adc
sarl
lods
sub
aaa
jno
push
or
lcall
and
add
insl
mov
test
hlt
imul
lods
pusha
push
add
jmp
imul
cmp
push
sti
or
pop
dec
mov
popa
fistl
ljmp
outsb
jmp
loope
pop
loopne
cmpsl
and
lret
rolb
or
jmp
adc
iret
repz
les
and
and
add
cmp
push
or
pushl
sub
int
in
pop
mov
mov
xchg
ret
xchg
shl
adc
jle
call
call
cmp
add
das
lods
jmp
in
jecxz
ds
cmp
cmpsb
mov
and
sub
pop
mov
mov
xor
je
cmpsl
cmp
pop
fstpl
scas
dec
lcall
std
dec
enter
nop
imul
mov
fdivrl
inc
stc
out
sub
jmp
andnps
fwait
and
or
pop
sbb
pop
add
rcr
push
dec
xchg
data16
fcmovnb
mov
cmp
pop
repz
lock
aas
xor
jmp
mov
mov
xlat
sar
ljmp
lock
divb
test
sub
add
aas
push
mov
push
jecxz
aaa
jg
movsl
jb
dec
in
test
lods
cmc
lahf
ja
or
pop
js
or
mov
xchg
sbb
mull
call
adc
cmpl
repnz
xchg
push
filds
pop
into
aad
and
cmp
mov
in
in
fs
test
stos
lock
cld
add
push
add
xchg
fimuls
lcall
out
mov
sbb
sub
add
sub
lock
and
mov
push
mov
pop
sbb
push
movsb
mov
cmp
lret
out
sub
testb
jge
dec
daa
call
shrl
or
lcall
sub
push
xchg
xor
call
movsb
and
cli
sarl
out
lds
fsubrl
sbb
roll
decl
int
jle
cmp
fnstenv
mov
test
in
lods
pop
push
push
or
and
call
jae
out
jno
cmp
stos
std
rcll
jne
shlb
pusha
shrb
inc
in
mov
sbb
rcl
test
dec
fs
call
cli
sub
popf
cwtl
xor
jmp
sub
cmp
nop
fs
inc
bound
xchg
pop
test
and
or
mov
cwtl
outsb
jne
clc
jg
das
sub
aam
sbb
imul
insb
push
cmc
stc
xor
cmpsb
jmp
das
hlt
ret
sti
xlat
sbb
dec
repnz
sarl
std
pushl
sbb
sub
icebp
dec
pop
test
out
popf
mov
sub
out
in
movsb
lock
mov
out
adc
inc
fldt
test
fwait
ja
sbb
mov
js
aas
in
sub
mov
ljmp
xor
or
push
dec
stos
xchg
je
insl
jbe
cld
fdivr
xchg
scas
pop
and
in
loop
sbb
dec
rcrl
dec
addb
jmp
jno
jmp
sub
js
push
aaa
mov
mov
ret
sbb
clc
fucomip
jmp
jno
ljmp
mov
inc
rcl
loopne
sarl
sar
call
sahf
cmp
cmpsl
iret
add
arpl
jno
in
les
ret
cmp
push
pushl
pop
lret
xchg
outsl
mov
xor
push
cmpb
inc
decl
rorl
lods
notb
shl
mov
mov
and
in
ljmp
das
sub
cmp
dec
aas
or
pushl
aaa
add
dec
push
pop
push
push
stos
add
inc
es
movsb
fildl
iret
mov
aaa
cmp
test
jb
cmp
aaa
ss
popf
push
popf
test
stos
shrb
dec
mov
mov
or
add
adc
cmp
and
add
rorb
imul
mov
ret
cmp
cmp
mov
pushl
sahf
mov
mov
arpl
sub
push
jmp
rcrb
out
rcrb
cld
fimull
int
loop
adc
addr16
jb
adc
mov
add
and
call
mov
jnp
adc
adc
jbe
and
fucomip
lcall
pop
movb
xchg
ret
jl
sbb
jg
dec
sub
sub
xchg
and
ret
je
cmp
ljmp
push
int3
xor
mov
cwtl
jle
pop
or
pop
pop
xchg
into
and
jae
or
jnp
leave
in
or
mov
mov
ds
cmp
das
sub
cli
mov
mov
pop
mov
mov
pop
push
lods
jbe
push
lea
fistps
outsl
das
sub
mov
sbb
lcall
fwait
cmpsb
icebp
push
add
sub
push
scas
mov
or
jbe
lahf
mov
mov
pop
or
shl
xchg
push
rcll
inc
inc
lds
addr16
stos
call
jmp
pop
addl
dec
push
add
mov
loop
jecxz
mov
les
out
fbld
call
fsubl
mov
repnz
mov
std
jnp
or
enter
in
cmp
mov
mov
mov
call
push
jns
add
add
inc
mov
data16
mov
xchg
push
pop
adc
rol
outsl
mov
xlat
fcoms
movsl
jcxz
dec
divb
and
divb
icebp
fstpt
pop
test
sub
sub
add
aaa
js
sub
lock
sub
stos
xchg
xor
xor
dec
lock
mov
mov
lret
rclb
sbb
ljmp
xor
aas
fsubrs
xor
push
jg
add
sub
mov
push
call
loope
inc
sub
leave
sub
xor
das
pop
aaa
mov
cmp
jne
in
scas
xchg
mov
inc
outsl
ficomps
lock
pushl
mov
adc
arpl
lock
lods
mov
jno
push
sbb
dec
test
jbe
jg
mov
nop
pushf
lahf
dec
into
mov
xor
cmp
sbb
adc
ljmp
sub
loopne
daa
sub
fbld
pop
jge
lret
xor
push
lahf
xor
out
pop
mov
lcall
decl
mov
ljmp
imul
adc
ljmp
pop
sub
shll
dec
pop
mov
fildll
bound
dec
xor
sahf
and
cmp
enter
loop
jno
insb
xor
add
xchg
mov
loope
ffreep
pop
js
or
mov
les
in
cmpsb
xchg
jnp
cmp
pushl
and
jno
mov
and
sbb
push
sahf
out
call
cli
mov
leave
sub
sbb
js
in
or
mov
std
lcall
cwtl
lahf
mov
xor
mov
jp
out
ljmp
mov
jmp
rolb
inc
cld
mov
mov
notb
inc
pop
dec
scas
out
sub
xchg
dec
mov
cli
mov
inc
pop
sti
fnstcw
fcmovnu
adcl
xorb
call
lret
mov
pop
mov
popa
sbb
pop
repz
add
repnz
cmc
sahf
jno
inc
lcall
and
inc
popw
loopne
push
adc
fdivr
jbe
fisttps
pop
movsl
outsl
hlt
mov
xor
outsl
jmp
sti
cs
add
std
je
pop
jl
ret
jmp
jns
push
and
cmp
pop
cmp
jl
das
std
decl
sbb
out
jge
push
mov
mov
out
cmp
rorl
cmp
ljmp
icebp
sbb
insb
xchg
and
inc
cmp
gs
mov
mov
call
or
mov
imul
xchg
xchg
or
jg
pop
mov
jg
test
cmp
nop
andb
inc
call
adc
jecxz
cwtl
fstps
fucomp
idiv
pushl
filds
sti
lock
and
movq
jg
inc
mov
cwtl
xchg
push
pushl
and
loope
scas
mov
hlt
xor
popa
inc
push
in
ret
cltd
lods
pop
insl
mov
popf
push
push
lcall
rcrb
xchg
dec
into
mov
ret
pop
sub
or
jmp
xor
xchg
fbld
or
ja
fisubrs
adc
xchg
call
fnsave
or
dec
xor
jle
fcmovnb
inc
je
mov
or
and
fnstsw
loop
pop
ror
test
jg
mov
add
pop
subb
jae
and
pop
imul
incl
inc
pop
loopne
fcoml
xchg
addr16
or
loopne
jg
aad
pop
scas
xchg
mov
sbb
fsubp
or
push
pop
pushf
out
or
xorl
ss
lcall
pop
inc
jmp
add
rcrb
push
aaa
and
sub
pushl
inc
call
imul
jg
jecxz
push
loope
jl
inc
out
ljmp
inc
dec
aaa
push
mov
test
inc
xchg
iret
inc
push
lahf
sahf
fdecstp
rolb
lcall
out
aaa
jl
pop
into
dec
and
mov
mov
dec
or
mov
outsl
inc
cmpsb
sbb
dec
outsl
fldenv
les
test
in
cltd
pop
sub
jecxz
lret
cmpsb
cs
cmpsl
adc
cwtl
adc
outsl
cld
decl
sbb
add
andl
mov
imul
and
mov
in
pop
adc
popa
mov
or
imul
mov
sbb
adcb
xchg
mov
outsb
jge
jg
cvtps2pd
ljmp
enter
test
aaa
clc
cld
mov
jno
in
incb
in
rorb
ljmp
or
cmp
mov
mov
jecxz
mov
mov
loopne
jg
mov
jno
addr16
shrl
fildll
call
imul
clc
hlt
pushl
mov
push
mov
jecxz
lret
cmp
adc
mov
ljmp
out
std
fdivl
mov
sub
pop
mov
jo
pop
cwtl
repz
loop
jne
lods
cmp
add
pop
cmp
mov
sahf
ficoml
clc
icebp
dec
mov
mov
les
adc
fwait
pop
loope
mov
cmp
data16
jns
adc
pop
add
sub
cwtl
int
ss
mov
pop
dec
adc
sbb
out
les
sub
pop
add
clc
xor
pop
mov
scas
and
dec
xchg
add
jno
out
inc
outsb
pushf
pop
call
pop
sub
shlb
push
sub
or
pop
jecxz
inc
adc
xchg
aad
sbb
dec
mov
and
xchg
or
aad
decl
insl
push
das
xchg
dec
das
push
sti
test
cli
movsl
mov
out
in
in
mov
roll
test
adc
or
push
lret
or
call
outsl
inc
and
mov
mov
iret
or
jmp
stos
fcmovne
cmp
or
stos
pop
push
dec
std
call
in
fwait
pushf
cltd
mov
sbb
mov
sbb
push
loopne
shll
cvttps2pi
and
fnstsw
rol
decl
add
test
sub
daa
test
jnp
add
sbb
ljmp
daa
pop
leave
mov
outsl
or
loop
xor
aaa
pop
fnsave
stos
mov
pop
or
cmp
call
or
lahf
mov
arpl
pop
cwtl
pop
push
mov
dec
sti
jnp
insb
pop
roll
sub
mov
call
fsubl
mov
repz
pushl
stos
mov
push
test
lahf
lret
jle
adc
or
sub
pop
loopne
inc
mov
add
add
inc
adc
or
mov
add
jg
ret
loopne
loope
mov
xchg
lock
sbb
jno
jbe
pop
lock
pop
inc
sbb
cli
sbb
or
in
outsb
and
jnp
jns
ret
test
fdivrs
add
fs
mov
out
clc
mov
push
pop
lret
sub
iret
inc
jmp
inc
add
push
xchg
jl
mov
ljmp
lock
stos
shl
or
jmp
sbb
test
push
mov
hlt
cmc
push
adc
adc
inc
jne
mov
addr16
aad
xor
cs
lcall
in
mov
hlt
movsl
ja
mov
ja
mov
push
jns
lds
jmp
cs
xchg
daa
and
dec
jb
icebp
cmp
aas
clc
lcall
pushl
ljmp
mov
fcom
inc
jg
cli
ja
fildll
or
sub
push
jmp
gs
insl
mov
or
inc
cmpb
mov
bound
mov
jge
or
leave
into
pop
cmpsl
sbb
push
or
adc
pushl
js
sbb
cwtl
push
aad
jp
bound
push
icebp
stc
jne
subl
push
lcall
gs
fisttpll
pop
iret
arpl
jns
mov
incl
mov
inc
xchg
pop
pushf
xchg
add
push
insl
jne
jbe
mov
call
loope
fsubrs
adc
lcall
xchg
call
test
js
cld
inc
je
xchg
pop
xor
xchg
ds
cmpsb
sbb
jecxz
outsb
lret
je
das
hlt
filds
xchg
jmp
cmpsb
les
insb
test
and
aaa
xchg
cs
or
cmc
xchg
mov
hlt
mov
mov
jle
dec
shl
add
incl
mov
cwtl
das
push
push
imul
ds
pushl
fmuls
cwtl
xchg
add
sbb
adc
inc
aad
dec
sub
pushl
or
ret
and
xor
or
test
pop
cltd
pop
mov
push
xlat
jnp
cld
sbb
add
mov
mov
inc
lret
das
aam
and
cs
roll
out
out
cmp
ret
bound
lcall
shrl
sarb
incl
mov
aad
mov
fstps
and
mov
cmc
fldt
jl
sub
jg
lods
mov
push
test
call
inc
dec
stos
pop
mov
or
push
mov
lcall
push
lret
add
icebp
jmp
gs
mov
add
fucomip
popa
mov
sub
mov
lea
clc
andb
and
inc
dec
and
ret
rclb
fadds
dec
push
pop
ljmp
cli
mov
dec
bound
and
ret
mov
mov
jne
loop
jg
add
aam
inc
push
mov
jns
sbb
lret
cmp
or
lcall
loopne
push
jne
lods
das
add
ret
cs
fistps
jmp
ss
and
jb
jae
mov
dec
sarb
xor
push
popa
mov
addr16
call
lret
xchg
popf
fisttpll
test
mov
sahf
inc
cmp
cwtl
mov
inc
movb
cmp
test
rcrl
sbb
mov
jg
stos
xlat
inc
int
xor
cmc
addl
mov
pop
pop
sbb
mov
shll
repz
lret
pop
imul
aam
cmc
pop
scas
jmp
mov
vcvttsd2si
outsb
mov
mov
mov
imul
mov
fucomip
adc
xchg
fwait
pop
mov
cli
cli
push
mov
fstpl
loopne
push
add
stc
inc
testb
shl
xor
sbb
cmp
fnstsw
inc
dec
xchg
adc
cmpsb
xor
lcall
clc
mov
test
jb
outsl
mov
outsl
sub
lret
in
div
rcr
pop
cli
jmp
cld
push
cmp
iret
jl
std
mov
push
cmp
test
mov
cli
ljmp
mov
stc
nop
call
push
dec
push
enter
arpl
or
das
hlt
pushl
insb
aad
jg
xchg
sub
fs
gs
in
das
icebp
out
xchg
push
pop
dec
stc
add
lds
add
jmp
inc
scas
sbb
ja
cmp
pop
loop
ljmp
jg
mov
xchg
push
decb
or
ret
mov
arpl
pop
bound
lock
inc
scas
imul
xchg
adc
fwait
cmc
movsl
nop
xchg
daa
jb
lea
sub
mov
int3
aam
nop
sbb
dec
in
aaa
mov
or
push
call
aam
cmc
lret
outsl
mov
and
dec
fdiv
mov
decl
notl
dec
push
mov
jge
mov
pop
mov
imul
inc
xchg
jmp
cmp
shlb
dec
and
iret
push
fisubs
push
dec
mov
xlat
subb
cld
jg
dec
sbb
adc
sub
jne
cmpsl
pop
stc
or
hlt
push
xor
aad
call
push
sbb
cmp
mov
out
cmp
xor
push
lcall
dec
jmp
nop
xchg
push
in
ret
in
lock
mov
xchg
xchg
jg
ljmp
stos
or
arpl
sbb
aaa
sbb
or
jne
and
enter
ud0
hlt
decl
cli
mov
lcall
nop
xor
lods
adc
inc
shrl
inc
lcall
cld
add
shll
scas
std
leave
lret
pop
adcl
pop
std
js
pmaxsw
mov
dec
imul
mov
shr
jecxz
out
lods
inc
jae
mov
decl
xor
mov
outsl
roll
jmp
aam
pop
add
push
pop
mov
jmp
push
cld
ljmp
test
out
lods
dec
jl
lcall
xchg
idivb
pushl
push
repz
sub
inc
daa
push
pushf
out
push
add
pop
mov
cli
ljmp
shrl
and
cmpsl
xchg
std
mov
wrmsr
in
inc
add
push
lcall
mov
add
adc
in
ljmp
mov
add
ljmp
and
lret
pusha
mov
mov
test
lock
inc
imul
mov
icebp
divb
or
pop
iret
dec
imul
das
hlt
das
mov
xchg
std
in
in
iret
aam
in
push
fdivr
and
insb
jae
jp
sub
adc
pslld
push
xchg
sar
mov
and
int
or
ret
mov
cmc
inc
sbb
xchg
and
xor
sub
mov
xchg
loope
es
xchg
sbb
inc
test
cwtl
dec
xchg
fwait
out
arpl
jmp
mov
fs
adc
insl
scas
lret
sarb
mov
mov
call
shlb
mov
rcr
fwait
ja
fistpl
fucomip
lods
push
je
test
mov
pop
push
sub
or
inc
cs
decl
sbb
and
loopne
rcr
pop
popa
dec
or
sbb
stos
into
fwait
dec
and
fists
add
lret
mov
mov
push
mov
cmp
mov
xchg
imul
dec
cmpsb
repz
fwait
pop
mov
aas
mov
jmp
mov
aam
clc
ret
aaa
pop
mov
rorl
push
inc
pusha
imul
stos
sub
jnp
cmpsb
pop
iret
fimuls
mov
call
loope
xor
bound
mov
mov
mov
icebp
out
cmp
outsl
jecxz
in
call
ud0
fstpt
push
int
fstl
ja
or
push
dec
or
jbe
ret
and
ljmp
loopne
mov
adc
xor
fisttpll
sbb
adc
rorl
pop
inc
rorb
inc
jp
lods
pop
sbb
loopne
incl
outsl
sub
push
aas
addr16
jbe
ljmp
insl
push
inc
xlat
sub
call
lea
out
add
movsl
mov
cld
pop
adc
incl
pop
mov
cltd
in
insb
push
push
mov
cmp
mov
jo
mov
jnp
mov
into
inc
xor
test
pop
test
lds
jno
stos
sub
and
pop
ljmp
mov
movsb
push
pop
lret
add
cld
movsl
in
test
and
hlt
inc
adc
dec
out
fwait
icebp
mov
or
mov
das
mov
sbb
ficompl
std
lret
js
jg
outsl
jge
iret
fiadds
rolb
jmp
mov
call
mov
repnz
or
push
ljmp
fsubs
das
xchg
out
cli
imul
inc
jmp
incl
ljmp
rcll
js
int3
out
dec
mov
aad
mov
push
outsb
shll
pushl
and
mov
cmp
clc
das
hlt
and
pop
imul
dec
ret
or
outsl
mov
ja
sti
cmp
into
pop
ds
int3
int3
sbb
les
rclb
les
lret
cmp
mov
dec
adcb
jg
add
push
mov
inc
mov
lcall
imul
push
dec
in
mov
inc
push
cmpsb
out
arpl
jecxz
pop
in
addr16
inc
call
dec
enter
hlt
loopne
icebp
xlat
popa
fucom
dec
xor
mov
call
js
hlt
jecxz
push
int
jno
dec
movsb
xor
sbb
call
ljmp
cld
outsl
ljmp
mov
test
add
and
mov
ljmp
hlt
pop
inc
scas
gs
xchg
xchg
mov
fsubrs
out
sub
mov
or
loope
inc
mov
aas
sub
sbb
stos
jle
mov
cli
inc
aaa
insb
cmp
ljmp
ljmp
and
cmp
jmp
rcrl
xchg
mov
xchg
hlt
mov
sbb
sub
lahf
sub
mov
call
fidivs
xor
mov
fistps
mov
arpl
and
push
test
call
mov
mov
adc
mov
jg
push
sub
sbb
add
stos
or
fdivrl
fistpll
loop
call
ljmp
popf
dec
jb
imul
mov
in
sbb
ret
pusha
xor
push
jmp
ja
mov
sbb
cwtl
daa
popa
adc
mov
loop
ljmp
pushl
jns
jg
sub
add
jg
sbb
jmp
stc
fisttps
clc
jg
sub
jle
mov
mov
pop
imul
incl
pop
jle
cld
adc
fisubl
and
fmul
lods
fmul
and
dec
lods
mov
dec
lods
das
aam
movb
mov
inc
add
mov
test
push
cmpsb
xchg
xchg
mov
ss
insl
mov
mov
popf
cmp
sbb
jl
enter
movsb
inc
test
jne
int3
lods
jp
cmp
decl
sbb
sub
pop
sahf
adc
push
pop
fdivl
sub
push
pop
mov
jae
inc
mov
jmp
sub
or
cmp
lods
cmpb
mov
cmp
mov
jmp
and
mov
inc
adc
ja
lods
lret
imul
pushl
add
icebp
ja
test
add
cmp
cmc
pop
arpl
push
jne
mov
hlt
into
and
aas
dec
xchg
and
dec
sbb
cld
lahf
mull
mov
mov
mov
mov
xlat
sti
adc
das
clc
pushl
xchg
sub
es
imul
shl
lods
addr16
mov
push
mov
mov
pop
test
push
scas
lods
or
int3
jae
mov
mov
mov
or
andl
and
dec
and
aam
addr16
dec
xor
fdivl
in
mov
call
xor
ficoms
jg
ljmp
mov
inc
insl
hlt
xchg
jle
push
mov
pop
cli
mov
or
and
test
stos
sbb
and
mov
dec
addb
fsubr
cmpsl
iret
adc
lret
jg
fs
jge
adc
adc
out
inc
dec
into
cs
cmp
jg
push
rorb
cmpsb
adc
fimull
add
pushl
adc
jmp
lcall
mov
clc
cmp
imul
sub
pusha
cmp
ds
cmpb
sbb
mov
arpl
pusha
inc
lock
pop
mov
mov
jbe
inc
add
mov
mov
incl
and
xor
pop
dec
mov
inc
in
inc
dec
hlt
fsub
sbb
ljmp
mov
pushf
mov
push
ror
lahf
loopne
push
pop
clc
mov
sbb
inc
cmp
sub
orl
aas
sbb
into
jo
jl
push
xor
jle
jbe
scas
push
push
enter
imul
and
lcall
xchg
repz
cmp
add
lret
dec
ss
or
xchg
addr16
mov
jmp
sahf
sti
stos
pop
add
sbb
inc
shll
in
push
call
fcompl
sbb
fdivs
inc
xchg
lahf
mov
adc
push
and
aad
call
arpl
sub
in
ss
popf
add
iret
icebp
fcomps
pop
dec
push
adc
cmp
ljmp
repz
movsb
pop
and
add
and
enter
adc
xchg
sbb
fbld
mov
lret
call
movsb
lods
cmpb
ljmp
cs
and
sbb
fiadds
test
jge
fldenv
pushl
ss
jp
xor
pop
ljmp
clc
sahf
or
aaa
mov
loopne
outsl
nop
sbb
test
mov
stos
out
dec
inc
outsl
hlt
pushl
movsb
pop
iret
and
sub
ja
adc
mov
push
clc
ljmp
fs
sarb
test
hlt
inc
out
jge
or
xor
sbb
and
mov
lods
out
negl
loop
sub
loopne
jno
jbe
hlt
jmp
cmc
cltd
pop
add
xchg
jns
into
leave
jge
sbb
cmp
mov
pushl
mov
test
insl
aas
aaa
sarb
mov
jp
add
lcall
push
cmp
inc
outsb
std
jle
push
sub
mov
cmc
test
fnstsw
call
sbb
mov
or
daa
jg
and
jmp
adc
dec
std
divl
cmp
outsb
cltd
add
test
aam
sahf
pop
mov
xor
aad
dec
inc
mov
out
daa
imul
lret
cmp
loope
adc
xchg
pop
ret
lods
xchg
cs
mov
fisttpl
rcll
gs
mov
inc
aad
lret
loop
inc
insb
popa
lock
fwait
popa
and
loopne
add
jmp
cmc
dec
call
push
stos
stos
cli
dec
add
shrb
cwtl
ja
popa
sub
push
push
ja
shll
add
lcall
push
enter
stc
std
mov
std
mov
adc
pop
dec
push
pop
pop
dec
aas
cwtl
pop
add
sbb
jg
and
pop
pop
xchg
jns
mov
ret
xchg
cmpsl
mov
call
negl
repz
mov
mov
pushl
dec
sti
or
inc
hlt
sub
out
sub
imulb
dec
push
or
call
stos
xor
push
xcrypt-ctr
cmpsl
sbb
inc
pop
push
xlat
pop
fists
js
jge
inc
cmp
mov
std
add
pop
repnz
cmp
out
loope
rcrl
bound
xchg
xchg
data16
jl
xchg
loope
fisttps
sub
popf
sbb
cwtl
jbe
insl
cmp
sub
das
dec
lret
mov
mov
and
mov
ss
mov
out
mov
mov
clc
int3
push
aaa
mov
jg
iret
rorb
outsb
fiadds
jae
cmc
dec
xchg
sbbl
lcall
iret
mov
adc
xor
jp
ss
adc
dec
arpl
bound
pop
popa
cld
xor
sti
je
cltd
inc
and
and
insb
outsb
dec
push
cs
out
add
mov
or
fcmovnbe
std
cmp
inc
sti
enter
cmp
int3
or
jge
incl
stos
dec
lahf
push
test
jg
pop
jle
or
pop
xchg
jae
cmc
mov
jb
ss
std
sbb
xor
cmp
push
sub
stc
mov
jp
jnp
mov
jo
rcll
add
rorl
sbb
pop
sub
std
ljmp
push
xor
pop
inc
in
cltd
pop
add
faddp
push
sub
inc
mov
stos
call
and
push
jno
xchg
dec
sti
adc
incl
shrl
loopne
movsb
les
ret
adc
xchg
les
sti
mov
in
cs
xchg
or
je
adc
jae
and
popa
pop
mov
mov
int3
movb
add
xor
inc
incl
cmp
xor
add
sbb
popa
int
cld
ffree
jg
mov
dec
ret
push
nop
jne
test
push
ljmp
ljmp
mov
jnp
inc
and
aaa
mov
sbb
fistps
inc
jg
xlat
roll
pop
loopne
insb
es
lret
push
loopne
adc
xchg
mov
das
and
lret
loop
incl
xor
pushf
imul
sbb
pop
sbb
in
push
loop
call
add
mov
lahf
adc
rclb
hlt
lcall
js
pushf
cmpsl
add
sbb
inc
cwtl
or
mov
push
ljmp
mov
mov
and
mov
cmp
mov
xchg
je
cli
pop
clc
jmp
lahf
clc
arpl
jno
out
sbb
sub
adc
jns
daa
mov
mov
jmp
jle
mov
or
nop
push
xchg
or
jge
outsl
jl
hlt
pushl
ficoms
ret
aas
dec
fldcw
enter
add
mov
rcrb
lret
pop
inc
push
mov
jg
int3
inc
mov
xor
scas
cmp
dec
std
pushl
insl
sub
loopne
cmp
scas
or
lret
jg
lahf
ret
ret
ret
inc
subl
push
push
cwtl
dec
fldcw
push
das
std
xchg
sti
mov
mov
xchg
int
inc
loope
insb
daa
call
in
inc
mov
dec
cli
cmpsb
mov
in
das
dec
ficoms
cmpsb
cli
cld
cli
cmp
pusha
xchg
jns,pn
mov
push
inc
jnp
subb
or
mov
test
movsb
mov
fwait
add
and
fadd
cmpsl
or
cmp
lret
push
fimull
cmp
push
xchg
clc
push
jmp
inc
and
dec
cmp
adc
addr16
dec
sbb
cmp
bound
push
xor
shl
adc
nop
inc
xchg
pop
test
push
and
lods
xchg
mov
inc
jnp,pn
xor
cli
fsubrl
push
and
cs
filds
mov
scas
fsubrs
mov
mov
fcmovnu
gs
arpl
fs
mov
mov
daa
add
clc
loop
cltd
fcomps
bound
mov
jge
ficompl
lcall
jmp
in
add
push
mov
repz
push
test
pushf
or
jmp
fdivl
ss
pop
mov
cmpsl
test
add
jo
mov
and
sub
int
and
incl
loope
mov
adc
lods
xchg
xchg
out
vmovhlps
call
sub
enter
xchg
jb
sub
cmp
or
ljmp
aad
popf
sub
movsl
in
cld
lods
sbb
add
dec
daa
nop
roll
sti
mov
in
clc
push
mov
andl
cmp
jne
jmp
cmp
ljmp
xor
arpl
lret
xchg
cli
lcall
mov
mov
sub
or
jno
sub
into
push
add
icebp
out
cmp
pop
cmp
adc
mov
mov
data16
js
xchg
dec
js
fstpt
sub
rcrl
push
jecxz
inc
mov
insl
out
and
pushl
and
stos
cmpsb
cltd
imul
pusha
mov
lcall
lret
and
out
add
lret
mov
jle
inc
add
dec
stos
push
inc
mov
mov
xor
jp
and
push
shr
ret
mov
mov
push
xchg
mov
cmp
rorl
pop
inc
lods
ret
fwait
in
in
inc
jne
cmp
sbb
mov
arpl
in
mov
add
cmp
mov
gs
cmpsb
push
push
aas
xchg
jae
xchg
rcrl
lods
pop
cmp
dec
jg
pop
add
xchg
imul
push
pushl
clc
lea
sub
mov
jmp
and
push
cld
call
mov
dec
bound
test
icebp
mov
mov
addr16
xor
push
jge
lcall
stos
outsl
cld
ljmp
daa
xor
test
test
adc
dec
mov
in
lcall
jmp
add
stc
xorl
stc
testl
or
cmp
push
dec
out
iret
data16
ljmp
cmc
loopw
icebp
dec
out
mov
xor
push
ret
xchg
out
test
cmp
push
mov
enter
xor
push
clc
or
incl
add
mov
jbe
cs
lea
xlat
call
mov
insl
call
addl
cwtl
test
mov
push
cli
scas
pop
push
mov
jg
sti
pushl
sti
pop
sub
mov
out
add
dec
push
mov
lret
clc
mov
add
or
bound
jmp
mov
push
jbe
cld
int3
jmp
mov
lcall
push
daa
mov
ss
loopne
and
dec
orb
lods
pop
ljmp
andb
or
lret
das
pop
lods
daa
xor
add
pop
cmp
mov
fistl
notb
sti
stc
and
test
neg
adc
xor
repz
mov
inc
or
jecxz
or
sbb
decl
cmp
aam
adc
aam
push
inc
push
jmp
adcb
add
sbb
jmp
lock
decb
addr16
std
xchg
dec
xor
dec
mov
lods
sub
hlt
jg
mov
jne
mov
pop
out
cmpsb
les
addr16
pop
mov
popa
sbb
xor
hlt
push
or
pusha
pop
nop
or
repz
pop
incl
pusha
repz
imul
cs
mov
fldl
bound
std
in
push
repnz
dec
inc
ja
jecxz
xchg
push
xor
inc
pop
inc
or
add
mov
cltd
or
ja
pop
pop
lcall
insb
push
and
out
push
fcoms
ljmp
adc
int3
sub
pop
sahf
xchg
sub
outsl
hlt
push
or
jle
xor
outsl
xor
and
pop
fadds
mov
decl
stos
rcrb
mov
add
xchg
das
jge
aad
push
stos
mov
fs
xchg
pop
cmp
das
cld
mov
ss
cltd
leave
cmp
pop
aam
in
sarl
jmp
dec
fcoml
loop
push
sti
fstpt
addb
pushl
popa
in
cmp
std
add
add
inc
lcall
out
loopne
mov
push
xchg
xor
rcr
inc
or
mov
lcall
rcrl
mov
das
xchg
popa
add
mov
das
out
jnp
jb
fistps
xchg
cli
inc
jne
adcb
fwait
nop
sbb
sbb
stos
bound
sbb
cmp
mov
mov
and
js
paddd
repnz
ljmp
std
cld
sbb
sub
jge
pop
imul
sub
stc
pop
sub
push
inc
int
in
sbb
loope
mov
and
cld
mov
mov
in
call
mov
mov
mov
ljmp
jle
jecxz
add
cs
dec
lods
inc
and
insl
mov
call
inc
sub
adc
cmp
push
mov
adc
jno
in
xchg
arpl
xor
and
xlat
inc
hlt
in
push
or
inc
jge
cmpsl
ljmp
push
arpl
jmp
ficompl
mov
add
addl
cmc
push
jb
adc
out
nop
sub
call
icebp
push
mov
es
aad
mov
cmpsb
ljmp
out
in
cli
pop
call
call
push
adc
xchg
fs
out
fildll
cld
aaa
pop
cmpsl
push
mov
pop
leave
add
mov
mov
sub
mov
add
fwait
es
sti
int3
sbb
pop
lahf
push
adc
push
aas
rorl
push
insl
sbb
fldcw
scas
clc
pop
in
movsl
fs
add
fcomp
pop
cli
incl
jnp
fs
inc
jns
pop
sar
popf
les
cmpsb
mov
or
jns
push
shlb
jecxz
data16
jl
test
negb
das
cld
decl
bound
mov
adc
cmp
clc
dec
clc
call
xor
adc
mov
jne
cld
xchg
add
outsl
rclb
push
add
and
sbb
lcall
jl
gs
jle
xlat
xor
mov
ret
and
inc
jp
jb
xchg
clc
lcall
fs
and
bound
fsubrl
ret
sbb
test
pushl
andb
stos
int3
and
jp
sbbb
call
shlb
lods
or
and
popa
out
dec
xchg
orb
adc
push
fcoml
incl
or
or
xchg
xor
sarl
in
push
adc
mov
ljmp
hlt
aaa
iret
xor
jo
test
xchg
ret
in
pushl
outsl
pop
xor
push
xor
mov
fdivrl
push
cli
jecxz
and
aam
lock
loopne
loope
scas
jp
das
pop
sbb
fstl
mov
mov
inc
movsl
adc
int3
xor
xchg
mov
or
cmp
mov
mov
push
aam
and
push
mov
ljmp
mov
inc
incl
imul
mov
sbb
testl
and
inc
sti
lods
inc
or
shll
lds
cmp
mov
push
test
jg
jg
mov
es
mov
mov
xchg
sbb
fucomip
ficomps
aad
or
lods
test
or
mov
fldcw
clc
popf
out
pop
sbb
cltd
cli
js
cmp
sbb
int3
mov
aad
aaa
aaa
mov
sub
adc
push
repnz
mov
cmp
xor
jge
mov
popa
iret
daa
cmp
push
inc
aaa
lea
jns
in
mov
adc
inc
inc
lods
sbb
jns
lret
lods
shrb
rorl
jecxz
or
call
rcrb
repnz
pop
fcmovnu
addl
lcall
sar
or
fistpll
aaa
aam
ret
and
mov
mov
repnz
ror
mov
ljmp
pop
hlt
mov
mov
stos
hlt
cmp
push
es
jnp
out
test
cli
incl
dec
or
ss
inc
aaa
or
fs
lods
shl
xor
icebp
cmp
pop
incl
insl
shll
pop
in
mov
in
add
adc
dec
mov
mov
in
shlb
jg
lds
cmp
and
mov
add
test
adc
ljmp
decl
jns
fimull
inc
inc
fisttpll
cmp
sbb
pop
mov
out
bound
mov
inc
lods
addr16
mov
stos
push
sub
out
jg
ljmp
clc
mov
and
inc
jmp
pop
addb
dec
jbe
mov
jle
aam
stc
mov
xor
add
dec
add
and
cmpsl
sarb
push
sub
lahf
shll
ficoms
push
aad
orl
lahf
dec
push
ds
cld
cmp
fisttpll
pop
aaa
fiadds
mov
and
mov
adc
ljmp
in
negl
ss
push
jmp
jmp
sub
jecxz
popa
lods
push
outsl
outsl
std
call
mov
and
testl
adc
jle
pop
or
fwait
std
lock
pushl
cmp
fbld
inc
push
cmp
adc
lods
xor
mov
aaa
clc
outsl
sub
push
mov
xor
sub
test
inc
std
lcall
pop
mov
or
ljmp
or
sbb
call
sbb
sub
popa
inc
or
in
inc
adc
insb
outsl
push
inc
ds
hlt
ljmp
in
bound
xor
leave
xchg
andl
lcall
mov
sysenter
cmp
sub
sub
sub
mov
repz
mov
jg
inc
cmc
mov
xor
neg
jle
jns
mov
rol
mov
cmc
stc
lahf
stc
mov
jg
mov
testl
outsl
adc
test
jg
dec
sbb
or
pop
leave
sub
pop
es
sbb
dec
mov
out
pop
sbb
decl
cmp
mov
adc
dec
pop
ljmp
mov
js
xor
push
adc
dec
xor
jae
xor
sbb
decl
testb
push
add
outsb
int
cli
jne
jl
xor
mov
cmp
push
or
scas
in
es
xchg
hlt
faddl
movsb
sti
sahf
mov
mov
gs
jge
xchg
inc
push
loope
mov
jo
xchg
xchg
mov
mov
ljmp
lcall
movsl
cmp
pop
adc
push
aad
jne
xchg
mov
js
gs
mov
jg
pop
pop
mov
in
ss
popf
outsl
addr16
test
jg
ss
call
cmp
xchg
cmpsl
shrb
dec
je
and
and
xchg
sbb
push
xor
inc
jp
add
sar
jae
cmc
aam
mov
or
mov
jae
dec
lcall
decl
sub
xorb
jp
mov
arpl
aad
pop
xchg
addb
jmp
jo
mov
inc
sub
out
cmpsl
sbb
sbb
add
cld
jle
inc
shlb
decl
cltd
mov
fldcw
xor
pop
out
adc
jmp
imul
mov
inc
shrb
cmc
ljmp
pop
push
sbb
xlat
mov
lods
xchg
sub
scas
dec
mov
jg
iret
std
mov
cmp
js
xchg
bswap
bound
icebp
call
cli
imul
sarl
sarb
jno
or
in
push
aam
push
cmp
cmp
pushl
jbe
sbb
jo
inc
and
fistpl
dec
add
sub
ret
cmp
mov
push
in
push
adc
fld
xor
divps
mov
push
jo
cmc
testb
lea
jge
mov
aad
mov
sar
dec
xor
fdivl
fs
ficoml
sbb
jae
mov
call
decl
ret
pop
jl
mov
adc
imul
std
xchg
mov
xor
xchg
mov
std
out
fisubrs
or
cmp
and
in
lods
mov
xchg
jle
push
add
out
pop
imul
decl
test
cmp
and
cmp
call
mov
pop
movsl
jno
das
movsl
add
sbb
clc
mov
loopne
aaa
jp
cmp
scas
xchg
pop
dec
dec
outsb
insl
xor
rcl
ret
mov
jno
inc
push
sarb
int3
cmp
jmp
pop
insl
lock
outsl
clc
mov
inc
push
jecxz
cmp
lcall
pop
mov
cs
jmp
mov
inc
subl
imul
movsb
add
aaa
push
mov
dec
jae
test
mov
daa
cld
push
lock
mov
mov
and
inc
aam
sub
decl
inc
jbe
push
mov
icebp
dec
stc
icebp
cmc
imul
jns
and
sbb
xchg
test
sbb
gs
sub
scas
mov
mov
mov
mov
fdiv
push
dec
cmp
push
incl
clc
test
dec
arpl
mov
jg
mov
jo
das
lds
lcall
dec
sbb
xor
inc
push
mov
mov
test
or
sar
outsl
lcall
out
sbb
mov
adc
dec
and
subl
loop
xchg
xchg
mov
jp
decl
xor
pop
stos
popa
xchg
dec
test
push
shll
fdivrs
dec
jp
jg
std
scas
arpl
shll
out
mov
aas
ret
paddd
dec
je,pt
dec
hlt
daa
xchg
fst
out
sbbb
andb
pop
xchg
les
sbbb
jg
or
mov
pop
mov
jle
jo
mov
hlt
data16
pushl
mov
sar
rcrl
push
dec
or
add
jp
sub
int3
incl
loopne
xchg
leave
fistl
daa
sub
mov
inc
mov
mov
fxam
jecxz
stos
jnp
push
lcall
das
mov
jnp
pop
incb
dec
xchg
dec
xchg
cwtd
cmpsb
jecxz
movsl
lcall
movsl
loop
cld
pop
cmp
pop
xchg
adc
lahf
xor
jp
mov
mov
lret
cmp
rclb
daa
mov
fdivr
jmp
mov
push
adcl
dec
add
push
sahf
test
ljmp
sar
jmp
cmp
js
loope
dec
dec
stc
add
xchg
adc
cwtl
and
or
pushl
add
push
push
mov
mov
ds
or
call
loopne
incl
sti
mov
fildll
decb
fildll
clc
mov
imul
insb
ljmp
flds
pop
or
sbb
cmp
movsb
icebp
push
pushl
je,pn
xchg
inc
jecxz
add
and
xor
mov
cmc
mov
pushl
dec
dec
and
jmp
pop
out
call
mov
dec
pop
test
aam
and
inc
andb
mov
push
xlat
pop
imul
dec
xchg
fisubrs
hlt
mov
enter
mov
pushl
mov
add
xchg
out
jb
jnp
jmp
sahf
xchg
jg
outsl
jnp,pt
cs
bound
lea
and
test
pusha
adc
shrb
adc
out
or
cwtl
std
mov
jbe
fstpl
jmp
mov
cwtl
cmp
fdivrs
and
jg
or
pop
jge
dec
idivl
pop
jecxz
fsubs
in
xlat
push
xchg
ss
inc
mov
pusha
sub
idiv
and
test
push
js
jbe
mov
jp
scas
dec
mov
jns
lods
mov
cmp
pop
movsb
xchg
mov
mov
fidivrs
mov
fildl
dec
adc
orl
movsb
into
ficomps
test
xchg
and
repz
push
popf
and
jns
inc
or
lcall
lea
sbb
jne
decl
jo
popf
or
jns
js
lods
addl
sub
ja
add
and
mov
cli
adc
ret
aam
sub
and
push
and
movsb
sub
adc
mov
incl
mov
sahf
mov
sbb
pop
ret
imul
int
mov
sbb
jg
dec
movsb
push
cmovnp
mov
xchg
inc
xchg
enter
test
decl
in
jl
cmp
popf
xchg
jno
push
dec
or
xchg
popf
dec
mov
es
jmp
mov
lds
dec
jno
inc
test
xchg
enter
mov
cmp
sub
mov
mov
bound
ljmp
fidivl
mov
icebp
loope
mov
fdivr
movups
shll
test
hlt
jne
jl
xchg
cmp
dec
enter
imul
push
pop
popa
add
sub
rcrl
outsl
mov
std
decl
and
addr16
lahf
das
scas
mov
and
daa
lcall
jl
xchg
mov
fisttps
pushf
lock
fildl
aaa
mov
mov
cmp
lods
ss
mov
mov
test
call
mov
sbb
jo
std
dec
std
dec
iret
addr16
jge
shlb
int
das
cld
or
push
ror
pop
sbb
push
xor
mov
cmc
xor
fistps
into
add
push
jnp
loope
insb
xor
cmp
mov
and
push
sbb
mov
lahf
cltd
sbb
idiv
call
movsl
int3
fbld
fidivs
xor
pushl
cmc
insl
mov
mov
jg
cmc
aas
in
cmpsb
add
pop
xor
ds
xorl
jg
mov
mov
cs
addl
fsub
adc
cmp
adc
cmpsl
out
jcxz
push
cmp
test
scas
dec
call
pop
mov
lret
dec
mov
mov
jecxz
pop
mov
ljmp
popf
pop
inc
inc
adc
pop
movsb
xchg
mov
cmp
icebp
icebp
mov
adc
in
jns
gs
fisubrl
popa
sbb
mov
xorl
je
pushl
add
cmp
sbb
ret
add
insl
jb
mov
mov
mul
rclb
les
pop
jae
nop
imul
xchg
mov
push
call
pop
decl
dec
cs
push
xor
test
faddl
cwtl
aad
pop
or
loopne
arpl
pop
and
dec
push
jb
xor
addr16
mov
call
mov
xchg
movb
cwtl
inc
or
jg
dec
sbb
mov
shll
int
cmp
loop
jg
dec
xchg
xchg
fwait
cmpsb
int
inc
jnp
aad
or
push
jo
lcall
ljmp
in
and
mov
add
add
jmp
sub
loopne
push
and
jmp
incl
aas
notl
add
movsb
aaa
mov
icebp
ror
incl
inc
jno
mov
stos
in
jmp
xchg
jg
cmc
stos
bound
dec
ljmp
cld
jl
pop
fisubl
sub
loop
dec
cmp
mov
incl
jae
dec
mov
out
push
or
lock
xchg
push
scas
in
aaa
pop
test
and
or
ret
mov
daa
mov
mov
clc
pop
loop
jno
adcl
mov
cmp
mov
stc
call
aaa
mov
sbb
mov
movsb
pop
sti
xor
mov
pushl
lea
cwtl
fs
sbb
xor
add
xchg
xor
push
outsl
cld
jmp
mov
add
imulb
inc
xchg
daa
ljmp
icebp
lahf
and
imul
loopne
out
divl
adc
jmp
and
out
dec
or
out
stc
dec
mov
insb
lahf
xchg
leave
lock
xchg
incb
call
mov
subl
adc
mov
lcall
push
sbb
mov
cmp
loope
and
dec
inc
jnp
pop
push
and
cmpsb
jo
cmpl
enter
push
lcall
or
aas
push
sub
jb
mov
loopne
call
sahf
pop
std
aam
adc
cmp
dec
dec
ljmp
push
mov
pusha
es
sbb
or
pop
xchg
dec
inc
mov
cmc
testb
pop
jnp
jge
cmc
test
push
sbb
inc
or
or
jl
cmp
outsl
cmc
adc
xchg
dec
cmp
sub
push
inc
nop
inc
and
mov
xor
dec
inc
mov
pop
pop
mov
loopne
adc
push
mov
mov
inc
add
xchg
mov
enter
jle
xor
jg
sub
stos
aad
inc
cmp
adc
es
xchg
push
lock
push
mov
mov
andl
inc
incl
lcall
pop
adc
call
imul
adc
xchg
out
in
inc
mov
fcmovnu
xchg
lret
aam
stos
inc
sbb
dec
out
fdivs
push
cld
ljmp
stos
pop
lods
popa
cmp
rol
pop
lret
sbbl
hlt
incl
xlat
dec
mov
rcl
cmc
dec
popf
decl
std
xchg
add
gs
cmpsl
jl
pusha
adc
in
test
pushl
stc
je
std
popf
pop
lds
jo
inc
xor
lcall
jge
mov
mov
mov
lds
jo
mov
std
stc
addr16
std
push
dec
xlat
inc
es
into
iret
js
add
mov
ret
andl
jle
jmp
in
lods
out
test
xor
add
pop
leave
pushf
dec
lods
push
pushf
pushf
xor
push
mov
test
adc
insb
mov
add
decl
push
mov
inc
mov
into
mov
ja
int
stc
inc
inc
push
jno
stos
pop
lcall
jmp
sub
je
lret
ss
xor
dec
pop
jb
inc
in
test
decl
mov
mov
sub
stc
jae
incl
popf
add
ret
mov
stos
aas
push
jmp
in
cmc
int3
mov
or
call
das
rcll
nop
imul
aam
sbb
mov
or
inc
adc
decl
cmp
rol
cmc
or
out
jo
pushl
push
insb
or
mov
cmp
dec
jle
icebp
enter
xchg
xor
mov
jle
into
pop
in
cmp
mov
push
xor
cmp
popa
fsubrp
mov
adc
lcall
loope
in
jecxz
rorl
ret
lret
scas
movsb
sbb
or
outsl
adc
inc
xor
push
sbb
inc
mov
idiv
push
xor
ret
fdivl
push
mov
pop
xchg
dec
mov
mov
aaa
idivb
sub
cmp
xchg
jmp
loope
in
out
in
hlt
and
inc
cmp
sbb
sbb
ljmp
in
out
daa
clc
mov
fcmovne
out
pop
push
cld
pop
leave
loop
jecxz
ror
scas
xchg
jl
pushl
clc
incb
pop
popa
out
jbe
push
jl
adc
repnz
outsb
xchg
cld
or
jmp
cltd
jmp
test
clc
sub
mov
stos
push
cmp
ljmp
mov
push
scas
cli
and
inc
adc
iret
xchg
jmp
cmp
ss
fdivl
mov
int
cmp
and
mov
cmpsl
iret
jg
outsl
shrb
icebp
call
adc
stc
cltd
ljmp
pushf
xor
ret
cmpb
dec
inc
neg
insl
insl
add
cld
mov
pusha
orl
inc
sub
lcall
push
jge
add
call
jmp
cltd
pop
mov
iret
mov
decl
xor
icebp
lahf
cmpb
adc
mov
pop
loopne
pop
mov
jp
add
test
pop
shlb
repnz
push
adc
test
std
pop
ljmp
bnd
fs
ret
or
add
bound
push
icebp
or
mov
aaa
cmp
add
repz
jmp
loop
dec
mov
jg
mov
mov
push
cltd
mov
imul
push
popf
pop
sub
xchg
mov
decl
gs
inc
test
aad
sub
cmpsb
xchg
dec
jge
xchg
rolb
ljmp
fdivl
outsb
mov
fcomps
fsubp
jmp
sbb
sub
ficompl
cmpsb
pop
jae
cmp
fdivrs
mov
jl
jp
xor
call
mov
mov
xchg
adc
xchg
hlt
repnz
push
ljmp
cwtl
outsb
xor
mov
pop
movsb
mov
call
jbe
loopne
jnp
popf
jl
push
loop
out
movsl
dec
js
outsl
es
rcll
jmp
fwait
imul
ret
jno
jae
add
shll
ja
ss
imul
lods
fmull
movsb
jmp
std
mov
and
add
rorl
pusha
adc
mov
push
dec
and
dec
into
inc
dec
test
stc
lock
cltd
cmpb
sbb
xchg
or
call
das
xchg
sbb
test
aaa
inc
repnz
rcll
in
mov
mov
out
inc
pop
mov
fdivl
and
sub
ljmp
push
loop
dec
ret
xorl
stos
aad
sub
rcll
mov
mov
outsb
dec
stos
rcr
pop
push
call
daa
mov
js
clc
mov
cmp
xchg
test
jecxz
inc
dec
sbb
pop
sub
lods
jg
decb
lret
test
mov
out
push
mov
and
mov
mov
adc
pushf
popf
pop
sub
andl
ja
pop
mov
cmp
pushf
xchg
push
stc
jecxz
and
mov
xor
push
dec
sbb
push
jle
sbb
jmp
lret
aas
enter
mov
and
mov
dec
adc
inc
inc
lcall
sub
lahf
pop
ret
movsl
mov
add
pop
frstor
fdivrp
jg
popf
xchg
add
jl
lods
outsb
into
adc
or
jecxz
mov
pop
ljmp
cmc
loope
inc
popa
push
in
aad
stc
push
mov
andl
imul
or
cld
mov
orb
sti
andl
and
stos
fldt
inc
enter
cld
lcall
lcall
ss
daa
adc
aad
mov
add
lret
push
mov
sub
rolb
xor
orb
daa
in
iret
push
mov
in
pop
push
mov
mov
or
shlb
aaa
inc
pusha
cmp
cld
stos
jmp
add
into
or
sub
stos
sbb
movsl
aaa
dec
push
fnstsw
imul
in
call
das
in
jmp
adc
mov
sub
lea
jg
xor
fistps
jg
mov
int
pop
sbb
cmpsb
lret
cmp
addb
sub
call
imulb
adc
sub
in
incl
mov
push
adc
ds
fiadds
pop
inc
call
iret
adc
jmp
fcompl
cmp
pusha
mov
outsb
ss
int3
xchg
xor
cmp
push
enter
inc
inc
push
andb
bound
add
add
incl
das
adc
push
data16
bound
lds
flds
pop
sbb
jmp
mov
ficoms
pusha
insb
inc
sbbb
scas
mov
insb
div
loopne
jmp
negl
adcb
mov
adc
test
arpl
sub
fbld
mov
shrl
outsb
jle
inc
pushl
cmpsb
adc
fadds
sub
xor
xor
sbb
shll
decl
jns
xor
ficoml
jle
lret
or
sbb
mov
fistl
cli
test
jae
adc
in
loop
push
mov
rcrl
fcompl
addr16
inc
fsubr
les
sbb
aas
xor
xor
mov
cmp
adc
mov
or
inc
lret
adc
jg
call
pop
push
mov
stc
out
jae
add
dec
ficompl
push
in
cmp
ljmp
dec
in
inc
mov
jbe
sbb
push
sar
sbb
insl
shrb
call
push
or
push
fcomp
mov
std
pop
dec
das
rclb
lea
mov
cmp
mov
addr16
stc
std
inc
das
mov
lods
in
ljmp
arpl
mov
inc
adc
push
cmp
and
nop
arpl
stos
pushl
fiadds
jnp
pop
stc
cmp
lahf
jle
push
hlt
arpl
push
aad
jmp
incl
jle
inc
pusha
std
daa
int3
mov
mov
lods
xor
pop
cmp
add
outsl
fildll
pop
popf
sub
push
fnstenv
mov
add
aaa
or
sbb
stos
inc
fwait
call
fucomip
decl
sub
sub
dec
ja
sub
mov
lret
decb
std
in
jmp
loope
js
mov
adc
xchg
roll
outsb
cld
sbb
pushf
fistps
jg
outsl
mov
xor
sub
notb
call
jmp
fistpl
shlb
test
cld
fildl
aas
shl
sarb
xor
fs
sbb
pop
cmc
mov
jp
jno
scas
mov
dec
cmpsl
ds
arpl
mov
das
cld
lcall
rcll
movsl
pusha
push
add
jl
pushl
clc
jg
imul
adc
mov
imul
test
ljmp
xorl
sub
jnp
outsb
push
pop
xchg
pushf
cmp
pop
std
mov
xchg
adc
cmp
mov
into
inc
inc
push
mov
outsb
std
aam
cwtl
pop
xor
int3
adc
lcall
sub
push
or
mov
push
insl
addl
push
sub
cmc
add
mov
loop
mov
cmp
pop
ljmp
jne
aam
insl
adc
jb
rolb
dec
insb
test
mov
jmp
mov
dec
jns
inc
int
pop
cmp
cld
incl
stc
cwtl
aas
mov
pop
inc
fmull
mov
jmp
popf
jmp
jne
int3
loopne
popf
mov
jmp
outsl
dec
loop
inc
and
jecxz
mov
lds
stos
dec
mov
mov
iret
sub
pushl
subb
xor
cld
call
popf
pusha
sub
mov
mov
call
xchg
inc
scas
movsl
pop
sar
push
outsl
sar
rolb
clc
iret
andl
and
ljmp
xor
das
mov
mov
cmp
ret
aad
stos
incl
xor
xor
pop
movsl
ljmp
mov
ret
add
sbb
out
jbe
dec
push
dec
in
push
cltd
in
dec
ljmp
mov
cwtl
shl
shrl
sub
add
push
mov
mov
jecxz
test
pop
mov
iret
movsb
cmpsb
cmp
call
knotb
jbe
cmc
mov
rcrl
jne
jno
pop
pop
and
test
pop
ljmp
jecxz
push
xchg
and
and
mov
cmp
mov
jg
sub
sub
adc
fwait
dec
sbb
inc
dec
push
push
popa
les
mov
push
sub
xor
in
fsubrl
outsl
mov
push
orl
call
lcall
inc
mov
adc
xor
repz
mov
dec
or
cmc
movsl
fistps
or
lcall
cld
mov
popa
rcll
cmp
adc
daa
xor
das
outsb
xor
dec
xchg
adc
sub
jae
pop
xor
mov
in
mov
inc
iret
lahf
cs
lcall
fiaddl
jb
xchg
pop
scas
sahf
jb
sub
adc
sub
call
rolb
aam
push
mov
adc
jg
dec
adc
lea
int3
jmp
les
push
jge
aaa
dec
dec
cld
call
jns
ds
enter
cmp
xlat
push
dec
mov
or
and
pop
sub
jg
add
ds
sarb
jp
stc
or
jge
test
jmp
mov
movsl
sbb
imul
adc
insl
cli
push
pop
adc
adc
cmpsl
sub
pop
addr16
sub
decl
in
lret
jo
xchg
dec
fcoml
sbb
mov
dec
out
or
iret
push
push
lcall
in
adc
sub
ret
movsl
cmp
sbb
adcb
lret
cld
jg
lcall
fucomip
push
add
or
js
enter
push
cmpsl
push
cltd
data16
cmc
call
repnz
xchg
out
jo
pusha
xchg
dec
mov
loope
loop
incl
pop
ljmp
mov
jne
add
cli
ret
xchg
in
movsl
fiadds
cmpsb
stc
mov
fsubs
cmp
rcr
sub
in
jmp
mov
push
adc
xchg
and
in
inc
xor
pop
call
daa
pop
out
mov
test
pop
cmp
push
sub
or
mov
fbstp
das
jnp
pop
lock
dec
ljmp
pop
cmp
nop
dec
mov
jp
dec
fwait
push
iret
loop
mov
jg
fld
fcmovnb
imul
mov
out
dec
jg
push
loopne
inc
cltd
clc
xchg
pop
jl
adc
ljmp
lods
inc
push
xor
aaa
mov
sbb
fisttps
jae
shll
pop
out
imul
push
stos
pop
sti
in
mov
ljmp
and
cmp
out
jg
fldt
sub
adc
stc
imul
in
add
sahf
mov
es
add
mov
cmpsb
push
in
ljmp
sub
xchg
adc
jl
or
popf
mov
push
int3
daa
testl
out
jl
xlat
das
hlt
bound
dec
imull
mov
mov
xchg
mov
test
jl
push
in
and
lahf
scas
mov
das
out
decl
loopne
nop
pushl
xchg
push
adc
or
std
push
adcb
jnp
sub
dec
jecxz
add
fstpt
jmp
ds
fisttps
add
mov
inc
push
cltd
imul
pop
cmp
xor
sbb
lcall
push
negb
inc
cmp
mov
jnp
sub
ljmp
jl
cmpsl
cmpsb
cmp
cmp
push
movsl
mov
jp
push
add
inc
jne
or
mov
pop
outsl
aaa
leave
lret
dec
inc
sub
aaa
jns
lock
sub
jne
sub
pop
std
incl
int3
xchg
fiaddl
aad
jns
mov
ret
mov
inc
add
push
sub
mov
mov
imul
in
jae
jno,pn
repz
jmp
cld
dec
stc
aas
mov
mov
dec
fisttps
jg
fldl
cmc
mov
sbb
inc
lods
jo
push
mov
jg
jae
sarl
imul
repz
ljmp
stos
mov
jmp
arpl
adc
js
movsb
out
xchg
mov
jae
shlb
mov
mov
pop
loope
and
sbb
cmpsb
setno
xor
jg
mov
cmpsb
push
icebp
and
jmp
dec
sub
mov
jmp
or
decl
jmp
jmp
pop
lcall
push
jne
leave
call
cltd
mov
and
adc
sarb
in
outsl
inc
lahf
cmp
ljmp
jmp
or
pop
lods
repz
mov
stos
loope
sub
bnd
sub
push
mov
aaa
popf
mov
pop
mov
iret
sar
je
les
incl
and
rclb
fdivrl
roll
call
hlt
les
inc
adc
ljmp
add
xor
mov
xchg
insl
mov
test
outsb
rol
loope
mov
cmpsb
jbe
and
push
cmp
popf
cmp
and
or
outsl
icebp
ljmp
lods
shll
mov
xchg
and
jnp
cmp
or
insl
popf
ret
mov
gs
add
decl
lret
sti
arpl
loope
out
mov
cwtl
repnz
cmp
icebp
ljmp
mov
and
jmp
and
int3
out
hlt
sub
outsl
icebp
ljmp
mov
mov
or
mov
add
imul
add
mov
inc
clc
test
pop
push
bound
sarb
mov
push
adc
jg
outsl
inc
lock
adc
inc
in
cmp
ljmp
cmpsl
mov
mov
stc
call
stos
outsl
imul
paddsb
fmuls
mov
loop
xor
mov
push
test
pop
scas
xor
pop
mov
cmp
mov
mov
cltd
sbb
cli
repz
imul
push
das
push
rol
jnp
jae
fucomip
call
pop
and
dec
pushf
sbb
popf
movl
mov
call
sbb
movsl
dec
xchg
lahf
orb
scas
iret
sarb
andl
stos
cld
inc
lcall
cmpsl
movsb
pop
xorl
mov
stos
push
fdivr
lcall
dec
mov
sbb
test
inc
imull
cli
pop
sub
fucomip
sbb
sub
mov
push
daa
js
movsl
insb
mov
cli
decl
test
xchg
sub
sbb
pop
xor
adc
mov
xor
jmp
push
daa
int
jl
mov
jge
cmc
adc
cmp
popa
or
jmp
ljmp
mov
xor
repnz
mov
orl
in
sbb
lret
sub
mov
push
out
dec
pop
and
xchg
lds
jmp
in
add
xlat
add
data16
xchg
sbb
icebp
inc
pop
add
or
or
adc
call
inc
cmpsb
pop
xchg
in
in
xor
jl
loop
loop
stos
and
pop
ss
ljmp
pushf
mov
jl
mov
mov
pop
mov
inc
push
cld
sti
repnz
jmp
adc
cmp
aaa
mov
mov
jl
mov
movsb
and
ljmp
and
stc
push
xor
call
arpl
sbb
sub
outsl
add
xchg
inc
pop
loopne
out
div
les
aaa
pop
pop
lea
mov
outsl
hlt
sahf
mov
outsb
lds
stc
lret
incl
pop
mov
xlat
cmp
ret
push
xchg
inc
mov
out
add
lcall
mov
mov
pop
or
push
out
shlb
in
ret
sti
out
aad
cmp
mov
icebp
or
mov
adc
jne
xor
mov
sbb
and
cmp
sbb
in
xlat
lret
jmp
pushl
icebp
inc
add
xchg
pop
lds
subb
sub
xchg
and
push
call
push
pop
lods
mov
add
gs
inc
fisubrs
shrb
mov
fstpt
pop
inc
and
clc
ljmp
xor
add
push
or
sub
push
push
sbb
out
lcall
cmp
andl
mov
pushf
jnp
sub
xchg
aam
push
and
push
div
lret
sahf
nop
leave
inc
lods
mov
inc
ja
jg
lods
lret
in
or
incl
mov
mov
cmp
mov
in
stos
push
movsl
incl
mov
cmp
jge
je
push
pushf
stc
dec
xor
sbb
test
inc
xor
mov
add
push
outsl
hlt
add
je
sub
jmp
add
insb
adc
mov
push
add
xor
push
test
lods
je
mov
mov
push
mov
cmp
adc
aam
aas
cmp
inc
dec
sbb
jle
jg
push
mov
insb
pop
mov
xchg
das
mov
scas
fbstp
mulb
adc
aam
mov
inc
mov
mov
fwait
insl
mov
jg
mov
jmp
sbb
leave
add
jnp
mov
jns
xchg
das
jecxz
or
sti
loopne
cli
pop
add
cs
cli
inc
pop
loopne
pushl
ja
fistpll
xchg
fwait
int
and
lock
mov
decl
rol
or
sti
mov
jecxz
fildll
ljmp
cmp
test
add
test
jge
in
mov
data16
jno
mov
jno
pop
mov
addr16
jmp
ficoms
sti
mov
into
js
in
insl
jbe
and
test
loope
ret
pop
mov
mov
decl
push
loope
lahf
pop
push
mov
dec
pop
call
push
das
adc
std
test
adc
sub
mov
push
xchg
mov
push
push
rcr
iret
lret
inc
je
lcall
mov
dec
push
and
inc
leave
jge
fwait
out
sub
lds
xchg
in
push
mov
lret
jb
jle
insl
cmp
push
popf
fisttpl
std
das
mov
pop
movsb
mov
xchg
decl
xlat
flds
pop
xchg
ret
xlat
outsb
sub
jmp
imul
cmp
ds
or
mov
jo
mov
xlat
test
or
sahf
ss
mov
mov
sbb
lcall
std
sub
stos
dec
fs
insb
loope
shrl
fwait
dec
leave
int
stc
sub
clc
cmp
out
lods
call
sbb
adcl
js
lock
incl
sbb
jecxz
xor
es
lcall
in
testl
mov
in
jle
pop
in
in
inc
dec
mov
mov
lods
ja
sub
inc
xlat
rcl
fs
sti
cmc
mov
lcall
adc
rol
inc
add
xchg
or
mov
stos
xor
sub
pop
jbe
xor
fadd
xchg
test
leave
fsubl
es
mov
dec
cs
mov
sbb
das
cmc
movb
and
or
pop
js
test
mov
or
adc
push
out
mov
jmp
dec
cs
mov
jae
in
gs
inc
out
scas
fcoml
sarb
cmp
gs
in
lods
mov
cmp
out
xor
notb
pop
mov
pop
stc
lcall
sub
jp
outsb
or
ljmp
iret
addr16
aas
or
cmpl
pushf
in
or
mov
mov
xchg
mov
jle
jg
fwait
lcall
call
mov
icebp
push
xchg
jmp
push
popf
inc
lret
clc
ficoml
mov
dec
addr16
xchg
mov
adc
clc
push
pop
pop
fwait
push
pop
cmp
lock
arpl
mov
subb
stos
call
aam
scas
in
stos
test
add
or
call
xchg
mov
in
stc
clc
pop
or
and
fistl
pushl
pop
sub
scas
cmc
fcomps
shll
or
dec
adc
loope
lret
xchg
add
mov
cmp
dec
pushl
add
jae
test
aad
flds
mov
pushf
punpckhwd
bound
in
mov
in
sub
test
pushl
mov
lds
jle
and
loope
or
call
test
incl
cmpsb
jp
and
insb
or
fisubrs
push
jl
mov
test
cmpsb
pop
cmpsb
nop
push
mov
dec
repz
inc
test
popf
pop
lods
sub
jo
jnp
les
jle
pop
xchg
pop
fwait
and
je
fidivs
cmpsl
xor
push
roll
jg
cld
test
xlat
adc
fs
cmp
xor
out
test
fptan
add
dec
insl
ss
jecxz
jns
fisubs
push
neg
or
dec
xlat
cmpb
dec
bound
cld
add
clc
xor
enter
pop
mov
outsl
scas
and
jg
jns
movsb
out
xchg
jbe
inc
push
imul
inc
or
mov
dec
adc
fnstsw
fisubrs
ljmp
lahf
test
sti
adc
pop
cwtl
inc
lds
lcall
inc
mov
jo
mov
ds
push
sub
jge
xchg
cmp
decl
add
iret
pop
and
mov
jge
add
ljmp
icebp
insl
push
cwtl
loop
sub
into
jno
loope
arpl
inc
sub
and
scas
mov
dec
jle
pop
lds
fs
daa
mov
sbb
cli
push
mov
mov
rorb
adc
push
sbb
push
hlt
mov
lcall
dec
lahf
jae
shll
dec
sti
mov
push
cmp
loopne
adc
addl
ret
xchg
das
testl
ss
cmp
sbb
and
dec
aaa
pushf
sub
xchg
and
push
gs
loopne
jg
cmp
pushf
mov
mov
mov
mov
popa
bound
cld
xchg
or
jnp
push
repz
pmulhuw
jmp
dec
pusha
adc
int
in
add
es
mov
jge
std
cmp
shll
call
sub
dec
mov
outsb
js
dec
jg
push
fs
divb
cld
mov
mov
outsb
mov
cmp
stos
popa
sub
xor
sbb
sbb
push
add
sub
ljmp
sub
int
icebp
data16
mov
cmp
ret
dec
std
mov
vpcomb
cmpsb
add
lahf
xchg
pushl
adcl
pop
mov
out
leave
call
jmp
cmp
cmpsb
lret
mov
inc
cltd
test
sub
adc
mov
shrd
lock
xor
ljmp
outsb
popf
cmpsl
mov
decl
adc
imul
jmp
cmpsl
mov
fcompl
mov
ljmp
xlat
cmc
js
fs
sub
mov
fcomps
xor
aam
add
test
in
dec
fpatan
cmp
push
addb
pushl
nop
aad
fdivrs
add
mov
jnp
xor
clc
scas
ds
fnstsw
push
call
clc
test
ret
or
out
movsl
mov
adc
aam
jg
xchg
je
mov
mov
das
pop
in
pop
push
icebp
mov
inc
cli
xchg
mov
jmp
rcrb
popl
aaa
aaa
icebp
push
ret
push
inc
mov
fmull
or
pop
shrl
call
out
adc
in
cmp
fistpl
ret
clc
decl
insb
mov
lcall
stos
popf
jp
jne
cmc
fucomip
mov
and
dec
es
push
pushf
and
mov
das
popa
push
movsl
xchg
add
ljmp
hlt
jmp
sub
inc
aas
icebp
enter
jp
pushl
lods
sub
pop
popa
das
into
scas
test
int3
xchg
rcrl
push
lret
rcrl
xchg
decl
orb
decb
dec
mov
cmc
sub
mov
leave
sbb
sub
sahf
mov
incl
mov
sbb
adc
mov
lock
fisubs
jecxz
ljmp
jecxz
mov
arpl
adc
xor
xor
lcall
push
int
mov
sbb
add
mov
jmp
mov
loop
add
int3
cmpsl
mov
in
lcall
sbb
imull
xchg
inc
rcrl
and
fcomps
dec
fsubrl
xchg
pop
popa
dec
iret
jo
xor
loope
addr16
jb
and
into
mov
repnz
leave
sbb
push
jmp
xor
jle
mov
dec
add
filds
movsb
daa
outsl
into
ljmp
test
sub
mov
jae
jge
pushl
subb
cmp
cld
fdivl
jnp
lcall
cli
cmp
icebp
push
out
lret
inc
fistps
pop
mov
jg
cmpsb
jno
jge
jmp
add
loop
sub
inc
mov
insb
fs
xor
pushf
out
ret
push
cmp
insb
fisttpll
jb
lcall
incl
mov
lret
shll
add
nop
or
pop
mov
aas
iret
fstpt
call
adc
push
mov
pushf
sbb
fs
inc
xor
push
push
add
pop
rolb
cli
or
test
cld
adc
inc
mov
push
ficoml
xor
mov
jo
rcrl
sbb
jge
or
xchg
adc
add
mov
outsl
cld
das
sub
imull
cmpl
cmp
std
out
xchg
or
sbb
pop
lcall
stos
or
call
incb
in
push
call
jae
xor
fldenv
call
lcall
test
test
push
pop
fnstenv
lods
dec
pop
pop
sbb
push
sbbb
adc
daa
adc
iret
sub
pop
cmp
cmpsl
repz
rolb
ds
cli
std
mov
nop
mov
popf
sub
pop
int
rcll
sarl
lods
clc
jg
icebp
cltd
jg
pop
push
jg
dec
push
stos
adcl
lcall
mov
jmp
fwait
push
test
negb
mov
aaa
dec
fisttps
push
lcall
stos
xor
insb
xchg
jmp
sbb
pop
mov
lcall
adc
repz
repnz
mov
decl
xchg
cmp
cmpsl
bound
shrl
xor
xchg
push
cmp
dec
mov
pop
or
loopne
sarb
pusha
test
pusha
cmc
pop
mov
lods
xchg
aaa
nop
mov
jmp
sysret
push
stos
cmp
push
mov
xor
popa
lcall
pushl
jae
fld1
xor
mov
mov
sbb
jl
decl
adc
out
or
je
leave
lods
mov
ja
push
jl
out
pop
jge
jne
test
sbb
jg
lcall
xlat
scas
cwtl
jo
xor
pop
bound
push
outsl
ljmp
lock
idiv
xor
mov
xor
ret
and
loop
addr16
xchg
clc
incl
insb
jb
sub
int
pop
sub
dec
rorb
mov
mov
mov
ljmp
je
add
pop
push
fadds
fimull
and
jp
add
in
mov
and
call
mov
mov
call
push
out
dec
incb
addr16
and
dec
sub
pushl
add
divb
fwait
dec
into
sbb
sub
adc
mov
adcl
xor
sbb
jg
jp
xor
xchg
dec
outsb
mov
pop
or
dec
inc
js
mov
incl
jae
add
aam
jnp
mov
cwtl
in
and
jne
jp
mov
push
jg
push
mov
rep
push
ss
xor
loope
call
adc
mov
sub
hlt
or
les
fisubrs
jmp
xor
inc
pop
ljmp
int
loopne
popf
icebp
pop
aas
js
test
outsl
fwait
adc
jg
adc
mov
in
pop
or
mov
sub
imul
pop
loopne
push
insb
outsl
insl
div
pop
dec
sbb
sbb
push
inc
rorb
jne
sub
cmpsl
cmp
ret
cmp
jge
xor
pushl
call
hlt
daa
orb
sbb
cmpsb
fisttpl
inc
pusha
mov
f2xm1
clc
inc
outsb
jl
out
cmp
push
pop
sbb
in
sbb
inc
mov
call
sbbl
or
shrl
dec
stos
out
sub
aad
inc
fwait
mov
inc
into
sub
adc
lret
mov
rorl
xor
leave
out
popf
out
decl
jmp
inc
cmp
mov
or
aad
dec
mulb
invd
es
mov
xchg
in
mov
inc
dec
xor
orl
inc
mov
fistpll
ret
call
in
imul
loope
dec
int
imul
xchg
addr16
push
fwait
sbb
mov
cmp
daa
cld
cli
call
jne
mov
loope
xor
mov
jge
leave
subb
or
xchg
dec
adc
pop
dec
fists
movsb
bound
ss
pop
in
add
fmul
jle
movsb
cmpl
xor
sbb
jle
cld
movsl
jl
imul
leave
cmp
es
lcall
sub
cmp
mov
fwait
rol
push
and
jecxz
sarl
loop
les
mov
jmp
ds
pop
pushf
stos
adc
cmp
sub
lcall
aas
pop
pop
push
inc
in
insb
lret
jg
cmp
in
loope
data16
dec
pop
xor
bnd
je
repz
pushl
sbb
sbb
sub
mov
shrl
ja
push
or
sub
dec
push
push
call
loop
sbb
outsl
adcb
lds
ljmp
fnstsw
push
xchg
pushf
inc
pusha
pop
jb
jo
push
xor
stos
in
and
pushl
outsl
daa
pop
repz
loopne
lahf
jge
adc
stos
aad
cmp
add
xchg
int3
mov
pushl
jnp
cli
fstpt
xchg
decl
loop
add
ret
shll
jo
int
int3
add
sar
sti
jnp
scas
or
adc
cltd
mov
pop
std
sub
jmp
repz
cmc
decl
add
int3
fnstsw
or
xchg
testb
fcomps
lods
dec
dec
test
popf
push
aas
lods
xlat
inc
repz
jo
cli
mov
jge
xchg
jne
cmpsl
jbe
jne
movsb
mov
jns
inc
loopne
call
sahf
lret
roll
sbb
add
lcall
lods
repnz
add
adc
push
loop
rorb
call
inc
inc
cltd
mov
adc
mov
lods
add
push
jae
mov
pop
xor
mov
scas
push
mov
cmp
inc
jle
xlat
fdivl
lcall
xor
bnd
cmp
je
gs
jo
icebp
dec
cmpsl
push
cmpl
inc
xchg
jno
aaa
fs
push
or
cltd
push
sub
ljmp
dec
add
xchg
movsb
sub
mov
das
icebp
mov
adc
jl
or
add
xlat
push
arpl
jl
call
mov
dec
or
in
mov
scas
dec
mov
mov
ljmp
xor
ret
cmp
les
cli
je
xchg
push
movsb
cmp
addr16
loopne
pushl
pop
popf
add
mov
jecxz
outsb
out
jnp
aam
and
jl
sti
sub
sbb
movsb
mov
in
push
push
push
push
lock
lcall
dec
idiv
stc
cwtl
cmp
test
into
mov
test
jp
add
lds
imul
mov
push
imul
mov
gs
stos
mov
jg
xor
add
in
stos
mov
sub
stc
cs
pop
pop
pusha
or
mov
roll
jmp
mov
dec
sub
pop
outsl
movsl
clc
sub
rcr
stos
mov
insb
mov
xchg
jl
add
lods
jle
rclb
xor
push
adc
ret
cmp
sub
cmpsb
test
iret
cmc
mov
decl
dec
push
xor
adc
repnz
imul
mov
mov
sub
fs
iret
iret
movsl
cs
mov
int
push
push
out
ja
mov
mov
sub
icebp
jg
push
ja
jp
dec
xor
sbb
sbb
call
inc
lahf
mov
outsb
jp
sub
arpl
push
push
mov
int
sub
push
add
stc
push
incl
cmc
loope
sub
fs
es
sbb
int3
inc
lahf
incl
faddl
test
fcomps
inc
leave
xchg
ret
fsubrl
in
movsb
outsl
loopne
push
shll
inc
clc
or
les
scas
xchg
ljmp
pushl
mov
jp
push
pop
pop
adc
clc
stos
mov
mov
call
push
mov
out
push
sbb
lcall
mov
sub
mov
mov
add
or
je
loopne
mov
lcall
mov
or
test
std
pop
mov
popf
adcl
incl
fcmovne
pushf
mov
sub
stos
push
mov
cmpb
or
fs
pop
std
incl
jle
cmp
adc
adc
loop
sub
cli
or
cld
xchg
cmovbe
lahf
pop
out
daa
mov
pushl
mov
incb
in
in
push
xchg
mov
cmp
or
decl
lcall
inc
pop
cmp
pop
clc
jmp
and
mov
out
in
push
lds
or
push
mov
adc
repnz
pop
sbb
rclb
xor
inc
mov
shlb
or
adc
mov
inc
push
xlat
je
bswap
les
ds
mov
adc
adc
lds
jo
cwtl
cmp
ljmp
sarb
jg
jmp
popa
sbb
jl
mov
or
jb
xor
push
aaa
jmp
lahf
pop
test
int
mov
jo
dec
or
arpl
loop
call
mov
adc
fmulp
adc
mov
pop
loop
fistpll
ljmp
hlt
push
sub
jg
das
clc
add
pop
pusha
sub
xchg
fcom
stos
cmpsb
sub
outsl
lock
mov
imul
orb
and
stos
fucomip
mulb
xchg
or
repnz
es
add
cli
jg
mulb
pop
test
inc
and
lds
aas
jmp
pushl
dec
jmp
fiadds
fstpl
dec
lahf
out
or
pushf
subl
enter
xchg
mov
dec
jno
push
cli
pushl
in
nop
lahf
mov
pop
fs
addr16
adc
notl
push
jg
dec
jnp
not
and
lock
call
hlt
xchg
mov
in
jb
jo
xchg
pop
mov
insl
xchg
test
ljmp
dec
sub
jb
insb
aam
inc
mov
cli
mov
xlat
push
jne
jmp
mov
mov
js
movsb
pushf
fisubrs
add
sbb
xor
pop
sub
xlat
jle
add
pop
lcall
sub
inc
fcmovne
xor
add
cmp
push
test
call
jnp
jb
lea
jg
cmpb
sbb
mov
xor
outsl
add
cs
mov
cli
mov
adc
data16
repnz
pop
mov
mov
mov
out
add
ljmp
mov
mov
push
gs
dec
sbb
sti
xchg
jnp
xchg
jbe
pop
or
jmp
or
mov
fbld
sbb
jle
cltd
cs
addr16
mov
les
inc
dec
cld
pop
clc
mov
loop
push
xchg
mov
push
sub
stos
pop
sbb
cmp
mov
jmp
sbb
fwait
decb
sbb
rcrl
push
cld
lret
jns
sbb
lcall
fs
out
xlat
cld
clc
xchg
xchg
call
sahf
cmc
inc
pop
adc
incl
mov
lds
xchg
fsubrs
and
lahf
dec
sbb
pushl
les
jecxz
pop
mov
adc
dec
jae
dec
mov
or
call
or
in
enter
mov
incl
push
fidivl
push
jb
cmp
adc
pop
mov
jge
sub
push
mov
pop
and
or
incl
es
cli
push
arpl
jmp
sub
insb
and
xor
ljmp
std
push
pushf
lock
movsl
sarb
call
test
ljmp
in
push
pop
xchg
mov
addr16
decl
std
filds
fbstp
ficoms
pop
movsl
add
daa
jno
xor
ljmp
js
pushf
lahf
mov
push
cltd
pop
nop
pushf
pop
in
rcll
adc
clc
in
push
sub
add
repnz
aaa
out
cmp
movsl
lahf
lret
jp
test
sbb
cli
mov
pop
xchg
add
std
xor
sbb
jae
and
in
bound
stos
stc
inc
fwait
rclb
pop
inc
cmp
dec
outsb
xlat
lcall
lcall
xchg
sti
stos
or
push
sbb
insl
lock
incl
jno
andb
sbb
or
lcall
sbb
ljmp
out
xor
jle
sahf
inc
clc
ljmp
rclb
mull
fwait
sbb
int3
pushf
dec
pop
add
xor
or
mov
fldenv
aaa
das
lcall
xchg
arpl
and
lcall
outsb
hlt
and
or
mov
pop
xchg
pop
gs
ljmp
in
cwtl
dec
xchg
stos
dec
mov
fiadds
pusha
fiaddl
sbb
sbb
pop
testl
lea
pop
jecxz
sub
shll
cwtl
es
call
dec
fldt
sbb
inc
es
cmp
test
call
xor
in
xlat
loope
ljmp
mov
inc
mov
je
pop
push
test
push
push
cmp
mov
sbb
fsub
xchg
test
rcrb
and
popa
mov
mov
add
test
jmp
pop
add
jg
push
add
nop
push
push
push
js
icebp
mov
push
aam
std
gs
add
mov
std
das
mov
js
dec
mov
add
pop
aad
stos
cmp
jmp
loop
mov
repz
dec
mov
jl
push
mov
ficoml
lds
decl
popa
jmp
ret
fdiv
andb
push
sub
fwait
push
jg
mov
jbe
notb
insl
sbb
xchg
test
popf
out
sub
jmp
popf
data16
aaa
push
sti
sbb
push
out
mov
insl
imulb
cmc
jg
test
test
push
ret
dec
inc
mov
push
push
push
lret
fcomip
xchg
arpl
insl
lret
ret
xor
in
pop
push
stos
add
mov
xor
sub
xchg
loopne
pop
and
jg
pop
mov
ljmp
repz
scas
xchg
ljmp
adc
jno
or
add
pusha
adc
popa
lret
lds
sub
push
call
je
xor
rolb
push
cltd
push
or
ficoml
and
mov
cli
incl
dec
pusha
outsl
mov
mov
fiadds
popf
lcall
mov
lea
dec
mov
test
xor
mov
mov
inc
ss
int3
lret
pop
or
push
pop
mov
inc
jmp
mov
call
and
cli
adc
shll
fs
mov
icebp
or
call
clc
push
cmpsl
ficoml
adc
xor
iret
addr16
nop
lods
or
pop
adc
mov
push
mov
lret
inc
sbb
sti
lret
std
mov
imul
xor
push
cmp
cmp
sub
pop
outsl
cld
ljmp
addr16
loop
popa
clc
adc
sbb
andb
push
pushl
stc
pop
add
jl
testb
aam
xor
sub
imul
hlt
pushl
push
and
xor
sbb
call
stos
lock
sub
in
mov
pushl
data16
cmp
dec
push
shlb
sbb
sahf
sahf
inc
imul
pusha
les
dec
ds
into
sub
xchg
sub
loopne
sub
aad
mov
roll
insl
mov
and
ja
ljmp
imul
roll
filds
dec
add
fs
sbb
lret
lcall
ret
sbb
sti
mov
jl
je
add
fists
test
mov
sbb
push
jbe
in
xchg
das
cld
jecxz
lock
dec
aaa
sbb
sub
jmp
sbbl
dec
adcb
jnp
fisttpll
cli
call
stc
xlat
test
adc
push
push
xor
jae
inc
lock
cmp
incl
loop
mov
popa
int
imul
xchg
fimull
mov
pop
sub
jo
xor
popa
and
sbb
add
clc
mov
jmp
outsl
les
sti
mov
iret
jl
jbe
cld
fucomip
add
push
nop
xchg
inc
idivl
std
ljmp
lock
fisttps
cmpsl
call
pop
jecxz
shll
mov
lock
lock
call
lods
arpl
aad
cld
cmp
ficomps
mov
jnp
push
repnz
jne
push
or
xor
je
and
push
push
int3
repz
in
cltd
push
stos
cmpl
pop
mov
pop
imul
sub
gs
or
dec
jecxz
or
fcoms
mov
xlat
je
ljmp
mov
lods
outsl
jo
push
test
arpl
popf
int
mov
cmpsb
out
loope
pusha
dec
arpl
xor
mov
mov
or
flds
jg
jmp
mov
mov
imulb
pusha
jg
pop
clc
dec
and
inc
incl
add
lea
std
cld
mov
scas
loop
xlat
mov
inc
inc
mov
pop
stos
jb
add
test
test
or
dec
jo
cmp
inc
mov
cli
inc
adc
bound
dec
dec
loope
xchg
sbb
ret
sti
ljmp
nop
adc
daa
or
xor
outsb
lods
int3
inc
clc
mov
pushl
hlt
std
fmull
mov
mov
xchg
and
jle
addr16
add
pushl
clc
std
mov
clc
daa
jbe
int3
xchg
mov
mov
repnz
ljmp
pop
shll
fwait
add
mov
mov
pop
and
dec
mov
mov
mov
cli
xchg
lods
nop
mov
mov
out
lods
out
jne
pop
adc
pop
jmp
ljmp
mov
loop
and
cmpsl
xchg
jg
xchg
pop
or
jmp
pushl
jnp
in
js
scas
fstl
fwait
mov
mov
add
mov
pushf
or
mov
mov
inc
movsb
cmp
mov
push
ljmp
aad
inc
pop
out
mov
push
push
xlat
xor
jmp
fndisi(8087
add
fwait
dec
ljmp
mov
add
repz
and
orb
mov
cli
push
inc
cld
lods
loop
test
cs
push
clc
in
outsl
adc
int3
mov
lcall
in
test
addb
test
adc
andb
sbb
pushl
cmp
mov
je
nop
ja
cmc
jns
pop
sub
adc
lret
filds
or
inc
lcall
out
sbb
adc
fmuls
pop
adcl
into
ljmp
and
lock
int
mov
cmpsb
push
xor
dec
std
jo
aad
dec
popa
jg
mov
popf
inc
leave
stos
rcr
dec
aas
and
cli
push
fistl
adc
mov
fnstsw
xchg
clc
gs
lcall
int3
sub
xor
inc
lods
lcall
popf
sub
test
ljmp
sbb
jo
adc
xor
pushl
js
daa
ret
icebp
jns
faddl
fdivr
xchg
fisubs
jmp
out
decl
push
das
xor
cmp
arpl
sahf
push
gs
sbb
aaa
xchg
xchg
int
dec
push
test
movsb
push
adc
mov
pop
inc
dec
xor
push
cmp
sub
mov
push
call
inc
adc
frstor
dec
add
jno
nop
mov
sub
jne
mov
cmp
cmp
lods
dec
scas
stos
imul
ss
cld
scas
push
test
lcall
jmp
dec
popf
arpl
call
js
sub
leave
imul
int3
popa
cmpsb
cwtl
daa
insl
aaa
inc
fisttps
and
movsl
mov
sbb
negb
popf
add
mov
decb
adc
push
aad
int
pop
jmp
pushl
jecxz
cmpsb
dec
imul
and
or
push
pop
ret
inc
scas
xchg
decl
mov
xor
add
cmp
stc
ret
call
cmp
pop
inc
mov
out
push
mov
xchg
adc
not
push
insl
inc
repz
std
incl
out
xor
mov
push
call
sbb
ret
and
call
incl
sub
inc
xor
cmp
pop
popf
mov
out
mov
jge
cmpsl
add
std
pop
mov
call
mov
shlb
cmpsl
xor
cwtl
std
std
aam
lods
adc
dec
sub
adc
push
push
jmp
mov
push
or
or
arpl
inc
pop
sbb
mov
icebp
in
lods
inc
adc
scas
cmp
mov
jae
jo
shrl
pop
jae
mov
fiadds
add
incl
inc
insl
lods
test
fwait
lahf
dec
sub
sahf
mov
sbb
or
inc
push
xor
adc
mov
decl
lret
rclb
dec
add
outsb
loop
out
imul
sub
fimuls
mov
out
push
psubusb
cmpsl
aam
incl
out
stos
jns
add
ds
ljmp
push
dec
jmp
jmp
inc
aam
and
loop
fcompl
popf
loopne
test
xchg
inc
dec
fmull
jg
imull
mov
loopne
push
xchg
js
cltd
test
dec
out
xchg
jecxz
push
rcrl
stc
addr16
jns
jmp
lea
mov
pop
pop
imul
jg
ss
mov
xchg
jmp
outsb
loopne
and
ljmp
call
mov
iret
test
jmp
push
lea
ljmp
dec
fwait
pushf
mov
roll
push
and
stos
push
pop
sbb
inc
loopne
decl
push
mov
sbb
aaa
rcrb
xor
and
jb
stos
decl
inc
gs
shl
mov
aad
push
add
fbld
adc
aad
call
sub
mov
cs
lcall
inc
lret
dec
xor
cltd
xlat
in
pusha
shl
cwtl
test
mov
outsl
adc
gs
in
sbb
inc
fs
xor
ret
cmpsl
or
fs
push
cld
loopne
cmpl
mov
jp
pusha
xor
jmp
sbb
inc
cld
and
adc
scas
rclb
inc
mov
mov
pop
leave
mov
cwtl
sbb
ljmp
fistps
jl
ret
lea
dec
aaa
or
dec
xlat
fsubrp
jg
pushl
jns
push
cli
or
stos
mov
lock
mov
cmp
adc
data16
sub
cli
aad
xchg
push
fstpl
daa
jge
push
xchg
icebp
outsl
mov
rol
sbb
cltd
add
cmp
std
decl
inc
xchg
repnz
ret
push
xor
mov
inc
cmp
push
or
loope
mov
mov
fisubrl
sti
push
mov
insb
fwait
not
outsl
hlt
movsl
ljmp
rolb
js
mov
jge
cmpl
clc
mov
call
lcall
std
sbb
into
mulb
jae
xchg
and
fwait
bound
inc
ret
inc
xchg
lret
push
cld
in
repz
sbb
mov
dec
fwait
movsl
inc
daa
sub
jmp
rcrl
out
inc
das
addr16
mov
pushl
in
xchg
sbb
rcll
cmpsl
push
ss
scas
xchg
call
faddl
mov
cmpsl
bound
xor
xor
push
or
sbb
mov
cmp
xor
ljmp
cld
int
in
lret
and
or
lods
loope
shr
dec
dec
dec
pusha
rdpmc
lods
ja
decl
jb
gs
out
xchg
push
jmp
add
xchg
pop
jp
mov
call
call
xchg
jge
push
adc
xor
xlat
mov
adc
mov
jg
decl
dec
sbb
loopne
and
imull
pop
adc
pop
cmpsl
jg
pushl
iret
shll
ret
pop
push
xor
int
or
sar
lods
ret
mov
xlat
in
stos
dec
movsb
inc
jecxz
test
aad
mov
fisubrs
std
mov
stc
xor
mov
pushl
imul
cmp
std
xchg
sbb
lock
dec
adc
mov
std
lcall
stc
xchg
into
test
dec
sub
mov
adc
mov
lcall
das
mov
adc
out
out
dec
adc
scas
pop
mov
iret
add
xchg
sbb
repnz
sbb
pushf
pop
pop
ljmp
inc
inc
inc
into
xor
enter
jo
decb
push
lcall
mov
sub
enter
inc
mov
pop
fs
sti
pusha
sub
mov
pushl
adc
inc
pop
sub
mov
adc
mov
gs
loope
clc
mov
cli
lcall
or
push
add
adc
in
cmp
les
push
or
sarl
inc
dec
or
pushl
test
arpl
push
scas
movl
jg
loope
inc
decl
sbb
pop
lret
leave
cmp
inc
mov
jg
fs
test
mov
push
test
sub
lahf
cmp
dec
shr
shlb
cltd
mov
rcrl
xor
mov
xor
inc
cmp
mov
les
and
adc
scas
mov
iret
dec
ret
cmc
pop
stos
jnp
mov
pop
dec
sbb
mov
aaa
dec
lea
adc
iret
jbe
push
js
pop
fsubl
lock
push
imul
addr16
mov
or
call
cld
sub
mov
adc
cmp
xlat
repz
xchg
movsl
mov
in
sbb
cmpb
sbb
mov
mov
push
adc
daa
jae
sub
das
push
jo
push
js
sub
movsl
jle
add
xor
rolb
arpl
movsl
call
ss
rclb
jns
enter
mov
and
sub
lcall
cmpsb
jl
iret
in
or
in
push
dec
cmp
mov
xchg
xchg
sub
popa
das
sub
outsb
outsl
lret
xchg
mov
lock
push
decl
lock
test
fldcw
xor
sub
pusha
jg
mov
sbb
orl
incl
pushl
lods
push
jns
ret
or
mov
iret
or
lcall
mov
es
shr
hlt
aas
rcrl
sbb
sub
loop
call
int3
dec
fldpi
sbb
push
xlat
in
subb
lods
rclb
mov
repnz
pop
xor
push
mov
insb
repz
roll
add
xchg
aam
lods
mov
xor
das
xchg
incb
jns
ret
push
insb
xchg
dec
stos
adc
ljmp
xor
clc
popa
jb
add
push
push
xchg
lcall
jb
mov
sub
lock
inc
xchg
inc
cli
adc
pop
xchg
jmp
je
mov
mov
sbb
lods
scas
test
mov
sub
mov
pop
push
lcall
sub
dec
jb
ret
or
push
inc
or
call
pop
inc
xchg
xchg
cmc
int
sbb
test
xor
stc
lods
gs
push
mov
call
ljmp
sbb
mov
adc
pop
enter
lea
popa
add
cli
pushf
sub
pushl
xchg
cmp
or
xor
dec
imull
mov
pop
pmaxub
aam
and
dec
cld
clc
mov
data16
mov
dec
in
inc
das
mov
ds
lahf
pop
cmc
test
mov
es
imul
cmp
and
rcrb
adcl
mov
fldl2t
dec
mov
fdivr
decl
push
inc
or
inc
xor
idivl
aaa
or
or
insb
rclb
das
icebp
test
jl
pop
xor
out
out
jne
loopne
stos
sbb
das
std
jmp
mov
adc
pop
out
mov
pop
pop
pushl
sub
cmp
add
rorl
sub
gs
negb
cld
inc
lcall
pop
jbe
shlb
or
std
test
xor
imulb
in
pop
test
hlt
or
sbb
bnd
inc
imul
mov
lcall
addl
xor
sarl
inc
or
addr16
ret
xchg
sub
or
stos
outsl
add
xchg
push
cld
sbb
lret
insl
cltd
icebp
push
push
sar
jg
sahf
mov
dec
push
lds
sbb
lret
xlat
cmpsl
jg
pusha
lcall
lock
jg
loopne
inc
mov
pop
xor
repnz
incl
lret
or
or
or
jmp
sti
push
adc
jae
shl
inc
lods
or
jg
sbb
cmp
out
aas
fistpl
ret
cltd
shrl
mov
jns
and
cld
sbb
and
scas
xchg
or
repnz
mov
int
lcall
out
dec
push
call
dec
pushl
mov
cltd
test
jo
ret
lcall
mov
xchg
movsl
xchg
mov
lcall
loop
lret
sahf
cmp
dec
mov
call
out
jecxz
in
ds
popl
jecxz
pusha
adc
sub
lret
pop
push
push
mov
and
jle
mov
jecxz
push
ret
js
les
outsl
sbb
mov
or
ret
jns
imul
out
hlt
scas
test
adc
ret
insb
ljmp
pop
mov
dec
jmp
arpl
ficoms
add
jne
and
add
js
repnz
push
and
inc
enter
mov
mov
mov
inc
sahf
insb
mov
movsl
jns
sub
mov
xor
loope
sub
and
lcall
xor
movsw
mov
repnz
jmp
lock
pop
mov
push
lds
ljmp
clc
loopne,pt
int
int3
jecxz
pushf
add
or
cltd
adc
test
hlt
enter
scas
cmp
dec
repz
cs
enter
nop
js
pop
cltd
inc
stos
ds
sub
cltd
inc
cmp
jg
loop
pop
stos
les
mov
sbb
pop
dec
xchg
sub
icebp
and
cmp
jg
cmp
xchg
sahf
xchg
movsl
fists
inc
jno
scas
add
jg
jmp
mov
sub
sbb
dec
sti
int
cmp
inc
fcomip
xchg
mov
lock
jl
mov
mov
mov
and
imul
add
inc
push
shll
adc
js
jb
inc
jb
call
out
push
and
cmp
mov
cwtl
loope
jge
mov
icebp
loop
and
das
icebp
pop
sub
pop
pushf
stc
jle
jne
insl
jb
mov
call
test
xchg
or
inc
nop
sti
and
outsl
cmp
dec
xchg
mov
sar
pop
mov
fidivrs
pusha
add
xor
mov
sbb
mov
add
pop
mov
addl
jne
cmpsl
xchg
adc
outsl
pop
dec
cld
or
jmp
sbb
jg
mov
imulb
addr16
imul
loopne
lcall
sti
jmp
push
idivb
pop
add
lret
push
stos
push
call
sbb
cmp
mov
push
cmp
aam
lock
jp
hlt
lcall
mov
in
pop
jmp
mov
sub
test
sbb
inc
push
mov
addr16
aaa
mov
fwait
shll
mov
loopne
call
push
fs
std
stos
daa
sbb
mov
call
jb
ja
or
pop
insl
xchg
pop
mov
or
mov
movsl
sbb
hlt
sbb
fnsave
mov
xchg
fwait
gs
clc
jmp
and
addr16
dec
rcl
sbb
cli
jge
jno
mov
shlb
mov
xor
sbb
jns
lds
shlb
out
gs
insl
cmpsl
mov
lcall
inc
outsl
adc
jp
lret
jae
cs
mov
out
sbb
push
add
imul
add
adc
jmp
lods
sub
subl
sub
fucom
ljmp
std
inc
movsl
lods
jno
push
in
add
fprem
ljmp
mov
jg
or
jle
dec
sub
andb
mov
dec
movsl
dec
lahf
pop
adc
loopne
cld
mov
mov
dec
cmp
test
lcall
mov
lods
iret
cltd
jmp
test
lret
js
xlat
jmp
stos
scas
out
cmp
or
jle
mov
sbb
pop
mov
and
int3
sub
dec
jo
jo
lcall
cltd
aas
jno
fsts
pop
gs
mov
repnz
hlt
and
cs
jno
sar
outsl
mov
mov
push
inc
pop
pop
xchg
movsl
or
xchg
pop
pop
dec
push
fwait
call
mov
xchg
lret
jnp
je
push
inc
out
out
or
jmp
data16
adc
mov
iret
sbb
incl
jp
pextrw
pusha
mov
jae
push
in
push
inc
call
call
fsubrp
and
sbb
adc
out
push
xchg
sub
incl
jae
dec
jge
mov
cltd
inc
push
lds
sbb
jg
les
xor
sbb
push
mov
jp
lcall
es
lcall
adc
test
ljmp
jge
sub
cmpsl
adc
mov
in
jmp
cmp
fucomi
or
inc
hlt
xchg
fs
xchg
inc
push
sahf
add
lcall
sti
repnz
mov
fimuls
mov
add
inc
jmp
popa
imul
decl
ds
adc
or
mov
out
or
xchg
js
mov
fildll
loopne
je
lds
bound
ljmp
lcall
mov
test
push
incb
mov
xchg
call
add
xor
lret
mov
sti
cmp
add
cmp
call
negl
adc
clc
out
jg
cmc
mov
adc
movhlps
dec
cs
push
jmp
icebp
mov
add
sbb
inc
icebp
cld
in
pop
das
push
xchg
scas
fbld
push
push
insb
lcall
call
cwtl
and
jb
add
leave
enter
sub
lret
xor
ljmp
lods
mov
pushf
les
incl
sbb
out
nop
dec
test
dec
icebp
or
sub
lcall
push
movsl
push
lcall
rorl
push
jnp
icebp
imul
iret
mov
stc
imul
pushf
leave
adc
and
lahf
pop
shlb
loop
jle
and
loop
test
movsl
push
add
jae
pop
jmp
loopne
mov
xor
pop
sub
mov
push
xor
orb
clc
dec
pushl
scas
jae
lock
jge
xchg
in
loopnew
jmp
sbb
test
orb
sub
push
pop
adc
shlb
push
jmp
xchg
out
pop
test
or
rcll
mov
cmpl
clc
dec
cwtl
insb
dec
aad
xchg
add
mov
lcall
pushf
push
in
inc
cmp
js
jl
pminub
push
sbb
mov
sbb
mov
mov
cmpsl
fmull
dec
test
les
pusha
adc
ljmp
add
dec
xor
test
js
pop
pop
pusha
popa
jmp
mov
mov
adc
jne
jne
addr16
push
test
pop
cmp
outsb
or
repz
in
lcall
ja
inc
xchg
inc
cmc
icebp
mov
stc
aaa
std
mov
and
pushf
xorl
mov
mov
rorl
hlt
decl
push
fcmovbe
stos
jl
fsubl
ljmp
in
loope
rolb
enter
outsl
lds
xchg
test
outsb
loop
in
jge
push
mov
xlat
jg
jo
mov
aas
cld
inc
adc
push
stc
std
pusha
push
movsl
outsl
je
mov
mov
out
sbbb
loop
or
pop
addl
cmp
mov
push
inc
movsl
ljmp
bound
sub
test
mov
subl
or
dec
dec
stos
xchg
inc
cmpsl
inc
inc
dec
inc
test
test
repz
rorl
pop
mov
aaa
and
mov
jp
faddl
cmc
sbb
loop
aam
xorb
sbb
mov
lcall
dec
dec
rcrb
nop
test
sub
jb
nop
xor
aam
mov
loopne
shll
test
jg
ljmp
sahf
mov
xorl
adc
movsl
lcall
std
enter
pop
dec
add
cmpsb
mov
sbb
call
imul
jmp
jmp
mov
adc
in
ss
xor
push
lcall
stc
sbb
popf
incl
push
cmp
sub
xchg
and
rcl
jl
cwtl
sar
inc
outsb
imul
cltd
cmpsl
fidivl
fwait
mov
mov
dec
pop
insb
mov
ja
test
inc
fistps
cmp
call
ficomps
addr16
xor
mov
xchg
or
hlt
jno
dec
sub
sub
sbb
call
fldl
cmp
stc
cld
inc
push
scas
imul
push
ss
pushl
call
int3
shl
into
icebp
fidivs
dec
dec
lock
jmp
fisubrs
in
and
call
mov
sbb
enter
test
out
dec
sub
push
mov
mov
insl
std
mov
fnstsw
imulb
enter
loopne
and
decl
mov
fldt
aam
lock
pushf
fnstenv
ja
sbb
call
mov
pop
insl
and
movsb
movsl
lret
dec
mov
pop
fcmovnu
gs
pushl
out
adc
aaa
mov
push
jl
mov
test
call
cs
lds
xlat
inc
pushf
gs
mov
outsl
movzwl
dec
aad
das
sahf
dec
sbb
and
jne
mov
inc
sbb
incl
xchg
outsb
sbb
test
les
pushf
dec
push
mov
ljmp
xchg
mov
mov
mov
jno
cltd
pop
pop
ljmp
out
xor
or
inc
ret
lods
rcll
ljmp
addl
int3
incl
xchg
lods
out
and
cltd
xor
insb
pop
lcall
and
jno
in
mov
pcmpgtd
mov
sub
fildl
mov
dec
adc
xor
cmp
je
push
inc
pop
pop
jb
add
test
ret
dec
cmp
mov
je
mov
pushf
mov
ret
mull
push
xchg
xchg
mov
or
xor
sti
pop
jmp
test
aad
in
sub
insl
aas
lea
lea
adc
jg
xor
pop
mov
mov
xchg
xchg
jbe
aas
insb
pop
cli
mov
mov
clc
mov
adc
push
and
and
xchg
popf
pop
arpl
pop
outsl
jns
push
cmc
mov
call
div
jmp
pop
mov
mov
cmpb
mov
sbb
adc
lcall
mov
jne
pop
fldl
add
jb
sub
lock
cmp
out
jg
mov
dec
adc
xor
test
jb
push
xchg
lock
ljmp
xor
lods
xchg
cmc
addl
mov
aas
and
cmp
stos
iret
std
mov
scas
test
jg
addr16
mov
push
adc
fistl
loope
in
sahf
sbb
shrb
aam
sbb
rcrb
sbb
loop
fdivl
subb
jg
call
mov
test
jb
int
inc
push
adc
fdivr
inc
jp
pop
idivl
mov
dec
xchg
push
push
or
outsb
jns
aam
daa
test
fdivp
or
call
outsb
jl
icebp
mov
sub
or
lret
xor
mov
push
loopne
shll
enter
and
cld
sub
out
test
aaa
fisttpl
jl
mov
sbb
or
aas
push
call
or
and
arpl
add
cmc
xor
mov
insb
pusha
mov
or
fistpll
mov
dec
xchg
les
push
rol
dec
lret
out
push
inc
sbb
shlb
mov
adc
mov
lea
icebp
shl
bsr
lcall
push
int3
lret
add
push
mov
negb
xor
mov
xchg
cs
outsb
test
xchg
adc
pushl
aaa
sti
loopne
fsubl
movsl
es
lds
insl
xchg
sbb
xchg
jecxz
jmp
or
dec
in
fldenv
and
xchg
add
push
imul
add
call
and
jl
mov
cmp
call
sbb
out
mov
and
rclb
sbb
mov
mov
insb
or
out
out
add
sbb
and
fldl
mov
mov
imul
or
rolb
nop
cwtl
ret
push
dec
xor
daa
xchg
sub
and
mov
cmp
mov
lods
mov
mov
bound
mov
jmp
out
cld
sub
incl
ljmp
push
or
outsl
insb
dec
push
fildl
add
xchg
icebp
ljmp
cs
orl
mov
cltd
imul
shrb
push
outsl
std
cli
add
mov
or
ret
cmpsl
imul
mov
lcall
sbb
jb
add
adc
mov
test
jne
and
push
pshufw
sub
jle
pop
fs
jmp
adcl
cmc
sarb
sub
je
inc
jae
fdiv
pop
cld
jmp
dec
mov
sti
out
repnz
fnstenv
lcall
mov
xchg
sub
sbb
dec
or
jl
lcall
fnstcw
push
xlat
fdivs
cmp
mov
test
xor
adc
faddl
inc
stc
out
xor
rclb
das
xlat
cld
jg
lds
stos
mov
jl,pt
mov
cld
xchg
ljmp
call
int
cmpl
pop
imul
jge
dec
arpl
adc
dec
shl
insl
lea
mov
das
std
out
mov
adc
filds
push
mov
pop
or
decl
inc
stos
les
jb
mov
call
test
or
jg
mov
mov
imul
dec
jmp
mov
add
add
cs
call
bound
pop
or
movsb
int3
fs
jne
pop
xchg
loop
enter
push
sbb
xchg
mov
xor
call
clc
add
fistl
sar
xlat
adc
lcall
adc
pop
clc
dec
pop
stos
xlat
pop
movsb
sbb
movsl
sub
mov
push
jg
mov
and
xor
fistpl
ret
mov
ljmp
cltd
add
ds
mov
loope
in
out
shlb
jns
fst
mov
xor
adc
jg
push
clc
xchg
lock
rorl
ja
mov
jmp
pop
insl
inc
call
and
js
adc
jno
lcall
add
jecxz
cmp
push
inc
jmp
push
fstpt
mov
call
cmc
ror
imul
dec
jl
outsl
test
lods
push
mov
add
orb
fucomi
fstpl
loopne
pop
out
aam
pop
sub
mov
mov
push
testb
pop
loopne
push
or
gs
jne
int3
inc
in
ds
jb
jg
lcall
adc
pop
fs
xor
lret
fsubl
jp
lret
jne
rcr
fs
or
cmp
mov
fdivrl
shlb
xchg
mov
dec
sti
xchg
dec
das
icebp
mov
in
xor
pop
frstor
sub
xchg
insb
add
or
imulb
or
setp
mov
aam
adc
jnp
fsubr
cmp
jecxz
dec
mov
inc
mov
inc
cmp
rcll
mov
push
notb
push
out
outsl
cmp
adc
jg
ss
into
or
push
cmc
mov
cli
cltd
sub
xlat
xorb
sub
adc
fwait
or
ljmp
cs
decl
mov
fcoml
movzwl
push
push
loop
push
hlt
out
add
adc
jmp
inc
jbe
sub
push
pushf
call
cs
push
lods
outsl
jle
mov
add
call
pop
mov
fimuls
sti
call
and
push
ds
add
repz
or
stos
clc
jg
xchg
xchg
fwait
sbb
xlat
mov
arpl
push
jge
pop
lcall
repnz
test
decl
lea
jle
lock
cmp
dec
sbb
sub
xchg
jl
pushf
imul
sub
or
rolb
push
les
loope
inc
les
arpl
std
mov
popf
imul
sbb
movsl
adc
mov
inc
cwtl
iret
inc
jg
hlt
incl
inc
push
popf
pushf
in
push
cs
inc
push
stos
stos
stos
int
mov
push
jge
sbb
fisubrl
jg
loop
xchg
test
je
add
call
mov
xor
cmc
into
dec
inc
mov
xchg
xlat
mov
outsl
mov
pop
clc
lret
outsb
mov
repnz
sbb
pop
inc
adc
incl
loopne
ret
push
or
jnp
arpl
push
push
inc
fs
add
imul
pop
incl
ljmp
push
push
pop
pushf
push
xchg
push
cmp
mov
xchg
xor
test
lcall
cmpsl
xor
icebp
idivb
ja
out
mov
das
xchg
inc
mov
dec
aad
int3
cmp
ljmp
ljmp
jno
xor
or
and
inc
lds
pop
imul
dec
add
dec
push
xor
push
push
ljmp
push
cli
in
int3
mov
fildll
into
out
lcall
test
sar
fistpl
cmp
lcall
fucomip
cmp
enter
jp
sbb
fldt
in
dec
stos
mov
jg
in
adc
out
in
jg
ss
add
push
sub
cli
sahf
adc
call
in
add
icebp
mov
cmp
aaa
mov
sar
cmp
and
pushl
sub
push
scas
les
andl
xchg
or
jmp
mov
in
lret
sahf
sbbl
fildll
sbb
pop
lds
cld
pop
out
or
jmp
test
je
jge
mov
iret
pop
adc
ljmp
mov
test
push
or
add
jecxz
fwait
iret
js
cmp
scas
mov
mov
or
incl
aad
cltd
inc
stos
jmp
mov
das
enter
in
aas
dec
jge
lods
inc
inc
fnstcw
incl
xor
leave
in
lahf
cmp
in
movl
decl
int
jno
cmp
xchg
dec
inc
out
and
ljmp
jg
sahf
xchg
repnz
out
int3
jmp
repz
imul
fbld
ljmp
jns
xchg
jp
decl
or
dec
jae
sbbb
repz
outsb
in
jne
mov
mov
inc
mov
insb
inc
adc
push
jmp
mov
je
leave
pop
pop
rcl
lcall
pop
sar
decb
or
jmp
mov
xorl
jmp
xchg
decl
cld
push
mov
stc
push
stos
or
mov
enter
ss
outsl
lock
jmp
pop
pop
mov
cmp
leave
jnp
pop
add
jle
mov
pop
add
mov
or
jp
or
test
aad
cmp
iret
pop
mov
mov
out
shrb
mov
adc
mov
popa
mov
lcall
jb
sbb
and
adc
xor
fcoms
pop
shrl
scas
mov
xchg
dec
enter
pop
fmul
or
sbb
outsl
std
push
ds
les
fiadds
mov
adc
icebp
jg
mov
pusha
mov
adcl
cs
xor
pslld
add
push
mov
jbe
cmpsl
decl
cld
decl
mov
mov
cld
loop
adcb
lea
jg
call
int
sbb
jns
int3
jmp
pop
mov
roll
std
andl
rorb
mov
pop
mov
sahf
lret
dec
jmp
leave
sub
pop
mov
lock
add
pop
sbb
inc
sbb
iret
scas
mov
push
mov
xlat
cmpsl
dec
outsl
call
icebp
cwtl
das
cld
xchg
xlat
adc
mov
or
jl
lcall
mov
or
xor
xchg
scas
dec
rcr
and
jg
jle
add
xchg
in
cmp
test
mov
call
js
jg
pushl
outsb
js
pop
pop
jg
ljmp
pop
pop
imul
xchg
leave
xor
icebp
cmpsb
mov
cmp
mov
aad
mov
cmc
adc
mov
sub
out
cmp
iret
loop
jbe
ja
incl
mov
adc
adc
mov
pop
das
mov
pop
mov
call
fistl
mov
sub
adc
jmp
jbe
hlt
push
push
lcall
lcall
add
loopne
push
sbb
mov
out
xchg
loop
sub
clc
out
jle
call
leave
fwait
in
mov
fisubrs
and
jg
outsl
aam
xchg
pop
inc
or
pop
les
ss
pop
call
int3
mov
arpl
mov
xor
sub
imul
das
push
fistpll
jg
clc
jl
leave
push
push
cmpl
pop
loop
in
or
or
hlt
pop
jmp
imul
insl
orb
test
ljmp
jbe
fbld
adc
mov
rcpps
mov
or
clc
or
aam
sub
adc
add
dec
mov
decl
or
inc
push
movups
push
cmp
popf
and
xchg
notb
popf
jnp
loopne
push
orb
fcoml
stos
cs
xor
mov
push
cmp
jle
lds
inc
lods
add
adc
pop
loop
jg
movsl
pop
mov
rolb
das
xchg
stos
cmpsb
in
mov
stc
decl
mov
push
mov
adc
clc
sahf
je
and
mov
out
enter
jbe
daa
adc
fldt
xchg
test
out
loope
out
xor
lcall
xchg
jnp
sbb
and
div
jl
stos
mov
pushl
sub
adc
ret
mov
mov
cmp
sbb
test
mov
repnz
push
stos
ljmp
lock
and
mov
push
jns
stos
lcall
pusha
test
and
mov
rorl
incl
rclb
adc
gs
stos
call
cli
sub
ja
repnz
gs
mov
and
jnp
mov
pop
lods
aaa
icebp
pop
rclb
pushf
cmp
out
sbb
adc
popf
push
daa
push
pop
inc
adc
mov
jge
ret
cwtl
ljmp
xor
leave
and
dec
js
arpl
scas
adc
cld
cltd
sti
test
mov
pop
loopne
jl
movsl
mov
addr16
data16
aaa
dec
fadds
inc
jp
inc
jb
pop
cmp
jge
pop
inc
xor
out
adc
pop
stos
mov
adc
pop
or
pushl
push
or
out
into
xor
sub
std
dec
dec
aam
sbb
rclb
icebp
stos
sub
fsubp
mull
daa
sub
call
cli
fnstcw
int
push
pop
sbb
aas
dec
push
cld
dec
xlat
repnz
fucom
push
cmp
ss
loop
jl
xchg
imul
xlat
jg
subl
arpl
dec
in
inc
cli
or
pop
mov
mov
ds
xor
scas
jmp
mov
cmc
daa
dec
incl
mov
sarl
cmpsl
aad
dec
and
lods
push
and
repnz
lock
push
pop
jle
rcl
pop
clc
ja,pt
mov
int
inc
mov
das
mov
push
mov
fwait
or
pushf
ljmp
jmp
movb
fisttpl
sbb
adc
push
or
ljmp
dec
add
dec
ret
gs
jg
push
push
roll
gs
insb
mov
popa
jg
iret
imul
sub
jmp
lea
sub
andb
cld
daa
adc
pop
cwtl
fcompl
dec
insl
les
or
fsubl
aam
js
rclb
sbb
int
fisubrs
or
jg
in
scas
ja
xchg
cmp
shll
adc
or
pop
xor
sbb
pushl
mov
dec
lds
lock
repz
jae
sbb
xchg
clc
stos
shlb
pushl
pusha
mov
fsubs
pop
adc
mov
data16
mov
out
push
and
dec
push
push
fld1
pushl
call
xchg
or
rolb
or
mov
incl
cmc
hlt
fadds
adc
lret
orl
sub
xlat
iret
mov
test
ljmp
icebp
frstor
insl
js
or
popf
adc
loopne
push
and
aas
sub
adc
pop
xlat
cmp
incl
idivb
and
pop
arpl
outsb
sub
subl
imul
cmc
xchg
sbb
test
cli
jg
push
sub
push
sarl
mov
xchg
pop
mov
lock
ljmp
sbb
push
jmp
fdivr
lcall
push
inc
push
bound
inc
push
in
outsb
cld
daa
add
inc
cmp
in
sbb
jmp
call
push
call
shll
dec
jb
cltd
loope
or
xor
push
pop
jge
lea
ljmp
in
addb
mov
inc
inc
cltd
repz
push
fildl
pop
sbb
pop
adcb
ret
popf
push
cmc
mov
push
sarb
mov
cmc
xchg
add
lcall
es
cld
decl
icebp
mov
pop
mov
pop
push
call
daa
or
in
out
xlat
mov
test
mov
mov
jg
jl
ss
icebp
push
xlat
push
je
dec
jge
test
les
xchg
sub
dec
pop
pop
std
cmp
pop
lock
in
enter
and
and
sub
or
mov
fmul
push
clc
adc
nop
dec
sbb
ss
ret
push
adc
mov
or
cmpsl
cmp
out
mov
ror
insb
std
cwtl
push
mov
jg
xor
xor
jmp
cmp
popf
js
fsubs
jl
mov
andb
mov
push
jnp
push
inc
jnp
jle
sbb
fld1
outsl
mov
mov
jb
mov
add
fwait
push
rcll
inc
sarb
pop
in
insl
mov
mov
sbb
insl
jmp
flds
xchg
adc
outsl
fldenv
mov
push
mov
lods
lcall
xor
ss
mov
ljmp
sbb
push
mov
js
sub
sub
rolb
mov
inc
mov
jg
inc
push
cs
jnp
outsl
add
xchg
sub
shrl
inc
mov
add
adc
sbb
inc
push
int3
xchg
xchg
out
adc
test
jne
incl
loopne
in
mov
pop
jle
push
xor
cwtl
in
arpl
jbe
dec
mov
icebp
repnz
inc
xorl
aam
cmp
adc
cmp
decl
cmc
or
mov
cmpl
mov
pop
cmpsl
int
dec
sub
outsl
mov
fcom
call
loopne
cli
xor
pop
fdivrs
dec
lcall
jle
mov
pushf
dec
mov
add
sbbb
lock
add
addl
cld
mov
mov
js
lods
decl
jg
dec
dec
sub
push
stos
mov
int
test
jg
pushl
dec
push
or
shlb
out
xor
out
sbb
hlt
pushl
scas
lods
mov
xorb
cmpsb
ljmp
sti
call
cmc
subb
imul
and
pushl
repnz
ret
lds
mov
iret
rcrl
dec
lods
pop
dec
into
call
adc
add
orl
add
adc
cmp
mov
adc
mov
xchg
inc
cmpsl
xor
xchg
test
sahf
fwait
aas
add
pop
and
addr16
mov
addr16
cs
jecxz
daa
rcrb
dec
movsl
cmp
fiaddl
shll
add
add
or
dec
cld
lcall
int
mov
dec
mov
xchg
imul
lcall
mov
test
lcall
cli
or
cmpsl
data16
sub
jecxz
and
cld
ljmp
lea
cmc
loope
add
adc
xor
leave
push
cmpsb
or
jbe
loopne
or
sbb
adc
adc
push
ret
test
or
inc
into
pop
popa
dec
arpl
jl
xor
or
cmp
sbb
jg
jg
gs
insl
pop
sbb
or
scas
and
mov
cmp
lds
addb
je
jo
mov
cmp
lock
jg
jmp
push
and
sub
cli
mov
aam
pop
jge
jmp
sub
popaw
outsb
add
and
or
jno
rolb
xchg
xchg
das
cmc
lcall
sbb
outsl
loopne
outsl
inc
idivl
rclb
lret
cld
decl
repz
and
mov
push
fmulp
adc
xchg
pushf
out
decl
add
sbb
and
mov
mov
mov
gs
mov
pop
push
hlt
fnstenv
decl
jnp
bound
sti
jl
insb
pop
push
fldl
outsb
jl
adc
cld
lcall
push
pusha
dec
sti
repz
int
sbb
mov
mov
in
lds
incb
add
packuswb
out
inc
addl
pop
add
add
and
xchg
jg
hlt
add
xor
lahf
xchg
and
pushl
adc
fcoms
gs
je
shlb
addb
sub
jnp
call
or
mov
cmpl
xchg
aas
shrl
inc
shll
test
jae
sbb
je
sarl
notl
xchg
xor
mov
call
mov
cmovne
pushf
jecxz
push
loop
xor
jg
or
incb
fists
adc
cmpsb
mov
call
push
sbb
push
push
add
pop
in
mov
lods
out
lahf
cltd
mov
out
pop
aad
adc
add
test
ss
dec
jbe
rclb
aas
popa
daa
adc
fldcw
mov
test
lods
cwtl
aaa
shl
lcall
push
lret
sbb
pop
xor
pop
aam
ds
pop
loop
loop
test
add
inc
jmp
adc
mov
aaa
add
rcrb
adc
inc
dec
push
outsb
push
xchg
lods
jae
dec
incl
jae
mov
in
ror
cltd
push
test
jnp
and
mov
shll
inc
mov
lcall
fldcw
ret
inc
dec
mov
add
ljmp
imul
add
fmul
pusha
das
aam
adc
incl
lahf
mov
or
adc
adc
imul
push
sub
cmp
clc
jne
inc
cmp
nop
inc
das
add
aas
xor
cmp
jle
mov
hlt
lods
xor
adc
test
sub
sbb
pop
cmp
incl
mov
adc
xor
xorb
rcll
mov
lret
stos
ljmp
std
dec
fs
clc
ja
mov
in
mov
or
call
out
xchg
pop
fucomi
cltd
xor
lcall
stos
add
mov
andb
mov
incl
sbb
call
loope
cmp
xchg
fisubs
xchg
in
jmp
les
sar
outsl
fstp
dec
or
incl
mov
dec
mov
fisubrs
ljmp
push
push
pop
icebp
lret
mov
sahf
push
stos
pop
loop
jns
adc
ljmp
out
loopne
sbb
mov
and
sub
popf
mov
sbb
das
repnz
push
lcall
add
pop
mov
xor
sub
shrb
jmp
mov
outsl
hlt
pop
cli
xchg
sub
xchg
cmpsl
push
into
cmpl
pushl
mov
movsl
mov
fisubrl
cmc
xchg
repnz
mov
clc
sbb
lock
xor
insl
mov
jg
lea
ds
daa
mov
xor
mov
push
inc
mov
dec
push
fnstcw
adcb
jne
pusha
test
stos
jno
add
inc
push
call
xor
add
scas
roll
jg
pushl
and
jle
or
fsubs
sub
dec
push
mov
xor
pushf
pop
addr16
scas
mov
sahf
aad
test
ret
call
push
ds
adc
fbld
call
mov
sti
clc
aam
mov
in
sbb
lcall
popa
inc
les
push
test
xchg
push
xchg
inc
cmp
sbb
add
sub
in
jecxz
sub
xchg
pop
les
add
add
inc
imul
mov
nop
mov
nop
cmp
fidivrl
std
mov
mov
aam
inc
and
out
test
movsb
aad
loopne
call
push
les
or
jge
jb
mov
imul
or
dec
pop
pop
push
dec
xor
outsl
hlt
outsl
cmc
push
push
push
pusha
subl
xchg
hlt
or
jmp
jne
ljmp
icebp
lock
lea
push
leave
call
ficoml
incl
pop
movsb
cli
fisubl
jb
inc
adc
adc
xor
je
int3
lcall
stc
call
dec
cs
frstor
sub
mov
loop
pop
out
adc
decl
negl
add
dec
jo
xor
arpl
incb
mov
jnp
pop
ljmp
mov
sbb
xchg
cld
pusha
inc
in
xchg
aas
dec
loopne
sti
push
mov
pushl
mov
fidivrl
outsb
movsl
lahf
scas
ret
mov
fisttpl
pop
push
flds
adc
inc
pop
cmpsl
pop
out
movsb
daa
or
mov
fdivl
mov
hlt
call
in
jp
aad
lock
mov
js
ljmp
loope
test
adc
push
and
ficoml
ljmp
xorb
aad
iret
imul
repz
out
or
lea
sahf
out
push
addr16
fldt
mov
and
cld
mov
adc
leave
mov
ljmp
insb
adcb
xor
sbbb
cltd
mov
outsl
adc
roll
pop
push
push
call
pop
subb
jnp
xlat
int
into
inc
adc
das
and
adc
popf
xor
xor
mov
and
jecxz
or
fs
scas
outsl
mov
gs
pop
and
repnz
mov
movaps
jb
xor
xor
lds
mov
insl
insl
fmuls
mov
and
pop
xchg
cmp
and
pop
cmp
scas
mov
call
mov
mov
call
xor
rolb
push
notl
xchg
dec
scas
aam
mov
jmp
jg
ret
push
sub
pop
mov
ljmp
jno
push
std
push
jns
add
in
pop
icebp
call
add
xchg
lds
das
jno
adc
dec
pusha
or
ljmp
jp
mov
mulb
std
ret
mov
add
push
cmpsl
dec
pop
jmp
stos
push
add
mov
and
sub
mov
jg
cli
mov
popf
pop
nop
jge
sarb
popf
xchg
mov
data16
xchg
ljmp
jl
sub
in
ja
adc
stc
fld
ds
inc
inc
aam
inc
ljmp
dec
xchg
aad
adc
repnz
adc
test
in
dec
imul
jnp
dec
jg
push
popf
mov
mov
dec
jnp
cmp
mov
or
xchg
ljmp
cmpb
loope
sub
add
or
mov
mov
ljmp
pop
jo
movsb
mov
out
filds
mov
shlb
enter
jmp
inc
xchg
mov
pop
xor
or
push
insl
lret
mov
notl
push
xor
jo
mov
sbb
or
jb
push
or
imul
rorb
stos
popl
movsl
cs
test
jmp
push
inc
mov
cmp
mov
movsl
lods
lahf
jecxz
jns
jmp
addr16
jnp
aad
call
pop
jecxz
jno
sbb
sbb
outsl
or
in
xor
int3
mov
mov
pop
iret
xchg
mov
mov
addr16
outsb
rcrl
icebp
jg
outsb
mov
sbb
pop
test
xchg
js
fs
rep
insb
std
dec
subb
out
addb
jno
loope
add
and
decl
adc
into
mov
xchg
out
shrb
inc
fucomip
or
mov
inc
orl
xor
pop
scas
dec
push
sub
movsl
stos
pop
or
push
nop
jns
inc
pop
or
pop
out
call
pusha
inc
dec
mov
pop
xlat
mov
out
xor
push
xchg
xor
lds
pop
dec
ror
add
adc
call
test
imul
ljmp
hlt
incl
jle
push
sub
pop
test
jmp
std
aas
or
enter
incl
and
repz
out
dec
adc
shlb
push
in
sbb
jns
aas
notb
fs
mov
mov
imul
jmp
pop
cmp
adc
popa
jge
test
mov
push
jmp
shlb
dec
rcr
pop
stc
bnd
out
sbb
mov
jle
shlb
incl
ret
mov
out
fildl
xchg
mov
jg
mov
mov
cli
ljmp
add
push
and
mov
mov
cmp
lea
inc
push
jg
pop
loope
cmpsl
int3
fstpt
mov
lret
in
out
xchg
bound
int3
aas
imul
dec
dec
sub
inc
sub
cmp
jle
mov
and
dec
std
dec
insl
cltd
test
mov
loopne
loop
ljmp
pop
lahf
fldl
mov
push
push
and
xor
sub
pushl
clc
int
jne
push
outsb
cmp
or
shlb
insb
or
jns
lcall
add
cmpl
xor
out
aas
pop
pop
sub
pop
dec
mov
popa
xor
fucomip
mov
mov
mov
jnp
rcll
pop
or
mov
and
add
gs
ljmp
cld
mov
dec
sbb
loop
push
ja
mov
push
call
fildll
fidivl
mov
sub
push
dec
jbe
mov
mov
incl
push
in
push
push
in
cwtl
jmp
movsb
sub
or
psubd
incl
ret
data16
push
aaa
dec
xchg
sub
push
add
mov
pop
cmpsb
icebp
mov
inc
dec
pop
ret
mov
decw
pop
ljmp
xchg
push
mov
adc
je
loopne
pushl
cli
ljmp
das
shrl
sub
ficompl
lods
outsb
adc
and
fsub
icebp
cmp
lret
mov
lods
ds
add
pop
icebp
mov
inc
pushf
out
lock
fistpll
pop
lret
inc
push
push
or
add
ljmp
xor
mov
add
mov
inc
xchg
sbb
inc
fwait
add
mov
fdivl
push
sbb
insb
dec
push
addl
vcmpss
sti
das
icebp
incl
mov
mov
inc
sti
sub
jns
daa
cli
call
jnp
sti
inc
stos
in
sbb
adc
xchg
cmp
in
push
or
push
cmpsl
cmp
or
hlt
xor
cmp
movb
or
jnp
data16
push
scas
aaa
hlt
push
mov
fisubrs
aaa
push
cmp
push
call
xchg
ret
rcr
mov
push
push
push
fcoms
decl
and
push
fnstenv
mov
dec
add
incl
subl
pop
xor
push
ja
inc
xchg
je
mov
ret
ljmp
rorb
sbb
subb
sbb
push
ss
adc
test
cmp
adc
call
mov
mov
lods
arpl
sub
and
cmp
or
jg
sbb
es
je
outsl
mov
imul
push
sbb
decl
and
jb
push
mov
xlat
das
mov
cmp
mov
mov
mov
jg
test
das
xor
mov
notl
sub
add
aas
lahf
adc
sahf
pop
mov
iret
lods
jle
in
jg
mov
popa
or
sub
nop
es
add
inc
add
imul
outsl
jb
mov
cltd
xchg
dec
sar
pushl
ror
mov
std
push
gs
notb
imul
cld
jg
rcr
out
ja
nop
jne
mov
mov
stos
in
dec
ljmp
in
lret
and
add
test
mov
in
pop
add
jmp
call
roll
mov
fucomp
shl
mov
xchg
icebp
fmuls
out
add
in
jo
out
dec
lret
adc
loopne
adc
movsl
jnp
jae
push
pop
rep
sbb
fisubs
cmc
or
hlt
pop
imul
mov
and
sub
mov
test
test
jns
ljmp
cmc
add
mov
rcrl
inc
pusha
ret
loop
into
loopne
xchg
push
decl
pop
push
pop
fcoms
sbb
gs
adc
jg
test
sub
mov
ficoms
inc
cmp
ss
andl
mov
mov
nop
xchg
sti
mov
sub
std
pop
xor
sbb
aam
lret
pop
gs
jg
pop
repz
jp
and
jno
and
sbb
lcall
call
cmp
dec
int3
pop
aad
mov
sbb
pop
inc
pusha
idiv
mov
inc
insl
roll
xor
scas
sub
xchg
cltd
sahf
inc
jo
mov
neg
decl
outsl
dec
arpl
inc
or
cli
imul
les
cltd
xor
lcall
mov
push
mov
cmpsl
adc
aaa
decl
cwtl
pop
outsl
mov
ret
lret
jb
cli
lcall
sub
dec
cmp
icebp
mov
cmp
add
xorl
hlt
ljmp
cmp
mov
xchg
xchg
repz
dec
outsl
mov
adcb
in
outsl
cld
dec
std
mov
fmul
pusha
mov
fdivs
movsb
das
icebp
jg
stos
mov
imulb
mov
add
lret
ljmp
jo
sbb
pop
fistpll
pop
dec
pop
xor
ljmp
xchg
mov
mov
notl
insl
les
mov
xor
hlt
pop
jl
fdivl
add
in
inc
push
popa
cli
xchg
incl
fldenv
iret
mov
icebp
cmp
and
test
lock
call
xchg
and
cwtl
mov
pop
inc
pop
aaa
add
mov
lcall
cmpsl
cmp
pop
repnz
dec
push
pop
push
push
cld
popa
or
add
gs
adc
pushl
rcll
push
dec
mov
cwtl
cwtl
inc
cmp
adc
stos
xchg
orl
sbb
test
mov
shrb
pop
jge
xchg
shll
pop
hlt
das
hlt
ljmp
pop
fbld
sub
js
movsl
mov
mov
lcall
insl
or
add
sbb
ret
cmp
data16
fdiv
dec
xchg
jecxz
sbb
xchg
pop
insb
movsl
lcall
mov
dec
test
cmpsb
pop
jmp
std
fistpll
addr16
cmp
out
mov
xchg
mov
lods
decl
shrl
inc
fisttpl
popa
xchg
add
lods
xchg
rcrl
jno
xchg
ljmp
cld
in
add
dec
mov
xor
xchg
aad
xchg
std
incl
mov
jle
push
xor
mov
imul
pop
in
iret
dec
je
testl
xor
mov
cli
jnp
pop
andb
inc
movsl
mov
and
jns
pop
fmull
aam
jg
pop
loopne
in
shll
sbb
das
mov
sbb
cld
decl
cld
js
testb
push
add
sarb
bound
sahf
sahf
jge
ljmp
pop
xor
and
sbb
xchg
dec
test
pusha
pop
mov
lcall
cs
xchg
mov
mov
jp
dec
dec
and
lcall
ficoms
xor
lods
testb
dec
loope
adc
sahf
jl
pusha
pushl
insl
cmp
aad
jb
cmp
repz
std
inc
incl
inc
mov
ret
jbe
out
pop
sbb
std
loop
add
pushf
mov
mov
decb
lock
jmp
xor
in
push
idiv
push
jge
jmp
sti
mov
mov
cmp
pop
mov
insl
jecxz
movsw
fcmovne
iret
mov
dec
add
inc
insl
in
jae
int3
push
movsl
ljmp
or
jl
sub
enter
lods
xchg
sahf
arpl
cmp
ljmp
loop
and
ss
or
mov
mov
or
pop
sub
mov
lods
push
sti
popf
out
push
cmp
mov
jo
lret
bound
stc
xchg
sub
push
jae
mov
mov
inc
mov
and
mov
sub
cli
push
jmp
nop
pop
fwait
inc
jb
dec
add
xchg
andps
mov
movsl
ljmp
loop
cmpb
fnstsw
call
push
arpl
inc
mov
and
rcrb
in
out
mov
bound
add
jnp,pt
loopne
repnz
loope
sub
jg
fisubs
iret
sbb
push
xchg
shlb
aaa
in
inc
sub
sbb
mov
lret
mov
test
pop
inc
in
js
add
pop
out
ss
xchg
std
jle
aam
cltd
pop
pushl
les
mov
adc
sub
enter
xlat
clc
jge
adc
gs
dec
std
fcom
sub
enter
in
test
lea
sub
sub
daa
push
cli
mov
incl
xor
adc
je
mov
pop
or
insl
push
push
loope
cld
jg
lcall
clc
adcl
iret
mov
push
fcompl
decl
mov
mov
xchg
into
loop
mov
aas
dec
aaa
push
les
popf
mov
mov
pusha
and
and
dec
popf
popf
lahf
jp
sub
stc
lcall
fnstsw
jmp
add
in
sbb
xchg
xor
jnp
stc
call
incb
filds
call
jl
adc
add
and
stos
cwtl
sub
adc
fcoms
mov
push
mov
mov
dec
dec
mov
addr16
inc
jmp
mov
mov
mov
loopne
lcall
mov
das
add
lea
repz
mov
sbb
scas
add
pushl
mov
mov
adc
add
or
push
fdivrl
xchg
pop
mov
sahf
ss
inc
mov
lcall
mov
adc
pop
push
clc
pop
add
daa
es
cmp
pushl
test
mov
pop
sub
cmp
jmp
cwtl
pushf
jg
jp
test
xchg
pop
jns
in
adc
jg
sbb
pop
ljmp
sub
and
xchg
shll
xchg
or
mov
out
lret
rcr
out
in
stc
mov
xor
or
icebp
mov
cmc
aam
jp
mov
jmp
aaa
fmuls
pushl
arpl
fwait
jno
rcll
hlt
mov
inc
lret
iret
mov
sbb
push
dec
imulb
and
fisubrs
cmp
mov
je
lret
jmp
dec
sub
in
or
into
and
lret
repnz
clc
das
mov
ds
add
dec
and
incl
push
xor
into
lcall
cmp
pop
imul
ja
push
fildll
inc
clc
fisubrl
ret
sbb
hlt
adc
cli
sub
sbb
and
icebp
dec
lret
ljmp
lgs
inc
sar
lcall
inc
vpaddq
adc
das
mov
iret
add
fisttpll
rcr
inc
rol
jle
sub
pushf
leave
mov
push
ret
subl
pushf
xchg
enter
dec
inc
int
mov
push
pushl
mov
and
pop
bound
stc
push
jge
bound
das
sbb
jg
sub
lahf
inc
aaa
adc
pop
iret
test
jnp
scas
imul
push
jno
aas
pop
pop
addr16
sub
inc
insb
rol
jnp
xlat
paddd
ret
and
xlat
pop
aaa
adc
imul
push
imul
add
mov
rcr
lock
or
sti
cmp
sub
cmp
xchg
hlt
jg
mov
add
fucom
mov
lods
lcall
decl
or
sub
sub
shl
mov
das
loope
std
fwait
icebp
fildll
push
push
in
fstl
ss
and
ljmp
sub
and
fwait
dec
test
mov
hlt
jo
fwait
xchg
call
xchg
pushl
int
cld
jmp
ds
add
or
ret
lret
xchg
orb
lcall
lret
pop
cmp
fisttps
xchg
add
xchg
incl
popf
clc
cs
repz
dec
aas
push
adc
daa
loope
pop
cmpsb
inc
adc
ret
shlb
jecxz
rdpmc
inc
jecxz
popf
cmp
lret
movb
mov
xor
mov
push
or
lret
mov
mov
add
inc
lea
clc
aam
cld
push
xchg
cmp
mov
or
cld
ret
xchg
sbb
mov
mov
push
mov
repz
incl
pop
xchg
outsb
int3
jle
pop
add
imul
mov
repnz
cld
call
jp
inc
jae
xor
mov
inc
mov
leave
and
fnstsw
or
sbb
std
push
mov
push
dec
fbld
mov
sarl
cmp
xor
test
icebp
lcall
lcall
fs
dec
sbb
lret
sbb
std
pushf
add
dec
fistpll
call
xchg
dec
push
mov
jg
les
dec
imul
lcall
lcall
mov
push
xor
xchg
bound
stos
das
pop
and
pop
jns
cmp
test
call
and
cmp
xchg
fs
popf
mov
rol
push
aas
in
js
mov
mov
push
incl
rclb
add
sub
sti
movl
jmp
repnz
imul
dec
mov
notb
out
stos
cli
lea
aam
push
repz
fcoml
out
scas
ja
xchg
pushl
popf
icebp
cmp
loop
xor
into
jg
popf
push
out
ljmp
rcrb
fwait
notl
addr16
cmp
cmpsl
push
cmp
sub
sar
ljmp
sbb
mov
add
test
test
outsb
popa
push
hlt
dec
fiadds
outsl
xchg
sbb
lcall
jnp
mov
inc
les
xlat
lcall
cli
add
mov
or
mov
inc
adc
jno
push
cmpb
sub
add
mov
sarb
inc
call
jmp
sti
cmpsl
and
mov
jnp
mov
push
int
addl
or
cmp
fisubrl
adc
scas
sti
pop
or
jg
dec
xchg
and
or
jle
mov
jg
es
pushl
ficoms
dec
mov
mov
xor
add
pop
mov
and
ret
xchg
xchg
sub
notb
int3
ds
icebp
sub
jne
mov
push
xor
ljmp
mov
jle
popa
or
adc
sbb
and
out
jmp
loope
xor
sub
les
insl
cld
mov
scas
cmp
mov
dec
sbb
ljmp
jb
sub
das
or
inc
push
xor
jns
push
push
ficompl
ljmp
cmpsl
lcall
jmp
test
cs
cmc
roll
xchg
sbb
call
filds
mov
imul
mov
jo
jmp
mov
or
mov
push
xor
add
or
xchg
les
pop
std
popf
loop
jl
and
fidivs
mov
inc
scas
xor
or
ficomps
mov
jmp
xchg
and
mov
or
cmp
sysenter
outsb
jge
sbb
aas
cmpsl
movsl
pop
sbb
dec
adc
jno
pop
jo
jl
mov
jmp
dec
inc
sub
lods
fists
mov
xchg
adc
sbb
out
mov
push
stos
in
aaa
push
lods
jmp
lcall
mov
sub
call
xchg
mov
push
or
sarb
jne
call
push
incl
inc
mov
pop
sarl
and
cmp
xchg
and
std
popf
lods
popf
lea
cmp
into
fwait
ds
mov
inc
jg
cmp
shlb
shlb
sarb
je
adc
decl
cmpsl
adc
lods
pop
xchg
rcrb
in
xor
jnp
pop
call
pop
adc
xchg
orb
xor
pushf
lcall
cld
inc
jne
mov
mov
jl
loopne
dec
test
sbb
gs
jns
insl
cmp
adc
incl
adc
sti
or
inc
mov
and
sbb
loop
lcall
xchg
jecxz
pop
fidivl
fildll
daa
fsts
and
pushl
push
xchg
std
in
and
dec
lods
xor
inc
mov
test
jle
out
insb
sbb
push
roll
cltd
ljmp
lods
sbb
pop
or
mov
or
mov
aaa
decl
mov
xchg
jae
mov
inc
mov
loop
mov
insl
jb
pop
cmc
push
outsb
outsb
cmpsb
jg
dec
sub
jbe
add
xor
mov
or
cs
imul
daa
cmp
loop
ret
sbb
cmp
data16
adc
test
fdivrs
jg
les
dec
pop
bound
adc
dec
push
mov
decl
pop
pushf
sub
in
pop
cmp
pop
ja
mov
or
cli
jg
sbb
push
inc
fs
ret
pushf
stc
dec
lcall
pushl
jne
stos
xchg
repz
push
shlb
inc
inc
mov
lcall
ret
clc
psrlw
xor
sti
push
jl
pop
jg
cmp
jns
adc
sar
cmpsb
add
dec
adc
dec
outsb
stc
out
adc
inc
enter
mov
sub
fs
repnz
pop
in
push
orl
lahf
addr16
cltd
or
rclb
add
sahf
cld
imul
test
inc
lret
aam
movsb
repz
leave
dec
xlat
mov
push
gs
pushf
adc
iret
sbb
push
xchg
decl
push
push
mov
incl
insl
sbb
sub
inc
in
jecxz
cmp
sub
add
test
jmp
fadd
lods
mov
push
aaa
and
mov
xchg
in
push
cmp
xchg
jle
pop
cmpsl
cmc
lock
mov
gs
shrl
mov
repz
das
xchg
out
sbb
orb
jne
cmp
insl
push
pop
fadd
loop
icebp
inc
out
inc
sub
sahf
repz
xor
dec
addr16
lcall
sub
push
clc
mov
insl
sub
adc
lock
movb
cmp
sub
inc
adc
cs
jmp
out
pop
and
aad
cltd
push
sbb
xchg
jg
jmp
push
pushf
pop
ljmp
cld
in
shl
adcl
cli
fsubr
outsl
mov
psrad
cmp
pop
rorb
xchg
clc
adc
lds
int3
mov
pusha
das
push
push
xchg
cli
test
adc
cmp
jle
ljmp
stos
pop
or
inc
shrb
sahf
and
pusha
call
test
aad
pop
and
call
push
ljmp
and
fldt
cld
jnp
mov
jae
lret
pop
pop
cli
jmp
xchg
jp
mov
inc
jmp
repz
mov
mov
incl
ds
dec
arpl
in
ret
mov
cmp
xor
das
test
xor
mov
mul
js
xor
ljmp
xor
jge
mov
fidivrl
and
roll
test
mov
fidivrs
enter
ret
lock
cltd
test
pop
decl
mov
test
or
fcoms
cmc
inc
ret
leave
inc
fwait
lcall
and
sub
lcall
out
jae
loopne
xchg
sbb
sub
ljmp
in
lock
das
mov
rorl
inc
test
lea
jg
mov
in
pop
xchg
sahf
cmp
xor
mov
lock
sar
jmp
cld
lret
shrb
add
mov
jecxz
mov
mov
stos
out
stos
dec
adcl
jle
in
push
fcompl
push
cmp
xchg
clc
jmp
das
rclb
dec
ret
xchg
xor
std
repz
dec
ja
lods
mov
push
fadds
cmp
jge
xchg
inc
in
jl
dec
inc
cli
mov
sub
stc
mov
call
jb
push
adc
dec
push
inc
sbb
sbb
int3
daa
and
test
fwait
popw
repnz
iret
out
or
mov
mov
arpl
outsb
bound
in
add
add
mov
cs
xchg
loopne
dec
fucomp
mov
cli
jmp
xlat
rcr
clc
jecxz
test
mov
orb
out
push
xchg
push
pop
sub
hlt
xchg
pop
ljmp
scas
mov
daa
cli
push
sub
pop
call
decl
mov
inc
in
sti
setno
push
pop
flds
jl
xchg
cmpsl
or
push
pop
sbb
lcall
or
pause
insl
cmpsl
js
cmp
int3
mov
sar
sar
pop
dec
bound
imul
in
out
jo
pop
pxor
aas
sub
insb
and
mov
sub
jecxz
mov
mov
dec
clc
cmpsl
jmp
imul
and
jo
popf
add
xor
adc
or
iret
ss
jb
inc
outsl
add
mov
lahf
push
and
add
lret
add
das
add
fbstp
outsl
fdivrl
fstps
xchg
xor
in
lods
hlt
lock
mov
sbb
mov
and
outsl
stos
ss
pop
and
sub
std
mov
sbb
lcall
or
pop
jnp
les
test
and
jmp
cltd
fstps
mov
adc
adc
and
pop
test
push
incl
lods
bound
sub
adc
les
inc
ds
cli
mov
lea
sbb
stos
mov
pop
bound
xchg
lods
es
mov
xchg
or
push
push
and
aam
jbe
mov
jbe
add
decl
std
xchg
mov
ss
mov
int3
cmp
outsb
add
xor
jmp
or
add
test
sbbb
push
pop
sub
out
movsl
or
pop
mov
scas
mov
lahf
fldl
xor
adc
ljmp
push
les
and
jno
pop
outsb
jg
call
loop
or
cld
idiv
arpl
and
pop
aam
xchg
add
call
scas
incb
rcl
mov
fldcw
add
push
pop
jecxz
pop
sub
sub
adc
adc
and
rcl
pop
dec
inc
mov
mov
lahf
xor
mov
sub
add
leave
pop
push
pop
test
lcall
sub
inc
sub
fsubrl
data16
out
in
jns
mov
pushl
pop
xor
hlt
stos
xchg
ret
cmp
cmp
xorl
cli
enter
sar
incl
fdivrs
out
mov
ficompl
inc
pop
or
inc
scas
jns
cmc
lcall
iret
js
jbe
faddp
jge
and
jmp
xor
cli
ljmp
pop
fnsave
adc
lret
mov
jge
lcall
movsl
les
daa
gs
insl
aam
pop
sbb
das
lock
data16
or
push
ja
cmp
pop
mov
xor
loope
jg
dec
push
and
and
cwtl
sub
fwait
push
and
pushl
mov
push
rolb
xchg
mov
ljmp
mov
pop
mov
in
loope
aam
xchg
test
cmp
mov
fnstenv
loope
pop
fadds
jns
nop
inc
push
frstor
clc
fucomip
sbbl
mov
lds
das
jno
ret
push
mov
jb
sub
dec
rcrl
push
push
orb
decb
sti
jne
add
sbb
dec
or
mov
sbb
and
jmp
and
sub
push
sbb
mov
mov
pop
sti
pop
cmpsl
xchg
sti
jb
push
pop
pop
jb
dec
std
std
xchg
or
loop
mov
imul
clc
decl
adc
xlat
ficoml
push
rcrb
jbe
je
decl
jmp
mov
inc
add
or
daa
dec
inc
pop
sub
lea
mov
decl
lcall
pop
fiadds
mov
clc
call
pop
xor
mov
jecxz
int3
xchg
cmpsb
jg
adc
or
in
mov
imul
movsb
pop
mov
faddl
pop
repz
clc
je
enter
cmc
mov
sub
fucomip
mov
shll
fnstcw
mov
jmp
sbb
lcall
jmp
sbb
pavgw
notb
popf
mov
fcoml
jmp
inc
pop
in
add
dec
ror
mov
mov
aam
sub
shrl
xor
mov
jmp
inc
ds
xor
cld
test
inc
imul
pop
ljmp
icebp
mov
imul
push
dec
shl
aam
jg
lods
inc
aad
or
sbb
jbe
fdivs
jnp
cmp
outsl
dec
imul
pusha
jle
and
or
stos
lea
int
push
jae
mov
push
mov
and
decl
insl
cmc
cmp
orl
insb
aas
das
cmc
jge
or
inc
out
fsubl
push
outsb
adc
loop
dec
or
repnz
or
sub
popf
mov
loop
mov
popa
pusha
out
xor
lahf
fisttps
movsl
lods
inc
xchg
rcrl
mov
rolb
sti
mov
enter
jae
cmp
insl
mov
mov
jecxz
jp
fstps
xchg
jbe
das
clc
loopne
jg
or
sub
cltd
lret
sbb
pop
loop
ss
pop
ss
dec
pop
dec
cmp
push
add
xchg
pop
xor
mov
adc
leave
je
jg
mov
jmp
int
and
sahf
mov
mov
pop
fisttps
sbb
ljmp
cld
popf
mov
mov
stos
sahf
or
xor
mov
fldz
adc
cld
decl
ficoml
stc
or
pop
or
or
pop
mov
or
cmp
ficoml
ljmp
mov
mov
addr16
lds
pop
icebp
xchg
mov
mov
pushf
adc
push
hlt
pop
and
mov
jmp
loop
dec
call
ret
insb
movsl
pop
mov
sahf
mov
fisubs
cwtl
jbe
test
or
sub
ret
cld
stos
call
push
test
mov
xchg
lods
dec
lret
inc
mov
sti
cmp
test
pop
inc
mov
filds
mov
or
lds
cmpsb
pusha
push
pop
add
mov
outsb
lret
mov
xchg
cmp
pop
ljmp
hlt
fbstp
test
jge
mov
sub
imul
incl
mov
mov
test
fs
icebp
stc
xor
loopne
out
pusha
movsb
sbbl
imul
jecxz
loope
adc
mov
mov
decb
push
das
jge
incl
add
gs
test
incl
incl
outsl
pop
pop
dec
push
imul
sahf
dec
xor
mov
sub
repz
cmp
lcall
push
pop
daa
inc
mov
jb
iret
in
lret
cmp
adc
pop
mov
gs
sub
aaa
and
mov
test
pop
adc
jg
call
xor
fwait
and
lcall
push
mov
mov
sbb
ret
or
rcrb
cld
jecxz
repnz
jmp
ror
sub
inc
xchg
pop
insl
mov
fmuls
sarb
clc
xchg
mov
adc
andb
mov
aad
adc
arpl
pop
cmp
xor
ljmp
outsl
cmp
cmp
in
jno
bound
dec
les
je
dec
ljmp
lock
in
arpl
mov
adc
jge
dec
mov
in
imul
test
mov
stos
mov
cmp
jbe
int
in
xchg
dec
adc
mov
fs
mov
dec
cs
pop
cmp
push
mov
xor
cmp
shrb
lcall
sbb
push
inc
movsl
pushf
xchg
repnz
fldt
sbb
mov
sbb
js
cs
repz
call
sbb
les
in
mov
bound
pop
cli
movsb
ficoms
push
mov
outsb
mov
lcall
popf
fwait
add
pop
dec
inc
add
cmc
and
sbb
addb
in
jbe
call
push
push
or
mov
data16
add
movsl
pop
popf
dec
out
subb
jmp
inc
pop
xor
push
jns
sub
lret
jle
mov
incl
inc
movsb
jle
inc
les
mov
lods
push
push
decl
std
push
loopne
and
cmc
xchg
testb
ljmp
adc
push
movb
aas
aaa
jno
push
dec
or
call
data16
mov
xchg
mov
or
test
xchg
and
jmp
jns
icebp
sbbl
out
and
cmpsb
mov
adc
jbe
mov
js
lcall
mov
mov
dec
or
cmp
adc
adc
jno
lds
jne
clc
jg
dec
sti
aad
and
mov
pop
cli
lcall
xor
pusha
and
arpl
adc
push
pushl
insl
into
cmpsl
jae
jp
out
sub
lock
shrb
and
cmp
mov
cmc
pushf
sbb
jg
nop
decb
lret
rorl
fdivrp
mov
arpl
mov
xor
inc
scas
or
lods
mov
mov
scas
add
stc
mov
hlt
pusha
rolb
lea
cmp
mov
jne
test
ljmp
ror
mov
pusha
test
mov
mov
cmpsl
stc
das
inc
jg
jno
pusha
push
dec
sbbb
iret
lret
jg
inc
scas
leave
add
icebp
lcall
xchg
sbbl
pop
data16
xchg
nop
cmp
jg
das
cmc
pushl
inc
sub
or
and
lods
daa
cmp
mov
jmp
push
scas
mull
adc
jl
dec
sub
pop
dec
aas
es
mov
rorb
stos
xchg
fs
and
pushl
mov
scas
cmpsb
lret
and
cld
test
divb
ja
outsl
add
jmp
aaa
pop
rcll
adc
jnp
mov
mov
xor
out
xor
imul
xor
add
decl
inc
and
mov
sarl
in
jbe
pop
ja
ret
lcall
xchg
push
cmpsb
gs
jg
gs
pushf
and
mov
inc
push
incl
lcall
in
js
mov
adc
jl
repz
xchg
mov
pushl
popf
enter
das
scas
rcrb
pop
hlt
int
mov
add
or
and
sub
lds
jnp
inc
pop
ljmp
mull
pop
fldl
cmp
push
std
and
ljmp
shrb
pusha
mov
dec
sub
sub
cmc
jne
sbb
adc
or
push
push
push
mov
addl
repz
fmul
sar
jmp
stos
test
inc
lock
jmp
sbb
cmpb
mov
aaa
push
mov
ret
loopne
lcall
jno
jmp
push
cmc
jnp
xor
fdivl
cltd
pop
dec
and
mov
and
popa
pop
xor
aad
pushl
or
loop
ror
adc
add
lock
ljmp
hlt
sub
xchg
fiadds
mov
xor
mov
dec
pushl
pop
stc
and
add
ljmp
fcompp
cli
and
dec
push
pop
js
incl
enter
fs
pop
rol
push
and
jnp
mov
and
push
incl
cs
add
lock
fmulp
hlt
adc
and
inc
aaa
and
sub
mov
test
jg
int3
xor
pushf
push
pop
push
outsl
cmp
fs
imul
pop
cld
jmp
xlat
sahf
repz
leave
sub
push
iret
mov
xchg
jno
push
iret
adc
mov
inc
push
scas
mov
out
mov
ss
pop
mov
call
mov
daa
pushf
adc
mov
cs
rcll
clc
xchg
jge
push
stos
pop
mov
mov
jmp
out
in
js
or
sbb
inc
xchg
or
negl
pop
addb
dec
xchg
imul
insb
fucomip
pop
cs
jb
stos
dec
fisttpll
int
mov
call
push
xchg
push
pop
jg
incl
mov
fs
xor
nop
jp
sbb
loopne
mov
pop
push
notl
es
out
add
subb
decl
add
sti
pop
in
lock
push
mov
pop
leave
lahf
fisttps
std
add
loopne
mov
mov
push
insb
ret
out
sub
ljmp
jmp
aas
mov
jg
add
sub
outsl
fisubrl
mov
jg
mov
mov
mov
sbb
mov
or
jg
xchg
adc
push
rolb
rolb
cmpsb
aam
stc
mov
jns
incl
xor
inc
aam
cmpsl
inc
pushf
mov
fisubrs
mov
clc
in
out
push
test
stos
fldl
rcr
sbb
inc
or
push
pop
clc
pushl
adc
popa
xor
jge
in
adc
lods
mov
or
ss
mov
cmpsb
je
sti
xchg
jb
out
lods
mov
adc
aaa
movsb
das
mov
mov
and
outsl
pop
stos
mov
pop
mov
lea
inc
ljmp
lcall
icebp
mov
fdiv
or
addr16
or
gs
xchg
push
sub
inc
mov
popf
pop
push
jns
aad
mov
sbb
mov
mov
call
out
in
iret
or
pop
or
lds
imul
fcomi
arpl
xchg
lcall
push
jmp
push
addr16
adc
lahf
test
xor
incl
push
pop
xchg
mov
mov
scas
fiaddl
cmpsb
pop
jae
mov
inc
mov
cmc
push
popa
popa
dec
push
in
rcl
loop
jge
int
sub
dec
pop
adc
popw
pop
inc
fnstenv
fs
mov
push
add
arpl
add
imul
call
out
je
mov
dec
xchg
jg
push
sbb
outsb
xchg
rcll
pop
mov
lds
rcl
movsl
inc
push
pop
sar
jmp
loopne
outsb
mov
rol
cmp
push
out
or
repnz
mov
pop
in
ljmp
ja
stc
pusha
sbbb
lret
sub
push
sub
enter
xor
mov
sub
bound
mov
cld
call
and
xor
aaa
push
cld
lods
or
or
cld
hlt
xchg
mov
call
adc
ja
cmpsl
and
dec
ret
jae
dec
cmpsl
mov
fmuls
lock
mov
cmp
arpl
outsl
and
or
pop
pop
adc
sub
cwtl
mov
imul
rorb
dec
jae
jp
pusha
adcl
ljmp
cs
mov
cmp
and
or
jo
movsl
stc
dec
mov
push
andl
mov
mov
adc
lret
xor
ljmp
xor
mov
jge
or
scas
dec
inc
xchg
incl
incl
ljmp
sarl
les
add
aas
mov
imull
out
into
inc
out
shll
or
nop
clc
inc
shrl
jns
lret
mov
incl
aas
xchg
and
xor
cmpsl
cs
hlt
dec
mov
and
ljmp
fdiv
lds
rcrl
outsl
pop
bound
out
sahf
and
testb
inc
adc
or
push
scas
sbb
roll
xor
xchg
and
ljmp
pop
jns
add
jl
inc
or
hlt
incl
insb
and
and
push
std
test
aaa
mov
mov
ja
call
push
nop
mov
cli
cmp
jmp
inc
or
sbb
lods
xor
jecxz
mov
inc
int3
ja
mov
inc
cmp
ljmp
stos
out
pop
jl
ret
pop
fcmovnu
push
xchg
or
and
xchg
pop
call
add
push
out
daa
flds
movsb
test
xor
lcall
xor
enter
sbb
js
sub
add
adc
in
scas
ret
in
ljmp
ds
sti
stc
mov
add
xchg
xorb
xor
jg
test
jno
pop
mov
cwtl
xor
push
mov
jmp
push
xor
jl
cltd
loopne
push
lret
movsl
jg
flds
jne
pop
jbe
out
fisttpll
or
mov
pop
call
sub
jnp
stos
ret
ss
mov
pop
call
call
dec
mov
mov
pop
and
out
decl
fadd
cmpsl
pop
gs
push
pop
xchg
movsl
test
or
pop
adc
xchg
and
jb
dec
test
jge
mov
and
lock
add
mov
and
ror
jecxz
xchg
gs
pop
loop
sub
push
lea
lock
ljmp
and
iret
sbb
jle
fcoms
int
bound
dec
lods
sub
loopne
movsl
incb
inc
mov
jb
mov
jns
imulb
pop
cmc
call
in
push
gs
jnp
cmpsl
sub
sbb
outsl
std
inc
adc
scas
mov
push
das
cmc
mov
outsl
scas
es
and
dec
ds
mov
adc
ret
and
ljmp
xor
sub
iret
sar
sbb
div
data16
mov
lea
pop
mov
jge
ja
mov
shr
xchg
stos
fs
push
cmp
in
outsb
mov
mov
mov
stos
fwait
test
sub
das
mov
ljmp
scas
ret
lahf
movsb
pop
stc
sub
and
xor
pop
cmp
lods
pop
scas
sahf
pop
lds
fisubrs
or
mov
inc
jp
incl
cltd
jp
mov
not
imul
movsl
cmp
into
dec
jne
add
jmp
cmc
test
stos
push
and
mov
adc
mov
rorb
out
movsl
dec
fstl
out
and
mov
adc
or
xchg
inc
ret
rol
test
scas
adc
in
push
out
mov
push
push
adc
dec
jnp
cmp
rorl
std
pop
pop
outsl
aas
insb
stos
dec
scas
rorl
test
loope
jbe
cs
fiadds
sbb
arpl
mov
gs
or
mov
fdivrl
test
lock
js
push
inc
mov
mov
js
inc
jp
dec
incb
push
sbb
add
push
inc
ljmp
cmp
ljmp
push
mov
push
jecxz
rorb
fs
mov
fnsave
push
jecxz
in
int3
xchg
scas
dec
dec
or
pop
pop
and
std
incl
xchg
sub
pop
push
loope
rcll
out
lret
xchg
adc
sbb
ljmp
cmc
pushl
jecxz
into
aad
or
sarb
inc
mov
sti
jmp
mov
push
inc
push
jno
pop
or
xor
call
int
sub
mov
pop
ret
and
cs
mov
dec
sbb
outsl
lock
lea
popa
pop
in
inc
push
mov
aam
imul
mov
sbb
cmpsl
mov
insl
adc
test
cmpsl
jns
inc
int
dec
aas
add
lcall
shlb
xchg
inc
mov
mov
adc
pop
fadd
cmpsl
jmp
xor
inc
or
outsl
bound
push
fwait
cmp
ljmp
lea
out
push
or
and
xchg
popf
lcall
jmp
test
aad
fldcw
stos
bound
xchg
sahf
pop
out
inc
jle
aaa
cli
ljmp
push
cmp
lcall
push
inc
xacquire
incl
mov
push
xchg
xor
cmp
stos
mov
lcall
mov
pop
xchg
mov
push
xor
cmpsl
mov
push
push
cmp
shlb
or
aad
cmovns
cmp
ficoms
push
xor
inc
sti
lahf
imul
pushl
fisubl
mov
and
scas
jbe
jecxz
push
es
or
adc
dec
push
dec
inc
add
xchg
sbb
insl
ret
cltd
sbb
inc
jle
repz
jmp
jo
jne
repz
aas
mov
rorl
jae
dec
xchg
pop
inc
aam
jl
mov
incl
je
gs
hlt
out
in
cmp
inc
pushf
dec
cmp
lcall
mov
incl
xchg
push
out
sub
add
mov
dec
mov
jle
push
cmp
repz
decl
popa
and
lds
pushl
outsl
popa
loop
outsb
pop
out
ss
and
pushf
loop
cmpsb
jg
ljmp
xchg
xlat
stc
imul
cmp
ljmp
sbb
pop
sub
leave
fwait
pushf
add
rcrl
and
fs
clc
lret
test
in
popa
arpl
sti
out
in
outsb
sbb
sbb
adc
mov
jg
adc
nop
arpl
aaa
test
xchg
mov
add
es
lcall
mov
adcl
ja
dec
pop
push
sbb
xchg
push
inc
jns
cmp
decl
mov
inc
adc
into
xchg
sahf
xor
lock
call
mov
xor
popa
scas
mov
pop
push
pop
xchg
mov
sbb
into
sub
aaa
clc
insb
push
pop
inc
mov
jno
push
pusha
outsb
scas
add
call
mov
xor
adc
jmp
xchg
fucom
in
ljmp
sti
jbe
jp
scas
sbb
dec
cmp
test
je
ss
sub
cmc
addl
inc
jmp
mov
divb
or
sub
loopne
das
hlt
jg
mov
lret
xchg
std
push
or
or
imul
pushl
sub
sub
mov
ss
cmc
sub
inc
cmp
dec
or
imul
mov
jmp
in
adc
shr
cld
jmp
mov
enter
sub
loope
outsb
ja
and
add
dec
mov
sarl
jmp
mov
sti
lcall
jbe
mull
pop
jl,pt
fsubrp
xor
ja
call
push
mov
xor
mov
idivb
mov
js
push
xchg
mov
int3
xchg
lahf
in
xor
jmp
data16
jne
mov
daa
hlt
test
mov
dec
adc
xor
test
sti
push
or
pop
lods
sbb
frstor
ljmp
and
sbb
pop
lea
jl
rcrl
repnz
filds
inc
mov
bound
pop
std
fcomip
ds
gs
cmp
shll
sub
clc
lcall
out
dec
jno
bound
bound
aas
in
repz
lcall
in
sahf
dec
or
jne
mov
mov
mov
jns
add
mov
inc
jmp
jbe
mov
imul
sub
lods
rolb
jno
jmp
xchg
push
js
adc
add
test
loopne
lret
mov
dec
adc
push
cld
xchg
push
add
mov
lock
mov
call
push
fdivrl
icebp
sbb
or
out
incl
cmp
pop
pop
popa
stc
leave
inc
pop
sub
adc
shrb
enter
mov
outsl
cld
sbb
xchg
bound
decb
adcb
cmpsl
cmp
stos
sub
cmc
mov
les
lahf
sti
adc
mov
mov
aad
jmp
mov
idiv
out
hlt
xchg
movl
cmp
cmpsl
add
mov
cmp
pop
ss
aam
cmpsl
loop
dec
pop
dec
xchg
xchg
clc
incl
xchg
mov
pop
xchg
pop
clc
pop
jp
lock
mov
shlb
pushl
bound
inc
iret
pop
test
mov
push
mov
adc
outsl
jo
xchg
dec
hlt
pop
pop
pop
scas
in
sub
dec
rcl
mov
imul
movsl
push
into
xchg
decl
call
cmp
loop
insl
pop
fwait
and
xorl
pop
sub
push
xchg
dec
push
ljmp
push
out
sbb
inc
out
lahf
adc
jne
adc
pop
cld
push
xchg
popa
sub
mov
cwtl
push
mov
je
cmp
test
sbb
cmp
mov
cwtl
inc
hlt
movsl
fisttpl
mov
dec
and
icebp
cli
and
lret
pop
in
inc
ret
mov
shrb
fucomip
fwait
jb
mov
adc
jge
add
inc
fisttps
sahf
cmp
xor
mov
jbe
push
mov
or
aam
inc
jno
xchg
pop
ljmp
test
mov
or
dec
out
mov
fisubrs
pop
call
inc
stos
sbb
testb
jecxz
mov
aaa
sub
call
arpl
cmp
pop
sub
or
add
call
ljmp
inc
cld
dec
es
xor
stos
dec
arpl
push
mov
idivb
pop
repnz
pop
imul
jmp
jb
ljmp
fistps
shrb
or
es
loopne
pop
insl
ss
push
xor
fucom
stos
arpl
fildl
mov
add
adc
or
cli
inc
test
dec
stos
xor
inc
push
add
int3
test
cld
movsl
mov
add
push
les
pop
cli
dec
cld
pop
or
dec
push
test
enter
pop
jno
mov
mov
xchg
sar
cli
ljmp
jmp
or
shrl
pop
add
fisubs
fwait
das
das
sub
sub
cmpsb
movsl
inc
movsb
sub
fcoms
sub
loop
cltd
push
push
jecxz
mov
orb
mov
fidivrs
sbb
jae
call
loope
int3
iret
mov
cltd
mov
push
rcrl
aaa
push
push
incl
dec
std
in
xchg
daa
push
repz
enter
push
test
mov
scas
das
jle
lahf
lahf
mov
pop
cmpsb
movsl
outsb
std
call
mov
add
shl
pop
xor
dec
fwait
popa
ror
cmp
dec
std
movsl
xchg
dec
sub
add
sbb
lahf
xchg
sub
xchg
ret
incl
lea
jle
in
or
es
icebp
xor
ds
mov
mov
imul
lcall
sbb
lods
dec
mov
or
lahf
pop
das
int3
mov
sbb
call
pushl
arpl
nop
ljmp
mov
dec
jnp
mov
cwtl
daa
xchg
repz
call
mov
jg
jl
xor
dec
xor
in
nop
subl
cmpsb
int3
movsl
mov
outsl
pusha
rcrl
add
fwait
pusha
pop
push
ficompl
xchg
mov
cld
push
cmp
incl
adc
lahf
dec
call
xor
iret
xor
dec
icebp
xor
inc
jg
test
add
fidivl
adc
pop
or
inc
dec
add
mov
jge
int3
cmp
push
loopne
stos
push
cmpsl
xor
int3
jmp
pushl
sbb
mov
jecxz
outsl
rcrb
dec
ds
jmp
loop
fldl
inc
mov
insl
loopne
cmpsb
sbb
jle
fbstp
push
inc
mov
and
fnsave
mov
cmpsb
mov
push
mov
xorb
ss
ror
dec
ret
xchg
cmp
mov
jg
mov
mov
ss
push
repnz
les
sar
ja
scas
call
cli
call
lahf
or
cli
scas
inc
cmp
lcall
jecxz
cmp
mov
inc
adc
test
popf
inc
ret
inc
mov
in
inc
fwait
sub
push
jns
gs
pushl
sub
mov
aas
inc
movsb
mov
pop
call
addb
xchg
xor
mov
fcoml
out
adc
aad
inc
adc
cmp
int
dec
lds
dec
push
iret
dec
stos
mov
jns
adc
jg
aaa
unpckhps
test
xor
shrb
cmp
hlt
lock
hlt
outsl
hlt
xchg
lret
or
sbb
fmuls
fldenv
xor
xlat
adc
lea
lret
lods
jg
cwtl
mov
and
mov
pop
dec
sub
dec
insl
pop
jg
call
push
sarb
inc
xchg
into
mov
mov
jmp
mov
test
into
test
out
rcrl
push
rcl
neg
jmp
jg
decl
mov
out
lds
repz
pop
jne
mov
gs
xchg
adc
inc
mov
sub
es
loop
sub
nop
rcrl
addr16
cmp
mov
lcall
jo
sub
daa
flds
out
lods
jne
and
sub
shlb
mov
xchg
mov
call
pop
jmp
sub
xlat
ficomps
and
ficoms
shll
outsb
push
pop
xor
cmc
jg
fsubrl
add
xchg
test
lahf
sub
mov
pop
cli
outsl
js
inc
dec
sbb
rcl
sbb
jns
ds
into
rcrl
incl
jle
push
and
adc
popa
repz
mov
into
mov
ss
shlb
incl
shrb
pop
lods
mov
cli
jp
dec
adc
mov
push
inc
movsb
ljmp
and
jnp
mov
punpckhbw
lcall
inc
xlat
bswap
dec
pop
popa
adc
xchg
jb
call
mov
sbb
mov
inc
cmp
push
sub
pop
sbb
incl
cmp
jne
and
push
jne
xchg
cld
cmp
dec
pop
outsb
xor
mov
out
aas
pop
stos
dec
pop
push
jl
sar
aad
jnp
push
add
pop
mov
fcoml
gs
pop
mov
int
jmp
adc
sub
scas
jne
hlt
loopne
xor
dec
sbb
jnp
shrl
lcall
je
loopne
sahf
pop
push
push
loop
and
enter
mov
iret
inc
pusha
and
hlt
pop
adc
and
loop
imul
dec
idiv
jmp
push
shl
out
mov
jns
inc
mov
test
jnp
adc
mov
inc
les
fildl
mov
fldl
ja
jg
jl
jg
cltd
outsl
stos
sbb
mov
nop
mov
hlt
retw
enter
cmp
mov
outsb
add
les
dec
mov
mov
fdivr
fldl
inc
fmull
imul
push
mov
adc
xlat
rcll
or
mov
mov
scas
sub
dec
out
clc
lods
pop
mov
mov
sar
ret
sub
or
notl
decl
pop
inc
or
out
in
lods
mov
in
sub
push
pop
pop
call
mov
je
or
fwait
pop
dec
data16
das
pop
cmpsl
mov
mov
test
insl
mov
pop
sub
jno
mov
ljmp
sub
pop
push
sub
shl
mov
push
push
pop
out
mov
call
jl
cltd
or
stos
iret
mov
cmc
stos
dec
hlt
sbb
lcall
push
xchg
scas
push
pop
pop
mov
sbb
test
cwtl
stos
adc
push
fiaddl
and
sub
or
sbb
add
cmpsl
push
lods
cmp
xor
rcrb
cmc
aaa
clc
dec
xlat
out
jecxz
addr16
pusha
jne
sti
sbbl
mov
frstor
and
pop
inc
aam
mov
outsl
js
pop
das
cli
ds
sub
inc
push
jae
scas
sar
push
and
lcall
add
mov
sti
jmp
fistps
or
jnp
jae
mov
add
insb
and
push
jb
cmp
mov
enter
mov
mov
incl
pop
sbb
pop
negl
test
jae
decl
repz
sbb
push
or
add
pushf
jg
push
les
incl
call
add
pop
xor
cli
dec
xor
rcr
push
jg
add
add
decl
std
jecxz
or
sbb
dec
dec
jno
add
scas
and
decl
ss
inc
ffreep
mov
movsl
pop
xor
pop
and
adc
cld
ljmp
push
sub
push
xlat
jbe
pop
clc
stc
xchg
add
imul
jne
in
dec
adc
adc
or
adc
mov
outsl
je
xor
mov
outsl
inc
dec
and
ret
xorb
test
and
push
xchg
out
inc
bound
pop
jle
movl
decl
hlt
pop
movsb
int
mov
btc
ss
iret
shr
decl
lods
inc
test
or
fstpl
aam
pusha
aas
clc
fists
cld
cli
sub
add
divb
std
popa
xchg
add
mov
stos
pop
xchg
sbb
jg
sbb
xchg
andl
dec
ss
mov
gs
cmp
fistps
dec
lahf
mov
add
fucomp
insb
jp
test
lahf
dec
cmpsl
or
daa
loope
aaa
roll
cltd
cmp
nop
repz
roll
add
aam
fists
outsl
inc
mov
das
aad
fwait
add
xor
mov
lods
pop
jo
lods
aad
xchg
push
xchg
fwait
jno
xchg
adc
push
jbe
dec
lock
lcall
lods
ret
mov
int
aam
in
inc
jp
dec
jne
mov
stos
fldt
sub
mov
sbb
adc
adcb
dec
cmp
incl
jg
and
inc
jnp
cmpsl
inc
rolb
aam
mov
sub
xchg
aad
sub
popf
dec
cmpsl
pop
cmp
in
movsl
jmp
bswap
pop
adc
lcall
jb
pop
and
cwtl
xlat
inc
xor
cmp
outsb
pop
ljmp
pop
pushf
ficomps
sbb
aam
inc
jo
inc
and
repnz
push
and
or
push
sti
pop
aaa
adc
aas
call
and
add
adc
jle
negl
xor
mov
cmpsb
jno
mov
pop
into
out
test
inc
pop
scas
cmpsb
out
xor
xor
insb
mov
add
ret
xor
and
out
in
adcb
subl
pop
push
adc
lret
push
outsl
add
fadds
fs
test
lock
ljmp
adc
cmp
stos
adc
lcall
and
jg
aaa
cmpsb
xor
mov
lahf
test
adc
or
or
fucomip
and
xor
fmuls
call
adc
push
lds
cld
or
mov
push
fsubr
lahf
jle
dec
and
stc
jg
test
arpl
call
cs
dec
push
pop
icebp
leave
push
lcall
pushl
jns
movsl
fsubrl
daa
cmp
mov
mov
inc
sti
cmp
jg
add
icebp
push
daa
data16
pop
and
outsl
icebp
call
dec
repz
cltd
jo
in
jns
sbb
xlat
aad
movsl
sub
lcall
xchg
dec
fimuls
adc
mov
insb
mov
ljmp
inc
aaa
pop
dec
jp
and
jg
jb
push
xchg
and
mov
or
xchg
mov
decl
dec
add
mov
or
jg
or
xchg
push
hlt
dec
dec
mov
jp
shl
pop
sbb
lock
mov
xor
or
js
push
in
adc
and
ljmp
adc
icebp
outsl
setg
sar
mov
loop
iret
sti
loop
pop
xchg
shl
leave
fwait
repz
orb
inc
sub
mov
test
cmp
js
scas
push
ret
arpl
sub
sbb
pop
pop
cli
test
mov
sub
and
cmp
pop
iret
test
pushl
pop
sub
outsb
lcall
or
mov
clc
jg
into
rol
pusha
adc
pop
out
ds
add
xchg
cmpsl
pop
pop
fucomip
pop
loope
les
mov
mov
mov
mov
incl
mov
xchg
ja
cltd
jp
jl
out
hlt
fistpl
loopne
add
imul
sub
out
imul
ljmp
aas
sub
jg
and
out
add
test
dec
dec
add
js
mov
sub
fistpll
cmp
inc
lahf
xor
fstps
cmpsb
scas
ja
lcall
add
pop
icebp
pop
xor
je
mov
push
fists
cmp
fistps
data16
inc
enter
add
mov
or
pushf
outsb
adc
push
mov
mulb
pop
stc
jecxz
je
dec
imulb
aaa
out
push
and
daa
nop
push
lea
inc
and
inc
sub
inc
pop
dec
inc
arpl
pop
loop
les
lret
cld
fsubrl
popfw
xchg
dec
call
int
adc
pop
dec
data16
mov
addl
mov
xchg
stos
js
dec
cld
lcall
mov
cwtl
fstps
flds
mov
stc
jne
pop
sub
cmp
popa
std
imul
and
and
mov
sahf
pop
idiv
push
lcall
push
xor
and
mov
inc
movsb
sub
jp
mov
ret
in
mov
lahf
leave
jb
out
stc
das
cli
ljmp
aas
dec
xchg
mov
inc
jecxz
inc
inc
or
add
out
clc
xchg
push
xor
adc
aaa
fidivrl
dec
mov
pop
addr16
stc
lret
pop
cli
in
xorb
shlb
shlb
or
js
lcall
cld
sahf
faddp
pop
pop
inc
cld
pop
cmp
jne
mov
sub
dec
mov
lcall
std
fildll
test
div
jp
adc
add
bnd
push
mov
cmp
rorb
sahf
dec
lods
mov
shll
imull
insl
fs
ret
inc
call
test
outsb
jl
xchg
mov
or
cmpsl
or
lods
leave
lret
jno
decl
mov
mov
addb
push
dec
jne
pop
push
jp
sub
int
das
adc
pop
fstpt
les
imulb
call
pushl
addr16
fadd
je
lods
aas
ret
call
add
dec
pop
xchg
sbb
jp
jmp
loop
dec
mov
push
and
aas
rcll
push
nop
xchg
mov
stc
pop
sbb
mov
inc
stc
shrl
xor
out
enter
insl
xchg
pop
sbb
sub
adc
call
jg
ja
testl
ret
rcll
fiadds
mov
js
mov
jg
pushl
enter
mov
fcoms
and
jp
adc
mov
pop
jl
call
cmp
or
mov
jno
push
arpl
ret
data16
dec
mov
test
incl
test
pop
in
dec
xchg
push
movsl
notb
stos
mov
sub
xchg
pop
lea
or
pop
dec
cli
mov
insb
mov
in
movb
sbb
pushl
inc
or
and
add
mov
push
mov
push
xlat
jmp
sub
cmpl
pmulhuw
shlb
pusha
push
inc
adc
enter
call
cwtl
hlt
bound
loopne
push
push
jg
gs
inc
jg
fldlg2
mov
xchg
nop
mov
adc
cmp
xlat
pop
out
outsb
inc
or
int3
jecxz
decl
or
das
push
dec
sti
xchg
in
rorb
clc
stos
push
cmp
addr16
scas
ljmp
shlb
fdiv
jl
gs
je
ljmp
out
div
scas
jno
jge
cmp
adc
fwait
mov
inc
loop
incl
ss
stc
mov
mov
cld
lcall
repz
rcl
pop
bound
xchg
pop
cmp
sbb
pop
test
prefetcht0
cld
lret
dec
loop
sbb
adcb
scas
xchg
lret
es
push
ljmp
push
loop
push
sub
xchg
lea
push
jne
xor
shl
addb
sbbl
pop
int3
pop
icebp
dec
cmp
or
and
push
or
xlat
mov
ljmp
int
push
idivb
sbb
rclb
das
ljmp
mov
ljmp
pop
insl
mov
pop
stos
lret
movsb
mov
add
xor
or
decl
pop
rclb
mov
xchg
shrb
sub
and
adc
shlb
incl
xchg
cwtl
adc
into
pop
mov
negb
repnz
jno
int3
movb
push
dec
sbb
jnp
mov
or
fstl
ljmp
xchg
mov
mov
cmp
xchg
mov
in
push
and
jmp
and
mov
outsl
sbb
fs
inc
leave
popf
orl
ret
jp
lods
xchg
pop
fwait
dec
mov
add
mov
ret
mov
adc
and
ds
mov
fdivl
cmc
mov
decl
jecxz
push
push
inc
or
jno
mov
cwtl
daa
test
adc
incl
das
clc
jae
scas
mov
mov
inc
mov
mov
icebp
lcall
ss
sarb
mov
ret
sbb
cld
das
mov
pop
in
and
lahf
xor
dec
mov
mov
in
loope
or
pop
pushf
icebp
aam
mov
push
xor
or
adc
or
xchg
stos
cs
int3
jb
add
incl
insl
jecxz
insl
cmp
pop
or
mov
cld
add
call
xor
mov
jp
dec
inc
icebp
or
sbb
or
das
cld
call
es
movsl
adc
xor
mov
icebp
xor
ljmp
xchg
jae
dec
mov
fcmovnb
int3
mov
mov
or
sub
pop
sub
inc
call
add
inc
daa
xchg
cmc
ljmp
lret
xchg
repnz
mov
pop
aas
push
xchg
pusha
push
cbtw
shrl
and
inc
out
mov
outsb
rclb
decl
data16
sbb
lahf
rcll
rcrl
jecxz
aam
add
fs
cmpb
xor
push
mov
hlt
and
repz
inc
jg
incl
add
push
test
mov
mov
cmp
mov
sub
dec
test
outsl
push
adc
loope
int3
insb
dec
and
das
sar
fwait
testb
dec
repz
mov
aaa
mov
sub
mov
add
cmp
cs
push
ret
adc
pop
je
lock
in
and
sub
pop
out
lret
and
jbe
icebp
pusha
pop
push
test
adc
loop
xor
adc
adc
jns
inc
and
stos
inc
fdivr
shl
call
sbb
pop
inc
push
dec
repnz
jl
dec
xchg
mov
ljmp
scas
sar
push
incl
push
lret
push
out
or
jne
jne
or
decl
or
and
cmp
popf
cld
sbb
mov
dec
outsb
pop
enter
dec
ror
ljmp
fldenv
lock
cmp
push
dec
rorb
lods
dec
movsl
xchg
clc
fcomi
mov
outsb
or
lcall
and
das
or
dec
mov
aaa
inc
xchg
add
inc
jb
sbb
movsb
gs
popa
nop
incl
outsl
cmp
xor
arpl
rcr
jo
enter
xchg
daa
inc
inc
aad
ds
daa
sub
cli
sub
mov
mov
push
ficomps
out
mov
mov
pop
sahf
and
jb
imul
jmp
push
sub
adc
dec
fbld
cmpsl
cli
add
mov
sub
out
cmpsb
pushl
inc
mov
mov
cmp
add
movsb
mov
push
stos
test
jmp
stos
lock
dec
filds
cs
xlat
ss
repz
pop
pop
mov
mov
cli
outsl
aam
xlat
sub
dec
das
mov
cli
insl
push
js
cmc
xor
ja
shrb
loopne
aaa
loopne
lret
pop
sbb
pop
and
push
mov
inc
push
xlat
pop
ss
or
jmp
xchg
in
mov
mov
into
int
inc
and
sahf
sub
arpl
cwtl
and
pushl
dec
aas
pop
cmpsl
cwtl
in
sbb
adcl
adcl
lea
jg
jg
ret
push
mov
scas
jge
mov
push
push
pop
lcall
sub
jno
jne
lret
xchg
inc
in
lahf
push
imul
jnp
aam
jg
pslld
dec
pop
mov
shlb
clc
dec
fsubr
mov
shrb
xchg
leave
cmpl
or
and
jne
cmp
call
nop
aaa
lea
inc
in
or
insb
add
jg
clc
hlt
mov
fnsave
lret
add
stos
insl
sub
imul
cmc
jmp
test
jns
test
shrl
jmp
cmc
fildll
sub
sub
xchg
int
jg
mov
lods
imul
movsb
fmull
mov
cmpsl
fnstenv
dec
icebp
mov
mov
inc
cmp
add
xor
jle
mov
mov
mov
xchg
push
incl
pop
stos
sub
mov
fiaddl
xor
or
jmp
fbld
lds
push
pop
lret
pushl
test
lret
hlt
pop
push
jne
jno
mov
mov
jne
inc
pushl
jnp
stos
jmp
enter
mov
sbb
xchg
sahf
cmpb
mov
cmp
jmp
or
add
cli
mov
push
add
pop
jae
xchg
sbb
out
dec
cmp
outsl
push
icebp
movsl
mov
pop
push
sub
push
pushl
incl
movsl
outsl
inc
daa
sub
loop
out
inc
push
add
js
outsl
hlt
ljmp
and
lea
aad
pop
pop
call
adc
cli
fidivs
xlat
scas
inc
hlt
sbb
movsl
jns
repnz
xchg
jns
push
mov
mov
lcall
aaa
int
sahf
mov
push
shll
gs
and
test
pop
ss
jmp
xor
lret
cs
push
out
movsl
mov
cld
decl
sahf
pop
pop
stos
loop
sbb
cld
push
ret
fcoms
decl
movsb
sub
fbstp
adc
shl
mov
incl
mov
xchg
call
jecxz
test
int3
cwtl
sbb
add
mov
mov
mov
cli
inc
inc
ss
arpl
adc
lods
sbb
push
mov
in
mov
decl
jno
adc
pop
inc
ret
sti
xor
aas
add
gs
jne
jp
ljmp
shl
lret
test
leave
or
mov
dec
lret
jnp
out
or
mov
mov
incl
or
das
out
cmpsl
sbb
mov
mov
mov
inc
inc
pop
cltd
arpl
fwait
cmp
bound
jp
xor
stos
data16
push
adc
fnstsw
push
cmpsl
mov
pop
call
arpl
adc
jo
mov
mov
cmp
pop
or
add
mov
icebp
mov
out
lahf
xchg
das
jo
je
ljmp
cs
cmp
mov
ljmp
shl
loope
push
inc
or
lock
std
data16
add
je
jle
cmp
incl
mov
jle
adc
cmpsb
jnp
jb
jg
jns
das
test
dec
mov
add
outsl
icebp
pop
cmp
test
mov
or
dec
ret
aaa
cmp
shlb
ljmp
insb
dec
cld
cmc
adc
into
std
add
add
push
or
adc
inc
xchg
cmpsl
add
pop
dec
shrb
cmp
adc
int
jecxz
pop
into
sub
dec
insl
call
adc
inc
std
shlb
lret
hlt
or
ret
fists
mov
incl
ja
mov
sbb
mov
ffreep
jle,pn
aaa
leave
rclb
ret
addr16
push
dec
pop
fisttpll
mov
push
sbb
data16
dec
aad
adc
fists
xchg
fwait
add
test
lcall
push
sbb
pushf
xchg
xor
lret
addr16
jp
jg
movsb
movsb
pop
lahf
mov
lret
push
push
jo
push
mov
jne
pushl
fincstp
mov
imul
inc
decb
mov
adc
out
dec
stos
pop
nop
cmp
inc
dec
lods
sti
rorb
std
sahf
push
pop
lcall
cld
dec
js
fcompl
jge
adc
ljmp
stos
lret
mov
test
adc
cmp
jp
inc
cmpsb
out
out
movsb
xor
outsl
fdivrl
sahf
push
fidivrl
sub
test
sub
orl
cli
enter
add
add
and
pushl
fs
dec
sahf
add
mov
mov
scas
adc
jg
rorb
jne
test
inc
insl
xchg
sti
mov
leave
pop
mov
mov
lret
lcall
aam
mov
cli
cmpsb
xor
in
idivb
xor
cli
ljmp
or
pop
jb
xor
scas
fsts
or
call
adc
pusha
sub
xchg
xor
ret
int
in
jmp
fs
add
subb
push
sbb
dec
jbe
clc
ljmp
cmp
loopne
aas
scas
mov
pushf
dec
movsl
inc
insb
mov
cmp
ret
pushl
xchg
cmp
mov
xor
mov
stos
lcall
pushl
lods
pop
insb
pop
add
or
mov
lahf
cmp
mov
lret
call
mov
dec
std
icebp
lret
mov
lahf
sbb
stos
dec
adc
cmp
dec
hlt
push
aaa
mull
and
inc
sahf
lcall
inc
ljmp
xor
lahf
cmpsb
mov
inc
fisttps
cli
fstl
das
xchg
jg
pop
xchg
dec
push
aad
movsl
es
pop
dec
pop
cli
mov
dec
shrl
hlt
sti
pop
sarl
xlat
dec
call
je
jmp
in
call
orb
push
imul
push
mov
movsb
sbb
test
clc
xor
push
adc
inc
adc
or
std
jns
inc
call
call
gs
jg
mov
test
sti
sub
idivl
or
mov
arpl
lret
mov
cmp
fsubs
insl
into
and
cld
mov
xchg
pop
or
pushl
sub
into
lret
std
mov
cmc
fldl
ret
mov
aam
addr16
movsb
or
mov
arpl
cmp
decl
mov
adc
push
cmp
clc
or
loopne
loopne
add
lock
xchg
loopne,pt
rcl
mov
cltd
mov
pushf
mov
xchg
mov
mov
push
cld
adc
cmp
xorl
mov
pop
call
popf
pop
xlat
sbb
adc
and
and
sub
mov
fdivrp
je
int3
xchg
jge
mov
cli
push
and
in
cmc
ljmp
lcall
mov
xchg
mov
jmp
push
pop
jg
pushf
out
out
sarl
mov
push
inc
lret
mov
pop
xor
or
jp
pop
mov
pop
inc
sbb
mov
test
mov
push
jg
sarl
incl
test
push
out
mov
add
out
push
push
sbb
pop
shll
aaa
clc
lods
cmc
js
outsl
xor
imul
call
and
xor
out
lea
imul
and
jb
inc
pop
sti
pop
mov
incl
mov
js
out
cld
mov
les
lods
jg
xchg
std
lods
clc
outsl
pop
add
adc
popa
test
fs
mov
dec
mov
in
xor
lea
jg
das
inc
sbb
pushf
cmp
push
lds
ja
popa
lcall
push
or
or
xor
lods
mov
repnz
adc
mov
and
movsl
sahf
sarl
cmp
cld
jl
sbb
decl
xlat
and
push
jb
mov
or
xorl
rcrl
xchg
in
pop
ret
jg
add
push
aam
mov
scas
cmp
dec
out
cmp
push
fs
fbld
cmp
cmc
lods
ljmp
hlt
cmc
das
lods
std
xchg
out
mov
mov
xchg
inc
loop
rcrl
lock
rolb
in
jg
inc
mov
call
sub
inc
xchg
jmp
test
pop
push
pop
call
xchg
sub
cmpsb
sbb
dec
jg
xchg
pop
push
mov
sub
cmp
pop
leave
cmpsl
dec
sti
outsb
shl
nop
sbb
pop
testl
mov
sti
or
inc
or
in
ljmp
gs
mov
scas
clc
je
and
movsl
and
iret
inc
xchg
popf
cmp
pop
dec
push
repz
loope
add
mov
push
imul
clc
call
das
inc
movsb
fiaddl
xor
inc
mov
mov
sti
fistpll
mov
pushw
cmp
out
sub
dec
cmp
adc
pop
cld
jmp
fs
jp
push
imulb
mov
aad
push
shll
pop
cmp
xor
add
push
dec
icebp
aaa
lahf
je
add
js
fistpll
add
mov
sub
call
lds
mov
cmp
cmc
jmp
lcall
sub
in
sti
xchg
mov
jns
pop
call
push
dec
jl
icebp
add
ja
fidivrs
lods
jg
jne
xchg
mov
clc
fdivr
mov
scas
mov
std
mov
adc
dec
cld
push
mov
xchg
bound
scas
sbb
sub
adc
scas
jmp
mov
or
sub
mov
add
sub
stos
ljmp
rolb
dec
mov
ficoms
mov
ss
mov
rcrb
jecxz,pt
das
lock
push
imul
emms
out
push
sti
xchg
mov
out
sub
lcall
std
sbb
in
bound
ret
push
and
push
or
inc
clc
lcall
sub
and
xchg
adc
out
lods
or
icebp
lock
icebp
shlb
jb
xor
clc
call
cmp
xor
xchg
clc
xchg
sbb
or
inc
cli
lcall
mov
mov
xchg
inc
out
cltd
aaa
fldt
movswl
fcom
jmp
xchg
adc
mov
shlb
incl
jg
test
lds
fwait
xchg
adc
push
mov
cmpl
pop
fistl
jno
push
jle
xchg
sub
sbb
outsl
push
icebp
je
xlat
std
adc
ja
stos
pop
clc
movsl
xor
add
jae
fimull
jg
orb
mov
pop
js
mov
xlat
loop
pop
or
add
mov
xor
out
jb
iret
or
and
mov
xchg
cmp
mov
insb
sbb
js
mov
ljmp
pop
stos
adc
sti
int3
test
mov
ficomps
sahf
jg
xchg
push
js
lock
out
clc
rolb
loop,pt
push
int
call
adcl
mov
add
ljmp
sahf
shlb
lret
out
fadd
subb
jg
incb
mov
pop
imul
xchg
or
sub
lcall
dec
imul
add
cmp
aam
insl
xchg
or
mov
push
ja
in
fldl
std
pop
aas
mov
in
das
fs
jg
leave
mov
pushf
into
mov
push
outsl
cmpb
mov
mov
pop
mov
dec
imul
push
cmp
ja
jle
int3
mov
and
ljmp
and
fs
stos
mov
mov
in
xor
loop
mov
push
mov
mov
out
sub
cwtl
stos
xchg
cmc
mov
iret
cmc
push
cltd
fsubrp
push
test
add
and
iret
pop
lret
test
lds
stos
adc
dec
fmull
cli
jmp
cwtl
ret
pusha
ret
sahf
popf
sub
cmp
mov
idivb
pop
xchg
fidivl
iret
mov
flds
pop
sbb
lret
pop
xlat
out
pusha
inc
xor
ljmp
add
mov
scas
stc
add
cli
adc
js
cmp
ljmp
repnz
push
inc
jl
loop
xor
sti
mov
rorl
cmp
jl
repnz
mov
rcll
push
adc
fsubrl
xor
dec
cli
or
jg
sub
filds
add
rcrl
mov
loopne
pop
stos
cmpsb
das
jnp
pop
in
pop
pushl
and
mov
inc
fdivrs
sbb
xchg
pusha
je
cld
aaa
cli
pushl
dec
inc
icebp
shr
adc
jmp
movl
dec
mov
push
cmp
push
mov
cld
add
repnz
inc
fadds
outsl
icebp
incl
and
in
jg
xchg
dec
leave
sub
into
mov
rcrl
call
push
call
push
pop
xor
mov
adc
ljmp
xchg
cmp
jge
lods
rcrl
sahf
pop
jle
push
ficoml
negb
cli
ret
add
cmp
push
jle
je
xchg
and
mov
mov
lcall
dec
pop
out
xchg
jbe
jecxz
inc
jl
mov
mov
movsb
mov
mov
cwtl
xchg
test
aad
push
ljmp
mov
dec
fimuls
roll
jno
mov
call
sarb
insb
es
mov
stos
lcall
and
mov
cmp
aaa
mov
push
das
ljmp
xlat
jbe
mov
arpl
in
sub
lods
js
xlat
jae
std
xchg
aam
inc
pop
mov
lcall
out
scas
je
loopne
mov
xor
out
aam
mov
test
pop
cltd
cmp
sti
cmp
hlt
mov
cmp
and
jg
push
sub
xchg
loope
ja
sbb
mov
ficoml
cmp
out
in
xchg
pop
push
incl
incl
out
push
daa
xchg
fdivrl
pop
adc
and
pushf
sbb
cld
lods
mov
popa
or
and
jg
call
xchg
push
in
sub
push
and
adc
push
imul
addr16
mov
xchg
ficompl
mov
xor
cltd
fcomp
push
or
daa
sbb
cli
call
and
dec
push
mov
outsb
movsl
dec
mov
jecxz
push
jp
cmp
lcall
push
mov
and
ss
mov
pushf
add
pushf
loope
add
push
mov
cld
decl
imull
leave
xchg
sbb
nop
data16
movsl
loop
insl
sub
das
leave
cli
lods
pop
sub
repz
fwait
adc
jg
mov
cmp
bound
nop
and
or
incl
daa
mov
xchg
cli
loope
cmp
stos
and
dec
mov
aaa
push
outsb
mov
sub
jo
mov
rorb
cs
outsb
mov
mov
dec
lock
mov
mov
pop
xor
adc
lock
in
icebp
xlat
and
filds
mov
ss
idivl
fidivrl
mov
adc
push
jl
jo
mov
imul
pop
push
jge
mov
cmp
incl
das
ror
xchg
in
out
rcrl
mov
xchg
stc
ret
imul
jg
jg
sub
jbe
movsl
mov
and
cmc
ja
adc
pop
fisttpl
dec
das
cmp
dec
gs
and
ljmp
mov
and
test
iret
sar
call
aad
loope
and
mov
das
add
jae
fcmovu
test
cmp
jmp
pushl
or
insl
loopne
enter
push
lahf
inc
bound
cmp
lock
das
std
incl
js
insb
pop
push
sahf
pop
out
or
int
ret
in
test
jmp
mov
push
ljmp
cmp
data16
fidivrl
lahf
ljmp
sub
cmpsb
mov
call
cwtl
mov
jns
adc
sub
xchg
popf
insl
test
bnd
rol
jb
mov
ljmp
xor
cmpsl
pop
dec
fisttpl
stos
adc
and
inc
adc
jmp
jne
sub
jo
iret
mov
adc
or
decl
jge
adc
push
mov
fidivrl
mov
or
lcall
decl
cmp
or
adc
in
iret
pushf
push
mov
xor
ljmp
jecxz
fistl
aad
jg
test
rorb
fidivrl
clc
jns
subl
popa
and
jecxz
add
shrb
push
or
lods
stos
mov
push
sub
outsb
icebp
outsl
cld
sahf
adc
jp
in
rorb
push
adc
lods
push
or
mov
incl
fs
jo
add
test
xchg
in
xor
mov
adc
ss
std
cmp
scas
dec
call
sbb
mov
stc
adcb
jecxz
pop
or
mov
adc
call
mov
ja
fisttpll
sbb
data16
scas
bswap
shlb
clc
imul
sub
das
mov
incl
xor
negl
outsl
dec
mov
and
icebp
lcall
mov
std
fdivs
or
popa
pop
jne
and
push
mov
mov
or
inc
ljmp
aam
jnp
pop
ret
adc
sub
repnz
cli
incl
cmp
pop
cmc
ja
fisubrl
add
call
mov
cli
out
mov
pushf
repz
push
inc
xor
scas
push
dec
dec
jl
jg
cs
jne
and
jmp
mov
scas
lods
pop
call
sub
clc
pushl
rolb
loope
dec
cmc
sarb
scas
mov
cmc
mov
xor
xchg
xor
popf
jnp
decl
jb
jmp
sub
lods
adc
fsubrl
inc
in
mov
in
lcall
pushl
sbb
js
xor
jl
cmpsl
into
fdivrs
ds
decl
adc
cwtl
or
cmp
out
sub
out
addb
call
push
les
call
sbb
sub
inc
push
lahf
pop
insl
rol
push
ljmp
sbb
lret
iret
add
andb
cmp
mov
movsb
mov
dec
mov
test
mov
rcrb
aaa
jae
scas
inc
ds
jb
lcall
push
aaa
mov
mov
in
and
pop
pop
shlb
jne
ljmp
xor
in
inc
mov
dec
ljmp
fildl
dec
adcb
ret
pop
cmp
dec
inc
jno
scas
inc
shl
out
sahf
pop
mov
mov
lret
bnd
cli
fucomip
add
xor
push
mov
aaa
pop
gs
jge
mov
xchg
data16
jns
lahf
pop
psrld
call
xor
leave
ret
xchg
and
lods
sbb
mov
add
incl
imul
fstps
out
xor
data16
push
pop
push
test
inc
and
push
movsl
mov
ljmp
pop
add
into
mov
sti
push
xchg
pop
mov
xchg
mov
gs
mov
in
clc
push
mov
mov
rclb
lcall
jle
inc
push
cld
stos
inc
bound
dec
call
rcrb
mov
inc
mov
sbb
iret
inc
pop
sub
pop
mov
mov
popa
movsb
xor
jge
add
decl
and
push
jbe
push
mov
outsl
js
or
pop
daa
xchg
insb
or
xchg
ss
push
mov
adc
mov
add
and
pop
mov
icebp
incl
cmp
xor
sbb
xor
fldt
dec
inc
and
inc
mov
incl
and
repnz
outsl
sbb
iret
jae
filds
or
inc
cwtl
fmull
pop
ret
je
mov
lcall
cmp
add
sbb
dec
xchg
lret
fisttpl
call
or
xor
movsl
pop
jb
scas
pop
hlt
mov
xchg
push
enter
pop
fdivrp
incl
sub
test
mov
incl
lds
fs
jmp
incl
shlb
jnp
aad
in
push
sbb
fucomip
incl
xchg
aaa
mov
out
imul
addb
push
incl
sarl
stc
xor
mov
call
xchg
sub
movsl
jns
inc
scas
ret
adc
hlt
pop
cmpsl
cmp
mov
mov
outsl
jge
decl
in
leave
adc
movb
sti
icebp
adc
into
jns
insb
sahf
jns
sub
mov
std
mov
inc
dec
xchg
fldcw
mov
jle
mov
push
fcmove
arpl
pop
dec
push
pop
clc
adc
lcall
test
ds
mov
les
jno
fnstcw
sbb
adc
push
cli
jmp
loop
arpl
ljmp
mov
cmpsl
inc
push
aad
cmpsl
ficompl
cmc
or
pop
call
or
mov
cmp
push
cmp
or
fbld
addl
ljmp
icebp
outsl
xchg
xor
fcomi
call
cmp
incl
cld
dec
dec
sub
frstor
call
fdiv
shrl
xchg
dec
addr16
xor
cmpl
or
aas
roll
call
cli
and
mov
dec
mov
movb
jne
push
aam
into
into
jnp
pop
inc
popa
jae
rorb
dec
movsl
and
incl
jne
sub
cmp
test
jg
incl
push
pusha
lret
mov
and
xchg
enter
ret
es
mov
mov
inc
in
pop
cmc
jg
pop
stos
in
mov
popf
cmp
in
call
mov
jl
and
xchg
cmc
sub
shl
add
lea
mov
stc
scas
iret
movb
ljmp
inc
push
adc
cmp
in
dec
ds
pop
stos
mov
mov
adc
sub
push
jle
test
jecxz
adc
std
jg
in
xchg
lock
mov
sbb
aad
lea
clc
jmp
xchg
das
xor
sbb
lret
push
shl
mov
outsl
test
popa
mov
xchg
pop
jnp
xchg
mov
in
insl
jno
mov
jg
incl
xchg
mov
fists
add
xchg
mov
push
sbb
arpl
or
test
mov
and
lret
pop
jg
inc
jae
push
out
dec
repz
jne
out
xchg
jmp
call
arpl
jns
ljmp
sbb
cmp
lahf
jp
push
add
insl
out
ljmp
scas
subb
inc
aad
or
mov
inc
fucomp
aad
arpl
stos
fimull
jno
jmp
xor
adc
xor
sbb
inc
add
mov
imul
je
or
pushl
mov
testb
adc
dec
pop
pop
add
dec
dec
imul
jle
nop
cwtl
fadds
sarl
jg
imull
adc
jmp
mov
push
leave
add
leave
and
lret
cwtl
inc
cmp
jne
cmp
mov
ja
or
inc
cs
test
call
jmp
pushl
mov
lea
test
jae
mov
ljmp
into
loope
push
imul
or
xchg
mov
in
call
sahf
cmpl
mov
fisttps
sbbl
add
inc
jmp
sbb
cmp
stos
sbbb
call
sub
fucomip
sbb
insl
inc
test
arpl
pusha
mov
add
jnp
ljmp
cmp
xchg
test
jl
subb
std
pushl
int
aam
sahf
mov
cmp
shlb
inc
cwtl
mov
cmc
sub
ljmp
in
stos
fwait
out
sub
icebp
repnz
loopne
pop
jne
sarl
pushl
test
mov
fldt
jecxz
xor
aaa
jp
ljmp
loopne
jmp
aaa
sub
movsb
mov
sbb
adc
xchg
push
and
pushl
lds
or
fwait
lock
outsb
add
mov
decl
dec
cltd
movb
xlat
leave
dec
adc
mov
xlat
test
push
jg
mov
gs
stos
fcoms
ja
adc
rolb
push
add
aas
dec
add
sub
dec
mov
cs
int
incl
lcall
sub
int
xor
xchg
rcrl
push
mov
cmpsb
fucomip
inc
and
sbb
mov
jg
sahf
dec
mov
mov
je
pop
fisttps
cli
decl
xchg
int3
filds
leave
out
push
adc
test
pop
into
es
push
aaa
jb
in
pop
mov
sub
cld
or
ss
push
ds
fnstsw
cmp
cmp
mov
repnz
sub
mov
inc
cmpb
pushl
pop
sub
mov
dec
pushf
outsb
cwtl
pop
cwtl
dec
push
cmp
xchg
imul
push
push
xchg
fisubs
popa
inc
aas
xor
cmp
mov
aaa
das
mov
jbe
sbb
mov
dec
lea
lods
in
test
call
movl
add
sub
inc
out
pop
cmp
pushl
testb
mov
dec
jmp
and
add
sub
stos
mov
incl
push
std
pop
pusha
push
and
out
es
ljmp
cld
imul
xlat
sbb
in
lcall
push
fiaddl
loopne
push
add
out
mov
adc
fiadds
cmpsl
and
enter
xbegin
lahf
pop
not
push
mov
into
cld
dec
cli
out
mov
pushl
sub
imul
les
cs
test
cmp
lret
mov
sub
lcall
fmull
push
outsl
mov
or
sub
inc
pop
mov
in
push
cmpsl
mov
pop
cmpl
push
jp
adc
jg
xor
xchg
xchg
out
mov
mov
aaa
orl
iret
inc
xor
lcall
std
mov
icebp
fisubrs
xor
cmpsl
or
jle
jo
mov
outsb
jmp
aaa
and
inc
cmp
shlb
nop
dec
push
jmp
push
fstpt
mov
mov
lock
jo
int
cmpsb
movsl
mov
clc
call
popa
xchg
and
je
and
fcmovu
xor
add
in
fdivr
jmp
das
out
je
jg
insb
push
stos
sbb
jmp
adc
out
aad
push
enter
cmpsb
xor
stos
shld
and
xlat
mov
scas
ja
ljmp
xor
outsb
jle
push
cmp
icebp
dec
std
inc
push
cmp
xor
lock
call
xchg
int
xchg
cmp
test
or
cmc
ljmp
cmp
sub
mov
enter
movsb
out
sub
mov
insb
insl
in
dec
sub
test
movsl
lahf
or
outsb
pop
mov
in
scas
sti
jp
inc
sub
or
cmpsl
hlt
jb
push
and
cmp
jg
outsl
hlt
or
mov
mov
pop
mov
mov
pop
jp
fistps
mov
faddl
jp
mov
mov
jae
lcall
scas
ret
pop
nop
xchg
imul
adcl
inc
in
pop
roll
cmp
ljmp
mov
cmpsl
adc
push
lea
std
sar
pop
jl
ret
addps
shll
outsb
outsb
std
incl
and
jae
pop
mov
xor
mov
hlt
jns
insb
or
mov
dec
scas
repz
pop
loopne
mov
mov
dec
mov
pop
push
fwait
or
and
cli
pushl
sbb
hlt
or
push
mov
stos
scas
popf
call
popa
mov
jge
les
cmp
jnp
outsb
repz
jg
pop
nop
xchg
movsb
js
or
sbb
setne
pop
movsb
dec
ds
nop
or
mov
outsb
insb
cmp
cmp
mov
adc
xchg
mov
sbb
push
pop
sahf
inc
imul
xchg
dec
add
sbb
decl
cld
push
and
test
ja
lahf
hlt
orl
and
sub
mov
adc
icebp
hlt
add
decl
xor
adc
mov
sbb
data16
sbb
into
push
mov
cmpsl
adc
mov
movb
mov
daa
push
cmp
sbb
out
sub
add
sbb
adc
incl
sbb
rcll
pop
xchg
sbb
mov
call
inc
pop
daa
push
call
xor
inc
call
inc
and
cmp
push
xchg
xor
jecxz
insb
xchg
daa
stos
das
cld
pushl
bound
push
dec
jno
arpl
push
fiadds
and
pusha
push
jg
decl
jp
ss
lock
jmp
loope
mov
decl
inc
lods
daa
std
stos
xor
xor
pop
jnp
lods
cs
leave
sub
push
jg
out
sti
jge
js
inc
or
jns
jecxz
clc
jb
stc
xor
lcall
in
add
push
sbb
nop
shlb
roll
in
orb
int3
popa
data16
sub
insb
dec
das
push
fcoms
cmp
jne
adc
fucomip
push
and
adc
ja
shl
mov
pushf
out
stos
mov
and
jae
ret
push
fucomip
mov
jnp
inc
pop
aam
mov
xor
dec
pop
rcl
mov
loope
or
out
pop
out
and
add
ljmp
mov
aad
pop
ficompl
push
cmpl
insb
jp
push
jl
lcall
sbb
xor
std
insl
jmp
dec
inc
inc
inc
or
jnp
inc
mov
test
ljmp
dec
mov
daa
rorb
sub
mov
push
sti
pushf
and
xchg
out
add
in
mov
pop
jle
lea
call
xchg
sbbl
aas
fwait
mov
push
loopne
push
ljmp
hlt
movsl
ds
pop
mov
mov
ja
movsb
pop
sub
sub
or
mov
sbb
mov
and
xchg
leave
scas
lods
mov
mov
arpl
adc
xchg
data16
push
fwait
icebp
leave
decl
movsl
add
xchg
jbe
add
mov
jbe
leave
test
jl
mov
lock
lret
sbb
cmp
cmp
jb
pop
dec
loope
cli
jge
in
jae
std
call
loopne
stos
scas
test
push
out
incl
lahf
or
decl
insl
lea
push
push
jecxz
scas
push
dec
xlat
mov
mov
daa
shlb
aas
push
pop
sbb
mov
cmpb
inc
sbb
mov
sbb
data16
xchg
jmp
dec
icebp
jg
mov
icebp
std
xchg
xor
add
push
scas
xor
outsl
lock
inc
mov
cmpsl
pop
add
fistps
sbb
test
aas
inc
mov
scas
mov
jg
jge
push
sub
or
iret
mov
and
push
aaa
xchg
outsb
sub
xor
sbb
scas
lea
data16
xchg
in
jo
ljmp
out
sbb
jmp
std
or
sub
ljmp
jcxz
xchg
xor
push
fsts
and
pushl
lods
aaa
dec
or
cwtl
data16
push
cmpsb
int3
push
movsb
stos
xchg
mov
stos
fwait
lcall
mov
sub
test
mov
rcll
aad
inc
or
out
jmp
and
movsb
enter
pop
pop
push
jbe
mov
mov
cmpsb
adc
jns
mov
call
mov
es
imul
or
jne
add
jmp
sbb
add
dec
icebp
mov
cmpsb
int
mov
outsb
shr
xchg
xor
sub
pushf
loop
call
jl
inc
xchg
jp
sub
aaa
push
jg
mov
inc
dec
cmp
test
leave
popf
pop
pop
cld
ljmp
out
xchg
inc
add
aas
jl
mov
stos
and
fdivr
decl
mov
pop
pusha
and
shlb
sub
fsubrl
mov
mov
push
fwait
cmp
call
and
lret
sarb
mov
push
lcall
jg
inc
cmp
aaa
stc
rcll
cld
sbb
cs
jg
mov
adc
shlb
repz
dec
stos
ljmp
cmc
sub
adc
mov
out
push
das
std
jg
or
insb
xchg
xor
xchg
pusha
mov
lods
movsl
cmp
das
icebp
pushl
popa
or
push
jb
int
bound
in
cmpsl
jbe
js
ret
cmp
adc
push
inc
jecxz
push
and
pop
adcl
xchg
inc
pop
iret
cmp
incl
test
pushf
in
out
popf
add
pop
movsl
scas
cli
imul
xchg
add
pop
push
sub
or
adc
jle
pop
mov
jle
lock
mov
out
inc
sbb
jmp
fimuls
loopne
mov
lea
sahf
cmp
push
in
dec
sar
and
cs
mov
jg
xor
push
lcall
in
pop
imul
sbb
and
push
xchg
pop
sub
daa
je
pushf
and
cmpsb
dec
jl
fwait
sbb
or
imul
cmpsl
and
push
shr
xchg
pop
lcall
icebp
xchg
cmp
mov
xor
decl
leave
xor
jns
mov
test
and
out
fsubrs
sub
popa
in
inc
ljmp
mov
pop
fisubrs
aam
mov
aad
inc
enter
fwait
cmpb
cmp
les
mov
mov
inc
jmp
inc
stc
mov
jo
cld
push
xor
push
jbe
dec
mov
or
jg
insl
mov
gs
pop
shl
xchg
or
lahf
sahf
and
fisubs
clc
pushl
stc
xchg
fimull
addl
jo
ljmp
xor
ja
cmp
pop
add
out
clc
adc
mov
call
jl
rorb
push
outsb
or
out
sbb
push
push
sbb
xchg
dec
jecxz
mov
idivb
scas
mov
cmp
aam
outsl
mov
xor
into
ret
sti
and
mov
xchg
into
in
jmp
jle
xor
cmp
dec
pshufw
add
cmpsb
sub
sti
clc
sti
cmpsl
cmpsb
mov
subb
popa
lret
push
out
adc
popa
mov
pushf
mov
xor
inc
xor
and
mov
clc
sub
jmp
mov
lock
cmp
mov
call
dec
pop
sbb
pop
orb
iret
lahf
stc
dec
dec
push
xor
jnp
cmc
fisubrl
lcall
stc
mov
xor
and
movsb
test
and
shll
xor
jg
and
xchg
out
fstl
mov
or
push
sbb
fucomip
pushl
inc
sub
sub
cmpl
push
mov
mov
add
dec
pop
call
outsl
outsb
lods
fstl
sbb
jl
inc
fsts
les
and
mov
inc
dec
and
jg
fdivr
pushf
pop
xchg
cmp
js
xor
push
adc
pop
mov
clc
decl
jl
mov
pop
mov
inc
pop
inc
pushl
cmpsb
sub
out
ja
mov
movsb
xlat
mov
stc
pusha
fwait
xchg
popa
and
enter
dec
fs
popf
js
dec
testb
lahf
out
shll
and
aam
lcall
out
repz
insb
in
je
cld
mov
adc
mov
loop
call
cmp
insb
scas
shlb
jle
notl
fucomip
jg
pop
js
xchg
cltd
dec
ret
mov
pop
clc
pushl
cli
adc
popf
mov
loope
adc
loope
or
or
cltd
dec
mov
xchg
sub
movsl
xor
mov
inc
fwait
xor
inc
leave
mov
popa
fs
xor
pop
ljmp
add
lcall
jmp
nop
mov
shl
or
mov
fwait
das
cmc
pushl
and
mov
lret
bound
stc
jbe
aas
outsl
pop
xor
or
insb
rcll
arpl
pop
loopne
mov
in
decl
rcrb
jns
jecxz
add
ret
cmpl
cmovns
or
je
dec
push
jo
sub
sub
mov
repnz
lcall
leave
sbb
cmp
jae
mov
leave
popa
cmovge
test
push
jno
mov
pushl
negb
inc
inc
dec
cwtl
sub
add
call
or
sub
push
push
push
and
inc
push
pop
mov
mov
sbb
loop
test
in
ljmp
popf
cmp
or
movsb
fwait
pop
pop
push
mov
int
dec
jnp
mov
cmp
pop
addr16
jg
lcall
jno
cmp
xchg
jge
jg
pop
imul
test
call
dec
push
mov
std
xchg
pop
xchg
leave
push
push
insb
ljmp
jne
jnp
iret
cmp
pop
cmp
mov
lret
mov
cmp
mov
sahf
mov
lret
mov
call
fldcw
icebp
mov
out
sub
test
test
ret
incl
fdivr
mov
or
xor
mov
js
incl
add
imul
sub
push
xor
adc
int3
mov
adc
mov
mov
mov
add
imul
pushl
add
lds
xchg
fistpll
int3
jns
fmull
mov
sub
or
push
mov
lret
fucomip
fisubs
popf
push
fxch
shlb
and
out
pop
push
ljmp
fstpl
fwait
add
ds
mov
outsl
xchg
jnp
xchg
int3
cld
xor
inc
add
outsl
mov
and
mov
push
jno
mov
jmp
test
int
xchg
cli
pushl
les
and
mov
mov
lds
jle
jg
xchg
mov
mov
loopne
sahf
pusha
int
dec
insb
push
sbb
js
mov
mov
call
lcall
shll
mov
lds
or
rclb
add
xchg
mov
mov
lcall
flds
int3
push
inc
xor
sbb
outsl
call
xor
rcll
icebp
dec
pop
mov
sbb
jo
jmp
aam
movsl
xchg
and
adcl
std
call
fstl
sbb
or
adc
fst
cmp
hlt
cmp
dec
outsb
xor
out
push
inc
or
fstpt
test
cli
push
adc
movsl
add
pushf
es
sub
dec
std
mov
cltd
movsl
rcll
mov
in
sub
leave
je
jle
lcall
out
xor
mov
cvttps2pi
xchg
push
add
sub
scas
cmpsb
repz
jge
rclb
decl
cmp
ficoml
insb
mov
rclb
mov
pop
ljmp
jno
jns
sbbb
and
test
fisttps
shrb
subb
ss
add
pandn
mov
cmp
xchg
fwait
inc
lahf
adc
adc
and
ja
cld
ljmp
call
sbb
mov
pop
rcll
sub
jmp
addr16
insl
mov
call
punpckldq
call
mov
mov
jb
ficompl
pop
push
out
mov
aaa
add
ss
jle
push
cmp
les
add
das
add
jmp
jnp
jno
inc
inc
xchg
or
mov
adcl
sbb
lcall
aam
push
insb
fisubrs
sub
sub
lock
add
cmp
jg
push
mov
xchg
pushl
cli
aad
inc
mov
inc
ret
fwait
push
in
cmp
insb
ss
sar
cmc
jo
adc
icebp
sub
sub
sub
pushl
sbb
in
cltd
or
cmpsb
mov
cwtl
or
xchg
lahf
call
pop
std
jl
adc
and
add
nop
sub
mov
ljmp
sub
loopne
or
sub
test
lods
leave
out
ljmp
std
xchg
lods
andl
jmp
nop
mov
popa
mov
sub
lcall
push
jb
pop
or
cmpsb
repz
scas
fwait
into
cmpsb
mov
mov
js
pop
inc
mov
mov
dec
fimuls
lock
stc
xor
jp
xchg
xchg
jg
call
int3
lds
and
movsl
and
lods
xchg
mov
ud2
mov
jns
inc
adc
jle
outsl
mov
in
and
call
xor
or
jbe
cld
push
add
nop
sahf
movsl
cmp
push
inc
cld
push
dec
repz
inc
mov
pushl
andl
dec
jge
test
scas
das
push
decl
test
cld
pop
mov
mov
insl
ret
inc
pop
int3
aas
push
ficomps
push
pushf
decl
add
lcall
cmp
push
push
pop
mov
loopne
jmp
sub
lds
adc
inc
sbb
pop
loopne
mov
and
pop
xchg
mov
cmp
sti
push
or
adc
test
cs
xchg
pop
cmpsb
rorl
adc
incl
inc
push
enter
xchg
testb
cmovo
ljmp
bound
int3
stos
cltd
fwait
dec
pop
mov
xchg
shll
out
ljmp
cmc
or
or
xchg
jb
jno
aaa
mov
movsb
cmpsb
inc
push
jg
lcall
adc
mov
dec
das
enter
mov
testb
add
clc
or
add
push
and
mov
cmpsb
stos
mov
ljmp
shlb
push
test
inc
shll
mov
dec
pop
loopne
filds
or
lock
ss
xchg
mov
aas
mov
and
in
pushl
cmpsb
adc
mov
inc
mov
xchg
pushf
rorb
jg
cmpsl
add
lret
and
jge
sbb
dec
push
mov
out
hlt
or
adc
xor
xchg
xor
mov
push
cmp
or
fstl
xor
mov
jg
jp
mov
bound
jle
xchg
sub
inc
cmpsl
add
lods
leave
sbb
mov
cwtl
sub
mov
aas
sar
pop
mov
mov
mov
jo
sub
leave
outsl
push
jp
pop
test
jle
and
fwait
inc
sarl
cmp
test
jno
or
mov
pushl
mov
cmp
loop
cld
scas
les
mov
mov
jge
jg
push
je
sarw
daa
pop
fwait
and
lods
seta
cmpsl
mov
sbb
xor
jp
jp
xchg
cmp
push
jno
add
notl
iret
push
movsb
lock
gs
jbe
inc
movsb
pop
lretw
jg
insl
sbb
repz
imul
add
cmpsl
cmp
insb
or
sti
jne
inc
ljmp
mov
jno
scas
aad
xor
test
adc
inc
incl
mov
adc
es
fbstp
outsl
je
cmp
push
sub
subl
stc
int
mov
ljmp
jg
outsl
ljmp
mov
mov
out
sub
decl
push
in
and
pop
test
push
jne
ss
ret
addr16
imul
xchg
jl
push
shlb
adc
iret
sarl
call
add
mov
ljmp
mov
mov
mov
jmp
adc
imul
push
jns
push
jl
push
mov
fwait
pcmpeqb
std
mov
decl
loope
jb
inc
mov
loope
mov
dec
sbb
pop
enter
pop
adc
jg
sub
loope
or
rolb
jg
push
dec
adc
cmc
rcll
cwtl
mov
fisttpll
das
std
inc
jge
dec
scas
cmp
daa
dec
negl
fimull
sub
jg
call
test
sbb
aaa
test
or
ljmp
push
daa
je
add
call
inc
cmp
xor
cld
jmp
adc
rorl
lret
pop
je
xchg
cs
out
test
jg
incl
jle
push
xchg
sahf
rolb
jnp
daa
aam
lock
ljmp
xchg
xchg
ss
lods
dec
sbb
xchg
adc
inc
inc
adc
inc
imul
jp
filds
cmpl
test
inc
data16
push
cs
aad
lahf
fisubrl
rol
mov
icebp
sbb
jg
shrl
add
jbe
sar
lcall
push
mov
inc
data16
inc
mov
pusha
dec
fisttps
push
rorl
push
sub
lods
push
xor
fld
pushf
mov
mov
sbb
or
cmc
sbb
call
int
loope
lds
clc
shr
push
xchg
lock
out
inc
enter
inc
xor
add
jmp
inc
inc
push
ret
shlb
movsl
mov
ret
mov
adc
pushl
and
nop
mov
push
push
xor
call
pop
stc
jne
sbb
into
xor
dec
fidivrs
roll
lcall
js
mov
dec
out
popa
ret
ret
gs
push
movsl
jmp
push
ret
sub
mov
pop
scas
push
mov
sub
adcl
jbe
mov
sbb
xchg
cld
cld
arpl
bound
cld
sarl
mov
shl
into
and
cs
lret
add
pop
jo
push
ljmp
sub
pop
aaa
cli
mov
call
data16
jg
bound
iret
mov
mov
idiv
pushl
xchg
shrb
das
dec
jo
sub
mov
mov
std
mov
mov
adc
incl
es
pusha
push
clc
inc
ja
mov
or
int
xchg
mov
loopne
add
push
lret
mov
inc
jg
outsl
cld
jl
cli
mov
sub
es
test
loop
mov
adc
jae
sbb
nop
roll
dec
mov
loopne
imul
lea
aam
lcall
sub
mov
xor
pop
jne
push
or
pop
push
mov
call
pusha
mov
jbe
leave
mov
daa
insb
xchg
pop
push
lcall
mov
mov
cld
jl
sbb
inc
popf
mov
stos
dec
pushf
sbb
or
mov
add
fucomip
out
pushf
adc
es
sbb
out
push
jge
mov
testl
stc
inc
data16
pop
jmp
xchg
cmp
ret
les
cmpl
int3
out
nop
fstp
mov
jo
mov
lcall
pop
pop
les
lock
pop
jne
add
mov
xchg
decl
sub
ljmp
stos
test
sbb
decl
sub
push
and
jmp
dec
mov
out
mov
dec
call
push
cltd
xor
dec
gs
cmp
and
sbb
inc
loopne
xchg
cli
pushl
fidivrs
aad
in
shrb
add
xor
ljmp
dec
insl
dec
mov
mov
xchg
xchg
xchg
loopne
pop
dec
ljmp
push
xor
hlt
xchg
inc
add
test
ficompl
lea
fs
mov
cmp
stos
mov
fsubr
bound
add
mov
cmpsl
dec
ljmp
cmc
jmp
repnz
pop
arpl
icebp
movsl
pop
cwtl
sbb
cmp
fsubrs
frstor
rorb
mov
or
lea
jmp
pop
insb
sbb
jg
jg
ret
in
scas
pop
cmp
mov
decl
les
mov
xchg
dec
xchg
sbb
shrb
inc
sarb
push
mov
cmp
pop
clc
lcall
pop
sub
popa
xchg
insb
arpl
push
jb
ss
lcall
ljmp
arpl
and
sarl
xchg
pop
test
stos
popa
mov
lret
jp
in
sbb
rolb
into
xor
addps
rorl
push
fadds
div
call
pop
fs
popf
pop
ljmp
jbe
cmc
enter
stos
shll
idiv
call
dec
sub
outsl
ja
ljmp
les
fdivrs
add
cmp
fcmovne
dec
xor
dec
std
xchg
sub
mov
aaa
pop
adc
inc
data16
call
incl
ja
insb
int
es
cltd
test
sub
out
arpl
mov
ljmp
mov
cmp
loope
cmp
aas
xor
inc
dec
lret
cld
lcall
cmp
pop
mov
mov
adcl
in
pop
add
clc
andps
push
or
fbld
scas
sub
mov
and
lcall
jge
movsl
test
divl
sub
pop
daa
mov
push
andb
cmp
cmpsl
in
fwait
insb
push
imul
cs
inc
push
xchg
sar
dec
add
dec
cmpsl
sub
fisttps
push
ja
in
sub
repz
dec
and
mov
sbb
mov
mov
cmp
pop
fmul
orl
and
push
iret
sub
test
incb
incl
loope
mov
es
fs
inc
stos
je
mov
test
pop
fdiv
sarb
enter
call
lods
pop
data16
jg
lcall
jno
sti
aam
dec
mov
sahf
adc
adc
ljmp
mov
in
in
ljmp
mov
jne
jp
in
out
rorl
popf
mov
adc
jne
pop
jae
fstpt
adc
imul
mov
push
insb
mov
inc
jno
fadds
and
ret
jp
jg
or
ljmp
push
lret
xor
xchg
adcb
jmp
call
int
mov
cwtl
in
popa
ljmp
adc
out
jno
lahf
xchg
dec
subb
and
xor
sbb
push
xchg
fstpt
decl
icebp
adc
cmp
push
inc
xchg
dec
stos
in
dec
test
push
test
xchg
clc
sub
inc
and
cmp
repnz
out
jbe
inc
jg
inc
pop
add
gs
out
xchg
movb
decl
lret
outsl
or
lods
and
cld
jo
mov
imul
cmpsb
enter
in
insl
pushl
aas
inc
pop
ljmp
jns
and
sub
sbb
mov
cmpsl
mov
sbb
fwait
sub
les
cmp
lods
sbb
fdivr
mov
gs
fisttpl
cmc
mov
icebp
stc
xor
push
xchg
int3
mov
add
in
mov
xor
mov
shll
push
or
pop
jg
adc
mov
mov
test
cmp
jmp
xor
sbb
lods
cmp
insb
iret
lahf
sbbb
jg
mov
mov
pop
iret
add
dec
mov
mov
hlt
andb
mov
in
int3
loopne
mov
stos
jae
dec
mov
cli
decl
mov
or
xchg
push
push
sbb
jno
push
jmp
jl
jp
adc
ret
and
lods
and
loopne
ret
mov
loopne
pushl
xchg
movsl
sbb
enter
mov
das
js
push
xor
mov
ds
jl
int3
pop
pop
cmpb
cs
add
mov
jne
mov
sbbl
jg
inc
or
or
nop
data16
ljmp
pop
out
dec
mov
fsubp
ret
dec
inc
lds
adc
xchg
cmp
adcb
cmp
adc
les
rcrb
push
lcall
adc
jmp
jecxz
mov
sbb
ret
xor
mov
dec
sbbl
sbbl
jg
ret
and
push
xor
js
mov
inc
sub
jns
lock
cmpsl
icebp
xchg
scas
scas
scas
pop
or
in
fists
movsb
test
lcall
mov
push
or
mov
sub
scas
ss
push
rorl
sub
xor
iret
inc
sbb
lea
mov
les
stc
int3
decl
fistl
jge
and
jp
mov
mov
setnp
shrl
cld
pushl
mov
cmp
loopne
hlt
pop
pop
int3
out
jecxz
mov
sbb
mov
inc
and
mov
adc
aas
mov
lcall
sbb
jns
and
jl
mov
mov
ljmp
loop
popf
mov
test
rorl
ss
and
mov
add
pusha
xchg
fisttps
js
mov
adcb
push
pusha
js
decl
add
xor
push
into
push
adc
dec
jno
push
jle
popa
mov
jmp
push
ficomps
enter
fidivrl
mov
jo
daa
sar
decl
lret
rsm
je
insl
in
add
fwait
enter
ds
mov
mov
cmc
into
add
incl
jmp
jl
jns
mov
push
lods
mov
sbb
incl
pop
push
inc
cmpsl
fnstsw
out
sub
mov
aam
lods
lods
incl
or
sub
cmp
jnp
cmp
aas
popa
jg
ljmp
in
ficomps
jp
jo
fsub
cmp
adc
iret
test
test
clc
ret
movsl
xchg
ljmp
mov
jg
cmpb
fisubl
dec
pusha
push
lret
imul
xor
push
xor
push
jmp
jl
or
lret
loop
push
mov
scas
mov
rolb
sar
mov
jmp
dec
mov
test
gs
aaa
cmp
pushl
js
push
or
dec
int
or
push
fnstcw
cmp
repz
sub
jg
ds
mov
jno
dec
popf
ret
testl
incl
dec
test
addl
add
inc
adc
jo
and
insl
xchg
jb
fmuls
sub
mov
inc
test
dec
sbb
jle
mov
push
push
divl
lahf
scas
das
pop
fisubrs
ljmp
test
jo
cmc
jb,pt
outsb
pusha
inc
add
incl
hlt
push
lret
out
pop
push
mulb
ljmp
enter
sbbb
mov
insl
xor
fidivl
jg
stos
inc
xchg
xor
xor
stos
data16
push
or
call
jne
or
or
push
arpl
xorl
das
cmp
pushf
jae
add
pushl
imul
jb
pop
push
ljmp
test
icebp
lods
pusha
and
xorl
adc
mov
popf
clc
pushl
in
jge
data16
mov
orb
push
push
adc
push
pop
jle
test
pushl
inc
xor
push
mov
or
out
push
ljmp
adc
cmp
mov
pop
lds
or
ljmp
cmp
jp
test
xchg
jns
ljmp
clc
repnz
inc
iret
divl
sub
dec
inc
cmp
jne
mov
cmp
outsb
repnz
pop
pop
sahf
test
je
mov
in
pop
push
push
movsl
mov
in
fstp
lret
push
mov
repnz
dec
sar
push
push
icebp
mov
push
mov
sti
aaa
loop
in
loope
js
cmpsl
cltd
push
mov
test
ljmp
dec
fsubs
xchg
mov
jmp
bnd
das
mov
sarl
jp
movsl
mov
ljmp
sub
mov
cltd
mov
rcl
xchg
decl
sub
leave
lahf
in
jno
js
sub
or
push
call
ljmp
mov
loope
pop
pop
cmp
sbb
cld
jg
ljmp
sub
std
xchg
mov
mov
ds
sti
addr16
lods
sahf
jmp
push
adc
inc
lcall
inc
push
andb
dec
jl
in
out
jo
add
insb
bound
dec
gs
mov
gs
or
xor
fists
aam
jne
or
mov
adc
xorl
and
pop
outsb
std
cs
sbb
rol
and
fistpll
push
lcall
or
test
xchg
sub
mov
adc
mov
ret
roll
call
and
cld
dec
xchg
jbe
adc
push
call
mov
packuswb
mov
or
js
mov
leave
mov
jg
jmp
mov
cwtl
pop
xor
cmp
or
jo
inc
jnp
and
nop
outsl
test
std
pushf
fistps
ljmp
push
stos
adc
xchg
faddl
xchg
sub
idivl
add
fwait
and
jns
rol
mov
pop
adc
notb
mov
filds
cmpsl
lcall
cmc
clc
push
xor
out
jmp
fldcw
xchg
dec
int3
xor
adcb
pop
cli
jmp
cltd
aad
sub
sti
sub
das
pop
lahf
inc
les
jno
add
lcall
mov
movsl
mov
mov
sbb
or
mov
call
lcall
sub
xchg
sahf
mov
popl
sub
call
lock
addl
sub
call
popa
dec
cmpsl
mov
xchg
mov
out
inc
rcrl
or
call
push
leave
pop
nop
loopne
ljmp
mov
test
lcall
adc
inc
mov
dec
or
sbb
jmp
cmp
mov
lret
in
jnp
popf
fwait
fs
mov
icebp
int
test
dec
sub
insl
mov
aaa
mov
test
dec
add
cmp
lret
cmc
xchg
clc
gs
ja,pn
loope
push
xchg
decl
sub
lret
and
test
adc
push
mov
pusha
inc
lret
sub
scas
and
mov
mov
cmpl
pushl
dec
aad
inc
xchg
adc
gs
ror
bound
shl
cs
notb
fs
add
push
out
outsb
push
clc
add
cmp
fcomps
and
or
sbb
mov
push
movsl
or
incl
cli
aaa
and
xchg
lea
fwait
and
mov
movsl
shr
or
cld
or
or
pop
clc
pushl
mov
mov
sahf
mov
jae
sbb
ja
mov
shr
xorb
inc
mov
mov
loopne
testb
aam
call
cmp
jecxz
mov
sbbl
outsl
dec
lea
mov
cmp
dec
fdivrl
js
xlat
pop
jns
std
pop
std
and
and
cmc
stos
and
out
add
call
add
or
clc
mov
jp
xchg
fsub
mov
aam
aad
loop
pop
rcrl
addr16
push
call
jle
push
sbb
xchg
xchg
add
mov
mov
fsubrl
pusha
adc
or
cld
fistpll
dec
sbb
mov
mov
bound
loope
push
mov
fmull
in
push
subb
sub
push
repz
inc
sub
jp
push
cmpl
sarl
fldcw
dec
push
push
lds
dec
push
add
cmc
daa
mov
ljmp
jle
mov
call
and
mov
mov
add
sub
add
mov
or
pop
data16
mov
jle
push
pop
or
jmp
jmp
je
ret
inc
cmp
xchg
shl
in
jle
call
jmp
insl
pusha
pop
std
das
hlt
ja
xor
sti
pushf
scas
loop
pop
sub
push
ljmp
inc
mov
mov
cli
sbb
xor
xchg
jo
imul
mov
aam
clc
ds
and
popf
and
sahf
sahf
repnz
popa
out
mov
dec
enter
sub
fisubl
int3
test
add
icebp
mov
dec
ljmp
dec
push
ret
sbb
cmp
clc
orb
nop
ret
pushl
mov
das
mov
fists
bound
aaa
clc
mov
aaa
cs
cmp
mov
mov
incl
idivl
fwait
sahf
testl
xchg
push
add
decl
daa
lret
loopne
push
es
ret
pop
mov
negb
xor
in
jns
aas
push
cmc
dec
push
mov
call
movsl
sub
or
add
lcall
pushl
frstor
rclb
movsb
inc
push
fwait
in
popf
lret
decl
pop
int3
fdivs
push
mov
mov
cs
inc
inc
cli
sahf
add
sbb
fimull
adc
insb
movsb
push
std
outsl
push
cld
lcall
test
ljmp
sarb
addr16
dec
inc
fcoml
imul
xchg
pop
out
in
xor
shlb
jge
icebp
mov
or
enter
fwait
lahf
add
jle
push
std
xchg
ja
lcall
subl
mov
in
jl
sub
mov
decl
sbb
inc
jge
mov
jnp
sbb
into
adc
xor
call
dec
stos
lcall
push
and
ljmp
std
inc
xor
or
sub
insb
dec
mov
xchg
pop
inc
sub
paddw
push
jno
hlt
push
lret
es
add
dec
repz
push
ja
adc
fs
push
ljmp
mov
xchg
mov
stos
data16
xchg
loopne
incl
call
push
stc
xchg
lea
inc
mov
out
pusha
push
rol
daa
filds
mov
shlb
fimuls
xchg
or
shl
and
das
icebp
mov
outsl
add
aaa
adc
xchg
mov
shll
pop
pop
dec
fs
out
in
mull
and
in
cwtl
xlat
dec
dec
sbb
sub
aaa
scas
iret
add
icebp
adc
inc
fnstsw
dec
std
popa
in
xchg
mov
pushf
incl
adc
pop
pushl
dec
sarb
pushf
aas
sbb
pop
in
bound
sbb
movsb
ljmp
push
and
faddp
push
imul
gs
mov
xchg
mov
mov
decl
stos
scas
or
jo
cmpsb
mov
popf
int
aad
pushl
cmpsb
icebp
jl
mov
push
sub
stc
aas
xor
jg
ljmp
jo
dec
mov
das
data16
leave
jnp
cmp
aaa
imul
outsl
lock
sti
ds
cmpsl
insl
lret
mov
xor
pushl
std
rcll
sbb
scas
xlat
xor
mov
lods
jle
pop
call
jbe
test
mov
push
inc
adc
call
popf
xor
in
pop
sti
in
loope
movsb
lcall
rcrl
aam
or
insb
push
ret
mov
mov
jnp
cmp
xor
iret
xor
pushl
insl
inc
sub
mov
cmc
lahf
add
sbb
xchg
jb
mov
push
decl
push
fstpt
std
jg
lods
mov
cs
lcall
mov
jnp
fwait
mov
and
out
mov
cld
add
mov
out
add
mov
shlb
jg
decl
push
pop
sub
into
xchg
adc
mov
leave
push
in
or
xchg
cmc
pusha
cld
imul
les
lcall
lcall
mov
push
sbb
jg
xor
aaa
push
dec
xorb
out
dec
inc
adc
lcall
incl
mov
add
mov
fisttpl
fwait
test
pushl
sahf
cmp
sub
jbe
arpl
std
mov
orb
cld
mov
jne
add
pop
pop
pop
lods
fwait
mov
rorb
stc
xor
popf
xchg
decl
int
nop
aam
enter
push
repz
nop
sub
push
cld
push
push
hlt
push
mov
mov
inc
fsubr
cmp
lcall
dec
sbb
iret
add
sbb
inc
push
insl
xchg
rcr
inc
fnstsw
jmp
xlat
mov
test
in
out
push
jb
push
jo
decl
jmp
jmp
shrb
mov
sbb
stos
movsl
in
xor
push
add
inc
or
lahf
inc
push
in
iret
fidivl
leave
inc
fcmovnb
call
rcrb
mov
loopne
sti
pop
dec
shll
jmp
out
jno
mov
cmc
xchg
adc
push
mov
or
sbb
inc
sbb
rolb
sti
mov
xor
add
call
mov
sub
ss
addr16
jg
insl
cmp
mov
push
mov
nop
jp
or
call
outsl
lock
jge
xchg
repnz
mov
mov
push
jg
sub
lea
and
into
stc
mov
movsl
jns
mov
xchg
pop
inc
jmp
loop
icebp
jns
sbb
movsl
sbb
dec
rolb
inc
test
rcr
leave
dec
into
insl
popa
dec
push
mov
mov
lahf
repnz
xchg
addr16
cltd
ljmp
lahf
decl
mov
cmpl
xchg
out
lea
ret
ss
and
lcall
adc
mov
or
in
inc
inc
inc
or
cmpsl
imul
and
ljmp
xchg
pusha
icebp
fisttps
sbb
outsl
pop
push
xor
cmp
mov
mov
inc
lret
add
cld
pushl
adc
data16
xchg
ljmp
xchg
and
std
out
das
push
mov
jg
jne
cmp
inc
cmpsb
xor
jmp
pop
mov
ljmp
mov
imul
jle,pt
xchg
push
test
pop
ret
pop
xor
pop
inc
or
sbb
jg
lret
push
jge
dec
sbb
in
xchg
aad
dec
pop
popf
fs
pusha
pop
lcall
mov
push
sbbl
clc
xor
cmpsb
lds
push
outsb
mov
nop
data16
mov
inc
sarl
rolb
push
mov
push
xor
add
sub
push
xchg
inc
push
das
fiadds
push
pusha
mov
mov
mov
cltd
outsl
or
das
jge
mov
push
incb
cs
jp
jg
dec
aam
push
rol
lods
das
inc
xchg
sub
std
mov
cwtl
or
jecxz
roll
addr16
mov
es
decl
in
cmp
fadds
sbbl
ret
xor
jmp
jne
outsb
and
inc
and
outsb
push
aaa
ljmp
mov
xor
insb
iret
ja
aad
mov
pop
mov
sbb
ds
call
mov
pop
inc
repnz
gs
rolb
scas
sub
fdivrs
mov
lcall
nop
gs
fxch
sti
or
scas
xor
aam
pop
sub
outsl
std
decl
pusha
gs
add
cmp
test
and
and
xchg
cmpl
sti
inc
out
stos
out
inc
outsb
popf
xor
inc
mov
mov
repz
or
adc
ret
sub
push
aaa
in
xchg
lock
outsl
icebp
das
loopne
push
xchg
mov
cmp
mov
aam
sub
and
dec
inc
jg
pushl
or
cmc
push
jmp
shrb
pop
lahf
rcll
push
ret
push
mov
ljmp
xchg
adc
push
adc
push
call
ljmp
jmp
push
int
mov
shlb
aad
and
push
repz
incl
in
js
lock
fnsave
fstpl
adc
xchg
insb
cmp
std
add
incl
jmp
clc
dec
adc
cmpsb
aam
push
push
mov
cli
lods
out
xor
popf
add
inc
pop
clc
xchg
clc
jbe
insl
mov
and
insb
sub
lcall
and
aam
mov
mov
jge
lret
inc
in
mov
and
inc
cli
or
mov
or
mov
pop
cmp
call
sub
sbb
inc
fdiv
in
cld
dec
sbb
jg
loope
test
frstor
loop
loopne
or
ljmp
mov
mov
mov
icebp
dec
jg
push
test
fdivr
cld
and
int
leave
pop
sahf
mov
lea
cld
push
mov
ds
pop
xchg
mov
jle
dec
and
push
inc
xor
xchg
ja
rolb
mov
popf
hlt
jg
xor
incl
xor
dec
ret
push
inc
loope
aaa
cmpsb
push
fwait
push
sbb
lea
insl
xchg
push
in
decl
hlt
testl
add
stc
and
iret
in
and
or
sbb
pop
je
in
out
sub
xchg
dec
test
inc
hlt
sub
loop
outsb
call
ljmp
and
cmc
test
mov
dec
jo
and
insl
in
and
cmp
dec
lock
jmp
jmp
push
add
hlt
push
xchg
jl
push
xor
jecxz
pop
mov
fisubrl
xlat
mov
pop
jle
xor
aam
das
std
pop
cmc
xchg
mov
cli
call
dec
stc
js
int3
popf
incl
mov
jecxz
dec
fcoml
fwait
pop
push
js
pusha
stc
mov
mov
mov
fwait
and
inc
adc
push
jne
mov
incl
in
pop
xchg
adc
mov
jg
and
in
pushf
mov
cmc
movsb
insb
not
in
jne
push
pop
push
out
data16
incl
lods
iret
lret
sbb
inc
inc
scas
mov
lcall
call
cmpsb
xcrypt-cbc
cmpsl
push
pop
loopne
add
cmp
jp
test
cmp
ret
pop
icebp
mov
addr16
pop
cld
jl
popf
sub
or
movsl
jg
jmp
data16
cmp
test
push
clc
call
loope
cmp
les
insl
das
adc
cmc
out
in
fildl
cmp
inc
aam
inc
jmp
add
addr16
xor
imul
decl
and
or
sbb
lret
mov
fdivs
cmc
xchg
push
mov
call
push
jne
cmpsb
xlat
mov
cld
loopew
adc
push
lret
mov
fld
test
adc
in
mov
cltd
scas
jg
decl
fidivrs
popf
stos
mov
jmp
ljmp
stc
sub
lret
push
das
stc
les
test
pop
and
pop
cli
lods
push
xor
lock
jno
call
xchg
daa
jle
jae
shlb
jmp
push
push
in
movsl
leave
push
outsb
xchg
mov
mov
mov
pop
pop
clts
test
incl
test
idiv
lock
outsl
mov
incl
incb
in
jg
mov
mov
div
test
in
xchg
imul
bnd
dec
movsb
xchg
rorl
loopne
repz
or
jmp
or
xor
addl
rol
pop
push
sub
fs
std
pushf
jmp
add
inc
inc
push
in
incl
push
movl
outsl
fdivrp
jns
xor
mov
leave
ss
in
incl
dec
out
in
loopne
lea
xor
pop
lahf
cs
mov
adc
cli
dec
add
xor
pushf
jge
andl
cld
arpl
mov
lcall
pusha
stos
add
adc
or
add
add
or
rcrb
clc
sbb
cmc
push
xchg
scas
adc
data16
mov
ljmp
mov
add
rclb
mov
lods
push
jmp
fistpll
dec
and
push
sti
xchg
cli
lods
dec
dec
cmp
mov
scas
jge
push
outsb
push
loopne
mov
dec
inc
cmp
ljmp
mov
test
pop
mov
or
iret
sub
push
outsl
jns
mov
pop
call
adc
addr16
add
scas
cmp
push
dec
call
cmp
mov
sub
pushl
stos
jae
lock
mov
addb
sbb
dec
fmuls
clc
lcall
addr16
mov
lahf
rcrb
nop
pusha
lahf
in
push
dec
adc
int3
test
add
xchg
adc
ret
push
jmp
adc
sbb
incl
inc
and
jne
cld
sub
inc
popf
cmp
clc
push
aaa
cld
stos
sub
mov
pop
clc
jmp
xchg
lds
mov
inc
push
pusha
lods
test
pop
jg
test
inc
jl
or
or
in
jmp
xor
leave
dec
testb
repnz
push
xlat
add
mov
pushl
sub
jecxz
cmp
mov
lret
mov
test
push
inc
das
xchg
outsl
jo
pushl
decb
lea
inc
in
into
movsb
lea
adc
pop
adcl
jne
mov
or
pushl
out
sub
xor
pop
in
mov
outsl
fldenv
jae
jle
mov
inc
mov
das
cmpsb
jnp
push
xchg
or
aam
shll
ss
out
sub
pushl
into
jle
lock
mov
mov
inc
jl
adc
push
addr16
test
js
push
cwtl
mov
dec
mov
aaa
and
mov
cmp
lods
scas
aam
and
jb
incl
or
je
push
lods
mov
cmpsl
mov
loope
or
incb
lcall
xchg
pop
imul
xor
jge
push
mov
and
das
rcl
in
bswap
out
jmp
iret
push
jle
dec
xchg
cltd
xlat
xlat
push
push
orl
fldl
pop
das
addb
jg
add
jp
pop
roll
into
pop
push
roll
mov
inc
sub
cld
mov
fidivrs
push
outsl
lock
push
pop
call
loope
xchg
test
cmp
cmp
gs
jl
jmp
dec
loope
xor
cld
and
xor
push
sahf
jae
cmpsb
es
incl
pop
hlt
jae
iret
into
ljmp
dec
rcll
pop
push
ret
jb
or
int
mov
cmp
cli
enter
mov
mov
cmc
cmp
cltd
pushl
jmp
sub
les
ja
jg
outsl
dec
hlt
gs
icebp
jmp
mov
push
add
sub
sub
cltd
mov
ljmp
fwait
mov
or
imul
push
ljmp
fistpll
sbb
jecxz
add
movsb
test
sub
inc
inc
jecxz
mov
decl
aad
mov
xchg
adc
test
mov
lcall
mov
pop
jno
aad
mov
sar
pushl
jnp
sub
notl
popa
xor
mov
test
lahf
xchg
or
popf
lcall
incl
pushf
jno
std
xor
push
in
incl
bound
cmpb
pushl
fwait
cmp
pop
jb
sbb
insb
fistpll
and
shrl
sbbb
cld
jmp
pop
mov
test
dec
into
add
jbe
leave
jmp
mov
inc
test
aad
push
cmp
inc
les
incl
push
xchg
inc
testb
sar
stc
mov
adc
adcl
mov
hlt
out
mov
sbb
adc
ds
sbb
outsb
out
dec
and
jle
push
mov
lods
and
movb
inc
mulb
mov
xchg
fldl
mov
and
das
and
inc
jns
pop
push
or
cmp
nop
pushl
add
lock
xchg
mov
xor
test
add
aad
push
sbb
xchg
xchg
ljmp
addr16
pop
mov
aaa
rolb
xchg
pop
scas
mov
bndstx
std
mov
sub
mov
pop
dec
stos
sub
dec
dec
dec
sub
stc
mov
xor
call
jmp
loopne
xor
inc
mov
adc
pop
add
rcrl
decl
sbb
mov
cmpsb
inc
mov
rorb
jl
clc
daa
sbb
pop
daa
pop
les
sahf
add
loope
lret
dec
movsl
pop
or
pop
scas
in
dec
adc
pop
stc
out
or
push
mov
stos
lea
sti
mov
push
sahf
mov
faddp
decl
mov
cmp
pop
repnz
pop
mov
and
call
adc
add
mov
shrl
xchg
pop
mov
decl
incl
adc
imul
cli
js
es
lods
jo
xchg
movsb
ljmp
hlt
incl
ss
aam
jge
xchg
fcmovb
leave
pop
arpl
ret
movsl
mov
push
movsl
jmp
jecxz
idivb
sbbl
lcall
dec
xchg
mov
aam
jmp
adc
icebp
pcmpeqd
mov
or
hlt
aaa
jae
and
rcr
mov
imul
cwtl
sti
sbb
adc
pop
cmp
testl
sub
std
sbb
scas
push
rdtsc
test
dec
fbstp
stos
xchg
test
jbe
cld
das
std
mov
push
arpl
mov
stos
dec
xor
sub
ss
ljmp
adc
mov
mov
sbb
mov
xchg
adc
aaa
inc
inc
xor
pop
ja
ud0
add
mov
test
jle
arpl
roll
sbb
out
mov
daa
ud0
jmp
scas
jecxz
adc
inc
cmp
mov
orl
popf
pop
or
mov
repz
sbb
adc
cmpsb
xchg
out
bound
jg
jne
xor
cs
repz
sar
pop
add
lods
mov
inc
js
mov
mov
adc
clc
movb
add
fadds
adc
call
mov
cli
outsl
sbb
jo
mov
aad
dec
cmp
xor
decl
xorl
test
push
je
mov
les
push
bound
cmp
nop
add
sub
add
xlat
adc
jg
aaa
push
fnstsw
inc
sbb
jno
lret
lret
inc
test
mov
outsl
std
adc
je
pop
pop
out
mov
push
inc
in
lahf
and
push
out
pushf
mov
incl
decl
sbb
orb
les
pop
mov
jg
pushl
jge
jbe
imul
mov
sbb
or
decl
push
xchg
stc
cmp
loope
add
shl
fistpll
loopne
loope
cld
add
push
mov
in
je
sbb
mov
add
push
mov
sahf
pop
rorb
mov
loopne
sub
incl
movsl
mov
cmp
xor
fdivrs
push
pop
daa
out
rcrb
jl
out
cltd
mov
or
call
mov
mov
push
cwtl
adc
push
pop
mov
mov
push
and
mov
pop
sub
fsubrp
clc
shlb
in
test
call
inc
push
pop
cli
inc
push
clc
xchg
jle
outsb
movups
pop
and
push
jmp
jecxz
lock
fists
lret
aad
and
xchg
rolb
or
add
ljmp
inc
mov
js
push
xchg
subl
mov
cmp
ljmp
lock
xchg
ret
es
inc
mov
dec
jecxz
mov
pop
cld
sti
xor
jg
pop
cltd
push
aad
sahf
cld
fsubl
mov
ja
xchg
sub
in
incl
int3
out
bound
scas
and
mov
cli
movsl
jp
lcall
mull
mov
sbb
fisubrl
ljmp
push
dec
pop
push
pop
ljmp
in
mov
jns
mov
fldcw
inc
fmull
fnstcw
call
push
and
mov
dec
outsl
idivb
or
jl
stos
arpl
es
pop
or
mov
dec
es
outsl
or
adc
mov
nop
test
idivl
lcall
jo
pop
es
aas
add
jo
into
cmpsb
adc
adcl
lret
cmp
mov
aas
and
push
push
outsb
inc
shll
loop
outsl
sahf
push
gs
mov
loop
mov
adc
mov
movsl
mov
popl
mov
jmp
xchg
stc
cmp
stc
int3
mov
mov
fldcw
or
call
jmp
movsl
push
pop
inc
dec
arpl
test
mov
icebp
jnp
inc
jg
shll
dec
aaa
shl
mov
dec
pop
lea
add
push
mov
iret
pop
nop
decl
sti
xor
aam
and
pushf
lods
xchg
sub
lcall
push
repz
push
inc
rcrl
push
mov
cmp
mov
fildl
repz
scas
mov
add
ret
aaa
or
add
push
lret
jnp
decl
or
jl
ret
lahf
ds
daa
dec
jmp
xor
rorl
int3
adc
push
mov
cli
stos
insl
add
inc
ja
or
test
jmp
out
mov
or
adc
mov
outsl
cld
pushl
xor
inc
pushf
dec
loopne
rorl
es
sbb
pop
in
adc
mov
cmc
out
sbbb
inc
loop
adc
mov
fadd
decb
cld
jmp
pop
aas
or
aam
je
imul
mov
cld
insb
push
clc
incl
pop
sahf
stos
fdivrs
out
insl
jg
push
sbb
sub
dec
jae
and
bound
gs
imull
mov
jnp
push
call
and
add
lock
jne
adc
pop
dec
out
insl
rorb
sbb
push
jg
push
jmp
pop
mov
pop
xor
ficoml
jno
decb
in
call
inc
test
rcrb
add
dec
mov
jae
sbb
incl
sar
incl
inc
or
push
add
ss
xor
jmp
aaa
mov
cmpsb
lea
or
decl
out
das
mov
jo
lds
int3
sbb
fidivrs
jnp
out
out
incl
add
in
lods
in
mov
js
xchg
imul
pushl
pop
push
rorb
dec
pop
fsubl
mov
idiv
add
notb
inc
dec
jmp
or
das
addr16
outsl
movsl
ret
imul
fadds
xor
mov
sti
jg
mov
leave
push
dec
test
rorb
jno
ljmp
lcall
fwait
mov
loop
push
mov
movsb
lock
inc
mov
sbb
call
jno
cli
adc
icebp
outsl
fcompl
jg
push
rolb
add
lcall
jne
fsubs
xchg
arpl
shrl
cli
movsb
push
test
push
pushl
aas
int
mov
das
xorl
pop
xchg
or
lods
iret
dec
cmpsb
mov
or
ret
sub
scas
dec
add
sub
out
inc
mov
sub
dec
addps
cld
push
mov
sbb
ja
pop
and
or
orb
cmp
ljmp
fists
int3
or
paddb
aaa
jbe
jno
mov
das
xchg
int
andb
or
fldl
sub
orb
jnp
pop
sbb
in
adc
pop
clc
ljmp
inc
test
lock
lock
mov
inc
sbb
cli
fdiv
inc
mov
lds
fadd
sub
mov
icebp
ljmp
xchg
adc
adc
out
cmpb
out
cmp
jbe
push
push
or
movsl
lcall
shll
inc
popl
sbb
dec
mov
xchg
dec
mov
lods
mov
lock
cmpsl
fwait
dec
mov
incl
add
dec
push
mov
aam
scas
or
mov
adc
cmp
or
or
nop
push
outsl
cmp
mov
xlat
add
hlt
ljmp
mov
aas
jg
xlat
cmp
sub
loopne
dec
inc
jo
ljmp
and
idivb
inc
xor
outsl
lret
lock
inc
in
sub
insl
jecxz
leave
mov
jns
cmp
movsl
xchg
or
push
loopne
add
ficompl
in
pop
xchg
jne
fdivs
adc
hlt
pop
cli
jae
jnp
add
insb
mov
cmp
dec
pusha
es
call
dec
int
clc
insl
pop
xchg
pop
cmp
xchg
pop
xchg
stc
in
fdivs
in
arpl
mov
incl
lock
or
cltd
aas
lods
or
jle
xchg
sahf
int
add
arpl
loope
jmp
pop
subb
imul
mov
jmp
pusha
mov
push
scas
mov
sbb
xchg
enter
lahf
mov
mov
pop
test
pop
out
leave
xchg
or
cmp
addr16
call
jmp
gs
sbb
xchg
jg
or
pushf
aaa
or
mov
dec
jl
push
mov
mov
push
adc
mov
sub
addb
es
into
lcall
clc
push
or
mov
dec
xor
sbb
mov
in
cmc
dec
fnstcw
cmpl
jp
push
cli
jg
test
jb
pushf
mov
fmull
pop
sub
mov
movsb
sahf
das
mov
mov
fnstenv
into
or
lea
jb
inc
gs
mov
shll
lcall
sbb
hlt
or
arpl
stc
xchg
jle
push
and
jg
add
dec
dec
fists
jo
dec
call
jg
lret
xchg
cmp
jg
jne
pop
sti
and
cld
call
jns
jmp
popa
out
fldt
aad
xor
lret
and
fnstsw
call
add
adc
les
into
adc
mov
das
cld
incl
loop
add
add
aam
xor
imul
adc
std
jb
cmp
bound
cld
incl
ds
inc
jmp
jecxz
add
dec
mov
cmp
pop
int
cmc
movsl
mov
or
fs
jg
movsb
cmp
cwtl
out
sbb
hlt
imull
fcmovu
out
mov
icebp
outsl
incl
dec
adc
js
jp
loopne
jmp
incl
xor
mov
loop
sbb
pop
outsb
or
std
inc
mov
sbb
push
jne
lods
cmpsb
fstpt
add
jmp
inc
push
sbb
xorps
mov
setp
fdivr
inc
pop
cmpsl
stos
sbb
and
cmp
cmp
scas
cmp
call
cmp
sub
adc
outsb
sub
out
out
xlat
lock
mov
in
movsb
mov
clc
in
mov
jle
mov
and
and
xchg
es
mov
stos
pushf
add
ja
sub
es
jno
xlat
dec
sub
testb
inc
or
movsb
lret
outsb
std
outsl
fisttps
and
ja
fstpl
mov
std
mov
lcall
sbb
xorb
add
cmp
jmp
inc
add
inc
add
jb
ja
push
fucomip
fucomip
test
push
mov
adc
in
mov
ljmp
lcall
sahf
cmp
pop
arpl
xchg
in
lods
lock
loop
pop
das
lds
xchg
movsb
les
and
mov
das
ds
ret
mov
dec
mov
add
and
out
call
push
push
int3
lods
or
out
hlt
jmp
jmp
mov
dec
sbb
jns
adc
mov
sti
sub
stos
push
jmp
inc
dec
xchg
fdivr
imul
inc
es
jno
dec
mov
add
xor
xor
xchg
xor
pop
dec
jecxz
loop
sub
adc
mov
add
fildll
repz
outsb
push
push
addr16
mov
rclb
das
lock
pop
ss
pop
dec
lea
jo
out
jns
int3
movsb
test
cli
repnz
push
and
incl
cmp
dec
jae
cmpsb
add
pop
decl
pop
pop
and
lods
push
sub
cmpsb
or
adc
mov
mov
push
inc
shlb
cmp
or
in
mov
inc
pop
mov
fwait
ljmp
out
sarb
mov
mov
neg
popa
jmp
mov
cli
incl
adc
mov
out
clc
decl
push
lret
shr
or
lahf
dec
mov
add
jb
sub
jnp
movb
pop
ljmp
lods
inc
insb
test
jmp
push
imul
cld
out
and
idivl
icebp
popf
jg
pushl
adc
outsb
mov
mov
inc
ss
pop
jmp
and
xor
lcall
mov
push
dec
mov
jae
loope
daa
push
add
xchg
mov
jg
mov
mov
inc
xor
pop
sbb
dec
cmpl
fldcw
jmp
popf
xcrypt-cfb
cmpsl
popa
lret
mov
mov
or
jg
mov
adc
adc
arpl
cmp
repnz
sbb
lock
pushl
iret
out
xor
mov
sti
pop
or
inc
out
and
pushl
sub
inc
mov
mov
aaa
aam
jle
inc
stos
sub
xor
decl
imul
push
xor
adc
mull
add
push
jmp
pushl
aaa
cmp
inc
lret
or
sub
add
enter
jg
lret
lcall
xor
lds
inc
cli
cmp
jmp
decl
mov
xor
and
jb
mov
je
jb
lods
and
andl
mov
mov
bsr
into
lret
jmp
push
mov
xchg
push
lcall
cmp
aad
sub
add
push
pop
addr16
pop
int
test
out
fnstsw
incl
pop
inc
insl
jge
cmp
aaa
xchg
or
cltd
jo
inc
int
jno
call
inc
pop
repnz
clc
pop
pop
dec
arpl
aam
aas
ljmp
pop
fbstp
jno
flds
sub
adc
mov
js
call
je
jp
mov
inc
adc
sahf
test
ljmp
and
fwait
or
adcl
ds
sbb
lcall
sbb
and
inc
pop
push
lret
leave
in
cmpsb
fcompl
ds
fnstsw
cmp
xor
cmp
or
fiaddl
addb
shrl
imul
fisubl
std
xor
or
shl
xchg
aas
dec
pop
outsl
push
and
ja
push
rcrl
sarb
sbb
sub
js
mov
pop
cmp
clc
pop
mov
loop
adc
push
inc
mov
pop
loope
xchg
xchg
addr16
ljmp
in
push
inc
filds
scas
scas
pop
les
imul
loop
dec
imul
rol
cmp
ljmp
mov
jecxz
inc
sti
bnd
jae
cmp
out
sbb
cli
xor
fs
aas
ljmp
sub
imul
stos
or
and
push
xchg
gs
imul
scas
xchg
rorl
pop
adc
outsl
sbb
dec
stos
outsb
in
mov
test
pop
mov
cmp
dec
pop
outsb
add
es
fucomip
clc
push
sbb
mov
or
mov
mov
hlt
xchg
sub
ljmp
out
inc
mov
test
popa
jecxz
cld
mov
add
mov
push
data16
add
jns
cmpsl
adc
mov
and
push
sub
push
dec
int
mov
sub
dec
jge
mov
mov
jne
mov
mov
sti
insb
sub
pop
je
lret
jb
out
jne
addr16
mov
or
jmp
inc
inc
aam
lods
mov
inc
ljmp
decl
std
sbb
pop
dec
fwait
mov
bound
dec
testl
dec
or
jl
pop
push
sub
sub
insb
pop
fwait
ljmp
mov
dec
notb
scas
popa
or
sub
rorb
ljmp
adc
jae
xor
sbb
roll
pop
clc
sbbb
add
ret
mov
shl
fidivrs
insb
adc
jmp
pop
inc
or
inc
sahf
fidivrs
add
mov
repnz
add
stos
outsl
icebp
incl
shrb
out
sub
mov
jg,pn
jmp
mov
sbb
mov
pop
idivl
mov
lcall
call
cs
push
addl
lcall
jno
in
xlat
mov
repz
mov
pop
insb
outsb
cli
dec
mov
pushf
or
incl
mov
pop
aad
jecxz
test
pusha
dec
int
jae
imul
sub
sbb
mov
jae
data16
ljmp
cld
lahf
ja
das
pop
lret
fdivrl
pop
mov
adc
pop
out
cmp
inc
adc
mov
add
aaa
pop
popf
dec
das
jmp
xor
fidivs
cmp
inc
mov
inc
jns
popa
or
cmp
mov
mov
xchg
lahf
jg
pop
pop
insb
pop
pushf
iret
or
jg
pushl
hlt
cmp
sahf
inc
call
mov
stos
fldl
push
jae
jg
outsl
pusha
cltd
xchg
mov
push
adc
in
xchg
arpl
movsl
xchg
jno
ljmp
xchg
loope
notrack
and
xchg
iret
imul
xchg
inc
pop
push
lcall
push
ja
pop
aad
mov
repnz
ret
and
or
icebp
jmp
arpl
pop
movsb
adcb
push
rorl
movsl
jl,pt
lcall
ret
and
ss
stos
into
ds
jmp
mov
jb
cmp
add
sti
sub
sub
pop
ficoml
mov
std
add
jmp
pushf
or
jbe
fndisi(8087
cmp
cltd
mov
ljmp
mov
enter
lret
loopne
sub
push
rcr
mov
insl
dec
enter
lcall
fwait
sbb
xchg
inc
popl
and
fwait
stc
cmpsl
ret
jecxz
cmp
xchg
aam
lcall
fdivr
fdivrp
adc
mov
dec
fwait
xor
call
pop
popf
sub
insb
cmpsl
pop
js
js
jecxz
hlt
pop
cmp
test
mov
xor
incl
icebp
insl
add
sub
or
nop
arpl
mov
xchg
jmp
incl
nop
mov
movb
in
adc
or
and
jl
call
jl
or
sahf
idivb
sbb
stos
jge
jl
mov
jle
jo
jg
mov
mov
dec
or
adc
push
pop
dec
push
ss
jo
jae
stos
stos
das
std
pop
cli
and
mov
xchg
popa
or
mov
push
loopne
clc
call
incl
mov
sub
sbb
inc
aad
add
lods
and
xor
jae
mov
imul
mov
into
in
pushf
add
lea
ja
push
mov
sub
pushl
cmp
in
xlat
cmc
mov
mov
shl
mov
adc
rcrb
dec
dec
mov
bound
or
push
gs
ud1
scas
insb
adc
jmp
lods
decb
incl
fldl
cltd
adc
dec
lods
hlt
push
adc
decl
rclb
mov
out
pushf
dec
mov
fwait
sub
call
test
dec
clc
mov
jb
mov
xor
add
rcr
decl
lea
mov
inc
mov
xchg
in
and
negb
scas
cmpsb
dec
test
pop
mov
lcall
adc
jecxz
mov
mov
loope
popf
add
push
xor
ljmp
mov
movsb
lcall
ljmp
scas
cmp
inc
and
loopne
aam
xor
bound
lret
inc
incl
aad
jmp
popa
jb
xor
addr16
ja
jmp
or
mov
xor
repnz
cmp
addr16
mov
repz
aas
push
inc
shr
rcrl
pop
call
mov
out
and
imul
jmp
adc
imul
add
mov
or
cmc
daa
mov
adc
ljmp
lock
dec
and
fidivl
adc
push
int
and
fsubs
scas
jb
call
arpl
repz
bound
xchg
jg
or
mov
xchg
mov
sub
push
mov
rorb
push
stos
lret
test
das
push
push
mov
jp
sbb
decl
pop
inc
mov
jecxz
sbbl
xchg
push
inc
in
sbb
pusha
lcall
call
scas
mov
xchg
daa
or
xor
js
xchg
push
fmul
ja
jle
pop
call
dec
jne
sbb
and
mov
nop
movsl
push
notl
cld
add
incl
jecxz
rol
mov
shrl
outsl
nop
and
jl
mov
add
and
add
test
xor
aam
pop
dec
lret
imulb
lock
call
shr
in
leave
xchg
jmp
je
jge
clc
cmp
mov
push
adc
or
addl
in
mov
lcall
pop
dec
insl
scas
fdivl
clc
scas
aad
addb
adc
lcall
test
push
sti
or
pop
loop
outsb
loopne
mov
fbld
mov
xlat
leave
std
push
inc
inc
inc
scas
or
add
dec
pop
add
and
pop
jb
jae
cmc
mov
stos
xor
aam
pushl
clc
or
inc
add
mov
push
fucomp
and
or
xor
pushl
clc
mov
add
mov
jmp
or
mov
gs
or
mov
shlb
push
add
sub
clc
dec
jae
cmp
jo
mov
pop
mov
rolb
pop
sbb
push
fildll
dec
add
jnp
adc
out
adc
call
inc
outsl
hlt
mov
jp
sbb
cmp
lock
ja
sub
std
ficoms
xor
lret
btr
stc
sub
fildl
pop
adc
aas
enter
pand
add
ljmp
enter
or
lods
inc
rol
fs
pop
loop
test
mov
iret
cmc
aad
adc
or
pop
decl
push
jbe
inc
push
xchg
out
fimull
mov
ja
or
stos
call
dec
mov
mov
jg
shr
ja
push
aad
test
pop
test
nopl
loopne
testl
call
pop
imul
jb
insl
stos
cbtw
out
sub
add
ljmp
add
and
bound
call
js
lods
enter
push
pop
fsubrp
pop
adc
rclb
jnp
xchg
add
pop
loopne
scas
jmp
xor
shrd
sub
or
loopne
inc
stos
popf
pushf
add
mov
cmp
dec
incl
shlb
dec
aas
xchg
out
adc
ljmp
dec
mov
aaa
pop
push
jmp
pop
call
inc
cmp
inc
xor
and
xchg
push
mov
mov
test
lcall
mov
pop
jno
push
push
cmpb
jl
insb
push
or
mov
stc
xchg
jp
scas
bound
adcl
ljmp
xchg
addl
jae
jge
loopne
mov
cwtl
enter
inc
sarb
cmp
fdivr
movsl
incl
mov
inc
push
sub
xor
dec
daa
inc
mov
call
or
fists
xor
or
push
jae
ja
cmpsl
ret
into
add
es
inc
push
enter
fnstsw
adc
mulb
push
jg
sbb
aaa
inc
or
cmp
mov
aam
xchg
sbb
call
shll
push
sub
mov
mov
popa
lcall
loope
jg
push
in
push
les
lret
test
jle
jnp
enter
mov
dec
add
push
addr16
fcmovnbe
xlat
mov
push
leave
cmp
call
sub
test
fwait
mov
sbb
test
adc
dec
jmp
sbb
mov
lods
add
or
mov
xchg
fdivrl
pop
dec
std
mov
lcall
push
enter
loopne
mov
fldl
mov
out
testb
lock
push
outsb
xchg
out
jge
loopne
mov
mov
jmp
or
cltd
or
call
dec
dec
pop
push
mov
lds
jg
mov
aas
iret
rcrb
mov
fxch
mov
call
fs
jb
mov
and
lcall
xchg
mov
cmp
scas
pop
push
push
fdiv
push
movsb
lods
fmuls
pop
jecxz
inc
lcall
xchg
push
test
andb
adc
out
mov
mov
xchg
xchg
decl
mov
jle
stos
cli
pusha
mov
fs
inc
xor
xchg
pop
call
in
shrb
sbb
scas
rcl
fcmovbe
arpl
decl
or
jae
test
mov
pop
paddsb
pop
add
in
jmp
pop
mov
jmp
stc
fwait
mov
xor
add
das
push
lret
shr
xor
cmc
add
cmc
and
pop
addr16
mov
mov
mov
mov
imul
dec
mov
push
movsl
cmp
sahf
mov
ret
add
mov
or
mov
call
arpl
jmp
and
pop
or
jmp
or
sub
mov
loop
add
ljmp
cmova
mov
dec
xor
mov
lret
fistl
test
push
pushl
adc
sti
and
shr
dec
leave
mov
xchg
mov
sub
ljmp
test
add
or
inc
or
jns
sbb
pop
cmp
dec
push
mov
nop
lret
sbb
int
cli
jg
mov
ds
dec
sub
aas
add
fistpll
incl
nop
or
mov
out
jl
mov
jg
les
int3
cltd
adc
ljmp
movsb
hlt
jno
aam
inc
cld
mov
mov
insb
jmp
loope
loopne
out
incl
in
cmp
mov
arpl
mov
outsl
sbb
hlt
cmp
ja
pop
pop
xchg
push
fwait
cmp
jp
loopne
jg
xchg
roll
push
dec
xchg
f2xm1
lcall
inc
push
xor
call
sub
je
clc
mov
pop
lods
insb
lcall
ds
cltd
mov
ret
inc
inc
jo
lret
xchg
movsb
push
jecxz
rorl
jp
lea
pop
clc
fucomip
dec
push
cmp
inc
je
push
xchg
pop
cmp
mov
push
or
loop
aam
iret
and
movsb
lret
and
push
xchg
jg
mov
incl
enter
repz
push
imul
jbe
cmp
inc
rolb
sahf
out
push
cld
pop
mov
cmp
cmc
cmpsl
lock
mov
add
cmp
mov
mov
jb,pt
pop
lahf
insb
stos
sbb
or
adc
cltd
decl
dec
scas
addb
and
movsb
and
divb
or
jp
out
xchg
das
ljmp
imulb
in
repnz
scas
inc
loope
pop
xchg
mov
aaa
sbb
pushl
fistps
mov
test
push
arpl
or
cmp
loopne
xchg
dec
js
out
mov
xor
popa
ss
adc
lock
add
lea
std
inc
adc
cs
enter
into
pop
incl
fidivrl
adc
iret
inc
cmc
or
inc
les
xor
sarb
cmc
decl
movsl
cmc
pop
sub
in
inc
cmc
lods
cmpsl
popa
call
cmp
ret
adc
repnz
xchg
mov
rcr
push
mov
sbbb
int
test
adc
mov
mov
lahf
inc
push
mov
repz
fidivrl
jg
pushl
xor
mov
jne
out
push
loopne
mov
scas
or
icebp
incl
stos
test
cmc
hlt
fdivrp
call
shll
mov
dec
and
adc
lret
sti
or
incb
xlat
mov
pop
inc
pushf
mov
mov
mov
push
inc
ljmp
dec
xlat
imul
movsb
outsb
push
or
mov
leave
fdivrp
incl
jne
and
jge
push
or
mov
cmc
jne
fstl
push
mov
jmp
sti
scas
mov
inc
or
jmp
sub
std
cmp
aad
enter
popa
pop
inc
mov
ret
pop
jle
xor
lods
pop
outsb
mov
fsubrs
testb
rcl
xor
jbe
push
fisttps
mov
pop
repz
inc
in
movsb
or
roll
vmulsd
push
pop
test
incl
sub
fstps
dec
mov
aas
in
pop
xor
push
ljmp
std
das
or
addr16
push
clc
inc
jecxz
stos
aad
loope
repnz
jg
sbb
mov
daa
xor
xchg
leave
outsl
icebp
pop
xchg
clc
cmpsb
lock
notb
aaa
scas
clc
lret
sar
pushl
push
rclb
cld
xchg
pop
cmc
lcall
lock
mov
adc
ficoml
mov
xchg
lcall
push
lods
outsl
pusha
mov
filds
jbe
adc
sbb
or
clc
fists
jnp
mov
lods
mov
mov
or
pushl
or
dec
movsl
aas
scas
fldcw
inc
out
fsub
fnstcw
aas
mov
push
insl
cmp
mov
adc
call
mov
mov
pop
clc
lcall
stos
or
out
pop
stc
orb
mov
or
jmp
loop
adc
pusha
adc
mov
xor
mov
xchg
aaa
or
lock
add
mov
xor
pushl
cmpsl
int3
sahf
stos
arpl
add
jo
sub
push
lods
mov
inc
sar
sbb
push
inc
or
cld
or
push
jae
cs
xor
loope,pn
pop
into
pop
test
sbb
scas
loope
roll
push
mov
orb
jg
mov
sahf
into
mov
rclb
cmp
dec
psadbw
imul
incl
cmpsl
int
xchg
data16
ja
mov
push
mov
ljmp
adc
dec
mov
mov
mov
xor
fnstcw
mov
aam
jecxz
or
cwtl
pop
sbb
sbb
lcall
repnz
push
jnp
push
mov
mov
xor
pop
dec
sub
pop
lret
mov
test
ljmp
add
into
shl
into
lock
out
leave
xlat
aaa
fnstsw
inc
mov
pop
jno
int
mov
test
adcl
stos
add
pop
int3
sub
into
push
push
mov
pop
push
push
mov
jg
jae
mov
mov
xor
mov
xchg
jnp
call
mov
enter
mov
sub
lock
mov
outsl
lock
rolb
mov
cmp
inc
or
inc
pop
dec
test
add
cmp
sbb
mov
jmp
stc
dec
call
imul
fwait
cld
mov
les
ljmp
inc
mov
xor
or
sbb
call
or
call
je
jmp
and
es
pushl
push
add
imulb
std
cmpsl
test
rolb
das
lahf
iret
push
sahf
cli
outsl
adc
adc
sub
rcr
adc
aam
aaa
jg
jmp
pop
cmc
fcomi
xchg
jmp
mov
cltd
push
sbbl
push
xor
cmp
sarb
out
fstpt
sbb
scas
jp
inc
push
repz
mov
jl
adc
stos
std
incl
and
cmp
insl
out
add
je
mov
jge
decl
push
movsl
push
jb
push
xor
mov
push
fildll
push
lcall
orb
adc
outsl
fs
adc
orl
or
adc
jle
insb
std
push
insl
enter
repnz
orb
dec
in
mov
movl
in
lea
or
sub
cwtl
aam
out
ljmp
je
add
adc
ret
mov
jecxz
jecxz
pop
imul
xchg
sbb
inc
lock
cltd
or
sar
xor
xchg
mov
lcall
pop
sub
aaa
movsb
shl
mov
mov
std
insb
add
and
push
movsb
repnz
jae
jns
aas
mov
daa
scas
add
mov
xchg
or
push
test
mov
ljmp
jmp
jbe
cmpsb
jbe
negb
test
xlat
cmp
sub
pop
mov
cmpsb
add
adc
test
arpl
pushl
fistps
pop
push
std
bound
sub
out
jp
shr
pushl
xchg
and
add
fisttps
sbb
rolb
int3
xor
fisttpl
call
mov
sti
sbb
xor
les
std
popl
lock
decl
mov
lods
add
sbb
addr16
ds
jge
jno
jecxz
adc
or
xor
pop
stc
sbb
das
ret
cmp
lods
jmp
sarl
sbb
jmp
data16
jle
aad
cmp
jno
or
outsl
icebp
lcall
ret
pop
es
bound
sbb
mov
out
xchg
pop
loopne
icebp
xchg
jg
aaa
inc
rol
data16
adc
ret
rolb
aas
es
fdivrl
push
mov
sub
adc
ret
add
jg
cmc
das
lock
fdivl
popa
mov
push
bound
imul
jg
mov
jne
add
sbb
jle
xor
and
mov
mov
mov
call
lcall
bound
mov
incl
dec
jb
repz
sahf
lea
loope
cmp
xlat
hlt
imul
scas
fdivr
ljmp
lock
ret
test
mov
cmp
pop
ljmp
incl
rcl
push
dec
sub
enter
not
call
dec
sarl
or
cld
stc
pop
rol
xor
sbb
ljmp
add
and
sbb
xchg
mov
das
jl
ljmp
into
push
push
sarl
movsb
or
jbe
addr16
dec
iret
mov
std
decl
dec
sbb
hlt
push
lret
outsb
dec
cs
xchg
call
popf
loope
or
push
sbb
inc
insl
xor
hlt
jbe
in
mov
fldt
adc
outsb
cwtl
push
jae
decl
push
dec
clc
cmp
add
inc
mov
fs
aad
cs
aad
call
ljmp
add
repz
jmp
out
stc
mov
jo
mov
push
sti
mov
xchg
aad
xchg
sub
into
xchg
sbb
pushl
lods
data16
lcall
dec
or
pop
idiv
dec
jg
repnz
aad
inc
push
movsb
fadd
stos
pusha
xchg
xor
dec
ljmp
sti
test
fldt
adc
pop
and
sbb
jb
fwait
mov
pop
pop
jge
fistl
in
insl
in
popa
pop
hlt
cli
cld
stos
mov
lcall
popa
jmp
mov
jne
popa
hlt
xchg
inc
sub
mov
jmp
xor
dec
push
add
xchg
adc
pop
fisubrl
lret
aam
psubw
jg
dec
lcall
mov
mov
lcall
and
pop
add
cmp
push
jg
inc
jg
jns
pop
dec
mov
pop
aad
push
jecxz
pop
lretw
push
sub
aaa
mov
lods
out
mov
jnp
decl
in
lahf
mov
mov
xor
cmp
sub
cmc
in
pop
xorb
adc
xchg
lock
decl
cld
mov
lret
push
mov
fcompl
mov
imul
add
mov
mov
pop
fstpl
pop
cmp
jecxz
outsl
mov
mov
mov
jge
jg
adc
ficomps
ja
add
inc
cmp
cmp
test
or
ret
jnp
ljmp
cld
movsb
xchg
inc
addr16
insb
cs
lea
mov
xchg
mov
cld
push
mov
es
mov
xor
xchg
lods
push
pop
dec
decl
std
mov
jle
or
idivl
jecxz
cmc
mov
xchg
enter
mov
dec
inc
mov
jl
in
mov
fistl
dec
add
sbb
in
mov
inc
pusha
shrb
jb
push
fmuls
pop
ljmp
lods
cmp
or
fmuls
jge
mov
out
stc
rolb
jg
fcomip
lods
leave
sub
lea
inc
sahf
je
lret
enter
stos
jmp
imul
lahf
out
mov
cmc
xchg
xchg
lcall
push
fadd
inc
dec
add
and
sarb
js
mov
mov
jmp
pop
fbld
xor
js
fs
stos
pop
jb
pushl
je
push
call
fldenv
jb
cmp
xor
fdivr
decl
or
xor
int3
jbe
arpl
xchg
cmp
mull
xor
and
sbb
call
dec
push
sahf
das
je
dec
out
cmp
add
jle
pop
fst
inc
push
pop
lods
out
jo
cltd
push
test
mov
mov
in
lahf
xlat
cs
or
sti
mov
ja
cld
dec
scas
mov
arpl
lret
and
js
mov
rcrb
sub
incl
adc
outsb
cmp
mov
lret
lret
push
icebp
push
loop
lcall
cld
mov
cmp
bound
dec
lret
mov
test
cmpsl
cmp
incl
outsb
jne
ret
int
pop
xor
mov
ds
aaa
es
mov
dec
xchg
scas
fcompl
jmp
fwait
mov
or
test
mov
sbb
inc
jmp
inc
rcrb
xchg
std
decl
xchg
js
cmc
jns
dec
pop
popa
inc
mov
ret
fbld
xor
fwait
adc
enter
sbb
mov
inc
rcr
sbb
imul
decl
inc
popa
mov
jp
or
loop
jno
fdivrl
rcl
cwtl
and
ljmp
aad
test
ret
jb
jmp
mov
mov
lret
decl
mov
lahf
ret
jmp
scas
arpl
and
incl
int
roll
pusha
push
pop
nop
icebp
lods
mov
aas
dec
push
push
call
ljmp
pop
leave
cmp
and
pop
shrb
lcall
mov
pop
in
xor
idivl
in
aam
and
lret
inc
dec
sub
xlat
xor
or
divb
je
scas
es
add
stos
xor
loope
movsb
dec
rolb
shll
adc
out
xchg
gs
push
jmp
cwtl
faddl
fadds
cmpsb
pop
sbb
into
ret
pop
call
sarb
adc
inc
dec
les
pop
adc
out
testl
aam
jmp
push
adc
mov
mov
icebp
outsb
mov
cmp
iret
xchg
cli
lcall
xchg
mov
jmp
rcl
push
dec
mov
inc
or
in
fdivrl
xor
ds
dec
popf
mov
or
push
adc
mov
push
stc
orl
das
xor
fwait
push
add
mov
ret
fldt
ljmp
andb
xchg
mov
ljmp
push
jmp
into
clc
push
sbb
push
xchg
and
cmp
ja
dec
pop
jp
pop
dec
inc
push
cli
repz
call
popa
cmp
pusha
das
std
ljmp
and
adc
fmul
cwtl
dec
sti
repnz
cld
clc
pushf
andb
int
add
and
in
sbb
sti
cmp
cld
aad
mov
int3
cmp
or
shll
imul
in
clc
decl
sbb
xchg
sbb
xor
jl
aam
xchg
fdivr
shlb
imul
jg
push
adc
pop
mov
fistpll
repz
push
lret
int3
out
push
jl
outsb
fistpll
fwait
lcall
dec
cld
mov
pushf
sbb
and
cli
mov
mov
xchg
mov
jmp
push
push
sub
mov
cmpsb
lds
and
mov
or
sbb
clc
lcall
es
adc
addb
mov
sub
cmp
inc
ja
incl
dec
ret
pop
popa
movsb
mov
xlat
sbb
and
incl
jmp
insl
iret
or
xchg
cmp
nop
sub
dec
inc
sti
loop
ja
adc
test
aam
and
sbb
fs
cmp
xchg
mov
mov
inc
iret
lods
or
xor
xchg
mov
es
pop
or
jl
cltd
sub
js
nop
shll
shll
imul
movsb
aam
lcall
push
jg
call
call
push
icebp
pop
add
test
pushf
xchg
mov
jne
nop
pushf
fnstcw
in
pop
je
hlt
fimuls
in
cmp
adc
or
mov
mov
cmp
jg
xor
outsl
icebp
jmp
cmp
mov
adc
adc
js
push
mov
push
das
sub
int
or
jno
loop
jae
sar
std
lods
sub
lods
sub
lahf
add
sub
cld
ljmp
inc
dec
sub
ljmp
sub
pop
xchg
loopne
mov
sbb
jmp
sbb
push
jmp
mov
test
test
lcall
mov
jno
xchg
lcall
xchg
outsb
cmc
cmp
dec
subl
into
sti
xor
in
pop
xor
dec
cmp
cmp
movsb
jg
mov
xchg
outsl
adc
mov
and
ss
lcall
adc
sub
pop
mov
xorl
aaa
movsl
fldlg2
jp
int
rcrl
xchg
pop
ficoms
adc
dec
mov
inc
ret
cmp
xchg
cmp
scas
jnp
xchg
nop
jg
add
mov
jmp
cli
xchg
jecxz
dec
mov
decl
call
mov
in
sub
scas
inc
xor
sbb
rol
xchg
stos
adc
jg
loopne
ss
mov
or
imul
lcall
pushl
xchg
jae
fwait
dec
xor
jecxz
es
jmp
cli
jmp
cmpb
pop
mov
inc
xchg
jb
push
sti
xchg
xchg
lcall
sub
out
cmp
add
or
or
jg
pop
or
dec
ret
dec
popa
int
mov
enter
cmc
push
int
jmp
cmp
int3
pushl
cwtl
xor
add
in
pusha
xchg
jge
and
in
nop
dec
jecxz
dec
and
call
ficomps
leave
cs
inc
sub
cld
stos
incl
jg
push
mov
mov
push
mov
mov
in
mov
clc
mov
xchg
lods
ret
mov
push
mov
subb
ja
call
adc
dec
cmp
cmpsb
decl
stos
xchg
xor
js
mov
pop
jmp
iret
jno
jg
sbb
test
xchg
das
cmpsl
sarb
push
xor
mov
mov
test
sahf
xor
aad
outsb
test
pop
xchg
pop
push
push
repnz
call
push
cli
hlt
repnz
and
pop
fsubp
jl
fs
ljmp
cld
dec
adc
or
mov
or
popa
mov
loopne
incl
stos
out
mov
insb
les
mov
in
xor
fucomip
fisubrs
jmp
ficompl
lcall
jp
stc
imul
ljmp
icebp
jg
outsl
fiadds
dec
pop
mov
cmc
or
xlat
movsl
cld
pop
loopne
mov
fimull
ret
pop
out
lods
ret
aas
sbb
jg
out
mov
cmpsb
in
incb
jbe
in
iret
pop
das
das
lock
jg
and
mov
adc
push
dec
push
jl
jns
xor
dec
lods
xor
inc
push
test
nop
pop
insb
jns
or
mov
inc
mov
jmp
dec
imul
sti
and
loope
icebp
jmp
bound
fstl
stos
call
sbb
stos
push
dec
push
insl
in
and
test
jge
cmp
jle
dec
gs
lds
clc
je
dec
push
push
push
inc
lock
incl
fdiv
sbb
outsl
mov
inc
mov
xor
inc
or
imul
push
movsl
push
pusha
fisttps
inc
adc
push
sti
ud0
jmp
std
mov
sbb
fucomi
dec
xor
xlat
aaa
xor
or
sub
rcrb
inc
repnz
ljmp
fdivs
mov
mov
ss
add
test
jge
mov
das
aas
pop
mov
dec
xlat
and
mov
mov
lret
jae
sbb
pushl
mov
sbb
xor
sub
or
in
cli
pushl
int
leave
push
and
sti
push
fnstsw
cmp
mov
lea
xor
loopne
fistpl
mov
push
mov
fwait
mov
jne
mov
and
or
pushl
addb
out
psubsb
out
jmp
sar
jg
clc
das
divl
paddd
mov
mov
ds
test
shlb
sub
outsl
cld
incl
pop
inc
enter
aaa
data16
sbb
inc
rol
sub
adc
mov
jg
cli
adc
xchg
mov
es
test
pushf
dec
xchg
in
lods
push
jmp
js
aas
aam
and
in
cltd
cmovp
mov
shrl
repnz
call
outsb
lcall
cmp
out
cmp
adc
pop
std
jg
in
jb
jbe
push
jmp
rorl
stos
xrelease
xchg
pushl
mov
adc
fistpl
ret
ja
inc
adc
jg
jmp
cltd
lods
cvtdq2ps
std
sbb
outsl
ret
fwait
dec
adc
das
mov
lcall
inc
jnp
cltd
jns
pop
lret
js
cmp
pop
ret
sbb
int3
mov
mov
and
loopne
decl
outsb
add
cmpsb
fdivl
loopne
pop
imul
push
fists
fbstp
fwait
inc
test
stc
push
inc
pop
xchg
jo
cmp
scas
sub
jg
xacquire
das
icebp
jnp
int3
mov
mov
inc
jns
pop
cmpsl
sbb
es
xor
jg
stos
imul
add
mov
decl
fistl
xor
and
mov
leave
cmc
outsb
mov
decl
jg
test
cltd
jmp
dec
sarb
xchg
ss
int
call
mov
xor
lock
enter
pop
and
push
xchg
mov
xchg
jg
call
lock
stos
adc
fwait
fwait
mov
adc
dec
xor
adc
ss
jg
lcall
fldenv
fwait
dec
loop
shlb
mov
sub
push
push
add
in
data16
jg
fsincos
stos
mov
sbb
mov
push
stos
adc
jg
jnp
mov
xor
mov
icebp
pop
aad
call
call
dec
stos
ljmp
mov
rorb
push
stc
lock
cmc
cmpl
scas
hlt
call
push
ja
sbb
xlat
pop
hlt
ret
add
out
add
push
out
mov
mov
int
bnd
in
movsl
lahf
pushf
or
sub
ljmp
shl
jae
leave
sbb
int
out
lcall
icebp
call
lahf
scas
fisubrs
cmp
aas
sub
mov
shll
movsb
das
lock
mov
ds
sub
loope
mov
adc
enter
xchg
xor
sbb
xorb
jge
lods
decl
cli
xchg
mov
cmp
stc
es
pop
mov
movsl
pushf
lock
movsl
xor
dec
push
mov
push
inc
cs
jae
out
aaa
sbb
lock
adc
mov
lcall
lods
xchg
inc
call
mov
sbb
out
aam
xlat
jo
xchg
push
rclb
inc
cltd
jnp
sbb
movsb
hlt
push
ljmp
jns
mov
lds
hlt
sub
mov
outsl
pop
lret
mov
aad
sbb
sti
mull
add
lock
sub
test
sarb
loope
or
xor
mov
mov
mov
inc
call
aam
mov
out
dec
lods
or
stos
scas
addr16
jg
lcall
jp
shrb
enter
and
std
idiv
cmpsl
ds
push
jle
pop
mov
xchg
add
incl
incl
jo
stos
repz
push
and
imul
add
push
sbb
pop
jl
adc
mov
add
xchg
jo
scas
push
scas
dec
aaa
ljmp
add
cmp
movsl
test
ds
dec
clc
dec
aam
ja
incl
dec
pop
imulb
iret
jae
movsb
xchg
push
xchg
or
push
repz
stos
lret
xor
loopne
add
mov
adc
fistps
add
jp
movsl
jle
xor
push
lock
sbb
cmp
scas
outsl
add
incl
aam
out
shrl
push
sarl
imul
mov
sbb
ljmp
sbb
jnp
outsl
outsl
inc
les
sbb
pushl
xchg
add
bound
cwtl
cs
sbb
inc
mov
mov
lret
add
aam
mov
or
lret
aad
lahf
sbb
pushl
in
je
add
xor
lret
addb
call
fistps
mov
mov
js
pop
pop
out
pop
dec
packssdw
dec
rcl
decl
jne
jge
cli
mov
icebp
lcall
ret
ljmp
jnp
cmp
push
xchg
addr16
cmpsw
addl
test
mov
mov
shlb
jge
cmp
push
inc
fisttps
xor
push
in
loopne
mov
mov
jle
cmp
daa
add
xchg
test
or
repnz
incl
test
sub
mov
sub
mov
pop
fstl
fistps
dec
sub
in
adc
fcoml
pop
sti
popf
mov
add
incl
adc
inc
adc
jmp
mov
outsb
rorl
aam
leave
ret
nop
jae
pop
scas
shrb
out
and
nop
push
fdivs
cli
popa
add
call
incb
mov
test
ss
pop
into
adc
rclb
sub
int3
imul
pop
std
jae
icebp
call
in
pop
in
push
add
jno
inc
shll
decl
pop
xor
popf
sub
mov
jp
pop
mov
cli
shll
and
push
cltd
push
xchg
pop
dec
xchg
cmpb
movsl
ja
xchg
inc
jp
sub
cmp
rcrl
incl
sbb
cmp
and
dec
xor
jg
pop
test
int3
or
imul
lahf
js
mov
dec
or
outsl
cs
adc
xor
rcrb
mov
adc
popf
mov
cltd
dec
xor
jo
xchg
xor
fwait
cwtl
dec
lcall
mov
push
cmp
mov
sub
or
inc
push
cmp
mov
iret
out
pop
cmpb
sub
lock
insb
icebp
mov
xchg
fisttps
jg
fucomp
das
out
sub
mov
arpl
inc
mov
movsb
mov
jns
clc
and
imul
push
out
in
inc
cmp
daa
fildll
cmp
inc
or
xor
js
ja
rcrl
lret
inc
pop
cmp
ljmp
fnop
pop
inc
js
sub
jl
dec
jmp
sarb
pop
ss
movb
push
ficomps
call
shrb
jle
mov
sahf
fsubs
xor
mov
imul
pusha
and
sub
pop
jp
add
jg
out
xor
loope
pop
jge
dec
pop
mov
mov
decl
aaa
or
xor
ja
fsubrl
mov
mov
ljmp
cli
arpl
cmp
pop
push
mov
loope
mov
insb
imul
dec
cld
push
xchg
pop
adc
jno
mov
lcall
scas
xor
xchg
adc
or
sarb
inc
xlat
sub
dec
mov
incl
js
xor
adc
test
decl
lea
ljmp
jmp
in
rcll
jae
jb
cmp
mov
inc
xchg
push
movsb
pop
fcoms
ds
call
cmp
es
rol
push
lret
dec
add
lods
mov
adc
test
pop
loopne
pop
add
out
xchg
fsubr
incl
cmp
mov
andl
sbbl
jp
adc
in
and
popa
jne
in
sbb
inc
mov
push
xchg
addr16
pop
popf
fstpt
xor
scas
pop
mov
mov
pop
loop
mov
fsubp
inc
cmp
or
jae
movsb
push
outsb
jg
jmp
cmp
mov
sar
mov
and
sbb
test
adc
sub
inc
mov
mov
xchg
sbb
fprem1
pop
or
adc
gs
stos
pmovmskb
jb
pusha
ljmp
lds
inc
lea
rcll
rol
push
xchg
sbb
ljmp
aas
loop
pusha
test
in
loopne
cmp
and
xor
add
pushl
cmp
cmpsl
and
test
sub
sbb
inc
nop
lods
je
lcall
adc
sbb
xchg
inc
adc
mov
jle
dec
in
data16
push
jge
jge
adcl
sub
pop
loope
cld
movsl
sub
ret
movb
jnp
pusha
push
movsl
push
jg
mov
fadd
shlb
cmp
jmp
pusha
xchg
sbb
mov
dec
jb
sub
mov
out
loopne
in
popa
incl
pop
fwait
arpl
mov
es
jns
jg
call
xor
and
aaa
je
push
mov
sbb
fisttpl
ljmp
jb
pmaxsw
mov
jg
and
leave
pop
icebp
or
push
ds
lcall
lret
lock
in
mov
sbb
xchg
daa
ljmp
jmp
ret
jo
dec
icebp
ja
sub
cli
xor
jg
lcall
outsb
int
push
std
inc
callw
and
lods
scas
scas
pop
cmp
lea
outsl
test
enter
mov
xchg
mov
sub
add
mov
mov
lds
push
push
lock
clc
icebp
and
leave
mov
sarl
jno
mov
and
call
xchg
mov
xor
addr16
add
pop
test
sub
clc
std
lea
push
xchg
push
js
xor
leave
xor
adc
out
decl
mov
out
fdivrl
mov
xchg
mov
out
push
fbld
mov
aam
adc
jbe
push
sub
adc
mov
jns
xchg
orl
dec
mov
mov
scas
ret
cmc
call
out
inc
int
cmpsl
inc
cmp
je
push
ss
xor
cmpsb
mov
lock
jp
insl
cs
jmp
dec
cld
and
jmp
out
shll
xchg
enter
inc
and
xor
and
pop
inc
popa
incl
mov
push
aas
and
cmc
js
sub
call
test
pop
push
lahf
inc
adc
test
rorb
inc
pop
enter
xchg
ja
inc
or
out
call
insl
or
and
add
insl
sub
sbb
fnstsw
btr
jo
push
negb
aaa
test
mov
mov
mov
and
mov
cli
dec
mov
xchg
test
dec
mov
pop
lods
xor
rcrl
pop
dec
mov
pop
or
mov
mov
enter
adc
into
decl
pusha
and
jae
lods
sub
dec
xchg
mov
sbbl
mov
lea
cli
lcall
xor
out
ret
fs
and
pop
pushf
dec
or
or
dec
imul
push
xor
mov
xchg
aam
jg
sbb
jae
iret
and
xor
dec
sub
push
das
ljmp
incl
add
mov
xchg
gs
shll
dec
pop
repz
gs
arpl
dec
pushl
or
jmp
shrb
int
and
lea
push
jg
and
icebp
ret
pop
dec
pop
inc
jecxz
jle
xor
lods
inc
lcall
jne
mov
inc
cld
jno
mov
cmp
outsb
xor
dec
aaa
loope
pop
inc
sub
ljmp
inc
test
bound
push
incl
ss
add
xchg
mov
push
sub
xor
sub
push
inc
aaa
clc
dec
aaa
out
inc
testl
xor
hlt
inc
mov
lds
dec
outsl
cmc
dec
mov
int3
xor
in
mov
pop
and
pushf
mov
jge
pushl
mov
fs
or
mov
jg
ljmp
adc
faddp
in
stos
std
sub
push
mov
movsb
push
mov
gs
cmp
inc
jmp
mov
decl
pop
dec
xchg
int
dec
shr
mull
lcall
jo
xchg
rcll
aas
lahf
mov
cmp
cmp
insl
fstl
xchg
jmp
aad
dec
test
mov
jge
mov
cmpsb
les
leave
cmp
ljmp
xchg
jg
test
or
cmp
dec
in
adc
and
outsl
fdivr
shll
lret
push
jmp
arpl
cltd
adc
outsl
les
inc
add
inc
sbb
sar
and
mov
aam
out
and
mov
add
mov
incb
lcall
xchg
hlt
add
mov
inc
dec
pop
inc
xchg
orl
imulb
andb
mov
push
test
nop
jne
lock
and
push
out
pop
rcr
bnd
jae
flds
pushf
clc
das
pop
pop
cmpl
lahf
sub
lds
sub
popf
adc
inc
icebp
adc
in
adc
xchg
loop
pop
xchg
xor
cmp
dec
mov
cli
mov
xchg
cltd
sub
fdiv
sub
aam
ret
pusha
cld
call
adc
mov
imul
or
lahf
mov
out
sbb
cmp
out
sub
add
fldenv
pop
shlb
hlt
xorl
lahf
lds
aas
inc
mov
lcall
ret
sub
pop
cmp
inc
stos
push
outsb
and
aaa
pop
cld
jecxz
xchg
es
inc
cmp
aaa
xor
cld
decb
push
jns
jmp
xchg
mov
pop
mov
repnz
sbb
sti
es
fistpll
jp
xchg
lcall
push
aas
mov
ljmp
faddl
sub
int
lods
cmp
daa
add
jg
xlat
lods
pop
popf
sub
inc
dec
xchg
das
push
pop
out
test
inc
jnp
pushl
hlt
loope
or
or
add
fs
jge
decl
decl
repnz
xchg
pop
xor
mov
sti
cltd
jg
jmp
cmp
cmc
hlt
push
mov
js
cmp
mov
lea
jne
jbe
clc
pop
xorb
pop
dec
jae
mov
sub
clc
fisttps
mov
push
pop
pop
popf
mov
clc
mov
dec
sbb
jbe
ljmp
test
stos
call
subl
repnz
repz
in
aaa
xor
jo
pushl
sbb
or
inc
ret
mov
js
sub
xor
push
pop
ljmp
into
dec
mov
ret
insb
fnstcw
pushf
mov
mov
pushl
adc
mov
sbb
lcall
dec
ret
cmp
mov
add
or
pusha
xor
push
jmp
xor
fmulp
in
jecxz
std
ljmp
pop
out
mov
push
test
rcll
incl
and
adcb
repz
sbb
stos
mov
enter
sub
test
pop
clc
pushl
mov
clc
push
ret
out
test
mov
dec
jmp
dec
divb
sbb
adc
xchg
test
and
or
scas
cmp
pushf
cld
push
call
push
dec
and
mov
iret
dec
push
cmp
dec
mov
or
lds
xor
loope
test
pop
stc
adc
imul
jge
mov
xchg
sub
cli
ljmp
push
inc
mov
in
incb
aam
shrb
push
in
clc
aad
fisubs
pop
push
fldt
jge
push
or
shlb
js
imulb
loop
call
pop
fcmovb
lcall
jl
and
rorl
arpl
test
sbb
adc
sbb
xchg
es
aam
ficoms
fldpi
aas
shrb
jp
xor
cli
jo
pop
lds
and
lds
lret
incb
push
push
stc
mov
or
outsl
in
push
cmpsb
outsl
mov
dec
cmp
cs
sti
mov
mov
mov
mov
leave
mul
xchg
subl
mov
stos
addr16
test
jmp
adc
adc
ret
fstl
mov
aas
adc
idiv
jg
dec
inc
sbb
push
pop
sahf
leave
nop
fists
adcb
and
lcall
jecxz
js
fwait
add
xchg
adc
mov
call
getsec
xchg
xlat
add
stos
push
cmp
loope
cltd
jno
repz
jmp
aaa
mov
imul
es
dec
push
and
loopne
into
outsl
std
call
stos
xlat
cmc
mov
mov
cmp
xlat
push
jg
outsb
pop
aad
sub
ljmp
mov
add
ljmp
push
les
bound
aad
mov
sarb
subb
jno
inc
mov
fdivrp
cli
ret
jge
loopne
jge
jo
sub
sub
mov
repz
mov
jecxz
popf
or
insb
mov
hlt
daa
sbb
jne
adc
lcall
adc
xchg
fldt
pop
lock
rcrb
fcoms
push
fists
fldl
jnp
sbb
rcr
mov
decl
cmc
or
push
push
repz
xchg
push
sbb
mov
xor
outsl
mov
decl
js
and
hlt
inc
xor
push
shll
call
fists
arpl
and
lcall
sub
cld
sbb
pop
add
mov
push
rclb
sub
pushf
ljmp
push
jo
scas
into
sub
xor
fsubs
push
pop
push
int3
ret
push
add
and
ljmp
fs
add
out
mov
rcr
inc
incl
lods
mov
sbb
test
sbb
cmp
jp
loopne
cmc
push
jg
lea
mov
dec
fldt
call
cmp
hlt
in
dec
lods
lcall
in
out
push
add
inc
cmp
daa
pop
adc
fstps
fs
xchg
pop
lcall
stc
aam
test
ss
dec
dec
or
push
lret
outsl
je
lahf
inc
mov
cmc
dec
aam
sbb
cltd
push
lods
fimuls
cmp
pop
mov
cli
pop
stos
ljmp
mov
icebp
cltd
outsl
push
inc
fucomip
mov
ja
imul
cld
mov
std
pushl
shll
mulb
inc
insb
mov
cmc
jmp
in
dec
mov
mov
sar
sbb
call
ret
jp
sbb
xor
xor
add
xor
mov
jne
rclb
inc
push
jl
gs
std
out
dec
call
cltd
xchg
mov
cli
cmp
fcomps
pop
call
iret
jns
mull
and
mov
lcall
ljmp
call
cmc
xor
sbb
arpl
dec
shll
push
dec
sub
rcrl
hlt
in
loopne
xchg
push
xor
add
das
mov
add
adcb
stos
or
stos
adc
push
int3
xchg
sbb
je
lods
push
sub
mov
ljmp
inc
mov
das
or
out
dec
xchg
jge
and
test
cmp
in
dec
ret
mov
mov
jo
hlt
in
sub
sbb
push
jne
out
mov
scas
lds
adc
stos
dec
je
test
jmp
repnz
stos
adc
adc
data16
or
stc
push
ret
xchg
cld
jmp
push
insb
and
push
out
or
or
clc
jg
dec
push
div
add
test
ret
cli
dec
cmc
enter
dec
push
xor
daa
loop
sti
mov
je
mov
jmp
mov
pop
adc
stc
cli
incl
adc
in
jmp
sub
dec
pop
mov
incl
inc
fwait
jno
dec
xor
in
test
lahf
pusha
call
out
lahf
jecxz
inc
pop
data16
pop
stc
push
pushf
adc
fwait
push
xchg
fisubrs
into
mov
lcall
pop
push
mov
nop
add
dec
into
mov
icebp
mov
mov
clc
lcall
mov
mov
shll
mov
xor
imul
xchg
lcall
test
xor
push
push
mov
aad
insb
pop
dec
insb
xchg
negb
out
dec
enter
xorb
dec
cmp
aaa
push
stos
fstpt
arpl
push
iret
fcmovnb
push
push
ljmp
enter
inc
fisttpll
aad
insl
dec
ds
stc
ret
decl
dec
mov
or
int3
enter
das
cld
push
pushl
cs
sub
mov
xchg
movsl
out
mov
fcos
cmp
call
or
sti
ret
lret
cmc
insb
jle
pop
adc
lods
push
dec
call
imul
lcall
in
adc
push
in
test
test
mov
ficomps
sub
jno
mov
in
loopne
and
xchg
lcall
fildll
out
or
mov
adc
das
add
aad
int3
js
lahf
fdivr
sbbb
sti
add
adc
lds
sbb
stos
add
mov
mov
jp
stos
cld
xor
das
movsl
xor
je
dec
cmp
outsl
pop
mov
fs
jmp
pop
mov
daa
fdivs
std
xor
out
jg
add
xchg
movsl
fists
jg
ret
call
pop
lods
hlt
and
mov
fstl
inc
mov
incl
cs
aad
out
pop
and
xchg
rclb
push
loopne
leave
mov
cmc
mov
rorb
or
inc
imul
andb
decl
inc
and
mov
push
jbe
inc
mov
jmp
inc
je
sub
int
sub
clc
push
in
fisubrl
scas
hlt
jecxz
out
xchg
test
pop
xor
dec
cld
jmp
in
arpl
dec
dec
fwait
out
gs
mov
iret
pushl
cli
inc
dec
das
pop
xor
dec
aad
or
dec
dec
les
add
loopne
mov
jmp
bound
clc
pop
sbb
or
lret
repnz
stc
sar
movsl
sbbl
decl
fwait
add
mov
add
inc
test
lock
xchg
mov
pop
test
je
or
jg
push
or
js
pop
jge
jge
and
dec
hlt
fstl
xchg
and
jne
jmp
pop
sub
pop
mov
stos
adc
cmpl
or
push
pop
adc
add
jg
fwait
mov
jp
into
imul
insl
decl
add
cmp
or
adc
das
sub
call
sub
aas
nop
imull
sub
mov
xchg
mov
in
aam
or
mov
jnp
pop
jae
xchg
imul
imul
jns
mulb
mov
ja
push
mov
clc
int
xchg
mov
sbb
mov
stos
shl
jb
inc
xor
or
dec
pop
sub
xchg
mov
xchg
inc
xor
testb
sub
inc
mov
mov
and
js
inc
cmp
movsb
pop
loop
cli
in
and
ljmp
jo
fbstp
sbb
test
xchg
cmpsl
and
call
frstor
fisubl
fisubrs
jmp
out
inc
out
cwtl
les
add
stos
enter
pop
clc
xchg
xor
ficoml
cwtl
data16
pop
in
xchg
rolb
inc
sar
cld
mov
jg
decl
call
mov
inc
push
pop
cld
mov
ljmp
add
inc
push
test
stos
fmull
ret
aaa
cli
mov
addr16
cli
inc
jno
in
insb
rcr
fbld
aad
pop
pop
pop
mov
shrb
and
enter
adcl
add
cmp
xchg
loopne
fisubrl
adc
or
mov
cwtl
insl
inc
decl
es
cmp
mov
aas
dec
or
ljmp
and
imul
lret
aaa
cli
stc
outsl
lcall
xchg
jb
jl
out
lea
lods
and
call
or
mov
es
daa
iret
jns
xchg
add
aam
decl
push
add
and
adc
bound
xchg
cmc
nop
cmp
call
mov
rorl
mov
push
sbb
mov
mov
and
outsb
xchg
cmpsl
hlt
call
cmp
jnp
lds
ret
dec
jmp
hlt
inc
dec
add
mov
stos
cmp
arpl
icebp
xor
or
out
jp
cmc
jg
sbb
test
push
dec
dec
je
popa
pop
xor
rcrb
mov
sub
inc
xchg
rcl
mov
or
cli
or
fs
in
jecxz
jo
aad
repz
cmp
lea
push
xchg
inc
sbb
push
sahf
repz
xor
jg
adc
jne
test
out
rcll
repz
ljmp
call
push
pushf
sub
push
ljmp
movsb
add
insl
jo
pop
push
das
push
popa
stos
push
into
sub
in
aas
cmpsl
fs
and
jmp
hlt
jg
das
ljmp
inc
out
in
pop
cmp
mov
lcall
repz
std
xchg
jbe
mov
notl
daa
or
jg
js
sbb
xor
jmp
inc
stos
and
and
add
mov
mov
or
loop
sbb
jnp
cli
jg
loopne
jbe
cmpsb
xor
outsl
dec
outsl
std
ljmp
sbbb
cbtw
xchg
fstps
mov
cmp
xor
fwait
cltd
lahf
push
adc
dec
mov
clc
decl
push
mov
pop
fidivrl
ficomps
insl
rcll
push
lret
decb
lea
adc
cli
mov
neg
mov
stos
cmp
mov
jl
pushl
cmpsl
push
mov
sar
xor
mov
lret
mov
push
in
in
fisubs
jle
es
ljmp
jo
mov
insb
cmpl
push
roll
cltd
cmp
mov
mov
jae
pushf
lcall
std
in
ljmp
shrl
lahf
push
pop
pop
pop
fldcw
or
test
js
inc
pusha
in
call
insl
lock
or
leave
mov
mov
iret
in
cli
decl
and
jge
idivb
push
mov
imul
shl
jle
xchg
pop
daa
push
sbb
mov
nop
cwtl
sub
mov
stos
mov
decl
inc
or
sub
push
test
test
push
out
hlt
fcompl
ljmp
xchg
cmc
orl
js
mov
or
daa
mov
push
rorb
xchg
mov
jp
mov
movsb
stc
shr
sub
or
mov
push
incl
je
fsubs
mov
mov
sbb
out
xor
call
cli
testb
sub
pop
sbb
shrb
rcrb
jmp
ljmp
push
dec
lods
std
mov
sub
xchg
je
xchg
or
aad
loope
lcall
pop
out
or
int3
cmpsl
push
mov
js
leave
or
pushl
inc
loope
xor
push
xlat
fiaddl
out
xchg
lret
dec
or
hlt
mov
add
push
test
aas
cltd
dec
mov
scas
lock
mov
cwtl
hlt
mov
pop
stc
push
into
ret
mov
push
cmp
ljmp
ffreep
adc
inc
lret
mov
imul
in
lret
jo
popf
pop
add
push
incl
push
adc
test
pop
push
jno
fnstenv
outsb
mov
incl
xor
inc
jnp
or
dec
jns
enter
adcl
je
cmpsl
and
sti
jle
mov
add
testb
js
pushl
mov
lods
sbb
sbb
addr16
lcall
fistps
fisubrl
and
int
hlt
in
pop
lods
sar
jmp
adc
out
out
ljmp
aaa
gs
lock
push
cld
mov
push
dec
sbb
fistps
adc
sbb
shll
sahf
fisttpl
and
lret
xchg
popf
add
and
mov
xchg
mov
outsl
mov
daa
push
pushl
jge
nop
ret
dec
inc
icebp
sub
and
jb
pop
and
or
mov
sbb
inc
cmp
inc
mov
xchg
out
leave
dec
movsl
fiaddl
mov
call
jmp
jb
das
sbb
pop
enter
adcb
into
loope
adc
ficoml
iret
inc
cltd
sub
mov
sbb
xor
call
das
mov
rclb
enter
pop
pop
scas
ds
push
std
incl
aaa
clc
jo
add
xor
imul
adcb
das
hlt
loop
add
loopne
cmp
jmp
stos
push
xor
inc
add
in
inc
mov
cld
cs
xchg
out
dec
cmc
rcr
outsb
dec
pop
testb
out
test
add
pop
push
jg
ret
inc
jp
or
ljmp
pushl
add
sbb
dec
shrb
scas
mov
decl
cld
lcall
movl
push
test
icebp
filds
or
xorb
imul
sbb
ljmp
scas
out
jge
mov
mov
mov
test
lods
movsb
fwait
packuswb
and
loop
lods
fcmovnu
mov
sub
mov
je
inc
imulb
sti
sarl
mov
cld
ljmp
test
and
push
es
lcall
inc
scas
fwait
out
in
jnp
jg
fadds
inc
sub
test
pop
sbb
int3
mov
cmp
mov
mov
out
jmp
jns
movsb
out
sti
lret
mov
add
fcoms
enter
ljmp
mov
insl
out
sbb
sbb
xor
lock
ret
push
test
adc
or
pop
fsubrl
inc
int3
fists
pop
popa
in
adc
outsb
sub
xor
aam
imul
stos
sarl
mov
mov
cltd
pop
andl
push
fildll
and
sbb
cmp
jl
cli
repnz
mov
lods
adc
add
cmpsl
pushl
pop
sub
mov
sahf
lods
jne
inc
lods
enter
dec
andb
fsubl
pusha
and
sbb
jne
mov
out
inc
out
cmp
in
adc
sbb
lock
adc
xor
ror
jo
lods
mov
push
pop
aaa
decl
rol
jg
test
dec
jp
adc
loopne
popa
xor
movsl
pop
xchg
jge
dec
loopne
jae
aad
cmpsb
pop
xchg
stc
sbb
push
mov
jno
aaa
cli
ljmp
mov
sbb
xor
lods
sub
mov
or
push
jne
pop
call
jae
ja
mov
and
mov
dec
mov
cmp
cmp
xor
cvtpi2ps
add
xchg
jg
ljmp
adc
add
lcall
stos
lock
call
loope
or
lret
mov
mov
lret
data16
xor
ljmp
mov
aad
jns
fidivrs
int3
sub
and
in
pop
dec
stos
cmp
ljmp
incl
in
push
and
jb
insl
lds
add
jmp
dec
xchg
inc
adc
add
andl
jbe
pop
jne
inc
in
xchg
push
imul
pop
push
cmp
mov
dec
sbb
mov
add
jge
out
fmuls
xor
dec
and
call
pushf
push
out
repz
push
dec
mov
pop
movsl
push
xchg
insl
fldenv
push
ret
into
and
ljmp
xchg
sbb
mov
cmp
cwtl
popa
mov
cli
or
adc
and
clc
add
ret
xchg
mov
mov
out
pop
out
in
movsl
movsl
or
or
mov
popl
out
aas
xor
mov
pop
cli
ljmp
xchg
cli
testl
mov
scas
jne
push
in
cmp
adc
fbld
outsb
js
cmp
icebp
out
les
inc
or
imul
pop
xlat
fistpll
and
push
arpl
jle
adc
inc
icebp
cmc
cmp
jecxz
ja
mov
add
dec
imul
jecxz
sahf
aam
decl
inc
sbbl
and
leave
fnsave
pop
lods
aas
jmp
xchg
add
lock
std
or
std
decl
mov
jb
xor
sub
mov
mov
jmp
adc
es
out
xchg
aad
sub
out
daa
mov
incl
lcall
call
ja
cmp
subb
shrl
aam
call
xchg
or
xchg
int
fldl
adc
inc
mov
pushl
or
out
lcall
jns
mov
adc
cld
inc
xchg
lea
movsb
shll
incl
and
in
hlt
addl
imul
lcall
insl
and
push
fwait
shrl
jmp
das
aad
fmul
sub
pop
cli
lcall
mov
push
and
mov
test
sub
xor
add
mov
std
sub
mov
cld
mov
inc
js
out
mov
mov
sbb
lods
ds
rol
sbb
lcall
push
rorl
loop
or
push
cld
lods
das
hlt
das
aad
sbb
rorb
jns
mov
call
mov
rorl
stos
sub
mov
into
push
or
movb
dec
movsb
sub
fwait
jmp
cs
scas
mov
mov
xor
cmp
xchg
das
lock
cmp
push
xor
test
sahf
lods
fs
jne
lahf
lds
cmp
cmc
gs
idivb
lahf
lods
incl
jne
sahf
test
inc
shl
mov
pop
imul
sub
mov
dec
rclb
es
outsb
sar
cmp
lea
sub
rcll
sbb
inc
std
cmp
stc
into
clc
test
xchg
ret
in
mov
mov
push
fs
and
pop
std
sub
mov
sub
call
xchg
jle
dec
jo
mov
clc
pop
sub
jmp
push
inc
je
jle
outsb
test
cmp
cmp
pop
cltd
rcr
pop
call
sar
xor
push
pusha
push
cli
and
insb
popa
leave
pop
call
cmp
roll
add
lahf
cmc
inc
repnz
in
mov
adc
pushl
test
xchg
mov
jle
fidivrl
ja
repz
xchg
int
or
idivl
sti
mov
push
inc
xor
mov
and
decl
lret
xchg
dec
and
hlt
adc
cli
call
mov
das
jno
repz
add
sub
and
mov
hlt
ljmp
inc
inc
sahf
mov
mov
jo
xor
jns
mov
lea
jo
call
ljmp
add
cmp
lds
decl
pop
daa
adc
fisubrl
loopne
fucom
sar
xchg
cli
dec
lds
adc
in
add
aam
push
sbb
call
cli
or
leave
jbe
into
xchg
sbb
cmp
mov
ret
dec
xchg
adc
je
js
in
cs
fistpl
jmp
daa
flds
mov
lcall
ljmp
mov
pusha
popf
mov
and
dec
jmp
cmp
add
adc
int
iret
test
lret
stc
mov
imul
arpl
je
imul
clc
xlat
gs
fbstp
call
dec
jg
pop
popa
dec
subb
inc
sub
into
cwtl
pop
repnz
out
adc
sbb
shll
mov
push
pop
or
incl
push
pop
loop
decl
outsb
arpl
popf
dec
cmp
jne
mov
push
mov
aam
inc
jl
jg
loopne
daa
mov
or
or
filds
outsb
sti
pop
loop
pushl
sub
xor
cmpsl
leave
shr
pop
cs
xor
mov
add
out
subl
pop
ljmp
adc
ret
xchg
cld
jp
ljmp
push
lea
in
je
cmp
rorl
hlt
push
push
add
out
popl
pop
push
pop
movsb
mov
fstl
jecxz
mov
jl
push
sbb
hlt
push
mov
js
xchg
jmp
xor
sarl
mov
sbb
jg
icebp
pop
js
mov
int3
push
gs
and
pop
xchg
jmp
decl
fwait
cmp
icebp
pop
cltd
ljmp
cli
stos
out
pop
std
jg
sti
adc
mov
jl
fistl
or
pushl
fcoml
shrd
push
push
xor
into
add
push
fimuls
daa
sbb
jg
call
xchg
pop
jecxz
paddsw
pop
sbbl
add
jbe
adcl
iret
mov
mov
or
lcall
cld
adc
jmp
push
test
jae
pop
xchg
sbb
pop
cld
pushl
sub
mov
in
dec
jae
sub
stos
lret
fsts
or
pop
adc
ljmp
push
pop
scas
nop
adc
inc
pop
pop
mov
inc
ljmp
add
pop
bound
push
add
movsl
aam
xor
xor
test
mov
sub
mov
cmp
adc
cmc
andb
fwait
mov
adc
inc
call
aad
mov
out
mov
or
mov
outsb
push
push
jge
fdivr
mov
into
fistpl
clc
das
jo
daa
test
movsb
jle
pop
sub
pop
cmp
jg
xor
mov
and
pop
xlat
pusha
mov
sub
jl
loop
sbb
push
push
jns
rcll
or
inc
mov
daa
cli
pop
insl
icebp
xlat
cltd
sub
sbb
popl
cmpsb
outsl
icebp
call
in
sbb
ss
or
int3
mov
lcall
int
push
mov
ja
sub
je
jae
inc
das
dec
insb
addb
test
jae
or
outsb
push
xor
dec
sub
lods
push
sub
ret
sti
ljmp
cmp
daa
cli
pushl
pop
aaa
test
adc
bound
pushf
mov
cwtl
mov
loopne
cmp
fwait
push
inc
fisubrl
jg
test
cmp
push
xor
add
mov
dec
imul
aaa
xchg
mov
scas
fwait
xlat
out
pop
mov
dec
and
pop
add
mov
rol
add
cmpsb
int
xchg
pop
clc
ljmp
call
sub
je
in
xor
lcall
ljmp
dec
adc
inc
rcrb
sbb
out
stc
pop
add
lret
pop
cld
and
scas
cwtl
or
jne
add
sbb
sbb
lret
sub
fdivs
or
test
mov
mov
incl
rorb
add
mov
jno
jecxz
sahf
sbb
mov
sar
push
das
inc
pop
push
inc
stos
cli
jbe
xchg
and
xchg
mov
pop
mov
sbb
outsl
ljmp
jecxz
and
divl
cli
or
repz
lcall
mov
test
cmp
movsl
jne
aad
cmp
outsb
inc
cbtw
ret
iret
stos
in
inc
pop
push
je
out
push
fs
adc
or
loopne
ret
pushf
outsl
and
dec
fstl
arpl
or
ljmp
daa
or
fcoms
inc
or
ss
mov
lret
aad
call
out
arpl
in
cmc
ret
imull
jbe
std
aaa
push
dec
dec
std
xchg
push
das
setg
cmp
fldt
push
cmc
mov
mov
inc
xchg
mov
sbb
lcall
pushl
and
lods
idiv
scas
sbb
repnz
sti
cmp
movsb
xor
fdivr
jae,pt
or
mov
jbe
popa
test
push
xlat
or
jnp
mov
cli
cmp
shr
adc
test
call
loopne
in
insl
gs
xor
jge
into
inc
cmpsb
add
adc
jmp
sub
mov
fstps
lcall
jnp
or
sti
rcrl
lock
popa
sub
sbb
jmp
mov
jp
mov
or
lret
mov
jmp
idivl
das
pop
adc
cld
dec
mov
jl
adc
sbb
add
and
inc
mov
test
in
fisubl
into
lahf
lds
imul
decl
sbb
mov
sub
sbb
test
and
pop
shll
jg
loopne
jg
mov
jp
push
mull
scas
mov
pop
mov
xor
fsubrs
pop
lcall
mov
mov
xlat
call
lcall
ja
inc
jmp
cmp
adcb
dec
leave
or
insb
sub
ret
and
ficomps
sub
fucomip
popf
cwtl
xchg
cmp
mov
int
cmp
stc
pushf
orl
call
mov
inc
mov
iret
sahf
stos
pusha
mov
lret
insb
ljmp
pop
leave
fwait
std
fnsave
aaa
dec
cmpsl
les
adc
popa
adc
or
inc
fadds
movl
subl
ljmp
mov
mov
aam
lahf
ret
ds
adc
pusha
sbb
and
lcall
pop
scas
lahf
push
mov
imull
mov
shlb
jne
add
fimull
jecxz
pushl
leave
or
loop
cmpsb
pop
push
inc
arpl
and
fnsave
add
and
jb
pop
dec
popf
jo
fld1
pop
lea
jg
ljmp
push
adc
mov
or
ds
sarb
sub
adc
les
ret
in
jp
movsb
lods
inc
pop
pop
loop
clc
incl
push
rclb
fdiv
loope
sbb
loopne
push
sbb
xchg
aad
test
sar
fbld
mov
pop
xor
mov
push
jne
loop
sbb
call
push
push
xchg
imul
jecxz
and
and
les
xchg
or
filds
jg
add
movsb
pop
je
dec
popf
movsb
mov
xchg
in
or
mov
cmpsl
mov
and
pop
data16
lea
movsb
ret
xor
lea
es
in
xchg
sub
add
xchg
jl
int
mov
pop
push
jns
or
mov
push
lods
push
mov
ljmp
pop
test
mov
inc
mov
and
int
xchg
ljmp
outsl
xchg
lods
sahf
loope
inc
popa
jmp
cmpsb
shrl
inc
inc
sbb
ljmp
or
add
sub
xor
roll
loopne
ret
ljmp
jg
adc
jmp
or
jmp
jp
test
cli
dec
lock
decb
push
mov
add
and
xchg
xchg
leave
out
cld
ljmp
mov
xchg
cs
popf
mov
call
sub
iret
shlb
incl
add
fists
fsubs
ja
or
mov
ss
mov
mov
add
adc
or
popf
ja
lods
call
lcall
mov
xor
mov
xlat
pop
jg
ljmp
pop
mov
stos
pop
cwtl
xchg
adc
inc
lods
xchg
cmp
sbb
adc
or
xchg
push
lea
push
xor
xchg
fistps
jae
hlt
ljmp
hlt
fwait
xchg
scas
mov
jmp
test
adc
rorb
ljmp
push
mov
pop
out
dec
sbb
int3
mov
js
icebp
cltd
das
add
inc
xor
lock
push
imull
fistpll
sti
popf
add
mov
subl
rorl
adc
ljmp
sahf
aaa
jmp
inc
movsb
push
and
dec
repnz
sahf
divl
sbb
and
adc
mov
cltd
leave
mov
adc
hlt
ljmp
decl
cld
repz
xor
fwait
mov
cmpsb
push
cld
iret
xor
dec
in
push
test
insb
in
mov
sub
pop
insl
test
or
test
decl
sub
xchg
sahf
sub
cltd
movsb
pop
pop
xor
pushl
sbb
into
inc
xor
scas
mov
idivb
lret
sub
pushl
lahf
jecxz
jg
imul
test
xor
incl
mov
mov
xor
xchg
insb
mov
adc
xor
mov
xor
and
sub
mov
jg
call
or
mov
mov
cmp
insb
aam
cmpsl
mov
sbb
lret
mov
scas
movsb
loopne
divb
xor
cmc
loop
adc
std
jg
jne
es
ret
enter
icebp
xor
cmp
jbe
add
jmp
lds
inc
movsl
ss
xlat
sbb
out
mov
lock
aas
sbb
mov
jnp
pop
shlb
lcall
mov
jns
mov
cmp
test
xchg
mov
sbb
movsl
jmp
shlb
lock
cmp
mov
pushl
cli
incl
dec
dec
and
xchg
int3
jecxz
mov
sar
jl
into
push
insl
mov
int
lahf
lea
int3
add
xchg
mov
mov
cltd
jle
lret
mov
leave
ret
xchg
push
xchg
iret
int
dec
pusha
roll
loop
cmp
pop
ljmp
jnp
lock
push
jg
shll
mov
inc
jo
xchg
ret
mov
push
or
inc
push
test
push
incl
pusha
dec
xchg
jb
fmul
jb
push
test
iret
lret
cmp
push
inc
test
add
and
pop
mov
and
pop
lock
add
rcll
xchg
push
or
sbb
ret
pop
mov
add
xor
adc
mov
mov
push
into
popa
scas
cmpsb
pushl
jbe
pop
lahf
xchg
pop
fldl
cmc
adc
ja
cmp
pusha
loope
mov
call
test
fcoms
pop
inc
push
sub
mov
pusha
cmc
sbb
lods
cmp
loopne
stos
dec
pop
push
pop
iret
fnstcw
push
mov
jecxz
lods
call
addr16
xchg
cmp
loop
mov
jmp
scas
mov
adc
cmpsl
pop
xchg
decl
ljmp
sbb
mov
dec
add
pop
mov
xor
push
fnsave
out
std
lret
data16
dec
in
mov
push
in
sbb
push
push
jg
pop
sbb
in
les
punpckldq
dec
cld
out
adc
repnz
cmpsl
imulb
jg
or
inc
push
ljmp
cmp
push
rep
rorl
xchg
sbb
push
das
and
jmp
clc
loope
sti
mov
rorb
icebp
jg
xchg
jne
jb
jmp
sub
ja
popf
sub
negl
jmp
aas
out
mov
inc
clc
movsb
aam
jne
fs
and
fldt
call
lock
loope
scas
mov
notl
repz
jne
fldl
mov
aaa
cli
ljmp
mov
jb
mov
jp
cmpsb
stc
imul
ja
cmp
in
mov
call
xor
mov
jns
dec
fdiv
sub
jns
sbb
out
mov
jg
push
add
flds
or
outsl
imul
call
mov
push
jp
lret
and
hlt
subl
lods
decl
add
in
test
sbb
add
outsl
sub
sti
daa
jge
jl
aaa
cli
cmp
add
int
add
xor
outsb
lret
jg
test
psrlq
xchg
add
push
jns
mov
pop
das
mov
outsl
pop
adc
jo
incl
call
xchg
sbb
push
or
scas
adc
add
add
add
call
and
rcl
andl
mov
loop
subl
adc
loop
xchg
lea
stc
or
mov
or
test
mov
push
movsb
xchg
mov
aaa
adc
push
mov
jecxz
xchg
mov
mov
adc
fwait
stc
xchg
lods
adc
adc
mov
add
push
push
xchg
cmpsl
push
xchg
pusha
inc
or
shll
mov
movsb
pop
mov
adc
push
pop
lcall
lahf
xor
and
pushl
dec
aaa
sbb
mov
mov
push
int3
xchg
and
pushl
mov
push
or
out
data16
lcall
call
pop
adc
je
cltd
mov
xor
pop
adc
dec
push
ffree
mov
jg
ds
cltd
imul
es
cmp
test
dec
cmpsl
mov
arpl
std
mov
sbb
push
push
dec
test
scas
jb
add
and
mov
xchg
and
lock
or
mov
dec
cmp
sbb
mov
stos
push
push
sbb
fcomps
jl
in
mov
mov
in
pop
repnz
sub
and
push
mov
push
mov
jg
mov
repnz
xor
cmp
jae
sarl
xor
mov
and
pop
stos
adc
jmp
jmp
fimuls
sub
aas
pop
cmp
mov
dec
adc
call
xchg
mov
xor
push
mov
xchg
cmp
jno
shrl
pop
mov
leave
mov
push
ja
or
xor
lods
jg
hlt
mov
dec
or
in
mov
hlt
nop
xor
xchg
xor
adc
cmpsl
stos
aam
inc
jecxz
das
mov
pushl
inc
mov
shr
xlat
cmp
push
fnstsw
xchg
negb
push
stos
loop
inc
lcall
inc
and
push
shlb
les
idivl
mov
xor
xor
pop
int3
lea
pop
popa
xor
clc
xchg
inc
cs
mov
je
sbb
xchg
aas
cmp
add
repnz
andb
call
addr16
cmp
es
pop
dec
cmp
fwait
imul
imul
xor
dec
notb
mov
lcall
lcall
jmp
mov
cli
movsl
push
stc
dec
lcall
into
int
lcall
std
aas
cld
cmp
int3
ja
ss
shrb
testb
cltd
and
stos
stos
or
aad
pop
rcrb
ljmp
loopne
std
push
iret
inc
sarl
mov
cs
mov
mov
loop
and
adc
cs
inc
enter
cmp
scas
xchg
fdiv
jg
sbb
arpl
add
std
loopne
adc
test
dec
pusha
icebp
ljmp
add
dec
lds
jns
adcl
sbb
mov
push
aaa
push
adc
insb
xchg
pop
lods
call
ret
jge
pop
ds
stos
push
pop
mov
fsubs
jbe
sub
ljmp
in
mov
cmp
mov
clc
stc
mov
pushl
and
sub
mov
adc
sub
inc
aas
scas
int3
push
push
jbe
lcall
sbb
scas
push
pop
or
loope
roll
fidivs
jg
ljmp
ficoml
adc
enterw
daa
outsb
incb
and
sar
inc
incl
inc
adc
faddl
cltd
xorb
repnz
xchg
jns
inc
incl
les
aam
in
push
mov
cmp
movsl
fldl
cli
add
mov
pop
leave
in
cwtl
push
dec
mov
inc
mov
cmpsb
out
sub
fsubrp
loope
in
and
pop
ds
adc
ljmp
scas
mov
cld
push
bound
inc
add
ljmp
les
cmc
mov
sbb
mov
lret
mov
mov
pop
rorl
scas
arpl
stc
pop
sbbl
incl
push
adc
fs
add
xchg
lret
pop
cmp
jecxz
jp
stos
stc
xor
mov
loop
stos
push
test
scas
das
clc
scas
imul
mov
pop
loopne
mov
ljmp
test
addr16
push
stos
jecxz
imul
incl
add
dec
mov
mov
adc
mov
push
sub
adcl
mov
mov
dec
mov
ljmp
adc
gs
inc
idivb
pop
stc
movsb
leave
sbb
push
dec
add
outsl
mov
repz
cmc
test
sbb
mov
xchg
push
cmc
adc
cwtl
mov
add
lcall
jne
jp
mov
lcall
and
xorb
nop
inc
clc
incl
add
pop
and
or
xchg
std
pushl
bound
aad
pop
xor
jle
sbb
adc
xchg
ljmp
lea
inc
movsb
mov
adc
pop
mov
jae
jmp
addb
imul
in
ds
pop
std
xorl
dec
outsl
inc
mov
sbb
add
mov
ljmp
gs
lock
push
cs
cld
adcb
mov
rcrl
out
pop
notl
mov
outsl
xlat
jge
jg
incl
stc
frstor
dec
sub
cmp
adc
nop
outsb
into
and
jmp
sub
dec
xchg
pop
xlat
ss
testl
push
aas
jae
loope
mov
ljmp
call
mov
adc
mov
mov
js
jmp
fcoml
aam
adc
xlat
dec
mov
jl
in
shll
mov
mov
inc
push
mov
out
mov
and
lcall
adc
fwait
int3
cltd
mov
pop
xchg
xor
pop
dec
lahf
pop
mov
mov
xchg
std
pusha
mov
idivb
push
fs
pusha
lret
lret
outsl
inc
lock
arpl
xchg
ja
cmp
clc
jae
popf
mov
jmp
xchg
dec
xlat
call
scas
fs
xor
pop
test
jmp
data16
jge
loope
push
test
outsl
lcall
cld
sbb
mov
mov
ljmp
ja
lcall
filds
les
adc
adc
je
cwtl
lds
sbb
jle
fistpl
data16
add
cs
popf
loopne
notl
jne
add
push
arpl
pop
fistpll
mov
std
pushf
sar
jge
jmp
mov
xlat
popa
mov
mov
cmp
dec
insb
push
sub
sbb
test
cmp
jno
jb
icebp
incl
popa
cmpsl
mov
lret
test
xchg
decl
pop
mov
xchg
inc
loop
inc
das
adc
std
pushl
cmpl
push
adc
lret
xor
pushf
inc
lcall
xchg
mov
mov
add
xor
dec
pushl
dec
mov
enter
jg
or
movsl
jl
mov
add
and
jnp
lahf
addl
mov
mov
bound
stc
sar
add
cli
ret
cwtl
daa
sbb
fwait
lods
mov
mov
adc
mov
sub
xlat
jns
xor
ret
cld
pop
cmp
sbb
mov
add
ret
push
int
push
sar
call
cltd
mov
dec
cmp
jnp
dec
mov
xor
ret
pop
stos
add
mov
add
sbbb
jb
lret
add
lds
dec
mov
inc
icebp
dec
mov
aam
cmp
xor
rolb
push
sub
mov
das
pop
std
pushl
ret
and
dec
rclb
xchg
cmp
mov
sbb
mov
test
sbb
mov
sub
sbb
stos
aam
pop
pushw
cmpsl
sub
les
shrb
mov
outsl
xor
aaa
mov
or
cld
and
mov
xor
mov
test
or
rcrb
sbb
test
adcb
or
outsl
cld
or
int
pop
cltd
xor
movsl
int3
arpl
push
cli
test
je
stos
dec
cld
ljmp
mov
mov
sbb
push
ljmp
mov
pop
shrl
xchg
cmpsb
out
lea
pop
xchg
xchg
movsb
sbb
lret
fucom
push
pop
mov
ljmp
lea
mov
je
xor
adc
pushl
lock
jb
das
dec
out
inc
imull
std
sahf
mov
mov
ljmp
xchg
jp
int
sbb
sbbb
test
adc
cmpsl
rorl
xor
bound
in
jae
jecxz
lods
call
xchg
aad
test
sub
adcl
adc
std
xchg
mov
dec
lahf
jp
add
pop
pop
mov
insw
jae
icebp
lcall
mov
jg
jge
inc
adc
ss
mov
js
pop
test
sbbb
in
sub
and
dec
jo
cmpsl
test
ljmp
cltd
ja
add
addb
cmpsl
add
popf
and
push
jecxz
mov
jbe
cmp
inc
sub
lea
inc
and
adc
push
testb
sub
sarl
lods
jg
cli
fs
lret
mov
arpl
add
lcall
std
rcrl
push
mov
push
ret
sub
je
add
xor
add
mov
pop
std
loop
out
xchg
stc
rclb
pop
insb
xchg
call
push
stos
mov
jns
jmp
or
popf
push
or
loope
mov
push
or
add
ss
fwait
jns
pop
push
mov
inc
aaa
pop
cltd
testb
dec
or
or
in
xor
incl
ljmp
push
mov
or
movsl
call
loopne
sbb
pop
dec
pop
adc
clc
les
loopne
mov
ljmp
pusha
mov
or
enter
std
adc
dec
int3
lods
repnz
dec
clc
adc
fnstcw
loopne
or
pop
in
push
mov
xchg
push
and
out
popf
insl
mov
mov
js
push
popa
fadds
inc
adc
pop
cmp
lcall
repz
adc
push
mov
out
push
mov
mov
inc
arpl
ds
xchg
adc
roll
movsl
xchg
jae
mov
test
repnz
pushf
out
imul
movsb
divb
pushl
push
mulb
mov
mov
pushf
sbb
das
out
jo
or
mov
repnz
sbb
mov
xchg
jg
and
sub
js
xchg
pop
pushl
mov
lcall
xchg
adc
pop
das
ficomps
jae
into
or
mov
lods
push
or
xor
fs
rorb
pushl
xchg
mov
daa
lods
bound
js
rcrb
sub
daa
scas
mov
lcall
iret
jmp
enter
sub
mov
mov
mov
cmp
frstor
aaa
icebp
and
xor
fcmovnu
xchg
repnz
jmp
leave
testb
push
fmull
pusha
jno
in
and
stos
jmp
bound
adcb
call
cmpsb
jmp
pop
jnp
ja
mov
add
mov
dec
imul
dec
cld
aas
dec
or
jmp
ljmp
std
sbb
adc
decl
les
jmp
pop
pop
dec
jg
xchg
test
mov
lret
pop
loop
repnz
fwait
jmp
ret
testl
pop
aad
bound
or
fnstsw
dec
push
jb
int3
and
rcl
cmc
pusha
outsl
pusha
push
daa
pop
pop
out
dec
mov
call
mov
mov
mov
lret
add
sub
xor
js
test
jge,pn
fildll
xor
jmp
rorl
cmp
lea
int
sbb
dec
incl
insl
test
adc
or
push
pop
adc
ja
das
push
ljmp
shlb
pop
mov
mov
test
data16
push
ja
shrl
fcmovnbe
push
push
push
push
inc
pop
loopne
call
mov
pushl
push
xchg
outsl
mov
or
dec
dec
jno
lea
dec
push
xchg
push
outsl
js
pop
sbb
out
add
decl
scas
nop
aam
push
pop
xchg
mov
inc
mov
adc
iret
or
pusha
arpl
int
call
fucomp
sub
insb
sub
cmp
xlat
push
push
push
cmp
int3
add
call
ret
sbb
or
shl
lea
addr16
mov
imul
outsb
in
push
pop
sbb
fdivrs
rorl
fwait
jmp
pop
fmuls
inc
push
inc
bound
ja
movsl
fs
xor
push
loopne
call
fistps
stos
inc
pop
ja
xchg
outsl
mov
and
jnp
and
cmp
scas
aad
out
sub
dec
mov
cmp
sbb
in
iret
popfw
stos
xchg
dec
xchg
pop
es
ljmp
inc
pop
ret
push
fs
fcoms
dec
dec
or
dec
dec
cmpsl
scas
or
std
jg
dec
test
push
outsb
or
subb
xor
shrl
jmp
sahf
pop
into
iret
mov
push
jo
pop
and
ljmp
in
push
pop
sub
dec
sarb
jl
inc
and
mov
fdivr
lcall
scas
or
xorb
out
cs
mov
mov
xor
stos
icebp
sub
jnp
mov
jmp
pop
in
add
mov
movsl
jbe
push
pop
sub
pusha
js
icebp
call
nop
pop
out
aam
data16
dec
xor
shr
sub
xchg
mov
xor
int
xchg
mov
mov
cmp
les
xor
jnp
cmp
cmp
lret
decl
sbb
pusha
mov
adc
iret
xchg
jae
cmp
repnz
shlb
filds
or
adc
arpl
popf
idivb
inc
dec
imul
cmp
push
mov
je
ret
loope
pop
cld
xchg
popf
dec
sub
hlt
shlb
inc
mov
jge
sar
lcall
push
xchg
xchg
sub
mov
dec
pop
dec
arpl
into
in
fwait
mov
jg
and
adc
into
mov
mov
adc
mov
mov
test
test
pop
push
xor
and
cmp
jp
jecxz
mov
icebp
inc
rorb
cmp
and
pop
ret
sub
fcoml
outsl
lock
push
les
xchg
sbb
scas
imull
orb
add
inc
cmp
fmulp
orl
mov
leave
int
lahf
les
cmpsl
jmp
ljmp
shr
sbbl
dec
je
mov
cli
pushl
jmp
pop
leave
js
dec
cli
mov
sbb
outsl
hlt
inc
hlt
shll
jo
subb
inc
and
out
mov
jmp
adc
adc
push
fsts
hlt
mov
or
push
and
ljmp
pushf
cwtl
lahf
sbb
push
sbb
mov
pop
add
lcall
sub
cwtl
bound
incl
sbbb
clc
aad
fnstcw
aas
lret
shll
into
cmpsb
cmpsb
mov
add
movsb
ljmp
xchg
add
hlt
repz
ficomps
outsl
jnp
bound
scas
cld
fbld
jmp
lods
loope
lret
or
test
xlat
hlt
outsb
stc
sbb
push
xchg
outsb
sbb
lret
add
mov
cmpsb
fs
loop
fbld
push
and
sub
xor
push
cwtl
adc
or
repz
bound
sahf
cmp
push
xchg
dec
sub
mov
ljmp
mov
push
jno
jne
cmp
mov
jns
mov
push
icebp
xor
lcall
out
je
addb
in
dec
dec
jo
pop
mov
pop
arpl
shl
push
and
xchg
stc
dec
std
incl
aas
lock
xchg
lret
int
push
sbb
outsl
xor
outsl
jmp
xchg
imul
loope
fprem
jg
call
xor
adc
lock
pop
push
add
repz
les
or
popf
adc
and
insl
movsb
ret
jmp
test
test
push
add
ljmp
dec
aaa
jg
lcall
mov
mov
movsl
pop
in
cmp
xor
jg
inc
clc
adc
mov
in
mov
and
pop
cli
fsubrs
sub
shlb
ret
pop
stos
or
inc
test
mov
mov
sbb
cld
mov
adc
gs
inc
add
jl
sbb
mov
jbe
inc
ror
lds
pushl
clc
incl
dec
mov
inc
mov
inc
leave
mov
push
push
mov
addr16
out
ljmp
or
into
loopne
cmp
lea
xor
sub
movsl
xchg
and
faddl
pop
iret
int
push
mov
xchg
push
push
cmp
decl
or
ficompl
sbb
fwait
inc
dec
lods
fstpl
outsl
icebp
outsl
push
mov
push
fcmovnbe
mov
cmp
jl
xor
decl
ud2
push
hlt
push
repnz
xchg
ffreep
xchg
sarb
jae
inc
cmp
jg
or
pop
ljmp
insl
jg
scas
js
cld
mov
jge
mov
mov
test
into
ljmp
add
data16
sbb
repnz
adc
lds
and
cmp
fildl
call
pusha
push
pusha
lds
add
aad
or
sub
shlb
pop
popa
pop
call
dec
std
cmp
push
pop
xchg
js
ret
push
xor
inc
fwait
mov
bound
incl
lret
pop
add
lds
ja
sahf
xor
jno
jbe
hlt
and
out
mov
cwtl
sub
fimuls
ljmpw
jg
cltd
ljmp
in
push
test
arpl
imul
fsub
mov
sar
jg
mov
pop
mov
imul
and
jg
cmp
mov
xor
pop
cmp
jo
gs
sub
aas
dec
scas
jge
pusha
mov
cmpsl
or
out
cld
cmpsl
mov
nop
push
ret
cmp
cwtl
and
fcmovu
jge
ljmp
inc
push
cmc
mov
cs
mov
movsb
lret
xor
push
in
fisttps
mov
push
aaa
pushf
movsb
out
popa
dec
in
daa
xchg
lret
cmpsl
jg
pushl
shl
sub
jecxz
mov
xor
jmp
push
sub
popf
cmpsl
inc
xor
lret
cli
cmp
daa
push
mov
jg
gs
inc
xor
sti
adc
cmp
cmpsb
jb
xor
xor
jmp
enter
and
mov
pusha
sub
jne
gs
pop
mov
pushf
fadd
xor
jbe
pop
push
insl
in
std
xor
mov
jns
lods
dec
mov
inc
loopne
mov
fists
jge
sbb
push
mov
mov
adc
outsl
jge
jmp
jle
std
adc
cmp
test
incl
subb
jo
jb
lahf
xchg
stc
aam
call
ljmp
cmp
xchg
xchg
shll
mov
mov
pushl
fs
mov
jo
dec
out
mov
mov
clc
jae
mov
jb
inc
dec
fdivr
lea
pop
push
pop
pop
call
pop
data16
test
mov
xchg
mov
dec
and
loop
ljmp
mov
mov
and
stos
push
or
cli
stc
adc
das
lock
aas
and
out
mov
pop
mov
mov
pushf
stc
in
dec
ret
or
or
ret
adc
aaa
flds
xchg
jno
fdivrp
in
jg
add
cmc
fsubrl
adc
mov
stos
xor
mov
ljmp
or
cmp
dec
sub
pop
fbld
and
or
xlat
lret
incl
or
sbb
add
dec
xchg
pop
inc
in
pop
mov
out
out
mov
mov
cwtl
add
xor
js
pusha
movsl
fwait
addr16
pop
out
ret
push
mov
adc
xor
lds
test
push
les
loop
push
push
lahf
xchg
incl
rcrl
fildll
mov
inc
lahf
aaa
loopne
call
mov
rcrl
out
dec
or
fwait
js
pop
mov
imul
sbb
bnd
add
add
mov
out
rcll
pop
sub
insb
cld
pop
push
jmp
out
ror
jns
xor
mov
decl
adc
mov
hlt
xor
cli
cmp
bound
dec
sub
xor
mov
push
lea
adc
mov
arpl
add
test
or
pushl
pop
notl
mov
lahf
and
xchg
inc
in
hlt
aad
cli
xchg
dec
fwait
xchg
pop
mov
sarl
std
shrl
popf
xchg
aam
inc
mov
sub
push
cs
inc
out
pushl
adc
sarb
jne
dec
jae
xor
cmp
xor
inc
lcall
cmc
je
jle
mov
cmp
jns
push
lock
pop
aad
mov
add
sbb
sahf
rcll
loop
and
mov
pop
iret
jae
stc
or
fldcw
and
dec
mov
pushl
mov
and
daa
jecxz,pn
jo
sub
mov
dec
decb
outsl
icebp
or
cmp
xchg
orl
inc
jg
adc
repz
icebp
sub
test
repz
xor
les
ljmp
adc
jmp
jg
mov
mov
inc
pop
adc
out
mov
dec
sub
adc
push
adc
pop
cld
jo
pushf
adc
cltd
or
rol
xor
loopne
dec
adc
mov
push
or
sub
incl
inc
adc
test
stc
ja
insl
mov
push
inc
jp
or
dec
mov
push
mov
pop
lcall
imul
fucomi
adc
push
jmp
sub
incb
pop
cltd
and
gs
jo
pushl
popa
aam
jg
inc
cwtl
lret
fisttpl
cmc
and
repz
dec
rorl
xchg
lds
in
inc
inc
aad
sar
ljmp
insb
mov
out
sub
push
and
jle
push
dec
xchg
pop
mov
in
sahf
aaa
cli
incl
repz
prefetchw
or
das
ja
ja
mov
push
sub
xchg
cli
call
adc
fwait
inc
jl
pop
loop
inc
inc
mov
inc
jg
shll
repz
add
pop
dec
fdiv
or
ljmp
out
push
out
push
cwtl
fsubrl
test
pop
sbb
cmp
add
add
add
pop
add
cmp
push
sbb
mov
jg
mov
xchg
mov
fcomp
pushw
fisubrs
cmpsb
ds
cltd
xchg
call
adc
popa
xor
daa
aas
jmp
and
int3
cmpsl
xor
lods
repnz
aaa
and
mov
sbb
dec
xorb
mov
push
xor
push
ss
ljmp
call
fldcw
es
sub
fs
aad
pop
ljmp
jmp
push
out
jb
mov
rcrb
fdivrp
push
xlat
mov
xor
dec
xchg
es
cmc
adc
fdivr
push
pop
cli
subl
lret
dec
xor
cmp
shlb
xor
sub
std
or
das
xchg
scas
xor
pop
jno
mov
fiaddl
shll
mov
pop
fnstcw
mov
sbb
call
mov
mov
jmp
popa
outsl
jmp
jae
repz
and
cmp
pop
das
pushf
into
cltd
jp
testb
mov
add
push
push
fdecstp
notrack
mov
add
add
iret
sti
lock
xchg
ss
push
mov
loopne
mov
incl
call
mov
add
jl
mov
mov
es
xchg
mov
jne
aas
jnp
outsb
mov
push
cli
das
cld
call
ljmp
or
inc
pop
addr16
add
adc
lcall
imul
xor
leave
fwait
sti
jb
sub
test
mov
mov
mov
sub
loopne
aam
fisttpll
enter
insl
hlt
mov
rolb
jbe
sbb
incl
insb
pop
jb
dec
xor
jno
sub
mov
cmp
decl
repz
push
xlat
mul
cmpsl
dec
in
sbb
jmp
les
cmp
stc
xchg
les
dec
xchg
push
fistl
xchg
xchg
fsubp
lret
and
sbb
pop
jg
pop
js
jmp
fistpl
fldl
rol
pop
xchg
xlat
cmpsl
jmp
and
mov
adc
stc
fiaddl
mov
mov
ljmp
pop
inc
or
add
or
ljmp
call
out
push
je
sbb
shll
sbb
ljmp
cmc
arpl
in
lahf
adc
cld
push
das
mov
cmp
loop
mov
or
in
lcall
sti
ljmp
icebp
incl
fists
pop
sub
pop
xchg
push
inc
xchg
or
incl
mov
pop
push
lcall
and
inc
jecxz
das
std
lret
test
dec
dec
mov
fldt
pop
or
decl
ljmp
fsubr
test
and
xchg
adc
loop
shl
decl
adc
bound
and
daa
data16
std
stos
pop
movsl
cmp
inc
addr16
xor
test
pop
dec
push
or
push
mov
xchg
add
je
loop
loop
push
jo
add
mov
stos
jmp
sub
test
mov
les
addr16
mov
call
cmp
sbb
fdivs
and
mov
xorl
jmp
push
insl
push
cli
jle
inc
jno
cs
mov
jmp
lds
add
into
xchg
subl
jne
pusha
in
xor
cli
mov
ljmp
cmc
push
push
or
imul
sub
xchg
fiaddl
sahf
mov
loop
mov
fldlg2
ss
ljmp
cmc
fimuls
sahf
shll
push
cwtl
cli
out
les
push
test
clc
call
mov
test
push
mov
pushl
jg
ljmp
push
aaa
in
out
clc
arpl
lahf
cmp
add
jmp
in
fcmovb
cwtl
loopne
in
incl
mov
inc
icebp
mov
or
andl
lods
jmp
or
adc
sbb
int
lret
int3
mov
js
sub
xchg
adc
icebp
sub
jmp
int3
leavew
rolb
nop
and
mov
mov
clc
int3
sbb
and
mov
jg
push
lret
in
or
adc
sar
mov
scas
jle
xchg
lock
aam
lret
js
mov
cli
sbbl
enter
or
sti
push
nop
mov
lcall
mov
std
sbb
lds
stos
aad
pop
rorb
sbb
xchg
lcall
dec
pop
push
pop
lods
pop
jle
push
fistl
push
push
fwait
or
sbb
push
jg
cwtl
xlat
aaa
incl
mov
popf
fcomps
cmp
aad
inc
pop
mov
enter
cmp
fmul
lret
jge
push
test
gs
cmc
std
out
popf
out
jnp
push
scas
jecxz
jg
mov
mov
adc
outsl
scas
mov
outsl
lods
jg
addb
add
mov
rep
add
fldt
loopne
call
and
mov
shll
cmc
push
xchg
sar
sub
sarb
mov
adc
push
xchg
ficoml
push
mov
rcr
dec
addb
jecxz
inc
insb
pushf
add
inc
test
std
add
mov
add
outsb
lds
cld
mov
xchg
jns
xor
outsb
lcall
jmp
mov
xor
push
sbb
dec
cld
jmp
fidivrs
bound
pop
cwtl
shrl
aad
jmp
fsub
push
xchg
js
and
cld
imul
jle
sbb
xchg
in
mov
or
jb
cmp
outsl
cli
mov
xor
mov
push
xchg
cmp
dec
sti
fucomp
idivl
hlt
jmp
cld
jbe
mov
mov
jp
cli
sub
jle
adc
jp
loopne
xlat
mov
cld
sbb
dec
jo
subl
inc
out
iret
aad
ja
push
mull
dec
fcos
lcall
pusha
sbb
jle
mov
hlt
jp
pop
jns
lock
roll
loop
jl
stc
xor
jnp
cli
movsl
shrl
pop
subl
inc
add
adc
xor
sub
fptan
pop
jns
mov
in
push
dec
icebp
jg
repnz
setnp
xchg
or
mov
nop
add
and
jmp
pop
fisubs
popf
sbb
add
in
js
mov
jne
in
decl
and
shlb
mov
fcoms
ficomps
ds
mov
pop
xor
mov
or
and
mov
add
adc
sub
push
jg
sub
add
xchg
lds
mov
and
sti
xchg
sbb
mov
sbb
or
loopne
pop
repnz
mov
jl
pop
hlt
and
shrb
and
lcall
add
mov
out
leave
pop
das
add
xor
dec
cmp
or
jne
push
xchg
mov
mov
xorps
bswap
or
popa
repnz
mov
in
mov
inc
aas
xchg
sti
pop
inc
push
daa
sarb
adc
cmp
mov
sar
adc
pushf
in
scas
mov
adc
insl
movsb
mov
call
and
xlat
sub
inc
jp
rcll
and
jae
imul
call
fadd
xor
ja
movsl
jmp
shll
pop
cmp
adc
out
and
negb
out
cmpsb
stc
adc
xchg
cmp
out
adc
enter
pop
clc
call
int3
inc
pop
and
jge
mov
nopl
jmp
mov
mov
test
int
mov
xchg
mov
imul
pop
daa
xor
mov
push
clc
jp
das
adc
loope
pop
cli
movhps
lret
out
jae
lahf
jno
call
adcl
call
xchg
pushl
dec
jmp
xchg
addb
sti
in
fbld
pusha
mov
stc
cmpsl
pop
xchg
popf
mov
outsl
push
push
decl
lock
in
mov
push
repnz
out
cmp
aas
jl
lock
shrb
pop
pop
fstp
roll
add
mov
fadds
push
add
pushf
lret
fs
rcrl
mov
in
mov
push
jmp
mov
aad
xchg
adc
mov
sub
mov
dec
jg
and
cli
data16
loopne
dec
loop
loopne
sub
rcrl
lcall
cmpsb
fwait
ret
push
dec
jae
xor
push
jle
clc
jne
inc
mov
cli
ljmp
mov
out
jne
jl
sub
in
and
dec
mov
adc
cmp
pop
popa
inc
and
fildll
andl
push
mov
movsb
cmp
mov
aad
stos
push
mov
mov
lock
sbb
aas
nop
and
sbb
push
xchg
mov
ss
xchg
jae
sbb
testb
ljmp
xlat
xor
faddl
mov
dec
jbe
mov
dec
pushl
fst
fdivrl
jo
xchg
test
ja
imulb
or
scas
stc
mov
cli
push
loopne
cli
mov
dec
jp
iret
jo
mov
sub
xchg
lods
test
inc
sub
ljmp
rcrb
sub
loop
sub
pop
int
sbb
test
mov
aam
pop
mov
lcall
fstl
mov
out
popf
iret
pop
jno
push
loop
gs
out
mov
pop
xor
ljmp
loop
cs
movsb
das
sbb
out
add
loop
pop
sbb
lock
jecxz
nop
std
inc
xchg
or
inc
and
iret
push
pop
cmp
imul
ljmp
jge
sbb
icebp
xchg
push
jle
adc
inc
mov
pop
out
xor
push
daa
adc
adc
out
popa
pusha
arpl
and
sub
and
add
dec
std
pop
andl
int3
push
add
pop
clc
outsl
mov
gs
aad
fs
sub
xchg
incl
popa
daa
push
cltd
out
arpl
pushf
loop
push
das
pop
or
mov
pop
push
mov
and
mov
lret
shl
inc
ja
pop
sbb
into
out
aaa
popa
pop
mov
lock
jbe
out
js
in
js
pop
dec
stc
push
jmp
push
andl
mov
xchg
mov
jno
stos
lcall
dec
push
bound
sub
sti
cmpsb
sub
imul
or
fwait
dec
jmp
lcall
ljmp
gs
out
or
jbe
or
testb
mov
adc
jg
imul
outsb
lret
loop
dec
sbb
sti
xor
push
je
out
leave
cld
decb
jg
add
das
aad
jmp
out
out
jmp
push
clc
xor
lock
adc
mov
or
and
dec
and
das
xchg
and
ret
jno
inc
loop
mov
or
bound
or
xor
outsb
loop
leave
jecxz
loop
mov
push
ret
dec
test
ret
std
cmp
push
mov
push
add
push
xchg
adc
jno
fwait
add
movsb
jle
inc
mov
in
cmp
dec
add
mov
test
aad
fnsave
jle
and
ljmp
add
mov
pushl
or
mov
cwtl
pop
or
pop
xor
mov
cmp
out
fmul
jle
pop
push
or
pushl
mov
loope
or
pop
dec
or
cmp
jg
test
lret
xchg
pop
gs
adc
or
cmp
jp
cld
lods
adc
lods
aas
mov
jg
jg
pop
mov
stc
sub
xchg
mov
frstor
stos
or
and
jbe
subl
insb
mov
jg
in
or
cltd
inc
fbld
cmpb
push
xchg
cmpsb
fbld
movq
and
inc
sti
jo
mov
add
adc
imul
add
cwtl
mov
int3
cmpsb
xchg
sub
jge
in
add
inc
sub
test
cmpsl
subb
jmp
pop
inc
loope
shlb
mov
mov
xor
mov
stos
xchg
xchg
movsb
fstpl
je
xchg
add
mov
or
lods
call
or
movsl
or
adc
pushf
ss
adc
sbb
cltd
cmpsl
push
sbb
adc
mov
mov
rclb
sbb
mov
xchg
push
int3
sahf
dec
fmuls
cmp
cmc
jmp
bound
push
clc
add
mov
dec
jmp
lea
mov
mov
lahf
inc
cmp
lods
jg
jg
inc
cmp
stos
nop
stos
adc
int3
sub
je
decl
cmc
fnstcw
mov
mov
repz
pushl
addr16
stc
es
jnp
sbb
or
test
or
test
xchg
fidivrs
sub
shll
outsb
lods
cmp
mov
scas
sahf
jg
das
decl
js
mov
rorb
loope
subl
rclb
ficoms
scas
daa
pop
shll
add
ret
dec
jl
mov
jne
leave
sbb
xchg
clc
jmp
lret
jecxz
scas
das
jg
pusha
mov
and
lock
mov
arpl
xor
mov
ss
mov
and
cmpsb
mov
movsb
xchg
pushf
mov
push
mov
add
xor
sbb
mov
int
mov
xchg
and
enter
dec
inc
jmp
fidivl
cli
ss
decl
cwtl
mov
mov
pop
es
and
ljmp
mov
out
mov
mov
mov
mov
test
cmp
das
sbb
jle
xchg
dec
decl
ja
repz
push
push
movsb
scas
xchg
pop
in
or
push
push
pusha
jbe
mov
inc
out
mov
lahf
mov
pushl
xor
mov
mov
ss
push
sub
rclb
outsb
insb
lcall
mov
push
andb
or
add
mov
es
popf
jle
mov
pop
pop
xlat
push
dec
and
sub
fxch
xchg
popa
xchg
dec
mov
jecxz
jno
call
mov
imull
add
icebp
mov
jp
lcall
std
push
outsl
into
loop
cmpsb
inc
nop
inc
aas
dec
and
test
sub
pop
mov
pop
adc
sub
fidivrl
mov
sub
adc
push
push
mov
lods
push
xchg
pop
dec
sub
sti
mov
or
idivb
in
lea
lahf
rep
mov
bound
push
cmp
pop
iret
stos
pop
add
lret
inc
icebp
sbb
aam
sarl
ljmp
lods
je
push
mov
pusha
jge
sbb
mov
cltd
dec
jl
ljmp
stos
cmp
arpl
sbb
jle
mov
data16
incl
add
pop
adc
rorb
decl
inc
popa
mov
lds
pop
dec
inc
lret
out
aad
pop
movsl
jg
loopne
ss
jae
out
fdivp
and
cmpsl
or
or
mov
imul
movsb
xor
xor
pushl
lret
test
inc
ja
icebp
ret
fstpl
int
decl
pop
aad
xchg
loop,pn
icebp
out
jb
jg
cmc
adc
js
adc
cli
or
jmp
loope
mov
push
mov
push
mov
test
iret
xor
pop
mov
mov
xor
add
adc
inc
inc
int
leave
into
jne
lcall
loope
mov
fnsave
vpshab
ja
lock
or
jno
pushl
push
xchg
lahf
rol
std
adc
xor
jnp
or
lock
call
mov
outsb
sub
xchg
test
into
ljmp
test
cmp
fimuls
mov
hlt
jb
daa
mov
pop
inc
std
je
mov
mov
mov
xor
divb
pop
mov
inc
cmp
call
fistps
fdiv
imulb
push
insl
xchg
mov
filds
ret
mov
out
and
or
stc
ds
xchg
inc
jmp
call
pushl
repnz
cmp
insl
dec
sbb
imul
dec
das
sar
jmp
lahf
push
shrl
sbb
inc
test
mov
inc
lret
lcall
adcl
nop
inc
xchg
shlb
push
mov
mov
xchg
imul
and
cmp
test
pop
dec
rorb
adc
bound
mov
inc
mov
bound
jnp
sub
mov
fwait
jb
jg
ljmp
fcompl
icebp
xor
into
pop
in
mov
outsl
xchg
cli
or
lea
gs
mov
xchg
insb
ficoml
hlt
ret
cmp
stos
sub
test
icebp
pushf
cli
jge
fs
jle
mov
adc
insb
inc
sar
pushf
pop
movsl
mov
mov
pop
decl
dec
mov
cmovge
test
cs
out
and
scas
loopne
ljmp
push
adc
outsb
in
mov
push
popaw
sub
test
aas
cli
std
scas
sbbl
xchg
push
negl
push
jo
fldenv
add
in
sti
dec
jns
inc
xor
scas
test
ljmp
dec
rcl
xchg
rcrl
push
mov
mov
popf
lods
jbe
mov
rorb
or
out
and
mov
leave
sub
mov
jecxz
ljmp
cmpsb
and
mov
cwtl
add
xor
sub
fstps
das
cmc
jb
adc
rol
pushf
aam
or
ljmp
stos
insb
pop
sbb
and
mov
adc
push
pop
mov
jno
sti
fcmovu
sub
in
repz
inc
cld
test
lock
hlt
sub
std
call
and
test
notl
divb
cwtl
and
push
jg
and
and
dec
adc
fbld
cwtl
inc
push
rcrb
out
adc
and
jb
insl
clc
xchg
rcl
cmp
dec
mov
je
jg
lcall
lods
and
mov
insl
and
adc
call
fldt
test
out
pop
pop
fwait
sbb
cwtl
das
cld
push
xor
pop
popa
inc
or
ljmp
jbe
mov
out
and
dec
stos
cs
out
mov
xor
jmp
push
mov
lcall
stos
adc
mov
lods
adcl
pop
mov
sar
and
cld
ret
clc
and
out
mov
adc
mov
fnstcw
ljmp
xor
punpcklbw
pop
cltd
popa
add
or
xchg
mov
daa
fcomps
cmp
mov
mov
mov
mov
pop
adc
test
in
pop
incl
pop
and
jp
bound
push
mov
pop
xchg
dec
add
or
jl
into
inc
jne
push
mov
push
ljmp
std
push
and
xlat
jle
aad
jnp
and
add
or
mov
xchg
mov
jecxz
aad
fisttpll
push
and
call
lcall
sub
or
ss
mov
sbb
decl
stos
mov
pop
push
stos
ds
adc
inc
nop
xchg
push
cmp
call
repnz
sahf
ja
insl
xchg
add
mov
sub
mov
inc
sbb
testl
add
lret
mov
cmc
dec
or
pop
enter
lds
mov
pop
cli
bound
adc
pop
add
mov
jle
fucomip
xor
test
push
mov
dec
push
or
incl
jecxz
jecxz
jmp
fisttpl
sbb
sbb
mov
repz
mov
ja
adc
dec
cmp
or
xor
arpl
inc
push
or
mov
shll
pop
inc
and
adc
movsb
cli
and
lcall
in
fadd
mov
sub
or
call
or
das
lock
push
sbb
adc
jmp
aas
pusha
sarb
sub
call
fwait
sub
lahf
clc
in
scas
xor
out
push
lock
add
pushl
sub
scas
in
pop
imul
loope
lahf
push
movsb
mov
add
lcall
repz
lock
std
imul
outsl
cmc
ja
fwait
enter
out
repz
and
cmc
inc
decl
js
enter
dec
in
jns
jg
mov
insb
dec
and
sbb
pusha
popa
cs
jecxz
out
data16
jmp
push
stc
int
adc
lock
cld
fisubrs
incl
iret
sbb
cmp
sub
fwait
cmp
fsubrs
cmp
add
dec
outsl
lea
fsubrs
pop
inc
sar
lcall
push
fcomp
aas
mov
xchg
jecxz
cmp
mov
fbld
insl
or
sbb
imul
dec
and
mov
je
mov
cmc
inc
inc
mov
insl
dec
testb
call
enter
jo
lock
out
mov
cmpsl
lahf
mov
mov
push
aam
push
sbb
cli
pop
orb
adc
push
bound
xchg
adc
daa
pop
int3
xchg
stos
roll
incl
loop
mov
jns
xor
outsb
imul
lret
and
test
cmc
fiaddl
dec
les
jl
mov
in
mov
mov
stos
xchg
cltd
stc
or
pushl
push
sbb
and
lods
mov
push
mov
test
test
test
call
aam
test
in
data16
xorb
sarb
cmpsb
jns
adc
scas
pop
xchg
out
and
adc
lahf
enter
icebp
add
ljmp
insl
and
ljmp
lahf
add
test
loop
loop
rcrb
mov
int
lea
fisttpl
orb
lock
jg
rol
bound
adc
int
mov
mov
mov
lcall
cmp
push
pop
int
dec
xor
mov
imul
push
push
dec
lock
xchg
mov
in
int
out
test
cmp
inc
dec
pop
lcall
mov
push
inc
jb
leave
clc
inc
xchg
orl
sub
test
mov
lock
inc
in
int3
xor
add
stos
ss
jp
test
push
sbb
xlat
inc
xchg
jo
out
adc
out
out
repz
mov
push
dec
bound
adc
scas
mov
mov
ss
push
jmp
dec
cmp
mov
std
fistpll
inc
iret
pop
adc
imull
lcall
lods
pushf
lcall
sbb
les
pop
in
mov
ljmp
xor
and
in
lods
mov
out
add
pop
mov
or
outsb
pop
jg
mov
ret
jbe
pop
pop
jne
in
ss
movsl
dec
std
mov
repnz
adc
lcall
cs
push
subl
roll
popf
push
push
mov
xor
add
shrl
out
das
imul
or
ljmp
or
fldt
pop
lcall
call
pop
sub
mov
in
dec
mov
incl
push
lds
jne
sbb
xor
and
xor
dec
decl
dec
stos
mov
pop
popa
sbb
notb
gs
imulb
ret
lret
imul
add
inc
jle
and
adcl
fwait
cwtl
scas
clc
outsl
push
sahf
push
out
inc
pop
in
adc
cmpsb
cld
adcb
fists
push
mov
nop
push
or
push
jnp
in
mov
out
dec
ljmp
jecxz
pop
pop
test
clc
test
cmpl
push
pop
das
addr16
inc
mov
cli
mov
add
xor
sub
pop
pop
inc
icebp
lcall
aad
decl
sub
push
aad
out
fs
movsl
mov
pop
into
or
push
sarl
aas
gs
push
mov
call
pop
xchg
and
mov
cmp
mov
lods
scas
mov
pushl
sarb
ds
subl
sub
push
leave
cwtl
sahf
sarb
xchg
add
push
pop
mov
sbb
pop
movsb
pushf
pop
aad
push
pop
imul
insb
hlt
cmp
add
int
push
jg
or
dec
mov
fmulp
inc
push
xchg
sub
lds
mov
les
leave
adc
jg
insl
pop
mov
test
and
repnz
jns
adcb
jmp
add
incl
in
int
and
sti
push
mov
add
or
out
insb
xor
call
int
sbb
sbb
subb
add
add
fistpll
sahf
mov
incl
cli
pop
outsb
loope
mov
push
es
inc
enter
lock
ljmp
lret
aam
pop
xchg
and
jns
negl
cmp
clc
xor
mov
cmovle
jle
arpl
pop
and
push
es
lahf
pop
call
mov
xchg
cmpl
mov
rorl
cmp
pusha
mov
adc
les
jbe
decl
pushf
jp
scas
and
cwtl
mov
ss
adcb
imul
push
sbb
lcall
popf
add
scas
jnp
test
push
in
add
ja
or
int3
aam
movsl
incb
stos
ud2
cmpsb
xchg
bound
dec
arpl
push
in
jnp
fidivrl
mov
andl
mov
loope
mov
dec
pop
dec
daa
ret
mov
dec
jecxz
incl
fs
pop
outsb
addr16
les
cmp
mov
insb
cmp
out
adcb
filds
jle
decl
out
fsubrs
loopne
xor
fiadds
cmpsb
and
mov
inc
into
sahf
add
lret
sub
nop
sbb
push
call
pop
inc
mov
cmpl
jbe
fwait
sahf
ja
add
jo
fsts
cli
imul
aam
lds
pop
or
incl
ja
sub
lods
in
scas
addb
add
jg
lock
leave
pop
int
mov
cwtl
mov
cmpb
pop
stc
xor
shrb
dec
aam
js
sbb
cs
jmp
fdivs
xchg
jle
mov
decl
inc
cmc
ret
pusha
jbe
pop
add
xchg
popa
or
jns
xchg
ffreep
lcall
lret
scas
rorb
pusha
mov
mov
mov
ja
pop
pop
in
fisttpll
ljmp
cltd
icebp
outsl
out
sbb
and
dec
pop
sbb
cwtl
lahf
jg
aam
push
pop
inc
jmp
cmpsb
sbb
dec
shl
add
inc
popl
mov
or
jl
jg
dec
or
repnz
mov
jmp
jnp
orl
outsb
orb
out
imul
clc
incl
dec
xlat
mov
or
dec
enter
mov
jno
call
sub
repnz
pushf
xchg
or
adc
push
ja
sub
dec
adc
icebp
cltd
scas
adc
push
addr16
lock
mov
loopne
shl
cmpsl
decl
enter
js
cli
repnz
xor
incl
sub
dec
lcall
test
cltd
push
iret
pusha
jmp
jle
jbe
sub
xor
cs
hlt
add
sahf
xchg
incl
jmp
or
or
xor
addr16
ret
jo
das
lock
cmp
clc
scas
pop
fmuls
test
xchg
inc
mov
movsl
test
mov
xchg
push
movsl
dec
pop
adc
nop
fcoms
add
mov
cld
ljmp
fwait
imulb
push
in
scas
cs
ret
nop
lds
popf
stc
push
out
adc
push
lock
decl
cmp
into
dec
mov
aad
pop
lods
movsl
ret
push
aas
test
ljmp
xchg
push
pop
mov
xchg
jp
xlat
cwtl
push
xor
ffreep
push
xor
and
aad
pop
fildll
js
xor
sub
in
roll
lock
fwait
insb
mov
adc
or
dec
fwait
mov
jnp
sub
mov
push
ljmp
in
and
aam
sbb
or
fsts
pop
adc
add
sub
jne
mov
out
pushf
and
ljmp
inc
das
pop
cli
pop
jmp
shlb
mov
mov
jmp
cmp
aad
mov
sub
cmp
or
pop
pop
fcoms
shlb
adc
or
pop
stos
out
gs
fsubs
xor
cmp
movsb
movsl
adc
popa
adc
pop
insb
pop
cld
call
imul
push
push
add
xlat
push
test
insb
xchg
push
mov
mov
push
lcall
out
sbbb
adc
push
incl
dec
jl
or
cltd
cmp
lods
pop
sbbb
aad
dec
push
fmuls
jle
es
xor
ljmp
mov
aas
ss
push
outsl
jne
xor
dec
mov
dec
test
mov
and
pop
mov
outsb
lret
dec
dec
xchg
sahf
shrb
cmp
jmp
mov
into
data16
pop
jno
push
loope
sub
mov
jle
mov
ret
cli
xchg
int3
sbb
cli
lcall
inc
mov
mov
cmp
clc
out
icebp
ficoml
push
cld
test
aad
and
sub
mov
jg
mov
rcr
cmp
push
cmp
add
gs
xor
jbe
dec
incl
or
outsb
xchg
push
pop
jne
xorb
repz
jmp
fmul
mov
lds
mov
icebp
add
ljmp
leave
xchg
pop
scas
pop
movsb
bnd
imul
mov
cmp
aad
cltd
xor
insl
jmp
rorl
jmp
push
ss
pop
inc
jle
out
sbb
shll
lahf
fildll
ljmp
clc
das
hlt
in
enter
aad
in
or
sub
add
call
jae
fs
fcomps
mov
inc
pop
or
xchg
faddl
mov
fstpt
lea
xor
popa
aaa
xlat
dec
dec
das
xchg
jmp
xchg
jg
pusha
dec
xchg
mov
inc
mov
ds
jmp
outsb
lcall
inc
sahf
mov
lret
pop
and
inc
clc
test
ljmp
cs
jmp
imul
loope
rorb
jnp
xchg
and
inc
adc
and
mov
es
push
mov
aaa
pusha
jle
dec
add
call
test
test
je
xor
aas
rep
mov
lock
outsl
out
xor
pop
push
add
test
dec
mov
mov
and
pop
insl
hlt
out
bound
in
call
cmp
lcall
push
push
jae
add
and
enter
loop
incl
call
jmp
in
cld
imul
sub
jnp
inc
loopne
mov
lcall
mov
incl
lds
cmp
sub
ja
loop
shll
mov
repnz
int
pop
insb
inc
adc
loop
mov
mov
stos
ljmp
and
dec
and
mov
stos
out
fs
push
aaa
adc
lcall
cmp
lods
adc
push
addb
inc
loop
pop
pushf
je
mov
clc
rclb
inc
cmp
rol
push
addr16
stos
lods
jns
inc
sahf
xchg
xor
mov
lods
push
decl
hlt
xchg
cmc
movsb
xchg
dec
out
add
add
or
jnp
ljmp
cmc
dec
in
pop
and
shlb
jbe
pop
popf
loopne
push
es
orb
push
add
mov
push
loope
sbb
cli
incl
adc
sub
aaa
or
inc
mov
stos
adc
jmp
or
xchg
mov
pop
jae
add
xchg
pop
mov
lcall
or
dec
je
arpl
ja
mov
cmp
jae
out
loope
cli
call
dec
fiadds
enter
pop
xorb
js
pushl
leave
mov
pop
dec
jp
nop
mov
mov
dec
test
call
sbb
pop
cmpsb
pop
push
addl
dec
mov
push
sbbb
pop
enter
sub
int
clc
incl
rcll
pushw
pop
pop
cmpsb
sub
mov
lcall
pusha
aad
fsubrp
ds
fmulp
sti
imul
das
pop
loope
pop
loopne
incl
scas
pop
inc
inc
xor
inc
enter
aad
xor
pop
or
jbe
movd
jmp
or
insl
mov
addl
add
arpl
lret
sbb
jle
shrb
shll
aaa
fs
mov
loop
dec
mov
lcall
adc
es
clc
decl
fwait
dec
push
cld
roll
cld
outsb
mov
je
ja
in
dec
cmp
adc
pop
add
sti
or
shl
lds
pop
cs
mov
cmp
jg
pop
dec
mov
mov
insb
sub
mov
xchg
inc
sub
pop
dec
insl
cmpb
decl
iret
ror
jae
arpl
mov
inc
stc
sub
in
push
ds
dec
incl
sbb
andl
sbb
jge
sbb
imul
or
icebp
js
popa
decl
cld
je
andl
ret
andb
es
aas
sub
xchg
adc
jg
cld
pop
mov
cmp
push
xor
fwait
and
adc
call
and
imul
push
sub
pop
jmp
hlt
xchg
push
cmp
cmp
sbb
movsl
push
jnp
orb
inc
push
pop
dec
std
cmp
call
pop
jne
xchg
bnd
mov
lahf
dec
rclb
xor
test
push
push
pop
cld
fninit
push
stos
mull
mov
inc
xor
aam
repz
jle
dec
gs
xchg
scas
xchg
hlt
cmpsb
add
test
xor
cmp
cltd
lretw
popl
push
inc
and
shll
jne
push
xor
mov
lret
dec
jbe
xor
gs
hlt
jp
cld
ret
repnz
fucomi
mov
xchg
pushl
jns
xchg
out
jo
pop
sub
mov
mov
sar
lea
lcall
or
aaa
sbb
imul
test
jmp
xor
in
mov
mov
sbb
aam
stc
rcr
inc
xchg
dec
test
mov
push
stc
in
dec
pop
lea
scas
insb
or
nop
filds
cmp
decl
mov
clc
mov
mov
adc
punpckhdq
inc
and
sub
add
pop
loop
mov
push
push
lret
cs
std
inc
rcr
movl
jg
call
push
fcompl
loopne
je
lret
icebp
ljmp
sti
out
pop
test
jle
add
fdivs
push
outsb
sbb
test
popf
ds
mov
jp
fwait
movsb
jne
sbbl
or
sub
or
roll
loop
popa
lock
push
adc
cmpsl
adc
dec
mov
repnz
out
add
and
mov
std
fisttps
add
rolb
lock
decl
scas
dec
pushf
inc
pop
repz
or
sahf
loop
or
sub
jb
incl
cmp
dec
and
mov
mov
adc
aad
bswap
cld
shll
cmc
cmp
mov
xchg
pop
cmp
ds
hlt
mov
jg
add
push
mov
lcall
stos
cmc
ljmp
sbb
or
lds
jg
clc
jo
jg
adc
pop
xchg
cmc
stc
in
out
aas
icebp
xchg
shufps
fbld
mov
cld
cli
mov
add
jns
movsl
das
sub
out
push
rorl
cmc
decl
mov
mov
loopne
pop
fcmovb
incl
jg
pushl
into
js
jb
icebp
mov
push
js
loop
cmp
pop
or
popl
dec
sbb
cmp
pop
mov
cmp
fbld
jle
jl
addr16
xchg
jl
add
das
jge
inc
aas
into
adc
sub
xchg
in
arpl
pop
mov
push
push
mov
mov
inc
lahf
jae
add
insb
roll
lea
je
xchg
jg
gs
lea
outsb
push
int
xchg
out
and
push
xor
push
and
mov
movsb
jge
inc
cwtl
sbb
int3
mov
and
dec
lcall
inc
sarl
and
fisubl
jle
out
notb
clc
pop
cld
test
scas
xor
and
stc
cmp
or
hlt
jmp
imul
pop
and
push
repnz
cs
cmp
cmp
imull
mov
or
pop
sti
jg
mov
das
cmc
sub
mov
push
xor
test
xor
stos
mov
mov
mov
call
adc
lahf
cmp
arpl
xor
stos
aaa
xchg
ljmp
data16
adc
jl
mov
sbb
sub
push
insb
test
fisubrs
pushf
mov
cmp
push
sub
mov
fsubp
imul
jb
adc
in
int3
sti
dec
insb
iret
je
ds
lods
ja
icebp
aad
push
dec
push
lret
push
xchg
push
and
adc
out
ljmp
mov
xchg
je
xchg
cld
mov
jns
out
mov
mov
pushl
scas
pop
lcall
hlt
mov
mov
xor
dec
dec
mov
adc
into
iret
outsb
pmaddwd
pop
fisubrs
js
xchg
fldl
aam
jge
mov
mov
aaa
int3
or
mov
sbb
lahf
cmp
xchg
push
mov
decb
pushl
xor
sub
lcall
push
cmc
push
imul
sti
xlat
mov
mov
incl
pop
int3
add
xchg
int
shl
test
jg
std
aad
out
push
mov
push
stos
adc
jae
sahf
fadds
jg
test
jmp
xchg
ljmp
divb
pop
jnp
ret
and
mov
mov
cs
stc
test
jbe
int3
push
lret
cmp
add
mov
sub
outsl
sub
loop
add
clc
cmp
mov
pop
movswl
inc
jg
ds
fsubrl
sti
flds
mov
push
dec
ds
outsl
adc
into
pop
nop
xchg
cmp
jg
jg
in
push
insl
add
les
cltd
dec
sub
stos
aaa
push
jne
sub
adc
cmp
sub
test
sub
jmp
xor
movsb
insb
cli
pushl
xchg
push
dec
jo
dec
fucomp
push
int
push
xlat
cmc
loope
lea
aaa
xor
push
xchg
and
stos
scas
sti
xchg
bound
pop
or
ret
mov
daa
pop
clc
decl
fstpl
test
shrl
inc
out
imulb
punpckhbw
incl
lret
lods
imul
bound
loop
jl
mov
ljmp
jge
rolb
push
mov
xchg
std
sbbl
and
mov
ret
call
clc
xchg
mov
das
cltd
int3
out
cmp
test
inc
sub
sbb
in
stos
jmp
xchg
imull
lret
rol
jns
pushf
push
adcb
cld
or
decl
pop
cmp
outsb
push
pop
movsb
cmp
stos
daa
mov
mov
inc
out
rclb
mov
push
dec
lds
adc
inc
mov
popa
sbb
in
push
lret
incl
mov
gs
ds
scas
mov
adc
cld
lcall
sub
mov
mov
pop
loope
mov
imul
jmp
mov
mov
fucomp
imul
ljmp
pop
xchg
lock
test
sub
scas
or
loopne
push
lcall
fbld
lock
in
pusha
push
mov
fbld
mov
call
fistl
push
in
aam
pop
cmp
push
pop
lods
mov
push
add
in
mov
push
jne
ret
aaa
xchg
call
jb
cs
mov
insb
ret
lock
push
jns
in
outsl
dec
repnz
cmpsl
push
ja
and
out
cmp
push
je
in
popf
test
jne
movsl
out
cmc
push
ljmp
movsl
add
outsl
pop
xchg
sbb
rcrb
pushf
jl
push
das
add
fidivl
std
mov
pushl
xchg
cli
and
push
testl
outsb
decl
sub
add
pushl
cmp
aaa
clc
mov
sub
or
mov
imulb
push
jnp
iret
and
dec
cmp
add
scas
inc
mov
roll
outsl
push
fucomip
sub
mov
cld
out
outsl
addb
mov
js
fisttpll
push
rclb
adc
xor
mov
aaa
fmuls
in
add
ljmp
into
push
cli
gs
push
dec
dec
pop
xlat
add
jl
pop
add
add
and
mov
mov
mov
or
mov
mov
or
mov
xorl
hlt
adcb
cmc
mov
pop
jg
scas
rorb
push
mov
data16
mov
outsl
lods
add
xor
addl
incl
push
adc
cwtl
fwait
int3
mov
lcall
std
sub
dec
cmp
mov
xchg
incl
fimuls
incl
in
roll
adc
cli
ljmp
mov
orb
sti
adc
add
ljmp
js
or
jnp
xchg
js
or
mov
xor
and
pushf
dec
pushf
test
shlb
push
pop
arpl
inc
frstor
sbb
sahf
jp
fistpl
repnz
mov
push
lcall
mov
pop
dec
jmp
cwtl
inc
and
nop
mov
cltd
push
iret
xchg
push
cmp
push
sub
aad
mov
and
ljmp
or
int3
mov
test
repnz
scas
mov
cwtl
push
scas
popf
sbb
pushl
mov
jo
xor
shll
dec
scas
mov
into
daa
xor
push
lods
ljmp
jg
and
movsl
ja
sbb
int
in
sub
jle
rolb
sub
xchg
xchg
mov
xchg
pop
xor
lock
xchg
and
pop
mov
rolb
cmp
jnp
lret
movsl
xor
sub
push
sar
test
dec
cmp
scas
cmc
xor
mov
mov
jg
jge
pop
mov
nop
sub
icebp
imul
movsb
cltd
out
cmp
lcall
lcall
xor
ds
push
mov
sbb
dec
sbb
xor
fsubrl
mov
pop
xorb
dec
bswap
or
scas
sbbb
shl
sbb
mov
or
ljmp
dec
mov
ret
iret
das
insb
mov
dec
cmp
shlb
cs
jbe
jmp
mov
mov
ljmp
mov
mov
pop
lock
hlt
mov
loop
sbb
xor
mov
mov
insb
outsb
mov
and
into
lret
inc
xchg
rolb
push
arpl
jmp
inc
dec
xchg
jns
add
sti
cmp
popa
nop
adc
inc
test
rolb
dec
mov
rolb
lcall
inc
in
les
inc
pop
add
inc
aas
mov
sbbb
ss
out
mov
dec
nop
in
dec
repz
add
bound
mov
or
inc
ret
out
int
xchg
dec
and
sub
fsubl
dec
xchg
fsubrs
call
mov
scas
adc
inc
rcrb
xchg
sahf
inc
inc
dec
pop
pop
lret
adc
push
sub
ljmp
leave
inc
push
or
cli
mov
ret
xlat
lcall
jnp
iret
and
adc
mov
sub
jg
push
ds
cmp
lahf
mov
inc
dec
add
aam
mov
lcall
faddp
sub
pop
loop
jecxz
mov
pop
inc
out
clc
push
cld
jnp
movsb
cs
fsubrl
push
adc
sub
daa
mov
call
xor
pushf
mov
dec
push
dec
loope
int
push
nop
pop
fisubs
decl
push
sbb
arpl
rorb
push
insb
in
add
movsb
mov
pop
dec
ljmp
push
loop
aas
adc
jecxz
mov
scas
loopne
jg
fs
xor
incl
icebp
jae
fldt
movsb
iret
fmuls
icebp
pop
jo
movsb
loopne
imul
jg
stos
and
cmc
popa
jns
test
addr16
add
adc
decl
xchg
fs
arpl
andb
call
repz
lds
xchg
pop
icebp
inc
xchg
fldt
pop
dec
loop
adc
bound
jmp
inc
in
jg
lods
out
or
add
cmc
out
lahf
jns
mov
inc
mulb
out
cld
sub
cmp
sarb
lock
mov
inc
lret
ljmp
cmp
pop
jl
jmp
aam
das
sub
pushf
add
push
push
jg
lea
pushl
cmp
mov
push
lcall
mov
mov
pushl
shll
push
lock
dec
pop
out
mov
loopne
pop
jae
ljmp
push
mov
orl
jbe
sbb
jl
jo
add
shll
and
call
cli
sub
stos
lock
out
sbb
sar
cs
xorl
outsb
pop
cs
pop
pop
pop
fs
and
add
js
cld
and
mov
mov
xchg
jae
fs
repnz
cmpsl
test
loope
ljmp
add
mov
inc
add
inc
lret
add
loopne
aas
jb
test
ja
pop
ret
or
jae
nop
xorb
add
cmp
push
pushf
je
xchg
cld
mov
xchg
pop
insl
and
int3
or
in
xchg
ja
ljmp
pop
loopne
push
or
jns
xor
adc
call
mov
pop
test
in
lcall
mov
std
dec
dec
cld
pushl
sbb
int3
inc
push
pop
leave
leave
mov
mov
xchg
push
pop
ljmp
dec
jge
or
add
mov
call
sbb
push
pushf
out
test
jge
and
test
adc
sub
lcall
mov
xchg
pop
jo
adc
insb
dec
mov
and
loop
sbb
sahf
jg
pop
cmp
jp
mov
adc
push
xchg
or
adc
lds
call
es
mov
xchg
inc
sbb
inc
popf
mov
cmp
jge
inc
dec
and
jl
addb
decl
mov
mov
sub
in
sub
decl
mov
and
cmpsl
mov
jecxz
cmpsb
sbb
aaa
jae
mov
xlat
lds
movsb
push
movsb
ljmp
mov
ljmp
jb
lods
fadds
jne
jp
sbb
xchg
lea
aaa
xchg
movsl
mov
inc
decl
pop
test
stos
mov
mov
mov
mov
lods
and
es
fsubrs
dec
clc
frstor
mov
in
sub
cli
ljmp
mov
sub
sub
sbb
lock
mov
push
ljmp
cld
xchg
push
ret
mov
hlt
push
mov
push
sarl
lret
pop
pushl
cmc
or
iret
ss
dec
subl
jg
or
int
inc
pop
pop
loopne
pop
sub
xorl
mov
cmp
pop
ljmp
adc
dec
cmp
mov
sub
ret
mov
incl
jae
out
incl
les
mov
mov
shl
adc
push
call
movsb
movsl
aaa
xor
mov
and
jmp
mov
lods
adc
sbb
cmp
push
pop
les
stc
aaa
shll
out
xchg
repz
cwtl
xchg
xchg
inc
or
inc
mov
push
mov
dec
fcomi
cmpsl
lds
xor
aas
dec
lods
xchg
pushl
rclb
inc
push
fnstcw
outsl
imul
lret
jno
dec
test
cwtl
sub
inc
cmpsl
cld
aam
push
dec
mov
adc
pop
stos
movsb
dec
adc
inc
je
pop
ljmp
in
inc
fstps
xor
or
call
dec
leave
pop
xlat
outsl
loopne
sbb
rcl
int
dec
leave
mov
incl
lret
xchg
loop
sbb
mov
inc
cld
dec
mov
out
and
repnz
hlt
mov
loopne
fs
imul
dec
fs
rorb
icebp
jbe
orb
push
pushl
lcall
in
movsb
arpl
lahf
pop
add
sub
jne
aas
ss
leave
xor
loop
lret
outsb
jmp
and
and
frstor
das
cld
das
and
test
mov
pop
and
dec
mov
clc
movsl
call
add
mov
jmp
jge
lock
icebp
call
cmp
mov
loop
jle
push
out
cli
ljmp
cmp
repz
cs
mov
fistps
pop
std
and
out
xor
and
andb
or
lret
hlt
decl
pop
mov
sub
mov
push
sbb
sub
jecxz
or
lcall
pop
add
dec
je
jg
and
adc
push
jp
inc
cmpsb
les
fiaddl
inc
scas
mov
dec
mov
cmc
out
enter
in
add
or
inc
movsl
fwait
adcb
or
and
mov
aaa
mov
jne
dec
push
decb
fsub
jg
fcomip
sub
shrb
pxor
arpl
pop
sbb
test
dec
xchg
test
pop
cld
jle
stos
das
add
call
incl
mov
test
fiaddl
fildll
dec
push
mov
loopne
sub
sbb
sub
mov
jmp
push
cli
and
hlt
fbstp
cmc
mov
dec
sbb
jmp
pop
imulb
pop
sbb
pop
in
enter
jp
sbb
pop
fwait
es
xor
ljmp
and
and
rcrb
incb
mov
outsl
cld
jg
ror
mov
xor
clc
int
mov
pop
js
cli
or
filds
sub
gs
scas
xor
sbb
sar
hlt
jg
andl
push
inc
mov
incl
jl
fldt
imul
in
dec
dec
inc
sub
dec
es
daa
jb
mov
push
aam
dec
cli
xchg
data16
pop
jp
pop
dec
loop
mov
loope
out
jle
icebp
xchg
mov
inc
mov
mov
test
call
and
mov
loop
mov
pop
iret
sbb
in
data16
jns
filds
into
into
push
stos
mov
pop
out
in
mov
mov
clc
pop
shl
add
lcall
mov
loopne
sub
test
out
sub
jmp
insb
add
fiadds
arpl
mov
mov
pushl
into
cmpsb
movsb
xor
lods
or
loopne
mov
test
or
lcall
mov
and
mov
nop
mov
inc
sbb
fists
shrb
jmp
ja
cmp
out
mov
adc
adc
or
xchg
cwtl
lcall
jae
jmp
lods
mov
mov
fcoml
add
jb
push
push
mov
ljmp
sbb
mov
jb
popa
mov
outsl
xchg
push
js
pop
inc
pop
cld
xchg
fstl
add
pushl
clc
dec
data16
rcrl
cltd
cmpsb
mov
cmp
test
nop
mov
arpl
js
cs
shl
int
pop
lret
sahf
in
sub
jg
jg
jge
mov
adc
aaa
mov
mov
es
ljmp
negb
test
aas
xlat
pop
fwait
jg
pop
testl
incl
push
xchg
stos
int
aad
cltd
xchg
sub
push
xchg
les
sbb
ljmp
dec
pop
sub
fistpll
mov
sbb
shr
pop
or
mov
outsl
xor
jg
shrl
pop
adc
xor
mov
jecxz
jg
pop
shlb
mov
push
cwtl
push
test
xor
es
lcall
cmpsl
jp
dec
xor
clc
movb
xchg
pop
cmp
aas
jno
mov
clc
rcrb
aaa
pop
in
mov
lods
mov
iret
mov
lcall
outsb
push
outsl
sub
xchg
in
add
scas
ja
nop
inc
lock
lcall
hlt
jge
inc
mov
loopne
daa
clc
xchg
js
lods
stos
pushl
sbb
cmpsb
or
leave
inc
push
ficoms
sahf
les
popl
call
int
push
rep
pop
xor
into
inc
adc
or
ja
mov
fucom
test
jl
rcrb
add
in
cs
test
outsb
lret
and
fmull
clc
ljmp
ljmp
fisubrs
out
sbb
adc
push
imul
test
mov
fwait
push
lea
mov
cmp
fistps
arpl
add
inc
mov
and
or
je
clc
cmp
fs
and
xor
les
ret
jg
lcall
movsl
cwtl
mov
adc
xchg
jno
in
in
clc
ret
adc
add
test
and
clc
or
mov
push
outsl
fmull
incb
mov
xchg
mov
jmp
jg
loope
mov
stc
and
ss
mov
icebp
lcall
xchg
jne
or
xchg
or
test
movsb
xchg
lods
call
lods
push
mov
push
jb
enter
ljmp
inc
shlb
push
jl
jg
decl
mov
out
or
les
adc
icebp
inc
xchg
clc
jmp
arpl
test
divl
shr
push
sub
pushl
cmp
js
in
mov
inc
xor
les
lahf
mov
inc
mov
sub
out
test
in
xor
ficomps
adc
int
inc
icebp
das
cld
out
data16
pop
push
pop
push
dec
das
push
sbb
mov
sarb
clc
out
call
cld
or
clc
mulb
inc
lahf
xlat
lcall
lcall
stc
sbb
jg
aas
adc
repnz
loop
push
mov
push
inc
mov
mov
lret
je
lcall
in
out
in
popa
and
loop
test
push
daa
shll
lock
cld
cmp
lcall
mov
pop
in
dec
sub
mov
lahf
lock
fisttpl
xor
filds
cmp
aad
mov
inc
movsl
inc
sbb
mov
sub
pop
loope
out
mov
mov
sbb
stos
mov
or
jmp
inc
sub
int
pop
jmp
mov
inc
insl
xchg
mov
incl
inc
cmp
clc
jae
inc
call
sbb
std
push
pop
mov
pushl
xchg
cmp
push
int3
xchg
loope
imul
pop
cli
pushl
lock
into
divb
jle
fucomi
adc
push
gs
mov
sbb
ljmp
sbb
enter
andb
inc
loopne
adc
leave
daa
cmpsb
pop
incl
test
dec
sbb
add
cmp
lock
aas
jecxz
or
les
pushl
lock
and
pop
cli
lea
insl
aas
push
shr
ficomps
cwtl
sub
int
das
and
std
jmp
mov
lcall
ret
nop
jns
mov
dec
rclb
call
imul
lock
mov
mov
jp
in
cmpsl
out
stc
and
sub
leave
inc
mov
call
dec
addr16
jne
fld
adc
loope
ljmp
cmc
sbb
nop
ffree
pop
sub
mov
call
adc
aam
xchg
gs
lds
addr16
out
jp
repz
pushl
mov
jns
xchg
fstpl
pop
fidivrl
xchg
mov
movsb
or
sti
cli
cs
iret
xchg
inc
mov
adc
iret
shrb
sub
jg
aas
outsb
pop
gs
daa
mov
lcall
fimuls
sbb
test
jae,pt
and
pop
inc
ljmp
out
test
inc
dec
fisttpll
pop
pop
xor
mov
jle
push
repz
outsl
cld
lcall
mov
xchg
jg
xor
test
fld
enter
std
lods
outsb
cld
sub
loope
mov
std
das
lock
mov
cmp
aam
popa
or
or
mov
jge
and
mov
push
scas
mov
std
loopne
outsl
icebp
outsb
sub
and
imul
test
lret
jns
sub
jge
ss
inc
mov
int
divl
inc
es
pop
loop
dec
push
push
fs
lret
mov
iret
jl
pushf
mov
fnstsw
rcrl
rcrb
and
xor
xchg
push
sub
mov
xchg
das
cmc
ljmp
fcomps
mov
xchg
gs
dec
lods
sarl
lahf
in
push
jmp
mov
fadds
dec
aam
shll
insl
mov
nop
mov
inc
addr16
mov
xchg
push
xchg
jo
fcmovnu
push
jno
outsl
cld
test
ja
cmp
cwtl
lret
fstpt
or
sbb
add
add
shrl
mov
call
push
pop
sub
mov
imul
inc
outsl
cmc
pushl
and
rcll
add
xor
jo
push
out
mov
leave
aas
cmp
repz
jae
pusha
clc
adc
sbb
jno
mov
dec
jo
or
jne
test
jg
decl
js
fdivs
or
xor
leave
stc
inc
xor
call
xor
je
lahf
xchg
in
lahf
sub
cmp
sub
sub
add
inc
adc
pop
inc
pop
xchg
adc
fsts
push
mov
jns
add
lahf
inc
ds
add
jg
test
cmp
lcall
je
lcall
pushl
cmp
jne
xor
rorb
xchg
pop
xchg
jnp
or
dec
call
stc
gs
mov
sti
mov
fwait
cld
add
cmp
cli
cmp
in
cmpsl
and
fs
dec
call
ljmp
inc
mov
push
pop
jne
and
les
mov
jg
shl
call
ljmp
push
lods
dec
outsl
inc
js
rorb
outsl
jmp
dec
repnz
or
ljmpw
insb
clc
xchg
and
pop
mov
mov
sbb
test
shll
inc
jmp
and
sbb
ficoml
fnstenv
test
fwait
call
lcall
pop
push
dec
mov
xchg
fidivrl
not
lea
mov
pop
dec
adc
daa
pushl
pushf
cmp
sbb
rolb
jb
ja
pop
jo
inc
push
cltd
incl
dec
mov
dec
xchg
cmp
mov
jp
insb
leave
and
ljmp
outsb
jae
add
js
push
imul
gs
sub
pop
mov
jmp
call
data16
inc
mov
femms
and
incl
fadds
jg
xor
sti
mov
dec
inc
rcrb
std
leave
hlt
mov
decl
or
scas
xor
jo
shrl
sbb
and
push
call
bound
aam
xorb
lret
xchg
mov
fmul
sti
popf
xchg
loopne
jno
add
clc
mov
fcmove
ret
dec
sarb
jmp
xor
and
xorb
je
orb
mov
jnp
mov
pop
xor
shl
add
mov
mov
popa
dec
je
push
push
shll
sti
fmulp
xchg
inc
out
bound
je
lahf
jl
clc
fdivr
das
je
xchg
xchg
sbb
aaa
call
ja
mov
adc
mov
mov
nop
sub
xchg
cld
push
out
out
mov
decl
xchg
cmp
pop
push
add
pop
push
adc
dec
je
shrb
fcomps
aaa
das
cld
call
clc
std
sbb
push
add
dec
int
sti
adc
mov
mov
mov
dec
and
inc
xchg
hlt
inc
mov
mov
adc
adc
sahf
ljmp
dec
pop
enter
out
pop
shlb
xchg
dec
ds
and
pop
std
call
push
pop
xor
xor
or
mov
dec
mov
inc
rcl
push
mov
add
stc
inc
add
mov
or
lahf
mov
fsubr
das
adc
fnsave
ret
insb
int
pop
add
inc
jg
scas
push
rcrl
adc
mov
call
stc
nop
rorl
mov
fcomps
lcall
pop
inc
or
loope
fcompl
mov
inc
cmp
aas
jge
aam
push
jbe
and
rcl
inc
lea
pop
sub
mov
iret
call
cmpsl
cmp
loop
push
leave
jo
cmpsl
mov
stos
fadd
cmp
arpl
ret
pushl
jle
ret
fbld
cmpsb
shlb
lahf
int
push
sahf
mov
mov
push
aas
mov
insl
fwait
dec
stc
rolb
add
arpl
mov
push
mov
aam
jne
xchg
aas
push
xor
shrb
sub
pushl
mov
and
push
std
mov
call
jo
aas
inc
nop
aas
fs
push
xchg
mov
orl
aad
pop
add
sub
leave
xor
dec
mov
pop
sub
je
clc
incl
gs
sub
ret
jg
xlat
sbb
sti
jne
xchg
mov
loop
mov
mov
dec
jg
pop
mov
and
shr
addl
popf
mov
insl
shll
adc
lcall
shll
imul
jle
inc
cld
divl
sbbl
sar
cmp
mov
sbb
and
das
icebp
dec
xchg
xor
jne
adc
aam
jle
sarl
outsl
std
cltd
out
sbb
fidivrl
mov
xor
ds
mov
mov
jp
push
int
lea
and
ljmp
movb
rclb
scas
pusha
or
aam
push
cmpsl
or
fucomip
pop
push
inc
test
data16
nop
divl
stos
xor
inc
cmc
out
xor
xchg
inc
daa
adc
inc
cltd
cmpb
push
es
ror
frstor
and
adc
jmp
daa
sub
cmp
aam
fwait
sbb
out
sub
lock
imul
rcll
push
or
xlat
jmp
inc
call
lea
sbb
std
ret
sbb
into
adc
fidivl
test
ljmp
adc
aam
movsl
incb
push
loop
lret
mov
push
xchg
push
pop
pop
mov
xchg
lahf
jmp
out
xchg
jge
loop
mov
call
jmp
repz
mov
mov
iret
adc
jno
addr16
pop
lcall
outsl
sbb
repnz
mov
mov
cmp
jp
adc
lcall
pop
jge
cwtl
dec
imul
pop
inc
out
mov
ljmp
pop
dec
adc
leave
or
jo
cmp
lret
xlat
and
arpl
add
shrl
clc
lods
add
rcr
lock
bndldx
cmp
ljmp
sbb
cwtl
mov
dec
mov
mov
inc
inc
enter
decl
cli
das
arpl
add
gs
mov
jmp
cmp
fstpt
jne
movsb
ffreep
and
adc
incl
lods
and
inc
xchg
dec
pusha
cltd
loopne
daa
aam
lds
mov
enter
cmp
sub
call
jle
in
ljmp
incl
ret
pushf
sbb
fs
dec
pop
xchg
clc
xor
pop
mov
add
les
hlt
mov
inc
cmp
lahf
popa
mov
jg
push
dec
clc
stos
push
and
lret
or
ljmp
adc
fsubs
cli
xchg
cmp
dec
jg
call
or
dec
jmp
mov
pop
mov
ret
int
xchg
jmp
inc
xchg
clc
dec
cmp
stc
je
cli
mov
or
gs
lcall
imul
inc
js
sbb
jbe,pt
adc
out
mov
idiv
decl
pop
mov
aas
add
aam
sub
sbb
mov
push
in
negb
imul
out
or
xor
decl
and
sahf
inc
cld
pop
and
idivb
mov
inc
sbb
or
pop
or
decl
mov
jb
loope
inc
ja
and
loop
or
icebp
movsl
and
enter
dec
decl
test
mov
test
out
jae
movsl
jne
stos
xchg
icebp
xrelease
inc
push
insl
inc
jmp
sub
mov
test
imul
cmp
movsl
xlat
push
adc
push
mov
mov
pop
pop
pop
sub
fsubrl
adc
xor
sbb
mov
push
imul
mov
test
mov
xor
cmc
xor
icebp
ja
mov
decl
lcall
dec
xchg
dec
cmpsl
jecxz
pushf
sub
mov
dec
or
test
rol
and
pop
or
call
pop
shll
outsb
mov
xlat
lahf
dec
loope
mull
ljmp
lea
mov
push
adc
ret
dec
push
jae
ss
dec
ljmp
mov
imul
add
repnz
lods
rorl
stc
les
test
incl
int3
lahf
push
xchg
pop
shlb
sbb
push
cltd
in
cmp
add
in
imul
fsubs
push
mov
mov
mov
sbb
imul
mov
ja
push
cli
test
xchg
cld
decl
xor
push
mov
cmp
xlat
adc
sub
outsl
std
decl
fucomi
das
push
mov
mov
xchg
xchg
hlt
cmp
aas
pop
sbbl
outsl
sbb
mov
sub
or
pop
mov
cmpsb
jne
cvtps2pi
ljmp
cmp
inc
ficoml
jnp
inc
push
les
cmp
mov
lret
in
movsb
xchg
mov
jb
mov
decl
ljmp
in
jae
mov
push
pop
iret
pop
pop
sub
call
subb
ror
pop
incb
out
adc
test
fmuls
dec
push
js
inc
repz
cmp
mov
xchg
popa
int3
cmc
sub
aaa
jg
mov
clc
dec
inc
mov
ret
sub
pop
psadbw
incl
mov
inc
icebp
mov
int3
xor
in
in
xchg
add
sub
mov
sarl
jmp
jle
out
xchg
mov
test
xchg
sbb
incl
incl
aam
or
insb
sbb
sar
test
das
pop
movsl
add
push
sti
es
lret
push
in
insb
and
pop
pusha
testl
ss
push
adc
fidivrl
xchg
mov
jns
mov
xor
ja
test
cld
pushl
or
icebp
pop
or
or
inc
xchg
mov
inc
movsl
or
xchg
ljmp
inc
cwtl
movsl
mov
pop
jae
xor
test
cmpsb
ss
jae
inc
push
lock
int
adc
arpl
push
in
mov
sbb
sub
das
cmc
in
call
hlt
ss
fdivrl
pop
pop
cmp
testl
mov
mov
es
in
lods
jge
outsl
sahf
dec
stos
and
inc
dec
sub
cmp
dec
cld
into
push
pop
inc
stos
mov
pop
jl
fwait
sbb
fst
sarb
jg
lahf
dec
stc
xchg
lahf
enter
decb
repnz
sbb
xorl
cmpl
ja
jp
push
push
mov
fwait
repz
inc
enter
inc
scas
push
loop
cli
fucomip
aaa
bound
jne,pn
cmc
sbbb
popa
jmp
push
inc
sub
mov
jae
shlb
loop
pop
xchg
ss
pop
js
or
out
push
mov
cwtl
lret
and
jnp
addr16
mov
xor
jbe
adc
incl
lcall
dec
cmpsl
cli
mov
cmp
sub
iret
fldenv
cwtl
aaa
jno
sar
outsl
dec
movsb
dec
movsb
in
mov
insb
xchg
negb
popa
imul
or
paddq
sub
and
stos
sbb
js
stc
fcmovne
sub
call
outsb
sub
cmpsl
dec
mov
xchg
mov
push
lcall
cmp
hlt
jbe
dec
xchg
mov
in
test
push
into
xchg
fs
mov
sub
and
jg
ret
jmp
iret
mov
xchg
dec
nopl
push
inc
and
loopne
mov
or
sarb
out
jl
lret
sbb
add
rclb
std
cmpsl
in
imul
shrb
add
nop
inc
movsl
adc
mov
aaa
fcomp
and
xchg
sub
or
arpl
ljmp
mov
pop
je
movl
in
fstps
cld
call
pushf
enter
jne
jbe
jae
jo
or
jg
mov
mov
ljmp
jle
pop
sub
cmp
push
sti
inc
std
mov
adc
std
ret
loopne
outsl
cmc
mov
jg
call
mov
adc
insl
and
jmp
jl
push
push
jmp
jge
scas
jns
fwait
dec
aaa
pop
jmp
pop
jecxz
lcall
jno
xsaveopt
test
and
out
incl
dec
xchg
push
pop
sbb
lods
cmpsl
or
xchg
jg
dec
dec
ficompl
inc
lock
cmp
std
xchg
scas
ljmp
ljmp
movsl
mov
add
xchg
fwait
push
aam
mov
adcb
test
xchg
jmp
inc
mov
mov
or
push
aas
xor
test
ljmp
mov
aas
mov
sub
mov
mov
sahf
mov
repnz
pop
addl
aad
insl
enter
daa
mov
pop
pop
xlat
ljmp
ss
mov
push
adc
iret
imul
mov
lods
insb
je
pushl
repz
add
mov
fadd
roll
dec
or
jp
out
dec
fucomip
std
mov
int3
inc
add
jbe
xor
dec
or
inc
xchg
inc
sar
adc
push
adc
cmpsl
scas
cmpsl
fwait
xchg
push
jl
stc
sbb
loopne
ljmp
aaa
repz
inc
jle
ret
push
inc
sub
mull
jmp
fwait
aaa
inc
addl
aaa
fisubs
jmp
push
dec
stos
popa
lret
push
nop
pusha
or
das
cmc
call
cmpsl
lock
fs
lock
inc
push
fsubs
adcl
jno
mov
jge
pop
push
mov
data16
nop
lock
clc
decl
and
insl
cmpl
sbb
addb
xchg
jg
outsl
lahf
fisubl
mov
or
mov
sbb
loope
pop
add
imul
mov
push
ret
es
test
push
push
jb
mov
sub
cmp
das
lock
outsb
cwtl
fisttpl
jb
sbb
aam
push
lock
push
push
cmp
mov
xor
pop
les
lahf
daa
out
push
hlt
pushl
mov
xor
clc
mul
jo
adc
mov
push
jne
lahf
or
cmp
lds
ljmp
ss
sbb
and
inc
xor
and
mov
mov
sbb
jg
adc
hlt
dec
out
inc
mov
out
push
arpl
mov
jmp
dec
mov
and
insb
adc
mov
dec
incl
cmc
cli
mov
lods
daa
mov
cmp
mov
loopne
xor
mov
push
mov
dec
sub
xchg
fsubs
clc
rcll
jo
pusha
out
lds
clc
fbld
mov
add
jp
sub
xchg
mov
mov
pop
outsb
xchg
in
dec
adc
outsl
std
add
mov
add
fldenv
ds
fbstp
icebp
adc
cmp
jg
sub
rcll
and
pop
dec
push
cwtl
les
movsl
xchg
inc
and
pushl
pop
sbb
pusha
fadds
jb
jecxz
xchg
scas
fwait
je
sahf
lret
scas
cmpsb
in
fcmovbe
jg
jmp
adc
int
shrl
ret
sub
mov
xor
push
or
push
hlt
clc
xchg
cli
pop
outsb
dec
jmp
inc
push
scas
pop
push
dec
jl
cmp
lcall
dec
addr16
xor
mov
push
aad
mov
or
call
mov
movsl
mov
jo
inc
sub
fdivl
mov
cmp
jg
adc
or
xor
pushf
fdivs
mov
dec
divb
push
mov
jnp
adc
lods
clc
jecxz
jecxz
jmp
inc
fstpl
push
subb
repnz
sti
mov
cmp
cli
mov
enter
cli
add
inc
pop
xlat
cli
lods
pop
cwtl
jecxz
in
jl
xchg
out
sbb
cltd
hlt
loopne
into
movsb
lcall
outsb
test
cmp
pop
sbb
inc
xchg
push
mov
inc
push
pop
mov
mov
sub
not
addr16
clc
outsl
icebp
pushl
in
js
lahf
push
pop
xchg
test
popa
lret
mov
shl
inc
push
xchg
cli
out
mov
sbb
sub
pop
and
jmp
dec
std
movsl
or
subl
jo
es
cmc
push
sub
rcll
xlat
sar
fsubrp
cmp
adc
jl
testl
mov
or
cld
or
mov
push
and
rcrb
cmp
jmp
stc
mov
lahf
mov
push
mov
sub
fiadds
cli
test
lcall
hlt
in
popf
jb
and
sub
clc
dec
aaa
mov
mov
pop
mov
push
or
sarl
ljmp
push
lahf
cmp
loopne
or
add
jge
jl
addr16
test
mov
mov
decl
int3
ficoms
cs
scas
lret
xor
jo
dec
xchg
test
and
inc
cmpsb
adc
loope
ljmp
imul
pusha
xor
test
jecxz
fisubrs
adc
mov
subb
push
xorl
jbe
dec
lods
movsb
das
hlt
jmp
adc
shlb
popf
inc
inc
pop
stos
jb
xor
repz
shll
inc
dec
mov
pusha
lock
js
sbb
inc
add
dec
mov
mov
es
mov
jecxz
std
mov
movsb
push
jne
imul
pop
or
or
jg,pn
cmc
lods
xlat
loope
lods
in
out
leave
mov
jg
push
icebp
push
ret
pushl
fsubrl
fwait
rol
hlt
or
mov
pop
fidivrl
outsb
jae
xor
or
call
xchg
hlt
popa
fwait
imul
xchg
shll
ljmp
and
push
dec
nop
js
lret
pusha
or
test
pusha
mov
andb
fimull
dec
cld
pop
jl
sti
and
jbe
cmpsl
iret
sbb
orl
call
fcompl
xchg
mov
jg
test
fwait
aaa
jle
gs
mov
or
adc
ljmp
push
mov
pop
xor
test
fcmovu
in
mov
or
jg
lcall
aas
mov
push
sub
enter
ljmp
outsl
in
ljmp
mov
arpl
cmp
sar
call
stos
lcall
outsl
push
ja
stos
scas
loopne
test
inc
pop
pop
push
pop
imul
test
aas
pop
movsl
mov
std
or
insl
pop
pushf
push
imul
jg
sbb
cmp
call
sbb
sbb
rcll
mov
popa
and
out
adc
jnp
nop
pushf
dec
out
pop
loopne
xchg
or
cli
xor
loopne
and
or
push
divb
xor
and
mov
lea
adc
xchg
push
jns
fistpll
jge
scas
icebp
aaa
sbb
leave
divl
lds
lahf
mov
cmp
mov
ret
lds
push
addr16
les
pop
stos
outsb
pusha
stos
incl
adc
cmp
or
rclb
ljmp
push
xor
push
cwtl
sbb
mov
test
fidivrl
lods
cmp
inc
mov
sarl
aad
incl
comiss
lret
mov
mov
mov
out
loop
jl
or
clc
jl
cmpl
std
pop
mov
mov
call
outsb
lods
hlt
aaa
clc
or
fldt
sub
xchg
decb
sarb
sbb
jle
rcrb
incl
sbb
sub
fnstcw
sub
loope
in
pop
clc
call
fwait
mov
jg
mov
mov
xor
xchg
mov
inc
outsl
arpl
mov
sarb
sub
orb
sub
shrb
pushf
sbb
mov
popa
push
arpl
push
push
out
jge
push
xchg
int
fists
aad
imul
loop
adc
iret
sti
add
inc
aad
fdivrl
or
add
inc
test
mov
jns
push
jno
in
mov
fcomip
jne
add
cmp
cmp
pop
roll
mov
outsl
push
loopne
sbb
xchg
xlat
sub
cwtl
sub
push
xchg
int
mov
andb
adc
movsb
lds
mov
lea
repz
loop
movsb
insl
push
and
jno
push
mov
or
repnz
loope
call
mov
inc
inc
jbe
and
sbb
and
sub
xor
insl
stos
js
mov
mov
mov
outsl
hlt
jg
ljmp
into
pop
popf
cltd
pushf
fisttps
add
cmpsb
jg
aaa
lcall
std
leave
push
inc
cld
mov
arpl
jg
inc
sarb
arpl
sar
int
mov
ja
outsb
dec
mov
or
jns
add
das
lret
mov
call
clc
call
pop
ret
fsubrs
fsubl
dec
add
subb
xchg
sbb
incl
ljmp
jp
xor
in
xlat
jbe
sbb
pop
cli
out
lods
jne
loop
pop
cmp
adcb
inc
stos
das
jg
mov
pushf
xor
mov
mov
out
test
jmp
push
inc
jb
lds
das
xor
lods
movsl
lret
cmp
xchg
sbb
fsubp
std
mov
pushf
mov
cmp
inc
fs
movb
aaa
sbb
arpl
clc
inc
popf
and
jge
dec
xor
bnd
int3
mull
xchg
and
out
adc
test
mov
pop
jge
inc
cld
incb
cmc
mov
aaa
xchg
popa
and
and
pop
dec
mov
cmp
and
sub
stos
xor
mul
cmp
popa
or
xchg
icebp
incl
mov
fdivl
jle
les
dec
xlat
push
adc
in
clc
pop
push
std
pop
mov
aas
xorb
add
lods
push
es
jo
sti
call
ficoms
lea
jb
shlb
cmpsb
sub
out
mov
ljmp
sub
jp
pushf
inc
fisubrl
movsl
mov
push
xlat
pop
dec
xor
and
xor
call
mov
jo
xor
mov
lcall
cmp
loop
sub
arpl
test
pushf
sti
push
out
fnstcw
or
pop
jmp
jge
pop
shll
sub
ffree
into
sbb
call
mov
sub
test
jp
icebp
xlat
push
jg
cmp
xchg
test
imul
int
dec
push
mov
ret
xor
mov
shr
mov
adc
fiaddl
mov
decl
clc
popa
leave
pusha
out
sub
fildl
lods
inc
leave
adc
mov
add
pop
enter
fmulp
sub
push
xchg
faddl
ljmp
insl
pop
or
inc
shlb
test
or
arpl
dec
sbb
ljmp
xchg
leave
in
scas
dec
cs
lret
sub
add
cld
cld
cmc
inc
dec
xchg
mov
jne
jg
ret
repnz
popa
rorl
jbe
lock
test
jg
fldl
adc
xor
push
daa
jg
cmp
hlt
cmp
pop
pop
scas
out
movsl
frstor
sbb
pushl
push
fnsave
rol
pop
dec
addr16
push
loop
xchg
or
cmp
mov
cmovbe
jmp
stos
das
lret
xchg
pop
mov
dec
clc
rolb
test
outsl
ss
jecxz
jb
decl
lret
shr
subb
scas
iret
fcomps
pop
lods
jl
mov
insl
push
roll
dec
data16
clc
test
loopne
ljmp
lods
in
jns
pop
outsb
into
mov
xchg
aaa
adc
incl
into
dec
jge
iret
ret
sbb
cltd
lods
outsb
in
je
inc
aad
mov
cmp
jg
mov
add
xorb
jle
out
arpl
hlt
lcall
sbb
je
aad
loop
inc
lahf
or
ret
cmp
decl
loope
xchg
dec
loopne
test
shrl
pop
aas
rcll
ss
call
dec
push
cs
repz
aaa
inc
mov
les
test
xlat
call
sbb
notb
mov
dec
imul
lret
mov
jmp
repnz
push
and
cmp
xchg
pusha
les
add
decl
or
mov
dec
stc
jmp
jbe
jl
int
xor
inc
lods
das
js
popf
bound
call
out
and
sbb
xchg
jae
pop
mov
jno
leave
push
mov
jg
adc
and
popa
push
dec
sbb
das
mov
xor
decl
pop
or
out
gs
repnz
sahf
out
lea
fdivr
mov
and
incl
add
in
jns
imul
sti
adc
add
mov
sbb
cmpsl
cmpsl
jns
nop
loope
pop
popa
pushl
ljmp
or
stos
arpl
mov
les
and
bound
fmul
jp
cld
mov
int
sbb
aam
bound
pop
outsl
cld
jg
cmpsb
inc
ficoms
cwtl
enter
mov
inc
in
aad
lcall
jne
test
sub
mov
inc
dec
xchg
flds
in
cmp
pop
mov
mov
cmp
repz
std
ljmp
loopne
insb
mov
mov
sbb
mov
mov
xor
fidivl
enter
movsb
fstps
ljmp
sbb
cmp
aaa
in
or
xchg
in
ljmp
cltd
cmp
sub
loop
popf
jge
mov
stos
or
xchg
xor
decl
sbb
cmp
loopne
jne
repnz
mov
lahf
dec
mov
outsb
jp
inc
decl
fisttps
int
xor
push
je
pop
push
ds
insb
jmp
dec
push
add
and
jle
out
sub
pusha
insl
mov
pop
mov
jg
in
push
pop
addl
je
test
lds
fdivrp
stos
cmpsb
push
push
dec
mov
ljmp
hlt
orl
jns
scas
in
divb
jecxz
sbb
xchg
sbb
push
mov
adc
outsl
mov
inc
call
ss
xor
mov
xchg
inc
aaa
push
incl
decl
out
rcl
pop
and
xchg
out
cli
or
push
stos
jmp
jmp
in
or
sub
xor
stos
inc
cltd
repz
mov
shll
cwtl
fisttpl
jmp
scas
arpl
ja
push
lret
repnz
xor
incl
sbb
and
repz
xchg
push
mov
out
hlt
dec
cld
mov
fsub
cwtl
std
xor
in
sub
sarl
xchg
lret
push
adc
adc
sbb
incl
pop
int
push
shlb
lds
aam
pop
cmp
inc
push
std
ljmp
out
movsl
xor
cmp
loope
mov
dec
popa
or
sub
aas
push
pop
cmp
in
xchg
jns
ljmp
adc
dec
call
inc
add
stos
repz
and
ljmp
out
pop
mov
sub
aaa
cli
arpl
add
lcall
fsubr
orb
cmp
test
pop
dec
decl
inc
std
cmpsl
subl
dec
fmull
movl
pop
std
push
mov
pop
pop
or
mov
and
fucom
jg
add
pop
js
out
push
in
clc
mov
ljmp
dec
nop
dec
pmulhw
lcall
xchg
pop
fisubrs
add
clc
sti
dec
stos
imul
popa
les
mov
and
clc
decl
daa
xlat
ldmxcsr
subb
daa
sub
ljmp
cld
pop
lods
cmp
out
push
stc
es
adc
iret
daa
sub
mov
lcall
incl
mov
scas
sbb
sub
leave
ljmp
incl
addb
and
rorl
es
inc
mov
int3
or
incl
call
std
ljmp
xchg
cmp
call
inc
fsubp
test
inc
xor
xchg
push
mov
sub
cmpsb
sub
push
mov
mov
inc
mov
push
ljmp
out
push
insb
lock
sub
lcall
leave
sub
lods
add
out
aaa
test
and
loop
pop
mov
jo
cli
adcl
popa
jmp
adcb
mov
imul
mov
mov
or
xlat
mov
cmp
push
pop
mov
jmp
rcrl
stc
inc
je
mov
jmp
outsl
insl
xchg
mov
push
jae
or
xchg
cmc
jg
add
inc
das
sbb
xor
scas
hlt
pop
push
inc
sbb
add
dec
cmp
pop
jp
mov
add
pop
cmpsl
adc
jb
fsubrl
ljmp
dec
lahf
jg
ds
mov
out
pop
lods
jg
push
scas
inc
mov
cmc
rol
pop
in
arpl
movsb
inc
xchg
push
scas
pop
cli
ljmp
testb
push
pop
xchg
jg
fstps
pop
add
sbb
jae
stos
ljmp
sub
pushl
es
aad
sbb
testl
mov
out
imul
sub
aas
cmp
addl
test
fsin
dec
xchg
jmp
pop
incb
mov
fdivl
xchg
pop
cmp
jg
aaa
ds
mov
aad
cmp
push
push
movsb
mov
mov
shll
call
imul
and
dec
mov
lahf
imul
or
lods
ljmp
mov
cmp
inc
xor
outsl
xorb
lcall
fimull
adc
clc
xor
add
std
lods
mov
pusha
in
sub
bound
aam
cld
stc
xor
je
data16
aad
les
incl
mov
outsl
dec
rclb
and
int3
or
popa
testb
loopne
popf
cmc
xchg
movsb
bound
jg
ss
dec
popa
mov
dec
dec
and
inc
dec
or
insl
and
icebp
pushl
mov
push
lods
jbe
lods
add
xchg
js
inc
js
inc
in
push
add
jg
ljmp
in
mov
cltd
pop
jmp
lods
or
jmp
icebp
mov
rcl
add
orb
out
bswap
loope
mov
and
loop
orb
adc
mov
lss
push
push
xorb
jnp
or
jbe
mov
cld
mov
jbe
cmp
pop
arpl
jmp
xor
test
pop
or
xor
scas
flds
and
pop
cld
int
aam
adc
xrelease
sahf
push
cmp
in
adc
mov
xorb
lods
pop
mov
xchg
lahf
add
mov
xor
rcrl
sub
pop
orl
fisttps
add
xchg
xchg
rcll
and
daa
decb
decl
mov
shrl
arpl
adc
pslld
mov
sub
pushl
stos
aad
or
lahf
rep
roll
push
push
sbb
lret
js
ljmp
test
mov
pop
mov
pushf
or
sub
sub
rep
ds
push
stos
jne
incl
ljmp
sbb
jb
in
movsb
and
jg
jg
mov
movsl
jno
mov
and
mov
das
ret
je
incl
lcall
subl
loop
jg
movsl
dec
inc
push
jmp
scas
cmp
inc
ja
jle
insb
sub
ret
sub
fidivl
lock
es
scas
repnz
push
into
pushl
push
in
sbbl
add
jecxz
adc
in
lcall
pop
sbbb
addr16
mov
pop
sub
cwtl
lea
js
lods
lea
cmc
push
mov
jb
ljmp
jne
insl
arpl
pop
xchg
dec
repnz
hlt
incl
movsl
aas
push
cli
les
lcall
jmp
movl
jg
cmp
and
or
sub
orl
cmp
pop
repz
adc
mov
int3
dec
jmp
mov
xchg
outsb
gs
movsb
filds
enter
aaa
pop
lea
ficompl
lret
repnz
faddl
hlt
jg
or
xchg
into
sar
sahf
sahf
jmp
ficomps
and
mov
cmpsl
jne
mov
mov
pop
inc
pop
js
xchg
sbb
jg
mov
orl
push
ret
loope
or
ljmp
push
ret
jge
popa
mov
aas
mov
sbb
std
clc
inc
mov
cwtl
dec
fstps
test
jmp
mov
dec
inc
imul
fdivrs
inc
jmp
or
fadds
js
mov
adc
cli
decl
xor
leave
iret
ja
push
xchg
xchg
pop
mov
imul
mov
jp
add
sub
rcr
testb
lcall
scas
mov
out
pop
imul
mov
mov
xchg
sbb
nop
sbb
test
mov
mull
mov
xor
sarl
dec
or
jo
ds
movsb
repz
lcall
int
out
lds
jnp
int
cmpsl
mov
jae
xchg
mov
pop
ret
jle
inc
lods
fnsave
cmp
loop
push
add
pusha
dec
daa
shrb
std
int3
xor
aaa
dec
movsl
jo
shlb
orl
fld
iret
or
push
xchg
fimull
in
fisttps
fdivr
add
fisubs
jle
jl
pop
jnp
pop
or
mov
adc
jg
inc
lahf
inc
or
mov
roll
ret
pop
jg
pop
lea
aas
pushf
leave
inc
or
pushl
inc
mov
jo
ljmp
notb
inc
mov
orl
gs
mov
ds
xchg
lahf
mov
mov
jmp
call
cmp
inc
or
dec
jg
vmovss
fidivs
jne
push
pop
pop
ds
icebp
jg
rcr
lahf
popf
movsl
ret
push
pusha
mov
ljmp
pop
bound
mov
insb
hlt
jge
mov
jge
ja
pop
imull
dec
test
das
mov
pop
cli
lcall
jbe
nop
jmp
test
popa
call
js
jae
cmpb
andl
out
sbb
cmp
pop
outsb
sbbl
mov
imul
cwtl
les
ss
xchg
push
mov
fistps
cmp
mov
shll
test
incl
jmp
jb
mov
mov
in
pop
mov
mov
xchg
fwait
clc
test
rcll
insb
data16
pusha
mov
lock
iret
gs
jmp
aaa
jnp
sub
rorb
mov
call
cmp
rcrb
mov
and
push
pop
pop
mov
adc
xchg
clc
call
shrl
inc
sub
je
cmp
out
ret
and
pop
insl
outsl
movsl
mov
mov
xchg
jmp
stos
outsb
repz
repnz
imul
and
push
negl
adcb
xchg
in
jns
mov
pop
sbb
jbe
dec
xlat
cmpsl
xchg
lcall
cmpb
stos
or
cmpsb
sub
out
inc
dec
gs
imul
xor
ret
sahf
sub
mov
mov
bound
sub
xor
xor
das
adc
mov
notl
aam
insl
cli
mov
pusha
cmp
xchg
popf
push
out
cmp
push
lret
ds
pop
iret
rcrb
push
mov
aad
out
enter
scas
and
ss
in
cmp
push
scas
push
jg
mov
dec
rclb
jl
add
shrb
lret
std
jg
call
aas
in
popf
xchg
pop
lods
rcrb
push
adc
ss
nop
jg
or
inc
je
sbb
rorl
loop
cs
inc
pop
movsl
call
mov
cli
and
pop
in
pop
and
inc
cltd
jg
add
mov
mov
sbb
push
sub
inc
mov
xchg
out
jmp
and
and
fdivrs
fistpl
insb
dec
mov
dec
push
and
xchg
sub
cmp
lcall
mov
in
lods
xchg
cwtl
push
jl
gs
mov
arpl
and
int
pop
loope
push
ret
ds
cmp
mov
cmpsb
push
pop
movsl
push
jl
inc
clc
pop
mov
jg
or
cmp
adc
add
lds
add
pop
call
test
push
jns
pop
shlb
repnz
fdivrs
loop
xchg
jp
rclb
inc
loope
rcr
dec
lea
incl
into
cmpl
push
xlat
stos
sti
mov
inc
pop
or
shll
das
sbb
cmp
jmp
xor
cmp
mov
out
das
aas
xchg
fsubrl
push
fld
xchg
cs
cs
imul
lods
xchg
fisttpll
shld
inc
mov
test
jg
out
data16
in
adc
test
pop
mov
pop
push
jbe
adc
incb
mov
sarl
std
cltd
into
lds
hlt
xor
pop
fwait
pop
outsl
loope
jno
ja
gs
jl
push
mov
cmp
sbb
pop
jl
sub
loope
mov
sub
adc
in
mov
dec
dec
clc
adc
rolb
pop
sub
inc
xchg
xchg
ljmp
xchg
das
ror
jg
or
into
adc
pop
mov
add
push
xchg
jle
fucomip
incl
test
inc
or
test
fsubs
std
ja
adc
inc
jnp
testb
jbe
insl
decl
push
jo
push
jnp
sbb
mov
and
jg
mov
mov
xchg
sub
ret
sbb
iret
es
arpl
jg
rclb
pop
xchg
push
inc
frstor
mov
jae
sub
mov
aaa
cli
ljmp
insl
stos
lahf
fidivrs
jns
scas
les
sub
rcrb
lahf
fistps
or
push
mov
xor
scas
arpl
sbb
lcall
mov
mov
lds
pop
das
push
or
mov
jo
out
dec
icebp
pushl
sbb
pop
iret
ss
xlat
sbb
stc
mov
jp
cmp
lds
das
dec
sti
xchg
lock
sbb
pop
push
idivb
xor
sbbb
xor
mov
or
mov
loopne
jo
mov
jg
outsl
cmp
cli
dec
xchg
lea
hlt
aam
outsb
dec
jl
jae
andb
lock
dec
inc
rcll
arpl
in
ljmp
push
movsb
into
push
fmul
add
mov
jb
mov
mov
jecxz
dec
mov
inc
fld1
cmc
nop
cli
insb
jno
pop
in
push
xchg
fisttpll
and
xor
pushf
ss
jg
jle
test
sbb
inc
in
clc
and
fcom
xchg
rolb
sub
clc
and
mov
push
pop
fistl
add
sub
pop
dec
enter
push
fisubl
cltd
ret
loope
ret
inc
lock
cli
pushf
shll
ror
xor
mov
sar
pusha
rolb
pop
in
ljmp
aaa
ds
out
push
aad
jle
fstps
add
pushf
xchg
neg
cmp
mov
or
ss
lcall
adc
ljmp
test
push
int3
inc
mov
addr16
in
push
in
pop
xchg
cmc
shlb
jne
mov
insb
or
mov
push
mov
mov
outsl
les
scas
jno
shlb
lods
pushl
incl
popf
outsl
and
fcompl
and
xchg
sbb
and
outsb
arpl
inc
lods
and
cmp
fisubrs
js
inc
adc
xchg
pushf
lea
stos
inc
pop
fcmovnbe
mov
cmpsb
out
xchg
lret
scas
mov
ss
mov
add
jl
inc
mov
dec
lock
gs
and
cli
push
pop
ljmp
fistps
jecxz
sarl
cwtl
mov
daa
mov
jg
in
cmp
js
pop
ret
cmpl
scas
cmp
lcall
and
rcl
mov
xor
fs
pop
sub
lret
mov
stos
sub
cmc
mov
decl
scas
or
jmp
outsl
cmp
jne
push
mov
lcall
push
fs
add
loop
jp
lret
inc
aam
push
cmp
fnstenv
loopne
xchg
test
pop
jl
sbb
dec
mov
jge
cld
lcall
mov
jp
sti
push
xchg
movsb
leave
fwait
lcall
pop
mov
jmp
mov
call
lock
xchg
lods
pop
mov
cmp
in
push
dec
dec
cmp
mov
aas
mov
incb
test
pop
sar
or
enter
nop
sbbb
std
std
adc
out
jecxz
inc
push
adc
adc
loopne
mov
add
insb
mov
or
and
imul
out
out
ss
sub
jbe
jbe
test
pop
clc
call
xchg
mov
fwait
cmpsb
lds
dec
mov
xchg
mov
daa
ljmp
cld
outsl
lcall
xor
fcmovnb
cli
mov
fwait
popf
push
adc
leave
pushf
dec
cmp
fmull
xor
bnd
mov
pop
pop
mov
dec
sti
lret
repz
call
dec
imul
jmp
pop
cmp
lahf
arpl
xchg
dec
lods
out
divb
inc
push
std
lret
dec
push
pop
dec
mov
sub
mov
jmp
mov
and
cmp
and
xlat
mov
jo
sub
arpl
decl
lea
ja
out
cmp
push
dec
and
and
cmpsb
pop
outsl
jmp
mov
sub
or
sbb
gs
inc
outsb
push
dec
aad
cli
cmp
mov
mov
push
adc
add
xor
cs
aas
outsl
aam
fbstp
into
or
enter
loope
cmpb
mov
jmp
cwtl
in
les
jecxz
testl
add
das
mov
xor
aaa
xor
sahf
jge
fistps
imul
ljmp
mul
add
aad
jge
hlt
mov
lods
scas
pop
pushf
ljmp
insb
mov
lcall
cli
dec
fstps
dec
out
adc
jo
inc
repz
push
mov
inc
xchg
and
xchg
lock
in
jmp
xor
jo
jecxz
rcr
test
xchg
cmpsb
stos
bound
call
rorb
xor
jmp
push
mov
test
movb
xchg
mov
mov
in
dec
cwtl
int
popf
int
decl
push
adcb
sub
pusha
push
sbb
jbe
mov
jno
and
jmp
popa
sub
sbb
and
adc
cmpl
ss
sahf
roll
dec
xor
outsb
adc
call
ja
sub
xor
fisubrl
arpl
dec
int
mov
das
sbb
call
rcrb
stos
nop
xchg
aas
pop
sti
shlb
inc
fildll
sbb
hlt
enter
aad
cwtl
mov
jge
fistl
push
std
fxch
incb
lret
test
test
fucomp
fiaddl
inc
ja
dec
jecxz
dec
sbb
mov
lcall
subb
bound
aaa
data16
push
pop
insl
sub
adc
xor
adc
pop
ljmp
and
push
xor
jns
sub
lods
lods
in
inc
decl
lods
lods
jnp
push
mov
sub
call
inc
mov
out
inc
mov
insb
int3
in
inc
sbb
mov
rcrl
mov
jg
jae
push
or
rcrl
mov
rorl
mov
mov
jg
leave
push
pop
xchg
adc
lcall
inc
loopne
shl
push
add
mov
ret
ljmp
sarb
sti
sbb
ljmp
cmp
pop
cwtl
addr16
sub
in
and
rcl
mov
out
push
insb
jg
insb
mov
nop
xor
push
rclb
push
call
cmp
rsm
lahf
es
insl
rolb
fcmovbe
pushf
mov
ret
dec
sar
incl
mov
xchg
js
inc
aad
call
xchg
insl
xchg
adc
outsl
inc
mov
mov
loope
push
jno
jae
mov
mov
fwait
jl
inc
and
cltd
and
cmpl
ds
inc
ret
cmc
leave
jnp
ljmp
lock
frndint
xchg
mov
in
cli
rcr
xor
dec
xchg
call
inc
mov
xor
push
das
call
xchg
cmp
mov
jmp
xchg
dec
jnp
pop
lods
dec
test
jge
mov
jb
push
arpl
ja
lds
fists
insl
aaa
or
xlat
inc
lock
add
dec
stos
xchg
mov
pop
rcr
jp
lods
jno
mov
aam
pop
or
and
testb
xchg
repnz
les
cwtl
push
mov
fdivrs
fdivr
incl
test
mov
cs
movsl
xor
add
jl
mov
sub
mov
incl
xchg
sahf
je
notl
lcall
aaa
or
lcall
cmp
pop
xlat
jo
xchg
cmp
repnz
clc
jg
sbbb
adc
popa
arpl
dec
daa
je
ljmp
xchg
and
mov
hlt
add
aam
call
shrl
jmp
stos
bound
addr16
pop
dec
stc
lea
cmp
mov
shlb
fiaddl
lods
ljmp
call
adc
or
add
xor
or
dec
lods
sarl
pop
gs
daa
dec
cld
push
jnp
sub
mov
fucomip
or
scas
out
sbb
adc
clc
ljmp
cltd
lea
ds
sub
mov
movsl
fidivrs
call
adc
loopne
loop
notb
fwait
lcallw
popa
inc
and
sbb
jbe
xor
stos
or
or
dec
push
xor
stos
mov
xor
mov
push
jg
jecxz
in
addb
or
inc
or
inc
mov
stc
xor
fnsave
lods
adc
push
scas
xchg
dec
ret
ja
inc
call
push
pop
jbe,pn
ret
adc
movsb
inc
inc
sub
lock
xchg
mov
divb
xchg
jecxz
and
add
and
mov
in
aad
ljmp
mov
vmread
dec
jae
ret
push
imul
cmp
fs
incl
inc
jne
scas
aas
add
rcr
aam
sub
ret
xor
jo
scas
mov
mov
rcrl
stos
pop
repz
inc
lcall
mov
push
sbb
pop
cltd
pop
arpl
sbb
or
xlat
jg
scas
xchg
and
or
mov
adc
adc
scas
cmp
aam
jp
icebp
std
lcall
ds
clc
adc
movsb
roll
jg
stc
shrb
sub
test
out
cltd
ljmp
mov
lods
ss
aaa
mov
dec
subl
aas
mov
pusha
jecxz
stos
jg
sub
pop
or
fildll
inc
mov
and
dec
repz
mov
inc
inc
inc
push
aam
dec
push
mov
ret
add
xchg
inc
cmp
roll
jg
setp
mov
popa
int
daa
xchg
cld
daa
push
pop
and
outsl
cmc
lcall
jecxz
jmp
iret
stos
dec
arpl
repz
jg
pop
cld
push
jl
ror
in
push
cmpsb
mov
push
jo
les
lret
mov
mov
adc
add
mov
lahf
iret
xor
icebp
jle
dec
lret
insb
or
lcall
test
cmc
pop
int3
jg
data16
jmp
adc
inc
cld
xchg
scas
and
les
cld
shll
jg
push
outsl
fadd
fsubs
ja
pop
jg
sbb
test
mov
movsl
outsl
push
lock
jnp
ds
jge
fmuls
aad
cwtl
mov
lds
loop
clc
jg
mov
int3
sahf
and
aaa
jg
sahf
mov
mov
mov
push
shll
jns
mov
mov
xchg
call
das
icebp
xor
arpl
andl
inc
ja
adc
decl
mov
shl
add
insl
push
pop
test
xchg
cmc
cmp
mov
or
sub
cmp
je
cmp
cmp
ljmp
fidivl
inc
jae
push
sahf
add
fwait
sub
fcmovnbe
jp
imul
lea
add
xor
sbb
fnstcw
lods
sub
into
enter
sti
pop
mov
xchg
push
pop
clc
dec
leave
and
mov
aad
push
out
incl
mov
pop
cmp
jge
add
imul
ljmp
jg
add
imul
pop
inc
mull
stos
pop
fisubrl
xchg
xor
sbb
jecxz
f2xm1
add
fstpt
mov
lcall
or
mov
loopne
add
cld
adc
or
incl
stos
iret
cmp
sbb
sbbb
jnp
mov
hlt
inc
xchg
adc
sar
decl
cmp
ud2
scas
sub
bound
ljmp
inc
pop
cli
imul
mov
push
mov
in
mov
ljmp
fsubrs
lods
fcmovnu
inc
add
into
movsl
testl
test
cmpb
mov
pushf
xor
push
dec
push
mov
pop
cltd
push
movsl
call
mov
adc
fcoms
data16
fistl
test
ret
ret
shll
rcrl
adc
cltd
je
mov
aas
test
cwtl
lret
nop
inc
daa
inc
setnp
inc
mov
mov
fcomip
pusha
lods
jne
es
dec
sub
sub
aam
repz
mov
stos
leave
mov
out
cmpsl
loope
sub
in
mov
ds
and
push
jae
and
jl
test
mov
push
outsl
lea
sub
add
fnstsw
call
outsl
addr16
mov
jb
lahf
dec
nop
cld
push
jl
mov
mov
mov
fidivrs
mov
inc
fwait
aam
sbb
lcall
pushl
imul
test
and
adc
xchg
insl
push
mov
inc
and
lcall
jbe
stc
insl
addl
leave
xor
jae
sub
lcall
jmp
or
and
sbb
mov
sahf
dec
aas
cwtl
daa
pop
mov
ljmp
loopne
push
mov
jae
test
xchg
adc
loope
cli
movsl
jo
and
stos
fsubrs
arpl
mov
repnz
and
add
movsl
sahf
mov
or
dec
jb,pt
dec
test
or
and
push
insl
push
mov
lcall
cmp
mov
fisubrs
bnd
pop
lock
test
cltd
xor
mov
cltd
mov
mov
orb
adc
les
xchg
cwtl
decl
out
xchg
popf
stc
add
fstpl
int3
mov
dec
sub
ljmp
decl
lahf
shrl
cltd
mov
mov
imul
sub
fwait
inc
div
call
decl
add
xor
pop
es
cmp
sbb
xchg
push
lods
lock
pop
into
mov
std
dec
test
ljmp
lock
mov
xor
dec
pop
rorb
mov
mov
sub
decl
lods
test
lret
mov
popa
sarl
fsubrl
inc
sti
imul
std
mov
xchg
dec
divb
mov
jns
push
xor
jbe
mov
jg
mov
shll
setg
out
push
es
fnstsw
pop
adc
or
in
dec
mov
mov
call
or
and
imul
xor
fstl
fists
mov
rcrb
add
mov
lret
scas
repz
mov
jg
jns
mov
inc
movsb
mov
jno
adc
nop
insb
repz
pop
loopne
xor
ljmp
scas
mov
das
bnd
imull
subps
mov
mov
popf
push
loope
test
jl
scas
push
mov
mov
inc
dec
xor
push
and
lea
fstpl
xor
mov
jge
sti
insl
sbb
adc
add
pushl
in
nop
pusha
jg
jns
xchg
aaa
lds
in
jns
push
cmp
push
sub
mov
inc
fwait
mov
aam
push
adc
xor
fisubrl
sbb
and
push
decl
loope
pop
notb
push
insb
jbe
mov
inc
mov
out
popf
clc
inc
outsb
sub
lock
inc
dec
mov
sarb
push
scas
sub
lods
mov
das
mov
pop
push
sarb
popa
xorl
movsb
pop
cli
pushl
lret
dec
out
jne
test
stos
out
imull
cmp
outsl
std
scas
inc
mov
mov
adc
test
sbb
mov
jl
lock
push
test
pusha
les
push
or
push
lahf
add
sarl
std
mov
or
inc
roll
in
fsubp
pop
or
xor
jbe
jle
arpl
add
mov
jg
call
mov
cmp
repz
movsl
sub
out
lods
popa
cmp
jmp
or
lock
int3
sbb
add
fldt
fistl
stos
test
pushl
out
cltd
mov
mov
or
in
repz
dec
cmc
mov
cmpb
adc
lock
jg
dec
rcl
pop
lock
out
mov
mov
jl
jno
fistl
pop
std
mov
dec
xchg
push
push
mov
mov
incl
inc
int3
loope
ret
fiadds
mov
push
mov
jg
push
lcall
xchg
cmp
pop
jg
mov
and
cmp
test
inc
mov
mov
mov
ds
sar
mov
inc
xchg
sub
loop
fidivrs
cs
fs
jg
mov
clc
cmpsb
and
popa
xor
mov
test
mov
mov
jmp
mov
and
and
cmp
ret
jle
push
cmp
addr16
incl
mov
add
pushf
enter
xor
mov
jbe
decl
mov
jnp
rolb
mov
ficomps
push
pop
mov
fs
mov
pop
jnp
inc
add
lea
xchg
leave
daa
cld
push
push
mov
std
jae
xor
or
idiv
adc
dec
cld
stc
cmpsl
rcrb
jne
lcall
imul
je
outsl
shll
outsb
cmp
inc
dec
aas
or
dec
sub
loope
pop
loopne
jmp
call
pop
xor
and
cld
test
jg,pt
test
xchg
fstpt
xor
lcall
fst
xchg
movl
and
ljmp
lret
fwait
das
cmpsb
jbe
jmp
mov
sub
adcl
mov
sbb
cmp
dec
mov
pop
dec
sbb
add
aaa
sbb
jmp
sub
lcall
push
or
inc
pushf
sub
or
cltd
out
or
mov
popa
lcall
in
or
movsl
mov
aaa
lret
cli
cmp
mov
loope
sub
push
cmp
call
repnz
mov
pop
arpl
imul
and
pop
pusha
xchg
cmpsb
add
popf
mov
mov
jmp
lret
pop
imul
jge
loope
dec
ljmp
into
push
les
js
jecxz
dec
mov
fmulp
aam
pop
mov
mov
dec
jo
movsl
cmpsb
ja
fwait
out
js
or
sbb
subb
pop
cld
adc
mov
js
gs
cli
mov
pop
movsl
pop
mov
stc
nop
cmpsl
icebp
sub
adc
pusha
mov
subl
mov
sub
adc
xchg
push
sub
pop
sub
xor
add
jo
lret
rclb
lds
xchg
mov
push
enter
loop
or
sbb
push
xor
imul
add
loopne
ljmp
outsl
in
adc
loopne
sahf
xor
or
mov
cs
or
aas
clc
fnstcw
int3
dec
rolb
testl
cmp
in
repz
sub
jnp
lods
sbb
or
mov
in
mov
loop
shr
ficoml
sub
shll
out
rcrl
push
jmp
lcall
inc
dec
dec
and
jns
inc
mov
dec
hlt
decb
imul
xchg
sbb
mov
lods
stc
hlt
inc
dec
aad
fimull
decl
add
xor
sub
sub
es
loop
cmp
divl
clc
push
and
incl
outsl
imul
push
push
lea
inc
in
sbb
mov
popa
pop
pop
rcll
or
test
dec
sbb
inc
sahf
jns
clc
ljmp
pop
mul
mov
adc
subb
sbbl
popf
jae
fisttps
imul
test
out
mov
sub
aas
pop
pop
les
test
push
fcomip
sbb
movsb
js
lahf
cmp
test
mov
push
pushf
push
and
mov
stos
jae
or
pop
mov
adc
mov
mov
or
mov
mov
jb
dec
lock
call
mov
enter
push
add
test
ljmp
nop
dec
je
rorl
popf
imul
mov
loopne
jg
push
ret
dec
stos
xorl
mov
fists
xchg
adc
es
jl
mov
test
adc
lcall
dec
ret
xchg
fucomip
jp
in
pop
lea
adc
dec
mov
adc
shll
decb
cld
inc
loop
mov
xchg
jae
jmp
jg
or
inc
cs
inc
sub
enter
mov
sbb
sbbl
mov
jp
movsl
mov
jb
push
idiv
xchg
xor
push
shl
cli
push
xchg
and
arpl
pop
push
and
push
call
jmp
xor
mov
cld
fwait
inc
imul
mov
xchg
daa
ret
in
ficoms
insl
mov
pushf
pop
mov
xor
add
or
push
incl
jo
cmpsl
fidivs
pop
sbbb
sti
cmpsl
mov
popf
loopne
mov
mov
pop
jl
lods
adc
call
leave
mov
mov
push
call
inc
int3
mov
lcall
jae
and
lea
fistpl
dec
xchg
outsb
jge
int
sbb
xchg
daa
ljmp
mov
out
outsb
sub
gs
cwtl
lahf
mov
lea
cli
call
cmc
or
inc
mov
or
mov
fwait
psubusb
std
pushl
dec
jo
pop
xor
jbe
roll
sbb
idiv
incl
cmp
adc
rorb
movsl
push
or
dec
lret
add
lock
add
and
fimull
xor
pop
popf
mov
sub
incl
jp
les
xchg
pop
jbe
in
fldl
paddusb
pop
arpl
mov
mov
jae
add
sbb
repnz
pushl
push
cmp
or
xor
xor
cmc
pushf
or
adc
mov
cmp
xchg
sbb
cld
pop
mov
mov
lret
je
mov
lcall
rorl
add
mov
pop
xchg
xchg
cmp
cmp
xor
adc
mov
iret
loop
inc
and
aas
movsb
push
jno
sub
or
loopne
fisubrl
cmp
jecxz
insb
sbb
dec
sub
loope
cmc
jno
xor
test
loope
push
pop
rcrl
and
iret
dec
or
lods
push
adcb
jmp
outsb
push
repz
dec
bound
loop
lahf
mov
call
jl
out
rorl
scas
mov
out
xor
push
test
jg
fs
inc
out
scas
sbb
inc
pop
and
or
cli
lods
bound
in
and
jmp
fildl
repz
xchg
scas
sbb
outsb
push
and
mov
mov
out
leave
xchg
mov
mov
movsb
mov
push
xor
iret
hlt
dec
add
or
incl
add
xchg
sti
aaa
sbb
movsl
shlb
xorb
and
decl
sub
cld
or
ljmp
xor
xchg
aas
sbb
xchg
cltd
cmpsb
push
add
incl
ret
lods
loop
mov
adc
mov
cmc
rcrl
fs
mov
xor
stos
in
xchg
sbb
jmp
rcr
mov
movl
xchg
hlt
fdivrs
xorl
call
sti
inc
or
and
repz
pop
orb
add
leave
push
pop
lret
icebp
sub
mov
sbb
pop
mov
adc
jmp
inc
popa
fdivl
mov
pushl
cmp
call
mov
into
rclb
imul
testb
or
xchg
jge
test
lea
mov
pushl
adc
jl
iret
pop
rcr
pop
mov
inc
cmp
cltd
test
jg
mov
mull
mul
js
lret
pushl
mov
dec
ljmp
dec
inc
aaa
adcb
xchg
xorl
xchg
orl
shr
push
sub
popf
push
call
xor
xchg
inc
mov
addr16
aad
into
mov
inc
push
or
jle,pn
push
pop
push
jne
int
xchg
push
outsl
and
jge
add
mov
test
mov
and
orl
inc
sahf
add
or
xchg
aas
clc
call
repz
rcrb
daa
mov
lahf
cmpsl
cmp
movb
decl
std
aaa
lds
mov
mov
fmul
mov
jnp
pop
sbb
cmp
dec
sbb
adc
adc
pop
call
xchg
jne
pop
enter
in
push
test
fbld
cmpsb
jge
loop
mov
int
push
pop
jb
dec
das
icebp
pushl
or
fwait
mov
xlat
xor
jb
aas
out
xlat
pop
ljmp
mov
pop
cmp
es
and
xchg
cli
dec
mov
mov
or
cld
pop
icebp
sar
adc
aad
xchg
jne
mov
mov
jg
int
pop
mov
pop
sbb
push
aas
scas
add
push
das
test
jl
pop
jb
hlt
jmp
gs
gs
mov
aaa
fnstsw
mov
pop
cli
ljmp
fidivrs
shll
mov
sub
outsb
inc
rorb
scas
fsub
xchg
ljmp
pop
out
mov
mov
in
lret
cmpsl
xor
push
incl
test
and
xor
data16
and
fdivs
aaa
sub
or
xor
mov
incl
lds
call
push
pop
inc
xchg
scas
out
in
loop
jl
mov
sub
jb
xor
int
lds
sbb
pushl
in
lods
cmp
cmc
mov
jp
ja
push
mov
xchg
fst
dec
or
sti
inc
push
xchg
std
jge
scas
cmpsl
lods
outsb
xorl
stc
ficompl
rolb
inc
mov
clc
jmp
lret
test
testl
xchg
fildll
mov
cltd
xlat
pusha
mov
ret
xor
mov
inc
inc
xchg
pop
fidivs
fisubrs
insl
mov
insl
popa
mov
and
ljmp
mov
cmp
add
sti
jg
lcall
scas
fnstcw
pushf
or
cmpsl
int
jle
xor
int3
scas
jne
ljmp
or
mov
pop
or
xor
sbb
sub
nop
ret
loopne
in
sbbb
lds
rorb
xor
ljmp
nop
orb
xor
popa
jg
add
cmp
adc
mov
std
push
sbb
add
sub
sub
mov
xor
push
mov
inc
mov
insb
adc
test
icebp
cmpsl
popf
xchg
mov
sub
iret
and
mov
mov
repnz
popf
jge
call
push
mov
lea
rol
jne
aaa
mov
lods
dec
jmp
ljmp
dec
mov
lods
fisubl
imul
shll
push
push
xchg
mov
push
fistl
je
das
mov
xchg
push
inc
js
cli
clc
call
xchg
aad
lcall
jl
jae
xor
mov
fimuls
loop
out
cmc
ret
xchg
adc
faddl
scas
iret
pop
dec
cwtl
and
into
mov
cltd
jmp
lcall
adc
jno
inc
lret
fwait
cmp
sbb
xor
mov
add
xchg
sahf
xchg
fidivl
outsl
fsubr
jge
loop
cli
xor
outsb
push
jne
aam
lret
decl
push
pop
neg
lcall
mov
jo
mov
mov
lcall
in
dec
stos
sub
subb
in
add
mov
bound
fcoms
into
adc
shr
scas
cs
add
lea
decl
pop
es
push
or
pop
stos
mov
sub
xor
pop
cli
call
movsl
loop
push
aad
sub
push
fisubrs
dec
adc
fs
push
es
mov
int3
mov
mov
fnstcw
leave
cld
push
dec
stos
insl
testb
popf
and
mov
pushf
cmp
mov
sub
hlt
iret
sbb
pop
cmp
pop
pop
add
fadd
and
hlt
int
and
add
pop
ret
fistpl
push
xchg
xchg
adc
mov
cmp
lcall
outsl
mov
pop
adcl
fsubrl
push
nop
pop
inc
imul
mov
std
pop
push
cmpsl
sbbl
jnp
into
pop
ffree
jnp
test
idivb
decl
ret
mov
rcl
clc
xchg
dec
loope
or
decl
bound
xchg
cmpsl
cs
mov
mov
repnz
sbb
std
fucomip
ljmp
call
jmp
pop
imul
bound
je
adc
decl
xorl
frstor
xor
cmpsb
test
mov
sti
stos
faddl
adc
hlt
pop
push
popa
mov
mov
xchg
inc
cli
jg
outsl
push
out
ficoms
mov
mov
push
stos
aaa
ljmp
inc
mov
inc
hlt
cmp
mov
push
pop
cmovle
push
sbb
dec
sti
mov
les
ljmp
xor
jbe
loopne
jbe
or
inc
in
pop
or
mov
lret
xchg
mov
test
lea
mov
and
add
subw
xor
push
xchg
mov
nop
nop
push
add
mov
push
out
incb
mov
cld
sub
and
push
jle
jmp
roll
pusha
or
fsubrs
and
movsl
ljmp
jle
int3
fisubrl
lcall
int
adc
jle
pop
cmp
jp
or
pop
mov
lcall
cmp
out
ret
test
pop
push
sarb
add
or
mov
adc
xor
jmp
leavew
jbe
jmp
cmp
cmpsl
xchg
pop
andb
or
or
fucomip
mov
and
fcmovne
popf
mov
add
jecxz
mov
aad
aas
mov
mull
adc
imul
jno
sbb
loopne
call
into
loope
cmpb
popa
push
call
ja
and
leave
adc
mov
adc
ret
in
mov
shll
inc
enter
pop
pop
xor
jmp
push
xlat
repz
push
imul
ret
roll
scas
jb
inc
sub
pushl
xor
jle
cli
mov
cmp
sub
mov
mov
mov
sub
sub
stos
pop
mov
pusha
lock
jo
in
sub
cmp
ljmp
daa
add
inc
push
scas
mov
sbb
fsubl
sbb
fsubr
adc
and
cli
call
mov
xchg
negl
cli
sbb
jmp
mov
add
int3
xchg
mov
popa
cmp
cltd
sbb
mov
sbb
mov
lds
pop
adc
int
pop
pusha
je
lock
cli
sbb
jp
stos
lcall
int3
add
xchg
inc
lea
xor
nop
mov
jmp
mov
sub
add
inc
repz
loop
jg
or
inc
pop
dec
mov
adc
push
and
aaa
cmp
jg
pop
call
mov
in
test
pop
mov
mov
ljmp
pop
in
push
inc
in
push
pop
push
add
pusha
hlt
pop
add
xor
ljmp
add
dec
addr16
lods
pop
cli
push
shll
pop
test
divb
cld
ljmp
inc
mov
cmp
xor
mov
stos
iret
cmpsb
pop
bound
jl
int3
idiv
incl
add
fisubs
adc
fsubs
inc
mov
sbb
ljmp
adc
push
or
cmp
aam
incl
imul
mov
mov
mov
stos
faddp
inc
incl
cmp
lea
jbe
cmp
mov
dec
mov
and
int3
insl
stos
mov
stos
loopne
mov
out
dec
lcall
xor
gs
int3
cmp
and
pop
xchg
dec
rclb
outsl
adc
incl
push
pop
cmp
mov
sti
xchg
dec
add
shrb
jl
lcall
fistpl
mov
repnz
lahf
mov
test
fiadds
jae
test
dec
jl
js
mov
jnp
lods
and
pop
jmp
leave
dec
jb
sub
ljmp
push
jp
int
sbb
ret
clc
call
push
outsb
sbb
mov
es
call
mov
popf
pop
ljmp
push
xor
xchg
mov
xor
mov
ljmp
lock
aas
mov
push
rol
cs
push
sbb
lock
cmp
call
jmp
fstp
xchg
mov
or
xlat
mov
jno
push
jmp
leave
aaa
out
rclb
imull
negb
push
jle
jo
mov
shll
pushf
pushl
clc
push
mov
lods
and
push
into
xorb
push
pop
jecxz
lahf
or
jmp
decl
roll
jnp
cmp
cmpb
testl
enter
push
jg
sbb
aaa
hlt
call
pop
flds
lret
hlt
movsl
push
pop
pop
mov
sbb
xchg
je
cs
fdivrl
cmp
jns
insb
icebp
pop
out
mov
pushf
and
scas
lcall
in
jnp
std
testl
test
ret
mov
and
mov
pop
fucomip
push
aas
inc
mov
mov
and
xchg
sub
js
xor
sbb
xor
in
aad
rclb
das
std
lret
int3
or
outsl
mov
pop
leave
mov
lahf
or
fldt
dec
cwtl
pop
lret
xchg
lods
pop
push
jle
test
dec
add
xchg
mov
cmp
fbld
into
shlb
push
mov
dec
adc
divb
icebp
add
shll
inc
xor
lea
push
jmp
push
sahf
sub
mov
cmp
rep
fstpl
outsb
cmc
xor
fildl
lods
lea
in
inc
mov
loope
lods
push
rcrb
lahf
mov
jmp
lock
das
and
push
push
jnp
mov
or
xchg
call
clc
idivl
in
xor
or
outsl
fs
in
icebp
cmp
cmc
repnz
pushl
lock
mov
fnstenv
xor
loop
clc
ret
mov
stc
fs
fs
icebp
add
pop
or
cmpsb
xchg
popf
adc
aad
inc
and
sub
jmp
xor
decl
mov
pusha
arpl
imul
sbb
shrb
pushl
cmc
cld
in
mov
push
mov
imul
inc
xor
jg
adc
decl
lock
xchg
inc
jmp
jmp
lret
mov
push
in
hlt
ljmp
sbb
and
stc
loope
jns
imull
cwtl
ds
addb
sbb
add
xor
test
push
jle
jg
inc
movsb
fstl
mov
pop
jb
fs
push
xor
push
mov
sbb
fstl
fwait
push
xchg
push
pushf
xor
pop
cwtl
aam
jmp
push
cmpsl
jo
dec
xchg
ds
dec
push
ljmp
mov
xor
in
fdiv
push
pop
cmp
ljmp
add
sbb
test
jo
dec
dec
ja
fistpll
xor
sub
ljmp
icebp
mov
inc
inc
push
icebp
xlat
pop
aas
add
std
cmc
pusha
xchg
lcall
add
repnz
hlt
or
aad
pushf
cmp
in
ljmp
mov
out
ficompl
shll
adc
out
dec
test
dec
data16
mov
out
sbb
pop
mov
mov
repz
jmp
mov
cli
mov
push
mov
icebp
lea
aam
push
pusha
out
in
pop
add
test
push
ljmp
test
xchg
mov
loop
andb
add
cs
or
add
fidivrl
sub
outsl
je
arpl
add
gs
js
stos
mov
fiadds
sub
sub
mov
test
add
sti
or
insl
jo
or
popa
jo
mov
add
sub
mov
and
gs
or
and
add
add
mov
cvtps2pd
rolb
add
ret
mov
dec
push
push
or
fidivrl
inc
outsb
jae
popa
adc
testb
imul
fiadds
jnp
push
pop
push
push
fs
xchg
lea
xlat
inc
xor
push
dec
adc
add
sbb
sub
repz
ret
mov
push
add
add
pusha
test
orb
movsb
dec
xor
imul
xorl
data16
rorb
inc
pop
xorb
sbb
popf
and
add
xchg
test
int3
lcall
or
dec
lods
adc
popa
adc
enter
pushf
movl
cltd
sub
sbb
adc
enter
add
pusha
cmc
xchg
or
add
and
orb
adc
sub
add
mov
gs
or
xor
insl
add
push
add
int3
sbb
popf
stos
mov
jg
nop
or
adc
mov
dec
out
roll
adc
add
xor
mov
xchg
dec
sub
sub
or
addl
and
fs
cwtl
nop
pop
add
add
pop
sbb
movsb
add
push
and
add
add
je
xchg
xchg
or
pop
add
shrb
mov
sbb
bound
mov
sub
adc
data16
mov
inc
jno
add
add
test
jae
and
dec
lock
pop
adc
inc
add
adc
add
mov
cwtl
cltd
lods
or
enter
push
sub
inc
dec
xorb
inc
fidivl
inc
push
rorb
adc
or
inc
and
popa
xchg
push
add
fs
fwait
add
xchg
and
popa
push
mov
into
icebp
rorb
movsb
adc
andb
stc
sub
test
adcl
inc
mov
sub
lods
inc
sub
and
push
xor
rcl
push
and
testl
inc
je
adcl
mov
jp
push
adcl
add
pop
mov
mov
sub
jge
rorb
movsb
sbb
clc
lea
adc
xor
sbb
inc
add
or
push
fs
fiadds
pusha
aam
out
adc
gs
aam
add
adcb
cmp
sub
xchg
dec
test
sub
mov
or
mov
or
adc
xor
dec
xchg
inc
sub
adc
or
xor
lret
ret
mov
dec
lahf
adc
leave
addb
inc
mov
movsb
sub
and
pop
inc
inc
je
mov
push
sub
sub
sub
inc
and
push
adc
or
push
loop
or
push
sbb
add
sub
dec
add
pusha
adc
or
movl
add
adc
and
inc
lds
adc
xorb
push
and
inc
or
sbb
inc
sbb
test
shrl
add
outsl
cmp
add
or
xor
or
shll
loopne
and
test
xchg
and
xchg
add
iret
add
mov
inc
or
addb
das
mov
push
mov
add
mov
sub
lods
sub
outsb
mov
fs
inc
adc
and
test
lods
shll
or
and
lods
dec
test
lds
xchg
pop
lds
mov
or
and
adc
lret
stos
or
dec
mov
movsb
dec
mov
and
xchg
or
mov
push
dec
int3
add
test
and
mov
mov
lcall
rcll
add
push
adc
test
push
jae
push
sbb
push
gs
add
or
or
push
adc
mov
popa
inc
mov
xchg
loop
ret
cmp
push
adc
adc
or
lods
dec
sub
adc
add
sub
nop
rorl
dec
or
movsb
and
or
push
pop
inc
sbb
nop
add
push
or
pusha
mov
xchg
or
xchg
inc
mov
mov
or
test
and
mov
roll
pop
add
mov
adc
jbe
and
xchg
or
lods
sub
sbb
sbb
xor
addr16
jmp
add
add
cltd
andl
mov
nop
push
mov
or
add
add
push
fs
shlb
sub
add
mov
sub
pop
mov
push
pop
adcb
or
mov
inc
lea
add
shlb
fiadds
add
sbb
jge
jb
outsb
jae
into
outsl
adc
mov
je
pusha
pop
adc
adc
and
mov
inc
ss
add
pop
popa
subl
mov
gs
enter
inc
std
adc
adcl
add
dec
inc
sub
mov
pop
mov
adc
jns
outsl
outsb
imul
loop
outsl
jb
push
jae
xchg
ret
cmp
mov
or
popa
arpl
insb
out
add
test
sub
dec
or
mov
test
inc
dec
popa
xchg
push
icebp
nop
adc
imul
jo
push
add
and
mov
in
push
inc
add
add
mov
add
lahf
cmp
or
add
adc
test
add
add
inc
or
add
dec
mov
pop
or
push
push
add
mov
pop
or
pusha
adc
sbb
je
xor
cmp
in
repz
cmpb
pop
rolb
mov
in
cltd
mov
and
rolb
insb
inc
push
repnz
fsubs
cmp
nop
add
aas
add
rcrl
add
xor
add
add
daa
jb
nop
lret
xchg
insl
sahf
and
xchg
push
daa
inc
gs
pop
pop
adc
sub
add
loope
shlb
pop
daa
jae
arpl
test
imul
or
add
jle
sbb
repz
str
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
jo
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
and
lldt
add
add
add
add
add
add
add
add
add
fadds
add
inc
jno
add
add
add
add
add
call
lods
sub
adc
les
xchg
subb
out
mov
test
inc
push
add
push
add
sub
adc
les
xchg
subb
out
mov
test
inc
push
sbb
push
add
sub
adc
les
xchg
subb
out
mov
test
inc
push
xor
push
add
jmp
into
add
cmp
fchs
add
setb
jns
int
sbb
cmp
shll
mov
dec
adc
jno
inc
popf
jae
lcall
push
ja
sbb
psubsb
mov
jo
cmp
in
xchg
leave
les
rcll
lahf
std
cmp
aas
mov
fdivs
mov
repnz
lret
sbb
movsl
sbb
movsb
pop
mov
pop
xchg
ljmp
popf
dec
push
and
into
mov
jae
push
rorl
xor
or
mov
and
cwtl
mov
sahf
cmpsl
jecxz
mov
mov
or
cli
clc
or
addr16
mov
xchg
push
and
inc
cmp
xor
and
inc
jb
stc
sub
xchg
rorb
aaa
fidivrl
fcom
sub
mov
add
mov
shlb
jb
adc
jg
ss
or
push
jl
daa
jl
sbb
shl
lret
xor
mov
mov
jle
push
js
xor
xchg
fadds
ret
outsl
mov
dec
mov
sahf
orl
jns
jmp
dec
and
test
mov
sub
dec
add
dec
cmc
pop
scas
cltd
sarl
jp
lahf
arpl
lods
mov
add
adcb
dec
faddp
jbe
or
xchg
lea
fptan
xor
enter
call
mov
js
xor
pop
push
xor
lret
sub
test
aas
fwait
movsb
jecxz
sbb
fwait
es
ret
xchg
mov
mov
out
xchg
leave
pop
sub
scas
imul
push
mov
stos
bound
iret
xor
fisubrs
cmpsl
adc
jle
add
sub
stos
fimuls
xor
adc
and
xchg
mov
push
call
test
and
or
insb
sbb
cmpsl
adc
call
sub
and
add
sub
jno
cmp
loop
add
in
mov
out
xor
clc
fdivl
out
and
push
pop
and
mov
gs
fs
leave
es
in
xchg
xchg
push
sub
push
adc
inc
sbb
daa
sub
sub
cmp
test
fistl
mov
fistpl
adc
mov
out
mov
dec
mov
push
push
stos
pop
aas
testl
es
dec
mov
xorl
inc
inc
mov
test
jg
mov
jno
jns
xchg
lret
insl
fdivl
sub
adc
cmp
popa
mov
adc
sub
push
sar
push
adc
dec
xchg
pop
mov
jge
test
lds
inc
repz
testl
mov
lcall
sub
addr16
dec
mov
adc
and
shll
outsl
ffreep
insl
testb
stc
lcall
jne
mov
cmp
leave
sbb
lea
fstpt
mov
popa
test
imul
lods
jg
mov
lret
lods
xchg
xor
lret
fs
lret
xchg
lcall
sub
pop
lea
xchg
mov
push
cmp
call
add
je
shll
mov
sbb
xchg
mov
mov
sub
xchg
fdivrp
fcompl
std
shrl
sbb
loope
fisubrs
jp
or
xchg
pop
lods
pop
xchg
sbb
and
xlat
sbb
pop
mov
in
pop
das
xorl
cmp
jge
mov
cmp
pop
dec
push
adcl
ss
sbb
and
stos
cmp
dec
loop
jbe
push
inc
out
xchg
add
dec
mov
add
adcb
or
cmp
push
sarl
and
mull
mov
call
iret
outsb
xor
add
cmp
adc
push
xor
add
adc
rcl
dec
push
pushf
dec
mov
cmp
orl
inc
inc
and
add
mov
test
mov
xchg
subb
ret
shl
popa
call
aad
push
je
cli
push
fiaddl
fmull
mov
pop
xchg
cmp
xchg
cmc
add
jnp
test
mov
jns
jbe
mov
cmp
jecxz
push
mov
fdivl
add
add
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
ja
add
ja
add
ja
add
ja
add
add
add
add
sldt
add
add
sldt
add
add
sldt
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jo
inc
jb
add
push
gs
imul
imul
jb
arpl
jb
