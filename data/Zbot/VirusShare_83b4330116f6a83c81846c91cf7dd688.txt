push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
push
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
movl
lea
push
mov
push
push
mov
push
push
call
test
je
push
push
call
xor
jmp
lea
push
mov
push
push
mov
push
mov
push
call
test
je
push
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
sub
mov
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
lea
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
push
mov
push
call
mov
push
call
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
movl
movl
movl
movl
movl
mov
mov
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
lea
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
movb
mov
push
mov
push
call
push
call
mov
mov
push
mov
push
mov
push
push
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
lea
push
call
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
push
mov
push
call
mov
push
call
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
mov
cltd
idivl
mov
sub
jns
movl
jmp
mov
cltd
idivl
mov
sub
mov
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
push
mov
push
push
mov
push
call
mov
sub
cltd
idivl
add
jns
movl
jmp
mov
sub
cltd
idivl
add
mov
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
push
mov
push
push
mov
push
call
xor
jmp
mov
and
movzwl
mov
cmpl
ja
mov
jmp
mov
neg
mov
jmp
mov
sub
mov
jmp
movl
jmp
movl
jmp
mov
neg
cltd
idivl
cmp
jle
movl
jmp
mov
neg
cltd
idivl
mov
mov
mov
jmp
mov
cltd
idivl
cmp
jge
movl
jmp
mov
cltd
idivl
mov
mov
mov
jmp
mov
shr
and
movzwl
sub
mov
jmp
movl
mov
sub
cmp
jge
mov
mov
jmp
mov
sub
mov
mov
neg
cmp
jle
mov
neg
mov
jmp
mov
sub
cmp
jge
mov
mov
jmp
mov
sub
mov
mov
mov
mov
mov
cmpl
je
mov
add
mov
push
push
mov
neg
imul
push
push
mov
push
call
push
mov
push
push
mov
push
call
mov
push
call
xor
jmp
mov
and
movzwl
mov
cmpl
ja
mov
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
mov
shr
and
movzwl
sub
mov
jmp
movl
mov
sub
cmp
jge
mov
mov
jmp
mov
sub
mov
mov
neg
cmp
jle
mov
neg
mov
jmp
mov
sub
cmp
jge
mov
mov
jmp
mov
sub
mov
mov
mov
mov
mov
cmpl
je
mov
add
mov
push
push
push
mov
neg
imul
push
mov
push
call
push
mov
push
push
mov
push
call
xor
jmp
mov
mov
mov
sub
mov
cmpl
ja
mov
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
push
push
push
mov
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
int
inc
add
sbb
jmp
inc
add
inc
add
sbb
add
inc
add
sbb
inc
add
sbb
inc
add
pop
inc
add
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
in
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
movb
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
push
mov
add
push
call
add
cmpl
jne
movl
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
push
push
push
call
add
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
mov
add
mov
jmp
mov
pop
ret
xor
inc
add
inc
add
testb
inc
add
inc
add
add
inc
add
add
inc
add
testb
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
testb
inc
add
inc
add
inc
add
inc
add
inc
add
testb
inc
add
inc
add
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testb
inc
add
testl
testl
testl
testl
testl
testb
inc
add
inc
add
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
testb
inc
add
testl
testl
testl
testl
testl
clc
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
clc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
stc
inc
add
add
inc
add
stc
inc
add
add
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
stc
inc
add
stc
inc
add
add
cli
inc
add
add
inc
add
cli
inc
add
inc
add
inc
add
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
stc
inc
add
add
add
stc
inc
add
stc
inc
add
cli
inc
add
stc
inc
add
add
stc
inc
add
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
add
stc
inc
add
inc
add
stc
inc
add
stc
inc
add
add
stc
inc
add
stc
inc
add
stc
inc
add
cli
inc
add
inc
add
stc
inc
add
inc
add
stc
inc
add
inc
add
cli
inc
add
inc
add
add
add
cli
inc
add
inc
add
stc
inc
add
inc
add
add
stc
inc
add
inc
add
stc
inc
add
inc
add
inc
add
cli
inc
add
inc
add
stc
inc
add
inc
add
cli
inc
add
inc
add
cli
inc
add
add
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
cli
inc
add
inc
add
stc
inc
add
inc
add
add
add
add
add
sub
add
cwtl
or
cwtl
xor
or
add
mov
or
lret
push
fdivs
bound
add
sub
pop
xor
or
xor
or
xor
or
xor
aaa
or
ss
or
or
test
imul
add
add
or
ss
or
aaa
fiaddl
loopne
jmp
pop
xor
jno
cmpl
mov
lods
cmp
mov
cmp
push
fistpll
mov
push
adc
aas
push
sub
push
push
inc
cmp
jle
test
xchg
cmp
add
adc
aas
add
cmp
adc
add
add
cmp
add
cmp
add
cmp
add
cmp
mov
cmp
jp
cmp
jp
cmp
push
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jnp
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
inc
add
je
push
push
arpl
pop
jb
aaa
dec
add
pusha
push
popa
fs
push
bound
dec
jns
sbb
add
loopne
popa
fcoms
jb
dec
jns
cld
add
jmp
je
sti
pop
jne
leave
jbe
outsb
rclb
and
add
out
gs
mov
pop
inc
add
dec
je
pop
je
and
add
arpl
push
add
add
outsl
xchg
dec
inc
imul
jns
and
add
arpl
dec
push
pop
jne
inc
ja
outsb
dec
push
gs
and
add
sub
inc
add
cmp
inc
add
cmp
add
cmp
add
inc
add
pop
je
testb
or
testl
fs
dec
jns
add
add
jge
add
pop
jb
rcll
add
insb
and
add
xchg
xor
xchg
xor
subb
add
insl
jae
xor
add
xor
fs
add
push
and
arpl
add
jb
push
and
sub
and
add
pop
sub
xor
insb
inc
adc
outsl
arpl
add
stc
sub
popa
adc
imul
add
sti
or
gs
daa
jb
icebp
pop
insb
push
sub
add
fsubl
popa
jo
sub
add
iret
and
leave
sub
xor
and
aas
add
arpl
push
xchg
arpl
xor
test
add
and
push
add
pop
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
and
popf
add
aas
out
sti
or
add
add
daa
aas
add
inc
add
and
jmp
pop
aas
add
daa
aas
add
aas
add
addr16
add
daa
call
sub
add
daa
ds
daa
aas
add
daa
ds
daa
aas
add
aas
add
cmpl
jmp
aas
sub
add
add
aas
add
daa
dec
add
aaa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
inc
add
or
add
std
add
or
aas
add
std
add
std
add
popf
pop
add
int
add
mov
add
int
add
int
add
mov
add
lea
add
add
jge
add
lea
add
lea
add
add
jge
add
dec
add
dec
add
cmp
add
dec
add
adc
gs
add
and
and
and
adc
and
and
decl
test
add
add
and
add
and
add
test
add
and
sub
add
add
inc
add
or
add
add
and
add
and
add
and
add
fs
jb
add
arpl
and
and
and
jae
and
and
and
xor
and
add
and
add
and
add
and
add
out
add
and
add
and
jmp
add
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
cmp
cmp
add
add
dec
cmp
add
cmp
add
inc
add
std
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
jge
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
jge
and
jl
and
jl
and
jl
and
jl
and
jl
and
mov
and
mov
and
mov
and
mov
and
mov
and
jnp
and
jnp
and
jnp
and
out
es
cmp
or
std
jnp
aas
add
jl
aas
dec
jl
aas
xor
jl
aas
dec
jl
add
es
pop
jl
aas
fistpll
or
jl
aas
movsl
jl
aas
mov
jge
aas
dec
jge
aas
push
jge
aas
and
aas
es
add
aas
fstpt
aas
lds
aas
jmp
andl
aas
jne
es
aas
andb
inc
andb
add
cmpsb
inc
add
movsl
inc
add
daa
aas
add
add
add
inc
add
lret
inc
add
movsb
inc
add
movsb
inc
add
movsl
inc
add
movsb
inc
add
movsb
inc
add
inc
add
inc
add
jnp
add
daa
aas
add
jp
add
push
inc
add
dec
inc
add
inc
inc
add
cmp
scas
push
inc
add
inc
inc
add
inc
add
adc
add
add
add
add
shrl
add
imul
add
and
add
add
jge
add
add
add
add
add
and
add
and
add
and
add
and
add
add
pop
and
add
add
cmc
xor
add
xor
add
xor
add
xor
add
and
add
add
mov
add
dec
sub
add
pop
sub
add
ret
xor
add
jno
and
jno
and
jno
and
jo
and
jo
and
jno
and
jo
and
jno
and
jno
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
insl
add
insl
add
insl
add
add
and
insl
add
insl
add
insl
add
insl
add
outsb
add
insl
add
imul
and
insb
add
insb
add
insb
add
popa
imul
push
imul
cmp
imul
stc
push
aas
aas
out
es
jmp
es
mov
outsb
es
push
push
aas
cmpsl
insl
es
scas
insl
add
add
aas
xor
aas
inc
insl
es
subl
jnp
es
imul
aas
lahf
insb
es
add
aas
add
insb
es
in
insb
es
pop
insb
es
or
aaa
insb
es
xor
inc
insb
es
add
cmp
add
cmp
add
cmp
add
add
add
add
cmp
int
cmp
stc
iret
cmp
jmp
fidivrl
mov
cmp
mov
cmp
aas
mov
add
cmp
push
mov
add
cmp
add
lcall
std
jp
add
daa
aas
add
cwtl
cmp
popf
nop
cmp
jecxz
cmp
jmp
daa
aas
and
aas
addb
cmp
or
add
add
add
xor
add
jge
add
daa
add
pushl
add
shll
add
cmp
add
or
add
sysexit
add
push
add
inc
add
mov
add
jns
add
insl
sub
add
add
fwait
sub
add
sub
add
sub
in
add
int
add
and
jg
and
add
and
xchg
and
xchg
and
xchg
and
addb
xchg
addb
out
addb
loop
add
addb
rolb
add
addb
jo
add
addl
and
addl
and
xchg
and
addb
les
add
addl
add
add
addl
and
addl
and
addl
and
addl
es
fldl
es
leave
andl
aas
fwait
xchg
aas
addl
aas
outsl
andb
addl
aas
mov
es
lods
andb
ja
es
popl
es
jno
es
jb
add
add
aas
aaa
andb
and
es
roll
es
fldl
es
dec
andl
aas
sub
es
arpl
movsl
inc
add
movsb
inc
add
movsb
inc
add
stos
inc
add
movsb
inc
add
test
inc
add
test
inc
add
adc
ret
add
add
inc
add
sti
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
test
inc
add
inc
add
sbb
rolb
insl
rolb
push
sub
add
sub
add
add
add
add
add
xchg
mov
add
jg
add
jecxz
add
das
ret
add
cltd
mov
add
lea
add
add
test
rolb
add
add
adc
add
pop
add
sub
add
and
add
aaa
rolb
add
roll
add
add
lahf
roll
add
xchg
add
xchg
add
add
and
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
jns
and
jns
and
js
and
jns
and
jns
and
js
and
js
and
js
and
add
and
xchg
add
xchg
add
xchg
add
xchg
add
add
and
jbe
and
jbe
and
add
movsb
fwait
add
movsb
in
add
add
add
add
add
movsb
test
add
in
and
dec
jbe
aas
fiaddl
and
filds
and
aam
and
ljmp
mov
call
jbe
aas
jle
and
hlt
add
jns
and
fiadds
and
jmp
and
clc
add
jmp
js
aas
xor
aas
push
js
aas
cmp
es
addr16
aas
xchg
aas
pop
js
aas
fnstenv
aas
jmp
add
push
push
dec
add
sbb
pusha
sbb
mov
pusha
sarl
add
popf
and
adc
xor
push
lock
jo
pop
xchg
inc
push
mov
push
push
jo
jno
xchg
ljmp
add
add
add
jle
pop
mov
test
stos
ljmp
dec
fdivrl
divl
popa
sbb
stos
jmp
or
adc
lea
inc
mov
mov
add
sub
add
movsb
jg
xchg
jns
iret
adc
outsb
inc
movl
add
add
fs
adc
adc
add
sbb
jns
insb
js
adc
clc
decl
enter
mov
adc
inc
test
push
add
cmp
mov
cli
sbb
cmp
adc
imul
dec
int3
std
xor
das
hlt
jo
push
sbb
add
jp
jecxz
decl
rclb
lds
sahf
loopne
test
xor
rolb
sub
pop
xchg
sbb
cmp
sub
xor
lds
add
adc
jb
cmp
adc
xor
inc
scas
mov
clc
jmp
add
mov
loop
push
push
pusha
add
fldl2t
cmp
pop
popa
pop
fistps
inc
jb
jg
int3
adc
or
aad
test
jg
lret
icebp
movsl
outsl
xor
dec
jl
and
mov
mov
adc
and
sahf
lods
pushf
pop
inc
loop
cltd
mov
mov
pushf
pop
scas
push
stos
jp
mov
add
add
insb
mov
cmpsl
cmp
cmp
add
mov
lea
jge
cmpsl
sub
leave
cmpsb
andb
adc
aas
adc
daa
push
pop
and
nop
adc
es
pop
mov
aam
notb
aas
rcrb
testb
aas
add
add
adc
xor
or
xor
mov
jecxz
xor
xor
sbb
push
jmp
dec
aas
add
sbb
cmp
add
cmp
add
dec
add
cmp
add
cmp
adc
push
add
add
add
inc
imul
out
aas
jne
fidivrs
push
add
aas
outsl
jmp
aas
je
int
add
out
aas
outsl
add
aas
outsb
add
insl
add
aas
imul
mov
inc
dec
add
cmp
call
add
gs
add
and
add
and
add
arpl
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
ja
outsb
and
add
and
add
and
add
and
add
je
jne
jne
je
sahf
add
and
add
fwait
add
and
add
add
iret
add
mov
add
xor
repz
das
add
ds
add
aas
ds
add
lds
dec
add
sbb
ds
ds
ds
add
ds
add
incb
test
sti
add
aas
add
aas
fildl
xchg
aas
fiaddl
mov
iret
add
lods
add
rolb
push
aas
lds
dec
aas
mov
add
pushf
add
aas
fwait
add
xchg
cmp
mov
inc
aas
jnp
pop
aas
nop
add
add
or
add
daa
adc
push
sub
add
sub
dec
sub
add
sub
dec
and
add
add
sbb
sbb
aas
add
sub
add
daa
and
add
icebp
incl
and
add
aas
add
daa
das
add
daa
push
add
daa
or
les
sub
add
daa
adc
jmp
add
add
aas
add
sub
jecxz
pop
add
daa
sub
leave
daa
and
leave
daa
pop
add
push
cmp
add
cmp
add
jae
push
cmp
add
cmp
jge
add
sub
jo
lock
dec
cmp
add
cmp
cmp
add
cmp
cmp
adc
je
and
outsl
add
cmp
add
cmp
add
add
insb
add
cmp
loopne
add
out
sbb
xor
sbbl
adc
mov
push
shlb
loopne
sbb
bound
out
lea
les
out
mov
shll
xor
pop
inc
pop
out
call
in
cmp
xor
lcall
add
add
or
loop
les
jmp
add
leave
in
les
lock
daa
push
subb
pop
jae
bound
test
jnp
dec
sbb
xor
cmp
in
pop
dec
adc
insb
adc
pop
jl
ds
sbb
push
dec
sbb
push
outsl
mov
push
add
adcb
cmp
mov
jae
cld
add
add
cltd
jnp
xor
mov
dec
stc
out
dec
fildl
ret
jno
xlat
xchg
xchg
lods
fucomip
lcall
pop
and
lods
cmova
aad
xchg
or
jbe
or
scas
lods
in
in
int
int3
jns
adc
iret
fwait
add
mov
or
add
add
or
lods
mov
fwait
xor
lods
jnp
pop
jmp
push
sbb
or
mov
js
scas
pop
test
mov
pop
add
sbb
xchg
push
fdivl
xor
cmp
lahf
lret
mov
jge
cmp
lret
and
ja
aas
xor
add
iret
pusha
pop
ret
das
fnstenv
add
inc
mov
cmp
adc
enter
jns
pop
inc
popf
push
scas
sbb
add
pop
sahf
jae
push
scas
sub
adc
jle
adc
mov
push
ja
adc
adc
cmp
push
cmp
xchg
incb
push
jg
sub
daa
xchg
mov
add
ret
lret
push
mov
jl
lret
or
test
sub
xor
mov
jp
xor
cmp
add
xor
or
pop
stc
out
in
and
out
push
push
inc
xor
cmp
fcomps
cld
loope
data16
adc
sub
push
inc
das
sub
out
dec
pop
sbb
cmp
add
pop
sbb
dec
sbb
push
ljmp
sbb
add
add
and
push
lods
pop
pop
push
mov
lods
xchg
push
pop
in
push
in
ds
iret
fcmovu
or
insl
add
or
inc
jge
addr16
jno
jle
out
fcomi
and
mov
xchg
jbe
out
clc
in
popf
daa
rcrb
xchg
mov
add
ffree
test
dec
mov
pop
sbb
iret
gs
push
mov
pushf
inc
mov
mov
push
into
sbb
pop
fwait
mov
xor
adc
xchg
xchg
fs
mov
scas
dec
and
add
sub
popl
dec
dec
pop
inc
dec
mov
or
stos
xor
add
add
out
fidivrl
dec
hlt
mov
aam
xchg
push
xchg
roll
or
cmp
adc
jnp
jecxz
mov
roll
jmp
xor
fstps
pop
sub
fbstp
push
cmpsl
rclb
and
inc
outsl
xchg
les
fcomps
add
std
out
sbbl
add
add
adc
lret
cmp
shll
push
jp
shll
in
fcompl
inc
addr16
jnp
mov
xlat
pop
vpslld
xor
aas
sbb
cmp
into
sahf
test
inc
sub
insl
ljmp
xor
or
sub
xor
mov
push
fdivrp
mov
add
imul
andl
fs
shrb
movsb
sahf
mov
out
sub
push
xchg
push
jle
xor
insb
bound
ja
mov
in
arpl
inc
stc
pop
int
dec
arpl
dec
pop
add
inc
mov
jecxz
sbb
pop
mov
or
add
add
pop
jno
jae
push
jnp
xchg
ljmp
cltd
cmp
fisttpll
out
pop
inc
pop
sahf
lret
orb
std
jg,pt
sub
pop
movsl
repz
jecxz
fldt
jnp
inc
or
rcrl
popf
arpl
cmpsb
insb
idivb
sub
pop
inc
push
cmp
push
inc
sbb
push
sub
dec
stos
pop
std
and
fs
add
insb
stos
cs
call
dec
jl
mov
fwait
dec
scas
movsl
xor
or
filds
shlw
sbb
enter
push
xor
fisubs
and
xlat
imull
cltd
push
cmp
xor
xor
jbe
push
insb
push
jo
mov
lcall
xor
add
scas
loop
or
push
stc
or
xor
pop
xor
shlb
stc
daa
mov
jmp
sbb
cmp
mov
jmp
std
fbld
aas
add
daa
aas
add
out
daa
aas
add
aas
add
add
inc
add
push
inc
add
cmp
inc
add
cmp
in
and
add
add
add
and
add
add
inc
add
fiadds
jnp
hlt
outsb
lds
fsubrs
jge
bound
mov
out
rorb
es
test
lods
call
and
test
add
loop
push
sub
and
and
add
add
cmp
mov
mov
pop
pop
loop
pop
imul
xchg
push
adc
mov
outsl
cmp
dec
cltd
fiaddl
shl
dec
call
rcl
jp
xor
jle
jp
sbb
test
inc
push
nop
lods
jecxz
mov
iret
inc
adc
and
addr16
push
pop
js
add
add
and
hlt
jle
dec
scas
sbb
mov
test
fdivs
and
jns
xor
fcmovnbe
addr16
or
adc
stos
test
aaa
cmp
jne
lods
inc
ds
cmp
scas
sub
sbb
mov
aad
xchg
add
std
mov
std
andl
mov
movb
inc
mov
add
and
sbb
stos
inc
int
jg
fisttpll
call
mov
mov
mov
ret
enter
push
push
mov
cmp
push
xchg
in
insl
stos
insl
or
mov
add
mov
add
adc
add
lock
imul
xor
dec
jae
jle
or
pop
mov
dec
test
dec
call
scas
jbe
jno
jl,pt
xchg
sbb
sub
dec
inc
int3
jns
xlat
loop
cmc
rcrb
sub
test
aad
xor
in
pop
in
dec
jg
inc
mov
or
add
add
test
lahf
into
rcrl
imul
cmp
dec
cltd
popa
loop
add
addr16
adc
pop
or
adc
movsl
inc
out
jnp
imul
cltd
jae
jnp
push
repnz
sbb
outsb
mov
xchg
push
lods
sub
push
cmp
add
addr16
inc
into
sbb
fistpl
adcb
lret
addl
stos
imul
pop
aas
sbb
pop
int
lock
addr16
cmc
mov
mov
mov
push
test
mov
rcll
in
ret
jae
mov
push
sar
xor
jae
jp
and
ss
rorb
aas
gs
mull
and
add
ds
pop
push
repz
leave
mov
call
jne
or
push
stos
dec
or
clc
cmp
pop
and
lds
and
sbb
lock
jmp
divb
fucom
push
and
imul
push
repnz
data16
and
mov
adcl
sti
cli
add
add
cld
andb
adc
call
inc
roll
jge
call
sti
dec
push
icebp
cmc
xchg
sbb
dec
pop
shlb
mov
jnp
test
jno
stos
ret
xchg
adc
hlt
mov
daa
aas
add
add
lret
pop
xor
ljmp
add
add
jns
push
lcall
pop
cmp
sti
sarl
aas
out
mov
outsb
imul
sub
in
mov
add
inc
lds
dec
xlat
fldt
xor
les
iret
xor
stc
adc
add
xor
jle
in
push
push
lock
cmp
lahf
mov
scas
push
push
repz
mov
mov
or
lods
sbb
popf
mov
fsubrl
add
mov
fistpll
mov
shll
jne
bound
arpl
nop
wrmsr
test
lcall
jo
repz
adc
shrb
int
and
cmp
adc
pop
fsubr
or
sub
xchg
jb
xchg
inc
inc
jo
repnz
pop
or
sti
shlb
jle
add
cmpsb
mov
cmp
rolb
pop
or
sbb
inc
push
jae
arpl
aas
test
push
mov
es
xor
sub
mov
inc
inc
fsubp
fldz
cmp
jge
adc
std
test
insl
dec
sub
insb
decb
inc
dec
scas
fistl
inc
jecxz
inc
lds
cld
hlt
std
add
add
push
mov
daa
clc
mov
pop
mov
sbb
xchg
rcrb
shlb
jo
loop
fisttps
sti
dec
fnsave
jb
pop
incl
sti
in
push
leave
shr
jbe
mov
push
cmp
and
adc
xor
lcall
gs
add
add
mov
jmp
mov
pop
mov
sbb
es
test
icebp
mov
adcw
and
insb
jl
aam
pushf
iret
mov
and
neg
mov
mov
fcompp
mov
leave
testl
inc
pop
mov
les
out
not
out
add
and
add
int
cmp
stos
xchg
mov
inc
xor
clc
add
mov
rcrl
sbb
loop
sahf
mov
jbe
clc
adc
sbb
xor
in
mov
xchg
pop
mov
js
fwait
mov
xchg
sbb
xchg
inc
gs
dec
xlat
pop
push
incl
add
mov
fistpll
adc
inc
or
pop
loopne
mov
xor
jmp
mov
hlt
sbb
sub
adc
out
das
push
loopne
mov
push
mov
int3
jl
ja
jmp
jnp
xchg
repnz
scas
imul
cmpsb
outsl
add
add
mov
lds
arpl
push
xchg
add
and
mov
fdivrp
push
nop
xlat
jnp
cmp
ficompl
lret
out
cmpsb
push
jge
insl
and
jge
push
cli
cs
xchg
pop
jge
jne
arpl
xchg
inc
mov
jb
es
faddl
and
loop
fists
adc
add
in
sub
iret
std
in
mov
aaa
or
push
repnz
test
arpl
rclb
jp
pop
push
push
adc
mov
mov
pop
loope
or
lcall
xor
sti
daa
inc
cmp
jg
ds
pop
das
addr16
adc
daa
mov
sbb
test
add
ds
xlat
and
adc
pop
or
mov
jmp
sbb
movsb
popa
shll
add
aaa
or
roll
and
sbb
sub
jnp
adc
pop
xor
icebp
push
lods
icebp
dec
cmp
jmp
mov
xor
mov
das
push
push
ret
test
add
scas
jo
jmp
xchg
in
add
cli
pop
and
lahf
cld
cld
mov
mov
pop
adc
push
push
lret
lret
mov
mov
cmp
adc
dec
dec
movsl
mov
pop
pop
push
iret
iret
divb
out
out
push
insb
sti
sti
clc
add
cmp
dec
dec
mov
nop
test
jge
stc
stc
add
add
jnp
jg
loopne
push
mov
cmp
and
test
outsb
sbb
push
arpl
mov
inc
in
or
mov
in
mov
lcall
rcl
mov
and
into
cmp
inc
jecxz
xor
test
fistpl
shl
lret
icebp
mov
or
and
adc
add
pop
test
in
mov
mov
mov
icebp
push
xor
xchg
les
pop
cmpsl
ret
sbb
jle
fdivrl
fs
stc
xor
sub
ds
les
sbbl
arpl
inc
popa
aas
pop
dec
pop
cmp
scas
push
pushf
mov
lret
mov
jmp
add
pop
sub
imul
mov
in
sbb
cmp
jo
addr16
les
cmpsl
aaa
out
dec
out
pop
push
cmp
xchg
in
cmc
repnz
lds
pop
inc
jnp
loop
mov
push
outsl
push
inc
rcl
movl
lods
inc
hlt
mov
add
xchg
add
out
test
dec
aaa
xchg
dec
adc
add
add
mov
inc
xchg
insb
aad
icebp
dec
leave
pop
fsubrs
mov
mov
xchg
ljmp
add
scas
shll
aaa
or
pop
js
popa
pop
and
or
std
fsubs
cwtl
lods
jns
lret
call
jne
or
and
add
movsl
dec
dec
add
add
pop
mov
mov
das
mov
ud0
mov
jb
lds
add
cld
div
out
and
push
outsb
jl
popa
cmp
xor
lods
push
mov
xchg
sbbl
data16
mov
xchg
xchg
cwtl
push
cltd
adc
cmpsb
imul
adc
flds
add
add
mov
jecxz
lcall
push
push
xchg
into
mov
push
insb
push
stc
rcpps
cld
or
add
pop
or
or
fildl
mov
push
aam
mov
addb
in
cwtl
lea
pop
sub
xor
cmp
js
xor
add
add
jne
movb
clc
xor
out
xor
negb
inc
adc
xchg
insl
adc
js
fdivrp
pop
pop
xchg
imul
call
insb
pop
sbb
inc
cli
push
pop
sbb
cltd
push
ja
push
or
mov
popf
jbe
xchg
add
sbb
test
stos
in
int
idivl
decl
mov
mov
dec
rorb
test
pop
mov
sti
xchg
rorb
lahf
jle
shll
pop
pop
lds
pop
sub
pop
lcall
dec
incb
add
and
mov
xor
mov
outsb
in
das
xchg
js
pushf
jno
push
aam
mov
inc
push
adc
sub
add
test
and
comiss
push
xchg
xchg
in
sbb
push
jnp
lcall
and
imul
mov
decb
cmp
mov
mov
push
or
pop
addl
xor
add
lock
lods
mov
lods
mov
movsb
push
add
add
and
mov
aaa
push
sub
jge
jecxz
xor
leave
rcll
test
mov
push
insb
sub
add
insl
shr
and
rcrl
cld
mov
mov
pop
std
shrl
add
mov
pop
popf
xchg
dec
add
mov
mov
es
out
add
add
cmpsb
dec
into
adc
xchg
stos
aam
fnstcw
data16
jecxz
adc
push
adc
insl
imul
mov
or
lahf
dec
mov
mov
aad
mov
andb
stos
sbb
mov
js
test
mov
icebp
icebp
loop
arpl
mov
scas
add
add
xchg
inc
add
std
sbb
std
mov
sub
movsl
mov
dec
cli
lock
push
cmp
movsb
rcrb
push
aam
lods
add
cld
dec
push
sub
mov
mov
lret
inc
fidivrs
lea
jecxz
mov
cmc
push
jp
inc
lock
fs
or
or
lcall
jo
pop
outsb
aas
iret
popa
xchg
das
into
mov
insb
push
dec
mov
testl
pushf
pop
cmpsb
mov
loop
push
or
mov
loopne
push
jecxz
adc
repnz
cmp
rorb
sbb
or
fwait
mov
sub
fcmovnb
cmp
ljmp
pop
add
add
sub
in
stos
jo
into
cmp
enter
ss
xchg
insl
je
inc
lea
fisttpl
rorb
adc
stos
stos
push
popf
and
mov
add
call
hlt
jp
cmpsb
inc
scas
lds
or
lock
sub
fwait
xor
mov
add
xorb
push
xchg
adc
aaa
mov
je
pop
cmp
dec
or
or
mov
shl
jo
add
mov
lret
push
fwait
nop
dec
js
add
cmp
neg
push
sbb
sbb
shll
push
and
mov
imul
add
in
loopne
sbb
jp
xchg
push
sti
fadd
fists
jmp
out
jae
mov
jl
std
push
xor
stos
adc
cwtl
mov
in
inc
jmp
jecxz
cmp
sarb
push
or
cmp
add
filds
sbb
rcr
lret
xor
or
add
jnp
jl
sub
cmpsb
jg
or
sub
adc
dec
cmp
dec
scas
adc
into
dec
mov
stc
call
and
ja
cs
jno
mov
js
sub
xchg
es
and
fmul
fpatan
fcmovnu
out
daa
cmp
ret
adc
mov
pusha
push
iret
mov
imul
sub
add
add
imul
dec
cmp
push
add
cmp
sti
push
jl
inc
mov
fbstp
ds
gs
gs
and
jo
sti
cmc
shl
test
cmp
pop
fcompl
jp
test
pop
jb
dec
jns
insb
jp
jge
lret
sbb
add
add
push
or
xor
sbb
int3
loop
pop
jmp
mov
adc
sub
sub
cmpsb
loope
xchg
or
adc
sub
pop
lds
or
mov
cli
jae
push
fists
and
mov
cmp
int
xchg
push
jg
and
sbb
add
add
rcrb
xchg
pop
cs
push
sub
fcoml
pop
scas
adc
movsb
inc
ja
jbe
test
out
out
int
je
jp
mov
jo
leave
mov
cmc
cmpsb
fcoml
add
and
cmpsb
sub
inc
in
fs
pop
pop
divl
insl
push
pop
in
mov
sub
add
add
cli
dec
push
xor
cwtl
and
pushf
dec
pop
call
mov
add
sub
imul
jns
inc
lds
js
push
or
jge
adc
push
mov
push
sub
xor
dec
xlat
push
lock
xchg
mov
fistpll
cmp
mov
sub
add
mov
pop
xchg
shll
xchg
mov
out
mov
and
jo
loope
jp
in
mov
pop
movsb
enter
fsts
hlt
push
jle
push
pop
jp
and
cmp
pushl
push
cli
push
pop
sbb
cmpsb
push
test
lods
inc
pusha
sbb
iret
inc
imul
xor
add
loop
mov
nop
xchg
and
xor
leave
out
dec
lahf
shrb
sbb
mov
repz
adc
icebp
push
pop
xchg
cmpsl
cmp
rorb
outsb
mov
aas
nop
imul
xor
cmpsl
aad
cmpsb
pop
push
popa
mov
xchg
lods
dec
aaa
fistpl
xchg
or
add
push
adc
add
add
xchg
out
dec
or
jl
inc
fistpl
sub
lahf
cmp
mov
mov
popf
les
fmul
test
rcl
movsb
xor
pushf
aaa
shll
xor
aad
inc
mov
js
outsb
dec
push
mov
js
mov
nop
mov
std
rcrl
pop
mov
adc
pop
repz
shll
lret
add
and
inc
lds
adc
loope
outsl
test
mov
and
dec
mov
pop
mov
cmp
test
inc
test
xor
cmpb
aaa
pushf
cmp
adc
add
outsl
fadd
fdivrl
fidivrs
xor
xor
add
repnz
nop
shll
xchg
cli
sub
xchg
fs
add
add
mov
add
xchg
add
inc
inc
and
xor
jp
push
dec
loop
xchg
adc
push
daa
out
add
cmp
stos
adc
mov
inc
sbb
mov
or
cmpsl
pop
aas
orb
outsb
mov
mov
shr
xchg
push
xor
mov
push
rcrb
cmp
gs
pusha
jge
inc
faddl
sbb
outsl
cmpsb
xor
mov
sub
mov
loopne
adc
cmp
adc
mov
xor
loop
adc
ret
pandn
repz
sarb
enter
test
nop
jmp
pop
stos
mov
add
add
jbe
dec
sbb
cmc
popa
fs
and
and
test
iret
sub
jg
inc
pushf
pop
nop
adc
addr16
inc
cwtl
sub
jle
stos
add
outsl
adc
mov
ljmp
xchg
push
add
ljmp
mov
shll
and
pop
loopne
inc
faddl
add
lds
adc
ja
fbstp
imul
out
faddl
mov
hlt
lods
pop
inc
pop
stos
xchg
mov
mov
orb
inc
xor
scas
or
inc
cld
pop
ja
out
scas
test
mov
sub
push
std
sbb
sbb
mov
xor
and
sub
loop
cmp
push
imul
sub
sub
add
add
cmc
roll
xchg
jle
pop
movsl
jge
xchg
movsb
mov
aas
push
and
pop
pop
lods
sbb
stos
sbb
je
sbb
lds
hlt
popa
pushw
mov
inc
and
scas
mov
push
mov
mov
test
loope
add
in
in
xchg
and
jle
xor
jne
jecxz
or
add
dec
mov
add
dec
cmpsb
mov
mov
pop
add
adc
or
inc
inc
lock
lret
sahf
xor
fwait
inc
jno
jp
pushf
mov
mov
das
push
push
fldl
pop
push
xchg
js
add
lock
adc
lcall
push
imul
pop
add
add
xlat
fdivrp
and
nop
dec
sbbb
dec
js
sub
std
mov
popf
lcall
imul
inc
mov
int3
adc
mov
test
in
add
push
adc
cld
and
jnp
jecxz
add
adc
xchg
enter
test
mov
mov
dec
sub
mov
xchg
mov
xor
adc
fcompl
imul
outsb
arpl
cmp
adc
mov
inc
gs
and
jge
jp
clc
xchg
xor
cmpsb
fcomps
dec
popf
jno
repz
adc
ss
rcl
pop
push
insb
push
pop
cmpsb
cltd
clc
mov
stc
es
loop
push
movsb
mov
pop
mov
sbb
sub
outsl
je
out
add
dec
in
rol
or
or
mov
sbb
sub
icebp
lea
dec
push
mov
in
pop
xchg
or
jno
inc
bound
repz
int
mov
pop
popl
cmpb
jp
test
mov
cltd
cmp
add
int
jge
in
arpl
pop
mov
or
notb
hlt
and
mov
jl
outsb
inc
push
test
iret
sub
push
call
insl
scas
sbb
jb
mov
push
aas
je
pop
addr16
mov
dec
jmp
xchg
adc
gs
cmp
cmp
sbb
xchg
ficoms
add
icebp
mov
sub
aaa
cltd
adc
mov
movsb
pop
dec
push
test
mov
sbb
mov
xchg
xlat
push
pushf
and
push
push
aas
test
inc
call
xorb
xchg
cld
sbb
and
add
adcb
sub
adc
mov
scas
stos
adc
aaa
pop
inc
pop
jbe
insl
xor
add
add
mov
xchg
sub
mov
sub
punpckhdq
cltd
sar
lcall
add
out
push
jno
out
shll
call
sbb
or
in
jl
or
add
int3
testl
icebp
mov
arpl
outsl
ret
popa
xchg
xchg
mov
and
je
adc
lock
mov
cs
movsb
ja
and
jg
imul
lret
cld
fs
pop
subps
mov
insb
js
jp
les
add
in
lret
imul
frstor
inc
add
push
push
enter
add
jl
jne
ret
scas
out
xchg
mov
add
add
dec
xchg
pushf
cmpsb
loopne
jp
into
push
pop
shlb
cmpl
loopne
dec
icebp
enter
ret
xchg
mov
mov
mov
dec
jp
mov
fsts
into
cmp
sahf
sbb
lods
mov
push
jg
repz
fldcw
icebp
pushf
andl
add
add
inc
std
and
fiadds
cmp
idivl
dec
es
mov
push
jg
jno
or
aam
out
jge
das
sti
shlb
sbb
repz
stos
sub
mov
xor
iret
and
pop
jns
or
imul
shlb
loope
cmpsb
dec
mov
popa
repz
add
mov
mov
pop
idivb
jg
adcb
inc
pusha
or
jno
data16
xor
loopne
inc
mov
xchg
xor
aaa
add
xor
add
sub
int
pushf
imul
add
sbb
mov
jno
lods
mov
xchg
sub
bound
cmp
out
and
add
add
aas
push
jecxz
mov
push
push
test
out
lock
mov
mov
in
clc
daa
stc
xor
add
pushf
or
sub
cwtl
adc
addr16
jb
out
dec
push
xchg
outsl
jmp
xchg
ss
lds
adc
dec
xlat
lret
dec
sbb
mov
mov
sub
push
loopne
add
add
ss
xor
inc
test
lods
imul
push
xchg
mov
fisttpll
pop
mov
jge
lock
sub
fdivrl
cmc
or
lahf
mov
sub
int
cld
mov
pop
icebp
add
xor
std
stc
bound
fnstsw
dec
and
stos
mov
xor
js
mov
add
add
ds
das
sahf
mov
xchg
dec
shl
push
mov
movsb
shrb
xchg
push
dec
call
mov
and
xor
dec
mov
lret
jecxz
or
hlt
xorl
pusha
lods
mov
dec
das
js
and
sub
pop
mov
jle
push
cltd
lea
add
aaa
push
jae
int3
lret
adc
rcrl
sub
xchg
mov
shll
mov
cli
stos
pushf
inc
sub
into
es
xor
push
scas
lcall
stos
xchg
or
decl
mov
pop
out
adc
cmp
lahf
sbb
enter
addr16
add
add
push
xlat
mov
ljmp
movsb
xchg
hlt
aam
xchg
inc
add
mov
sbb
sub
add
lods
cmpsl
mov
stos
loop
ds
ret
cs
dec
adc
jle
push
cmp
mov
ljmp
add
outsl
mov
xor
fisubrl
pop
stc
je
push
fadd
xor
insb
dec
pusha
lods
aaa
and
lea
hlt
pop
lds
inc
xchg
in
and
mov
mov
insb
jae
das
dec
into
dec
cmp
adc
int
bound
addr16
sti
fisubrl
nop
repz
push
xlat
ret
add
out
inc
cmp
inc
ret
in
jae
and
sub
add
mov
cwtl
add
push
or
or
je
stc
int3
sub
pop
sub
push
hlt
les
loope
lea
pop
scas
fldenv
add
cmp
mov
stos
cli
dec
in
dec
jecxz
and
mov
jmp
int3
rcll
cmp
lds
mov
mov
bound
add
repnz
and
ljmp
ret
das
lea
dec
push
mov
jns
shll
add
pop
xchg
mov
push
push
outsl
sarl
and
dec
loopne
testl
mov
sub
popf
test
mov
pushf
mov
push
jge
stos
sti
bound
add
push
xchg
xchg
jne
dec
bound
mov
mov
movsl
xorl
pop
jnp
mov
test
mov
mov
jecxz
shr
push
jo
mov
stos
add
jno
jp
imul
xor
push
and
inc
pop
add
ljmp
popf
mov
ret
fcomps
push
inc
dec
arpl
out
iret
leave
js
mov
inc
lret
cld
push
adc
mov
mov
arpl
leave
add
rclb
ret
fists
rcr
xor
and
ficoms
sbb
je
mov
sbb
push
sbbl
inc
out
mov
je
fwait
sub
add
add
js
pop
aam
jb
and
add
pusha
sbb
xlat
repz
fiaddl
outsb
push
test
daa
aas
add
inc
orb
mov
jmp
pop
push
loope
dec
test
sbb
rolb
adc
inc
push
in
popf
mov
pop
mov
pop
dec
or
pop
mov
jg
xchg
out
js
add
pop
cmp
or
adc
jbe
mov
adc
popa
xchg
roll
and
pushf
sbb
cwtl
dec
push
or
out
mov
stc
sub
in
adc
and
push
icebp
addb
sbb
in
cltd
insl
mov
jg
fdiv
add
negl
ss
mov
inc
add
mov
cmp
mov
dec
xlat
xor
call
xchg
fcompl
and
test
mov
lods
stc
lods
es
sub
or
sahf
int
fdivl
out
ja
mov
sub
and
sahf
adc
sarl
lahf
je
mov
and
xchg
ret
push
fstps
cltd
mov
rcll
add
add
jmp
mov
in
pop
aas
add
pop
push
pushf
and
push
mov
add
cs
call
pop
imul
push
push
iret
or
fadd
js
popa
adc
sbb
out
and
fldenv
add
mov
pop
pop
xorb
add
add
pop
cmpsb
or
fwait
andl
out
jmp
int
std
mov
adc
sbb
popa
movsb
mov
mov
xor
mov
xor
push
mov
and
jnp
imul
sbb
cltd
inc
addr16
xor
movsb
in
enter
stos
outsl
jno
outsl
in
aad
add
pop
subb
add
stos
mov
mov
jle
or
dec
mov
cmp
adc
jns
aad
mov
adc
or
jle
test
dec
sbbb
pop
xlat
inc
inc
out
mov
icebp
daa
ds
adc
insb
int3
xor
in
notb
clc
cld
xchg
jp
adc
add
movsl
xlat
inc
fisubl
xchg
push
sub
jge
add
push
sbb
add
sub
add
or
nop
or
xlat
xlat
mov
shll
stc
and
cmp
aad
adc
dec
insb
sbb
iret
mov
mov
push
jle
clc
ret
adc
cmp
std
lock
negl
stos
lods
fidivrs
xchg
dec
add
add
push
and
dec
xchg
mov
jmp
xlat
test
lds
fmull
fiadds
jl
cwtl
imul
xchg
adc
mov
aas
shll
xchg
xor
jmp
adc
sub
fadd
sub
fstpl
mov
add
sbb
aad
lods
scas
adc
add
inc
mov
int
pop
xor
push
mov
add
xchg
addl
cltd
push
inc
xchg
push
loopne
mov
test
pusha
ljmp
iret
and
stos
stos
push
pushf
xchg
icebp
cmp
rcl
test
adc
fcoml
ret
add
lods
sbb
jb
jl
pop
mov
ljmp
arpl
clc
push
leave
loopne
mov
out
xchg
push
push
shlb
fsub
push
push
cmp
xchg
rorl
das
les
pop
test
cmp
pushl
cmp
mov
mov
add
add
mov
dec
sbb
repnz
and
sbb
sbb
pop
into
lods
sub
orb
in
mov
lods
movb
sub
out
sarl
sub
push
clc
jmp
rol
adc
mov
insb
idivl
ljmp
add
add
sbb
or
and
fwait
mov
cmp
sub
xchg
jmp
shll
xchg
cltd
pop
mov
pop
iret
bound
loop
je
rcrb
cmp
pop
sbb
je
or
testb
sub
cld
popa
test
dec
dec
scas
aam
mov
mov
add
add
idivl
mov
inc
divb
xor
into
jb
mov
test
lret
and
nop
push
mov
enter
cmc
in
pop
sbb
pop
test
call
div
outsb
aad
jp
gs
jmp
loope
sbb
shl
shl
xor
sbb
clc
imul
cltd
mov
mov
jg
add
add
aad
sbb
dec
rcrb
inc
mov
pop
gs
cwtl
or
xor
cmpb
mov
andb
rclb
arpl
jecxz
add
jne
out
mov
scas
in
dec
xchg
jae
in
and
scas
mov
dec
and
fnstcw
mov
fistpll
divb
xchg
imul
loope
add
add
addr16
pop
jbe
or
loope
pop
and
mov
jle
repnz
xor
fwait
dec
bound
jge
into
fldenv
jbe
ja
cltd
adc
lea
adc
in
and
mov
xor
imul
cld
jns
mov
inc
shrb
xor
popl
inc
and
add
xor
pop
mov
ret
jbe
ja
inc
orl
lret
ja
jb
cwtl
push
pop
sahf
push
xor
dec
add
push
rolb
mov
repnz
into
stc
loop
and
push
mov
mov
mov
push
jmp
ds
ret
lcall
ret
pop
cli
jae
jmp
xchg
in
into
pop
xchg
xor
loope
add
lret
jp
pop
pushf
das
sub
push
or
sbb
mov
push
lock
pop
mov
adc
mov
or
sbb
cmp
jge
push
fbld
mov
adc
push
cmp
sub
pushf
fdivrs
jp
fs
popa
jnp
ljmp
adc
add
dec
cmp
add
cmp
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
sub
sti
jmp
repz
add
and
jno
and
add
and
jb
and
add
and
jno
and
add
and
jno
and
add
mov
add
add
add
je
and
add
and
je
and
add
and
je
and
add
stos
je
and
cld
add
aas
sub
add
aas
and
add
aas
jne
in
jp
sub
xorl
imul
mov
and
sub
mov
add
aas
popf
je
aas
xchg
add
aas
std
jb
add
fs
out
add
ds
je
aas
dec
add
aas
lods
je
aas
lods
add
aas
insl
je
ds
add
aas
xor
mov
jae
sbb
aas
cmpl
sub
fsin
ljmp
sub
dec
enter
sub
mov
call
sub
add
sub
add
cwtl
incl
sub
add
mov
lcall
add
sub
add
js
fbld
and
add
decl
adc
and
daa
and
mov
inc
daa
cmp
jmp
daa
inc
add
inc
daa
inc
add
call
or
in
daa
sbb
sbb
inc
or
cmp
inc
xor
jns
aas
add
pop
add
aas
add
add
aad
aas
add
inc
sub
cmc
int3
aas
add
int
add
inc
add
inc
add
mov
inc
add
mov
aas
add
sbb
int
add
add
add
adc
sub
inc
or
rol
aas
add
aas
add
inc
pop
add
movsb
add
and
js
add
add
js
and
add
and
add
and
js
and
add
and
js
and
add
and
ja
and
add
mov
inc
and
add
and
ja
and
add
and
ja
and
add
ja
and
add
mov
and
add
jbe
inc
and
add
and
jge
and
add
add
add
jge
and
add
and
jl
and
pusha
add
aas
cmpl
aas
adc
lds
and
stc
jge
ds
add
or
add
aas
mov
in
pop
add
aas
mov
add
or
aas
fiaddl
xor
loope
fs
dec
add
aas
or
add
aas
sub
add
aas
and
fs
and
jl
aas
mov
jnp
aas
stos
add
aas
pop
jnp
aas
push
add
aas
push
jnp
add
inc
add
incl
clc
daa
xor
int
dec
daa
cmp
int
jmp
daa
cmp
int
lcall
add
mov
sub
inc
mov
dec
daa
adc
jne
jmp
add
add
cmp
adcl
lcall
jo
aas
and
imul
add
and
dec
inc
clc
daa
inc
add
xor
jmp
add
cmp
inc
push
add
aas
add
adc
pop
lds
add
cmp
aas
add
inc
adc
jge
aas
add
cmp
add
mov
or
jmp
cmp
inc
add
cmp
inc
add
cmp
add
inc
add
add
dec
mov
add
push
mov
add
sbb
cmp
add
inc
add
inc
or
cmp
rolb
or
jle
and
add
and
jle
and
add
and
jg
add
add
add
and
jg
and
add
and
jg
and
add
es
and
add
and
jg
and
add
and
jg
and
add
and
jle
and
add
and
jle
and
add
and
jle
and
add
and
jle
and
add
and
jle
and
add
and
jle
and
add
and
jle
and
pop
add
add
cs
xchg
jge
aas
pop
add
aas
cmpl
aas
mov
jge,pt
sub
push
jge
loopne,pt
daa
aas
jne
in
xor
aas
jns
in
dec
add
cmc
jge
sbb
aas
std
jge
ds
add
aas
leave
jge
ds
sub
mov
in
push
sub
cltd
jge
aas
lea
pop
aas
movsl
jge
aas
inc
add
aas
fnstsw
add
fs
jo
sub
aad
fs
les
sub
int
fs
add
daa
cmp
lds
decl
cmp
add
pushl
cmp
incl
jmp
daa
add
sub
add
sub
add
cmp
cmp
dec
cmp
aaa
add
call
sub
add
ljmp
add
sub
add
stos
pushl
aaa
add
sub
add
daa
aaa
add
daa
aaa
add
push
cmp
add
inc
or
les
add
aas
add
les
add
push
add
aas
add
inc
or
test
aas
add
lds
add
cmp
movsl
lds
add
push
add
inc
add
jge
aas
add
add
test
aas
add
inc
add
lds
add
les
add
inc
pop
add
inc
add
add
add
loop
inc
and
add
fidivrl
and
add
sarb
and
add
ljmp
and
xchg
add
and
add
and
xchg
xchg
add
and
xchg
flds
sub
mov
inc
and
add
and
xchg
pop
add
and
xchg
flds
or
sahf
xchg
or
and
xchg
scas
add
and
xchg
mov
pop
and
xchg
mov
xchg
aas
data16
aas
imul
fs
ss
add
sub
test
push
aas
xchg
xchg
add
aas
xor
adc
test
cs
adc
sbb
roll
adc
jmp
add
aas
addl
in
cmp
sbb
popf
test
ds
add
mov
add
aas
addl
add
add
push
and
add
ljmp
test
add
daa
xor
xchg
test
xor
test
and
add
stos
fldenv
das
add
test
xor
icebp
test
add
daa
sub
mov
and
add
daa
sub
dec
cmpsl
ljmp
add
and
push
cmpsl
mov
cmpsb
pushl
cmpsb
lcall
ds
add
mov
adc
cmc
mov
adc
jmp
cmp
inc
add
or
leave
mov
or
mov
inc
add
mov
or
sarl
or
lods
mov
adc
add
add
mov
sbb
fnstsw
and
xor
and
add
cmp
inc
add
cmp
add
mov
add
and
addl
add
and
addl
add
and
addl
add
and
add
adc
add
sub
or
add
jb
or
add
add
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
add
and
aas
and
mov
jmp
filds
das
aas
cmc
pop
aas
ret
aas
in
decb
repz
aas
sub
add
add
sbb
add
add
aas
xor
add
aas
gs
aas
xor
add
aas
jne
jmp
sub
cs
popa
std
pop
aas
inc
add
aas
cmp
add
aas
cmp
cmp
jmp
add
sub
flds
mov
shl
daa
into
sub
lcall
insl
std
push
leave
inc
shlb
cmp
jno
add
add
shll
inc
mov
les
outsb
aad
insl
and
or
insl
mov
test
and
daa
aas
add
aaa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
mov
inc
add
lea
lea
add
add
jge
add
lea
add
inc
add
jge
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
jge
add
lea
add
add
jge
add
dec
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
or
add
std
cmp
add
or
add
std
cmp
add
int
add
int
add
mov
cmp
add
int
add
cmp
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
int
add
mov
inc
add
lea
add
add
jge
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
or
add
std
add
int
add
int
add
mov
add
int
add
int
add
mov
add
mov
add
lea
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
or
add
std
cmp
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
cmp
cmp
add
inc
add
std
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
inc
add
int
add
mov
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
jge
add
dec
aas
add
dec
aas
add
cmp
aas
add
dec
aas
add
dec
aas
add
cmp
aas
add
or
aas
add
std
add
std
add
or
aas
add
std
add
std
add
int
add
add
mov
add
int
add
int
add
mov
add
lea
add
lea
add
jge
add
jge
add
lea
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
lea
add
lea
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
cmp
add
add
cmp
cmp
add
add
dec
cmp
add
cmp
add
inc
add
std
inc
add
std
inc
add
or
inc
add
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
aas
add
int
add
int
add
mov
aas
add
lea
add
lea
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
aas
add
dec
aas
add
cmp
aas
add
dec
aas
add
dec
aas
add
cmp
aas
add
or
aas
add
std
add
add
add
add
or
aas
add
std
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
std
cmp
add
cmp
add
cmp
add
cmp
std
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
cmp
add
add
cmp
cmp
add
add
dec
cmp
add
cmp
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
fidivrs
and
fidivrs
and
fdivrs
and
fdivrs
and
fdivrs
add
add
fnstcw
and
fnstcw
and
fnstcw
and
fdivrs
and
xlat
aas
and
mov
jmp
popa
fisubl
jns
pop
aas
add
push
aas
sub
flds
jge
cmp
movsl
aas
jge
sub
aas
mov
sbb
jmp
add
aas
imul
aas
aas
add
aas
or
and
les
and
push
add
aas
or
add
add
int3
add
stc
add
imul
aas
fadds
and
imul
and
fildl
and
imul
and
add
es
add
daa
aas
add
daa
aas
add
inc
add
testl
inc
es
add
jns
inc
es
add
mov
add
lcall
add
add
cwtl
add
inc
add
clc
add
addl
push
es
pop
es
push
es
add
jl
inc
mov
add
cli
add
sub
add
js
cmp
mov
add
inc
sbb
jno
sbb
rolb
add
inc
adc
int3
inc
inc
add
add
cwtl
inc
push
add
inc
outsb
add
jo
and
add
push
add
add
pop
inc
cmp
imul
gs
or
add
inc
sbb
xor
add
inc
inc
add
inc
push
add
pop
add
add
inc
arpl
and
add
movl
and
add
and
lcall
and
outsl
add
pop
and
jecxz
or
mov
and
pop
add
pop
and
mov
and
imul
and
test
push
and
mov
cmp
jge
and
add
and
aas
lcall
inc
lahf
add
aaa
inc
addb
aas
je
fidivrs
outsb
add
and
cmpsb
add
cmp
add
imul
add
jbe
inc
add
dec
inc
dec
add
sti
aas
push
add
cmovo
add
add
add
sbb
pop
inc
adc
std
aas
syscall
aas
xchg
inc
pop
dec
add
dec
add
dec
xor
dec
xor
pop
adc
push
wrmsr
xchg
das
xchg
inc
fsubrl
nop
cmp
das
xorl
das
subb
das
push
and
xor
xor
and
ds
das
cmp
adc
das
cmp
fsubrl
cmp
loop
popf
add
add
loopne
xchg
das
lahf
shl
das
xchg
lret
jmp
add
iret
das
jae
int
jb
shrl
mov
xlat
das
push
xchg
aad
dec
mov
das
add
mov
xor
sbb
xor
sbb
xor
aas
lret
aas
lret
xor
aas
int
je
into
xor
aas
shlb
fnstcw
aad
add
add
fdivs
lret
stos
fidivs
popf
fbstp
pushf
loopne,pt
loope,pt
mov
loop
and
in
adc
out
adc
call
xor
aas
jmp
pop
aas
in
xor
aas
in
xor
ds
xor
repz
add
xor
add
jge
sbb
push
add
and
and
in
and
in
and
add
sub
jmp
and
jmp
call
jmp
sub
jmp
and
ljmp
sub
ljmp
and
ljmp
sub
ljmp
and
ljmp
sub
pushl
sub
xor
pop
add
sub
and
xor
and
add
and
add
sub
inc
add
or
in
or
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jmp
cmp
jmp
sar
cmp
in
cmp
out
cmp
fistpll
fdivrs
pushl
xchg
ljmp
cltd
jmp
cwtl
pushl
call
dec
push
cmp
push
cmp
push
cmp
ja
mov
jo
xchg
jns
mov
jb
cmp
add
add
nop
pop
cmp
subb
add
lcall
inc
mov
subb
cmp
add
jb
add
push
add
bound
pushf
pop
cmp
push
cmp
dec
cmp
xchg
inc
cmp
add
xor
jb
dec
add
and
fs
add
inc
add
or
test
add
add
fs
icebp
dec
add
jmp
push
add
daa
roll
add
sarl
hlt
adc
add
adc
add
adc
add
adc
add
adc
add
adc
inc
adc
add
adc
movlps
add
adc
cmp
inc
add
dec
inc
add
dec
ss
dec
xor
dec
dec
add
add
xchg
add
dec
dec
add
dec
dec
add
dec
dec
add
dec
inc
add
dec
dec
add
dec
cs
dec
adc
dec
adc
dec
es
dec
adc
push
dec
and
and
or
sub
and
sub
sbb
orl
sbb
sub
sbb
inc
or
sub
or
and
or
sub
or
add
add
sbb
and
or
and
repz
sub
or
and
or
sub
or
decl
sub
add
pop
and
or
sub
or
sub
or
sub
or
daa
test
mov
jnp
stos
daa
aas
mov
mov
orb
orb
ds
or
pop
js
add
add
jnp,pt
leave
ds
or
ds
or
ds
or
inc
or
xor
outsl
xor
xchg
mov
or
ds
or
movsb
or
cmp
mov
lods
cmp
mov
or
cmp
add
add
add
filds
cmp
fiadds
xor
sbb
flds
push
sub
out
inc
sbb
rolb
or
into
add
sbb
leave
add
sub
xlat
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
sub
add
add
add
add
sub
add
jno
les
jo
lds
arpl
add
movl
inc
inc
leave
add
or
mov
adc
and
adc
and
adc
and
adc
and
adc
and
add
lods
adc
and
adc
adc
and
adc
and
adc
mov
adc
and
sti
cmp
sti
inc
inc
lret
sti
roll
sti
roll
test
sbb
jl
addl
dec
cld
sub
arpl
sub
pop
cld
es
xor
daa
inc
jns
add
cld
xchg
and
xor
nop
add
add
cld
xchg
inc
inc
cld
xchg
inc
pop
std
and
std
lds
inc
std
xchg
add
or
sti
or
add
or
sti
and
out
sti
or
in
sti
pop
dec
add
cmovno
sti
or
xchg
cld
aaa
fs
cld
aas
fs
mov
bound
jmp
jnp
lahf
bound
cwtl
bound
das
fs
cld
pop
fs
cld
mull
cld
add
add
fs
cld
and
pop
mov
and
pop
test
sub
stc
and
stc
sub
stc
sub
inc
stc
sbb
pop
push
stc
ss
inc
stc
push
arpl
stc
or
cli
add
cli
pop
cwtl
cli
xlat
pop
fwait
cli
fcomps
cli
rcrl
cli
jp
add
and
and
push
and
das
and
add
out
push
and
add
ficoms
stos
fisubrs
movsl
into
imul
daa
mov
pop
and
scas
xor
xor
sahf
aam
daa
sahf
clc
and
mov
and
mov
and
jle
and
outsb
sub
sbb
pop
dec
and
pop
push
and
dec
sub
ret
and
cmp
shll
sub
add
addb
and
in
push
stos
and
sahf
push
mov
test
push
add
and
push
mov
movsb
push
mov
es
sbb
es
push
gs
pop
daa
pop
push
pop
and
and
dec
push
adc
sub
push
daa
sbb
outsb
sbb
insb
sbb
inc
es
add
and
or
and
push
and
aaa
and
sbb
and
std
sbb
and
cmp
inc
mov
scas
and
movsb
inc
fsin
sub
decb
inc
in
pop
and
pop
push
xchg
pop
in
mov
add
pop
pop
push
ljmp
push
dec
incl
push
jmp
add
add
clc
push
inc
jbe
iret
and
clc
shrb
cmp
shll
cmp
shrb
inc
clc
shll
cmp
aam
inc
clc
aad
cmp
clc
xlat
and
shl
pop
inc
shl
pop
inc
ret
inc
mov
testl
inc
div
inc
mov
testl
xchg
testl
inc
ja
roll
add
lret
test
inc
arpl
int
mov
and
mov
and
cmp
clc
sub
xchg
and
dec
clc
sub
push
clc
and
inc
clc
sbb
inc
clc
sbb
cmp
das
cmp
inc
dec
cmp
aas
dec
cmp
xchg
cmp
push
cltd
xor
push
cwtl
cmp
push
fwait
xor
push
jp
sub
push
jl
xor
ja
add
adc
pop
sti
xor
popa
repz
push
sti
es
push
repz
push
inc
cmp
fldt
push
das
shrl
push
cmpsb
mov
sub
sub
pop
push
sub
pop
push
sub
bound
daa
xchg
arpl
jnp,pn
push
xor
push
and
push
and
push
add
adc
push
or
sub
or
sub
sub
sub
jp
cs
jge
das
push
insb
adc
push
outsl
adc
push
mov
adc
push
mov
xor
mov
xor
push
in
aaa
push
mov
cmp
mov
cmp
mov
cmp
push
popf
adc
push
pushf
adc
outsl
adc
outsb
adc
popa
adc
pusha
adc
adc
loop
inc
push
in
inc
push
in
dec
push
pop
adc
add
add
adc
and
testb
cmc
dec
xor
cmc
dec
sub
cmc
push
and
push
xor
clc
push
sub
clc
push
and
clc
push
sbb
clc
push
xor
clc
push
sub
clc
pop
and
cmc
xor
xor
xor
xor
adc
outsb
divb
adc
jl
cmp
lods
cmc
cmp
mov
add
ret
cmc
xchg
cmp
push
xchg
aas
push
xchg
inc
push
test
inc
xor
dec
push
mul
dec
pop
mul
dec
push
imul
dec
ds
dec
inc
imul
dec
xor
fmull
imul
dec
mov
cmc
fisttps
cmc
fmuls
cmc
jno
xchg
push
test
cmc
je
stos
cmc
push
push
stos
cmc
push
push
movsl
cmc
push
push
lods
cmc
add
add
cmpsl
cmc
jns
scas
cmc
jb
mov
jnp
mov
cmc
pop
push
xor
pop
push
sub
cmc
dec
push
pop
cmc
add
cmc
cli
dec
sbb
repz
add
xchg
lahf
xor
jns
xor
jno
xor
jno
adc
pop
fcoms
push
push
fsts
and
adc
push
rcll
adc
aam
ret
adc
xor
adc
add
add
rclb
cmpsb
adc
adc
sbb
adc
adc
adc
cli
lret
adc
cli
int
mov
adc
ror
adc
rol
adc
mov
adc
lds
inc
mov
adc
lcall
xor
jo
dec
or
jle
push
or
xorl
or
mov
add
add
lea
and
or
adc
or
adc
test
test
push
push
add
emms
add
pusha
mov
and
mov
and
movsl
and
cmpsb
and
cmpsl
and
test
fs
test
and
pusha
lods
and
inc
add
add
and
inc
and
add
and
inc
add
add
and
inc
add
add
and
inc
add
add
and
inc
add
add
and
inc
add
add
and
inc
add
add
add
add
add
add
add
inc
add
add
and
inc
add
add
and
inc
add
add
add
add
add
and
leave
inc
and
adc
aas
enter
std
add
lret
inc
and
adc
aas
lret
aas
cld
add
aas
xchg
inc
and
into
add
addb
ljmp
aas
leave
add
pusha
inc
and
loopne
and
je
and
in
add
aas
js
and
pop
add
aas
pop
inc
and
cmp
aas
pop
inc
add
add
cmp
aas
jge
and
sbb
aas
jl
and
lds
and
pop
inc
and
les
and
add
aas
add
daa
aas
add
and
add
add
and
add
add
and
add
add
and
add
daa
aas
add
add
daa
aas
add
ds
daa
aas
add
add
add
add
aas
add
and
add
and
add
and
add
aas
add
aas
add
and
add
aas
add
es
add
or
cmp
add
jg
add
add
jg
add
cmp
add
outsb
cmp
add
popa
cmp
add
pusha
cmp
add
jg
add
addb
mov
jg
add
jg
add
add
int
add
mov
cmp
add
cmp
add
jg
add
cmp
add
cmp
add
add
and
aas
add
add
and
aas
add
add
and
inc
and
add
and
inc
add
add
and
inc
add
add
and
inc
add
inc
add
add
and
inc
add
add
and
inc
add
add
and
inc
add
add
and
add
add
and
add
add
and
add
add
and
add
mov
add
add
and
mov
add
aas
popf
aas
and
addr16
aas
pushf
aas
and
data16
aas
dec
aas
and
mov
aas
dec
aas
and
mov
aas
dec
aas
and
mov
aas
dec
aas
and
mov
and
inc
add
aas
add
and
inc
add
and
mov
aas
and
lea
and
dec
aas
and
cmp
and
xchg
add
add
and
outsl
dec
fs
test
and
xchg
dec
fs
add
aas
add
jg
test
aas
add
daa
aas
add
jbe
add
aas
add
push
jg
test
push
jg
sub
aas
add
idivb
sub
idivb
sub
aas
add
jle
das
daa
aas
add
jle
cs
aas
add
sti
jle
and
aas
add
add
add
jle
xor
aas
add
fstpt
and
aas
add
fstpt
mov
aas
add
jl
add
insb
jg
add
inc
add
mov
inc
add
jmp
inc
add
into
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
sub
add
inc
sub
add
inc
add
adc
inc
add
sub
inc
add
mov
inc
add
add
test
add
test
inc
add
jb
inc
add
add
and
push
inc
and
add
and
push
inc
and
add
and
push
inc
and
add
and
push
inc
and
add
and
push
inc
and
add
add
and
add
and
add
and
mov
inc
sbb
lcall
out
add
lods
insl
or
movsb
sub
jae
das
push
cmpsl
lret
ds
jo
push
pop
fisttpl
lea
jno
call
scas
stos
push
mov
test
or
loope
and
bound
jne
inc
cmp
pop
cmc
xchg
insb
jp
add
push
ds
scas
jo
in
push
inc
rcrl
push
aam
aas
jmp
shrl
lret
and
jmp
add
pop
push
sbb
mov
scas
cmp
ja
and
jmp
mov
mov
mov
cli
fstps
leave
inc
mov
fsqrt
incl
add
add
enter
mul
jle
adc
jb
idivb
stos
daa
aas
add
jmp
sbb
vmovhps
je
fs
mov
call
outsb
enter
or
inc
fstpl
aas
cmp
and
add
jmp
push
idiv
mov
aam
lea
lcall
jb
inc
push
mov
add
sti
ds
daa
aas
add
sub
mov
mov
call
test
scas
add
mov
ret
or
add
add
incl
int3
jmp
mov
cli
add
or
push
add
cmp
lea
adc
pop
hlt
mov
xchg
jo
clc
cmp
add
int3
jmp
add
add
lret
lret
stc
std
push
cli
test
jmp
fsts
mov
xor
call
cmp
adc
and
inc
add
mov
cmpsl
push
int3
mov
imull
mov
and
add
and
fsubrl
jl
fdivl
insb
pop
fdivl
insb
push
fdivl
pop
cli
fidivl
pop
repnz
dec
cli
fidivl
dec
repnz
jl
add
add
xor
xor
xor
das
push
enter
fidivl
dec
mov
xor
pop
fdivl
cld
push
fdivl
in
pop
fdivl
in
push
fdivl
fdiv
enter
mov
aad
sahf
sti
and
mov
sti
ds
and
pop
addr16
jmp
pop
stc
jno
das
les
mov
out
add
sbb
dec
xchg
sbb
add
add
sbb
fdivl
xchg
std
xchg
cmc
xchg
std
xchg
cmc
fistl
xchg
fstp
pop
xchg
aad
pop
xchg
fstp
pop
xchg
aad
notl
mov
notl
mov
push
xchg
sbb
fcoml
sbb
fdivl
xchg
std
fstpt
xchg
mov
repz
lods
mov
adc
add
daa
jae
bound
inc
cmc
scas
jnp
pushf
orl
daa
aas
add
clc
es
sbb
xor
call
xor
fbstp
pop
cmc
iret
xor
iret
xor
pushl
pop
xor
out
xor
loope
dec
fldl2t
es
mov
iret
xor
iret
xor
jg
pop
sbb
jo
pop
sbb
add
add
pop
add
lcall
sub
add
dec
ret
mov
call
mov
mov
mov
xor
pop
cmp
stc
decl
adc
pop
sub
adc
pop
sbb
xor
sbb
pop
stc
sbb
pop
jmp
sbb
pop
stc
sbb
pop
stc
sbb
pop
jmp
sbb
pop
add
add
xor
sbb
pop
imul
xor
std
cs
sub
push
fdivl
fmull
xor
repz
jae
xchg
aad
int3
push
scas
xchg
sbb
mov
call
in
imul
cmp
cmp
sub
sti
pop
sub
and
fsubrl
insb
push
fsubrl
insb
push
fsubrl
pop
push
fsubrl
pop
neg
das
add
add
das
dec
neg
das
jl
fisubrl
jl
fldt
insb
push
fldt
insb
push
fldt
pop
push
fldt
pop
mov
das
dec
mov
das
pop
mov
das
repnz
das
cld
ds
inc
xchg
sbb
cmp
sbb
dec
xchg
stc
xchg
mov
lcall
inc
je
mov
jmp
inc
lods
xchg
or
xor
jp
mov
add
mov
aaa
popl
and
sbb
inc
xchg
sbb
cmp
sbb
dec
xchg
stc
lret
inc
xchg
stc
lret
cmp
stc
lret
or
fxch
sti
xchg
fxch
adc
mov
sar
add
outsl
and
pusha
and
pop
and
jo
pop
sbb
pop
stc
pop
repz
xchg
ljmp
idiv
xchg
push
lea
lea
ds
ret
movsb
push
add
jb
inc
push
stos
add
outsl
pushf
aas
add
daa
aas
add
loopne
pop
sbb
and
lock
call
and
fbld
pop
stc
out
and
out
and
in
dec
fxam
and
out
and
out
and
insl
add
dec
insl
add
dec
fldl
das
pop
add
add
push
das
pop
sub
add
pop
sbb
std
cs
insl
push
call
sbb
and
inc
cmp
add
dec
or
mov
add
add
stc
incl
add
pop
sub
add
pop
sbb
add
das
pop
fldl
cs
add
add
ljmp
dec
in
add
lret
das
pop
sbb
das
dec
mov
lret
mov
das
cld
mov
das
in
push
int3
das
in
push
int3
das
fcoml
das
ljmp
ljmp
jnp
cmc
cmpsl
sti
and
fcoms
push
sbb
and
add
loope
aam
xchg
aaa
add
and
loopne
out
cmp
xor
add
add
jecxz
add
push
push
jge
cmpsl
add
add
fwait
jns
and
cmp
mov
mov
mull
sub
jp
aas
sbb
mov
lea
xlat
icebp
xchg
and
mov
fldcw
ret
jae
fwait
jl
mov
hlt
jle
call
lret
sti
xchg
fxch
add
add
xchg
notl
mov
lret
push
xchg
mov
add
cmp
clc
mov
in
add
aas
mov
and
sbb
clc
mov
add
sarl
push
aas
add
dec
out
out
daa
aas
add
dec
add
addr16
add
outsl
sub
outsl
sub
pop
pop
dec
sbb
pop
dec
sbb
sub
add
add
pop
jmp
out
loop
dec
mov
cmp
and
add
mov
add
dec
mov
inc
xor
lcall
add
fistl
int3
ljmp
incb
or
push
ds
mov
into
jns
add
push
push
dec
xchg
cli
add
adc
add
imul
subl
add
movsl
ljmp
sti
xor
sti
xor
sti
xor
cli
xor
cli
xor
cli
xor
inc
add
mov
push
into
xchg
cli
add
mov
movb
popf
inc
jb
flds
add
inc
add
cmp
mov
push
add
add
cltd
fs
fadds
add
rcrb
sub
jb
fadds
add
rcrb
cmp
pop
push
ljmp
and
add
and
add
adc
gs
add
and
add
add
and
test
lcall
movsl
mov
jno
xlat
add
and
movsl
jae
mov
je
xlat
add
and
movsl
jae
add
lcall
add
lcall
jae
mov
aas
dec
mov
jp
dec
add
aas
dec
mov
shr
xor
push
jae
add
and
popf
cmp
push
mov
adc
sub
and
cld
ds
cmc
movsb
mov
add
ds
add
xlat
ds
mov
ds
fwait
sarb
mov
mov
movsb
pushf
sarl
mov
jl,pt
mov
roll
aas
add
daa
aas
add
pop
addr16
fildll
dec
jmp
inc
lea
dec
lcall
inc
and
add
pop
addr16
out
push
jo
xchg
adc
imul
les
into
iret
pop
insb
jmp
add
add
aas
add
les
push
mov
aas
add
les
decb
pusha
jb
xchg
outsl
add
xchg
push
popa
nop
popf
jmp
scas
sahf
outsl
and
daa
aas
add
rol
jo
mov
bound
add
mov
mov
jb
dec
stos
incl
fwait
ds
lcall
xchg
mov
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
and
repz
fbstp
pusha
scas
push
and
out
add
xor
jae
inc
popa
int3
add
and
into
push
add
add
sub
and
rclb
jmp
add
and
cltd
jb
fadds
add
lcall
dec
pushf
ljmp
xlat
cs
lahf
gs
popf
jno
adc
cwtl
jae
mov
outsl
or
add
and
lods
jae
adc
push
and
loop
int3
mov
add
add
outsb
jmp
add
mov
ja
into
repnz
cs
ficoms
xor
inc
mov
pop
sub
xor
add
or
fs
dec
lahf
push
jae
aad
pop
push
lahf
ss
add
xor
add
pop
sbb
fwait
cmp
xor
add
push
int3
push
pop
mov
in
cmp
pop
add
scas
arpl
mov
pop
sub
test
ss
adc
and
or
imul
and
jae
fnsave
gs
xchg
sbb
bound
or
insb
and
repz
aas
add
add
add
mov
cwtl
sbb
leave
test
cmp
sbb
insl
jbe
mov
and
les
or
dec
and
push
in
outsl
arpl
arpl
lret
aaa
xchg
lods
arpl
pushf
lods
xor
incl
scas
push
add
cmpsb
cmp
call
add
inc
and
or
add
add
inc
add
insb
mov
xor
mov
xor
inc
add
sub
xor
lds
xor
das
sub
cwtl
ljmp
insl
bound
jnp
push
push
inc
add
and
xchg
lds
mov
and
int3
fbstp
cmp
and
add
sti
add
and
add
sti
add
add
add
add
sti
add
and
add
fadds
add
iret
dec
pusha
fadds
add
lahf
ja
fadds
add
mov
sarl
mov
or
loop
aaa
cmp
mov
fadds
add
mov
and
xchg
arpl
add
and
add
and
add
and
add
and
or
aas
fiaddl
sbb
jecxz
in
ds
add
add
fdivrs
add
aas
or
mov
jmp
mov
notb
repz
cmp
add
fwait
mov
and
movl
je
jmp
add
aas
cmp
aas
daa
add
aas
or
aas
or
aas
inc
mov
outsl
repz
insb
push
lods
add
inc
push
or
push
push
cld
aam
pop
or
add
pop
aas
add
daa
aas
add
mov
jo
jge
das
jmp
xchg
pop
jb
pop
xlat
and
test
popa
gs
xchg
pop
jne
nop
pop
add
rcll
inc
jg
push
fs
mov
push
notb
add
mov
push
arpl
push
outsb
inc
and
add
push
push
jge
add
add
add
outsb
inc
subl
jbe
decb
je
jae
sub
add
mov
js
and
inc
outsl
sbb
insl
outsb
lea
add
js
add
ja
add
fs
arpl
xchg
jb
cmp
idiv
incl
addr16
xchg
bound
mov
add
aad
inc
jb
scas
arpl
stos
mov
loopne
or
std
add
clc
xor
or
add
push
and
push
push
push
sub
leave
jne
mov
cwtl
push
and
add
and
movsl
bound
ss
push
movsl
outsb
adc
add
and
add
and
add
and
dec
clc
sahf
and
cmp
dec
clc
test
add
and
rcll
xlat
add
add
add
push
and
mov
mov
xchg
or
fadds
add
cmpsl
mov
jno
clc
out
and
add
and
movsl
bound
cwtl
cmp
xchg
or
fadds
add
movsl
bound
cwtl
sub
ja
cmp
or
push
xor
add
sub
cmp
adc
mov
and
repz
add
and
mov
add
ds
add
ds
and
lcall
mov
mov
mov
mov
jmp
add
aas
test
mov
jmp
add
aas
inc
add
aas
jmp
add
aas
cmp
push
aas
push
add
aas
add
and
add
sub
pop
and
add
add
sub
jmp
sub
and
add
pop
add
daa
mov
add
pop
add
daa
insl
add
daa
imul
daa
jl
les
push
add
daa
aas
add
daa
aas
add
daa
pop
add
daa
pop
add
daa
jl
xchg
daa
push
add
aas
add
daa
aas
add
and
dec
sub
inc
add
add
imul
sub
mov
cmp
stc
cmp
pop
cmp
cmp
xor
add
lea
add
dec
cmp
xor
popa
add
cmp
cmp
jge
push
add
popa
add
add
add
cmp
cmp
jo
popa
add
je
push
cmp
test
arpl
mov
add
movsb
inc
je
movsb
inc
add
or
inc
outsl
add
je
push
inc
outsb
add
inc
push
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
cld
add
call
add
stc
add
add
and
add
cltd
add
popl
add
add
mov
add
mov
add
call
add
movl
and
jmp
add
aas
inc
add
aas
inc
add
aas
cmp
aaa
aas
jmp
add
aas
xor
add
aas
sbb
aas
sub
add
ds
add
add
adc
stc
add
jmp
add
ds
add
lods
add
movl
mov
aas
jmp
add
cmpsb
add
mov
add
aas
test
and
jmp
add
add
daa
bound
dec
sub
pop
and
pop
sub
jmp
sub
and
add
and
jmp
and
sbb
push
add
and
adc
aas
add
daa
aas
add
jo
and
jae
jmp
daa
push
add
daa
push
add
daa
push
add
daa
push
add
daa
aas
add
push
add
daa
push
add
daa
aas
add
daa
dec
add
inc
imul
add
add
aas
add
mov
imul
push
jae
push
data16
add
clc
inc
popa
add
ja
pop
inc
jb
pusha
inc
add
lea
add
dec
inc
imul
mov
jae
sbb
add
add
push
inc
add
inc
jne
jg
imul
cmp
sahf
jb
jg
popa
inc
popa
mov
incl
add
mov
pusha
jb
mov
inc
and
add
and
mov
lret
mov
jno
sahf
jmp
mov
mov
fs
sbb
jb
adc
js
andb
or
dec
cmpsl
fs
xor
nop
imul
lahf
jno
das
xchg
fs
mov
add
add
sahf
jno
or
dec
mov
popl
or
pusha
ret
fs
xchg
fs
aas
xchg
cmpsb
sbb
jmp
lret
decl
fidivrl
add
xchg
add
fwait
add
lea
jno
push
add
aas
pop
add
aas
pop
add
aas
inc
add
aas
jmp
add
aas
dec
add
aas
jmp
mov
add
cli
addl
loope
sbb
pop
fs
nop
or
add
aas
sbb
call
ds
loopne
fldt
push
int
lods
arpl
mov
int3
pop
imul
pop
add
daa
aas
add
push
gs
pusha
gs
fdivr
cmpsb
daa
imul
and
dec
add
add
imul
and
add
sub
add
and
add
daa
pop
add
and
add
daa
pop
add
aas
add
jbe
jmp
daa
push
add
and
jmp
and
sti
daa
push
add
daa
aas
add
daa
bound
add
outsl
add
add
test
add
cmp
mov
cmp
add
fnstsw
inc
add
cmp
outsl
cmp
add
add
mov
jno
insb
lods
jb
push
add
ss
add
add
push
gs
mov
jmp
fs
sahf
push
gs
mov
incl
addr16
sahf
popa
outsl
outsl
mov
xor
cmp
add
jne
je
push
gs
cmpsb
jno
add
enter
cmp
mov
dec
fsubrs
dec
inc
mov
add
sti
or
shl
sbb
and
int
cmp
insb
inc
pop
jecxz
jecxz
lea
mov
jae
mov
jno
xchg
pop
jns
xchg
pop
push
xchg
pushf
js
orl
adc
cltd
stos
sbb
ljmp
daa
add
add
fdivl
dec
cmp
or
add
add
aas
or
sbb
and
sti
and
add
aas
pusha
mov
xchg
test
addr16
mov
addl
aas
lods
pop
ja
lods
xor
scas
pop
je
add
out
out
adc
aas
fldln2
pop
call
sbb
pop
fildll
dec
push
sahf
add
add
aas
cmpsb
sub
out
sbb
mov
xchg
sbb
call
ljmp
fdivrs
and
imul
jle
imul
jp
fists
push
pop
stos
pop
imul
mov
mov
orb
aas
add
adc
inc
jnp
clc
inc
pop
in
add
jb
add
add
aas
add
popf
dec
or
xchg
inc
add
cmpl
or
xchg
xchg
mov
inc
xchg
lods
mov
movsl
mov
daa
aas
add
les
stos
mov
outsb
scas
mov
add
popa
aad
clc
push
add
movsl
inc
dec
xor
dec
add
push
mov
iret
dec
addb
pop
mov
lcall
jo
mov
or
inc
sbb
inc
adc
push
rorl
add
loope
add
into
add
jb
jb
jns
pop
mov
xor
shrl
test
sub
add
lret
push
push
mov
or
and
movb
repnz
and
mov
add
xchg
xchg
jno
add
pop
in
add
addb
pop
dec
xchg
mov
ja
sahf
xchg
push
outsl
xchg
mov
gs
scas
xchg
and
xchg
js
mov
xor
mov
mov
push
push
movsl
outsb
push
pop
mov
sbb
xchg
jae
fists
ja
xlat
mov
orb
add
fs
jmp
mov
xor
rolb
sbb
enter
and
fxtract
cmp
mov
add
adc
add
dec
stc
and
aad
rorb
pop
lds
jge
and
stos
leave
insb
jbe
mov
push
aas
push
and
int3
or
fildl
and
ds
and
out
or
add
sbb
cmp
push
es
inc
dec
sbb
mov
jns
mov
fwait
stos
orb
mov
ljmp
cmp
aas
add
nop
addl
nop
outsl
push
mov
gs
add
adc
stc
pop
ds
or
push
or
cld
and
loop
add
out
and
xlat
fldl
loope
sub
aad
cmp
int
pushl
rolb
cmc
loopne
add
cld
rcrb
in
call
add
add
cmp
dec
inc
aaa
sti
pop
inc
push
mov
xor
push
pop
aaa
stc
push
add
sub
call
out
mov
cmp
add
add
mov
outsb
xchg
pop
push
mov
inc
inc
mov
xor
jmp
inc
call
hlt
adc
push
cld
add
lret
add
in
or
ret
push
jmp
or
mov
addb
je
sahf
mov
lds
lret
jb
mov
mov
push
add
icebp
add
add
add
add
xor
add
cmp
add
and
sub
insb
jae
lret
xor
popa
and
mov
push
je
stos
push
fs
push
outsb
movsl
lods
dec
and
xlat
pop
cmp
jecxz
dec
cld
in
xor
fildll
sub
add
and
scas
inc
jp
mov
push
gs
jmp
es
cmpsb
cmpxchg
fimull
add
add
in
mov
push
in
call
push
pop
aam
and
loopne
xor
test
imul
xchg
inc
dec
add
sub
add
pop
daa
outsl
in
es
dec
or
cmp
or
cmp
pop
pop
int3
sub
out
adc
pop
fisttpl
add
push
push
mov
xchg
inc
dec
add
add
xchg
decl
pushf
scas
inc
imul
lret
std
loope
adc
aas
add
dec
jecxz
cwtl
pop
aas
add
ljmp
aaa
out
movsl
and
add
mov
fnstsw
mov
add
jb
or
inc
add
movl
add
cmpsl
xchg
aas
add
scas
mov
jmp
xor
int
cmp
add
inc
add
loope
adc
loop
aaa
sub
cld
sub
adc
sbb
lcall
ret
test
rorl
cwtl
mov
mov
into
sbb
add
insl
mov
add
xor
repnz
sub
lock
add
sub
in
cmp
stos
pop
jae
add
cmp
fcoms
adc
inc
add
cmp
adc
xor
in
dec
ss
cs
cld
and
adc
add
pop
mov
sbb
clc
int3
xor
iret
jmp
or
loope
inc
aad
add
pusha
mov
mov
pop
stos
loopne
dec
cmpsb
ficoms
add
cmp
add
add
inc
aad
mov
out
lods
or
outsb
mov
lock
adc
inc
jle
mov
xchg
sbb
ds
cmp
popa
mov
shlb
fldcw
adc
arpl
rorl
les
ret
movsl
mov
add
adc
add
jg
mov
call
dec
mov
mov
sub
in
jmp
add
add
xor
add
fwait
push
rcr
add
loop
pop
sbb
in
cmp
rcrl
and
sbbl
call
out
add
xchg
or
fucomip
add
es
jecxz
push
mov
aad
mulb
mov
fmull
stos
pop
aam
and
sub
rclb
add
fisttps
xor
sub
add
add
test
mov
aas
ss
add
in
adc
shr
sti
push
mov
jns
aas
add
xchg
push
imul
ja
cmc
daa
aas
add
push
push
and
scas
stos
push
iret
add
stos
inc
jae
daa
aas
add
mov
cltd
jnp
add
add
adc
sti
dec
or
aas
add
push
push
push
and
fildl
repnz
inc
stc
mov
cmp
loope
cmp
rorb
and
icebp
sub
cmpsl
mov
or
leave
add
rcl
incl
add
jns
jbe
push
add
push
rcl
cmp
add
jge
ret
add
cmovns
xchg
jge
add
xor
ljmp
dec
pop
xor
lcall
sbb
outsb
jbe
add
jp
cmc
mov
gs
adc
call
loope
and
ljmp
fdivrp
sub
xor
icebp
int
adc
mov
push
add
and
out
sbb
add
and
ret
aad
add
mov
fcom
add
and
push
jmp
and
push
lods
mov
pop
ja
test
fwait
cmp
and
pop
stc
push
mov
repz
das
in
sti
sub
rcr
adc
dec
sbb
cmc
rolb
cli
dec
aas
xor
and
fcompl
aas
leave
out
inc
add
sub
out
adc
jmp
aas
loope
and
jge
cmp
int
enter
and
mov
add
push
repnz
out
pop
jmp
add
jmp
repz
ss
mov
inc
pop
sti
scas
cmp
aas
add
int
test
daa
aas
add
push
push
xor
cld
push
and
add
das
push
add
add
adc
mov
lahf
push
push
stos
dec
ja
jmp
xor
jmp
rol
push
scas
mov
mov
imul
xchg
mov
mov
jp
mov
mov
loop
mov
daa
aas
add
popa
sbb
les
xor
pop
hlt
lahf
mov
stc
pusha
lods
movsb
add
add
pop
xchg
addl
add
mov
jp
hlt
test
add
aad
sbb
loope
call
sti
loope
xor
jno
lock
xor
loope
jl
add
out
sub
loope
sub
jmp
call
cmp
and
sub
fwait
cmc
sbb
sbb
sub
add
add
dec
lea
add
leave
fistpll
add
and
inc
fistpll
add
xlat
decl
sbbl
pop
adcl
jb
loope
insl
add
and
es
notl
xlat
testl
aaa
mov
mov
inc
out
add
adc
mov
scas
loop
xor
adc
add
loopne
add
add
xchg
jae
push
or
and
push
add
aad
mov
xchg
xorl
fstl
scas
into
lret
stos
jl,pt
mov
insb
xchg
push
jge
lods
stos
mov
push
ret
push
imul
out
and
mov
add
test
add
cld
or
and
jne
pop
leave
xor
fucom
sub
add
and
add
add
cld
xor
xlat
jmp
add
jne
aad
rcr
aas
lcall
cmp
adc
jmp
loopne
enter
lret
arpl
jmp
jl
fs
cmp
aas
add
sbb
push
sub
pop
std
xor
and
push
insb
add
xor
sbb
sbb
push
clc
je
incl
add
std
or
sbb
add
ds
aas
add
cmp
cmp
cmp
xor
aaa
push
ja
sub
mov
adc
lds
data16
jbe
add
lahf
cmpsb
dec
jnp
xchg
pop
nop
sahf
mov
jle
sar
adc
push
pop
inc
push
sbb
jge
add
xlat
jnp
push
dec
jp
popa
adc
pop
cmp
or
ja
pop
gs
sbb
jle
insl
jg
xor
add
or
std
lods
shr
mov
or
and
std
cmp
add
xor
push
or
xchg
stos
pop
decl
scas
mov
cmp
mov
jbe
cmpsb
mov
mov
lods
idiv
in
sbbb
pushf
lcall
add
add
and
movsl
cmpsl
iret
mov
mov
rorb
addr16
cmc
mov
ljmp
or
mov
cmp
sti
xor
not
add
and
adc
das
fsts
or
pop
push
sub
sbb
and
rcl
out
pop
rol
cmpsb
jge
fmulp
or
xlat
scas
cmp
sar
push
fcmovbe
add
add
push
sar
lret
xchg
jnp
cmp
jnp
cmp
push
jb
pop
push
jb
aas
fs
pushf
mov
mov
gs
int
jae
rorl
sahf
jg
mov
cltd
arpl
xchg
incb
test
ds
gs
xchg
mov
and
stc
ret
inc
leave
add
add
fwait
ss
sahf
call
jg
das
mov
push
jl
scas
pop
insb
sbb
mov
cmp
dec
push
push
add
cmp
add
js
fnstsw
jnp
mov
shrb
shr
aas
add
iret
inc
sbb
daa
aas
add
adc
into
adc
fildl
jp
mov
add
add
fstpl
dec
xchg
mov
lea
aad
push
adc
jmp
shl
out
or
in
aas
in
cmpsl
in
or
idiv
sbb
mov
filds
mov
and
mov
push
loope
add
xchg
fcmovb
adc
pop
jle
lods
mov
mov
mov
add
add
mov
rorb
adc
push
cmp
push
inc
push
inc
or
inc
adc
push
sbb
pop
adc
adc
shlb
outsl
repnz
sub
ds
and
lret
and
mov
cmp
jnp
pop
dec
add
and
add
stos
push
movaps
sbb
add
add
mov
pop
push
iret
sbb
cmp
sbb
ss
ds
das
sub
xor
cmp
jb
sub
add
repnz
in
ret
sti
arpl
leave
pop
and
ret
push
push
mov
pop
lret
or
cmc
adc
sti
cmc
les
ljmp
add
cld
stc
addr16
add
add
push
mov
je,pt
stos
cmc
outsb
lea
and
xchg
mov
dec
cwtl
xlat
dec
sarl
mov
int
xchg
test
shl
mov
xchg
repz
mov
cli
sub
lock
push
add
pop
ficomps
pop
pop
fisttpll
sbb
adc
adc
dec
loop
pop
pop
add
add
ret
jb
and
insb
fwait
sbb
mov
ret
js
sub
arpl
dec
jo
add
pop
xor
pop
lea
add
sub
jmp
js
stos
dec
jle
mov
jmp
pop
outsb
jb
sub
add
and
inc
or
jl
or
push
daa
aas
add
out
and
add
add
push
jb
fnstcw
inc
aas
enter
ret
cmc
sub
dec
das
sub
add
int
inc
push
sub
add
mov
mov
and
jnp
add
or
ljmp
addr16
imul
sub
add
fidivrs
stos
mov
pushf
xchg
mov
call
and
loop
adc
push
jae
add
push
push
xor
pop
adc
pop
sub
push
orb
mov
add
mov
iret
xchg
lahf
out
xchg
movsb
loop
lock
lock
jno
fwait
add
in
and
add
and
ror
shll
add
and
fcmovbe
jmp
rol
testb
in
push
add
push
int
in
popa
fdivp
mov
mov
ret
lcall
rcrb
mov
mov
mov
in
jle
cmpsb
stos
cmpsb
add
and
fcmovbe
jnp
repz
int
jno
add
and
pop
outsl
mov
imul
mov
jbe
aas
in
imul
aam
add
add
aaa
lods
pop
pusha
adc
pushf
inc
pushw
jmp
pop
cld
fs
push
xchg
add
out
add
aas
and
mov
or
test
shl
jle
enter
out
mov
mov
jnp
lahf
rcll
jnp
fwait
iret
jo
ret
stc
je
mov
imul
add
add
mov
les
add
xchg
sbb
insb
jecxz
cmp
or
test
popa
fstpt
aas
movsb
mov
ja
pop
add
dec
add
daa
aas
add
mov
cwtl
jns
aas
add
xlat
fucompp
daa
aas
add
sub
and
into
iret
test
bound
fiadds
add
add
mov
mov
mov
jle
mov
mov
cmpsb
hlt
add
mov
fxch
mov
hlt
rcl
mov
sarb
xor
pushf
push
fbld
repnz
stos
cli
push
xlat
incl
sub
push
sub
cmp
stos
pop
insl
add
add
sbb
jnp
push
data16
mov
cmp
add
cli
lock
xchg
jecxz
out
incl
ja
out
imul
pop
arpl
addr16
inc
add
mov
xchg
cltd
and
xchg
lcall
jle
lea
cltd
jg
cmp
and
orl
cmpsb
add
and
lods
loope
popa
scas
lret
mov
mov
add
add
jbe
fdivl
psllq
jg
sbb
pop
mov
xchg
lods
test
cltd
xchg
mov
jle
hlt
mov
andl
mov
repnz
stc
icebp
in
mov
lea
pushf
jmp
push
xchg
jno
test
mov
clc
and
xchg
into
add
add
mov
int3
lret
push
add
pusha
loopne
xor
cmp
mov
pop
into
in
sub
test
xor
and
fisubs
pop
outsb
xlat
xor
inc
xchg
or
xor
mov
insl
loop
sbb
mov
pop
jo
add
lea
stos
scas
pop
mov
mov
cmc
mov
leave
sti
pop
out
lcall
mov
add
mov
xchg
jle
aas
add
daa
aas
add
out
cltd
out
xor
arpl
hlt
aaa
fwait
shl
ja
mov
lcall
lea
jle
call
mov
jecxz
loope
ja
mov
sub
les
test
popa
addr16
xchg
push
enter
add
mov
push
lret
cltd
aam
add
cwtl
loopne
rcrb
movsl
jmp
fst
stos
test
hlt
stos
sahf
aad
mov
add
push
or
push
cmp
or
inc
mov
add
jne
push
mov
sti
outsb
in
jnp
popf
sbb
xchg
je,pn
mov
cmp
add
add
push
inc
dec
jnp
inc
push
addb
inc
sbb
pop
inc
mov
add
inc
filds
add
lock
and
sarb
rol
in
rcl
fdivs
ret
in
push
mov
out
jecxz
xor
shlb
into
add
and
push
and
pop
sub
repz
and
mov
mov
mov
and
rol
fnstenv
enter
enter
mov
and
pushf
call
cmpsb
add
and
lods
shl
int3
mov
mov
stos
xor
jle
test
call
xchg
xchg
icebp
call
fistl
cwtl
repz
fwait
mov
test
add
mov
pop
enter
jge
mov
add
dec
lock
add
fs
pop
punpckhwd
gs
dec
es
add
filds
push
mov
and
addr16
es
out
call
push
hlt
idiv
lods
clc
adc
aas
add
xor
ss
sub
cmp
arpl
add
add
aas
add
enter
fnsave
insl
stc
daa
aas
add
dec
mov
add
daa
sub
add
sub
add
and
adc
daa
ltr
daa
sbb
fbld
sbb
mov
daa
and
jmp
push
fs
push
aas
add
sub
mov
push
adc
scas
mov
or
inc
std
add
adc
out
pop
dec
jle
or
test
add
add
or
mov
ret
ret
sbb
adc
jnp
mov
pop
test
ret
sbb
adc
jnp
mov
rorb
out
imul
mov
xchg
iret
or
pop
imul
mov
xlat
inc
add
cld
insb
outsl
loope
insb
gs
add
scas
or
into
pop
fs
sub
ja
add
pop
add
xor
and
aaa
add
cmp
and
xor
and
xor
and
xor
and
pop
jbe
insb
push
add
jb
and
jb
and
sbb
and
add
and
sub
stos
jo
add
add
scas
push
and
inc
sub
xor
inc
inc
loopw
inc
imul
dec
outsl
fidivrl
push
ja
push
push
pop
aas
int
add
daa
dec
push
mov
dec
or
pusha
add
xchg
sbbl
jg
hlt
sub
cmp
ds
add
aas
push
add
ds
add
ds
add
add
and
sbb
ds
add
ds
ds
add
aas
cli
add
aas
jmp
add
aas
aam
je
enter
rolb
pop
aas
enter
int3
add
popf
add
add
daa
xor
cmpsl
daa
push
add
daa
sbb
add
daa
push
add
daa
push
add
add
daa
push
add
sbb
add
sub
add
sbb
add
sbb
inc
sub
call
and
add
daa
outsl
add
daa
daa
add
daa
outsl
add
and
daa
aas
add
jbe
jne
jns
dec
movl
or
loop
gs
add
cmpl
test
ds
add
insl
cmp
jge
add
cmpsb
ds
cmp
insb
add
inc
xor
and
add
inc
insb
add
add
adc
push
outsl
or
push
incl
add
pop
ds
add
cmp
and
fnstsw
add
fdivs
gs
add
call
jl
insb
and
je
inc
in
pop
inc
inc
repnz
jb
adcb
hlt
inc
insb
dec
mov
add
pop
jae
pop
jns
sub
push
rcrl
or
imul
or
inc
ss
jae
mov
pop
js
fs
push
inc
jne
add
pop
je
aaa
pusha
add
add
and
add
add
add
pop
arpl
testl
cmpb
and
and
inc
aas
fisubl
and
push
add
aas
or
aas
or
push
aas
or
aas
stos
add
mov
add
mov
and
movsb
pop
push
push
jge
add
pop
shll
jns
clc
adc
or
xlat
cmc
and
pop
sbb
add
add
inc
pop
rclb
jne
stc
adc
adc
sub
or
xor
sbb
pop
pop
or
sub
negl
sbb
push
pop
pop
fs
push
aas
add
dec
adc
pop
les
push
mov
daa
aas
add
daa
gs
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
add
daa
cli
jmp
stc
cmp
stc
pushl
sub
and
sub
add
and
add
sub
add
and
add
sub
add
and
add
and
add
xor
jbe
xor
insb
add
cmp
and
add
scas
inc
cmp
adc
inc
cmp
mov
lcall
add
inc
dec
add
inc
cmp
movb
leave
inc
push
add
add
add
lret
add
inc
popa
add
cmp
add
sbb
jmp
je
loope
insb
add
add
mov
je
cmp
add
add
and
inc
imul
push
inc
dec
bound
bound
add
jge
popa
je
push
inc
dec
pusha
cmp
jbe
imul
jp
fs
jne
imul
jo
ljmp
and
pop
imul
add
add
mov
insb
and
add
and
add
mov
add
add
and
jo
hlt
popa
adc
js
dec
xor
test
js
test
js
add
or
xor
aas
fnstenv
lods
pop
fnstenv
pushf
push
or
push
les
push
daa
int3
xor
les
ss
int3
xor
daa
mov
push
xor
loope
adc
rcrl
adc
rcll
and
pop
push
sbb
add
movl
inc
aas
jmp
nop
pop
aas
rcll
dec
aas
mov
nop
add
add
aas
rcll
aas
or
sbb
icebp
nop
adc
fstl
add
add
and
inc
add
and
ss
sbb
ss
test
imul
xchg
jo
daa
aas
add
pop
aas
add
daa
adc
fldenv
aas
add
xor
add
outsl
add
daa
daa
add
add
add
pop
add
daa
xor
int3
daa
outsl
add
daa
daa
add
daa
aas
add
daa
aas
add
daa
or
inc
and
add
add
cmp
adc
and
or
add
inc
add
cmp
sbb
inc
add
cmp
add
cmp
push
cmp
cmp
dec
cmp
sub
push
add
push
add
inc
add
dec
test
xor
int
add
mov
inc
add
ds
add
cmp
outsl
ds
add
and
push
add
stos
ds
add
add
cmp
sub
jg
mov
cmp
jmp
icebp
addr16
rep
insb
and
push
jae
imul
inc
push
and
push
jae
inc
pop
je
dec
pop
outsb
and
push
test
popa
push
ficoml
loopne
dec
js
inc
push
and
imul
xor
push
gs
jecxz
addr16
cwtl
add
and
imul
frstor
fs
jo
adc
jp
cwtl
add
and
cs
add
add
testl
adc
mov
jmp
push
mov
xor
sbb
mov
add
push
jo
insb
mov
add
aas
sub
push
frstor
sub
inc
adc
jo
push
aad
and
addr16
insb
sti
xor
mov
push
or
xchg
data16
mov
and
stos
push
add
jge
out
mov
sub
orb
movsl
loopne
add
cli
sbb
ret
sti
outsb
inc
clc
sbb
gs
sub
sarb
add
lret
sub
adc
jo
and
add
mov
or
adc
aas
add
jg
inc
std
push
aas
add
inc
lock
ret
dec
sbb
jmp
add
add
aas
add
inc
sti
inc
jmp
daa
idiv
mov
daa
ljmp
daa
add
cmp
cmp
icebp
cmp
movsb
cmp
add
xor
aas
cmp
add
cmp
cmp
fnstcw
imul
icebp
cmp
add
cmp
cs
add
inc
outsl
add
dec
add
outsb
xor
add
inc
popa
add
inc
gs
inc
add
mov
add
inc
jae
ljmp
add
inc
outsb
add
inc
outsl
add
inc
add
popa
add
inc
add
and
add
and
add
and
add
and
add
and
add
sbb
push
and
add
add
outsl
and
add
and
dec
pop
icebp
push
push
add
add
cmpsb
add
ret
mov
imul
pop
imul
jns
xor
out
adc
add
fisttpll
add
jmp
push
add
xor
jl
test
or
stos
add
mov
out
adc
add
add
lcall
repz
scas
in
imul
add
add
cmp
ret
sti
faddl
jmp
cld
insb
add
push
sub
jmp
jl
enter
xchg
xlat
add
adc
push
add
fcoml
push
fadds
ret
das
enter
out
ljmp
xchg
imul
popa
jo
addb
stos
add
add
cmpsl
xor
sbbl
jnp
daa
enter
adc
lahf
arpl
daa
enter
test
lods
test
aad
cmp
fistl
or
sub
add
bswap
test
adc
jmp
lock
cmp
lea
out
out
pop
inc
add
in
pop
sbb
adc
add
add
and
aas
push
inc
dec
clc
add
lods
jae
add
call
ljmp
cmpsl
mov
aas
mov
data16
add
push
mov
mov
xchg
repnz
and
ret
mov
testb
jb
jb
pop
call
mov
pop
cmp
testl
inc
add
add
push
xor
add
je
mov
pop
clc
mov
inc
or
inc
push
inc
test
add
icebp
shrl
cmp
jne,pt
and
fnstenv
clc
add
test
mov
mov
das
mov
pushf
xor
sbb
push
or
cmpsl
xlat
jl
sar
imul
in
mov
or
add
fcomps
cmc
sarb
xor
mov
cmpsl
add
or
pop
add
cmp
push
adc
lea
pop
inc
add
cltd
testb
push
add
cmp
out
jmp
inc
and
sbb
push
les
dec
adc
sti
out
pop
call
push
adc
push
sub
add
dec
test
cmc
movsl
mov
ljmp
sub
daa
addb
scas
dec
jge
out
aaa
xor
lcall
scas
xor
dec
out
jb
cmpsb
pop
mov
ljmp
das
push
test
pop
movsl
out
insb
in
ljmp
out
in
aas
lock
cld
call
daa
ret
mov
jne
cld
inc
add
add
inc
jmp
dec
pop
inc
jmp
pusha
aas
je
mov
and
scas
inc
mov
dec
stc
shl
icebp
mov
pop
adc
cs
out
sub
orl
cmp
add
bound
jmp
out
sti
lcall
fisttpl
fcoml
pop
inc
jmp
sub
dec
clc
fstpt
addb
add
or
jo
clc
je
lret
lea
mov
call
push
xor
sets
push
mov
ljmp
inc
call
dec
mov
push
aad
test
or
add
jne
add
ja
mov
fwait
decl
add
add
add
push
push
inc
push
out
or
cli
mov
cmpb
jne
and
ret
rorl
es
mov
rolb
jg
xchg
dec
push
movsb
out
and
cmpsb
push
add
ss
cmpb
test
and
add
sub
add
faddl
add
imul
push
push
and
and
out
jecxz
push
ljmp
sbb
je
int
or
adc
jb
mov
cmpsl
cmpsl
add
aas
subb
pop
sbb
addr16
out
add
inc
add
rcll
push
or
or
jmp
aas
jmp
popf
adc
mov
jo
add
add
adc
jmp
call
add
aas
push
and
outsl
dec
and
pop
stos
add
add
dec
sbb
fwait
xlat
inc
xchg
popa
fdiv
jle
fsubl
mov
add
pop
inc
add
cs
pop
testb
std
ljmp
je
adc
je
cmpsl
sbb
push
add
add
xor
sti
jae
movsl
xchg
add
movsl
test
call
aad
add
es
inc
mov
out
push
popf
pop
mov
push
pushf
jns
arpl
dec
ljmp
jge
dec
cltd
add
daa
aas
add
jmp
sbb
inc
inc
and
cmp
lea
dec
lea
inc
push
add
add
add
cmp
orb
adc
adc
jne
mov
mov
iret
aas
test
fcomps
cmp
add
out
lea
pop
call
bound
add
inc
imul
int3
call
or
and
jge
add
pushf
add
lea
pop
call
add
add
and
and
add
aam
pop
or
dec
or
loop
push
jno
ret
xor
or
add
cmpsl
in
push
mov
fldt
loope
shll
mov
push
shrb
mov
rol
add
fdiv
and
xchg
and
inc
add
dec
stc
jecxz
call
cli
out
add
loop
sar
mov
cmpsl
push
imul
in
xor
or
cmp
dec
cmpsl
mov
cmp
into
pop
sbb
sub
scas
add
fistl
mov
jo
add
xor
call
out
call
call
xchg
das
jmp
repz
jle
scas
pop
add
add
cmp
add
shrl
xor
pop
cmp
mov
cmp
lret
repz
and
mov
mov
sub
imul
sub
add
lcall
pushf
outsl
jae
jmp
cmpsb
sbb
and
mov
sub
aas
add
jae
aas
and
dec
scas
daa
aas
push
xchg
inc
nop
add
loopne
mov
add
add
in
test
daa
aas
test
mov
mov
iret
cmp
fs
xor
cmp
fists
and
add
fs
add
stos
call
sub
dec
call
data16
data16
js
xchg
dec
sbb
mov
add
into
sbb
add
in
or
add
add
adc
add
mov
adc
jecxz
rorb
pop
push
cli
mov
lea
mov
dec
adc
fidivrs
sub
sti
decl
je
dec
div
mov
inc
cld
push
jnp
cmp
jg
shl
repz
data16
jae
xchg
add
and
push
push
add
add
cmpsb
add
lret
cmp
jae
clc
xor
les
pop
push
jae
sbb
or
fcomps
lahf
cltd
int
add
stos
adc
dec
sbb
xchg
dec
sub
xlat
ds
mov
out
or
push
and
add
add
cwtl
jns
sub
inc
adc
add
aam
flds
push
pop
sub
data16
add
aas
adc
ss
xchg
call
lcall
sub
dec
aas
jmp
cmpsl
insl
call
sub
dec
or
and
ljmp
aas
fimuls
sub
or
and
inc
addr16
add
add
and
add
scas
imull
add
or
cmp
call
pop
jbe
add
loopne,pn
repz
loope
imul
in
push
cwtl
push
rcr
out
mov
pushf
push
out
imul
pop
and
out
repz
add
out
rolb
add
add
inc
fldenv
dec
in
loopne
cld
cmp
clc
ljmp
add
mov
int3
daa
mov
push
loopne
push
aaa
push
frstor
add
push
push
addr16
push
lcall
adc
rcrb
pop
ret
mov
int3
dec
adc
dec
inc
add
outsl
add
add
mov
inc
add
cmp
aas
cmp
jp
mov
add
cmpb
aas
xchg
testl
jg
pop
mov
push
aas
or
jb
push
add
mov
rcrb
je
jb
adc
push
mov
mov
pop
push
sbb
and
in
mov
in
test
mov
sahf
ja
je
add
and
out
fs
xchg
mov
xchg
add
and
sbb
cwtl
sahf
or
mov
inc
ret
lahf
push
cld
test
push
hlt
cmp
cld
mov
cwtl
lds
in
xor
ja
jg
pop
pop
xor
mov
add
cmpsl
cmp
add
scas
repz
ret
inc
add
aas
fs
ret
cmp
and
cli
mov
in
lret
jb
inc
fcompl
xchg
sub
and
and
fs
sbb
sbb
and
bound
xor
insl
and
add
and
ljmp
ds
roll
add
shl
and
and
mov
ds
shr
inc
call
daa
mov
fs
test
aas
add
test
inc
adc
clc
jb
mov
bound
aas
andl
adc
pop
dec
add
pop
lcall
mov
add
daa
aas
mov
push
sub
ficomps
mov
xor
out
jmp
xchg
mov
daa
mov
subl
addb
daa
out
mov
daa
xchg
push
add
out
mov
imul
dec
jbe
push
xchg
mov
imul
mov
decl
push
push
push
push
addr16
mov
mov
add
clc
add
add
add
adc
dec
inc
add
shl
cmp
adc
decl
jbe
call
jbe
test
xchg
test
or
mov
movl
add
sub
pop
and
mov
andl
shll
add
add
add
rorl
mov
push
jl
mov
xlat
testb
lds
dec
pop
incb
and
ret
jae
mov
std
or
jno
cmp
mov
jno
dec
sub
call
add
pop
adc
xor
scas
pop
int3
out
aas
jmp
in
ds
cmpb
decb
xor
add
add
daa
aas
cmc
cmp
jo
mov
mov
pop
fdivl
pop
test
fmull
mov
mov
sub
and
push
inc
ss
ss
push
xor
aaa
bound
pop
cmp
and
mov
popa
mov
xor
stos
jmp
jmp
xlat
cmpsb
xchg
fdivl
jp
cmp
jb
mov
add
add
ljmp
lock
ljmp
je
mov
jmp
ss
bound
test
andl
push
jae
push
mov
xchg
insl
addr16
add
aas
add
addr16
xchg
mov
add
cmpsb
or
jmp
daa
aas
mov
cli
test
xor
add
in
test
aam
push
out
jns
sub
mov
rcrl
inc
add
std
push
xchg
add
jns
pop
jl
xor
pop
out
call
cmp
test
inc
add
inc
cld
pop
add
jae
pop
dec
adc
inc
or
cltd
mov
test
mov
adc
or
jno
adc
add
add
test
roll
mov
addr16
push
dec
mov
push
mov
or
mov
mov
jle
and
add
ljmp
mov
sbb
dec
pop
scas
mov
xor
cmp
test
lea
ljmp
adc
add
add
dec
dec
adc
lods
sti
mov
jmp
ret
lahf
fcmove
ljmp
ja
and
or
adc
cld
dec
test
pop
push
jp
pop
pop
jp
and
xor
sub
cmp
lahf
fs
cwtl
adc
sbb
aaa
push
aaa
mov
in
add
mov
imul
add
loope
popf
xor
dec
and
sub
adc
faddl
cwtl
push
ret
jno
mov
cmpb
xchg
orb
aaa
push
mov
mov
xchg
mov
xchg
jmp
insb
pop
inc
ljmp
aas
push
push
mov
cwtl
call
leave
mov
rcrl
test
fiadds
add
stos
imul
iret
mov
lds
jmp
loopne
jmp
jb
xchg
out
mov
call
lods
mov
add
fwait
cld
add
in
addb
mov
not
push
out
inc
cmp
andl
sbb
bound
add
cmc
xor
add
add
mov
xchg
ja
cmp
add
mov
inc
or
cld
xor
sbb
stc
testl
dec
cmp
add
cmp
mov
icebp
stc
lcall
mov
or
jb
inc
cmc
or
cld
mov
add
add
enter
add
add
add
add
cmp
adc
or
rcrb
cmpl
inc
add
inc
add
dec
inc
and
jmp
daa
outsb
cmp
lret
push
add
lods
adc
xchg
add
fstpl
sub
and
adc
adcb
add
cmpb
add
and
and
pop
add
lods
xchg
xchg
add
mov
adc
xchg
xor
imul
add
pop
ret
repz
fdivrl
mov
and
xchg
jge
inc
cmpsl
test
xor
into
jle
push
lods
imulb
scas
cmpsb
imul
jb
rcl
adc
mov
xor
sti
add
imul
add
jle
xorb
push
mov
cmp
or
les
dec
rorb
pop
dec
mov
pshufw
enter
hlt
jo
enter
mov
sbb
sti
imul
inc
mov
clc
inc
add
daa
push
es
jb
push
mov
mov
aas
cmpb
jb
jb
shll
in
loop
subl
jl
insl
out
bound
mov
adc
pop
adc
aas
push
es
dec
scas
mul
call
es
in
xchg
nop
mov
xor
sub
dec
mov
pop
enter
inc
call
sbb
pop
ret
out
lret
fs
adc
push
cmp
add
add
test
mov
jmp
outsb
add
in
lea
add
add
xor
inc
pop
test
mov
stos
push
out
inc
mov
jbe
jns
daa
sbb
add
push
in
testb
adc
inc
cmpl
add
int3
xor
test
ret
add
add
leave
mov
jnp
adc
clc
call
addl
cmp
std
or
mov
mov
jmp
add
mov
add
rcrl
je
mov
mov
cmp
ljmp
mov
test
xchg
mov
clc
push
repz
hlt
push
jmp
int3
cld
stos
xor
and
ret
add
mov
inc
mov
mov
cmp
adc
mov
je
loop
clc
mov
add
jmp
lock
or
repnz
push
cld
pop
push
add
jl
mov
sub
iret
inc
aad
add
xchg
stos
inc
cmpsb
cmpsl
add
mov
lret
jmp
test
add
aas
inc
jmp
add
ljmp
aas
cmp
ss
movsl
jecxz
call
add
repz
jp
add
mov
stos
jp
add
lea
bound
sub
ret
cmpsl
jmp
and
push
ror
sub
jmp
mov
add
fstpt
jmp
add
add
push
push
addl
in
jmp
dec
inc
push
shl
pop
call
dec
jecxz
loope
aas
lea
or
insl
xchg
add
les
xor
sub
je
pusha
addl
inc
add
xchg
cld
decl
push
call
lea
xchg
cld
incl
add
fimull
notl
adc
jge
mov
jne
cmpsb
mov
inc
sub
jae
and
or
test
inc
add
mov
out
push
cmp
pop
pop
data16
adc
or
add
fwait
xor
adc
adcl
int
je
jl,pt
inc
ds
jb
shl
add
add
int3
cs
movsl
stos
or
bound
add
lea
dec
pop
mov
lds
repz
arpl
cmpsl
push
out
mov
ds
repz
loope
roll
add
push
cld
lods
rorb
call
push
addr16
test
add
scas
and
movsl
add
add
add
xor
fwait
je
aas
jo
in
leave
and
or
add
icebp
cmpb
jmp
xor
out
cld
imul
cld
call
sarl
ja
stos
lods
pop
call
push
mov
add
push
mov
loope
test
ja
mov
add
loopne
xchg
mov
leave
mov
jns
ljmp
hlt
faddl
push
xor
jbe
or
in
mov
lea
jae
jne
icebp
popl
bnd
jne
add
aad
add
ja
mov
addr16
pop
jmp
mov
adc
add
add
lds
aas
call
bound
ret
test
jno
jo
pop
mov
out
clc
arpl
cld
mov
addl
add
cmpsl
jle
out
jne
inc
push
mov
loop
movb
fisubrs
je
test
test
add
add
inc
add
enter
in
cld
jmp
mov
add
je
mov
cli
cmp
cmp
decl
inc
jb
mov
rorb
or
inc
add
mov
sub
and
adc
sub
add
push
lock
icebp
sub
add
add
dec
icebp
and
loope
hlt
mov
loop
push
test
add
and
ss
xchg
jl
add
and
ret
je
std
loope
and
jecxz
jmp
push
loope
add
add
add
addr16
inc
pusha
mov
add
sub
add
add
add
out
add
rcll
aas
jmp
je,pn
fcomp
jecxz
mov
add
dec
leave
adc
add
xor
mov
dec
xchg
fadds
ljmp
lahf
xchg
imul
inc
jb
test
pop
push
aam
adc
push
lret
and
stos
mov
dec
ds
stos
outsb
out
movsb
icebp
adc
mov
jnp
cli
and
mov
mov
cmp
xlat
jno
pop
mov
aas
adcb
fsubrl
pop
insb
call
lret
add
daa
lds
adc
ljmp
test
or
aas
cld
push
jo
and
xor
sti
out
and
test
add
add
aas
add
pop
or
xor
mov
ficoml
pushf
outsl
sub
add
stos
mov
gs
jb
add
lods
std
push
test
clc
mov
out
icebp
cmp
jnp
push
push
cmpl
bnd
push
sti
push
push
jp
clc
lea
mov
data16
add
add
jge
sub
mov
mov
xchg
xchg
xor
add
jno
out
jmp
push
rclb
orb
add
dec
cmp
out
cmp
lea
jge
inc
cld
and
jg
sub
jg
cld
dec
pop
jno
data16
in
xchg
scas
je
mov
pop
add
add
movsl
push
mov
in
mull
push
push
jae
add
adcb
mov
inc
and
fcmovnb
je
es
call
test
push
mov
hlt
xchg
mov
pushw
and
jnp
add
add
and
mov
push
and
sbb
sbb
add
add
ds
push
jge
mov
adc
jmp
add
ds
mov
shll
jmp
add
sub
adc
xchg
loope
aas
jmp
add
and
cmc
inc
lahf
lret
mov
test
sbb
add
push
aad
pop
out
cmp
stos
bound
ret
add
add
cmp
and
add
sbb
call
push
es
add
repz
pop
pop
jb
ret
and
in
inc
addr16
push
push
inc
jmp
daa
test
insl
mov
cli
sub
jmp
outsl
mov
add
and
cli
adc
add
add
shrb
insb
push
xor
mov
push
in
out
call
cli
inc
add
adc
and
dec
jno
push
stos
loope
dec
jle
call
and
decl
add
call
insl
mov
cltd
incb
jl
lods
inc
add
cmp
inc
add
cmc
sub
add
add
mov
outsb
mov
pop
incl
ss
out
mov
inc
push
lea
int
add
add
lea
mov
pop
idiv
lret
pop
and
add
aas
inc
and
hlt
mov
xchg
lcall
shl
mov
add
inc
and
pop
aas
je
jne
fcomps
out
add
add
mov
jnp
mov
inc
add
inc
and
push
call
imul
push
push
mov
pop
int
in
push
add
cmp
lods
xor
xor
or
jae
out
ja
dec
xchg
jmp
and
sub
out
loope
sub
sub
push
dec
push
xchg
pushf
and
xchg
pusha
add
add
push
adc
in
mov
sub
mov
inc
and
mul
push
adc
push
or
add
aas
inc
xchg
fwait
sbb
ret
add
ret
je
arpl
aaa
and
je
mov
inc
and
mov
aaa
aaa
in
out
jmp
cli
add
push
add
dec
mov
and
daa
into
fildl
add
xchg
adc
hlt
dec
inc
jmp
adc
push
daa
adc
insb
pop
cmp
lods
es
add
pop
mov
call
add
jmp
es
mov
popf
sub
arpl
sub
loope
add
sti
inc
jmp
sub
add
imul
pop
add
add
std
incl
cmp
add
data16
dec
inc
lea
or
or
add
cmp
jp
mov
add
add
fsubrs
and
gs
cmp
cmp
push
mov
and
aad
sub
cld
cmp
add
std
xchg
adc
out
std
decl
outsb
push
push
add
add
inc
lea
push
push
cmpsl
imul
and
inc
add
in
testl
test
ffree
dec
mov
mov
xchg
in
add
inc
cld
shlb
add
lcall
pop
add
and
sbb
fistps
je
repnz
test
add
push
sbb
cltd
mov
jle
add
add
jno
inc
sbb
push
pushl
test
add
mov
jne
aad
or
sti
sbbb
iret
mov
or
daa
and
aas
leave
xor
lods
sti
sub
test
push
jl
mov
test
and
cmovge
aas
mov
dec
adc
sub
mov
add
add
push
faddl
mov
jnp
ss
int3
pop
aas
jmp
jl
push
imul
insb
test
and
push
and
repnz
cmp
cmpsb
push
ds
and
mov
repnz
jge
idivb
cmpsl
push
out
sub
repnz
bound
xorl
aas
mov
add
add
push
out
jb
aaa
test
sbb
mov
out
push
inc
hlt
push
inc
hlt
push
push
cmp
sub
test
and
aas
add
dec
aaa
push
mov
jmp
insb
add
push
bound
pushl
xlat
cmp
dec
aaa
dec
sub
call
add
or
cld
push
addr16
pushl
popf
aam
int
xor
cmp
ljmp
jb
sar
pop
push
add
clc
push
ja
pushl
popf
aam
std
das
or
xor
add
std
pop
movsl
pop
leave
add
popf
jb
adc
call
xchg
push
jns
adc
add
add
std
incl
dec
push
push
add
adc
add
in
add
out
pushf
int
add
fwait
add
inc
mov
add
pop
and
cs
int
call
jl
cmpsb
incb
in
cs
aad
fcoms
cwtl
add
fs
rolb
stos
jns
cmpsl
or
push
fcmove
icebp
lods
xchg
cmpsb
cmp
add
imul
inc
and
mov
or
add
push
testl
and
dec
push
push
insl
cs
repz
js
sub
dec
jnp
into
das
enter
pop
call
xor
pop
aas
test
adc
or
add
sti
add
call
out
mov
je
test
cli
js
add
add
movsl
cmp
stc
inc
and
push
add
dec
dec
das
dec
or
dec
into
dec
sar
arpl
jmp
call
paddq
add
dec
lahf
push
imul
inc
push
mov
and
add
fs
fdivrl
add
pop
adc
aam
dec
inc
jmp
cli
dec
push
aas
add
add
mov
xchg
mull
lea
jmp
sub
std
sbb
adc
sub
lcall
les
data16
jae
fdivr
pop
inc
mov
dec
int3
push
cmp
adc
inc
jmp
sbb
mov
shlb
inc
xor
sbb
adc
pop
cli
in
je
movsl
inc
cld
hlt
adc
add
add
sbbl
xor
jne
xchg
mov
jp
push
call
sahf
adc
mov
ljmp
push
push
scas
and
push
es
mov
aas
test
jno
lea
push
push
rolb
push
cs
fiaddl
jmp
push
inc
dec
mov
js
mov
je
mov
and
or
add
and
out
cld
pusha
repnz
ret
je
popa
push
and
inc
dec
fsubs
imull
pop
cmp
pop
fs
or
push
add
and
lcall
inc
add
or
cmpsl
pop
add
and
test
jnp
jbe
in
mov
and
fcoms
sbb
idiv
fldenv
je
add
sbb
pop
or
mov
out
inc
pop
lahf
repnz
ret
aaa
mov
inc
push
add
push
sbb
lsl
aam
js
pop
cmp
jnp
ljmp
pop
cmp
push
clc
shr
clc
xor
pusha
repz
cld
call
les
mov
add
aas
mov
dec
testb
pusha
in
pop
aas
jmp
test
aas
jmp
add
mov
call
mov
and
sub
test
call
xor
add
sahf
sti
das
fs
aas
add
in
push
sub
sub
mov
stos
mov
mov
xor
cmp
les
fdivrl
add
add
add
aas
call
aas
dec
inc
jmp
mov
jmp
les
in
or
xor
inc
jmp
ficompl
jbe
mov
mov
pusha
mov
mov
push
pop
mov
add
dec
cmp
lcall
adc
mov
add
xor
adc
js
std
adc
add
add
add
sbb
ret
push
call
cmp
add
sub
push
mov
push
push
push
aaa
and
pop
adc
jb
pop
mov
add
mov
inc
and
mov
adc
cltd
add
mov
cmpsl
adc
push
add
lods
out
push
out
add
add
hlt
lcall
mov
jl
ds
jno
add
jo
xchg
js
mov
mov
dec
jecxz
jae
sbb
in
pop
mov
addb
in
or
insl
pop
adc
cmpb
sbb
add
lock
pushf
sub
sbb
add
scas
inc
out
jmp
fisubl
mov
and
add
adc
mov
push
dec
and
sbbb
mov
inc
and
or
repz
subb
add
testb
or
add
shrl
mov
inc
fs
imul
push
out
test
add
scas
adcl
add
add
call
repnz
add
adc
and
sbb
aas
test
xor
lods
dec
xor
inc
lods
pop
jmp
ss
cli
out
inc
add
sub
add
arpl
and
mov
call
stos
mov
push
out
mov
call
stos
mov
call
cltd
inc
in
sbb
aas
add
enter
sbb
les
jmp
pushf
jge
ljmp
aas
jmp
in
add
xorb
dec
xor
dec
cmpsb
add
std
ret
mov
in
mov
incl
roll
jle
add
imul
push
call
cmpb
add
add
jle
push
lea
incl
add
or
jb
jmp
inc
xor
inc
xorl
dec
in
dec
incb
push
ficoml
adc
mov
pop
pop
dec
sbb
and
add
sub
aas
call
scas
fadds
or
outsb
inc
add
add
test
cs
and
ret
jae
mov
iret
cmpsl
inc
pop
imul
roll
and
adc
cmp
stos
push
test
pop
push
frstor
arpl
mov
sbb
and
dec
call
mov
cli
or
dec
mov
stos
loope
data16
sub
adc
aas
jmp
add
add
aam
repz
call
scas
jmp
xor
and
mov
mov
cmp
pop
add
call
adc
lret
aas
inc
xchg
and
in
repz
aas
mov
or
add
add
es
xchg
lcall
jmp
ja
call
in
sarl
jmp
jae
out
stos
adc
out
test
cmp
or
sub
add
sub
pop
xor
jmp
and
call
push
aad
jmp
jo
aas
sub
decl
xor
add
jmp
jl
push
xchg
push
or
ret
and
mov
pop
and
push
mov
add
daa
aas
lea
pop
add
sbbb
sub
test
cwtl
adc
add
pusha
mov
or
mov
inc
loopne
shrb
jge
mov
decl
mov
test
push
or
add
decl
jl
push
mov
add
mov
push
push
add
add
sub
sbb
push
add
push
adcl
jae
jle
std
call
inc
adc
dec
dec
dec
adc
leave
add
dec
aam
xor
pop
inc
add
xchg
xor
mov
jmp
push
stc
jg
jnp
xchg
in
push
inc
shl
aam
pop
add
add
sub
sub
xor
int3
inc
std
aas
and
xchg
dec
adc
ret
ja
xchg
push
sbb
lods
movb
add
aam
xchg
adc
pop
inc
add
push
add
inc
loopne
sub
push
lahf
pop
xor
jne
icebp
push
pushl
sub
in
imul
and
jo
cwtl
pop
adc
add
add
inc
pop
andl
jg
aas
jmp
cmp
fsubrl
pop
out
lods
sti
jl
lock
repz
sbb
cmp
mov
xchg
cwtl
push
shlb
cmp
bound
out
add
sbb
cmpsb
pop
out
repz
outsb
pop
out
jecxz
hlt
stos
push
pop
jmp
daa
enter
add
adc
pop
mov
jmp
int
push
xor
arpl
jo
dec
mov
pop
lods
lahf
repz
arpl
mov
xor
dec
add
inc
jmp
sbb
jno
inc
add
push
jb
dec
cmp
and
ret
es
shlb
jmp
mov
call
add
add
push
push
gs
jmp
push
push
incb
int
pop
add
shrl
jle
jbe
sqrtps
dec
movb
in
or
call
movups
sub
or
cmp
jmp
enter
adc
push
fisubl
std
cmp
dec
std
adc
add
add
stos
dec
adc
jg
pop
repz
push
call
xchg
or
or
mov
mov
xchg
adc
push
inc
add
mov
loop
fs
xchg
xor
sbb
cmpsl
nop
xchg
out
jl
add
mov
lcall
push
cmc
aas
and
or
add
es
lds
int
dec
pop
aaa
cld
mov
or
xchg
test
cmp
mov
inc
sub
xor
cltd
dec
cmp
pop
add
int
clc
ds
call
xor
and
mov
sbb
sbb
ror
rclb
enter
mov
aam
add
add
add
data16
aaa
push
cmp
and
sbb
push
sbb
and
sub
data16
lahf
movsb
bound
rorl
pop
adc
mov
cli
xor
and
imul
daa
aas
andb
mov
insb
pop
push
dec
bound
sub
add
rclb
add
xor
adc
lods
push
add
daa
call
push
ds
jecxz
pop
call
mov
push
adc
nop
adc
pusha
xor
and
inc
xchg
sbb
add
loop
ret
jle
push
dec
jle
dec
cld
lahf
push
adc
aaa
adc
je
dec
dec
insb
stos
jl
push
xchg
add
aam
jl
add
add
adc
test
or
rolb
push
inc
inc
cld
mov
call
mov
pop
push
inc
int
inc
fsubr
iret
or
scas
std
push
add
sti
push
cmp
sub
cmp
scas
roll
inc
scas
pushl
push
data16
lret
scas
data16
add
add
sarb
or
call
lea
mov
mov
mov
lea
xor
push
in
aas
and
push
hlt
sti
or
jl
push
push
or
sbb
mov
mov
add
aaa
lea
or
inc
shrb
add
repnz
sub
incb
add
hlt
loop
cld
aam
sbb
push
sbb
stc
mov
shlb
cmp
mov
dec
aad
gs
sbb
clc
cmp
sbb
in
push
pop
dec
push
cwtl
cmp
int3
fdivrs
adc
gs
or
jp
push
xchg
pushf
and
ljmp
inc
adc
lods
and
mov
or
inc
cmc
mov
add
dec
or
mov
mov
out
daa
jg
ss
dec
pop
pushf
sbb
add
js
jge
inc
mov
jb
push
int
jp
mov
jp
push
in
pushf
and
ljmp
jns
outsb
stos
out
out
je
add
imul
cld
dec
stos
dec
inc
dec
mov
out
pushf
js
ss
mov
add
mov
mov
xor
inc
jmp
daa
mov
out
sahf
aas
add
xor
push
mov
or
jecxz
mov
or
mov
xor
dec
adc
ja
add
test
packssdw
dec
incb
stos
movb
sbb
ja
lret
rolb
add
push
decl
push
aas
call
dec
stos
in
stc
dec
mov
push
dec
mov
mov
aas
call
or
add
dec
push
decl
push
inc
call
leave
and
add
add
jge
pop
or
add
jl
ret
cwtl
sbb
mov
ds
and
lcall
inc
idiv
adc
mov
sub
lcall
insl
ret
adc
sahf
or
dec
xor
lahf
inc
cld
mov
xorb
jl
push
mov
cld
scas
out
xchg
mov
insb
jle
add
add
fists
hlt
sub
adc
mov
ja
fmuls
or
xor
lock
jge
inc
aas
jo
sbb
out
fdivs
bound
add
das
clc
jmp
sti
jp
mov
loope
jbe
push
das
sub
add
enter
jg
aaa
inc
in
scas
sti
push
jns
aaa
push
add
push
ret
jmp
xchg
jle
lahf
into
repnz
add
add
bound
push
jecxz
pop
inc
jmp
jle
loope
repnz
sub
imul
adc
cmp
cmp
clc
and
in
jmp
repnz
imul
scas
push
or
mov
push
cmp
sar
cmp
jge
add
mov
iret
loopne
in
sub
dec
push
jb
mov
add
add
add
mov
das
fadds
jmp
fs
cmpsl
call
rcrb
daa
or
xchg
jge
repz
hlt
jmp
aas
add
push
aaa
mov
rorl
add
dec
call
push
push
mov
clc
and
inc
adc
jne
lds
add
lock
stos
xchg
jle
pusha
mov
std
cmp
cmp
incl
add
push
leave
mov
jmp
mov
scas
adc
cmp
mov
jmp
lea
adc
mov
push
cli
notl
add
dec
sub
pushl
jp
jge
push
mov
mov
ss
mov
roll
shll
mov
and
shl
aaa
mul
flds
and
adc
in
ja
lock
cmp
test
inc
aaa
jle
adc
fnstsw
xor
xchg
gs
std
sub
iret
cmp
test
pop
push
or
jp
or
add
pop
imul
aaa
orl
ja
out
stos
xor
mov
add
add
lods
xchg
aas
stc
inc
and
cmp
inc
sti
dec
aaa
call
loopne
inc
mov
movups
lods
icebp
pop
das
sub
int3
in
push
sub
hlt
or
nop
add
jge
loopne
out
in
jecxz
mull
mov
mov
arpl
inc
lock
pop
lods
sti
js
pusha
pop
add
add
int3
jge
dec
and
jmp
jns
mov
addb
mov
xchg
ret
fisubl
subb
and
xor
xor
mov
cmc
mov
cmc
fsubl
inc
jmp
inc
inc
adc
ja
add
dec
cmp
lret
cld
dec
jae
push
inc
je
stos
lret
mov
mov
add
sub
mov
inc
push
ret
sub
test
daa
aas
mov
mov
lret
adc
and
aas
add
xor
cld
fwait
xor
dec
sti
pop
add
test
cld
mov
adc
adc
or
lds
pop
push
xor
mov
dec
aaa
pop
popa
das
add
inc
dec
call
add
mov
or
jae
adc
dec
push
incl
std
jne
adc
ds
add
push
cwtl
or
call
into
adc
pop
xor
jmp
mov
sbb
mov
mov
pushl
cwtl
dec
jb
and
xorl
call
adc
add
shl
xor
pop
rcrb
add
stc
rorl
xor
add
xchg
out
aas
and
cmp
dec
js
sti
pop
movsb
das
lcall
or
and
in
jnp
push
add
loop
cmp
cmp
rorl
sub
or
fistl
add
xchg
mov
sti
jmp
sbb
jp
xchg
in
es
jmp
pop
xor
out
fildll
test
ss
and
subl
mov
in
aaa
cmpl
clc
ret
mov
and
xor
jns
dec
loopne
dec
or
fdivrs
loopne
dec
lret
out
push
int3
cwtl
adc
sbbl
fadd
cmp
imul
mov
insb
xchg
xorl
stc
das
inc
repz
aaa
call
lret
lret
xchg
cmp
data16
add
int
jae
xor
mov
aas
jne
jmp
out
mov
xor
mov
mov
test
icebp
int
and
add
pop
pop
mov
and
mov
sub
pcmpeqb
push
push
cmp
lret
push
add
inc
jmp
dec
call
inc
jmp
daa
dec
add
sti
std
in
in
mov
add
push
pop
enter
mov
pop
in
fdivs
je
add
cwtl
aaa
xor
rorl
cmp
or
mov
clc
adc
cmp
ret
push
mov
add
cmp
jge
add
jne
xor
stc
cli
jb
xchg
or
cmp
adc
lret
sbb
cmp
dec
adc
je
mov
rclb
int
mov
testb
std
push
jns
jg
sub
ret
test
shll
js
xchg
add
jae
pop
mulb
mov
add
adc
pop
cmp
add
cmp
adc
jae
sbb
dec
jmp
fdivr
sbb
inc
add
add
add
int3
mulb
sbb
sub
stos
sahf
add
mov
mov
addr16
jg
lods
sbb
jmp
jp
pop
xchg
inc
sub
or
inc
popf
sbbb
fcmovnb
add
add
pushf
sub
and
in
ja
out
jp
xchg
daa
sbb
call
sbb
data16
notb
mov
scas
out
clc
and
les
rol
imul
push
inc
push
fsub
jecxz,pt
sahf
pushf
mov
jg
insl
aas
out
jae
add
add
add
out
call
scas
dec
inc
jmp
or
cmp
and
test
push
fs
dec
push
inc
call
mov
push
push
mov
dec
inc
jmp
pop
lret
cmp
inc
jmp
jb
ja
movb
push
rcr
cmp
mov
into
dec
std
xor
add
xor
je
jbe
adc
xor
aaa
pop
lcall
cltd
mov
mov
add
add
enter
aaa
outsb
call
addl
std
adc
jbe
test
mov
aaa
dec
pushl
mov
or
nop
dec
std
adc
ds
adc
and
call
dec
std
adc
add
add
inc
add
inc
std
jbe
cmc
push
ud0
mov
sbb
inc
mov
inc
sbb
push
rclb
inc
pop
push
sub
outsb
addr16
cmp
pushl
mov
xlat
pop
out
add
mov
add
rcll
gs
adc
sar
xor
add
add
add
or
add
es
sub
push
mov
jge
adc
add
push
add
mov
jne
mov
cmp
call
into
imul
cmpsl
hlt
ds
clc
jo
out
mov
cmp
mov
out
jle
xchg
dec
daa
add
test
mov
cmpsl
jnp
add
add
xchg
cmp
jl
daa
mov
inc
pop
inc
stc
inc
into
outsl
rcll
test
shll
sub
aas
jg
es
out
cmp
push
les
add
cmp
ret
mov
ret
add
lret
inc
sub
jg
ret
jl
sub
or
push
into
push
cmp
cmp
adc
add
and
xor
inc
jge
jb
ret
sub
bound
adc
sub
inc
insb
pusha
scas
push
jb
pop
adc
and
mov
push
pop
adc
aad
lahf
ror
add
sub
jne
xor
daa
aas
push
add
xor
push
fwait
dec
push
push
push
jae
push
arpl
pushl
mov
mov
add
add
add
cmp
cs
pop
jb
mov
ret
clc
leave
jmp
cmp
inc
mov
mov
add
push
test
inc
addl
add
fadds
test
jl
sub
inc
mov
or
jne
movl
inc
jne
and
add
inc
add
xchg
or
add
lret
clc
incb
and
cmc
and
sub
je
out
mov
fistpl
jns
sbb
lret
pop
gs
adc
sbb
inc
sub
fs
aam
fwait
push
jns
sbb
or
test
sbb
or
sbb
add
add
mov
shll
ja
in
fisttps
push
and
add
shl
push
push
add
fwait
mov
out
pop
jecxz,pt
cli
inc
fidivs
jae
mov
in
insb
inc
xlat
jbe
insb
es
out
fimull
push
inc
dec
daa
add
adc
scas
jg
cmpl
add
cld
sbb
add
add
out
fidivl
push
jns
mov
ret
sti
push
incl
es
bound
and
out
push
insb
lcall
sbb
ret
mov
sbb
add
aad
xor
jmp
mov
in
push
call
stos
push
inc
jmp
icebp
decl
jmp
add
add
sub
push
jb
enter
std
add
daa
aas
add
inc
dec
dec
jle
inc
adc
sub
jmp
scas
jge
pop
imul
add
jmp
cs
shr
aas
adc
adc
add
pushf
andl
add
xchg
cmp
add
enter
push
adcb
pop
dec
rclb
adc
rolb
inc
and
ljmp
sub
rclb
std
jbe
enter
push
adc
lcall
or
hlt
and
repnz
lock
mov
lea
push
call
add
add
or
pop
and
rorb
push
xor
push
pop
stos
or
int3
mov
inc
jae
pop
push
cmp
xor
addr16
pop
adc
sbb
add
sub
add
lahf
out
jge
mov
es
jmp
sbb
xchg
lcall
sar
out
mov
mov
es
add
add
add
push
in
adc
sbb
dec
jae
fmuls
addr16
ljmp
and
out
adc
scas
aad
add
jne
mov
sbb
and
out
jge
out
lret
cmp
daa
or
das
sbb
push
push
subl
inc
cmpsb
cmp
in
pop
enter
add
add
icebp
jmp
mov
loope
sbb
daa
add
or
and
inc
out
daa
inc
pop
movb
cmp
xchg
out
ja
and
jp
add
cmp
mulb
xor
movsb
cli
std
mov
daa
xabort
or
js
jmp
jmp
lock
lods
insb
insb
pop
pop
adc
add
add
mov
jmp
jbe
shrb
add
leave
iret
add
gs
add
daa
es
push
cmp
sbb
in
stc
std
sbb
shr
daa
xabort
jp
xor
pusha
and
lock
sub
adc
int
test
cltd
inc
xor
jge
lret
shrl
andb
and
insl
call
add
xchg
test
cmp
pop
mov
adc
or
cltd
cmc
andl
xor
cmp
ss
inc
sub
adc
add
iret
mov
decl
insl
add
jne
push
movsl
sub
add
sub
mov
push
add
mov
cmp
fs
leave
pop
adc
xchg
add
xchg
add
add
rol
imul
add
mov
stos
cmc
pop
xor
add
push
leave
pop
xor
and
mov
jae
stos
enter
pop
sbbl
add
data16
ja
cli
inc
add
inc
or
shlb
and
out
add
andl
jg
gs
add
add
sub
inc
push
or
jb
sti
ds
repz
add
add
das
aas
jno
movsb
out
in
aas
and
das
daa
inc
mov
and
add
xchg
das
pop
test
lcall
ret
clc
test
testb
sub
push
xor
sbb
das
call
jnp
daa
add
mov
cmpsl
add
insb
mov
jg
out
jp
arpl
jp
arpl
test
inc
add
sbb
sbb
repz
push
sub
add
sar
int
mov
mov
aas
add
bound
push
inc
jbe
and
lock
mov
call
add
add
ret
jge
mov
or
aaa
add
pop
std
add
bound
dec
bound
mov
cmp
and
fcoms
cmp
daa
mov
push
subb
daa
mov
dec
test
or
push
jb
xorl
sbb
inc
cmp
adc
int
lret
loop
inc
test
nop
inc
call
mov
add
adc
adc
in
cmp
adc
jns
cltd
inc
jb
mov
jae
push
imul
and
pushf
jae
negb
in
mov
pop
stc
je
pop
icebp
je
adc
pushf
jno
add
jle
add
pop
mov
std
cmpb
add
mov
add
add
cld
add
add
jno
xlat
or
push
int3
push
xor
and
dec
push
mov
aam
ret
stc
cmp
dec
jmp
imul
outsb
decb
jecxz
jmp
data16
fimull
subb
sbb
inc
clc
adc
dec
jg
dec
push
std
into
and
hlt
cmc
add
cmpsl
into
add
add
adc
pop
fwait
std
sbb
jp
push
sarl
aas
jno
pop
lea
rcll
mov
pop
pop
or
iret
rclb
xor
imulb
mov
cs
jb
call
jp
es
mov
cmp
add
inc
xchg
imul
mov
testl
sub
add
add
pop
add
and
in
pop
movsb
and
add
iret
popf
es
std
sbb
and
lods
es
push
andl
std
fiaddl
mov
out
cwtl
call
sub
pop
fs
sub
push
sub
arpl
push
sub
sti
addr16
push
cwtl
int
push
dec
cmp
push
mov
add
add
push
push
clc
cld
xor
in
or
mov
aas
shrl
dec
sub
inc
mov
loop
mov
cmp
add
xchg
jno
enter
mov
or
mov
dec
xchg
test
cmp
gs
dec
xchg
dec
mov
movsl
mov
add
test
dec
or
pop
and
mov
test
fmuls
jno
push
shr
add
std
incl
shr
and
inc
cld
popf
test
sar
mov
mov
add
aas
adc
inc
add
jge
cmpsl
sti
imul
lods
jb
sub
and
add
sbb
test
adc
add
inc
sub
sbb
pop
sti
adc
loop
and
or
adc
mull
push
add
sbb
subl
outsb
pop
add
push
add
jl
sub
and
imul
add
aas
cmc
daa
mov
and
pop
jge
add
add
aas
jo
pop
push
repnz
mov
imul
addr16
pop
sub
and
sub
out
and
and
adc
cmpsl
shl
add
mov
pop
mov
add
ds
mov
add
mov
pop
or
fwait
pop
cmp
xlat
jl
roll
add
pop
cmp
je
cld
stos
and
fldt
and
lock
je
sbb
or
mov
jnp
in
scas
jnp
inc
sbb
and
inc
inc
int
push
sbb
bound
stos
bound
bound
fwait
bound
xchg
bound
aas
add
rcrb
and
add
es
std
mov
inc
mov
pop
aas
add
cld
and
lds
pop
jnp
aaa
inc
add
loop
add
bound
dec
inc
add
jp
add
push
push
adc
ljmp
inc
fs
and
cmp
je
popa
call
cmpb
adc
ljmp
inc
loope
xor
jle
pushl
add
xlat
sarb
sahf
mov
lock
je
adc
and
int
pop
lea
hlt
push
lea
pop
mov
lea
call
and
inc
push
cltd
rcrl
adc
or
adc
mov
xor
pop
addr16
inc
arpl
sub
int3
pop
sbb
fwait
sbb
and
add
insl
gs
sub
jmp
push
and
push
into
lods
enter
inc
inc
or
pop
jg
pusha
pop
out
and
and
mov
out
xlat
push
pusha
xlat
jmp
leave
repnz
fdivr
inc
pop
movsl
inc
and
xchg
add
sub
pushw
or
andl
cmpl
call
outsb
bound
rolb
add
hlt
cwtl
out
es
mov
dec
and
iret
scas
adc
and
add
mov
fisubrl
mov
insb
and
jns
mov
out
cmpsl
and
in
pop
mov
rolb
push
jg
xlat
cmp
mov
out
inc
out
pop
mov
insb
shlb
aam
in
add
and
add
jge
push
add
testl
add
and
sub
jno
fwait
and
test
je
call
aas
clc
notl
daa
out
pushl
in
shrb
mov
pop
and
aam
dec
inc
jmp
adc
push
xchg
stos
nop
add
insb
inc
mov
mov
je
pop
aad
call
aad
add
es
push
push
pop
call
add
add
inc
call
pushf
fsubrp
dec
jle
test
imul
add
movb
jl
mov
cmpsl
mov
sub
aaa
inc
add
fucomp
dec
push
cmp
cmp
mov
add
jmp
push
jb
es
cmp
movsl
ss
xor
adc
decl
xchg
adc
add
or
scas
sub
cmp
add
in
mov
inc
adc
cmp
mov
add
test
adc
sar
in
sbb
xor
adc
adc
lcall
xchg
fldl
jae
adc
arpl
imul
sbb
mov
or
dec
pop
add
add
add
mov
xchg
mov
shlb
or
cmp
and
mov
inc
add
add
push
mov
add
mov
add
mov
pop
pop
mov
pop
pop
xchg
push
sub
dec
pop
fsubl
es
imul
pop
nop
mov
std
cmp
mov
pop
add
add
cld
pop
es
imul
mov
push
in
jg
mov
add
xor
dec
mov
mov
insb
push
scas
popa
lods
jns
xchg
test
mov
aas
orb
call
and
add
mov
lock
mov
jae
neg
enter
pop
std
or
add
add
stos
sbb
aaa
push
stos
cmp
call
test
adc
fsubrs
mov
fwait
stos
hlt
add
call
out
inc
push
push
and
add
aas
clc
call
daa
cmp
inc
lods
lea
cmpsb
loop
in
daa
aas
jmp
add
cli
push
add
add
inc
push
ss
das
cmp
lock
inc
push
cmpsb
std
dec
lahf
je
push
lcall
fsub
mov
add
mov
in
cmp
incb
jle
jae
xchg
inc
add
mov
inc
clc
stos
add
jg
add
mov
add
aam
xor
jl
mov
in
mov
add
jmp
lret
jl
push
mov
andl
add
add
cld
nop
inc
cmp
sbb
push
xchg
pop
cmp
cld
or
push
cmpsl
add
out
insl
mov
xor
or
sbb
in
dec
adc
add
lahf
out
lahf
ljmp
and
xchg
je
aas
in
add
add
insl
xchg
mov
mov
add
lahf
push
mov
mov
mov
inc
jae
aas
jb
adc
sub
mov
pop
xorb
adc
lahf
push
or
ds
push
dec
imul
dec
sbb
sbb
lods
push
aas
out
mov
enter
lcall
jg
fistpl
add
dec
lcall
and
movsl
outsl
and
out
popf
lcall
push
push
stos
or
ret
mov
aas
jb
sub
adc
sub
outsl
add
aas
jb
inc
jecxz
add
add
push
mov
and
sar
sub
jmp
jl
shl
push
std
shrd
sti
dec
mov
outsl
sti
pop
add
add
push
inc
and
mov
js
xor
rcll
test
das
test
adc
or
std
fcmovu
push
daa
ret
sarb
or
arpl
jmp
call
xor
inc
lds
call
mov
inc
call
leave
cmp
icebp
add
sbb
incl
add
mov
out
add
add
mov
popl
or
jmp
mov
inc
cld
inc
stc
cmc
call
fcmovnb
inc
hlt
ret
leave
dec
inc
add
stos
and
mov
add
shll
movsl
xchg
mov
mov
xchg
test
fadds
jmp
mov
add
dec
add
add
daa
add
lock
sub
adc
daa
add
jae
sbb
xchg
add
int3
ss
add
out
test
adc
and
add
addr16
mov
enter
or
adc
int
cmc
movsb
insb
das
push
jnp
lds
add
popf
rcrl
push
fwait
dec
add
and
pop
loopne
or
repz
sbb
xchg
cmp
push
and
daa
mov
inc
es
out
addr16
or
imul
call
repz
and
mov
add
daa
xchg
sub
aas
mov
inc
and
push
iret
pop
dec
aas
ja
ds
add
add
cmp
repz
aad
test
pminub
out
mov
fisttpl
bound
mov
pushf
jl
or
jl
add
add
je
dec
add
xor
inc
add
sub
pop
lds
pop
int
pop
push
daa
aas
push
xchg
inc
cld
call
add
add
jae
aad
pop
sub
daa
aas
mov
push
add
sahf
jnp
fldenv
fmuls
ss
xchg
or
cld
call
fstpl
jne
jnp
sub
add
ja
ret
cmp
dec
cmc
jae
enter
pop
jbe
clc
cli
in
add
jg
mov
xor
add
ja
add
inc
pushl
shlb
testb
xor
shll
sbbb
xor
jae
mov
je
dec
or
cmp
in
std
xlat
ret
push
test
movb
pop
ds
in
lods
lret
push
mov
sarb
ds
and
sub
shrb
nop
or
add
ret
out
je
sbb
data16
jg
sbb
je
xchg
inc
mov
jmp
and
xor
sti
or
sub
mov
out
cvtps2pi
mov
dec
aas
ss
sub
dec
xchg
add
hlt
mov
imul
fnstsw
and
inc
loopne
add
sub
lea
insb
inc
push
cmp
ss
enter
jg
inc
push
inc
mov
aas
out
das
mov
insb
jmp
push
push
pop
jp
shlb
adc
pushl
jg
dec
repz
cmpl
iret
dec
daa
cmpsb
push
ljmp
inc
push
cmp
and
out
jo
call
and
pop
shrb
aas
out
fs
daa
mov
add
add
mov
add
cltd
mov
jmp
jae
push
fwait
repnz
adc
add
jmp
daa
aam
xor
adc
and
dec
sub
mov
cmp
mov
daa
ret
shrb
fisttpl
mov
cmpsl
add
add
cmp
jmp
jno
dec
push
lar
sbb
fdivp
in
push
pop
jecxz
fcompl
daa
pop
sub
aas
mov
or
in
or
add
inc
lret
mov
cmpsl
gs
aas
movb
std
jne
mov
cmpb
jae
fwait
and
call
pop
add
add
aad
ret
dec
data16
mov
cmp
push
xchg
dec
inc
or
in
aaa
fsubl
std
lcall
and
inc
add
ss
cmp
lock
sti
or
mov
push
push
jae
or
pop
loop
add
mov
mov
imul
data16
push
lahf
cmp
jmp
add
les
add
not
cmp
icebp
bswap
aas
movsb
lret
cmc
push
out
add
mov
dec
cmp
xchg
jmp
jae
sub
stc
push
dec
lahf
pop
cld
mov
or
imul
sbb
add
decl
rolb
adc
xlat
lret
sar
dec
sub
sub
jmp
cmp
cmp
jmp
add
add
ds
xor
aaa
ret
roll
inc
popf
jnp
loopne
jae
sub
lret
aas
out
repnz
and
cwtl
fldt
subl
push
jae
out
movsb
daa
sub
cmpsb
adc
pop
aaa
mov
icebp
push
js
nop
inc
stos
ds
iret
ret
fsts
xchg
add
add
push
xor
and
add
ret
add
adc
mov
adc
add
shll
adc
cmpsl
push
std
push
jb
mov
add
loop
out
adc
bound
pop
add
nop
aas
add
mov
jmp
gs
cmp
push
add
stos
iret
or
jmp
add
add
push
inc
mov
clc
ds
jmp
test
push
std
ljmp
sub
call
inc
imul
inc
jo
decl
insl
push
jne
push
jge
and
cmp
jge
push
call
div
call
orb
add
add
or
cmpsb
sti
std
xorb
inc
jle
add
mov
inc
lahf
in
inc
add
incb
mov
lea
or
jle
aam
fucomi
pop
cmp
and
add
enter
mov
or
je
xor
loop
jmp
pop
xlat
imull
lret
add
add
daa
add
mov
outsb
movb
xor
push
das
pop
mov
inc
mov
push
mov
dec
dec
cmp
pop
add
inc
jae
faddp
cli
and
push
add
xchg
lock
push
ret
pushl
pop
dec
mov
call
push
loop
cmp
jmp
pop
adc
call
pop
or
call
sahf
andl
push
inc
daa
aas
mov
cwtl
sub
out
popf
imul
mov
mov
ss
out
jmp
cmpsl
add
add
call
icebp
call
leave
dec
outsb
pop
jns
or
dec
inc
inc
mov
and
testl
ss
add
cmp
xor
add
add
add
add
pop
test
addr16
adc
aas
add
fistps
jmp
pop
and
push
es
test
jnp
call
pop
pushf
mov
inc
fidivrl
and
inc
std
loop,pn
push
mov
outsb
and
ret
das
outsl
std
mov
addl
adc
daa
ret
rclb
add
mov
call
push
or
cld
addr16
inc
push
ficompl
mov
lahf
and
mov
add
rorb
int
inc
and
aas
movb
call
push
and
add
jge
xchg
shr
add
add
imul
add
add
cmp
arpl
mov
arpl
aas
cs
add
adc
adc
cmp
and
add
pusha
pushf
in
cmp
xlat
or
sti
add
and
pop
pop
mov
inc
aam
pop
addr16
cld
and
loop
ljmp
mov
xchg
jmp
jno
and
add
sub
insl
mov
push
push
add
lock
and
adc
pop
add
and
clc
jle
or
pop
sahf
mov
add
sub
pop
and
and
and
mov
inc
and
xor
sbb
xor
cmp
and
pop
add
inc
aas
mov
fildl
sub
jo
out
add
add
sahf
pop
ret
add
pushf
rolb
arpl
movsb
jb
inc
xor
insb
push
inc
xor
jl
bound
mov
orb
aam
stos
pop
sub
jbe
and
imul
inc
or
out
js
iret
cli
nop
incb
cltd
iret
idiv
out
fidivrs
inc
add
inc
push
call
push
add
add
pop
adc
and
add
repz
outsb
mov
outsl
leave
mov
int
pop
mov
and
xor
pop
jl
add
and
sbbb
pop
adc
jle
out
call
outsl
or
fs
aas
add
decl
lock
cmc
cmp
xchg
cmp
pop
in
dec
cmp
sub
call
xchg
jnp
mov
and
cmp
and
jle
aad
cmp
test
cmp
mov
pop
sbb
mov
cmp
xor
cmp
mov
lret
das
fcomi
idiv
cli
pushl
ret
sub
pop
lock
add
mov
jbe
test
add
or
add
test
call
mov
xor
add
and
hlt
es
dec
xor
push
ret
decl
or
adc
add
cmp
add
rcrb
sbb
or
jnp
add
loop
sbb
xor
hlt
adc
add
sarb
and
jg
adc
mov
mov
add
add
sub
clc
cmp
je
add
in
test
arpl
punpcklwd
pop
repz
pop
rcrl
add
add
imul
mov
push
and
push
and
and
fs
and
test
xchg
bnd
and
add
add
pop
mov
add
rolb
sub
gs
pop
pop
insb
inc
aaa
insl
push
inc
sub
jl
pop
mov
out
sti
mov
jp
sbb
mov
pop
cmp
add
call
mov
lds
pop
fcoml
jecxz
test
push
cmp
lods
sbb
std
arpl
add
call
add
add
cmp
sub
pusha
jmp
call
mov
pusha
sbb
sbb
call
daa
mov
add
pop
jp
and
xchg
mov
push
fnstsw
pop
call
imul
mov
enter
mov
cmp
add
ret
and
ficompl
add
add
xlat
mov
in
into
arpl
adcl
rcll
cmpsl
ds
call
xchg
jmp
adc
jnp
push
dec
push
mov
out
mov
pop
in
int
or
add
daa
dec
call
add
add
jmp
pop
ljmp
and
add
add
push
paddq
sub
adc
add
jl
xchg
jmp
inc
jae
cwtl
loopne
xor
ja
add
mov
and
xchg
cli
cmp
jnp
out
add
iret
add
prefetch
dec
or
xchg
and
dec
or
jo
pop
out
pop
add
jo
hlt
sbb
test
fbstp
pop
add
es
add
add
add
gs
jae
in
in
push
add
in
cmpsb
pop
scas
mov
out
sahf
adc
mov
notl
lods
mov
mov
jne
daa
mov
dec
hlt
outsb
movq
mov
jnp
add
and
and
pusha
popa
mov
jo
roll
ja
out
jo
popa
flds
add
divl
imul
mov
mov
jno
iret
mov
adc
sbb
out
mov
and
sahf
jae
jne
mov
pop
inc
aaa
add
pop
mov
mov
cmp
pop
or
and
add
cmp
mov
sbb
cmp
shrl
add
fildll
jae
add
bound
inc
jae
int3
cmp
jmp
xor
jb
push
arpl
stos
cld
mov
sbb
imul
pop
and
add
int3
icebp
je
mov
cld
sarl
inc
push
jl
cmp
in
mov
mov
push
out
incl
add
sub
mov
fcoms
jno
aam
stc
cmp
sub
inc
mov
clc
mov
cld
adc
mov
je
mov
add
jge
cld
xchg
cmc
add
std
add
das
bound
cld
and
mov
out
xor
mov
mov
push
xchg
and
aas
xor
dec
fistps
rorl
test
add
inc
jae
flds
cmc
int3
aad
jmp
mov
push
out
dec
add
xlat
ljmp
mov
ret
inc
and
and
out
gs
in
add
xchg
ret
ja
adc
adc
add
pusha
roll
adc
fs
add
rcrb
inc
pusha
ret
popa
adc
add
fs
sub
mov
dec
sbb
fs
sub
mov
mov
mov
hlt
ret
jae
aas
ret
mov
and
cld
ret
dec
mov
dec
mov
or
aam
and
dec
incl
add
cmp
bound
sub
mov
mov
addl
aam
std
mov
dec
cwtl
push
inc
jmp
sub
mov
dec
pop
push
inc
jmp
daa
mov
mov
mov
push
inc
jmp
daa
mov
mov
dec
add
add
push
inc
jmp
daa
mov
mov
dec
rclb
xchg
daa
sahf
test
out
mov
mov
inc
jmp
ds
lahf
pushf
incb
mov
pushf
adcb
mov
inc
lahf
int3
mov
incl
pop
cwtl
adc
popa
gs
dec
inc
lahf
aam
add
mov
add
add
test
inc
lahf
in
add
mov
lods
push
movsl
inc
jle
lahf
nop
ds
mov
fmul
adc
popa
lds
aas
lahf
clc
stc
std
mov
pushf
jbe
inc
or
sub
shl
inc
std
mov
adc
pop
push
stc
sar
cmp
add
cwtl
adc
daa
pusha
sub
cwtl
sbb
inc
lods
lds
xchg
in
pusha
inc
call
clc
sar
lods
lds
jo
in
pusha
loopnew
add
xchg
in
in
pusha
xchg
test
mov
pusha
enter
cmp
fs
sub
popf
pop
add
add
mov
jg
pusha
jmp
sub
popf
pop
data16
dec
nopl
pusha
ret
subl
test
ret
stos
popf
jg
out
dec
jnp
jg
test
out
mov
jmp
sti
push
cmp
mov
ret
arpl
mov
aas
sahf
cmp
divl
mov
add
adc
aam
add
xchg
adc
test
loop
add
push
push
inc
jmp
and
xchg
pop
stc
mov
push
xor
jecxz
mov
jecxz
addb
xor
imul
clc
pop
cli
std
pop
mov
in
mov
push
dec
push
sbb
xchg
push
adc
or
mov
lcall
daa
ss
ret
lds
jmp
mov
add
daa
cs
add
lods
add
js
test
sub
je
push
test
test
xor
leave
pop
cld
dec
clc
sbb
adc
pop
push
call
mov
cmp
or
jmp
pop
add
sbb
lret
test
scas
cs
add
add
cmp
scas
and
mov
setnp
mov
dec
leave
pop
or
inc
sbb
icebp
jnp
push
int
jmp
inc
sbb
dec
adc
movsb
ret
sbb
jne
dec
add
in
xlat
pop
frstor
adc
jb
das
cmp
lcall
js
or
cmp
cmp
cmp
das
pop
incl
add
pop
dec
or
xor
testl
popa
inc
je
sub
repnz
repz
cltd
loope
ljmp
sbb
mov
adc
and
mov
xor
test
add
and
lret
ds
jmp
lods
xor
ds
cmpsl
push
lods
daa
enter
pop
xchg
test
add
inc
aas
push
xor
rorl
lahf
insb
fisttps
inc
fs
mul
mov
scas
mov
lret
mov
inc
xor
lahf
cmc
jg
mov
mov
out
and
in
pop
mov
insb
cmp
mov
jnp
movsb
or
adc
movsb
daa
push
incb
mov
add
add
xor
fsubrs
out
add
fldl
dec
aaa
inc
std
mov
mov
add
outsl
cld
jb
cmc
outsl
sar
jb
rorl
std
scas
jb
jb
fldl
cmpsl
scas
add
inc
cmpsl
mov
inc
mov
dec
inc
xor
jmp
inc
xchg
jo
insl
add
add
push
cmpsl
repz
insl
pop
hlt
std
dec
scas
jp
add
ljmp
insl
sarb
andb
cs
mov
sub
xor
or
add
push
scas
add
mov
movsb
inc
test
movsb
sbbl
orb
jno
xor
inc
cmp
cmp
aaa
mov
add
add
inc
int
pop
and
rcrb
ret
adc
mov
add
jl
add
cmp
fcmove
addr16
or
int
add
fs
dec
jae
stc
dec
push
test
pop
sti
jae
out
mov
lahf
cmpsl
add
sbbl
scas
out
push
pushl
in
std
ljmp
jno
add
fiaddl
add
aaa
or
xchg
test
mov
xcrypt-ofb
cmpsl
scas
add
test
adc
loope
jb
cltd
add
sbb
cmp
repz
jg
fildl
cmp
subl
fs
and
and
ljmp
add
lcall
and
out
fldcw
adc
scas
mulb
add
out
mov
add
and
lods
daa
lods
insb
testl
stos
xchg
repnz
iret
jno
aas
out
or
inc
shl
fs
inc
out
cltd
mov
pop
int
dec
or
fs
fs
sbb
decl
repnz
mov
repnz
push
pusha
scas
call
repnz
std
pop
xor
add
add
add
icebp
push
push
cltd
or
jmp
imul
cmc
clc
lock
fdivrs
pushw
inc
std
push
push
aaa
jno
mov
mov
mov
daa
aas
lds
dec
add
daa
enter
cmp
inc
jecxz
mov
jmp
mov
daa
xor
cltd
jl
loop
insl
jno
pop
fiaddl
push
icebp
mov
mov
add
mov
incl
push
sti
cld
or
test
mov
call
aad
clc
test
mov
nop
and
in
or
decb
rclb
pop
add
sub
inc
mov
sub
add
cmp
sub
mov
clc
add
add
clc
decl
cmp
cmp
orl
jge
inc
je
scas
rolb
stc
inc
xor
inc
push
dec
adc
pop
pop
enter
mov
lahf
sbb
xchg
inc
sub
xchg
test
das
out
or
movl
or
mov
add
add
mov
and
adc
imul
lods
clc
and
xchg
push
add
cmc
pop
addr16
and
hlt
movsb
ds
stos
cmp
lods
xchg
cmpl
fiadds
cmp
jbe
and
lds
fs
out
dec
sahf
daa
lods
dec
inc
imul
add
add
cmp
cmovae
ds
and
insb
push
sbb
out
push
ret
and
mov
jl
out
pop
xlat
jo
lret
pop
sub
ja
jp
jmp
sub
lods
cmp
mov
addl
hlt
stos
pop
inc
jmp
lcall
int
dec
push
sub
mov
xchg
addl
push
cmp
push
adc
jae
jge
mov
add
lds
mov
in
call
in
call
mov
in
xor
std
adc
xor
out
std
scas
sub
daa
inc
add
inc
out
sbbb
add
add
lea
ja
add
cmp
in
test
add
xor
dec
push
add
movb
cmpb
or
add
call
push
push
loopne
int
incl
leave
push
mov
in
inc
sbb
push
insb
inc
in
clc
stc
jmp
push
call
and
out
mov
pop
cmp
add
add
test
and
test
pop
out
jp
in
add
inc
and
rcr
pop
sbb
jp
inc
pop
ret
add
add
inc
and
rcr
outsb
sbb
aad
dec
inc
mov
add
add
inc
and
shl
pop
sbb
aad
dec
or
add
add
inc
and
shl
insl
sbb
add
addr16
add
inc
add
addb
add
and
mov
sbb
insb
data16
out
sub
cmpsl
sub
jmp
cli
pushf
add
sub
iret
jnp
stos
jmp
add
out
sub
and
into
jnp
bound
add
mov
scas
or
add
daa
mov
and
jo
inc
push
stos
add
cmp
outsl
and
popa
jl
pop
stos
add
cmp
xchg
push
inc
jmp
pop
loop
sub
mov
add
pop
xchg
push
inc
jmp
das
loop
sub
mov
sub
ljmp
add
add
aas
push
adc
push
inc
jmp
cmp
inc
pop
stos
stos
or
jmp
xchg
jle
out
jmp
std
sub
mov
push
inc
jmp
loope
mov
sbb
add
ret
sbb
loopne
addr16
movsb
std
mov
out
out
shrl
fnstsw
mov
add
add
add
jae
inc
jl
add
lea
adc
std
sti
rcrl
inc
add
add
lea
shl
push
decb
inc
push
mov
mov
push
cmpb
jae
inc
decl
mov
jle
sbb
mov
rolb
add
mov
push
mov
in
pop
outsl
out
cmp
pop
mov
mov
inc
mov
xchg
std
clc
insb
adc
add
jge
cmpb
pushl
imul
mov
icebp
js
sub
jle
pop
lahf
xchg
pop
adc
decb
jae
hlt
in
jle
add
add
mov
das
scas
ds
push
adc
mov
pop
fwait
add
scas
jns
push
pop
mov
outsl
decb
mov
jo
shl
scas
jns
sbb
mov
cmp
adc
jb
leave
fdivr
pop
mov
fwait
in
xchg
les
jecxz
les
inc
je
jae
jl
add
add
je
arpl
les
push
les
pop
les
push
les
jb
cmpsb
loop
cmpl
add
daa
aas
push
bound
jecxz
stos
daa
mov
lds
ja
lret
sub
std
int
adcl
add
test
aas
add
jmp
shl
xchg
arpl
add
and
dec
or
add
add
and
leave
mov
dec
lds
sbb
jo
and
lods
mov
dec
or
dec
sbb
pusha
xchg
and
push
mov
mov
ljmp
scas
and
loopne
or
mov
ljmp
scas
and
dec
mov
out
mov
ljmp
add
push
jecxz
iret
push
cmpsl
and
jnp
dec
loop
insl
jmp
sbb
dec
call
xor
pop
into
imul
mov
cli
std
mov
clc
cli
std
sar
cli
std
fucomi
cli
std
in
cli
std
out
clc
cli
std
stc
clc
cli
std
add
pushl
mov
call
es
fdivs
cmpb
add
and
cmpsl
or
out
jge
add
add
add
popa
loop
mov
aam
mov
es
adc
add
push
call
sar
xchg
lods
xcrypt-ctr
cmpsl
sahf
es
mov
push
adc
sbb
or
push
fwait
popf
add
adc
incb
mov
vpaddq
jp
add
into
xlat
js
ds
insb
rolb
add
aas
inc
mov
out
rcrl
fninit
ds
cltd
xor
shll
jns
decl
test
jmp
and
rorl
out
cmp
cltd
lret
mov
and
xlat
negl
aas
mov
mul
jns
ljmp
stos
adc
out
push
std
and
and
sub
add
add
aas
out
scas
jns
jnp
xor
add
mov
lea
inc
cmc
push
stc
inc
out
daa
xlat
pop
andb
mov
mov
sbb
aas
aad
call
push
inc
sub
aas
push
bound
in
stc
repz
lcall
call
sbb
pop
and
mov
push
pop
add
add
push
cli
and
mov
rcll
or
jmp
add
add
daa
xor
clc
mov
fimull
iret
movsl
dec
in
add
out
decl
mov
inc
pop
dec
and
sbb
je
xlat
ret
out
mov
and
pop
loope
add
add
xor
inc
or
decl
cmpsb
jmp
cmovno
add
xchg
cmp
or
add
imul
push
sbb
leave
push
aaa
aaa
pop
mov
mov
arpl
and
pop
jle
and
cmpl
add
push
lcall
sub
mov
xchg
pop
add
add
and
add
cs
mov
add
popf
ret
pop
push
rcrb
and
add
leave
jae
scas
adc
ja
xchg
rcr
and
out
mov
dec
ljmp
filds
and
stos
sbb
std
popa
cmpsb
and
aas
loop
sbb
or
nop
mov
mov
add
out
and
pop
enter
inc
or
add
ds
in
xorl
enter
nop
aaa
in
and
sub
aad
add
ds
xor
in
into
pusha
divl
mov
mov
clc
mov
subl
test
add
add
out
and
add
cmp
je
adc
lret
mov
shrb
aam
pop
sbb
call
pop
cli
jmp
add
lods
sbb
std
aam
loopne
sub
lret
flds
inc
in
call
push
aad
add
fs
mov
ffreep
pop
in
or
push
pop
add
add
scas
push
push
sbb
mov
daa
ret
rclb
adc
add
inc
xchg
sti
ret
mov
sub
cltd
arpl
adc
sarb
call
ds
inc
les
outsb
in
xlat
inc
add
es
fwait
inc
add
dec
lcall
inc
test
add
sti
add
add
add
fiadds
add
lret
dec
in
enter
ja
int
test
rol
add
and
inc
inc
mov
call
add
lods
sub
jmp
pop
popl
mov
pop
jae
xor
out
mov
and
nop
inc
xorb
test
fs
aam
xchg
pop
cmp
inc
adc
out
mov
and
mov
adc
mov
incb
mov
mov
pop
jg
jmp
sbb
fstpt
test
inc
les
push
ret
fwait
daa
aas
out
mov
out
mov
enter
push
loopne
call
inc
out
adcl
add
add
inc
cmp
clc
fidivs
push
cmpsb
xlat
call
add
and
cmpsb
mov
cmpsb
lret
cmp
push
mov
repnz
sarb
movsb
aas
ljmp
add
pusha
pop
xor
es
lods
sar
cli
fildl
cmp
aas
out
jo
je
aaa
sbb
sub
test
mov
push
push
and
add
jo
jae
add
add
xor
hlt
out
test
daa
aas
std
cmp
lret
adc
scas
imul
jmp
aas
aas
add
dec
test
aas
add
push
fs
daa
std
outsb
sub
jmp
adc
sbb
fisttpl
push
rolb
dec
mov
sub
leave
inc
add
rol
lds
fscale
xchg
add
into
ret
adc
sub
cmovo
cmp
mov
mov
stc
test
fidivrl
jmp
movsb
cmp
mov
push
leave
test
cmp
call
es
rorb
cmpb
or
add
negb
xadd
add
pop
fcoml
jne
enter
cmp
push
add
add
cmp
dec
bound
add
mov
pop
nop
dec
xchg
jmp
jle
loope
sbb
popa
dec
mov
cmp
test
pop
sub
mov
add
jb
add
lcall
into
leave
push
mov
sbb
and
stos
push
int3
inc
mov
add
into
testl
aam
mov
add
pop
add
in
call
scas
mov
jge
and
aas
daa
mov
loop
and
xchg
aas
mov
jb
cwtl
mov
outsb
jmp
xchg
out
cmpsl
inc
jnp
mov
inc
sbb
mov
rep
jo
imul
outsl
add
add
xor
inc
aas
insb
inc
sub
ret
add
aas
fnstenv
jae
lods
ss
xor
pop
or
jecxz
push
les
rdtsc
std
addr16
sbb
xchg
mov
mov
inc
cs
std
es
mov
sub
lcall
and
mov
cs
pusha
add
add
out
sbb
xor
hlt
out
ljmp
xchg
add
daa
add
mov
add
and
inc
in
mov
sbb
fscale
cmp
sub
daa
aas
add
cmpl
cmp
cmp
data16
sub
push
or
std
add
iret
cld
call
in
add
add
push
sub
adc
arpl
xor
rclb
std
shlb
mov
sub
int3
inc
xchg
mov
push
add
lods
in
pop
xchg
gs
cmpl
pop
rolb
mov
fdivrp
call
fsin
jne
mov
push
xchg
mov
push
add
add
push
lcall
adc
and
xchg
out
int
mov
xchg
addb
or
pop
add
inc
push
mov
popa
mov
test
pop
in
lret
int3
mov
fistpll
add
ljmp
je
add
pop
xor
add
addr16
psrlq
incb
xor
pop
cmp
add
sub
pop
mov
push
enter
gs
outsl
es
icebp
test
and
dec
sub
rol
and
ret
add
cs
test
mov
orb
imul
pop
fisubrl
enter
sub
mov
or
mov
cmp
add
add
outsl
ds
sbb
into
lock
sub
add
inc
cli
cmp
shrb
test
popf
push
push
test
lods
ret
pop
aam
enter
sti
dec
aam
jbe
and
lods
cmp
data16
mov
cmp
push
mov
out
test
and
adc
dec
fcompl
adc
aas
jmp
pushf
add
add
stc
inc
push
and
add
fcoms
fwait
sahf
call
adc
std
jmp
fadds
jmp
movsl
push
adc
xor
imul
sbb
lahf
call
scas
aas
mov
incw
cmp
and
mov
add
push
pop
push
push
lret
call
add
add
rorl
inc
push
shlb
dec
call
jbe
rorl
and
add
insl
sub
lock
movl
sub
roll
push
ss
rorl
push
sub
out
mov
es
jmp
and
add
test
incb
add
cmpsl
mov
mov
mov
out
mov
cmp
sub
and
mov
jno
sub
sbb
in
out
or
mov
add
ljmp
pop
scas
out
sbb
and
jmp
cmp
sldt
add
addr16
mulb
test
push
mov
adc
fistps
add
xchg
mov
out
or
aas
mov
jmp
xchg
adc
leave
aaa
cmp
je
pop
jo
cltd
das
clc
lods
movntps
out
js
es
stos
sub
add
rcr
xor
jg
push
add
add
les
sahf
jp
push
and
test
call
gs
sub
add
pop
dec
or
add
call
es
mov
fldenv
push
lea
aas
push
bound
mov
sub
xor
int
clc
mulb
stos
mov
movsb
dec
subb
add
iret
dec
cmp
inc
aas
add
dec
or
addr16
call
sbb
jno
jle
inc
bnd
shrb
aas
add
dec
in
push
lds
adc
and
jge
std
add
or
ljmp
filds
ret
shrl
rcrl
inc
testl
cmp
leave
cmp
add
xor
dec
xor
mov
gs
std
mov
sti
test
incb
xor
add
inc
jle
and
jmp
dec
inc
lock
xchg
dec
jg
inc
xchg
mov
das
adc
cwtl
add
test
xchg
add
jg
jl
je
cli
cmp
add
xchg
sbb
add
das
lods
xchg
repnz
lret
cmp
or
loope
mov
outsb
add
cmp
adc
sbb
jae
push
mov
jle
cli
and
fadds
push
mov
inc
aam
sbb
add
add
mov
cmp
push
test
add
and
xchg
or
mov
add
and
add
add
add
into
pusha
cltd
add
loop
cltd
pop
and
jb
bound
int
cwtl
stc
mov
sub
jecxz
jb
and
jb
push
mov
jg
dec
aas
out
sub
fdivr
scas
push
inc
pusha
aam
sbb
aas
out
jae
test
and
jb
ud1
jge
mov
sldt
add
mov
xchg
sti
lret
sbb
jecxz
add
dec
out
daa
sar
mov
int
sub
cmpsl
pop
leave
add
leave
pop
pop
iret
test
and
bound
xchg
call
jb
sar
cmp
cmp
int
xor
push
in
ror
jno
inc
add
add
sar
mov
inc
aas
add
sar
mov
lods
cmp
in
cmp
das
cmp
call
es
jae
dec
scas
negb
push
jne
cmp
cmp
xor
incl
orl
mov
xlat
add
lds
add
xorl
mull
add
or
dec
mov
inc
mov
add
xor
inc
jmp
in
mov
add
mov
in
mov
and
add
add
mov
mov
dec
dec
fsub
addl
mov
test
add
and
xchg
lods
and
fdivs
pop
movsl
inc
add
and
mov
sti
out
in
and
pop
xor
rolb
add
add
fs
add
test
sbb
and
cld
mov
fsts
lret
mov
fbld
mov
fsts
lcall
or
popa
add
hlt
or
push
mov
sub
add
jle
lock
je
sub
or
mov
ret
lret
loope
je
leave
jo
add
add
les
cld
cmpsl
ds
cltd
sub
test
and
mov
mov
cmc
jo
jg
mov
jb
imul
inc
push
add
rcrb
xchg
add
hlt
mov
mov
sbb
mov
sti
mov
or
xchg
add
sbb
jns
sub
mov
or
scas
bound
add
add
add
adcl
pop
js
lods
and
call
xchg
rclb
daa
aas
add
roll
pushf
loopne
cmc
sub
jmp
jmp
std
ret
push
leave
push
ja
aas
add
xchg
push
add
call
popa
fs
mov
std
jle
jb
in
add
add
loopne
sti
and
mov
test
jnp
idivb
jae
xor
add
dec
lahf
or
add
cmp
dec
mov
add
aas
xor
jge
add
std
sub
xor
pop
pop
aam
add
sbbl
in
jns
push
push
push
ss
pushl
fisttps
fwait
mov
xor
cmp
daa
enter
fistps
pushl
filds
xor
add
into
sub
add
add
loop
fstl
and
push
cld
jmp
cmpb
fdivrs
int3
sbb
scas
xlat
add
sbb
pop
push
test
add
and
punpckhwd
add
iret
mov
add
pop
mov
scas
and
fdivrl
inc
inc
fldl
jmp
popa
cmp
and
add
loopne
add
mov
adc
cmp
and
dec
add
aas
jb
inc
daa
insb
push
inc
sub
jl
mov
sub
inc
add
and
add
fimull
mov
pop
push
out
es
xchg
mov
int3
flds
sub
pushf
lods
aas
out
pop
sbb
sbb
test
add
in
push
negl
xlat
sbb
test
add
les
loopne
xlat
aaa
jno
lds
cmpsb
fidivrs
out
sahf
rolb
push
int3
cmpl
insl
xchg
add
add
cmp
scas
xchg
vpunpckldq
or
divb
add
daa
insl
push
xchg
mov
add
lret
fdivl
and
push
and
movsb
lret
js,pn
fnstcw
xchg
cmc
sub
test
mov
push
push
cli
call
bound
mov
jb
fmull
mov
aas
push
bound
fcompl
test
add
add
add
mov
test
xor
ljmp
lds
and
cmp
and
sub
call
jbe
and
orb
jb
add
xor
inc
inc
and
mov
std
mov
iret
gs
aas
add
fwait
and
jne
lar
dec
and
inc
cmc
call
add
add
add
add
push
divb
jge
dec
aas
je
mov
mov
mov
test
nop
sbb
sbb
add
std
sub
lcall
in
repnz
or
jno
pop
or
push
cmp
int3
std
data16
shlb
mov
add
cld
icebp
out
add
scas
pusha
add
lahf
pushf
fisttpll
add
aas
add
ja
cmpsl
cld
or
scas
nop
jle
and
imul
jl
fdiv
orl
add
insb
mov
or
and
dec
outsb
aas
out
js
bound
adc
and
call
add
imull
add
add
xchg
sti
scas
icebp
aas
cmc
mov
out
and
imul
cltd
sub
mov
out
push
aaa
jb
mov
inc
add
call
add
negl
gs
add
mov
or
icebp
iret
nop
aas
add
sbb
jno
nop
ret
std
jmp
sub
fcomps
sub
andb
call
add
add
aas
jae
out
jl
jecxz
aas
add
das
add
cs
inc
stc
and
add
es
or
ret
ret
sar
jne
mov
in
add
aas
xchg
mov
sbb
adc
andl
cmp
test
pusha
add
push
pop
ret
push
mov
add
popa
imul
fs
jnp
sti
add
cmp
pop
pop
cld
in
cmp
cld
adc
mov
sub
jge
sbb
mov
add
mov
mov
mov
adc
mov
cmp
add
int
xchg
shll
pop
mov
clc
call
add
add
movsb
std
call
lret
xor
and
add
iret
add
dec
dec
add
in
xchg
xchg
and
bound
popf
leave
xor
lods
shll
gs
adc
lahf
and
add
xor
in
adc
lahf
std
and
xor
mov
xor
pop
add
das
sbb
daa
mov
pop
adc
lahf
fisttpll
push
add
add
in
or
add
imul
movsl
add
pushf
jecxz
test
adc
adc
fucomip
or
pushf
add
pop
dec
xchg
push
add
cmp
cmp
pop
add
sub
loop
inc
lret
dec
out
mov
inc
out
in
jo
cmp
sub
mov
jo
add
add
inc
pusha
dec
and
sub
stos
push
fdivrl
out
jb
adc
lret
cmpsl
jle
xchg
out
hlt
and
dec
cmp
std
pusha
jecxz
sub
push
aas
add
inc
addl
pop
mov
xor
inc
or
fsubl
jb
bound
daa
inc
add
cld
inc
cmp
dec
inc
mov
cmp
add
daa
aas
call
pusha
pop
arpl
loopne
test
movsb
arpl
jmp
daa
aas
mov
push
inc
jmp
jmp
std
add
lret
xor
lret
inc
and
es
push
addr16
or
cmp
add
add
and
leave
sar
adc
call
mov
mov
and
mov
stos
add
xor
or
test
std
aas
xchg
xchg
daa
je
and
push
xorb
or
or
add
sub
push
adc
je
enter
and
add
add
add
sbbb
push
dec
std
xor
inc
and
inc
and
popf
xchg
rorb
leave
je
and
in
adc
mov
and
cmc
js
sub
ret
push
aad
aam
fs
add
and
adc
inc
and
and
add
cmp
or
jnp
sti
std
scas
in
sbb
in
and
mov
add
add
movsl
mov
cmp
lret
imul
jecxz
jmp
imul
sti
pop
in
push
pop
cmp
jne
and
jbe
adcl
cmp
ds
sbb
xchg
std
aaa
sbb
inc
and
cmp
xor
daa
std
add
cld
mov
ret
add
lret
cld
add
add
cmpsb
xchg
decl
mov
adc
shlb
aas
out
adc
cmpsb
pop
dec
aas
jmp
pop
and
add
call
and
mov
push
call
sub
mov
std
sbb
bound
or
call
js
fucomi
daa
out
call
and
pop
add
add
jecxz
arpl
push
call
imulb
dec
mov
or
mov
imul
mov
leave
mov
fldcw
aas
mov
sub
addr16
aas
add
dec
pop
adc
std
aaa
call
inc
fwait
xchg
mov
sti
adc
add
add
mov
je
push
pop
stc
call
mov
sbb
cld
dec
cmp
in
andl
push
movl
sbb
cmp
lea
push
push
sub
clc
pop
adc
enter
sub
adc
mov
imul
and
sub
add
add
push
shll
push
or
add
inc
int3
add
pop
movsb
add
stc
test
divl
fs
or
addr16
push
pop
in
and
rorb
mov
jo
sbb
inc
and
fnstenv
adc
std
pop
cmpsl
outsb
sbb
ss
test
add
incl
add
sti
aas
insb
les
int3
sub
jge
dec
stc
jp
sub
dec
out
lahf
and
mov
lret
add
mov
stc
test
mov
jecxz
and
decb
fcoms
add
aas
out
incb
cmp
inc
fs
and
out
imul
inc
shrb
and
cmp
and
add
sti
jmp
stc
sub
subb
or
adc
add
pop
enter
sarb
push
pop
aaa
xchg
jnp
std
inc
inc
cmp
mov
mov
cs
sti
imul
xor
sub
mov
in
inc
aaa
insb
jecxz
std
out
or
ljmp
add
mov
bound
adc
pop
xor
and
sbb
scas
xor
add
xor
mov
icebp
jle
bound
add
aaa
mov
add
mov
mov
lods
cmc
add
int3
inc
add
lock
adc
mov
inc
fcompl
add
call
add
add
inc
add
call
ja
adc
and
jno
pop
loop
aam
ds
shl
std
mov
lods
add
ss
pop
rclb
sti
jmp
roll
enter
ret
and
ret
xor
ja
inc
or
or
shl
adc
inc
add
movsl
add
add
add
adc
std
lret
je
call
mov
cmc
mov
and
jmp
popa
popf
and
gs
push
cltd
mov
int
sahf
mov
cmpsl
add
cli
sbb
push
mov
lock
cmpsb
jle
mov
jg
xor
sbb
sbb
inc
and
mov
add
and
scas
push
or
adc
xchg
mov
push
xchg
gs
out
hlt
aaa
out
stc
inc
and
lods
mov
push
xor
sbb
xchg
mov
adc
mov
or
lods
pop
cmp
push
sub
jecxz
imul
arpl
push
sub
jmp
lods
hlt
inc
cmp
dec
xor
push
or
inc
xchg
xor
ljmp
add
add
mov
xchg
paddw
mov
movb
scas
je
and
call
push
pop
pop
jb
mov
stos
push
in
sbb
fnstcw
push
enter
sub
and
or
sub
cs
dec
icebp
movsb
test
jb
cmpsb
in
es
subl
inc
inc
push
inc
cmp
add
add
popf
xor
rclb
pop
and
add
mov
and
std
in
push
pop
push
add
xor
mov
sti
add
lods
or
das
or
adc
xchg
movsl
and
mov
mov
lar
cmp
into
cmp
add
xor
mov
mov
push
push
add
add
nop
add
aaa
push
sbb
mov
mov
or
mov
jnp
roll
add
jae
cmp
das
or
dec
jno
add
enter
add
addr16
clc
pop
jno
mov
pop
or
testb
push
mov
add
addl
add
ljmp
or
or
push
push
jae
lahf
rcr
xchg
sahf
cmpsb
add
lahf
ret
sbb
add
popf
xchg
lcall
cmpsb
add
push
fdivrs
mov
mov
jae
jmp
lret
out
jp
mov
sub
sub
sbb
ret
mov
mov
add
add
add
xchg
imul
out
adc
jb
dec
mov
push
or
cld
jecxz
add
frstor
inc
sbb
push
aaa
adc
and
sub
and
cli
int3
and
jg
jno
lock
or
sub
imul
loope
fwait
outsb
xchg
xor
add
testl
cmp
aas
add
add
shlb
fstps
pop
dec
mov
sbb
cmp
mov
mov
xor
hlt
xchg
sub
sub
xor
push
mov
cmc
jl
jae
hlt
add
bound
subl
decl
daa
ret
rcl
inc
jnp
inc
add
xchg
fistps
dec
incb
jb
movb
add
cmp
js
and
scas
aaa
fcomip
dec
xor
add
stos
mov
adc
ror
add
xor
xchg
cld
mov
stos
mov
xor
mov
pushl
test
cld
sub
dec
pushf
dec
in
push
call
jp
jns
int
jae
jp
in
call
add
add
cli
jmp
outsb
rcrb
ret
pop
xchg
ds
cmp
push
dec
push
adc
mov
and
add
push
push
push
aam
jae
ds
and
movsl
incb
lahf
imul
mov
imul
mov
xor
shll
in
jnp
cld
push
fnsave
inc
and
pop
xchg
add
add
sbb
inc
cld
inc
pop
call
js
int3
push
idiv
fldt
dec
loopne
push
incb
scas
sbb
mov
xchg
add
and
mov
mov
out
fs
xor
mov
and
push
cmpb
xchg
inc
out
scas
add
push
int3
pop
push
inc
and
ja
xchg
test
add
add
jo
inc
shll
and
xor
cmpsl
mov
xchg
out
lahf
add
push
jle
mov
stos
cld
sti
add
jbe
and
sub
cmpsl
jg
xchg
cmp
push
add
add
push
cmp
aam
and
mov
fisttpl
add
daa
mov
inc
jb
cmpsb
subl
mov
adcl
add
add
aas
add
call
pop
shrl
xchg
call
daa
cmp
mov
jecxz
or
jmp
xchg
xchg
xchg
cwtl
or
mov
out
xlat
call
jl
call
jbe
mov
jo
push
call
pusha
fs
mov
jle
in
add
add
add
test
inc
lock
std
jge
add
add
push
call
idivb
push
call
and
add
fimuls
loopnew
adc
xchg
sbb
adc
xchg
aas
add
add
push
push
dec
push
mov
mov
std
inc
ja
xchg
add
idivb
or
daa
inc
clc
add
add
inc
sti
jne
xchg
jno
jne
testb
xchg
add
fdivrl
mov
jle
mov
pop
jne
hlt
xor
popf
aad
call
inc
xchg
jo
jnp
mov
dec
xchg
xchg
add
dec
cmp
enter
call
cmp
call
lahf
pop
enter
add
push
jae
adc
add
addr16
jmp
mov
adc
in
daa
mov
ljmp
add
cmp
faddl
test
idivl
mov
add
xor
adcb
pmulhw
pop
pusha
jbe
mov
out
lahf
idiv
xorl
stc
arpl
loopne
add
add
xchg
sbb
iret
push
int3
and
test
clc
xor
out
fisttpl
scas
repnz
push
or
out
shll
daa
push
lahf
add
jno
jge
js
cmpsb
std
insl
call
movsb
std
bound
cmpsl
push
inc
dec
mov
call
movsb
movsl
std
ss
jge
icebp
add
add
or
push
cmp
jmp
repnz
std
cmc
dec
xchg
jl
call
mov
xchg
fisubs
aas
std
aas
or
or
idivl
sbb
pop
xchg
inc
xchg
ret
aas
std
pop
sbb
jle
add
aad
add
xchg
jbe
inc
sbb
lret
jno
cmpsb
add
add
add
jecxz
test
sub
push
mov
jbe
add
cmp
clc
and
decl
inc
mov
inc
add
nop
and
sbbl
or
int
add
jp,pn
rclb
lcall
call
push
stc
gs
push
sti
fiaddl
mov
subb
add
add
add
jnp
jp
in
mov
or
mov
add
xchg
mov
lea
add
in
mov
gs
xor
ret
das
jle
inc
in
push
add
lods
popf
cmp
and
sub
mov
std
push
sbb
out
dec
pushf
sar
add
add
pop
incb
xlat
dec
push
push
and
jl
sub
loop
nop
inc
adc
jae
fsubp
pop
aas
cmc
inc
and
cmpsl
jo
out
call
fmuls
adc
cs
shl
mov
add
mov
lods
xchg
push
dec
adc
push
andl
jg
add
fwait
cmp
fbstp
data16
xlat
cmp
cli
sbb
add
mov
or
and
xor
adc
xor
cmpsl
addl
daa
aas
inc
push
cmp
xchg
es
mov
inc
jmp
imul
jno
xor
pusha
dec
dec
xor
movsl
arpl
dec
push
mov
inc
push
add
mov
test
test
daa
aas
add
add
gs
mov
jecxz
mov
mov
movsb
push
int3
xchg
or
call
lods
std
add
popa
clc
or
adc
push
jo
clc
push
cmp
jg,pt
shrl
mov
scas
xor
lds
push
add
je
inc
icebp
idivl
or
data16
cmp
sti
jne
push
cmc
mov
stos
inc
enter
sbb
ja
inc
ds
sti
jne
sub
and
adc
adc
lods
test
xchg
jl
jg
imul
test
xchg
push
jmp
xchg
shrl
inc
adc
lea
add
loope
inc
inc
and
sbb
or
sarl
push
add
loope
call
stos
icebp
addr16
je
jecxz
and
add
int3
aaa
mov
mov
jmp
push
mov
aas
hlt
test
insl
in
inc
xchg
xchg
add
je
dec
mov
cltd
mov
fcom
push
lods
shl
out
add
xchg
sbb
add
sub
ss
popf
outsb
add
insl
cmpsl
inc
lret
lds
adc
mov
mov
jmp
add
pushl
or
outsb
add
or
lahf
mov
dec
jb
lods
stc
fimuls
outsb
xchg
add
jne
mov
or
loop
pop
cmp
mov
xchg
sub
out
push
adc
popl
pop
test
loop
jle
or
add
push
cmp
xchg
call
test
or
pop
sub
jo
cmpsl
xchg
pop
daa
aas
xchg
scas
xchg
jmp
js
std
jmp
in
sahf
push
hlt
push
push
pop
mov
or
dec
mov
movb
add
mov
push
popa
fisubs
mov
adc
jbe
daa
enter
xchg
std
cs
add
xchg
lahf
adc
call
pusha
jecxz
addl
testl
fmuls
je
lahf
jno
push
call
mov
xchg
mov
xor
adc
test
xchg
aas
xor
call
out
adc
add
or
inc
xchg
test
idivb
mov
lret
inc
lcall
sarb
pop
pop
jbe
ret
push
xchg
mov
dec
push
push
push
mov
and
test
and
add
arpl
int3
push
push
inc
and
call
lods
push
push
add
add
mov
xchg
xchg
nop
insb
xchg
cwtl
pusha
cmpl
cmp
push
push
scas
out
popf
and
mov
and
pop
loope
enter
xchg
iret
inc
cld
push
mov
push
push
mov
and
xchg
out
aaa
and
jmp
xchg
int3
add
out
daa
xlat
ja
and
mov
add
add
test
clc
arpl
jno
lods
add
xor
es
in
lcall
aaa
pushf
out
xor
and
mov
cmpsl
add
and
pop
int3
scas
call
ss
dec
add
adc
movsb
fs
outsl
xor
and
scas
fisubs
test
imul
daa
add
inc
jno
and
das
mov
cmpsl
xor
stos
fwait
pusha
push
add
add
aas
jg
and
add
dec
std
pop
mov
add
inc
add
ss
mov
pushl
cmpsb
mov
adc
out
sub
mov
cwtl
xchg
std
lahf
push
inc
mov
sub
pusha
arpl
pushl
cmpsl
xchg
xchg
rcrl
shlb
add
daa
aas
add
jb
or
jmp
mov
pop
sbb
into
add
dec
xchg
push
shll
mov
jp
jge
cmpsb
gs
jl
add
xor
shlb
cmp
cmp
out
inc
mov
loopne
std
inc
call
test
lock
add
add
xchg
jnp
sbb
or
repz
add
cmp
dec
or
fdivrs
orb
int
add
bound
jmp
and
test
arpl
cmpsl
add
repnz
push
test
cmp
call
testl
lret
add
add
dec
sbb
mov
inc
xor
fnstsw
or
sub
add
hlt
out
popa
sbb
cld
or
clc
push
inc
add
xchg
and
cmp
mov
rcr
std
fldt
pop
aaa
mov
push
aaa
cmp
arpl
lock
push
test
sub
pop
inc
jg
and
addr16
imul
adcl
lock
cwtl
push
sbb
fwait
push
scas
ret
push
cwtl
setp
ds
scas
ret
cmp
fstp
sub
mov
xor
adc
mov
cmpsb
vmread
cwtl
fs
add
movsl
jmp
mov
fs
sub
dec
xchg
xchg
aas
jae
xchg
out
push
lcall
add
add
cmpsb
dec
insl
sub
push
pop
push
inc
push
inc
fstpt
or
mov
push
imul
std
jb
mov
xchg
std
jl
mov
mov
mov
shlb
jg
call
and
mov
add
adc
push
xchg
mov
and
add
aas
subl
mov
daa
sub
rolb
add
stos
lea
int
les
push
mov
xchg
stos
pop
mov
adc
push
push
adc
jge
inc
sbb
pop
add
adc
sti
cmp
in
int3
cmpsb
push
or
add
jbe
dec
ret
call
add
add
sti
decl
ljmp
inc
or
imul
je
clc
push
and
mov
std
popf
shlb
in
mov
add
and
cmp
lcall
push
ds
popf
fimull
push
scas
gs
mov
xor
mov
add
fsts
imul
cmp
jb
inc
sub
mov
scas
mov
in
inc
add
xchg
sbb
jae
adc
or
aad
sbb
dec
inc
add
fsts
bound
cmpsl
adc
cmpsl
xchg
jg
ds
cmpsl
js
jg
ds
lahf
mov
aas
ljmp
add
aas
out
and
shll
ss
mov
mov
in
call
or
ds
dec
or
mov
lcall
xor
out
jmp
mov
xlat
mov
into
push
add
imul
add
and
out
ja
std
push
ss
lods
mov
xchg
repnz
call
arpl
add
cmpsl
xlat
fdivrs
xchg
add
cmp
add
daa
mov
test
hlt
xchg
andl
and
mov
ret
sahf
xchg
addl
sbbl
adc
std
push
aas
pushl
daa
in
mov
std
div
movl
call
shlb
push
cs
push
ret
lea
dec
call
cmp
inc
dec
add
aaa
jge
mov
dec
adc
test
inc
cmp
js
out
gs
inc
jge
jne
jl
xchg
hlt
nop
in
add
add
hlt
xor
jmp
mov
add
test
adc
add
dec
popa
xchg
into
sahf
clc
xorl
mov
push
push
and
or
sub
xor
xchg
lret
xchg
cld
xchg
hlt
cld
adc
out
aas
and
cmp
or
jmp
jge
test
add
neg
xor
mov
or
cmpl
add
imul
orl
add
add
add
and
mov
inc
hlt
aas
xchg
andb
adc
cmpsl
nop
jne
int
jno
mov
sbb
insl
addr16
lret
xchg
cmpsl
pop
sbb
shl
stc
sub
dec
inc
sub
repz
out
pop
dec
cmpsl
pop
pop
out
pop
dec
add
dec
or
dec
add
dec
add
add
call
lret
pusha
pop
or
nop
out
jb
call
xor
dec
or
xchg
xchg
add
xchg
daa
call
nop
arpl
sbb
popl
call
dec
dec
in
out
vsqrtps
jmp
call
mov
add
stos
mov
add
mov
add
daa
dec
std
xchg
mov
pusha
ljmp
xchg
mov
xor
or
inc
inc
push
ss
jb
add
outsb
and
sub
shr
mov
ficoml
and
mov
jns
fdivs
out
incl
add
rorb
outsl
mov
push
lea
cmp
mull
xor
push
inc
and
push
mov
push
mov
push
and
adc
xor
je
in
testb
data16
push
out
and
pop
xor
and
mull
and
es
push
mull
and
out
add
mov
add
dec
clc
ss
jl
jb
cmp
int3
jle
cwtl
jle
or
ftst
aaa
popf
sar
cwtl
cmp
addl
add
sbb
inc
and
aad
and
sub
or
call
test
push
adc
xor
adc
mov
out
flds
add
pop
add
push
cwtl
fcmovb
add
add
dec
test
jl
fnstsw
lods
pop
incl
jl
cmp
cmovp
ds
insl
mov
daa
add
push
xor
mov
jl
jmp
pop
and
mov
and
imul
ret
jp
and
fs
inc
push
aaa
fsub
lret
iret
sub
jae
nop
aas
out
addb
sarb
add
sahf
cwtl
or
add
or
sbb
inc
sarl
repz
rclb
roll
adc
clc
sahf
add
hlt
repz
out
aam
ljmp
sub
add
pop
jl
test
push
and
jmp
xor
mov
dec
cmp
jb
mov
out
arpl
fimuls
adc
and
inc
add
add
mov
pop
xchg
add
daa
mov
lds
ljmp
and
call
cmp
std
mov
mov
cmp
daa
adc
jmp
sub
bound
gs
fwait
bound
call
pushf
imul
or
or
test
inc
add
dec
cmp
xor
inc
and
test
cmp
cli
push
xchg
lcall
sbb
lcall
sbb
sahf
ret
or
cld
enter
or
jae
or
ss
test
icebp
cmp
or
jmp
call
sti
adc
jl
push
call
adc
mov
xlat
add
add
and
jl
lcall
xor
and
xchg
int3
je
nop
int3
aad
mov
push
mov
test
std
nop
cmp
cld
mull
shll
push
and
adcb
cwtl
int3
je
mov
inc
add
push
sub
test
call
sub
out
aas
and
ss
adc
sbb
into
adc
add
add
adc
dec
sub
testb
mov
xchg
dec
idiv
cmpsl
into
out
and
pop
ds
mov
fcomip
mov
lret
and
jecxz
movsl
xchg
push
daa
mov
lea
mov
mov
jmp
stos
ljmp
mov
cmpsl
push
xchg
push
mov
enter
in
add
add
movsl
bound
mov
movsl
xchg
jmp
push
ret
xor
fs
add
daa
aas
mov
ja
lahf
loop
aas
test
aam
mov
enter
clc
out
out
xchg
bound
mov
leave
inc
std
lcall
jmp
aas
xchg
add
out
mov
jb
aaa
pop
jo
out
sub
jg
in
in
mov
stos
mov
add
daa
out
push
push
xor
call
pusha
add
shl
cmp
adc
jecxz
dec
lea
push
lea
and
imul
jl
and
cmc
jl
xchg
es
sub
inc
and
push
jl
and
add
mov
test
add
pop
push
inc
and
dec
call
mov
cmp
xor
dec
call
cmp
out
pop
cmp
adc
add
std
inc
mov
push
push
mov
add
and
and
mov
fs
jl
mul
or
sbb
pop
inc
push
sbb
and
and
mov
pushl
add
lods
test
arpl
mov
inc
or
jno
and
adc
lret
roll
sub
lcall
and
cmp
sub
jp
rcrl
dec
cmpsl
cli
movl
fcmovb
enter
jle
push
insl
pop
add
out
inc
dec
sub
and
arpl
xchg
sub
mov
imul
cmp
dec
cwtl
in
jle
push
inc
out
xchg
or
fsubrl
push
enter
lods
clc
pop
rcl
add
out
cli
test
xlat
cld
add
enter
inc
and
jmp
stc
aam
mov
test
cmc
arpl
push
sbb
inc
adc
les
push
add
add
aas
push
out
lock
xor
inc
and
incl
sbb
cli
push
add
cmpsb
jnp
sahf
push
sub
outsb
test
cmp
inc
jp
daa
loop
mov
and
mov
jmp
sub
sbb
aaa
addb
add
aas
mov
sbb
ret
or
popf
sbb
push
add
add
and
call
sahf
xchg
dec
cwtl
adc
inc
loope
mov
mov
clc
xor
into
cli
ror
add
lods
lock
mov
mov
scas
clc
xchg
out
repnz
lods
mov
jb
mov
cmp
sbb
add
mov
adc
jnp
cmpl
sldt
add
stos
and
or
push
mov
push
or
inc
mov
or
decb
cmp
mov
xchg
mov
sti
decb
std
je
pop
inc
adc
out
xchg
inc
into
jmp
aaa
sbb
xlat
push
scas
test
gs
pop
fdivs
stos
xlat
adc
xchg
dec
sldt
add
mov
icebp
ds
lods
jb
or
cmc
xchg
out
push
into
sbb
push
std
arpl
pop
insl
push
clc
clc
sbb
cmpl
fs
xor
rcll
rcrb
jp
cld
push
inc
in
mov
add
and
jb
sub
xor
mov
das
pusha
cs
inc
mov
mov
call
and
and
popf
jmp
jns
xor
roll
mov
pop
xor
and
cmp
jns
xchg
jo
js
mov
or
inc
aam
popf
popa
add
xor
in
js
mov
testl
testl
cmp
cmp
mov
in
add
inc
and
add
or
add
daa
add
mov
xchg
jl
imul
decl
stc
cmp
add
and
push
dec
mov
jo
sub
mov
test
std
xchg
jae
lods
jnp
bound
lcall
out
in
pusha
int
or
aas
mov
idivl
lods
xchg
add
add
inc
lret
leave
add
daa
addb
add
jmp
mov
mov
aaa
ret
clc
cmp
mov
aaa
ja
les
add
jmp
fmuls
cmpb
jge
mov
hlt
xor
sarb
mov
ds
fiaddl
mov
xchg
mov
loopne
and
addl
add
mov
loopne
inc
or
aad
xor
out
sarl
dec
adc
div
add
xchg
orl
loope
mov
jg
clc
sub
sahf
adc
shll
xchg
inc
cmp
adc
and
mov
mov
scas
movsl
pop
pop
outsl
lahf
sbb
shr
cmp
cmpsl
int3
dec
mov
mov
ss
xchg
testl
enter
cmc
push
mov
add
daa
mov
inc
rorl
inc
int3
push
popf
fcmovne
jmp
adc
movsb
ret
stos
adc
std
pop
dec
pop
nop
and
in
in
movsb
sar
inc
bound
call
fisttpl
add
add
pusha
inc
lock
and
sbb
add
js
fidivrs
imul
adc
mov
orl
nop
leave
sub
popf
add
pop
arpl
test
pop
out
cmp
leave
sub
pusha
ss
lods
fldt
jge
leave
out
add
pop
add
call
mov
stc
jecxz
add
add
inc
mov
scas
adc
jae
cmp
pop
inc
std
lods
ret
adc
pop
add
inc
movl
cmp
add
mov
gs
add
xchg
popl
and
aas
mov
ss
mov
mov
leave
push
mov
leave
push
outsb
test
cli
jmp
sbb
inc
sub
add
add
addb
enter
sarb
dec
addl
jmp
pop
cmpb
mov
xor
cmp
inc
mov
jne
push
dec
mov
inc
jmp
dec
adc
or
jno
inc
inc
push
clc
xchg
jne
mov
jno
movsl
jmp
lock
add
int
lcall
stos
sti
jne
dec
mov
sarl
and
add
loope
mov
in
inc
cmp
mov
or
sub
lock
sub
call
daa
pop
addb
mov
out
shlb
cmp
add
inc
or
mov
in
int3
adc
inc
mov
fildl
add
cwtl
add
mov
push
push
divl
roll
out
push
fcompl
fwait
or
lret
add
scas
aas
mov
stos
adc
mov
outsb
bound
enter
test
sarb
out
popf
or
mov
outsb
ljmp
dec
icebp
and
test
call
mov
insb
push
add
add
subb
outsb
and
cld
inc
mov
pusha
dec
fadd
sbb
lods
sti
mov
ss
xor
lods
mov
dec
adc
cmc
mov
add
push
jmp
jo
stc
xor
mov
imul
inc
jae
in
mov
add
jae
fadd
jle,pt
pop
hlt
jmp
and
call
jmp
add
add
dec
xor
aaa
jae
repz
mov
push
cld
ret
inc
jo
mov
push
cmc
stos
adc
ret
lods
shrb
rcrl
repnz
stc
pop
bound
xchg
pushw
jb
xchg
xchg
mov
dec
jmp
cmp
push
stc
cs
push
cmc
and
mov
jge
add
push
xchg
cmpb
add
xchg
das
or
inc
lret
insb
aaa
dec
rol
xlat
add
or
lds
mov
mov
or
push
xchg
mov
jg
dec
jns
xchg
testl
loope
dec
cld
xchg
test
enter
pmulhuw
leave
enter
dec
jg
jne
je
inc
pmulhuw
add
ss
sbb
and
mov
es
dec
insb
inc
mov
inc
jl
dec
in
pop
mov
into
imul
dec
pop
cwtl
test
dec
loopne
pop
add
xor
incb
jno
bound
pop
mov
dec
clc
loopne
mov
popf
push
pop
sbb
aaa
sub
addl
add
sbb
dec
sbb
xor
inc
adc
orb
mov
cmpsb
add
imul
push
mov
mov
aas
mov
test
lahf
pop
call
push
stos
add
lods
and
cld
mov
aam
les
stos
cld
xor
into
dec
nop
mov
jbe
inc
dec
cmp
aaa
and
add
lods
sti
push
std
jmp
push
in
inc
ss
adc
dec
hlt
leave
insb
or
pop
mov
into
jbe
mov
popf
add
mov
push
loopne
add
pop
add
add
pop
add
inc
scas
and
xchg
mov
les
cmp
push
hlt
pop
push
addr16
and
add
scas
adc
data16
xchg
jae
jl
call
inc
daa
repnz
jb
jl
mulb
mov
inc
or
std
lods
stos
movb
or
push
inc
subl
mov
mov
iret
add
add
dec
or
sbb
inc
loopne
in
fmull
push
fdivl
add
das
sbb
cmpl
mov
stos
std
mov
sarb
cmp
add
or
imul
cmp
enter
js
mov
cwtl
mov
test
and
add
mov
cmp
mov
pushf
sub
add
loop
stos
or
xchg
mov
add
and
fs
fcomps
dec
mov
add
jg
icebp
lods
mov
dec
xchg
outsb
dec
js
das
clc
xor
push
lock
xchg
lods
mov
leave
mov
or
test
mov
imul
hlt
daa
and
into
xlat
add
daa
jne
inc
add
add
cwtl
mov
in
int3
adc
inc
mov
loop
fiadds
arpl
fmull
aas
je
imul
jb
pop
push
movsl
push
jecxz
testl
mov
cmp
sub
mov
mov
push
dec
push
enter
or
add
movsl
call
or
pop
jb
adc
xchg
mov
add
std
test
test
and
es
inc
loop
pop
push
idivb
inc
out
mov
push
std
sub
call
fdivr
adc
dec
mov
cmc
testl
lods
cmc
sti
call
inc
mov
sub
dec
cmp
pop
dec
jl
loopne
lock
cmpl
add
imul
cmc
repz
addr16
das
cmp
sbb
inc
dec
mov
jnp
pop
add
sbb
test
lods
xlat
es
adc
sahf
or
add
hlt
sub
addr16
cvtpi2ps
or
vaddpd
inc
out
shl
pop
fdivs
call
lea
add
or
jno
sbb
add
scas
push
push
mov
psubd
add
sub
or
es
clc
aad
xor
xor
mov
mov
repnz
aaa
ds
sti
shrb
enter
mov
cltd
frstor
mov
out
fs
mov
add
jecxz
jl
add
add
out
inc
clc
lods
xor
cmp
or
jno
jle
shlb
sahf
jle
enter
mov
int3
sbb
cmp
push
call
loope
push
iret
lods
test
int3
jl
fdivrl
adc
test
dec
dec
dec
aas
aam
xor
aas
adc
mov
scas
std
sub
jo
or
add
add
inc
call
dec
xor
pop
push
add
jle
cmp
shlb
lea
cmp
mov
mov
bound
sub
xor
push
push
jo
mov
and
popf
imul
sahf
xor
leave
out
out
out
scas
jo
fs
out
addl
aas
insb
pop
ljmp
add
idivl
bound
mov
idivb
inc
out
std
addb
jecxz
jmp
xchg
aaa
push
xchg
lods
jnp
jle
hlt
jb
ja
sub
xchg
mov
rcll
in
adc
dec
shlb
je
mov
cmp
xchg
daa
shlb
shlb
shlb
add
daa
mov
push
das
outsb
inc
add
cmpsl
xchg
lds
insl
add
call
stos
jle
cmpsl
mov
inc
mov
dec
call
aaa
inc
adc
mov
in
mov
inc
test
pop
inc
fdivrl
sti
inc
sub
add
push
xchg
add
enter
xchg
add
add
add
xor
xchg
enter
mov
decb
ja
sub
imul
mov
xchg
int3
leave
or
lea
ret
shl
mov
mov
add
jmp
pop
cmpl
push
add
movsb
mov
jg
es
sub
idivb
push
add
sub
add
std
add
ret
pop
jns
cmp
mov
pop
rol
out
fiadds
out
cmp
daa
movsb
dec
std
and
pop
std
punpckldq
lods
add
add
adcl
icebp
mov
lods
jae
mov
add
mov
insb
aam
sbb
jo
push
scas
add
add
test
add
in
fidivrs
imul
or
dec
mov
push
mov
cmp
push
cld
cltd
test
testl
fmuls
inc
in
pop
inc
mov
push
xlat
js
push
push
insb
dec
repnz
aam
jae
xchg
push
dec
popf
xorl
inc
and
and
add
add
ret
sub
add
repnz
std
and
or
pop
xor
stc
push
mov
mov
push
xchg
and
negb
daa
pop
std
xor
mov
aas
ljmp
xor
out
mov
out
xor
mov
sub
lret
push
sub
cmp
fnstcw
add
sub
mov
jno
cli
cmpsl
addr16
andb
sbb
pop
add
xor
jb
movb
add
aas
test
push
inc
adc
ret
je
ficompl
dec
inc
cmp
adc
setb
dec
push
out
ja
mov
shlb
std
cmp
mov
inc
cmp
sbbl
add
add
cmp
lss
std
add
push
enter
jmp
mov
mov
ljmp
sub
test
call
daa
ret
jb
push
ss
xchg
mov
cmp
xchg
in
push
sub
les
icebp
sub
add
ret
lock
jge
es
add
shlb
add
adc
cld
pop
jb
daa
fisttps
lods
mov
jge
add
push
pusha
jle
out
iret
push
pop
jl
rorb
inc
mov
in
jb
jo
daa
es
add
xor
add
out
rclb
xchg
cli
mov
js
jb
pop
je
sbb
pop
jl
inc
les
out
push
pop
add
add
ljmpw
shll
jb
sbb
addr16
idivl
out
sahf
not
cmp
pushf
ljmp
inc
add
aas
jb
cmp
movsb
fwait
and
hlt
cmpsb
in
mov
jl
dec
add
sub
clc
cmpsb
lahf
out
and
push
pop
jg
mov
shr
iret
nop
add
add
data16
jmp
out
enter
test
es
add
inc
mov
inc
mov
fisubrl
mov
add
icebp
mov
jb
cmp
repnz
icebp
pop
push
inc
cmp
push
pop
add
mov
aas
addb
xor
mov
aas
add
daa
rcr
adc
call
inc
adc
ljmp
add
aas
rclb
ljmp
sub
cmp
mov
xchg
loop
push
xchg
adc
addb
sub
add
addr16
imul
nop
cmp
jge
and
cmp
adc
lahf
test
loop
cld
nop
and
xor
xchg
in
inc
add
out
jo
and
add
std
in
vmwrite
dec
jecxz
in
into
and
fbld
orl
mov
mov
gs
inc
add
dec
mov
gs
cld
gs
inc
add
and
lods
decb
sbb
and
sub
cmp
pop
cmpsb
jae
dec
movsl
jae
cmpsl
cltd
in
add
imul
sub
fsubl
sti
addb
das
fcomps
push
jns
aam
jp
cld
jmp
std
jmp
fdivr
pop
push
jns
lock
xor
lahf
lcall
mov
fs
int3
popf
or
inc
je
push
pushf
mov
stc
stos
andb
out
push
sahf
inc
push
mov
cwtl
popf
stc
jp
add
add
pop
jb
sub
insb
cmpsb
dec
mov
mov
shll
cmpsb
cmpsl
xchg
add
cs
sbb
sub
sti
mov
mov
or
cmp
and
daa
das
cmp
xchg
fldlg2
call
out
pop
add
xchg
call
mov
inc
ret
test
sub
aas
std
jb
add
ficompl
cli
addr16
adc
jge
jmp
push
push
test
popa
jno
in
or
in
or
orb
fidivl
push
mov
aam
bound
pop
push
fs
shll
add
aaa
add
loope
stos
inc
in
std
cld
add
inc
test
push
aas
add
add
or
psubq
inc
jle
sbb
inc
sub
lea
inc
adc
ljmp
sahf
cmp
jmp
outsb
mov
rorb
add
xchg
inc
xchg
push
inc
inc
inc
mov
xor
les
stos
jl
inc
dec
add
loopne
mov
ret
push
add
jmp
mov
in
and
cmp
and
cmpb
hlt
xchg
in
cmp
adc
push
sub
cmpsl
pop
hlt
jb
cltd
inc
or
add
jecxz
pushf
loopne
push
add
loope
add
and
scas
sbb
xchg
inc
or
mov
add
add
jmp
push
nop
inc
incb
inc
add
inc
add
add
sar
add
inc
add
sar
sbb
popl
nop
inc
cmp
mov
ds
pop
push
cs
fs
cmp
fisttpl
out
bound
outsl
dec
adc
ds
push
xor
dec
xor
fdivrs
pop
pusha
dec
or
cmpsl
pop
cmp
hlt
cwtl
sub
add
clc
loop
fs
add
add
pop
call
add
and
xlat
mov
arpl
add
push
cmp
inc
pop
sbb
int
sub
and
aad
and
inc
clc
out
das
cmpsl
add
fadd
xor
fldenv
std
lahf
sti
data16
out
data16
sub
std
jg
addr16
sub
push
add
in
call
test
add
data16
pop
daa
aas
mov
mov
and
into
test
das
or
sub
test
mov
test
inc
mov
jo
pop
push
mov
rolb
xorl
jg
add
pop
jae
roll
add
stos
add
stc
icebp
cld
ljmp
or
mov
add
and
std
dec
adc
pop
dec
push
push
sub
jge
sti
jne
test
test
ret
pop
mov
sub
xchg
inc
aad
push
xor
inc
test
jb
mov
inc
lds
push
pop
int3
ret
ss
add
rorb
lret
add
dec
leave
inc
iret
mov
iret
xor
add
sti
push
data16
andb
or
cs
sti
push
push
rorb
push
sti
loopne
mov
add
ret
movsl
or
and
push
addl
inc
push
cltd
sbb
and
inc
lock
mov
jle
add
and
mov
std
and
loop
gs
hlt
or
add
je
or
sbb
mov
or
aas
xor
jle
out
in
loop
outsl
dec
inc
mov
push
and
imul
ret
and
jb
sbb
cmpsb
push
cmp
out
jno
mov
ret
daa
push
mov
add
fs
xchg
adc
sub
cmpsl
push
mov
add
and
in
addb
out
out
pop
xchg
xlat
pop
cmpsb
xor
arpl
jge
aas
out
xlat
je,pn
pushf
data16
dec
pop
add
mov
push
jmp
jg
jo
daa
dec
mov
sub
lock
sahf
add
loopne
or
cs
push
or
sub
loope
lods
push
enter
add
daa
aas
std
jmp
mov
mov
stc
pushf
jno
mov
sub
xchg
in
fs
sahf
push
xchg
pushf
fdivrp
call
xor
mov
add
or
pop
mov
adc
jne
cmpsb
add
cmp
jmp
mov
adc
mov
or
add
add
cld
incl
inc
add
test
add
cmp
test
adc
lcall
dec
shlb
lea
dec
lea
ljmp
call
mov
lahf
test
pop
cld
dec
mov
fidivrs
rolb
and
add
fwait
add
and
inc
or
xchg
shr
add
cmpsl
iret
fwait
or
and
cmc
add
cmpsb
add
push
jmp
add
fidivl
lcall
repz
mov
inc
xor
or
je
mov
jge
jbe
iret
adc
mov
pop
std
jb
or
dec
or
sbb
xchg
sbb
arpl
cmc
adcl
in
add
add
aas
out
cmpsl
jg
jg
inc
out
movsl
push
call
lods
in
and
mov
jbe
cmp
adc
xchg
and
push
mov
add
xor
or
inc
or
lods
stos
movsl
add
or
xchg
or
jg
pop
push
fwait
rcl
ficompl
and
enter
bound
sbb
daa
adc
add
or
sub
xlat
popa
into
jl
mov
ret
cmpsl
or
aas
or
xchg
daa
dec
test
call
aas
add
pop
ret
and
daa
aas
dec
out
cmp
insl
test
inc
xorl
add
jb
addr16
and
test
push
mov
push
insb
add
add
sbb
mov
jg
cmpsb
call
inc
and
daa
enter
xchg
and
daa
push
add
xchg
ljmp
popa
adc
cld
mov
pop
ror
mov
pop
ret
les
dec
pusha
add
fadds
ds
add
inc
adc
iret
loopne
mov
cmp
xchg
or
fcoms
push
sbb
test
in
inc
mov
hlt
push
mov
push
mov
mov
test
rcl
scas
add
inc
rorw
repz
xor
mov
add
addr16
or
cmp
sub
jae
inc
mov
cmp
std
mov
add
add
and
movsb
movb
inc
data16
mov
add
push
aam
mov
lahf
test
and
roll
gs
mov
lahf
test
sbb
roll
mov
loopne
add
and
or
leave
je
cltd
lret
jne
mov
sahf
shrb
test
fisubrs
add
lret
push
push
js
test
sub
popa
dec
js
enter
loope
fsubrs
fcmovb
mov
pop
push
inc
shlb
xor
or
aas
cs
adc
out
and
lods
xor
fildl
jl
cmpsl
lods
push
ss
jle
pop
inc
lock
jae
cld
out
push
inc
inc
ds
cltd
stc
adc
scas
add
add
inc
mov
jmp
inc
mov
xchg
out
pop
rcrb
enter
jmp
call
gs
test
aas
add
stos
add
aam
or
sub
pop
xchg
out
test
add
xchg
or
aaa
and
data16
aas
or
scas
decb
sub
inc
mov
jb
push
push
aad
add
enter
lcall
lock
enter
fwait
call
hlt
inc
add
int
mov
roll
int3
or
jge
rcll
cmp
fcomi
adc
cmp
jbe
push
adc
cmpl
jno
and
je
jle
inc
ja
cld
aas
lcall
mov
inc
mov
inc
lock
cmpl
add
xchg
add
or
movsl
inc
popa
int3
cmp
sti
push
and
add
std
pop
inc
jecxz
or
and
xchg
mov
add
int3
call
test
add
mov
add
xor
inc
in
clc
inc
add
add
and
add
sub
ret
and
cmpsl
add
stos
add
sub
mov
jne
fdivrl
add
add
lahf
mov
push
cli
dec
mov
cld
adc
jmp
rorb
aas
push
mov
adc
dec
xor
mov
stos
add
add
hlt
sbb
and
loop
sbb
out
les
out
je
mov
adc
cs
into
cmp
pop
scas
sbb
mov
or
add
push
stc
dec
popf
clc
sbb
push
out
lods
outsb
sub
cli
inc
xor
cld
inc
dec
out
pop
popa
add
sub
inc
or
jecxz
xchg
add
add
mov
adcl
push
addr16
aas
xchg
lods
sub
fidivs
aas
std
push
je
fisubl
and
addl
push
std
pop
inc
ds
xchg
cmp
call
push
les
mul
mov
test
jecxz
dec
std
insl
addr16
xor
and
sbb
jp
add
add
roll
aam
mov
je
jmp
inc
mov
push
dec
arpl
mov
pop
xorb
xchg
rolb
lea
jae
js
cld
out
adc
call
push
mov
jne
mov
stos
mov
jb
jg
pop
inc
je
mov
adc
dec
inc
adc
stos
add
stos
inc
pop
cmp
xchg
add
add
mov
lock
jnp
add
stos
mov
xchg
mov
or
dec
in
and
mov
arpl
add
dec
adc
pop
add
rcll
dec
addr16
dec
js
cltd
add
roll
xchg
xchg
add
scas
adc
in
xor
mov
lcall
iret
js
cmc
sbb
add
add
and
aas
and
je
fnstcw
aad
or
je
in
cmp
xor
repz
and
or
sub
and
out
add
xor
inc
idivb
call
pop
or
nop
pop
jae
inc
and
aas
nop
js
lcall
call
jno
arpl
mov
leave
shl
aam
push
or
add
add
dec
out
xchg
push
sub
js
imull
nop
shlb
dec
in
out
popf
inc
add
pusha
push
int
in
mov
adc
inc
cld
mov
add
movsl
jle
xor
push
clc
sub
out
subl
push
icebp
out
push
dec
std
push
subl
add
add
dec
inc
cmp
call
xorb
cmpsl
or
adc
xchg
sub
aas
add
daa
inc
and
daa
aas
push
jb
aaa
call
xchg
sbb
dec
std
aaa
test
pop
call
in
stos
outsl
dec
push
jb
lret
jmp
sub
add
adc
add
testl
negl
aas
test
add
add
jg
pop
fistpll
fs
aas
add
shlb
mov
fcmovb
popl
std
mov
mov
ds
push
cmp
call
mov
leave
decl
ds
mov
jne
aam
enter
daa
jne
inc
ja
call
add
add
mov
adc
arpl
call
lret
and
sbb
and
popf
sbb
jecxz
sti
and
xor
xchg
es
mov
dec
jl
jmp
adc
je
mov
outsl
in
and
xor
data16
add
jne
inc
xor
sbb
mov
and
pop
pop
add
fadd
lds
add
loope
push
add
push
cltd
outsb
ja
add
and
push
test
test
pop
add
js
add
lods
and
xor
jmp
inc
dec
add
fnsave
call
test
ret
sbb
and
jg
outsl
ds
addr16
insb
inc
add
mov
add
mov
mov
dec
popa
stos
mov
add
add
daa
icebp
add
pusha
inc
mov
lock
add
out
sub
popa
lds
mov
cld
and
cmp
pavgb
mov
popa
mov
scas
adc
sbb
daa
aas
push
adc
mov
movsb
or
dec
std
jmp
addr16
or
add
add
cld
pop
mov
daa
aad
mov
daa
mov
loope
test
iret
mov
mulb
inc
std
jmp
daa
mov
mov
cmp
std
aam
sub
sti
cmp
aas
add
mov
sbb
data16
inc
xor
das
sti
xorb
add
add
add
les
mov
push
cmpb
push
movl
add
mov
pusha
mov
std
incl
inc
cmp
mov
mov
and
mov
and
std
incl
inc
cmp
xor
push
cmp
add
add
add
roll
arpl
jl
dec
xchg
xchg
insl
cmp
shll
lods
xchg
mov
in
cmp
lds
mov
std
cld
adc
incl
shll
in
xchg
cmpb
cltd
jecxz
cmp
add
sub
lds
dec
test
fs
add
add
add
cmpsl
cltd
xchg
xchg
aas
into
gs
sti
push
xchg
push
jno
pop
inc
imul
add
sbb
add
inc
xor
sahf
mov
xchg
mov
out
mov
cmpsb
sub
call
movd
rorl
pop
out
jnp
cmpsl
add
add
pushf
cli
inc
jle
lret
fcmovnbe
loop
aad
roll
cwtl
cli
mov
inc
mov
scas
movlps
stos
inc
jno
test
jae
xchg
cli
jmp
xchg
and
scas
inc
std
push
mov
out
lahf
inc
std
ret
jae
cmpsl
enter
cmp
ljmp
mov
pop
aas
ret
lock
pop
clc
push
add
add
push
bound
ret
cmp
adc
sahf
dec
dec
incl
mov
call
pop
sti
and
pop
push
jl
stos
inc
push
dec
adc
mov
mov
mov
add
aas
push
mov
ret
mov
incl
xorb
and
sub
cmp
push
add
dec
sbb
add
jo
jmp
daa
inc
pop
jmp
nop
xorl
xor
call
push
aas
add
mov
andl
add
push
add
push
movl
and
mov
inc
and
rol
push
jecxz
or
das
aas
fsubs
add
sbb
js
dec
inc
xor
loopne
in
mov
pop
xor
repnz
add
add
adc
inc
jg
cmp
incl
push
add
rorl
or
movsl
ljmp
je
jae
int
and
int
adc
shrb
and
int
call
test
fs
out
lahf
add
lods
test
out
or
cltd
mov
out
aas
inc
add
es
push
jae
stos
inc
fcmovb
in
movsb
sub
cld
fisubrl
cmpsb
jle
shlb
push
adc
push
fsubrl
into
fdivr
aas
out
push
mov
push
xchg
pop
out
and
xor
sub
ret
xchg
cmp
add
idiv
add
add
movb
mov
daa
cwtl
sbb
stos
jecxz
push
adc
dec
aam
ds
hlt
addb
jle
jb
mov
je
daa
aas
push
bound
xor
outsl
aas
push
out
add
andl
dec
rcrl
call
pushf
jg
cmc
sbb
sbb
jmp
mov
inc
jle
jmp
add
add
add
mov
mov
mov
cmp
add
daa
mov
test
pop
sti
and
int
inc
and
lods
inc
inc
mov
rcl
dec
int
xchg
ljmp
imul
call
jne
sub
mov
jmp
jge
test
rorl
mov
pop
adc
jae
test
rorl
mov
pop
sbb
fidivl
add
dec
sbb
and
add
lret
inc
and
int
and
sub
push
and
lds
cmp
add
and
shl
rolb
add
addr16
push
add
pop
loop
add
daa
add
movsb
add
loopne
push
pushl
mov
adc
dec
xor
hlt
jae
jl
and
cmp
dec
cmc
mov
pop
sbb
ljmp
test
xor
incb
mov
shr
jge
dec
addr16
cld
fisubrl
imul
cmp
push
addl
add
lods
adc
mov
lret
scas
add
xorl
ret
ljmp
adc
aas
cltd
or
das
out
and
stos
daa
in
lcall
ret
sub
jns
dec
or
add
lret
push
dec
imul
in
sub
sub
call
cmp
ret
and
cmpsb
adc
add
mov
xchg
lds
add
test
std
pop
jmp
inc
jb
daa
inc
ret
es
call
bound
cld
imulb
cmpsl
add
daa
dec
push
mov
push
cmp
bound
daa
cmpsb
dec
es
push
jo
pusha
and
xchg
xchg
call
es
xor
xor
call
fs
adc
add
add
shrl
call
daa
les
pop
je
lds
mov
add
enter
popl
call
xchg
xorl
add
push
dec
into
inc
and
stos
clc
add
aas
test
fcmovbe
mov
add
add
mov
add
aas
out
fisubs
out
pop
pop
and
add
add
mov
add
inc
xchg
out
movb
sbb
cwtl
je
movsl
outsl
jno
cmp
pop
inc
add
inc
xchg
jle
add
add
adc
hlt
and
rcrb
and
pop
jg
repz
sarb
jnp
inc
call
lahf
nop
mov
push
xlat
mov
add
add
pop
fdivr
mov
fadd
push
push
rolb
push
jmp
mov
push
leave
xor
ds
out
popa
and
xchg
adc
push
into
daa
xchg
cmp
cmpsl
decl
push
pop
mov
and
sarb
out
xor
add
xor
mov
mov
jb
jmp
add
and
out
in
out
imul
push
hlt
aaa
aas
in
jbe
out
push
push
jo
cmpsl
in
fnstcw
out
popf
mov
mov
cmp
or
ds
movsl
js
or
cmc
out
and
jp
aas
cmp
add
dec
arpl
ss
rorl
dec
ds
xor
add
and
test
cmp
cmp
cwtl
jno
push
sbb
jae
jg
sub
iret
pusha
rolb
fwait
cli
inc
jg
outsl
sar
call
das
movsl
add
push
push
fmull
je
cmp
push
mov
stos
cmp
insl
out
aas
push
and
jge
jp
test
lods
adc
and
add
add
aaa
std
jo
xor
pop
enter
daa
mov
xchg
lret
inc
ret
js
flds
add
dec
xchg
leave
into
lcall
test
mov
or
inc
sti
movsl
jb
add
enter
adc
push
mov
jmp
mov
adc
jo
jne
jge
mov
into
mov
lea
jge
cmove
movb
cmpb
or
std
ss
add
pusha
xchg
and
xchg
add
inc
adc
in
cmp
and
int3
cld
cmp
and
scas
inc
adc
add
and
cld
add
lods
lock
adc
jae
lea
add
add
call
add
mov
test
ret
pusha
rclb
jecxz
call
cmpsl
push
add
push
std
add
adc
cld
movsb
aas
fs
inc
imul
xlat
es
js
and
rcl
aas
out
out
push
mov
dec
jno
and
bound
add
movsl
sbb
add
add
sub
push
and
jp
adc
shll
stos
pop
sbb
dec
ds
ss
arpl
aas
out
out
mov
and
jmp
and
xchg
fadd
mov
jno
xor
test
dec
push
mov
lea
add
add
popa
and
pop
cld
call
jne
add
test
or
or
and
cmpsl
adc
sub
cld
call
xchg
aas
add
test
adc
lret
dec
mov
aas
mov
outsl
cld
call
mov
into
test
mov
jmp
jnp
mov
add
add
push
xor
out
inc
add
xor
push
repz
lods
xchg
jno
push
mov
ret
sub
test
inc
pop
mov
packuswb
push
mov
add
icebp
push
sbb
jmp
std
call
and
dec
das
and
gs
add
adc
inc
add
add
add
jno
adc
enter
pop
jmp
adc
or
and
xlat
shll
rorb
mov
rcll
mov
lret
sbb
das
mov
bound
add
push
xchg
in
push
mov
jp
dec
lods
sti
mov
sar
xchg
ror
push
add
and
adc
add
add
into
cld
jno
shrb
nop
fistl
mov
mov
fisttpll
and
rorb
push
lret
cwtl
aas
push
cltd
outsb
inc
imul
add
lods
add
sub
out
and
jne
xor
dec
roll
and
popa
inc
in
pop
test
push
xor
rolb
add
rol
and
xor
scas
jnp
aam
inc
pop
add
mov
ja
inc
repz
mov
add
hlt
ja
push
dec
sub
inc
out
in
stos
bnd
aaa
dec
out
shll
mov
je
inc
add
ss
cs
push
call
jae
daa
add
out
pop
and
lea
jmp
aas
push
lahf
mov
add
fdivs
push
push
in
stos
inc
jmp
out
std
gs
outsl
je
sbb
mov
out
std
gs
pop
cmpsb
or
fs
std
xchg
test
cmpsb
call
fadd
orb
ds
je
and
mov
stos
daa
pop
inc
sbb
add
xor
mov
sti
jne
stos
jno
add
add
or
cmp
stos
sti
mov
pusha
rolb
mov
sti
push
and
push
xchg
out
ret
pop
mov
sti
adc
arpl
or
push
mov
push
mov
sti
data16
mov
pop
mov
sbb
mov
xchg
add
mov
add
out
pop
mov
iret
shrl
mov
iret
fsts
outsl
jno
stos
pushf
testl
scas
loop
push
lahf
ficoml
lahf
loop
push
scas
sar
cld
push
pop
lahf
cmp
rcll
mov
fdivr
jge
enter
push
out
shlb
jle
push
dec
xor
or
movsb
inc
cmp
out
repz
loopne
shrl
push
add
add
dec
xor
icebp
negb
lahf
repz
dec
sbb
sbb
aas
push
or
sub
xlat
sbb
jle
lcall
aaa
pop
insb
les
sbb
ret
arpl
test
adc
add
xchg
ret
jb
std
adc
pop
mov
jge
neg
sbb
add
mov
jp
ss
pop
mov
rcrl
jle
add
cmp
idivb
add
add
add
js
xor
ljmp
std
xlat
and
and
call
xor
add
adc
adc
jl
call
sbb
call
add
add
jl
call
daa
mov
inc
bound
sbb
sub
mov
and
dec
xor
addr16
cmp
es
call
enter
sub
push
or
add
out
jmp
ds
call
mov
cvtdq2ps
xorl
shr
jg
add
add
sub
jne
ja
lods
addr16
and
add
ljmp
jno
push
inc
lods
push
inc
and
inc
out
sbb
or
movl
inc
cmp
inc
lahf
in
sbb
std
mov
push
nop
adc
xchg
lahf
test
add
rcll
les
add
jle
xor
add
add
pop
shlb
push
add
aam
jne
sub
out
adc
int3
out
lret
lahf
inc
sub
xor
add
pop
pop
fdivl
add
push
cmp
jp
dec
push
jl
popf
mov
jl
sub
sbb
and
jnp
and
int
fs
sbb
cmpsl
or
add
jl
cmp
ret
or
aas
out
mov
inc
subb
imul
roll
dec
and
fiaddl
out
stos
inc
inc
or
jo
and
aad
lds
sub
int3
mov
in
pop
movsl
sbb
roll
daa
xor
add
lea
aas
cmp
cmp
inc
in
ds
add
pop
add
aas
push
scas
sbb
call
jb
mov
add
daa
mov
or
push
jae
and
nop
adc
aas
subl
push
mov
lock
aam
sub
ret
std
fs
aas
add
add
push
xchg
es
std
xchg
pop
pop
dec
pop
daa
aas
xor
out
jge
ret
test
es
add
clc
cmp
jmp
push
xchg
std
pop
adc
es
es
xchg
clc
jp
ret
adc
mov
or
sub
lea
push
push
cmp
mov
int
inc
loopne
jg
test
push
stc
loopne
sub
lea
adc
jne
test
mov
cmp
inc
cmp
mov
decl
test
xor
cmp
fmuls
mov
add
cmpsl
inc
clc
enter
and
push
add
sub
and
js
in
std
nop
push
and
lods
inc
call
add
add
arpl
add
and
and
cs
fcomps
adcl
mov
inc
aam
incb
mov
xchg
out
and
adc
mov
ljmp
jecxz
enter
pushf
mov
pop
dec
bound
pop
test
ds
dec
stc
out
add
add
lock
mov
jle
aaa
sbb
pop
ljmp
xor
lods
je
cmpl
jle
aaa
movsl
ljmp
push
daa
jge
xor
mov
xor
mov
pop
inc
out
bound
jb
das
mov
fildl
aaa
out
out
mov
arpl
pushf
adc
add
jl
push
add
mov
jnp
cmpsl
add
jbe
es
std
dec
call
mov
cs
inc
int3
stos
inc
jmp
jg
mov
daa
ret
sbb
je
xlat
mov
sbbl
push
mov
add
cmp
lock
call
xor
add
cld
out
fsubl
scas
and
dec
xchg
addr16
call
add
jp
adc
pop
adc
call
mov
inc
test
movsb
inc
fadd
inc
cmp
pusha
daa
cmpb
jb
ret
sub
out
cmp
cli
movsl
aad
lcall
test
add
xchg
sub
dec
in
push
and
or
jne
mov
mov
inc
add
push
movsl
sti
je
adc
add
inc
xor
push
xor
dec
sbb
hlt
jmp
jl
js
mov
lods
fadd
mov
sub
sar
sbb
cmovl
insb
subl
sbb
mov
add
inc
xchg
mov
inc
je
out
imull
push
add
into
int3
out
imul
lods
pop
mov
std
popf
pop
int3
out
shlb
lods
fcmovnb
mov
jl
and
mov
leave
add
lahf
popa
rorl
jb,pt
das
mov
sub
cmpsl
add
mov
add
add
stos
imul
out
std
sti
in
jg
cmp
inc
add
pop
jae
sbb
insb
rorb
inc
add
mov
jp
mov
call
push
fisubl
out
pop
cmpsl
daa
add
cmp
aam
pop
repnz
mov
pop
rcrb
dec
inc
aad
add
add
add
std
jmp
jp
and
daa
aas
mov
cmpsl
sub
jl
mov
push
imul
mov
add
daa
aas
adcb
or
jmp
sbb
mov
bound
cmp
sbb
mov
pop
jle
adc
cmpsl
inc
jmp
add
add
mov
call
repz
movsb
xor
pop
jecxz
push
add
jno
jge
push
call
or
xor
cmpsb
inc
cld
adc
cmpsb
clc
test
das
or
loop
std
call
loopne
xor
mov
mov
repnz
cmc
cmp
sbb
or
test
or
imul
adc
add
cld
out
cld
pushl
mov
test
xor
push
sub
cmp
test
cwtl
push
push
and
arpl
mov
and
pop
in
adc
sbb
rcrl
or
lods
aas
call
test
sub
mov
mov
jb
xchg
cmp
lods
sbb
cmp
movl
add
add
sbb
add
in
clc
rcrb
or
jno
jo
adc
mov
scas
inc
or
sub
jle
popf
cmp
add
je
lods
lret
add
push
and
aas
repz
pop
stos
pop
mov
xchg
sub
cmp
adc
ljmp
add
mov
ds
mov
xchg
out
popf
jns
xchg
dec
out
and
push
pop
cmp
mov
adc
xor
pop
sbb
call
arpl
out
ja
jb
add
in
and
aas
bound
push
jo
mov
push
add
adc
and
mov
lcall
outsl
sbb
mov
jb
sub
inc
push
sar
call
push
pop
adcl
xchg
cmp
sbb
add
test
call
lds
std
push
jl
inc
and
xchg
pop
jnp
adc
sbb
add
jbe
out
add
add
std
add
adc
leave
enter
sbb
mov
dec
out
movsl
inc
je
or
dec
mov
push
call
testb
psrlw
inc
sbb
sbb
mov
pop
pop
je
adc
shlb
xchg
add
add
add
sar
ja
push
jmp
pop
adc
xlat
in
inc
inc
add
jbe
and
stos
inc
je
mov
or
jb
aad
xor
or
mov
inc
inc
popf
xlat
add
in
xor
add
xchg
mov
lods
mov
mov
cmc
mov
pop
jo
and
aam
cmovle
shll
popf
into
cld
mov
add
push
pop
pushw
add
mov
or
xor
fs
mov
add
xchg
lock
cmp
or
fistps
insl
adc
idivb
jge
int3
daa
enter
xchg
jecxz
push
inc
jb
lret
enter
mov
mov
xlat
adc
mov
jno
inc
roll
daa
mov
repnz
aas
dec
and
add
jp
cmpl
aad
cld
imul
out
andl
int
ds
and
xchg
rcll
lret
xor
out
out
xor
and
and
mov
lds
fmull
add
xor
ds
dec
ja
ss
dec
mov
adc
pop
xchg
and
jb
std
jmp
pushf
push
adc
add
repnz
ljmp
fmull
mov
sahf
pop
imul
or
mov
lret
mov
cmpsb
fwait
pmaddwd
mov
adc
std
divb
adc
xor
std
push
push
enter
popl
sbb
imul
aad
sti
pushl
add
and
add
enter
adc
sbb
icebp
mov
sub
jo
xor
icebp
fsubs
xor
inc
jl
clc
add
adc
cld
push
mov
out
cmp
cmp
js
dec
inc
dec
mov
mov
add
sarl
inc
rcl
leave
mov
inc
and
add
xlat
add
sbb
out
or
fsub
lcall
pop
adc
hlt
sar
into
test
jno
out
iret
and
jl
jo
and
cwtl
cmovl
addl
mov
cmp
fs
out
ljmp
adc
mov
lcall
inc
insb
jle
inc
and
add
test
cmp
push
fldcw
pop
jae
popf
sti
lahf
aas
xor
and
sub
sbb
popf
mov
mov
addb
push
mov
mov
icebp
mov
daa
les
pop
stos
imul
inc
cmp
mov
jb
mov
sub
pushf
adc
mov
add
add
pushf
jmp
adc
dec
xlat
dec
loop
aas
add
es
mov
inc
jb
aaa
add
fwait
stos
inc
adc
hlt
xlat
lcall
sub
sti
out
push
adc
inc
clc
cmp
cld
xlat
xor
je
adc
bound
rol
or
or
popa
aas
add
stos
jge
bound
add
faddl
sub
iret
test
andl
daa
push
push
dec
xor
sti
addr16
mov
repz
pop
out
adc
sahf
fidivs
call
pop
adc
ljmp
push
leave
stos
xchg
rcrb
jb
pushf
sbb
sub
call
push
and
push
and
sub
jmp
sub
inc
push
js
call
add
add
add
mov
mov
inc
jne
les
xchg
lock
mov
sti
jne
test
out
ss
or
mov
sti
adc
daa
jns
pop
imul
ret
push
mov
rorl
push
cmp
rorb
lds
push
push
sub
cmovge
or
sbb
lcall
add
mov
cs
add
scas
imul
daa
add
sbb
add
and
mov
xor
or
mov
cmp
imul
add
push
or
push
scas
mov
es
push
aad
adc
sar
imul
push
adc
incl
add
shrl
inc
and
mov
lods
and
pop
pusha
roll
mov
mov
enter
xchg
addb
leave
pop
sbb
lods
sbb
mov
cmp
mov
outsl
cmpsb
shll
sub
popf
sbb
adc
scas
fdivrp
shrb
add
add
cld
pop
movsl
sub
mov
cmp
mov
std
in
stos
mov
cmp
adc
jo
mov
push
jno
pushl
rorl
mov
jl
mov
jbe
sub
push
jb
mov
bound
push
xchg
rcl
push
ss
push
jo
pop
adc
adc
adc
sub
jb
and
mov
add
add
push
scas
aam
adc
and
call
es
aaa
out
mov
out
mov
mov
mov
jb
cmp
pop
pop
mov
ja
movb
cmpsb
das
inc
jl
xchg
in
je
or
enter
sbb
cmp
es
sti
je
push
in
jl
add
add
add
adc
jae
xchg
rolb
push
mov
cld
xor
add
call
jle
sti
cmovns
std
dec
xor
and
add
call
ss
mov
xor
cwtl
inc
xor
add
and
test
mov
jo
add
popf
fistpl
mov
sbb
arpl
or
and
lret
sbb
clc
out
out
add
movsb
jg
and
push
jne
lea
and
lret
in
sti
stc
lret
add
stos
sar
leave
int3
and
sbb
mov
popf
mov
pop
scas
bound
fs
fdivrl
and
mov
addr16
aas
faddp
add
add
cs
mov
daa
jns
jnp
iret
out
jle
mov
loope
arpl
mov
mov
sbb
int3
sbb
imul
movl
cltd
aaa
mov
fadds
jb
inc
cmpsl
mov
pop
pusha
pop
repz
js
jb
adc
sub
add
sbb
js
cmp
add
add
adc
sub
jg
arpl
out
cmp
jg
add
aam
or
inc
mov
fs
mov
push
pop
daa
call
push
das
add
daa
xchg
xchg
jbe
or
std
or
mov
jmp
int3
push
cmp
mov
adc
cli
mov
int
jnp
adc
cld
pop
sbb
ja
cmp
add
add
jg
ss
xor
push
mov
jbe
xorl
and
add
push
xor
add
add
mov
push
adc
sbb
or
nop
push
cld
jne
aad
je
xor
jnp
jo
mov
adc
in
or
cmpl
cmp
add
mov
push
out
add
add
jno
fdivrs
mov
add
negb
inc
std
ljmp
icebp
inc
inc
or
repnz
lea
std
call
or
clc
sbb
cmp
sbb
mov
jnp
adc
xlat
pop
daa
pop
clc
dec
mov
ud0
fxtract
mov
or
add
in
pop
nop
mov
jmp
jno
imul
sbb
sub
inc
mov
add
cmpsl
mov
ljmp
add
dec
mov
sbb
inc
push
sti
imul
dec
cld
dec
pop
std
jecxz
push
sbb
aas
call
cld
scas
or
imul
aam
add
daa
mov
roll
and
cmpsb
add
mov
or
lods
xchg
add
add
aas
jecxz
ds
dec
mov
daa
add
sbb
add
seta
cmp
mov
sbb
dec
js
jg
add
cwtl
in
add
sbb
jo
xlat
add
add
aam
add
push
dec
call
fldl
jne
dec
add
push
xchg
ds
inc
mov
mov
pop
or
insb
insb
pop
and
pop
dec
jae
daa
jne
push
and
xchg
and
movsb
push
add
mov
daa
je,pt
aaa
mov
cmc
and
mov
add
add
inc
dec
lds
outsl
dec
aas
push
inc
lock
cmp
lods
adc
std
add
jb
jnp
mov
inc
cli
and
repnz
ds
sti
call
fimuls
dec
sar
cmp
mov
xchg
mov
push
add
inc
xor
in
fstpt
sbbl
add
dec
inc
dec
imul
add
add
jns
add
decl
dec
sbb
aaa
jg
and
mov
cld
jae
mov
sub
sub
xor
mov
add
cmpsl
je
add
fisttps
dec
cmp
addr16
psadbw
aad
andnps
das
add
in
or
mov
sti
dec
adc
add
add
add
aam
mov
or
das
lahf
aam
cmp
xor
push
arpl
pop
adc
pop
add
incb
push
cmp
or
and
lret
adc
aam
sub
pushf
push
push
fsts
aad
std
cmp
repnz
and
sbb
dec
mov
pop
pop
stc
ret
jmp
jmp
subb
push
repz
cmpsb
add
add
xchg
popf
stos
int3
cmpl
dec
xor
dec
adc
mov
or
mov
hlt
sbb
aas
imul
fs
lock
push
jno
in
mov
jae
shlb
testb
add
add
inc
lret
adc
push
testb
add
mov
lods
gs
js
arpl
xchg
xchg
add
or
pop
cld
pop
es
add
outsl
or
add
aas
add
xchg
and
scas
jb
sub
jb
aam
sub
in
sahf
outsl
mov
call
push
out
sub
pop
pop
ljmp
dec
lock
fdivrl
push
mov
frstor
push
sub
add
pop
add
shlb
gs
test
or
test
add
sub
add
sub
add
mov
inc
add
mov
push
push
data16
test
in
out
ljmp
add
cmp
cld
xor
sub
push
stos
pmulhw
dec
cmp
or
jp
sbb
out
adc
popf
idiv
fidivl
je
add
nop
sub
or
sbb
jo
and
sub
nop
push
mov
add
dec
mov
push
or
dec
je
in
pop
lods
dec
pop
add
jnp
jge
xor
mov
xor
jbe
jmp
hlt
imul
add
loop
adc
iret
cmp
aas
and
int3
pop
lahf
pop
cld
cld
add
add
in
cld
adc
jo
shl
mov
pop
or
push
lahf
jnp
mov
pop
mov
pop
ret
pop
fistps
and
sub
inc
sub
bound
cmpsl
popa
call
out
adc
imul
add
sub
add
pop
push
jg
jl
xor
test
add
faddl
in
push
in
frstor
imul
mov
add
sub
out
aas
jge
add
cmp
or
sub
out
mov
mov
xchg
add
es
sub
dec
cmp
dec
add
mov
fbstp
inc
jmp
jb
std
pushf
cmp
jae
aad
jo
jle
call
add
add
mov
add
inc
add
hlt
mov
stc
roll
loope
fs
into
imul
xor
cmpsb
push
add
popa
add
sahf
dec
pushf
lds
movsl
cld
mov
adc
std
xchg
mov
adcb
mov
icebp
pop
add
aam
mov
push
push
das
std
aam
sbb
add
jl
mov
add
xchg
xor
pop
arpl
inc
dec
pminsw
jl
clc
adc
push
mov
imul
xchg
imul
in
and
mov
push
inc
or
aas
jno
in
jmp
rcll
adc
stc
jns
sbb
or
jne
jns
adc
mov
pop
pop
push
jge
add
xchg
push
cmp
dec
mov
dec
push
add
add
rcll
mov
loope
and
std
clc
pushf
push
push
repnz
mov
loope
mov
cmp
push
std
inc
scas
test
pop
data16
push
lahf
cmp
push
ja
ja
xor
test
cmpsl
cmp
jae
popf
add
mov
mov
dec
jge
pop
lahf
repnz
shrl
mov
and
setg
cld
cmpb
add
adc
lcall
mov
std
dec
cmpsb
pop
scas
mov
shll
scas
mov
stos
push
aad
movsl
pop
xlat
ds
inc
imul
cmpsl
gs
scas
pushf
adc
mov
lods
sub
addr16
mov
cmpsl
imul
push
xlat
mov
jmp
pushf
fbstp
clc
add
stos
add
add
jns
arpl
push
jb
sbb
pushf
mov
fbstp
scas
add
jns
bound
add
cmp
add
aas
add
mov
jmp
jmp
outsl
push
sahf
insl
adc
aam
sub
adc
and
adc
add
add
movb
sub
pop
stos
daa
add
ds
xor
xchg
pop
aas
add
addr16
in
inc
jecxz
std
mov
popa
pop
sbb
mov
rclb
add
adc
mov
std
cld
cmpsl
sub
jmp
xchg
sub
aaa
cmp
addl
hlt
test
add
in
add
dec
call
idiv
or
in
sub
add
sar
mov
add
decl
mov
jmp
add
cld
iret
cwtl
xor
cmp
pushl
push
push
scas
cmovo
int
call
push
pop
stc
call
push
xorb
or
call
and
clc
filds
add
sub
repz
jmp
sub
das
sub
mov
out
xchg
mov
push
jae
xor
inc
push
into
out
cmp
inc
std
aam
enter
ret
call
flds
inc
push
cmp
jae
pop
add
call
push
pop
inc
pop
mov
lods
data16
add
es
lea
push
add
lods
cmc
push
imul
test
aaa
call
mov
xchg
jg
int
out
dec
mov
arpl
xchg
mov
sahf
inc
aaa
sbb
inc
ret
sti
xor
and
es
enter
scas
sbbb
lahf
sbb
add
add
jnp
add
adc
inc
ja
je
mov
insb
mov
out
xchg
roll
dec
mov
jmp
test
pop
push
ja
stos
pop
cld
jmp
push
daa
push
pop
insl
leave
jb
out
sub
aas
mov
inc
cmp
call
pop
out
test
aas
mov
cmp
add
add
dec
mov
aas
add
mov
aas
add
jge
popa
ss
jnp
roll
ret
divb
lret
adc
mov
lds
push
sub
pop
xchg
clc
and
call
mov
movl
add
cmp
add
hlt
call
divb
xor
add
add
xchg
adc
push
aad
xor
dec
mov
jo
mov
addl
cmc
int
movb
mov
add
dec
sbb
inc
jge
add
jecxz
enter
test
loope
sbb
call
mov
or
imul
xchg
mov
add
mov
les
call
xlat
mov
mov
mov
shlb
inc
and
pop
enter
sub
jmp
pop
enter
cmp
and
add
das
mov
or
fstps
cmp
dec
add
rolb
lods
mov
mov
insb
rorb
lods
stos
sub
in
adc
inc
inc
add
add
ds
call
push
cmpsl
lock
lods
xorl
es
and
mov
cmp
inc
arpl
loop
test
push
adc
mov
mov
sub
out
lods
sub
pop
stc
out
push
jae
mov
testb
cmpl
dec
jp
add
stos
cmp
add
stos
jb
sub
sub
popf
mov
xchg
jae
mov
out
ret
cli
clc
lcall
lock
je
push
loope
pop
std
jb
out
sub
aas
subl
out
jecxz
cld
bound
fdivs
mov
call
mov
decb
mov
aas
mov
cmp
mov
call
add
add
std
inc
add
call
push
pusha
add
and
add
aas
call
popa
ljmp
add
xchg
adcb
mov
das
call
mov
mov
cld
jne
or
xchg
roll
sar
mov
inc
xor
mov
add
add
jge
and
xor
rcl
add
pop
xor
hlt
adc
sti
jne
and
mov
inc
add
pop
xor
dec
leave
inc
lcall
inc
add
daa
jg
inc
mov
mov
addr16
add
sti
imul
push
add
std
xor
shlb
call
add
add
add
pop
mov
sbb
fiadds
call
addb
call
cmc
fwait
jno
xchg
add
adcl
sub
and
popa
pop
push
sarl
cmp
mov
movsb
fmull
jno
mov
pop
xor
or
ds
and
xchg
add
std
push
shlb
or
or
sarb
loopne
imul
ja
popf
out
push
sbb
mov
and
adc
out
add
cmp
sbb
loopne
divb
loopne
out
cmc
lcall
les
call
cltd
jb
iret
add
add
leave
jp
repnz
mov
add
fisttpl
lahf
xchg
fistpll
mov
sub
cmp
dec
mov
cwtl
mov
bound
mov
aam
mov
dec
jo
pop
int
xor
pushl
xchg
cmc
mov
daa
out
insb
adc
cli
inc
es
xchg
mov
repz
jno
nop
mov
daa
aas
push
aaa
mov
or
mov
add
add
outsl
add
ljmp
adc
inc
addb
ja
pop
push
cmovo
cltd
inc
jg
lea
clc
test
test
aas
add
std
inc
xchg
inc
add
xor
jge
cld
jle
hlt
int3
aas
add
ror
mov
cmpl
test
ret
mov
and
inc
add
add
mov
or
lds
jg
mov
add
mov
paddd
jge
xor
add
add
mov
imul
addl
mov
add
add
and
inc
jmp
test
fwait
sub
add
add
stos
or
adc
stc
lret
or
xor
and
mov
pop
inc
je
push
xor
pop
hlt
dec
add
mov
xor
andl
add
sub
mov
je
imul
sub
negb
or
jg
cmp
lods
or
mov
mov
add
add
repnz
and
repnz
and
jg
ds
cmpb
push
and
out
cmpsl
fcmovu
xor
scas
mov
into
jge
aas
out
jno
jecxz
jno
pop
clc
lcall
aam
das
add
cmpsb
add
and
imul
icebp
pushl
push
mov
add
add
stos
movsb
mov
push
dec
jb
movsl
test
inc
jle
pop
cli
out
xchg
stos
test
cwtl
int
jmpw
jecxz
push
repnz
daa
aas
cmpb
jl
sbb
test
jmp
lds
mull
inc
sub
sbbb
imul
sbb
sub
mov
inc
xchg
sahf
jl
sahf
add
add
inc
inc
jmp
jo
mov
or
adc
and
inc
mov
jo
mov
xchg
or
dec
push
mov
sub
pop
xchg
mov
punpckldq
or
mov
incl
movlps
jno
cmpsb
int3
out
inc
std
outsl
mov
pushl
int
and
data16
push
movsl
rolb
mov
inc
and
jge
mov
jae
rcrl
sub
or
and
xlat
and
incl
arpl
cmc
cmp
xlat
and
test
loope
xchg
and
add
and
add
aam
mov
xor
add
pop
inc
stos
cmpsb
and
lret
dec
cmp
test
clc
jge
mov
pop
inc
or
and
push
fs
inc
sbb
sahf
shl
in
in
add
test
cmpsl
mov
mov
cmp
pop
mov
mov
mov
jg
add
push
sbb
sarl
dec
and
add
sar
add
add
mov
add
xor
lods
sub
inc
ljmp
out
stos
aaa
add
jl
pushf
test
add
dec
je
jecxz
iret
jns
inc
out
bound
lret
or
shl
add
adc
xchg
orb
fs
call
jb
add
arpl
stc
ja
out
bound
call
push
xchg
add
add
or
cld
sbb
daa
inc
popf
sbb
hlt
and
mov
bound
xchg
nop
fildl
mov
out
scas
out
sarl
daa
mov
test
daa
aas
add
scas
and
daa
mov
add
inc
add
add
push
and
call
stc
jg
test
inc
add
push
jbe
leave
std
xlat
cld
je
add
dec
inc
je
or
inc
or
loop
or
ljmp
jae
jge
popf
in
sti
test
adc
imul
mov
std
call
in
or
add
xchg
inc
sti
ja
insb
dec
in
add
add
push
sti
cmovns
std
jmp
xchg
sahf
mov
add
mov
sub
es
xchg
and
mov
fidivrl
xlat
add
arpl
test
and
add
stc
add
cmp
repz
aad
add
test
test
add
lahf
mov
jg
lods
add
lods
mov
cld
sbb
mov
sub
mov
mov
xlat
jns
aaa
addr16
jae
in
dec
xlat
push
fistps
imul
and
out
add
push
cmpsb
mov
lods
xchg
cs
popa
cmp
cs
ret
cmpsb
mov
dec
insl
cwtl
mov
add
push
jae
jp
repnz
and
lods
jp
fisubl
xor
incl
cwtl
jp
repz
loopne
ljmp
addr16
enter
movsl
loopne
std
jmp
int
jb
cs
sub
daa
fcomps
fs
or
jnp
out
lret
call
mov
ret
push
je
cmpsl
arpl
jno
add
imul
sbb
xlat
pop
les
aas
mov
mov
sub
daa
in
jb
xor
call
sbb
mov
in
mov
clc
mov
icebp
mov
call
or
insl
cmp
jb
jmp
add
sub
jmp
fs
hlt
inc
lea
test
add
repz
subl
add
shll
clc
es
jg
cmp
adc
jno
pop
add
add
sbb
cmovb
adc
mov
fcomps
inc
fsubs
imul
or
jae
sub
xchg
cmp
sbb
outsb
pop
sub
je
mov
cmp
lods
add
mov
mov
inc
cmp
add
add
decl
jecxz
cld
jg
call
add
sub
or
inc
pushf
flds
cmp
repnz
scas
and
stc
fnstsw
sbb
dec
xchg
popf
ljmp
add
cmpsl
rolb
cmpsb
fs
and
iret
pop
cltd
loope
mov
mov
xor
fiadds
icebp
or
cmp
adc
or
aas
and
sub
fidivl
movsb
fs
adc
sub
or
addr16
jns
out
addr16
mov
fcmovnb
stc
sub
sti
scas
sub
arpl
aaa
sub
xor
clc
data16
dec
adc
popf
cmp
out
jno
out
add
sbb
divb
mov
iret
fidivl
mov
cld
daa
push
movsb
call
daa
cli
fcos
jae
inc
jb
inc
mov
jae
dec
decb
pusha
mov
or
imul
cmp
xchg
inc
add
cld
cmp
mov
pop
mov
xor
sub
pop
or
ljmp
add
add
push
cmpsl
shl
ljmp
jp
or
sahf
adc
sub
out
or
aas
pop
std
pop
loop
jne
xor
call
and
sub
sub
in
bound
in
or
push
push
mov
push
je
mov
push
sti
adc
xchg
cwtl
push
mov
lret
pop
xor
inc
or
dec
lahf
xchg
pop
jae
push
sti
ja
dec
out
rclb
test
stc
adc
jle
push
sti
mov
aaa
ret
dec
xor
lock
call
jg
pop
sti
cmp
rcrb
mov
inc
add
push
and
rclb
xor
test
jmp
add
mov
add
addr16
jns
mov
fnstcw
sbb
daa
adc
out
ljmp
in
jl
and
add
dec
sti
mov
mov
or
jns
mov
out
cltd
ljmp
add
and
mov
mov
lds
and
pop
cmp
and
bound
cmpsl
mov
add
sbb
push
push
imul
cmp
fcmovnu
movsb
xlat
in
aas
mov
push
sbb
cmp
dec
stc
stos
sub
enter
in
sbb
mov
cmp
xor
stos
sub
in
sbb
stc
and
stos
xor
mov
ja
mov
mov
push
adc
add
mov
add
push
xchg
adc
cmp
xchg
std
xchg
cmp
add
call
push
pop
mov
je
add
push
shlb
je
push
adc
popa
push
in
insl
addr16
aas
add
mov
push
cmp
outsb
push
aas
add
add
adcl
out
decl
add
stc
jge
jmp
add
add
lods
call
jbe
mov
loopne
insb
or
mov
mov
mov
lea
and
aas
cmp
xor
into
adc
je
aam
pushf
push
xchg
das
sarb
push
lea
or
es
jmp
mov
xchg
push
testl
add
add
test
outsb
and
adc
sbb
mov
or
xor
test
sbb
andb
call
mov
xor
lock
dec
inc
inc
dec
jge
das
mulb
add
sub
das
and
push
cmpsb
stc
es
mov
test
incb
add
and
out
pop
sbb
andb
std
or
add
aaa
dec
js
sbb
aas
je
cmpsb
jne
clc
cmp
jl
pop
mov
inc
in
int
js
sbb
out
push
subb
jae
nop
xabort
pop
xlat
cld
mov
je
and
fildl
cwtl
daa
stc
and
and
sub
add
add
cli
push
les
sti
fmuls
roll
mov
push
push
subl
push
and
or
incl
fidivrs
add
sti
push
int
imul
and
push
fwait
and
push
mov
ret
es
daa
ret
mov
push
sbb
cld
out
int
fisubs
add
add
lret
std
pop
jb
lods
or
call
cltd
test
fldl
push
add
je
test
es
lds
pop
pushl
jge
sbb
push
movl
adc
aad
and
cmp
ds
ja
sub
mov
inc
mov
paddw
call
add
add
sub
jge
pop
cmp
fwait
mov
fwait
xchg
cmp
inc
fcoml
adc
dec
add
mov
dec
xor
std
cmc
std
incb
and
jne
sub
ds
xor
add
dec
sti
jne
sub
daa
cmp
test
sub
mov
xchg
add
or
lds
or
stc
push
or
pushf
add
inc
push
mov
ja
ja
inc
call
test
inc
add
subb
sbb
add
ficomps
add
je
lods
xchg
pop
cltd
cmp
call
sbb
xchg
sub
mov
adc
add
add
pusha
sbb
sub
add
iret
mov
std
cltd
adc
cltd
inc
out
push
or
out
sti
fcoms
xorb
jae
cmp
and
fs
je
popa
sarb
unpcklps
cmp
pop
repnz
push
ds
ds
mov
rcrb
mov
fiaddl
es
les
add
clc
dec
mov
ja
sbb
dec
inc
addr16
sbb
movsl
mov
or
ret
mov
repz
test
jl
hlt
int3
adc
popa
inc
je
out
sub
mov
push
jns
aas
stos
cmp
jmp
inc
sub
inc
add
adc
xchg
push
xor
loope
inc
xor
add
rorl
and
shrb
pop
daa
add
or
inc
sub
push
cmp
pushf
push
call
test
push
xchg
loopne
add
sahf
add
add
ja
fimuls
cld
jb
inc
xchg
adc
sbb
push
call
inc
out
adc
fmull
icebp
scas
orl
lock
daa
ret
into
add
fstp
cld
jmp
cltd
les
add
cmp
sti
decl
les
push
dec
sti
adc
push
cmp
push
add
add
jge
adc
decl
inc
add
enter
sub
dec
cmp
test
std
inc
xchg
xchg
sbb
add
add
cmp
push
nop
test
cmp
mov
subb
mov
cmp
add
push
cmpl
xor
dec
les
and
add
popa
cmp
dec
mov
cmp
out
inc
fsubl
je
dec
into
scas
sub
xchg
xchg
test
adc
mov
dec
mov
scas
cmp
adcb
js
in
xor
inc
cmpl
or
add
add
xchg
xchg
pop
pushf
pop
test
arpl
xor
lea
cli
add
call
sti
sub
xchg
push
sbb
aam
sbb
push
and
adc
jp
mov
test
leave
push
sbb
pop
in
add
mov
xlat
jnp
mov
fcomps
mov
add
add
add
add
mov
popa
mov
sub
and
add
cmp
sbb
mov
push
shrl
inc
or
pop
sbb
mov
and
imul
add
mov
repz
mov
call
outsl
xchg
call
mov
call
push
jb
push
in
inc
es
add
sar
imul
imul
fistpll
and
daa
imul
xor
ret
aas
call
insl
out
sbb
pushf
sarb
add
push
adc
movsb
std
jbe
outsl
call
je
ret
cs
or
add
add
cmp
js
inc
call
test
dec
test
mov
aaa
jge
lods
jbe
dec
lcall
lea
lea
in
lds
call
test
scas
push
mov
daa
daa
jne
cmp
add
fdivr
dec
jp
cmp
std
and
dec
inc
xchg
add
mov
mov
arpl
or
xchg
loop
add
or
jae
adc
or
add
lahf
fwait
add
and
idivb
inc
shl
test
shlb
and
popf
mov
or
push
popa
sub
dec
loop
add
cmp
push
repz
mov
xor
inc
or
jae
xchg
sldt
add
sbb
cmp
cmpsl
sub
cmpsl
enter
stc
sarb
rol
imul
push
jmp
mov
sub
dec
aas
call
mov
mov
mov
repz
ds
push
ret
jnp
mov
fists
and
lret
inc
xor
adc
cmp
add
add
inc
pop
mov
sbb
lock
mov
sbb
fcmovnb
inc
push
and
enter
inc
jle
lods
push
ljmp
inc
push
hlt
and
pop
mov
pop
fimuls
xor
shufps
pop
sar
and
add
jmp
pop
aam
fs
cld
push
cmpsl
xchg
add
pushf
push
and
test
add
aam
insl
push
aas
add
inc
mov
rcrl
mov
cs
in
sub
and
inc
mov
dec
cmp
xor
lahf
jle
bound
sub
lds
xchg
movl
sbb
sub
mov
add
dec
lea
repnz
cli
sbb
incl
add
stos
cmp
add
mov
or
test
inc
and
or
xor
and
mov
cli
and
xchg
and
xchg
and
jge
or
push
fistps
lea
fistps
push
clc
mov
sub
mov
push
mov
sti
mov
je
add
push
mov
add
and
scas
fistpl
and
cmc
add
lahf
cli
fsubl
lahf
cwtl
adc
pusha
inc
in
and
xchg
aas
and
mov
sub
add
add
test
add
and
shlb
mov
xor
and
add
and
sub
add
add
add
aas
or
daa
aad
add
lock
call
and
aas
mov
pop
outsb
popl
and
out
icebp
out
jecxz
shlb
pop
or
inc
punpcklbw
mov
aas
out
sbb
arpl
out
pusha
sbb
mov
filds
in
mov
fisttps
out
jecxz
iret
push
push
addr16
pop
xor
add
add
and
sub
pop
aaa
xchg
adc
sbb
push
ds
loopne
jle
cmp
call
sbb
bound
je
ds
fiaddl
lock
rcrb
dec
out
cmp
iret
cld
call
mov
mov
idivl
inc
jo
and
das
sub
add
add
mov
adc
xchg
and
jmp
ret
and
fadd
int
adc
mov
and
cmp
and
rcrl
sbb
test
and
add
mov
sub
mov
cmpsb
jg
add
leave
pusha
add
dec
lods
cmp
xchg
mov
dec
call
rol
sub
add
add
add
lea
push
push
ds
sti
jne
dec
push
and
js
and
inc
std
decl
add
andb
test
add
aam
and
cmpsl
add
mov
xor
jmp
inc
pop
call
jb
inc
and
xchg
or
and
push
inc
dec
or
iret
and
add
add
mov
call
push
lahf
movsl
mov
and
add
mov
call
call
cmpsl
fwait
idiv
cwtl
add
mov
push
cwtl
and
jge
sbb
out
insl
psubsw
jne
pop
cmpsl
push
sqrtps
lahf
loope
jecxz
or
fisttps
cwtl
and
sbb
data16
add
xor
fmull
and
cwtl
and
add
add
add
and
push
jl
shl
or
xchg
inc
xor
sub
sub
add
sbb
add
mov
cmp
testb
or
jecxz
call
add
and
aas
out
lret
jle
inc
ds
jb
out
ds
push
xlat
pop
xlat
ljmp
add
fs
add
or
out
and
es
or
add
lcall
adc
out
movsb
std
ljmp
decl
cmp
call
mov
cmp
call
movsb
ret
sub
add
movsl
andb
jecxz
pop
and
jmp
sub
jb
fmull
inc
jmp
out
in
add
add
leave
cld
frstors
and
sub
std
xlat
adc
movl
mov
std
mov
rol
and
call
ja
add
lods
loop
add
jg,pt
jns
dec
and
dec
je
jno
sbbl
cmc
inc
and
lcall
push
pop
ret
sti
jbe
es
sbb
add
add
ret
sbb
sub
ds
jbe
es
or
sti
jbe
and
sti
jbe
sub
jbe
and
sti
jbe
and
sti
jbe
and
sti
jbe
and
sti
jbe
xchg
sbb
xlat
add
mov
jmp
add
cli
add
subl
add
add
lret
add
jae
hlt
out
fiaddl
add
clc
out
ljmp
mov
dec
adc
lret
pushl
in
out
or
dec
std
and
mov
out
repz
jno
and
dec
add
and
ja
sbb
mov
ja
jge
enter
and
pop
add
lret
cwtl
inc
aas
out
hlt
shlb
add
add
push
jl
or
arpl
ret
fwait
mov
decl
xchg
out
lods
je
leave
imul
xchg
push
jg
mov
push
ljmp
push
lret
or
cmp
add
jl
enter
or
shl
ret
and
mov
and
out
xchg
enter
enter
jg
xchg
aaa
insb
addl
add
out
gs
add
xor
add
rclb
test
scas
pop
lcall
inc
inc
jmp
scas
pop
add
and
or
or
aas
sub
call
fs
or
dec
inc
jmp
pop
dec
adc
sub
inc
std
push
jae
pop
sub
clc
addr16
cmp
add
sub
add
push
pop
std
jle
jp
faddl
inc
jmp
das
push
adc
dec
adc
cs
or
shlb
inc
test
cmp
gs
sbb
int
jno
adc
cltd
pop
xor
inc
xchg
cmc
ret
xchg
sti
jae
cmp
jo
add
mov
mov
in
pop
inc
add
add
add
dec
adc
nop
mov
xchg
mov
std
movsb
sub
push
fcmovnb
inc
xchg
std
decl
test
testl
mov
sti
mov
cmp
mov
ja
add
cmpsl
adc
addr16
add
sub
xchg
adc
xor
and
lcall
add
add
int
pop
imul
std
pop
pop
or
lock
addl
mov
aas
and
sbb
push
xlat
add
xor
pusha
push
lods
mov
and
lock
repnz
jmp
or
mov
mov
mov
les
jecxz
jp
add
out
stc
sarb
add
add
fs
lds
sti
dec
and
dec
dec
ds
pusha
xor
sahf
mov
jnp
adcb
push
les
mov
add
and
out
out
ss
jecxz
or
push
in
dec
push
pop
inc
out
loop
and
cmpsb
xor
mov
daa
and
lea
aas
inc
daa
add
xlat
decl
add
add
cld
push
xor
daa
aas
mov
loope
dec
adc
adc
stos
sbb
daa
pop
add
dec
pop
cmp
std
es
push
sbb
lret
add
daa
aas
std
push
test
jae
mov
cld
cltd
bnd
push
fs
inc
jmp
sub
andl
and
mov
das
std
xchg
add
add
push
or
lea
mov
addr16
add
jbe,pt
jp
xor
cmc
mov
fistl
movl
push
cmp
cli
lods
adc
adc
jno
adc
test
lea
idiv
lcall
dec
cmp
cmp
inc
jo
add
jl
call
add
add
xor
push
lea
daa
push
lea
ret
dec
call
into
add
cmp
cmp
jne
loopne
jno
mov
std
cltd
rcrb
mov
xlat
add
orb
sti
sub
movsl
imul
xlat
mov
and
cld
mov
sbb
add
fadds
xor
add
push
and
and
xchg
add
xor
or
testb
test
add
loopne
jmp
call
add
out
mov
and
ja
movsb
adc
insb
ds
mov
ds
fcmovb
push
les
push
mov
lods
sbb
out
movsb
aas
push
jg
imul
add
add
push
sti
mov
aas
dec
pop
outsb
xchg
add
jnp
ret
ret
mov
out
cld
clc
fnstsw
aas
out
lahf
mov
mov
out
out
and
movlps
aas
out
and
or
movsl
mov
jp
mov
lods
add
mull
ds
daa
lahf
imul
mov
add
and
imul
call
inc
addr16
pop
jp
data16
repz
aas
push
bound
call
jb
push
mov
push
lods
pop
outsl
mov
sar
arpl
subl
es
xchg
and
jb
sub
testb
jb
jg
sbb
daa
push
dec
cmp
cld
ret
add
ret
insl
cmp
js
jnp
cs
adc
addb
dec
pop
std
pushl
pop
std
incl
das
rolb
add
sbb
push
je
sti
jo
jne
test
je
inc
adc
jl
call
jmp
inc
insl
or
addl
lea
mov
inc
add
add
add
ja
add
xchg
addb
push
push
sbb
mov
mov
inc
lret
sub
aam
cwtl
arpl
in
xchg
ss
add
and
mov
adc
add
call
lea
push
mov
jl
fldt
jg
and
sub
add
add
add
adc
sub
cld
daa
insl
push
rorb
shll
dec
cld
scas
loop
andb
inc
or
fdivl
fs
pop
imul
jmp
dec
jle
cld
leave
sub
scas
inc
push
enter
lea
imul
push
jp
shll
jmp
pop
mov
push
adc
fcompl
xor
add
roll
fsts
ljmp
add
push
push
mov
jmp
fs
insb
les
inc
push
add
adc
add
inc
fnstenv
push
pop
sub
push
ds
mov
pop
aas
add
mov
push
mov
adc
pop
jmp
add
add
jle
in
cmp
aad
cld
int3
in
and
pop
dec
pop
sub
hlt
ficomps
pop
stos
pop
xlat
push
jae,pt
iret
sti
ds
sbb
or
pop
adc
jbe
cmovno
mov
sbb
mov
sti
jb
push
jg
add
xlat
jne
daa
sub
aas
call
in
inc
add
sbb
sti
ljmp
shl
out
fwait
in
or
adc
add
xorb
std
pop
push
dec
inc
add
aad
add
adcb
mov
adc
call
add
mov
or
adc
and
adc
add
ds
xlat
ds
adc
inc
xorl
add
jg
out
sarl
inc
add
mov
xchg
jns
std
dec
cmpsl
std
adc
xchg
inc
add
cltd
push
call
mov
fs
xchg
call
add
cld
sub
stos
add
adc
add
push
or
and
inc
sbb
gs
and
mov
jmp
xor
pop
and
add
add
and
out
aas
add
test
jo
xor
xlat
push
std
fstpt
xchg
pop
in
mov
ss
cli
inc
and
es
int3
imul
mov
sub
mov
jle
adc
in
xchg
int
repz
out
jae
loop
pusha
dec
sub
or
adc
add
add
les
insl
jmp
or
out
sbb
movsb
fprem1
es
sbb
repz
xchg
pop
gs
inc
add
mov
xchg
ds
in
out
lods
stos
lock
add
daa
mov
loope
push
push
mov
daa
aas
mov
mov
inc
jmp
daa
mov
rolb
jne
xor
data16
add
rcr
sbb
xchg
add
mov
in
mov
je
cmp
std
mov
add
add
pushf
jle
sbb
and
call
push
inc
test
pop
inc
xor
adc
call
add
lds
enter
mov
stc
incl
cmp
mov
add
add
and
cmp
add
pop
adc
push
inc
test
jb
in
roll
popa
insl
add
mov
push
or
decl
std
mov
add
pop
mov
xorb
jmp
or
add
sub
jge
sti
and
lds
stc
call
inc
std
clc
call
out
add
and
call
cmc
loope
or
lock
cmpsl
movsl
pop
jmp
xchg
inc
add
test
add
cld
pop
inc
add
push
std
inc
gs
mov
popa
lret
shrl
push
mov
pushf
or
and
push
xor
jbe
std
divl
stc
cmp
push
add
in
inc
push
in
add
add
add
mov
dec
push
fstpt
cmp
idivb
push
jo
jb
cmpb
pop
add
sub
ds
fldcw
imul
cmp
cmpsb
jae
imul
pop
or
movsb
lcall
and
xor
loop
push
jo
dec
cmp
push
cwtl
pop
pop
aam
sub
or
stc
add
mov
and
orb
xor
call
dec
dec
push
and
adc
push
mov
out
and
add
add
inc
jmp
lea
popf
out
xchg
js
cld
jo
pop
sbb
adc
add
add
pop
adc
jl
daa
aas
aaa
xor
call
and
ret
xor
inc
test
sbb
je
cltd
cli
or
inc
pop
adc
std
add
enter
jb
sqrtps
xor
and
pop
xor
sub
ds
push
add
mov
dec
and
mov
add
push
sti
push
popa
pop
add
lea
test
jge
cmpl
xchg
sarb
ror
jle
xor
sbb
lds
xor
add
dec
aas
call
mov
dec
inc
add
jne
jno
test
xor
js
and
cmc
aad
adc
inc
and
das
int3
add
add
add
ret
jb
test
call
push
inc
and
iret
push
out
cmc
aad
pop
js
and
das
int3
lock
mov
jnp
insb
fdiv
out
std
xor
and
fcoms
cmpsl
cmc
aad
xorl
das
int3
fsubs
inc
insb
inc
add
shlb
aaa
inc
fmuls
imul
aas
mov
gs
adc
cmp
gs
adc
cmp
gs
repz
sti
adc
mov
push
cmp
out
and
push
adc
cmpsl
add
jbe
jo
mov
pop
sub
out
out
stos
add
cli
dec
in
out
and
adc
std
out
cld
mov
jnp
std
out
es
xor
aas
fimuls
add
add
add
es
pop
adc
add
and
call
xor
js
xor
test
push
mov
jae
je
push
aas
cmpsl
push
stos
daa
mov
mov
ljmp
scas
push
stos
daa
mov
dec
add
push
fs
test
addr16
jmp
add
add
mov
dec
mov
inc
jmp
out
cld
notb
std
aam
dec
inc
jmp
sub
lahf
popf
jmp
dec
mull
add
out
inc
or
stos
add
xor
jmp
dec
inc
add
push
inc
std
les
and
cmp
pop
adc
and
xor
mov
decl
int3
cmp
ret
add
add
das
in
bound
wbinvd
mov
incl
mov
test
and
cwtl
pop
mov
mov
dec
leave
dec
mov
out
push
inc
dec
loop
pop
and
add
cld
push
xchg
nop
test
insb
insb
and
repnz
mov
into
lock
aaa
fcomps
adc
add
add
movsl
outsl
jae
add
xchg
inc
inc
and
movsl
pop
pop
flds
xchg
cmp
jle
xchg
add
cmp
and
movsl
xchg
in
fadds
xchg
and
and
je
sbb
cmp
pop
jo
jle
icebp
cld
mov
mov
int3
push
inc
out
bound
inc
and
push
incb
sub
add
add
add
aas
stos
pop
push
sbb
pop
cld
sub
add
xchg
mov
daa
pop
add
xchg
inc
call
jnp
aas
out
popa
push
out
add
jo
sub
cmp
and
out
cmpsb
ss
repnz
xchg
xchg
pop
and
pop
mov
and
pop
and
addl
ss
add
add
lcall
out
loope
cld
insb
jecxz
dec
inc
daa
pop
call
fmull
inc
jmp
out
mov
add
out
shl
adc
in
aas
mov
cld
jle
test
jb
dec
stc
or
cli
pop
mov
cld
sbb
adc
sub
or
aas
adc
jg
imul
add
add
test
frstor
adc
mov
xor
jmp
dec
push
repz
dec
add
call
inc
pop
or
je
sub
call
testb
cmp
mov
in
jl
sbb
sub
pop
test
std
add
sti
cmp
inc
add
add
add
sar
dec
add
sti
ljmp
std
mov
mov
lcall
call
cmp
xor
mov
xchg
sub
add
push
jnp
pop
outsl
addr16
sub
or
ret
add
xchg
faddl
popf
pop
clc
xor
inc
dec
hlt
xchg
mov
les
ja
jb
sbb
add
add
cmp
call
sbb
adc
cmp
lods
add
mov
jno
sbb
sub
pushl
movsb
cmpl
jmp
sahf
push
pushl
jl
stos
loope
and
push
add
aas
addl
sub
xchg
out
cmp
sbb
das
clc
inc
add
add
cmpsb
js
subl
push
gs
jb
pop
dec
daa
add
sahf
dec
sbb
inc
mov
or
dec
sbb
xchg
mov
sbb
inc
and
aas
roll
add
sub
xchg
push
icebp
test
add
jns
or
cmp
push
stos
daa
out
roll
add
ds
pushf
jnp
call
insl
addr16
jmp
std
mov
cltd
push
sub
lods
jb
fsts
subl
jno
repnz
push
push
sbb
cs
or
sti
addr16
xor
aam
pop
and
aas
std
mov
rorb
sti
addr16
subl
int
sub
add
push
mov
add
loope
add
mov
sub
popf
addl
cmp
add
push
loopne
mov
test
testl
lea
push
lcall
xor
mov
pop
mov
test
sti
ljmp
lcall
std
sarb
add
xor
cmpsb
add
sti
call
push
call
inc
xor
and
mov
jb
mov
fadd
push
xchg
add
cwtl
in
add
and
mov
add
aad
mull
add
test
add
shll
aas
inc
aam
aas
xchg
aam
insb
fcompl
add
add
cmpsl
lock
jae
push
and
and
out
lods
add
popf
stos
pop
mov
lods
mulb
add
pop
aas
push
add
sbb
js
sbb
add
adc
movsl
cmp
andl
jle
mov
rorl
movsl
jecxz
inc
out
add
add
sahf
jl
cs
xchg
inc
insb
std
jae
out
and
sbb
xor
lds
aas
sbb
mov
out
scas
sub
sbb
adc
lahf
sub
add
cmpsl
js
xchg
fadd
push
add
daa
sbb
pop
xor
push
push
loop
add
dec
cmp
cmp
mov
add
cld
xchg
pop
jg
jmp
xlat
push
call
insb
xor
in
dec
cltd
outsl
punpckhbw
daa
ret
idivb
call
fs
xor
fs
dec
cmp
push
call
sbb
call
insb
call
hlt
dec
xorl
in
add
call
add
inc
add
int
push
dec
push
sbb
add
sti
incl
cwtl
mov
and
sub
adc
jge
inc
dec
nop
scas
pop
ret
mov
jmp
add
add
xchg
sti
call
hlt
mov
and
cmp
push
push
mov
out
add
stos
dec
lea
cli
mov
add
or
push
js
lock
jbe
or
and
and
fcmovnu
ret
inc
jnp
movsl
mov
push
and
jne
aam
call
cld
stos
lea
jmp
icebp
out
hlt
sub
mov
mov
jnp
inc
pushl
push
push
arpl
clc
out
lahf
add
hlt
cmp
or
lods
fld
push
xchg
add
add
add
add
jno
shlb
pop
xchg
inc
ja
dec
loop
cld
push
adcb
sbb
push
jmp
sarb
pop
inc
pop
jo
notl
adc
sub
cmpsl
daa
and
add
mov
out
mov
test
test
push
imulb
mov
adc
mov
out
push
insl
roll
sub
addl
add
push
imull
inc
out
cmpsl
jg
sbb
or
ljmp
dec
push
sbb
pop
adc
adc
cmp
push
jg
jge
add
mov
outsl
xchg
jle
xchg
out
ds
mov
dec
xchg
mov
std
pop
push
mov
or
add
add
pop
fs
call
rorl
mov
xchg
loop
aas
subl
pop
push
adc
outsl
iret
jl
daa
mov
or
lods
jb
pop
sub
sub
xor
pop
and
pop
and
mov
in
jle
hlt
adcl
add
sbb
lcall
push
addr16
cmpsb
dec
mov
test
std
add
std
jge
push
or
loop
call
push
sbbb
cmp
mov
mov
add
dec
add
cmp
xor
stc
xor
add
adc
xchg
add
add
add
xchg
cld
decl
adc
jae
dec
jne
clc
out
cld
push
inc
jne
call
pop
jne
mov
cltd
adc
stc
ret
and
and
das
rorb
add
ja
movsl
stc
cld
xchg
xchg
pop
sub
xchg
add
fwait
inc
add
push
fldln2
or
push
mov
popf
fcomps
add
add
add
push
ficoml
jbe
cmp
adc
and
in
out
out
jb
les
stos
call
adc
popa
lock
rorb
and
cmp
dec
inc
call
aaa
mov
sbb
cmc
mov
and
movsb
xor
add
lahf
out
and
arpl
fwait
sahf
out
xor
pop
xchg
cmpsb
jae
jecxz
add
andb
mov
fwait
sub
ss
and
sbb
aas
out
es
lcall
adc
in
es
aaa
loope
push
roll
call
imul
push
sub
pop
add
or
call
push
fwait
push
adc
cmpsl
stc
xor
aas
push
add
cmp
jmp
add
add
aas
push
add
inc
jmp
sub
mul
mov
inc
jmp
pushf
jno
inc
xchg
push
rcrl
jmp
sub
push
xchg
xor
aas
jmp
and
testb
add
cmp
mov
mov
call
inc
pop
or
lret
pop
std
pushl
pop
cmp
call
add
negb
add
incl
test
push
inc
sti
adc
fwait
add
mov
dec
cmp
scas
mov
cmp
pop
mov
pop
inc
test
add
lret
call
decl
sahf
sti
push
in
inc
decl
mov
pusha
and
add
or
adc
xchg
xor
add
add
jecxz
cld
mov
idiv
cmp
add
out
rol
xor
jle
mov
add
outsb
push
int3
push
sar
shrl
rorl
add
and
add
inc
sbb
cld
movsb
sar
push
cmpsb
add
and
inc
and
call
andl
and
dec
lods
ljmp
call
pop
ds
add
sbb
int3
fsubs
aas
out
and
je
dec
stos
mov
and
out
sub
daa
add
aas
iret
add
inc
out
pop
arpl
hlt
stc
add
sbb
adc
in
aad
out
lahf
ret
add
xchg
popf
ret
lret
aas
out
movsb
aas
out
daa
cmpsl
iret
and
push
add
aad
bound
add
add
adc
sub
arpl
loope
add
sbb
adc
jmp
cld
call
inc
cwtl
mov
fs
bound
pushf
sti
lds
jmp
push
xchg
or
inc
add
daa
aas
add
jae
call
shrl
std
into
cmovae
fiaddl
add
or
out
std
and
addr16
inc
adc
add
es
push
sub
enter
or
call
sub
mov
add
jg
dec
add
cmp
test
cmp
inc
call
adcl
fs
cmp
mov
push
call
in
inc
out
outsl
jge
mov
mov
decl
add
addr16
sti
adc
movsb
or
std
and
dec
sarl
add
cmp
dec
mov
pushf
das
rorb
das
sarb
push
push
jg
add
cmp
push
and
xor
cmp
inc
and
mov
and
push
call
test
mov
mov
add
add
mov
mov
xor
cld
lods
loope
sbb
bound
adc
andnps
sti
es
and
cmp
add
test
and
add
push
mov
out
dec
add
mov
mov
lea
shlb
push
mov
aad
fwait
je,pt
dec
dec
mov
mov
aas
aaa
in
dec
testb
add
cmpsl
add
outsb
xchg
add
push
call
insb
inc
arpl
aas
out
cmpsl
bound
and
xchg
jmp
cld
std
ret
and
push
aam
sub
cmpsl
and
mov
sub
or
imul
orl
icebp
iret
xor
add
inc
insb
inc
add
insb
add
sub
ret
xchg
jp
add
add
out
incl
sub
add
repnz
xchg
push
add
sar
sub
cld
fdiv
das
inc
jmp
sub
push
das
in
adc
outsb
insb
out
sub
add
pop
adc
push
ret
daa
aas
push
sbb
test
fcomp
out
xchg
xchg
cs
push
pushf
add
add
add
daa
cmp
cs
je
pop
xor
mov
enter
push
add
inc
xorb
js
adc
jns
jae
sub
add
sti
adc
rorb
dec
arpl
add
shl
mov
inc
add
push
dec
adc
fidivl
push
sub
sti
adc
mov
add
call
jne
test
dec
std
inc
mov
in
or
add
inc
add
adc
jne
shl
and
dec
push
xor
cmpsb
xlat
aad
scas
add
adc
or
push
add
mov
ds
adc
scas
push
add
lahf
loop
adc
sbb
add
mov
aad
xchg
add
add
add
divl
and
push
inc
and
inc
in
fistl
out
jmp
test
and
sub
push
add
shl
ds
push
or
mov
repz
test
and
out
aas
sub
and
xor
cmpl
fiadds
and
insb
aas
dec
pop
pop
xor
add
add
call
push
push
ds
mov
inc
addr16
inc
inc
out
int3
sub
xchg
pop
repz
inc
xchg
arpl
add
xor
cmp
out
ss
inc
and
push
inc
enter
enter
and
loopne
icebp
sub
repnz
rolb
jne
ljmp
aaa
push
inc
es
adc
add
add
push
add
stos
adc
and
lds
pop
adc
xchg
jae
cmp
xor
mov
fldl
rcrl
xchg
xor
xor
add
arpl
call
aas
inc
add
daa
lds
sub
pop
mov
popf
pop
sub
push
jb
mov
pop
mov
cli
xchg
subl
add
daa
aas
push
inc
sti
adc
jmp
mov
push
sti
clc
jno
inc
mov
push
call
xchg
mov
adc
cmp
mul
rorl
test
add
fmulp
xor
mov
das
adcw
sub
rolb
jb
je
mov
jg
fwait
add
adc
cmp
adc
add
or
cli
add
dec
movb
out
dec
std
add
xor
dec
decl
lods
push
inc
or
cwtl
sub
out
inc
and
rcll
inc
imul
dec
sar
push
inc
in
xchg
adc
mov
nop
push
cmpsb
cld
mov
xchg
notb
pop
insb
inc
and
fstl
jae
mov
out
jmp
jg
rorb
add
add
fdiv
jno
add
pop
push
popa
in
pop
ss
pop
insl
xadd
rcll
js
inc
add
sbb
jae
sbb
add
in
insb
lret
jb
sbb
sub
dec
push
or
sbb
xchg
cmp
cmp
pop
dec
ret
fld
in
adcl
add
popf
dec
cmp
jb,pt
push
xor
test
dec
jle
iret
mov
mov
insl
push
add
dec
dec
aas
ret
int
xchg
cmp
test
add
es
jmp
fistpl
sar
out
es
mov
and
sbb
out
cmp
ljmp
dec
arpl
push
clc
lds
cmp
call
xchg
add
add
pop
fstps
adc
daa
call
adc
subb
mov
fucomip
pop
and
add
sbb
xor
cmp
add
dec
aas
call
dec
into
cmp
dec
ja
cld
mov
and
std
lahf
push
cmpsb
add
lahf
adc
lahf
add
pop
aas
xchg
jnp
rclb
aas
add
addr16
inc
rorb
les
jmp
es
daa
inc
jno
push
das
imul
int
sbb
add
xorl
pop
aas
add
or
and
push
add
test
jmp
inc
add
mov
mov
push
call
nop
inc
add
jns
lcall
push
call
add
shrl
aaa
mov
sbb
mull
xchg
xor
mov
in
push
cld
or
add
in
pop
aaa
push
add
loop
dec
and
and
add
adc
pop
dec
pop
sbb
mov
into
testb
push
sbb
das
cld
push
mov
cmp
add
sub
push
jo
mov
inc
adc
push
imul
and
stos
ss
mov
shrb
jg
cld
stc
adc
sub
add
into
jns
and
xchg
adc
out
out
sub
cmp
fiadds
and
xor
push
mov
mov
add
mov
add
cmp
sub
rcll
daa
cli
inc
and
cmpsb
add
mov
insl
xor
mov
fstpt
jle
xchg
ds
into
dec
je
mov
dec
enter
jmp
push
mov
mov
sti
mov
dec
mov
call
mov
mov
xchg
fimuls
aam
add
add
and
and
add
mov
mov
xchg
xchg
sub
push
movsb
or
pop
jmp
dec
push
adcl
cld
push
fwait
aam
jle
mov
mov
movsl
add
call
and
fwait
sub
add
shlb
dec
push
rolb
add
and
add
add
xchg
mov
adc
decl
jp
push
movsl
inc
std
decl
jns
push
rolb
push
les
xchg
or
pop
mov
imul
cmpb
mov
out
push
pop
mov
cmp
jne
mov
mov
lods
mov
add
int
hlt
ljmp
add
push
sbb
pusha
fiaddl
sub
jp
sub
jmp
mov
or
push
std
imul
push
std
mov
mov
pop
loopne
daa
xchg
add
in
push
mov
sub
int3
bound
and
jge
nop
mov
cld
add
add
sbb
out
test
add
xchg
add
aaa
adc
push
and
jmp
add
cmpsl
jle
mov
int
out
cmp
add
mov
xchg
adc
jle
stos
or
sbb
mov
add
popa
pop
cmp
fbstp
mov
call
xchg
add
imul
ret
push
pop
lock
mov
xchg
imul
ds
and
mov
xchg
xor
mov
imul
mov
xchg
xchg
mov
jmp
data16
fdivl
adc
push
inc
add
mov
aam
sub
pop
mov
mov
jge
mov
mov
daa
in
call
add
add
cmp
cmp
add
xor
push
jb
xor
inc
loopne
inc
jmp
addr16
subl
aas
xorl
aas
je
sub
daa
xchg
pop
and
add
jge
add
push
jae
pushl
xchg
test
and
add
ljmp
incl
add
mov
aad
pop
jle
inc
aad
inc
xchg
sti
mov
push
call
pushl
push
inc
cld
lods
imul
stos
jl
sbb
cmp
test
ja
out
jmp
ja
shlb
add
ret
out
jge
ljmp
and
add
and
add
fidivrl
add
xchg
jge
jae
jo
in
jge
or
add
dec
filds
scas
rcrl
int3
popl
and
sbb
xchg
jge
dec
mov
sbb
inc
add
adc
add
sti
sub
push
jno
add
xor
inc
and
xchg
push
addr16
aad
pop
inc
inc
and
or
pop
pop
add
add
add
inc
add
lock
xor
test
sbb
push
adc
xchg
mov
jnp
popa
daa
adc
stos
sbb
xor
or
fcmovnb
sbb
add
mov
bound
inc
in
sar
in
punpckldq
ds
fisttpl
lock
fwait
popf
pop
sbb
aas
and
jmp
fldt
call
cmpsl
jle
jle
inc
out
lods
add
jbe
xchg
ss
shl
sbb
add
les
mov
mov
mov
repz
jecxz
cld
pusha
cmp
test
daa
aas
sbb
cwtl
cmp
in
cltd
out
push
jae
daa
out
push
inc
pop
call
add
add
test
aas
add
xchg
fstl
mov
cmc
ss
mov
es
xchg
mov
add
daa
shlb
mov
add
dec
push
push
sbb
fs
les
push
add
test
mov
andl
add
add
call
lock
mov
add
packsswb
jge
cmp
test
add
es
bswap
xor
inc
hlt
mov
out
jmp
mov
subl
mov
out
or
add
mov
jne
cmp
sti
daa
push
and
out
stos
js
add
in
pop
jg
cmp
inc
inc
and
mov
add
add
push
mov
add
lahf
dec
fmull
sub
fdivrs
add
mov
push
xchg
sub
mulb
jns
dec
sbb
or
push
push
loopne
dec
xor
mov
xchg
add
imul
sub
das
sbb
lock
aas
jo
xor
add
add
cmp
cld
pop
xchg
pop
lret
ret
and
sub
js
das
lods
add
insb
aas
pushf
out
jecxz
jmp
xor
sbb
add
add
push
js
sbbb
jp
pop
pusha
inc
add
dec
dec
in
lcall
cmp
hlt
js
xchg
xchg
xor
loopne
popf
movb
outsl
ds
pushl
mov
icebp
aaa
pop
cld
pop
push
xor
add
cld
fs
adc
xchg
bound
sub
mov
idivl
lock
and
cld
cld
jnp
std
or
aas
subl
mov
mov
jg
sti
jmp
iret
add
add
add
addr16
and
jb
movsb
add
in
cmp
scas
aaa
jle
mull
add
insb
mov
stc
jecxz
push
je
into
sti
cmp
ret
push
add
and
inc
add
xorb
jmp
add
int
clc
inc
xorb
into
ret
call
adc
xor
cmp
inc
mov
inc
cld
mov
jae
add
add
paddq
cmp
sub
inc
dec
pushl
call
mov
sti
je
jns
cmp
or
roll
xchg
and
enter
test
cld
aam
dec
lock
test
sbb
xchg
lods
pop
xchg
roll
out
inc
add
dec
ret
add
mov
enter
lret
shll
push
mov
loopne
adc
xor
divl
hlt
add
lahf
testl
add
popl
decl
and
xlat
mov
mov
inc
and
shll
aad
and
repnz
pop
cld
rcrl
repz
pop
addr16
mov
add
add
jl
nop
outsb
outsl
aaa
das
xor
lods
mov
out
popf
or
in
mov
xchg
frstor
ljmp
jl
inc
cwtl
movups
jl
pop
add
cmpsb
cmp
repnz
jl
jne
and
stos
pop
mov
add
out
scas
popa
fldl
cmp
inc
add
adc
stos
add
add
test
mov
mov
mov
xchg
in
in
addr16
push
add
jne
out
jp
sarl
pushl
cltd
sbbb
mov
sbb
sub
xlat
adc
jno
int3
mov
mov
mov
adc
out
call
push
add
lahf
jp
in
in
push
fs
hlt
dec
inc
add
pop
mov
sbb
in
ret
call
call
xchg
or
aas
add
jns
dec
ret
jns
int
mov
mov
sbb
add
mov
jmp
adc
sti
wbinvd
jle
decl
add
jle
and
inc
xchg
push
xor
jb
aas
add
jg
dec
or
lcall
and
adc
mov
push
pop
inc
and
or
das
mov
jmp
mov
add
mov
sti
in
fildl
pop
data16
scas
shl
pop
mov
and
push
push
add
add
sub
cld
fs
add
mov
mov
or
add
lods
clc
add
mov
and
into
jge
in
inc
sbb
and
or
dec
ds
mov
sub
test
sub
dec
enter
test
nop
xchg
and
mov
mov
add
adc
mov
aas
inc
dec
out
insb
push
pop
inc
add
addr16
push
sbb
cmpsb
or
xor
je
or
pop
lods
scas
stos
mov
lods
outsl
imul
fmull
dec
dec
dec
aaa
out
fists
in
loop
in
add
lods
mov
cld
jmp
in
and
add
add
and
jb
and
popa
lds
cmp
xor
lahf
repz
mov
js
jmp
pop
addr16
daa
aas
imulb
adc
or
int
xchg
popa
pusha
aas
add
or
ds
call
mov
jmp
shl
add
aas
add
dec
and
call
lock
cld
push
aaa
and
into
addl
and
stos
dec
cld
cmp
pop
push
push
xchg
adc
mov
add
loope
or
loope
push
call
push
das
and
xchg
pop
cmp
pop
xor
inc
adc
and
push
and
or
scas
cld
dec
mov
jae
stos
push
hlt
mov
add
xor
adc
pop
push
mov
xor
cmpl
add
aaa
test
inc
dec
cwtl
adc
clc
cs
aas
xchg
out
in
xchg
add
loopne
adc
sub
fildl
dec
adc
in
outsl
nop
mov
out
inc
adc
test
mov
mov
inc
popa
aad
cmp
pusha
adc
test
add
xor
jo
xorl
add
sbb
adc
sub
push
push
jge
or
xchg
lods
jmp
sub
cmp
xlat
xor
jbe
stos
fs
add
inc
add
data16
sti
add
mov
and
sub
adc
out
sub
out
in
push
add
pop
jnp
adc
add
or
cmpsl
add
dec
mov
push
addr16
inc
and
xchg
adc
ljmp
gs
push
das
adc
pop
popf
pop
inc
lds
lret
ja
test
adc
mov
sbb
pushl
sub
je
test
jmp
cmp
ds
pop
cmp
jae
jno
clc
and
add
add
out
and
cmp
mov
ds
dec
jne
jmp
sub
jg
daa
aas
std
pushf
aaa
jb
in
push
enter
pop
mov
lods
lret
push
addl
sbb
add
cld
out
inc
rcr
jl
std
cld
dec
inc
jmp
loop
or
pop
inc
sti
adc
mov
pop
add
add
adc
notb
and
repz
add
mov
dec
call
les
and
mov
je
shlb
and
in
sar
loop
sti
adc
idivl
push
clc
ds
inc
std
adc
out
test
and
test
and
push
cmp
test
add
shlb
lcall
call
mov
add
ffree
jo
and
jg
cmp
mov
add
pop
mov
adc
jne
mov
jnp
adc
xor
add
imul
sbb
add
pop
je
daa
lahf
sbb
das
cmp
lods
incl
sbb
and
sbb
and
and
mov
in
aas
and
xorb
out
cmp
scas
fcmovnu
jg
add
and
add
cwtl
adc
sti
lcall
and
int
dec
ret
add
cmp
push
cmp
aas
jb
ret
adc
and
pop
imul
and
push
repnz
dec
xchg
ljmp
ret
cli
lret
jno
ffreep
lds
loopne
jb
ffreep
or
cmp
mov
sbb
out
out
stos
mov
add
ljmp
std
aas
out
lods
sti
ret
jmp
adc
inc
ret
jmp
dec
int3
in
push
es
subl
jp
call
enter
jno
mov
test
cs
inc
add
lods
cld
and
scas
sti
pop
bound
dec
xchg
add
add
inc
int
jmp
jb
pop
push
ljmp
adc
or
push
and
stos
daa
mov
and
movsb
addr16
mov
stos
dec
inc
jmp
mov
notl
inc
dec
pop
movsl
lret
dec
push
aad
nop
call
mov
adc
cmp
clc
and
jnp
add
pop
push
inc
mov
add
mov
inc
sub
sub
call
mov
push
pop
cmp
adc
inc
jno
inc
sub
cmp
add
stos
adc
aas
sti
decl
out
test
dec
pop
and
jne
into
lcall
inc
and
aas
inc
adc
push
inc
or
push
adc
je
std
add
add
je
inc
and
mov
adc
sub
add
stos
cld
adc
sbb
cld
pop
pushf
cld
andl
push
int
in
pop
inc
mov
push
out
jge
sbb
push
and
jne
sub
cmp
xchg
outsl
popf
add
mov
aam
xchg
mov
sbb
inc
and
add
sub
xchg
cld
and
test
outsl
and
divb
inc
cmpsl
sbbl
aaa
and
inc
mov
mov
repz
jnp
roll
and
bound
mov
bound
mov
mov
shlb
sbb
sbb
movsl
aaa
repnz
imull
dec
repnz
add
add
repnz
mov
mov
adc
mov
or
cmp
orb
inc
add
pop
in
call
and
xchg
es
xchg
jmp
aas
push
add
aas
mov
mov
jno
call
sub
xchg
cli
es
xchg
and
add
daa
aas
push
xchg
xor
call
and
call
neg
add
and
add
cld
insl
pusha
cmp
loope
adcl
inc
add
jle
stc
vmwrite
decl
clc
jle
adc
adc
mov
mov
je
call
pop
jmp
inc
daa
and
add
add
mov
push
xor
xchg
add
add
mov
jno
sbb
lds
scas
out
std
sbb
jns
push
push
movsl
inc
dec
jmp
aas
in
cmp
add
scas
adc
rclb
and
add
and
add
and
sbb
imul
cld
test
add
and
add
xlat
add
or
filds
add
add
ret
pop
cwtl
mov
pop
add
pop
add
cmp
pop
inc
and
ret
or
and
or
xor
or
mov
mov
xor
lods
pop
add
dec
dec
adc
and
xchg
mov
add
hlt
dec
push
push
push
lods
adc
cli
inc
and
incl
add
cmpsb
lcall
stos
cmp
add
movb
lret
add
ret
jmp
aad
dec
push
adc
pop
mov
mov
add
imul
andb
push
pop
mov
push
call
ss
mov
repz
push
icebp
imul
out
incl
aas
out
out
repz
add
add
adc
andl
rcll
daa
mov
xchg
daa
aas
std
fisttpll
dec
std
hlt
dec
inc
jmp
sub
std
pop
lret
add
add
imul
ss
jge
adc
xor
push
xchg
pop
ds
daa
push
cmp
push
and
push
or
jge
or
jmp
sub
cld
jmp
es
add
and
fs
and
cmp
addl
add
inc
and
or
inc
cmp
in
xor
and
xor
and
cmp
addl
or
inc
std
addb
add
repnz
lcall
add
add
and
cmp
call
es
add
cmp
and
gs
jo
insl
ret
popa
xor
xor
pop
jo
add
mov
pop
xor
inc
mov
ret
dec
ja
movsl
mov
dec
push
sarl
push
add
push
push
call
lahf
fwait
clc
mov
add
push
cmp
inc
and
xor
fs
stos
xor
xchg
fmuls
addr16
mov
inc
and
lock
repnz
jb
adc
test
mov
sbb
fs
jmp
movsl
pushf
cmp
es
and
hlt
cld
pop
aas
insb
divb
cmpsb
inc
pop
arpl
jle
xor
add
add
scas
divl
xor
and
outsb
xlat
sub
cli
fdivrs
inc
adc
add
test
jnp
ds
je
cmova
out
or
add
invd
idivl
out
int3
mov
das
scas
fstl
sbb
stos
cwtl
mov
int3
movsb
jbe
js
out
stos
adcb
add
add
gs
xor
aas
add
adc
xor
daa
mov
stc
addl
rorl
aas
push
cmp
mov
cs
daa
mov
cmp
jl
mull
jmp
daa
push
mov
mov
adc
adc
call
adc
add
add
xor
out
add
shrl
jge
in
push
or
add
push
out
inc
cld
inc
add
movsl
in
arpl
push
leave
jp
test
add
sub
inc
sub
inc
out
inc
mov
ret
or
xchg
cld
je
mov
daa
and
call
xchg
add
data16
in
repz
add
aas
add
aad
jno
jmp
jns
and
sub
call
scas
jge
cld
lock
decl
sub
cmp
push
mov
shrl
cmp
cmpsl
xchg
pop
cwtl
loopne
push
add
add
in
push
or
lcall
cli
cmpsl
out
cwtl
add
sti
mov
add
jle
sbb
mov
mov
pop
sbb
mov
call
std
mov
sub
sbb
sahf
cmp
pushf
pop
adc
add
push
leave
bnd
arpl
popa
lods
cmpsl
cmpl
and
pop
rolb
add
pop
bound
add
inc
imulb
xor
je
xor
adc
ss
sub
bound
jmp
stc
fwait
sbb
add
in
ljmp
in
out
fwait
sub
add
in
loop
sub
add
lcall
jle
xchg
jo
add
push
out
daa
pop
mov
mov
add
mov
cmp
je
fs
mov
cld
out
addr16
add
call
xor
adc
and
std
fcoml
dec
inc
jmp
mov
call
daa
aas
std
sbb
or
ret
cmp
and
add
movsb
mov
call
mov
mov
or
add
add
cld
add
inc
add
int
data16
jb
add
stos
sbb
jge
xchg
push
call
test
cmp
push
out
call
les
cld
push
out
call
mov
test
ret
cmp
pop
cld
add
stos
in
jno
add
add
pushf
ret
or
or
xchg
out
call
popf
or
cmp
add
mov
inc
add
inc
mov
push
pushf
aam
push
add
inc
imul
imul
inc
and
or
andl
sbb
add
enter
inc
sbb
in
mov
ja
add
add
aam
cld
cmp
xchg
jmp
out
cld
lods
gs
adc
mov
jb
iret
cmp
adc
cmpsl
insl
add
push
dec
xchg
add
push
aaa
fs
aaa
xor
add
out
stos
data16
push
and
fisttpl
pop
push
or
xor
jl
mov
push
dec
aas
out
dec
rcl
add
jmp
mov
cmpsb
jp
mov
jne
sub
jbe
dec
addr16
sbb
dec
lods
inc
addr16
jl
inc
add
pop
sti
scas
push
add
mov
addr16
cmp
sub
add
mov
cli
pop
mov
shl
add
adc
call
sbb
push
bound
add
je
jmp
sub
add
inc
push
aaa
dec
addr16
sbb
leave
iret
shll
call
scas
or
xchg
shr
stos
loope
call
stos
stc
call
stos
icebp
call
ss
enter
or
loope
add
lcall
add
imul
mov
lock
add
add
mov
add
call
xor
mov
adcb
filds
mov
popf
xchg
jne
out
jge
mov
sbb
inc
sti
adc
gs
incb
orb
lahf
inc
add
and
sub
push
rcrb
call
xchg
mov
add
jge
xchg
xchg
xor
call
add
ret
jae
iret
adc
lahf
stos
or
ljmp
sbb
lahf
cld
mov
loop
jae
roll
imul
mov
xor
adc
out
addl
scas
sbb
xchg
push
fdivr
lock
mov
xchg
sti
pop
movsb
xor
add
add
js
dec
cmp
cmpsb
incl
adc
add
lock
repz
lahf
adcb
fdiv
arpl
out
es
fs
add
call
add
out
adc
aas
out
add
call
or
out
inc
mov
cmp
out
movsb
fdiv
add
dec
notb
fwait
pop
imul
add
add
addr16
movsl
sbbl
ds
test
and
popa
mov
arpl
ss
data16
movsb
dec
pop
popa
xchg
stos
rol
mull
jle
dec
sub
call
pop
call
and
daa
enter
and
scas
int3
or
daa
lock
and
add
and
mov
add
add
loopw
fwait
pop
subl
ret
out
daa
aas
mov
int
cld
jb
sarb
mov
call
sub
rcl
dec
call
or
shl
daa
enter
outsb
xchg
jb
cld
inc
jge
daa
xchg
and
xchg
or
and
jo
xchg
and
add
add
mov
incl
add
int3
movsl
aas
mov
movsb
mov
inc
mov
lds
add
xchg
jp
out
stos
cld
incl
lods
in
je
add
inc
insl
std
out
mov
push
mov
popf
push
inc
add
adc
lds
push
jge
add
add
scas
mov
add
add
jmp
std
sub
cmpl
add
lea
hlt
bound
pop
mov
dec
dec
lods
cwtl
dec
add
out
push
int3
jp
call
and
and
cs
and
cmpb
add
inc
sbb
cs
jecxz
data16
inc
jb
std
sbb
out
cwtl
lcall
sub
or
xchg
add
add
das
xchg
mov
mov
mov
pushf
push
mov
cmpsb
pop
test
mov
push
mov
das
std
popa
lds
inc
xchg
or
ret
ja
rcrl
push
movsl
jg
and
enter
xor
push
push
sub
out
jecxz
mov
mov
arpl
add
add
lcall
aam
add
cmp
sbb
push
sub
out
out
xlat
fisubs
fldenv
call
out
push
cmp
cld
mov
jg
stc
notl
lds
cld
lahf
dec
jg
jne
push
jb
in
and
sub
call
jecxz
mov
pusha
sub
sbb
sbb
addr16
jmp
add
add
cmp
out
xor
adc
and
notl
aad
loopne
test
sub
add
sbb
in
pop
call
arpl
insl
fstl
jmp
lock
inc
and
or
je
pop
sti
mov
inc
add
into
mov
mov
mov
and
mov
jecxz
or
add
orb
mov
arpl
mov
inc
std
jo
and
inc
call
lea
je
mov
mov
and
insl
dec
mov
fldenv
cvtps2pd
ss
inc
add
dec
mov
add
and
mov
aam
fstps
mov
add
adc
sti
addb
add
cld
mov
lods
adc
sub
test
scas
test
mov
inc
dec
add
js
cld
out
or
push
add
in
stos
xor
add
jb
mov
imul
adc
and
add
iret
inc
in
scas
adc
add
push
mov
sub
push
add
add
lea
xor
inc
and
cmpsb
mov
cs
add
jmp
scas
pushf
dec
arpl
jne
sahf
out
cs
add
icebp
sub
lods
arpl
adc
adcb
hlt
out
xor
shl
clc
int3
loop
icebp
sub
repz
jo
or
fs
sub
ss
out
adc
incl
add
mov
inc
arpl
pop
aas
out
adcl
test
sub
add
mov
movsb
xchg
or
lods
push
cld
jmp
adc
pop
adc
pop
hlt
sbb
mov
adcl
into
and
daa
addr16
in
daa
aas
mov
push
call
xchg
push
or
add
add
mov
add
or
cltd
sahf
jnp
pop
movsb
sbb
push
insb
movsb
sbb
push
adc
mov
test
lcall
cmp
mov
fidivrs
das
ljmp
jecxz
ljmp
mov
or
mov
ss
dec
and
mov
push
add
add
enter
or
out
pushf
cmp
xor
xor
and
mov
in
dec
cmp
test
jo
lea
jo
push
andb
call
and
dec
out
and
mov
jbe
pop
dec
lahf
pop
pop
add
push
jle
jl
cmpsl
mov
aaa
fistpl
fs
add
add
fsubs
decb
add
aas
and
lods
mov
cltd
xchg
cmc
loopne
sbb
and
jnp
sub
movsb
push
mov
pop
orl
test
push
lock
and
pop
mov
int3
xchg
cmpsl
std
fstpt
pop
ret
movsl
add
dec
aas
adc
fs
dec
int3
cmp
arpl
add
add
push
jge
and
and
in
cmp
rcl
es
outsb
inc
inc
and
adc
scas
int
out
jnp,pn
inc
and
ficompl
xchg
inc
and
fimull
addl
and
out
fidivrl
outsl
adc
rcl
fsub
shl
mov
and
push
inc
stc
dec
pop
shll
xorb
and
add
popf
in
jmp
stc
repz
ret
lcall
cld
cld
xchg
cmp
mov
out
and
add
push
push
stos
daa
aas
mov
push
sbb
ds
idiv
clc
repz
xchg
dec
mov
xchg
or
in
jle
js
add
lock
mov
std
mov
insb
jne
cli
jbe
add
mov
adc
aas
subl
xor
or
movsl
xchg
adc
loopne
out
push
adc
into
ret
add
pushl
ss
stc
adc
fdivrl
inc
jge
mov
shrb
mov
or
inc
add
cmp
sub
dec
adc
je
add
xchg
adc
call
inc
jg
pop
sub
add
adc
adc
daa
inc
sti
adc
inc
pop
xchg
and
pushf
xchg
push
add
lods
cwtl
and
or
xor
push
mov
jecxz
test
mov
call
cmp
aas
and
xchg
cmp
cli
out
add
int3
xor
add
fists
sbb
js
add
int3
mov
xor
mov
cmp
xor
inc
add
fidivrl
inc
sbb
add
and
inc
lock
push
add
or
out
cld
sti
jo,pt
add
and
add
mov
cmpsl
cld
out
je
mov
ret
nop
mov
and
sub
adc
add
xor
jo
lods
fsubr
sub
bndldx
fs
and
notb
nop
mov
add
stos
push
or
loopne
sbb
xlat
adc
mov
mov
push
sub
mov
dec
sbb
and
popf
jle
lret
mov
xchg
cli
out
lahf
push
mov
cld
sbb
xlat
jecxz
add
add
std
fsubrl
dec
cld
inc
cmp
sarb
stos
daa
mov
cmp
sbb
std
xchg
xchg
bound
xchg
mov
inc
std
pop
xchg
imul
push
lcall
jbe
add
mov
mov
out
int3
sbb
push
addb
inc
jmp
push
add
jmp
out
add
add
les
mov
add
rolb
ret
aaa
shrb
add
lock
push
inc
int
call
test
es
push
cmp
dec
push
mov
sti
push
adc
sarl
pop
inc
inc
jge
xor
rep
cld
incl
jle
or
addl
jnp
outsb
jecxz
add
ss
cmp
dec
push
and
push
inc
xchg
cli
lret
in
xor
enter
inc
add
cmp
add
xor
outsb
dec
mov
and
add
push
pushf
push
fs
popa
mov
xchg
add
rcl
mov
ljmp
lea
shl
xor
and
mov
mov
outsl
ljmp
and
ss
cmp
aas
push
xlat
lret
rcll
push
cs
and
lcall
push
out
je
sbb
cmpsb
mov
gs
sbb
push
xlat
inc
les
aas
iret
add
out
fnstenv
cmp
adc
mov
add
incb
add
daa
lret
push
nop
inc
and
in
jbe
jecxz
shrb
es
adcb
ds
enter
ljmp
xlat
jns
or
daa
jl
or
jecxz
cmp
out
in
inc
shl
xchg
sub
adc
fcmovbe
fdivrl
xor
shrb
sbb
add
cmp
pop
ficomps
negb
or
sbb
aas
data16
hlt
repnz
pop
addr16
xor
dec
mov
cmc
xchg
xorl
jge
mov
cltd
cmp
rorb
sub
shl
push
inc
rolb
adc
addl
add
xchg
aaa
out
xor
jg
or
adc
push
cmp
xor
inc
or
xor
sub
or
hlt
jmp
in
imul
icebp
push
xchg
jno
push
cld
cld
push
imul
cmp
jo
push
pop
push
add
imulb
xor
add
xchg
cld
pushl
adc
sbb
sub
and
sub
in
test
jge
inc
sub
push
or
addr16
adc
push
sbb
and
mov
or
pop
outsl
cwtl
cld
pushl
nop
push
push
xor
pop
aad
add
xor
std
cmp
repnz
and
push
or
push
or
pushf
lock
lret
mov
mov
in
out
add
sahf
add
add
mov
std
decb
push
jge
mov
imul
out
out
imul
aam
repz
and
iret
aam
leave
mov
xor
or
xor
and
fdivl
jle
out
and
inc
xor
add
fwait
leave
push
sti
sub
add
add
in
arpl
pop
jmp
adc
gs
cli
ret
cmpsb
jo
std
cli
add
add
loope
adc
jo
icebp
pushf
xor
lret
cli
push
jae
xor
fsubl
aaa
inc
mov
int
push
inc
pop
stos
adc
int3
shlb
xor
xor
jmp
insl
jae
pop
push
sub
mov
add
add
add
js
pushf
mov
mov
mov
insb
out
sub
jae
xchg
in
daa
aas
add
shr
inc
jmp
daa
loope
sub
and
inc
jmp
daa
inc
add
add
add
subb
cmp
pop
sub
xor
push
add
jno
mov
inc
dec
call
into
pusha
cld
mov
push
inc
add
add
cmp
cmp
push
jge
mov
mov
icebp
cmp
and
movsl
jbe
add
ljmp
mov
out
xchg
cld
incl
pop
jle
pop
pop
push
adc
in
jno
add
mov
xchg
shrb
and
es
add
add
es
and
imul
add
push
mov
jnp
or
inc
add
push
test
movsb
cmp
push
out
add
and
movsl
jae
xor
cmp
and
cld
cmpsb
test
add
sub
or
test
lahf
popf
cwtl
test
add
ja
add
add
add
cmpsb
cwtl
xchg
cmc
push
add
fimull
les
sti
mov
mov
das
in
push
pop
xchg
lret
mov
stos
das
mov
mov
adc
lret
out
call
add
addr16
out
aas
push
fwait
testb
mov
imul
out
jle
cmp
out
jmp
add
jo
lcall
push
push
mov
aas
rcl
scas
leave
stos
sub
mov
sarb
out
lcall
xchg
sti
pop
daa
mov
lds
mov
xor
movsb
jg
cld
dec
cltd
sarl
fnstsw
and
cld
insb
addr16
pop
inc
and
inc
cmp
aam
insb
add
add
repnz
fs
lods
idivl
jne
aas
daa
repnz
test
xlat
jb
cmp
nop
and
jbe
test
pop
xor
cld
pop
pop
cmpl
daa
orl
mov
mov
mov
movsb
fstpl
pop
add
jecxz
sub
pop
les
outsb
inc
add
add
jge
add
add
dec
sar
or
jb
dec
subb
sarb
jb
cld
push
in
sub
or
pcmpgtb
sarl
mov
insb
jne
and
jle
jae
mov
scas
pop
or
inc
push
push
jb
add
and
xor
mov
xchg
insb
sub
add
add
and
dec
shrl
pop
stc
jecxz
loop
out
inc
add
scas
aaa
xchg
inc
mov
arpl
sbb
imul
xorl
add
mov
dec
insb
push
out
imul
sar
into
xor
lods
arpl
imull
add
add
add
aas
outsb
aaa
pushf
aam
cmpsb
xor
jmp
adc
enter
lods
arpl
aas
jmp
adc
enter
ret
mov
mov
data16
aas
aaa
test
pop
inc
lods
or
ret
jmp
mov
and
aam
jbe
add
pop
movsb
add
add
cmp
insb
jl
ljmp
mov
loope
insb
iret
out
add
pusha
mov
jb
sub
fs
push
mov
inc
add
mov
cmp
lock
push
inc
jg
movsl
scas
daa
jb
mov
xor
aas
test
insb
push
jg
pop
inc
xchg
xor
sbb
cld
fiadds
add
mov
and
mov
aas
jg
movsb
cmp
mov
daa
pushf
xchg
pushf
push
mov
add
cmpb
add
std
or
cld
decl
sub
addl
ret
jecxz
mov
mov
xchg
lea
mov
add
add
push
xor
push
shll
add
pop
add
repnz
add
adc
ret
jg
add
push
dec
push
call
dec
sbb
lock
call
pop
ss
add
aaa
or
stos
adc
frstor
add
shrl
movsl
ret
xor
and
push
ds
xchg
jae
inc
fsub
pop
jnp
add
add
xor
std
cltd
jecxz
xor
fcom
imul
lea
add
jnp
add
sbb
sar
addr16
push
icebp
nop
jae
adc
out
das
jnp
sti
js
mov
inc
sbb
and
ds
out
mov
inc
xchg
dec
dec
bound
daa
add
je
insb
movl
jmp
mov
push
nop
insb
movl
inc
incl
xchg
or
ror
lcall
cmp
movl
call
mov
dec
jo
jmp
cld
loope
xlat
ret
std
cmpl
movsb
jg
leave
lods
ja
movsb
out
dec
imul
cmp
cmp
sub
mov
add
add
sarl
add
stos
mov
adc
mov
popa
mov
jmp
dec
or
aad
pop
daa
cmp
aas
pop
mov
sar
push
mov
aaa
push
inc
adc
pop
daa
jl
xor
in
adc
andb
lods
and
outsl
test
jl
jg
pop
cmp
call
add
loopne
and
fsubrs
inc
out
push
sti
mov
adc
std
adc
cmp
or
push
aaa
add
push
ret
adc
stos
xchg
stc
xchg
mov
clc
mov
dec
cmp
adc
adc
mov
inc
inc
std
ja
leave
inc
adc
dec
test
lea
sbb
sti
das
test
sub
sti
je
add
xorb
adc
cmp
lcall
call
ret
adc
mov
mov
sti
push
inc
push
in
or
sbb
xor
std
lock
jb
cmp
pop
adc
fwait
dec
jae
mov
std
jnp
lea
adc
mov
das
test
sub
incl
add
pop
adc
jbe
adc
out
cmp
in
jbe
mov
fadd
xor
cmpl
fdivl
test
icebp
aaa
shl
mov
into
call
pop
adc
daa
mov
sbb
imul
orb
adc
in
rcr
sub
out
and
ret
push
sub
xor
imul
add
incb
push
enter
cmp
cmp
adcb
push
sub
aas
flds
and
in
push
lret
xor
jb
jnp
adc
cld
fmull
pop
daa
insl
push
stos
xor
inc
mov
ljmp
jg
jmp
add
jp
test
lds
popf
jp
aad
outsl
xchg
mov
pop
add
ja
xor
mov
call
add
add
push
aam
daa
movb
push
add
dec
lea
mov
xor
andb
dec
add
jl
cmp
out
test
push
inc
inc
jmp
daa
mov
pop
mov
push
cmp
jmp
adc
adc
cmp
lods
inc
outsl
xchg
aas
test
xchg
push
sti
popf
and
daa
add
add
dec
jmp
push
sbb
add
cmp
mov
push
jmp
cmpb
cmp
mov
inc
divl
shlb
pop
adc
ljmp
and
cmpsb
int3
sar
cmpb
jne
ret
adc
add
push
ficomps
cmp
push
inc
lcall
pop
adc
add
add
inc
in
int
mov
ret
xor
mov
cld
movups
cli
decl
out
addr16
push
mov
or
orb
aaa
add
or
sub
jae
lods
mov
jne
sub
mov
cmpl
repz
and
and
aaa
jle
add
cmp
push
inc
and
shl
bnd
test
mov
cmp
inc
and
sar
or
daa
cmpb
add
movsb
or
xor
sbbl
jg
ds
add
pop
inc
mov
vpackssdw
call
mov
add
sbb
sub
imul
jl
les
adc
daa
xchg
movsl
add
outsb
inc
ja
outsb
sar
incl
cld
xor
or
push
rcrl
and
lret
mov
add
pop
cmpb
mov
and
add
xchg
jmp
scas
jp
fs
push
cmpsb
push
jbe
add
add
lods
clc
cltd
mov
mov
jl
das
cld
out
cmp
inc
xlat
das
cld
ds
movb
jle
jb
pop
mov
sub
adc
adc
jmp
push
sub
add
sbb
out
xchg
xor
jg
push
xor
or
sbb
cmp
aam
cmpsl
add
jge
add
add
add
add
in
in
les
adc
or
nop
aaa
add
inc
adc
pop
push
lods
stos
outsb
or
addr16
add
jno
mov
jne
or
inc
add
inc
sbb
ds
std
adc
xchg
out
pop
arpl
adc
std
mov
jle
orps
sbb
pmulhuw
inc
add
add
add
cmp
add
inc
add
xor
add
and
cli
mov
pop
ljmp
sbb
addl
sbb
sbb
clc
and
arpl
sbb
and
je
sbb
clc
adc
lahf
sub
cmp
add
add
adc
cld
adc
decl
andb
add
add
outsl
jb
mov
sub
rcrb
sbb
xchg
addl
inc
fisubrl
ret
xor
les
gs
mov
ljmp
rclb
jno
leave
mov
test
das
lcall
ds
loop
sub
decb
movsb
stos
sbb
sub
mov
icebp
dec
inc
loop
sub
add
sbb
aas
jmp
cld
scas
test
jge
pop
push
or
sub
sub
scas
ja
test
sub
add
in
jle
cmp
inc
push
inc
pusha
mov
cmp
mov
ljmp
sub
mov
pop
data16
push
mov
push
cli
aas
add
pushf
in
je
lea
mov
add
add
aas
mov
aaa
push
add
and
ss
aas
call
pusha
push
call
jo
mov
stos
and
push
bound
xchg
mov
push
jne
in
out
in
jp
cld
push
sub
std
and
fwait
push
sub
adc
dec
pop
push
inc
imul
mov
add
and
std
adc
lret
add
adc
in
xchg
repz
stos
ds
pop
and
adc
jge
adc
sub
xor
test
and
xchg
decb
jg
cmp
movl
pop
mov
inc
and
add
push
push
cmp
inc
std
ret
pop
and
add
and
add
adcl
sub
loop
and
pop
cwtl
add
movsb
das
add
test
and
add
lahf
pushf
and
and
add
out
out
pop
ljmp
movsb
and
and
fimuls
pop
or
ljmp
pop
fiaddl
cltd
sub
add
test
scas
add
sbb
clc
and
and
mov
add
cmc
subb
aam
and
negl
mov
xchg
mov
out
popa
inc
outsb
movl
lds
xor
je
inc
pop
cwtl
sub
fst
or
fldcw
mov
lock
dec
jmp
sbb
jbe
movsl
mov
movsl
daa
or
cmp
dec
sub
mov
or
jo
cmp
es
lahf
sub
rolb
sbbl
lods
push
push
pop
adc
movsb
je
dec
int
js
call
in
sub
push
sub
cmpsl
movsb
and
daa
mov
push
add
jnp
adc
jnp
jg
inc
inc
add
and
ja
sub
xchg
or
sbb
jnp
fld
xorb
pop
sbb
push
test
es
out
xor
cmp
lea
adc
addr16
mov
push
xor
sahf
mov
cmpl
ja
add
add
lcall
mov
adc
push
lcall
loop
mov
addl
aas
and
addb
cmp
aam
cmp
fwait
lcall
and
mov
jmp
repz
fidivrs
test
mov
sbb
add
add
pop
cwtl
mov
hlt
sbb
adc
les
insl
shl
push
sub
pop
xor
mov
fisubrl
test
sbb
pop
jl
pop
cld
adcl
add
frndint
lahf
pop
iret
push
lahf
add
adc
pop
insl
aad
push
jnp
or
enter
insb
cld
jg
add
movsb
leave
frndint
add
add
ds
ss
loop
movsb
adc
ljmp
xchg
dec
imul
imul
loope
fs
imul
clc
ret
shll
bnd
ds
pop
mov
shll
cmp
imul
movsl
xrelease
push
data16
add
out
stc
pop
xchg
aam
imul
xchg
add
pop
add
inc
and
add
stos
mov
push
inc
jmp
jg
daa
inc
add
mov
lds
jecxz
xchg
mov
jmp
fcmovnb
push
inc
jecxz
xchg
mov
jmp
pop
les
jecxz
xchg
daa
push
out
add
add
lock
daa
aas
add
pusha
nop
jmp
popf
and
push
pusha
sub
cmpl
movsb
shlb
cld
mov
addr16
xchg
sub
add
xor
inc
repnz
popa
push
add
xchg
movsl
aas
and
mov
mov
mov
or
adc
call
xorl
and
add
mov
in
mov
pusha
mov
insb
or
int
divb
cmp
push
or
mov
push
push
xlat
cli
sti
mov
and
call
je
push
call
mov
repnz
and
inc
or
jl
fidivrl
and
stos
pop
std
mov
adc
adc
xchg
adc
jb
add
sbb
or
hlt
adc
mov
inc
popf
inc
out
scas
fcmove
pop
out
call
movsb
sar
cmp
push
sbb
or
jb
cltd
ljmp
aam
inc
and
outsl
out
mov
jmp
jae
sbb
arpl
and
mov
jl
add
aas
pop
movsl
cmpsb
inc
and
mov
data16
aas
jge
movsl
movsb
fldl
cwtl
inc
push
add
aas
mov
dec
shl
pop
and
add
fs
data16
aas
data16
aas
pop
sarl
je
aaa
insb
shrl
andl
mov
and
ret
push
jg
enter
shrb
pop
adc
adc
add
add
idivl
fstp
jae
add
and
lret
es
cmp
hlt
outsl
dec
inc
jmp
cmpsb
pushf
or
mov
jl
cltd
lods
jl
cltd
jg
mul
cmpb
inc
mov
mov
int
sbb
push
push
push
shll
je
pop
sub
dec
jl
fstl
lods
or
add
add
sbb
daa
aas
mov
add
lret
push
and
and
and
mov
cmp
lcall
inc
sbb
mov
dec
inc
add
mov
mov
and
fistps
and
or
dec
pop
lcall
pusha
lcall
or
cmp
add
fwait
outsb
sbb
dec
push
cmp
std
adc
adc
add
xchg
sub
xor
adc
xor
ja
xchg
clc
ss
add
or
ret
int
jl
aaa
ljmp
shlb
sub
xor
shrl
shl
out
add
or
stc
es
push
in
sbb
add
add
in
and
fcoms
sub
dec
sbb
inc
cld
jb
dec
dec
aam
pusha
dec
and
mov
cld
dec
int3
jae
cld
shrl
jae
or
pop
add
and
adc
ljmp
jg
lds
mov
daa
leave
test
push
inc
notl
int3
add
add
jne
push
dec
xor
pop
aas
sub
movsb
pop
add
pop
lret
int
jmp
mov
xchg
inc
jo
and
stc
or
sub
jge
arpl
aam
jmp
pop
jo
xor
arpl
ret
sbb
mov
pop
push
cmc
addr16
inc
xchg
xchg
mov
adc
add
jle
shl
insl
xchg
pop
mov
das
inc
jmp
or
mov
insb
popa
or
xor
addr16
call
insl
push
cmp
sti
out
push
ss
push
push
sub
jb
mov
xchg
call
bound
movaps
add
sub
mov
jo
sub
jo
mov
lds
cmp
hlt
out
cld
call
mov
mov
pop
pop
dec
inc
add
stos
jecxz
cmpsl
mov
adc
nop
adc
inc
push
mov
pop
push
and
mov
push
jmp
cmovo
xlat
mov
dec
stos
sub
add
add
popf
mov
les
mov
adc
sti
mov
dec
call
addl
or
cmpsl
add
clc
mov
lahf
scas
inc
scas
cli
sub
and
ret
adc
je
out
out
mov
sbb
ret
pop
arpl
repz
dec
mov
cld
push
add
orb
add
add
repz
mov
mov
mov
repnz
mov
jmp
mov
cld
or
mov
lcall
repz
push
push
or
mov
adc
aas
data16
inc
cld
or
cmp
roll
inc
outsb
ret
inc
enter
sbb
imul
add
jnp
es
xor
add
lds
lock
sub
lcall
mov
inc
jg
into
ds
pusha
movsb
pop
sti
aad
jl
and
outsl
std
stc
add
int
dec
fcom
pop
cmpsl
push
pop
jb
sbb
jle
mov
xor
int
pop
add
inc
call
push
sbb
into
fnstenv
ljmp
add
push
sub
sarb
mov
bound
bnd
push
enter
jl
mov
sub
pop
lahf
sbb
pop
pop
pop
add
loopne
rcrl
push
dec
int
xchg
repnz
decl
in
pop
mov
jg
cmp
outsb
in
cmpsb
adc
xor
clc
lock
inc
es
pop
add
pop
stos
add
test
in
lds
add
and
imul
jns
or
cld
sti
mov
shlb
clc
dec
idiv
loop
push
or
loop
jge
push
adc
cld
sti
mov
adc
mov
decl
cmpb
repnz
call
add
and
cld
addr16
add
add
adc
cmp
jno
dec
and
or
repz
pop
cld
je
insb
dec
enter
and
push
mov
int3
fldt
pushl
sub
push
mov
and
ret
cld
movsb
and
testl
std
sbb
icebp
aas
and
pop
shlb
add
pop
push
mov
push
repnz
adc
and
mov
cld
mov
hlt
mov
sbb
push
inc
pop
cltd
in
jmp
pop
jbe
pushl
sub
push
mov
stos
adc
ljmp
push
test
inc
ljmp
cmpb
sbb
xor
mov
xchg
je
add
add
enter
jl
add
imul
push
dec
dec
push
cmp
push
outsl
xchg
mov
cmp
ret
cmp
and
call
jmp
push
add
adc
adcl
mov
cmp
sarb
adc
in
cld
cmp
add
add
aad
fs
adc
jmp
popf
xor
xlat
push
push
xlat
push
cld
sti
mov
and
addr16
hlt
out
dec
add
daa
lret
cwtl
enter
adc
cltd
pushf
sub
xchg
enter
enter
adc
mov
cltd
cwtl
in
add
cld
adc
cmpb
add
add
mul
add
shr
std
inc
xchg
cmp
add
mov
repz
je
jmp
mov
sti
decl
ja
call
inc
add
shll
add
jg
dec
inc
add
mov
or
fnstcw
add
mov
jg
add
add
jns
mov
loop
test
and
add
stc
std
add
or
cltd
rcll
jmp
int
jecxz
cmpb
jb
cli
lret
in
cmp
fcompl
in
scas
imul
les
dec
mov
rolb
and
cld
mov
inc
jae
add
cmp
add
xchg
sbb
arpl
sti
pop
push
cmpb
push
pop
cld
aam
adc
aas
adc
sbb
mov
pop
out
pop
jg
adc
pop
imul
push
adc
cmpsb
sbb
or
test
adc
pop
lock
pop
push
pop
stc
ret
jecxz
sub
add
enter
shll
mov
and
add
stc
pop
andb
mov
jle
jl
xor
cmpb
push
jo
ret
imul
pop
push
and
arpl
cmp
fistpll
daa
push
shlb
and
add
fsubrs
stc
aaa
clc
aaa
cli
icebp
sub
mov
lds
mov
cmp
add
scas
stc
lea
sbb
out
xchg
les
cmp
or
es
shl
aas
test
movsl
and
sti
fsubr
inc
inc
jmp
pop
jbe
aad
movb
iret
or
add
add
sarb
push
adc
xchg
mov
inc
sbb
add
or
and
call
push
push
cmp
add
cvttps2pi
or
add
adc
cmp
ret
rclb
push
push
pop
ds
cmp
imul
dec
adc
adc
int
mov
inc
imul
loop
xchg
xchg
mov
add
mov
add
pushf
inc
mov
jae
incl
dec
pushl
fwait
aas
jae
loopne
jae
ret
sub
or
cmp
ljmp
mov
aas
and
mov
out
inc
shrb
lods
gs
pop
push
mov
adc
out
inc
ljmp
jae
add
pop
pop
add
add
and
jo
add
daa
aas
iret
and
ret
xor
jmp
inc
pop
bt
ret
dec
mov
ret
cld
pushl
jg
adc
push
test
mov
fimull
adc
lcall
or
loop
lock
in
push
jbe
cmp
call
inc
addl
push
call
mov
add
add
fiadds
push
mov
ss
test
in
in
inc
scas
xchg
jge
insl
pop
mov
mov
add
xchg
pusha
push
pop
push
fdivrl
jbe
pushf
mov
jb
cld
aam
and
xchg
pushf
add
movsb
pop
push
cld
inc
adc
jbe
mov
mov
jmp
fs
xchg
pop
div
inc
push
xchg
add
add
ret
daa
or
stc
sahf
mov
fstpl
or
test
cmp
push
mov
cmp
sahf
or
or
gs
dec
add
fdivl
inc
jge
repz
jb
loopne
add
xor
imul
xchg
cld
lea
mov
mov
add
outsb
or
enter
out
push
sub
pop
call
xchg
jnp
incl
jno
push
add
std
mov
je
jecxz
jmp
cld
mov
jno
or
jae
add
mov
je
jecxz
dec
inc
add
dec
pop
mov
sbb
dec
adc
xor
and
jnp
cmpsl
jb
push
add
add
push
add
dec
inc
gs
push
xchg
dec
dec
dec
repz
pmulhuw
aas
or
cmp
mov
push
add
fwait
cmp
lahf
rcr
adc
les
sti
repz
jge
cltd
push
mov
adc
cld
rcll
push
cld
ficompl
cmp
mov
jmp
data16
add
or
pop
pushf
push
mov
mov
fcmovnu
mov
add
add
or
add
jg
jp
sbb
inc
xchg
in
mov
sub
sub
pop
aaa
or
push
scas
test
mov
test
mov
ja
mov
xor
pop
sahf
cmp
jl
aaa
insb
inc
add
add
dec
daa
xchg
fnstsw
and
aaa
cmp
mov
ss
xor
jp
xchg
xchg
or
sahf
push
data16
sbb
jbe
hlt
insb
lock
push
cld
fsubl
addr16
xor
inc
add
out
mov
fldcw
cwtl
pop
lcall
rol
push
jg
fimuls
adc
xchg
dec
lahf
pusha
ficoml
add
add
add
mov
lcall
pop
lcall
lcall
sbb
add
cmc
out
ss
pop
leave
inc
rcll
sbb
scas
push
hlt
into
sub
notl
mov
xchg
add
enter
jmp
inc
insb
xor
fidivrl
fcomps
add
add
scas
cmp
xor
mov
les
pop
mov
mov
ja
sub
sub
mov
bound
pop
jbe
sahf
sub
mov
cs
mov
and
pop
das
mov
sti
xlat
icebp
mov
das
mov
rol
adc
and
adc
punpckhdq
daa
adc
insb
stos
das
pop
and
add
cmp
lret
add
add
das
mov
and
test
mov
push
mov
adc
adc
jp
xchg
xor
stos
pop
sahf
out
das
or
stos
das
clc
jl
cmpl
jae
jb
bound
test
xchg
mov
adc
fdiv
sti
pop
pop
out
jg
add
add
sub
mov
sti
adc
ficoms
dec
test
shll
aaa
push
aas
mov
xchg
ljmp
sub
lret
loope
sahf
mov
jo
xor
les
sbbl
sub
test
mov
ja
lock
sti
test
jmp
vmovntps
xor
inc
cs
aaa
addr16
movsl
mov
pop
jne
xor
add
mov
lret
xchg
mov
xor
lcall
push
sub
jns
lcall
jp
pop
ret
or
outsb
aad
call
pop
mov
popa
cmpsb
aas
ss
aas
pop
pusha
fisubl
test
mov
inc
xchg
mov
and
mov
test
add
jns
pop
sarb
in
repnz
xchg
data16
cmp
into
sub
adc
mov
loope
xchg
test
xchg
mov
pop
inc
sub
push
cmp
xor
adc
pop
loopne
push
into
test
xchg
mov
cli
subb
out
scas
mov
push
loope
popa
inc
das
xor
add
add
imul
mov
mov
mov
push
aam
inc
int
sbb
dec
lahf
mov
fiadds
push
xor
cmc
sti
mov
add
enter
daa
out
into
lds
sahf
mov
int3
mov
mov
add
int
and
mov
xchg
mov
add
add
subl
lahf
andl
adc
push
mov
sbb
outsb
out
push
cltd
cli
jo
test
arpl
es
aas
pop
cmpsl
dec
lea
movsl
xchg
jmp
scas
dec
cli
pop
movsl
mov
sbb
cmpsl
lods
call
leave
xor
jmp
pushf
adc
mov
insl
sbb
pop
ds
fcomi
imul
mov
int3
xchg
add
dec
sbbb
dec
jo
shll
ds
jl
xor
inc
add
jl
mov
lods
das
sbb
sub
data16
cwtl
ljmp
add
add
mov
cld
push
pop
inc
mov
loope
dec
mov
je
sub
sub
pop
pop
das
jo
ss
sub
test
jp
add
cmp
jge
cmp
sub
sti
add
ds
fdivrs
cs
loope
add
out
mov
push
lcall
add
inc
fwait
adc
shl
sbb
test
xlat
sub
and
xchg
inc
roll
fldcw
mov
jb
sub
data16
or
sub
xchg
pop
sahf
cmp
adc
xchg
pop
out
adc
into
mov
scas
mov
mov
lea
jb
xchg
sahf
pop
jbe
add
mov
sub
push
dec
scas
mov
imulb
test
mov
mov
shr
adc
add
loopne
adc
sub
nop
pusha
mov
test
pop
dec
sarb
push
movsb
das
aaa
leave
mov
frstor
inc
xchg
lods
mov
xlat
jb
test
add
add
add
adc
jno
xor
gs
xlat
dec
int3
add
rclb
jl
das
or
cmp
mov
pop
sahf
cmpsl
mov
jb
fnsave
cmpsl
add
jg
cmpsl
lds
mov
push
pop
inc
mov
mov
mov
mov
add
popf
mov
aaa
mov
sahf
push
or
push
hlt
sub
lret
adc
push
dec
nop
mov
stos
jno
pop
test
mov
dec
test
and
mov
cmp
add
pop
ret
push
mov
orl
mov
jb
fimull
sbb
dec
lcall
add
int3
mov
lcall
enter
cmp
aad
aaa
lcall
mov
movsl
stos
cwtl
and
mov
popa
and
adc
jb
xor
lcall
mov
push
addr16
fwait
stc
or
cs
in
add
jbe
mov
outsb
inc
cs
sub
sbb
cmpsb
sub
add
add
cmpsb
shr
push
lahf
int3
adc
or
xchg
cmpsb
push
popf
cmpsl
cmpsb
sub
xor
fwait
cmpsb
sub
mov
repz
mov
pop
adc
or
xchg
movsl
sub
or
int3
ljmp
xor
dec
call
out
push
loopne
adc
add
sub
add
add
pop
adc
fwait
lahf
and
loopne
repnz
cltd
push
adc
loopne
sub
and
aaa
and
loopne
and
push
mov
push
fildll
mov
loopne
lea
mov
jns
test
loopne
movsb
and
xchg
or
xor
and
jae
popa
adc
daa
jmp
add
test
push
jae
popf
or
pushf
jmp
push
mov
jno
das
push
push
adc
pop
fistpll
or
dec
stc
sbb
xchg
inc
fnstsw
imul
and
jae
filds
repz
push
mov
fists
repz
xchg
loopne
fldl
cwtl
pop
push
inc
mov
dec
jne
sub
cmp
into
dec
mov
push
fnstsw
fistpll
fnstsw
cmp
cs
pop
push
sbb
cli
adc
mov
je
sub
loopne
enter
add
fistpll
push
aam
test
sbb
ljmp
pusha
cmp
xor
mov
lcall
sub
cmp
add
pop
mov
lcall
sub
lcall
pmullw
xor
pmaxub
mov
movsl
pop
andb
les
xchg
mov
adc
xchg
fldt
sbb
add
sub
cs
sahf
push
adc
pop
xchg
mov
hlt
add
add
xchg
cmc
jbe
int
sahf
sbb
jmp
shlb
dec
lahf
xchg
mov
mov
sbb
sub
imul
sub
arpl
sub
push
lea
sahf
es
sub
popa
adc
mov
into
fwait
test
add
sub
mov
fimuls
sbb
in
xor
add
inc
mov
pop
aaa
stc
mov
mov
test
mov
mov
mov
das
cli
pop
mov
pop
jae
dec
adc
xor
das
arpl
stos
pushf
stos
idivb
loopne
cmp
outsl
mov
push
adc
mov
int3
aas
mov
rcrl
pop
adc
daa
jae
das
pop
or
pop
add
add
mov
adc
aas
sub
mov
fsts
mov
fsub
jbe
pop
mov
fisubl
arpl
cs
pop
dec
mov
in
pop
lds
int3
sbb
dec
pop
jnp
push
out
push
fbstp
ffreep
push
scas
ja
mov
ffreep
dec
push
mov
rcrb
ja
and
filds
add
adc
sbb
into
adc
scas
arpl
sub
fcomps
sbb
add
add
inc
jmp
int
js
mov
aas
add
fcmovb
test
stc
cli
sti
cmp
sahf
cmpsb
into
jmp
bound
scas
xorb
imul
jmp
and
out
out
mov
mov
js
mov
add
adc
ret
scas
cmp
add
pop
inc
jmp
daa
imul
fs
idiv
xchg
pop
lret
fmul
sbbl
aas
add
mov
inc
mov
push
push
inc
data16
cld
lea
sub
add
imul
lea
add
mov
lea
add
sub
aad
inc
add
imul
jge
data16
mov
lea
push
call
push
enter
cmp
mov
lea
inc
add
cwtl
xchg
mov
add
sti
call
inc
add
and
add
xchg
lret
arpl
fcmovnbe
or
and
add
add
ret
push
pop
int3
xchg
outsb
pushl
in
push
add
add
leave
arpl
decl
out
mov
aaa
sub
mov
lcall
push
rorl
and
call
pop
pop
push
test
out
lcall
aaa
cld
scas
sbb
cld
cmp
adc
and
xor
idivl
bnd
add
nop
aas
jmp
jl
aas
jmp
cmp
enter
hlt
fsubl
in
pop
mov
cmp
test
mov
add
cltd
xchg
mov
cmp
sub
sub
cld
cli
scas
ret
push
hlt
cmpl
stos
jp
mov
add
xor
hlt
mov
fldt
mov
add
pushf
xor
repz
ds
xchg
jge
repz
add
stos
add
gs
imul
bnd
mov
aas
add
repnz
mov
inc
push
test
sub
test
stos
cmp
lret
cmp
add
sbb
push
sub
mov
je
pop
in
jmp
sub
add
push
jmp
gs
sti
jmp
push
inc
addb
cmp
add
mov
push
aaa
das
mov
aaa
push
clc
out
sti
test
add
ret
add
sub
cld
aaa
imul
fstpl
call
jb
je
add
out
jle
pusha
aaa
cld
push
sub
aaa
cld
call
or
push
add
std
xchg
aaa
dec
call
leave
jge
inc
aaa
cmp
bnd
or
cld
ljmp
in
and
ljmp
imul
xor
dec
ja
ds
add
jnp
jo
addb
pop
mov
movb
add
out
cmc
xor
lret
jb
cld
sbb
adc
and
divl
loopne
dec
stos
or
sbb
xor
nop
adc
sub
and
decl
mov
cld
jnp
sbbl
int3
fdivrs
pop
push
xor
sub
sar
cmpsl
mov
into
fxch
mov
icebp
mov
aaa
and
call
test
mov
jne
insb
nop
cli
lock
push
out
xor
lock
ja
sub
loopne
pop
rcr
mov
mov
jecxz
push
and
ss
pop
gs
or
shll
ret
mov
cmpsb
roll
ror
pop
daa
aas
jmp
lods
cld
cmp
jno
out
scas
sbb
add
add
add
scas
call
loope
or
jmp
out
jecxz
push
repz
push
adc
ret
and
das
aas
add
sbb
jmp
jmp
sti
add
push
jmp
xchg
lret
les
mov
cmp
sti
jmp
xor
dec
adc
and
test
add
add
les
push
repnz
nop
call
fdivrs
add
addb
cmp
addr16
out
xchg
pop
call
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
outsb
pop
lods
mov
sub
icebp
add
sbb
aam
inc
add
mov
sti
decl
cs
test
adc
jmp
cmpsl
sti
das
push
out
xor
sbb
add
sbb
scas
and
sbb
mov
push
and
and
enter
mov
xchg
pop
mov
sub
pop
add
and
ljmp
and
dec
pop
add
lcall
testl
aam
jmp
fdivrs
add
andb
es
push
test
ds
fstpt
mov
sbb
aas
jmp
ret
inc
xor
aam
hlt
sub
adc
inc
add
add
ret
pop
add
sbb
xor
ret
mov
pop
in
jle
xchg
sbb
adc
xor
insb
jno
in
adc
jae
orps
in
outsb
shll
mov
inc
lods
lar
insb
aas
jmp
push
mov
add
dec
push
xchg
mov
jmp
pop
adc
bound
lds
pushf
bnd
add
add
jno
xchg
repnz
adc
iret
jle
fdivr
lcall
or
sti
pop
push
jl
fnstenv
test
adc
pop
cs
sahf
movsb
cmpb
pop
inc
ret
stc
xchg
lea
sti
push
mul
sub
movsb
imull
and
sti
jmp
jecxz
xchg
lds
add
add
les
cltd
imul
add
outsl
inc
sub
cld
lea
outsl
dec
enter
mov
int
push
sbb
push
sbb
push
or
test
mov
clc
dec
cld
shll
repz
outsb
hlt
bound
mov
inc
add
in
cmp
fists
add
push
add
add
cmpb
xor
fwait
das
outsb
hlt
ret
adc
inc
jg
clc
inc
std
jne
add
rclb
add
jb
mov
push
jg
pop
xchg
jmp
inc
cld
ja
xor
fnstcw
adc
incl
imul
or
xor
popa
push
cld
cltd
mov
rolb
clc
call
add
add
mov
add
jg
lods
and
xor
jb
cmp
dec
xor
jmp
pop
mov
xlat
incl
inc
push
popf
ljmp
fdivr
jmp
je
pop
jmp
pop
sub
push
icebp
adc
ds
insl
jb
out
insb
inc
testl
sbb
ljmp
and
and
cmpsl
std
add
add
stos
es
dec
jmp
push
cmpsb
lock
jecxz
pop
repz
jmp
or
jae
das
shll
mov
ja
sub
pop
repz
or
jb
das
stc
mov
push
inc
add
jnp
add
daa
mov
push
daa
mov
pcmpgtw
cli
out
mov
add
idivl
push
sti
scas
or
push
sub
push
adc
cwtl
lcall
es
cmp
out
sbb
lret
push
dec
mov
jmp
imul
bound
inc
or
add
xor
ljmp
xchg
mov
lds
lea
dec
test
leave
push
and
inc
enter
add
sahf
xor
je
push
negl
adc
jle
push
pop
cmpsb
pop
adc
dec
xchg
scas
lea
std
je
push
mov
gs
cmpsb
add
lock
push
fs
cmp
mov
sbb
ret
xor
xchg
dec
call
cmpl
sbb
negl
pop
js
pop
and
adc
call
add
add
test
decl
cmpsl
pop
sbb
fcom
out
and
add
pop
in
pop
add
cld
xchg
in
push
sbb
scas
or
jmp
cs
lcall
rclb
aad
xchg
and
call
xlat
pushl
dec
and
iret
mov
lret
pop
es
decl
lods
dec
xor
stc
sub
jmp
add
lods
mov
pop
xlat
decl
clc
push
add
mov
daa
cmp
imul
jo
push
pop
ret
in
add
jg
jle
cs
sbb
xchg
jmp
jle
loop
add
and
sub
cmpsb
xor
jo
mov
add
mov
add
lea
xchg
push
jg
fwait
dec
sbb
mov
cmp
stos
shrb
and
mov
jo
fdivr
cmpsb
in
sti
jge
dec
adc
mov
add
in
test
xchg
cmp
ljmp
lea
push
push
enter
test
jle
addb
or
add
add
inc
imul
xor
addr16
stos
push
mov
push
daa
lea
adc
push
sti
xchg
xor
push
sub
mov
add
push
add
addl
test
mov
jg
loopne
sti
jne
sbb
cmp
push
adc
jecxz
xor
jmp
ret
add
add
sti
adc
inc
mov
in
fnstcw
add
mov
inc
add
sti
decl
daa
dec
xor
insb
ds
or
cld
testl
mov
add
or
sbbl
aad
jge
jg
or
add
mov
repz
and
mov
push
jno
and
jnp
and
fmull
inc
and
popf
fcmovb
and
cli
pop
inc
or
and
jmp
daa
cld
ficompl
or
xor
jmp
sqrtps
rcrb
rcrb
jae
hlt
clc
sub
aam
subl
and
sbb
jnp
inc
cmp
cmpsl
add
add
xchg
mov
inc
sbb
inc
xchg
aas
fldl
pop
insb
negl
sub
loope
lret
or
sub
call
mov
mov
loope
shll
popf
lret
jbe
out
or
mov
aaa
fadd
stos
mov
xor
imul
push
jmp
dec
mov
daa
pop
loope
sub
or
mov
add
add
jmp
dec
lods
jnp
jl
mov
jo
addr16
sub
cmp
arpl
sub
ljmp
test
out
dec
rorl
mov
mov
test
mov
adc
mov
or
repnz
mov
in
and
cli
push
or
incb
add
pop
push
sti
not
or
aam
dec
inc
jmp
addr16
sbb
loopnew
and
sub
mov
jo
xor
jecxz
push
loopne
cmc
mov
aas
add
push
sti
add
dec
or
sbb
mov
pop
adc
inc
dec
jmp
jecxz
xlat
mov
je
mov
add
scas
add
rorb
inc
mov
jb
inc
std
jne
arpl
stos
das
adc
int
cmp
or
add
jge
outsl
or
sbb
jne
sbb
js
sti
sti
xor
lcall
lock
jne
sbb
jmp
sub
push
push
ret
out
addl
jmp
sub
add
add
mov
adc
sub
repnz
ret
sti
js
and
clc
lea
push
xorb
cli
iret
ret
jecxz
jb
and
lds
sub
call
sbb
js
jmp
jp
sbb
popf
sbbb
pop
mov
std
pop
adc
bound
and
out
xor
dec
cmpsl
and
add
data16
in
add
leave
lea
in
adc
xchg
cmp
fidivrs
sub
jnp
jno
iret
int
xor
adc
inc
jbe
push
scas
and
movsb
push
lock
icebp
sbb
mov
sbb
add
add
add
add
stc
lret
push
and
leave
and
add
add
mov
and
fs
outsb
ffree
mov
leave
mov
test
cwtl
enter
enter
cmp
push
push
mov
jl
stos
insl
in
push
daa
enter
mov
inc
rol
sub
lea
push
call
call
adc
in
int
jb
pushf
pop
movb
add
add
inc
push
push
lea
and
jmpw
push
pusha
gs
sti
cltd
xlat
rol
pushf
stc
add
daa
movb
push
aam
bound
add
mov
push
xchg
nop
and
cmp
cmp
push
daa
jecxz
sbb
and
test
mov
and
xor
mov
xor
ds
add
add
and
outsl
add
add
mov
add
mov
call
inc
cmp
cltd
fisttps
enter
stos
lea
test
sbb
mov
repnz
add
sub
mov
push
imul
scas
sub
andb
inc
cmp
gs
mov
inc
xor
mov
add
fnstcw
in
mov
lea
je
scas
pop
adc
or
sbb
or
repz
push
jmp
mov
in
subl
adc
cld
pop
loopne
add
scas
mov
lods
lcall
mov
mov
mov
add
push
mov
pop
or
fnstcw
les
ds
into
add
add
jo
add
push
in
pop
outsl
roll
xor
aaa
jb
xchg
das
mov
mov
subl
das
outsb
or
or
cmp
mov
jae
fs
ja
push
xchg
sub
out
call
jbe
inc
sub
pushf
mov
jmp
add
mov
lods
adc
stc
repz
addr16
mov
add
or
push
ret
fwait
popa
add
imul
mov
negb
add
sbb
rclb
or
cs
repnz
test
add
ja
pop
lds
movb
adc
ja
sub
dec
lds
mov
es
sbb
rcr
lds
mov
jbe
add
and
cwtl
pop
add
add
fmuls
pop
popf
cwtl
jne
scas
dec
and
jne
shlb
sbb
or
and
aas
and
mov
je
aas
mov
testb
add
lds
adc
dec
cmp
mov
inc
xchg
cld
push
xor
lds
push
lcall
push
adc
cld
sti
add
add
xchg
hlt
fcom
xchg
decl
pop
idiv
pop
cltd
pop
pop
push
daa
push
ret
mov
out
imul
sti
dec
mov
cld
stos
xchg
sbb
dec
js
cmp
jae
gs
and
clc
mov
adc
sbb
add
xor
add
mov
mov
divl
xchg
mov
mov
cmp
push
popa
inc
mov
call
xchg
sti
push
fstpt
icebp
mov
aas
mov
sub
sahf
jmp
push
scas
test
mov
outsl
flds
add
add
shr
mov
les
loop
pop
clc
rcl
cmp
cmpsb
cmp
add
ja
sbb
mov
sub
out
inc
sub
pop
mov
xchg
popf
fwait
pop
aas
fs
into
loop
adc
sahf
rep
dec
ja
fs
add
int3
insl
repnz
inc
xchg
mov
add
sub
add
das
lret
ja
rolb
aas
xchg
lods
call
push
cmp
jl
out
inc
daa
aas
sti
pop
js
bound
shlb
mov
cmp
adc
jmp
add
jp
push
je
loope
adc
aam
jmp
enter
sub
xlat
out
test
xchg
dec
xchg
add
add
pop
out
frstor
jne
adc
add
sub
test
inc
add
sbbb
dec
inc
cmp
test
add
push
inc
xchg
mov
stos
cmp
or
test
cmp
add
jge
ds
movb
cltd
mov
sub
jle
inc
mov
xor
dec
test
add
add
add
mov
jae
sti
decl
ss
ljmp
mov
dec
mov
sbbl
sub
mov
jg
fstpt
cmpsl
or
ljmp
sbb
jg
sub
push
or
add
xor
aas
jae
cltd
push
call
jns
sbb
push
pop
incl
add
arpl
imul
in
add
mov
loopne
jae
push
xor
sbb
dec
or
nop
cwtl
into
mov
mov
ja
call
mov
mov
add
xchg
aas
jmp
sbb
js
and
sub
lret
out
fs
mov
and
jmp
popl
add
daa
mov
movsb
dec
mov
add
je
shl
add
mov
and
imull
lret
lret
out
xor
sub
testl
rclb
aam
pop
insb
mov
jbe
orl
clc
mov
lock
lock
adc
add
add
ds
fidivrl
ljmp
mov
test
cld
adc
aad
push
adc
push
data16
test
xor
inc
icebp
mov
repnz
adc
adc
fdivr
sti
dec
pop
lock
inc
mov
mov
scas
adc
jne
push
testb
cmp
xchg
adc
add
das
mov
push
loope
mov
decl
inc
push
lcall
dec
or
repz
out
push
call
ljmp
in
or
xchg
lea
push
sbb
cld
jp
add
out
mov
dec
sub
call
adc
jle
jmp
mov
mov
add
js
push
mov
cmp
inc
mov
fisubs
xchg
dec
out
call
push
inc
add
xchg
movsl
push
aas
push
in
push
lahf
ljmp
jl
imul
js
imul
xchg
mov
dec
shr
cs
cld
mov
pop
shl
sub
lods
imul
add
fdivrl
rcr
sub
in
add
pop
push
enter
out
mov
std
lods
xor
int3
inc
jb
aas
jo
inc
jecxz
sub
jmp
mov
shlb
mov
or
into
bound
dec
cmp
add
aas
jmp
sub
xchg
jmp
movl
add
mov
into
fimuls
push
data16
dec
jge
imul
add
imul
lcall
xor
mov
and
and
or
ds
cmp
add
into
int
gs
xor
push
cmp
outsb
sti
sbb
mov
sti
fcoml
aad
cld
or
jne
pushf
or
add
add
push
shlb
sar
hlt
ja
inc
jmp
push
scas
add
lea
je
lret
outsl
in
sub
lret
lea
pushf
mov
cmc
stos
js
mov
xchg
aam
addr16
sub
imul
popa
fisubrs
add
rorl
aaa
xchg
push
clc
xor
incl
add
mov
test
or
sub
vmovd
movsl
repz
add
xchg
cld
jne
sub
jne
sub
jne
sub
jne
sub
jne
sub
sub
pop
leave
aas
aas
add
pop
jp
in
add
lcall
push
add
push
jne
push
add
add
and
cmpl
addb
std
cmp
and
and
andb
or
decl
jne
jg
mov
lcall
pop
mov
dec
xor
or
pop
add
and
mov
mov
jle
shrl
dec
dec
push
in
movl
add
xchg
pop
mov
sarl
jae
in
fdivrs
imul
inc
xor
inc
add
aas
lods
adc
pop
xchg
data16
cmp
jno
cmp
pop
das
mov
jle
ljmp
stos
mov
add
test
das
or
add
sub
cld
ds
sti
push
sarb
rcrl
std
push
adc
add
mov
adc
mov
jmp
jl
out
cs
inc
jmp
add
dec
std
popf
fnstsw
add
mov
lret
xchg
push
fldcw
mov
fisubs
aaa
sahf
rolb
cmp
cwtl
stos
mov
mov
mov
aas
fidivrl
xlat
lret
add
add
loope
inc
daa
aas
jg
repz
pusha
jge
enter
int
jne
enter
dec
cli
or
add
daa
push
pop
je
jmp
add
clc
mov
push
or
add
dec
lds
add
call
roll
or
out
xchg
lcall
cmp
movb
xchg
leave
cmp
test
cmpsl
add
inc
les
push
movsb
mov
clc
or
inc
ds
jne
idiv
jp
mov
or
aas
std
jne
mov
jecxz
lahf
inc
add
shlb
sbb
mov
sbb
pop
leave
sti
scas
into
scas
cld
aad
jbe
add
add
shrb
data16
push
scas
cli
into
mov
and
movl
xor
cld
cmpsl
xchg
scas
out
xchg
or
mov
jb
or
or
xlat
ljmp
cmp
cld
jmp
cmpl
movsb
jge
repz
mov
mov
loopne
addb
add
incl
push
insb
insb
cwtl
jae
add
or
scas
roll
out
xor
aas
imul
sbb
dec
ss
add
xorl
jg
mov
popf
lcall
call
test
or
test
sub
es
call
jbe
je
jg
pop
or
and
int3
adc
incb
and
add
aas
add
xor
or
dec
add
push
daa
jo
xchg
lea
cmpsl
outsb
call
push
sub
sti
jmp
loope
lea
aas
add
cmpsl
fisubrs
daa
aas
jg
xor
test
add
add
xor
push
ss
jmp
xor
loopne
jge
jg
fwait
xchg
sbb
xchg
ja
jne
sbb
add
cmp
ret
mov
push
fiadds
int3
inc
inc
loopne
xor
test
jle
mov
mov
and
push
add
push
clc
add
add
pop
test
jle
dec
inc
add
rorb
push
addr16
push
cmp
cld
jne
mov
push
cmc
mov
cli
decl
lret
cld
inc
add
push
mov
push
cmc
inc
add
and
scas
cld
push
cmpl
mov
sbb
mov
test
add
mov
ljmp
dec
mov
test
jb
cmpsb
push
dec
lock
inc
or
hlt
jmp
rcr
or
sbb
or
sar
jp
inc
pop
mov
daa
pop
test
pop
jl
or
and
test
scas
sbb
add
aad
lahf
int
out
add
pop
cli
mov
mov
pop
test
insb
add
add
dec
mov
js
movl
jae
fdivrl
aaa
push
ret
pushf
sti
add
mov
cmp
cmp
ret
pop
or
mov
rcrl
mov
sbb
cmpsl
jmp
hlt
push
incl
mov
jmp
sbb
mov
xchg
jge
add
lretw
mov
mov
imul
xchg
cmp
ja
sti
movsb
pop
mov
and
imul
repnz
xor
sub
sti
jb
movb
mov
add
cmp
mov
xchg
jno
bound
mov
cmp
loop
loope
ret
push
icebp
add
add
jb
sbb
mov
mov
cmc
add
daa
push
inc
inc
sub
jne
sub
addb
std
sti
pop
or
sbbl
push
push
cmp
adc
inc
mov
movsl
adcl
cmp
push
cmp
std
sti
test
sub
fists
push
or
add
add
test
popf
mov
cld
push
dec
outsb
loopne
and
add
or
test
jle
sbb
pop
add
cmp
add
mov
dec
inc
push
inc
or
int3
add
and
mov
xchg
movb
sar
pop
pop
mov
mov
ja
push
jno
or
push
mov
add
add
movsl
add
pop
inc
or
adc
and
shr
fidivrs
mov
dec
imul
mov
pop
cmp
mov
loopne
mov
push
xchg
xor
dec
dec
pop
sub
jge
cmpl
pop
mov
and
pusha
mov
sahf
jle
push
loopne
incl
add
add
insb
cmc
orb
fs
dec
push
lret
stos
mov
and
sub
cltd
mov
and
lret
sahf
ds
shlb
aas
test
lahf
mov
mov
data16
dec
in
out
imul
lods
add
rcrl
add
inc
xchg
or
sub
xchg
mov
push
fldcw
xchg
or
pop
push
sti
outsb
sub
sti
mov
sub
or
mov
sbb
outsl
push
call
xchg
rcll
sub
mov
jmp
xchg
dec
jmpw
testl
and
hlt
mulb
cmpsb
out
sub
add
mov
repz
mov
in
add
andl
inc
push
mov
inc
jg
sbb
add
cmp
clc
push
int
jmp
xor
mov
imul
repz
inc
add
in
push
cld
pushl
ja
in
inc
add
sub
jp
inc
inc
add
inc
cld
incl
jmp
mov
inc
add
js
test
jge
push
cmp
jne
je
mov
clc
xchg
sbb
test
mov
cwtl
or
dec
call
sub
lods
stos
dec
inc
push
into
jl
stc
mov
mov
mov
dec
pop
leave
out
mov
cmpsl
or
add
add
nop
jne
out
out
outsl
add
jns
cld
std
inc
mov
insl
push
cltd
sti
jnp
push
or
mov
dec
clc
scas
insb
lea
stc
mov
add
daa
xchg
or
ds
or
aas
rcll
in
and
jns
mov
out
nop
inc
jmp
push
add
add
xor
push
xchg
into
sub
jmp
mov
es
aad
mov
arpl
push
mov
movsl
test
aas
jno
nop
cmp
jmp
ja
push
insb
stc
pop
ret
pop
add
aas
je
or
cltd
imul
jmp
mov
push
cmp
out
test
add
add
aas
lea
daa
ret
adc
add
stos
jg
outsb
inc
add
mov
cmpsl
push
jle
aas
mov
xor
aas
lea
cmp
mov
or
mov
or
push
daa
cmpsl
dec
andl
and
out
cmpsb
cmp
test
and
add
mov
push
call
lea
aas
add
dec
sbb
je
pop
lea
bound
cmp
inc
adc
out
std
incl
add
daa
push
lea
push
jmp
popa
sbb
lock
lret
add
decb
add
inc
int3
add
mov
or
sbb
add
add
popa
dec
push
or
notl
add
imul
and
negl
into
cmpsl
mov
dec
sti
fmuls
adc
je
sub
and
addb
fs
dec
insb
jle
mov
js
adc
dec
xchg
dec
mov
stc
add
out
add
add
xchg
mov
inc
mov
jne
icebp
xchg
mov
and
je
add
scas
loop
or
cmpsb
out
shll
pop
jg
mov
xor
adc
add
les
sub
add
mov
jmp
pop
mov
aas
cmp
cmp
jmp
or
xchg
push
xchg
add
add
sbb
jle
jmp
js
push
xor
push
lret
jl
xchg
mov
and
add
push
test
stc
popa
add
aas
imul
adc
aaa
sub
pop
push
je
mov
xchg
xlat
mov
jge
pushl
mov
insb
pushf
mov
call
and
sti
and
mov
lea
call
jb
addb
aas
add
loopne
jmp
daa
aas
add
daa
aas
mov
repnz
stos
std
xchg
cmovg
shrl
mov
jne
adc
imul
sbb
scas
punpckhbw
ja
bound
add
hlt
lea
ret
std
call
mov
mov
adcl
push
push
adc
jge
mov
add
cmp
movsl
jecxz
push
cmpsl
or
fdivs
add
pop
leave
ret
xchg
rorb
or
ja
bound
shrb
add
inc
call
push
sub
inc
mov
in
push
add
add
int
dec
push
push
lods
xchg
mov
and
shll
test
or
and
mov
idiv
jnp
out
nop
cmpsl
incl
and
jle
mov
sti
jno
fwait
incl
sub
mov
mov
call
sub
aas
pushf
movsl
cmp
addb
add
add
jp
dec
cld
int3
pop
idiv
rorl
enter
int3
push
idiv
mov
inc
fwait
int3
cltd
ret
in
sahf
mov
mov
mov
sti
mov
dec
mov
dec
mov
inc
jo
inc
add
mov
jmp
dec
push
cmpsl
aad
dec
mov
jg
mov
cli
aas
cld
sbb
sti
addr16
aam
add
add
ds
imul
add
mov
cli
dec
mov
lcall
jg
icebp
pop
dec
repnz
cmp
bound
pusha
and
and
xor
jb
inc
das
sub
and
pop
jg
lahf
ljmp
cmp
add
lea
mov
bound
add
gs
jo
mov
sub
cli
setns
inc
xchg
sub
mov
cmc
stos
or
push
push
dec
ds
test
cmpsl
adc
es
pop
mov
test
aas
add
push
or
add
iret
cmp
lock
out
cmovno
add
mov
dec
cmp
int
push
push
add
add
je
movlps
add
lea
call
test
add
xor
ret
clc
mov
mov
cmp
sub
cmp
mov
jmp
mov
les
js
xchg
pop
in
scas
dec
and
adc
idiv
and
jno
push
mov
clc
sti
add
add
inc
xorl
in
fidivs
clc
sub
rorb
mov
xor
pop
loopne
inc
and
cmp
dec
jp
and
mov
inc
js
clc
jne
inc
roll
and
cli
mov
test
push
inc
inc
ja
jne
mov
test
xchg
jnp
and
cli
xchg
scas
test
add
add
test
call
data16
mov
clc
fisttps
jno
ret
jbe
xor
and
aas
sbb
cmp
aad
mulb
les
std
into
pop
cltd
ljmp
cmp
sub
outsl
sub
mov
mov
stos
pop
mov
and
adc
lahf
aas
jmp
pusha
dec
les
or
or
jl
and
test
add
cmpsl
add
fs
test
fidivl
mov
cld
xlat
or
xor
add
push
or
stos
pop
aas
push
jb
das
in
test
or
daa
aas
push
mov
sub
cmpsl
dec
push
call
add
add
sbb
imul
je
int
sti
xchg
pop
psubsb
dec
mov
adc
mov
loope
cmpsb
sbb
call
out
add
inc
add
std
cmovle
cmp
subb
in
xchg
add
sbb
js
idiv
mov
call
push
jne
add
mov
add
inc
add
add
ss
push
lea
cmp
push
adc
jmp
fwait
stos
out
inc
jnp
inc
das
sub
shrb
push
mov
adc
adc
shrb
push
shrb
call
nop
sub
hlt
push
adc
xor
cmp
xchg
jmp
jae
jno
push
call
add
add
or
sti
dec
push
xorl
shr
scas
ret
sub
jnp
stos
scas
pop
mov
xor
les
xor
xchg
push
cmp
lahf
pop
mov
add
jmp
and
inc
loope
and
and
xchg
xor
pusha
sbb
cmp
push
sarb
cmp
cmp
inc
add
add
test
sub
cmpsl
sbb
out
xadd
in
jo
es
xchg
repz
push
je
sub
push
pop
xchg
add
incl
mov
lods
pop
fdivrl
call
or
fisubs
cmpb
add
fs
int3
xchg
in
pop
lods
outsl
test
add
cmp
push
repz
adc
aam
fs
aas
lods
add
xlat
mov
sti
mov
ljmp
loop
daa
sub
into
xchg
pusha
test
lods
cmpsb
divb
push
test
adc
and
test
loopne
cld
jle
sub
daa
xor
xor
push
mov
outsl
leave
loop
add
add
cmpsb
call
xchg
aad
leave
sub
ret
in
push
dec
push
insb
fsubl
add
xchg
sti
add
sub
mov
jno
push
lea
divl
sub
jne
adc
or
push
xchg
add
aas
push
leave
iret
stos
sti
push
xchg
in
test
add
or
scas
sub
add
add
cmc
sub
insb
add
cmovno
decb
jno
divl
sub
popf
xchg
cmp
add
xor
sub
xor
ja
add
repz
add
jl
in
test
add
cwtl
decl
mov
add
pop
push
jae
aam
jmp
mov
add
add
xchg
jl
cld
imul
jmp
or
cwtl
xlat
xchg
imul
lock
xor
mov
cmp
mov
inc
adc
clc
cmp
cmpsb
xchg
jl
scas
sti
imul
and
ds
test
jmp
lock
xor
aaa
jl
jmp
mov
add
das
test
xor
mov
mov
shr
and
jne
ljmp
or
inc
je
sbb
dec
and
call
in
aas
jmp
add
aas
sbb
testb
add
cmpsl
frstor
inc
test
mov
mov
aas
jmp
popa
add
add
aas
add
add
push
int3
bound
sub
mov
int
idivl
inc
aas
add
mov
mov
add
ja
subl
arpl
sbb
xor
pop
sbb
jmp
xchg
movsb
add
daa
or
and
push
movsb
je
add
xor
fsts
test
stc
cld
les
out
in
cwtl
idiv
test
cltd
add
dec
cwtl
je
and
cmp
pop
and
mov
push
call
mov
adc
mov
dec
mov
orl
inc
test
pop
inc
testl
or
call
inc
mull
adc
add
dec
jnp
test
daa
and
movsl
outsl
lea
int
je
fisttpll
xor
add
jmp
pop
push
sahf
pop
ret
push
mov
jle
mov
call
lds
test
out
dec
pop
jnp
and
jae
mov
xor
pop
add
cwtl
xlat
and
mov
jb
inc
fadds
add
je
inc
mov
addb
in
mov
cld
push
add
out
pop
cmp
mov
test
addr16
push
mov
insb
push
pop
add
imul
call
pop
cltd
ds
in
dec
add
jbe
mov
ret
mov
xchg
xor
lds
inc
or
jmp
add
and
add
push
popa
jmp
testl
mov
xchg
in
cwtl
ljmp
fs
les
mov
in
push
pop
adc
cmpb
push
fdivs
mov
add
xchg
pop
push
jnp
dec
mov
cmpsl
adc
iret
mov
sub
test
icebp
jle
clc
inc
add
add
add
out
or
imul
dec
mov
call
clc
mov
lods
jmp
adc
call
gs
cmp
and
sub
mov
xchg
adc
test
scas
jo
and
xor
sbb
jne
pop
or
outsl
sbb
add
lds
add
jnp
add
mov
aas
jmp
lea
inc
test
jge
push
call
push
js
incl
and
js
test
add
enter
aad
add
cmp
cltd
addl
imul
and
push
mov
add
or
add
adc
or
test
add
add
and
je
divl
call
push
jmp
or
sbb
adc
ret
stos
pop
nop
add
jp
adc
fdivr
xor
or
and
push
and
mov
xlat
mov
xchg
jae
xchg
push
and
in
rcl
out
xchg
cwtl
cwtl
incl
add
mov
and
xor
cmp
sti
mov
cmp
mov
cld
scas
cltd
sti
jecxz
cmp
sbb
int
pop
mov
push
push
mov
jmp
jl
pop
dec
call
jnp
dec
insb
outsl
dec
addr16
xchg
and
jmp
call
add
add
push
xchg
jl
or
call
and
sub
mov
pop
cld
xchg
mov
and
ds
mov
js
jg
aas
jmp
mull
mov
and
mov
lock
ljmp
sbb
sti
and
push
jl
out
repnz
jmp
mov
outsb
loope
add
mov
aas
jb
in
dec
pop
push
pop
and
fstpl
lea
daa
pop
call
sahf
inc
sub
aam
and
xlat
xchg
pop
jno
aas
jg
sbb
jne
add
and
mov
les
call
cmp
sti
push
inc
pop
call
add
cwtl
divl
call
stc
cmp
ljmp
pop
sbb
popa
xor
add
in
adc
mov
cmp
mov
or
test
notl
and
and
and
lea
cwtl
push
and
jnp
test
idiv
mull
xor
pop
and
mov
addb
cwtl
push
or
and
pop
dec
sahf
sti
push
xchg
in
aad
add
lea
jmp
add
jmp
xchg
sbb
sti
lahf
out
push
or
jae,pt
int3
cmp
jmp
jmp
hlt
pop
and
jmp
lea
add
push
adc
in
hlt
fisttpll
clc
mov
pop
pmulhuw
dec
push
cli
sub
clc
hlt
jg
adc
cmpsl
pop
mov
add
cmp
jae
cmp
add
jecxz
in
xchg
fs
jne
push
or
and
jmp
add
mov
out
popf
mov
fcomi
jmp
sarb
cmpb
lcall
ds
scas
out
nop
out
lods
ds
in
push
pop
add
inc
pop
in
add
jg
sub
outsb
pop
sbb
cmc
imul
jo
lods
pop
and
movntq
out
mov
outsb
aas
cld
aad
mov
cmp
adcb
pushf
sti
jmp
xor
jmp
daa
insb
sti
pusha
pop
xchg
aaa
scas
aaa
ret
popa
jmp
aas
lea
sti
scas
test
add
daa
cmpsl
jns
cwtl
lea
add
cltd
sti
mov
cmpsl
imul
cwtl
sti
outsb
cltd
add
jb
and
push
fstpl
add
mov
nop
sbb
pop
cmpsl
cs
lret
mov
cmpsl
xor
xchg
pop
xlat
xchg
add
in
idiv
mov
mov
jne
add
aad
mov
lock
mov
add
scas
inc
cld
cmp
dec
dec
call
fsubrs
aas
add
or
xchg
add
pop
lea
dec
lea
sub
lret
jge
inc
pop
clc
add
aas
add
jo
adc
mov
rcrb
add
push
call
push
enter
and
ficoms
loop
call
add
add
jmp
nop
sbb
add
add
and
add
xor
popa
les
fstpt
lea
daa
leave
cli
and
addl
arpl
aaa
ljmp
dec
mov
rclb
and
cld
xchg
adc
loope
in
popa
test
mov
pop
sbb
add
add
sub
and
mov
and
cmc
jge
gs
je
dec
fwait
sbb
aad
pop
inc
cmp
call
xor
shl
and
cltd
insl
and
sub
push
int3
push
lock
in
add
out
out
sub
pop
xchg
mov
push
push
and
sub
popa
loope
aas
jmp
ljmp
adc
add
push
int3
cmp
cltd
push
mov
loopne
stos
add
and
jae
pop
aas
jmp
notl
add
daa
aas
lea
aas
add
aas
stc
xchg
jmp
mov
daa
aas
push
pop
jb
call
gs
mov
dec
sbb
ret
add
add
xchg
push
scas
pop
cmpsl
ret
sub
inc
add
daa
xchg
jne
lret
xor
out
test
jae
das
jbe
adc
outsb
jge
adc
cmpsl
sbb
jmp
sbb
dec
adcl
lret
inc
add
nop
mov
loopne
testb
lds
add
cmp
js
or
neg
call
mov
push
leave
add
add
sub
test
add
cmp
xchg
add
lods
jns
xchg
cmp
add
scas
lea
int
lea
inc
sub
test
out
jnp
mov
mov
idiv
popa
sti
xor
push
insb
sbbb
and
mov
cltd
sub
cli
inc
push
add
cmp
mov
and
and
je
fmul
cli
or
push
inc
sub
sub
jmp
push
add
xor
jns
or
out
mov
in
or
jp
or
je
ds
xlat
pusha
out
neg
bound
push
call
or
icebp
and
adcl
add
xlat
sub
adc
arpl
out
inc
int
aas
jmp
add
insl
add
enter
jge
xchg
jmp
add
movsb
jecxz
lret
jmp
jp
aas
jmp
add
stos
inc
int3
inc
jmp
stos
fists
pop
add
roll
xchg
mov
cmp
jmp
faddl
add
cltd
or
add
hlt
jnp
mov
jmp
rcrb
pop
daa
aas
add
push
ret
das
repnz
sti
ds
mov
test
out
test
sbb
mov
lock
xchg
sti
divb
lock
je
jge
out
out
in
aas
add
add
add
cld
movaps
mov
add
daa
mov
jmp
lods
cli
stos
cmp
cwtl
push
in
call
add
fildl
pushf
cmp
add
jnp
test
add
scas
movl
jmp
std
sti
addl
test
fimull
xor
js
xadd
add
or
add
adcl
jge
scas
movb
movb
jbe
sti
call
inc
out
xor
je
inc
xorb
fistl
lahf
std
decl
movb
lds
sti
hlt
and
jl
mov
jg
cmpsb
push
or
cmpsb
push
std
mov
leavew
sbb
pop
add
add
mov
hlt
scas
fcmovu
push
aam
add
and
pop
das
mov
movsl
ljmp
test
push
mov
jle
je
sarb
lea
in
push
mov
hlt
add
popa
adcb
cltd
pop
aam
mov
fdivr
mov
aas
xchg
shll
add
xchg
dec
cwtl
xchg
hlt
dec
xor
call
fs
gs
xchg
jb
jg
hlt
xlat
outsl
sub
hlt
sub
pop
aas
pop
mov
addr16
dec
xchg
inc
mov
ret
sbb
adc
insb
arpl
jmp
add
push
mov
add
add
lret
push
in
ret
shr
test
cmp
ret
call
roll
add
add
rcll
sti
jmp
test
mov
jmp
cmpsl
leave
jno
aas
test
daa
aas
repnz
or
inc
xchg
xchg
add
aas
js
ds
mov
sbb
addr16
dec
mov
push
pop
sub
mov
ds
mov
aas
add
add
add
add
sub
call
pusha
aas
add
pop
sbb
xor
mov
test
ret
add
push
sub
pop
and
dec
lea
pop
and
test
and
jae
wbinvd
int3
add
jge
sbb
dec
cmp
repnz
cmp
mov
xor
lods
cmp
add
inc
movsl
incl
add
add
jl
dec
mov
add
push
cmp
adc
jl
test
cmp
jecxz
push
pop
and
sbb
and
mov
sbb
adcb
lcall
movsl
xchg
xchg
jle
aam
add
pop
and
and
mov
add
imul
xchg
mov
xor
call
push
ror
scas
std
xchg
das
xchg
cmp
cli
lock
ror
lods
in
adc
fcompl
fs
cmp
inc
or
inc
push
jnp
and
jmp
lock
jmp
lods
and
jmp
or
add
out
add
add
adc
sub
aad
mov
and
jg
pop
mov
outsl
les
or
and
mov
pop
inc
es
mov
call
xchg
pop
jge
aas
pop
fsubrl
rcrb
pop
aas
jmp
xor
add
repz
jno
add
daa
adc
rol
add
add
xor
dec
xor
jp
daa
adc
out
add
scas
dec
and
aas
jne
sbb
sub
and
xchg
mov
je
add
lds
je
cmp
ret
bound
xchg
push
mov
jmp
daa
aas
jg
dec
ret
xor
vmovss
jnp
add
fwait
jg
ljmp
add
add
dec
arpl
add
and
out
and
or
divl
call
mov
push
sbb
pop
push
sbb
add
add
dec
mull
inc
in
lock
pop
and
test
push
or
orl
inc
dec
lea
mov
call
js
or
cmc
repz
dec
lea
add
cmc
push
mov
add
inc
in
push
inc
add
add
out
and
ret
add
and
into
lea
cmpsb
cmp
adc
pop
pop
incl
push
addl
pop
add
es
push
rolb
sti
mov
pop
cmp
sub
cmp
mov
adc
cmp
push
add
add
mov
mov
fimull
arpl
call
repz
push
roll
mov
ljmp
movsb
aas
jmp
add
stc
mov
and
lods
xlat
xor
jmp
rcr
mov
adc
mov
add
mov
cmp
insb
fsubr
add
and
push
je
aas
add
aas
andl
push
popf
and
jmp
shll
ss
test
out
rolb
aas
imul
and
add
and
aas
push
mov
fucomip
mov
sti
push
cmp
cli
jl
mov
stc
add
add
add
in
es
add
fiaddl
adc
and
shr
pop
add
daa
sar
jmp
faddl
inc
lods
idivl
sti
cmp
add
xchg
or
push
add
push
test
insl
into
ds
stos
jle
insl
mov
add
sbb
mov
test
mov
insb
test
add
mov
gs
add
add
ret
clc
call
shrl
add
mov
enter
mov
repnz
addl
mov
call
inc
div
adc
je
dec
xorl
call
test
stc
lea
push
lea
dec
std
pushl
imul
ja
jb
ret
idiv
add
add
inc
add
out
pop
ja
lea
push
sub
aad
lret
sti
scas
rcl
xchg
add
push
and
add
test
sbb
mov
jmp
mov
and
or
add
pop
out
push
test
push
jmp
loopne
in
xor
push
sbb
push
and
push
add
add
fldl
add
lret
mov
add
fs
adc
adc
das
arpl
pop
cld
pop
ds
daa
xor
call
mov
mov
or
arpl
jmp
add
push
ja
add
jg
jmp
mov
inc
mov
inc
jmp
in
add
and
inc
jnp
mov
jmp
mov
int
add
sub
fsubr
mov
sbb
mov
jnp
mov
ds
cld
push
xchg
lock
call
rol
inc
dec
sub
bound
mov
jge
aas
add
mov
fiadds
jmp
mov
and
daa
and
sbb
add
add
aas
bound
lods
mov
outsb
cld
fwait
inc
dec
enter
mov
push
jmp
add
daa
aas
bound
movsl
mov
inc
das
cld
mov
jmp
lahf
push
jle
daa
and
shlb
bound
hlt
cld
mov
add
or
adc
sbb
add
add
dec
inc
pop
mov
inc
add
cld
test
jmp
or
test
sti
add
sbb
in
or
mov
add
std
mov
inc
add
add
inc
mov
int
mov
mov
sarl
jnp
inc
adc
add
mov
add
add
and
add
add
add
popa
mov
rorl
lods
push
mov
add
push
inc
mov
jl
push
xchg
popa
mov
push
mov
adcl
mov
orb
into
mov
mov
push
aam
xchg
popa
mov
mov
pop
xchg
jmp
push
lods
mov
dec
pop
inc
jl
xor
add
add
jl
enter
and
popa
mov
mov
add
push
mov
in
imul
and
pusha
inc
push
mov
and
add
lcall
popf
stc
dec
mov
jmp
fstpt
add
das
mov
lret
jl
xchg
jno
cmpl
or
xchg
jmp
add
add
jo
rol
bound
cmpl
leave
dec
aas
jmp
mov
mov
add
sbb
pusha
pop
mov
paddb
popa
das
clc
call
mov
sbb
std
stos
and
bound
xorl
xchg
pop
mov
jmp
lahf
lods
add
sbb
push
ret
bound
cmp
jle
or
ss
test
dec
jmp
xlat
leave
xchg
daa
aas
bound
xor
inc
das
cld
adc
movsl
pop
mov
lea
mov
mov
add
pop
mov
xchg
mov
je
add
inc
adc
sbb
inc
sbb
cltd
mov
add
add
mov
mov
icebp
cmp
add
and
mov
mov
cmp
and
xchg
dec
push
mov
stos
add
mov
std
push
mov
mov
test
sub
data16
es
and
jl
hlt
mov
pop
mov
mov
add
add
dec
push
mov
add
inc
cmp
stos
cmp
loope
pop
mov
leave
mov
xchg
decl
roll
popa
popf
sarl
data16
popa
rolb
popa
popf
shlb
mov
sbbb
inc
lods
or
jmp
jl
jo
lods
adc
pop
mov
xchg
add
add
ds
xor
add
pusha
inc
pop
pusha
shll
inc
jge
ljmp
popf
stc
cmp
mov
sub
inc
stos
add
jo
cli
push
mov
aas
or
loop
xchg
lret
pop
lods
stc
mov
add
mov
arpl
add
loope
adc
jl
jecxz
cltd
add
add
aas
jmp
mov
jmp
pop
pushf
cmp
pop
fs
test
aas
add
add
mov
push
enter
fdivs
and
mov
mov
aas
bound
in
mov
test
add
incl
je
out
or
cmpsb
sub
mov
mov
aas
add
loope
and
data16
sub
cltd
push
add
inc
jle
sbb
movsb
jns
mov
loop
sti
and
test
push
xor
sub
jp
jp
inc
pop
loop
sti
add
lret
or
pusha
or
mov
xor
test
jg
inc
outsb
ds
push
mov
pop
mov
aas
sub
sbb
lds
jle
mov
add
xchg
adc
xor
lods
dec
inc
add
popf
out
pushl
jae
shrb
push
sbbb
or
notb
sub
ret
xchg
add
ljmp
push
and
rolb
and
cs
jmp
shll
lea
cs
mov
addr16
incl
add
mov
pcmpeqb
icebp
pop
or
mov
test
push
xchg
test
sarl
std
and
mov
pop
std
mov
mov
or
icebp
add
xor
ja
and
mov
xor
add
mov
loope
lea
push
push
add
mov
mov
icebp
je
add
add
and
jl
dec
mov
sub
int3
jno
add
test
add
cmp
fsubrl
in
sahf
jnp
dec
add
nop
rcrl
push
adc
ret
xchg
shr
add
test
mov
and
and
dec
aas
jo
xor
aam
insb
scas
jmp
popf
pop
jnp
dec
add
add
icebp
nop
jns
add
out
xchg
jmp
sub
xchg
aas
mov
outsl
lea
mov
daa
aas
call
jb
jnp
loope
adc
cmp
rclb
push
dec
xchg
addr16
es
xchg
sarl
fwait
hlt
fwait
push
fidivrl
add
loope
jle
add
gs
cltd
inc
lea
or
js
aas
add
mov
repz
jne
add
std
les
inc
mov
int3
inc
hlt
push
xchg
test
add
fwait
je
cmovns
add
int
cmovns
cmp
cmp
cmp
xor
push
mov
testl
pop
inc
call
push
inc
add
ret
add
dec
cmp
cmp
add
gs
cmp
sub
call
adc
notl
xor
mov
shlb
dec
lea
dec
call
cmpsl
sub
test
test
xchg
shlb
shr
jb
ljmp
test
sti
pop
dec
cmpsl
outsl
push
data16
cli
add
add
jb
pop
and
xchg
lods
push
and
xor
clc
jl
add
aam
xor
lahf
and
xchg
mov
dec
pop
push
or
out
xor
or
scas
orl
mov
xlat
in
sub
movsb
mov
addr16
jns
js
mov
add
add
in
out
ja
jns
js
mov
and
aad
iret
ja
cmp
cmp
pop
popf
ja
nop
cmp
jmp
mov
ja
dec
or
dec
jg
stos
mov
data16
rol
mov
andb
sub
add
ds
and
jae
mov
leave
mov
jae
sti
pop
repz
xchg
sub
add
cs
jmp
push
push
test
cmp
pop
lods
xchg
es
xchg
push
jp
test
imul
jle
cld
testb
cld
pop
cmp
jl
and
adc
imul
aas
add
mov
pop
or
cmp
add
add
add
or
in
push
ja
add
xchg
idiv
mov
mov
mov
mov
mov
call
gs
into
hlt
push
call
call
xchg
in
sbbl
push
dec
inc
stos
sub
mov
test
jecxz
dec
mov
repnz
push
jnp,pt
add
add
sub
inc
add
movb
mov
pop
rol
pop
mov
shrl
mov
lea
test
sub
popf
pop
cmp
jae
dec
xlat
pop
push
sti
sbb
inc
add
sub
sbb
pop
dec
sti
pop
std
adc
xor
add
jnp
mov
add
add
cltd
data16
jle
cmp
mov
push
scas
jb
in
mov
icebp
mov
scas
mov
test
icebp
mov
sti
and
je
loope
or
ds
mov
xchg
repz
je
and
inc
mov
repnz
mov
pop
inc
sub
je
mov
pop
mov
popa
ja
add
add
and
inc
adc
dec
test
adc
jae
and
jle
or
sub
mov
cmp
adc
jg
pop
fldl
int
mov
cmpsl
and
jmp
xor
neg
repz
add
test
aas
scas
dec
enter
aaa
scas
cs
or
add
add
sbb
shrb
pop
push
cmp
jmp
pop
ficomps
mov
into
pop
imul
mov
out
ja
aas
test
cmp
dec
insb
and
adc
jg
mov
daa
mov
pop
int
in
fidivs
les
adc
jmp
dec
pop
push
mov
add
dec
pop
or
inc
pop
or
movsl
std
add
jg
dec
ds
mov
adc
inc
and
push
dec
push
xchg
sub
decl
call
call
loop
sub
ret
aas
aas
add
cmpsl
jnp
gs
add
push
bound
loop
push
call
inc
jmp
xor
jnp
push
lea
int
call
test
test
cmp
loopne
hlt
jg
mov
js
dec
dec
add
inc
inc
dec
push
call
cltd
mov
bound
mov
ljmp
enter
mov
sub
scas
mov
fistpl
je
cmp
push
add
or
add
add
and
and
rcr
imul
inc
add
call
test
mov
pop
lods
test
xor
and
loopne
js
loopne
ds
xor
sub
loopne
les
xor
les
loopne
sub
incl
add
sbb
call
mov
sbb
add
jl
insl
stc
decl
add
sti
add
jnp
insl
inc
test
fidivrs
add
std
stos
cli
les
ret
inc
mov
stc
mov
movb
xor
fcos
rorl
jmp
ds
sarl
jmp
daa
aas
push
inc
mov
ds
add
add
addr16
jle
aas
test
into
add
sub
jge
sbb
bound
jne
ja
ljmp
and
mov
sarb
sub
xchg
insl
aas
add
cmp
sbb
push
test
add
and
sbb
mov
and
mov
pushl
mov
call
adcl
add
out
in
mov
xchg
sub
push
std
sub
adc
add
lret
aam
in
sbb
pop
mov
inc
pushf
dec
inc
add
mov
mov
pop
in
iret
mov
or
sbb
shlb
inc
or
cs
call
sbb
cwtl
lea
jne
mov
add
inc
add
ljmp
cmp
xchg
inc
and
sub
lods
sbb
jb
sbb
in
mov
xchg
fidivrs
faddl
pop
add
stc
cmpsl
xchg
pushf
int
jmp
pop
jnp
daa
pop
cmp
adc
pop
pop
std
dec
push
add
push
mov
sbb
pop
lock
add
add
push
cmp
add
mov
ljmp
sbb
mov
aas
mov
fs
sbb
cmp
jo
and
pusha
ds
insb
sbb
pop
ret
add
andl
ja
pusha
in
cmp
jb
fimull
pusha
inc
and
xor
stos
addr16
cld
push
inc
and
sbb
lods
add
in
mov
add
add
mov
int3
aas
xchg
adc
call
dec
or
cmp
lds
jge
jnp
fimull
mov
popf
add
jno
nop
push
and
push
push
aaa
adc
ret
adc
pushf
jg
test
and
add
and
orb
out
je
call
add
add
ret
icebp
jmp
aas
cmp
aaa
test
sub
add
hlt
scas
or
insb
sti
jmp
pop
insb
sti
jmp
xlat
mov
inc
dec
sub
add
cwtl
or
jo
mov
push
cmp
mov
stc
std
adc
in
cltd
inc
int
iret
mov
mov
test
add
jnp
push
clc
xor
fistpll
add
add
cmp
cmpl
adc
add
inc
ja
jge
notl
hlt
add
cmp
sti
idiv
xchg
push
push
lcall
adc
cmp
jmp
adc
test
sti
mov
fwait
cmp
xor
or
mov
dec
pop
cmp
mov
movd
sti
add
add
sbb
jecxz
fwait
xchg
and
popf
mov
pop
sti
cmp
fsubr
inc
fsubr
adc
test
pop
xor
fwait
sub
mov
repz
sbb
mov
mov
outsl
xor
xchg
jl
js
js
jne
fdivrl
pop
pusha
aaa
or
out
dec
sar
sbb
jns
fisttps
add
add
mov
mov
dec
mov
mov
in
andl
cli
cmp
mov
mov
xlat
mov
je
xchg
scas
pop
mull
mov
in
insb
dec
mov
ss
stc
xchg
jl
sbb
test
cmp
mov
add
add
mov
sub
aam
sub
lods
or
les
ret
sub
add
push
aaa
sub
mov
cmp
aas
add
fcos
call
repz
neg
mov
or
xchg
scas
arpl
xchg
adc
fs
cmp
icebp
xor
cwtl
fs
pop
aaa
sti
cld
add
add
cmp
pushf
jle
loop
out
sbb
nop
pop
sbb
cli
cmp
pop
movsl
rorl
arpl
daa
aad
call
cld
mov
add
push
add
fs
adc
nop
fdivrp
decl
jno
inc
rcll
notl
mov
jo
push
pop
in
mov
mov
les
or
add
add
mov
jo
sub
add
push
mov
decl
jl
add
out
insb
push
imull
dec
mov
addl
jp
lea
aas
mov
testb
add
push
cltd
fstpt
sti
and
push
sti
xchg
mov
push
cwtl
mov
add
or
push
sbb
dec
in
push
js
ja
lock
sti
jbe
lods
jne
inc
push
mov
xor
lods
push
loopne
xor
stos
lret
sbb
lods
push
fs
xor
xchg
and
sti
adc
stos
push
mov
sbb
shll
mov
jp
dec
enter
jne
mov
aaa
sub
mov
add
add
mov
dec
add
in
add
test
ja
call
leave
ljmp
stos
insb
lods
jo
insl
add
ds
push
xchg
lods
je
insb
ret
push
neg
inc
in
movsl
js
mov
mov
and
outsb
mov
insl
jge
mov
push
loop
enter
aad
rclb
test
pop
mov
outsb
inc
mov
rsqrtps
xlat
add
adc
sub
add
adc
sbb
rcl
cmp
fldenv
fldl
pop
gs
push
push
aaa
call
mov
mov
or
push
mov
call
das
ds
daa
mov
sbb
mov
pop
push
adc
add
daa
mov
es
push
dec
and
and
sti
cmp
rclb
xchg
mov
fidivs
aas
test
sbb
jno
jnp
adc
clc
push
pop
test
add
cwtl
or
mov
sbb
dec
cmp
in
cmp
jmp
xchg
push
std
or
xchg
cmp
add
jb
push
gs
adc
cld
decl
add
pushl
std
ret
int
dec
lea
mov
test
ljmp
jns
decl
fnstenv
add
cmp
pushf
aam
adc
mov
push
dec
mov
adc
push
inc
imul
push
jbe
and
decl
add
inc
andb
cld
mov
cmp
adc
inc
and
cmp
mov
jb
lods
pop
push
xchg
test
mov
ja
dec
orb
push
lds
add
faddl
mov
loop
repz
cld
mov
stos
xor
pop
popa
mov
fildl
add
and
jmp
jl
popa
lcall
sti
nop
in
push
insl
push
and
pop
flds
aad
push
popf
add
rolb
mov
xlat
out
mov
adc
push
jne
mov
popf
stc
fsubrs
adc
mov
mov
cli
cld
push
lahf
ljmp
daa
pop
mov
add
add
jne
add
sbb
ret
dec
mov
das
sbb
test
sub
add
imul
xor
test
pusha
subl
xor
inc
lds
jmp
push
bound
and
mov
adc
sub
and
and
ds
cmp
add
insb
mov
mov
arpl
add
add
dec
mov
movhps
daa
mov
add
call
mov
sbb
jp
cmp
add
cwtl
notl
and
jne
bound
dec
inc
add
pop
ljmp
lcall
call
add
inc
or
inc
add
mov
movsl
notl
add
pop
das
lods
adc
inc
mov
push
je
repnz
inc
fcoml
mov
je
add
pusha
mov
add
out
adc
sti
fidivrl
int3
adc
add
mov
xor
je
cmpsb
cmp
and
pushf
or
loope
inc
push
insl
stos
add
xlat
rolb
rolb
add
adc
add
lahf
mov
jnp
nop
imul
lahf
stos
mov
fs
dec
sti
fneni(8087
cmp
out
movsb
je
mov
aas
add
xchg
add
cmp
das
les
inc
mov
inc
and
jmp
fs
push
jne
sub
jmp
dec
and
shl
push
add
add
xor
push
push
les
ret
mov
leave
arpl
aas
jmp
push
pop
xor
jge
ds
add
js
mov
sub
or
call
adc
add
dec
jmpw
data16
adcb
cld
inc
xor
add
add
aas
call
xchg
loope
mov
stc
fnstcw
rcrb
jl
sub
dec
not
fwait
push
mov
inc
jb
int
stc
push
in
in
push
sarb
aad
rcrb
int
rorb
xchg
mov
or
mov
add
loopne
jno
movb
adc
add
add
ss
insb
in
mov
lods
cli
mov
lret
inc
adc
pop
jg
pop
inc
add
mov
inc
add
sbb
es
add
add
xor
ret
push
add
inc
inc
test
cli
cmpl
add
push
outsl
add
xchg
cld
push
outsl
add
aas
push
mov
aas
add
add
xchg
push
scas
adc
lcall
call
xchg
sub
cli
fildl
xor
es
aas
add
mov
sub
push
or
dec
xor
aam
xchg
pop
sub
cltd
stos
outsl
lea
jo
arpl
add
inc
xor
cld
incl
int3
popf
sti
push
in
je
add
sbb
and
add
dec
sub
stc
sub
xor
and
cli
xor
aas
and
mov
inc
and
sub
addr16
movsb
lahf
jne
les
iret
out
into
add
sbb
call
test
pop
stos
push
pop
in
mov
mov
sub
test
movsb
mov
add
jmp
pop
loop
jl
inc
add
push
mov
mov
jg
les
jle
inc
or
add
stos
out
int3
in
aam
pusha
rep
out
fsubr
je
jo
sub
push
jmp
test
rol
pop
stos
data16
scas
or
pop
pop
and
bound
jo
addr16
ret
add
add
or
pop
sti
cmp
add
out
jmpw
mov
out
test
xor
fs
jmp
lahf
dec
xchg
pop
push
mov
and
add
aas
add
daa
out
gs
scas
push
das
fwait
stc
data16
dec
sti
sbb
jecxz
mov
pop
sub
add
and
xchg
add
das
divl
dec
call
comiss
push
push
jnp
les
dec
sbb
xchg
adc
or
jae
cmp
movlps
add
shrb
jge
divl
mov
decl
add
add
dec
mov
dec
pushl
adc
cmp
or
add
sarb
add
add
or
and
and
push
xor
or
je
adc
push
ds
dec
cmp
jnp
enter
push
dec
fdivr
add
xor
xor
adc
lahf
add
mov
push
lcall
movsb
jecxz
cmp
gs
adc
add
add
out
add
xor
adc
cmpsl
or
cli
sub
ret
aas
jmp
add
mov
xchg
dec
dec
das
fsts
popa
repnz
and
jns
testb
and
jmp
xor
dec
pop
sbb
fdivl
xor
call
mov
jmp
or
lret
add
add
aas
test
div
sub
inc
inc
das
jmp
or
jg
push
repz
shl
sbb
sub
push
ret
call
add
or
add
daa
pop
jne
mov
enter
out
sub
mov
out
pushl
inc
mov
neg
push
shll
lods
ret
and
lret
and
push
scas
pop
sti
inc
sub
sar
add
mov
adc
daa
pop
xor
push
lcall
mov
cmp
in
push
fcomi
in
ljmp
inc
icebp
cli
add
shlb
lea
xlat
dec
push
xchg
cmp
ret
adc
inc
divl
add
adc
dec
cmp
cmpsb
inc
divl
mov
or
fcomp
or
cmpb
test
dec
call
test
cs
xor
cli
mov
les
cmpsl
out
add
mov
and
cmp
idiv
stc
jg
sbb
outsb
pop
push
xor
adc
lahf
or
cli
add
add
mov
adc
xor
push
and
sti
xor
mov
adc
ljmp
pop
fisttpll
or
inc
lods
imul
test
je
sbb
out
cli
cmp
dec
adc
adc
mov
sub
xchg
jne
xchg
xchg
jne
inc
lock
test
pop
loope
out
incl
add
rcr
mov
aas
and
in
xor
add
dec
push
gs
shlb
dec
jecxz
and
unpcklps
sbb
cs
lock
dec
push
lcall
push
adc
jne
cld
or
sub
cmp
adc
mov
jmp
call
jmp
pop
lods
jmp
inc
cltd
test
mov
repnz
sub
add
repz
scas
lret
clc
mov
sub
cvttps2pi
cwtl
push
repz
fcompl
icebp
inc
add
cmpb
stos
push
push
push
jb
dec
add
in
mov
call
insl
addr16
pop
icebp
sub
lret
sub
xchg
push
jne
mov
pop
movd
aaa
sti
cld
add
cli
hlt
add
add
push
jne
mov
aas
pop
mov
sub
mov
arpl
in
push
jmp
jmp
mov
and
jmp
je
jns
pusha
sub
lret
idiv
pop
push
inc
call
jmp
mov
sbb
adc
jp
or
lock
notl
or
mov
in
jae
mov
cmp
add
add
mov
test
xor
xor
lock
divb
les
jp
or
cmpsl
idiv
jbe
divb
test
adc
dec
mov
pop
decl
push
inc
cmpsl
out
add
andl
or
jl
xor
and
je
jge
pop
cld
movsb
pushl
adc
scas
or
cli
add
add
dec
cmpsl
lds
xchg
out
adcl
push
cmp
or
sbb
cmp
or
add
jb
movups
cmpsl
jnp
int
test
dec
divl
xor
sub
and
out
cli
push
push
xchg
cmc
mov
icebp
in
cli
xor
jne
scas
xchg
jne
sbb
cld
mov
add
add
cmp
icebp
mov
popf
inc
and
xchg
mov
jge,pn
adcl
adc
adc
mov
dec
push
lock
cld
loopne
mov
ror
cmp
test
push
aam
sub
cltd
aaa
xchg
out
divl
sub
in
cmpsb
lock
or
sbb
call
fsubs
aas
fldenv
xchg
inc
and
ljmp
add
fisttpll
cmpsl
add
call
add
or
sub
ds
lea
cmp
int3
int
shll
ds
lods
roll
pop
inc
gs
cmp
and
xlat
xor
xchg
and
pushf
mov
sbb
add
dec
rcll
pop
sub
mov
mov
add
add
xchg
xor
fisubl
pop
mov
lods
pop
jg
iret
dec
add
in
stc
ret
jne
xor
call
decl
je
cmp
add
shlb
je
cmpsl
pop
push
lea
and
add
or
lea
sbb
adc
adc
sub
sahf
xor
add
add
push
inc
cmp
dec
outsl
xor
inc
dec
inc
mov
je
mov
je
les
xor
bound
jb
test
jmp
mov
pop
pusha
mov
push
addl
add
lcall
pop
or
stc
loopne
jg
gs
add
and
out
cmpsl
mov
add
add
dec
adc
cmpsl
fwait
iret
je
rorl
cmp
xchg
sti
dec
fidivrl
push
test
popw
add
inc
fdivs
pop
cmp
cmp
icebp
aas
and
mov
xchg
fcomps
dec
mov
rclb
jno
aas
in
ror
int
ss
add
shll
add
add
cltd
add
xor
mov
push
mov
adc
pop
inc
sub
ret
dec
je
jo
adc
jl
push
pop
adc
dec
fidivl
call
fs
ds
ret
cmp
sar
ds
jl
dec
fs
lods
cmp
add
cmpsl
or
jmp
add
test
jecxz
cmpsl
pop
inc
icebp
daa
aas
dec
mov
loope
rclb
in
lahf
cmp
xchg
mov
add
mov
ret
imul
push
lods
jle
add
jmp
and
add
mov
lea
and
or
dec
sti
jmp
and
add
das
or
add
add
enter
aas
add
daa
rcll
insb
popf
rcrl
adcl
mov
jle
enter
ret
jne
push
add
cmp
add
and
lea
fisttpl
cmp
subb
pop
test
test
mov
andl
add
jge
sbb
cmp
xor
add
stos
rcl
cmp
mulb
sub
addb
jne
add
or
stos
xchg
cmp
inc
loope
xor
cli
mov
incl
and
xor
out
xchg
add
lods
and
prefetch
adc
loop
add
jbe
add
je
inc
jle
stos
in
das
insl
and
lret
add
jecxz
add
addb
add
add
xchg
imul
fs
addl
ljmp
xor
stc
cli
fdivrs
aam
shlb
cmovg
add
add
nop
add
addb
cmp
sti
jmp
imul
add
cmc
out
push
xchg
inc
filds
invd
and
add
gs
add
add
divps
add
pop
pop
or
mov
sbb
and
insl
ret
adc
sub
dec
add
sbb
pop
add
jns
or
mov
inc
pop
inc
add
pusha
inc
or
xchg
call
sbb
add
jo
add
fs
insb
sbb
pop
sbb
sbb
jo
sbb
add
add
ljmp
jl
pop
push
mov
call
mov
out
out
jp
add
mov
or
push
mov
push
test
sub
xchg
test
adc
or
sti
jmp
jbe
add
and
mov
and
jmp
add
add
add
and
jbe
ds
dec
push
jo
and
cld
inc
add
aad
add
pop
adc
std
inc
push
call
push
sub
sbb
in
add
mov
divl
jecxz
addl
call
inc
sub
sbb
mov
and
test
pop
jge
divl
add
jecxz
roll
lods
cmpsb
add
inc
push
pop
cmp
adc
and
add
and
testb
or
daa
or
pop
add
add
xor
icebp
aas
and
das
data16
lods
push
adc
dec
lahf
push
fs
jp
xor
dec
or
jp
mov
cmp
and
fildll
and
add
ljmp
add
decl
adc
aas
and
ret
je
test
lock
pop
push
cs
jns
jae
aas
loop
daa
sub
add
cmp
lock
add
jnp
xor
adc
or
adc
aad
mov
outsb
stos
mov
sub
fdivrs
aaa
call
and
cmp
iret
leave
cld
jl
inc
jo
mov
call
mov
inc
cmp
cmp
test
jg
aas
jmp
mov
repz
cs
add
mov
add
sbb
add
in
sar
xor
neg
sbb
je
pop
divl
pop
divl
add
add
cli
jae
inc
int3
das
xchg
fnstenv
jg
out
int
xor
je
dec
in
pusha
and
cli
ds
jo
push
out
cs
inc
es
jmp
pop
push
push
xorl
daa
mov
out
push
sub
cld
pop
sub
into
add
dec
std
jae
mov
lea
or
jne
add
cmp
decl
cmp
adc
movb
sub
push
push
xchg
lock
push
jmp
cmpsl
divl
and
call
mov
adc
or
sub
ret
mov
dec
or
mov
sti
pop
es
cmp
cmp
add
lea
and
cmp
or
cmp
test
add
add
mov
ljmp
jmp
push
pushf
out
imul
out
xchg
inc
cld
lea
aas
inc
mov
add
pop
add
dec
add
imul
scas
sbb
cmp
sub
mov
add
or
mov
fistps
add
test
add
add
push
cmp
adc
arpl
loop
clc
lock
xor
in
cs
and
mov
pusha
jle
cmp
add
xor
jl
out
and
mov
jl
shl
add
and
jle
mov
sub
adc
add
sub
stos
das
push
add
add
js
push
add
push
add
incl
iret
mov
xchg
imul
and
inc
lret
call
not
mov
js
cmp
jle
movsl
daa
dec
pop
sub
mov
stos
mov
push
je
adc
daa
les
std
and
test
and
add
cmp
mov
enter
add
daa
aas
add
jo
adc
push
push
inc
jmp
in
sti
sbb
pop
popf
push
pop
sti
sbb
cmp
pop
movsl
mov
jmpw
xchg
test
lock
push
sbb
les
fdivs
jne
ret
in
idiv
inc
mov
pop
lar
add
jg
dec
inc
add
cmovae
add
cli
jae
mov
lea
mov
cmp
je
add
add
inc
je
adc
daa
cmp
or
cmp
int
add
fcoms
mov
push
add
push
add
sub
push
call
mov
add
scas
jecxz
sti
sbb
jmp
inc
jmp
cmc
gs
cmp
sbb
jmp
loopne
and
test
cmp
pop
add
or
and
stc
pop
sbb
inc
push
mov
add
and
stc
pop
adc
ficomps
filds
and
test
and
push
test
es
ljmp
xchg
and
test
add
add
inc
movsl
and
decl
test
add
and
and
and
jmp
or
ds
stc
sub
mov
in
cltd
imul
addl
jmp
sbbl
xorps
add
jmp
jae
aas
decb
in
dec
imul
cmp
xchg
push
dec
mov
ss
sub
add
pop
cli
cmp
in
movsl
and
jmp
sub
push
fidivrs
addb
jmp
xchg
ss
data16
sti
jmp
daa
aas
jne
stos
test
addr16
test
out
outsb
sti
cmpsb
fs
daa
inc
repz
or
and
daa
aas
add
pop
das
add
ss
mov
jmp
add
add
aas
or
sti
out
add
loopne
test
movsb
xor
or
sti
mov
sti
inc
data16
xchg
xchg
inc
out
out
dec
push
add
and
add
mov
out
inc
mov
je
add
mov
dec
adc
add
ljmp
or
add
mov
dec
xor
stos
mov
or
loop
mov
add
mov
jp
jne
les
push
dec
xor
lods
idiv
cmp
mov
inc
sbb
sbb
mov
int3
cmp
mov
add
std
jnp
stos
add
xchg
movsl
loop
xor
and
repnz
repz
add
add
std
xchg
mov
ljmp
loop
inc
cli
add
lea
repnz
add
bound
ljmp
loop
sub
add
dec
or
addr16
repz
push
jp
xor
xchg
sbb
jno
jnp
and
jle
fucom
xor
add
scas
in
xchg
ds
add
add
lds
andb
notb
movsl
cltd
xlat
into
push
dec
sbb
add
aas
sub
pop
imul
add
outsb
push
or
push
push
sbb
add
inc
imul
inc
push
test
or
shll
cmp
adc
xor
ret
jle
mov
ret
cmp
outsb
pop
cmp
fistpll
add
pop
ljmp
jl
aas
jmp
loopne
mov
add
sub
adc
and
inc
test
stos
or
cmp
and
inc
add
daa
mov
jl
and
callw
imul
or
sti
add
cmpsb
and
add
dec
mov
daa
aas
add
add
add
adc
daa
mov
add
daa
dec
mov
pop
dec
mov
and
sbb
jg
mov
sbb
test
sbb
cmpsl
sbb
dec
dec
and
inc
scas
clc
jbe
push
sub
inc
out
inc
scas
rol
jecxz
push
add
ret
push
dec
push
aad
cli
decl
dec
add
add
add
cmp
add
cli
decl
std
mov
mov
mov
jnp
push
inc
je
scas
or
dec
inc
add
aas
add
es
out
inc
xor
or
and
jl
add
and
icebp
divl
jae
xchg
outsl
imul
fnstsw
int3
repz
in
mov
add
add
sub
dec
sbb
sub
repz
dec
in
movsb
and
jmp
sub
lcall
mov
mov
mov
ret
ljmp
and
out
and
dec
mov
jnp
inc
mov
call
cmp
push
add
jmp
add
lcall
cld
and
leave
add
add
inc
jb
imul
adc
pop
sbb
and
add
test
std
ret
rcll
add
ds
out
adc
je
scas
xor
sbb
or
cmpsb
add
in
add
aas
jmp
add
aas
sub
sub
pop
inc
pop
in
adc
xchg
mov
imul
je
add
add
mov
or
adc
jb
aas
add
daa
enter
cmpsl
push
in
aas
add
ds
test
sbb
out
pop
pop
mov
in
mov
jmp
mov
sti
jbe
pushl
andb
add
sub
add
pop
or
cmpsl
push
in
add
add
aas
add
out
mov
dec
xor
pop
and
push
stos
daa
cmp
mov
push
cmp
pop
and
imul
adc
push
or
arpl
cmpsb
pop
idivl
jns
add
cmp
push
mov
adc
divb
dec
jmp
imul
cwtl
pop
pop
pop
add
add
push
xchg
adc
cmp
cmp
andl
cmc
call
jnp
cmp
inc
mov
mov
and
or
dec
cmp
shrb
fs
pop
int3
in
out
xor
mull
aas
jg
in
add
sub
push
fs
out
sbb
sbb
repnz
shll
decb
jecxz
jp
push
fs
cwtl
xor
lcall
es
add
test
nop
or
out
test
dec
aam
into
cs
mov
addr16
addr16
jb
js
pop
aas
sub
lcall
push
orb
mov
cmp
js
insb
fs
popa
fildl
add
add
mov
add
stos
or
inc
jp
ja
cmp
lds
push
mov
dec
in
inc
jl
mov
and
cmp
int
stos
lds
push
xor
pop
or
cmc
pop
cmp
fstpl
cmp
pop
adc
mov
mov
negl
jmp
xor
xchg
add
add
push
sti
popf
sub
push
adc
mov
sti
divb
in
psubsw
lahf
mov
ds
mov
into
hlt
push
sti
cmp
sub
loope
adc
bound
call
jb
mov
push
add
sbb
mov
push
jle
push
sti
cld
sbb
jne
sbb
cli
xchg
add
pop
sbb
sub
pop
aas
add
std
dec
xor
adc
dec
inc
add
dec
add
mov
mov
and
std
push
call
xchg
and
dec
adc
or
xchg
inc
or
mov
fmul
add
mov
jcxz
ficompl
or
mov
mov
add
cld
cmc
adc
out
inc
jecxz
and
push
dec
push
add
mov
push
and
or
mov
push
and
push
lahf
cmpl
sbb
push
in
lret
cs
gs
rep
mov
je
and
mov
mov
ss
and
into
jno
add
jne
add
hlt
fnstsw
icebp
in
jae
es
cli
cmp
adc
iret
pop
add
mov
dec
add
out
sbb
push
addr16
add
fists
ljmp
lcall
into
ja
fldl
and
test
rorb
test
cmp
gs
and
jmp
je
incl
je
add
das
pop
mov
sub
jnp
sub
mov
pushl
or
hlt
aaa
adc
jmp
jmp
pop
jg
sub
and
push
aam
sub
insb
pop
or
jmp
ja
fcos
and
pushf
push
xchg
sub
bound
sti
movsb
movaps
icebp
inc
xchg
jb
add
movsl
cld
xlat
movsb
add
push
je
xlat
daa
test
dec
aas
ret
cmp
add
pop
sub
mov
xchg
es
cmp
dec
push
sub
les
jbe
jne
jbe
xchg
sub
sub
test
int3
cs
arpl
and
mov
add
add
push
movb
cmp
dec
inc
jge
push
ljmp
rclb
add
lock
xor
adcb
add
inc
xor
jge
xor
nop
push
orl
fidivs
add
lea
or
or
call
test
add
lea
inc
add
inc
add
aam
adc
cli
dec
pop
aaa
mov
inc
lahf
arpl
jmp
lcall
sbb
pop
adc
sbb
push
adc
sbb
fwait
xor
sbb
xorl
cmp
sbb
xor
push
jnp
push
jmp
add
xor
push
lcall
adc
push
call
adc
push
jmp
xor
push
incl
aas
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
dec
jmp
add
add
and
add
add
jmp
add
jmp
add
dec
jmp
add
dec
jmp
add
dec
jmp
add
or
jmp
daa
add
jmp
daa
stos
adc
daa
cmpsl
adc
daa
mov
jmp
daa
jmp
jmp
daa
jecxz
jmp
add
add
dec
adc
daa
cmp
jmp
daa
inc
adc
daa
aas
adc
daa
sub
jmp
daa
xor
jmp
daa
decl
jmp
daa
out
jmp
daa
out
psubsw
rorl
jmp
daa
outsl
adc
daa
push
adc
daa
push
adc
std
inc
and
int
and
int
sbb
mov
inc
adc
int
adc
add
add
inc
or
mov
inc
add
lea
adc
inc
clc
inc
hlt
jge
inc
in
inc
push
adc
aam
dec
inc
cmpsb
adc
mov
pop
cmp
inc
add
dec
inc
movsb
adc
inc
daa
adc
inc
mov
paddw
prefetch
sbb
scas
add
add
sbb
stos
sbb
jmp
sub
lcall
sbb
call
sub
decl
sbb
incl
sub
jg
sbb
jnp
sbb
ja
sbb
sub
jmp
adc
sbb
lret
decl
sbb
dec
and
incl
sbb
inc
xor
aas
sub
cmp
sbb
aaa
add
add
sbb
xor
push
ljmp
sub
ljmp
and
jmp
sbb
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
dec
jmp
add
add
in
dec
jmp
add
jmp
add
jmp
add
xor
add
add
xor
add
xor
jmp
daa
out
jmp
daa
jmp
jmp
daa
rorl
jmp
daa
fisttpl
jmp
daa
ret
or
daa
or
daa
pop
or
daa
add
jmp
daa
or
jmp
add
add
jmp
daa
testl
jmp
daa
adc
jmp
daa
fwait
or
daa
rorl
daa
movsl
or
daa
in
jmp
daa
xchg
or
daa
jae
jmp
or
aas
inc
push
std
ds
push
std
ds
push
or
ds
std
sbb
int
adc
int
and
add
add
sbb
int
adc
int
adcb
ds
sbb
and
jge
js
jge
sbb
ds
or
jge
in
or
dec
ds
cmp
fmull
dec
adc
and
decl
sbb
inc
xor
inc
sub
mov
add
add
sbb
mov
sbb
mov
sbb
jns
sbb
stos
sbb
out
cmp
pushl
xor
lcall
sbb
ljmp
adc
call
sbb
and
decl
xor
incl
and
jnp
sbb
cmpsl
adc
inc
adc
fstl
cli
adc
call
sbb
push
sub
mov
sbb
call
add
xor
jmp
add
xor
add
xor
add
xor
add
jmp
add
xor
add
jmp
add
add
xor
add
jmp
add
jmp
add
jmp
add
xor
add
jmp
add
jmp
add
add
xorb
add
jmp
add
jmp
add
xor
jmp
daa
insl
or
daa
push
or
daa
decl
jmp
daa
out
jmp
daa
out
or
daa
rorl
jmp
daa
fisttpl
jmp
daa
rorl
jmp
daa
fisttpl
jmp
daa
ret
or
daa
sub
or
add
add
jecxz
jmp
daa
or
jmp
daa
or
jmp
daa
icebp
or
daa
lahf
or
daa
orl
xchg
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
inc
cmp
inc
xor
inc
sub
inc
and
add
std
inc
sbb
int
sbb
inc
adc
inc
or
inc
add
inc
clc
or
inc
lock
in
or
inc
in
jge
loopne
and
fldt
sub
xlat
das
sub
rcrl
sub
iret
pop
sub
lret
das
sub
das
sub
ret
pop
sub
mov
add
add
sub
mov
sub
mov
sub
enter
les
sub
cmpsl
das
sub
mov
pop
sub
mov
call
sub
pop
sub
mov
sub
xchg
sub
xchg
pop
sub
jg
sub
jnp
sub
loope
sub
frstor
sub
outsl
pop
sub
imul
jmp
aas
jmp
add
jmp
lods
dec
jmp
add
dec
jmp
add
dec
jmp
add
jmp
add
dec
jmp
add
add
jmp
add
dec
jmp
add
dec
jmp
add
dec
jmp
add
dec
jmp
cwtl
dec
jmp
jmp
daa
daa
push
jmp
daa
clts
jmp
daa
daa
push
jmp
daa
test
jmp
daa
push
or
jmp
daa
or
jmp
daa
roll
jmp
daa
cmpsl
adc
daa
jecxz
jmp
daa
mov
add
jmp
add
add
scas
add
jmp
daa
ret
add
jmp
daa
sub
add
je
jge
jo
lea
insb
or
aas
or
pusha
or
pop
or
pop
or
aas
push
or
dec
or
dec
or
aas
push
or
aas
dec
or
ds
or
ds
or
add
or
aas
cmp
std
ds
std
and
int
sbb
int
sbb
mov
adc
int
or
int
test
or
sub
sti
sub
sub
repz
sub
jmp
sub
out
sub
jecxz
sub
fildll
sub
xlat
sbb
sub
iret
sub
add
sub
sub
ret
sbb
sub
mov
sbb
sub
scas
sub
sub
cmpsl
sbb
sub
sti
das
sub
fwait
sub
sub
xchg
sbb
sub
mov
aas
jmp
add
jmp
add
dec
jmp
add
dec
jmp
cld
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
add
jmp
add
jmp
add
inc
jmp
add
inc
jmp
add
jmp
jmp
daa
lea
jmp
add
add
cmp
jmp
daa
mov
pop
jmp
daa
invd
jmp
daa
daa
or
daa
mov
jmp
daa
adc
jmp
daa
sub
jmp
daa
and
jmp
daa
imul
jmp
daa
out
pop
jmp
daa
xor
pop
jmp
daa
dec
pop
jmp
add
add
pop
jmp
daa
into
pop
add
cmp
or
cmp
or
cmp
or
cmp
or
jge
dec
cmp
dec
cmp
cmp
cmp
or
mov
cmp
cmp
or
add
or
inc
sahf
or
inc
lcall
inc
xchg
or
inc
mov
std
inc
mov
int
xchg
and
incl
push
sub
jge
sub
jns
sub
jne
sub
jno
sub
insl
cs
imul
sub
popa
push
sub
pop
cs
pop
cs
push
push
sub
push
push
sub
dec
cs
dec
cs
inc
add
add
sub
inc
push
sub
cmp
cs
xor
push
sub
sub
cs
and
push
sub
sbb
cs
adc
push
aas
jmp
add
dec
jmp
add
dec
jmp
add
inc
jmp
add
inc
jmp
add
add
xchg
add
jmp
add
jmp
add
jmp
add
jmp
add
inc
jmp
add
jmp
add
inc
jmp
add
inc
jmp
add
lods
or
daa
mov
jmp
daa
leave
or
daa
mov
or
add
add
xchg
or
daa
cltd
or
daa
lea
jmp
daa
movsl
or
daa
test
or
daa
mov
or
daa
jns
jmp
daa
jno
jmp
daa
mov
jmp
daa
orl
jmp
daa
dec
or
daa
push
or
daa
gs
daa
imul
jmp
or
add
or
aas
adc
std
aas
push
or
aas
or
int
push
or
aas
decb
int
cli
or
aas
testb
aas
repnz
aas
ljmp
aas
loop
jge
fimuls
lea
fimull
lea
or
rorb
jge
into
or
lret
aas
or
aas
mov
or
mov
add
add
aas
scas
or
aas
cmpsb
or
jmp
sub
lcall
sbb
call
sub
decl
sbb
incl
sub
jge
sub
jns
sub
jne
sub
jno
sub
insl
sub
ljmp
sub
gs
jmp
sub
pop
sub
lcall
sub
push
add
add
call
sub
dec
sub
decl
sub
inc
sbb
incl
sub
cmp
sbb
pushl
sub
jmp
add
inc
jmp
add
jmp
add
inc
jmp
add
inc
jmp
add
cmp
add
cmp
add
inc
jmp
add
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
int
jmp
daa
cwtl
add
jmp
daa
je
jmp
daa
insb
add
jmp
add
add
pop
add
jmp
daa
mov
add
daa
dec
add
jmp
daa
fs
jmp
daa
popf
add
daa
jno
jmp
daa
imul
jmp
daa
cmp
jmp
dec
cmp
pop
cmp
cmp
pop
or
cmp
pop
add
add
cmp
pop
std
cmp
pop
or
cmp
pop
std
cmp
pop
std
cmp
pop
int
push
pop
int
or
mov
cmp
pop
int
incb
int
cli
push
mov
cmp
push
lea
out
push
lea
ljmp
cmp
push
lea
fiadds
lea
fiaddl
jge
push
jge
rolb
dec
cmp
push
dec
cmp
push
cmp
add
and
incl
and
mov
and
pushl
and
ljmp
and
jmp
and
lcall
and
call
and
decl
and
incl
and
jge
sbb
jns
sbb
jne
sbb
jno
sbb
insl
sub
ljmp
sbb
add
add
sbb
popa
and
lcall
sbb
pop
and
call
sbb
push
and
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
jmp
add
inc
jmp
add
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
add
es
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
daa
icebp
add
daa
std
add
daa
stc
add
daa
add
add
jmp
daa
aad
jmp
daa
fldl
daa
flds
daa
in
jmp
add
add
lods
add
daa
test
add
daa
mov
jmp
daa
mov
add
daa
roll
lea
jmp
daa
xchg
add
jmp
daa
movsl
add
add
pop
add
dec
inc
push
add
cmp
inc
inc
add
dec
inc
ds
add
add
inc
xor
std
aas
sub
or
inc
push
add
std
aas
push
add
int
push
add
mov
aas
add
mov
aas
testb
out
add
aas
ljmp
push
jmp
and
jmp
sub
frstor
push
flds
add
sub
call
and
call
sub
dec
and
dec
sub
inc
and
inc
sub
mov
sub
pushl
sub
ljmp
sub
jmp
sub
lcall
sub
call
sub
decl
sub
incl
sub
jge
sbb
jns
sbb
jne
add
and
pushl
aas
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
inc
jmp
add
add
ss
jmp
add
inc
jmp
add
inc
jmp
add
adc
call
daa
sbb
call
daa
and
call
daa
jmp
call
daa
in
call
daa
pusha
add
daa
sub
jmp
daa
xor
jmp
daa
dec
add
daa
dec
add
add
add
inc
add
daa
ds
daa
or
jmp
daa
adc
jmp
daa
sbb
jmp
daa
and
jmp
daa
ljmp
mov
cmp
add
cmp
add
lds
lea
add
cmp
add
mov
dec
cmp
add
lods
add
cmp
dec
cmp
lcall
xchg
jne
and
inc
add
dec
add
and
cmp
add
inc
jne
ja
push
int
add
xchg
sbb
sub
add
inc
add
je,pt
je
test
push
mulb
jle
inc
mov
sbb
inc
inc
ds
jmp
les
inc
flds
add
incl
add
jnp
adc
jnp
jl
push
xchg
dec
add
and
ds
jle
adc
jg
cmp
mov
pop
inc
loopne
pop
dec
add
cltd
sbb
and
aas
xchg
sti
mov
pop
jle
cmp
pop
ljmp
roll
inc
mov
add
popa
stc
stc
mov
sbb
and
jo
xor
pop
repnz
xor
jmp
ljmp
xor
pop
lret
ret
adc
in
loope
out
jl
mov
mov
movb
jl
inc
lret
jnp
add
mov
pop
push
push
dec
dec
imul
add
sbbb
pop
dec
clts
and
and
adc
cli
add
ret
add
add
adc
loop
jmp
lret
jge
pop
addl
movsl
jnp
ljmp
add
stos
movsl
cmp
jnp
jg
inc
cmp
push
and
test
loope
inc
lret
jge
mov
add
jmp
add
iret
pop
insb
sub
call
lock
add
add
add
or
test
out
pop
es
cli
movsb
inc
mov
add
sarl
add
jg
inc
out
add
add
push
mov
ret
sbb
add
jge
add
repz
jge
addl
mov
clc
cmp
add
push
mov
jl
push
add
jb
inc
pop
cmp
call
into
cld
sbb
push
mov
add
test
add
inc
and
jg
inc
push
aaa
mov
ret
mov
sub
cmp
sub
out
xchg
jecxz
inc
call
cmpsl
mov
push
sbb
test
sbb
mov
and
addb
inc
jg
adc
je
cltd
rcrl
add
sbb
sbb
add
je
cltd
rcrl
flds
add
push
and
sbb
pop
rolb
dec
repz
sti
cmp
lret
mov
cltd
adc
sbb
mov
xchg
sbb
add
dec
mov
mov
pop
sub
or
pop
dec
add
aas
xchg
test
and
aas
cmpsb
xchg
cmp
sub
daa
rolb
inc
sbb
iret
mov
stos
jle
and
rcrb
and
incb
jle
and
sarb
and
sub
gs
add
add
gs
add
mov
push
test
add
mov
add
aam
call
sub
add
daa
ret
cmp
in
mov
cmpb
mov
stos
mov
mov
add
sti
loope
add
daa
aas
mov
scas
jmp
mov
xchg
int
sti
xchg
loope
ja
in
add
mov
cmc
dec
sbb
in
add
add
cmp
push
mov
pop
mov
call
jle
adc
mov
cmp
and
sbb
ds
add
imul
sbb
cli
ret
cld
pop
push
sub
xchg
ja
call
push
stc
adc
pop
add
and
rcrl
into
mov
add
call
mov
sbb
movsl
shl
call
arpl
jge
cmp
or
and
xor
lock
push
dec
mov
imul
inc
call
int3
scas
inc
sti
rcll
call
out
rcll
add
popa
xor
dec
sti
fwait
xchg
leave
adc
inc
cli
out
movl
jnp
jbe
push
pop
rcrb
push
pop
mov
pop
mov
inc
jg
jns
mov
bound
jns
add
pop
rolw
pop
inc
inc
cld
inc
cmp
in
add
jns
out
test
call
cmc
add
add
dec
pop
mov
mov
stc
inc
mov
jae
and
iret
cmpb
out
test
call
mulb
pop
andl
mov
out
xorl
imulb
out
inc
pop
movsl
sbb
out
pop
ret
dec
jae
adc
xchg
cli
outsb
loop
jle
inc
inc
jne
cmpsb
jl
ljmp
add
cli
sub
aas
call
sub
dec
jg
in
cld
jae
jg
cli
push
bound
jne
cmpsb
jnp
ljmp
jne
movsb
jnp
jmp
jmp
inc
cli
jmp
ds
or
out
mov
fdivr
cli
push
dec
add
pop
in
test
test
adc
jnp
outsb
ds
call
icebp
icebp
jp
jl
or
test
ds
add
jne
idiv
ds
add
imul
call
push
mov
add
xor
jl
xchg
add
call
mov
add
jl
sbb
gs
icebp
dec
mov
add
and
inc
sti
pop
test
leave
add
inc
sti
inc
test
leave
adc
dec
sti
sub
add
insl
mov
push
cld
out
xor
push
in
out
and
sar
push
mov
inc
mov
add
add
in
push
push
mov
bound
add
mull
add
loopne
je
push
add
mov
sti
addr16
leave
adc
ljmp
cmp
xor
fnstsw
jmp
adc
adc
das
jmp
xor
decb
movswl
or
mov
add
mov
jae
sub
mov
clc
sub
jl
push
cmp
add
xor
xor
xchg
mov
jl
or
push
sarl
add
ljmp
cli
stos
aas
imul
sub
inc
inc
lret
pop
ljmp
jle
sbb
add
decl
fdivrl
cmp
les
cs
ss
jecxz
inc
test
cmc
cli
push
bound
imull
je
push
sti
or
adc
idivb
and
outsb
inc
clc
dec
cld
fsubp
mov
cli
stos
test
mov
call
into
ret
jl
mov
add
ret
jl
dec
mov
call
mov
in
fnsave
mov
jnp
cmovge
gs
jmp
jl
mov
call
dec
sub
mov
ret
inc
and
sub
xor
push
add
and
clc
mov
jnp
movl
jne
bnd
inc
jg
lock
je
push
mov
jge
in
test
pop
cmp
jge
in
adc
inc
cmp
dec
gs
data16
out
insb
inc
sti
addr16
call
cmpsl
or
ds
cmp
cmpsl
mov
add
loopne
xor
and
cmpsl
ficompl
add
add
add
es
int3
dec
inc
jg
in
add
dec
and
mov
adc
jne
aas
rcll
pushf
neg
sbbl
out
sub
loopne
mull
mov
outsl
idivl
aas
pop
sti
insl
leave
xor
sub
rolb
lret
mull
adc
or
aas
das
mov
mov
aas
add
add
ret
and
out
cmp
jnp
filds
jns
inc
ja
mulb
inc
arpl
push
push
add
testb
dec
dec
out
and
dec
cmp
je
ljmp
cli
push
cmp
pop
xor
mov
dec
cli
mov
mov
sub
pop
push
test
insb
hlt
or
daa
aas
cli
and
add
inc
jbe
lret
xor
pop
in
cli
jbe
mov
pop
je
leave
call
ja
inc
jmp
idiv
jmp
cmp
in
or
cli
mov
add
push
or
add
add
inc
add
inc
filds
shrl
push
into
xor
jnp
sbb
fsub
add
xchg
sub
stc
mov
loopne
mov
cmc
sahf
je
cmc
popf
je
cmc
test
inc
cmc
movsl
je
cmc
add
movb
add
inc
les
mov
inc
jnp
add
mov
add
pop
cld
sbb
rcr
jp
das
inc
jne
gs
cmp
inc
out
inc
scas
add
shlb
and
arpl
bound
fs
add
divb
push
je
sbb
inc
push
imul
je
inc
insl
je
cmp
jae
ljmp
sub
or
add
jmp
or
sub
add
sub
ret
mov
popa
dec
test
fnsave
sti
add
mov
in
or
add
mov
out
jecxz
inc
and
cmp
jns
cmp
and
int3
sbb
pop
or
mov
jb
sub
jmp
add
pop
ret
rcrl
cmp
push
push
sub
test
out
lods
lock
aas
out
ret
in
cmp
rcrl
jmp
and
and
cs
call
sub
jmp
fildl
jle
push
jnp
repnz
pop
testb
stos
jl
jmp
incb
aas
add
stos
jl
out
xor
aas
add
fimuls
mov
int3
push
add
jge
es
shll
xor
jmp
add
add
mov
xchg
sbb
pop
push
aas
je
or
jle
sbb
icebp
jae
dec
cmp
push
and
out
cli
add
jnp
or
idiv
push
mov
call
ret
xor
jne
and
mov
incl
adc
enter
add
add
cmp
add
addl
scas
inc
mov
mov
jge
ja
gs
jl
dec
mov
call
jle
mov
and
dec
rolb
mov
je
jne
out
jmp
inc
jg
adc
sti
repz
cmp
pop
gs
es
jmp
les
icebp
xor
and
sbb
jg
aaa
sti
cmpsl
pop
push
add
loopne
jge
loopne
pop
cmpsl
orl
sti
jecxz
inc
jl
xor
imul
jnp
outsl
inc
sarl
test
cmpsl
movl
adc
mov
pushl
ljmp
paddb
add
add
push
test
inc
int
or
cmp
out
sti
push
sti
imul
xor
mov
and
and
mov
add
scas
call
sub
jmp
aaa
sbb
decb
out
roll
call
mov
std
gs
sarl
xchg
xor
cltd
inc
cmp
xchg
aaa
add
add
ret
and
and
sbb
inc
addr16
shll
aas
add
scas
test
testb
add
mov
ljmp
pop
outsb
jge
loop
incb
out
pop
sbb
mov
jmp
popa
in
jo
outsb
loope
cmpsb
cmc
or
stc
loope
dec
call
stos
cmpsb
cmc
or
mov
add
add
ljmp
sahf
test
call
inc
in
mov
jmp
inc
cmp
add
sbb
jge
in
js
jne
icebp
ljmp
cmp
jl
mov
xchg
jle
pop
adcl
jne
dec
sub
je
sbb
imulb
xor
idiv
inc
call
add
add
aas
mov
add
inc
scas
inc
jl
mov
lea
adc
jmp
push
xorb
decl
inc
jl
aam
shr
faddl
jg
repz
sti
and
cld
out
mov
or
jg
and
sbb
out
mov
add
add
push
sub
jecxz
xor
int
mov
mov
sbb
mov
xor
inc
pop
pop
mov
int3
push
jmp
jmp
jle
jnp
verr
mov
imul
jmp
jmp
jl
push
aas
jno
and
mov
inc
in
call
add
mov
adc
add
and
jno
sbb
call
add
sub
and
inc
mov
jmp
add
jmp
xchg
jmp
adc
mov
add
jmp
xchg
aas
cmc
lods
mov
aas
jmp
orb
jge
jns
call
add
xchg
add
add
aas
add
jmp
add
daa
aas
add
movsl
in
cli
push
or
jmp
add
daa
aas
add
xor
add
mov
aas
add
daa
aas
add
xchg
jmp
add
daa
aas
add
daa
aas
add
cwtl
jmp
add
daa
aas
add
daa
aas
add
add
add
aas
add
int3
in
cli
jmp
daa
aas
add
adc
movsl
cld
decl
add
cmp
aam
in
inc
add
dec
add
cmp
add
or
add
cmpl
stc
out
mov
call
mov
decl
stc
ljmp
mov
decl
mov
incl
add
gs
ljmp
mov
dec
gs
inc
gs
call
gs
jmp
gs
mov
gs
push
push
jmp
push
jmp
jl
jae
jnp
imul
arpl
jnp
push
mov
decb
jne
inc
add
cmp
jbe
xor
sub
and
sbb
adc
ja
or
add
xorl
repz
jmp
jp
jecxz
jmp
jle
shll
dec
push
inc
rolb
mov
cmp
or
mov
jmp
cmp
aas
sarl
call
in
jb
in
jle
call
add
call
adc
call
data16
add
cmp
bound
call
call
lods
sbb
jp
adc
loop
or
or
stc
out
scas
icebp
out
scas
jmp
out
scas
dec
scas
shl
jp
leave
out
scas
shl
scas
mov
out
scas
test
out
scas
cltd
out
mov
mov
jmp
cli
pop
add
add
jmp
cli
jns
jmp
cli
cltd
xchg
jmp
cli
fwait
jne
cli
loope
jmp
cli
in
in
ror
in
mov
in
xchg
mov
in
iret
leave
in
insl
ret
jns
in
mov
in
ja
in
sbb
cli
or
mov
cli
in
and
testl
add
jp
cli
add
cld
jmp
cld
inc
xchg
cld
lcall
xchg
cld
ljmp
xchg
cld
inc
xchg
cld
incl
xchg
cld
decl
xchg
cld
call
xchg
cld
lcall
cltd
cld
lcall
cltd
cld
out
cwtl
cld
decl
cld
jmp
xchg
cld
push
xchg
cld
incl
xchg
cld
incl
cld
jmp
cltd
cld
incl
add
push
cltd
cld
jmp
cwtl
cld
jmp
cwtl
cld
pushl
cwtl
cld
fstpl
movsl
std
stos
add
movsl
std
fwait
cmp
test
std
andl
std
jae
cmpsb
std
imul
std
arpl
cmpsb
std
pop
popa
cmpsl
std
push
mov
std
inc
push
cmpsl
std
cmp
cmpsb
std
sub
movsl
std
add
add
std
or
lods
std
sti
lods
std
repz
std
jecxz
stos
std
fisttpl
lods
std
lret
stos
cmpsb
std
ret
aas
mov
mov
shrb
mov
in
stos
xchg
in
stos
mov
clc
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
add
push
in
mov
in
mov
in
mov
in
mov
in
add
or
sbb
mov
add
jecxz
and
lock
out
add
out
and
call
js
jecxz
js
jecxz
and
in
jmp
cmp
cli
pop
sub
cli
dec
sub
cli
jne
in
imul
add
cli
daa
sti
in
sub
in
ljmp
rcr
cli
int
in
leave
lret
xchg
ret
addr16
in
jnp
in
adc
loope
and
aas
add
jnp
cli
jmp
movsb
loope
imull
cli
jecxz
loope
add
stc
jmp
stc
pushl
mov
add
mov
stc
call
stc
pushl
mov
stc
ljmp
mov
stc
lcall
mov
stc
ljmp
stc
jmp
mov
stc
call
mov
stc
mov
mov
stc
jmp
mov
stc
call
stc
call
mov
stc
incl
add
sub
mov
jp
jecxz
jp
jp
rcrl
dec
lea
ret
ja
mov
sbb
mov
pop
cmp
mov
cmp
sub
jle
imul
arpl
cmp
jmp
push
jp
dec
idivl
inc
jp
cmp
add
jae
sub
and
sbb
jns
adc
decb
xor
jnp
sti
aas
or
jg
loopne
test
loopne
sbb
dec
adc
ljmp
loopne
cmpb
sub
mov
loopne
adcl
inc
addl
jo
jb
pusha
addl
add
dec
andl
sbbl
adcl
orl
addb
cmpb
mov
sub
test
and
pop
sbbl
inc
jg
loopne
xchg
loopne
dec
and
dec
cmpsl
loopne
imul
loopne
stos
cmpsl
loopne
pop
test
cli
or
loopne
das
mov
aas
add
loopne
dec
add
add
loopne
jmp
or
cli
mov
loopne
ja
loopne
jae
loopne
lods
repz
jecxz
loopne
loopne
test
cwtl
loopne
arpl
loopne
or
mov
pop
mov
incl
mov
jg
cli
ljmp
push
cli
decl
push
cli
incl
add
ret
push
cli
inc
push
cli
ljmp
cli
dec
inc
add
adc
mov
incl
mov
incl
stc
decl
push
cli
call
cli
incl
inc
add
insl
inc
add
inc
inc
add
mov
call
add
push
inc
add
and
jmp
add
jmp
ja
repz
jmp
jmp
jmp
jmp
jb
mov
jb
stos
mov
mov
jge
xchg
lea
mov
jb
jnp
jmp
decb
outsb
mov
lds
scas
push
add
add
jle
imul
or
xchg
pushw
mov
xchg
data16
imul
lcall
les
fcmovnu
dec
add
shrb
dec
insl
lret
mov
cltd
dec
pusha
popf
add
push
pushf
mov
or
cli
add
dec
cmpsl
mov
add
add
jno
mov
jae
into
add
popa
push
mov
xlat
push
push
fwait
icebp
push
cmp
add
add
lahf
push
xor
push
pop
jmp
mov
fs
push
inc
jmp
fwait
dec
dec
xchg
push
insb
int3
scas
pop
push
mov
cltd
std
movsl
mov
xchg
pushf
pop
add
add
pop
xchg
in
jne
rcr
cli
sub
subb
insb
pushf
mov
imul
outsl
jne
jl
pop
mov
andb
push
outsb
pop
jge
je
sub
inc
fs
aas
dec
add
nop
pop
popa
adc
insl
sub
add
addr16
mov
arpl
mov
add
xchg
bound
add
sub
lds
dec
gs
xchg
bound
mov
outsb
gs
cli
push
inc
dec
imul
pop
jae
mov
aas
or
imul
inc
aas
gs
add
insb
call
jbe
pop
fnstenv
outsb
loope
mov
inc
ss
enter
faddl
add
and
mov
decl
test
lds
movsl
imul
pop
and
cmpsl
imul
cmpsl
jae
fwait
xchg
insl
dec
or
pusha
dec
call
stos
outsb
test
xchg
fs
add
mov
adc
xchg
fs
scas
pop
or
ljmp
orb
add
repz
ret
dec
dec
mov
mov
ds
xorl
mov
ds
mov
test
imul
scas
mov
mov
dec
add
or
stos
cmpsb
push
mov
cmpsl
push
imul
inc
imul
add
cmp
ret
imul
cmp
mov
add
test
add
add
popa
xchg
mov
addr16
pop
arpl
or
daa
test
gs
sub
ljmp
mov
popa
pop
mov
push
jmp
nop
arpl
mov
xor
sub
negb
add
dec
gs
bound
and
push
add
push
js
daa
fadds
scas
add
add
pop
insb
popf
mov
jmp
xchg
cmpsl
je
dec
pushf
rorl
cltd
lret
bound
shll
mov
cli
add
inc
dec
gs
or
mov
in
cmp
rep
inc
imul
inc
xchg
add
cmpsb
outsb
push
movsl
insb
inc
loopne
pop
jne
mov
dec
pop
pushf
push
gs
inc
cli
add
add
inc
test
dec
sub
outsb
inc
pushl
outsl
add
outsb
push
les
insl
loopne
mov
jle
arpl
cmpsl
dec
push
mov
cmpsl
outsb
inc
mov
sahf
inc
imul
add
push
enter
nop
dec
add
cmpsl
ljmp
add
push
ja
jae
jns
pusha
mov
add
inc
lock
pop
mov
movl
add
and
xor
dec
jbe
lahf
fs
lret
arpl
pop
push
jbe
cwtl
fs
test
dec
dec
sti
test
cmp
push
lcall
ss
movsb
push
pop
push
nop
lods
push
outsb
jmp
xchg
or
mov
add
add
test
lahf
cmpsb
xchg
add
test
addr16
cmpsl
idivb
xor
out
pop
xchg
ret
jl
mov
cmpb
pop
aaa
xchg
xor
hlt
add
pop
xor
mov
jle
add
push
aas
sub
xchg
push
stc
stos
fs
test
rclb
cmpsb
cmp
pusha
les
imul
add
add
mov
mov
cli
imul
pop
outsl
lcall
pop
test
outsb
jp
jno
andl
outsl
pop
jne
dec
inc
mov
cltd
ljmp
xchg
pop
popa
cmp
aam
gs
ret
sbb
icebp
ljmp
addr16
lret
add
add
add
jo
or
subl
mov
outsb
shlb
mov
popa
add
imul
ja
lea
aaa
add
mov
pop
jb
lods
ja
lea
hlt
add
mov
test
aas
arpl
test
mov
arpl
stos
imul
aas
popa
add
sahf
outsb
inc
aam
arpl
scas
insb
imul
add
outsl
mov
gs
pushl
cmp
pushf
outsb
gs
stos
imul
mov
pop
insb
call
lods
imul
stos
push
call
lahf
insl
inc
out
test
xor
stos
addr16
sti
mov
inc
or
push
mov
lahf
outsb
mul
mov
enter
add
add
out
fbld
outsl
lods
jae
adc
lds
mov
test
dec
lea
mov
dec
xorl
mov
inc
adc
xchg
push
aas
aam
cmp
push
mov
sbb
lods
aas
pop
xchg
lods
cmp
out
mov
add
mov
add
add
arpl
imull
test
jns
cmpsl
or
jmp
mov
in
dec
test
add
mov
mov
inc
mov
shr
add
cmp
xchg
jns
test
push
ss
ja
adc
jg
add
daa
clc
std
and
fs
add
daa
xchg
add
subb
insb
imul
arpl
daa
pop
add
mov
inc
nop
ret
pop
push
xchg
data16
xchg
jnp
jmp
mov
test
mov
pop
dec
push
mov
push
cltd
insl
add
cwtl
jle
inc
mov
cli
and
jl
xor
mov
outsl
xor
add
daa
pop
add
fwait
dec
inc
add
arpl
arpl
pop
rclb
fistpll
jae
out
mov
js
cmp
fsubrl
insb
jae
cmp
add
mov
cmpsb
dec
jne
mov
arpl
cmp
pushf
scas
dec
jb
lcall
cli
lods
ja
jnp
dec
gs
stos
ds
add
scas
insb
outsl
in
int
cmc
popf
pop
jo
mov
popa
push
mov
insb
jae
mov
jo
das
mov
push
jl
lahf
pusha
orb
inc
dec
in
stos
push
push
sti
lret
imul
stos
push
fdivr
bound
mov
sarb
stos
push
scas
lcall
scas
ljmp
add
testl
jmp
incb
push
stos
shll
shrb
incl
add
jae
push
scas
add
and
decl
andl
xchg
jbe
add
inc
cmp
jg
mull
push
inc
adc
aas
or
dec
bound
pop
rcrl
add
add
pop
lret
aas
out
jmp
lods
lods
stc
arpl
scas
jnp
dec
add
push
mov
out
jnp
cli
arpl
stos
mov
push
sub
aas
inc
sbb
outsl
add
rcll
mov
cli
fwait
daa
andb
push
insb
or
push
insl
add
and
das
mov
add
pop
gs
xchg
rolb
arpl
andb
gs
pop
insb
mov
lret
mov
imul
push
push
mov
imul
test
push
bound
jle
push
scas
test
test
jmp
xchg
aam
insl
dec
imul
push
movsl
imul
sbb
popa
inc
and
arpl
push
inc
cmp
mov
data16
pop
push
mov
mov
arpl
mov
arpl
movsb
aas
cmp
mov
imul
dec
push
jge
inc
inc
popl
inc
dec
sahf
in
sub
cli
incl
add
jae
dec
gs
mov
addr16
pop
add
adc
push
addl
sbb
outsl
xchg
movsl
insl
mov
cmp
pop
cmp
arpl
mov
sti
mov
xor
mov
bound
sub
cltd
mov
fwait
imul
add
adc
mov
jnp
add
outsb
add
pop
into
ret
in
shrl
mov
ds
add
lret
dec
inc
movsl
movl
push
add
pop
cmp
mov
xchg
sti
leave
rolb
negb
fcmovne
add
cmp
test
add
push
dec
mov
dec
arpl
lcall
roll
adc
cmpsb
xchg
add
test
push
mov
xchg
add
nop
mov
fidivrs
cmpsb
lahf
decb
mov
insl
add
dec
imul
jle
push
jl
outsb
dec
xchg
inc
xchg
pusha
je
mov
js
cmp
ret
pop
outsl
ds
push
fs
add
add
push
imul
add
mov
jl
cli
mov
imul
enter
jbe
mov
xchg
pop
je
daa
stos
ljmp
pop
imul
enter
js
pop
jnp
lcall
cli
add
push
jb
sahf
outsb
push
movsb
sahf
pop
outsl
sarb
jmp
adc
arpl
add
roll
add
popf
imul
dec
gs
mov
addr16
xchg
pushl
inc
dec
sub
cmp
fistpll
gs
cmp
inc
mov
gs
mov
arpl
xchg
arpl
cmp
add
cmp
shlb
pop
je
xchg
arpl
cmp
add
mov
pop
imul
add
incl
mov
inc
rol
call
incb
push
mov
jb
ja
push
sub
dec
mov
or
call
xchg
inc
jge
mov
sti
dec
add
push
push
sbb
outsb
inc
cmp
add
outsl
dec
notl
incl
add
mov
cld
scas
pusha
std
std
xchg
decl
ds
xchg
push
mov
repz
icebp
pop
jns
int3
push
jne
les
test
insl
jmp
test
enter
les
lds
pop
add
inc
movb
cmp
addr16
adc
movsl
xchg
push
aas
jecxz
add
add
pusha
or
test
dec
sbb
sbb
cmpsb
movsb
aas
push
mov
xchg
repz
shlb
loop
add
test
je
xchg
add
mov
pop
mov
mov
aas
mov
vsqrtss
jnp
xchg
sub
push
imul
cli
jne
jnp
dec
in
pop
arpl
add
add
xlat
std
sbb
andb
push
imul
cmpsb
jmp
pop
dec
sub
test
sti
test
push
jmp
adcb
xchg
push
imul
pop
outsl
jmp
leave
popf
pusha
push
je
pop
outsl
lret
outsl
outsb
add
lcall
push
gs
dec
mov
sti
lcall
cmpsl
dec
add
add
scas
pop
addr16
cli
pushl
std
jae
into
mov
cli
call
dec
gs
imul
imul
inc
aas
gs
pop
jo
lods
insb
gs
and
add
push
mov
stos
gs
aas
mov
and
mov
insb
add
xchg
and
mov
call
lods
lahf
push
and
add
mov
xchg
insl
rcl
dec
es
bound
cwtl
lcall
aad
pop
and
jnp
outsb
test
inc
and
add
jl
xchg
dec
xchg
or
popa
gs
jns
adc
jae
sub
pop
push
fdivr
cmp
add
outsl
aas
int3
mov
enter
enter
aad
or
mov
fwait
add
movsl
lcall
loopne
xor
xchg
xlat
push
mov
add
dec
mov
rorb
mov
sahf
inc
and
xchg
add
cmp
sub
jp
dec
mov
adcb
add
add
movsl
add
dec
push
add
lcall
add
mov
push
cli
adc
add
mov
push
inc
jmp
les
rcrb
push
mov
cli
int
outsb
imul
scas
push
push
daa
and
mov
cwtl
dec
inc
push
lcall
xchg
push
jo
ret
jne
inc
mov
aam
sub
fwait
pop
arpl
cli
insb
daa
jl
adc
mov
sar
mov
pop
outsl
sub
add
fwait
outsb
lea
add
mov
data16
mov
push
jmp
outsb
mov
add
movsl
stos
arpl
mov
mov
cli
call
cmp
mov
cmp
imul
test
ljmp
aas
gs
mov
xor
jne
scas
cli
jmp
incl
sub
jae
lret
ret
jecxz
inc
inc
lret
inc
in
dec
inc
repz
push
and
add
sbb
cmpsb
popf
insl
add
test
push
and
add
data16
mov
cltd
imul
stos
std
inc
leave
inc
mov
lret
jae
push
fs
imul
imul
add
push
xchg
dec
js
cltd
inc
jbe
cltd
dec
cmpl
xchg
ja
pop
add
push
and
add
add
inc
push
mov
pop
or
aaa
and
add
aas
stos
mov
sbb
mov
add
inc
xchg
mov
or
mov
mov
and
scas
push
mov
jns
int3
sub
xchg
mov
jp
mov
inc
xor
mov
jmp
mov
add
add
add
mov
outsl
jmp
lds
inc
ja
sub
stc
sub
gs
out
popa
cli
xchg
or
fwait
adc
add
ja
outsb
les
add
ret
int
xor
xor
pushf
mov
dec
cli
push
addr16
xchg
mov
imul
xor
mov
dec
test
add
xchg
outsb
subb
outsb
push
nop
xor
aam
dec
dec
lds
outsb
inc
mov
inc
add
pop
jb
shrl
aas
ljmp
or
arpl
shll
xor
push
add
fldt
sub
jae
and
ja
sub
pop
jb
shrb
jg
pop
arpl
jae
mov
fisttpll
jb
arpl
add
mov
inc
jl
mov
arpl
fisttpll
rcr
arpl
subb
fsubrl
inc
cmp
fstpl
iret
fistpl
push
jge
push
es
bound
mov
xchg
add
dec
mov
xchg
dec
mov
lods
call
cmp
scas
je
mov
xchg
inc
add
add
stos
ljmp
test
inc
or
xchg
push
add
test
adcb
rcl
xchg
inc
fdivr
imul
imul
into
lcall
cmp
and
bound
subb
jb
xor
lea
jmp
imul
add
and
add
imul
or
inc
sub
push
bound
dec
ds
pop
add
ds
or
enter
lret
and
jnp
ds
add
mov
aaa
lods
jnp
ds
jo
xor
mov
popa
pop
add
add
sub
fisubrs
push
jo
xchg
movd
and
cmp
dec
jbe
add
and
fs
pop
sbb
dec
daa
imul
xor
daa
lock
xor
jo
push
sub
push
and
push
jmp
pop
and
popf
movaps
add
imul
and
xchg
and
fs
cli
daa
fs
add
add
sbb
imul
sub
outsb
mov
push
add
sub
push
sub
popa
je
data16
dec
gs
push
insb
aaa
gs
pusha
xor
js
inc
ret
add
xor
xor
gs
and
gs
sub
je
mov
dec
outsb
and
imul
and
jg
je
add
add
and
outsl
and
add
repz
dec
gs
arpl
add
scas
xor
and
outsl
outsb
loopne
arpl
add
xor
ror
dec
rol
outsb
lea
ja
mov
jno
and
decb
jns
jne
push
jb
jb
jo
mov
push
popa
js
arpl
adc
je
addr16
arpl
add
push
inc
dec
popa
aaa
dec
add
es
arpl
gs
aas
js
call
outsb
je
xchg
push
popa
pop
cli
mov
in
jns
icebp
inc
gs
je
in
fstpl
int3
ds
addr16
ja
daa
jle
into
push
ja
mov
lea
and
scas
cmp
xchg
dec
js
and
mov
push
push
and
mov
inc
xor
jo
dec
jae
sti
inc
js
aas
sub
add
dec
or
addr16
and
add
daa
pop
imul
add
arpl
ds
add
pop
aad
fnsave
mov
add
ds
fs
scas
clc
and
enter
daa
mov
mov
sti
ja
add
add
sub
ret
jmp
mov
push
inc
ja
popa
dec
jge
push
jmp
subl
imul
jne
dec
dec
es
or
push
jmp
inc
sub
push
xor
cmp
dec
stc
dec
push
gs
push
aas
add
sub
je
out
jo
loopne
add
sub
mov
incl
add
enter
scas
adc
or
add
push
data16
and
test
mov
xor
movsb
and
inc
push
add
je
push
cs
imul
jns
or
and
daa
fs
insb
push
arpl
and
sbb
scas
add
add
sbb
insb
jne
or
dec
cmp
cltd
sub
je
dec
outsl
bound
add
add
fldenv
add
popa
inc
or
add
decb
jmp
pusha
imul
cwtl
decb
leave
inc
rol
js
mov
insb
push
and
decl
adc
or
ja
arpl
cmpsb
sbb
add
addr16
add
add
push
outsb
imul
dec
dec
pop
addr16
dec
or
insb
and
std
dec
cmp
jo
jmp
aas
frstor
ds
push
stos
data16
cld
mov
push
add
aas
jmp
and
outsb
lds
push
mov
or
add
push
lods
dec
loopne
mov
shlb
add
aas
mov
nop
or
popa
addb
imul
sub
aaa
inc
popa
inc
push
and
es
and
jo
and
popa
and
push
add
and
popa
cmp
imull
cmp
sub
push
add
jb
mov
daa
push
adc
popa
mov
daa
inc
add
in
imul
add
add
and
cmpsl
mov
insl
scas
aam
inc
mov
mov
push
mov
popa
push
subl
jne
xchg
sub
daa
jne
sub
push
je
popa
inc
push
sub
daa
jbe
sub
or
push
sub
push
sub
cmp
add
sbb
xor
fs
sub
imul
jp
gs
add
add
sbb
sar
ljmp
cmp
sbb
and
jo
and
mov
cmp
je
mov
daa
add
mov
dec
gs
sbb
pop
das
add
jecxz
inc
imul
bound
das
add
xor
fs
imul
add
sahf
cmp
adc
add
and
inc
add
add
mov
imul
inc
outsb
add
add
cmp
jle
gs
outsb
outsl
and
add
idivb
je
in
insl
aam
push
leave
pop
ds
movsl
inc
and
out
inc
imul
sub
pop
fs
xchg
imul
add
add
xor
insb
and
add
ja
push
gs
cli
add
push
push
add
bound
popa
add
or
inc
sbb
imul
test
push
sbb
outsl
repz
pop
fldt
jmp
push
in
les
sbb
outsl
ret
pusha
idivl
roll
xlat
or
add
add
lcall
and
add
dec
jns
dec
jb
add
adc
andb
inc
aas
es
push
xor
sub
inc
outsb
sbb
adc
je
cli
sbb
cld
push
xor
inc
aas
add
sub
sti
or
outsl
add
js
sti
and
adc
outsb
int3
ljmp
mov
add
add
insl
insb
into
and
ret
jmp
les
movsb
leave
xor
les
adc
pop
mov
jae
xchg
and
les
outsb
gs
xchg
add
mov
pop
dec
je
aas
inc
jbe
imul
sbb
cmp
das
gs
inc
push
add
xor
sbb
gs
adc
push
inc
js
add
lea
add
jns
cltd
push
data16
and
outsb
sbb
add
mov
jo
imul
dec
gs
dec
gs
cs
ja
cmp
sbb
gs
sti
gs
add
add
dec
je
xor
and
pusha
dec
mov
imul
cmp
xchg
xchg
add
add
bound
bound
imul
inc
popa
xor
aas
jb
aas
push
add
add
stos
pop
outsb
add
dec
add
inc
or
lcall
fs
pop
popa
rcr
insb
leave
xchg
pop
and
push
mov
pop
push
out
jno
ret
rcll
push
xchg
in
add
add
aas
dec
jno
call
jo
das
sbb
pop
pop
push
xor
adc
add
and
dec
xor
pop
xor
cli
push
xor
and
adc
in
xor
jae
sbb
push
add
fcompl
xor
outsl
clc
cs
and
jo
std
call
outsl
add
add
lods
gs
mov
xchg
outsl
xlat
jle,pt
fstpl
outsl
pop
sbb
xchg
insb
dec
sub
add
xchg
gs
xchg
sub
xor
daa
pop
inc
xor
inc
and
cmp
dec
adc
imul
std
inc
and
jmp
clc
imul
or
outsb
enter
or
push
fcmovnu
mov
idiv
arpl
stc
and
int3
sbb
pop
fs
rcrl
inc
jmp
lds
gs
lds
je
mov
push
int3
cmp
je
sahf
add
push
xor
pop
outsl
xor
add
gs
sbb
je
adc
jne
add
sbb
popa
arpl
add
push
push
add
out
inc
dec
je
xor
xor
gs
push
imul
and
imul
popf
add
gs
es
cld
outsl
je
sbb
inc
cmp
pop
je
lahf
pop
gs
es
iret
cmp
push
xchg
stos
and
pusha
je
and
gs
lds
jae
js
mov
add
add
and
aaa
dec
pop
dec
inc
push
adc
pop
insb
and
inc
inc
gs
pop
das
push
test
insb
push
xchg
cli
and
arpl
arpl
inc
js
adc
popa
add
add
or
jae
or
inc
testb
dec
add
inc
push
jp
dec
jmp
movsb
xor
enter
and
jecxz
out
popf
dec
add
add
sub
mov
xchg
lcall
push
pop
mov
xorb
pop
and
in
and
dec
dec
sbb
sub
and
sbb
pop
xor
xor
add
push
pop
clc
sbb
or
adc
pusha
add
sbb
add
sbb
push
pop
fsubl
adc
add
add
fwait
ds
jbe
or
int3
rorl
mov
daa
fcos
xchg
sub
cmpsb
mov
inc
test
adc
jmp
dec
hlt
sub
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
dec
inc
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
inc
add
int
add
int
add
mov
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
or
add
std
cmp
add
or
add
std
cmp
add
cmp
add
int
add
mov
cmp
add
int
add
mov
cmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
inc
add
int
add
mov
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
inc
add
std
inc
add
inc
add
std
inc
add
std
inc
add
int
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
or
aas
add
std
add
std
add
add
add
add
int
add
mov
add
int
add
int
add
mov
add
lea
add
lea
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
add
dec
add
cmp
add
dec
add
dec
add
cmp
add
or
add
or
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
dec
cmp
add
cmp
add
inc
add
std
inc
add
std
inc
add
or
add
or
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
mov
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
test
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
add
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
jge
add
jge
add
dec
aas
add
dec
aas
add
cmp
aas
add
dec
aas
add
dec
aas
add
cmp
aas
add
or
aas
add
add
std
add
or
aas
add
std
add
std
add
int
add
int
add
mov
add
int
add
int
add
mov
add
lea
add
lea
add
jge
add
jge
add
and
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
jmp
add
jmp
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
mov
cmp
add
cmp
add
add
lea
add
lea
add
jge
add
jge
add
dec
cmp
add
add
cmp
cmp
add
add
dec
cmp
add
add
cmp
inc
add
or
inc
add
std
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jmp
add
jmp
add
add
and
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
int
add
mov
aas
add
int
add
int
add
mov
aas
add
lea
add
lea
add
jge
add
jge
add
lea
add
lea
add
jge
add
jge
add
dec
aas
add
dec
aas
add
cmp
aas
add
add
dec
aas
add
cmp
aas
add
or
aas
add
std
add
std
add
or
aas
add
and
or
call
cmpsl
cmp
and
add
jns
cmp
push
mov
aad
mov
sub
jne,pn
sti
cli
push
fs
aas
and
clc
inc
add
add
mov
and
ds
cli
sbb
and
stc
xor
cwtl
xchg
movsb
cs
sbb
cli
cmp
repz
and
mov
in
cs
and
pusha
pop
cmpsb
add
xor
xchg
in
add
cli
push
or
add
push
movsl
pop
add
loop
push
xor
add
add
jb
jmp
rclb
xor
cs
push
rol
mov
mov
cmp
movsl
cmp
out
pop
push
or
outsb
dec
add
outsb
aas
or
jbe
in
jmp
outsb
inc
add
push
jg
mov
imul
rclb
arpl
xor
jns
xor
daa
in
push
fcmovbe
inc
jl
repz
adc
shlb
arpl
ds
sub
ss
cmp
sbb
inc
loop
add
lea
lahf
out
mov
or
in
bound
and
add
imul
and
cmp
xchg
pmulhuw
and
dec
bound
push
mov
arpl
push
pusha
pop
add
push
test
add
add
inc
add
xchg
call
mov
cmp
fidivs
cmp
mov
mov
push
push
push
lahf
jns
lds
inc
call
fdivr
decl
imul
inc
adc
or
xor
add
mov
mov
cmpsb
add
dec
notl
into
jae
je
add
dec
or
cmpl
lock
icebp
ljmp
and
ret
pop
jl
scas
iret
add
fwait
jg
inc
pop
sbbb
inc
pop
repnz
cs
out
cli
push
xchg
les
xor
ret
or
adc
dec
xor
and
adcl
xchg
or
dec
push
add
add
sub
pop
mov
mov
orb
rolb
arpl
testb
cwtl
incb
into
xchg
leave
je
aas
push
stos
adcb
xchg
sbb
or
cmp
push
aaa
outsb
ret
add
adc
fidivrs
sub
outsb
ljmp
add
add
aas
data16
mov
cmp
add
out
aaa
pop
and
push
sub
fstpt
call
add
xor
inc
inc
aaa
and
mov
mov
xchg
adc
adcl
sti
cmp
mov
xlat
jb
xor
repnz
sbb
mov
cli
mov
jno
inc
pop
and
rcl
cli
jb
mov
dec
fstl
mov
fimull
std
mov
add
pop
jmp
push
icebp
push
bound
dec
icebp
or
out
mov
repnz
ljmp
in
daa
aas
subl
cmp
pop
inc
cld
add
add
mov
je
jb
or
cmp
pushl
dec
notl
nop
jnp
enter
cmp
rolb
push
add
add
mov
mov
push
leave
jae
add
repz
xor
pop
or
lea
repz
mov
jg
add
gs
ljmp
add
add
inc
call
test
push
and
sub
andl
sti
sbb
aas
and
mov
jl
adc
shrl
out
adc
daa
mov
aam
flds
sub
mov
sbb
popf
rclb
ficoml
punpckldq
xchg
mov
scas
cmc
push
dec
int
push
adc
adc
add
daa
enter
bnd
es
ret
jle
jns
add
and
mov
xorb
lret
cmp
jge
das
cmpsb
xchg
pop
in
fnstcw
mov
inc
push
data16
ds
jle
pop
in
lods
cmp
add
mov
add
clc
out
push
xchg
test
mov
pop
xor
inc
cmp
subl
ss
mov
jg
add
outsl
pop
in
mov
inc
iretw
into
or
add
inc
ljmp
and
cmp
sarl
sarb
add
sti
aas
sti
xor
fucomip
out
imul
addr16
and
add
test
cwtl
add
daa
out
push
mov
out
jle
jmp
add
daa
sarb
cmp
lahf
mov
out
mov
mov
mov
sbb
add
mov
push
movsb
shlb
xorl
lock
loop
cli
inc
loop
add
push
mov
or
adc
add
out
xor
data16
pop
gs
add
jge
rorl
dec
cmp
clc
sar
add
add
movsl
scas
hlt
jmp
add
push
mov
and
jg
call
mov
jnp
pop
jns
call
cmp
test
pop
push
out
les
idivb
js
push
cmp
cmp
mov
jp
lock
inc
mov
lock
and
lea
xor
dec
and
jns
or
jl
add
add
int
clc
nop
jle
cs
cli
jg
xor
cmc
je
dec
aaa
jns
insb
iret
jno
sbb
push
dec
push
int
cmp
cli
aaa
and
lds
and
jns
lcall
test
xchg
or
arpl
cmpsl
xor
jae
jmp
xor
fildl
inc
push
into
jnp
xchg
mov
sbb
mov
adc
data16
xor
jmp
cli
adc
push
and
ret
inc
xor
push
cmc
flds
das
aas
cmp
mull
lret
aad
adcl
aam
sbb
leave
rclb
xor
das
lods
add
adc
std
in
dec
add
dec
hlt
out
add
add
hlt
scas
jns
inc
imul
rcll
pushf
pop
push
test
jns
int3
xchg
mov
jns
dec
and
call
iret
push
lea
repnz
subb
mov
inc
imul
push
sbb
inc
jmp
test
jl
cli
pop
lret
mov
xorb
and
and
add
clc
xchg
and
xchg
sbb
xchg
jge
cli
test
jle
jg
pop
cli
shrb
js
mov
jno
push
jl
inc
add
xchg
incb
push
add
js
xor
shl
xor
inc
mov
add
jl
orb
xchg
jne
stc
dec
add
shl
add
add
cmp
add
inc
or
xchg
jp
inc
or
or
das
mov
xchg
lea
mov
inc
push
mov
stc
and
or
jns
mov
fldt
sub
aas
jnp
push
arpl
ret
in
cld
jg
jge
jae
jge
xchg
lret
mov
add
add
dec
push
mov
lds
les
dec
xor
jg
addr16
jmp
cmc
mov
addr16
int3
pop
sti
jle
sub
cli
or
jno
push
dec
cmp
fcomps
test
adc
jb
out
test
imul
mov
jae
jge
in
aas
and
add
add
push
mov
cmc
mov
mov
dec
fdivp
jbe
gs
mov
dec
xchg
or
js
aaa
sbbl
out
push
cmpsb
loop
pop
mov
mov
out
stc
pushf
roll
enter
int3
es
ret
cmp
lret
es
stos
inc
sub
lahf
pushf
insl
lds
and
add
add
mov
sub
or
data16
add
add
fisubrl
jecxz
repnz
inc
js
and
mov
test
xor
mov
jne
mov
or
out
push
out
jle
xchg
in
out
mov
dec
lea
xor
mov
sbb
pop
rol
add
add
push
bound
xlat
idivb
fistpll
sbb
add
sahf
mov
mov
ficomps
inc
leave
dec
daa
aas
out
repz
dec
lahf
jmp
hlt
add
adc
test
incl
mov
inc
shl
pushl
push
cli
pusha
test
or
stos
cld
xor
lret
add
add
push
jnp
popa
inc
dec
mov
dec
dec
push
push
lods
jns
dec
leave
ss
aaa
clc
cmp
cmp
mov
dec
jnp
dec
lds
xchg
inc
cmpl
jnp
or
sbb
imul
jbe
add
clc
in
mov
add
repz
or
into
mov
fstpl
add
add
ljmp
mov
mov
jae
xchg
xor
scas
mov
mov
cld
popf
imul
jae
in
or
lods
in
pushl
fnstsw
cld
pop
inc
mov
rorb
insl
inc
or
mov
in
sbb
mov
add
in
addr16
out
jbe
lret
fisubrs
push
mov
ret
lret
adc
add
cld
cld
mov
lods
lds
ret
and
bnd
ret
pop
dec
mov
flds
repz
mov
jb
rcl
in
shrl
jge
and
ljmp
ja
aaa
and
jg
mov
add
pushf
adc
jne
and
ss
idiv
or
pusha
sbb
add
roll
cmpsb
mov
add
jecxz
jb
sbb
inc
inc
loope
ljmp
fwait
xchg
sub
pushf
sub
insb
or
fs
movsb
outsl
ret
sub
add
jo
out
int
cli
gs
cmp
add
inc
call
jp
mov
add
scas
and
cwtl
js
jb
mov
xchg
insb
addr16
pop
mov
jbe
add
mov
ret
aas
ret
xchg
cmc
mov
mov
clc
mov
mov
jns
push
push
pop
xor
push
mov
out
mov
jno
mov
jae
or
mov
orl
inc
or
push
mov
add
add
iret
jmp
sbb
sub
mov
jb
sbb
js
or
mov
sbb
add
cld
testb
mov
test
ret
mov
gs
lea
in
and
push
jg
fiadds
xchg
xor
mov
bound
mov
call
sub
jl
test
add
add
xchg
or
mov
jbe
jl
xor
push
mov
lods
pop
cmp
push
cmpsb
and
and
clc
aas
sbb
or
lock
push
mov
pop
ds
lret
push
jae
lock
jnp
lahf
aaa
sub
call
ljmp
aas
cld
mov
fsubr
repz
add
add
aad
fldenv
fs
aam
mov
fwait
push
mov
xchg
pop
mov
jb
pop
imul
mov
jg
stos
sub
jmp
sbb
xor
sub
loop
mov
es
subb
add
fisttpll
fmulp
jns
mov
add
add
jne
bound
testb
in
jbe
mov
and
sbb
jecxz
sbb
loopne
iret
adc
mov
adc
ljmp
or
out
mov
orl
loope
mov
je
dec
sti
lret
pop
xchg
popa
cmp
xchg
inc
xchg
mov
test
add
add
test
inc
dec
jg
mov
out
dec
cmp
pop
xor
call
xor
cmp
xor
xchg
sbb
pop
ds
mov
popa
lret
rol
push
push
test
jnp
cmovbe
xor
mov
jbe
or
xchg
clc
incl
ror
push
mov
or
xchg
rclb
mov
mov
add
cmc
jo
jne
mov
shll
mov
rsm
dec
pop
mov
arpl
jne
pop
add
in
std
sub
add
ja
lds
movsb
mov
pop
cmpsb
orb
in
rcrl
pop
mov
pop
lods
das
or
xor
in
lea
bound
add
add
lods
sti
inc
or
add
fsub
sti
sub
repz
sub
sti
lds
je
mov
or
je
mov
repz
dec
cmp
and
jno,pn
rolb
sarb
dec
test
adc
lds
ret
jns
jmp
sub
std
testb
add
outsl
insb
aad
push
mov
or
push
insl
aad
and
bnd
sbb
cs
add
sub
mov
dec
sub
das
das
add
ss
sub
sub
mov
mov
bound
outsb
outsb
xor
mov
aaa
scas
pop
popa
insb
popa
repnz
jb
and
add
add
mov
inc
movsl
jl
aad
mov
icebp
dec
xchg
je
cmpsb
jg
push
sub
cld
ret
shlb
adc
shrb
ss
mov
aam
sbb
mov
lods
add
sahf
jg
ja,pt
pop
add
and
outsl
scas
push
je
cmp
mov
inc
lds
cmovg
mov
push
inc
into
jp
mov
stos
cmc
jne
mov
sti
lcall
data16
aas
pop
mov
cmc
jg
rol
mov
dec
call
enter
in
adc
stos
dec
sub
dec
inc
mov
adcb
out
pop
mov
movb
cli
ret
and
mov
mov
and
cwtl
dec
mov
movsb
dec
push
ss
mov
xchg
mov
sub
mov
hlt
xchg
jne
inc
mov
mov
stc
aas
jnp
icebp
pop
jns
stc
pop
mov
jl
scas
cli
arpl
repnz
pusha
add
popa
cmpsb
mov
lahf
and
mov
addl
or
push
loopne
or
jmp
dec
xchg
inc
andl
add
out
mov
popa
adc
aam
test
cld
mov
add
imul
jo
stos
test
dec
stos
pop
xchg
addb
call
xchg
push
xor
mov
imul
je
or
int3
stos
jp
shll
and
jne
pop
add
add
shrb
sarl
add
adc
push
imul
push
cmc
loope
cld
popaw
mov
arpl
mov
add
push
mov
dec
xchg
scas
call
cli
push
sahf
add
pop
es
mov
insb
addr16
adc
insb
jo
cmpsl
out
out
es
push
imul
add
das
test
imul
cmp
sbb
push
idiv
jmp
hlt
idiv
jmp
loopne
cs
mov
push
or
adc
and
xor
push
sti
test
leave
push
imul
testb
cmpsl
pusha
adc
je
mov
and
xor
sub
ret
add
shl
sbb
andl
repnz
stc
ss
test
or
sti
pop
mov
mov
gs
jnp
aas
sarb
enter
pop
jge
mov
addb
ds
addb
push
or
aas
je
cmp
inc
and
xor
mov
lea
or
add
xor
jmp
push
pop
jle
push
mov
xchg
fstl
sub
jnp
out
push
lahf
cmp
xchg
leave
xor
jne
loope
dec
call
cmpsl
sti
lahf
ljmp
adc
push
fldl
daa
cltd
jbe
jo
inc
adc
cwtl
jp
push
filds
dec
loopne
cli
xor
ret
je
sbb
jns
inc
into
mov
add
jp
jne
sub
in
xchg
add
lods
push
adc
and
pop
cmc
shrb
push
jnp
push
adc
cmp
shll
hlt
mov
pop
inc
mov
mov
jge
cmp
or
dec
into
xor
fs
or
or
add
ret
roll
aas
push
xor
sarb
inc
sub
add
in
aaa
loopne
cmpsb
sti
mov
pop
push
jg
sahf
or
or
adc
fwait
or
dec
mov
mov
cld
pushl
inc
insb
daa
mov
popa
clc
jmp
addr16
lea
push
inc
jmp
add
sub
add
scas
and
insl
mov
addr16
xchg
adc
add
add
mov
aaa
call
mov
sti
repz
clc
repz
mov
cmp
inc
mov
xchg
sub
inc
xchg
shrl
daa
sub
dec
add
xchg
cmc
decl
inc
lock
xchg
inc
hlt
mov
cmc
pop
dec
idiv
push
mov
mov
add
mov
adc
push
jnp
adc
xchg
cmc
mov
test
call
aam
sbbb
adc
inc
pop
ret
mov
rcrb
xchg
lcall
pop
fcom
adc
jmp
ljmp
imul
mov
cmpsb
jnp
add
repz
adc
mov
mov
add
add
fstpt
repz
push
xor
int
lods
cli
fistl
test
jmp
enter
sub
sbb
movsl
xor
jbe
jmp
arpl
push
and
cli
cmp
loope
or
push
es
mov
lds
mov
dec
movsl
xchg
mov
add
popf
aas
inc
sbb
mov
pop
cmp
mov
push
mov
ljmp
jmp
jp
addr16
inc
shlb
in
inc
sub
sub
stos
adc
mov
jo
cmp
sub
pop
and
add
mov
scas
sub
aad
outsb
cmp
add
add
xor
fsubrl
xlat
icebp
rol
sub
fidivrs
mov
add
and
push
mov
push
adc
sbb
push
cs
dec
mov
repz
dec
pop
mov
aas
lea
dec
inc
jmp
shrb
mov
insl
inc
add
add
add
jmp
xchg
inc
std
mov
adc
movsb
loopne
out
mov
sub
test
gs
es
sti
add
pusha
cmp
orl
cmc
mov
push
cmc
inc
loope
clc
idiv
pop
movd
jmp
push
dec
pop
pcmpgtw
inc
addb
inc
addb
inc
add
add
clc
cmp
xchg
cmc
mov
cmp
cmpb
pop
xchg
dec
icebp
and
dec
or
aas
pop
inc
jp
cmp
gs
je
and
int
sbb
inc
adc
or
aam
cmp
xchg
cli
sub
aas
aam
and
mov
jge,pn
add
add
fildll
sbb
mov
xor
cli
ja
adc
xchg
fld
cltd
stos
into
mov
xchg
pop
fimull
cmpsb
xchg
add
popf
test
test
push
jg
mov
push
outsb
aad
test
mov
dec
cmpsb
cli
stc
fcoml
ret
jmp
fwait
lcall
aas
scas
jnp
push
outsl
dec
dec
push
jae
dec
pusha
pop
aaa
add
add
mov
cli
mov
fwait
addr16
jge
mov
enter
call
and
sbb
dec
cmp
jge
mov
fbld
mov
fistps
push
mov
clc
pop
mov
fildll
js
fisttps
cmp
add
xchg
cmpsb
sahf
pop
insl
lahf
clc
jnp
cmp
sti
call
add
add
das
mov
add
aas
add
mov
jns
in
mov
add
cmpsl
add
cs
fistps
sub
loop
sbb
insl
pop
push
add
adc
mov
popa
aas
jo,pt
int3
jg
popa
aas
xorl
popf
andb
cli
jmp
mov
movb
inc
pop
daa
add
add
popa
add
fwait
mov
dec
pop
cli
push
jbe
adc
pop
jg
dec
pop
jg
mov
lea
add
mov
mov
inc
sub
inc
inc
cmp
push
cmp
imul
push
xchg
cmpb
add
pop
push
roll
add
test
lods
in
cmc
shrl
enter
mov
movsl
cmc
shrl
enter
call
nop
fsub
cmpl
dec
push
and
add
outsl
cwtl
dec
jmp
pop
mov
add
sub
shll
cli
shll
adc
ja
add
cmp
adc
aas
hlt
xor
lcall
xor
cli
cltd
scas
mov
add
cmp
clc
mov
cli
pop
fisubs
add
jmp
std
xchg
mov
mov
decb
aas
pushf
mov
xor
inc
clc
pop
shrl
add
xor
inc
sub
jne
add
add
xchg
pusha
sar
and
inc
add
sbb
enter
cmp
inc
jnp
jmp
mov
into
in
roll
out
out
add
pop
outsl
imull
and
movsl
out
pop
adc
pop
fstp
and
sti
fwait
test
movsl
add
add
adc
mov
jecxz
add
pop
ds
add
lahf
cmc
mov
sti
dec
sbb
jmp
push
inc
xchg
fisubs
out
inc
fdivl
rorl
lret
in
inc
push
daa
in
fsubrs
sub
mov
cmp
pop
and
pop
pop
ret
add
fstl
sub
push
daa
and
aam
xchg
loope
sbb
test
add
mov
jbe
cmp
inc
add
cwtl
xlat
out
scas
xchg
push
mov
cmp
mov
cld
add
adc
add
jecxz
add
jge
pop
cmp
ljmp
ds
btc
testb
int3
adc
ja
dec
incb
dec
inc
ds
dec
sahf
sbbb
push
decl
jnp
mulb
add
imul
or
mov
or
jno
cmp
inc
push
test
push
mov
ret
faddl
and
lods
push
sahf
add
sar
and
mov
scas
push
jns
fsubl
test
out
push
out
sub
mov
lods
jae
out
into
repnz
test
out
add
daa
mov
add
out
jmp
insl
xorl
leave
out
incb
and
pop
cmp
and
push
cmp
and
push
cmp
and
push
cmp
mov
mov
popa
dec
mov
aas
jmp
test
mov
mov
mov
add
add
orl
mov
cmp
pop
mov
mov
loope
loope
lock
pop
add
cmp
mov
loop,pn
pop
xor
sbb
pop
les
push
addr16
stos
inc
repnz
push
jecxz
mov
cs
test
sti
imulb
sti
jno
adc
sbb
movsb
test
jo
add
arpl
lods
sbb
sahf
xchg
in
test
aas
add
pop
xchg
ds
test
pop
call
daa
repnz
mov
addr16
insb
fnstsw
loope
test
inc
mov
pop
push
cli
jmp
xor
and
or
call
rolb
dec
add
add
ja
dec
push
les
incl
ret
loop
pop
mov
les
jmp
insb
movl
das
xchg
shrl
sbb
push
std
divl
mov
test
add
hlt
add
lock
cld
orl
push
shlb
aas
dec
ret
sahf
test
add
jecxz
iret
shl
shl
dec
dec
idivl
cltd
mov
push
cli
mov
fisubrl
or
test
and
jnp
cs
clc
sub
xor
xchg
les
and
ret
jae
inc
sbb
popf
ja
inc
xchg
xchg
cmp
data16
push
aaa
fnsave
dec
adc
movsb
shl
mov
or
add
add
push
data16
pop
sub
and
cltd
cmp
movsl
xor
fdivrs
or
sub
nop
cmp
outsb
idivl
inc
ret
insb
inc
sub
pop
add
add
or
xchg
and
adc
xchg
into
out
xchg
push
test
sub
push
xchg
pop
lds
xchg
cs
iret
popf
in
lock
shlb
sbb
adc
add
jbe
and
repz
loop
test
enter
push
call
mov
push
test
shlb
xchg
xor
inc
fwait
jb
push
sub
inc
jae
xor
xchg
in
pop
sub
jle
icebp
hlt
jns
outsb
inc
adc
add
pop
aam
in
aam
mov
fdivrs
and
and
jo
add
adc
mov
movsb
pop
daa
cs
push
sub
push
aam
jmp
es
add
sbb
lea
cli
push
lahf
and
mov
push
aas
add
addr16
out
cmp
loope
inc
in
push
mov
lock
dec
stc
rolb
stc
rclb
add
add
add
jle
push
push
push
lea
mov
push
and
inc
scas
pop
iret
inc
scas
fwait
jne
cmp
inc
jb
pop
and
pushl
mov
ds
mov
cmp
and
outsl
ss
mov
cmp
push
push
jg
and
add
push
in
xchg
pop
insl
pushl
adc
sti
shlb
and
adc
cmp
fstl
jbe
xor
in
in
repz
adc
in
in
xchg
xchg
add
adc
push
sub
test
loopne
call
mull
aaa
inc
pop
mov
mov
mov
lret
divb
sub
rorl
xor
add
add
ljmp
push
pusha
push
pcmpgtw
pop
push
jo
dec
and
outsb
or
pop
lock
push
inc
fwait
sbb
add
and
push
fwait
cmp
or
xlat
ffree
push
dec
out
sahf
mov
in
loopne
sti
inc
push
cmp
mov
mov
dec
inc
ficoml
inc
jo
rolb
das
jle
or
push
fsts
add
push
inc
repnz
arpl
mov
xchg
les
inc
and
cmp
mov
push
imul
sbb
insl
bound
dec
shlb
add
daa
aas
mov
cli
jmp
mov
stc
inc
push
clc
jb
xchg
push
jmp
das
in
xchg
call
aad
leave
daa
das
aad
call
fxch
add
add
and
mov
pop
pop
jo
push
xchg
stos
xor
sub
pop
push
cltd
adc
cli
jae
push
jmp
xchg
adc
bound
mov
add
push
add
mov
jnp
mov
mov
mov
call
sub
or
inc
add
add
fwait
adc
stc
aad
ds
inc
sbbl
shlb
push
xor
jae
or
in
ficoms
push
popf
in
cmp
inc
adc
push
cmp
inc
shr
jae
mov
push
hlt
and
je
add
mov
aad
mov
rorb
out
add
add
cwtl
push
pop
sub
pushf
fsubl
inc
add
push
int
rcrl
aas
and
cmp
inc
mov
xor
sarl
clc
aaa
daa
hlt
mov
in
fistps
lock
test
adc
xchg
cmpsb
pop
pop
mov
adc
sarl
clc
in
cld
adc
test
pushf
cs
cmp
add
add
push
test
sub
das
mov
stos
xor
and
pop
lods
mov
cmp
std
sti
adc
test
call
mov
push
call
sbb
adc
lock
lret
xorb
stos
and
repz
testl
mov
ficoml
aas
pop
sbb
jle
sti
add
add
sub
xor
pushf
cli
sub
fs
idivb
dec
jmp
sbb
or
cli
push
sahf
jmp
sub
pop
pop
lret
cmp
adc
jbe
popf
xchg
pop
or
jb
jg
add
popf
xor
add
sub
cli
rep
push
sti
addr16
xchg
xor
add
jle
stc
add
xchg
jp
xor
pop
adc
inc
jmp
lea
das
and
daa
aad
push
sbb
fdivs
fs
mov
or
test
add
inc
mov
mov
jle
fwait
pop
addr16
decl
jne
ss
xchg
jno
add
add
push
dec
sbb
push
addr16
pop
aas
add
mov
sub
pusha
lret
ss
xchg
pop
pushl
icebp
fsts
cmp
pop
lret
inc
sub
push
ss
mov
insl
cmp
ss
sub
jge
adc
ss
push
xchg
test
push
inc
cwtl
inc
xchg
in
lahf
add
add
ss
push
mov
xchg
dec
fcmove
xor
jno
add
push
shr
mul
xrelease
insl
repz
hlt
pop
pop
lods
insb
aaa
inc
add
push
pop
lea
add
mov
cs
fdivrl
clc
in
sti
push
hlt
pop
pop
lea
add
sar
mov
outsb
cmp
cmp
jbe
mov
add
add
sub
adc
outsb
cmp
pop
sbb
pop
test
sahf
cmp
push
jbe
pop
test
cmp
loopne
imul
jne
pop
sub
mov
out
cmp
jnp
sub
or
lock
dec
insl
sbb
jle
repz
outsl
fstps
add
test
jle
jmp
xchg
nopl
loopne
pop
sbb
ljmp
out
and
mov
ja
lock
roll
pop
out
sbb
dec
cli
jmp
mov
cli
jmp
xchg
pop
icebp
roll
xchg
pop
or
jb
jg
icebp
inc
jo
adc
and
pop
mov
add
add
pusha
pop
cli
fldt
xchg
xor
sub
rcrb
roll
leave
jnp
jl
or
xor
imul
cmp
sbb
inc
lret
out
sub
sbb
inc
jge
aam
adc
popa
cmp
testb
les
or
push
and
add
add
dec
mov
mov
mov
sbb
adc
inc
or
push
mov
mov
xchg
call
sbb
sbb
inc
and
jnp
mov
fidivrl
and
xor
pop
pop
cld
push
mov
lret
jle
add
inc
aad
mov
loope
hlt
inc
sub
cmp
add
and
mov
xchg
popf
cmova
jl
mov
jns
cmp
daa
and
push
jnp
gs
adc
daa
sub
push
jne
sub
xchg
cmp
jnp
adc
xor
popf
add
rorb
fst
in
hlt
or
clc
mov
adc
jo
sbb
add
es
add
add
mov
adc
inc
and
stos
mov
les
add
call
jo
sbb
les
iret
mov
rolb
mov
mov
cwtl
out
inc
and
inc
cld
cli
movl
adc
mov
fsub
repz
add
and
loope
add
push
dec
cs
sub
fcmovb
adcl
aas
xchg
fwait
and
push
lret
addr16
jg
adc
jmp
push
dec
or
cli
inc
push
ret
sti
sub
pop
mov
jb
jg
icebp
inc
insb
cs
jmp
test
addr16
pop
mov
out
xchg
inc
insb
cs
add
add
mov
rol
mov
add
lds
cs
mov
mov
cmc
push
sub
adc
inc
int
fadd
cmpsb
push
sub
adc
inc
int
aam
xchg
insl
ss
adc
xchg
sub
and
cs
xchg
jnp
cmp
add
repz
sbb
push
outsl
mov
xor
add
lea
sbb
cwtl
mov
sbb
decl
movb
pop
sti
pushl
sbb
push
es
add
cltd
je
jmp
pop
xor
add
pushf
dec
jbe
add
test
adc
gs
xchg
enter
xor
aas
and
test
popl
mov
add
mov
pop
mov
pop
sub
cwtl
pop
inc
xor
mov
mov
aas
and
movsl
pop
pop
and
cmpsb
or
push
mov
cs
ja
sub
adc
gs
into
in
mov
inc
call
xchg
in
fsub
adc
jae
push
pop
sub
dec
cmpsl
mov
lret
stos
mov
add
add
call
cld
in
lock
xor
outsl
pop
pop
sub
dec
adc
sti
lods
lret
inc
jg
inc
daa
lcall
mov
lahf
sbb
jae
rcrl
test
dec
jg
cld
stos
fs
lahf
and
and
jne
mov
mov
xchg
pop
rcrl
xchg
inc
add
add
mov
add
loopne
pop
notb
push
or
mov
mov
bswap
mov
mov
nopl
call
mov
pop
lret
mov
lcall
inc
jmp
fdivs
inc
jmp
adc
cli
sbb
mov
xor
sub
cmp
bound
pop
sldt
add
mov
sti
mov
rcl
es
orb
push
add
adc
or
rcl
sbbb
xlat
mov
mov
or
mov
or
mov
or
ja
loope
jl
or
cmpsl
push
sbbb
inc
push
adc
sti
push
pop
test
add
add
add
jnp
test
dec
mov
das
test
stc
je
cmp
or
dec
xchg
and
push
xchg
xchg
inc
push
mov
and
data16
jno
add
pushf
or
cmc
mov
mov
loopne
stos
mov
rcl
xchg
lcall
or
sbb
add
add
mov
cmpsl
insl
in
dec
adc
das
fs
sub
data16
push
scas
mov
cmp
jmp
outsb
mov
cmpsb
fs
mov
adc
cs
mov
cmp
hlt
xchg
les
adc
adc
add
cs
int3
lea
add
add
lret
and
jae
in
pusha
pop
insl
jns
cmp
xchg
pop
xchg
xchg
dec
or
xor
daa
add
sub
daa
inc
addl
fiadds
add
outsb
cwtl
movsb
sub
fldenv
inc
add
stos
cmp
cli
jmp
pusha
dec
test
sbb
add
mov
xor
dec
cmpl
sahf
xchg
jle
or
adc
dec
cmp
outsb
cmp
jmp
sub
jmp
ss
insb
fs
push
jbe
inc
stc
aam
push
inc
jmp
lcall
mov
mul
test
cmpb
adc
incl
add
mov
das
cmp
mov
mov
add
mov
or
aas
dec
fstpt
addl
xor
push
ja
dec
mov
lock
call
decl
push
mov
clc
sbb
ret
xor
jl
mov
movl
lock
and
mov
inc
jnp
xor
sbb
cli
sahf
ljmp
cli
add
xchg
cmpsb
cwtl
and
push
scas
mov
jp
and
xchg
inc
add
jmp
ss
push
push
sub
and
fsubrs
jae
enter
popf
stos
xchg
cld
add
add
rcl
enter
jecxz
roll
lahf
jb
mov
ds
xor
dec
in
and
fs
cmpb
xor
push
inc
push
sbb
sbb
dec
insb
lcall
mov
sbb
test
insb
cmpsl
cmp
xor
cmp
add
aad
adc
dec
arpl
sbb
call
les
lret
push
jl
add
enter
mov
clc
jecxz
and
push
ljmp
cmp
into
mov
mov
add
repz
cwtl
ret
add
cmpsl
push
mov
cmp
adc
call
fsubl
pop
outsb
bnd
sub
xor
push
rolb
push
add
add
ret
movsl
xor
lea
dec
bound
mov
rcrb
out
ret
mov
mov
jmp
in
xor
push
sahf
int3
inc
stc
mov
cmpsb
xor
mov
dec
jns
orl
add
inc
sub
mov
pop
sub
add
mov
lea
or
or
aaa
add
adc
stc
test
das
cmp
enter
mov
sarl
sbb
add
cmc
jne
mov
stc
test
push
iret
lcall
dec
cmc
adc
push
test
and
or
push
jno
jae
xor
push
dec
add
and
adcl
xchg
cmp
adc
fsub
cli
mov
fisubrl
inc
and
inc
pop
cli
arpl
stc
lods
jo
cmp
fcoms
push
xlat
and
or
out
xchg
dec
cli
pop
cmp
xor
jp
ret
sub
incl
xor
adc
adc
xor
imul
adc
aas
cmc
ret
lret
mov
xchg
push
nop
push
daa
add
and
faddl
in
stc
leave
addl
mov
and
addr16
sbb
daa
divb
test
out
dec
ss
rcrl
jg
xchg
sub
mov
and
or
add
add
and
and
pop
inc
out
and
cmc
pushl
jg
mov
xchg
je
add
add
sub
xchg
sbb
insb
pusha
stos
pop
sub
je
sub
mov
daa
mov
jb
fwait
adc
pop
fs
push
fwait
pop
ds
cmp
jae
add
add
dec
hlt
clc
addr16
pop
bound
push
add
or
push
lahf
sub
mov
xchg
data16
mov
xor
or
adc
cmp
addb
subl
or
or
inc
int
mov
cmp
pusha
add
sahf
cmp
add
inc
add
add
add
mov
lcall
adcl
mov
inc
clc
lods
add
jno
cmp
or
mov
cmp
dec
inc
add
adc
sub
mov
jl
adc
ss
je
mov
sti
jae
and
shl
xchg
psraw
dec
add
add
push
adcb
jge
lods
mov
cmp
push
lods
adc
data16
adc
xchg
aas
jno
sbb
jl
imul
pmulhuw
mov
adc
push
add
add
and
decl
jno
mov
clc
xor
sbb
inc
and
inc
mov
xchg
mov
add
add
ret
shlb
lret
add
ret
jecxz
aad
sub
xchg
lret
daa
add
xor
jecxz
jg
xchg
testl
fldt
orb
call
inc
rol
inc
cmpb
xor
cmp
lods
test
cmp
fucomi
out
xchg
aad
jl
rorl
xor
ds
add
mov
xor
imulb
stos
out
push
and
or
adc
cli
jmp
inc
jmp
sbb
pop
in
push
cmpsb
mov
call
sbbb
je
fwait
push
sti
xchg
pop
stos
in
jbe
mov
das
sub
mov
inc
push
pusha
repnz
add
add
aaa
mov
push
cmp
mov
add
mov
dec
stc
pushf
sub
je
aas
stc
xchg
add
cmp
call
jle
or
inc
xor
addl
das
push
call
ljmp
rcrl
push
mov
in
dec
cwtl
popa
push
into
xchg
popa
fdivs
cld
stc
xchg
add
dec
mov
adc
add
jmp
ret
add
outsb
pusha
adc
mov
iret
push
sbb
ljmp
cwtl
xor
dec
mov
add
adc
and
decb
stos
add
mov
js
test
jb
gs
js
inc
fcoml
add
add
ja
pop
adc
lahf
in
jmp
mov
aam
jmp
test
sbb
inc
es
incl
sbb
dec
xlat
hlt
into
dec
imul
sti
cmp
push
inc
and
inc
jae
imul
or
push
das
xchg
push
cs
inc
aas
je
push
imul
add
add
das
popf
addr16
mov
js
mov
cmp
mov
rcr
faddl
loopne
jns
rcl
or
cmp
push
push
stos
out
das
xchg
arpl
adc
xchg
js
add
insb
aaa
cs
adc
shll
add
push
fsubl
cs
sub
stc
sbb
fstl
outsl
mov
imul
js
mov
mov
add
add
icebp
sub
in
pop
sub
aas
test
fwait
cmp
jmp
imull
shlb
sarb
stc
push
adc
jmpw
sbb
aad
in
pop
in
push
push
and
je
pop
mov
mov
inc
jmpw
in
clc
out
test
adc
movb
sub
test
je
in
push
add
add
std
call
movsl
sub
push
repz
aam
sub
jns
inc
add
mov
dec
push
gs
add
cmpsb
idiv
and
sarb
xchg
cmp
test
idiv
cmp
inc
test
dec
aas
mov
out
sub
xchg
jle
cmp
add
mov
add
xorb
inc
mov
inc
test
xchg
lods
in
jge
mov
sbb
mov
push
rorb
adc
std
mov
jb
sbb
rolb
aad
aas
and
gs
inc
gs
push
and
decb
inc
lock
mov
xor
std
sti
mov
add
add
or
adc
and
push
mov
hlt
aam
inc
xchg
jge
jmp
mov
scas
aam
out
fnsave
std
pop
sarl
lods
repnz
cld
sbb
jmp
jns
jns
bound
xchg
xlat
mov
aas
push
dec
cmpsl
add
imul
ret
roll
mov
push
sub
xor
add
mov
mov
mov
sub
je
jo
scas
add
add
repnz
je
les
add
mov
and
add
mov
daa
aas
ss
sub
inc
adc
mov
xor
cltd
jo
loopne
push
stc
cld
push
push
inc
jmp
add
add
push
sbb
mov
inc
stos
daa
stc
jg
jg
jmp
and
push
inc
jge
inc
cltd
fidivs
loopne
jne
aas
es
dec
jp
aam
push
inc
jmp
jmp
push
inc
jmp
push
add
push
push
sbb
mov
jp
and
jp
cld
push
mov
cmpsb
add
add
add
pushl
adc
or
push
sbb
adcl
or
ss
jne
lods
iret
pop
xchg
push
add
push
sub
sahf
add
push
adc
stc
push
mov
push
rcrb
push
lods
je
je
idiv
mov
cmp
loopne
stc
ljmp
add
insl
and
push
push
dec
in
push
addr16
push
mov
sub
jmp
cld
mov
int
shlb
fmulp
pop
inc
add
jns
xlat
lods
rclb
cmpsl
jne
push
sti
into
std
repnz
ja
mov
ljmp
and
enter
sub
cwtl
adc
das
adc
add
aas
add
add
or
push
aad
xor
push
jl
repz
and
repnz
pop
rorl
ret
push
jge
out
clc
popa
pushl
cmpsl
xor
xor
dec
xchg
pop
aas
xor
push
xor
mov
fnstcw
addr16
in
fs
mull
loopne
mov
call
aas
out
divl
jmp
add
add
out
adc
aam
xor
daa
clc
push
mov
bts
out
stos
in
and
das
add
aas
je
stos
cli
push
es
sbb
xor
xchg
int
add
add
mov
fldenv
aas
add
pop
es
mov
and
rcrl
clc
push
add
xchg
ss
aam
xor
jmp
add
add
add
daa
lods
aas
je
es
daa
mov
push
in
jp
jmp
xor
stc
ds
out
add
sub
xor
mov
push
stc
pushf
pop
sub
addr16
push
sub
jge
es
aas
jae,pn
jnp
clc
ror
idiv
push
lcall
fcomip
mov
inc
shll
sub
add
add
ss
jmp
ds
ret
add
ret
cs
sub
push
add
lea
add
or
push
add
push
mov
push
inc
add
xchg
jp
add
jle
dec
inc
add
adc
mov
insl
jne
push
out
cmp
dec
je
sahf
xchg
je
repnz
loopne
mov
add
cld
inc
add
mov
fdivr
and
cli
push
out
je
in
cmp
push
add
in
and
notl
clc
notl
add
push
in
mov
insb
icebp
enter
add
mov
repz
rorl
push
dec
add
push
in
inc
inc
cmp
imul
int3
sub
cli
add
add
stos
cmovo
sar
cltd
push
imul
cmp
js
sti
int3
enter
push
lahf
roll
das
nop
cmp
and
xchg
aas
mov
fs
pop
testl
cmpsl
outsl
call
pop
xchg
mov
jnp
and
sbb
orb
outsl
addl
cmp
add
and
cld
movsl
daa
call
jae
cmp
inc
add
aas
addr16
sub
jp
insb
xchg
cmp
dec
mov
xor
ret
add
and
add
stos
testb
daa
sbb
out
orl
and
adc
loop
ret
sub
aas
je
movsb
jae
call
cmpsl
mov
stc
jmp
add
add
aas
orb
jae
movsb
fwait
clc
jg
stos
in
bound
cli
hlt
pop
mov
negb
mov
pusha
pop
bound
push
inc
cmp
cli
mov
es
shrb
es
mov
sub
call
mov
divl
or
idiv
es
jne
mov
jns
cli
xchg
dec
mov
add
add
inc
add
add
test
add
or
out
mov
cmp
fwait
push
mov
xor
and
idiv
inc
xchg
addl
cmp
cli
xchg
divb
adcb
ljmp
int3
cli
xchg
addl
push
leave
dec
and
push
xchg
xchg
decl
out
lret
add
add
and
int3
push
std
mov
sub
mov
add
shll
fimuls
cmp
mov
aam
mov
inc
cmpsb
cli
daa
push
decb
dec
push
cli
mov
and
icebp
mov
bound
sub
xor
mov
cmpsl
pop
out
imul
add
add
insl
data16
pop
mov
into
in
sti
mov
mov
jno
cltd
sub
out
cmp
popa
rcl
xchg
pop
outsl
pop
in
daa
add
jns
inc
pusha
add
out
mov
out
xchg
imull
fwait
pop
lock
mov
ja
repz
jg
mov
outsb
pop
insb
inc
divl
push
stos
pxor
aad
dec
pop
push
imul
xor
pop
out
mov
hlt
pop
dec
inc
jmp
inc
sbb
pop
sbb
insb
pusha
xchg
xor
and
adc
test
cli
pusha
test
jg
out
pusha
xchg
pop
aas
icebp
movsb
push
into
shll
push
popf
clc
call
add
add
dec
rcrl
cmpsb
push
lcall
ljmp
cmp
jg
pop
xor
dec
jle
bound
pusha
sbb
sbb
insb
out
xor
push
xchg
sub
test
addr16
pop
lret
sbb
mov
fcomi
divb
cmc
je
dec
cmc
xlat
mov
mov
jb
cmpsl
divb
add
add
inc
push
mov
repz
push
inc
push
nop
adc
sbb
je
jb
add
mov
movsb
adc
mov
cli
xorb
jnp
dec
jnp
leave
repnz
sbb
mov
daa
inc
dec
push
ret
js
not
and
insb
add
bswap
out
push
popa
cli
mull
push
in
push
add
pop
xchg
rolb
push
pop
jge
xor
mov
jbe
mov
mov
ja
jl
lret
push
jnp
int3
mov
in
lods
cmp
push
dec
adc
push
xor
add
jmp
add
icebp
sbb
ds
cltd
fdivrl
gs
bound
add
add
sti
sbbb
idivl
inc
call
jmp
enter
dec
les
inc
out
ret
jnp
lret
in
mov
jae
add
out
insl
xchg
pop
xor
lods
jl
jnp
ja
dec
daa
add
mov
and
outsb
cmp
add
add
inc
pop
add
daa
in
outsb
sbb
pusha
mov
aas
sub
aas
add
add
push
mov
and
xor
sbb
inc
mov
cli
cs
jo
jo
jbe
cmp
mov
aaa
scas
mov
test
aas
add
loope
or
sbb
jmp
push
icebp
add
daa
pop
pop
xor
add
mov
aas
xor
jmp
iret
sbb
jmp
push
orb
cmpsb
sbb
jmp
daa
inc
add
jge
cld
push
pop
pop
push
sub
or
ds
push
ljmp
cmp
sarl
call
xchg
clc
idiv
jecxz
loop
inc
mov
orl
jl
pop
add
add
add
mov
xchg
aas
adc
cmp
add
cmp
cli
mov
pop
divl
shl
jbe
stos
mov
push
addb
inc
adc
add
ds
add
sbb
daa
lahf
mov
std
cmc
sub
jno
cmp
cli
dec
mov
inc
scas
loope
mov
xor
roll
add
and
shll
adc
sar
in
jae
mov
pop
or
inc
cli
repz
push
aaa
sbb
ret
pop
jno
fists
add
ret
icebp
xlat
dec
lods
mov
cli
stos
push
rorb
arpl
pop
cli
sbb
das
lea
sbb
inc
fadd
xchg
mov
add
mov
dec
data16
aas
adc
adc
jo
ds
imul
fwait
out
lea
xor
das
push
xchg
sbb
xchg
rorb
xchg
mov
fsubrs
lcall
lret
pop
add
mov
and
aad
icebp
aaa
push
jno
out
outsb
pop
repnz
sub
add
stos
jno
loope
or
xor
push
leave
sub
js
push
pop
test
lods
push
cmp
dec
xchg
lds
jnp
cwtl
xchg
cmp
xchg
jne
sub
aas
test
loopne
inc
mov
daa
add
in
dec
mov
es
xchg
daa
cmpb
es
pop
addb
add
cltd
jmp
add
cli
jmp
inc
or
add
std
addb
jne
mov
mov
jl
mov
xlat
sub
jg
scas
add
scas
jno
sub
shr
sub
decb
std
xchg
add
mov
flds
add
add
xor
std
icebp
mov
ds
mov
cmp
inc
in
in
mov
adc
jbe
mov
lahf
bound
and
clc
mov
out
xchg
pop
idivl
ljmp
cmpsl
xor
cli
lahf
fs
bound
inc
add
add
and
mov
jnp
xchg
mov
pop
jae
bnd
imul
mov
jge
daa
mov
dec
xchg
ds
stc
repz
test
add
negl
xchg
mov
rolb
lods
mov
sub
mov
incb
jmp
sbb
sub
test
lea
pop
push
enter
adc
add
xchg
xchg
pop
inc
pop
mov
je
pop
stos
js
inc
mov
xor
sbb
pop
or
jge
aam
sub
andb
push
pop
in
mov
sbb
mov
int3
pushf
xchg
push
enter
enter
sub
test
ds
add
loope
push
push
add
push
pop
fisttps
sub
push
dec
or
add
add
adc
pop
hlt
pop
inc
sbb
xchg
cmp
jo
clc
push
xor
pop
dec
jae
sahf
mov
test
daa
xchg
jno
mov
jno
lods
lock
bound
test
pop
ret
xor
in
xchg
mov
sub
jmp
jne
sub
lea
jne
jmp
inc
push
cli
jmp
add
add
add
jmp
js
ss
aaa
orl
rol
add
int
xorl
stos
sti
mov
mov
mov
mov
rcll
iret
cmp
sbbl
add
xor
xor
je
adc
sbb
mov
das
ds
addr16
dec
cmp
add
sti
add
call
xchg
add
inc
std
les
adc
loope
and
pop
cli
aaa
push
or
rorl
or
cmp
push
cli
iret
and
ds
rcrl
fs
lods
fs
xchg
adc
xchg
sbb
xor
cli
hlt
sbb
jb
rclb
test
add
add
daa
cli
lcall
add
cmpsl
lea
outsb
fmull
add
in
and
inc
std
iret
stc
dec
fisttpl
sub
push
dec
pop
add
jnp
sbb
roll
data16
scas
push
insl
aas
sub
movsl
out
mov
imul
xor
mov
xchg
mov
xchg
cmp
inc
shr
sarb
pop
lret
mov
insb
dec
add
add
inc
outsb
mov
pop
adc
std
jecxz
repz
outsb
mov
ret
in
aaa
sub
xchg
mov
roll
loope
inc
inc
pop
mov
les
inc
dec
aaa
outsl
leave
xor
cmp
mov
jo
dec
mov
add
cwtl
xchg
es
call
mov
inc
insl
fdivl
cs
test
add
add
iret
incl
and
sub
movq
inc
add
jne
lock
add
inc
add
or
mov
xlat
mov
mov
gs
pop
adc
loopne
and
cmp
in
xchg
mov
fiaddl
insl
in
nop
mov
das
stc
adc
add
out
push
fs
testl
add
xor
divl
fwait
pop
incl
sub
adc
testl
es
fiadds
xor
xor
inc
and
push
ret
clc
mov
add
outsl
idiv
bound
push
adc
sub
in
shll
inc
gs
idiv
ret
add
sub
js
sub
hlt
add
cmp
loope
add
add
data16
or
pushl
push
push
out
jge
cli
femms
xorl
dec
sar
mov
cli
push
xor
cli
repz
mov
pop
pop
mov
shrl
dec
fidivrl
rolb
cmpsl
cld
add
movsl
in
push
cli
popf
push
lock
and
sbb
jae
cltd
pop
pop
clc
out
add
add
cmp
add
xor
mov
ljmp
sarb
cmp
cs
sub
push
cld
mov
inc
data16
data16
es
sbb
sti
mov
call
lods
push
push
adc
and
out
and
mov
adc
inc
add
add
inc
adc
mov
ss
pushf
addl
sarl
out
addl
add
and
cmp
testl
in
mov
and
mov
and
mov
cmc
and
xchg
adc
xchg
mov
lock
aam
call
sub
lock
mov
int
or
jmp
add
add
and
daa
aas
add
pusha
pushf
jmp
and
insl
sbb
xchg
xchg
call
bound
fnstcw
icebp
or
in
xchg
or
or
cli
jmp
and
and
inc
add
dec
psubd
cmpb
add
add
push
out
or
std
or
fcomi
adc
sbb
add
jle
imul
add
nop
sbbl
xchg
mov
mov
cmp
jne
ss
add
sbb
cmp
inc
jp
jl
add
daa
dec
and
inc
jge
jl
add
and
shll
add
add
sub
cmp
cmc
mov
cltd
and
dec
or
mov
cli
out
popa
lret
add
adc
add
and
fldenv
sbb
cmpl
in
xchg
icebp
cmp
push
jb
add
pop
and
stc
mov
and
incb
and
jge
add
gs
jg
add
add
add
and
mov
push
add
jnp
lds
ds
vfixupimmps
inc
pop
mov
inc
jnp,pt
ds
cmpsl
int3
push
mov
sub
push
mov
or
and
out
xchg
and
sbb
sub
ret
mov
in
xchg
mov
pop
enter
jle
arpl
pop
mov
fiaddl
add
add
xchg
ret
out
stos
stos
lret
cmpl
sti
add
push
aam
sahf
ret
cmpsl
add
mov
sub
addb
movsl
mov
gs
aas
add
std
test
filds
cli
jmp
out
adc
xchg
pop
stc
xchg
and
jl
aaa
and
outsb
imul
cld
test
daa
das
add
out
mov
ret
add
add
add
mov
leave
xor
cmp
icebp
add
and
movsb
jnp
aad
rolb
add
sub
sub
adc
xchg
cmc
movb
daa
ds
call
insl
stc
decl
insl
jge
or
mov
decl
loope
lock
sub
mov
adc
inc
or
movl
and
mov
jo
idivl
push
mov
test
add
test
pop
inc
sahf
pop
ret
push
mov
mov
pop
or
jnp
call
push
add
incb
enter
incb
add
add
inc
ficompl
scas
test
mov
xor
stc
adc
mov
push
inc
cmp
stos
pop
cmovg
sbb
jmp
push
jae
int
out
scas
push
xor
cmpsl
jne
out
mov
jnp
cmpsl
pop
add
cmp
jp
pop
mov
or
dec
xchg
sub
add
add
ds
jmp
adc
in
fs
mov
jb
lock
addr16
jno
in
fmuls
jmp
xchg
inc
inc
ss
or
orb
mov
aas
sub
push
popa
shll
fsubrs
je
push
mov
sbb
dec
cmc
stos
cmp
jp
shlb
push
fs
add
add
mov
pop
push
stos
hlt
ss
dec
sbb
jecxz
inc
and
bound
mov
push
pop
jae
insb
xor
pop
hlt
mov
inc
lds
aas
add
lods
or
mov
lock
cmc
ljmp
aas
push
add
lock
aas
pop
test
sub
daa
mov
cld
fimull
xchg
add
add
jle
sub
bound
sub
jle
and
inc
add
inc
and
daa
aas
xor
push
clc
ds
add
mov
imul
mov
jae
inc
adc
adc
sti
in
mov
sbbw
jmp
mov
aas
incl
testb
in
sbb
cltd
mov
add
add
orl
push
or
aad
or
mov
add
add
shl
mov
mov
je
add
iret
mov
imul
jle
ret
mov
ss
mov
mov
pushl
inc
cli
cmp
adc
scas
push
mov
daa
sbb
repnz
das
out
sbb
mov
pop
ja
nop
push
push
fadds
add
das
fistpll
jl
cmp
aaa
lret
mov
shrl
stc
pop
mov
ja
dec
mov
cli
inc
jecxz
adc
pop
xor
pop
xchg
pop
or
rorb
sbb
cmc
dec
adc
ss
sbb
scas
jae
push
lahf
inc
js
cmpsl
sar
lcall
icebp
js
xor
aad
add
pop
add
add
xchg
out
mov
sub
imul
ds
sbb
push
xlat
adcl
and
inc
mov
mov
daa
mov
cld
dec
jae
js
add
pop
fs
imul
mov
xchg
shr
cmp
xor
adc
or
aam
adc
mov
adc
mov
adc
add
pop
sub
xor
cmc
fisubrs
pop
daa
insl
out
aas
push
push
mov
adc
pop
add
bound
add
je
ja
leave
fildl
push
je
adc
sub
stc
aam
sub
mov
gs
cmp
bound
add
add
push
stc
fs
xlat
add
icebp
cwtl
cmp
faddl
cli
cld
lahf
sub
movsb
mov
sar
mov
xorb
daa
mov
out
or
stos
or
jbe
arpl
mov
mov
or
xchg
out
or
sti
adc
mov
cmp
jbe
xor
jne
jne
or
add
cmp
mov
insl
or
adc
jne
mov
jne
adc
loope
pop
setnp
pushl
xor
xchg
leave
sti
or
mov
sti
test
idiv
adc
pop
adc
mov
pminsw
aas
and
sti
gs
std
xor
add
add
jae
gs
sbb
test
subl
sti
stc
call
cmp
jmp
aam
push
sti
push
hlt
popa
lahf
shlb
cli
scas
js
ror
inc
pop
sbb
jbe
adc
push
push
push
ret
sub
mov
nop
mov
jae
dec
sbb
daa
iret
xor
pop
add
add
lret
ret
les
ret
xor
aam
jbe
ret
add
dec
sahf
movsb
dec
adcb
ss
inc
cli
dec
rcl
sbb
xchg
mov
jo
ja
push
call
pop
jae
inc
xor
std
ret
push
lds
mov
mulb
push
or
inc
sbb
std
add
addl
add
add
inc
icebp
mov
adc
js
push
in
stc
stc
ds
jo
bound
inc
cmc
cmpsl
jnp
jmp
aad
call
imul
stc
jae
call
jnp
daa
jb
imul
lods
test
stc
cli
loope
ret
pop
mov
out
bound
adc
stc
hlt
add
add
inc
jmp
loop
xor
outsb
sbbb
ds
loopne
sarl
adc
cmovo
test
cmc
lods
notb
push
subb
test
sar
stc
cmp
add
jge
pushl
in
sbb
stc
mov
je,pt
push
xchg
jne
sbb
jge
bound
add
add
mov
mov
push
mov
sarl
dec
aas
call
xor
aas
in
icebp
and
inc
cli
cmp
movsb
ds
std
popa
in
cld
popa
lods
push
jle
jnp
inc
cli
cmpsl
pusha
inc
je
mov
jg
repz
jb
or
xor
std
jp
js
lock
add
add
int3
inc
cli
stos
jb
xchg
ja
andl
aas
je
insl
mov
lods
and
out
pop
mov
add
call
inc
cli
cmc
push
inc
adc
aas
cld
ret
dec
and
ret
xlat
nop
aaa
ja
arpl
cs
jp
cli
fmull
jg
or
faddl
je
push
jg
cli
dec
inc
add
add
xchg
xchg
jp
push
inc
ficoms
and
and
cli
adc
out
popf
fisttpl
sub
imul
hlt
test
ljmp
jb
inc
daa
aas
cmp
mov
out
mov
out
add
inc
mov
sub
sub
push
sub
call
add
add
addr16
push
stc
stc
jmp
in
hlt
in
repnz
andl
stc
mov
addr16
call
fs
insb
adc
jmp
jmp
cmc
jae
mov
cld
pop
addr16
push
add
stc
push
mov
lret
inc
lcall
andl
sbb
hlt
stc
cmp
clc
cli
cld
rcll
jmp
dec
movsb
inc
daa
add
add
cmc
adc
mov
mov
lcall
xor
mulb
das
idiv
mov
jge
rcrb
addl
addb
int
xchg
divb
lock
or
jge
clc
add
dec
push
or
mov
sti
stc
pop
add
add
add
testl
inc
and
xlat
cli
sbb
adc
movsl
xor
repz
stc
out
cmp
add
dec
mov
push
xchg
jmp
add
fmuls
mov
inc
sub
or
or
ja
repz
and
mov
enter
add
add
dec
sbb
int
dec
in
inc
mov
movsl
add
xchg
cli
xor
dec
inc
cwtl
out
jmp
or
arpl
sub
stos
push
out
jg
scas
push
in
rcrb
jmp
dec
mov
jecxz
scas
daa
xor
repz
pusha
das
div
das
adc
cmp
pop
cmpsl
ret
in
add
add
jnp
add
add
pushl
shrb
mov
mov
xchg
stos
pop
pop
jecxz
fisubrs
inc
cmp
aad
lret
in
aas
sbb
jle
inc
daa
aas
loop
and
inc
xchg
inc
cmp
ret
fwait
enter
clc
stc
jne
and
dec
cmpsl
aaa
in
pushf
mov
push
bnd
inc
push
push
and
xlat
addr16
test
sub
add
sub
sahf
scas
add
dec
mov
cld
sbb
or
sbb
push
out
jmp
bound
in
sub
add
imul
fsub
hlt
test
pushf
push
out
jg
xchg
test
cmp
stc
fisubl
xchg
movsb
call
mov
inc
lods
add
cs
sub
cli
std
cmp
add
ja
push
cmp
mov
jg
inc
test
xor
jne
dec
add
inc
sar
pop
inc
cmp
adc
stos
add
xor
iret
push
in
sti
add
lods
adc
ljmp
dec
sbb
pop
mov
inc
jns
iret
add
testl
xchg
jge
call
pop
jnp
mov
and
out
mov
nop
push
xor
out
je
pop
mov
adc
in
inc
insb
push
iret
push
scas
cmp
in
push
mov
xchg
leave
jmp
xor
mov
out
inc
xlat
xor
cmp
adc
sub
xchg
mov
cmp
sti
xchg
test
inc
jae
add
inc
stos
rorl
lock
jp
cmp
int3
and
in
fwait
or
stos
adc
sbb
add
xchg
dec
cmpsl
add
xchg
pop
xchg
and
aas
cmp
pop
lret
jae
out
loopne
aaa
vprotd
mov
cmp
ds
aas
dec
mov
in
fs
mov
imul
add
add
out
lock
cmpsb
pop
and
pop
das
mov
xlat
rorb
outsl
test
insb
cs
call
adc
insb
outsb
push
mov
cltd
xor
push
adc
adc
sahf
ret
jbe
inc
icebp
jbe
inc
stc
push
hlt
jae
test
inc
adc
and
mov
add
add
imul
xchg
loope
mov
mov
rcrb
mov
addr16
jle
pop
cmc
xor
out
aas
add
cwtl
jbe
pusha
fidivrs
test
mov
sub
mov
dec
add
in
popl
jmp
idiv
sahf
movl
into
cmp
adc
adc
cmp
rcrb
mov
add
cltd
or
inc
xchg
or
inc
jge
divl
ret
pop
cld
push
dec
or
cmp
push
cmc
jne
or
testl
lcall
or
mov
add
or
notb
xchg
jns
leave
mov
sbb
xchg
pop
adc
cmp
enter
and
stos
decl
ss
jns
test
stos
out
cli
add
add
xor
and
xor
inc
mov
leave
scas
stos
dec
mov
test
mov
xor
out
je
loope
test
xchg
or
cli
arpl
cli
scas
inc
add
aaa
push
dec
adc
or
mov
bnd
out
jae
xor
adc
ljmp
ljmp
push
add
add
icebp
xchg
adc
cmpsl
add
xor
ret
aaa
push
mov
adc
out
faddl
sbb
xchg
not
scas
push
decl
fs
jge
stc
xchg
mov
out
rorl
ds
inc
clc
std
xchg
lods
jle
loop
inc
sub
outsl
push
pop
xor
in
call
inc
in
mov
test
movsl
incl
xor
add
add
out
cld
add
jg
cmp
shl
ret
and
adc
jo
out
add
shlb
push
outsb
sub
push
test
mov
ret
daa
push
add
aaa
aas
stc
aam
dec
inc
jmp
xlat
call
add
out
stos
add
jo
test
mov
push
test
add
add
test
lahf
andl
lahf
mov
scas
andl
pop
clc
jae
push
fldl
add
fisttps
jb
jmp
add
ljmp
ds
add
or
lds
enter
push
jne
add
mov
cmp
ret
dec
negl
rorl
mov
push
add
sbb
mov
and
mov
inc
and
sar
cmp
push
fmuls
add
add
fldz
mov
and
test
sti
cmp
fdivrs
and
adc
add
stc
flds
and
psubq
add
xor
std
cli
sbb
rolb
cmpsl
xor
lret
jae
scas
test
jg
fsubl
mov
dec
loope
lcall
mov
add
xchg
add
and
loopne
insl
ds
sub
fiadds
pop
sbb
add
add
aas
call
testb
out
jo
lods
add
ljmp
and
pop
out
lret
add
aas
out
sub
std
mov
cld
pushf
fwait
cli
cmpsl
int3
or
jg
fwait
ljmp
imul
je
jg
mov
in
pop
cmp
jmp
jmp
or
out
xor
add
push
je
int3
dec
push
push
adc
add
in
cvtdq2ps
push
pop
jae
push
in
adc
inc
in
scas
jg
pusha
mov
test
inc
mov
add
jge
mov
cltd
sub
jb
cwtl
incl
mov
xor
cmp
daa
aas
in
int
mov
mov
add
loope
loope
cmp
subl
cmp
jmp
and
call
ret
jmp
push
idiv
enter
adc
rolb
mov
testb
sub
or
add
mov
decl
je
das
js
pop
push
adcb
add
getsec
add
pop
orb
in
mov
sbb
pushl
adc
jmp
sub
sar
cmc
jne
mov
notb
pushf
idiv
subb
andl
enter
jmp
sbb
jle
test
mov
cmpsl
sbb
add
sbb
push
sbb
sti
cltd
or
outsl
and
sbb
adc
add
in
or
cmpsl
sub
jp
jb
mov
jae
pop
aaa
jae
das
movl
es
std
gs
mov
mov
push
add
std
mov
cli
adc
das
je
jmp
repnz
lock
jl
ss
add
lock
xor
and
test
lock
add
add
jo
xor
shl
ret
and
rcrl
pop
xchg
xchg
xor
outsb
das
push
out
cmc
ret
test
sti
jb
push
sub
out
ret
pop
dec
lahf
mov
ja
fisttpll
lahf
sbb
xor
lret
inc
pop
mov
mov
sahf
insl
jmp
jno
out
mov
insl
jecxz
jne
add
daa
mov
sub
pop
stos
jp
in
jb
jg,pt
dec
in
jmp
hlt
call
call
gs
adc
stos
in
sti
sahf
push
jbe
xor
addr16
mov
aas
jmp
in
push
daa
xchg
mov
stc
push
idivl
rcrl
addl
aam
dec
inc
jmp
add
add
mov
push
add
add
lea
lea
lea
adc
pop
add
mov
loop
enter
cmpl
lea
inc
bound
into
and
call
out
push
push
mov
cmpsl
mov
inc
pop
inc
dec
push
sub
cmp
push
sub
pop
xor
mov
push
inc
cmpsb
adc
sbb
inc
bound
cli
movsl
add
imulb
jp
mov
shl
and
lret
mov
sbb
cli
sti
shrl
adc
pop
mov
aas
cltd
fwait
and
dec
pop
jmp
adc
aad
je
or
inc
and
push
cmp
ficoml
in
jbe
pusha
popa
rclb
mov
popa
lods
jge
add
add
std
jmp
cld
or
aad
incl
push
or
push
mov
stc
fildl
sti
imul
stc
leave
xchg
ds
mov
jns,pt
fwait
in
aas
and
fistl
add
cld
xacquire
mov
fwait
mov
daa
add
jecxz
pushf
xchg
int3
daa
add
add
dec
sub
pushf
add
xchg
push
push
cmpsl
xchg
jmp
stos
divl
es
jg
rcll
mov
add
sub
pushf
cmp
inc
mov
aad
pop
pushf
and
shr
arpl
ljmp
add
shlb
je
js
add
lahf
loop
push
cmp
test
add
add
cs
stc
mov
pop
cmp
fsubs
das
test
jnp
cmp
stos
adc
push
push
gs
loope
sub
gs
aam
dec
inc
jmp
in
cli
cld
rorl
jmp
pop
inc
stc
jle
mov
add
daa
lea
push
fwait
xchg
stc
push
dec
rolb
int
add
jns
add
add
mov
add
mov
decl
cmp
jge
adc
jl
stc
test
jp
test
adc
inc
adc
cld
or
addr16
dec
jmp
mov
inc
std
xchg
or
add
scas
movsl
incl
add
jb
sti
addr16
cmp
andb
int
dec
call
and
int
aad
ret
pop
xor
data16
xchg
and
inc
ret
jp
cmp
out
xchg
fimuls
xor
lcall
jecxz
jmp
adc
add
pusha
inc
jnp
test
clc
sbb
fimull
add
test
es
scas
nop
mov
clc
push
adc
scas
inc
clc
dec
loop
and
cli
jmp
es
aad
inc
fdivrl
push
inc
push
mov
add
pop
mov
mov
and
add
aas
loop
lods
ds
mov
xor
cmp
push
in
shr
fiadds
mov
out
add
add
out
fwait
push
sub
xor
push
push
out
xor
into
add
xor
rcrl
and
jp
adc
out
pop
scas
xchg
sub
and
popa
shll
jnp
fisubs
cmc
data16
fdivrp
push
std
xor
call
ret
shl
cmp
cmp
aas
je
add
add
push
push
cmp
out
push
dec
fstps
mov
inc
add
fdivr
jmp
or
stc
insb
popa
sub
hlt
cmp
je
push
lds
test
or
mov
aad
cmpsb
cmp
mov
stc
xchg
xlat
in
dec
flds
inc
aas
push
pop
sbb
inc
push
mov
add
jns
in
mov
divb
pop
jmp
std
push
mov
ljmp
test
loope
lock
aad
subl
cmp
dec
repnz
push
clc
pushf
in
push
cmc
push
hlt
inc
cmp
cmp
pop
dec
inc
aaa
pop
lods
push
mov
punpcklwd
add
cmp
cmp
dec
and
incl
add
adc
jle
adc
inc
jae
sbb
xchg
and
scas
push
and
ds
and
and
data16
cli
pop
pusha
cmp
call
sbb
xlat
inc
xchg
sub
sbb
loop
or
sub
stos
ljmp
in
cli
adc
inc
and
inc
je
in
jmp
cmp
inc
and
add
add
repnz
or
or
sub
mov
fs
stc
out
add
dec
jbe
adc
outsl
jb
cmpsl
cmpl
out
and
faddl
sbb
icebp
mov
and
add
int
inc
aas
pop
scas
pop
xor
pop
xor
pop
xor
add
ds
inc
pop
neg
insl
sbb
fucom
jae
add
add
add
mov
xor
inc
daa
dec
cmp
outsb
ljmp
push
add
jmp
iret
stos
ljmp
je
add
mov
enter
aad
and
pusha
push
push
bound
insl
mov
mov
cld
ror
jae
xor
add
daa
ret
and
sar
aad
add
fwait
sarb
mov
movsb
pop
or
ret
inc
mov
movl
pop
gs
push
jge
je
and
addr16
inc
flds
or
mov
dec
es
inc
call
jb
incl
aam
jne
or
clc
mov
inc
or
mov
add
cmp
ret
cmpsb
jns,pt
inc
add
leave
call
stc
push
xor
dec
mov
icebp
push
xlat
cmp
add
add
js
or
pop
mov
add
cltd
cmc
push
rcrb
add
cmp
add
aas
jns
inc
shl
fadds
inc
and
xchg
add
sub
enter
out
std
push
scas
add
and
sti
push
sub
sti
jno
push
je
mov
dec
mov
enter
cmp
sbb
cli
ret
repz
jno
pop
mov
sbb
jmp
stos
mov
pmulhuw
mov
jecxz
inc
fwait
mov
aad
rcl
xlat
push
iret
sti
cmc
mov
std
add
add
mov
cli
push
add
out
repz
xor
hlt
repz
mov
ret
fdivs
push
push
xlat
mov
push
nop
add
sbb
ret
cmp
fsub
xor
lea
aas
adc
mov
xor
mov
mov
ret
stos
jo
and
lcall
add
sbb
pusha
mov
das
fcoms
clc
sbbb
adc
cwtl
sub
jl
inc
push
add
imul
pushf
pop
mov
mov
xchg
inc
push
mov
fcmovbe
insb
push
xor
jo
into
in
mov
fsts
jmp
pop
pop
outsl
xchg
adc
lcall
xchg
push
and
js
test
jnp
mov
add
or
fadds
xor
xchg
push
add
fiaddl
bound
or
or
lods
or
rolb
call
add
sar
xor
or
add
or
mov
sarb
sbb
adc
add
add
lret
cmp
lcall
fistpl
sarl
add
push
ret
push
mov
in
jle
push
mov
xchg
push
mov
nop
loope
cwtl
push
testb
mov
xchg
mov
inc
add
pop
in
and
mov
inc
inc
xlat
js
and
mov
jl
dec
lahf
sti
add
add
in
or
lahf
sbb
add
mov
lahf
sti
es
out
bound
cli
int
add
and
adc
cld
mov
aas
and
push
ret
popa
mov
mov
cmpsl
sti
and
sti
scas
ljmp
sbb
inc
cmpsl
xchg
jg
fdivrl
xchg
out
inc
js
loope
imul
enter
add
add
add
cmp
subb
call
dec
sbb
jge
ret
mov
into
repz
ds
movsl
cs
jmp
mov
cmp
push
jp
fiaddl
aam
push
stos
dec
fwait
adc
cmp
jns
xor
cld
pop
jp
sbb
cmp
sub
aas
pop
mov
add
add
adc
adc
lods
cmp
jle
outsl
stc
aam
xor
rol
mov
pop
aas
push
bound
mov
add
das
sar
out
jbe
jae
lods
jp
cwtl
sbb
test
push
xor
add
aad
mov
or
dec
and
fwait
add
or
mov
add
fisttpl
or
cmc
and
jae
sub
aam
out
jle
sbb
cmpsl
movsb
fsubs
and
scas
out
xchg
adc
lea
jmp
mov
push
fwait
xor
jge
stc
xor
mov
mov
dec
cmp
cmp
mov
iret
test
lock
pop
cmc
xor
add
popf
cmp
add
testb
sub
pop
inc
dec
push
cs
or
mov
je
push
or
inc
cmp
icebp
adc
pop
jb
and
add
sbb
fwait
xchg
adc
jnp
xchg
mov
push
test
inc
xor
imul
push
sti
hlt
cmp
add
push
mov
dec
mov
push
sbb
sbb
mov
je
xor
push
fs
test
sti
adc
xchg
repz
and
fisttpll
push
adc
pushl
mov
icebp
aas
and
inc
jae
jae
lahf
mov
shlb
scas
inc
ret
repz
inc
mov
call
add
stc
leave
xchg
xchg
scas
nop
sbb
pushf
xchg
inc
incl
rcrl
cmpsl
add
jp
add
inc
jge
ljmp
sbb
lds
jle
cs
dec
mov
daa
aas
adc
mov
iret
add
aas
cmp
and
nop
mov
divl
or
add
add
add
inc
bound
in
or
pop
and
arpl
cmp
aam
adc
and
shrb
push
jnp
daa
dec
push
xchg
and
add
ds
adc
and
sub
sbb
lods
imul
mov
sub
dec
call
cmp
outsb
xchg
sub
gs
add
add
into
addr16
adc
leave
mov
jmp
cmp
adc
ljmp
add
mov
jge
dec
push
mov
dec
push
mov
add
inc
inc
icebp
decl
or
dec
inc
mov
lods
daa
je
adc
std
dec
daa
and
cmp
aam
add
inc
add
stos
cmp
std
call
testb
jo
std
es
mov
notb
inc
faddl
and
sbb
ljmp
xor
mov
lahf
push
cli
stos
xchg
pop
xlat
mov
mov
test
cli
aam
cmovno
push
jp
add
add
sbb
mov
cmp
pop
cltd
jb
testb
sbb
fs
xor
or
rcll
arpl
push
mov
daa
pop
jg
std
xchg
adc
lret
repz
imul
leave
das
mov
mov
push
add
jmp
sub
push
jmp
imul
add
add
mov
pop
loop
fsubrl
jg
shlb
insb
dec
js
sub
das
cmc
ret
arpl
syscall
shll
imul
int3
cli
push
mov
xor
mov
addr16
sub
cmp
xadd
add
addb
adc
test
pushf
sbb
lods
sub
add
add
xchg
mov
cmp
sar
cmp
aas
in
push
fisubs
idivl
xlat
cmp
xchg
fs
neg
xor
sub
mov
push
jl
pop
fsts
icebp
sub
and
mov
add
fs
out
sub
sub
inc
fst
xor
sti
add
add
stc
add
sti
enter
enter
xor
jmp
ds
je
adc
sbb
ficoms
scas
add
fwait
not
sub
dec
cmp
push
push
pop
jp
in
in
sahf
pushf
dec
mov
mov
sbb
lcall
or
test
add
push
inc
test
cli
add
lea
mov
inc
or
jle
rolb
shll
test
std
call
ljmp
sub
das
ljmp
jle
mov
pop
adc
out
push
pop
mov
adc
xchg
imul
and
std
jmp
lods
gs
test
mov
add
inc
in
icebp
fisttps
push
push
sub
cli
jp
adc
gs
mov
sbb
and
jae
aas
jo
jg
outsb
inc
jb
int3
mov
aaa
out
mov
jno
jg
push
roll
or
pop
cmc
sbb
insb
inc
push
pop
push
add
rcrb
add
add
call
add
push
dec
jg
into
push
dec
adc
pop
dec
out
push
dec
xchg
adc
cs
call
mov
push
mov
adc
icebp
fs
cs
add
sub
add
outsb
xor
add
cmpsl
stc
into
mov
cmc
call
add
add
insb
data16
xor
es
mov
daa
aas
lretw
mov
ja
or
mov
push
shll
out
test
aas
add
sbb
sarb
mov
push
call
and
je
cmpsl
call
clc
inc
cmpsb
add
add
add
add
mov
mov
dec
call
mov
divb
sub
add
inc
add
imul
call
mov
jne
js
xor
jns
cmp
daa
xor
adc
test
incb
mov
and
push
and
dec
jns
shl
dec
inc
shl
push
add
add
movsl
stc
imul
sub
dec
fcoms
jle
out
jle
fdivr
lcall
sbb
cli
cmp
and
cmp
jmp
call
iret
push
add
cmp
iret
je
lcall
push
push
mov
sub
lahf
cwtl
lods
out
lcall
lcall
addl
jge
xchg
or
lar
popa
dec
es
inc
lea
rol
jmp
jae
pinsrw
cli
cmpl
jl
inc
insb
pop
pop
out
je
pop
mov
push
stos
or
repnz
aas
ss
add
mov
mov
sub
pop
les
dec
les
loopne
add
stos
jp
jp
xor
in
xchg
pushf
lods
jp
inc
push
fisubrl
aas
int
test
pop
push
pcmpeqw
movsb
or
dec
add
xor
adc
pop
int3
pop
mov
orb
jl
in
cwtl
jo
push
jb
std
inc
mull
xlat
mov
xor
jmpw
test
movsb
jp
cmp
add
rolb
mov
inc
daa
enter
add
insb
addr16
add
fnsave
mov
out
movl
push
das
inc
jmp
mov
data16
jno
stc
xchg
lods
xorl
or
out
in
mov
jg
add
shrl
imul
xchg
adc
nop
arpl
rorl
xor
addb
add
mov
mov
lret
xor
sarb
inc
repz
mov
jne
movsl
pop
push
push
xor
mov
push
pop
les
add
dec
in
sbb
arpl
mov
loope
push
xor
mov
adc
test
imul
xor
or
or
mov
jmp
mov
add
and
out
std
mov
out
jae
cli
into
xlat
xchg
add
mov
xor
aas
pushf
je
pop
mov
out
sub
mov
clc
aam
cmp
int3
jmp
mov
sub
loope
inc
xor
push
push
sub
add
adc
fdivs
mov
add
mov
or
cmpsl
xor
ljmp
leave
enter
std
dec
push
cwtl
jne
out
jae
daa
subl
out
xor
or
dec
xor
imul
sbb
outsb
push
fs
repnz
pop
mov
pop
dec
stos
xlat
shll
scas
fdivr
fs
aam
jg
aam
mov
shll
add
add
insb
sbb
pop
cmp
jg
outsl
ss
bound
or
out
ret
mov
cmpsl
nop
es
test
daa
pop
inc
shll
verw
rcrb
push
xchg
cmp
hlt
pop
das
inc
jmp
loopne
test
aas
add
pop
lds
xor
mov
aaa
ja
mov
test
add
mov
stc
jmp
xchg
dec
xor
aam
and
dec
adc
mov
in
lds
cmp
inc
ret
xchg
dec
and
lret
or
ja
pop
movsl
divb
mov
add
test
sub
xor
hlt
inc
scas
in
jb
cmp
push
add
or
daa
dec
jmp
add
inc
xor
cmp
sti
stc
test
les
mov
testb
mov
bound
or
icebp
pushl
notb
mov
icebp
add
in
enter
jns
xor
add
mov
add
and
cmp
ds
pop
cli
lahf
cmp
sbb
inc
inc
pushf
mov
add
add
xor
cmp
cmp
pushf
icebp
cmp
xchg
cmc
cmp
repz
dec
or
xchg
lcall
mov
cli
scas
movsl
rcrl
mov
add
cwtl
lods
rorl
shl
daa
enter
jl
mov
sbb
ret
mov
xchg
sub
je
nop
loopne
pusha
and
mov
or
test
add
and
mov
mov
fiadds
or
inc
jg
mov
sbb
mov
test
add
adc
jg
ds
fwait
xor
pop
enter
jecxz
or
ret
inc
add
pop
mov
rorl
add
shr
xchg
dec
data16
xor
addb
add
inc
pop
add
fcoml
add
add
jb
stc
insb
pusha
xor
insb
in
xor
pop
mov
dec
jge
scas
xor
push
inc
je
cmpsb
mov
hlt
and
shr
mov
je
incb
or
inc
movsl
mov
lods
jge
rcll
loopne
push
movsl
cld
je
add
add
jge
es
adc
cmp
cmpsb
cmp
aas
in
out
sub
clc
insb
and
add
aam
stc
jle
pop
ret
rolb
call
out
jne
nop
mov
mov
lahf
jmp
cwtl
mov
decl
in
loope
add
mov
push
xchg
ret
negb
sub
add
add
jne
idivb
stos
inc
testb
jae
jmp
rol
jp
loope
mov
testb
push
rcrl
std
push
mov
shl
dec
aad
pop
aas
nop
rclb
and
xchg
jmp
iret
mov
lods
imul
imul
scas
dec
ret
push
cld
mov
add
mov
incl
add
mov
call
std
gs
stos
out
mov
sub
xchg
or
mov
cmp
repnz
ja
aaa
add
clc
cli
fstps
inc
xor
mov
inc
xor
mov
and
insb
cli
adc
mov
mov
mov
rolb
jg
lods
out
xor
fidivs
mov
ret
dec
push
add
mov
jmp
jo
lcall
movq
xchg
mov
mov
lret
stos
add
pushf
add
popf
stos
add
popf
lods
add
js
mov
push
icebp
mov
sub
dec
in
daa
subl
pushl
adc
stos
stos
fbstp
add
add
lret
cmp
add
mov
out
jg
cmp
xor
bound
push
popa
inc
ja
clc
mov
cmp
outsl
mov
enter
pushf
sahf
daa
shl
mov
aas
adc
cli
or
cmp
mov
push
push
mov
enter
bound
call
add
inc
cwtl
es
adc
sub
push
bound
mov
stc
inc
std
es
add
or
or
adc
jge
push
pop
addb
shlb
je
ja
jb
ja
jbe
ja
je
ja
jne
jmp
ljmp
add
test
in
jge
rcll
mov
add
adc
inc
hlt
mov
xor
dec
jle
jl
add
inc
sub
and
hlt
je
mov
or
js
loope
dec
cmp
lea
push
xchg
mov
or
xor
adc
icebp
and
mov
and
std
test
sub
movsb
or
add
mov
cli
and
std
jg
mov
addl
add
test
decl
inc
and
push
inc
dec
sarb
mov
sbb
add
movl
test
gs
cmp
cli
mov
enter
out
std
stc
mov
jecxz
cmp
aas
sub
aas
ljmp
out
jb
and
cli
jns
mov
xchg
testb
add
pop
mov
add
sti
leave
sbbl
jne
test
mov
movsb
repnz
inc
and
sub
push
movsb
xor
push
sbb
ret
mov
sub
fs
inc
sub
sub
cmp
rcll
push
call
adc
xor
ljmp
in
add
maxps
loope
inc
test
sti
divl
scas
inc
pusha
mov
jle
cli
mov
aas
lahf
add
add
mov
loope
jl
in
daa
adc
shlb
lock
pop
adc
inc
mov
or
sbb
cmp
sub
retw
cmp
push
and
mov
cmp
sbb
cmp
adc
adcb
add
xor
and
outsb
push
ja
push
les
rorl
cltd
add
add
cmp
addl
js
and
sub
addl
orl
or
push
dec
cmp
test
idiv
inc
cwtl
jge
stc
dec
divl
divl
call
mov
add
into
test
xor
sbb
in
push
movups
mov
add
idiv
and
dec
cld
dec
cltd
jle
pop
movsl
xchg
xor
not
push
mov
sahf
xchg
sub
lahf
push
mov
nop
ret
adc
je
xchg
cld
add
sub
insl
pop
jno
jns
ss
adc
dec
jge
mov
add
jns
es
inc
xor
ret
imul
mov
test
inc
and
les
sbb
add
and
add
mov
in
hlt
outsb
enter
int
mov
sbb
out
dec
lods
sti
test
enter
mov
repz
ja
mov
addr16
add
add
xor
adcb
jbe
stos
xor
cli
sbb
stc
ljmp
mov
xor
add
outsb
inc
shlb
call
clc
test
mov
jecxz
pop
mov
mov
dec
into
lds
fwait
andb
mov
xor
inc
out
mov
je
cmpsl
test
lds
mov
add
mov
inc
push
mov
xchg
ds
push
sub
test
xchg
call
fs
dec
test
lods
cld
divl
mov
mov
add
mulb
subl
sub
push
cmpsb
xor
inc
inc
jmp
stos
cld
testl
nop
dec
addl
add
mov
and
lods
or
lods
push
call
sub
test
jne
jo
jb
adc
mov
adc
ret
dec
mov
mov
adc
and
rolb
imul
call
push
or
inc
scas
addl
xor
inc
sti
cmp
cmp
push
xor
dec
cld
dec
sti
push
add
add
shl
mov
jl
test
pop
hlt
dec
in
andb
cmc
jae
and
sub
out
andb
and
xlat
and
divl
cld
dec
add
lock
lret
cmpsl
shl
add
pop
stc
cmp
adc
and
cmp
lea
add
rep
add
push
mov
jge
lcall
push
call
in
test
aas
xchg
in
rcrb
sub
inc
test
add
stos
or
mov
lcall
ljmp
mov
cmp
push
cmc
mov
xchg
push
mov
scas
and
add
fs
mov
xchg
pop
sahf
sbb
add
pop
mov
jg
rorb
in
outsb
jmp
cs
sbb
cmp
movsb
insb
in
outsb
daa
ret
and
jmp
jle
aas
push
add
lcall
js
fwait
jle
ret
lock
jne
fs
ljmp
add
add
pop
fwait
sbb
mov
inc
lret
mov
ret
enter
call
jb
mov
dec
jnp
cmpsl
test
xchg
cmpsb
je
cwtl
add
push
push
call
cmp
sub
xor
loope
in
add
and
mov
incl
jecxz
subb
mov
fwait
cltd
xchg
add
add
push
mov
in
sbb
popa
push
pop
mov
add
test
outsb
jp
mov
mov
fwait
jne
loop
jge
js
test
mov
cmp
xor
cmp
xor
dec
enter
cmp
add
aaa
call
mov
cld
test
jmp
add
in
sti
and
es
mov
xchg
pop
dec
xchg
mov
xchg
das
add
jmp
xchg
stc
jae
push
xchg
and
cwtd
std
push
scas
add
pop
jno
push
into
xchg
dec
and
jmp
bnd
adc
ss
test
repz
cwtl
xchg
cmp
add
add
sub
aaa
popa
mov
push
and
push
cltd
imul
jbe
hlt
das
sub
out
in
in
lret
adc
sets
add
cmpsb
call
or
movsb
call
shl
movsl
or
pop
call
and
out
jns
out
jae
out
and
bound
andb
jne
cmc
aaa
outsl
aad
add
add
aas
cmp
xor
push
mov
pushf
negl
push
out
adc
les
stos
aam
sub
call
fsubrp
or
jb
in
cmp
and
sub
rcrb
sqrtps
out
jge
mov
enter
add
daa
mov
adc
xor
aaa
jge
js
push
add
add
cmpsb
dec
sbb
xchg
fsub
subl
or
fcoml
dec
bound
cmpsl
xchg
inc
sarb
movsb
dec
ret
xor
add
daa
aas
push
mov
addr16
xchg
dec
jle
mov
cmc
or
divl
mov
sbb
cld
incl
stos
xor
shll
push
and
inc
add
add
inc
xchg
adc
sub
pop
ljmp
push
xor
push
push
or
adc
and
test
call
inc
xchg
adc
push
ret
ljmp
je
inc
divl
divl
notl
and
les
mov
ret
lret
jp
cmpsl
cmp
and
hlt
add
add
mov
stc
push
scas
out
adc
cmp
or
jle
add
faddp
add
imul
data16
mov
jae
mov
add
fs
test
sub
or
and
insl
push
add
mul
push
sub
daa
pop
add
xchg
std
jmp
mov
scas
aas
push
repnz
outsl
cmc
inc
and
pop
cs
sub
pop
or
add
std
or
repnz
nop
push
cmpsl
add
xchg
ds
sub
aas
test
out
cmp
lock
cmp
inc
and
cmp
and
out
fs
sarb
out
mov
inc
out
scas
mov
pop
pop
jbe
out
pop
dec
ja
add
add
ds
cs
aas
out
aad
outsw
sub
jg
xchg
jmp
ja
mov
jae
cmpl
sti
push
adc
ss
jmp
mov
out
cmp
sub
movsl
push
les
add
insl
mov
stc
cmp
add
daa
test
pop
push
jmp
sti
mov
jmp
popf
cmpsl
jae
add
add
mov
mov
inc
jmp
daa
mov
stc
push
fcmovnb
stc
pop
test
adc
cmpsl
je
ret
sar
loopne
notl
sub
mov
mov
sarb
divl
mov
cld
xor
ds
push
scas
adcb
jp
add
sub
addl
add
loope
add
int
dec
lea
cmc
pushl
push
js
or
push
add
jo
call
sbb
cmp
lret
mov
shr
lock
repnz
call
stc
cmpsl
pop
add
std
ja
mov
insl
push
stc
cltd
sahf
jbe
or
add
and
les
std
clc
add
add
ljmp
push
ja
bound
ljmp
cld
mov
mov
xchg
arpl
dec
ja
and
mov
sub
mov
jge
lcall
ss
mov
push
aaa
loope
icebp
dec
nop
mov
std
jmp
int
loope
call
add
add
cmp
outsb
repz
mov
fwait
daa
sub
xchg
daa
sub
adc
pusha
push
cmpsl
add
jle
pop
nop
dec
cmpsl
add
es
lcall
loopne
cmp
lret
add
lods
call
out
ret
dec
add
aas
faddp
sbb
aas
mov
subl
add
or
dec
push
test
cmpsb
or
ds
ret
daa
cmpps
stc
jb
ss
cmpsl
shrl
test
sbb
cmpsl
mov
stc
push
rol
nop
clc
mov
stc
ja
push
pop
mov
push
push
fidivs
repz
sub
lock
jg
test
add
add
mov
mov
orb
sub
insb
mov
push
stc
hlt
aas
xor
add
shlb
cmp
shrb
mov
xor
push
push
imul
add
mov
xchg
or
mov
xor
and
mov
or
test
add
push
xchg
or
pop
push
js
ret
dec
push
inc
pop
and
repz
xchg
mov
mov
in
pslld
clc
dec
das
add
and
jg
stc
mov
aaa
dec
bound
test
jae
mov
push
inc
mov
add
xchg
xchg
adc
loop
popa
add
add
dec
cmpsl
lods
and
push
dec
mov
add
dec
add
xchg
dec
push
scas
scas
dec
mov
clc
dec
mov
out
mov
pushl
add
ja
inc
orb
aas
jecxz
in
outsb
repz
arpl
xor
jl
pop
mov
pop
aas
add
add
xor
add
cmp
loop
mov
aas
xlat
outsl
and
fwait
pop
sbb
jo
or
add
sti
imul
jg
das
in
and
cwtl
ljmp
cmpsl
outsl
jl
mov
daa
add
mov
rorl
xor
add
popf
add
mov
jg
testb
add
cli
mov
test
aas
add
imul
dec
movsb
arpl
aas
push
mov
mov
or
dec
insl
call
mov
lret
and
mov
sub
call
inc
dec
inc
jmp
mov
sahf
add
daa
les
push
pop
pop
sti
addr16
sub
push
adc
pop
sub
clc
push
and
inc
add
xchg
jle
jge
add
lods
movsl
idiv
or
add
negb
sbb
mov
mov
push
sub
outsl
cmp
pop
and
loop
mov
leave
cmp
push
push
dec
xor
mov
cwtl
aas
cmp
add
es
divl
sbb
adc
dec
adc
je
ds
divl
movsb
iret
mulb
and
adc
aaa
repnz
imul
sub
insb
cmpsb
std
dec
cltd
push
dec
mov
add
les
addr16
lcall
pop
fwait
sbb
stc
roll
mov
jbe
jmp
add
jae
stc
mov
dec
stc
cltd
mov
lret
loope
push
mov
lods
pcmpgtb
push
stc
jmp
loope
or
cmp
test
ds
ret
fs
xor
loop
sbb
rolb
inc
data16
dec
adc
andb
hlt
fwait
xor
sbb
sub
jmp
andb
add
add
stos
outsb
cmp
shll
pop
push
scas
add
dec
lods
jb
sub
pop
je
adc
loope
sbb
jg
ret
jecxz
lea
pop
cmpsl
mov
std
lcall
adc
add
xchg
jp
icebp
jmp
les
bound
xor
and
dec
andb
push
inc
add
add
add
sbb
jmp
mov
test
cld
unpcklps
mov
dec
stc
bnd
in
push
or
push
decb
call
cmp
inc
loope
rcrl
mov
cwtl
stc
push
inc
jae
movsb
push
or
std
inc
subl
pop
test
xor
xchg
repnz
pushf
pop
movb
cmpsl
xor
push
movsb
testl
add
add
adc
pusha
add
sub
push
or
inc
add
call
addl
dec
rcrb
mov
in
push
jb
push
xor
insl
hlt
aad
xor
mov
divl
push
push
cld
mov
or
cmp
or
and
int3
jb
negl
add
xchg
leave
aas
xchg
stc
push
jbe
jnp
icebp
out
dec
push
and
cmp
and
movsl
jecxz
jp
pop
jecxz
data16
lods
xchg
test
pop
xor
jno
leave
mov
cmp
stc
xchg
sub
lock
add
test
lea
and
std
clc
icebp
jns
mov
loope
in
addr16
add
loope
cmp
or
mov
cmpsl
add
dec
rcrb
test
or
sub
jp
push
das
xor
mov
ds
lods
xchg
sbb
jo
or
ja
fcoml
out
loop
cmp
push
mov
fwait
iret
jb
xchg
fiaddl
and
cli
mov
loopne
fiaddl
leave
leave
xor
add
add
cmpsl
push
adc
ljmp
jmp
out
out
hlt
cmpsb
test
sbb
cmp
aam
cmpsl
jae
cld
stos
sbb
add
out
xor
bnd
mov
xor
pushf
add
adc
jg
mov
aad
jmp
push
mov
and
daa
aas
jo
add
add
adc
fimuls
aas
subl
xchg
jae
test
or
cmp
xchg
das
test
js
test
and
and
sti
or
ds
xor
inc
icebp
aaa
mov
dec
std
mov
syscall
add
jo
repnz
stc
xor
sub
push
cwtl
test
add
add
push
and
mov
orl
flds
int
jo
sbbl
and
test
jge
pop
jg
or
push
addl
sub
or
cli
out
idiv
push
jp
lcall
sub
inc
mov
inc
insl
in
adc
inc
addr16
cmp
mov
sarb
push
call
push
mov
add
in
mov
mov
mov
dec
push
stc
sti
mov
adc
stos
and
mov
int
rclb
icebp
out
xchg
fyl2xp1
lahf
mov
aad
mov
std
test
dec
cmp
mov
fnstenv
cwtl
mov
adc
pop
stc
jnp
xchg
clc
outsl
jle
sbb
add
xchg
rcrb
cmp
shlb
push
adc
xor
mov
out
xor
push
das
jmp
enter
leave
cmp
jmp
ja
inc
adcl
xor
outsb
dec
sbb
divl
push
in
pop
cmp
inc
arpl
in
dec
fmulp
xchg
pop
aam
mov
jge
loop
lods
xlat
out
and
sbb
sub
add
add
cmp
push
daa
rorb
mov
add
and
jl
ljmp
sub
dec
sub
sbb
mov
cld
xor
or
int3
inc
jge
and
stc
dec
cli
mov
sbb
aas
test
daa
inc
add
ds
bound
test
add
add
mov
mov
jp
stc
out
popl
out
dec
call
dec
adc
jmp
xor
ljmp
test
mov
xorl
ds
inc
sti
orl
dec
add
pop
or
stc
les
xchg
add
test
add
push
testl
push
adc
je
sbb
repz
xor
fadds
mov
sbb
mov
inc
jnp
jge
mov
push
add
test
jmp
sbbl
movsl
xor
sbb
hlt
repnz
and
scas
movsb
xchg
dec
adc
mov
imul
mov
in
ljmp
xor
push
or
loop
stc
xor
or
hlt
movsl
pop
std
aas
and
or
push
mov
rcll
in
mov
sub
stc
push
sbb
aad
stos
jmp
call
scas
pop
or
push
or
dec
hlt
fidivrl
test
add
jnp
adc
sarl
inc
aas
arpl
add
ret
addl
mov
dec
lds
test
lds
sbb
aas
push
les
push
fistpl
or
sahf
or
ds
je
jmp
inc
and
out
xor
fwait
add
out
je
lea
mov
stc
out
mov
mov
add
icebp
push
push
les
add
push
dec
pushf
or
shl
cmp
add
aas
xor
add
jmp
movsl
xchg
stc
cmpsb
movsb
jle
rcll
iret
daa
mov
add
pop
aas
je
stos
pop
add
fistpll
test
mov
push
stos
popl
cmc
jmp
jae
movsb
xchg
or
inc
add
add
add
jg
ret
add
mov
das
std
sub
stc
out
mov
cmp
out
test
sub
inc
add
cli
add
test
or
cmp
dec
lea
xchg
dec
cmpl
call
mov
sbb
and
cld
call
add
add
idiv
xchg
clc
push
addl
call
xor
cltd
repnz
inc
push
dec
push
dec
call
andl
insl
jle,pt
inc
cmp
xor
xor
fstl
movsl
jl
aas
and
or
divl
std
and
std
clc
icebp
xchg
stc
add
add
mov
xor
cmpsl
in
lahf
or
stc
mov
in
cmpsb
sbb
test
popl
or
pushf
jle
adc
imul
out
std
push
scas
add
cltd
fldcw
rcr
xchg
add
dec
sbb
and
sub
adc
dec
or
incl
mov
lods
lahf
popf
mov
add
sbb
pop
inc
ret
sub
jecxz
fcoml
mov
into
xor
adc
pop
ret
cmpsl
push
cld
mov
clc
sahf
add
loopne
mov
ret
and
insl
xor
mov
pop
sub
mov
out
mov
push
daa
ss
jbe
add
pop
call
and
mov
aam
stos
mov
outsl
or
add
add
adc
cmpb
out
or
add
sub
add
push
aaa
mov
stc
ficoms
sbb
test
lahf
outsb
call
fs
adc
xor
xchg
aaa
divl
xor
adc
and
test
xor
mov
and
sbbl
orl
test
add
add
or
stc
push
hlt
test
push
cld
mov
das
outsl
jg
daa
aas
and
bound
test
mov
jno
shlb
jnp
aad
sbbl
add
push
xchg
dec
ret
sbb
dec
xor
xchg
push
mov
inc
adc
lret
xor
jbe
call
xchg
cmp
add
dec
mov
in
popa
dec
jnp
or
mov
mov
add
movsl
inc
add
dec
adc
sti
pop
out
jb
push
pushf
pop
bound
and
aam
sbb
jmp
xchg
adc
rolb
and
sub
stc
scas
iret
and
popf
pop
in
icebp
addl
cbtw
jns
add
add
std
push
cltd
bound
into
lcall
popf
xor
xchg
or
adc
cmp
push
xor
aam
nop
gs
out
xchg
std
call
adc
lea
std
jl
mov
jb
sbb
in
sub
aas
outsb
mov
fldt
out
jl
lock
or
dec
out
or
sbb
add
dec
lahf
jb
pop
aas
out
cltd
adc
pop
xchg
out
rcll
daa
aam
mov
lock
lahf
add
xor
inc
pop
dec
push
out
mov
jge
lcall
cmpsl
jg
js
mov
outsl
add
lock
pop
or
aas
pop
adc
dec
mov
aaa
imul
cmp
mov
fsubl
inc
jmp
add
add
stc
push
stos
hlt
pop
push
mov
in
push
push
push
jge
sub
xchg
inc
add
pop
bound
cmp
jl
push
sub
xchg
mov
stos
push
sub
or
cmpsb
jmp
lea
jb
or
aas
add
and
xchg
xor
add
xchg
stos
push
add
add
mov
pusha
dec
fwait
jge
cmp
xlat
cmp
push
xor
call
test
inc
add
jmp
jp
xor
inc
adc
data16
mov
bound
dec
test
dec
call
mov
mov
pop
add
push
hlt
std
out
lea
jae
push
add
incl
add
lcall
clc
dec
in
sbb
std
notl
in
or
sub
jge
stc
aas
addl
cmp
ret
cld
in
test
push
call
rclb
adc
aas
xor
sub
std
dec
mov
cmp
xor
inc
stc
sti
add
test
add
js
fstps
dec
iret
xor
or
adc
addb
push
push
cmpsl
and
add
adc
inc
xor
inc
adc
cwtl
sbb
add
out
addr16
push
and
push
cmp
call
fstpt
cmp
mov
dec
aas
or
and
cli
push
jle
xorl
add
add
mov
xlat
push
test
mov
jg
cmpsl
mov
pop
inc
sub
xor
cmp
fs
lock
dec
add
cli
mov
xor
stos
mov
jg
adc
out
sbb
cmp
xchg
inc
lret
sub
mov
test
mov
xchg
mov
call
movsb
add
add
mov
dec
push
in
add
pop
xchg
cwtl
les
or
in
push
and
repnz
call
jb
daa
pop
daa
push
aad
out
pop
in
repz
fs
or
add
push
sbb
xchg
inc
add
inc
orb
iret
ds
jno
imul
in
cmp
call
pop
test
stos
je
shlb
divb
movsl
lods
in
mov
inc
jne
cmp
mov
push
call
add
in
push
jge
mov
jecxz
inc
testl
ljmp
sbb
aad
dec
cmpsl
test
dec
divl
push
divl
lcall
jge
ss
lock
mov
push
stc
sti
test
add
mov
addl
cmp
cmp
mov
loopne
loop
fsubrs
sub
push
rolb
xor
cmpsl
repz
test
and
lds
aad
add
test
add
and
adc
and
lret
stc
popf
sbb
push
jne
add
andb
dec
add
add
mov
fyl2xp1
mov
mov
inc
inc
mov
and
sub
xor
in
in
add
ds
cli
data16
add
call
int3
mov
jp
or
or
mov
jae
inc
das
mov
daa
mov
daa
sbb
dec
adc
sub
fs
pop
sub
xor
push
pop
sbb
aaa
push
cmc
inc
and
stos
daa
and
mov
cmp
int3
xor
int3
push
xchg
fistps
xor
jg
loop
xor
cmp
les
imul
xchg
add
pop
add
lea
or
inc
loop
or
adc
rolb
icebp
push
movsl
jo
loopne
jne
in
add
cmp
loop
sarb
ds
daa
add
in
and
add
sub
add
out
push
fimuls
or
out
add
daa
or
subl
or
sbb
out
out
jmp
stc
cmp
xchg
stc
rcll
stc
into
test
inc
add
push
lea
adcl
add
jg
idiv
inc
std
add
mov
add
in
adc
pop
inc
push
mov
clc
cmp
out
mov
mov
sahf
cli
xor
rol
inc
dec
mov
in
add
inc
add
nop
sti
mov
stos
outsb
add
and
ret
push
and
or
pop
or
and
mov
push
incl
add
idivb
std
jae
sub
push
jmp
and
push
jmp
cmp
std
and
std
clc
mov
mov
je
push
jne
cmc
pop
add
push
fdivl
sbb
mov
mov
mov
clc
out
or
push
stc
call
mov
push
dec
mov
sti
incl
add
mov
loope
xchg
or
sub
jl
popf
mov
dec
add
testl
enter
dec
pop
jge
add
shll
in
mov
lcall
add
sub
out
jbe
jnp
ja
jae
enter
enter
add
daa
dec
add
add
cmc
mov
sbb
sub
sub
into
ja
adc
push
enter
jmp
jbe
jnp
pop
fs
sti
hlt
jnp
jle
repz
cmp
and
add
pop
xchg
inc
mov
adc
in
push
cmp
popa
mov
das
mov
xor
cmc
pop
mov
psubw
jbe
icebp
or
aaa
jno
or
add
add
sub
rorb
cmc
das
adc
loope
stc
outsb
fwait
or
daa
ret
hlt
cli
push
out
mov
into
movsb
jne
insb
call
dec
inc
push
dec
outsb
push
out
inc
gs
mov
cmp
mov
mov
rolb
jge
add
imul
jge
jne
lea
dec
push
mulb
pop
test
add
shrb
add
fisubl
cmp
stos
add
dec
shlb
je
iret
cmp
invd
call
xchg
mov
push
inc
jle
xchg
pop
addb
dec
mov
or
inc
xchg
idiv
or
call
lea
stc
addr16
push
repnz
call
add
add
pop
ret
sbb
sbb
in
mov
stc
jae
stc
and
sbb
xor
pop
fsubl
sti
loop
in
hlt
jg
mov
add
xor
adc
sti
fldt
jb
test
mov
sarb
dec
and
sti
test
jp
jo
js
sub
sti
jl
cwtl
std
jae
add
and
sub
inc
scas
stc
scas
ds
mov
les
push
stos
out
sub
popf
les
lea
aam
jg
roll
push
into
xor
or
repnz
push
daa
add
subl
adc
add
adc
pop
sbb
push
daa
add
xor
dec
push
call
adc
ljmp
sub
es
sbb
cs
adc
int
jns
mov
jb
dec
jo
ja
xchg
jmp
or
jae
cwtl
test
push
jae
push
out
mov
call
or
dec
cmp
mov
inc
mov
inc
mov
add
orb
aas
fimuls
aaa
addr16
repz
or
call
jnp
icebp
ja
dec
loope
mov
push
shll
loope
mov
loope
push
sub
dec
inc
add
mov
mov
push
lcall
addl
or
add
add
inc
sub
mov
scas
dec
push
lcall
pop
js
wbinvd
loope
jge
outsb
or
mov
xor
ss
data16
dec
jnp
or
bswap
rolb
cmp
push
addl
mov
dec
push
ljmp
xorl
dec
idiv
push
mov
jo
mov
adc
inc
sbb
and
xor
loop
add
test
pop
cld
jb
int3
incl
int
adc
arpl
inc
and
mov
or
jl
xor
loope
sti
fnstcw
pushf
dec
or
cmpsl
inc
in
filds
in
cltd
mov
or
mov
jne
push
stc
jns
hlt
clc
sti
fmull
lahf
adc
add
add
aas
out
fdivl
xchg
ljmp
dec
dec
mov
mov
lret
stc
cmp
cmp
mov
leave
idiv
xchg
ljmp
sahf
in
loope
stos
push
outsb
add
jne
adc
aas
out
test
xor
lret
jp
out
ss
add
add
enter
pxor
enter
mov
or
in
push
bound
jno
int
inc
subl
sbb
das
aas
jae
mov
loopne
jmp
jecxz
mov
add
divb
flds
jmp
insb
push
pop
popa
outsl
mov
add
in
cmpsl
clc
sti
jmp
sub
rcrb
add
bound
xchg
sub
filds
xchg
adc
mov
rorb
and
sub
or
cmp
ret
jnp
and
je
sarb
insl
push
or
push
jge
mov
in
push
scas
sub
add
mov
test
punpckhbw
jmp
sti
decl
lods
dec
push
xchg
push
repz
lock
cmovo
enter
xchg
insl
or
xor
cmp
std
test
sub
mov
std
jmp
mov
and
mov
stc
xchg
inc
add
and
std
std
incl
add
rsqrtps
pop
mov
fsts
mov
or
dec
push
cmp
or
inc
fcompl
mov
jge
je
mov
imul
js
cld
cltd
or
mov
pop
clc
stos
add
add
insb
and
mov
jae
lcall
dec
setp
sub
daa
add
repz
inc
mov
mov
add
push
inc
mov
pop
adc
pop
mov
mov
jmp
push
int
iret
xchg
ljmp
or
push
sbb
lods
mov
dec
cmp
aaa
es
add
jmp
shll
xchg
mov
xchg
xchg
jnp
cmp
add
ljmp
sbb
aas
outsb
decb
add
add
add
add
sbb
jno
cmpsb
repnz
shl
jno
jmp
clc
mov
add
daa
add
dec
jo
outsb
cmp
fcompl
jbe
fs
test
aas
add
push
stc
fdiv
dec
inc
jmp
lods
xchg
jbe
inc
sub
inc
out
mov
cmc
scas
add
out
push
cmp
sbb
push
addl
add
push
data16
cwtl
adc
inc
out
scas
inc
fistps
cmpsb
inc
add
shll
in
cltd
into
cwtl
incl
jg
clc
add
ds
adc
cli
mov
mov
sbb
dec
dec
push
subb
call
ret
ss
add
mov
adc
mov
xor
pop
add
js
notl
add
add
dec
inc
add
sti
pop
rcll
rol
cmp
xor
dec
push
adc
enter
push
ret
cmp
inc
inc
or
jne
pop
pop
xchg
mov
test
bound
jmp
adc
cltd
jo
cltd
rcl
mov
in
ljmp
sbb
mov
and
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
aas
add
std
aas
add
or
inc
add
std
aas
add
std
aas
add
int
add
int
add
mov
aas
add
aas
add
int
add
mov
aas
add
lea
add
lea
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
mov
cmp
lea
add
cmp
add
jne
rorb
roll
pop
mov
fwait
rol
push
out
btc
mov
push
sbb
bnd
sti
jg
fwait
inc
jne
or
lret
mov
or
cmp
mov
clc
inc
es
xchg
and
inc
lods
add
mov
push
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
inc
add
mov
inc
add
lea
add
inc
add
jge
add
int
inc
add
inc
add
popf
ret
jp
add
dec
mov
add
add
add
push
inc
add
in
enter
jo
add
cmp
cmc
outsl
cmp
cmc
outsl
cmp
pshufw
jo
add
in
cmp
xchg
in
cmp
add
and
mov
mov
inc
and
std
jmp
cs
and
cs
and
das
inc
and
in
cmp
pop
in
cmp
pop
in
cmp
pop
in
cmp
mov
cmp
mov
cmp
ja
cmp
popa
in
cmp
push
add
and
aaa
inc
and
add
and
cmp
or
add
aaa
inc
and
add
and
cmp
push
std
jmp
cmp
push
std
incl
add
and
aaa
inc
and
std
jmp
cmp
aas
out
and
das
cmp
add
lret
aaa
fs
in
add
mov
fs
jmp
aaa
fs
ljmp
aas
call
aaa
fs
in
and
out
aaa
in
jnp
in
or
push
aas
push
xor
cmpsb
or
aas
inc
xor
ds
xor
pop
xor
bound
add
add
aas
pop
xor
ds
or
aas
arpl
in
push
xor
testl
aas
dec
xor
mov
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
dec
call
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
call
add
add
aas
add
daa
aas
add
daa
aas
add
hlt
call
daa
aas
add
daa
aas
add
sar
call
daa
aas
add
daa
aas
add
sar
call
daa
aas
add
cmp
sarb
add
cmp
add
cmp
add
cmp
add
std
cmp
add
cmp
mov
cmp
add
mov
add
cmp
add
cmp
add
cmp
add
add
jge
add
xlat
mov
add
cmp
add
add
mov
add
cmp
cmp
add
cmp
and
std
jmp
std
jmp
std
jmp
int3
aas
and
std
jmp
std
incl
add
and
std
jmp
int3
aas
and
std
jmp
std
jmp
std
jmp
int3
aas
and
std
jmp
std
jmp
std
jmp
int3
aas
and
std
jmp
std
jmp
std
jmp
lret
aas
and
std
jmp
std
jmp
std
jmp
lret
aas
and
std
jmp
std
jmp
std
jmp
lret
aas
and
std
jmp
std
jmp
out
add
add
inc
fs
out
and
out
and
out
and
pop
arpl
add
out
and
out
and
pusha
arpl
add
out
and
out
and
aam
sbb
out
and
out
and
out
and
out
ds
and
out
and
out
and
out
aas
out
and
out
and
out
and
xor
add
add
aas
out
and
out
and
out
and
ljmp
aas
add
daa
aas
add
daa
aas
add
sbb
jmp
daa
aas
add
daa
aas
add
sbb
jmp
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
mov
add
daa
aas
add
daa
aas
add
dec
inc
add
ret
add
inc
add
dec
inc
add
jno
cmp
cmp
inc
add
or
add
add
inc
add
std
inc
add
or
add
add
inc
add
inc
add
int
add
aaa
fwait
inc
add
inc
add
int
add
addr16
inc
add
inc
add
lea
add
inc
add
jge
add
lea
add
data16
jmp
std
jmp
std
jmp
mov
and
std
jmp
std
jmp
std
jmp
mov
jmp
std
incl
add
and
std
jmp
mov
and
std
jmp
std
jmp
std
jmp
mov
and
std
jmp
std
jmp
std
jmp
cmp
and
std
jmp
std
jmp
std
jmp
xor
and
std
jmp
std
jmp
std
jmp
cmp
and
std
jmp
std
jmp
out
and
out
xor
out
and
out
and
out
add
add
popf
cmp
aas
out
and
out
and
out
and
lea
repnz
and
out
and
out
and
xor
push
aas
out
and
out
and
out
and
sbb
xor
out
and
out
and
out
and
pusha
xor
and
out
and
out
and
and
and
out
and
out
and
inc
jb
add
in
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
mov
aas
add
daa
aas
add
daa
aas
add
stos
call
daa
aas
add
daa
aas
add
pushf
call
daa
aas
add
daa
aas
add
dec
sbb
jmp
daa
aas
add
daa
aas
add
add
add
add
aas
add
daa
aas
add
daa
aas
add
sbb
jmp
daa
aas
add
lea
cmp
jge
add
lea
add
inc
or
inc
add
add
dec
cmp
inc
add
cmp
add
test
inc
add
inc
add
cmp
inc
add
add
or
cmp
inc
add
cmp
add
cmp
add
inc
add
cmp
add
cmp
add
push
inc
add
das
inc
and
std
jmp
std
jmp
das
inc
and
das
inc
and
std
jmp
std
jmp
das
inc
and
das
inc
and
std
jmp
std
jmp
das
inc
and
das
inc
and
std
incl
add
and
std
jmp
adc
push
adc
data16
jmp
std
jmp
adc
mov
inc
and
std
jmp
std
jmp
adc
mov
inc
and
std
jmp
std
jmp
adc
scas
adc
data16
jmp
out
and
aas
adc
in
out
and
jmp
and
jg
in
movlhps
ds
and
in
add
add
and
pop
push
in
das
push
in
out
and
jmp
adc
in
out
and
ljmp
ds
adc
and
out
add
adc
fs
out
and
lock
pop
adc
aas
pop
push
fs
out
and
in
add
mov
xchg
sbb
call
daa
aas
add
add
add
jmp
daa
aas
add
daa
aas
add
pushl
sbb
call
daa
aas
add
cmp
call
daa
aas
add
pop
call
daa
aas
add
push
aaa
call
daa
aas
add
push
call
call
daa
aas
add
add
add
call
ret
inc
add
cltd
adc
push
adc
int
add
ret
add
cmovo
xchg
cmovo
lea
add
and
inc
add
inc
add
add
inc
add
inc
add
push
inc
add
shll
add
inc
add
ss
add
loope
inc
add
inc
or
inc
add
xor
add
inc
add
cld
inc
add
aad
inc
add
push
inc
and
std
jmp
std
jmp
sub
out
or
and
std
jmp
std
jmp
sub
dec
or
jmp
std
jmp
sub
out
das
inc
and
std
jmp
std
jmp
sub
dec
xor
data16
incl
add
and
std
jmp
sub
out
cs
and
std
jmp
xor
dec
sub
data16
jmp
std
jmp
and
inc
and
std
jmp
lock
arpl
fs
pop
adc
add
in
add
repz
adc
add
out
add
ret
xor
ds
adc
ds
and
repz
add
and
xchg
xor
ds
adc
and
call
add
out
and
out
and
out
and
out
and
adc
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
std
cmp
add
cmp
add
int
add
int
add
mov
cmp
add
int
add
mov
cmp
add
lea
add
jge
add
lea
add
jge
add
jge
add
dec
cmp
add
cmp
cmp
add
dec
cmp
add
cmp
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
push
dec
std
jmp
int
hlt
insl
int
hlt
movsl
int
hlt
gs
add
mov
or
iret
or
out
or
fisttps
decl
out
or
das
or
aas
or
decl
rcl
sub
outsl
or
xlat
pop
or
xlat
aas
or
das
or
xlat
add
add
or
xlat
iret
or
xlat
outsl
or
xlat
pop
or
jg
xor
outsl
or
iret
das
or
iret
aas
or
iret
decl
ror
ud2
stos
iret
out
or
lea
xor
shll
insl
repz
xor
jecxz
xor
fisttpl
xor
jmp
xor
jecxz
xor
fisttpl
in
hlt
cmp
cmc
add
add
sub
int
sbb
aad
or
sub
aad
xor
aam
xor
mov
xor
je
xor
push
push
dec
push
pop
xor
jne
xor
jne
xor
jne
xor
jne
xor
xchg
jo
ss
jo
mov
outsl
jne
xchg
jno
ss
jno
add
add
jo
shll
ss
jo
ss
in
mov
cmc
shrl
aaa
shrl
aaa
loope
and
aaa
adc
aaa
adc
aaa
and
aaa
mov
jne
adc
aaa
adc
aaa
mov
outsl
mov
push
jo
aaa
adc
aaa
loope
in
xor
aaa
push
imul
sub
add
or
aad
cld
fwait
aad
cld
mov
pop
in
mov
aam
pop
fcmovbe
mov
fwait
dec
mov
aad
cmp
aad
cmp
aad
sub
aad
sub
aad
sbb
or
jp
sub
sbb
dec
std
xor
pop
in
cmp
imul
jnp
fcmovbe
mov
aad
dec
mov
mov
add
add
xor
fldt
adc
sti
sbb
or
or
or
or
or
fstpl
or
scas
or
fiaddl
dec
out
and
repz
xlat
ficoml
or
fidivrl
or
fiaddl
or
pop
xlat
ficoml
or
pop
daa
fildl
add
or
fistpl
pop
fistl
pand
pop
ficompl
aas
mov
fcmove
or
mov
or
sbb
jle
ss
outsb
aaa
xor
lds
xor
movsl
dec
divl
xor
inc
xor
out
mov
jge
cmpsb
xor
jge
xchg
into
dec
stc
jmp
daa
aas
add
mov
xor
fistl
xor
jmp
xor
jecxz
xor
lea
xor
imul
arpl
jmp
daa
aas
add
or
js
aaa
int
lea
cmc
js
aaa
in
js
aaa
cmc
js
aaa
jmp
mov
push
push
inc
cmp
add
fisubl
xor
cmp
jb
cmp
addr16
shlb
cmp
jo
cmp
push
jno
cmp
pop
jno
ds
jo
ds
jb
aas
mov
dec
push
inc
add
es
xor
jae
xor
outsb
xor
lret
push
int3
adc
sub
aam
add
add
rorb
xlat
cmp
stc
xlat
cs
movsb
shrb
stc
shlb
and
jmp
int
push
push
iret
push
ss
bound
push
into
jne
into
test
out
xchg
push
stc
into
mov
cwtl
iret
rclb
mov
rcrb
testl
iret
dec
mull
iret
jno
pop
rolb
add
add
jne
mov
or
rcrb
adc
rcr
adc
xchg
adc
insb
adc
dec
adc
into
or
stos
into
les
outsb
into
push
adc
into
pop
adc
int
adc
int
adc
int3
inc
adc
fistl
fstpt
dec
fcmovne
xcrypt-ctr
cmpsl
fucomi
paddq
testl
clc
lret
dec
pop
jnp
mov
pop
int3
add
add
push
nop
int3
push
push
xor
xchg
add
inc
int
add
add
jno
sub
xor
imul
cmp
inc
imull
xor
mov
inc
imul
repnz
cmp
pop
out
cmp
imul
std
pop
cmp
shl
or
test
hlt
push
cmp
add
add
pop
cmp
ljmp
aad
cmp
testb
out
add
sub
add
divl
das
dec
xlat
dec
xor
shrl
insl
imul
insb
mov
out
jmp
xor
insl
test
stc
insb
lods
xor
insl
fnsave
outsb
inc
xor
jb
sbb
jae
cmp
add
add
enter
adc
imul
pop
imul
cmp
jns
cmp
cmp
mov
mov
cmp
js
cmp
js
cmp
jp
cmp
les
in
test
in
ret
les
pop
push
and
and
dec
dec
mov
cmpb
leave
mov
add
add
mov
les
cli
leave
out
push
int3
pop
pop
inc
lret
xor
femms
lret
fisttpl
push
leave
adc
gs
cmp
fwait
leave
inc
lock
enter
iret
nop
pop
shlb
push
add
dec
mov
lret
arpl
push
xor
jnp
in
loop
mov
ror
adc
out
and
cmp
aas
inc
rcrb
fcmovbe
add
add
or
xlat
pop
or
fnstcw
or
dec
fadds
pop
stc
lret
xor
fwait
int3
add
gs
inc
add
iret
adc
add
rorl
add
inc
shrl
add
rorb
add
shr
add
iret
sbb
and
push
add
cmp
sub
push
inc
aam
aam
add
cltd
push
push
aam
push
add
lcall
divb
jbe
mov
xor
outsl
aaa
ljmp
cmp
push
cmp
jo
ss
push
shlb
ret
pop
ss
aaa
imul
pop
sahf
aaa
dec
jno
aaa
pop
imul
aaa
adc
add
add
imul
add
push
aaa
fcmovnu
dec
aaa
inc
aaa
out
in
cmp
stc
sbb
sub
cmp
jne
cmp
js
cmp
je
cmp
jne
cmp
je
cmp
jne
cmp
js
cmp
js
cmp
js
cmp
js
cmp
js
cmp
add
add
cmp
js
cmp
js
cmp
js
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
js
cmp
js
cmp
movl
pop
pop
cld
popw
cli
insb
movups
jp
movb
rol
out
test
test
or
mov
or
mov
add
add
lret
aas
stc
jmp
in
cmc
das
push
leave
add
dec
leave
adc
arpl
sbb
adc
lret
ror
sti
push
lea
and
add
and
int
push
mov
xchg
push
call
int
push
aas
movsl
shr
push
mov
lock
rcl
adc
add
or
xchg
or
mov
add
add
or
add
dec
or
shll
or
rcl
or
rclb
or
xlat
push
or
xlat
decb
xlat
lea
xlat
orb
sbb
cli
sbb
stos
call
or
fmuls
cltd
test
into
aad
or
aad
or
lcall
xor
add
fidivs
adc
xor
loope
ss
loopne
or
loop
jne
sub
leave
fstpl
cmp
daa
inc
stc
xor
aas
add
fdivrs
das
xchg
cmp
push
xor
cmp
cmp
imul
xor
cmp
insb
mov
shrb
cmp
pop
push
cmp
outsl
lea
pop
add
add
stc
jmp
and
add
jb
mov
push
push
pop
xor
push
dec
xor
nopl
mov
and
cmp
push
aaa
adcb
aaa
xchg
stc
aaa
decl
sbb
int
cmp
sub
idivb
mov
or
cmp
or
cmp
cmp
or
cmp
or
cmp
push
push
add
xchg
cmp
push
or
in
push
cwtl
cmp
and
cmp
and
pop
jmp
mov
sub
sbb
std
jmp
int
push
fwait
int
xor
shr
xor
aam
ss
scas
ss
shr
push
and
sub
push
shll
pop
ss
enter
iret
and
daa
int
add
add
lret
rcr
push
pushf
iret
test
dec
mov
lahf
lret
test
lret
sar
daa
cmp
jmp
into
push
sti
int
adc
ds
sarl
sub
push
outsl
out
aam
jno
aad
jae
shlb
jb
iret
outsl
jne
shll
lret
mov
lret
outsb
jbe
lret
xchg
int
jns
int
add
das
js
enter
idivb
lret
out
ret
cmp
add
jb
nop
outsl
push
rcr
outsl
xchg
shll
outsb
adc
test
outsb
popf
rclb
inc
rorb
jmp
aad
jno
add
adc
add
pop
cli
sub
scas
pop
fwait
sub
lcall
add
pusha
xor
fimull
imul
xor
jmp
xor
in
xor
lock
cmp
xchg
ss
fidivs
out
sub
call
fidivrs
cmp
lcall
outsl
adc
pop
pop
push
cmp
insb
sub
cmp
pop
adc
mov
push
cmp
or
add
add
aas
in
out
aas
dec
pop
stc
incl
adc
xor
adc
xor
cmp
test
adc
mov
adc
xor
pushf
xor
or
daa
xor
or
or
xor
sysexit
xor
jl
shll
cmp
jle
clc
or
aaa
sbb
repz
add
add
adc
dec
or
mov
push
std
cmp
int3
mov
rol
mov
dec
sub
jmp
iret
jnp
movsl
rorb
pop
inc
shr
push
xor
lret
mov
or
lds
jo
pop
sub
push
pop
fwait
scas
pop
ffree
adc
enter
add
imul
lods
lock
ljmp
pop
std
jmp
iret
cmp
ss
into
push
movsl
insb
push
rcll
insl
xor
iret
push
jae
iret
cld
jb
iret
fnsave
iret
xchg
jb
shlb
xor
dec
jb
into
loope
loopne
or
jo
int3
cmp
xchg
add
add
ja
int3
aaa
ja
lret
mov
mov
xchg
ja
lret
data16
lret
jbe
lret
stos
lret
add
pushl
jmp
or
adc
lret
dec
leave
imul
jbe
push
xor
scas
pop
xchg
outsl
insb
leave
xor
insb
aad
mov
mov
jb
inc
cmp
arpl
add
add
add
fisubl
cmp
jmp
cmp
jecxz
cmp
cmp
sarb
cmp
sub
loop
cmp
xchg
cmp
mov
fs
cmp
jp
xor
cmp
xchg
cmp
cmpsl
cmp
mov
and
cmp
lret
cmp
cmp
fnstcw
add
jl
ds
sarb
jl
mov
jl
add
add
jl
aas
dec
jl
aas
push
jl
aas
pop
jl
aas
imul
cmpsl
jnp
aas
fdivrs
aas
push
add
push
cmp
std
sar
std
cmp
add
jb
xor
jb
xor
imul
imul
push
xor
xorb
jb
xor
imul
aam
pop
xor
mov
add
add
xor
push
xor
xor
ss
xor
ss
xor
ss
xor
aaa
popa
xor
cmc
xor
iret
xor
or
adc
stc
loope
imul
aaa
sahf
cli
pop
aaa
mov
push
ss
pop
cli
xor
pop
popf
xor
test
jg
ret
cmp
xor
sti
sub
sub
pop
xor
sbb
xlat
xor
push
ljmp
std
cmp
lock
aas
divb
inc
add
inc
pusha
jb
inc
fwait
jb
inc
sbb
mov
cmpsb
jae
aas
lret
jae
inc
sbb
jne
inc
int3
je
inc
cltd
je
inc
xor
inc
or
inc
call
jne
inc
lcall
inc
push
jne
inc
add
add
out
or
out
outsl
xchg
xor
scas
xor
outsl
or
sbb
outsb
cmpsb
xor
jno
inc
icebp
les
repz
xor
pop
repnz
pop
adc
xor
cmp
xor
xor
xlat
cmp
or
xor
sbb
adc
mov
pop
sbb
add
shll
mov
out
xor
std
jae
mov
in
push
cmp
pop
and
fwait
pop
ss
dec
shll
push
dec
pop
aaa
cs
leave
cmp
scas
xor
ss
sti
xor
stos
bndstx
cmp
jle
cmp
jle
cmp
jle
cmp
in
jge
cmp
sub
adc
add
add
je
aas
js
nop
aas
fdivl
aas
add
add
dec
out
clc
call
cmp
add
pop
xor
imul
push
xor
jno
xor
jno
xor
outsb
sbb
shrb
shrb
mov
insl
xor
insl
add
xlat
push
xor
ja
ss
insb
shll
pop
xor
sbb
xor
cld
mov
add
add
aaa
cmp
out
or
pop
call
fdivrl
rcrb
cmp
ds
jl
mov
inc
cmpsb
cmp
in
clc
cmp
sub
pop
and
cmp
or
jg
popf
cmp
add
cmp
repz
cmp
jmp
cmp
jmp
sub
sbb
xchg
xor
sub
enter
xor
sub
xor
jo
xor
jo
xor
insl
repnz
insl
sbb
xor
insb
out
xor
inc
xor
insb
mov
xchg
mov
dec
outsb
mov
xor
outsb
add
cmc
insl
outsl
xor
imul
lret
cmp
push
cmp
insb
aam
add
add
imul
mov
aaa
ret
aaa
pop
imul
pop
imul
xchg
xor
xor
lds
jl
lret
adc
xor
stc
mov
mov
xchg
xor
jle
in
xor
pop
xor
sub
popf
cmp
dec
mov
cmp
cmp
cmp
sub
cmp
add
and
cmp
or
cmp
add
xchg
clc
out
cmp
xlat
das
stc
adc
aas
add
push
arpl
ficoml
das
mov
cs
push
in
sub
xor
outsl
mov
xor
outsl
bound
outsl
test
outsl
cltd
xor
outsb
mov
jbe
divl
outsb
and
outsb
lcall
add
dec
insl
jne
fildll
pop
insb
xchg
aaa
les
aaa
cmpsl
imul
mov
jae
cmp
jnp
shlb
cmp
jb
cmp
jb
cmp
jno
cmp
sarb
insb
loop
and
cmp
dec
or
inc
ds
cmp
cs
cmp
das
lret
cmp
cmp
add
add
sub
xor
jne
nop
add
xor
icebp
add
dec
ljmp
leave
pop
divb
in
push
xor
outsl
dec
lea
rolb
jnp
add
and
sub
xor
xor
adc
sub
adc
sub
arpl
pop
xor
testl
das
xchg
pop
aas
dec
xor
jae
xor
mov
add
add
imul
aaa
pop
imul
inc
insb
and
cmp
insb
stos
cmp
outsb
or
cmp
out
stos
sub
in
loope
push
xor
outsb
xor
jno
ss
in
das
das
jae
xor
jb
xor
repz
fidivs
sbb
xor
add
aad
leave
xor
je
xor
stc
xor
push
cmp
into
push
jns
inc
push
xlat
aaa
cmc
dec
aas
ss
inc
mov
mov
xor
xor
cmp
adc
les
add
daa
sub
add
neg
jge,pn
ja
mov
push
xor
inc
shll
push
cmpsl
xor
push
aaa
push
add
add
clc
subl
xchg
xor
adc
cmp
loopne
jmp
sub
add
inc
jo
xor
jo
xor
outsl
sub
pop
pop
aaa
lods
outsb
mov
sub
cmp
imul
mov
gs
int
cli
incl
inc
add
dec
jae
xor
mov
mov
xor
add
call
loopw
bound
adc
cmp
sarb
xorl
cmp
repnz
je
aas
adc
push
aas
and
outsb
aas
into
jae
aas
shlb
aas
and
xor
add
sub
add
sub
sub
push
sub
push
aam
out
push
cld
xor
xor
lahf
add
jbe
addb
add
mov
popf
sbb
in
and
das
pusha
adc
das
leave
icebp
adc
sbb
xchg
sub
pop
in
sub
push
adc
cmp
sub
xchg
sub
xor
xor
jmp
sbb
aas
fdivrs
push
jbe
mov
cmp
dec
cmp
data16
cmp
add
insl
data16
gs
cmp
gs
or
imul
pop
imul
insl
imul
push
aaa
out
push
cmp
insb
repz
pop
insb
push
aaa
stos
imul
ret
imul
in
push
imul
pop
push
in
xor
xor
sbb
add
scas
cmp
sbb
cmp
addr16
jge
aas
add
mull
ret
push
mov
insl
push
sbb
add
sub
call
xor
dec
jl
addb
arpl
xor
adc
xor
or
xor
adc
xor
adc
dec
call
mov
jnp
sub
out
add
pop
jnp
aas
dec
cmpsl
cmp
cmp
cmp
out
add
jo
cmp
jo
cmp
jno
cmp
xchg
jno
cmp
jo
cmp
stos
jno
cmp
adc
es
ds
jle
insl
jb
sbb
aas
loopne
daa
aas
mov
jb
aas
inc
jae
aas
cmp
add
add
and
add
jae
xor
jae
xor
jb
xor
adc
inc
jb
add
stc
jmp
std
jmp
sub
dec
xor
xor
adc
sub
xchg
adc
xor
idivb
xor
ljmp
add
xor
push
xchg
aaa
lcall
add
jae
stos
xor
cmp
fidivs
sub
aaa
pop
adc
ss
bound
cmp
cli
mov
mov
cli
sti
ss
repz
ss
pop
push
ss
pop
xor
cmp
outsb
sbb
addr16
sub
sub
sub
sub
sbb
dec
imul
das
add
add
imul
ds
cs
loop
ss
xor
movsl
xor
xor
arpl
lret
arpl
xor
arpl
das
fsubs
xor
gs
adc
xor
xor
xor
xor
add
push
dec
cmp
push
pop
cmp
xor
mov
add
les
ss
or
test
and
test
notl
imull
mov
sahf
xor
push
shrl
push
es
hlt
das
or
xor
ss
das
ss
das
mov
mov
nop
ss
das
pop
pop
enter
call
cs
push
adc
jmp
icebp
inc
cs
cli
subb
add
add
insl
push
xor
xor
push
xor
push
xor
push
xor
imul
pop
imul
push
xor
push
xor
push
xor
push
xor
es
insb
dec
xor
imul
insb
pushf
xor
imul
xchg
ss
data16
and
ss
data16
add
add
cwtl
aaa
jae
popf
aaa
lock
adc
sti
push
dec
cmp
cmp
sub
mov
sbbb
mov
fsubrs
loopne
std
sub
dec
cmp
cs
inc
ds
es
jl
mov
pop
stc
and
xchg
and
mov
clc
add
xor
call
je
push
add
add
das
xchg
push
mov
lret
sub
inc
sub
ret
sub
sub
sub
sub
sbb
out
daa
sub
or
out
ret
add
aas
cld
xor
outsl
sbb
push
outsl
xor
jo
xor
jo
xor
adc
xor
jo
xor
insl
jne
mov
insl
jnp
movsl
outsb
dec
xor
add
cld
push
aaa
sahf
imul
imul
insb
or
ret
imul
insb
inc
cmp
xor
adc
dec
add
xor
jecxz
divl
mov
aaa
lret
aaa
lret
push
cmp
add
push
xor
adc
xor
out
xor
add
in
pop
aaa
sti
dec
fbstp
movsb
dec
adc
loop
pop
testl
add
cmp
adc
add
xor
push
cmp
and
mov
adc
cmp
hlt
les
xchg
hlt
cli
cmp
hlt
cs
sti
arpl
lahf
push
nop
cmp
inc
out
and
or
cmp
add
cmp
sarl
add
lods
cli
dec
cmp
add
insb
and
add
add
or
adc
shrb
xor
insl
xorl
outsb
movsl
xor
out
xor
outsb
cli
xor
xor
outsb
and
push
outsl
xor
push
outsl
xor
aas
outsb
dec
xor
outsb
push
xor
outsb
pop
xor
outsb
jbe
mov
outsb
xchg
xor
outsl
mov
cld
outsb
or
addr16
xor
addr16
xor
addr16
mov
xor
add
jbe
mov
lods
xor
fdivl
dec
sbb
xor
pop
xor
sbb
xor
adc
xor
icebp
sub
mov
pop
arpl
pop
mov
sub
sub
cmp
push
sub
lret
sub
inc
sub
scas
sub
or
and
add
and
add
add
loope
jb
xchg
daa
shll
jne
jp
sbb
es
lcall
and
out
icebp
push
mov
and
lret
xor
ds
push
inc
xor
js
and
into
push
cmc
arpl
ss
dec
xor
push
shlb
pop
push
sub
push
repz
push
data16
pop
push
sub
pop
mov
pop
aam
add
add
sub
pop
pop
in
add
sub
xchg
sub
pop
out
cmp
lret
add
divb
decl
xor
dec
lds
cwtl
dec
pop
xor
dec
add
push
dec
das
add
push
das
shll
das
push
xor
das
aam
test
mov
shrb
adc
sub
adc
mov
hlt
mov
add
out
gs
inc
jbe
push
push
sub
xor
cmp
pop
sbb
sbb
sbb
das
notb
jae
in
sub
icebp
adc
add
dec
cmpsb
aaa
push
dec
aaa
add
cmp
push
jb
subb
fs
in
cmp
add
enter
dec
push
cmp
push
cmp
add
int
cld
incl
push
sub
mov
push
cmp
xchg
push
inc
xor
push
dec
xor
push
push
xor
push
pop
xor
push
insb
xor
push
jl
leave
dec
mov
jmp
dec
lods
xor
push
int3
xor
sub
in
push
push
sub
push
jle
cld
push
es
push
cs
push
cs
ds
and
fisubrl
pop
adc
mov
cs
cmc
or
cld
cmc
and
sbb
sbb
cmp
push
cs
push
mov
jl
mov
cs
ss
and
sbb
fisubrl
pop
pop
dec
sub
pop
mov
sub
xor
dec
xor
dec
jecxz
inc
push
sti
das
pop
push
mov
jo
lret
das
mov
xor
push
xor
rclb
xor
push
jecxz
inc
push
mov
xor
mov
dec
push
xor
xor
push
xchg
xor
cmpsl
xor
mov
js
xor
push
out
add
add
push
xlat
sub
inc
push
xlat
sub
lock
aaa
cs
push
pop
rclb
enter
adc
xor
mov
xor
push
or
cmp
xor
sub
cmp
sbb
jmp
dec
cmp
leave
inc
imul
cmp
test
or
mov
stos
xor
lcall
add
add
mov
xor
push
or
mov
inc
sub
mov
dec
dec
cmp
dec
cmp
leave
aas
imul
aas
pop
cmp
adc
cmp
sbb
add
dec
cmp
add
cmp
cmp
add
or
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
jge
add
lea
add
cmp
add
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
or
inc
add
std
inc
add
inc
add
or
inc
add
std
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
mov
inc
add
lea
add
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
int
add
int
add
mov
cmp
add
lea
add
jge
add
lea
add
jge
add
jge
add
dec
cmp
add
cmp
cmp
add
dec
cmp
add
cmp
add
or
cmp
add
std
cmp
add
cmp
add
std
cmp
add
cmp
add
cmp
add
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
add
add
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
daa
aas
add
add
add
aas
add
or
inc
add
std
inc
add
int
add
int
add
mov
inc
add
int
add
int
add
mov
inc
add
lea
add
inc
add
jge
add
lea
add
inc
add
jge
add
dec
inc
add
dec
inc
add
cmp
inc
add
dec
inc
add
add
cmp
inc
add
or
inc
add
std
inc
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
incl
add
and
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
out
and
fistps
test
xor
add
add
push
out
xchg
xor
aad
pop
sub
out
mov
jne
mov
imul
and
pop
dec
mov
push
jae
xor
mov
aam
xchg
test
xor
jmp
jecxz
dec
jbe
roll
add
hlt
or
fstl
lods
pop
sbb
sbb
cmpsb
mov
xchg
add
add
leave
adc
dec
mov
jl
stos
rcll
ds
imul
push
popf
ss
add
and
jne
jbe
sbb
or
lret
out
ret
inc
jecxz
mov
sbb
pop
iret
xlat
loopne
xchg
fadds
cltd
call
jmp
fisttpl
add
xor
mov
xor
rolb
in
mov
dec
pop
out
scas
mov
push
xor
fcomps
ljmp
xor
push
adc
mov
jmp
xor
orl
or
adc
cmpl
rcrl
mov
lcall
add
add
addr16
mov
dec
cld
insb
dec
add
aam
clc
cmpsl
cmp
push
inc
test
or
stos
insb
cltd
mov
jae
or
call
ret
cmp
xchg
pop
data16
push
push
jp
repnz
subb
addb
mov
adc
lock
cmp
or
andl
dec
add
add
pop
push
pop
cmp
adc
mov
not
es
stos
shll
xor
mov
add
movsb
imul
mov
call
popf
test
movsl
push
xchg
nop
jne
fbld
or
out
mov
mov
bound
arpl
cmp
add
inc
loope
sub
xlat
and
sub
mov
adc
rcrl
outsb
mov
xor
push
sarl
jae
dec
aam
sbb
add
je
pop
xchg
rol
popf
fucomi
xchg
xchg
dec
sub
lret
repz
shrl
sbb
adc
mov
push
jbe
xchg
push
or
add
add
cmp
xor
lahf
rcrb
push
leave
add
les
leave
dec
adc
in
subb
out
out
mov
and
std
inc
pop
incb
inc
lods
gs
or
outsb
lahf
aas
pop
stos
inc
icebp
mov
add
push
pusha
add
pop
dec
enter
inc
add
cld
lods
out
clc
and
add
xchg
insb
sbbl
ret
xchg
dec
or
and
and
call
loope
push
add
inc
pop
sti
cmp
mov
inc
orb
fnstcw
out
and
pop
mov
cmp
loope
nop
dec
out
sarb
cmp
cmp
test
add
add
add
fbld
popf
push
xchg
jne
cs
cltd
inc
xchg
or
add
jp
push
xorl
and
mov
lds
data16
lret
cmp
add
xor
into
adc
hlt
cmp
rcll
rcrl
nop
cmpsb
cs
pushf
scas
xchg
sub
jp
push
imul
out
lret
cli
add
add
jb
int
fistl
jl
icebp
fsubl
aas
sbb
mov
pusha
adc
add
add
ret
xlat
dec
popa
test
xor
addr16
pushf
mov
std
xchg
mov
cmp
push
sti
fistps
les
or
adc
inc
xor
lods
frstor
inc
mov
aam
add
add
pop
sbb
push
add
js
cmp
mov
int3
int3
loopne
lret
int3
fdiv
lret
int3
jo
lret
int3
icebp
mov
push
lahf
jns
mov
dec
ljmp
mov
push
fisubrl
leave
add
or
shlb
test
mov
cld
lahf
test
mov
mov
cmpb
mov
ljmp
mov
addl
add
pop
test
mov
loopne
push
pop
std
push
xor
in
insb
xchg
dec
sub
dec
clc
lahf
insb
clc
mov
std
inc
sub
inc
call
push
pop
std
push
sbb
push
lock
jl
mov
and
dec
sbb
dec
cld
arpl
and
add
sub
std
decb
pop
mov
hlt
pop
ja
jae
mov
lock
add
mov
push
mov
loop
call
cmpsl
cli
or
jno
test
xor
in
lahf
imul
popa
add
or
xor
add
jae
jmp
dec
rorb
repnz
int3
fdiv
lret
int3
jo
lret
int3
icebp
mov
addl
stc
mov
add
jmp
outsb
call
andl
and
jge
push
lahf
jae
push
dec
sub
out
popf
sub
jge
push
xchg
add
cmp
add
sub
insb
addr16
xchg
clc
inc
cld
and
add
getsec
test
mov
cld
subl
jae
mov
cld
scas
xor
push
lahf
push
push
ret
sub
add
add
test
mov
lea
xchg
cmp
in
sti
lret
int3
pusha
repz
int3
pop
repz
int3
jo
lret
int3
shll
cmp
xor
ja
pop
addr16
int3
pop
repz
int3
jo
lret
int3
shll
push
mov
ss
cmp
inc
and
mov
int3
fdiv
lret
int3
lock
int3
push
mov
addl
add
aaa
data16
push
pushl
push
insb
inc
and
inc
clc
cmp
aas
and
inc
clc
push
pop
mov
mov
jl
sbb
inc
cld
scas
jno
push
scas
imul
mov
mov
mov
push
imul
and
add
sub
decb
dec
inc
dec
adc
cmp
cld
and
std
mov
add
fnstenv
std
dec
and
adc
je
int3
inc
add
and
add
aam
rorb
or
int3
fmuls
int3
int3
lock
int3
jno
jmp
sub
add
inc
lret
xor
mov
int3
fmuls
int3
int3
jo
int3
int3
icebp
leave
jmp
orb
sbb
ja
and
test
loope
test
ret
add
add
xchg
lret
cmpsl
incl
mov
out
rolb
add
and
push
mov
cli
jl
and
xchg
cld
cmp
insb
inc
lahf
cmp
pop
out
or
sub
cmc
add
test
leave
dec
lock
clc
aas
xchg
leave
inc
or
lret
lahf
inc
lsl
test
lret
add
add
push
test
movl
push
sub
inc
or
addl
imul
mov
mov
addl
inc
sbb
inc
in
mov
mov
loop
push
lock
push
call
lods
mov
dec
lock
jp
add
ret
hlt
add
test
inc
push
lock
xchg
loopne
popa
fistpll
aas
or
add
ds
data16
inc
std
push
sub
cmp
mov
fidivrs
jae
mov
fiadds
fptan
test
enter
xchg
mov
ljmp
loope
std
inc
xor
inc
hlt
lahf
mov
mov
inc
std
adc
idiv
jmp
test
shlb
jae
mov
jl
add
add
add
imul
test
mov
test
movl
add
test
or
clc
cmp
call
subl
inc
js
sbb
lahf
mov
fadds
push
scas
cmp
ljmp
ret
or
ljmp
loope
jl
add
add
movb
mov
andl
dec
cmp
nop
mov
jl
xor
push
loopne
dec
stc
decl
loop
out
int3
int3
push
jmp
add
lock
cmp
insb
inc
and
inc
clc
cmp
std
aas
and
inc
clc
push
out
std
mov
enter
mov
push
scas
xchg
or
scas
test
push
xchg
xchg
cld
mov
or
int3
add
add
mov
aas
push
inc
and
dec
add
pushf
mov
int3
rol
jmp
inc
dec
lahf
cmpb
ds
jle
mov
lahf
xchg
dec
hlt
scas
xor
pop
dec
xchg
lds
lods
xchg
cld
mov
test
jnp
add
inc
sub
dec
add
add
or
movb
mov
fcompl
push
mov
inc
adc
aas
add
jg
test
lds
mov
testb
inc
sub
mov
incb
pusha
or
int3
pop
or
int3
lock
int3
jno
jmp
add
inc
or
xor
and
add
fs
lahf
insb
cmpb
add
cld
mov
jmp
mov
hlt
push
les
jne
adc
add
and
push
hlt
xchg
cmp
add
sbb
add
add
push
les
add
jg
mov
out
addr16
cmp
push
scas
push
inc
insb
out
jg
and
add
out
cmp
jl
and
sub
add
add
aas
add
and
enter
insb
inc
and
adc
add
subb
test
call
sub
test
daa
xchg
or
mov
cltd
mov
int3
icebp
ret
jmp
jmp
insb
add
cmp
int3
pop
or
int3
jo
int3
int3
add
add
ret
jmp
inc
sub
inc
dec
mov
or
push
test
cmp
cmp
mov
mov
or
add
inc
or
inc
call
and
or
add
xchg
fcmovnb
ret
or
add
and
push
push
notb
popf
jl
mov
fiadds
add
add
test
xchg
call
andl
inc
js
add
and
push
mov
ljmp
lahf
test
setae
insb
pop
scas
jl
subl
call
nop
xor
adc
xor
dec
add
into
divl
test
inc
test
inc
mov
add
daa
xchg
scas
mov
mov
cld
inc
and
clc
subl
dec
mov
mov
jmp
leave
push
in
out
cld
jnp
jl
sub
add
ds
insb
rolb
cmc
call
ret
or
insb
inc
and
jae
lahf
inc
pusha
insb
out
dec
jns
jge
mov
add
sbb
add
add
add
test
xchg
test
leave
inc
xor
hlt
push
lock
inc
and
adc
add
and
test
xchg
data16
arpl
insb
out
add
imul
lahf
jp
push
push
aas
stc
push
je
inc
insb
out
test
dec
fsubrs
push
std
inc
adc
inc
loopne
and
aad
dec
mov
add
loope
dec
mov
jnp
inc
and
call
and
test
shlb
js
test
enter
lahf
add
xchg
push
loopne
jp
inc
and
ds
push
inc
and
or
add
dec
inc
insb
addr16
dec
mov
loop
call
cmpsl
cli
or
call
mov
mov
add
sbb
cmp
jg
add
and
push
lahf
inc
test
dec
mov
pop
insb
inc
and
call
sub
lahf
inc
mov
push
cld
jp
decl
mov
push
mov
arpl
nop
call
and
xchg
adc
add
jl
mov
jnp
inc
and
dec
sub
add
push
adc
jle
push
mov
cld
call
pop
insb
inc
and
shrb
popf
mov
jle
fdecstp
dec
push
add
and
stc
push
jo
inc
repnz
and
add
and
int3
int3
lock
int3
jno
jmp
imul
int3
lock
int3
push
jmp
pop
mov
scas
push
pop
insb
addr16
test
imul
int3
push
jmp
cmp
std
aas
and
imul
call
cmpsl
cli
pop
mov
repnz
nop
data16
ds
call
repnz
add
lret
int3
icebp
inc
sbb
inc
dec
add
and
inc
fdivrl
hlt
add
add
imul
add
roll
add
and
dec
or
aas
call
mov
or
clc
add
or
sub
inc
and
add
and
add
inc
and
add
and
cmp
jl
add
inc
roll
aas
add
cmpsl
xor
out
add
gs
adc
insb
inc
and
pop
insb
out
test
add
add
bound
mov
pop
insb
inc
and
inc
call
loope
test
or
add
cmp
add
dec
xor
popf
insb
mov
sub
inc
and
std
aas
and
pusha
add
adc
jbe
mov
les
ja
addr16
stc
adc
mov
jnp
out
push
call
add
add
lock
jmp
out
test
call
subl
fs
stc
out
dec
push
sahf
arpl
push
call
cmpsl
cli
or
add
push
cld
pop
xchg
lock
mov
dec
fcoml
test
les
outsl
insb
addr16
test
jbe
jnp
addr16
std
inc
rorb
dec
pop
cmp
push
mov
ret
scas
xchg
hlt
add
or
push
mov
cld
add
or
loopne
cmp
insb
out
xchg
ficompl
jmp
in
lahf
xchg
clc
andl
push
cmp
inc
clc
out
xor
in
mov
add
imul
clc
mov
daa
test
mov
add
adc
dec
clc
movsl
jmp
add
test
daa
xchg
clc
xor
mov
std
inc
mov
mov
push
inc
addb
jmp
xor
mov
insb
inc
and
mov
mov
xlat
dec
idivl
mov
popf
jnp
mov
movsl
xlat
incl
and
test
sbb
mov
xchg
mov
add
ds
call
cmpsl
add
sub
inc
and
call
test
jb
xor
fsubs
inc
and
ret
add
sub
addr16
add
inc
insb
addr16
xchg
call
mov
ret
imul
mov
pop
addr16
lret
int3
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
in
popf
repnz
jbe
and
lods
cmc
push
xchg
jno
and
xchg
xchg
dec
cmp
scas
push
jecxz
cmpsb
je
or
out
xchg
iret
loope,pt
push
jno
sub
in
cli
mov
cmovo
les
xor
jns
lret
hlt
mov
fs
mov
sub
jae
inc
shlb
out
jbe
aaa
mov
lods
push
jo
roll
sbb
cli
push
push
xor
add
jb
jns
or
stos
je
xchg
shll
aad
hlt
insl
xchg
jl
adc
inc
push
fwait
scas
out
cmp
add
inc
jno
lods
iret
ret
call
pushl
and
mov
sub
add
shl
and
dec
loop
mov
jl
push
inc
lea
push
aas
mov
cmp
je
sbb
or
mov
add
xor
iret
xchg
cmpsb
out
flds
cmpsb
stos
mov
sbb
iret
cmp
jbe
rolb
pop
xchg
push
movsb
lahf
xchg
stos
sub
or
pop
sbb
daa
sub
mov
inc
rorb
decl
pop
push
mov
outsl
les
push
imul
cmp
inc
fdivr
jle
adc
addb
test
lods
inc
testl
xor
cmp
aaa
sub
push
mov
push
cmpsb
cmp
mov
pop
cmp
std
cld
call
jo
jp
arpl
dec
movsl
mov
in
call
test
scas
sarl
push
stc
mov
insb
mov
lret
pop
ss
jmp
pop
push
test
popa
mov
ja
sbb
and
insl
fdivl
and
and
mov
cmpsb
dec
sub
scas
les
sub
inc
jno
sbb
arpl
mov
loope
stos
dec
xor
and
push
loopne
jl
sub
or
jmp
pop
cmp
or
hlt
test
mov
push
jge
dec
sbb
push
aam
xchg
mov
arpl
mov
shr
mov
popf
sbb
mulb
mov
dec
test
xchg
adc
pop
ljmp
icebp
add
fstps
pop
jns
in
jb
enter
mov
xor
divl
test
gs
mov
clc
push
repnz
notb
ds
push
popf
dec
pop
out
mov
leave
and
cmp
jle
dec
inc
lock
inc
sbb
jg
add
fisubs
add
lea
inc
aaa
dec
adcb
sub
out
xchg
and
lret
scas
push
mov
mov
sbb
movb
lret
mov
call
adc
loope
adc
mov
mov
lds
mov
ret
popf
test
inc
jno
nop
inc
int3
adc
cmp
adc
or
dec
xor
sub
and
ds
dec
sub
sbb
lods
mov
xor
iret
pop
mov
rep
dec
mov
mov
enter
inc
lods
adc
add
jl
sbb
cmpsb
xor
and
icebp
and
and
addr16
xchg
push
test
stos
filds
pop
mov
mov
pop
js
repnz
and
gs
xchg
or
and
imul
inc
mov
inc
adc
mov
les
add
or
sub
ja
scas
push
movsb
pusha
mov
sbb
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
dec
pop
inc
pop
push
inc
push
inc
inc
dec
add
jb
outsb
and
fs
and
and
js
insb
jae
add
add
add
lock
add
inc
add
add
add
add
add
lock
add
pop
add
push
add
dec
add
add
jb
jb
add
je
inc
add
outsb
add
add
insb
add
add
add
add
outsl
add
je
jb
outsl
add
add
je
imul
dec
add
popa
add
add
add
add
add
add
add
add
add
outsb
add
insb
add
add
add
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jae
gs
add
jae
gs
and
je
imul
jb
gs
xor
add
add
xor
add
je
add
xor
xor
pop
add
jae
arpl
jb
imul
add
js
add
add
add
add
add
cmp
add
add
repz
mov
add
add
hlt
add
aam
add
add
hlt
add
call
stc
add
clc
hlt
add
add
add
add
cmc
add
stos
push
add
add
cmc
add
inc
syscall
add
add
jl
add
mov
add
mov
cli
add
ret
add
cli
add
fdivr
add
lock
add
add
add
sbb
add
sub
add
cmp
add
push
sti
add
pusha
sti
add
je
add
mov
add
xchg
sti
add
mov
sti
add
loopne
add
idiv
add
push
cld
add
sub
add
cmp
add
dec
cld
add
data16
add
jb
add
mov
add
xchg
cld
add
cmpsb
cld
add
ret
add
cld
add
fdivrp
add
repnz
add
push
std
add
es
add
inc
std
add
push
std
add
fs
add
js
add
xchg
std
add
mov
add
mov
std
add
repnz
add
std
add
adc
add
incb
incb
push
incb
insb
incb
jle
add
mov
add
movsb
incb
mov
incb
fdivrp
add
out
incb
add
add
adc
add
sub
add
incl
push
incl
jo
add
xchg
add
xchg
incl
test
add
mov
add
into
incl
fdivr
add
incl
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
push
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
syscall
add
add
add
syscall
add
syscall
add
add
add
add
cli
add
mov
add
ret
add
cli
add
fdivr
add
lock
add
add
add
sbb
add
sub
add
cmp
add
push
sti
add
pusha
sti
add
je
add
mov
add
xchg
sti
add
mov
sti
add
loopne
add
idiv
add
push
cld
add
sub
add
cmp
add
dec
cld
add
data16
add
jb
add
mov
add
xchg
cld
add
cmpsb
cld
add
ret
add
cld
add
fdivrp
add
repnz
add
push
std
add
es
add
inc
std
add
push
std
add
fs
add
js
add
xchg
std
add
mov
add
mov
std
add
repnz
add
std
add
adc
add
incb
incb
push
incb
insb
incb
jle
add
mov
add
movsb
incb
mov
incb
fdivrp
add
out
incb
add
add
adc
add
sub
add
incl
push
incl
jo
add
xchg
add
xchg
incl
test
add
mov
add
into
incl
fdivr
add
incl
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
push
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
syscall
add
add
add
syscall
add
syscall
add
add
add
push
gs
fs
imul
gs
imul
imul
jns
add
hlt
add
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
gs
outsl
insl
insl
push
jb
jo
jb
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
push
inc
js
arpl
imul
gs
add
inc
popa
fs
jb
je
push
je
add
add
popa
jae
push
popa
jo
add
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
push
add
enter
inc
popa
fs
gs
fs
je
add
mov
inc
gs
imul
push
jo
arpl
add
popa
je
dec
outsl
bound
push
arpl
add
jb
jo
inc
add
aas
add
outsb
insb
outsl
arpl
imul
gs
outsl
outsb
jae
insb
gs
arpl
gs
arpl
outsb
inc
jne
data16
add
outsl
insb
insb
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
add
xchg
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
sub
insb
fs
outsl
insl
insl
inc
inc
inc
inc
outsb
fs
imul
push
add
and
imul
jae
jne
arpl
add
add
fs
xor
inc
imul
test
inc
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
mov
jo
jb
add
jecxz
inc
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
dec
add
jb
gs
outsl
insl
insl
add
popa
je
dec
jne
gs
add
pop
add
je
jb
jbe
je
push
jb
imul
jne
je
add
add
imul
add
loope
dec
inc
dec
popa
jo
je
imul
add
je
popa
insb
outsb
fs
jb
outsb
outsw
push
add
xor
inc
popa
outsb
arpl
inc
gs
arpl
popa
imul
push
gs
gs
add
add
jbe
inc
imul
jb
addr16
jae
push
add
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
bound
inc
fs
je
insl
inc
add
push
add
arpl
jo
gs
add
xchg
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
adc
inc
jae
imul
gs
push
outsl
dec
outsl
bound
push
arpl
addb
gs
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
inc
add
insb
fs
je
imul
inc
jb
gs
imul
outsb
fs
js
je
push
add
dec
add
je
jns
je
insl
push
outsl
ja
jb
je
je
jae
add
add
je
inc
dec
inc
push
add
lods
add
je
jne
jb
outsb
je
push
add
sub
inc
jne
insb
fs
outsl
insl
insl
inc
inc
inc
inc
outsb
fs
imul
inc
add
add
imul
gs
imul
jae
popa
fs
je
imul
add
inc
outsb
gs
je
inc
outsl
outsb
jae
insb
gs
je
insb
inc
jbe
outsb
je
add
inc
gs
push
dec
outsl
arpl
add
inc
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
imul
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
fs
jo
popa
je
push
gs
jne
arpl
add
pushf
add
je
outsl
insl
insl
inc
jb
popa
imul
pop
add
je
gs
jo
popa
je
inc
add
inc
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
roll
gs
outsl
outsb
jae
insb
gs
imul
add
jb
je
push
jb
imul
imul
push
gs
imul
gs
js
add
gs
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
lea
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
mov
insb
jae
jb
outsb
inc
add
cmp
dec
jne
jo
je
bound
push
je
imul
add
popa
jo
xor
jb
je
test
inc
gs
jne
jb
outsb
je
imul
jns
add
test
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
adc
inc
gs
jne
bound
dec
inc
outsl
outsb
jae
insb
gs
outsl
jne
gs
jne
je
outsb
jae
add
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
xor
dec
jo
outsb
push
jb
arpl
jae
dec
add
je
jns
je
insl
dec
outsb
outsw
add
push
gs
jae
insb
gs
outsb
jo
je
add
add
gs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
je
gs
jo
imul
add
cli
add
je
jb
arpl
jae
outsl
jb
imul
imul
inc
insb
outsl
bound
dec
popa
outsb
fs
add
jmp
inc
gs
outsl
imul
jbe
push
je
imul
add
je
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
outsl
arpl
jae
xor
js
add
inc
imul
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
dec
jae
bound
addr16
jb
jae
outsb
je
push
add
insb
outsl
arpl
outsb
jae
insb
add
fwait
add
je
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
outsb
outsw
add
inc
add
outsb
insl
popa
jo
imul
insb
add
push
jb
arpl
jae
xor
js
push
add
repnz
jne
push
jns
je
insl
inc
outsl
fs
popa
addr16
add
outsl
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
imul
jbe
push
je
imul
add
jb
je
push
jb
jbe
je
push
jb
imul
jne
je
add
sbb
push
jb
jbe
je
push
jb
imul
imul
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
sbb
inc
imul
gs
push
dec
outsl
je
imul
outsl
outsb
add
inc
jb
popa
je
inc
jbe
outsb
je
add
lahf
add
je
outsl
outsb
jae
insb
gs
imul
inc
push
dec
inc
dec
xor
cs
insb
add
add
gs
je
push
imul
inc
add
ja
imul
jmp
popa
je
push
imul
dec
add
je
gs
popa
addr16
add
add
outsb
jae
popa
je
dec
gs
popa
add
test
inc
imul
dec
gs
popa
addr16
add
add
fs
arpl
inc
add
add
fs
jne
jae
jb
add
push
imul
popa
jae
inc
js
add
xchg
add
je
arpl
insb
insb
push
popa
outsb
add
xchg
add
je
arpl
insb
insb
push
outsl
jae
add
push
arpl
insb
insb
push
imul
pop
add
outsb
fs
gs
popa
addr16
add
xchg
add
push
imul
outsl
arpl
add
push
jne
jb
push
je
imul
push
gs
popa
jb
je
outsl
jae
push
add
jne
gs
inc
inc
insb
push
popa
jb
insl
add
mov
dec
jae
push
je
push
gs
gs
push
popa
insb
insb
jo
jo
jb
add
add
imul
jne
dec
fs
add
or
dec
gs
push
outsl
inc
push
data16
add
flds
inc
outsb
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
pop
add
addr16
popa
imul
je
jo
gs
bound
arpl
js
mov
inc
insb
addr16
imul
je
js
add
add
jo
outsb
fs
outsb
jne
add
push
jb
jo
add
popf
add
je
outsl
jns
arpl
add
add
arpl
outsl
jne
gs
jbe
outsb
je
inc
add
je
outsb
jne
je
insl
dec
inc
add
push
imul
outsl
arpl
add
add
jae
popa
addr16
outsl
js
js
add
gs
dec
outsb
jne
je
insl
push
add
push
gs
outsl
jbe
push
jb
jo
add
push
ja
jb
add
test
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
gs
jae
addr16
add
out
add
imul
jae
js
push
add
jo
jns
gs
popa
add
sub
inc
push
ja
jb
jne
push
add
xor
push
gs
ja
imul
fildl
inc
outsb
jne
inc
gs
je
jo
inc
add
add
fs
arpl
insb
gs
je
jb
inc
add
push
imul
gs
insb
dec
outsl
outsl
imul
outsl
ja
rolb
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
mov
insb
popa
je
push
arpl
add
insb
gs
jae
inc
popa
jo
jne
add
roll
dec
outsl
popa
fs
jne
jae
jb
jb
insl
inc
imul
gs
popa
jns
jb
fs
imul
je
imul
add
add
jae
popa
addr16
outsl
js
js
add
inc
insb
imul
arpl
outsb
add
test
inc
fs
outsl
jae
inc
fs
jae
add
add
dec
dec
dec
push
inc
gs
outsb
popa
bound
je
je
jae
and
push
outsl
jae
push
jne
je
gs
popa
add
inc
gs
arpl
insb
insb
inc
popa
jb
outsb
outsw
add
in
add
jne
insb
push
arpl
add
jbe
insb
imul
je
add
push
outsb
fs
gs
popa
addr16
add
ja
push
gs
insb
addr16
je
insl
push
gs
push
add
imul
gs
insb
dec
outsl
outsl
imul
outsl
ja
rolb
jae
arpl
jo
jns
call
insl
push
push
push
imul
mov
ja
fs
nop
add
je
imul
jb
popa
fs
jb
arpl
jae
add
dec
add
jo
dec
arpl
add
sbb
inc
gs
jne
jae
jb
outsl
jae
add
add
je
insb
popa
jae
dec
outsb
outsw
push
add
add
je
insb
je
popa
bound
outsw
inc
add
cmp
arpl
outsb
jne
je
insl
add
jb
popa
je
inc
jne
jae
jb
add
push
gs
insb
imul
push
imul
mov
inc
fs
outsb
popa
arpl
jae
inc
popa
je
add
imul
js
inc
add
data16
je
arpl
gs
imul
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
insb
je
popa
bound
outsw
add
add
imul
jae
addr16
add
nop
add
inc
jb
insl
gs
jb
arpl
cmp
push
imul
jbe
arpl
outsl
je
imul
outsl
outsb
inc
add
push
je
imul
inc
gs
gs
outsl
popa
jb
push
jns
add
push
imul
js
push
add
jg
inc
gs
imul
add
inc
gs
insb
popa
jae
push
outsl
jb
add
dec
add
insb
gs
jae
inc
inc
add
add
je
gs
je
je
add
inc
gs
arpl
insb
insb
push
outsl
jae
add
add
gs
imul
mov
push
gs
imul
outsl
outsl
imul
add
add
jo
imul
add
inc
imul
jae
popa
add
gs
imul
js
inc
add
leave
add
push
imul
imul
add
je
insb
imul
inc
popa
je
add
add
je
push
dec
push
push
dec
outsb
outsw
add
mov
inc
insb
addr16
imul
je
js
add
add
imul
push
add
push
jo
popa
dec
jne
gs
arpl
ret
add
imul
imul
ja
add
add
jo
imul
arpl
add
push
inc
gs
dec
inc
inc
add
xchg
inc
fs
jne
jb
dec
gs
push
gs
gs
add
dec
outsb
jne
gs
jne
je
je
insl
add
push
add
je
insb
addr16
je
insb
dec
inc
add
jae
inc
fs
outsl
outsb
outsb
arpl
jae
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
dec
outsb
jne
popa
jb
outsb
outsw
add
jbe
inc
fs
jb
popa
je
push
je
imul
insb
gs
add
push
push
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
gs
jae
je
add
jbe
jb
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
sbb
addr16
jne
jb
inc
imul
dec
jae
imul
popa
bound
data16
imul
inc
jb
addr16
jne
jb
inc
imul
out
push
dec
dec
outsl
popa
fs
outsb
push
jb
arpl
add
gs
imul
add
ja
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
and
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
add
inc
js
jb
arpl
outsl
outsb
push
add
call
outsl
popa
fs
outsl
outsb
insb
outsl
popa
fs
arpl
dec
jbe
jb
popa
jns
fs
je
imul
add
outsb
fs
js
arpl
popa
bound
add
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
push
push
js
arpl
gs
add
insl
jo
jns
arpl
insb
gs
imul
push
push
js
arpl
gs
js
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
push
add
add
inc
gs
gs
imul
push
dec
inc
jb
popa
je
inc
imul
jns
js
add
mov
gs
outsl
insb
fs
outsl
arpl
imul
dec
inc
jb
popa
je
inc
imul
jns
js
add
daa
add
je
popa
arpl
jae
arpl
je
fs
arpl
push
add
cmp
push
push
js
arpl
add
add
gs
insb
inc
js
arpl
gs
js
add
je
imul
push
jo
arpl
add
add
je
popa
arpl
outsl
outsb
inc
js
add
test
push
dec
inc
imul
je
outsl
outsb
inc
add
jecxz
push
dec
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
add
insb
imul
outsl
outsb
add
imul
je
outsl
outsb
push
add
outsb
add
inc
fs
outsl
push
arpl
je
outsl
arpl
and
push
push
dec
outsl
je
data16
arpl
add
into
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
sbb
inc
outsl
inc
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
inc
add
add
push
jne
jb
push
arpl
insb
gs
imul
inc
jb
addr16
jne
jb
push
outsl
imul
push
push
bound
je
add
je
outsl
insb
fs
popa
je
inc
add
jne
push
dec
inc
imul
jb
outsb
je
add
add
push
jne
jb
push
arpl
insb
gs
imul
push
dec
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
mov
gs
imul
lds
push
dec
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
sbb
push
push
outsl
outsl
imul
arpl
sbb
inc
jb
addr16
arpl
jo
inc
imul
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
ret
dec
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
and
jb
arpl
jae
arpl
je
fs
arpl
inc
js
add
sub
inc
js
jb
arpl
outsl
outsb
inc
add
cmpsl
add
inc
imul
je
outsl
outsb
add
add
je
popa
arpl
outsl
outsb
inc
js
add
jl
push
dec
inc
push
dec
outsl
je
data16
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
dec
inc
dec
dec
xor
cs
insb
add
add
jb
inc
push
sbb
push
je
inc
insl
jo
dec
inc
add
push
je
push
inc
push
pop
add
jb
insl
jo
dec
push
add
push
inc
push
inc
add
jb
je
dec
push
add
adc
push
je
inc
push
add
jb
push
add
inc
push
add
jb
insl
jo
push
add
cmp
push
je
push
push
je
dec
push
add
add
jb
insl
jo
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
push
shl
dec
add
add
add
add
add
add
sub
add
cwtl
add
orb
add
cmp
add
push
shl
dec
add
add
add
add
add
add
dec
add
addb
add
jo
add
push
shl
dec
add
add
add
add
or
add
add
xorb
add
add
add
shl
dec
add
add
add
add
or
add
xor
add
shl
dec
add
add
add
add
add
add
rolb
addb
add
call
add
add
add
addb
add
push
shl
dec
add
add
add
add
or
add
add
add
add
add
shl
dec
add
add
add
add
or
add
add
add
add
add
shl
dec
add
add
add
add
or
add
add
add
add
add
shl
dec
add
add
add
add
js
add
add
add
push
shl
dec
add
add
add
add
or
add
add
cmpb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
or
push
incl
push
add
cltd
add
add
lock
fwait
add
add
sldt
mov
incl
add
add
ud0
add
lock
add
add
sldt
add
add
or
lock
add
add
or
add
add
mov
add
add
mov
loopne
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
cmpb
add
add
test
add
pop
add
add
jecxz
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
add
decl
incl
incl
addb
add
push
pushf
rolb
push
lock
add
rorb
decl
incl
int3
ud0
fwait
int3
ud0
ud0
add
lcall
mov
ud0
incl
add
bndstx
mov
incl
mov
mov
incl
add
psllq
incl
or
decl
incl
mov
add
incl
mov
add
add
incl
addb
mov
lock
add
lock
addb
cmp
lock
add
lock
mov
incl
add
add
add
lock
add
or
add
addb
addb
add
sldt
add
push
lock
or
add
or
add
pushf
rolb
add
add
sldt
add
add
sbb
add
adc
add
add
decl
add
add
or
add
cmp
add
add
add
incl
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
cld
push
add
clc
add
iret
repz
sbb
icebp
and
shl
add
shlb
shlb
shlb
bound
add
inc
sahf
pop
shl
shl
das
fisttpl
sti
incl
add
add
arpl
je
imul
dec
add
jbe
imul
inc
add
outsb
add
add
insb
add
add
arpl
je
imul
dec
add
jbe
imul
inc
add
insb
add
and
push
add
jo
add
or
inc
add
arpl
add
jae
outsl
add
imul
or
dec
add
insb
add
add
add
add
sub
push
add
data16
add
jb
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
jne
insb
add
add
add
add
pop
add
add
add
je
pop
add
add
add
or
inc
add
je
add
jae
imul
jae
add
add
outsl
add
add
add
dec
add
add
outsl
add
je
add
je
and
push
add
jo
add
add
add
popa
add
insb
add
add
outsl
add
pop
add
js
je
add
jae
imul
add
add
add
push
add
jo
add
add
popa
add
push
add
js
je
add
jae
imul
add
dec
add
inc
add
add
js
je
add
jae
imul
add
dec
add
inc
add
add
popa
add
adc
add
add
push
add
jo
add
add
add
arpl
jb
imul
imul
sbb
dec
add
add
popa
add
add
add
add
add
arpl
jb
imul
imul
add
popa
add
push
add
add
add
push
add
jo
add
add
arpl
outsl
add
adc
dec
add
add
popa
add
add
add
add
arpl
outsl
add
add
popa
add
adc
dec
add
add
popa
add
add
add
add
add
add
push
add
jo
add
add
add
add
push
add
jo
add
add
add
add
push
add
jo
add
add
popa
add
adc
dec
add
add
popa
add
add
add
add
jo
add
add
popa
add
adc
dec
add
add
popa
add
add
add
add
insb
add
jns
add
popa
add
adc
dec
add
add
popa
add
add
add
add
add
bound
add
popa
add
push
add
dec
add
inc
add
add
dec
add
dec
add
add
popa
add
sbb
dec
add
dec
add
pop
add
add
add
popa
add
add
add
outsb
add
add
je
and
push
add
jo
add
add
inc
add
add
insb
add
imul
dec
add
pop
add
add
arpl
js
add
dec
add
add
add
push
add
add
or
push
add
outsb
add
add
add
push
add
push
add
outsb
add
add
add
imul
js
add
add
insb
add
add
add
push
add
add
jo
add
or
push
add
add
add
add
insb
add
jns
cmp
push
add
data16
add
jb
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
jne
insb
add
add
add
add
pop
add
arpl
je
imul
dec
add
jbe
imul
inc
add
insb
add
and
inc
add
je
add
jae
imul
jae
adc
inc
add
je
imul
dec
add
jbe
imul
inc
add
outsb
add
add
insb
add
add
add
push
add
add
je
add
popa
add
popa
add
add
add
jae
add
add
adc
add
add
add
sub
add
add
and
add
add
add
call
add
add
add
push
xor
xor
xor
xor
xor
stos
xor
xor
xor
adc
xor
shlb
pushl
add
push
xor
push
xor
aam
loop
pop
xor
xor
xor
xor
xor
xor
mov
xor
cli
pushl
pop
aaa
sbb
and
xor
inc
aaa
dec
aaa
popa
aaa
xorb
aaa
popf
aaa
scas
aaa
mov
cmp
cmp
cmp
jno
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
imul
clc
cmp
sbb
es
ds
ds
xchg
mov
lds
adc
sub
ds
push
aas
push
aas
cmpsl
aas
sarl
aas
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
dec
add
add
xor
or
or
adc
adc
sbb
sbb
aas
xor
push
xor
imul
xor
jl
xorb
xor
xor
xor
xor
xor
xor
xor
add
and
add
aam
fdivrs
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
je,pt
js
jl
cmpb
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
dec
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
rolb
xor
add
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
sub
cmp
dec
cmp
pop
cmp
jo
jbe
jl
cmpb
cmp
cmpsb
cmp
mov
cmp
cmp
call
cmp
push
ds
adc
sbb
push
ds
sub
xor
ss
inc
ds
ds
ds
ds
ds
ds
jb,pt
js
jle
test
mov
nop
ds
ds
mov
ds
mov
ds
sarb
fdivrs
fidivrs
in
ljmp
add
or
push
aas
adc
sbb
and
es
sub
xor
cmp
ds
inc
aas
dec
aas
push
aas
push
aas
pop
aas
bound
push
aas
jp
cmpb
aas
mov
xchg
aas
cwtl
aas
sahf
aas
movsb
aas
stos
aas
mov
mov
mov
aas
into
aas
aam
fidivrl
loopne
out
in
aas
repnz
clc
aas
aas
add
add
add
add
add
or
adc
push
xor
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
xor
jo
jbe
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
xor
xor
jle
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
lock
adc
add
sub
sub
cmp
