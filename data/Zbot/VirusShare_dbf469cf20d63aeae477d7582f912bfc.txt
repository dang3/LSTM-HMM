decl
mov
and
jo
daa
mov
arpl
cld
fwait
push
lods
aam
loopne
xchg
push
mov
in
fwait
addl
fld
dec
in
inc
mov
jb
in
sarb
xlat
inc
cltd
aaa
decl
stc
jb
xor
xor
xchg
out
rclb
andl
fmull
frstpm(287
testl
iret
popl
bound
mov
movsl
addb
jg
stos
loop
adc
mov
or
pop
and
repnz
mov
lcall
jp
dec
mov
js
and
pop
sub
mov
pop
and
cmp
and
adc
cmp
jae
sarb
inc
xor
adc
insb
push
dec
xlat
adc
ljmp
jecxz
test
pop
fcmovu
mov
sub
bound
les
jg
hlt
jmp
incb
or
dec
and
lock
cmp
ss
aas
fwait
sbb
insl
add
decl
pop
sbbl
sub
cli
cmc
push
call
jne
xchg
test
cmp
call
cmp
lock
mov
or
jne
dec
sahf
sarb
loope
jb
xchg
xchg
rorb
sbb
xchg
mov
add
jbe
and
call
xchg
and
ljmp
test
xor
jecxz
stc
sub
cmp
aad
mov
hlt
jp
sbb
ljmp
dec
outsb
mov
mov
shlb
out
mov
jp
popa
pop
ds
pop
ret
out
test
arpl
push
or
xlat
addr16
rclb
adc
adc
pop
stc
jmp
add
ret
and
cmpsl
pop
bound
add
xor
aaa
lods
stos
pop
lcall
jbe
cmp
pop
jns
notb
insl
aam
mov
cmp
cmpsl
pushf
ss
xchg
js
cmp
xchg
mov
dec
fidivl
bound
cltd
loopne
push
loopne
test
movsb
pop
sahf
cmp
out
popf
adc
out
lahf
test
push
pusha
cmc
daa
mov
fldl
call
cmp
jae
cbtw
cltd
cwtl
aaa
fwait
lcall
push
pushf
sub
outsl
inc
stos
insl
imul
decl
jae
bound
pop
adc
fcomp
aaa
aam
xchg
mov
pop
inc
pop
push
daa
inc
push
xlat
loop
jo
ficoml
jae
stc
jp
jns
mov
sbb
arpl
fistl
or
sti
leave
test
addb
add
xchg
add
jmp
call
roll
jg
jge
andl
xchg
sbb
jmp
jbe
sbb
and
movsl
push
js
into
mov
sub
outsl
sbb
cmp
testb
call
stc
pop
mov
std
mov
loope
cs
jo
int3
js
outsl
xor
inc
jb
ljmp
aaa
movsl
ffree
rcrb
push
shrb
repnz
xchg
push
mov
call
mov
jg
mov
sbb
cmp
jnp
clc
clc
incl
inc
lock
push
dec
fwait
into
movsb
in
fisttps
mov
mov
sub
sbb
insl
push
cmp
loop
xchg
jecxz
sub
or
decl
cmp
xor
cmpsb
inc
jns
je
sub
dec
xor
mov
ljmp
lds
fcoml
jae
inc
int
push
cli
stc
popa
aam
dec
mov
or
jnp
sbb
test
cmp
cmpsl
cmp
popa
aaa
xorb
mov
mov
popl
lcall
push
fdivrl
fisttpl
add
inc
adc
mov
inc
ss
and
outsl
test
add
incl
ret
jmp
lahf
and
js
lret
mulb
sbb
xchg
stc
jmp
jns
mov
xchg
movsb
sub
sti
dec
lods
inc
out
pop
ret
aad
les
mov
inc
add
xchg
dec
daa
js
lock
push
fnstsw
outsl
nop
outsb
mov
pushf
adcb
sbb
push
aad
inc
into
push
nop
adc
fwait
aad
ds
jno
test
inc
mov
xchg
mov
gs
push
enter
sbb
sar
js
mov
cmp
xchg
lea
cwtl
adc
out
clc
out
add
mov
gs
mov
shlb
lcall
ljmp
mov
dec
sub
imul
dec
push
push
sub
push
sbb
push
mov
sbbb
pop
in
std
pushf
subl
je
icebp
std
das
mov
jne
cld
jno
jp
pop
mov
rolb
ficoml
push
push
fdivrl
push
ds
decl
dec
push
push
cmp
pop
add
std
cmp
lods
cmp
xchg
sbb
mov
insl
push
xorb
push
shl
jmp
mov
jbe
lret
pop
clc
xorl
xchg
pop
mov
add
decl
ds
ljmp
inc
cld
jo
sbb
jb
push
cmp
push
push
jne
sti
jae
adc
das
push
stc
js
shl
hlt
lock
mov
scas
xchg
decl
or
sbb
ficoms
add
mov
pop
in
jnp
mov
dec
inc
inc
jne
iret
lods
test
jnp
sub
jmp
fabs
test
jg
imul
jg
adc
popf
or
mov
push
lods
lea
icebp
stc
rclb
jp
pop
out
std
adc
push
das
dec
adc
add
cli
pop
pop
call
mov
jne
inc
jg
mov
enter
cld
repz
xchg
cwtl
push
sar
jmp
pop
subl
dec
aam
pop
sbb
sub
mov
dec
cmp
xchg
in
jb
and
cli
jp
lret
ljmp
sar
das
push
pop
clc
jecxz
push
or
and
popf
cmp
mov
insl
fstpl
cli
dec
cmc
dec
adc
pushf
xlat
mov
or
adc
loopne
pop
fidivrl
imul
ljmp
push
sub
jne
stos
rorl
or
or
pop
adc
test
push
scas
ljmp
lds
aam
mov
ljmp
sar
jge
fmulp
push
xchg
inc
notb
sahf
jg
xchg
xchg
sar
lcall
incb
fisttps
in
inc
jb
daa
pushf
add
ds
jp
jmp
enter
cmpsb
sbb
xchg
jae
pop
dec
pop
jne
ficomps
imul
dec
cmpsb
dec
rcrb
inc
es
lcall
inc
lea
repnz
insb
xlat
ficomps
cmp
and
fneni(8087
pushf
inc
mov
aas
jp
shrl
out
clc
mov
jb
ljmp
or
shrl
mov
xor
mov
out
ud0
cld
js
inc
pop
pop
inc
movsl
sbb
cmp
shlb
xchg
lods
clc
sarl
inc
aaa
jle
sub
roll
mov
jne
dec
inc
incl
decl
fwait
xor
jmp
cmp
insl
daa
lcall
divb
out
adc
loopne
mov
notl
loope
fisubrl
iret
cmp
xchg
aas
pop
std
mov
push
call
push
repnz
mov
add
push
cltd
sbb
fs
leave
scas
repnz
clc
aaa
pop
pop
mov
sub
pushf
cli
stos
push
cltd
add
sbb
mov
sub
fisttpl
ja
push
aas
dec
xor
int3
aaa
std
lcall
dec
xchg
xchg
test
mov
or
dec
fisttpl
decl
stos
lret
cmp
push
out
mov
pushf
mov
sub
mov
out
into
pushl
cld
call
in
rcll
stc
pop
rcll
cmp
push
xor
xrelease
cmpsl
test
subl
jmp
inc
jnp
dec
pusha
bound
pusha
js
sub
popf
adc
sub
or
hlt
push
pop
loope
fdivr
shlb
jge
ds
sub
ret
in
push
sub
push
pop
cmp
popa
sti
aas
lock
cs
pop
cmp
dec
mov
shlb
sub
scas
nop
cmp
out
push
inc
jg
sar
addl
sub
pop
ret
pushl
fcoml
push
in
mov
push
mov
es
xlat
add
imul
loope
dec
imul
gs
push
push
popf
xor
cmc
lret
mov
fs
cmp
out
mov
bound
icebp
fidivs
and
fwait
cmpsb
lret
lcall
mov
bound
sbb
sarb
scas
das
fcompl
sub
rolb
in
pop
mov
adc
mov
aad
ficompl
mov
jnp
jnp
dec
arpl
pop
cmc
mov
in
mov
daa
inc
xchg
lret
inc
xchg
or
ljmp
jl
or
out
mov
rcl
cmp
insb
out
mov
pop
sahf
xchg
cmc
push
mov
testb
fwait
lahf
push
pusha
adc
add
sbb
push
cmpsl
mov
decl
insl
ds
lcall
rolb
sbb
or
mov
or
decl
repnz
sub
ljmp
dec
jbe
rorb
mov
jmp
int
in
lea
mov
fstps
xchg
push
and
ret
jbe
rorb
incl
pop
sbb
fwait
jg
pop
jb
sub
nop
adc
out
cmpsl
push
leave
test
movzwl
mov
ret
cwtl
cmp
scas
mov
fdivrl
mov
jne
mov
and
xchg
fcomip
das
stos
adc
cs
xchg
fidivs
lods
lcall
dec
add
cltd
mov
out
cmp
adc
aad
xchg
xlat
inc
mov
je
xchg
cmpb
push
in
add
push
addr16
addr16
ret
cmp
xchg
rcrb
lods
rolb
loopne
sahf
or
jmp
jge
roll
mov
int
xchg
rcl
add
mov
jg
arpl
fs
out
shr
lods
je
out
mov
mov
cmp
jg
fdivrs
inc
jecxz
sub
fcmovnbe
pop
dec
push
and
xchg
cli
adc
jmp
jbe
sub
icebp
pop
shll
push
cmp
movsb
nopl
sbb
ror
shll
cli
mov
lret
test
xchg
mov
sub
insl
fidivrl
lcallw
push
cli
aam
aas
adc
cmp
std
and
cld
lcall
addr16
adc
popa
mov
incl
aaa
mov
cmpb
push
ljmp
push
movsl
xchg
sbb
or
decl
sub
popa
and
jbe
push
cmpsb
cmp
shlb
lds
push
and
push
pop
jl
jmp
inc
xchg
std
gs
insl
inc
fnstsw
sti
jns
inc
sarl
ljmp
inc
or
push
aaa
or
push
lods
shrb
sbb
add
pop
in
fcomip
call
in
movsl
leave
pop
fdivp
dec
in
rcrb
sub
in
cmp
js
cltd
cmp
lods
ss
scas
call
cmc
int
mov
in
cmp
sar
incl
test
lods
pop
or
fnsave
sbb
repz
movsl
out
aad
call
cmp
lret
fdivrl
imul
bound
lcall
cmpsl
sub
pop
test
jo
shrb
les
jp
pop
test
dec
sub
stos
andl
jno
mov
adc
or
jo
sbb
cmp
cmp
mov
push
xchg
cmp
pushl
pop
adc
xchg
pop
inc
push
incb
and
icebp
push
repnz
mov
dec
into
push
xlat
into
cltd
ss
rorb
dec
je
and
mov
xchg
nop
xchg
dec
push
push
jg
xchg
jmp
ljmp
jl
dec
fcompl
popa
pushf
lds
mov
fcos
lcall
stos
xchg
xor
stc
punpckhbw
xchg
pop
cltd
adc
mov
je
fists
dec
cld
das
cli
decl
sub
int
mov
and
cmc
les
jmp
xchg
loopne
inc
in
jb
jl
xchg
cmp
mov
push
rol
dec
push
mov
cld
call
nop
fwait
and
test
loopne
sub
pop
movsl
adc
mov
xor
sub
adc
xchg
out
mov
inc
cmp
jne
notl
push
mov
mov
cmp
push
or
push
jns
fs
pushl
xor
sbb
into
xchg
fistpll
inc
inc
fbld
stos
mov
pushl
lds
int3
nop
rsm
movsb
in
mov
push
push
cmpsb
out
push
mov
in
lcall
lcall
ficomps
jb
mov
mov
mov
mov
push
bnd
scas
cmp
lock
cmp
and
add
add
mov
js
pop
adc
sbb
call
mov
aas
cmpsb
subl
dec
scas
ret
pop
notb
mov
out
std
addr16
loope
dec
push
sbb
es
xchg
out
imul
aaa
sub
sbb
aas
cmp
clc
incl
cmp
outsl
popa
mov
sahf
jl
cmpsb
stos
popa
cs
outsb
xor
decl
aam
mov
mov
jb
ljmp
mov
out
inc
jns
or
stc
mov
push
add
ss
sub
xchg
aaa
jb
mov
cld
fldenv
lods
sbbl
iret
xorb
insl
inc
xchg
ret
push
cmp
incl
dec
sub
sub
xor
pop
dec
cmp
jl
pop
fmuls
scas
pop
mov
cld
jg
fisttps
push
or
lods
cltd
out
insl
add
push
inc
sub
jmp
icebp
jmp
lcall
gs
loop
stos
data16
subb
jb
xor
cmpsl
mov
int3
sahf
fucomip
cmp
pop
xchg
mov
rclb
jnp
rorl
ljmp
add
cs
ljmp
mov
pop
cltd
sub
add
mov
ljmp
pop
insb
mov
out
pop
add
push
lock
dec
movsb
in
testl
push
push
subl
mulb
or
xor
rcll
xlat
addr16
adc
mov
sti
lret
stc
mov
cmpsb
xor
xchg
adc
insb
mov
mov
cs
ljmp
cmp
inc
ret
leave
call
push
mov
cmp
fldt
inc
xor
or
std
fwait
outsb
and
or
or
lods
scas
xor
or
inc
push
mov
add
idiv
adc
movsb
jbe
sub
add
push
push
and
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
ret
push
outsb
and
add
stos
or
and
mov
push
subl
push
add
adc
enter
nop
inc
add
add
subl
push
lcall
int3
lret
ss
lods
cmp
loop
sub
fisttpll
ljmp
cwtl
lret
lea
mov
scas
mov
popf
lock
lahf
sub
es
mov
jg
sbbb
call
and
repz
mov
fldcw
mov
xchg
call
aam
jae
mov
jcxz
sarl
ret
ret
hlt
xchg
inc
mov
rcr
mov
mov
mov
or
add
jmp
or
add
mov
or
pop
jns
or
jmp
pusha
push
cmc
and
or
add
cmp
push
or
fldt
ret
mov
mov
scas
mov
mov
orl
stc
stos
adc
lcall
adc
pop
test
mov
dec
mov
add
inc
mov
repz
test
inc
mov
mov
mov
mov
add
test
and
test
les
cmc
mov
xor
mov
pushl
in
mov
add
inc
dec
jne
adc
pop
lahf
sti
or
push
adc
mov
add
flds
sub
incl
cmp
add
js
sarl
inc
scas
or
add
or
loopne
lods
pushl
popa
xor
add
pop
sbb
pop
jns
cmpxchg8b
mov
mov
jmp
push
gs
enter
shr
and
inc
cltd
cmpsb
mov
inc
inc
lret
push
push
adc
insl
repz
jp
inc
pop
pop
les
sbb
adc
mov
ficompl
std
ljmp
dec
mov
rolb
inc
xor
out
cmpsl
lds
sub
out
jmp
or
mov
xchg
dec
xchg
adc
xchg
aam
repz
loopne
mov
sub
decl
out
pop
dec
pop
sub
pop
adc
cmp
ror
or
fiaddl
decb
lcall
mov
sbb
inc
sub
ds
xchg
mov
adc
xchg
cmc
ljmp
stos
leave
mov
out
xor
mov
out
adc
cmpsl
mov
in
loopne
push
mov
aas
jl
fdivp
cltd
push
out
insl
scas
flds
fxtract
inc
sti
pushf
aad
inc
sbb
mov
mov
pushl
cli
into
aad
lret
nop
jno
clc
adc
and
add
jg
push
test
jg
popf
mov
int3
aam
in
lcall
jge
mov
jno
outsb
mov
pop
cld
incl
fists
lods
stos
sbb
pop
insb
mov
inc
mov
cld
cmp
adc
push
incl
xor
fisubrl
popf
pop
arpl
jl
rclb
ds
push
add
and
push
adc
and
push
stos
pop
sub
or
data16
mov
xorb
lods
jp
sbb
push
and
push
loop
sub
add
and
sub
lcall
mov
lcall
sub
shlb
cmp
xchg
jns
sub
cmpsl
sahf
movsb
jl
ljmp
fistpl
out
cltd
aad
jmp
fadds
ss
push
lret
jae
jnp
popa
fmull
sbb
jp
stos
sub
dec
aas
mov
or
jmp
test
xchg
mov
and
dec
das
and
les
fs
dec
test
pop
insl
mov
aas
lcall
sbb
hlt
mov
push
bound
and
cltd
mov
xor
decl
mov
push
cmp
push
and
loop
push
dec
adc
je
cli
aaa
mov
xlat
dec
inc
test
jg
fsubrs
bound
in
mov
cmpsb
cwtl
repnz
fstpl
pop
sub
decl
fndisi(8087
push
mov
jno
or
mov
xlat
outsl
jg
dec
add
adc
ljmp
fcomps
jbe
adc
adc
mov
imul
inc
rolb
jnp
decl
pop
sub
add
sbb
clc
adc
lds
inc
mull
jg,pn
incl
arpl
or
in
jo
xchg
jbe
insl
sbb
ljmp
inc
jmp
xor
or
push
xchg
loopne
sub
insb
fstpl
jmp
mov
inc
pop
pop
ficompl
jmp
jg
subb
xchg
push
and
mov
xorl
rcrl
jg
mov
xor
mov
imull
push
cmpsl
fdivrp
fbstp
testb
jmp
push
and
pop
icebp
call
daa
movsb
inc
orl
bound
dec
mov
pop
mov
jmp
inc
daa
push
test
and
test
and
ret
stc
dec
sub
cmp
dec
jmp
das
sbb
push
xchg
inc
int3
mov
push
andb
ja
mov
pushl
xor
inc
ret
loopne
jge
fwait
cmp
sub
sbb
dec
jae
cmp
frstor
pop
push
ror
decl
add
jg
mov
and
repz
stos
push
out
push
jmp
or
andl
addb
fs
nopl
insl
xor
inc
pop
push
jb
or
pusha
cmp
pusha
lret
stc
frstor
stc
and
and
add
lret
add
aas
gs
mov
jecxz
imull
push
pusha
sar
and
loop
les
je
fidivrs
pusha
cmp
and
insb
scas
add
or
jmp
mov
in
inc
iret
or
inc
popa
clc
xor
flds
out
sub
outsl
ljmp
gs
push
in
dec
dec
pop
orb
xchg
push
push
addl
xor
cld
decl
pop
and
dec
add
insl
cvtps2pd
sub
jo
loopne
adc
lcall
add
jp
add
jne
mov
push
pushl
and
or
mov
dec
xchg
jno
jle
fidivs
mov
loope
mov
inc
adc
int
adc
int
jl
dec
stos
dec
xor
popf
jbe
add
roll
inc
call
push
mov
inc
stos
push
add
dec
loope
ss
mov
xor
xor
les
movsb
sub
call
cwtl
mov
push
push
mov
push
cs
pop
loop
mov
jo
ss
mov
out
lcall
lret
push
fiaddl
outsl
push
je
mov
ss
inc
stos
incl
pop
fidivl
push
push
add
push
leave
dec
xor
iret
gs
pop
je
mov
push
aas
lahf
and
cmp
dec
pop
out
push
mov
incl
pop
repz
or
cmovns
inc
or
dec
jbe
push
xor
jg
std
pop
ret
outsb
cltd
mov
and
out
inc
insl
ficomps
pop
in
call
lahf
les
push
pop
mov
push
push
stc
insb
clc
jmp
inc
or
mov
dec
xor
fldl
add
cs
dec
testb
adc
in
fdivp
sbb
aad
jmp
sti
inc
xlat
push
lcall
sub
jp
adc
dec
pop
or
jge
dec
add
and
xor
cld
jmp
jnp
in
jae
cmp
adc
jg
repz
inc
or
in
adc
xchg
movsl
fnsave
out
cmp
cmp
lcall
movsbl
ss
sbb
mov
in
popf
out
mov
int
arpl
out
xor
pop
mov
outsb
or
mov
int3
push
push
cmpsl
push
stc
out
mov
es
rcrl
lahf
scas
es
sti
out
fcomp
scas
fimuls
jnp
and
dec
dec
jno
pop
and
mov
jle
scas
jge
cmp
dec
mov
repnz
push
mov
push
and
mov
push
sub
lahf
outsb
ret
cmp
pusha
push
mov
sar
ds
mov
ret
fidivrs
mov
cmp
fidivrl
xchg
and
sub
jp
mov
pushl
and
add
or
pop
sub
fmulp
jle
xchg
jmp
push
cltd
ds
push
pop
inc
pop
fstpt
fdivrp
cmp
mov
jl
scas
lods
outsb
xor
cmp
fwait
jbe
fsubl
xor
gs
fcos
call
outsl
mov
sbb
adc
mov
cltd
scas
jg
insb
ds
out
mov
and
pop
sahf
push
arpl
mov
std
fists
sub
jnp
lods
sbb
incb
jmp
mov
subb
pop
sub
mov
mov
stos
xor
dec
pop
push
cs
mov
arpl
stos
sti
fwait
add
cmp
loopne
jp
pushl
cwtl
ljmp
imul
adc
stc
and
and
mov
test
mov
loop
cmp
lret
gs
and
test
addr16
jnp
rclb
iret
pusha
jne
cmp
adc
mov
jmp
push
arpl
jmp
out
imul
xor
std
lcall
incl
lds
in
or
fistps
mov
outsl
call
cs
push
push
dec
shrl
std
mov
ss
jg
pushl
pop
arpl
stos
mov
xor
inc
insl
movsb
mov
movsl
test
dec
ljmp
sub
shr
jbe
and
les
movsl
pop
dec
cmp
or
inc
test
jmp
inc
repnz
outsb
es
mov
in
xor
mov
rcl
jns
ja
fdivs
mov
in
cmp
movsb
aas
cmp
aas
cwtl
jecxz
lods
lret
stc
pop
xor
loopne
mov
jbe
stos
cmp
cmp
lock
cmp
add
in
mov
outsl
mov
xor
in
cmp
scas
push
mov
and
pop
daa
lahf
loopne
pop
out
sub
in
pop
popa
in
cwtl
loopne
push
lods
jns
xchg
clc
sar
pushl
arpl
stos
data16
nop
adc
cwtl
fmuls
mov
or
sub
fbstp
insl
popa
call
call
arpl
fs
adc
gs
jg
push
std
fbld
in
mov
pop
xlat
int
push
push
imul
mov
mov
leave
pop
movsl
outsb
outsb
push
rcr
jo
cmp
icebp
mov
mov
lret
mov
sbb
jbe
jmp
mov
mov
ds
aaa
test
and
pop
add
cmp
jle
cld
lds
jle
and
jge
mov
mov
jecxz
jnp
lods
cmpsb
push
aaa
jg
fisttps
mov
ret
push
push
orb
inc
push
add
push
mov
daa
push
jle
and
lcall
jle
cmc
or
xor
insl
pop
xor
jae
push
mov
dec
dec
pop
inc
xor
dec
arpl
push
inc
dec
xor
jne
jae
inc
imul
jp
pushl
dec
inc
ja
push
dec
inc
inc
dec
pop
pop
ja
cmp
push
jne
cmp
dec
addr16
inc
mov
pushl
ss
dec
je
jae
imul
push
aaa
aaa
sub
bound
dec
lcall
in
inc
inc
arpl
inc
inc
dec
push
ja
push
outsw
insb
inc
jne
push
outsb
inc
inc
clc
incl
dec
inc
jne
dec
bound
and
inc
push
jns
pop
dec
dec
dec
dec
jno
imul
addr16
outsb
push
dec
dec
inc
dec
outsl
jp
sub
cld
fcmovnu
pushl
outsl
pop
inc
popa
inc
cmp
mov
mov
arpl
je
fs
insb
clc
pop
dec
jb
jb
xor
dec
ss
pop
dec
test
insb
inc
ja
pop
cld
outsb
je
arpl
test
imul
dec
dec
dec
insl
lds
jb
inc
jne
js
xor
inc
inc
jo
push
bound
sti
pushl
fs
push
push
push
je
jbe
pop
fs
xor
xor
push
xor
sti
ljmp
addr16
dec
inc
dec
dec
inc
inc
jb
push
dec
gs
push
dec
inc
inc
imul
jg
xor
jns
bound
dec
js
jae
xor
lods
push
insl
xor
push
insb
popa
mov
cmp
push
push
push
jne
dec
je
inc
push
push
dec
ja
cmp
jb
dec
outsl
clc
pop
lock
ss
cmp
push
outsl
push
aaa
xor
rolb
inc
push
cmp
je
inc
popa
push
xor
push
inc
push
aaa
dec
imul
add
stos
inc
inc
inc
push
jns
sub
test
pop
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
adc
sub
jg
mov
add
sbb
add
ljmp
idivb
dec
dec
add
inc
fisttps
movsb
add
or
add
mov
add
or
loopne
dec
add
addl
adc
mov
sti
fildl
add
adcl
and
movb
add
add
jo
test
push
cwtl
or
xchg
packsswb
sub
fbld
jge
add
orl
sbb
sub
incl
loope
sub
add
sub
inc
lea
sub
and
pop
lock
inc
daa
pop
rorb
sub
pop
rolb
into
or
inc
add
push
aas
mov
add
pop
adc
dec
inc
add
fiadds
add
shrl
or
add
sbb
add
das
dec
sti
cmp
inc
loopne
xchg
sbb
cld
loopne
xor
aad
test
mov
pop
jl
or
insl
sar
int
jns
loope
mov
lds
push
addl
pop
pop
fidivs
popa
xor
lcall
lock
fbld
decl
mov
pusha
add
pop
jnp,pn
bound
iret
loope
and
mov
fmuls
xor
push
or
push
loopne
lret
dec
sti
pop
roll
out
sti
mov
sbb
jle
loopne
insl
jbe
sbb
sahf
fldl2t
push
decl
clc
xor
or
jno
sub
repz
mov
std
in
fld
imul
sbb
insl
xchg
push
sbb
jle
sbb
lea
clc
shll
add
pop
push
fisttpll
shl
add
out
cmp
mov
int
mov
or
loopne
loope
pop
in
pusha
subb
test
in
inc
arpl
inc
mov
incl
int
add
rorb
add
loopne
mov
test
out
add
cmpsb
cmp
or
xor
rolb
ljmp
pop
jmp
push
jle
pusha
or
loopne
or
fs
push
stos
dec
xor
pop
lcall
std
sub
stos
sub
add
fadds
loope
mul
sbb
mov
outsl
mov
ja
mov
sahf
mov
jge
test
cmc
in
fstpl
aaa
sub
decl
push
aas
imul
popa
or
mov
mov
adc
stos
cld
decl
sarb
inc
stos
int
loopne
inc
mov
push
mov
mov
adc
hlt
pop
or
lods
sbb
cli
pop
ljmp
mov
pop
sbb
in
loope
and
int
dec
pusha
add
popa
or
pusha
or
jmp
xchg
jg
add
sbb
push
sahf
pop
hlt
cld
mov
scas
insb
int3
repnz
jnp
lahf
pop
incl
lea
pop
fstpt
and
adc
add
adc
push
push
icebp
imul
cmp
neg
add
add
bound
addr16
add
sbb
cmp
stos
sub
cmp
rol
nop
jb
or
idiv
ja
push
or
or
add
dec
add
sbb
sbb
sbb
adc
adc
adc
adc
sub
sub
sub
and
and
cmp
jnp
inc
add
add
and
jle
add
jg
gs
mov
cwtl
sbb
cmp
sbb
sub
inc
adc
mov
imulb
push
add
add
xor
push
loope
inc
cmp
sub
jle
int
mov
xchg
sub
or
aas
and
and
and
add
cli
mov
int3
pusha
insl
inc
jle
cmp
mov
ja
cmpb
nop
inc
or
insl
outsl
push
sub
jg
pop
push
mov
and
adc
push
outsw
push
xor
jbe
sub
and
sub
fdecstp
jmp
bound
adcl
push
or
add
push
mov
adc
mov
aaa
and
sub
jns
in
das
xchg
gs
cmp
and
jbe
dec
add
add
insl
jp
jge
filds
lods
insl
sbb
sub
insl
js
jl
push
sbb
sbbb
sbb
sbb
adc
pushf
jmp
push
or
lret
adc
add
jnp
movsb
push
ja
cs
in
in
sbb
or
aas
and
and
mov
nop
sub
sbb
add
rclb
or
nop
adc
push
into
sbb
roll
push
out
jl
fadds
sarl
out
lods
imul
mov
mov
in
scas
mov
add
mov
loop
std
mov
imul
add
popa
xor
mov
insl
jle
mov
sahf
std
add
cmp
push
ljmp
dec
inc
leave
push
loopne,pt
jle
aad
and
mov
sub
jmp
mov
xchg
bound
add
in
in
mov
call
rcrl
leave
xor
mov
lea
rolb
sbb
sbb
add
sbb
das
cmp
mov
cltd
test
test
enter
mov
incl
xor
scas
jne
inc
data16
fcmovnb
add
hlt
test
cli
aam
inc
push
addr16
sbb
das
mov
add
sbb
imul
popf
mov
add
xchg
call
jmp
cmp
add
cmp
lahf
lds
sbb
sub
add
clc
push
sti
repnz
push
nop
xlat
add
cltd
mov
sbb
jl
xchg
add
sbb
xor
jmp
inc
mov
cmp
enter
clc
mov
mov
mov
js
repz
fistpll
xchg
or
jnp
into
mov
cmp
mov
and
jg
lcall
pop
xor
pop
mov
insb
adc
lods
add
sarl
jl
movsb
lret
mov
stos
mov
fsubrl
data16
loopne
sarb
mov
clc
push
inc
sbb
movsl
imul
clc
mov
cmp
psadbw
dec
mov
add
xchg
adc
mov
call
add
lahf
aaa
mov
xor
sti
mov
push
mov
push
mov
iret
push
int3
jae
gs
mov
js
mov
scas
incl
mov
mov
test
sbb
sbb
jle
adc
pop
loop
add
sbb
sbb
jg
jbe
lcall
push
push
add
mov
jg
pop
mov
lret
loopne
lcall
push
ja
lahf
add
test
add
add
test
mov
jl
mov
jg
mov
and
mov
adc
mov
std
jg
xlat
je
outsb
sbbb
filds
jne
push
lret
mov
cmp
dec
je
jg
jle
mov
jmp
or
dec
movsl
cmp
mov
adc
or
fcompl
enter
mov
iret
pop
add
clc
outsl
clc
rol
push
inc
pop
push
add
adc
push
aaa
cld
neg
lods
dec
mov
mov
jl
xor
dec
jno
lret
mov
mov
std
test
repnz
or
add
cmp
inc
mov
or
enter
sbb
push
inc
cs
lret
lahf
and
lret
ljmp
mov
mov
ljmp
or
add
adc
jge
xchg
mov
cli
cld
fucomi
cli
cmp
adc
push
or
add
xchg
mov
push
mov
aaa
fs
fbld
add
leave
pop
adc
mov
adc
pop
lock
aas
cwtl
mov
pop
inc
jp
lock
xlat
mov
stos
clc
pop
stos
lods
mov
cmpsl
add
mov
push
jo
lret
mov
stc
push
mov
imul
sbb
mov
rol
mov
sar
cmpsb
push
add
fcompl
push
mov
cmpsb
mov
lcall
add
sbb
sahf
cmpsb
imul
dec
imul
xchg
aam
test
mov
add
rolb
jge
inc
adc
in
push
sbb
jb
in
push
pop
add
jnp
fcoml
fs
inc
sti
fstpt
aam
mov
add
shlb
pop
or
out
xor
add
push
lcall
add
fidivs
jg
mov
pop
sarl
add
jo
and
jo
jo
sbb
dec
fstpt
data16
inc
push
or
push
add
sbb
into
ljmp
dec
imul
add
push
scas
add
pop
add
bound
nop
arpl
add
inc
add
rcl
ret
popa
fs
lock
push
add
add
fimull
int3
icebp
std
data16
insb
nop
loopne
inc
lds
pop
imul
popa
mov
dec
add
jge
pop
push
sbb
stos
hlt
lock
and
mov
pop
enter
push
pop
scas
test
adc
or
sbb
pusha
clc
lcall
rcrb
lock
fidivrl
pop
pop
mov
push
add
or
push
jno
shl
out
or
add
jnp
out
fbstp
imul
xchg
ja
pop
add
insl
or
mov
adc
dec
and
add
sub
popf
je
out
add
jl
and
add
push
xor
in
inc
add
add
lods
mov
push
push
push
stos
and
add
outsb
sbb
sbb
add
int
push
and
inc
mov
imul
lds
or
mov
mov
push
mov
push
loope
dec
lods
mov
xor
push
xchg
push
cmp
data16
testl
add
or
or
lods
shlb
xchg
pop
stos
stc
push
or
xlat
mov
stos
in
or
adc
stos
fldl
pop
mov
jl
lds
add
sub
jmp
outsl
lcall
add
scas
orb
pushl
add
push
or
sbbb
addb
addb
dec
mov
pop
aaa
add
mov
and
jg
or
lea
orb
stos
in
imul
repnz
pop
lds
mov
icebp
cmp
and
sub
addb
add
addb
jge
repz
dec
insl
push
addb
addl
xor
xchg
inc
dec
into
adc
mov
out
fstl
add
addb
or
dec
repz
adcb
flds
xor
add
pop
add
rolb
or
and
or
int
mov
or
adc
shlb
push
adc
mov
cli
cmp
xor
rclb
imul
xchg
push
or
shlb
sti
cmpsb
mov
or
dec
lea
ffreep
add
cld
cmp
push
ds
pop
adc
rolb
inc
sub
or
cs
or
sub
jns
sbb
imul
add
mov
xchg
rcrb
fidivrl
stc
cmp
add
rcll
fs
jl
sarb
push
cltd
popa
or
add
sbb
push
jae
mov
test
push
roll
add
movsl
rcrl
pushf
push
add
mov
fdivr
jns
rolb
sarb
faddl
pusha
jne
add
and
push
inc
xor
push
rol
mov
jl
into
dec
imul
or
sbb
lcall
prefetcht1
add
ds
or
jmp
mov
mov
push
int3
cmp
dec
and
aam
mov
sti
ss
roll
ror
lahf
mov
sbb
fstps
out
rclb
dec
rcrb
icebp
pop
or
out
dec
mov
loopne
aaa
outsl
stos
shlb
out
loopne
pop
adc
insl
loopne
cmp
cmp
insb
or
add
addb
loopne
outsl
inc
mov
push
dec
add
shrb
rcrl
mov
add
sbb
loop
lods
sub
add
sub
mov
and
add
mov
mov
and
cmp
sub
mov
incl
add
or
xor
inc
add
add
add
or
cs
pop
push
das
inc
adc
or
sub
jmp
fistps
push
add
aas
sub
fdivrp
pusha
add
sub
or
sti
outsl
inc
faddl
adc
and
sbb
and
cwtl
shll
sub
aad
jecxz
out
add
das
clc
sti
mov
scas
sub
cmp
mov
or
ficompl
pop
add
push
and
pop
or
lods
stos
jns
adc
inc
dec
jnp
sbb
sub
xchg
inc
mov
cmpl
inc
add
shl
cs
and
cmp
adc
and
lock
ds
sub
adc
insl
push
and
add
push
jne
xor
lock
mov
add
add
add
add
scas
rolb
or
mov
cmpsb
mov
mov
xchg
mov
mov
popf
pop
loopne
std
mov
adc
lods
bound
bound
cmp
inc
pop
jp
dec
jnp
pop
push
pop
pusha
je
inc
pop
pop
dec
cmpsb
outsl
jg
push
dec
bound
insl
js
jle
outsl
ss
jns
or
std
add
or
adc
xor
or
cmp
push
push
inc
jbe
arpl
insl
fs
sub
das
clc
sub
and
xor
and
xor
xor
clc
decl
add
orl
fs
mov
hlt
fwait
popf
mov
mov
dec
xor
pop
pop
mov
dec
ss
and
shlb
and
ljmp
pop
push
inc
push
or
push
popa
push
lock
enter
rcl
cli
rol
lock
sbb
lock
jecxz
nop
repz
iret
fld
fcmovb
add
ret
fdivr
jg
call
filds
enter
out
out
fdiv
hlt
loopne
not
in
adc
out
loop
pop
sar
jg
mov
sahf
jmp
xchg
lahf
adc
add
test
jg
mov
xchg
mov
fmuls
add
mov
pushf
pop
cmc
in
sbb
cltd
add
fs
push
imul
std
fildl
mov
mov
mov
mov
mov
push
lods
and
adc
sbb
das
sar
sbb
jle
jnp
pushaw
inc
jg
sub
js
loope
mov
mov
pop
lock
mov
dec
mov
push
mov
cli
stc
std
stos
in
into
mov
cmpsb
jecxz
mov
out
loopne
in
add
out
mov
xchg
add
xchg
mov
fisttps
or
add
in
jle
int3
mov
xchg
cmpb
fcomip
pushl
mov
ljmp
cli
cld
clc
out
add
call
sbb
lock
cmc
and
sub
push
and
mov
cmp
daa
cli
xchg
cwtl
mov
mov
jg
adc
mov
scas
movsb
mov
out
xchg
popf
add
clc
decl
add
cltd
lods
mov
mov
loop
int3
cltd
lahf
mov
inc
mov
mov
loopne
cmpsb
test
mov
mov
movsb
add
sahf
rolb
mov
mov
adc
sbb
sbb
nop
hlt
das
cli
ja
mov
mov
je
jo
adc
ss
ljmp
jne
cmp
jo
or
icebp
or
fistps
inc
inc
inc
inc
and
add
dec
dec
inc
dec
inc
pop
ja
fst
mov
out
pop
pop
ds
lahf
mov
pushl
stos
mov
mov
mov
mov
sti
scas
mov
in
scas
test
fcomp
popl
roll
aas
xor
jbe
aaa
jns
cmp
xchg
jle
das
and
das
fs
fbld
ds
es
pop
pop
mov
cwtl
pushf
xchg
xchg
aad
mov
fiaddl
xchg
xchg
sahf
lcall
movl
popf
popf
cltd
test
aaa
and
pop
adc
xor
push
cmp
cmc
jmp
add
mov
stc
sti
pop
std
repz
inc
repnz
and
bound
decl
jo
dec
cwtl
jbe
jno
ja
fs
pop
jae
add
in
clc
in
imul
out
add
into
testb
in
repnz
loope
call
repnz
push
add
add
or
mov
add
dec
bound
push
inc
inc
mov
push
imul
xor
je
jne
outsb
push
cmpb
gs
popa
mov
add
xor
sub
es
jmp
lock
icebp
hlt
loop
jmp
ret
div
out
add
dec
dec
pop
dec
gs
pop
add
mov
push
inc
dec
addb
ret
cwtl
movsb
mov
call
add
repz
rol
enter
inc
adc
sti
ret
adc
loopne
cmc
loop
loopne
mov
mov
pop
jecxz
lcall
pop
or
or
sbb
or
or
stos
lcall
mov
pop
dec
arpl
pop
pop
dec
pop
pop
push
inc
mov
in
stc
push
std
pushl
dec
ljmp
in
jecxz
add
aad
aam
mov
dec
jl
pop
cld
lret
flds
pop
push
add
push
dec
dec
dec
pop
lock
push
push
inc
outsl
decl
or
dec
xor
cld
lock
jmp
add
mov
ss
out
cmc
out
in
jbe
out
js
mov
push
mov
mov
jo
nop
pushf
test
xchg
sahf
lahf
cmp
loopne
mov
stos
mov
aaa
adc
dec
cmp
adc
dec
or
push
add
sbb
add
add
add
addr16
push
dec
add
inc
pop
add
test
call
sbb
js
jl
daa
and
xor
xor
je
sti
jg
in
jns
outsb
push
and
sub
jo
and
or
repz
ret
rcll
repnz
into
data16
jg
sbb
aad
call
add
push
sub
cmp
xor
xor
jnp
xor
inc
jns
cmp
cmp
sbb
out
sub
adc
adc
mov
mov
scas
add
mov
push
cs
mov
ds
in
call
or
roll
rol
ret
fcomi
add
lret
ret
fadds
jg
nop
sti
aad
shr
repz
dec
ret
mul
icebp
add
lret
std
in
loope
cld
mov
xor
adc
adc
adc
icebp
or
ljmpw
add
and
ss
in
imul
repnz
std
out
popa
pop
test
and
add
cmp
jge
cmpsb
xlat
cli
in
fsubrs
inc
lds
xchg
jb
test
movsb
inc
sbb
clc
es
cs
push
shld
loop
sbb
fcomip
sahf
repnz
fcomp
mov
ljmp
add
loop
aad
xchg
out
leave
inc
sub
cmp
dec
add
add
adc
add
mov
into
xchg
fcmovnbe
xlat
aad
fcmovnbe
rol
fwait
inc
mov
bnd
sbb
pop
adc
sub
sbbl
or
add
dec
jno
cmp
ss
call
jmp
xor
cmp
or
cmp
and
mov
pop
mov
dec
jo
ja
bound
pop
adc
or
cld
add
sbb
fsubl
idiv
jmp
push
jg
filds
jmp
fscale
loop
cli
in
fisubrl
out
rcl
fcmovnu
mov
xchg
sbb
fcmovnu
int3
outsl
clc
incl
es
lret
into
fldenv
mov
outsb
imul
pop
imulb
cmp
aam
movsb
add
fld
lret
adc
imul
movsl
cli
popa
jb
popa
jno
cld
dec
pop
sbb
add
pop
pop
inc
insb
mov
adc
pusha
push
push
dec
dec
dec
push
and
and
es
sbb
and
adc
push
or
adc
add
inc
sbb
scas
addl
add
out
div
std
icebp
ljmp
clc
mov
stc
clc
icebp
add
mov
inc
xchg
popf
mov
lock
std
cmpsb
add
xchg
add
dec
hlt
add
mov
mov
rcl
ror
rolb
shlb
aaa
test
enter
push
dec
add
call
adc
mov
mov
icebp
testl
mov
arpl
mov
cmpsl
pop
inc
pop
pop
and
aaa
incl
add
or
mov
mov
in
stos
mov
mov
sub
add
and
das
and
mov
in
jbe
loope
mull
dec
push
inc
add
icebp
mov
dec
inc
or
and
add
xchg
inc
lea
push
push
push
push
inc
dec
cmp
add
dec
push
push
lock
pop
push
inc
or
sbb
decl
or
sbb
sbb
cmp
daa
add
xor
sub
das
sub
xor
and
xor
xor
and
xor
sub
mov
mov
sub
mov
loop
sti
std
add
add
jmp
fstpt
cld
insl
outsl
outsb
bound
insl
fs
dec
push
and
pop
pop
decl
sbb
inc
inc
push
or
jbe
add
addb
or
pusha
aaa
lods
lods
movsb
movsb
add
repnz
xor
xor
or
aas
and
cmp
add
out
and
lcall
jl
and
scas
mov
jb
xor
push
pop
call
loope
cmpsl
mov
mov
xchg
pushf
xchg
xlat
sahf
lcall
jb
imul
jge
add
cmc
test
mov
stc
xlat
fmul
into
faddl
shl
test
xchg
enter
shll
incl
sbb
xor
cmp
addb
inc
sub
jge
cmp
lret
fcomp
xchg
xchg
outsl
incl
adc
ficoml
fnop
xchg
sar
mov
fisttps
xor
call
popf
add
xor
ja
js
jle
xor
mov
insb
xor
js
xor
pop
adc
add
sbb
adc
dec
cmp
sbb
xor
jg
jle
je
dec
dec
dec
dec
inc
push
or
add
pop
inc
dec
pop
adc
fbld
dec
pop
pop
inc
push
dec
add
sbb
mov
push
data16
or
imul
fcompl
imul
roll
cmp
aad
popf
enter
sbb
ljmp
jecxz
lcall
pushl
orb
rcrb
lahf
pushf
fwait
mov
add
out
cli
cwtl
xchg
cwtl
sahf
xchg
test
test
sahf
add
dec
sbb
inc
dec
and
daa
and
push
xor
syscall
push
adc
add
cwtl
add
aaa
shll
add
and
or
cmp
push
or
adc
daa
aaa
aaa
jo
adc
jle
cmp
mov
and
aas
aaa
or
pop
xor
cmp
pop
loopne
push
or
add
repnz
std
cmpsb
fdecstp
idiv
push
out
fcmovnu
push
or
cmpb
pop
cmp
cmp
add
sub
idiv
add
cmp
add
sub
ds
sub
sbb
and
mov
add
das
pop
subb
mov
mov
xchg
jo
insb
outsb
outsl
cmpb
insl
aam
push
push
xor
sub
das
outsb
sbb
aaa
sbb
sub
adc
cmp
or
cmp
lcall
sub
sbb
or
adc
sbb
adc
or
push
adc
dec
jl
add
dec
jns
or
add
out
fmul
fcmovne
test
ror
sar
mov
sub
loope
mov
rcll
jbe
loopne
nop
xlat
call
cmp
loopne
jecxz
out
out
cld
cli
pushl
add
out
out
scas
repnz
sti
cmpsb
loope
loop
jmp
rcr
aad
lcall
xorb
pop
std
call
aam
add
fs
fcmovb
adc
mov
mov
pop
hlt
stos
mov
lock
repz
mov
mov
out
cmpsl
mov
shrb
mov
mov
stc
mov
mov
mov
incl
aad
in
jmp
mov
pushf
repnz
jg
test
in
mulb
sti
fsubr
xlat
in
div
in
sub
sbbb
mov
cmc
hlt
repz
mov
icebp
xor
lret
incl
fiaddl
ret
aad
aad
mov
and
iret
leave
pushl
ljmp
aam
fucomp
movl
aas
and
mov
outsl
pusha
call
jae
push
push
add
and
daa
or
pop
or
push
mov
sbb
sbb
verr
clc
call
decl
adc
push
add
sbb
pop
pop
add
pushaw
jnp
gs
scas
sub
arpl
bound
outsl
test
ljmp
imul
addr16
cmp
pop
xchg
pop
inc
pop
push
lcall
incl
add
push
dec
jge
push
mov
push
dec
bound
dec
pop
add
inc
push
scas
pop
cmc
adc
adc
mov
lds
mov
push
std
mov
scas
mov
mov
mov
shlb
sbb
xchg
mov
test
rorb
clc
dec
mov
xchg
xchg
popf
add
ljmp
outsb
js
sbbb
sub
cs
sub
sarl
mov
mov
mov
or
mov
repz
das
shl
es
add
or
jae
jnp,pt
dec
adc
in
adc
xor
in
cmp
xor
cwtl
mov
push
ds
cs
mov
out
icebp
lcall
nop
xchg
xchg
xchg
fcom
fwait
xchg
stos
pushf
xchg
xchg
xchg
fmulp
aad
rcrl
lcall
dec
out
rol
aam
ror
roll
fcmovu
iret
int
enter
xchg
faddp
iret
ret
mov
add
loope
mov
repnz
stos
sub
call
shll
test
mov
mov
mov
sbb
mov
add
ljmp
adc
ja
add
int3
mov
cwtl
adcl
lcall
or
cmp
mov
mov
add
fdivr
xchg
fwait
lock
pop
out
jecxz
bound
insl
cmp
sbb
ljmp
daa
xor
popa
push
push
push
sub
sub
xor
insb
jbe
daa
lcall
pop
dec
sbb
mov
pop
add
insb
insl
inc
ss
test
jmp
pop
cld
rcl
xchg
into
mov
fcmovne
ror
fwait
addb
scas
lods
cmp
push
clc
aaa
test
out
std
cli
cld
inc
mov
out
test
mov
mov
incl
jb
bound
insl
fs
add
xor
incl
hlt
mov
cmpsb
repz
test
subb
dec
inc
mov
inc
add
arpl
xchg
xchg
cli
and
es
cmpsl
pusha
mov
stos
ljmp
or
out
shlb
mov
push
push
add
loopne
sub
sahf
mov
fsubrl
subb
stos
data16
test
rolb
mov
or
dec
stos
cmpsb
add
sub
and
mov
add
cmp
aas
cmp
cmp
loopne
loopne
cmp
cmpsb
and
add
clc
lcall
sbb
sub
or
and
add
dec
or
bound
or
mov
sub
sbb
sub
loope
or
cmp
data16
jle
or
in
sub
xor
push
jle
add
push
sub
rorl
sbb
shl
add
jg
adc
jg
arpl
inc
add
and
das
sub
addb
sbb
push
push
sbb
add
add
push
faddl
addr16
sbb
push
cld
mov
and
sub
sbb
das
lock
cmp
das
daa
or
mov
or
add
andb
and
or
add
mov
loope
xor
cmp
cmp
out
push
or
cmp
cmp
cmp
and
sub
add
and
das
xchg
and
inc
or
pusha
push
mov
movsb
xchg
jns
test
idivb
loope
sbb
movsb
sub
sub
and
add
rolb
sbb
xor
cmpsb
loop
cmp
ss
or
aas
sub
xchg
add
add
sbb
outsb
outsl
inc
addb
cmp
add
sub
cli
push
push
insl
and
aas
sbb
add
in
add
sub
mov
sbb
cmp
pop
mov
insl
push
sub
sbb
add
cmp
mov
and
dec
cmpb
andb
loop
subb
or
push
sub
pop
cs
add
inc
sbb
and
or
imulb
arpl
nop
or
or
sub
or
cmp
lock
push
rolb
pusha
dec
jo
push
sub
jge
inc
aam
mov
or
push
insb
cs
jo
arpl
jecxz
xor
sub
add
xor
cs
pop
mov
add
add
and
stos
sbb
pop
std
xor
add
xor
adc
add
je
call
cld
cmp
push
add
sbb
sub
push
xor
loopne
icebp
sbb
test
jno
les
jb
add
mov
ucomiss
fadds
and
adc
cld
jmp
mov
add
adc
inc
sbb
xor
and
add
sbb
inc
sub
and
outsl
cs
add
sub
or
and
sbb
jle
cmp
and
pushf
sub
popa
pop
mov
pop
ljmp
mov
sub
es
mov
xor
jnp
and
fbld
or
adc
xor
sub
stos
test
mov
loope
cmp
jp
into
mov
cmp
idivb
dec
into
test
bound
push
and
push
cmc
das
or
mov
iret
add
int
sbb
int
insb
sub
orb
mov
jns
dec
mov
jns
fcmovu
mov
mov
mov
push
daa
inc
sbb
pop
add
decl
dec
std
dec
cmpsb
push
inc
mov
dec
and
xchg
jg
xchg
cmpb
ss
inc
dec
les
dec
jg
adc
mov
into
xchg
or
nop
or
mov
enter
pop
loopne
insl
andb
mov
movsl
add
cmp
xor
or
add
mov
pop
add
cs
cmpsb
jg
mov
add
mov
ror
cmp
add
add
icebp
or
pop
pop
push
enter
or
inc
inc
cli
mov
ret
es
or
je
adc
test
sbb
dec
dec
add
cli
cmp
cmp
test
jle
or
rorb
inc
pop
sbb
jbe
mov
mov
inc
sti
jb
inc
retw
movsl
sarb
inc
add
sbb
dec
pop
dec
add
jo
or
add
pop
icebp
add
andl
adc
add
push
negb
sbb
addb
add
inc
push
rolb
pop
sbb
pop
mov
mov
pusha
push
cmp
sbb
movsb
mov
pushl
push
pop
movsl
or
cmp
add
adc
mov
and
scas
ret
movsl
movsb
or
add
push
outsb
ret
push
sarl
adc
or
and
sbb
adc
fbstp
and
movsl
out
adc
outsl
adcb
stos
jbe
jbe
sbbb
push
cld
or
push
adc
jl
filds
rolb
or
loopne
add
aas
fs
sbb
test
stos
movsl
push
mov
adc
cmp
jmp
pushl
movsl
dec
add
adc
xor
sbbb
push
sbb
adc
scas
mov
xchg
jle
add
lods
std
pop
cmp
add
xchg
js
cmp
clc
mov
xchg
adc
add
cmpsb
and
pop
xor
addb
jg
jge,pt
adc
add
lock
push
pop
mov
add
and
popa
das
inc
imul
mov
sbb
xorb
mov
in
rorb
push
xorl
into
xchg
sbb
nop
ljmp
add
cmpsb
inc
push
pop
push
cmp
or
mov
mov
add
mov
sbb
cwtl
or
or
call
sbb
int
les
imul
mov
in
je
sbb
rcrb
je
pop
jne
inc
push
scas
das
dec
movsl
bound
or
inc
into
push
mov
in
decl
inc
lret
sub
lds
rclb
adc
jo
xor
and
sbb
jbe
add
adcl
pop
push
mov
mov
in
and
lock
xor
int3
dec
push
mov
repz
out
inc
and
push
jmp
xor
mov
sbb
rolb
es
pop
mov
divb
jg
std
adc
add
mov
push
sbb
rolb
icebp
mov
push
sbb
adc
adc
orl
andb
lcall
decl
jo
call
repz
xchg
push
shll
insb
ficompl
sbb
mov
pop
push
sarb
mov
adcb
mov
inc
or
cmpb
js
nop
or
sti
xor
mov
enter
loopne
xchg
or
dec
repnz
ja
jno
mov
movsl
mov
je
inc
decl
cli
imul
mov
or
xor
mov
mulb
cmp
call
jb
insb
dec
and
rcll
adc
sub
bound
call
dec
add
or
adc
mov
inc
push
inc
leave
mov
or
test
adc
dec
cs
inc
lcall
cmp
sbb
or
jbe
aas
cmpsb
mov
add
dec
mov
jg
cli
cmpsb
mov
mov
mov
pop
mov
mov
mov
cld
jg
or
mov
add
es
repz
or
rolb
pop
es
mov
cmpl
pop
addb
sub
dec
movb
adc
ret
sbb
cmp
into
inc
mov
mov
adc
mov
aaa
inc
andl
int
or
inc
or
in
loope
lods
push
pop
jle
or
mov
fs
dec
into
movsb
inc
add
jbe
cmp
andb
clc
fcomip
add
jo
adc
addb
push
icebp
dec
rcrb
push
xlat
cmpsb
in
add
inc
enter
pop
inc
clc
fisubl
outsb
push
inc
mov
jge
call
or
into
and
icebp
ss
js
inc
fmull
adc
or
shrb
add
sbb
or
dec
int
dec
insl
adc
cmc
or
add
inc
ds
inc
int
inc
push
call
insb
add
inc
cmp
clc
mov
iret
mov
mov
fmuls
test
inc
add
movsb
and
pop
lods
add
loopne
add
fimull
xchg
test
and
push
decl
mov
pop
testb
stos
test
js
jo
mov
sbb
fadds
movsb
jl
jg
jb
sbb
bound
cmp
adc
movsl
call
dec
xor
cmpsb
inc
xchg
outsb
xlat
lods
sbb
jbe
pop
bound
dec
adc
lock
add
imul
push
in
movsb
adc
jno
xor
add
mov
roll
jbe
or
data16
je
dec
fildll
push
or
add
push
add
pop
adc
mov
les
sbb
sbb
popa
xor
or
or
pop
or
outsl
iret
mov
mov
jge
lcall
add
sbb
inc
jg
jp
sbb
enter
or
mov
adc
or
or
sbb
add
push
pop
sub
mov
adc
ret
dec
pop
push
mov
or
test
adcb
int
jp
add
mov
ss
or
adc
cmp
dec
inc
or
js
jg
add
cmp
and
movsl
pop
andb
add
dec
daa
inc
adc
fwait
movsl
or
aad
das
test
sbbb
sar
imul
jns
xor
xor
aam
and
inc
sub
push
or
fadds
hlt
imul
dec
mov
mov
cmpsb
dec
sbb
adc
fwait
jg
movsb
add
add
jg
push
test
incl
orl
repz
or
in
add
shrb
dec
jg
decl
addb
push
add
mov
cmp
mov
cld
orb
inc
inc
cmp
pop
dec
mov
adc
movb
lock
or
add
clc
and
jmp
pop
or
dec
movsl
mov
push
lcall
cmp
add
cmp
or
js
nop
pop
sbb
pop
pusha
xor
fimuls
push
cmp
cld
jnp
sub
inc
into
imul
je
dec
add
push
pop
daa
inc
js
fbstp
fisttpll
inc
pop
or
pop
add
rclb
xchg
jg
lea
into
insb
lea
pop
orl
add
fmuls
cmp
je
mov
push
movsl
enter
sbb
add
push
add
popf
mov
dec
mov
inc
add
mov
xor
push
je
or
add
jle
pop
adcb
outsb
or
push
rol
clc
xchg
or
rcr
inc
add
inc
push
fnstsw
pop
add
mov
xor
mov
adc
pop
ja
cmp
or
inc
mov
insb
add
lahf
add
data16
inc
es
xor
and
movsl
or
adc
mulb
adc
sbb
sbb
jl
cmpsb
jbe
and
insb
inc
add
mov
pop
mov
jg
jb
enter
or
cmp
out
or
mov
incl
pop
push
pop
call
mov
mov
loopne
test
mov
shlb
and
dec
cmp
mov
push
inc
or
hlt
mov
adc
dec
xor
cmp
lcall
xor
mov
test
dec
movb
dec
mov
int
add
pop
pushf
gs
insb
add
mov
movsl
jmp
or
movsl
pushf
inc
incl
jle
push
push
jle
sbb
and
adc
add
xor
ds
jg
inc
dec
mov
push
jge
mov
sbb
mov
es
pop
push
fisubs
mov
jle
andb
lods
cmpsb
mov
mov
outsl
inc
push
cwtl
mov
cmp
pop
cld
das
cli
add
sbb
push
movsb
xor
mov
in
mov
adc
jbe
mov
adc
das
push
fsub
inc
sbb
pop
push
and
dec
adc
mov
les
scas
clc
mov
xchg
scas
adc
fs
mov
pop
icebp
call
adc
adc
pusha
or
dec
inc
and
xor
cli
out
or
andb
fildll
push
mov
add
cld
add
add
mov
stos
clc
push
or
mov
es
outsb
shlb
pusha
push
xchg
sbb
or
inc
gs
xor
jl
jle
add
or
dec
push
rcrb
pop
dec
pop
out
pop
testb
fs
cmc
orl
lock
sahf
in
add
pusha
rolb
movsl
push
pop
arpl
insb
inc
adc
insl
adc
or
mov
xchg
stos
jmp
add
popf
lea
dec
and
adc
test
into
stos
dec
cwtl
mov
dec
mov
ret
pop
sub
scas
dec
into
pusha
add
cli
jl
sbb
adc
inc
loope
out
test
incl
dec
lea
leave
inc
cmpps
ret
ja
mov
pop
insb
les
adc
jns
rorb
pusha
clc
das
rolb
mov
inc
sbb
adc
scas
stos
or
test
insb
push
push
loopne
inc
inc
mov
lcall
pusha
filds
mov
inc
movsl
jo
mov
inc
push
cmp
mov
fdiv
or
sub
push
or
xor
out
insb
mov
add
dec
loop
inc
or
dec
mov
push
loope
xchg
loope
add
clc
mov
cs
jge
ret
add
mov
dec
jno
adc
sub
stos
lds
sub
cld
pop
xchg
clc
aaa
roll
leave
call
movsl
mov
outsb
adc
add
loop
dec
mov
inc
pusha
or
cmp
mov
add
lea
das
sbb
es
push
pop
jae
test
cmp
int
cmp
inc
mov
fbstp
xor
je
mov
inc
fucomi
test
add
dec
add
mov
add
sbb
cli
pop
fistpll
add
push
mov
and
push
push
mov
outsl
incl
pop
cmp
out
adc
jecxz
push
xor
mov
pop
inc
adc
test
cmp
jg
icebp
add
pop
sbb
adc
or
js
or
pop
pushf
outsb
sbb
or
jle
cmp
adc
nop
or
pop
mov
int
jge
xor
sbb
dec
cmp
and
dec
fsubr
cli
inc
push
rcrb
add
xchg
cmpsb
xor
push
sarb
dec
cmp
sbb
les
push
repnz
inc
rorb
fs
stos
incb
jl
test
aam
add
dec
mov
pusha
or
pusha
scas
je
test
mov
ja
add
xor
or
xor
fcomip
or
into
pushf
xor
push
lock
movb
nop
inc
les
mov
or
or
push
add
or
cmc
jg
fisttpl
sbb
or
or
sbb
or
in
call
mov
incb
test
cmpsb
add
mov
clc
pop
cs
jb
xor
inc
or
lds
or
xchg
jo
adc
cmpsb
jbe
incl
sbb
loopne
dec
mov
into
ret
pop
add
or
or
dec
add
inc
adc
xor
inc
jo
fwait
add
sub
andl
sbb
rcl
push
cmp
mov
inc
loopne
cmpsb
inc
and
add
arpl
add
test
inc
adc
pusha
clc
inc
add
sub
pop
es
inc
inc
push
into
jge
pushl
mov
inc
popf
xchg
push
add
cmp
adc
call
int3
movb
aam
inc
adc
cltd
rorb
andb
inc
mov
jge
dec
or
jge
in
nop
mov
mov
decl
add
push
add
pop
lock
push
mov
nop
push
sbb
ja
push
xor
sbb
sbb
rorb
jno
cmp
mov
mov
sub
sub
jno
pop
lods
cmpsb
push
pop
adc
adc
outsl
clc
incl
inc
xor
cmpsb
mov
inc
nop
cli
dec
rcrb
pop
scas
rorl
pusha
cmpsb
and
push
pusha
and
ret
push
cmpsb
inc
movsl
adc
push
dec
rcll
xchg
pop
lock
sarb
lods
and
decb
cmpsb
cmpb
mov
cmp
cmp
sub
std
inc
sub
test
cwtl
adc
add
ret
adc
mov
sbb
jle
mov
fcmovb
inc
mov
xor
dec
push
mov
ds
adc
ja
pop
xchg
fidivrs
mov
add
adc
add
in
cmp
sahf
movsl
inc
xor
shlb
arpl
test
shlb
cmpsb
add
mov
mov
xor
inc
lret
loopne
sbb
sbb
dec
inc
mov
movb
add
call
mov
sub
push
add
adc
insl
cmpsb
outsl
pop
mov
adcl
pusha
or
loopne
cmpsb
cmpsl
nop
cmp
cld
fbstp
and
xor
sbb
mov
inc
or
ret
insl
hlt
mov
aas
inc
pusha
or
inc
push
and
add
les
test
add
dec
sub
cmp
sub
mov
mov
inc
or
fwait
sub
mov
dec
into
mov
xchg
aas
mov
mov
mov
cmpsb
push
sub
adc
mov
mov
popa
decl
mov
dec
inc
pop
adc
pushf
nop
mov
and
addb
and
xchg
lock
mov
ror
or
rcll
push
jg
cs
mov
sbb
mov
movsb
inc
je
lret
jmp
jae
movsl
std
nop
add
setno
aam
cmp
idivb
cmp
cmp
lret
out
rorb
nop
shlb
rclb
inc
add
pushf
add
push
push
adc
ret
rclb
or
lock
icebp
mov
dec
adc
dec
movsl
ret
rolb
mov
add
fs
cld
incb
mov
scas
xor
inc
daa
insl
sub
xor
adc
push
outsl
add
clc
sub
mov
movsl
fidivl
lret
add
add
pusha
cs
sti
mov
mov
or
mov
or
icebp
pusha
push
shlb
inc
inc
pop
jno
enter
jne
dec
or
pushw
mov
adc
inc
pop
and
sub
jno
cmp
ret
and
xor
push
bound
adc
sbb
add
rorb
shl
jl
or
xor
mov
add
bound
jmp
dec
pushf
pop
push
test
cmp
and
mov
outsb
add
and
pop
jp
pushl
std
pushl
add
mov
xor
sub
and
add
insb
call
xor
push
enter
push
xchg
xor
add
inc
addb
int
mov
add
mov
jle
inc
inc
inc
lock
rorb
lea
adc
outsb
mov
cmp
mov
lock
or
dec
rorb
jp
mov
das
jp
mov
push
fs
xorb
xchg
ret
xchg
cli
dec
pop
int3
push
data16
scas
imul
aam
mov
icebp
add
into
adc
mov
adc
rolb
mov
mov
mov
stos
mov
sbb
mov
lcall
addl
jmp
add
push
sbb
loop
push
jl
mov
dec
add
sbb
and
add
or
sbb
fsubl
in
mov
inc
ss
mov
dec
jecxz
xor
inc
sbb
xor
sbb
jp
dec
stos
push
mov
out
sbb
sub
sbb
pop
push
inc
dec
add
push
adc
mov
cmc
xchg
nop
xchg
add
cwtl
jle
inc
ljmp
out
xor
jnp
cmp
pop
daa
inc
xchg
loopne
inc
sbb
adc
mov
sti
mov
mov
imul
movsl
and
les
pop
movb
dec
mov
pushl
dec
movsl
int3
add
les
or
dec
adc
add
pop
lret
xchg
int
inc
mov
inc
dec
sar
sti
adc
orl
test
xor
sub
inc
addl
jb
int
clc
mov
add
mov
or
add
dec
cmpsb
cmpsb
pop
sarl
sub
inc
into
inc
mov
jg
rsm
add
outsl
cmp
pop
addb
inc
shrl
mov
or
orb
inc
daa
adc
in
bound
les
sub
dec
add
mov
scas
fdivrs
push
sbbl
ds
movl
fdivrs
add
cmp
repz
decl
rcrb
push
inc
int
inc
pop
dec
int
inc
cmp
pop
sbb
inc
or
inc
xchg
add
or
mov
sbb
pop
les
call
clc
sbb
push
mov
adcl
adc
cs
jg
insl
or
inc
dec
popf
les
lods
movsl
repz
mov
pop
mov
fiaddl
cmpsb
xor
xchg
les
pop
les
sbb
inc
or
or
add
sub
push
push
lock
nop
add
bound
push
dec
push
mov
ja
push
cmp
adc
jo
mov
push
andb
insb
push
push
ja
dec
pop
test
movsl
pop
es
test
mov
mov
mov
inc
cmp
call
aam
inc
nop
add
repnz
push
cmp
int
insl
rolb
add
stos
mov
insl
cmpsb
push
repz
fcoms
es
add
xchg
dec
pushf
cli
popa
sti
call
and
cmpb
out
jb
mov
adc
push
mov
add
pop
inc
cmp
dec
cmp
adc
xor
add
fisubrl
cmpsb
bound
addb
inc
int
test
pusha
mov
push
rol
lcall
jp
or
or
shll
add
inc
rolb
in
cmpb
add
inc
inc
add
add
sbb
mov
dec
jne
sbb
ret
push
rcrb
inc
filds
andl
jae
mov
dec
or
adc
adc
loop
call
add
push
or
enter
add
movsb
out
andb
rcr
sbb
les
sub
adc
lret
pop
lock
push
inc
movsl
les
mov
test
add
add
ss
xor
in
sub
jo
out
test
std
rolb
lahf
inc
inc
add
xor
dec
dec
rcl
xor
jle
aad
outsb
mov
decl
pushf
movsl
into
stos
dec
jle
dec
lock
mov
mov
pinsrw
push
and
push
and
jle
inc
fadds
in
fisttps
or
or
fs
jno
inc
pop
hlt
cmp
mov
fwait
je
andb
mov
cld
scas
fcmove
xor
in
roll
mov
cld
mov
push
lods
add
shr
dec
jle
test
adc
mov
jge
decl
add
or
mov
sti
decl
mov
rcll
add
pop
xchg
mov
mov
mov
or
daa
add
inc
jo
mov
orb
pop
or
push
out
dec
nop
push
dec
dec
jo
loope
mov
push
mov
or
push
loopne
and
pop
mov
xor
insb
mov
ljmp
loop
jno
add
mov
push
ret
add
insl
and
aam
and
jo
xchg
xchg
jbe
fstl
aaa
std
ja
out
add
out
or
or
int3
sbb
pop
je
js
decl
mov
and
les
or
loope
in
sub
mov
popa
add
push
cli
mov
fsubs
imul
add
pop
mov
loop
inc
and
or
xorb
cmp
jo
clc
fisubs
inc
inc
pop
in
push
mov
insl
into
add
mov
cmp
mov
add
int3
mov
andb
mov
push
add
test
rorb
push
or
insb
sub
sti
pop
pop
mov
popf
int3
scas
mov
and
addb
movsl
inc
fildl
xchg
mov
push
mov
add
mov
inc
test
lods
mov
xchg
add
mov
pop
mov
push
stos
dec
xchg
pop
mov
add
dec
mov
push
or
pop
dec
loope
or
dec
inc
mov
mov
add
cmp
or
ret
or
mov
or
push
lock
jno
or
dec
add
inc
cmp
jl
dec
inc
or
and
add
push
hlt
dec
mov
data16
je
outsl
jg
mov
clc
aas
test
nop
out
adc
add
or
mov
mov
inc
insb
sbb
add
cmpsb
and
pop
add
test
mov
jp
push
jne
cmp
mov
mov
lahf
je
outsl
inc
sar
pop
jg
leave
test
jp
xchg
xchg
inc
push
rclb
les
push
test
les
mov
into
add
inc
cmp
cld
pop
cmp
test
add
sbb
sbb
cmp
sbb
pop
mov
add
cld
aad
mov
loop
inc
add
mov
jg
dec
lea
pop
mov
mov
dec
lea
inc
dec
mov
inc
sahf
lds
mov
push
sbb
sbb
test
lahf
pop
push
ret
sbb
adc
xchg
jbe
incl
xchg
scas
test
inc
xor
pop
shlb
and
jg
out
mov
xor
adc
push
adc
jle
pusha
cmp
sahf
cmpl
int
add
xchg
das
push
push
xor
inc
lcall
sbb
lcall
cmp
inc
xor
adc
dec
inc
or
sub
cmp
adc
lock
xor
push
jne
lods
jmp
jo
loopne
movsl
call
cmp
or
cwtl
insl
cmpsb
aaa
ret
pushl
dec
mov
dec
add
add
rcrb
movsl
sbb
add
adc
jg
sub
outsl
push
push
dec
mov
sbb
add
fsub
add
in
fdivp
jbe
cmp
subb
lock
dec
pop
icebp
sti
cs
lock
or
cmp
movsb
pop
cmc
jmp
sbb
sbb
jecxz
and
jl,pt
inc
daa
insl
pop
fwait
jmp
popa
mov
shlb
or
lret
and
pop
mov
scas
cmpb
mov
scas
mov
rolb
mov
incl
cmp
mov
inc
jo
sbb
or
sbb
inc
loope
data16
dec
cmp
or
inc
ficoms
flds
sbb
jo
mov
adc
test
daa
push
roll
rorb
add
shr
adc
sub
popa
mov
in
mov
inc
or
inc
jnp
cmovo
mov
in
arpl
add
cmp
push
sti
lea
add
mov
rcrl
ljmp
fistpll
adc
add
int
dec
xchg
hlt
jne
add
pushl
adc
mov
jp
inc
push
js
sub
insb
and
mov
mov
pop
rol
ljmp
out
bound
adc
xor
loopne
add
fadds
decl
push
and
mov
cmp
pop
daa
or
pop
aaa
mov
in
add
pop
les
in
and
or
jg
add
dec
mov
adc
sbb
and
divb
dec
sbb
sbb
sbb
addr16
cmp
and
rcrl
pop
movsl
push
lods
add
incl
add
pop
or
js
push
mov
loopne
or
mov
adc
das
cmpsb
inc
and
loop
incl
pop
subb
test
xchg
or
mov
push
sahf
sub
cltd
push
add
pop
loopne
out
cld
sbb
push
pop
adc
je
add
add
xor
mov
pop
mov
or
pop
rcrl
test
scas
xor
xchg
loopne
nop
mov
or
out
add
inc
cld
add
mov
fwait
and
imul
adc
jbe
inc
insb
leave
frstor
loope
incl
das
test
outsb
les
mov
add
sbb
dec
pop
sub
push
rcrb
aad
fistps
add
movsl
test
icebp
pop
or
aad
add
jbe
cmp
int
xchg
mov
xchg
sbb
nopl
aad
push
add
out
pop
push
sbb
ljmp
subb
outsb
int
je
adc
mov
sbb
sbb
jae
adc
adc
adcl
cmp
fs
or
adc
and
lcall
sub
cmp
adcl
mov
ror
mov
dec
sub
insl
and
lods
lock
jg
insl
rclb
repnz
sar
test
pushf
add
bound
pop
pop
sbb
mov
hlt
dec
shlb
ret
stos
dec
ljmp
int
mov
sahf
and
dec
sbb
mov
jne
xchg
leave
mov
lahf
xchg
enter
sbb
xorl
or
cmp
and
sub
add
pop
adc
adc
mov
add
inc
xchg
movsl
in
test
filds
leave
mov
loopne
and
cld
push
inc
rolb
lock
and
adc
adc
add
adc
or
adc
or
cmpsb
ret
syscall
jo
add
cmp
push
pop
sti
mov
orb
insl
sub
stos
add
or
fs
and
movsl
jg
push
inc
imul
mov
inc
add
xor
push
add
cmpb
hlt
add
idivl
inc
push
sbb
mov
lods
dec
sbb
mov
xchg
jbe
cmp
pusha
mov
dec
loop
cld
lret
cmp
or
mov
jg
popa
lea
cmp
add
mov
mov
shlb
scas
ss
push
mov
push
gs
movsb
addb
mov
inc
mov
ljmp
loope
add
aam
xor
push
cmp
nop
daa
mov
push
or
pop
jo
movsb
pusha
daa
dec
xor
mov
lock
mov
add
adcb
adc
fisubrs
sub
inc
pop
dec
sub
push
out
mov
jmp
xchg
loopne
and
js
add
xor
add
sub
jo
add
cmpsb
push
lock
inc
aaa
mov
and
daa
adc
stos
or
rolb
adc
xchg
push
test
mov
scas
dec
sbb
add
dec
jg
fucomi
dec
mov
adc
xor
add
sub
popf
adc
adcb
movsl
adc
loopne
mov
adc
out
add
and
aas
sbb
cs
icebp
lcall
add
adc
test
push
sbb
xor
dec
adc
inc
sbb
inc
sbb
jg
or
sub
loope
add
adc
pop
jle
loopne
jg
shrb
adc
inc
add
add
push
loope
cmp
xor
inc
cli
and
xor
xchg
inc
cmp
add
adc
sbb
adc
lock
dec
les
or
js
stos
pop
sub
addl
push
inc
cli
filds
cmp
ret
aaa
jle
jle
sarb
clc
add
scas
push
loope
lods
and
sbb
dec
xor
add
pop
adc
cmp
xchg
cmp
or
pop
popa
test
lods
push
movsl
clc
add
jne
add
test
add
dec
dec
les
and
jge
xor
aad
sbb
push
push
shll
test
dec
repnz
test
cmp
daa
dec
and
shrl
jmp
stos
mov
add
lcall
add
lea
mov
adc
push
and
jp
orl
outsb
int
int
je
cld
sbb
pop
mov
je
les
fs
bound
insb
pop
push
sub
outsb
push
insl
mov
sub
lret
orb
push
mov
inc
orb
addb
mov
movsl
xchg
lods
cs
movsb
jmp
cwtl
adc
add
getsec
in
test
mov
imul
ret
cmp
lods
bound
pushf
cmp
leave
ss
xorb
shl
sbb
clc
or
xor
dec
into
dec
mov
and
jp
mov
or
xorb
sub
xor
cmp
inc
dec
adc
pop
test
push
pop
inc
push
stc
adcb
dec
sub
fisubs
jb
cmp
mov
les
dec
addb
insb
xchg
mov
xor
or
mov
clc
cmp
mov
je
and
add
mov
inc
mov
add
dec
ljmp
mov
add
and
popa
xor
pop
inc
pop
adcl
dec
xchg
lock
sub
rorb
lds
xor
pusha
rclb
sarb
push
mov
in
xorb
and
leave
add
mov
mov
or
std
aaa
and
dec
inc
iret
addr16
movsl
lods
roll
movsl
fiadds
in
dec
or
dec
add
xor
push
out
pop
orb
xor
pop
xorb
add
cmp
add
dec
mov
push
or
add
shlb
sbbb
dec
inc
or
roll
popf
xchg
in
jbe
lcall
andl
roll
into
movsl
adc
pop
sar
xor
test
mov
mov
jns
andb
dec
les
outsb
dec
pop
cltd
movsl
and
add
push
xchg
orb
add
or
xor
add
js
cwtl
loope
push
mov
in
sub
add
outsl
sahf
sbb
xor
inc
subb
or
mov
movb
data16
xchg
movsl
sub
push
inc
xor
cmp
mov
or
adc
mov
fisubs
outsl
mov
mov
inc
push
nop
add
push
inc
dec
cmp
mov
cmp
inc
cs
dec
inc
pop
imul
sbb
sbb
inc
or
jne
sub
pshufw
add
pop
repnz
std
call
aam
adc
push
jbe
push
cmp
push
popa
test
imul
jg
and
inc
push
jl
add
cmpsb
or
add
or
xor
mov
add
and
or
sbb
data16
inc
add
data16
mov
dec
icebp
mov
in
decl
add
orb
inc
push
pop
data16
inc
clc
xchg
sub
out
or
data16
imul
shlb
sbb
or
adc
mov
push
adcb
xor
adc
lret
inc
and
sti
push
inc
sbb
dec
mov
mov
sbb
adc
mov
mov
mov
xchg
rcr
fmuls
push
call
push
into
les
xor
inc
into
outsb
ret
repnz
sarl
inc
cli
dec
inc
and
cmp
sub
cmp
adcb
aaa
lods
mov
jle
dec
inc
mov
and
push
add
mov
adc
push
dec
pop
nop
and
jo
xchg
testb
xor
pop
sti
lds
lcall
sbb
out
xor
jbe
cmp
jg
and
push
test
sbb
add
out
or
inc
test
adc
or
jbe
cs
pop
gs
and
lcall
insl
adc
mov
add
mov
lock
add
inc
add
mov
dec
adc
or
int3
popa
into
aad
add
std
inc
sub
aas
inc
jecxz
add
out
lock
sbb
sbbb
les
or
scas
and
mov
movsl
or
insl
inc
shll
data16
decl
add
cmp
mull
jbe
mov
sbb
cmp
jo
movsl
scas
inc
xchg
inc
and
push
add
and
rcr
adc
mov
nop
mov
or
jne
dec
jbe
sub
into
xor
add
inc
and
cmp
insb
jbe
xchg
push
rorb
cli
mov
sub
dec
fcoml
cmpsb
inc
out
jne
in
mov
push
mov
adc
mov
rcll
loopne
lret
dec
cmp
xor
orb
stc
pop
sbb
adc
sbb
push
jg
lods
jge
xor
and
add
adc
loope
sbb
or
add
out
js
push
ja
inc
push
cmp
cwtl
adc
mov
int3
pusha
and
jne
cmp
jbe
lcall
jne
jp
adc
pop
jp
ja
jl
sbb
cmpb
cmp
sbb
test
push
rcrb
jg
lock
dec
adc
push
or
jmp
mov
mov
and
xor
div
jbe
mov
add
jbe
fidivrs
xor
inc
push
and
push
frstor
mov
pop
test
jle
fwait
mov
prefetch
or
mov
xorl
pop
sbb
dec
jle
test
pop
mov
aaa
adc
mov
in
jne
push
int3
adc
xchg
push
inc
into
inc
mov
add
pavgb
sbb
or
cmpsb
std
dec
adc
cmp
xor
add
mov
adc
dec
and
or
mov
cli
es
stos
dec
les
adc
adc
add
jge
adc
or
jbe
push
and
mov
ljmp
add
pop
fs
add
pop
aas
push
enter
fistps
mov
sbb
add
cmp
repnz
inc
and
adc
pusha
into
mov
popa
pop
push
pop
push
push
jbe
and
adc
add
or
cmp
imul
jge
jbe
stos
cmp
add
push
jbe
cmp
xchg
fisubs
cmp
dec
mov
popl
dec
mov
pop
adc
mov
adc
inc
jns
pop
pusha
jns
lcall
add
inc
push
adc
dec
jo
xchg
sub
sbb
ds
enter
mov
add
pop
or
cmp
cmpsb
dec
or
fwait
add
add
outsl
inc
add
jbe
adc
jg
popa
orb
pop
je
mov
push
das
ds
scas
jno
je
fcmovnu
outsl
rolb
je
add
cmp
add
lcall
adc
fs
daa
mov
nop
outsl
clc
add
dec
push
or
or
lock
dec
out
sbb
push
stos
sbb
std
push
rcrl
aas
xchg
xor
lock
push
enter
ret
dec
mov
in
jo
adc
pop
aad
clc
inc
and
sbb
push
adc
sub
jge
add
push
push
push
adc
push
cmp
rclb
mov
in
dec
rcrb
sbb
movsl
sub
add
cmp
fwait
add
or
or
mov
add
push
out
fcomip
fwait
pop
or
loopne
xchg
or
je
push
xor
sub
push
xor
fwait
cmp
mov
ds
testb
data16
adc
add
adc
incb
jne
mov
cmp
cmp
or
clc
pop
pop
int3
and
add
lock
add
ret
pop
jno
dec
cmp
or
or
sbb
daa
mov
xchg
push
xchg
ret
xor
pop
cmp
nop
aas
cmpsb
pop
add
movsb
inc
addb
fwait
mov
pusha
dec
pushf
movsb
cmp
and
cmpsl
dec
adc
cmpsl
sbb
jle
pushf
test
rolb
ds
decb
jo
push
insb
sbb
popl
adc
sbb
pop
sbb
and
dec
popa
push
add
fcomip
scas
hlt
pushf
pusha
aas
jge
inc
mov
pushf
ret
jg
push
add
pop
sbb
dec
add
dec
add
mov
push
icebp
add
dec
movsb
add
aaa
cwtl
pop
and
ds
sar
lds
pusha
lods
mov
jno
outsb
jb
or
ret
enter
jo
jo
sbb
ljmp
inc
and
cmp
clc
adc
adc
pusha
mov
insb
ret
into
mov
aas
pusha
mov
adc
mov
rol
dec
mov
pushf
mov
mov
divb
sbb
and
loopne
lods
movsl
push
xor
incl
into
mov
cmp
ss
clc
lcall
and
dec
jo
push
adc
sbb
mov
push
mov
add
mov
mov
movsb
je
jg
lock
rolb
dec
inc
nop
sub
dec
aas
js
lds
loop
test
jl
inc
inc
xor
mov
pushl
jge
cmpsb
jnp
ss
adcb
or
pop
rolb
add
cmc
cmpsb
insb
nop
arpl
or
mov
add
mov
or
xchg
push
scas
add
mov
push
adc
adc
pop
rcrb
jne
ja
scas
or
cmp
sub
add
xor
movb
mov
add
lds
cmovl
lds
push
lock
pop
adc
cmovg
pop
dec
and
dec
into
sub
or
inc
cltd
xor
std
adc
sbb
and
adc
les
push
jge
add
loop
xor
shlb
jg
push
sub
dec
ret
or
sbb
les
pushf
sahf
jno
gs
fmuls
inc
add
imul
mov
push
ljmp
mov
dec
leave
inc
adc
pop
push
hlt
add
dec
movsb
fistpl
jecxz
mov
xor
rcll
jo
jno
cmp
imul
add
movsl
icebp
mov
push
adc
movsl
sbb
mov
sub
and
scas
insl
jnp
push
mov
mov
outsl
stos
in
addl
inc
xorl
shll
jno
daa
je
add
push
add
data16
pop
push
mov
xor
lock
pusha
or
xor
sub
push
and
insl
pop
or
pop
mov
iret
add
add
inc
lret
inc
lret
jle
outsl
enter
dec
gs
dec
jno
outsl
sahf
rorl
sub
fcmovnb
cmp
rorb
outsb
mov
xchg
xor
inc
into
sub
imul
push
jl
dec
cmp
push
push
je
stos
jno
push
cmp
add
test
mulb
or
and
or
jg
fistl
adc
movsl
pusha
mov
inc
nop
inc
jns
addr16
or
and
adc
mov
enter
pop
and
jns
es
std
stos
push
mov
test
sbb
test
sub
sbb
decl
inc
stos
pop
orb
popa
popa
xor
movsl
fsubs
xchg
aad
loope
inc
andb
push
shll
sbb
pop
test
lock
add
ret
rorl
adc
xchg
pop
call
adc
loop
ljmp
add
dec
jo
cmpsb
mov
xor
add
adc
test
add
push
jge
aaa
adc
push
cmp
xorb
xor
hlt
xor
rcr
sti
addb
and
xor
xor
rcrb
dec
sbb
imulb
inc
cmpsb
pusha
nop
or
movsl
xchg
ficoml
or
sbb
cmpsb
call
sub
and
dec
inc
pusha
cmp
sbb
pop
adc
adc
movsl
dec
andl
test
xor
lods
mov
clc
mov
mov
sbb
push
test
add
pushf
inc
add
sbb
dec
mov
inc
sbb
inc
int3
dec
push
daa
push
les
mov
movl
leave
xor
or
lcall
mov
mov
mov
in
push
inc
mov
loopne
add
and
mov
cli
push
jecxz
inc
daa
sbb
stos
dec
mov
or
push
xchg
and
orl
jo
dec
push
jo
add
in
inc
mov
mov
cmpsb
pop
inc
push
add
mov
or
adc
sbb
mov
jg
add
sbb
sbb
enter
sbb
add
daa
push
cmp
dec
hlt
ds
push
test
xchg
ljmp
lock
dec
fs
push
les
popa
mov
push
jl
add
and
dec
sar
mov
aam
pop
or
sbb
jle
jbe
sbb
les
flds
lea
or
mov
ljmp
loopne
push
pop
into
lea
jge
inc
or
inc
jo
mov
add
std
or
push
insl
fsubs
mov
xchg
cmp
bound
movsl
ss
addl
je
mov
cmp
pop
std
push
inc
shrb
nop
sbb
mov
enter
cmp
mov
adc
inc
shlb
cmp
into
cmpsb
dec
add
inc
aam
int3
inc
movsl
mov
stos
movsl
adc
sbb
xchg
ja
mov
sub
inc
movsl
mov
nop
pusha
inc
add
add
test
fisubl
dec
or
movsb
xor
add
adc
adc
lea
mov
push
pop
inc
int3
and
jne
lret
dec
or
aad
shr
inc
popa
rcll
xchg
mov
add
pop
inc
or
and
loopne
adc
sarb
dec
shlb
sbb
push
push
sub
dec
inc
fmuls
mov
scas
rclb
les
inc
addb
cmp
sbb
jo
xorl
sbb
sbb
add
and
repnz
aas
les
mov
out
js
xchg
scas
jmp
inc
movsb
iret
subb
fisubl
or
add
mov
jle
lret
cmp
cmp
pop
add
clc
in
cmpsb
pop
inc
sub
cmp
add
cmp
inc
and
add
movb
jmp
inc
movb
adc
ds
mov
incl
add
adc
inc
sub
insb
sub
cld
test
mov
sub
adc
sub
orb
dec
ds
les
jnp
jae,pt
sbb
mov
icebp
adcb
out
stos
inc
add
leave
sbb
mov
mov
mov
rorb
lcall
adc
jo
mov
sbb
and
fs
loopne
sub
mov
add
jl
cmp
pop
mov
or
scas
mov
cmp
add
jbe
or
push
cmpsb
addb
mov
je
add
testb
fisubl
cmpsb
sub
sub
pop
sbb
mov
pop
addb
dec
xor
and
sbb
into
addl
pusha
or
or
push
xor
sbb
dec
mov
push
loope
jp
ret
inc
sub
jo
fisttps
adc
cmp
aas
jmp
orb
jle
push
rorb
popa
mov
popa
loope
push
rorb
push
pop
cli
ljmp
popa
add
and
into
mov
test
rorb
int3
dec
fidivrs
jle
andb
add
loop
sbb
inc
mov
push
jb
or
andb
mov
pop
or
inc
pop
mov
test
dec
inc
add
loopne
popa
jo
add
sbb
and
xor
lds
and
sbb
cli
jg
mov
and
shlb
jb
inc
or
ret
ljmp
andb
lcall
pop
insl
std
shld
loopne
mov
sbb
pusha
fistl
mov
ss
orl
orb
cmp
add
add
ds
mov
mov
pop
into
mov
cld
sbb
pushf
addb
sub
aad
or
jmp
add
or
test
inc
mov
or
mov
mulb
repnz
rolb
or
mov
jg
mov
add
pop
daa
pusha
and
add
je
push
sub
add
dec
add
into
jne
sbb
aaa
adc
inc
xor
lods
outsb
mov
inc
roll
push
sub
sarb
and
pusha
adc
jo
dec
outsb
mov
cmpl
or
push
push
out
fs
or
lret
jno
mov
xor
in
pop
jno
cmp
mov
int
inc
cmp
add
aas
inc
xor
push
movsb
andl
nop
inc
pushfw
adc
mov
cmp
fisubrl
lock
add
movsl
daa
pop
and
test
sbbl
mov
xor
mov
cmp
decl
shll
mov
aaa
cmp
verr
sub
inc
aam
sub
push
notb
lret
jo
inc
add
sub
out
inc
pop
adc
inc
sbb
push
addb
fiaddl
cmp
lods
cmp
push
testb
xchg
xchg
orb
cld
call
fiaddl
lcall
outsb
roll
pushl
push
xor
pop
cmp
dec
xchg
orb
out
shll
outsl
fildl
xor
sub
cmp
add
adc
sarl
xchg
pop
cmp
pop
subb
pop
pop
or
add
orb
add
pop
inc
and
decl
adc
add
je
es
mov
loopne
mov
and
or
clc
pop
xor
jno
cmp
add
jo
outsl
sbb
dec
xchg
incl
mov
inc
shll
or
or
sarl
clc
sbb
in
inc
xchg
movsl
add
lods
lock
mov
icebp
pop
in
dec
jbe
stc
pop
jae
pop
faddp
mov
push
lock
mov
and
jg
inc
or
dec
jno
pop
inc
cmp
or
loopne
push
or
mov
ja
decl
add
and
push
push
inc
inc
add
enter
xor
mov
or
bound
or
adc
cmp
push
icebp
ds
add
sarl
cmpsb
inc
sbb
inc
stos
ficomps
push
and
daa
jo
fs
xchg
adc
xchg
imul
sbb
mov
mov
sbb
push
xchg
and
divb
std
cmp
jle
cmpsb
jl
pop
sbbb
dec
pop
insl
je
loopne
push
push
shlb
fstpl
aam
cmp
add
nop
or
or
popa
jno
inc
lcall
xor
xor
into
mov
xor
mov
inc
dec
mov
pop
mov
pop
xor
into
push
inc
lea
or
or
cs
mov
add
outsl
add
adc
test
adc
pushf
movsb
pushf
xchg
pushf
cmpsl
fcmovnu
mov
cmpsb
inc
test
mov
mov
ljmp
lea
ret
dec
pushf
aas
inc
jbe
jo
cmp
dec
adc
dec
outsl
les
push
nop
cmp
inc
adc
cmp
pop
inc
test
and
dec
mov
mov
inc
nop
add
or
jno
ds
sahf
xor
cmp
push
inc
mov
add
push
add
dec
add
popf
sahf
in
mov
inc
sbb
sahf
movsl
xor
mov
inc
mov
or
dec
mov
rclb
cmpb
jbe
add
negb
fwait
mov
lret
push
mov
xchg
and
add
popa
movsl
mov
outsb
push
cmpsb
or
and
mul
inc
ret
jg
add
hlt
adc
mov
mov
insb
jo
push
push
push
mov
push
sub
and
sbb
cwtl
cmpsb
dec
in
and
mov
pop
xorb
sub
ja
aaa
hlt
push
jbe
cmp
and
cs
rcll
std
inc
sbb
ret
xchg
inc
movsl
arpl
loopne
push
pop
mov
mov
push
cld
adc
cmpsb
inc
in
sub
movsl
xchg
xchg
inc
dec
add
mov
mov
and
scas
mov
pushf
shlb
outsl
clc
das
dec
movsl
adc
stos
rol
adc
cmpsb
mov
add
mov
add
sbb
mov
in
pushl
add
push
popa
and
dec
or
mov
jg
mov
sub
or
mov
lock
sbb
jmp
mov
stc
push
testl
pop
decl
mov
xchg
add
jo
pusha
mov
mov
mov
add
jo
push
inc
inc
nop
push
adc
loopne
jmp
push
imul
mov
lcall
mov
dec
mov
adc
roll
jno
jnp
mov
push
test
loopne
cmp
sarb
dec
lock
ljmp
mov
add
addr16
aad
dec
fbld
pop
adc
mov
dec
push
push
add
nop
add
sbb
mov
inc
sbbb
add
je
adc
pop
andb
cmp
sub
pushl
cld
mov
xchg
dec
sbb
push
or
lock
mov
inc
and
add
pushl
rorl
lods
lahf
adc
outsb
pusha
pushf
cli
pushl
cld
pop
adc
cli
loopne
adc
adc
adc
test
cmc
cmp
pop
rcrl
inc
pop
rol
add
xchg
cmp
call
faddp
xor
cmp
mov
xchg
rclb
mov
mov
push
fldl
mulb
orb
adc
loope
add
dec
inc
dec
nop
daa
shlb
dec
push
pop
mov
push
and
jmp
cmp
adc
fiadds
subl
mov
cmp
dec
push
pop
or
or
rorl
nop
ja
jg
pusha
orl
dec
pop
into
lods
subb
sbb
sub
dec
int
jns
sub
les
fwait
ss
mov
xor
hlt
push
inc
jmp
into
or
inc
inc
pop
xchg
test
lea
outsl
sarb
cmp
xchg
lock
add
leave
les
add
idivb
incb
dec
insb
or
out
fsincos
rolb
pop
pop
add
addb
add
roll
fwait
inc
out
sub
adc
push
xor
cmp
addr16
sahf
outsl
or
roll
cmp
rcrl
mov
mov
mov
popa
dec
adc
inc
sub
addl
loopne
mov
dec
add
adc
sbb
inc
xchg
jmp
dec
or
add
in
push
mov
or
add
push
cmp
sub
add
inc
or
add
xchg
pop
js
js
lea
cld
inc
sbb
mov
loop
jb
xchg
rolb
jae
decl
jmp
pop
push
xchg
fsubr
add
adc
lret
or
ljmp
pop
xchg
std
pop
in
pop
mov
test
add
add
add
inc
les
fmuls
adc
daa
inc
stos
ss
sbb
push
cmp
cld
rol
js
jg
xor
mov
xchg
add
inc
insl
xchg
mov
cmp
sbb
inc
aaa
fwait
mov
mov
xor
add
add
add
xchg
lods
mov
test
push
pop
or
add
mov
and
dec
in
jb
fdivr
mov
mov
dec
add
shlb
or
movsl
stos
cmpsb
adc
mov
or
dec
push
mov
movsb
push
ss
into
cmp
inc
int
or
mov
mov
and
outsl
inc
rclb
addl
cmp
hlt
movsl
cmp
aaa
fadd
call
mov
lret
dec
orl
outsb
mov
call
cmp
jbe
subb
rcr
adcb
or
outsl
idivb
dec
and
iret
test
ret
ret
or
mov
mov
adc
add
cmpsl
adc
mov
repnz
rorb
jge
jg
mov
lods
add
movsb
incb
aaa
sub
addr16
add
icebp
sbb
xor
punpcklwd
add
inc
push
add
inc
sbb
jae
leave
or
mov
movsl
mov
add
adc
adc
add
je
call
movsl
sahf
inc
adc
lcall
movb
addl
into
xorb
mov
test
rcrb
insb
or
repnz
xor
dec
movsl
das
cli
pop
mov
cwtl
je
cmp
ret
push
mov
jge
push
ja
lret
push
sbb
mov
sbb
sub
stos
mov
lea
aaa
or
push
cli
lds
decl
mov
cmp
dec
mov
push
mov
jno
std
pop
add
popa
fcoms
testb
dec
xchg
enter
insl
pop
adc
add
mov
aas
mov
add
data16
jae
aas
inc
and
cmp
inc
lods
es
outsl
fcoms
push
cmp
popa
add
shr
mov
ret
xchg
hlt
inc
les
ret
dec
mov
sbbb
mov
push
fistpll
dec
mov
inc
and
or
addb
subl
dec
ljmp
orb
or
sarb
push
lock
clc
or
push
inc
lea
loope
adc
or
xchg
les
and
mov
data16
in
pop
dec
add
add
push
enter
insl
mov
cmpsb
cwtl
pushf
cmpsb
loop
mov
push
jno
sub
cmpsb
inc
add
lock
or
xchg
into
mov
pop
fistps
imul
xor
and
adc
shl
std
aaa
pop
clc
mov
repnz
mov
sub
clc
rorl
addb
clc
add
ficoms
add
push
fiaddl
sbb
sub
hlt
bound
into
or
inc
pop
mov
mov
inc
or
push
xor
or
stos
pop
and
jp
mov
adc
add
into
shrb
andb
sub
shlb
sbb
adc
push
jge
loopne
push
subl
or
mov
mov
sbb
add
ja
or
push
mov
imul
and
xchg
cmp
add
add
lret
into
mov
mov
movsb
les
push
js
sub
inc
pusha
or
sarl
sub
les
push
pop
inc
add
and
add
xor
aaa
or
mov
jno
sbb
jg
js
cmp
aam
hlt
xchg
mov
xchg
cmp
push
pusha
adc
push
xor
jnp
hlt
mov
pop
cmpsb
dec
push
push
push
ljmp
add
pop
andb
push
addr16
cmp
push
xchg
mov
dec
lds
push
inc
test
and
add
sub
add
test
neg
in
pop
shlb
adc
push
add
sbb
jg
in
movsl
jle
mov
lock
push
jle
mov
xor
add
dec
sahf
hlt
cmpsb
decl
cmp
jo
imul
fs
cmpb
test
nop
mov
inc
nop
rolb
rcrl
and
xchg
dec
push
push
mov
mov
movsl
popf
les
std
dec
mov
add
outsb
test
mov
std
add
mov
add
add
inc
repz
jge
pusha
scas
jmp
add
je
xor
nop
and
mov
int3
ret
add
cmpb
subb
or
add
insl
cmp
movsl
adc
stos
add
sub
lea
dec
pusha
pop
cmp
fiaddl
mov
adc
sub
shrb
jo
mov
dec
movsl
loop
movsb
out
inc
adc
add
js
ret
jl
mov
loope
sbb
mov
dec
cs
insb
movsb
push
das
xchg
sbb
push
sub
out
and
stos
icebp
sbb
iret
loopne
push
stos
popa
push
fcomip
out
clc
inc
pop
shlb
and
movsb
and
sbbb
fwait
mov
popa
inc
mov
std
dec
mov
and
adc
adc
loopne
mov
dec
arpl
sbb
push
and
inc
js
lcall
adc
fsubrs
sub
mov
add
jmp
andb
or
mov
arpl
jle
xchg
ror
push
push
mov
mov
imul
and
or
sbb
add
mov
xor
xchg
push
pop
rcr
push
inc
jge
mov
or
push
in
inc
addr16
or
ljmp
cmp
xor
xorb
pop
lods
add
and
add
das
push
inc
daa
pop
push
xor
movsl
push
cld
into
mov
push
pusha
add
adc
mov
mov
fdivr
xchg
sbb
iret
testl
and
pop
or
add
jno
add
inc
test
lea
dec
inc
jge
inc
pop
dec
push
decb
test
mov
inc
aas
cmpsl
std
add
outsl
and
sbb
insl
sbb
mov
mov
fs
add
adcb
and
outsb
add
lock
mov
xor
dec
adc
add
and
and
cmp
jno
cmp
sbb
pop
rorb
addl
push
dec
push
ret
pushf
subl
sbb
or
bound
insl
movsb
mov
xor
adc
ds
xor
inc
push
cltd
mov
test
dec
fildll
mov
mov
ret
shll
and
loopne
loopne
push
movsl
jmp
sbb
dec
lcall
mov
or
and
rolb
ja
mov
clc
cltd
jo
lods
dec
lcall
sahf
add
xor
je
inc
push
sbb
and
cmpsb
add
push
inc
lret
mov
movl
lcall
fcompl
std
dec
cmp
data16
or
insl
dec
dec
ds
stos
add
push
xorb
cltd
sbb
lret
mov
out
in
mov
dec
cmp
or
cwtl
mov
mov
cltd
jo
or
push
decl
jle
shrb
xchg
mov
cmpsb
dec
fcomip
push
insl
sbbb
and
nop
test
dec
xor
sbb
cld
cmp
je
dec
rolb
icebp
or
nop
xchg
sub
cmp
inc
xor
mov
dec
mov
les
icebp
popf
mov
mov
jg
push
cmp
nop
jae
pushf
loope
or
push
push
pop
push
cld
idiv
popf
nop
adc
leave
std
rolb
push
movsl
sbb
loopne
xchg
aam
pop
or
adc
mov
cmp
add
test
movsb
add
cmp
cmp
sbb
ja
int3
fwait
cmpsb
mov
cmp
test
push
bound
add
inc
cli
jl
loopne
mov
int3
add
in
cmp
push
in
aaa
in
push
fs
dec
add
cli
das
cli
inc
cmp
add
mov
sbb
or
adc
movsl
cmpb
int
mov
and
mov
mov
std
loope
or
stos
pop
adcb
add
pusha
lods
jno
jno
pop
popa
bound
bound
sub
rolb
nop
mov
and
xchg
jp
gs
call
inc
push
les
mov
xchg
xor
rcll
dec
jbe
shr
add
repnz
stc
adc
mov
sub
aaa
les
lahf
or
int
loopne
jmp
xor
mov
mov
sbb
hlt
pop
addb
or
gs
popl
inc
sti
pop
or
inc
mov
decl
xchg
sbb
xchg
loopne
nop
dec
adc
or
rolb
or
or
dec
sbb
add
inc
adc
or
lcall
mov
add
inc
inc
add
cmpsb
inc
mov
add
dec
add
inc
dec
lock
pop
xchg
adc
mov
cmp
push
mov
mov
jg
shlb
mov
inc
or
mov
icebp
ljmp
shrb
or
adc
or
or
adc
inc
jp
add
sbb
dec
gs
xchg
xor
push
xor
pushf
pop
sbb
mov
push
add
repnz
clc
jg
inc
xchg
mov
mov
pop
add
adc
inc
or
sbb
jae
cld
test
jae
dec
sub
inc
jnp
sbbb
add
or
dec
jae
or
insl
scas
vmovsldup
mov
movsb
sbb
jno
cmp
xchg
dec
loopne
gs
push
jl
or
js
lds
mov
es
and
outsb
enter
loope
jg
inc
shlb
addb
push
jae
inc
mov
add
inc
jo
sarb
dec
loopne
jno
cmp
inc
enter
rclb
or
and
mov
or
mov
jg
pop
dec
mov
mov
and
pop
adc
popa
clc
or
rorb
movsb
decb
movsb
fwait
jl
and
ss
push
add
cmp
sub
stos
xor
dec
movsb
fldenv
test
jno
push
cld
mov
add
xchg
add
andb
and
push
dec
movsl
test
sbb
shrl
incl
jo
inc
sub
adc
add
int
inc
add
cld
push
mov
add
or
add
sbbb
rolb
pop
imul
enter
inc
mov
cmc
rolb
movups
push
adc
and
dec
push
or
inc
repnz
dec
pusha
ss
add
or
jbe
inc
sub
sbbl
cld
pushl
and
xor
inc
adc
fs
mov
push
or
cmp
xchg
sbb
je
inc
shlb
daa
adc
jo
jge
clc
fwait
lcall
push
jno
fiadds
je
fcmovnu
inc
into
sbb
sbb
fists
cmp
aaa
cmp
push
jp
sarl
into
and
dec
les
sub
inc
cld
add
aas
call
ds
adc
fistpl
inc
dec
cmp
fwait
repz
or
cmpsb
adc
pusha
ljmp
shlb
cwtl
pop
into
insb
nop
clc
jl
fidivrl
call
or
sub
cmp
mov
lods
dec
cmp
je
pop
cmp
insb
fmull
pop
jno
icebp
decl
or
adc
cmp
ss
movsb
nop
pop
mov
xor
pop
mov
ja
xor
jecxz
xchg
ss
std
dec
xchg
rorb
adc
aad
push
or
inc
dec
cmp
fisubrs
add
jbe
ds
cli
fisttpl
inc
or
and
xor
ljmp
inc
sbb
mov
aas
lods
or
subl
xor
push
add
inc
ja
add
push
mov
dec
mov
sbb
add
adc
repnz
inc
ljmp
dec
adc
pop
addb
mov
add
dec
in
mov
jno
out
test
inc
xchg
sub
test
movsl
or
mov
loop
scas
xor
mov
mov
mov
lcall
inc
ret
xor
cltd
lods
cmp
sysenter
add
xorl
dec
loop
jo
mov
fmull
adc
ja
push
add
andb
mov
jge
outsb
cmp
jbe
xchg
adc
xor
ret
dec
xor
sub
incb
cmpb
nop
sbb
mov
cs
data16
outsl
inc
jl
test
ret
mov
sti
jp
aas
mov
add
mov
add
sbb
inc
lret
lret
lods
sbb
lods
pop
push
dec
mov
loopne
dec
xchg
add
mov
pop
in
icebp
mov
sahf
or
mov
aaa
push
xchg
sbb
sub
jae
repnz
adcb
scas
push
push
push
xlat
jbe
mov
mov
sbb
lock
xchg
cmp
push
mov
insb
fimull
and
je
add
dec
mov
dec
xchg
dec
xchg
dec
dec
mov
cltd
les
sbbb
test
std
fldt
je
test
adcl
add
mov
add
inc
ret
fiaddl
das
or
sbb
int
sbb
lds
jo
jno
xor
or
dec
mov
mov
cmp
push
out
xchg
ret
and
movsl
dec
inc
or
sub
jne
divb
push
xor
adcb
or
push
mov
mov
incl
inc
adc
dec
test
fsubs
int
push
add
int
imul
adc
dec
xorb
stc
inc
adc
clc
orl
add
or
subl
lock
nop
sbb
push
or
pop
sub
mov
xor
add
inc
xchg
xor
add
push
mov
mov
or
or
mov
add
sub
data16
adc
inc
pop
xchg
adcb
and
jg
sub
jb
and
inc
or
dec
cmpb
ja
sbb
add
inc
mov
mov
inc
pop
data16
pop
inc
nop
pop
push
push
ja
or
les
dec
pop
push
push
add
pop
stos
rcrb
incb
loop
sub
add
icebp
inc
rcll
adc
lahf
inc
sti
mov
stos
pop
inc
sub
adc
inc
push
or
ljmp
jo
inc
daa
pop
add
sbb
loop
fwait
hlt
pop
shll
push
mov
mov
lret
in
data16
sbb
les
fdiv
adc
imul
je
add
sbb
lods
mov
add
sbb
sbb
fisubrl
xchg
fs
add
sbb
loope
pusha
xor
cmp
mov
add
push
daa
sbb
ficomps
sub
or
or
add
mov
pop
mov
push
dec
jle
loopne
push
jecxz
inc
add
dec
jbe
cmp
and
add
inc
add
push
bound
js
sbb
inc
mov
add
adc
add
cmp
mov
incl
sbb
mov
fisubrs
ret
mov
mov
xchg
mov
fwait
mov
mov
sbb
adc
and
add
mov
add
rorl
add
lock
push
stos
std
mov
push
mov
inc
pushw
inc
or
pop
mov
mov
clc
sub
out
loop
ds
dec
cli
or
andb
and
std
sbb
add
push
cmp
push
andl
rclb
testl
mov
stos
mov
bound
pop
mov
cmc
sub
out
or
scas
inc
pop
add
or
push
mov
or
push
inc
lret
sub
dec
aas
out
sub
push
xor
adc
mov
in
repnz
popa
adc
adc
into
push
pop
insl
push
cmpsb
push
mov
inc
stos
popa
adc
and
mov
hlt
mov
add
dec
adcb
cmp
arpl
pusha
and
inc
cli
add
arpl
inc
mov
xor
dec
clc
mov
push
rcrl
loopne
dec
sbb
adc
and
imul
push
les
add
das
inc
xor
test
push
dec
add
movsb
aas
hlt
add
add
dec
mov
fisttpl
mov
adcb
movsb
sbb
pop
mov
add
mov
xchg
repz
push
fwait
jb
mov
xor
xor
fisubrs
int
aad
push
in
pop
dec
movsl
scas
addb
adc
int3
lahf
std
push
sbbl
mov
inc
loopne
rorb
test
push
cmpb
stos
add
sub
decl
push
sbb
jno
mov
mov
movsl
dec
stos
add
push
mov
inc
mov
dec
mov
add
inc
lcall
pop
xor
mov
mov
pop
test
popa
arpl
dec
mov
add
push
shr
push
push
push
mov
pusha
and
jno
std
popa
sub
ljmp
inc
sbb
jp
test
lods
movsl
es
mov
add
jge
sbb
or
dec
sub
punpcklwd
sub
push
add
push
push
jge
sti
push
mov
jecxz
loop
adc
sub
imul
push
rclb
inc
mov
xor
pop
adc
mov
and
mov
adc
sbb
sub
leave
fdiv
loope
mov
cmp
or
push
shlb
mov
sub
ror
add
push
add
repz
push
addb
or
lock
lock
ja
mov
xor
mov
cmp
sbb
cmp
adc
decl
je
push
rolb
adc
adc
sub
mov
pusha
pop
and
sbb
lock
xchg
pop
jg
or
add
pop
push
sbb
or
and
es
jecxz
xor
in
adc
pop
push
fbld
pusha
xchg
mov
incl
inc
enter
inc
add
movsl
xchg
inc
jo
mov
sbb
cwtl
xor
mov
add
subl
adc
or
jbe
loop
mov
xor
add
add
inc
or
or
cmpsb
push
adc
push
std
fwait
push
push
mov
add
push
cmp
loop
dec
test
lcall
clc
das
adcb
pop
jne
mov
dec
adc
shrb
pushf
lock
push
repnz
cmp
ja
and
jo
push
rol
cmp
rcll
or
mov
push
push
and
sub
mov
pop
negb
pop
icebp
divb
lock
xchg
cmp
inc
into
add
mov
mov
mov
jg
idiv
roll
frstor
popa
jo
or
push
adc
add
and
add
daa
pop
sbb
inc
mov
mov
pop
mul
xor
daa
jns
jg
mov
rclb
adc
dec
mov
add
sbb
js
call
push
sbbb
test
fildl
fstpt
adc
nop
out
ljmp
xchg
pushf
jae
cmp
mov
enter
mov
pop
subb
pop
insl
mov
pop
add
aaa
pop
ja
les
cmp
in
pushf
nop
push
pushl
into
and
inc
cmpsb
dec
rclb
jb
inc
mov
les
inc
rcll
nop
addl
pop
and
test
push
dec
jo
movb
into
pop
jo
sub
pop
shrb
inc
add
ljmp
or
pop
cmpl
mov
cld
aaa
mov
inc
inc
sbb
jo
mov
push
inc
jmp
mov
imul
mov
sbb
xchg
dec
test
push
adc
xchg
add
cmp
xor
mov
add
adc
shlb
push
loop
adc
add
cmp
adc
bound
mov
test
sbb
incl
adc
mov
jge
mov
testb
mov
cmpsl
shr
orb
movb
cmp
dec
mov
add
dec
adc
jle
and
int3
xor
push
pop
mov
add
cmpsl
jmp
les
push
pop
sbb
lock
and
mov
push
pop
pop
and
mov
push
cmpb
adc
xor
xor
sqrtps
data16
aaa
jmp
push
mov
push
movb
push
lock
mov
adc
inc
fisubrl
dec
mov
cmp
mov
into
pop
movb
inc
cmpb
pusha
dec
int3
lods
inc
push
cmpb
push
mov
call
xchg
adc
sbb
decb
movsl
pop
call
or
andb
scas
fidivrl
and
cmp
rolb
push
jo
adc
push
jl
sbbb
mov
mov
inc
mov
jle
sbb
mov
popa
pop
add
adc
int3
xchg
or
cmc
push
cld
jg
or
ret
mov
and
pop
movsl
frstor
inc
add
dec
jg
xchg
rclb
adc
and
jno
pop
and
fbstp
incl
jp
add
add
xor
add
decb
leave
adc
sbb
mov
movsl
add
movl
call
mov
inc
jno
shlb
pop
push
ja
mov
adc
xor
jmp
pop
and
xor
mov
add
repnz
into
jae
cmp
ja
mov
lcall
pop
icebp
lret
clc
add
outsb
mov
inc
loopne
and
adc
inc
cmp
adc
addb
lock
addb
std
mov
in
xchg
sub
sbb
xchg
mov
jb
pusha
add
ss
add
mov
xchg
mov
jge
jo
push
add
gs
cmp
mov
push
ds
inc
and
leave
xchg
ret
or
clc
cmpsb
push
add
jb
sbb
adc
movb
mov
jbe
rcrl
es
out
jmp
push
leave
push
loop
fdivrs
cs
add
inc
ss
jno
add
aaa
ljmp
shlb
or
inc
sbb
ljmp
testb
enter
or
inc
lcall
icebp
sbb
inc
or
sti
ret
dec
daa
pop
sbb
adc
cmp
lea
sti
add
jge
jge
jge
lock
and
sbbl
jo
pusha
push
sbb
es
push
sbb
xor
jge
pop
mov
add
into
mov
cmc
cmpb
dec
add
or
cs
popf
jo
mov
jb
add
cmp
push
shrb
cld
mov
mov
add
add
xorb
stos
mov
inc
test
mov
je
cmp
stos
incl
int3
mov
pop
cmpsb
lock
and
mov
and
push
lret
lock
and
add
adc
mov
mov
adc
popf
int3
mov
cmp
sub
add
mov
test
shlb
jno
sub
xlat
int
pop
and
push
xor
mov
or
xchg
movsb
jge
xor
sbb
sub
sarb
add
dec
add
jge
adc
fisttpl
and
add
adc
mov
mov
sbb
out
add
dec
sbb
faddl
xor
or
je
mov
mov
stos
ret
add
lods
fmuls
mov
push
and
mov
add
sub
pop
cmp
les
movsl
or
ds
inc
mov
mov
or
mov
sub
xor
push
and
sub
or
adc
add
dec
adc
addb
adc
call
push
jbe
test
dec
jbe
lods
cmp
add
dec
add
out
pop
mov
mov
xchg
cmp
cmpsb
into
add
decb
push
mov
cmp
inc
pop
leave
es
add
sti
sbb
enter
pop
fwait
rcrl
add
inc
rcrb
inc
sub
fs
sbb
or
push
push
or
cmp
push
mov
add
xor
xchg
inc
cs
icebp
lea
int3
xor
push
inc
orb
rolb
and
cltd
outsb
popl
lcall
ret
in
push
orb
aam
add
inc
into
adc
movsl
add
dec
loop
mov
push
in
add
sub
nop
lea
stos
push
mov
int
lcall
mov
les
or
ss
inc
or
mov
jmp
jb
sub
push
or
jg
movsb
mov
shll
adc
sbb
shll
sti
xor
inc
roll
inc
pop
test
daa
or
pop
incl
insb
mov
push
add
add
js
ja
push
je
movsb
adc
pop
add
inc
enter
xor
jb
fisubrl
sub
or
mov
inc
mov
ja
ljmp
stos
push
add
add
mov
xor
movsl
adc
mov
nop
sbb
jmp
and
daa
andb
pop
mov
jl
out
mov
jl,pt
xor
cs
fs
adcb
rorb
mov
ds
add
xchg
lret
stos
mov
or
fidivl
or
jecxz
movsl
xchg
adcb
or
incl
test
inc
ret
mov
inc
ret
ljmp
jno
push
mov
sub
and
stos
sar
cmp
inc
sbb
push
inc
push
lret
inc
push
push
or
loope
adc
in
cli
or
mov
fldt
add
or
push
shll
cmp
into
lds
or
sahf
rorb
mov
cmpsb
jg
add
mov
pop
subl
add
cmp
add
outsl
and
popa
add
movsl
rcll
lcall
add
outsb
jbe
cmp
sub
aas
inc
dec
and
hlt
ja
incb
mov
pusha
or
xchg
rcrb
mov
jbe
cmpl
inc
or
sbb
adc
lods
cli
rcrl
rorb
sub
dec
inc
jg
mov
cmpsb
and
enter
js
test
insb
and
rol
mov
xchg
dec
hlt
mov
sbb
incl
mov
or
or
cmp
or
test
add
cmp
cmc
mov
inc
je
cmp
sbb
pusha
inc
mov
lret
add
cltd
and
xchg
cld
mov
orb
sbb
roll
outsb
scas
andb
or
adc
sbb
push
imul
mov
push
jl
lods
mov
inc
and
sbb
sub
rclb
and
push
pop
inc
adc
stos
add
loope
enter
sub
ljmp
xchg
inc
dec
mov
add
loopne
cmpsb
loopne
roll
add
call
pop
and
and
adc
adc
mov
or
add
push
pusha
add
cli
rorb
out
adc
add
arpl
inc
pushl
add
push
aam
nop
je
or
mov
push
fs
inc
fdivl
adc
fdiv
scas
shl
push
mov
pop
js
mov
push
inc
add
fwait
inc
cmp
add
xchg
test
into
push
inc
sti
pushf
rcrl
push
adc
jge
jne
add
inc
sbb
inc
aas
stos
and
mov
cmp
sbb
pop
push
faddl
mov
inc
faddl
and
and
cwtl
sbb
xchg
mov
mov
xchg
fidivs
cld
add
in
inc
cmp
jbe
scas
frstor
lcall
fidivs
and
arpl
push
and
adc
mov
add
xchg
pop
add
cs
scas
xchg
sbb
lods
daa
add
adc
inc
adc
add
insl
fistl
test
jl
dec
mov
pop
mov
push
call
frstor
pop
xchg
cmovbe
lock
push
pusha
adc
pop
jo
or
adc
or
push
loopne
mov
dec
jo
sbb
mov
xchg
or
push
pop
loopne
dec
into
pusha
add
int
xchg
and
add
jg
add
mov
jp
mov
push
mov
daa
dec
add
ret
push
mov
fsubs
dec
add
ret
sub
mov
inc
pop
add
decl
pusha
sbb
add
jmp
mov
push
rcrb
mov
lret
jle
mov
call
add
push
imul
inc
sbb
pop
mov
mov
out
cli
mov
jne
cmp
pop
or
lock
es
and
add
add
jmp
popa
add
inc
pop
inc
bound
sub
sub
es
incb
dec
test
adc
push
mov
or
dec
cmpsb
jb
mov
xor
dec
cmp
js
sti
mov
imul
add
push
add
cmpsb
inc
push
aad
ret
and
dec
push
mov
cmpsb
pop
and
xor
xor
fildll
imul
mov
test
rcr
push
insl
orb
mov
cmc
mov
or
js
cltd
add
inc
nop
sbb
fmull
or
sbb
adc
or
dec
cld
pop
popa
ss
nop
add
or
jmp
js
dec
push
jo
in
jmp
mov
jno
push
sub
add
sub
adc
jmp
lds
mov
movsb
movsl
fsubrl
sbb
sbb
pushl
xchg
movsl
sub
or
enter
dec
lock
mov
add
sbb
or
adc
sahf
xchg
sub
movsl
inc
xchg
inc
call
and
pop
cmp
bound
jo
sbb
push
in
push
orb
into
push
lods
and
and
cli
push
loope
xor
jmp
push
dec
adc
notb
xor
fcmovnu
movsl
mov
movsl
into
icebp
adc
mov
daa
mov
add
scas
xchg
mov
xor
shlb
add
add
out
cli
dec
add
inc
movsl
mov
call
mov
mov
adc
mov
mov
daa
mov
xor
dec
xor
stos
neg
inc
decl
inc
xor
or
or
enter
clc
outsb
inc
adc
movsl
ret
add
sbb
test
jge
and
adc
mov
and
mov
pop
jmp
nop
or
or
sar
mov
shl
call
and
push
sub
incb
mov
rorb
pusha
push
push
inc
add
pop
and
sbb
pop
jl
sbb
sub
add
nop
or
movsl
adc
cmp
and
pop
dec
icebp
js
push
mov
or
mov
xchg
shlb
mov
push
outsl
adc
nop
push
inc
add
adc
pop
sbb
leave
push
or
nop
femms
and
sbb
retw
push
xchg
push
dec
xor
adc
les
or
pop
and
add
push
cmpsb
inc
push
std
jmp
int
dec
aas
ljmp
shrb
sarb
cmp
mov
or
sbb
fldt
mov
pop
jg
or
lock
xor
dec
aas
movsb
add
dec
mov
pop
add
add
pop
sti
push
enter
fists
inc
sub
mov
jle
not
xor
mov
jno
loopne
incl
loope
aas
adcb
cmp
cld
hlt
pop
or
cmp
jo
mov
sbb
andb
mov
pop
outsb
or
pop
shrb
ret
ret
pop
cli
mov
xor
add
mov
daa
xor
and
test
jbe
xchg
test
shrl
cmp
xlat
or
stos
and
cmp
ja
cmp
adc
pusha
std
mov
adc
add
sbb
push
bound
mov
or
mov
inc
jo
inc
dec
movsb
xor
cmp
imul
add
lret
aas
test
push
subb
and
inc
add
adc
cli
dec
loopne
insl
and
xchg
jo
xor
loopne
xchg
ja
ja
out
fmull
mov
mov
mov
repz
add
adc
jge
xlat
mov
hlt
push
or
jmp
xor
add
subb
andl
xchg
and
int3
rolb
test
xor
je
mov
scas
gs
sbb
std
add
add
sahf
leave
sub
cmp
cld
adc
inc
daa
jae
pop
icebp
imul
std
out
sbb
test
pop
ss
adc
sbb
adc
jb
sbb
nop
ja
jle
or
fdivs
adc
push
jo
jl
incl
cmp
push
add
add
dec
rcll
cmp
mov
jno
xchg
cmpsb
pop
or
sbb
dec
inc
add
push
dec
cmp
push
xor
cmpb
clc
decb
mov
mov
xchg
insb
cld
str
add
nop
imul
mov
nop
add
outsb
or
push
pop
inc
enter
enter
add
jbe
ds
mov
ss
adc
movsb
nop
dec
idiv
pop
sbb
cli
jno
or
sbb
adc
sbb
inc
loope
stc
imul
adc
adc
jge
iret
adc
dec
roll
leave
imul
jb
xchg
adc
imul
mov
adc
push
add
adc
shrl
and
mov
and
jo
mov
jb
adc
xchg
jbe
cmp
add
add
hlt
mov
adc
mov
pusha
sub
ss
jge
and
dec
add
shlb
movb
xor
sbb
fimull
sbbl
add
jo
arpl
mov
movb
pop
push
insl
sub
outsb
test
in
mov
jg
or
mov
mov
pop
inc
lcall
add
mov
add
jbe
cmpb
addl
mov
sub
jbe
mov
or
dec
mov
test
adc
subl
push
xchg
push
dec
jno
mov
push
inc
mov
addl
inc
mov
loope
addb
mov
push
dec
push
or
inc
fidivs
int3
fiaddl
into
xor
pop
add
scas
sbb
mov
adc
push
bound
les
xor
js
jb
push
subb
or
test
je
clc
inc
add
add
mov
ds
xor
movsl
xchg
and
or
repz
ljmp
je
jecxz
shlb
add
lea
add
add
js
jl
rclb
imul
lcall
movsl
xor
push
sbb
addb
repz
movsl
inc
mov
xorb
dec
adc
adc
add
notl
push
xchg
mov
les
mov
mov
shlb
int
imul
add
cmp
jp
add
shlb
lds
sbb
es
xor
sbb
lret
rorb
jo
adc
cmp
cmp
sbb
and
sub
mov
add
sbb
add
jnp
pop
jl
sbb
or
pop
or
mov
popl
add
int
jae
popa
aaa
lods
clc
mov
add
cld
addb
stos
addb
cli
mov
cmp
xchg
daa
push
inc
xchg
shrl
cltd
pop
subl
subb
and
das
repnz
cltd
sbb
int
sub
inc
inc
inc
adcb
sub
cmp
movsl
movsb
orb
mov
or
add
cltd
add
add
lds
inc
les
or
movsl
int
mov
daa
push
sub
add
rorb
or
insl
cmc
pop
xchg
insl
and
or
add
les
or
lret
pop
pop
cmp
mov
adc
add
or
fwait
or
push
dec
inc
jge
dec
inc
dec
cmpsb
loopne
jns
jg
jo
dec
ss
enter
and
pushf
xchg
add
into
mov
adc
add
ret
cmp
pop
data16
cmp
push
adc
into
add
adc
test
sub
xor
sub
add
pushf
movsl
lods
mov
mov
and
inc
push
in
movsl
or
add
mov
add
pop
adc
mov
cmp
inc
or
mov
push
adc
decl
stos
push
inc
mov
lahf
ja
adc
test
mov
cmp
mov
cmpb
dec
movb
mov
test
orb
pushf
xlat
mov
lds
rolb
fwait
std
add
xor
mov
sbb
mov
jl
or
add
inc
enter
out
mov
xor
stos
add
into
mov
dec
dec
lret
movsl
insb
add
shrb
pop
adc
push
jne
aaa
sar
mov
add
xor
adc
subl
fwait
dec
mov
push
cmp
inc
cmp
add
jb
sbb
ret
adc
or
inc
or
mov
orl
sbbb
addl
movb
out
js
data16
add
ret
mov
inc
mov
movsl
jo
or
fbld
mov
inc
inc
ss
xor
mov
pop
inc
hlt
jns
and
sub
mov
mov
ror
add
test
add
hlt
inc
jnp
outsl
fdivp
fwait
loopne
loopne
sub
xchg
sarb
dec
xchg
push
ret
loop
pushl
dec
mov
inc
push
shlb
mov
adc
add
rolb
cwtl
sbb
inc
xor
int
inc
insb
std
dec
add
into
and
shlb
daa
imul
sbb
mov
lret
jb
jge
dec
jg
sahf
dec
insb
sbb
adc
insl
cmp
mov
dec
jl
sbb
xchg
outsb
mov
adc
push
push
push
lahf
mov
mov
add
jno
sbb
xchg
fcomi
loopne
sbb
mov
cmpl
push
and
push
push
push
and
addb
inc
xchg
and
inc
incb
pop
out
push
clc
adc
and
into
mov
push
dec
mov
mov
movsl
arpl
mov
aad
pusha
daa
dec
inc
or
mov
jbe
pop
mov
adc
fs
mov
push
mov
mov
xchg
out
data16
push
mov
clc
add
and
push
dec
pop
push
movsl
int3
shlb
push
outsl
sub
inc
or
jle
sbb
les
fisubrs
jb
fstl
dec
xor
loopne
mov
pusha
clc
incl
cmp
and
pop
inc
dec
out
shrb
ret
adc
jne
push
inc
les
mov
dec
push
xchg
loope
test
mov
add
push
mov
test
movsb
xchg
inc
subl
pop
addb
outsl
push
jo
mov
pushf
pop
test
inc
or
les
add
pop
push
test
push
jb
xor
outsl
clc
and
pop
mov
add
popa
mov
loop
loopne
mov
sti
push
mov
js
jb
inc
into
mov
adc
inc
les
cmc
cltd
jo
dec
mov
push
inc
add
xchg
lds
jge
js
add
adc
push
push
mov
andl
loopne
mov
pop
pop
or
or
fmuls
add
inc
test
pop
pop
sbb
or
lea
sbb
mov
add
int
lret
cmc
out
cmp
push
dec
mov
jbe
adc
adc
add
es
adc
jmp
jp
jbe
test
sub
es
dec
dec
xor
loope
xchg
xor
cmp
or
pop
dec
cmp
push
inc
mov
sub
add
rorb
cmp
loopne
push
ds
sarb
cmpsb
into
cmp
enter
push
mov
or
xor
sbb
es
mov
adc
add
cmc
sbb
mov
inc
bound
ficoml
jmp
es
mov
scas
cmpsb
loopne
add
inc
adc
sub
sbb
pop
sbb
rolb
mov
mov
sbb
cld
adc
loope
adc
movsl
test
pop
lock
shrl
mov
dec
push
orb
mov
adc
pop
sub
dec
cmp
mov
inc
mov
xchg
ret
test
je
rolb
jle
jmp
dec
mov
les
loopne
mov
scas
jmp
loop
push
add
or
pop
lea
xor
fistpl
xor
adc
outsb
add
push
push
mov
jge
inc
push
inc
and
push
cmpsl
mov
xchg
mov
ret
lea
inc
cmovl
out
pop
jb
push
shrl
rcrb
dec
ds
push
push
dec
fisubrs
test
mov
add
mov
mov
fmuls
and
pop
in
fcomip
inc
add
nop
add
inc
sbb
les
dec
movsl
es
sbbb
test
sub
cmp
das
lods
and
fcmovu
and
shlb
movsl
dec
adc
jo
sbb
xchg
loope
mov
mov
add
rclb
add
rclb
push
imul
lds
insb
sbb
scas
clc
stos
and
decl
add
cmp
jle
pop
popa
or
cmp
mov
test
pusha
pop
int
add
into
push
jmp
pop
mov
stos
add
cmp
mov
add
push
dec
les
imul
roll
adc
push
mov
dec
in
sub
mov
outsl
fs
push
cmpb
outsb
mov
push
sbb
popa
push
jge
cmpsb
push
xor
jl
xor
data16
movsl
out
xor
loopne
or
orl
pusha
adc
or
shrl
add
xor
data16
or
dec
xchg
pusha
or
lock
call
rclb
add
sub
js
scas
inc
or
movsl
jne
hlt
jmp
xchg
xchg
fcmove
ds
leave
mov
adc
xor
jg
mov
divl
in
inc
or
dec
jo
push
lds
into
inc
je
xor
loop
cld
add
xor
cmp
in
stos
inc
inc
adc
cmpsb
pop
daa
push
add
daa
insb
cld
imul
shrb
insl
mov
push
in
daa
mov
mov
xchg
xchg
in
std
jg
call
mov
add
dec
imul
push
push
movsb
xor
mov
leave
je
movsl
sbb
bound
loopne
xorb
mov
mov
cmpl
push
jne
or
sbbb
faddl
mov
sarl
lcall
adc
push
push
vpsubb
push
and
xor
imul
or
cmp
fisubl
xor
loopne
mov
fiadds
inc
pop
mov
dec
dec
push
loopne
and
call
sub
dec
xor
shl
insl
dec
cmp
adc
repnz
pop
adc
dec
ret
or
push
or
movaps
bound
dec
inc
sub
pop
lock
add
inc
or
or
pushl
ds
nop
inc
shl
mov
inc
push
movsl
mov
loop
test
pop
pop
lcall
adc
push
sbbb
jbe
mov
push
pop
icebp
push
or
jno
sub
inc
cwtl
push
mov
jb
pop
dec
inc
hlt
xchg
jge
add
and
imul
imul
jg
pop
lret
test
and
add
daa
gs
push
fs
inc
pop
pop
sbb
icebp
add
sub
jbe
sub
pop
mov
adc
xchg
out
adc
or
movsl
mov
push
or
mov
and
mov
push
push
pusha
add
xor
and
ret
jmp
or
andl
mov
ret
or
enter
fidivl
adc
or
inc
or
or
ret
push
push
test
add
cmpsb
xor
lock
xchg
push
cmp
decl
jle
sbb
mov
fwait
ljmp
mov
insb
mov
push
or
push
mov
mov
jle
or
jne
or
pop
adc
xor
fcomi
lcall
dec
inc
adc
push
sbb
sbbb
mov
incl
loopne
pop
push
enter
add
add
push
adc
mov
adc
cli
cmp
or
adc
popa
xchg
cmp
pop
pop
jne
pop
movsl
insb
mov
or
aaa
cld
lcall
xchg
nop
inc
jo
inc
mov
dec
jl
movb
mov
or
jecxz
pop
and
jno
addb
pop
add
cmp
int
xor
clc
mov
cmpsb
mov
lahf
ror
add
adc
or
mov
mov
mov
push
add
stos
cmc
jg
mov
ds
push
jmp
push
dec
adc
add
push
imul
push
mov
shlb
ljmp
pop
add
inc
sub
sbb
nop
sti
nop
push
dec
push
loopne
movsl
add
rcrb
inc
mov
mov
sti
das
sbb
pop
and
mov
mov
sti
or
push
xor
xlat
pop
dec
imulb
dec
adc
and
jb
mov
adc
xor
push
pop
or
inc
out
movsl
ja
sarl
add
sub
add
push
movsl
mov
loopne
sbb
push
clc
mov
or
and
rcr
add
xchg
jle
push
scas
sub
fmuls
and
xor
es
jns
sbb
lods
push
dec
push
push
ljmp
add
les
xchg
add
inc
mov
lret
mov
mov
push
mov
leave
xchg
inc
add
nop
sbbb
adc
inc
adc
jl
pushf
xor
cmp
rclb
adc
pop
sub
add
mov
ds
ja
jmp
ficoml
test
jecxz
je
out
add
add
add
fdiv
in
aaa
int3
movsl
push
add
mov
xor
lock
add
adc
xor
dec
inc
adc
incb
and
sub
inc
lret
inc
insb
lock
mov
cmp
push
mov
mov
mov
add
dec
sbb
add
in
sbbb
add
or
subb
or
mov
stos
mov
mov
insl
mov
mov
sbb
mov
adc
jge
sub
test
sbb
mov
xchg
inc
rorb
adc
cmp
cs
es
cmp
in
or
jmp
adc
dec
dec
and
adc
xchg
rolb
inc
push
inc
movsl
popf
lea
xorl
int
inc
adc
sbb
mov
fwait
add
mov
fs
mov
add
and
xchg
sarb
shll
mov
inc
mov
inc
dec
sbb
cmpsb
mov
pop
xlat
inc
inc
loop
insb
mov
rolb
and
addb
das
shrb
ror
out
adc
add
push
addb
inc
lcall
adc
ffree
decl
mov
add
push
aas
stos
adc
mov
jge
and
add
inc
movsl
sbb
sahf
or
xor
add
addb
sub
mov
pop
sub
jle
lcall
or
pop
inc
xchg
add
mov
je
xor
out
mov
jo
push
shrb
inc
dec
inc
inc
and
les
hlt
jo
inc
add
push
sub
mov
xor
adc
gs
add
inc
scas
sbb
or
movsl
xchg
xchg
xorb
mov
mov
mov
repnz
mov
mov
xor
jno
xor
mov
ja
fildl
adc
mov
inc
jg
popa
mov
push
sub
fildll
movsl
cld
roll
sbb
sbb
addl
inc
add
jb
inc
sti
mov
sbb
lock
cmp
imul
push
mov
into
mov
in
js
adc
lock
jb
xor
xor
aas
mov
sbb
jg
sub
addb
sbb
enter
or
daa
pop
in
inc
mov
cmp
pusha
push
pop
ljmp
dec
sbb
jge
jbe
sub
roll
bound
xorb
stos
push
jle
outsb
xor
sar
stos
add
call
sub
inc
mov
mov
inc
xor
adc
xor
js
arpl
movsl
xor
loopne
cmp
mov
bound
shlb
roll
sub
sub
or
mov
fadd
push
movsb
loopne
jo
inc
inc
cld
or
leave
pop
rolb
ljmp
js
ss
mov
xchg
mov
dec
orb
and
pop
sbb
mov
dec
or
pushf
leave
lahf
mov
cmp
mov
divb
mov
add
sub
mov
lea
or
dec
push
mov
or
mov
inc
rcr
mov
mov
lcall
sti
sbb
cmp
push
test
lock
push
sbb
xor
ljmp
call
cmp
dec
or
dec
pusha
mov
xor
loope
adc
test
push
fisubs
lcall
cmc
mov
orl
push
jmp
jbe
mov
jbe
cmp
or
das
clc
data16
and
pop
fucom
cmp
inc
push
imul
sub
xchg
inc
push
mov
pop
push
incl
dec
cmp
mov
add
sbb
and
push
pop
fwait
hlt
aas
adcb
orb
push
add
and
sub
cltd
subl
and
adc
mov
pushf
inc
pop
mov
sub
imul
test
dec
int
adc
es
push
popa
test
fwait
icebp
push
adc
insb
adc
loopne
ret
shl
loopne
add
lret
into
or
push
xchg
sub
aaa
lahf
cmp
mov
call
adc
sbb
add
mov
movsl
push
mov
inc
fidivl
imul
gs
or
inc
add
jae
push
mov
inc
imul
in
xchg
fs
push
loopne
test
dec
into
or
mov
jno
in
jmp
roll
mov
inc
mov
adc
or
inc
push
add
push
add
cmpsb
mov
add
cld
dec
sub
ljmp
dec
clc
pop
dec
movsb
cmpsb
push
loopne
xchg
mov
add
xor
scas
and
adc
sbb
jae
movsl
stc
mov
shlb
addl
adcb
mov
into
mov
pop
and
pop
push
push
loopne
int
adc
cmp
jle
mov
jne
mov
adc
fimull
push
mov
xor
inc
mov
lahf
ljmp
test
add
call
aaa
inc
inc
sub
enter
test
add
dec
push
bound
or
je
pop
cmp
dec
mov
les
outsl
cmp
mov
add
and
push
adc
popa
xchg
loop
pop
adc
push
adc
or
shll
or
dec
mov
dec
movsl
test
outsl
outsl
loop
adcl
pop
or
aas
repz
pop
dec
dec
sub
adc
pop
insl
xchg
add
mov
loopne
clc
aaa
adc
and
mov
mov
jae
jnp
mov
sbb
incl
fnsave
popa
add
sbb
nop
add
into
mov
ljmp
cwtl
cmp
dec
sub
cmp
sbb
dec
icebp
mov
mov
add
sahf
and
cmp
xor
mov
adc
lock
mov
push
and
dec
mov
sarb
sbb
les
jecxz
sub
int3
add
pop
ficoml
decl
xor
jne
adc
shlb
mov
xor
mov
pop
push
pop
xor
add
fimuls
push
adc
ljmp
daa
dec
fcomip
cltd
clc
test
adc
adc
pop
xor
mov
sub
dec
sbb
pop
popa
adc
adcl
mov
dec
adc
les
mov
adc
lahf
test
lret
mov
add
adc
ret
std
sbb
pop
js
xor
add
dec
cli
inc
enter
das
push
dec
scas
cli
or
xchg
movsl
add
push
xchg
mov
std
mov
adc
jg
lcall
dec
sbb
dec
mov
push
adc
shl
sbb
mov
ret
xor
popa
push
adc
aam
movsb
add
inc
fdivs
test
in
shll
push
add
xorb
in
ret
mov
xor
movsl
lods
enter
pop
pusha
xor
bound
ds
jp
test
push
cli
cmp
or
push
push
adc
xchg
fcompl
dec
cmp
fwait
and
lea
pop
ret
pusha
sbb
in
add
jno
push
sbb
test
and
xchg
push
insl
adc
mov
incb
pop
sbb
sbb
mov
ret
pop
into
xchg
fmuls
mov
adc
add
movsl
mov
adc
push
jnp
mov
andb
movsb
scas
mov
movsb
pop
scas
cmp
sbb
dec
movsl
lea
repz
stc
cmpsb
sbbb
sbbl
sub
add
xchg
adc
xchg
mov
inc
sub
mov
mov
sub
bound
sbb
pop
movsl
mull
mov
mov
mov
inc
je
add
cmp
push
insb
adc
shlb
and
arpl
cmpsb
dec
xchg
les
fisubl
stos
orb
add
and
or
push
add
inc
sub
add
loopne
adc
pop
push
jbe
loopne
inc
push
fdivs
or
add
xor
es
lds
mov
mov
das
into
dec
lds
mov
jb
outsl
mov
fsubs
movsl
adc
jb
jg
or
in
mov
add
mov
adc
push
pop
int
test
decl
nop
and
inc
in
cld
mov
sbb
test
mov
int3
mov
mov
and
push
pop
add
jle
loop
inc
dec
pop
mov
push
lcall
inc
fdiv
shll
inc
cli
dec
sub
dec
cmc
adc
mov
cmp
inc
lock
mov
lcall
lock
rolb
dec
call
adc
sbb
sar
add
popa
rclb
push
into
nop
jbe
mov
mov
mov
pop
push
stos
fldt
cmc
xorb
jo
and
addl
cmp
jle
and
and
jl
xchg
xor
and
movsl
sbb
add
rorb
js
push
icebp
imul
rorl
divl
inc
cmp
cmp
or
rorb
movsb
mov
add
insl
data16
adc
dec
aad
movsb
xor
adc
mov
mov
sbb
mov
inc
add
cli
ja
jp
jmp
push
push
jbe
push
mov
mov
mov
adcb
push
jmp
jb
jo
and
inc
inc
dec
xchg
cmp
add
mov
int3
scas
xorl
mov
fmull
insl
rcrb
xchg
rolb
add
jmp
filds
adc
pusha
or
pop
fwait
and
and
andl
outsl
stos
dec
inc
mov
roll
int
xor
or
jnp
into
in
jo
mov
cmpsl
add
lret
shl
rclb
add
add
xor
or
movsl
add
movsl
jbe
ds
push
loope
push
sub
inc
add
lcall
aas
mov
outsb
das
mov
addb
xor
ret
loopne
fbld
and
shrb
add
aam
mov
rcl
ds
or
add
jb
xchg
orl
add
mov
jle
inc
nop
add
mov
or
jne
incb
add
je
inc
iret
push
and
push
push
sti
or
repnz
in
inc
add
or
adc
insb
adc
jge
or
add
mov
xchg
adc
inc
push
je
inc
or
icebp
push
lret
add
mov
adc
sbb
movsl
mov
add
dec
mov
xorb
mov
or
xor
dec
mov
xchg
push
or
sub
mov
rcrb
pusha
xor
push
inc
or
mov
aas
xchg
or
movsl
clc
add
xchg
lock
in
xchg
mov
shrb
fwait
out
enter
mov
inc
adc
inc
fsubr
add
mov
gs
add
or
inc
js
push
andl
mov
sub
add
xorb
clc
movsl
mov
mov
pusha
mov
movsl
pop
ficoml
lods
add
aam
and
sbb
fsts
sbb
cs
dec
shlb
xchg
mov
lods
xor
jle
fstl
jo
dec
adc
cmpsl
add
xchg
jp
cmpsb
dec
icebp
outsl
clc
es
into
ss
pop
mov
pop
add
mov
inc
adc
leave
fidivl
ret
mov
sub
push
mov
xchg
sub
inc
out
jge
mov
iret
xor
test
shll
test
dec
xchg
mov
ds
lods
add
movsl
xor
ss
inc
ljmp
scas
movsl
push
adc
push
pop
enter
add
push
aad
adc
xorb
add
xchg
movsl
push
and
xchg
movsl
cmpsb
cmp
ret
ss
es
int
call
and
addb
fisttpl
insl
mov
and
or
fbld
xor
int
bound
sub
ljmp
or
sub
pop
popa
push
fisttpl
imul
adc
add
jns
test
lcall
jo
cmp
add
fisubrs
addl
and
adc
xchg
add
inc
add
dec
lock
rorl
adc
jle
ljmp
iret
mov
mov
add
js
lret
pop
jbe
or
inc
sbb
or
aaa
jmp
mov
add
push
decb
adc
pop
xchg
rolb
movsl
out
inc
scas
idiv
mov
add
filds
je
or
sub
and
dec
push
dec
cmc
fbstp
and
or
idivb
inc
inc
adcb
std
add
rolb
mov
push
les
add
xchg
imul
pop
ficomps
mov
mov
mov
jb
mov
sub
jbe
nop
sub
jge
mov
popa
and
gs
push
push
fs
dec
ljmp
inc
in
popa
fisubl
pop
jp
test
or
xchg
or
add
lahf
adc
test
add
test
sbb
rorb
adc
js
xor
and
ja
jg
dec
push
faddl
enter
movlps
adc
jbe
push
pop
scas
push
fiaddl
jle
push
enter
out
mulb
mov
xor
pop
sub
mov
add
jne
adc
or
or
dec
pop
or
ljmp
lds
mov
add
add
ret
cmovg
add
clc
jg
dec
es
dec
shrb
pop
inc
add
mov
adcl
fbld
dec
movsl
adc
stos
sbb
sbbb
mov
in
mov
jecxz
cmovo
bound
sbbb
ljmp
or
inc
enter
pusha
ds
sbb
xor
push
enter
or
adc
pusha
je
sub
xor
ljmp
inc
sarl
pushw
jnp
popf
jg
add
cmp
mov
inc
mov
ret
shlb
decl
inc
addb
push
pusha
push
ret
pop
pop
mov
inc
cmpsb
cld
sub
repnz
jl
add
sub
push
jb
inc
addb
imul
pushf
shlb
ret
daa
dec
cwtl
adc
imul
inc
and
add
cmp
adc
add
adc
or
clc
mov
mov
push
or
scas
jmp
lea
and
adc
ja
add
sub
shlb
movb
aam
ficoms
scas
ror
jg
xor
inc
cmp
mov
and
mov
cmpsb
adc
popa
fwait
mov
or
daa
sarb
and
mov
and
dec
and
pusha
mov
popf
mov
or
adc
push
loop
jle
adc
mov
adc
mov
or
pusha
mov
xchg
mov
ret
loopne
lock
pusha
das
cmc
sbb
rorb
mov
ret
jo
adc
ret
inc
or
inc
mov
adc
insl
movsb
jbe
inc
addb
lcall
or
aam
mov
rcrb
cmpsb
inc
sbb
pop
pusha
or
dec
sub
mov
inc
add
pop
or
and
inc
movsl
sub
add
shl
cmpsb
pop
daa
mov
aaa
push
jmp
mov
push
shll
cwtl
subb
inc
sub
add
bound
aam
int3
push
add
sbb
cmp
pop
and
movsl
inc
cmp
add
sbb
xor
cmp
dec
ret
std
jg,pt
inc
lock
flds
add
dec
mov
addr16
mov
sbb
inc
pop
movsb
pop
lock
jle
add
dec
push
cmpsb
f2xm1
or
inc
inc
test
mov
lods
sti
xor
shlb
subl
adc
fdiv
neg
scas
lods
les
mov
sbb
subb
or
sbb
and
les
push
dec
sarb
inc
adcl
rorb
and
push
icebp
mov
popa
adc
call
inc
pusha
sub
cmp
xor
mov
adc
add
js
mov
addb
call
sti
andb
jle
mov
xor
inc
loope
or
xor
sub
sub
std
sahf
mov
rolb
sbb
jp
xor
or
insl
inc
rcrb
scas
ret
push
inc
mov
lret
add
insl
or
push
daa
jns
pop
lock
lods
gs
and
add
or
cmp
add
sti
ljmp
in
xor
mov
sbb
roll
jns
pusha
pop
imul
les
push
sbb
adc
or
xchg
push
rcrb
jo
out
es
push
add
inc
lret
push
add
int3
mov
in
out
xor
xchg
jbe
cmp
loopne
mov
nop
loope
cli
shl
mov
lock
movsl
ret
lock
daa
pusha
and
xor
ljmp
sbb
or
inc
lret
xchg
add
pop
mov
inc
push
adc
xor
add
add
outsl
xor
sub
aas
test
rcll
adc
inc
adc
adc
es
sub
loopne
mov
pusha
add
or
hlt
push
movsl
addr16
es
stc
push
sub
sub
mov
dec
and
mov
mov
mov
xchg
push
jb
shrl
jne
fstl
mov
lahf
nop
adc
imul
dec
out
cs
lds
or
loopne
int
movsl
inc
out
or
lods
adc
mov
or
outsb
push
je
inc
mov
pop
push
xor
pusha
add
adc
cmp
insl
shr
stos
daa
in
and
cmc
lods
push
jo
in
mov
stos
dec
cld
mov
push
bound
mov
inc
insl
inc
mov
push
push
dec
movsb
mov
movsl
nop
push
xor
push
push
rorb
xchg
subl
push
sub
test
idiv
xchg
nop
call
jo
cmp
fwait
daa
push
jbe
adc
mov
cmpsb
inc
je
mov
shll
hlt
dec
and
dec
leave
inc
jp
pop
or
adcb
mov
fwait
sbb
in
cmp
sbb
roll
mov
aad
mov
inc
mov
shll
jle
mov
or
jl
sub
shll
sbb
inc
cwtl
cmp
add
push
mov
xchg
xor
inc
pop
pusha
push
lock
push
addb
add
out
cmpb
push
lds
xchg
xor
pop
jo
lods
loope
pop
les
mov
movsl
push
adc
loope
adc
dec
mov
ljmp
inc
and
ror
andb
push
lds
xchg
lret
mov
sub
add
push
push
and
pop
test
add
jbe
movsb
push
jmp
add
add
add
call
push
fisttps
adc
rorb
prefetch
jbe
xor
mov
movb
lcall
push
mov
mov
out
jne
pop
push
adc
int
inc
fadds
mov
dec
mov
dec
xchg
xor
test
xchg
fbld
jg
sub
push
adc
bound
and
or
imul
mov
cld
sbb
xor
sbb
xor
inc
sbb
dec
scas
cmp
mov
loope
mov
outsb
xchg
jbe
inc
pop
rolb
fs
jg
fbld
rolb
mov
pusha
roll
lret
nop
ss
dec
mov
or
mov
sbb
cld
jb
rcll
andb
jae
push
stc
jl
cmp
sub
or
shl
clc
cmpsb
pop
or
sub
add
add
hlt
mov
shl
adc
icebp
sbb
loopne
mov
ljmp
rorb
xor
mov
ret
adc
dec
ljmp
or
or
add
pop
or
mov
sub
inc
sub
je
ljmp
and
arpl
clc
and
pop
fcoml
repz
ljmp
dec
jo
push
push
decl
movsl
fnstsw
mov
inc
popf
push
dec
xor
pusha
sar
mov
cmpsb
loopne
pop
jo
insl
nop
cs
adc
rolb
jle
xchg
popa
js
sub
sbb
sti
incl
fs
inc
sbb
rolb
fs
icebp
mov
aaa
inc
pop
jge
and
inc
je
or
in
jg
inc
mov
insb
dec
adc
scas
mov
adc
rcrb
es
xor
mov
dec
imul
inc
rorb
jmp
repnz
dec
mov
inc
or
lock
add
fwait
inc
sbb
movsl
xor
repz
jg
mov
adc
std
lcall
mov
es
sub
lret
or
cli
enter
daa
or
sub
push
sbb
xor
adc
std
mov
movb
push
dec
adc
pop
add
lds
imul
outsb
mov
fisttpl
test
dec
cmp
xchg
aam
or
add
push
and
inc
jb
imul
xor
pop
ljmp
dec
movsl
in
fisubs
push
or
jl
pop
repnz
push
or
push
xchg
pop
and
test
dec
aas
add
into
jg
jg
mov
daa
xchg
inc
adc
adc
jo
daa
or
mov
jmp
sahf
std
mov
mov
jmp
adc
adc
ljmp
push
pop
adc
pop
iret
inc
call
jo
int
xor
mov
movsb
push
jb
push
mov
inc
pushf
test
ds
das
cli
inc
dec
mov
mov
adc
dec
mov
loopne
andb
insb
shrl
or
ficoms
mov
or
call
enter
movsb
pop
cmc
push
std
cmpsl
push
sbb
inc
shl
inc
cmpsb
leave
mov
push
add
sub
fnstsw
sbb
sub
mov
mov
enter
mov
ljmp
cmp
lcall
inc
mov
add
sbb
sub
cmp
pop
or
cld
dec
mov
push
jecxz
dec
daa
pop
add
in
filds
mov
xchg
push
add
add
adc
add
add
or
jne
dec
shrl
add
or
pop
mov
sbb
cmp
das
clc
enter
lods
mov
mov
repz
push
mov
jg
mov
daa
adc
add
add
lock
xor
add
add
mov
decl
or
mov
add
orb
subb
sbb
icebp
cmp
test
jb
push
add
or
xchg
cmp
push
pop
outsl
out
and
sbbb
and
or
push
movb
mov
mov
jge
pop
add
sub
jbe
xchg
add
insb
cmp
jbe
and
les
ja
adcb
shrl
in
push
sarl
jge
push
mov
sub
ret
push
faddl
xor
xchg
adc
outsb
loopne
add
and
test
add
and
mov
push
add
jmp
fmull
add
movsl
add
xchg
and
xchg
adc
mov
js
inc
imul
push
inc
mov
lock
cmc
stos
pusha
or
or
leave
add
xor
cmpsl
mov
dec
pop
rorb
push
fwait
pop
mov
popa
push
inc
push
adc
mov
mov
adc
xchg
jl
mov
lods
test
movsl
fsubs
and
cmp
shll
push
sub
push
inc
cmpps
and
sbb
and
in
es
pusha
cmp
daa
pop
add
pop
mov
mov
mov
jmp
enter
aas
into
test
int3
jb
inc
inc
sbb
or
push
cld
decl
push
cli
inc
mov
inc
pop
mov
push
push
subb
clc
sub
test
push
pusha
sbb
lret
adc
xchg
add
dec
add
mov
adc
push
add
inc
and
dec
inc
ret
and
add
ljmp
insl
and
sbb
dec
push
pop
sub
pop
lock
fsubrs
push
inc
jbe
fadds
push
jg
pushl
pop
sbb
addl
sub
or
incb
fwait
inc
adc
fnstenv
xchg
adc
sahf
mov
test
dec
or
neg
mov
shlb
or
push
inc
ret
or
ljmp
sbb
push
sbb
adc
imul
pop
adcl
push
pop
pushf
stos
xor
sub
gs
mov
loopne
or
jecxz
and
bound
push
jl
cld
adc
shll
pusha
fcmove
loopne
rcr
or
repnz
add
cmp
jbe
mov
cmp
je
cmp
push
add
add
test
fwait
pop
std
dec
aas
inc
int3
and
cmp
adc
adc
push
cmp
stc
imul
mov
loop
mov
pusha
dec
sti
outsl
fsubs
jae
push
aam
shrl
imul
popa
loope
loopne
xor
insb
insb
das
es
push
pop
adc
or
je
movsl
imul
push
add
pusha
loop
add
push
movsl
xor
xchg
push
nop
xorb
inc
xor
es
leave
or
pushl
and
add
sbb
mov
arpl
into
popf
addr16
int3
pop
std
daa
inc
inc
bound
jo
and
gs
movsl
add
adc
decl
sbb
mov
sbb
inc
push
gs
sti
ja
push
xor
int
data16
mov
popw
nop
push
dec
mov
and
or
pusha
dec
pop
jl
loopne
add
cwtl
ja
add
fadds
pusha
add
test
fmuls
stos
cmp
test
inc
popf
jbe
clc
inc
add
pushf
inc
sti
push
adc
jg
or
pop
leave
lahf
cmp
and
imul
jmp
and
mov
data16
mov
mov
popa
add
inc
xchg
adc
push
movsl
shrb
inc
subl
dec
mov
add
es
jl
jg
add
inc
adc
adc
push
adc
out
and
lahf
inc
add
adc
mov
add
or
testb
inc
xorb
clc
cltd
and
sub
int3
xor
std
fcmovne
popa
push
mov
mov
aam
mov
lahf
sbb
inc
or
pusha
mov
inc
add
ss
mov
cwtl
mov
mov
mov
inc
push
xorl
sti
mov
mov
jge
stos
loopne
add
or
mov
into
movsl
and
mov
std
add
dec
xor
xchg
lds
sub
pop
out
fs
push
and
sbb
orb
and
sahf
adc
sbb
pop
subb
mov
xchg
inc
mov
inc
vpsrlw
sub
test
pop
adc
cmp
adc
cld
add
and
add
pop
add
sbbb
das
shlb
sbb
push
hlt
ret
sub
xor
es
test
mov
idiv
mov
lods
movsl
lock
in
lea
or
ss
in
jg
notb
xchg
adc
lock
mov
pusha
cmp
add
push
adc
push
mov
iret
adc
pop
inc
pop
inc
fmul
movsl
and
inc
je
test
jno
lods
daa
sub
pop
mov
nop
add
mov
push
cli
int
subl
movsl
aad
nop
inc
ljmp
int3
jno
shlb
xor
outsl
add
jae
xor
daa
out
jp
int
dec
fisubrl
adc
rol
pop
pop
sbb
and
and
push
add
push
dec
inc
add
xchg
aaa
or
testb
rcrb
sar
roll
add
adcb
std
add
mov
dec
dec
dec
inc
adc
add
fsubrl
adc
sbb
jbe
popf
mov
in
xor
xor
jnp
inc
xorl
push
loopne
test
xchg
bound
lock
push
push
or
and
add
push
pop
sub
fidivrl
or
int
mov
mov
sub
loope
das
add
sub
int
int3
sub
mov
loopne
push
call
enter
and
ret
push
rclb
xchg
push
or
xchg
xchg
mov
mov
fwait
xor
mov
movsb
add
ljmp
or
clc
movsl
test
lock
sub
mov
test
jg
mov
jo
push
lea
stos
cli
rolb
push
or
push
ss
testb
lock
jns
adc
sub
dec
jmp
movsl
lods
mov
and
aam
jb
andb
adc
sbbb
lret
cmpsb
decl
sbb
sbb
sbb
pushf
pop
mov
and
movsl
mov
aam
int3
dec
xchg
das
adc
cmc
adc
xchg
add
nop
xchg
dec
nop
push
fldt
xchg
das
jb
sbb
test
ret
sub
movsb
xor
js
xor
jbe
push
pop
or
ja
cmp
sbb
aam
sub
cmp
mov
sar
cmp
xchg
fnop
repnz
rcll
xchg
jo
mov
test
jg
jnp
or
add
and
int
repnz
adc
xchg
push
xor
jg
popa
sub
mov
movsl
in
pop
loope
sub
mov
dec
fmull
aad
add
push
orb
ljmp
push
add
cwtl
daa
add
incl
imul
loope
and
lds
das
daa
and
xchg
mov
pop
nop
sub
inc
sub
jns
fidivl
adc
and
xor
adcb
ds
insl
rolb
push
inc
lret
adc
fdiv
jmp
sub
lock
mov
insl
mov
push
cmp
std
xchg
inc
pusha
mov
addb
sub
mov
movsl
loop
out
xchg
jo
test
push
adc
mov
mov
add
add
add
sub
add
outsb
push
mov
nop
movswl
or
push
inc
enter
in
mov
sar
lcall
mov
inc
mov
or
push
xor
jb
ja
add
andl
nop
bound
into
mov
jo
popa
movsl
add
popa
adc
mov
mov
pop
int
add
cmp
bound
dec
lea
jmp
adcb
jge
jl
je
cmp
stc
mov
dec
cmp
int
add
or
and
lock
push
xchg
pop
and
loop
push
rcrb
insl
inc
lret
ret
dec
lret
shlb
loop
add
add
or
ficoml
js
out
push
push
and
ret
rorb
add
mov
adc
sub
call
mov
rclb
test
adc
and
xchg
mov
bnd
orb
xchg
rclb
inc
les
xchg
pop
loop
xor
and
xchg
inc
repnz
mov
cs
and
test
fwait
mov
test
xor
nop
or
inc
xor
pop
mov
lock
lcall
push
add
repz
and
add
ds
or
shrb
stos
lcall
cmp
push
cmc
loope
sti
cmpsb
bound
push
mov
shrb
mov
push
loope
sbb
sub
mov
push
dec
add
push
mov
mov
imul
pop
ret
push
mov
and
push
and
mov
cmp
sub
add
roll
dec
pop
pop
ret
testb
xchg
push
cwtl
cmp
fisubrs
adc
mov
add
push
add
pop
icebp
stos
xor
pusha
inc
inc
push
push
cmp
loopne
add
inc
out
ja
adc
xor
or
sahf
push
movb
outsb
ret
clc
cmpsb
add
xchg
add
mov
idivb
add
les
xchg
push
pop
hlt
add
mov
jbe
cmp
mov
pop
sbb
orb
cltd
or
cmp
into
outsb
cwtl
int3
adc
lret
add
pushf
cmpsb
and
es
sub
int
mov
movsl
inc
pop
mov
repz
push
out
add
jecxz
ss
sbb
mov
pop
pop
clc
lret
mov
loop
jo
stos
add
jmp
add
cmc
xor
and
add
cmc
test
sti
int
push
add
ret
cmc
fistpl
fcomip
flds
pop
fnstcw
repz
jg
out
or
cmc
imulb
inc
mov
cmc
ret
and
shl
daa
andl
lcall
cmc
in
jmp
xor
cmc
aas
and
pop
jmp
pusha
iret
in
mov
in
pop
icebp
or
loope,pt
pop
add
jecxz
pushf
inc
dec
or
ljmp
push
mov
add
decl
cwtl
inc
pop
adc
cmc
ret
add
cmc
imull
fcmovu
inc
mov
ret
or
push
cmc
ret
pushf
sbb
lea
or
push
cmc
outsl
push
dec
add
mov
test
cmp
add
adc
cmc
addr16
fwait
dec
imul
xor
cmc
lods
imul
cltd
fwait
push
xchg
cmc
xchg
inc
out
aaa
jg
cmc
cmp
xchg
cmc
flds
xchg
cmc
dec
pop
sbbb
scas
cmc
jne
test
fbld
push
cmc
pop
inc
mov
jb
cmpsl
cmc
xchg
repz
push
popa
and
les
aam
cmc
jb
out
fwait
dec
mov
ret
cmc
mov
int
aaa
fwait
mov
movsl
push
cmc
les
sarw
mov
add
cmpsb
stc
repz
cmc
mov
cmc
mov
inc
ficompl
out
push
mov
cld
inc
push
inc
add
pop
sti
sub
fcomps
and
ljmp
push
cmc
xchg
shl
xor
push
cmc
jno
sub
lods
inc
add
mov
push
call
hlt
add
mov
insl
hlt
jo
popa
add
ljmp
ja
add
imul
inc
add
xchg
add
adc
inc
add
fdivrl
outsl
ss
hlt
decl
arpl
test
or
aam
add
or
hlt
adc
jg,pn
add
mov
std
jae
repnz
add
xchg
jo
add
hlt
cmpsb
add
or
rclb
cld
ljmp
cmpsb
add
cmp
cmc
adc
loop
add
or
pop
or
add
ret
cmp
cmc
mov
mov
rolb
orl
sbb
imul
addb
adc
jg
inc
arpl
adc
shll
pusha
sub
xor
push
inc
or
cmc
out
dec
mov
sub
xor
or
cmc
or
sbb
lcall
and
mov
js
fsubrs
sub
scas
and
rcrb
sub
xchg
cs
fimull
xchg
cmp
ret
aam
scas
dec
sbb
mov
into
mov
fisttps
add
xchg
and
sbb
lcall
and
xor
fs
aad
fbld
inc
sti
inc
sub
add
aad
jle
xchg
jmp
push
inc
jl
or
jle
subb
cmp
imul
data16
rclb
jne
jg
inc
push
adc
xchg
movsl
or
cld
loope
and
mov
push
push
gs
test
push
shlb
jo
and
pusha
mov
shll
cmp
sbb
mov
add
jmp
mov
loop
sbb
lret
and
enter
push
loopne
or
les
dec
cltd
mov
add
stos
andb
sbb
push
loopne
jo
sbbl
xchg
je
movsl
pop
push
push
sbb
cli
das
inc
roll
adc
inc
or
cmovno
testb
aaa
inc
daa
add
hlt
mov
daa
inc
cmp
add
lods
fildl
cld
cmp
or
fldenv
cmp
lods
push
and
mov
test
push
mov
push
icebp
adc
inc
push
xchg
dec
add
and
xor
xor
jb
add
ss
push
repnz
loopne
xchg
daa
aaa
aaa
cld
lods
add
xor
out
xchg
dec
or
pop
ret
shrl
add
inc
jle
mov
mov
es
lret
cmp
adc
aaa
cli
mov
or
test
and
daa
cld
jbe
cmp
cld
incl
mov
pusha
push
mov
jmp
lds
sbb
xor
fsubl
inc
and
jg
xor
into
mov
je
ljmp
mov
dec
mov
call
loop
jae
mov
mov
dec
nop
or
mov
jecxz
dec
push
roll
or
or
jb
cmp
insb
mov
stos
rcrb
adc
ljmp
sarb
repz
dec
popaw
sub
movsl
add
outsb
rolb
sub
loopne
add
lcall
inc
xor
dec
ret
loopne
jbe
mov
fmull
mov
pop
bound
loope
sbb
std
es
inc
jo
mul
jle
in
js
shl
inc
movsl
incb
lods
and
adc
and
xor
jg
cmp
lock
sub
sbb
aam
push
sbb
and
movsl
push
add
mov
mov
cli
into
or
in
out
es
cmpl
xchg
add
jo
hlt
dec
or
movsl
stc
xchg
andb
bound
mov
sbb
fbstp
inc
add
nop
pop
mov
add
xchg
xor
cmc
and
add
dec
movsb
push
jle
add
and
sub
or
roll
lock
jle
test
push
jmp
mov
add
nop
and
add
sbb
rolb
lds
xor
int
sbb
icebp
std
mov
or
mov
mov
loopne
adc
inc
test
cwtl
andb
or
icebp
or
dec
cli
cmpsb
stc
xchg
inc
leave
inc
testl
mov
roll
lcall
add
test
xor
add
jg
sub
adc
aaa
insb
rolb
pop
push
mov
pop
xorb
mov
stos
mov
ljmp
or
addl
cmc
std
popa
pop
lea
mov
pop
pusha
pop
ss
sub
mov
out
xchg
dec
and
out
andb
cmpl
xchg
test
xchg
lcall
rcl
xor
sbb
sub
xor
push
push
and
clc
aaa
adc
push
sbb
test
pop
xor
or
loope
xor
dec
xchg
jo
je
addb
sub
ljmp
mov
inc
add
mov
lcall
push
sub
pop
adc
pop
sub
push
mov
jbe
lret
mov
mov
dec
xor
clc
inc
loopne
xchg
aad
je
sbb
js
jle
insb
pop
sbb
sbb
pop
mov
and
insb
dec
and
push
flds
mov
mov
xchg
mov
orb
lcall
ljmp
testb
xchg
xchg
xor
adc
jno
cltd
or
js
and
and
scas
cli
fwait
pop
int3
loop
cmc
sbb
adc
ret
mov
push
cmp
and
data16
lods
lret
xchg
lds
add
push
mov
pushf
in
sbb
fistps
movsl
mov
mov
loope
adc
add
mov
or
fcomi
fs
sub
add
cmp
test
adc
push
sahf
call
pop
je
dec
pop
push
movsl
or
mov
les
and
sti
xor
inc
dec
movsl
and
pop
lods
mov
jno
sarb
mov
test
dec
mov
add
lea
mov
and
jbe
aas
movsl
cmpsb
push
es
sub
daa
es
jb
mov
add
shrl
pusha
insb
pop
enter
dec
test
or
fbstp
cmp
test
xor
sbb
cmp
andb
cmp
jg
push
add
add
roll
lea
or
leave
adc
adc
push
add
xchg
fisttps
jne
shrb
lds
mov
add
push
add
popa
test
mov
fimuls
test
sbbb
aaa
adc
inc
adcl
mov
pop
popa
lcall
pop
xor
icebp
mov
loop
orl
lea
and
push
loop
mov
loop
lock
or
rolb
call
les
lock
mov
push
mov
jo
mov
mov
hlt
pop
xchg
mov
add
mov
pop
add
or
cli
sub
addb
pop
jbe
add
pop
fmull
jp
adc
icebp
xchg
cmp
lds
push
mov
clc
pop
lock
jg
dec
jl
pusha
and
test
add
add
pop
xor
dec
xchg
xor
push
shrb
fcompl
adc
ret
mov
or
jno
dec
cwtl
cmp
hlt
add
push
push
test
push
sub
mov
cmpsb
test
push
leave
jo
es
test
dec
loopne
cmpsl
je
ror
repz
push
cmp
dec
and
mov
sbb
sub
add
pushw
sbb
or
adc
xor
dec
clc
and
and
shl
loopne
cmpb
xchg
rorl
mov
mov
mov
push
push
push
xor
sub
mov
mov
pop
sbb
cld
aad
adc
mov
js
adc
sarb
mov
fbld
pushf
ret
xor
aam
and
inc
sub
mov
imul
decl
loopne
loop
mov
push
mov
loopne
test
int3
jbe
cmp
loop
sbb
pop
jle
cmp
add
and
inc
cmp
test
mov
sub
pusha
add
mov
pop
sub
and
adc
gs
add
push
jbe
aas
mov
lods
jg
xor
ret
push
sarb
inc
jo
xor
xor
xlat
mov
ds
pop
add
add
inc
movsl
push
push
or
xchg
bound
outsl
fcoml
jmp
int3
shrb
cmp
fidivs
ljmp
aas
mov
add
dec
or
xor
inc
cld
inc
add
push
repnz
cmp
scas
xchg
sbb
das
sub
push
or
sbb
and
or
insb
or
mov
mov
pop
add
dec
mov
cmp
movsl
stos
pushf
add
add
push
dec
cmp
add
add
test
adcb
stos
test
popa
pop
mov
test
aam
in
xor
add
inc
test
sti
pop
inc
add
push
adc
jbe
pop
push
add
push
xchg
and
push
and
addl
or
adc
add
cli
add
dec
sbb
in
push
xchg
outsb
sbbb
mov
pop
inc
out
adcl
and
outsb
adc
aam
sub
sub
adc
mov
loop
add
add
jb
subl
dec
adc
daa
jbe
call
inc
mov
cmp
mov
push
jle
rorl
jo
mov
sub
cmp
sbb
pop
les
ljmp
and
fbld
rcrl
sbb
cmpb
and
dec
adc
adc
push
inc
cmp
inc
rclb
mov
and
daa
xchg
imul
lock
pop
outsb
sub
cld
xor
je
ret
in
mov
sbb
jp
add
sbb
push
int
jmp
subb
rorb
lods
sub
fildll
arpl
pusha
ss
lds
shlb
adc
sbb
jg
sbb
and
insb
mov
lods
pop
test
pop
sbb
push
clc
sbb
mov
push
and
mov
movsb
loop
fistl
cltd
ljmp
mov
fldl
xor
sub
sbb
inc
es
or
dec
adcl
cmpsb
dec
or
ljmp
add
ret
push
imul
pop
movb
cmp
inc
push
jg
testb
adcb
mov
nop
ds
movsl
xor
pop
add
cs
push
mov
jb
ljmp
outsl
mov
movsb
adc
shll
adc
cmp
aaa
loop
in
fsubrl
or
xchg
data16
setb
push
xorb
push
cmp
pop
or
fs
hlt
popf
mov
pop
mov
test
adc
int3
pop
xor
sub
push
mov
ss
or
enter
inc
pop
lcall
xor
sbb
xor
sbb
shl
push
clc
pop
xor
push
dec
jg
xchg
jne
daa
dec
pop
popf
xor
and
push
xorb
pop
add
subb
dec
jl
push
and
rcrl
jg
shrb
sub
add
sub
mov
mov
add
xchg
jns
imul
mov
pushl
loopne
addb
inc
sti
dec
data16
cmp
cmp
xor
dec
and
mov
pop
pop
orb
dec
cli
fadd
fcmovnu
pusha
pop
loopne
test
pusha
add
shrl
lea
pop
mov
add
add
frstor
out
repnz
scas
push
sbb
leave
ss
sub
mov
andb
and
add
and
stos
or
imul
xchg
ds
sahf
outsb
xchg
adcb
ljmp
js
aad
jo
add
fwait
jp
lock
cli
or
sbb
inc
loope
inc
mov
pushf
imul
dec
out
mov
cmp
out
add
rclb
int
jmp
xor
inc
push
hlt
cmp
inc
mov
negb
out
movb
mov
lahf
push
mov
add
xchg
inc
jno
push
lock
pop
and
pop
or
jp
loop
push
sarl
pusha
fmulp
movsl
jp
and
inc
pop
sar
mov
daa
inc
loopne
or
or
push
lret
sbb
movsl
jns
std
jg
roll
shll
and
mov
add
cmp
push
cmp
and
push
fisubl
sti
add
xorl
inc
insb
or
les
jge
or
lcall
out
inc
je
adc
cwtl
rclb
add
repnz
sub
incl
clc
mov
dec
inc
shl
jge
in
pusha
or
ret
sarb
subb
cmc
mov
fldl
pop
jo
bound
adc
push
movsl
ds
sub
adcb
mov
stos
sub
or
mov
push
cmpl
ja
dec
push
cld
loop
inc
sbb
cmp
mov
fdivp
jns
add
shlb
push
xor
movsl
adc
mov
cmp
or
add
push
repz
mov
addb
clc
push
sar
popa
and
or
lock
mov
in
pop
mov
aam
and
insl
dec
push
inc
push
test
les
cmp
cmp
xchg
or
jno
adc
mov
mov
or
movsl
or
sbb
cmp
push
mov
or
popa
call
push
sub
add
dec
loopne
dec
adc
add
loopne
cmp
and
fisubl
jl
and
xor
adc
fsubs
ret
xor
jle
mov
pusha
inc
movsl
aas
sbb
ret
inc
rorb
dec
fadds
add
nop
insb
mov
or
mov
mov
mov
dec
pusha
jbe
cs
mov
inc
and
inc
push
pop
inc
addw
add
xor
mov
js
sbb
adcb
in
xor
mov
mov
jno
aam
adc
pop
adc
mov
movsl
xchg
push
add
lock
add
les
bound
sub
outsb
push
adc
nop
enter
dec
dec
push
out
xchg
out
xor
jo
adc
mov
adc
fidivl
stos
scas
add
sbb
stos
in
cs
push
mov
jno
pushf
movsl
xor
mov
mov
pop
clc
outsb
jge
cs
sbb
movsl
movb
and
nop
sbb
push
pop
js
sti
shl
stos
loopne
xor
iret
sahf
and
hlt
pop
push
dec
jp
ja
add
xchg
addl
mov
adc
mov
sbb
mov
incb
inc
int3
xor
in
mov
das
test
inc
push
inc
into
inc
rorb
cmpsb
push
add
imul
jmp
shll
outsl
subl
adc
pusha
push
jno
adc
outsl
test
lock
lcall
mov
inc
sbb
add
fcomip
std
add
pop
xor
push
testb
sub
jg
sbb
push
test
add
and
loopne
jge
cli
cmpsb
adc
and
mov
hlt
pop
push
or
and
push
rolb
movsl
sbb
and
push
icebp
inc
mov
inc
inc
negb
sub
mov
lock
inc
and
and
or
push
add
cs
decl
adc
pushf
mov
add
imul
sub
adc
sbb
sbb
repnz
loope
lock
sbb
pop
cwtl
stc
jo
adc
aas
sbb
or
adc
cmp
hlt
jns
xor
xchg
or
adc
jp
insb
lcall
mov
sbb
inc
add
mov
das
nop
sbb
adc
xchg
test
or
lock
or
add
jecxz,pn
sarb
or
dec
mov
jne
rcl
test
adc
dec
jo
pop
add
add
push
std
pop
faddl
push
movsl
dec
rolb
mov
cmp
int3
add
imul
mov
lods
aam
loopne
and
or
push
inc
rcr
dec
push
andl
xchg
push
and
sbb
shr
decl
adc
aam
movsl
mov
icebp
and
sub
pop
and
mov
movsl
in
cmp
inc
cs
mov
add
andb
dec
adc
sub
jae
sbb
pop
xor
fwait
add
xor
in
movsl
xchg
adc
sub
mov
add
gs
add
xchg
std
mov
and
xor
dec
add
jg
push
xchg
mov
pusha
ret
ficoms
inc
ret
fsubrs
int
or
xchg
dec
jbe
cmp
and
shrl
cmp
scas
xlat
insb
add
jp
sub
stos
movsl
fists
sbb
inc
push
pop
les
adc
and
mov
mov
adc
sub
dec
cmp
fnstcw
popa
mov
add
andb
sbb
or
or
test
dec
mov
inc
int
jbe
push
fwait
cmc
rolb
ficoml
insb
mov
mov
movsb
hlt
push
insl
xor
inc
lods
push
repnz
mov
in
stos
xchg
fisubs
adc
mov
xchg
gs
lock
into
inc
jo
mov
sbb
inc
add
inc
add
dec
add
adc
lock
nop
sub
stos
outsb
and
push
add
push
mov
add
jo
adc
shlb
insb
dec
mov
test
test
add
loopne
movsl
add
pop
loopne
dec
mov
dec
xor
jmp
dec
std
dec
mov
sbbb
pop
shrb
test
test
rcrb
inc
mov
dec
clc
ljmp
cmp
and
adc
movsl
testl
adc
les
push
lret
and
push
sar
cmp
cmp
and
sub
sbb
and
cld
sbb
es
inc
test
cmc
push
inc
into
nop
sub
add
ret
test
push
add
adc
add
subl
popa
jg
mov
mov
je
add
or
in
or
pop
outsl
xchg
je
cmpsb
sub
mov
in
mov
xor
push
dec
add
ja
jl
rolb
mov
or
and
sbb
js
mov
jbe
jo
and
outsl
and
movsb
out
sbb
or
xor
dec
daa
shll
ss
push
adc
mov
out
add
les
cmp
adc
test
pop
sub
sub
adc
add
push
xor
dec
cld
dec
fsubs
addb
mov
les
out
jo
inc
or
sub
test
outsl
pusha
add
mov
inc
pusha
in
cmp
push
leave
shlb
mov
xchg
jle
lahf
movsl
out
xor
adc
add
and
lcall
push
push
xchg
push
adc
mov
repnz
pusha
mov
das
push
icebp
popa
lock
mov
cmp
ljmp
insb
xor
icebp
decl
push
pop
movsl
lahf
jle
push
mov
mov
or
sbb
or
inc
mov
daa
ljmp
sub
pusha
sub
push
dec
sbb
add
andl
bound
inc
or
pop
jo
mov
ljmp
nop
shrl
adc
mov
aaa
ss
sti
or
xor
cli
xchg
and
nop
daa
movsl
mov
inc
loope
addb
insb
sbb
test
insb
sub
cmpsb
nop
mov
arpl
adc
sbb
jg
add
test
xor
pop
and
and
lods
lods
into
and
mov
push
or
dec
add
add
xorb
sub
into
pop
dec
aad
pusha
lcall
pushf
pop
push
dec
inc
or
mov
outsb
pop
add
scas
add
ret
push
inc
dec
mov
cmpsb
inc
and
cmp
je
sbb
pop
and
push
dec
add
xor
add
ss
add
lcall
or
lea
cmp
sbb
ret
dec
mov
movsl
fidivs
and
add
sub
pop
pop
fs
or
movsl
scas
add
jno
idivl
mov
mov
dec
pop
xchg
mulb
jp
into
xor
mov
sahf
lock
and
lret
cmp
decb
push
jo
add
fstps
adcl
mov
andb
add
or
sub
mov
or
inc
mov
into
cld
mov
adc
sub
add
add
das
cmc
sbbb
xchg
add
sbb
add
pop
fiadds
sbb
xchg
lock
aas
mov
cli
stos
outsb
orb
orl
dec
les
test
scas
hlt
test
sbb
push
sub
testl
cs
lods
jmp
mov
or
or
add
inc
push
dec
mov
sbb
inc
movsl
shrb
dec
add
dec
mov
popf
jg
sbb
rolb
ret
or
les
cltd
movb
int
mov
sbb
inc
sbb
adc
fadds
in
cmp
mov
mov
jg
push
sbb
and
insl
adc
movsb
adc
jmp
lea
fistpll
sub
add
inc
add
jno
push
dec
js
hlt
into
mov
jne
addl
jno
xchg
sti
dec
add
daa
add
xorb
movsl
cmp
lock
add
push
movsl
pop
adc
mov
fisubl
dec
dec
mov
lods
pop
bound
and
addl
das
movsb
add
mov
ja
jne
jno
push
jo
mov
push
das
lock
jne
xchg
dec
and
adc
inc
roll
outsl
push
movsl
addl
mov
insl
testb
mov
outsb
sbb
add
push
pusha
jo
xchg
mov
mov
inc
bound
ret
inc
or
jmp
add
push
pop
sbb
fwait
rolb
add
mov
jo
shlb
movsl
leave
les
andb
add
sub
xchg
test
mov
pop
jl
addl
cmp
rcrb
mov
or
in
jle
or
pop
mov
add
pop
inc
mov
movsl
push
shr
cmp
cmp
mulb
imul
add
imul
push
les
jg
and
cmpl
test
xchg
pop
inc
add
push
mov
ja
push
test
movsl
push
outsl
add
inc
xor
bound
push
movsl
xor
or
mov
fiadds
adcb
adc
mov
or
jge
icebp
or
movsb
push
cmp
xabort
outsl
andb
leave
test
and
mov
or
inc
jne
add
fildl
cmpb
pusha
mov
ljmp
adc
push
int
insl
out
inc
cwtl
jle
sbb
es
adc
and
push
jbe
aas
sahf
adc
std
mov
mov
xchg
or
movsl
sub
je
ja
adc
testb
fs
adc
xchg
hlt
dec
mov
fcmovb
iret
es
inc
jbe
nop
jo
cmp
gs
mov
push
mov
mov
cmp
mov
orb
stos
loopne
cli
or
les
add
dec
loopne
adc
loop
sbb
or
lret
loopne
push
jmp
dec
pop
add
fstpl
lea
ja
scas
push
orb
and
mov
pop
mov
movb
ja
mov
or
cmp
mov
jg
cmp
popf
inc
cmp
xchg
mov
sbb
pop
mov
outsb
mov
loope
mov
loopne
pop
test
leave
sub
jns
psubsb
fdivp
mov
outsb
add
dec
or
rol
add
fsubl
or
das
mov
imul
adc
ljmp
shlb
and
push
movsl
dec
lret
or
dec
rolb
hlt
xor
xchg
cmp
sub
and
mov
jno
cmp
adc
dec
jg
mov
incb
dec
cmpsb
inc
jo
inc
dec
cmpsb
add
or
add
pusha
loop
sbb
push
mov
push
jne
dec
xor
push
mov
push
and
je
inc
push
mov
cmp
add
mov
and
popa
inc
adcb
cmp
ret
and
movsl
xor
mov
mov
aas
fs
xor
lcall
aas
flds
rcrb
push
js
icebp
or
or
lods
ja
int
inc
or
jbe
dec
inc
push
pop
mov
and
adc
add
sbb
sbb
or
push
bound
shll
sub
lcall
or
adc
loopne
mov
sbb
mov
fldl
jno
inc
pop
add
push
rolb
or
inc
sbb
and
sbb
inc
fisttpl
sub
push
cmc
dec
pop
pop
aas
sub
add
push
sahf
dec
jns
loopne
xor
mov
clc
xor
add
mov
shrb
lock
and
push
cltd
adc
sbb
or
dec
adc
inc
or
popa
sarb
pop
or
fiadds
loope
jns
test
xor
xor
sarl
lods
add
icebp
add
xor
cmpl
insl
out
jno
mov
jbe
rol
jg
mov
inc
adc
pop
popa
subb
adc
inc
test
push
add
mov
cmpsb
insl
orl
leave
dec
or
or
stos
clc
gs
mov
adc
and
mov
jg
push
sbb
mov
jbe
xor
and
push
and
inc
sbb
popf
push
fcmovb
jge
stos
insb
cmp
pop
data16
cltd
mov
add
inc
push
data16
lods
cmp
scas
test
cld
lcall
nop
aam
rolb
and
shll
or
adc
push
push
push
or
and
adc
sbbb
pop
popa
push
xchg
jo
jecxz
and
inc
sbb
sub
jo
shlb
fadds
shl
sbb
cmp
and
pop
daa
inc
adc
and
sbb
and
or
dec
lods
movb
sbb
outsb
jb
mov
or
orl
push
xor
sbb
rclb
or
cmp
inc
fldenv
rorb
nop
push
ret
push
or
pop
outsb
outsl
adc
adc
add
cmp
sub
mov
or
rcll
clc
inc
inc
mov
dec
sbb
clc
dec
stos
je
mov
dec
sbb
mov
testb
push
adc
shrl
js
sbb
push
xchg
mov
inc
mov
cs
pop
mov
push
or
in
imul
insb
jns
or
inc
nop
pop
dec
lea
or
cmpsb
adc
push
pusha
std
push
insb
lcall
push
bound
imul
decb
dec
fadd
movb
or
inc
pop
push
mov
sbb
test
mov
mov
add
jge
sub
push
jo
out
or
dec
fwait
sub
fbld
add
gs
xchg
pop
rorb
addb
std
fildll
pop
xorb
xchg
inc
sbb
mov
jle
mov
punpckhbw
sub
jge
das
add
gs
cli
pop
icebp
add
pop
cmp
sbb
dec
push
xor
add
pop
mov
push
add
clc
pop
jle
sbb
inc
sub
es
jg
mov
pop
mov
add
movsl
stc
mov
add
in
jne
push
cmp
inc
or
push
cmpsb
mov
rorb
pop
pop
dec
scas
pusha
jae
xor
out
mov
ss
or
mov
movsl
insl
fdivs
cmp
pop
data16
push
add
notb
inc
mov
or
adc
nop
inc
test
loopne
lock
and
inc
mov
add
mov
or
sar
jg
add
push
add
mov
sbb
dec
and
ret
sahf
pop
movsl
imul
add
mov
dec
loopne
les
lock
fcmovnb
ds
xchg
add
scas
add
decl
push
movsl
lret
imul
or
push
in
push
adc
push
icebp
mov
imul
movsb
adc
dec
fsubrl
sub
xor
insl
nop
adc
push
ljmp
mov
push
adc
adc
dec
dec
add
jo
cwtl
cmpsb
fisubl
movsl
imul
nop
add
adc
pop
ljmp
std
jge
or
add
je
adc
or
dec
xchg
dec
jo
sbb
mov
lret
sub
je
pop
sub
dec
in
mov
lods
and
push
sbb
or
ljmp
add
jg
rcl
add
sub
push
std
loopne
xor
jmp
sarb
add
push
mov
stc
imul
or
or
popf
mov
popa
mov
ja
push
test
push
add
pop
sub
sub
pop
pop
cld
mov
push
filds
cmp
adc
and
jg
lock
test
into
cwtl
and
xchg
jbe
adc
addr16
dec
xor
ja
pop
add
add
fildll
jl
mov
xchg
test
icebp
add
push
daa
sub
push
movsl
push
pop
ret
jo
push
pop
jl
rcll
add
sbb
mov
ljmp
out
adc
loop
pusha
stos
xor
mov
aas
and
pop
mov
mov
sub
or
imul
orl
lret
adc
push
test
add
sti
or
add
sbb
test
sub
cli
and
repz
orl
push
mov
out
dec
cwtl
cmp
out
push
orl
add
sbb
mov
call
dec
add
movsb
roll
enter
lock
nop
sub
push
lea
mov
xchg
push
and
cwtl
add
shrl
cli
add
lods
push
inc
movsl
jb
popa
movsl
jp
jge
xor
dec
bound
push
push
or
jbe
mov
mov
outsl
stos
cli
ret
inc
movsl
mov
loopne
add
mov
clc
iret
movsl
mov
cmp
mov
pop
sub
pop
push
into
mov
add
mov
mov
movsb
xchg
lock
loopne
lret
push
inc
pushf
jb
dec
jne
mov
mov
fsubrs
inc
cmp
dec
bound
lea
mov
mov
push
mov
and
add
add
mov
decl
dec
int
push
dec
hlt
add
mov
inc
hlt
pop
sbb
testl
jbe
pop
int3
scas
mov
int
int3
xchg
sbbb
cmp
out
in
ja
sbb
gs
sbb
aad
lods
and
cli
xchg
push
sahf
lods
mov
dec
xchg
cmpsb
cmp
fisubl
inc
sar
sub
loopne
cmpsb
cmp
in
cmp
bound
xchg
or
mov
mov
rorb
push
and
add
shlb
jo
and
ret
popf
outsl
fildll
cmpsl
pop
inc
inc
xchg
adcl
sbb
arpl
lea
or
cld
andb
add
andb
add
movsl
xor
call
test
pop
sbb
sbb
ljmp
int3
sbb
push
adc
dec
sbb
sub
add
add
sbb
sbb
xchg
sbb
rolb
inc
lea
dec
or
dec
adc
mov
outsb
call
and
and
jo
add
push
pushw
shlb
inc
fsubrs
lcall
mov
jb
movsl
mov
decb
mov
cmpsb
fs
rclb
mov
xchg
add
aaa
pop
adc
mov
testb
lea
dec
test
inc
mov
jbe
add
dec
mov
sbb
cmp
cmpl
into
inc
adc
and
cmp
add
pop
mov
or
addl
inc
mov
push
push
add
pop
jne
add
pop
pop
mov
imul
mov
push
mov
andb
andb
jmp
xor
leave
mov
stos
push
mov
test
add
jle
in
add
or
sbb
mov
xchg
insb
add
incl
fwait
je
cmp
inc
lds
inc
sub
mov
fwait
sbb
add
repz
insl
push
push
rorb
mov
dec
inc
clc
lcall
sbb
cmpsl
pop
les
sysexit
lods
sbb
les
or
inc
add
add
cmp
sub
pop
add
movsl
add
add
inc
push
or
or
movsl
jne
das
mov
inc
into
ss
push
mov
aam
inc
and
aad
addb
and
push
pop
outsl
pop
in
cmp
retw
push
dec
stos
xor
mov
or
xchg
jno
ret
cmp
test
sub
add
sti
jg
int
cmp
or
jo
inc
xor
lds
inc
bound
lock
add
push
loope
jno
fs
daa
inc
or
clc
outsb
push
lds
incb
push
sub
daa
lea
cld
push
addb
add
orl
push
push
xchg
cmp
roll
js
pop
dec
fnstenv
or
outsb
jo
inc
adc
cmp
loop
add
les
inc
orb
jae
pop
adc
or
inc
psrad
adc
stos
lret
pop
inc
mov
addl
lds
or
rolb
test
xlat
mov
jmp
sbb
decl
std
add
pop
mov
std
sbb
or
lcall
pop
add
or
jg
clc
ret
popa
test
add
xchg
push
add
mov
shll
jne
pushfw
scas
push
jbe
adc
add
fistpl
jl
push
sbb
movsl
xchg
cmp
sbb
jmp
jo
out
xchg
or
or
loopne
and
ja
addb
shlb
xorl
bound
mov
and
sbb
scas
xchg
lret
mov
xchg
subl
sarb
or
out
dec
loope
ret
cmc
xchg
lea
jmp
sub
leave
inc
add
pop
shl
push
scas
adc
divb
sbb
inc
xchg
mov
pusha
sbb
or
and
roll
push
std
out
mov
fwait
and
bound
adc
ljmp
jg
imul
and
movsb
roll
inc
popa
add
loop
or
mov
pop
loope
push
stos
sahf
rolb
and
push
adc
adc
ljmp
dec
and
test
bound
xchg
loope
xchg
scas
lret
adc
pusha
scas
pop
lods
xor
xor
inc
add
dec
cmp
xor
push
dec
enter
movsl
add
push
inc
outsl
xor
inc
add
and
inc
inc
and
adc
and
push
sbb
daa
pop
adcb
jg
pop
insb
fadds
inc
bound
mov
mov
lea
add
pop
mov
add
loopne
push
pop
xchg
fistpl
push
loopne
add
xor
mov
push
and
rolb
lea
mov
loopne
jecxz
mov
push
inc
out
pop
and
out
mov
and
mov
ret
add
js
dec
loopne,pt
mov
add
fbstp
push
add
out
movsl
and
sub
jle
and
or
mov
add
pop
inc
lods
jne
sbb
mov
mov
push
sub
mov
inc
xchg
in
push
inc
and
aam
adc
andb
sbb
hlt
mov
ret
outsb
mov
movsb
enter
mov
bound
push
addl
fmuls
xchg
shlb
ficomps
adc
and
adc
in
add
adc
mov
push
sub
mov
addl
outsl
pop
rcrl
popa
mov
cmpsl
sub
mov
aad
push
sub
and
rolb
scas
push
xor
push
call
inc
inc
lret
add
test
fbld
movsl
xchg
lods
dec
ret
xchg
jbe
mov
or
je
rcl
mov
jmp
adc
or
dec
adc
call
aaa
mov
push
jle
sbb
xchg
adc
xchg
clc
es
inc
cmp
inc
cmc
jns
jb
movsl
adc
push
push
repnz
or
or
inc
mov
or
mov
inc
adc
push
movsb
stos
xor
mov
mov
stos
je
movsl
cmpsl
add
loop
inc
pop
lock
orb
xchg
movsl
xchg
lock
inc
jo
int
faddl
or
js
sub
sbb
bound
mov
add
loopne
loope
movsb
aad
jecxz
lods
and
sub
adc
add
add
pop
xchg
icebp
sub
push
jb
shrl
sub
sub
push
rclb
add
push
fs
movl
ja
xor
js
adc
jno
inc
jo
cs
or
pop
nop
push
push
jp
negb
ja
rolb
push
je
mov
orb
lods
cli
int3
inc
pop
mov
or
push
or
and
inc
sub
lds
aaa
or
popa
or
aad
xor
cmp
sbb
sbb
mov
push
mov
cmp
push
mov
add
scas
jbe
mov
jmp
movsl
adc
pop
xor
xor
add
call
test
movsb
jecxz
dec
mov
inc
xor
and
std
mov
rorb
sbb
pop
inc
movsl
push
push
repz
push
jo
adc
pop
movsl
stos
mov
or
cmp
and
xor
cmpsb
xor
jae
sbb
or
pop
dec
or
sbb
sbb
xchg
test
mov
jb
mov
cmp
dec
mov
mov
dec
test
cmpsl
mov
lcall
add
imulb
push
dec
jp
jge
rolb
jmp
sbb
mov
mov
stos
inc
adc
push
lret
clc
mov
mov
cli
outsb
loop
loopne
dec
dec
and
dec
pop
mov
and
cwtl
jb
sarb
adc
and
cmp
loop
adc
lds
add
repnz
lock
inc
pop
sti
jno
and
orb
pop
movsl
cld
outsb
mov
pop
bound
inc
or
push
sti
dec
jo
rcrb
push
push
je
pop
pop
inc
mov
jne
ss
test
adc
mov
and
int
dec
int
mov
leave
popf
fwait
mov
cmp
and
mov
or
inc
dec
add
cmp
popf
sarb
cmp
lock
dec
xor
imul
push
sub
ficompl
mov
inc
dec
es
dec
dec
nop
adc
add
addl
cs
push
jo
push
adc
je
mov
test
popa
loop
stc
loope
xchg
sbb
faddp
add
je
mov
cmp
mov
and
push
dec
add
dec
dec
in
sbb
stos
addb
cmpb
pop
sub
cmpsb
cmpsb
or
and
push
ret
xchg
xor
mov
jl
mov
pusha
dec
jbe
shrl
adc
adc
push
les
lock
sub
lods
loop
loop
inc
dec
out
inc
movsb
xor
jle
inc
push
mov
add
into
push
push
sub
mov
shlb
pop
sub
inc
and
leave
or
jnp
movsb
outsl
orl
data16
adc
xor
outsl
xor
add
int3
sarb
movsl
push
add
cmp
xchg
ret
sub
and
xchg
add
and
je
cmp
or
mov
inc
add
insl
scas
pop
test
jge
mov
or
cmpl
and
jmp
inc
xchg
inc
add
adc
push
mov
cli
inc
inc
xor
gs
addl
ljmp
dec
aaa
cld
filds
cmp
mov
mov
adc
dec
add
sarb
dec
loope
and
sub
xor
dec
adc
movsb
cli
out
push
icebp
pusha
and
pop
lock
icebp
xor
sbb
lock
pop
push
shlb
push
fildl
mov
arpl
rclb
dec
xchg
push
les
lock
adcb
scas
push
popa
mov
and
adc
ret
outsl
sbb
mov
xorb
adc
jle
jecxz
fisttps
adc
sbb
ds
pop
jb
mov
dec
jno
add
mov
loopne
push
std
test
push
mov
rcrl
cmp
movsl
pop
inc
mov
adc
repnz
add
adc
and
dec
movsl
sub
add
rolb
lahf
push
push
repnz
cmpb
or
push
sbb
mov
push
mov
xchg
aam
inc
loopne
in
ret
xchg
nop
sub
insl
inc
or
inc
roll
xchg
add
ss
mov
jne
dec
add
into
xor
or
jae
and
adc
push
mov
push
pop
mov
nop
or
and
pushf
ret
cmp
mov
mov
mov
lods
push
pop
add
push
sbb
scas
js
add
mov
and
movsl
out
pusha
push
xchg
or
add
or
fsubrs
add
add
pop
pop
sub
add
push
mov
xor
bound
cmp
push
jns
ret
push
outsb
xchg
push
mov
mov
jb
adc
lcall
sbb
sub
adcb
push
push
repnz
movsl
in
adcb
push
cmpsl
add
lods
fcos
pop
movsl
and
loopne
or
data16
sub
jg
push
push
dec
adc
sub
push
pop
xchg
dec
mov
or
pusha
inc
movsl
mov
cli
pop
and
push
mov
and
push
sbb
and
cmp
aam
mov
inc
dec
mov
push
adcb
mov
cmpsb
pop
and
add
dec
and
pop
adc
mov
andps
or
movsl
in
test
and
and
mov
inc
push
or
in
int
push
add
imul
mov
pop
aaa
mov
dec
pcmpgtd
add
sbb
pop
loop
add
adc
ljmp
jo
dec
js
sbb
cmpsb
dec
sbb
jno
mov
mov
mov
cli
pop
xor
mov
sbb
nop
pop
mov
mov
jp
pop
adc
ficoml
popa
add
jge
inc
pop
cmpsb
cmpb
jns
add
adc
jb
insl
sbb
push
std
inc
cmp
shlb
aaa
xchg
push
orb
jns
inc
sbb
sbb
cmp
push
fmuls
hlt
enter
and
mov
or
sub
add
shlb
test
mov
jne
fimull
hlt
fucomp
or
rclb
pop
sti
add
mov
pop
add
mov
lods
push
sub
mov
jo
adc
add
jle
push
je
incb
inc
pusha
fisttps
loopne
xor
xor
add
adc
inc
clc
and
xorl
popa
mov
les
js
call
and
jo
add
xor
mov
into
test
inc
xor
dec
add
fidivrl
into
repz
movsl
mov
cli
mov
mov
mov
xchg
xor
adc
adcb
and
cltd
mov
andw
aas
rclb
mov
push
mov
add
or
enter
or
scas
add
and
dec
xchg
insl
movsl
inc
rolb
out
push
inc
adc
lcall
outsl
out
in
data16
jg
xchg
push
andl
pop
shlb
add
enter
inc
cmpb
mov
std
add
sub
cmpsb
cmp
rolb
test
mov
pop
mov
pushf
movsl
aaa
in
mov
aam
add
inc
cmp
lahf
pop
and
sub
outsb
sub
and
sub
add
adc
cmp
cltd
jb
ljmp
std
add
adc
push
lcall
and
adc
jns
jo
cld
shll
inc
pop
mov
sub
inc
and
rorb
mov
clc
addb
ds
sub
cld
sbb
inc
insl
hlt
cli
sarl
addl
popa
adc
and
cmp
fs
push
js
shll
mov
add
inc
hlt
roll
adc
insb
dec
or
cmpsb
fiadds
sub
les
clc
fwait
or
subb
addb
fisubrs
and
push
lds
sub
fidivrl
sbb
add
push
xchg
test
sbb
sti
pop
loopne
test
jnp
inc
or
or
pop
cmpsb
cwtl
push
je
fwait
cmp
gs
push
xchg
add
or
std
add
divb
cmpsb
inc
dec
add
stos
and
inc
ljmp
push
test
movsb
fwait
mov
cmpl
mov
mov
aaa
or
and
das
cmpb
repnz
jmp
pop
mov
adc
loop
jmp
adc
sbb
je
sbb
cmp
dec
push
add
pusha
pop
adc
aaa
movsb
and
sbb
mov
add
ljmp
shlb
jg
jns
fs
outsl
adc
dec
loop
push
jg
add
clc
mov
dec
out
jge
add
push
mov
incl
mov
cli
push
mov
repz
hlt
popf
dec
xchg
or
cwtl
shlb
or
sbb
push
mov
test
repnz
roll
jg
pop
rorl
dec
pop
add
rolb
loope
push
pop
movsl
mov
les
push
cmpsb
jl
mov
jnp
or
adc
sbb
push
rorb
and
lock
ret
adc
loopne
mov
sbb
adc
dec
sub
cmp
pop
and
ret
push
or
push
mov
ljmp
inc
cmp
out
inc
push
and
mov
mov
and
jp
xor
in
popa
adc
enter
lea
sub
fs
push
mov
stc
xorb
outsl
push
js
add
test
dec
inc
inc
rorl
call
mov
dec
pop
add
mov
adc
push
fs
pop
cmp
pop
sbb
inc
sub
das
adc
bound
lahf
adc
movsb
push
dec
jo
stos
xor
pop
cli
and
xor
xor
inc
push
push
mov
mov
pop
mov
dec
inc
sub
cmc
jmp
testb
movsl
call
adcb
fs
jecxz
add
push
ja
jno
out
addl
pop
cmc
out
mov
bound
dec
stos
inc
cli
or
cmp
xchg
mov
testl
loop
rorb
mov
push
inc
dec
cmp
ja
add
inc
sahf
rorb
jg
test
or
cmpsb
cmp
pusha
add
inc
xchg
mov
cmp
hlt
xor
dec
lods
dec
pusha
or
daa
addb
leave
aad
ljmp
rcrb
mov
mov
shlb
icebp
lods
and
and
or
clc
data16
pop
insl
aas
pop
mov
mov
icebp
xchg
outsb
in
movsl
dec
and
pop
sbb
loopne
ret
lret
lret
mov
es
mov
or
clc
or
incl
pop
arpl
sub
and
movsb
rolb
mov
lock
mov
add
data16
dec
or
ds
sbb
adc
stos
xchg
out
add
bound
mov
loop
dec
mov
pop
dec
dec
push
and
mov
mov
sbb
mov
push
cs
test
loopne
mov
fisubrs
push
add
and
sbb
incl
cmp
push
mov
mov
xor
sub
pop
and
add
sub
adc
and
dec
jo
pusha
cwtl
scas
test
dec
pop
lock
and
adc
rolb
and
adc
mov
jno
insl
inc
or
idivb
mov
and
inc
ficompl
lcall
push
sarl
insl
push
push
lds
sub
je
lcall
add
test
pusha
jns
pusha
inc
add
mov
adc
add
adc
mov
inc
or
adc
enter
into
ss
je
mov
ret
fisubs
add
iret
ret
and
adc
and
xchg
movsl
ja
ss
xchg
adc
rcll
and
testb
adc
addr16
in
or
dec
out
or
fcmovb
aas
inc
add
mov
testl
mov
add
scas
sti
cs
lcall
enter
xor
insb
push
loop
dec
lcall
or
add
inc
mov
test
add
and
and
add
mov
add
rcrl
jbe
xor
jae
push
sub
ss
adc
mov
sub
arpl
or
fildll
rclb
cmc
adc
or
adc
fdivr
add
les
add
dec
out
sbb
fcoml
adc
loop
pop
mov
inc
sti
outsl
lret
lock
dec
movsl
les
sub
lods
xchg
in
xchg
add
cld
das
loop
lds
imul
adc
in
dec
loopne
mov
ss
pushl
lock
popa
push
pop
jns
addr16
add
xor
xchg
jge
and
adc
cmp
popf
pop
mov
outsb
adc
imul
push
dec
inc
jmp
jb
jl
cs
pop
add
loopne
dec
push
sbb
ret
mov
push
add
insl
mov
dec
sub
inc
sbb
inc
mov
sbb
mov
sub
movsl
xor
mov
cld
and
clc
arpl
add
decl
mov
rolb
mov
sbb
lods
sbb
mov
mov
inc
cltd
and
or
push
cmp
lock
pop
loope
stos
xor
jo
xchg
push
xor
mov
mov
sbb
rolb
daa
dec
jg
popa
xchg
ds
mov
roll
or
movsl
push
jecxz
lock
add
dec
jmp
mov
sar
out
pop
xor
frstor
cmp
or
scas
bound
cmp
sbb
xor
adc
jb
loope
out
dec
and
sub
or
lea
icebp
push
add
test
shll
ljmp
lcall
mov
cmp
push
pushf
push
cmp
pop
les
adc
pop
add
jecxz
sbb
out
adc
push
arpl
sar
ficompl
cmpb
test
add
dec
pop
add
aad
mov
xor
xor
add
scas
cli
push
add
mov
adc
inc
ljmp
dec
jno
add
lock
jecxz
sbb
imul
pop
push
sbbb
or
fwait
insb
and
push
push
sbb
test
push
adc
or
push
lock
movsb
inc
cmpsb
or
sarb
push
xor
js
pop
xor
notb
sarb
out
cmp
inc
sti
mov
push
jl
inc
rcrb
in
mov
daa
insl
mov
sbb
add
ret
add
sbb
ds
sbb
fildll
addb
pop
test
into
scas
clc
pop
orb
xchg
add
push
popa
xchg
xor
cld
add
xchg
mov
cmpsb
xor
cli
xchg
jo
andb
jo
test
push
sbb
lock
add
dec
icebp
daa
adc
or
and
mov
add
test
mov
mov
jb
add
popa
add
push
jb
mov
adc
inc
sbb
int
inc
mov
fwait
mov
sub
test
addb
sub
and
dec
push
adc
mov
mov
sbb
mov
inc
rclb
adc
mov
or
adc
shr
orb
xchg
and
sbbb
mov
clc
call
xor
pop
jo
movsl
roll
lock
outsl
mov
push
jecxz
mov
or
xchg
push
pop
and
nop
and
dec
add
inc
icebp
pop
pop
pop
add
adc
inc
sbb
fisubs
mov
hlt
mov
sub
incb
shlb
pop
loope
or
mov
pop
andb
push
xor
std
cmc
mull
push
xchg
clc
in
add
push
js
and
and
std
and
cmc
notb
mov
or
fstp
test
test
icebp
shrb
js
pop
add
cmp
je
incl
jmp
and
push
pusha
lock
rcll
inc
daa
icebp
pop
lock
push
sbb
xor
shrb
sbb
add
sahf
rorb
jno
cld
add
fildll
cmp
and
dec
or
adc
xor
add
jbe
stos
fistps
mov
inc
loopne
jmp
add
into
mov
adc
ljmp
mov
or
inc
add
add
sub
ja
clc
ljmp
add
stos
pop
add
sub
pushl
std
out
sub
sbb
add
ljmp
add
clc
add
push
cmp
in
pushl
insl
daa
mov
test
push
add
mov
decl
push
lock
mov
xor
push
stos
adc
into
jmp
cmp
pop
ret
xlat
pusha
sti
dec
push
insb
mov
lods
mov
pop
xchg
pop
mov
or
orb
pop
fidivrs
js
shll
or
les
dec
ja
cli
out
sbb
mov
or
add
lock
add
loop
push
add
pop
imul
fidivrs
stos
mov
mov
fiaddl
addr16
mov
pop
sub
movsb
mov
sqrtps
mov
add
out
push
xor
mov
sub
lods
rcll
inc
jbe,pt
stos
gs
data16
icebp
push
mov
sub
test
repz
out
test
xor
in
mov
sub
xor
ja
inc
fcoms
push
mov
orb
outsl
or
mov
test
sbbb
mov
sub
inc
fiaddl
add
add
jecxz
add
or
jg
jg
add
fmuls
das
cmp
and
daa
xorl
adcb
xorb
mov
sub
dec
in
sbbb
mov
cmc
inc
jnp
mov
dec
cmpsb
and
mov
jge
shl
jg
ljmp
imul
stos
test
sti
call
pop
pushf
movsl
mov
cli
dec
pop
mov
sbb
and
jge
dec
test
mov
insb
mov
jno
push
cmp
sti
sbb
rorb
lea
or
adc
push
cmpsb
xchg
push
les
insb
dec
arpl
adcb
mov
or
call
jecxz
or
jnp
or
imul
ja
inc
rcrl
lcall
add
out
cmp
fmul
rclb
push
sub
pop
ret
roll
add
aas
imul
add
fwait
decb
jp
out
cmp
or
adc
bound
sti
add
push
lcall
dec
sbb
or
inc
stos
hlt
mov
inc
add
fcomp
testl
sbb
pop
sub
and
push
test
fisubs
outsb
or
in
arpl
mov
lods
adc
and
hlt
jge
pop
mov
xchg
inc
cmp
pop
addb
inc
dec
bnd
pusha
xor
movsl
repnz
mov
mov
in
push
aas
rclb
outsb
stos
rol
dec
je
jg
movsl
push
dec
xchg
adc
mov
jne
fdivrl
out
jno
es
mov
andb
jbe
fmuls
push
ret
push
or
push
inc
xchg
lcall
ret
add
rorl
xlat
add
jecxz
ds
add
add
insb
or
idivb
push
subps
stos
pushl
cmp
push
add
test
push
add
pop
add
xor
mov
push
aaa
scas
xor
add
stc
dec
lods
das
pop
lods
add
stos
sarb
jmp
adc
cli
add
outsb
add
lods
lds
inc
insl
push
pushl
int
mov
jl
les
cmp
push
lock
push
shlb
cs
add
cmpl
icebp
lcall
jp
mov
cmpsb
mov
or
jbe
sti
inc
lret
or
adc
rol
dec
shlb
ficomps
and
fists
mov
ljmp
into
loope
push
jle
dec
cmp
adc
shll
adc
pop
rcr
incl
outsl
and
add
adc
jl
or
inc
sbbl
shll
clc
fstpt
fdivr
inc
xchg
inc
lcall
sti
mov
jmp
shll
mov
lcall
in
add
or
das
or
push
cld
dec
lods
test
cmp
pop
lds
sbb
add
dec
inc
nop
mov
pushl
movsb
les
es
and
cmpsl
filds
mov
inc
push
push
in
js
fbld
fs
roll
adc
add
iret
daa
add
dec
mov
fs
sarl
pop
loop
sub
pop
mov
out
mov
mov
out
push
dec
mov
arpl
cmp
dec
std
ljmp
xchg
iret
xor
insb
dec
lods
cmp
add
pusha
adc
test
cmc
push
popf
fisttps
inc
push
movsl
inc
push
push
adc
popa
mov
fmull
lods
adc
outsb
mov
sub
or
inc
add
mov
xchg
inc
cltd
jne
arpl
sbb
fldcw
xchg
adc
dec
or
or
inc
jmp
outsl
ja
pop
mov
pop
add
repz
pop
or
pusha
xchg
cli
fucomip
push
enter
and
loopne
mulb
dec
popa
adc
cli
mov
rolb
jmp
xor
hlt
mov
fbld
add
add
sub
jle
push
lods
inc
dec
loopne
add
sub
daa
and
movsl
dec
add
outsl
sbb
inc
adc
inc
mov
cmp
add
jne
add
and
jns
add
rclb
mov
or
cli
mov
inc
adc
cli
loopne
loope
sub
leave
fiaddl
lahf
add
loope
inc
sbb
mov
add
test
rorb
int
push
mov
out
mov
xor
push
adc
mov
cmpb
incl
dec
xor
addl
adc
add
xchg
mov
clc
out
add
rorl
shll
fdivrs
xchg
mov
cmpxchg
jne
adc
es
mov
in
pop
sahf
push
jns
xchg
sbbb
es
mov
ret
movsb
orb
into
xchg
js
mov
push
inc
jo
pusha
sbb
ret
jl
mov
xchg
mov
push
jne
mov
clc
inc
and
inc
mov
push
faddl
fs
mov
sbb
sub
ds
sarb
call
sbb
sti
pop
ret
das
shll
mov
incl
and
mov
pop
add
push
movsl
pop
jb
inc
add
sahf
add
sarb
adc
mov
mov
adc
and
and
or
adc
filds
sub
xor
fdivrl
inc
push
and
int3
xor
repnz
mov
mov
in
push
sbb
xchg
jl
or
push
sbb
jl
jecxz
inc
pop
or
or
xchg
pop
notb
and
movsl
shlb
sbb
jmp
and
xor
movsl
and
push
lock
mov
fidivrl
add
and
or
daa
orl
add
hlt
or
sub
or
subb
arpl
roll
aas
add
pusha
orb
subl
add
xchg
and
push
call
call
add
add
scas
dec
icebp
push
push
xor
push
xor
xor
out
adc
jmp
add
add
xchg
add
pop
add
cmp
loope
repnz
shrb
jp
movsl
ret
dec
test
pop
mov
pusha
call
xchg
test
pop
loopne
jo
orl
jg
dec
and
and
or
add
dec
jno
bound
add
loopne
adc
popa
xor
ret
pop
orl
mov
pop
push
fadds
loope
orb
sub
mov
push
cwtl
andl
mov
icebp
mov
add
pop
loope
stos
pop
and
clc
add
add
mov
mov
sbb
loop
pop
and
rclb
and
fiadds
inc
cmp
push
ljmp
jae
mov
add
xor
cmp
mov
cwtl
jno
cs
dec
adc
inc
jbe
fs
xchg
fstl
lea
mov
mov
dec
shlb
jb
inc
xchg
mov
cmp
inc
jecxz
dec
orb
lods
adc
jle
loop
les
cmp
xchg
mov
add
mov
mov
mov
subb
or
push
add
fs
rcr
adc
jl
fmuls
jp
inc
or
sub
hlt
movsl
cmpsb
mov
jl
dec
mov
xchg
popa
and
je
andb
aas
xchg
nop
dec
ret
inc
cmpb
inc
test
push
mov
jle
clc
jle
xchg
nop
or
add
dec
inc
std
xor
cmpb
adcl
popa
or
out
cli
fwait
ret
nop
add
xchg
add
adc
movsb
out
gs
rolb
jne
stos
sbb
jge
imul
sbb
lcall
jne
and
mov
imul
xchg
pop
inc
push
pop
sub
push
out
sub
imul
or
and
out
stos
xchg
std
jo
daa
pop
dec
push
out
ret
fs
dec
mov
or
aam
sbb
xor
clc
shrl
add
add
or
xor
adc
rclb
mov
dec
notb
js
xor
inc
js
sbb
or
and
adc
bound
push
sbb
jle
sbb
and
push
add
add
adc
sbb
insb
shrb
inc
sbb
call
cmp
daa
pop
dec
cmpsl
and
shlb
cmp
into
push
push
in
and
movb
and
pop
inc
push
push
movsb
push
adc
fcompl
cld
jg
mov
inc
pushf
test
mov
rolb
add
xor
in
mov
jo
adc
inc
aaa
push
pop
dec
out
fs
jns
nop
cmp
jmp
adc
xor
popa
lods
inc
and
movsb
mov
pusha
inc
mov
xor
clc
loopne
jbe
int3
lods
sarb
rcrb
fcompl
fs
pop
and
cmpb
je
iret
in
lcall
sbb
mov
test
sbb
sahf
mov
out
outsb
clc
xor
test
push
xchg
adc
push
sbb
in
or
and
cmpb
jbe
test
sub
sub
std
inc
cld
cmp
lea
movb
in
icebp
int3
add
mov
and
rclb
dec
mov
mov
add
enter
or
and
cmp
cwtl
mov
jo
mov
inc
mov
jle
popa
add
dec
push
xor
pusha
and
add
adc
stc
rolb
sbb
nop
push
js
pop
add
or
adcb
and
repnz
inc
add
mov
push
push
push
loopne
or
mov
ja
sbb
hlt
xchg
movsl
arpl
popf
shlb
je
add
lock
jb
sbb
fs
repnz
sbb
movsb
shrb
aam
pop
xor
test
and
add
nop
push
adc
adc
jo
sub
andl
sbb
dec
lock
adc
xor
sbb
adc
or
test
je
lret
push
or
ljmp
inc
cs
xor
addb
leave
cmp
xor
cli
inc
jl
fisttps
out
xchg
and
adc
adc
sub
aaa
mov
enter
and
dec
cmp
jg
clc
adc
outsb
aaa
dec
nop
jnp
or
push
mov
aam
ljmp
adc
js
mov
mov
pop
pop
cli
jno
repnz
mov
jo
shrb
or
rorb
adc
adc
push
sub
pop
js
mov
xor
push
sub
loope
movsb
cltd
nop
mov
clc
xchg
add
dec
xor
mov
mov
inc
sbb
fwait
inc
icebp
dec
movsl
add
pop
mov
test
test
xor
aam
cmpsb
adc
sti
fwait
decb
cmp
daa
pop
sbb
sub
dec
movsl
mov
dec
hlt
inc
or
dec
add
nop
daa
push
stos
mov
sbb
xchg
addl
pop
inc
int3
mov
cmpsb
push
inc
les
push
add
inc
or
dec
adc
pop
add
dec
mov
sub
or
fsubl
test
dec
add
add
dec
outsl
mov
test
data16
cltd
or
je
mov
add
mov
ret
call
mov
mov
faddl
dec
xchg
incb
outsb
xor
mov
out
jne
mov
in
insb
jecxz
jb
dec
push
add
fscale
jg
mov
imul
inc
add
add
cmp
pop
imulb
xchg
pusha
sub
dec
repz
jl
mov
adc
in
adc
dec
or
outsl
idivb
inc
adc
test
xchg
nop
sub
das
jp
icebp
cmp
dec
cld
push
fs
cmpsb
icebp
xorb
mov
or
aaa
mov
orl
and
dec
cld
jmp
add
popa
rolb
pop
adcb
icebp
decb
cmc
sbb
icebp
add
mov
addr16
add
outsb
fiaddl
das
rolb
pusha
pop
push
das
add
add
xchg
insl
mov
inc
xor
dec
push
dec
and
loope
dec
dec
push
les
js
inc
or
stos
inc
movsb
mov
sbb
push
movsl
mov
adc
and
pusha
movsb
and
orl
mov
movsb
icebp
incl
xor
in
push
mov
clc
dec
sbbl
cld
roll
xorl
inc
cmp
bound
dec
movsb
xlat
cmpb
andl
xchg
add
cmc
je
cmp
insb
cld
pop
icebp
push
or
mov
int
dec
aas
xchg
rorl
xchg
add
and
loop
xchg
out
and
add
xchg
sub
nop
mov
sbb
jbe
les
dec
cmpsb
addb
movsl
or
pop
daa
inc
pop
int3
inc
test
pop
incb
cli
inc
dec
or
dec
std
add
pop
inc
adc
inc
or
pusha
pop
push
enter
add
add
lret
xchg
mov
mov
push
lea
mov
les
inc
mov
sub
add
cmp
or
cmc
int
ds
stc
mov
or
adc
sahf
xor
inc
subb
test
enter
sub
mov
mov
xor
pop
shrb
push
push
lcall
shl
or
dec
jo
andb
shlb
inc
jmp
dec
or
clc
mov
push
pushf
test
rorb
cmpb
mov
and
push
or
mov
mov
movsl
iret
sbb
test
add
ss
mov
and
out
inc
shrl
test
lods
mov
pop
loopne
movsb
mov
ret
call
repnz
mov
mov
cmpb
or
jnp
cmp
fsubl
mov
pop
decl
mov
add
mov
dec
add
inc
or
or
leave
aam
xchg
test
add
cmp
mov
addb
inc
iret
adc
stos
je
sub
pop
andl
sub
popa
add
dec
push
shrb
enter
cmpsb
push
inc
test
push
add
push
pusha
add
mov
orb
lods
ret
fcoml
mov
mov
and
push
lods
jl
jl
add
mov
mov
cmpsb
insb
mov
loop
pusha
xor
pop
xorl
lock
inc
adc
call
mov
xor
adc
sti
or
pusha
inc
mov
add
ljmp
js
inc
imul
pop
inc
ret
sarl
scas
adc
mov
mov
sbb
clc
or
outsl
call
mov
movsb
test
loope
add
mov
mov
inc
mov
or
sbbb
add
jp
incl
mov
test
out
sub
test
loopne
sbb
lods
jb
push
mov
jbe
sub
and
cmp
and
shufps
ret
or
mov
in
pusha
and
add
inc
cs
jo
or
xchg
inc
cmp
xor
loopne
add
adc
lods
and
mov
mov
int3
dec
push
aam
dec
lds
inc
in
mov
pop
cmpsb
sbb
sub
xchg
mov
push
dec
and
les
and
push
adc
lock
pusha
ja
mov
sub
add
int3
gs
xchg
add
les
lock
inc
xor
into
and
inc
mov
mov
je
pop
cmp
les
add
jo
pop
frstor
aad
add
jecxz
movsl
mov
push
inc
mov
sbb
shl
mov
stos
decl
or
popa
pop
shlb
inc
sahf
mov
sub
mov
mov
inc
lds
dec
inc
sub
fstp
incb
mov
add
mov
roll
inc
inc
cmpsb
inc
inc
fmull
xor
es
dec
sbb
int
cmpsb
inc
es
sub
inc
jp
and
lcall
inc
mov
cmp
sbb
dec
mov
sbb
push
or
add
push
xor
int3
mov
dec
inc
or
cmp
sbb
rclb
cmp
push
cmpb
cmp
cmp
jg
pop
pusha
adc
xor
pop
and
sar
mov
xchg
or
lds
mov
movsl
jmp
push
jg
and
movsb
cmpb
dec
add
pop
or
push
shl
rorb
jle
jo
cmpsb
dec
les
outsl
push
mov
mov
ds
jbe
dec
es
inc
adc
dec
push
sbb
movsl
stos
add
icebp
pop
cmp
or
mov
push
mov
push
pop
sub
add
pop
icebp
sub
sub
dec
xchg
into
nop
test
hlt
or
movsl
jo
mov
push
enter
aaa
cli
movsl
ret
push
adc
add
add
out
sbb
sbb
pop
lcall
fwait
fs
xor
or
cmpsb
jnp
icebp
scas
ljmp
nop
add
add
inc
add
lea
iret
loopne
mov
out
movsb
hlt
ja
mov
nop
push
divb
jmp
or
cmpsb
push
rcrb
adc
dec
ret
lock
inc
movsb
ficoml
ss
mov
je
dec
inc
jbe
dec
sub
test
xchg
std
and
xorb
loop
cmp
je
pop
fisubs
mov
rcrb
xorb
mov
add
inc
insb
xchg
loopne
mov
add
push
add
push
das
xchg
int3
mov
dec
pop
adc
inc
or
verw
xor
adc
mov
adc
jbe
add
pop
mov
cmp
push
adc
push
add
xor
cli
cmp
sbb
cwtl
lock
xchg
xchg
stos
mov
fmuls
push
inc
pushf
adc
xor
pushf
adc
inc
ljmp
and
inc
mov
mov
pop
jo
mov
lret
and
add
adc
or
jo
xor
ljmp
push
add
xor
fwait
movsb
cmp
pop
nop
arpl
sbb
notb
push
cmpsb
jle
xchg
in
cmpsb
add
cmp
sbb
out
cmpsb
pop
shlb
mov
push
into
jg
adc
or
lods
jecxz
sbb
mov
inc
and
push
push
jg
ja
jp
or
add
test
xchg
push
dec
lock
push
movsb
mov
mov
mov
xchg
dec
lock
fcomip
scas
push
fidivrl
scas
mov
push
add
mov
xchg
sbb
sbb
pusha
inc
rorb
mov
adc
dec
jg
xor
add
cmp
sbb
adc
loope
jg
hlt
cmp
mov
outsb
loopne
fwait
loopne
xchg
add
int
hlt
adc
ds
bound
incl
and
and
add
and
xchg
add
cwtl
stos
xor
mov
lcall
cs
je
fsubrs
sbb
mov
cmc
or
nop
inc
sbb
push
cmpsb
inc
nop
inc
leave
inc
xor
add
movsl
xlat
mov
mov
loope
cmp
fsubs
cwtl
inc
ret
add
inc
sub
mov
fcompl
mov
popa
sub
bound
pop
jno
scas
mov
movsb
push
js
inc
dec
cmp
cld
push
les
add
mov
cwtl
or
push
jns
inc
outsl
loope
add
in
sbb
test
add
adc
rcrb
rorb
sbb
popa
adc
xchg
enter
les
inc
jo
dec
andb
cmp
mov
inc
jle
pop
or
push
mov
or
push
aas
or
pushf
adc
mov
aaa
movsl
imul
les
adc
fcoms
lods
inc
pusha
push
adc
fwait
or
push
js
shl
push
adc
or
lock
push
or
xor
scas
ss
push
fwait
enter
addr16
adc
sbbb
xor
inc
jae
fneni(8087
add
addb
ficoml
mov
cmpb
bound
inc
mov
pop
jge
push
pop
aam
push
pop
inc
add
and
gs
push
sar
lcall
jno
xor
insl
add
mov
and
mov
icebp
pop
daa
paddq
xchg
jg
or
scas
dec
mulb
pusha
into
sar
cmpsl
cmpl
dec
aaa
mov
and
mov
sbb
adc
std
adc
add
or
adc
outsb
xchg
scas
push
mov
adc
jge
push
fs
sbb
divb
add
or
or
xchg
aas
pop
insl
aad
xchg
bound
mov
out
imul
inc
fdivrs
jle
adc
lds
rorb
aas
adc
mov
pop
hlt
loopne
xor
aaa
add
repz
inc
push
jmp
push
das
dec
adc
push
rorb
repnz
jl
pop
mov
and
enter
sbb
loopne
bound
push
test
or
loopne
sub
pop
stos
add
or
mov
jo
xchg
or
or
dec
out
cli
sbb
sub
ficompl
leavew
pop
or
pop
test
int3
mov
icebp
out
insb
dec
or
adc
mov
xor
pusha
dec
les
adcl
push
cld
or
inc
subb
mov
icebp
push
incl
jno
xchg
mov
pop
or
mov
dec
adc
add
inc
or
jg
mov
cli
insl
mov
mov
add
cmp
add
mov
ja
sub
or
js
or
add
mov
incl
inc
xor
aas
shlb
dec
into
push
addb
icebp
mov
cmpsb
test
dec
cmp
push
sbb
lods
nop
adc
inc
das
pop
dec
jo
sbb
sub
dec
insb
loop
outsb
loope
jo
mov
sbb
and
fwait
jle
test
daa
jmp
push
mov
outsb
sub
jge
enter
push
add
rolb
xchg
add
mov
push
outsb
or
dec
sbb
pop
sub
mov
push
push
xor
and
and
xor
dec
test
and
ret
push
inc
scas
inc
fdiv
dec
hlt
enter
push
mov
sahf
xchg
push
test
push
jp
sub
aam
hlt
xchg
orb
pop
and
xor
loop
pushf
scas
xor
test
add
nop
add
adc
add
pop
mov
or
fcmovnb
repnz
add
push
mov
lods
mov
pop
jb
in
movsl
cmpsb
add
add
push
jmp
push
and
loope
mov
jge
xor
push
test
add
cmp
sbb
nop
dec
int3
into
and
xchg
cltd
xor
pop
or
mov
mov
mov
add
sbbb
jno
inc
inc
inc
pop
cmp
mov
pop
sbb
out
addl
xchg
adc
or
push
icebp
inc
or
pop
icebp
pop
addb
adcl
aaa
mov
rorl
es
cmp
test
shll
pop
push
out
dec
lods
aaa
dec
push
cmp
into
xor
mov
je
cmp
and
outsb
sbb
hlt
dec
sbb
sbb
xorb
scas
ljmp
pop
mov
xor
cmpsb
add
dec
push
mov
lods
add
dec
fcoms
data16
imul
addl
aam
mov
loop
dec
popf
insb
outsb
sbb
cmp
in
fisttps
cmc
and
xorb
test
add
sbb
jmp
insb
jbe
sbb
sub
out
xchg
inc
or
imul
inc
js
arpl
or
test
inc
test
addb
ficompl
or
adc
pop
or
add
adc
inc
es
adc
xchg
into
push
pop
lret
pop
push
sbbb
popa
roll
cli
adc
mov
add
in
xchg
fnstcw
lods
adc
inc
stos
sub
cmpl
lods
jne
xor
xchg
adc
in
pop
inc
movsl
stos
sbb
mov
mov
shlb
mov
adc
cmpb
or
or
addl
add
sub
mov
add
sub
mov
push
cltd
test
push
dec
mov
cmpb
rclb
sbb
lahf
bound
movsl
mov
mov
movsl
lods
xchg
inc
sbb
rorl
ffree
xor
adcb
icebp
dec
in
push
adcb
sub
jbe
scas
jb
movsl
test
mov
mov
sbb
rcll
imul
es
ljmp
out
rorb
pop
push
leave
movsl
mov
inc
xor
rorl
rorb
push
das
call
dec
fcmovu
inc
sbb
outsb
cs
push
sub
subb
cld
shl
test
dec
jle
out
adc
fadds
insb
push
sbb
popl
into
add
adc
movsl
sub
jle
add
movsl
fists
mov
nop
inc
jl
xchg
fidivl
mov
jbe
mov
dec
add
gs
adc
inc
popa
jb
roll
adc
and
sub
pop
into
inc
and
rorl
cmp
mov
aas
lret
dec
inc
pusha
punpcklbw
add
pop
dec
aad
push
pop
or
push
sbb
inc
daa
je
test
inc
push
jl
push
pop
call
pop
cmp
in
dec
in
mov
dec
rolb
xchg
or
fwait
jmp
cli
in
pusha
dec
inc
push
sbb
or
movsl
std
outsb
ljmp
mov
mov
test
sbb
cmp
jg
fidivl
rcrb
pop
in
and
or
dec
rcrb
and
or
inc
inc
pop
sbb
ret
mov
jbe
mov
ret
sbb
adc
shlb
adc
xorb
mov
add
outsl
mov
dec
dec
mov
mov
in
rcll
addb
pop
and
and
cmc
inc
add
inc
mov
dec
xor
push
data16
push
dec
lret
xchg
ljmp
and
ljmp
add
sbb
cmc
xorl
pop
pushf
sar
cmp
sub
pop
push
cmc
ret
add
add
out
ss
add
push
mov
pusha
adc
loopne
sub
adc
and
xor
clc
xor
xchg
fmuls
aaa
sbb
cmp
mov
inc
mov
loop
hlt
or
cmc
cmp
cmp
mulb
mov
mov
pusha
xor
fcoms
les
rol
xchg
sub
inc
push
sub
and
sub
fildll
mov
push
xchg
mov
mov
stc
fwait
add
cmp
outsb
mov
mov
sbb
fld
popa
push
lret
std
aaa
cld
mov
inc
add
loope
dec
or
sbb
add
push
add
adc
cmp
push
and
or
push
mov
cmp
pop
add
or
dec
sbb
insl
shll
adc
mov
mov
insb
cmp
jp
pop
or
cs
nop
ret
jb
cmp
popa
xchg
push
xor
lcall
mov
pop
loope
or
imull
cmp
pop
cld
or
movb
cmp
jbe
jle
pushl
cli
test
pop
dec
sbb
test
mov
and
sub
mov
movsl
repnz
xor
mov
stos
and
pop
jb
mov
stos
je
outsl
jle
and
dec
sub
popa
insl
inc
push
push
mov
lahf
loopne
inc
xor
jno
std
call
mov
movsl
fidivs
push
sarl
push
pop
push
push
add
cwtl
stos
or
add
cmpsb
pop
test
xor
aam
test
or
sbb
push
lret
jg
mov
je
into
addb
xchg
loope
adc
sub
pop
lock
push
pop
int
clc
or
mov
xor
lock
xor
mov
outsl
adc
push
cmp
or
sbb
nop
cmp
or
pop
add
rorl
in
inc
jge
push
mov
xor
scas
cmpsb
dec
rorb
mov
add
and
cmp
decl
jl
push
pop
nop
cmp
xchg
or
cmp
xchg
pop
pop
push
out
adc
add
inc
mov
sub
cmp
xchg
adc
test
xchg
or
mov
test
incb
pop
dec
xchg
adc
xchg
inc
adc
or
jl
lock
inc
cmp
sub
lock
xor
repnz
dec
mov
add
shlb
shrl
push
orb
sbb
insb
and
push
or
ret
inc
jl
xor
pop
fadds
adc
dec
repnz
cli
incl
notl
dec
daa
lock
sub
shll
ljmp
int
push
cmp
push
rolb
adcb
loope
add
ss
mov
dec
or
push
xchg
or
add
and
mov
xor
sbb
dec
in
adc
xchg
lock
push
inc
inc
xor
insl
cmp
dec
popa
andb
sub
fists
add
inc
push
add
movsl
test
aam
pop
mov
cmp
imul
test
int3
or
jb
ja
jb
push
and
adcb
inc
bound
inc
sub
xchg
shlb
int
fisubl
mov
cld
inc
pop
nop
add
dec
jmp
or
push
in
movsb
inc
sub
les
pop
clc
pop
xor
push
loope
cmp
shlb
stc
jge
lret
clc
mov
add
adc
adc
sub
xchg
cmc
xor
loope
loope
cwtl
xchg
adc
cmp
sub
sub
lods
ljmp
mov
xchg
adc
xorb
mov
fcoml
pop
icebp
outsl
jp
cmc
or
roll
ror
pop
adc
xor
sbb
and
movsb
and
mov
push
lcall
jmp
stos
xor
dec
loopne
test
cmc
cld
mov
outsl
mov
and
add
dec
cli
dec
faddl
dec
cmp
test
adcl
std
rorb
in
sub
mov
sub
xor
sbbb
loope
xor
jo
push
imul
or
nop
addl
movsl
dec
scas
mov
pushl
mov
pop
push
cmp
push
mov
sbbb
jecxz
in
notb
add
leave
adcb
cmp
je
or
inc
inc
jp
cmpb
adc
sub
sbb
cmpsb
sbb
inc
push
aad
cld
push
inc
adc
sub
inc
and
add
push
jge
push
mov
dec
sbb
sub
inc
cmp
loope
int
loopne
pop
movsl
rcll
mov
dec
dec
adc
add
or
and
dec
pop
adcb
mov
dec
and
decl
lock
or
scas
dec
mov
adc
movsl
ss
imul
fadds
ljmp
pop
add
jg
loop
jno
sbb
push
mov
gs
test
fbld
movsl
popl
andl
mov
pop
rorb
adc
out
mov
xchg
mov
jno
cmp
push
push
add
add
push
pop
or
sub
inc
or
mov
push
ja
mov
enter
mov
lds
or
shr
adc
orl
std
mov
jmp
fnsave
and
jne
add
jle
xor
mov
or
mov
lea
xor
fwait
sahf
fs
jo
test
adc
aam
lods
cli
in
mov
insl
ror
xchg
xor
or
pop
cmp
mov
mov
or
push
or
add
push
push
sbb
jo
or
add
add
lds
or
ss
fidivl
mov
sbb
rcrb
enter
and
xchg
jo
movsb
push
loopne
or
and
cmp
clc
andb
cwtl
jo
push
push
popa
cli
jmp
add
and
and
inc
mov
sub
push
jo
scas
inc
fsubl
enter
mov
cmp
adc
pop
mov
lcall
xchg
and
std
ljmp
xchg
imul
mov
mov
xorb
movsl
cmp
test
dec
insl
push
outsl
add
add
ljmp
inc
cli
dec
int3
adc
or
into
sub
lock
stos
inc
movsl
cmpsb
jnp
adc
pop
insb
cld
xchg
mov
andl
jg
inc
nop
and
loope
push
hlt
add
jbe
add
loope
add
roll
pop
add
cld
lock
sbb
int3
shll
mov
sbb
jecxz
jo
cmpsb
mov
mov
xchg
jp
mov
cmp
fstps
or
mov
dec
clc
lcall
mov
test
daa
xchg
scas
dec
inc
xchg
cmpsb
inc
mov
sub
inc
jmp
sub
inc
pop
sub
pusha
sub
cld
add
lcall
or
pop
cwtl
inc
insb
cld
xor
jecxz
lods
incl
add
sarl
or
mov
inc
xchg
jle
test
in
popa
cld
mov
add
fisttpll
gs
lods
push
stc
mov
sbb
inc
fimull
sbb
mov
mov
mov
and
int
lods
push
outsb
push
dec
mov
or
loopne
inc
inc
bnd
dec
enter
add
jns
inc
fnsave
dec
into
push
pusha
cmp
aaa
mov
sub
adc
and
inc
sbb
mov
or
pop
mov
xor
and
push
dec
pcmpeqd
push
movsl
xor
addl
push
ljmp
mov
rclb
aam
andb
rcrb
xchg
pop
mov
cmpl
xchg
ds
xchg
ret
push
nop
sub
mov
add
sub
inc
cmp
test
pop
dec
push
cli
sub
fwait
cmpsb
jne
adc
rcrl
lds
sahf
cmpsb
leave
or
or
mov
push
and
fdivl
lods
mov
adc
add
mov
push
andl
inc
xor
or
cs
dec
addb
lods
orb
addb
xchg
int
mov
jmp
orb
lea
mov
mov
sub
dec
daa
xor
das
sub
xchg
sub
jno
or
or
pop
rolb
push
loope
push
ret
adc
and
rclb
pop
shll
popa
sbb
sahf
cmpsb
imul
adc
adc
sbb
jmp
dec
mov
pop
cltd
rolb
rorb
inc
repnz
mov
mov
lret
int3
push
add
inc
add
int3
icebp
sub
add
push
les
ljmp
fucomp
js
rcrl
aad
fcmovbe
xor
ffree
add
add
mov
xor
rcll
xorb
stos
add
add
xchg
and
jno
cmpb
pop
rcr
fs
or
add
add
xor
cmp
dec
inc
add
insb
aas
mov
add
ss
jnp
lods
insb
xchg
xchg
cltd
stos
add
jne
jg
pusha
roll
ficompl
insb
dec
jg
adc
adc
insl
in
das
push
loopne
lret
add
sbb
and
fcmovnbe
xor
ficoml
stos
or
or
jns
jo
push
cmp
pop
inc
inc
shr
loopne
push
in
hlt
icebp
add
cmp
push
ljmp
sbb
addl
inc
loopne
ljmp
test
push
xchg
sbb
mov
or
cmc
out
xchg
jp
pusha
mov
in
mov
pop
jo
add
sub
pop
push
ljmp
mov
cwtl
jecxz
xor
push
mov
mov
mov
add
ss
adc
add
pop
in
loopne
roll
mov
sub
and
sub
iret
insl
fcmovnb
aam
lds
dec
push
enter
or
pusha
repz
stos
loopne
mov
pusha
stos
loopne
gs
imul
or
jg
jbe
je
jo
dec
mov
call
pop
stos
push
in
add
push
je
pop
stos
mov
ret
cmp
aam
cmp
mov
lahf
ja
sahf
notb
adc
adc
add
cmp
lret
push
and
cmp
mov
loopne
andl
cltd
popf
mov
lcall
stc
popa
ljmp
jp
cld
out
and
loopne
pop
pusha
jno
loope
fstl
mov
lock
std
cli
int3
xor
or
and
stc
loopne
enter
xor
and
add
jle
or
in
inc
jo
cwtl
pusha
popf
stos
and
or
inc
mov
mov
push
push
loopne
xchg
shll
jnp
pusha
adc
pop
es
add
subps
outsl
shr
push
fstpl
leave
lods
bound
push
cwtl
outsb
add
or
add
xor
stos
sbb
push
icebp
cmpsb
outsl
xchg
xor
push
stc
cli
xor
or
xor
pop
push
push
jns
clc
xor
xor
shll
pop
inc
in
jo
dec
rcrl
mov
lock
xor
movsl
test
jl
xor
andl
lcall
in
push
mov
pop
jmp
aad
fnstenv
mov
cmpsb
imul
push
xor
orl
sbb
lea
push
jo
addb
jns
rorl
lcall
je
aad
fwait
xlat
insb
lret
sbb
lock
add
mov
subl
sub
das
pushf
rcrl
out
jo
dec
pop
inc
mov
mov
rcr
mov
aam
jg
lcall
pushf
adcb
xor
rcrl
pop
pop
hlt
clc
cld
xor
mov
loopne
xchg
call
rcl
dec
imul
les
enter
sarl
xor
sahf
mov
add
shl
idiv
jmp
daa
test
out
add
xor
cmp
in
xor
xor
aaa
xor
xor
mov
adc
sbb
sarl
add
sahf
or
pop
in
xor
ja
add
addr16
push
jns
sahf
imul
xor
sahf
cmpsb
sbb
dec
mov
pop
mov
cmp
inc
repz
scas
sarl
lahf
cmpl
dec
xchg
add
test
dec
shlb
bound
pop
dec
dec
and
mov
shl
push
mov
andl
sbb
mov
jecxz
sbb
or
loopne
dec
add
shll
sbb
out
jns
imul
cmpsb
insl
mov
jbe
jp
jle
and
out
jno
jecxz
in
fwait
divb
dec
add
sbb
in
stos
in
jae
cwtl
jecxz
in
sub
cwtl
shl
mov
mov
mov
mov
mov
into
lock
cmp
inc
jo
mov
inc
jo
add
cmpsl
and
cmpsl
push
sbb
inc
dec
xor
add
lret
stos
mov
inc
xor
stos
mov
add
mov
out
mov
sbb
stos
sub
jbe
sub
lahf
mov
dec
inc
mov
cmpsb
clc
push
mov
xor
repz
add
sti
sub
pop
push
dec
push
jecxz
out
or
dec
mov
imul
add
add
rcrl
cwtl
lret
dec
push
xor
sbb
int
xor
aas
and
sub
adc
shll
sbb
loopne
imul
pop
add
or
push
jae
ja
dec
shll
jnp
arpl
outsl
xor
push
pop
pop
inc
mov
inc
dec
orb
mov
imul
cmpsl
sbb
cmpsb
add
xchg
stos
push
lahf
add
dec
imul
inc
adc
add
mov
mov
mov
dec
mov
sbb
dec
nop
xchg
cwtl
lahf
addb
lock
clc
test
repz
loopne
in
loop,pn
dec
cmp
or
orb
jle
pop
dec
fmuls
push
cmpsb
dec
add
shrb
adc
push
push
or
or
add
dec
ret
jle
shlb
bound
mov
mov
data16
pop
subb
in
dec
mov
sbbb
out
mov
add
mov
nop
sub
subl
incl
dec
into
inc
or
cwtl
add
cmpsb
icebp
sub
sbb
lods
dec
dec
fsubr
push
mov
mov
add
adc
lods
jne
pop
nop
fisubs
hlt
les
pop
mov
decl
xor
ret
push
dec
pop
xor
pop
and
dec
cmp
mov
adc
ret
or
sbb
add
add
das
lock
or
movb
add
pop
and
loopne
test
dec
pop
cmp
mov
or
rcl
outsb
add
inc
or
outsl
neg
addb
add
ret
fmull
adc
adcl
cmp
mov
mov
push
movsl
int
adc
popa
ret
mov
add
ret
add
ret
es
mov
icebp
mov
outsl
inc
subb
addb
pop
ss
push
and
fimull
xor
inc
sub
mov
cwtl
inc
sub
inc
add
sub
lock
stos
push
leave
add
rorb
inc
and
subb
hlt
sub
push
cmp
aam
in
push
pop
lcall
jecxz
or
cmovnp
pop
add
push
enter
fbld
mov
aam
adc
inc
adc
mov
lods
xor
dec
mov
in
jno
movsl
sbb
jmp
dec
push
movsl
aad
add
or
rolb
inc
adc
pop
clc
decl
movsl
cmp
sbb
jmp
push
adc
push
or
push
outsl
push
pop
mov
loopne
mov
xor
ret
add
inc
push
add
inc
sub
cmp
sbb
cmp
icebp
incl
mov
and
add
insb
movsl
mov
mov
sarb
es
sub
add
repz
or
dec
xchg
mov
jmp
push
loope
pop
and
jmp
mov
mov
movsl
lret
loope
xchg
ret
sar
out
dec
orb
mov
push
inc
and
hlt
sbb
push
or
sub
push
dec
xor
push
or
add
add
mov
outsb
movsl
lods
loopne
imul
test
incl
sbb
dec
add
push
pusha
jp
mov
loopne
dec
loope
das
mov
enter
and
aaa
mov
in
shl
dec
and
inc
loope
iret
in
dec
cmp
pop
and
lods
cmp
movsb
outsb
inc
push
cmp
pop
movsl
pop
and
dec
filds
pop
dec
loopne
mov
movsb
add
add
or
push
push
push
mov
data16
pop
icebp
add
mov
jg
sbb
dec
push
add
test
cmp
js
adcb
xor
insl
aaa
loope
mov
mov
inc
pusha
adc
fs
aaa
fldt
or
loopne
in
fs
adc
dec
in
shrb
pop
cmp
xor
pusha
or
or
and
add
dec
sub
dec
inc
pop
mov
or
pop
movsl
push
add
jg
sti
les
rorl
mov
add
movsl
imul
xorps
adc
inc
add
es
jle
ljmp
ljmp
lods
aaa
popa
add
adc
cwtl
inc
or
mov
dec
jo
mov
sub
or
push
cmp
push
ret
xor
inc
data16
add
and
out
adc
cmp
or
pop
mov
shrl
xor
and
decl
sub
out
rcll
push
ret
movsl
inc
pop
add
sti
fildll
cmp
movsl
pop
shll
mov
sbb
lcall
add
jo
mov
cs
push
sarb
pop
adc
negb
sbb
lea
enter
and
lds
fidivl
lods
ficompl
or
sbb
or
push
xor
add
mov
push
or
jbe
imul
cmp
movsl
setle
pop
lock
dec
and
outsb
jo
movsl
push
mov
or
shll
loopne
adc
dec
xor
mov
dec
push
lock
ja
mov
inc
or
lahf
bound
mov
xchg
xor
movb
pop
ja
cli
pusha
outsb
fisubrs
shll
jmp
in
orl
fstps
repnz
into
adc
push
jne
mov
adc
add
stos
insl
cld
testb
add
pushf
lret
mov
or
mov
push
push
lods
les
lret
ja
sub
js
jno
fdivl
xor
sti
ljmp
jno
cmp
inc
dec
adc
sahf
insb
jmp
jg
jmp
notb
es
adc
or
pop
fnstsw
jae
ja
sub
jnp
jmp
imulb
sahf
and
addr16
cmp
cmp
outsl
mov
enter
push
push
add
jno
and
stos
and
pop
and
daa
pop
dec
incl
adc
dec
sub
add
leave
pop
ret
add
cwtl
pop
mov
inc
in
mov
push
dec
mov
push
add
add
inc
add
mov
call
xor
inc
mov
dec
xchg
mov
cmpsb
cs
add
andb
xor
cli
adc
movsl
out
add
jg
dec
lea
add
mov
xor
dec
daa
add
icebp
out
roll
push
push
pop
repnz
mov
lret
mov
sti
add
or
dec
mov
add
mov
loopne
sub
sbb
orl
pop
mov
mov
push
inc
cmp
cli
das
sub
mov
push
mov
pop
roll
push
movsl
xchg
inc
fistpl
mov
push
mov
inc
or
push
xchg
or
int
add
and
jns
push
pop
cli
inc
xor
or
dec
push
dec
push
push
adc
inc
mov
sbb
pop
js
decb
pop
xor
out
pop
femms
adcb
out
outsl
bound
push
fcomip
incl
pop
pop
or
inc
rclb
mov
movsl
stos
mov
je
lds
add
pusha
mov
clc
roll
xchg
add
adc
xor
lret
xor
lahf
push
mov
ficompl
push
push
xchg
or
sti
fwait
loopne
and
jle
pop
jg
add
add
add
shlb
insl
jmp
pop
xor
or
inc
cmp
mov
sub
or
ficomps
pop
mov
out
sbb
lea
ljmp
clc
inc
add
push
inc
std
add
mov
xchg
roll
insl
mov
sub
fimull
or
pop
ret
repz
and
call
adc
add
loope
ja
pop
rolb
push
sarl
add
xor
mov
cmpsb
dec
push
inc
clc
add
or
mov
xchg
push
xchg
or
shl
add
cmc
js
mov
mov
xchg
int
pop
adc
adc
jl
sbb
mov
add
lods
push
sbb
cmp
lock
dec
add
push
or
adc
and
aam
out
fisubrl
xchg
push
add
fwait
or
add
sbb
add
shrl
das
add
ds
imul
dec
and
outsb
xor
add
stc
add
das
pop
or
add
mov
jmp
push
imul
sbb
fwait
cld
fistpll
pop
add
add
add
fwait
out
add
addl
pop
push
mov
jne
ljmp
leave
add
rcr
out
add
jle
imul
add
mov
push
pop
push
addr16
or
jnp
ret
cmp
iret
add
xchg
std
jnp
ss
es
fmuls
push
dec
andb
xor
jnp
hlt
sbb
fistpl
addb
push
cmpsb
sbb
pop
push
cmp
imul
jmp
xlat
push
mov
xor
jno
add
and
mov
fcmovbe
cs
mov
loopne
aas
test
add
add
loopne
add
fsubrl
nop
cltd
lcall
sbb
cmp
cmpsl
imul
pusha
mov
pop
fldl
add
pop
sarb
add
lods
inc
cmp
xchg
jnp
cli
or
popf
roll
xor
jge
add
repnz
rcrb
push
adc
jg
adc
gs
icebp
mov
rolb
rolb
xor
popf
or
add
xchg
sarb
add
in
rolb
sub
pop
push
popf
mov
lret
in
lods
xchg
push
das
les
jae
cmpsb
stos
adc
outsl
add
sub
cmpsb
imul
rcrb
dec
out
dec
fwait
add
sahf
push
rcll
rol
sub
daa
sbb
js
pop
mov
mov
test
cmp
ret
dec
cmc
fnsave
sub
mov
pop
stos
adc
rolb
adc
dec
lods
fistpll
pop
sbb
pop
add
rolb
sub
and
add
push
xor
rcll
sub
mov
and
in
push
fs
pop
out
sbb
out
aaa
dec
sbb
stos
adc
adc
sbb
adc
shrb
or
add
or
xor
pop
sub
cmp
sbb
mov
adc
and
and
add
add
adc
and
add
add
jecxz
out
add
mov
inc
and
sub
add
or
xor
cli
sub
push
add
add
dec
fistpl
cmp
mov
add
cwtl
sub
push
cmp
xchg
cmpsb
lods
fs
sbb
icebp
rclb
testb
sub
jle
cwtl
ret
or
lret
test
or
sub
fsubs
mov
mov
inc
and
xchg
add
mov
pop
sub
adc
sbb
inc
mov
and
xorb
adc
popa
push
adc
add
sub
sub
mov
decl
xor
out
in
sbb
xor
loopne,pt
dec
loop
mov
lcall
adc
pop
xor
adc
dec
dec
pusha
or
add
movb
mov
stos
popa
or
pop
movsb
or
enter
and
sbb
sbb
dec
mov
sub
pusha
add
push
and
mov
jo
add
cmp
aas
or
ss
insb
push
mov
and
sbb
dec
sbb
dec
clc
xlat
and
adc
sbb
cvttps2pi
test
or
pop
aam
inc
or
inc
adc
push
mov
xorl
loopne
mov
insb
in
dec
add
add
arpl
jle
loop
pop
xor
and
in
aaa
or
and
inc
sysenter
cmp
xchg
and
insl
inc
vmovupd
or
and
jae
push
loopne
fadds
shrb
cmp
xchg
jecxz
dec
push
lods
shlb
out
pop
adc
add
dec
mov
and
xchg
push
sti
mov
sub
cmp
adc
ret
dec
jmp
and
mov
insb
mov
mov
sub
cmp
push
orb
das
mov
das
loope
nop
adc
pop
or
and
fwait
inc
cmp
lock
cmp
xchg
mov
test
or
cmp
std
cmp
sbb
dec
and
sub
cli
decl
dec
fcmovu
and
das
pop
and
call
subl
mov
gs
ret
push
cmp
incl
add
and
dec
es
and
andl
call
push
push
lock
and
mov
cltd
es
and
jbe
push
xchg
inc
mov
movsb
or
loopne
fcoml
cmp
mov
inc
and
jg
aaa
pop
sub
and
sarb
adc
or
out
adc
clc
add
int3
sub
jmp
mov
cmp
and
addb
das
inc
shl
lods
jno
sbb
fmull
pop
dec
ret
add
mov
sti
popa
xor
add
adcb
xchg
push
js
xor
inc
push
push
psllw
notb
ffreep
fpatan
sub
push
xor
flds
mov
mov
pusha
imul
out
cli
fwait
inc
xor
dec
push
lods
daa
and
mov
cmpsb
or
and
xchg
or
push
add
sub
jbe
cmp
jo
mov
xor
dec
std
sub
dec
xor
roll
pop
mov
adc
lock
jb
out
sbb
outsl
fimuls
xchg
inc
inc
shrl
add
rol
or
icebp
pushf
push
xchg
xchg
or
add
incl
push
pop
mov
mov
jo
ret
mov
pusha
adc
push
ret
mov
lods
les
push
add
dec
dec
adc
outsb
xchg
push
lcall
mov
bound
jle
dec
movsb
jmp
mov
push
sub
sub
add
mov
movsb
dec
loopne
or
enter
add
aam
sbb
nop
pop
lock
sti
test
xchg
adc
sbbb
ljmp
add
jp
call
bound
push
and
adc
sbb
mov
adcl
mov
dec
hlt
add
mov
pop
add
scas
mov
outsb
and
inc
arpl
fwait
adc
or
adc
mov
mov
cmc
jno
adc
cmp
outsb
cld
rclb
jno
add
push
or
add
or
lds
add
push
mov
sarb
and
or
inc
xor
push
sbb
push
test
es
daa
push
pop
mov
and
out
sarb
dec
das
fcomip
jg
inc
and
and
jle
add
adc
add
mov
lcall
dec
test
lea
mov
and
fs
add
mov
mov
mov
ds
inc
inc
hlt
or
push
push
add
scas
adc
add
jb
lods
push
pop
mov
loope
out
shlb
outsb
and
lock
add
fisubrl
cmpb
fmull
xchg
aad
stos
bound
cmpsb
rclb
pop
xor
push
mov
adc
or
stos
int3
and
pop
sahf
mov
stos
out
xor
pop
in
add
push
pop
jno
subb
scas
sub
cmp
nop
cli
ret
fcomip
sub
lret
roll
jo
cmp
shlb
xor
jae
inc
ljmp
add
jbe
psubd
pop
adcb
arpl
jecxz
rorb
adc
in
mov
pop
sbb
fadd
dec
sbb
cmp
incl
sbb
sbb
add
xchg
xchg
and
test
adc
push
or
notl
xor
push
scas
or
mov
and
push
mov
add
pop
add
leave
jo
inc
ds
movsb
adc
push
test
cmp
lds
or
or
adc
mov
or
xor
push
mov
push
mov
ljmp
adc
add
je
mov
lahf
add
pop
push
or
jne
roll
dec
push
sub
fmuls
clc
or
fdivrl
loop
es
push
rcll
jae
cmpsl
mov
mov
or
pop
push
rclb
es
cmpsb
sbb
pusha
or
cmp
jnp
pop
cmp
push
push
and
sbbl
or
cmp
xchg
or
das
mov
push
sub
add
sub
aam
repnz
dec
push
ljmp
and
pop
xchg
adc
or
sbb
dec
xor
and
jg
push
jp
ds
cwtl
adc
and
ds
pop
in
or
test
jl
add
insl
xor
lcall
inc
cmp
push
dec
mov
push
pusha
cs
in
fimull
push
inc
push
add
inc
add
jg
aad
push
add
sub
push
pop
cmp
cmp
push
xor
add
push
cmp
sbb
pop
xor
cmp
push
test
or
sbb
outsb
add
adc
add
jnp
je
je
bound
and
add
add
inc
cmp
pop
and
and
into
adc
mov
sbb
push
shlb
repz
and
cmpsl
mov
pop
and
dec
add
xchg
push
add
push
cmp
push
dec
cmp
sbb
cmp
int3
cmp
push
mov
sub
push
push
inc
pop
ret
movsl
popa
rcrb
pop
xchg
aad
outsb
push
ds
pop
add
add
cs
xchg
dec
xorb
xchg
imul
incl
es
test
mov
sub
js
cld
cmp
cs
es
outsb
jg
xor
test
adc
sub
adcb
or
scas
mov
and
loopne
add
xchg
incl
cmp
aas
test
pop
sbbb
jo
xchg
je
cs
orb
dec
xchg
add
and
mov
or
or
pop
cmpsb
or
imul
incb
pop
cwtl
xor
or
mov
mov
add
sbb
pop
data16
sbb
dec
mov
xor
enter
lock
or
rolb
or
call
sub
mov
out
xchg
dec
rorl
cmc
addb
jp,pt
pop
addl
jbe
inc
add
push
cltd
xor
sub
ret
call
cs
xorb
sub
pop
inc
or
out
pop
insb
add
add
sbb
inc
dec
sbb
inc
adc
adcl
or
add
pop
repnz
inc
pop
out
and
mov
dec
inc
clc
ffreep
add
adc
adc
adc
sbb
test
xchg
adc
out
xchg
hlt
adc
adc
addb
mov
add
and
add
or
mov
mov
int3
cmpb
push
add
pop
xchg
ljmp
mov
adc
lock
hlt
fcom
fldl
adc
inc
fdiv
fildll
inc
xadd
fsubrs
cmp
mov
cmp
movsb
add
cs
add
out
int3
fistpll
ljmp
add
xor
imul
jp
or
sub
sub
das
mov
call
cmpsb
add
sub
psrad
push
and
adc
or
and
decb
mov
xor
pusha
daa
mov
push
inc
test
pop
mov
fs
mov
popa
mov
sbb
and
mov
cmc
pop
je
sbb
aaa
popa
jno
jb
cmp
or
xchg
incb
or
inc
movsb
pop
lcall
movsl
add
insb
add
sti
add
add
out
fildl
and
xchg
std
inc
aam
add
lret
popf
jmp
jns
xchg
pop
sar
test
add
add
sbb
and
in
add
jmp
inc
jae
gs
das
add
jg
inc
sub
xchg
jg
pushl
jmp
xchg
xchg
dec
sbb
xor
pusha
out
adc
pop
hlt
aaa
sar
or
or
in
dec
in
shl
es
incb
add
add
stc
dec
jg
jl
je
je
mov
je
je
je
je
adc
je
je
je
icebp
je
je
je
mov
je
je
je
mov
dec
ja
ja
add
ja
ja
mov
cld
int
jns
ja
ja
ja
adc
ja
ja
ja
ja
aaa
jg
leave
ja
ja
shll
ja
ja
icebp
ja
ja
ja
repz
jg
xchg
ja
ja
ja
mov
dec
jbe
jbe
push
jbe
jbe
jbe
jg
aaa
jbe
jbe
jbe
jbe
adc
jbe
jbe
xor
aaa
jg
leave
jbe
jbe
shll
jbe
jbe
icebp
jbe
jbe
jbe
repz
jg
xchg
jbe
jbe
jbe
mov
dec
jno
jno
push
jno
jno
jno
jg
aaa
jno
jno
jno
jno
adc
jno
jno
xor
aaa
jg
leave
jno
jno
shll
jno
jno
icebp
jno
jno
jno
repz
jg
xchg
jno
jno
jno
mov
dec
jo
jo
push
jo
jo
jo
jg
aaa
jo
jo
jo
jo
adc
jo
jo
xor
aaa
jg
leave
jo
jo
shll
jo
jo
icebp
jo
jo
jo
repz
jg
xchg
jo
jo
jo
mov
dec
jae
jae
push
jae
jae
jae
jg
aaa
jae
jae
jae
jae
adc
jae
jae
xor
aaa
jg
leave
jae
jae
shll
jae
jae
icebp
jae
jae
jae
repz
jg
xchg
jae
jae
jae
mov
dec
jb
jb
push
jb
jb
jb
jg
aaa
jb
jb
jb
jb
adc
jb
jb
xor
aaa
jg
leave
jb
jb
shll
jb
jb
icebp
jb
jb
jb
add
jg
xchg
jb
jb
jb
or
jb
sbb
popa
sub
jne
xchg
dec
jp
jge
mov
imul
jl
jl
jl
jl
sarl
jl
jl
jl
or
stos
jge
push
js
js
js
add
jnp
jnp
jp
jp
jne
jne
jne
add
pushl
pushl
jne
jne
jne
js
jo
pcmpeqb
inc
je
je
je
nop
push
push
mov
ja
ja
ja
adc
ja
ja
ja
adc
rcrb
sbb
fbstp
jbe
pop
xor
sbb
ficoms
jno
jno
xor
and
fidivs
jae
jae
add
push
xchg
jae
jae
aad
mov
es
jb
jb
jb
sbb
js
or
push
or
arpl
lcall
jno
push
jge
jge
jl
pop
jg
jg
je
jbe
mov
ret
cmp
add
jge
jge
in
outsl
dec
jb
dec
jge
jge
adc
jge
jge
jge
out
repz
dec
jge
cltd
jge
jge
jl
jl
sbb
push
into
jl
jl
jl
in
jl
jl
jl
lcall
jl
jg
jg
push
jg
jg
jle
jns
fdivrs
jns
jns
std
xchg
js
or
mov
js
js
cld
lcall
clc
js
js
mov
data16
jnp
jnp
int
lret
jnp
jnp
jmp
fbstp
jp
jp
sarl
jp
jp
mov
jne
jne
jne
pushl
incl
fdivs
jne
jne
push
je
je
je
je
divl
push
jp
add
ja
ja
ja
ja
xor
push
lods
ja
ja
adc
sub
adc
mov
jbe
jbe
jbe
fcompl
add
adc
test
mov
call
jne
add
divl
jo
jae
in
jae
jae
mov
inc
mov
test
jb
mov
scas
xor
add
jae
jge
jge
jge
mov
stc
jl
or
jg
sub
and
adc
loope
test
lcall
lock
pop
lock
mov
jge
jge
jl
sarb
dec
jg
xor
add
jg
out
fbstp
jg
jg
jle
jle
sarl
jle
jns
sbb
jns
jns
cmp
fists
aam
loopne
idivl
mov
js
js
jb
mov
outsl
clc
es
js
dec
cwtl
js
js
js
jne
fcomip
jnp
jp
bound
jp
jp
jp
push
lods
pop
hlt
mov
imul
aas
cmp
ja
jbe
ljmp
xchg
jnp
add
jbe
jbe
sbb
jbe
jbe
in
lcall
cmp
jbe
jbe
jbe
jbe
shlb
fwait
jo
mov
adc
fbstp
push
jno
jno
jno
jno
call
nop
and
jno
repz
jno
adc
cwtl
adc
add
lret
fdivl
jo
outsb
push
jae
jae
jae
jae
jae
mov
incl
jb
arpl
jb
jb
xor
adc
xor
jg
fcomip
sub
cli
jge
jge
jge
cmp
jl
jl
jl
idiv
call
jl
jl
push
es
jg
add
jg
jle
jle
add
jle
jle
jle
adc
pop
cmc
imul
dec
add
jo
jo
or
aaa
jg
mov
inc
jnp
jnp
xchg
jp
dec
jne
cli
fcmovnu
hlt
je
je
cmp
ja
ja
ja
adc
jbe
adc
pop
sub
fidivs
xchg
and
leave
add
jge
jge
inc
jge
jge
jge
scas
and
fcmovbe
sub
pop
inc
jl
jl
jl
inc
xor
xor
jg
or
test
mov
or
aad
jg
sub
cmp
jle
in
icebp
jle
adc
jns
add
jns
jns
jns
stos
jns
js
fwait
mov
sub
js
js
jnp
aas
jnp
jnp
jnp
repnz
mov
jno
jo
jp
jo
ja
xor
jae
jae
jae
scas
and
mov
adc
clc
ljmp
xchg
into
mov
jg
adc
add
jle
push
cld
out
adc
jns
jns
jns
js
cmp
js
js
lock
jl
cmpsb
js
outsl
cli
lcall
jnp
push
jnp
xor
mov
add
jp
jp
jp
jp
inc
jne
jmp
aas
jne
test
je
je
je
shlb
cwtl
je
jo
loop
pop
mov
pop
ja
clc
ja
jbe
jbe
ljmp
mov
in
sti
jbe
jbe
adc
jnp
or
jno
xor
std
mov
shl
jno
jno
jno
jno
stos
jo
add
std
call
mov
jge
jge
icebp
jl
jl
jl
inc
pop
outsb
adc
je
mov
jg
jg
jg
outsl
jle
jle
jle
jle
aam
out
lock
mov
xor
sbb
inc
mov
jp
sti
call
ror
jp
jp
jp
jp
cmp
nop
or
jp
and
cld
push
jg
jp
jne
jne
jp
jne
jne
jne
and
inc
pop
mov
arpl
ja
ja
adc
aaa
adc
push
push
jne
push
jo
lret
jno
mov
push
push
pushl
jae
inc
jb
jb
jb
adc
mov
and
push
sbb
jge
jge
jge
ss
adc
jge
lcall
push
xlat
sub
push
jnp
jnp
lcall
jp
fs
jne
jne
jne
jne
adc
jne
lcall
cld
bnd
inc
jbe
jno
jo
nop
add
cs
mov
jo
jb
jb
jb
mov
jb
jb
jb
test
jb
jb
jo
call
mov
inc
jge
xor
jge
lock
sub
cmp
jl
jg
add
sbb
jle
jle
and
js
js
nop
ljmp
cmpl
add
sub
fdivl
ja
adc
hlt
pop
loopne
jbe
mov
dec
jno
add
and
aam
jae
inc
sbb
xchg
out
inc
xchg
jl
jg
jg
lcall
loopne
mov
jle
adc
xor
jp
jne
sahf
ljmp
jne
ja
adc
jbe
rcrb
mov
inc
jo
xchg
rcrl
int3
nop
sbb
inc
or
js
js
jle
test
mov
js
scas
adc
jnp
dec
adc
jnp
incb
add
add
jnp
jnp
addb
jnp
jnp
jp
mov
jp
jp
jne
adc
xorb
pop
insl
jmp
xchg
ja
sub
or
pusha
fcmovb
push
cld
insl
jbe
lret
in
cmpsb
jo
pushl
dec
subb
and
jge
jge
andb
mov
out
je
jl
jg
jg
stos
jg
jg
jle
inc
sbb
xor
adc
or
jp
fsubr
jo
jo
jo
jo
pop
xlat
dec
sub
add
aam
rclb
incl
mov
loopne
push
jns
stc
cmp
mov
mov
je
ja
ja
jo
fwait
mov
ja
in
ja
test
add
divl
mov
jno
xchg
push
sub
sbb
add
ljmp
push
data16
ja
mov
sbb
adc
jae
jae
jae
mov
jb
stos
push
or
jb
jb
jecxz
pop
into
push
cmc
orb
jge
push
sub
jo
dec
jl
adc
mov
repz
mov
and
xor
iret
jg
andb
jg
jg
mov
dec
jg
jg
jg
faddl
jle
mov
jle
jns
jns
or
js
jb
orb
mov
jnp
out
jbe
sbb
xorb
lahf
movsb
movsl
je
je
je
gs
ja
stos
out
ja
lret
ja
ja
ja
pushf
mov
loop
or
fnstenv
loopne
lock
push
ficoms
xlat
jo
jo
jo
jle
loop
mov
ds
jae
adc
pop
cmp
mov
jge
cwtl
xchg
sbbb
pop
test
add
movsb
and
rcrl
jge
jge
adc
pop
mov
jl
jg
cmp
lods
int
mov
and
repz
mov
ss
cmpb
jl
push
std
aaa
jg
jg
jg
jg
sbb
jg
jg
inc
aaa
cmp
dec
jle
clc
mov
fimull
jle
sub
in
lock
jle
push
dec
out
jns
sarb
jns
adc
jns
jns
jns
adc
jns
js
js
outsl
scas
das
mov
jnp
jnp
sub
jp
jne
jne
mov
inc
je
ja
iret
push
je
je
je
je
hlt
inc
ja
shrl
imul
ja
jo
sbb
pop
cmpsb
in
jbe
lcall
neg
jae
jae
loopne
xchg
inc
gs
or
shlb
adc
jg
pusha
sub
mov
jle
rclb
jo
jns
jns
jns
js
js
js
js
add
mov
stc
ja
sbb
jnp
jnp
jnp
jp
jp
jp
push
jp
jp
jp
in
add
jp
or
or
jp
jp
repz
rcll
sub
adc
jp
jp
jp
jg
aaa
jg
jp
jp
jp
fstpt
jp
jp
out
loop
stc
jp
imulb
bnd
jp
shrb
test
cmpsl
jp
jp
adc
sub
jge
jne
pusha
push
jne
jne
mov
mov
or
es
jne
jne
jne
adc
mov
leave
je
lea
je
mov
ja
ljmp
mov
pop
jbe
jbe
add
push
inc
lods
jbe
jbe
das
rorb
mov
ss
mov
sub
xchg
sbb
inc
jmp
aam
xor
cmp
and
pop
icebp
adc
jns
cmp
pusha
jp
je
fnstsw
je
je
je
inc
cmp
je
inc
push
push
jl
jbe
idiv
add
es
ja
ja
rol
rcrb
mov
pop
jbe
neg
xor
adc
and
cmp
adc
lods
call
jbe
shrb
adc
mov
loopne
mov
add
pop
add
aaa
fidivl
adc
pusha
mov
jo
adc
jp
pusha
push
mov
out
pop
lea
fcompl
pop
jae
adc
fs
jae
sub
clc
pushl
add
push
jae
out
shl
mov
pushl
mov
clc
jae
add
cmpsl
jae
in
das
mov
jl
pop
jb
jb
jb
adc
or
sarb
pop
adc
jb
jb
jb
inc
jb
cli
jb
pusha
out
std
fistpl
adc
popa
inc
sub
dec
jge
lock
icebp
ljmp
jg
or
jge
out
std
cmp
jl
cld
decl
mov
sbb
pop
aad
sarl
pop
sbbb
sbb
and
jb
sub
or
jle
cli
scas
clc
out
pusha
jae
jle
add
pusha
push
jns
jns
mov
js
jnp
or
jle
adc
and
les
jnp
out
xor
call
fsubrl
pusha
inc
xchg
jp
and
pusha
jbe
je
fidivs
je
je
je
adc
je
clc
sub
sub
xor
repnz
ja
xchg
mov
pop
jbe
cmpsb
jmp
jne
or
cmp
shll
pusha
sub
and
sbb
jno
jno
jno
jno
mov
rolb
bound
clc
push
popa
add
scas
xor
jge
jge
loopne
ss
jge
sar
decl
or
push
mov
jl
adc
rolb
popf
decl
add
pop
add
add
aad
mov
add
and
pop
std
sbb
inc
mov
or
sti
das
sbb
sbb
repz
out
cli
lods
std
bound
jp
or
sbb
mov
fsqrt
stos
decb
push
mov
les
aaa
ljmp
aad
dec
mov
xchg
in
mov
sti
sbb
jnp
rcrb
ljmp
adc
xchg
mov
add
movsl
mov
arpl
add
fiadds
rolb
ljmp
mov
sub
incb
add
incb
incl
cmp
jno
sbb
mov
cltd
loope
add
cmp
fcompl
std
decl
xchg
pop
pop
jne
add
push
dec
add
push
inc
fisubs
in
cmp
das
rcrb
pusha
test
pop
mov
push
decl
test
rep
mov
rcr
cmp
dec
push
out
lods
cwtl
pop
sbb
lret
jbe
jmp
std
push
xlat
dec
outsb
sub
lods
int
dec
js
inc
popf
shrd
outsl
out
cli
cmc
sbb
ret
clc
push
cmpsb
mov
mov
or
and
jg
xor
inc
cmpsl
adc
sbb
and
push
insl
push
icebp
jle
hlt
out
add
sub
movsb
rorb
cmp
sub
or
loopne
popf
xchg
add
mov
int
jmp
insb
jnp
inc
sub
movb
lds
pop
not
insb
jl
out
pop
in
and
push
add
add
xor
dec
rcl
xchg
inc
aad
dec
xchg
xor
mov
inc
jg
or
mov
rorb
or
outsb
or
jecxz
or
mov
sub
inc
xchg
shlb
or
lods
cmpl
pop
call
test
cmp
es
jg
add
ss
fwait
dec
rorb
loop
out
mov
pop
movsb
xchg
xor
inc
dec
xor
sub
lahf
xorl
dec
sar
decl
add
xchg
test
call
orb
push
test
xor
jo
cmp
das
incl
daa
add
push
mov
out
and
test
das
or
mov
int
icebp
addb
add
cmpsb
mov
cmpsb
cltd
jb
fwait
mov
mov
out
and
fs
imul
inc
js
push
insb
gs
inc
fs
mov
imul
arpl
gs
je
outsl
outsb
dec
popa
outsb
cmp
fstp
mov
je
xor
imul
push
dec
jnp
insb
mov
push
gs
imul
jb
jo
inc
lods
jge
jae
gs
push
jns
inc
gs
je
imul
jo
outsb
outsw
add
mov
sbb
jge
inc
pop
popa
cmc
fisubrl
ficoml
scas
popa
pop
xor
outsl
out
inc
pop
dec
popa
jae
dec
jne
js
lock
adc
insb
shll
jns
sbb
imul
inc
push
aas
lahf
popa
push
adc
pop
inc
dec
adc
pop
mov
inc
lea
mov
in
jae
xchg
ret
adc
dec
pop
adc
and
stc
inc
sub
push
add
mov
nop
sub
add
or
ret
push
mov
ja
inc
cmp
xchg
cmc
shrl
shll
cmpsl
sbb
push
sbb
fisubrl
call
fadds
or
or
push
or
sub
push
mov
std
inc
sub
push
out
push
lds
aad
scas
mov
popa
add
inc
jmp
add
push
or
les
or
or
inc
cmp
inc
rcrl
in
enter
dec
outsb
imul
sbb
push
add
lahf
insb
or
arpl
imul
call
imul
data16
imul
mov
add
pop
je
pop
push
outsl
adc
jmp
rcll
popa
jecxz
jb
fnstcw
imul
and
arpl
and
xchg
jle
mov
sbb
jnp
jae
in
xor
adc
outsl
xchg
inc
lock
fst
je
out
insb
mov
loope
push
inc
enter
inc
pusha
jg
inc
popa
jo
aam
movsb
sub
mov
push
add
jne
jns
push
xchg
add
xor
andb
in
xor
xchg
subl
jo
push
leave
inc
pop
mov
dec
jo
push
jns
sbb
mov
popa
out
xor
jo
jae
inc
adcl
add
fstpt
or
inc
add
subb
int3
jb
sub
fsubrl
lods
mov
je
imul
push
fildl
fadds
push
sbb
loop
add
ret
daa
call
imul
stos
add
mov
fisttpll
pop
or
jb
xchg
test
call
mov
fstpl
shlb
or
or
push
sbb
pop
imul
fcom
inc
outsb
int
gs
mov
lods
push
dec
pop
xor
cmp
sbb
lods
scas
scas
inc
inc
push
imul
cmp
lock
adc
dec
mov
notb
dec
inc
adc
in
sub
inc
rcll
inc
add
xchg
pop
pop
sti
stos
and
testb
imul
fidivrs
insb
xlat
push
xchg
shll
push
pop
pop
std
push
lods
mov
or
lea
sub
push
test
xor
add
loope
xor
notl
stos
add
cmp
add
push
cwtl
ror
in
shrl
mov
bound
add
jb
jecxz
jo
xlat
inc
jne
xchg
sarl
ss
xchg
stos
push
je
pop
push
ret
xchg
or
inc
pusha
stos
add
xchg
cltd
nop
or
sbb
jl
sbb
popa
in
cmp
adc
push
inc
bound
and
sbbl
scas
das
punpcklbw
and
stos
jmp
and
push
movsb
fwait
pusha
shll
mov
rolb
test
insl
in
pop
adc
dec
cmc
ret
inc
adcl
imul
lock
inc
xchg
in
add
pop
pusha
mov
subb
shrb
stos
setge
imull
mov
and
cmpsl
mov
inc
leave
lret
lcall
imul
test
mov
cmp
test
jnp
stos
aam
and
xor
rcr
out
adcb
sub
push
mov
movsl
xchg
jns
add
daa
loope
adc
outsl
jo
xorb
or
push
loopne
insl
push
pop
stos
lds
adc
xchg
mov
mov
jae
add
popa
mov
inc
dec
inc
insl
xlat
and
push
int3
pop
fcompl
cmpsl
repz
pop
pop
movl
jno
or
push
movsb
or
sub
push
outsb
ja
fs
push
xor
bound
pop
ja
insb
jmp
inc
add
adc
push
pop
xchg
adc
inc
push
sub
pop
add
and
or
push
test
shrl
and
dec
test
xor
xchg
jns
push
sub
dec
xchg
xchg
cmp
aaa
inc
rorl
arpl
jl
pop
lds
arpl
adc
test
push
insl
rol
int
shrl
xor
or
jno
jne
and
xor
andb
test
mov
and
pop
roll
push
js
add
sub
mov
orl
push
add
insb
add
imul
mov
inc
inc
pop
add
bswap
mov
cmp
cmp
lods
lods
jge
repz
push
pop
shr
add
fiadds
scas
push
push
add
xchg
orl
mov
xchg
rcrl
outsb
dec
push
push
leave
repz
push
add
sahf
rolb
sahf
xor
dec
sub
jb
jb
daa
sub
pop
xchg
psubb
xchg
test
ficoms
jae
cmp
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
sub
add
popa
add
in
add
add
add
mov
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
filds
add
sub
add
filds
aas
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
push
add
insb
add
popa
add
add
push
add
jb
jae
imul
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
inc
add
xor
xor
xor
xor
and
inc
add
jb
add
add
add
jb
popa
add
jns
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
add
dec
add
bound
add
sahf
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
bound
add
add
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
xor
dec
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
xor
dec
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
jne
imul
and
inc
add
je
add
add
add
sub
and
xor
xor
and
dec
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
stc
push
test
in
mov
ret
out
mov
stos
push
lds
pusha
data16
fs
cmpsl
cli
mov
xor
jmp
repnz
jno
sub
lds
cmpsl
lods
jge
test
and
sub
scas
adc
push
mov
adc
lods
mov
loop
pusha
mov
sbb
mov
out
pop
in
mov
jne
cs
nop
push
adc
push
vcvttpd2qq
jae
pushf
mov
xorl
lea
add
push
dec
repnz
dec
cmpsl
xchg
jo
mov
mov
or
scas
rorl
mov
xor
push
lock
cltd
imul
pop
arpl
bound
mov
xchg
sub
test
pop
dec
test
sbb
cmp
inc
dec
jg
mov
pop
push
ss
push
pushf
jne
push
ret
xchg
mov
insl
jecxz
fnstsw
jne
lods
clc
push
xchg
dec
lret
pop
jo
push
inc
cwtl
adc
repz
jo
lods
cld
sbb
mov
mov
or
roll
jg
mov
divb
icebp
lods
adc
movsb
jge
push
pop
or
cltd
in
jnp
roll
push
cmpsl
cld
pusha
mov
fxch
push
sahf
mov
lock
mov
mov
ds
iret
or
sub
inc
or
sbb
inc
stos
sti
mov
jl
jno
inc
fwait
cmp
pop
or
sbb
out
inc
pop
clc
sub
and
nop
fsqrt
or
test
rol
mov
jmp
aaa
cli
imul
sbb
dec
imul
push
jae
or
sbb
cmpb
mov
fsub
pusha
cld
test
xchg
jne
int3
out
fsubrp
shlb
stc
mov
dec
or
fwait
mov
aad
mov
in
sahf
xchg
jle
mov
xchg
xor
and
gs
add
xor
cmp
adc
cmp
cmp
cmp
dec
lret
pop
lret
push
cmp
js
cmp
xchg
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
