lcall
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
in
push
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
push
pop
cmp
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
.byte
and
add
ljmp
add
and
add
and
add
and
add
and
add
and
add
add
je
add
sbb
add
and
add
and
add
add
andb
add
and
add
and
add
and
add
add
add
add
outsb
and
add
add
nop
and
add
and
add
and
add
add
in
and
add
add
and
add
add
mov
and
add
add
add
add
sub
add
jo
add
push
and
add
add
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
and
add
add
je
add
sbb
add
and
add
and
add
add
andb
add
and
add
and
add
and
add
add
add
add
outsb
and
add
add
nop
and
add
and
add
and
add
add
in
and
add
add
and
add
add
mov
and
add
add
add
add
sub
add
jo
add
push
and
add
add
add
add
add
fs
imul
add
push
push
je
imul
inc
add
dec
add
insb
outsb
inc
add
out
inc
gs
imul
bound
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
popa
jo
jb
add
rolb
dec
gs
jo
gs
jb
jns
data16
je
je
dec
popa
outsb
fs
add
repnz
imul
jb
je
arpl
add
aad
inc
gs
gs
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
jge
dec
jo
outsb
dec
jne
gs
add
dec
add
popa
insb
dec
outsl
arpl
xchg
add
je
jne
jb
outsb
je
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
insl
gs
insb
outsl
jae
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
xor
jae
push
push
popa
je
add
jl
inc
gs
push
gs
dec
gs
imul
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
xor
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
push
arpl
add
inc
gs
push
gs
inc
js
outsb
je
add
add
ja
push
popa
arpl
jb
jne
add
add
ja
push
fs
inc
gs
imul
gs
add
jns
inc
gs
push
jns
push
imul
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
inc
gs
jbe
imul
imul
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
lcall
jg
add
add
xchg
xchg
add
mov
inc
mov
lret
int3
int3
int3
rcl
in
rcl
shl
iret
rcl
hlt
int
int3
hlt
leave
enter
enter
in
mov
mov
lods
lods
lods
lea
fwait
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
leave
leave
leave
not
rcl
cld
fcom
std
xlat
fcom
xlat
aam
dec
ror
dec
into
int
aad
aad
rcl
sar
ret
std
mov
mov
scas
iret
movsl
mov
xchg
das
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
sbb
mov
jnp
mov
sar
lret
lret
ror
sar
aad
aam
fcom
fdivr
xlat
fdivr
aam
int
into
dec
into
int
aad
aad
int3
into
into
inc
sarl
mov
scas
scas
std
cmpsl
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int
call
rcl
call
fdivr
xlat
call
aam
dec
int3
into
dec
leave
lret
dec
int
inc
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
fs
ds
push
sbb
movntps
push
sbb
cmp
ss
cmp
sub
and
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
enter
rcl
iret
call
aam
call
aam
call
ror
dec
mov
inc
mov
mov
lods
scas
scas
jmp
sahf
pushf
cwtl
cwtl
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jl
jge
jle
jno
jb
arpl
mov
cmp
cmp
pop
pop
pop
stos
outsl
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
leave
lret
leave
lret
inc
enter
ret
mov
mov
scas
scas
scas
jmp
lcall
xchg
xchg
xchg
cwtl
xchg
cwtl
fwait
lcall
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsl
add
pop
or
pusha
mov
incb
jp
jp
jnp
outsl
outsb
outsl
out
pushw
data16
jae
jle
jge
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
nop
xchg
incl
addl
xchg
xchg
xchg
mov
mov
cwtl
mov
jp
jp
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
fwait
popf
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
addl
xchg
push
cmp
ss
jg
cmp
movsl
movsb
movsb
shrb
lods
lods
sti
lods
stos
lods
stos
lods
lods
test
test
std
fwait
fwait
fwait
xchg
xchg
xchg
decl
jg
js
js
jp
jns
mov
xchg
movsl
movsl
movsl
mov
mov
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
push
push
push
push
or
inc
dec
insb
insb
insb
jl
xchg
leave
fwait
fwait
cltd
fistps
fwait
cltd
stc
xchg
nop
std
mov
decl
mov
lcall
cmpsb
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
scas
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
pushf
sahf
std
movsb
movsb
movsl
stc
mov
xchg
xchg
in
xchg
xchg
in
xchg
jne
prefetchw
add
or
sub
sub
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
mov
call
sahf
sahf
jmp
test
pushl
cmpsl
scas
mov
xchg
test
std
ret
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
pushf
decl
mov
xchg
nop
xchg
call
xchg
xchg
popf
popf
sahf
movsb
mov
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jb
mov
lahf
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
push
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
lods
stos
mov
mov
add
shll
xchg
xchg
jge
mov
ljmp
sahf
decl
call
xchg
xchg
call
cwtl
lcall
lahf
mov
mov
stc
cltd
cwtl
fwait
out
xchg
xchg
xchg
xchg
les
fwait
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
jae
lcall
jmp
inc
jge
mov
jns
mov
jae
mov
outsb
ljmp
pcmpgtw
lods
or
or
mov
jg
mov
mov
stos
pushf
movsl
movsb
movsb
and
add
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
pushf
lcall
xchg
xchg
call
cwtl
xchg
call
xchg
fwait
cld
cwtl
cltd
sahf
stc
mov
xchg
popf
cld
pushf
mov
xchg
insb
mov
xchg
push
jge
xchg
dec
js
lcall
sahf
pop
push
jmp
adc
adc
stos
adc
lods
adc
lods
adc
mov
imul
mov
insl
mov
lcall
lods
scas
lods
scas
movsl
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
popf
popf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
mov
xchg
xchg
js
fwait
jb
cltd
bound
call
sub
decl
pop
decl
add
call
pop
jmp
adc
lods
sbb
pushl
sbb
outsb
mov
and
and
mov
aas
cmp
xchg
lods
mov
scas
lods
mov
lahf
mov
movsl
add
pop
pop
adc
lods
mov
mov
cwtl
sahf
lcall
movsb
movsb
jmp
test
ljmp
test
lcall
jle
decl
inc
jno
mov
push
mov
decl
adc
incl
push
push
incl
add
lea
push
decl
add
lcall
ljmp
push
outsl
pushl
sub
mov
sub
sub
inc
sub
inc
xor
dec
inc
mov
lea
cld
scas
mov
lret
mov
add
add
add
add
lods
movsb
test
push
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
stos
pushl
scas
scas
jmp
jo
decl
push
push
incl
or
test
incl
add
add
xchg
push
decl
add
xchg
add
cltd
add
mov
add
scas
adc
mov
aaa
cmp
aaa
test
enter
lret
cmp
call
cmp
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
lcall
scas
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
popa
incl
mulps
xchg
push
incl
or
xchg
incl
add
popl
pop
call
pop
jmp
add
stos
add
mov
jb
ret
dec
inc
dec
inc
call
inc
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fsts
call
xchg
mov
mov
mov
sahf
mov
add
dec
dec
adc
jp
movsb
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
mov
outsl
decl
sbb
call
adc
pop
decl
add
nop
add
xchg
add
sahf
add
mov
add
stos
add
mov
arpl
shll
dec
dec
nop
call
push
cltd
call
push
fwait
fsts
fstpl
fistps
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
cmpsb
jne
mov
sahf
add
inc
inc
adc
ja
sahf
lcall
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
xchg
pop
call
and
xchg
pop
arpl
xchg
sbb
nop
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
jmp
mov
jmp
cmpsl
jmp
cmpsl
jmp
data16
jmp
push
test
dec
mov
mov
mov
sahf
mov
add
add
add
inc
aas
adc
jae
fwait
xchg
cwtl
call
sahf
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
das
outsl
lcall
sub
xchg
pop
callw
add
cltd
add
mov
add
stos
add
mov
pushw
adc
rolb
jmp
outsb
lods
jmp
jno
jmp
jb
jmp
jae
in
jne
out
je
in
je
out
jb
jmp
mov
mov
test
lcall
lahf
add
jle
cmp
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
outsl
jmp
aaa
jne
sahf
xor
cltd
push
call
add
sahf
add
movsb
add
add
mov
arpl
mov
fs
mov
sbb
fsts
jmp
jbe
call
jle
in
xorl
push
test
hlt
test
call
mov
inc
mov
test
popf
pushf
sahf
daa
lahf
lahf
lahf
add
add
add
popa
add
ss
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
ret
mov
mov
mov
cmp
inc
jl
mov
cmp
lcall
lcall
add
test
popa
ljmp
add
add
ret
call
and
mov
jmp
mov
push
pop
push
pop
push
xchg
sar
xchg
ret
push
xchg
stc
xchg
pop
in
mov
inc
lods
stos
mov
popf
pushf
xor
pushf
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
ret
ret
mov
jle
lcall
dec
cmp
dec
test
movsl
xor
pusha
lcall
add
add
stos
add
mov
fs
mov
add
movl
out
xchg
push
fwait
enter
lcall
negl
cld
popf
int3
cld
popf
int
cli
cltd
lret
xchg
ret
fbstp
cli
mov
mov
mov
xchg
nop
add
add
add
das
das
or
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
vshufps
leave
inc
mov
mov
ljmp
mov
movsl
sub
cltd
or
sahf
add
movsl
add
lods
add
mov
popa
mov
add
leave
add
or
inc
xchg
out
mov
push
cmpsb
int3
push
movsl
int
stc
cmpsl
into
cli
cmpsl
sar
cld
cmpsl
sar
cld
test
stos
sar
std
stos
sar
cld
test
push
sahf
jmp
mov
int3
std
mov
mov
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
inc
bound
pop
xlat
jae
jb
mov
rol
rol
mov
ret
ret
enter
ret
pushl
push
xchg
scas
push
mov
lods
dec
xchg
mov
add
mov
add
mov
fs
mov
add
int
outsl
call
add
adc
out
pop
test
cmc
lahf
lret
sti
lods
sar
cli
scas
aam
cli
scas
aam
sti
mov
mov
mov
cld
mov
mov
pushl
sar
mulb
call
leave
int3
mov
mov
sahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
push
add
dec
dec
outsl
outsb
outsl
mov
mov
aam
xlat
jmp
xlat
xlat
not
rcl
std
lret
dec
lret
lret
dec
lret
leave
enter
lods
jmp
push
mov
lods
jge,pt
lahf
or
pop
ljmp
add
mov
add
roll
outsl
call
add
add
push
xchg
divl
cli
scas
sar
std
mov
cld
mov
fdivr
cld
mov
std
mov
fdivr
std
rcr
mov
int3
jmp
mov
call
lret
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
enter
jecxz
call
call
jecxz
fucom
fcmovnu
fsqrt
aam
std
into
ror
mov
imul
jmp
add
mov
popa
mov
add
leave
add
add
fildl
jbe
jecxz
jbe
in
xor
cli
mov
loopne
inc
std
inc
std
dec
loopne
std
std
leave
loopne
inc
fdivrp
dec
cli
mov
lret
lret
into
mov
mov
xchg
adc
add
add
std
add
std
incl
std
std
add
div
or
out
jmp
in
out
out
sub
out
in
dec
jmp
jmp
jmp
aad
fstp
jmp
mov
xchg
test
js
movsl
push
jmpw
add
mov
arpl
mov
add
int3
add
fadds
jae
filds
jbe
jmp
inc
fwait
cld
mov
in
std
int3
in
dec
in
dec
in
dec
loop
dec
jecxz
std
into
loopne
dec
in
std
iret
loop
call
jecxz
call
in
cld
in
mov
fdivr
cmpsb
cmpsl
cmpsb
mov
xchg
xchg
add
add
add
std
add
std
add
stc
testb
hlt
icebp
add
repnz
in
lock
pop
out
icebp
out
cmp
out
in
pop
loopne
loopne
les
xchg
sti
sahf
and
pop
jmp
add
mov
inc
add
enter
roll
jb
fildl
jne
in
jnp
jmp
jl
negb
cli
mov
cld
iret
out
shl
call
call
std
shl
std
aam
call
call
std
fucomi
std
fldl2e
std
shl
push
aam
in
lret
lret
test
xchg
xchg
and
cwtl
xchg
add
cli
add
stc
add
cld
clc
add
div
or
aad
xor
jae
negb
add
add
scas
add
mov
add
lret
add
roll
jo
fldl
jbe
call
sbb
cli
xlat
jmp
fldpi
std
fucomi
fucomp
std
fsubr
std
fsubr
fucomip
fucomip
fsubrp
cld
aam
push
jmp
aam
call
ror
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loop
add
leave
sbb
lods
jnp
repnz
pop
lcall
jmp
add
mov
add
int
outsl
call
add
filds
jae
jmp
sub
std
aam
std
fsubrp
fucomp
std
fldpi
fldl2e
fsub
std
jecxz
cld
shl
sti
iret
loope
sti
shl
stc
into
test
aad
in
mov
xlat
xlat
fdivr
mov
mov
lcall
add
add
add
xlat
xlat
add
rol
lods
mov
jmp
add
mov
fs
mov
add
iret
add
xlat
add
loopne
jp
call
xor
cli
enter
int3
loope
sti
stc
mov
aam
repnz
sar
icebp
mov
int3
call
mov
sar
ljmp
imul
fsub
cmc
fsubrp
mov
mov
xchg
add
add
add
into
lret
add
rol
mov
movsl
loopne
ss
mov
add
mov
gs
mov
add
dec
or
rorb
jne
fistl
jns
loop
cmp
dec
xchg
jmp
mov
ljmp
std
loopne
scas
ret
cli
fstpt
lock
int
fcmovne
iret
fsubp
iret
xlat
shl
xlat
fcmovb
out
loope
in
in
test
out
out
popf
ljmp
push
stos
stos
stos
adc
test
cmpsb
add
ret
mov
lahf
stos
aam
dec
jg
pushf
sbb
cmpsb
push
push
scas
and
jns
mov
inc
test
ret
push
mov
lret
test
mov
out
mov
enter
enter
lret
rcl
int3
mov
int
mov
xlat
aam
jg
fcmovnu
jb
gs
in
out
jmp
xor
div
mull
icebp
lock
fstp
or
mov
int
mov
add
mov
mov
roll
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
test
mov
pushf
lret
mov
enter
int3
shlb
rcl
push
rcl
rorb
inc
aam
xor
fcmovbe
daa
fcompl
fcmovu
ficoms
fucom
loope
loopne
jecxz
out
ljmp
cld
testl
incb
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
xor
int3
leave
daa
int
shlb
iret
aam
sbb
aam
adc
aad
or
xlat
push
rcr
fadds
fcmovnu
add
loopne
add
in
add
in
jmp
add
incl
mov
mov
add
rol
ret
sub
ret
les
mov
mov
push
rol
or
enter
enter
lret
aad
add
aam
rcl
aam
aad
aad
aad
add
fabs
add
flds
loope
fiadds
jecxz
call
add
incl
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
les
mov
mov
ja
stos
test
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
rol
mov
ror
iret
jmp
rcl
cmc
aam
aam
iret
into
iret
cli
int3
int3
int3
stc
lret
hlt
mov
mov
iret
stos
stos
stos
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
into
into
xlat
aad
xlat
call
rcl
dec
iret
iret
dec
lret
mov
mov
lods
icebp
cltd
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
je
jae
gs
dec
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
dec
int3
int3
call
rcl
call
rcl
dec
lret
lret
sarl
ljmp
sahf
sahf
xchg
xchg
xchg
jmp
outsl
jo
adc
add
xor
add
add
add
add
addb
test
jns
push
imul
push
push
stos
push
imul
aaa
cmp
pop
jo
jo
scas
mov
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
lcall
popf
cwtl
lcall
addl
jmp
js
sarb
jp
jp
jp
je
je
push
push
push
cmp
je
pushf
pushf
pushf
mov
scas
scas
repz
lods
lods
sti
scas
lods
scas
std
test
sahf
sahf
call
test
call
mov
lods
jmp
lods
scas
leave
movsb
movsb
cmpsb
cltd
je
jae
adc
adc
add
add
add
add
insl
insl
insl
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
cltd
lcall
std
lea
call
sahf
lahf
ljmp
stos
scas
std
mov
scas
mov
xlat
movsl
mov
jg
pusha
popa
popa
or
lods
mov
cmpsl
mov
mov
mov
mov
xchg
cwtl
xchg
std
popf
lahf
mov
negl
cmpb
push
push
jo
pop
pop
outsl
insb
insl
outsl
xchg
subb
xchg
lock
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cwtl
fwait
fwait
pushf
pushf
pushf
lahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jl
movsb
inc
js
scas
xor
jae
mov
insl
pushl
sbb
mov
mov
mov
scas
scas
jle
mov
add
add
add
popa
popa
pusha
or
mov
in
movsb
test
cwtl
cwtl
cwtl
lcall
mov
lahf
call
mov
xchg
jns
std
xchg
jno
cld
cwtl
popa
cmp
dec
jp
cmp
xchg
daa
imul
xchg
punpcklbw
mov
pop
push
pushl
sbb
mov
and
mov
test
lods
xchg
lahf
popf
sahf
adc
add
add
pop
popa
popa
or
stos
mov
test
mov
cmpsb
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
call
add
cmpsl
or
mov
jb
mov
das
jl
les
jge
leave
das
cmp
lret
inc
test
divl
cmpsl
test
pop
popa
pusha
or
cmpsb
test
test
cmpsl
ljmp
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
push
decl
add
mov
add
mov
outsb
inc
ss
lret
dec
inc
mov
aam
call
inc
nop
fmuls
call
arpl
stc
mov
mov
movsb
movsb
movsl
daa
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
stos
lcall
sbb
decl
or
push
call
pop
jmp
add
mov
dec
xchg
fcomps
fistpl
jmp
pop
lahf
jmp
pop
mov
fildll
lret
test
cld
mov
mov
cmpsl
stos
cmpsb
xor
add
add
dec
pop
jge
jl
pushf
cwtl
lcall
scas
mov
mov
mov
mov
mov
mov
sahf
gs
xchg
sub
imul
and
xchg
push
pop
call
add
add
mov
arpl
mov
addr16
xor
jmp
insl
test
in
stos
jmp
jo
in
jno
jmp
jns
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
outsb
outsl
push
mov
xchg
ljmp
mov
mov
mov
jbe
lcall
jne
sahf
sub
call
add
mov
add
mov
inc
or
inc
xchg
jmp
jns
jmp
mov
out
test
push
xchg
out
xchg
mov
cmpsl
test
cltd
cltd
cltd
add
sub
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
mov
xchg
cmpsl
inc
cmp
lcall
ljmp
add
mov
adc
mov
push
xchg
ret
push
cwtl
push
xchg
enter
lret
fwait
lret
clc
xchg
jmp
stos
mov
stos
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
xchg
test
cmpsl
push
mov
stos
dec
cmp
pop
insb
lcall
add
mov
arpl
mov
add
fsubs
cmp
jp
push
movsb
int3
clc
test
iret
sti
stos
sar
sti
stos
sar
std
stos
sar
sti
cmpsb
int3
jmp
mov
dec
rol
test
sahf
pushf
or
add
add
dec
push
dec
aaa
jb
jb
stos
test
int3
out
into
int3
cmc
lret
lret
leave
lret
leave
std
leave
mov
popa
mov
stos
inc
cmp
adc
cmpsl
add
mov
arpl
ret
dec
add
flds
call
xchg
cld
mov
cld
mov
fdivr
std
mov
fdivr
std
mov
sar
jmp
leave
dec
ret
mov
lods
mov
add
add
add
add
pop
or
rcl
dec
jecxz
loopne
fcmovnu
fcmovnb
fcmovnu
fcmovu
aam
xlat
out
mov
gs
test
or
mov
arpl
mov
add
add
in
jp
repnz
mov
std
ret
loope
std
loope
dec
loopne
inc
loopne
dec
fdivrp
dec
loopne
sti
lock
lret
divb
sahf
pushf
sbb
add
add
incb
std
std
add
jmp
in
sbb
in
in
xor
loopne
in
lds
mov
mov
add
pushl
add
iret
add
fildl
jbe
call
insb
mov
std
cld
iret
out
call
out
std
shl
aam
std
call
std
shl
push
fcos
fcmove
sar
mov
mov
mov
add
add
std
add
std
add
std
incb
aam
push
mov
pop
xchg
lahf
or
stos
add
mov
gs
add
rolb
outsl
filds
jne
in
and
shl
std
fldl2e
fsubr
fsubr
fsubr
sti
xlat
out
std
fsubr
sti
aad
push
jmp
rcl
sti
mov
sahf
lahf
das
add
add
int
into
or
bound
ljmp
gs
add
aad
jb
loop
ja
out
xor
cli
int
stc
lret
cmc
repz
xlat
bnd
aad
lock
sar
in
sar
in
ljmp
ljmp
stos
das
incl
aad
mov
jb
or
mov
insl
inc
sbb
int
jl
aad
xchg
loopne
lcall
mov
out
in
lret
jmp
fdivrl
leave
loopne
sarl
jecxz
ficompl
in
call
rorl
mov
add
stos
stos
lods
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
stos
mov
mov
les
rol
int
aad
iret
pop
aam
rorb
xlat
xlat
cmp
loopne
das
in
frstor
in
icebp
adc
jmp
or
std
add
add
add
std
add
mov
outsb
scas
mov
lods
data16
mov
mov
mov
ret
enter
aam
pop
rol
adc
rcl
or
loope
or
into
int3
add
std
incb
incl
fwait
fwait
lcall
lds
int3
int3
int3
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
ret
enter
leave
enter
enter
ret
sarl
scas
scas
insb
stos
lods
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
iret
into
iret
std
stc
mov
cmpsl
cmpsl
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jb
jae
push
inc
inc
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
int3
call
rcl
dec
into
iret
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
jae
jne
xchg
aad
outsl
outsl
ret
popa
mov
push
outsb
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jb
es
add
add
add
je
jae
pushf
xchg
pushf
mov
test
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
mov
test
mov
mov
xchg
xchg
xchg
cld
popf
sahf
pushf
cmc
cltd
cwtl
cwtl
in
addl
imul
jge
nop
aam
mov
fwait
mov
pushl
imul
call
stos
lods
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
lcall
cwtl
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
bound
std
fwait
inc
ja
cmpsb
cmp
scas
sub
pushl
sbb
ss
mov
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
lahf
popf
lahf
jmp
cmpsb
call
push
ja
xchg
inc
je
mov
imul
nop
adc
xchg
or
mov
push
outsb
pushl
and
jns
les
mov
scas
mov
stos
test
add
xorl
test
test
cmpsb
ljmp
mov
lcall
sub
decl
or
xchg
push
decl
pop
jmp
adc
shlb
lret
call
inc
mov
aam
call
push
xchg
dec
lcall
movsl
mov
add
push
xchg
xchg
test
lahf
mov
pushl
mov
movsb
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsw
call
lcall
cmpsl
cmpsl
test
add
add
arpl
adc
pushf
lcall
mov
mov
mov
popf
dec
jge
pushf
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
jp
push
jl
out
jg
fstps
mov
mov
add
add
adc
addr16
mov
mov
mov
mov
rol
mov
fs
movsl
inc
jge
mov
add
add
mov
arpl
les
insl
fisttpl
in
lea
push
xchg
push
xchg
leave
clc
xchg
jmp
movsl
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
cld
ret
inc
ret
inc
mov
xchg
ljmp
pop
jmp
pushl
add
aam
js
ljmp
cli
stos
sar
cld
lods
sar
std
scas
sar
std
lods
iret
in
scas
leave
inc
mov
movsl
ds
std
incl
xor
jno
inc
mov
mov
rcl
mov
aam
fnop
rcl
out
lret
leave
lret
cli
mov
mov
jmp
add
ret
call
add
out
xchg
stc
nop
mov
fdivr
cld
rcr
std
ret
inc
fcos
icebp
mov
ret
in
test
dec
addb
add
in
or
jmp
out
outsb
fcmovu
fisubl
movsl
and
pusha
mov
add
add
lock
xchg
sti
scas
aad
dec
out
std
shl
std
shl
call
in
std
aam
push
leave
fcos
aam
into
in
scas
lods
scas
popa
addb
add
incl
std
std
incl
lret
int
sub
lahf
sbb
lods
add
mov
add
jecxz
jns
repz
cmpsl
cld
loope
std
jmp
std
aam
sti
aad
cli
aam
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
les
mov
add
push
iret
or
cmp
out
mov
shl
jmp
rcl
jmp
lret
ljmp
scas
push
fwait
cltd
cltd
add
rol
or
sahf
lods
xchg
and
push
mov
shll
jbe
mov
mov
lret
adc
int
xlat
int3
into
pop
aad
jecxz
loope
out
out
in
in
out
sbb
mov
mov
cmp
mov
lods
push
mov
mov
ret
and
ror
fisttps
into
int
or
aam
push
std
std
add
incl
lods
std
add
rol
std
std
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
mov
aaa
lahf
jmp
idivl
popf
jg
in
aas
inc
popa
nop
pop
inc
inc
mov
jns
add
mov
addr16
cltd
daa
sbb
xor
jb
outsl
xchg
std
fistps
ret
adc
xchg
ror
xchg
inc
pop
mov
cmp
aas
dec
push
pop
sub
adc
push
mov
shrl
outsb
xchg
iret
or
mov
popf
mov
pop
and
enter
mov
test
cmp
sub
cltd
mov
jg
test
add
leave
adc
or
push
or
loopne
sbb
dec
lretw
add
test
lock
hlt
push
ficompl
push
inc
and
xchg
lods
andb
pop
hlt
and
in
and
int3
sahf
movsl
inc
jne
imul
clc
mov
mov
push
loope
dec
pop
data16
inc
pop
in
popf
sbb
adc
push
mov
xchg
push
pop
dec
mov
mov
ds
jmp
lcall
jmp
dec
xor
cwtl
jecxz
push
dec
arpl
cmp
add
xor
inc
insl
lods
sub
push
movsl
shrl
je
sub
pop
jecxz
sar
adcl
cwtl
mov
pop
push
daa
mov
stc
and
adc
hlt
and
ret
sbb
pop
aad
in
call
je
dec
push
addr16
lds
shl
ljmp
addb
fadds
push
jns
push
mov
cmpb
xor
and
in
ffree
popa
loop
jp
or
fisubl
fildl
cmpsb
insb
ret
sub
fsubs
fs
adc
mov
lds
xchg
xchg
dec
movsl
cs
in
push
push
mov
shlb
add
lret
mov
push
mov
shlb
ja
sbb
enter
xchg
sahf
sub
cld
dec
popa
jle
stc
les
je
aad
and
pop
div
xchg
cmpsl
xor
jnp
mov
xlat
fsubs
pop
aam
pop
add
mov
shl
repz
fsubl
dec
or
nop
or
mov
mov
enter
inc
jno
insl
shlb
mov
pushf
push
test
adc
cwtl
cmp
int3
lods
jmp
es
stos
lods
andl
nop
cld
rclb
loopne
aad
lock
mov
mov
test
int
outsl
orb
xchg
pushf
mov
adc
and
cmp
adc
cli
pop
jnp
push
pop
imul
dec
out
rcll
mov
out
in
and
addr16
add
push
jl
movsl
jns
adcl
and
and
xor
sub
add
lcall
out
aaa
jmp
mov
adcb
fnstcw
in
push
adc
or
sub
loope
stc
add
jmp
pop
pop
icebp
pop
xchg
andb
rcll
fadd
push
pusha
pop
ljmp
sub
inc
inc
rolb
loopne
pop
push
mulb
xchg
jne
int3
jecxz
lret
xchg
rcll
dec
fs
sub
pop
jg
dec
mov
or
push
mov
inc
lcall
or
cmp
es
jge
enter
xchg
pop
sarb
repz
xor
sbb
pop
lret
push
or
xchg
mov
push
add
lods
or
mov
scas
call
hlt
mov
cmp
lcall
sbb
mov
je
mul
jne
cmp
mov
leave
in
mov
sbb
outsb
sbb
push
js
je
mov
lahf
aaa
dec
in
push
mov
mov
aas
xchg
out
mov
cli
loop
push
cmp
mov
shl
pop
sbb
cmp
mov
jp
xor
nop
imul
shll
mov
scas
push
div
cmpsl
test
or
fwait
pop
dec
push
hlt
int3
int3
xchg
xchg
in
mov
inc
fucomi
jb
xchg
push
les
shll
jge
lds
and
push
fcmovnbe
jecxz
rorl
push
adc
sub
inc
push
test
push
std
aad
xchg
lcall
les
xor
mov
pop
bound
xor
iret
mov
adcl
push
add
cld
jl
rcll
mov
test
stos
test
sub
pop
aad
pop
xor
mov
mov
insl
mov
or
out
adc
lds
mov
jns
mov
mov
daa
pop
jo
add
adc
push
aas
mov
add
das
inc
fdivrl
mov
dec
or
xchg
mov
inc
mov
xchg
pop
jg
add
mov
mov
push
gs
insl
xchg
fldln2
xchg
cs
ja
dec
adc
mov
mov
dec
mov
out
jno
lods
push
rcll
scas
shll
shrl
mov
add
fnstcw
dec
jecxz
in
aaa
movsl
pop
das
push
lcall
scas
fstp
sub
ja
add
int3
rolb
test
dec
add
roll
adcb
repnz
sbb
inc
and
cmp
pop
lea
sti
inc
mov
les
inc
push
xchg
aaa
into
pop
test
mov
dec
lods
mov
jbe
xchg
jge
dec
or
into
jnp
mov
clc
repz
cmp
cld
pop
stc
nop
inc
flds
nop
and
add
pop
scas
or
mov
jp
mov
dec
call
or
insb
cmp
pop
mov
pop
hlt
mov
mov
dec
jecxz
hlt
inc
fisubl
inc
popa
clc
js
mov
cwtd
jg
lret
xchg
push
push
mov
clc
push
out
add
in
scas
add
push
mov
push
cmp
sbb
and
mov
sti
pop
push
loop
add
inc
repnz
add
out
mov
or
mov
adc
mov
add
pause
cld
and
test
jl
and
das
xchg
pop
push
call
stos
mov
ret
pop
cmc
cmp
es
jns
inc
pop
lock
add
lret
lds
mov
in
xchg
sub
sbb
dec
jno
pop
repnz
xchg
shrl
mov
out
xchg
adc
movsb
imul
ret
aam
call
or
mov
addr16
pop
pop
adc
mov
das
loopne
mov
in
rcrl
insb
sub
enter
inc
pop
cmp
mov
js
xor
cmpsb
push
mov
xchg
cwtl
lcall
test
lcall
mov
sbb
cmp
outsb
mull
sbb
pop
jge
imul
push
js
pop
or
mov
test
cwtl
fcomps
out
test
cld
lcall
in
stos
mov
into
enter
jae
sub
pop
sar
repz
add
adc
mov
into
mov
add
into
cwtl
and
in
ljmp
or
pop
xchg
sub
mov
inc
jecxz
and
ss
in
test
stos
or
xchg
cld
sub
sub
dec
inc
fidivrs
mov
cld
rcrl
mov
sbbl
mov
loop
mov
lods
xor
mov
jecxz
push
daa
outsl
fildl
jae
inc
pop
scas
jbe
sti
xchg
aas
xchg
xor
mov
jmp
data16
and
xor
fiaddl
out
jg
mov
dec
push
dec
loopne
push
add
pop
jge
fldt
pop
lock
adc
xchg
stos
mov
mov
pop
pop
xacquire
jb
and
adc
and
xor
shr
orl
stos
call
mov
lahf
cmpsl
cmp
sbb
lret
cmp
incb
mov
push
fistps
shlb
jbe
andl
jbe
jg
adcl
sbb
lcall
dec
cs
dec
es
jmp
cmp
test
jae
cld
fs
mov
mov
and
mov
call
sbb
ds
hlt
scas
xchg
xor
movsb
shll
cmpsb
loop
push
aam
push
out
jg
rclb
lcall
out
rclb
or
aam
add
cmpsb
shlb
jge
cmp
les
sub
lods
inc
xlat
out
add
ljmp
jno
popf
pop
sahf
mov
pop
jne
test
pop
sahf
mov
ret
mov
mov
xor
les
std
call
shrl
cli
add
xchg
js
and
lcall
shrb
mov
or
mov
add
leave
pop
in
test
das
xsha256
cmpsb
push
cld
inc
fucomp
icebp
inc
fsubrs
aas
or
push
cli
mov
rcrl
jne
cmpsl
test
repnz
fstpt
ror
inc
lret
bound
jnp
fistps
dec
loope
add
mov
cld
xchg
jbe
add
xor
mov
pop
movsb
cmp
mov
sub
pop
repnz
mov
sub
pop
mov
dec
xchg
ret
pop
mov
push
add
lahf
hlt
sbb
ret
inc
adc
push
lods
and
sub
icebp
cmp
lods
stos
lcall
mov
fidivrs
rolb
jmp
loop
in
imul
mov
inc
xchg
icebp
mov
in
mov
fcompl
mov
popa
clc
rorb
iret
aas
jp
out
scas
pusha
in
test
cmp
jb
inc
fsubl
roll
jmp
imul
sub
push
sbb
jbe
test
fcmovnu
lods
int3
arpl
js
mov
push
mov
test
cs
movsl
pop
in
pop
xrelease
clc
dec
in
mov
jno
or
mov
andps
jge
xor
mov
ret
mov
or
ficoms
pand
jno
out
jns
or
bts
inc
lret
bound
mov
push
pop
xor
nop
daa
sub
dec
loop
lret
fisubrl
das
iret
in
sub
fisubs
jne
call
outsb
icebp
cmp
fwait
xor
adc
adc
xchg
sub
lret
aad
mov
fisubs
mov
mov
push
lods
loope
jno
dec
add
adc
pop
hlt
sub
cltd
outsb
dec
loop
mov
or
ds
push
out
pop
shlb
rcrb
mov
jae
pop
gs
push
loopne
dec
loopne
mov
mov
push
lock
sub
dec
mov
and
ret
pop
xchg
sub
in
push
aad
std
add
cmpsb
cmp
loope
movsb
cmp
lcall
push
test
test
dec
in
sub
sbb
mov
enter
test
pop
sahf
fiaddl
ja
sti
adc
in
xor
imul
fsubrs
ret
cwtl
das
aaa
xor
mov
mov
jl
mov
mov
and
xor
jg
cld
xchg
lock
mov
xchg
stos
inc
subl
pop
movsb
add
cs
pop
lock
pusha
div
leave
jnp
mov
fdiv
mov
mov
out
es
test
xchg
sub
pop
out
pop
xchg
push
in
add
daa
sbb
fcomip
mov
push
in
lret
dec
pop
out
cmp
pop
xor
loope
jo
cltd
popa
xor
mov
repz
decb
add
adc
dec
out
cmp
and
into
gs
fistps
mov
gs
jge
pop
repz
sub
outsb
add
dec
sub
fwait
out
mov
cs
sbb
enter
inc
push
mov
push
xor
subl
mov
jnp
xchg
sar
mov
sbb
mov
cld
xchg
push
bound
mov
mov
xchg
sub
cmp
ret
mov
in
lret
jmp
mov
push
stc
nop
mov
jge
jnp
cmp
bound
add
xchg
sub
cs
cwtl
das
mov
xchg
sub
enter
mov
dec
push
jnp
xchg
in
or
cwtl
cmp
leave
pusha
or
ss
mov
inc
fmul
xor
mov
jle
push
adc
call
leave
and
pop
pop
ljmp
sub
ja
out
fstpt
shl
adc
nop
addb
adc
pop
repnz
jg
cmpsl
data16
jne
sbb
mov
fimull
lret
loop
sub
in
fidivl
mov
push
jmp
rcrl
addb
js
sub
rcrl
jb
or
cmp
dec
outsb
add
mov
sbb
je
fs
stc
push
xchg
scas
clc
sbb
mov
in
pop
scas
jl
fldl
xor
outsl
xchg
sub
and
pushf
xor
xchg
sub
jp
les
enter
insb
add
mov
dec
lock
xchg
test
mov
mov
outsl
push
aaa
inc
movsb
cmp
or
aaa
push
xchg
pop
lds
movsl
outsb
mov
into
fsubrs
jg
clc
mov
push
xchg
jb,pn
pop
mov
add
cmp
mov
add
dec
dec
mov
fnstenv
cwtl
pushf
xor
dec
xchg
jbe
lds
push
in
inc
cmpsb
aad
sbb
or
stos
shlb
or
pop
idivb
fisttps
xor
repnz
scas
stos
add
movsl
cmp
xchg
test
push
lods
sub
pop
jmp
lcall
and
sbb
in
test
insb
add
cmc
data16
es
mov
es
subl
in
inc
cmp
lahf
xchg
cmpb
mov
push
movsb
add
enter
cmp
jmp
fwait
xor
push
movsl
adc
jge
xchg
and
popa
das
mov
test
push
les
dec
jae
push
test
xchg
cmp
pop
push
jmp
add
adc
and
mov
lcall
xchg
add
or
push
hlt
mov
mov
jne
outsl
and
ljmp
adc
adc
rolb
lods
cmp
ja
pusha
pop
ja
mov
in
std
inc
jnp
pop
push
popf
xor
jl
xchg
dec
stos
loopne
add
adc
scas
inc
jl
jmp
xchg
popf
int3
insb
fldl
or
dec
enter
scas
mov
sti
mov
fisubrs
adc
xor
imul
xor
data16
mov
fiadds
pop
or
cwtl
das
movsb
mov
scas
inc
inc
enter
icebp
push
jmp
addb
or
adc
repz
in
cmc
mov
into
gs
mov
mov
mov
cwtl
das
sbbb
fwait
jne
dec
inc
sbb
das
scas
sub
mov
shrb
sbb
add
push
push
mov
push
adc
mov
cmp
jno
inc
add
adc
leave
pusha
data16
mov
insb
adc
insl
fdivs
into
sub
in
test
cmpsl
lret
cmpsb
mov
fcomps
arpl
lret
mov
insb
daa
mov
aad
fbld
into
rcrb
repz
les
or
pop
cmp
mov
or
mov
adc
jne
mov
mov
cld
sub
popf
es
inc
xchg
ljmp
aam
mov
push
cltd
jge
mov
faddl
ja
pop
mov
popa
cmp
into
aam
hlt
rcr
fmull
cmp
nop
mov
sbb
sub
inc
cmp
mov
pop
lret
xchg
push
pop
xor
xor
lret
dec
sahf
je
or
stc
pop
pop
mov
rorb
xchg
pop
push
movsl
je
mov
push
dec
cmpb
xchg
xchg
outsl
pop
lahf
mov
movsl
xchg
add
fdivrs
pop
outsb
mov
mov
sahf
push
fwait
dec
adc
into
fnstcw
xor
out
mov
or
fwait
and
adc
std
jb
dec
adc
mov
popf
xor
adc
fs
shrb
jne
xor
mov
xlat
or
and
xchg
dec
xor
xchg
push
dec
aas
jge,pt
test
jmp
add
lahf
out
daa
pop
aas
out
imul
dec
xor
sti
jp
insl
nop
fwait
sbbb
shrb
addl
dec
out
fwait
add
cmpsl
push
inc
jl
arpl
in
pop
test
jne
jns
stos
xlat
fbstp
push
jge
inc
adc
test
loopne
imul
testb
inc
pop
notb
jl
iret
je
adc
lock
fadd
iret
out
in
ret
aas
lahf
jecxz
cs
loopne
data16
push
out
pop
pushf
xor
enter
es
icebp
jns
cltd
xor
fwait
js
cli
inc
repz
add
add
test
and
xchg
mov
jp
push
cmp
inc
dec
xchg
jmp
and
xchg
addb
jb
insl
add
xchg
pop
out
les
mov
movsb
in
loopne
lds
mov
fcoml
pusha
pop
out
push
fdivs
push
in
movsl
push
or
add
pop
pop
mov
sub
fidivs
bound
push
adc
jecxz
inc
jbe
xor
xchg
sub
cmpsb
mov
insl
add
xchg
movsb
push
add
daa
xchg
and
jo
push
insl
add
jno
push
bound
sub
mov
ret
in
push
add
aas
jne
or
pusha
cmc
mov
mov
shrl
insl
imul
out
into
gs
adcb
mov
scas
inc
mov
mov
stc
lds
cmp
mov
xorb
jmp
aas
inc
fisubrl
iret
pusha
idivl
xchg
lock
cld
aad
out
jecxz
aaa
aam
jns
ss
xor
xor
push
lods
nop
sbb
mov
jne
jg
lea
inc
loopne
dec
ret
or
jecxz
aas
fistps
xchg
data16
jge
xchg
jne
inc
faddl
pop
out
loopne
pop
hlt
jp
sti
xchg
aas
shl
mov
adc
pushf
xor
push
out
rcrb
insl
mov
push
mov
mov
dec
in
or
mov
cmp
dec
lods
and
lret
cmp
xchg
jp
and
xchg
loopne
out
xchg
cmp
ret
xor
in
adc
pop
mov
push
ljmp
testb
lret
daa
mov
push
xchg
sub
jmp
sbb
mov
push
mov
and
push
xor
je
insl
push
adc
pop
ret
mov
sbb
jecxz
dec
jmp
aas
out
and
or
push
out
and
add
stc
rcll
aam
push
enter
or
inc
call
mov
push
iret
insb
mov
and
insl
xor
hlt
mov
cld
or
pop
repz
sub
jg
push
movsl
je
sbb
fisubrs
and
xor
jge
imul
cs
sub
pop
push
stc
jl
loope
sbb
xchg
shlb
frstor
cmc
xchg
decb
mov
ljmp
xchg
fcoms
add
sub
insl
jns
repz
xchg
int3
fwait
imul
out
out
xchg
dec
repz
jbe
pop
adc
fs
dec
fists
xchg
inc
fdivr
xchg
in
and
aam
popa
pusha
testl
jle
dec
or
xchg
imul
inc
mov
roll
bound
lds
cmpsb
xor
cld
adc
dec
int
jnp
outsl
xor
xor
xchg
sub
push
sub
arpl
jecxz
lret
test
xor
aam
cmp
test
add
pop
lahf
cli
aas
lret
inc
out
inc
fmuls
or
xchg
lahf
sub
add
or
mov
push
popf
movsb
sub
jp
lds
rcl
mov
pop
out
mov
xlat
outsb
rcl
pop
sahf
out
mov
leave
pop
jae
xchg
ljmp
out
insl
mov
fimuls
test
cli
xchg
int3
add
xor
push
add
push
loopne
cli
pushl
push
cmp
pop
ljmp
mov
pop
hlt
mov
imul
fsubl
xchg
jns
dec
loope
lcall
into
inc
jnp
push
out
and
mov
lret
lock
enter
xchg
xor
jecxz
sahf
xor
ss
mov
xor
stos
mov
hlt
jl
inc
inc
adc
mov
cmp
les
in
xchg
sub
push
loope
popa
mov
mov
pop
rol
cmpsl
ds
mov
lds
fnstenv
out
pop
sarb
push
in
lds
test
sahf
xchg
mov
and
inc
rcrl
xchg
sub
sti
push
mov
inc
mov
push
and
imul
pop
mov
mov
loope
js
jle
fwait
add
mov
in
mov
pop
scas
inc
dec
jae
and
mov
out
das
lea
pop
not
fnsave
add
pop
hlt
sub
mov
inc
mov
ja
inc
fisubrs
xor
inc
fcoms
aaa
into
clc
vaddpd
in
sub
dec
push
dec
xor
jnp
test
xlat
imul
xlat
pop
xor
fs
mov
and
inc
cmp
xor
xchg
cwtl
push
outsl
push
xchg
ret
cs
lea
adc
lods
inc
cmp
mov
int
xchg
ss
faddl
iret
mov
jae
mov
pushf
cmp
stc
nop
pushf
adc
sub
stos
inc
jmp
icebp
xchg
mov
inc
stos
inc
ficomps
adc
xchg
pop
push
call
inc
push
fstps
push
nop
jns
mov
mov
pop
xor
xchg
sub
pop
mov
adc
scas
xor
rep
cmp
stos
add
test
cmp
jg
rol
pop
out
mov
aad
xchg
sub
iret
shrl
in
mov
shl
rcrl
test
iret
aad
dec
in
loope
and
mov
cmp
jne
lret
xchg
or
fsubrp
cmp
adc
xchg
imul
and
cmpsb
xchg
jmp
test
out
inc
fldt
dec
jecxz
push
ljmp
ss
dec
cld
xchg
inc
push
pop
hlt
test
mov
add
dec
call
push
cmpsl
cli
enter
sub
push
xchg
testb
push
cmp
fstps
and
add
inc
insb
fcoml
ret
inc
mov
inc
mov
testb
in
pusha
negl
jae
shlb
es
movsl
xchg
ja
enter
ret
popa
icebp
cmp
test
add
loope
fsts
mov
fbstp
iret
popf
or
adc
jg
pop
in
adc
inc
rcrb
fcompl
sbb
aaa
or
nop
outsb
sbb
mov
mov
jmp
or
jbe
shll
sbb
mov
insl
cmp
test
push
scas
insb
rorl
movsl
add
jl
stos
cs
jno
divl
fs
loope
shll
dec
mov
lods
or
xchg
out
pop
sbb
mov
repz
mull
ficomps
pushl
test
pop
scas
movsl
adc
stc
in
pop
ret
int
mov
aam
pop
lret
scas
inc
or
inc
mov
out
lock
jmp
mov
sar
test
jmp
mov
push
in
repnz
mov
mov
sbb
scas
pop
cli
mov
sbb
mov
or
ret
pop
outsb
insb
push
std
sub
push
sbb
leave
iret
pop
push
fmul
xor
in
dec
jmp
add
jmp
out
and
nop
mov
ret
jno
movl
ja
shlb
xor
cmc
loopne
into
mov
das
cmc
sar
xor
mov
fstl
fwait
test
int
jb
dec
adc
cwtl
popf
mov
lods
mov
jp
mov
shrb
mov
mov
out
ds
xchg
mov
es
rorb
mov
idivb
repz
xlat
outsb
dec
mov
shrl
and
jmp
and
pop
pop
and
dec
pop
dec
sti
lcall
frstor
out
test
pop
lret
pusha
int3
pop
pop
rolb
fnsave
and
jl
lret
push
out
sub
adc
movb
add
jbe
mov
xor
mov
xchg
inc
icebp
mov
mov
xchg
jno
mov
repnz
xchg
mov
xchg
adc
test
mov
pop
fisttpl
rclb
mov
push
pop
imul
xor
jl
lret
test
jl
enter
sbb
pop
inc
pop
call
ss
xlat
rcll
push
loop
adc
loopne
dec
xor
mov
pop
jmp
loop
dec
scas
fildll
pop
mov
mov
dec
nop
fmull
push
mov
inc
jbe
inc
test
jmp
dec
out
cltd
addr16
cld
nop
nop
mov
cmc
xchg
push
mov
mov
pushf
nop
shl
xchg
lods
imul
mov
push
ljmp
or
adc
hlt
push
add
mov
mov
scas
lret
lock
dec
stc
flds
sbb
mov
fildl
cltd
out
adc
xchg
inc
dec
loop
mov
shl
ss
xchg
mov
inc
cmpsl
lods
jg
enter
repnz
int
ror
pusha
and
call
test
pop
xchg
sub
fs
push
adc
jmp
das
mov
jae
dec
dec
mov
inc
nop
jbe
popa
mov
xchg
out
lcall
jno
imul
fwait
xor
orb
xchg
mov
lds
fcmove
xchg
inc
push
cwtl
jmp
lret
dec
loope
std
xchg
outsl
and
dec
in
mov
xchg
xchg
push
xor
arpl
popf
call
pop
cmp
mov
lret
sbb
xor
aaa
and
aaa
push
xor
int3
inc
sahf
pop
or
mov
mov
add
inc
loope
mov
bound
xor
in
sbb
mov
xor
mov
outsb
add
inc
xor
ja
adc
jecxz
push
ret
insl
fwait
aas
and
xchg
sub
out
jl
xor
cmpsl
das
cmp
mov
aaa
movsb
mov
mov
cmc
ljmp
je
ret
pop
sub
sub
cwtl
sbb
je
pop
cmp
clc
fwait
or
gs
mov
movsb
xchg
loope
enter
xchg
adc
fsub
inc
daa
jo
scas
inc
pop
xchg
je
or
jp
lcall
inc
adc
aam
sbb
pop
inc
inc
dec
aam
imul
idivb
js
enter
insl
sub
inc
mov
or
repz
dec
aad
out
sbb
cmpb
daa
cwtl
jmp
mov
icebp
sub
mov
fldenv
xor
xor
sub
fbstp
push
and
pop
cmp
ret
pop
push
xchg
mov
pop
xchg
mov
add
jb
inc
jecxz
pop
xor
outsb
push
icebp
ss
adc
mov
lods
jmp
cltd
sbb
fidivl
xor
stos
outsb
ss
push
mov
daa
imul
xchg
and
mov
pop
outsl
imul
jp
out
stos
xor
icebp
mov
cmc
lock
test
push
repz
daa
xlat
outsb
pop
lcall
in
test
dec
inc
pop
ret
hlt
dec
loope
fadds
jl
jmp
cmpb
loop
int3
arpl
mov
cmc
iret
dec
lret
jne
repz
and
insl
jmp
sbb
or
xor
das
or
xchg
jno
cs
or
xor
and
loop
push
dec
outsl
sti
clc
in
push
jmp
pop
in
nop
jbe
into
bound
out
lods
and
cmp
dec
adc
mov
repnz
dec
out
ret
stc
int
adc
fnstenv
rcl
idivb
push
or
add
dec
sub
out
pop
push
push
adc
std
or
std
repnz
test
jmp
sub
push
outsb
arpl
xchg
mov
cli
outsl
push
shlb
nop
sbbl
inc
push
jo
sarb
pop
push
mov
push
jle
xchg
aam
lock
inc
lcall
adcl
mov
subb
and
cmp
and
hlt
push
in
adc
jbe
cmpb
push
stos
mov
mov
scas
mov
andb
xor
pop
xchg
mov
add
and
clc
or
adc
and
push
push
lret
mov
inc
dec
adcl
inc
or
or
aas
mov
mov
movsl
xor
mov
adc
mov
mov
faddl
mov
pop
mov
cmp
call
xchg
and
jnp
push
lods
jnp
test
test
iret
xchg
pop
mov
cmp
scas
fisubs
lcall
jne
inc
div
adc
jnp
hlt
sub
dec
cmp
and
adc
divb
mov
or
xchg
sub
cmpps
xor
xlat
mov
sub
jno
in
cwtl
inc
pushf
add
xor
testl
sbb
mov
and
gs
sbb
pop
cmc
lea
insl
stos
jg
sub
xchg
sub
daa
call
xchg
fldenv
test
add
enter
out
push
pop
sbb
mov
andl
pop
sub
cmp
push
add
pop
push
xchg
test
fcoms
or
mov
mov
ret
dec
push
mov
adc
hlt
cmpsb
fwait
je
lret
repz
stc
jbe
adc
or
jl
jno
lods
inc
test
ret
pop
hlt
into
cwtl
and
and
fs
push
sahf
mov
sbb
mov
cs
sbb
in
pop
adc
movl
pop
cmpsb
or
arpl
sbb
xor
cltd
and
xor
xchg
lock
fstpt
popa
sbb
jmp
aad
lahf
int3
pop
lea
loope
mov
in
or
xchg
adc
repnz
mov
dec
in
add
sahf
xor
adc
jl
dec
xchg
cld
fadds
pop
push
and
cmp
lea
js
inc
xlat
add
mov
fadds
cmpsl
icebp
loop
jmp
lahf
push
jbe
sti
xchg
fsubrs
add
xchg
repnz
mov
movsl
sbb
adc
in
mov
dec
jno
inc
sbbb
cmp
mov
adcb
fdivl
mov
mov
call
cmc
dec
stos
shrb
fstps
push
mov
fidivl
dec
pop
lret
fbstp
mov
push
push
jo
hlt
out
sub
push
sahf
jb
js
cmp
push
clc
loopne
data16
notb
push
mov
insb
gs
popf
xlat
scas
scas
push
loope
out
rorb
and
neg
jmp
push
loop
icebp
jmp
cmp
fnstenv
test
bound
clc
push
xor
cmp
dec
add
mov
jo
fcoml
stos
arpl
rcr
jb
add
int
pop
push
out
mov
jmp
push
test
mov
push
lcall
adc
mov
xchg
push
bnd
lret
mov
jge
lea
lahf
cmp
jle
rcrb
arpl
jmp
adc
test
inc
out
scas
jnp
sarb
push
aas
cwtl
loope
jb
mov
lods
push
lahf
inc
sub
inc
cmpsl
sbb
pop
fisubrs
dec
mov
sbb
idivb
repz
add
fimull
xchg
pop
sti
pop
cmp
pop
xor
into
das
movsb
and
pop
orl
mov
ds
jo
add
mov
xchg
push
insb
add
dec
pop
punpcklwd
testl
gs
sti
cld
mov
cmp
inc
inc
xchg
jg
xor
push
daa
aam
fwait
dec
xor
iret
cmp
cmpsl
cwtl
adc
sbb
sbb
lock
mov
ret
and
packuswb
jmp
push
dec
loopne
test
std
adcb
inc
or
mov
ret
mov
movsl
jle
movsl
and
out
fmuls
pop
repz
das
and
xor
fcomi
and
jbe
bound
fdivp
pop
mulb
add
fs
mov
in
imul
lea
lea
sbb
add
or
pop
mov
pop
movsl
xor
or
mov
push
in
stos
xor
dec
xor
addr16
mov
stos
sbbb
or
fs
movsb
inc
pop
test
jns
mov
push
stc
mov
hlt
push
lods
out
pop
hlt
add
and
fs
dec
mov
jno
stos
jno
daa
nop
orb
ja
jne
xchg
xchg
je
jne
shrb
js
jle
xor
pusha
push
push
jbe
or
pop
jae
in
jne
pop
sub
dec
mov
repz
lds
pop
mov
push
cmp
mov
dec
inc
negl
xchg
mov
and
fdivl
fwait
mov
push
add
cmp
lcall
loop
cmp
cld
sub
adc
sub
or
ss
or
and
dec
xchg
cmp
jl
imul
add
rcrb
ret
andb
sbb
pcmpgtd
lea
into
sub
add
push
shll
andl
jbe
mov
or
cmp
pop
cmp
dec
flds
jb
or
sbbb
lcall
and
mov
cs
loop
push
or
fnstenv
cli
push
or
sub
add
jo,pt
das
lods
inc
sbbl
mov
es
fcoms
ljmp
stc
iret
xchg
pushl
and
xor
pop
inc
jecxz
or
jbe
in
repz
scas
fs
notb
popf
inc
insl
push
jns
xor
ds
cld
sbb
inc
jae
pop
or
test
mov
pushf
mov
pop
mov
and
outsl
adc
mov
sbb
pusha
testl
adc
mov
icebp
insl
push
insl
ret
add
dec
lods
repnz
or
nop
xchg
xor
xchg
dec
pop
push
insl
xchg
fwait
out
int
inc
pop
out
jae
push
mov
bound
push
call
add
jo
shll
outsl
xor
xor
push
inc
outsl
adc
mov
sbb
fistpl
sbb
lods
cmpsb
push
out
and
ror
test
outsl
jg
and
popf
or
mov
jne
jecxz
insl
cltd
inc
jle
push
and
jmp
xchg
or
pop
and
cmp
int3
outsl
dec
xchg
sub
aas
test
subb
mov
call
test
dec
add
stos
or
fucomi
xchg
adc
mov
jecxz
add
jnp
jecxz
pop
adc
shr
add
outsb
add
stos
insb
loopne
dec
loop
push
shlb
add
or
or
adc
xchg
aad
or
mov
lock
lods
push
push
shrl
mov
outsl
push
test
mov
ret
lds
xchg
and
xchg
cmpsl
inc
sbb
inc
adc
insl
lea
adc
push
aad
push
jmp
negb
lock
js
addr16
in
aaa
adc
jecxz
sub
mov
cmp
dec
stos
add
pop
hlt
shll
xor
adc
and
add
cld
push
or
nop
daa
mov
and
mov
pop
hlt
mov
mov
sbb
fistl
sbb
jne
mov
lcall
sub
xchg
or
adc
jnp
adc
cltd
sbb
pop
lock
mov
mov
xchg
test
mov
ret
aam
in
cmpl
icebp
iret
push
push
inc
imul
add
sarb
aad
xor
mov
sbb
pop
dec
xor
dec
push
fnstsw
push
xor
jbe
ds
jecxz
jg
insl
xchg
icebp
in
push
mov
and
shrl
inc
into
mov
lret
bound
or
es
pop
fsubrl
cmp
add
push
and
jo
and
jecxz
pop
jae
inc
xchg
adcb
add
fstpl
sub
in
push
xor
bound
jae
gs
lcall
mov
ss
andl
or
cmp
imul
orl
arpl
fmull
insl
mov
mov
jnp
imul
or
inc
aas
insl
call
outsb
inc
je
sarl
mov
stos
jnp
stos
lock
fwait
in
pop
mov
aas
adc
mov
push
pop
scas
mov
jb
cwtl
pushf
xor
xor
push
arpl
pop
fdivr
outsl
jb
and
inc
ds
test
int3
inc
and
xorl
pop
shr
mov
dec
add
adc
neg
les
fisubl
dec
mov
mov
add
hlt
mov
cltd
mov
jg
rcrl
inc
xor
int
test
inc
sbb
fsubr
xchg
test
push
sti
out
fs
pop
insb
insb
test
mov
xor
imul
xchg
dec
xchg
or
xchg
mov
and
hlt
mov
daa
fstpt
cmp
mov
aad
addr16
ss
mov
sub
add
popa
adc
dec
sarb
adc
mov
mov
fld
or
push
aas
es
subl
loope
inc
jbe
test
icebp
pusha
mov
dec
lretw
cmp
adcl
mov
jae
pop
mov
mov
push
call
pop
sbb
push
cmp
lods
ret
sbb
cs
and
sub
or
xchg
movsl
mov
test
sahf
xchg
push
cli
rcrl
pushf
mov
push
xchg
rclb
dec
fmulp
fcomps
lds
and
mov
cli
incl
push
out
pop
pop
add
test
lods
lods
add
bound
lahf
ljmp
je
fadd
les
fistpll
add
jbe
and
push
push
dec
and
aam
cmp
insb
push
jbe
mov
push
flds
add
xor
add
mov
loopne
icebp
add
outsl
sarb
test
xchg
jl
loope
xchg
pusha
jb
xchg
add
and
xor
or
sahf
push
cwtl
aam
icebp
test
inc
aam
and
loop
inc
cmp
sti
inc
loope
mov
jecxz
inc
jb
jns
jns
in
test
jp
gs
cmc
scas
scas
lods
cmp
or
mov
adcb
insl
inc
into
cmp
std
je
fs
into
gs
ljmp
inc
pop
andl
lods
mov
add
ljmp
das
mov
fcomip
xlat
popf
stos
outsl
mov
lret
out
pop
mov
jnp
loop
dec
aad
xor
fidivl
sbb
ljmp
outsb
sbb
sarb
sub
pop
scas
push
mov
dec
and
sahf
scas
inc
shrb
scas
jp
fdivl
int
arpl
mov
rorb
cmpsl
xor
insl
sbb
sti
xchg
sub
xor
es
lods
aaa
push
xchg
add
scas
xor
stos
rol
ret
jnp
fildll
out
xchg
dec
data16
and
shrb
add
pop
xchg
imul
cmp
stos
xor
sub
out
test
popa
stc
sub
std
adc
mov
imul
or
fbld
and
mov
scas
push
imul
sbb
pop
pop
sub
ret
push
or
sbb
pop
push
je
pop
out
dec
xchg
fisubl
movsl
gs
lret
xchg
ljmp
ret
add
adc
add
std
adc
adc
or
sub
cmp
mov
std
notb
aam
loopne
loopne
mov
or
arpl
pop
repz
test
mov
es
xor
and
stos
jbe
lods
cmpsl
lret
pmulhw
clc
or
stos
mov
sub
pop
into
xchg
imul
nop
cs
enter
test
adc
movb
add
fadd
pop
into
es
fcoms
jecxz
and
scas
stos
inc
add
cld
xchg
pop
mov
sbb
cmp
or
ret
nop
daa
cmc
mov
mov
fstl
fs
xor
subb
es
dec
or
and
dec
loope
inc
adc
pushw
fnstsw
fcmovb
xor
adc
in
sahf
push
sahf
cmpsl
inc
cmpsl
ret
je
es
add
xchg
adc
bound
mov
sti
xor
lods
cltd
cmp
adc
scas
inc
rol
testb
xor
pop
inc
stos
mov
js
mov
pushf
mov
and
fisttpl
and
xchg
mov
je
mov
stos
and
jl
pop
dec
mov
mov
push
test
inc
into
adcl
ljmp
into
dec
mov
and
movsl
incb
mov
ja
inc
cwtl
das
jae
pop
pop
pop
dec
ror
mov
mov
push
dec
rcr
push
mov
push
inc
arpl
movsl
mov
sbbl
gs
add
mov
push
sbb
mov
in
dec
shl
daa
mov
stos
inc
scas
xor
fistpl
adc
xchg
aas
cmpb
jge
ret
es
movsb
ss
packsswb
addl
loop
fwait
aam
dec
fdivp
cmp
insl
push
insb
add
dec
xor
xor
inc
bound
jno
push
xor
ljmp
loopne
es
repnz
test
xchg
in
ret
aam
xchg
iret
call
out
test
enter
rorb
mov
outsl
jbe
movsb
int3
jge
es
xor
std
or
inc
jo
fnstcw
mov
xor
xchg
andb
imul
jg
jl
jno
add
mov
mov
mov
les
adcb
mov
cmc
sbb
xor
or
addr16
cwtl
mov
or
jbe
fisubl
push
pusha
stos
insb
leave
and
inc
xchg
sti
inc
outsb
test
cwtl
movsl
pusha
sti
adc
push
sti
and
xchg
mov
dec
dec
jecxz
cmp
inc
pop
inc
mov
cmp
mov
dec
js
rcrl
lcall
ficoms
insl
clc
mov
insb
sti
out
rolb
mov
xchg
scas
mov
push
push
insl
or
xor
cmp
stos
rcrb
cmp
out
adc
cmp
data16
bound
sbbl
xor
inc
xchg
sub
mov
fistl
adc
movsl
cmp
icebp
hlt
daa
dec
loopne
push
ss
movsb
and
sbb
jp
jns
popf
mov
mov
sti
sarb
cmp
and
mov
scas
jne
mov
cli
lcall
pushf
jae
gs
clc
cmpsb
cmp
or
xchg
add
cld
addr16
cwtl
sbb
xor
lcall
jp
sbb
lds
dec
adc
push
leave
mov
popf
or
cmp
int3
jg
shll
js
mov
sbb
outsb
fsubr
lahf
xor
out
jge
or
loope
jb
and
fs
jno
cld
adcb
mov
xlat
sbb
mov
inc
jbe
shll
inc
movsb
arpl
jmp
jnp
mov
cltd
mov
loopne
mull
ret
mov
aas
loopne
or
and
push
leave
int
or
pop
push
inc
push
push
mov
xor
jno
or
jecxz
and
imul
test
imul
arpl
mov
dec
fcmovnbe
cmc
inc
add
ja
pop
aaa
push
adc
xchg
je,pn
and
xlat
adcl
jecxz
pop
out
lds
xor
xchg
and
push
pop
lret
cmp
xor
push
out
inc
pop
lret
gs
pop
jge
add
mov
and
cmpsb
fadds
sub
fcmovbe
lret
ss
sub
and
ret
fcomip
adc
mov
inc
cmc
ja
popf
test
leave
jae
push
out
xchg
adc
stc
inc
mov
cmp
add
dec
inc
in
bound
push
adc
adc
xchg
xchg
sub
mov
pop
aaa
jmp
rorb
clc
pusha
cmp
or
jne
rclb
orl
aas
inc
movsb
xor
pop
add
iret
sub
jl
sahf
or
out
dec
xchg
shll
stos
testl
mov
adc
dec
hlt
pop
subb
mov
int3
incb
sub
push
out
mov
frstor
fisubrl
push
dec
push
add
hlt
leave
movsl
jb
xchg
test
mov
push
inc
shrw
pop
lahf
fisubrl
add
xor
cmc
jbe
xor
push
mov
mov
inc
ljmp
sbb
dec
shll
adcb
sub
sbb
fldenv
repz
int3
cltd
dec
in
in
mov
lea
push
cltd
or
mov
enter
cmpb
mov
jne
pop
and
ret
in
cmpsb
and
pop
lods
sub
jae
stos
xchg
push
sub
adc
je
es
xlat
sub
dec
notl
dec
mov
in
mov
call
enter
insb
sar
outsb
push
or
loope
shld
popf
pop
adc
dec
jns
test
loopne
mov
push
sbb
push
cmc
cwtl
out
lods
dec
push
clc
aaa
mov
bound
mov
ret
and
mov
mov
andb
js
add
and
stos
inc
testb
pop
leave
push
dec
or
adc
int3
faddl
push
fucomip
test
pop
push
jmp
inc
sbb
fs
mov
inc
fcomps
jae
xor
fimuls
cmovle
data16
movsl
cli
pop
leave
in
in
xor
fisubrl
adc
pop
daa
inc
mov
dec
mov
stc
push
les
push
mov
loope
pop
neg
mov
mov
insb
sbb
dec
lea
scas
loope
pop
cltd
mov
loopne
sbb
pop
dec
add
jecxz
xchg
mov
imulb
jno
push
mov
inc
sbb
xchg
or
orb
jae
mov
mov
push
or
and
stos
aam
mov
mov
cmpsl
adc
fsubrl
insb
pop
cli
adc
mov
iret
loop
mov
and
or
popf
sahf
aaa
inc
xlat
push
jnp
lods
das
sbb
mov
xor
aad
inc
and
clc
xor
mov
fdivr
mov
jno
mov
lcall
popf
lods
dec
jnp
push
cmp
cwtl
push
cmp
lcall
aaa
push
insl
in
inc
dec
pop
or
test
lds
fstpl
das
roll
cmpsl
sbb
add
loopne
mov
adc
fucomi
adc
jo
insl
cltd
ret
mov
inc
mov
popa
fdivrl
pusha
shlb
dec
out
inc
push
inc
push
lret
jae
inc
push
imul
sub
fwait
cmp
jae
xor
arpl
mov
mov
notl
pop
cwtl
mov
jp
aad
mov
int3
or
ljmp
and
movsl
inc
in
mov
or
push
stos
inc
aas
ds
addr16
ljmp
pop
xchg
sub
inc
fwait
dec
sbb
mov
inc
sti
imul
out
loope
dec
sub
loope
shl
mov
fucomp
and
and
fwait
test
sbb
lods
xor
lahf
gs
and
jle
sbbb
mov
or
lcall
jg
aas
roll
add
and
out
mov
mov
xor
mov
loope
push
es
movsl
outsb
popf
push
inc
dec
int
out
lock
push
inc
sub
out
inc
pop
scas
pop
mov
xchg
lahf
aaa
mov
leave
subl
fsubrs
sbb
sbb
outsb
add
push
or
shll
push
ror
lret
gs
enter
in
out
out
sub
imul
movsb
outsl
dec
pusha
mov
jle
daa
push
inc
xor
or
dec
mov
jge
les
pop
sbb
test
xorb
add
pushf
jnp
iret
test
cltd
push
fsub
repz
js
bound
adc
dec
outsb
mov
ret
push
fadd
movsl
out
cmp
aad
js
lret
testb
in
dec
fbld
pop
imul
pushf
add
shl
outsl
push
pop
lret
scas
push
sub
lahf
xchg
fdivl
jae
dec
sarl
dec
xchg
sub
in
cmp
scas
hlt
imul
aas
xchg
adc
imul
jg
fidivs
sub
jecxz
jecxz
push
out
inc
push
dec
nop
cmp
jno
dec
shll
xchg
int3
ret
lea
mov
scas
ljmp
repz
add
lret
loope
rclb
inc
mov
lahf
lods
push
sbb
scas
fs
idivl
xor
and
rcrb
jo
mov
loopne
test
mov
push
cltd
mov
inc
aaa
dec
loope
gs
mov
nop
lods
xchg
cmc
mov
push
or
xor
pop
cmp
ljmp
jb
mov
inc
adc
inc
mov
dec
fs
aas
and
into
divb
sbb
jno
push
adc
enter
addr16
push
int3
lret
out
push
ret
frstor
jecxz,pt
mov
mov
pop
lret
pop
and
sub
into
adc
sbb
in
bound
inc
fs
mov
test
cmc
cld
out
inc
arpl
xorl
adc
sti
pop
mov
aas
movsl
jge
je
adc
and
fsubrs
mov
jns
imul
sbb
stos
inc
adc
add
or
and
int3
loopne
std
shl
clc
mov
sub
cli
loopne
jge
push
mov
idivl
lea
rorb
dec
sbb
push
mov
ljmp
rolb
inc
in
mov
test
lret
andl
lock
in
inc
xchg
cld
loope
add
sub
data16
xchg
lds
add
push
mov
test
fwait
and
xor
lcall
cwtl
xchg
lret
xchg
inc
pop
mov
lods
inc
mov
icebp
lret
bound
cmp
les
outsb
jo
daa
sub
dec
inc
inc
dec
jmp
xor
cmp
lcall
sahf
out
push
test
xor
lret
jecxz
push
adc
or
push
mov
out
enter
stos
and
inc
xor
fs
cli
into
xchg
xchg
cs
adc
lods
jo
mov
in
icebp
in
push
cli
cmp
sub
hlt
mov
inc
adc
sarl
rcrb
leave
inc
mov
fs
lahf
pop
loop
or
aad
int3
cmp
cltd
cmp
inc
pop
dec
mov
je
xor
xchg
stos
xchg
mov
jge
add
mov
inc
sbb
sahf
jecxz
pop
cli
mov
jo
xchg
ret
mov
enter
aad
and
mov
js
or
outsb
cmpsl
push
aam
dec
outsb
add
or
jo
adc
dec
loopne
mov
lret
es
lea
cmp
insl
loopne
cmp
data16
pop
add
iret
stos
shlb
xor
addb
pop
aad
shr
dec
mov
push
lcall
jecxz
pusha
imul
loopne
mov
addr16
stos
pop
dec
loope
fs
and
push
test
rclb
repnz
cmp
loopnew
jp
push
mov
sub
arpl
fcoml
pushf
ss
dec
add
iret
pop
fwait
rol
add
cmp
inc
cmp
movsl
lret
mov
pop
pop
adc
and
divb
enter
pop
ja,pn
pop
jmp
hlt
dec
iret
inc
mov
inc
inc
in
cmp
retw
dec
test
cmc
test
mov
or
pop
sub
sub
dec
jno
out
add
popf
and
mov
aaa
mov
mov
mov
sti
adc
mov
adc
decl
push
mov
test
clc
add
insb
xor
mov
sbb
cmc
mov
out
loope
pop
testb
adcl
add
sbb
lods
dec
in
mov
xor
cmp
out
out
push
jmp
fcomps
xor
in
das
rcrl
subb
mov
ja
in
inc
test
dec
sub
insl
cmp
jmp
pushf
push
mov
jae
test
aad
cltd
pop
xchg
mov
cmp
movsl
mov
out
mov
fdivl
mov
mov
add
adc
cwtl
push
aaa
into
test
and
jmp
das
test
je
or
fwait
scas
jns
rorb
cmpsb
sti
ficomps
adc
jle
imul
rclb
cmp
fwait
repnz
fldl
adc
pusha
and
out
jns
cld
and
ja
cltd
daa
mov
std
sub
sub
and
mov
and
mov
push
xchg
cld
push
mov
movsb
sti
xchg
fcoms
lods
pop
sbb
xor
sub
jnp
lahf
or
fnsave
movl
aaa
lods
scas
xchg
rcll
js
add
push
mov
insb
fnstsw
and
cmp
aas
inc
int3
cmp
mov
mov
ret
or
sbb
or
imul
cmpl
dec
int
dec
xor
in
xor
cmc
lea
adcl
fadds
sbb
in
pushf
lods
push
test
leave
int
xchg
adc
pop
fsubrp
mov
std
lret
pop
hlt
aam
inc
push
cmc
jnp
addr16
or
dec
popa
push
insl
or
mov
jle
test
nop
mov
mov
mov
cmp
int
push
lods
lock
mov
pusha
lods
fstl
xor
stc
xchg
xchg
ljmp
or
mov
add
xor
mov
push
jp,pt
mov
or
lcall
push
push
aaa
cld
mov
xchg
push
mov
dec
inc
bound
daa
mov
out
mov
mov
shlb
aam
cmc
mov
fwait
ljmp
insl
mov
vsubps
add
bound
fsubr
nop
push
cmpsb
push
movsl
jg
push
sti
pusha
mov
mov
ds
je
fidivl
inc
mov
das
out
cmc
ss
sbb
mov
pop
sbb
pop
jl
adc
or
pop
cmp
mov
rclb
js
push
sub
pop
out
cmpsl
add
pop
outsb
jl
add
jns
cmp
test
and
cmpsb
xor
sub
cmp
outsb
jle
jl
lret
lds
rorl
xlat
pop
imul
or
pop
repz
xchg
mov
xor
movsb
leave
inc
mov
cli
cmp
in
out
iret
data16
adc
sbb
mov
sub
xor
jnp
mov
daa
sub
push
mov
shll
mov
xchg
push
sub
sar
pop
stos
dec
and
adc
hlt
push
aad
dec
enter
aad
and
pop
repnz
inc
cmc
cmpsb
repnz
jae
inc
jl
cld
jmp
jae
aaa
pop
push
or
imul
sub
mov
xor
xchg
imul
hlt
mov
fistpll
adc
cmp
xor
add
or
int3
cmp
cmp
lahf
fwait
mov
sub
les
inc
popf
sbb
mov
xchg
in
lods
inc
mov
push
mov
int3
in
es
pop
push
push
in
iret
popf
popl
push
jae
popa
in
pop
insb
push
cmc
jno
mov
mov
or
es
jl
xchg
inc
mov
ja
sub
shll
hlt
aaa
in
imul
js
add
push
mov
xchg
stos
fnstenv
stos
xor
leave
stc
je
cmpsl
call
xchg
pop
inc
ret
mov
into
xor
scas
in
push
or
inc
aad
xchg
jecxz
pop
neg
mov
mov
inc
sahf
hlt
xchg
gs
mov
inc
js
jecxz
mov
mov
scas
push
or
inc
cmpsb
lock
mov
cmp
pop
push
or
pushf
inc
repz
or
lahf
or
cmp
pop
leave
flds
nop
cltd
lock
les
mov
push
js
repnz
fs
cmc
jle
cwtl
cmpsb
cmc
dec
jae
xchg
pop
xchg
sub
mov
cmp
or
xor
roll
leave
and
insl
xchg
lahf
scas
jl
push
inc
jl
jne
xorl
push
ds
pop
das
or
and
xchg
scas
push
inc
mov
jle
cmc
popf
push
mov
enter
cmp
gs
cmp
xchg
sub
pusha
les
repnz
push
outsb
jge
and
andb
repnz
xchg
xchg
mov
mov
lods
mov
adc
ret
insb
jle
jp
mov
int3
dec
mulb
push
aad
or
jle
xchg
sub
shrl
fdivrs
push
xchg
test
jae
mov
mov
clc
int
mov
les
scas
and
mov
sbbb
test
jle
sbb
fs
lahf
add
sub
andb
pusha
test
push
shrb
fidivs
sbb
popa
test
or
and
loopne
push
nop
daa
cmp
dec
jne
pop
scas
cmp
sti
cmp
sub
inc
ret
scas
enter
lret
and
outsl
push
xchg
gs
xchg
mov
popa
mov
sbb
jno
or
inc
cs
fimull
fildl
ds
add
push
xchg
sbb
das
dec
mov
aas
sub
loop
and
mov
lock
xor
or
jecxz
mov
add
clc
loop
pop
insl
sub
loope
out
cld
or
sarb
mov
in
ficompl
jle
mov
add
mov
xor
mov
inc
fs
enter
sarb
pop
mov
and
test
inc
jbe
lea
cwtl
das
push
mov
addr16
int3
and
cmp
in
ja
mov
inc
adc
into
inc
ja
sub
mov
inc
inc
pop
mov
je
popf
xor
sbb
sbb
outsl
insl
sbb
insb
into
cmp
decl
scas
and
out
inc
ficompl
or
push
adc
adc
fdivrl
cli
sbb
adc
lahf
stos
hlt
mov
push
adcl
jbe
sub
mov
jecxz
sub
test
inc
mov
rclb
fcmovu
sbb
push
push
jb
cmp
fwait
adc
or
fisttpl
fistps
enter
clc
mov
mov
lods
iret
dec
sbb
shll
subb
out
inc
mov
jno
cli
into
jecxz
push
out
stc
lods
mov
in
flds
jo
lock
sub
push
pop
test
lock
aam
sub
sbb
xchg
aam
enter
xchg
dec
push
or
lds
lea
mov
xchg
in
push
xor
nop
stos
int
aaa
pop
loopne
leave
xchg
sub
iret
pop
mov
push
jo
pop
and
jl
mov
mov
push
fs
cmpb
pushf
pop
lock
mov
sarl
inc
fwait
lock
cmc
mov
or
add
jmp
cs
jg
sahf
ja
pop
test
ds
push
sbbb
ds
pop
pop
add
insb
sbb
iret
orb
or
pop
subl
adc
addr16
rcll
sub
aaa
fs
outsb
adc
pop
jns
jbe
les
xchg
dec
push
add
xchg
jno
xrelease
lahf
outsl
pop
jns
lahf
rorb
mov
or
cmp
push
imul
test
popa
and
repz
stos
pop
xchg
clc
sub
sub
mov
nop
push
out
jge
or
popa
shlb
loopne
or
xor
mov
pop
push
or
in
or
ror
fstpt
and
inc
arpl
push
shll
dec
data16
hlt
sub
or
dec
jle
sbbl
lock
in
sbb
ljmp
out
popa
pushf
bnd
mov
test
aaa
in
mov
pop
aas
popf
mov
cmpsb
dec
rorl
mov
mov
pop
pop
inc
jno
xorb
push
cmp
dec
push
das
mov
cmp
or
aaa
mov
dec
inc
jno
cli
inc
pop
jge
scas
ja
loope
repz
ss
test
test
xchg
adc
mov
sbb
pop
xor
ljmp
jge
mov
popa
lret
mov
jl
mov
add
xor
int
dec
mov
std
out
scas
in
cmp
jne
dec
aam
dec
mov
cmpb
mov
mov
fucomip
and
or
clc
sub
sti
scas
call
aam
sarl
cmp
mov
hlt
jl
mov
out
mov
lahf
mov
rep
scas
outsl
adc
xchg
sbb
jae
ret
insl
mov
negl
xor
xchg
shrb
int
pushf
sbb
fdivrs
push
push
pushf
push
xchg
fdivl
sti
es
sti
es
lea
jne
jno
scas
ds
xchg
and
fdivs
mov
ja
and
ljmp
ja
jo
shrb
mov
inc
sbbb
cltd
and
std
lahf
jbe
shl
cmp
dec
std
je
cltd
cmp
mov
je
scas
negb
xlat
xchg
adc
xor
lahf
push
sbb
push
mov
pushf
inc
int3
xor
test
stos
xor
cld
dec
jbe
jle
pop
scas
dec
hlt
sbb
sbb
add
xchg
jb
cli
lcall
sub
xor
and
mov
stos
out
shlb
inc
mov
or
or
cmpl
adc
lods
pop
dec
mov
dec
xor
push
adc
nop
addr16
arpl
xchg
divl
mov
xor
and
inc
loop
daa
cli
xor
in
clc
mov
gs
dec
mov
and
clc
and
jno
dec
test
xor
out
fwait
mov
or
das
shrl
push
cli
push
or
nop
mov
popa
jecxz
mov
lcall
inc
gs
fadd
sbb
mov
mov
push
call
xor
ficompl
shlb
sub
fnsave
dec
mov
mov
outsb
addb
mov
add
dec
bound
dec
in
fs
push
ja
dec
cs
mov
pusha
sub
lret
push
jo
leave
mov
pusha
mov
cli
xchg
mov
mov
xchg
sbb
pop
xor
js
daa
mov
iret
mov
cmp
ja
jecxz
add
addl
push
outsl
cmc
jmp
dec
movsb
aad
sbb
sarl
xchg
xchg
sub
dec
mov
push
das
shll
or
jecxz
push
mov
adc
scas
dec
inc
movsb
shr
test
insl
jmp
mov
add
jne
into
movsl
jmp
push
out
stos
mov
jmp
pop
jbe
jp
inc
fcoml
cmc
mov
in
popa
pop
hlt
push
and
pop
ds
popf
insl
pusha
adc
xchg
cld
gs
mov
pusha
jno
pop
icebp
leave
test
std
jbe
nop
add
pop
addl
ljmp
xor
pushf
cwtl
or
cs
data16
jp
test
add
xor
dec
rcr
je
dec
clc
cmpsl
xchg
sbb
cld
js
cmp
insl
lret
push
or
jecxz
cmp
jp
and
test
push
xchg
fsubr
ret
inc
push
or
lds
and
aad
dec
out
adc
sbb
push
add
rcrl
lods
cs
ljmp
inc
fisubl
cltd
mov
push
adc
fiadds
jbe
js
mov
sbb
orb
adc
int3
das
mov
sbb
repz
push
xor
je
mov
push
sbb
int3
movsl
mov
fidivl
xlat
flds
xchg
sbb
les
call
adc
cmp
int3
gs
or
dec
bound
push
cmp
movsl
push
in
mov
gs
pop
xchg
int3
xor
cli
add
jecxz
xor
sub
jecxz
loopne
je
add
xchg
push
sub
sub
ret
lods
sbb
ljmp
das
xor
push
mov
push
cwtl
push
mov
mov
and
outsb
sbb
addr16
add
outsb
jne
xor
aad
ljmp
faddl
or
aaa
scas
mov
or
push
mov
movsb
out
and
adc
push
jne
dec
lds
xchg
or
icebp
xchg
in
sbb
mov
cmp
xor
pop
fidivrs
cmp
lcall
mov
stos
or
xchg
lods
sub
int3
test
rcr
in
xor
inc
lret
mov
cmpsl
out
add
lods
add
pusha
arpl
or
clc
mov
mov
xchg
insb
xchg
call
xchg
fildl
pushf
loop
gs
push
sub
and
aaa
sbb
nop
push
fsubrp
xorb
lea
push
and
rorb
aam
jnp
pop
sbb
enter
push
enter
rcl
add
fnstsw
jmp
dec
adc
sti
sub
mov
push
jne
sbb
xlat
popf
or
jge
aam
and
enter
movsl
mov
into
fstpt
cltd
sub
rolb
mov
xor
adc
and
shll
shl
mov
fimuls
mov
mov
sbb
imul
mov
lret
sbbb
lods
sub
cmp
xor
pop
hlt
insb
movsb
sbb
pop
cmc
lret
sti
inc
fdivp
std
pop
adc
jmp
sbb
xchg
cmp
out
test
andb
push
xor
inc
pop
nop
add
test
xor
push
mov
pop
dec
addr16
call
fstpt
mov
mov
or
mulb
cmc
lock
and
dec
mov
nop
mov
enter
fs
pop
sbb
sbb
push
clc
adc
mov
pop
inc
push
shr
movsl
arpl
and
sub
enter
fistps
sub
lds
or
or
arpl
sub
add
test
sbb
push
pop
mov
lds
shll
push
addl
sub
mov
pushf
imul
inc
aad
mov
int
int3
ja
negb
loope
sub
rorl
pop
sub
clc
ds
pop
out
negb
cmp
mov
inc
xchg
or
stos
and
dec
loopne
repz
fcomps
mov
icebp
sbb
iret
js
cmp
mov
arpl
xchg
add
jno
and
loopne
test
and
mov
sbb
imul
pop
movsl
test
mov
jg
xor
pop
xchg
inc
pop
ret
jns
std
lcall
push
inc
jno
xchg
mov
push
jne
imul
in
js
enter
lods
fs
xchg
xchg
inc
imul
xor
ret
mov
inc
fmulp
mov
into
xor
jne
je
adc
into
popa
add
sbb
sub
cmp
cs
test
pop
xchg
test
xor
jmp
dec
mov
sub
pop
lods
adc
pusha
push
xor
test
jnp
aad
jl
fcomi
inc
xlat
test
lret
cld
dec
add
shll
jle
repnz
mov
xor
xchg
sbb
cltd
push
in
or
sbb
ds
aad
adc
jbe
ret
mov
into
ja
push
sbb
or
cmp
mov
xchg
mov
adcl
lret
xchg
and
lahf
jns
xchg
clc
cmpsl
mov
add
mov
push
xor
add
push
sub
dec
jecxz
jnp
mov
stc
cmp
push
hlt
inc
jae
dec
test
sbb
cmp
xchg
daa
repnz
shlb
push
mov
enter
loop
pop
xchg
bound
jl
sarl
and
fs
in
in
mov
fwait
push
adc
pop
pop
icebp
notb
lcall
popa
or
push
xchg
sbb
clc
daa
sub
or
adc
lret
adc
mov
cmp
loope
call
ret
push
fsubrs
cmp
test
cmp
xchg
movsb
dec
shrd
xlat
add
in
scas
and
mov
sub
lods
lea
cmp
and
leave
xor
xchg
stos
bound
mov
lock
fs
jmp
into
dec
jbe
jecxz
mov
xorb
jno
sbb
imul
push
imul
xlat
xor
ds
inc
fstpl
std
inc
jnp
in
mov
inc
sbb
xchg
adc
cmp
jne
ficoms
outsl
inc
mov
sahf
sbb
mov
test
add
into
hlt
fs
add
cmc
enter
pushf
and
push
push
repz
call
test
xchg
add
push
jae
iret
sbb
in
sbb
pushf
lret
mov
cmp
fs
xchg
idivl
sub
and
int
adc
in
int
call
leave
push
out
xchg
into
loop
push
hlt
mov
dec
lret
cld
fstpl
ss
int
add
int3
sub
fwait
and
xchg
xchg
sub
ljmp
popf
xchg
mov
gs
cwtl
repnz
je
add
cld
lds
in
and
les
lea
mov
outsb
sbb
add
push
xor
movsb
cmp
imul
cs
sub
mov
xor
inc
jecxz
loopne
xchg
cmc
mov
mov
lods
jo
dec
jns
mov
faddp
xchg
dec
ja
xchg
sub
mov
dec
out
jne
and
push
xchg
xchg
and
es
pop
xchg
repz
lds
xor
out
lahf
sbb
mov
pushf
xchg
sahf
add
pop
pop
pop
mov
jns
imulb
mov
aas
stos
and
inc
outsb
mov
xchg
xchg
pusha
fimuls
out
sbb
fmull
sub
lret
lods
ljmp
cmp
add
mov
pop
jne
dec
mov
mov
pop
sub
out
mov
imul
and
mov
mov
pop
aad
dec
cltd
popf
jne
ret
pop
sub
cmpb
lods
inc
cmpsb
mov
lret
in
cmp
jne
icebp
shll
ret
iret
ret
je
jmp
out
addb
int
cmc
js
fistps
shlb
add
jno
in
frstor
stos
push
outsl
aas
push
mov
push
or
mov
jge
fcmovne
pop
insl
pushf
add
lds
fwait
xor
loop
jae
lea
out
ja
loop
inc
outsb
xchg
movsb
cmp
add
lea
mov
stc
adcl
repnz
cmp
insb
nop
das
movb
cmc
mov
and
xchg
push
dec
aad
in
sub
push
push
or
incl
jo
push
aam
mov
mov
ret
mov
xor
and
and
and
cld
adc
or
pop
insl
dec
xor
cltd
pop
sub
push
jge
dec
stos
mov
or
push
std
inc
mov
push
lahf
loopne
loopne
fcmovnb
das
push
test
dec
inc
aaa
jbe
out
mov
gs
mov
mov
imul
mov
scas
mov
stc
nop
jne
into
outsl
rep
pushf
int
pop
imul
xor
xlat
sbb
pop
fwait
jnp
popa
sti
loopne
mov
addb
int3
pushf
bound
sub
mov
mov
push
push
mov
lret
mov
loop
xchg
movsb
jnp
add
jle
nop
xchg
add
jmp
mov
filds
data16
jno
push
mov
movl
jbe
in
or
xor
xor
dec
mov
and
push
xchg
call
adc
or
jb
hlt
js
inc
jae
xor
fcmove
test
and
jae
pop
xlat
das
push
cmpsb
xchg
enter
mov
push
jp
add
shlb
add
repz
adc
ret
add
cli
mov
insb
aad
cs
sub
push
insb
lock
or
jb
push
jecxz
andb
xchg
sub
daa
push
int3
inc
lret
jmp
dec
mov
xor
push
cld
lret
xchg
add
and
xchg
test
or
out
jb
inc
adc
stos
xchg
sbb
mov
fistpll
dec
adc
push
sub
stos
mov
xchg
lret
sarl
cmp
mov
mov
or
iret
icebp
adc
add
in
mov
lret
mov
nop
sub
ljmp
inc
inc
xor
movl
xor
cmp
push
mov
pop
dec
mov
lret
sbb
cmp
gs
repz
cmp
clc
outsl
push
and
xchg
sub
lods
repnz
fistpl
fildll
out
mov
mov
dec
push
cli
loop
in
es
gs
and
jp
pop
test
mov
push
rcrl
xor
xor
push
push
jg
pusha
loop
fnsave
sbb
sbb
js
inc
cmp
fildll
pminub
test
mov
mov
dec
add
fists
cs
push
call
and
inc
rcr
cmp
sahf
insl
cltd
das
aam
cltd
call
add
cmp
sub
repz
mov
pop
adc
push
dec
jmp
pushf
xchg
dec
cld
inc
mov
mov
push
dec
inc
xlat
cmpb
mov
xchg
inc
push
lcall
push
insl
xor
push
dec
cmp
imul
and
push
pop
repnz
or
sbb
pop
clc
or
icebp
daa
push
bswap
iret
je
cmp
push
mov
and
insl
lcall
xlat
fidivl
mov
sbb
sub
fbstp
sub
and
cmp
dec
scas
mov
das
lahf
jg
shl
sbb
mov
sahf
in
in
fisttpl
dec
add
popa
inc
or
stos
std
cltd
xor
xchg
push
dec
mov
xchg
jle
inc
enter
fstps
scas
jnp
jbe
das
nop
fdivrs
stos
push
inc
pop
or
fcomi
scas
sub
loop
add
jne
inc
pop
hlt
js
dec
ds
dec
fcomps
add
xorb
ljmp
aad
lahf
fdiv
jle
pop
loope
add
push
dec
cmc
aad
mov
jecxz
ss
insb
push
push
add
mov
stos
fnstenv
mov
sub
push
or
scas
add
aam
adc
es
leave
pop
mov
nopl
lods
adc
push
stos
mov
aad
xchg
int3
or
and
sub
push
fisttpll
dec
mov
fldcw
dec
popa
or
push
int
leave
jecxz
aaa
data16
xor
xchg
sbb
cld
lds
scas
sbb
mov
xlat
push
add
out
dec
aad
sbb
xchg
pop
dec
xchg
jae
aam
je
cmp
add
mov
iret
sahf
out
inc
decl
andl
mov
outsl
fsubl
stc
sahf
jmp
ss
adc
shl
pusha
in
mov
mov
js
xchg
cmpsl
fmull
jae
and
je
pop
mov
or
cmc
bts
rcrb
jmp
jmp
mov
in
rol
cmpsb
and
xchg
mov
test
ja
std
sub
ret
call
cmp
fimull
scas
bound
or
and
sbb
jl
pusha
scas
sbb
sbb
or
mov
call
pop
aaa
cmp
xchg
sub
orb
jecxz
les
jb
mov
mov
test
fs
and
cmpsl
mov
xchg
fcomps
mov
xchg
gs
inc
cmp
mov
pushf
cwtl
and
into
cmp
mov
das
inc
add
pop
jg
cmp
xor
fcompl
lods
fidivs
scas
adc
ror
jae
into
daa
fidivl
xchg
mov
xchg
fwait
mov
mov
stc
push
test
jns
inc
mov
cli
pushf
iret
jge
fucomip
insb
ljmp
or
mov
xor
push
sub
and
in
dec
jle
pop
xchg
jnp
pop
repnz
in
mov
popf
arpl
or
shll
shll
sbb
mov
add
dec
push
sub
mov
sub
pop
xor
stc
popfw
and
mov
ret
inc
pushf
paddsb
xor
jno
aam
xchg
cmp
cs
fucomip
add
pop
mulb
das
xchg
fisubl
xchg
call
cmpsl
ds
sbb
cmc
pop
cmpsl
ret
mov
cld
inc
clc
adcb
jp
movsl
imul
rcrb
pushf
xor
jnp
fs
mov
mov
and
cmc
or
jbe
sub
es
ret
inc
sub
add
sbb
or
xchg
cli
ljmp
sbb
jecxz
fsubrl
lret
add
mov
lret
jb
inc
mov
lock
roll
aaa
sbb
sub
xchg
in
outsl
inc
aaa
push
std
mov
loopne
adc
ror
add
dec
fwait
in
ds
imul
lret
fadds
adc
fs
lock
mov
add
in
pop
sbb
mov
fimull
in
pushf
pop
cli
lea
lock
test
jp
cltd
sbb
pop
insb
jle
je
pop
pop
and
mov
repz
mov
jae
out
lods
sub
push
int
add
cmpsb
cld
mov
pop
cld
cwtl
or
xchg
xchg
data16
out
pushf
cmpsl
pusha
pop
sbb
or
imul
test
cwtl
addr16
stos
jne
xor
add
mov
push
cmp
xor
sub
jno
cs
ljmp
lock
sub
int
push
dec
out
test
inc
out
in
add
mov
pop
inc
jl
sbb
cmc
dec
stos
mov
pop
mov
iret
fptan
push
popa
mov
test
int3
cli
cmp
dec
mov
into
aaa
rcrb
add
shrl
mov
outsl
std
ret
clc
fidivs
mov
jne
dec
lahf
and
sti
jg
adc
aam
and
mov
and
dec
sbb
outsl
mov
pop
lahf
jnp
xor
aas
sub
gs
cmp
cmp
cmp
rolb
std
mov
fstl
cmp
lahf
xor
mov
jns
arpl
sub
js
out
repz
nop
push
push
or
loopne
into
lds
js
pop
shl
fstl
mov
scas
inc
movb
or
pop
cmp
pusha
arpl
out
jbe
fistpl
jo
mov
int3
lcall
shll
xchg
repnz
xchg
add
filds
adc
sub
fiadds
out
mov
cld
pop
mov
sahf
sub
inc
sbb
jbe
mov
mov
add
mov
push
xor
fmul
adc
daa
popa
clc
pop
icebp
sbb
push
ss
xchg
jno
shll
add
js
inc
js
cld
imul
or
outsb
sub
lahf
dec
xchg
sbb
lock
icebp
loope
mov
movb
ja
shlb
pop
outsb
sbb
push
rorb
mov
adc
test
popf
pop
clc
mov
adc
pop
jg
cmpsl
sbb
cmpsb
sarl
cmp
in
dec
test
dec
int3
jns
mov
add
xrelease
cmp
test
iret
jg
adc
sbb
push
call
jnp
outsl
loope
pushf
add
mov
dec
jl
sub
subl
sbb
mov
icebp
xchg
mov
bound
mov
bnd
ret
add
sbb
mov
cmp
loop
push
inc
mov
icebp
mov
lods
loopne
mov
push
repz
adc
stos
out
fcmovne
arpl
jle
cwtl
jnp
push
aad
mov
out
mov
ljmp
xchg
xchg
ss
inc
test
addl
sub
out
add
mov
pop
in
inc
das
outsb
nop
jae
push
xchg
push
fisubrs
mov
jnp
jecxz
jo
mov
add
mov
push
mov
add
es
dec
mov
out
cmc
pop
dec
pop
xor
jmp
js
jno
add
push
lret
sti
sti
or
sbb
rorb
test
aam
in
pop
addb
sub
mov
mov
imul
fimuls
jle
test
lret
pop
pop
popl
cmpsl
and
mov
stc
or
sbb
sub
dec
pop
xor
xor
inc
enter
and
sub
ss
jns
mov
loope
pushf
cli
lcall
xor
inc
in
jecxz
jmp
inc
insb
shlb
push
repnz
jns
sbb
mov
cmpsl
cmp
cmp
push
and
enter
add
ljmp
push
adc
sbb
jecxz
and
xor
inc
cmpsl
push
xor
push
test
insb
pop
shlb
mov
je
inc
inc
loop
adc
inc
popf
jne
xchg
xor
add
mov
aas
fcoml
stc
pop
fcmovnb
jg
aam
sub
jns
mov
in
aad
fisttps
mov
cmp
loope
add
push
lret
pop
mov
add
push
push
shll
lret
and
mov
cmc
and
xor
mov
out
popf
xor
test
jno
dec
movl
cmp
test
push
ffree
outsb
sbb
loop
mov
call
outsb
mov
fistpll
push
stos
dec
xchg
and
insl
xor
icebp
out
in
out
cmpl
pop
out
aam
xchg
sub
data16
daa
data16
mov
inc
mov
push
fiaddl
in
cmp
inc
shlb
and
mov
mov
rorb
out
pop
scas
ret
mov
push
inc
push
jge
ljmp
lds
insb
xor
outsb
ss
add
pop
cld
xchg
dec
lock
dec
ja
dec
aad
cwtl
aam
pop
add
adc
or
aas
sub
mov
imul
add
aaa
push
lods
inc
mov
rep
mov
jle
pop
add
test
mov
ljmp
xchg
aam
xchg
movq
sbb
mov
fnsave
lret
das
add
add
jmp
test
lods
cmp
lods
rcrl
loop
stc
shrl
fidivl
ljmp
fldl2t
lods
or
mov
fcoms
sbb
pop
je
mov
aad
mov
outsb
xor
and
cmc
adc
xor
dec
movsl
lret
mov
fmull
lret
adc
xchg
xchg
aaa
nop
imul
inc
inc
bnd
or
sbb
sub
test
loop
je
inc
aam
lock
lret
lret
mov
push
shll
inc
dec
jle
mov
outsb
pop
insb
xchg
shll
or
pop
repz
mov
inc
in
lret
jp
pop
xor
and
push
ljmp
jno
int
xorps
pop
fsubs
sar
imul
inc
daa
std
mov
mov
dec
add
out
clc
mov
inc
popf
out
inc
test
cmp
sbb
dec
sbb
rcrb
jmp
pop
movb
xor
loop
adc
mov
enter
movsb
xor
push
aas
filds
mov
jo
imul
adc
leave
fprem1
and
dec
dec
inc
sahf
icebp
adc
jl
sbb
push
mov
cmp
mov
push
dec
lcall
dec
xor
push
push
mov
fwait
pop
insb
mov
mov
popf
fs
outsl
xchg
rol
repnz
cwtl
aas
jecxz
aad
add
dec
and
movsl
repz
and
adc
scas
push
fdivs
sub
cltd
sub
lret
sbb
mov
and
stos
sub
add
inc
mov
out
or
mov
jnp
jle
xchg
cmp
sub
jl
dec
mov
dec
shlb
dec
dec
pop
out
mov
cmpsl
mov
rcrb
adc
or
lea
je
scas
sub
sub
adc
filds
ljmp
mov
cmp
lods
test
lahf
decl
mov
xchg
call
sub
xchg
and
int3
jb
lods
mov
dec
xor
jge
fdivl
inc
pop
insl
jne
lods
inc
dec
push
imul
lret
fdivrl
push
ljmp
jb
insl
mov
outsb
add
fs
mov
mov
pop
fisttps
in
imul
scas
xlat
jnp
in
lods
cld
hlt
adc
ret
xlat
leave
shll
movsl
mov
les
js
repnz
add
adcl
cltd
add
imul
incb
jb
push
mov
fisubrl
lds
addr16
ja
rcl
inc
lods
sub
and
roll
sbb
inc
adc
mov
lcall
add
repz
mov
mov
iret
subb
sbbl
jae
je
dec
rclb
pop
dec
add
fwait
xor
add
xchg
add
pop
cld
xchg
mov
pusha
lods
sbb
mov
jnp
mov
mull
sub
cmp
arpl
mov
mov
movzwl
dec
mov
aad
loop
sub
loopne
aas
sbb
dec
xchg
sub
sub
lock
xorb
movsl
cmp
jg
adc
xchg
gs
adc
dec
test
cmpsb
popf
push
dec
movl
sub
adc
test
sub
jns
nop
and
ljmp
data16
sbb
sub
dec
loope
out
scas
xchg
ret
mov
adc
add
shl
test
std
cltd
test
cltd
mov
leave
inc
xchg
add
sti
xchg
cmp
repz
jl
add
repnz
sbb
in
ss
cltd
xchg
or
popa
cmp
xor
mov
push
mov
rolb
in
push
imul
and
clc
sbbl
lods
insl
xorb
cmc
loopne
cmp
mov
jl
pop
jb
sub
nop
pop
shrb
or
push
mov
add
shlb
mov
testl
mov
cmc
jg
push
movsl
rorb
scas
push
mov
aad
daa
or
repz
xchg
jge
lcall
mov
mov
dec
rolb
xchg
and
xchg
aad
push
cmp
movsb
ja
sub
jno
sub
push
and
test
cltd
and
or
jb
cmp
subl
shl
mov
rorb
clc
pop
scas
mov
sar
mov
sub
mov
out
and
push
repnz
cmp
mov
xor
xchg
mov
stos
mov
cltd
xchg
les
xor
xchg
ljmp
cmp
or
lcall
inc
sub
imul
mov
jecxz
fildl
pop
insb
dec
pop
idivb
popa
inc
fsts
lds
into
adc
imul
negb
add
cmp
push
xchg
cmc
sbb
jl
insb
lahf
fldpi
inc
pop
sbb
fisttps
das
cwtl
xchg
test
add
ja
movsl
stos
jns
xor
ds
pop
jns
jmp
clc
and
push
mov
dec
cmc
xor
jl
inc
or
add
in
push
pop
xchg
xchg
sub
mov
sbb
jmp
dec
sbb
adc
pop
inc
std
add
mov
lock
add
cmpsb
sbb
pop
mov
inc
jg
mov
xor
cmovnp
imul
and
xchg
push
ljmp
sub
cmp
outsl
xchg
push
nop
add
or
and
popa
mov
push
cmp
mov
nop
lret
iret
cmp
mov
popf
jp
mov
or
and
mov
test
call
test
mov
fisubrs
idivb
stc
jl
loop
pop
sahf
mov
lcall
sub
insb
pop
movsl
aas
das
jg
outsb
in
jl
adcl
xchg
mov
in
sbb
mov
or
inc
in
mov
mov
push
aas
sbb
das
arpl
pop
aaa
clc
mov
mov
clc
hlt
lods
push
iret
fidivrs
push
or
cmpsb
std
les
dec
mov
idiv
or
test
fstpt
fwait
add
andb
cld
repz
inc
dec
loop
jle
shl
ljmp
dec
push
fucomip
subl
divl
loope
inc
aam
cmpsb
sub
lods
lret
push
or
dec
out
xchg
arpl
sbb
xor
loope
and
mov
jne
pop
out
scas
add
int
or
in
scas
sahf
jno
ds
test
pop
mov
pop
mov
ret
in
call
push
pop
adc
aam
jmp
dec
fsts
imul
std
pushf
decl
es
inc
push
push
inc
movsb
ja
loop
mov
xchg
pop
mov
lds
pusha
push
xchg
mov
fistpl
mov
scas
loope
mov
stos
jmp
sbb
mov
sbb
lea
xchg
stos
mov
popl
test
mov
icebp
insb
pop
loop
clc
imull
cmp
sbb
inc
lahf
movd
jle
insl
mov
mov
cmpsl
cli
dec
jecxz
enter
xchg
cmc
dec
ret
ds
ret
mov
test
mov
lret
inc
jmp
fs
mov
pop
std
cmpsb
jmp
xchg
out
je
dec
test
sub
push
icebp
jb
push
xor
pop
repz
jp
icebp
or
int3
sub
add
fs
push
or
movsb
imulb
inc
repz
mov
dec
ret
pop
cld
loope
ffree
pop
arpl
dec
xchg
pop
les
and
mov
xchg
dec
jb
stc
adc
les
pop
lods
mov
xor
outsb
mov
nop
push
and
add
call
push
ljmp
jns
popa
stos
jb
sbb
call
mov
mov
mov
cld
rorl
sub
inc
push
pop
cmp
xchg
mov
rcrl
add
pop
or
mov
sub
add
dec
pop
lock
sahf
bound
and
xor
sbb
aas
xchg
jp
dec
or
jnp
mov
mov
jg
lret
mov
lock
mov
js
or
repnz
std
xchg
adc
mov
push
fwait
sbb
mov
xor
hlt
lea
cs
xor
dec
arpl
pop
pop
pushf
lds
movsb
mov
outsl
mov
push
stc
mov
cmpsl
sarl
les
outsb
xchg
imul
and
cmp
sbb
lods
jge
mov
dec
out
out
fistl
mov
sub
xor
lods
xorl
or
nop
add
jl
mov
and
push
stos
loope
jae
mov
inc
ficompl
inc
negb
out
jns
mov
out
repz
sub
push
xchg
add
cmp
sti
movsb
pop
insb
fisubl
in
mov
repnz
mov
xor
enter
adc
dec
push
mov
movsb
sbb
adc
lods
fldt
mov
loope
push
push
repnz
inc
fistpll
add
mov
add
nop
push
clc
xchg
inc
and
scas
and
and
sbb
pushf
mov
stos
movsb
jl
std
adc
sbb
sub
arpl
pushf
xor
lret
scas
mov
xor
scas
sbb
js
mov
addr16
ficomps
mov
lods
and
test
or
xchg
mov
repz
scas
jb
cmp
jmp
pop
mov
sbbl
leave
xchg
lahf
sub
and
mov
or
and
pop
mov
mov
jl
sbb
lcall
mov
jns
sbb
in
jne
jle
repz
scas
mov
push
pop
pop
mov
pop
sbbl
out
jbe
js
jg
popa
sahf
sbb
roll
ds
xor
sbb
loope
lret
movsb
and
adc
mov
std
mov
sub
xchg
pop
sub
fcoms
cmpsb
lock
jb
ds
rorl
cmpsb
jne
mov
jl
xor
adc
push
cwtl
dec
fwait
or
xor
xchg
pop
ds
mov
ror
cmp
pop
insl
scas
ror
pop
push
fdivrl
lods
dec
cmpsb
mov
hlt
ljmp
arpl
push
push
jns
xchg
in
lret
sahf
js
fistl
int3
lret
sbb
in
mov
orb
addl
dec
xchg
loop
pop
pop
pop
mov
aam
in
xor
les
adc
inc
push
jns
xor
xchg
mov
cmp
imul
out
scas
dec
in
cmp
imul
ja
cmp
and
pop
sbbb
out
mov
xchg
loope
icebp
jl
fbld
iret
cmpl
repz
mov
sbb
jae
movsb
jp
ja
cli
adc
and
dec
std
sbb
sbb
cmp
and
icebp
arpl
enter
push
das
pop
mov
call
mov
inc
out
pop
add
lcall
sbb
mov
or
movsl
jnp
xor
je
mov
dec
xor
sbb
out
mov
nop
je
int
cmp
adc
sbbb
inc
je
sub
xorl
pop
popf
test
adc
dec
dec
cmp
in
xchg
cltd
inc
cmp
iret
sub
adc
popf
scas
and
mov
inc
mov
fld
daa
inc
adc
psadbw
xchg
std
inc
cltd
shrb
inc
fimull
sbb
incl
mov
std
sbb
or
fcoms
mov
cmp
sub
pop
das
pop
jb
cmp
out
int
jl
pop
addr16
pop
out
xor
xchg
bound
in
test
push
dec
lods
or
cld
push
arpl
in
pop
sbb
ss
stc
mov
fldl
cld
subb
lret
testb
scas
xchg
xor
inc
mov
scas
lcall
ret
rolb
adc
mov
scas
mov
shlb
pop
add
push
aad
cmp
xor
pop
js
int
sahf
xor
adcl
pop
pop
xchg
mov
push
leave
xchg
push
loopne
xchg
int
adc
push
sbb
fstpl
jns
daa
adcb
pusha
sbb
cwtl
leave
loope
je
jl
push
jne
inc
sub
mov
popf
push
cs
push
xchg
fcomps
cmp
das
fmull
arpl
aad
add
xor
scas
repz
or
mov
ret
cmc
movl
mov
leave
out
loop
insl
cmp
adc
mov
in
xchg
add
xor
add
mov
cwtl
mov
inc
enter
sub
push
pop
ja
imul
les
cmc
test
enter
or
dec
loope
jmp
insb
stc
jae
rorl
hlt
mov
add
in
and
adc
shlb
shlb
mov
push
xchg
popa
adc
int3
nop
clc
sub
jp
cmpsl
das
loope
mov
pop
std
mov
clc
push
in
fsts
fstl
mov
pop
cmpsb
icebp
xchg
mov
insl
or
inc
shld
testb
mov
sahf
mov
jbe
xlat
pushf
xor
sbb
lods
stos
fs
push
je
imul
out
popa
add
aas
bnd
aaa
clc
ret
aas
cmp
cmc
cmpsl
cld
push
jmp
movsb
xchg
inc
xchg
or
lds
lods
mov
mov
ja
xor
push
sbb
cltd
gs
imul
xor
insb
add
add
xor
outsb
jne
or
jae
jne
fstl
fnstsw
sbb
push
xchg
add
rol
and
std
cltd
cld
dec
cmp
mov
cwtl
gs
sub
jb
and
xchg
shlb
test
cli
pushf
dec
roll
dec
in
pusha
outsb
push
and
mov
push
aam
in
test
fstps
or
mov
mov
push
fidivrl
push
or
inc
inc
mov
data16
adc
and
xchg
mov
cmc
repnz
repz
outsl
mov
les
jl
ficompl
out
sti
and
inc
pop
xchg
jbe
mov
push
fucomip
xor
adc
mov
mov
dec
adc
in
das
push
mov
out
test
or
scas
xchg
lcall
leave
stos
fistpl
inc
sbb
mov
pop
fdivrl
ret
xor
dec
es
mov
fistpll
lret
mov
aad
imul
notb
cmp
popf
test
fisttpll
lahf
or
es
clc
jle
xchg
es
or
xor
aaa
call
lret
dec
xchg
repnz
cmpsl
test
jbe
js
push
jae
ja
jp
stc
xchg
mov
sbbl
test
pop
xor
cmp
and
mov
mov
insb
sub
adc
call
mov
mov
roll
mov
addb
xchg
int
fsubrp
shrb
adc
scas
dec
in
cmp
pop
mov
xor
fidivrs
iret
imul
or
repnz
daa
adc
call
adc
sti
inc
or
test
sbb
dec
pop
and
mov
aas
xor
dec
iret
mov
pop
pop
stos
out
mov
les
mov
in
push
rol
cmp
aas
outsb
cmpsb
dec
and
ret
addl
ret
movsb
mov
xchg
pushf
sub
mov
inc
popf
je
adc
adc
mov
jmp
sbb
add
bound
xchg
jbe
push
mov
ret
push
jae
int3
movsb
cmp
cmpsl
dec
rol
call
test
sarl
sub
out
shlb
loope
movsl
icebp
imul
mov
add
mov
xor
arpl
adcb
sub
xor
das
mov
gs
xchg
test
and
fnstcw
inc
repnz
fisubrl
cmc
cmp
pop
faddl
adc
aam
xorl
push
and
cmp
sbb
lcall
lfs
jnp
cmp
pusha
idivl
push
mov
pop
cmpsb
and
jle
ss
cmp
and
xor
xchg
pop
shl
cmp
xor
adc
loopne
add
sarl
inc
lods
rcrb
subb
cmpsl
and
loope
enter
sub
notl
cmp
mov
xor
mov
decb
enter
jmp
fildl
call
dec
rclb
nop
dec
push
cld
xorb
out
out
loopne
jne
sbb
sti
xchg
outsb
jecxz
cmp
enter
cmp
adc
mov
data16
mov
cltd
jo
jo
cli
call
aam
ret
pop
repnz
add
lahf
xchg
mov
adc
in
stos
mov
xor
insb
test
sbb
sahf
out
popa
cs
mov
inc
std
cmpsb
push
daa
sahf
arpl
clc
inc
test
fsubrl
inc
push
imul
xlat
ret
mov
cmc
push
sbb
dec
loope
icebp
divb
and
mov
dec
mov
andb
das
ja
cmp
or
xor
stc
push
inc
mov
push
jb
insb
inc
push
mov
ja
hlt
mov
loope
add
notb
jb
js
inc
cld
or
sti
stos
push
mov
bound
fwait
insl
rorl
push
jmp
xlat
ljmp
ss
adc
fsubrp
decb
roll
jge
clc
fldln2
ss
aaa
std
jmp
cs
jns
cld
out
sbb
sbb
test
les
adc
addr16
out
pop
out
mov
pop
loopne
addr16
add
or
pushf
popa
and
insl
loopne
in
adc
sub
adc
mov
cli
pop
mov
call
iret
inc
outsl
repz
out
popf
outsl
mov
pop
mov
insb
pop
cmp
sbb
into
daa
iret
dec
xchg
jle
fs
out
cmp
xchg
incl
sti
pop
push
xchg
movsb
push
xor
xor
fcomip
mov
outsl
stos
mov
mov
in
pop
lock
mov
jnp
jbe
ret
stos
in
leave
push
fisttpl
add
mov
dec
add
cs
addl
or
xchg
stos
addb
add
and
mov
test
xchg
inc
std
inc
xorb
push
mov
cmc
push
xor
jp
scas
mov
insb
mov
rcrb
ret
dec
pop
cmp
out
inc
xchg
adc
loopne
mov
mov
xchg
lods
lods
jge
mov
add
or
sub
test
xchg
sbb
push
push
sbb
lock
fyl2x
das
aam
subb
frstor
nop
jbe
inc
dec
movsb
sarb
clc
cmpb
insl
dec
popa
xchg
mov
add
lods
data16
jb
xchg
jmp
add
pop
or
adc
xchg
mov
mov
vshufps
mov
shlb
jbe
mov
mov
cmpl
sbb
test
mov
xor
shl
add
mov
mov
push
test
pop
or
add
jge
sub
jmp
lea
pop
filds
test
stos
inc
daa
cltd
mov
ljmp
jb
push
push
or
adc
pop
mov
adc
xchg
rcrb
mov
sub
psubusw
les
jae
notb
arpl
sbb
push
dec
cmp
and
push
xchg
mov
dec
lea
dec
jl
sub
out
push
fwait
pusha
or
stos
mov
push
std
cmpsb
push
scas
inc
pusha
int3
pushf
sub
push
int3
cltd
mov
mov
stos
mov
mov
popa
insb
pop
adc
mov
ret
pop
aas
mov
in
mov
dec
adc
stc
fsubs
in
xchg
cwtl
testl
lock
lcall
xchg
xbegin
dec
dec
adc
sub
jne
dec
pop
sbb
shl
movsl
mov
pop
je
mov
inc
inc
stc
sub
jo
cmpsl
push
scas
aas
pushf
mov
push
iret
test
cmp
push
adc
jns
je
sahf
dec
add
mov
js
pusha
pusha
rcl
das
lods
inc
pop
aaa
mov
xchg
xchg
add
or
cmp
out
daa
or
in
push
aas
lods
lds
out
and
mov
jns
mov
cmp
mov
mov
mov
sub
scas
inc
mov
pop
cmpsb
xor
and
mov
lret
sbbl
pop
loopne
aad
mov
mov
pop
sbb
das
shl
shll
cwtl
decb
inc
test
popf
sub
dec
sahf
sti
xor
xor
jae
enter
push
pop
dec
in
js
push
int3
sub
xor
mov
mov
cli
cwtl
loope
add
scas
mov
or
pop
clc
mov
xchg
pop
push
into
dec
pop
or
outsl
aam
popf
sub
add
jbe
push
scas
xchg
mov
enter
sub
rorl
or
xchg
movsb
cmp
inc
jmp
xlat
dec
mov
add
rcl
repnz
mov
or
mov
scas
jmp
sbb
jbe
stos
in
loop
repz
iret
adc
jge
in
mov
push
push
xchg
fiaddl
std
mov
scas
shll
xchg
lods
lock
aas
loopne,pn
mov
mov
ret
or
repz
mov
ret
cli
ss
sub
pop
fidivl
loop
or
add
and
pop
popf
xor
push
std
lock
sub
push
mov
lret
xor
jg
lea
enter
sbbl
mov
pushf
adc
orl
lret
mov
jo
mov
ja
jge
int3
push
out
mov
divb
add
into
adc
std
wbinvd
pop
sub
cwtl
push
mov
push
ljmp
mov
cwtl
fisubrl
mull
in
in
inc
push
ljmp
gs
and
outsl
mov
xor
fiaddl
cmc
push
pop
mov
sbb
jnp
mov
imul
inc
movl
cmp
mov
mul
rol
adc
loop
rcll
dec
out
mov
insl
ja
sbb
je
mov
xor
inc
and
add
push
push
mov
mov
lret
in
fs
inc
test
xchg
dec
std
xchg
ss
mov
sbb
sub
iret
ret
jle
nop
pop
repnz
jns
add
sub
xchg
frstor
sbb
xor
mov
stos
lods
push
test
mov
fs
sbb
add
xorl
jge
call
idiv
popa
sub
iret
int3
lahf
push
xor
or
aas
jbe
jns
aam
add
add
call
ret
mov
and
dec
insl
js
mull
lds
inc
fisubl
loop
lcall
dec
push
fmul
imul
lret
mov
jmp
insb
xlat
neg
and
mov
out
shrl
mov
pop
cwtl
xor
js
shrb
jp
stc
mov
jl
rcll
cmp
aad
idiv
stos
aam
sbb
in
dec
repnz
out
sub
fnstsw
mov
add
add
int
xlat
or
and
cltd
jge
js
scas
ss
pop
rcrl
jmp
lahf
das
pop
addr16
pop
or
xchg
arpl
push
fwait
push
fbstp
lahf
or
push
imull
arpl
lret
mov
rorb
inc
jno
hlt
loop
pop
push
or
or
in
sbb
stos
std
push
mov
movsl
jo
dec
add
lds
mov
push
aaa
and
and
dec
xor
push
out
push
fwait
lock
xchg
mov
out
cmp
jle
sbb
into
xchg
xchg
dec
loop
lcall
addr16
inc
push
popa
sbb
ret
adc
or
xchg
repz
jmp
fisubl
shll
lods
pop
rclb
adc
xchg
sbb
push
jmp
sahf
xchg
mov
fsubl
lcall
popa
cwtl
mov
mov
push
pop
inc
mov
test
loop
fistpl
cwtl
loope
std
inc
adc
jno
ja
xchg
dec
xor
cmp
dec
mov
repnz
mov
sub
sub
repz
rorl
lret
stos
inc
aad
pop
add
and
pop
bound
adcb
push
lahf
popa
imul
ret
dec
pop
mov
bound
test
sahf
leave
mov
lods
subb
mov
push
test
xchg
pop
clc
xchg
ds
testb
lret
sub
cmp
push
sub
lret
orb
cmpsb
mov
sbb
stos
or
ja
loopne
xor
test
mov
cmpsb
mov
shlb
inc
mov
ljmp
fcoml
ljmp
jne
sbb
and
push
and
mov
jle
outsb
vcomiss
or
mov
lock
ljmp
push
jnp
cmpsl
cld
or
ss
call
xchg
rorl
shlb
xchg
addr16
cmp
sti
outsb
sub
daa
fidivrl
fwait
pop
in
ds
in
sub
rcl
cmp
ret
loop
jmp
addr16
push
add
fdivl
imul
jae
pop
adc
lret
lcall
sahf
inc
mov
sbb
push
icebp
imul
sbb
ds
das
iret
mov
arpl
int
cs
push
ret
or
cs
pop
pusha
addr16
adc
ss
sbb
mov
mov
test
mov
aas
inc
mov
adc
jo
rclb
mov
pop
lock
push
mov
out
ja
pop
rcl
insb
add
repz
xchg
ds
mov
pushl
filds
mov
mov
nop
stos
in
sbb
inc
mov
dec
jmp
add
dec
mov
cld
jge
push
sbb
mov
loope
or
mov
sbb
sti
imul
jle
adc
adc
into
movsl
shrb
stos
adc
pop
xchg
xchg
sub
fstps
dec
mov
adc
dec
leave
rcl
cmp
pshufw
cmc
in
xor
xchg
dec
shlb
mov
fisubrs
pusha
fwait
aad
pop
and
sub
nop
rclb
pop
fisttps
and
outsb
add
mov
and
lret
push
rolb
jmp
jnp
roll
push
xor
test
dec
mov
inc
push
fsub
scas
push
dec
stos
xor
xchg
movl
xchg
jg
js
out
mov
das
xor
mov
divl
lret
adcb
movb
pop
movsl
xor
rcrl
jnp
inc
cmc
fucomip
es
mov
or
add
xchg
jb
lods
aaa
jae
sbb
pop
dec
dec
fsubr
or
xor
add
add
lcall
lock
lock
mov
aam
pop
cs
jbe
addr16
test
mov
jb
das
mov
call
dec
loopne
daa
in
jo
addr16
add
enter
out
adc
in
or
push
sahf
clc
adc
cld
in
loope
and
insl
jl
dec
daa
sub
xchg
ret
inc
ffree
lahf
sub
popf
or
mov
cs
cwtl
lea
pop
xor
pop
bound
frstor
loope
ret
add
shll
test
aam
and
loopne
and
pop
push
sbb
fs
ret
fildll
mov
or
or
mov
mov
xchg
fbstp
sub
dec
scas
inc
jg
in
imul
leave
push
adc
add
hlt
xlat
repz
adc
sahf
jne
lock
jg
adc
sbb
iret
fs
jge
nopl
shrb
fadd
sbb
dec
inc
jno
lahf
imull
mov
pop
mov
or
lods
cltd
and
pop
frstor
out
fwait
xor
jl
pusha
mov
inc
inc
shrd
fidivrs
mov
movsl
xchg
fucom
notb
ljmp
dec
mov
push
mov
in
cmpsl
add
ljmp
xchg
pusha
dec
icebp
mov
sbbl
jl
lea
ja
mov
jp
jg
aas
inc
cmp
sbb
dec
adcb
and
fwait
xor
inc
xchg
or
push
js
push
stos
inc
xchg
movsl
push
sbb
neg
jno
adc
clc
xchg
js
dec
dec
push
cltd
sbb
mov
sbb
je
hlt
inc
insl
ja
sub
jns
or
add
or
mov
adc
pushf
push
mov
shl
das
and
xchg
dec
mov
pop
dec
mov
int
push
pop
cmp
pop
dec
cld
xor
sub
dec
or
popa
xchg
cltd
inc
addb
sahf
sbb
dec
mov
ret
ret
in
bound
xchg
in
pop
jmp
pop
mov
loop
sahf
mov
add
rep
ffree
xor
inc
mov
or
mov
mov
lods
add
xchg
pop
jno
cmpsl
clc
dec
loop
sbb
jp
stc
lock
or
jecxz
aad
dec
sub
xchg
jle
lret
sti
mov
dec
add
jp
sub
and
shll
mov
clc
mov
cld
pusha
cld
adc
test
pop
cmc
data16
cwtl
sub
aad
sub
ja
mov
dec
jo
jae
push
cmpsb
in
jge
add
mov
stc
push
addr16
inc
roll
push
push
test
cmpsl
ds
pushf
and
xchg
inc
lods
dec
pop
aaa
int
orb
mov
es
mov
cmp
xchg
popf
aas
sbb
in
lahf
ss
mov
mov
jno
addr16
dec
push
scas
decl
xor
lds
cltd
rcrl
mov
and
das
je
jecxz
xchg
push
je
fdivl
cld
stc
add
fstl
aas
push
and
testb
das
movsl
mov
pop
mov
add
pop
out
pop
and
cmp
push
lcall
push
xor
leave
mov
adc
xor
cli
loopne
aas
push
pop
adc
lret
dec
shrl
les
imul
xlat
jnp
sbb
sbb
mov
bound
fwait
dec
loopne
mov
or
cmp
in
loope
fildl
inc
sbb
in
fcomi
iret
lock
inc
push
lods
cld
aas
fadds
sub
jnp
enter
sbbb
pop
icebp
push
aaa
int3
push
jmp
aas
clc
lret
cwtl
fdivl
in
into
jp
ds
pushf
orb
fsts
movsb
mov
push
sarb
xor
sti
fistpll
stos
pop
shrl
loope
or
mov
pop
or
popf
jo
popa
mov
jae
dec
jecxz
sub
dec
movsl
push
or
add
repnz
cli
fnstenv
pop
sbb
cld
pop
mov
rol
pop
les
dec
imulb
add
mov
cmp
mov
aam
push
adc
sbbb
add
stos
add
push
repnz
fyl2x
fsts
adc
xor
ret
dec
xorb
xor
xor
shufps
nop
mov
pop
fsubs
jg
testb
inc
jb
xchg
call
add
mov
insb
jge
enter
out
lea
mov
pop
leave
xchg
rorb
cmc
add
mov
gs
mov
dec
xchg
ds
dec
int
movsl
dec
dec
je
mov
out
movsb
repnz
inc
adc
and
add
test
ja
pop
and
push
mov
rep
stos
jmp
sub
and
inc
out
push
popa
fstpl
dec
add
jg
inc
mov
mov
fs
fmulp
dec
test
ror
hlt
sbb
fxch
pop
jne
cmp
insb
sbb
fimuls
daa
lea
test
shll
in
add
call
adc
movsb
push
xor
mov
fisubrs
pop
dec
cmp
out
or
dec
adcb
mov
ljmp
push
imul
int3
inc
aaa
xor
push
push
sub
and
xchg
push
push
sahf
push
mov
divl
mov
dec
mov
stc
das
scas
inc
popa
xorl
and
out
lds
inc
and
scas
outsl
rorl
jmp
inc
jb
push
in
adc
mov
fisubl
cmpsl
and
add
xchg
out
fnop
mov
fidivs
incb
sbb
std
dec
and
xchg
repz
shlb
push
xchg
jne
js
and
cmpsb
or
orb
jl
lods
fistpl
rorb
mov
test
push
xchg
pusha
stc
mov
aad
cld
das
adcb
les
mov
jbe
xchg
int3
lods
dec
pop
fsubrp
sbb
sub
stos
daa
dec
call
push
fcompl
lods
aas
ret
std
mov
mov
idiv
fldt
inc
push
es
stos
push
inc
or
loop
mov
stos
mov
subb
cmp
insl
int
outsb
decl
mov
sbb
mov
inc
cmp
arpl
sub
subl
sub
lahf
pop
roll
ret
rcll
jae
mov
mov
int3
pushf
xchg
aad
or
out
out
pop
loopne
cmp
mov
inc
std
fwait
sti
sub
stc
jecxz
std
xchg
sbb
dec
dec
mov
fdivl
sbb
shrb
fadds
pop
rorl
lea
lret
mov
pusha
fisttpl
add
mov
or
dec
and
push
and
shr
repnz
jbe
inc
fisubs
jmp
xchg
movsb
and
and
xor
dec
inc
lcall
or
loope
dec
jle
dec
jo
pop
cld
and
inc
sbb
in
jle
es
out
pusha
mov
into
test
fsubl
cmp
outsl
jb
insl
aaa
jbe
mov
cltd
in
data16
xor
pop
jl
dec
lea
pandn
xor
dec
shll
out
loope
sbb
jmp
popf
pushf
pop
cmp
aaa
or
cmp
jle
or
mov
inc
sub
scas
jg
pop
sub
mov
inc
push
cltd
jmp
cmp
test
mov
sti
ds
js
nop
das
lds
lahf
sbb
fcomps
js
test
or
adc
imul
jae
add
cmp
mov
es
or
sub
push
xchg
lahf
push
scas
sub
or
out
outsb
sub
mov
mov
sub
ret
inc
hlt
fldenv
push
rol
mov
sahf
push
push
mov
inc
out
sbb
pop
dec
lea
or
adcb
xchg
pop
mov
cs
push
xchg
in
mov
add
mov
scas
mov
dec
hlt
sbb
mov
dec
jno
xchg
push
add
sbb
dec
mov
xor
adc
cmp
and
into
xor
or
adc
jae
jle
fsubl
scas
lea
or
jbe
pushl
lods
sbb
jge
jne
andl
sbb
outsb
std
cs
mov
rcrl
xchg
fdivrs
bound
mov
je
cmc
dec
mov
sub
add
push
out
sbbl
xchg
aaa
frstor
inc
mov
mov
cmpps
fstl
cltd
push
xchg
scas
xor
in
xor
lret
cmpsl
enter
mov
shrl
jb
fisubs
dec
mov
mov
mov
rcrl
out
sti
adc
xchg
jp
mov
inc
xchg
mov
lods
insl
add
cmp
xchg
jecxz
push
lods
pop
add
aaa
mov
xor
sub
sub
sub
jbe
mov
clc
xor
xchg
xor
xchg
cmp
add
pop
xchg
insl
loopne
stc
mov
aaa
jae
push
mov
adc
inc
pop
hlt
fchs
xchg
mov
dec
popf
mov
xlat
inc
fisubrl
leave
popa
les
rcrl
mov
push
cli
jne
dec
xchg
sub
loopne
jge
mov
data16
or
imul
stos
cmpl
scas
ljmp
iret
adc
outsb
lcall
pop
loope
mov
sbb
pop
jg
xorl
cs
popf
pop
in
nop
decb
cltd
mov
jb
loope
notb
cmpsb
pop
sbb
add
mov
aam
inc
sbb
mov
mov
mov
add
ljmp
clc
stc
mov
jbe
fiaddl
sahf
or
ret
add
popf
stc
roll
cmp
pop
mov
sahf
aas
ljmp
jmp
sti
xchg
adc
sbb
sbb
cmp
scas
nop
sub
rorb
clc
icebp
inc
stos
lods
add
adc
insb
mov
outsl
jo
ret
nop
pop
pop
pop
insb
push
cltd
dec
dec
sti
and
ret
mov
mov
incb
dec
xor
out
outsl
popf
outsl
mov
mov
adc
out
mov
push
arpl
cmp
imul
insb
scas
jns
jns
loop
dec
jle
jecxz
insb
test
adc
out
xchg
shrb
fs
rorb
xchg
mov
pop
cltd
gs
lock
ja
xchg
sub
repz
mov
add
sbb
jne,pt
jns
jmp
cmpsb
push
pushf
jmp
fistpl
pop
divl
arpl
cwtl
jl,pt
fstl
dec
sub
scas
fildll
sub
xchg
cmpl
in
mov
dec
pop
out
cmpsl
pop
jno
pop
fwait
hlt
stos
fidivl
dec
test
lret
add
js
adc
sub
mov
movsb
rclb
push
cli
mov
fdivrp
mov
fst
outsb
sbb
add
divl
pop
rcrl
out
daa
fidivrs
pmuludq
dec
mov
lcall
and
fcoml
lods
mov
mov
inc
lret
bound
jb
and
jmp
mov
adc
and
and
ss
cmp
xchg
dec
lea
xchg
pop
dec
mov
repnz
or
mov
cld
shl
mov
jge
jecxz
addb
lcall
dec
fistl
push
push
gs
xor
pop
int
addr16
lahf
mov
imul
xor
pop
arpl
rol
js
insb
scas
test
sbb
aad
rcrb
mov
loop
push
aas
push
jbe
lock
dec
subb
push
outsl
xor
pop
push
cmp
jle
push
std
adc
popa
inc
test
imul
push
mov
js
test
insl
cltd
and
mov
jno
adc
sbb
out
push
and
ja
add
call
loope
mov
xor
mov
lahf
lods
inc
push
xor
ret
xchg
cmpsl
push
mov
pop
in
inc
out
dec
loope
pushf
push
aaa
add
dec
hlt
and
xchg
in
mov
jmp
dec
xchg
rcr
inc
adc
cmp
sub
icebp
adc
data16
mov
mov
pusha
adcb
rol
and
sbb
popf
ret
pop
iret
cs
or
data16
scas
push
aam
fnstenv
imul
repnz
insb
repnz
clc
ret
sarl
imul
or
add
push
hlt
addr16
fcoms
pop
into
lret
add
mov
das
mov
pop
sbb
or
aaa
stos
fsubs
or
lods
call
loope
roll
repnz
sahf
pusha
cmpsl
cltd
and
cmp
xlat
or
and
sub
pop
rcll
xchg
dec
cli
or
daa
inc
dec
jecxz
xchg
mov
std
clc
aas
or
rcr
jb
pop
imul
bnd
xor
jge
cmp
dec
mov
ret
stc
push
sbb
stc
fsubrp
outsl
dec
xchg
jle
insb
xor
cmp
std
xchg
lods
pop
scas
xor
scas
mov
xchg
cmp
add
mov
mov
jge
loope
repnz
push
stos
mov
lret
std
jge
or
add
push
sub
movl
jle
xchg
jne
lahf
imul
or
jmp
lret
insb
insb
loope
inc
dec
in
adc
xor
insl
add
in
xchg
mov
or
or
cmp
lods
js
lods
mov
push
jnp
cltd
loop
dec
sbb
outsb
das
int3
mov
mov
mov
add
testb
insl
sub
jo
loope
xor
mov
mov
dec
jns
mov
and
mov
aam
test
pop
out
adc
stc
jb
mov
jl
and
sbb
repz
rcrb
shrb
inc
data16
and
mov
stos
repnz
arpl
data16
push
js
add
xor
xchg
xchg
xor
push
cmpsl
nop
int3
jg
dec
out
test
push
mov
dec
pop
xchg
cmp
push
xor
das
jo
jns
inc
push
sbb
inc
add
jge
cmp
mov
pop
pop
icebp
mov
test
enter
cmpsb
data16
mov
xorb
loop
mov
nop
push
out
jb
pop
int3
xchg
mov
mov
inc
stos
ljmp
xorb
cld
xchg
rcll
out
icebp
arpl
hlt
insl
loopne
lcall
rcll
push
xor
lret
or
notl
inc
dec
call
mov
sub
aam
lret
jb
sub
aaa
jg
pop
mov
les
pop
daa
stos
sbb
cli
push
sub
jo,pt
inc
test
inc
cmp
jbe
cwtl
inc
sarl
lret
xchg
push
lods
dec
mov
xchg
jmp
xchg
sub
inc
mov
cmp
cmpsb
and
mov
push
mov
cmp
ds
sahf
pop
dec
adc
sub
inc
xor
popa
lods
repnz
shlb
adc
ds
dec
sub
jbe
sbb
mov
adc
outsl
adc
or
mov
cltd
stos
mov
shrl
mov
or
push
mov
ja
into
call
jno
xchg
daa
stos
mov
stos
das
pop
push
inc
and
jne
iret
stos
dec
sub
addb
inc
xor
and
dec
notl
xchg
add
test
nop
pop
or
and
psubsb
push
pop
pop
jbe
lods
shlb
js
mov
mov
imul
sbb
rolb
mov
subl
pop
into
push
orb
pop
push
inc
scas
pop
mov
push
shrb
adc
sub
jb
or
shlb
shr
int
jno
subb
push
repnz
sub
stc
adc
mov
stc
jle
xchg
cltd
pop
pop
xchg
mov
sbb
pop
fwait
jg
push
inc
sub
cld
ja
push
and
sub
rol
pop
std
and
mov
pop
mov
jo
fidivs
iret
ljmp
aad
leave
movsl
jne
xor
cmp
cmp
xlat
sahf
push
jp
fisubrl
fs
mov
cmp
fdivrl
bound
jno
faddp
pop
sahf
cmc
add
ja
movsl
cmp
xchg
repnz
jns
pop
jmp
sbb
cmc
mov
imul
pop
jb
mov
push
cli
movaps
mov
mov
jge
lock
das
or
cld
ds
fisttpll
ret
lret
pop
cmp
andb
out
push
push
test
daa
and
push
dec
imul
repnz
jecxz
mov
daa
sub
jecxz
inc
cmp
xchg
je
das
fs
mov
addr16
jp
or
das
and
ret
outsl
push
mov
jbe
es
add
enter
jle
out
xchg
test
push
lcall
and
in
pop
rclb
jl
xchg
cmc
nop
add
pop
jecxz
mov
pop
mov
ds
add
dec
loope
xor
add
loop
mov
xor
mov
adc
test
xor
jle
inc
sbb
fwait
push
cmp
xchg
inc
add
cmp
xchg
fadd
iret
fs
aaa
jmp
rorb
xor
mov
out
jb
in
mov
into
out
add
add
test
test
jmp
stc
movsb
popf
xor
sbb
mov
cmp
mov
sub
mov
jne
cwtl
add
jo
add
mov
and
dec
mov
pop
insb
lahf
mov
std
add
pop
lcall
dec
and
mov
out
mov
popa
mov
dec
push
pushf
push
call
pusha
jmp
loopne
mov
or
mov
xchg
mov
orl
aas
loop
push
clc
pushf
inc
mov
rolb
mov
test
xor
mov
cmp
hlt
leave
js
mov
push
sbb
sarl
andb
sbb
rep
add
cmp
mov
push
mov
xor
xor
pop
push
out
mov
dec
sub
cmpsl
pop
sub
mov
cmp
fwait
dec
es
ds
jns
bound
rol
push
sub
into
outsl
xor
rorb
dec
in
pop
aaa
test
pop
pop
add
rcrb
mov
cltd
outsb
and
mov
cmc
cmpb
icebp
mov
or
lahf
ds
ret
fwait
sti
into
cwtl
cmp
cmp
mov
and
sbb
push
xchg
and
dec
pushw
jp,pt
insl
aas
stos
aas
mov
aam
dec
sub
dec
shrl
pop
pop
mov
add
aad
dec
sub
mov
cmp
or
add
sub
dec
scas
or
mov
sti
dec
fldt
jl
or
bnd
imul
lods
push
loop
jns
decb
in
cld
inc
push
mov
rcr
push
push
out
test
mov
jne
bound
fwait
cmpsl
aas
push
jb
jle
push
ss
sbb
cmc
pop
mov
pop
aad
add
lcall
cwtl
das
jne
nop
mov
xchg
mov
movsl
loopne
xchg
out
xchg
outsb
fwait
rorb
iret
in
adc
cmp
mov
dec
dec
loope
xchg
lret
loop
aad
loope
inc
or
cmp
sub
cwtl
pop
call
out
xchg
dec
bound
enter
out
fnstenv
sub
imul
into
sub
int3
iret
bound
rcl
lods
mov
sub
or
out
daa
mov
inc
pop
daa
add
int3
jo
sub
mov
mov
imul
insl
adc
lahf
repnz
xor
dec
lds
clc
scas
ret
xchg
jb
testb
enter
scas
stos
mov
inc
xor
pop
mov
push
cmp
pop
mov
add
pop
loope
xchg
xchg
divb
cmp
or
push
into
push
mov
test
add
add
mov
mov
pop
out
pusha
inc
jae
dec
mov
add
xor
dec
fwait
xchg
fiaddl
push
mov
xchg
xor
adc
cmp
or
or
jae
dec
sub
xlat
insl
out
rcrl
je
cmp
jmp
pop
jbe
and
notl
push
push
into
sbbl
jge
or
jge
mov
mov
lcall
sub
mov
jecxz
push
popf
lods
adc
movsb
js
or
mov
or
lock
sub
mov
mov
mov
pop
pushf
jl
xchg
pop
loope
dec
inc
xchg
pop
in
mov
fidivs
push
cmc
xor
mov
push
sub
and
push
clc
xor
cwtl
mov
cmp
and
in
lods
dec
shlb
push
std
fs
push
scas
sbb
push
aam
cmp
loopne
stc
adc
adc
xchg
push
dec
stos
inc
ja
sbb
cltd
leave
loope
dec
mov
pop
jmp
pop
ljmp
lahf
pop
leave
xchg
jl
incb
clc
fcmovnb
insb
cli
pop
rorb
add
aam
dec
popf
and
not
jb
add
jb
sbb
dec
fsub
cmp
call
scas
in
fdiv
xor
adc
fistpll
int3
js
mulb
push
adc
dec
dec
sbb
lods
hlt
in
cld
lds
rcrl
arpl
aaa
sub
loop
mov
xorb
js
rcll
xchg
test
fadds
push
das
mov
fadds
pop
or
mov
inc
or
xchg
fmul
loopne
out
sub
lahf
xor
js
or
cmp
aas
sub
lahf
in
aad
es
xor
dec
sub
lds
push
mov
mov
dec
pop
push
and
out
fisubrl
jp
lea
scas
mov
dec
and
xchg
std
jo
loop
shl
cmp
jbe
mov
dec
mov
lahf
cmp
pop
and
out
mov
jo
cmp
push
outsl
in
std
rorl
fidivl
or
orl
adc
or
mov
fidivs
mov
pop
sub
loopne
jl
fstps
bound
outsb
pop
push
push
cmp
jge
mov
adc
jbe
sbb
iret
es
into
loop
enter
dec
cmp
mov
pusha
add
and
aaa
adc
inc
adc
xchg
pusha
mov
xchg
xor
sub
mov
and
inc
push
call
test
clc
andb
imul
mov
mov
adc
shlb
push
and
inc
fwait
or
aas
lock
add
cld
push
dec
mov
and
rcll
xchg
scas
es
fstl
dec
push
testb
test
or
mov
nop
mov
or
and
aad
adc
sbb
scas
xchg
incb
cmpsb
dec
add
arpl
mov
insb
pop
cli
xchg
dec
push
lds
stc
sbb
cmp
lret
cmp
test
movsb
mov
pop
aaa
rorb
sub
mov
cmp
fdivr
rclb
sbbl
fwait
vpsraw
fptan
inc
test
sti
ja
adc
test
inc
or
nop
in
test
add
sub
xchg
decl
std
icebp
sbbl
test
test
mov
lahf
fbstp
insb
fildll
jno
mov
jne
shrb
or
add
int3
push
fadds
add
dec
sub
xchg
sbb
orl
mov
adc
int
loop
xchg
push
lods
jo
jbe
sbb
pop
mov
push
pop
cli
hlt
outsl
xor
inc
out
repz
push
outsl
rorb
lret
orb
cmc
lods
outsb
add
arpl
aaa
into
aam
sub
xchg
loopne
int
mov
xchg
scas
dec
and
pop
mov
mov
ret
pop
dec
dec
dec
sarl
lods
nop
dec
dec
pop
mov
push
xchg
xchg
aas
sub
and
mov
mov
rcll
push
loop
dec
cmpsl
mov
dec
xchg
push
or
mov
push
popa
aad
inc
mov
xlat
xor
or
xchg
outsl
adc
fisubl
xor
and
dec
fneni(8087
js
hlt
fnstenv
lds
push
sbb
popf
xor
inc
lock
shll
insl
mov
leave
fbstp
push
cmp
outsl
sete
dec
pop
repnz
mov
test
je
test
fcomi
sub
mov
and
shll
lahf
inc
sbb
xor
push
pop
outsb
xchg
push
or
aad
pop
stos
mov
xchg
lret
add
jp
daa
leave
mov
fists
cmpsl
or
cmpsl
out
cs
imul
xchg
nop
insl
rorb
subl
pop
sub
mov
push
int
sahf
mov
inc
testl
or
mov
adc
pop
lds
jno
push
lret
lret
sub
stc
dec
lods
ds
bnd
lret
into
add
push
mov
insb
mov
add
addl
sbb
jne
loopne
into
fisubrs
mov
and
into
jo
mov
push
testl
push
mov
lds
adc
ja
leave
js
mov
mov
int3
cmp
cmp
fbstp
fstps
mov
decb
or
mov
mov
jg
push
lahf
mov
xchg
das
or
std
cltd
cmp
inc
fistps
jp
icebp
cltd
pop
push
inc
add
dec
push
sbb
jle
cmp
jl
shrb
inc
popf
jle
add
mov
jae
out
adc
testb
lods
jo
pop
mov
pusha
cli
into
xchg
sbb
aam
sbb
aad
ss
scas
sub
sbb
les
in
jb
jmp
sub
sbb
lret
adc
leave
add
sarl
outsl
sub
inc
cltd
shl
inc
xchg
pop
popf
dec
sarb
in
ret
movsl
push
jmp
and
adc
inc
loope
rolb
out
movsl
out
cmpsl
aaa
js
or
popf
xchg
jae
enter
fadds
hlt
popa
pusha
ret
mov
pop
lahf
test
sub
out
push
dec
outsl
add
cmc
push
loopne
adc
ret
pop
jp
mov
pop
mov
call
inc
sbb
jecxz
push
inc
push
fmull
rclb
mov
jmp
lods
js
sbb
mov
divl
mov
or
iret
adc
popa
add
cmpb
add
sub
nop
add
cmp
popf
stos
xor
std
insb
or
or
adc
or
sub
pop
jns
inc
out
jae
lock
jp
ss
mov
mov
hlt
push
lods
add
push
nop
mov
mov
es
rcrl
lods
sbb
inc
stc
push
jp
aaa
pop
lods
in
iret
xchg
js
mov
mov
jb
mov
jl,pt
lahf
cmp
push
jo
push
xchg
mov
pop
cmpsl
cmp
push
notl
aaa
cmp
cmp
xchg
aas
and
lahf
fs
cld
cli
test
xchg
and
push
pusha
jbe
out
orl
into
out
fwait
push
push
xchg
pop
hlt
or
std
add
ja
test
or
fstpt
cmpsb
cmp
lods
push
pop
and
sub
jne
sub
pop
cmp
mov
subl
jl
hlt
int3
xor
dec
or
fimull
cmp
scas
icebp
xor
xchg
test
or
mov
jge
jmp
sub
popf
push
sti
roll
call
icebp
mov
mov
ljmp
fisubl
jmp
outsl
fists
add
sub
xor
push
xor
scas
add
and
adc
xor
fdivs
pop
adc
pop
jnp
cmp
jp
pop
dec
mov
mov
into
mov
adc
loopne
jle
mov
inc
fimull
insb
add
push
loope
xchg
movsb
cmp
test
and
fildll
in
pop
jae
push
mov
int
cmp
jle
les
in
scas
loop
fbstp
fsubl
sub
ficoms
add
ret
rclb
mov
mov
sbb
pop
jle
js
and
jb
inc
sti
or
and
in
jg
dec
imul
into
mov
adc
sbbb
jbe
and
cmp
or
lahf
xor
movsb
add
fisubrs
add
daa
inc
push
mov
in
insl
rclb
imul
push
addr16
jge
xchg
insb
inc
adc
loop
and
push
push
dec
dec
jp
cmp
xchg
jg
sub
cwtl
in
inc
inc
xchg
xor
out
mov
cmp
or
aaa
mov
mov
fdivs
sarb
add
push
push
mov
cmc
fstps
fcomps
addl
sub
push
cmp
and
andb
mov
cs
into
add
cltd
test
jo
lret
mov
pcmpgtw
dec
and
andb
lds
and
mov
dec
push
lods
mov
xchg
ja
lods
bnd
push
rcrb
mov
jmp
jp
pop
repz
inc
fldt
dec
loopne
fnstenv
jo
pop
into
push
lods
xor
inc
gs
sarl
jns
shll
in
sbb
lcall
fwait
test
pop
mov
rorb
sbb
das
rorb
shll
ret
push
pop
lcall
popa
xor
aaa
jl
mov
inc
addb
stos
ja
inc
push
push
sub
push
sti
and
dec
jge
and
stos
lcall
inc
iret
inc
sbb
outsb
cmp
jge
mov
aam
insb
fxch
mov
dec
mov
test
stc
test
gs
push
das
pop
dec
push
jno,pn
seta
sarl
je
test
ds
push
and
imul
and
out
rolb
push
xor
dec
jmp
lret
push
stos
clc
int3
bound
fidivs
in
adc
jle
xchg
pusha
jno
jne
movl
pop
mov
mov
lret
repnz
sbb
rol
adc
pop
cmp
ds
push
cmp
loopne
subl
mov
adc
pop
push
fnsave
jo
mov
jb
out
fnstsw
lods
cmpsl
xlat
mov
and
push
mov
mov
repz
in
in
clc
data16
insl
int3
xor
push
stos
jns
adc
inc
pop
pop
repz
mov
sahf
int
inc
mov
enter
fidivs
pop
or
and
jl
mov
scas
jo
mov
mov
cli
rorl
repz
and
scas
cmp
sub
push
ficomps
shlb
add
lods
fistpl
je
adc
dec
jns
decl
rorl
mov
adc
push
or
adc
jns
mov
loop
cmp
inc
inc
xchg
pop
mov
pop
and
popa
idiv
rcr
add
movsl
js
pop
outsl
fiaddl
std
jecxz
ret
and
sub
lret
subb
and
mov
loopne
add
aaa
into
ja
dec
xlat
xlat
sbb
sbb
ja
xchg
leave
inc
orl
add
das
ja
leave
test
fsubrl
js
pop
mov
mov
pop
sbb
fcoms
orb
mov
sahf
dec
outsl
aas
mov
sbb
and
cmpsl
jp
adc
jl
insb
in
jno
idivl
es
add
sahf
lods
adc
sbb
inc
ret
push
mov
fldcw
xor
mov
or
jnp
mov
ficomps
inc
movsb
cli
out
mov
inc
mov
and
int
mov
xor
test
pushf
jo
sub
mov
lods
shrl
and
push
push
jl
xor
mov
sarl
jnp
mov
mov
jge
shll
xchg
lahf
stos
scas
out
xor
subl
xlat
inc
cmp
xor
push
dec
dec
roll
mov
jo
xor
dec
loop
ds
jns
je
out
mov
ja
test
adc
lcall
inc
leave
lods
xchg
test
mov
mov
push
notb
mov
pop
outsb
stos
xchg
jno
lcall
mov
fsub
in
lods
fistpl
ret
pop
outsb
add
pop
repz
es
pop
fistpl
ds
mov
loopne
and
jp
iret
mov
pop
repz
cli
sarl
jp
repz
test
pop
pop
and
add
cmp
mov
in
call
push
insl
fidivs
roll
std
push
or
fdiv
inc
stos
stos
andl
pop
mov
call
xchg
daa
push
jl
arpl
js
sub
add
stc
je
dec
in
push
negb
movsl
jno
int3
call
push
hlt
mov
dec
jmp
cli
adc
mov
pop
add
cltd
jge
and
sti
pushf
lods
jmp
sbb
push
lret
xorb
lea
shlb
xlat
cmp
int3
int3
repz
cmp
out
shld
lret
gs
outsl
push
out
pop
inc
dec
push
pop
fsubrs
lock
push
cmpsl
xorl
int3
stos
rcll
fwait
gs
test
cmp
in
stc
ficomps
add
jb
or
clc
dec
ss
dec
jecxz
cmp
sbb
dec
sbb
cmp
mov
push
inc
pop
mov
ret
cs
std
lods
fidivs
inc
xlat
out
mov
inc
push
xchg
loope
inc
inc
mov
sbb
cltd
pop
dec
mov
xchg
shlb
xor
jle
xchg
add
mov
les
push
icebp
out
pop
xchg
sub
mov
lret
push
pop
adc
pusha
sbb
or
jbe
icebp
and
mov
mov
dec
int
adc
stos
sub
jbe
push
scas
nop
push
adc
out
mov
aaa
into
jp
pusha
adc
cli
das
shll
xlat
outsb
push
inc
js
jns
je
scas
inc
addr16
out
lods
sub
cltd
in
or
sub
dec
call
leave
in
push
popa
inc
and
call
mov
add
ret
pop
jnp
inc
enter
and
scas
adc
jmp
dec
mov
mov
jno
ficoms
push
aas
dec
fildll
gs
stos
jne
fnstenvs
inc
mov
popa
loope
pop
adc
fidivs
stos
fldlg2
fisttps
inc
jl
mov
jnp
and
or
cmp
and
mov
leave
mov
xchg
cld
pop
adc
test
fwait
push
or
in
testb
ds
dec
cmp
jge
adc
pushf
into
dec
sbb
rcll
jnp
jae
or
push
mov
push
cli
xchg
push
jp
jnp
cmp
mov
fwait
pop
test
pop
mov
lret
addr16
lret
fnstenv
xor
outsb
bound
mov
push
lea
push
inc
lds
sbb
jecxz
and
mov
test
adc
cmp
add
leave
push
dec
leave
fsubrs
loopne
sti
arpl
fisttpll
int
pop
push
mov
in
push
aam
int3
ret
inc
popf
jg
out
das
inc
push
cld
or
fmull
les
jnp
xor
xor
test
ja
push
xor
test
fwait
sti
pop
lret
mov
push
push
call
jmp
rolb
mov
mov
scas
xchg
sbb
pop
add
and
xchg
in
rcrl
sbb
inc
arpl
mov
cmp
jns
cmp
popf
jmp
mov
outsb
inc
jl
jmp
gs
aam
in
add
pop
sub
xor
popa
jb
sbb
ds
out
mov
fsts
insl
jo
dec
cmp
pop
popf
ds
arpl
jo
imull
adc
sbb
aas
push
xor
mov
sub
jb
fisubl
loop
mov
lret
mov
leave
insb
xor
pop
fcmovb
push
mov
dec
repnz
jecxz
add
dec
push
or
jno
sarl
scas
dec
xchg
imul
mov
sub
xchg
dec
lds
pop
xor
xchg
pop
or
clc
clc
test
mov
or
dec
int3
nop
dec
mov
push
cli
jne
jge
fsubrl
popf
pop
dec
dec
cmp
cmp
jo
in
das
cmp
dec
pop
call
jle
test
imul
stos
fidivl
outsl
lods
inc
jp
mov
lret
push
shlb
xchg
push
mov
lahf
stos
push
lods
shlb
cltd
jbe
dec
popa
add
jne
push
push
xchg
adc
and
into
loope
scas
test
inc
cli
das
fsubrl
dec
or
xor
adc
adcb
dec
je
hlt
pop
ljmp
pop
add
sahf
pop
and
cs
sub
les
aam
cs
lcall
and
push
mov
sub
inc
jbe
cmp
ja
mov
imul
inc
push
popa
inc
ret
sub
or
in
xor
cs
out
popa
mov
inc
mov
int
popf
mov
push
popf
lods
inc
testl
loop
imul
lods
mov
mov
lret
mov
jmp
test
insb
or
sahf
cs
jl
jns
rol
jle
adc
dec
test
rcrb
sub
mov
in
pushf
cmp
hlt
add
lcall
jbe
aad
pop
jg
sti
fsubrl
dec
sbb
push
lds
in
lcall
pop
cmp
dec
add
fldenv
jg
sahf
std
and
inc
mov
pop
jb
and
inc
push
aas
stc
inc
pop
ss
jo
mov
dec
filds
mov
sti
daa
cwtl
sbb
mov
dec
lcall
inc
pop
inc
push
pop
mov
popfw
stc
adc
mov
xchg
loop
ret
pop
pop
mov
mov
adc
push
or
loope
sub
fdiv
push
outsb
sub
xor
sbb
mov
into
addr16
jg
cmp
stos
mov
mov
pop
fwait
jnp
and
add
testb
jl
in
jmp
fdivrs
pop
or
scas
out
in
mov
adc
jl
push
arpl
mov
inc
test
jl
ds
jb
add
jae
sbbl
stos
loope
jb
inc
mov
lahf
adc
imul
sbb
xor
mov
dec
gs
outsb
gs
sub
or
daa
xor
push
xchg
jne
inc
mov
push
int
jb
clc
ds
pop
jge
lcall
push
xchg
add
or
pop
and
pusha
aaa
test
dec
loopne
and
jp
sbb
inc
pop
inc
in
sbb
xchg
jo
ret
out
icebp
std
or
test
sarb
and
jae
loop
cld
pop
jo
sbb
aaa
jge
cmpsl
inc
jnp
mov
fwait
loope,pn
jl
lahf
shrb
rol
cmp
push
adc
icebp
subb
lcall
stc
and
adc
xlat
cli
lds
jecxz
cmp
stc
jge
js
xor
jmp
add
mov
add
aas
mov
roll
pop
cmp
cwtl
lret
adc
nop
lahf
mov
pop
adc
pop
ficoml
filds
push
shrb
xchg
movsb
mov
fadds
ds
xor
js
dec
mov
sub
insl
stc
pop
push
mov
inc
xchg
out
into
cs
in
nop
and
fimull
sbb
mov
jae
inc
fsubrp
sbb
push
data16
cmp
int3
mov
xor
pop
mov
xor
xchg
and
ljmp
sar
xchg
xchg
or
pop
sbbb
pop
push
fisubrl
mov
mov
xchg
inc
test
jns
and
adc
push
dec
insb
popa
loopne
sub
lods
xchg
adc
das
and
adc
xchg
cs
js
push
pop
mov
js
movsl
pushf
fbstp
in
repnz
xchg
in
fcoml
mov
pop
in
out
jl
pushl
adc
rorb
or
sub
push
lahf
mov
mov
aad
rcl
xchg
xor
lds
dec
jecxz
and
test
mov
enter
mov
mov
popf
out
cltd
sbb
xchg
mov
fwait
pop
fcomps
jge
push
jmp
in
shr
lcall
into
imul
mov
das
aas
push
xor
or
cmp
loopne
inc
sbb
add
subl
pop
dec
popf
mov
hlt
scas
in
lret
mov
or
cli
adcb
xor
pop
addl
add
cmpsb
aaa
test
inc
xor
mov
xlat
out
insb
sbb
lods
fidivl
sbb
xorl
push
aaa
or
cmc
mov
aaa
mov
lock
into
lods
int
xor
pop
ret
xorb
out
mov
movsb
outsl
sbb
push
or
inc
sti
mov
mov
out
scas
jbe
enter
mov
arpl
js
std
pop
pop
cltd
into
xor
inc
clc
out
sub
dec
loopne
fs
data16
push
es
add
fidivs
stos
inc
or
pop
ret
sub
xor
adc
lea
leave
jmp
mov
adc
jp
std
aad
fwait
xor
xchg
fidivs
cmp
subl
daa
stos
sub
scas
mov
jle
andb
incl
xchg
dec
pop
ret
daa
cmp
cltd
test
sub
outsb
aaa
pop
negb
pop
adc
pop
cmc
jmp
adc
test
popa
push
stos
sbb
stos
imul
insl
leave
decl
into
sub
inc
cmp
in
adc
cmp
dec
outsb
subb
dec
dec
add
push
adc
aaa
bound
test
test
add
cmp
cltd
out
mov
fcmovb
pop
loop
mov
add
xor
cmovbe
shr
repnz
cmpsb
cmpsl
dec
mov
mov
les
xchg
leave
fcmovb
test
jb
insl
mov
pop
xor
shr
xchg
hlt
cs
xchg
sbb
dec
test
icebp
sbb
push
jae
or
jns
push
mov
add
sub
loopne
repnz
mov
xchg
sub
pop
cmp
outsl
add
loopne
mov
push
adc
cs
adc
cmovo
mov
das
bound
xchg
dec
call
sbb
jp
xchg
fwait
mov
push
mov
aad
push
sub
repnz
fcmovnbe
fidivrs
in
mov
test
mov
or
fs
notl
loopne
dec
add
mov
jp
nop
imul
push
clc
lcall
or
dec
cli
xor
inc
lock
shl
int3
vsqrtps
or
repnz
sbb
movsb
ss
cmp
and
inc
call
mov
inc
dec
dec
in
iret
sub
add
retw
push
out
inc
push
int3
mov
in
sarb
add
mov
int3
adc
pop
dec
mov
sub
pop
sti
cmp
lret
lret
xlat
inc
clc
int3
in
out
inc
stos
stc
outsb
inc
scas
or
jmp
rol
clc
int3
pop
inc
push
ret
repz
stos
ret
fsubrp
jecxz
lret
mov
dec
sahf
mov
inc
in
popf
dec
xchg
cmp
xor
fs
mov
int
dec
insl
addb
test
leave
pop
jecxz
xor
orl
dec
lahf
jae
dec
mov
pop
sub
rcrl
es
arpl
cmp
popa
clc
icebp
jo
cmpsl
loop
sti
cmovb
inc
pop
int
push
rclb
jne
cmc
mov
sbb
inc
cltd
jecxz
lret
push
inc
bound
xchg
and
popf
push
add
and
mov
rcrb
sub
cmpsl
leave
enter
or
lods
test
dec
adc
les
movsl
dec
cwtl
adc
imul
andl
mov
dec
data16
addr16
cltd
out
imull
inc
cmp
pop
pop
pop
sub
rcrb
test
je
clc
popa
push
imul
test
sbb
shr
sbb
movsb
and
ficompl
jae
sbb
rorb
mov
lahf
rclb
xor
pop
jns
pushf
flds
in
adc
adc
bound
lea
push
cmp
cmp
xchg
addr16
test
jbe
add
add
dec
aas
imul
imull
mov
pusha
bound
jb
and
in
mov
sub
lods
xchg
dec
mov
cli
frstor
andl
lock
mov
mov
ds
pop
push
add
inc
xlat
or
jno
repnz
dec
mov
mov
add
lret
daa
adc
sub
pusha
into
aas
mov
mov
fildl
push
dec
fldenv
and
mov
pop
out
dec
jp
ret
dec
adc
in
cltd
test
shl
testb
and
push
push
je
mov
xor
int
imul
bound
push
inc
mov
mov
cld
dec
xchg
mov
xor
or
push
mov
popa
jnp
insl
and
gs
arpl
jnp
insb
push
inc
mov
ficoms
dec
movsl
clc
clc
fwait
jns
or
rorl
dec
out
and
scas
inc
test
or
adcl
je
rcrl
sub
std
cmpsl
mov
out
int
push
or
sbbl
jns
xchg
lods
sbb
ss
jecxz
add
repz
pushf
clc
dec
pop
mov
xlat
xchg
aaa
pop
ja
push
cwtl
jbe
mov
mov
xor
pop
push
pop
xor
insb
ja
ja
cs
outsb
jl
loopne
ret
push
xor
jbe
ret
aad
xor
sub
inc
test
mov
cmpb
mov
lahf
mov
lret
or
push
sbb
testb
fcomps
pop
cmovo
xchg
lods
xchg
stos
mov
add
mov
sbb
pcmpgtd
xchg
sub
daa
scas
mov
fisubl
shll
bound
outsl
cmp
sub
xchg
push
call
mov
shl
push
xchg
cmpsl
mov
jg
es
das
add
rep
xlat
cmp
loope
dec
pop
inc
jne
addr16
fisubrs
and
shrl
mov
imul
pop
icebp
sub
dec
sub
push
pop
xlat
adc
clc
inc
shll
or
pop
scas
mov
pop
mov
push
inc
imul
je
addr16
mov
or
adc
scas
mov
fiadds
and
inc
into
gs
das
pop
jbe
or
stc
inc
cwtl
cmp
dec
mov
into
add
arpl
pop
xchg
sub
add
outsl
xlat
outsb
mov
jg
xchg
in
ss
push
sti
call
xchg
jge
sub
push
xchg
ret
sub
int
or
xor
jmp
cmpsl
dec
push
jl
cld
insl
adc
cmpsl
ret
and
pop
enter
leave
fbstp
cmpsb
dec
cmp
xor
push
sub
data16
lea
daa
js
and
lods
mov
test
ja
test
call
sbb
daa
inc
mov
cltd
cltd
test
int3
in
fucomip
sub
dec
xor
xchg
lret
dec
lahf
cld
repnz
sbb
xchg
sub
push
fisubs
cmc
inc
popa
dec
push
sbb
jb
pushf
daa
test
pusha
mull
stc
adc
inc
imul
dec
imul
add
orw
loop
in
add
inc
or
sub
cmp
dec
fmull
add
mov
rcrb
add
jbe
shl
jmp
dec
stos
mov
pusha
mov
pop
sbb
ficompl
cmp
into
ficompl
xor
adc
jae
arpl
inc
jmp
inc
leave
and
ljmp
fldt
jl
mov
lret
scas
das
ret
pop
sub
dec
mov
inc
insb
lret
ret
jmp
sbb
xchg
int
out
test
test
cmpsb
popa
cltd
std
fnsave
lea
xor
add
fwait
pop
mov
and
lock
mov
fcoms
mov
cli
or
adc
and
adcb
jbe
iret
sub
push
imul
lods
repnz
sub
lods
nop
add
mov
fisttpll
mov
and
lea
inc
mov
mov
fdivs
inc
repnz
or
xchg
mov
fcomps
pop
in
lods
cs
cld
aam
or
dec
jno
and
cmp
insb
add
fwait
lcall
cmpsb
xor
in
icebp
movsl
push
lds
les
leave
lcall
jmp
int3
add
mov
fst
sbb
cmp
test
jne
movsb
into
mov
fnsave
aad
movsb
push
clc
inc
cmp
sahf
lods
xchg
cmpsl
or
jae
test
push
push
sbb
ficoms
movb
mov
hlt
movsb
add
lahf
add
adc
das
and
jno
es
push
xor
adc
cmp
fbstp
push
jl
push
dec
sbb
ret
xor
adc
sarl
stos
and
push
mov
aaa
les
mov
inc
xchg
popa
test
xchg
mov
repnz
mov
and
mov
mov
fwait
cli
jns
sub
or
imul
popw
inc
mov
and
cmp
and
and
movsl
lds
jnp
xor
fsts
aam
sub
scas
sti
rcr
out
cmpsb
scas
xor
aas
pop
xchg
jp
jns
aam
cmpsb
out
pop
in
push
xlat
inc
mov
mov
rol
mov
ja
pop
test
mov
iret
mov
insb
xchg
mov
pop
dec
dec
jmp
loopne
aaa
fisttps
punpcklwd
xor
cltd
adc
push
mov
adcl
mov
loop
out
or
movsb
stos
xor
aad
or
data16
ds
push
mov
and
dec
sbb
push
sbb
cmp
gs
sti
or
inc
jg
dec
leave
arpl
notl
cmp
pop
dec
in
inc
ret
xchg
cmc
psadbw
sub
repz
pushf
or
daa
in
es
and
nop
sbb
dec
sub
in
xor
sbb
ds
jno,pn
pushl
sbb
jmp
sbb
jae
jae
loop
dec
icebp
fdivrl
mov
pop
out
push
mov
sbb
sti
mov
in
lahf
insb
js
add
mov
xchg
cmc
popf
jmp
xchg
shll
add
cmc
inc
or
and
mov
lahf
pop
inc
stos
add
sti
dec
popf
jno
xorl
jns
out
outsb
sbb
in
lock
dec
dec
rcl
cmpsl
dec
cltd
pop
sub
hlt
lret
andl
adcb
daa
xor
push
icebp
adc
xchg
std
dec
dec
loop
and
rorb
mov
jg
cmp
push
test
mov
sbb
xchg
je
xchg
mov
sti
imul
scas
clc
jle
in
scas
test
neg
bound
arpl
lds
pop
int3
sub
inc
outsb
dec
test
out
rep
fwait
test
jne
mov
sahf
xchg
scas
cld
cmpsb
xor
scas
lock
fistpll
repnz
into
dec
mov
aam
ret
std
xchg
xchg
cmp
imul
or
cmp
leave
adc
stc
aad
aad
daa
adc
pop
xchg
pop
outsb
idivb
add
in
test
xlat
stos
vpshld
shlb
and
sbb
sub
testb
mov
sbb
popa
mov
adc
dec
xchg
xchg
addl
fwait
rolb
gs
mov
or
pop
mov
adc
dec
mov
out
or
mov
scas
mov
inc
xchg
movsb
and
push
sarb
fcmovnb
inc
xlat
sub
out
sub
xchg
xor
dec
adc
push
jns
daa
es
ja
pop
mov
xchg
dec
shll
inc
inc
ds
out
lods
sub
sbb
nop
lea
outsl
xor
stos
cmp
jbe
add
sub
mov
and
outsl
push
movsl
mov
dec
sub
adcl
dec
mov
sbb
imul
cmpsb
mov
and
call
sbbl
dec
fsubrs
cltd
pop
inc
inc
out
sub
scas
pop
addr16
add
sahf
mov
push
mov
pop
fidivrs
pop
mov
push
fsubl
leave
pop
push
into
inc
xor
into
mov
pop
and
movsb
hlt
inc
icebp
cmp
test
push
cmp
jbe
aas
cmp
dec
pushf
sbb
lret
and
sub
imul
cs
call
ds
lods
stc
mov
fwait
push
add
push
xor
imul
fdivp
mov
sub
cmp
cmp
or
xor
addb
fwait
sbb
inc
xlat
sahf
fidivs
push
lock
push
into
push
cmp
and
sub
jne
adc
dec
xor
testb
mov
cmpsl
ds
lods
adc
add
jle
pop
and
pop
mov
push
jle
sbb
mov
call
or
sbb
xchg
push
clc
push
adc
push
insb
shl
std
add
mov
xchg
mov
sarb
xor
test
xor
call
cmp
int
push
lods
mov
cmp
mov
pop
adc
push
pop
out
sub
pop
aas
mov
sbb
das
pop
ds
icebp
dec
and
mov
push
cmc
pop
loop
dec
sarb
or
cmp
add
adcl
xor
je
inc
mov
push
pop
adc
cmc
flds
adc
hlt
imulb
dec
add
jnp
out
bound
inc
stc
lock
imul
or
and
lret
xlat
mov
fs
push
xor
xchg
insb
movsl
lods
mov
data16
scas
loopne
xor
out
push
test
outsb
neg
xor
movsb
mov
dec
in
jno
shrb
imul
loopne
rclb
stos
cmpl
cmp
ucomiss
xchg
sub
pop
or
or
stos
les
insl
mov
lahf
xchg
xchg
sub
ja
dec
inc
lds
imul
pop
lahf
mov
mov
inc
cmp
push
mov
out
sbb
add
test
sub
mov
mov
jle
es
mov
sub
fisttpl
mov
dec
mull
and
dec
jp
xchg
jp
test
cmp
mov
lahf
push
inc
test
stc
dec
pop
enter
sbb
lcall
add
xchg
bound
ja
out
add
xor
dec
mov
pop
inc
push
or
cmpsb
ds
pop
fwait
mov
mov
pop
call
nop
arpl
pop
enter
lods
and
cmp
stos
sbb
lret
sbb
sbb
jnp
fwait
mov
popa
cmp
xchg
scas
and
rcrl
jge
jb
ss
push
mov
fisubs
es
in
push
xchg
and
lds
push
xchg
pop
lds
enter
cltd
rcrb
xor
sub
sub
inc
hlt
mov
scas
xchg
push
or
aad
out
dec
fldcw
lret
sbb
std
adc
sub
mov
cs
cmp
mov
mov
push
fnsave
shl
roll
popf
mov
jecxz
xlat
and
insl
dec
cmp
lea
adc
nop
out
inc
shl
jbe
pop
jg
adc
and
sub
cmc
mov
out
in
or
sub
in
das
dec
jle
in
stc
sub
push
fcom
push
mov
fcomi
and
mov
xlat
jge
leave
or
lahf
mov
enter
mov
mov
movsb
repnz
fwait
sti
push
rorl
jmp
popa
xchg
jo
mov
jge
pop
sub
xchg
mov
in
jae
ja
sbb
mov
adc
movsbl
roll
inc
sbb
xchg
js
sbb
inc
ljmp
push
and
xor
andl
aaa
push
bound
jle
fsubrl
stc
test
adc
cmp
lods
in
xchg
lret
shll
sbb
pop
mov
je
cld
lret
nop
adc
jmp
fstp
ret
lret
pop
dec
ja
lret
addr16
xor
lahf
mov
fisttps
xchg
stc
cmp
hlt
cmp
sti
adcl
out
das
les
and
and
mov
in
pop
jp
mov
jne
push
fisubs
fmulp
js
in
dec
lcall
push
xor
stos
ja
rclb
sahf
icebp
mov
add
xchg
adc
sti
bound
pop
pop
lahf
push
push
inc
pop
repnz
mov
xchg
fiadds
idivl
loop
cmc
adc
mov
mov
jg
pop
mov
pop
lock
dec
pop
scas
xchg
fnsave
adc
insb
fists
cmp
mov
andb
movsb
cmp
push
cmp
test
push
push
fbld
mov
cmpsl
xchg
insb
xlat
push
add
mov
and
sub
jge
clc
mov
mov
arpl
pop
pop
icebp
popa
and
js
sahf
icebp
loope
inc
std
sahf
mov
test
int3
lret
aam
dec
push
lret
xchg
lret
out
mov
sbb
mov
shl
push
gs
pop
mov
das
cmpsb
in
xor
mov
ret
arpl
leave
dec
cmpsl
insl
les
mov
icebp
mov
ds
lret
inc
mov
test
fbstp
sub
lods
pop
lods
addr16
mov
aas
incl
xor
xchg
and
arpl
cmpsl
movsl
cld
inc
mov
in
enter
fst
and
sub
lahf
loopne
shrl
incl
pusha
insl
inc
sbb
push
inc
test
lahf
inc
or
loopne
cmp
xor
dec
rcrb
aas
jnp
iret
mov
push
xor
hlt
jmp
test
mov
push
push
in
adc
cmpsb
in
subb
test
mov
jecxz
jmp
out
add
add
push
mov
pushf
test
hlt
xor
mov
dec
and
mov
lock
lcall
push
in
jmp
xchg
inc
mov
mov
jb
rorl
xor
lret
push
imul
dec
xchg
dec
inc
nop
cmp
into
lods
sub
or
and
test
add
jae
outsb
and
push
call
mov
mov
or
es
sti
inc
or
cmpsb
les
insl
add
out
sbb
sbb
jp
es
sbb
call
inc
mov
sbb
add
fwait
cmpsl
xor
jmp
or
cmpsl
jmp
fsubs
ja
rcll
cmp
xchg
push
int3
inc
pop
jb
out
dec
push
sbb
mov
mov
push
adc
add
sub
popf
pop
pop
or
call
in
or
add
cmc
dec
add
sbb
es
mov
jle
test
andb
sar
jnp
mov
pop
scas
cmpsl
es
add
sbb
pusha
idivl
push
jle
out
dec
pop
loop
btc
outsb
stc
sub
inc
mov
jecxz
mov
out
mov
mov
movsl
sbb
pop
mov
bound
insb
jae
mov
jp
and
data16
or
loope
mov
stos
add
mov
shl
or
cmp
test
sub
lods
fistl
daa
lock
cmp
in
dec
pop
call
adc
mov
adc
inc
xor
js
clc
jnp
test
cmc
int3
adc
xor
cs
lods
mov
xor
sti
jbe
addb
sub
xchg
push
mov
dec
push
idivl
mov
fwait
push
push
in
sahf
call
ss
pusha
cmp
xchg
mov
aas
shlb
and
mov
loopne
mov
aad
inc
push
inc
sbb
test
fwait
xchg
and
sub
loopne
andb
jecxz
adc
push
je
scas
sub
and
mov
mov
xor
xchg
je
or
jmp
sbb
sub
jne
or
jns
das
test
inc
sub
fldcw
dec
push
sahf
ficompl
and
in
dec
pop
inc
loop
dec
testb
push
adc
mov
jnp
mov
adc
daa
stos
jne
push
testl
and
fcmove
inc
ret
cmc
cmp
fidivrl
hlt
mov
and
dec
xchg
outsl
repz
loopne
cmp
shlb
fidivs
lods
xchg
push
xchg
sarb
inc
jae
fcompl
mov
xchg
push
scas
add
jno
test
test
cmp
repz
jbe
movsl
mov
ljmp
repz
xor
std
inc
cmp
mov
fisttps
xchg
lret
int3
inc
inc
loop
and
mov
mov
mov
sahf
fs
rol
test
cltd
sub
sbb
and
mov
push
xor
repnz
or
jnp
int
cmpsl
pop
xor
stos
sbbb
lock
jb
pop
cmp
lock
push
les
sub
mov
addr16
mov
jb
mov
mov
icebp
and
stos
nop
push
jmp
dec
pop
cld
in
arpl
cli
mov
xchg
adc
sbb
ljmp
repnz
sub
inc
add
aam
pusha
inc
pusha
push
sti
xchg
gs
cmp
xor
jb
fldl
push
insb
bnd
cltd
cmpb
adcb
or
sub
popf
into
into
aaa
sub
mov
mov
sub
call
sbb
test
mov
out
or
test
xor
adc
inc
dec
dec
cld
or
lea
sub
fiadds
imul
push
lods
or
xchg
xor
outsb
lods
inc
mov
loop
pop
add
imul
add
or
es
cmp
adc
push
fmull
sar
and
ret
psrlq
push
inc
cwtl
pop
lea
mov
out
xor
sub
or
nop
or
repz
out
stc
fnstsw
cmp
int
sbbl
mov
adc
mov
aas
mov
mov
lods
push
or
dec
aaa
add
xorl
hlt
in
imul
push
ficoml
mov
mov
push
fstpl
daa
xchg
push
jg
or
in
pop
xchg
rcll
or
pop
sarb
dec
mov
movsl
xor
sub
sub
lahf
jmp
mov
dec
in
dec
sub
jg
cmp
rcrb
shlb
inc
loop
sub
mov
inc
scas
push
fwait
repnz
ret
idivb
and
iret
fcomps
scas
sub
shl
mov
fldcw
pop
dec
push
mov
popa
cwtl
bound
idivb
std
lret
pop
cmp
movsl
pop
daa
lcall
adc
and
repnz
movsl
loope
scas
out
push
ss
shlb
adc
and
test
xor
int3
xchg
sbb
sub
popa
mov
call
xor
pusha
sub
daa
mov
ficoms
mov
mov
adc
rolb
lret
jb
icebp
xchg
scas
adc
cmp
push
movsl
inc
adc
jns
andb
imul
faddp
test
lds
movsb
jno
fisubl
ss
insl
adc
or
inc
sbb
cli
ret
or
out
vpminub
push
or
add
mov
cli
pop
cld
xchg
inc
pop
mov
movsb
lahf
gs
push
jnp
cmpsl
fsubr
xor
sbb
shlb
xlat
mov
inc
icebp
cmpsb
inc
mov
loopne
jb
pusha
loop
aad
outsl
sbb
push
mov
mov
and
and
jns
enter
lret
sbb
xchg
shl
adc
es
or
dec
pusha
jae
dec
outsb
inc
add
test
out
pop
sbb
inc
cmp
fstps
loope
hlt
movl
out
mov
mov
xchg
js
cld
lea
cld
ss
sub
into
mov
sbb
xchg
lods
fwait
gs
rcll
out
scas
call
in
imul
add
mov
jne
push
loop
mov
popa
call
rolb
adc
mov
aam
push
xor
xchg
xor
lds
hlt
xchg
icebp
mov
mov
dec
jbe
addl
or
in
pop
imul
leave
xor
or
pop
dec
xchg
aaa
cmc
sub
and
nop
pop
repz
inc
sbb
mov
popf
in
mov
mov
das
adc
xor
stc
fs
mov
imul
cwtl
adc
pop
jmp
cmp
stos
dec
data16
scas
aad
loopne
sub
xor
ret
lods
in
fiadds
outsl
daa
cltd
dec
mov
pop
loope
jns
insl
sub
sub
addr16
call
pop
push
cmpsl
sbb
pop
mov
shll
xchg
sub
mov
js
push
ljmp
xchg
mov
enter
psrad
and
outsl
inc
pusha
mov
dec
shlb
test
cmpsb
leave
sbb
xor
xor
xor
cli
xor
shll
and
lock
pop
dec
pop
push
sarl
add
mov
mov
xlat
pusha
test
pop
jnp
pop
fcmovb
out
divl
push
push
sub
adc
pop
xorl
mov
pop
mov
imulb
enter
cs
lea
xor
or
cs
pop
clc
cld
inc
stc
jno
nop
daa
xchg
fs
cmp
sub
pop
movsl
sbb
test
xor
clc
lret
nop
sub
push
hlt
jbe
jl
push
std
lret
inc
fbld
inc
int
out
mov
push
movsb
pop
inc
mov
mov
mov
mov
xor
sbb
shll
inc
push
cmp
jecxz
loopne
inc
push
adc
adc
fnstsw
lahf
mov
ret
sub
xor
aam
iret
or
repz
mov
pop
cmp
pushf
inc
mov
jae
and
cmp
outsb
add
rcrb
pop
xor
push
dec
pusha
gs
int3
fimuls
lret
sub
loope
cmpb
lcall
cmpsb
jmp
pop
stos
test
cmp
xchg
jg
pop
mov
pop
add
jle
mov
leave
or
addb
cmc
cmpsl
call
mov
ffree
loopne
ret
pop
pop
ss
cmp
aas
lahf
repz
adc
rclb
jne
add
lahf
adc
lcall
cmp
push
mov
inc
or
jo
lods
push
jbe
jb
adc
out
add
gs
int3
ret
cmp
jecxz
jno
pop
rolb
repnz
push
jns
mov
pop
xlat
in
outsl
and
xlat
adc
pusha
mov
mov
jmp
leave
xor
sti
lcall
mov
mov
fs
int
xchg
mov
pushf
and
into
fs
cs
out
data16
fbld
xlat
inc
inc
incl
sub
sub
add
push
mov
je
clc
stos
inc
sub
pop
mov
mov
inc
test
nop
in
fwait
jbe
out
mov
lcall
out
mov
fsub
xor
dec
in
jle
hlt
scas
or
je
in
or
mov
daa
icebp
push
sbb
mov
adcb
in
add
pop
add
sti
adc
sti
shll
cmp
scas
push
dec
dec
mov
movsl
imul
leave
and
cmp
div
cmp
sbb
and
mov
pop
jle
mov
call
and
add
icebp
inc
push
push
repnz
jo
frstor
icebp
xchg
xchg
nop
add
and
stos
sbb
mov
add
mov
out
adc
pusha
nop
pop
shll
jmp
movsl
mov
push
mov
or
mov
rcrb
sbb
or
mov
pop
jle
pop
add
lock
push
int3
std
ss
lcall
je
mov
or
jno
inc
cld
por
jmp
out
xor
mov
push
in
sbb
xor
das
xchg
cltd
std
lahf
lcall
loop
push
lods
repz
pop
ret
push
test
xchg
pusha
or
mov
inc
sbb
shr
lahf
cmp
mov
mov
ret
out
push
leave
and
or
ss
sub
in
movsl
data16
out
bound
movsb
add
es
inc
mov
push
and
pop
lret
iret
popa
mov
and
and
dec
rol
dec
dec
cld
push
mov
pop
rclb
add
xor
jl
inc
push
pop
frstor
jnp
notl
mov
pop
lods
sub
jno
lret
push
popf
jmp
movb
dec
adc
loope
and
add
ret
lret
notl
xor
loope
inc
push
mov
add
jge
clc
or
cmp
mov
shrb
and
fst
scas
push
pop
scas
dec
jecxz
jno
mov
insl
aad
xor
clc
jae
in
loop
jmp
out
bound
loope
mov
rcll
ror
jbe
repz
or
std
mov
fwait
xor
jg
jnp
cmp
lahf
loop
cwtl
stos
je
out
add
sbb
ror
aaa
out
filds
or
lcall
dec
fdivr
dec
sbb
ret
inc
gs
pop
orl
xchg
lret
sub
loope
or
xchg
mov
repz
push
push
or
xlat
cmc
pop
jo
push
and
je
pop
mov
clc
pop
outsb
fcmovu
adcl
xor
xor
shr
add
lock
and
subb
pop
scas
es
addr16
push
and
fimuls
xor
gs
mov
andl
sbb
cmp
ret
inc
subl
jmp
aam
icebp
insb
sub
stos
mov
sti
fwait
imul
adc
inc
std
push
fsubrp
je
mov
cmc
or
gs
test
int3
stos
mov
fucom
push
leave
pusha
cmp
add
insb
push
pop
lret
or
call
or
xor
cmp
pop
push
cwtl
jge
pushf
arpl
jp
fwait
xchg
out
jle
mov
add
stc
pop
jno
adc
add
lods
js
pop
sbb
xchg
push
leave
test
fisubs
or
cltd
pusha
inc
cltd
addl
aaa
je
push
mov
xor
pop
insb
jo
js
std
cltd
rol
xchg
in
enter
in
stos
es
dec
test
mov
jge
pusha
push
mov
mov
xchg
add
mov
push
cmp
mov
push
xchg
aas
into
add
cmpsl
aaa
mov
popf
mov
aad
pushf
mov
push
addr16
jb
cmpsb
xchg
sub
jb
mov
in
mov
and
sbb
fiaddl
ret
cmp
leave
or
sbbl
fsub
push
push
dec
mov
aaa
in
ret
inc
cmp
sbb
out
cmpsl
ss
push
cmp
sub
or
jle
lods
pop
jecxz
inc
jp
ja
out
ret
hlt
mov
push
mov
fmull
fiadds
dec
cmp
jne
push
mov
adc
cld
or
xchg
les
mov
mov
sahf
aam
ret
or
mov
xchg
sub
xor
pop
xchg
mov
inc
int3
cld
aaa
ljmp
pusha
adc
pop
cmp
and
jns
loop
into
xchg
pop
call
xchg
inc
lcall
cltd
out
push
sti
sahf
imul
cld
inc
faddl
mov
mov
adc
out
jl
dec
loop
test
inc
imul
fisubrs
test
ljmp
stos
std
cmp
xor
and
adc
adc
aaa
lock
cmp
cmp
subb
movsl
insb
sahf
xchg
mov
dec
cmp
cmc
cld
or
icebp
or
hlt
stos
fisubs
dec
mov
add
sub
call
pop
insb
xchg
adc
pusha
movsl
mov
mov
pop
adc
dec
jno
jnp
jp
call
and
push
jbe
push
mov
jg
pop
mov
push
ret
rorb
and
pop
scas
inc
mov
add
lahf
xor
add
mov
sarl
movsb
in
enter
xor
push
or
arpl
das
lcall
insl
sahf
loopne
push
dec
inc
sub
cmp
adc
imul
lcall
sbb
push
mov
xor
cmp
imul
lret
cld
std
push
lods
sub
subl
enter
lret
test
lea
adc
jb
adc
je
mov
xor
dec
sbb
jl
out
inc
les
fists
data16
bound
bound
mov
dec
jb
mov
stc
nop
push
subb
cmp
sub
push
fsubrl
test
dec
sbbl
mov
sub
in
dec
repnz
mov
jmp
test
idivb
sarl
add
lret
imul
fisttps
into
xor
insb
inc
lss
lods
xchg
orb
adcl
lahf
stos
xchg
push
in
mov
incb
sarb
idivl
imul
call
and
mov
inc
jge
andb
ds
mov
insb
jae
mov
lea
imulb
push
cli
xchg
inc
aad
shlb
mov
aaa
mov
sub
mov
inc
fisttps
cmc
sahf
sub
dec
push
xchg
jecxz,pn
adc
xchg
add
cmp
cmpsl
pop
imul
jge
sarl
cmpsb
mov
rorl
out
cltd
fs
leave
adc
jg
daa
testl
outsb
jle
fwait
scas
or
pop
sub
cmpsb
push
jo
jmp
mull
out
and
and
adc
cmpsl
sti
dec
ja
insl
inc
stos
push
xchg
inc
fbstp
cmpsb
inc
notl
mov
inc
lcall
sbb
ds
les
xchg
adc
sub
loope,pt
jecxz
cli
enter
es
inc
insl
push
in
popf
jns
or
pop
push
mov
or
pop
sub
nop
jp
jl
pushf
lret
sub
cld
inc
arpl
pop
push
in
push
or
scas
xchg
sub
leave
mov
out
mov
dec
popa
hlt
sahf
aam
rclb
mov
jns
xchg
xchg
sub
int3
ffree
jp
sub
push
mov
xor
sbb
nop
imul
repnz
adc
sub
fildll
nop
loope
out
add
add
cmp
std
aaa
fsubrp
push
insl
daa
mov
outsl
dec
mov
adc
or
xchg
dec
add
outsl
xor
in
ds
idivb
or
hlt
push
xchg
adc
mov
mov
cs
xchg
push
andl
push
insl
ds
mov
cmpsb
loope
stos
push
inc
lods
inc
jne
mov
test
add
mov
jb
in
sbb
mov
rcr
faddl
cmpsl
arpl
in
push
jbe
mov
xchg
mov
aas
xchg
lcall
hlt
in
movsl
cmp
add
test
lds
fwait
sbb
cmp
aas
test
int3
movsb
mov
add
adc
lret
sbb
jp
xchg
sub
stc
inc
rorl
movsb
xchg
mov
push
jbe
cmpsl
lea
sbb
sbb
imul
pop
or
cmp
and
push
pop
xchg
xchg
rolb
mov
sbbb
leave
pop
mov
dec
or
sbb
daa
mov
xor
pop
out
cld
out
cs
jecxz
mov
xchg
rcr
insb
add
push
push
outsl
fmuls
repz
jecxz
inc
push
sub
and
lock
xor
mov
mov
mov
jp
dec
cli
and
cmpb
mov
in
imul
mov
or
aas
add
push
sbbl
add
sub
lock
dec
and
xlat
add
ret
jo
pop
outsl
js
test
aad
push
add
pop
out
or
mov
sub
adc
dec
xchg
add
and
incb
adc
and
jnp
jge
sub
xchg
sahf
sbb
jno
lcall
cmpsb
arpl
add
xchg
pop
cmp
cltd
aaa
jge
lods
cld
push
ds
rclb
jecxz
push
out
es
dec
ss
das
out
fstpl
mov
xchg
xlat
adc
mov
shl
sub
lret
imulb
into
jo
pop
pop
mov
xchg
add
out
sbb
add
jmp
xor
cmp
and
into
out
aas
jnp
popa
fstps
cmp
int
mov
sarl
les
mov
sbb
pop
inc
das
shr
sub
lcall
mov
xor
or
gs
xor
mov
and
int
jle
cmpsl
cmp
push
stc
and
mov
mov
packsswb
stos
in
cmp
shr
mov
mov
jmp
ret
xchg
not
xchg
sub
cmp
mov
cmc
sbb
mov
loope
pop
dec
jecxz
in
les
cmpsb
loope
jbe
or
in
cmp
aaa
push
sbb
mov
mov
xchg
mov
or
js
ret
push
ds
or
pop
out
add
fwait
mov
stos
aad
fstl
addb
outsb
inc
cmpsl
and
sub
mov
test
jbe
fucomi
mov
ljmp
jo
add
lahf
dec
aam
lock
sub
lods
xchg
adc
inc
and
loopne
cmp
call
dec
outsb
clc
mov
mov
inc
xlat
push
dec
push
sarl
and
orb
add
mov
add
pusha
div
cmpsb
test
fdivs
mov
je
mov
push
enter
cmp
pop
jb
add
cmpl
sbb
lds
lods
dec
out
sbb
xor
movsl
or
stc
stc
in
mov
sub
sub
dec
stos
jno
gs
int
js
and
fildl
mov
int
insb
pop
movsb
ret
or
pop
jle
nop
stos
mov
push
shrb
inc
fimuls
and
in
test
pop
bound
data16
inc
push
pop
push
ja
test
pop
xchg
pop
mov
push
arpl
pop
add
cmp
aad
sbb
adc
fistpll
arpl
sub
mov
iret
xor
jae
sbb
out
cmp
imul
int3
push
or
arpl
xchg
sbb
mov
ja
xlat
dec
hlt
cmp
jg
inc
icebp
mov
cltd
out
cld
adc
sub
dec
and
jmp
lea
psrlw
push
ret
hlt
xor
sbb
sbb
lret
orb
and
adcl
mov
lock
mov
xchg
es
je
jbe
inc
in
fwait
iret
cld
into
xchg
outsb
or
scas
cmc
mov
cmp
fiadds
cmovne
gs
repnz
fbld
mov
mov
xchg
pop
mov
jne
mov
inc
mov
add
pop
push
or
mov
test
mov
pop
ret
clc
shrl
pushf
adc
push
cmp
pop
xchg
mov
fsubl
mov
add
addb
sti
mov
push
inc
push
jl
dec
test
xor
jbe
dec
fs
repnz
xor
xchg
xchg
je
outsl
jns
arpl
xchg
sbb
in
pop
out
add
aad
inc
ret
xchg
jo
cmp
cs
mov
cwtl
push
incl
sub
loopne
ucomiss
sbb
xor
xor
lcall
cmpsb
cmp
cmp
push
out
inc
pop
xchg
and
pusha
repz
js
movsb
test
pop
std
xor
shlb
and
dec
add
push
jl
scas
sub
mov
subb
lds
pop
rclb
push
push
ret
fcompl
dec
pop
ja
sti
cmp
addr16
fwait
mov
ss
or
adc
cwtl
fdivr
lret
xor
imul
andl
enter
vpmaxsw
and
scas
mov
xor
imul
dec
cmpsb
mov
or
adc
ljmp
mov
out
mov
sbb
push
rorl
out
data16
aaa
gs
movntq
jbe
icebp
sbb
jnp
imul
call
ret
pop
mov
lahf
int3
xchg
xchg
mov
jl
daa
dec
mov
js
cmc
sub
lahf
fsubs
idivl
data16
xchg
and
test
mov
outsl
sub
fildl
icebp
mov
sti
jno
cltd
sub
sbb
lds
fcomip
adc
das
push
lock
or
stos
mov
jbe
jnp
push
lods
hlt
adc
aas
pop
outsb
in
nop
xchg
imul
lock
mov
jmp
mov
mov
sahf
xchg
outsl
sub
xchg
js
sbb
mov
out
push
mov
adc
add
mov
scas
andb
xor
push
bound
jae
fisubrs
js
cmpsl
test
mov
testb
addb
stc
imul
mov
mov
sub
xchg
mov
xor
xor
lret
xor
mov
pushl
insl
lret
test
gs
xor
test
push
push
popf
pop
test
fidivs
imul
movsl
lods
pop
sbb
sarb
cmc
sub
add
sahf
add
pop
out
ret
stos
hlt
or
pop
jns
js
les
fidivl
pop
aaa
sahf
xor
jg
orb
xlat
cmpsl
inc
inc
push
hlt
aaa
in
leave
fldcw
outsl
pushl
movsb
fwait
ljmp
pushf
sub
leave
insb
rcl
cwtl
dec
fmull
arpl
cmc
jae
ljmp
sbb
imul
fs
pusha
sarl
cmpsb
ja
cmpsl
arpl
sub
push
pushf
xor
aaa
mov
pop
and
jmp
xor
into
mov
fidivrl
pop
xor
out
sbb
pusha
push
push
mov
test
inc
mov
aad
and
ret
lock
xchg
stc
and
mov
pop
xchg
inc
aaa
sbb
jg
in
push
xchg
mov
and
mov
cmp
fs
xchg
pop
lds
and
and
mov
adc
mov
xchg
jne
in
mov
cmc
mov
popf
or
pop
mov
jge
xchg
jno
push
lcall
nop
aad
mov
int3
out
xchg
mov
mov
pop
scas
xchg
jne
mov
pop
out
sub
sub
in
popf
mov
subl
stc
cmpsl
sti
cmp
mov
loopne
in
sbb
inc
aas
insb
add
jnp
mov
popa
push
push
cmpsb
addb
aam
mov
pop
clc
dec
add
cmp
push
sub
movsl
repz
mov
adc
cmp
pop
dec
pop
mov
mov
aam
mov
ja
mov
iret
inc
fsubs
sub
stc
imul
inc
jmp
in
inc
popa
xor
data16
inc
lcall
orl
lods
iret
imul
lcall
enter
xor
mov
mov
lods
adc
rorl
rcrl
jb
cmp
mov
jmp
or
pop
add
pop
clc
xor
xor
adc
cmpsl
cmp
fistps
or
jns
sbb
mov
inc
pusha
push
jbe
or
pop
push
mov
adc
insl
lret
cld
lcall
in
pop
sbb
mov
xchg
ljmp
pop
mov
ds
icebp
jnp
lahf
pop
sahf
mov
inc
or
adc
jne
mov
rclb
or
cmp
cwtl
pop
loope
loop
clc
dec
testb
jle
movsb
jb
xchg
jnp
fisttps
inc
sbb
testb
inc
outsl
inc
js
push
scas
pop
jle
or
dec
fsubrs
xchg
mov
mov
pusha
aad
add
mov
imul
mov
arpl
add
add
ss
sahf
stos
inc
scas
mov
inc
outsl
loop
mov
jno
xor
lea
jae
pop
paddsw
ss
push
sub
je
jns
test
xor
data16
shl
subb
stos
lea
dec
jmp
and
inc
ret
or
fucomip
adc
xchg
movsb
loopne
mov
mov
fcomip
or
gs
lcall
je
in
inc
in
aad
or
cmp
cmp
xor
push
sbb
sahf
xor
sub
shlb
or
in
cmpl
jg
pop
imul
rcrl
dec
mov
aam
jb
mov
sub
dec
cli
divl
mov
fcomps
jns
mov
inc
push
int3
enter
lcall
into
in
pusha
mov
or
arpl
out
jg
aam
mov
push
dec
jnp
jae
mov
pop
sahf
sbb
aas
pop
or
loope
and
nop
cmp
icebp
insb
in
rorl
pop
mov
xchg
jae
push
jbe
insb
aas
scas
and
xor
mov
cmp
xorl
inc
mov
jge
mov
lods
out
sub
setge
mov
xchg
test
mov
mov
jbe
lcall
xorl
sub
scas
push
jne
sbb
sbb
mov
fsubs
push
mov
xchg
loopne
ret
scas
cmpsb
mov
test
pop
stos
dec
mov
imul
ret
andl
fstpt
loopne
mov
jbe
and
in
and
int
mov
dec
sti
sub
push
pusha
pop
std
or
cwtl
lcall
stos
sahf
jge
sti
inc
sarl
repnz
aam
xchg
outsb
ja
sbb
pusha
push
sub
or
mov
mov
or
popf
bound
sarb
jecxz
mov
adc
mov
fmuls
stos
dec
add
mov
dec
xor
clc
xchg
adcb
pop
mov
add
push
dec
cmp
out
sbb
rcrl
mov
inc
push
xor
pusha
cmpsl
add
fldenv
sti
cmp
aaa
cmp
std
sahf
pop
addl
imul
jle
jmp
jg
cmpsl
repnz
lods
bnd
jae
scas
nop
push
daa
adc
fsubs
popf
sbb
fs
adc
xorb
cmp
xchg
mov
add
xor
and
jecxz
les
jle
mov
xchg
fisubs
dec
cli
jg
jl
sbb
xor
dec
sbb
sbb
or
cmp
das
mov
add
mov
notl
es
aad
subl
ljmp
pusha
jb
iret
imulb
mov
fwait
outsb
mov
add
ljmp
jns
ficoms
and
add
stos
xchg
add
loop
in
insb
or
mov
int
out
mov
jecxz
adc
mov
mov
mov
sub
punpckldq
xchg
xchg
xor
and
out
dec
aad
mov
cli
lea
imul
mov
jecxz
ss
xchg
mov
sbb
or
outsl
es
js
mov
movsl
push
mov
repz
push
aad
xchg
insb
mov
shl
adc
mov
xor
lock
or
jae
sbb
test
in
repnz
leave
clc
f2xm1
xchg
push
cltd
mov
ja
pusha
pop
clc
movsl
mov
xor
fldcw
jno
jno
sbb
sarb
insb
test
popf
orl
ja
fidivl
sarl
nop
lret
push
inc
push
fists
in
test
inc
push
jb
or
scas
push
xor
js
aad
sbb
jg
pop
cs
adcb
adc
test
roll
jmp
xor
std
shlb
xchg
sbbl
cmp
ja
mov
mov
cmc
xchg
mov
and
push
push
push
or
xor
inc
xchg
data16
dec
and
jnp
test
mov
jnp
sub
ja
push
loop
fwait
and
push
adc
and
mov
inc
adc
cmp
cld
adc
xchg
push
mov
sub
loope
test
lahf
mov
sbb
cmp
push
lods
inc
test
and
fstl
add
adc
cmpsb
sbbb
mov
xchg
dec
xorl
imull
aaa
aaa
jmp
push
sbb
push
stos
outsl
push
cld
xchg
inc
pushf
sbb
iret
loopne
dec
out
gs
xor
cmp
and
repnz
mov
dec
mov
or
xchg
jl
jns
ret
sub
insl
adc
clc
cmp
dec
push
fisttpll
pop
pop
mov
dec
xchg
mov
sub
cli
dec
gs
xchg
mov
movsb
xor
push
scas
xchg
jle
cltd
dec
cmp
negl
enter
movl
stos
xchg
xchg
mov
into
jge
arpl
ds
pop
popa
inc
lret
sbb
sub
jmp
xlat
mov
enter
hlt
leave
mov
push
mov
fnstsw
enter
jl
jl
pushf
lods
rorb
push
test
arpl
cmpsl
cmpsb
andl
inc
lret
ds
jnp
gs
or
sub
mov
mov
aam
inc
sti
xchg
jae
in
sbb
mov
bound
imul
mov
jo
xchg
push
xlat
nop
lcall
mov
inc
lret
orl
cld
dec
popa
cli
pop
mov
cmp
inc
adc
outsl
stos
sub
cltd
cli
mov
pop
sub
jge
mov
xchg
add
xor
cli
add
loop,pn
ret
pop
pop
add
jo
sub
sahf
mov
repz
or
fs
sub
lahf
in
shl
sbb
mov
add
mov
mov
mov
icebp
pushf
das
lret
jecxz
ret
mov
andl
inc
movsb
mov
push
jg
enter
and
lret
arpl
xor
add
push
and
pop
mov
mov
int3
push
dec
sbb
pop
jecxz
imul
popa
addr16
stos
xchg
dec
outsl
jmp
add
cmp
cmpsl
jne
push
das
cmp
and
and
adc
push
je
fidivl
xchg
inc
inc
mov
shll
mov
and
pop
mov
mov
cwtl
xchg
mov
aas
dec
sbb
push
dec
sub
xchg
rorl
cmp
dec
repz
or
test
and
imul
and
mov
ss
mov
js
int3
loopne
sbb
adc
jne
mov
mov
stc
adc
and
scas
mov
movsl
repz
repz
data16
sub
lods
inc
gs
xchg
sub
lret
jno
mov
clc
ret
or
adc
cwtl
cmpsb
jecxz
or
sbb
xchg
xor
ficompl
jo
imul
icebp
lock
pop
xor
lahf
cmpsb
sbb
jno
mov
jae
and
rcll
inc
out
pop
mov
pop
hlt
ja
and
aas
xchg
or
mov
scas
subl
cld
mov
outsb
insb
dec
cmp
cmp
fstpl
jl
inc
mov
int3
pushf
loopne
mov
jns
ja
jne
les
mov
sbb
adc
int
les
loopne
mov
sbb
pusha
adc
aas
xor
xor
ja
mov
xor
ret
dec
dec
pop
popf
mov
sub
mov
movsb
clc
iret
enter
loope
pop
imul
pop
cmp
mov
pop
psraw
in
out
pop
ds
or
pop
pop
xor
mov
xchg
mov
rorb
mov
testb
xor
popf
movsb
loope
shrb
jmp
into
inc
movsb
scas
mull
int3
lret
cmpsb
imul
sarb
sbb
adc
mov
add
insl
ret
xchg
sub
adc
xchg
mov
cmpsb
daa
js
icebp
fdiv
sarl
push
call
pop
aam
sbb
and
mov
xchg
jmp
cs
adc
int3
lock
jmp
or
incl
xchg
sub
xchg
pop
lahf
sub
jp
push
mov
xchg
push
adc
fidivl
insb
lret
cmp
hlt
dec
das
stos
out
into
push
fcoml
mov
pushf
push
or
adc
icebp
ds
movsl
clc
lahf
leave
arpl
pop
xchg
scas
or
xorl
ret
cmpsb
das
mov
pop
push
ficoml
dec
pop
out
in
popf
and
xchg
fisubrl
cltd
jge
xorl
xor
push
xor
jg
std
mov
push
sarb
fwait
adc
faddl
xchg
les
mov
or
inc
lods
icebp
repz
or
jo
or
outsl
push
xchg
inc
cli
cmp
mov
push
and
mov
pop
mov
mov
out
push
sahf
and
dec
subb
outsb
sbbb
imul
sbb
lret
ds
jae
xchg
scas
dec
sbb
movsl
inc
inc
ja
mov
es
aaa
push
rorb
mov
fldenv
add
mov
in
inc
mov
xchg
xor
mov
loope
pop
cmpsb
or
and
outsb
pop
inc
outsb
mov
mov
cmp
and
jg
mov
xchg
sbb
int
cmp
pop
jne
mov
dec
in
jbe
mov
les
std
or
imul
inc
adc
dec
repz
xor
xchg
jns
mov
pop
jns
or
aam
ja
fnstenv
fcoml
jecxz
clc
inc
ret
and
ljmp
cs
arpl
cmc
sbb
repnz
clc
pop
jmp
mov
into
mov
ljmp
outsb
inc
pop
lds
mov
inc
movl
leave
and
dec
push
inc
dec
movsb
xchg
mov
jle
outsb
in
sbb
push
add
iret
jb
in
stos
add
dec
hlt
pop
sbb
ja
or
xchg
nop
sub
sbb
nop
idivl
cmc
sbb
int3
mov
dec
mov
outsb
sub
jecxz
mov
les
rclb
jle
pop
out
jns
out
mov
and
ja
inc
shr
xchg
addl
adc
test
xchg
cmc
mov
jg
shrb
jae
data16
mov
lret
push
sbb
sub
mov
jle
cmpsl
stos
jne
movsb
xchg
push
sub
push
fwait
or
fmull
testb
jecxz
inc
idivb
scas
movsl
jecxz
cmp
adc
loope
add
fdiv
data16
and
push
xorb
xor
push
fbld
scas
and
push
test
out
scas
mov
xor
add
mov
test
sub
sbb
subb
repnz
and
xorl
pop
and
lret
mov
fcomps
test
dec
es
mov
in
icebp
cmp
xor
roll
scas
push
and
add
or
and
sub
pop
std
cmp
fwait
xor
push
mov
cmpsb
aaa
mov
sub
loop
jnp
in
pusha
jge
cltd
cmpsl
jle
fsubr
xlat
jmp
je
pop
das
xchg
mov
dec
pusha
add
mov
sti
xor
and
call
jmp
and
loope
cmp
dec
fstl
push
jns
imul
andl
pushf
push
or
cld
lahf
xor
ret
jnp
lret
jo
add
push
insl
dec
jnp
inc
inc
ficoms
fidivrs
pop
popa
out
ror
or
pop
and
sti
outsl
loop
frstor
mov
push
jecxz
out
dec
sbb
addr16
mulb
xchg
leave
sub
cmc
push
test
pop
jecxz
add
push
jmp
push
mov
iret
popa
mov
popa
clc
cmp
pop
sbb
push
cmp
inc
rcll
push
sub
cmp
push
stc
and
lret
bound
pop
add
arpl
jg
pop
push
add
fiadds
jae
ret
or
pop
dec
test
dec
shl
leave
std
in
push
push
mov
pop
mov
pusha
jmp
pushf
in
ret
hlt
or
icebp
int3
out
sub
mov
adc
int3
push
faddp
lods
je
pop
stc
push
mov
leave
mov
je
bound
xorps
xchg
add
addr16
in
and
das
adc
das
repnz
mov
push
scas
aad
adc
cmp
dec
jnp
cwtl
shlb
shrb
repnz
fbld
imulb
cmc
js
call
mov
in
roll
fmull
dec
dec
jecxz
jecxz
mov
insl
gs
imul
scas
sarb
out
clc
push
clc
or
cmpsl
ss
pop
pop
and
outsb
sub
imul
ret
jnp
cmpsb
push
inc
pusha
lahf
not
and
inc
sbb
lods
sub
add
sub
xlat
shll
stos
push
xchg
push
pop
ja
mov
mov
out
outsb
iret
clc
mov
insl
out
mov
sub
and
das
loope
movsb
and
xchg
enter
fstpt
push
test
add
sub
jecxz
cmc
push
mov
adcb
pop
jl
add
stos
push
lods
sub
lds
jns
cmpsl
aas
adc
clc
add
sarb
or
mov
imul
jo
ja
les
dec
lcall
cmpsb
flds
data16
cmp
outsl
sbb
ljmp
jno
cmp
and
dec
xor
call
xlat
sbb
bound
sbb
insb
fistps
int
sbb
jb
adc
add
in
xor
mov
scas
test
ds
or
adc
lods
ss
test
and
adc
sub
jns
pop
mov
lods
leave
and
aas
xchg
pop
jle
es
das
jnp
push
push
cltd
mov
sbb
push
clc
push
fldenv
movsl
sti
mov
adc
mov
jecxz
xlat
fnsave
call
cli
push
jnp
mov
jg
into
xorl
sub
push
imul
jg
sub
fistps
jmp
sbb
ss
sub
mov
stos
mov
sarb
pop
xchg
inc
enterw
sub
repz
sti
pop
xchg
xor
push
push
aas
aad
mov
ficompl
jg
mov
das
mov
lock
sahf
sub
std
sbb
push
lock
xor
lcall
jmp
xor
mov
add
test
addr16
mov
je
mov
inc
pop
mov
jns
out
and
cmp
sub
xor
sbb
dec
arpl
and
lcall
jmp
lret
jl
xor
sub
and
nop
mov
lahf
test
jne
mov
cld
push
xchg
mov
outsb
imull
add
pop
lahf
xchg
xchg
es
pop
push
cmpsb
movsb
repnz
movsl
lock
loop
outsb
rcrb
pop
xchg
rol
pop
sti
pusha
or
icebp
ret
clc
testb
loope
xchg
cmp
mov
sbb
shlb
push
mov
mov
fistl
ds
pop
inc
jmp
mov
sahf
and
stos
xchg
inc
cmp
adc
scas
pop
mov
cwtl
mov
pushl
sbb
sub
nop
std
pop
sub
int3
inc
and
mov
cmpsl
adc
add
jle
loopne
dec
scas
pop
repnz
jge
sbbb
mov
adc
cmp
sub
jns
mov
imul
or
xor
pop
or
dec
pop
jnp
push
cmp
jecxz
cmp
sub
inc
out
adc
lret
mov
and
add
dec
aaa
imul
js
push
sahf
xor
sbb
fistpl
and
ja
or
adc
jnp
fcomps
fistpl
push
movsl
daa
mov
ja
outsl
jp
adc
arpl
cmpsb
lock
in
xor
push
push
fnstsw
fldenv
pushf
inc
jp
pop
mov
pop
mov
sub
jno
jne
test
int
pusha
mov
push
call
pop
loopne
adc
cmc
orb
sbb
sahf
lods
cmp
mov
add
xorb
xor
or
xchg
ds
ljmp
push
cmp
out
mov
fcomp
arpl
arpl
repnz
add
and
stc
popf
sbb
xchg
xor
icebp
push
cmp
jno
mov
outsb
dec
js
cmc
add
cmc
sub
movsb
repnz
sbb
mov
fists
sub
mov
stos
inc
orb
mov
inc
out
rcll
arpl
iret
push
fldt
rcll
or
or
and
dec
push
jno
xchg
or
stos
sbb
stc
shl
sub
inc
cmp
sub
sub
add
jo
xor
imul
test
mov
pop
je
pushf
rcl
into
add
and
es
mov
pop
sub
in
incl
mov
ss
jae
shrl
shrl
cli
int
test
push
mov
ja
mulb
out
les
xchg
adc
sub
cltd
sub
sub
mov
ds
and
sti
cmc
mov
or
pop
cmp
adc
xor
and
push
iret
push
add
inc
sahf
xchg
cs
add
popf
pushf
xor
push
pop
mov
push
lret
push
adc
sub
aaa
lods
cmpsl
rcr
int
cmp
mov
jecxz
test
adc
imul
lock
or
sti
stc
cli
push
jmp
mov
jo
mov
ja
adc
dec
mov
and
in
aam
jp
imul
lahf
aas
outsb
add
push
and
inc
scas
daa
adc
cmp
movsb
jecxz
xchg
xchg
mov
lcall
push
sti
inc
scas
and
out
xchg
leave
lods
fcmovne
call
jno
aam
mov
xor
cmpsb
dec
filds
shrl
enter
shrb
loop
clc
faddl
xchg
sub
adc
aaa
add
cmpsb
pop
xor
mov
ret
sarl
push
leave
sti
xchg
cli
sub
cmpb
mov
daa
mov
or
dec
movsb
xor
or
lret
es
fst
add
insl
rcrl
sub
ss
xchg
bnd
scas
cmpsl
lcall
loop
in
sub
sahf
sub
pushf
xor
push
mov
jl
int
jmp
and
lods
jns
adc
in
pop
stos
xchg
sub
jno
fucomp
addl
addr16
inc
pop
jne
sub
mov
adc
and
popa
data16
lret
inc
jb
fwait
push
adc
or
dec
fisubrl
dec
pusha
decb
and
nop
notb
pop
andl
je
cmp
adc
movsl
mov
lock
xchg
jnp
std
pop
mov
mov
stos
cmp
je
mov
stc
inc
in
mov
cs
int
leave
xor
repnz
mov
xor
push
fnstsw
xchg
mov
jecxz
xlat
mov
into
loopne
repnz
in
mov
sbb
mov
out
or
fistl
scas
xchg
lods
fs
dec
in
and
aam
jecxz
mov
pop
int
pop
aam
mov
mov
and
dec
lock
addb
sbb
mov
mov
cltd
mov
hlt
mov
pushf
cmp
mov
and
add
mov
cmp
roll
loop
ds
push
mov
mov
lahf
mov
xchg
and
xchg
rcrl
in
jg
lcall
mov
fisttpl
std
cli
mov
mov
jecxz
inc
fsubrl
mov
add
mov
dec
push
xchg
mov
mov
dec
mov
pusha
outsl
rcll
sub
dec
stos
dec
in
jge
push
test
sbb
fcoml
cmpsl
dec
mov
push
ds
ret
imul
out
push
or
xchg
push
inc
lcall
loop
pop
addr16
mov
xor
gs
push
pop
pop
sub
test
sbb
sbb
aaa
cmp
inc
push
add
out
or
and
adc
add
push
std
les
add
sub
mov
pop
inc
ret
dec
in
sub
cwtl
mov
adc
adc
nop
lcall
popf
mov
mov
lret
dec
pop
fsubr
iret
cmp
in
xor
cmp
test
xlat
fsubl
clc
fisubrs
imul
push
pop
mov
pop
sbb
fs
cmp
push
pop
dec
in
and
pop
bt
shl
adc
cli
andb
sbb
mov
xchg
fs
push
es
dec
pop
inc
call
push
sbb
jp
call
mov
pop
push
push
sbb
xchg
jge
imul
nop
push
std
cs
cmc
mov
icebp
cld
pop
ds
inc
int3
outsl
sbb
enter
ds
hlt
cmp
imul
push
insl
test
in
pop
push
pop
scas
cmp
sub
ja
imul
mov
repz
pop
in
stc
cmp
jecxz
arpl
imul
fildl
mov
shll
dec
xchg
or
in
sub
xchg
push
js
cmc
mov
test
adc
mov
pop
scas
jno
addr16
fistl
sbb
add
je
ret
scas
push
inc
andl
pop
fiadds
enter
in
xchg
pop
hlt
icebp
loopne
lds
cmp
aam
jmp
mov
jle
gs
inc
cmpsl
aad
mov
repnz
leave
xor
shrl
mov
outsl
adcl
and
or
das
mov
cmp
sub
int
sub
sti
aaa
jb
xor
mov
jae
outsl
sub
pop
xchg
mov
push
rolb
int3
xor
inc
xchg
pop
xchg
adc
daa
leave
mov
inc
jge
mov
mov
pop
cwtl
sbb
stos
sbb
add
dec
xor
mov
insb
cmpsl
sbb
xchg
mov
add
or
mov
dec
cmp
lcall
lods
pop
dec
fsubrs
je
cmpsb
pop
hlt
mov
rcrb
jl
push
mov
dec
and
and
jbe
insl
jg
push
fucomi
jb
inc
stos
cwtl
xchg
sub
xchg
std
aam
stos
cmp
push
arpl
hlt
aam
push
mov
test
inc
add
add
jmp
jb
sub
repnz
orb
clc
cmp
jg
jecxz,pt
outsl
clc
cmp
pop
xchg
stos
cmp
push
pushf
pop
mov
sub
out
cmpsb
mov
fsub
cmp
dec
jno
mov
pop
arpl
aas
inc
lods
dec
mov
adc
arpl
icebp
popa
xor
add
xchg
add
fdivrl
mov
test
ss
xchg
fwait
sti
jae
push
cmpsl
bnd
adc
imul
sbbl
in
aas
jns
outsb
mov
setg
cmpsb
dec
inc
jge
test
stos
lret
mov
ss
xchg
jb
dec
lret
pop
lods
test
mov
aad
sub
mov
xor
sub
aam
stos
push
or
std
sub
pop
mov
pusha
push
mov
fwait
test
out
sti
jmp
sbbb
lret
add
ret
scas
aaa
jp
decb
xor
aaa
aad
mov
xor
sbb
push
dec
cmp
fisttps
jge
call
mov
push
add
lock
mov
inc
cmc
bound
les
fwait
test
and
out
addb
cmp
popa
sahf
jl
mov
pop
mov
adc
test
cmp
mov
jo
cmp
movswl
inc
lds
stos
aam
or
inc
movsb
mov
push
xor
mov
xor
lahf
dec
jecxz
mov
inc
mov
jp
test
jp
pop
inc
fisttps
add
outsb
jl
sti
fdivrl
inc
fistps
jp
mov
loope
test
cs
sub
mov
daa
stos
enter
sbb
xor
adc
adc
or
xor
jae
inc
and
icebp
mov
jp
pop
popa
loope
lods
push
sub
outsl
push
push
jns
int3
lcall
push
cli
js
fcoml
mov
sahf
daa
push
pop
pushf
outsb
cmp
aaa
mov
pop
enter
divl
insb
inc
pusha
sahf
test
add
scas
inc
aam
insb
add
sub
push
je
ficoml
add
cmpsb
lock
ficomps
ljmp
push
jbe
stos
int3
sub
inc
cmp
mov
cli
sar
aam
jae
mov
movsb
or
mov
jno
mov
cwtl
shl
or
mov
dec
cmpsb
sbb
inc
lret
jmp
in
sbb
sub
dec
jmp
stc
ja
ret
xchg
dec
icebp
mov
xlat
sbb
mov
or
mov
clc
push
sub
sbb
jne,pt
pusha
jae
iret
in
push
inc
sub
rorb
ljmp
inc
fldcw
rdrand
mov
dec
jp
xor
in
push
inc
stos
clc
data16
mov
nop
aam
cmp
dec
pop
jg
clc
mov
in
cwtl
xor
xor
push
outsb
push
jmp
xor
ljmp
xchg
cwtl
das
enter
pop
sub
enter
or
rorb
insb
mov
imul
jne
fcoml
or
mov
sbb
jl
jle
push
mov
lock
stos
cmp
nop
jae
cwtl
orl
add
add
jno
aad
fisttpll
cmpsb
imul
iret
aam
sbb
imul
faddl
jl
jl
sbb
jmp
adc
in
enter
xchg
mov
push
pushf
or
hlt
imul
sbb
aaa
into
add
sub
pop
xlat
sub
or
inc
jp
xchg
nop
daa
flds
js
cmp
and
imul
dec
push
aad
mov
cmp
mov
sub
test
mov
push
jbe
nop
inc
mov
add
push
movsb
and
jnp
fldt
adc
xchg
sub
stos
mov
sbb
mov
pop
negb
mov
repnz
sbb
out
mov
pop
jg
add
jb
or
inc
in
xorl
sub
mov
notl
mov
cmc
xchg
stos
pop
repz
and
inc
xchg
ds
enter
movsl
or
js
ret
stos
ss
pushf
clc
fldt
mov
loop
inc
sbb
rclb
popf
xor
int
xor
sti
xchg
jmp
sti
dec
and
xchg
lods
movb
call
je
xor
rcll
xrelease
sbb
add
int
and
fwait
cli
sbb
mov
inc
mov
ja
clc
jae
sbb
dec
leave
out
scas
in
and
mov
push
jl
imul
cmc
mov
scas
adc
loopne
push
je
mov
or
lea
mov
push
les
out
jecxz
xchg
call
mov
or
cltd
lods
xlat
outsb
fistpll
xor
jnp
adc
outsb
inc
xlat
pop
add
or
mull
lahf
ss
cld
es
mov
nopl
push
lock
mov
adc
dec
inc
test
das
das
adc
add
jl
andb
pushf
insb
in
xor
test
fnsave
jecxz
sub
lret
xchg
xor
xchg
mov
mov
pop
lock
add
xchg
fwait
inc
fmuls
add
sub
sbb
jb
inc
push
movsl
pop
stos
pop
push
popf
cltd
jmp
push
adc
cmp
shl
int3
add
aaa
mov
dec
movd
push
ljmp
call
rcrl
inc
xchg
dec
cs
cmpsl
es
daa
pop
mov
push
xchg
loop
ljmp
inc
fdivrs
stos
es
push
mov
insb
jmp
and
and
mov
sahf
jl
shrb
mov
cmp
adcb
in
cmp
ret
repz
lahf
push
sub
cmpsl
sbb
ja
xchg
inc
xchg
adc
lock
mov
lahf
js
out
xor
cs
add
mov
xchg
push
mov
pop
sub
cmpsl
jo
fadds
push
or
fidivrl
or
push
gs
and
xor
xor
xor
pushf
dec
and
out
ficoms
insl
icebp
adc
cmpsl
mov
mov
dec
dec
mov
addl
sub
fwait
xlat
pop
push
inc
xor
xor
insl
xor
fmull
mov
rol
push
out
repnz
rcrb
cli
jecxz
cmp
lods
shlb
icebp
adc
jbe
in
jae
out
out
mov
test
testb
cmc
cmc
and
jge
arpl
adc
mov
pop
int
std
fimuls
nopl
stos
sarl
add
rep
popf
xor
adc
mov
jp
inc
lods
xorb
mov
test
cs
jno
lea
pop
pop
shlb
pop
bnd
lahf
mov
adc
dec
pop
push
push
jmp
or
jno
test
nop
xchg
xchg
pause
jne
lret
insl
push
testl
in
fs
ds
mov
add
push
jb
sbb
inc
aad
cli
out
mov
inc
lods
add
lret
xchg
int3
mov
pop
outsl
mov
loope
in
cmp
jmp
stc
jl
sub
adc
or
mov
xor
daa
out
insl
mov
shrl
out
shll
adc
pop
inc
cwtl
sbb
sbb
jo
mov
es
imul
xlat
mov
pop
rolb
enter
jne
popf
mov
lret
sbb
daa
lcall
les
rol
dec
and
pop
mov
out
int
push
adc
lret
or
pop
ljmp
lods
dec
adc
insb
inc
lret
es
aad
enter
lods
push
xlat
jecxz
mov
dec
push
inc
dec
mov
ficompl
pop
sub
out
rcl
repnz
jle
stos
lds
aas
dec
loopne
ja
push
call
sbb
mov
fidivrl
test
fists
out
hlt
jl
fucomi
push
and
test
fwait
popw
fbld
frstor
jg
mov
ret
flds
pushf
clc
cli
dec
aad
mov
sbb
jmp
jmp
cs
inc
and
test
roll
jmp
mov
sub
jmp
pushf
ret
adc
sub
and
inc
in
adc
out
add
xor
je
fiadds
mov
adcb
cmpsb
mov
xchg
mov
add
mov
lret
pop
cli
out
aad
insl
xlat
imul
xor
pop
aad
popf
mov
sahf
jno
insl
das
aas
mov
je
scas
mov
jnp
fdiv
pop
pusha
jge
sahf
dec
les
je
hlt
mov
dec
dec
std
fists
test
scas
fxch
fldt
and
push
jle
std
scas
jb
push
jns
xor
pop
lods
inc
nop
adc
xchg
enter
mov
andl
es
adc
movsb
loope
jnp
in
das
pop
or
imul
push
in
bnd
pushf
xlat
xchg
jl
push
popa
and
sub
mov
imul
sub
popf
fsubrl
mov
sub
fbstp
mov
std
comiss
dec
in
xor
test
mov
fwait
imull
sti
xchg
inc
mov
dec
mov
adc
sbb
add
push
shlb
cmpsb
hlt
frstor
and
xchg
fnsave
fcom
pop
sub
loopne
dec
mov
sbb
or
outsl
cmp
jns
je
testb
inc
mov
inc
push
in
or
dec
fbld
scas
insb
stc
test
loop
jbe
mov
lds
mov
fwait
je
iret
sub
mov
sbb
sub
and
std
imul
or
mov
loope
les
mov
mov
add
push
fsubrp
add
clc
dec
dec
icebp
call
sbb
arpl
mov
xor
fptan
movsb
add
cmp
or
imul
mov
cmpsb
cmpsl
clc
xor
in
jbe
bnd
dec
lcall
mov
jl
inc
scas
mov
or
sbb
out
sbb
or
negb
pop
out
cld
aam
popf
es
mov
push
in
pushf
js
push
js
fsubrl
adc
lahf
add
scas
sahf
sbb
out
jb
cltd
mov
pusha
mov
adc
arpl
mov
insb
fcoml
std
dec
or
out
nop
cmp
sub
hlt
xor
add
push
ss
xchg
xor
jmp
stos
sbb
jbe
or
fsubrl
cwtl
jno
aad
cmp
sub
add
outsb
test
cmp
pusha
pop
pop
rcl
dec
push
loop
cli
test
cmpsb
mov
arpl
jnp
mov
nop
push
sub
mov
int
inc
stos
add
rcrb
cmp
shll
mov
mov
or
mov
ja
aas
rol
xlat
push
jno
inc
sbb
sbb
sub
adc
sbb
and
pop
lock
out
dec
inc
pushf
sub
lock
pop
and
inc
cmp
xor
pop
enter
icebp
insb
xlat
and
jge
repnz
adc
nop
aaa
jno
movsb
cmp
sbb
outsl
mov
les
mov
adc
jo
ds
push
xchg
sub
les
dec
sub
nop
adc
or
stc
nop
mov
push
rolb
mov
and
pop
adc
push
clc
sub
mov
mov
mov
and
ja
lock
aam
sbb
movl
inc
insl
stc
mov
cltd
repz
int3
jg
jae
lret
xchg
jge
inc
into
xor
jns
push
pushf
cmp
aas
sbb
or
mov
pop
adc
inc
xor
xchg
add
sbb
mov
add
push
das
dec
mulb
or
loop
dec
sub
frstor
xlat
icebp
cmp
jo
movl
pop
orb
sub
pop
pop
in
mov
jns
sub
add
xor
sbb
push
and
test
fsubs
jbe
mov
pop
dec
xor
loop
pop
mov
pop
lret
rcrb
jb
adc
add
cmp
or
mov
sbb
push
jo
inc
mov
testl
adc
inc
data16
mov
mov
adc
mov
aad
push
push
jp
imul
shl
test
aad
mov
jg
sub
lock
inc
data16
adc
cmovbe
xchg
pusha
inc
out
fdiv
out
lds
mov
in
jecxz
xor
push
lcall
push
jmp
mov
jb
add
es
loopne
jnp
cmp
pop
fwait
insb
pop
add
mov
mov
subl
cmp
pop
scas
lds
arpl
lret
rcrb
jp
std
hlt
cmp
cld
push
lods
push
mov
xor
in
addl
test
gs
gs
xchg
and
push
lahf
jp
in
clc
cli
inc
sub
and
jecxz
inc
mov
nop
xor
je
or
hlt
push
xor
lock
push
mov
inc
xor
fidivrs
outsb
into
pop
ret
imull
fisubs
leave
hlt
jl
inc
faddl
sub
pop
cld
adc
sub
bound
push
call
sub
push
test
push
sbb
into
jns
loopnew
xchg
and
popa
adc
cmp
insl
xchg
xchg
cmp
in
xor
fbstp
shlb
add
dec
pusha
or
add
pop
mov
arpl
mov
sbbl
cwtl
xor
invd
sub
push
jb
cld
fbld
push
mov
xor
js
cmp
lds
mov
or
out
xchg
loop
adc
inc
jne
mov
mov
push
or
div
out
mov
ret
outsb
insl
or
xchg
sub
int
or
popf
push
scas
xor
sbb
fidivl
mov
lret
mov
jo
jb
int
nop
inc
lret
adc
rol
popl
call
lret
xchg
rorb
cwtl
outsb
mov
jp
or
loop
or
popa
jg
pop
sbb
std
jl
xor
adc
sbb
fmulp
daa
or
sbbl
hlt
cmp
mov
xchg
enter
outsb
jmp
ja
scas
inc
gs
mov
xchg
in
aam
mov
pop
sbb
mov
sub
setb
mov
pop
adc
mov
es
sub
cltd
mov
sub
pop
dec
push
div
jae
and
cmc
push
mov
gs
xchg
stos
mov
jnp
pusha
jmp
or
jg
lret
ds
xor
push
push
lods
or
jae
mov
aaa
into
in
and
pop
xor
jmp
enter
adc
xor
pop
jo
into
sub
push
ljmp
mov
cmp
mov
arpl
int
fsubrs
stc
inc
push
das
sbb
or
pop
in
xchg
push
jae
push
jg
rep
int
mov
dec
jns
mov
jbe
fldenv
jl
mov
add
xor
out
xor
inc
add
push
hlt
in
inc
push
call
or
in
dec
popa
sbb
sti
xchg
cmpsb
call
lcall
ljmp
ret
push
mov
lds
add
mov
lea
daa
dec
out
mov
ficoms
xor
mov
fisttpl
rcrl
dec
adc
int
icebp
sbb
repnz
sub
inc
call
and
aam
and
mov
out
ds
imul
in
outsb
mov
sbb
hlt
jae
mov
pop
jle
push
cmpl
or
ljmp
movsb
fdivl
push
insl
jb
mov
pop
xchg
daa
mov
lret
icebp
add
cs
shlb
sahf
negl
mov
pop
jp
push
rcl
inc
xchg
dec
xor
or
fcomps
imul
xorl
cmp
outsb
push
popa
stc
shrb
lods
and
shl
pushf
js
std
xlat
push
test
cli
adc
jne
hlt
xor
sbb
movsb
add
popf
sub
mov
sub
mov
sti
dec
lret
test
shlb
cld
inc
cli
jmp
sti
imul
lea
je
jg
add
mov
mov
mov
popa
pop
cmp
mov
lcall
and
mov
rcl
mov
add
add
cmp
movsl
xchg
push
pusha
push
jmp
in
pop
in
sub
pop
mov
or
lea
add
pop
cmpsl
loop
addr16
and
mov
or
test
ss
push
jmp
pop
jl
mov
loop
jecxz
lcall
jnp
jge
or
or
pushf
mov
iret
jo
mov
in
fdivp
jmp
or
aad
es
mov
fnstcw
cltd
bound
loopne
add
js
das
pop
mov
cwtl
xchg
xor
xlat
jne
aad
jg
lcall
repz
shl
fdiv
jb
sub
flds
or
inc
clc
jecxz
pushf
inc
xchg
lcall
cmp
movsl
jge
test
xor
insb
xor
rcr
push
ret
scas
in
or
sbb
pop
xchg
outsb
bnd
push
pop
loopne
mov
mov
adc
test
into
idivb
cmp
add
push
jnp
mov
ret
and
and
inc
jns
push
loop
ss
arpl
xchg
mov
stos
popf
push
adc
dec
data16
push
xor
pop
ss
xlat
adc
ret
pop
popf
mov
outsl
push
inc
adc
stos
mov
inc
cmpsl
mov
push
js
cmp
movsl
test
es
push
notb
out
pop
out
insl
push
repz
nop
in
cwtl
dec
mov
jo
cmp
jecxz
lret
xchg
and
test
push
push
mov
stos
shl
in
cmpsb
out
xor
add
ja
adc
dec
dec
dec
in
adc
stc
jne
enter
add
pop
outsl
repz
fildll
jno
cli
mov
negb
add
fstps
loopne
jecxz
cmpsl
and
sarl
cmp
inc
test
lods
ljmp
rcrl
and
fldcw
sti
cmpl
lods
data16
push
dec
lret
bound
aaa
std
test
push
xchg
insl
call
aad
call
mov
and
imul
mov
subl
adc
lods
push
ds
clc
subb
add
inc
push
cmp
xchg
pusha
push
test
aad
loope
cmp
dec
sub
mov
jecxz
add
movsb
aad
loop
inc
mov
sub
ljmp
out
sbb
das
in
jp
jge
jmp
sbb
and
test
mov
pop
jbe
ljmp
pushf
arpl
cs
int
sub
cs
or
sub
dec
jns
inc
mull
push
test
add
loope
loope
xor
scas
aad
jne
iret
jae
loop
adc
sub
das
mov
daa
cmp
stc
js
subb
or
int
shll
les
out
imul
test
js
adc
mov
cmpsb
mov
xor
aam
mov
add
leave
pop
and
lret
popa
jl
imul
push
and
lock
mov
setle
les
mov
sbb
das
jp
scas
cmp
fstpt
mov
inc
mov
int
int
or
pusha
pushf
rolb
xchg
lods
adc
repz
mov
repz
inc
pusha
into
inc
lret
push
mov
fiadds
and
mov
jbe
xchg
xor
push
repnz
ret
dec
push
jl
or
leave
fildl
outsl
add
scas
testb
pop
ljmp
jno
add
sub
into
insl
lods
xchg
pop
out
hlt
xchg
and
mov
mov
ret
inc
sub
mov
out
das
mov
jns
js
sbb
lock
pop
popf
xor
ss
repz
cmp
test
mov
clc
sub
sbb
fdivl
repnz
or
or
adc
jo
pop
adc
cltd
test
cmpb
pop
cmp
cmpsl
lret
sti
incb
push
and
and
sub
loope
jb
in
sbb
in
in
rcrb
add
lods
ret
pop
and
arpl
mov
frstpm(287
sbb
jbe
mov
jle
or
mov
movsl
loop
out
push
movsl
int3
mov
pop
jl
aam
loopne
clc
pushf
test
xchg
push
mov
cmp
pusha
into
enter
mov
test
jg
pop
rcr
loope
mov
add
jge
pop
sub
xchg
cli
movsb
cmp
xchg
xchg
sbb
ret
mov
repnz
out
adc
ror
fldenv
ja
xor
fstps
mov
jl
mov
xchg
sbb
mov
repz
add
ret
psrlq
fstps
jb
mov
stc
inc
sbb
jno
dec
popf
lods
lcall
mov
pop
test
jnp
outsl
jge
sbb
test
mov
lret
in
pop
leave
sbb
mov
or
push
fisubrs
cs
cmp
data16
stos
inc
stc
sbb
es
inc
es
and
bound
enter
sbb
sbb
dec
fs
jl
fwait
dec
inc
arpl
xchg
xor
ds
or
fildl
daa
lcall
cmp
test
test
cmp
mov
imul
sbb
test
cli
pushf
and
fidivl
xor
cwtl
pop
and
data16
imul
add
loop
pop
repnz
out
cmp
mov
sub
mov
js
mov
jecxz
loope
imul
sbb
scas
inc
icebp
test
in
xor
leave
jge
out
xor
std
pop
fidivrl
inc
mov
fldt
mov
imulb
hlt
xlat
dec
repnz
cwtl
mov
cltd
xor
lahf
leave
sub
mov
scas
insl
lock
push
cmp
movsl
inc
push
jmp
dec
loope
shll
adc
push
std
ss
jae
insb
pop
mov
mov
icebp
cltd
xor
cmp
xor
push
sar
jge
adc
fists
ficoml
xchg
mov
scas
push
cli
shl
jae
cltd
mov
dec
push
jo
cmpl
pop
mov
mov
jg
fists
dec
jb
push
sub
and
xor
cmc
jp
push
stos
les
mov
subb
xchg
and
loopne
or
cmp
jnp
in
out
push
xor
clc
mov
incl
out
push
sub
mov
mov
insl
add
les
fnstcw
dec
repz
imul
movsl
xor
pop
inc
xor
test
pop
xor
movsl
dec
inc
inc
dec
sub
push
popf
mov
mov
addr16
outsb
inc
add
hlt
xor
fistpll
ljmp
mov
out
dec
mov
stos
inc
lcall
fnstenv
ss
imul
jae
add
push
divl
xor
es
mov
mov
outsl
jns
sbb
lods
mov
jp
rol
ljmp
es
pop
lock
lods
xor
jl
lret
mov
add
imul
pop
jae
xchg
fsubl
aas
push
orl
lods
es
add
cmpsb
mov
or
cmp
adc
sbb
into
and
cmp
mov
fildl
cmp
inc
xchg
test
pop
insl
in
shld
or
jp
lret
inc
cmp
test
lret
dec
cli
cmpl
mov
out
bound
cltd
adcl
movd
in
jecxz
dec
cmp
lret
and
or
shl
cmp
and
jmp
add
pop
adc
movsb
push
or
sbb
std
mov
out
ja
stos
mov
js
ljmp
idivl
in
sub
outsl
loop
les
int
dec
loopne
insb
movsl
stos
xchg
xchg
addr16
xchg
jo
jne
jl
or
mov
pop
adc
mov
cmp
lock
push
ja
rolb
jae
fstpl
dec
mov
sahf
test
jns
xor
xchg
xor
ja
adc
roll
push
popf
insl
lcall
and
push
mov
push
lea
push
xorl
mov
jnp
fstcw
cli
in
add
mov
leave
in
xchg
mov
inc
lea
pop
xor
dec
aas
fidivs
out
insb
fisubl
dec
push
mulb
push
mov
push
ds
iret
and
in
es
xchg
mov
pusha
in
fstcw
cmp
cmpsb
or
cs
das
or
adc
out
xor
xchg
inc
imul
xor
jmp
or
icebp
ss
dec
loop
push
std
adc
mov
insl
push
mov
sbb
sti
dec
enter
retw
int
popf
sub
sub
aam
xlat
pop
ret
jmp
and
and
ficoml
push
idivl
jb
int
test
popf
mov
sub
add
and
orb
mov
insl
xor
adcl
scas
inc
ret
mov
gs
push
cs
aad
jp
iret
sarl
pop
dec
inc
out
divb
and
inc
mov
sbb
fisubs
lock
sti
test
sub
stos
cli
xchg
fildll
test
mov
lods
out
rep
lea
or
pop
fildll
push
sbb
lret
test
insl
movsl
or
out
cmp
int3
mov
xor
ret
addb
std
loop
pop
lea
mov
subb
cli
jp
lds
mov
pop
sbb
and
adc
sub
mov
pop
stos
inc
sti
cmovs
xlat
pop
rcll
mov
popa
push
ret
adc
cmp
call
sub
sbb
mov
cmp
push
les
inc
inc
out
mov
lods
push
psadbw
lds
rorl
mov
shrl
sub
jns
sbb
xchg
scas
imul
jb
leave
cli
jmp
sub
xchg
pushf
xor
push
mov
xor
pop
mov
xchg
or
or
sub
and
push
and
repz
jb
outsb
data16
pop
stc
or
fs
push
aad
push
pop
mov
repz
push
ret
mulb
mov
sahf
cmp
push
jp
fs
jbe
ret
mov
or
mov
out
out
popf
mov
jae
negl
xor
push
sahf
push
lcall
stos
movsb
mov
push
sarb
add
jecxz
sbb
mov
jle
inc
fistpl
ds
bound
cmpsb
dec
ja
lock
push
xchg
cmp
sub
mov
xor
ficompl
fs
jl
iret
test
in
pand
mov
xor
pop
dec
ss
mov
mov
sbb
insb
fidivrl
in
push
movsl
mov
ja
out
rcrb
shrb
out
push
daa
cmp
mov
sub
xor
and
idivl
push
fisttps
mov
jge
fucomi
mov
sub
sti
dec
sub
mov
or
iret
fldcw
pop
addr16
jo
iret
lcall
dec
add
es
fiadds
cmp
dec
add
lds
or
hlt
mov
push
cmpsl
in
dec
pop
test
pop
mov
jo
sbb
sti
inc
inc
mov
xchg
sbb
mov
in
add
shll
or
xlat
arpl
icebp
jne
lods
cmp
shll
aad
cmc
jmp
or
outsl
jbe
mov
lret
pop
pop
jle
xchg
add
out
mov
ret
inc
iret
in
mov
mov
cmpsb
inc
and
add
icebp
jp
pop
loop
test
sbb
xlat
cmpsl
dec
mov
in
clc
sbb
mov
icebp
adc
sub
leave
lcall
xchg
aam
fdivl
or
sbb
int3
movsb
pop
and
pushf
insl
push
cltd
sub
enter
cmc
in
loopne
pop
daa
data16
cmp
mov
imul
test
jb
cmp
sbb
dec
push
pop
xor
outsb
lcall
pusha
jle
inc
test
loope
fs
jbe
inc
daa
cmp
push
mov
adc
aam
jmp
mov
testb
cmpsl
adc
adc
insl
clc
mov
lcall
adc
movsl
push
mov
mov
jae
mov
and
adc
cmp
or
mov
movsl
insl
fwait
test
cli
or
sub
push
nop
xchg
xchg
or
mov
or
outsl
cmpsl
push
jnp
addb
test
aaa
fcomps
insl
mov
push
fnstenv
cmp
fbstp
sbb
movsb
xchg
mov
idivl
mov
add
jbe
sbb
or
fmuls
inc
scas
jmp
dec
dec
fwait
or
mov
ss
jae
add
inc
mov
push
sub
andl
add
cli
inc
xor
push
inc
cs
in
movb
dec
lods
jo
add
jbe
aad
cltd
pop
jge
and
les
popa
ss
add
mov
or
xchg
mov
int
cwtl
rcr
inc
popa
leave
pop
jb
shlb
icebp
outsl
out
dec
cltd
in
xchg
daa
shlb
rcrl
sub
add
add
repz
inc
clc
clc
notrack
jge
dec
jecxz
sahf
mov
out
mov
sbb
pop
mov
iret
and
rorl
or
jg
imul
inc
int
push
mov
mov
daa
icebp
out
add
bound
xchg
sbb
add
lea
js
dec
pop
nop
movsb
jnp
mov
add
lahf
testl
mov
fisubl
mov
dec
xlat
repnz
xchg
ficompl
dec
loop
imul
inc
popf
scas
test
int
mov
inc
push
mov
enter
hlt
adc
js
xchg
jnp
mov
int
rcl
das
fistpl
or
in
dec
dec
dec
stc
cmpsb
test
int
pop
jb
mov
add
daa
bound
jle
inc
fsub
pop
in
in
xor
arpl
mov
fcomip
imul
xor
ficompl
insl
xchg
adc
pop
cmpsb
loopne
daa
adc
sub
mov
icebp
pop
out
mov
cmpsl
leave
push
or
aad
lret
jbe
setno
inc
pop
cmp
inc
subb
cmpsl
bound
insb
push
cmp
je
inc
sbb
repz
in
add
sbb
jo
loopne
jns
enter
mov
pop
lret
mov
pushf
push
inc
add
les
mov
xchg
or
cmp
in
lret
pop
dec
popa
cmp
xchg
adc
mov
jbe
add
mov
popf
cmpsl
xchg
mov
test
mov
inc
jecxz
push
imul
or
decb
sbbl
sbb
add
es
add
sbb
fcoms
inc
push
aas
cmpl
pop
icebp
pop
inc
lods
mov
mov
out
dec
xchg
insl
imul
rorb
sahf
or
mov
pushf
sbb
xchg
addb
add
test
hlt
jbe
or
dec
push
xchg
mov
mov
xor
popa
mov
push
jmp
pop
lahf
mov
push
es
imulb
je
add
push
lcall
jecxz
jp
cld
lcall
in
xor
call
outsb
rcll
insb
add
mov
inc
sub
jb
pop
enter
push
mov
test
in
xchg
push
jbe
test
ja
lock
jle
js
adc
push
inc
mov
fdivl
xchg
imulb
and
test
jnp
pop
xchg
int
inc
jge
xchg
aam
push
pop
mov
int
stos
dec
mov
lret
fs
and
ret
loope
inc
dec
filds
in
dec
addr16
aad
adc
jo
mov
cmp
xor
stc
in
mov
lea
enter
test
push
loope
decb
dec
in
dec
xor
stos
imul
sbb
cmc
jo
mov
jg
sbb
mov
and
sub
xlat
je
jle
clc
inc
add
lock
enter
stc
sub
fs
roll
mov
mov
movsl
dec
iret
mov
mov
mov
sahf
daa
jae
cmp
adc
iret
xchg
add
addr16
subb
ds
pop
orb
roll
pop
les
insb
push
std
sbb
pusha
fisttpl
xor
pop
push
fstpl
outsl
mov
inc
ljmp
das
push
gs
hlt
jb
sub
pmaxub
and
mov
jmp
push
sarb
hlt
andb
popf
je
inc
push
cld
mov
out
dec
pop
cmp
hlt
mov
add
sub
stos
mov
mov
pop
das
cld
movsb
xchg
aad
pop
cwtl
sbb
imul
fs
loope
push
sub
je
xor
in
add
sub
push
jmp
push
cmpsl
int
mov
adc
mov
jl
out
inc
inc
dec
pop
and
fistpll
loop
mov
or
icebp
push
cmc
dec
rcrl
lds
push
inc
pop
dec
add
xor
jecxz
pop
push
push
lahf
jno
shlb
mov
xchg
into
out
mov
xor
ds
mov
je
push
push
jo
xor
pop
cld
test
inc
pusha
xor
inc
stos
jbe
stos
fcomps
sub
out
sub
hlt
push
inc
pop
xor
loope
pop
icebp
push
add
dec
int3
sub
sub
bnd
lods
aaa
mov
sub
mov
dec
and
flds
mov
cwtl
aam
enter
xor
testb
pop
punpcklwd
dec
dec
mov
fcmovu
push
push
scas
inc
mov
scas
mov
cli
cmp
leave
mov
jae
subb
add
adc
shrb
cltd
pop
aaa
xchg
sbb
and
dec
pop
push
mov
cwtl
xchg
mov
std
push
push
mov
fldenv
mov
arpl
pop
adc
jb
inc
jecxz
arpl
jle
jno,pt
lock
loopne
test
popa
sbb
test
mov
and
test
gs
loope
and
arpl
std
in
decl
and
sub
leave
lods
sti
ret
loopne
jge
mov
sarl
xor
mov
xchg
cmp
js
sbb
pop
imul
adc
mov
jmp
cld
inc
push
int
xor
xchg
xchg
mov
iret
jno
dec
test
xor
sub
cltd
in
out
ret
mov
pop
arpl
pop
mov
int
fcomi
mov
adc
add
jo
mov
push
and
pop
addb
mov
lock
or
mov
inc
pop
incl
xchg
pop
xchg
sub
mov
loopne
mov
xor
push
push
out
xor
push
inc
xor
adc
scas
xor
mov
inc
dec
adc
jecxz
decl
cmc
call
sbbb
test
mov
jb
cmpsl
jb
xchg
stc
je
das
add
dec
push
and
pop
cmp
sub
addl
mov
or
clc
and
out
mov
scas
and
js
mov
mov
or
mov
push
xor
push
dec
es
sahf
cwtl
test
push
sub
clc
pop
loop
mov
mov
cld
int3
iret
mov
push
cmp
add
int
rolb
in
mov
insb
out
popf
jge
xchg
add
movsb
call
nop
ficompl
sub
add
add
xchg
lcall
out
mov
lahf
ss
or
outsl
fidivrl
push
lret
cmp
cld
or
insl
ljmp
dec
and
arpl
add
xor
xchg
jne
inc
ss
stos
test
sbb
outsl
orl
out
mov
fcomps
sbb
ret
insb
jg
mov
push
outsl
jnp
mov
addr16
cmp
xchg
fisubl
sub
jmp
insb
push
jne
mov
adc
cmp
fucomp
push
dec
dec
push
mov
aam
mov
daa
inc
stos
add
xchg
shll
sbb
je
js
es
and
mov
push
mov
call
mov
test
idivb
insl
adc
aam
cltd
dec
dec
inc
and
nop
fcoml
push
lret
lock
push
add
lret
xchg
cmp
loop
aam
jge
je
and
inc
adc
movl
inc
sub
mov
adc
push
jbe
xchg
enter
pop
in
sub
out
pop
outsb
mov
jnp
outsb
lds
add
or
xor
adc
shll
cmp
or
push
sti
loop
ja
cmpsl
bound
ror
add
ds
mov
les
test
testl
pop
sub
jbe
xor
or
mov
push
scas
stos
mov
xchg
movsb
adc
lea
dec
push
push
or
stos
vpsrlw
pop
add
test
add
sti
shlb
push
jmp
rcrl
pusha
stos
sbb
jae
arpl
dec
dec
sub
add
movsl
test
push
roll
fucomp
out
pop
outsb
and
out
push
and
add
mov
mov
cltd
xchg
lcall
stos
test
adc
xchg
out
push
mov
ret
mov
loope
xor
add
test
fwait
insl
fdivrs
sahf
cmpsb
inc
lock
dec
js
cmc
iret
sbb
fdivs
pushf
cltd
cmp
clc
jmp
out
push
mov
sbb
test
xchg
aas
ss
clc
xchg
mov
ds
call
iret
int3
bound
push
and
or
lds
arpl
cmp
jne
inc
fnstcw
sbb
mov
push
int
jge
push
mov
rol
pusha
and
xchg
iret
cmpsl
push
sbb
dec
inc
mov
into
scas
movb
clc
adc
push
sbb
ds
enter
mov
js
out
scas
test
inc
movsl
mov
cmp
adc
jns
call
pop
sub
je
enter
or
ljmp
xor
test
dec
xchg
xor
loopne
xchg
xlat
cmp
add
xor
cmc
out
push
roll
test
mov
push
or
neg
mov
xchg
out
out
push
xor
sub
nop
mov
leave
pop
lahf
adc
xchg
sub
fwait
or
dec
sbb
adc
dec
jl
sti
add
pop
stc
xchg
fwait
aas
les
xchg
js
cmp
or
mov
cmp
cld
pop
cmp
loopne
sub
inc
xchg
test
fwait
mov
mov
mov
mov
in
into
movsl
lret
into
sbb
inc
and
push
xchg
sub
push
mov
add
push
jno
xor
les
rorl
daa
dec
in
sbb
pushf
int
test
jmp
xchg
out
pop
mov
divl
adc
aad
sbb
stos
mov
out
sub
mov
xor
mov
add
test
nop
scas
sub
inc
lock
adc
xchg
outsl
or
cmp
pop
jo
fiadds
arpl
in
mov
int
or
testl
adc
xor
clc
leave
aam
cli
sbb
imul
jp
mov
cli
imul
cmpsb
pop
fdivrs
cmp
xlat
pop
adcl
jo
bound
push
out
adc
fwait
pop
outsl
dec
mov
add
ds
int3
fdivs
shl
std
lcall
adc
xchg
stc
mov
xlat
adc
and
or
and
unpcklps
mov
pop
mov
push
fnstenv
clc
xor
mov
jne
jl
mov
dec
push
dec
inc
xor
hlt
cld
rcrl
fcmovbe
sar
sub
lods
repz
xchg
aaa
aad
lods
std
cmpl
scas
sub
inc
jns
daa
inc
or
or
int
or
inc
push
dec
push
sub
cmpsb
mov
xor
cli
incb
push
mov
scas
mov
mov
mov
sbb
mov
sarb
pop
imul
lret
lods
pop
push
sub
mull
add
cs
push
jmp
sub
jo
dec
lret
cmpsb
std
sub
shl
xchg
rolb
push
lods
xchg
fdivrl
lea
lcall
adc
ret
icebp
or
fs
mov
xchg
jnp
mov
push
mov
out
test
add
push
test
sahf
cltd
repz
mov
aad
mov
or
xchg
add
xor
push
out
mov
fidivrs
adc
add
mov
mov
dec
hlt
data16
cmp
daa
cmp
ds
test
in
push
mov
sub
jno
add
lods
xchg
popf
adc
sub
jno
push
lret
out
and
dec
lcall
sbb
loope
push
push
sub
rclb
cmpsb
xor
jecxz
ret
fldcw
sub
and
lods
lcall
jl
dec
cmp
push
jnp
dec
adc
das
pop
mov
lock
sub
std
ret
or
push
push
imul
mov
sub
lods
cmc
fidivs
loope
add
es
lea
sub
lock
add
add
jecxz
stos
inc
fcompl
mov
lret
data16
add
out
fsubr
pushf
or
and
jno
push
std
xchg
pushf
fimull
data16
adc
popf
es
or
sahf
bound
adc
dec
cld
xchg
rcrl
and
push
dec
and
sahf
cltd
stos
pop
jmp
or
es
cmpsb
les
cmpsl
sbb
mov
sub
sbb
jg
mov
mov
in
xorb
pop
rolb
jmp
sbb
jbe
clc
sti
push
and
mov
jns
ja
cmp
mov
decl
ret
lcall
leave
clc
and
dec
cmc
xchg
les
fwait
andl
add
pop
popa
mov
in
inc
roll
test
mov
idivl
in
add
push
jg
push
inc
fiadds
out
loop
sahf
stos
and
leave
jmp
sub
jmp
popa
sub
jnp
mov
idivl
inc
push
fwait
sbb
std
movsb
enter
test
inc
mov
lcall
push
icebp
xor
inc
pop
outsb
jle
xor
lods
jnp
cmp
mov
pop
movsb
fsts
out
loop
mov
dec
stos
jge
push
daa
mov
adc
fistpl
mov
in
mov
mov
xor
inc
pop
add
icebp
or
bound
sub
fcoms
daa
test
sarb
push
stos
repz
mov
stos
and
or
repz
js
std
xlat
mov
cmpsb
pushl
xor
ljmp
dec
lcall
nop
out
movb
movsb
pushl
into
cmp
sub
fisubl
fcoml
mov
clc
or
adcl
lock
sbb
mov
shlb
push
fcoms
mov
addr16
ja
cmp
in
mov
push
cli
adcl
lret
cld
lods
sbb
fisttpll
cmp
out
xor
sbb
or
or
mov
push
sahf
and
push
ljmp
adc
sbb
xor
dec
push
jmp
dec
cmc
mov
ss
mov
fwait
out
js
and
fsubrs
dec
loop
sub
mov
pop
dec
mov
in
mov
adc
cmp
cmp
mov
jp
aaa
push
push
sti
aam
push
fidivl
in
mov
mov
lcall
adc
fdivrs
jb
cli
sub
lds
sbb
aam
jno
dec
and
xchg
jns
arpl
mov
xor
xchg
mov
xor
gs
stos
push
leave
cmpsl
mov
ljmp
xchg
enter
subb
sub
xor
inc
outsl
loop
arpl
popa
lock
push
in
test
into
testb
sub
outsl
jnp
sub
or
jle
ret
pop
mov
ret
cli
aad
or
push
test
mov
jne
cmp
in
pop
pusha
fisubrs
and
cltd
dec
leave
in
mov
push
jecxz
push
pop
nop
or
popa
call
leave
and
cmc
in
add
mov
add
mov
mov
mov
mov
ja
dec
sub
int3
pop
dec
sahf
es
mov
mov
iret
mov
and
cli
push
add
int
test
imul
push
cmp
pop
mov
jns
add
fisttpl
or
pop
fs
lahf
ss
fstpt
lods
out
adc
inc
testb
cmp
jge
pop
aaa
jle
imul
push
jno
ja
fcoml
mov
stos
imul
and
js
inc
inc
es
mov
sbb
cltd
pusha
mull
cmpsl
push
sub
sub
lea
sbb
mov
aaa
lods
ret
mov
push
sbb
mov
dec
jns
cmp
clc
mov
shlb
test
sub
lahf
cmp
bound
sahf
loop
push
dec
or
mov
dec
inc
inc
mov
cmp
mov
cmp
add
pusha
mov
mov
aad
fsubrl
pop
sub
cli
data16
pushf
add
pop
vminpd
push
aam
lods
push
adc
sbb
cs
jl
sbb
xchg
adc
leave
pop
in
adc
inc
or
pop
fs
pop
jmp
addb
and
mov
pop
sahf
xchg
dec
in
mov
or
fistpll
ss
cmp
cld
pop
icebp
mov
adc
iret
data16
mov
scas
push
dec
data16
rep
pushf
test
stc
icebp
test
cs
addl
je
jl
mov
jle
push
xchg
jp
clc
add
cmp
push
imul
enter
into
mov
js
xor
lcall
pop
pop
sti
and
jne
jecxz
or
mov
inc
insb
outsl
icebp
dec
in
mov
lea
cmp
pushf
cmp
fld
jecxz
mov
mov
out
sub
inc
adc
in
sti
push
inc
dec
push
xchg
jle
jmp
sti
shrb
sbb
dec
pusha
adc
sahf
xor
in
add
jmp
xor
jo
sti
out
add
sahf
sbb
sar
lods
push
out
pop
and
inc
jnp
outsb
loope
pop
lret
dec
adc
scas
leave
xchg
in
jns
push
in
inc
pushf
sub
insb
mov
sbb
jmp
lahf
dec
jbe
xorb
aas
dec
ret
pop
xchg
sub
jns
popa
mov
insb
add
add
cltd
or
cmp
xchg
adc
bnd
jns
sub
hlt
inc
push
cmp
and
repz
in
and
xchg
and
imul
jbe
mov
push
imul
out
cwtl
sbb
lret
or
sbbl
inc
inc
in
ja
inc
popa
push
lods
adc
out
psadbw
les
cwtl
nop
daa
lret
dec
loopne
shr
xor
dec
or
or
aam
test
push
mov
mov
jae
sub
rorb
jg
mov
in
adcl
andl
aas
cltd
loope
mov
ret
fdivrs
call
cmp
jo
les
cmc
or
jecxz
lock
jecxz
pop
in
clc
add
sub
pop
cmpsb
loop
cs
fcmovnb
rol
lea
push
push
mov
lds
inc
add
push
pop
and
push
lods
iret
test
bound
jnp
subl
iret
cmp
mov
test
inc
sub
or
sub
scas
loopne
jne
je
mov
mov
xor
mov
jmp
push
insb
and
insb
push
mov
aaa
pop
xor
repnz
loop
insl
xor
aaa
fwait
mov
cmpsl
aas
pop
xor
mov
inc
loopne
or
cs
push
in
addl
jo
das
ja
push
es
inc
popf
or
jns
mov
cmp
xchg
pusha
addl
in
mov
push
cwtl
xor
test
inc
xchg
aam
push
fstps
jg
mov
sbb
cmp
aad
cs
div
adc
aam
adc
nop
fucomp
daa
out
out
mov
das
cmp
mov
push
add
inc
sahf
scas
push
mov
add
xchg
jo
and
cs
or
testl
add
cmp
dec
pop
loop
repnz
xchg
add
iret
ja
add
lock
mov
and
popf
or
jle,pn
sub
out
lods
push
cmp
dec
inc
int
mov
cpuid
dec
loope
jae
add
clc
push
mov
mov
daa
mov
outsl
vprotb
pop
mov
adc
addr16
or
fs
mov
fstl
out
mov
lahf
loopne
idiv
movsl
movsb
and
pop
xchg
cmpsb
adc
jp
outsl
int3
mov
mov
jge
push
pop
mov
stc
push
scas
frstor
repz
sbb
or
adc
pop
cmpsb
pushf
mov
repnz
mov
adc
sub
lret
mov
sbb
mov
leave
movsb
in
jnp
cld
lods
jecxz
mov
fnsave
int
jle
aas
mov
sbb
lock
movb
mov
mov
nop
loope
jb
mov
pop
mov
jl
sbb
cmp
mov
mov
imul
mul
mov
lret
cmc
outsb
push
jmp
ljmp
adc
inc
pop
subl
rol
out
xchg
sbb
sarb
pushf
outsl
cmpsb
or
xchg
rcl
sbb
push
mov
lea
fnstsw
cmp
daa
je
outsb
mov
mov
push
push
lret
leave
jnp
jns
push
or
in
adc
scas
ret
cwtl
mov
mov
fisubs
je
sub
jns
mov
icebp
test
in
incb
and
das
sub
and
jge
add
dec
inc
stos
stos
jo
dec
jbe
hlt
adc
popf
sub
jl
and
inc
mov
pushf
aam
stos
jmp
mov
dec
push
jl
cmp
ds
lods
adc
fnstsw
xor
call
in
dec
stos
xchg
test
loope
int
push
jbe
dec
cmpsl
jge
cli
cmp
add
mov
add
fildll
movsl
jge
inc
and
xor
lret
out
stc
movl
sub
ja
mov
mov
insb
cmp
ds
aas
scas
ret
nop
fildl
sub
mov
ja
push
jae
iret
mov
inc
sbb
pop
rcrb
push
sarl
fisttps
inc
loope
pop
iret
mov
js
sti
jle
sub
pop
je
add
add
pop
frstor
movsl
xchg
rcll
ja
fcoms
dec
pop
inc
jno
sti
xchg
push
push
subb
xor
pop
icebp
ret
cmc
enter
xchg
fistps
dec
lahf
jg
loope
inc
push
sub
pop
into
push
xchg
icebp
inc
push
jle
cld
enter
cltd
jmp
outsl
loop
nop
cwtl
xchg
xchg
cmpsl
ds
sub
stos
es
js
pop
or
adc
gs
push
sbb
sti
push
iret
pop
mov
mov
push
aas
xchg
mov
vpsubd
jnp
idiv
sub
or
and
lods
inc
gs
int
int
int3
fadd
jnp,pn
test
and
mov
movsl
mov
sbb
jne
ss
jle
mov
gs
add
adc
ljmp
push
pusha
add
sahf
lahf
or
xorl
in
xchg
jecxz
push
dec
in
sti
aad
aad
mov
imulb
push
icebp
fwait
fwait
aas
mov
outsl
divl
imul
cmpsl
stc
push
mov
lea
lcall
insl
mov
ljmp
mov
xchg
cmp
fwait
mov
or
jl
inc
mov
flds
jnp
sti
push
jae
repz
mov
decb
add
jmp
dec
lds
inc
jecxz
aad
pop
stc
dec
cmp
scas
xchg
stos
add
add
bound
dec
push
mov
add
adc
jo
out
cmpsl
lock
adc
pushf
fbld
sbb
cld
je
outsb
jne
xchg
inc
fcmovb
insl
jl
inc
xchg
mov
add
cwtl
mov
push
or
pop
lahf
sahf
daa
or
jb
scas
mov
loopne
jne
fs
or
jg
test
cmp
xchg
ret
das
mov
mov
or
inc
sbb
and
mov
int
clc
pop
ss
mov
sbb
jno
dec
pop
ljmp
mov
aas
xor
test
jae
pusha
push
or
cli
dec
aaa
outsl
movsl
enter
imul
xchg
and
mov
iret
mov
idivl
pushl
loopne
add
lcall
jne
test
push
inc
cmp
test
fdivl
lret
pop
adc
mov
or
arpl
divb
mov
lahf
jmp
in
fcomi
leave
or
mov
dec
dec
adc
outsb
fisubrs
sub
gs
pop
in
sub
jae
inc
jno
out
mov
fidivrl
adc
data16
jnp
clc
xchg
adc
std
jb
fists
int
jae
insb
lds
sub
jb
int
mov
repz
push
mov
loop
xchg
xchg
dec
adc
and
sbb
adc
inc
cmpsl
sti
or
inc
inc
lret
cld
fs
push
stc
xchg
mov
xchg
sbb
adc
inc
mov
pop
mov
adcl
add
pop
repz
dec
mov
out
fimull
mov
pop
jae
in
adc
add
xchg
sbb
pop
xchg
loope
xor
bound
xor
addr16
mov
aaa
out
inc
fidivl
in
xorl
or
ja
mov
pop
sub
sahf
pop
int3
fs
shrl
loope
repnz
shlb
jnp
cmpsl
xchg
aas
mov
arpl
xchg
mov
ffreep
rol
pop
add
push
pushf
adc
ffreep
arpl
ja
cmc
mov
int3
and
nop
repnz
in
pop
mov
dec
dec
push
leave
push
jmp
dec
dec
rep
xor
stos
jne
xor
notb
push
sbb
xor
fs
outsl
mov
pop
or
data16
dec
sbb
stc
rclb
lahf
testl
call
push
and
inc
push
dec
sbb
jle
icebp
fistpll
add
mov
negl
inc
push
mov
call
in
mov
ss
push
inc
xchg
cmpsb
ror
fisttpl
pop
xchg
cld
lcall
mov
add
out
addr16
enter
jl
shlb
fwait
lods
push
or
shrl
nop
paddb
jne
movsl
cmpsl
scas
mov
insl
push
sti
adc
test
pushf
pop
jmp
ljmp
sbb
test
mov
adc
les
nop
lock
ret
mov
sbb
rorb
dec
mov
xchg
nop
fisttpl
sbb
jnp
bswap
mov
jmp
rcl
rolb
jnp
shrb
dec
and
arpl
fldcw
popf
movsb
rcl
jg
inc
fs
mov
and
xchg
jmp
sub
lds
repnz
rorl
dec
pop
jecxz
fildl
sbb
cmp
push
test
imul
popf
cmp
jne
lret
cmovl
and
scas
push
sub
xor
popa
xor
add
mov
andb
int3
mov
xchg
in
push
popf
mov
or
clc
popf
inc
arpl
sbb
int3
dec
mov
cmc
mov
test
rorb
sbb
mov
rcr
mov
cmp
inc
mov
lahf
outsl
out
or
cltd
mov
sub
std
sub
xor
sbbb
out
pop
cli
jne
or
sti
pop
out
inc
add
add
daa
adc
pop
shlb
inc
adc
clc
jmp
inc
add
pop
or
testb
pop
push
fs
mov
sub
pop
xor
pop
cmp
in
lods
dec
in
push
xor
adc
fs
cmpsl
or
sbb
or
pop
cmpsl
lret
shll
aad
in
inc
jg
pop
mov
push
cltd
repz
mov
or
inc
mov
push
lds
nop
out
stos
dec
add
and
psubsw
mov
or
arpl
clc
xchg
and
fnstcw
adc
and
mov
mov
inc
xchg
popa
cmpsl
sbb
or
pop
js
jo
loope
mov
adc
nop
ret
mov
and
movsl
inc
addr16
int3
mov
jmp
insl
sub
mov
roll
bnd
shlb
pop
in
push
mov
rsm
sub
xchg
loopne
xor
mov
testb
dec
push
adc
push
bound
pop
out
or
push
cmp
xor
add
cld
push
sub
dec
lods
out
adc
cmp
mov
jmp
xor
pop
lcall
pop
xchg
sub
lods
mov
push
repz
dec
fucomi
outsl
mov
or
mov
jp
fdivs
adc
inc
mov
jg
psubw
inc
movl
sti
xchg
add
cwtl
and
jns
loopne
cmp
adc
add
test
adc
mov
cmpsb
gs
mov
fisubrs
in
jmp
inc
fsubrs
fildll
inc
mov
cmp
mov
scas
xor
pop
loop
outsl
push
mov
mov
pusha
rcrl
or
lock
fwait
and
mov
icebp
xchg
xchg
xor
shlb
rcrl
sbb
les
ja
xorb
add
cmpsl
movsl
sub
cwtl
sbb
int
and
ljmp
fs
inc
push
sub
insl
push
out
dec
pop
fdivs
dec
cmpsl
stc
jns
cld
ljmp
xchg
das
ds
push
ret
sbb
dec
mov
int3
push
add
and
in
mov
aaa
ljmp
sub
jecxz
daa
pusha
out
cmc
pop
outsl
pop
xchg
xchg
pop
cmp
in
push
sbb
xchg
mov
mov
shrb
mulb
mov
loope
pop
xchg
mov
adc
or
adc
push
jge
jne
sub
in
xchg
mov
jge
sbb
sbb
or
mov
sub
xchg
mov
adc
jle
jmp
adc
xor
jecxz
mov
sbb
push
ret
or
sub
xchg
sub
lea
jp
sbb
movsb
cld
fwait
push
ret
outsl
into
in
lods
outsl
sbb
ret
outsl
adc
cmp
sbb
es
cmc
or
ret
jo
mov
mov
shrb
pusha
cmp
inc
add
sbb
imul
insl
aaa
jb
addb
bound
and
push
hlt
sub
lret
inc
mov
lahf
mov
mov
jecxz
fdivr
mov
nop
mov
jmp
mov
and
mov
in
fwait
jg
xchg
xor
xor
daa
add
jge
jle
adc
inc
in
test
cs
push
movsl
mov
push
into
mov
mov
mov
jne
mov
and
mov
or
mov
das
xor
push
sub
call
mov
xor
jle
orb
mov
cmp
call
sub
mov
mov
stc
xchg
fidivs
jg
pushf
nop
sub
fbstp
es
cmp
test
lret
jg
pop
sub
or
out
jg
push
mov
fdiv
cmp
jnp
mov
push
jne
cmp
add
push
lcall
shll
loopne
xchg
mov
mov
push
movsl
sbb
movsl
in
pop
cwtl
sbb
pop
out
aaa
jno
stos
ss
repnz
inc
adc
xchg
pop
rclb
test
add
xchg
mov
aad
ret
mov
inc
testl
clc
adc
shrb
cmp
sbb
or
cmc
ret
sarl
invd
movsl
lods
sbb
rcrb
mov
cmpsl
aas
popa
mov
add
add
enter
sub
and
mov
in
adc
decl
nop
inc
sbb
jo
mov
pop
int3
pop
cwtl
sbb
test
rcrl
outsb
jge
pusha
push
int3
xchg
mov
push
sub
aam
sbb
mulb
cmp
cmp
push
dec
xchg
jge
repnz
dec
fadds
ljmp
and
mov
mov
dec
inc
addr16
mov
addr16
push
ficompl
cld
cmp
movsl
xchg
out
cmpsl
pushf
pop
pop
int3
add
cmpsb
aad
std
mov
adc
daa
cmc
daa
xor
xchg
dec
mov
pop
lret
in
dec
out
ficoms
adc
faddl
pushf
and
rcrl
daa
repnz
sbb
jo
push
push
pushf
mov
shl
lods
jns
pop
xlat
push
out
pop
iret
pop
addr16
or
xchg
lock
sar
or
call
in
and
push
shr
fs
add
xor
cmc
push
and
sti
dec
mov
lahf
dec
dec
stc
and
cmp
cmp
or
xchg
out
cmp
pop
mov
lea
fisttpl
push
insb
push
fsubrl
adc
xchg
xor
mov
mov
fwait
pop
sub
pop
jnp
push
jo
or
sub
repz
and
dec
pop
pop
stos
and
mov
mov
dec
ret
sti
lods
cmpsl
sbb
xchg
cs
out
sarb
aad
je
lahf
push
js
decb
fwait
inc
loope
ret
sub
in
scas
mov
movsb
in
imul
xchg
and
jecxz
je
pop
repnz
mov
push
lcall
mov
push
ss
and
pop
ret
bound
lea
into
data16
fwait
bound
jbe
lods
inc
fnstenv
stc
movsb
cli
lret
xchg
mov
pushl
pop
pop
movsl
sub
cmp
stc
loope
ret
and
xchg
in
testb
icebp
pop
pusha
pop
cmpsb
cmp
mov
les
jnp
dec
pop
adc
jge
jnp
and
ss
jbe
mov
outsb
inc
xlat
xchg
movb
imul
out
pusha
push
cmp
call
movsl
sbb
mov
addl
rorb
push
jae
je
xchg
sub
sub
add
mov
shlb
hlt
and
das
inc
out
es
lock
and
scas
fidivrs
loop
or
insb
push
ret
ljmp
or
pop
mov
enter
insb
xchg
adc
test
mov
into
mov
lds
rcll
cmpb
push
outsl
mov
outsl
test
cmpsb
xor
xchg
mov
bound
add
inc
int3
lret
inc
push
mov
jno
or
jns
inc
cld
mov
cmpsl
ds
or
and
insb
mov
rcrb
mov
test
dec
sbb
cwtl
mov
push
daa
leave
int
insl
lock
push
inc
and
out
push
aas
mov
test
and
jp
xchg
jecxz
pop
div
rcr
jp
xchg
lods
negb
loopne
insb
xor
sahf
insl
cmp
loop
cmc
inc
jno
sbb
cmp
stos
xchg
ret
pop
mov
out
add
imul
sub
pop
cmpsb
imul
out
add
daa
xor
sub
insb
pop
sti
popf
js
xchg
inc
mov
push
lahf
in
dec
and
sub
sub
jbe
aad
mov
and
test
sbb
adc
andb
or
lret
repz
mov
and
xorl
in
addr16
dec
push
and
cmc
jecxz
push
mov
dec
xchg
xor
mov
mov
popa
ds
in
cmp
sbb
mov
test
lcall
xchg
sbb
popf
jne
add
adc
fldl2t
adc
or
mov
out
popa
mov
outsb
cmp
dec
scas
cmp
adc
clc
cltd
jno
dec
sbb
fbld
aam
cmp
adc
and
stos
xchg
jg
stos
fdivs
xchg
add
imul
or
les
pop
xchg
rorl
and
pop
cmp
xor
fwait
cs
out
je
daa
mov
inc
xchg
jle
lds
test
sbb
fs
dec
popf
test
scas
fs
repnz
incb
mov
dec
pop
inc
sbb
ds
jno
jecxz
sti
xchg
add
lahf
and
repnz
adcb
mov
add
in
mov
cmpb
clc
adc
das
inc
sbb
jns
out
outsb
jle
std
ja
dec
notb
or
pop
mov
xor
es
into
loope
mov
jp
push
pop
and
cmp
jns
xchg
xchg
mov
jbe
push
push
adc
xchg
js
pop
in
pop
in
clc
les
inc
jecxz
pop
repnz
jo
inc
cmc
adc
dec
jnp
lds
leave
lret
in
lret
mov
or
shll
ja
mov
fildl
jl
lcall
loop
jo
mov
push
orb
xchg
daa
inc
fs
push
pop
out
scas
inc
sarb
pop
ror
cmp
sub
add
adc
popa
xchg
sub
inc
mov
aad
fstpt
adc
cmp
dec
stos
inc
xchg
lea
int
mov
xor
lea
decl
cmpsb
ret
add
in
cmp
cmp
pop
cs
pop
xchg
repnz
add
popf
das
popa
cld
xorb
mov
scas
xchg
mov
rcll
movsl
sti
xchg
divb
rorb
add
lcall
and
ja
inc
xchg
call
lret
insl
jae
xchg
in
sti
das
push
cmp
mov
cs
inc
pop
mov
sahf
data16
insb
fwait
dec
pop
fdivl
outsl
push
push
or
add
sbb
or
call
xchg
std
dec
adc
add
xchg
push
jo
in
mov
xchg
push
stos
push
and
repnz
fldl
mov
xor
arpl
pop
lods
add
jae
push
cld
push
push
pop
dec
out
cmpsl
dec
les
cmpb
jo
stos
add
jne
mov
pop
jae
or
or
stos
jno
movsb
pop
xchg
test
xor
mov
mov
xor
adc
lock
jmp
jle
fistl
cs
clc
or
aas
mov
pop
fnstenv
mov
in
repnz
jno
dec
jp
orb
popf
in
and
jbe
sub
add
mov
mov
cmp
xor
sarl
out
std
xchg
push
fidivs
clc
gs
js
xor
ds
cmp
dec
rclb
mov
inc
xchg
xchg
in
mov
fldt
push
pushf
xor
sub
outsl
adcl
mov
pop
and
mov
lock
loope
pop
notb
int3
jge
std
sbb
jmp
iret
jne
and
dec
leave
push
pmaddwd
add
mov
mov
lods
stos
push
and
cmpsb
mov
pushf
out
cld
sub
or
ljmp
xchg
les
cwtl
pop
mov
sub
imul
nop
mov
jae
xchg
test
xor
sbb
or
jb
lods
sub
outsl
mov
into
shrb
push
clc
sbb
in
movsb
mov
and
adcb
jp
out
fidivrs
pop
and
jb
xor
mov
jg
lahf
mov
inc
or
movsl
fcompl
mov
imul
push
int3
mov
sbb
mov
lret
lret
in
push
or
arpl
xor
adc
out
adc
movsb
cmp
mov
xchg
inc
ret
mov
fwait
ret
jmp
lcall
inc
jae
pop
adc
pop
push
loop
dec
sbb
js
or
aad
mov
dec
loop
je
out
pop
pusha
or
push
popa
xor
repz
cmp
outsl
and
mov
mov
sahf
push
push
out
fistl
xchg
pop
fstp
hlt
orb
test
dec
aaa
repnz
sub
xor
sub
mov
cmpsl
lods
fmuls
mov
push
sbb
popf
lods
pushf
test
cld
push
jecxz
adc
fs
jle
out
mov
loop
xchg
fldenv
lret
test
mov
and
test
clc
adc
adc
fcmovnu
pushf
popa
mov
scas
jno
js
arpl
je
fildll
mov
lock
imul
fsubrl
and
or
jge
xchg
repnz
popf
and
pop
mov
push
inc
ljmp
call
test
push
push
fisubs
jns
jno
mov
jmp
mov
sbb
jnp
xor
imul
jo
std
and
adc
and
mov
pop
popa
aas
jle
jp
xchg
inc
out
pop
sbb
add
or
mov
and
adc
xchg
loop
jo
add
lods
mov
stos
insb
icebp
std
xchg
jecxz
leave
pusha
mov
push
mov
jl
inc
inc
pop
roll
add
push
push
movsl
clc
jle
xor
pop
mov
les
sbb
ljmp
ds
icebp
movsl
subl
je
cmpsl
out
and
pop
push
cmp
or
mov
out
xchg
gs
ss
sbb
fs
mov
adc
or
inc
cmp
aad
xlat
sub
out
xchg
cmp
dec
xchg
sbb
fnstcw
cmp
and
push
dec
mov
cmp
xchg
and
add
mov
outsl
xchg
inc
fmul
jno
out
pusha
das
fidivs
ret
lods
das
jp
lods
inc
lcall
dec
addl
mov
sbb
dec
rorl
xchg
sub
enter
sbb
gs
add
in
lahf
adc
lcall
or
cmp
loope
shll
or
rcrl
mov
in
pop
cmpsb
push
pop
sub
adc
push
testl
push
nop
iret
xlat
rorl
insb
jle
lret
add
ljmp
in
push
test
push
shll
fs
cmp
jg
push
iret
cld
dec
divl
stos
mov
ds
cld
mov
xor
lods
dec
stos
sub
popf
pop
lock
pop
adc
aas
add
movsl
mov
lret
or
std
mov
pushf
sar
ficoml
mov
jecxz
xor
xchg
cs
out
sub
stos
mov
xor
int3
dec
int
ds
and
jo
adc
sub
pop
push
xor
div
pop
loope
test
adc
les
xor
out
sbb
jle
aas
jnp
push
inc
stos
xor
fcomi
mov
mov
push
mov
sbb
fisubrl
inc
jl
dec
pop
and
inc
jecxz
xchg
adc
or
cmpsl
jns
out
outsb
dec
jnp
and
xor
outsl
hlt
mov
or
repnz
pop
fistpl
inc
jle
jl
push
addr16
mov
or
dec
mov
mov
push
mov
movl
inc
in
push
xchg
add
push
xor
mov
jecxz
mov
sbb
mov
cmpsl
lret
dec
in
fs
mov
enter
test
out
lock
xchg
mov
sbb
or
js,pn
cmp
cmp
loopne
dec
aam
dec
mov
push
jmp
pop
adc
movsl
push
mov
stc
clc
je
aam
jge
push
imul
cwtl
jge
cli
iret
cmp
pop
pop
push
pop
or
outsl
cmp
popf
jg
pop
mulb
cmp
jecxz
add
bound
cmpsl
dec
ret
pop
cmp
fs
cmp
fwait
dec
xchg
mov
popa
add
jp
sahf
icebp
mov
xor
jbe
xchg
mov
mov
push
clc
push
inc
lahf
insb
jae
xor
cmp
jp
int3
xchg
call
cltd
jno
imulb
xlat
test
mov
pop
imul
and
fimull
inc
test
stos
fs
fcompl
out
pop
daa
dec
divl
insb
pop
fidivrs
cmpl
jp
dec
inc
sbb
mov
cmp
xor
pop
pop
pop
fdiv
fwait
xlat
mov
mov
cmp
cs
stos
cld
xchg
xchg
mov
jmp
sbb
test
pop
data16
stos
sbb
jge
and
adc
cmp
xorb
add
pusha
add
fbstp
lcall
lret
jne
or
cmp
pop
mov
cwtl
outsl
pushf
in
test
loop
cmpsl
aaa
fcomps
add
or
sahf
lods
inc
rclb
ds
inc
dec
add
sbb
int3
cltd
pop
stos
xlat
in
outsl
mov
adc
push
sbb
push
fs
sbb
mov
testl
xchg
sbb
jo
jae
ja
mov
add
xchg
pop
jp
les
inc
ret
cmp
sub
testl
xchg
mov
xchg
js
push
stos
mov
or
adc
mov
xchg
mov
xor
and
call
orb
mov
jbe
fsts
cmc
jne
test
add
xchg
jle
and
leave
mov
dec
and
mov
dec
test
mov
repz
inc
sarl
dec
mov
into
rcl
pop
mov
xlat
sbb
mov
and
pop
push
inc
push
ljmp
jmp
pop
inc
out
xchg
out
adc
mov
inc
xor
data16
aaa
cmc
mov
into
in
repz
clc
and
loope
mov
jg
jge
push
mov
rcrl
xchg
sbb
sbb
dec
loopne
ljmp
jle
jmp
test
jbe
fs
repnz
bound
std
cmp
and
lea
dec
add
call
xor
mov
xor
cmp
sub
inc
ret
outsb
loope
mov
add
mov
xlat
mov
pop
adcl
mov
fisubs
xchg
pop
repz
cmpsb
sub
cmpsl
insl
mov
cli
xlat
mov
jecxz
jb
xchg
leave
test
sbb
pop
xlat
or
out
aaa
cmc
pop
sbbb
pushf
inc
out
outsb
lahf
add
jnp
cmpsl
inc
loop
icebp
mull
sti
inc
mov
mov
push
adc
dec
jecxz
dec
mov
push
adc
cmp
fs
add
mov
fs
adc
push
js
or
lcall
insl
push
loope
inc
sub
ljmp
test
inc
dec
pop
push
loope
insl
push
das
and
hlt
push
bound
jbe
cld
adc
or
mov
adc
test
popa
xor
int3
jmp
dec
sbb
mov
push
jl
in
jge
sub
mov
adc
xor
sub
aas
sti
aas
sub
daa
and
sub
or
negl
daa
mov
jmp
or
loop
mov
ja
push
jmp
jmp
call
mov
jbe
xchg
mov
xchg
push
jo
push
jnp
and
iret
es
inc
decl
jecxz
xor
mov
inc
sahf
pop
jg
stos
dec
pop
fmul
sbb
mov
pop
loop
outsl
cmp
lahf
mov
in
js
insl
icebp
mov
push
pop
pushfw
adc
sbb
je
jle
sbb
bound
incl
lods
es
sub
inc
dec
shrl
add
outsl
xorb
cmp
jno
lcall
clc
mov
out
and
ja
or
xchg
mov
jle
fidivs
pop
data16
or
pop
mov
cmp
in
pushf
sub
sbb
notl
mov
xchg
mull
jae
aaa
push
mov
bound
stos
jbe
ljmp
mov
inc
fldlg2
sub
sarl
push
mov
xchg
xor
dec
sub
cs
xlat
jl
jo
out
add
loope
add
add
and
daa
cmp
fidivs
mov
jno
xchg
push
inc
cmpsl
lahf
xchg
dec
jl
xor
sub
adc
mov
fidivrl
xchg
lods
sbb
or
repz
xor
fiadds
ja
and
xor
add
scas
out
and
adc
or
pop
jno
jmp
addr16
cmp
sbb
jno
loope
jno
mov
in
xor
adc
insb
pop
jmp
fidivl
xorl
jne
lcall
mov
inc
pop
jmp
inc
test
xor
int3
incl
pop
xor
lods
call
mov
mov
pushf
fldl
movsbl
mov
dec
lods
shll
hlt
mov
inc
sbb
sbb
jbe
jge
push
mov
orb
ss
push
fs
add
js
jb
testl
push
aad
out
lret
ja
push
std
xchg
cmpsl
ljmp
fidivrs
jns
or
cs
add
cmp
pop
pop
int3
xor
jnp
in
dec
push
iret
icebp
lods
sub
sar
jb
and
xchg
xor
sub
pop
pop
shrl
pavgb
jo
add
sub
xsaveopt
dec
pop
es
inc
push
or
pushf
fnstcw
fwait
int3
leave
inc
push
jno
clc
mov
int3
lea
dec
cmp
xrelease
xchg
mov
dec
mov
xorb
inc
xchg
sbb
inc
sti
pop
add
clc
add
insb
aam
jb
or
pushf
jnp
lahf
mov
dec
pop
loop
mov
push
icebp
shrb
pop
test
xchg
or
stos
mov
mov
cmpl
lock
jg
mov
push
es
shl
jg
cmpsl
xchg
adc
cs
lret
mov
sub
js
popf
scas
mov
in
leave
and
int3
or
mov
shlb
insb
in
add
adc
mov
mov
jmp
add
arpl
jne
add
jmp
or
pop
push
sub
fwait
cmp
popa
lret
fdivl
and
xlat
mov
push
cld
in
fs
jns
fcomp
lods
test
jp
out
ror
xchg
test
jge
notl
add
cmp
pop
ss
lock
addr16
or
sub
and
test
adc
sbb
jl
das
sbb
movsl
jle
push
loope
pop
xchg
mul
mov
mov
sub
mov
mov
cmp
ljmp
sub
stos
loopne
mov
mov
fadds
inc
adc
cwtl
dec
mov
jne
cs
pushf
xor
push
dec
push
popf
push
mov
or
cmc
and
lret
into
push
sub
mov
push
mov
andb
nop
push
pop
push
movsl
lock
fists
cmpsl
dec
xchg
clc
xchg
daa
daa
jle
outsl
lock
data16
mov
lods
mov
addl
mov
xor
fs
sbb
sar
mov
mov
mov
dec
xchg
ret
mov
jl
ds
dec
and
xchg
pop
addr16
xchg
leave
dec
inc
ret
adc
rcl
sbb
test
jl
mov
aaa
jmp
jle
loop
mov
add
jne
push
stos
push
inc
xchg
popf
cmp
ret
into
jne
mov
into
pop
mov
shll
fistps
cwtl
jle
ja
or
cmp
inc
inc
mov
into
lret
sub
nop
inc
add
nop
push
addb
push
mov
push
push
rcrb
mov
mov
rcrb
mov
ret
pop
mov
div
push
in
and
jae
cmp
mov
jno
popa
xor
or
aas
ror
lods
xor
push
push
arpl
mov
mov
xor
lock
fcmovne
xchg
inc
push
ss
sti
into
cmp
movsl
jecxz
scas
inc
pop
sbb
ret
arpl
out
mov
jge
and
loopne
imul
outsb
push
aad
adc
mov
inc
je
jle
les
sub
xchg
dec
popf
push
idiv
insb
pop
mov
imul
or
sar
stos
test
xchg
sub
xor
outsb
adc
jmp
ds
andb
xchg
sbb
rcl
arpl
cmp
pop
mov
sbbb
mov
ret
dec
sarb
mov
lea
insl
arpl
push
inc
dec
dec
ljmp
adc
outsb
xlat
sbb
inc
xchg
jb
jb
adc
xchg
fidivrl
test
adc
int
pushf
scas
xlat
or
xor
icebp
inc
mov
js
push
mov
ss
stos
aam
fisttpl
push
call
push
mov
ror
popa
add
je
mov
call
mov
clc
mov
adcb
or
ss
sahf
add
aaa
shll
xchg
ss
out
dec
mov
mov
lret
sbb
insl
leave
dec
xchg
test
xchg
mov
leave
gs
inc
sbb
aaa
into
insb
add
icebp
aaa
ret
bswap
dec
cmc
js
daa
outsb
lods
lret
xchg
fildl
sbb
call
imull
mov
or
movsl
jg
jns
fsubr
xor
cmp
adc
shrb
lock
fisubrl
ret
pop
nop
add
mov
xchg
out
pusha
mov
loopne
or
fucomp
adc
idivl
xchg
orb
in
and
pop
pop
lock
ret
pop
loope
out
add
loop
into
mov
or
out
test
dec
jle
out
loope
and
push
icebp
sahf
mov
sub
fiadds
jmp
inc
loope
lods
and
lock
jnp
loopne
xchg
xchg
push
add
popf
xor
push
sub
sbb
jle
adc
in
push
add
jns
sbb
pop
jbe
jge
loope
cmpsb
std
insb
add
cmpsl
lcall
lds
fwait
lods
push
or
mov
pop
rcl
cld
cmp
call
adc
ss
push
cmpsb
push
lea
adc
pop
xchg
push
mov
les
mov
out
shll
in
sbb
pop
sub
and
cltd
fcomps
jne
outsl
xchg
push
pusha
sbb
nopl
push
sbb
test
leave
sbb
jne
xor
ljmp
sti
or
popf
sbb
test
lret
or
movsb
xchg
insl
pop
int3
dec
and
rolb
popf
fiadds
push
out
sub
in
push
mov
add
faddl
sbb
pop
mov
inc
push
push
test
push
int
ficomps
sub
pop
mov
add
mov
shl
or
mov
dec
jmp
subb
outsb
out
xchg
add
add
fxtract
pop
mov
inc
shl
mov
add
rcr
dec
out
jge
mov
push
ds
testb
jge
push
xchg
cmp
aad
out
adc
movsb
lret
sbbb
mov
sahf
jmp
or
rcrl
inc
add
dec
add
adc
aaa
insl
fyl2x
sahf
cwtl
push
rcrb
aaa
pop
imul
mov
js
icebp
push
jne
sub
fsubrl
dec
out
push
fs
xor
loopne
jno
adc
sub
js
rsm
xchg
outsb
mov
and
or
movsb
enter
test
rclb
inc
stos
dec
jg
xor
inc
mov
pop
repz
mov
lret
imul
mov
cmp
pop
jp
xor
pop
pusha
adc
jl
add
arpl
or
mov
inc
pushf
xor
push
push
inc
jne
in
sbb
sub
adc
dec
push
sub
js
imul
enter
mov
mov
lods
out
and
test
pushf
xor
add
mov
rcll
pop
sar
dec
std
mov
dec
loop
aad
fildl
lods
xor
jns
xor
push
push
cmp
jbe
mov
xor
jmp
pop
sub
lods
adc
data16
cmp
and
cwtl
fs
jb
add
jp
jnp
jno
fistl
fsubrl
fstpt
sbbl
ja
insl
test
test
mov
cmp
cwtl
jp
test
mov
pop
rcl
les
jge
pop
pusha
mov
mov
cltd
xor
rcll
xor
push
push
jb
adc
vcvtsi2sdl
es
das
push
lods
pop
movsb
test
pop
cltd
dec
cmp
mov
enter
out
mov
pop
repz
fwait
or
loop
orb
or
into
out
in
and
loope
and
in
lret
bound
shll
push
mov
sti
sti
outsb
inc
and
push
lretw
mov
jle
adc
xor
gs
das
ja
mov
outsl
jg
or
jecxz
pop
fscale
fnsave
dec
lahf
or
mov
xor
loopne
pop
call
or
leave
or
sub
xor
sub
inc
stos
push
inc
xor
leave
mov
lds
sub
mov
or
jmp
or
dec
cmp
adc
imul
out
mov
pop
repnz
jne
jne
pop
hlt
cli
sbb
inc
sahf
mov
dec
and
es
cmp
push
arpl
push
mov
enter
scas
popa
push
rol
inc
or
xchg
add
xchg
test
sbb
int
jo
movsl
jae
push
fwait
cmp
xor
ljmp
and
and
mov
mov
mov
pusha
in
int3
xchg
sub
rolb
jne,pt
fdivl
fmuls
repnz
shrl
ficoml
sub
sub
dec
rcrl
in
mov
rol
pop
and
and
es
movsb
dec
inc
pop
repnz
or
lret
sbb
adc
fcomps
jg
repnz
lods
cmp
push
stc
dec
int
ss
aaa
das
aaa
sarb
jne
mov
sti
int
jg
lds
andb
jne
gs
inc
add
xor
insb
arpl
pop
add
ss
xor
add
bound
jg
xchg
jnp
addb
mov
shrb
arpl
dec
out
pop
cwtl
stos
into
repnz
and
push
adcb
mov
scas
sbb
jae
cmp
push
cmp
cmp
icebp
jle
stos
ljmp
cmc
out
jmp
sbb
sub
cmp
popf
fwait
jmp
dec
xor
add
jo
mov
cmc
shrl
rcrl
lahf
test
or
pop
repz
pop
jp
mov
addr16
stos
into
dec
shl
push
loopne
sbbl
sbb
mov
test
xchg
sbb
pop
cmp
xchg
xor
sbb
fildl
or
nop
adc
cmp
test
test
xor
movswl
in
and
repz
xor
fnstcw
mov
mov
pop
adc
dec
test
cmp
rol
loopne
xor
andl
mov
pop
xchg
and
clc
sbb
into
and
sub
stos
and
shl
ds
fsub
cmp
mov
or
sbb
add
cmp
dec
addb
cmpsl
dec
pop
fnstcw
imul
pop
adc
aam
jo
fidivrs
scas
repz
fisttpl
sub
jp
push
push
mov
fistpl
fistpl
adcb
repz
out
xlat
mov
pop
js
xchg
pop
cmp
in
and
push
add
stos
in
mov
bound
call
jne
jo
sbb
jo
divb
jmp
xlat
mov
hlt
fwait
dec
inc
inc
les
cwtl
insb
or
pop
ret
add
pop
adc
fstpt
cwtl
cwtl
shrb
sub
movsb
dec
push
cltd
ss
addr16
lret
inc
jmp
mov
fbld
bound
in
sub
mov
scas
mov
jbe
cmpsb
inc
arpl
mov
and
jns
mov
rorb
aad
insb
push
pop
movsb
pop
ficompl
ss
lods
popl
push
push
insl
mov
cmp
add
xor
push
loope
jl
aaa
stos
xchg
dec
lahf
dec
and
mov
cmpsl
cltd
push
fisttpll
fisttps
ret
int3
sbb
and
push
sbb
cmp
cmp
nop
icebp
mov
mov
fidivl
mov
add
shll
add
popf
xchg
psubusb
xlat
pusha
orl
dec
mov
push
sbb
pop
cli
ret
imull
arpl
jb
test
lds
xchg
dec
adc
dec
cmp
jle
pop
push
popf
hlt
or
mov
repnz
xchg
sub
idivl
shlb
pop
xchg
pop
cmp
mov
mov
out
sbb
jo
popf
pusha
clc
sub
cld
pop
jmp
shlb
enter
rclb
xor
mov
pop
pusha
imul
xor
add
fwait
in
cmp
cmp
pop
dec
jmp
sub
mov
je
data16
dec
mull
iret
mov
mov
outsb
pushf
sbb
add
push
in
je
lret
cmp
push
je
dec
popf
lea
inc
dec
dec
inc
mov
lret
faddl
add
or
sbb
lds
mov
or
add
or
xor
jle
push
movsl
aaa
stos
sbb
cmp
mov
arpl
mov
out
xchg
mov
cltd
mov
popf
mov
cmpsb
adc
addb
incl
imul
mov
cli
lret
dec
loope
adc
leave
int3
xchg
pop
les
sub
fmuls
jge
data16
jns
sub
enter
dec
icebp
pop
icebp
xor
js
fimuls
fiaddl
pop
jne
out
loop
rorb
xchg
dec
scas
jp
movsbl
jle
adc
or
and
roll
imul
outsb
add
mov
fucomi
pop
cld
hlt
mov
push
inc
push
fcompl
pop
lock
in
fdiv
dec
add
push
fbstp
cwtl
xchg
mov
pop
mov
mov
jbe
mov
out
movsb
cmp
add
int3
mov
decb
mov
popa
fldt
test
mov
jmp
stos
xchg
mull
jb
cmpsb
xchg
xchg
jmp
sbb
std
nop
out
and
lods
and
push
out
les
dec
adc
add
cmp
mov
andl
or
fwait
in
dec
add
test
ret
iret
xchg
sub
mov
rorb
repz
out
scas
add
and
jne
out
frstor
dec
out
jne
outsl
mov
adc
stos
sub
das
dec
aam
adc
xor
imul
pop
inc
bound
add
inc
js
xor
inc
mov
aas
in
mov
and
addl
adc
test
ret
mov
je
jle
faddp
push
xlat
ljmp
mov
add
por
icebp
fnstsw
jl
lret
sbb
sti
dec
dec
push
jmp
pop
lds
jl
mov
mov
ja
push
aam
pop
jp
scas
scas
mov
pop
lock
xor
add
adc
bound
push
inc
ja
popf
je
add
push
movsb
je
adc
xor
bound
mov
mov
sub
dec
into
in
sarb
cmpsb
and
lds
clc
ss
mov
in
jmp
push
mov
mov
add
and
movsl
fdivr
fidivl
adc
repz
je
jo
cmp
lcall
sbb
shrb
mov
pop
mov
xor
or
idivb
test
sti
jbe
jle
addr16
lods
in
fisttps
pop
inc
add
mov
mov
lods
mov
ret
add
sbb
in
lahf
out
pop
dec
jecxz
jecxz
in
lahf
call
add
adc
jnp
int
jb
and
mov
test
cmpsb
imul
dec
jp
jnp
jp
es
out
cli
lods
cli
fwait
and
test
sti
xchg
sbb
dec
loopne
jle
sub
xchg
jmp
fldl
jne
dec
and
out
out
inc
inc
jge
jns
aam
jae
and
pop
cmp
sbb
push
in
push
xor
mov
pop
repz
inc
pop
push
insb
sub
add
xor
mov
pop
push
outsb
popf
mov
mov
in
test
rorb
pop
sbb
xor
fldl
leave
adcb
cltd
outsl
mov
push
pop
lods
and
push
rcrb
cltd
test
bnd
adc
adc
push
pop
and
sub
sbb
shl
inc
daa
jecxz
adc
mov
loope
and
push
cli
jne
sub
fdiv
mov
int3
pop
loop
xchg
adc
jle
out
dec
cmc
sahf
into
push
rclb
xlat
cmc
pop
add
clc
adc
jo
jge
sbb
xor
and
mov
cwtl
push
mov
aaa
xchg
dec
movsl
gs
adc
push
pop
mov
mov
out
pop
fldcw
test
or
scas
inc
jnp
insb
scas
sbb
jbe
mov
iret
sbb
test
xor
xor
lds
cmp
pop
stos
mov
int
addb
mov
fsubrl
pop
cmp
inc
xchg
out
lret
xlat
pop
iret
xor
cmp
pop
or
fsubr
mov
fsubrl
cmp
xchg
sete
mov
aam
mov
mov
add
adc
sub
clc
fiaddl
push
jl
cmp
push
sarb
sahf
push
jnp
ret
fiaddl
movsb
mov
cmp
xlat
sub
scas
pop
bound
pop
lods
cmp
pop
inc
lock
inc
lea
lods
cld
popf
pop
lret
jno
inc
push
es
jp
test
mov
les
jb
aaa
nop
mov
xor
das
mov
add
outsl
push
in
shl
fisubrs
mov
je
lods
push
xchg
scas
ja
push
divl
push
pop
imul
int3
insb
mov
insl
push
ret
rcrl
pop
out
scas
sbb
add
xor
jno
repz
js
add
lret
mov
mov
movsb
insb
mov
inc
jne
mov
and
dec
pop
push
incl
stos
push
mov
jo
fisubs
sbb
mov
shl
fidivrs
and
xor
out
scas
push
or
push
jmp
cmc
clc
jae
mov
in
repnz
pop
push
cmp
lods
and
movsb
shll
out
int
mov
jmp
sub
jl
pop
adc
push
sub
and
pop
jmp
jne
dec
and
xchg
pop
pushf
iret
shlb
lahf
xor
shll
ja
bound
push
out
sbb
xchg
jnp
xchg
js
test
sub
sbb
mov
pop
sti
loope,pt
mov
mov
push
imul
imull
adc
add
stc
push
sub
ror
and
mov
adc
es
pop
rclb
data16
inc
push
mov
je
inc
inc
cmp
shll
mov
push
fs
leave
sbb
or
push
adc
pop
dec
mov
and
aaa
cwtl
xchg
js
out
cli
iret
lret
int3
pop
xchg
pop
or
xor
mov
ffree
mov
lahf
mov
sahf
jno
add
test
fdivrl
out
aaa
rolb
xchg
ficoms
and
call
arpl
aas
pop
dec
add
subl
inc
stos
mov
push
fmull
inc
cmp
mov
sub
or
idivb
stc
sub
ljmp
sub
daa
cmp
mov
mov
xchg
insl
test
stos
adc
cmpl
ffreep
jbe
lret
and
xchg
inc
mov
xchg
lcall
arpl
sahf
xchg
pusha
sbb
mov
and
aaa
fisubl
mov
sbb
cltd
xor
mov
mov
jae
add
pop
addr16
rcrb
jle
mov
cmp
jo
or
lahf
std
xor
mov
popf
and
mov
iret
fldz
div
mov
inc
sbb
leave
or
sub
push
jno
push
subl
jno
and
movsb
xchg
test
mov
or
popa
add
je
repz
dec
add
icebp
mov
jne
push
imul
movsb
in
cmp
xchg
adc
arpl
push
sbb
xchg
cmc
mov
movsb
pop
cmp
cmc
imul
and
int
mov
aaa
mov
mov
movsl
xchg
xchg
jb
add
mov
xor
divl
add
sbb
and
mov
mov
bound
mov
fs
lret
scas
inc
xor
inc
icebp
repz
cmp
mov
fcomps
loopne
xor
add
cmpsb
xor
in
lock
loope
or
repnz
je
cmp
je
and
sub
lret
jae
sub
sub
adc
lds
adc
int
int
mov
jg
ja
out
lds
rcrb
rcrl
jbe
scas
cs
xor
jecxz
in
push
inc
dec
inc
push
mov
sub
iret
mov
mov
jl
mov
scas
les
into
decl
notb
mov
fwait
pop
popa
rcrb
pop
dec
mov
js
dec
jno
fxch
sub
aam
insb
xchg
fst
pop
push
add
popa
cmp
push
add
enter
adc
mov
fsubl
push
cmpsl
gs
xor
or
test
scas
sub
fistps
cwtl
push
aaa
jns
daa
out
sub
outsl
xor
push
add
stc
and
pushf
push
push
addr16
pop
mov
and
in
mov
test
push
mov
scas
loop
push
fwait
xchg
push
sub
dec
in
imul
movl
popf
push
pushf
mov
pop
mov
int3
arpl
gs
xor
movsl
repnz
adc
or
jns
lcall
xchg
or
or
in
fsubr
sub
pop
imul
add
mov
and
xchg
inc
sub
xor
and
push
ffreep
push
cld
adc
popa
or
and
pop
push
sbb
push
push
push
icebp
or
negl
insb
jmp
aaa
test
jmp
jecxz
cmp
dec
sbb
js
jmp
scas
in
xor
and
stc
cli
inc
inc
sbb
mull
ret
fwait
xor
fs
jo
or
repnz
add
ss
xchg
cmp
xchg
mov
roll
pop
cltd
fisubrs
mov
mov
fcmovu
cmpsb
cmp
add
mov
sub
test
int
das
add
xchg
mov
imul
push
leave
dec
nopl
push
outsb
loope
add
dec
and
ret
mov
lods
out
icebp
mov
nop
add
mov
mov
mov
jmp
pop
inc
push
jbe
pop
in
shll
and
jb
ret
insb
hlt
inc
lahf
mov
xlat
test
add
mov
fstpt
dec
mov
push
cmp
call
mov
lock
pop
lods
pop
sbb
inc
push
push
push
imul
cmc
push
xor
or
and
dec
inc
mov
es
rorb
mov
lahf
push
dec
imul
xlat
pop
inc
mov
leave
mov
dec
dec
mov
dec
cmp
jge
fstl
dec
inc
mov
push
xchg
fstps
adc
aas
pop
push
dec
jo
sbb
jo
or
mov
enter
add
jl
mov
clc
adc
push
data16
in
push
sub
ret
jmp
mov
addr16
call
in
insb
fcmovnu
mov
mov
int3
bound
aam
mov
xor
fcmovne
dec
dec
inc
push
push
cmp
loop
lods
xor
pushl
adc
leave
in
test
or
xchg
xchg
cmpsb
mov
sub
add
sbb
push
inc
jbe
dec
das
xor
ret
imul
ja
movsb
aam
fcoml
adc
cmp
test
lock
in
psrlq
ret
inc
cwtl
sub
lcall
or
int
mov
lods
sti
push
je
nop
pusha
mov
aaa
jmp
pop
scas
cmc
mov
and
mov
popa
mov
lret
jns
popf
stos
xchg
dec
mov
out
imul
adc
sbb
sub
sti
mov
fsubs
sub
inc
stc
jns
mov
inc
or
out
je
lcall
hlt
cli
xor
mov
decb
mov
push
in
jge
sbb
fimuls
adc
int3
jecxz
daa
out
push
loope
aam
les
fsubr
inc
cs
test
loope
into
orl
imul
sub
sub
les
sub
pop
hlt
inc
adc
mov
pushf
jecxz
pop
data16
mov
cwtl
fstpt
arpl
mov
inc
fdivr
cmpsb
and
mov
push
pop
sbb
add
out
fwait
lret
fldcw
cs
testb
push
add
pop
mov
int3
lret
add
sbb
test
sbb
ret
cmp
sbb
loop
sbb
cmpsb
dec
mov
andl
or
mov
out
xchg
stos
loope
out
xchg
mov
das
arpl
outsb
aaa
inc
repnz
int
cmp
imul
gs
adc
inc
sub
repz
mov
and
mov
lret
sti
int
pop
xabort
out
sub
sub
cmp
jp
int
test
pop
lods
mov
dec
sub
xchg
push
arpl
into
popf
aaa
jns
mov
sbbl
mov
xchg
ficomps
jl
jl
aas
pop
cmp
lahf
add
in
and
and
cmp
xor
xchg
insb
ja
xor
dec
xchg
in
or
add
sub
es
xor
xorb
xchg
divb
pop
lahf
rcr
jl
sub
cmp
inc
and
cli
aaa
adc
and
pop
or
mov
rol
int
inc
dec
adc
add
jo
int
mov
ljmp
shlb
push
int
aaa
popa
mov
jp
and
insb
pop
leave
pop
xchg
push
sub
movsb
mov
in
out
icebp
adc
mov
in
inc
inc
sbb
cs
mov
imul
cmpsb
mov
xchg
mov
inc
sbb
jo
loop
mov
push
sarl
fisubrl
push
jmp
mov
pop
pop
pusha
jb
xchg
lds
jne
jge
scas
mov
clc
ret
sbbl
fs
fnstsw
xchg
sub
sub
rclb
ljmp
xor
push
rolb
fidivs
dec
int3
sti
inc
pop
stos
or
out
mov
push
and
xchg
fbstp
jmp
dec
mov
sub
sub
or
cmp
mov
and
pop
fiadds
cmpsl
out
and
jp
clc
repnz
xor
icebp
mov
enter
xchg
mov
test
ja
add
lds
enter
mov
inc
movl
jo
popf
test
shrb
dec
pop
lret
adc
adc
jle
out
pop
hlt
xor
fs
cmp
sahf
mov
cmp
mov
std
sub
fndisi(8087
add
dec
add
clc
mov
sbbl
addr16
pop
mov
dec
fdivs
xor
xchg
push
int3
mov
imul
xor
add
icebp
mov
sbbl
fldenv
jecxz
stos
cltd
xchg
push
ficomps
subb
loopne
or
xchg
ss
scas
scas
mov
loope
push
inc
push
jno
jne,pn
divl
mov
cmpsw
xor
sub
test
scas
fisubs
mov
push
aas
jo
xlat
repz
cmpsb
xchg
in
jmp
pop
xchg
mov
test
add
push
and
xchg
rorb
inc
push
mov
cmpl
gs
mov
imul
popf
insl
mov
inc
aas
icebp
mov
out
nop
repnz
dec
lea
movsb
aam
cwtl
and
add
jb
mov
push
or
das
out
adc
fwait
push
mov
hlt
mov
aad
push
or
inc
loope
mov
icebp
or
sahf
adc
xchg
push
xlat
movsl
hlt
stos
inc
jbe
push
scas
jle
xor
les
rclb
add
mov
and
fistps
dec
loop
leave
push
mov
xchg
addb
mov
out
mov
std
mov
dec
jno
repz
inc
sarb
sub
nop
insb
shl
arpl
stos
push
add
mov
jno
test
iret
popa
leave
adc
xchg
sub
jmp
ror
pop
in
popa
jae
mov
cli
popl
xor
test
call
xchg
adc
enter
sahf
jmp
inc
xchg
and
lods
pop
test
or
mov
stos
ret
sub
cmp
insl
mov
mov
mov
xor
out
cmpsl
fs
out
cmp
push
ds
popl
pop
scas
jno
and
scas
lcall
fstpt
jb
sub
pop
aad
jmp
xor
scas
add
gs
xchg
inc
rcll
scas
cltd
test
ret
enter
xchg
scas
adc
xor
and
mov
jl
and
mov
adc
mov
dec
clc
pusha
enter
faddl
and
outsl
fdivrs
pop
pop
jbe
or
sub
mov
testl
imul
mov
dec
jecxz
inc
push
daa
mov
outsb
jno
icebp
repnz
sti
adc
jp
or
and
push
and
rclb
xchg
bound
sbb
andl
dec
loop
push
jge
daa
les
sub
fnstenv
repz
scas
pop
jb
js
imul
repnz
pop
and
stos
xchg
popa
mov
enter
lahf
cwtl
gs
sbb
inc
jg
jne
jae
ret
sarb
popa
jo
xchg
jbe
push
das
xchg
ja
fstps
and
in
in
ljmp
sub
call
mov
inc
fidivl
mov
cld
jp
xchg
sub
sbb
aaa
dec
cwtl
push
add
mov
mov
in
adc
loope
sbb
test
fimull
out
and
lret
push
loop
scas
adc
jns
fwait
mov
jb
stos
mov
int
adc
lret
jae
out
xor
mov
in
insb
pushf
pop
xchg
push
mov
add
dec
add
sahf
mov
pop
or
adc
cmp
push
pop
mov
shlb
pop
push
shr
in
cmp
sub
std
pop
shll
xor
fisttpl
in
xlat
push
push
sti
mov
jecxz
xlat
insb
cs
mov
mov
sbb
lea
mov
adc
in
and
push
cs
xchg
push
call
int
pop
pusha
mov
inc
js
sbb
xchg
pop
test
dec
out
cmp
icebp
cmp
cmpsl
sbb
call
dec
aad
push
sub
roll
adc
in
adc
mov
fisubs
lea
add
repz
pop
enter
mov
sbb
movsb
add
sbb
mov
or
mov
in
cld
dec
sbb
rcll
pop
notb
js
inc
lcall
inc
ljmp
movsb
rcrb
sub
outsb
aas
popf
ds
mov
out
pop
addr16
addr16
add
pop
aas
mov
popa
jl
arpl
xchg
cmovo
fwait
jo
bound
mov
lods
out
jmp
test
cmp
mov
popf
movsb
fidivs
cld
mov
pop
in
mov
jl
iret
shl
adc
pop
dec
call
pop
cltd
xor
call
cmpsl
icebp
movsl
push
pop
push
lcall
sbb
into
sbb
xlat
adc
sbbb
lret
dec
xor
cltd
fistps
or
xor
push
pop
filds
cmpsb
es
pop
push
sbb
xor
fnstenv
push
or
push
xor
add
mov
xchg
add
mov
pop
mov
stos
mov
jecxz
inc
cmc
sub
and
out
out
mov
pop
cmp
rorb
adc
adc
stos
sbb
cmpsb
adc
mov
test
pop
xorl
lock
pop
cmp
cmpsb
mov
fstp
jbe
sbb
and
int
shll
idiv
aad
leave
int
mov
nop
cmp
xchg
sbb
fdivs
jp
stc
loopne
ror
add
gs
pop
xlat
pop
cmp
fsub
dec
bnd
pop
test
add
repnz
push
jmp
push
stos
insb
add
aam
decl
loope
push
kmovd
jbe
leave
cs
pop
mov
jp
lock
jmp
dec
inc
int3
je
aaa
cwtl
pop
or
xchg
lret
sbb
out
push
dec
stos
fs
test
out
mov
das
test
fwait
dec
adcb
fdivrs
enter
insl
fs
jb
mov
mov
movl
lds
mov
inc
into
rorl
shrw
comiss
cmp
inc
stos
sbb
test
mov
pop
lret
xor
mov
mov
mov
pop
inc
test
xor
out
and
shr
xchg
out
mov
inc
divb
outsb
shlb
mov
pop
notb
sbb
or
aam
lea
aaa
or
or
nop
sbb
add
pop
testl
ja
push
jle
lods
jo
xchg
leave
ss
je
fsubrs
push
jnp
fs
pop
xchg
out
or
or
jle
or
clc
mov
hlt
in
test
fdivs
mov
jg
pusha
mov
ret
out
daa
sbb
sbb
cli
loope
adc
xchg
mov
ljmp
gs
jne
ret
and
pop
mov
push
mov
ds
leave
cld
push
lahf
sub
xchg
dec
loope
fimull
icebp
mov
push
das
adc
mov
and
das
pop
mov
stos
test
arpl
stos
lret
fs
jg
and
ss
jns
xor
push
xchg
in
ss
dec
sti
lods
movsb
inc
or
scas
add
mov
lods
push
adc
push
jne
sbb
cli
dec
sbb
xchg
push
ds
sub
aam
aam
cld
mov
jo
push
jbe
pop
clc
xor
in
fists
out
imul
ret
add
sub
add
je
adc
mov
stc
mov
nop
jae
adcl
mov
inc
adc
sub
push
out
cmc
sti
sub
mov
stos
jmp
fwait
test
xchg
push
xor
cs
and
mov
nop
jge
lods
inc
jbe
mov
push
gs
cmp
adc
out
jne
mov
inc
cmp
cltd
inc
mov
sub
add
sar
inc
mov
ljmp
mov
mov
repnz
dec
mov
in
push
pop
push
lcall
jnp
fldz
push
mov
mov
fisubrl
adc
push
fsubl
jmp
pop
mov
pop
mov
je
loop
adc
cmp
out
std
iret
pop
pop
imul
mov
xchg
xlat
mov
cli
call
cmpb
lods
adc
xchg
bound
mov
mov
leave
fidivl
push
mov
aas
adc
mov
pusha
cmp
pop
outsb
out
cmp
mov
lret
dec
add
pop
adc
mov
ret
pop
hlt
xor
lds
pop
adc
mov
push
out
rolb
mov
shlb
inc
sub
push
xchg
movb
cltd
and
nop
pop
test
pop
cltd
aas
adc
popa
faddl
lcall
loopne
scas
call
pop
nop
sahf
outsl
dec
jg
icebp
xor
jmp
sub
in
shrl
mov
or
out
rcll
push
mov
in
xlat
mov
shl
cmp
or
inc
jmp
inc
nop
daa
aaa
and
sub
push
lock
ret
movsb
mov
mov
mov
sbb
xchg
cmp
sbb
xchg
pop
xlat
sub
jl
mov
jnp
cmp
add
and
mov
call
jmp
loopne
nop
push
sub
lahf
cmp
mov
push
arpl
call
mov
pop
daa
leavew
fwait
inc
fmul
add
mov
jl
hlt
mov
xchg
ja
jnp
repz
inc
lods
js
push
cs
lahf
repnz
loopne
jmp
in
insl
jp
aad
adc
cmp
int3
fmull
fstl
pop
mov
dec
dec
add
fsubr
mov
mov
test
mov
js
mov
aad
mov
ficoml
loopne
push
shr
addb
pop
adc
stos
pop
mov
out
pop
xor
or
jb
xchg
lret
out
or
push
arpl
ret
outsb
adc
mov
dec
insb
test
sub
cmp
adc
xor
pop
es
cmpl
cmc
push
sbb
andl
jmp
mov
gs
daa
cli
aad
xchg
adc
jbe
cmp
hlt
push
test
and
push
xchg
adc
jg
dec
mov
xchg
jne
ret
test
repnz
stos
xchg
popa
adc
pop
stos
cmpb
int
mov
add
mov
or
mov
add
icebp
push
insl
mov
sbb
mov
outsl
pop
mov
mulb
inc
mov
or
mov
scas
movsb
mov
rorb
inc
ret
mov
push
in
xchg
into
jb
in
call
in
stc
mov
dec
call
jge
mov
int
inc
pop
popa
inc
mov
xchg
pop
movb
adc
mov
add
insb
or
lret
inc
ja
cli
clc
xor
enter
inc
bound
add
xor
pusha
adc
push
xchg
gs
jns
cmp
stos
enter
ret
scas
adc
lcall
jl
pop
mov
andl
xchg
popa
xor
xchg
push
or
sub
xchg
inc
pop
cmpsl
out
mov
xor
movsl
ljmp
push
loopne
pop
lahf
jno
and
lods
dec
push
rolb
sbb
fnstsw
rcl
pop
adc
dec
dec
pusha
popf
int3
cli
cmpl
inc
in
or
in
mov
loop
mov
mov
mov
daa
mov
add
cmc
adc
push
mov
nop
incl
cmp
cltd
lods
data16
lret
dec
sbb
insb
push
mov
repz
fs
jne
inc
add
ja
push
mov
test
dec
loope
xor
subl
add
jmp
or
into
dec
jae
hlt
leave
test
or
enter
ja
and
lea
sub
and
xor
not
jge
push
out
jne
jmp
add
inc
fcomps
xchg
loope
out
lret
add
jo
lods
sub
popf
mov
jo
xor
xchg
or
mov
lds
mov
sarb
adc
push
addb
leave
pop
sar
adc
loopne
sub
movsb
cmp
icebp
inc
fs
aaa
pop
mov
cmpsl
sbb
test
test
aad
sub
sahf
mov
andb
addr16
in
add
ljmp
movsl
or
adc
dec
fidivl
data16
lret
jle
cmpsl
ret
push
loope
push
dec
lret
jp
jg
cs
sbbb
not
push
push
mov
das
ret
mov
aam
sti
mov
xor
insb
inc
rclb
fucom
mov
orl
jmp
mov
mov
shll
lds
mov
push
cmp
cltd
out
mov
std
stos
aas
xchg
pusha
sbb
mov
sub
mov
sub
jl
xchg
jb
sbb
and
ret
and
stos
sbb
pop
pop
mov
test
push
inc
sbb
xchg
imul
sub
rep
lahf
icebp
insb
mov
std
jo
pusha
lret
mov
sbb
out
push
ret
cmp
mov
fistpll
cli
mov
in
sbb
adc
sub
push
popf
push
inc
push
xchg
fdivl
loope
bound
sub
movsl
cmc
leave
aad
push
cmc
adc
rol
icebp
sbb
arpl
adc
jg
mov
mov
lahf
sub
mov
mov
jnp
inc
clc
pop
adc
repnz
bound
push
mov
pushf
add
aad
add
out
mov
push
sub
mov
inc
xchg
inc
dec
adc
mov
dec
and
les
xor
lret
fldenv
in
das
adc
aaa
aaa
shlb
jne
sahf
push
adc
loope
cltd
mov
mov
in
sahf
fiadds
out
xor
aaa
mov
cmpsb
ljmp
in
cmp
mov
pushf
xchg
lods
mov
xor
adc
jbe
cmpsb
mov
xorl
sbb
rclb
sahf
insl
pop
jg
repnz
sbb
aas
mov
pop
pushf
push
es
adc
dec
and
xor
clc
stos
jne
cli
xchg
inc
xchg
and
adcb
sub
jl
stos
sub
test
pushf
push
loopne
psadbw
pushf
jae
lret
or
pusha
dec
popf
lock
jmp
jo
inc
fsubs
nop
out
je
push
call
iret
fcoms
mov
dec
add
and
pop
mov
in
jp
in
sub
testb
or
jp
ss
hlt
lret
jmp
jnp
out
pop
icebp
and
sub
psubd
dec
js
movsb
sub
dec
sub
push
push
popf
xchg
int
addr16
mov
inc
or
jno
inc
or
xchg
sbb
or
mov
outsb
sbb
pusha
pushf
jae
xchg
cmc
stos
cli
xchg
fstl
test
into
fcompl
push
sub
scas
dec
fidivs
mov
hlt
mov
into
cli
mov
push
jne
mov
pop
and
das
mov
inc
fxtract
xchg
int
lcall
pop
sub
xor
adc
pop
adc
push
test
sbb
not
pop
cmp
or
jne
into
loop
addr16
sub
push
stos
cmp
mov
jbe
cwtl
cmpsl
ds
pop
movsb
imul
inc
divl
mov
and
pop
jo
jno
nop
gs
mov
iret
addr16
sub
pop
inc
lret
nop
clc
popl
cmp
scas
call
xchg
sbbb
pop
sbb
mov
insl
lods
mov
test
xlat
arpl
mov
fdivrl
sub
fs
mov
into
mov
sbb
cmpb
add
lret
mov
dec
loop
mov
add
sub
push
nop
mov
lock
in
dec
andb
xchg
aaa
adc
stos
test
jns
mov
mov
inc
mov
int
mov
aaa
mov
mov
push
or
push
xchg
inc
test
push
mov
sbb
rcr
repnz
and
mov
mov
in
jae
enter
mov
dec
js
clc
sub
or
and
inc
mov
dec
pop
cmp
mov
cmc
sbb
dec
lret
mov
dec
mov
in
les
cli
shrl
movsb
cs
mov
ds
aam
fwait
dec
fcmovne
and
mov
sub
dec
dec
sub
dec
add
daa
aam
push
ret
sbb
sti
rorb
cmpsb
lea
aam
sub
or
pusha
leave
lea
add
sahf
push
xchg
push
inc
add
inc
mov
in
ss
test
add
je
loop
push
sbb
loopne
cmp
andb
sbbb
popa
test
lcall
pop
jmp
and
mov
dec
loopne
mov
cmp
xor
push
out
mov
fucomp
ss
rcl
lock
inc
and
push
adc
mov
mov
cld
sub
sbb
xor
sbb
push
sub
dec
sarb
sub
mov
and
jbe
lods
add
mov
fimuls
in
mov
adc
xlat
xchg
mov
xchg
and
cmpsl
inc
or
out
xchg
fistl
frstor
mov
fildl
adc
xor
rorb
mov
popf
cmc
ja
or
pop
sbb
push
jne
fs
sub
mov
les
insl
ret
cmp
mov
pop
repnz
out
ss
pop
fdivrs
cltd
inc
in
out
xchg
fmuls
sbb
ja
cmp
mov
aam
push
outsb
pusha
mov
dec
push
outsb
add
mov
xor
xchg
add
mov
test
scas
cmp
cmpsb
and
fdivrs
jle
or
dec
inc
push
mov
jmp
clc
mov
popa
jecxz
push
lods
push
add
lods
inc
push
sbb
sub
ret
outsl
aad
xchg
outsb
nop
push
inc
ret
mov
shrl
inc
xchg
dec
inc
fsubr
cmpsl
push
and
inc
or
and
push
xlat
jo
sbb
aam
jecxz
test
push
and
nop
shll
lock
sbb
mov
xchg
xor
fnstsw
fs
dec
cmpsb
cmp
enter
dec
fs
xchg
sub
pop
lahf
mov
sarb
daa
enter
push
jae
and
je
jae
test
pop
aas
xor
adc
mov
ret
repz
xchg
in
jl
push
inc
xchg
sbb
leave
pusha
pop
cmp
mov
sahf
rcrl
gs
insl
loope
popa
lret
jb
sbb
gs
xchg
sub
pop
icebp
mov
jecxz
cltd
outsl
or
mull
jae
xor
xor
jb
push
lods
push
mov
xor
fs
sub
pop
dec
cld
xchg
pmullw
mov
movsl
sbb
inc
dec
xchg
sub
jbe
mov
nop
sbbl
scas
sti
push
in
cmc
cmp
inc
jae
push
lret
call
or
cmp
xchg
les
sbb
adc
mov
adcb
mov
xor
imul
inc
adc
mul
stc
lret
int3
xchg
push
sbb
sarb
nop
movsl
cmpsl
pop
pop
sbb
xor
xor
xchg
mov
repnz
pop
lock
adcl
pushf
fidivs
mov
mov
mov
jno
xor
sti
sbb
add
and
sbb
xchg
pop
cmp
pop
xchg
push
push
or
arpl
xchg
popa
jno
cs
test
pop
shrl
stos
pushf
ljmp
xor
scas
xchg
add
stos
inc
movsb
xchg
xchg
and
ficoms
in
jmp
leave
mov
jbe
in
pop
xchg
jmp
insl
xchg
out
sahf
in
cmpsb
std
sbb
jge
sbb
pcmpeqw
inc
cmpsb
lahf
cmp
push
mov
pop
push
push
dec
adcl
xchg
outsl
ja
add
cmp
imul
fwait
sti
gs
negl
lret
jle
sti
in
insl
cmp
sti
jle
in
jge
in
call
sahf
xchg
adc
iret
sbb
push
int3
lret
lcall
xchg
clc
iret
xor
adc
jecxz
sbb
push
call
cmp
pop
jmp
jne
xchg
inc
jb
rorb
ss
mov
sbbl
xlat
negb
ds
sbb
clc
mov
das
push
sub
sbb
jbe
std
cmp
dec
cmc
and
enter
inc
fldt
cmpsl
scas
sbb
inc
mov
fs
xchg
push
imul
je
xor
push
sbb
ja
jg
hlt
scas
cmp
iret
test
mov
inc
fisubrl
loop
add
pop
ja
subl
cmp
mov
into
adc
inc
cmc
cmp
xor
xchg
loop
lret
loope
stos
push
sub
sub
in
movsb
out
mov
push
dec
shrl
sbb
dec
js
sbb
dec
loopne
lahf
mov
jnp
movb
hlt
stc
iret
push
mov
push
les
or
call
out
jmp
scas
in
test
xor
arpl
int
imul
or
out
jp
or
inc
pop
arpl
imul
cmc
stos
in
mov
jbe
or
pop
jae
shll
cs
hlt
jne
cltd
mov
pop
add
lcall
xchg
outsl
mov
mov
adc
ljmp
pop
imul
jno
fld
inc
mov
lea
movsb
dec
adc
pushf
jecxz,pn
fisttps
jmp
movsb
push
mov
inc
in
out
xor
sbb
mov
xchg
cmp
add
incl
in
jbe
lods
aas
inc
push
pusha
shlb
ss
sbb
push
ret
jb
sbb
mov
xchg
cmp
popf
sbb
add
iret
loope
adc
pop
and
push
lock
dec
mov
push
and
loopne
aas
push
data16
pop
pop
ds
xor
inc
loopne
ret
bound
mov
mov
pop
loopne
stos
cmp
jb
push
sub
aas
aad
outsl
test
gs
mov
dec
cwtl
loopne
xchg
sub
sub
push
rcll
iret
in
cmp
mov
sbb
out
inc
jecxz
in
sub
imul
andl
lock
ret
xlat
outsl
inc
ret
xor
imul
imul
sub
dec
call
jl
jecxz
bound
add
push
sbb
popf
xor
mov
mov
mov
dec
fmul
jle
js
test
pusha
divl
pop
jle
mov
xchg
add
pop
iret
negl
bound
add
or
push
ret
xchg
dec
dec
arpl
cmp
je
hlt
mov
out
and
cltd
lock
or
mov
pushf
lods
xor
xor
xchg
lods
mov
add
jno
and
cmpsb
loopne
mov
pop
test
mov
icebp
stos
lds
mov
ret
dec
cmp
push
pop
out
test
fxch
stos
mov
cmp
cmc
jge
jl
mov
sbb
in
jnp
sbb
sub
inc
pop
movl
sbb
aaa
push
adc
daa
sub
jge
std
push
pop
or
into
faddl
push
jno
outsl
sbb
sbb
cs
mov
jle
faddp
mov
int3
insb
fiaddl
push
dec
pop
adc
xchg
rcrl
jg
popl
dec
cli
add
bound
shl
sarl
rcrl
mov
mov
dec
test
mov
push
dec
rcr
rep
push
outsl
insb
and
rclb
xor
sub
xor
testb
sbb
dec
mov
push
shrb
data16
or
mov
or
je
mov
push
or
inc
imul
fs
add
sub
insl
mov
bound
insl
lods
xor
mov
mov
lea
mov
pusha
movl
rcrw
mov
pushl
cwtl
add
movsb
push
hlt
xchg
add
testb
inc
in
bound
xlat
xchg
mov
fstl
call
or
mov
cmp
mov
sahf
mov
sbb
sub
xor
jnp
mov
aaa
adc
inc
push
mov
in
xor
mov
fdivrl
sarl
sub
arpl
test
ja
mov
rol
jp
rclb
jo
mov
out
rcrb
shlb
xchg
lret
rcl
loop
jecxz
jp
fisubs
inc
gs
nop
xchg
xor
adc
orl
shlb
lods
aas
std
jl
xor
jp
adc
sbb
cmp
cmpsb
pushf
xor
pop
mov
mov
fnstcw
leave
xor
dec
pop
pushf
mov
add
xor
inc
scas
jns
cwtl
gs
push
jg
xor
mov
into
ds
dec
mov
nop
mov
mov
add
aaa
xchg
cld
mov
test
mov
fisubs
out
test
xchg
xor
and
inc
cs
iret
sbb
outsl
push
pop
mov
in
push
cmpsl
mov
pop
add
roll
sub
jmp
test
leave
xchg
subb
addl
jge
stos
cmp
inc
in
adc
aam
sarl
mov
loopne
push
sbb
call
mov
or
cltd
fmuls
mov
popf
pop
cli
ret
adc
repz
sub
out
dec
mov
pop
aaa
push
cmp
add
int3
dec
js,pn
test
xchg
les
shl
push
inc
xor
jb
es
xlat
cltd
or
sbb
mov
andb
mov
in
lret
mov
mov
or
loop
push
mov
lret
shrb
mov
or
push
outsl
lcall
aad
push
subb
dec
pop
ret
call
cmp
adc
sbb
xor
lret
push
out
gs
cmp
sbb
out
dec
dec
imul
and
orb
and
sahf
icebp
mov
mov
imul
push
in
data16
push
adc
mov
push
push
add
inc
movsb
ret
cmp
dec
cwtl
icebp
dec
data16
bound
add
in
add
scas
mov
adc
lret
fldcw
negb
xchg
cmp
sahf
xchg
icebp
enter
sbb
mov
cmc
mov
pop
in
push
xor
cmp
iret
cmp
arpl
xchg
ja
pop
test
sub
sub
out
clc
popf
push
or
iret
xchg
mov
dec
roll
outsl
sub
jo
adc
add
sub
in
xchg
dec
fld
ds
test
pop
ret
xchg
or
sahf
mov
lods
push
xchg
inc
lods
das
int3
fisubrs
fs
mov
xchg
rcll
call
sbb
aam
sub
mov
repnz
jo
push
ljmp
jp
push
xor
xlat
mov
pop
push
inc
mov
fsubrs
xor
mov
add
fmull
hlt
mov
push
popf
pushf
pop
hlt
stos
inc
in
rorb
add
fs
arpl
stc
nop
test
sub
fwait
dec
test
xrstors
add
popf
jge
mov
fildll
xlat
aaa
cli
add
pop
jnp
pop
xchg
lcall
loopne
xlat
xorl
cmovbe
aas
lret
ds
lcall
xor
insb
add
leave
mov
and
jle
add
out
test
xor
jo
push
pop
jo
cmp
shl
cmp
and
outsb
hlt
inc
lock
jp
call
or
pusha
add
roll
mov
cmc
cmpsl
push
leave
or
adc
test
iret
fstps
dec
hlt
push
mov
cld
pop
ret
mov
hlt
and
sub
pop
xor
lds
in
add
lcall
ja
push
mov
inc
pushf
xchg
jle
dec
loop
and
or
mov
sub
push
push
push
xchg
push
cmpsl
push
fldenv
std
inc
in
into
adc
adc
addb
mov
cmp
out
push
cld
mov
mov
gs
filds
cmpsb
inc
fiadds
sahf
arpl
icebp
sbb
or
pusha
cli
push
cmpsb
xor
iret
cld
xchg
mov
arpl
stos
push
cmp
xor
pop
mov
out
outsb
sub
inc
inc
jmp
ret
leave
addr16
push
cltd
ret
adc
and
pop
daa
sbb
xor
shll
xor
pop
outsb
cltd
inc
push
sti
adc
jg
in
test
push
and
jo
mov
dec
mov
addr16
xor
imul
add
in
bound
packssdw
jo
add
mov
clc
mov
imul
push
enter
cltd
popf
lds
mov
loop
cld
sbb
fistpl
mov
shrb
sub
pop
xor
out
push
xchg
cmp
dec
jae
in
aaa
stos
fmuls
sbb
xor
inc
adc
mov
xchg
mov
hlt
test
rcl
sbb
ss
mov
push
fbstp
inc
out
sub
js
mov
iret
push
les
add
jg
pop
call
out
mov
ret
test
loopne
and
inc
mov
mov
arpl
add
into
sahf
dec
jnp
scas
lods
jae
dec
push
sbb
cmp
mull
mov
xchg
vmovdqa
jl
jne
or
ljmp
inc
test
jg
dec
mov
mov
sub
and
and
cld
inc
mov
js
mov
adc
idivb
fidivrl
cli
pop
mov
add
cmp
dec
std
sub
jne
xor
xchg
xchg
pop
dec
rcl
ds
cmp
ret
repnz
dec
mov
pop
mov
jl
pop
mov
fcompl
adc
pop
xchg
sub
movb
jecxz
pop
push
subb
sbb
inc
cmp
loop
les
mov
mov
xor
cmpsb
jne
xor
mov
call
outsb
pushf
jg
xor
jge
stc
sub
sub
xlat
mov
shr
xor
dec
pop
add
push
fcmovb
mov
fnstsw
adc
icebp
push
pushf
pop
inc
int
outsl
ljmp
mov
popf
mov
into
jle
into
movl
or
xor
jecxz
loope
or
mov
mov
cmp
movsb
call
and
lret
insb
mov
push
sbbb
sti
jae
sbb
push
xchg
add
sbb
mov
adcb
mov
pop
loop
outsb
mov
lahf
push
ja
cmp
stos
mov
repnz
insb
scas
cmpsb
notl
out
and
js
sub
fcomps
push
mov
stos
pop
jnp
jle
inc
or
dec
cltd
and
xchg
jp
inc
gs
and
lods
add
pop
jmp
scas
cmp
lahf
push
sbb
push
adc
jne
xchg
fnstenv
jnp
sub
push
or
lds
test
xor
pop
xor
shrb
sub
dec
repz
dec
xor
inc
pop
and
aad
add
repz
movsl
std
cltd
xchg
sub
push
jno
dec
push
add
pop
outsl
int
inc
js
mov
mov
ret
div
stos
push
fldl
and
mov
lret
jnp
les
fidivl
push
or
mov
test
pop
loopne
jl
clc
insl
test
in
iret
add
mov
shll
adc
pop
mulb
adc
push
aaa
fdivl
mov
clc
cltd
fimuls
lret
data16
jnp
xchg
and
ret
mov
or
push
adc
pop
xor
jo
mov
xor
cmc
mov
cs
int
mov
into
lock
adc
lret
pop
lret
bound
fdivs
cmp
jae
jg
sti
aas
fcoml
dec
cli
repz
hlt
aas
mov
sbb
dec
int
pop
xor
out
iret
fldt
xchg
js
inc
sbb
out
dec
push
mov
adc
mov
outsb
js
jle
jle
cmp
inc
lods
inc
xchg
in
inc
fs
call
adc
xor
lods
adc
xchg
pop
imul
mov
sbbb
sbb
mov
mov
aas
add
push
scas
ja
cmp
mov
jge
mov
outsl
add
pop
ret
int3
data16
pushf
mov
repz
out
dec
push
std
rcll
and
rorl
aad
mov
aad
jbe
mov
pop
rolb
jmp
in
decb
and
incl
in
fnstsw
pop
dec
out
aaa
clc
imul
inc
shl
push
push
push
mov
scas
push
lahf
push
out
dec
inc
notl
xorb
int
mov
stos
mov
pop
pop
dec
repz
xchg
shll
cmp
adc
stos
fsubrs
icebp
pop
addr16
mov
lcall
jno
pushf
xorl
jge
bnd
popf
mov
lock
mov
rol
ret
pop
mov
sbb
jle
or
mov
cld
popf
jge
add
add
pop
movsb
push
loop
testb
pop
inc
das
adc
or
ret
adcb
sub
sbb
add
pop
loop
jbe
push
jg
push
daa
mov
mov
pushf
mov
mov
test
sbb
add
push
jns
sbb
fists
inc
subb
mov
sub
xor
mov
pop
daa
and
mov
or
cmc
pop
in
push
or
cmp
ss
mov
hlt
popf
adc
into
jo
adc
mov
xlat
push
repz
xchg
sbb
and
rcl
rcll
outsl
sbb
jl
jb
jae
xchg
sub
push
or
ja
mov
pop
jecxz
insl
or
lea
add
add
stos
es
sbb
pop
addb
and
aam
and
ss
es
dec
xchg
jle
popf
push
gs
test
aaa
sub
pop
cmp
movsl
add
es
inc
das
imul
sub
push
xchg
mov
addl
sbb
es
pop
out
in
mov
imul
add
int3
aas
std
and
scas
jns
in
mov
xlat
xchg
sbb
pop
repz
addl
rep
add
inc
xlat
pop
sub
and
jmp
ds
push
hlt
inc
mov
leave
cwtl
pop
icebp
cmp
cs
mov
pop
mov
adc
jno
adc
pop
pop
and
pop
aaa
sbb
sbb
inc
fsubrl
add
xor
jge
cwtl
xchg
or
andb
mov
dec
lods
jbe
shlb
jns
in
ljmp
pop
and
and
dec
inc
lods
push
cld
imul
add
mov
cmp
nop
inc
xchg
sub
loop
mov
pusha
lcall
andl
cmp
enter
or
popa
sbb
icebp
mov
adc
mov
cmpsb
hlt
call
insl
sub
jge
or
and
dec
repnz
xchg
adc
pop
bound
add
in
adc
add
incb
xchg
dec
mov
loopne
fs
lea
lds
and
mov
rorl
mov
xor
cli
scas
cmp
mov
and
jno
les
mov
push
dec
loop
dec
aas
loop
xlat
imul
mov
leave
fcoms
cmp
mov
sbb
push
push
aam
jae
jno
lret
out
idivl
mov
loop
loop
xchg
clc
sti
push
stos
push
cmpsl
rorl
adc
je
sub
push
jb
roll
lock
sbb
dec
cmpsl
lcall
cltd
rorb
mov
push
out
in
test
add
les
insb
xchg
pop
mov
lods
jl
pop
jmp
lahf
movsb
and
sub
scas
push
mov
seto
dec
sub
cmp
jne
mov
cmc
out
fstpl
lcall
pop
mov
pop
out
lahf
mov
fdivr
dec
and
push
in
cmp
pop
repz
jmp
bound
mov
sub
loop
xchg
xor
pop
jae
sbb
pop
dec
ficoms
mov
call
mov
imul
das
mov
bound
mov
jp
sub
inc
cltd
mov
stos
inc
jo
sub
jl
push
sbb
adc
insl
popa
pop
andl
or
inc
or
cmc
movsb
push
cwtl
das
loope
xchg
aaa
sub
mov
inc
dec
mov
jbe
jge
or
xchg
clc
cwtl
dec
push
mov
add
xchg
fldt
sbbb
or
lret
jae
stc
test
orl
xchg
pop
es
jle
mov
or
hlt
add
push
enter
mov
loop
jg
push
insl
cmpsl
test
and
cmp
cmp
xchg
pop
in
cmp
mov
cmp
in
repz
movsl
sbb
pushf
push
jmp
mov
xlat
outsb
mov
adc
cmpsl
dec
pop
mov
pop
adc
inc
lret
lods
mov
inc
sbb
es
loope
jo
rorl
mov
pop
xor
in
cld
repnz
push
dec
imull
mov
cmp
shll
es
push
lock
push
ds
cwtd
mov
sub
push
nop
cltd
sbb
int3
inc
pop
xor
mov
icebp
ss
out
adcb
mov
pop
mov
repz
sub
dec
test
fldenv
xchg
fldl
into
mov
xor
lock
into
bound
dec
movsb
jnp
sub
repz
mov
imul
sti
sahf
or
inc
cmp
addr16
adc
lea
mov
orl
push
pop
nop
daa
bts
cmpsb
repnz
pop
out
mov
bound
jno
xchg
adc
push
outsb
cltd
push
insb
add
dec
ss
fcmove
push
dec
sbb
call
mov
and
adc
inc
xchg
xor
hlt
push
in
and
stos
out
lcall
sbb
div
icebp
lcall
or
jb
stc
pushf
xchg
ds
mov
stc
popf
fcmovnu
std
and
outsl
ljmp
xchg
mov
fisttps
in
stos
mov
mov
lods
or
fldl
mov
sbb
shl
push
sub
jae
mov
ss
mov
mov
sbb
scas
jge
cwtl
xor
mov
lcall
inc
stc
jmp
xor
orb
pop
repnz
ja
sub
xchg
or
and
xor
mov
inc
out
sub
add
inc
in
inc
and
pop
rolb
mov
insl
shl
xchg
sbbb
jg
cli
insb
arpl
mov
or
mov
xor
sub
clc
jle
jne
sarl
mov
xchg
scas
stos
loope
out
lcall
stc
notb
andl
inc
pop
add
hlt
xor
and
fsubp
ret
sbb
jb
jl
and
scas
xchg
dec
mov
shr
icebp
pusha
cmp
shrb
pop
bndstx
fcmove
and
scas
in
mov
cmc
pop
ss
add
pop
xchg
and
arpl
leave
pushf
mov
inc
and
adc
push
mov
xchg
and
jg
aam
pop
stos
mov
shll
xor
xlat
outsb
pop
inc
sbbl
lcall
mov
sbbl
out
fwait
bound
or
mov
xor
sbb
leave
lahf
push
xlat
push
jae
inc
pop
aad
sbb
jbe,pt
es
and
add
out
jne
subb
or
fwait
pop
xor
and
inc
fcompl
mov
arpl
enter
push
jmp
sbb
xchg
dec
cmp
popf
aaa
xchg
mov
mov
js
xor
xchg
push
testb
push
sbb
add
sub
repnz
xor
fldl
ret
cmpsb
sub
mov
cli
mov
filds
adc
inc
lahf
lods
inc
fs
lea
cmp
outsl
xchg
mov
ror
scas
inc
data16
push
into
fidivrs
push
push
popf
pop
cmp
and
imul
mov
push
and
lea
jp
cli
pop
lods
stos
cmp
mov
insl
push
mov
xchg
jbe
std
mov
rolb
mov
or
bound
lret
xor
cmp
adc
jae
xor
push
js
push
mov
aas
xlat
push
jle
pusha
shrb
daa
loope
fucom
lock
inc
push
mov
xchg
loopne
adc
divb
mov
push
add
in
cmp
sub
in
out
leave
test
pop
outsl
hlt
push
mov
cmpsb
flds
aaa
mov
push
or
jb
mov
mov
push
jmp
enter
pop
aaa
hlt
lock
daa
pushf
sub
mov
je
xor
mov
push
insl
add
mov
in
inc
dec
out
push
pop
aaa
insb
adc
pop
mov
in
push
das
xor
sub
insl
sbb
mov
xor
arpl
imul
xchg
aas
xchg
lods
mov
push
cmc
in
rcll
aad
adcl
out
mov
xor
sahf
rcll
mov
push
or
push
xor
xor
xor
inc
in
cmp
orl
popf
add
push
cld
movsb
and
fstpl
cmpsb
ficoms
add
mov
cmp
hlt
jb
out
sahf
test
daa
outsl
or
xor
cmpsb
mov
and
or
mov
loopne
push
testb
bound
push
inc
pop
xchg
orb
mov
sub
leave
mov
add
or
loopne
xchg
push
adcl
cmp
dec
cmp
outsb
jo
ret
sti
imull
imul
lock
mov
movsl
and
dec
push
xlat
push
cs
lret
sub
push
fwait
in
jno
test
outsb
mov
mov
loopne
je
cld
in
lods
lahf
sbb
sbbl
adc
outsb
sub
sbb
jp
cmp
clc
mov
shll
outsb
mov
aad
mov
jne
xchg
test
mov
out
push
inc
jge
jmp
cltd
sub
cld
and
xchg
outsl
insb
xchg
sbb
jmp
xchg
cltd
sbb
rcr
jno
xor
jae
add
push
imul
js
cmp
or
repz
and
clc
mov
and
mov
loopne
pusha
ret
jo
mov
loope
testl
nop
xor
ficomps
xor
push
idiv
nop
jb
insl
jb
xchg
pop
ljmp
push
lods
or
pop
imul
roll
enter
jae
dec
inc
inc
cmpsl
movb
jae
sub
pop
pop
xor
sarb
cmp
adc
jp
mov
xor
mov
dec
cmpsl
fcmovbe
cli
dec
daa
andb
mov
pop
je
xchg
lret
cld
mov
or
leave
pop
je
jecxz
popf
adc
mov
mov
sub
iret
and
pop
arpl
xlat
mov
or
push
movsb
fistl
test
ret
pop
in
mov
xchg
loope
sub
cmp
stc
inc
push
out
ds
lea
and
mov
adc
mov
mov
imul
cmp
push
daa
lods
call
mov
loop
call
jge
loope
sarb
lret
subb
pop
pop
xlat
and
shrl
int
inc
fcoms
je
push
mov
adc
add
stc
aas
pop
and
or
pop
es
fnstenv
dec
jmp
or
test
adc
popa
idivl
mov
mov
imul
xor
aad
ja
or
rcll
and
push
pop
mov
mov
jb
fsubr
xor
xor
dec
mov
and
and
test
fdivrs
int
outsb
adcl
clc
or
rorl
fcmovb
scas
jno
add
mov
jle
scas
ror
pop
mov
int3
fmulp
bound
mov
mov
sbb
imul
icebp
adc
ja
push
sub
dec
int
in
jb
xor
enter
mov
lods
mov
ret
andb
cld
push
cmp
sub
jl
cmp
mov
adc
int3
xchg
dec
and
stc
jl
xchg
call
pop
das
lret
bnd
mov
outsl
adc
pop
dec
or
xchg
nop
jb
add
push
add
xchg
mov
sbb
jns
cmpsl
push
and
outsl
iret
fldcw
test
dec
mov
mov
repnz
inc
jae
fsubp
xlat
xchg
sub
sbb
mov
mov
xor
dec
sbb
cmp
movsb
subb
xchg
ds
fdivrl
push
push
fidivrl
mov
xchg
ljmp
add
push
xor
inc
mov
cltd
out
rclb
testl
xchg
dec
bound
sbb
lret
fistl
test
adc
aad
mov
ljmp
pushf
mov
fnstsw
mov
mov
sbb
fistpll
inc
stos
adc
je
lret
pop
add
pop
jne
push
clc
cmp
into
jl
mov
add
or
and
insb
mov
add
sbb
and
lret
push
mov
out
insl
int
fldt
stos
inc
mov
xlat
outsl
stc
sarb
inc
push
inc
adcb
cmp
stos
loop
or
shll
cld
lgdtl
pushf
sbb
decb
iret
sbb
dec
shrb
push
gs
inc
and
enter
xor
cmp
imul
jnp
jnp
mov
jle
aaa
adcl
mov
rorl
mov
subb
out
xchg
sbb
or
sbb
lahf
rorb
pop
xor
pop
cmpsl
fstl
addr16
fcompl
lock
out
insb
adc
pop
addl
cmp
bound
out
push
jmp
out
jmp
or
mov
fisubl
push
out
mov
pop
test
imul
ds
add
sub
pop
or
cmc
mov
pusha
lods
xchg
sbbb
dec
outsb
add
rcr
and
push
sbb
ret
mov
jg
test
es
sub
push
mov
fs
xor
mov
and
popa
jbe
packsswb
stc
popl
sar
arpl
xchg
mov
jge
clc
inc
adc
mov
fiadds
inc
mov
jmp
inc
push
aad
out
shr
add
xchg
mov
je
xor
jnp
jle
mov
lret
and
rol
inc
push
inc
jmp
adc
pusha
mov
dec
jae
dec
cmc
mov
pop
movsl
mov
std
add
call
test
push
mov
jno
add
mov
and
je
out
in
mov
fwait
dec
add
sbb
add
es
imul
mov
jae
sub
mov
sub
mov
sti
fwait
hlt
insb
lds
lock
pushf
and
out
and
cmpsl
out
adc
xchg
les
leave
addr16
cli
push
push
mov
cwtl
ljmp
out
pop
repz
shl
adc
xor
xchg
dec
adc
out
mov
push
sbb
cltd
rolb
shrl
icebp
sub
movsb
js
imul
dec
iret
ja
jne
mov
fidivs
dec
mov
inc
push
cld
jp
mov
stos
mov
clc
pop
lods
jle
dec
mov
jle
stos
scas
pop
lea
xlat
sub
inc
and
fsubrs
jl
dec
mov
js
or
mov
popl
push
sub
sarb
fcompl
push
dec
lods
inc
testb
out
js
cmp
lret
ss
insl
xchg
call
inc
mov
lods
decl
lds
mull
push
dec
xchg
mov
xor
std
nop
push
xor
pusha
push
movsb
mov
shlb
into
mov
push
or
mov
es
push
rcl
inc
adc
sub
mov
sub
mov
call
idivb
pop
lcall
adc
ja
dec
jns
add
sti
repz
or
aaa
rol
mov
dec
sbbb
xor
and
sbb
cmp
movsl
mov
rol
push
sbb
jmp
sub
xchg
dec
xor
dec
jl
lds
out
sti
js
dec
filds
xchg
xor
xchg
jno
xor
test
std
mov
aam
jbe
jg
lea
jae
or
daa
mov
xchg
test
out
imulb
call
faddl
dec
add
mov
inc
out
cli
xchg
sbb
int3
push
out
mov
xchg
insb
and
mov
lret
daa
sub
mov
cmp
shlb
jae
add
and
push
pop
pop
jmp
xchg
cmp
es
fdivr
or
or
add
add
adc
add
aam
cmp
cmp
stos
fdivrs
sbb
pop
mov
lcall
sub
mov
sbbl
and
push
push
insb
and
xchg
fldl2t
jecxz
lea
xchg
ljmp
nop
lock
xchg
mov
adc
dec
scas
and
loopne
scas
inc
les
int3
arpl
insb
stos
mov
fnsave
mov
sub
icebp
sti
scas
popf
adc
lret
cltd
lahf
jmp
and
inc
pusha
push
in
push
daa
mov
dec
lea
or
pop
push
lret
jnp
pop
sti
pushf
add
rcr
mov
add
sbb
and
lahf
jmp
int3
les
and
dec
enter
xor
cmpsl
leave
mov
notl
sbb
push
mov
inc
xor
leave
arpl
mov
add
pusha
xchg
lds
or
or
push
cwtl
jmp
subb
inc
cmc
mov
scas
and
aaa
fst
xlat
sub
xchg
add
jb
add
int
idivb
cmp
add
inc
aam
push
push
adc
fadds
scas
mov
push
adc
mov
imul
aad
shrb
pop
sbb
sub
pop
rep
pop
enterw
ret
insl
lock
pop
cltd
sub
imul
inc
xor
std
mov
mov
inc
mov
jnp
xchg
push
imul
mov
push
and
rcrl
and
push
imul
push
push
pop
push
enter
dec
ret
cmpsb
test
fsubs
pop
and
mov
dec
sti
mov
jns
mov
mov
and
sbb
data16
jp
inc
xchg
clc
mov
push
cmc
sub
mov
mov
push
xchg
jg
xchg
or
in
loop
hlt
or
popa
shll
rorl
aad
jno
mov
and
out
clc
xchg
repz
xor
cltd
mov
mov
cmpsb
or
gs
filds
into
gs
out
popa
cmp
jae
mov
movsl
icebp
test
dec
fldl
js
insl
outsl
in
push
out
jo
lahf
or
pop
testb
inc
and
lret
cmp
sahf
mov
xchg
leave
jmp
lret
and
jle
adc
flds
and
and
in
cmp
pop
mov
xor
mov
push
hlt
dec
push
sub
pop
jne
jno
lcall
push
dec
popa
aaa
mov
rcl
mov
addr16
cltd
inc
test
mov
mov
mov
mov
cmp
ss
push
jbe
mov
test
loop
ljmp
cld
call
sub
js
xchg
dec
jge
imul
pop
lock
mov
ds
clc
rolb
cwtl
add
mov
jno
jp
lret
mov
and
ror
inc
fadd
adc
pop
cmc
jmp
lods
scas
mov
add
outsl
rorl
gs
decb
adc
inc
mov
sub
cmpsb
movsl
jecxz
sub
ja
jbe
inc
jnp
xchg
rorl
push
add
and
mov
scas
cld
or
fcoml
push
dec
add
les
jno
dec
clc
ljmp
dec
dec
add
data16
rclb
or
and
cmp
ja
push
xchg
push
adc
cmc
repnz
add
test
cmc
sahf
test
lret
dec
outsb
add
xorl
in
stos
push
call
inc
jge
loop
fbstp
iret
inc
dec
int3
mov
push
stos
inc
sub
inc
add
push
ud0
xchg
inc
and
out
dec
mov
inc
subb
pop
mov
mov
lock
xchg
sub
mov
imul
mov
data16
sahf
pop
dec
xchg
mov
loope
shlb
mov
inc
cmpsl
inc
fcomp
lods
xor
fisubl
push
xchg
sub
xchg
cltd
mov
or
into
cmp
cmp
fdivrs
jb
ret
push
mov
push
lds
bound
data16
push
lret
pop
inc
lcall
and
shlb
pop
rcr
jl
jae
sbb
ret
sbb
sbb
adc
imul
imul
cmp
lret
out
icebp
scas
pop
adc
xlat
insl
mov
mov
in
pushl
sbb
sub
out
fisubs
mov
inc
mov
ficoml
push
jmp
pop
aam
es
int3
jnp
cmc
out
mov
sbb
cld
cmp
push
jbe
clc
leave
mov
int
in
stos
push
and
push
rorb
aaa
daa
shrb
lock
sub
pop
rorl
xchg
js
fcmovne
js
xchg
movsl
xlat
sub
daa
push
adc
call
sti
jne
sub
sub
mov
cltd
mov
aam
cs
call
mov
dec
sbb
mov
cwtl
imul
sub
pop
add
xchg
cmpsl
pushf
mov
and
cmpsb
push
lock
sahf
lods
inc
or
fiadds
jg
aam
and
inc
mov
stc
mov
lods
or
pusha
or
das
cmp
sbb
dec
dec
xchg
mov
jo
cmp
xchg
outsb
rorb
shrb
enter
sub
sahf
mov
dec
xlat
cmp
stos
ficoml
push
sub
iret
pop
jl
in
es
push
out
popa
push
fmuls
movsl
cmp
or
dec
sub
arpl
xor
imul
xchg
dec
jg
dec
stos
pop
cmp
lds
mov
fldl
ss
ret
js
cmp
mov
mov
fisttpll
jle
aas
push
dec
loopne
cmp
cmp
xchg
lods
add
dec
sub
xor
iret
adc
sub
xor
lret
xor
mov
mov
mov
pop
test
mov
add
add
lock
imul
test
jbe
jge
inc
or
push
leave
mov
and
in
cld
dec
jle
jecxz
lcall
mov
fdivrl
inc
and
ret
cmpsb
xor
cmp
test
adc
or
jmp
insl
lahf
jo
adc
pop
idivl
aad
ficomps
iret
data16
sub
xor
inc
in
pusha
xchg
lret
lret
pop
cmc
cld
lock
mov
les
cmc
jo
cs
sbb
fstpl
gs
mov
xchg
in
mov
lods
loope
out
cli
test
addr16
int3
cli
adc
sti
sub
push
mov
xchg
mov
cmp
cmp
test
jmp
testl
fstl
xchg
pop
mov
mov
ficoms
pop
push
cmp
fsubrp
jmp
out
out
xchg
jo
and
push
imul
adc
pop
mov
in
in
loopne
into
clc
pop
js
addr16
das
or
xlat
cltd
mov
adc
inc
push
xchg
mov
xor
cwtl
cs
or
dec
flds
test
test
sarb
mov
lret
loope
sbb
ret
arpl
mov
scas
icebp
add
inc
repnz
sub
stos
add
push
or
imul
inc
int3
mov
stos
inc
and
xor
lds
pusha
ds
pusha
mov
loop
sbb
pop
mov
lock
xor
sbb
push
inc
sahf
and
pop
imul
add
cmc
fnsave
sub
jl
ret
scas
jo
jbe
jecxz
aaa
xchg
std
add
cs
cmp
pop
das
add
lret
es
push
xor
sahf
sbb
out
sbb
push
mov
dec
dec
imul
xchg
mov
call
or
push
movsl
imul
dec
cwtl
jae
pop
test
add
addr16
xchg
sub
int3
imul
xor
iret
pop
mov
mov
gs
in
sub
repz
cmc
pop
arpl
stc
and
mov
mov
push
in
push
cltd
jne
jb
pop
pushf
inc
loopne
scas
std
and
stos
shrl
sub
jns
stc
push
and
cmpsb
fs
xchg
cmpb
cmp
cmpsb
repnz
jp
pop
stc
mov
test
xlat
enter
pop
pop
jbe
jnp
fnsave
mov
out
jmp
outsb
xor
test
and
stos
cmp
mov
cmp
inc
jg
lahf
sub
jp
mov
movsb
sbb
cmpsl
sahf
sub
sti
outsb
and
stos
add
stos
push
adc
fstpl
ss
movsb
mov
clc
xor
iret
pop
xchg
push
repz
stc
mov
push
add
cmp
mov
cltd
dec
inc
jb
mov
mov
pop
call
insb
sbb
scas
mov
int
push
ljmp
xchg
sbb
int
mov
jmp
loop
push
imul
xchg
clc
mov
and
ret
add
xchg
cs
sub
popa
push
repnz
mov
outsb
testl
movsb
add
sub
cwtl
xorl
fsubs
popa
repnz
dec
or
cltd
fst
inc
pusha
lock
addr16
jbe
push
aaa
pop
adc
xlat
inc
fs
fmul
sahf
frstor
fs
jbe
jmp
std
xchg
out
pop
test
jne
sbb
inc
push
mov
lahf
jne
mov
jae
movsl
out
adc
xchg
push
sub
out
outsb
add
adc
jne
ds
push
mov
shll
sbb
pop
inc
hlt
mov
mov
fdivl
testl
sbb
imul
mov
mov
mov
psubd
lret
mov
cwtl
jg
xchg
mov
aam
std
and
dec
add
cmp
cwtl
xor
xlat
mov
lds
pop
push
fdivrs
andl
call
aad
xor
xor
test
pop
mov
xchg
sbb
pop
adc
rorl
and
add
dec
sbb
jo
adc
push
push
push
jnp
sarb
das
cmp
mov
jno
bound
aas
sbb
mov
out
icebp
loopne
pop
stos
sub
mov
into
mov
pushf
test
or
mov
or
pop
adc
cmp
movsb
hlt
add
idivb
push
dec
mov
add
mov
sub
lock
andl
xchg
mov
xor
push
sti
mov
mov
jne
mov
adc
aas
test
out
cmpsl
aas
jo
mov
std
test
mov
dec
adc
mov
mov
push
and
decl
scas
add
inc
je
rcrl
xchg
lret
jbe
das
das
sbb
pop
mov
jp
lret
and
and
mov
inc
pop
dec
leave
adcb
scas
and
ss
or
push
test
addl
mov
push
not
pop
mov
les
adc
xchg
push
cmp
sbb
dec
mov
fcomi
mov
mov
addr16
jp
sub
push
adc
jo
push
add
js
repz
push
lcall
inc
bound
adc
andb
pop
lahf
cli
pop
pop
cmp
sub
outsb
cmpsb
leave
fwait
cli
call
lock
pop
out
or
or
jae
inc
xlat
inc
xchg
pop
inc
sahf
mov
jp
jecxz
lock
roll
cwtl
add
pop
push
mov
rolb
insl
sub
shr
addb
push
mov
fdivp
orb
pushf
pop
lret
inc
cwtl
repz
lret
fistpl
fdivr
xchg
lret
jmp
jmp
xor
mov
mov
push
repz
push
mov
icebp
es
sbb
popf
mov
rcrl
loop
jno
xchg
mov
sub
cmc
emms
mov
jecxz
leave
mov
jmp
jge
mov
push
push
dec
movl
fistpl
mov
xor
daa
mov
jns
popl
outsb
mov
mov
rcrb
mov
pop
sub
rcll
mov
sub
mov
call
cmp
andb
sub
xchg
jns
mov
aaa
cltd
mov
fmul
lret
fisubrs
rcl
jo
jae
ret
outsb
rcr
in
add
out
int
or
inc
fsts
out
addr16
xchg
xchg
jae
push
mov
xchg
decb
test
adcl
jp,pn
in
push
mov
mov
mov
inc
sti
push
mov
or
out
popl
xor
pop
jo
mov
ja
xorb
mov
pop
jnp
insl
into
and
int
xchg
add
lahf
mov
fdivrs
pop
leave
or
loopne
imul
mov
jl
movsl
fisttps
mov
dec
popa
mov
or
or
mov
test
scas
sub
mov
pusha
cmp
rcrb
in
or
test
xor
jp
cmp
ret
or
in
push
aad
mov
cwtl
repnz
xor
jmp
aad
sbb
xor
es
int3
stc
in
and
pop
imul
sbb
pop
rolb
lea
and
sahf
fs
sti
add
cld
iret
sbb
mov
or
adc
or
cmp
in
push
inc
inc
in
dec
push
sbb
insb
adc
xchg
stos
jno
hlt
mov
fldcw
xlat
or
daa
cs
cmp
pop
adcb
adc
repz
stc
jns
rolb
fadds
call
mov
sti
or
adc
imul
sub
les
ffreep
in
test
cmpsl
push
adc
or
jge
and
sahf
mov
xchg
mov
enter
inc
sub
add
mov
ficompl
xor
inc
pop
lea
pop
popa
stc
repz
mov
mov
mov
test
daa
inc
push
leave
testl
push
into
inc
push
shrb
ss
mov
mov
cmc
add
add
les
jns
mov
notl
repnz
enter
rcrl
sbb
insb
dec
cmp
repz
inc
outsb
sub
jmp
pop
cmc
fnstcw
xchg
je
ret
jp
cmp
shlb
pop
inc
fnstenv
and
lock
pusha
testl
insb
push
mov
fldl
sarb
hlt
lods
dec
lcall
jnp
out
sub
rcrb
stos
shlb
jo
jb
jnp
xchg
or
stc
js
sub
xchg
xor
cs
or
jle
mov
movsl
push
or
mov
mov
xchg
sti
xchg
xchg
pop
xchg
lds
loop
or
push
xchg
sub
dec
ffreep
in
push
in
ss
fwait
ljmp
lret
jnp
jmp
scas
enter
daa
pop
cli
pop
nop
je
es
or
add
int3
out
mov
pop
mov
push
icebp
inc
imul
cltd
mov
pop
das
push
xor
inc
mov
popl
nop
push
fstl
or
adc
bound
pop
in
shll
pop
aad
jb
mov
stos
out
scas
jg
iret
mov
xchg
pop
mov
sbb
add
mov
or
loopne
push
sub
mov
cli
fidivs
add
cltd
popf
mov
sbb
inc
push
push
mov
addr16
cmc
ss
add
mov
inc
push
nop
jb
repz
ja
movsb
rolb
adc
mov
movsb
pushf
xor
ret
add
inc
fnstsw
aad
sbb
fs
cmc
testb
les
mov
inc
out
aas
pop
loopew
sub
dec
call
jno
jle
test
ja
shrb
mov
sbb
jge
adc
dec
sbb
sahf
clc
pushf
fmulp
popa
mov
rcrl
test
call
cmp
negl
scas
mov
pop
into
sbb
xor
mov
outsb
pop
and
dec
stos
in
shl
adc
repz
aas
popa
enter
push
mov
push
sahf
mov
imul
add
jle
test
stc
jl
fidivl
popf
jg
jmp
mov
pop
icebp
xchg
imul
aam
outsl
xchg
pop
mov
mov
rcrb
sbb
jp
imul
out
adc
aam
jecxz
int
fnstcw
mov
push
daa
mov
xchg
add
mov
push
insl
aaa
pusha
leave
xchg
xchg
mov
lods
arpl
jecxz
je
inc
xchg
fisubrl
ss
mov
out
add
pop
jb
scas
aam
pop
les
mov
push
insl
in
adc
ljmp
xor
xlat
popf
test
aaa
mov
pop
in
dec
in
loop
adc
adc
xlat
lea
mov
cmp
popf
jle
into
sub
lds
stos
xlat
in
int3
arpl
lods
push
data16
jmp
into
xchg
and
insb
push
lahf
js
adc
add
inc
mov
push
dec
mov
scas
mov
pop
ss
push
pop
mov
mov
dec
gs
add
pop
xor
std
nop
shr
cltd
add
testb
dec
or
pop
lods
fs
sbb
mov
xor
aaa
push
xchg
in
pop
inc
ljmp
fsubrs
sub
jmp
nop
daa
nop
lds
mov
cmp
inc
outsb
xchg
jbe
loope
inc
push
dec
rolb
mov
cmp
arpl
cmc
scas
xor
push
pop
sbbb
and
push
sbb
dec
xor
fimuls
cwtl
leave
mov
dec
cmc
sub
mov
xchg
sbbb
cmp
ljmp
mov
jl
dec
lret
or
subb
lea
test
shl
scas
aad
mov
or
popf
adcb
nop
sub
mov
icebp
hlt
inc
scas
mov
popf
test
bnd
xchg
xor
jnp
int3
movsb
dec
cmp
sbbl
xor
cld
gs
shll
xorb
bound
push
lcall
add
xchg
fistps
aaa
push
ljmp
fdivrs
stos
mov
orb
mov
ljmp
cmpsb
test
mov
popa
push
cmp
add
pop
xor
xchg
add
xlat
and
adc
stos
sub
arpl
loopne
mov
mov
cs
enter
das
gs
inc
add
pop
into
inc
or
mov
sub
test
aad
lret
add
or
jae
xor
mov
push
rcrb
mov
cmp
daa
outsl
mov
mov
iret
bound
pop
mov
push
test
jg
test
sbb
xor
jns
add
or
lret
and
sub
dec
xor
jmp
insb
fnstenv
bound
loope
jns
or
stos
mov
xor
int
fs
sub
dec
or
push
movsb
jne
movsl
rcll
outsl
ds
cltd
jmp
sbb
cmp
stos
in
subb
fcomip
pusha
sbbl
scas
shrb
ss
aad
out
rcrl
lock
test
lea
mov
loop
dec
fcomps
adcl
in
addb
xchg
sub
in
dec
push
cli
jle
xor
lahf
nop
stos
inc
pop
mov
ftst
jmp
test
roll
addr16
jmp
cmp
sbbb
mov
loope
and
in
test
fmuls
mov
movsb
add
cmpl
pop
cwtl
xor
loope
adc
pop
mov
inc
jns
and
inc
mov
xchg
mov
clc
push
inc
cmp
xchg
push
cmp
dec
arpl
and
insl
pop
icebp
popf
lea
js
out
push
add
cmp
stc
rclb
stos
add
xlat
pop
ds
add
stos
outsl
daa
fucom
mov
shrd
jmp
mov
dec
cmp
int
rcr
mov
out
int3
arpl
fildl
jmp
out
xor
incl
imul
and
aam
mov
out
lea
les
or
shlb
lock
and
pop
cmpsb
ss
in
push
cmp
hlt
out
sbb
jecxz
adc
xor
xchg
dec
jg
or
fwait
popf
dec
adc
sbb
int
cmp
out
das
incl
sub
pop
stos
pop
in
mov
dec
and
shlb
jp
cld
dec
dec
mov
mov
pop
adc
adcb
es
add
movsb
sahf
pop
and
dec
jp
jg
jle
mov
fbld
insl
mull
shrb
gs
imul
mov
pop
mov
pop
int
mov
jmp
sub
pop
test
dec
or
inc
sbb
inc
pop
rol
or
jecxz
cs
or
adc
imull
shll
test
cmp
shr
mov
lahf
sub
dec
arpl
fnstenv
jmp
jp
or
pop
dec
call
test
mov
mov
push
jmp
push
das
pushl
popa
push
inc
aaa
jne
mov
pop
sti
sbb
sbb
arpl
adc
push
jmp
xchg
pop
push
xchg
push
jmp
mov
fidivrl
ret
push
inc
or
ja
testl
pop
xchg
mov
sbb
cwtl
adc
xor
mov
fsubl
pusha
into
sub
sub
lret
adc
rorb
add
pop
fucomp
jbe
aad
cmpsb
adc
inc
pop
mov
pop
push
cs
lahf
inc
roll
ss
push
loopne
rclb
icebp
les
cs
call
scas
aad
fwait
and
mov
lcall
cmp
in
push
xor
lcall
xchg
and
nopl
push
lods
pop
js
fstps
sahf
xor
movsb
jo
push
pop
mov
fistpl
lea
sub
scas
cmpsb
lock
mov
and
push
inc
inc
stc
sbb
mov
mov
fnsave
addb
xor
bound
push
cmc
pop
xor
mov
fimull
jmp
jnp
mov
loop
in
sub
repnz
scas
ficomps
pop
fsts
stos
push
out
in
lds
lret
xchg
pop
push
push
lret
or
sarb
shrb
inc
dec
pop
inc
mov
into
and
repnz
bound
shrl
and
dec
mov
shrb
dec
iret
sub
mov
out
stos
dec
inc
lods
mov
add
enter
push
jp
inc
pop
and
pop
testb
xchg
jge
or
nop
push
inc
lods
pop
loop
pop
xor
dec
fisubrl
or
out
movsl
dec
pop
inc
js
add
aam
inc
cli
push
dec
stc
jle
sub
ds
sub
inc
dec
filds
stos
aas
and
jbe
push
and
imul
push
daa
outsl
mov
hlt
lahf
jbe
aam
mov
in
mov
xchg
fmul
daa
fwait
pop
cmp
hlt
cmp
cltd
rorb
btc
jbe
sbb
inc
fdivrs
dec
pop
fildl
mov
ficompl
das
fucomp
jl
push
pop
ja
imul
enter
mov
sbb
add
xor
mov
add
add
jp
adc
xlat
stos
in
ss
and
aam
cld
push
sub
jnp
cs
cmp
clc
stos
mov
cltd
ret
inc
mov
jb
pop
ja
pop
xor
xchg
mov
test
xchg
mov
mov
loope
pop
leave
adc
push
push
adc
xchg
push
test
and
push
sub
scas
data16
movsl
sbb
xlat
cltd
pop
hlt
notb
xor
pop
jl
mov
dec
jnp
ret
arpl
jmp
hlt
call
or
das
in
pusha
int
pop
icebp
mov
ret
shr
xchg
jns
add
out
aad
and
ja
pop
out
loop
sbbl
add
mov
and
shlb
cli
pop
lods
pop
frstor
in
test
lret
out
jg
shll
loope
xchg
imul
xor
xchg
cmpsl
aam
fcomps
sti
xchg
jns
decb
lcall
fs
push
add
ja
and
imul
bndstx
mov
daa
jmp
adc
rorb
cmp
movl
out
out
out
daa
gs
push
mov
mov
ds
aad
mov
jg
int3
xor
mov
inc
pop
inc
movsl
jnp
push
insl
and
iret
stos
cmpl
or
jp
cmp
jle
cmp
cmp
jns
cmp
mov
cmp
mov
xchg
call
icebp
stos
and
in
add
imull
aad
xchg
jae
lcall
add
ret
cmc
add
int
pop
mov
mov
hlt
mov
xchg
or
adc
adc
cli
imul
xchg
fnstenv
pop
mov
fucom
and
gs
jge
mov
pop
jmp
and
imul
cmc
mov
into
sbbl
or
les
pusha
push
lods
fcomp
insl
sub
or
pop
pop
rcrb
xchg
mov
loopne
clc
rcrb
popa
sub
mov
adc
stos
lcall
jne
mov
adc
es
lea
sub
ss
in
and
inc
or
int
fnstcw
push
out
mov
in
or
sbb
cmp
cmp
lds
lds
outsb
add
cmc
cmp
sahf
push
dec
loope
stos
and
addl
mov
sbb
loope
repnz
sahf
adc
jmp
add
pop
sub
xchg
lahf
and
movsl
call
xor
push
mov
flds
popa
js
ds
jmp
inc
or
jne
popa
test
or
pop
pop
jno
popl
fcoml
loop
decl
scas
inc
cld
xor
mov
int
bound
ficoml
mov
in
out
mov
test
sahf
loop
cmpsb
shll
mov
movsb
repz
and
mov
xchg
scas
sub
mov
int
mov
lods
sub
repnz
arpl
in
mov
mov
in
knotb
jp
jle
sub
pop
js
xchg
std
pop
movsl
or
or
es
push
pop
jae
add
lret
scas
mov
repnz
push
cmpsl
lock
mov
mov
mov
mov
xor
out
call
dec
push
push
lods
add
lret
mov
cmpb
dec
clc
mov
loope
mov
jmp
dec
es
aam
inc
xchg
or
xchg
sub
and
ja
sub
aaa
cwtl
add
pop
in
test
repnz
push
xchg
cmp
shr
xor
leave
insb
xorb
dec
into
xchg
popf
hlt
call
or
or
dec
cmp
and
dec
dec
mov
das
cs
pop
cmp
outsb
dec
cmpsb
mov
mov
pop
mov
adc
das
testl
inc
xlat
xchg
les
es
push
dec
lods
xchg
nop
or
xor
fs
mov
lcall
popl
push
mov
enter
xchg
in
inc
incb
add
mov
xchg
lods
xchg
or
and
test
test
jl
dec
cmpsb
data16
or
sbb
sbb
xor
pop
dec
mov
lock
add
in
mov
and
aas
push
or
xlat
jo
sbb
mov
cwtl
fwait
stc
push
pushl
hlt
lods
movsb
fisubrl
fcompl
test
mov
add
adc
incb
xor
ds
outsb
ret
pop
adcl
cs
dec
push
xor
aam
js
adcb
mov
gs
xor
push
adc
js
jne
mov
push
jmp
add
jb
rcrb
mov
mov
fisubl
loope
xor
jo
cmpsl
xor
out
out
leave
adc
push
aas
repnz
inc
aad
mov
push
or
ret
daa
jle
daa
cwtl
push
jnp
cmp
xchg
push
pop
in
nop
cld
pop
push
jecxz
xlat
popa
call
dec
movsl
pop
add
fwait
xor
pop
push
xor
sti
dec
and
cmpsb
sarb
out
mov
daa
cld
call
sub
jp
jb
xor
xor
fiaddl
nop
add
mov
jmp
adc
jae
rorb
fwait
jo
add
push
pop
clc
push
push
outsb
fdivs
jle
nop
imul
lock
sbb
sbb
aas
pop
shrb
mov
js
lock
mov
adc
adc
xchg
or
adc
leave
cmp
cltd
jb
xchg
push
test
mov
or
pop
xchg
push
mov
dec
mov
sbb
lods
shrl
jge
jns
jne
mov
adc
add
cmp
imul
push
cmpsl
popa
inc
repz
mov
sub
and
testb
or
outsb
pusha
push
mov
mov
push
adc
add
push
pop
cmp
outsl
sbb
mov
mov
into
enter
cmpsb
xorb
sub
jno
nop
arpl
dec
lcall
inc
push
sti
dec
movsb
fnsave
clc
pushf
fsts
cld
mov
pop
xchg
xor
dec
insb
add
cmp
sub
mov
push
dec
push
leave
fwait
in
mov
xlat
movsl
mov
fistpll
mov
int3
xchg
mov
fwait
mov
mov
push
hlt
jg
sub
pop
lahf
ss
outsb
movsl
in
mov
jmp
les
xor
pop
mov
ficoms
sub
xlat
dec
ret
stc
or
and
adc
lcall
aam
popa
push
cwtl
int3
jg
mov
cld
out
sahf
imul
push
iret
sbb
add
pop
xor
sbb
lds
shlb
adc
ret
das
inc
repnz
sub
inc
lods
jno
dec
imul
scas
pop
push
jge
stos
cmp
rorb
add
shr
bound
icebp
mov
or
mov
mov
out
cmpsl
outsl
in
ljmp
push
jbe
loop
jp
inc
jns
sti
test
js
cmp
mov
js
xchg
cmp
mov
xor
outsl
dec
imul
lock
nop
mov
mov
aam
cmp
mov
inc
cwtl
fldl
pop
sub
jl
pop
scas
xchg
xchg
xor
inc
loopne
nop
add
mov
and
imul
cmpsb
inc
lret
test
mov
loope
inc
cld
mov
imull
es
add
repnz
lcall
sarl
mov
pop
lea
or
jb
daa
jg
sahf
inc
jo
push
push
push
sbbl
adc
jecxz
jmp
addl
pop
setns
call
mov
mov
clc
adcl
sbb
lds
sti
pop
scas
sub
sti
or
and
aad
add
addr16
test
and
mov
cmp
stos
dec
adcb
imul
pop
push
jne
pop
adc
inc
dec
xchg
scas
jge
xor
ljmp
push
loop
gs
icebp
mov
dec
test
jno
das
mov
xchg
pushf
cmp
dec
cmp
push
arpl
jmp
mov
add
outsl
add
xchg
xchg
in
out
or
mov
push
pushf
sub
lods
aas
cmpsl
jecxz
out
inc
sbb
push
inc
xchg
fnstenv
or
cli
aam
mov
pop
ss
sub
xlat
aad
jmp
arpl
adc
out
push
cmp
add
cmpsb
mov
std
xchg
fstl
jl
lods
inc
fadd
dec
iret
inc
popf
test
inc
push
lods
jne
cmpsb
mov
shrb
add
insl
pop
inc
bound
inc
fidivs
inc
pusha
jne
cmp
ds
mov
clc
fstpt
xor
into
repz
das
jnp
popa
imul
jg
pushf
push
jb
cmpl
pusha
jecxz
jbe
xor
mov
dec
push
cld
aam
sub
ret
das
mov
movsb
mov
popf
push
pop
mov
push
clc
orl
xchg
pop
mov
das
mov
fimull
pop
cmp
fstps
jmp
or
xor
inc
add
pop
mov
push
inc
jbe
mov
push
pushf
sarb
roll
jbe
vucomiss
cmc
stos
mov
mov
push
fiaddl
xchg
int
aad
ljmp
push
je
aam
imul
push
push
inc
mov
cmpl
mov
lea
out
std
mov
inc
pusha
repnz
mov
xor
shr
lahf
mov
mov
mul
sub
mov
pop
adc
notb
int3
mov
pop
arpl
or
das
dec
sub
shrb
sti
fstpt
inc
iret
sub
xor
les
and
dec
sub
scas
mov
mov
stos
addr16
nop
cmp
inc
outsb
sbb
push
xchg
dec
loopne
push
pop
cs
xchg
xchg
mov
movsl
cmp
pop
insb
or
icebp
inc
scas
sbb
jno
lock
lods
and
dec
fisubrl
mov
in
and
inc
lods
jg
andl
rolb
xor
mov
add
aad
stos
or
or
pop
test
neg
es
cmpsl
lods
insb
mov
mov
jb
test
pop
imul
sub
out
or
inc
test
inc
stc
into
push
inc
mov
dec
inc
mov
pop
aas
pmaxsw
pop
fcmove
aam
jnp
les
cs
xor
xor
fs
sbb
leave
es
nop
pop
ljmp
das
and
in
inc
iret
mov
imul
fsub
jl
cmp
jecxz
mov
mov
xor
adc
jno
in
xor
xor
test
jne
jl
mov
mov
jne
pop
cmp
pop
mov
jae
xor
push
sbb
shrl
xchg
ja
mov
fbld
mov
scas
inc
pop
std
xchg
xchg
test
int3
dec
sub
inc
cmp
movsw
adc
pop
rcrb
es
sbb
shrb
mov
xor
or
pop
push
es
aaa
mov
pusha
loop
dec
std
xchg
aad
stos
mov
negl
cld
inc
jae
or
cmp
movsb
repnz
insl
loope
inc
and
adcb
inc
pop
std
xchg
cmpsl
and
xlat
inc
jns
addr16
in
jae
push
cmp
fstps
adc
pop
repnz
mov
jns
mov
cmp
jno
andb
mov
aam
sbb
push
notb
ret
rorl
jge
xor
mov
mov
sub
daa
dec
shrl
call
repnz
imul
mov
stos
push
adc
out
cmp
ljmp
in
shrb
gs
je
stos
inc
and
ja
test
push
cmp
sbb
idiv
push
js
pop
imul
jne
test
sbb
sub
fsts
mov
test
jno
jle
pop
mov
jmp
jge
scas
cmp
xchg
mov
leave
int
inc
stc
xlat
push
and
pop
cmp
repnz
repnz
pop
push
adc
push
bound
arpl
dec
pop
push
mov
push
jmp
stos
dec
mov
shl
in
add
jp
out
push
scas
jno
cltd
push
jne
ss
pushf
test
int
add
js
xlat
stos
rcrl
mov
enter
jle
jbe
adc
dec
cmp
arpl
popa
cs
xor
mov
int3
xchg
stc
addr16
xor
fcompl
mov
inc
jge
out
mov
mov
push
add
sub
and
shrl
fwait
mov
sub
out
add
jle
push
xor
jg
cmpsb
push
arpl
fistpll
mov
lret
cmp
cmpsl
ret
filds
fcmovnb
mov
xlat
test
shlb
xchg
pop
pop
mov
test
sbb
push
in
mov
mov
cmp
hlt
mov
lret
ret
adc
les
and
jecxz
sbb
push
cmp
mov
lods
push
push
inc
les
int
arpl
jno
lods
push
jmp
in
jo
andl
dec
lods
cmp
das
add
movsb
or
es
jecxz
or
ljmp
dec
in
mov
rol
push
jne
out
repnz
push
pop
cs
stc
imul
insb
mov
sub
mov
sti
sbb
bswap
imul
in
fildll
xchg
std
mov
outsl
push
inc
push
shlb
or
das
mov
aam
add
dec
jnp
jle
or
mov
push
mov
xchg
cmp
xchg
mov
and
mov
pop
cld
movsb
mov
adc
and
xchg
jne
inc
push
aas
jae
out
inc
lods
test
inc
mov
inc
or
jno
shrb
fidivl
push
dec
xor
push
ljmp
mov
jne
cmp
enter
or
adcb
jne
testl
or
and
std
inc
loop
test
jne
stos
lods
fadd
mov
push
filds
cmp
adc
lods
jmp
rcrl
xor
aas
adc
pop
mov
and
mov
or
add
call
test
fwait
lods
ljmp
cwtl
inc
sub
sahf
xchg
dec
pusha
xchg
lds
pop
or
movsb
fldcw
stos
sbb
imul
outsl
sub
adc
xchg
outsl
inc
lods
mov
fldl2e
mov
fcomp
inc
cmp
ja
enter
scas
jbe
mov
data16
and
roll
push
push
stos
or
jl
loop
push
out
out
in
aam
push
arpl
dec
add
enter
mov
jb
inc
mov
jo
and
push
repz
into
popa
fcoms
popf
sub
mov
lret
mov
jae
push
push
nop
xchg
dec
dec
pushf
push
movsb
repnz
lea
outsb
push
xchg
cs
mov
pop
fdiv
sub
pop
sti
and
mov
das
lds
mov
outsb
and
iret
sbb
xorb
push
outsb
jecxz
cmp
scas
or
repz
push
out
pop
aas
xchg
mov
cmp
jno
and
sbb
rcl
imul
lock
pop
ja
pop
cld
xchg
sub
mov
out
push
mov
jne
pop
pop
inc
pop
dec
jp
jo
pop
xor
fmul
cmp
jge
xchg
dec
sub
jae
scas
add
aaa
mov
push
xor
test
inc
sbbl
popa
popf
push
or
rcrb
push
dec
xor
in
adc
mov
je
das
jnp
imul
adc
cmp
dec
inc
leave
jecxz
adc
adc
xchg
sub
xor
adc
sbb
xchg
jno
cld
fmull
rcrb
mov
xorl
xchg
iret
jecxz
jnp
sbb
scas
xchg
das
sbb
and
inc
fists
adc
cli
aad
cmp
insb
insl
adc
int
mov
fldl
or
xor
outsb
jle
inc
in
xor
in
popa
sub
adc
adc
je
add
cltd
push
adc
insb
or
push
and
aas
mov
sbb
mov
xchg
and
loope
inc
dec
xlat
mov
adc
xor
cli
jns
cmp
pop
ja
iret
mov
fldcw
push
xor
nop
fwait
ss
jns
test
mov
mov
lods
outsl
shlb
dec
aad
jbe
fidivl
sub
leave
nop
mov
cmp
xchg
out
lods
xor
dec
bnd
je
fwait
sahf
add
enter
imul
iret
push
je,pn
adc
cmp
movsb
fcoml
or
ljmp
pop
and
int
popa
lahf
test
inc
bound
sti
shl
mov
movsb
mov
ds
cmpsl
imul
xchg
jbe
pushl
xchg
push
out
jl
mov
testl
pop
sbb
loopw
xchg
sub
sbb
mov
push
icebp
inc
lock
clc
outsl
pop
cld
loopne
adc
adc
or
pop
mov
fidivrl
push
sahf
dec
in
sarl
cltd
test
mov
fistpl
xchg
xchg
out
sbb
mov
inc
push
lea
into
jb
and
mov
push
mov
jmp
push
push
test
xchg
inc
sbb
aaa
das
sbb
fxch
sub
mov
sbb
dec
cmp
shll
loopne
pop
fiadds
sub
inc
pusha
inc
dec
loop
int3
test
sbb
scas
addr16
in
test
rorb
dec
cltd
add
jle
push
insb
pop
inc
push
lods
fnsave
pushf
inc
mov
or
or
jge
arpl
mov
andl
pushf
notb
cmpl
pop
or
stc
shl
mov
lds
dec
jle
adc
lahf
aad
add
jno
pop
and
adc
subb
and
outsl
inc
mov
fnstenv
roll
out
xchg
inc
dec
mov
dec
or
push
dec
add
push
and
insb
jnp
inc
mov
test
sub
repz
fstpt
xlat
outsb
and
shrb
jl
push
sub
pushl
loope
fcoml
mov
pusha
test
es
and
mov
mov
cmp
pushf
cmpsl
je
aaa
push
das
addl
lcall
cltd
jp
hlt
aam
dec
test
fdivl
or
jge
sub
mov
outsl
rcll
sbb
fisttpl
xor
std
cltd
inc
and
mov
adc
stos
and
adc
pop
jae
sub
jp
sub
stos
fdivrl
jecxz
lock
adc
shll
push
negb
scas
adc
inc
inc
lds
fmull
mov
jg
dec
test
lods
push
out
jae
stos
mov
or
sub
das
jg
adc
cmp
dec
sarb
dec
add
jecxz
xchg
stc
stos
adc
push
pop
xchg
aas
pusha
outsl
push
push
movsl
dec
cmp
repnz
arpl
lds
mov
sub
rcll
popa
int3
cli
xor
jo
sub
es
mov
dec
dec
fs
inc
pop
shl
sbb
xchg
popa
cmp
inc
mov
sti
pop
push
daa
inc
js
movsb
fucomip
aad
add
stos
repnz
fs
iret
cltd
mov
mov
mov
pop
stos
hlt
popa
sub
lea
adc
fs
jge
add
es
pop
xchg
or
push
mov
cmp
dec
mov
and
test
in
out
push
mov
iret
xchg
aam
test
arpl
int
add
mov
pop
push
fsubs
int3
outsl
ret
pop
inc
movsl
imul
dec
cltd
mov
hlt
cmp
mov
or
jge
das
cmp
xor
lea
cmc
ret
push
xor
inc
test
das
xchg
lods
xorl
int
movsb
jbe
mov
mov
or
popa
call
or
adc
mov
push
je
cmp
jne
ret
xchg
sub
fldl
xchg
dec
gs
aad
lock
js
jbe
ret
sbb
ds
pop
stos
cmpsb
mov
jg
repz
inc
mov
je
aad
and
and
cmc
imul
mov
dec
and
jbe
lods
cld
jl
add
js
jnp
outsl
cwtl
nop
xor
scas
cmp
loopne
add
pop
or
mov
fdivs
inc
mov
lods
cmp
fcmovne
mov
sahf
xlat
sub
push
mov
mov
push
mov
and
subb
push
out
loop
int
add
inc
stc
mov
sub
lods
fldt
in
xchg
ret
je
mov
adc
xor
cwtl
decl
sub
mov
mov
or
sub
sub
mov
mov
jmp
jo
lea
pop
jle
cld
in
stos
cld
mov
sub
jmp
pop
sbb
pop
cmp
gs
push
int3
imul
scas
cmp
ds
jnp
out
mov
lds
in
adc
mov
pop
sub
mulb
popa
call
or
iret
dec
adc
mov
sbb
dec
mov
push
mov
jnp
sbb
out
in
cmp
xchg
bndldx
mov
inc
movb
mov
cmpsb
sub
lahf
jl
adc
sbb
pop
movsl
int3
imul
out
pop
push
or
mov
stc
mov
lods
push
rclb
lret
pop
icebp
imul
sub
xor
shrl
add
adc
lods
inc
or
pushf
insb
push
mov
aaa
in
rcrb
mov
jmp
js
popf
xor
out
in
pusha
in
add
jecxz
sarb
imul
or
cmp
lcall
mov
dec
jecxz
cmp
loope
push
ja
cmpsl
sbb
xchg
sub
daa
test
inc
or
mov
push
rcr
dec
pop
imul
mov
ds
cmc
rclb
mov
xlat
mov
cld
sahf
xor
cwtl
push
mov
das
dec
lret
bound
adc
jg
mov
and
xor
lods
sar
adc
cmp
pop
outsb
push
fdivrs
enter
push
pop
iret
mov
dec
dec
jl
lock
cwtl
fs
cli
inc
pop
shll
and
pushf
sti
jo
or
mov
mov
xchg
cmp
mov
sub
jnp
sub
xchg
icebp
cmp
pop
add
mov
loop
push
cmp
mov
adc
lods
nop
jl
mov
push
aas
rcr
jmp
and
cwtl
mov
sbb
ljmp
xor
push
inc
lea
xor
jae
mov
pop
mov
pop
jmp
cmpsb
adc
or
add
out
in
add
inc
xor
cli
jo
lahf
xor
loop
sub
xchg
shl
mov
aam
pop
xchg
cmpsl
sbb
add
jecxz
in
ja
and
not
or
cltd
movsl
cli
rcrb
mov
add
add
inc
ficoml
jno
push
stos
push
loope
testb
out
sti
ret
daa
xor
movsl
cmp
movsb
int3
dec
jg
xchg
cmpsl
inc
mov
dec
jmp
andl
jb
sahf
imul
mov
jecxz
push
inc
mov
stos
fcomp
in
xor
nop
xor
jge
pop
icebp
push
lods
dec
add
cmp
testl
xchg
mov
sahf
or
jbe
mov
andl
test
cmp
scas
mov
cmpsb
orl
fcoml
test
insl
mov
scas
push
rclb
popf
lods
inc
xchg
inc
fs
and
mov
ret
je
cmp
push
movsb
cmpsl
mov
push
je
aad
xorl
cmp
aas
jge
in
dec
in
jp
in
jp
jg
push
mov
xchg
and
fdivl
ret
cwtl
jae
dec
cli
push
jne
fidivs
xchg
sbb
jecxz
cmp
sub
fs
mov
in
js
sbb
mov
ror
dec
add
dec
pop
les
daa
push
cvtpi2ps
das
dec
hlt
adc
cmp
in
adcl
test
in
in
test
sahf
dec
and
frstor
sub
mov
mov
sti
lods
and
and
inc
add
jl
pop
jmp
adc
stos
xor
fsts
les
mov
aam
je
pop
lret
xchg
inc
mov
sub
pop
outsl
dec
add
push
aaa
sub
pop
mov
aas
in
xchg
outsl
stos
cmp
inc
adc
push
xor
test
pop
add
mov
mov
arpl
push
inc
adc
dec
sbb
mov
out
dec
lds
cld
jg
dec
mov
mov
push
loope
shr
ret
sub
dec
push
pop
mov
insb
std
inc
pop
dec
mov
lds
jne
mov
fcomps
mov
jmp
mov
popf
or
dec
mull
dec
xchg
ja
arpl
andl
jno
stos
mov
scas
sub
rcll
and
mov
lret
xchg
mov
jnp
loopne
xor
mov
jae
dec
xor
mov
pop
daa
cli
add
pop
jmp
dec
fsubs
jbe
scas
or
aaa
mulb
je
jmp
add
aam
jnp
ss
dec
arpl
lret
lods
fstpl
xor
jmp
add
xchg
and
adc
mov
mov
adc
ss
sub
cmpsl
pop
not
fwait
stc
or
mov
mov
pop
daa
into
enter
push
or
mov
cld
insl
lods
fdivrl
push
jae
imul
push
jp
jle
push
dec
lods
push
adc
pop
pushf
sahf
jb
and
cmp
cs
jne
push
mov
jmp
mov
stos
mulb
daa
push
outsl
test
and
movsb
lods
rcl
dec
cmp
sbb
push
popa
stos
mov
in
jo
movl
inc
adc
xchg
int
lahf
xchg
aas
stos
jmp
mov
xor
adc
mov
sbb
xchg
fwait
xor
cli
pop
mov
testb
jnp
pushf
dec
pop
sti
xor
aaa
clc
fwait
outsl
ja
dec
test
and
and
ja
mov
lcall
fwait
mov
mov
ss
pop
std
xchg
int
lods
aaa
fsubr
pop
cmp
lods
out
inc
jmp
mov
or
add
pop
loopne
popf
lds
push
ljmp
jno
imul
call
popf
leave
inc
cwtl
jne
int
xor
cmpsl
jne
lahf
pop
cmp
or
cmp
pop
clc
mov
mov
sbb
clc
mov
cmp
add
aaa
pop
push
and
fstpt
sbb
adc
ja
push
mov
incl
push
or
jmp
pop
xor
jmp
sbb
push
scas
fimuls
lahf
mov
xor
cmp
les
inc
push
xor
cmc
mov
dec
push
mov
sbb
xor
ss
mov
dec
xchg
repnz
push
nop
mov
cmp
adc
cmp
xchg
fs
stos
aaa
lret
pushf
add
push
push
bound
xor
jns
daa
out
jno
inc
xchg
arpl
rcrb
mov
push
out
pop
add
xchg
xchg
sbb
call
add
mov
sti
xchg
cs
test
ss
fsubrp
mov
jnp
or
ret
cmp
notl
in
ret
sub
xlat
xchg
nop
mov
out
push
dec
dec
clc
adc
loop
jl
add
add
fbstp
pushf
insb
cli
outsl
push
sub
test
aaa
dec
repz
imul
shrl
xor
shrl
mov
aad
and
jg
mov
int3
xchg
gs
xor
jo
sbb
jle
adc
pop
adc
push
jno
popa
fadds
mov
decl
leave
mov
jo
movsb
rcrb
and
in
dec
repz
bound
imul
cmp
les
je
sbb
cmpsb
outsl
cmpsb
mov
loope
inc
cld
sbb
xchg
push
and
fistps
sub
cmp
loope
mov
push
ja
outsb
jge
syscall
dec
mov
int
jecxz
insb
aas
neg
cs
rcl
lret
bound
xor
imul
ficoml
sbbb
clc
aas
ljmp
mov
xor
mov
icebp
scas
and
mov
movb
add
mov
mov
shlb
or
mov
push
ljmp
jno
cmpsb
xor
push
push
icebp
or
pop
mov
jge
or
sahf
push
movsl
jmp
mov
repz
mov
mov
outsl
les
or
in
xchg
lods
dec
in
notb
insl
dec
cltd
test
xchg
inc
jmp
clc
mov
jle
xchg
push
mov
rcrb
bound
jnp
or
jno
adc
out
mov
push
dec
aad
in
iret
fildl
sub
int3
fisubrl
jns
sub
pop
mov
dec
cmpsb
adc
loope
mov
mov
rolb
leave
out
movsl
addr16
push
push
push
adc
cld
push
xor
test
pop
int3
insb
mov
dec
jge
movsl
outsl
out
jecxz
aam
pop
andb
mov
andl
les
xorl
repnz
jns
dec
sub
or
cmp
xor
rcl
addr16
popa
sub
lret
incb
hlt
pushf
stos
jl
rcr
mov
mov
inc
inc
push
fdivrs
dec
in
lahf
jmp
mov
fwait
cmp
xchg
arpl
adc
jecxz
fldcw
add
int3
or
hlt
and
inc
dec
mov
enter
pop
add
inc
lcall
fildl
or
jae
aam
ds
inc
mov
fwait
int3
jmp
jno
xchg
dec
push
fcomp
mov
push
xchg
popa
adc
dec
lahf
and
int3
xchg
xchg
lret
fsubrs
daa
inc
mov
scas
mov
repnz
xchg
lahf
idivb
lret
xlat
adc
sbb
les
cmp
inc
or
lret
cmp
xchg
cmp
dec
in
bound
adc
mov
xor
add
imul
jno
pop
popa
and
arpl
out
or
sub
jns
mov
mov
add
call
ret
adc
or
aaa
xor
imul
mov
scas
xchg
pop
std
insb
push
or
push
pop
dec
outsb
hlt
jg
pop
adc
xchg
out
sbb
add
mov
jg
and
mov
sbb
out
bound
mov
fiadds
fdivl
fs
cli
ret
pop
shlb
repnz
push
mov
adc
das
shlb
clc
data16
sbb
in
gs
ljmp
push
jne
mov
mov
gs
jnp
or
mov
mov
jno
aad
mov
leave
sahf
jae
and
pushw
mov
addb
or
xchg
adc
mov
push
or
arpl
subl
push
enter
xchg
sti
jns
sub
stos
shl
xchg
test
inc
enter
dec
popa
fmull
fisubl
aas
dec
out
inc
in
call
add
lret
int3
decb
in
test
fstl
cmp
add
popl
cld
push
aam
push
or
pusha
mov
out
sbb
gs
push
jmp
xchg
sbb
and
out
push
cmpsb
test
push
in
mov
dec
pop
loopne
mov
or
fidivrl
sub
call
and
xor
lret
jecxz
inc
mov
mov
lret
clc
pop
imul
mov
push
push
test
add
mov
faddl
mov
mov
cmpb
mov
xor
lret
pop
scas
or
lods
and
scas
xor
mov
cmpsb
arpl
pushf
sbbb
cltd
cli
es
mov
mov
cmpsb
adc
outsb
xor
gs
and
call
xor
lret
cltd
mov
rcll
pop
fbstp
or
rclb
popf
imull
jae
jb
add
repz
adc
inc
call
push
pop
aad
fildll
mov
iret
fwait
mov
inc
repnz
clc
xchg
enter
outsb
jp
pop
mov
lods
cmpb
movsb
xchg
push
stos
dec
movb
push
push
fsubrs
push
sbb
jecxz
cmp
sbb
xchg
fdivl
daa
sbb
cltd
mov
cmp
cld
ret
lea
cmpsl
shlb
test
add
jbe
add
cmp
pop
or
test
loopne
icebp
popa
repz
push
mov
xor
fldl
mov
repz
movsb
pop
cmp
scas
clc
sub
jp
cmc
cmp
pusha
outsl
push
loope
repz
leave
dec
mov
inc
jp
fbld
lahf
and
add
fs
popl
mov
jnp
leave
pop
inc
sbb
sti
sbb
mov
xchg
fmull
xchg
push
ss
dec
popf
lea
iret
jecxz
shl
jns
and
and
pop
pop
xor
repnz
xchg
shrl
dec
outsl
sub
jno
xchg
sub
ja
jmp
cmp
into
jp
les
jno
push
in
pop
arpl
loope
mov
xor
loop
lret
adc
fdivp
loop
lcall
and
pop
inc
jg
icebp
lds
sub
adc
gs
mov
and
ljmp
jb
jp
ficoml
lcall
popa
clc
sarb
mov
push
jno
test
stc
loop
lret
mov
fnstenv
or
cmp
lods
cmpb
mov
jb
inc
sub
test
push
cmp
imul
imul
pop
por
cmp
test
mov
sbb
pop
dec
cmp
cwtl
pop
rcrl
test
mov
movsl
mov
rorl
arpl
lcall
in
mov
lock
insl
sbb
shrb
ret
jmp
mov
fdivrl
imul
sbb
insl
add
cmp
inc
jp
or
sub
jb
mov
fdivrp
adc
ja
jns
test
and
sub
addr16
adc
cmp
and
scas
cmp
mov
lea
test
and
mov
ret
cltd
dec
inc
sahf
lret
ret
add
sbb
pop
jmp
inc
lds
je
outsl
lret
mov
inc
jecxz
sub
fisttpll
dec
rdpmc
mov
test
push
mov
aaa
inc
test
push
out
mov
mov
rcrl
imul
pushf
sub
adc
rcll
nop
sub
adc
ss
add
test
arpl
lret
jae
and
cli
pusha
pop
mov
xchg
mov
rcrl
add
mov
inc
and
xchg
int3
imul
jnp
fdivr
fyl2x
xor
adc
nop
sub
lret
add
fisttpl
push
mov
inc
ja
leave
mov
dec
add
jno
movsb
sub
pop
repnz
xchg
jmp
pop
add
sbb
jnp
mov
les
xchg
cli
mov
divl
pop
push
cmp
and
daa
lods
mov
adc
inc
in
mov
push
pop
xor
and
sbb
cltd
xorb
js
icebp
and
fcomps
mov
cmp
out
or
mov
mov
fbld
jo
lea
jle
or
mov
loop
adc
inc
lcall
js
loope
xor
jl,pn
or
outsb
sub
push
pop
dec
orl
and
mov
mov
fisubl
outsb
jnp
dec
add
fldenv
inc
inc
in
in
scas
dec
sub
lret
inc
movsb
jb
cmpsl
push
lds
sbb
rcrl
mov
repz
bnd
push
out
aaa
orl
js
sub
and
jecxz
inc
fldenv
mov
fisubrl
shrb
jnp
push
pop
xchg
lds
dec
jo
xor
mov
stc
push
cmpsb
test
ss
xchg
shrb
adcb
adc
adc
jnp
int
shll
stc
int
setp
and
add
jmp
fwait
cmpsl
cs
int
adc
sti
mov
mov
sbb
inc
inc
cmp
jo
fistpl
adc
fists
in
test
dec
pop
lock
fs
aaa
adc
test
mov
push
mov
cwtl
mov
and
sbb
clc
imul
jnp
daa
ret
mov
iret
iret
shlb
test
jl
sub
es
push
stos
or
fwait
dec
pop
lret
sbb
xor
lock
imul
xor
mov
popa
mov
push
addl
add
andl
dec
mov
cmp
mov
nop
fnsave
enter
xor
jmp
fdivs
sarb
popl
insl
aaa
pop
les
ret
test
xor
fs
pop
add
test
push
jnp
jo
and
sub
lahf
aas
test
dec
dec
int
pop
inc
xor
mov
cwtl
popf
imul
add
mov
inc
sahf
dec
and
and
out
add
sub
and
clc
push
insb
push
lods
jp
clc
inc
ds
js
in
push
fwait
mov
fsub
lock
cmc
sbb
or
cli
movsl
adc
and
dec
jl
loop
cld
lcall
in
xchg
sbb
jmp
jle
imul
mov
push
cmp
mov
mov
stos
or
jg
lea
cmp
xchg
sub
cmpsb
mov
pop
imul
mov
jecxz
push
mov
cmpsb
jns
jb
dec
pop
mov
nop
push
sub
mov
mov
or
jo
or
add
inc
inc
jmp
int
popa
subl
stos
sbb
adc
sub
or
push
sbbb
xchg
shr
enter
xchg
daa
adc
outsl
push
push
mov
push
repnz
icebp
sahf
inc
clc
sub
or
dec
lret
lea
xchg
inc
adc
in
ret
rcrl
dec
inc
push
mov
fcoms
repnz
call
andb
sub
outsb
pop
pop
stos
add
dec
cmc
dec
ljmp
repnz
test
jbe
cmp
stc
imul
js
insb
jle
adc
dec
and
into
mov
pushfw
aaa
or
mov
imul
sahf
adc
shl
sbbl
cmp
lahf
mov
cmp
out
or
and
daa
mov
pop
out
xchg
pop
xchg
adc
or
jo
mov
sub
sbb
adc
push
push
aas
jge
popf
out
fsubl
dec
cmp
inc
xchg
sbb
or
lock
scas
insl
jg
repz
les
into
push
ret
das
mov
dec
push
mov
mov
daa
loopne
add
jnp
ljmp
push
sti
fldt
iret
xchg
dec
jg
lock
ret
mov
push
and
test
dec
out
or
inc
std
adc
fwait
jb
stos
cld
ja
push
jg
jnp
push
stc
enter
sbb
test
test
fs
clc
mov
subl
test
in
push
cmp
rcrl
popa
scas
mov
outsl
sub
into
push
or
pop
imul
lods
ljmp
call
inc
mov
pop
aam
mov
out
dec
mov
add
push
jb
jge
cmp
push
add
sti
pop
sub
jle
sub
test
pop
inc
inc
xor
mov
lods
movsl
test
push
int3
dec
lahf
cmp
ss
sub
push
fbstp
jge
test
mov
pop
or
fidivl
ficoms
mov
dec
les
mov
inc
pop
insb
sub
sub
cmpsl
xchg
xlat
dec
imul
xor
ss
out
aam
cli
mov
or
insb
push
sbb
or
jne
sub
rcll
xchg
insl
dec
loop
testl
dec
sarb
packuswb
and
xchg
into
jnp
push
imul
or
or
ret
sarb
mov
pop
neg
pusha
jecxz
mov
dec
push
mov
mov
imul
cmp
xlat
push
cmp
sub
push
lcall
adc
insl
scas
dec
mov
daa
in
cmp
pop
jp
mov
int3
mov
in
out
mov
ret
cmp
pushf
sub
loopne
movsl
sbb
ja
xor
inc
mov
lock
or
cmp
fisubl
add
lret
aaa
arpl
ss
mov
adc
in
xchg
dec
shll
dec
in
push
addr16
imul
into
mov
fnsave
enter
mov
in
insl
push
cltd
pop
jbe
jl
mov
iret
xchg
push
inc
mul
shlb
and
fstl
popa
dec
and
cmc
bound
pop
cltd
cltd
and
lods
pop
sub
jge
dec
pop
ret
outsb
sub
fstps
adcl
mov
pop
hlt
fiadds
movsb
dec
cmp
and
sbb
shr
sbb
test
aam
xchg
xchg
ret
xor
fisttpl
test
outsl
shlb
mov
and
ret
add
mov
cmp
ja
mov
cmpsl
cmp
cmp
dec
pop
lcall
mov
lods
pop
das
and
fstl
push
push
push
xor
xchg
sub
in
sbbl
pop
mov
jmp
sbb
or
leave
aas
aaa
popa
sub
loope
adc
lds
pop
fbstp
or
cmpsb
pop
push
jl
fbstp
push
xchg
inc
or
jae
leave
jae
mov
repz
mov
xor
shrl
stc
pop
pop
lret
xchg
lahf
pusha
push
mov
rcll
dec
mov
jns
sub
leave
movsb
xchg
sub
xlat
stos
push
jmp
or
ret
test
and
call
sti
daa
xchg
sbb
sub
paddusw
leave
push
xor
lds
xchg
rcll
cmovb
mov
movsl
nop
adc
js
lahf
sub
cltd
outsl
sahf
lret
dec
inc
xlat
mov
jmp
or
sbb
jnp
pop
lods
pop
jne
push
mov
xor
std
test
mov
leave
aas
fimull
cmp
pop
fwait
dec
and
stos
into
gs
divb
stos
in
adc
fsubs
jb
dec
addl
repnz
adc
dec
lret
cld
outsl
stos
addb
insl
fmull
lea
dec
jne
mov
push
sbb
lahf
xlat
add
pop
rolb
xor
pop
mov
ror
cld
lods
rcrb
arpl
push
inc
aas
xor
mov
mov
xor
xor
aad
lds
ficoml
mov
mov
sub
adc
maskmovq
testl
xlat
rcll
jae
add
jl
push
lcall
jns
mov
sub
adc
icebp
add
jl
test
divl
or
mov
xchg
out
pop
inc
xchg
cmp
mov
lcall
jg
add
sub
dec
inc
test
cwtl
sub
and
dec
loopne
or
push
sbb
mov
xor
popl
and
mov
ss
sub
aad
out
dec
mov
mov
lgs
rclb
pop
lods
sub
mov
jns
les
pop
xor
loopne
mov
lock
ds
add
or
pop
insb
pop
outsb
dec
fistpll
pop
pushf
inc
cmp
dec
pop
pushf
in
mov
fidivl
xor
mov
and
xor
adc
test
loopne
mov
xchg
cs
pusha
addb
rol
push
pop
in
jge
pop
ret
ret
into
jbe
outsb
in
dec
push
arpl
mov
mov
lret
mov
mov
cmpsb
push
popf
mov
insb
or
push
sub
sbb
out
repz
imul
or
cmp
jnp
inc
pop
dec
jmp
into
mov
sbb
mov
out
pop
fcmove
ret
in
stos
pop
pusha
testl
sub
stos
push
and
xor
js
pusha
stos
bound
arpl
mulb
adc
inc
push
sbb
jbe
mov
pop
stos
int
jae
out
stc
inc
lods
aam
fisttps
adc
repz
fwait
jb
out
arpl
adc
mov
stc
js
pop
jno
mov
fnsave
sub
adc
lret
int3
pop
scas
std
pusha
popa
andl
dec
and
cs
cld
xchg
orb
aas
sub
psrlq
mov
mov
inc
bound
inc
popf
adc
aaa
sbbl
mov
lea
into
push
gs
lcall
sbb
mov
arpl
mov
inc
test
imull
out
dec
inc
test
lods
mov
or
rcr
ljmp
sub
jle
add
fists
loop
push
inc
mov
push
fstpt
aas
inc
hlt
test
std
push
mov
dec
negb
testb
inc
and
loop
ror
mov
pop
out
xor
es
lea
xchg
pusha
addl
xor
xchg
pop
sub
xor
cld
aam
cs
mov
mov
fst
sub
out
inc
cltd
mov
mov
out
filds
mov
flds
adc
sbb
adc
sbb
mov
jne
rclb
push
pop
cld
adc
sbb
jle
mov
push
mov
aas
and
int3
test
stos
cmp
jmp
pop
test
mov
clc
shrl
ret
or
cmc
mov
fmull
and
xlat
mov
imul
pop
mov
push
mov
cwtl
or
dec
push
ffree
xchg
mov
xor
imul
add
xchg
or
adc
dec
or
scas
xchg
xchg
jb
xor
enter
sub
cmpl
leave
dec
jmp
or
in
sahf
adc
adc
shl
jns
xchg
das
movb
sbb
dec
out
pop
mov
sbb
adc
adc
sbb
dec
enter
sbb
lret
jge
mov
adc
aam
fisttpll
inc
push
xchg
cmc
std
divb
nop
insl
jno
scas
add
mov
int3
pop
and
stos
aad
rolb
inc
pusha
xor
std
aaa
mov
aad
out
shl
repnz
cmpsb
xchg
and
sbbb
jmp
dec
cmpsb
push
lock
xchg
xchg
push
sti
xchg
adc
sbb
adc
movsl
adc
mov
push
fstpl
xor
jnp
inc
inc
adc
rorb
push
in
scas
sar
xor
jge
pop
dec
xor
xlat
add
add
inc
push
lds
sub
add
js
and
sub
in
test
fildll
mov
je
dec
cmpl
pop
xor
and
loop
stc
adc
dec
cmp
mov
pop
lcall
jmp
addl
mov
and
lahf
aad
adc
pop
ds
lods
xchg
cmp
test
sbb
stos
mov
fistpll
and
cmpsl
ds
adc
cltd
inc
bound
subb
sbb
cmpsb
push
test
or
mov
jb
jno
je
jg
mov
dec
pop
and
ret
rcl
aaa
lds
mov
sbb
enter
addr16
sub
push
mov
jae
addr16
jmp
or
stc
stc
cld
fwait
cmpsl
and
ja
xor
loopne
loop
cwtl
add
in
out
xchg
push
mov
mov
inc
pop
xchg
xchg
testb
dec
mov
int
push
xchg
rcl
mov
jecxz
inc
dec
push
cmp
cmp
inc
into
xor
adc
jmp
sub
mov
mov
and
fldenv
lods
orb
pop
outsb
push
cmp
mov
jl
dec
mov
jnp
xor
mov
xchg
sub
enter
std
stc
or
js
cmp
subb
loopne
xchg
sub
push
mov
mov
out
call
out
into
jns
js
sub
iret
addr16
stos
inc
pop
popf
xchg
xchg
into
sahf
cmp
psrld
mov
sub
push
adc
jmp
xor
pop
mov
push
xor
or
dec
aas
ret
jge
dec
out
push
shrl
dec
sbb
rorl
cs
mov
lret
cwtl
cmp
int
test
repz
lahf
cs
std
enter
mov
cmp
fwait
hlt
mov
xorl
movsb
and
addr16
sarl
xchg
cmpsl
sbb
fdivrs
add
psraw
mov
ffreep
dec
push
jbe
sbb
notl
sbb
pop
or
push
sbb
inc
push
push
mov
fiadds
cmpxchg
ljmp
pushf
in
dec
ljmp
aas
sbb
push
mov
mov
loop
mov
jbe
jnp
test
dec
in
out
push
adc
mov
or
jno
jbe
jge
ret
inc
scas
jno
sbb
jge
mov
or
lock
ss
sbbb
or
mov
jmp
mov
sbb
scas
xor
dec
dec
xor
jmp
fistps
addr16
in
mov
and
pop
movsb
aam
push
popf
and
movsl
dec
lret
fidivl
loopne
sub
cmc
mov
hlt
test
cs
cmp
inc
clc
fsub
add
mov
test
adc
arpl
loop
cli
and
xchg
cltd
inc
xchg
and
mov
notl
add
lret
pop
outsb
shlb
xlat
pop
adc
sbb
xchg
std
sbb
xchg
pushf
add
or
enter
lock
inc
push
xlat
js
pop
pushf
les
test
jmp
test
iret
or
pushf
sub
jmp
popa
xchg
cld
cld
inc
sub
lods
mov
xor
fmulp
pop
loopne
lcall
cmpsb
mov
call
sbb
loopne
push
in
popa
pop
out
dec
inc
icebp
fwait
dec
in
add
aam
fldenv
inc
jmp
insl
pop
test
in
cmp
daa
add
mov
lds
or
sbb
mov
and
fldenv
int
inc
iret
loop
sub
fcomi
push
mov
xchg
sbb
push
pop
stos
jle
cmp
dec
lahf
xor
pop
inc
or
sti
mov
pop
cmp
jl
fistpll
dec
sbb
jp
fisttpll
imul
adc
jecxz
dec
dec
cmp
push
pop
imul
sub
shlb
hlt
jecxz
test
and
ds
mov
add
sub
idivl
dec
dec
add
push
pushf
sub
fistpl
shll
shll
mov
cmc
mov
and
sub
mov
and
das
cmp
sti
pop
add
rolb
sti
mov
mov
addl
in
out
push
icebp
ja
mov
into
jae
sbb
ret
out
call
daa
fdivrl
fsubrs
jl
int
imul
or
jbe
fwait
fwait
iret
adc
lahf
or
cld
pusha
daa
xor
subb
bnd
adc
or
and
mov
nop
js
adc
hlt
imul
pusha
adc
rcrl
jb
and
stos
lret
mov
push
push
pop
pop
insl
out
add
cmp
js
mov
push
adc
stc
in
mov
mov
push
stos
jp
xchg
nop
add
dec
or
stos
sub
mov
push
scas
stos
lock
xchg
shlb
sarb
add
inc
lret
sub
mov
lret
rolb
mov
mov
xchg
icebp
inc
push
jae
aad
jnp
pop
std
lcall
in
push
jns
rcr
cltd
shrb
clc
cs
les
mov
add
daa
mov
fisubs
mov
fldt
loope
fdivp
out
daa
inc
fwait
mov
jae
push
adc
pushf
push
xchg
cmpsb
mov
lcall
lahf
testl
sbb
in
dec
adcb
push
outsl
notl
insb
jb
lcall
mov
rorl
and
fwait
mov
xchg
sbb
cmp
xchg
dec
insb
in
dec
push
xor
and
add
xor
pop
in
jl
pop
stos
mov
lcall
cmc
popf
aas
mov
mov
imul
adc
stc
in
mov
inc
inc
cmp
jno
lcall
shl
sub
cmp
cmp
mov
pop
mov
jae
add
xchg
addr16
pop
sub
test
scas
jle
pop
sahf
sbb
mov
popf
push
and
bound
test
jb
idivb
nop
xchg
mov
jmp
mov
into
ret
or
cld
lds
pusha
push
bound
sbb
sahf
pop
lods
mov
adc
cmp
loop
cmp
popf
outsl
leave
dec
inc
imul
lret
loopne
cs
out
lods
fcompl
aam
out
add
out
movsb
dec
mov
push
in
push
sbbl
or
lea
nop
mov
std
imul
ljmp
push
jae
jmp
ljmp
adc
push
imul
cmp
pop
add
xchg
sahf
cli
ss
jae
es
int
pop
sahf
stos
nop
bound
das
adc
pop
shr
sti
sub
ss
add
mov
lcall
inc
clc
cmp
movsl
mov
mov
mov
std
aam
scas
sub
add
pop
cmc
out
or
and
jge
cmp
jne
push
sarl
fdivrl
insb
xor
data16
mov
jnp
jae
test
mov
xchg
test
jb
pop
in
jg
popa
cmp
addr16
push
sbb
add
and
or
int3
inc
mov
jp
test
or
int3
insb
shrb
add
pusha
andb
arpl
ljmp
call
xor
xor
or
jo
mov
scas
xchg
addr16
fst
scas
push
jmp
mov
jecxz
imul
mov
push
push
adc
mov
ja
dec
lret
xlat
dec
lret
not
lahf
bound
pop
repz
int
or
dec
jecxz
outsb
test
dec
movsl
in
repnz
sbb
mov
mov
mov
cmp
shrb
sbb
and
clc
and
dec
mov
daa
in
jb
xchg
dec
xchg
mov
lahf
push
hlt
inc
mov
imul
lahf
pop
loop
pop
sbb
pop
xor
aaa
outsb
stos
inc
scas
xor
div
leave
mov
inc
movsl
jl
inc
pop
mov
int
fistps
mov
jbe
sub
scas
test
or
sbb
gs
mov
mov
push
pop
lods
popf
fstpl
stc
or
sti
lret
mov
dec
push
dec
cmp
lds
stos
xchg
outsl
aas
scas
adc
fldl
sub
push
loope
daa
xlat
std
cmp
or
mov
add
adc
push
mov
sub
daa
jbe
mov
stos
push
adc
jne
fdivl
xchg
xchg
cltd
inc
jmp
test
xlat
sbb
ss
jne
movsl
inc
dec
fistps
and
pop
mov
std
call
dec
push
mov
mov
or
stc
hlt
and
sbb
lret
sub
and
in
dec
pushf
popf
add
in
stos
mov
divl
add
inc
lock
and
mov
push
push
sub
xlat
sbbl
aaa
xor
daa
bound
mov
dec
arpl
mov
push
mov
aaa
dec
pop
cltd
loop
das
repnz
push
inc
mov
jmp
sub
outsl
jnp
cmc
and
mov
mov
ljmp
mov
xor
add
std
or
xchg
fs
and
xor
and
mov
pop
cli
sub
cmp
outsl
add
cmpsl
cmp
xor
lahf
xorl
sub
sahf
enter
cld
adc
sub
jbe
sub
push
inc
outsb
lds
mov
les
pop
inc
fsubl
jbe
mov
pop
fmul
int
inc
lret
fstps
test
test
sub
xchg
jns
mull
pop
cmc
pop
hlt
je
imulb
movsb
mov
gs
sbb
xchg
ret
add
mov
jecxz
pop
ret
mov
adc
jg
push
int
xor
inc
leave
bound
add
repnz
or
jae
lahf
repz
dec
fiadds
ret
dec
hlt
jecxz
fstl
push
icebp
insb
movsb
mov
rolb
sub
push
movsl
dec
add
dec
mov
out
bound
push
pushf
push
aad
in
mov
or
movsb
repnz
push
add
pop
push
mov
sub
fdivrs
mov
lahf
jp
loop
fsubrs
gs
jb
mov
adc
shrb
ret
jb
imul
call
repz
dec
push
dec
sub
mov
cmpsb
dec
pop
push
mov
xor
pop
ret
ds
adc
aaa
mov
adc
cmpl
lods
push
or
icebp
sub
aam
popl
shll
cmp
addr16
es
mov
mov
test
lret
and
fidivs
pop
push
stos
out
push
push
xchg
xchg
push
ret
mov
ret
or
cmp
outsl
push
lret
mov
test
dec
sbb
mov
sub
fsubr
ss
lods
push
xor
loop
pandn
add
push
sbb
adc
lods
shr
cwtl
inc
je
movsl
cmp
and
rcll
add
or
les
xor
pusha
stos
sbb
std
push
push
ss
cltd
pusha
add
test
arpl
sub
fs
sti
inc
jp
inc
push
xor
xor
inc
pushf
sub
std
fcmovnu
je
pop
int
rorb
lds
cmp
aas
mov
add
sub
xchg
cmp
xchg
jp
fsubrl
mov
imul
fistpl
outsl
jnp
add
lret
ss
mov
in
dec
pop
and
insb
mov
enter
xor
and
inc
ficoms
adc
push
cmp
xor
inc
ret
and
popf
jmp
addr16
xor
mov
repnz
add
stos
or
inc
sbb
cmpsb
xchg
cmpsl
sahf
lds
dec
outsb
push
mov
jnp
test
pop
sub
rcr
sbb
stos
mov
dec
push
sub
jae
pop
pop
bnd
push
cmc
xchg
sub
xchg
mov
jg
mov
addr16
dec
hlt
rclb
stos
inc
out
mov
rolb
pminsw
lcall
push
mov
inc
fs
daa
mov
pop
mov
dec
jmp
inc
adc
pop
jne
jae
push
jbe
jge
into
loopne
push
out
cmpsl
adc
xor
idivl
jbe
repnz
dec
mov
repnz
mov
xor
ret
repz
das
loopne
popf
push
inc
fildl
sub
pop
pop
ljmp
cmpsl
add
add
sbbl
mov
mov
test
pusha
xchg
clc
push
stos
cmpl
rcrl
sub
xlat
jmp
push
dec
push
push
in
stc
movsl
jae
ret
fldpi
inc
andb
scas
xchg
sub
and
xchg
push
xchg
mov
aaa
mov
mov
cld
adc
lock
xor
ss
or
mov
in
pop
mov
jae
cmp
lret
pushf
xor
dec
adc
mov
stos
cmpb
int3
gs
jo
mov
cmpsl
xchg
dec
dec
test
inc
loope,pt
sahf
subl
push
and
dec
push
outsl
cmp
lcall
push
inc
fdiv
pop
fidivrs
loopne
push
icebp
xor
imul
sub
stos
arpl
das
fwait
rol
lds
testb
jne
fbld
cld
jb
stos
mov
push
inc
inc
dec
enter
iret
mov
in
leave
frstor
xor
cld
pop
outsl
cli
jno
pop
inc
mov
push
pop
xchg
adc
scas
mov
arpl
sbb
mov
pop
das
lods
mov
jb
sbbl
push
sbb
jmp
cmp
sub
xchg
loope
mov
movsl
inc
pop
inc
jnp
gs
adc
xor
pop
lock
push
xchg
icebp
add
sub
adc
xor
loopne,pt
bound
int3
mov
mov
rol
adc
sbb
sbb
mov
outsl
dec
rol
scas
ds
shrb
std
pushf
insb
shlb
std
or
adc
insl
push
and
xchg
jo
sbbb
cwtl
push
inc
out
add
pop
cmp
testb
dec
lea
xor
sub
xchg
add
xchg
mov
dec
popf
sub
dec
push
dec
pop
in
pushf
das
mov
xor
cmp
push
call
fists
jo
fists
mov
add
mov
mov
ljmp
sbb
jecxz
mov
mov
mov
push
out
loop
xor
mov
mov
mov
insb
inc
repnz
push
or
or
adc
push
mov
cmpsl
call
mov
popa
loope
xchg
or
and
add
aad
ret
pop
xor
insb
or
stos
ljmp
push
inc
pop
mov
rolb
clc
pop
iret
add
je
rclb
xchg
int3
mov
dec
dec
shll
adc
dec
cmpsl
cmp
imul
pop
in
pop
sbb
cmp
test
jmp
incl
movl
js
lock
xchg
pusha
xor
xchg
sub
movsb
les
mov
sub
dec
mov
int3
frstor
insl
es
jmp
ss
aaa
cmp
pop
mov
mov
movsl
lds
adc
int3
cs
aas
or
pop
aam
enter
aam
mov
fadds
out
and
aad
sbb
pop
dec
dec
in
addl
xchg
mov
mov
xor
mov
add
add
sub
ficompl
mov
sti
mov
xlat
ret
enter
dec
sbb
nop
inc
hlt
mov
in
outsl
sub
or
mov
in
sub
add
mov
pop
or
adc
loop
xchg
pop
out
cmp
clc
icebp
or
cmpsb
stos
inc
fadds
sti
test
out
sub
shll
aam
push
jns
dec
fiadds
xor
push
roll
popa
aaa
pop
add
popa
icebp
xor
insb
add
mov
inc
cmp
fstpt
pop
lret
pop
shrl
insl
push
pop
and
mov
mov
adc
fsubrp
mov
or
fdivs
sti
adc
fstps
jno
scas
adc
mov
adc
xor
out
outsb
or
jg
jecxz
ljmp
out
push
sahf
mov
xor
popa
push
pop
hlt
addl
movsl
xlat
sbb
cmpsb
dec
mov
inc
jecxz
cmp
mov
test
subl
pop
repnz
test
sub
lret
das
dec
outsb
stc
loope
mov
xor
faddl
data16
icebp
xchg
sti
mov
xchg
sub
outsb
mov
stc
push
cmp
inc
pusha
or
and
out
add
adc
idiv
loope
jmpw
test
mov
adc
cmp
out
xor
imul
imul
and
in
inc
push
push
inc
jp
sarb
shrl
pop
inc
mov
lahf
jne
jb
insb
es
icebp
mov
test
xchg
mov
pop
fnstcw
jle
es
sub
data16
jecxz
leave
shl
xchg
imul
test
add
mov
or
popf
add
jo
aaa
adc
or
ljmp
and
mov
repnz
lock
data16
mov
pop
aaa
inc
fs
ja
loop
scas
add
mov
bound
lret
stos
subb
and
leave
or
test
loop
out
fsubrp
jecxz
inc
pop
push
fldcw
xchg
cmpsl
xor
out
shlb
xor
insl
fistpll
shrb
jnp
jmp
adc
push
sahf
in
popa
lret
es
jge
push
sbb
les
mov
xchg
sbb
mov
mov
jg
rorb
cwtl
jnp
cltd
mull
testb
fadd
cmp
cmc
mov
in
ss
loope
leave
ret
ds
sub
push
sbb
push
insl
mulb
jnp
cmp
movlps
jmp
or
mov
or
shll
cmpsb
daa
outsl
fdivr
push
cmc
push
movb
jp
leave
scas
push
iret
xor
ljmp
or
inc
xor
out
push
call
jg
outsl
xor
mov
mov
imul
out
pushf
xor
test
mov
shrb
xchg
adc
fs
ss
lcall
sahf
call
outsb
xor
jge
fldcw
lahf
mov
rorl
sub
add
push
pushf
inc
scas
inc
jne
push
sahf
mov
into
gs
jp
or
lock
pop
out
mov
call
dec
push
sbb
xchg
mov
std
sub
push
je
test
cli
ret
hlt
sbb
mov
adcb
pop
rorb
call
cmp
dec
mov
push
fiadds
loope
jecxz
gs
into
jp
add
mov
es
pop
call
push
mov
imul
outsb
xor
ljmp
mov
cld
mov
je
pop
jns
push
idivb
jecxz
rclb
mov
iret
js
or
in
imul
pop
je
sbb
pop
dec
add
in
rclb
mov
insl
push
mov
in
fdivs
lds
or
jge,pn
in
fwait
xor
fwait
sub
aaa
into
neg
xor
dec
out
push
in
and
fdivs
mov
repnz
test
inc
inc
fsub
sub
xchg
add
adc
mov
cli
test
out
std
adc
inc
insl
jns
lret
adc
nop
sub
scas
inc
mov
fcmovne
lret
dec
pop
sub
jns
adc
into
cmpsl
mov
inc
adc
shl
and
mov
scas
ret
aas
stos
in
mov
fildl
or
mov
negb
sbb
lcall
icebp
jb
ja
repnz
xchg
add
jb
dec
mov
mov
pop
iret
xlat
insl
jbe
pushf
test
scas
jne
sahf
push
sub
nop
mov
mov
push
inc
pop
add
out
lahf
shlb
sub
or
mov
aam
in
repnz
jmp
in
sbb
push
popa
inc
outsb
adc
outsl
imul
jmp
into
xlat
inc
gs
cld
sti
lods
cwtl
inc
push
dec
pop
loope
sub
cmpsl
shrl
or
test
inc
xor
adc
mov
orb
test
sahf
repnz
rcl
lcall
int
and
push
or
pop
cmp
xchg
inc
stc
jns
fmull
enter
addr16
sbb
jne
fstpl
shlb
fstpl
pop
adc
pop
lods
ja
loope
inc
out
pop
cwtl
pop
repz
imul
lea
pop
mov
dec
fs
sub
dec
lds
repnz
xchg
xor
loopne
inc
mov
mov
mov
or
inc
xlat
mov
inc
pop
cmc
test
dec
xchg
jl
or
mov
or
push
push
mov
sbb
test
shl
xchg
dec
adc
pop
test
dec
icebp
mov
mov
gs
inc
insl
test
mov
inc
xchg
add
repz
dec
test
stc
xor
movsl
aas
rol
push
cmp
aaa
dec
jle
ljmp
test
xor
dec
sub
shr
cmc
dec
aad
clc
adc
int3
fisttpll
stos
sub
adc
pop
out
pushf
repz
jnp
mov
imul
and
mov
push
popf
into
push
jl
adc
and
and
inc
in
pop
clc
cmpsb
push
push
jne
cmp
fwait
mov
mov
inc
mov
std
repnz
pop
mov
add
fcomps
cld
push
jle
cmp
dec
rolb
jae
adc
dec
cltd
test
gs
push
xor
data16
enter
iret
inc
dec
popf
add
std
or
mov
jae
insb
movsb
xchg
or
xor
or
int3
scas
lahf
pop
repz
pop
cmp
idiv
inc
push
scas
or
xor
and
leave
sti
aas
add
repz
int
or
call
mov
add
mov
xchg
cli
xchg
dec
adc
inc
or
dec
fimull
fwait
pop
arpl
pop
add
pop
mov
pop
nop
sbb
out
hlt
or
fidivrl
aaa
jae
mov
pop
call
cmpsl
push
iret
and
inc
xchg
fs
mov
mov
mov
sbbl
fisubl
or
or
movsl
lret
jl
and
negl
push
push
dec
insb
outsl
push
sahf
jge
test
jg
mov
cli
adc
cmc
sub
hlt
and
imul
mov
clc
mov
test
mov
enter
cltd
test
fsubrl
lret
data16
fs
fidivrs
jecxz
cmpsl
out
sub
stos
jbe
mov
jmp
fidivrs
notl
out
and
leave
movswl
adc
lahf
imul
xor
daa
mov
mov
mov
inc
ret
aaa
icebp
sbb
imul
shrb
mov
adcb
sbb
pop
push
test
leave
dec
dec
push
mov
xchg
loope
adc
sub
pop
data16
xchg
mov
pop
lock
stos
mov
adc
lret
jg
dec
push
cwtl
dec
arpl
pop
mov
popa
lea
cld
sub
adc
mov
test
pop
enter
outsb
data16
ds
or
mov
psrad
repz
repnz
cwtl
pop
or
adc
add
dec
add
pop
out
rcrl
mov
lret
mov
and
test
push
les
aam
adc
or
jle
add
cmp
xchg
jl
inc
bound
xlat
enter
inc
push
inc
mov
lds
cmp
pushf
fs
sbb
add
or
add
fdivrs
push
pop
mov
jbe
subl
xchg
inc
add
xor
add
sub
dec
cmp
stc
xchg
push
stos
pop
add
jne
repz
call
or
fimull
loope
stos
jo
sbb
jmp
movsb
cs
and
pop
pushl
push
dec
fsts
out
sub
mov
mov
shld
into
inc
sub
inc
shrl
add
push
cmp
and
int
les
cmc
or
push
jno
loopne
mov
jp
fdivrp
or
mov
daa
pop
insb
sub
lock
add
jl
add
cmp
fstpl
adc
aaa
push
xor
aas
mov
enter
cld
sbb
test
lret
xchg
mov
mov
nop
daa
xor
push
loop
xlat
pop
je
daa
dec
mov
sahf
inc
push
mov
loopne
insl
pop
xor
inc
pop
iret
push
movsl
mov
mov
mov
cmp
sbb
xchg
pop
out
icebp
fcomip
sub
xor
inc
push
inc
fnstenv
inc
icebp
sub
ja
ds
popa
add
pop
repz
mov
lret
mov
lods
shrl
cmp
push
je
leave
lds
movsl
shrb
sub
lods
mov
je
mov
add
jns
movl
xchg
sbb
mov
sub
adc
ss
test
cmovne
mov
vgatherdps
ljmp
daa
outsl
daa
pop
std
ficomps
xor
and
sub
xor
test
adc
ds
sbb
enter
sub
dec
jecxz
shll
mov
lock
or
sbb
dec
pop
pop
mov
add
fwait
xchg
jmp
ljmp
sbb
jecxz
ret
jle
and
ficoml
repz
test
test
sub
pop
lods
inc
inc
dec
dec
int
clc
rep
adc
fistl
inc
pop
inc
ljmp
and
test
pushf
fnstenv
xchg
cmp
adc
outsl
addr16
mov
or
jae
mov
push
popa
cmpb
je
lods
xchg
pop
mov
pop
and
add
fsubrl
push
sarl
frstor
mov
sahf
mov
cmp
scas
insl
mov
ss
sbb
sbb
inc
pop
aas
mov
aas
sub
test
or
inc
lods
adc
push
mov
fnstenv
aad
jbe
outsb
cs
cltd
jae
enter
adc
sti
push
dec
cvttps2pi
sub
mov
stc
cltd
das
mov
mov
cmpsl
ds
jb
cmp
scas
dec
rolb
mov
sub
aaa
test
fadds
sbb
arpl
lret
pop
xor
cs
mov
push
sub
push
outsl
fiadds
ljmp
inc
fisubrl
nop
loopne
xorl
test
mov
add
dec
dec
pop
addb
fldln2
cwtl
test
inc
daa
cmp
add
mov
aam
daa
xsha256
cmpsb
adc
jl
or
jbe
add
sub
in
push
mov
or
dec
or
fistps
loopne
mov
push
push
insl
testb
mov
in
mov
dec
in
mov
mov
fstps
jb
mov
ss
repnz
lret
and
fistl
jns
data16
cmp
lret
lahf
and
fisubs
imul
hlt
les
dec
push
popa
clc
push
dec
push
test
dec
add
add
out
fsts
cmpsb
xchg
jp
in
rorl
lahf
mov
and
push
mov
jbe
stc
sub
pop
jmp
sbb
or
imul
in
dec
stos
cltd
and
or
xor
sbbl
push
jle
ja
rolb
lods
add
sar
cmp
imul
lds
mov
sarl
fdivl
lahf
stos
xor
ja
jmp
pushf
loopne
lcall
pop
inc
inc
pop
add
dec
arpl
sub
and
dec
push
out
shrl
pusha
pop
jns
les
mov
sub
pop
std
xchg
mov
add
js
jge
pop
sub
scas
add
loopne
lcall
and
pop
fmull
cmpsb
arpl
nop
stos
mov
sub
lods
mov
dec
dec
adc
jne
jo
dec
mov
sub
ret
fnsave
fistl
lea
or
es
adc
mov
data16
jno
outsb
add
cmp
gs
inc
fs
xchg
mov
inc
loop
pop
rorl
std
adc
subl
adc
push
mov
cli
xchg
adc
cmp
dec
jg
lods
test
push
jl
lods
and
push
xor
xchg
cmp
ret
jnp
aam
out
mov
xor
push
je
enter
fs
int
sahf
push
ds
lahf
push
test
clc
jae
das
aad
pop
push
fucomp
outsb
xchg
lock
imul
movsl
adc
divl
add
shrl
aaa
dec
ds
mov
add
mov
adc
hlt
dec
rcrl
shrb
xbegin
fstps
push
xchg
jmp
aas
rclb
sahf
data16
scas
fstl
lea
or
aam
call
out
es
stos
or
jle
addr16
insl
stc
cmpsb
fs
dec
lret
sub
cmp
xchg
mov
jecxz
mov
push
add
in
fnstenv
add
xchg
ljmp
lods
push
lret
mov
jge
mov
loopne
out
cmp
shlb
out
in
adc
jg
inc
jae
lods
inc
dec
pop
shlb
iret
jo
xchg
mov
pop
and
or
xchg
push
and
out
push
jno
scas
xchg
xchg
adc
lahf
icebp
stos
mov
lret
insb
fs
lods
sbb
shlb
pop
pop
jo
pop
mov
jbe
push
fbld
aas
cmpsb
or
mov
cmp
int3
jnp
incb
out
subb
cmp
lock
bound
mov
xor
ljmp
push
rcrl
add
xchg
jns
sub
mov
add
and
mov
rcrl
arpl
cmp
push
imulb
inc
mov
or
fistpll
adc
fnstenv
sub
shl
sbbb
cmp
movsl
in
movsl
add
cmp
stos
pop
or
inc
inc
mov
mov
pop
pusha
stos
pusha
add
nop
pop
push
cmpsl
jp
jnp
jmp
je
mov
jl
xrelease
js
aam
mov
leave
pushf
sbb
sbb
addr16
rcrl
cmp
jb
push
mov
xchg
xchg
and
or
sbb
pushf
scas
cmpsl
cmp
jno
pusha
int3
cwtl
dec
ja
outsl
add
dec
movsl
leave
sbb
fwait
inc
pop
and
jp
hlt
dec
and
mov
dec
mov
fwait
test
dec
out
jb
inc
or
inc
adc
add
pop
xchg
ds
andb
aad
push
pop
sub
movsl
js
ffreep
nop
jmp
jecxz
mov
pop
out
push
lea
xor
inc
push
loop
cli
ja
insb
mov
add
ja
les
adc
cmp
xchg
jae
dec
push
or
stos
inc
and
loope
cmpsl
cmp
add
fldenv
stos
mov
enter
testl
add
sub
mov
pop
and
pop
mov
movsl
out
mov
inc
fsubrs
sub
or
out
mov
aaa
or
iret
loop
and
xor
icebp
test
out
ljmp
movsb
xor
arpl
das
pop
sahf
pusha
add
and
dec
test
rorl
cmpsl
mov
ja
sub
out
sub
insl
call
scas
mov
mov
iret
jp
sbb
aaa
int
rcrl
sub
jno
dec
addr16
int3
fdivl
test
xor
xor
shlb
dec
dec
in
testb
mov
jne
hlt
loop
pop
cltd
in
jae
jo
flds
cltd
add
leave
adc
int3
aas
add
movsl
addr16
xchg
js
fadd
aam
test
daa
push
push
mov
mov
mov
push
or
imulb
mov
mov
std
ret
jb
xor
lahf
stos
sarb
ss
cli
inc
lea
aaa
insb
cli
dec
pop
xchg
jno
xadd
arpl
insl
pop
outsl
cmp
imul
and
mov
insb
mov
or
das
cmp
fistps
aad
out
cmp
enter
shl
or
mov
fldl2t
push
loope
nop
sbb
idivl
int
or
icebp
mov
jecxz
lods
mov
jg
idivl
or
xchg
stos
mov
xchg
mov
jno
movsb
jp
popa
fstp
pop
sub
lods
dec
xchg
in
test
stos
mov
xchg
push
or
insb
rorl
xchg
add
lock
lret
daa
sub
xor
pop
aam
aam
dec
fdivr
scas
mov
scas
pop
pop
jno
shrl
sub
pushf
mov
cltd
adc
enter
pusha
ljmp
out
nop
stc
xlat
or
add
rorb
jmp
ds
repnz
xor
outsb
mov
imul
mov
lcall
fnstcw
je
pop
fwait
push
outsl
sub
pop
nop
std
jo
imulb
into
adc
pushl
pop
cwtl
push
dec
sti
push
sbb
xor
adc
xor
iret
xorb
mov
subl
push
jle
shll
jg
shrl
outsl
cs
test
dec
fsubrs
push
add
add
arpl
dec
ss
lcall
cmpsb
out
pop
sbb
pop
mov
setp
ds
xor
movsb
cmp
mov
les
xchg
aam
mov
cmp
or
jns
test
push
add
clc
or
ljmp
add
cmp
test
mov
ret
mov
daa
xor
or
adc
jb
jmp
nop
and
or
scas
lods
daa
call
les
imul
test
push
add
sarl
cmp
in
add
xchg
mov
enter
jmp
or
add
cmc
inc
in
lcall
sbb
adc
inc
test
xchg
leave
fldl
inc
push
and
xor
sbb
and
xor
pop
mov
fistl
dec
aas
push
pop
mov
mov
pop
adc
mov
shrl
les
dec
in
jo
adc
mov
xchg
xor
inc
bound
xchg
test
jl
lea
jecxz
cmc
test
lret
leave
out
jae
dec
in
adc
cltd
into
fldcw
sti
inc
push
lods
into
sbb
bound
stos
push
jnp
mov
pusha
cmp
mov
ret
hlt
fistpll
push
or
jb
mov
sub
mov
xchg
mov
cli
sbb
sub
cmp
dec
call
mov
cwtl
pcmpeqd
inc
test
or
xor
dec
stos
mov
ficoml
stos
inc
ss
cwtl
xor
aam
mov
mov
neg
es
imul
inc
insb
jne
lret
sbb
ds
jmp
mov
jno
jno
mov
ret
mov
loop
or
testb
push
insl
jge
lahf
clc
xchg
xor
fwait
xor
ds
pop
mov
das
in
shl
jecxz
and
mov
cmp
rcr
sbbb
mov
es
out
addr16
mov
rcr
jo
jg
or
mov
xchg
pop
stos
jle
mov
popa
call
cmpl
jg
push
test
pushf
jo
inc
mov
inc
push
cltd
js
imull
push
push
mov
and
sub
push
pop
sti
mov
dec
gs
and
mov
lods
adc
fimuls
adc
pushf
arpl
cmp
xchg
adc
lea
in
mov
sub
inc
fwait
daa
xchg
mov
cli
mov
xor
dec
lcall
adc
cwtl
adc
jbe
in
mov
or
in
push
or
and
push
lods
xchg
ret
pop
das
ljmp
std
and
push
pop
sbb
data16
mov
mov
and
dec
in
fwait
pop
mov
int
inc
push
adc
and
inc
and
out
fs
imul
push
cmp
sbb
insl
mov
sbb
add
mov
jp
push
jmp
ret
pop
fs
mov
push
loope
jle
iret
mov
cltd
jno
dec
mov
cmpsb
mov
mov
push
mov
push
fisttpll
and
mov
jg
sbb
mov
lock
push
or
and
pop
adc
lahf
push
fnstcw
shl
scas
sahf
in
hlt
lods
lds
inc
decb
dec
in
imul
pop
mov
or
jg
pop
dec
mov
out
test
and
in
add
mov
pop
in
fdivrl
dec
andl
cmp
test
sub
sbb
mov
pop
xorb
or
pop
or
jo
xchg
in
dec
outsb
lds
cltd
cmp
aad
mov
dec
dec
push
mov
cli
push
push
orl
pop
xor
jb
das
push
daa
mov
roll
and
subl
cmp
sbb
fsts
in
aaa
insl
jge
push
pop
cmp
test
inc
jb
je
add
orb
lret
or
lcall
jnp
push
or
xchg
jle
or
cmp
push
adc
cwtl
sub
inc
int3
dec
into
mov
push
shll
mov
cmp
dec
in
add
mov
xchg
insl
dec
scas
popl
out
xchg
dec
mov
popf
push
mov
pop
mov
pop
lods
push
lea
adc
sbb
lea
mov
out
dec
jecxz
dec
and
push
push
push
push
outsl
mov
pushf
xor
sub
jmp
sahf
adc
mov
test
lret
je
adc
mov
negb
or
add
outsl
ret
jp
mov
into
sub
add
lret
enter
or
inc
iret
test
es
hlt
fdivs
pop
jge
sti
xchg
sub
mov
outsl
add
shld
cmpsb
out
push
sbb
pop
jno
bound
mov
sahf
jno
test
and
cwtl
arpl
mov
popa
add
jge
rorl
or
mov
pop
das
sub
inc
push
loopne
scas
test
sbb
cmpsb
fs
push
and
in
ss
adc
dec
fnsave
ficoml
dec
fists
mov
hlt
mov
mov
sbb
pop
hlt
addr16
aas
mov
dec
sbb
loope
rorl
int
les
xor
daa
fistpll
std
and
or
insl
mov
or
movsb
aam
rcl
insl
into
int
mov
rolb
icebp
mov
add
mov
push
push
hlt
adc
sbb
xlat
sbb
add
dec
hlt
jp
fisttpl
dec
js
jo
iret
cmp
popf
dec
pop
lret
inc
cltd
gs
cwtl
xchg
xchg
jne
push
lcall
or
push
lods
stos
cmp
jecxz
jae
jae
in
xchg
mov
fs
and
sti
orl
xor
in
pop
and
popa
jnp
push
pop
sbb
cmp
mov
xlat
push
cmpsb
inc
push
dec
sbb
jbe
ja
jl
gs
sahf
push
popf
or
sbb
push
fst
xchg
imul
mulb
sub
pcmpgtd
xlat
lcall
pop
daa
cmp
imul
mov
mov
imul
push
inc
cltd
inc
mov
sti
shll
stos
lds
fstpl
inc
push
popf
stc
shr
loope
dec
std
adc
in
jecxz
stos
dec
out
fcmovnbe
sub
loope
pushw
test
push
outsb
or
je
mov
test
xchg
in
and
lea
add
jmp
decb
push
push
jmp
mov
xor
pop
clc
or
cmpsb
dec
push
popa
hlt
adc
js
jmp
test
je
xchg
jp
test
bound
iret
mov
inc
pop
adc
inc
jb
pushl
sbb
mov
sub
or
add
cli
js
sub
js
lcall
push
cmp
cmpsb
xchg
mov
loopne
jo
push
cwtl
shll
dec
xor
mov
fnsave
andl
lcall
add
int
mov
mov
cmp
dec
sub
iret
sub
inc
scas
xor
mov
adc
cmp
sbb
insb
sahf
test
xchg
nop
outsb
mov
clc
jne
jno
mov
adc
movsl
mov
imul
xorl
ja
xchg
cli
sti
push
movsl
adc
add
push
insb
mov
mov
fldt
mov
imul
test
adc
or
mov
adc
add
icebp
mov
jmp
push
lret
xlat
pusha
adc
imul
sub
ret
stos
mov
push
lods
push
xchg
pop
or
hlt
test
mov
sub
mov
sbb
int
sub
sahf
andb
hlt
add
mov
adc
pop
sub
mov
inc
adc
xchg
iret
fisttpll
and
jb
test
jnp
into
cwtl
fstpl
negl
lret
sub
mov
mov
mov
jp
repz
sahf
inc
lcall
dec
imul
stos
lahf
push
dec
pop
adcl
scas
rcl
dec
add
push
mov
adc
inc
int
pop
cmp
push
stos
mov
ficoml
jg
fucom
mov
mov
mov
dec
iret
jle
leave
xor
xchg
test
xor
push
jmp
xchg
leave
popa
enter
adc
push
mov
jp
xor
xchg
ja
jns
and
sub
mov
cltd
call
add
ljmp
sub
fiadds
xchg
sbb
insb
test
dec
push
test
pop
cmp
fsubs
lock
jo
jae
negl
lods
mov
sti
inc
sbb
sbbb
int3
es
js
or
mov
sbb
mull
sub
mov
lds
icebp
dec
jmp
pop
jle
and
mov
test
mov
es
lds
mov
shrb
lahf
stos
dec
repnz
inc
and
ret
xor
push
icebp
push
cmp
int
mov
lea
inc
out
andl
out
ret
into
insb
adc
test
cwtl
fwait
lds
daa
push
shr
add
push
and
lods
jecxz
push
lods
test
mov
push
inc
sbb
adc
nop
cltd
mov
in
mov
fnstenv
mov
lds
mov
cmpsb
ficompl
sub
or
push
pusha
repnz
fildll
scas
sub
xlat
fldcw
mov
xchg
jle
xchg
data16
add
jl
cwtl
arpl
into
insb
sbb
xlat
dec
popa
add
lock
sbb
aam
sarl
cld
ds
mov
adc
aaa
push
out
mov
rorl
mov
xor
xor
daa
outsl
mov
sub
test
in
dec
mov
aad
pop
andb
sbb
mov
sahf
repz
subb
fimuls
addr16
pop
jb
std
lret
stos
dec
push
add
rdtsc
xor
mov
cmp
pushf
push
inc
pop
mov
jne
fistpll
dec
popa
insb
cmpsl
ja
stos
cmp
insl
std
or
jae
imul
or
and
repz
xchg
mov
mov
lret
dec
fsubr
les
push
dec
outsb
dec
push
pop
gs
cmp
xchg
fs
fidivrl
movsb
xlat
mov
sub
push
test
lret
xor
aas
or
roll
cmp
loopne
lahf
loope
fwait
jnp
xchg
in
inc
adc
ja
fidivrs
push
ret
push
shr
jb,pt
add
popa
lods
or
sbb
adc
js
and
outsb
int
pop
mov
cmp
push
push
add
out
sub
leave
cmpsb
inc
rcl
mov
stos
outsb
sub
dec
fistpll
mov
xlat
jns
outsb
rolb
das
pop
insl
add
ficoml
xlat
or
cmc
outsb
outsb
jo
lahf
and
push
out
jle
mov
ror
les
scas
scas
std
jo
in
and
enter
mov
lret
add
push
and
xor
jae
mov
mov
jae
cs
lods
inc
cmpsb
sbb
jne
cmp
sahf
divb
stos
inc
test
mov
out
cmp
stos
shll
sub
scas
fidivrl
stos
push
push
loopne
flds
mov
les
add
inc
xor
imul
test
mov
fs
insb
div
push
sub
push
je
sub
pop
aaa
push
mov
jae
mov
outsb
jle
add
les
movsb
cmp
ret
leave
mov
push
sahf
jl
lods
xor
test
jno
xor
xchg
cmp
stc
nop
adc
test
je
mov
inc
mov
aaa
inc
iret
out
and
lahf
xchg
add
push
jno
jge
cli
mov
sar
stc
inc
inc
fsubs
xchg
inc
mov
cmpsb
fucomp
out
push
hlt
xor
pop
inc
pop
jne
popa
dec
xor
push
pop
dec
dec
jge
mov
movzbl
push
das
add
loopne
mov
dec
xchg
fdiv
ja
jg
pop
mov
mov
push
clc
sub
push
xor
pshufw
cwtl
popf
sbb
std
loop
lea
xor
jecxz
add
cmc
cmp
outsb
leave
test
mov
fdivrl
push
cmp
add
push
mov
add
adc
xchg
aaa
inc
add
xchg
pop
out
or
pop
cs
push
cmp
rclb
cltd
stos
mov
ret
outsl
add
mov
pop
test
dec
loop
fadd
fistpl
sub
mov
dec
mov
imul
clc
and
inc
push
subl
mov
mov
popa
fiadds
and
ficompl
addr16
in
aaa
mov
add
aas
aaa
idivl
or
rcrl
repz
fnstcw
dec
xchg
lods
in
icebp
xchg
mov
mov
fldcw
inc
repnz
mov
mov
lds
push
sbb
jne
mov
fwait
sub
add
out
sbbb
aas
mov
xchg
sbb
mov
push
adc
mov
les
arpl
int
jecxz
cmc
inc
xchg
and
sbb
jp
aad
sbbl
pushl
stos
daa
inc
xchg
loopne
mov
push
lds
inc
pop
sbb
std
fldpi
dec
loope
cli
popa
add
jp
lods
scas
test
sbb
add
cmp
std
insb
add
mov
adc
sbb
repz
jecxz
iret
mov
pop
subl
xchg
cmpsl
push
out
and
xchg
mov
jle
test
stos
inc
fnsave
pop
in
mov
sub
std
loop
adc
jge
aaa
xor
push
mov
jp
das
push
out
outsl
and
push
roll
fimuls
sbbb
js
push
mov
jno
in
and
mov
inc
imul
ret
psubsb
loopne
ret
push
and
mov
stc
dec
in
dec
cmp
into
repz
jg
xchg
push
mov
jmp
xchg
movl
out
les
inc
out
mov
insl
sarb
imul
enter
mov
xchg
ret
cmpsl
push
xor
aam
rorb
loop
cmp
pop
repz
mov
rorl
cwtl
push
imul
xchg
push
mov
shll
shll
adc
dec
pop
pop
xchg
test
les
pop
pop
cltd
rcll
rorb
hlt
mov
push
test
cmpsl
jae
push
movsl
cmpsl
cmp
fmul
ljmp
adc
mov
or
xchg
add
push
sbb
pushf
push
lret
std
cmp
stos
pop
fsubs
testl
iret
lcall
cli
in
mov
lods
push
and
dec
push
mov
daa
adc
mov
insl
add
aaa
rcrb
mov
daa
or
sbb
or
mov
je
jo
mov
jns
cld
scas
xchg
pop
add
mov
push
jl
ret
fnstenv
mov
mov
mov
loopne
jb
fsubr
lds
addr16
test
dec
pushf
sub
push
sub
ljmp
sbb
xor
lds
lret
mov
scas
or
dec
cmp
mov
sahf
scas
jle
lret
jge
jno
out
pop
pop
and
repz
fwait
out
out
ja
push
sbb
gs
test
pop
loop
or
dec
pop
insb
push
push
xor
or
lods
cmp
popa
mov
fs
push
mov
jbe
ja
sbb
cwtl
inc
push
mov
out
xchg
mov
inc
adc
push
pop
loope
aad
aas
sbb
jo
lahf
pusha
jbe
cmc
cld
xchg
mov
push
inc
and
and
mov
mov
mov
ss
lahf
lcall
xchg
dec
ja
push
jp
mov
lcall
out
insb
test
dec
fimull
cs
and
js
das
add
leave
jecxz
cmp
sub
push
data16
cmc
pop
dec
data16
jb
jge
fdivrp
sub
std
sahf
jmp
pop
adc
sub
lret
fidivrs
lahf
push
js
jle
dec
dec
inc
add
xchg
jae
or
movsl
pop
add
mov
cld
pop
pop
cmp
pop
or
lods
dec
cmc
adc
out
cmp
sub
ja
cmp
sub
push
mov
xor
mov
insb
clc
aam
mov
xchg
mov
cs
cmp
repnz
pop
pop
xchg
push
mov
sbb
clc
push
daa
push
add
mov
stos
cmpsl
stos
ret
mov
adc
inc
inc
xor
lahf
mov
cltd
mov
shll
xchg
fsubl
xchg
iret
jecxz
jae
cmpl
dec
jb
mov
add
mov
pop
mov
in
decl
jmp
in
and
sbb
push
loop
insb
mov
out
jnp
or
pushf
ss
pop
jbe
and
iret
stos
bnd
dec
inc
jbe
mov
xor
insb
rolb
clc
stos
jecxz
loop
cld
add
shrl
dec
sbb
clc
testl
test
inc
out
repz
mov
mov
mov
sbb
lods
cmpsl
fildll
adc
dec
aaa
and
cmp
mov
cs
cmc
jp
pop
sub
dec
mov
rcl
push
sti
jg
ss
stos
daa
xor
and
dec
in
and
dec
xchg
push
or
fwait
loopne
inc
popa
jno
loopne
dec
mov
cmp
add
add
jne
shll
pop
jns
shlb
pop
in
inc
jle
out
xchg
xchg
lods
add
and
add
fucomi
popf
dec
mov
aam
sbb
adc
inc
out
adc
in
mov
leave
movsl
xor
cmp
adcl
imul
insl
mov
mov
lds
mov
xchg
loop
aaa
pop
nop
aad
mov
xchg
jle
inc
movsb
inc
and
aaa
xor
push
insl
xor
bound
popa
fimuls
mov
test
lahf
ret
xor
push
sbb
cmp
iret
pop
cmpsb
incb
push
fnstenv
shll
div
cltd
daa
leave
xchg
jle
mov
lcall
ss
into
xor
jno
inc
jmp
xchg
shrl
add
or
cmp
jg
xor
repz
sub
shlb
xchg
sub
ret
fists
clc
mov
aas
dec
mov
pusha
push
test
mov
mov
xor
shl
sub
mul
daa
sbb
or
or
inc
fmuls
ljmp
jns
jge
mov
fs
sbb
dec
stc
sbb
adc
pop
flds
cli
subb
pop
das
or
mov
jae
data16
sbb
pop
mov
popa
clc
jge
add
aam
and
pusha
stos
fisubl
or
push
inc
push
inc
pop
xlat
outsl
shrl
arpl
stos
xor
dec
outsb
mov
lret
xor
test
addr16
mov
jns
leave
int
sub
negb
iret
push
hlt
adc
std
and
arpl
cmp
mov
aad
stc
lcall
push
cmpsb
sbb
xchg
ss
das
inc
pcmpgtd
pusha
mov
sub
stos
and
cmc
fisttps
cmpsl
ret
std
pop
cmp
xor
mov
push
push
arpl
ljmp
push
jmp
lahf
inc
push
cmp
mov
inc
xor
es
lea
out
jb
jne
cmp
dec
mov
rcrb
xor
std
pushf
jg
test
loop
stos
mov
mulb
and
cmp
inc
cmp
imul
cmp
mov
inc
adc
cmp
loope,pt
mov
andb
stc
daa
ljmp
scas
jno
adcb
mov
or
mov
repz
test
mov
cs
test
repz
jge
orb
outsb
sub
and
add
or
cltd
push
nop
cwtl
out
lds
mov
jno
in
in
push
loop
mov
cmpsb
ds
pop
jo
push
test
push
push
fnstenv
ljmp
imul
hlt
jnp
xor
push
cld
fnstcw
push
int
and
jno
ret
sub
ret
pop
popa
int
mov
ret
call
ret
lods
pop
es
sub
jecxz
sub
push
or
push
nop
inc
sti
or
sbbb
or
popf
test
pop
lcall
imul
mov
lret
bound
loopnew
push
es
popf
testb
adc
fimuls
mov
sbb
movsw
pop
dec
mov
add
xor
fs
mov
iret
sar
xchg
aaa
into
pop
aaa
mov
shrb
jle
lcall
push
pop
imul
mov
push
mov
loop
std
xchg
pop
icebp
mov
inc
sbb
push
mov
sub
leave
pop
jecxz
fwait
cli
jb
jb
cmp
jg
sbb
testb
mov
pop
call
loope
aaa
es
xor
xchg
pusha
sbb
lcall
mov
mov
movsl
xchg
loope
repnz
out
xchg
dec
cs
mov
rol
inc
pop
and
bound
mov
jge
mov
aam
mov
shll
insb
add
movsb
and
rcl
push
das
imul
out
xlat
int3
pop
mov
cmc
pop
iret
sbb
cmp
dec
xor
jbe
xorl
xchg
std
aas
out
push
mov
cmpsb
fsubrs
adc
fstpt
into
iret
fcomp
inc
dec
imul
loopne
shr
je
inc
cmp
push
push
sbbb
stc
jle
imul
les
imul
inc
adc
xor
mov
cmp
mov
or
xor
loope
lds
add
inc
jmp
je
nop
add
out
repnz
cmp
filds
inc
stos
lds
cmp
push
pop
mov
mov
shl
pop
add
xor
sbb
int3
cmpsb
add
out
jb
jo
or
jle
mov
push
ljmp
ljmp
daa
mov
fisttpll
mov
in
aad
jne
fisttpll
inc
shrl
iret
shl
leave
adc
cmpsb
gs
and
in
out
cmpl
fists
mov
icebp
pop
adc
test
jne
call
sbb
insb
pop
mov
inc
and
add
xor
aas
stc
mov
mov
cmp
and
stos
push
sarb
imul
test
test
jbe
mov
cmp
aad
adc
jo
aad
or
mov
fidivrl
xchg
sbb
cli
popf
xor
imul
adc
xor
dec
cmpb
xchg
add
fldcw
dec
mov
jnp
inc
and
outsb
outsb
mov
shl
push
out
jle
decl
mov
jecxz
sbbl
gs
add
mov
or
call
sub
xor
sbb
cmp
sbb
scas
dec
leave
mov
fldcw
sub
sbb
xchg
mov
mov
cmpsl
jp
fsubl
push
xchg
test
pop
add
lcall
aas
cltd
in
iret
movsl
cmp
mov
lcall
dec
push
in
jno
xchg
cmc
mov
push
xchg
inc
and
out
push
lret
sete
push
fimuls
sbbb
out
hlt
lret
mov
inc
imul
pusha
in
cmp
xchg
xor
jbe
imul
subl
pop
sahf
xchg
push
outsl
xorb
out
adc
add
xor
rcrb
pop
inc
add
shlw
fstpl
cmp
popa
leave
dec
inc
jg
imul
in
cmp
ss
arpl
pop
ficomps
dec
std
dec
pusha
sub
sub
xorb
push
pusha
cmpsb
sbb
daa
xchg
cld
lcall
movsl
cmp
jecxz
mov
fimuls
icebp
push
xor
int
cld
adcb
or
pop
dec
push
mov
pop
fstpl
mov
cld
scas
cmpl
sub
stos
mov
push
push
dec
cld
mov
and
sti
clc
cmpl
dec
jecxz
popa
in
dec
out
imul
int
jecxz
je
xchg
enter
ret
mov
sbb
loop
hlt
inc
enter
and
jl
bound
xor
cmpsb
lods
jnp
fldt
dec
bound
les
mov
adc
rcrl
rol
xor
dec
loope
jge
jns
xchg
push
data16
add
dec
cmp
adc
add
jb
das
sub
xor
or
outsb
sti
call
mov
lock
dec
sub
mov
pop
lock
das
movb
sbb
scas
jge,pn
aas
stos
cmp
test
cld
cmpsb
fwait
jle
int
jno
test
fnstenv
lods
jl
push
mov
loop
mov
sbb
int3
mov
and
leave
push
negl
fldcw
cmc
cltd
push
in
test
xchg
pop
cmpl
pop
inc
insb
imull
xor
sbb
sbb
aaa
lcall
adc
add
in
push
jge
mov
arpl
lds
push
test
xchg
inc
push
aaa
cwtl
jns
cwtl
push
lods
push
push
mov
pop
mov
xor
in
fbstp
mov
int3
lcall
inc
xor
xchg
out
mov
fwait
rcrl
cli
xchg
cmp
les
jns
xchg
stc
std
xchg
sub
mov
pop
int
aad
inc
or
ss
addr16
mov
mov
test
dec
sub
mov
scas
lahf
xchg
mov
rclb
test
cmpsl
sbb
inc
sbb
dec
push
lret
mov
jno
iret
lock
nop
xor
pop
jmp
or
negb
addr16
sar
xchg
dec
int3
cltd
std
jp
stos
inc
enter
int3
jmp
mov
mov
push
in
xchg
dec
mov
and
push
fisubrs
mov
jns
test
and
mov
rorl
mov
mov
xchg
cmp
mov
test
dec
rorb
and
or
pop
push
xchg
aaa
es
xchg
rcll
adc
jno
lahf
mov
les
xchg
bound
movsb
cmp
push
dec
dec
mov
push
divb
mov
test
rclb
cmp
jp
pop
jo
cld
xchg
or
xor
push
aam
pusha
ja
xchg
rcrb
pop
mov
jae
lahf
imul
movsb
scas
fldenv
shll
ret
push
jg
lcall
cld
mov
popf
xor
cmp
outsb
outsl
movsb
jecxz
cmp
idiv
jmp
hlt
jns
es
into
test
in
data16
xchg
movl
icebp
adc
pop
test
jp
cwtl
outsl
rorl
repnz
jno
or
jno
inc
aaa
jmp
fiadds
adc
lret
movsb
push
mov
fldenv
inc
pusha
lret
mov
imul
inc
push
in
test
mov
fnsave
test
mov
popf
sub
into
fmull
pop
insb
std
je
das
or
lds
cmp
into
stos
cwtl
pushfw
push
push
or
test
jl
adc
pop
mov
or
stos
into
enter
mov
inc
fs
jnp
nop
cmc
mov
pop
xchg
mov
inc
push
subl
cmp
pop
mov
scas
jp
cmpb
popf
sbb
out
push
jge
nop
imull
std
and
xor
loope
xor
repz
int3
dec
jmp
and
sahf
clc
aas
inc
inc
fcomps
rcrb
loope
ret
jnp
out
loopne
cmp
add
jb
xchg
shrl
out
pop
dec
loop
push
outsb
adc
andps
pop
adc
fcoml
mov
rcr
divl
js
xlat
cmp
or
mov
das
fimuls
mov
daa
inc
mov
fbstp
add
xchg
pushl
aam
mov
fstpl
or
outsl
jnp
ja
mov
hlt
cmp
and
add
xor
lahf
sub
sti
test
aas
int
add
aad
lcall
ja
or
fs
int3
sbb
outsb
ret
fcmovnbe
mov
divb
movl
jmpw
dec
lahf
dec
lock
pop
dec
mov
ret
add
les
and
jl
shr
sarb
mov
out
leavew
rorb
lock
movsl
mov
ret
idivl
gs
jb
pop
in
in
sahf
push
loope
jecxz
or
push
lods
in
sub
addb
cs
jecxz
push
cld
sarl
fwait
lock
leave
stos
jmp
dec
jg
jb
daa
jbe
add
fsubl
push
movsl
sbb
aam
test
jno
inc
rorl
mov
stos
sub
jl
sti
jae
adc
xchg
pop
mov
mov
adc
es
out
inc
fwait
inc
dec
sahf
js
push
mov
mov
mov
push
sbb
cwtl
das
imul
xchg
loope
addr16
sbb
lock
mov
xchg
pushf
lret
je
pop
cmp
pop
int
adc
int3
ss
pushf
stos
jne
sub
inc
test
and
adc
sbb
xchg
mov
dec
fldenv
in
repz
pop
cltd
xor
lret
enter
lahf
loopne
dec
mov
and
sub
pop
aam
outsl
mov
xchg
add
xor
push
lods
push
cwtl
stos
js
gs
ffreep
and
pusha
repz
or
ljmp
xor
leave
call
or
ss
lock
cmpsb
sub
push
lea
outsl
pshufw
mov
movsl
pop
stc
mov
cwtl
test
stc
lret
adc
sbbl
mull
arpl
or
sub
scas
aaa
sub
stc
fdivrl
jmp
sub
outsl
xor
mov
mov
adc
fnstsw
and
imul
aam
mov
mov
push
in
dec
call
xchg
lods
ljmp
sahf
repz
in
incl
jecxz
jle
xchg
xchg
inc
movsl
pop
nop
dec
test
loope
and
enter
cmp
lods
mov
push
and
cld
push
pop
test
in
mov
in
dec
push
xchg
dec
cs
xor
jns
mov
mov
adc
stos
mov
imul
mov
ja
mov
sub
inc
adcb
mov
or
sbb
fsubr
ret
xor
in
nop
inc
sub
mov
scas
inc
movsb
push
iret
and
in
sbbl
das
dec
and
inc
lret
cmpsb
iret
loopne
mov
push
mov
stc
add
sub
mov
add
and
push
mov
fstp
push
pop
lcall
and
cmovnp
aad
sub
sbb
jl
sub
xor
cmp
xchg
and
jae
jnp
loop
cli
xchg
pop
fistpl
test
dec
cmpsl
clc
fbstp
fstps
scas
fidivrs
push
cmpsl
sbb
xor
inc
inc
in
sub
mov
sbb
ficoms
add
loopne
loopne
mov
sbb
xor
mov
sbb
outsl
decl
cmp
dec
xor
mov
fs
push
loopne
cmp
inc
lock
repnz
stos
arpl
pop
sbb
jle
mov
jmp
iret
jle
push
xor
push
sahf
mov
ret
fcoml
dec
dec
mov
test
xchg
and
sti
adc
out
repnz
mov
dec
out
sbbl
int3
xor
fstps
push
mov
leave
push
jmp
or
mov
int
jmp
stos
popa
pop
hlt
cmp
add
imul
or
in
push
lret
inc
xchg
jg
in
shll
cmp
jbe
jno
mov
call
xor
fidivrs
xlat
imul
jno
testb
push
daa
enter
and
movsl
imul
mov
sub
fstpl
xor
lahf
ds
push
cli
sbb
movsb
loopne
rclb
jnp
out
js
cwtl
mov
enter
test
pop
cmp
mov
dec
dec
rcrb
jecxz
subl
sbb
jb
arpl
inc
mov
jns
inc
dec
mov
loopne
push
pop
xor
int
loope
arpl
scas
fstp
push
aam
inc
movsl
dec
push
push
shll
test
cmp
cwtl
cmc
dec
lock
push
push
mov
rcrl
imul
sahf
clc
addr16
js
mov
fadd
xor
rcll
imul
sub
loop
hlt
loop
mov
mov
sub
push
sub
stos
dec
jge
jmp
lds
sbbb
jp
mov
pushf
add
mov
sarb
adc
mov
adc
add
add
mov
inc
aad
mov
and
xchg
jl
jecxz
mov
mov
sti
out
mov
push
hlt
aas
stos
xchg
popa
shlb
fnstcw
push
in
sarl
out
or
sub
mov
xor
and
jmp
sbb
push
nop
jns
sub
mov
sbb
in
jb
inc
loope
jge
jae
adc
mov
jnp
adc
and
adc
arpl
leave
dec
jmp
sbb
nop
gs
js
mov
mov
icebp
jp
add
sub
cmpsb
dec
add
sbb
shll
je
xor
test
daa
xor
stos
stc
outsb
inc
hlt
jnp
test
or
pop
inc
enter
jns
adc
add
outsb
add
or
loopne
stos
lcall
add
push
mov
xlat
xchg
scas
mov
and
or
clc
in
cmp
xchg
pop
mov
push
fiadds
pop
shrl
imul
pushf
xchg
push
add
fidivl
inc
dec
dec
fldt
or
shll
jp
sbb
mov
mov
push
int3
lods
sbb
outsl
pop
sbb
mov
dec
orb
test
or
inc
pop
adc
or
sbb
les
adc
add
sbb
stc
nop
mov
shlb
cmp
call
mov
fadds
mov
mov
jle
sbb
push
sub
test
repnz
and
scas
sub
loopne
push
and
adc
cmp
mov
adc
ljmp
shl
xor
cmp
add
add
out
jns
subl
in
and
incb
gs
jo
ja
je
in
adc
call
mov
int3
jo
adc
cmc
sbb
decb
stos
jg
fdivr
add
cs
xchg
scas
push
jl
ja
mov
aam
repnz
pop
cmpsl
push
xor
xchg
xor
ficoms
or
fwait
mov
and
roll
insb
mov
test
arpl
adc
pop
addr16
in
push
imul
jmp
xchg
cmp
sbbb
sbb
es
test
dec
push
mov
stos
lods
ror
sbbb
pop
mov
cmc
dec
test
cmp
cmp
outsl
xchg
dec
lret
into
cltd
decb
fisttpll
divl
mov
jno
das
xchg
jge
add
cs
iret
adc
push
lds
jns
inc
dec
pop
outsl
lea
inc
test
rcrb
cmp
movsl
testl
add
ds
xor
and
jno
jae
std
shrl
cmp
inc
std
xchg
je
or
jnp
dec
pushf
or
rcrl
push
roll
push
mul
cmp
add
adcb
arpl
out
add
mov
lahf
mov
mov
and
adc
mov
loopne
sub
js
mov
sub
pop
adc
xchg
push
sub
sbbb
arpl
and
pop
call
aas
mov
cltd
ja
lahf
add
and
mov
int3
cmp
mov
test
and
xchg
rcrb
repnz
daa
and
aaa
stc
xchg
mov
jecxz
mov
test
dec
popa
divl
cmp
iret
fildl
mov
mov
xor
mov
fiaddl
shrb
inc
and
xchg
xor
repz
and
and
mov
adc
aas
mov
shlb
pop
sti
out
scas
imul
bound
inc
mov
mov
in
int3
mov
lds
jge
call
js
daa
mov
insb
jo
nop
shl
xor
mov
push
shlb
xchg
pop
add
mov
inc
lahf
mov
insb
out
lds
mov
push
ds
push
inc
push
cwtl
je
loopne
cmp
insl
add
pop
loop
rcl
mov
fbstp
push
mov
mov
sbb
in
rorl
sub
out
cmp
adc
mov
dec
dec
and
dec
aad
inc
movl
sahf
test
inc
push
fldt
and
sub
shr
cltd
push
pop
aaa
xor
inc
fucomp
adc
cmpl
notb
lret
or
dec
ja
dec
mov
shl
or
mov
dec
push
sub
xchg
in
cmc
inc
pusha
fisttps
arpl
cmpsb
les
imul
mov
xor
in
adc
dec
lret
dec
imul
fistps
cmp
loopne
or
cmpsl
xchg
lcall
jns
jl
outsl
xorl
gs
push
jne
shlb
ret
jl
pop
mov
pop
or
jne
insl
scas
push
mov
fists
dec
xor
lock
fbstp
aad
sub
ja
jnp
mov
inc
aam
push
mov
int
jge
and
clc
stos
outsl
xchg
nop
pop
addl
cmpsl
pop
lea
rcll
test
and
int3
subl
in
out
and
sbb
rolb
and
dec
dec
jnp
in
sbb
mov
fbstp
add
sbb
addb
pop
sub
call
inc
mov
lret
sarb
bound
pop
fwait
sub
orb
stos
lea
and
mov
mov
jno
xchg
out
outsb
xchg
outsb
adc
daa
add
xchg
push
xchg
aam
sahf
rcpps
jnp
or
leave
inc
inc
jae
int
xor
test
scas
out
mov
push
pusha
mov
shll
in
xorl
add
mov
add
clc
jg
ret
sbb
or
in
sbb
push
dec
in
or
push
sbb
mov
cld
cmp
test
mov
scas
mov
idiv
test
mov
mov
or
mov
js
imul
pop
inc
cld
ljmp
add
adc
out
sti
js
xchg
dec
jl
dec
lods
pop
out
and
xchg
adc
xlat
pop
mov
cltd
hlt
pop
mov
lods
mov
xchg
lock
pop
lahf
lods
lds
hlt
mov
loope
insb
inc
mov
pop
outsb
lds
ret
dec
pushf
testl
lcall
test
mov
fistl
gs
cmp
nop
aaa
inc
pop
sub
insl
test
stos
and
call
shrb
mov
add
bound
fstpl
fisubs
fisttpll
xchg
addr16
out
fistpl
fsubl
popf
sub
cmc
psrad
xchg
xor
mov
mov
push
mov
je
jmp
mov
je
lods
xor
adc
nopl
aam
cltd
outsl
call
xchg
cmpsl
sub
add
xchg
pop
xsha1
cmpsb
mov
aad
rolb
enter
ret
pop
clc
pop
cmp
out
and
push
in
mov
mov
ret
jno
movsb
lds
xor
mov
sbb
je
cmp
adc
dec
ss
push
sbb
icebp
cltd
sbb
and
out
test
cmc
in
or
jecxz
xchg
push
mov
insl
jnp
dec
jmp
pusha
outsb
rolb
lret
sub
mov
jg
mov
pop
outsb
cmp
mov
dec
mov
rep
inc
cwtl
push
sar
jge
outsl
inc
pop
ret
push
pop
fwait
sti
sub
ljmp
xchg
xlat
out
cmp
or
pop
push
cmp
arpl
mov
int
mov
push
pop
mov
lods
xor
repz
or
loope
shll
sub
shrl
push
jbe
and
pushf
xchg
fldcw
inc
jmp
jae
push
inc
mov
nop
or
pop
imul
dec
adc
pop
addl
push
xchg
or
pusha
ljmp
mov
mov
insl
in
in
adc
sti
out
test
mov
enter
push
sub
iret
xor
lock
mov
aaa
mov
repz
cmp
xor
js
push
pushf
push
or
sbb
and
lcall
out
push
and
add
int
cmp
outsb
jmp
fdivs
inc
mov
testl
fwait
mov
and
fdivs
fdivp
call
mov
xchg
fnstsw
movsb
xchg
xchg
cmpsb
xchg
mov
jae
in
outsb
lret
int3
pop
icebp
enter
adc
ret
in
inc
mov
inc
push
jns
ds
sbb
mov
xlat
nop
insb
ds
xchg
xor
fsubrp
loope
outsl
pushf
jmp
add
rcl
les
pop
sub
nop
pop
mov
shr
repz
mov
mov
add
jbe
fwait
add
push
ret
and
xchg
mov
das
mov
cmp
insb
xor
shr
adc
rolb
movsb
jb
adc
imul
insl
jo
insl
mov
sahf
dec
divl
xchg
xor
pusha
cmpsl
mov
icebp
mov
or
ret
and
aad
dec
std
mov
dec
adc
gs
cmp
ss
int
jge
movsl
jg
xlat
mov
mov
xor
out
cltd
push
leave
xor
fucomip
jg
sub
cmp
test
xchg
pusha
je
adc
adc
das
je
test
mov
fildl
clc
mov
xor
adc
mov
je
pop
cmpsb
lods
mov
xchg
int3
andb
add
dec
mov
enter
push
mov
xchg
decb
in
xchg
mov
xor
cs
xchg
mov
and
jmp
stos
jecxz
cmp
cmpsl
mov
cs
fbstp
xlat
pop
xchg
and
xchg
and
xchg
jbe
inc
sbb
jge
mov
cmp
enter
jmp
lea
mov
mov
mov
jnp
test
dec
imul
xor
mov
and
js
inc
lahf
fs
sub
sbb
cmp
sub
loopne
mov
stos
es
lods
jmp
int3
lods
hlt
mov
pushf
pushf
repz
repnz
mov
lahf
jmp
jne,pn
mov
js
inc
mov
mov
jle
add
and
call
in
xchg
inc
lods
add
rcrb
je
jl
iret
movsl
mov
push
js
jnp
int3
push
push
mov
mov
divl
pop
sbb
mov
xchg
inc
fisubrl
sbb
scas
cld
mov
add
xchg
sbb
sbb
ds
cmp
push
sbb
cmpsl
lgs
push
movd
inc
stc
nop
inc
jmp
pop
insb
add
aad
fisubs
jmp
fsub
xchg
shll
in
xor
das
pop
push
mov
inc
jecxz
xor
mov
pop
aaa
jae
lods
or
pop
jge
mov
sarl
jno
lock
mov
mov
sbb
jl
xor
pop
imul
sub
jl
cmp
xor
stos
pop
loope,pt
mov
out
push
lea
mov
test
insl
or
or
dec
mov
mov
or
jg
ljmp
cmp
stc
sbb
ficoms
cmpsl
sbb
mov
ret
lcall
call
lahf
mov
or
in
ljmp
imul
rcll
into
subl
scas
sub
out
jg
dec
out
push
mov
jo
and
inc
pop
mov
scas
into
sbbl
insb
enter
loope
mov
and
sti
ret
and
lds
shlb
mov
mov
or
call
xchg
daa
pop
iret
pop
lods
ja
std
push
xchg
pop
sbb
mulb
fwait
repnz
xchg
mov
lahf
and
adc
daa
ret
inc
ljmp
pop
and
push
loopne
cmpsb
pop
inc
out
inc
xchg
int
add
mov
lods
xchg
sbb
fmull
inc
leave
pop
in
mov
adc
jo
mov
dec
adc
and
lods
sub
lret
std
adc
iret
test
aad
cltd
out
mov
xchg
ret
inc
lods
rcrl
sarb
sar
in
dec
dec
sti
sub
std
cmp
enter
aam
xor
popf
push
xor
xor
in
xchg
xlat
ja
push
test
xor
addb
sti
inc
or
sti
push
dec
inc
lods
mov
xchg
cli
dec
pop
sub
test
dec
in
test
aad
xor
scas
mov
call
mov
in
test
pusha
mov
sbb
mov
push
push
mov
adc
jne
mov
lfs
outsl
repz
addr16
xchg
sub
enter
insb
scas
inc
sahf
jmp
int
mov
les
ror
xor
stos
std
outsl
subl
fldt
dec
leave
push
mov
daa
arpl
cwtl
jmp
inc
test
add
aam
clc
std
mov
pop
leave
xor
jbe
ljmp
inc
aaa
push
es
roll
mov
dec
xchg
mov
rcrl
aam
insb
shrb
adc
int3
mov
cwtl
lds
scas
nop
mov
or
ds
hlt
xchg
lds
xchg
sub
aas
jbe
dec
mov
dec
fdivl
adc
xchg
leave
mov
out
ljmp
mov
lahf
push
cmpsl
and
ficoms
sarl
jbe
mov
add
insl
pushf
xor
jmp
sbb
mov
rcrl
aas
xchg
xor
inc
aad
das
test
xchg
mov
pop
mov
pop
out
sub
add
pop
jecxz
in
jl
inc
mov
jne
js
ret
bound
lret
lret
int
cmp
inc
mov
push
or
mov
adc
pop
sub
cmpb
fmuls
insl
push
fists
xchg
rcrb
jnp
sbb
xchg
or
les
add
sub
fmull
ljmp
pop
push
push
ljmp
outsl
pop
push
sub
mov
mov
lcall
in
inc
and
test
icebp
push
shl
xor
in
daa
imul
or
test
xor
and
mov
sti
and
out
mov
mov
adc
or
xor
icebp
pop
jg
mov
push
rorb
add
inc
aam
cmp
push
cs
rclb
mov
mov
std
mov
cmpsl
jge,pn
adc
xchg
pop
add
gs
cltd
or
lods
into
fcompl
test
lods
lods
inc
add
out
adc
ss
mov
fs
test
insl
push
xor
mov
lret
mov
xchg
repnz
js
xchg
mov
loop
add
fisubrs
jb
and
add
xchg
and
fidivrl
mov
call
ss
xlat
insl
test
pop
cmpsl
pop
jg
sbb
pop
lahf
push
inc
cmp
cwtl
fadds
mov
cs
pusha
jnp
pminsw
out
es
clc
pop
rolb
mov
js
xor
mov
lcall
and
add
mov
sti
jbe
cmp
sti
dec
sbbl
adc
movb
mov
ja
xchg
add
orl
jo
andb
cmp
mov
sarb
sub
xchg
jmp
sbb
cli
xchg
les
jne
cmp
jnp
ficoms
and
pop
inc
pusha
lret
addr16
test
cli
in
in
dec
lahf
pop
loope
imul
lcall
imul
filds
scas
es
jbe
inc
fadds
dec
xchg
movsl
in
xlat
mov
jle
test
pop
mov
out
jmp
out
int3
and
jne
sbb
dec
das
movb
dec
gs
dec
pusha
int3
add
jnp
in
test
lret
or
shlb
iret
int3
inc
in
jg
xchg
sub
repz
sub
pop
cli
inc
dec
pop
xor
xor
mov
push
pop
sahf
xlat
mov
cmp
cld
stos
xchg
test
dec
jecxz
xor
fs
bound
pop
mov
jg
sub
jbe
mov
dec
push
mov
cmp
aaa
xchg
int
lds
jbe
outsl
adc
inc
out
cmc
je
call
adc
cltd
out
jp
mov
jns
inc
inc
add
into
inc
push
jb
and
arpl
aad
jge
lods
pop
shrl
jp
mov
stos
dec
data16
shrl
inc
pusha
sub
out
mov
jle
cld
xchg
lret
mov
aaa
xor
call
clc
fimull
call
repnz
out
mov
mov
mov
out
incb
pushf
jg
sub
pop
sbb
popa
into
in
cmp
jo
mov
xchg
cld
aad
fsubrl
pop
or
mov
inc
lea
in
scas
mov
cmp
jb
out
scas
jbe
enter
push
mov
stos
arpl
xchg
into
mov
xchg
cli
mov
sbb
shll
jecxz
stos
lds
xchg
in
test
mov
mov
adc
or
out
add
arpl
xchg
out
cmp
sub
push
ret
xor
incb
xorl
out
es
xor
xchg
and
inc
notl
inc
lret
sub
xor
hlt
mov
mov
leave
pop
mov
xor
sbb
cwtl
arpl
fsubl
cmpsb
pop
sub
pop
inc
out
sbb
test
mov
mov
pop
adc
dec
aaa
mov
idivl
rcrb
movsb
cmp
mov
lds
loope
pop
adc
cmp
aas
jmp
mov
dec
lods
adc
sub
inc
mov
and
pop
sub
jmp
jae
cld
push
imul
lea
mov
adc
lret
lock
mov
ja
adc
ss
cmpsb
fcompl
mov
int
pop
push
add
popf
js
jecxz
popa
clc
es
lret
sub
jg
imul
imul
add
mov
mov
add
cmc
ss
or
xchg
outsl
jns
repz
scas
imul
rcr
test
sahf
inc
popa
stc
mov
inc
mov
cmp
loopne
push
into
out
imul
lret
sub
cltd
push
shlb
jl
or
stos
add
addr16
xchg
stos
push
adc
popa
clc
mov
mov
push
add
push
popf
lods
pop
add
imul
shl
stos
lret
mov
cmpsl
mov
mov
bnd
or
dec
add
sbb
push
cmpsb
adc
imul
fsubrs
jmp
pusha
inc
lcall
ss
jno
aam
bound
add
js
push
lock
ret
or
add
rol
xchg
fisttpl
sbb
out
or
dec
or
cwtl
ret
add
jecxz
xchg
cmp
aad
in
les
pop
dec
inc
cmp
int
test
dec
xchg
popa
or
mov
test
shrl
mov
xchg
dec
lret
jle
push
add
aam
push
es
std
cld
mov
dec
pop
enter
fldenv
test
cmp
cmpsl
jge
fsub
mov
int
cmc
mov
pop
xchg
xor
adc
aam
sbb
hlt
cltd
arpl
xchg
rorl
fldt
xlat
jp
out
popf
jb
sbb
fidivrs
shll
movsb
xchg
push
inc
add
sub
aas
and
cld
outsl
jb
fldcw
jno
lcall
xorb
push
out
push
mov
out
dec
dec
sub
adc
pusha
outsl
lea
jo
push
inc
lea
xchg
jae
mov
jle
fistl
adc
add
lahf
jb
jb
mov
adc
inc
pop
ret
pop
fdivp
and
dec
jle
pop
mov
rorl
scas
adc
out
mov
cmc
mov
cwtl
pop
pop
stos
add
cmp
outsb
mov
enter
sbb
daa
scas
and
cmp
adc
scas
mov
and
shll
mov
or
mov
ficompl
fadds
xchg
lods
imul
ja
cmp
stos
xor
push
xor
movsb
jge
xor
inc
dec
push
sbb
bound
das
cmc
push
nop
mov
push
mov
push
cwtl
das
mov
adc
aas
inc
fidivs
mov
lret
jbe
mov
fwait
outsb
cmc
and
imull
push
push
mov
jle
and
and
inc
repz
or
adc
cmpsb
or
cmpsl
cli
mov
test
sbb
mov
push
adc
je
adc
ficompl
mov
xor
frndint
mov
cmpsl
movb
mov
mov
mov
pop
loopne
cli
xchg
int
jns
lea
or
sub
lahf
mov
cli
in
jle
stos
add
pop
pushf
imul
bound
inc
adc
jns
sbb
mov
or
dec
mov
jne
cld
xor
das
movsb
ret
push
dec
in
ja
or
shrb
movsl
cmpl
mov
sti
push
sahf
lods
scas
scas
xor
ds
mov
add
lret
xchg
sbb
cwtl
leave
jp
and
aam
jle
je
mov
out
cld
mov
cld
push
or
jl
cmp
sti
rcll
xor
cmpsl
push
push
and
xor
mov
and
push
xchg
pop
pop
nop
mov
push
into
fdivrs
lods
lods
mov
frstor
outsl
sbbl
lcall
pop
jge
dec
scas
push
sbb
pop
addl
jp
add
cmp
jns
rcrb
shr
fcompl
pop
test
fidivl
xor
insb
mov
mov
jp
pop
cmpsl
lea
and
in
stos
rolb
jne
sub
pusha
stos
pusha
fistpl
or
popa
jle
jp
movsl
loopne
cltd
fisttpll
pop
mov
push
dec
add
je
mov
rcll
outsl
xor
dec
notl
rcrl
pop
shll
out
xchg
jl
call
dec
lcall
insb
shll
cmc
mov
jecxz
in
sub
shrb
imul
jmp
xor
inc
mov
lret
push
xchg
and
mov
xor
push
icebp
or
mov
adc
stc
xchg
cmp
dec
incb
xchg
mov
add
fwait
loope
icebp
xlat
adc
mov
add
and
sub
fists
sub
mov
mov
jns
mov
ret
mov
andl
pop
jmp
mov
xor
gs
cmpsb
ljmp
mov
mov
mov
add
lods
xlat
cmpsl
mov
cwtl
dec
test
arpl
in
inc
lcall
into
sti
das
in
cmp
pop
adc
jb
cmp
xor
add
out
sbb
dec
vmwrite
mov
mov
je
inc
popf
iret
lods
mov
mov
les
daa
push
aas
inc
lret
lret
pop
cmpsb
cld
in
int
cli
shll
ja
int
mov
xor
icebp
movsl
fcompl
xor
aad
call
xchg
jns
push
xor
roll
insb
jle
dec
mov
pop
pop
push
test
ret
sub
pop
mov
lret
and
xchg
loope
notb
and
pop
shlb
jbe
push
add
lea
pop
xor
scas
adc
aad
pop
mov
loope
mov
out
dec
popa
sarl
fnsave
sub
sbb
ds
xor
cmpsl
movsb
leave
cmp
pop
inc
xchg
pop
lret
jb
xchg
sub
xchg
push
out
lods
sub
add
push
mov
mov
xlat
mov
push
pop
movsl
lds
fdivs
cmc
xchg
mov
xchg
pop
cmp
xor
repz
mov
adc
scas
sahf
and
cwtl
pop
xlat
jnp
push
lds
fdivrl
in
inc
push
into
or
outsl
xchg
loope
lahf
mulb
std
pop
sbb
hlt
stc
jl
push
cwtl
lahf
scas
inc
jb
xor
hlt
inc
addl
fwait
popa
insb
dec
int3
sbb
dec
or
test
fisubrs
insb
daa
inc
outsb
push
pop
in
inc
xchg
mov
cmp
addr16
jp
and
pop
sahf
pop
lds
cmpsb
loopne
and
or
inc
fisubrl
fsubs
int
push
pop
sbb
fbstp
ss
xchg
cmp
jl
ss
ss
ret
xor
sub
jo
sbb
icebp
xchg
andl
xor
mov
mov
ret
inc
cmp
shr
addr16
cmp
fs
inc
jmp
hlt
sbb
je
xchg
divb
mov
das
mov
jo
outsb
fisubs
decl
addr16
and
icebp
data16
mov
push
jns
out
mov
cmp
mov
push
ret
clc
pop
addr16
cmp
fmul
nop
mov
psubusb
adcb
inc
in
stos
inc
add
popf
and
pop
fcompl
in
js
les
ret
lret
xchg
mov
enter
pop
mov
jbe
imul
out
sbb
addl
cld
frstor
rolb
lcall
mov
incb
shrb
lock
out
jecxz
aas
adc
arpl
insb
pushf
xor
aaa
mov
test
mov
jnp
fdiv
add
fcomi
mov
test
call
pop
dec
cmpsb
mov
mov
test
mov
jo
repz
xchg
jae
sub
xlat
jo
xchg
lret
mov
xchg
leave
scas
inc
cli
test
xor
xor
inc
jmp
add
test
xchg
or
or
dec
popa
xor
mov
in
aad
fstps
fnstcw
nop
mov
lahf
stos
leave
add
jg
add
es
or
cli
jmp
push
sbb
imul
sahf
dec
mov
mov
ja
pop
add
shll
jo
and
pop
mov
test
mov
loop
repnz
add
mov
iret
dec
and
adc
jnp
push
out
pushf
mov
xchg
lcall
add
insl
pusha
dec
or
sbb
adc
xchg
stos
outsl
dec
rol
sbb
mov
push
jl
in
mov
lods
fs
pop
jmp
fucomip
icebp
mov
jns
cmp
repz
cmp
add
out
fwait
aas
lret
inc
cs
mov
nop
gs
cltd
lds
inc
sarb
icebp
push
lret
int3
scas
loop
mov
leave
adcl
adc
cmp
mov
std
cltd
xchg
sbb
cld
stos
shrl
or
jecxz
xor
imul
dec
fs
and
dec
mov
lods
push
pop
mov
pop
and
movb
pushf
push
mov
imul
fisubl
dec
pop
push
ds
ljmp
cli
out
gs
scas
inc
inc
push
mov
adc
gs
cmp
roll
mov
call
add
xchg
jmp
pushf
push
inc
cwtl
stc
sbb
test
sub
push
sbb
mov
lea
ja
xchg
mov
cld
lcall
push
inc
in
mov
xor
pop
cmp
xor
sbb
jo
into
pop
mov
pop
stos
scas
xchg
adc
sbb
mov
or
ljmp
jp
jbe
xchg
cmpsb
ret
test
lock
mov
jns
xchg
lods
push
dec
or
imull
out
xor
or
outsl
mov
fcomip
aaa
shrl
pop
push
lods
dec
cmp
fucomip
fbstp
and
iret
jbe
add
add
jecxz
xorl
out
mov
xchg
jb
xor
out
sub
lret
adc
cmpsl
xor
inc
jo
xchg
fbstp
cmpsl
push
or
imul
sbb
fwait
push
adc
push
add
push
push
call
adc
mov
fisubrs
notl
mov
movsb
cld
jmp
pop
dec
pop
ret
mov
cmpb
in
mov
out
ret
jecxz
mov
test
call
and
popa
xlat
pop
sub
shl
pushf
lea
test
insl
pushf
xlat
mov
jge
push
das
adc
je,pt
lods
jns
imul
sbb
andl
mov
movsl
nop
inc
push
lods
shlb
test
xor
fmull
mov
push
mov
int
or
and
mov
fcmovb
xchg
add
add
rcr
inc
pusha
out
lea
rolb
in
xlat
mov
xor
fsubl
pop
push
push
and
mov
int3
mov
call
push
rol
mov
test
push
sub
rcll
or
clc
sbbl
fucomip
mov
scas
adc
fisubrs
cmpsl
fwait
lods
add
imul
xor
push
stos
rolb
clc
dec
cmp
mov
sbb
sti
std
sbb
mov
lds
mov
loop
sub
notb
cmc
xor
cmpsl
shll
mov
adc
je
jae
leave
adc
adc
fiaddl
or
in
mov
clc
dec
jp
jg
int3
jbe
mov
aam
in
fsts
cmp
test
or
or
pop
mov
mov
add
mov
test
inc
into
movl
mov
push
jl
xlat
and
outsl
add
ds
sbb
movsb
into
roll
sbb
or
sbb
repnz
mov
aaa
dec
addb
xor
jecxz
mov
push
xor
das
ljmp
xor
xorl
push
xor
es
out
jge
and
fcoml
scas
out
xor
repz
xor
pop
mov
mov
adc
or
mov
cld
jo
fistpl
cmp
pop
popf
mov
in
pushf
xor
ret
fsts
lods
pcmpeqb
jl
inc
icebp
lgs
push
scas
adc
add
movl
lret
pop
pop
jmp
xchg
pusha
adc
ret
xor
es
ret
in
inc
popa
enter
aad
stos
lret
movsl
sbb
imul
negb
lods
xchg
add
add
adc
or
fidivs
push
push
xor
push
adc
movsb
push
jmp
push
mov
mov
out
rcrl
aad
aad
dec
dec
mov
inc
loop
adc
pusha
add
mov
or
inc
jnp
add
push
inc
iret
sahf
mov
mov
addr16
or
int3
flds
int
dec
rdpmc
fsubl
out
addb
ret
adc
out
inc
xchg
imul
cld
cwtl
lock
cwtl
pushf
out
cld
leave
jg
xchg
ds
bound
mov
mov
jp
sbb
and
sbb
lods
or
out
and
fiadds
jmp
dec
adc
outsb
mov
in
dec
aad
hlt
sbb
mov
lea
test
pop
test
xchg
movb
mov
add
data16
dec
push
cmp
inc
dec
std
je
jmp
mov
xchg
and
out
cmp
xlat
cmp
int
jge
jecxz
or
add
repz
jno
mov
aaa
mov
fbstp
inc
arpl
call
out
clc
test
cld
pop
clc
pop
dec
adc
cwtl
mov
adcb
jb
and
cmp
lret
pop
jno
mov
lds
scas
inc
sti
sub
rcl
xor
add
je
pop
mov
out
mov
les
lods
mov
pop
outsb
xchg
dec
sbb
inc
mov
cli
mov
push
fcomps
imul
dec
repz
adc
push
fmulp
push
mov
leave
pusha
in
mov
mov
repz
xor
push
ljmp
ljmp
out
pop
ret
cwtl
out
stc
scas
push
jne
add
outsb
inc
inc
inc
inc
push
and
and
inc
dec
pop
js
and
mov
or
fidivrl
int
push
jmp
dec
adc
aaa
cmpsl
jp
stos
filds
inc
cwtl
mov
push
mov
dec
or
pop
imul
push
fwait
dec
sarb
sub
xor
add
mov
adc
cmp
push
fstpl
mov
enter
pusha
sub
push
sub
jo
pusha
adc
lret
lret
addb
fmuls
js
mov
lahf
mov
andl
hlt
pop
jecxz
inc
lcall
stos
mov
mov
sbb
outsb
and
push
jne
shlb
das
cmpsb
cs
fcmovne
cld
cmpsl
cmp
xor
sub
push
dec
loope
in
aam
stc
nop
fcoml
scas
leave
roll
cmova
xchg
lea
xchg
test
mov
inc
mov
mov
shrl
ret
sti
cmp
inc
jecxz
mov
lock
inc
push
mov
stos
xor
cmp
push
data16
hlt
mov
xchg
stc
xchg
cli
xchg
clc
loop
cmp
add
scas
decl
movsl
loopne
inc
push
push
es
ret
mov
shll
pop
and
inc
fiaddl
or
add
call
xchg
mov
or
in
and
data16
inc
pop
dec
fiadds
js
jb
and
xor
test
pop
pop
rorl
imul
cmp
js
loope
or
test
lcall
int
xor
shll
movsl
pop
mov
sbbl
dec
push
addl
pop
mov
pop
in
pusha
aad
sub
fnsave
push
nop
test
xchg
adc
and
icebp
mov
fdivr
or
movsb
xchg
gs
pop
ficoms
adc
lahf
negl
js
add
aad
int3
or
jg
shll
mov
test
insb
inc
arpl
sub
and
mov
cmp
stos
jmp
mov
mov
sbb
leave
dec
mov
movsb
cmp
mov
jg
sub
fimuls
sbb
push
jae
pop
stos
jl
lds
mov
loop
cmp
test
out
lret
pop
sbb
mov
mov
or
inc
mov
mov
int
jo
mov
imul
and
xchg
pusha
mov
stos
xchg
aam
es
push
je
hlt
lahf
loopne
fld
jnp
in
js
lods
loopne
pop
outsl
gs
lods
pop
mov
or
cli
sub
jmp
scas
inc
daa
xor
arpl
mov
sub
add
fnstcw
test
xor
jecxz
mov
sbb
dec
mov
scas
and
out
outsb
jae
mov
jbe
add
ret
cmc
fsubl
lahf
out
xchg
sbb
je
ja
dec
adc
lods
and
aad
pusha
mov
rclb
cmp
xchg
in
adc
push
insl
repz
adc
mov
int3
in
xchg
test
into
pop
mov
ret
xor
cmp
add
pop
clc
movd
jl
icebp
scas
sti
mov
je
ret
xchg
xchg
dec
jp
mov
cltd
mov
xor
pop
shll
mov
lea
jae
fldl
jne
jae
adc
ret
dec
adc
jmp
jne
add
dec
addb
jecxz
ss
frstor
sbb
add
xchg
mov
ret
cmp
daa
imul
mov
movsl
push
subb
mov
das
es
dec
mov
xor
adc
rcl
dec
pop
mov
rolb
inc
sub
rcll
mov
dec
add
addr16
int
pushf
repz
adc
dec
out
test
ds
adc
mov
and
sahf
xor
sbb
mov
xor
jmp
loop
addr16
mov
xchg
mov
push
rcll
lret
mov
xchg
outsl
call
dec
dec
dec
inc
pop
add
test
repz
adc
xchg
adc
jb
push
loope
movb
inc
pop
inc
popa
add
lock
mov
js
fldenv
pop
loopne
iret
jecxz
cmp
cmp
mov
lahf
jmp
push
cmp
je
pop
popa
mov
andb
pop
sahf
jg
sub
std
or
pushf
nop
jge
aad
es
repz
xorl
loopne
xchg
adc
ja
into
push
cli
adc
jns
in
arpl
push
push
mov
fistps
pop
jecxz
aas
fistl
xchg
lahf
inc
ret
stos
fcom
pop
insl
or
dec
cmp
sbb
das
pushf
repz
stos
fsubs
je
inc
imul
inc
std
xchg
xor
sbbb
stos
frstor
pop
dec
xor
nop
xor
adc
push
or
test
jmp
pop
pop
sub
leave
repz
cwtl
leave
stos
pusha
mov
arpl
andl
cmpl
repnz
sub
data16
fsubrl
hlt
cmp
mov
sbb
sbb
cmp
lahf
negl
int3
fidivrl
call
adcl
pop
push
stos
adc
clc
loop
frstor
dec
adc
int3
dec
cwtl
aad
mov
and
xor
push
cmp
inc
push
js
lock
xor
sbb
jp
sub
dec
popf
push
inc
lcall
inc
mov
aas
cmc
adc
dec
pop
repnz
adc
lcall
and
sbbl
mov
sarb
pop
xor
mul
pop
lock
dec
pop
cmc
leave
ja
add
popf
stc
ds
invd
and
push
sub
lds
ds
xchg
jl
enter
add
xchg
lea
out
push
mov
arpl
adc
or
jnp
and
pop
cmp
dec
push
fmulp
stc
xchg
ficomps
fwait
mov
pop
add
inc
mov
push
ja
imul
push
clc
xchg
push
sahf
mov
cmp
movsb
mov
jge
lcall
in
mov
lea
mov
mov
sbb
es
call
inc
xor
pop
mov
popl
push
push
icebp
push
ret
frstor
cmp
xchg
mov
psubsw
sub
jb
dec
mov
inc
add
loop
test
inc
fldt
xchg
inc
add
push
xchg
adc
decl
mov
inc
jb
std
sarl
and
test
int3
ljmp
ja
call
imul
inc
pop
dec
cmpl
mov
insb
mul
test
jge
pusha
lcall
xor
mov
dec
in
fs
mov
pop
push
lret
sar
je
enter
fldln2
push
adc
xor
xchg
push
cli
mov
das
dec
out
xchg
ficompl
jmp
imul
push
cmp
or
cmp
cmp
sub
push
mov
xlat
pop
dec
lea
push
xchg
cmp
outsb
push
or
hlt
jg
jp
cmp
mov
sbb
gs
pop
xchg
test
fsubrl
cs
arpl
scas
lds
outsl
jge
mov
xchg
imul
out
push
lods
mov
or
gs
fucomip
ljmp
and
fisubrl
aad
xchg
sahf
sub
sti
jecxz
lods
mov
fwait
mov
mov
push
enter
mov
xchg
sub
test
test
inc
arpl
lret
jbe
fildll
push
push
pop
jbe
cmp
movsb
outsl
mov
arpl
add
cmpsl
sbb
pop
pop
fldl
in
frstor
mull
xor
dec
adc
icebp
xor
push
insb
fbld
cltd
mov
mov
sti
inc
or
outsl
data16
loope
cmpsl
dec
loop
ss
adc
jns
pop
cmpsb
jbe
sbb
push
xor
push
add
movsl
icebp
xchg
mov
es
xchg
xchg
repz
cli
xor
pop
fildll
push
in
mov
sub
out
aad
or
je
shrb
or
push
push
jb
outsl
ljmp
jg
cld
xor
xchg
nop
add
repnz
sti
xchg
or
cmpsl
sub
add
add
xlat
sub
and
movsl
mov
add
enter
fwait
in
push
jo
or
mov
xor
dec
scas
xor
fsubrl
and
mov
cmp
es
dec
loope
dec
cmp
jbe
call
jno
testl
xchg
loope
and
cmp
out
arpl
fisubs
xorb
sbb
loope
scas
out
add
cmpsl
lahf
sub
fadd
insb
adcl
out
mov
pop
call
lods
pop
xchg
scas
test
je
pop
cmpsl
mov
clts
adc
divb
add
and
adc
or
sbb
bound
loop
or
cmpb
xchg
sbb
xchg
pop
pushf
gs
call
andb
adc
mov
jno
inc
pop
mov
sbb
ret
in
pop
ror
lea
push
pushf
roll
sub
jne
sbb
push
les
lods
push
jl
popa
mov
pop
shll
dec
inc
or
inc
cmp
aas
loop
push
push
push
ljmp
push
aam
scas
outsb
or
mov
sbb
fs
addl
dec
add
call
in
testl
les
jl
aas
pusha
mov
jg
in
std
push
or
xchg
pop
mov
loop
aad
cmpb
and
jb
pop
cmpsl
daa
cs
xchg
and
inc
sbb
mov
sub
xchg
xchg
outsb
test
shrb
inc
adc
popf
inc
xor
jmp
sti
test
jnp
leave
fstps
cmp
adc
test
sbb
push
scas
mov
xchg
mov
and
push
inc
fistps
imul
loop
add
divl
fistpll
loope
adc
pop
cmp
insl
sub
mov
data16
inc
and
mov
testb
jnp
movsl
test
mov
add
and
in
xacquire
jle
stos
mov
popf
inc
or
mov
test
lds
or
aaa
mov
xchg
jecxz
adc
cwtl
and
xchg
mov
clc
or
cmpsb
cmp
orb
in
xor
clc
imul
xor
or
xchg
call
xor
loope
xor
es
add
mov
dec
lahf
gs
inc
leave
sub
dec
fisttps
insl
sub
xor
sub
movl
pop
mov
arpl
dec
aaa
add
push
mov
sbb
jo
or
cli
push
jb
sahf
xchg
xchg
inc
dec
mov
adc
movsl
push
or
out
cmp
push
adc
popa
pop
fs
dec
and
cmp
imul
ss
icebp
xchg
fmul
xchg
sub
jp
leave
sub
mov
mov
dec
mov
out
xchg
sub
rcr
bound
inc
jmp
fsub
lcall
ret
or
cmp
add
es
mov
in
push
xlat
xchg
sti
in
test
mov
stos
lods
cld
loopne
cmp
push
xor
inc
cltd
dec
mov
mov
aam
es
push
movsl
inc
dec
push
lds
dec
in
lods
dec
arpl
pop
jno
mov
mov
rcll
xchg
and
lods
xor
sub
loop
out
out
inc
aad
test
aas
jg
mov
mov
mov
jge
mov
xchg
jmp
int3
arpl
imulb
add
dec
in
push
xchg
add
mov
stos
pop
and
fdivs
test
outsl
sbb
adc
fnstenv
or
mov
aaa
cmc
mov
lahf
xor
add
cmpsb
jle
rcr
mov
or
stos
loop
insl
bound
lcall
ds
in
fs
pop
popa
pop
scas
mov
inc
xor
pop
push
idivl
pop
jb
das
outsb
lods
and
adc
xchg
add
sbb
mov
add
int3
fsub
sub
ds
imul
incl
jp
lock
stos
in
aad
cltd
fdivr
sahf
or
mov
dec
aam
adc
daa
jle
pop
mov
les
adc
sub
lcall
mov
mov
xor
ljmp
pop
roll
hlt
xor
sti
mov
cmc
pop
loopne
arpl
daa
cmpsb
lret
icebp
push
jne
dec
repz
in
or
xor
gs
xchg
adc
dec
pushf
dec
pop
or
xchg
mov
scas
cmp
xchg
mov
out
mov
xchg
sbb
pop
imul
lret
jecxz
lock
test
jle
dec
cmp
and
lcall
mov
test
sti
leave
or
inc
lret
jg
bound
in
inc
sub
jno
xor
lea
xchg
mov
pop
scas
clc
or
sbbb
dec
and
push
outsb
dec
inc
pop
imul
xor
jbe
dec
mov
mov
cli
add
jo
fnsave
inc
xchg
sub
dec
jb
jmp
dec
and
sub
pop
or
dec
mov
add
cs
shlb
sbb
cmp
mov
xlat
pop
jb
int3
lods
inc
and
dec
clc
fcomps
xor
out
dec
mov
jbe
lods
xchg
negb
das
xchg
lods
nop
insl
pop
jns
stos
popf
add
test
andl
fiaddl
push
sub
jno
aam
pushf
xchg
mov
cmp
mov
jecxz
inc
xlat
pop
or
push
xor
call
pop
mov
fidivs
cmp
ja
sti
das
fistl
jecxz
aaa
fstl
testl
and
add
ja
jmp
dec
fcomip
into
pusha
bound
push
inc
lds
scas
lret
fidivl
aas
jb
mov
pop
mov
stos
xchg
hlt
fidivrl
lods
cmp
xor
fstpt
push
push
orb
dec
ficomps
out
mov
loope
and
fdiv
aas
pop
add
and
pop
xor
add
pop
add
lcall
in
test
push
pop
mov
in
inc
pop
popa
fs
push
mov
daa
xchg
xor
arpl
push
or
and
clc
jno
cld
scas
adc
push
movsl
sub
iret
and
xor
jp
dec
popa
mov
sbb
cmpsl
outsb
and
clc
adc
out
std
sub
test
aas
bound
test
incl
add
mov
mov
xchg
js
aas
lea
adc
sbbl
fistpl
je
add
jmp
and
xchg
mov
lahf
dec
mov
pop
js
movsl
hlt
fcoms
ja
adcb
test
dec
popa
mov
test
mov
sbbl
imulb
daa
shrl
test
dec
adc
cltd
cld
stos
xchg
test
fistpll
mov
lds
in
jno
daa
js
scas
xchg
adc
enter
popa
scas
mov
pusha
xorl
push
cmp
xor
add
shrl
ljmp
rclb
mov
fmul
pushf
sbb
leave
push
inc
fldl
inc
jecxz
int
sarl
imul
cmp
clc
std
stos
cmp
xor
test
in
ret
or
ds
fbld
push
pop
icebp
in
mov
mov
mov
jae
aam
movsl
inc
mov
pop
dec
dec
sti
push
jns
ret
jbe
cmp
adc
jmp
int
pop
mov
fs
mov
dec
loopne
dec
push
aad
or
push
lea
dec
out
pushf
repnz
push
jo
sub
shll
out
dec
pavgb
fsubrl
mov
sub
lret
xchg
outsl
jp
int3
into
cmpsb
ljmp
int3
cmp
int3
and
sub
adc
dec
and
xor
cmp
out
mov
fwait
xchg
jmp
in
pop
aaa
pop
sbb
xchg
xor
add
cmp
cmp
popf
sbb
pop
cmp
lcall
lcall
test
fbld
scas
mov
add
stos
fimull
adc
cmp
leave
mov
dec
test
lock
loopne
das
sub
fsubs
mov
or
pop
mov
clc
add
cltd
lods
pop
pop
mov
mov
lret
insl
and
pop
sbb
xor
enter
xor
outsl
fstpt
lcall
outsl
mov
sbb
inc
pop
inc
cmp
mov
scas
ret
xchg
inc
inc
or
inc
popf
fdivl
icebp
push
inc
iret
jnp
sub
movsl
push
aas
aad
xor
pop
out
shlb
xorb
subl
or
dec
dec
movsb
pop
mov
cmpsl
stc
push
or
or
testb
mov
lods
loope
inc
inc
pop
lret
data16
or
aad
jp
mov
push
test
nop
xchg
mov
and
sbb
repz
pop
cmp
xor
in
adc
cld
and
xchg
jge
push
ljmp
cli
mov
es
sub
sbb
fistps
outsl
idivb
insl
loopne,pt
xor
call
mov
cmp
es
aaa
sahf
dec
fnop
xchg
adc
lcall
fldcw
sub
jbe
das
xchg
xor
lods
sbb
cwtl
into
enter
or
xor
dec
or
popa
xlat
sub
rcrb
call
jmp
mov
popf
sub
push
dec
dec
fmulp
xor
mov
pop
and
gs
js
xchg
in
icebp
mov
lahf
mov
dec
jle
js
xor
dec
es
ror
inc
pop
inc
mov
jbe
push
roll
lea
adcb
out
mov
fidivrs
outsb
ret
mov
ja
xorb
mov
mov
jne
inc
lods
push
sbb
add
std
mov
pop
pop
mov
shrl
pop
in
sub
sub
mov
mov
ret
aad
fs
and
xchg
ret
dec
paddb
cwtl
mov
adc
xor
pop
pop
icebp
sbbl
bound
dec
rcrb
adc
dec
mov
popa
xchg
push
inc
mov
xlat
mov
div
pop
popl
add
jno
xchg
sub
cltd
sahf
sub
les
aad
and
sub
addb
lock
cmp
mov
mull
xchg
mov
cmp
sbb
call
add
mov
jnp
push
outsl
data16
xchg
cmpsl
into
lret
pop
loope
js
data16
mov
mov
rclb
mov
sub
cwtl
pop
aas
jecxz
clc
std
pop
jns
iret
jl
sub
sub
push
shrl
xor
icebp
mov
and
imul
push
call
insl
xchg
popf
inc
lahf
push
sub
cli
mov
stos
setge
arpl
addr16
sbb
lea
adc
jns
mov
adc
xchg
mov
sbb
mov
das
addb
inc
mov
dec
jecxz
pop
mov
or
insl
add
mov
dec
inc
das
cmpsb
mov
or
push
loope
push
mov
ficoml
loope
test
cwtl
cli
in
nop
in
and
xor
fnstsw
xchg
sbb
xchg
dec
aaa
popf
cltd
inc
ficoml
xor
dec
fwait
decb
iret
cmp
mov
pushf
mov
test
stos
push
stos
xchg
add
sbb
sub
je
mov
push
pop
jne
mov
cmp
push
jae
push
mov
cmp
shr
ret
cmpsl
xchg
hlt
inc
push
cmp
xor
fnstcw
xor
mov
cmp
mov
leave
mov
push
inc
roll
enter
adcb
adc
sub
sub
stc
nop
push
gs
lods
push
jbe
mov
idivl
movsl
push
sub
lds
add
mov
test
pop
pop
push
pusha
inc
dec
add
adc
mov
pusha
fdivl
sahf
lret
fdivrs
into
sbb
jno
fisttpll
mov
packuswb
lcall
add
gs
dec
popf
xchg
add
andl
xchg
movsb
addb
mov
and
lock
push
ljmp
sahf
pop
lcall
daa
xor
jns
inc
mov
fs
jecxz
inc
mov
cmp
xor
icebp
lock
pop
into
adc
add
mov
push
inc
out
push
outsb
hlt
xor
shr
es
mov
xor
mov
ds
stos
js
pop
adc
push
dec
xchg
inc
inc
loop
pushf
cli
xor
bound
das
loopne
je
sbb
divb
rcl
orb
xchg
dec
clc
lcall
push
mov
jo
dec
lods
xchg
fwait
lods
mov
jmp
push
mov
xor
test
fwait
pop
sbb
jecxz,pt
out
push
jmp
lods
dec
fs
testl
jns
rol
jae
sbb
sbb
push
fwait
movsb
inc
sarl
popa
pop
pop
dec
and
rol
repnz
jne
jne
xor
imul
rorb
adc
ret
stos
pusha
dec
lret
inc
mov
mov
imul
int3
repz
push
mov
or
push
sub
mov
loop
mov
addr16
lds
push
push
xlat
imul
mov
cmc
jb
xchg
mov
pop
sbb
sarb
lock
out
mov
lods
sub
jmp
xchg
xchg
lahf
mov
cwtl
push
mov
pop
mov
xchg
inc
xlat
icebp
xchg
cmp
shrb
mov
pop
and
and
icebp
iret
sub
adc
dec
push
je
sbb
mov
mov
int3
and
ret
cltd
xor
mov
loop
mov
andl
dec
sbb
pop
lock
inc
mov
loop
or
and
add
aas
dec
pop
ss
sti
sbb
clc
sahf
daa
adc
push
inc
and
xor
mov
pop
cmp
rorb
push
and
mov
dec
push
jmp
cmp
push
or
test
xchg
adc
cmpsb
inc
push
mov
sbb
jno
jne
adc
adc
mov
inc
pop
or
fucomi
scas
push
test
jp
inc
and
pop
or
mov
push
lds
dec
mov
movsl
arpl
pop
jmp
add
add
stos
jle
lahf
repz
sbb
cmp
add
ret
into
dec
les
repz
ret
pop
jmp
ret
outsb
push
loopne
adc
push
je
and
clc
repnz
outsl
inc
sub
dec
lea
call
mov
lods
or
mov
inc
xor
mov
popa
and
jmp
inc
push
push
xorl
mov
xlat
xchg
das
out
movsb
shlb
idiv
cwtl
xor
jp
xchg
out
js
and
fisubrs
push
push
shlb
push
pop
addl
mov
dec
xor
and
popa
pop
fnsave
xor
rcr
stos
mov
scas
rcrl
mov
fwait
sti
imul
mov
pop
imul
lods
ljmp
pushf
dec
cmp
orb
sbb
xchg
push
xor
pop
test
inc
bound
pusha
cltd
int3
sub
fmulp
mov
xor
clc
xchg
mov
add
daa
mov
lret
and
adc
xlat
roll
jne
cltd
dec
outsl
std
push
jnp
adcl
lret
xchg
clc
cld
ja
nop
lods
lret
clc
sahf
gs
addr16
mov
cmc
cltd
sahf
in
in
sub
dec
mov
sarl
inc
pop
sbbb
mulb
in
mov
adc
push
insb
sub
adc
nop
push
in
int3
in
or
and
pop
inc
popl
in
lret
incl
xchg
testl
push
mov
aaa
dec
jo
pop
push
xchg
shlb
xor
lea
aaa
into
pop
sub
lods
ljmp
popf
stc
sub
lea
sbb
mov
adc
sub
add
inc
mov
outsl
mov
xor
in
jge
inc
jmp
test
inc
hlt
pop
mov
lahf
movsl
call
mov
push
scas
mov
jmp
lods
ljmp
call
sub
or
scas
mov
xor
cmp
test
cmpsl
mov
int
sbb
out
xchg
mov
cli
inc
mov
push
rcl
out
js,pt
pop
lock
jnp
loop
popf
sub
shr
in
es
adc
or
or
and
jp
xor
ret
and
unpckhps
dec
shrb
scas
cld
mov
sarl
fs
out
int
cs
pop
repz
xor
scas
inc
pop
out
jae
inc
sbb
pop
and
and
or
arpl
outsb
push
ror
leave
loopne
pop
pop
jbe
xchg
mov
out
shll
adc
push
sar
xor
jmp
inc
sahf
popf
icebp
out
pop
cli
mov
jns
dec
pusha
ljmp
cmpsl
roll
shll
sub
push
aas
push
and
andb
ss
out
inc
push
xlat
stc
sti
pop
adc
xchg
add
orl
mov
leave
ret
gs
push
icebp
mov
add
pusha
daa
lret
das
dec
lods
jmp
repnz
mov
mov
mov
sbb
and
in
push
sbb
mov
popf
jle
or
cmp
cmp
mov
popa
xchg
lret
xchg
add
and
inc
and
in
add
movsl
or
cmp
push
xchg
sbb
loop
inc
and
mov
mov
repnz
mov
insl
mov
sahf
and
stos
inc
sbbb
fisttpll
cmp
enter
xor
pushf
aas
data16
jbe
add
int3
cld
call
xchg
sahf
iret
inc
les
and
sbb
aas
enter
fsubp
subl
bound
mov
in
subl
ror
loop
inc
shll
push
xor
dec
std
orl
lea
dec
push
mov
pop
imul
sbb
mov
mov
iret
sbb
xor
lea
cwtl
sub
rclb
test
scas
mov
je
popa
pushf
xor
xchg
sub
imul
push
aam
loop
fmull
fdivrl
fnstenv
hlt
aad
call
cmp
mov
jle
sbb
lds
sarb
imul
mov
je
inc
xlat
mov
insb
fidivl
or
pop
jge
jl
sub
or
fwait
in
mov
sub
mov
incl
jl
mov
jne
inc
imul
cmpsb
cmp
ljmp
and
fnsave
pop
scas
in
cltd
or
scas
push
repnz
push
movsl
push
scas
xor
push
into
sub
add
jbe
cmpsb
sub
dec
leave
push
and
inc
test
mov
loopne
std
rcll
movsl
cmp
dec
cwtl
das
inc
loop
add
mov
jne
push
cwtl
das
inc
popf
fwait
xor
fdivrs
lret
add
pop
repz
mov
jns
fstl
test
jecxz
pop
out
ss
mov
addl
test
fwait
arpl
outsl
daa
cmp
fidivs
lret
mov
repnz
inc
mov
pop
aaa
or
shrl
inc
fwait
xor
mov
xor
jmp
pop
sbb
and
or
jmp
inc
es
jno
push
out
dec
test
adc
insb
mov
insb
push
std
xchg
add
jnp
xlat
insb
ror
jae
inc
and
dec
in
je
mov
cltd
xchg
add
pushf
mov
pop
icebp
mov
xor
adcl
dec
fs
inc
leave
daa
push
and
or
inc
push
out
add
dec
mov
xlat
clc
mov
es
mov
enter
dec
xchg
lea
adc
adc
call
fbld
mov
aaa
in
jnp
inc
lea
jns
addl
loop
insl
dec
std
xor
enter
push
sub
jg
pushf
push
jno
loope
push
stos
sub
stc
and
cmc
mov
inc
cmpsl
test
incl
lcall
pop
xchg
add
clc
insl
mov
adc
push
jp
pop
rorb
or
ja
add
stc
xchg
cmp
inc
adc
pusha
xchg
sbb
cmc
sub
pop
push
enter
mov
mov
movzbl
out
test
stc
arpl
cmp
jge
cld
push
outsl
iret
sbb
cli
push
jmp
xchg
add
jmp
aam
scas
inc
cmp
cli
xchg
sbb
inc
or
mov
mov
or
adcb
jne
dec
test
ret
call
sahf
push
les
shrl
pop
push
and
cli
out
mov
xor
outsl
loopne
add
nop
nop
daa
ret
rorl
aam
rcrb
cmpsl
push
insl
dec
pop
stos
inc
jns
mov
and
dec
aad
dec
or
and
xchg
sub
mov
dec
pop
dec
loop
pop
push
andb
mov
sbb
fimuls
mov
dec
mov
iret
push
leave
add
lock
pop
popf
mov
repz
or
scas
pop
loop
jecxz
push
mov
daa
mov
dec
mov
cmpsl
xchg
inc
or
push
sbb
jae
insb
sub
sbb
scas
mov
addr16
jns
pop
mov
lods
push
adc
gs
jb
addr16
lret
test
adc
ud2
xor
cli
sub
xchg
add
cwtl
adc
loopne
fwait
jo
cmc
push
outsb
sub
shrl
dec
orb
movsl
pop
sub
mov
fldl
loop
sub
out
adc
push
cltd
je
push
cmp
arpl
mov
push
sub
pushf
xor
sbb
and
enter
or
dec
push
push
inc
iret
cmpsl
and
daa
aam
leave
sub
movswl
scas
movsl
andb
fwait
jge
in
filds
or
push
or
xchg
sub
arpl
repnz
enter
add
add
arpl
into
and
pop
xchg
cmp
addr16
mov
dec
aam
jg
push
inc
addb
and
ljmp
minps
js
jb
mov
dec
out
inc
pop
cltd
fs
mov
cs
or
pop
test
les
jmp
push
push
lods
test
mov
or
cs
test
mov
pop
adc
xlat
mov
lods
in
mov
test
call
repz
xchg
push
sub
sub
pop
sar
or
and
push
push
lret
scas
dec
fimull
push
jmp
add
push
xchg
ret
xor
imul
fistpll
test
lret
pop
and
pop
repz
fldenv
ret
stc
jp
scas
xor
push
repnz
in
cmp
and
mov
jne
and
test
ds
mov
lods
insl
dec
shll
pusha
push
insb
xchg
adc
in
sarl
repz
xor
cmpsb
inc
cmp
lret
mov
leave
pop
xor
add
cmpsl
cwtl
mov
xor
cli
lret
push
push
add
fmul
shl
stc
negl
jle
mov
in
insl
sub
add
xor
ret
mov
aam
cmp
mov
mov
insb
mov
sbb
or
orb
inc
addl
aaa
subb
and
in
adcl
sub
pop
and
movsb
xchg
dec
hlt
popf
shrl
notb
idivl
xor
fcomps
and
and
push
in
push
xor
jb
mov
testl
pop
imul
xchg
xor
rorb
scas
push
int
fwait
adc
stos
sbb
test
cmp
pop
out
mov
repnz
data16
push
aam
data16
xorl
and
lods
in
pop
xchg
inc
mov
imul
stos
in
pop
cwtl
push
mov
imul
in
mov
cld
bnd
xchg
cbtw
jp
inc
mov
js
aaa
xchg
mov
jle
jae
push
addr16
pushf
stc
dec
fs
pop
cmpsl
pop
andb
imul
insb
jne
jns
jns
outsb
lcall
movsb
xchg
cmpsl
movsb
lock
sub
and
mov
leave
pop
add
sub
xchg
add
mov
in
std
inc
sbbl
mov
xor
or
cmpsl
mov
scas
inc
data16
stos
inc
xor
inc
jecxz
aaa
mov
and
push
jle
push
mov
in
sub
sahf
pop
out
push
push
clc
push
jmp
jb
bound
or
insb
adc
fsts
dec
bt
fnsave
pop
cli
sub
adc
push
sub
xchg
jg
daa
mov
mov
imul
lods
cmc
pop
lahf
ror
mov
std
lock
stos
sbb
shll
gs
icebp
jmp
sti
add
mov
aas
cwtl
jp
inc
push
es
fs
push
push
stos
nop
lahf
push
xchg
inc
or
in
lods
mov
mov
mov
je
adc
cmp
mov
test
scas
fwait
nop
arpl
push
shlb
jp
arpl
and
pop
pop
and
loope
cli
mov
jl
mov
or
mov
mov
adc
pop
insl
add
inc
pop
and
fildl
fisttpl
push
aam
pop
and
ds
ret
imul
fsubrs
movsb
fnsave
xchg
inc
pop
in
mov
int
sbb
lcall
sub
outsb
pop
outsl
lahf
stos
lods
fwait
mov
push
pop
fldenv
pmovmskb
jns
mov
scas
aam
sub
sarb
fistpl
int3
xor
fsubrs
imul
repnz
je
adc
mov
call
int3
add
daa
push
jmp
fs
or
loopne
testb
xchg
shrl
leave
sub
inc
repz
sub
hlt
bound
cs
inc
pop
sub
xor
add
xchg
inc
adc
xchg
mov
add
insb
iret
pop
daa
ljmp
push
sbb
xchg
imul
push
jne
repnz
repnz
pop
fsub
mov
movb
mov
test
pop
and
pop
adc
sub
fucomp
arpl
rcll
mul
int
pop
adcl
jp
adc
insl
inc
mov
add
xlat
aad
cmc
sub
cmpl
or
loope
call
gs
mov
adc
ss
mov
push
sti
xchg
cmpsb
cmp
cwtl
mov
pop
and
cmp
inc
pop
aaa
inc
and
mov
pusha
sbb
or
jp
adc
lock
sub
in
or
mov
popa
outsl
inc
cmp
enter
loope
les
xor
jo
data16
xlat
mov
mov
dec
arpl
ds
push
cmp
xchg
out
loope
sbb
lret
mov
stos
mov
andl
xor
lea
adc
insb
xor
jmp
jb
mov
jb
pop
and
jp
or
sbb
pop
jmp
outsl
cmp
sub
and
out
sub
pop
scas
ds
jbe
push
daa
ficompl
mov
jl
ret
mov
shll
outsb
ret
pop
sub
shrl
int3
and
icebp
jns
pop
das
inc
test
adc
mov
push
clc
adc
xor
mov
es
mov
lcall
jns
dec
or
popa
adc
movsb
mov
repnz
mov
or
cs
lcall
jb
lock
decb
cmpl
stos
std
mov
mov
shlb
jp
mov
decl
mulb
cmp
ss
xor
sahf
and
xchg
ljmp
mov
pop
test
pop
nop
sti
stos
leave
xor
sub
gs
int3
fnsave
adc
mov
sti
jb
or
in
daa
lret
and
int3
and
inc
scas
not
imul
and
fdivrl
jae
jp
mov
mov
inc
xchg
jge
mov
int3
lret
shrl
jmp
in
shlb
push
pushf
and
dec
xchg
jp
cld
stos
insb
jo
sbb
mov
idivl
pop
adcb
jecxz
cmpsl
pop
pushf
repnz
push
test
fildl
add
mov
push
jge
repz
movsl
cmp
xchg
mov
ret
mov
dec
cmpl
inc
sbb
push
inc
fdivl
out
dec
fchs
add
pmuludq
vpermi2d
inc
std
andb
orl
data16
ret
and
xchg
inc
aas
nop
hlt
adc
sbb
push
sub
xchg
lods
loop
mov
repz
les
xor
addl
aaa
adc
mov
push
pcmpgtb
xor
repnz
repz
add
or
xor
shrb
repz
addr16
cwtl
dec
loop
ja
xor
stos
mov
cmpsl
lret
ret
stos
sbb
push
push
lods
mov
inc
mov
iret
shl
xlat
js
xor
aaa
into
divb
xlat
jbe
sahf
push
cwtl
inc
jo
aaa
lret
pop
movsb
push
fnstenv
ljmp
cmp
push
add
or
test
cmc
das
ret
loope
cmc
push
mov
fldl
enter
jno
adc
idivb
adc
ja
add
pop
cmpsl
xchg
push
inc
push
enter
mov
out
xchg
push
lea
into
rcrb
enter
jne
insl
sub
jb
rcll
in
cmc
cwtl
sbb
adc
popa
inc
xor
pop
lret
jnp
mov
cmp
mov
stos
loopne
mov
pop
in
cmc
cwtl
jae
push
mov
pop
loope
pop
cwtl
jae
clc
xor
pop
add
and
in
push
adc
orb
jge
out
adc
cld
jl
xor
xor
mov
call
test
enter
pop
and
and
push
sub
into
fstpt
xlat
lods
cld
push
jne
rorb
cmc
insb
mov
push
daa
pop
rcrb
push
scas
dec
test
xor
loop
sti
in
test
repz
cmp
loopne
cwtl
cmc
daa
cmp
std
negl
outsl
mov
add
icebp
and
aaa
fidivrs
inc
inc
sub
dec
add
xchg
adc
push
sti
mov
ss
pop
inc
ljmp
or
mov
mov
sbb
nop
mov
out
outsb
popf
and
adcb
inc
and
fbld
jmp
xor
jg
popf
popf
xor
push
daa
mov
mull
rclb
pop
cld
xchg
xchg
mov
gs
jae
insl
int
dec
in
mov
ror
lods
dec
mov
mov
push
lahf
lea
into
lcall
insb
jo
movsl
cmp
jmp
scas
cmp
out
fwait
pop
mov
out
ljmp
jno
loop
popa
mov
clc
pop
pop
scas
dec
pop
lods
scas
dec
fsubr
dec
shlb
adc
clc
adc
inc
xchg
notb
pop
mov
mov
jl
imul
xchg
stos
dec
fsts
gs
inc
xchg
mov
jb
mov
mov
in
pop
mov
popf
push
pop
fnstenv
ss
cmp
aas
rcll
icebp
mov
test
sbb
dec
cs
cmpsb
mov
lds
and
jge
pop
cmpsl
dec
insl
shl
daa
les
push
insb
jl
clc
push
in
dec
mov
or
sbbb
adcb
xor
xchg
outsb
pop
add
cmc
sbb
cli
push
call
jo
inc
std
addr16
sub
push
pusha
pop
and
pop
xor
inc
into
xor
add
mov
or
xchg
lret
push
lods
cmp
cmp
mov
xchg
pop
lahf
fcmovnu
popa
push
jmp
sub
data16
inc
out
inc
cmpsl
cmp
pop
xor
call
push
fimuls
mov
xchg
lock
repnz
mov
cmp
push
cs
rol
cmp
aad
xchg
sbb
mov
pop
xorl
outsl
cmp
nop
scas
aas
mov
push
sti
xlat
outsb
in
icebp
push
addr16
xor
xlat
gs
lcall
jne
add
scas
outsb
cmc
sbb
jbe
add
mov
pop
xor
pushf
dec
addb
inc
cmp
xorb
xor
sub
jo
dec
gs
push
pop
insb
popf
inc
sub
faddl
inc
into
jecxz
sarl
mov
es
test
scas
popa
jnp
aam
jmp
mov
fstpt
pop
lods
repnz
bound
push
test
cvttps2pi
ds
loop
pushf
out
cmp
ljmp
ficoms
adcb
dec
sub
je
stc
sub
movsb
cmp
aam
pop
and
push
sub
and
arpl
outsl
adc
test
test
out
repnz
sub
test
sbb
insl
mov
lret
mov
push
in
out
xchg
out
adc
scas
mov
xorb
add
gs
pop
add
pop
cmpsl
test
mov
outsl
mov
or
imul
mov
in
push
dec
add
stc
and
pop
cmp
dec
and
subb
fidivs
out
adc
mov
je
test
adc
es
js
int
inc
mov
popf
outsl
test
fcomps
push
pop
test
sub
call
or
or
ja
test
data16
cwtl
mov
pusha
mov
addb
out
or
xor
push
push
pop
sbb
mov
fildl
xor
cmpsb
cmpsl
movsl
lock
cmpsb
xchg
mov
icebp
std
xlat
orb
sti
test
add
iret
jne
adc
rcl
test
loop
out
int
xor
ja
push
xchg
push
mov
adc
call
andl
push
arpl
lods
mov
repnz
subb
out
xor
or
les
test
cli
cmp
cmp
push
shll
int
push
add
pusha
lods
sub
ljmp
das
sbb
shl
add
data16
test
jb
outsl
jne
jle
mov
jl
ret
inc
pop
xor
jecxz
out
cmpsl
sti
push
popa
std
aas
imul
jb
add
pop
repz
mov
pop
adc
fistpl
arpl
insb
shlb
mov
sbb
lods
mov
pushf
dec
data16
cmp
pop
test
sub
cmc
lret
xchg
dec
gs
and
aas
or
insb
mov
mov
pop
daa
push
iret
dec
inc
cmc
mov
incb
sbb
dec
lcall
dec
aaa
shl
xor
gs
scas
push
push
daa
or
or
dec
icebp
xchg
lret
dec
or
mov
mov
arpl
jmp
add
andl
insl
push
and
push
movsl
fsubs
cmpsl
xor
out
jnp
add
xchg
or
mul
hlt
mov
xchg
sti
pop
or
bound
push
lods
mov
or
jg
sbb
jmp
lods
adc
fxch
gs
xacquire
xchg
cmc
icebp
dec
test
inc
iret
out
fwait
std
push
mov
pop
fistpl
lods
cs
dec
inc
into
cmp
mov
adcb
jmp
fucomp
in
fsubs
dec
push
ljmp
jb
dec
cwtl
int3
jg
out
mov
push
ds
jg
repz
jge,pt
inc
nop
imul
div
xor
push
push
clc
cmp
mov
and
and
push
xchg
outsb
rsm
jnp
insb
dec
push
dec
test
fwait
mov
jno
mov
stc
adc
jae
outsb
movsl
sbbl
jnp
repz
mov
xchg
pusha
testl
and
btr
into
and
xchg
push
addr16
push
cmp
decb
cmpsb
add
jecxz
cmpsl
jae
fmul
dec
add
dec
pop
jecxz
xor
mov
dec
xor
push
jne
mov
and
xorb
or
dec
loopne
les
cmp
inc
and
xchg
jne
xlat
mov
stos
pop
mov
ds
mov
mov
cwtl
shll
dec
mov
dec
out
xchg
jg
aad
pop
mov
mov
unpcklps
adc
mov
xor
push
push
sbb
jle
fcoms
pushf
xor
arpl
cmpsb
mov
pop
shl
mov
fnstcw
inc
cmp
pusha
scas
in
je
xorb
loope
das
xchg
lock
cld
adc
mov
daa
inc
imul
dec
pop
loop
and
addr16
lahf
data16
fidivs
xor
push
jmp
gs
cmp
insb
push
cmc
mov
push
repz
out
inc
mov
pop
shr
mov
push
cltd
repz
and
rorl
jecxz
loop
bound
dec
cld
stc
inc
outsl
adc
xchg
fdivl
cli
push
cmp
sti
fwait
cmp
sub
fidivrs
iret
xchg
daa
push
repnz
mov
scas
nop
mov
stos
push
fistl
movsl
inc
sbb
out
je
cld
jge
int3
pop
cmp
pop
jne
gs
ljmp
sub
test
mov
jne
mov
mov
add
bound
dec
pop
icebp
cwtl
push
sub
adc
scas
add
push
dec
repz
ret
sub
scas
in
lods
sub
xchg
fildl
add
xor
idivl
jle
sub
std
cmp
mov
pop
test
push
mov
andl
push
call
sub
addl
pop
or
cs
mov
pop
insb
mov
sub
int3
jae
stos
in
daa
pop
jae
jns
andb
and
inc
movsb
cwtl
inc
xor
jl
enter
outsb
fildll
leave
fisubl
leave
ss
outsb
repnz
in
jl
mov
pop
mov
pop
push
jge
fwait
daa
jae
push
sub
xchg
xor
dec
pop
xchg
insl
push
scas
dec
lahf
xchg
add
out
cmp
and
ret
pushf
add
mov
shll
cwtl
ficompl
sub
xor
cld
cmc
aaa
dec
daa
fiadds
pop
or
adc
xchg
add
cmpsb
fwait
mov
xor
sahf
xor
iret
addr16
movsb
dec
popa
mov
test
sub
sub
aad
sub
cmp
sbb
in
mov
ja
shrl
rcl
push
negl
nop
fadd
in
push
push
add
imul
sbbb
and
jo
pop
subb
lods
sahf
jecxz
iret
or
imul
add
and
fstpt
sbbl
ja
jmp
pop
xor
jmp
push
inc
fsubrl
pop
fldl
xchg
sub
imul
pop
inc
xor
ljmp
pop
insb
jmp
mov
movsb
pop
js
or
decb
sub
push
jno
into
sbb
push
out
test
push
pushf
test
sbb
mov
or
fs
sub
out
adc
clc
test
mov
lahf
stos
push
in
fwait
lea
jb
mov
sbb
pop
add
pop
cwtl
jb
mov
orl
push
les
pop
xor
int3
mov
jl
or
xor
sub
sbb
add
popa
scas
or
xchg
jl
cmpl
frstor
xchg
mov
lds
mov
shll
aam
and
std
jg
lea
hlt
add
test
sub
std
mov
mov
stos
xor
sbb
call
mov
cmpsb
lahf
or
jle
xor
jmp
xor
add
push
int
lea
jmp
xor
jne
mov
lret
or
js
dec
sub
dec
fstps
cmp
dec
cmp
sub
xor
movsb
cmp
jg
les
mov
lret
int3
int3
xor
inc
xchg
and
mov
rclb
mov
cmp
js
xchg
js
popf
sarl
mov
bound
test
adc
int
loop
jno
add
adc
jmp
xor
lret
dec
arpl
inc
popf
aas
fs
jbe
test
insb
add
mov
loopne
orl
mov
dec
out
leave
mov
into
stos
ljmp
mov
jno
in
or
data16
cmp
in
and
and
xchg
andb
dec
in
jae
mov
into
outsb
mov
xorb
lea
outsb
sub
ret
arpl
jno
les
or
dec
loop
pop
mov
enter
inc
inc
mov
not
push
sbb
push
inc
pop
or
pop
add
sbb
inc
push
es
dec
insb
mov
dec
push
push
mov
push
shrl
cmp
xchg
xchg
mov
pop
jne
jge
ficoml
lods
pop
and
or
mov
and
mov
or
or
das
sbb
hlt
lods
pop
add
and
mov
mov
sub
fimull
jle
out
sub
xor
jle
cmc
xchg
mov
push
sbb
xchg
xchg
jmp
aaa
sub
dec
inc
xchg
xlat
mov
sbb
mov
mov
ljmp
dec
jl
dec
push
out
rcr
jle
cmp
aas
fisubl
add
cmp
and
xchg
imul
jnp
ret
push
cmp
scas
lock
int3
popa
xor
xchg
enter
push
jmp
mov
lahf
out
dec
repz
hlt
push
or
out
mov
inc
push
push
notl
int3
add
aas
jbe
mov
mov
xor
jne
cmp
mov
nop
addr16
hlt
pop
fldenv
jb
mov
push
jne
loopne
pop
add
xchg
std
xchg
add
dec
push
incb
into
jb
jg
pop
popa
mov
xor
shr
mov
mov
xchg
pusha
jg
leave
add
and
push
outsb
ror
fsubl
loop
or
out
dec
dec
in
xchg
iret
pusha
adc
xchg
call
mov
jnp
lock
dec
cli
andl
xchg
popa
add
loope
imulb
lea
sbb
adc
sub
mov
repz
cmpsb
rcrl
cmpsl
add
iret
mov
adc
test
mov
jno
ret
lret
add
push
les
call
sbb
out
ds
sahf
repz
mov
adc
das
popa
cmpsl
imul
test
lret
adc
pop
loope
lock
xchg
xchg
pusha
pop
pusha
push
repnz
adc
cli
dec
data16
cwtl
push
cltd
xor
int3
adc
movsb
jecxz
mov
sub
int
adc
int
iret
fwait
inc
mov
hlt
test
and
mov
daa
nop
jne
inc
pop
aam
and
into
les
jns
xchg
sub
fisttpl
mov
jnp,pt
fldcw
js
cmpsl
mov
cmp
push
adc
mov
shlb
jle
cvtdq2ps
jle,pn
pop
testl
mov
cmp
in
mov
adc
mov
mov
outsl
adc
cwtl
jae
pusha
cmpsl
imul
dec
fwait
jbe
mov
pop
out
loope
fsubr
lahf
xor
dec
mov
jnp
test
pushl
dec
xchg
xor
aas
push
jge
add
xchg
out
lds
xchg
ljmp
mov
into
movsl
pop
inc
mov
push
fisttpl
scas
and
inc
nop
ljmp
and
and
cli
xchg
stos
inc
iret
xchg
stos
outsl
or
inc
pop
sbb
outsb
ret
jl
lret
leave
jae
mov
inc
icebp
adc
mov
test
iret
and
add
fs
imul
push
jp
sub
xor
add
xchg
add
dec
jb
ja
addr16
fisubrs
and
xchg
jne
cwtl
das
stc
mov
rdpmc
mov
jmp
mov
cmp
fwait
xchg
cwtl
and
and
or
into
fiadds
movsb
xchg
or
lahf
sbb
bnd
dec
lods
fadds
dec
pop
jle
cmp
mov
or
fisttpl
mov
sbb
push
insl
jnp
in
mov
lcall
mov
push
push
insb
ljmp
imul
xor
ja
dec
pusha
pop
lahf
movl
cmp
push
lods
ffreep
inc
pop
sti
aaa
scas
inc
imul
lock
push
fwait
adc
ss
cli
test
cmc
adc
dec
push
in
and
out
and
inc
pop
xor
aas
movsl
xor
jge
adc
push
adc
cmpb
mov
fidivs
scas
add
fcmove
les
jo
xchg
out
es
outsb
std
push
popf
loopne
jnp
mov
and
outsb
ja
xlat
mov
push
lcall
enter
les
pop
dec
loop
pushf
les
into
bound
iret
mov
xchg
pop
and
mov
test
sub
inc
cmpsl
push
ds
pop
movsl
loopne
mov
insb
ljmp
out
repnz
int
arpl
cmp
daa
pop
pop
xchg
sub
sub
jo
leave
dec
das
mov
pop
or
xlat
cmp
and
test
push
mov
jo
mov
xchg
add
dec
add
sub
mov
xchg
jmp
sti
fucomp
fistpll
mov
sub
loope
xchg
stos
divb
fcoms
sahf
push
and
and
aas
enter
xchg
mov
ja
push
lods
addr16
dec
xchg
dec
mov
rolb
cmp
in
je
test
or
cli
out
lock
sub
stc
push
jbe
or
sub
std
movzbl
iret
dec
in
jmp
jmp
and
testl
xchg
aad
dec
test
lret
jno
data16
scas
mov
cltd
jmp
fsincos
xchg
lret
pop
inc
call
movsl
leave
das
pop
out
jnp
in
inc
fcmovu
and
or
xor
lock
outsl
out
adc
mov
jno
jb
mov
mov
in
in
outsb
repz
sbb
mov
roll
in
call
cmc
inc
lcall
test
add
call
cmc
mov
or
jge
sbb
cltd
in
std
xchg
outsb
cmp
fucomp
ret
lods
push
jmp
test
pusha
lods
dec
shll
jmp
lock
in
ljmp
arpl
in
mov
in
decb
sbb
pop
out
fdivl
mov
and
mov
sbb
cltd
scas
add
xlat
push
ret
loop
push
pop
ja
inc
pop
mov
out
jle
xchg
lods
lahf
out
lahf
jns
imul
repnz
test
ds
icebp
mov
pusha
and
adc
outsb
aas
dec
in
loope
outsl
add
sub
arpl
hlt
mov
clc
imul
cs
sbb
stos
hlt
gs
push
xchg
scas
jg
shll
in
insl
sub
sub
dec
mov
jg
mov
clc
ljmp
mov
lahf
mov
sarb
ret
dec
inc
dec
or
add
imul
mov
adc
sbbl
ja
inc
mov
gs
jno
mov
or
inc
pop
sbb
ror
push
inc
test
fisubrs
scas
push
xchg
sub
imul
fsincos
adc
xor
push
inc
int
xchg
sbb
hlt
jmp
mov
repnz
sbb
addl
lret
notb
mov
xorb
jl
sti
sub
inc
sbb
mov
xchg
push
adc
dec
out
xor
add
inc
push
adc
loope
add
imul
jg
cmp
xchg
outsl
mov
gs
lods
inc
cmc
subl
test
inc
pop
fwait
bound
sub
jge
fnsave
or
mov
adc
fs
inc
fisttpll
notl
xor
jmp
add
mov
jp
lods
jo
jno
dec
mov
sub
push
leave
repz
or
pop
xor
mov
cltd
repnz
cmc
add
adc
mov
loop
push
ljmp
pop
mov
pop
bound
sar
or
sbb
movsb
repnz
insb
flds
xchg
dec
xorl
loope
cmpl
imul
xchg
mov
test
inc
pop
test
push
sub
pop
std
pop
scas
cmpsb
or
or
xor
mov
sbb
pop
outsl
fmull
or
nop
cmovge
loopne
dec
gs
jb
test
cmp
into
loope
push
les
aas
nop
sbb
pop
jno
test
jge
in
cmp
pop
jle
or
int
sbb
sub
leave
pop
or
mov
or
mov
out
scas
mov
or
dec
popa
mov
rcll
mov
aad
sub
in
cmp
out
jnp
lret
lcall
outsl
les
std
insb
data16
test
dec
loop
cli
std
dec
mov
dec
out
cmp
lods
xchg
adc
dec
dec
lret
icebp
loopne
jo
out
imul
push
subl
outsb
dec
cld
dec
repz
jmp
cmp
cmpsl
xchg
test
push
xchg
shl
mulb
mov
sahf
fwait
sub
adc
int3
pop
push
jmp
mov
fisubs
pop
adc
jae
xor
add
lock
xlat
jmp
mov
sub
mov
test
sbb
stc
xchg
inc
stos
daa
iret
aam
fs
insb
mov
outsl
movb
lret
cmp
xor
fldcw
pop
jle
lock
add
in
mov
ja
jo
sub
mov
sub
loope
dec
bound
mov
fwait
jecxz
sub
in
dec
mov
jns
sub
push
mov
cmp
cwtl
jo
int3
cmp
xchg
adc
pop
mov
pop
push
fisubs
leave
jae
push
sbb
and
fnstcw
fwait
mov
pop
adc
data16
push
mov
adc
ss
push
add
cmp
int
xchg
mov
movsb
cmpsb
es
aaa
mov
clc
out
sbb
push
and
bound
pop
push
mov
add
jmp
notl
push
fisttps
ret
in
ljmp
xor
test
jb
mov
rorl
cmp
out
call
std
push
in
lods
jp
test
shlb
pop
cmc
loop
addr16
aam
fsubrs
in
int
scas
popl
rorl
sub
pusha
aaa
movsl
dec
icebp
xor
repz
sbb
and
ss
lods
mov
aaa
inc
fsubrs
incb
dec
fdivl
dec
lcall
add
or
push
outsl
lds
mov
and
push
push
inc
push
loope
pop
scas
inc
dec
gs
in
test
xor
cltd
or
xchg
pusha
ss
mov
lock
or
jns
pop
stos
pop
movsl
xchg
sbb
mov
cmp
lock
sub
add
je
mov
cmp
rol
sbb
sbb
xor
and
push
popf
jmp
jae
lret
inc
mov
and
clc
sub
decb
xchg
in
arpl
mov
test
inc
mov
push
imul
push
gs
negl
mov
call
jge
mov
pop
ret
jnp
adc
into
mov
je
gs
sub
inc
movsl
sub
inc
testl
adc
mov
mov
sub
mov
mov
xor
arpl
rorb
sub
or
cs
pop
in
mov
loope
mov
cmp
dec
cmp
repz
pushf
xor
sbb
xor
inc
mov
bound
and
fldenv
xchg
rcrl
pushl
xor
shll
pop
jmp
test
arpl
jp
pop
popa
mov
cltd
adc
decl
jo
jbe
inc
mov
pusha
ss
sub
out
loop
dec
dec
pop
rorl
clc
xchg
push
lahf
pop
pop
inc
xor
xchg
push
mov
inc
jbe
loop
cld
mov
push
cs
ret
jmp
out
jge
jns
mov
jns
mov
xor
cmp
pop
and
inc
sbb
pop
je
es
xchg
lcall
out
imul
cmp
cmp
cmc
adc
scas
sahf
lods
inc
dec
test
sub
mov
push
mov
dec
popa
movsb
repnz
inc
invd
jecxz
and
icebp
loopne
dec
in
add
sbbl
shlb
icebp
add
mov
rcl
repz
cmp
sub
mov
lds
xor
sub
inc
aam
jae
inc
fs
pop
ja
lock
movlps
cmp
lret
mov
lods
shll
mov
jo
mov
movb
insl
cmc
mov
outsl
imul
push
mov
xchg
fmull
sahf
jle
js
cmp
inc
adc
push
sbb
lea
lods
push
cmp
jae
insb
out
push
hlt
cmp
add
aad
sub
stos
ret
cmpxchg
mov
cmp
xchg
fidivrl
sub
mov
mov
mov
or
fwait
mov
fsubl
mov
inc
jge
js
mov
push
notl
aad
cmp
mov
pop
push
dec
push
and
jg
cld
mov
mov
arpl
sbb
inc
fisubl
mov
jle
addr16
mov
stos
xor
jbe
into
jo
mov
mov
mov
cmp
push
imul
xchg
dec
pop
xor
inc
iret
mov
int3
fsubs
dec
push
imul
fidivl
sbb
dec
adc
les
sahf
in
fcmovnb
addb
enter
nop
test
addr16
call
in
mov
into
inc
xor
jnp
in
rolb
sbb
ds
mov
pop
aas
sub
ss
testl
xor
pmaxub
aaa
fsts
das
xor
aam
cltd
in
inc
fstpl
daa
das
pop
pop
push
aas
push
fst
inc
fidivrs
gs
mov
shlb
rcrl
push
test
inc
in
dec
push
out
jg
dec
insl
hlt
adc
cmc
mov
lea
repnz
adc
iret
mov
push
out
negl
sbbb
repz
in
sbb
jecxz
mov
mov
cmp
xor
mov
movsl
push
sub
adc
xchg
inc
pop
enter
nop
mov
jns
aam
pop
dec
push
adc
stos
xorb
lahf
mov
pop
sbb
cmp
and
sbb
movsl
outsb
or
popa
inc
sub
fisubrl
inc
fstpl
ret
push
test
sbb
dec
xlat
jb
dec
jmp
in
test
xor
cmpsl
je
rclb
and
pusha
test
cmp
inc
adc
addr16
lret
fstl
inc
jno
pop
test
jne
add
js
and
or
pop
mov
insl
pop
pop
xchg
sbb
loope
dec
adc
std
cmp
pop
imul
das
pop
mov
outsb
jecxz
jbe
cmp
cmp
roll
push
xchg
pop
in
xchg
push
adcl
inc
lcall
lock
add
les
xchg
bound
or
icebp
nop
pop
insb
pop
push
mov
mov
adc
sub
adc
and
movsb
sub
out
jle
aaa
cmp
imul
loope
ret
aas
enter
sub
and
add
std
dec
pop
filds
stos
add
cmpsb
xchg
jmp
leave
mov
shll
rcrl
imul
loopne
mov
negb
add
and
enter
sub
fcoml
dec
mov
lcall
and
loopne
mov
adc
mov
test
xor
lea
inc
sahf
shl
lea
out
mov
push
enter
adc
aad
inc
or
lcall
sbb
sti
add
jb
add
pop
outsl
inc
mov
les
mov
xchg
aaa
inc
lret
shr
xor
scas
mov
in
pusha
xchg
sbb
jo
fdivs
adc
and
dec
cld
xchg
sbb
sub
stos
fldenv
insb
bound
std
mov
in
jnp
xor
cli
mov
sub
push
stc
push
hlt
iret
das
movb
hlt
push
sub
dec
lods
inc
jge
pushf
jns
mov
mov
addr16
int
cmp
xor
inc
call
cmc
inc
das
cmp
ss
int
mov
and
pop
push
adc
loopne
push
imul
das
sahf
xchg
stc
mov
add
popa
je
sub
pop
clc
push
pop
adc
dec
iret
sub
lea
mov
pop
adc
adc
ret
test
lret
mov
sub
mov
ret
fnsave
gs
mov
adc
dec
pop
pop
pop
xchg
addr16
and
lds
jmp
dec
aam
testb
dec
dec
mov
cld
push
movsl
mov
in
push
and
cwtl
jp
mov
cmpsb
out
test
std
sub
fcomip
adc
imul
pop
jecxz
or
int3
mov
mov
shll
repnz
add
inc
fldl
aas
frstor
pop
cwtl
incb
or
and
loope
inc
pop
jg
enter
pop
hlt
fsts
mov
push
decb
cmp
mov
int3
push
adc
xchg
inc
cmc
fidivs
addr16
cltd
jmp
push
sbb
or
stos
cmp
in
aam
jp
inc
mov
pop
sahf
pop
pop
xor
cmp
jp
mov
inc
loopne
jns
sub
dec
imul
imul
fnstcw
cs
and
pop
aad
jle
jg
mov
in
in
je
fistps
call
inc
cmp
iret
ljmp
add
xchg
xor
mov
push
jb
out
push
jbe
dec
adc
jb
ds
push
ja
dec
mov
pusha
enter
sbb
fmul
inc
lcall
inc
lock
fdivl
insb
inc
pop
popf
lahf
mov
les
add
xor
cmp
cs
xlat
cmc
mov
ret
pusha
int3
mov
enter
push
jmp
push
aas
pop
jno
jo
lods
push
pop
cmp
ss
fimull
mov
inc
and
scas
xchg
aaa
loop
push
movsb
aas
test
out
or
out
mov
jne
js
je
ret
xchg
or
sub
jge
sub
cmc
mov
xor
jp
xor
icebp
xchg
incl
adc
xor
sbb
out
ret
or
in
pop
push
or
push
sbb
fstpt
and
sub
pop
mov
or
mov
imulb
repz
das
dec
cmp
jmp
push
cmp
or
push
movnti
int3
push
test
in
add
cld
add
loope
iret
fsubrl
mov
push
rcrl
mov
mov
jo
pop
popf
sbb
jbe
dec
popa
dec
or
inc
or
jae
aaa
inc
sub
xchg
leave
shrl
push
lea
aas
mov
add
dec
mov
cs
rorl
out
jo
loopne
push
dec
or
sub
and
sbb
icebp
inc
cmpl
or
aad
mov
xor
popf
je
lods
dec
push
lret
sti
sub
pop
fiaddl
test
in
add
outsl
cwtl
pop
ljmp
jg
mov
mov
test
adc
dec
or
xchg
out
inc
sub
or
fidivs
xor
mov
je
shlb
mov
enter
stos
jmp
jo
push
incb
pop
xor
inc
scas
inc
aas
xchg
jnp
or
xchg
incb
lock
arpl
xchg
adc
push
popa
mov
fidivrl
mov
xor
nop
mov
pop
xchg
sti
aad
iret
bound
pop
adc
daa
scas
call
leave
imul
cwtl
movsl
dec
xlat
jle
ret
rcrb
add
sub
mov
sbb
scas
fisttpll
cli
cmp
jns
cmc
jl
adc
pop
mov
test
in
sub
or
mov
xor
inc
inc
sbb
ret
shrb
push
mov
mov
int3
out
nop
rorl
cmp
pop
xor
int
int3
mull
pop
fcoms
dec
pop
dec
mov
mov
shlb
mov
idiv
cmc
test
xchg
out
pop
scas
sbb
jbe
and
cltd
aas
lods
sub
mov
shrl
outsl
pop
mov
push
inc
aas
out
lret
adc
xor
test
adc
rorb
mov
pop
push
cmp
xchg
out
outsb
in
jnp
and
rolb
cmc
inc
jns
enter
jmp
insl
jle
mulb
clc
mov
sbb
mov
fidivrs
rolb
loop
ss
pop
scas
jb
in
push
jbe
mov
punpckhbw
jns
clc
movsl
and
push
or
scas
out
std
gs
mov
jbe
ss
imul
inc
jns
out
dec
in
pop
es
xchg
mov
adc
jp
jecxz
sub
or
or
mov
dec
movq
or
stos
xor
movsb
sub
jmp
insl
jecxz
stos
mov
test
xchg
ret
shrb
push
push
mov
adc
inc
cmp
hlt
scas
mov
popa
dec
xchg
mov
xchg
enter
cmp
inc
insl
imul
inc
popf
jg
cmpsl
stos
sbb
xchg
cld
pop
jl
out
sbb
popa
shr
xchg
mov
imulb
mov
sbb
mov
dec
scas
ss
ret
dec
add
bound
sbbl
cwtl
adc
pushf
mov
add
test
and
jns
in
push
fisttpl
int3
cld
pop
int3
aas
rolb
cmp
out
jb
or
push
sub
jge
lret
movsl
xchg
inc
jae
inc
fsubrs
push
fs
movsl
addr16
shl
div
add
xor
iret
fidivrs
fsubr
test
xor
push
fmull
and
mov
lret
cmp
mov
pop
mov
inc
xchg
ds
iret
xchg
sbb
bound
out
cmpsl
pushl
adc
cmp
add
loop
aaa
clc
cmp
push
outsl
pop
fdivs
enter
cmp
pushf
and
xchg
outsb
aas
push
ret
nop
dec
dec
aam
sbb
dec
ret
adc
leave
sub
sub
inc
dec
push
aaa
repnz
fwait
imul
cmp
rclb
fs
fidivs
aad
mov
shrl
pop
push
mov
repnz
push
xor
xor
lds
fildl
aad
mov
jne
jbe
mov
jp
dec
pop
fbstp
imul
out
xorb
gs
test
and
das
ds
inc
jl
push
sub
mov
pushf
dec
xlat
addl
dec
cmc
loope
jle
hlt
aad
pushf
push
push
pop
js
in
es
es
cwtl
push
aam
out
xchg
ljmp
imul
les
inc
pop
and
inc
es
jmp
scas
dec
hlt
mov
rcl
out
cmc
sbb
xchg
lds
das
xchg
jmp
inc
xchg
mov
arpl
sub
xchg
sbb
repz
xor
movsb
push
cbtw
clc
push
mov
lahf
sbb
xor
add
out
dec
and
daa
jne
xchg
add
jo
insl
ss
inc
add
push
inc
dec
or
mov
jecxz
push
jnp
add
sbb
cmpsl
sub
jo
ror
fistps
pop
pop
xchg
add
push
popf
in
mov
and
mov
sbb
sbb
xchg
dec
dec
or
xorl
adc
fisubrs
xor
inc
cwtl
jo
jle
adc
dec
xchg
sbb
cmp
mov
dec
pop
sti
push
in
mov
int
mov
or
jae
and
push
xchg
adc
dec
ja
push
push
je
jae
xchg
pushf
mov
in
out
dec
aaa
and
rorl
repz
cs
push
or
sbbb
jnp
xchg
arpl
shrb
push
xchg
imull
fdivrl
xchg
fiaddl
in
lock
fisubrl
roll
jle
cmpsl
and
sbb
loope
inc
or
ja
stos
xchg
hlt
inc
daa
inc
inc
ds
negl
mov
sbb
fdivs
out
shrb
sbb
in
test
lret
cld
or
flds
lahf
fucomp
jne
fs
jb
push
in
daa
jb
or
mov
sub
mov
subl
jne
int3
xchg
ds
sbb
movsl
andl
or
loop
testl
push
mov
lds
or
icebp
mov
loopne
loopne
lcall
aad
popf
das
xchg
jo
orb
stos
dec
scas
setb
pop
add
sub
add
and
cmp
jne
adcl
movsb
call
push
outsl
jns
cmp
mov
add
mov
xchg
popf
insb
cld
loope
mov
test
or
or
mov
mov
adc
hlt
outsl
inc
inc
xchg
push
cmp
call
test
test
stos
aam
arpl
into
mov
push
out
loop
in
xchg
imul
add
mov
pop
scas
jg
push
mov
insl
dec
fwait
mov
mov
jb
sub
cmp
lcall
loopne
insb
ja
int
mov
push
in
sub
popf
ljmp
mov
mov
lock
insl
add
or
scas
mov
nop
xchg
inc
loopne
xor
addr16
outsb
push
push
pop
mov
je
push
adc
in
lods
lds
shrl
mov
sbb
jne
ja
test
mov
dec
or
jnp
enter
in
ljmp
push
ja
ret
pop
dec
js
ljmp
inc
or
neg
out
push
mov
gs
sahf
popf
inc
jne
mov
cmc
pop
and
push
adc
xor
pop
dec
sub
movsl
xchg
mov
arpl
push
xor
mov
pop
add
cmp
cmp
mov
fwait
loopne
outsb
mov
dec
in
mov
mov
pop
push
cmp
dec
sarl
adcl
aad
jns
repnz
stos
pop
in
or
mov
test
lds
cltd
stos
repnz
mov
jmp
in
mov
fcomip
pop
add
pop
dec
push
mov
jp
inc
push
mov
jne
cmp
roll
mov
inc
cmpsl
movsb
pop
shll
adc
or
mov
rol
cs
push
add
test
movsb
sti
sarl
cmpsb
stc
dec
add
pop
jecxz
popa
dec
movsb
sbb
cs
lahf
aaa
cmpsb
pop
cmpsb
daa
push
mov
outsl
xchg
loopne
mov
pop
aas
or
cmp
movsb
jecxz
mov
cltd
cmp
addr16
icebp
les
xchg
jbe
mov
rcl
xlat
pop
mov
rclb
cltd
jp
jecxz
sub
scas
jmp
push
bound
lea
movsl
ja
inc
rorl
mov
aas
push
mov
into
pop
mov
dec
xchg
testl
mov
mov
inc
stos
pop
mov
sub
fisubrs
mov
xlat
imul
test
xchg
mov
pop
in
add
mov
push
insb
mov
cmp
inc
cmp
and
or
mov
aad
and
pop
jl
add
divps
jl
aas
shlb
add
mov
and
popf
push
aaa
aas
push
imul
jge
ret
mov
insb
je
lret
int3
mov
enter
test
shl
mov
cmpsl
notl
data16
push
daa
or
sbb
add
sarl
xchg
mov
fstpl
push
aas
sbb
sub
sub
mov
jbe
sbb
cmpl
nop
push
nop
outsb
scas
test
ja
xchg
out
cld
add
out
insl
hlt
dec
or
fcompl
outsb
dec
ret
sbb
mov
in
pushf
jae
fwait
inc
test
test
mov
pop
xor
push
loopne
add
aam
enter
xchg
jmp
aaa
sti
imul
jmp
and
jno
push
lock
pop
mov
mov
icebp
pop
push
in
dec
cmp
outsb
jae
ret
sahf
jecxz,pt
popf
and
cmp
fadd
rorb
dec
mov
push
scas
orl
cmp
jge
aas
in
ja
jo
sbb
add
dec
dec
pop
rorl
mov
loope
push
sub
sbb
sub
mov
push
inc
inc
fidivl
or
sti
push
xor
sahf
cmpl
inc
pop
inc
cmc
aas
es
mov
orb
sbb
shll
add
xchg
out
rorl
in
std
cmp
inc
imul
addps
xchg
and
cmp
mov
ja
cmp
lock
inc
fnstcw
xor
or
sti
mov
cld
mov
fsubrs
aam
xchg
in
add
mov
mov
in
dec
es
xlat
mov
dec
ss
add
test
or
repz
add
inc
clc
loop
push
xor
add
xchg
dec
sbb
or
jl
dec
lods
test
adc
cmpl
mov
lods
mov
in
outsb
jl
loop
sbb
in
mov
dec
push
cmc
push
and
lahf
icebp
or
jne
or
lock
in
sarb
outsl
aad
cmpsb
lea
test
test
and
mov
inc
push
lods
lcall
insb
ljmp
test
or
fs
out
movsl
aam
xlat
movsbl
popf
jne
mov
mov
xor
xor
aad
aaa
movsb
ja
fdivl
mov
mov
lret
lods
push
das
and
pop
dec
daa
jns
sbb
out
imul
faddl
sbb
jg
aas
fistpl
rorb
push
and
cmp
shlb
sub
jp
dec
mov
rol
gs
je
mov
mov
test
xor
adc
fildl
movsb
int3
jmp
cmp
or
pop
dec
sub
jmp
sub
mov
or
inc
shl
into
push
frstor
lret
lahf
ja
mov
add
movb
add
push
or
stos
hlt
pop
push
imul
out
data16
addr16
cmpsl
int
or
fwait
push
or
data16
mov
adc
sbb
push
pop
out
popf
insb
xchg
push
in
ret
xchg
fcmovnu
out
cli
mov
mov
pop
fildll
or
aaa
ds
out
add
mov
sub
pop
call
or
jmp
push
loopne
xor
aas
roll
dec
sbb
mov
fucomip
cs
or
lea
movsb
fists
sbb
aas
lret
arpl
cmp
popa
jmp
mov
ret
addr16
test
fbstp
or
jmp
fldl
test
cwtl
jns
adc
fidivl
and
dec
ja
mov
jle
int
mov
lock
push
pop
cmpsb
dec
popa
mov
std
call
fiaddl
arpl
out
add
punpckldq
sbb
or
stos
add
dec
sbb
mov
orl
cmp
fldenv
push
call
divl
xchg
fst
stos
pop
ret
jbe
fidivs
xor
xchg
inc
popa
lcall
loop
jl
push
mov
lock
sbb
inc
inc
cmp
inc
loopne
xchg
xchg
negl
push
mov
aaa
into
nop
nop
mov
stc
out
xchg
sahf
add
and
repz
movsb
jb
in
push
mov
rol
cmc
mov
add
mov
push
adc
jp
push
add
je
movsl
lds
adcb
mov
or
lret
cmp
cmpsl
cmp
pop
or
out
in
fs
pextrw
dec
out
cmpsl
call
xor
js
mov
push
mov
pop
ljmp
cld
dec
roll
stos
mov
dec
mov
inc
hlt
aad
subb
test
xchg
stc
xor
push
cmp
xchg
xchg
add
cltd
mov
jp
shll
lret
push
test
push
inc
xchg
xchg
mov
xor
in
test
stos
sbb
and
pop
imul
mov
jns
mov
lahf
xor
mov
sti
xor
ss
adc
xor
mov
push
pop
push
mov
pop
push
into
push
adc
in
mov
jge
out
pop
jge
add
mov
and
out
add
and
pop
ja
outsl
fidivl
xchg
adcl
cwtl
xchg
pop
mov
push
fcompl
lahf
fsubrp
std
mov
aaa
fisttpl
lcall
mov
sti
pusha
cltd
and
outsl
notb
pop
dec
xchg
fs
xor
icebp
inc
inc
and
sbb
cwtl
sub
inc
out
xor
inc
mov
mov
sbb
popa
into
daa
mov
lods
outsb
jne
jge
xlat
jmp
je
mov
cmpsl
mov
lahf
and
ds
sarb
test
leave
xor
ret
cs
push
sbb
dec
imul
jecxz
inc
pop
insb
cmp
sub
mov
add
and
and
ss
in
frstor
jbe
popa
imull
nop
and
das
cmpsb
mov
movsl
sahf
int3
adc
dec
adc
ss
daa
sbb
sub
and
cld
jo
jo
stc
mov
xchg
xor
xchg
fnsave
lock
mov
lret
adc
in
mov
cmpsl
or
outsl
sub
andl
fwait
scas
mov
insl
add
pop
cwtl
ljmp
call
out
dec
pop
outsl
fisubrs
or
nop
jle
js
sub
inc
xchg
mov
mov
rcrb
jb
lcall
xchg
fisubrl
push
xchg
push
fs
imul
cld
sub
cwtl
insl
fnstcw
arpl
lcall
cmp
or
push
adc
cmp
iret
mov
in
pop
inc
jl
xchg
sub
hlt
jb
and
push
test
mov
addr16
jl
lods
arpl
cmpsl
out
or
mov
jne
mov
mov
mov
insb
xor
adc
dec
rep
ljmp
aaa
sahf
push
movsl
repz
fisttpll
pop
clc
loope
incl
or
dec
adc
sbb
rcrl
inc
ffreep
dec
pop
and
fadd
lds
lods
mov
lock
je
cmp
std
mov
dec
xor
das
pusha
sbb
rcr
cmpsl
fwait
std
les
movl
sub
int
dec
adc
or
mov
jb
sub
mov
xor
xchg
stos
in
pop
fwait
cmp
es
and
lods
mov
mov
jp
jl
pop
jg
jle
mov
shll
out
sub
adc
mov
dec
fisubrl
inc
leave
loopne
and
call
addr16
rorb
fdiv
data16
fdivrs
int3
mov
and
cmp
cmpsb
xchg
stos
fimull
xchg
std
sub
mov
icebp
or
add
into
scas
movsl
lea
les
mov
les
inc
add
ljmp
out
mov
movsl
inc
in
ret
loop
insl
ret
lock
int
sarb
out
mov
cmpsb
add
push
jno
into
gs
mov
fcmovne
xlat
shl
jge
adc
xchg
push
sbb
lock
and
and
arpl
jp
inc
xchg
fists
in
pop
dec
xchg
cltd
test
dec
inc
lea
ljmp
push
mov
dec
xor
adc
sbb
push
xchg
jecxz
mov
or
ljmp
pushf
push
ja
mov
stos
xor
push
or
data16
shll
incl
push
pop
fbld
push
or
or
cld
add
mov
clc
cmpsl
in
stc
in
fisubl
insb
cmp
jbe
push
pop
push
push
or
lds
xor
mov
ds
fnsetpm(287
rorb
adc
je
negb
xchg
xchg
cmp
repnz
jae
pop
adc
shll
dec
and
mov
cltd
lahf
insl
jp
mov
push
push
call
faddl
and
jp
outsb
mov
pop
out
sahf
xchg
cltd
mov
lahf
movsb
repnz
inc
lret
push
adc
add
mov
je
aas
xchg
push
cmp
dec
shrl
sbb
push
jle
lret
and
test
loop
hlt
inc
out
sbb
ds
dec
inc
xchg
cmp
lahf
mov
fcomi
les
arpl
aam
lds
jle
out
nop
les
cmp
pop
out
push
xchg
stos
mov
aad
cmpsl
ds
adc
lds
inc
mull
dec
iret
sub
pop
adc
mov
lods
pop
adcl
sbb
sbb
outsl
ss
dec
into
sub
rcr
ret
mov
lods
loope
xor
mov
pop
fwait
popf
stc
int3
cmp
mov
sub
jl
jmp
xchg
gs
in
xor
push
loopne
repnz
adc
jb
adc
sbb
add
test
inc
leave
or
sbb
nop
int3
imul
push
sbb
cmpsb
xor
jp
and
fdivl
adc
xchg
push
jno
leave
in
icebp
mov
rcll
std
jbe
imul
std
sub
in
mov
jp
xchg
sbb
iret
lret
inc
inc
bound
fs
sub
call
sub
mov
and
xchg
jge
mov
movsl
inc
mov
fnstcw
push
stos
push
mov
lret
cmpl
cmp
inc
in
ja
aam
jno
adc
push
loopne
loop
sub
sub
out
push
sbb
dec
call
ljmp
mov
fisubs
inc
lds
inc
xchg
jno
lods
scas
daa
inc
xorl
sub
into
scas
in
pop
dec
inc
sbb
cmp
mov
sub
out
cmp
add
fwait
or
sub
sub
jp
idivl
outsb
aas
add
pop
xchg
fistl
lods
mov
repnz
ds
andw
dec
mov
jae
mov
mov
inc
push
outsb
cwtl
pop
mov
iret
out
ds
xor
lock
outsl
fiadds
test
jae
out
roll
stos
std
jge,pt
pop
call
sub
sbb
xor
addr16
cwtl
fildl
enter
sub
and
adc
mov
cs
mov
xchg
jbe
lcall
push
or
shl
lds
cli
pushf
jne
adc
ret
pop
ds
inc
dec
inc
cli
cmp
in
pop
mov
dec
pushf
cld
aas
or
lds
rcl
fcomps
mov
mov
or
sar
sub
arpl
and
arpl
dec
es
xchg
loope
stc
fwait
out
sub
mov
int
stos
cli
xor
sub
dec
mov
xchg
mov
sbb
push
mov
insl
jge
cmpl
dec
lock
js
cli
push
imul
adc
shrb
cli
mov
mov
sub
test
movsl
push
ja
cmpsl
jp
dec
xlat
sbb
in
adc
add
or
jae
pop
lods
popl
adc
or
jbe
and
adc
adc
mov
cmpsl
pop
and
mov
cmp
cs
outsb
nopl
ret
mov
cmp
adc
xlat
jge
pop
jne
pop
or
rcrb
xor
add
leave
and
ret
mov
imul
add
test
mov
clc
loop
lods
inc
cmpl
xor
mov
sbb
daa
divl
mov
std
xor
mov
xchg
mov
xor
xor
pop
cltd
data16
push
inc
xor
and
push
ss
inc
or
cmpsb
sbb
hlt
repnz
outsl
jae
cmp
inc
pop
sti
xchg
into
loop
addl
or
sbb
shrb
lcall
sub
in
cmp
dec
cmp
out
mov
mov
mov
test
dec
xchg
sahf
stos
in
pop
inc
cmpsl
xchg
jne
jmp
mov
mov
mov
or
mov
loop
imul
mov
aaa
inc
push
sti
xchg
jecxz
adc
push
pusha
ret
stos
icebp
movsl
jp
movups
add
push
daa
xchg
call
outsb
mov
orb
xlat
gs
mov
and
mov
int
mov
stos
insl
jmp
add
ds
hlt
pushf
cwtl
das
mov
cmp
mov
jmp
mov
pop
mov
loope
mov
fwait
rcrl
sbb
push
pusha
cmp
scas
mov
jnp
dec
mov
push
and
data16
call
mov
pop
mov
stos
repz
stos
int3
cmp
jns
out
scas
mov
xlat
sbb
xlat
xor
test
or
push
adc
push
das
les
fcmovb
add
hlt
insb
lods
add
out
jecxz
pop
xchg
stos
fimuls
or
outsb
ja
adc
push
cmpl
sub
hlt
aaa
xorl
leave
int
or
addr16
sti
adc
arpl
loopne
jg,pn
aas
movsb
push
jl
clc
pop
xor
movsb
int3
dec
lds
sbb
in
and
dec
or
data16
lret
inc
add
inc
movsb
shrb
jae
imul
lods
lock
out
cmp
stos
add
or
adc
pop
insl
fld
repz
cli
repz
jp
inc
inc
pusha
fwait
jne
cwtl
push
jle
push
std
das
mov
xchg
mov
sub
push
push
pop
insl
push
repz
frstor
hlt
sbb
loope
cmp
dec
jecxz
pop
push
xchg
cld
xchg
cmp
and
push
pop
sbb
or
sbb
mov
js
lds
cltd
pushf
pop
out
cmp
mov
out
mov
jl
sub
cmp
hlt
jns
sub
sbb
dec
add
aam
push
sub
push
in
testl
fnstcw
mov
jb
sub
push
or
ds
push
icebp
jl
mov
xchg
daa
dec
mov
push
cwtl
adc
adc
sti
pop
cmc
sub
cmp
lcall
scas
fcmovnu
arpl
std
pop
lcall
push
mov
ss
aaa
push
stc
xchg
lret
adc
sub
sub
xchg
cs
in
out
cwtl
out
mov
das
sarl
jb
inc
push
add
mov
mov
push
sarl
sbb
std
sbb
xor
xor
stos
js
insl
and
hlt
push
xchg
sub
lods
dec
cmpl
push
fst
dec
pop
subl
dec
out
fsubrp
out
inc
push
mov
mov
nop
daa
jae
mov
dec
xchg
scas
jno
jecxz
mov
ret
lds
lds
cmp
bound
mov
xor
jae
mov
pop
int3
mov
call
xchg
sbb
xchg
xor
add
push
in
daa
ret
cli
inc
test
cmpsl
je
adc
jno
mov
ja
scas
test
cmp
leave
ss
push
add
inc
xor
ret
pop
aaa
xchg
mull
xchg
je
out
rcrl
xchg
mov
fisubs
adc
in
fcomps
nop
int
pop
push
ss
je
in
jmp
insb
fistps
adcb
or
scas
stc
sbb
mov
bound
ret
inc
jmp
push
add
adc
call
xchg
mov
xor
mov
fidivrs
outsb
jns
mov
push
sbb
xchg
jno
int
arpl
and
dec
sahf
into
test
js
and
lret
and
adcl
jl
add
mov
push
cltd
jae
push
mov
cmpsb
sbb
dec
not
insb
push
stc
les
dec
mov
cmc
xlat
mov
push
cltd
xor
mov
jbe
and
add
test
stos
aas
mov
inc
cmpb
out
push
mov
mov
xchg
push
repnz
pop
dec
jge
fstpl
bndstx
cwtl
lods
xchg
pop
lahf
lods
jo
ret
dec
in
out
or
mov
sbb
jp
imul
lcall
adc
mov
jg
and
sub
fcomp
mov
mov
cmp
pop
sar
or
mov
push
rorl
pop
add
mov
sub
jmp
xor
leave
and
shrl
gs
cltd
cmp
sbb
mov
inc
and
push
pusha
lret
shlb
cmpsl
inc
lret
pop
fdivs
mov
shlb
pop
popa
lods
in
mov
push
adc
add
call
cmpsb
pop
enter
or
push
test
mov
cmp
je
ja
inc
sbb
lds
jns
mov
jecxz
sarl
mov
push
in
ficoms
fs
inc
inc
sbb
out
test
inc
or
xor
mov
stos
mov
je
rorl
mov
jle
add
cs
lcall
rclb
mov
sbb
sbb
popf
cmp
ljmp
mov
sbb
add
cmpsl
mov
cmp
aaa
lods
cmp
sub
xchg
push
imul
dec
dec
daa
lahf
div
xor
pop
test
pop
xchg
stos
mov
add
mov
jg
adc
and
aam
mov
fnstcw
out
pop
cmc
or
lcall
pop
xor
sub
lds
dec
mov
repnz
daa
pop
lahf
not
daa
xchg
mov
fimuls
sub
push
cs
push
lds
mov
out
dec
ror
xchg
pop
dec
sub
ds
add
lea
xlat
push
mov
mov
sub
nop
push
or
outsl
fsub
fdivrs
add
jg
mov
repz
cltd
dec
fisttpl
dec
out
xor
inc
xor
fidivrs
dec
xchg
mov
push
mov
adc
jbe
add
fildl
rcrb
sub
mov
sti
or
ret
pop
xchg
adc
cld
mov
test
lods
call
ret
fstps
push
aam
jno
stos
scas
push
mov
xor
or
test
lahf
pop
sub
cmp
mov
shl
inc
sarb
lret
sub
push
dec
pop
jne
lret
into
push
mov
dec
in
mov
sub
sub
cmp
stc
or
sbb
add
pop
pop
push
icebp
scas
inc
pop
dec
js
sbb
xchg
cmp
add
sbb
nop
sub
lcall
sub
shll
inc
dec
mov
aad
int
adc
decl
xchg
pop
cmp
popf
dec
and
dec
out
lock
dec
cmpsl
insl
orb
fcmovnbe
movsb
nop
jne
cld
mov
push
sbb
jmp
mov
adc
decb
push
push
mov
cmp
xor
pop
adc
mov
add
test
cld
fidivs
push
and
sbb
scas
stc
movsb
andl
loope
les
nop
lret
shlb
lahf
xchg
icebp
push
mov
mov
jp
add
cltd
mov
pop
xchg
mov
and
adc
or
dec
aam
shl
mov
push
inc
add
cld
test
insl
shrl
ret
add
fmuls
fildl
pop
push
gs
aaa
testb
in
push
mov
mov
or
xchg
mov
leave
nop
aas
push
int3
xchg
add
call
mov
js
test
push
aas
xlat
cmpsl
lret
fwait
mov
scas
inc
pop
in
cld
dec
jge
aas
push
std
call
aad
adc
inc
mov
iret
adc
and
je
arpl
adc
outsb
addr16
add
push
inc
pushf
lahf
out
fldl
les
cmp
inc
imul
push
push
mov
pushl
mov
or
push
fstps
ffree
cmpsl
fsubl
and
xor
inc
inc
fimull
pushf
fisubs
popa
and
into
fdiv
jbe
fidivs
cwtl
icebp
jl
push
int
push
mov
lods
repz
ljmp
push
mov
xchg
pop
daa
jp
iret
divb
push
jge
add
loope
sahf
and
mov
and
cs
sti
push
aas
outsb
adc
jae
imul
push
mov
sti
xchg
rcl
mov
mov
jl
sub
cli
or
mov
stc
sub
ja
or
mov
mov
or
aad
dec
addr16
sbb
mov
clc
data16
cwtl
fdivrl
push
pusha
push
int3
inc
mov
sub
lret
mov
add
adc
data16
in
aas
cmpsb
std
in
xor
mov
or
inc
adc
loope
push
push
imul
push
add
adc
cmc
pop
movsl
aad
es
outsb
jp
sbb
inc
jl
movb
xchg
leave
inc
or
pop
dec
dec
push
fwait
mov
mov
pop
or
sub
je
mov
nop
call
pusha
int
pop
ss
mov
lret
mov
mov
pop
ret
and
mov
iret
cmpsb
hlt
into
arpl
push
test
mov
mov
jl
fsubrl
popf
lods
pop
leave
fistpl
and
jns
pop
jbe
out
cwtl
stos
sbb
xor
cmc
bound
mov
addl
cmp
fisubrs
repnz
or
mov
loope
shll
or
inc
mov
loop
pop
push
add
jmp
jl
arpl
stos
pop
adc
shll
daa
scas
sahf
cmc
int
clc
aaa
fsubrp
movsl
ret
inc
inc
jnp
mov
cmc
fsubr
sbb
fimuls
mov
rcrb
pop
mov
ljmp
rcrb
adc
ja
add
pop
mov
mov
call
pop
inc
gs
xor
ljmp
call
leave
lods
cmp
add
dec
and
xor
dec
mov
lret
xor
and
lock
lods
int
pop
or
movsl
imul
arpl
sub
repz
mov
sbb
sbb
ret
or
movsl
imul
fistpll
loopne
sbb
rcrb
adc
push
fmul
jbe
sti
pop
adc
inc
xchg
addr16
lods
out
rcr
adc
iret
push
mov
xor
mov
mov
stc
pushf
inc
popa
jae
mov
cli
xchg
pop
add
jnp
jl
scas
lods
in
add
int
mov
push
jmp
iret
cmc
je
mov
inc
in
push
or
sub
sub
cmp
lds
mov
lahf
mov
jle
push
scas
adc
xor
dec
stc
pop
jb
mov
mov
lods
jmp
mov
xor
ljmp
mov
mov
jp
sub
adc
mov
sub
push
cmc
aam
mov
lcall
roll
popf
arpl
aad
lret
xchg
and
sbb
bound
iret
mov
add
pop
or
rolb
bound
cmp
cld
sub
in
sarl
mov
movsb
mov
lret
jl
dec
scas
lods
add
lock
outsl
inc
mov
popa
inc
push
aad
iret
mov
mov
sbb
aad
lret
cld
sbb
loop
int3
sarl
std
out
orl
mov
sbb
jmp
and
pop
or
pusha
ljmp
rorl
mov
cltd
or
rorl
inc
or
jae
push
xor
xchg
jp
mov
nop
clc
cmpsb
pop
fdivp
fmuls
dec
xor
mov
in
cmp
lret
xor
sbb
lods
sub
dec
pop
in
cmp
inc
dec
das
sub
ljmp
dec
fisubl
hlt
push
rolb
insl
xchg
inc
sub
adc
pop
jmp
jecxz
insb
rol
inc
test
jbe
pop
sahf
call
dec
fisubs
flds
ss
nop
jnp
sub
popf
out
scas
push
divb
mov
stos
inc
cmp
jge
fisttps
cmpsb
call
shrb
aaa
idivl
jl
pop
dec
cmc
mov
mov
lods
cmp
popa
aas
push
mov
pop
ud2
cmp
data16
or
push
cmp
jo
add
jl
cmp
shll
roll
inc
loop
sub
inc
enter
lock
add
cltd
pushf
andb
dec
not
negl
dec
push
jp
out
in
cmp
inc
int
dec
insb
hlt
pop
lock
jo
push
pop
cwtl
pop
mov
inc
inc
out
and
jmp
call
cmp
bound
shlb
xor
js
jae
sbb
pop
mov
sub
sbb
movsl
std
pop
sub
outsl
cmp
shrl
insl
add
pop
pop
ds
push
mov
ficoms
fdiv
insb
mov
in
xorb
sbb
jmp
push
mov
lret
jecxz
and
jno
mov
or
cmpl
sub
mov
pop
jbe
shrl
decb
sbb
mov
xchg
adcb
cs
push
xor
dec
push
insb
sbb
lahf
jnp
insb
xor
add
lock
fmull
push
pop
jns
or
push
adc
or
sarl
jnp
push
mov
adc
call
in
loope
mov
mov
dec
incl
stos
in
outsb
out
mov
ja
pop
iret
and
or
fcoms
xor
or
imul
addb
pop
or
mov
jne
out
sbb
add
mov
imul
push
inc
xchg
or
cmpsl
out
sub
cmp
enter
movsl
fs
xchg
enter
jl
jge
adc
iret
gs
sti
mov
mov
mov
lret
pop
ds
push
mov
adcl
mov
pop
add
sbb
out
and
data16
mov
push
jbe
add
ja
int
int
pop
ss
push
movsb
mov
int3
adc
inc
mov
inc
int
sbb
fwait
pop
xchg
dec
lea
add
outsb
test
xor
sbb
mov
mov
mov
xchg
jns
xchg
jns
lret
hlt
cwtl
xlat
xor
push
dec
push
push
cmp
xchg
xchg
jg
sahf
sub
shl
add
sub
shrb
and
jo
jle
lock
int3
or
lods
and
pop
aas
dec
iret
xchg
inc
cmp
lea
cmpsl
inc
mov
repz
pushf
rcrl
dec
andb
and
cmp
aaa
mov
loope
sub
rcll
lock
or
mov
mov
mov
sub
adc
mov
xor
inc
xchg
mov
ret
daa
test
dec
pop
push
push
jmp
jno
add
push
mov
pop
loop
bound
mov
sarl
imul
stc
lahf
cltd
push
sbb
lods
add
or
out
push
push
inc
xor
lods
cmp
sbbl
test
fnsave
adc
imul
mov
dec
jmp
outsl
xchg
or
lock
push
lods
in
jge
cmp
jg
push
cmp
stos
inc
push
ja
mov
dec
pop
sbb
les
xchg
in
cmp
and
and
jecxz
in
cmpsl
jmp
fidivrl
scas
sti
push
lods
and
mov
insl
std
and
xor
insb
sbb
pop
mov
insl
mov
mov
int3
pusha
sub
pop
sub
dec
mov
test
pop
sub
stos
pop
mov
add
or
pop
mov
and
iret
and
ret
pop
sarb
sub
xchg
xor
jmp
and
das
and
push
inc
jmp
aaa
cli
or
pop
cwtl
adc
scas
pop
repnz
mov
cmp
xor
pop
add
repz
inc
pop
aam
cmpsl
add
and
mov
ds
imul
test
add
nop
mov
add
bnd
sub
jecxz
repz
jecxz
insl
jae
nop
jns
push
cmpsl
mov
scas
ss
insb
xor
pop
jae
arpl
addr16
in
out
jne
cld
xchg
mov
lahf
xor
mov
mov
std
xchg
test
das
cltd
movsl
sbb
pop
mov
xchg
jns
push
mov
dec
arpl
xchg
cmp
roll
outsl
pop
daa
jo
mov
roll
fsubl
int
push
lods
rol
jno,pn
xor
and
pop
out
pop
xchg
xchg
inc
adc
ja
xor
ficoms
and
jnp
dec
mov
dec
and
movsb
dec
stos
popl
push
rcl
adc
sbb
call
push
pop
stos
xor
lret
fildll
test
inc
jge
sub
mov
aaa
into
dec
xchg
and
out
add
mov
ss
mov
adc
or
or
aaa
enter
fsubrs
cmp
or
movsl
shlb
aaa
fwait
mov
pop
dec
add
arpl
loopne
cmc
mov
dec
pop
in
mov
fildl
mov
jnp
and
push
fidivrl
sbb
jg
inc
jl
adc
ret
in
insl
fdiv
jle
cmp
aaa
orl
ds
cmpl
addb
push
jbe
sbb
ret
mov
or
pop
push
cmpsl
int
or
cwtl
test
sbb
cmpsb
cmp
mov
ljmp
or
sahf
clc
bound
cmpsb
enter
jl
or
std
pushf
mov
pushf
or
out
and
dec
push
pop
xor
sbb
fdivr
outsb
shlb
inc
popa
jns
imul
addb
pusha
pop
jg
jecxz
jae
mov
adc
loope
ret
aas
xchg
in
in
mov
test
xlat
or
insl
orb
dec
popa
in
xchg
bound
adc
in
js
adc
cli
stc
mov
xor
daa
push
es
push
add
cmc
insb
mov
and
and
xlat
icebp
fs
mov
inc
mov
xor
loopne
shl
add
in
ror
aaa
cmp
leave
add
inc
hlt
sti
push
scas
push
xor
stc
icebp
rclb
xchg
xchg
dec
nop
mov
repnz
xchg
mov
fwait
test
cmpl
mov
adc
andb
aam
xor
push
lock
and
shlb
popa
push
mov
mov
inc
into
shrl
into
dec
dec
mov
inc
cmp
xchg
lret
dec
ret
dec
movsl
mov
sahf
pop
sbbl
fisubrs
ja
pushf
mov
pop
jno
jo
out
sar
inc
or
push
cwtl
pop
ret
mov
cltd
xor
jge
into
outsb
jl
outsl
clc
lcall
ds
inc
lock
xchg
cmp
dec
insl
mov
enter
sbb
int3
andl
or
jb
test
or
xlat
lods
cwtl
sub
push
repz
mov
sub
cmpsb
mov
adc
fstpl
ljmp
jo
xchg
in
jg
cli
xlat
repz
mov
adc
xor
pop
dec
fs
repnz
or
push
pop
out
mov
xorl
aad
mov
popf
xchg
push
or
mov
int3
imul
hlt
in
mov
inc
xlat
pop
sub
pop
sub
aas
mov
insb
aaa
inc
int
cmp
push
jbe
loop
add
and
jp
cmc
add
and
mov
jb
test
fisttpl
mov
pop
ss
jmp
insl
jns
negb
mov
out
cmp
popa
adc
sub
and
loop
add
dec
enter
aaa
pop
cmp
leave
rcrl
jnp
arpl
pushf
push
js
push
lahf
push
scas
inc
das
pusha
aam
in
jl
ljmp
jb
stos
mov
adc
andb
adc
or
and
fisubl
imul
cld
xor
inc
mov
js
mov
fsubrp
pop
adc
insb
ja
cs
xchg
push
cld
mov
sbb
xor
jl
fstl
xchg
arpl
sbbb
add
xchg
inc
sbb
or
iret
lret
adc
or
test
lahf
push
pop
test
mov
test
cltd
xor
push
fnstenv
cmp
adc
inc
icebp
sub
jo
bound
scas
jmp
dec
je
es
pop
pusha
jp
push
jo
mov
or
dec
xor
sbb
dec
leave
cwtl
stos
lods
adc
fs
icebp
mov
mov
jecxz
and
test
add
xchg
mov
fsubrp
xchg
scas
negl
xchg
or
gs
out
jecxz
les
mov
or
cmp
xchg
add
scas
pop
jle
int
push
pop
out
inc
lret
jp
imul
bound
adc
shlb
xchg
repz
dec
lods
nop
clc
jmp
repz
data16
fsubrl
mov
cmpsl
inc
jae,pn
xchg
sub
xchg
inc
outsb
sub
sbb
sub
hlt
fldcw
push
loop
test
repnz
in
shrb
cmp
mov
in
mov
sbb
jg
mov
mov
icebp
fadd
fwait
mov
out
cld
and
out
cwtl
sbb
push
mov
int
jg
mov
or
mov
cli
int
xchg
mov
fcmovnb
bound
loopne
sahf
mov
hlt
cmovnp
pop
dec
and
lcall
repz
inc
repnz
aad
testl
push
movsl
cmp
rorb
clc
arpl
cltd
lods
sub
jb
add
out
add
adc
aas
jmp
adc
pop
cmp
push
or
xchg
and
rorb
mov
imull
ds
lahf
ss
dec
bound
mov
in
out
dec
add
hlt
add
pop
notb
jne
sbb
mov
into
xor
pop
icebp
pop
mov
xor
sarl
aas
mov
scas
push
xchg
adc
or
mov
into
or
inc
cmp
sub
ds
mov
pop
add
xor
negb
dec
add
daa
ja
test
pop
sub
pop
sub
dec
jne
lcall
dec
mov
lahf
mov
push
fcoms
add
mov
lock
push
jle
aam
test
inc
fisttpll
out
shlb
outsb
cmpsb
jmp
pop
xchg
mov
popf
das
fnstsw
jp
or
inc
sbb
mov
ljmp
or
xorl
bound
xchg
nop
fnstcw
mov
push
jecxz
mov
mov
pusha
or
int
add
imul
adc
jge
push
decb
jae
mov
jno
inc
scas
je
xchg
pop
in
xchg
dec
loop
out
repnz
lock
sbb
int3
fisubl
imul
mov
mov
xlat
jnp
test
inc
mov
adc
pop
inc
cmp
mov
cld
xchg
jo
repz
vmwrite
pop
mov
shll
ja
out
lds
cmp
movsl
aad
and
insl
push
in
rol
or
lds
add
lods
std
imul
xor
push
sbb
out
xchg
leave
xchg
lods
lods
xor
cs
scas
pop
dec
push
jmp
sub
or
inc
divb
cmpsl
imul
mov
lea
int3
pop
jo
jl
test
int
and
jno
inc
out
loopne
or
es
lea
movsb
in
mov
outsb
out
rorb
fstp
bound
push
out
icebp
shll
mov
fcompl
mov
push
cmp
int
mov
outsl
call
fld
push
or
out
add
icebp
pop
addr16
dec
movsb
and
xchg
das
cmp
xor
mov
std
cmpsl
ret
in
stos
cmp
popa
ljmp
fbld
setae
shl
cmp
inc
flds
and
ficoms
dec
and
pop
pop
cs
sbb
out
and
int
jae
into
aad
imul
and
pop
decb
mov
pop
test
cmc
pop
lret
fsubr
and
jo
mov
cmp
mov
enter
pop
mov
shrb
mov
and
pop
mov
pushf
gs
arpl
into
fucomp
mov
ret
ret
mov
rcll
lahf
cmpb
dec
out
scas
out
xorl
dec
xchg
mov
adc
mov
lea
frstor
push
sbb
cmp
fisttpl
sub
and
in
mov
mov
sti
call
sti
std
xchg
stos
sti
dec
pop
negl
iret
jb
stc
scas
xor
pop
add
xadd
xchg
push
push
and
adc
push
cmp
subb
enter
add
decb
mov
shlb
pusha
fdivl
insb
daa
andb
xor
pop
inc
sbb
sbb
les
mov
dec
inc
push
jp
inc
push
dec
dec
adc
lret
outsb
pop
in
inc
cli
xor
leave
test
cmp
sub
adc
push
xor
pop
mov
push
mov
lcall
and
jle
es
call
imul
and
add
pop
out
mov
test
mov
nop
fs
popa
xchg
repz
fucomip
repnz
xor
add
mov
push
insl
sbb
mov
shrb
mov
xor
stos
cmp
mov
sub
adc
fidivs
push
loopne
mov
mov
pushf
inc
inc
fwait
add
ja
mov
mov
es
or
jl
popa
lock
daa
aaa
xlat
jo
cli
imul
xchg
js
pop
and
popf
sub
xor
cmp
xlat
jmp
mov
mov
or
insl
sub
je
dec
test
ja
out
enter
pop
cmp
imul
inc
sbb
sbb
and
or
add
jmp
arpl
add
sub
sub
push
dec
xchg
addr16
sub
nop
movb
mov
fldt
pop
push
adc
lret
jp
sahf
aas
mov
movsl
xchg
data16
pop
mov
sbbb
sbb
xchg
jbe
pop
sub
lds
adc
adc
jb
inc
jp
clc
sahf
adc
sahf
fdivrs
add
mov
sbb
icebp
sbb
mov
out
mov
mov
jbe
addb
jbe
fdivrs
aaa
mov
adc
lcall
addr16
arpl
in
orl
test
int3
test
mov
push
adc
in
push
sbbb
inc
jecxz
cmc
add
xchg
sub
out
fs
data16
or
push
lcall
dec
push
sub
push
es
dec
gs
push
jg
add
test
sbb
adc
sbb
inc
xchg
div
in
out
stos
rcrl
stos
jle
xor
andb
ds
jl
loop
orb
les
icebp
adc
insl
sub
jecxz
dec
xor
sbb
sahf
fadds
cmp
jp
xor
out
push
das
add
movsl
iret
sub
lcall
bound
pop
cmp
add
ljmp
lock
movsb
daa
xor
mov
adc
test
in
inc
repz
lret
rolb
leave
das
andb
pop
cmp
rcl
stc
leave
divb
aad
jmp
call
pop
mov
int3
xor
and
and
gs
inc
push
and
into
mov
inc
nop
fldl
adc
mov
fistl
call
inc
xlat
imul
lahf
ds
aas
cmp
cmc
stos
aaa
jge
hlt
sbb
mov
sahf
inc
jb
sub
ret
inc
pushf
mov
in
test
cmp
scas
or
into
add
imul
in
lock
out
jecxz
xchg
push
fldt
sub
pushw
loop
push
movsl
cmp
les
aaa
sbb
js
pop
andl
orl
xor
int3
xchg
pop
inc
popf
add
out
pop
test
mov
jp
xchg
add
jnp
iret
outsl
pushf
loope
ljmp
xor
inc
sbb
out
sub
pop
jae
ss
jle
mov
shrb
in
add
xchg
adc
daa
push
or
out
sub
xchg
mov
jle
or
ss
inc
in
cmp
fucomp
fidivs
jno
test
fadds
mov
addr16
cmpsb
fiaddl
iret
jae
add
int
pop
ja
mov
mov
aad
scas
sbbb
adc
in
lret
sub
movsb
xor
push
popf
sub
out
mov
dec
pop
jae
cmp
js
popa
and
add
lds
jo
shl
adc
ja
mov
leave
pop
out
leave
call
stc
push
lods
lock
fbld
xchg
xor
adc
aam
push
std
add
das
inc
sbb
push
dec
xchg
push
inc
jae
dec
ret
std
inc
ret
insl
dec
and
xor
int
cmp
dec
and
jle
pop
jecxz
or
incl
lahf
mov
mov
cmp
movl
xor
mov
cmp
in
adc
xor
mov
push
popa
mov
jne
and
xor
pusha
subb
xchg
popf
insl
dec
jmp
mov
dec
outsl
push
dec
adc
int
mov
push
mov
jl
jle
inc
nop
mov
xchg
lea
mov
sbb
sub
sub
jbe
jge
fmuls
cmp
out
in
shl
push
and
cmp
sbb
es
xor
mov
adc
cmp
scas
jmp
mov
mulb
inc
pop
imul
sub
jle
shlb
fisubs
inc
add
xchg
add
dec
data16
and
call
lret
out
push
sbb
stos
subl
mov
mov
lods
aas
into
or
pop
data16
xchg
dec
and
xchg
sub
sub
ss
dec
out
sub
mov
mov
mov
cmp
sub
jb
jecxz
inc
cmpl
pop
or
in
add
int
and
add
sbb
pop
jns
or
cmp
xchg
mov
sbb
into
test
popa
jmp
sbb
mov
cmp
mov
in
inc
loope
in
push
in
sbb
icebp
aam
mov
fcoml
mov
push
jb
shrl
lds
das
pop
sti
pop
pop
lret
hlt
cmc
xor
outsl
arpl
mov
mov
add
aas
cmpsb
jo
mov
inc
js
mov
pop
lds
cmp
xchg
sub
jae
ret
or
push
stc
rolb
jns
test
sub
call
ret
pop
in
imul
sahf
imul
daa
adc
or
jne
fidivs
imul
sti
mov
xchg
testl
cli
mov
fwait
inc
mov
push
pushf
sbb
push
mov
cmp
shrl
push
mov
ja
push
mov
cmpsb
add
rol
rcrl
test
and
pop
sti
fdivl
je
pushf
mov
push
ljmp
stos
sbbl
push
xlat
dec
adc
sti
les
cmp
push
nop
pop
andb
rcl
add
sub
mov
pop
data16
insb
xchg
cs
push
sub
fbstp
repnz
cmp
fbstp
call
adc
pop
outsl
daa
fmul
mov
jge
dec
notb
scas
mov
cmp
and
push
inc
pop
ret
jnp
in
pop
in
mov
mov
push
sbb
adc
outsl
jns
repz
mov
bnd
pushl
mov
jnp
popa
jmp
mov
jmp
or
lret
mov
mov
fs
loopne
pop
dec
pop
jg
cmp
cs
and
cmpsl
enter
mov
cmpsl
push
add
mov
dec
dec
lods
jb
mov
je
dec
sahf
dec
inc
pop
dec
xchg
negb
ds
sub
dec
daa
aad
cld
dec
xchg
cs
jae
setno
adcb
test
and
testb
into
pop
sbb
rorb
fwait
push
call
xchg
repnz
dec
sub
add
xchg
ljmp
es
or
out
push
lods
push
enter
sti
in
push
dec
and
or
dec
add
out
scas
add
and
and
jns
in
jae
add
mov
and
xchg
sub
mov
sub
push
lock
mov
pop
jecxz
clc
sbb
dec
or
mov
lods
mov
ljmp
in
push
icebp
decb
dec
icebp
pop
cltd
stc
rcl
shll
cmp
rcr
or
sbbb
data16
and
sbb
and
movsb
jno
jae
in
sahf
add
in
mov
shrb
push
lods
xor
gs
loop
xor
test
inc
int
adc
cli
or
push
mov
fmuls
ret
cli
pushf
xor
mov
mov
add
or
shrb
sub
lret
jg
jmp
mov
mov
push
test
stos
inc
popf
lret
jb
push
out
xchg
scas
inc
imul
add
pop
jmp
or
xchg
notb
hlt
sub
test
test
jp
loop
pop
xchg
cmc
and
pusha
push
and
jnp
pop
lods
pop
sub
mov
add
and
sub
dec
fwait
jg
mov
fimuls
or
mov
outsb
jecxz
push
mov
adc
out
xor
mov
clts
int
mov
mov
leave
lods
mov
leave
fstps
leave
popa
jb
push
or
test
out
fisttps
inc
imul
pushf
add
test
test
add
loopne
lds
in
push
inc
mov
test
mov
push
arpl
push
push
cs
addl
sbb
adc
pop
rcrl
fwait
test
jbe
lods
fldl
cli
movl
fldt
xor
daa
sub
inc
cmp
adc
sbb
mov
cmpsb
cmp
cs
push
imul
popa
xor
inc
les
jnp
push
pop
lret
sub
push
or
aas
dec
lods
mov
adc
loop
dec
insb
lea
dec
pop
dec
les
fcoms
jns
dec
mov
mov
and
or
push
sub
mov
lret
pushf
jecxz
cmc
xchg
inc
xlat
ret
pop
cltd
xor
jcxz
popf
sub
clc
mov
fnstenv
pop
mov
addr16
sahf
aad
jp
ss
cwtl
das
test
mov
pushf
mov
mov
addb
add
xchg
xor
orl
mov
mov
add
lods
pop
and
int
cmp
dec
or
jecxz
cmpsb
pusha
xchg
sbb
int
pop
push
and
pop
push
xorb
and
jg
push
mov
nop
inc
aam
pop
mov
int3
sarl
xchg
leave
jecxz
xchg
jnp
lcall
cs
push
in
daa
daa
cmp
xchg
xor
aad
pop
lock
ja
inc
jnp
jmp
mov
sub
sbb
push
pop
push
jne
js
out
mov
adc
or
pop
test
test
mov
flds
pop
push
push
mov
jge
pop
and
sbb
mov
or
xchg
insb
inc
inc
sarl
mov
sti
or
mov
xchg
cmpsb
in
shrb
in
cmp
pusha
and
je
fidivrs
add
inc
fs
cmp
or
cld
lods
inc
fisttpl
sub
and
in
mov
dec
jne,pn
loop
shlb
xorb
or
add
inc
pop
mov
fcmovb
sub
mov
dec
lahf
enter
mov
xorb
xchg
or
pop
push
inc
push
lret
sbb
xor
cwtl
ja
inc
and
insb
push
inc
and
cli
sbb
ss
sbbl
xor
xorl
mov
xchg
sar
lret
xorl
xor
mov
lahf
int
scas
inc
addr16
imul
dec
repnz
in
negl
icebp
outsl
out
ret
mov
stc
and
cs
mov
loop
and
cmpsb
adc
icebp
sbb
xchg
cld
pop
mov
adc
mov
loop
adc
nop
arpl
outsb
sub
mov
dec
add
dec
scas
xchg
ret
adcl
test
and
insl
mov
aam
std
adc
ljmp
cmc
iret
ret
outsl
push
xchg
mov
pusha
ror
loope
push
lcall
insl
inc
leave
test
cmp
add
repnz
xorb
add
xor
sbb
sbb
popf
or
out
lahf
stos
inc
sbb
mov
push
mov
adc
mov
xchg
mov
mov
cwtl
lahf
sbb
mov
mov
cmp
sub
call
jbe
lds
xor
mov
sbb
hlt
iret
push
xor
dec
xchg
in
cld
ljmp
cmp
movsb
divl
fldpi
push
inc
vaddps
pop
aas
push
mov
mov
cmp
jl
and
add
mov
mov
jg
push
mov
add
xchg
mov
xor
xchg
or
sbb
jnp
xchg
push
push
ja
inc
rol
and
inc
mov
hlt
add
cmp
push
dec
mov
pop
movsb
repnz
shl
jo
add
jecxz
mov
imul
add
in
movsl
cmp
and
fninit
loope
dec
inc
cli
pushf
mov
jle
lods
mov
sub
and
test
xor
decl
arpl
dec
out
test
movsl
mulb
stc
es
or
push
inc
mov
inc
pop
mov
and
imul
rcrl
addb
outsb
popf
push
loopne
jb
mov
pop
mov
int
into
loope
lret
out
out
mov
vcvttpd2dqx
inc
pop
or
push
inc
ret
repnz
push
das
ret
pop
popa
aas
in
xorl
scas
out
ds
cmp
lods
hlt
mov
xor
mov
in
lret
xlat
push
jecxz
test
mov
mov
loope
jne
jl
lock
adc
or
cmp
dec
mov
daa
adcb
aad
shll
fsubs
into
xor
jmp
stc
call
or
xlat
movsl
cmp
scas
dec
mov
xorb
sbb
mov
push
daa
xlat
adc
in
test
xchg
inc
aaa
rclb
inc
pop
mov
mov
iret
inc
into
sub
gs
repnz
ljmp
gs
mov
push
test
inc
shl
jl
in
inc
in
cmp
add
or
push
sub
dec
jecxz
repz
lcall
cwtl
gs
xchg
push
rorb
ljmp
mov
xchg
je
adc
in
inc
sub
mov
lods
xchg
cmpsl
jno
data16
push
lahf
shlb
dec
lcall
lret
adc
jae
mov
iret
pop
add
andb
fcoms
notl
adc
rorb
jno
jno
loope
fsubrp
or
dec
cmp
push
aaa
pop
sbb
sarl
loope
inc
push
enter
xor
push
xlat
js
cmp
mov
cmpl
fdivl
sub
dec
in
adcb
pop
outsb
inc
jae
inc
push
jnp
mov
push
fcoml
repnz
jmp
imul
data16
mov
stos
mov
push
aas
cmc
sub
sub
sbb
repz
test
cmpsl
ret
pop
subb
xor
fwait
xchg
inc
inc
fidivl
fsubs
adcl
or
xchg
or
mov
insb
add
shl
xchg
push
mov
gs
jae
xchg
push
fs
pop
adc
inc
sub
movsl
push
sahf
sti
push
movsb
mov
inc
gs
fldenv
mov
movsl
mov
push
ljmp
jno
adc
cmp
repnz
faddp
loop
xor
mov
lods
mov
jo
mov
push
popa
out
rcll
ljmp
jg
sahf
sbb
lahf
clc
cmp
jle
cld
xlat
imulb
lret
jl
dec
jo
popf
sti
xchg
iret
jg
imul
pop
mov
pop
dec
dec
jl
loop
scas
cmpl
mov
or
mov
or
cmp
loop
ret
push
xchg
push
pop
orl
mov
fbstp
xor
jle
xchg
sub
lcall
xchg
jne
or
loop
pop
sbbl
xor
sbb
inc
jo
ds
mov
sbb
sbb
das
lock
out
cli
pushf
sti
cmp
loopne
loope
sub
cltd
push
mov
cmpxchg
fsubr
dec
pop
loope
add
leave
cmp
pop
sub
les
imul
mov
adc
stc
fisubrl
loope
popa
adc
xor
jg
mov
push
xchg
jno
dec
fistps
push
jo
out
stc
out
add
add
hlt
in
bound
mov
cmpsb
loope
pop
out
movl
leave
jge
mov
les
sub
outsb
stc
clc
jbe
or
mov
shrl
xchg
lock
and
dec
adc
cltd
popa
push
cmpl
test
add
or
xchg
pop
negl
sub
inc
add
mov
or
divb
pop
sub
loope
ljmp
ja
inc
arpl
mov
dec
outsl
cmp
or
mov
aad
inc
dec
pop
fdivrs
les
pop
aas
sbb
mov
adc
mov
dec
dec
aad
pop
shrb
cmp
lds
movsl
sti
repz
push
lds
gs
icebp
pop
mov
je
inc
mov
iret
loope
pusha
clc
or
scas
mov
or
subl
enter
ret
fisttpll
vmaxpd
jnp
and
and
pop
inc
sub
pop
pop
and
push
cmp
adc
stos
or
inc
test
push
ljmp
inc
xor
inc
hlt
es
test
lcall
mov
repz
enter
mov
lret
and
fwait
mov
add
int3
fsubrp
pop
adc
xor
and
jns
shll
cmpsl
push
pop
add
add
mov
or
cltd
sbb
sub
testb
sub
pop
sub
ds
inc
and
xchg
clc
hlt
xor
ficompl
add
dec
inc
aam
stos
mov
gs
incb
xchg
push
int3
dec
sbb
jbe
lret
pop
sub
scas
add
aam
adcb
js
xor
cwtl
dec
inc
cmp
mov
les
xor
inc
out
les
int3
push
out
inc
dec
sbb
and
push
das
lahf
insw
rcrl
pusha
mov
push
xor
pop
xchg
adc
loopne
and
pop
and
movsl
dec
sahf
sub
repnz
sbb
cltd
in
les
nop
push
addr16
jg
negb
add
incl
dec
shr
sbb
push
mov
mov
add
mov
bound
cmpsb
or
ja
fisubl
es
cmpsb
push
xor
jmp
xor
push
leavew
adcb
mov
jge
push
loopne
ret
push
dec
inc
fidivrs
loope
add
addr16
pushf
jo
shlb
xchg
pop
lcall
and
cmp
lcall
push
ret
xchg
inc
shlb
jno
movl
je
rclb
cmp
popa
stc
dec
lods
mov
xchg
sarb
pop
loope
push
mov
jo
aas
aas
pavgb
push
fistpll
xor
rorl
stc
out
cmp
adc
ret
inc
loopne
out
adc
mov
ja
ret
cmp
icebp
adc
fists
fdivrs
inc
push
lahf
jno
mov
lods
loop
xchg
hlt
addb
xchg
test
inc
dec
cmp
mov
add
es
in
mov
adc
sub
add
shrl
insl
aad
dec
lahf
dec
loop
cmp
push
stos
lret
adc
cmpsl
jnp
js
jns
stos
repnz
pop
mov
lea
aam
dec
idivb
xor
in
outsb
lock
bound
mov
iret
or
push
int3
xor
fists
sbb
fsubr
pop
xchg
mov
lret
jle
out
push
inc
rolb
jl
popa
imulb
inc
lock
cmp
cmc
faddp
mov
cmp
inc
sbb
shll
arpl
sbb
inc
adc
ret
xor
ds
jle
mov
shrl
xchg
mov
xor
daa
cwtl
cltd
jb
pop
xchg
loope
push
mov
mov
je
jne
sbb
test
pop
out
in
ret
sub
imul
xlat
dec
mov
push
jecxz,pn
push
lock
xchg
cmp
sbb
xor
push
cli
pushf
mov
add
sub
ret
mov
aad
cmp
gs
mov
dec
sub
ficompl
test
cmp
add
push
inc
inc
push
cltd
stc
mov
xor
mov
mov
inc
dec
push
test
push
cmc
xchg
mov
std
fs
test
push
ljmp
scas
lcall
test
xchg
jne
ret
hlt
fsts
fstpt
cltd
icebp
xchg
cmp
les
push
inc
fwait
imul
xor
js
in
fidivs
je
mov
sahf
sbb
mov
cmpsl
mov
pop
pusha
ret
push
push
and
or
xchg
loopne
mov
mov
adc
repnz
or
scas
xor
inc
mov
push
xor
mov
sbb
pop
sti
or
stos
cmpb
mov
jecxz
and
sbbl
push
pop
das
xchg
int
pop
test
out
scas
data16
jne
mov
mov
inc
mov
shlb
loopne
ja
or
xchg
out
cld
cltd
mov
adc
lea
ffreep
mov
sbb
cmpsb
xchg
test
add
and
mov
cld
inc
subb
push
bound
adc
add
cmp
lods
lods
sub
dec
mov
fucom
ret
leave
movsb
push
xor
pop
popf
lods
lret
int3
sbb
adc
orb
xlat
cmc
loopne
adc
jecxz
loope
rorb
jg
cmp
popf
lods
lock
pop
adc
dec
cs
insb
popa
repnz
inc
jmp
jb
adc
xchg
jo
adc
add
lret
stos
add
jle
clc
pop
xlat
mov
xchg
es
test
inc
cmpsl
mov
decb
test
jb
loop
lret
into
test
fwait
hlt
cmp
pop
mov
loopne
mov
fists
fimuls
rcrl
cmc
loopne
stos
mov
aam
int3
test
or
fiaddl
test
mov
call
dec
insb
add
adc
fwait
mov
fisubrs
push
add
push
cli
pop
push
fiaddl
pop
adc
lods
jb
xchg
mov
adc
mov
stos
repz
cmpsb
test
jae
inc
aaa
xlat
rclb
orb
fisubs
sbb
repz
icebp
nopl
pop
mov
sbbl
sub
sbbl
mov
das
ret
adc
mov
mov
sub
pop
cmp
mov
enter
cld
arpl
dec
sbb
mov
jbe
gs
or
push
ret
jae
jecxz
inc
adc
mov
xchg
sbb
es
sub
mov
repnz
lahf
jo
push
adc
dec
and
inc
push
sahf
jo
sarb
mov
cmc
jbe
lods
adc
jo
push
cmpsb
and
jnp
and
je
cld
inc
lahf
mov
push
xchg
or
adc
in
ss
out
xor
dec
stc
pop
aad
mov
arpl
adc
fwait
cmp
pop
loopne
cltd
ss
mull
cmc
mov
push
test
cmp
mov
sbb
xchg
stos
cmpsb
cmp
pop
int3
sbb
and
jmp
sbb
jmp
add
jp
cli
insl
mov
mov
jno
jg
dec
shl
daa
inc
ljmp
aam
clc
adc
cmc
jnp
mov
jb
jl
jecxz
pop
and
inc
pop
in
aam
dec
shll
or
fldt
xchg
sbb
mov
out
push
xor
sbb
jp
push
cltd
test
test
das
mov
fxch
fistpll
mov
sub
lods
call
scas
xor
mov
cmp
mov
sbbb
inc
or
inc
outsl
mov
inc
mov
and
jle
dec
stos
sub
pop
fstpt
popf
push
sub
lea
and
pushf
fmull
mov
scas
fwait
out
xchg
inc
sub
cmp
jge
add
movsb
out
pop
sahf
lds
mov
stc
pop
lock
or
movsb
cli
xchg
xlat
lds
scas
neg
sbbl
loopne
push
push
mov
cmp
ss
repnz
pop
imulb
pop
imul
add
jg
pushf
sub
push
ja
jne
and
hlt
aad
sbb
mov
shll
cmc
xlat
sub
sub
rorb
ds
dec
loope
push
js
dec
mov
jmp
cmp
out
push
loope
pop
xor
lods
out
mov
int3
add
dec
std
sbb
pusha
add
jecxz
in
stos
xchg
cvtps2pi
mov
jmp
dec
mov
std
icebp
mov
stos
pop
mov
push
xor
xor
adc
ret
loope
cld
subl
mov
bt
leave
pop
sbb
dec
pop
lahf
xlat
ror
js
xchg
mov
sub
add
xor
scas
inc
in
ret
ds
je
lret
lods
lock
pusha
pusha
aas
fimull
push
pop
mov
and
pop
mov
mov
jae
sti
xor
push
cmp
add
mov
pusha
gs
xchg
or
fisubrs
push
fsubr
xchg
jb
pop
xor
jb
cmp
test
or
jge
sbb
push
repz
cmp
inc
insl
shrl
lods
adc
sbb
lds
inc
lods
movsb
xchg
in
arpl
mov
incb
out
outsb
mov
data16
in
inc
xor
sti
cli
xor
movsb
mov
or
adc
std
sub
cs
sbb
pop
mov
mov
push
data16
arpl
dec
cltd
test
mov
sbb
aam
pop
subl
xchg
iret
or
sub
mov
mov
push
or
push
dec
cmp
lcall
mov
fst
add
jnp
or
cs
adc
jge
and
jle
flds
mov
test
in
les
lods
call
es
and
inc
xchg
cmp
aam
lock
adc
cmp
shll
mov
rcll
adc
jmp
clc
and
dec
add
jg
ss
cmp
jo
out
push
nop
adc
mov
out
fs
lods
jae
idivb
and
inc
daa
add
int3
es
mov
push
scas
ljmp
add
imul
jnp
out
and
pop
icebp
outsl
cld
fisubrs
cli
leave
loopne
lds
xchg
lret
aad
xchg
cltd
test
xchg
pop
xchg
rep
inc
fildl
cltd
xor
addb
cmp
cmp
or
je
daa
jp
insb
shll
icebp
movsl
data16
ja
push
loop
inc
gs
add
inc
xchg
sbb
xchg
bnd
sub
xchg
hlt
add
testb
fnstenv
int
test
rcrl
sub
or
inc
fildl
frstor
mov
movsl
fmuls
adc
sub
lahf
xor
lret
push
out
jno
enter
das
cmp
mov
push
leave
addr16
mov
or
push
shll
mov
pop
lods
and
addb
push
out
xchg
xlat
sub
lret
in
mov
notb
pop
cld
inc
push
lods
loope
loopne
mov
sti
mov
cli
pop
sub
outsb
pop
xor
movsb
dec
cmc
push
imul
ret
std
add
fs
aaa
and
loop
jb
cld
jno
es
mov
cmc
cltd
xor
inc
and
cmp
icebp
xchg
rorl
xor
icebp
aaa
out
lahf
fldcw
xor
andl
lods
mov
or
gs
cltd
cmp
jp
mov
fldt
std
stos
mov
test
mov
and
mov
sbb
testb
xchg
adc
lret
shl
xorb
repz
or
test
xchg
push
je
mov
push
pop
sub
fdivrl
sub
inc
cmp
jbe
sbb
xor
outsl
xor
fdiv
adc
push
dec
and
dec
fs
popf
inc
mov
push
adc
jmp
gs
cmp
clc
jge
cmp
inc
clc
add
pop
in
mov
in
jle
mov
dec
pop
lods
clc
ljmp
sub
xchg
xlat
popa
out
inc
sbb
sub
xchg
adc
in
lcall
lahf
cmpsl
addb
push
lock
mov
push
and
movsl
ficoml
adcl
mov
jne
dec
cmpsl
jle,pt
jmp
ret
mov
sbb
jl
dec
scas
shrb
add
aam
lock
xor
cmp
pop
test
cmc
pop
add
push
push
xor
aaa
arpl
cwtl
cmp
push
inc
inc
push
cmc
adc
outsl
mov
pop
lcall
dec
int3
outsl
sbb
adc
sub
shrl
ss
sub
loop
int3
stos
inc
in
jbe
xchg
push
inc
aam
std
inc
loope
stos
push
sbb
fidivl
jae
adc
mov
fcomps
pop
and
push
jae
push
and
jbe
jl
cmpb
cltd
inc
loope
mov
sbb
into
mov
pop
test
pop
push
insb
shll
out
jle
xchg
or
mov
dec
adc
repz
cmp
cmp
leave
call
xlat
dec
int
inc
mov
cld
mov
in
pop
sub
mov
mov
push
push
and
mov
push
xor
ss
icebp
call
adc
imul
mov
ret
mov
pushf
cmp
inc
insl
scas
jl
loopne
insb
mov
and
daa
inc
gs
push
in
or
jae
mov
mov
adc
xchg
icebp
mov
loop
xor
fcoml
adc
mov
es
or
push
xchg
out
xchg
rol
sub
inc
loope
xor
or
sub
insb
adc
sub
test
push
cltd
dec
stos
clc
gs
mov
sbb
aaa
clc
jecxz
xchg
sbb
sub
les
insb
cs
push
push
push
rorb
jp
xor
fwait
imul
lahf
clc
mov
push
mov
gs
fistl
xchg
sarl
pusha
inc
es
out
and
pop
fistl
rcrl
mov
int3
adc
jae
cmp
push
xchg
cmpsb
mov
xorb
inc
sbb
mov
cwtl
sti
nop
cltd
adc
cmpsl
clc
out
iret
xchg
sbb
inc
dec
mov
sbb
inc
sbb
sbb
scas
lret
xlat
mov
dec
pop
test
xchg
pop
pushf
nop
daa
cmp
pop
scas
cmp
lret
mov
insl
fidivrl
jmp
inc
hlt
fwait
push
hlt
pop
mov
leave
cltd
test
je
movsl
pcmpeqb
inc
iret
sbb
shrb
pop
sub
or
in
or
xchg
xor
inc
fwait
iret
sub
mov
scas
pop
cmp
ret
jae
out
xchg
push
xchg
stc
out
xor
mov
adc
clc
dec
sub
jno
add
fbld
test
mov
repz
notl
sub
adc
aas
orb
sbb
mov
in
repnz
imul
cmc
lcall
andb
cmc
sub
lea
xchg
adc
movb
adc
aam
scas
mov
xchg
add
insl
sahf
repnz
sub
jbe
enter
fnstenv
lahf
es
mov
ja
cmp
arpl
pusha
adc
jl
push
xor
xchg
xchg
repz
jae
inc
fsubl
sahf
shrl
mov
call
scas
imul
pop
test
jnp
cmpsb
outsb
mov
mov
iret
popa
pusha
popf
iret
sbb
pushf
xor
add
leave
adc
jmp
sbb
daa
sti
cld
imul
mov
mov
shrb
popl
sbb
xorl
ret
js
aas
dec
inc
test
xor
cmp
jmp
sti
push
jmp
mov
inc
bswap
push
sti
push
iret
ljmp
and
out
mov
ljmp
pushf
or
cwtl
cmp
out
je
in
jmp
mov
outsl
xor
cwtl
das
jecxz
mulb
add
leave
mov
mov
inc
jne
xor
popa
xchg
pop
aas
dec
inc
lods
dec
psubq
movl
nop
rcl
ret
lret
push
hlt
add
mov
jb
cwtl
or
cmp
xor
jle
xchg
jbe
adc
add
adc
inc
cmp
fnstenv
das
add
pop
jmp
mov
lock
adc
sti
jmp
ret
dec
xchg
into
inc
sbb
inc
mov
xor
mov
and
fisttpl
dec
jmp
xor
sbb
cmp
xor
jg
popa
mov
imul
mov
imul
push
pop
xchg
sub
xor
push
ja
mov
push
mov
aam
pop
aam
xchg
jge
loope
inc
icebp
xchg
push
jae
push
xchg
pushf
pop
fwait
dec
mov
xchg
in
outsb
jae
sub
xchg
fdivl
cli
pusha
das
test
cwtl
lret
repnz
inc
push
stos
add
ljmp
cmp
or
adc
and
insl
pushf
shlb
adc
pushf
repz
montmul
cmpsb
inc
mov
jecxz
sub
pop
movsb
cmp
sbb
test
push
data16
into
int3
xchg
mov
push
dec
or
mov
int3
ja
xor
mov
xchg
adc
test
es
in
mov
imul
cmp
push
mov
push
or
and
and
mov
and
and
les
jmp
ss
sub
std
neg
sub
or
int
mov
gs
stos
sbb
pop
jl
repz
icebp
sub
es
xchg
lock
mov
js
ret
sub
adc
std
rcr
push
mov
mov
stos
dec
jne
lcall
lods
pop
sbb
mov
imul
inc
ja
cltd
mov
shll
std
push
adc
inc
push
mov
andb
push
and
or
scas
inc
jle
jae
pop
repz
sbb
in
jg
and
push
imul
daa
fs
or
mov
sahf
mov
pop
lods
daa
mov
xor
jns
sbb
iret
cmp
and
mov
cmpl
mov
cltd
lock
lret
xlat
sbb
xor
test
ret
outsb
gs
sub
adc
mov
xchg
loope
lcall
fstp
sub
shl
and
fnstsw
movsl
ds
bound
dec
pop
add
lds
fbld
adc
dec
or
cmp
xchg
and
jg
int3
or
jge
sub
xor
jge
jnp
shl
pop
adc
jg
inc
push
lahf
adc
fidivrs
mov
les
lds
push
cltd
sahf
dec
in
cmp
mov
mov
mov
pop
inc
fldl
test
push
outsl
outsb
nop
pop
xrelease
sbbb
repz
in
cltd
sbb
jl
repnz
jno
xchg
sub
xchg
adc
cmp
add
ljmp
repz
fwait
repz
and
adc
inc
mov
mov
icebp
addr16
mov
jecxz
inc
in
mov
cmp
add
cmp
cli
test
lods
add
scas
inc
fstl
lahf
mov
push
mov
adc
lea
inc
or
test
xor
mov
call
jno
in
lret
fadd
pop
adcb
jge
popfw
hlt
xchg
cmpsb
aad
stos
inc
pop
lcall
movsb
sarb
push
mov
sub
inc
test
pop
inc
jno
adc
in
sbb
lea
icebp
nop
jp
jmp
push
popf
data16
out
sti
pop
sub
or
dec
cmp
xor
outsl
lods
xlat
sahf
in
xchg
sbb
pop
in
and
jle
in
gs
nop
jo
in
arpl
daa
mov
fwait
jo
andb
pushf
mov
ret
xor
aad
daa
pop
loopne
xchg
adc
sbb
fistpl
cmp
adc
push
sub
xor
ja
dec
inc
fistpll
rclb
fwait
pop
imulb
test
and
and
repnz
mov
stos
inc
push
out
sub
jge
orl
notl
pop
outsl
sbb
cmpsb
xchg
cwtl
outsb
push
lret
cmpsb
fsub
jmp
jnp
lds
fcomp
pop
adc
rcrb
sub
sbbl
mov
add
lret
out
cmpb
and
pop
xchg
and
mov
cmc
mov
adc
je
cmp
push
xchg
mov
ret
cli
jae
out
and
fcoms
das
or
out
sti
aad
fwait
ljmp
ljmp
xchg
cmp
fmuls
sbb
mov
imul
xor
xchg
daa
mov
cltd
mov
inc
adc
lock
mov
fucomi
addl
sbb
mov
cltd
sub
sti
ss
data16
inc
push
dec
rorl
mov
int
aaa
jge
dec
cmp
xchg
popf
maxps
mov
or
in
mov
scas
mov
stc
nop
cmp
xchg
lods
in
mov
hlt
dec
imul
daa
pop
call
xor
iret
sarb
aas
sbbb
add
mov
mov
jo
adc
sbb
mov
stos
in
push
sbb
cmp
scas
loope
loope
fmulp
sbb
mov
xchg
scas
fwait
or
in
ss
mov
pop
js
add
scas
dec
pusha
in
push
test
fldpi
mov
mov
movsl
movaps
inc
repnz
add
sub
mov
mov
out
test
xchg
lods
adc
std
push
jae
and
mov
imul
adc
sbb
push
xchg
sbb
inc
jecxz
neg
out
xchg
sub
add
sti
inc
pop
jbe
leave
push
or
xchg
ja
push
aam
dec
shr
stc
mov
xlat
lods
in
inc
mulb
andl
pop
insl
jge
xchg
fidivl
xchg
push
push
pcmpeqb
add
dec
aam
ds
lahf
push
push
pop
call
in
popa
data16
xchg
xchg
push
aas
cld
jmp
fwait
ret
pushf
adc
je
insb
pop
sbb
or
aas
outsb
int3
jp
icebp
stos
or
add
cmp
scas
lea
js
scas
ss
or
add
ret
imul
adc
jp
cmp
insb
jb
sbb
and
push
mov
rolb
movsl
nop
pop
insl
rclb
mov
cmp
shrl
incl
stos
loop
out
cld
faddp
test
loope
sub
leave
add
pusha
jle
gs
xor
jbe
lds
jo
xor
dec
cmc
mov
std
leave
jl
push
cmp
std
xor
sub
push
loopne
sbb
in
or
icebp
cmp
or
fwait
cs
jb
shrb
add
dec
ds
mov
mov
jb
dec
int
fucom
ret
mull
push
ret
sub
outsb
add
ret
mov
imul
adc
into
xchg
dec
movsb
push
add
sub
jp
sub
clc
popl
pusha
push
jae
and
test
dec
sbb
pop
fnsave
call
in
xor
aad
adc
arpl
into
xchg
adc
rolb
pushf
jno
mov
and
out
in
sahf
lahf
sahf
mov
xchg
cmp
adc
aad
xor
dec
aam
loop
repnz
and
aam
or
adcb
sub
cmp
pop
dec
rorb
xor
dec
xor
adc
lret
push
jmp
fdivr
jo
ret
xor
dec
adc
cmp
sbb
test
movsb
push
es
xchg
pop
push
push
push
cmpb
cmp
pop
data16
xlat
jp
scas
loop
pop
add
inc
cs
rorb
inc
push
rol
dec
sub
xor
repnz
roll
pop
mov
mov
ja
jl
and
call
pop
out
jo
xchg
jae
mov
aaa
sarl
push
leave
pop
cmc
push
or
push
stos
daa
cmp
cmp
adc
ljmp
mov
arpl
mov
mov
rcll
shlb
add
adc
lret
aas
mov
xlat
ds
or
iret
pop
dec
add
cmp
andb
pop
jmp
lahf
mov
leave
inc
ljmp
xchg
sub
js
mov
pushf
aaa
stos
js
push
fimuls
movsl
pop
and
aaa
pop
xor
pop
icebp
js
xchg
outsb
lds
mov
stos
jmp
and
ss
outsb
repz
mov
incl
mov
fistpll
dec
dec
fnstenv
sarb
add
popf
mov
scas
or
es
inc
not
insb
inc
shlb
call
or
daa
add
inc
cmc
cltd
ljmp
fisubrl
pmaxsw
add
push
mov
sub
mov
incb
dec
lock
fwait
push
push
inc
jge
sbb
ret
test
loope
jg
jmp
scas
sbb
or
cwtl
xorb
rol
xor
cmp
pusha
sbb
ret
pop
or
repnz
mov
push
mov
movsl
push
jo
lods
loope
fmull
mov
std
mov
sub
dec
cmp
add
popl
dec
jae
repz
adc
lock
jp
xor
inc
pop
jb
lock
adc
or
scas
mov
aam
out
rolb
cmp
std
nop
ja
out
test
xlat
or
add
add
xor
and
and
sahf
add
mov
or
adc
movl
int3
adc
mov
gs
sbb
add
shll
out
xor
addl
sbb
mov
jb
mov
cmpsl
sub
in
xlat
outsb
and
mov
inc
inc
cmc
cmp
lea
repz
jmp
ret
lds
stos
jb
cmp
popa
jnp
shrl
ja
out
xchg
js
bswap
xor
sbb
mov
pop
clc
clc
adc
inc
push
scas
sub
pop
pop
cmp
xor
sbb
xchg
mov
iret
arpl
mov
insb
test
push
outsb
and
dec
dec
addr16
inc
dec
adc
push
leave
lahf
push
mov
ljmp
push
mov
push
in
and
leave
mov
push
mov
fdivrp
test
pop
jbe
mov
loop
mov
adc
rorb
mov
das
das
dec
mov
cli
ret
jl
shrb
popf
out
jmp
ss
or
es
sqrtps
mov
xor
scas
push
pushf
pmaxsw
fwait
xor
mov
addr16
adc
inc
push
fs
sub
mov
bound
cmp
insb
in
push
jmp
mov
lods
testl
ret
ds
imul
add
ljmp
and
ds
jo
loope
mov
frstor
mov
or
dec
aad
mov
jno
jmp
or
fstpt
icebp
or
sub
xchg
sahf
and
movsb
icebp
aas
and
xor
mov
shlb
int
cmp
push
imul
jo,pt
aas
test
cltd
cli
ja
sub
data16
imul
add
or
adc
in
dec
popa
shl
inc
mov
test
test
imul
shrb
in
aas
sbb
push
push
popl
cmp
and
dec
loopne
enter
inc
ljmp
mov
xchg
icebp
push
or
shlb
inc
lcall
imul
xlat
sub
jae
mov
pusha
mov
add
cli
dec
mov
inc
xchg
addl
loopne
fistps
xchg
fsubrl
xor
adc
outsb
add
aad
lock
shrb
mov
aad
fisttpl
cwtl
dec
fists
insl
daa
dec
mov
push
lea
mov
inc
mov
out
inc
push
pushl
lods
rclb
pusha
ss
adc
hlt
jae
rorb
pusha
mov
loope
cwtl
sub
test
out
xchg
arpl
jb
cs
xor
addr16
cs
or
adc
aad
das
xchg
push
jmp
lods
mov
jnp
push
cwtl
mov
lret
pop
xchg
jmp
and
test
outsl
daa
push
jns
mov
add
inc
aaa
data16
mov
add
movsb
dec
sti
and
or
jnp
leave
in
sbbl
pop
repz
lret
sti
jle
cld
and
inc
xchg
je
push
out
sub
add
mov
jb
inc
movsl
xlat
ss
jb
pop
mov
arpl
ljmp
and
arpl
movsb
adc
xor
movsl
xor
push
add
dec
popa
lcall
mov
popf
lods
dec
sbb
cmc
jge
addb
dec
les
ljmp
add
decl
jge
mov
and
fwait
test
adcl
jecxz
push
shll
incl
add
sahf
push
aad
out
cmp
jbe
in
pusha
in
mov
lds
and
aad
sub
rorl
pop
test
xor
fdivl
loope
and
mov
out
shrl
or
lcall
push
dec
or
lock
mov
movsb
pop
inc
pop
data16
adc
mov
xor
or
dec
sbb
rcll
pushf
mov
mov
cli
or
inc
mov
jle
xchg
mov
mov
aam
push
into
fistpll
xchg
or
stos
nop
pop
lret
and
mov
dec
xor
mov
xor
fsubrl
adc
or
mov
jne
lret
sub
stos
icebp
enter
mov
mov
sbb
cmp
mov
out
mov
aad
stos
cltd
xor
andb
mov
lahf
xor
pop
pop
repnz
ror
insb
dec
out
jecxz
test
lret
jge
arpl
je
shrl
arpl
lods
cmp
xchg
stc
int3
imul
mov
sbb
add
dec
pop
jno
mov
cmp
push
inc
push
push
jbe
adc
movsl
mov
aas
xor
push
sbb
push
mov
dec
mov
fldcw
mov
xchg
jg
bound
out
adc
pop
fnclex
mov
arpl
mov
xchg
mov
dec
shrl
vmwrite
adcb
sbb
aam
push
vpunpckldq
loop
shr
shrb
mov
movsb
add
xchg
xor
cmp
xchg
mov
test
in
stc
mul
inc
scas
sbb
addl
add
inc
jb
jecxz
sbb
rol
pop
dec
bound
sub
xor
outsb
inc
pop
push
addb
fs
out
sub
jbe
loope
and
insb
mov
mov
ret
push
sub
popf
or
fnstenv
cmc
mov
adc
pop
dec
cmpsb
ljmp
or
mov
cmpsb
inc
fsubr
mov
jecxz
cli
fildl
enter
enter
and
push
arpl
jo
mov
mov
sti
or
adc
cmp
aaa
sbb
and
lret
ficoml
mov
mov
out
push
in
xchg
xchg
mov
sbb
clc
sbb
lret
push
jmp
insl
push
mov
push
and
int3
mov
mov
shlb
push
push
movsl
push
mov
aaa
dec
out
call
insl
jge
scas
push
insl
pop
inc
shll
andb
pusha
sbb
sub
outsl
lods
mov
mov
jae
cmp
outsl
cmpsl
mov
cmp
jp
xchg
pop
jb
mov
daa
xchg
jo
dec
dec
shll
out
aam
mov
lcall
and
mov
lea
imul
fiaddl
arpl
push
ja
mov
out
lds
aad
xchg
pop
cmp
rorl
push
or
inc
dec
or
mov
lcall
mov
imul
xor
and
dec
outsb
aad
sub
subl
shll
loop
and
inc
jmp
jp
jo
sbb
mov
loopne
add
call
fwait
jo
loope
dec
sbb
jp
hlt
add
insl
inc
sub
popf
out
cmp
jecxz
or
mov
icebp
jb
xlat
outsb
push
xchg
push
mov
je
shll
insb
and
rcl
pop
or
xchg
clc
dec
mov
xorl
insb
ds
scas
test
lahf
mov
mov
insb
mov
lret
sub
jmp
out
jmp
jne
in
ds
pop
enter
lret
mov
ljmp
je
gs
jmp
mov
jmp
jp
aaa
xor
adc
sbb
pop
dec
xor
ja
cmpsl
in
je
jecxz
dec
and
cmpsl
xchg
call
sub
lods
inc
cmp
inc
sahf
add
not
mov
imul
mov
out
push
cwtl
out
xor
lds
mull
sbb
and
out
aas
mov
inc
dec
mov
outsl
lret
mov
dec
add
push
cld
fwait
sbb
das
pop
mov
out
shlb
or
jo
cld
add
pop
subb
mov
sti
jge
aam
cld
sbb
iret
dec
out
in
dec
addr16
jmp
jmp
fidivs
mov
mov
fwait
xchg
in
jns
push
xchg
insl
xor
xor
jl
xchg
sbb
out
test
jbe
test
jmp
pop
lock
psubusw
dec
arpl
in
aas
imul
pop
aad
inc
pop
cmp
js
pop
test
fdivrl
leave
std
cmpsl
mov
call
adc
push
mov
shrb
cmp
sub
jp
pop
lods
mov
stc
movsl
mov
inc
push
xor
mov
test
inc
scas
push
repnz
inc
inc
mov
aam
pop
lods
inc
push
or
out
adc
push
movsb
pushf
sub
mov
sub
es
inc
push
cli
push
push
and
icebp
sahf
add
cli
inc
lret
aaa
loope
xchg
adc
out
cmp
push
pushf
pop
push
das
popa
and
push
jne
inc
cli
push
cli
cmpsl
ljmp
dec
inc
mov
dec
int
jle
fldcw
lahf
fdivp
lock
xlat
or
and
clc
xlat
outsb
sub
mov
inc
mov
jmp
rclb
pop
pop
pop
add
lods
inc
cmp
in
adc
loop
mov
in
or
jns
insl
and
fldcw
test
mov
jmp
jnp
insl
mov
jle
fisubrl
cmc
push
dec
xchg
jns
mov
jecxz
insl
testb
test
jmp
pop
xorl
icebp
add
cmpl
or
ret
ficoml
pop
inc
jo
inc
scas
imul
dec
push
incl
xor
xchg
test
dec
sbb
lcall
das
and
pop
cs
jmp
adc
int3
in
pop
enter
mov
inc
hlt
in
cs
lret
sti
repnz
stos
pop
call
xchg
or
xor
and
add
xor
jmp
xchg
ds
out
jp
and
test
fdivl
mov
or
jne
and
xor
movsl
mov
int3
sub
xor
sub
imul
repz
inc
dec
mov
loopne
insb
adc
adc
xchg
je
adc
jno
test
movsl
cmp
cmpsb
or
enter
jno
imul
scas
sarl
push
sbbl
stos
jp
sbb
xchg
stos
add
push
push
mov
bt
sub
pop
pop
scas
popf
add
mov
jle
int
cmp
stos
lock
cmp
jg
mov
mov
test
mov
aaa
fnstenv
popf
ss
jge
inc
mov
fwait
repz
sarl
jno
mov
xor
insl
cld
mov
aad
cmc
sbb
fwait
dec
fsubrs
jbe
mov
sbb
pop
je
mov
in
pop
and
inc
inc
add
mov
mov
mov
fnstcw
cmpsl
mov
sbb
test
jo
test
inc
xor
sti
iret
push
mov
mov
xchg
out
adc
test
jbe
mov
xor
nop
push
adc
icebp
dec
rcrl
fistpl
mov
ret
repnz
push
std
cwtl
int3
xor
sub
fcom
rol
je
sub
sbbl
sub
movsl
cmpsb
ror
push
dec
pop
fisubrl
xor
mov
inc
pop
clc
test
cmpsl
mov
dec
movsb
imul
int3
xor
lods
pop
jne
sbb
test
rclb
mov
mov
xlat
ja
dec
jecxz
mov
fcompl
jbe
or
pop
xor
inc
fnstsw
adc
sbb
mov
or
aaa
jl
cs
push
in
mov
fadds
je
mov
fdivrs
mov
sbb
push
xchg
dec
and
jg
fsubr
cmpsl
mov
sub
loopne
jmp
stos
inc
icebp
movsb
imul
mov
adc
xchg
fiadds
call
aam
add
mov
pop
insb
and
mov
movsl
sbbb
repz
icebp
sbb
loopne
aaa
mov
repz
mov
das
arpl
dec
cmp
and
inc
mov
pusha
and
cmpsb
lea
lcall
iret
pop
cmp
enter
adc
dec
int3
arpl
out
jne
fnstenv
fprem1
outsl
in
outsl
push
popa
ja
into
lea
in
push
adc
shl
rcrb
sub
jb
inc
or
pop
imul
lret
dec
xchg
lea
inc
adc
daa
adc
je
jl
test
xchg
xor
or
and
push
cs
mov
mov
adc
xchg
nop
add
imul
fsubrp
mov
insl
xchg
leave
xor
push
dec
fisttps
mov
andl
ret
sti
ds
aaa
jmp
repz
and
xor
xchg
push
inc
inc
xchg
outsb
inc
mov
xlat
ss
jns
addr16
add
xchg
pop
sbb
fs
push
jb
cmp
sbb
pop
cmpl
push
lock
xor
inc
push
dec
ret
fdivl
into
mov
ss
test
aad
cmp
and
add
add
nop
and
sub
lret
and
add
stos
jle
lods
inc
sub
das
cmp
cmp
cmc
aam
les
out
or
mov
mov
push
sbb
pop
rolb
jle
ljmp
call
and
xor
out
shr
scas
sub
cmpl
fstpl
dec
adc
es
sub
loop
pop
test
addr16
mov
adc
and
mov
sub
das
dec
xchg
cld
mov
jg
mov
mov
js
clc
adc
mov
pop
hlt
das
lds
mov
addr16
add
mov
cmp
cmp
je
mov
scas
xor
pop
mov
push
xlat
shll
push
mov
dec
ficoms
call
cmp
lahf
jns
cmp
jg
adc
test
or
mov
test
shll
mov
and
xor
icebp
inc
sbb
stos
pop
les
dec
inc
stos
aas
in
sbb
fldl
pop
mov
push
lret
bound
loopne
xchg
xor
jg
out
insb
or
pop
sahf
sti
lods
repz
mov
push
jbe
xchg
xor
test
lods
in
js
pop
mov
imul
ret
adc
dec
hlt
lea
sub
stos
lahf
in
mov
jmp
and
inc
andb
imul
cmc
mov
inc
sbbl
pop
cmpsb
mov
jge
jl
dec
dec
sbb
fs
clc
bound
cltd
dec
clc
xchg
orb
xchg
ficoml
ss
repz
lods
das
mov
push
sahf
jnp
mov
imul
in
mov
push
pop
outsb
icebp
push
inc
pop
fwait
add
pushf
popa
out
test
xchg
daa
shr
jg
lods
sahf
icebp
pop
loope
nop
adc
das
mov
testl
ret
fldenv
push
jbe
add
test
add
ljmp
xchg
mov
xlat
mov
fs
cmp
mov
mov
dec
jb
jns
arpl
jne
loopne
movsl
faddl
or
shrl
ret
loope
add
stos
jp
cmp
adc
mov
ret
cmpsb
sub
fwait
or
fdivl
dec
insl
cmp
sbb
dec
xchg
cmp
pushf
pop
adc
cmp
adc
fwait
xor
out
lods
pop
in
mov
xchg
cmpsl
adc
nop
dec
push
pushf
mov
in
fucomip
cli
dec
xchg
icebp
xchg
out
and
bound
dec
and
out
movsl
aad
add
xor
repz
mov
push
and
packuswb
push
and
inc
fdivl
inc
adc
ja
pop
mov
mov
rcrb
and
mov
sbb
imul
nop
cmp
ret
add
lcall
adc
jns
jecxz
xchg
mov
pop
repnz
jmp
adc
sub
cmp
and
out
sahf
xor
insl
out
sbb
and
cmp
popa
adc
imul
cmp
aaa
mov
inc
orl
jae
push
mov
xchg
cmc
xchg
daa
mov
push
in
nop
add
mov
gs
inc
aad
dec
aad
adc
sbb
or
arpl
mov
repz
xor
mov
gs
mov
in
gs
adc
lret
jg
cli
and
mov
es
icebp
loop
cli
adc
incl
jno
fs
loop
dec
or
hlt
jo
cmp
sbb
lds
je
lods
sbb
xchg
jmp
pop
xlat
andl
aam
mov
pop
jmp
adc
jge
jle
sub
scas
push
inc
fmull
push
mov
mov
pop
adc
nop
push
xchg
comiss
sti
repnz
mov
stc
call
data16
stos
xchg
xchg
jbe
ja
jl
push
xchg
cmp
or
adc
lret
fcom
loope
mov
xchg
jecxz
insl
loopne
cwtl
xor
xor
bnd
stos
gs
pop
add
lods
adc
jle
subl
aas
cmpsl
das
jle
mov
rcrl
mov
sbb
les
sbb
out
mov
mov
push
adc
xlat
sub
dec
es
cwtl
repnz
and
hlt
push
xcrypt-cbc
cmpsl
adc
pop
scas
cltd
sub
mov
cld
jbe
dec
stos
ja
loope
cwtl
mov
movsl
pop
popf
lock
jo
loop
adc
lods
movsl
cmp
sub
popa
stc
pop
ret
mov
push
sub
imul
mov
mov
jl
xchg
fsubl
in
dec
adc
inc
xchg
xor
mov
dec
sarl
movsb
sbb
fistps
lea
in
xorl
in
sub
fmul
mov
int3
jbe
cmpl
xchg
sbb
push
ljmp
jno
dec
lods
dec
movsb
addr16
xlat
and
add
test
push
es
push
ds
cmpsb
movsb
incl
imul
aas
inc
dec
movsb
ss
es
jp
pop
lret
pop
xchg
xchg
add
xor
cmpsl
dec
adc
cmpsl
shlb
sbb
xor
xchg
add
insb
mov
mov
repz
lcall
inc
xor
call
mov
inc
test
xor
cltd
adc
into
xor
jne
adc
mov
arpl
sbb
mov
adc
in
sbb
dec
cmp
in
insl
cwtl
dec
movsl
inc
lea
hlt
dec
sbb
mov
add
xlat
xchg
scas
inc
out
loope
adc
mov
iret
loop
add
int
xor
nop
mov
lcall
imulb
andb
test
ret
pop
adc
clc
ret
pop
push
pop
and
divb
and
jb
loopne
arpl
scas
jb
sarl
mov
lds
and
cmpl
sub
push
cmp
jmp
xchg
push
nop
mov
inc
or
movsl
cmp
leave
arpl
test
pop
xlat
and
mov
jge
in
mov
ret
iret
xor
mov
dec
popf
inc
fcoms
mov
xchg
adcl
or
pop
rcrl
sub
push
in
or
and
dec
fsubr
jae
ret
sbb
popf
ss
push
pop
xchg
jmp
nop
and
xor
cmp
mov
shlb
push
out
adc
imul
insb
popf
sbb
mov
sub
mov
or
call
jns
jae
je
je
xchg
dec
push
movsl
xor
jmp
cli
push
add
and
testb
cmp
xor
push
cs
xchg
xchg
sti
or
sub
mov
in
aaa
push
dec
mov
dec
sub
outsb
sbb
dec
testl
fldt
mov
fnsave
pop
scas
xchg
mov
mov
repz
sti
cmp
push
inc
loopne
jmp
repnz
cmpsl
loope
sub
les
repnz
test
pushf
push
mov
js
call
adc
adc
mov
imul
in
xchg
mov
jb
mov
and
movsb
pop
icebp
add
imul
das
or
mov
push
scas
mov
stos
add
aaa
add
es
fsubrl
push
jno
test
mov
cmpl
ja,pt
push
cwtl
imul
pop
add
jge
and
push
jb
mov
sahf
mov
add
xchg
xor
dec
push
imul
ljmp
mov
enter
xlat
out
push
and
pushf
out
insl
push
arpl
and
mov
arpl
pop
sub
stc
iret
arpl
jo
xchg
pop
dec
cmp
lret
test
aas
pop
mov
push
daa
sub
jnp
jb
loopne
out
mov
jge
sti
xchg
outsl
loopne
in
dec
mov
fstl
in
mov
fstpl
test
ss
popa
mov
push
dec
xor
mov
pop
popf
xor
xchg
pop
testb
fidivs
mov
cs
out
sub
imul
pop
push
mov
xchg
sub
lods
xchg
and
stos
movsb
enter
and
adcl
and
pop
sahf
cltd
push
inc
fnstenv
stos
inc
dec
ljmp
ret
loop
jge
insl
add
cmc
mov
call
xchg
jae
pop
insl
ret
mov
sbb
xor
mov
and
lods
add
cmp
xchg
and
and
xor
cvtpi2ps
add
lret
testl
add
sub
pop
icebp
je
mov
xor
setle
data16
cmpb
adc
xor
xor
imul
sbb
lcall
shlb
mov
cld
push
and
dec
loop
cli
rorb
sbb
cmp
inc
jbe
sahf
mov
pop
cmc
js
out
pop
cs
mov
push
dec
movsb
or
cmp
in
mov
cmpsl
repz
pop
lock
mov
dec
xor
push
lahf
cld
ljmp
jbe
or
out
arpl
jge
sti
jo
int
or
jle
xchg
dec
cmc
cmp
fisubrs
add
in
mov
out
out
push
mov
sbb
mov
in
cmp
jb
mov
mov
mov
adc
testl
mov
cmpsl
pop
in
ret
das
test
jbe
and
and
pop
pop
cltd
pop
shlb
insb
add
bound
push
and
idivl
mov
jecxz
shll
pop
sbb
and
mov
sub
sbbl
jmp
testl
repnz
rolb
repnz
fcmovu
jns
inc
sub
popa
clc
das
dec
inc
jns
pop
cli
pusha
insb
jecxz
xor
mov
cmp
add
adc
orl
scas
in
iret
in
xchg
pop
gs
jno
add
pushf
xchg
dec
add
or
mov
jno
cld
into
dec
inc
or
jne
pop
hlt
push
jbe
lods
mov
or
repnz
in
xchg
adc
push
pop
insl
rol
add
or
sbb
sbb
jp
test
add
cltd
je
push
push
dec
cltd
fwait
or
shrl
dec
ret
inc
aam
test
ja
leave
iret
fcomi
push
lret
jb
pop
mov
repnz
and
leave
aad
xor
fistpll
fiadds
shr
jae
or
mov
in
xor
or
push
iret
xchg
xchg
scas
adc
fimull
cmp
hlt
cwtl
bnd
adc
jo
pop
add
pushf
xor
lods
sbb
iret
movd
loop
and
flds
xchg
jb,pn
frstor
dec
push
cwtl
lods
inc
adc
sbbl
or
xchg
sahf
mov
and
int
out
xor
jno
out
jbe
loopne
pop
dec
fistps
daa
xchg
or
push
movsl
pop
mov
sub
filds
popf
mov
mov
shll
jge
xrelease
test
lret
and
rol
adc
loop
push
je
mov
xor
mov
mov
in
lods
out
je
mov
out
jp
and
ficoml
cmp
jmp
daa
sbb
mov
lahf
mov
mov
in
jns
xlat
scas
repz
test
lods
lcall
sarb
jp
jne
jns
add
jmp
cmovbe
or
das
ficoml
imul
pop
or
mov
in
mov
in
in
arpl
test
inc
sbbb
add
jl
and
add
xchg
or
hlt
cmp
dec
mov
inc
adc
xchg
push
in
outsl
sbb
mov
insb
mov
pop
insb
xorb
mov
stos
inc
inc
push
xlat
dec
cmp
jge
fsubrl
xchg
add
call
lret
dec
mov
stos
test
scas
jne
or
lcall
dec
cmp
add
sbb
iret
jbe
hlt
orl
int
mov
fiaddl
adc
into
adc
pop
sbb
rorl
xor
xchg
enter
mov
repz
or
add
lcall
mov
inc
or
jne
clc
sub
jne
xchg
mov
xchg
mov
jne
xchg
jmp
or
push
mov
sbb
sbbb
dec
and
dec
xor
xchg
add
popl
adc
mov
or
xchg
test
dec
sub
mov
push
sbb
or
push
movntq
icebp
std
lock
cmpsb
xchg
sbb
xor
ljmp
fbstp
push
or
test
cmpsl
sahf
das
adc
shrl
decl
loopne
call
xor
inc
les
gs
add
mov
pop
jge
sub
imull
shrl
jge
sub
xchg
int
inc
sub
sbb
jnp
lds
adc
leave
dec
aas
cmc
aaa
out
sbb
dec
mov
mov
mov
shl
cmp
popa
nop
push
xor
in
mov
jno
hlt
iret
movsb
fimuls
inc
mov
sbb
pop
cmpsl
lds
jno
lods
rcll
dec
sbb
es
jmp
sbb
into
outsl
xchg
mov
sarb
repz
setnp
or
add
arpl
or
subl
ret
jl
cmp
adc
loop
addr16
jge
push
loopne
or
es
mov
pop
dec
movb
xor
dec
insb
pop
push
leave
or
loopne
add
int
push
xchg
loop
enter
pop
data16
add
bound
xchg
imul
inc
rcl
shll
sbb
add
adc
xlat
ss
add
lods
scas
or
or
inc
jb
push
xor
aam
loop
mov
jp
mov
dec
push
out
sahf
jns
mov
stos
add
mov
inc
jns
sub
inc
and
push
gs
jge
je
imul
sub
mov
ret
inc
mov
xchg
add
adc
push
loope
insl
and
push
in
testb
push
out
popf
mov
loopne
adc
cld
jo
andl
cmpsl
push
pop
xor
push
mov
ficoms
shll
pop
fdivrp
mov
mov
out
add
popa
in
cmpl
adc
fnstenv
push
sti
inc
lahf
mov
jbe
or
xchg
stos
decb
mov
add
fisubrl
cld
lcall
pop
push
into
or
mov
movsl
cmc
and
add
xor
or
bound
mov
jbe
pop
repnz
add
ret
pop
dec
lock
pop
out
push
lahf
add
insb
mov
jge
mov
xor
inc
lods
loop
adc
popa
mov
mov
push
mov
int
add
and
add
mov
inc
cli
sbb
and
or
pop
sub
ret
clc
sub
jecxz
jne
mov
iret
or
adc
cmovle
test
mov
cmp
xlat
pusha
out
in
jae
push
movsl
sahf
jle
mov
mov
pop
aaa
mov
dec
cmp
adc
fisttps
sbb
xchg
cmp
pop
jb
push
add
pop
ds
inc
into
xor
mov
xchg
jae
in
or
in
daa
out
imul
dec
fdivrs
nop
mov
fnstenv
mov
and
fwait
aas
dec
test
adc
jl
xor
dec
adc
pusha
pop
jnp
dec
hlt
jb
test
adc
pusha
divl
pop
jle
sarl
inc
leave
cld
mov
shrb
add
jmp
push
cmp
jns
jp
mov
pushf
xchg
pop
xor
lahf
pusha
aam
mulb
mov
inc
leave
add
rorw
scas
dec
in
mov
test
scas
push
sbb
fimuls
xor
insl
lahf
jns
mov
sbb
push
loopne
xor
mov
adc
fstpt
jbe
push
out
pop
enter
lret
sti
push
andb
push
out
fbstp
stos
lods
lods
outsb
add
mov
lret
test
sub
pop
lret
sti
inc
pop
mov
xchg
addr16
adc
test
test
je
or
bndldx
xchg
sub
ds
imul
add
pushf
fcom
pop
sub
adc
in
xchg
cwtl
das
push
cmc
push
cld
mov
push
cmpsl
cmp
aam
lahf
rep
cmp
cltd
es
xor
push
sbb
dec
mov
pop
in
add
fmull
cmc
jbe
xor
icebp
cmp
adc
outsb
ret
xor
sub
xor
dec
jne
add
std
sbb
jae
jmp
jbe
orb
enter
and
gs
inc
jne
and
xor
dec
movsl
inc
xor
and
dec
cwtl
push
fsts
pop
mov
and
cmp
inc
add
decl
shl
xchg
pop
popa
dec
mov
enter
imul
add
in
inc
mov
jbe
imul
and
std
lods
mov
sub
out
pop
mov
subb
fidivl
gs
push
int
xor
das
push
xchg
pop
out
push
sahf
xchg
stos
inc
bound
jmp
cli
xchg
sbb
in
filds
movl
adc
insb
fucomi
popf
jb
inc
inc
xchg
inc
loop
out
sub
cmp
bnd
into
outsl
jbe
add
sbb
into
and
lret
adc
lcall
stos
mov
mov
scas
fsin
lea
lret
pop
sarb
add
in
repnz
fcomps
mov
jb
jl
sbb
cmp
aaa
pop
clc
pop
imul
or
sti
mov
push
sbb
ja
arpl
lock
and
xchg
xchg
fimull
sbb
inc
imul
fistpll
mov
pushf
adc
pop
call
push
inc
call
rcrl
pop
imul
xchg
pushf
idivb
std
ljmp
out
jge
je
mov
lret
jl
rdmsr
stos
fldl
stc
arpl
lods
add
inc
mov
imul
cmpsb
push
mov
orb
push
mov
gs
cwtl
and
popa
dec
inc
push
std
xorb
adc
addb
sbb
out
mov
ret
fidivs
mov
cld
add
mov
cmp
or
and
push
dec
add
int
lods
clc
dec
pop
sbb
jae
cld
and
outsb
ret
loope
popf
test
mov
dec
xor
clc
pushf
pop
rcrb
xchg
hlt
popa
loope
push
inc
rcrl
in
fstps
or
mov
push
scas
inc
out
pop
adc
or
cli
xor
cs
sbb
dec
loop
daa
mov
mov
push
mov
mov
pop
and
add
das
test
jbe
mov
and
and
rcrl
fisubrl
aam
mov
bound
stc
cmp
aad
lea
mov
in
jns
mov
fcmovb
fidivs
lock
and
iret
gs
fsubrp
adc
xchg
mov
cltd
sbb
dec
sahf
inc
add
outsl
push
aas
push
jp
sub
std
cmp
inc
sarb
xchg
mov
lcall
iret
addr16
int
int
movsbl
dec
iret
int
or
rcrl
movsb
jmp
jb
pop
mov
add
mov
imul
mov
fbld
movups
ljmp
mov
aaa
lock
push
repnz
cmpb
or
dec
lahf
push
jbe
cmp
in
jl
fwait
xor
sbb
loop,pt
push
lahf
shl
cwtl
ficompl
mov
inc
xchg
cmp
pop
push
inc
into
pop
pop
xor
call
test
cld
xchg
rcll
fcmove
sahf
mov
mov
shl
jnp
addr16
movsl
out
push
and
mov
test
xchg
mov
fstl
scas
cld
imul
inc
pop
sarb
jne
lret
push
adc
or
sbb
xor
mov
fadd
or
std
les
cmpsl
adc
cld
inc
enter
fdivrs
push
data16
push
test
lret
arpl
jg
test
jg
aas
or
sub
push
popf
hlt
dec
movsl
mov
inc
and
jno
cmp
xchg
push
add
xchg
fpatan
enter
push
push
mov
inc
jno
cmp
ds
rcl
in
or
test
out
dec
mov
cltd
dec
stos
jnp
test
and
hlt
add
sbb
sbb
jns
xchg
add
orl
or
xchg
lods
cmp
and
frstor
sarl
dec
and
cvttss2si
fldenv
outsb
add
push
das
mov
and
cli
call
or
jge
xor
add
pop
mov
push
add
xor
outsb
ja
pop
test
lock
sub
mov
mov
fnstcw
rolb
mov
pop
out
iret
rcrl
adc
aam
push
push
and
jae
jg
outsb
outsb
jge
dec
jnp
repnz
lock
push
rorb
popa
or
hlt
cmp
aad
test
adc
jp
mov
add
push
leave
clc
test
les
jl
sbbl
fdiv
mov
aam
mov
or
daa
mov
fistpll
cld
or
sbb
push
out
test
sbb
pop
ja
or
insl
xor
clc
push
loop
les
dec
and
push
cmpsb
call
jp
push
sub
jb
pop
mov
xor
nop
daa
mov
push
insb
cli
js
xlat
test
mov
jb
test
out
add
or
mov
sbb
adc
mov
mov
scas
xor
iret
insb
iret
jp
jecxz
shr
scas
add
add
ljmp
add
lds
stc
and
mov
bound
stos
gs
cmp
mov
data16
cmp
and
jecxz
xchg
pusha
lea
xchg
test
xor
push
ja
lea
sbb
mov
push
popf
sub
sbb
jo
data16
into
lret
sarb
and
outsb
lret
je
sub
fisttpl
or
dec
idivb
push
andb
popf
insb
jp
mov
mov
repnz
hlt
fwait
sub
mov
in
mov
pop
test
fists
aas
adc
sahf
mov
repz
cmova
inc
idivl
sarb
pop
idivb
sahf
push
out
jmp
add
mov
inc
aaa
mov
rol
ja
div
push
repnz
bound
push
mov
pop
jb
je
cmp
repnz
daa
mov
lcall
repz
mov
cltd
std
jb
xchg
js
sbb
int3
shrb
dec
outsl
pop
xlat
dec
loop
jno
jge
loopne
xchg
adc
dec
lock
cmp
cmp
dec
xchg
mov
stc
ficompl
sbbl
cmp
xchg
xchg
outsl
lret
cwtl
jbe
lods
mov
movb
push
cli
jp
inc
das
mov
insb
jmp
test
mov
popf
jmp
dec
xchg
out
dec
push
cld
adc
jno
std
movsb
iret
or
stc
inc
bound
addb
pop
lahf
sahf
jns
shrd
ret
xchg
sub
cli
lahf
shlb
inc
cmp
push
jae
lods
lods
xor
fucomip
pop
push
inc
hlt
or
inc
in
xchg
adc
imul
add
test
push
les
test
daa
sub
arpl
mov
stos
fs
push
pop
cwtl
sbb
jne
mov
aad
pop
inc
add
sub
pushf
mov
jle
xor
push
lds
movsl
in
or
sub
popf
insb
fwait
jmp
in
adcl
push
loop
adc
cmp
iret
push
dec
in
nop
inc
arpl
push
sub
dec
lret
xor
adcb
dec
jg
fsubl
sti
mov
add
inc
scas
push
in
adc
shrl
and
imul
pop
xchg
adc
mov
fnsave
mov
mov
dec
out
jne
les
jg
loope
push
sbb
ret
mov
cmp
adc
lahf
enter
xor
loop
inc
inc
add
scas
lret
push
sub
pop
clc
mov
xor
mov
xchg
sub
movb
jl
mov
xor
xor
repz
incl
push
repnz
mov
mov
ret
repnz
inc
test
out
lcall
jge
bound
adc
push
lcall
push
mov
xchg
adc
jne
loop
add
xchg
cld
cltd
es
scas
push
mov
lods
sbb
fildll
rolb
imul
dec
mov
push
fs
xchg
cld
or
sahf
dec
mov
scas
xchg
lods
pop
adc
sbb
mov
repz
xor
notb
dec
mov
mov
nop
mov
pushf
or
cmp
sbb
pusha
movsbl
repnz
test
sbb
loopne
mov
dec
push
movntps
sbb
jmp
or
push
push
sbbl
pop
and
push
addr16
pop
cmpsb
mov
cmpsl
jp
std
dec
xor
fistpl
scas
in
outsb
mov
daa
fmuls
lcall
imul
mov
sbb
adc
lret
insl
mov
stos
lods
sti
test
das
notb
imul
jns
outsl
cltd
xor
jne
adc
arpl
orl
pop
mov
mov
fldenv
pop
jae
sub
cmc
fsts
xor
push
test
or
and
stos
ret
sub
popf
push
ret
xchg
je
mov
lds
push
xor
popf
into
push
xor
jl
add
inc
lods
lcall
fimull
loope
cwtl
test
into
sub
sbbl
or
mov
fildll
inc
push
jp
mov
dec
shll
xlat
imul
jmp
jmp
adc
cli
ds
jae
int
sbb
pop
shrl
repnz
outsl
mov
mov
ret
xchg
adc
pop
sbb
mov
and
mov
in
xchg
pop
repz
mov
lret
or
iret
mov
xchg
adc
mov
dec
xor
dec
adc
loop
jno
or
sbb
dec
sbb
cmp
or
daa
ss
popa
xchg
mov
cmp
jl
xor
pop
or
mov
ja
cmpsl
jno
xor
push
xor
jo
push
out
push
mov
add
dec
out
push
imul
jb
fdiv
dec
in
ja
insl
push
push
imul
fs
dec
xor
divl
mov
mov
xchg
dec
roll
jbe
jl
sub
dec
repz
mov
out
push
jp
shll
push
outsb
fidivl
push
cmp
inc
or
loop
xlat
aas
push
jo
aad
mov
or
xor
clc
push
add
outsb
popa
adc
popf
dec
repnz
or
and
jge
es
fsubrl
out
mov
and
inc
sub
and
push
cmpb
call
and
mov
outsb
pop
push
out
dec
cmpsl
ret
int3
and
cld
fwait
in
fwait
mov
fstpl
lret
mov
in
dec
lahf
jno
and
jge
test
test
adc
sbb
mov
pop
mov
mov
cmpsb
incb
popf
mov
mov
cmc
mov
mov
adc
loopne
ss
adc
aas
add
sub
daa
inc
outsb
dec
in
test
and
push
js
mov
fisubrs
inc
adc
dec
fwait
dec
sbb
cld
sub
pop
imul
cli
sarl
mov
push
push
lods
mov
iret
loope
mov
popf
cld
xor
arpl
and
cltd
out
cwtl
arpl
rcrl
stc
loope
dec
jbe
pop
inc
sub
dec
cmp
sub
sbb
xchg
mov
cmpsl
xor
scas
stc
push
adc
or
push
adc
in
negb
js
int3
subl
rol
rcrb
sbb
and
lret
cld
lods
repz
pop
mov
xchg
test
xor
jge
loop
aad
dec
pop
dec
mul
xchg
add
mov
popf
leave
pusha
iret
fists
sbb
fwait
shld
ja
xchg
imul
sub
ret
xlat
push
dec
mov
addr16
cmc
in
xchg
clc
jle
push
rolb
out
mov
lods
out
jp
notb
nop
lea
int3
mov
pop
dec
lods
ljmp
jmp
pop
cmp
ss
loopne
rcll
sar
ret
rcl
inc
add
push
xchg
fisubrl
mov
std
cs
push
jge
pop
xor
mov
daa
ficoml
and
cmc
rolb
ret
cs
mov
push
insb
fucomip
push
std
xchg
cmp
or
scas
xchg
sub
cli
into
inc
xchg
jle
jle
mov
pop
sbb
push
fs
call
hlt
adc
xchg
ficoml
movl
push
imul
loope
cld
imul
pop
mov
adc
inc
or
xor
in
dec
out
out
sbbb
gs
sahf
jmp
push
inc
adc
sbb
jbe
or
push
xor
adc
mov
stc
out
ja
or
cmp
push
dec
pop
push
outsb
dec
mulb
push
jnp
mov
xor
xor
push
into
fiadds
fdivs
lcall
in
into
bound
mov
fldl
xchg
shl
fsubr
dec
dec
repz
sub
add
cmp
push
mov
fldl
pop
push
jns
rcll
sub
insl
in
jmp
mov
dec
jno
mov
xchg
pop
push
call
ret
pop
push
jbe
cli
sub
loope
sub
adcl
scas
sbbb
mov
or
rcrl
dec
sbb
fcomip
xor
imul
cld
cltd
xor
and
fdivl
aaa
movsb
mov
cmp
push
pusha
insl
mov
rolb
inc
sbb
jo
push
push
imull
cltd
jle
idiv
xchg
sub
in
cmp
stos
mov
dec
jecxz
xor
push
outsl
mov
incl
cmpsb
xchg
or
loope
mov
fnsave
divl
sbb
stos
in
stc
rcrl
push
fidivl
xchg
mov
out
push
mov
adc
pop
dec
pop
out
leave
fadd
adc
sub
fnstsw
inc
mov
lret
mov
xorb
adc
sub
sub
ljmp
jo
mov
idivl
sbb
js
xchg
cmc
test
or
faddp
cmp
push
fimull
rcrl
jnp
popa
push
jo
push
in
mov
call
loop
sbb
leave
mov
sub
jbe
stos
fisubl
mov
bound
ljmp
movsb
xor
fldcw
mov
dec
add
icebp
in
jg
mov
inc
les
mov
mov
mov
bound
inc
and
xor
or
ds
negb
nop
push
sbbb
dec
ret
push
mov
push
mov
inc
loop
xor
dec
add
pop
jge
jbe
sub
add
dec
xchg
dec
and
jecxz
jno
xchg
jl
lods
push
lcall
mov
dec
adc
hlt
dec
shr
lock
lds
push
push
push
ss
jecxz
and
lods
inc
bound
insl
lods
popa
or
inc
insl
push
cmpsl
xor
cmp
push
mov
mov
scas
rolb
aad
xlat
xor
mul
in
sbb
clc
cmpl
nop
ja
pop
ljmp
pop
addl
imul
fwait
xchg
and
mov
inc
repz
inc
fldcw
pop
mov
mov
adcb
data16
mov
in
mov
cli
adc
shlb
lock
fcomip
push
divb
sub
inc
pop
inc
testl
addr16
cs
fidivrl
mov
int
movsl
pop
xor
mov
out
test
ficompl
and
lea
push
repz
aad
or
add
and
xchg
xor
sbb
or
adc
sti
push
cmpsl
lds
xor
cmp
pop
fwait
cmp
fimull
xchg
and
in
push
and
pushf
loop
hlt
push
mov
call
imul
xchg
pop
jno
jns
jbe
lock
xor
push
fistpl
pop
addr16
inc
std
inc
stos
sub
xlat
filds
pusha
fs
dec
inc
xchg
mov
mov
xlat
shrl
jmp
adcb
and
out
add
jb
add
mov
sub
or
xchg
orl
inc
dec
fdivrl
dec
pop
dec
aam
and
sbb
cmp
stos
cmp
mov
into
hlt
mov
into
and
hlt
jae
jmp
test
and
mov
mov
xor
in
divl
inc
add
notl
mov
or
shll
leave
mov
inc
loop
push
push
jo
aas
and
and
fsubs
pop
jecxz
sbb
dec
sbb
aas
adc
or
mov
shrl
xor
mov
in
icebp
adc
sbb
in
shll
sub
fadds
push
inc
pop
sarl
mov
adc
popa
push
mov
fstl
jnp
or
popa
mov
push
jmp
popa
ss
inc
shl
nop
rcpps
leave
mov
xchg
mov
xchg
ror
cmpsb
xor
lods
out
mov
xor
jbe
push
sub
mov
loopne
pop
insb
jle
inc
cmp
inc
add
and
push
daa
jae
ljmp
into
sub
adc
add
xor
call
mov
ret
add
fsubrs
push
mov
add
xchg
xor
jae
fwait
nop
fsubr
idivl
cld
ret
or
mov
fiadds
pop
add
mov
inc
inc
bound
bound
pop
xor
es
or
cmp
lcall
mov
data16
push
in
mov
pusha
sti
repnz
dec
and
jg
cmc
out
or
mov
das
out
test
adc
out
xorb
mov
dec
fidivs
push
mul
ljmp
xchg
or
pop
stos
and
pop
loopne
dec
call
aad
or
push
push
lahf
or
das
and
or
xchg
and
jo
dec
loop
out
cld
inc
dec
or
shlb
into
das
cmovge
nop
int
jnp
and
dec
dec
out
xchg
jo
push
or
incl
dec
or
ret
or
dec
mov
dec
inc
fsub
cmpsl
inc
test
daa
arpl
sysret
dec
test
or
ds
repnz
jmp
int3
int
mov
dec
xchg
add
xor
in
test
jne
repz
lret
jecxz
push
sbb
inc
ljmp
cmp
negl
rorb
sbb
hlt
hlt
scas
or
lcall
xlat
imul
subl
lods
repz
sti
and
daa
or
or
sub
sbb
xor
xchg
imul
stc
jg
xor
mov
fcoms
xor
sar
mov
xor
jl
jbe
or
push
sti
out
xorl
fdiv
pop
shrb
push
pop
mov
xor
xor
jbe
clc
xchg
fcoms
fbstp
jae
xlat
leave
roll
test
jne
in
xchg
add
sbb
rorl
clc
rcrl
cmpsl
ds
sar
sbb
mov
bt
push
pop
dec
shl
scas
push
out
jecxz
adc
mulb
imulb
scas
repnz
rcl
jl
dec
aas
testl
add
mov
int3
and
fcompp
ljmp
orl
sbb
jnp
xor
out
sub
popa
mov
jb
jnp
scas
cli
pop
fmuls
pop
xor
sbb
mov
xchg
push
fs
mov
shl
insb
outsl
les
inc
jo
dec
mov
xor
or
xchg
lods
mov
fld
xchg
fisttps
or
aad
lret
clc
xchg
bound
stos
ja
stc
or
mov
or
insb
dec
pop
out
push
lods
or
inc
pushf
mov
mov
jbe
mov
pop
jmp
nop
mov
lret
pop
push
jl
stos
scas
mov
dec
lds
adc
lods
xchg
lds
xor
xchg
adc
inc
fprem
sbb
jecxz
sub
sar
inc
jae
repz
mov
leave
sbb
sbbl
pop
mov
fsubrl
std
cmp
add
shll
jne
inc
add
fmuls
xlat
cli
jns
pop
negb
xor
cmp
push
stc
rcl
adc
xor
pop
out
push
lret
xor
enter
xchg
ret
mov
mov
clc
bound
sbb
pop
xor
mov
fwait
cltd
adc
insb
pop
ficoms
hlt
fwait
mov
mov
mov
lods
push
outsb
mov
push
sub
mov
ds
inc
jns
push
lea
mov
xor
inc
pusha
jle
inc
bound
int
or
xchg
popa
loopne
scas
shrl
mov
in
inc
nop
je
repz
mov
mov
ja
imul
mov
pop
sub
fbstp
ret
mov
xchg
adc
mov
xor
arpl
inc
fidivl
xlat
insb
add
inc
sbb
pop
lcall
mov
sbb
adc
imul
add
lahf
sbbl
movsl
aam
fcoms
add
xchg
sbbl
test
imul
insb
add
sbb
pop
inc
aam
ljmp
scas
cli
mov
xor
fdivrs
mov
or
repz
xchg
cmp
pop
mov
insb
xchg
adc
icebp
leave
inc
repz
pop
enter
xchg
add
test
fnstcw
jo
jb
pop
pop
lcall
inc
mov
out
or
lods
lea
cmpsb
pop
mov
movsl
mov
test
incb
jecxz
in
sti
cvtss2si
add
xchg
jp
test
and
inc
xchg
aaa
cmpsl
stc
dec
pusha
and
add
sub
test
xor
push
das
shrb
inc
cli
xor
adc
ret
cltd
jge
pop
lcall
lock
out
pusha
adc
add
jecxz
int3
arpl
sahf
lods
dec
pop
in
jge
out
popf
sub
push
in
push
cwtl
jnp
xchg
jno
sahf
scas
pop
lahf
sbb
sarl
stc
pop
mov
xor
or
mov
addr16
aad
orl
lods
adc
jecxz
lahf
fcomi
loopne
push
or
xchg
shll
inc
inc
inc
jmp
xchg
cmp
out
xor
test
pop
es
push
inc
xchg
mov
jae
jp
std
cmp
icebp
adc
xor
inc
fldcw
dec
xchg
push
outsb
loope
or
mov
lods
mov
sbb
push
shll
jae
and
mov
loope
cmc
jle
push
mov
cwtl
addl
sahf
jno
lds
dec
dec
sbb
popf
sbbl
sti
flds
dec
sahf
inc
sar
xlat
hlt
adc
mov
and
lds
call
pushf
call
pop
jne
flds
test
fisubs
lret
or
mov
ljmp
ficomps
and
xchg
lods
cmp
mov
mov
push
xor
mov
inc
ljmp
insb
and
jle
xor
mov
xlat
pop
jno
rolb
mov
ficoml
mov
lret
push
xchg
sub
ja
add
mov
ss
xchg
in
add
addr16
popa
dec
data16
sarl
mov
pushf
leave
add
or
inc
cmpsb
ret
ja
xchg
pop
mov
fucomip
pop
out
or
xchg
stc
loopne
cmpsb
push
cmp
mov
or
sbb
push
pop
xchg
sub
out
sub
rol
xor
mov
inc
scas
sarl
aas
adc
fldl
inc
je
jne
test
adc
pop
pop
or
cmpb
jb
in
aam
adc
imul
mov
adc
pusha
ss
mov
inc
xor
je
aas
add
pop
popa
mov
xchg
sbb
test
lods
add
push
fwait
inc
lret
sbb
addr16
lods
cs
lods
lret
arpl
stc
jecxz
inc
inc
repz
repz
mov
inc
pusha
inc
mov
stos
pop
faddp
and
dec
pop
insl
test
mov
sbb
xchg
push
xor
repnz
mov
in
sbb
mov
fsubp
out
lret
pop
mov
lahf
sbb
mov
cmp
mov
sub
pop
cmpsl
sbb
fstpt
clc
inc
mov
jo
xor
jbe
adc
cmpl
arpl
mov
adc
mov
leave
xchg
and
and
test
inc
inc
pop
rclb
repz
cs
pop
insl
jbe
jp
subb
loope
xor
inc
rep
jg
ja
sbb
dec
es
jmp
test
mov
jecxz
sbb
sbbb
cmp
push
mov
fwait
insb
sbb
dec
aaa
aaa
add
and
lret
sub
adc
in
push
jb
ja
and
loop
out
lcall
adc
gs
fwait
pop
inc
fsts
xchg
loope
jae
shll
ds
outsb
inc
push
xchg
lret
add
outsb
lahf
arpl
lods
and
hlt
data16
outsl
pop
adc
data16
jle
dec
rcrb
mov
inc
mov
les
mov
add
imul
push
lret
mov
pop
ret
sub
pop
ss
mov
scas
inc
adc
dec
mov
jecxz
sub
inc
jns
dec
xor
arpl
adcl
mov
inc
fsts
push
inc
fistpll
adc
xor
xchg
test
jns
scas
and
lcall
push
mov
sbb
and
outsb
subb
incl
leave
test
xchg
pop
test
and
cmpsb
lock
mov
mov
stos
xor
cltd
and
mov
popf
mov
clc
xchg
inc
cld
outsb
scas
pop
fwait
jmp
in
xchg
adc
and
or
adc
adc
jmp
sbb
sarl
pop
imul
and
push
aam
pop
push
mov
es
mov
lock
subb
iret
lret
outsl
gs
mov
mov
mov
mov
jg
inc
mov
ja
hlt
rcr
xchg
lods
stc
insb
add
imul
adc
adc
cli
push
subb
imul
dec
pop
add
and
scas
es
mov
push
pop
sub
iret
jecxz
shrl
clc
repnz
dec
in
mov
push
push
xchg
mov
mov
jl
dec
mov
adc
ret
mov
mov
scas
add
mov
pavgw
jp
lcall
cmp
and
js
out
repz
jecxz
mov
imul
cmp
xchg
add
add
cltd
sub
into
pop
test
mov
or
cmp
pop
mov
fld
popf
sahf
xor
outsb
pop
loopne
fs
jecxz
lds
jbe
dec
out
cwtl
rol
xlat
negb
movsl
std
into
fisubrs
jbe
jbe
sub
hlt
add
mov
lods
push
out
movsb
aaa
pop
sub
jo
inc
mov
pop
mov
push
mov
pop
jge
push
push
jne
xor
xor
mov
sub
inc
loope
in
addr16
inc
popf
jb
mov
stos
jge
pusha
stc
rorb
daa
inc
mov
popa
mov
pop
push
scas
push
xor
js
xchg
daa
mov
outsl
fildl
jo
mov
lahf
and
jno,pn
jo
pushf
xor
orl
push
mov
push
in
shlb
jo
loopne
andb
addr16
arpl
ret
ljmp
div
std
pop
xor
xlat
mov
jmp
mov
push
push
jae
sub
or
jnp
es
mov
xor
fwait
xor
adc
push
ss
jno
fs
add
ficomps
scas
adc
adc
mov
lods
jbe
shlb
jecxz
mov
mov
or
mov
out
mov
ds
jp
ficoml
xor
mov
popa
sahf
cmp
call
mov
aam
or
push
std
mov
push
fisubrs
loopne
pop
dec
and
and
xor
repnz
jmp
xlat
sbb
sti
fcmovb
jp
jl
stos
dec
loopne
fcom
sti
aas
addr16
jo
pop
mov
sahf
pushf
xlat
or
xor
fwait
loopne
stos
pushf
pushf
ja
mov
push
mov
shlb
ret
mov
shll
xor
sub
and
imul
sub
mov
sti
ds
inc
adc
movsb
dec
int3
out
lods
fisttpll
dec
in
in
andb
push
and
sub
xorb
sub
push
ljmp
adc
test
add
inc
js
dec
and
push
push
lret
add
call
ds
sahf
add
mov
pop
and
add
sub
clc
push
cmp
add
sahf
stos
arpl
aas
cwtl
pop
es
mov
jg
sbb
mov
cmp
push
inc
jb
sahf
gs
int3
xchg
jno
push
mov
jecxz
cmp
hlt
add
xchg
mov
mov
jmp
pop
sbb
pop
pop
mov
cmp
es
mov
lods
jmp
add
jno
jmp
mov
stos
imul
mov
insb
ret
add
sbb
dec
bound
enter
jne
dec
lret
jnp
out
aas
in
sbb
xchg
or
pop
and
shlb
add
inc
xchg
icebp
jle
das
add
push
jo
test
jg
dec
test
lret
mov
xor
movsl
mov
aas
jmp
pop
cmp
jae
ds
add
push
push
push
sbb
stos
test
sub
pop
add
inc
push
stos
sub
or
mov
xchg
sub
lcall
enter
pusha
mov
fbstp
cmp
inc
adc
in
push
ljmp
jmp
lds
lahf
mov
lahf
mov
jecxz
sbb
add
js
mov
add
pop
mov
pop
pop
imul
je
inc
xor
inc
bound
push
fistpl
cmp
add
fidivl
loop
lahf
mov
ja
push
sub
mov
mov
mov
popa
clc
scas
shll
cli
out
daa
mov
jg
dec
aad
arpl
out
fdivrl
inc
aam
enter
mov
add
fcoml
mov
hlt
xor
xlat
fucomip
lahf
out
mov
jge
ljmp
push
std
iret
or
push
jne
adc
sbb
sbb
ret
or
std
mov
rclb
aaa
int
jne
fldenv
aad
jbe
ljmp
lret
repnz
int
mov
aad
push
cwtl
mov
into
aaa
push
pop
sahf
xchg
mov
push
adc
int3
nop
and
ja
xchg
mov
mov
outsl
clc
clc
lret
les
shll
or
add
cs
push
nop
mov
test
out
inc
inc
call
mov
call
mov
jns
adc
pop
sub
insb
aaa
out
xor
lods
jecxz
inc
dec
aad
mov
sbb
xchg
adc
daa
cltd
test
or
mov
cld
inc
jbe
cmp
ja
xchg
xor
lahf
loop,pt
fs
lret
les
jbe
mov
iret
test
inc
cmp
adc
push
fwait
or
into
push
in
nop
ljmp
stc
imul
push
mov
pop
shrb
shll
push
sbb
and
jbe
rcl
lds
test
pop
data16
sub
sahf
sbb
lahf
stos
int3
lret
out
sbb
mov
lret
test
ror
repz
sar
int
pop
cmpsb
inc
mov
mov
push
mov
test
add
vmovaps
aam
push
loope
andl
fcoms
mov
cmp
sbb
insb
ret
stos
and
aaa
xor
cli
enter
pop
mov
sub
dec
insl
xchg
xlat
fidivs
mov
into
int
test
dec
inc
test
ljmp
pop
mov
mov
out
inc
xchg
mov
or
sub
xor
fbld
call
lea
inc
loop
mov
fwait
rcrl
mov
jp
mov
dec
adc
sbbl
push
test
xor
test
adc
fcoms
xlat
icebp
ss
rorl
ss
movsl
inc
sbb
cmpsb
les
insl
push
push
fst
xchg
add
inc
add
arpl
xchg
adc
dec
cmpsb
test
sbb
mov
in
inc
inc
push
add
scas
leave
jge
and
lcall
pop
je
cmp
shr
repz
scas
and
xor
repnz
add
movsl
fistps
and
sti
aad
sub
lock
jns
mov
dec
xorb
nop
add
or
add
sbb
loope
pminsw
je
cmp
dec
push
outsb
or
cwtl
cs
mov
jl
jb
nop
jp
mov
std
cmpsb
in
adc
fisttpll
adc
mov
mov
sbb
fisttpl
mov
jnp
imul
lods
xchg
or
dec
outsl
test
aas
push
addr16
pusha
sbb
jae
push
sub
mov
jnp
or
sbb
rorb
in
scas
mov
adc
pop
and
aam
js
pop
cmpb
ret
loope
pop
xchg
inc
rorb
les
lcall
in
add
mov
xchg
dec
lods
sahf
repz
adc
fs
or
fidivrs
inc
pusha
inc
mov
add
shrb
out
call
lcall
in
stos
and
mov
out
adc
mov
bound
mov
fistpll
pop
push
mov
lcall
jbe
mul
pop
sub
test
mov
mov
loop
fldt
icebp
mov
data16
dec
lea
add
out
pop
pop
jge
cmp
loop
xchg
cmp
imul
sbb
mov
lahf
fsubr
scas
cmp
or
jne
popa
jmp
pop
jae
leave
add
sub
inc
cmpsb
jp
and
arpl
movups
jbe
lret
fs
jo
roll
repz
add
mov
outsb
outsl
dec
push
testb
add
es
dec
stos
push
cmp
fmuls
fs
pop
inc
cmpsb
mov
dec
jg
dec
rep
sbb
clc
dec
popa
adcl
sbb
cmp
push
jbe
jge
pop
les
lahf
add
inc
fnstsw
test
jae
lods
into
sbb
sbb
cmp
daa
mov
roll
sbb
and
outsb
pusha
mov
cmc
rcl
sub
das
ss
fcomps
sub
outsl
mov
outsb
ljmp
push
aaa
ja
sbb
call
sbb
lods
dec
je
mov
push
scas
inc
loope
pusha
cs
add
insl
test
adc
repz
insb
sub
popf
sbb
sub
loop
lock
mov
pinsrw
and
push
cmpsl
sbb
insl
add
lock
in
dec
or
mov
xor
mov
adc
xor
add
push
and
jnp
sub
and
jno
das
xor
jae
or
cmp
pusha
and
jns
pushl
xchg
lcall
andb
mov
insl
pop
add
mov
addr16
mov
xchg
loope
xor
lock
and
scas
hlt
mov
sbb
push
jbe
pusha
imul
sahf
sbb
loope
sbb
jns
mov
jmp
aaa
add
pop
shl
aaa
mov
mov
into
gs
jbe
xchg
dec
jge,pt
xchg
arpl
lret
jb
pop
and
das
cmp
sub
mov
mov
cmp
push
stc
or
sub
cld
xor
lds
dec
jle
sti
sub
sub
dec
scas
fidivs
lcall
mov
clc
out
jg
mov
or
les
pop
lock
cmp
ja
in
pop
repnz
pop
pop
dec
enter
jns
daa
imul
pushf
push
cmp
push
cmc
popa
jae
xchg
ds
arpl
nop
pop
and
shrl
cltd
stos
xor
movzwl
and
scas
push
test
ja
mov
and
adc
lcall
pop
enter
sbb
mov
xor
xchg
xor
pop
jmp
inc
push
jnp
hlt
push
inc
mov
sbbl
push
mov
js
cltd
cmpsl
pop
xor
fidivrl
stos
lret
dec
dec
packuswb
and
test
or
cmp
lret
sahf
add
sbb
pop
mov
or
xor
mov
iret
inc
nopl
inc
gs
inc
sbb
ljmp
sub
out
sahf
addr16
inc
lds
repnz
inc
stos
out
jns
loope
push
and
sahf
xor
push
sbb
shl
cmp
fsts
mov
popf
in
push
jb
adc
jecxz
ret
jnp
cs
and
xor
js
test
jle
pop
sub
xor
sbb
in
daa
dec
repz
dec
mov
loope
pop
sbb
inc
pop
cmpsl
cmp
xchg
jns
xor
cmp
and
push
push
pop
jmp
iret
xorb
out
or
adc
repz
push
jo
push
roll
ret
mov
fiaddl
mov
clc
dec
cmp
xlat
jo
xchg
sub
adc
out
es
repz
push
jns
inc
and
sbb
cli
or
movsb
cmp
into
repnz
adc
jnp
mov
iret
movsb
jl
mov
inc
cmc
testb
cs
in
rorb
clc
push
push
scas
mov
fwait
pop
jno
cwtl
mov
notl
sub
movsl
mov
idivl
cmp
shlb
mov
or
dec
sahf
in
cmc
jns
mov
mov
or
jb
mov
lret
xor
jb
test
inc
lahf
push
xor
fsubl
test
movsl
xor
mov
popa
fmull
mov
push
lds
repnz
pop
aaa
push
add
push
push
je
adc
outsb
pop
scas
sbb
sbb
std
mov
mov
rcrb
sahf
out
shl
sub
sbb
cli
sub
cmc
mov
cmp
push
mov
xor
out
testl
mov
cmp
cmp
addr16
xchg
fidivrs
sbb
shl
cmp
imul
jno
and
bnd
push
rcrl
jne
add
inc
ficoml
ret
fidivrl
lea
cli
mov
cwtl
int
test
stos
adc
xlat
in
xchg
jg
mov
or
popf
test
inc
mov
add
mov
mov
int
out
or
lret
data16
pushf
outsl
sub
dec
fcmovnbe
add
pushl
xchg
xor
sub
mov
adc
push
hlt
cmp
addr16
mov
fwait
inc
fmul
fs
test
cmpsl
dec
dec
mov
push
in
outsl
cmp
aaa
jl
std
sahf
push
inc
sarb
frstor
sbb
dec
negb
out
test
enter
orl
scas
enter
iret
in
mov
pop
ljmp
cmpsl
clc
jae
cld
and
xchg
sti
sbb
push
ds
shlb
hlt
push
xchg
or
pop
outsb
jle
mov
pop
lods
movsl
cmpsl
ret
sahf
inc
mov
inc
or
jb
clc
dec
xchg
dec
pop
call
xlat
test
pop
xchg
push
mov
sbb
or
lret
mov
jmp
insl
sbb
in
xor
sbb
sub
xor
xchg
fidivl
aad
in
add
push
stos
mov
sahf
in
stc
or
dec
repz
or
loope
jmp
jns
ljmp
adc
popa
mov
xchg
xor
sti
test
ror
and
loop
lcall
cwtl
daa
mov
adc
mov
xchg
jnp
test
jae
sub
inc
sbb
insb
arpl
iret
cltd
divb
mov
xor
jae
dec
sbb
adc
ret
mov
mov
xlat
nop
out
ja
movsl
movsb
aam
inc
lcall
sbb
sbb
out
push
mov
push
cmc
into
pop
div
into
or
addr16
mov
mov
mov
or
push
pop
sbb
adc
sbb
xor
jne
stos
in
inc
xorl
and
jno
jnp
ja
ret
dec
test
call
sarb
adc
insb
imul
int
jne
xor
mov
xor
jno
mov
clc
iret
cmpsl
mov
inc
mov
cld
clc
fdivrs
std
sbb
add
adc
inc
pminub
scas
cmpsb
inc
or
xchg
outsl
imul
mov
mov
mov
and
sbb
mov
dec
sbb
cmp
and
jb
xor
movsb
aam
ds
fbld
jmp
pushf
and
imul
mov
out
push
jno
xor
mov
xlat
dec
enter
xchg
fnstenv
imul
cli
mov
jmp
cmp
sarl
or
fbld
xor
push
add
add
mov
inc
hlt
int
into
outsl
adc
mov
rcr
mov
jg
into
xorb
mov
hlt
je
jo
and
jnp
das
inc
mov
notb
jle
in
bnd
rcl
pop
scas
ja
mov
jge
cmp
jns
jne
cmp
fbld
push
test
xor
mov
push
cmpsb
lret
loopne
mov
xchg
nop
adc
cltd
jno
push
xor
cmpsl
inc
inc
test
mov
or
lock
dec
inc
movsl
js
jl
ret
orb
dec
call
cmp
jecxz
test
enter
cmc
mov
mov
xor
add
cmpsl
xor
in
jne
mov
stos
inc
cltd
push
imul
int
inc
loope
cmp
popa
std
jb
and
js
dec
adc
loope
in
jno
ja
cmpxchg
cltd
int3
outsb
xorl
cmp
mov
cs
mov
mov
mov
loop
sub
cmc
pop
dec
lock
dec
mov
adc
scas
in
dec
dec
jb
push
movsb
outsb
rol
ret
cmpsb
lods
jecxz
dec
dec
jae
jbe
into
sub
cmpsb
rcr
dec
dec
push
dec
loopne
and
movsl
xchg
cs
sub
jge
rcrl
or
adc
insl
popa
sahf
mov
jne
xchg
repnz
mov
std
xchg
dec
sbb
pop
mov
shrl
lods
out
addl
mov
and
pop
xchg
adc
jecxz
js
inc
fcmove
and
scas
xchg
outsl
and
jle
into
repz
add
stos
rolb
xor
in
scas
out
out
mov
adc
stos
cwtl
incb
cmp
sub
int3
aam
fs
pop
cmc
fistps
in
mov
je
lods
add
cmp
jae
test
xorl
and
xor
push
in
jle
adc
ja
cmp
xor
jmp
dec
fsubl
jmp
mov
mov
popf
incb
loope
jns
clc
mov
call
pop
jg
mov
in
sub
cmp
imul
xor
pushf
inc
add
inc
js
mov
std
mov
mov
push
shrl
or
sub
dec
and
dec
lcall
mov
sar
xchg
add
inc
fdivrs
pop
testb
cmpsb
cmp
outsl
or
sarb
pop
push
out
mov
aam
mov
mov
into
sete
inc
out
aad
push
loope
scas
adc
mov
lcall
and
mov
outsl
pop
hlt
mov
sarl
std
xchg
testb
std
cmp
call
sbb
sub
lret
cli
sub
sbbl
or
lahf
repz
enter
jp
adc
je
mov
lock
dec
mov
push
movsl
cmpsb
rcl
imul
mov
clc
cmp
imul
das
mov
ficoms
cmpsl
cmpps
repnz
daa
mov
lea
sub
xchg
and
aas
in
adc
push
nop
and
push
lcall
movsl
in
loopne
sbb
mov
mov
cmp
insb
cmpl
mov
shll
push
and
icebp
mov
cmpsb
pop
mov
push
ljmp
jb
dec
dec
pop
bnd
nop
daa
mov
jle
mov
inc
inc
fidivs
mov
int3
fnstsw
sub
jae
and
jp
icebp
stos
inc
add
lea
jns
add
int3
arpl
ja
cltd
movsl
cmp
jle
xor
mov
daa
mov
movsl
cmp
out
mov
into
jecxz
in
sbbl
outsb
add
jecxz
into
gs
cmp
mov
mov
cltd
mov
arpl
jg
cmp
iret
shlb
push
push
mov
xor
sbb
bound
pop
test
push
popf
fst
sub
add
repnz
adc
lods
fwait
mov
ror
ds
repnz
cmp
and
mov
ret
clc
test
dec
dec
cld
xchg
or
pop
repz
sbb
dec
add
sbbl
in
rcrl
stos
inc
dec
hlt
fwait
xor
fidivl
into
xor
arpl
dec
in
mov
fcmovnb
pop
or
arpl
push
movsl
dec
rorl
movsl
add
fdivl
pop
sub
inc
pop
jmp
add
fdivrl
arpl
lods
aaa
fsts
out
pop
sbb
rorb
xlat
outsb
cmp
jmp
int3
sbb
or
xchg
clc
out
shrb
das
cmp
pop
or
jp
leave
or
or
sbbb
push
shrb
mov
test
or
les
sbb
push
movsl
in
aaa
into
idivb
xor
imul
jp
cmc
ret
shrl
and
addr16
and
cwtl
das
add
adc
xchg
inc
rcrb
xchg
pop
pop
push
in
inc
adc
mov
add
adc
dec
adc
mov
pop
or
cmp
lahf
ss
in
xchg
and
and
sub
add
inc
cld
es
push
ljmp
push
add
xor
or
adc
test
loope
int
push
add
dec
jecxz
adc
sub
mov
jmp
sbb
xlat
cmp
pop
bnd
adc
aas
lret
cli
out
sti
xchg
push
sub
mov
inc
iret
imul
shl
jnp
xor
test
mov
adc
fsubr
orb
lods
inc
dec
mov
dec
fists
xchg
sub
inc
fdivs
mov
and
enter
mov
test
shrb
push
xchg
sub
mov
xchg
jmp
cmp
imul
lcall
es
leave
lds
std
xchg
jl
movsl
cmp
mov
cmpsl
stos
inc
sub
pop
pop
int
mov
lea
xchg
into
mov
and
mov
ret
cmpl
jne
loope
or
out
xchg
sahf
xor
stos
inc
outsb
add
add
out
push
in
adcl
sbbl
sbb
mov
or
idivl
add
arpl
sbb
cli
test
mov
push
jp
testl
pop
movsl
sahf
xor
mov
pop
out
pop
jo
aas
movsl
lds
sbb
push
jb
xlat
mov
xorb
mov
xor
push
imul
leave
stc
sbbb
push
outsl
movsb
cmp
test
push
push
xchg
fwait
iret
lds
es
push
fadds
iret
inc
fdivr
push
sub
inc
and
and
add
sbb
cwtl
das
sbb
push
in
or
leave
pusha
xor
jae
inc
jmp
xchg
sbb
jg
adc
cmp
or
cmp
sbb
sbb
sahf
inc
add
xor
and
js
mov
mov
movsb
int
or
sarl
idivb
and
xor
mov
cwtl
jge
and
in
popa
clc
int3
pop
pop
mov
lock
and
dec
xchg
sub
lods
xchg
sub
popf
imul
cli
and
sbb
inc
pop
cmpl
insb
rclb
add
and
inc
movsl
mov
addr16
inc
pop
lret
mov
mov
loopne
cmp
aas
xchg
sub
cmp
insl
lret
bound
fdivr
xchg
or
cmc
or
sub
mov
xor
inc
bound
scas
test
data16
mov
mov
pop
adc
dec
sub
sbb
es
lods
rcl
icebp
into
xor
sti
adc
ljmp
jo
xchg
outsl
shr
mov
shll
or
out
adc
adc
insl
add
fs
xchg
scas
stc
nop
fnsave
mov
in
push
sub
push
cmpsl
testl
sub
scas
inc
sub
mov
jle
sub
shlb
jg
mov
inc
fcomps
cltd
xor
jns
or
mov
lods
dec
out
push
movsl
push
aad
inc
or
gs
xor
stos
inc
dec
out
lods
inc
push
aam
lret
leave
pusha
jne
add
or
cmp
out
sbb
hlt
push
sbb
cltd
inc
cmp
scas
push
cmp
or
inc
jmp
sbb
ds
daa
aaa
repz
dec
sarb
mov
sahf
sti
pop
loopne
addr16
lret
push
test
in
dec
mov
popa
out
stc
mov
aaa
or
scas
in
imul
mov
mov
cli
lahf
ss
fstl
ret
call
sar
and
aam
or
enter
fucomp
sbb
sbb
test
shl
ss
pop
enter
dec
fdivp
xor
and
stos
enterw
data16
xchg
jl
xor
pushf
jg
add
jge
cmpsb
popf
xchg
jle
push
addl
sub
arpl
cmp
fpatan
pop
push
mov
repnz
call
pop
xchg
adc
stc
jge
ja
fldl
lcall
dec
jecxz
xor
insb
or
jp
mov
mov
int
addr16
test
test
xchg
int
lods
out
sbb
dec
shl
hlt
xor
stos
or
cwtl
call
popa
clc
out
in
movsl
mov
sbb
mov
aaa
jmp
scas
inc
inc
jge
ficoml
jl
pop
mov
or
xchg
cmc
pusha
mov
jne
push
adc
mov
in
outsl
orb
sahf
xlat
sub
jmp
cmpsb
xor
repz
mov
add
sbb
ret
cmpsb
test
add
jecxz
call
and
sbb
rorl
add
jmp
icebp
cmp
in
les
mov
mov
mov
test
pushf
loop
push
push
mov
enter
fdivl
das
sarb
adc
xor
call
sbb
mov
lock
xchg
movsl
insl
and
std
xchg
out
movsl
popa
repnz
mov
add
aam
test
fistl
cmp
lods
imul
pop
divb
hlt
cmp
cld
mov
test
out
push
lds
mov
fldt
out
std
aad
rcrb
push
stos
and
cltd
popf
test
push
sbb
push
ljmp
aas
icebp
add
fnstenv
xchg
fiaddl
mov
inc
clc
gs
je
jne
stos
cmpsb
mov
outsl
mov
outsl
imul
loopne
rol
daa
mov
ret
arpl
lar
movsb
mov
sub
push
xlat
jl
ljmp
ret
addl
jns
jl
and
loop
popa
test
inc
mov
mov
cwtl
ret
cmp
stos
xor
fidivl
loop,pn
cmp
lahf
adc
push
or
xor
and
cli
lret
jae
dec
push
dec
pop
shll
pusha
js
pop
lcall
or
add
adc
xchg
inc
int3
jg
shll
cmp
pop
cmc
cmc
hlt
xor
adc
loope
out
clc
inc
movsb
stos
fidivs
jecxz
test
or
jge
push
xor
inc
addr16
stos
sbb
fldcw
loop
mov
imul
mov
jb
test
repnz
jno
adc
cltd
pop
lea
sbb
mov
push
add
sub
in
sbb
lods
sub
xor
ret
xchg
jecxz
hlt
enter
cld
fistpl
test
icebp
daa
ljmp
push
adc
mov
lock
fisttpll
subl
sbb
cli
dec
mov
add
fldl2t
mov
fadd
int
ja
leave
inc
xlat
cli
iret
mov
sbb
sbb
shrb
jmp
in
adc
in
jb
push
aad
inc
repz
mov
in
add
adc
jg
sbb
add
and
jp
or
or
add
inc
sub
popl
or
stos
jle
and
mov
adc
subb
fisttpll
rorl
mov
mov
sbb
mov
divl
xchg
xor
iret
or
aam
test
in
fstp
jb
stos
mov
nop
jge
mov
push
sbb
cltd
xchg
dec
in
out
hlt
sub
out
iret
mov
clc
inc
sahf
into
mov
js
in
mov
xor
movsl
cmp
mov
lds
bound
aaa
ds
jl
data16
stos
sub
rcr
sbb
lock
mov
std
int3
xor
fsts
or
dec
dec
out
enter
lcall
cld
data16
scas
cmpsb
cmp
push
fisttpll
push
adc
push
scas
pop
xchg
dec
out
and
mov
mov
in
cwtl
xor
lods
jbe
cmp
and
dec
push
inc
mov
push
jmp
sub
xchg
jl
cmp
fildl
push
aas
shl
imul
cmc
pop
dec
adc
cmp
sub
or
push
or
push
add
mov
jg
std
ss
mov
or
jnp
repnz
bound
xor
movsb
mov
ljmp
and
push
lea
mov
adc
insb
push
test
subb
and
aas
jns
lcall
iret
scas
lods
out
test
adc
mov
hlt
pop
hlt
cmp
test
jp
adc
xchg
jno
jno
in
inc
notl
test
dec
in
pop
push
dec
jne
push
dec
loope
jae,pt
cmp
cltd
negb
pop
das
loopne
jg
repnz
cmp
jae
aaa
ret
cmp
push
in
xchg
dec
fidivl
mov
pop
negb
outsb
or
das
mov
lds
jp
mov
cmpsb
mov
mov
daa
add
push
push
mov
out
sub
adc
sub
sbb
inc
mov
sbb
dec
es
cmp
or
outsl
mov
out
dec
sbb
push
enter
push
mov
inc
into
jmp
mov
stos
add
mov
cmp
xor
js
xchg
mov
and
lahf
test
mov
addb
lcall
jo
fxch
pop
lret
jmp
push
mov
lret
enter
lock
lret
inc
mov
xchg
jae
jecxz
mov
push
fisttps
aaa
pushf
pop
test
mov
push
inc
inc
cwtl
pop
mov
adc
and
enter
rorl
or
rclb
out
xchg
inc
cmpsl
pop
aaa
div
sbb
test
fcomps
in
aad
cmpb
testb
fstl
in
push
sti
cmpsl
stos
sub
mov
and
jl,pn
jle
cmp
cs
loope
or
clc
cwtl
test
adc
cmp
dec
mov
xor
pop
lret
enter
pop
rolb
fmuls
pop
jl
push
or
clts
negl
nopl
jne
xchg
mov
adc
sub
adc
arpl
sarb
je
iret
adc
popf
aam
adc
fnstcw
call
mov
jecxz
mov
jns
adcl
sbb
adc
xor
push
push
mov
lret
loope
jge
rep
shrb
mov
mov
xchg
pop
inc
lret
ret
bound
xor
flds
data16
lret
mov
pop
and
inc
mov
ss
jp
in
out
and
fiadds
sub
cmp
mov
aam
sarb
mov
or
les
pop
shr
xor
sbb
loopne
ljmp
popa
jmp
or
jo
in
scas
in
pushf
xor
dec
mov
adc
sbb
imulb
add
aam
sub
add
or
xchg
insl
cwtl
enter
xchg
mov
jmp
fwait
mov
mov
and
es
jg
xor
fdivl
push
cmp
push
pop
mov
clc
pusha
pushl
push
xchg
cmpsb
cmp
adc
inc
out
sti
sub
adc
and
pushf
in
xlat
dec
test
inc
fisubrl
mov
pop
dec
mov
int
sub
jp
mov
dec
aaa
pop
cmc
xchg
imul
cmpsl
outsl
rcrb
ds
xor
sub
mov
repnz
mov
sbbb
fmuls
fstpl
inc
inc
ficoml
out
lea
js
push
stos
lods
rcrl
loop
aad
add
aaa
leave
sub
push
or
lahf
pushf
xor
in
and
dec
in
pop
pop
sahf
fisttpl
cs
aas
dec
scas
popa
pop
jnp
shrb
pushf
xor
sub
mov
pop
ljmp
dec
pushl
jmp
enter
cmp
dec
xor
jbe
mov
cmp
nop
xor
stos
aaa
jg
mov
pop
iret
jmp
cmpsb
inc
xchg
repz
xor
adc
fbstp
xor
in
int3
mov
in
jge
test
fbld
xor
and
xor
cmp
jne
pop
dec
or
sub
pop
aaa
aad
test
js
or
dec
mov
test
out
mov
jmp
xchg
cmc
mov
out
add
test
call
pop
lret
sti
cmp
dec
test
out
rcrl
test
jmp
leave
mov
rolb
test
jbe
dec
ss
push
outsb
push
repnz
les
push
sbb
movsb
cmp
or
or
mov
add
insb
add
and
lret
or
dec
cmc
jmp
loop
pop
aad
test
cmp
jb
mov
sbb
xchg
loope
bound
sqrtsd
jl
ret
sub
mov
mov
or
dec
or
lcall
mov
mov
movsb
add
push
mov
hlt
pop
cmp
push
ljmp
inc
fnstsw
popl
xor
jl
fdivrl
sub
jns
sbb
jae
movsl
push
cmc
cmp
jmp
or
cmp
test
outsl
addr16
nop
jle
ss
mov
push
jb
cli
xor
jle
std
xchg
cs
sahf
dec
ret
loope
jecxz
add
outsb
cltd
jp
adc
sub
lahf
sbb
testl
clc
inc
and
mov
push
arpl
mov
ja
loopne
pop
cmc
cmp
pop
aam
pop
sbb
scas
dec
sti
sbb
jmp
sbb
out
lock
lds
in
pop
add
cltd
mov
sub
lods
mov
fdivr
ljmp
stos
repz
lods
pop
out
push
aad
mov
sbb
sub
push
pop
aad
mov
dec
sub
cmp
cmp
sbb
addr16
bound
xchg
sub
inc
adc
sub
lock
mov
mov
mov
mov
push
popf
adc
or
sub
adc
inc
fcmovne
xor
jno
xlat
inc
cmove
inc
or
movsl
outsb
pushf
sub
cmc
nop
or
sbb
xchg
dec
outsl
push
jnp
call
rcrl
sarb
sahf
mov
loope
not
imul
scas
imul
bound
sahf
pop
orb
pop
ja
pop
mov
sahf
sub
jbe
je
push
xchg
dec
mov
cmp
ja
lock
test
loopne
insb
mov
loopne
pop
jp
dec
mov
clc
sbb
imul
pop
scas
ret
dec
or
pusha
or
repz
sbb
fidivl
xchg
hlt
sbb
adc
push
sbb
lahf
ss
mov
aam
xchg
mov
roll
jp
pop
outsl
and
jg
mov
inc
xor
jno
nop
xchg
push
es
jae
mov
icebp
dec
push
into
dec
mov
sub
pop
xor
dec
mov
and
push
xchg
fdivs
jbe
aam
out
jb
jno
adc
shll
sub
xchg
lea
ss
jmp
cmpsl
shrl
sub
je
in
das
dec
loope,pt
jle
sbb
pop
push
xchg
pusha
add
inc
pop
cli
xor
int3
push
int3
out
hlt
sbb
clc
testb
iret
push
mov
iret
rclb
fstl
adc
aad
out
addl
pop
shll
hlt
ret
jmp
aam
aam
fsubp
movsb
sub
in
daa
adc
test
adc
popf
sbb
sbb
adc
add
repz
roll
add
add
ljmp
jno
and
push
mov
fimull
lock
cmp
mov
repz
shlb
int3
fldcw
std
dec
scas
mov
decl
mov
cmc
aas
out
stc
test
mov
loope
or
fwait
out
and
xlat
loopne
jbe
inc
aaa
movsb
shrb
cmpl
xchg
push
out
or
adc
call
stos
add
out
setae
sub
pop
shrb
insl
cld
xchg
push
outsb
cmp
push
pop
add
inc
lret
ds
jge
dec
and
mov
jl
sbbb
or
jo
jno
divb
xchg
add
xor
cmpsb
loope
cltd
lret
mov
lret
adc
mov
or
pop
and
sub
xchg
fsubl
xor
sahf
dec
inc
adc
addr16
push
mov
cmp
jmp
test
pop
aad
jle
imulb
shr
and
iret
not
dec
mov
into
cmp
call
fstl
cmp
fs
test
rclb
cltd
jle
loop,pn
aaa
je
jb
push
adc
xor
cltd
xchg
out
test
bnd
mov
test
ret
sbb
in
out
add
push
mov
sbb
sub
in
les
ja
mov
hlt
sbb
or
or
shrl
jae
daa
push
mov
fdivl
sti
dec
lea
xchg
stos
inc
cmp
in
insl
cwtl
das
pop
push
adc
xor
or
add
pop
aad
and
sub
xor
mov
loopne
cmp
add
test
or
xchg
adc
xchg
jecxz
inc
ret
out
jecxz
cmp
jmp
cli
and
xlat
mov
xchg
xchg
mov
sti
push
ror
les
fadd
sub
into
std
imul
cmpsl
fisttpll
add
repz
cmc
aad
jmp
adc
clc
and
pushf
fsubl
sub
rorb
imul
popf
test
rorl
mov
lret
hlt
cmpsl
pop
int3
mov
mov
add
rcll
mov
pop
sub
push
adc
or
jno
fisttpll
and
add
pop
imul
or
incl
in
mov
jmp
stos
push
test
sbb
leavew
and
inc
mov
mov
push
rcrl
adc
loopne
stos
ds
out
sbb
fildl
sub
xchg
stos
gs
sbb
imul
fcompl
aas
icebp
ret
sbb
enter
rolb
add
mov
push
or
icebp
mov
sub
or
push
mov
sub
push
out
lods
push
fisttpll
int
mov
sbb
jp
out
mov
out
incb
leave
mov
mov
sbb
sub
and
stos
loopne
mov
pop
out
pop
aam
scas
mov
repnz
mov
aaa
mov
in
arpl
xor
mov
cmp
mov
ja
lret
dec
dec
popa
clc
jp
cmp
cmp
fimuls
and
popa
dec
sub
outsb
xor
xor
lods
xchg
push
and
inc
ret
mulb
mov
negb
mov
fwait
mov
out
jbe
test
cld
aad
loope
mov
sub
xchg
enter
xchg
mov
xchg
mov
jp
insb
mov
xor
daa
sahf
xor
and
mov
cmp
dec
mov
pop
outsl
pop
sarl
ret
pop
fwait
pusha
dec
shlb
mov
out
sub
xorl
dec
shlb
jmp
sub
in
inc
imul
pushf
push
adc
adc
inc
repnz
mov
aam
inc
adc
dec
cwtl
inc
fbstp
cld
xchg
mov
data16
xor
test
js
sahf
cmp
ret
cmp
pop
outsb
fsubrs
inc
and
xor
add
fists
xchg
dec
gs
inc
mov
jle
iret
inc
pop
cmp
lods
inc
rorb
mov
pop
cmpb
lds
les
xlat
cmp
jl
xlat
jge
in
mov
or
sbb
sbb
ss
hlt
sbb
ljmp
rcr
add
mov
mov
jmp
adc
jae
adcl
jmp
add
js
mov
xor
pop
shlb
mov
add
jle
lret
sbbl
mov
pop
loopne
movsl
call
int3
imul
sbb
sar
lret
mov
stc
mov
ror
popa
add
xchg
pop
mov
sarl
jl
mov
dec
push
out
fs
es
xchg
pop
icebp
cltd
mov
imul
ffree
cmp
and
xor
cmc
push
jns
jmp
cmpb
pop
push
mov
xchg
mov
adc
jbe
orb
ss
push
imul
test
lahf
xor
aam
mov
sub
jp
jmp
push
pop
adc
adc
and
rcrb
and
pop
lock
int3
ss
fisttpll
add
leave
leave
pusha
lds
mov
repz
stos
mov
xchg
mov
push
cltd
leave
call
and
lret
inc
aaa
das
xlat
in
lods
inc
mov
sub
adc
out
sbb
xchg
adc
hlt
sub
mov
movl
rcrl
jbe
outsb
stc
sub
btl
int3
push
arpl
js
sub
outsb
stos
pop
scas
inc
popf
repz
imul
loopne
divl
iret
xor
jl
push
into
gs
loopne
push
mov
out
ret
daa
int3
pop
push
or
ficompl
mov
or
cmp
rcr
out
out
push
stos
test
xor
mov
fmuls
fdivrs
fstpt
dec
xchg
fnstenv
jbe
into
outsb
add
cltd
and
cli
mov
call
dec
mov
pushf
mov
out
hlt
or
popf
mov
pop
hlt
ficomps
inc
call
ret
pushl
xor
lret
into
aaa
filds
and
lret
cmp
xor
mov
ficoms
adc
xchg
lret
divl
inc
sti
loopne
in
and
dec
mov
pop
or
cmpsl
jge
xor
addl
mov
sbb
nop
or
sub
and
jno
xchg
and
cmp
sbb
jle
sub
cli
mov
mov
shl
push
mov
in
dec
aad
fcom
cmp
mov
fiaddl
push
fistl
push
mov
cmc
test
ret
xor
add
add
mov
aaa
adc
pop
rorl
dec
mov
jp
inc
mov
sbb
push
mov
dec
test
mov
enter
push
mov
jo
jg
in
xchg
cli
inc
pop
stos
fbstp
or
ds
nop
movsb
sub
adc
aaa
mov
jne
in
xor
ss
jbe
fcoml
xor
xlat
xchg
push
test
mov
cmp
insl
add
sub
lahf
aam
xchg
out
cli
dec
rcr
jp
out
sub
in
test
adc
cmp
ljmp
roll
divb
adc
mov
or
sub
and
push
jns
in
pop
cwtl
xor
sub
in
add
sub
out
xor
jmp
loope
in
inc
ss
scas
std
nop
js
insl
movsl
and
test
jno
dec
rorl
lahf
and
xor
mov
std
sub
cs
cmp
inc
dec
les
pop
push
push
mov
push
out
push
mov
out
pop
push
loop
lret
cmp
jl
scas
pop
fisubrs
mov
mov
mov
lock
push
scas
push
mov
xor
test
sar
loopne
sbb
sub
cltd
mov
add
push
mov
fldl
push
movl
and
lret
adc
inc
inc
out
add
aad
push
lods
pop
mov
push
jmp
sbb
clc
pop
repz
ljmp
lret
shrb
stos
jmp
hlt
mov
testl
sub
imulb
in
add
pop
shl
and
push
call
dec
cmovne
and
subl
outsb
bound
jl
xor
aas
aas
or
cmp
pop
xchg
nop
mov
jnp
mov
cmp
push
add
ss
and
mov
add
sub
dec
jnp
orl
xor
mov
mov
daa
hlt
js
es
aad
jnp
xchg
sub
into
lcall
and
shrb
inc
das
jae
lock
push
mov
inc
lds
jae
in
jns
mov
nop
daa
mov
sarb
fcoml
or
das
jae
mov
ret
hlt
mov
mov
inc
setnp
inc
push
add
test
cmp
xchg
leave
adc
lcall
add
out
fsubrs
pushl
xor
xorb
data16
insl
sub
mov
dec
fldl
testl
test
sub
ja
mov
fcomps
shrb
out
das
and
dec
in
loope
adc
ret
lods
inc
loop
dec
loopne
add
and
daa
aaa
into
pop
pop
test
lods
pushf
xchg
cmpb
or
add
ficoms
sbbl
inc
fildll
add
xor
movsb
data16
push
gs
and
and
ja
addr16
dec
inc
mov
xchg
ds
outsb
sbb
repnz
pop
ss
ficoml
sbb
xchg
or
popa
adc
icebp
test
or
push
int
lahf
pop
stc
adc
push
mov
shlb
enter
and
pop
jo
cwtl
aaa
adc
ss
cmpsb
faddl
cmpsl
sub
shll
subl
xlat
and
movsb
fwait
lds
or
and
fwait
or
daa
and
adc
add
ret
cmp
cmp
cltd
add
subl
inc
sub
mov
jge
jl
cmp
jl
lahf
mov
mov
adc
inc
mov
pop
out
xor
sarb
or
movsb
inc
setno
inc
daa
add
xchg
or
mov
in
or
rorb
pop
xchg
and
dec
scas
xchg
lret
mov
jecxz
rcll
jo
stos
pop
dec
testl
sbb
sub
stos
dec
mov
into
jo
ror
cmp
test
inc
adc
add
or
sub
aam
or
sub
lods
cli
jnp
inc
or
inc
or
fsubrl
inc
inc
sbb
mov
push
adc
iret
int3
fcoms
addl
shlb
vpsrld
lods
sbb
outsb
sub
xor
mov
std
divb
jg
dec
mov
jl
movsb
mov
cli
pop
enter
cmp
ss
xchg
clc
andl
imul
push
clc
push
fldt
add
hlt
lds
xchg
mov
sub
push
lods
insb
outsb
out
je
lock
pop
je
sbb
mov
push
xor
fldl
rcrb
bound
inc
push
ficoms
dec
pop
inc
mov
iret
add
jnp
or
loope
cli
lahf
js
test
sub
mov
cmp
andl
add
jl
sbb
add
and
insb
es
shrl
xchg
sub
pop
leave
pusha
dec
inc
and
cs
dec
out
sbb
bnd
sbb
cmpsb
or
mov
mov
xchg
sub
insl
add
popa
pop
repnz
enter
repz
and
loop
out
scas
inc
loopne
jns
or
mov
data16
xor
lcall
aad
sti
xchg
imul
sbb
mov
cli
xchg
popf
xor
cmpsb
sub
pop
popf
dec
loop
cmp
imul
addr16
inc
mov
aad
pop
xor
pop
dec
out
outsb
aad
adc
call
testb
mov
mov
xor
or
je
push
icebp
imul
ds
inc
adc
xor
aaa
lahf
push
pop
cltd
cmp
leave
push
jo
lock
sbb
and
fcompl
rcrb
outsl
jns
je
test
add
bound
lea
ja
stc
aad
jp
sarl
imul
or
cli
xlat
pop
xor
push
test
jo
jl
dec
adc
jae
mov
cld
pop
pop
jmp
mov
mov
sub
not
inc
or
jne
xor
fcoml
mov
lods
adc
addb
adc
or
sub
pop
int3
add
paddq
mov
mov
das
aaa
pushf
test
adc
fcomps
shrb
data16
or
jmp
and
cmp
mov
lods
push
cld
sbbb
xchg
jg
call
and
add
and
ss
loopne
daa
cmpsb
sub
pop
sbb
lods
push
mov
sub
sahf
inc
scas
cmp
xchg
es
lret
leave
mov
addr16
jmp
sahf
je
inc
lcall
jo
dec
mov
and
jg
leave
xchg
adc
and
adc
mov
inc
and
and
scas
jge
je
inc
or
mov
mov
test
xlat
lahf
inc
sbb
dec
mov
fidivs
jecxz
mov
cwtl
movsl
xor
xchg
cmp
ficomps
or
add
out
jno
push
mov
shrl
mov
xchg
cmp
adc
lret
in
jb
add
xchg
test
rcrb
cmp
outsb
out
xchg
sub
mov
push
inc
cmp
lods
push
fistpll
mov
repnz
cmp
cmp
test
mov
and
sub
loopne
jecxz
cmpsl
stc
xchg
pop
jne
movsl
fadd
dec
mov
lret
lds
test
mov
fstpt
mul
jne
mov
loopne
dec
sbb
js
xchg
ret
xchg
and
stos
sub
test
fdivrl
pop
std
add
cmc
movsb
fcmovnu
js
mov
cmp
fs
jle
lds
ret
daa
jmp
jge
ds
add
lret
jno
adc
pop
movl
pop
imul
sbb
loop
push
je
cmpsl
rcrl
fistpl
jg
add
jle
xchg
cli
pop
call
hlt
sti
push
loop
fnstsw
cli
mov
sub
or
jbe
repnz
mov
push
push
adc
mov
ret
addr16
fnstsw
xor
inc
enter
fwait
adcl
lahf
cmp
xor
sbb
sbbb
mov
pop
xchg
rclb
inc
leave
pop
ret
lahf
cmp
mov
lcall
scas
cltd
cmp
inc
pop
push
jle
cmp
mov
mov
popf
and
je
mov
int3
out
hlt
xchg
repz
inc
cmp
inc
adc
cmpsb
das
pop
jle
inc
jl
mov
arpl
push
ja
shll
and
inc
adc
test
lahf
push
lock
jne
mov
shr
pop
divl
scas
mov
adc
rclb
mov
cld
popa
add
data16
jbe
jp
sarl
mov
adc
test
push
stc
adc
adc
out
pusha
divb
scas
mov
fistl
mov
xchg
mov
fiaddl
mov
mov
in
popf
fildl
shrl
dec
insl
je
daa
stos
jb
andl
adc
in
and
mull
cmp
ret
jbe
sahf
cmp
lods
xor
jp
mov
hlt
gs
xchg
jmp
repnz
adc
loope
inc
je
xor
fs
cs
mov
adc
fs
adc
popa
aaa
inc
hlt
bound
xor
and
data16
cwtl
call
repz
mov
bound
nop
aaa
xchg
jae
movb
or
mov
scas
cmp
jg
lods
xor
jo
or
in
pop
mov
enter
in
sub
mov
sub
je
mov
fldl
push
add
aas
adc
push
test
mov
or
outsb
push
add
cltd
aas
shrl
mov
stos
sbb
xlat
dec
je
addb
add
pop
nop
mov
cmp
arpl
cwtl
inc
xor
fisttpll
and
add
pop
stos
cmp
int3
lret
cld
gs
pop
popa
ljmp
jne
test
orb
mov
cmp
out
loopne
sbb
dec
jne
add
pop
push
lahf
pop
add
adc
inc
xchg
cmp
lcall
popa
jmp
adc
xlat
xchg
fdivrl
adc
push
clc
rolb
dec
adc
pop
add
shrb
pop
or
clc
push
jae
in
repnz
sub
adc
and
xchg
and
jns
les
enter
imul
jae
or
pop
and
and
jp
out
sbb
je
stc
arpl
loope
add
cmp
pop
enter
xchg
cmp
mov
mov
mov
add
in
pop
push
ret
mov
mov
inc
or
ss
pop
cs
pop
sub
inc
je
adcb
enter
rolb
sbb
push
add
inc
adcb
add
in
push
add
add
pusha
roll
xchg
aad
adc
leave
add
into
adc
lea
ror
mov
mov
les
cltd
and
jno
lds
mov
or
fdivrl
mov
pop
in
add
and
fnstsw
cmp
test
mov
jbe
jmp
popf
cmp
or
aam
xchg
push
cmc
gs
lret
xor
sub
sbb
or
push
mov
test
add
loopne
xor
shrl
imul
ja
icebp
mov
mov
mull
loope
mov
mov
movsl
inc
adc
mov
jb
rorl
je
cmp
and
cwtl
les
adc
cmpsb
add
negl
aad
test
cmp
loop
push
jne
out
and
imul
or
adc
pop
leave
js
repnz
sbb
lock
xchg
mov
rsqrtps
movsb
sub
jge
jo
jno
push
mov
inc
xchg
xchg
mov
nop
cmp
adc
mov
mov
test
xchg
sbb
imul
je
insl
call
loope
cmp
test
jecxz
das
push
jl
adc
mov
rorb
aad
inc
arpl
jle
jg
sbb
push
add
xor
or
pusha
arpl
dec
fld
nop
cmp
or
mov
ret
mov
lcall
inc
xchg
mov
in
dec
adc
repnz
clc
and
sti
fs
xor
adc
and
dec
mov
mov
mov
push
jmp
subl
push
fnstcw
mov
lret
jmp
mov
js
and
mov
sub
arpl
and
or
xor
pop
xchg
cmp
pop
or
in
imul
fistpll
mov
cmp
pop
xor
mov
and
mov
aad
dec
stos
insb
cwtl
inc
mov
and
adc
stos
aaa
repz
jmp
std
pop
push
push
mov
imul
mulb
cmc
pop
shll
cltd
inc
fsubl
sub
es
fistpll
xor
andb
pop
push
std
mov
stos
push
jge
in
addl
roll
dec
add
fidivrl
pop
sub
jecxz
mulb
sti
mov
std
pop
repz
in
insl
inc
ljmp
bound
push
ret
push
jp
leave
xchg
pop
push
add
adc
jb
add
test
mov
mov
out
divl
aad
in
xchg
inc
adc
mov
ret
je
and
je
pop
popa
repz
adc
lods
sbb
mov
mov
lock
jge
cmp
shll
mov
push
out
mov
sub
xor
mov
and
fiadds
mov
mov
pop
lret
xchg
mov
mov
lret
mov
rcl
cmpsb
orb
test
mov
ret
jle
sbb
popf
bound
adc
adc
jge
inc
mov
inc
imul
clc
jge
hlt
jmp
outsb
lock
std
rorb
cmp
mov
loope
and
pop
pop
jle
call
xchg
xchg
and
mov
ret
sbb
inc
xchg
inc
mov
cmp
in
xchg
or
loopne
cmp
into
clc
push
decl
fxch
mov
pop
cmp
lea
xchg
sub
pop
lock
pop
xor
xor
and
int3
xchg
into
dec
push
sti
negb
cmpsb
sub
push
sbb
fldenv
or
adc
mov
inc
xor
inc
shlb
jmp
rorl
add
stos
daa
aas
jle
popa
fs
mov
mov
inc
sete
pop
ds
dec
pop
lods
and
lock
std
push
xlat
movb
pop
or
xchg
and
pop
mov
ds
xchg
or
pop
mov
mov
cs
push
mov
inc
adc
out
inc
ja
add
push
aam
push
jl
adc
push
sbb
jmp
lds
dec
je
out
cltd
fwait
outsl
icebp
sub
pop
push
xchg
inc
adc
mov
xchg
js
aas
mov
sub
xor
dec
faddl
icebp
xchg
xchg
inc
imul
sbb
inc
lods
leave
mov
popf
jle
adc
push
mov
out
sbb
cmp
jns
push
out
stos
pop
lock
movsl
mov
mov
add
mov
xor
sbbl
inc
pop
sti
arpl
mov
xor
jnp
xor
mov
sub
movsb
nop
mov
cmpsb
mov
fnstcw
sbb
mov
dec
adc
fnclex
push
fs
sarl
bound
pop
mov
push
int3
xor
adcl
rcll
out
imul
pop
lcall
xchg
sbb
push
xchg
in
pusha
push
int3
mov
jle
fs
mov
movsl
dec
jbe
push
mov
mov
loope
sahf
movsl
ds
sub
stos
sub
xor
addb
jne
fucomip
addr16
jno
fldt
loop
xor
pop
clc
pop
xor
jl
dec
dec
pop
xor
lret
sub
pop
repnz
mov
out
push
jp
dec
adc
mov
lcall
xlat
icebp
jge
or
sbb
mov
add
xchg
inc
push
lock
sbb
sbb
mov
scas
mov
orb
repnz
push
dec
adc
sbb
lret
mov
cmp
pop
movsb
lcall
rorb
stc
insl
push
add
popf
ds
mov
jno
stc
pop
popf
insb
fnstcw
leave
negb
pop
aaa
mov
cmp
mov
cmpsb
test
aas
data16
in
shl
bound
add
push
sbb
in
mov
test
outsb
cmp
and
lea
pop
sti
xchg
xor
mov
pop
pop
stc
arpl
adc
jle
pop
or
sarl
lods
inc
rcrb
ja
dec
rep
xor
popf
mov
aaa
in
cmpsb
sub
clc
repz
gs
and
dec
lods
and
pop
mov
cmp
aaa
outsb
mov
mov
sub
inc
adc
xor
jg
idivb
cltd
ss
inc
paddusw
out
xchg
pop
or
test
push
add
fstp
ja
xor
jne
movsl
xchg
xlat
test
add
lods
rclb
mov
add
lret
leave
xchg
xlat
scas
mov
add
mov
fnstenv
fwait
jmp
popf
inc
dec
rorb
cmp
xchg
cmp
leave
cld
popa
or
pop
aad
inc
ds
in
mov
jnp
sub
out
mov
negl
pushf
cwtl
mov
mov
adc
and
lods
data16
sbb
cltd
cmp
jp
les
fwait
je
mov
xchg
cmp
fcmove
xchg
mov
test
or
aaa
int3
xchg
cmp
and
mov
fimuls
lret
cmpsb
xor
mov
mov
aam
shlb
rclb
lea
push
shlb
setne
push
std
mov
test
popa
out
adc
out
adc
or
sub
lea
sbb
add
cltd
inc
jecxz
clc
lret
sbb
sti
in
adc
dec
sub
mov
or
pop
inc
pop
lret
jns
pop
push
cld
sbb
mov
test
mov
lahf
inc
add
cltd
inc
sub
insb
icebp
pop
js,pt
or
pop
xchg
cmp
sahf
inc
jg
lcall
imul
jge
je
jb
adc
fisubrl
lcall
gs
out
lret
test
repz
into
pop
icebp
add
ds
and
jno
xor
lcall
mov
stos
fadds
pop
cmp
stc
mov
mov
insb
icebp
or
mov
iret
lods
xor
cli
lods
xor
pop
mov
ret
inc
adc
int
xor
cwtl
mov
jnp
test
mov
adc
loope
arpl
cmpsl
std
rcll
imul
or
xorl
fimull
or
sub
shrb
dec
push
mov
test
mov
xor
cmp
fisttps
xchg
sbb
negl
ss
pop
les
stos
and
adc
sub
dec
or
mov
or
imul
je
movsb
xor
insb
pop
std
insl
cmp
and
inc
les
xchg
es
mov
mov
mov
mov
push
std
cld
cmpsb
sbb
sub
ret
mov
push
or
and
dec
adc
mov
rorl
xor
jl
andl
daa
loopne
inc
xorl
repnz
aad
cwtl
sbb
inc
lods
dec
out
aad
mov
dec
push
cmp
jl
push
and
cmc
mov
cmp
add
xor
xor
sub
enter
push
sub
std
mov
xchg
loop
jle
rolb
loope
adc
test
sub
mov
mov
stos
mov
sbb
lret
out
in
insb
dec
ljmp
test
aaa
and
nop
sub
fsubr
aam
das
test
xchg
imul
adc
xor
cmp
testl
sahf
inc
lcall
xchg
mov
or
mov
lahf
aas
pop
idivl
lahf
mov
stos
xchg
jp
stos
sbb
jl
fwait
add
filds
mov
xchg
in
mov
push
push
das
adc
pusha
push
pop
into
jnp
inc
pop
push
fistpll
andb
push
in
push
add
mov
std
jbe
addr16
imul
cmp
test
fs
push
cli
ret
addr16
ljmp
negl
xchg
cmp
mov
rorl
es
xor
xchg
in
je
jg
dec
popa
cmpsl
sub
xor
ret
test
gs
movsb
sub
push
adc
call
decl
int
xchg
nop
inc
scas
fwait
ja
hlt
mov
pop
dec
lock
loop
sub
xchg
add
xor
jbe
push
lock
call
std
mov
sbb
jo
jae
mov
stos
cmp
xchg
sbb
dec
mov
ja
cmp
pop
mov
in
out
mov
mov
mov
scas
jbe
xor
mov
push
dec
clc
pop
mov
push
shll
add
sbb
mov
xchg
inc
or
stc
pop
jnp
dec
or
flds
fstps
int3
push
cld
and
pop
iret
xor
push
xchg
push
flds
ja
xor
and
mov
aas
stc
aam
cmp
mov
adcb
sub
xchg
mov
mov
jnp
js
jle
aas
outsl
out
push
mov
sar
lods
inc
sub
stos
xor
mov
int
and
and
into
sbb
pop
movlps
mov
inc
das
loope
xchg
push
cmp
test
movsl
jne
mulb
outsb
mov
lods
pop
clc
cmpsl
pop
push
dec
rorb
je
mov
xchg
fidivrl
out
push
insl
shrb
iret
je
adc
pushf
les
inc
adc
sbb
cmp
dec
fildll
dec
cs
inc
iret
xchg
out
sub
xchg
lcall
cmp
cmp
in
sub
cmp
pop
decl
push
clc
lret
dec
rcrl
jecxz
adc
test
dec
adc
sbb
sbb
lret
push
iret
sbb
loopne
sub
clc
outsb
cltd
test
mov
lahf
popf
gs
push
int
adc
xorb
add
test
push
xchg
mov
in
xor
loop
fs
jno
subb
and
dec
push
iret
xchg
pushf
lcall
js
mov
cmp
fs
gs
mov
mov
ja
shll
inc
push
mov
xchg
pop
push
in
std
pop
jb
mov
clc
push
stos
ss
fstpl
adcb
aaa
or
or
xor
inc
dec
and
mov
mov
lahf
sub
cmp
sub
in
push
add
fistpll
xchg
inc
icebp
mov
in
xchg
in
bswap
dec
xchg
in
ret
mov
mov
sub
dec
clc
pop
cmp
pop
cli
shll
scas
arpl
jns
cwtl
jle
adc
cmp
popf
cmp
mov
push
adc
call
sub
push
sbb
les
sbb
jo
dec
jbe
mov
aas
movsb
inc
cmpsb
mov
cmpsl
inc
and
jns
xchg
lcall
push
jno
xor
and
sbb
cwtl
cmp
imul
inc
lret
bound
arpl
ficoms
or
rcrb
pop
shll
add
pushf
cmp
cmp
negl
xchg
js
lret
imul
gs
cmp
push
call
cld
iret
xchg
or
push
clc
cli
pusha
movsl
daa
add
and
sub
pop
add
aas
cmpsl
daa
out
dec
adc
sbb
dec
or
lods
je
lea
movb
ds
push
addb
imul
jl
mov
cltd
mov
push
jge
xor
push
sbb
call
packssdw
pop
mov
pop
jbe
xchg
inc
fnstenv
dec
fisubs
test
cltd
fadds
stos
mov
sbb
pop
or
fildll
xor
sbb
lock
cmc
dec
out
iret
jecxz
les
inc
or
jle
das
push
jae,pt
mov
push
jl
call
icebp
in
xchg
cmpsl
or
outsl
lret
push
jnp
cmpsb
pop
pop
cld
push
rol
xor
xchg
mov
xor
nop
push
add
ror
and
sub
jp
andb
adc
aad
mov
clc
or
push
rcrl
and
add
js
pop
push
shll
mov
xchg
cltd
inc
loop
xor
sbb
dec
add
inc
and
js
xchg
daa
cmpsl
sbb
xchg
cmp
dec
lds
sub
enter
imul
cltd
adcb
test
mov
push
xchg
arpl
inc
adc
push
outsl
jmp
inc
mov
sub
cli
pop
loope
pusha
repz
mov
add
rcr
sbbb
scas
inc
loope
jnp
adc
jbe
lret
pop
xchg
inc
or
mov
mov
js
in
mov
sub
fcomps
sub
xchg
lock
sti
in
ret
jle
imul
int3
jb
push
add
mov
mov
std
xchg
add
cmp
loopne
pop
mov
enter
push
sbb
sbb
push
sarl
push
dec
adc
stos
push
repz
aas
sbb
pop
add
mov
and
mov
add
mov
push
jle
sarl
sbb
jbe
jne
pop
arpl
xchg
orl
xchg
mov
scas
push
insb
test
imul
pusha
jmp
loope
stos
insl
inc
mov
iret
xchg
mov
push
lret
push
ret
arpl
bound
loop
ffree
ret
or
pop
out
sbb
cwtl
inc
push
adc
loope
xor
shrl
mov
mov
mov
cmpsb
test
mov
mov
add
pusha
pop
mov
add
jecxz
adc
dec
and
xor
jbe
inc
sub
mov
cmpsl
push
add
lret
mov
std
arpl
aas
loopne
inc
pop
mov
imul
arpl
xlat
dec
mov
test
jl
test
dec
popa
push
inc
push
in
jbe
jnp
loop
inc
sbb
addr16
psrld
je
imul
test
pop
cmp
out
jo
aaa
jno
mov
pusha
out
add
push
rclb
jb
push
imul
mov
mov
push
aam
sub
popf
sbb
ja
cmp
and
imul
jno
cld
xchg
in
adc
inc
push
inc
or
xchg
ja
inc
push
rclb
xchg
movsb
test
mov
mov
ljmp
add
push
lods
int
mov
xchg
and
rcll
sbb
jl
pop
fdivrs
mov
xor
scas
xor
and
xor
and
mov
cltd
dec
inc
adc
test
xchg
icebp
data16
mov
imulb
xor
cli
jno
sbb
out
sbb
push
xor
sbb
sub
and
jb
sub
icebp
push
mov
adc
fwait
add
cs
push
not
cmp
sub
xchg
aaa
push
jge
leave
cli
andl
or
pop
fs
dec
fwait
cli
data16
cltd
push
cli
into
lret
and
sbb
lock
dec
imul
clc
cmp
xchg
bound
mov
jl
leave
push
fsubrl
lods
mov
mov
movsb
pop
incb
fldl
adc
shlb
mov
sarb
xchg
mov
mov
sahf
test
repnz
stos
mov
int3
arpl
cli
xchg
ljmp
ss
popf
add
jae
cmp
test
sub
pop
shlb
xor
lds
insl
xchg
pop
jge
jle
inc
sub
adc
dec
or
xor
adc
mov
dec
cwtl
cmp
push
in
insl
and
rol
cmp
and
cmp
inc
imul
inc
mov
lods
jno
rclb
or
mov
mov
dec
adc
leave
negl
inc
test
cmp
pop
popw
mov
call
std
jg
out
cmpsl
sbb
sbb
xor
stos
and
ficomps
lds
outsl
out
push
outsl
cld
lret
mov
fsts
int
jle
mov
ret
inc
mov
js
sbb
cli
aas
imul
jp
rorb
adc
pop
in
push
mov
mov
pop
mov
cmp
mov
lea
push
xlat
ljmp
and
cwtl
fnstcw
not
cmpb
mov
mov
cmp
inc
push
movsb
mov
and
add
sub
xor
imul
lock
out
imul
out
rorb
fwait
cmp
arpl
push
push
pop
std
adc
add
lahf
dec
enter
pop
hlt
shll
insl
hlt
add
jb
repnz
scas
xor
movsb
daa
or
pop
sti
data16
lcall
cmp
fildl
imul
fdivl
xor
sub
adc
lods
sub
jae
enter
popf
in
es
dec
hlt
and
daa
fimull
lahf
or
push
out
stc
arpl
iret
xchg
inc
jbe
stc
push
xchg
adc
fisttpl
xor
cmpsl
inc
xor
push
test
xor
sbb
adc
inc
aad
adc
cmp
xor
mov
fwait
sub
mov
ret
aas
inc
add
enter
sub
clc
pop
adc
xor
loope
out
imul
push
call
adc
jp
mov
push
test
scas
sub
mulb
jp
fs
jne
push
pop
fadds
in
mov
adc
cmpsb
out
push
out
sti
pop
stc
aam
pop
push
jmp
stos
inc
jnp
out
push
pushf
addb
in
je
mov
xchg
pusha
out
in
jb
and
lret
xchg
into
pusha
pop
mov
ljmp
sub
mov
movsl
mov
pop
adc
mov
hlt
ljmp
push
jae
or
or
outsl
sub
das
stos
push
cmp
sub
mov
inc
xor
xchg
inc
cmpb
mov
movsb
fnstcw
push
ss
mov
stos
call
testb
sarl
nop
inc
adc
lret
jmp
clc
mov
cs
mov
xchg
in
dec
out
adc
lcall
xchg
pop
push
inc
nop
cmp
fldenv
add
cmpsb
mov
movsb
sub
xor
fs
mov
adc
pusha
popa
adc
arpl
jmp
jae
and
dec
std
mov
lods
xorb
fidivrl
mov
subl
popf
dec
push
push
mov
xlat
jp
movsl
inc
or
jnp
push
cli
scas
outsl
mov
fcmovne
mov
adc
imul
in
sbb
nop
addb
push
and
xchg
cmpsb
cmp
repnz
in
imul
scas
add
push
add
inc
sbb
jmp
inc
bswap
shlb
lods
sub
loopne
pop
data16
rorb
rorl
or
push
or
pop
sahf
pop
cli
cmp
lods
sub
mov
mov
aas
scas
inc
jno
push
decb
jno
cltd
movsb
sub
shll
mov
inc
aaa
movsl
push
pop
pop
les
add
inc
adc
ret
lea
add
mov
jno
mov
daa
sub
and
inc
lods
xor
loop
or
mov
imul
and
adc
jnp
jae
lret
push
mov
fxch
outsb
or
mov
stos
lds
adc
push
std
adc
inc
pop
cli
daa
sbb
int
push
movsl
xor
ret
ret
mov
push
sti
pushf
fstpl
rcrl
insb
pop
mov
jnp
fiadds
cmpsl
xchg
movsb
orb
add
fcoml
lock
lret
xor
mov
cmc
adc
adc
stos
dec
cmc
pop
xorb
roll
daa
push
mov
fisubrs
mov
insb
insb
stos
roll
movsl
dec
push
daa
sti
iret
xchg
mov
les
mov
mov
pop
ds
cmc
push
inc
sub
je
cwtl
inc
pop
arpl
movsl
and
xor
data16
sti
xor
nop
call
mov
ss
jnp
dec
and
sub
out
mov
mov
jns
mov
jb
mov
cmpsl
nop
inc
in
or
imul
cmpsb
add
push
cmp
pop
imul
pop
jge
cmc
mov
sub
lcall
sarb
movsl
mov
xchg
xor
adc
lock
jmp
sbb
dec
and
imulb
lods
fs
xchg
jle
aad
int
insl
mov
hlt
mov
repnz
sub
shrl
mov
into
gs
fwait
iret
data16
int3
xchg
stc
sbb
jl
push
leave
sbb
add
mov
shrl
hlt
push
les
gs
es
lds
xchg
inc
adc
push
xor
popa
mov
movsl
je
outsb
lock
push
xorb
push
fidivrl
lcall
mov
xor
xor
adc
lds
cs
cli
pop
xor
jp
sbb
std
sbb
jecxz
sti
and
xchg
aas
lcall
dec
loope
aaa
mov
lea
xchg
in
sarl
cltd
gs
adc
mov
dec
and
xchg
outsl
call
cmpl
adc
xchg
jb
xor
xchg
xor
int3
adcl
adc
loope
cli
bound
and
movsb
sub
movsl
imul
sbbb
mov
test
clc
cld
sub
or
pusha
std
mov
mov
mov
test
fidivrs
inc
std
pop
cld
sti
cmpsl
xor
cmp
adc
pop
out
inc
cmc
test
jle
push
pop
sti
popa
pusha
test
outsb
cmp
sub
sub
loop
aas
movsl
sbb
fadds
mov
stos
adc
xor
sarl
es
pop
sbb
push
cmc
pop
in
popa
cmp
testl
lcall
imul
das
seto
pop
cwtl
mov
mov
std
nop
cmp
clc
gs
or
xchg
ds
hlt
pop
pop
sbb
mov
insl
cld
xchg
aaa
outsb
jl
cltd
fnstsw
dec
lret
or
xchg
cs
das
scas
push
cmp
pop
pop
mov
mov
int3
arpl
fisttpll
add
fdivs
std
jg
cli
pusha
mov
mov
aas
bound
inc
or
and
imul
add
aas
imul
out
or
es
adc
ss
testl
push
lcall
or
sarl
pop
pop
icebp
repnz
mov
pavgw
mov
xchg
cs
xsha1
cmpsb
leave
push
mov
mov
sub
push
cmp
loop
icebp
mov
vphaddbw
cmpsb
and
push
adc
sub
cmp
testb
mov
pop
mov
fsub
js
pushf
xchg
into
das
call
and
ret
pop
je
cmp
push
xchg
loope
enter
pop
jmp
ja
lods
cmp
mov
int
sub
mov
sarb
loopne
lock
cmpsb
xor
fs
lock
test
cmpsb
dec
fdivs
les
mov
out
xchg
rorl
pop
xchg
and
ret
cmpsb
cmp
cmpsb
or
pop
cmp
pop
jecxz
nop
sbb
cwtl
loop
movsb
cmp
mov
ds
adc
js
cmpsl
pop
repz
xchg
xchg
stc
jp
sub
cwtl
das
jle
cmp
cmp
mov
rcrl
icebp
mov
aam
and
js
loop
repnz
xchg
cs
push
mov
mov
lds
stos
shrl
cmp
jecxz
std
icebp
mov
push
montmul
cmpsb
and
sub
cmp
es
pop
mov
fsub
jns
fwait
xchg
int
add
and
ret
pop
jae
cmp
add
es
icebp
push
call
js
stos
cmp
sub
mov
fistps
adc
push
xor
arpl
icebp
mov
test
cmpsl
dec
xlat
mov
or
popf
sub
push
out
jge
xchg
rorb
and
mov
ds
or
pop
cmp
addr16
negl
jnp
sbb
cltd
loope
movsb
cmp
mov
aas
test
loope
inc
cmpsb
pop
hlt
xlat
call
sub
cltd
xor
cmp
cmp
pop
icebp
icebp
aad
and
repz
xchg
cs
adc
xchg
das
sbb
dec
in
cld
icebp
mov
mov
rorb
and
and
mov
cmpsl
ds
dec
loop
mov
pop
mov
fninit
jp
lcall
pop
in
movsl
cmp
sbbl
pop
jb
cmp
js
and
call
stos
cmp
cs
mov
sarb
ficomps
psrld
movsb
xor
testl
mov
or
pushf
sub
push
out
jl
xchg
iret
or
and
mov
aas
call
or
pop
cmp
addr16
negb
mov
xchg
loopne
movsb
cmp
ret
push
inc
xlat
test
loope
inc
movsl
pop
cmc
arpl
xchg
xchg
idivl
mov
mov
dec
lcall
popf
mov
icebp
mov
insl
and
hlt
mov
xchg
xor
mov
xchg
xor
sbb
dec
in
sti
icebp
mov
dec
jg
mov
adc
test
gs
loop
xchg
pop
mov
jnp
cltd
xchg
lret
sub
movsl
cmp
andb
mov
ret
pop
jno
ds
xchg
loope
lds
repz
out
xchg
sbb
adc
lret
cld
mov
sarb
pop
lock
jno
insb
mov
repz
adcb
dec
aad
dec
pop
push
fwait
sub
push
in
jnp
xchg
into
or
and
mov
inc
out
dec
loope
pop
enter
push
jge
push
xchg
dec
lods
add
fisubrs
cmp
jmp
mov
out
push
inc
xlat
adcb
jns
mov
add
daa
mov
mov
dec
lcall
fwait
mov
repnz
insl
and
hlt
mov
cwtl
das
xor
dec
test
xor
pop
cmpsl
aam
fnstcw
dec
in
cli
repnz
insb
add
fimuls
test
arpl
dec
jecxz
test
pop
mov
push
jbe
in
or
add
sbb
les
sarb
aad
xchg
loop
les
pop
repz
in
xchg
push
jne
adc
enter
mov
mov
fistpl
or
aad
mov
ret
hlt
adcb
inc
shll
cltd
shrb
mov
lock
int3
push
movsl
std
pop
mov
xchg
push
sub
inc
in
dec
loop
add
imul
mov
add
fsubrl
cmp
cs
inc
xlat
orb
jp
mov
add
and
inc
lcall
cltd
mov
repz
insl
push
lods
jp
fidivrs
hlt
mov
cwtl
das
xor
mov
test
xor
push
cmpsb
aam
fdivs
dec
in
stc
repnz
mov
dec
adc
setg
test
test
pop
mov
push
jne
in
or
add
sbb
and
outsl
iret
ds
xchg
loop
ret
and
in
xchg
adc
ss
mov
cwtl
das
stc
mov
mov
ficompl
or
insb
mov
shl
repz
sub
inc
shlb
cwtl
and
dec
in
js
xchg
lret
push
movsl
cld
pop
mov
nop
sbb
test
loop
add
pop
shrl
push
out
mov
pop
inc
stos
add
cmp
sub
dec
inc
xlat
jg
jecxz
inc
mov
add
and
pop
mov
inc
lcall
cwtl
mov
repz
insl
sbb
ds
mov
cwtl
das
xor
mov
and
adc
ss
in
clc
repnz
mov
dec
adc
push
sahf
cs
test
popa
lock
jecxz
add
mov
push
je
in
or
add
sbb
lods
cmp
pop
outsb
into
ds
loop
shll
hlt
push
loop
xchg
adc
adc
cltd
xor
xchg
mov
mov
icebp
or
insl
lahf
sub
pop
shl
bnd
sub
inc
shlb
xchg
and
imul
lock
leave
push
movsl
cli
pop
mov
sbb
inc
loop
dec
loop
add
pusha
xor
push
out
mov
mov
inc
test
cmpsb
cmp
sub
les
dec
inc
fdivrs
jecxz
ds
pop
not
pop
add
and
fwait
xor
ds
xchg
mov
repz
xlat
outsb
sbb
jp
fstpt
cwtl
das
cs
adc
and
aam
aad
dec
out
div
mov
mov
mov
fisttpl
vucomisd
jecxz
add
mov
push
jb
in
pop
xchg
mov
sub
lcall
and
insb
int
decb
pop
cmc
push
loopne
xchg
adc
adc
lcall
sbb
icebp
pop
insb
xlat
outsb
sahf
sub
pop
mov
xchg
sub
inc
into
mov
add
leave
xchg
and
imul
lock
push
movsl
clc
pop
lea
sbb
inc
loope
dec
loop
add
popa
xor
imul
xchg
mov
inc
test
popf
fldenv
cmp
sub
inc
fnstcw
jecxz
cmp
pusha
test
lock
and
pushf
xor
ds
xchg
mov
repz
fsubrs
cmpsl
jp
fnstcw
lea
cwtl
das
sub
adc
rorl
jg
xor
adc
push
out
hlt
repnz
xchg
mov
fimull
lret
sub
dec
jecxz
or
add
out
push
xchg
mov
les
add
pop
in
cmp
stos
cmp
pop
push
inc
xlat
std
mov
jns
push
pop
testb
xchg
jge
mov
les
shll
aam
icebp
add
es
pop
mov
xchg
sub
inc
int3
mov
arpl
lret
shrl
mov
call
movsb
pop
jo
cmp
negb
and
dec
lods
lods
inc
fildll
jecxz
add
bound
mov
jmp
and
pop
sahf
xlat
popa
cmpsl
ds
clc
and
pop
out
inc
fidivrl
in
cmp
cltd
mov
jg
and
popf
xor
add
xor
hlt
and
jo
movsl
jnp
xlat
cmp
mov
xor
mov
dec
jge
xor
adc
push
call
and
outsl
push
mov
adc
or
stos
inc
pop
ljmp
mov
imul
shl
jle
nop
mov
ret
pushf
push
jecxz
ds
lds
inc
fdivr
mov
jp
sbb
testl
jle
mov
ret
hlt
cmpb
inc
rcrb
add
jo
and
adc
testl
inc
lret
cld
popa
xor
xchg
sbb
push
jmp
mov
ret
adc
mov
lods
inc
frstor
in
dec
bound
mov
jmp
and
movsb
pop
sahf
aad
test
xchg
mulb
pop
out
inc
fidivrl
in
cmp
add
push
lods
and
jno
aas
xor
pop
hlt
and
jo
movsb
jnp
cmp
mov
cltd
xor
lea
dec
jl
xor
adc
push
call
and
test
xlat
lea
xchg
das
enter
pop
jmp
leave
pusha
mov
imul
shl
jle
vphaddbw
ds
and
addr16
inc
fdivr
mov
jp
sbb
dec
fildl
cwtl
or
jle
mov
rcrl
adc
push
inc
rcrl
add
jo
and
push
mov
xchg
cs
push
lods
aas
leave
mov
sti
pusha
xor
xchg
sbb
imul
jmp
mov
ret
repz
mov
movb
inc
fsubl
in
std
lret
bound
mov
jmp
and
mov
test
xchg
cmc
and
pop
in
inc
fidivrl
in
cmp
add
sbb
ds
xor
aas
das
xchg
mov
hlt
and
jnp
aad
testl
mov
fidivs
lret
aad
iret
xor
popa
lock
subl
inc
adc
or
stos
inc
pop
call
leave
pusha
scas
cmp
insb
shl
jle
mov
pushf
push
loope
adc
mov
enterw
xchg
jp
sbb
dec
fiaddl
cwtl
or
adc
pop
rcrb
adc
repnz
jo
and
push
mov
xchg
cmpsl
or
mov
cli
pop
xor
nop
sbb
imul
jmp
mov
rcll
repnz
mov
das
movb
in
cld
lret
bound
mov
jmp
and
pop
test
nop
hlt
and
pop
in
inc
fidivl
in
aaa
cwtl
popa
clc
leave
pop
add
sbb
and
outsl
std
aas
cs
mov
hlt
and
jo
mov
testl
mov
fnsave
lret
aad
into
das
push
call
and
adc
pop
xchg
das
mov
stos
inc
pop
out
in
jl
pusha
scas
cmp
imul
jle
lea
pushf
push
loopne
adc
mov
movl
mov
flds
cwtl
or
sahf
sub
mov
mov
cmp
push
inc
iret
pop
repnz
jo
and
push
mov
xchg
cmpsb
or
lods
cmp
pop
xor
sbb
imul
loope
repnz
rclb
icebp
push
xchg
das
movb
inc
fisubl
xchg
sti
lret
bound
dec
jmp
and
pop
sahf
rcrb
aas
repz
pop
jecxz
inc
fidivl
in
ss
popa
clc
enter
mov
jg
sbb
popf
xor
cld
aas
sub
dec
pop
hlt
jg
fnstenv
mov
testl
mov
fdivl
lret
aad
int
push
call
and
adc
push
xchg
das
mov
stos
inc
pop
out
in
jnp
pusha
lods
cmp
push
out
add
pushf
push
fbld
mov
movb
test
jp
sbb
dec
fadds
cwtl
or
adc
pop
mov
cmp
push
inc
into
pop
bnd
xchg
and
push
mov
mov
jae
das
movsl
or
lods
cmp
mov
clc
pop
xor
lea
aad
dec
scas
push
jmp
sahf
add
xor
test
xor
inc
cmpsb
lods
inc
fsubs
in
stc
lret
bound
mov
add
dec
jmp
and
lahf
pop
sahf
rcrb
mov
and
pop
loop
inc
fidivl
jge
xchg
popa
clc
push
add
xchg
jg
sbb
popf
xor
sti
inc
xlat
sub
mov
cmc
jle
fnstenv
mov
testl
mov
fidivl
lret
insl
int3
sub
call
pop
jg
push
mov
adc
add
xor
les
dec
in
jns
pusha
stos
aaa
insb
add
out
decb
push
popf
push
mov
les
cmc
and
mov
popa
clc
inc
add
fwait
sub
mov
mov
ds
bsf
int3
pop
repz
fidivl
push
jnp
push
mov
out
cltd
xor
les
int3
mov
insl
dec
lods
push
ljmp
jno
xor
adcl
enter
inc
bound
xchg
test
add
dec
jmp
and
popf
pop
sahf
into
pop
stos
inc
out
and
pop
loope
inc
fidivl
out
xor
popa
clc
les
pushf
xchg
jg
pop
test
mov
push
inc
fsubrs
mov
idivb
fnstenv
lahf
jge
shll
testl
mov
mov
lret
xlat
outsb
lret
sub
pop
in
cmc
mov
jge
push
scas
aas
adc
add
stos
inc
push
in
out
ja
pusha
test
lret
cld
mov
popf
dec
fsubrl
mov
popa
ret
repz
mov
popa
clc
inc
aad
lcall
and
in
jns
stos
or
pop
hlt
cld
pusha
fidivl
sbb
clc
in
lcall
ret
mov
int3
mov
xlat
outsb
dec
stos
push
ljmp
jno
cs
orl
lods
inc
aam
push
out
cmc
lret
bound
mov
add
jp
lea
fwait
pop
sahf
int3
pop
stos
inc
mov
and
pusha
loopne
inc
fidivl
call
clc
ret
popf
test
jg
adc
ss
xor
stc
inc
fldcw
mov
idivl
jo
sahf
jle
shlb
testl
mov
mov
lret
fsubrs
sub
pop
jmp
lea
ds
outsl
into
lea
xchg
xor
ret
inc
push
jecxz
out
jne
pusha
cmpsl
xor
out
cli
mov
dec
fldt
mov
pusha
rolb
and
clc
inc
aam
fwait
add
and
ljmp
push
cmp
pop
fidivl
sbb
adc
mov
jecxz
fwait
xor
ret
hlt
push
xor
outsl
inc
test
ljmp
jno
sub
adc
in
dec
es
xor
aas
mov
push
call
and
inc
jmp
and
lret
inc
mov
and
popa
fistpll
jmp
clc
rclb
test
jg
adc
popf
xor
clc
inc
fisubrl
mov
clc
jnp
fnstenv
popf
jg
iret
testl
mov
mov
lret
fnstenv
es
call
sbb
outsl
push
stos
cmp
lea
xor
rcrb
inc
push
loope
call
movsl
xor
gs
call
and
sbb
sahf
dec
fldcw
mov
pop
mov
out
mov
stc
inc
rolb
pop
xchg
and
mov
call
or
idiv
pop
sbb
dec
scas
stc
nop
loope
pushf
xor
sarb
test
fnstenv
cmpsb
push
jmp
testw
adc
daa
jge
xor
cmp
pop
push
clc
mov
mov
sbb
and
cmpb
fimuls
xor
mov
jo
shrl
jo
rol
sbb
repz
adc
add
mov
push
pop
aas
mov
jp
pop
in
mov
cld
cmp
addr16
fs
leave
mov
arpl
mov
jle
rorb
lods
in
ret
mov
sbb
or
or
dec
pop
notl
push
push
mov
call
xchg
repz
inc
dec
push
push
adc
mov
lcall
sub
ss
stos
lea
popa
xor
cmpl
js
mov
fldt
mov
loope
ss
fs
xchg
shlb
jg
fcomps
sub
leave
xor
ss
arpl
lahf
sbbb
sub
js
or
inc
inc
leave
sbb
jo
fmuls
cs
adc
shrl
and
xchg
pop
xchg
popa
insb
es
pop
cld
pop
push
cmp
add
jnp
je
pop
xor
lds
mov
repz
sub
dec
mov
jne
sub
sub
mov
aas
fmul
jmp
pop
scas
ret
out
lods
adcb
xchg
sbb
push
das
push
pop
xchg
inc
sarb
and
sbb
pop
mov
push
pop
cmp
push
push
or
mov
cmp
xor
or
ret
aad
mov
sbb
cmp
push
fistps
mov
out
stc
and
inc
mov
lcall
insb
nop
lret
outsl
lret
sub
jns
test
jae
sti
dec
lods
sahf
aas
cltd
insl
add
ds
jne
cmp
inc
xchg
jmp
add
pop
cmp
jo
jl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
lock
adc
in
sarb
inc
pause
inc
scas
dec
es
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
orb
je
xorb
cmp
xor
sahf
ret
sbb
pop
or
imull
xor
mov
fstps
stos
mov
sbb
sub
cmp
out
jb
xor
push
dec
fsubr
lret
ljmp
sub
pop
loop
push
xchg
cmpsl
pop
push
pop
fsubs
xchg
repz
or
out
ficomps
imul
jne
orb
jns
push
adc
mov
lods
ljmp
popa
inc
jp
mov
xchg
jmp
push
sbb
mov
arpl
aam
test
imul
push
iret
cmp
fists
push
mov
out
sub
aam
dec
test
inc
mov
sbb
nop
lret
lock
aad
iret
icebp
sar
xor
fwait
stos
mov
enter
fldpi
and
lcall
addr16
push
ljmp
incb
int
lcall
test
aad
ljmp
imul
les
mov
xor
je
outsl
mov
shlb
cwtl
ret
mov
ret
imul
pop
pop
push
ss
shrb
pop
shl
dec
aad
outsl
notl
xor
lcall
loope
dec
sbb
xchg
xchg
lret
pusha
jmp
inc
sbb
xchg
stos
lds
mov
inc
mov
xorb
pop
data16
fidivs
fidivrs
jp
adc
arpl
and
sub
adc
jns
lods
mov
sbb
cld
push
pop
cltd
ret
lahf
jns
mov
in
xor
loopne
and
jb
jbe
xor
in
mov
mov
cmc
jmp
out
popa
xchg
xchg
arpl
mov
mull
ja
sbb
enter
ss
pusha
cmp
push
aas
sbb
xchg
cmp
rcrl
push
