mov
jle
js
cmp
or
sbb
ret
adc
xor
leave
ret
sti
mov
or
das
inc
dec
pop
pop
add
adc
adc
pop
ret
and
or
ret
dec
pop
inc
adc
nop
mov
jbe
xlat
mov
adc
or
pop
adc
or
jg
adc
inc
or
adc
inc
dec
inc
or
nop
adc
adc
inc
adc
sbb
dec
add
push
adc
dec
push
adc
fisubs
fildll
or
adc
adc
inc
adc
inc
pop
inc
push
add
pusha
fcomps
push
push
or
inc
sbb
xor
lcall
cs
dec
nop
mov
ds
inc
dec
rcl
sbb
xchg
adc
adc
pop
dec
dec
adc
addb
outsb
mov
lret
add
roll
adc
insl
add
popf
or
adc
or
sbb
cmpsb
test
repnz
and
mov
int3
add
sbb
mov
enter
rorb
add
popa
jbe
fidivrl
and
fildl
nop
cmc
jle
adc
fistl
ret
sub
int3
jo
mov
clc
jo
xor
mov
in
add
mov
mov
or
fwait
xor
add
ds
mov
add
imul
add
pop
inc
ret
in
inc
orl
inc
add
add
or
and
add
dec
adc
fcmovnu
fcmovne
adc
or
adc
sub
and
add
push
insl
jg
and
and
add
and
adc
nop
inc
sbb
and
mov
xor
mov
push
dec
test
or
test
neg
insb
data16
and
or
inc
test
test
movsl
outsl
mov
adc
lods
adc
push
add
dec
mov
inc
push
add
add
mov
pop
test
sub
cltd
aaa
jnp
and
adc
dec
adc
es
push
pop
push
inc
inc
add
or
imul
outsb
add
push
push
adc
xchg
int3
in
inc
dec
call
add
pop
xchg
mov
test
cwtl
nop
add
dec
and
mov
insl
push
and
push
adc
or
sbb
or
adc
xor
or
inc
or
push
sbb
add
lcall
or
int3
inc
cwtl
or
dec
mov
sbb
sub
push
add
or
inc
xchg
dec
shrb
mov
ret
scas
int
xor
shr
add
adc
add
nop
mov
nop
mov
sbb
xchg
enter
ror
and
inc
test
in
adc
or
and
stos
test
sbb
push
sub
dec
inc
mov
and
nop
add
inc
and
cld
sub
mov
add
dec
jae
insb
pusha
or
dec
lds
mov
cs
mov
jbe
sub
stos
pop
dec
aam
or
add
dec
dec
and
pop
test
roll
cwtl
and
inc
cltd
sub
xorb
add
sbb
or
out
adc
adc
or
xchg
or
int3
adc
adc
pusha
ja
cs
adc
and
add
cmp
push
adc
add
hlt
dec
test
cwtl
pop
imul
or
test
or
xor
mov
add
sub
push
add
mov
jo
dec
mov
cmp
sbb
xor
add
push
add
lods
dec
mov
popw
lcall
push
jae
dec
and
jl
and
and
mov
push
addb
add
add
fcompl
push
orl
cs
andl
insb
stos
sub
mov
les
push
xchg
dec
inc
out
cmp
sub
mov
mov
or
sbb
movb
ret
dec
sub
insb
mov
lea
ret
jo
rclb
push
and
in
push
push
ret
fmul
push
cld
cmp
mov
jl
and
push
dec
cltd
add
mov
xor
push
add
call
pop
test
repnz
js
dec
inc
movsl
inc
insb
dec
and
dec
fidivrl
int3
mov
add
adc
pusha
lods
mov
cwtl
pop
add
movsb
and
mov
inc
out
test
test
inc
data16
test
mov
adc
inc
mov
out
dec
inc
xor
inc
clc
adc
adc
add
movsb
shrb
dec
cmpsb
or
adc
loop
add
data16
and
and
sub
sbb
rorb
call
enter
pop
push
and
mov
xor
fadds
adc
mov
pushf
inc
hlt
xor
adc
push
mov
in
mov
pop
push
test
fucompp
lret
sbb
mov
add
shll
cmpsb
add
daa
pop
push
push
mov
insb
sahf
add
imul
xor
mov
push
add
or
js
push
pop
dec
leave
mov
add
out
push
mov
stos
fldcw
inc
inc
add
cmpsb
cs
ss
jp
adc
cmpsb
ss
push
push
je
add
adc
mov
cmp
bound
mov
cli
add
inc
push
add
dec
dec
jbe
jae
loopne
add
add
push
xchg
enter
or
mov
test
out
xchg
sbb
and
dec
and
fsts
pop
push
addb
decb
jnp
xchg
sub
insb
mov
add
sbb
and
or
cmp
bound
or
xchg
xor
mov
add
je
add
mov
imul
inc
push
lret
testb
push
xor
dec
pop
or
add
in
rcrb
lcall
out
dec
mov
test
cmpsb
add
test
adc
ret
add
mov
cwtl
cld
mov
push
js
dec
push
push
sbb
jp
pusha
dec
or
ljmp
adc
adc
mov
sbb
cli
rorb
mov
leave
add
into
lret
int3
cmp
test
stos
xor
sbb
adc
jmp
outsb
rorl
data16
adc
in
add
push
inc
fdivs
mov
and
jnp
or
lock
or
inc
xlat
ret
movsb
sub
addb
mov
add
sbb
jp
or
push
orb
xchg
and
into
sarb
cmp
sub
or
push
mov
ret
push
js
or
add
cwtl
test
adc
xor
lods
es
cs
in
ficoms
lret
fsubl
bound
mov
or
mov
push
sub
cmpsb
mov
mov
out
jbe
push
dec
jo
push
and
cmp
cs
sbb
dec
add
jb
push
xor
xor
cld
jb
pop
cmp
mov
shr
test
rclb
pusha
adc
adc
and
sbb
xor
sbb
sub
scas
lods
adc
test
and
push
repnz
out
and
lcall
pop
cmp
xchg
or
sub
data16
mov
push
push
js
xchg
push
dec
int
fimull
or
repnz
push
pop
pop
testb
inc
add
xor
fs
ror
push
inc
loopne
sbb
mov
int3
sbb
inc
and
mov
push
dec
pop
adc
out
les
aaa
inc
sbb
mov
xor
dec
dec
mov
incl
ret
add
add
and
popa
popa
test
fsubs
and
mov
pusha
xor
cmp
repnz
adc
mov
loopne
or
imul
cltd
push
into
repnz
lock
add
jmp
fistl
pop
or
or
andb
in
enter
test
xchg
je
add
xor
inc
lcall
or
movsb
mov
ret
test
lods
cli
mov
adc
mov
and
call
cmpsb
insb
adc
out
insb
xchg
jge
pop
imul
adc
xchg
xor
addl
mov
enter
mov
inc
add
cmp
or
loop
mov
jne
in
cld
or
sub
popl
xchg
rolb
rcll
stos
jl
ret
mov
xor
dec
rolb
cmp
sbb
or
jo
push
bound
dec
xlat
aam
sahf
jbe
mov
push
sbb
fs
inc
jp
sbb
rclb
adc
sbbl
adc
add
shrb
mov
mov
xchg
adc
ret
out
mov
enter
pusha
and
inc
or
push
call
or
mov
movsb
mov
and
add
repnz
data16
lock
and
mov
add
push
clc
push
xor
adc
roll
xor
push
push
add
adc
jne
adc
mov
push
je
fdivs
and
aam
jb
or
pop
pop
add
pusha
xor
cli
addr16
add
add
movsb
dec
jbe
add
dec
lock
pusha
sub
ret
test
adc
cwtl
adc
daa
xor
fs
inc
inc
mov
xor
jmp
push
loop
sub
push
mov
das
pop
add
pop
inc
sbb
or
mov
pop
loope
cmp
bound
mov
loop
dec
cmpb
test
xchg
inc
push
xor
xchg
add
mov
out
lcall
and
mov
call
jle
mov
xchg
test
test
pop
inc
cld
lcall
dec
sub
xacquire
adc
fmuls
or
int3
pusha
sbb
push
adc
cld
je
adc
sub
jno
nop
cmp
mov
jne
dec
ss
pop
adc
movsb
adc
jp
out
adcl
inc
cmp
faddl
cli
xchg
xor
adc
inc
or
and
add
add
push
mov
cmp
sub
add
add
add
popa
out
mov
mov
inc
add
cmp
ss
enter
dec
icebp
push
dec
sbb
or
test
adc
mov
test
inc
add
nop
inc
jbe
add
add
sbb
and
mov
js
jne
rcrl
lcall
sub
mov
repnz
fisubrl
mov
cmp
cmp
popa
es
jle
jl
add
xor
push
push
rclb
dec
call
in
add
movl
sbb
add
jnp
not
mov
es
dec
and
sbb
jmp
add
sti
mov
mov
fbstp
add
idivb
dec
cmp
inc
pop
inc
not
xorl
and
rclb
add
divb
jmp
xchg
adc
in
sbb
pusha
jne
and
mov
rorb
mov
in
in
mull
and
sbb
insl
outsb
decb
in
in
add
test
pusha
mov
and
adc
fldl2t
cmp
mov
jle
movb
inc
jbe
and
lods
xor
mov
fimuls
xchg
loopne
adc
insb
pusha
mov
xor
mov
ss
and
rorl
out
pmaxsw
xchg
ss
or
xor
jle
pop
in
push
sbb
lcall
dec
enter
out
fincstp
jb
mov
aam
xor
xchg
push
mov
sub
cmp
das
fisubs
jo
lock
sub
mov
mov
sti
not
test
je
rorb
adc
or
clc
nop
cmpb
into
int3
insl
push
sub
sti
mov
mov
clc
lcall
lods
dec
clc
dec
adc
sbb
or
push
cmp
sysret
or
testl
push
icebp
add
xchg
jg
xlat
cmp
xor
aad
sub
push
sbbl
push
loope
fiaddl
sbb
dec
or
sub
mov
xor
jne
and
xor
mov
lds
aam
push
pop
idiv
std
xorl
mov
adc
sub
lock
mov
shl
fldt
fadd
sbb
adc
cmpsb
or
scas
mov
dec
dec
adc
push
or
or
mov
ljmp
push
clc
sbb
int3
cmpl
pop
sub
ss
in
cmp
pushf
roll
or
pop
mov
adc
or
or
scas
in
js
ds
pushl
push
cld
add
pop
jp
cmp
scas
rclb
pop
jo
push
pop
aam
hlt
adc
add
adc
jno
je
pop
enter
and
stos
aam
sbb
insl
push
imul
aad
mov
push
pop
clc
scas
xor
popf
ficoms
in
enter
ret
jmp
daa
ss
mov
mov
mov
sahf
outsb
and
jmp
test
push
rcl
adc
jb
add
mov
js
add
push
push
sbb
psubq
cmpsb
ds
mov
xor
int3
in
pusha
adc
push
jecxz
sti
xchg
xlat
cmpsl
and
xchg
xor
add
xor
mov
cmpsb
inc
jo
mov
roll
mov
shll
sbb
add
and
inc
and
adc
xor
inc
pop
xor
out
stos
fists
ret
jmp
in
aas
test
xor
or
mov
insl
jne
mov
ds
dec
or
cli
aam
outsb
dec
add
mov
imul
cmp
sbb
add
mov
xchg
adc
adc
stos
or
rorb
fs
jge
adc
dec
add
out
add
xchg
call
mov
sub
and
loop
je
loope
and
decb
pusha
adc
addb
pop
pushf
ja
mull
and
mov
sbb
cs
clc
leave
sub
adc
jmp
shlb
cmp
fcmovbe
enter
popa
mov
js
imul
repz
mov
pop
ret
sub
out
push
adc
mov
cld
ficoml
mov
xor
sub
add
mov
fdivrp
shrb
clc
sub
rorl
ds
js
add
add
add
jns
call
mov
mov
insb
rorb
fildl
or
testl
js
aaa
jae
inc
fs
pusha
push
es
cs
cmpsb
shl
int
in
jp
filds
and
repnz
mov
cmpsb
lret
lret
aam
push
in
inc
out
push
xabort
inc
add
stos
add
inc
inc
jle
fsubs
adc
mov
rorl
push
xor
pop
movsl
cld
inc
in
and
aam
fimull
pop
cmp
mov
std
jne
aas
cmpsb
out
jne
pop
lret
sbb
int3
mov
dec
in
idiv
sbb
or
jge
sbb
fdiv
inc
fldenvs
ja
repz
push
add
sbb
das
mov
sbb
ret
test
call
push
les
mov
scas
andl
add
adc
ja
dec
pop
aam
add
lods
mov
ja
sub
ret
xchg
jbe
xchg
dec
jbe
inc
xlat
xor
sbb
flds
or
mov
call
xor
jno
inc
and
push
dec
dec
sbb
add
fsubs
outsb
call
push
ret
lock
negb
xchg
jne
push
fildll
mov
call
dec
lret
and
jmp
xorl
sbb
js
ds
inc
sbb
pop
clc
fiaddl
call
sub
int3
hlt
jb
adc
hlt
dec
add
and
dec
fs
cwtl
mov
cmp
jae
or
lcall
fidivs
cs
inc
inc
add
rcrl
sbb
loopne
add
mov
xchg
sbb
out
scas
in
loope
mov
mov
stc
rol
push
sub
xor
sbb
pop
cltd
mov
mov
hlt
lcall
adc
and
call
xchg
push
xor
lock
cld
add
lock
push
ljmp
out
fdivrs
push
stos
insl
leave
xor
adc
jg
pop
pop
cmpsb
xchg
add
loopne
sbb
in
fs
mov
imul
psraw
mov
sbb
adc
mov
shll
add
inc
fistpl
sbb
inc
movsb
outsl
xchg
and
jmp
fisubl
jo
jecxz
sbb
and
fldl
divl
mov
insb
dec
jmp
ret
fiadds
repnz
fsubr
or
dec
add
jne
add
cmc
icebp
add
hlt
pop
daa
sub
jmp
add
inc
hlt
les
ja
mov
rcrb
pop
sahf
push
pushf
jo
adc
fwait
sbb
imul
loope
jae
mov
hlt
cmp
sti
jle
add
push
test
ret
mov
rclb
cmpsb
sub
sub
in
and
out
test
out
add
rcr
mov
test
mov
sbb
dec
adcl
xor
fbld
std
adcb
rolb
add
push
rolb
xchg
inc
pusha
and
xchg
sbb
dec
mov
out
sub
scas
jmp
xorb
xor
adc
xor
addl
int3
xor
fcompl
rol
lahf
pop
and
push
fs
fwait
inc
mov
lret
les
push
dec
push
in
cmp
cli
and
in
mov
shlb
aam
adc
pop
je
cmpsl
cmp
insb
sti
test
sbbb
fmuls
mov
dec
fcomps
jecxz
lret
push
sbb
les
jp
aam
lods
cmp
lahf
shr
shlb
add
iret
sbb
cmp
pusha
sub
mov
mov
jae
sbb
loopne
icebp
or
inc
icebp
inc
adcb
adc
aam
insb
push
aad
or
sbb
pop
sti
or
test
cli
jo
jl
and
inc
adcb
push
xor
sub
pop
clc
lahf
inc
add
and
push
dec
or
jno
ffreep
add
repz
jnp
and
test
out
mov
das
inc
mov
push
fs
dec
xchg
add
add
mov
mov
xor
sbb
dec
adc
jg
sbb
push
and
mov
into
adc
cmc
neg
fdivrs
std
pop
cmp
iret
les
xor
in
hlt
out
add
sbb
add
iret
inc
cmp
sbb
test
fnstsw
mov
sbbl
popa
js
jmp
jbe
rcll
adc
dec
scas
inc
inc
fsubl
ds
test
aaa
fstpt
hlt
in
mov
ljmp
loop
test
rcl
xor
mov
dec
inc
cmp
xchg
add
jge
ja
cmp
jecxz
adc
jmp
jp
jmp
or
pop
sbb
mov
xchg
movsb
cltd
xor
inc
ret
adc
dec
int3
mov
in
lods
icebp
mov
jle
or
xlat
mov
mov
add
mov
or
push
cmc
pop
fs
inc
jge
loopne
push
loop
fadds
jle
add
push
call
push
inc
in
cs
and
mov
xor
lock
icebp
xchg
cs
inc
aad
loop
fcompl
dec
jnp
xor
jo
loope
xorb
sub
jmp
push
cmp
or
fxch
das
in
ds
jl
add
pop
jge
mov
aam
inc
addl
call
mov
inc
test
adc
inc
or
xor
inc
vmaxss
imul
loope
xchg
outsb
hlt
js
cmp
dec
push
mov
flds
repz
sbb
pop
jmp
or
cli
insb
pusha
push
xor
mov
cmp
inc
mov
lds
jmp
add
pop
arpl
mov
bound
fs
mov
xchg
lret
adc
inc
and
ljmp
cmpsl
jecxz
and
push
clc
add
pop
mov
push
loope
mov
inc
mov
xchg
ja
jle
adcb
inc
mov
dec
or
cwtl
sbb
ret
xor
scas
push
mov
jbe
inc
addb
mov
inc
inc
dec
xor
adc
loope
mov
std
outsb
lcall
es
gs
push
cmp
test
test
addr16
xor
and
add
ror
jbe
int3
decb
insb
arpl
push
jbe
lret
mov
loope
add
clc
inc
int
popl
and
leave
clc
lock
fisttpl
call
mov
bound
sub
inc
cltd
sbb
push
xor
sar
push
test
mov
fisubrs
jno
clc
ficomps
mov
lcall
adc
in
loope
mov
and
lahf
jo
sub
in
or
sub
shll
or
shlb
jecxz
rclb
adc
adc
dec
inc
push
jl
out
dec
xor
fwait
add
xor
xor
sbb
pop
sti
sbb
xor
incb
ud1
inc
loopne
lods
mov
jecxz
pop
push
loopne
push
out
mov
sbb
mov
fldl
int3
aas
cmp
jno
icebp
xchg
popa
fs
add
or
notb
push
add
clc
rcr
in
cli
fidivl
lock
movsb
mov
aam
lea
lods
add
subl
iret
push
lock
dec
std
mov
sub
sbb
loope
lock
add
lds
sbb
adc
lods
add
loope
in
add
loop
jo
aam
out
xlat
push
mov
ffreep
leave
pop
hlt
push
and
test
add
add
hlt
mov
in
or
dec
mov
push
inc
addb
or
sar
mov
add
neg
cmp
aas
rcll
es
push
aas
loop
and
aam
jmp
lock
rclb
pop
insl
inc
pop
lock
dec
movsb
add
inc
rorb
push
lods
cld
dec
roll
jl
js
cli
lock
lock
aaa
imul
or
ret
iret
push
cld
outsl
aas
mov
sbb
mov
mov
and
xchg
mov
inc
xor
dec
push
push
lods
jge
adc
ds
inc
negb
jne
sti
fdivp
lds
jge
cld
jnp
faddl
fisubs
cli
aad
scas
mov
add
insb
stos
in
gs
ret
stos
push
cwtl
xlat
flds
imul
cmpsb
nop
xchg
add
jp
or
repz
push
and
stc
cbtw
pop
loope
or
shl
and
push
ss
mov
popf
push
fsub
fs
mov
push
xor
call
sbb
mov
js
pop
dec
jb
sti
push
jl
xchg
sbb
adc
sbb
rorl
pushl
adc
jb
test
call
jno
jo
xchg
push
sbb
adc
xlat
and
pop
push
bound
sarl
out
adc
push
adc
inc
lahf
push
test
shl
mov
push
push
add
rcrl
je
xchg
xchg
addr16
std
mov
xor
xor
incb
pop
or
rcll
fistps
mov
insb
and
in
aaa
xor
ret
mov
pusha
idivb
scas
push
cld
out
rcrl
out
in
repz
mov
push
pop
dec
mov
lock
cmp
ret
xchg
xor
fwait
popf
mov
cld
movb
and
loope,pt
jbe
inc
sub
lret
sbb
sarb
sbb
lods
fdivrl
push
mov
fsub
mov
flds
pop
data16
addb
jbe
add
sbb
outsl
mov
adc
repz
push
xchg
les
negl
inc
pop
sarb
clc
and
sarb
outsb
and
loopne
iret
inc
outsl
test
xor
imul
mov
call
popf
jp
and
mov
push
pop
lea
push
push
loopne
xchg
adcb
adc
cmpsb
xchg
add
aas
push
sbb
push
mov
aam
test
icebp
mov
shrl
or
inc
adc
loopne
and
xorl
push
mov
add
mulb
push
test
xor
mov
or
adc
mov
pop
cld
xlat
dec
sbb
xchg
cmp
js
lods
sysenter
jp
mov
jo
and
jp
or
inc
sub
or
loope
fisttps
jno
push
jbe
in
pusha
in
push
dec
adc
push
mov
les
adc
cmp
neg
jb
cmpb
icebp
cltd
cmpsl
sbb
subb
jmp
ret
xchg
mov
dec
shlb
incb
sub
and
xchg
cltd
adc
sbb
sub
pop
sub
orb
aad
mov
ja
outsb
cmp
inc
hlt
cld
add
dec
lret
aam
fs
push
sub
add
mov
pop
hlt
test
pusha
leave
add
xchg
jne
orb
add
inc
push
pusha
xorl
push
xchg
dec
les
jmp
dec
idivb
sbb
pop
pop
jecxz
sti
push
aam
lret
add
sbb
jl
arpl
fisubrl
clc
adc
in
in
sub
add
mov
inc
incb
cltd
mov
test
fists
or
xor
aaa
jns
dec
jecxz
dec
std
sbb
add
xchg
int
mov
jmp
sbb
lds
mov
shrb
pop
int
mov
inc
lods
sub
rep
adc
pusha
sub
xor
mov
or
and
jnp
dec
fucom
and
add
jns
in
mov
loope
loope
imul
jecxz
add
scas
push
jecxz
stos
mov
jmp
inc
add
flds
push
icebp
add
pop
in
out
lea
movsb
popa
mov
add
cmp
clc
enter
cmp
jbe
sahf
mov
inc
xchg
xor
pop
push
daa
xchg
jo
lcall
sarl
pop
sbb
ja
out
dec
dec
add
mov
nop
dec
movsb
xchg
les
cmp
idivb
les
xchg
inc
inc
xor
dec
sub
add
repnz
push
call
sbb
addb
mov
or
pop
jge
scas
pop
jmp
jbe
xor
pop
add
mov
adc
pusha
sbb
faddl
rcrb
cmp
push
inc
les
jle
lods
jecxz
xlat
addr16
dec
xchg
push
jo
xor
add
faddl
sbb
or
or
mov
cli
xor
cmc
mov
insl
imul
pop
xlat
arpl
lock
in
aaa
push
mov
and
in
dec
adc
mov
add
xor
add
sbb
loopne
sbb
or
in
cwtl
sbb
sbbb
adc
or
jle
cmp
imul
and
or
js
cli
mov
push
adc
jae
push
dec
cld
ret
xor
add
fistl
jne
dec
push
rcrb
jecxz
cmpsb
jnp
loop
icebp
sahf
xchg
test
popa
xor
mov
inc
push
stos
lock
pop
mov
add
add
dec
cmp
clc
cmpsb
ret
or
call
jae
outsb
xchg
jmp
sub
into
pop
pop
pop
lret
aam
insl
mov
add
inc
es
outsl
sbb
flds
decb
aam
pop
out
mov
sbb
xchg
jb
jle
jl
push
insl
loopne
pop
mov
xor
sbb
sbb
jbe
fcomps
fdivrp
fadds
sub
xor
bnd
cmp
xor
shrl
adc
cmpb
lock
xor
test
call
rorl
addl
cmpsl
push
mov
stos
sbb
in
and
data16
hlt
xor
stc
jns
lods
xchg
jae
add
dec
mov
ds
mov
adcb
dec
add
repz
mov
dec
add
add
inc
dec
es
cld
xor
add
or
push
call
mov
ljmp
hlt
adc
adc
dec
fcoml
inc
mov
std
stos
mov
adc
pop
xor
add
fmull
std
pop
jl
std
push
gs
xor
add
xchg
push
push
mov
jecxz
mov
adc
jmp
jmp
stos
call
cmp
adc
dec
or
clc
arpl
popf
or
sub
or
jae
clc
jo
add
xor
adc
fsubrl
sub
jbe
in
insl
mov
push
add
or
mov
jp
stos
cwtl
in
lcall
fmuls
cmovae
adc
and
ret
aas
sbb
adc
ss
and
int3
jb
stos
push
out
pop
cli
sbb
sbb
shrl
cmp
and
and
xchg
jmp
mov
mov
rorl
mov
cmp
cmpl
push
dec
call
movsl
shrb
fwait
lret
push
icebp
xchg
mov
add
ficoml
add
adc
cld
xor
mov
adc
mov
mov
hlt
scas
pop
js
xchg
in
into
dec
cmovnp
xchg
ret
pushf
scas
add
fmull
mov
fldl
and
movsb
les
adc
jmp
inc
push
jle
push
cmpl
mov
fdivrl
xor
adc
arpl
inc
mov
jl
dec
pop
loope
mov
and
fcomp
lea
add
push
popa
or
loopne
js
push
jb
aas
in
add
mov
loop
scas
jnp
sub
cmp
pusha
jnp
xchg
scas
mov
fwait
rorb
cmpsl
fisubrl
sbb
call
fmull
sub
add
subl
xor
pop
lcall
test
mov
sbb
and
pop
mov
ljmp
adc
xor
sahf
scas
sbb
cwtl
adc
push
shl
xor
xor
push
mov
sbb
faddl
sub
jl
inc
pop
mov
sbb
aam
enter
call
loopne
mov
add
and
sbb
test
enter
pushf
jp
testl
popa
std
xchg
addb
ljmp
fld
cmp
cltd
sbb
lock
flds
xor
je
ja
imul
jl
fisubl
dec
fwait
push
sub
sbb
adc
shl
inc
repnz
test
lcall
enter
xor
mov
call
xchg
sub
fprem1
dec
push
xchg
jle
add
push
call
jmp
or
cs
push
in
rorl
arpl
jmp
stc
into
inc
incl
sbb
adc
and
and
jp
jae
test
or
lcall
test
xchg
pop
or
mov
cmp
pop
jbe
ret
loope
iret
push
xchg
mov
xor
cmpsb
add
adc
mov
adc
stos
add
pop
xor
adc
mov
add
mov
inc
loopne
lret
mov
ljmp
cmp
loope
dec
cltd
and
add
jl
xchg
pushf
and
xchg
pop
xorb
mov
dec
clc
pop
or
mov
pop
sub
cs
aaa
or
mov
loopne
cmp
mov
fdivp
or
cli
jne
mov
clc
push
pushf
lock
push
imul
mov
mov
inc
and
xlat
cli
test
adc
or
mov
loope
addl
les
or
in
sbb
xchg
js
rcr
xchg
fsubl
test
les
sbb
inc
add
adc
nop
fwait
or
stos
hlt
push
push
call
mov
incl
fs
xor
add
push
sbb
aam
sarl
fcompl
test
and
dec
test
add
aad
mov
and
rcr
psubsb
repz
subb
xor
fiaddl
nop
sbb
or
cmp
adc
test
xor
ret
mov
adc
or
popa
testb
push
jb
dec
add
pop
je
add
or
cwtl
jns
and
add
scas
getsec
inc
inc
lods
rolb
dec
mov
roll
sbb
jae
test
jbe
std
sbb
or
mov
addl
bound
jge
lret
stc
cmp
in
pushf
pavgb
mov
xchg
addb
pop
enter
mov
das
xor
add
insb
f2xm1
add
data16
ret
add
mov
loopne
pusha
xlat
repz
xor
xlat
gs
jecxz,pt
sbb
push
and
clc
pop
movsb
and
inc
test
jne,pt
push
jmp
gs
test
mov
lock
sub
int3
fiaddl
and
call
pop
lock
adc
push
sti
hlt
les
fdivrs
push
call
repnz
aad
ds
lcall
aaa
mov
iret
ret
add
push
cld
mov
clc
dec
sub
mov
fimull
and
aam
xchg
mov
xchg
shl
sub
test
fwait
imul
cmp
ss
sbbb
add
out
jnp
subl
aaa
out
xlat
insb
jnp
out
loop
cmpsl
aas
movsb
dec
gs
or
fst
mov
aas
loopne
leave
pop
mov
push
aaa
jb
repz
sub
stc
jg
add
add
pop
fimuls
mov
sub
or
jmp
scas
out
insl
hlt
bound
fdivl
adcl
gs
or
ret
sbb
adcl
icebp
jp
dec
add
sbb
mov
xchg
popa
repz
sbb
adc
sbb
and
sub
sbb
jle
icebp
fdivrl
shrl
xor
icebp
aas
xor
insl
lock
testb
popf
inc
xchg
addl
dec
or
mov
push
clc
rcr
das
or
stos
sub
mov
into
icebp
xor
xlat
cld
dec
sub
sub
jmp
fimuls
mov
aam
xchg
or
cmpl
pop
rcrb
sbb
jns
int
xchg
clc
fists
loop
mov
icebp
pop
xchg
add
scas
xor
add
add
arpl
sub
inc
and
shlb
xchg
mov
add
jbe
add
or
adc
pusha
stc
test
xor
or
push
adcl
clts
xor
push
lock
loope
mov
push
fadd
outsb
sbb
dec
pusha
pop
inc
dec
out
outsb
loope
add
mov
dec
addr16
inc
das
sar
loop
fwait
pop
xor
xor
inc
ret
lock
arpl
call
sub
cmp
or
test
push
ficoml
pop
hlt
lods
push
fildl
hlt
mov
call
push
inc
add
divl
enter
push
and
fnstenv
and
bnd
ret
jg
pop
mov
sahf
sbb
les
push
pop
shrb
out
cs
push
lea
push
adc
mov
cli
loop
ljmp
fiaddl
cmp
add
or
or
inc
repnz
jg
pop
adc
pusha
ljmp
jmp
jno
sbb
stc
add
jb
rcrb
jmp
jmp
inc
mov
subl
push
cmc
jne
out
jp
mov
lds
lcall
rorl
cltd
pop
pushf
clc
push
or
lock
or
sahf
cmp
sbb
jg
inc
and
addb
or
sub
daa
inc
fdivr
or
into
les
pop
outsb
xchg
dec
adc
add
sarb
pop
mov
or
pop
push
test
xor
xor
sub
jmp
insb
or
cmp
js
lods
in
addl
inc
dec
in
dec
in
add
addr16
popa
inc
ret
mov
pop
fdiv
inc
int3
sti
inc
movb
pop
inc
loopne
aam
les
xchg
adc
xlat
or
jl
dec
rclb
int3
stc
rcrl
xor
jb
adc
lea
in
xchg
in
mov
xlat
gs
pop
int3
lods
pop
mov
arpl
push
add
dec
adc
xchg
in
and
into
stos
add
sarb
popa
sub
rclb
jns
popa
sbb
jp
add
neg
sbb
and
fsubrl
sub
inc
jo
mov
cmp
and
hlt
mov
and
pop
and
cmc
mov
push
mov
fdivrl
push
call
pusha
sahf
jno
and
mov
stos
shll
lea
push
pusha
cli
ljmp
call
mov
enter
sbb
add
sub
adc
std
popa
inc
mov
pop
fidivs
add
pop
loop
sbb
movsl
loope
push
aas
pop
ret
inc
mov
loop
add
mov
xchg
mov
in
dec
fildl
fists
xor
aas
js
add
pop
dec
adc
sbb
rcrb
push
lahf
mov
jmp
adc
into
xlat
outsb
clc
push
out
inc
mov
out
jecxz
das
and
lcall
jo
push
dec
bound
lcall
jmp
or
xchg
or
add
bound
insl
lock
sub
pop
inc
call
pop
loope
jnp
mov
push
sbb
pop
mov
sahf
sub
or
call
sahf
icebp
mov
out
adc
pop
sbb
mov
enter
aaa
mov
add
int3
push
call
push
lods
mov
loope
stos
adc
loopne
xor
inc
jmp
pop
mov
mov
jp
shl
fistpll
int3
rorl
std
cmp
pop
lods
or
movsb
inc
jne
jnp
testl
adc
mov
xlat
add
xor
adc
dec
mov
xchg
ret
addr16
pop
jmp
mov
js
and
xchg
dec
sbb
or
mov
inc
inc
inc
push
js
js
scas
into
or
pop
comiss
cmp
cmp
repz
sbb
or
mov
movl
scas
and
aam
xor
adcl
mov
or
jmp
jl
addl
and
add
mov
fsubrp
cmp
sbb
inc
roll
push
orb
sub
pop
dec
jo
test
and
ficoml
fisubl
or
inc
jmp
ljmp
xor
loopne
loop
mov
mov
clc
and
cwtl
incb
fidivl
fidivrs
je
sbb
js
and
sbb
cmp
dec
lret
es
xchg
fisubrs
clc
add
js
inc
test
idiv
imul
shlb
jo
pop
adc
dec
pushf
sbb
and
xor
mov
shll
fcoms
dec
sub
ret
rorl
add
cmovnp
adc
jge
and
bound
jp
cmp
push
icebp
pop
fdivs
or
add
and
sbb
clc
xor
loopne
jb
inc
cmpsb
mov
fadd
and
lods
add
or
mov
mov
data16
ss
adc
jne
and
adc
ret
rcl
push
rol
mov
and
in
scas
adcb
add
cmp
xor
adc
cld
sarb
pop
xor
mov
dec
mov
jo
or
addr16
mov
fbstp
int3
mov
adc
sbb
add
xchg
cli
cmpsb
adc
int3
ljmp
popf
cli
cli
xchg
xorl
push
pop
sti
jmp
jp
pushf
subb
jb
add
outsb
xchg
ja
js
sbb
lret
aam
and
iret
or
mov
fbstp
sub
sbb
push
fmull
jg
icebp
jbe
push
mov
clc
pushf
frstor
adc
xchg
push
rol
bound
insb
lock
dec
cmp
ljmp
inc
cmc
shr
mov
divl
sub
jb
mov
jbe
adc
pop
sbb
ret
mov
mov
insl
sbb
push
mov
sub
rolb
xor
das
imul
js
xchg
push
cmpsl
fistpll
jge
and
adc
xor
mov
movsl
jecxz
clc
stc
and
or
icebp
xchg
inc
mov
lea
xor
and
and
push
push
xchg
loope
sub
mov
inc
mov
or
pop
rclb
insl
fstps
idivl
pop
mov
jne
test
mov
add
sub
int3
subb
add
mov
fsubr
pop
bound
dec
pop
inc
jb
adc
lahf
call
jmp
xor
rep
sbb
out
mov
ror
ja
loop
inc
cld
subl
out
call
fbstp
adcb
mov
sub
stos
dec
int3
pusha
inc
sarb
orl
arpl
fadds
add
cld
unpcklps
jmp
test
je
jl
jmp
lea
mov
xchg
loopne
int3
xor
inc
pusha
dec
iret
stos
push
pop
fldl
mov
adc
mov
adc
bound
or
lea
out
cli
add
popl
insb
and
fnstenv
icebp
icebp
push
jle
inc
ror
add
or
mov
jmp
loop
aaa
cmpsb
lea
in
inc
jae
orl
les
xchg
rclb
fwait
add
mov
lds
jo
add
lods
outsl
in
cs
push
cltd
sbb
mov
fidivl
int3
xor
cld
out
mov
fcomi
jno
and
rcll
xor
mov
loopnew
jg
sbb
sarb
xor
test
mov
mov
addb
lds
je
xchg
push
sub
push
mov
ret
sbbb
mov
push
push
add
roll
dec
addr16
lds
jge
dec
sbb
xchg
pop
jp
roll
pop
cmc
dec
nop
pshufw
lret
pop
mov
pop
sbb
fmulp
mov
in
mov
xor
icebp
add
test
jae
cmp
cmp
inc
push
mov
out
cltd
xchg
aad
rcl
pop
mov
inc
pop
shlb
sahf
rcll
ljmp
pop
sub
loop
mov
inc
mov
and
add
sbb
popa
daa
int3
movsb
in
lock
add
loop
out
and
pusha
popf
scas
lcall
les
and
mov
add
clc
shld
pop
pushf
ror
mov
ret
add
adc
adc
shll
or
dec
add
cmpsb
push
mov
dec
cld
push
and
lds
test
mov
loop
or
and
mov
cmpsb
hlt
inc
mov
push
cmpsb
sub
sub
sub
mov
fadds
clc
shrl
pop
fs
push
mov
call
add
pop
jno
push
mov
xchg
call
imul
imul
jnp
test
arpl
xor
inc
ret
ret
inc
pop
sbb
lods
fimuls
fsubr
dec
iret
adc
pop
jge
js
sub
push
andb
jb
repz
in
mov
mov
mov
cmp
fistps
adc
and
clc
jg
pop
shr
ds
outsl
push
pop
dec
bound
stc
lods
les
mov
test
add
arpl
mov
or
negb
int3
inc
mov
mov
sbb
pushl
call
pop
clc
test
je
iret
stc
sub
jb
inc
mov
ret
adc
popf
int
add
dec
pop
std
sub
add
je
sub
loop
sub
mov
xor
dec
adcb
and
dec
clc
mov
lahf
pop
roll
insb
repz
or
aam
add
and
sub
into
mov
push
lock
xchg
sbb
loope
inc
and
loope
subb
sub
sub
jo
sub
insb
ret
repz
pop
cmpsl
inc
sub
arpl
push
dec
enter
sbb
push
out
rolb
xchg
xor
lods
rclb
std
mov
loopne
fwait
pop
sbb
out
filds
push
sbb
popa
mov
inc
scas
sahf
lahf
mov
add
ret
mov
scas
fidivrl
fdiv
xchg
xor
clc
sub
dec
mov
add
into
pop
das
scas
add
inc
repz
cmp
xchg
imulb
faddl
pop
mov
ficompl
enter
pop
push
lock
negl
in
jg
in
and
cmpsl
sbb
mov
test
nop
xlat
inc
pop
cmp
add
insl
lahf
cli
js
loopne
clc
popa
inc
inc
sahf
filds
push
mov
dec
push
sub
mov
xchg
test
jae
insb
clc
adc
outsb
bnd
jmp
add
jnp
subl
dec
test
decb
loope
cld
ds
popf
jg
push
push
shl
sbb
jno
dec
dec
movsl
mov
in
mov
lret
mov
or
cmpsl
dec
adc
cmp
icebp
dec
std
fisubs
dec
shll
adc
add
clc
jp
aaa
lock
dec
imul
fstps
pop
jne
xchg
fsubs
pop
movsb
addr16
jnp
mov
mov
out
dec
xor
mov
loop
sub
ja
xchg
fidivs
adc
add
or
or
orb
jmp
inc
aad
loopne
push
les
int
or
adc
test
and
sbb
mov
cmp
xchg
sub
daa
outsb
test
mov
out
mov
sahf
repnz
sbb
lock
xorl
test
add
insb
cmp
jne
rcrb
aad
daa
rcr
clc
mov
adc
pop
idivl
and
ss
rorb
pop
or
cltd
sub
mov
ljmp
adc
jge
roll
faddp
scas
testb
xorb
loop
xchg
sbb
fisubrl
adc
xor
adc
and
jo
int3
lcall
ds
repz
xchg
sbb
push
jmp
shr
movb
adc
popf
pop
pop
cmp
jecxz
int
cmp
shll
test
ja
lods
nop
or
push
inc
insb
fmull
add
add
shrl
or
enter
loop
mov
inc
sbb
daa
lds
mov
mov
xchg
scas
nop
iret
xchg
jle
rorl
inc
enter
pop
xor
xchg
je
and
jmp
adc
and
out
loopne
add
scas
daa
jge
jle
cmp
cmp
sarb
lock
fiaddl
xchg
or
mov
inc
aaa
icebp
xlat
std
jecxz
mov
loope
inc
jp
rcr
rolb
es
pop
xor
shlb
icebp
or
cmpb
nop
and
add
clc
adc
xor
adc
mov
xchg
adc
pop
and
pushl
pop
xor
jmp
mov
stc
jmp
test
cmpsl
add
dec
xchg
cmpsb
sub
ss
or
ret
ret
mov
xlat
es
scas
adcb
aad
dec
push
add
mov
rorb
and
test
add
shlb
loope
mov
cmp
je
lods
outsl
adc
jae
out
jnp
dec
lahf
pcmpeqw
or
andl
movsl
jl
popa
inc
sub
movsl
jnp
and
fmuls
mov
adc
push
int3
imul
fsubrs
mov
inc
lcall
fsubrl
int3
jg
or
mov
cmc
test
shl
and
pop
push
sub
sub
mov
dec
dec
ret
test
jae
rol
push
adc
pop
pop
dec
int3
xchg
loopne
add
mov
orl
addl
mov
enter
js
mov
push
cmc
pop
xor
lods
sub
ljmp
cmpsl
scas
add
xchg
adc
add
stc
xor
push
or
adc
xor
and
xor
inc
inc
in
add
inc
cmp
shlb
hlt
add
std
rorl
cmp
ja
test
inc
scas
and
jmp
add
sub
and
pop
pop
xchg
sbb
sub
cld
xor
fists
mov
js
push
fisubs
aam
or
sub
sub
adc
bnd
sbb
cmp
call
inc
lcall
lock
test
cmp
dec
fisubrs
push
lods
sbb
pop
sbb
test
cmp
add
mov
pop
push
imul
addl
push
push
shll
xor
ljmp
leave
xchg
cmp
inc
add
jmp
outsl
repnz
das
loope
cld
enter
jb
inc
inc
xorl
aaa
aas
outsl
enter
lcall
insb
rorl
cmpsl
cmpb
pop
push
loope
push
mov
out
dec
ss
loopne
and
arpl
dec
movsl
in
dec
movsl
sub
sbb
adc
mov
aad
testl
mov
dec
add
jl
test
loop
xchg
dec
jo
push
jne
xor
cmp
adc
xchg
ljmp
cmp
dec
popf
pop
push
add
adc
add
push
imul
hlt
mov
imul
popa
ljmp
hlt
sbb
iret
imulb
lock
andb
subb
and
stos
in
test
cmp
imul
movl
lahf
mov
cmp
cmp
sub
fldcw
sub
loope
loop
jg
mov
add
add
xor
rclb
cmovge
push
jmp
clc
call
adc
sub
jno
cmp
stc
sub
or
dec
sarl
and
dec
pop
loopne
xor
ljmp
aaa
or
cmpsl
inc
sbbl
lods
inc
xchg
cmp
lahf
inc
out
repz
jmp
orl
cmp
adc
les
push
add
mov
incb
adc
jecxz
cmp
decl
dec
stos
dec
out
add
loopne
mov
ljmp
add
push
int3
das
insb
js
repz
int3
sub
stos
mov
leave
testb
mov
push
insb
push
aad
xchg
add
popf
add
sub
adc
add
fwait
jo
jnp
out
or
fsubrl
push
adc
push
fsubs
insl
iret
adc
and
jle
sub
fldenv
or
lds
pop
mov
add
mov
lea
add
aad
cmp
or
incl
out
mov
push
add
sbb
popl
test
push
xor
iret
mov
movsl
pop
jae
shl
push
out
leave
jb
fidivl
cmp
inc
fcoms
enter
xor
loop
jae
repz
loope
mov
inc
arpl
cmp
push
cmp
lret
adc
inc
icebp
sub
loope
sub
sbb
ret
and
fistpll
pop
sub
lcall
hlt
mov
mov
pushl
les
je
into
dec
enter
ret
ja
adc
cwtl
add
push
ljmp
push
ljmp
push
pop
or
sarb
mov
xchg
js
or
gs
ss
adc
jae
out
pop
cmp
mov
fcoml
icebp
loope
xor
cmpl
dec
insl
aam
jle
pop
cld
andb
push
inc
adc
mov
enter
inc
pop
bound
ljmp
repnz
loopne
aam
mov
adc
stos
hlt
pop
push
sub
xchg
leave
ret
dec
mov
sbb
sbb
scas
call
fistpll
cmp
subb
inc
das
loope
loopne
mov
fstpl
jle
and
mov
inc
dec
mov
bound
cld
data16
jp
lcall
es
pop
push
mov
pushf
cltd
inc
sbb
pop
mov
aas
and
push
pusha
fistpl
cmp
mov
sub
adc
in
sbb
lcall
into
pop
push
in
testb
adc
mov
mov
sbb
add
push
push
or
push
xchg
sub
cmp
lods
mov
test
sbb
addr16
pop
cmpb
add
and
mov
mov
xchg
add
int
and
gs
push
rcll
test
sub
xlat
iret
pushf
lods
push
inc
add
pop
adc
and
adcl
ret
ret
loop
rcll
popa
xor
repnz
das
mov
pushf
sbb
cmp
test
push
aam
js
cmpsb
pop
sub
out
jle
add
add
pop
lods
stc
je
in
icebp
arpl
xchg
add
add
lret
rorb
add
or
cwtl
lahf
orl
call
adc
rcrb
ffree
mov
mov
test
pop
incl
insl
outsl
push
add
mov
les
inc
or
mov
mov
hlt
shlb
pop
adc
push
add
cs
dec
icebp
hlt
scas
out
xchg
xor
fs
cmp
fistpl
sbb
mov
cmp
cwtl
cmp
pop
jmp
fnstsw
jecxz
into
jecxz
cwtl
xorl
clc
mov
jne
fsub
sbb
mov
ja
pop
jp
pusha
inc
ret
in
inc
mov
or
sbb
mov
adc
jmp
aas
out
pop
cmp
call
and
push
inc
jnp
or
loopne
add
sub
cmp
lahf
mov
xchg
or
dec
or
xor
xor
push
sahf
push
mov
andps
jmp
sar
adc
and
xor
xchg
jae
sbb
pop
orb
xor
add
mov
lret
adc
or
xor
inc
lahf
pop
add
adc
adc
dec
inc
lds
das
in
inc
adc
and
clc
mov
js
jmp
push
nop
xchg
aas
faddl
clc
fbld
ficoms
push
adc
jo
inc
call
xchg
daa
jle
and
inc
xchg
test
mov
jo
andb
lods
or
cmp
sub
mov
ljmp
int
jne
mov
cmp
add
mov
jp
jp
jns
adc
nop
inc
fwait
cmp
loopne
add
or
lock
pusha
inc
and
inc
jp
aaa
and
filds
cmp
inc
pop
inc
sub
stos
mov
xor
and
orb
jecxz
lea
jmp
mov
dec
aad
imul
mov
aas
mov
add
rdtsc
xchg
gs
xor
movsl
lret
xchg
push
pushf
inc
shr
punpcklwd
pushf
loope
add
sub
sbb
inc
ret
aaa
clc
or
add
push
pusha
add
cmpsl
in
cltd
test
insb
flds
cmc
lret
add
xchg
jle
pop
jb
jge
ljmp
movsl
test
in
out
xchg
sbb
cmp
sub
daa
adc
sbb
pop
and
roll
push
ret
sbb
mov
es
sub
pushf
cmp
adc
pushf
jb
jb
add
or
jle
insl
loop
mov
xor
dec
mov
jg
lock
add
add
out
imul
popf
dec
pushf
fcoml
dec
gs
mov
ljmp
push
mov
out
loopne
sub
out
inc
add
mov
mov
movsl
scas
push
or
add
movsl
xchg
rolb
sub
in
push
js
pop
sbb
dec
test
stc
sbb
jl,pn
jle
add
sbb
rolb
pusha
xor
sahf
or
movsl
xchg
inc
dec
dec
cltd
addb
push
loop
cmp
int3
sub
pop
loop
insb
mov
call
and
in
add
or
pusha
dec
add
xchg
ret
shlb
lret
mov
call
aas
mov
push
jmp
pop
popa
call
aam
mov
call
ss
lock
rclb
fidivl
out
out
loopne
shr
mov
push
inc
and
sbb
lods
cltd
aad
ret
repz
push
adc
inc
xchg
pop
fadd
and
sbb
lret
clc
cmp
sub
rcr
call
cwtl
in
add
mov
jp
mov
xchg
iret
push
xor
and
sarb
mov
dec
movsl
and
pop
xchg
inc
adc
push
ljmp
cmc
ret
call
mov
xchg
sbb
pmaddwd
push
movb
dec
call
fdiv
adc
add
shll
lahf
cmpsl
daa
and
ret
and
sbbl
and
dec
mov
xor
std
out
jg
cld
mov
cmpsl
dec
shll
jecxz
out
cmp
lods
loope
jae
fsubrs
sbb
cli
or
neg
dec
or
ljmp
addb
call
dec
xor
sbb
inc
dec
popl
jmp
lock
push
test
or
mov
je
cmc
mov
sub
rclb
ret
add
push
lods
cld
pop
adc
xor
or
xor
mov
jae
push
jl
sbb
daa
ljmp
test
movsb
push
or
ret
xrelease
je
sbb
adc
inc
xchg
out
push
lea
movsb
push
pushf
push
push
jnp
inc
xlat
pop
adc
xorb
jle
jo
or
jb
fiaddl
adcb
fs
jb
in
push
mov
xchg
lods
fisubl
or
into
fsubrs
or
dec
cwtl
cwtl
xor
fstpl
pop
test
inc
loope
test
pop
xor
sbb
ret
mov
sub
pop
inc
xor
xor
cwtl
dec
in
je
jbe
jmp
mov
pusha
sbb
je
and
xchg
pop
addr16
add
mov
lods
je
push
jmp
stos
repnz
jmp
add
outsl
jmp
pop
hlt
rorb
adc
cli
out
xchg
ja
adc
cwtl
pop
and
adc
mov
pop
jg
dec
dec
sbb
scas
out
andb
fdivrs
mov
xor
lahf
and
jo
sahf
lods
inc
clc
xchg
push
js
cmp
rolb
jmp
xchg
jmp
test
repz
jnp,pn
in
cmpsl
adc
mov
sub
and
cmp
pusha
popf
das
jg
in
dec
ja
frstor
rorb
in
cli
es
push
sbb
sub
add
pop
imul
or
adc
call
jmp
dec
push
clc
dec
inc
pop
xor
sbbl
jbe
or
push
andb
xor
jecxz
aam
clc
jbe
js
xor
data16
addl
mov
and
xchg
jns
into
xchg
mov
hlt
pop
ja
cmp
inc
and
repz
adc
shll
sbb
add
inc
mov
cmpb
sbb
neg
push
sbb
mov
rcrl
fstl
sub
scas
into
push
inc
xlat
rolb
cmpsl
sbb
and
lock
xlat
pop
fs
sbb
imul
adc
fbld
push
stos
add
rclb
dec
mov
loope
adc
and
div
push
ljmp
jns
insl
neg
fimull
mov
sbb
sub
cmp
cmp
mov
enter
ljmp
insb
shll
dec
inc
fmul
fdivs
xchg
shrl
lahf
mov
push
pop
cli
inc
jmp
inc
adc
lahf
xchg
pop
lahf
pop
or
sbb
push
mov
jne
add
pop
mov
add
aam
xor
jp
pop
xchg
inc
mov
mov
pusha
inc
add
and
xchg
js
arpl
in
mov
outsl
or
inc
mov
pop
mov
mov
aas
fstp
sbb
jecxz
mov
lock
xlat
mov
pop
add
xor
dec
fcoml
outsl
imul
ljmp
loopne
lea
push
push
bound
cld
push
call
movsb
out
mov
sbb
jo
push
sbb
mov
sbb
das
xchg
iret
mov
ret
sub
mov
and
cmp
and
cwtl
pop
inc
adc
lock
out
push
add
sbb
mov
fs
shll
ret
jge
icebp
mov
int
and
push
lcall
lahf
inc
cmp
les
inc
aas
fs
dec
push
fsubrs
jae
lret
movsb
je
daa
cltd
or
nop
stc
mov
rcll
adc
or
mov
popa
movl
mov
pop
mov
rcr
pop
and
lret
sar
push
jl
int
inc
push
mov
add
jmp
inc
add
sbb
and
inc
negl
mov
addr16
mov
sbb
add
ja
fidivrs
mov
xchg
push
in
cli
adc
xor
icebp
je
add
xor
sub
cmp
lret
jbe
xchg
lock
sub
xor
and
sahf
xchg
mov
lea
imul
call
mov
sbb
dec
xor
movsb
add
testl
insb
sbb
lods
xor
aad
dec
loop
xor
inc
bound
xor
push
icebp
xor
rcrl
xor
lods
pushf
inc
or
cmc
cmpsb
into
lea
ret
sbb
or
sub
xor
inc
and
cmp
mov
daa
or
fadds
mov
pushf
dec
sbb
paddsw
xchg
inc
insb
mov
lahf
sbb
in
xor
outsb
sbb
test
out
gs
mov
icebp
pop
cmp
les
test
cltd
sbb
in
in
cmc
mov
push
and
sbb
and
or
aam
sti
fiadds
adc
mov
sub
mov
mov
jp
mov
test
add
pop
and
push
pop
add
and
sub
orb
mov
jge
add
out
aam
rcrb
jns
not
outsb
sbb
icebp
or
ficoms
adc
call
push
add
stos
inc
sbb
and
push
or
dec
jmp
mov
pop
xor
add
mov
push
testl
jbe
jmp
push
inc
dec
and
and
dec
push
sub
pushf
lock
imul
outsl
push
mov
je
xor
xrelease
pop
adc
jb
in
inc
mov
inc
push
out
dec
push
cmc
int3
es
mov
arpl
mov
adc
rclb
adc
jo
jge
movsb
push
push
lock
or
lret
push
hlt
pop
xchg
push
aas
flds
add
jmp
mov
jle
hlt
mov
inc
lock
addb
lock
mov
shrb
push
jp
dec
lock
lahf
mov
xchg
push
jmp
xor
jecxz
xchg
mov
mov
rorb
inc
ret
add
pop
mov
mov
mov
push
test
sbb
out
or
mov
push
daa
cltd
add
mov
and
in
js
jl
dec
data16
fwait
mov
lock
cwtl
fisttpll
add
lock
cmp
fsub
jl
lock
aam
fs
inc
ljmp
xor
mov
mov
pop
and
mov
js
jmp
nop
cmp
mov
and
push
xlat
adc
add
push
shlb
jno
les
xor
mov
inc
add
and
cmp
addr16
add
pusha
outsl
push
mov
sahf
jbe
sub
adc
test
stos
movl
mov
and
shlb
mov
mov
scas
add
mov
js
cmpsl
jae
fdivs
cmpsl
scas
ja
popa
sub
popa
cmp
xor
popa
cld
call
sahf
hlt
cwtl
inc
pushf
push
lret
scas
cld
movsl
stos
pop
mov
add
fucomp
sbb
fmuls
xchg
push
lods
fldt
xchg
add
jp
loop
sbb
imul
sub
pop
test
popa
int3
loope
pushf
hlt
popf
cltd
add
mov
mov
mov
shlb
cs
dec
shll
inc
xlat
sbb
jl
inc
rol
push
daa
xchg
sub
push
insb
js
dec
stos
mov
adc
sti
pop
mov
lds
mov
enter
and
cli
repnz
subl
inc
add
or
add
add
and
jne
push
jmp
scas
jae
mov
cmp
mov
mov
push
mov
daa
mov
in
dec
cld
lods
and
mov
sub
jecxz
inc
jg
mov
jb
loope
inc
mov
or
sub
push
mov
xchg
cwtl
inc
xor
je
lods
daa
addl
pop
xlat
jmp
sbb
xor
jp
andl
dec
call
and
fwait
sub
sbb
addr16
imul
inc
push
out
shrb
and
sub
pushf
jo
push
sarl
and
cmp
je
jb
xchg
add
dec
push
mov
aam
hlt
pop
imul
jecxz
inc
xchg
mov
fsubrp
pop
inc
rcrl
add
push
and
cli
push
rcl
flds
push
and
inc
lods
adc
int3
add
stos
push
push
cld
jmp
or
push
add
jmp
or
mov
cmpsb
add
loope
xchg
or
test
mov
cwtl
shrl
test
ljmp
movl
mov
stos
sbb
out
or
mov
add
subl
pop
sub
jo
or
in
jmp
push
mov
ror
jp
mov
pop
mov
xor
pop
fstpt
negl
adc
inc
dec
dec
push
pop
fcmovu
cmp
adc
mov
add
or
or
rclb
cld
pop
loopne
push
testl
mov
xchg
int3
or
adc
scas
out
push
push
test
cmovp
sub
dec
in
fsubs
sbb
xchg
add
mov
cmp
jbe
lds
push
sub
inc
test
add
inc
and
xor
dec
push
push
push
or
es
shrb
lret
add
jg
dec
cli
sub
xor
push
cmpsb
fcoms
inc
adc
jbe
clc
fiadds
repnz
or
hlt
outsl
xchg
lods
cli
or
xor
mov
sti
xlat
fisttps
aaa
mov
aam
test
sub
xorl
cmpsb
lahf
xchg
aam
enter
cld
mov
call
les
add
adc
inc
jmp
insl
and
fistpl
sar
and
rcl
dec
in
and
loope
jo
shl
bound
in
ss
shll
add
pusha
movsl
pop
inc
xor
or
push
cwtl
mov
mov
push
sbb
add
cs
xchg
and
lock
movsl
and
je
dec
dec
add
xchg
adc
push
add
sbb
cmp
mov
ljmp
add
pop
sbb
es
or
jecxz
cwtl
mov
adc
adc
xchg
sbb
daa
jae
or
out
or
mov
mov
ret
data16
mov
mov
negl
inc
push
daa
shlb
jg
push
mov
and
roll
or
aam
ds
sub
inc
cmp
or
dec
adc
and
dec
ret
dec
adcb
add
repnz
shlb
cmp
add
bound
sahf
adc
arpl
add
sub
fdivs
negl
aaa
add
xchg
cli
push
popa
or
mov
stos
xchg
dec
cld
adc
insb
stc
dec
outsb
push
dec
insb
sub
sub
push
insl
add
jp
fmull
ss
sarb
pushf
shlb
rol
push
mov
inc
xchg
mov
jmp
xchg
lods
xchg
mov
xor
mov
sub
js
mov
test
jg
xor
add
imul
insb
add
mov
and
jns
cmpsb
xchg
xor
cmpsb
xlat
inc
xchg
sub
jmp
lcall
aas
adc
test
pop
outsb
xor
xor
repz
sti
pop
push
imul
push
mov
enter
and
dec
lahf
push
fisubl
adc
mov
jg
xchg
sub
fwait
mov
loope
xchg
or
fcoms
or
lock
cmp
adc
fsubrs
or
sbb
out
rorl
xchg
add
sub
mov
push
and
sub
add
and
jno
ffreep
xlat
mov
scas
ret
lret
cmp
add
push
xor
mov
test
fs
rolb
ds
pushf
lahf
aam
insl
push
inc
add
movb
ret
jge,pt
loop
jmp
adc
repnz
decl
mov
push
jnp
pop
lods
inc
pop
jle
mov
adcb
add
jle
adc
daa
dec
dec
sub
mov
dec
pop
ljmp
or
dec
inc
fnstcw
inc
testb
jmp
rorl
testl
and
mov
inc
jge
dec
test
or
pop
push
add
xor
cld
aam
sub
sbb
mov
add
loopne
jge
fcom
or
ja
add
aad
test
hlt
dec
call
xor
xchg
xchg
cmp
jns
add
inc
test
and
add
aam
fldenv
mov
xchg
notl
pop
jmp
vshufps
inc
nop
mov
js
dec
xor
xor
aam
mov
int
jle
fadds
xchg
and
adc
adc
cwtl
adc
or
fistl
je
scas
enter
sbb
jo
push
and
iret
dec
push
add
mov
mov
cltd
jecxz
xchg
push
xorb
sub
push
add
inc
test
mov
in
fadds
pusha
loopnew
fbld
or
xlat
sub
lea
push
jmp
lea
push
add
lret
xor
inc
iret
lods
add
mov
pop
lcall
add
cld
dec
push
aaa
xlat
mov
cmp
push
add
jns
into
mov
dec
xchg
fdivrs
jmp
sarb
clc
or
and
fbstp
lcall
mov
pop
or
loopne
dec
shlb
and
cmp
and
xor
add
add
cmp
addl
mov
sub
test
and
out
sbb
xor
sub
xchg
loopne
sbb
mov
add
jae
cmpsb
cmp
inc
pop
add
push
cltd
or
and
and
rclb
add
pop
je
daa
dec
push
jae
in
loop
inc
inc
mov
or
stos
or
jo
sub
and
popl
push
repnz
outsb
in
movsl
loope
test
mov
rorl
mov
loop
sub
sub
std
imul
xlat
ret
cs
xlat
test
js
arpl
push
ds
pop
or
or
and
mov
fcoml
mov
inc
test
and
jmp
mov
adc
test
mov
rclb
dec
add
mov
aaa
and
pusha
jo
testb
inc
lock
lret
inc
ret
xor
mov
jae
inc
ja
sbb
clc
add
cmpsl
das
icebp
ss
xchg
cmpsb
and
add
sahf
adc
inc
jp
pop
push
inc
and
or
in
push
lock
pop
das
sbb
cwtl
sub
xor
jno
add
inc
subb
adc
xchg
sahf
lea
dec
int
push
mov
hlt
sarl
cmp
mov
filds
adc
or
addr16
loop
push
pop
ret
pushl
add
outsl
jecxz
push
jb
pop
cmp
jl
nop
loopne
xorl
stc
cli
and
pop
inc
mov
push
push
aad
inc
call
sub
out
movsb
push
push
push
jmp
lods
sti
aam
mov
mov
or
pop
icebp
into
test
hlt
jge
pop
mov
xchg
ss
fimull
xor
in
and
pop
mov
jo
add
inc
dec
xor
cld
clc
add
and
ret
sbb
fsqrt
xlat
lret
dec
test
scas
jne
adc
cmp
cmp
sbb
or
pmaddwd
pop
xchg
xor
and
add
testl
sbb
ret
imul
cld
push
xor
out
pop
mov
sub
lods
ljmp
fldl
ret
or
adc
negl
lods
inc
cmp
xchg
out
dec
push
popf
add
ret
or
sbb
ror
push
adc
ja
insl
out
mov
and
xor
shrb
lock
mov
insl
mov
jo
push
and
and
pop
adc
sbb
enter
sbb
adc
add
ret
inc
fcmovu
jecxz
or
cmp
pop
xor
cmp
loopne
inc
sbbb
xchg
rorb
pop
jp
push
fsubrl
pop
in
cmpsl
addr16
cli
or
sub
cmp
mov
loopne
xor
sbb
iret
inc
js
loopne
lods
lahf
sbb
pop
pop
aaa
in
inc
cmp
testl
pop
inc
and
lods
jecxz
pushf
pop
mov
cmp
adc
test
or
jg
fcoml
xor
pop
fsubrl
fmull
jno
popa
xchg
sbb
add
shll
insb
or
sub
adc
jo
ret
push
mov
jmp
pop
xchg
stc
mov
push
jnp
xor
movl
jp
cmp
xlat
je
add
pop
push
jge
les
repnz
or
clc
pop
into
adc
test
sbb
inc
jo
sub
outsl
out
clc
jnp
mov
pop
loopne
call
mov
dec
jbe
out
add
sub
into
add
or
bound
mov
push
inc
add
ja
xchg
cld
dec
das
mov
jo
and
insb
push
insl
dec
lock
inc
add
pop
pop
shr
cwtl
xchg
inc
xor
aaa
add
lods
testb
jne
dec
and
mov
jle
call
inc
or
and
add
mov
fiadds
rolb
stc
pop
daa
mov
sub
lret
loopne
scas
mov
stos
jno
outsl
icebp
dec
lock
fidivl
sbb
pop
push
inc
xchg
gs
cltd
jns
pop
mov
and
aam
cmp
outsb
xor
addr16
negl
and
and
sub
jl
pop
mov
inc
in
push
test
call
mov
jmp
mov
inc
push
xchg
xor
movsl
push
mov
push
jno
fisubs
or
push
lods
pop
fisubl
dec
xchg
pop
push
push
fcmovu
test
or
dec
call
ss
add
add
jmp
pop
push
ret
sbb
lcall
iret
aas
jmp
or
dec
imul
push
adc
xchg
mov
or
jl
addl
sub
lock
xchg
add
and
fiaddl
or
lock
xor
mov
adc
inc
mov
std
add
mov
ffreep
dec
pushf
pop
xchg
xchg
sub
clc
popa
mov
je
push
hlt
insb
in
stos
int3
stos
adc
lods
in
in
cs
add
out
mov
out
add
pop
dec
add
xor
test
mov
shll
outsb
pop
adc
sbb
xchg
fadds
outsl
add
xchg
in
jg
xor
sub
inc
and
dec
notl
movsl
lcall
js
pop
sbb
mov
jecxz
dec
notb
orl
push
xlat
push
sbb
mov
mov
jp
icebp
repz
xlat
push
lahf
out
push
push
push
ljmp
xchg
mov
push
scas
inc
ret
pusha
stc
pop
dec
lods
and
add
pop
cmpb
cmp
mov
and
inc
cmpsl
lea
in
loope
pushl
lods
or
loopne
xor
mov
fistpl
sub
xor
add
add
add
mov
lret
mov
xchg
or
repnz
mov
push
jle
rcl
dec
in
call
mov
xor
stos
push
loope
imul
inc
mov
xor
dec
popa
aaa
lock
jmp
xchg
addb
mov
jmp
xor
lret
xchg
push
push
movsb
and
inc
mov
inc
cmp
je
stos
ss
fwait
push
ss
dec
push
sbb
lret
jo
xor
adc
subl
popa
add
xor
sahf
jmp
xor
jl
sub
or
cmp
hlt
push
or
sbb
movl
int
xchg
adc
pop
sub
dec
mov
cmp
fistl
add
icebp
and
test
daa
mov
mov
add
cmp
outsb
inc
inc
pop
and
jae
xor
add
add
pop
inc
mov
sarb
jnp
sbb
dec
jae
sub
pop
inc
and
add
stc
les
mov
mull
fimull
push
cs
add
test
pop
rcrb
and
and
sub
add
inc
clc
test
xor
pusha
adc
repz
or
xor
mov
pop
xor
sbb
or
movsb
jmp
shr
call
jo
and
psraw
pop
lock
popa
dec
js
or
clc
test
jno
bound
inc
and
pop
lds
cmc
sub
vpand
or
ds
add
nop
testb
icebp
jp
pop
inc
xor
xchg
fwait
sub
inc
clc
dec
jg
jae
clc
xchg
xor
ljmp
stos
fstpt
fsubrl
xchg
or
sarl
jnp
inc
mov
add
cmpl
test
sub
push
sbb
or
int
xchg
inc
popa
and
scas
nop
adc
adc
or
adc
aas
fcoms
add
push
call
sbb
stos
sbb
adc
xor
sub
inc
hlt
stos
mov
or
add
ret
inc
arpl
dec
clc
adc
add
xor
fistps
jne
push
or
fbstp
inc
fsubs
add
cld
mov
lds
insb
test
or
ss
cmc
jne
test
lock
and
lea
pop
pop
sbb
push
xor
push
push
andb
je
and
clc
das
ret
dec
inc
outsb
repz
pop
pop
mov
add
out
mov
mov
mov
out
mov
and
push
sbb
push
push
in
insb
adc
push
jle
lock
fcmovbe
push
xor
je
or
repnz
pusha
cmc
push
in
jg
icebp
stos
clc
add
push
inc
cs
adc
mulb
je
in
add
ret
xor
imul
push
mov
cmpsb
pop
jmp
out
jge
shll
mov
cs
push
inc
add
addb
xor
and
test
add
repnz
loop
add
mov
xchg
fimull
cmpsb
and
xchg
test
inc
out
test
inc
ret
imul
add
and
mov
xor
pop
sbb
repz
scas
add
clc
jmp
js
dec
cmp
mov
test
mov
addb
push
add
cwtl
shl
sbb
dec
xor
xor
push
mov
add
sbb
xor
in
add
add
mov
mov
jo
inc
dec
rorb
mov
icebp
jl
and
xchg
gs
cmp
adc
popa
adc
sbb
data16
inc
popf
cs
mov
subb
xor
dec
loopne
aad
inc
mov
imul
pop
stos
and
setno
sbb
jae
dec
stos
cs
cvtps2pd
or
jmp
fistps
jmp
and
push
call
sub
in
add
icebp
sbb
xor
add
inc
mov
ss
cs
dec
out
shr
cmp
jl
cmp
mov
dec
sub
dec
ret
or
lret
or
orb
push
adc
push
stos
or
jo
adc
mov
stos
sub
aas
sbb
daa
cmp
stos
adc
cmc
xlat
cmp
imul
ror
dec
sub
and
mov
aad
leave
fcomps
lret
stos
jg
mov
ss
out
in
cmp
call
and
fstpt
enter
mov
xchg
and
or
fxch
sub
rcr
push
test
inc
push
imul
mov
jmp
les
xor
sbb
mov
or
cmp
jbe
adc
fwait
cld
pop
fs
aam
cld
in
test
aaa
das
call
inc
mov
sbb
pop
dec
xchg
adcl
sbb
dec
mov
adcb
pop
sti
sbb
and
sub
mov
xchg
adcl
and
dec
mov
stc
inc
xchg
add
and
fstl
jle
enter
inc
or
xchg
inc
cmp
call
loope
and
jge
js
test
jmp
add
popa
imul
fadds
add
loop
dec
pop
push
xlat
imul
pushl
jmp
cmp
ja
or
cmp
test
mov
xor
xor
dec
arpl
mov
pop
icebp
arpl
outsl
bnd
stos
xchg
xor
pushf
call
dec
lahf
shrl
stos
mulb
lods
movb
das
jbe
sub
xchg
rclb
and
dec
xchg
or
add
sbbl
rcl
push
push
jnp
sub
xor
sbb
rol
test
sub
cmp
or
mov
push
incb
or
cmp
xchg
call
jp
outsl
aaa
lcall
mov
jb
lcall
aad
pop
add
arpl
ret
pop
mov
daa
mov
lock
inc
stos
push
mov
dec
clc
sub
push
and
adc
or
shlb
push
jne
xor
inc
jmp
ret
add
add
test
loopne
cltd
repz
lods
adcl
jne
in
pop
test
and
xor
cli
daa
cmp
pop
cmp
shll
cmp
pop
inc
and
adc
outsl
xlat
outsl
test
dec
sub
jno
addb
sbb
icebp
jge
xchg
ficomps
mov
testl
cmp
lds
adc
mov
and
test
lahf
sbb
arpl
ja
call
subb
lock
mov
or
test
imul
jg
fcmovne
mov
test
icebp
push
out
ret
enter
jae
mov
lret
inc
xor
loope
pop
sti
push
mov
push
mov
dec
xor
and
jle
jecxz
add
in
jo
xchg
mov
jbe
or
dec
cmpsb
test
mov
data16
outsl
loopne
mov
out
mov
sbb
mov
dec
xor
mov
rcrb
mov
xchg
add
inc
imulb
jecxz
aaa
cmc
repz
jmp
push
test
sbb
out
je
mov
aaa
adc
or
das
pop
fwait
or
vpaddsb
or
cmp
dec
xor
cld
mov
xor
dec
cltd
sub
pop
subl
stc
popa
nop
push
jp
call
out
icebp
out
pushf
jnp
scas
sarb
add
xor
sbb
outsl
imul
xchg
jmp
pop
dec
call
dec
test
add
and
sub
lea
movsb
add
cmp
stc
sbb
jle
add
fildl
ret
jge
mov
dec
in
cmpsb
das
mov
fsubp
or
jp
xchg
pusha
and
xchg
sub
add
inc
adcb
adc
jne
and
outsl
or
jg
jmp
scas
dec
ljmp
nop
mov
les
inc
xchg
mov
loope
xchg
sarb
les
ffreep
in
nop
jbe
imul
add
orl
inc
outsl
mov
cwtl
mov
inc
pusha
lea
repz
dec
pop
jmp
cmc
dec
or
mov
bound
lock
pcmpeqw
fbstp
mov
push
and
mov
scas
sar
fsts
pop
cmovns
push
pop
push
pop
fidivl
xor
sub
ret
xor
pop
push
movl
inc
cmp
pop
ret
mov
xchg
xchg
les
int3
mov
push
xchg
lock
shrb
pop
push
ljmp
push
in
les
mov
les
insb
sbb
push
lahf
int3
movsl
add
or
mov
cmc
mov
in
test
imul
ss
adc
xorb
ja
loope
fstl
jge
loop
lds
clc
in
lret
adc
xor
pop
movsb
lahf
xchg
daa
xor
add
and
pop
lcall
inc
and
iret
push
mov
rolb
fcoms
iret
add
xor
int3
ret
js
fisttps
lret
and
aas
and
xchg
pushf
std
push
inc
sbb
and
outsl
loopne
sub
mov
pop
jl
ljmp
rcll
xchg
mov
ret
movsl
sbbl
test
aas
xchg
mov
cmp
sbb
mov
loopne
outsb
bound
outsl
lods
and
jmp
cmc
pusha
sbb
clc
test
xchg
je
pop
test
adc
mov
sbb
loopne
popf
frstor
inc
loop
stc
bound
push
inc
sub
adc
dec
insl
mov
cmp
test
pop
mov
jo
clc
fwait
mov
xchg
jg
lock
insl
sub
dec
and
ds
mov
iret
mov
sub
std
push
cmp
pop
jecxz
daa
div
test
xor
push
push
mov
stos
add
lcall
jnp
mov
push
add
push
adcb
mov
add
adcl
shrl
jbe
lcall
ficomps
push
cld
sbb
test
das
xlat
ret
test
daa
jno
or
sbb
pop
fistpl
stos
pop
jno
ja
xchg
xor
popf
push
or
and
insb
mov
bts
or
adc
mov
xor
lds
xor
incl
mov
sub
mov
fildl
mov
adc
stos
jecxz
push
and
mov
mov
cld
fisttpll
test
add
adc
sbb
iret
mov
in
jns
inc
inc
add
adc
inc
cmp
sahf
mov
push
test
xor
push
lock
dec
fsubs
js
jae
or
adc
cmp
dec
gs
dec
inc
push
fdivr
push
repnz
push
out
xor
add
or
addb
dec
xorl
int
cmp
ret
mov
mov
in
fists
mov
shlb
sub
fildll
add
into
add
enter
dec
jp
icebp
pop
enter
test
lcall
add
cmp
xor
cwtl
add
lock
insb
int
test
add
mov
push
enter
or
mov
inc
pop
enter
inc
mov
adc
jb
and
or
shl
pop
psubsb
test
xor
mov
push
adc
xor
pop
popa
cmp
push
sti
sti
lock
inc
and
lea
cmp
lahf
hlt
xorb
ficomps
aaa
out
push
fwait
xor
call
mov
adc
xor
negl
dec
scas
jo
and
loopne
jp
popa
xchg
cmpsl
flds
call
or
lret
stos
test
cmp
mov
jbe
pop
cmp
push
sub
shl
push
mov
aad
sarb
out
mov
or
adc
test
ds
inc
pusha
inc
test
mov
cltd
loop
push
sarl
sub
add
xor
and
movsb
cmp
sbb
sub
push
call
xor
out
dec
push
inc
addl
int
lcall
push
rolb
push
das
jne
jl
inc
add
xor
and
rorl
stc
orb
or
or
jecxz
xchg
fcomip
or
pop
jmp
inc
inc
cmpsb
out
xor
inc
or
rolb
and
or
int3
cmp
les
popa
adc
mov
stos
dec
and
bound
mov
ss
mov
fwait
mov
or
push
sbb
pop
inc
mov
cld
sbb
add
mov
test
arpl
push
imul
add
mov
stos
data16
adc
xor
ds
pusha
and
add
lods
jmp
mov
stos
stos
enter
sbb
and
push
mov
jno
mov
push
ret
lods
sbbl
or
pop
ret
inc
or
or
push
out
ja
dec
js
cmp
adc
popa
xor
jae
mul
rorl
push
push
enter
mov
je
in
adc
adc
mov
pop
mov
xor
cmpsl
add
jnp
cmp
xor
add
sbb
and
aas
mov
pop
xchg
mov
xchg
cmpb
adc
mov
xchg
jge
cmp
cli
fwait
push
cmp
pop
add
inc
jnp
add
and
cs
sub
cmp
adc
dec
enter
mov
es
push
fwait
popa
dec
cmp
or
shlb
xchg
scas
aas
inc
sbb
sub
jl
push
inc
or
mov
orl
push
inc
mov
or
aaa
int
sbb
in
les
fidivl
xor
shrb
loop
cmp
dec
out
push
pop
lods
push
ret
xchg
add
add
addr16
enter
rcrb
add
push
ror
lret
nop
les
mov
mov
xor
jecxz
xchg
scas
mov
cld
mov
add
pop
push
push
stos
call
shr
gs
jmp
inc
inc
inc
test
add
scas
cmpsb
leave
lock
or
push
xor
popf
call
loopne
outsb
orb
pop
xchg
mov
fbstp
test
int3
repz
adc
dec
mov
sahf
push
fnstenv
das
or
mull
and
popa
and
adc
add
jnp
xlat
es
sbb
and
and
adc
mov
das
insb
and
adc
sbb
sbbl
or
add
inc
mov
or
enter
gs
sbb
incb
aas
in
int
and
dec
fnstcw
test
sbb
jbe
push
jo
sub
je
rol
push
pop
out
cmp
fsubrs
loopne
cmp
pop
jb
inc
test
popa
mov
inc
adc
sbb
inc
or
mov
mov
ja
mov
sbb
mov
shrl
push
adc
jl
jne
jecxz
xor
cld
js
fiadds
out
and
and
ret
imul
out
mov
cli
xchg
fbstp
or
loopne
push
mov
out
jne
testl
lods
mov
sbb
or
pop
cwtl
add
dec
adc
test
sbb
jp
mov
ja
pop
aam
add
xor
jmp
mov
cmp
mov
sbb
push
inc
xor
or
push
add
pop
rolb
jo
mov
movsl
pop
dec
and
mov
nop
cmp
mov
add
lods
out
pop
mov
mov
ret
add
cwtl
inc
loope
fstpt
sbb
sub
loop
arpl
data16
mov
sub
mov
pop
aad
cltd
lcall
adc
test
fs
bound
adc
daa
adc
std
rorb
lods
pop
cmp
fdiv
adc
lcall
sahf
cmp
push
daa
pop
ja
lds
xor
inc
pop
lods
nop
mov
mov
outsl
outsb
fmuls
jl
cmp
mov
jmp
mov
mov
xor
sub
and
je
and
shrb
es
stos
loop
inc
cmp
adc
sub
mov
xor
xchg
fcoms
lods
sub
or
dec
gs
jb
jl
or
fldt
icebp
sbb
mov
test
or
add
test
and
lahf
inc
pop
xchg
loopne
pop
jo
lret
xchg
mov
add
mov
cltd
mov
add
mov
mov
xor
movsl
jne
imul
mov
xor
fcoms
mov
popl
popf
inc
loope
adc
push
cltd
or
add
push
cmp
or
sub
rcrb
loopne
inc
push
mov
pop
mov
sub
push
mov
lahf
in
loopne
sub
outsb
aaa
out
jne
fsubrs
cwtl
or
jp
imul
inc
test
push
jne
push
mov
inc
stos
call
mov
xchg
and
or
and
pxor
cmpl
mov
cmp
mov
xor
push
pop
cmp
ret
sub
mov
dec
arpl
ljmp
lods
inc
stos
sub
outsb
sbb
lock
jp
sub
dec
sbb
fistpl
add
or
aaa
outsl
pop
add
dec
cmp
pop
mov
imul
mov
jl
sbb
ret
add
inc
sub
mov
inc
dec
dec
jno,pt
or
rcl
popa
icebp
and
sub
outsl
mov
pop
js
jge
add
cld
mov
push
rclb
or
dec
outsb
out
cmp
xchg
scas
sub
dec
addl
repnz
es
sbb
or
or
jge
or
or
adc
jg
fxtract
lock
cs
lods
icebp
movsl
xor
and
inc
dec
and
pop
jle
fdivl
or
pop
ror
cli
and
fcoms
inc
push
dec
imul
clc
das
repnz
jg
push
inc
imul
stos
dec
dec
cmp
call
dec
popf
out
and
xchg
outsb
mov
jb
fmull
adcl
and
sbb
rcr
imul
addl
mov
mov
cmp
jae
idiv
pop
and
add
pop
fs
popf
pop
push
adc
xor
pop
sbb
das
jge
js
negl
xchg
subl
sub
mov
jp
push
xorb
aad
sbb
sub
push
push
jns
xchg
mov
icebp
or
jg
mov
addb
adc
inc
rol
in
adc
lock
imul
out
ret
sahf
in
sub
pop
jg
mov
and
dec
insb
popa
add
or
rol
inc
and
sbb
xchg
mov
and
adc
aam
inc
ljmp
jecxz
pop
or
shrb
aam
or
jne
loopne
mov
and
mov
dec
loop
xor
aad
pop
pop
adc
nop
js
test
filds
add
lcall
test
adc
daa
jmp
dec
pop
mov
rcr
shll
add
clc
mov
sti
sbb
and
pusha
xchg
or
in
das
loopne
call
dec
or
adcl
cli
sub
lock
cmp
js
add
xchg
fisubl
mov
leave
pop
pop
xor
ljmp
push
out
frstor
mov
or
and
or
xchg
dec
fldenv
rorb
sbb
or
add
push
sbb
orb
rolb
lea
sbb
xlat
rolb
mov
or
xor
lret
idivl
and
pop
jmp
lahf
dec
cmpsl
and
rorl
inc
cmp
add
add
add
jecxz
fwait
test
jns
mov
fnstenv
and
cmp
sbb
imull
daa
pushf
daa
les
add
push
test
sub
inc
adc
push
pop
dec
iret
sbb
rolb
add
pusha
mov
pop
movsl
ret
in
and
sbb
pop
gs
xchg
and
and
xchg
fcmovu
pop
out
cmp
lret
sbb
scas
jl
dec
mov
adc
or
add
les
lcall
pusha
in
add
mov
jno
sbb
out
test
or
ficoml
mov
cwtl
push
cli
fildl
adc
push
push
cmp
pop
push
dec
hlt
call
jae
inc
pusha
es
movsb
adc
sbb
inc
mov
clc
adc
in
dec
clc
add
loope
dec
lods
or
iret
xor
mov
ror
clc
adc
cmpsb
pusha
rorb
push
fidivrs
and
inc
cwtl
inc
subb
dec
jmp
adc
lods
add
pop
je
dec
or
add
xorb
fs
and
shr
adc
jnp
xor
lods
dec
cmpl
fs
aam
aam
push
dec
js
stc
fsubs
and
loop
aad
arpl
mov
or
pop
push
push
js
popl
add
pushl
or
mov
fstps
lea
pop
add
ss
sub
mov
dec
sbb
test
repz
mov
jp
pop
in
sub
xor
test
mov
sub
adcb
rcl
inc
push
test
sbb
push
pop
dec
lahf
das
les
jecxz
push
insl
pusha
mov
in
aaa
jmp
lock
out
jbe
cmp
inc
jecxz
divl
insb
push
es
sbb
adc
xor
daa
mov
lds
mov
adc
sub
add
orb
inc
pcmpgtb
and
mov
push
sub
sub
les
xchg
loopne
push
fnsave
lret
xchg
adc
or
mov
xor
push
sub
loop
popa
add
ret
xorl
icebp
mov
inc
push
leave
dec
xor
subl
pop
mov
addr16
push
repz
fs
add
mov
mov
pushf
xchg
add
ret
mull
jno
sub
loop
jo
sbb
iret
inc
or
mov
add
sbb
sbb
adcb
repnz
shlb
inc
add
and
sbb
mov
xadd
push
xor
mov
and
out
jnp
push
dec
test
xchg
xchg
jne
dec
repz
add
fiadds
pop
icebp
daa
daa
jno
sub
sbb
test
xor
cmp
adc
popf
test
xchg
sub
mov
test
pop
adc
add
xor
sarb
stc
sbb
pop
pop
xor
mov
fldl
adc
inc
scas
mov
mov
sbb
cmp
lds
mov
dec
add
sub
push
addl
inc
fimuls
mov
lods
adc
in
notb
or
test
lods
in
mov
outsl
lods
mov
push
pop
fs
sub
pop
loope
sub
mov
ret
jp
sub
sahf
mov
test
daa
push
lret
sahf
add
ret
in
add
push
xlat
lcall
cld
adc
filds
push
sarb
add
xchg
inc
mov
stc
pop
popf
adc
clc
adc
jns
xchg
or
add
add
mov
sbbb
jno
fisubrs
or
enter
ss
pop
mov
jmp
gs
lret
adc
lods
add
mov
dec
int3
popa
mov
pop
out
cmp
arpl
iret
imulb
mov
jae
pop
lret
mov
mov
mov
jg
jnp
clc
shrl
or
or
int
pusha
outsl
cs
fmull
pop
pop
xchg
outsb
cmp
jmp
in
jge
rcr
sub
aad
push
xor
inc
mov
pop
icebp
jo
xor
add
cmpl
call
or
mov
or
and
mov
lahf
add
pop
aad
cmpsl
push
jle
rol
pop
sub
and
mov
push
push
lahf
sbb
fdivl
sbb
mov
or
lahf
mov
and
popl
sbb
sub
ror
dec
lds
or
push
sub
mov
adc
icebp
push
push
mov
adc
setl
sbb
gs
test
loope
inc
test
xchg
stc
add
sbb
in
mov
sbb
push
dec
adc
pusha
xchg
dec
cmpl
sbb
pop
pop
in
ret
subl
add
inc
mov
movsb
jge
cmp
outsb
rcr
jecxz
lock
iret
dec
jne
fisubl
outsl
loopne
enter
add
rcll
jl
in
arpl
in
cmpsl
gs
icebp
add
gs
in
sub
daa
and
es
movsb
inc
or
lods
sub
sbb
add
inc
stos
jmp
jmp
cwtl
loopne
mov
and
push
icebp
jmp
insl
mov
sarl
imul
das
js
add
hlt
dec
loope
sub
es
xor
ret
cmp
adc
cwtl
fistpll
shrb
add
stc
sub
dec
addr16
adc
pop
sub
fcmovne
fwait
pop
adc
or
fdivrl
sbb
pusha
mov
cmp
cli
sub
lock
mov
dec
hlt
cs
inc
push
repnz
jo
loop
add
lods
out
or
rclb
xor
icebp
test
mov
xchg
add
aad
inc
imul
pop
push
add
jbe
xor
jl
add
mov
jmp
push
sbb
sbb
insl
add
or
or
xor
pusha
mov
xchg
xchg
subb
and
and
pop
mov
into
aaa
mov
sbb
mov
ret
adcl
jmp
jmp
fucom
dec
mov
xor
mov
in
cmc
lea
mov
pop
add
mov
lods
adc
sahf
lret
push
sbb
inc
loop
xorl
clc
mov
mov
pop
fisubrl
jmp
sahf
push
adc
adc
scas
mov
icebp
push
jo
lock
lock
sub
jge
out
mov
popw
in
sbb
xchg
nop
sarb
xchg
shlb
lds
mov
fdivs
jecxz
adc
inc
pop
pop
lods
mov
rorl
add
inc
sti
hlt
xchg
inc
add
ret
dec
add
xchg
xchg
jb
jp
adc
iret
fdivs
push
pop
sarl
and
mov
pop
lcall
pop
sbb
add
aaa
je
fcompl
fsubrl
sbb
loope
fwait
loope
lock
sbb
inc
inc
call
or
call
sbb
add
sbb
sub
aam
sub
dec
lock
cmp
push
pop
lahf
mov
adc
adc
fcmovnb
icebp
sub
adc
jmp
pop
lahf
jno
inc
pop
shrb
fstpt
xlat
jg
sahf
daa
lcall
push
jmp
xchg
andb
orb
jmp
jl
xor
and
mov
xor
dec
xor
mov
hlt
push
hlt
add
out
adc
xlat
and
out
xchg
fisttpl
jge
jo
shufps
mov
xlat
int
ret
scas
mov
mov
inc
pop
mov
add
push
sbb
mov
sub
pop
add
ja
or
jo
adcb
test
mov
dec
xor
or
arpl
dec
mov
xor
cmp
push
jg
mov
lods
pop
inc
xchg
repz
push
push
and
pop
push
testl
push
rclb
repnz
or
sub
mov
test
sbb
push
pop
repz
fwait
xchg
out
or
sbb
shll
xor
and
movzwl
ljmp
jbe
or
nop
daa
addb
jp
add
dec
test
nop
imul
clc
sbb
and
and
xor
xchg
lret
xlat
js
push
pop
enter
mov
add
mov
xchg
mov
mov
ficoml
push
fwait
cmp
adc
cmc
cs
lods
push
mov
cwtl
lds
or
pop
xchg
aad
jmp
xchg
inc
test
ret
fcomp
hlt
imul
ja
push
or
mov
lds
adc
add
rcr
icebp
stos
outsl
movsl
jp
flds
or
sub
mov
loop
ss
dec
xchg
mov
push
pop
in
ljmp
or
mov
inc
jmp
testb
cli
push
mov
dec
push
dec
ffreep
jmp
push
lock
jmp
orb
cmp
pop
and
inc
sbb
jno
mov
out
cmpsl
cmp
inc
call
adc
sbb
fcmovnbe
shr
mov
mov
pop
out
xor
mov
mov
sbb
pop
pop
fucomip
imul
shll
les
pop
sarb
insl
ljmp
inc
pop
jmp
bound
mov
jnp
out
decl
cmp
or
out
lret
inc
clc
fcomip
loop
jg
je
ret
push
lock
add
call
jle
push
or
xchg
les
popf
xor
sbb
mov
lcall
adc
dec
std
das
bound
cs
xor
shlb
or
fsubrp
in
fcmovbe
jno
jge
dec
inc
pop
mov
inc
cmp
fcmovb
popa
lock
xor
sbb
mov
jmp
fs
icebp
push
adc
or
loop
mov
lahf
mov
inc
cld
int3
sbb
shl
push
rcrl
push
stos
mov
movsl
adc
insb
push
pop
mov
xor
mov
push
jecxz
ljmp
pop
test
push
sub
add
loopne
ljmp
inc
xor
popf
and
sbb
jae
or
cwtl
subb
lds
xchg
enter
ja
and
clc
sub
scas
inc
sub
lods
xor
addr16
jmp
adcb
stc
les
or
repz
add
movsl
clc
jge
add
sbb
stos
jb
push
sub
aam
sub
gs
mov
cmp
ret
mov
push
inc
das
es
shlb
lahf
ficoms
push
mov
leave
out
fcomps
pushf
mov
adc
dec
inc
adc
xor
jno
mov
lods
adc
pop
fimuls
fstpt
mov
sub
cmp
fimuls
add
mov
xchg
test
push
add
sub
adc
fisttpl
pop
push
clc
sbb
mov
rol
inc
or
mov
dec
ljmp
or
lea
push
mov
hlt
push
push
aam
push
xchg
mov
loope
adc
out
xchg
data16
aam
incb
stos
sbb
jmp
out
pop
imul
mov
mov
add
push
pusha
adc
sub
cmpsb
shll
shll
sarb
rcrl
mov
enter
lgs
ror
mov
add
inc
loope
xchg
in
in
clc
inc
xor
mov
dec
and
cmp
jo
je
add
adc
dec
jle
imul
sbb
jns
insb
push
xor
popa
sub
stos
cmp
in
push
sbb
leave
xchg
jecxz
mov
adc
xor
cli
push
shrb
test
repz
push
sbb
mov
pop
jmp
xor
out
lret
adc
xchg
cld
dec
and
mov
mov
push
sub
add
pop
sub
jmp
dec
lahf
lea
mov
and
imul
or
xor
mov
mov
xor
fidivrl
jge
and
sbb
dec
or
out
and
cld
sub
test
add
jp
or
or
jmp
mov
insb
and
mov
jns
stos
add
hlt
lea
fwait
jge
xchg
lea
jecxz
lahf
jbe
or
into
mov
fsubs
push
ljmp
add
bound
and
sbb
lcall
in
xlat
cmp
xor
xchg
push
mov
or
xchg
pop
jne
lock
dec
jecxz
int
insl
mov
popa
or
sbb
frstor
cmc
add
fcompl
cmpsb
ljmp
ljmp
adc
inc
cmp
cli
mov
or
pushl
pop
test
cwtl
call
int3
iret
or
popl
lock
cltd
jmp
sbb
not
mov
popl
adc
xchg
add
inc
ja
rorb
scas
dec
jge
in
push
arpl
out
sbb
lds
out
fwait
mov
or
xchg
dec
in
incl
mov
cmp
out
into
test
and
lea
or
or
lock
mov
sbbl
push
mov
jae
loope
adc
mov
xlat
and
cli
not
adc
pop
pop
add
adc
ss
push
xchg
shlb
pop
das
pop
test
jnp
mov
sbb
cmp
pushf
pop
ja
and
adc
rorl
cmpsb
or
add
daa
cli
mov
shll
inc
mov
mov
push
sbb
xchg
ret
jbe
or
jbe
fmulp
lea
fs
mov
push
fdivl
imul
sbb
addr16
scas
or
in
iret
adc
movsb
shrb
inc
testl
jae
dec
cmp
test
xor
xchg
push
cmc
je
outsb
sbb
fsts
mov
xor
pop
mov
lret
jmp
fs
jns
movsl
in
inc
and
or
sub
fwait
int
adc
adc
sbb
lea
rol
clc
pop
push
push
mov
sbb
inc
sub
xor
cmp
jg
dec
jne
mov
dec
adc
cld
sbb
jbe
inc
or
rcll
lds
dec
jmp
fmuls
flds
pop
test
loop
mov
in
sbb
test
pop
mov
sbbl
push
push
das
adc
aas
jg
gs
cs
cmc
add
lahf
fnstenv
push
mov
aas
loope
pop
adc
ljmp
test
lcall
dec
ret
push
mov
pusha
and
mov
cld
repnz
inc
dec
xor
loopne
movl
filds
sub
int
push
xchg
push
stos
or
out
movsb
jmp
dec
call
jae
xchg
xchg
dec
rcrb
add
movb
xor
cmp
aas
loope
sbb
jl
hlt
cmc
mov
mov
add
scas
push
dec
add
fucomi
adc
jno
movb
mov
std
mov
push
inc
jmp
or
sbb
lcall
pop
dec
adc
imul
cmp
ljmp
fadds
inc
or
push
imul
pop
pop
lods
je
adc
mov
add
adc
rclb
pop
arpl
xor
pusha
mull
pushf
xor
adc
inc
sbb
ret
fcmovu
sbbb
insl
ret
ret
jns
int
pop
nop
mov
mov
cmp
cmc
cmp
test
shrb
mov
mov
call
mov
lock
adc
imul
out
mov
in
xor
cmp
out
add
inc
add
sub
int3
rcrl
xlat
inc
adc
xchg
adc
add
push
clc
mov
cmp
outsl
xor
rcrl
test
pop
jecxz
loope
sbb
push
or
push
cs
mov
out
mov
sub
xor
aaa
lds
cmp
mov
push
inc
js
outsb
and
push
pop
or
das
fdivr
inc
mov
jne
fprem
push
rcll
int3
pop
mov
jo
adc
inc
inc
in
jmp
pop
xor
push
and
pop
pop
repz
mov
popa
jmp
sbb
test
je
cmp
add
and
mov
and
mov
test
dec
loop
inc
dec
adc
jae
inc
cmpsl
addb
pop
shll
bound
mov
ret
rcrb
sbb
mov
xor
xor
out
mov
mov
rolb
fldcw
inc
loopne
scas
mov
int
pop
divl
jb
sbb
mov
scas
xor
inc
adc
bound
add
add
aad
out
add
repz
xorb
xor
rclb
iret
mov
popa
int3
mov
clc
inc
dec
les
repnz
add
add
in
mov
cli
les
lock
pusha
movsl
sub
jp
push
add
jmp
test
cmp
insb
mov
cmovp
icebp
mov
jno
mov
in
mov
sub
ror
or
add
mov
std
xchg
loopne
data16
inc
pop
pop
dec
push
mov
sarl
mov
les
or
out
fstpt
push
push
lds
dec
pusha
cmpsl
pop
aam
icebp
add
xchg
inc
pushf
mov
rcrb
out
add
out
iret
fwait
or
pop
inc
shlb
movsb
add
icebp
and
jecxz
pop
addb
ss
addl
lock
mov
xor
aas
sbb
sbb
rcrb
ret
repz
sub
adc
add
icebp
int
ja
cmp
inc
sub
xor
mov
mov
dec
mov
adc
sbb
adc
and
xor
adc
sahf
loop
test
in
add
or
les
shll
or
push
fidivrs
sbb
dec
adc
nop
fmuls
adcb
popf
add
jnp
fldenv
add
dec
pop
sbb
cmp
push
xor
inc
rcrl
movsb
dec
out
hlt
sub
dec
outsb
movsl
pusha
xor
xchg
hlt
stos
rcr
shl
xor
add
push
adc
popa
test
int
push
lock
add
filds
and
cmp
pop
push
jmp
ds
add
in
cmpl
add
test
insb
fldcw
push
fwait
inc
loopne
dec
in
or
daa
mov
inc
jl
aam
lock
jg
int
outsl
push
popf
cmpsl
sti
loope
xchg
sahf
sbb
loop
fsts
ds
pusha
addl
adc
adc
je
ret
rorl
nop
fdivs
mov
mov
jne
imul
push
mov
and
sbbl
dec
aam
sub
shrb
adc
loop
jp
fildl
xor
pop
push
test
sbb
xchg
sar
adc
or
jbe
jmp
cli
mov
out
fadd
push
imul
icebp
inc
push
cwtl
pop
cmc
inc
mov
pop
out
mov
frstor
in
sbb
xor
and
inc
mov
xor
push
sbb
xor
ret
nop
mov
and
mov
rorb
out
aam
je
pusha
xor
pop
and
mov
xorb
dec
pop
sarl
dec
xlat
mov
push
ftst
inc
shl
in
adc
and
stos
cmp
pop
mov
xorl
or
cmp
dec
sub
cmp
add
push
cmp
test
fdivl
adc
xor
into
ja
mov
and
xor
mov
mov
cmpsl
mov
outsl
sbb
lods
dec
sbb
add
pop
adc
ljmp
cmp
jne
adc
fildl
cmc
push
adc
or
mov
out
push
or
fisubl
lock
xor
insl
adc
pop
adc
add
xor
stos
mov
xchg
xorl
iret
adc
jae
pusha
sarl
add
jle
out
mov
lret
in
inc
icebp
or
out
xor
dec
es
rolb
sar
xchg
jp
cmp
stos
xchg
mov
fwait
das
fwait
mov
neg
dec
inc
pop
gs
or
xchg
dec
insl
and
xchg
fwait
insl
rcr
daa
rorl
out
sbb
into
mov
ficomps
push
fcomi
ret
addr16
jno
dec
mov
and
ret
mov
nop
dec
int
sbb
mov
les
dec
dec
stos
into
mov
jo
cmp
mov
mov
ljmp
xchg
clc
stos
sbb
mov
test
into
or
sbb
dec
and
test
dec
jno
fildll
sub
test
decb
ret
add
push
inc
inc
fdivl
test
loope
jb
inc
and
and
subb
and
push
inc
inc
popf
lcall
repnz
cld
mov
rorl
movsb
jae
mov
xor
add
jo
testb
pop
cld
and
fstpt
add
sub
js
cltd
push
inc
test
add
lds
dec
and
add
push
rolb
rol
adc
lcall
add
sub
inc
fisubs
lock
push
ret
xor
xchg
loope
or
sbb
fs
gs
and
in
out
xor
jbe
add
xor
repz
fsubs
dec
arpl
cmc
mov
hlt
xchg
add
mov
cmp
mov
push
out
int3
lock
not
add
adc
xchg
test
and
je
or
loop
push
or
insb
cmp
insl
xchg
mov
or
call
test
cs
sbb
push
loopne
or
incl
pushf
jp
xchg
jbe
imul
adc
xor
cmp
xor
inc
and
sbb
shll
inc
xor
sbb
push
jae
call
roll
and
adc
sbb
addl
shlb
ret
test
and
adc
addl
enter
and
sbb
xchg
push
push
push
inc
cmova
adc
pop
mov
adc
sub
xchg
push
fidivrl
je
lock
cmp
mov
sub
pusha
loope
xchg
gs
jmp
test
hlt
and
push
xchg
test
mov
xor
in
repz
adc
add
or
inc
pop
sub
mov
enter
int3
or
mov
xor
and
push
jo
mov
popf
xchg
rcrb
adc
cmp
inc
adc
add
gs
jns
cmp
dec
mov
cwtl
sub
xor
push
cli
imul
inc
mov
rol
imul
loopne
jmp
int
in
and
call
sahf
dec
inc
pop
jecxz
clc
xchg
push
test
faddl
or
insl
jp
push
ret
ret
repnz
mov
sbb
fists
adc
aaa
mov
imull
das
inc
mov
sub
mov
dec
lds
fnstenv
mov
push
test
push
push
push
call
jecxz
xchg
xor
notl
inc
loop
leave
mov
pop
pop
fnstcw
shlb
add
aaa
ss
test
mov
jb,pn
data16
push
pop
pop
std
dec
iret
inc
into
push
push
sbb
fmull
dec
sub
pop
sahf
push
mov
hlt
push
mov
sub
jo
in
push
mov
rolb
xor
adc
bound
mov
add
out
insb
bound
lock
jns
pop
cs
push
sub
sub
aaa
adc
shlb
inc
test
mov
fcoms
test
xchg
repz
test
add
and
popa
push
adc
push
notb
lock
inc
or
push
lea
dec
or
pusha
rorb
jbe
negl
add
andb
dec
mov
repnz
cmpsb
xor
enter
fsubrl
out
arpl
fdivs
pop
in
push
popa
dec
mov
fildl
pop
and
ret
je
xor
cmp
das
jbe
bound
mov
popf
xor
dec
movlps
fbstp
movsl
hlt
mov
sub
pop
les
fnstsw
adc
add
pop
xor
add
inc
cli
popf
lahf
mov
stc
add
pusha
jmp
xor
cmovo
sub
adc
or
adc
xor
push
sbb
dec
sbb
shlb
add
mov
cmp
pop
add
repz
inc
mov
and
push
mov
or
jmp
adc
call
add
push
lock
pop
sub
adc
addl
pop
imul
dec
fwait
jbe
xchg
adcl
roll
mov
xchg
mov
xchg
mov
lcall
xor
cmp
rorb
ljmp
repnz
cltd
adc
pop
outsl
push
cltd
or
ljmp
ret
std
mov
outsl
cmpsb
and
mov
ss
jbe
or
int3
or
push
lock
xor
sbb
adc
sbbl
jle
mov
dec
push
push
loopne
popa
push
inc
dec
int3
pop
push
loopne
push
mov
ret
sbb
fmul
xchg
stos
jns
lcall
sub
sbb
dec
mov
add
and
dec
mov
int3
fisubrs
adc
aas
pop
sub
sbb
test
xor
jle
aaa
mov
mov
sub
scas
or
divb
add
cmp
dec
inc
sub
iret
fucom
call
push
dec
std
loopne
mov
lahf
repz
cmp
ss
mov
cld
inc
fsubr
xchg
or
jno
sbb
int3
and
xchg
andl
mov
dec
dec
jecxz
fstpl
sub
push
push
add
dec
inc
ja
add
loope
rcrb
mov
inc
aad
ljmpw
outsb
test
jbe
rcrl
inc
pop
xchg
call
loopne
jmp
cmc
popa
icebp
dec
fsub
mov
cmp
scas
jae
jne
sbb
fsubrs
rolb
jnp
push
mov
gs
sbb
mov
jmp
and
mov
pop
cmp
clc
adc
xchg
push
call
stc
pop
imull
add
sub
es
cld
push
inc
andl
sbb
daa
jmp
mov
mov
sbb
rolb
add
jmp
cs
pop
jle
and
std
mov
rorl
dec
pusha
sahf
adc
push
push
iret
jmp
push
dec
pop
xorb
test
and
inc
leave
inc
dec
mov
jne
push
nop
outsb
xchg
xchg
pop
shlb
or
mov
and
dec
mov
push
jbe
and
jo
and
and
sub
sub
and
or
dec
dec
jmp
dec
sbb
sbb
mov
xchg
cltd
and
and
enter
test
movsl
mov
inc
fimuls
les
push
dec
test
stos
hlt
dec
test
or
mov
xor
test
shlb
adc
pushf
es
mov
les
dec
jle
adc
mov
and
icebp
shlb
dec
jb
in
adc
xchg
cltd
pop
xchg
or
dec
clc
xor
mov
and
inc
xorb
outsb
dec
mov
jl
xor
cmp
add
ds
adc
flds
fmuls
mov
and
jp
rcrb
ljmp
pop
mov
es
push
xchg
mov
jl
cmp
outsl
pusha
leave
cmp
out
inc
sbb
int3
fimull
shrb
jl
fwait
lret
add
or
clc
in
adc
mov
adc
data16
movsl
dec
orb
mov
push
cwtl
mov
push
lret
out
mov
and
insb
dec
test
test
add
or
notb
mov
cmpsb
fisubl
roll
mov
or
leave
insb
pusha
xchg
jmp
aam
add
push
sbb
dec
xchg
lock
adc
jb
mov
inc
lret
push
dec
lods
mov
add
ss
or
test
push
adc
xor
fcomps
dec
rol
dec
mov
lods
xor
xchg
inc
cld
adc
xchg
mov
shlb
push
sbbl
int3
insb
mov
mov
jo
sar
mov
mov
add
imul
notb
add
dec
insb
rclb
push
add
pop
ficoms
lret
add
pop
mov
clc
or
pusha
data16
ljmp
inc
adc
sahf
add
mov
jp
cwtl
push
cli
push
mov
push
dec
pop
testb
movsl
push
mov
jb
mov
pop
xor
ret
jmp
push
dec
xchg
mov
mov
test
and
mov
sbb
cs
and
inc
adc
inc
daa
dec
mov
jecxz
xchg
and
js
fidivs
sbb
jl
xor
loop
movsb
sbb
push
xor
ljmp
push
push
adc
push
xchg
or
dec
gs
pop
enter
sub
ljmp
shll
into
subb
mov
add
xor
xchg
sbb
imulb
xor
in
adc
mov
movsl
mov
jbe
pusha
dec
xchg
or
push
add
movsb
add
and
js
loopne
lods
lods
scas
inc
mov
inc
pusha
inc
dec
sbb
call
dec
add
mov
sarb
sbb
pop
mov
es
cld
adc
mov
pop
jl
movb
push
pop
fdivrl
adc
xchg
jbe
cmp
add
xor
neg
repnz
mov
std
adc
xor
add
in
into
push
cmpsb
mov
dec
repnz
lods
jbe
data16
mov
cli
pusha
adcb
mov
leave
push
call
nop
xchg
mov
mov
fistps
or
mov
lods
test
adc
fadds
mov
dec
adc
mov
sbb
testl
adc
or
cltd
rolb
cmpsb
lods
adc
and
std
xchg
cmp
adc
outsb
in
cmpsb
xor
fdivr
push
cmpsb
push
cltd
icebp
push
pop
mov
scas
adcb
push
sbb
jmp
mov
xor
lcall
dec
fsubl
push
add
or
dec
out
cwtl
pusha
add
dec
dec
jle
pop
cmp
fsubs
cmpsb
pop
jne
nop
call
mov
shrb
adcb
ss
cmp
fmul
lret
sub
bound
adc
lret
xchg
mov
mov
xchg
sub
push
sub
adc
data16
clc
add
dec
dec
mov
in
cli
mov
popf
dec
xor
data16
lcall
add
into
cmp
addl
inc
and
loopne
dec
sub
mov
pop
sbb
cmp
jne
mov
xchg
ret
or
add
and
push
add
cmp
add
js
sub
daa
and
xchg
idivb
add
pusha
cmp
xor
add
mov
add
sub
orl
pop
sbb
loopne
rcr
adc
cltd
adc
cli
adc
ret
add
pushf
push
mov
mov
cli
jb
mov
cmp
sbb
xor
pop
inc
and
sub
in
lock
fcoml
mov
xchg
sbb
xchg
loopne
pop
iret
push
push
clc
loopne
js
sahf
sub
dec
jle
mov
out
mov
fs
and
mov
fs
dec
pusha
data16
ret
sbb
xor
cwtl
and
inc
out
loopne
dec
mov
lcall
loope
adc
jo
nop
test
cmp
je
enter
cmp
sub
movsb
add
fisubs
sbb
test
add
ss
or
push
ret
inc
or
aad
mov
add
loopne
push
add
imul
adc
cmp
xor
mov
lea
jo
inc
add
ret
lfs
mov
adc
fs
pop
pop
shl
in
mov
in
shrl
rolb
push
or
add
push
nop
lret
mov
jbe
in
inc
pop
inc
andl
or
and
add
sub
nop
cltd
adc
mov
rcrb
or
mov
dec
scas
fs
sahf
adc
ret
scas
xchg
out
pop
sub
lea
mov
test
add
and
scas
lods
jo
xchg
inc
hlt
mov
daa
push
popa
xor
mov
push
lods
js
mov
cwtl
lods
imul
cmpb
and
cmp
fsubrs
stos
xchg
sub
inc
data16
push
push
add
or
popa
stos
and
jmp
cmp
add
adc
mov
orl
stos
dec
cwtl
dec
xor
inc
sbb
mov
lods
adc
movsb
mov
fisubl
or
ret
int3
mov
mov
add
adc
and
hlt
xor
mov
in
daa
add
das
jb
out
icebp
adc
mov
pop
pop
or
loop
jbe
mov
and
xchg
xchg
lea
mov
xor
pusha
in
sbb
lock
bound
test
sbb
cmp
fadd
cmp
mov
jnp
or
mov
and
sbb
push
or
or
cmp
or
push
dec
sbb
es
addb
sahf
lock
add
push
fsub
subb
sub
cwtl
fnstsw
aad
clc
test
pop
dec
cmp
pop
ss
mov
cmp
cmp
es
add
ror
adc
inc
out
adc
push
xor
rolb
les
add
or
and
test
loop
cmp
nop
mov
add
ret
jp
sub
adc
dec
jo
stos
cmpsb
in
or
hlt
out
mov
dec
push
test
shlb
cmp
dec
mov
int3
jo
mov
test
fcoml
adc
hlt
outsb
dec
sbb
rol
add
push
imul
pushw
out
jp
adc
or
or
add
sbb
data16
hlt
mov
lods
push
and
cmpsl
pop
pop
xchg
stos
or
adc
and
cld
dec
or
push
rcl
mov
imul
mov
inc
scas
jle
or
addb
hlt
push
xor
js
mov
mov
fimull
xchg
sbb
nop
call
xchg
pusha
bound
lods
push
inc
push
ficomps
pop
int3
and
shl
loope
inc
and
sub
sbb
ljmp
cmp
adc
adc
enter
inc
test
sahf
ljmp
out
loopne
lods
orl
adc
ret
int3
add
cmp
xor
xchg
idivb
adc
pushf
into
jle
jl
add
imul
xchg
inc
add
dec
or
mov
cmp
mov
dec
xchg
jb
lock
pop
outsl
cmp
call
test
rolb
sub
lret
es
adc
rcrb
js
leave
add
and
xor
and
sub
dec
shlb
fcmove
pushf
sbb
inc
into
xor
int3
push
mov
popa
loope
aaa
repnz
jl
lods
cltd
cltd
mov
aam
dec
test
rolb
inc
test
adc
movsb
cmp
jle
rolb
adc
add
push
mov
icebp
add
and
incl
push
pop
adc
or
xchg
in
lock
add
add
mov
mov
add
add
lods
pushf
push
popf
add
jmp
push
add
addr16
add
push
adc
testl
call
dec
mov
dec
addr16
or
addl
ljmp
cmpl
aas
popa
add
dec
add
hlt
enter
add
fcomps
pop
sub
mov
cmp
les
or
mov
incl
mov
dec
in
sbb
add
clc
push
xchg
bound
sub
sbb
pop
hlt
in
lret
cmp
pop
mov
sub
add
mov
mov
aas
aam
pop
jmp
test
jo
ret
jno
pushl
lret
mov
inc
lea
loopne
xchg
clc
ret
mov
out
mov
sub
addl
cmp
dec
xchg
sbb
movsb
scas
insb
pop
roll
mov
decl
add
push
popa
adc
mov
mov
pop
test
push
ds
mov
cwtl
jle
pop
fcomip
mov
add
stos
jb
fldt
add
sbb
lea
or
dec
in
inc
cmpsb
inc
xchg
or
xchg
or
ret
or
decl
push
fimull
mov
test
fisubrs
repz
ret
es
pop
cmp
insb
add
mov
add
jl
mov
fnstcw
mov
add
and
cmp
fcoms
icebp
mov
std
int
add
das
add
cmp
add
imul
call
inc
and
insl
sbb
or
clc
dec
pop
fdivrl
sbb
ljmp
scas
js
mov
and
add
stos
add
ja
inc
pop
push
ret
test
push
pop
and
leave
testb
pop
mov
push
outsb
push
test
jg
push
add
xchg
push
xchg
and
mov
cld
inc
roll
or
add
mov
es
inc
adc
cmp
fistpll
cmp
dec
test
pop
xchg
add
imul
add
movl
add
xor
jge
add
cmc
or
test
pop
push
lock
sti
pop
mov
cmp
pop
int
adc
sbb
pop
adc
fstl
roll
decl
push
movsb
adc
mov
add
bound
je
gs
or
mov
lock
pop
test
dec
rcr
push
pop
adc
adc
sub
jle
add
cmp
mov
mov
adc
xchg
js
mov
mov
adc
out
sbb
mov
fcomi
test
add
es
es
imul
add
nop
imul
arpl
nop
push
push
mov
add
sbb
scas
push
outsl
js
add
aaa
imul
pop
and
pop
imul
repz
ja
mov
cmp
add
xchg
xor
iret
outsl
ja
insl
out
andl
nop
adc
jmp
fbstp
lods
add
fsubrs
add
sub
test
cmp
loop
add
add
lods
int3
js
lcall
add
test
ret
add
fcomip
jmp
adc
ljmp
int
mov
in
repz
mov
sub
fildl
cmp
js
test
pop
sbb
outsb
fwait
mov
mov
outsl
add
sub
ret
and
scas
lcall
xchg
rorb
sub
andb
fbstp
fistpl
test
popf
pop
or
inc
sub
icebp
sub
mov
push
mov
fstpl
pop
enter
test
add
or
mov
cmp
js
enter
fs
or
push
xor
or
lds
sbb
pusha
adc
iret
test
pop
mov
dec
shl
jecxz
hlt
and
fsubrs
mov
shl
push
jg
mulb
pusha
and
or
in
in
inc
sarl
jns
push
fs
repnz
fimull
insl
incb
sub
shlb
sub
mov
loopne
nop
xor
cmpsb
dec
sub
repz
jg
push
adc
rorb
sub
rorl
roll
rcrl
push
loopne
xchg
and
jne
push
fstl
outsl
out
into
test
shlb
insb
test
push
loopne
test
ja
fs
rolb
lods
insl
aaa
xchg
cmp
sbb
pop
push
push
pop
pop
push
fmull
dec
fistpl
js
mov
add
jmp
jg
jmp
in
add
iret
push
mov
test
ret
notb
testb
and
es
adc
andl
xchg
test
and
jg
mov
in
adc
fmull
and
cld
cmp
shlb
inc
ss
out
jmp
xor
mov
jne
cli
push
or
sbbb
out
clc
fcomi
push
cld
fwait
outsb
js
dec
shlb
dec
or
roll
out
sub
jb
lcall
push
sub
scas
sub
pop
dec
push
clc
loop
popa
xchg
mov
aaa
lret
in
adc
and
fidivrl
xchg
dec
add
sarb
pop
negb
sbbb
hlt
mov
shrb
es
aas
sub
ljmp
jg
add
fisubs
cmpsl
sbb
rcll
js
jbe
mov
push
clc
cmpl
sub
outsl
fdivs
out
test
and
push
pop
sub
out
add
loop
sbb
cmp
jp
shlb
fistpll
adc
sbb
out
mov
push
inc
pushf
fsubr
test
jle
adc
test
xchg
inc
adc
ja
inc
cmp
lock
add
add
fimuls
stos
test
lods
shlb
xor
jl
test
xor
inc
pop
mov
add
inc
movsl
repnz
mov
insb
push
cmp
push
ficomps
sub
xchg
dec
xchg
je
insb
adc
sarb
pop
shl
adc
mov
ljmp
loop
mov
mov
bound
enter
inc
cmp
add
sub
jb
xor
in
sub
and
or
ficoml
mov
mov
lcall
mov
xor
mov
xchg
add
mov
daa
jno
sbb
test
xor
add
test
inc
xchg
jge
jg
or
scas
js
aam
dec
popa
mov
lods
mov
pop
push
fbstp
mov
fdecstp
push
lret
fdivrl
adc
jge
add
outsb
mov
add
insb
mov
jg
loope
int
incb
push
and
icebp
ficoml
lahf
add
ret
decb
mov
ljmp
push
cltd
push
push
addr16
mov
dec
stos
inc
inc
mov
sub
sarl
jg
das
out
mov
aad
rcl
adc
jp
test
lret
jg
xor
cmp
shrb
sub
imul
loopne
add
lock
jo
ja
in
pushl
jecxz
push
test
push
sti
int3
loope
ljmp
add
call
mov
les
mov
roll
mov
push
sbb
xorl
jb
pop
cwtl
pushf
nop
mov
aaa
fdivr
add
inc
clc
les
jbe
xor
rolb
inc
pop
mov
filds
dec
sub
jl
std
mov
inc
pop
out
ficoml
sub
jno
outsl
mov
stos
clc
cmp
loop
popl
push
pop
data16
out
js
mov
add
mov
add
orb
sub
call
in
push
movsl
test
or
add
ds
ljmp
mov
push
dec
mov
jns
fs
mov
hlt
es
push
sbb
cmpsb
imul
jnp
int3
mov
fwait
mov
xlat
into
pop
adc
fsts
inc
mov
aas
jl
shlb
in
and
sbb
repz
jg
and
xchg
enter
rcrl
mov
cmp
add
xor
and
jg
clc
lock
aam
call
lcall
cmpsb
lret
addb
int
mov
mov
jae
sbb
les
lahf
xchg
pop
cmpsb
add
mov
cmpsl
test
push
loop
adc
pusha
mov
cltd
xchg
xor
push
std
cmp
les
nop
shlb
push
pop
push
lds
add
int3
stc
inc
scas
add
call
adc
push
jnp
push
jl
je
ljmp
out
mov
call
mov
inc
std
jle
js
aas
test
mov
lret
add
fsubl
xlat
int3
xor
adc
jne
pop
std
cmpsl
xchg
xchg
movsb
mov
andl
adc
or
and
add
int3
mov
mov
js
cltd
mov
stos
push
cld
call
fistl
test
std
enter
in
sub
xor
inc
mov
xor
and
push
fisubl
ret
data16
dec
ljmp
mov
test
push
cmp
clc
les
cmp
call
das
xchg
or
pop
xor
push
cwtl
and
lcall
xor
jmp
push
nop
shrl
cmp
cwtl
mov
push
cld
inc
cwtl
push
and
call
or
fisubrl
mov
add
ljmp
cmpsl
jg
out
lret
mov
jp
bound
or
es
push
scas
jg
aam
imul
roll
cmpsl
pop
test
fcmovb
add
add
jp
lock
es
push
add
and
pushl
mov
test
mov
jp
repz
inc
ja
js
mov
ret
sbb
into
xorb
pusha
orl
cmp
std
jg
and
repz
mov
fists
mov
xchg
add
enter
add
out
mov
shl
mov
aad
imul
es
scas
outsl
mov
mov
jb
inc
dec
dec
lahf
fldt
add
pop
mov
movsb
push
and
mov
push
cmpb
or
fdiv
gs
push
xor
or
lea
ret
decl
enter
mov
inc
icebp
jmp
arpl
notb
sbb
inc
adc
loope
add
mov
xor
cli
aaa
sub
pop
adcb
and
sbbb
or
addl
mov
mov
sub
hlt
and
lcall
stos
rclb
mov
add
shl
push
imul
testl
or
or
mov
pop
add
mov
pop
adc
cmc
jbe
pushf
jg
lods
sub
in
mov
sub
ss
std
mov
ja
leave
push
and
cmp
and
outsb
lds
add
add
mov
cmp
xchg
sub
mov
leave
sbb
and
cli
mov
xlat
mov
adc
test
pop
insl
outsl
movsb
sbb
cwtl
insl
fcom
loopne
or
and
call
fbstp
push
add
add
pusha
loopne
mov
mov
xorb
ss
in
mov
addb
mov
fidivs
ss
add
add
xchg
push
jecxz
ds
cld
add
adc
push
pop
sbb
mov
push
mov
add
mov
jbe
decl
push
push
stos
sbb
imull
add
mov
xchg
cmpl
mov
stos
pushf
cwtl
sbb
fimuls
pop
mov
add
bound
repnz
lcall
jl
loopne
sbb
add
add
mov
push
cmp
lea
dec
stos
xor
inc
cmp
xchg
xchg
arpl
dec
push
imul
ljmp
sarb
add
lods
add
push
push
int3
jb
shrl
sub
inc
arpl
xor
mov
cmpsb
push
or
sbb
mov
xor
loopne
cmp
rcr
inc
stos
inc
inc
mov
jmp
in
cmp
ror
or
dec
cmp
loopne
lods
xor
arpl
add
xor
mov
dec
push
mov
outsl
add
icebp
or
dec
leave
cmp
scas
push
cmpsl
mov
jae
fmull
in
sbb
and
mov
xor
icebp
mov
adc
daa
inc
adc
pop
scas
adcb
jg
outsb
loop
mov
or
call
push
cmp
jae
cmp
aaa
and
adc
cmp
mov
push
cmp
mov
sbb
enter
xor
sub
clc
add
call
add
lret
mov
test
les
mov
inc
shll
dec
jecxz
sbb
sub
xorb
mov
pop
adc
scas
shl
pop
add
dec
inc
jne
jg
adc
aaa
or
jg
cmp
fbld
cmp
adc
sbb
and
fsubrl
incl
test
data16
sbb
cmpsl
cwtl
inc
loope
mov
notb
je
pusha
pop
push
lds
fisubs
cmp
mov
scas
ficoml
add
xor
or
pinsrw
jecxz
jl
jnp
sub
and
sbb
out
xchg
test
pusha
push
ret
filds
add
xor
inc
adc
push
loope
mov
add
out
insb
pop
fsubl
dec
outsl
stos
clc
jns
xchg
ret
out
pop
add
lods
add
mov
int
jb
xchg
outsl
pop
cmpsb
insl
incl
lock
incl
cmp
cmp
out
int
mov
mov
push
push
dec
aad
popf
je
push
dec
or
scas
cld
sti
add
or
pop
loope
xor
mov
mov
pop
lock
popa
out
jle
dec
push
add
ror
mov
cmp
jno
xor
cld
aad
rorb
mov
jmp
invlpg
adc
push
push
cmp
push
xchg
in
xor
add
xchg
adc
imul
les
ss
dec
push
ret
add
xchg
mov
lock
jb
jle
or
aad
rcrl
inc
pop
ret
outsl
pop
mov
inc
mov
add
jbe
push
jecxz
mov
jp
jecxz
and
cmp
ficompl
mov
icebp
in
jbe
cld
ljmp
push
adc
cld
mov
pop
mov
in
lock
inc
mov
stos
repnz
sahf
je
les
ret
clc
jp
and
xlat
inc
adc
dec
fdivrp
imul
cwtl
sub
mov
push
clc
adc
jnp
adc
ss
inc
mov
and
dec
or
clc
les
sub
inc
mov
pop
adc
in
lds
xchg
ljmp
shlb
scas
add
dec
fists
sbb
repnz
dec
inc
mov
in
js
dec
jmp
aam
xchg
andb
inc
das
cli
pop
std
cmp
xchg
jne
popa
ljmp
mov
incl
and
push
nop
lods
lods
mov
cwtl
mov
loop
mov
push
mov
pop
fimuls
lock
aas
fs
ss
pusha
cli
pop
test
pop
xor
sbb
test
jo
or
ds
or
jb
push
xchg
mov
add
mov
decl
push
and
xor
loopne
fmuls
add
xor
or
add
dec
in
add
or
inc
mov
fs
sbb
or
lods
je
inc
add
jbe
fidivs
outsl
inc
divl
scas
mov
iret
sahf
call
mov
repnz
test
push
int3
jb
inc
stos
adc
mov
mov
clc
sub
negb
sahf
push
cld
pop
sar
mov
jo
xor
jecxz
data16
rcrb
push
add
hlt
sub
andb
aaa
cld
sbb
rorb
mov
inc
je
push
cmp
mov
cld
fbstp
clflush
jae
dec
xor
es
xor
add
inc
xchg
ljmp
lcall
mov
stc
in
inc
add
add
or
outsl
cli
ljmp
fsubl
insb
roll
out
mov
push
add
xor
add
pop
mov
jmp
mulb
dec
addb
decb
lret
xor
pop
push
mov
or
jmp
xchg
cmp
lcall
icebp
and
cmp
call
adc
push
fcoml
aaa
mov
int3
cld
inc
leave
loope
mov
or
push
sub
xchg
repz
mov
cmp
sbb
add
cld
idivb
pop
aaa
daa
mov
mov
popf
cmpsl
inc
loopne
pop
test
push
cmpsb
and
mov
push
out
add
pop
rol
testb
sahf
daa
add
mov
sub
mov
sbb
cwtl
lods
nop
cmp
or
mov
lcall
and
insb
mov
xchg
pop
orb
mov
sbbb
ror
lahf
pusha
stos
dec
bound
loopne
xchg
je
test
add
fwait
rorl
loope
push
in
lds
insb
dec
inc
into
insb
loop
movsb
imul
in
or
xlat
scas
enter
movsb
js
push
out
and
scas
or
fistpll
mov
mov
ret
fwait
nop
push
xor
pop
add
add
ret
jp
stc
test
add
or
mov
shlb
pop
lock
std
decl
add
mov
test
add
stos
in
mov
ds
out
or
inc
mov
push
push
int3
es
and
jne
xchg
dec
and
insb
xor
sbb
movsb
movsb
adc
loope
fsubrs
lahf
imull
pop
mov
sub
xorb
mov
push
lods
jecxz
adc
sahf
or
cmp
adc
enter
dec
iret
in
pop
je
xor
and
xor
outsl
sbb
sti
fildll
push
cmpsb
xor
incl
pushf
wrmsr
xchg
js
xchg
aam
and
xchg
arpl
adc
test
jg
dec
rcrb
mov
jp
inc
xor
rcrb
mov
out
ljmp
ss
cmc
mov
jno
sub
bound
push
std
adc
cmp
xor
push
push
and
pop
rcrb
ds
in
es
jno
js
cli
mov
add
lcall
dec
enter
mov
cltd
push
lea
out
ret
scas
pop
mov
loopne
dec
pusha
push
ret
in
repnz
and
push
adc
pop
in
pushf
mov
scas
xor
std
adcl
jno
add
push
pop
dec
xor
nop
xchg
ljmp
cmpsb
pop
push
insb
cltd
pop
loop
mov
and
sti
mov
addr16
push
mov
imul
dec
bound
xor
shl
mov
fwait
aam
dec
or
imul
cld
shl
push
out
hlt
cwtl
pop
icebp
pop
jbe
push
ja
das
inc
pop
stos
or
dec
add
scas
dec
mov
mov
cmp
fs
jg
lods
dec
dec
push
add
xchg
lods
jl
loope
cld
add
incb
aam
fnsave
mov
xorl
dec
ret
inc
inc
lods
mov
cmovae
lock
ret
sbb
lds
sub
stos
fucom
clc
call
in
lea
ja
inc
mov
mov
les
sub
inc
cltd
test
inc
mov
sub
fadds
fucomp
adc
pushf
lods
mov
js
or
lcall
sub
cmp
ret
scas
pop
sahf
fs
mov
in
xchg
or
daa
mov
add
jle
cmpsl
lds
pushf
mov
dec
or
fsub
add
movsb
sbb
add
sti
cmp
cli
pushf
in
jmp
jecxz
mov
ljmp
sub
mov
pop
adc
or
into
pop
add
or
loope
gs
adc
or
fcmovnb
or
or
xor
and
in
ja
into
js
or
cmp
mov
add
shrb
xchg
scas
js
adcl
cmp
jno
sbb
ret
pop
xor
movsb
aas
dec
or
dec
push
stos
add
xchg
data16
pop
sbb
pushf
clc
sub
idivb
lret
les
cmpsb
in
cli
add
sub
stos
push
popf
out
rolb
cmpb
ja
push
push
pusha
mov
test
push
subb
mov
rclb
in
flds
arpl
xchg
and
clc
lahf
insl
lods
sub
jg
int
add
pusha
nop
or
ret
into
add
loop
xchg
sub
lmsw
push
pop
sub
push
mov
jp
jno
mov
cmc
aam
jae
cmp
pop
mov
dec
or
jmp
lds
andb
add
adc
jmp
or
pop
aam
leave
popa
or
mov
ds
sub
push
mov
jl
div
mov
enter
dec
lds
fst
adc
and
push
jp
movsl
sar
decl
adc
mov
repnz
or
xor
or
sub
or
cmpsb
jg
push
dec
int3
xor
adc
lcall
rcrb
adc
enter
cmp
loopne
jmp
subb
cwtl
out
push
jl
or
mov
bound
jg
sti
add
push
pushf
scas
add
jg
lds
mov
and
and
cwtl
repnz
ds
inc
push
repnz
inc
fbld
js
adc
daa
mov
gs
sarl
add
cli
enter
inc
mov
jne
cli
mov
ss
shl
cld
add
mov
jge
outsl
in
out
ljmp
out
pop
outsb
orl
das
std
add
mov
push
fcmovu
cmp
dec
mov
jge
icebp
inc
adc
jo
sub
popf
add
xchg
xchg
and
and
cmp
scas
xchg
pop
out
mov
inc
clc
xchg
daa
sbb
les
in
ja
cli
cmpsb
outsl
in
xor
sub
or
jecxz
scas
lock
lret
add
jecxz
add
fiadds
sbb
lock
or
mov
data16
dec
shrl
icebp
dec
inc
int
ds
and
and
cmp
sub
mov
shrb
pop
insb
out
or
push
xchg
je
adc
lock
pop
cs
loopne
vpunpckhbw
stos
jae
int3
enter
adc
add
jle
aad
jns
popa
add
stos
enter
mov
adc
sbb
mov
jmp
xchg
test
and
add
loopne
fxch
mov
mov
pusha
in
inc
and
mov
mov
cmp
xor
ret
mov
cmpsl
jmp
inc
xlat
je
rclb
xlat
xchg
ret
inc
mov
sbb
out
cmp
mov
fildll
stos
and
or
gs
test
iret
scas
inc
add
idivb
fisttpll
mov
es
sub
pop
mov
repnz
xor
sahf
mov
rclb
add
push
jmp
xchg
push
mov
fldt
lock
add
fldt
mov
mov
push
pop
loop
sbb
mov
jecxz
popf
push
mov
sbb
add
sbb
mov
adc
sahf
out
or
cmpsb
jle
inc
inc
js
lret
add
push
mov
call
mov
mov
mov
cld
in
in
pusha
xchg
mov
cmp
add
fbstp
test
fbstp
mov
add
sbb
add
subl
shl
adc
jp
jmp
push
inc
stos
or
mov
pop
stos
pop
mov
sbb
pop
xchg
subl
mov
cwtl
xor
cmp
sbb
adc
adc
push
test
lds
push
nop
jmp
pop
sub
dec
stos
or
add
mov
inc
mov
push
mov
jg
movsl
and
movb
outsb
or
and
dec
mov
popa
je
push
cld
add
fwait
and
push
sbb
out
inc
lds
mov
mov
fists
test
testl
sub
push
sbb
pop
into
dec
xlat
push
bound
or
call
outsl
jp
insl
stos
cli
mov
dec
popf
cwtl
and
xchg
or
xorb
cld
or
jno
inc
mov
or
cmp
enter
outsb
fidivrl
jnp
xor
mov
push
sbb
mov
sbbl
push
jb
dec
cmp
jns
loopne
movl
dec
in
mov
test
cmpsb
sahf
add
or
xchg
adc
es
and
stos
sarb
outsb
add
add
xchg
xor
push
inc
jl
test
dec
in
inc
sub
push
popf
jg
outsb
add
sbb
mov
inc
sub
hlt
jecxz
adc
mov
mov
adc
outsb
adc
aam
shll
or
mov
cltd
inc
pop
and
add
inc
jmp
pop
add
xchg
dec
call
sub
andl
int3
leave
jo
inc
mulb
scas
sti
pop
lcall
sahf
mov
sbb
stos
mov
push
ret
in
add
decl
inc
jns
outsb
fsubrl
jnp
push
outsb
mov
daa
inc
push
sbb
and
iret
or
fsubp
jg
andb
xor
cmp
fstpl
cmp
outsl
sbb
pushf
adc
mov
dec
sbb
push
push
imul
mov
or
xchg
push
ror
in
add
es
push
fiadds
sub
inc
test
fists
inc
pop
add
mov
mov
cmp
dec
andb
or
sub
stos
add
add
movb
mov
mov
cld
xor
jns
mov
mov
cwtl
xor
or
xchg
inc
lcall
add
cmp
and
pop
add
stos
pop
mov
xor
jb
push
clc
cmc
and
ret
add
loopne
or
push
jae
mov
enter
ss
push
aaa
and
add
mov
mov
mov
adc
jmp
ret
insb
xchg
stc
inc
pop
pop
scas
rclb
push
xchg
scas
pushaw
mov
lds
or
imul
jo
inc
inc
mov
sbb
js
pop
stos
stos
mov
rclb
adc
mov
push
sub
dec
sahf
loop
sbb
mov
mov
push
inc
cwtl
sbb
iret
fimuls
roll
or
and
or
and
and
xlat
cmp
call
adc
mov
out
mov
sbb
cltd
push
mov
jl
sbb
dec
inc
mov
ds
push
mov
aas
xchg
cmp
and
insb
jge,pt
dec
aad
push
cmp
jle
stos
pop
test
jnp
fimuls
testb
sub
push
mov
bound
dec
push
ret
test
inc
xchg
shlb
test
ss
pop
shrb
enter
xor
pop
sub
ljmp
mov
sub
leave
pushf
inc
aaa
loope
hlt
add
dec
scas
inc
lret
hlt
cld
jg
clc
push
clc
xor
int3
pop
lret
mov
jge
add
xchg
ds
push
stc
pop
cld
data16
outsb
xchg
add
push
enter
aas
movsl
in
xor
fdivrp
mov
sbb
adc
sahf
fldt
push
daa
test
push
test
push
test
out
mov
and
add
inc
push
jle
mov
mov
sbbb
dec
xor
cld
fbstp
cwtl
outsl
cmp
lcall
xor
cltd
pop
sub
push
add
outsl
push
andb
mov
jae
fwait
lds
test
and
sti
stos
add
dec
rcll
les
mov
mov
mov
push
jnp
adc
push
sarb
and
push
out
jg
hlt
cmp
mov
pop
pop
roll
xchg
mov
fisttpl
cmp
pushf
dec
mov
mov
mov
adc
ret
test
out
mov
and
mov
sbb
mov
scas
jbe
dec
dec
xchg
rclb
xchg
xchg
enter
sbb
add
mov
add
inc
adc
lcall
int
adc
inc
mov
pop
jmp
fsubrl
lcall
and
sub
cld
push
scas
mov
dec
add
fnstsw
mov
jecxz
mov
mov
fs
jle
mov
push
inc
dec
js
sbb
stos
adc
sbb
arpl
ds
scas
ss
xchg
ja
fdiv
inc
mov
dec
mov
add
incl
adc
cmp
lret
or
sub
cmpsl
adc
mov
adc
adc
pop
stc
and
or
lock
add
xchg
mov
mov
sub
mov
and
pushf
aaa
pop
hlt
fidivs
cmp
call
or
or
xor
stos
adc
lods
adc
xchg
sub
popf
push
mov
clc
into
sub
outsb
or
inc
fisttps
fwait
ljmp
in
lods
push
mov
inc
cmpsb
and
push
lock
xchg
icebp
loop
shl
add
push
mov
push
jp
mov
gs
sub
cmpl
and
mov
push
sub
sub
ss
push
mov
inc
mov
add
stc
jl
stos
pop
push
shl
xor
mov
mov
dec
adc
loope
mov
jp
or
insl
xchg
sbb
xchg
cli
xchg
sub
cmpl
iret
outsl
pop
andb
fisubs
test
fdivs
push
mov
fbld
xor
inc
lahf
aas
in
shl
add
enter
push
dec
std
fildll
xchg
das
hlt
cld
pop
inc
add
jb
cli
sbb
and
pop
pop
push
or
clc
mov
pop
test
jge
jle
xchg
hlt
pushl
mov
inc
les
pushl
arpl
dec
and
push
push
movsl
sbb
imul
push
xor
mov
cmpl
adcl
cmpb
add
sbb
sub
mov
sub
mov
imul
sbb
pop
loop
aad
roll
sub
cmp
add
subb
mov
dec
push
sub
jno
cs
addr16
mov
mov
or
adc
insb
rcr
sub
je
inc
push
or
stos
mov
lret
lds
cmp
pop
inc
add
jo
pop
push
inc
push
lock
adc
mov
lock
mov
ja
push
call
pushf
test
mov
cmpsb
or
imulb
mov
nop
and
jl
and
push
push
push
dec
jb
mov
icebp
add
mov
dec
add
clc
mov
mov
sub
inc
xor
fdivs
push
pop
adc
aaa
cld
dec
ret
add
cltd
adc
push
leave
jo
pop
mov
push
arpl
out
stos
aad
test
ss
pop
add
movsb
adc
mov
dec
test
out
and
int3
adc
adc
jg
push
sub
incl
call
outsb
and
xchg
and
les
aas
cmp
imul
mov
mov
dec
dec
sbb
xor
and
xor
and
push
pop
lret
out
fcmovu
cmp
add
push
popf
dec
xor
lret
and
jl
pushl
add
mov
ret
inc
add
je
loop
jns
shrl
int3
and
xchg
add
ss
je
aaa
xchg
lahf
and
mov
pop
stos
and
jae
notl
je
xchg
pop
ret
in
mov
mov
xor
stos
orl
cmp
js
pop
aam
fcoml
outsl
inc
sub
ja
rcl
pop
mov
sahf
pop
jbe
mov
flds
cmp
and
es
out
inc
scas
sbb
xor
fisubl
push
test
pusha
or
cmp
push
bound
jmp
call
mov
jo
fistpl
nop
adc
and
negb
ret
cmc
imul
cli
inc
jl
js
pusha
daa
xchg
ljmp
add
mov
cmc
cmp
stos
and
mov
jg
dec
aaa
enter
movsb
fs
mov
jb
stos
ret
movsl
mov
call
mov
lret
xchg
mov
add
inc
popa
mov
in
xchg
xor
dec
xor
sub
je
loope
cld
fs
add
clc
out
dec
bound
xchg
xchg
jo
stos
xchg
ret
and
add
mov
orb
mov
dec
fistps
jae
add
ret
cmpb
mov
lds
jl
ja
test
cmp
loope
int3
add
pop
dec
jmp
test
pop
dec
push
xchg
daa
dec
add
dec
insb
cld
or
pop
ljmp
jbe
xor
notb
lcall
ret
push
fst
imul
cmpsl
bound
out
lea
aam
test
add
fdivrl
add
or
pushf
aam
and
push
lea
loopne
sbb
push
push
aam
jne
shrb
inc
fcmovnb
xchg
mov
and
adc
sbb
icebp
or
xchg
inc
push
fidivs
mov
pop
hlt
cld
in
push
pop
scas
xor
mov
jmp
mov
sub
fists
out
aaa
addb
mov
cmpsb
push
push
rcrb
in
lret
filds
or
call
jne
xchg
lahf
mov
loope
aas
sub
lcall
fdiv
push
add
mov
push
ret
sbb
loop
pop
pop
jl
mov
les
fcmovu
ret
lock
jl
adc
push
fists
enter
and
inc
repnz
jg
sbb
movl
sbb
or
mov
jge
fs
xchg
iret
adc
or
fs
insb
fwait
cwtl
jo
pop
mov
cld
insb
gs
push
dec
or
sbb
jbe
pop
xchg
fcompl
ret
jp
jmp
arpl
or
dec
sti
incb
sub
mov
pop
xchg
mov
shrb
loope
push
gs
xor
adcb
call
pusha
and
cltd
enter
or
jp
adc
mov
push
dec
pop
fbstp
sub
adc
dec
aaa
push
lcall
daa
mov
lock
cmp
clc
mov
scas
clc
mov
add
cwtl
mov
inc
dec
aas
and
sahf
pcmpgtd
std
aas
pop
mov
pop
aam
fcoml
jbe
addr16
mov
mov
cmpsb
dec
push
outsb
roll
je
sub
outsl
pop
mov
decl
cld
inc
faddl
stos
push
call
lods
jne
stos
clc
push
push
je
hlt
pop
lahf
add
mov
ficoml
jb
imull
nop
jns
mov
mov
push
mov
mov
adc
jmp
jg
inc
ret
mov
pop
cld
outsb
push
loopne
and
je
and
stos
dec
dec
popa
mov
pop
insl
xor
aad
adc
jbe
cld
pop
hlt
mov
pop
cmp
ds
aas
xchg
std
test
jne
add
or
sbb
out
cmpsl
mov
movsb
jbe
sarb
pop
mov
pop
test
pop
mov
mov
inc
movl
rolb
mov
push
xor
sub
aaa
incl
lret
or
int3
jmp
enter
mov
insb
mov
sub
push
pusha
xchg
jp
in
or
in
mov
test
adc
mov
sbb
xor
hlt
lahf
mov
add
sarb
cli
int3
add
jl
or
jle
jns
mov
scas
cli
push
inc
fs
xchg
test
cld
jo
pop
fdivr
sahf
hlt
pop
call
pop
push
jle
add
divb
sub
mov
je
pop
loopne
mov
enter
cmc
aaa
jb
jb
xor
mov
in
jo
cmp
xchg
test
insb
push
mov
xor
mov
mov
mov
xchg
imul
add
sti
call
int
lock
cmpsb
jp
or
decl
mov
pop
cmpsl
popa
enter
mul
sbb
dec
xor
push
add
inc
add
cmp
push
or
adc
pop
jns
sbb
push
pop
mov
clc
aad
xchg
cli
jg
dec
mov
into
scas
jg
addb
cmp
fbld
mov
dec
pop
ljmp
xor
mov
inc
nop
add
lret
sahf
adc
xchg
and
scas
jno
pop
adc
ret
mov
aam
cld
add
jnp
daa
pop
xchg
pop
and
mov
lret
lcall
mov
mov
sub
out
mov
inc
lahf
dec
xchg
testl
cmp
jmp
mov
insb
jo
sbb
sahf
enter
push
push
call
xchg
call
les
testl
pop
int3
lcall
insb
sub
mov
mov
std
ljmp
ds
jecxz
add
adc
sub
loope
pop
fmull
negl
inc
das
mov
lret
fwait
add
sbb
cmpsb
scas
movsl
inc
mov
sub
or
ficomps
push
mov
in
or
push
xchg
out
mov
sbb
jnp
mov
lock
ds
or
popw
aas
cli
jbe
imul
inc
mov
out
fmul
cld
dec
rorl
sbb
ficoms
adc
notb
add
xor
push
cmp
or
leave
push
lods
cmp
add
push
or
fdivs
test
imulb
int3
xor
sub
mov
stos
push
ljmp
shrl
or
adcb
inc
inc
adc
sub
sar
dec
mov
sub
movsb
sub
rcr
shr
sti
test
cmp
xor
icebp
nop
inc
push
push
rcll
pusha
inc
jge
addr16
aam
push
sbb
mov
dec
mov
sub
mov
mov
pop
sbb
scas
hlt
push
inc
call
mov
push
bound
test
les
rcll
push
test
movsl
gs
sbb
call
or
daa
movsl
cmc
inc
and
pop
lcall
fdivr
push
cmp
dec
dec
icebp
outsb
push
xor
and
incl
les
xchg
nop
roll
xchg
and
orb
and
insb
inc
or
xchg
in
dec
addl
sub
add
jge
mov
leave
cmpsl
outsb
pop
loopne
cmp
das
clc
fcomip
cmp
test
add
or
xchg
mov
xchg
sub
dec
dec
xor
pop
lock
sub
mov
and
jo
mov
ljmp
fwait
mov
mov
inc
les
std
jb
adc
adc
push
or
push
in
and
shlb
and
jge
int
xor
sbb
sub
xchg
call
push
in
jp
sbb
add
sub
outsl
cli
mov
dec
adc
or
push
adc
lcall
test
add
ljmp
cmpsl
xchg
xor
js
cmp
incb
fs
idivl
daa
rorl
add
lcall
jmp
sub
rorl
add
xchg
ds
fidivrs
daa
rclb
imul
dec
cmp
lds
sbb
xor
rcrl
test
and
cmp
lahf
push
leave
loopne
push
clc
je
xchg
enter
xorb
incl
add
in
notb
push
inc
or
fcmovnb
mov
rolb
fs
ret
mov
pop
mov
add
adc
aad
test
lock
clc
cmp
lods
mov
shrb
inc
sub
and
arpl
shrb
xchg
movsl
loope
mov
in
jg
int
rcl
add
mov
cmp
cld
and
insb
add
sub
ret
popl
cmp
popl
lea
add
inc
fsts
iret
push
pop
das
mov
outsl
adc
pusha
jg
mov
and
cltd
pop
push
or
pushl
xchg
xchg
fucompp
fimull
les
incl
xor
pop
loope
mov
repnz
xchg
gs
add
push
aam
dec
inc
aam
cmc
push
jecxz
or
push
test
or
cltd
sbb
clc
and
or
out
mov
xor
mov
pop
xor
push
inc
pop
or
mov
xor
push
subb
aas
ljmp
add
push
loopne
testl
mov
ljmp
std
push
and
outsb
add
clc
mov
dec
ss
js
std
sahf
loopne
shrl
cli
adc
pusha
outsl
adc
loopne
push
inc
clc
aaa
loopne
pushf
fisubrs
xor
adc
mov
xchg
and
das
loope
sbb
pop
push
mov
xor
push
test
mov
fisubrs
inc
sub
mov
pop
cmp
lahf
mov
icebp
out
mov
mov
sti
inc
dec
cmpsl
out
or
outsb
inc
clc
xchg
pop
push
xor
dec
or
mov
and
repnz
jmp
aaa
rolb
add
lods
jne
sbb
ficompl
or
and
out
xchg
lods
fdivp
cli
add
cmpsb
pop
mov
cmp
adc
mov
test
or
pop
imul
xchg
adc
mov
int
pop
loopne
adc
sbb
sahf
jb
xlat
shll
sub
mov
jo
or
cs
inc
add
mov
sti
xchg
xchg
add
xchg
lock
cld
mov
jno
xor
mov
out
xor
clc
sub
ret
sub
enter
mov
cmpsb
dec
push
xchg
insb
xchg
or
push
dec
add
imull
cmp
lds
mov
pushf
jbe
adc
andb
jbe
cltd
adc
sbb
das
cli
jbe
ret
xchg
pusha
mov
cltd
push
add
lret
mov
push
in
aas
outsb
mov
pop
mov
pushf
icebp
sbb
cmp
fs
mov
fmul
aam
add
js
pushl
xchg
jne
pop
fstpl
add
rcl
pop
cmp
fisttps
add
adc
icebp
and
clc
mov
sub
or
and
dec
mov
inc
jg
lret
cli
sub
icebp
pop
push
mov
push
add
neg
movsl
jne
cmp
pop
test
xor
and
xchg
jg
and
cmp
pop
add
stos
add
cli
popf
xor
stc
popf
ret
les
adc
lds
mov
and
sub
ss
cmp
pop
cli
lods
xchg
fistpll
gs
ljmp
fisubrl
icebp
sbbb
jmp
inc
aad
dec
jecxz
test
mov
inc
sub
mov
cmp
jbe
mov
push
inc
loopne
mov
push
mov
je
inc
fsubrs
orl
repz
inc
in
out
cmpsb
mov
jb
pop
mov
in
jle
enterw
hlt
mov
loop
jge
lret
inc
xchg
xchg
mov
dec
mov
push
add
add
inc
mov
adc
push
mov
leave
movsb
xchg
js
nop
sahf
push
fwait
cmp
pop
sbb
cmp
dec
icebp
fimull
rorb
cmpsb
and
add
jns
inc
hlt
dec
sub
insb
add
and
cld
call
add
daa
or
rep
sub
ret
aad
inc
incl
or
icebp
jb
mov
adc
ss
mov
ja
rorb
jne
ret
dec
insb
adc
outsl
test
iret
pusha
xchg
fmuls
and
add
dec
jbe
or
inc
mov
push
jno
fstpt
xchg
pop
adc
jne
lcall
cld
les
add
sti
dec
bound
test
scas
cs
or
push
sbb
mov
xor
icebp
lcall
repnz
sbb
add
cli
pop
pop
add
mov
lock
sub
pop
add
push
roll
push
mov
aaa
jmp
adc
push
push
jne
pop
les
inc
xchg
repz
js
xchg
add
js
gs
mov
or
dec
inc
mov
cmp
es
pop
fimuls
adc
inc
test
mov
xor
push
add
push
int
test
loope
inc
stos
ds
jnp
ljmp
add
mov
mov
test
mov
movsb
or
fadds
adc
pop
push
punpckhbw
push
jle
inc
outsb
clc
jg
stos
mov
je
in
push
sahf
add
xor
inc
jge
inc
jo
adc
push
mov
push
jo
mov
jp
cmp
adc
add
out
frstor
mov
test
scas
push
std
mov
cmp
cmp
dec
aaa
insb
pop
hlt
hlt
das
dec
inc
in
or
mov
mov
hlt
notb
or
icebp
jle
xchg
je
popw
fildl
xor
aas
add
add
jmp
cld
pop
loopne
fbld
scas
xchg
dec
mov
dec
push
icebp
ret
sbb
inc
jl
cli
jbe
call
pop
hlt
out
rolb
pop
mov
jmp
ja
xchg
jp
rorb
faddl
xchg
sbb
scas
push
aaa
inc
mov
nop
dec
add
movb
cmp
push
push
popa
addb
das
mov
xchg
xchg
push
inc
out
push
jnp
bound
sbb
mov
push
inc
mov
inc
xlat
xor
xchg
outsb
adc
enter
xchg
sti
mov
adc
inc
pop
test
sub
mov
ret
push
xchg
cmpsl
loopne
sahf
xor
stc
aas
mov
cmp
popf
sub
add
mov
icebp
outsl
fdivs
adcb
add
loope
adc
rcr
xor
and
xchg
or
call
or
stc
clc
xor
mov
rcr
add
arpl
adc
pop
inc
xchg
fists
jg
notb
jle
mov
jb
inc
lods
xchg
and
movl
cwtl
in
mov
outsb
adc
jg
jo
or
xlat
test
out
rclb
stos
or
nop
pop
lods
mov
xor
mov
loop
cld
mov
cmp
add
mov
mov
daa
nop
test
cli
mov
clc
cmp
fidivrl
rorb
call
add
pop
jg
aam
lcall
xchg
clc
nop
add
xorb
iret
test
push
pop
or
ljmp
lcall
fucomip
xor
stos
xchg
lret
lock
aas
pop
add
sbb
es
incl
rolb
pushf
xchg
mov
lahf
ds
in
icebp
cmp
rcrb
test
icebp
mov
pop
call
pop
mov
fcmovnbe
mov
add
into
cmp
aaa
outsb
xor
lods
or
inc
pop
out
pusha
nop
jae
in
jmp
and
inc
mov
and
int
cld
cmp
das
test
lock
decl
sbb
or
incl
add
jecxz
mov
ldmxcsr
jg
icebp
call
jb
mov
loop
cmp
insl
repz
cmp
xor
adc
inc
inc
es
popa
nop
inc
stos
outsl
push
pop
add
mov
inc
bound
cmp
out
ljmp
movsl
shll
inc
xchg
and
rorb
aaa
aam
shr
daa
ljmp
adc
push
div
js,pn
dec
repz
or
add
mov
or
insb
mov
mov
push
cmpsl
es
ret
jmp
xchg
ds
mov
xorb
push
mov
shll
xchg
jbe
cmp
xor
jno
insl
cli
add
ret
fdivrl
xchg
pop
push
idivl
inc
pop
xor
add
mov
mov
ds
sahf
ds
stos
scas
xchg
xchg
sub
clc
aas
lea
add
mov
ss
jne
adc
imul
fcoms
push
mov
and
arpl
xchg
std
scas
out
scas
add
xor
adc
jbe
sbb
xor
sbb
adc
mov
add
fisubs
or
xor
mov
push
pop
mov
adc
pop
adc
jp
pop
decl
out
mov
xorb
dec
lahf
out
sub
inc
xor
movl
or
icebp
add
into
inc
mov
aaa
cmp
inc
adc
js
pop
mov
scas
add
sbbb
or
das
loope
int
push
add
es
xchg
test
js
mov
sbb
aaa
cld
insb
mov
aaa
sahf
mov
push
mov
xor
add
inc
cwtl
out
dec
movsb
faddp
or
inc
push
push
sub
mov
xchg
cs
in
jle
rcrb
pop
mov
rorb
hlt
divl
mov
ja
adc
and
jg
insb
sub
cli
sbb
pop
shll
in
movsb
mov
cmp
rcr
leave
jo
add
jge
or
ret
into
or
mov
lds
imul
mov
mov
les
or
cld
or
dec
je
fists
shll
dec
scas
adc
sbb
nop
inc
push
add
push
and
inc
inc
cmp
mov
push
adc
push
or
pusha
add
loopne
mov
xchg
add
scas
clc
mov
leave
adc
xchg
inc
test
mov
mov
add
mulb
outsb
aaa
out
bound
lds
mov
and
and
mov
popf
jb
loopne
sbb
cmp
hlt
mov
xchg
xchg
xchg
dec
push
inc
std
je
insb
cmp
xchg
fwait
int3
test
jb
shll
jl
movsb
dec
ret
jb
and
jl
scas
mov
push
es
jns
pop
adc
adc
int3
lret
test
xchg
loop
jne
shl
mov
hlt
and
clc
ja
mov
and
popf
sbb
push
into
push
pop
dec
mov
fwait
lcall
or
push
push
jo
lods
jae
mov
cli
sbb
jnp
fiadds
jo
push
loope
mov
dec
sbb
test
inc
into
in
xchg
jp
sub
adc
decb
dec
push
push
cmp
push
adc
js
scas
and
out
jg
ljmp
xor
movsb
pop
filds
mov
xor
addl
xchg
orb
pop
xchg
call
mov
xor
inc
cmp
lahf
add
ljmp
test
lods
fsubs
mov
int3
popf
dec
cmp
push
jle
rcrb
mov
aad
mov
xor
mov
xor
js
pop
std
cmp
and
mov
subl
test
incl
out
add
xchg
cli
mov
in
jbe
ficomps
xchg
add
push
inc
lcall
xlat
sbb
roll
filds
push
sub
mov
pop
push
call
mov
xor
xor
xchg
cli
pop
or
cwtl
sub
pop
mov
aaa
sbb
mov
lret
inc
push
sub
jnp
out
sub
xchg
shll
lods
fcoml
push
or
cmp
dec
std
mov
and
bound
mull
call
mov
mov
mov
dec
jp
adc
push
mov
xchg
lcall
push
jb
mov
mov
fwait
mov
jg
adc
add
adc
test
sbb
call
sub
popf
ljmp
pusha
adc
das
pushf
jl
insl
scas
xor
sbb
cltd
lock
lcall
push
push
adc
pop
ret
test
add
xor
arpl
lcall
pop
lahf
cmp
lds
inc
sbb
addl
jg
and
inc
lret
popf
mov
pop
fbstp
call
mov
mov
sbb
js
call
cwtl
fucom
push
or
sti
jp
cltd
dec
repnz
mov
fs
arpl
lock
pop
sub
leave
test
popf
aaa
xchg
in
testl
ja
sti
mov
pop
clc
and
xchg
sub
stos
push
aaa
jne
negb
filds
es
sub
push
mov
or
inc
xor
stos
xorb
inc
outsl
adcb
adc
add
scas
dec
dec
ja
arpl
jp
mov
push
push
inc
sbb
aam
cwtl
or
add
std
outsl
push
icebp
cltd
cmc
inc
adc
xchg
jmp
test
mov
repnz
hlt
or
mov
add
lods
adc
adc
push
mov
mov
ljmp
mov
sbb
xchg
pushf
cmp
data16
jae
fs
test
dec
sub
push
cmp
pop
iret
mulb
pop
into
cmpsb
shll
into
cld
test
pop
fs
mov
int
push
push
jge
mov
add
inc
arpl
inc
and
aas
shrb
repz
cli
xor
mov
cmp
jo
sbb
xchg
shrl
xchg
orl
and
outsb
mov
add
lock
cmp
aam
sbb
fstpl
mov
imul
or
xor
je
inc
clc
pop
clc
mov
aaa
dec
mov
pop
inc
icebp
lods
sbb
data16
hlt
call
push
out
cmp
sub
add
push
aas
popa
ss
xchg
mov
ja
jne
icebp
cli
stos
fisubrl
dec
xchg
repnz
dec
pop
test
add
mov
xchg
sub
push
ss
jb
fisubs
insb
and
adc
mov
push
fs
insb
or
lods
pushl
sub
sub
add
adc
rcl
lock
xor
clc
xchg
push
sbb
pop
test
mov
inc
sbb
inc
xor
inc
push
sahf
inc
into
subl
out
dec
or
mov
shr
mov
mov
faddl
sar
sub
xchg
mov
ljmp
loopne
or
dec
push
loopne
nop
mov
aaa
lock
test
pop
jg
shlb
data16
sbb
jl
sbb
xchg
dec
loope
nop
fwait
imul
jo
mov
xchg
aaa
cld
push
fcoms
or
and
xchg
arpl
call
mov
cmp
add
lcall
or
xlat
fistps
push
sbb
sub
inc
xchg
popa
and
xchg
mov
dec
es
adc
shrb
add
cwtl
xlat
xchg
xchg
loop
pop
cmc
fwait
sbb
sub
jae
ret
add
jge
test
fcomp
dec
pusha
pop
add
jecxz
mov
or
adc
fwait
loop
inc
aaa
add
inc
pop
dec
je
cmp
repnz
jo
dec
mov
add
adc
andb
inc
pushl
mov
adc
or
inc
mov
xchg
sub
ss
das
ret
mov
fisttps
or
adc
cli
mov
xchg
add
push
xor
mov
cld
pop
mov
mov
and
push
cmpl
je
sbb
rcrl
rolb
xchg
rcrb
add
les
fsts
lods
jmp
incl
jo
aaa
jo
cmpsl
addb
push
mov
test
mov
addr16
lahf
mov
loopne
cmpsl
sbbb
pushl
hlt
out
mov
rolb
fimull
xchg
lea
adc
pop
add
lods
imul
test
mov
ret
cmp
gs
push
aam
and
pop
and
mov
loopne
test
mov
cmp
cmp
mov
mov
sub
xor
push
nop
and
inc
add
push
mov
inc
aam
enter
inc
movsl
lds
imul
inc
clc
inc
out
aam
cld
pusha
cltd
orl
test
xchg
inc
hlt
pop
daa
fdivrl
outsb
push
jb
pop
push
shlb
or
jo
inc
ljmp
mov
outsl
cmp
gs
shrb
xor
xchg
sti
idivl
dec
dec
sub
inc
mov
push
cmp
in
stos
iret
lcall
sub
mov
mov
clc
adc
sbb
add
es
mov
dec
movsl
dec
movsb
inc
mov
lods
sahf
iret
mov
or
adc
shr
mov
xor
loop
test
popf
fsubrs
inc
fs
andb
in
inc
test
fbld
jbe
xchg
add
cwtl
jo
arpl
fisubl
xlat
inc
mov
inc
aad
xor
orl
push
pusha
not
scas
ss
and
subl
fucomi
mov
das
inc
shlb
out
bound
pop
shr
cltd
lock
lods
or
push
push
xchg
movsb
jl
jns
pop
cld
clc
cld
mov
sbb
xor
scas
push
pusha
fdivrp
outsb
incl
dec
test
decl
push
cmp
mov
int3
xchg
jbe
xor
jnp
adc
mov
mov
pop
rcrl
jmp
inc
cmp
lcall
test
xor
mov
ljmp
push
cmp
lahf
and
xor
and
push
inc
mov
add
jbe
outsb
ljmp
hlt
cmp
xor
stos
sbb
test
outsb
add
pop
or
xchg
pushf
add
push
cld
pop
icebp
decl
iret
out
cmp
ljmp
test
sarl
aaa
cld
dec
or
inc
push
fldcw
sub
decl
adc
sbb
and
lock
icebp
cwtl
and
test
mov
add
add
test
cld
mov
pop
mov
sub
sub
iret
jb
dec
mov
mov
pushl
xchg
mov
cli
xchg
dec
xor
stos
nop
aaa
pop
mov
or
shlb
in
push
push
xor
sub
ret
xchg
cmp
dec
nop
xchg
inc
sti
fsubs
cmp
lock
inc
lcall
jne
fwait
ljmp
and
addr16
add
inc
incl
or
les
je
mov
scas
cli
int
stos
std
add
es
cmc
icebp
rcrb
inc
pushf
loope
mov
lea
mov
in
cmp
mov
movsb
ljmp
mov
scas
mov
int
stc
dec
adc
jae
stc
add
mov
imul
cmp
pop
loopne
pusha
mov
push
or
cmp
loop
sbb
xlat
daa
ljmp
jo
jne
add
ljmp
inc
dec
and
and
or
pop
int3
mov
mov
mov
int3
push
jp
inc
lock
xchg
add
push
jle
push
xor
push
adc
fnsave
addr16
mov
adc
sbb
nop
or
inc
xor
mov
inc
fistpl
push
hlt
mov
or
cli
or
gs
mov
add
cltd
and
stos
outsb
push
jb
add
push
add
jo
mov
mov
inc
sbb
out
adc
and
lcall
pop
push
in
jge
ds
aaa
push
or
out
cmp
rorl
or
mov
push
mov
loop
push
pop
sbb
outsb
mov
mov
push
shll
push
or
dec
rolb
aam
cmp
andl
in
push
pop
sti
bound
mov
xor
or
in
adc
scas
stc
sbb
cwtl
cmp
loopne
mov
sub
call
fcmovb
les
or
push
negl
das
mov
add
xor
xchg
push
mov
cmp
fiaddl
frstor
daa
mov
sbb
xchg
and
and
and
push
fcmove
mov
pop
push
adc
mov
jg
push
push
dec
pop
mov
cmp
in
sbb
ds
cmc
xchg
and
mov
jge
push
jae
pop
mov
push
std
pop
jl
mov
ljmp
es
dec
mov
ret
shlb
adc
add
into
cmp
aaa
mov
mov
pushf
jle
lods
add
xchg
test
push
insb
cmp
jo
je
ror
mov
cmp
add
in
push
pop
push
pop
fnstcw
je
rol
leave
orl
push
or
xchg
mov
imul
jb
adc
movl
and
xchg
fiadds
pop
in
cmp
xchg
sbb
lods
pop
sbb
push
shrl
lret
test
push
mov
int
mov
add
cli
mov
fwait
popa
jae
fs
xorb
cmp
push
xchg
icebp
call
add
xor
adcl
insl
pushf
addb
inc
xchg
xor
xor
jmp
test
mov
xor
mov
adc
push
mov
or
add
rclb
push
rcl
xor
push
pop
bound
out
loopne
dec
mov
xchg
mov
ljmp
daa
add
icebp
icebp
mov
dec
nop
test
inc
or
cmp
orb
mov
pushf
xchg
movsb
shlb
jmp
insb
sub
dec
ret
inc
dec
aad
and
mov
call
dec
cmp
xor
jge
cmpsb
mov
sub
add
xor
add
pop
lock
clc
mov
push
push
jmp
cltd
mov
pop
rorb
std
lcall
imul
shll
roll
gs
js
add
outsb
mov
enter
xchg
mov
inc
into
rcl
subb
ja
dec
mov
mov
cmp
xchg
loop
mov
push
sbb
fistpll
pop
mov
push
ficoml
stos
dec
adc
pushf
es
inc
sub
dec
lds
mov
xchg
xor
test
stos
arpl
imul
adc
xor
cmc
sti
push
cld
and
lcall
xor
hlt
in
imul
lcall
scas
adc
push
cld
and
inc
and
add
adc
xor
outsb
rcrb
call
js
push
sbb
mov
into
mov
stos
fimull
fdivrl
xchg
push
mov
xchg
push
sbb
movsl
movsb
push
cld
dec
push
pop
gs
iret
je
inc
jl
scas
push
xor
sbb
jle
push
mov
ret
xlat
mov
test
cld
out
gs
xchg
pusha
mov
scas
sbb
xlat
jge
jecxz
scas
sbb
decl
cmc
lcall
jno
push
cwtl
stos
xor
pop
jne
and
push
cmp
ret
adc
push
dec
mov
pushl
insb
gs
loop
or
or
nop
hlt
out
hlt
jl
or
ds
push
call
pop
loop
mov
int3
mov
fwait
or
sbbl
jne
aad
loope
add
mov
ret
mov
sub
jae
in
add
sbb
mov
scas
movsl
aas
push
mov
sbb
invlpg
xchg
into
movl
sub
arpl
call
cltd
lods
femms
ret
add
push
jl
pop
mov
or
lock
push
test
loopne
mov
mov
add
mov
in
fwait
dec
in
enter
imul
sub
test
jmp
dec
fdivrl
mov
data16
addb
setp
push
daa
nop
push
pop
mov
xchg
mov
add
data16
inc
dec
iret
jbe
push
jl
pop
push
push
sarb
lock
cmpb
in
push
scas
jne
int
int
test
scas
mov
insb
add
mov
xor
shrb
push
cmc
and
add
inc
or
xchg
js
ljmp
xchg
add
xchg
ficomps
out
fmul
fs
inc
xor
add
mov
and
dec
fwait
test
xor
add
lcall
sbb
in
fcoml
cs
cmpsl
or
popf
push
cs
xchg
mov
loopne
add
xchg
or
out
incl
and
roll
cmp
cli
and
mov
repz
pop
es
push
add
addr16
es
pushf
pop
adc
or
sub
push
popf
mov
aam
jbe
cmpsl
ljmp
jnp
data16
push
lahf
or
mov
mov
sub
shl
pop
ret
pop
mov
mov
lds
pop
repz
push
and
mov
jge
outsb
mov
mov
repz
out
and
pop
jp
sbb
inc
xchg
aam
ret
jbe
mov
xor
xlat
fs
pop
xchg
mov
adcb
mov
es
fsts
cld
orb
inc
cmp
aas
jb
sahf
and
gs
cld
push
add
mov
cmpb
cmp
mov
mov
loopne
cli
int3
fdiv
imul
sub
adc
loop
sub
cmpsb
and
jle
add
popa
xchg
fwait
std
lds
add
dec
sub
aas
mov
jg
hlt
mov
and
sbb
imul
push
sub
pop
cmp
mov
loope
push
lret
loop
pop
sbb
sub
loopne
mov
pop
js
inc
sbb
test
sarb
add
cld
push
mov
mov
jbe
jo
xor
arpl
mov
scas
cmc
sbb
cmp
and
addr16
mov
scas
addb
dec
add
int3
rcrb
lcall
sub
and
lea
lret
mov
out
aam
data16
xchg
test
push
aas
push
iret
mov
cmp
inc
cmpl
pop
imulb
ficompl
pop
adc
mov
lock
loop
mov
xor
es
inc
jnp
pop
and
mov
ret
mov
inc
inc
mov
icebp
mov
xchg
xchg
xor
js
mov
add
inc
pop
push
fnsave
mov
notb
sub
loopne
mov
leave
inc
inc
lea
mov
jno
jl
and
clc
roll
je
nop
inc
clc
xor
jp
pop
aas
dec
addr16
inc
stos
push
cwtl
xchg
stos
sbb
adc
addr16
sub
in
call
push
sahf
pop
pop
mov
aam
and
mov
lock
insl
xor
ret
lret
enter
cmpb
cli
pushl
dec
dec
and
mov
cmp
loopne
xchg
jg
movsl
fldcw
cmp
push
cmp
sub
subb
push
xchg
mov
adc
decl
clc
pop
fdiv
pusha
shll
sbb
adc
out
adc
mov
inc
pop
pushl
inc
jmp
push
mov
aam
sub
sub
dec
jg
ret
sbb
mov
test
mov
add
xchg
mov
cmp
jg
cmc
ljmp
je
cmp
sub
or
sbb
mov
std
ficoml
jle
and
sub
out
rcll
push
cmpsl
jo
test
outsb
adc
inc
iret
sarb
pushl
mov
add
leave
jp
mov
fsts
adc
xchg
mov
push
and
cmpl
push
jns
inc
sub
movsl
jnp
aaa
inc
stos
xchg
push
cltd
incl
push
mov
popa
in
fcoml
cmp
stos
rcrb
clc
je
pop
movsl
xchg
and
fcom
in
clc
adc
aad
hlt
mov
ja
loope
leave
sbb
outsl
pushl
ljmp
cld
adc
cmp
test
or
cmpsl
out
jg
js
mov
pushf
and
fs
sbb
inc
ds
aaa
jecxz
xor
daa
pop
pop
and
ljmp
add
insb
sbb
mov
fsubs
int
and
jg,pn
cwtl
mov
sbb
loopne
dec
pop
xchg
cmp
fcomip
inc
adc
adc
dec
loope
jmp
pushfw
sub
adc
dec
inc
je
aad
push
test
xchg
sbb
clc
movsb
sbbl
xlat
ret
cmpsb
sbb
in
hlt
mov
add
pop
sti
cmp
shlb
pop
add
adc
mov
sbb
or
jmp
shlb
call
xor
pop
push
jge
mov
inc
mov
adc
and
out
mov
add
imul
or
fistpll
lea
cli
je
xchg
lret
sub
icebp
mov
mov
mov
mov
inc
daa
or
sub
filds
mov
sub
js
mov
sbb
pop
in
pop
and
loopne
jge
inc
jecxz
adc
dec
push
rol
or
scas
cli
cmp
mov
cmpsl
test
mov
add
add
sbb
mov
lea
cmp
les
dec
stos
and
stos
das
adc
imul
out
les
insb
dec
jmp
push
xchg
cmp
cmp
scas
filds
mov
scas
add
push
inc
and
push
mov
clc
aaa
inc
sbbb
cmp
add
outsl
sbb
mov
lock
xor
and
dec
movl
xchg
test
or
hlt
lds
and
sahf
mov
and
xchg
push
mov
es
enter
xor
dec
pop
sub
out
jp
xchg
adc
lds
in
inc
dec
nop
xor
lods
sbb
cmpsb
ja
push
push
push
jo
jb
sub
cs
sbb
mov
xchg
xor
mov
inc
mov
mov
orb
cmp
push
jle
lock
mov
adc
nop
sbb
addr16
mov
ljmp
dec
mov
mov
sbb
push
or
add
pop
lcall
xor
and
mov
insb
add
icebp
jbe
xor
sbb
dec
data16
ficomps
addr16
out
in
or
ss
adc
cmpsb
rorb
mov
rep
aas
cmp
xchg
or
mov
sub
mov
add
test
test
jno
mov
xor
adc
les
add
jno
and
pop
movsb
push
adc
dec
ret
xchg
dec
mov
mov
push
xor
leave
xchg
movsl
mov
stos
fsub
test
inc
divl
decb
ds
push
and
jns
loope
dec
add
push
adc
dec
adc
mov
lock
xor
loopne
jl
aam
in
cs
std
push
lahf
lret
mov
ja
add
mov
push
mov
cmp
and
fwait
mov
or
xor
out
adc
xor
js
pop
loope
sbb
orb
pusha
andl
mov
push
inc
sti
shlb
imul
xor
popl
jno
les
or
or
sub
leave
sbbb
loop,pn
xlat
ljmp
das
lahf
mov
loop
sbb
pop
fstps
daa
push
gs
xchg
jge
enter
sub
fnstcw
cmp
pop
clc
jb
and
out
testb
movsl
cmp
cmp
add
cmp
mov
js
mov
mov
adc
repnz
dec
sarl
pop
test
mov
and
add
push
subb
jne
sbb
lret
out
push
shl
push
hlt
inc
mov
ljmp
adc
xor
repnz
bound
cwtl
cwtl
shlb
jne
iret
pop
jp
stos
fsubl
cmp
sbb
or
mov
inc
mov
out
daa
add
out
adc
xchg
xchg
inc
add
scas
mov
popa
mov
scas
cmp
inc
popf
mov
add
adc
test
bound
je
idiv
adc
push
and
pop
and
rorb
lcall
add
and
jo
clc
loopne,pn
in
sbb
movsb
in
dec
add
cmp
in
mov
imul
push
mov
rcrb
mov
hlt
xor
mov
iret
aam
aam
dec
sti
fwait
orb
mov
sub
inc
cmp
sub
lock
aas
pop
mov
push
cli
inc
sub
pop
inc
fisttpll
mov
sbb
lods
andb
pop
and
aad
daa
jbe
in
or
in
inc
mov
sbbb
add
fisubrl
adc
mov
pop
pop
cmc
push
dec
cwtl
out
bound
cmc
mov
cmp
dec
test
pop
clc
and
movsl
or
jns
test
sbb
stos
mov
ret
push
or
sbb
mov
mov
xchg
push
pushl
repz
arpl
rcl
addr16
inc
xlat
push
mov
sub
jmp
adc
sub
and
adc
ljmp
pushf
cmpsl
adc
mov
inc
or
movsb
subb
xor
mov
cltd
jno
add
decl
pop
shrb
jl
pop
cmp
mov
and
fcoms
cmp
repnz
ficoms
out
inc
sub
fiaddl
lds
aad
into
jge
adc
push
inc
adc
push
jle
inc
std
push
je
pushf
addr16
pop
test
mov
or
out
ss
inc
lret
push
inc
mov
ja
mov
jl
xor
dec
ret
mov
movsb
push
lock
mov
xchg
aas
mov
xchg
cmp
lods
jp
sub
push
pop
pop
push
loopne
xchg
fdivrl
xchg
xchg
inc
fs
inc
mov
xsaveopt
and
cmp
mov
pusha
ret
or
lods
dec
add
sub
pop
test
out
es
mov
hlt
jecxz
jmp
xchg
adc
divb
mov
cld
stos
mov
aad
jo
add
cmpsb
jo
and
adc
incb
pushw
add
in
adc
adcb
push
sbb
inc
shrl
xchg
insb
stos
imul
cmp
les
pop
cmp
and
mov
loope
xchg
adc
je
cmp
and
sbb
stos
inc
jl
sub
test
mov
inc
daa
icebp
jg
in
xchg
push
loope
roll
pop
in
and
jo
ja
adc
add
mov
inc
cmpl
jne
inc
and
test
sub
xlat
in
mov
add
scas
xchg
inc
or
inc
add
data16
fdivrp
mov
sub
push
popa
xor
xlat
pop
dec
fdivrp
add
mov
or
sub
icebp
push
mov
mov
inc
clc
in
cmp
push
pop
xor
aas
mov
xchg
ljmp
pusha
push
push
out
pop
mov
aaa
insb
clc
jecxz
cmp
sbb
or
push
leave
push
jge
inc
xchg
test
test
mov
ret
push
sub
xor
push
in
add
int
xchg
in
pop
std
out
push
sahf
add
loop
xorb
arpl
jnp
ret
xlat
or
push
mov
repnz
jg
sbb
pushf
sbb
pop
cmp
and
mov
adc
sbb
inc
add
xchg
jle
sub
xchg
fistps
je
test
sub
jl
mov
dec
adc
dec
pop
aam
sbb
mov
sub
sbb
cmp
repz
cli
push
adc
or
lds
mov
or
pop
or
jle
mov
cmp
xor
push
pop
or
jbe
repnz
adc
push
add
das
mov
pop
int3
mov
adc
daa
push
and
cmp
mov
add
mov
pusha
adc
sar
mov
push
ds
push
testb
mov
fmull
scas
pusha
xchg
cmp
dec
pop
push
push
pop
pop
sub
or
mov
xchg
fcmovbe
sub
fldl
loope
mov
inc
sbb
mov
pop
dec
sub
sbb
push
clc
inc
sbb
add
inc
aaa
jl
lahf
xor
inc
sbb
sarb
mov
lret
repnz
sbb
and
mov
loop
cmpsb
mov
mov
sbb
push
loopne
and
aad
in
into
push
sbb
test
sub
or
and
clc
xchg
dec
cwtl
jnp
addr16
mov
mov
mov
loope
pusha
insb
push
sub
mov
movsl
cmc
xor
xchg
scas
xchg
add
cmpsb
jecxz
mov
jl
dec
add
scas
bound
jno
sub
mov
pusha
ja
iret
adc
sti
scas
lret
sbb
fistl
sbb
cmp
pop
ret
mov
fs
mov
hlt
sub
jecxz
add
adc
imulb
xor
xlat
in
sbb
stos
iret
pop
sub
fisubrl
add
cmp
in
inc
xor
jmp
repnz
sbb
mov
sub
adc
test
mov
movsl
cmpsb
push
push
dec
mov
mov
orl
pusha
dec
lret
adcb
push
mov
mov
add
mov
stos
pop
mov
outsb
cmp
stos
nop
lods
mov
jecxz
cli
lock
das
test
sub
stos
add
pushf
xchg
out
and
lock
mov
movsl
les
test
push
push
xor
popa
adc
mov
cmpsb
outsl
das
ret
aas
adc
pop
jb
ljmp
mov
push
sahf
loopne
aad
or
add
xchg
in
inc
ja
mov
push
sub
add
loopne
ret
lock
mov
test
dec
inc
jbe
sbb
jmp
aad
push
push
mov
mov
sbb
into
and
lock
mov
cmp
mov
cmp
jb,pn
jle
cltd
adc
inc
or
in
sub
add
icebp
xor
fbstp
je
xchg
sub
dec
ds
add
push
lods
fldt
outsl
or
mov
je
sub
add
data16
fwait
fwait
addb
add
jns
jne
roll
pushf
imul
adc
into
push
rolb
flds
cmpsb
das
cli
sub
adc
into
push
cmpsl
test
pop
or
out
push
pop
in
xchg
pop
addb
mov
sub
enter
fsts
and
inc
jl
and
add
xor
inc
fistl
adc
outsb
sarb
pusha
push
mov
ss
inc
cwtl
hlt
and
mov
pop
data16
fdivr
lahf
int
call
aaa
or
push
popf
pop
jp
subl
mov
and
std
scas
and
mulb
outsl
pop
and
rcrb
clc
pop
jmp
xchg
mov
dec
mov
xchg
add
jmp
adc
add
outsb
xchg
shlb
adc
or
dec
adc
and
loope
hlt
cmp
cmp
xor
pop
lds
repz
dec
cmp
lret
mov
cmp
pop
sbb
sbb
sub
std
out
xchg
je
shrb
pop
xchg
fdivrp
cld
pop
call
add
shll
jecxz
dec
sahf
mov
mov
cwtl
push
cmp
ret
fisubs
push
or
mov
adc
dec
jl
cmpsb
mov
sbb
adc
scas
or
inc
aad
sbb
add
es
lods
scas
ljmp
idivb
imul
mov
push
sbb
ss
inc
push
xor
xor
add
outsb
in
repnz
cltd
adc
pop
xchg
adc
imul
test
jge
cmpl
inc
mov
gs
push
push
jbe
sarb
xchg
cli
xchg
pushl
or
movsb
pop
rcll
mov
lods
repnz
int
jo
lret
mov
dec
mov
mov
daa
cmp
or
xchg
imul
dec
scas
subb
decl
add
pop
lea
push
or
out
push
sti
loopne
call
xor
js,pt
hlt
push
lods
xor
adc
es
mov
mov
jne
loope
and
inc
jg
shr
in
sub
addb
les
and
mov
adc
cli
lcall
pusha
sub
xchg
add
add
jnp
pop
popf
adc
xchg
inc
movsb
push
inc
pop
jo
jl
stos
sbb
stos
push
push
aam
rcrb
outsb
test
cmpsb
jmp
mov
pop
inc
and
dec
cmc
mov
pop
mov
mov
sbb
daa
mov
mov
fdiv
stos
int3
cltd
jo
mov
mov
lahf
js
stos
clc
dec
sbb
inc
xchg
sbb
jecxz
les
fsubrl
ret
enter
or
stos
loope
add
es
es
mov
subb
push
push
push
mov
and
mov
ljmp
hlt
in
mov
in
inc
enter
add
stos
xor
mov
ret
ds
sub
stos
fs
mov
xor
push
inc
inc
ss
and
cmc
mov
adc
sbb
sbb
mov
fbstp
mov
sbb
add
and
popf
lock
inc
xor
pop
push
cmp
push
and
pushf
fwait
sbb
cwtl
jecxz
out
shll
inc
cld
stos
mov
rcrb
sbb
call
cmp
mov
adc
jo
aam
imul
and
xor
jle
dec
push
dec
out
add
aam
iret
loopne
jmp
mov
in
mov
lds
ds
inc
hlt
lods
test
iret
dec
jl
adc
hlt
mov
xor
cmc
jnp
cmp
jbe
fadds
mov
ficompl
dec
or
out
stos
incb
mov
clc
clc
mov
jge
aad
push
and
add
call
call
inc
fs
jb
out
add
hlt
les
pop
fs
cmpsb
jl
fnstsw
sbb
cli
or
sub
jbe
cmp
push
mov
and
xor
fadds
push
push
sbb
iret
cmp
loopne
add
dec
fstps
mov
or
lret
cmp
int
add
push
cld
cmpsb
xchg
add
cltd
cmp
mov
lcall
lea
andb
test
mov
push
pop
inc
lea
pop
adc
and
and
or
pushf
or
sub
jns
sbb
sahf
daa
pop
mov
test
jo
test
and
jae
cmp
mov
cmp
add
mov
movsl
push
sbbb
mov
sahf
dec
push
mov
cmp
dec
mov
enter
adc
shrb
sar
inc
insb
dec
xor
cmp
push
mov
jnp
jge
test
pop
frstor
xorb
and
insb
pop
mov
ja
out
idivl
pop
adc
sbb
je
push
mov
cwtl
enter
mov
aad
mov
imul
add
hlt
test
inc
lock
xor
popf
test
shl
out
dec
aam
enter
orl
mov
cmp
cs
pop
cld
mov
jne
mov
or
outsb
movl
ret
stos
add
adc
seto
fcomps
pop
and
or
movsb
sbb
pusha
ss
sti
sub
dec
insb
cld
addr16
pop
push
pop
or
push
jo
sbb
cmp
pop
jmp
mov
ds
test
xchg
add
insb
push
jne
jp
shr
fsubp
insb
cmp
jle
mov
outsl
es
add
pop
in
ret
insb
test
ja
cmp
cld
dec
sbb
push
mov
or
cmp
sub
xchg
dec
add
pop
test
xchg
push
mov
cmp
xchg
push
movsl
cmpsb
jl
loop
xchg
ljmp
or
cmpsl
shrl
jge
push
fcmovbe
dec
lods
pop
mov
sahf
ret
fbstp
push
xchg
test
xlat
pop
in
xchg
ds
mov
xor
add
pop
fsubs
loopne
adc
or
faddp
stos
nop
cmp
cltd
sbb
repnz
test
push
pop
leave
ss
add
iret
das
mov
mov
or
push
pop
xchg
dec
fsts
jbe
test
sub
mov
and
mov
jecxz
jl
or
or
jmp
jge
dec
call
cmpsb
scas
xor
push
adc
lcall
dec
repz
insl
and
nop
out
inc
add
or
insl
cli
mov
push
gs
loope
add
sbb
dec
int3
bound
cmp
negb
pop
movsb
mov
in
hlt
mov
gs
pop
sub
fcmovu
jo
mov
sbb
pop
mov
inc
mov
es
push
push
into
mov
in
sub
test
fs
fcomip
dec
leave
arpl
xor
mov
cmc
ljmp
push
mov
inc
cwtl
push
into
leave
in
mov
rolb
lea
adc
imul
xorl
pop
or
pop
dec
popf
test
xor
cli
mov
xchg
fwait
push
int3
mov
lock
cmp
xor
mov
sbb
jge
push
les
lret
nop
int3
xor
lock
xchg
bound
cmp
fbld
aas
mov
mov
pop
push
adc
and
and
ret
out
sub
popa
clc
sub
std
outsb
mov
decl
add
lea
or
cmp
xchg
loope
jno
xor
in
test
and
lret
je
cmp
push
cmp
and
ljmp
jmp
cs
enter
add
jecxz
rcr
mov
mov
xchg
ret
xor
push
lret
or
add
idiv
testb
in
pop
inc
mov
ds
cmpb
clc
adc
xchg
das
inc
loop
jle
test
cmpsb
pop
jb
out
cli
hlt
aad
inc
dec
pop
dec
mov
xchg
adc
pop
adc
inc
pushf
mov
cmp
outsb
push
enter
pop
pop
jecxz
mov
clc
push
fs
mov
cmp
mov
enter
stc
dec
sub
mov
xor
mov
push
xchg
jb
stc
mov
mov
lcall
int3
ror
push
insb
stc
pop
and
lods
loope
mov
jecxz
stos
sbb
andl
adc
lods
repz
ja
jg
mov
sbb
jne
jle
cltd
adc
mov
pop
clc
ja
and
cmp
in
mov
lock
fcoml
adc
lcall
clc
into
sub
fidivs
shll
push
sub
ret
push
mov
push
sbb
aas
adc
sub
push
filds
outsb
sarb
pop
push
ret
dec
stos
jo
push
lahf
inc
sbb
fidivrs
mov
js
movsl
lock
aas
sbb
sbb
in
fdivs
shrl
hlt
jne
test
adc
ret
push
lcall
fdivr
ret
imul
out
inc
sbb
fidivl
push
and
jg
mov
je
xor
push
shll
lods
or
out
clc
filds
or
inc
cwtl
push
add
inc
cs
sbb
les
jle
xchg
shrb
mov
arpl
stc
aas
es
sbb
mov
int3
cmp
nop
and
adc
icebp
es
sub
jae
das
adc
xchg
pop
dec
cmp
icebp
test
dec
cmp
sbb
xor
negl
jle
mov
mov
mov
fmuls
sub
scas
dec
data16
stc
push
jae
jp
mov
xchg
arpl
sarb
loope
xchg
incb
xor
cwtl
mov
pop
ds
outsw
clc
ljmp
push
mov
lods
pop
and
aam
call
mov
push
push
insb
cli
push
in
or
lds
xchg
ret
dec
jle
out
lock
ljmp
decl
jl
xor
ss
pusha
and
mov
and
movsl
cmc
cli
pop
pusha
cli
test
pop
stos
adc
js
inc
inc
sub
fiaddl
test
and
push
sub
inc
push
xor
jle
jl
fidivrl
pop
test
pushl
mov
push
sub
sbb
inc
mov
sbb
jmp
fdivr
mov
jnp
jb
ljmp
leave
push
cwtl
sti
mov
iret
fs
push
push
adcl
adc
bound
ja
and
jbe
push
push
jp
pop
jno
push
sub
add
mov
and
or
sub
outsl
nop
rorl
sub
rolb
sbb
std
or
test
imul
pop
push
inc
dec
add
push
lods
dec
jb
clc
sub
push
adc
incb
mul
push
or
mov
call
addb
or
je
sub
rol
push
cmpl
xabort
dec
inc
cmp
decb
jecxz
lds
cli
add
hlt
es
in
aaa
cmc
sbb
dec
inc
loope
jbe
or
aam
jmpw
insb
in
inc
cmpsb
inc
and
sbb
pop
fbstp
aad
push
insb
inc
push
dec
xchg
jb
jp
adc
push
and
adc
adc
mov
jge
dec
push
mov
push
add
popa
adc
cmp
stos
testb
pop
aam
add
in
inc
sbb
fsubs
push
stc
fiadds
fsub
push
jmp
inc
clc
mov
les
js
dec
adc
push
lock
adc
dec
out
daa
mov
mov
mov
pop
cmp
and
adc
movsb
xchg
fcoml
add
rorl
inc
arpl
lahf
add
outsl
push
cli
inc
in
jbe
adc
shrl
ljmp
clc
push
push
enter
xchg
mov
ret
ret
lods
jmp
mov
add
adc
and
push
clc
sbb
popf
dec
cwtl
push
sbb
jmp
xor
xor
fsubrs
inc
sbb
lcall
or
iret
xor
xchg
hlt
mov
push
inc
dec
imull
je
add
or
cmp
inc
sbb
int3
std
data16
clc
mov
sarb
push
pop
loop
xorb
loop
sahf
sahf
sarl
popw
cld
pushl
sub
and
mov
fisubl
pop
add
push
mov
addr16
sbb
das
fisubrs
pop
stos
mov
adc
xchg
out
dec
mov
xchg
int
loope
movsb
ret
aaa
cmc
lcall
outsl
add
nop
push
xchg
sbb
out
mov
or
and
lock
inc
or
or
mov
mov
mov
push
ret
enter
push
loope
xlat
or
outsl
call
inc
inc
and
roll
out
mov
xor
jl
cmp
sub
mov
sub
mov
arpl
adc
jb
jl
jg
popf
or
sbb
inc
jecxz
push
or
loopne
mov
add
test
fimull
xchg
ficompl
mov
xor
stc
sub
mov
test
adc
xchg
data16
pop
xor
or
aam
cmp
lret
add
inc
out
rolb
push
les
jg
add
lock
inc
jae
mov
pop
mov
fsubrl
ss
pop
xchg
jns
leave
xor
icebp
out
pop
rorb
test
daa
dec
in
jle
or
pushf
dec
scas
loop
or
pushl
and
sbb
and
mov
test
inc
xchg
out
lods
sbb
inc
jb
stos
pop
pop
test
and
mov
jg
nop
jge
xchg
lods
repz
cmp
stos
cmp
jmp
adc
insl
xor
pusha
push
and
or
std
dec
and
xor
adc
mov
clc
push
jle
int
pop
mov
loope
jbe
or
inc
xchg
sbb
sub
dec
adc
mov
xchg
out
mov
rcl
mov
or
inc
cmpsl
and
hlt
dec
ret
rorl
nop
inc
stos
aaa
jmp
pushf
cmp
aad
push
call
sub
fbld
xchg
cltd
or
xorb
adc
je
jp
mov
repz
rorl
or
int
das
fcmove
inc
std
jg
test
jb
add
bound
mov
xchg
jle
push
mov
sub
int3
cli
mov
jbe,pn
repnz
out
aas
jl
push
mov
mov
adc
les
jle
test
mov
loop
and
fdivrp
cmp
ljmp
xlat
aaa
add
xorb
xlat
jne
ret
or
dec
xchg
jle
rcll
add
lcall
cmp
pop
push
sub
add
sahf
xchg
popa
jge
shll
add
sti
xor
sbb
subb
cli
call
inc
jbe
or
adc
fdivl
test
mov
xor
add
lea
stos
mov
into
pop
jmp
push
mov
push
push
not
lods
or
inc
out
and
aas
ljmp
cwtl
clc
mov
pusha
mov
inc
push
pop
lods
mov
dec
leave
lods
sbb
mov
fst
shl
adc
sbb
cwtl
add
loope
xor
out
pushf
jecxz
xchg
xchg
outsb
nop
sahf
pusha
popa
nop
ret
sbb
loope
mov
sub
jb
mov
xchg
int
nop
xchg
pop
adc
or
movsb
in
inc
mov
fisttps
cld
mov
fdivr
sbb
insl
push
popf
push
mov
mov
outsl
add
mov
clc
clc
mov
lcall
inc
mov
add
int
orb
icebp
jmp
rclb
idivl
pop
fdivs
call
daa
add
pop
lock
aaa
test
decl
shrb
or
dec
jo
sarb
pop
cs
jnp
rcr
adc
dec
mov
sahf
xor
adc
popa
cltd
sbb
bnd
out
inc
or
xor
testb
adc
leave
les
cmpsl
sbb
int3
fisubs
fwait
cmpsb
dec
in
pop
scas
or
and
enter
pushf
jg
loopne
add
out
xchg
xor
loop
jo
inc
insl
or
in
lret
push
sbb
jnp
das
pop
popa
xor
inc
cmp
out
aad
xor
cmp
dec
pop
xorb
inc
mov
pusha
out
jo
loope
cmp
test
insl
in
cmp
and
inc
mov
mov
icebp
js
mov
dec
push
mov
add
cmpl
cmp
out
cmp
and
push
jnp
pop
xchg
xlat
loop
fisubl
adc
aam
leave
dec
in
mov
xchg
or
push
clc
ja
sbb
clc
or
pop
hlt
adc
fs
in
cmp
loopne
ss
sti
int3
adc
push
pop
and
sti
vmread
push
and
shlb
push
stos
aaa
or
mov
inc
sub
test
push
cli
xor
mov
sbb
out
jb
mov
push
push
test
pop
jo
nop
hlt
pop
out
dec
mov
mov
add
aad
inc
pop
loopne
fs
loopne
cmp
sar
push
dec
or
inc
mov
mov
sbb
sub
popf
cmpsl
dec
imul
ret
sub
int3
js
mov
mov
or
inc
aam
inc
add
push
add
sbb
push
add
xlat
add
jmp
ret
jl
aas
mov
lahf
loopne
loopne
hlt
adc
fwait
lds
cltd
push
je
insb
mov
stos
xor
lahf
out
mov
mov
push
cmp
loopne
les
mov
cli
addl
pop
insl
call
mov
lret
add
xor
nop
cmp
dec
adc
insl
pop
jmp
decl
pop
adc
jle
jecxz
xchg
lock
stc
into
inc
je
stos
inc
mov
decl
leave
mov
add
notl
and
decb
repz
inc
lock
sbb
pushl
loope
sub
add
je
les
mov
and
mov
jg
or
movsb
jo
adc
sahf
mov
orb
mov
push
push
mov
cmpsl
jae
repz
jle
faddl
push
jg
fsts
or
pop
add
cli
nop
jl
add
or
outsb
xlat
out
sub
aad
es
cwtl
das
inc
push
ja
xchg
push
jmp
cs
ret
inc
sti
sbb
and
xchg
addr16
jle
mov
jbe
pusha
call
fadd
jg
sti
aam
push
inc
and
jno
into
movsl
add
mov
rorb
mov
out
mov
sarl
mov
push
or
lret
dec
hlt
sbb
incl
fstl
mov
jo
les
movsl
cwtl
mov
fdivl
andb
adc
sarl
lock
xchg
push
xchg
imul
or
xor
xor
clc
or
adc
xor
xor
mov
cmpsb
jno
icebp
or
icebp
jmp
scas
inc
fisttpll
pop
or
movsl
mov
push
mov
push
lret
jmp
jne
dec
jmp
mov
jecxz
sahf
adc
push
xor
jp
pop
cmpsb
stos
push
daa
jne
add
push
xor
mov
xchg
mov
xchg
add
mov
xchg
cmp
iret
int3
jno
dec
dec
decb
mov
mov
arpl
jne
fwait
decb
cmp
adc
ss
cmpsl
and
out
add
cli
add
out
and
jnp
mov
add
fbstp
in
and
jno
nop
and
mov
rcll
xchg
push
stos
or
jl
ds
scas
mov
test
and
decl
inc
add
cltd
lahf
pop
xchg
cmp
movsl
mov
cld
lods
mov
xchg
lods
nop
add
test
xchg
mov
push
push
sbb
inc
cmp
sbbb
lock
jg
sub
addb
xchg
dec
or
dec
enter
pop
add
adc
add
adc
pushf
pop
jl
dec
add
data16
jle
and
push
nop
inc
mov
or
decl
sbb
xor
jg
je
es
push
ffreep
cmp
mov
inc
je
push
add
aad
and
or
outsl
dec
rcll
mov
inc
pop
jl
xchg
dec
or
orl
mov
push
imul
mov
add
mov
cmpsb
fwait
lahf
add
popf
mov
add
inc
es
push
jp
stos
inc
arpl
push
loopne
nop
sbb
xchg
add
dec
jbe
ret
mov
test
insl
xor
arpl
aaa
xchg
mov
pop
jg
xchg
dec
push
lea
mov
or
xchg
lods
iret
movb
push
nop
lods
cmpsl
mov
xorb
dec
pop
hlt
xor
cs
inc
dec
decl
inc
loopne
notb
int
shll
inc
jbe
push
faddl
test
xchg
dec
lods
test
pop
sbb
or
push
or
mov
movl
cmp
or
sub
out
repnz
pop
in
stos
inc
mov
iret
in
adc
xchg
or
add
or
mov
jle
sbb
jno
mov
cs
mov
mov
adc
add
xor
decl
push
in
data16
pop
add
cwtl
out
lock
cmpsl
and
add
sbb
bnd
add
add
dec
cli
je
push
adc
ds
xor
lmsw
rolb
mov
ret
push
fs
push
pop
pop
xchg
test
push
jo
sub
mov
shlb
test
push
insl
cli
jbe
lcall
and
cmp
add
mov
pop
adc
mov
xchg
ret
out
out
xor
ja
mov
mov
xchg
enter
mov
jl
js
and
mov
sbb
aad
lcall
cmp
stos
push
jl
mov
jo
and
jbe
jge
xor
stc
cmp
mov
pop
ljmp
sub
push
sbbl
pop
decb
dec
scas
add
sbb
jp
push
fisubl
push
hlt
pop
inc
add
ror
inc
out
sub
sbb
pop
add
mov
xchg
ret
push
inc
jg
sahf
add
out
aam
cmp
popaw
js
sbb
lock
icebp
mov
cs
into
mov
xor
sbb
ja
fisttps
cltd
dec
add
mov
hlt
mov
loope
fwait
daa
push
or
into
call
jbe
test
mov
pop
mov
or
mov
cmp
iret
jb
mov
mov
xchg
inc
arpl
mov
mov
xchg
xchg
lcall
sbb
and
add
ret
inc
mov
jmp
xchg
call
imul
mov
lret
jmp
stc
js
lock
xchg
ficoms
xlat
inc
or
addl
or
fcomps
int
mov
jge
mov
ret
lcallw
adc
divl
add
or
loope
lods
pusha
andb
fisttpl
push
loope
push
hlt
cltd
aam
scas
sub
inc
andb
lea
int3
add
inc
mov
lock
clc
js
icebp
cmp
jcxz
add
push
cli
repnz
out
ljmp
aas
in
jp
ss
orb
js
jl
iret
jbe
pusha
xor
sbb
mov
adc
ret
adc
xor
movsl
push
outsb
mov
add
add
inc
jl
xchg
hlt
aas
xchg
jge
loopne
hlt
xchg
mov
enter
xor
scas
mov
call
pushf
xchg
cld
jge
test
iret
dec
movsb
ljmp
inc
dec
andb
inc
or
push
xor
pop
push
mov
mov
and
inc
test
fwait
adc
and
pop
inc
adc
movsl
cmp
mov
roll
jbe
xchg
adc
and
cmp
dec
pusha
inc
and
inc
sbb
not
and
mov
popa
sbb
sbb
mov
lea
popa
cmpsb
mov
sub
mov
inc
adc
loopne
nop
lret
mov
test
inc
and
testb
movsl
and
sbb
cld
add
repnz
dec
outsb
cmp
mov
inc
sahf
xchg
fiadds
das
fdivrs
dec
jnp
jp
jge
decb
push
das
cli
mov
pop
push
mov
inc
lds
xor
jmp
push
mov
add
sbb
cmp
inc
enter
shll
push
aad
outsl
sub
push
or
add
xor
fcmovne
push
mov
jp
gs
jg
not
jns
and
push
es
pop
xchg
stos
sbb
add
inc
mov
lods
bound
mov
adc
jno
insb
test
popf
mov
and
jb
cwtl
andb
add
push
adc
cmp
dec
or
fcompl
dec
push
adcb
add
push
clc
test
cmp
clc
pusha
dec
dec
out
inc
cwtl
mulb
scas
jle
aad
es
and
hlt
sub
movsb
subl
jle
push
adc
repnz
jg
pushf
pop
jmp
es
jg
mov
dec
add
pop
clc
loopne
mov
or
push
xchg
call
in
shll
cmpsb
mov
int
scas
mov
add
sub
stos
add
outsl
shrb
sarb
in
dec
imul
mov
cmp
scas
adc
jb
xchg
test
and
add
or
add
or
repnz
pop
out
out
insl
es
mov
mov
and
and
dec
add
inc
cwtl
mov
jp
movl
add
out
ret
ret
adc
fistpl
ficompl
xor
xchg
and
orb
pop
rolb
in
pusha
pop
enter
test
push
fisubs
add
xor
lahf
mov
cs
insl
scas
pop
sub
insl
outsl
mov
or
cltd
cmp
mov
test
jge
sarb
dec
jge
mov
subl
test
mov
sub
push
mov
andl
shl
or
push
lods
decl
into
fsubl
movsb
inc
add
loopne
and
xor
cmp
adc
loopne
aaa
jnp
or
or
arpl
sbb
sbb
mov
fisubrs
inc
and
push
movsl
fwait
test
repnz
stos
push
pop
lock
movsb
or
dec
leave
sar
xor
aad
or
xchg
inc
scas
ds
rorl
cmp
test
lcall
aam
mov
xchg
mov
jecxz
dec
insl
sub
pop
push
pop
in
jl
sbb
cmpsl
jo
mov
cmp
mov
add
inc
test
nop
or
sub
nop
adc
dec
xor
xchg
ret
xchg
hlt
hlt
enter
or
cli
push
shlb
or
mov
push
inc
xlat
adc
in
adc
mov
dec
inc
ficoml
mov
rolb
outsb
mov
in
add
add
int
enter
mov
xchg
jnp
sahf
stos
mov
inc
js
sbb
cmp
mov
jbe
lahf
hlt
cmp
lahf
inc
xorb
js
aam
sbb
daa
aad
push
aam
dec
mov
add
mov
shl
lcall
or
addb
das
test
cli
decl
xor
ds
xorl
mov
in
outsl
or
je
cwtl
xor
ss
or
insl
insl
or
call
sbb
inc
ljmp
push
pushf
add
rorb
fsubr
add
sub
add
pop
ljmp
popa
mov
rcl
adc
addb
and
cwtl
aas
sahf
sbb
lcall
push
xor
add
dec
loopne
mov
cmp
push
xchg
lods
push
pop
add
push
pop
push
sti
das
dec
rorb
dec
or
sbb
sub
pop
lea
sbb
mov
cmp
mov
icebp
jae,pn
fdivrp
push
xor
push
mov
in
or
inc
push
adc
add
aam
icebp
or
fildl
dec
mov
mov
push
sbb
call
dec
push
cmp
jno
ljmp
incl
xchg
mov
stos
iret
pusha
ret
adc
mov
leave
jno
xchg
dec
and
das
clc
and
sbb
insb
mov
cld
add
cli
lcall
or
mov
inc
add
push
sbb
lcall
adc
xchg
jl
mov
pop
jg
sbb
xchg
test
mov
adc
pop
mov
jg
addb
scas
inc
push
cli
push
fadd
add
push
xlat
or
das
clc
loop
iret
inc
mov
xor
stos
dec
add
fprem
ret
dec
dec
and
out
mov
mov
add
fisttpl
in
push
sbb
jg
outsb
jns
inc
inc
add
les
push
fsubrp
insb
out
jmp
icebp
cmpsl
dec
fs
into
sub
jo
adc
mov
divb
inc
push
pop
orb
add
xor
scas
pushl
dec
je
in
add
pusha
and
sbbb
jg
lcall
mov
int
sbb
dec
and
clc
ret
test
out
sarb
in
addb
mov
in
push
and
inc
das
add
xlat
rolb
xor
jmp
adc
and
mov
xchg
sbb
aas
jb
and
dec
mov
push
cmpsl
fcomip
shlb
adc
dec
push
clc
jg
jp
rcrb
push
lock
dec
and
jo
or
pop
jge
mov
call
jae
rcrl
add
ret
cmpsl
adc
fdivr
jl
mov
dec
shlb
add
add
mov
push
lret
xchg
jo
loope
inc
ss
cmc
dec
lea
mov
push
adc
inc
mov
xlat
out
push
dec
movb
lods
cmpsb
movsb
fs
cmp
mov
jmp
icebp
xchg
push
cmc
cltd
enter
pop
pop
add
adc
nop
orb
fst
jo
push
or
rcrb
jp
movsl
sub
out
pop
mov
sarb
push
adc
push
sahf
cli
mov
and
mov
lock
pop
movsb
push
fisttps
push
orb
cli
xor
les
push
add
dec
pop
add
push
sbb
jbe
xchg
scas
mov
and
daa
sbb
out
or
repnz
or
mov
pop
or
push
xchg
inc
bound
dec
loopne
mov
dec
inc
xor
xchg
sahf
adc
insl
mov
sbb
addb
sbb
cmp
pushf
les
pop
out
imul
test
dec
add
les
push
jbe
sbb
jno
dec
push
shrb
mov
push
imul
push
push
lcall
pop
loopew
scas
dec
stos
mov
shll
mov
cltd
sbb
fisttps
or
idiv
xor
mov
add
mov
dec
test
add
test
cmp
cmpsl
sbb
test
call
or
fidivl
pusha
xor
mov
lcall
nop
dec
ja
xchg
push
jle
add
movb
and
mov
std
pusha
roll
notl
mov
dec
push
mov
xor
add
xchg
pop
push
mov
xlat
pop
pop
bound
ds
add
xor
stos
push
adc
push
push
and
fimull
stos
jns
js
push
das
mov
mov
ret
jns
test
iret
sbb
ja
rol
loopne
xor
aas
fdiv
out
mov
mov
shrb
loopne
rcrb
push
test
test
pop
orb
jle
dec
pop
sbb
add
ret
decl
xchg
mov
pop
jae
cli
test
dec
mov
iret
fmull
fildll
or
push
cltd
sub
mov
nop
lock
loope
jo
scas
cli
fcomip
sbb
jge
out
cmp
lcall
mov
lock
inc
pop
sub
mov
and
les
adc
imul
insb
add
fs
ljmp
clc
subb
movsb
divb
mov
mov
movsb
adc
cmpsb
incl
or
imul
scas
ret
mov
xor
stos
push
push
sub
push
test
decl
inc
lret
jecxz
jl
xlat
shl
daa
dec
xchg
into
out
das
call
clc
mov
dec
fistpl
dec
out
mov
jl
xchg
or
xchg
adc
cwtl
outsb
clc
jmp
movsb
mov
xor
sub
push
pushf
xchg
out
mov
dec
cmp
and
outsb
ret
rorb
shlb
aad
pop
js
mov
sub
js
pop
aad
lea
ss
rolb
cmpsl
mov
movsl
aaa
inc
and
aam
adc
mov
jecxz
inc
push
and
xor
mov
jmp
push
xor
dec
pop
mov
scas
mov
push
icebp
loop
push
fwait
loope
std
loope
sub
jg
js
in
mov
ret
sbb
fcomps
enter
inc
orb
movsb
cmp
repz
sti
inc
rorl
add
mov
jecxz
push
add
outsb
mov
xchg
push
xchg
jb
roll
cld
sbb
push
repnz
stos
jp
mov
dec
adc
in
popf
jb
dec
dec
push
mov
cli
jge
add
insb
fimuls
push
xchg
hlt
mov
out
jb
sbb
repnz
imul
xor
adc
sub
cmc
xor
push
mov
lock
fimull
cmc
xchg
in
sub
dec
xchg
call
into
xor
push
andb
mov
pop
push
gs
xchg
ss
or
scas
rorb
or
jge
mov
cltd
cld
movsb
xchg
fwait
xor
stos
add
daa
es
popa
ret
mov
into
and
mov
inc
sub
mov
xorl
daa
inc
je
ret
fisttps
xchg
int3
loopne
cld
push
shrb
push
cwtl
mov
into
adc
test
push
in
add
dec
fildll
push
rorl
push
movsb
fwait
or
test
push
sbb
adc
push
mov
stc
gs
mov
call
add
push
popl
sbb
pop
sub
xchg
loopne
inc
lock
inc
jb
dec
mov
lock
cli
out
movsb
ret
pop
push
dec
adc
rorb
pusha
inc
mov
cltd
dec
mov
fisttps
push
test
pusha
and
mov
xor
xchg
pop
add
sub
xchg
iret
stos
fld
dec
cmp
sub
outsb
push
test
and
ljmp
bound
leave
dec
and
push
mov
xchg
nop
inc
fstpt
sbb
int
mov
xor
out
mov
mov
leave
jbe
jle
cmpl
clc
push
push
insb
pop
nop
inc
inc
test
shlb
cs
push
sub
jb
ret
pop
mov
mov
push
stc
add
inc
stos
test
and
add
pusha
xor
mov
bswap
or
lock
jo
imul
lcall
sub
jle
aad
xor
ret
cmp
les
add
insb
pop
push
add
fmulp
ljmp
lods
adc
sub
test
divb
stos
adc
pop
or
sbb
clc
xchg
inc
test
mov
xor
fs
ja
add
xchg
push
mov
inc
push
orb
mov
je
dec
jl
xchg
jecxz
stos
jmp
mov
xor
push
fadd
push
mov
insl
xchg
loopne
push
bound
or
mov
push
or
dec
sub
test
inc
or
mov
xor
imul
mov
mov
out
lret
adc
mov
sub
es
and
pop
lods
cld
scas
aaa
push
jnp
insb
inc
shlb
xchg
mov
out
subb
incb
cmp
dec
or
loop
xchg
test
test
movsl
pop
aam
gs
jp
fmul
andl
fdivl
cs
lcall
adc
ss
xchg
sbb
push
loopne
sbb
loop
dec
fstpl
loop
jg
lea
je
les
pusha
mov
mov
sub
in
dec
enter
sub
add
mov
pusha
mov
mov
add
loope
cmp
ss
sub
push
sub
cs
loop,pn
fbld
xor
lret
push
lret
push
pop
dec
mov
pushf
das
int3
adc
mov
fsubrl
stc
stos
push
sbb
outsb
or
cld
clc
inc
loope
push
push
out
sub
mov
mov
jns
rorb
jp
add
pop
test
add
js
sub
mov
imulb
fstpt
add
out
or
rcrl
inc
lds
pop
loop
je
ljmp
int3
shl
jo
movb
fisttps
or
and
inc
and
pusha
pop
insb
mov
and
enter
outsb
cmpb
pop
insb
test
loope
scas
pusha
mov
mov
xchg
div
push
sbb
or
cmpl
mov
decl
les
mov
les
push
loope
sbb
sub
stos
jg
loopne
test
lcall
inc
bound
and
jne
hlt
aad
xor
mov
aas
push
xchg
mov
icebp
test
push
loopne
mov
call
enter
stos
das
add
xchg
jb
mov
aam
cmpb
fcmovbe
orb
or
xchg
cltd
pop
or
pop
in
and
pusha
test
pop
aam
ss
sahf
cmp
sbb
cli
filds
out
out
fisubs
movsl
inc
adc
push
fs
aad
cmp
cmpsb
mov
dec
add
and
js
loopne
pushl
popf
cmp
rep
push
mov
mov
push
jp
loop
data16
int3
in
ret
das
test
add
xchg
sahf
jl
push
adc
jge
sbb
mov
adc
mov
mov
sub
pop
push
and
outsl
mov
popf
inc
sbb
push
cmp
sqrtps
fdivrl
mov
dec
push
stos
rcrl
inc
or
insb
push
jg
sub
das
cmp
cmpsb
or
loope
jnp
jg
sbbl
shlb
jbe
jg
addb
xchg
insb
movsb
inc
imul
pop
or
push
mov
sbb
sub
and
jmp
loope
leave
jecxz
data16
push
mov
mov
ljmp
or
lods
popf
fs
pop
inc
and
dec
sbb
push
push
xor
dec
sbb
mov
fs
fisttps
xchg
jbe
jo
lret
cmp
jecxz
adc
fisubs
sub
sbb
call
add
daa
jbe
mov
xlat
adc
xor
insb
lret
mov
popa
and
xchg
cmpsl
mov
in
insl
dec
inc
imul
stos
lds
stos
test
rorb
push
fdiv
cmpsb
outsb
cmp
mov
push
je
mov
sbb
ljmp
shl
pop
lds
jle
aas
add
lea
mov
out
push
jmp
daa
adc
pop
add
ret
dec
mov
sbbb
mov
inc
shl
mov
sbb
pushf
rcrb
mov
adc
mov
mov
rolb
pop
mov
loopne
imul
xor
push
push
mov
and
pop
jbe
jle
stos
outsl
mov
or
cmp
imul
mov
filds
dec
outsb
cmp
jmp
mov
push
ss
xor
decl
dec
shl
inc
loope
mov
ffreep
iret
rolb
call
rcrl
lcall
arpl
movsb
imul
and
imul
mov
aaa
and
jmp
push
sbb
mov
cmp
xorb
jmp
push
xor
inc
adcl
mov
and
push
dec
and
test
loope
fcomi
push
mov
mov
popa
and
rolb
cwtl
inc
cltd
push
sti
xchg
enter
rcr
subl
add
adc
arpl
mov
daa
or
sbb
adc
mov
cli
clc
sub
rorl
pop
ja
adc
ret
pop
xor
or
sbb
ss
add
dec
fs
jl
push
cmp
push
pop
mov
jb
std
fcmovnu
mov
insb
ret
dec
mov
mov
push
pusha
test
sbb
mov
adcb
xlat
aad
push
mov
xor
sub
mov
xlat
cmpsb
lret
xchg
mov
mov
xchg
or
mov
push
je
add
cmpb
xchg
push
or
mov
jns
fcoms
mov
icebp
popf
movb
das
fstpt
cltd
mov
push
stos
adc
mov
shrb
mov
adcb
fst
xor
pusha
mov
lcall
fstpl
data16
dec
pop
in
ljmp
cmp
popf
into
dec
jg
sbb
mov
adc
xchg
fs
cmp
mov
lock
pop
fistl
mov
xchg
jnp
cs
cwtl
call
insb
je
movsl
push
test
decl
pop
pop
fldt
testl
iret
jp
lcall
jl
call
into
jecxz
frstor
data16
fcmovu
sbb
sub
cwtl
mov
or
add
xchg
and
xchg
fstps
xchg
lods
cli
lock
push
mov
nop
push
mov
outsl
sbb
cmp
xchg
fmuls
in
call
ds
outsl
mov
inc
add
inc
xchg
xor
std
mov
dec
je
lds
jno
and
addb
dec
movsb
add
push
in
cmp
jns
sbbb
bound
cmp
xor
mov
add
xchg
rorb
ret
sub
cli
imulb
add
lcall
test
pop
bndldx
rorl
xchg
dec
mov
fiadds
rolb
out
std
push
jns
call
jge
push
cmp
stos
stos
idivl
ret
decl
sbb
or
jb
icebp
cmp
mov
enter
mov
aam
bound
test
nop
cmp
xor
xor
ljmp
cli
decl
mov
dec
and
in
mov
mov
mov
push
clc
cli
in
adc
out
adc
int3
cmpb
ljmp
test
cmp
adc
adc
mov
mov
lahf
inc
sbbl
jbe
pusha
scas
mov
push
aam
insb
stos
inc
pushl
decl
add
mov
ret
cmpsl
inc
lds
daa
fdivrs
inc
mov
jmp
inc
lahf
loope
xlat
in
and
call
dec
push
icebp
adc
mov
or
or
mov
add
mov
inc
mov
fisttps
push
sbb
jg
adc
sbb
pop
push
cmpsb
cwtl
add
mov
aas
in
dec
ret
mov
push
pushl
aam
push
mov
add
mov
add
es
shlb
ret
inc
or
test
out
ret
push
jle
sbb
fwait
fwait
pop
mov
inc
push
add
cli
stos
stos
inc
add
ljmp
mov
mov
cld
rorl
cmp
add
mov
add
roll
outsb
cld
jg
lret
loop
xchg
push
fwait
jle
loope
icebp
lock
xchg
dec
pop
inc
fldenv
push
movsb
and
fisubs
jae
stc
add
lds
popa
mov
fisttps
and
dec
int
imul
jecxz
das
jp
push
rol
hlt
cmc
lds
leave
mov
sub
sets
enter
es
add
jle
mov
lods
cmp
idiv
out
pop
je
ret
sub
sbbl
xchg
dec
popf
mov
fiaddl
icebp
enter
sbbl
push
faddp
sbbl
fbstp
scas
pop
push
add
ds
inc
pop
pop
push
mov
int3
dec
mov
sarb
je
push
loop
fistpll
inc
mov
sub
js
out
inc
add
jmp
imul
das
fs
orb
call
call
and
cmp
lock
cmp
insb
dec
mov
or
mov
outsb
sub
xor
sti
fsts
fs
sbb
jp
xchg
add
sbb
mov
or
rorl
jp
dec
xchg
icebp
push
mov
fidivrs
cli
add
and
inc
jmp
ss
xchg
fdivl
push
lret
pop
xchg
scas
test
or
adc
adc
fmulp
imul
adc
push
std
insl
test
test
cld
repnz
ja
decl
stos
cmp
test
sarl
mov
mov
lcall
incl
stc
dec
cmpb
push
push
push
addr16
push
jb
push
outsb
jp
adc
fisubrs
add
jl
call
push
fsubr
sbb
leave
xchg
ds
inc
xor
clc
push
sti
scas
jl
outsb
loopne
inc
cmpb
push
fcoml
pop
loopne
mov
in
sbb
and
lcall
data16
and
es
popf
pushf
xchg
xor
cld
ljmp
in
js
popf
add
mov
or
call
xchg
mov
popf
clc
es
mov
sub
adc
jle
shrb
sar
mov
mov
je
xchg
mov
into
es
adc
test
xor
sbb
sbbb
add
fwait
imul
test
and
clc
pop
lods
lea
or
adc
sbb
adc
aas
sbb
sub
test
mov
ss
push
loope
sub
rolb
add
hlt
push
mov
fnstenv
repz
aaa
mov
ds
xor
push
lock
fisubs
lret
icebp
sbb
fnstsw
sti
xchg
or
mov
notb
incl
dec
sub
or
ljmp
push
bound
xchg
or
sbbl
sbb
mov
mov
adc
and
pop
insb
fs
icebp
rolb
jb
and
mov
loopne
cmp
aas
or
sub
adc
test
jno
lds
pop
sbb
jmp
push
push
jo
fcompl
mov
es
xor
bound
setae
jl
loopne
bound
jl
sbb
aad
fcmovnb
jl,pt
sbb
adcl
mov
repnz
mov
out
xor
ret
mov
in
xchg
out
pop
adc
dec
lahf
rorb
add
popf
popl
outsb
outsb
ljmp
rclb
aam
jle
addr16
cmpsl
xor
out
or
cmpsb
loop
das
das
inc
nop
push
cld
fdivrl
and
jecxz
sbb
push
ret
lahf
iret
subl
add
in
cmp
fistpll
popf
arpl
rcll
sbb
negl
fnstcw
sarl
data16
loopne
fwait
xchg
xlat
mov
adc
das
movsb
push
lods
icebp
rol
pop
inc
cmp
push
idivl
daa
jb
cmp
scas
sub
test
push
jp
adc
adc
xor
insl
jne
or
and
mov
call
sub
cmp
sub
sbbb
or
aas
or
mov
adc
inc
mov
fsts
add
fld
sarl
pop
jecxz
jle
mov
dec
or
jg
and
push
pop
dec
or
or
ror
cltd
inc
cltd
dec
popa
sbb
cmp
rclb
xchg
jmp
add
sub
gs
std
out
cmp
inc
or
and
mov
push
cli
outsl
sub
test
and
in
ss
lret
or
loopne
stos
aad
movsl
cmp
jl
scas
or
dec
dec
and
dec
mov
shlb
push
pop
cmp
call
or
mov
jge
fidivl
test
pop
sahf
cmp
sub
cmp
outsb
in
pop
repnz
fsubs
jl
call
adc
movsb
or
adc
jbe
push
cmp
loop
shll
rcrl
mov
loope
outsl
add
xchg
lock
mov
inc
repnz
sub
mov
call
sub
mov
lret
or
repnz
test
sub
call
pop
test
sub
jecxz
sub
add
xchg
xor
push
mov
ljmp
cmp
les
enter
push
cmp
decl
xchg
and
xchg
ret
lods
mov
je
and
jle
daa
jns
data16
cmp
sub
pop
or
test
pushf
add
mov
mov
xorl
or
dec
mov
test
aam
into
call
int
sub
enter
sbb
incl
add
xorl
repz
and
cwtl
lcall
jp
add
or
or
adc
cmp
fbstp
mov
mov
xchg
inc
sub
rorl
dec
add
or
andb
aas
fcomps
adc
call
push
or
pop
xor
push
mov
and
adc
inc
mov
int
ja
inc
lea
jmp
xor
mov
cmp
adc
jle
call
insb
cmpsb
out
add
pop
mov
ja
in
push
js
cld
into
addr16
mov
outsl
lahf
push
jle
xchg
rcr
adc
pop
sbb
dec
fldcw
pop
gs
and
fisubs
mov
xor
pop
cwtl
mov
jb
mov
aaa
loopne
lea
and
outsb
inc
bound
mov
xor
pop
icebp
mov
dec
fldenv
cmp
lcall
cmp
push
test
jne
mov
add
and
arpl
jne
xchg
inc
pop
ret
add
cmp
push
push
and
mov
push
adc
pop
cmc
xchg
push
and
or
sbb
pop
aaa
adc
xchg
loope
mov
sbb
push
or
es
notl
dec
call
xor
adc
mov
mov
lahf
mov
loopne
lds
loopne
xchg
popa
les
cwtl
incb
pop
sub
inc
push
adc
out
mov
test
mov
jg
sub
mov
nop
pushf
testl
cmp
pop
mov
ss
xchg
pop
sahf
inc
adc
inc
outsl
enter
xor
or
mov
jg
vpcmpeqb
shll
dec
scas
les
rorb
push
scas
rcrb
test
pop
mov
push
mov
dec
fisubl
push
das
jbe
cmpsb
jnp
nop
pop
fisubrs
imul
cmpl
fs
stos
dec
in
or
fsts
insl
in
enter
ret
or
cli
movsl
sub
ds
push
cwtl
pusha
add
sub
imul
or
mov
xor
clc
pop
fwait
sub
test
sbb
push
add
inc
sub
sub
out
inc
dec
sbb
xchg
ja
push
cld
mov
dec
sbb
mov
push
sti
sahf
mov
jecxz
sti
aad
imul
lret
or
imulb
push
cmp
mov
test
rolb
hlt
addl
add
mov
add
outsb
xor
xchg
rorb
outsb
pop
addb
into
mov
stc
cld
jg
and
cld
loope
push
inc
dec
jnp
sub
orl
pushf
outsl
add
jl
xchg
pop
jbe
js
add
repnz
mov
push
icebp
inc
inc
cwtl
jl
leave
out
xchg
push
sub
mov
jle
mov
adc
add
test
ljmp
push
notb
add
jmp
loopne
dec
lcall
hlt
mov
xchg
or
aam
and
test
pushf
or
inc
mov
or
mov
add
dec
or
shlb
fsubl
pop
xchg
adcb
cmp
mov
ret
xorb
aam
add
inc
aaa
or
stos
decb
mov
xchg
sbb
sub
pop
shr
outsl
test
adc
push
push
pop
sbb
push
mov
sahf
call
mov
aam
repnz
pop
and
mov
jl
xor
ljmpw
fisubrl
fidivl
aad
pop
jo
jecxz
pop
xor
in
pop
mov
lret
adc
aas
fdivl
mov
testb
pop
es
icebp
xchg
icebp
xor
icebp
sbb
adc
adc
popa
and
pop
sub
inc
int3
adc
mov
out
aaa
pop
out
cmp
test
cs
imul
loop
mov
cwtl
add
jne
cmp
pop
add
outsb
cmpsb
roll
sbb
sahf
ds
fnsave
jl
lahf
mov
adc
mov
std
pop
add
pop
aas
and
xor
jge
pop
rclb
and
imulb
cli
test
sub
fwait
cmp
inc
inc
adc
mov
cmp
and
push
jle
movd
ds
cmp
jge
hlt
mov
js
push
ret
lcall
push
and
movsb
adc
lods
jo
pusha
mov
xorl
mov
inc
js
aaa
loop
and
inc
and
xchg
and
repz
incl
or
mov
je
dec
hlt
push
repnz
pop
mov
aam
aas
rcrb
xor
xchg
popf
decl
pop
adc
int
or
and
pop
xor
data16
xor
subb
sbb
mov
daa
add
and
data16
xchg
push
inc
daa
cld
aam
lea
fninit
cmp
enter
pop
mov
or
pop
lock
ret
xor
test
pop
jo,pn
add
int3
cld
adc
out
or
jmp
lea
lcall
pop
stos
push
jle
aas
sbb
aas
or
mov
andl
or
or
popf
push
ret
stos
inc
mov
xchg
mov
push
dec
xor
jo
sub
iret
jg
test
jmp
and
push
call
sbb
lock
aad
adc
cmp
nop
rorb
cli
push
insl
add
ljmp
dec
pop
stos
in
mov
aaa
xchg
pop
or
pop
sahf
sbb
cmp
stos
sbb
jmp
mov
add
jmp
mov
mov
mov
sub
and
mov
push
or
shl
mov
sub
mov
mov
outsl
push
sbb
adc
xchg
mov
enter
imul
adc
insb
adc
add
dec
dec
rcl
jae
sub
scas
sub
or
dec
pusha
jge
nop
iret
dec
sti
shrb
jne,pn
ss
and
pop
jno
add
inc
cltd
xor
xchg
mov
add
pop
icebp
lods
push
in
pushf
mov
xor
lock
inc
or
icebp
pop
cld
mov
add
loop
cmc
adc
jmp
inc
imul
jne
add
inc
cmp
inc
clc
add
stc
or
cwtl
daa
bound
ret
loop
push
push
adc
lahf
pushf
mov
flds
pushf
loop
loope
in
mov
pop
xchg
mov
adc
shll
add
fmuls
sub
loope
ljmp
add
or
adc
fsubrs
inc
xchg
ljmp
cmp
inc
in
rorl
mov
mov
rorl
cld
out
cmp
and
adc
add
lcall
dec
mov
dec
or
ss
mov
jb
testl
push
rolb
sbbb
stos
add
aad
mov
andl
pop
ds
mov
ror
or
aad
or
mov
pop
add
dec
push
dec
xlat
lret
cmpsb
lods
enter
dec
shrb
inc
les
or
add
jnp
inc
xor
xor
or
ret
ljmp
sbb
xor
or
sbb
pop
sbb
adc
inc
push
jae
add
pop
fmull
rolb
fincstp
inc
scas
das
pop
and
jle
mov
int
add
lods
xlat
or
sub
iret
mov
fwait
in
lahf
cld
pusha
pushf
enter
adc
iret
pop
xorb
add
or
int3
push
push
xchg
mov
push
cmp
clc
xchg
inc
cmpsb
lret
adc
dec
ret
lahf
xor
adc
add
inc
ljmp
bound
test
cmp
jnp
popa
cmp
mov
arpl
push
ret
pop
push
and
cmp
lods
cmp
or
es
hlt
mov
jmp
mov
mov
bound
enter
mov
push
push
cmp
jecxz
ret
mov
pusha
xchg
sbb
sbb
lock
cmp
mov
jns
pop
mov
repz
mov
test
and
fimull
jl
mov
ja
mov
sub
mov
mov
push
mov
jle
movsl
jnp
pushf
and
xchg
clc
loopne
adcl
test
jg
xchg
aaa
and
dec
test
add
mov
mov
rcrb
call
sahf
movsb
and
mov
aad
jle
xchg
lahf
js
hlt
mov
jl
xor
inc
ret
cmp
sbb
mov
push
test
sbb
in
add
dec
jecxz
mov
out
xlat
inc
jecxz
push
pop
sbb
test
lcall
add
hlt
repnz
pusha
add
data16
pop
sub
adc
pop
xchg
in
pop
test
sbb
cmc
shrb
stos
mov
and
xor
add
or
xchg
adc
xchg
test
fwait
hlt
jmp
jl
xchg
hlt
out
cmpsl
pop
sbbb
scas
and
adc
mov
bound
lods
movsl
jp
sbb
mov
dec
xor
mov
movb
call
enter
xchg
loop
test
xchg
xchg
mov
mov
je
adc
ror
cmc
ret
cmovp
fucomi
jg
frstor
insb
add
out
sub
leave
xchg
pushl
jo,pt
dec
jo
movsl
bound
enter
cli
add
rolb
add
jns
mov
cmp
decb
mov
push
loope
mov
loopne
and
jecxz
and
push
xor
dec
jne
aas
mov
jge
push
push
mov
cmp
int3
jmp
loope
mov
xor
out
ds
shr
mov
bound
inc
icebp
idivb
dec
adc
xor
icebp
xchg
les
shrb
cmp
mov
dec
cmc
cs
addr16
leave
adc
das
or
insl
lods
push
mov
push
add
cmp
add
mov
adc
xchg
and
daa
test
mov
ret
xchg
addr16
adc
add
and
rolb
xchg
mov
pop
inc
out
push
mov
loop
das
cmp
and
mov
sub
rorl
pop
ss
jl
loopne
std
scas
push
or
gs
mov
data16
pop
dec
mov
shll
xchg
test
cmp
dec
call
push
frstor
mov
testl
data16
jns
inc
adc
cmp
pop
sar
lcall
inc
add
mov
push
sbb
dec
xchg
pop
test
loop,pn
insl
mulb
aas
jmp
jne
cmpsl
insb
and
dec
bound
js
adc
jle
ret
pop
lcall
or
aad
adcl
loope
nop
movsb
jae
mov
push
or
cmp
inc
loope
call
dec
sbb
dec
data16
sbb
aaa
pop
stc
pop
mov
in
sub
or
sbb
sub
out
pushf
pop
je
punpckhdq
and
xor
scas
popf
call
mov
and
mov
push
cli
add
xor
mov
mov
in
enter
xchg
xchg
or
arpl
mov
sbb
mov
sbb
in
sbbb
dec
outsl
lock
adc
orl
nop
cmp
push
jecxz
cmp
xor
scas
clc
lods
ret
jnp
xchg
xor
push
mov
mov
jb
std
imul
lods
bt
loope
mov
pusha
fs
or
into
icebp
add
mov
outsb
lods
lahf
adc
mov
xchg
inc
adc
mov
mov
add
pop
int3
dec
pushf
cmpsb
mov
inc
icebp
pop
push
push
cmpsb
pop
popf
popa
xor
pusha
sbb
js
and
sub
into
pusha
mov
push
dec
jg
leave
jmp
iret
negl
cld
sub
and
dec
lods
push
or
shl
cmp
decl
stos
pmaxsw
xlat
xchg
sahf
pop
scas
jo
jo
pop
clc
dec
enter
stc
fcompl
adc
je
add
into
out
testl
rorb
sbb
in
insl
xor
add
jecxz
pop
sub
cmp
xor
mov
pushl
jl
ficoml
jmp
test
incb
movsl
ljmp
cwtl
pop
pushf
jg
and
or
cmpsb
jns
pop
add
mov
add
pusha
into
and
mov
pop
xchg
fs
cwtl
out
inc
scas
imul
sbb
pop
shll
jmp
in
mov
cld
cs
out
mov
pushl
adc
cmpw
outsb
push
pushf
jp
cmpsb
xor
and
les
data16
ljmp
je
sti
pop
xchg
xor
outsb
sub
sbb
test
add
jmp
into
xchg
bound
fs
das
add
lods
cs
inc
rclb
cmp
inc
cmpsb
jp
pop
out
jg
jg
mov
and
adc
mov
popf
cmc
push
or
add
ret
sbb
popf
shl
out
jg
call
pop
out
sbb
dec
scas
cmpsl
add
test
ret
out
cli
jmp
push
mov
push
or
mov
mov
xor
or
pushf
js
lahf
adc
ljmp
ret
push
mov
xor
jo
push
dec
mov
xchg
cli
or
xchg
push
push
lods
mov
fdivrp
mov
and
fwait
and
add
sbb
xchg
or
mov
nop
lcall
cmp
outsb
ljmp
cmp
lock
pop
and
push
faddl
sub
inc
mov
mov
ret
adc
notb
das
pushf
movsb
cmp
jmp
push
sub
das
clc
jg
sbb
mov
inc
inc
mov
repz
loopne
ret
sbb
mov
jp
aaa
mov
iret
sbb
out
mov
ss
clc
push
pop
or
sbb
or
cwtl
xor
mov
filds
sar
in
test
sbb
or
cmp
or
hlt
hlt
adc
ds
pop
in
jg
rolb
mov
sub
shlb
add
cli
push
pop
xor
aam
sub
and
mov
cli
pop
sbb
repz
xor
jne
mull
stc
adc
push
pop
push
mov
int
lea
fadd
cmp
push
jl
inc
pusha
mov
dec
push
pop
js
xchg
xchg
sbb
adc
stos
dec
pop
lret
gs
pushf
mov
lock
in
adc
add
lahf
lea
push
pop
xor
jg
fdivs
lods
push
xchg
dec
push
imull
mov
enter
inc
cmpsb
lret
adc
and
jl
cs
dec
inc
lds
in
xchg
fs
mov
lods
bound
sbb
psubusw
xchg
dec
decl
adc
subb
mov
push
imul
or
outsb
ss
int
ds
int
pop
xchg
ljmp
shrl
push
inc
push
fstpl
dec
dec
cli
mov
mov
out
and
aad
sub
mov
fcmovb
adc
cli
add
out
sar
scas
add
inc
jle
movsl
cmpsl
nop
sub
outsb
enter
mov
test
pop
add
lcall
je
scas
lock
mov
mov
mov
popf
xchg
adc
push
xor
repnz
lea
mov
sbb
or
or
add
sbb
cmpxchg
out
ja
rorb
or
and
mov
or
data16
loopne
inc
roll
rclb
xchg
xor
inc
andb
clc
or
push
stos
xor
jae
fwait
leave
dec
cld
mov
add
clc
lcall
dec
and
adc
std
loope
and
and
test
jle
mov
mov
movsl
xchg
cmp
out
xor
aas
repz
cmp
sbbl
cld
pusha
mov
inc
mov
in
or
sub
imulb
adc
jg
es
cmp
rorb
vmfunc
sahf
jbe
cmp
scas
mov
adc
cmpl
xor
lcall
xchg
mov
pusha
clc
jne
dec
out
adc
leave
or
imull
pushf
sbb
out
cli
addr16
iret
adc
inc
cli
enter
sahf
mov
and
incl
jne
push
xchg
aad
adc
dec
popf
add
in
xchg
cld
sbb
lahf
ja
push
push
push
push
hlt
das
cli
call
test
out
adc
cltd
push
bound
mov
jno
pop
xor
mov
pusha
sbb
sub
lret
repz
ljmp
sti
push
mov
add
icebp
push
cli
out
ret
outsb
push
aaa
sbb
jg
jmp
lret
cld
mov
add
sbbl
jmp
test
push
pop
gs
filds
sar
xlat
push
lret
or
orb
mov
or
aas
addb
popa
and
test
cmp
fdivl
out
lret
xorb
ret
mov
pop
loopne
xor
adc
or
call
cmp
movsb
mov
mov
mov
fwait
sar
dec
fists
data16
in
add
cwtl
lock
sub
fs
push
cmc
or
and
incl
mov
or
orl
ljmp
mov
mov
sub
ret
shll
mov
lcall
jns
jg
mov
pop
xchg
in
inc
xlat
mov
clc
sub
adc
clc
adc
aad
add
out
clc
lock
cs
gs
popf
and
push
cld
fisttps
popf
int3
cmc
loopne
mov
sarl
xor
push
or
loopne
outsl
inc
incl
pop
std
inc
xchg
pop
push
sub
mov
lds
les
sbb
add
sub
test
ljmp
xor
add
and
add
mov
mov
mov
cmc
jae
aam
inc
enter
or
xor
or
cmpl
push
dec
data16
dec
out
clc
xor
push
fnstcw
js
sub
add
fistps
in
or
mov
mov
lock
notb
or
inc
fists
clc
inc
stos
pop
lock
mov
add
mov
push
cmp
push
dec
push
add
or
xor
or
adc
sbb
mov
sbb
sbb
loopne
aam
mov
sub
sti
lcall
or
sbb
pop
mov
daa
pop
adc
cld
add
inc
add
test
sahf
jns
mov
jb
jmp
aaa
adcb
adc
lods
xchg
adc
outsb
mov
das
ret
imulb
lods
cld
insl
je
fadds
sbb
cmp
add
outsb
jecxz
push
mov
insb
mov
clc
movsb
jbe
mov
cld
push
ss
adcb
pop
mov
sbb
pop
jo
jo
dec
add
sbb
cmp
and
insl
pop
and
insb
inc
loop
arpl
outsl
data16
ficomps
pop
add
cmp
cmpsb
js
and
data16
int3
ljmp
mov
in
sahf
xor
cs
jmp
or
or
dec
and
or
das
std
or
aad
mov
xor
mov
xchg
orl
aaa
lock
rcrb
insb
lds
ret
mov
popf
fcomps
rcrb
out
sbb
sbb
sar
jne
add
adc
add
and
sbb
movsb
sub
jl
jl
push
repnz
xchg
fs
xchg
pop
scas
or
jnp
inc
mov
push
and
les
xchg
sar
test
and
js
loop
pop
mov
cmpsb
adc
nop
jb
icebp
shrb
les
movsb
andb
xor
xchg
sub
or
cmp
mov
push
or
pop
cltd
fcoml
pop
jecxz
rorb
add
mov
mov
push
adc
negb
mov
push
shl
incb
sbb
jl
cmp
pop
xchg
jge
sub
lahf
lret
xchg
mov
les
and
loop
lcall
mov
cmp
inc
stos
es
and
enter
xchg
push
in
jge
outsl
insl
addb
dec
rolb
sbb
outsl
dec
pop
les
add
mov
addb
int
push
icebp
in
in
sbb
or
inc
insb
pop
and
cmpps
lock
add
test
push
sub
dec
mov
out
jmp
and
ss
mov
push
cld
mov
vpmulhuw
inc
xor
dec
adc
pushf
and
sub
loope
mov
adc
jge
ficoml
sbb
les
cmp
push
add
dec
add
mov
aam
pushf
rolb
ret
and
call
rolb
jns
push
pop
loope
mov
shlb
mov
cmp
inc
mulb
cld
rcrb
inc
imul
mov
cli
or
sub
daa
addl
or
xor
scas
xchg
xlat
xchg
inc
test
fcoms
xchg
loopne
loop
out
lods
mov
aad
add
xlat
adc
std
pop
fdivrs
testb
aam
mov
mov
stc
add
adc
sahf
in
add
add
test
test
insl
jmp
jb
mov
dec
int
data16
cmp
fadd
scas
stos
cli
mov
xchg
pushf
mov
jg
mov
lds
jno
dec
push
sbb
icebp
mov
or
pop
mov
pop
jb
mov
pop
xchg
xor
push
cmp
shlb
add
xchg
push
ljmp
or
pop
iret
cmpsb
mov
and
clc
ja
push
insb
add
adcb
push
pop
in
mov
out
mov
xor
jb
add
dec
xor
movsl
icebp
imul
lock
xchg
ljmp
scas
jp
mov
je
jp
push
pushf
les
xor
mov
lods
xchg
xchg
es
roll
test
mov
orb
sub
jbe
push
daa
xor
jbe
mov
add
jo
enter
icebp
mov
bound
cmp
loope
test
call
mov
dec
or
out
int3
insb
mov
mov
stc
adc
sbb
sbb
lea
sahf
or
push
mov
in
mov
lcall
incl
jno
adc
dec
jbe
cld
xchg
sbb
and
lcall
pop
and
and
or
rcr
jg
or
and
adc
je
or
or
incl
or
test
sbb
ljmpw
in
xchg
push
fwait
dec
cmp
sub
les
mov
dec
dec
or
xor
test
out
jl
or
cld
xor
cmp
mov
dec
add
clc
ja
dec
adc
neg
in
fwait
jg
jb
adc
test
mov
cltd
push
sub
bound
popl
mov
add
cltd
aas
mov
daa
mov
mov
sbb
add
mov
pop
sbb
dec
mov
int3
inc
sbb
lock
cmp
test
pushl
fwait
push
add
loopne
out
inc
add
leave
into
lock
in
push
jae
xchg
mov
aaa
pop
jbe
pop
xchg
mov
xchg
adcb
mov
stos
rolb
je
movsb
adc
orb
mov
frstor
loopne
mov
push
adc
cmp
mov
adc
push
fwait
inc
cs
cwtl
sub
in
dec
pop
add
add
or
pop
mov
cwtl
insb
or
mov
in
inc
loop
mov
scas
cmp
call
dec
inc
movsl
in
inc
sti
faddl
aam
fcmovu
outsb
adc
out
dec
xchg
sub
imul
test
xchg
dec
fucomip
dec
pop
movsl
or
jmp
daa
sahf
add
decl
test
mov
push
mov
loope
push
pop
nop
jb
sub
loopne
and
lods
fcompl
aaa
sub
add
fcomps
test
hlt
xchg
mov
dec
push
ret
cmpsb
sub
push
mov
sbb
out
or
jbe
lods
cwtl
lahf
fwait
outsb
stos
pop
inc
mov
dec
pop
pop
mov
test
xlat
sub
outsl
les
movsl
cmpsb
sub
shll
sub
lock
push
fisubl
cld
jbe
mov
mov
push
mov
sub
mov
jmp
movsl
push
add
movsl
sarb
test
push
add
mov
lret
rolb
roll
cmp
idiv
aaa
adc
je
push
arpl
or
and
scas
stos
fsubs
movsb
jns
ljmp
hlt
push
aam
xor
jmp
pop
in
push
mov
into
sbb
gs
cmp
mov
mov
push
sbb
pop
add
cmp
dec
repnz
xchg
and
cltd
outsb
pop
popf
and
cmpsl
in
call
clc
inc
std
push
pop
add
xor
mov
lahf
jo
rol
sarl
mov
push
imul
mov
test
hlt
xor
pop
test
js
aam
cmp
in
add
sub
pop
adc
rcrb
and
adc
push
mov
cmp
scas
inc
and
push
imul
inc
adc
icebp
add
lods
pop
mov
js
sbb
aaa
cwtl
inc
popf
mov
xchg
mov
xchg
aam
es
xor
fcomip
push
sbb
sub
int
adc
pusha
inc
out
repnz
cmp
and
aas
int3
cld
into
aam
jl
test
inc
cmpsb
dec
adc
adc
enter
push
push
fildl
inc
or
ljmp
je
inc
imul
jbe
mov
test
or
inc
push
nop
pop
push
push
shrl
enter
push
lds
aaa
cwtl
cltd
cs
inc
push
aad
jno
pop
adc
lret
push
call
adc
fsubrs
and
mov
add
lods
shrl
lods
sahf
xchg
scas
loop
push
shlb
cmp
hlt
pop
out
fildll
dec
sub
pop
test
mov
cld
push
ljmp
cmc
mov
cs
test
sbb
pop
out
cmp
mov
sahf
aaa
xchg
push
test
idivb
and
ljmp
lea
push
aad
int3
sti
pusha
xor
in
xor
sbb
adc
add
mov
arpl
mov
cli
pushf
and
mov
inc
and
stos
add
addb
out
xor
dec
jg
pushf
mov
ljmp
mov
pop
cmpb
and
mov
int3
jp
test
enter
add
pop
aad
dec
orl
lret
pop
inc
add
or
adc
sbb
and
and
sbb
inc
cld
inc
inc
xchg
jmp
fs
sub
ljmp
into
call
pop
mov
mov
loopne
adc
cwtl
cli
incl
ds
add
mov
nop
call
shrb
and
in
repnz
divb
ljmp
into
jmp
out
pushf
or
pop
push
xor
mov
sarb
shrl
sub
shr
push
mov
jg
jae
xor
add
out
test
push
decb
jp
adc
xchg
mov
cmpsb
cmp
mov
jo
adc
push
jbe
cmp
lahf
movsl
fcom
sbb
repz
jg
dec
movsl
inc
call
xchg
ljmp
das
cs
decl
das
jns
je
cmp
stc
test
les
xchg
add
xlat
shlb
pop
mov
sub
sbbb
decl
dec
fisttps
insl
sub
arpl
cmp
pop
clc
ljmp
and
inc
mov
sub
cwtl
rcr
add
ja
push
cli
enter
mov
inc
roll
adc
data16
jmp
insb
dec
jle
test
add
fmuls
nop
inc
inc
mov
xchg
fdiv
lahf
inc
ffree
cmpsb
std
pop
jne
js
adc
js
roll
bound
and
fcompl
cmpsb
xor
incl
mov
sahf
pusha
add
mov
push
push
and
repnz
jp
pop
arpl
es
aad
and
rcrb
lock
add
xor
push
mov
test
sub
jge
dec
pop
sahf
cmp
xlat
scas
or
ret
rclb
add
xchg
push
data16
or
bound
push
push
fmull
lret
movsb
xchg
loope
jecxz
cmp
or
pop
or
dec
lret
xchg
cmp
test
pusha
and
cmp
sbb
xor
pop
sub
js
jae
sbb
or
push
cmc
adc
mov
sub
add
mov
scas
add
pop
push
rolb
mov
xorb
enter
add
cli
pop
pop
and
in
out
jp
les
sarb
inc
add
pop
aad
push
jne
lahf
push
mov
jmp
cwtl
sbb
fcoml
insb
negl
inc
push
cs
adc
test
sub
out
adc
cmpl
sub
sbb
cmp
rorb
jmp
mov
ss
push
sahf
mov
inc
sbb
pop
adc
arpl
mov
pop
mov
adc
popf
push
and
ret
sbb
pop
mov
lock
add
mov
adc
pushl
xor
xchg
sub
sbbb
jmp
fisubrs
testl
xchg
fldcw
ljmp
popa
mov
cmpb
shlb
add
pop
ror
push
or
jg
out
xor
xor
or
sub
push
outsl
ret
and
sbb
scas
cltd
xor
adc
add
ds
ret
out
xor
xor
fildll
loope
mov
mov
cmp
mov
mov
cwtl
adc
mov
lcall
adc
ljmp
pop
pusha
or
mov
jbe
ret
jmp
icebp
inc
xor
es
jg
andb
outsb
sub
mov
push
dec
and
ljmp
jno
and
adc
xchg
or
inc
xchg
or
adc
fisubl
add
inc
ja
or
xchg
rcr
add
jb
inc
mov
std
lret
inc
xchg
dec
xorl
decl
setbe
add
in
or
add
cld
fisttps
mov
popa
adc
mov
fcomps
in
cld
into
jg
fstps
js
jecxz
dec
adc
mov
repnz
call
push
or
flds
int3
cmp
push
std
lcall
hlt
sbb
shlb
pop
add
pop
mov
push
sub
rcrl
mov
inc
ret
stos
ljmp
mov
lds
sbb
mov
sbb
gs
or
mov
inc
test
cltd
lret
out
test
pop
add
mov
and
add
add
pop
cmp
stos
sub
test
xor
or
test
mov
mov
je
std
or
in
xor
adc
call
lret
call
push
xchg
into
rcr
aad
repnz
push
or
add
cmp
push
es
fldcw
or
scas
adc
in
cs
sub
push
push
sbb
fs
jp
sbb
dec
in
out
sbb
fsubl
sbbb
repz
cmp
in
fmuls
xchg
inc
jg
and
jge
push
insb
sbb
sahf
adc
outsl
mov
and
pop
addb
pop
xor
jb
incl
fisubl
nop
or
mov
mov
lock
mov
mov
mov
ret
adc
or
insb
jne
jl
jno
and
popf
adc
mov
jns
insb
shrb
ds
xchg
adc
xchg
dec
lea
int
push
add
insl
mov
in
pop
sbb
push
std
or
outsl
mov
jo
inc
gs
ljmp
stc
xor
sbb
adc
dec
int3
sbb
pop
test
or
js
lods
inc
mov
testb
push
jbe
clc
movsb
xchg
or
ret
xor
xchg
mov
orb
lock
cmp
or
pop
xchg
testl
xbegin
daa
push
pop
lret
icebp
jb
add
lahf
mov
adc
dec
jp
ds
mov
roll
pushf
inc
in
mov
imulb
cmp
pop
rorb
mov
loopne
jp
push
push
cs
sbb
mov
loop
pusha
clc
push
out
or
push
inc
pop
hlt
and
add
sbb
lcall
stos
inc
pop
addr16
cmp
repz
clc
or
dec
pop
insb
stos
cs
mov
ja
or
mov
mov
sahf
mov
icebp
xor
and
sar
xchg
mov
jbe
add
mov
mov
pop
dec
in
das
mov
and
repz
cmp
mov
leave
stos
rcll
test
adc
or
pop
inc
int3
mov
push
sub
jne
push
sbbb
shrb
inc
aas
pop
sub
jle
mov
mov
adc
dec
and
imul
jmp
jne
ret
in
fcomp
fwait
mov
outsb
mov
stos
add
xchg
inc
jns
sarl
enter
and
clc
aam
xchg
lea
and
lock
jnp
outsl
fbld
rclb
es
lahf
enter
stos
loope
cld
aas
and
cwtl
dec
xorb
mov
or
add
sti
incl
sub
push
inc
xlat
mov
add
mov
fs
sbb
sub
cmp
lahf
icebp
mov
adc
inc
mov
int
addl
call
inc
cmp
sub
fists
add
xchg
in
je
and
andb
fiaddl
je
push
lds
xchg
jb
outsl
cld
jp
sub
out
mov
cs
rcl
xchg
jle
fcoms
adc
mulb
dec
icebp
sbb
xor
push
mov
lock
cmpsl
mov
or
or
xchg
sbb
in
ja
mov
jmp
mov
jne
push
jle
repz
pop
push
add
pop
lods
fists
ja
cs
push
cmp
hlt
push
dec
mov
or
push
and
shll
add
call
adc
imul
insb
cld
ds
xchg
add
insb
pop
or
push
rcl
scas
mov
jp
jb
sahf
cmpsl
push
mov
and
jbe
aam
mov
js
in
adc
inc
scas
mov
push
stc
movsb
cmpsl
mov
pop
fcoms
sbb
andb
clc
or
jge
jb
sbb
movsb
scas
mov
and
sbb
jo
addr16
add
xchg
xor
movsb
hlt
mov
sub
push
lods
push
push
decb
loope
aas
cs
lock
jo
or
push
pop
pusha
adc
push
mov
mov
cmp
lock
les
cli
mov
cmp
and
rorl
mov
hlt
je
rolb
mov
decl
sub
out
cmp
push
add
mov
bound
mov
std
jl
jo
fwait
or
mov
pop
std
aad
and
jne
call
nop
std
fists
test
out
xor
int3
cmpsl
sbb
insb
inc
xor
cmp
pop
add
add
inc
call
adc
ret
and
pop
jge
jl
js
rorb
flds
pop
sarl
lods
sub
sbb
hlt
sub
out
adc
les
sbb
pop
mov
pop
xor
mov
mov
jbe
sbb
mov
or
mov
int3
push
and
fwait
xor
sbb
adc
loop
mov
jp
add
rolb
xchg
jle
mov
xor
pop
mov
sbb
push
push
mov
inc
cld
xchg
rorl
or
data16
and
int3
sbb
push
inc
popl
subl
add
nop
jge
add
dec
cld
fisttps
xor
cwtl
inc
shlb
jne
pop
lock
imul
decb
push
mov
jo
mov
sbb
call
mov
pushf
add
or
inc
ret
popa
mov
xchg
cmp
mov
pushf
xchg
dec
lcall
test
sarl
rcrb
pop
dec
adc
loop
push
mov
test
cmp
push
nop
pushf
sbb
sub
out
rclb
mov
inc
repz
jo
mov
ljmp
ss
adc
push
and
fcmovu
push
ljmp
popl
add
mov
pop
clc
sub
xor
inc
xchg
imul
jle
inc
sbb
icebp
dec
movsl
xchg
movsl
dec
scas
fwait
stos
test
dec
insb
adc
jle
jge
in
cmp
inc
enter
ljmp
xor
mov
mov
and
shrl
mov
icebp
into
popf
ds
mov
movsb
fbld
jg
popl
jp
mov
add
into
sub
inc
rorl
sbb
pop
mov
add
fcomip
repnz
push
or
mov
mov
pop
insb
repz
mov
xchg
loop
sbb
aam
js
adc
push
or
xchg
xchg
and
add
aas
push
ljmp
push
fadd
dec
jnp
add
fdivp
fisttpll
mov
mov
jo
insl
push
arpl
sub
fcoml
adc
pop
xchg
popa
cmpsb
aaa
sbb
loop
jle
sub
idiv
lret
jle
rolb
jo
xor
mov
es
and
cli
iret
inc
dec
sbb
push
lock
aad
ret
and
add
addr16
xchg
mov
sub
jl
mov
and
adc
std
jmp
jo
pop
les
mov
sbb
div
clc
adc
dec
je
enter
xor
sub
decb
inc
gs
arpl
and
ss
jns
mov
adc
mov
inc
mov
push
mov
sub
sahf
insb
stos
jno
popa
xor
push
aas
adc
insl
add
inc
xchg
insb
cltd
xor
fs
pop
sbb
inc
adc
jbe
adc
push
sti
mov
dec
enter
jle
jg
test
movsl
mov
ror
gs
ret
inc
test
sbb
out
cmp
mov
dec
push
inc
mov
lock
and
out
mov
dec
loope
out
pop
sub
pusha
jl
inc
pop
lahf
fisubrs
sbb
sub
cmp
loopne
mov
loope
je
xor
jl
lds
loope
push
int3
adc
fadds
dec
jb
movsl
pop
rcrl
mov
stos
pop
int3
add
mov
mov
jl
loope
insl
sar
inc
aas
or
fsts
aas
cmp
cmp
in
cmpsb
test
inc
adc
addr16
or
ret
push
mov
shrl
cltd
js
add
sahf
cwtl
addb
xchg
push
add
je
jns
mov
out
aad
or
jnp
mov
mov
and
mov
incl
mov
jmp
lret
sbb
add
inc
jns
add
xchg
cmp
psubsb
mov
int
mov
push
test
push
sub
loope
lcall
jne
hlt
mov
mov
fmul
aam
lods
push
inc
dec
xchg
outsl
fidivl
js
aad
stos
enter
inc
int
and
ret
or
faddl
outsl
loope
test
mov
test
adc
std
lds
lods
mov
inc
fidivs
test
push
add
std
test
xchg
inc
xor
sub
stos
pop
sub
inc
push
sub
push
mov
sbb
cmp
mov
add
out
xchg
dec
and
jp
mov
pop
push
push
and
inc
or
add
dec
mov
jle
lret
jecxz
push
test
push
push
dec
fsubrl
add
arpl
int3
xor
pop
decl
xor
popf
pushf
sbb
jge
dec
testb
pop
push
push
lds
leave
int
mov
xchg
clc
sbb
add
imul
fbstp
sti
mov
or
mov
fs
adc
sub
cmp
xchg
inc
adc
pop
inc
out
mov
cld
imull
add
fdivl
insl
or
rcrb
sahf
add
es
push
pushf
stc
popf
sub
mov
adc
jg
shrl
ret
push
test
xchg
mov
enter
jno
das
inc
data16
mov
mov
je
les
xor
push
mov
sbb
sub
insl
inc
add
call
xchg
push
movsb
pop
add
xorb
dec
mov
pop
jl
dec
push
inc
scas
stos
and
dec
ss
addr16
shrb
imul
pop
ficoml
jb
mov
cld
les
cmp
aam
jge
xchg
mov
xor
adc
xor
push
cs
ds
dec
jbe
in
lds
jl
and
and
sahf
xor
fbstp
stc
adc
add
js
mov
mov
test
fdivrl
cwtl
test
mov
mov
mov
loopne
test
mov
outsl
lods
and
mov
lock
cs
adc
fbstp
sbb
sub
cmp
mov
das
mov
ja
mov
mov
sub
and
ret
push
inc
shrl
addr16
inc
outsb
push
add
pop
stos
mov
cmp
xor
fs
loopne
push
pop
push
daa
xor
push
sbb
cwtl
xor
nop
and
dec
cmpsb
popf
mov
jae,pn
fs
push
lahf
scas
push
in
js
xchg
push
xor
cmc
scas
shll
cld
fsubrs
gs
negb
pop
jns
cvttps2pi
sbb
adc
jl
ds
rorl
adc
insb
lds
add
sub
hlt
xor
mov
or
jle
push
test
push
cltd
jecxz
xchg
mov
jnp
inc
jg
mov
movsb
das
inc
js
rcl
sahf
shrb
jg
xchg
jl
ss
dec
mov
sbb
mov
dec
mov
rcrl
add
stos
fs
jl
in
adc
fs
inc
cmpsl
jg
push
icebp
or
mov
pop
popa
cmp
aas
mov
add
enter
pop
lods
adc
push
mov
xor
add
rcrl
out
and
mov
loop
mov
ljmp
mov
pushf
and
stos
mov
fiadds
ret
cltd
mov
jmp
les
lea
lahf
push
jg
orb
mov
cmp
mov
jle
xlat
sub
cld
decl
mov
pusha
out
sahf
loop
xchg
dec
xchg
lahf
push
mov
nop
or
shl
add
into
sub
mov
mov
mov
loope
stc
jp
xor
sub
pop
test
rcrl
ffreep
cmp
into
or
aam
cmpsl
push
mov
cmp
jge
sahf
test
and
das
xorl
ja
je
adc
cltd
out
leave
add
mov
sub
icebp
pop
or
push
xor
dec
cmp
loope
add
loopne
cmpsb
dec
mov
fucom
xchg
pusha
fdiv
fwait
cmpsb
cs
loopne
sub
dec
test
add
loope
jo
pop
xlat
call
jno
cmp
test
xbegin
and
nop
lods
jb
mov
fwait
cld
lahf
mov
cmp
pop
jg
sub
test
and
cmp
adc
push
jmp
jo
push
or
jle
pop
jb
cmp
xor
mov
and
hlt
cmp
pop
or
hlt
outsb
add
sarb
jo,pn
in
fsubrl
js
stos
sbb
cmp
fisttps
push
pop
jns
pushf
testl
push
loope
jnp
cld
out
xor
or
out
clc
incl
cwtl
mov
enter
nop
fdivr
dec
push
or
ret
add
and
inc
lods
mov
mov
cmp
sarl
and
mov
mov
aam
in
push
dec
popa
cmpl
cmpsb
jmp
rclb
mov
scas
loop
jmp
gs
stos
xchg
js
test
loopne
push
std
scas
pushl
push
js
push
jge
lds
movl
out
clc
inc
test
pop
ret
add
cmp
stos
jp
dec
adc
mov
icebp
xchg
mov
cmp
aaa
push
js
fidivrs
mov
ficomps
outsl
inc
nop
pop
popa
repz
pushl
clc
pop
lds
out
inc
mov
or
and
pushl
test
lock
cmp
pusha
hlt
filds
adc
cld
push
xchg
mov
mov
clc
cwtl
xor
ret
pop
add
not
mov
std
add
popa
scas
mov
push
or
cmpsl
add
mov
aad
lods
mov
arpl
orl
pop
sahf
int3
hlt
xchg
movsb
jecxz
jno
cmp
and
sbb
addr16
sar
out
cmp
cmpsb
cmpsb
cmp
addl
mov
cmp
xchg
sbb
es
fistl
mov
and
lods
inc
cmp
cld
cmpsb
out
cli
and
imul
or
clc
sub
aaa
int3
jne
dec
je
push
cwtl
sahf
js
lret
rol
cli
mov
cmpsl
mov
jge
xor
pop
les
cmp
adc
jb
mov
pop
dec
adc
push
test
icebp
add
sub
ds
push
mov
mov
js
lcall
fdivrl
ljmp
push
jo
and
add
or
jl
cmp
add
adc
scas
or
cs
pop
pop
sbb
shl
repz
xchg
das
cli
mov
lock
pop
push
repnz
aad
or
mov
push
ret
and
es
or
xor
mov
dec
clc
mov
inc
pop
enter
and
mov
les
jg
mov
mov
xchg
inc
mov
xchg
and
imul
sub
mov
push
adc
bound
call
push
cwtl
dec
js
or
hlt
jle
shlb
push
fldt
jmp
cmp
add
cmp
fmuls
sbb
xchg
mov
jbe
pop
cmp
jb
ja
call
mov
cmpb
mov
test
pushf
or
mov
inc
ja
loope
sbb
nop
mov
inc
xchg
lods
inc
xor
inc
push
cmp
jo
jb
mov
push
insb
inc
iret
sbb
aam
mov
push
adc
insb
adc
mov
mov
mov
and
fnclex
inc
loopne
dec
add
orb
enter
iret
cmp
sub
adc
sub
rcrb
rolb
jge
icebp
push
scas
subb
dec
shlb
decb
adc
jl
pop
and
ss
push
or
xchg
push
fdivl
lock
push
mov
jge
add
out
mov
hlt
stos
ror
dec
in
lods
xlat
sbb
mov
jno
in
orb
sbb
push
xor
sbbb
adc
pushf
sbb
fmul
pop
out
and
in
push
add
mov
mov
rcr
cmp
sbb
mov
data16
mov
data16
add
add
cmc
imul
cmp
adc
es
cmp
inc
test
mov
ror
ja
add
and
cmc
ja
int3
adc
cwtl
xor
jl
addb
fwait
sbb
incl
sti
inc
sbb
mov
test
xor
sub
sbb
pop
jl
fistl
or
rol
lods
xchg
sbb
imul
loopne
shll
push
rol
pop
and
sub
jne
icebp
jg
xor
mov
jbe
mov
cs
adc
inc
push
adc
xor
addl
dec
sbb
call
mov
jb
dec
loopne
lret
add
pusha
frstor
fstenv
sbb
xchg
cmpsb
push
aaa
push
outsl
iret
imul
shr
inc
adc
sbb
lcall
in
outsl
sarl
xchg
lahf
adc
ljmp
inc
movsb
ret
push
addl
scas
aaa
rcrb
or
inc
add
andl
jl
das
loopne
mov
cmpsb
cli
bnd
popf
and
vmovdqu
jae
add
or
add
dec
stc
cmp
jb
jne
loopne
cmp
jecxz
ds
jg
mov
ds
sahf
movsb
les
fidivl
les
mov
cmc
outsl
call
cmpsl
inc
pushf
das
fcompl
xchg
call
loop
rorb
sbb
add
sti
jecxz
jl
push
cmpsb
jecxz
call
add
xor
popl
hlt
adc
push
rcrb
int
xor
js
jno
mov
sarl
xchg
xor
daa
add
mov
xchg
xor
mov
aam
aam
rcl
or
int3
test
sahf
out
jle
dec
xor
js
dec
mov
xchg
cmp
ja
dec
sbb
cmpsb
mov
adc
cmp
cmp
lds
imul
mov
add
jecxz
mov
or
mov
lock
jo
arpl
cmp
cltd
ljmp
rol
and
add
clc
aaa
push
mov
enter
sub
mov
lcall
call
pop
sub
loopne
dec
std
cmp
sarl
add
mov
xchg
pusha
dec
and
push
outsb
pop
aam
inc
aam
pop
mov
mov
ss
xor
leave
cli
push
xor
push
cmpsb
mov
inc
pop
lds
lock
pop
insb
push
pop
xchg
jbe
mov
call
jl
test
push
rol
outsl
test
inc
push
dec
in
add
jl
or
xchg
pushf
jle
jle
mov
pop
mov
cmc
or
loop
adcl
xchg
push
mov
mov
pop
and
call
mov
outsl
jmp
outsb
stos
mov
lea
cmp
inc
and
das
mov
jecxz
push
and
sub
int
daa
dec
loope
push
adc
rclb
sahf
movsl
lea
add
xchg
mov
adc
mov
cltd
add
mov
decl
push
fidivrl
cwtl
dec
cmp
dec
adc
mov
insb
mov
out
lock
add
jb
mov
cmpsl
adc
cld
inc
and
lret
out
xor
add
or
sbbb
scas
push
push
repnz
incl
lea
andl
in
pop
shrl
cli
lds
or
and
mov
and
or
repnz
inc
lock
int
ja
jmp
sub
lret
lcall
pop
cmp
mov
add
stos
adc
lea
ljmp
in
into
and
sahf
adc
sub
movsb
hlt
mov
enter
push
dec
pop
inc
loop
mov
cmp
mov
jle
lea
push
decl
mov
repnz
or
jns
xor
push
adc
mov
mov
sbb
bound
jnp
int3
cmp
fbstp
lcall
xor
sti
cmp
imul
sahf
int3
jp
iret
jp
clc
out
test
cmp
jle
int3
add
aas
inc
fdivr
cmpsl
and
movsb
cmpb
push
xlat
and
push
dec
and
loopne
sbb
lods
mov
pop
add
and
loop
imul
jp
fwait
lret
cmc
dec
ret
icebp
adc
dec
jl
mov
xor
outsb
jp
nop
into
lcall
into
cmp
xor
sbb
loopne
fucomi
inc
mov
test
push
xor
sbb
sub
sub
data16
mov
movsl
and
fidivl
out
enter
jae
and
out
enter
daa
lret
inc
clc
inc
or
or
push
inc
arpl
lds
iret
ud0
add
divb
and
push
in
dec
xchg
cmovno
pop
push
hlt
mov
xchg
pop
movsl
or
push
push
fnstenv
cmpsl
add
adc
jl
add
lds
jp
xchg
ljmp
pusha
mov
outsl
xchg
loopne
sub
cli
push
cmpl
pusha
xor
fdivs
popf
sbb
dec
stc
jae
cmp
push
jmp
loope
jno
faddl
inc
mov
and
test
ret
and
fiaddl
cs
pop
test
push
pop
loop
dec
insb
test
lock
push
cmpsl
mov
div
shll
ljmp
aam
xor
mov
xchg
pop
in
jo
cmpsl
enter
mov
in
shll
lret
in
fbld
sub
mov
call
and
xchg
adc
scas
or
adc
les
jl
or
or
sub
adc
jge
das
inc
or
mov
mov
xchg
add
es
test
repz
lods
rcrl
pop
cs
pop
mov
sbb
push
jne
or
xor
mov
mov
ret
mov
add
cmpsl
icebp
mov
mov
dec
adc
push
inc
lock
push
sub
hlt
jbe
movsb
xor
pop
xor
rorb
gs
push
sbb
jnp
out
out
das
xchg
bound
sub
pop
dec
repz
cmp
out
xchg
addb
mov
shll
add
pushf
cmpsl
push
fdivrp
jbe
push
xor
cs
dec
inc
cmp
and
add
jecxz
and
incb
dec
mov
movsb
or
rolb
cmp
insb
fidivs
imul
cmpb
mov
push
xor
cmp
mov
push
push
lret
aad
add
f2xm1
mov
mov
cmp
jne
pop
inc
inc
sbb
lods
dec
add
xchg
xchg
xchg
adcl
sarl
repz
leave
je
clc
les
cld
sbb
sbb
icebp
sub
outsb
add
lock
mov
adc
lahf
ds
popa
add
sub
adc
shl
popa
test
movsb
push
or
andb
cmp
es
hlt
call
outsl
shlb
sbb
clc
xchg
sbb
arpl
aam
jne
sub
mov
loop
push
test
and
addb
pop
icebp
roll
xor
repz
push
das
lock
pop
arpl
sub
adc
dec
out
pop
aam
loope
in
bound
int3
jle
xchg
jb
or
push
cmp
adc
ret
push
adc
inc
test
inc
in
pushf
mov
dec
outsl
fidivrl
or
or
push
and
aaa
jne
stos
loopne
cld
add
loopne
cltd
push
push
pop
mov
push
data16
loope
inc
dec
pop
jl
into
sbb
pop
mov
add
xchg
sbb
dec
sbb
jmp
or
negb
or
mov
cmp
adc
les
lds
push
cld
and
out
std
in
daa
call
pop
stos
sti
push
out
jmp
stos
pop
adc
jbe
adc
fadd
lods
add
pop
leave
shrb
jl
dec
pusha
ljmp
or
aaa
ficoml
and
or
jb
mov
mov
sbb
rcrb
inc
sub
dec
push
adc
ret
cwtl
mov
mov
lret
jbe
rcrb
cmp
pop
lock
scas
test
adc
xchg
lock
inc
mov
inc
jge
sti
dec
scas
adc
stos
dec
add
and
pushf
pop
in
in
push
and
push
adc
jg
dec
sub
js
xor
mov
xor
jle
cmp
adc
lcall
cltd
cmp
jb
add
xchg
outsl
and
je
ja
repz
jns
jo
arpl
mov
cmc
pop
ljmp
fwait
add
inc
jo
call
xchg
push
mov
leave
cmp
shlb
pushl
adc
mov
int3
pop
mov
rorb
inc
xchg
leave
adcb
sbb
in
mov
ret
fiaddl
sbb
or
ds
repz
test
cmp
popf
add
jmp
inc
xor
adc
test
out
cli
mov
adc
sbb
iret
bnd
sub
lcall
fldenv
inc
mov
mov
lock
lcall
shr
mov
or
mov
adc
pop
sub
pop
mov
lret
movsb
push
cmp
adc
push
pop
xchg
jno
push
dec
adc
outsb
mov
adc
mov
or
xchg
or
ret
xor
add
adc
movsl
aaa
pop
push
sbb
push
repz
add
clc
scas
clc
fwait
nop
or
iret
rcr
sbb
outsl
cmp
je
mov
push
mov
xchg
inc
sub
xor
and
ja
add
inc
dec
cs
mov
fcomps
aaa
cmp
mov
sub
add
cmp
call
xor
jl
sbb
sub
mov
outsl
clc
aad
xor
jmp
adc
jg
scas
stos
andl
push
xchg
das
jl
mov
cmc
outsl
jecxz
cwtl
clc
adc
fisubs
pushl
out
int3
mov
gs
test
repnz
fdiv
clc
mov
mov
jmp
icebp
popa
jnp
jae
sbb
repz
mov
loopne
je
aas
xor
jmp
mov
call
ficomps
fs
jl
dec
push
push
xor
jl
mov
std
add
dec
mov
pop
sbb
jno
icebp
les
insl
cmp
movsb
imul
outsb
adc
dec
dec
push
or
jg
cmp
call
jg
xor
xchg
push
cli
add
dec
or
andb
fcomps
fistl
push
and
cmpsl
adc
push
nop
fbstp
mov
jae
add
inc
test
shlb
sub
and
rorb
jg
sbb
lods
lcall
enter
add
and
cmp
enter
mov
je
js
xchg
cmp
out
mov
push
out
sub
jge
adc
xchg
jbe
imul
dec
addb
jmp
inc
adc
push
pop
mov
adc
fidivl
pop
fwait
lods
stos
subb
jg
in
test
sub
xlat
push
pop
hlt
add
pushl
push
cmpl
inc
outsl
arpl
or
push
jne
ss
cmpsb
stos
arpl
daa
mov
jg
sub
sbb
int3
out
jbe
rcrb
and
mov
test
incl
pop
popf
push
clc
mov
ffreep
push
add
je
stos
call
or
xor
dec
and
sbb
adc
cld
pop
ret
rcrb
push
mov
sbb
dec
fs
bound
xchg
push
sbb
outsl
cli
add
dec
push
test
rorb
daa
and
mov
rolb
incl
inc
xor
cwtl
je
mov
sbb
stos
in
adc
adc
out
inc
mov
mov
cwtl
mov
mov
mov
rorb
inc
jb
idiv
inc
cli
sub
sarb
add
fisubl
iret
jge
testb
ret
cmp
or
mov
mov
nop
and
jg
mov
inc
int3
mov
test
cmp
in
add
stos
bound
lret
or
xchg
rclb
test
pop
iret
dec
pop
push
test
in
or
adc
xchg
int3
sbb
mov
in
sbb
mov
popa
arpl
xor
pop
jmp
jae
mov
rolb
push
mov
push
sbb
add
nop
pop
jge
add
adc
or
add
std
dec
loop
xchg
or
call
inc
aaa
pop
loop
sbb
in
add
std
nop
jo
inc
pop
push
icebp
jg
add
mov
das
xchg
adc
ss
out
loope
icebp
mov
mov
xor
add
mov
into
rcl
mov
mov
std
or
in
adc
push
pop
ror
sub
ficoml
out
les
add
mov
aad
mov
test
mov
mov
cwtl
test
xchg
sbb
mov
incl
stos
movsl
sbb
jb
adc
mov
inc
sti
xchg
push
dec
jp
add
ror
in
push
jl
xchg
lods
or
insl
jmp
rcr
xchg
aam
dec
pop
mov
mov
jp
cld
xor
es
shlb
xor
iret
sti
push
aam
incl
add
cmp
pop
pop
lret
pop
cmp
inc
ret
imul
cld
or
stos
stos
sbb
or
mov
rolb
inc
push
fsubl
hlt
or
mov
loop
bound
mov
in
mov
inc
int3
sbb
lcallw
sbb
pop
das
dec
mov
incb
add
inc
bound
xchg
cmp
ret
xchg
icebp
shlb
ret
lock
fs
xor
cs
fimull
xchg
xchg
sub
repnz
lcall
push
mov
fwait
cmpsb
mov
add
mov
push
iret
rorl
push
data16
mov
add
insb
dec
and
or
loop
xor
mov
mov
lods
mov
pop
movnti
cmpsb
test
adcb
or
cmp
decb
loopne
ja
shll
push
loop
push
popf
sti
fsubl
pop
mov
call
decb
mov
xor
and
mov
notl
aaa
sub
daa
dec
cmp
cmp
xor
sbb
pop
popf
pop
jb
cmp
add
and
cmc
je
and
clc
loopne
test
xchg
bound
mov
mov
rcr
lcall
adc
adc
add
loopne
sbb
cld
out
add
fdivr
js
cmp
and
inc
xor
mov
ret
movsb
mov
fyl2x
jg
pushf
jbe
pop
lock
push
jnp
inc
dec
mov
mov
xor
fdivrl
js
and
lcall
ds
int
imul
sbb
mov
popf
loope
or
and
mov
popa
movsb
jg
ret
cmc
and
xor
push
in
mov
aam
icebp
movsb
push
cmpsl
adc
std
sbb
sahf
adc
sbb
cmpsl
inc
or
xor
ficompl
fsubl
scas
mov
enter
mov
das
cmc
jmp
inc
jae
daa
nop
imul
inc
mov
jl
daa
pop
mov
lds
clc
inc
mov
movsb
sub
in
push
push
jg
mov
and
sbb
or
ret
ds
icebp
loope
or
sbb
fisttps
cs
mov
sar
dec
mov
push
and
dec
adc
fcoml
add
adc
hlt
das
jno
fimull
add
xchg
loopne
cmp
mov
pushf
sbb
filds
sub
push
loop
mov
xchg
les
inc
mov
or
jg
aad
and
clc
scas
mov
add
push
or
imul
xor
jecxz
sub
lcall
cmp
lods
xchg
dec
fldl
xlat
mov
mov
jle
mov
leave
inc
add
clc
mov
or
and
dec
jp
test
and
or
iret
pusha
xchg
and
dec
dec
xchg
sub
xor
insl
sub
jo
or
fbstp
inc
addb
mov
call
mov
filds
dec
dec
dec
outsb
add
and
dec
call
sub
adc
or
adc
jne
sub
fdiv
inc
test
jnp
adc
and
sub
ret
and
shlb
mov
fs
pop
mov
out
pop
cwtl
push
xchg
jnp
jge
cmp
xchg
nop
les
mov
or
lods
and
scas
cli
aaa
add
cld
mov
dec
sub
pop
add
fisubrs
jg
jmp
add
push
xchg
popa
dec
outsl
lods
and
repz
sub
loopne
and
adc
pop
mov
dec
lds
mov
lock
mov
cmp
cmp
jecxz
inc
mov
rclb
mov
push
xchg
push
jmp
nop
fwait
cs
jb
popa
sub
std
lock
shlb
jb
jmp
push
fsubl
pop
pusha
xchg
call
test
dec
jnp
lea
in
push
push
mov
mov
xchg
addl
sbb
sbb
xchg
dec
and
mov
lcall
clc
mov
add
xchg
loopne
fstpt
push
mov
push
cmp
cld
addr16
or
jno
adc
mov
push
ret
mov
rol
add
lods
jecxz
push
or
jmp
adc
loopne
mov
cld
fildl
cld
mov
pop
cmp
mov
inc
rclb
lcall
or
jl
aad
push
popa
in
in
cmpsb
nop
jne
inc
cli
and
mov
sub
mov
into
shrb
push
mov
aad
loopne
frstor
inc
xor
cmp
jbe
and
negb
orb
add
cmp
jno
lods
sub
frstor
add
call
ja
popa
fsubl
jl
pop
scas
pop
not
add
add
jbe
push
sahf
clc
xchg
outsb
mov
rcrl
sarb
xchg
xchg
ss
mov
loopne
add
inc
xor
add
rcrb
gs
adc
fs
sti
mov
faddp
arpl
cmp
sub
jg
lea
push
and
clc
sbb
cmp
sbb
aam
jp
sahf
sbbl
je
daa
xchg
mov
test
out
mov
mov
push
xchg
adc
mov
adc
ss
lock
pop
lcall
add
sbb
adc
mov
push
xchg
pushl
xor
add
fstps
cmc
out
inc
xchg
cmpsl
and
outsl
sahf
mov
sub
mov
push
adc
in
xchg
pop
cld
out
insb
xlat
or
lock
orl
lods
call
sub
push
int3
sahf
inc
and
inc
fimull
or
push
mov
xchg
and
mov
movq
push
add
pop
inc
jecxz
or
push
cmp
xlat
das
test
aaa
add
in
xchg
jmp
repnz
mov
jns
ja
js
add
outsl
ret
mov
cmpsb
and
push
ret
mov
bound
adc
push
outsl
jle
push
andb
push
test
test
or
pop
loopne
lods
cltd
or
in
filds
in
sub
push
fwait
mov
adc
and
imulb
sarl
lock
scas
pop
push
jb
aas
pusha
mov
das
adc
lret
data16
gs
mul
push
dec
call
sbb
xchg
dec
xchg
adc
outsl
stos
lcall
in
lret
cld
pop
sbb
sbb
cmp
lahf
cmp
fxch
scas
inc
jp,pn
pop
ficomps
mov
and
sbb
loope
stc
and
dec
inc
aaa
or
jle
or
adc
andl
js
add
shl
push
mov
dec
fiaddl
adc
ds
lret
push
push
aaa
cmp
cmpsl
js
push
pop
cmc
push
jl,pn
imul
inc
sub
mov
jg
les
les
in
jp
inc
jo
stos
dec
cli
pop
push
dec
xor
inc
fs
adc
push
add
and
loope
aas
fstpl
dec
push
idivb
mov
push
xchg
adc
sbb
sub
adc
dec
jecxz
je
stos
xchg
lds
das
mov
cmp
icebp
test
repz
sbb
push
push
jecxz
dec
inc
xchg
shlb
pop
push
js
jbe
iret
fsubrp
sarl
shlb
pop
jmp
pop
dec
adc
dec
repnz
rolb
enter
les
inc
dec
dec
mov
stos
hlt
adc
sub
sub
dec
or
or
popf
and
add
add
jl
dec
lods
clc
mov
punpckhbw
icebp
sbb
inc
test
lods
push
lods
jno
inc
jl
mov
ret
adc
dec
cmc
pop
or
repnz
mov
loop
cmp
xor
push
aad
jbe
pop
add
les
lcall
out
das
fsubs
push
cmp
add
and
jb
test
test
mov
sahf
lock
xchg
in
add
push
pop
les
in
iret
xlat
sbb
sub
ds
jg
rclb
or
fwait
add
push
imul
mov
test
dec
pop
loope
or
inc
loopne
and
pmaxsw
and
cmpsb
pop
enter
je
push
adcb
sbb
push
pop
push
pop
shll
dec
mov
adcb
jb
pop
adc
xchg
gs
ret
decl
lods
sub
push
and
orl
test
push
mov
in
test
cli
mov
das
jne
and
cltd
jns
call
ja
lods
jle
je
pop
cmpsl
dec
jecxz
xchg
ret
rorb
or
pushf
scas
leave
mov
stos
mov
sbb
sbb
sahf
pop
jne
repz
push
test
push
mov
mov
shll
or
fadds
lods
lock
into
sbbl
pusha
icebp
test
pop
and
jle
fistpl
pop
in
xor
bound
int
pop
ret
mov
or
mov
push
sub
push
sbb
mov
push
mov
add
xorb
incl
fisubrl
pop
adc
shll
in
adc
pop
aas
insb
loopne
push
add
nop
inc
inc
cmp
lcall
std
mov
icebp
jl
pop
fbstp
out
pop
xchg
or
push
xor
inc
bound
mov
jle
push
nop
cli
ss
push
mov
out
cld
neg
pop
push
arpl
xchg
repnz
pushf
xorl
jl
push
xor
stos
cs
mov
rolb
inc
cmpsl
roll
pop
xchg
ret
shlb
jno
sbb
xor
imul
icebp
push
enter
shll
adc
stos
jle
sbb
jp
out
or
pop
hlt
mov
jbe
xor
or
jne
and
cmp
scas
dec
mov
mov
push
xchg
adc
ret
mov
scas
xchg
mov
jne
fiaddl
out
call
inc
inc
xlat
and
inc
jmp
arpl
stc
scas
pop
or
xchg
mov
pushf
cmp
ret
fmuls
xor
enter
sbb
inc
ret
mov
adc
sbb
dec
rorb
nop
add
jecxz
pop
or
or
pop
xor
and
inc
call
jp
mov
outsb
jge
popa
mov
inc
popa
jp
adc
lret
or
or
shll
shlb
mov
jp
jg
jo
aam
call
and
adc
mov
sbb
lret
mov
mov
incb
out
imulb
loopne
cmp
ja
jb
push
dec
mov
shr
add
loopne
cld
sbb
push
out
out
ljmp
cmp
xor
inc
imul
les
mov
or
ret
daa
enter
cmpb
mov
push
imul
xchg
imul
rorl
pop
cli
aam
js
rcll
push
je
pop
je
je
mov
call
fsubrl
add
dec
sbbb
sub
pushf
jecxz
xlat
inc
fimull
mov
cmc
mov
clc
or
hlt
mov
add
rcr
cmp
sub
ficomps
or
lock
in
mov
iret
call
sbb
andb
jp
inc
sbb
mov
stc
mov
xor
or
xor
mov
mov
jnp
arpl
popa
pop
popa
push
ja
push
xchg
aam
mov
insb
mov
push
scas
mov
jnp
push
inc
inc
sbb
clc
push
mov
int3
repnz
roll
jg
mov
loop
loopne
arpl
mov
sub
gs
fisubrs
icebp
mov
mov
and
cwtl
call
ss
push
mov
pop
cmpsb
add
sub
mov
cmp
pusha
mov
test
xchg
mov
mov
aaa
mov
cmc
add
xor
or
pop
mov
jg
push
hlt
mov
jmp
jne
pusha
sarb
aad
pop
and
add
inc
mov
mov
je
sub
movsl
sarl
sub
lahf
fnsave
loop
fcoml
call
cmpsl
mov
and
mov
cmp
mov
sbb
repnz
sti
enter
push
scas
clc
pop
std
cmp
incl
test
inc
pop
and
call
jecxz
inc
out
xchg
adc
loope
es
incl
sbb
dec
pop
stc
call
in
fmuls
xor
fisubl
outsl
rcl
push
icebp
sbb
add
or
fisttpll
scas
and
rolb
dec
mov
mov
push
sbb
in
xor
add
movsb
dec
push
fmull
jl
arpl
inc
add
jl
jmp
cmpsb
ret
xchg
fcomip
pop
mov
sub
jg
iret
adc
and
and
push
pop
mov
outsl
mov
and
insl
int3
pop
push
push
decl
dec
jge
std
movsb
cmp
je
mov
clc
fucomip
jne
inc
mov
pusha
and
mov
outsl
sub
or
out
clc
lea
fisttps
mov
shll
sbb
fistpll
adc
jb
mov
xchg
rorl
jns
jge
shrl
jae
sbb
pop
divl
cli
sbb
mov
add
stos
pop
in
stc
movsb
call
jp
jecxz
shrl
enter
in
xchg
fbld
fldl
push
loop
lret
lcall
fs
ret
jb
mov
lock
movsl
cmp
and
gs
cmpsb
incl
mov
mov
and
mov
mulb
fisttps
cld
repnz
sbb
ret
jo
mov
in
xchg
push
ljmp
and
inc
or
das
shlb
mov
hlt
add
or
adc
jb
in
sub
mov
test
ret
mov
mov
push
cmp
mov
mov
lods
mov
ja
es
mov
mov
pop
or
jg
add
lcall
mov
cmp
test
xchg
ljmp
pop
xorb
fisubs
mov
and
xchg
orl
pop
pop
fs
addb
int3
adc
sar
mov
xor
cli
mov
sub
ss
inc
pop
enter
pop
push
mov
bound
xlat
dec
ljmp
or
stos
lock
out
sbb
jge
test
sub
lods
dec
xorb
push
jge
push
in
xchg
cli
jg
lea
lret
test
out
sub
movsl
jecxz
dec
inc
or
into
and
jg
xor
popf
xchg
jge
jbe
push
and
mov
pushf
xchg
les
mov
lock
sbb
cs
leave
clc
int3
pushf
jmp
pop
mov
pop
add
mov
adc
inc
jno
mov
cmp
inc
imul
cmp
pop
push
clc
push
out
dec
in
loop
aaa
add
push
xlat
decb
ss
test
fs
rolb
sub
ds
or
and
pop
add
pushl
imul
and
sub
nop
sbb
or
mov
dec
pop
jle
je
xchg
hlt
rcrl
cld
dec
xor
lret
or
ds
sbb
push
mov
or
ss
lcall
mov
xchg
mov
fisttpll
int3
xor
xor
mov
adc
add
xor
mov
in
pop
addr16
mov
jne
call
or
mov
xor
mov
adc
xlat
into
inc
mov
inc
fadds
pop
jg
sub
push
mov
in
inc
and
pop
xor
add
inc
enter
or
push
scas
in
cltd
mov
xor
clc
repz
fisubrl
pop
js
sbb
adc
or
pop
dec
or
fldenv
push
incl
out
sti
into
mov
mov
sub
ret
jbe
mov
imul
mov
push
popa
loop
xchg
sti
jge
test
ss
mov
movsl
mov
lret
cltd
mov
xchg
dec
loopne
xor
aad
push
loopne
fs
lcall
sub
push
scas
jb
xor
and
jb
mov
ret
cmp
nop
fdivrs
enter
dec
push
pusha
cmp
add
inc
sub
adc
es
mov
fbstp
adc
cmp
xchg
in
incl
sbb
lret
shll
xchg
movsb
and
push
lods
ljmp
ss
cltd
xchg
stos
mov
fbstp
cmp
dec
push
add
inc
cmpl
lret
pop
sarl
push
shrb
out
stos
dec
xor
xchg
push
push
test
pop
mov
pop
mov
push
js
clc
lret
jne
clc
bnd
jmp
fidivrs
je
subb
mov
movl
pop
loopne
xchg
sahf
mov
enter
fdivrs
jge
je
adc
rorl
cld
bound
setge
das
cmp
ja
inc
call
xchg
push
adc
sub
ja
push
sahf
cmp
adc
dec
loopne
data16
pop
mov
inc
dec
xor
xor
push
cmp
push
in
rcrl
sub
sbb
mov
dec
loope
cld
adc
loope
ja
fwait
push
and
mov
ss
push
push
mov
arpl
decl
mov
je
add
and
popa
jg
mov
jnp
cltd
cwtl
repnz
xchg
fs
les
dec
rcr
repnz
push
sbb
jle
jl
mov
add
sbb
add
lds
cmpsb
jmp
jecxz
inc
fbstp
sub
inc
jg
add
xor
and
scas
movsl
dec
shl
add
cs
idiv
lcall
push
add
pushf
inc
daa
js
cmp
pop
call
add
dec
or
cwtl
xor
ja
inc
jo
stos
and
push
or
mov
sbb
sbb
outsb
add
ss
scas
adc
xchg
push
push
xor
sahf
pop
sbb
hlt
bound
push
ja
aaa
and
aaa
jle
add
sar
and
int3
cmp
fidivs
add
fadds
cmc
push
orb
xor
ljmp
loop,pn
and
push
mov
sbb
dec
sbb
and
dec
mov
adc
push
fidivrs
mov
fisubrs
jecxz
cmp
fcoml
hlt
shrb
mov
loope
sub
add
test
dec
push
std
das
test
push
cmp
sbb
notb
or
rolb
mov
cld
adc
cli
mov
cmp
stos
cwtl
in
popa
sbb
iret
aas
mov
or
popf
push
int
xchg
lock
pop
sub
decb
fsubr
inc
mov
jg
xchg
sbb
out
adc
hlt
mov
and
clc
mov
clc
fildll
xor
dec
jl
mov
insl
fnstsw
int
dec
sub
add
or
.byte
mov
jle
js
cmp
or
sbb
ret
adc
xor
leave
ret
sti
mov
or
das
inc
dec
pop
pop
add
adc
adc
pop
ret
and
or
ret
dec
pop
inc
adc
nop
mov
jbe
xlat
mov
adc
or
pop
adc
or
jg
adc
inc
or
adc
inc
dec
inc
or
nop
adc
adc
inc
adc
sbb
dec
add
push
adc
dec
push
adc
fisubs
fildll
or
adc
adc
inc
adc
inc
pop
inc
push
add
pusha
fcomps
push
push
or
inc
sbb
xor
lcall
cs
dec
nop
mov
ds
inc
dec
rcl
sbb
xchg
adc
adc
pop
dec
dec
adc
addb
outsb
mov
lret
add
roll
adc
insl
add
popf
or
adc
or
sbb
cmpsb
test
repnz
and
mov
int3
add
sbb
mov
enter
rorb
add
popa
jbe
fidivrl
and
fildl
nop
cmc
jle
adc
fistl
ret
sub
int3
jo
mov
clc
jo
xor
mov
in
add
mov
mov
or
fwait
xor
add
ds
mov
add
imul
add
pop
inc
ret
in
inc
orl
inc
add
add
or
and
add
dec
adc
fcmovnu
fcmovne
adc
or
adc
sub
and
add
push
insl
jg
and
and
add
and
adc
nop
inc
sbb
and
mov
xor
mov
push
dec
test
or
test
neg
insb
data16
and
or
inc
test
test
movsl
outsl
mov
adc
lods
adc
push
add
dec
mov
inc
push
add
add
mov
pop
test
sub
cltd
aaa
jnp
and
adc
dec
adc
es
push
pop
push
inc
inc
add
or
imul
outsb
add
push
push
adc
xchg
int3
in
inc
dec
call
add
pop
xchg
mov
test
cwtl
nop
add
dec
and
mov
insl
push
and
push
adc
or
sbb
or
adc
xor
or
inc
or
push
sbb
add
lcall
or
int3
inc
cwtl
or
dec
mov
sbb
sub
push
add
or
inc
xchg
dec
shrb
mov
ret
scas
int
xor
shr
add
adc
add
nop
mov
nop
mov
sbb
xchg
enter
ror
and
inc
test
in
adc
or
and
stos
test
sbb
push
sub
dec
inc
mov
and
nop
add
inc
and
cld
sub
mov
add
dec
jae
insb
pusha
or
dec
lds
mov
cs
mov
jbe
sub
stos
pop
dec
aam
or
add
dec
dec
and
pop
test
roll
cwtl
and
inc
cltd
sub
xorb
add
sbb
or
out
adc
adc
or
xchg
or
int3
adc
adc
pusha
ja
cs
adc
and
add
cmp
push
adc
add
hlt
dec
test
cwtl
pop
imul
or
test
or
xor
mov
add
sub
push
add
mov
jo
dec
mov
cmp
sbb
xor
add
push
add
lods
dec
mov
popw
lcall
push
jae
dec
and
jl
and
and
mov
push
addb
add
add
fcompl
push
orl
cs
andl
insb
stos
sub
mov
les
push
xchg
dec
inc
out
cmp
sub
mov
mov
or
sbb
movb
ret
dec
sub
insb
mov
lea
ret
jo
rclb
push
and
in
push
push
ret
fmul
push
cld
cmp
mov
jl
and
push
dec
cltd
add
mov
xor
push
add
call
pop
test
repnz
js
dec
inc
movsl
inc
insb
dec
and
dec
fidivrl
int3
mov
add
adc
pusha
lods
mov
cwtl
pop
add
movsb
and
mov
inc
out
test
test
inc
data16
test
mov
adc
inc
mov
out
dec
inc
xor
inc
clc
adc
adc
add
movsb
shrb
dec
cmpsb
or
adc
loop
add
data16
and
and
sub
sbb
rorb
call
enter
pop
push
and
mov
xor
fadds
adc
mov
pushf
inc
hlt
xor
adc
push
mov
in
mov
pop
push
test
fucompp
lret
sbb
mov
add
shll
cmpsb
add
daa
pop
push
push
mov
insb
sahf
add
imul
xor
mov
push
add
or
js
push
pop
dec
leave
mov
add
out
push
mov
stos
fldcw
inc
inc
add
cmpsb
cs
ss
jp
adc
cmpsb
ss
push
push
je
add
adc
mov
cmp
bound
mov
cli
add
inc
push
add
dec
dec
jbe
jae
loopne
add
add
push
xchg
enter
or
mov
test
out
xchg
sbb
and
dec
and
fsts
pop
push
addb
decb
jnp
xchg
sub
insb
mov
add
sbb
and
or
cmp
bound
or
xchg
xor
mov
add
je
add
mov
imul
inc
push
lret
testb
push
xor
dec
pop
or
add
in
rcrb
lcall
out
dec
mov
test
cmpsb
add
test
adc
ret
add
mov
cwtl
cld
mov
push
js
dec
push
push
sbb
jp
pusha
dec
or
ljmp
adc
adc
mov
sbb
cli
rorb
mov
leave
add
into
lret
int3
cmp
test
stos
xor
sbb
adc
jmp
outsb
rorl
data16
adc
in
add
push
inc
fdivs
mov
and
jnp
or
lock
or
inc
xlat
ret
movsb
sub
addb
mov
add
sbb
jp
or
push
orb
xchg
and
into
sarb
cmp
sub
or
push
mov
ret
push
js
or
add
cwtl
test
adc
xor
lods
es
cs
in
ficoms
lret
fsubl
bound
mov
or
mov
push
sub
cmpsb
mov
mov
out
jbe
push
dec
jo
push
and
cmp
cs
sbb
dec
add
jb
push
xor
xor
cld
jb
pop
cmp
mov
shr
test
rclb
pusha
adc
adc
and
sbb
xor
sbb
sub
scas
lods
adc
test
and
push
repnz
out
and
lcall
pop
cmp
xchg
or
sub
data16
mov
push
push
js
xchg
push
dec
int
fimull
or
repnz
push
pop
pop
testb
inc
add
xor
fs
ror
push
inc
loopne
sbb
mov
int3
sbb
inc
and
mov
push
dec
pop
adc
out
les
aaa
inc
sbb
mov
xor
dec
dec
mov
incl
ret
add
add
and
popa
popa
test
fsubs
and
mov
pusha
xor
cmp
repnz
adc
mov
loopne
or
imul
cltd
push
into
repnz
lock
add
jmp
fistl
pop
or
or
andb
in
enter
test
xchg
je
add
xor
inc
lcall
or
movsb
mov
ret
test
lods
cli
mov
adc
mov
and
call
cmpsb
insb
adc
out
insb
xchg
jge
pop
imul
adc
xchg
xor
addl
mov
enter
mov
inc
add
cmp
or
loop
mov
jne
in
cld
or
sub
popl
xchg
rolb
rcll
stos
jl
ret
mov
xor
dec
rolb
cmp
sbb
or
jo
push
bound
dec
xlat
aam
sahf
jbe
mov
push
sbb
fs
inc
jp
sbb
rclb
adc
sbbl
adc
add
shrb
mov
mov
xchg
adc
ret
out
mov
enter
pusha
and
inc
or
push
call
or
mov
movsb
mov
and
add
repnz
data16
lock
and
mov
add
push
clc
push
xor
adc
roll
xor
push
push
add
adc
jne
adc
mov
push
je
fdivs
and
aam
jb
or
pop
pop
add
pusha
xor
cli
addr16
add
add
movsb
dec
jbe
add
dec
lock
pusha
sub
ret
test
adc
cwtl
adc
daa
xor
fs
inc
inc
mov
xor
jmp
push
loop
sub
push
mov
das
pop
add
pop
inc
sbb
or
mov
pop
loope
cmp
bound
mov
loop
dec
cmpb
test
xchg
inc
push
xor
xchg
add
mov
out
lcall
and
mov
call
jle
mov
xchg
test
test
pop
inc
cld
lcall
dec
sub
xacquire
adc
fmuls
or
int3
pusha
sbb
push
adc
cld
je
adc
sub
jno
nop
cmp
mov
jne
dec
ss
pop
adc
movsb
adc
jp
out
adcl
inc
cmp
faddl
cli
xchg
xor
adc
inc
or
and
add
add
push
mov
cmp
sub
add
add
add
popa
out
mov
mov
inc
add
cmp
ss
enter
dec
icebp
push
dec
sbb
or
test
adc
mov
test
inc
add
nop
inc
jbe
add
add
sbb
and
mov
js
jne
rcrl
lcall
sub
mov
repnz
fisubrl
mov
cmp
cmp
popa
es
jle
jl
add
xor
push
push
rclb
dec
call
in
add
movl
sbb
add
jnp
not
mov
es
dec
and
sbb
jmp
add
sti
mov
mov
fbstp
add
idivb
dec
cmp
inc
pop
inc
not
xorl
and
rclb
add
divb
jmp
xchg
adc
in
sbb
pusha
jne
and
mov
rorb
mov
in
in
mull
and
sbb
insl
outsb
decb
in
in
add
test
pusha
mov
and
adc
fldl2t
cmp
mov
jle
movb
inc
jbe
and
lods
xor
mov
fimuls
xchg
loopne
adc
insb
pusha
mov
xor
mov
ss
and
rorl
out
pmaxsw
xchg
ss
or
xor
jle
pop
in
push
sbb
lcall
dec
enter
out
fincstp
jb
mov
aam
xor
xchg
push
mov
sub
cmp
das
fisubs
jo
lock
sub
mov
mov
sti
not
test
je
rorb
adc
or
clc
nop
cmpb
into
int3
insl
push
sub
sti
mov
mov
clc
lcall
lods
dec
clc
dec
adc
sbb
or
push
cmp
sysret
or
testl
push
icebp
add
xchg
jg
xlat
cmp
xor
aad
sub
push
sbbl
push
loope
fiaddl
sbb
dec
or
sub
mov
xor
jne
and
xor
mov
lds
aam
push
pop
idiv
std
xorl
mov
adc
sub
lock
mov
shl
fldt
fadd
sbb
adc
cmpsb
or
scas
mov
dec
dec
adc
push
or
or
mov
ljmp
push
clc
sbb
int3
cmpl
pop
sub
ss
in
cmp
pushf
roll
or
pop
mov
adc
or
or
scas
in
js
ds
pushl
push
cld
add
pop
jp
cmp
scas
rclb
pop
jo
push
pop
aam
hlt
adc
add
adc
jno
je
pop
enter
and
stos
aam
sbb
insl
push
imul
aad
mov
push
pop
clc
scas
xor
popf
ficoms
in
enter
ret
jmp
daa
ss
mov
mov
mov
sahf
outsb
and
jmp
test
push
rcl
adc
jb
add
mov
js
add
push
push
sbb
psubq
cmpsb
ds
mov
xor
int3
in
pusha
adc
push
jecxz
sti
xchg
xlat
cmpsl
and
xchg
xor
add
xor
mov
cmpsb
inc
jo
mov
roll
mov
shll
sbb
add
and
inc
and
adc
xor
inc
pop
xor
out
stos
fists
ret
jmp
in
aas
test
xor
or
mov
insl
jne
mov
ds
dec
or
cli
aam
outsb
dec
add
mov
imul
cmp
sbb
add
mov
xchg
adc
adc
stos
or
rorb
fs
jge
adc
dec
add
out
add
xchg
call
mov
sub
and
loop
je
loope
and
decb
pusha
adc
addb
pop
pushf
ja
mull
and
mov
sbb
cs
clc
leave
sub
adc
jmp
shlb
cmp
fcmovbe
enter
popa
mov
js
imul
repz
mov
pop
ret
sub
out
push
adc
mov
cld
ficoml
mov
xor
sub
add
mov
fdivrp
shrb
clc
sub
rorl
ds
js
add
add
add
jns
call
mov
mov
insb
rorb
fildl
or
testl
js
aaa
jae
inc
fs
pusha
push
es
cs
cmpsb
shl
int
in
jp
filds
and
repnz
mov
cmpsb
lret
lret
aam
push
in
inc
out
push
xabort
inc
add
stos
add
inc
inc
jle
fsubs
adc
mov
rorl
push
xor
pop
movsl
cld
inc
in
and
aam
fimull
pop
cmp
mov
std
jne
aas
cmpsb
out
jne
pop
lret
sbb
int3
mov
dec
in
idiv
sbb
or
jge
sbb
fdiv
inc
fldenvs
ja
repz
push
add
sbb
das
mov
sbb
ret
test
call
push
les
mov
scas
andl
add
adc
ja
dec
pop
aam
add
lods
mov
ja
sub
ret
xchg
jbe
xchg
dec
jbe
inc
xlat
xor
sbb
flds
or
mov
call
xor
jno
inc
and
push
dec
dec
sbb
add
fsubs
outsb
call
push
ret
lock
negb
xchg
jne
push
fildll
mov
call
dec
lret
and
jmp
xorl
sbb
js
ds
inc
sbb
pop
clc
fiaddl
call
sub
int3
hlt
jb
adc
hlt
dec
add
and
dec
fs
cwtl
mov
cmp
jae
or
lcall
fidivs
cs
inc
inc
add
rcrl
sbb
loopne
add
mov
xchg
sbb
out
scas
in
loope
mov
mov
stc
rol
push
sub
xor
sbb
pop
cltd
mov
mov
hlt
lcall
adc
and
call
xchg
push
xor
lock
cld
add
lock
push
ljmp
out
fdivrs
push
stos
insl
leave
xor
adc
jg
pop
pop
cmpsb
xchg
add
loopne
sbb
in
fs
mov
imul
psraw
mov
sbb
adc
mov
shll
add
inc
fistpl
sbb
inc
movsb
outsl
xchg
and
jmp
fisubl
jo
jecxz
sbb
and
fldl
divl
mov
insb
dec
jmp
ret
fiadds
repnz
fsubr
or
dec
add
jne
add
cmc
icebp
add
hlt
pop
daa
sub
jmp
add
inc
hlt
les
ja
mov
rcrb
pop
sahf
push
pushf
jo
adc
fwait
sbb
imul
loope
jae
mov
hlt
cmp
sti
jle
add
push
test
ret
mov
rclb
cmpsb
sub
sub
in
and
out
test
out
add
rcr
mov
test
mov
sbb
dec
adcl
xor
fbld
std
adcb
rolb
add
push
rolb
xchg
inc
pusha
and
xchg
sbb
dec
mov
out
sub
scas
jmp
xorb
xor
adc
xor
addl
int3
xor
fcompl
rol
lahf
pop
and
push
fs
fwait
inc
mov
lret
les
push
dec
push
in
cmp
cli
and
in
mov
shlb
aam
adc
pop
je
cmpsl
cmp
insb
sti
test
sbbb
fmuls
mov
dec
fcomps
jecxz
lret
push
sbb
les
jp
aam
lods
cmp
lahf
shr
shlb
add
iret
sbb
cmp
pusha
sub
mov
mov
jae
sbb
loopne
icebp
or
inc
icebp
inc
adcb
adc
aam
insb
push
aad
or
sbb
pop
sti
or
test
cli
jo
jl
and
inc
adcb
push
xor
sub
pop
clc
lahf
inc
add
and
push
dec
or
jno
ffreep
add
repz
jnp
and
test
out
mov
das
inc
mov
push
fs
dec
xchg
add
add
mov
mov
xor
sbb
dec
adc
jg
sbb
push
and
mov
into
adc
cmc
neg
fdivrs
std
pop
cmp
iret
les
xor
in
hlt
out
add
sbb
add
iret
inc
cmp
sbb
test
fnstsw
mov
sbbl
popa
js
jmp
jbe
rcll
adc
dec
scas
inc
inc
fsubl
ds
test
aaa
fstpt
hlt
in
mov
ljmp
loop
test
rcl
xor
mov
dec
inc
cmp
xchg
add
jge
ja
cmp
jecxz
adc
jmp
jp
jmp
or
pop
sbb
mov
xchg
movsb
cltd
xor
inc
ret
adc
dec
int3
mov
in
lods
icebp
mov
jle
or
xlat
mov
mov
add
mov
or
push
cmc
pop
fs
inc
jge
loopne
push
loop
fadds
jle
add
push
call
push
inc
in
cs
and
mov
xor
lock
icebp
xchg
cs
inc
aad
loop
fcompl
dec
jnp
xor
jo
loope
xorb
sub
jmp
push
cmp
or
fxch
das
in
ds
jl
add
pop
jge
mov
aam
inc
addl
call
mov
inc
test
adc
inc
or
xor
inc
vmaxss
imul
loope
xchg
outsb
hlt
js
cmp
dec
push
mov
flds
repz
sbb
pop
jmp
or
cli
insb
pusha
push
xor
mov
cmp
inc
mov
lds
jmp
add
pop
arpl
mov
bound
fs
mov
xchg
lret
adc
inc
and
ljmp
cmpsl
jecxz
and
push
clc
add
pop
mov
push
loope
mov
inc
mov
xchg
ja
jle
adcb
inc
mov
dec
or
cwtl
sbb
ret
xor
scas
push
mov
jbe
inc
addb
mov
inc
inc
dec
xor
adc
loope
mov
std
outsb
lcall
es
gs
push
cmp
test
test
addr16
xor
and
add
ror
jbe
int3
decb
insb
arpl
push
jbe
lret
mov
loope
add
clc
inc
int
popl
and
leave
clc
lock
fisttpl
call
mov
bound
sub
inc
cltd
sbb
push
xor
sar
push
test
mov
fisubrs
jno
clc
ficomps
mov
lcall
adc
in
loope
mov
and
lahf
jo
sub
in
or
sub
shll
or
shlb
jecxz
rclb
adc
adc
dec
inc
push
jl
out
dec
xor
fwait
add
xor
xor
sbb
pop
sti
sbb
xor
incb
ud1
inc
loopne
lods
mov
jecxz
pop
push
loopne
push
out
mov
sbb
mov
fldl
int3
aas
cmp
jno
icebp
xchg
popa
fs
add
or
notb
push
add
clc
rcr
in
cli
fidivl
lock
movsb
mov
aam
lea
lods
add
subl
iret
push
lock
dec
std
mov
sub
sbb
loope
lock
add
lds
sbb
adc
lods
add
loope
in
add
loop
jo
aam
out
xlat
push
mov
ffreep
leave
pop
hlt
push
and
test
add
add
hlt
mov
in
or
dec
mov
push
inc
addb
or
sar
mov
add
neg
cmp
aas
rcll
es
push
aas
loop
and
aam
jmp
lock
rclb
pop
insl
inc
pop
lock
dec
movsb
add
inc
rorb
push
lods
cld
dec
roll
jl
js
cli
lock
lock
aaa
imul
or
ret
iret
push
cld
outsl
aas
mov
sbb
mov
mov
and
xchg
mov
inc
xor
dec
push
push
lods
jge
adc
ds
inc
negb
jne
sti
fdivp
lds
jge
cld
jnp
faddl
fisubs
cli
aad
scas
mov
add
insb
stos
in
gs
ret
stos
push
cwtl
xlat
flds
imul
cmpsb
nop
xchg
add
jp
or
repz
push
and
stc
cbtw
pop
loope
or
shl
and
push
ss
mov
popf
push
fsub
fs
mov
push
xor
call
sbb
mov
js
pop
dec
jb
sti
push
jl
xchg
sbb
adc
sbb
rorl
pushl
adc
jb
test
call
jno
jo
xchg
push
sbb
adc
xlat
and
pop
push
bound
sarl
out
adc
push
adc
inc
lahf
push
test
shl
mov
push
push
add
rcrl
je
xchg
xchg
addr16
std
mov
xor
xor
incb
pop
or
rcll
fistps
mov
insb
and
in
aaa
xor
ret
mov
pusha
idivb
scas
push
cld
out
rcrl
out
in
repz
mov
push
pop
dec
mov
lock
cmp
ret
xchg
xor
fwait
popf
mov
cld
movb
and
loope,pt
jbe
inc
sub
lret
sbb
sarb
sbb
lods
fdivrl
push
mov
fsub
mov
flds
pop
data16
addb
jbe
add
sbb
outsl
mov
adc
repz
push
xchg
les
negl
inc
pop
sarb
clc
and
sarb
outsb
and
loopne
iret
inc
outsl
test
xor
imul
mov
call
popf
jp
and
mov
push
pop
lea
push
push
loopne
xchg
adcb
adc
cmpsb
xchg
add
aas
push
sbb
push
mov
aam
test
icebp
mov
shrl
or
inc
adc
loopne
and
xorl
push
mov
add
mulb
push
test
xor
mov
or
adc
mov
pop
cld
xlat
dec
sbb
xchg
cmp
js
lods
sysenter
jp
mov
jo
and
jp
or
inc
sub
or
loope
fisttps
jno
push
jbe
in
pusha
in
push
dec
adc
push
mov
les
adc
cmp
neg
jb
cmpb
icebp
cltd
cmpsl
sbb
subb
jmp
ret
xchg
mov
dec
shlb
incb
sub
and
xchg
cltd
adc
sbb
sub
pop
sub
orb
aad
mov
ja
outsb
cmp
inc
hlt
cld
add
dec
lret
aam
fs
push
sub
add
mov
pop
hlt
test
pusha
leave
add
xchg
jne
orb
add
inc
push
pusha
xorl
push
xchg
dec
les
jmp
dec
idivb
sbb
pop
pop
jecxz
sti
push
aam
lret
add
sbb
jl
arpl
fisubrl
clc
adc
in
in
sub
add
mov
inc
incb
cltd
mov
test
fists
or
xor
aaa
jns
dec
jecxz
dec
std
sbb
add
xchg
int
mov
jmp
sbb
lds
mov
shrb
pop
int
mov
inc
lods
sub
rep
adc
pusha
sub
xor
mov
or
and
jnp
dec
fucom
and
add
jns
in
mov
loope
loope
imul
jecxz
add
scas
push
jecxz
stos
mov
jmp
inc
add
flds
push
icebp
add
pop
in
out
lea
movsb
popa
mov
add
cmp
clc
enter
cmp
jbe
sahf
mov
inc
xchg
xor
pop
push
daa
xchg
jo
lcall
sarl
pop
sbb
ja
out
dec
dec
add
mov
nop
dec
movsb
xchg
les
cmp
idivb
les
xchg
inc
inc
xor
dec
sub
add
repnz
push
call
sbb
addb
mov
or
pop
jge
scas
pop
jmp
jbe
xor
pop
add
mov
adc
pusha
sbb
faddl
rcrb
cmp
push
inc
les
jle
lods
jecxz
xlat
addr16
dec
xchg
push
jo
xor
add
faddl
sbb
or
or
mov
cli
xor
cmc
mov
insl
imul
pop
xlat
arpl
lock
in
aaa
push
mov
and
in
dec
adc
mov
add
xor
add
sbb
loopne
sbb
or
in
cwtl
sbb
sbbb
adc
or
jle
cmp
imul
and
or
js
cli
mov
push
adc
jae
push
dec
cld
ret
xor
add
fistl
jne
dec
push
rcrb
jecxz
cmpsb
jnp
loop
icebp
sahf
xchg
test
popa
xor
mov
inc
push
stos
lock
pop
mov
add
add
dec
cmp
clc
cmpsb
ret
or
call
jae
outsb
xchg
jmp
sub
into
pop
pop
pop
lret
aam
insl
mov
add
inc
es
outsl
sbb
flds
decb
aam
pop
out
mov
sbb
xchg
jb
jle
jl
push
insl
loopne
pop
mov
xor
sbb
sbb
jbe
fcomps
fdivrp
fadds
sub
xor
bnd
cmp
xor
shrl
adc
cmpb
lock
xor
test
call
rorl
addl
cmpsl
push
mov
stos
sbb
in
and
data16
hlt
xor
stc
jns
lods
xchg
jae
add
dec
mov
ds
mov
adcb
dec
add
repz
mov
dec
add
add
inc
dec
es
cld
xor
add
or
push
call
mov
ljmp
hlt
adc
adc
dec
fcoml
inc
mov
std
stos
mov
adc
pop
xor
add
fmull
std
pop
jl
std
push
gs
xor
add
xchg
push
push
mov
jecxz
mov
adc
jmp
jmp
stos
call
cmp
adc
dec
or
clc
arpl
popf
or
sub
or
jae
clc
jo
add
xor
adc
fsubrl
sub
jbe
in
insl
mov
push
add
or
mov
jp
stos
cwtl
in
lcall
fmuls
cmovae
adc
and
ret
aas
sbb
adc
ss
and
int3
jb
stos
push
out
pop
cli
sbb
sbb
shrl
cmp
and
and
xchg
jmp
mov
mov
rorl
mov
cmp
cmpl
push
dec
call
movsl
shrb
fwait
lret
push
icebp
xchg
mov
add
ficoml
add
adc
cld
xor
mov
adc
mov
mov
hlt
scas
pop
js
xchg
in
into
dec
cmovnp
xchg
ret
pushf
scas
add
fmull
mov
fldl
and
movsb
les
adc
jmp
inc
push
jle
push
cmpl
mov
fdivrl
xor
adc
arpl
inc
mov
jl
dec
pop
loope
mov
and
fcomp
lea
add
push
popa
or
loopne
js
push
jb
aas
in
add
mov
loop
scas
jnp
sub
cmp
pusha
jnp
xchg
scas
mov
fwait
rorb
cmpsl
fisubrl
sbb
call
fmull
sub
add
subl
xor
pop
lcall
test
mov
sbb
and
pop
mov
ljmp
adc
xor
sahf
scas
sbb
cwtl
adc
push
shl
xor
xor
push
mov
sbb
faddl
sub
jl
inc
pop
mov
sbb
aam
enter
call
loopne
mov
add
and
sbb
test
enter
pushf
jp
testl
popa
std
xchg
addb
ljmp
fld
cmp
cltd
sbb
lock
flds
xor
je
ja
imul
jl
fisubl
dec
fwait
push
sub
sbb
adc
shl
inc
repnz
test
lcall
enter
xor
mov
call
xchg
sub
fprem1
dec
push
xchg
jle
add
push
call
jmp
or
cs
push
in
rorl
arpl
jmp
stc
into
inc
incl
sbb
adc
and
and
jp
jae
test
or
lcall
test
xchg
pop
or
mov
cmp
pop
jbe
ret
loope
iret
push
xchg
mov
xor
cmpsb
add
adc
mov
adc
stos
add
pop
xor
adc
mov
add
mov
inc
loopne
lret
mov
ljmp
cmp
loope
dec
cltd
and
add
jl
xchg
pushf
and
xchg
pop
xorb
mov
dec
clc
pop
or
mov
pop
sub
cs
aaa
or
mov
loopne
cmp
mov
fdivp
or
cli
jne
mov
clc
push
pushf
lock
push
imul
mov
mov
inc
and
xlat
cli
test
adc
or
mov
loope
addl
les
or
in
sbb
xchg
js
rcr
xchg
fsubl
test
les
sbb
inc
add
adc
nop
fwait
or
stos
hlt
push
push
call
mov
incl
fs
xor
add
push
sbb
aam
sarl
fcompl
test
and
dec
test
add
aad
mov
and
rcr
psubsb
repz
subb
xor
fiaddl
nop
sbb
or
cmp
adc
test
xor
ret
mov
adc
or
popa
testb
push
jb
dec
add
pop
je
add
or
cwtl
jns
and
add
scas
getsec
inc
inc
lods
rolb
dec
mov
roll
sbb
jae
test
jbe
std
sbb
or
mov
addl
bound
jge
lret
stc
cmp
in
pushf
pavgb
mov
xchg
addb
pop
enter
mov
das
xor
add
insb
f2xm1
add
data16
ret
add
mov
loopne
pusha
xlat
repz
xor
xlat
gs
jecxz,pt
sbb
push
and
clc
pop
movsb
and
inc
test
jne,pt
push
jmp
gs
test
mov
lock
sub
int3
fiaddl
and
call
pop
lock
adc
push
sti
hlt
les
fdivrs
push
call
repnz
aad
ds
lcall
aaa
mov
iret
ret
add
push
cld
mov
clc
dec
sub
mov
fimull
and
aam
xchg
mov
xchg
shl
sub
test
fwait
imul
cmp
ss
sbbb
add
out
jnp
subl
aaa
out
xlat
insb
jnp
out
loop
cmpsl
aas
movsb
dec
gs
or
fst
mov
aas
loopne
leave
pop
mov
push
aaa
jb
repz
sub
stc
jg
add
add
pop
fimuls
mov
sub
or
jmp
scas
out
insl
hlt
bound
fdivl
adcl
gs
or
ret
sbb
adcl
icebp
jp
dec
add
sbb
mov
xchg
popa
repz
sbb
adc
sbb
and
sub
sbb
jle
icebp
fdivrl
shrl
xor
icebp
aas
xor
insl
lock
testb
popf
inc
xchg
addl
dec
or
mov
push
clc
rcr
das
or
stos
sub
mov
into
icebp
xor
xlat
cld
dec
sub
sub
jmp
fimuls
mov
aam
xchg
or
cmpl
pop
rcrb
sbb
jns
int
xchg
clc
fists
loop
mov
icebp
pop
xchg
add
scas
xor
add
add
arpl
sub
inc
and
shlb
xchg
mov
add
jbe
add
or
adc
pusha
stc
test
xor
or
push
adcl
clts
xor
push
lock
loope
mov
push
fadd
outsb
sbb
dec
pusha
pop
inc
dec
out
outsb
loope
add
mov
dec
addr16
inc
das
sar
loop
fwait
pop
xor
xor
inc
ret
lock
arpl
call
sub
cmp
or
test
push
ficoml
pop
hlt
lods
push
fildl
hlt
mov
call
push
inc
add
divl
enter
push
and
fnstenv
and
bnd
ret
jg
pop
mov
sahf
sbb
les
push
pop
shrb
out
cs
push
lea
push
adc
mov
cli
loop
ljmp
fiaddl
cmp
add
or
or
inc
repnz
jg
pop
adc
pusha
ljmp
jmp
jno
sbb
stc
add
jb
rcrb
jmp
jmp
inc
mov
subl
push
cmc
jne
out
jp
mov
lds
lcall
rorl
cltd
pop
pushf
clc
push
or
lock
or
sahf
cmp
sbb
jg
inc
and
addb
or
sub
daa
inc
fdivr
or
into
les
pop
outsb
xchg
dec
adc
add
sarb
pop
mov
or
pop
push
test
xor
xor
sub
jmp
insb
or
cmp
js
lods
in
addl
inc
dec
in
dec
in
add
addr16
popa
inc
ret
mov
pop
fdiv
inc
int3
sti
inc
movb
pop
inc
loopne
aam
les
xchg
adc
xlat
or
jl
dec
rclb
int3
stc
rcrl
xor
jb
adc
lea
in
xchg
in
mov
xlat
gs
pop
int3
lods
pop
mov
arpl
push
add
dec
adc
xchg
in
and
into
stos
add
sarb
popa
sub
rclb
jns
popa
sbb
jp
add
neg
sbb
and
fsubrl
sub
inc
jo
mov
cmp
and
hlt
mov
and
pop
and
cmc
mov
push
mov
fdivrl
push
call
pusha
sahf
jno
and
mov
stos
shll
lea
push
pusha
cli
ljmp
call
mov
enter
sbb
add
sub
adc
std
popa
inc
mov
pop
fidivs
add
pop
loop
sbb
movsl
loope
push
aas
pop
ret
inc
mov
loop
add
mov
xchg
mov
in
dec
fildl
fists
xor
aas
js
add
pop
dec
adc
sbb
rcrb
push
lahf
mov
jmp
adc
into
xlat
outsb
clc
push
out
inc
mov
out
jecxz
das
and
lcall
jo
push
dec
bound
lcall
jmp
or
xchg
or
add
bound
insl
lock
sub
pop
inc
call
pop
loope
jnp
mov
push
sbb
pop
mov
sahf
sub
or
call
sahf
icebp
mov
out
adc
pop
sbb
mov
enter
aaa
mov
add
int3
push
call
push
lods
mov
loope
stos
adc
loopne
xor
inc
jmp
pop
mov
mov
jp
shl
fistpll
int3
rorl
std
cmp
pop
lods
or
movsb
inc
jne
jnp
testl
adc
mov
xlat
add
xor
adc
dec
mov
xchg
ret
addr16
pop
jmp
mov
js
and
xchg
dec
sbb
or
mov
inc
inc
inc
push
js
js
scas
into
or
pop
comiss
cmp
cmp
repz
sbb
or
mov
movl
scas
and
aam
xor
adcl
mov
or
jmp
jl
addl
and
add
mov
fsubrp
cmp
sbb
inc
roll
push
orb
sub
pop
dec
jo
test
and
ficoml
fisubl
or
inc
jmp
ljmp
xor
loopne
loop
mov
mov
clc
and
cwtl
incb
fidivl
fidivrs
je
sbb
js
and
sbb
cmp
dec
lret
es
xchg
fisubrs
clc
add
js
inc
test
idiv
imul
shlb
jo
pop
adc
dec
pushf
sbb
and
xor
mov
shll
fcoms
dec
sub
ret
rorl
add
cmovnp
adc
jge
and
bound
jp
cmp
push
icebp
pop
fdivs
or
add
and
sbb
clc
xor
loopne
jb
inc
cmpsb
mov
fadd
and
lods
add
or
mov
mov
data16
ss
adc
jne
and
adc
ret
rcl
push
rol
mov
and
in
scas
adcb
add
cmp
xor
adc
cld
sarb
pop
xor
mov
dec
mov
jo
or
addr16
mov
fbstp
int3
mov
adc
sbb
add
xchg
cli
cmpsb
adc
int3
ljmp
popf
cli
cli
xchg
xorl
push
pop
sti
jmp
jp
pushf
subb
jb
add
outsb
xchg
ja
js
sbb
lret
aam
and
iret
or
mov
fbstp
sub
sbb
push
fmull
jg
icebp
jbe
push
mov
clc
pushf
frstor
adc
xchg
push
rol
bound
insb
lock
dec
cmp
ljmp
inc
cmc
shr
mov
divl
sub
jb
mov
jbe
adc
pop
sbb
ret
mov
mov
insl
sbb
push
mov
sub
rolb
xor
das
imul
js
xchg
push
cmpsl
fistpll
jge
and
adc
xor
mov
movsl
jecxz
clc
stc
and
or
icebp
xchg
inc
mov
lea
xor
and
and
push
push
xchg
loope
sub
mov
inc
mov
or
pop
rclb
insl
fstps
idivl
pop
mov
jne
test
mov
add
sub
int3
subb
add
mov
fsubr
pop
bound
dec
pop
inc
jb
adc
lahf
call
jmp
xor
rep
sbb
out
mov
ror
ja
loop
inc
cld
subl
out
call
fbstp
adcb
mov
sub
stos
dec
int3
pusha
inc
sarb
orl
arpl
fadds
add
cld
unpcklps
jmp
test
je
jl
jmp
lea
mov
xchg
loopne
int3
xor
inc
pusha
dec
iret
stos
push
pop
fldl
mov
adc
mov
adc
bound
or
lea
out
cli
add
popl
insb
and
fnstenv
icebp
icebp
push
jle
inc
ror
add
or
mov
jmp
loop
aaa
cmpsb
lea
in
inc
jae
orl
les
xchg
rclb
fwait
add
mov
lds
jo
add
lods
outsl
in
cs
push
cltd
sbb
mov
fidivl
int3
xor
cld
out
mov
fcomi
jno
and
rcll
xor
mov
loopnew
jg
sbb
sarb
xor
test
mov
mov
addb
lds
je
xchg
push
sub
push
mov
ret
sbbb
mov
push
push
add
roll
dec
addr16
lds
jge
dec
sbb
xchg
pop
jp
roll
pop
cmc
dec
nop
pshufw
lret
pop
mov
pop
sbb
fmulp
mov
in
mov
xor
icebp
add
test
jae
cmp
cmp
inc
push
mov
out
cltd
xchg
aad
rcl
pop
mov
inc
pop
shlb
sahf
rcll
ljmp
pop
sub
loop
mov
inc
mov
and
add
sbb
popa
daa
int3
movsb
in
lock
add
loop
out
and
pusha
popf
scas
lcall
les
and
mov
add
clc
shld
pop
pushf
ror
mov
ret
add
adc
adc
shll
or
dec
add
cmpsb
push
mov
dec
cld
push
and
lds
test
mov
loop
or
and
mov
cmpsb
hlt
inc
mov
push
cmpsb
sub
sub
sub
mov
fadds
clc
shrl
pop
fs
push
mov
call
add
pop
jno
push
mov
xchg
call
imul
imul
jnp
test
arpl
xor
inc
ret
ret
inc
pop
sbb
lods
fimuls
fsubr
dec
iret
adc
pop
jge
js
sub
push
andb
jb
repz
in
mov
mov
mov
cmp
fistps
adc
and
clc
jg
pop
shr
ds
outsl
push
pop
dec
bound
stc
lods
les
mov
test
add
arpl
mov
or
negb
int3
inc
mov
mov
sbb
pushl
call
pop
clc
test
je
iret
stc
sub
jb
inc
mov
ret
adc
popf
int
add
dec
pop
std
sub
add
je
sub
loop
sub
mov
xor
dec
adcb
and
dec
clc
mov
lahf
pop
roll
insb
repz
or
aam
add
and
sub
into
mov
push
lock
xchg
sbb
loope
inc
and
loope
subb
sub
sub
jo
sub
insb
ret
repz
pop
cmpsl
inc
sub
arpl
push
dec
enter
sbb
push
out
rolb
xchg
xor
lods
rclb
std
mov
loopne
fwait
pop
sbb
out
filds
push
sbb
popa
mov
inc
scas
sahf
lahf
mov
add
ret
mov
scas
fidivrl
fdiv
xchg
xor
clc
sub
dec
mov
add
into
pop
das
scas
add
inc
repz
cmp
xchg
imulb
faddl
pop
mov
ficompl
enter
pop
push
lock
negl
in
jg
in
and
cmpsl
sbb
mov
test
nop
xlat
inc
pop
cmp
add
insl
lahf
cli
js
loopne
clc
popa
inc
inc
sahf
filds
push
mov
dec
push
sub
mov
xchg
test
jae
insb
clc
adc
outsb
bnd
jmp
add
jnp
subl
dec
test
decb
loope
cld
ds
popf
jg
push
push
shl
sbb
jno
dec
dec
movsl
mov
in
mov
lret
mov
or
cmpsl
dec
adc
cmp
icebp
dec
std
fisubs
dec
shll
adc
add
clc
jp
aaa
lock
dec
imul
fstps
pop
jne
xchg
fsubs
pop
movsb
addr16
jnp
mov
mov
out
dec
xor
mov
loop
sub
ja
xchg
fidivs
adc
add
or
or
orb
jmp
inc
aad
loopne
push
les
int
or
adc
test
and
sbb
mov
cmp
xchg
sub
daa
outsb
test
mov
out
mov
sahf
repnz
sbb
lock
xorl
test
add
insb
cmp
jne
rcrb
aad
daa
rcr
clc
mov
adc
pop
idivl
and
ss
rorb
pop
or
cltd
sub
mov
ljmp
adc
jge
roll
faddp
scas
testb
xorb
loop
xchg
sbb
fisubrl
adc
xor
adc
and
jo
int3
lcall
ds
repz
xchg
sbb
push
jmp
shr
movb
adc
popf
pop
pop
cmp
jecxz
int
cmp
shll
test
ja
lods
nop
or
push
inc
insb
fmull
add
add
shrl
or
enter
loop
mov
inc
sbb
daa
lds
mov
mov
xchg
scas
nop
iret
xchg
jle
rorl
inc
enter
pop
xor
xchg
je
and
jmp
adc
and
out
loopne
add
scas
daa
jge
jle
cmp
cmp
sarb
lock
fiaddl
xchg
or
mov
inc
aaa
icebp
xlat
std
jecxz
mov
loope
inc
jp
rcr
rolb
es
pop
xor
shlb
icebp
or
cmpb
nop
and
add
clc
adc
xor
adc
mov
xchg
adc
pop
and
pushl
pop
xor
jmp
mov
stc
jmp
test
cmpsl
add
dec
xchg
cmpsb
sub
ss
or
ret
ret
mov
xlat
es
scas
adcb
aad
dec
push
add
mov
rorb
and
test
add
shlb
loope
mov
cmp
je
lods
outsl
adc
jae
out
jnp
dec
lahf
pcmpeqw
or
andl
movsl
jl
popa
inc
sub
movsl
jnp
and
fmuls
mov
adc
push
int3
imul
fsubrs
mov
inc
lcall
fsubrl
int3
jg
or
mov
cmc
test
shl
and
pop
push
sub
sub
mov
dec
dec
ret
test
jae
rol
push
adc
pop
pop
dec
int3
xchg
loopne
add
mov
orl
addl
mov
enter
js
mov
push
cmc
pop
xor
lods
sub
ljmp
cmpsl
scas
add
xchg
adc
add
stc
xor
push
or
adc
xor
and
xor
inc
inc
in
add
inc
cmp
shlb
hlt
add
std
rorl
cmp
ja
test
inc
scas
and
jmp
add
sub
and
pop
pop
xchg
sbb
sub
cld
xor
fists
mov
js
push
fisubs
aam
or
sub
sub
adc
bnd
sbb
cmp
call
inc
lcall
lock
test
cmp
dec
fisubrs
push
lods
sbb
pop
sbb
test
cmp
add
mov
pop
push
imul
addl
push
push
shll
xor
ljmp
leave
xchg
cmp
inc
add
jmp
outsl
repnz
das
loope
cld
enter
jb
inc
inc
xorl
aaa
aas
outsl
enter
lcall
insb
rorl
cmpsl
cmpb
pop
push
loope
push
mov
out
dec
ss
loopne
and
arpl
dec
movsl
in
dec
movsl
sub
sbb
adc
mov
aad
testl
mov
dec
add
jl
test
loop
xchg
dec
jo
push
jne
xor
cmp
adc
xchg
ljmp
cmp
dec
popf
pop
push
add
adc
add
push
imul
hlt
mov
imul
popa
ljmp
hlt
sbb
iret
imulb
lock
andb
subb
and
stos
in
test
cmp
imul
movl
lahf
mov
cmp
cmp
sub
fldcw
sub
loope
loop
jg
mov
add
add
xor
rclb
cmovge
push
jmp
clc
call
adc
sub
jno
cmp
stc
sub
or
dec
sarl
and
dec
pop
loopne
xor
ljmp
aaa
or
cmpsl
inc
sbbl
lods
inc
xchg
cmp
lahf
inc
out
repz
jmp
orl
cmp
adc
les
push
add
mov
incb
adc
jecxz
cmp
decl
dec
stos
dec
out
add
loopne
mov
ljmp
add
push
int3
das
insb
js
repz
int3
sub
stos
mov
leave
testb
mov
push
insb
push
aad
xchg
add
popf
add
sub
adc
add
fwait
jo
jnp
out
or
fsubrl
push
adc
push
fsubs
insl
iret
adc
and
jle
sub
fldenv
or
lds
pop
mov
add
mov
lea
add
aad
cmp
or
incl
out
mov
push
add
sbb
popl
test
push
xor
iret
mov
movsl
pop
jae
shl
push
out
leave
jb
fidivl
cmp
inc
fcoms
enter
xor
loop
jae
repz
loope
mov
inc
arpl
cmp
push
cmp
lret
adc
inc
icebp
sub
loope
sub
sbb
ret
and
fistpll
pop
sub
lcall
hlt
mov
mov
pushl
les
je
into
dec
enter
ret
ja
adc
cwtl
add
push
ljmp
push
ljmp
push
pop
or
sarb
mov
xchg
js
or
gs
ss
adc
jae
out
pop
cmp
mov
fcoml
icebp
loope
xor
cmpl
dec
insl
aam
jle
pop
cld
andb
push
inc
adc
mov
enter
inc
pop
bound
ljmp
repnz
loopne
aam
mov
adc
stos
hlt
pop
push
sub
xchg
leave
ret
dec
mov
sbb
sbb
scas
call
fistpll
cmp
subb
inc
das
loope
loopne
mov
fstpl
jle
and
mov
inc
dec
mov
bound
cld
data16
jp
lcall
es
pop
push
mov
pushf
cltd
inc
sbb
pop
mov
aas
and
push
pusha
fistpl
cmp
mov
sub
adc
in
sbb
lcall
into
pop
push
in
testb
adc
mov
mov
sbb
add
push
push
or
push
xchg
sub
cmp
lods
mov
test
sbb
addr16
pop
cmpb
add
and
mov
mov
xchg
add
int
and
gs
push
rcll
test
sub
xlat
iret
pushf
lods
push
inc
add
pop
adc
and
adcl
ret
ret
loop
rcll
popa
xor
repnz
das
mov
pushf
sbb
cmp
test
push
aam
js
cmpsb
pop
sub
out
jle
add
add
pop
lods
stc
je
in
icebp
arpl
xchg
add
add
lret
rorb
add
or
cwtl
lahf
orl
call
adc
rcrb
ffree
mov
mov
test
pop
incl
insl
outsl
push
add
mov
les
inc
or
mov
mov
hlt
shlb
pop
adc
push
add
cs
dec
icebp
hlt
scas
out
xchg
xor
fs
cmp
fistpl
sbb
mov
cmp
cwtl
cmp
pop
jmp
fnstsw
jecxz
into
jecxz
cwtl
xorl
clc
mov
jne
fsub
sbb
mov
ja
pop
jp
pusha
inc
ret
in
inc
mov
or
sbb
mov
adc
jmp
aas
out
pop
cmp
call
and
push
inc
jnp
or
loopne
add
sub
cmp
lahf
mov
xchg
or
dec
or
xor
xor
push
sahf
push
mov
andps
jmp
sar
adc
and
xor
xchg
jae
sbb
pop
orb
xor
add
mov
lret
adc
or
xor
inc
lahf
pop
add
adc
adc
dec
inc
lds
das
in
inc
adc
and
clc
mov
js
jmp
push
nop
xchg
aas
faddl
clc
fbld
ficoms
push
adc
jo
inc
call
xchg
daa
jle
and
inc
xchg
test
mov
jo
andb
lods
or
cmp
sub
mov
ljmp
int
jne
mov
cmp
add
mov
jp
jp
jns
adc
nop
inc
fwait
cmp
loopne
add
or
lock
pusha
inc
and
inc
jp
aaa
and
filds
cmp
inc
pop
inc
sub
stos
mov
xor
and
orb
jecxz
lea
jmp
mov
dec
aad
imul
mov
aas
mov
add
rdtsc
xchg
gs
xor
movsl
lret
xchg
push
pushf
inc
shr
punpcklwd
pushf
loope
add
sub
sbb
inc
ret
aaa
clc
or
add
push
pusha
add
cmpsl
in
cltd
test
insb
flds
cmc
lret
add
xchg
jle
pop
jb
jge
ljmp
movsl
test
in
out
xchg
sbb
cmp
sub
daa
adc
sbb
pop
and
roll
push
ret
sbb
mov
es
sub
pushf
cmp
adc
pushf
jb
jb
add
or
jle
insl
loop
mov
xor
dec
mov
jg
lock
add
add
out
imul
popf
dec
pushf
fcoml
dec
gs
mov
ljmp
push
mov
out
loopne
sub
out
inc
add
mov
mov
movsl
scas
push
or
add
movsl
xchg
rolb
sub
in
push
js
pop
sbb
dec
test
stc
sbb
jl,pn
jle
add
sbb
rolb
pusha
xor
sahf
or
movsl
xchg
inc
dec
dec
cltd
addb
push
loop
cmp
int3
sub
pop
loop
insb
mov
call
and
in
add
or
pusha
dec
add
xchg
ret
shlb
lret
mov
call
aas
mov
push
jmp
pop
popa
call
aam
mov
call
ss
lock
rclb
fidivl
out
out
loopne
shr
mov
push
inc
and
sbb
lods
cltd
aad
ret
repz
push
adc
inc
xchg
pop
fadd
and
sbb
lret
clc
cmp
sub
rcr
call
cwtl
in
add
mov
jp
mov
xchg
iret
push
xor
and
sarb
mov
dec
movsl
and
pop
xchg
inc
adc
push
ljmp
cmc
ret
call
mov
xchg
sbb
pmaddwd
push
movb
dec
call
fdiv
adc
add
shll
lahf
cmpsl
daa
and
ret
and
sbbl
and
dec
mov
xor
std
out
jg
cld
mov
cmpsl
dec
shll
jecxz
out
cmp
lods
loope
jae
fsubrs
sbb
cli
or
neg
dec
or
ljmp
addb
call
dec
xor
sbb
inc
dec
popl
jmp
lock
push
test
or
mov
je
cmc
mov
sub
rclb
ret
add
push
lods
cld
pop
adc
xor
or
xor
mov
jae
push
jl
sbb
daa
ljmp
test
movsb
push
or
ret
xrelease
je
sbb
adc
inc
xchg
out
push
lea
movsb
push
pushf
push
push
jnp
inc
xlat
pop
adc
xorb
jle
jo
or
jb
fiaddl
adcb
fs
jb
in
push
mov
xchg
lods
fisubl
or
into
fsubrs
or
dec
cwtl
cwtl
xor
fstpl
pop
test
inc
loope
test
pop
xor
sbb
ret
mov
sub
pop
inc
xor
xor
cwtl
dec
in
je
jbe
jmp
mov
pusha
sbb
je
and
xchg
pop
addr16
add
mov
lods
je
push
jmp
stos
repnz
jmp
add
outsl
jmp
pop
hlt
rorb
adc
cli
out
xchg
ja
adc
cwtl
pop
and
adc
mov
pop
jg
dec
dec
sbb
scas
out
andb
fdivrs
mov
xor
lahf
and
jo
sahf
lods
inc
clc
xchg
push
js
cmp
rolb
jmp
xchg
jmp
test
repz
jnp,pn
in
cmpsl
adc
mov
sub
and
cmp
pusha
popf
das
jg
in
dec
ja
frstor
rorb
in
cli
es
push
sbb
sub
add
pop
imul
or
adc
call
jmp
dec
push
clc
dec
inc
pop
xor
sbbl
jbe
or
push
andb
xor
jecxz
aam
clc
jbe
js
xor
data16
addl
mov
and
xchg
jns
into
xchg
mov
hlt
pop
ja
cmp
inc
and
repz
adc
shll
sbb
add
inc
mov
cmpb
sbb
neg
push
sbb
mov
rcrl
fstl
sub
scas
into
push
inc
xlat
rolb
cmpsl
sbb
and
lock
xlat
pop
fs
sbb
imul
adc
fbld
push
stos
add
rclb
dec
mov
loope
adc
and
div
push
ljmp
jns
insl
neg
fimull
mov
sbb
sub
cmp
cmp
mov
enter
ljmp
insb
shll
dec
inc
fmul
fdivs
xchg
shrl
lahf
mov
push
pop
cli
inc
jmp
inc
adc
lahf
xchg
pop
lahf
pop
or
sbb
push
mov
jne
add
pop
mov
add
aam
xor
jp
pop
xchg
inc
mov
mov
pusha
inc
add
and
xchg
js
arpl
in
mov
outsl
or
inc
mov
pop
mov
mov
aas
fstp
sbb
jecxz
mov
lock
xlat
mov
pop
add
xor
dec
fcoml
outsl
imul
ljmp
loopne
lea
push
push
bound
cld
push
call
movsb
out
mov
sbb
jo
push
sbb
mov
sbb
das
xchg
iret
mov
ret
sub
mov
and
cmp
and
cwtl
pop
inc
adc
lock
out
push
add
sbb
mov
fs
shll
ret
jge
icebp
mov
int
and
push
lcall
lahf
inc
cmp
les
inc
aas
fs
dec
push
fsubrs
jae
lret
movsb
je
daa
cltd
or
nop
stc
mov
rcll
adc
or
mov
popa
movl
mov
pop
mov
rcr
pop
and
lret
sar
push
jl
int
inc
push
mov
add
jmp
inc
add
sbb
and
inc
negl
mov
addr16
mov
sbb
add
ja
fidivrs
mov
xchg
push
in
cli
adc
xor
icebp
je
add
xor
sub
cmp
lret
jbe
xchg
lock
sub
xor
and
sahf
xchg
mov
lea
imul
call
mov
sbb
dec
xor
movsb
add
testl
insb
sbb
lods
xor
aad
dec
loop
xor
inc
bound
xor
push
icebp
xor
rcrl
xor
lods
pushf
inc
or
cmc
cmpsb
into
lea
ret
sbb
or
sub
xor
inc
and
cmp
mov
daa
or
fadds
mov
pushf
dec
sbb
paddsw
xchg
inc
insb
mov
lahf
sbb
in
xor
outsb
sbb
test
out
gs
mov
icebp
pop
cmp
les
test
cltd
sbb
in
in
cmc
mov
push
and
sbb
and
or
aam
sti
fiadds
adc
mov
sub
mov
mov
jp
mov
test
add
pop
and
push
pop
add
and
sub
orb
mov
jge
add
out
aam
rcrb
jns
not
outsb
sbb
icebp
or
ficoms
adc
call
push
add
stos
inc
sbb
and
push
or
dec
jmp
mov
pop
xor
add
mov
push
testl
jbe
jmp
push
inc
dec
and
and
dec
push
sub
pushf
lock
imul
outsl
push
mov
je
xor
xrelease
pop
adc
jb
in
inc
mov
inc
push
out
dec
push
cmc
int3
es
mov
arpl
mov
adc
rclb
adc
jo
jge
movsb
push
push
lock
or
lret
push
hlt
pop
xchg
push
aas
flds
add
jmp
mov
jle
hlt
mov
inc
lock
addb
lock
mov
shrb
push
jp
dec
lock
lahf
mov
xchg
push
jmp
xor
jecxz
xchg
mov
mov
rorb
inc
ret
add
pop
mov
mov
mov
push
test
sbb
out
or
mov
push
daa
cltd
add
mov
and
in
js
jl
dec
data16
fwait
mov
lock
cwtl
fisttpll
add
lock
cmp
fsub
jl
lock
aam
fs
inc
ljmp
xor
mov
mov
pop
and
mov
js
jmp
nop
cmp
mov
and
push
xlat
adc
add
push
shlb
jno
les
xor
mov
inc
add
and
cmp
addr16
add
pusha
outsl
push
mov
sahf
jbe
sub
adc
test
stos
movl
mov
and
shlb
mov
mov
scas
add
mov
js
cmpsl
jae
fdivs
cmpsl
scas
ja
popa
sub
popa
cmp
xor
popa
cld
call
sahf
hlt
cwtl
inc
pushf
push
lret
scas
cld
movsl
stos
pop
mov
add
fucomp
sbb
fmuls
xchg
push
lods
fldt
xchg
add
jp
loop
sbb
imul
sub
pop
test
popa
int3
loope
pushf
hlt
popf
cltd
add
mov
mov
mov
shlb
cs
dec
shll
inc
xlat
sbb
jl
inc
rol
push
daa
xchg
sub
push
insb
js
dec
stos
mov
adc
sti
pop
mov
lds
mov
enter
and
cli
repnz
subl
inc
add
or
add
add
and
jne
push
jmp
scas
jae
mov
cmp
mov
mov
push
mov
daa
mov
in
dec
cld
lods
and
mov
sub
jecxz
inc
jg
mov
jb
loope
inc
mov
or
sub
push
mov
xchg
cwtl
inc
xor
je
lods
daa
addl
pop
xlat
jmp
sbb
xor
jp
andl
dec
call
and
fwait
sub
sbb
addr16
imul
inc
push
out
shrb
and
sub
pushf
jo
push
sarl
and
cmp
je
jb
xchg
add
dec
push
mov
aam
hlt
pop
imul
jecxz
inc
xchg
mov
fsubrp
pop
inc
rcrl
add
push
and
cli
push
rcl
flds
push
and
inc
lods
adc
int3
add
stos
push
push
cld
jmp
or
push
add
jmp
or
mov
cmpsb
add
loope
xchg
or
test
mov
cwtl
shrl
test
ljmp
movl
mov
stos
sbb
out
or
mov
add
subl
pop
sub
jo
or
in
jmp
push
mov
ror
jp
mov
pop
mov
xor
pop
fstpt
negl
adc
inc
dec
dec
push
pop
fcmovu
cmp
adc
mov
add
or
or
rclb
cld
pop
loopne
push
testl
mov
xchg
int3
or
adc
scas
out
push
push
test
cmovp
sub
dec
in
fsubs
sbb
xchg
add
mov
cmp
jbe
lds
push
sub
inc
test
add
inc
and
xor
dec
push
push
push
or
es
shrb
lret
add
jg
dec
cli
sub
xor
push
cmpsb
fcoms
inc
adc
jbe
clc
fiadds
repnz
or
hlt
outsl
xchg
lods
cli
or
xor
mov
sti
xlat
fisttps
aaa
mov
aam
test
sub
xorl
cmpsb
lahf
xchg
aam
enter
cld
mov
call
les
add
adc
inc
jmp
insl
and
fistpl
sar
and
rcl
dec
in
and
loope
jo
shl
bound
in
ss
shll
add
pusha
movsl
pop
inc
xor
or
push
cwtl
mov
mov
push
sbb
add
cs
xchg
and
lock
movsl
and
je
dec
dec
add
xchg
adc
push
add
sbb
cmp
mov
ljmp
add
pop
sbb
es
or
jecxz
cwtl
mov
adc
adc
xchg
sbb
daa
jae
or
out
or
mov
mov
ret
data16
mov
mov
negl
inc
push
daa
shlb
jg
push
mov
and
roll
or
aam
ds
sub
inc
cmp
or
dec
adc
and
dec
ret
dec
adcb
add
repnz
shlb
cmp
add
bound
sahf
adc
arpl
add
sub
fdivs
negl
aaa
add
xchg
cli
push
popa
or
mov
stos
xchg
dec
cld
adc
insb
stc
dec
outsb
push
dec
insb
sub
sub
push
insl
add
jp
fmull
ss
sarb
pushf
shlb
rol
push
mov
inc
xchg
mov
jmp
xchg
lods
xchg
mov
xor
mov
sub
js
mov
test
jg
xor
add
imul
insb
add
mov
and
jns
cmpsb
xchg
xor
cmpsb
xlat
inc
xchg
sub
jmp
lcall
aas
adc
test
pop
outsb
xor
xor
repz
sti
pop
push
imul
push
mov
enter
and
dec
lahf
push
fisubl
adc
mov
jg
xchg
sub
fwait
mov
loope
xchg
or
fcoms
or
lock
cmp
adc
fsubrs
or
sbb
out
rorl
xchg
add
sub
mov
push
and
sub
add
and
jno
ffreep
xlat
mov
scas
ret
lret
cmp
add
push
xor
mov
test
fs
rolb
ds
pushf
lahf
aam
insl
push
inc
add
movb
ret
jge,pt
loop
jmp
adc
repnz
decl
mov
push
jnp
pop
lods
inc
pop
jle
mov
adcb
add
jle
adc
daa
dec
dec
sub
mov
dec
pop
ljmp
or
dec
inc
fnstcw
inc
testb
jmp
rorl
testl
and
mov
inc
jge
dec
test
or
pop
push
add
xor
cld
aam
sub
sbb
mov
add
loopne
jge
fcom
or
ja
add
aad
test
hlt
dec
call
xor
xchg
xchg
cmp
jns
add
inc
test
and
add
aam
fldenv
mov
xchg
notl
pop
jmp
vshufps
inc
nop
mov
js
dec
xor
xor
aam
mov
int
jle
fadds
xchg
and
adc
adc
cwtl
adc
or
fistl
je
scas
enter
sbb
jo
push
and
iret
dec
push
add
mov
mov
cltd
jecxz
xchg
push
xorb
sub
push
add
inc
test
mov
in
fadds
pusha
loopnew
fbld
or
xlat
sub
lea
push
jmp
lea
push
add
lret
xor
inc
iret
lods
add
mov
pop
lcall
add
cld
dec
push
aaa
xlat
mov
cmp
push
add
jns
into
mov
dec
xchg
fdivrs
jmp
sarb
clc
or
and
fbstp
lcall
mov
pop
or
loopne
dec
shlb
and
cmp
and
xor
add
add
cmp
addl
mov
sub
test
and
out
sbb
xor
sub
xchg
loopne
sbb
mov
add
jae
cmpsb
cmp
inc
pop
add
push
cltd
or
and
and
rclb
add
pop
je
daa
dec
push
jae
in
loop
inc
inc
mov
or
stos
or
jo
sub
and
popl
push
repnz
outsb
in
movsl
loope
test
mov
rorl
mov
loop
sub
sub
std
imul
xlat
ret
cs
xlat
test
js
arpl
push
ds
pop
or
or
and
mov
fcoml
mov
inc
test
and
jmp
mov
adc
test
mov
rclb
dec
add
mov
aaa
and
pusha
jo
testb
inc
lock
lret
inc
ret
xor
mov
jae
inc
ja
sbb
clc
add
cmpsl
das
icebp
ss
xchg
cmpsb
and
add
sahf
adc
inc
jp
pop
push
inc
and
or
in
push
lock
pop
das
sbb
cwtl
sub
xor
jno
add
inc
subb
adc
xchg
sahf
lea
dec
int
push
mov
hlt
sarl
cmp
mov
filds
adc
or
addr16
loop
push
pop
ret
pushl
add
outsl
jecxz
push
jb
pop
cmp
jl
nop
loopne
xorl
stc
cli
and
pop
inc
mov
push
push
aad
inc
call
sub
out
movsb
push
push
push
jmp
lods
sti
aam
mov
mov
or
pop
icebp
into
test
hlt
jge
pop
mov
xchg
ss
fimull
xor
in
and
pop
mov
jo
add
inc
dec
xor
cld
clc
add
and
ret
sbb
fsqrt
xlat
lret
dec
test
scas
jne
adc
cmp
cmp
sbb
or
pmaddwd
pop
xchg
xor
and
add
testl
sbb
ret
imul
cld
push
xor
out
pop
mov
sub
lods
ljmp
fldl
ret
or
adc
negl
lods
inc
cmp
xchg
out
dec
push
popf
add
ret
or
sbb
ror
push
adc
ja
insl
out
mov
and
xor
shrb
lock
mov
insl
mov
jo
push
and
and
pop
adc
sbb
enter
sbb
adc
add
ret
inc
fcmovu
jecxz
or
cmp
pop
xor
cmp
loopne
inc
sbbb
xchg
rorb
pop
jp
push
fsubrl
pop
in
cmpsl
addr16
cli
or
sub
cmp
mov
loopne
xor
sbb
iret
inc
js
loopne
lods
lahf
sbb
pop
pop
aaa
in
inc
cmp
testl
pop
inc
and
lods
jecxz
pushf
pop
mov
cmp
adc
test
or
jg
fcoml
xor
pop
fsubrl
fmull
jno
popa
xchg
sbb
add
shll
insb
or
sub
adc
jo
ret
push
mov
jmp
pop
xchg
stc
mov
push
jnp
xor
movl
jp
cmp
xlat
je
add
pop
push
jge
les
repnz
or
clc
pop
into
adc
test
sbb
inc
jo
sub
outsl
out
clc
jnp
mov
pop
loopne
call
mov
dec
jbe
out
add
sub
into
add
or
bound
mov
push
inc
add
ja
xchg
cld
dec
das
mov
jo
and
insb
push
insl
dec
lock
inc
add
pop
pop
shr
cwtl
xchg
inc
xor
aaa
add
lods
testb
jne
dec
and
mov
jle
call
inc
or
and
add
mov
fiadds
rolb
stc
pop
daa
mov
sub
lret
loopne
scas
mov
stos
jno
outsl
icebp
dec
lock
fidivl
sbb
pop
push
inc
xchg
gs
cltd
jns
pop
mov
and
aam
cmp
outsb
xor
addr16
negl
and
and
sub
jl
pop
mov
inc
in
push
test
call
mov
jmp
mov
inc
push
xchg
xor
movsl
push
mov
push
jno
fisubs
or
push
lods
pop
fisubl
dec
xchg
pop
push
push
fcmovu
test
or
dec
call
ss
add
add
jmp
pop
push
ret
sbb
lcall
iret
aas
jmp
or
dec
imul
push
adc
xchg
mov
or
jl
addl
sub
lock
xchg
add
and
fiaddl
or
lock
xor
mov
adc
inc
mov
std
add
mov
ffreep
dec
pushf
pop
xchg
xchg
sub
clc
popa
mov
je
push
hlt
insb
in
stos
int3
stos
adc
lods
in
in
cs
add
out
mov
out
add
pop
dec
add
xor
test
mov
shll
outsb
pop
adc
sbb
xchg
fadds
outsl
add
xchg
in
jg
xor
sub
inc
and
dec
notl
movsl
lcall
js
pop
sbb
mov
jecxz
dec
notb
orl
push
xlat
push
sbb
mov
mov
jp
icebp
repz
xlat
push
lahf
out
push
push
push
ljmp
xchg
mov
push
scas
inc
ret
pusha
stc
pop
dec
lods
and
add
pop
cmpb
cmp
mov
and
inc
cmpsl
lea
in
loope
pushl
lods
or
loopne
xor
mov
fistpl
sub
xor
add
add
add
mov
lret
mov
xchg
or
repnz
mov
push
jle
rcl
dec
in
call
mov
xor
stos
push
loope
imul
inc
mov
xor
dec
popa
aaa
lock
jmp
xchg
addb
mov
jmp
xor
lret
xchg
push
push
movsb
and
inc
mov
inc
cmp
je
stos
ss
fwait
push
ss
dec
push
sbb
lret
jo
xor
adc
subl
popa
add
xor
sahf
jmp
xor
jl
sub
or
cmp
hlt
push
or
sbb
movl
int
xchg
adc
pop
sub
dec
mov
cmp
fistl
add
icebp
and
test
daa
mov
mov
add
cmp
outsb
inc
inc
pop
and
jae
xor
add
add
pop
inc
mov
sarb
jnp
sbb
dec
jae
sub
pop
inc
and
add
stc
les
mov
mull
fimull
push
cs
add
test
pop
rcrb
and
and
sub
add
inc
clc
test
xor
pusha
adc
repz
or
xor
mov
pop
xor
sbb
or
movsb
jmp
shr
call
jo
and
psraw
pop
lock
popa
dec
js
or
clc
test
jno
bound
inc
and
pop
lds
cmc
sub
vpand
or
ds
add
nop
testb
icebp
jp
pop
inc
xor
xchg
fwait
sub
inc
clc
dec
jg
jae
clc
xchg
xor
ljmp
stos
fstpt
fsubrl
xchg
or
sarl
jnp
inc
mov
add
cmpl
test
sub
push
sbb
or
int
xchg
inc
popa
and
scas
nop
adc
adc
or
adc
aas
fcoms
add
push
call
sbb
stos
sbb
adc
xor
sub
inc
hlt
stos
mov
or
add
ret
inc
arpl
dec
clc
adc
add
xor
fistps
jne
push
or
fbstp
inc
fsubs
add
cld
mov
lds
insb
test
or
ss
cmc
jne
test
lock
and
lea
pop
pop
sbb
push
xor
push
push
andb
je
and
clc
das
ret
dec
inc
outsb
repz
pop
pop
mov
add
out
mov
mov
mov
out
mov
and
push
sbb
push
push
in
insb
adc
push
jle
lock
fcmovbe
push
xor
je
or
repnz
pusha
cmc
push
in
jg
icebp
stos
clc
add
push
inc
cs
adc
mulb
je
in
add
ret
xor
imul
push
mov
cmpsb
pop
jmp
out
jge
shll
mov
cs
push
inc
add
addb
xor
and
test
add
repnz
loop
add
mov
xchg
fimull
cmpsb
and
xchg
test
inc
out
test
inc
ret
imul
add
and
mov
xor
pop
sbb
repz
scas
add
clc
jmp
js
dec
cmp
mov
test
mov
addb
push
add
cwtl
shl
sbb
dec
xor
xor
push
mov
add
sbb
xor
in
add
add
mov
mov
jo
inc
dec
rorb
mov
icebp
jl
and
xchg
gs
cmp
adc
popa
adc
sbb
data16
inc
popf
cs
mov
subb
xor
dec
loopne
aad
inc
mov
imul
pop
stos
and
setno
sbb
jae
dec
stos
cs
cvtps2pd
or
jmp
fistps
jmp
and
push
call
sub
in
add
icebp
sbb
xor
add
inc
mov
ss
cs
dec
out
shr
cmp
jl
cmp
mov
dec
sub
dec
ret
or
lret
or
orb
push
adc
push
stos
or
jo
adc
mov
stos
sub
aas
sbb
daa
cmp
stos
adc
cmc
xlat
cmp
imul
ror
dec
sub
and
mov
aad
leave
fcomps
lret
stos
jg
mov
ss
out
in
cmp
call
and
fstpt
enter
mov
xchg
and
or
fxch
sub
rcr
push
test
inc
push
imul
mov
jmp
les
xor
sbb
mov
or
cmp
jbe
adc
fwait
cld
pop
fs
aam
cld
in
test
aaa
das
call
inc
mov
sbb
pop
dec
xchg
adcl
sbb
dec
mov
adcb
pop
sti
sbb
and
sub
mov
xchg
adcl
and
dec
mov
stc
inc
xchg
add
and
fstl
jle
enter
inc
or
xchg
inc
cmp
call
loope
and
jge
js
test
jmp
add
popa
imul
fadds
add
loop
dec
pop
push
xlat
imul
pushl
jmp
cmp
ja
or
cmp
test
mov
xor
xor
dec
arpl
mov
pop
icebp
arpl
outsl
bnd
stos
xchg
xor
pushf
call
dec
lahf
shrl
stos
mulb
lods
movb
das
jbe
sub
xchg
rclb
and
dec
xchg
or
add
sbbl
rcl
push
push
jnp
sub
xor
sbb
rol
test
sub
cmp
or
mov
push
incb
or
cmp
xchg
call
jp
outsl
aaa
lcall
mov
jb
lcall
aad
pop
add
arpl
ret
pop
mov
daa
mov
lock
inc
stos
push
mov
dec
clc
sub
push
and
adc
or
shlb
push
jne
xor
inc
jmp
ret
add
add
test
loopne
cltd
repz
lods
adcl
jne
in
pop
test
and
xor
cli
daa
cmp
pop
cmp
shll
cmp
pop
inc
and
adc
outsl
xlat
outsl
test
dec
sub
jno
addb
sbb
icebp
jge
xchg
ficomps
mov
testl
cmp
lds
adc
mov
and
test
lahf
sbb
arpl
ja
call
subb
lock
mov
or
test
imul
jg
fcmovne
mov
test
icebp
push
out
ret
enter
jae
mov
lret
inc
xor
loope
pop
sti
push
mov
push
mov
dec
xor
and
jle
jecxz
add
in
jo
xchg
mov
jbe
or
dec
cmpsb
test
mov
data16
outsl
loopne
mov
out
mov
sbb
mov
dec
xor
mov
rcrb
mov
xchg
add
inc
imulb
jecxz
aaa
cmc
repz
jmp
push
test
sbb
out
je
mov
aaa
adc
or
das
pop
fwait
or
vpaddsb
or
cmp
dec
xor
cld
mov
xor
dec
cltd
sub
pop
subl
stc
popa
nop
push
jp
call
out
icebp
out
pushf
jnp
scas
sarb
add
xor
sbb
outsl
imul
xchg
jmp
pop
dec
call
dec
test
add
and
sub
lea
movsb
add
cmp
stc
sbb
jle
add
fildl
ret
jge
mov
dec
in
cmpsb
das
mov
fsubp
or
jp
xchg
pusha
and
xchg
sub
add
inc
adcb
adc
jne
and
outsl
or
jg
jmp
scas
dec
ljmp
nop
mov
les
inc
xchg
mov
loope
xchg
sarb
les
ffreep
in
nop
jbe
imul
add
orl
inc
outsl
mov
cwtl
mov
inc
pusha
lea
repz
dec
pop
jmp
cmc
dec
or
mov
bound
lock
pcmpeqw
fbstp
mov
push
and
mov
scas
sar
fsts
pop
cmovns
push
pop
push
pop
fidivl
xor
sub
ret
xor
pop
push
movl
inc
cmp
pop
ret
mov
xchg
xchg
les
int3
mov
push
xchg
lock
shrb
pop
push
ljmp
push
in
les
mov
les
insb
sbb
push
lahf
int3
movsl
add
or
mov
cmc
mov
in
test
imul
ss
adc
xorb
ja
loope
fstl
jge
loop
lds
clc
in
lret
adc
xor
pop
movsb
lahf
xchg
daa
xor
add
and
pop
lcall
inc
and
iret
push
mov
rolb
fcoms
iret
add
xor
int3
ret
js
fisttps
lret
and
aas
and
xchg
pushf
std
push
inc
sbb
and
outsl
loopne
sub
mov
pop
jl
ljmp
rcll
xchg
mov
ret
movsl
sbbl
test
aas
xchg
mov
cmp
sbb
mov
loopne
outsb
bound
outsl
lods
and
jmp
cmc
pusha
sbb
clc
test
xchg
je
pop
test
adc
mov
sbb
loopne
popf
frstor
inc
loop
stc
bound
push
inc
sub
adc
dec
insl
mov
cmp
test
pop
mov
jo
clc
fwait
mov
xchg
jg
lock
insl
sub
dec
and
ds
mov
iret
mov
sub
std
push
cmp
pop
jecxz
daa
div
test
xor
push
push
mov
stos
add
lcall
jnp
mov
push
add
push
adcb
mov
add
adcl
shrl
jbe
lcall
ficomps
push
cld
sbb
test
das
xlat
ret
test
daa
jno
or
sbb
pop
fistpl
stos
pop
jno
ja
xchg
xor
popf
push
or
and
insb
mov
bts
or
adc
mov
xor
lds
xor
incl
mov
sub
mov
fildl
mov
adc
stos
jecxz
push
and
mov
mov
cld
fisttpll
test
add
adc
sbb
iret
mov
in
jns
inc
inc
add
adc
inc
cmp
sahf
mov
push
test
xor
push
lock
dec
fsubs
js
jae
or
adc
cmp
dec
gs
dec
inc
push
fdivr
push
repnz
push
out
xor
add
or
addb
dec
xorl
int
cmp
ret
mov
mov
in
fists
mov
shlb
sub
fildll
add
into
add
enter
dec
jp
icebp
pop
enter
test
lcall
add
cmp
xor
cwtl
add
lock
insb
int
test
add
mov
push
enter
or
mov
inc
pop
enter
inc
mov
adc
jb
and
or
shl
pop
psubsb
test
xor
mov
push
adc
xor
pop
popa
cmp
push
sti
sti
lock
inc
and
lea
cmp
lahf
hlt
xorb
ficomps
aaa
out
push
fwait
xor
call
mov
adc
xor
negl
dec
scas
jo
and
loopne
jp
popa
xchg
cmpsl
flds
call
or
lret
stos
test
cmp
mov
jbe
pop
cmp
push
sub
shl
push
mov
aad
sarb
out
mov
or
adc
test
ds
inc
pusha
inc
test
mov
cltd
loop
push
sarl
sub
add
xor
and
movsb
cmp
sbb
sub
push
call
xor
out
dec
push
inc
addl
int
lcall
push
rolb
push
das
jne
jl
inc
add
xor
and
rorl
stc
orb
or
or
jecxz
xchg
fcomip
or
pop
jmp
inc
inc
cmpsb
out
xor
inc
or
rolb
and
or
int3
cmp
les
popa
adc
mov
stos
dec
and
bound
mov
ss
mov
fwait
mov
or
push
sbb
pop
inc
mov
cld
sbb
add
mov
test
arpl
push
imul
add
mov
stos
data16
adc
xor
ds
pusha
and
add
lods
jmp
mov
stos
stos
enter
sbb
and
push
mov
jno
mov
push
ret
lods
sbbl
or
pop
ret
inc
or
or
push
out
ja
dec
js
cmp
adc
popa
xor
jae
mul
rorl
push
push
enter
mov
je
in
adc
adc
mov
pop
mov
xor
cmpsl
add
jnp
cmp
xor
add
sbb
and
aas
mov
pop
xchg
mov
xchg
cmpb
adc
mov
xchg
jge
cmp
cli
fwait
push
cmp
pop
add
inc
jnp
add
and
cs
sub
cmp
adc
dec
enter
mov
es
push
fwait
popa
dec
cmp
or
shlb
xchg
scas
aas
inc
sbb
sub
jl
push
inc
or
mov
orl
push
inc
mov
or
aaa
int
sbb
in
les
fidivl
xor
shrb
loop
cmp
dec
out
push
pop
lods
push
ret
xchg
add
add
addr16
enter
rcrb
add
push
ror
lret
nop
les
mov
mov
xor
jecxz
xchg
scas
mov
cld
mov
add
pop
push
push
stos
call
shr
gs
jmp
inc
inc
inc
test
add
scas
cmpsb
leave
lock
or
push
xor
popf
call
loopne
outsb
orb
pop
xchg
mov
fbstp
test
int3
repz
adc
dec
mov
sahf
push
fnstenv
das
or
mull
and
popa
and
adc
add
jnp
xlat
es
sbb
and
and
adc
mov
das
insb
and
adc
sbb
sbbl
or
add
inc
mov
or
enter
gs
sbb
incb
aas
in
int
and
dec
fnstcw
test
sbb
jbe
push
jo
sub
je
rol
push
pop
out
cmp
fsubrs
loopne
cmp
pop
jb
inc
test
popa
mov
inc
adc
sbb
inc
or
mov
mov
ja
mov
sbb
mov
shrl
push
adc
jl
jne
jecxz
xor
cld
js
fiadds
out
and
and
ret
imul
out
mov
cli
xchg
fbstp
or
loopne
push
mov
out
jne
testl
lods
mov
sbb
or
pop
cwtl
add
dec
adc
test
sbb
jp
mov
ja
pop
aam
add
xor
jmp
mov
cmp
mov
sbb
push
inc
xor
or
push
add
pop
rolb
jo
mov
movsl
pop
dec
and
mov
nop
cmp
mov
add
lods
out
pop
mov
mov
ret
add
cwtl
inc
loope
fstpt
sbb
sub
loop
arpl
data16
mov
sub
mov
pop
aad
cltd
lcall
adc
test
fs
bound
adc
daa
adc
std
rorb
lods
pop
cmp
fdiv
adc
lcall
sahf
cmp
push
daa
pop
ja
lds
xor
inc
pop
lods
nop
mov
mov
outsl
outsb
fmuls
jl
cmp
mov
jmp
mov
mov
xor
sub
and
je
and
shrb
es
stos
loop
inc
cmp
adc
sub
mov
xor
xchg
fcoms
lods
sub
or
dec
gs
jb
jl
or
fldt
icebp
sbb
mov
test
or
add
test
and
lahf
inc
pop
xchg
loopne
pop
jo
lret
xchg
mov
add
mov
cltd
mov
add
mov
mov
xor
movsl
jne
imul
mov
xor
fcoms
mov
popl
popf
inc
loope
adc
push
cltd
or
add
push
cmp
or
sub
rcrb
loopne
inc
push
mov
pop
mov
sub
push
mov
lahf
in
loopne
sub
outsb
aaa
out
jne
fsubrs
cwtl
or
jp
imul
inc
test
push
jne
push
mov
inc
stos
call
mov
xchg
and
or
and
pxor
cmpl
mov
cmp
mov
xor
push
pop
cmp
ret
sub
mov
dec
arpl
ljmp
lods
inc
stos
sub
outsb
sbb
lock
jp
sub
dec
sbb
fistpl
add
or
aaa
outsl
pop
add
dec
cmp
pop
mov
imul
mov
jl
sbb
ret
add
inc
sub
mov
inc
dec
dec
jno,pt
or
rcl
popa
icebp
and
sub
outsl
mov
pop
js
jge
add
cld
mov
push
rclb
or
dec
outsb
out
cmp
xchg
scas
sub
dec
addl
repnz
es
sbb
or
or
jge
or
or
adc
jg
fxtract
lock
cs
lods
icebp
movsl
xor
and
inc
dec
and
pop
jle
fdivl
or
pop
ror
cli
and
fcoms
inc
push
dec
imul
clc
das
repnz
jg
push
inc
imul
stos
dec
dec
cmp
call
dec
popf
out
and
xchg
outsb
mov
jb
fmull
adcl
and
sbb
rcr
imul
addl
mov
mov
cmp
jae
idiv
pop
and
add
pop
fs
popf
pop
push
adc
xor
pop
sbb
das
jge
js
negl
xchg
subl
sub
mov
jp
push
xorb
aad
sbb
sub
push
push
jns
xchg
mov
icebp
or
jg
mov
addb
adc
inc
rol
in
adc
lock
imul
out
ret
sahf
in
sub
pop
jg
mov
and
dec
insb
popa
add
or
rol
inc
and
sbb
xchg
mov
and
adc
aam
inc
ljmp
jecxz
pop
or
shrb
aam
or
jne
loopne
mov
and
mov
dec
loop
xor
aad
pop
pop
adc
nop
js
test
filds
add
lcall
test
adc
daa
jmp
dec
pop
mov
rcr
shll
add
clc
mov
sti
sbb
and
pusha
xchg
or
in
das
loopne
call
dec
or
adcl
cli
sub
lock
cmp
js
add
xchg
fisubl
mov
leave
pop
pop
xor
ljmp
push
out
frstor
mov
or
and
or
xchg
dec
fldenv
rorb
sbb
or
add
push
sbb
orb
rolb
lea
sbb
xlat
rolb
mov
or
xor
lret
idivl
and
pop
jmp
lahf
dec
cmpsl
and
rorl
inc
cmp
add
add
add
jecxz
fwait
test
jns
mov
fnstenv
and
cmp
sbb
imull
daa
pushf
daa
les
add
push
test
sub
inc
adc
push
pop
dec
iret
sbb
rolb
add
pusha
mov
pop
movsl
ret
in
and
sbb
pop
gs
xchg
and
and
xchg
fcmovu
pop
out
cmp
lret
sbb
scas
jl
dec
mov
adc
or
add
les
lcall
pusha
in
add
mov
jno
sbb
out
test
or
ficoml
mov
cwtl
push
cli
fildl
adc
push
push
cmp
pop
push
dec
hlt
call
jae
inc
pusha
es
movsb
adc
sbb
inc
mov
clc
adc
in
dec
clc
add
loope
dec
lods
or
iret
xor
mov
ror
clc
adc
cmpsb
pusha
rorb
push
fidivrs
and
inc
cwtl
inc
subb
dec
jmp
adc
lods
add
pop
je
dec
or
add
xorb
fs
and
shr
adc
jnp
xor
lods
dec
cmpl
fs
aam
aam
push
dec
js
stc
fsubs
and
loop
aad
arpl
mov
or
pop
push
push
js
popl
add
pushl
or
mov
fstps
lea
pop
add
ss
sub
mov
dec
sbb
test
repz
mov
jp
pop
in
sub
xor
test
mov
sub
adcb
rcl
inc
push
test
sbb
push
pop
dec
lahf
das
les
jecxz
push
insl
pusha
mov
in
aaa
jmp
lock
out
jbe
cmp
inc
jecxz
divl
insb
push
es
sbb
adc
xor
daa
mov
lds
mov
adc
sub
add
orb
inc
pcmpgtb
and
mov
push
sub
sub
les
xchg
loopne
push
fnsave
lret
xchg
adc
or
mov
xor
push
sub
loop
popa
add
ret
xorl
icebp
mov
inc
push
leave
dec
xor
subl
pop
mov
addr16
push
repz
fs
add
mov
mov
pushf
xchg
add
ret
mull
jno
sub
loop
jo
sbb
iret
inc
or
mov
add
sbb
sbb
adcb
repnz
shlb
inc
add
and
sbb
mov
xadd
push
xor
mov
and
out
jnp
push
dec
test
xchg
xchg
jne
dec
repz
add
fiadds
pop
icebp
daa
daa
jno
sub
sbb
test
xor
cmp
adc
popf
test
xchg
sub
mov
test
pop
adc
add
xor
sarb
stc
sbb
pop
pop
xor
mov
fldl
adc
inc
scas
mov
mov
sbb
cmp
lds
mov
dec
add
sub
push
addl
inc
fimuls
mov
lods
adc
in
notb
or
test
lods
in
mov
outsl
lods
mov
push
pop
fs
sub
pop
loope
sub
mov
ret
jp
sub
sahf
mov
test
daa
push
lret
sahf
add
ret
in
add
push
xlat
lcall
cld
adc
filds
push
sarb
add
xchg
inc
mov
stc
pop
popf
adc
clc
adc
jns
xchg
or
add
add
mov
sbbb
jno
fisubrs
or
enter
ss
pop
mov
jmp
gs
lret
adc
lods
add
mov
dec
int3
popa
mov
pop
out
cmp
arpl
iret
imulb
mov
jae
pop
lret
mov
mov
mov
jg
jnp
clc
shrl
or
or
int
pusha
outsl
cs
fmull
pop
pop
xchg
outsb
cmp
jmp
in
jge
rcr
sub
aad
push
xor
inc
mov
pop
icebp
jo
xor
add
cmpl
call
or
mov
or
and
mov
lahf
add
pop
aad
cmpsl
push
jle
rol
pop
sub
and
mov
push
push
lahf
sbb
fdivl
sbb
mov
or
lahf
mov
and
popl
sbb
sub
ror
dec
lds
or
push
sub
mov
adc
icebp
push
push
mov
adc
setl
sbb
gs
test
loope
inc
test
xchg
stc
add
sbb
in
mov
sbb
push
dec
adc
pusha
xchg
dec
cmpl
sbb
pop
pop
in
ret
subl
add
inc
mov
movsb
jge
cmp
outsb
rcr
jecxz
lock
iret
dec
jne
fisubl
outsl
loopne
enter
add
rcll
jl
in
arpl
in
cmpsl
gs
icebp
add
gs
in
sub
daa
and
es
movsb
inc
or
lods
sub
sbb
add
inc
stos
jmp
jmp
cwtl
loopne
mov
and
push
icebp
jmp
insl
mov
sarl
imul
das
js
add
hlt
dec
loope
sub
es
xor
ret
cmp
adc
cwtl
fistpll
shrb
add
stc
sub
dec
addr16
adc
pop
sub
fcmovne
fwait
pop
adc
or
fdivrl
sbb
pusha
mov
cmp
cli
sub
lock
mov
dec
hlt
cs
inc
push
repnz
jo
loop
add
lods
out
or
rclb
xor
icebp
test
mov
xchg
add
aad
inc
imul
pop
push
add
jbe
xor
jl
add
mov
jmp
push
sbb
sbb
insl
add
or
or
xor
pusha
mov
xchg
xchg
subb
and
and
pop
mov
into
aaa
mov
sbb
mov
ret
adcl
jmp
jmp
fucom
dec
mov
xor
mov
in
cmc
lea
mov
pop
add
mov
lods
adc
sahf
lret
push
sbb
inc
loop
xorl
clc
mov
mov
pop
fisubrl
jmp
sahf
push
adc
adc
scas
mov
icebp
push
jo
lock
lock
sub
jge
out
mov
popw
in
sbb
xchg
nop
sarb
xchg
shlb
lds
mov
fdivs
jecxz
adc
inc
pop
pop
lods
mov
rorl
add
inc
sti
hlt
xchg
inc
add
ret
dec
add
xchg
xchg
jb
jp
adc
iret
fdivs
push
pop
sarl
and
mov
pop
lcall
pop
sbb
add
aaa
je
fcompl
fsubrl
sbb
loope
fwait
loope
lock
sbb
inc
inc
call
or
call
sbb
add
sbb
sub
aam
sub
dec
lock
cmp
push
pop
lahf
mov
adc
adc
fcmovnb
icebp
sub
adc
jmp
pop
lahf
jno
inc
pop
shrb
fstpt
xlat
jg
sahf
daa
lcall
push
jmp
xchg
andb
orb
jmp
jl
xor
and
mov
xor
dec
xor
mov
hlt
push
hlt
add
out
adc
xlat
and
out
xchg
fisttpl
jge
jo
shufps
mov
xlat
int
ret
scas
mov
mov
inc
pop
mov
add
push
sbb
mov
sub
pop
add
ja
or
jo
adcb
test
mov
dec
xor
or
arpl
dec
mov
xor
cmp
push
jg
mov
lods
pop
inc
xchg
repz
push
push
and
pop
push
testl
push
rclb
repnz
or
sub
mov
test
sbb
push
pop
repz
fwait
xchg
out
or
sbb
shll
xor
and
movzwl
ljmp
jbe
or
nop
daa
addb
jp
add
dec
test
nop
imul
clc
sbb
and
and
xor
xchg
lret
xlat
js
push
pop
enter
mov
add
mov
xchg
mov
mov
ficoml
push
fwait
cmp
adc
cmc
cs
lods
push
mov
cwtl
lds
or
pop
xchg
aad
jmp
xchg
inc
test
ret
fcomp
hlt
imul
ja
push
or
mov
lds
adc
add
rcr
icebp
stos
outsl
movsl
jp
flds
or
sub
mov
loop
ss
dec
xchg
mov
push
pop
in
ljmp
or
mov
inc
jmp
testb
cli
push
mov
dec
push
dec
ffreep
jmp
push
lock
jmp
orb
cmp
pop
and
inc
sbb
jno
mov
out
cmpsl
cmp
inc
call
adc
sbb
fcmovnbe
shr
mov
mov
pop
out
xor
mov
mov
sbb
pop
pop
fucomip
imul
shll
les
pop
sarb
insl
ljmp
inc
pop
jmp
bound
mov
jnp
out
decl
cmp
or
out
lret
inc
clc
fcomip
loop
jg
je
ret
push
lock
add
call
jle
push
or
xchg
les
popf
xor
sbb
mov
lcall
adc
dec
std
das
bound
cs
xor
shlb
or
fsubrp
in
fcmovbe
jno
jge
dec
inc
pop
mov
inc
cmp
fcmovb
popa
lock
xor
sbb
mov
jmp
fs
icebp
push
adc
or
loop
mov
lahf
mov
inc
cld
int3
sbb
shl
push
rcrl
push
stos
mov
movsl
adc
insb
push
pop
mov
xor
mov
push
jecxz
ljmp
pop
test
push
sub
add
loopne
ljmp
inc
xor
popf
and
sbb
jae
or
cwtl
subb
lds
xchg
enter
ja
and
clc
sub
scas
inc
sub
lods
xor
addr16
jmp
adcb
stc
les
or
repz
add
movsl
clc
jge
add
sbb
stos
jb
push
sub
aam
sub
gs
mov
cmp
ret
mov
push
inc
das
es
shlb
lahf
ficoms
push
mov
leave
out
fcomps
pushf
mov
adc
dec
inc
adc
xor
jno
mov
lods
adc
pop
fimuls
fstpt
mov
sub
cmp
fimuls
add
mov
xchg
test
push
add
sub
adc
fisttpl
pop
push
clc
sbb
mov
rol
inc
or
mov
dec
ljmp
or
lea
push
mov
hlt
push
push
aam
push
xchg
mov
loope
adc
out
xchg
data16
aam
incb
stos
sbb
jmp
out
pop
imul
mov
mov
add
push
pusha
adc
sub
cmpsb
shll
shll
sarb
rcrl
mov
enter
lgs
ror
mov
add
inc
loope
xchg
in
in
clc
inc
xor
mov
dec
and
cmp
jo
je
add
adc
dec
jle
imul
sbb
jns
insb
push
xor
popa
sub
stos
cmp
in
push
sbb
leave
xchg
jecxz
mov
adc
xor
cli
push
shrb
test
repz
push
sbb
mov
pop
jmp
xor
out
lret
adc
xchg
cld
dec
and
mov
mov
push
sub
add
pop
sub
jmp
dec
lahf
lea
mov
and
imul
or
xor
mov
mov
xor
fidivrl
jge
and
sbb
dec
or
out
and
cld
sub
test
add
jp
or
or
jmp
mov
insb
and
mov
jns
stos
add
hlt
lea
fwait
jge
xchg
lea
jecxz
lahf
jbe
or
into
mov
fsubs
push
ljmp
add
bound
and
sbb
lcall
in
xlat
cmp
xor
xchg
push
mov
or
xchg
pop
jne
lock
dec
jecxz
int
insl
mov
popa
or
sbb
frstor
cmc
add
fcompl
cmpsb
ljmp
ljmp
adc
inc
cmp
cli
mov
or
pushl
pop
test
cwtl
call
int3
iret
or
popl
lock
cltd
jmp
sbb
not
mov
popl
adc
xchg
add
inc
ja
rorb
scas
dec
jge
in
push
arpl
out
sbb
lds
out
fwait
mov
or
xchg
dec
in
incl
mov
cmp
out
into
test
and
lea
or
or
lock
mov
sbbl
push
mov
jae
loope
adc
mov
xlat
and
cli
not
adc
pop
pop
add
adc
ss
push
xchg
shlb
pop
das
pop
test
jnp
mov
sbb
cmp
pushf
pop
ja
and
adc
rorl
cmpsb
or
add
daa
cli
mov
shll
inc
mov
mov
push
sbb
xchg
ret
jbe
or
jbe
fmulp
lea
fs
mov
push
fdivl
imul
sbb
addr16
scas
or
in
iret
adc
movsb
shrb
inc
testl
jae
dec
cmp
test
xor
xchg
push
cmc
je
outsb
sbb
fsts
mov
xor
pop
mov
lret
jmp
fs
jns
movsl
in
inc
and
or
sub
fwait
int
adc
adc
sbb
lea
rol
clc
pop
push
push
mov
sbb
inc
sub
xor
cmp
jg
dec
jne
mov
dec
adc
cld
sbb
jbe
inc
or
rcll
lds
dec
jmp
fmuls
flds
pop
test
loop
mov
in
sbb
test
pop
mov
sbbl
push
push
das
adc
aas
jg
gs
cs
cmc
add
lahf
fnstenv
push
mov
aas
loope
pop
adc
ljmp
test
lcall
dec
ret
push
mov
pusha
and
mov
cld
repnz
inc
dec
xor
loopne
movl
filds
sub
int
push
xchg
push
stos
or
out
movsb
jmp
dec
call
jae
xchg
xchg
dec
rcrb
add
movb
xor
cmp
aas
loope
sbb
jl
hlt
cmc
mov
mov
add
scas
push
dec
add
fucomi
adc
jno
movb
mov
std
mov
push
inc
jmp
or
sbb
lcall
pop
dec
adc
imul
cmp
ljmp
fadds
inc
or
push
imul
pop
pop
lods
je
adc
mov
add
adc
rclb
pop
arpl
xor
pusha
mull
pushf
xor
adc
inc
sbb
ret
fcmovu
sbbb
insl
ret
ret
jns
int
pop
nop
mov
mov
cmp
cmc
cmp
test
shrb
mov
mov
call
mov
lock
adc
imul
out
mov
in
xor
cmp
out
add
inc
add
sub
int3
rcrl
xlat
inc
adc
xchg
adc
add
push
clc
mov
cmp
outsl
xor
rcrl
test
pop
jecxz
loope
sbb
push
or
push
cs
mov
out
mov
sub
xor
aaa
lds
cmp
mov
push
inc
js
outsb
and
push
pop
or
das
fdivr
inc
mov
jne
fprem
push
rcll
int3
pop
mov
jo
adc
inc
inc
in
jmp
pop
xor
push
and
pop
pop
repz
mov
popa
jmp
sbb
test
je
cmp
add
and
mov
and
mov
test
dec
loop
inc
dec
adc
jae
inc
cmpsl
addb
pop
shll
bound
mov
ret
rcrb
sbb
mov
xor
xor
out
mov
mov
rolb
fldcw
inc
loopne
scas
mov
int
pop
divl
jb
sbb
mov
scas
xor
inc
adc
bound
add
add
aad
out
add
repz
xorb
xor
rclb
iret
mov
popa
int3
mov
clc
inc
dec
les
repnz
add
add
in
mov
cli
les
lock
pusha
movsl
sub
jp
push
add
jmp
test
cmp
insb
mov
cmovp
icebp
mov
jno
mov
in
mov
sub
ror
or
add
mov
std
xchg
loopne
data16
inc
pop
pop
dec
push
mov
sarl
mov
les
or
out
fstpt
push
push
lds
dec
pusha
cmpsl
pop
aam
icebp
add
xchg
inc
pushf
mov
rcrb
out
add
out
iret
fwait
or
pop
inc
shlb
movsb
add
icebp
and
jecxz
pop
addb
ss
addl
lock
mov
xor
aas
sbb
sbb
rcrb
ret
repz
sub
adc
add
icebp
int
ja
cmp
inc
sub
xor
mov
mov
dec
mov
adc
sbb
adc
and
xor
adc
sahf
loop
test
in
add
or
les
shll
or
push
fidivrs
sbb
dec
adc
nop
fmuls
adcb
popf
add
jnp
fldenv
add
dec
pop
sbb
cmp
push
xor
inc
rcrl
movsb
dec
out
hlt
sub
dec
outsb
movsl
pusha
xor
xchg
hlt
stos
rcr
shl
xor
add
push
adc
popa
test
int
push
lock
add
filds
and
cmp
pop
push
jmp
ds
add
in
cmpl
add
test
insb
fldcw
push
fwait
inc
loopne
dec
in
or
daa
mov
inc
jl
aam
lock
jg
int
outsl
push
popf
cmpsl
sti
loope
xchg
sahf
sbb
loop
fsts
ds
pusha
addl
adc
adc
je
ret
rorl
nop
fdivs
mov
mov
jne
imul
push
mov
and
sbbl
dec
aam
sub
shrb
adc
loop
jp
fildl
xor
pop
push
test
sbb
xchg
sar
adc
or
jbe
jmp
cli
mov
out
fadd
push
imul
icebp
inc
push
cwtl
pop
cmc
inc
mov
pop
out
mov
frstor
in
sbb
xor
and
inc
mov
xor
push
sbb
xor
ret
nop
mov
and
mov
rorb
out
aam
je
pusha
xor
pop
and
mov
xorb
dec
pop
sarl
dec
xlat
mov
push
ftst
inc
shl
in
adc
and
stos
cmp
pop
mov
xorl
or
cmp
dec
sub
cmp
add
push
cmp
test
fdivl
adc
xor
into
ja
mov
and
xor
mov
mov
cmpsl
mov
outsl
sbb
lods
dec
sbb
add
pop
adc
ljmp
cmp
jne
adc
fildl
cmc
push
adc
or
mov
out
push
or
fisubl
lock
xor
insl
adc
pop
adc
add
xor
stos
mov
xchg
xorl
iret
adc
jae
pusha
sarl
add
jle
out
mov
lret
in
inc
icebp
or
out
xor
dec
es
rolb
sar
xchg
jp
cmp
stos
xchg
mov
fwait
das
fwait
mov
neg
dec
inc
pop
gs
or
xchg
dec
insl
and
xchg
fwait
insl
rcr
daa
rorl
out
sbb
into
mov
ficomps
push
fcomi
ret
addr16
jno
dec
mov
and
ret
mov
nop
dec
int
sbb
mov
les
dec
dec
stos
into
mov
jo
cmp
mov
mov
ljmp
xchg
clc
stos
sbb
mov
test
into
or
sbb
dec
and
test
dec
jno
fildll
sub
test
decb
ret
add
push
inc
inc
fdivl
test
loope
jb
inc
and
and
subb
and
push
inc
inc
popf
lcall
repnz
cld
mov
rorl
movsb
jae
mov
xor
add
jo
testb
pop
cld
and
fstpt
add
sub
js
cltd
push
inc
test
add
lds
dec
and
add
push
rolb
rol
adc
lcall
add
sub
inc
fisubs
lock
push
ret
xor
xchg
loope
or
sbb
fs
gs
and
in
out
xor
jbe
add
xor
repz
fsubs
dec
arpl
cmc
mov
hlt
xchg
add
mov
cmp
mov
push
out
int3
lock
not
add
adc
xchg
test
and
je
or
loop
push
or
insb
cmp
insl
xchg
mov
or
call
test
cs
sbb
push
loopne
or
incl
pushf
jp
xchg
jbe
imul
adc
xor
cmp
xor
inc
and
sbb
shll
inc
xor
sbb
push
jae
call
roll
and
adc
sbb
addl
shlb
ret
test
and
adc
addl
enter
and
sbb
xchg
push
push
push
inc
cmova
adc
pop
mov
adc
sub
xchg
push
fidivrl
je
lock
cmp
mov
sub
pusha
loope
xchg
gs
jmp
test
hlt
and
push
xchg
test
mov
xor
in
repz
adc
add
or
inc
pop
sub
mov
enter
int3
or
mov
xor
and
push
jo
mov
popf
xchg
rcrb
adc
cmp
inc
adc
add
gs
jns
cmp
dec
mov
cwtl
sub
xor
push
cli
imul
inc
mov
rol
imul
loopne
jmp
int
in
and
call
sahf
dec
inc
pop
jecxz
clc
xchg
push
test
faddl
or
insl
jp
push
ret
ret
repnz
mov
sbb
fists
adc
aaa
mov
imull
das
inc
mov
sub
mov
dec
lds
fnstenv
mov
push
test
push
push
push
call
jecxz
xchg
xor
notl
inc
loop
leave
mov
pop
pop
fnstcw
shlb
add
aaa
ss
test
mov
jb,pn
data16
push
pop
pop
std
dec
iret
inc
into
push
push
sbb
fmull
dec
sub
pop
sahf
push
mov
hlt
push
mov
sub
jo
in
push
mov
rolb
xor
adc
bound
mov
add
out
insb
bound
lock
jns
pop
cs
push
sub
sub
aaa
adc
shlb
inc
test
mov
fcoms
test
xchg
repz
test
add
and
popa
push
adc
push
notb
lock
inc
or
push
lea
dec
or
pusha
rorb
jbe
negl
add
andb
dec
mov
repnz
cmpsb
xor
enter
fsubrl
out
arpl
fdivs
pop
in
push
popa
dec
mov
fildl
pop
and
ret
je
xor
cmp
das
jbe
bound
mov
popf
xor
dec
movlps
fbstp
movsl
hlt
mov
sub
pop
les
fnstsw
adc
add
pop
xor
add
inc
cli
popf
lahf
mov
stc
add
pusha
jmp
xor
cmovo
sub
adc
or
adc
xor
push
sbb
dec
sbb
shlb
add
mov
cmp
pop
add
repz
inc
mov
and
push
mov
or
jmp
adc
call
add
push
lock
pop
sub
adc
addl
pop
imul
dec
fwait
jbe
xchg
adcl
roll
mov
xchg
mov
xchg
mov
lcall
xor
cmp
rorb
ljmp
repnz
cltd
adc
pop
outsl
push
cltd
or
ljmp
ret
std
mov
outsl
cmpsb
and
mov
ss
jbe
or
int3
or
push
lock
xor
sbb
adc
sbbl
jle
mov
dec
push
push
loopne
popa
push
inc
dec
int3
pop
push
loopne
push
mov
ret
sbb
fmul
xchg
stos
jns
lcall
sub
sbb
dec
mov
add
and
dec
mov
int3
fisubrs
adc
aas
pop
sub
sbb
test
xor
jle
aaa
mov
mov
sub
scas
or
divb
add
cmp
dec
inc
sub
iret
fucom
call
push
dec
std
loopne
mov
lahf
repz
cmp
ss
mov
cld
inc
fsubr
xchg
or
jno
sbb
int3
and
xchg
andl
mov
dec
dec
jecxz
fstpl
sub
push
push
add
dec
inc
ja
add
loope
rcrb
mov
inc
aad
ljmpw
outsb
test
jbe
rcrl
inc
pop
xchg
call
loopne
jmp
cmc
popa
icebp
dec
fsub
mov
cmp
scas
jae
jne
sbb
fsubrs
rolb
jnp
push
mov
gs
sbb
mov
jmp
and
mov
pop
cmp
clc
adc
xchg
push
call
stc
pop
imull
add
sub
es
cld
push
inc
andl
sbb
daa
jmp
mov
mov
sbb
rolb
add
jmp
cs
pop
jle
and
std
mov
rorl
dec
pusha
sahf
adc
push
push
iret
jmp
push
dec
pop
xorb
test
and
inc
leave
inc
dec
mov
jne
push
nop
outsb
xchg
xchg
pop
shlb
or
mov
and
dec
mov
push
jbe
and
jo
and
and
sub
sub
and
or
dec
dec
jmp
dec
sbb
sbb
mov
xchg
cltd
and
and
enter
test
movsl
mov
inc
fimuls
les
push
dec
test
stos
hlt
dec
test
or
mov
xor
test
shlb
adc
pushf
es
mov
les
dec
jle
adc
mov
and
icebp
shlb
dec
jb
in
adc
xchg
cltd
pop
xchg
or
dec
clc
xor
mov
and
inc
xorb
outsb
dec
mov
jl
xor
cmp
add
ds
adc
flds
fmuls
mov
and
jp
rcrb
ljmp
pop
mov
es
push
xchg
mov
jl
cmp
outsl
pusha
leave
cmp
out
inc
sbb
int3
fimull
shrb
jl
fwait
lret
add
or
clc
in
adc
mov
adc
data16
movsl
dec
orb
mov
push
cwtl
mov
push
lret
out
mov
and
insb
dec
test
test
add
or
notb
mov
cmpsb
fisubl
roll
mov
or
leave
insb
pusha
xchg
jmp
aam
add
push
sbb
dec
xchg
lock
adc
jb
mov
inc
lret
push
dec
lods
mov
add
ss
or
test
push
adc
xor
fcomps
dec
rol
dec
mov
lods
xor
xchg
inc
cld
adc
xchg
mov
shlb
push
sbbl
int3
insb
mov
mov
jo
sar
mov
mov
add
imul
notb
add
dec
insb
rclb
push
add
pop
ficoms
lret
add
pop
mov
clc
or
pusha
data16
ljmp
inc
adc
sahf
add
mov
jp
cwtl
push
cli
push
mov
push
dec
pop
testb
movsl
push
mov
jb
mov
pop
xor
ret
jmp
push
dec
xchg
mov
mov
test
and
mov
sbb
cs
and
inc
adc
inc
daa
dec
mov
jecxz
xchg
and
js
fidivs
sbb
jl
xor
loop
movsb
sbb
push
xor
ljmp
push
push
adc
push
xchg
or
dec
gs
pop
enter
sub
ljmp
shll
into
subb
mov
add
xor
xchg
sbb
imulb
xor
in
adc
mov
movsl
mov
jbe
pusha
dec
xchg
or
push
add
movsb
add
and
js
loopne
lods
lods
scas
inc
mov
inc
pusha
inc
dec
sbb
call
dec
add
mov
sarb
sbb
pop
mov
es
cld
adc
mov
pop
jl
movb
push
pop
fdivrl
adc
xchg
jbe
cmp
add
xor
neg
repnz
mov
std
adc
xor
add
in
into
push
cmpsb
mov
dec
repnz
lods
jbe
data16
mov
cli
pusha
adcb
mov
leave
push
call
nop
xchg
mov
mov
fistps
or
mov
lods
test
adc
fadds
mov
dec
adc
mov
sbb
testl
adc
or
cltd
rolb
cmpsb
lods
adc
and
std
xchg
cmp
adc
outsb
in
cmpsb
xor
fdivr
push
cmpsb
push
cltd
icebp
push
pop
mov
scas
adcb
push
sbb
jmp
mov
xor
lcall
dec
fsubl
push
add
or
dec
out
cwtl
pusha
add
dec
dec
jle
pop
cmp
fsubs
cmpsb
pop
jne
nop
call
mov
shrb
adcb
ss
cmp
fmul
lret
sub
bound
adc
lret
xchg
mov
mov
xchg
sub
push
sub
adc
data16
clc
add
dec
dec
mov
in
cli
mov
popf
dec
xor
data16
lcall
add
into
cmp
addl
inc
and
loopne
dec
sub
mov
pop
sbb
cmp
jne
mov
xchg
ret
or
add
and
push
add
cmp
add
js
sub
daa
and
xchg
idivb
add
pusha
cmp
xor
add
mov
add
sub
orl
pop
sbb
loopne
rcr
adc
cltd
adc
cli
adc
ret
add
pushf
push
mov
mov
cli
jb
mov
cmp
sbb
xor
pop
inc
and
sub
in
lock
fcoml
mov
xchg
sbb
xchg
loopne
pop
iret
push
push
clc
loopne
js
sahf
sub
dec
jle
mov
out
mov
fs
and
mov
fs
dec
pusha
data16
ret
sbb
xor
cwtl
and
inc
out
loopne
dec
mov
lcall
loope
adc
jo
nop
test
cmp
je
enter
cmp
sub
movsb
add
fisubs
sbb
test
add
ss
or
push
ret
inc
or
aad
mov
add
loopne
push
add
imul
adc
cmp
xor
mov
lea
jo
inc
add
ret
lfs
mov
adc
fs
pop
pop
shl
in
mov
in
shrl
rolb
push
or
add
push
nop
lret
mov
jbe
in
inc
pop
inc
andl
or
and
add
sub
nop
cltd
adc
mov
rcrb
or
mov
dec
scas
fs
sahf
adc
ret
scas
xchg
out
pop
sub
lea
mov
test
add
and
scas
lods
jo
xchg
inc
hlt
mov
daa
push
popa
xor
mov
push
lods
js
mov
cwtl
lods
imul
cmpb
and
cmp
fsubrs
stos
xchg
sub
inc
data16
push
push
add
or
popa
stos
and
jmp
cmp
add
adc
mov
orl
stos
dec
cwtl
dec
xor
inc
sbb
mov
lods
adc
movsb
mov
fisubl
or
ret
int3
mov
mov
add
adc
and
hlt
xor
mov
in
daa
add
das
jb
out
icebp
adc
mov
pop
pop
or
loop
jbe
mov
and
xchg
xchg
lea
mov
xor
pusha
in
sbb
lock
bound
test
sbb
cmp
fadd
cmp
mov
jnp
or
mov
and
sbb
push
or
or
cmp
or
push
dec
sbb
es
addb
sahf
lock
add
push
fsub
subb
sub
cwtl
fnstsw
aad
clc
test
pop
dec
cmp
pop
ss
mov
cmp
cmp
es
add
ror
adc
inc
out
adc
push
xor
rolb
les
add
or
and
test
loop
cmp
nop
mov
add
ret
jp
sub
adc
dec
jo
stos
cmpsb
in
or
hlt
out
mov
dec
push
test
shlb
cmp
dec
mov
int3
jo
mov
test
fcoml
adc
hlt
outsb
dec
sbb
rol
add
push
imul
pushw
out
jp
adc
or
or
add
sbb
data16
hlt
mov
lods
push
and
cmpsl
pop
pop
xchg
stos
or
adc
and
cld
dec
or
push
rcl
mov
imul
mov
inc
scas
jle
or
addb
hlt
push
xor
js
mov
mov
fimull
xchg
sbb
nop
call
xchg
pusha
bound
lods
push
inc
push
ficomps
pop
int3
and
shl
loope
inc
and
sub
sbb
ljmp
cmp
adc
adc
enter
inc
test
sahf
ljmp
out
loopne
lods
orl
adc
ret
int3
add
cmp
xor
xchg
idivb
adc
pushf
into
jle
jl
add
imul
xchg
inc
add
dec
or
mov
cmp
mov
dec
xchg
jb
lock
pop
outsl
cmp
call
test
rolb
sub
lret
es
adc
rcrb
js
leave
add
and
xor
and
sub
dec
shlb
fcmove
pushf
sbb
inc
into
xor
int3
push
mov
popa
loope
aaa
repnz
jl
lods
cltd
cltd
mov
aam
dec
test
rolb
inc
test
adc
movsb
cmp
jle
rolb
adc
add
push
mov
icebp
add
and
incl
push
pop
adc
or
xchg
in
lock
add
add
mov
mov
add
add
lods
pushf
push
popf
add
jmp
push
add
addr16
add
push
adc
testl
call
dec
mov
dec
addr16
or
addl
ljmp
cmpl
aas
popa
add
dec
add
hlt
enter
add
fcomps
pop
sub
mov
cmp
les
or
mov
incl
mov
dec
in
sbb
add
clc
push
xchg
bound
sub
sbb
pop
hlt
in
lret
cmp
pop
mov
sub
add
mov
mov
aas
aam
pop
jmp
test
jo
ret
jno
pushl
lret
mov
inc
lea
loopne
xchg
clc
ret
mov
out
mov
sub
addl
cmp
dec
xchg
sbb
movsb
scas
insb
pop
roll
mov
decl
add
push
popa
adc
mov
mov
pop
test
push
ds
mov
cwtl
jle
pop
fcomip
mov
add
stos
jb
fldt
add
sbb
lea
or
dec
in
inc
cmpsb
inc
xchg
or
xchg
or
ret
or
decl
push
fimull
mov
test
fisubrs
repz
ret
es
pop
cmp
insb
add
mov
add
jl
mov
fnstcw
mov
add
and
cmp
fcoms
icebp
mov
std
int
add
das
add
cmp
add
imul
call
inc
and
insl
sbb
or
clc
dec
pop
fdivrl
sbb
ljmp
scas
js
mov
and
add
stos
add
ja
inc
pop
push
ret
test
push
pop
and
leave
testb
pop
mov
push
outsb
push
test
jg
push
add
xchg
push
xchg
and
mov
cld
inc
roll
or
add
mov
es
inc
adc
cmp
fistpll
cmp
dec
test
pop
xchg
add
imul
add
movl
add
xor
jge
add
cmc
or
test
pop
push
lock
sti
pop
mov
cmp
pop
int
adc
sbb
pop
adc
fstl
roll
decl
push
movsb
adc
mov
add
bound
je
gs
or
mov
lock
pop
test
dec
rcr
push
pop
adc
adc
sub
jle
add
cmp
mov
mov
adc
xchg
js
mov
mov
adc
out
sbb
mov
fcomi
test
add
es
es
imul
add
nop
imul
arpl
nop
push
push
mov
add
sbb
scas
push
outsl
js
add
aaa
imul
pop
and
pop
imul
repz
ja
mov
cmp
add
xchg
xor
iret
outsl
ja
insl
out
andl
nop
adc
jmp
fbstp
lods
add
fsubrs
add
sub
test
cmp
loop
add
add
lods
int3
js
lcall
add
test
ret
add
fcomip
jmp
adc
ljmp
int
mov
in
repz
mov
sub
fildl
cmp
js
test
pop
sbb
outsb
fwait
mov
mov
outsl
add
sub
ret
and
scas
lcall
xchg
rorb
sub
andb
fbstp
fistpl
test
popf
pop
or
inc
sub
icebp
sub
mov
push
mov
fstpl
pop
enter
test
add
or
mov
cmp
js
enter
fs
or
push
xor
or
lds
sbb
pusha
adc
iret
test
pop
mov
dec
shl
jecxz
hlt
and
fsubrs
mov
shl
push
jg
mulb
pusha
and
or
in
in
inc
sarl
jns
push
fs
repnz
fimull
insl
incb
sub
shlb
sub
mov
loopne
nop
xor
cmpsb
dec
sub
repz
jg
push
adc
rorb
sub
rorl
roll
rcrl
push
loopne
xchg
and
jne
push
fstl
outsl
out
into
test
shlb
insb
test
push
loopne
test
ja
fs
rolb
lods
insl
aaa
xchg
cmp
sbb
pop
push
push
pop
pop
push
fmull
dec
fistpl
js
mov
add
jmp
jg
jmp
in
add
iret
push
mov
test
ret
notb
testb
and
es
adc
andl
xchg
test
and
jg
mov
in
adc
fmull
and
cld
cmp
shlb
inc
ss
out
jmp
xor
mov
jne
cli
push
or
sbbb
out
clc
fcomi
push
cld
fwait
outsb
js
dec
shlb
dec
or
roll
out
sub
jb
lcall
push
sub
scas
sub
pop
dec
push
clc
loop
popa
xchg
mov
aaa
lret
in
adc
and
fidivrl
xchg
dec
add
sarb
pop
negb
sbbb
hlt
mov
shrb
es
aas
sub
ljmp
jg
add
fisubs
cmpsl
sbb
rcll
js
jbe
mov
push
clc
cmpl
sub
outsl
fdivs
out
test
and
push
pop
sub
out
add
loop
sbb
cmp
jp
shlb
fistpll
adc
sbb
out
mov
push
inc
pushf
fsubr
test
jle
adc
test
xchg
inc
adc
ja
inc
cmp
lock
add
add
fimuls
stos
test
lods
shlb
xor
jl
test
xor
inc
pop
mov
add
inc
movsl
repnz
mov
insb
push
cmp
push
ficomps
sub
xchg
dec
xchg
je
insb
adc
sarb
pop
shl
adc
mov
ljmp
loop
mov
mov
bound
enter
inc
cmp
add
sub
jb
xor
in
sub
and
or
ficoml
mov
mov
lcall
mov
xor
mov
xchg
add
mov
daa
jno
sbb
test
xor
add
test
inc
xchg
jge
jg
or
scas
js
aam
dec
popa
mov
lods
mov
pop
push
fbstp
mov
fdecstp
push
lret
fdivrl
adc
jge
add
outsb
mov
add
insb
mov
jg
loope
int
incb
push
and
icebp
ficoml
lahf
add
ret
decb
mov
ljmp
push
cltd
push
push
addr16
mov
dec
stos
inc
inc
mov
sub
sarl
jg
das
out
mov
aad
rcl
adc
jp
test
lret
jg
xor
cmp
shrb
sub
imul
loopne
add
lock
jo
ja
in
pushl
jecxz
push
test
push
sti
int3
loope
ljmp
add
call
mov
les
mov
roll
mov
push
sbb
xorl
jb
pop
cwtl
pushf
nop
mov
aaa
fdivr
add
inc
clc
les
jbe
xor
rolb
inc
pop
mov
filds
dec
sub
jl
std
mov
inc
pop
out
ficoml
sub
jno
outsl
mov
stos
clc
cmp
loop
popl
push
pop
data16
out
js
mov
add
mov
add
orb
sub
call
in
push
movsl
test
or
add
ds
ljmp
mov
push
dec
mov
jns
fs
mov
hlt
es
push
sbb
cmpsb
imul
jnp
int3
mov
fwait
mov
xlat
into
pop
adc
fsts
inc
mov
aas
jl
shlb
in
and
sbb
repz
jg
and
xchg
enter
rcrl
mov
cmp
add
xor
and
jg
clc
lock
aam
call
lcall
cmpsb
lret
addb
int
mov
mov
jae
sbb
les
lahf
xchg
pop
cmpsb
add
mov
cmpsl
test
push
loop
adc
pusha
mov
cltd
xchg
xor
push
std
cmp
les
nop
shlb
push
pop
push
lds
add
int3
stc
inc
scas
add
call
adc
push
jnp
push
jl
je
ljmp
out
mov
call
mov
inc
std
jle
js
aas
test
mov
lret
add
fsubl
xlat
int3
xor
adc
jne
pop
std
cmpsl
xchg
xchg
movsb
mov
andl
adc
or
and
add
int3
mov
mov
js
cltd
mov
stos
push
cld
call
fistl
test
std
enter
in
sub
xor
inc
mov
xor
and
push
fisubl
ret
data16
dec
ljmp
mov
test
push
cmp
clc
les
cmp
call
das
xchg
or
pop
xor
push
cwtl
and
lcall
xor
jmp
push
nop
shrl
cmp
cwtl
mov
push
cld
inc
cwtl
push
and
call
or
fisubrl
mov
add
ljmp
cmpsl
jg
out
lret
mov
jp
bound
or
es
push
scas
jg
aam
imul
roll
cmpsl
pop
test
fcmovb
add
add
jp
lock
es
push
add
and
pushl
mov
test
mov
jp
repz
inc
ja
js
mov
ret
sbb
into
xorb
pusha
orl
cmp
std
jg
and
repz
mov
fists
mov
xchg
add
enter
add
out
mov
shl
mov
aad
imul
es
scas
outsl
mov
mov
jb
inc
dec
dec
lahf
fldt
add
pop
mov
movsb
push
and
mov
push
cmpb
or
fdiv
gs
push
xor
or
lea
ret
decl
enter
mov
inc
icebp
jmp
arpl
notb
sbb
inc
adc
loope
add
mov
xor
cli
aaa
sub
pop
adcb
and
sbbb
or
addl
mov
mov
sub
hlt
and
lcall
stos
rclb
mov
add
shl
push
imul
testl
or
or
mov
pop
add
mov
pop
adc
cmc
jbe
pushf
jg
lods
sub
in
mov
sub
ss
std
mov
ja
leave
push
and
cmp
and
outsb
lds
add
add
mov
cmp
xchg
sub
mov
leave
sbb
and
cli
mov
xlat
mov
adc
test
pop
insl
outsl
movsb
sbb
cwtl
insl
fcom
loopne
or
and
call
fbstp
push
add
add
pusha
loopne
mov
mov
xorb
ss
in
mov
addb
mov
fidivs
ss
add
add
xchg
push
jecxz
ds
cld
add
adc
push
pop
sbb
mov
push
mov
add
mov
jbe
decl
push
push
stos
sbb
imull
add
mov
xchg
cmpl
mov
stos
pushf
cwtl
sbb
fimuls
pop
mov
add
bound
repnz
lcall
jl
loopne
sbb
add
add
mov
push
cmp
lea
dec
stos
xor
inc
cmp
xchg
xchg
arpl
dec
push
imul
ljmp
sarb
add
lods
add
push
push
int3
jb
shrl
sub
inc
arpl
xor
mov
cmpsb
push
or
sbb
mov
xor
loopne
cmp
rcr
inc
stos
inc
inc
mov
jmp
in
cmp
ror
or
dec
cmp
loopne
lods
xor
arpl
add
xor
mov
dec
push
mov
outsl
add
icebp
or
dec
leave
cmp
scas
push
cmpsl
mov
jae
fmull
in
sbb
and
mov
xor
icebp
mov
adc
daa
inc
adc
pop
scas
adcb
jg
outsb
loop
mov
or
call
push
cmp
jae
cmp
aaa
and
adc
cmp
mov
push
cmp
mov
sbb
enter
xor
sub
clc
add
call
add
lret
mov
test
les
mov
inc
shll
dec
jecxz
sbb
sub
xorb
mov
pop
adc
scas
shl
pop
add
dec
inc
jne
jg
adc
aaa
or
jg
cmp
fbld
cmp
adc
sbb
and
fsubrl
incl
test
data16
sbb
cmpsl
cwtl
inc
loope
mov
notb
je
pusha
pop
push
lds
fisubs
cmp
mov
scas
ficoml
add
xor
or
pinsrw
jecxz
jl
jnp
sub
and
sbb
out
xchg
test
pusha
push
ret
filds
add
xor
inc
adc
push
loope
mov
add
out
insb
pop
fsubl
dec
outsl
stos
clc
jns
xchg
ret
out
pop
add
lods
add
mov
int
jb
xchg
outsl
pop
cmpsb
insl
incl
lock
incl
cmp
cmp
out
int
mov
mov
push
push
dec
aad
popf
je
push
dec
or
scas
cld
sti
add
or
pop
loope
xor
mov
mov
pop
lock
popa
out
jle
dec
push
add
ror
mov
cmp
jno
xor
cld
aad
rorb
mov
jmp
invlpg
adc
push
push
cmp
push
xchg
in
xor
add
xchg
adc
imul
les
ss
dec
push
ret
add
xchg
mov
lock
jb
jle
or
aad
rcrl
inc
pop
ret
outsl
pop
mov
inc
mov
add
jbe
push
jecxz
mov
jp
jecxz
and
cmp
ficompl
mov
icebp
in
jbe
cld
ljmp
push
adc
cld
mov
pop
mov
in
lock
inc
mov
stos
repnz
sahf
je
les
ret
clc
jp
and
xlat
inc
adc
dec
fdivrp
imul
cwtl
sub
mov
push
clc
adc
jnp
adc
ss
inc
mov
and
dec
or
clc
les
sub
inc
mov
pop
adc
in
lds
xchg
ljmp
shlb
scas
add
dec
fists
sbb
repnz
dec
inc
mov
in
js
dec
jmp
aam
xchg
andb
inc
das
cli
pop
std
cmp
xchg
jne
popa
ljmp
mov
incl
and
push
nop
lods
lods
mov
cwtl
mov
loop
mov
push
mov
pop
fimuls
lock
aas
fs
ss
pusha
cli
pop
test
pop
xor
sbb
test
jo
or
ds
or
jb
push
xchg
mov
add
mov
decl
push
and
xor
loopne
fmuls
add
xor
or
add
dec
in
add
or
inc
mov
fs
sbb
or
lods
je
inc
add
jbe
fidivs
outsl
inc
divl
scas
mov
iret
sahf
call
mov
repnz
test
push
int3
jb
inc
stos
adc
mov
mov
clc
sub
negb
sahf
push
cld
pop
sar
mov
jo
xor
jecxz
data16
rcrb
push
add
hlt
sub
andb
aaa
cld
sbb
rorb
mov
inc
je
push
cmp
mov
cld
fbstp
clflush
jae
dec
xor
es
xor
add
inc
xchg
ljmp
lcall
mov
stc
in
inc
add
add
or
outsl
cli
ljmp
fsubl
insb
roll
out
mov
push
add
xor
add
pop
mov
jmp
mulb
dec
addb
decb
lret
xor
pop
push
mov
or
jmp
xchg
cmp
lcall
icebp
and
cmp
call
adc
push
fcoml
aaa
mov
int3
cld
inc
leave
loope
mov
or
push
sub
xchg
repz
mov
cmp
sbb
add
cld
idivb
pop
aaa
daa
mov
mov
popf
cmpsl
inc
loopne
pop
test
push
cmpsb
and
mov
push
out
add
pop
rol
testb
sahf
daa
add
mov
sub
mov
sbb
cwtl
lods
nop
cmp
or
mov
lcall
and
insb
mov
xchg
pop
orb
mov
sbbb
ror
lahf
pusha
stos
dec
bound
loopne
xchg
je
test
add
fwait
rorl
loope
push
in
lds
insb
dec
inc
into
insb
loop
movsb
imul
in
or
xlat
scas
enter
movsb
js
push
out
and
scas
or
fistpll
mov
mov
ret
fwait
nop
push
xor
pop
add
add
ret
jp
stc
test
add
or
mov
shlb
pop
lock
std
decl
add
mov
test
add
stos
in
mov
ds
out
or
inc
mov
push
push
int3
es
and
jne
xchg
dec
and
insb
xor
sbb
movsb
movsb
adc
loope
fsubrs
lahf
imull
pop
mov
sub
xorb
mov
push
lods
jecxz
adc
sahf
or
cmp
adc
enter
dec
iret
in
pop
je
xor
and
xor
outsl
sbb
sti
fildll
push
cmpsb
xor
incl
pushf
wrmsr
xchg
js
xchg
aam
and
xchg
arpl
adc
test
jg
dec
rcrb
mov
jp
inc
xor
rcrb
mov
out
ljmp
ss
cmc
mov
jno
sub
bound
push
std
adc
cmp
xor
push
push
and
pop
rcrb
ds
in
es
jno
js
cli
mov
add
lcall
dec
enter
mov
cltd
push
lea
out
ret
scas
pop
mov
loopne
dec
pusha
push
ret
in
repnz
and
push
adc
pop
in
pushf
mov
scas
xor
std
adcl
jno
add
push
pop
dec
xor
nop
xchg
ljmp
cmpsb
pop
push
insb
cltd
pop
loop
mov
and
sti
mov
addr16
push
mov
imul
dec
bound
xor
shl
mov
fwait
aam
dec
or
imul
cld
shl
push
out
hlt
cwtl
pop
icebp
pop
jbe
push
ja
das
inc
pop
stos
or
dec
add
scas
dec
mov
mov
cmp
fs
jg
lods
dec
dec
push
add
xchg
lods
jl
loope
cld
add
incb
aam
fnsave
mov
xorl
dec
ret
inc
inc
lods
mov
cmovae
lock
ret
sbb
lds
sub
stos
fucom
clc
call
in
lea
ja
inc
mov
mov
les
sub
inc
cltd
test
inc
mov
sub
fadds
fucomp
adc
pushf
lods
mov
js
or
lcall
sub
cmp
ret
scas
pop
sahf
fs
mov
in
xchg
or
daa
mov
add
jle
cmpsl
lds
pushf
mov
dec
or
fsub
add
movsb
sbb
add
sti
cmp
cli
pushf
in
jmp
jecxz
mov
ljmp
sub
mov
pop
adc
or
into
pop
add
or
loope
gs
adc
or
fcmovnb
or
or
xor
and
in
ja
into
js
or
cmp
mov
add
shrb
xchg
scas
js
adcl
cmp
jno
sbb
ret
pop
xor
movsb
aas
dec
or
dec
push
stos
add
xchg
data16
pop
sbb
pushf
clc
sub
idivb
lret
les
cmpsb
in
cli
add
sub
stos
push
popf
out
rolb
cmpb
ja
push
push
pusha
mov
test
push
subb
mov
rclb
in
flds
arpl
xchg
and
clc
lahf
insl
lods
sub
jg
int
add
pusha
nop
or
ret
into
add
loop
xchg
sub
lmsw
push
pop
sub
push
mov
jp
jno
mov
cmc
aam
jae
cmp
pop
mov
dec
or
jmp
lds
andb
add
adc
jmp
or
pop
aam
leave
popa
or
mov
ds
sub
push
mov
jl
div
mov
enter
dec
lds
fst
adc
and
push
jp
movsl
sar
decl
adc
mov
repnz
or
xor
or
sub
or
cmpsb
jg
push
dec
int3
xor
adc
lcall
rcrb
adc
enter
cmp
loopne
jmp
subb
cwtl
out
push
jl
or
mov
bound
jg
sti
add
push
pushf
scas
add
jg
lds
mov
and
and
cwtl
repnz
ds
inc
push
repnz
inc
fbld
js
adc
daa
mov
gs
sarl
add
cli
enter
inc
mov
jne
cli
mov
ss
shl
cld
add
mov
jge
outsl
in
out
ljmp
out
pop
outsb
orl
das
std
add
mov
push
fcmovu
cmp
dec
mov
jge
icebp
inc
adc
jo
sub
popf
add
xchg
xchg
and
and
cmp
scas
xchg
pop
out
mov
inc
clc
xchg
daa
sbb
les
in
ja
cli
cmpsb
outsl
in
xor
sub
or
jecxz
scas
lock
lret
add
jecxz
add
fiadds
sbb
lock
or
mov
data16
dec
shrl
icebp
dec
inc
int
ds
and
and
cmp
sub
mov
shrb
pop
insb
out
or
push
xchg
je
adc
lock
pop
cs
loopne
vpunpckhbw
stos
jae
int3
enter
adc
add
jle
aad
jns
popa
add
stos
enter
mov
adc
sbb
mov
jmp
xchg
test
and
add
loopne
fxch
mov
mov
pusha
in
inc
and
mov
mov
cmp
xor
ret
mov
cmpsl
jmp
inc
xlat
je
rclb
xlat
xchg
ret
inc
mov
sbb
out
cmp
mov
fildll
stos
and
or
gs
test
iret
scas
inc
add
idivb
fisttpll
mov
es
sub
pop
mov
repnz
xor
sahf
mov
rclb
add
push
jmp
xchg
push
mov
fldt
lock
add
fldt
mov
mov
push
pop
loop
sbb
mov
jecxz
popf
push
mov
sbb
add
sbb
mov
adc
sahf
out
or
cmpsb
jle
inc
inc
js
lret
add
push
mov
call
mov
mov
mov
cld
in
in
pusha
xchg
mov
cmp
add
fbstp
test
fbstp
mov
add
sbb
add
subl
shl
adc
jp
jmp
push
inc
stos
or
mov
pop
stos
pop
mov
sbb
pop
xchg
subl
mov
cwtl
xor
cmp
sbb
adc
adc
push
test
lds
push
nop
jmp
pop
sub
dec
stos
or
add
mov
inc
mov
push
mov
jg
movsl
and
movb
outsb
or
and
dec
mov
popa
je
push
cld
add
fwait
and
push
sbb
out
inc
lds
mov
mov
fists
test
testl
sub
push
sbb
pop
into
dec
xlat
push
bound
or
call
outsl
jp
insl
stos
cli
mov
dec
popf
cwtl
and
xchg
or
xorb
cld
or
jno
inc
mov
or
cmp
enter
outsb
fidivrl
jnp
xor
mov
push
sbb
mov
sbbl
push
jb
dec
cmp
jns
loopne
movl
dec
in
mov
test
cmpsb
sahf
add
or
xchg
adc
es
and
stos
sarb
outsb
add
add
xchg
xor
push
inc
jl
test
dec
in
inc
sub
push
popf
jg
outsb
add
sbb
mov
inc
sub
hlt
jecxz
adc
mov
mov
adc
outsb
adc
aam
shll
or
mov
cltd
inc
pop
and
add
inc
jmp
pop
add
xchg
dec
call
sub
andl
int3
leave
jo
inc
mulb
scas
sti
pop
lcall
sahf
mov
sbb
stos
mov
push
ret
in
add
decl
inc
jns
outsb
fsubrl
jnp
push
outsb
mov
daa
inc
push
sbb
and
iret
or
fsubp
jg
andb
xor
cmp
fstpl
cmp
outsl
sbb
pushf
adc
mov
dec
sbb
push
push
imul
mov
or
xchg
push
ror
in
add
es
push
fiadds
sub
inc
test
fists
inc
pop
add
mov
mov
cmp
dec
andb
or
sub
stos
add
add
movb
mov
mov
cld
xor
jns
mov
mov
cwtl
xor
or
xchg
inc
lcall
add
cmp
and
pop
add
stos
pop
mov
xor
jb
push
clc
cmc
and
ret
add
loopne
or
push
jae
mov
enter
ss
push
aaa
and
add
mov
mov
mov
adc
jmp
ret
insb
xchg
stc
inc
pop
pop
scas
rclb
push
xchg
scas
pushaw
mov
lds
or
imul
jo
inc
inc
mov
sbb
js
pop
stos
stos
mov
rclb
adc
mov
push
sub
dec
sahf
loop
sbb
mov
mov
push
inc
cwtl
sbb
iret
fimuls
roll
or
and
or
and
and
xlat
cmp
call
adc
mov
out
mov
sbb
cltd
push
mov
jl
sbb
dec
inc
mov
ds
push
mov
aas
xchg
cmp
and
insb
jge,pt
dec
aad
push
cmp
jle
stos
pop
test
jnp
fimuls
testb
sub
push
mov
bound
dec
push
ret
test
inc
xchg
shlb
test
ss
pop
shrb
enter
xor
pop
sub
ljmp
mov
sub
leave
pushf
inc
aaa
loope
hlt
add
dec
scas
inc
lret
hlt
cld
jg
clc
push
clc
xor
int3
pop
lret
mov
jge
add
xchg
ds
push
stc
pop
cld
data16
outsb
xchg
add
push
enter
aas
movsl
in
xor
fdivrp
mov
sbb
adc
sahf
fldt
push
daa
test
push
test
push
test
out
mov
and
add
inc
push
jle
mov
mov
sbbb
dec
xor
cld
fbstp
cwtl
outsl
cmp
lcall
xor
cltd
pop
sub
push
add
outsl
push
andb
mov
jae
fwait
lds
test
and
sti
stos
add
dec
rcll
les
mov
mov
mov
push
jnp
adc
push
sarb
and
push
out
jg
hlt
cmp
mov
pop
pop
roll
xchg
mov
fisttpl
cmp
pushf
dec
mov
mov
mov
adc
ret
test
out
mov
and
mov
sbb
mov
scas
jbe
dec
dec
xchg
rclb
xchg
xchg
enter
sbb
add
mov
add
inc
adc
lcall
int
adc
inc
mov
pop
jmp
fsubrl
lcall
and
sub
cld
push
scas
mov
dec
add
fnstsw
mov
jecxz
mov
mov
fs
jle
mov
push
inc
dec
js
sbb
stos
adc
sbb
arpl
ds
scas
ss
xchg
ja
fdiv
inc
mov
dec
mov
add
incl
adc
cmp
lret
or
sub
cmpsl
adc
mov
adc
adc
pop
stc
and
or
lock
add
xchg
mov
mov
sub
mov
and
pushf
aaa
pop
hlt
fidivs
cmp
call
or
or
xor
stos
adc
lods
adc
xchg
sub
popf
push
mov
clc
into
sub
outsb
or
inc
fisttps
fwait
ljmp
in
lods
push
mov
inc
cmpsb
and
push
lock
xchg
icebp
loop
shl
add
push
mov
push
jp
mov
gs
sub
cmpl
and
mov
push
sub
sub
ss
push
mov
inc
mov
add
stc
jl
stos
pop
push
shl
xor
mov
mov
dec
adc
loope
mov
jp
or
insl
xchg
sbb
xchg
cli
xchg
sub
cmpl
iret
outsl
pop
andb
fisubs
test
fdivs
push
mov
fbld
xor
inc
lahf
aas
in
shl
add
enter
push
dec
std
fildll
xchg
das
hlt
cld
pop
inc
add
jb
cli
sbb
and
pop
pop
push
or
clc
mov
pop
test
jge
jle
xchg
hlt
pushl
mov
inc
les
pushl
arpl
dec
and
push
push
movsl
sbb
imul
push
xor
mov
cmpl
adcl
cmpb
add
sbb
sub
mov
sub
mov
imul
sbb
pop
loop
aad
roll
sub
cmp
add
subb
mov
dec
push
sub
jno
cs
addr16
mov
mov
or
adc
insb
rcr
sub
je
inc
push
or
stos
mov
lret
lds
cmp
pop
inc
add
jo
pop
push
inc
push
lock
adc
mov
lock
mov
ja
push
call
pushf
test
mov
cmpsb
or
imulb
mov
nop
and
jl
and
push
push
push
dec
jb
mov
icebp
add
mov
dec
add
clc
mov
mov
sub
inc
xor
fdivs
push
pop
adc
aaa
cld
dec
ret
add
cltd
adc
push
leave
jo
pop
mov
push
arpl
out
stos
aad
test
ss
pop
add
movsb
adc
mov
dec
test
out
and
int3
adc
adc
jg
push
sub
incl
call
outsb
and
xchg
and
les
aas
cmp
imul
mov
mov
dec
dec
sbb
xor
and
xor
and
push
pop
lret
out
fcmovu
cmp
add
push
popf
dec
xor
lret
and
jl
pushl
add
mov
ret
inc
add
je
loop
jns
shrl
int3
and
xchg
add
ss
je
aaa
xchg
lahf
and
mov
pop
stos
and
jae
notl
je
xchg
pop
ret
in
mov
mov
xor
stos
orl
cmp
js
pop
aam
fcoml
outsl
inc
sub
ja
rcl
pop
mov
sahf
pop
jbe
mov
flds
cmp
and
es
out
inc
scas
sbb
xor
fisubl
push
test
pusha
or
cmp
push
bound
jmp
call
mov
jo
fistpl
nop
adc
and
negb
ret
cmc
imul
cli
inc
jl
js
pusha
daa
xchg
ljmp
add
mov
cmc
cmp
stos
and
mov
jg
dec
aaa
enter
movsb
fs
mov
jb
stos
ret
movsl
mov
call
mov
lret
xchg
mov
add
inc
popa
mov
in
xchg
xor
dec
xor
sub
je
loope
cld
fs
add
clc
out
dec
bound
xchg
xchg
jo
stos
xchg
ret
and
add
mov
orb
mov
dec
fistps
jae
add
ret
cmpb
mov
lds
jl
ja
test
cmp
loope
int3
add
pop
dec
jmp
test
pop
dec
push
xchg
daa
dec
add
dec
insb
cld
or
pop
ljmp
jbe
xor
notb
lcall
ret
push
fst
imul
cmpsl
bound
out
lea
aam
test
add
fdivrl
add
or
pushf
aam
and
push
lea
loopne
sbb
push
push
aam
jne
shrb
inc
fcmovnb
xchg
mov
and
adc
sbb
icebp
or
xchg
inc
push
fidivs
mov
pop
hlt
cld
in
push
pop
scas
xor
mov
jmp
mov
sub
fists
out
aaa
addb
mov
cmpsb
push
push
rcrb
in
lret
filds
or
call
jne
xchg
lahf
mov
loope
aas
sub
lcall
fdiv
push
add
mov
push
ret
sbb
loop
pop
pop
jl
mov
les
fcmovu
ret
lock
jl
adc
push
fists
enter
and
inc
repnz
jg
sbb
movl
sbb
or
mov
jge
fs
xchg
iret
adc
or
fs
insb
fwait
cwtl
jo
pop
mov
cld
insb
gs
push
dec
or
sbb
jbe
pop
xchg
fcompl
ret
jp
jmp
arpl
or
dec
sti
incb
sub
mov
pop
xchg
mov
shrb
loope
push
gs
xor
adcb
call
pusha
and
cltd
enter
or
jp
adc
mov
push
dec
pop
fbstp
sub
adc
dec
aaa
push
lcall
daa
mov
lock
cmp
clc
mov
scas
clc
mov
add
cwtl
mov
inc
dec
aas
and
sahf
pcmpgtd
std
aas
pop
mov
pop
aam
fcoml
jbe
addr16
mov
mov
cmpsb
dec
push
outsb
roll
je
sub
outsl
pop
mov
decl
cld
inc
faddl
stos
push
call
lods
jne
stos
clc
push
push
je
hlt
pop
lahf
add
mov
ficoml
jb
imull
nop
jns
mov
mov
push
mov
mov
adc
jmp
jg
inc
ret
mov
pop
cld
outsb
push
loopne
and
je
and
stos
dec
dec
popa
mov
pop
insl
xor
aad
adc
jbe
cld
pop
hlt
mov
pop
cmp
ds
aas
xchg
std
test
jne
add
or
sbb
out
cmpsl
mov
movsb
jbe
sarb
pop
mov
pop
test
pop
mov
mov
inc
movl
rolb
mov
push
xor
sub
aaa
incl
lret
or
int3
jmp
enter
mov
insb
mov
sub
push
pusha
xchg
jp
in
or
in
mov
test
adc
mov
sbb
xor
hlt
lahf
mov
add
sarb
cli
int3
add
jl
or
jle
jns
mov
scas
cli
push
inc
fs
xchg
test
cld
jo
pop
fdivr
sahf
hlt
pop
call
pop
push
jle
add
divb
sub
mov
je
pop
loopne
mov
enter
cmc
aaa
jb
jb
xor
mov
in
jo
cmp
xchg
test
insb
push
mov
xor
mov
mov
mov
xchg
imul
add
sti
call
int
lock
cmpsb
jp
or
decl
mov
pop
cmpsl
popa
enter
mul
sbb
dec
xor
push
add
inc
add
cmp
push
or
adc
pop
jns
sbb
push
pop
mov
clc
aad
xchg
cli
jg
dec
mov
into
scas
jg
addb
cmp
fbld
mov
dec
pop
ljmp
xor
mov
inc
nop
add
lret
sahf
adc
xchg
and
scas
jno
pop
adc
ret
mov
aam
cld
add
jnp
daa
pop
xchg
pop
and
mov
lret
lcall
mov
mov
sub
out
mov
inc
lahf
dec
xchg
testl
cmp
jmp
mov
insb
jo
sbb
sahf
enter
push
push
call
xchg
call
les
testl
pop
int3
lcall
insb
sub
mov
mov
std
ljmp
ds
jecxz
add
adc
sub
loope
pop
fmull
negl
inc
das
mov
lret
fwait
add
sbb
cmpsb
scas
movsl
inc
mov
sub
or
ficomps
push
mov
in
or
push
xchg
out
mov
sbb
jnp
mov
lock
ds
or
popw
aas
cli
jbe
imul
inc
mov
out
fmul
cld
dec
rorl
sbb
ficoms
adc
notb
add
xor
push
cmp
or
leave
push
lods
cmp
add
push
or
fdivs
test
imulb
int3
xor
sub
mov
stos
push
ljmp
shrl
or
adcb
inc
inc
adc
sub
sar
dec
mov
sub
movsb
sub
rcr
shr
sti
test
cmp
xor
icebp
nop
inc
push
push
rcll
pusha
inc
jge
addr16
aam
push
sbb
mov
dec
mov
sub
mov
mov
pop
sbb
scas
hlt
push
inc
call
mov
push
bound
test
les
rcll
push
test
movsl
gs
sbb
call
or
daa
movsl
cmc
inc
and
pop
lcall
fdivr
push
cmp
dec
dec
icebp
outsb
push
xor
and
incl
les
xchg
nop
roll
xchg
and
orb
and
insb
inc
or
xchg
in
dec
addl
sub
add
jge
mov
leave
cmpsl
outsb
pop
loopne
cmp
das
clc
fcomip
cmp
test
add
or
xchg
mov
xchg
sub
dec
dec
xor
pop
lock
sub
mov
and
jo
mov
ljmp
fwait
mov
mov
inc
les
std
jb
adc
adc
push
or
push
in
and
shlb
and
jge
int
xor
sbb
sub
xchg
call
push
in
jp
sbb
add
sub
outsl
cli
mov
dec
adc
or
push
adc
lcall
test
add
ljmp
cmpsl
xchg
xor
js
cmp
incb
fs
idivl
daa
rorl
add
lcall
jmp
sub
rorl
add
xchg
ds
fidivrs
daa
rclb
imul
dec
cmp
lds
sbb
xor
rcrl
test
and
cmp
lahf
push
leave
loopne
push
clc
je
xchg
enter
xorb
incl
add
in
notb
push
inc
or
fcmovnb
mov
rolb
fs
ret
mov
pop
mov
add
adc
aad
test
lock
clc
cmp
lods
mov
shrb
inc
sub
and
arpl
shrb
xchg
movsl
loope
mov
in
jg
int
rcl
add
mov
cmp
cld
and
insb
add
sub
ret
popl
cmp
popl
lea
add
inc
fsts
iret
push
pop
das
mov
outsl
adc
pusha
jg
mov
and
cltd
pop
push
or
pushl
xchg
xchg
fucompp
fimull
les
incl
xor
pop
loope
mov
repnz
xchg
gs
add
push
aam
dec
inc
aam
cmc
push
jecxz
or
push
test
or
cltd
sbb
clc
and
or
out
mov
xor
mov
pop
xor
push
inc
pop
or
mov
xor
push
subb
aas
ljmp
add
push
loopne
testl
mov
ljmp
std
push
and
outsb
add
clc
mov
dec
ss
js
std
sahf
loopne
shrl
cli
adc
pusha
outsl
adc
loopne
push
inc
clc
aaa
loopne
pushf
fisubrs
xor
adc
mov
xchg
and
das
loope
sbb
pop
push
mov
xor
push
test
mov
fisubrs
inc
sub
mov
pop
cmp
lahf
mov
icebp
out
mov
mov
sti
inc
dec
cmpsl
out
or
outsb
inc
clc
xchg
pop
push
xor
dec
or
mov
and
repnz
jmp
aaa
rolb
add
lods
jne
sbb
ficompl
or
and
out
xchg
lods
fdivp
cli
add
cmpsb
pop
mov
cmp
adc
mov
test
or
pop
imul
xchg
adc
mov
int
pop
loopne
adc
sbb
sahf
jb
xlat
shll
sub
mov
jo
or
cs
inc
add
mov
sti
xchg
xchg
add
xchg
lock
cld
mov
jno
xor
mov
out
xor
clc
sub
ret
sub
enter
mov
cmpsb
dec
push
xchg
insb
xchg
or
push
dec
add
imull
cmp
lds
mov
pushf
jbe
adc
andb
jbe
cltd
adc
sbb
das
cli
jbe
ret
xchg
pusha
mov
cltd
push
add
lret
mov
push
in
aas
outsb
mov
pop
mov
pushf
icebp
sbb
cmp
fs
mov
fmul
aam
add
js
pushl
xchg
jne
pop
fstpl
add
rcl
pop
cmp
fisttps
add
adc
icebp
and
clc
mov
sub
or
and
dec
mov
inc
jg
lret
cli
sub
icebp
pop
push
mov
push
add
neg
movsl
jne
cmp
pop
test
xor
and
xchg
jg
and
cmp
pop
add
stos
add
cli
popf
xor
stc
popf
ret
les
adc
lds
mov
and
sub
ss
cmp
pop
cli
lods
xchg
fistpll
gs
ljmp
fisubrl
icebp
sbbb
jmp
inc
aad
dec
jecxz
test
mov
inc
sub
mov
cmp
jbe
mov
push
inc
loopne
mov
push
mov
je
inc
fsubrs
orl
repz
inc
in
out
cmpsb
mov
jb
pop
mov
in
jle
enterw
hlt
mov
loop
jge
lret
inc
xchg
xchg
mov
dec
mov
push
add
add
inc
mov
adc
push
mov
leave
movsb
xchg
js
nop
sahf
push
fwait
cmp
pop
sbb
cmp
dec
icebp
fimull
rorb
cmpsb
and
add
jns
inc
hlt
dec
sub
insb
add
and
cld
call
add
daa
or
rep
sub
ret
aad
inc
incl
or
icebp
jb
mov
adc
ss
mov
ja
rorb
jne
ret
dec
insb
adc
outsl
test
iret
pusha
xchg
fmuls
and
add
dec
jbe
or
inc
mov
push
jno
fstpt
xchg
pop
adc
jne
lcall
cld
les
add
sti
dec
bound
test
scas
cs
or
push
sbb
mov
xor
icebp
lcall
repnz
sbb
add
cli
pop
pop
add
mov
lock
sub
pop
add
push
roll
push
mov
aaa
jmp
adc
push
push
jne
pop
les
inc
xchg
repz
js
xchg
add
js
gs
mov
or
dec
inc
mov
cmp
es
pop
fimuls
adc
inc
test
mov
xor
push
add
push
int
test
loope
inc
stos
ds
jnp
ljmp
add
mov
mov
test
mov
movsb
or
fadds
adc
pop
push
punpckhbw
push
jle
inc
outsb
clc
jg
stos
mov
je
in
push
sahf
add
xor
inc
jge
inc
jo
adc
push
mov
push
jo
mov
jp
cmp
adc
add
out
frstor
mov
test
scas
push
std
mov
cmp
cmp
dec
aaa
insb
pop
hlt
hlt
das
dec
inc
in
or
mov
mov
hlt
notb
or
icebp
jle
xchg
je
popw
fildl
xor
aas
add
add
jmp
cld
pop
loopne
fbld
scas
xchg
dec
mov
dec
push
icebp
ret
sbb
inc
jl
cli
jbe
call
pop
hlt
out
rolb
pop
mov
jmp
ja
xchg
jp
rorb
faddl
xchg
sbb
scas
push
aaa
inc
mov
nop
dec
add
movb
cmp
push
push
popa
addb
das
mov
xchg
xchg
push
inc
out
push
jnp
bound
sbb
mov
push
inc
mov
inc
xlat
xor
xchg
outsb
adc
enter
xchg
sti
mov
adc
inc
pop
test
sub
mov
ret
push
xchg
cmpsl
loopne
sahf
xor
stc
aas
mov
cmp
popf
sub
add
mov
icebp
outsl
fdivs
adcb
add
loope
adc
rcr
xor
and
xchg
or
call
or
stc
clc
xor
mov
rcr
add
arpl
adc
pop
inc
xchg
fists
jg
notb
jle
mov
jb
inc
lods
xchg
and
movl
cwtl
in
mov
outsb
adc
jg
jo
or
xlat
test
out
rclb
stos
or
nop
pop
lods
mov
xor
mov
loop
cld
mov
cmp
add
mov
mov
daa
nop
test
cli
mov
clc
cmp
fidivrl
rorb
call
add
pop
jg
aam
lcall
xchg
clc
nop
add
xorb
iret
test
push
pop
or
ljmp
lcall
fucomip
xor
stos
xchg
lret
lock
aas
pop
add
sbb
es
incl
rolb
pushf
xchg
mov
lahf
ds
in
icebp
cmp
rcrb
test
icebp
mov
pop
call
pop
mov
fcmovnbe
mov
add
into
cmp
aaa
outsb
xor
lods
or
inc
pop
out
pusha
nop
jae
in
jmp
and
inc
mov
and
int
cld
cmp
das
test
lock
decl
sbb
or
incl
add
jecxz
mov
ldmxcsr
jg
icebp
call
jb
mov
loop
cmp
insl
repz
cmp
xor
adc
inc
inc
es
popa
nop
inc
stos
outsl
push
pop
add
mov
inc
bound
cmp
out
ljmp
movsl
shll
inc
xchg
and
rorb
aaa
aam
shr
daa
ljmp
adc
push
div
js,pn
dec
repz
or
add
mov
or
insb
mov
mov
push
cmpsl
es
ret
jmp
xchg
ds
mov
xorb
push
mov
shll
xchg
jbe
cmp
xor
jno
insl
cli
add
ret
fdivrl
xchg
pop
push
idivl
inc
pop
xor
add
mov
mov
ds
sahf
ds
stos
scas
xchg
xchg
sub
clc
aas
lea
add
mov
ss
jne
adc
imul
fcoms
push
mov
and
arpl
xchg
std
scas
out
scas
add
xor
adc
jbe
sbb
xor
sbb
adc
mov
add
fisubs
or
xor
mov
push
pop
mov
adc
pop
adc
jp
pop
decl
out
mov
xorb
dec
lahf
out
sub
inc
xor
movl
or
icebp
add
into
inc
mov
aaa
cmp
inc
adc
js
pop
mov
scas
add
sbbb
or
das
loope
int
push
add
es
xchg
test
js
mov
sbb
aaa
cld
insb
mov
aaa
sahf
mov
push
mov
xor
add
inc
cwtl
out
dec
movsb
faddp
or
inc
push
push
sub
mov
xchg
cs
in
jle
rcrb
pop
mov
rorb
hlt
divl
mov
ja
adc
and
jg
insb
sub
cli
sbb
pop
shll
in
movsb
mov
cmp
rcr
leave
jo
add
jge
or
ret
into
or
mov
lds
imul
mov
mov
les
or
cld
or
dec
je
fists
shll
dec
scas
adc
sbb
nop
inc
push
add
push
and
inc
inc
cmp
mov
push
adc
push
or
pusha
add
loopne
mov
xchg
add
scas
clc
mov
leave
adc
xchg
inc
test
mov
mov
add
mulb
outsb
aaa
out
bound
lds
mov
and
and
mov
popf
jb
loopne
sbb
cmp
hlt
mov
xchg
xchg
xchg
dec
push
inc
std
je
insb
cmp
xchg
fwait
int3
test
jb
shll
jl
movsb
dec
ret
jb
and
jl
scas
mov
push
es
jns
pop
adc
adc
int3
lret
test
xchg
loop
jne
shl
mov
hlt
and
clc
ja
mov
and
popf
sbb
push
into
push
pop
dec
mov
fwait
lcall
or
push
push
jo
lods
jae
mov
cli
sbb
jnp
fiadds
jo
push
loope
mov
dec
sbb
test
inc
into
in
xchg
jp
sub
adc
decb
dec
push
push
cmp
push
adc
js
scas
and
out
jg
ljmp
xor
movsb
pop
filds
mov
xor
addl
xchg
orb
pop
xchg
call
mov
xor
inc
cmp
lahf
add
ljmp
test
lods
fsubs
mov
int3
popf
dec
cmp
push
jle
rcrb
mov
aad
mov
xor
mov
xor
js
pop
std
cmp
and
mov
subl
test
incl
out
add
xchg
cli
mov
in
jbe
ficomps
xchg
add
push
inc
lcall
xlat
sbb
roll
filds
push
sub
mov
pop
push
call
mov
xor
xor
xchg
cli
pop
or
cwtl
sub
pop
mov
aaa
sbb
mov
lret
inc
push
sub
jnp
out
sub
xchg
shll
lods
fcoml
push
or
cmp
dec
std
mov
and
bound
mull
call
mov
mov
mov
dec
jp
adc
push
mov
xchg
lcall
push
jb
mov
mov
fwait
mov
jg
adc
add
adc
test
sbb
call
sub
popf
ljmp
pusha
adc
das
pushf
jl
insl
scas
xor
sbb
cltd
lock
lcall
push
push
adc
pop
ret
test
add
xor
arpl
lcall
pop
lahf
cmp
lds
inc
sbb
addl
jg
and
inc
lret
popf
mov
pop
fbstp
call
mov
mov
sbb
js
call
cwtl
fucom
push
or
sti
jp
cltd
dec
repnz
mov
fs
arpl
lock
pop
sub
leave
test
popf
aaa
xchg
in
testl
ja
sti
mov
pop
clc
and
xchg
sub
stos
push
aaa
jne
negb
filds
es
sub
push
mov
or
inc
xor
stos
xorb
inc
outsl
adcb
adc
add
scas
dec
dec
ja
arpl
jp
mov
push
push
inc
sbb
aam
cwtl
or
add
std
outsl
push
icebp
cltd
cmc
inc
adc
xchg
jmp
test
mov
repnz
hlt
or
mov
add
lods
adc
adc
push
mov
mov
ljmp
mov
sbb
xchg
pushf
cmp
data16
jae
fs
test
dec
sub
push
cmp
pop
iret
mulb
pop
into
cmpsb
shll
into
cld
test
pop
fs
mov
int
push
push
jge
mov
add
inc
arpl
inc
and
aas
shrb
repz
cli
xor
mov
cmp
jo
sbb
xchg
shrl
xchg
orl
and
outsb
mov
add
lock
cmp
aam
sbb
fstpl
mov
imul
or
xor
je
inc
clc
pop
clc
mov
aaa
dec
mov
pop
inc
icebp
lods
sbb
data16
hlt
call
push
out
cmp
sub
add
push
aas
popa
ss
xchg
mov
ja
jne
icebp
cli
stos
fisubrl
dec
xchg
repnz
dec
pop
test
add
mov
xchg
sub
push
ss
jb
fisubs
insb
and
adc
mov
push
fs
insb
or
lods
pushl
sub
sub
add
adc
rcl
lock
xor
clc
xchg
push
sbb
pop
test
mov
inc
sbb
inc
xor
inc
push
sahf
inc
into
subl
out
dec
or
mov
shr
mov
mov
faddl
sar
sub
xchg
mov
ljmp
loopne
or
dec
push
loopne
nop
mov
aaa
lock
test
pop
jg
shlb
data16
sbb
jl
sbb
xchg
dec
loope
nop
fwait
imul
jo
mov
xchg
aaa
cld
push
fcoms
or
and
xchg
arpl
call
mov
cmp
add
lcall
or
xlat
fistps
push
sbb
sub
inc
xchg
popa
and
xchg
mov
dec
es
adc
shrb
add
cwtl
xlat
xchg
xchg
loop
pop
cmc
fwait
sbb
sub
jae
ret
add
jge
test
fcomp
dec
pusha
pop
add
jecxz
mov
or
adc
fwait
loop
inc
aaa
add
inc
pop
dec
je
cmp
repnz
jo
dec
mov
add
adc
andb
inc
pushl
mov
adc
or
inc
mov
xchg
sub
ss
das
ret
mov
fisttps
or
adc
cli
mov
xchg
add
push
xor
mov
cld
pop
mov
mov
and
push
cmpl
je
sbb
rcrl
rolb
xchg
rcrb
add
les
fsts
lods
jmp
incl
jo
aaa
jo
cmpsl
addb
push
mov
test
mov
addr16
lahf
mov
loopne
cmpsl
sbbb
pushl
hlt
out
mov
rolb
fimull
xchg
lea
adc
pop
add
lods
imul
test
mov
ret
cmp
gs
push
aam
and
pop
and
mov
loopne
test
mov
cmp
cmp
mov
mov
sub
xor
push
nop
and
inc
add
push
mov
inc
aam
enter
inc
movsl
lds
imul
inc
clc
inc
out
aam
cld
pusha
cltd
orl
test
xchg
inc
hlt
pop
daa
fdivrl
outsb
push
jb
pop
push
shlb
or
jo
inc
ljmp
mov
outsl
cmp
gs
shrb
xor
xchg
sti
idivl
dec
dec
sub
inc
mov
push
cmp
in
stos
iret
lcall
sub
mov
mov
clc
adc
sbb
add
es
mov
dec
movsl
dec
movsb
inc
mov
lods
sahf
iret
mov
or
adc
shr
mov
xor
loop
test
popf
fsubrs
inc
fs
andb
in
inc
test
fbld
jbe
xchg
add
cwtl
jo
arpl
fisubl
xlat
inc
mov
inc
aad
xor
orl
push
pusha
not
scas
ss
and
subl
fucomi
mov
das
inc
shlb
out
bound
pop
shr
cltd
lock
lods
or
push
push
xchg
movsb
jl
jns
pop
cld
clc
cld
mov
sbb
xor
scas
push
pusha
fdivrp
outsb
incl
dec
test
decl
push
cmp
mov
int3
xchg
jbe
xor
jnp
adc
mov
mov
pop
rcrl
jmp
inc
cmp
lcall
test
xor
mov
ljmp
push
cmp
lahf
and
xor
and
push
inc
mov
add
jbe
outsb
ljmp
hlt
cmp
xor
stos
sbb
test
outsb
add
pop
or
xchg
pushf
add
push
cld
pop
icebp
decl
iret
out
cmp
ljmp
test
sarl
aaa
cld
dec
or
inc
push
fldcw
sub
decl
adc
sbb
and
lock
icebp
cwtl
and
test
mov
add
add
test
cld
mov
pop
mov
sub
sub
iret
jb
dec
mov
mov
pushl
xchg
mov
cli
xchg
dec
xor
stos
nop
aaa
pop
mov
or
shlb
in
push
push
xor
sub
ret
xchg
cmp
dec
nop
xchg
inc
sti
fsubs
cmp
lock
inc
lcall
jne
fwait
ljmp
and
addr16
add
inc
incl
or
les
je
mov
scas
cli
int
stos
std
add
es
cmc
icebp
rcrb
inc
pushf
loope
mov
lea
mov
in
cmp
mov
movsb
ljmp
mov
scas
mov
int
stc
dec
adc
jae
stc
add
mov
imul
cmp
pop
loopne
pusha
mov
push
or
cmp
loop
sbb
xlat
daa
ljmp
jo
jne
add
ljmp
inc
dec
and
and
or
pop
int3
mov
mov
mov
int3
push
jp
inc
lock
xchg
add
push
jle
push
xor
push
adc
fnsave
addr16
mov
adc
sbb
nop
or
inc
xor
mov
inc
fistpl
push
hlt
mov
or
cli
or
gs
mov
add
cltd
and
stos
outsb
push
jb
add
push
add
jo
mov
mov
inc
sbb
out
adc
and
lcall
pop
push
in
jge
ds
aaa
push
or
out
cmp
rorl
or
mov
push
mov
loop
push
pop
sbb
outsb
mov
mov
push
shll
push
or
dec
rolb
aam
cmp
andl
in
push
pop
sti
bound
mov
xor
or
in
adc
scas
stc
sbb
cwtl
cmp
loopne
mov
sub
call
fcmovb
les
or
push
negl
das
mov
add
xor
xchg
push
mov
cmp
fiaddl
frstor
daa
mov
sbb
xchg
and
and
and
push
fcmove
mov
pop
push
adc
mov
jg
push
push
dec
pop
mov
cmp
in
sbb
ds
cmc
xchg
and
mov
jge
push
jae
pop
mov
push
std
pop
jl
mov
ljmp
es
dec
mov
ret
shlb
adc
add
into
cmp
aaa
mov
mov
pushf
jle
lods
add
xchg
test
push
insb
cmp
jo
je
ror
mov
cmp
add
in
push
pop
push
pop
fnstcw
je
rol
leave
orl
push
or
xchg
mov
imul
jb
adc
movl
and
xchg
fiadds
pop
in
cmp
xchg
sbb
lods
pop
sbb
push
shrl
lret
test
push
mov
int
mov
add
cli
mov
fwait
popa
jae
fs
xorb
cmp
push
xchg
icebp
call
add
xor
adcl
insl
pushf
addb
inc
xchg
xor
xor
jmp
test
mov
xor
mov
adc
push
mov
or
add
rclb
push
rcl
xor
push
pop
bound
out
loopne
dec
mov
xchg
mov
ljmp
daa
add
icebp
icebp
mov
dec
nop
test
inc
or
cmp
orb
mov
pushf
xchg
movsb
shlb
jmp
insb
sub
dec
ret
inc
dec
aad
and
mov
call
dec
cmp
xor
jge
cmpsb
mov
sub
add
xor
add
pop
lock
clc
mov
push
push
jmp
cltd
mov
pop
rorb
std
lcall
imul
shll
roll
gs
js
add
outsb
mov
enter
xchg
mov
inc
into
rcl
subb
ja
dec
mov
mov
cmp
xchg
loop
mov
push
sbb
fistpll
pop
mov
push
ficoml
stos
dec
adc
pushf
es
inc
sub
dec
lds
mov
xchg
xor
test
stos
arpl
imul
adc
xor
cmc
sti
push
cld
and
lcall
xor
hlt
in
imul
lcall
scas
adc
push
cld
and
inc
and
add
adc
xor
outsb
rcrb
call
js
push
sbb
mov
into
mov
stos
fimull
fdivrl
xchg
push
mov
xchg
push
sbb
movsl
movsb
push
cld
dec
push
pop
gs
iret
je
inc
jl
scas
push
xor
sbb
jle
push
mov
ret
xlat
mov
test
cld
out
gs
xchg
pusha
mov
scas
sbb
xlat
jge
jecxz
scas
sbb
decl
cmc
lcall
jno
push
cwtl
stos
xor
pop
jne
and
push
cmp
ret
adc
push
dec
mov
pushl
insb
gs
loop
or
or
nop
hlt
out
hlt
jl
or
ds
push
call
pop
loop
mov
int3
mov
fwait
or
sbbl
jne
aad
loope
add
mov
ret
mov
sub
jae
in
add
sbb
mov
scas
movsl
aas
push
mov
sbb
invlpg
xchg
into
movl
sub
arpl
call
cltd
lods
femms
ret
add
push
jl
pop
mov
or
lock
push
test
loopne
mov
mov
add
mov
in
fwait
dec
in
enter
imul
sub
test
jmp
dec
fdivrl
mov
data16
addb
setp
push
daa
nop
push
pop
mov
xchg
mov
add
data16
inc
dec
iret
jbe
push
jl
pop
push
push
sarb
lock
cmpb
in
push
scas
jne
int
int
test
scas
mov
insb
add
mov
xor
shrb
push
cmc
and
add
inc
or
xchg
js
ljmp
xchg
add
xchg
ficomps
out
fmul
fs
inc
xor
add
mov
and
dec
fwait
test
xor
add
lcall
sbb
in
fcoml
cs
cmpsl
or
popf
push
cs
xchg
mov
loopne
add
xchg
or
out
incl
and
roll
cmp
cli
and
mov
repz
pop
es
push
add
addr16
es
pushf
pop
adc
or
sub
push
popf
mov
aam
jbe
cmpsl
ljmp
jnp
data16
push
lahf
or
mov
mov
sub
shl
pop
ret
pop
mov
mov
lds
pop
repz
push
and
mov
jge
outsb
mov
mov
repz
out
and
pop
jp
sbb
inc
xchg
aam
ret
jbe
mov
xor
xlat
fs
pop
xchg
mov
adcb
mov
es
fsts
cld
orb
inc
cmp
aas
jb
sahf
and
gs
cld
push
add
mov
cmpb
cmp
mov
mov
loopne
cli
int3
fdiv
imul
sub
adc
loop
sub
cmpsb
and
jle
add
popa
xchg
fwait
std
lds
add
dec
sub
aas
mov
jg
hlt
mov
and
sbb
imul
push
sub
pop
cmp
mov
loope
push
lret
loop
pop
sbb
sub
loopne
mov
pop
js
inc
sbb
test
sarb
add
cld
push
mov
mov
jbe
jo
xor
arpl
mov
scas
cmc
sbb
cmp
and
addr16
mov
scas
addb
dec
add
int3
rcrb
lcall
sub
and
lea
lret
mov
out
aam
data16
xchg
test
push
aas
push
iret
mov
cmp
inc
cmpl
pop
imulb
ficompl
pop
adc
mov
lock
loop
mov
xor
es
inc
jnp
pop
and
mov
ret
mov
inc
inc
mov
icebp
mov
xchg
xchg
xor
js
mov
add
inc
pop
push
fnsave
mov
notb
sub
loopne
mov
leave
inc
inc
lea
mov
jno
jl
and
clc
roll
je
nop
inc
clc
xor
jp
pop
aas
dec
addr16
inc
stos
push
cwtl
xchg
stos
sbb
adc
addr16
sub
in
call
push
sahf
pop
pop
mov
aam
and
mov
lock
insl
xor
ret
lret
enter
cmpb
cli
pushl
dec
dec
and
mov
cmp
loopne
xchg
jg
movsl
fldcw
cmp
push
cmp
sub
subb
push
xchg
mov
adc
decl
clc
pop
fdiv
pusha
shll
sbb
adc
out
adc
mov
inc
pop
pushl
inc
jmp
push
mov
aam
sub
sub
dec
jg
ret
sbb
mov
test
mov
add
xchg
mov
cmp
jg
cmc
ljmp
je
cmp
sub
or
sbb
mov
std
ficoml
jle
and
sub
out
rcll
push
cmpsl
jo
test
outsb
adc
inc
iret
sarb
pushl
mov
add
leave
jp
mov
fsts
adc
xchg
mov
push
and
cmpl
push
jns
inc
sub
movsl
jnp
aaa
inc
stos
xchg
push
cltd
incl
push
mov
popa
in
fcoml
cmp
stos
rcrb
clc
je
pop
movsl
xchg
and
fcom
in
clc
adc
aad
hlt
mov
ja
loope
leave
sbb
outsl
pushl
ljmp
cld
adc
cmp
test
or
cmpsl
out
jg
js
mov
pushf
and
fs
sbb
inc
ds
aaa
jecxz
xor
daa
pop
pop
and
ljmp
add
insb
sbb
mov
fsubs
int
and
jg,pn
cwtl
mov
sbb
loopne
dec
pop
xchg
cmp
fcomip
inc
adc
adc
dec
loope
jmp
pushfw
sub
adc
dec
inc
je
aad
push
test
xchg
sbb
clc
movsb
sbbl
xlat
ret
cmpsb
sbb
in
hlt
mov
add
pop
sti
cmp
shlb
pop
add
adc
mov
sbb
or
jmp
shlb
call
xor
pop
push
jge
mov
inc
mov
adc
and
out
mov
add
imul
or
fistpll
lea
cli
je
xchg
lret
sub
icebp
mov
mov
mov
mov
inc
daa
or
sub
filds
mov
sub
js
mov
sbb
pop
in
pop
and
loopne
jge
inc
jecxz
adc
dec
push
rol
or
scas
cli
cmp
mov
cmpsl
test
mov
add
add
sbb
mov
lea
cmp
les
dec
stos
and
stos
das
adc
imul
out
les
insb
dec
jmp
push
xchg
cmp
cmp
scas
filds
mov
scas
add
push
inc
and
push
mov
clc
aaa
inc
sbbb
cmp
add
outsl
sbb
mov
lock
xor
and
dec
movl
xchg
test
or
hlt
lds
and
sahf
mov
and
xchg
push
mov
es
enter
xor
dec
pop
sub
out
jp
xchg
adc
lds
in
inc
dec
nop
xor
lods
sbb
cmpsb
ja
push
push
push
jo
jb
sub
cs
sbb
mov
xchg
xor
mov
inc
mov
mov
orb
cmp
push
jle
lock
mov
adc
nop
sbb
addr16
mov
ljmp
dec
mov
mov
sbb
push
or
add
pop
lcall
xor
and
mov
insb
add
icebp
jbe
xor
sbb
dec
data16
ficomps
addr16
out
in
or
ss
adc
cmpsb
rorb
mov
rep
aas
cmp
xchg
or
mov
sub
mov
add
test
test
jno
mov
xor
adc
les
add
jno
and
pop
movsb
push
adc
dec
ret
xchg
dec
mov
mov
push
xor
leave
xchg
movsl
mov
stos
fsub
test
inc
divl
decb
ds
push
and
jns
loope
dec
add
push
adc
dec
adc
mov
lock
xor
loopne
jl
aam
in
cs
std
push
lahf
lret
mov
ja
add
mov
push
mov
cmp
and
fwait
mov
or
xor
out
adc
xor
js
pop
loope
sbb
orb
pusha
andl
mov
push
inc
sti
shlb
imul
xor
popl
jno
les
or
or
sub
leave
sbbb
loop,pn
xlat
ljmp
das
lahf
mov
loop
sbb
pop
fstps
daa
push
gs
xchg
jge
enter
sub
fnstcw
cmp
pop
clc
jb
and
out
testb
movsl
cmp
cmp
add
cmp
mov
js
mov
mov
adc
repnz
dec
sarl
pop
test
mov
and
add
push
subb
jne
sbb
lret
out
push
shl
push
hlt
inc
mov
ljmp
adc
xor
repnz
bound
cwtl
cwtl
shlb
jne
iret
pop
jp
stos
fsubl
cmp
sbb
or
mov
inc
mov
out
daa
add
out
adc
xchg
xchg
inc
add
scas
mov
popa
mov
scas
cmp
inc
popf
mov
add
adc
test
bound
je
idiv
adc
push
and
pop
and
rorb
lcall
add
and
jo
clc
loopne,pn
in
sbb
movsb
in
dec
add
cmp
in
mov
imul
push
mov
rcrb
mov
hlt
xor
mov
iret
aam
aam
dec
sti
fwait
orb
mov
sub
inc
cmp
sub
lock
aas
pop
mov
push
cli
inc
sub
pop
inc
fisttpll
mov
sbb
lods
andb
pop
and
aad
daa
jbe
in
or
in
inc
mov
sbbb
add
fisubrl
adc
mov
pop
pop
cmc
push
dec
cwtl
out
bound
cmc
mov
cmp
dec
test
pop
clc
and
movsl
or
jns
test
sbb
stos
mov
ret
push
or
sbb
mov
mov
xchg
push
pushl
repz
arpl
rcl
addr16
inc
xlat
push
mov
sub
jmp
adc
sub
and
adc
ljmp
pushf
cmpsl
adc
mov
inc
or
movsb
subb
xor
mov
cltd
jno
add
decl
pop
shrb
jl
pop
cmp
mov
and
fcoms
cmp
repnz
ficoms
out
inc
sub
fiaddl
lds
aad
into
jge
adc
push
inc
adc
push
jle
inc
std
push
je
pushf
addr16
pop
test
mov
or
out
ss
inc
lret
push
inc
mov
ja
mov
jl
xor
dec
ret
mov
movsb
push
lock
mov
xchg
aas
mov
xchg
cmp
lods
jp
sub
push
pop
pop
push
loopne
xchg
fdivrl
xchg
xchg
inc
fs
inc
mov
xsaveopt
and
cmp
mov
pusha
ret
or
lods
dec
add
sub
pop
test
out
es
mov
hlt
jecxz
jmp
xchg
adc
divb
mov
cld
stos
mov
aad
jo
add
cmpsb
jo
and
adc
incb
pushw
add
in
adc
adcb
push
sbb
inc
shrl
xchg
insb
stos
imul
cmp
les
pop
cmp
and
mov
loope
xchg
adc
je
cmp
and
sbb
stos
inc
jl
sub
test
mov
inc
daa
icebp
jg
in
xchg
push
loope
roll
pop
in
and
jo
ja
adc
add
mov
inc
cmpl
jne
inc
and
test
sub
xlat
in
mov
add
scas
xchg
inc
or
inc
add
data16
fdivrp
mov
sub
push
popa
xor
xlat
pop
dec
fdivrp
add
mov
or
sub
icebp
push
mov
mov
inc
clc
in
cmp
push
pop
xor
aas
mov
xchg
ljmp
pusha
push
push
out
pop
mov
aaa
insb
clc
jecxz
cmp
sbb
or
push
leave
push
jge
inc
xchg
test
test
mov
ret
push
sub
xor
push
in
add
int
xchg
in
pop
std
out
push
sahf
add
loop
xorb
arpl
jnp
ret
xlat
or
push
mov
repnz
jg
sbb
pushf
sbb
pop
cmp
and
mov
adc
sbb
inc
add
xchg
jle
sub
xchg
fistps
je
test
sub
jl
mov
dec
adc
dec
pop
aam
sbb
mov
sub
sbb
cmp
repz
cli
push
adc
or
lds
mov
or
pop
or
jle
mov
cmp
xor
push
pop
or
jbe
repnz
adc
push
add
das
mov
pop
int3
mov
adc
daa
push
and
cmp
mov
add
mov
pusha
adc
sar
mov
push
ds
push
testb
mov
fmull
scas
pusha
xchg
cmp
dec
pop
push
push
pop
pop
sub
or
mov
xchg
fcmovbe
sub
fldl
loope
mov
inc
sbb
mov
pop
dec
sub
sbb
push
clc
inc
sbb
add
inc
aaa
jl
lahf
xor
inc
sbb
sarb
mov
lret
repnz
sbb
and
mov
loop
cmpsb
mov
mov
sbb
push
loopne
and
aad
in
into
push
sbb
test
sub
or
and
clc
xchg
dec
cwtl
jnp
addr16
mov
mov
mov
loope
pusha
insb
push
sub
mov
movsl
cmc
xor
xchg
scas
xchg
add
cmpsb
jecxz
mov
jl
dec
add
scas
bound
jno
sub
mov
pusha
ja
iret
adc
sti
scas
lret
sbb
fistl
sbb
cmp
pop
ret
mov
fs
mov
hlt
sub
jecxz
add
adc
imulb
xor
xlat
in
sbb
stos
iret
pop
sub
fisubrl
add
cmp
in
inc
xor
jmp
repnz
sbb
mov
sub
adc
test
mov
movsl
cmpsb
push
push
dec
mov
mov
orl
pusha
dec
lret
adcb
push
mov
mov
add
mov
stos
pop
mov
outsb
cmp
stos
nop
lods
mov
jecxz
cli
lock
das
test
sub
stos
add
pushf
xchg
out
and
lock
mov
movsl
les
test
push
push
xor
popa
adc
mov
cmpsb
outsl
das
ret
aas
adc
pop
jb
ljmp
mov
push
sahf
loopne
aad
or
add
xchg
in
inc
ja
mov
push
sub
add
loopne
ret
lock
mov
test
dec
inc
jbe
sbb
jmp
aad
push
push
mov
mov
sbb
into
and
lock
mov
cmp
mov
cmp
jb,pn
jle
cltd
adc
inc
or
in
sub
add
icebp
xor
fbstp
je
xchg
sub
dec
ds
add
push
lods
fldt
outsl
or
mov
je
sub
add
data16
fwait
fwait
addb
add
jns
jne
roll
pushf
imul
adc
into
push
rolb
flds
cmpsb
das
cli
sub
adc
into
push
cmpsl
test
pop
or
out
push
pop
in
xchg
pop
addb
mov
sub
enter
fsts
and
inc
jl
and
add
xor
inc
fistl
adc
outsb
sarb
pusha
push
mov
ss
inc
cwtl
hlt
and
mov
pop
data16
fdivr
lahf
int
call
aaa
or
push
popf
pop
jp
subl
mov
and
std
scas
and
mulb
outsl
pop
and
rcrb
clc
pop
jmp
xchg
mov
dec
mov
xchg
add
jmp
adc
add
outsb
xchg
shlb
adc
or
dec
adc
and
loope
hlt
cmp
cmp
xor
pop
lds
repz
dec
cmp
lret
mov
cmp
pop
sbb
sbb
sub
std
out
xchg
je
shrb
pop
xchg
fdivrp
cld
pop
call
add
shll
jecxz
dec
sahf
mov
mov
cwtl
push
cmp
ret
fisubs
push
or
mov
adc
dec
jl
cmpsb
mov
sbb
adc
scas
or
inc
aad
sbb
add
es
lods
scas
ljmp
idivb
imul
mov
push
sbb
ss
inc
push
xor
xor
add
outsb
in
repnz
cltd
adc
pop
xchg
adc
imul
test
jge
cmpl
inc
mov
gs
push
push
jbe
sarb
xchg
cli
xchg
pushl
or
movsb
pop
rcll
mov
lods
repnz
int
jo
lret
mov
dec
mov
mov
daa
cmp
or
xchg
imul
dec
scas
subb
decl
add
pop
lea
push
or
out
push
sti
loopne
call
xor
js,pt
hlt
push
lods
xor
adc
es
mov
mov
jne
loope
and
inc
jg
shr
in
sub
addb
les
and
mov
adc
cli
lcall
pusha
sub
xchg
add
add
jnp
pop
popf
adc
xchg
inc
movsb
push
inc
pop
jo
jl
stos
sbb
stos
push
push
aam
rcrb
outsb
test
cmpsb
jmp
mov
pop
inc
and
dec
cmc
mov
pop
mov
mov
sbb
daa
mov
mov
fdiv
stos
int3
cltd
jo
mov
mov
lahf
js
stos
clc
dec
sbb
inc
xchg
sbb
jecxz
les
fsubrl
ret
enter
or
stos
loope
add
es
es
mov
subb
push
push
push
mov
and
mov
ljmp
hlt
in
mov
in
inc
enter
add
stos
xor
mov
ret
ds
sub
stos
fs
mov
xor
push
inc
inc
ss
and
cmc
mov
adc
sbb
sbb
mov
fbstp
mov
sbb
add
and
popf
lock
inc
xor
pop
push
cmp
push
and
pushf
fwait
sbb
cwtl
jecxz
out
shll
inc
cld
stos
mov
rcrb
sbb
call
cmp
mov
adc
jo
aam
imul
and
xor
jle
dec
push
dec
out
add
aam
iret
loopne
jmp
mov
in
mov
lds
ds
inc
hlt
lods
test
iret
dec
jl
adc
hlt
mov
xor
cmc
jnp
cmp
jbe
fadds
mov
ficompl
dec
or
out
stos
incb
mov
clc
clc
mov
jge
aad
push
and
add
call
call
inc
fs
jb
out
add
hlt
les
pop
fs
cmpsb
jl
fnstsw
sbb
cli
or
sub
jbe
cmp
push
mov
and
xor
fadds
push
push
sbb
iret
cmp
loopne
add
dec
fstps
mov
or
lret
cmp
int
add
push
cld
cmpsb
xchg
add
cltd
cmp
mov
lcall
lea
andb
test
mov
push
pop
inc
lea
pop
adc
and
and
or
pushf
or
sub
jns
sbb
sahf
daa
pop
mov
test
jo
test
and
jae
cmp
mov
cmp
add
mov
movsl
push
sbbb
mov
sahf
dec
push
mov
cmp
dec
mov
enter
adc
shrb
sar
inc
insb
dec
xor
cmp
push
mov
jnp
jge
test
pop
frstor
xorb
and
insb
pop
mov
ja
out
idivl
pop
adc
sbb
je
push
mov
cwtl
enter
mov
aad
mov
imul
add
hlt
test
inc
lock
xor
popf
test
shl
out
dec
aam
enter
orl
mov
cmp
cs
pop
cld
mov
jne
mov
or
outsb
movl
ret
stos
add
adc
seto
fcomps
pop
and
or
movsb
sbb
pusha
ss
sti
sub
dec
insb
cld
addr16
pop
push
pop
or
push
jo
sbb
cmp
pop
jmp
mov
ds
test
xchg
add
insb
push
jne
jp
shr
fsubp
insb
cmp
jle
mov
outsl
es
add
pop
in
ret
insb
test
ja
cmp
cld
dec
sbb
push
mov
or
cmp
sub
xchg
dec
add
pop
test
xchg
push
mov
cmp
xchg
push
movsl
cmpsb
jl
loop
xchg
ljmp
or
cmpsl
shrl
jge
push
fcmovbe
dec
lods
pop
mov
sahf
ret
fbstp
push
xchg
test
xlat
pop
in
xchg
ds
mov
xor
add
pop
fsubs
loopne
adc
or
faddp
stos
nop
cmp
cltd
sbb
repnz
test
push
pop
leave
ss
add
iret
das
mov
mov
or
push
pop
xchg
dec
fsts
jbe
test
sub
mov
and
mov
jecxz
jl
or
or
jmp
jge
dec
call
cmpsb
scas
xor
push
adc
lcall
dec
repz
insl
and
nop
out
inc
add
or
insl
cli
mov
push
gs
loope
add
sbb
dec
int3
bound
cmp
negb
pop
movsb
mov
in
hlt
mov
gs
pop
sub
fcmovu
jo
mov
sbb
pop
mov
inc
mov
es
push
push
into
mov
in
sub
test
fs
fcomip
dec
leave
arpl
xor
mov
cmc
ljmp
push
mov
inc
cwtl
push
into
leave
in
mov
rolb
lea
adc
imul
xorl
pop
or
pop
dec
popf
test
xor
cli
mov
xchg
fwait
push
int3
mov
lock
cmp
xor
mov
sbb
jge
push
les
lret
nop
int3
xor
lock
xchg
bound
cmp
fbld
aas
mov
mov
pop
push
adc
and
and
ret
out
sub
popa
clc
sub
std
outsb
mov
decl
add
lea
or
cmp
xchg
loope
jno
xor
in
test
and
lret
je
cmp
push
cmp
and
ljmp
jmp
cs
enter
add
jecxz
rcr
mov
mov
xchg
ret
xor
push
lret
or
add
idiv
testb
in
pop
inc
mov
ds
cmpb
clc
adc
xchg
das
inc
loop
jle
test
cmpsb
pop
jb
out
cli
hlt
aad
inc
dec
pop
dec
mov
xchg
adc
pop
adc
inc
pushf
mov
cmp
outsb
push
enter
pop
pop
jecxz
mov
clc
push
fs
mov
cmp
mov
enter
stc
dec
sub
mov
xor
mov
push
xchg
jb
stc
mov
mov
lcall
int3
ror
push
insb
stc
pop
and
lods
loope
mov
jecxz
stos
sbb
andl
adc
lods
repz
ja
jg
mov
sbb
jne
jle
cltd
adc
mov
pop
clc
ja
and
cmp
in
mov
lock
fcoml
adc
lcall
clc
into
sub
fidivs
shll
push
sub
ret
push
mov
push
sbb
aas
adc
sub
push
filds
outsb
sarb
pop
push
ret
dec
stos
jo
push
lahf
inc
sbb
fidivrs
mov
js
movsl
lock
aas
sbb
sbb
in
fdivs
shrl
hlt
jne
test
adc
ret
push
lcall
fdivr
ret
imul
out
inc
sbb
fidivl
push
and
jg
mov
je
xor
push
shll
lods
or
out
clc
filds
or
inc
cwtl
push
add
inc
cs
sbb
les
jle
xchg
shrb
mov
arpl
stc
aas
es
sbb
mov
int3
cmp
nop
and
adc
icebp
es
sub
jae
das
adc
xchg
pop
dec
cmp
icebp
test
dec
cmp
sbb
xor
negl
jle
mov
mov
mov
fmuls
sub
scas
dec
data16
stc
push
jae
jp
mov
xchg
arpl
sarb
loope
xchg
incb
xor
cwtl
mov
pop
ds
outsw
clc
ljmp
push
mov
lods
pop
and
aam
call
mov
push
push
insb
cli
push
in
or
lds
xchg
ret
dec
jle
out
lock
ljmp
decl
jl
xor
ss
pusha
and
mov
and
movsl
cmc
cli
pop
pusha
cli
test
pop
stos
adc
js
inc
inc
sub
fiaddl
test
and
push
sub
inc
push
xor
jle
jl
fidivrl
pop
test
pushl
mov
push
sub
sbb
inc
mov
sbb
jmp
fdivr
mov
jnp
jb
ljmp
leave
push
cwtl
sti
mov
iret
fs
push
push
adcl
adc
bound
ja
and
jbe
push
push
jp
pop
jno
push
sub
add
mov
and
or
sub
outsl
nop
rorl
sub
rolb
sbb
std
or
test
imul
pop
push
inc
dec
add
push
lods
dec
jb
clc
sub
push
adc
incb
mul
push
or
mov
call
addb
or
je
sub
rol
push
cmpl
xabort
dec
inc
cmp
decb
jecxz
lds
cli
add
hlt
es
in
aaa
cmc
sbb
dec
inc
loope
jbe
or
aam
jmpw
insb
in
inc
cmpsb
inc
and
sbb
pop
fbstp
aad
push
insb
inc
push
dec
xchg
jb
jp
adc
push
and
adc
adc
mov
jge
dec
push
mov
push
add
popa
adc
cmp
stos
testb
pop
aam
add
in
inc
sbb
fsubs
push
stc
fiadds
fsub
push
jmp
inc
clc
mov
les
js
dec
adc
push
lock
adc
dec
out
daa
mov
mov
mov
pop
cmp
and
adc
movsb
xchg
fcoml
add
rorl
inc
arpl
lahf
add
outsl
push
cli
inc
in
jbe
adc
shrl
ljmp
clc
push
push
enter
xchg
mov
ret
ret
lods
jmp
mov
add
adc
and
push
clc
sbb
popf
dec
cwtl
push
sbb
jmp
xor
xor
fsubrs
inc
sbb
lcall
or
iret
xor
xchg
hlt
mov
push
inc
dec
imull
je
add
or
cmp
inc
sbb
int3
std
data16
clc
mov
sarb
push
pop
loop
xorb
loop
sahf
sahf
sarl
popw
cld
pushl
sub
and
mov
fisubl
pop
add
push
mov
addr16
sbb
das
fisubrs
pop
stos
mov
adc
xchg
out
dec
mov
xchg
int
loope
movsb
ret
aaa
cmc
lcall
outsl
add
nop
push
xchg
sbb
out
mov
or
and
lock
inc
or
or
mov
mov
mov
push
ret
enter
push
loope
xlat
or
outsl
call
inc
inc
and
roll
out
mov
xor
jl
cmp
sub
mov
sub
mov
arpl
adc
jb
jl
jg
popf
or
sbb
inc
jecxz
push
or
loopne
mov
add
test
fimull
xchg
ficompl
mov
xor
stc
sub
mov
test
adc
xchg
data16
pop
xor
or
aam
cmp
lret
add
inc
out
rolb
push
les
jg
add
lock
inc
jae
mov
pop
mov
fsubrl
ss
pop
xchg
jns
leave
xor
icebp
out
pop
rorb
test
daa
dec
in
jle
or
pushf
dec
scas
loop
or
pushl
and
sbb
and
mov
test
inc
xchg
out
lods
sbb
inc
jb
stos
pop
pop
test
and
mov
jg
nop
jge
xchg
lods
repz
cmp
stos
cmp
jmp
adc
insl
xor
pusha
push
and
or
std
dec
and
xor
adc
mov
clc
push
jle
int
pop
mov
loope
jbe
or
inc
xchg
sbb
sub
dec
adc
mov
xchg
out
mov
rcl
mov
or
inc
cmpsl
and
hlt
dec
ret
rorl
nop
inc
stos
aaa
jmp
pushf
cmp
aad
push
call
sub
fbld
xchg
cltd
or
xorb
adc
je
jp
mov
repz
rorl
or
int
das
fcmove
inc
std
jg
test
jb
add
bound
mov
xchg
jle
push
mov
sub
int3
cli
mov
jbe,pn
repnz
out
aas
jl
push
mov
mov
adc
les
jle
test
mov
loop
and
fdivrp
cmp
ljmp
xlat
aaa
add
xorb
xlat
jne
ret
or
dec
xchg
jle
rcll
add
lcall
cmp
pop
push
sub
add
sahf
xchg
popa
jge
shll
add
sti
xor
sbb
subb
cli
call
inc
jbe
or
adc
fdivl
test
mov
xor
add
lea
stos
mov
into
pop
jmp
push
mov
push
push
not
lods
or
inc
out
and
aas
ljmp
cwtl
clc
mov
pusha
mov
inc
push
pop
lods
mov
dec
leave
lods
sbb
mov
fst
shl
adc
sbb
cwtl
add
loope
xor
out
pushf
jecxz
xchg
xchg
outsb
nop
sahf
pusha
popa
nop
ret
sbb
loope
mov
sub
jb
mov
xchg
int
nop
xchg
pop
adc
or
movsb
in
inc
mov
fisttps
cld
mov
fdivr
sbb
insl
push
popf
push
mov
mov
outsl
add
mov
clc
clc
mov
lcall
inc
mov
add
int
orb
icebp
jmp
rclb
idivl
pop
fdivs
call
daa
add
pop
lock
aaa
test
decl
shrb
or
dec
jo
sarb
pop
cs
jnp
rcr
adc
dec
mov
sahf
xor
adc
popa
cltd
sbb
bnd
out
inc
or
xor
testb
adc
leave
les
cmpsl
sbb
int3
fisubs
fwait
cmpsb
dec
in
pop
scas
or
and
enter
pushf
jg
loopne
add
out
xchg
xor
loop
jo
inc
insl
or
in
lret
push
sbb
jnp
das
pop
popa
xor
inc
cmp
out
aad
xor
cmp
dec
pop
xorb
inc
mov
pusha
out
jo
loope
cmp
test
insl
in
cmp
and
inc
mov
mov
icebp
js
mov
dec
push
mov
add
cmpl
cmp
out
cmp
and
push
jnp
pop
xchg
xlat
loop
fisubl
adc
aam
leave
dec
in
mov
xchg
or
push
clc
ja
sbb
clc
or
pop
hlt
adc
fs
in
cmp
loopne
ss
sti
int3
adc
push
pop
and
sti
vmread
push
and
shlb
push
stos
aaa
or
mov
inc
sub
test
push
cli
xor
mov
sbb
out
jb
mov
push
push
test
pop
jo
nop
hlt
pop
out
dec
mov
mov
add
aad
inc
pop
loopne
fs
loopne
cmp
sar
push
dec
or
inc
mov
mov
sbb
sub
popf
cmpsl
dec
imul
ret
sub
int3
js
mov
mov
or
inc
aam
inc
add
push
add
sbb
push
add
xlat
add
jmp
ret
jl
aas
mov
lahf
loopne
loopne
hlt
adc
fwait
lds
cltd
push
je
insb
mov
stos
xor
lahf
out
mov
mov
push
cmp
loopne
les
mov
cli
addl
pop
insl
call
mov
lret
add
xor
nop
cmp
dec
adc
insl
pop
jmp
decl
pop
adc
jle
jecxz
xchg
lock
stc
into
inc
je
stos
inc
mov
decl
leave
mov
add
notl
and
decb
repz
inc
lock
sbb
pushl
loope
sub
add
je
les
mov
and
mov
jg
or
movsb
jo
adc
sahf
mov
orb
mov
push
push
mov
cmpsl
jae
repz
jle
faddl
push
jg
fsts
or
pop
add
cli
nop
jl
add
or
outsb
xlat
out
sub
aad
es
cwtl
das
inc
push
ja
xchg
push
jmp
cs
ret
inc
sti
sbb
and
xchg
addr16
jle
mov
jbe
pusha
call
fadd
jg
sti
aam
push
inc
and
jno
into
movsl
add
mov
rorb
mov
out
mov
sarl
mov
push
or
lret
dec
hlt
sbb
incl
fstl
mov
jo
les
movsl
cwtl
mov
fdivl
andb
adc
sarl
lock
xchg
push
xchg
imul
or
xor
xor
clc
or
adc
xor
xor
mov
cmpsb
jno
icebp
or
icebp
jmp
scas
inc
fisttpll
pop
or
movsl
mov
push
mov
push
lret
jmp
jne
dec
jmp
mov
jecxz
sahf
adc
push
xor
jp
pop
cmpsb
stos
push
daa
jne
add
push
xor
mov
xchg
mov
xchg
add
mov
xchg
cmp
iret
int3
jno
dec
dec
decb
mov
mov
arpl
jne
fwait
decb
cmp
adc
ss
cmpsl
and
out
add
cli
add
out
and
jnp
mov
add
fbstp
in
and
jno
nop
and
mov
rcll
xchg
push
stos
or
jl
ds
scas
mov
test
and
decl
inc
add
cltd
lahf
pop
xchg
cmp
movsl
mov
cld
lods
mov
xchg
lods
nop
add
test
xchg
mov
push
push
sbb
inc
cmp
sbbb
lock
jg
sub
addb
xchg
dec
or
dec
enter
pop
add
adc
add
adc
pushf
pop
jl
dec
add
data16
jle
and
push
nop
inc
mov
or
decl
sbb
xor
jg
je
es
push
ffreep
cmp
mov
inc
je
push
add
aad
and
or
outsl
dec
rcll
mov
inc
pop
jl
xchg
dec
or
orl
mov
push
imul
mov
add
mov
cmpsb
fwait
lahf
add
popf
mov
add
inc
es
push
jp
stos
inc
arpl
push
loopne
nop
sbb
xchg
add
dec
jbe
ret
mov
test
insl
xor
arpl
aaa
xchg
mov
pop
jg
xchg
dec
push
lea
mov
or
xchg
lods
iret
movb
push
nop
lods
cmpsl
mov
xorb
dec
pop
hlt
xor
cs
inc
dec
decl
inc
loopne
notb
int
shll
inc
jbe
push
faddl
test
xchg
dec
lods
test
pop
sbb
or
push
or
mov
movl
cmp
or
sub
out
repnz
pop
in
stos
inc
mov
iret
in
adc
xchg
or
add
or
mov
jle
sbb
jno
mov
cs
mov
mov
adc
add
xor
decl
push
in
data16
pop
add
cwtl
out
lock
cmpsl
and
add
sbb
bnd
add
add
dec
cli
je
push
adc
ds
xor
lmsw
rolb
mov
ret
push
fs
push
pop
pop
xchg
test
push
jo
sub
mov
shlb
test
push
insl
cli
jbe
lcall
and
cmp
add
mov
pop
adc
mov
xchg
ret
out
out
xor
ja
mov
mov
xchg
enter
mov
jl
js
and
mov
sbb
aad
lcall
cmp
stos
push
jl
mov
jo
and
jbe
jge
xor
stc
cmp
mov
pop
ljmp
sub
push
sbbl
pop
decb
dec
scas
add
sbb
jp
push
fisubl
push
hlt
pop
inc
add
ror
inc
out
sub
sbb
pop
add
mov
xchg
ret
push
inc
jg
sahf
add
out
aam
cmp
popaw
js
sbb
lock
icebp
mov
cs
into
mov
xor
sbb
ja
fisttps
cltd
dec
add
mov
hlt
mov
loope
fwait
daa
push
or
into
call
jbe
test
mov
pop
mov
or
mov
cmp
iret
jb
mov
mov
xchg
inc
arpl
mov
mov
xchg
xchg
lcall
sbb
and
add
ret
inc
mov
jmp
xchg
call
imul
mov
lret
jmp
stc
js
lock
xchg
ficoms
xlat
inc
or
addl
or
fcomps
int
mov
jge
mov
ret
lcallw
adc
divl
add
or
loope
lods
pusha
andb
fisttpl
push
loope
push
hlt
cltd
aam
scas
sub
inc
andb
lea
int3
add
inc
mov
lock
clc
js
icebp
cmp
jcxz
add
push
cli
repnz
out
ljmp
aas
in
jp
ss
orb
js
jl
iret
jbe
pusha
xor
sbb
mov
adc
ret
adc
xor
movsl
push
outsb
mov
add
add
inc
jl
xchg
hlt
aas
xchg
jge
loopne
hlt
xchg
mov
enter
xor
scas
mov
call
pushf
xchg
cld
jge
test
iret
dec
movsb
ljmp
inc
dec
andb
inc
or
push
xor
pop
push
mov
mov
and
inc
test
fwait
adc
and
pop
inc
adc
movsl
cmp
mov
roll
jbe
xchg
adc
and
cmp
dec
pusha
inc
and
inc
sbb
not
and
mov
popa
sbb
sbb
mov
lea
popa
cmpsb
mov
sub
mov
inc
adc
loopne
nop
lret
mov
test
inc
and
testb
movsl
and
sbb
cld
add
repnz
dec
outsb
cmp
mov
inc
sahf
xchg
fiadds
das
fdivrs
dec
jnp
jp
jge
decb
push
das
cli
mov
pop
push
mov
inc
lds
xor
jmp
push
mov
add
sbb
cmp
inc
enter
shll
push
aad
outsl
sub
push
or
add
xor
fcmovne
push
mov
jp
gs
jg
not
jns
and
push
es
pop
xchg
stos
sbb
add
inc
mov
lods
bound
mov
adc
jno
insb
test
popf
mov
and
jb
cwtl
andb
add
push
adc
cmp
dec
or
fcompl
dec
push
adcb
add
push
clc
test
cmp
clc
pusha
dec
dec
out
inc
cwtl
mulb
scas
jle
aad
es
and
hlt
sub
movsb
subl
jle
push
adc
repnz
jg
pushf
pop
jmp
es
jg
mov
dec
add
pop
clc
loopne
mov
or
push
xchg
call
in
shll
cmpsb
mov
int
scas
mov
add
sub
stos
add
outsl
shrb
sarb
in
dec
imul
mov
cmp
scas
adc
jb
xchg
test
and
add
or
add
or
repnz
pop
out
out
insl
es
mov
mov
and
and
dec
add
inc
cwtl
mov
jp
movl
add
out
ret
ret
adc
fistpl
ficompl
xor
xchg
and
orb
pop
rolb
in
pusha
pop
enter
test
push
fisubs
add
xor
lahf
mov
cs
insl
scas
pop
sub
insl
outsl
mov
or
cltd
cmp
mov
test
jge
sarb
dec
jge
mov
subl
test
mov
sub
push
mov
andl
shl
or
push
lods
decl
into
fsubl
movsb
inc
add
loopne
and
xor
cmp
adc
loopne
aaa
jnp
or
or
arpl
sbb
sbb
mov
fisubrs
inc
and
push
movsl
fwait
test
repnz
stos
push
pop
lock
movsb
or
dec
leave
sar
xor
aad
or
xchg
inc
scas
ds
rorl
cmp
test
lcall
aam
mov
xchg
mov
jecxz
dec
insl
sub
pop
push
pop
in
jl
sbb
cmpsl
jo
mov
cmp
mov
add
inc
test
nop
or
sub
nop
adc
dec
xor
xchg
ret
xchg
hlt
hlt
enter
or
cli
push
shlb
or
mov
push
inc
xlat
adc
in
adc
mov
dec
inc
ficoml
mov
rolb
outsb
mov
in
add
add
int
enter
mov
xchg
jnp
sahf
stos
mov
inc
js
sbb
cmp
mov
jbe
lahf
hlt
cmp
lahf
inc
xorb
js
aam
sbb
daa
aad
push
aam
dec
mov
add
mov
shl
lcall
or
addb
das
test
cli
decl
xor
ds
xorl
mov
in
outsl
or
je
cwtl
xor
ss
or
insl
insl
or
call
sbb
inc
ljmp
push
pushf
add
rorb
fsubr
add
sub
add
pop
ljmp
popa
mov
rcl
adc
addb
and
cwtl
aas
sahf
sbb
lcall
push
xor
add
dec
loopne
mov
cmp
push
xchg
lods
push
pop
add
push
pop
push
sti
das
dec
rorb
dec
or
sbb
sub
pop
lea
sbb
mov
cmp
mov
icebp
jae,pn
fdivrp
push
xor
push
mov
in
or
inc
push
adc
add
aam
icebp
or
fildl
dec
mov
mov
push
sbb
call
dec
push
cmp
jno
ljmp
incl
xchg
mov
stos
iret
pusha
ret
adc
mov
leave
jno
xchg
dec
and
das
clc
and
sbb
insb
mov
cld
add
cli
lcall
or
mov
inc
add
push
sbb
lcall
adc
xchg
jl
mov
pop
jg
sbb
xchg
test
mov
adc
pop
mov
jg
addb
scas
inc
push
cli
push
fadd
add
push
xlat
or
das
clc
loop
iret
inc
mov
xor
stos
dec
add
fprem
ret
dec
dec
and
out
mov
mov
add
fisttpl
in
push
sbb
jg
outsb
jns
inc
inc
add
les
push
fsubrp
insb
out
jmp
icebp
cmpsl
dec
fs
into
sub
jo
adc
mov
divb
inc
push
pop
orb
add
xor
scas
pushl
dec
je
in
add
pusha
and
sbbb
jg
lcall
mov
int
sbb
dec
and
clc
ret
test
out
sarb
in
addb
mov
in
push
and
inc
das
add
xlat
rolb
xor
jmp
adc
and
mov
xchg
sbb
aas
jb
and
dec
mov
push
cmpsl
fcomip
shlb
adc
dec
push
clc
jg
jp
rcrb
push
lock
dec
and
jo
or
pop
jge
mov
call
jae
rcrl
add
ret
cmpsl
adc
fdivr
jl
mov
dec
shlb
add
add
mov
push
lret
xchg
jo
loope
inc
ss
cmc
dec
lea
mov
push
adc
inc
mov
xlat
out
push
dec
movb
lods
cmpsb
movsb
fs
cmp
mov
jmp
icebp
xchg
push
cmc
cltd
enter
pop
pop
add
adc
nop
orb
fst
jo
push
or
rcrb
jp
movsl
sub
out
pop
mov
sarb
push
adc
push
sahf
cli
mov
and
mov
lock
pop
movsb
push
fisttps
push
orb
cli
xor
les
push
add
dec
pop
add
push
sbb
jbe
xchg
scas
mov
and
daa
sbb
out
or
repnz
or
mov
pop
or
push
xchg
inc
bound
dec
loopne
mov
dec
inc
xor
xchg
sahf
adc
insl
mov
sbb
addb
sbb
cmp
pushf
les
pop
out
imul
test
dec
add
les
push
jbe
sbb
jno
dec
push
shrb
mov
push
imul
push
push
lcall
pop
loopew
scas
dec
stos
mov
shll
mov
cltd
sbb
fisttps
or
idiv
xor
mov
add
mov
dec
test
add
test
cmp
cmpsl
sbb
test
call
or
fidivl
pusha
xor
mov
lcall
nop
dec
ja
xchg
push
jle
add
movb
and
mov
std
pusha
roll
notl
mov
dec
push
mov
xor
add
xchg
pop
push
mov
xlat
pop
pop
bound
ds
add
xor
stos
push
adc
push
push
and
fimull
stos
jns
js
push
das
mov
mov
ret
jns
test
iret
sbb
ja
rol
loopne
xor
aas
fdiv
out
mov
mov
shrb
loopne
rcrb
push
test
test
pop
orb
jle
dec
pop
sbb
add
ret
decl
xchg
mov
pop
jae
cli
test
dec
mov
iret
fmull
fildll
or
push
cltd
sub
mov
nop
lock
loope
jo
scas
cli
fcomip
sbb
jge
out
cmp
lcall
mov
lock
inc
pop
sub
mov
and
les
adc
imul
insb
add
fs
ljmp
clc
subb
movsb
divb
mov
mov
movsb
adc
cmpsb
incl
or
imul
scas
ret
mov
xor
stos
push
push
sub
push
test
decl
inc
lret
jecxz
jl
xlat
shl
daa
dec
xchg
into
out
das
call
clc
mov
dec
fistpl
dec
out
mov
jl
xchg
or
xchg
adc
cwtl
outsb
clc
jmp
movsb
mov
xor
sub
push
pushf
xchg
out
mov
dec
cmp
and
outsb
ret
rorb
shlb
aad
pop
js
mov
sub
js
pop
aad
lea
ss
rolb
cmpsl
mov
movsl
aaa
inc
and
aam
adc
mov
jecxz
inc
push
and
xor
mov
jmp
push
xor
dec
pop
mov
scas
mov
push
icebp
loop
push
fwait
loope
std
loope
sub
jg
js
in
mov
ret
sbb
fcomps
enter
inc
orb
movsb
cmp
repz
sti
inc
rorl
add
mov
jecxz
push
add
outsb
mov
xchg
push
xchg
jb
roll
cld
sbb
push
repnz
stos
jp
mov
dec
adc
in
popf
jb
dec
dec
push
mov
cli
jge
add
insb
fimuls
push
xchg
hlt
mov
out
jb
sbb
repnz
imul
xor
adc
sub
cmc
xor
push
mov
lock
fimull
cmc
xchg
in
sub
dec
xchg
call
into
xor
push
andb
mov
pop
push
gs
xchg
ss
or
scas
rorb
or
jge
mov
cltd
cld
movsb
xchg
fwait
xor
stos
add
daa
es
popa
ret
mov
into
and
mov
inc
sub
mov
xorl
daa
inc
je
ret
fisttps
xchg
int3
loopne
cld
push
shrb
push
cwtl
mov
into
adc
test
push
in
add
dec
fildll
push
rorl
push
movsb
fwait
or
test
push
sbb
adc
push
mov
stc
gs
mov
call
add
push
popl
sbb
pop
sub
xchg
loopne
inc
lock
inc
jb
dec
mov
lock
cli
out
movsb
ret
pop
push
dec
adc
rorb
pusha
inc
mov
cltd
dec
mov
fisttps
push
test
pusha
and
mov
xor
xchg
pop
add
sub
xchg
iret
stos
fld
dec
cmp
sub
outsb
push
test
and
ljmp
bound
leave
dec
and
push
mov
xchg
nop
inc
fstpt
sbb
int
mov
xor
out
mov
mov
leave
jbe
jle
cmpl
clc
push
push
insb
pop
nop
inc
inc
test
shlb
cs
push
sub
jb
ret
pop
mov
mov
push
stc
add
inc
stos
test
and
add
pusha
xor
mov
bswap
or
lock
jo
imul
lcall
sub
jle
aad
xor
ret
cmp
les
add
insb
pop
push
add
fmulp
ljmp
lods
adc
sub
test
divb
stos
adc
pop
or
sbb
clc
xchg
inc
test
mov
xor
fs
ja
add
xchg
push
mov
inc
push
orb
mov
je
dec
jl
xchg
jecxz
stos
jmp
mov
xor
push
fadd
push
mov
insl
xchg
loopne
push
bound
or
mov
push
or
dec
sub
test
inc
or
mov
xor
imul
mov
mov
out
lret
adc
mov
sub
es
and
pop
lods
cld
scas
aaa
push
jnp
insb
inc
shlb
xchg
mov
out
subb
incb
cmp
dec
or
loop
xchg
test
test
movsl
pop
aam
gs
jp
fmul
andl
fdivl
cs
lcall
adc
ss
xchg
sbb
push
loopne
sbb
loop
dec
fstpl
loop
jg
lea
je
les
pusha
mov
mov
sub
in
dec
enter
sub
add
mov
pusha
mov
mov
add
loope
cmp
ss
sub
push
sub
cs
loop,pn
fbld
xor
lret
push
lret
push
pop
dec
mov
pushf
das
int3
adc
mov
fsubrl
stc
stos
push
sbb
outsb
or
cld
clc
inc
loope
push
push
out
sub
mov
mov
jns
rorb
jp
add
pop
test
add
js
sub
mov
imulb
fstpt
add
out
or
rcrl
inc
lds
pop
loop
je
ljmp
int3
shl
jo
movb
fisttps
or
and
inc
and
pusha
pop
insb
mov
and
enter
outsb
cmpb
pop
insb
test
loope
scas
pusha
mov
mov
xchg
div
push
sbb
or
cmpl
mov
decl
les
mov
les
push
loope
sbb
sub
stos
jg
loopne
test
lcall
inc
bound
and
jne
hlt
aad
xor
mov
aas
push
xchg
mov
icebp
test
push
loopne
mov
call
enter
stos
das
add
xchg
jb
mov
aam
cmpb
fcmovbe
orb
or
xchg
cltd
pop
or
pop
in
and
pusha
test
pop
aam
ss
sahf
cmp
sbb
cli
filds
out
out
fisubs
movsl
inc
adc
push
fs
aad
cmp
cmpsb
mov
dec
add
and
js
loopne
pushl
popf
cmp
rep
push
mov
mov
push
jp
loop
data16
int3
in
ret
das
test
add
xchg
sahf
jl
push
adc
jge
sbb
mov
adc
mov
mov
sub
pop
push
and
outsl
mov
popf
inc
sbb
push
cmp
sqrtps
fdivrl
mov
dec
push
stos
rcrl
inc
or
insb
push
jg
sub
das
cmp
cmpsb
or
loope
jnp
jg
sbbl
shlb
jbe
jg
addb
xchg
insb
movsb
inc
imul
pop
or
push
mov
sbb
sub
and
jmp
loope
leave
jecxz
data16
push
mov
mov
ljmp
or
lods
popf
fs
pop
inc
and
dec
sbb
push
push
xor
dec
sbb
mov
fs
fisttps
xchg
jbe
jo
lret
cmp
jecxz
adc
fisubs
sub
sbb
call
add
daa
jbe
mov
xlat
adc
xor
insb
lret
mov
popa
and
xchg
cmpsl
mov
in
insl
dec
inc
imul
stos
lds
stos
test
rorb
push
fdiv
cmpsb
outsb
cmp
mov
push
je
mov
sbb
ljmp
shl
pop
lds
jle
aas
add
lea
mov
out
push
jmp
daa
adc
pop
add
ret
dec
mov
sbbb
mov
inc
shl
mov
sbb
pushf
rcrb
mov
adc
mov
mov
rolb
pop
mov
loopne
imul
xor
push
push
mov
and
pop
jbe
jle
stos
outsl
mov
or
cmp
imul
mov
filds
dec
outsb
cmp
jmp
mov
push
ss
xor
decl
dec
shl
inc
loope
mov
ffreep
iret
rolb
call
rcrl
lcall
arpl
movsb
imul
and
imul
mov
aaa
and
jmp
push
sbb
mov
cmp
xorb
jmp
push
xor
inc
adcl
mov
and
push
dec
and
test
loope
fcomi
push
mov
mov
popa
and
rolb
cwtl
inc
cltd
push
sti
xchg
enter
rcr
subl
add
adc
arpl
mov
daa
or
sbb
adc
mov
cli
clc
sub
rorl
pop
ja
adc
ret
pop
xor
or
sbb
ss
add
dec
fs
jl
push
cmp
push
pop
mov
jb
std
fcmovnu
mov
insb
ret
dec
mov
mov
push
pusha
test
sbb
mov
adcb
xlat
aad
push
mov
xor
sub
mov
xlat
cmpsb
lret
xchg
mov
mov
xchg
or
mov
push
je
add
cmpb
xchg
push
or
mov
jns
fcoms
mov
icebp
popf
movb
das
fstpt
cltd
mov
push
stos
adc
mov
shrb
mov
adcb
fst
xor
pusha
mov
lcall
fstpl
data16
dec
pop
in
ljmp
cmp
popf
into
dec
jg
sbb
mov
adc
xchg
fs
cmp
mov
lock
pop
fistl
mov
xchg
jnp
cs
cwtl
call
insb
je
movsl
push
test
decl
pop
pop
fldt
testl
iret
jp
lcall
jl
call
into
jecxz
frstor
data16
fcmovu
sbb
sub
cwtl
mov
or
add
xchg
and
xchg
fstps
xchg
lods
cli
lock
push
mov
nop
push
mov
outsl
sbb
cmp
xchg
fmuls
in
call
ds
outsl
mov
inc
add
inc
xchg
xor
std
mov
dec
je
lds
jno
and
addb
dec
movsb
add
push
in
cmp
jns
sbbb
bound
cmp
xor
mov
add
xchg
rorb
ret
sub
cli
imulb
add
lcall
test
pop
bndldx
rorl
xchg
dec
mov
fiadds
rolb
out
std
push
jns
call
jge
push
cmp
stos
stos
idivl
ret
decl
sbb
or
jb
icebp
cmp
mov
enter
mov
aam
bound
test
nop
cmp
xor
xor
ljmp
cli
decl
mov
dec
and
in
mov
mov
mov
push
clc
cli
in
adc
out
adc
int3
cmpb
ljmp
test
cmp
adc
adc
mov
mov
lahf
inc
sbbl
jbe
pusha
scas
mov
push
aam
insb
stos
inc
pushl
decl
add
mov
ret
cmpsl
inc
lds
daa
fdivrs
inc
mov
jmp
inc
lahf
loope
xlat
in
and
call
dec
push
icebp
adc
mov
or
or
mov
add
mov
inc
mov
fisttps
push
sbb
jg
adc
sbb
pop
push
cmpsb
cwtl
add
mov
aas
in
dec
ret
mov
push
pushl
aam
push
mov
add
mov
add
es
shlb
ret
inc
or
test
out
ret
push
jle
sbb
fwait
fwait
pop
mov
inc
push
add
cli
stos
stos
inc
add
ljmp
mov
mov
cld
rorl
cmp
add
mov
add
roll
outsb
cld
jg
lret
loop
xchg
push
fwait
jle
loope
icebp
lock
xchg
dec
pop
inc
fldenv
push
movsb
and
fisubs
jae
stc
add
lds
popa
mov
fisttps
and
dec
int
imul
jecxz
das
jp
push
rol
hlt
cmc
lds
leave
mov
sub
sets
enter
es
add
jle
mov
lods
cmp
idiv
out
pop
je
ret
sub
sbbl
xchg
dec
popf
mov
fiaddl
icebp
enter
sbbl
push
faddp
sbbl
fbstp
scas
pop
push
add
ds
inc
pop
pop
push
mov
int3
dec
mov
sarb
je
push
loop
fistpll
inc
mov
sub
js
out
inc
add
jmp
imul
das
fs
orb
call
call
and
cmp
lock
cmp
insb
dec
mov
or
mov
outsb
sub
xor
sti
fsts
fs
sbb
jp
xchg
add
sbb
mov
or
rorl
jp
dec
xchg
icebp
push
mov
fidivrs
cli
add
and
inc
jmp
ss
xchg
fdivl
push
lret
pop
xchg
scas
test
or
adc
adc
fmulp
imul
adc
push
std
insl
test
test
cld
repnz
ja
decl
stos
cmp
test
sarl
mov
mov
lcall
incl
stc
dec
cmpb
push
push
push
addr16
push
jb
push
outsb
jp
adc
fisubrs
add
jl
call
push
fsubr
sbb
leave
xchg
ds
inc
xor
clc
push
sti
scas
jl
outsb
loopne
inc
cmpb
push
fcoml
pop
loopne
mov
in
sbb
and
lcall
data16
and
es
popf
pushf
xchg
xor
cld
ljmp
in
js
popf
add
mov
or
call
xchg
mov
popf
clc
es
mov
sub
adc
jle
shrb
sar
mov
mov
je
xchg
mov
into
es
adc
test
xor
sbb
sbbb
add
fwait
imul
test
and
clc
pop
lods
lea
or
adc
sbb
adc
aas
sbb
sub
test
mov
ss
push
loope
sub
rolb
add
hlt
push
mov
fnstenv
repz
aaa
mov
ds
xor
push
lock
fisubs
lret
icebp
sbb
fnstsw
sti
xchg
or
mov
notb
incl
dec
sub
or
ljmp
push
bound
xchg
or
sbbl
sbb
mov
mov
adc
and
pop
insb
fs
icebp
rolb
jb
and
mov
loopne
cmp
aas
or
sub
adc
test
jno
lds
pop
sbb
jmp
push
push
jo
fcompl
mov
es
xor
bound
setae
jl
loopne
bound
jl
sbb
aad
fcmovnb
jl,pt
sbb
adcl
mov
repnz
mov
out
xor
ret
mov
in
xchg
out
pop
adc
dec
lahf
rorb
add
popf
popl
outsb
outsb
ljmp
rclb
aam
jle
addr16
cmpsl
xor
out
or
cmpsb
loop
das
das
inc
nop
push
cld
fdivrl
and
jecxz
sbb
push
ret
lahf
iret
subl
add
in
cmp
fistpll
popf
arpl
rcll
sbb
negl
fnstcw
sarl
data16
loopne
fwait
xchg
xlat
mov
adc
das
movsb
push
lods
icebp
rol
pop
inc
cmp
push
idivl
daa
jb
cmp
scas
sub
test
push
jp
adc
adc
xor
insl
jne
or
and
mov
call
sub
cmp
sub
sbbb
or
aas
or
mov
adc
inc
mov
fsts
add
fld
sarl
pop
jecxz
jle
mov
dec
or
jg
and
push
pop
dec
or
or
ror
cltd
inc
cltd
dec
popa
sbb
cmp
rclb
xchg
jmp
add
sub
gs
std
out
cmp
inc
or
and
mov
push
cli
outsl
sub
test
and
in
ss
lret
or
loopne
stos
aad
movsl
cmp
jl
scas
or
dec
dec
and
dec
mov
shlb
push
pop
cmp
call
or
mov
jge
fidivl
test
pop
sahf
cmp
sub
cmp
outsb
in
pop
repnz
fsubs
jl
call
adc
movsb
or
adc
jbe
push
cmp
loop
shll
rcrl
mov
loope
outsl
add
xchg
lock
mov
inc
repnz
sub
mov
call
sub
mov
lret
or
repnz
test
sub
call
pop
test
sub
jecxz
sub
add
xchg
xor
push
mov
ljmp
cmp
les
enter
push
cmp
decl
xchg
and
xchg
ret
lods
mov
je
and
jle
daa
jns
data16
cmp
sub
pop
or
test
pushf
add
mov
mov
xorl
or
dec
mov
test
aam
into
call
int
sub
enter
sbb
incl
add
xorl
repz
and
cwtl
lcall
jp
add
or
or
adc
cmp
fbstp
mov
mov
xchg
inc
sub
rorl
dec
add
or
andb
aas
fcomps
adc
call
push
or
pop
xor
push
mov
and
adc
inc
mov
int
ja
inc
lea
jmp
xor
mov
cmp
adc
jle
call
insb
cmpsb
out
add
pop
mov
ja
in
push
js
cld
into
addr16
mov
outsl
lahf
push
jle
xchg
rcr
adc
pop
sbb
dec
fldcw
pop
gs
and
fisubs
mov
xor
pop
cwtl
mov
jb
mov
aaa
loopne
lea
and
outsb
inc
bound
mov
xor
pop
icebp
mov
dec
fldenv
cmp
lcall
cmp
push
test
jne
mov
add
and
arpl
jne
xchg
inc
pop
ret
add
cmp
push
push
and
mov
push
adc
pop
cmc
xchg
push
and
or
sbb
pop
aaa
adc
xchg
loope
mov
sbb
push
or
es
notl
dec
call
xor
adc
mov
mov
lahf
mov
loopne
lds
loopne
xchg
popa
les
cwtl
incb
pop
sub
inc
push
adc
out
mov
test
mov
jg
sub
mov
nop
pushf
testl
cmp
pop
mov
ss
xchg
pop
sahf
inc
adc
inc
outsl
enter
xor
or
mov
jg
vpcmpeqb
shll
dec
scas
les
rorb
push
scas
rcrb
test
pop
mov
push
mov
dec
fisubl
push
das
jbe
cmpsb
jnp
nop
pop
fisubrs
imul
cmpl
fs
stos
dec
in
or
fsts
insl
in
enter
ret
or
cli
movsl
sub
ds
push
cwtl
pusha
add
sub
imul
or
mov
xor
clc
pop
fwait
sub
test
sbb
push
add
inc
sub
sub
out
inc
dec
sbb
xchg
ja
push
cld
mov
dec
sbb
mov
push
sti
sahf
mov
jecxz
sti
aad
imul
lret
or
imulb
push
cmp
mov
test
rolb
hlt
addl
add
mov
add
outsb
xor
xchg
rorb
outsb
pop
addb
into
mov
stc
cld
jg
and
cld
loope
push
inc
dec
jnp
sub
orl
pushf
outsl
add
jl
xchg
pop
jbe
js
add
repnz
mov
push
icebp
inc
inc
cwtl
jl
leave
out
xchg
push
sub
mov
jle
mov
adc
add
test
ljmp
push
notb
add
jmp
loopne
dec
lcall
hlt
mov
xchg
or
aam
and
test
pushf
or
inc
mov
or
mov
add
dec
or
shlb
fsubl
pop
xchg
adcb
cmp
mov
ret
xorb
aam
add
inc
aaa
or
stos
decb
mov
xchg
sbb
sub
pop
shr
outsl
test
adc
push
push
pop
sbb
push
mov
sahf
call
mov
aam
repnz
pop
and
mov
jl
xor
ljmpw
fisubrl
fidivl
aad
pop
jo
jecxz
pop
xor
in
pop
mov
lret
adc
aas
fdivl
mov
testb
pop
es
icebp
xchg
icebp
xor
icebp
sbb
adc
adc
popa
and
pop
sub
inc
int3
adc
mov
out
aaa
pop
out
cmp
test
cs
imul
loop
mov
cwtl
add
jne
cmp
pop
add
outsb
cmpsb
roll
sbb
sahf
ds
fnsave
jl
lahf
mov
adc
mov
std
pop
add
pop
aas
and
xor
jge
pop
rclb
and
imulb
cli
test
sub
fwait
cmp
inc
inc
adc
mov
cmp
and
push
jle
movd
ds
cmp
jge
hlt
mov
js
push
ret
lcall
push
and
movsb
adc
lods
jo
pusha
mov
xorl
mov
inc
js
aaa
loop
and
inc
and
xchg
and
repz
incl
or
mov
je
dec
hlt
push
repnz
pop
mov
aam
aas
rcrb
xor
xchg
popf
decl
pop
adc
int
or
and
pop
xor
data16
xor
subb
sbb
mov
daa
add
and
data16
xchg
push
inc
daa
cld
aam
lea
fninit
cmp
enter
pop
mov
or
pop
lock
ret
xor
test
pop
jo,pn
add
int3
cld
adc
out
or
jmp
lea
lcall
pop
stos
push
jle
aas
sbb
aas
or
mov
andl
or
or
popf
push
ret
stos
inc
mov
xchg
mov
push
dec
xor
jo
sub
iret
jg
test
jmp
and
push
call
sbb
lock
aad
adc
cmp
nop
rorb
cli
push
insl
add
ljmp
dec
pop
stos
in
mov
aaa
xchg
pop
or
pop
sahf
sbb
cmp
stos
sbb
jmp
mov
add
jmp
mov
mov
mov
sub
and
mov
push
or
shl
mov
sub
mov
mov
outsl
push
sbb
adc
xchg
mov
enter
imul
adc
insb
adc
add
dec
dec
rcl
jae
sub
scas
sub
or
dec
pusha
jge
nop
iret
dec
sti
shrb
jne,pn
ss
and
pop
jno
add
inc
cltd
xor
xchg
mov
add
pop
icebp
lods
push
in
pushf
mov
xor
lock
inc
or
icebp
pop
cld
mov
add
loop
cmc
adc
jmp
inc
imul
jne
add
inc
cmp
inc
clc
add
stc
or
cwtl
daa
bound
ret
loop
push
push
adc
lahf
pushf
mov
flds
pushf
loop
loope
in
mov
pop
xchg
mov
adc
shll
add
fmuls
sub
loope
ljmp
add
or
adc
fsubrs
inc
xchg
ljmp
cmp
inc
in
rorl
mov
mov
rorl
cld
out
cmp
and
adc
add
lcall
dec
mov
dec
or
ss
mov
jb
testl
push
rolb
sbbb
stos
add
aad
mov
andl
pop
ds
mov
ror
or
aad
or
mov
pop
add
dec
push
dec
xlat
lret
cmpsb
lods
enter
dec
shrb
inc
les
or
add
jnp
inc
xor
xor
or
ret
ljmp
sbb
xor
or
sbb
pop
sbb
adc
inc
push
jae
add
pop
fmull
rolb
fincstp
inc
scas
das
pop
and
jle
mov
int
add
lods
xlat
or
sub
iret
mov
fwait
in
lahf
cld
pusha
pushf
enter
adc
iret
pop
xorb
add
or
int3
push
push
xchg
mov
push
cmp
clc
xchg
inc
cmpsb
lret
adc
dec
ret
lahf
xor
adc
add
inc
ljmp
bound
test
cmp
jnp
popa
cmp
mov
arpl
push
ret
pop
push
and
cmp
lods
cmp
or
es
hlt
mov
jmp
mov
mov
bound
enter
mov
push
push
cmp
jecxz
ret
mov
pusha
xchg
sbb
sbb
lock
cmp
mov
jns
pop
mov
repz
mov
test
and
fimull
jl
mov
ja
mov
sub
mov
mov
push
mov
jle
movsl
jnp
pushf
and
xchg
clc
loopne
adcl
test
jg
xchg
aaa
and
dec
test
add
mov
mov
rcrb
call
sahf
movsb
and
mov
aad
jle
xchg
lahf
js
hlt
mov
jl
xor
inc
ret
cmp
sbb
mov
push
test
sbb
in
add
dec
jecxz
mov
out
xlat
inc
jecxz
push
pop
sbb
test
lcall
add
hlt
repnz
pusha
add
data16
pop
sub
adc
pop
xchg
in
pop
test
sbb
cmc
shrb
stos
mov
and
xor
add
or
xchg
adc
xchg
test
fwait
hlt
jmp
jl
xchg
hlt
out
cmpsl
pop
sbbb
scas
and
adc
mov
bound
lods
movsl
jp
sbb
mov
dec
xor
mov
movb
call
enter
xchg
loop
test
xchg
xchg
mov
mov
je
adc
ror
cmc
ret
cmovp
fucomi
jg
frstor
insb
add
out
sub
leave
xchg
pushl
jo,pt
dec
jo
movsl
bound
enter
cli
add
rolb
add
jns
mov
cmp
decb
mov
push
loope
mov
loopne
and
jecxz
and
push
xor
dec
jne
aas
mov
jge
push
push
mov
cmp
int3
jmp
loope
mov
xor
out
ds
shr
mov
bound
inc
icebp
idivb
dec
adc
xor
icebp
xchg
les
shrb
cmp
mov
dec
cmc
cs
addr16
leave
adc
das
or
insl
lods
push
mov
push
add
cmp
add
mov
adc
xchg
and
daa
test
mov
ret
xchg
addr16
adc
add
and
rolb
xchg
mov
pop
inc
out
push
mov
loop
das
cmp
and
mov
sub
rorl
pop
ss
jl
loopne
std
scas
push
or
gs
mov
data16
pop
dec
mov
shll
xchg
test
cmp
dec
call
push
frstor
mov
testl
data16
jns
inc
adc
cmp
pop
sar
lcall
inc
add
mov
push
sbb
dec
xchg
pop
test
loop,pn
insl
mulb
aas
jmp
jne
cmpsl
insb
and
dec
bound
js
adc
jle
ret
pop
lcall
or
aad
adcl
loope
nop
movsb
jae
mov
push
or
cmp
inc
loope
call
dec
sbb
dec
data16
sbb
aaa
pop
stc
pop
mov
in
sub
or
sbb
sub
out
pushf
pop
je
punpckhdq
and
xor
scas
popf
call
mov
and
mov
push
cli
add
xor
mov
mov
in
enter
xchg
xchg
or
arpl
mov
sbb
mov
sbb
in
sbbb
dec
outsl
lock
adc
orl
nop
cmp
push
jecxz
cmp
xor
scas
clc
lods
ret
jnp
xchg
xor
push
mov
mov
jb
std
imul
lods
bt
loope
mov
pusha
fs
or
into
icebp
add
mov
outsb
lods
lahf
adc
mov
xchg
inc
adc
mov
mov
add
pop
int3
dec
pushf
cmpsb
mov
inc
icebp
pop
push
push
cmpsb
pop
popf
popa
xor
pusha
sbb
js
and
sub
into
pusha
mov
push
dec
jg
leave
jmp
iret
negl
cld
sub
and
dec
lods
push
or
shl
cmp
decl
stos
pmaxsw
xlat
xchg
sahf
pop
scas
jo
jo
pop
clc
dec
enter
stc
fcompl
adc
je
add
into
out
testl
rorb
sbb
in
insl
xor
add
jecxz
pop
sub
cmp
xor
mov
pushl
jl
ficoml
jmp
test
incb
movsl
ljmp
cwtl
pop
pushf
jg
and
or
cmpsb
jns
pop
add
mov
add
pusha
into
and
mov
pop
xchg
fs
cwtl
out
inc
scas
imul
sbb
pop
shll
jmp
in
mov
cld
cs
out
mov
pushl
adc
cmpw
outsb
push
pushf
jp
cmpsb
xor
and
les
data16
ljmp
je
sti
pop
xchg
xor
outsb
sub
sbb
test
add
jmp
into
xchg
bound
fs
das
add
lods
cs
inc
rclb
cmp
inc
cmpsb
jp
pop
out
jg
jg
mov
and
adc
mov
popf
cmc
push
or
add
ret
sbb
popf
shl
out
jg
call
pop
out
sbb
dec
scas
cmpsl
add
test
ret
out
cli
jmp
push
mov
push
or
mov
mov
xor
or
pushf
js
lahf
adc
ljmp
ret
push
mov
xor
jo
push
dec
mov
xchg
cli
or
xchg
push
push
lods
mov
fdivrp
mov
and
fwait
and
add
sbb
xchg
or
mov
nop
lcall
cmp
outsb
ljmp
cmp
lock
pop
and
push
faddl
sub
inc
mov
mov
ret
adc
notb
das
pushf
movsb
cmp
jmp
push
sub
das
clc
jg
sbb
mov
inc
inc
mov
repz
loopne
ret
sbb
mov
jp
aaa
mov
iret
sbb
out
mov
ss
clc
push
pop
or
sbb
or
cwtl
xor
mov
filds
sar
in
test
sbb
or
cmp
or
hlt
hlt
adc
ds
pop
in
jg
rolb
mov
sub
shlb
add
cli
push
pop
xor
aam
sub
and
mov
cli
pop
sbb
repz
xor
jne
mull
stc
adc
push
pop
push
mov
int
lea
fadd
cmp
push
jl
inc
pusha
mov
dec
push
pop
js
xchg
xchg
sbb
adc
stos
dec
pop
lret
gs
pushf
mov
lock
in
adc
add
lahf
lea
push
pop
xor
jg
fdivs
lods
push
xchg
dec
push
imull
mov
enter
inc
cmpsb
lret
adc
and
jl
cs
dec
inc
lds
in
xchg
fs
mov
lods
bound
sbb
psubusw
xchg
dec
decl
adc
subb
mov
push
imul
or
outsb
ss
int
ds
int
pop
xchg
ljmp
shrl
push
inc
push
fstpl
dec
dec
cli
mov
mov
out
and
aad
sub
mov
fcmovb
adc
cli
add
out
sar
scas
add
inc
jle
movsl
cmpsl
nop
sub
outsb
enter
mov
test
pop
add
lcall
je
scas
lock
mov
mov
mov
popf
xchg
adc
push
xor
repnz
lea
mov
sbb
or
or
add
sbb
cmpxchg
out
ja
rorb
or
and
mov
or
data16
loopne
inc
roll
rclb
xchg
xor
inc
andb
clc
or
push
stos
xor
jae
fwait
leave
dec
cld
mov
add
clc
lcall
dec
and
adc
std
loope
and
and
test
jle
mov
mov
movsl
xchg
cmp
out
xor
aas
repz
cmp
sbbl
cld
pusha
mov
inc
mov
in
or
sub
imulb
adc
jg
es
cmp
rorb
vmfunc
sahf
jbe
cmp
scas
mov
adc
cmpl
xor
lcall
xchg
mov
pusha
clc
jne
dec
out
adc
leave
or
imull
pushf
sbb
out
cli
addr16
iret
adc
inc
cli
enter
sahf
mov
and
incl
jne
push
xchg
aad
adc
dec
popf
add
in
xchg
cld
sbb
lahf
ja
push
push
push
push
hlt
das
cli
call
test
out
adc
cltd
push
bound
mov
jno
pop
xor
mov
pusha
sbb
sub
lret
repz
ljmp
sti
push
mov
add
icebp
push
cli
out
ret
outsb
push
aaa
sbb
jg
jmp
lret
cld
mov
add
sbbl
jmp
test
push
pop
gs
filds
sar
xlat
push
lret
or
orb
mov
or
aas
addb
popa
and
test
cmp
fdivl
out
lret
xorb
ret
mov
pop
loopne
xor
adc
or
call
cmp
movsb
mov
mov
mov
fwait
sar
dec
fists
data16
in
add
cwtl
lock
sub
fs
push
cmc
or
and
incl
mov
or
orl
ljmp
mov
mov
sub
ret
shll
mov
lcall
jns
jg
mov
pop
xchg
in
inc
xlat
mov
clc
sub
adc
clc
adc
aad
add
out
clc
lock
cs
gs
popf
and
push
cld
fisttps
popf
int3
cmc
loopne
mov
sarl
xor
push
or
loopne
outsl
inc
incl
pop
std
inc
xchg
pop
push
sub
mov
lds
les
sbb
add
sub
test
ljmp
xor
add
and
add
mov
mov
mov
cmc
jae
aam
inc
enter
or
xor
or
cmpl
push
dec
data16
dec
out
clc
xor
push
fnstcw
js
sub
add
fistps
in
or
mov
mov
lock
notb
or
inc
fists
clc
inc
stos
pop
lock
mov
add
mov
push
cmp
push
dec
push
add
or
xor
or
adc
sbb
mov
sbb
sbb
loopne
aam
mov
sub
sti
lcall
or
sbb
pop
mov
daa
pop
adc
cld
add
inc
add
test
sahf
jns
mov
jb
jmp
aaa
adcb
adc
lods
xchg
adc
outsb
mov
das
ret
imulb
lods
cld
insl
je
fadds
sbb
cmp
add
outsb
jecxz
push
mov
insb
mov
clc
movsb
jbe
mov
cld
push
ss
adcb
pop
mov
sbb
pop
jo
jo
dec
add
sbb
cmp
and
insl
pop
and
insb
inc
loop
arpl
outsl
data16
ficomps
pop
add
cmp
cmpsb
js
and
data16
int3
ljmp
mov
in
sahf
xor
cs
jmp
or
or
dec
and
or
das
std
or
aad
mov
xor
mov
xchg
orl
aaa
lock
rcrb
insb
lds
ret
mov
popf
fcomps
rcrb
out
sbb
sbb
sar
jne
add
adc
add
and
sbb
movsb
sub
jl
jl
push
repnz
xchg
fs
xchg
pop
scas
or
jnp
inc
mov
push
and
les
xchg
sar
test
and
js
loop
pop
mov
cmpsb
adc
nop
jb
icebp
shrb
les
movsb
andb
xor
xchg
sub
or
cmp
mov
push
or
pop
cltd
fcoml
pop
jecxz
rorb
add
mov
mov
push
adc
negb
mov
push
shl
incb
sbb
jl
cmp
pop
xchg
jge
sub
lahf
lret
xchg
mov
les
and
loop
lcall
mov
cmp
inc
stos
es
and
enter
xchg
push
in
jge
outsl
insl
addb
dec
rolb
sbb
outsl
dec
pop
les
add
mov
addb
int
push
icebp
in
in
sbb
or
inc
insb
pop
and
cmpps
lock
add
test
push
sub
dec
mov
out
jmp
and
ss
mov
push
cld
mov
vpmulhuw
inc
xor
dec
adc
pushf
and
sub
loope
mov
adc
jge
ficoml
sbb
les
cmp
push
add
dec
add
mov
aam
pushf
rolb
ret
and
call
rolb
jns
push
pop
loope
mov
shlb
mov
cmp
inc
mulb
cld
rcrb
inc
imul
mov
cli
or
sub
daa
addl
or
xor
scas
xchg
xlat
xchg
inc
test
fcoms
xchg
loopne
loop
out
lods
mov
aad
add
xlat
adc
std
pop
fdivrs
testb
aam
mov
mov
stc
add
adc
sahf
in
add
add
test
test
insl
jmp
jb
mov
dec
int
data16
cmp
fadd
scas
stos
cli
mov
xchg
pushf
mov
jg
mov
lds
jno
dec
push
sbb
icebp
mov
or
pop
mov
pop
jb
mov
pop
xchg
xor
push
cmp
shlb
add
xchg
push
ljmp
or
pop
iret
cmpsb
mov
and
clc
ja
push
insb
add
adcb
push
pop
in
mov
out
mov
xor
jb
add
dec
xor
movsl
icebp
imul
lock
xchg
ljmp
scas
jp
mov
je
jp
push
pushf
les
xor
mov
lods
xchg
xchg
es
roll
test
mov
orb
sub
jbe
push
daa
xor
jbe
mov
add
jo
enter
icebp
mov
bound
cmp
loope
test
call
mov
dec
or
out
int3
insb
mov
mov
stc
adc
sbb
sbb
lea
sahf
or
push
mov
in
mov
lcall
incl
jno
adc
dec
jbe
cld
xchg
sbb
and
lcall
pop
and
and
or
rcr
jg
or
and
adc
je
or
or
incl
or
test
sbb
ljmpw
in
xchg
push
fwait
dec
cmp
sub
les
mov
dec
dec
or
xor
test
out
jl
or
cld
xor
cmp
mov
dec
add
clc
ja
dec
adc
neg
in
fwait
jg
jb
adc
test
mov
cltd
push
sub
bound
popl
mov
add
cltd
aas
mov
daa
mov
mov
sbb
add
mov
pop
sbb
dec
mov
int3
inc
sbb
lock
cmp
test
pushl
fwait
push
add
loopne
out
inc
add
leave
into
lock
in
push
jae
xchg
mov
aaa
pop
jbe
pop
xchg
mov
xchg
adcb
mov
stos
rolb
je
movsb
adc
orb
mov
frstor
loopne
mov
push
adc
cmp
mov
adc
push
fwait
inc
cs
cwtl
sub
in
dec
pop
add
add
or
pop
mov
cwtl
insb
or
mov
in
inc
loop
mov
scas
cmp
call
dec
inc
movsl
in
inc
sti
faddl
aam
fcmovu
outsb
adc
out
dec
xchg
sub
imul
test
xchg
dec
fucomip
dec
pop
movsl
or
jmp
daa
sahf
add
decl
test
mov
push
mov
loope
push
pop
nop
jb
sub
loopne
and
lods
fcompl
aaa
sub
add
fcomps
test
hlt
xchg
mov
dec
push
ret
cmpsb
sub
push
mov
sbb
out
or
jbe
lods
cwtl
lahf
fwait
outsb
stos
pop
inc
mov
dec
pop
pop
mov
test
xlat
sub
outsl
les
movsl
cmpsb
sub
shll
sub
lock
push
fisubl
cld
jbe
mov
mov
push
mov
sub
mov
jmp
movsl
push
add
movsl
sarb
test
push
add
mov
lret
rolb
roll
cmp
idiv
aaa
adc
je
push
arpl
or
and
scas
stos
fsubs
movsb
jns
ljmp
hlt
push
aam
xor
jmp
pop
in
push
mov
into
sbb
gs
cmp
mov
mov
push
sbb
pop
add
cmp
dec
repnz
xchg
and
cltd
outsb
pop
popf
and
cmpsl
in
call
clc
inc
std
push
pop
add
xor
mov
lahf
jo
rol
sarl
mov
push
imul
mov
test
hlt
xor
pop
test
js
aam
cmp
in
add
sub
pop
adc
rcrb
and
adc
push
mov
cmp
scas
inc
and
push
imul
inc
adc
icebp
add
lods
pop
mov
js
sbb
aaa
cwtl
inc
popf
mov
xchg
mov
xchg
aam
es
xor
fcomip
push
sbb
sub
int
adc
pusha
inc
out
repnz
cmp
and
aas
int3
cld
into
aam
jl
test
inc
cmpsb
dec
adc
adc
enter
push
push
fildl
inc
or
ljmp
je
inc
imul
jbe
mov
test
or
inc
push
nop
pop
push
push
shrl
enter
push
lds
aaa
cwtl
cltd
cs
inc
push
aad
jno
pop
adc
lret
push
call
adc
fsubrs
and
mov
add
lods
shrl
lods
sahf
xchg
scas
loop
push
shlb
cmp
hlt
pop
out
fildll
dec
sub
pop
test
mov
cld
push
ljmp
cmc
mov
cs
test
sbb
pop
out
cmp
mov
sahf
aaa
xchg
push
test
idivb
and
ljmp
lea
push
aad
int3
sti
pusha
xor
in
xor
sbb
adc
add
mov
arpl
mov
cli
pushf
and
mov
inc
and
stos
add
addb
out
xor
dec
jg
pushf
mov
ljmp
mov
pop
cmpb
and
mov
int3
jp
test
enter
add
pop
aad
dec
orl
lret
pop
inc
add
or
adc
sbb
and
and
sbb
inc
cld
inc
inc
xchg
jmp
fs
sub
ljmp
into
call
pop
mov
mov
loopne
adc
cwtl
cli
incl
ds
add
mov
nop
call
shrb
and
in
repnz
divb
ljmp
into
jmp
out
pushf
or
pop
push
xor
mov
sarb
shrl
sub
shr
push
mov
jg
jae
xor
add
out
test
push
decb
jp
adc
xchg
mov
cmpsb
cmp
mov
jo
adc
push
jbe
cmp
lahf
movsl
fcom
sbb
repz
jg
dec
movsl
inc
call
xchg
ljmp
das
cs
decl
das
jns
je
cmp
stc
test
les
xchg
add
xlat
shlb
pop
mov
sub
sbbb
decl
dec
fisttps
insl
sub
arpl
cmp
pop
clc
ljmp
and
inc
mov
sub
cwtl
rcr
add
ja
push
cli
enter
mov
inc
roll
adc
data16
jmp
insb
dec
jle
test
add
fmuls
nop
inc
inc
mov
xchg
fdiv
lahf
inc
ffree
cmpsb
std
pop
jne
js
adc
js
roll
bound
and
fcompl
cmpsb
xor
incl
mov
sahf
pusha
add
mov
push
push
and
repnz
jp
pop
arpl
es
aad
and
rcrb
lock
add
xor
push
mov
test
sub
jge
dec
pop
sahf
cmp
xlat
scas
or
ret
rclb
add
xchg
push
data16
or
bound
push
push
fmull
lret
movsb
xchg
loope
jecxz
cmp
or
pop
or
dec
lret
xchg
cmp
test
pusha
and
cmp
sbb
xor
pop
sub
js
jae
sbb
or
push
cmc
adc
mov
sub
add
mov
scas
add
pop
push
rolb
mov
xorb
enter
add
cli
pop
pop
and
in
out
jp
les
sarb
inc
add
pop
aad
push
jne
lahf
push
mov
jmp
cwtl
sbb
fcoml
insb
negl
inc
push
cs
adc
test
sub
out
adc
cmpl
sub
sbb
cmp
rorb
jmp
mov
ss
push
sahf
mov
inc
sbb
pop
adc
arpl
mov
pop
mov
adc
popf
push
and
ret
sbb
pop
mov
lock
add
mov
adc
pushl
xor
xchg
sub
sbbb
jmp
fisubrs
testl
xchg
fldcw
ljmp
popa
mov
cmpb
shlb
add
pop
ror
push
or
jg
out
xor
xor
or
sub
push
outsl
ret
and
sbb
scas
cltd
xor
adc
add
ds
ret
out
xor
xor
fildll
loope
mov
mov
cmp
mov
mov
cwtl
adc
mov
lcall
adc
ljmp
pop
pusha
or
mov
jbe
ret
jmp
icebp
inc
xor
es
jg
andb
outsb
sub
mov
push
dec
and
ljmp
jno
and
adc
xchg
or
inc
xchg
or
adc
fisubl
add
inc
ja
or
xchg
rcr
add
jb
inc
mov
std
lret
inc
xchg
dec
xorl
decl
setbe
add
in
or
add
cld
fisttps
mov
popa
adc
mov
fcomps
in
cld
into
jg
fstps
js
jecxz
dec
adc
mov
repnz
call
push
or
flds
int3
cmp
push
std
lcall
hlt
sbb
shlb
pop
add
pop
mov
push
sub
rcrl
mov
inc
ret
stos
ljmp
mov
lds
sbb
mov
sbb
gs
or
mov
inc
test
cltd
lret
out
test
pop
add
mov
and
add
add
pop
cmp
stos
sub
test
xor
or
test
mov
mov
je
std
or
in
xor
adc
call
lret
call
push
xchg
into
rcr
aad
repnz
push
or
add
cmp
push
es
fldcw
or
scas
adc
in
cs
sub
push
push
sbb
fs
jp
sbb
dec
in
out
sbb
fsubl
sbbb
repz
cmp
in
fmuls
xchg
inc
jg
and
jge
push
insb
sbb
sahf
adc
outsl
mov
and
pop
addb
pop
xor
jb
incl
fisubl
nop
or
mov
mov
lock
mov
mov
mov
ret
adc
or
insb
jne
jl
jno
and
popf
adc
mov
jns
insb
shrb
ds
xchg
adc
xchg
dec
lea
int
push
add
insl
mov
in
pop
sbb
push
std
or
outsl
mov
jo
inc
gs
ljmp
stc
xor
sbb
adc
dec
int3
sbb
pop
test
or
js
lods
inc
mov
testb
push
jbe
clc
movsb
xchg
or
ret
xor
xchg
mov
orb
lock
cmp
or
pop
xchg
testl
xbegin
daa
push
pop
lret
icebp
jb
add
lahf
mov
adc
dec
jp
ds
mov
roll
pushf
inc
in
mov
imulb
cmp
pop
rorb
mov
loopne
jp
push
push
cs
sbb
mov
loop
pusha
clc
push
out
or
push
inc
pop
hlt
and
add
sbb
lcall
stos
inc
pop
addr16
cmp
repz
clc
or
dec
pop
insb
stos
cs
mov
ja
or
mov
mov
sahf
mov
icebp
xor
and
sar
xchg
mov
jbe
add
mov
mov
pop
dec
in
das
mov
and
repz
cmp
mov
leave
stos
rcll
test
adc
or
pop
inc
int3
mov
push
sub
jne
push
sbbb
shrb
inc
aas
pop
sub
jle
mov
mov
adc
dec
and
imul
jmp
jne
ret
in
fcomp
fwait
mov
outsb
mov
stos
add
xchg
inc
jns
sarl
enter
and
clc
aam
xchg
lea
and
lock
jnp
outsl
fbld
rclb
es
lahf
enter
stos
loope
cld
aas
and
cwtl
dec
xorb
mov
or
add
sti
incl
sub
push
inc
xlat
mov
add
mov
fs
sbb
sub
cmp
lahf
icebp
mov
adc
inc
mov
int
addl
call
inc
cmp
sub
fists
add
xchg
in
je
and
andb
fiaddl
je
push
lds
xchg
jb
outsl
cld
jp
sub
out
mov
cs
rcl
xchg
jle
fcoms
adc
mulb
dec
icebp
sbb
xor
push
mov
lock
cmpsl
mov
or
or
xchg
sbb
in
ja
mov
jmp
mov
jne
push
jle
repz
pop
push
add
pop
lods
fists
ja
cs
push
cmp
hlt
push
dec
mov
or
push
and
shll
add
call
adc
imul
insb
cld
ds
xchg
add
insb
pop
or
push
rcl
scas
mov
jp
jb
sahf
cmpsl
push
mov
and
jbe
aam
mov
js
in
adc
inc
scas
mov
push
stc
movsb
cmpsl
mov
pop
fcoms
sbb
andb
clc
or
jge
jb
sbb
movsb
scas
mov
and
sbb
jo
addr16
add
xchg
xor
movsb
hlt
mov
sub
push
lods
push
push
decb
loope
aas
cs
lock
jo
or
push
pop
pusha
adc
push
mov
mov
cmp
lock
les
cli
mov
cmp
and
rorl
mov
hlt
je
rolb
mov
decl
sub
out
cmp
push
add
mov
bound
mov
std
jl
jo
fwait
or
mov
pop
std
aad
and
jne
call
nop
std
fists
test
out
xor
int3
cmpsl
sbb
insb
inc
xor
cmp
pop
add
add
inc
call
adc
ret
and
pop
jge
jl
js
rorb
flds
pop
sarl
lods
sub
sbb
hlt
sub
out
adc
les
sbb
pop
mov
pop
xor
mov
mov
jbe
sbb
mov
or
mov
int3
push
and
fwait
xor
sbb
adc
loop
mov
jp
add
rolb
xchg
jle
mov
xor
pop
mov
sbb
push
push
mov
inc
cld
xchg
rorl
or
data16
and
int3
sbb
push
inc
popl
subl
add
nop
jge
add
dec
cld
fisttps
xor
cwtl
inc
shlb
jne
pop
lock
imul
decb
push
mov
jo
mov
sbb
call
mov
pushf
add
or
inc
ret
popa
mov
xchg
cmp
mov
pushf
xchg
dec
lcall
test
sarl
rcrb
pop
dec
adc
loop
push
mov
test
cmp
push
nop
pushf
sbb
sub
out
rclb
mov
inc
repz
jo
mov
ljmp
ss
adc
push
and
fcmovu
push
ljmp
popl
add
mov
pop
clc
sub
xor
inc
xchg
imul
jle
inc
sbb
icebp
dec
movsl
xchg
movsl
dec
scas
fwait
stos
test
dec
insb
adc
jle
jge
in
cmp
inc
enter
ljmp
xor
mov
mov
and
shrl
mov
icebp
into
popf
ds
mov
movsb
fbld
jg
popl
jp
mov
add
into
sub
inc
rorl
sbb
pop
mov
add
fcomip
repnz
push
or
mov
mov
pop
insb
repz
mov
xchg
loop
sbb
aam
js
adc
push
or
xchg
xchg
and
add
aas
push
ljmp
push
fadd
dec
jnp
add
fdivp
fisttpll
mov
mov
jo
insl
push
arpl
sub
fcoml
adc
pop
xchg
popa
cmpsb
aaa
sbb
loop
jle
sub
idiv
lret
jle
rolb
jo
xor
mov
es
and
cli
iret
inc
dec
sbb
push
lock
aad
ret
and
add
addr16
xchg
mov
sub
jl
mov
and
adc
std
jmp
jo
pop
les
mov
sbb
div
clc
adc
dec
je
enter
xor
sub
decb
inc
gs
arpl
and
ss
jns
mov
adc
mov
inc
mov
push
mov
sub
sahf
insb
stos
jno
popa
xor
push
aas
adc
insl
add
inc
xchg
insb
cltd
xor
fs
pop
sbb
inc
adc
jbe
adc
push
sti
mov
dec
enter
jle
jg
test
movsl
mov
ror
gs
ret
inc
test
sbb
out
cmp
mov
dec
push
inc
mov
lock
and
out
mov
dec
loope
out
pop
sub
pusha
jl
inc
pop
lahf
fisubrs
sbb
sub
cmp
loopne
mov
loope
je
xor
jl
lds
loope
push
int3
adc
fadds
dec
jb
movsl
pop
rcrl
mov
stos
pop
int3
add
mov
mov
jl
loope
insl
sar
inc
aas
or
fsts
aas
cmp
cmp
in
cmpsb
test
inc
adc
addr16
or
ret
push
mov
shrl
cltd
js
add
sahf
cwtl
addb
xchg
push
add
je
jns
mov
out
aad
or
jnp
mov
mov
and
mov
incl
mov
jmp
lret
sbb
add
inc
jns
add
xchg
cmp
psubsb
mov
int
mov
push
test
push
sub
loope
lcall
jne
hlt
mov
mov
fmul
aam
lods
push
inc
dec
xchg
outsl
fidivl
js
aad
stos
enter
inc
int
and
ret
or
faddl
outsl
loope
test
mov
test
adc
std
lds
lods
mov
inc
fidivs
test
push
add
std
test
xchg
inc
xor
sub
stos
pop
sub
inc
push
sub
push
mov
sbb
cmp
mov
add
out
xchg
dec
and
jp
mov
pop
push
push
and
inc
or
add
dec
mov
jle
lret
jecxz
push
test
push
push
dec
fsubrl
add
arpl
int3
xor
pop
decl
xor
popf
pushf
sbb
jge
dec
testb
pop
push
push
lds
leave
int
mov
xchg
clc
sbb
add
imul
fbstp
sti
mov
or
mov
fs
adc
sub
cmp
xchg
inc
adc
pop
inc
out
mov
cld
imull
add
fdivl
insl
or
rcrb
sahf
add
es
push
pushf
stc
popf
sub
mov
adc
jg
shrl
ret
push
test
xchg
mov
enter
jno
das
inc
data16
mov
mov
je
les
xor
push
mov
sbb
sub
insl
inc
add
call
xchg
push
movsb
pop
add
xorb
dec
mov
pop
jl
dec
push
inc
scas
stos
and
dec
ss
addr16
shrb
imul
pop
ficoml
jb
mov
cld
les
cmp
aam
jge
xchg
mov
xor
adc
xor
push
cs
ds
dec
jbe
in
lds
jl
and
and
sahf
xor
fbstp
stc
adc
add
js
mov
mov
test
fdivrl
cwtl
test
mov
mov
mov
loopne
test
mov
outsl
lods
and
mov
lock
cs
adc
fbstp
sbb
sub
cmp
mov
das
mov
ja
mov
mov
sub
and
ret
push
inc
shrl
addr16
inc
outsb
push
add
pop
stos
mov
cmp
xor
fs
loopne
push
pop
push
daa
xor
push
sbb
cwtl
xor
nop
and
dec
cmpsb
popf
mov
jae,pn
fs
push
lahf
scas
push
in
js
xchg
push
xor
cmc
scas
shll
cld
fsubrs
gs
negb
pop
jns
cvttps2pi
sbb
adc
jl
ds
rorl
adc
insb
lds
add
sub
hlt
xor
mov
or
jle
push
test
push
cltd
jecxz
xchg
mov
jnp
inc
jg
mov
movsb
das
inc
js
rcl
sahf
shrb
jg
xchg
jl
ss
dec
mov
sbb
mov
dec
mov
rcrl
add
stos
fs
jl
in
adc
fs
inc
cmpsl
jg
push
icebp
or
mov
pop
popa
cmp
aas
mov
add
enter
pop
lods
adc
push
mov
xor
add
rcrl
out
and
mov
loop
mov
ljmp
mov
pushf
and
stos
mov
fiadds
ret
cltd
mov
jmp
les
lea
lahf
push
jg
orb
mov
cmp
mov
jle
xlat
sub
cld
decl
mov
pusha
out
sahf
loop
xchg
dec
xchg
lahf
push
mov
nop
or
shl
add
into
sub
mov
mov
mov
loope
stc
jp
xor
sub
pop
test
rcrl
ffreep
cmp
into
or
aam
cmpsl
push
mov
cmp
jge
sahf
test
and
das
xorl
ja
je
adc
cltd
out
leave
add
mov
sub
icebp
pop
or
push
xor
dec
cmp
loope
add
loopne
cmpsb
dec
mov
fucom
xchg
pusha
fdiv
fwait
cmpsb
cs
loopne
sub
dec
test
add
loope
jo
pop
xlat
call
jno
cmp
test
xbegin
and
nop
lods
jb
mov
fwait
cld
lahf
mov
cmp
pop
jg
sub
test
and
cmp
adc
push
jmp
jo
push
or
jle
pop
jb
cmp
xor
mov
and
hlt
cmp
pop
or
hlt
outsb
add
sarb
jo,pn
in
fsubrl
js
stos
sbb
cmp
fisttps
push
pop
jns
pushf
testl
push
loope
jnp
cld
out
xor
or
out
clc
incl
cwtl
mov
enter
nop
fdivr
dec
push
or
ret
add
and
inc
lods
mov
mov
cmp
sarl
and
mov
mov
aam
in
push
dec
popa
cmpl
cmpsb
jmp
rclb
mov
scas
loop
jmp
gs
stos
xchg
js
test
loopne
push
std
scas
pushl
push
js
push
jge
lds
movl
out
clc
inc
test
pop
ret
add
cmp
stos
jp
dec
adc
mov
icebp
xchg
mov
cmp
aaa
push
js
fidivrs
mov
ficomps
outsl
inc
nop
pop
popa
repz
pushl
clc
pop
lds
out
inc
mov
or
and
pushl
test
lock
cmp
pusha
hlt
filds
adc
cld
push
xchg
mov
mov
clc
cwtl
xor
ret
pop
add
not
mov
std
add
popa
scas
mov
push
or
cmpsl
add
mov
aad
lods
mov
arpl
orl
pop
sahf
int3
hlt
xchg
movsb
jecxz
jno
cmp
and
sbb
addr16
sar
out
cmp
cmpsb
cmpsb
cmp
addl
mov
cmp
xchg
sbb
es
fistl
mov
and
lods
inc
cmp
cld
cmpsb
out
cli
and
imul
or
clc
sub
aaa
int3
jne
dec
je
push
cwtl
sahf
js
lret
rol
cli
mov
cmpsl
mov
jge
xor
pop
les
cmp
adc
jb
mov
pop
dec
adc
push
test
icebp
add
sub
ds
push
mov
mov
js
lcall
fdivrl
ljmp
push
jo
and
add
or
jl
cmp
add
adc
scas
or
cs
pop
pop
sbb
shl
repz
xchg
das
cli
mov
lock
pop
push
repnz
aad
or
mov
push
ret
and
es
or
xor
mov
dec
clc
mov
inc
pop
enter
and
mov
les
jg
mov
mov
xchg
inc
mov
xchg
and
imul
sub
mov
push
adc
bound
call
push
cwtl
dec
js
or
hlt
jle
shlb
push
fldt
jmp
cmp
add
cmp
fmuls
sbb
xchg
mov
jbe
pop
cmp
jb
ja
call
mov
cmpb
mov
test
pushf
or
mov
inc
ja
loope
sbb
nop
mov
inc
xchg
lods
inc
xor
inc
push
cmp
jo
jb
mov
push
insb
inc
iret
sbb
aam
mov
push
adc
insb
adc
mov
mov
mov
and
fnclex
inc
loopne
dec
add
orb
enter
iret
cmp
sub
adc
sub
rcrb
rolb
jge
icebp
push
scas
subb
dec
shlb
decb
adc
jl
pop
and
ss
push
or
xchg
push
fdivl
lock
push
mov
jge
add
out
mov
hlt
stos
ror
dec
in
lods
xlat
sbb
mov
jno
in
orb
sbb
push
xor
sbbb
adc
pushf
sbb
fmul
pop
out
and
in
push
add
mov
mov
rcr
cmp
sbb
mov
data16
mov
data16
add
add
cmc
imul
cmp
adc
es
cmp
inc
test
mov
ror
ja
add
and
cmc
ja
int3
adc
cwtl
xor
jl
addb
fwait
sbb
incl
sti
inc
sbb
mov
test
xor
sub
sbb
pop
jl
fistl
or
rol
lods
xchg
sbb
imul
loopne
shll
push
rol
pop
and
sub
jne
icebp
jg
xor
mov
jbe
mov
cs
adc
inc
push
adc
xor
addl
dec
sbb
call
mov
jb
dec
loopne
lret
add
pusha
frstor
fstenv
sbb
xchg
cmpsb
push
aaa
push
outsl
iret
imul
shr
inc
adc
sbb
lcall
in
outsl
sarl
xchg
lahf
adc
ljmp
inc
movsb
ret
push
addl
scas
aaa
rcrb
or
inc
add
andl
jl
das
loopne
mov
cmpsb
cli
bnd
popf
and
vmovdqu
jae
add
or
add
dec
stc
cmp
jb
jne
loopne
cmp
jecxz
ds
jg
mov
ds
sahf
movsb
les
fidivl
les
mov
cmc
outsl
call
cmpsl
inc
pushf
das
fcompl
xchg
call
loop
rorb
sbb
add
sti
jecxz
jl
push
cmpsb
jecxz
call
add
xor
popl
hlt
adc
push
rcrb
int
xor
js
jno
mov
sarl
xchg
xor
daa
add
mov
xchg
xor
mov
aam
aam
rcl
or
int3
test
sahf
out
jle
dec
xor
js
dec
mov
xchg
cmp
ja
dec
sbb
cmpsb
mov
adc
cmp
cmp
lds
imul
mov
add
jecxz
mov
or
mov
lock
jo
arpl
cmp
cltd
ljmp
rol
and
add
clc
aaa
push
mov
enter
sub
mov
lcall
call
pop
sub
loopne
dec
std
cmp
sarl
add
mov
xchg
pusha
dec
and
push
outsb
pop
aam
inc
aam
pop
mov
mov
ss
xor
leave
cli
push
xor
push
cmpsb
mov
inc
pop
lds
lock
pop
insb
push
pop
xchg
jbe
mov
call
jl
test
push
rol
outsl
test
inc
push
dec
in
add
jl
or
xchg
pushf
jle
jle
mov
pop
mov
cmc
or
loop
adcl
xchg
push
mov
mov
pop
and
call
mov
outsl
jmp
outsb
stos
mov
lea
cmp
inc
and
das
mov
jecxz
push
and
sub
int
daa
dec
loope
push
adc
rclb
sahf
movsl
lea
add
xchg
mov
adc
mov
cltd
add
mov
decl
push
fidivrl
cwtl
dec
cmp
dec
adc
mov
insb
mov
out
lock
add
jb
mov
cmpsl
adc
cld
inc
and
lret
out
xor
add
or
sbbb
scas
push
push
repnz
incl
lea
andl
in
pop
shrl
cli
lds
or
and
mov
and
or
repnz
inc
lock
int
ja
jmp
sub
lret
lcall
pop
cmp
mov
add
stos
adc
lea
ljmp
in
into
and
sahf
adc
sub
movsb
hlt
mov
enter
push
dec
pop
inc
loop
mov
cmp
mov
jle
lea
push
decl
mov
repnz
or
jns
xor
push
adc
mov
mov
sbb
bound
jnp
int3
cmp
fbstp
lcall
xor
sti
cmp
imul
sahf
int3
jp
iret
jp
clc
out
test
cmp
jle
int3
add
aas
inc
fdivr
cmpsl
and
movsb
cmpb
push
xlat
and
push
dec
and
loopne
sbb
lods
mov
pop
add
and
loop
imul
jp
fwait
lret
cmc
dec
ret
icebp
adc
dec
jl
mov
xor
outsb
jp
nop
into
lcall
into
cmp
xor
sbb
loopne
fucomi
inc
mov
test
push
xor
sbb
sub
sub
data16
mov
movsl
and
fidivl
out
enter
jae
and
out
enter
daa
lret
inc
clc
inc
or
or
push
inc
arpl
lds
iret
ud0
add
divb
and
push
in
dec
xchg
cmovno
pop
push
hlt
mov
xchg
pop
movsl
or
push
push
fnstenv
cmpsl
add
adc
jl
add
lds
jp
xchg
ljmp
pusha
mov
outsl
xchg
loopne
sub
cli
push
cmpl
pusha
xor
fdivs
popf
sbb
dec
stc
jae
cmp
push
jmp
loope
jno
faddl
inc
mov
and
test
ret
and
fiaddl
cs
pop
test
push
pop
loop
dec
insb
test
lock
push
cmpsl
mov
div
shll
ljmp
aam
xor
mov
xchg
pop
in
jo
cmpsl
enter
mov
in
shll
lret
in
fbld
sub
mov
call
and
xchg
adc
scas
or
adc
les
jl
or
or
sub
adc
jge
das
inc
or
mov
mov
xchg
add
es
test
repz
lods
rcrl
pop
cs
pop
mov
sbb
push
jne
or
xor
mov
mov
ret
mov
add
cmpsl
icebp
mov
mov
dec
adc
push
inc
lock
push
sub
hlt
jbe
movsb
xor
pop
xor
rorb
gs
push
sbb
jnp
out
out
das
xchg
bound
sub
pop
dec
repz
cmp
out
xchg
addb
mov
shll
add
pushf
cmpsl
push
fdivrp
jbe
push
xor
cs
dec
inc
cmp
and
add
jecxz
and
incb
dec
mov
movsb
or
rolb
cmp
insb
fidivs
imul
cmpb
mov
push
xor
cmp
mov
push
push
lret
aad
add
f2xm1
mov
mov
cmp
jne
pop
inc
inc
sbb
lods
dec
add
xchg
xchg
xchg
adcl
sarl
repz
leave
je
clc
les
cld
sbb
sbb
icebp
sub
outsb
add
lock
mov
adc
lahf
ds
popa
add
sub
adc
shl
popa
test
movsb
push
or
andb
cmp
es
hlt
call
outsl
shlb
sbb
clc
xchg
sbb
arpl
aam
jne
sub
mov
loop
push
test
and
addb
pop
icebp
roll
xor
repz
push
das
lock
pop
arpl
sub
adc
dec
out
pop
aam
loope
in
bound
int3
jle
xchg
jb
or
push
cmp
adc
ret
push
adc
inc
test
inc
in
pushf
mov
dec
outsl
fidivrl
or
or
push
and
aaa
jne
stos
loopne
cld
add
loopne
cltd
push
push
pop
mov
push
data16
loope
inc
dec
pop
jl
into
sbb
pop
mov
add
xchg
sbb
dec
sbb
jmp
or
negb
or
mov
cmp
adc
les
lds
push
cld
and
out
std
in
daa
call
pop
stos
sti
push
out
jmp
stos
pop
adc
jbe
adc
fadd
lods
add
pop
leave
shrb
jl
dec
pusha
ljmp
or
aaa
ficoml
and
or
jb
mov
mov
sbb
rcrb
inc
sub
dec
push
adc
ret
cwtl
mov
mov
lret
jbe
rcrb
cmp
pop
lock
scas
test
adc
xchg
lock
inc
mov
inc
jge
sti
dec
scas
adc
stos
dec
add
and
pushf
pop
in
in
push
and
push
adc
jg
dec
sub
js
xor
mov
xor
jle
cmp
adc
lcall
cltd
cmp
jb
add
xchg
outsl
and
je
ja
repz
jns
jo
arpl
mov
cmc
pop
ljmp
fwait
add
inc
jo
call
xchg
push
mov
leave
cmp
shlb
pushl
adc
mov
int3
pop
mov
rorb
inc
xchg
leave
adcb
sbb
in
mov
ret
fiaddl
sbb
or
ds
repz
test
cmp
popf
add
jmp
inc
xor
adc
test
out
cli
mov
adc
sbb
iret
bnd
sub
lcall
fldenv
inc
mov
mov
lock
lcall
shr
mov
or
mov
adc
pop
sub
pop
mov
lret
movsb
push
cmp
adc
push
pop
xchg
jno
push
dec
adc
outsb
mov
adc
mov
or
xchg
or
ret
xor
add
adc
movsl
aaa
pop
push
sbb
push
repz
add
clc
scas
clc
fwait
nop
or
iret
rcr
sbb
outsl
cmp
je
mov
push
mov
xchg
inc
sub
xor
and
ja
add
inc
dec
cs
mov
fcomps
aaa
cmp
mov
sub
add
cmp
call
xor
jl
sbb
sub
mov
outsl
clc
aad
xor
jmp
adc
jg
scas
stos
andl
push
xchg
das
jl
mov
cmc
outsl
jecxz
cwtl
clc
adc
fisubs
pushl
out
int3
mov
gs
test
repnz
fdiv
clc
mov
mov
jmp
icebp
popa
jnp
jae
sbb
repz
mov
loopne
je
aas
xor
jmp
mov
call
ficomps
fs
jl
dec
push
push
xor
jl
mov
std
add
dec
mov
pop
sbb
jno
icebp
les
insl
cmp
movsb
imul
outsb
adc
dec
dec
push
or
jg
cmp
call
jg
xor
xchg
push
cli
add
dec
or
andb
fcomps
fistl
push
and
cmpsl
adc
push
nop
fbstp
mov
jae
add
inc
test
shlb
sub
and
rorb
jg
sbb
lods
lcall
enter
add
and
cmp
enter
mov
je
js
xchg
cmp
out
mov
push
out
sub
jge
adc
xchg
jbe
imul
dec
addb
jmp
inc
adc
push
pop
mov
adc
fidivl
pop
fwait
lods
stos
subb
jg
in
test
sub
xlat
push
pop
hlt
add
pushl
push
cmpl
inc
outsl
arpl
or
push
jne
ss
cmpsb
stos
arpl
daa
mov
jg
sub
sbb
int3
out
jbe
rcrb
and
mov
test
incl
pop
popf
push
clc
mov
ffreep
push
add
je
stos
call
or
xor
dec
and
sbb
adc
cld
pop
ret
rcrb
push
mov
sbb
dec
fs
bound
xchg
push
sbb
outsl
cli
add
dec
push
test
rorb
daa
and
mov
rolb
incl
inc
xor
cwtl
je
mov
sbb
stos
in
adc
adc
out
inc
mov
mov
cwtl
mov
mov
mov
rorb
inc
jb
idiv
inc
cli
sub
sarb
add
fisubl
iret
jge
testb
ret
cmp
or
mov
mov
nop
and
jg
mov
inc
int3
mov
test
cmp
in
add
stos
bound
lret
or
xchg
rclb
test
pop
iret
dec
pop
push
test
in
or
adc
xchg
int3
sbb
mov
in
sbb
mov
popa
arpl
xor
pop
jmp
jae
mov
rolb
push
mov
push
sbb
add
nop
pop
jge
add
adc
or
add
std
dec
loop
xchg
or
call
inc
aaa
pop
loop
sbb
in
add
std
nop
jo
inc
pop
push
icebp
jg
add
mov
das
xchg
adc
ss
out
loope
icebp
mov
mov
xor
add
mov
into
rcl
mov
mov
std
or
in
adc
push
pop
ror
sub
ficoml
out
les
add
mov
aad
mov
test
mov
mov
cwtl
test
xchg
sbb
mov
incl
stos
movsl
sbb
jb
adc
mov
inc
sti
xchg
push
dec
jp
add
ror
in
push
jl
xchg
lods
or
insl
jmp
rcr
xchg
aam
dec
pop
mov
mov
jp
cld
xor
es
shlb
xor
iret
sti
push
aam
incl
add
cmp
pop
pop
lret
pop
cmp
inc
ret
imul
cld
or
stos
stos
sbb
or
mov
rolb
inc
push
fsubl
hlt
or
mov
loop
bound
mov
in
mov
inc
int3
sbb
lcallw
sbb
pop
das
dec
mov
incb
add
inc
bound
xchg
cmp
ret
xchg
icebp
shlb
ret
lock
fs
xor
cs
fimull
xchg
xchg
sub
repnz
lcall
push
mov
fwait
cmpsb
mov
add
mov
push
iret
rorl
push
data16
mov
add
insb
dec
and
or
loop
xor
mov
mov
lods
mov
pop
movnti
cmpsb
test
adcb
or
cmp
decb
loopne
ja
shll
push
loop
push
popf
sti
fsubl
pop
mov
call
decb
mov
xor
and
mov
notl
aaa
sub
daa
dec
cmp
cmp
xor
sbb
pop
popf
pop
jb
cmp
add
and
cmc
je
and
clc
loopne
test
xchg
bound
mov
mov
rcr
lcall
adc
adc
add
loopne
sbb
cld
out
add
fdivr
js
cmp
and
inc
xor
mov
ret
movsb
mov
fyl2x
jg
pushf
jbe
pop
lock
push
jnp
inc
dec
mov
mov
xor
fdivrl
js
and
lcall
ds
int
imul
sbb
mov
popf
loope
or
and
mov
popa
movsb
jg
ret
cmc
and
xor
push
in
mov
aam
icebp
movsb
push
cmpsl
adc
std
sbb
sahf
adc
sbb
cmpsl
inc
or
xor
ficompl
fsubl
scas
mov
enter
mov
das
cmc
jmp
inc
jae
daa
nop
imul
inc
mov
jl
daa
pop
mov
lds
clc
inc
mov
movsb
sub
in
push
push
jg
mov
and
sbb
or
ret
ds
icebp
loope
or
sbb
fisttps
cs
mov
sar
dec
mov
push
and
dec
adc
fcoml
add
adc
hlt
das
jno
fimull
add
xchg
loopne
cmp
mov
pushf
sbb
filds
sub
push
loop
mov
xchg
les
inc
mov
or
jg
aad
and
clc
scas
mov
add
push
or
imul
xor
jecxz
sub
lcall
cmp
lods
xchg
dec
fldl
xlat
mov
mov
jle
mov
leave
inc
add
clc
mov
or
and
dec
jp
test
and
or
iret
pusha
xchg
and
dec
dec
xchg
sub
xor
insl
sub
jo
or
fbstp
inc
addb
mov
call
mov
filds
dec
dec
dec
outsb
add
and
dec
call
sub
adc
or
adc
jne
sub
fdiv
inc
test
jnp
adc
and
sub
ret
and
shlb
mov
fs
pop
mov
out
pop
cwtl
push
xchg
jnp
jge
cmp
xchg
nop
les
mov
or
lods
and
scas
cli
aaa
add
cld
mov
dec
sub
pop
add
fisubrs
jg
jmp
add
push
xchg
popa
dec
outsl
lods
and
repz
sub
loopne
and
adc
pop
mov
dec
lds
mov
lock
mov
cmp
cmp
jecxz
inc
mov
rclb
mov
push
xchg
push
jmp
nop
fwait
cs
jb
popa
sub
std
lock
shlb
jb
jmp
push
fsubl
pop
pusha
xchg
call
test
dec
jnp
lea
in
push
push
mov
mov
xchg
addl
sbb
sbb
xchg
dec
and
mov
lcall
clc
mov
add
xchg
loopne
fstpt
push
mov
push
cmp
cld
addr16
or
jno
adc
mov
push
ret
mov
rol
add
lods
jecxz
push
or
jmp
adc
loopne
mov
cld
fildl
cld
mov
pop
cmp
mov
inc
rclb
lcall
or
jl
aad
push
popa
in
in
cmpsb
nop
jne
inc
cli
and
mov
sub
mov
into
shrb
push
mov
aad
loopne
frstor
inc
xor
cmp
jbe
and
negb
orb
add
cmp
jno
lods
sub
frstor
add
call
ja
popa
fsubl
jl
pop
scas
pop
not
add
add
jbe
push
sahf
clc
xchg
outsb
mov
rcrl
sarb
xchg
xchg
ss
mov
loopne
add
inc
xor
add
rcrb
gs
adc
fs
sti
mov
faddp
arpl
cmp
sub
jg
lea
push
and
clc
sbb
cmp
sbb
aam
jp
sahf
sbbl
je
daa
xchg
mov
test
out
mov
mov
push
xchg
adc
mov
adc
ss
lock
pop
lcall
add
sbb
adc
mov
push
xchg
pushl
xor
add
fstps
cmc
out
inc
xchg
cmpsl
and
outsl
sahf
mov
sub
mov
push
adc
in
xchg
pop
cld
out
insb
xlat
or
lock
orl
lods
call
sub
push
int3
sahf
inc
and
inc
fimull
or
push
mov
xchg
and
mov
movq
push
add
pop
inc
jecxz
or
push
cmp
xlat
das
test
aaa
add
in
xchg
jmp
repnz
mov
jns
ja
js
add
outsl
ret
mov
cmpsb
and
push
ret
mov
bound
adc
push
outsl
jle
push
andb
push
test
test
or
pop
loopne
lods
cltd
or
in
filds
in
sub
push
fwait
mov
adc
and
imulb
sarl
lock
scas
pop
push
jb
aas
pusha
mov
das
adc
lret
data16
gs
mul
push
dec
call
sbb
xchg
dec
xchg
adc
outsl
stos
lcall
in
lret
cld
pop
sbb
sbb
cmp
lahf
cmp
fxch
scas
inc
jp,pn
pop
ficomps
mov
and
sbb
loope
stc
and
dec
inc
aaa
or
jle
or
adc
andl
js
add
shl
push
mov
dec
fiaddl
adc
ds
lret
push
push
aaa
cmp
cmpsl
js
push
pop
cmc
push
jl,pn
imul
inc
sub
mov
jg
les
les
in
jp
inc
jo
stos
dec
cli
pop
push
dec
xor
inc
fs
adc
push
add
and
loope
aas
fstpl
dec
push
idivb
mov
push
xchg
adc
sbb
sub
adc
dec
jecxz
je
stos
xchg
lds
das
mov
cmp
icebp
test
repz
sbb
push
push
jecxz
dec
inc
xchg
shlb
pop
push
js
jbe
iret
fsubrp
sarl
shlb
pop
jmp
pop
dec
adc
dec
repnz
rolb
enter
les
inc
dec
dec
mov
stos
hlt
adc
sub
sub
dec
or
or
popf
and
add
add
jl
dec
lods
clc
mov
punpckhbw
icebp
sbb
inc
test
lods
push
lods
jno
inc
jl
mov
ret
adc
dec
cmc
pop
or
repnz
mov
loop
cmp
xor
push
aad
jbe
pop
add
les
lcall
out
das
fsubs
push
cmp
add
and
jb
test
test
mov
sahf
lock
xchg
in
add
push
pop
les
in
iret
xlat
sbb
sub
ds
jg
rclb
or
fwait
add
push
imul
mov
test
dec
pop
loope
or
inc
loopne
and
pmaxsw
and
cmpsb
pop
enter
je
push
adcb
sbb
push
pop
push
pop
shll
dec
mov
adcb
jb
pop
adc
xchg
gs
ret
decl
lods
sub
push
and
orl
test
push
mov
in
test
cli
mov
das
jne
and
cltd
jns
call
ja
lods
jle
je
pop
cmpsl
dec
jecxz
xchg
ret
rorb
or
pushf
scas
leave
mov
stos
mov
sbb
sbb
sahf
pop
jne
repz
push
test
push
mov
mov
shll
or
fadds
lods
lock
into
sbbl
pusha
icebp
test
pop
and
jle
fistpl
pop
in
xor
bound
int
pop
ret
mov
or
mov
push
sub
push
sbb
mov
push
mov
add
xorb
incl
fisubrl
pop
adc
shll
in
adc
pop
aas
insb
loopne
push
add
nop
inc
inc
cmp
lcall
std
mov
icebp
jl
pop
fbstp
out
pop
xchg
or
push
xor
inc
bound
mov
jle
push
nop
cli
ss
push
mov
out
cld
neg
pop
push
arpl
xchg
repnz
pushf
xorl
jl
push
xor
stos
cs
mov
rolb
inc
cmpsl
roll
pop
xchg
ret
shlb
jno
sbb
xor
imul
icebp
push
enter
shll
adc
stos
jle
sbb
jp
out
or
pop
hlt
mov
jbe
xor
or
jne
and
cmp
scas
dec
mov
mov
push
xchg
adc
ret
mov
scas
xchg
mov
jne
fiaddl
out
call
inc
inc
xlat
and
inc
jmp
arpl
stc
scas
pop
or
xchg
mov
pushf
cmp
ret
fmuls
xor
enter
sbb
inc
ret
mov
adc
sbb
dec
rorb
nop
add
jecxz
pop
or
or
pop
xor
and
inc
call
jp
mov
outsb
jge
popa
mov
inc
popa
jp
adc
lret
or
or
shll
shlb
mov
jp
jg
jo
aam
call
and
adc
mov
sbb
lret
mov
mov
incb
out
imulb
loopne
cmp
ja
jb
push
dec
mov
shr
add
loopne
cld
sbb
push
out
out
ljmp
cmp
xor
inc
imul
les
mov
or
ret
daa
enter
cmpb
mov
push
imul
xchg
imul
rorl
pop
cli
aam
js
rcll
push
je
pop
je
je
mov
call
fsubrl
add
dec
sbbb
sub
pushf
jecxz
xlat
inc
fimull
mov
cmc
mov
clc
or
hlt
mov
add
rcr
cmp
sub
ficomps
or
lock
in
mov
iret
call
sbb
andb
jp
inc
sbb
mov
stc
mov
xor
or
xor
mov
mov
jnp
arpl
popa
pop
popa
push
ja
push
xchg
aam
mov
insb
mov
push
scas
mov
jnp
push
inc
inc
sbb
clc
push
mov
int3
repnz
roll
jg
mov
loop
loopne
arpl
mov
sub
gs
fisubrs
icebp
mov
mov
and
cwtl
call
ss
push
mov
pop
cmpsb
add
sub
mov
cmp
pusha
mov
test
xchg
mov
mov
aaa
mov
cmc
add
xor
or
pop
mov
jg
push
hlt
mov
jmp
jne
pusha
sarb
aad
pop
and
add
inc
mov
mov
je
sub
movsl
sarl
sub
lahf
fnsave
loop
fcoml
call
cmpsl
mov
and
mov
cmp
mov
sbb
repnz
sti
enter
push
scas
clc
pop
std
cmp
incl
test
inc
pop
and
call
jecxz
inc
out
xchg
adc
loope
es
incl
sbb
dec
pop
stc
call
in
fmuls
xor
fisubl
outsl
rcl
push
icebp
sbb
add
or
fisttpll
scas
and
rolb
dec
mov
mov
push
sbb
in
xor
add
movsb
dec
push
fmull
jl
arpl
inc
add
jl
jmp
cmpsb
ret
xchg
fcomip
pop
mov
sub
jg
iret
adc
and
and
push
pop
mov
outsl
mov
and
insl
int3
pop
push
push
decl
dec
jge
std
movsb
cmp
je
mov
clc
fucomip
jne
inc
mov
pusha
and
mov
outsl
sub
or
out
clc
lea
fisttps
mov
shll
sbb
fistpll
adc
jb
mov
xchg
rorl
jns
jge
shrl
jae
sbb
pop
divl
cli
sbb
mov
add
stos
pop
in
stc
movsb
call
jp
jecxz
shrl
enter
in
xchg
fbld
fldl
push
loop
lret
lcall
fs
ret
jb
mov
lock
movsl
cmp
and
gs
cmpsb
incl
mov
mov
and
mov
mulb
fisttps
cld
repnz
sbb
ret
jo
mov
in
xchg
push
ljmp
and
inc
or
das
shlb
mov
hlt
add
or
adc
jb
in
sub
mov
test
ret
mov
mov
push
cmp
mov
mov
lods
mov
ja
es
mov
mov
pop
or
jg
add
lcall
mov
cmp
test
xchg
ljmp
pop
xorb
fisubs
mov
and
xchg
orl
pop
pop
fs
addb
int3
adc
sar
mov
xor
cli
mov
sub
ss
inc
pop
enter
pop
push
mov
bound
xlat
dec
ljmp
or
stos
lock
out
sbb
jge
test
sub
lods
dec
xorb
push
jge
push
in
xchg
cli
jg
lea
lret
test
out
sub
movsl
jecxz
dec
inc
or
into
and
jg
xor
popf
xchg
jge
jbe
push
and
mov
pushf
xchg
les
mov
lock
sbb
cs
leave
clc
int3
pushf
jmp
pop
mov
pop
add
mov
adc
inc
jno
mov
cmp
inc
imul
cmp
pop
push
clc
push
out
dec
in
loop
aaa
add
push
xlat
decb
ss
test
fs
rolb
sub
ds
or
and
pop
add
pushl
imul
and
sub
nop
sbb
or
mov
dec
pop
jle
je
xchg
hlt
rcrl
cld
dec
xor
lret
or
ds
sbb
push
mov
or
ss
lcall
mov
xchg
mov
fisttpll
int3
xor
xor
mov
adc
add
xor
mov
in
pop
addr16
mov
jne
call
or
mov
xor
mov
adc
xlat
into
inc
mov
inc
fadds
pop
jg
sub
push
mov
in
inc
and
pop
xor
add
inc
enter
or
push
scas
in
cltd
mov
xor
clc
repz
fisubrl
pop
js
sbb
adc
or
pop
dec
or
fldenv
push
incl
out
sti
into
mov
mov
sub
ret
jbe
mov
imul
mov
push
popa
loop
xchg
sti
jge
test
ss
mov
movsl
mov
lret
cltd
mov
xchg
dec
loopne
xor
aad
push
loopne
fs
lcall
sub
push
scas
jb
xor
and
jb
mov
ret
cmp
nop
fdivrs
enter
dec
push
pusha
cmp
add
inc
sub
adc
es
mov
fbstp
adc
cmp
xchg
in
incl
sbb
lret
shll
xchg
movsb
and
push
lods
ljmp
ss
cltd
xchg
stos
mov
fbstp
cmp
dec
push
add
inc
cmpl
lret
pop
sarl
push
shrb
out
stos
dec
xor
xchg
push
push
test
pop
mov
pop
mov
push
js
clc
lret
jne
clc
bnd
jmp
fidivrs
je
subb
mov
movl
pop
loopne
xchg
sahf
mov
enter
fdivrs
jge
je
adc
rorl
cld
bound
setge
das
cmp
ja
inc
call
xchg
push
adc
sub
ja
push
sahf
cmp
adc
dec
loopne
data16
pop
mov
inc
dec
xor
xor
push
cmp
push
in
rcrl
sub
sbb
mov
dec
loope
cld
adc
loope
ja
fwait
push
and
mov
ss
push
push
mov
arpl
decl
mov
je
add
and
popa
jg
mov
jnp
cltd
cwtl
repnz
xchg
fs
les
dec
rcr
repnz
push
sbb
jle
jl
mov
add
sbb
add
lds
cmpsb
jmp
jecxz
inc
fbstp
sub
inc
jg
add
xor
and
scas
movsl
dec
shl
add
cs
idiv
lcall
push
add
pushf
inc
daa
js
cmp
pop
call
add
dec
or
cwtl
xor
ja
inc
jo
stos
and
push
or
mov
sbb
sbb
outsb
add
ss
scas
adc
xchg
push
push
xor
sahf
pop
sbb
hlt
bound
push
ja
aaa
and
aaa
jle
add
sar
and
int3
cmp
fidivs
add
fadds
cmc
push
orb
xor
ljmp
loop,pn
and
push
mov
sbb
dec
sbb
and
dec
mov
adc
push
fidivrs
mov
fisubrs
jecxz
cmp
fcoml
hlt
shrb
mov
loope
sub
add
test
dec
push
std
das
test
push
cmp
sbb
notb
or
rolb
mov
cld
adc
cli
mov
cmp
stos
cwtl
in
popa
sbb
iret
aas
mov
or
popf
push
int
xchg
lock
pop
sub
decb
fsubr
inc
mov
jg
xchg
sbb
out
adc
hlt
mov
and
clc
mov
clc
fildll
xor
dec
jl
mov
insl
fnstsw
int
dec
sub
add
or
add
xchg
jnp
lahf
inc
lods
pop
cld
push
adc
bnd
mov
or
sbb
out
pushf
out
aam
ret
and
call
mov
movsb
stc
xlat
dec
cwtl
test
and
loopne
lret
or
push
and
mov
aam
push
lret
lods
dec
pop
in
aaa
adc
outsl
lods
sub
cmpsl
jp
pop
dec
lods
fmull
mov
loop
xor
push
mov
rcr
das
push
cmc
scas
push
fdivrs
in
les
push
cmp
cld
lods
mov
adc
ja
fstpt
and
scas
mov
aas
xor
add
std
out
add
jg
dec
shr
mov
scas
test
insb
mov
inc
loope
sbb
xchg
push
jno
jmp
jbe
jl
stos
lods
mov
cmp
cmp
push
in
jmp
ror
outsl
movsl
inc
insb
xchg
pusha
daa
push
adc
and
sub
shll
fldl
add
push
rclb
movb
movb
dec
lods
in
jno
push
icebp
lret
rcl
rcrb
mov
fbstp
adc
jo
xchg
and
push
icebp
and
movsb
test
cmp
push
or
jmp
jns
jl
cli
xchg
cmc
cmp
pop
test
add
loopne
insb
shlb
sub
lcall
mov
dec
push
inc
inc
mov
je
mov
lret
out
bound
lods
push
arpl
ljmp
mov
xchg
add
or
mov
cmc
icebp
dec
into
cmp
ljmp
cmpb
cmp
data16
mov
push
dec
test
pop
or
sahf
lods
push
testb
inc
dec
rcrb
mov
test
ret
pop
lds
cmpsb
mov
cld
int3
xor
jecxz
or
add
and
ljmp
push
inc
sbb
ss
and
inc
push
outsb
pusha
pushf
add
mov
push
fsubs
mov
popl
mov
pop
inc
int3
sbb
xchg
pop
jl
repz
xor
push
push
lcall
pop
and
je
test
push
jns
nop
je
fwait
movsb
mov
pop
push
cmp
incl
cmp
xchg
and
dec
and
xor
je
cmp
jg
pop
pop
pop
shr
xchg
add
mov
mov
mov
jne
pop
and
stos
cmpsl
add
roll
xchg
lea
mov
roll
inc
add
and
mov
adc
clc
roll
iret
sub
incl
mov
orl
xchg
das
xchg
push
mov
pop
add
clc
loope
pop
xor
popf
mov
push
and
insb
test
testb
test
cld
mov
cmpsl
or
or
jns
sbbb
pusha
push
push
mov
inc
and
rorb
je
ja
sbb
xchg
sbb
and
add
ljmp
pushf
mov
add
inc
xor
push
stc
mov
mov
pop
vpshld
orl
dec
ja
incl
push
sub
ss
imul
add
xchg
rcr
xchg
sub
sbbl
pop
sti
or
inc
mov
dec
xor
push
jmp
clc
add
or
and
push
xor
cmpsb
mov
dec
movsb
lea
testb
push
aaa
adc
inc
rorl
push
das
scas
inc
or
pop
mov
mov
mov
es
adc
cmp
inc
push
int3
and
xchg
pop
pop
dec
into
stos
mov
cmpsb
xchg
nop
jg
rorb
pop
ja
sbbl
aad
sbb
call
clc
lock
popa
xor
push
mov
aad
call
fldl
int
add
jecxz
shrb
std
jne
hlt
arpl
ret
jo
xlat
dec
push
push
and
adc
mov
mov
cmpl
push
xchg
xchg
dec
mov
inc
aam
mov
lods
nop
call
push
test
jge
pop
push
sub
inc
pop
or
add
mov
fidivl
push
pop
jl
ret
dec
idivb
adc
lods
cmpsb
adc
xchg
faddl
ret
int
shlb
fwait
clc
cwtl
pop
mov
push
push
xchg
in
in
xchg
mov
or
pshufw
shll
std
mov
dec
push
test
xchg
int3
insb
xchg
mov
stc
mov
js
mov
add
cld
mov
and
fidivrs
pop
fwait
shr
shl
pushf
call
jne
sti
scas
add
adc
mov
les
in
pop
ret
and
je
ja
xor
das
movsb
xlat
sarb
and
adc
dec
dec
clc
insb
cli
mov
push
jecxz
jl
div
pop
cli
adc
push
loop
aas
inc
outsb
out
add
jecxz
inc
mov
add
xor
lods
ds
xchg
lahf
cwtl
out
add
cs
repz
cmp
inc
mov
sub
cmpsl
pop
mov
pop
cli
pushf
xor
int
mov
and
pop
loopne
pop
inc
sbb
dec
mov
adc
fdivr
sub
mov
call
jo
aas
sbb
aaa
std
adc
scas
hlt
fwait
xchg
jno
dec
push
jo
dec
jmp
in
outsb
xchg
sub
lock
jp
add
out
daa
pop
shlb
mov
push
popa
clc
or
or
mov
mov
xchg
push
shrb
or
fmul
gs
dec
xchg
sbb
or
pop
xor
dec
cmp
push
adc
movsb
outsl
xchg
jmp
test
cmpsl
mulb
je
je
push
add
notl
sub
mov
jmp
or
adc
pop
ret
cwtl
dec
lahf
int3
and
mov
or
dec
stos
movsl
arpl
mov
inc
xchg
sbb
sub
or
out
pop
les
xor
in
hlt
fdivl
jnp
xchg
or
or
sahf
test
popa
adc
jne
ss
xchg
test
nop
hlt
sub
push
mov
push
bound
fnstsw
sub
pop
and
inc
sbb
cmc
mov
push
pop
mov
nop
daa
xchg
push
jge
sbb
dec
test
fistpl
xchg
inc
mov
push
xorb
push
enter
or
lea
jg
adc
mov
cmp
xchg
rclb
mov
push
in
nop
and
test
xor
or
test
fcmovnb
shrl
cmp
outsb
les
les
or
fistl
xor
int
call
xchg
cwtl
cs
cmp
lahf
lahf
ds
add
mov
hlt
pop
inc
call
pop
sub
jb
dec
movsb
jle,pn
jecxz
dec
stos
jbe
aam
xor
or
mov
mov
push
aam
sub
icebp
lcall
cmp
pop
and
add
mov
jecxz
dec
orb
pop
pop
add
cmp
or
and
mov
xor
inc
lahf
push
xor
gs
nop
push
clc
xchg
push
cmp
pop
je
mov
push
bound
aaa
int3
arpl
pop
dec
xor
mov
movb
sub
xor
adc
xor
test
das
pop
dec
movsb
dec
ret
add
aam
mov
mov
inc
sarb
jl
and
arpl
in
aas
scas
push
mov
push
or
jmp
mov
add
int3
sub
nop
or
xchg
cmc
or
and
cmp
lret
or
mov
imul
add
sub
movsb
mov
loop
les
int3
repz
xchg
decl
mov
mov
push
push
aam
nop
aas
push
mov
xchg
xchg
add
xor
sub
mov
adc
mov
idivl
movsl
or
arpl
lcall
mov
and
fs
lods
sbb
pop
ret
clc
ds
jl
lcall
pop
shll
les
adc
clc
mov
xchg
pop
call
sti
dec
je
cmc
adc
cld
out
sbbb
mov
mov
mov
int3
push
jecxz
inc
pop
jnp
pop
cmpsl
cmpsb
or
sbb
imul
mov
sbb
fcoml
mov
mov
mov
push
jb
xor
hlt
fists
mov
decb
push
inc
fcoml
mov
cs
or
cmp
fisttps
or
aas
xchg
dec
xchg
cli
stos
inc
cld
dec
push
or
int3
movsb
cmp
je
je
jle
cmp
pop
and
push
nop
mov
xor
cmovno
cmp
orl
ret
cltd
ret
push
hlt
cmc
add
out
shrb
mov
sub
dec
mov
cmp
shrb
and
adcb
lcall
clc
das
jo
lcall
inc
xchg
jl
imul
sar
and
pop
hlt
pop
test
fisubrl
pop
mov
add
add
cmp
dec
fadds
pop
sub
hlt
sub
push
inc
pop
add
stos
jecxz
add
jmp
out
xor
mov
lahf
mov
push
inc
sub
push
mov
cs
incl
and
loopne
or
add
mov
loope
lcall
xchg
es
add
rolb
mov
jae
cmp
fisubrl
out
cmp
inc
pop
cmp
mov
pop
in
or
sub
js
jo
push
icebp
jle
jg
icebp
es
pop
sub
mov
mov
nop
movsb
or
inc
hlt
js
jle
adc
test
xchg
shl
inc
cmc
imull
imul
out
pop
call
push
andl
aas
inc
pushf
pop
push
enter
lock
xor
cmpl
xorb
push
xchg
insl
lds
testl
popa
mov
cli
adc
mov
jne
adc
repnz
adc
pop
sub
cmp
sbb
or
sub
mov
repnz
rcll
and
je
inc
xor
and
cmpsb
push
nop
pop
movb
loopne
or
mov
ljmp
pushf
push
lea
lret
push
mov
inc
add
mov
pslld
push
xchg
iret
mov
xchg
mov
jge
sbb
loope
test
jmp
or
pop
cmp
xchg
adc
jl
lcall
adc
push
mov
mov
arpl
scas
xor
pop
lcall
cmp
mov
es
data16
or
dec
sbb
pop
enter
cmpsb
jbe
test
lcall
cltd
ljmp
ljmp
mov
incl
dec
fsubl
add
cs
int
inc
push
add
in
ljmp
cmp
ja
mov
xchg
push
fwait
lea
testl
decl
inc
pusha
sbb
adc
aaa
cmp
and
mov
idivb
pop
ljmp
in
xor
sahf
lahf
dec
jecxz
ficoms
addl
hlt
adc
add
or
cmp
and
push
decl
incb
dec
pop
and
ror
test
lock
add
call
ficoml
mov
cmp
cmp
push
cmp
jl
inc
or
cwtl
inc
bound
pusha
hlt
nop
inc
inc
mov
cmpsl
loope
hlt
ret
ret
inc
shl
jmp
mov
xor
and
pop
sti
sbb
xchg
sub
jp
mov
add
push
inc
xchg
xlat
cli
push
xorl
jmp
hlt
sbb
aam
cltd
lahf
add
fdivrl
mov
in
lods
sub
push
xor
jle
sbb
cli
cmp
xor
jne
pop
pop
stos
jns
js
ja
pop
or
sub
lcall
aaa
cmp
test
mov
xchg
loopne
push
push
inc
sub
out
add
addl
insb
sbb
or
xchg
or
mull
mov
jb
cmp
xchg
adc
fidivl
sbb
in
out
cs
ret
pop
xor
jae
into
cmp
mov
out
loope
add
out
lcall
adc
cli
pop
inc
add
dec
mov
add
ficomps
xchg
jecxz
mov
ss
adc
repnz
clc
pushf
cmc
or
mov
js
or
scas
add
push
push
or
dec
mov
mov
pop
js
andb
cmpsb
add
test
ljmp
lds
loop
ljmp
push
push
mov
jmp
in
cmovs
jge
mov
inc
and
call
sub
dec
sbb
out
sbb
lds
mov
sbb
sub
jg
pop
test
push
pop
inc
inc
sbbl
aas
jl
and
fdivrl
xchg
mov
push
or
addr16
ljmp
dec
in
add
mov
ret
cmpsb
adc
gs
jle
cmp
add
add
rclb
lock
jmp
or
les
pusha
push
fistl
adc
test
sub
xchg
and
mov
inc
shlb
mov
xchg
and
jg
push
mov
inc
cmpsb
xor
mov
cld
mov
or
inc
jbe
clc
push
out
sbb
negb
std
je
loope
mov
mov
push
or
call
mov
add
fwait
mov
pop
dec
repz
arpl
push
lds
sti
inc
or
in
sbb
outsl
dec
dec
sti
adc
pushf
add
int3
cmp
call
push
and
bound
icebp
or
push
inc
sbb
cmp
pop
push
push
adc
sbb
scas
xor
cwtl
jmp
js
icebp
mov
xchg
nop
jp
push
imul
imull
or
or
and
cmc
sar
sub
and
popf
and
iret
xor
out
xor
sub
cmp
js
add
fs
lods
jns
cmp
push
scas
xchg
sbb
repnz
lret
call
adc
lcall
addl
mov
repnz
stc
adc
test
pop
std
sbb
in
je
add
rclb
sbb
cmp
adc
inc
int3
stc
push
xchg
aam
int3
cli
fdivrl
pop
scas
adc
jo
cli
invd
addr16
testb
sarb
mov
and
xor
adc
jb
cmp
or
in
pop
add
bound
adc
stos
pusha
hlt
orps
pop
xor
or
dec
ljmp
jg
mov
sub
mov
push
xchg
ret
pop
xchg
xor
and
addb
stos
dec
or
hlt
movsl
incb
mov
push
hlt
daa
rorb
imull
add
sub
pop
add
adc
lds
or
mov
and
jb
insb
add
add
into
mov
adc
mov
inc
fadds
pop
aam
ds
add
xor
daa
mov
inc
xchg
adc
pop
ret
sub
pop
rcrl
jp
lods
jle
incl
mov
testb
aaa
inc
or
add
ds
std
std
mov
sbb
add
mov
or
sbb
insl
pop
or
mov
sbb
decl
sqrtps
or
sub
movb
inc
pop
es
sbb
test
fcompl
out
test
adcb
cmpb
ror
jp,pn
in
inc
dec
sbb
mov
mov
and
and
incl
xchg
lods
fs
jne
outsb
mov
or
movsl
call
sub
sbb
mov
mov
push
jge
cmpsl
sti
mov
sbb
or
mov
mov
mov
rcll
xchg
lea
dec
negl
xor
je
call
add
cltd
andb
dec
mov
rorl
aam
add
cmpsb
jb
pop
dec
mov
mov
enter
adc
popa
adc
enter
loope
pop
sarb
and
fs
mov
add
and
xchg
inc
mov
call
sahf
or
movsl
cli
out
push
ja
mov
aas
fs
add
pop
dec
jno
test
call
mov
sub
es
xor
push
loope
iret
inc
sbb
jb
je
push
add
xor
jne
lods
mov
or
mov
cmp
loope
insb
mov
sarb
jo
fsubrs
jo
stc
mov
sbb
adc
pop
add
xlat
sub
shr
push
inc
add
sub
mov
sbb
or
add
add
cmp
mov
imul
pop
ja
xchg
add
mov
call
mov
add
push
push
inc
mov
outsl
lcall
add
push
mov
inc
add
sub
hlt
les
xor
xor
add
pop
xlat
xor
add
jns
in
dec
mov
sbb
test
lret
clc
add
pop
push
fcos
dec
add
mov
dec
inc
or
mov
enter
mov
int3
icebp
jbe
enter
jl
shlb
fs
mov
lahf
xor
sbb
clc
ds
jg
xchg
fs
or
mov
mov
ljmp
fnstenv
mov
dec
insl
int
and
ds
add
cmpxchg8b
mov
lret
fildl
scas
aam
cld
ljmp
mov
and
mov
addr16
sahf
testl
cmpsb
xchg
xchg
aaa
std
fwait
or
sub
fs
jae
cmp
dec
incl
fstps
mov
cld
mov
inc
push
sahf
dec
jo
test
xchg
xchg
jp
push
cli
add
outsl
sub
int3
mov
repz
push
pop
sub
cmp
mov
push
rcrl
aad
fbstp
ret
mov
adc
shlb
inc
add
scas
or
lret
pushl
mov
mov
ret
dec
mov
xchg
add
dec
test
push
test
adc
jl
outsl
imul
leave
ret
movsb
dec
movsl
jg
fldcw
bound
mov
int3
xchg
add
pusha
add
fiadds
popf
sbb
mov
das
int3
repz
push
fdivl
ret
adcb
incl
xor
add
or
mov
sub
adc
pop
fcomip
fisttpll
aad
mov
out
inc
dec
cld
sbb
mov
inc
xchg
nop
cwtl
test
into
xchg
mov
cmp
jg
jmp
in
outsb
dec
lock
jbe
jp
cli
ja
pop
and
and
lret
and
mov
mov
cmp
push
fstps
inc
mov
mov
cwtl
cmpsb
test
mov
jl
mov
rolb
jecxz
clc
jl
push
out
jle
inc
les
inc
push
jbe
insb
push
or
out
cmp
fildl
loope
stc
cmp
add
jne
jg
cmpsl
in
mov
dec
sbb
inc
cltd
test
mov
cmpsb
pop
add
popa
xorb
mov
xchg
nop
mov
or
into
aas
sub
jne
mov
inc
adcb
mov
sbb
pop
push
add
jecxz
lcall
adc
cmpsl
out
cmp
adc
ret
sbb
lret
adc
pop
inc
daa
inc
xchg
or
and
aam
sbb
pop
or
xchg
je
mov
mov
pop
das
xchg
mov
dec
push
std
jg
aam
dec
mov
imul
scas
or
jno
popaw
add
scas
and
movsl
loope
sar
aas
std
dec
xchg
stc
pop
dec
lahf
mov
es
pop
cmp
jecxz
jmp
add
add
and
push
sub
clc
cld
jg
adc
sub
arpl
cli
cli
jge
or
ljmp
mov
jge
add
push
push
jb
iret
in
push
cli
incl
shll
mov
sub
cmpsb
jmp
mov
dec
pop
mov
or
rorl
mov
xor
push
aad
sbb
add
jno
mov
insb
ficompl
dec
icebp
mov
fdivrl
jb
add
pop
xor
cmpsb
in
sub
out
add
jmp
pop
jle
idiv
jo
adc
sub
sbb
sbb
sbb
dec
sbb
popa
push
mov
test
cmp
mov
test
sbb
inc
and
jns
out
adc
ja
mov
mov
in
xchg
pop
gs
push
in
mov
add
cwtl
sti
xchg
push
imul
clc
pusha
jg
inc
inc
xchg
add
push
or
dec
enter
popa
add
mov
ljmp
fdivrl
leave
add
aas
adc
movsb
fldl
daa
pop
lcall
into
pusha
loope
rclb
add
xchg
inc
pop
jle
psllq
cmp
clc
hlt
rolb
pop
lock
mov
mov
mov
and
and
or
add
ret
push
jae
push
dec
pop
inc
mov
mull
lods
inc
shr
ror
push
mov
pop
push
rclb
enter
jge
popa
popa
mulb
push
into
xor
add
push
push
stos
mov
push
or
add
repnz
lods
cmp
mov
inc
sub
in
xchg
pop
cmp
jae
lea
push
push
lods
das
fmulp
add
pusha
dec
push
sbb
fcomps
xchg
addb
cli
fcomip
push
shlb
outsb
add
xchg
xlat
call
mov
ljmp
mov
pushf
jecxz
dec
cmp
test
fistpll
adcb
out
add
lret
sar
cmp
out
fs
push
mov
mov
push
call
inc
adc
daa
dec
icebp
pushf
add
adc
iret
mov
mov
lods
push
jmp
mov
pusha
jae
imulb
pushl
inc
stos
fisubrl
push
or
out
in
mov
inc
in
xchg
hlt
push
roll
lods
sbb
es
inc
xor
cli
mov
xchg
mov
xor
jmp
mov
xchg
ljmp
jge
pop
jp
and
lea
xchg
dec
or
leave
fcomip
ret
stos
add
iret
add
cmc
push
inc
out
add
lret
rorb
push
rorl
mov
cmp
loope
decl
ret
fcmovb
xchg
pavgb
shlb
sub
push
sub
repz
icebp
ds
jle
push
jg
decl
mov
mov
add
xlat
or
xor
jmp
sbb
adc
shlb
imul
aam
jb
clc
call
adc
cli
and
jo
popa
es
inc
mov
mov
xchg
loope
cltd
xchg
aam
out
or
call
lret
and
pop
ljmp
jno
jbe
mov
neg
insb
inc
in
incl
in
mov
or
mov
and
ss
lods
add
in
xchg
movsl
mov
mov
or
sub
gs
out
std
pop
je
push
out
incb
in
popf
lods
jbe
test
incl
into
xchg
or
divb
aam
mov
cmp
mov
lods
mov
pushf
pop
repz
rolb
pop
cmc
mov
sti
out
test
stos
xchg
das
clc
xchg
push
repz
pop
ds
jno
inc
clc
inc
jmp
or
nop
sbb
push
dec
add
sub
mov
jbe
mov
xlat
shlb
mov
test
adc
xorb
xchg
add
and
movsb
pop
dec
xor
insb
mov
ret
mov
jo
aam
mov
sub
dec
ljmp
adc
inc
push
movsb
fisubrs
aam
cmp
call
fs
lods
cs
mov
les
add
mov
inc
out
and
movsb
xlat
adc
pusha
adc
mov
and
push
sbb
push
mov
push
inc
mov
and
add
enter
and
mov
fildl
add
leave
insb
cwtl
cmp
cmpsb
push
ljmp
std
and
inc
les
add
jmp
fsubrs
dec
and
test
push
jns
movsb
xchg
fwait
lret
xchg
insb
dec
fisubl
cmp
lcall
mov
in
mov
test
punpcklbw
rol
jg
dec
aaa
aam
mov
lds
cltd
hlt
test
pop
out
mov
outsl
cwtl
mov
sbb
xchg
jp
iret
inc
add
or
xorl
hlt
xor
pop
mov
fbld
pop
daa
add
mov
inc
enter
xchg
rolb
sahf
cmc
sbb
js
sub
and
jl
adc
pop
or
or
ret
das
ljmp
cli
sbb
cs
vmaxps
pop
scas
loopne
xchg
into
push
xor
clc
aad
adc
push
mov
dec
pop
imul
xor
stos
dec
data16
dec
insb
outsl
pop
mov
pusha
mov
and
loopne
cmp
adcb
cli
pop
es
cli
hlt
pop
pop
testb
mov
mov
subb
or
or
lea
adcb
adc
dec
pop
mov
jle
insl
mov
inc
addr16
push
bnd
add
push
adc
mov
inc
xchg
push
cmp
ss
fldt
cmp
test
or
ja
cwtl
nop
sub
cld
xchg
repnz
mov
cmp
inc
sbb
clc
push
xor
int3
je
mov
jecxz
adc
cmpsb
adc
inc
cli
outsl
xor
mov
add
jg
mov
inc
sbb
bound
mov
fwait
aam
or
mov
jl
add
hlt
dec
xchg
icebp
pop
cmpsb
scas
adc
adc
jg
mov
cwtl
mov
mov
scas
dec
ja
inc
fldcw
dec
addr16
dec
test
mov
and
clc
pushf
lretw
add
mov
movsl
jae
incl
pop
inc
mov
sbb
and
mov
dec
sub
pop
xor
sbb
push
js
inc
mov
jo
push
mov
jo
rclb
pop
mov
pusha
test
mov
dec
push
mov
xchg
movsb
scas
push
mov
mov
rolb
adcb
jl
pop
mov
cmp
enter
mov
add
push
push
mov
xlat
mov
or
xor
inc
sbb
outsb
lret
popa
scas
rorb
inc
adc
mov
fbstp
jb
out
cld
push
pop
scas
add
dec
mov
fsts
adc
daa
inc
inc
dec
cld
cmpsb
sti
adc
jb
or
xchg
adc
mov
lret
in
test
xor
mov
cmp
sub
data16
mov
jmp
adc
cmp
dec
lcall
add
push
xor
cmp
mov
inc
sub
jp
jmp
inc
inc
ret
loope
push
sub
dec
mov
adc
test
test
jg
pop
aam
mov
test
pushf
jmp
dec
xchg
xchg
or
lods
xchg
push
inc
adc
sbb
xor
pop
xchg
push
add
and
pop
push
cli
ret
sti
bound
das
mov
ficoml
mov
adc
sbb
mov
adc
jle
ja
data16
lods
bnd
js
jbe
adc
pop
out
imul
lock
mov
cmp
lret
add
jp
or
shrb
sbb
jp
aad
mov
xlat
shl
xchg
jno
scas
push
mov
addr16
cli
jmp
mov
ss
xchg
add
scas
popa
pop
testl
add
cmp
jp
fidivrl
mov
aaa
mov
ss
pop
mov
cmp
adc
pushf
jb
es
nop
mov
pop
jmp
ja
test
rcll
lock
test
mov
lcall
mov
cld
adc
dec
adc
sbb
mov
pop
xchg
cwtl
mov
push
adcl
incl
aad
iret
test
or
mov
sub
stc
nop
or
in
ds
lock
ljmp
xchg
inc
and
nop
mov
enter
cmp
inc
sub
jo
xchg
push
push
lea
call
decl
lods
and
and
cwtl
shll
xchg
mov
pop
pop
loopne
mov
pushl
test
scas
add
mov
ror
bound
pop
ret
mov
lcall
inc
cltd
add
jle
loope
cmp
adc
or
sub
shlb
jl
sbb
pusha
mov
sti
fimull
mov
and
jmp
add
xor
add
mov
fcmovne
sbb
cwtl
test
loopne
inc
das
xchg
cwtl
test
push
out
call
and
inc
call
mov
push
ljmp
out
ret
and
and
cli
in
cmp
or
mov
jge
lret
cmpsl
xchg
lret
nop
call
dec
dec
and
je
sub
testb
xorb
push
repnz
mov
push
cmc
adc
int3
in
mov
or
cld
push
in
and
or
cmp
cmpsl
push
pop
dec
mov
cmp
jg
cmp
nop
xchg
test
movl
sub
pushf
call
mov
sbb
adc
mov
mov
std
incl
in
test
xchg
rolb
arpl
xor
and
incl
xchg
pop
loopne
inc
cmp
and
decl
mov
or
adc
add
mov
pop
jbe
mov
push
aam
int3
inc
testb
pop
inc
xchg
adc
call
mov
decl
push
imul
push
adc
ja
dec
sahf
pop
fists
jb
mov
inc
popa
inc
fisubl
mov
sbb
fwait
addb
or
mov
lods
mov
jno
add
cmpsb
cmp
aad
and
ret
out
mov
rclb
mov
dec
stc
add
jge
pop
cmp
add
inc
es
sbb
add
mov
sbb
lret
xchg
xchg
or
hlt
and
ss
mov
das
jl
push
std
adc
cmp
cs
subl
rcrl
incb
add
clc
mov
cmp
js
and
shlb
and
addb
mov
daa
mov
movsl
push
aas
jp
push
cld
inc
clc
repz
add
inc
mov
cli
mov
mov
in
mov
shrl
jbe
sub
psrld
sbb
push
adc
inc
dec
test
cmp
mov
pop
add
aam
ja
outsl
repz
jns
push
inc
xor
cmp
lock
stos
mov
movb
and
push
hlt
pop
addb
jg
xlat
pushf
xchg
in
cs
xchg
or
xor
push
sbb
pminub
aas
and
push
cmp
and
adc
scas
rclb
mov
inc
fiadds
bound
add
loopne
stos
mov
out
and
cmc
gs
imul
sahf
lods
in
clc
cmpsl
aam
out
jbe
mov
jg
pop
mov
rclb
shlb
fs
sub
push
xchg
cmp
sub
ret
push
and
ja
adc
mov
push
in
sbb
xor
pushl
cmpsb
push
sarb
xor
and
clc
cmp
and
jle
mov
inc
call
mov
insb
dec
ja
bound
orb
in
aas
push
roll
iret
jg
stos
stos
pop
pop
dec
push
aaa
std
jp
dec
adc
jns
sub
push
lcall
arpl
add
cwtl
mov
push
push
xchg
iret
out
ljmp
jno
aad
cmp
insb
and
test
xchg
decl
push
out
jge
xchg
aam
je
sbb
inc
push
mov
sbb
push
into
in
jmp
push
incl
add
lods
in
lcall
lret
or
jg
imul
sbb
mov
and
subl
cmp
out
out
sarl
aas
out
loope
xchg
ret
movsl
xor
cs
push
movsl
adc
ljmp
mov
add
pop
test
les
decl
addb
pop
xchg
inc
bound
popf
dec
add
cwtl
xchg
arpl
mov
jbe
push
mov
lcall
test
test
cld
and
and
das
repz
mov
or
and
inc
ljmp
nop
ljmp
enter
xchg
dec
and
push
mov
sahf
pushf
sti
imul
int
jmp
scas
inc
fldenv
lods
dec
loopne
xchg
dec
or
jno
out
popa
and
adc
dec
push
and
out
mov
movsb
inc
call
test
or
xchg
cmc
fwait
out
and
stos
cmp
jmp
out
sbb
arpl
fisubs
loope
xchg
pop
sub
sahf
cmpsb
jg
jmp
stc
testb
jg
push
mov
dec
stos
sti
push
or
adc
loop
loopne
jp
dec
push
cmp
sub
lcall
add
xor
pushf
push
stos
in
mov
dec
rorl
mov
xchg
shll
lcall
stos
xchg
or
sub
inc
leave
aaa
imul
and
lock
push
aad
xchg
xchg
cmp
inc
add
js
inc
cld
push
mov
insb
dec
aaa
cld
ljmp
hlt
xor
push
fldenv
or
inc
sub
idiv
out
ja
sub
mov
xor
dec
lods
mov
fnstenv
xchg
dec
push
imul
mov
addr16
mov
leave
adc
mov
loopne
dec
out
repnz
sub
jmp
mov
pusha
outsb
cwtl
mov
inc
or
xchg
dec
adc
cmp
loopne
insb
inc
iret
dec
cmp
or
aad
push
push
sub
adcb
sbb
jno
icebp
dec
clc
xor
xchg
sti
ljmp
out
stos
pop
inc
mov
mov
fwait
mov
ss
sbb
scas
clc
jg
sbb
xor
test
xchg
mov
xor
pop
or
call
push
push
inc
mov
mov
cmc
orb
ljmp
fimuls
inc
incl
pop
xchg
movsb
lods
xchg
pop
div
and
fldl
pop
roll
adc
call
mov
inc
addb
sti
js
push
lret
or
mov
dec
ljmp
mov
mov
mov
jg
and
test
push
mov
jmp
out
frstpm(287
and
mov
aam
fbstp
cmp
insl
mov
jae
std
pop
or
fsubl
fistpll
cmp
incl
xchg
sub
mov
mov
jge
jge
adc
mov
jmp
shrl
sub
enter
cmp
jmp
add
lahf
pop
popa
push
add
cltd
dec
sahf
mov
cmp
jg
addr16
push
jmp
loop
mov
shll
sub
mov
mov
inc
jo
xchg
in
sbb
aam
gs
test
push
dec
jae
divl
pusha
dec
or
pop
or
enter
test
xchg
xchg
jle
outsl
jb
and
pop
pushf
mov
sbb
inc
ds
sbb
push
xor
popf
mov
jb
mov
ljmpw
cmp
ljmp
pushl
pop
imul
icebp
push
adc
xorl
adc
pop
cmp
mov
popa
orl
push
cli
push
ljmp
adc
inc
outsl
sub
xor
sub
nop
jecxz
pop
or
nop
icebp
push
push
out
ja
cmp
decl
push
bound
xchg
out
push
push
aad
aam
or
jp
fildll
mov
in
push
xor
jmp
imul
xor
push
dec
mov
push
cmp
mov
scas
movsb
lret
sahf
mov
imul
pop
jle
loop
mov
out
inc
cmpsb
mov
adc
jae
scas
add
cmpb
in
incl
cli
jmp
jg
jmp
lcall
in
push
push
hlt
push
and
push
call
std
mov
jno
xchg
jmp
ljmp
fnop
cmp
xlat
sub
popa
das
out
popf
das
outsl
jl
sbb
xchg
int
aam
xchg
dec
imul
jo
daa
scas
lret
dec
lcall
lcall
xor
iret
pushf
push
cmc
dec
or
and
dec
xchg
sub
cmc
stc
test
jge
adc
jl
push
je
add
shlb
mov
xor
adc
adc
xchg
mov
mov
jg
icebp
out
test
adc
ficoml
decb
stos
cmp
xlat
push
pop
mov
incl
add
sarl
cli
sahf
data16
decl
add
add
sub
int3
int3
imul
add
xchg
or
cmc
pushf
dec
data16
mov
dec
jle
sti
and
mov
push
dec
fisttps
add
add
dec
sub
and
decl
sub
pop
mov
out
lcall
mov
mov
xchg
mov
cwtl
xlat
in
loopne
repnz
mov
add
jno
xchg
pop
adcl
mov
arpl
mov
or
icebp
insl
scas
push
idivb
out
xchg
mov
inc
outsl
das
pop
adc
xchg
push
aas
pop
cwtl
push
mov
or
cwtl
sbb
xchg
stos
sahf
pop
push
sub
stc
out
adc
mov
jge
inc
jbe
jbe
sbb
scas
jmp
addb
mov
lock
loopne
out
sar
mov
out
add
jecxz
popa
jl
push
sarb
mov
dec
mov
ljmp
adc
das
pop
dec
cmp
sbb
or
xlat
hlt
mulps
mov
ljmp
cmp
enter
cmp
pop
bound
jecxz
data16
mov
pop
pop
icebp
decl
roll
add
clc
call
mov
cmp
pushl
xchg
sbb
dec
dec
jg
cmp
subb
addr16
and
sti
out
xchg
cli
adc
cmpsl
sbbb
add
and
xor
pop
push
in
mov
add
stos
mov
pushl
ja
shl
xor
mov
cmpsl
into
xor
cmc
rcrb
add
fsts
ljmp
sbb
inc
pop
sbb
inc
inc
enter
scas
cmpsb
dec
cmpsl
dec
jbe
lock
call
rcl
out
inc
mov
jne
lods
xchg
cmp
movsb
cltd
jp
clc
add
ja
jmp
pop
call
fsts
sbb
dec
or
push
sar
pusha
lret
sbb
sub
std
jmp
stos
and
mov
loope
mov
mov
sbb
push
jns
jg
xlat
fdivr
ljmp
test
dec
jge
add
dec
jge
leave
clc
pop
push
xor
push
ss
insb
in
push
das
sub
stos
pop
mov
jo
jne
jecxz
mov
imul
pop
mov
mov
and
idivb
cmp
fst
or
js
bound
or
inc
mov
mov
push
mov
sbb
filds
lcall
and
jae
shlb
fsubrl
xchg
ficoml
rcrb
push
xchg
fs
movsb
dec
dec
jae
jno
sbb
hlt
clc
lahf
xor
test
loope
call
ljmp
clc
jmp
lret
mov
and
sti
dec
out
cmp
inc
out
dec
push
mov
test
lcall
movsl
dec
jo
data16
stc
icebp
and
in
insb
aas
jne
jno
ljmp
test
mov
dec
repnz
mov
xor
imul
call
mov
mov
test
shrl
dec
xor
xchg
les
xor
and
mov
push
cwtl
push
adc
and
mov
into
clc
ljmp
movsl
cltd
dec
shl
adc
push
mov
dec
out
cmc
ja
xor
lds
cmp
decl
nop
push
dec
stc
lea
in
jns
fiadds
mov
sub
stc
imul
rcrb
sub
push
mov
jmp
stc
xlat
ret
jecxz
sub
fistpl
cwtl
pop
dec
js
push
jmp
pop
xchg
push
cwtl
inc
and
jmp
lea
scas
mov
mov
xor
outsl
outsl
and
das
clc
pop
sbb
sub
bnd
mov
xor
or
testb
pop
xchg
rcll
outsl
dec
dec
jnp
dec
xchg
fcomps
call
push
test
sbb
pop
daa
cli
fcom
push
pop
idiv
std
or
cmpsl
mov
push
ljmp
mov
push
push
sarl
xchg
nop
pusha
loope
inc
xchg
loopne
cmp
inc
call
in
xor
sarb
leave
out
mov
mov
mov
or
jmp
lea
aas
bound
xor
cltd
scas
xchg
cs
mov
cld
mov
int3
sub
and
xchg
mov
ljmp
iret
mov
add
lcall
mov
cmp
decl
shll
xchg
jg
daa
jne
and
das
in
mov
xor
pop
test
ljmp
mov
aam
scas
stos
cmp
and
push
fldcw
adc
or
clc
mov
pushl
add
push
sub
mov
mov
clc
hlt
or
mov
xchg
outsl
pop
roll
mov
incl
jmp
pop
in
push
mov
insl
push
or
aas
add
jb
or
es
and
in
hlt
xchg
xchg
fldcw
decl
xchg
mov
or
mov
cwtl
ss
ja
inc
lock
sbb
sbb
fsubs
jmp
call
jnp
test
mov
pop
add
dec
fists
ffreep
ret
mov
popf
xchg
ljmp
addr16
pop
fidivs
and
addl
jmp
mov
movsl
mov
mov
cld
and
push
sub
out
loope
add
repnz
ret
call
cwtl
fisttps
call
add
dec
ret
mov
cmp
incl
jmp
packssdw
sbb
test
push
mov
dec
xchg
jbe
pop
pop
dec
hlt
push
movsl
cmp
popa
or
xchg
lds
call
out
test
jmp
fimull
sub
es
fs
add
insb
jne
fsubp
mov
iret
xor
ljmp
inc
jne
adc
cs
pop
negl
imul
loopne
and
cli
mov
jp
mov
push
pop
scas
jecxz
data16
leave
std
js
aas
mov
or
pop
scas
call
dec
gs
xor
lahf
push
outsl
sub
mov
sbb
jmp
and
jo
inc
pusha
sarb
mov
jg
or
xor
int3
stos
cwtl
pop
jmp
add
jno
scas
or
pop
add
movsb
jns
sbb
mov
xchg
mov
stc
mov
lahf
bound
test
inc
inc
and
sbb
xorl
shl
dec
pop
xchg
cwtl
cmp
lock
out
scas
add
sub
dec
fs
push
jle
lods
lds
loopne
dec
outsl
imulb
adc
mov
scas
incl
repnz
int3
call
sub
or
jo
popf
lods
mov
xchg
fildl
arpl
incl
jge,pn
pusha
add
or
pop
out
xor
xor
in
push
add
add
lock
call
dec
cmp
mov
out
mov
inc
mov
pop
cmpsb
sbb
dec
mov
call
xlat
jg
into
ja
test
paddd
jmp
xchg
jg
xor
insl
movsb
xchg
jl
test
pop
js
loop
xchg
inc
or
aaa
aaa
mov
fcomps
mov
loope
out
jbe
lret
sbb
jge
lcall
pop
pop
lea
xchg
sbb
jns
xchg
pop
push
packuswb
jmp
lock
adc
outsb
and
push
imul
jge
mov
inc
stos
dec
ljmp
aas
pop
ljmp
in
ja
aad
js
lds
div
pop
pushl
mov
push
cmc
jb
insb
dec
mov
into
cmp
pop
pop
mov
les
jg
push
cmpsb
repnz
and
jp
mov
sub
movsl
dec
jle
ss
cli
add
incl
push
stos
push
add
loop
pop
push
and
pushf
jmp
jae
aas
inc
sbb
jg
cmp
push
adc
mov
sbb
sub
jge
mov
or
ljmp
pop
and
fcmovne
dec
cmp
bound
cmc
in
lcall
xchg
jmp
aad
mov
mov
xchg
mov
mov
je
push
movsb
xchg
ljmp
cli
aam
lret
xor
inc
bound
pop
pop
aas
adc
insb
mov
es
les
cmp
lcall
ret
lahf
int3
lcall
cld
test
inc
pushf
sarl
sbbb
decl
xchg
daa
jo
int
pushf
in
int3
pop
lds
pop
je
dec
shlb
mov
push
inc
orl
dec
adc
in
and
stos
push
push
jmp
cmp
jmp
ljmp
lret
sub
std
rcl
jge
das
test
es
div
mov
decl
adc
shrb
mov
imul
mov
lds
loopne
aam
mov
incl
addb
push
adc
outsb
jbe
xlat
mov
dec
xor
cli
cli
push
sub
int3
scas
lcall
repz
ja
push
add
fs
dec
mov
ljmp
shlb
orl
mov
and
push
cmpsl
pushl
xchg
dec
pop
mov
inc
sahf
pop
pop
mov
jno
inc
leave
mov
dec
push
fstpt
sub
mov
push
jo
icebp
cmp
mov
pop
fdivl
or
push
or
ljmp
test
jne
bound
shl
mov
lods
sbb
add
shl
cmpsb
lret
fcomip
push
sub
je
mov
sub
adc
sbb
mov
mov
sub
test
incl
or
out
cltd
inc
enter
jl
sub
sub
mov
mov
adc
jg
sub
imull
push
pop
mov
in
xor
jb
mov
lcall
out
imul
int3
sti
push
test
test
mov
jnp
outsl
mov
call
push
push
repz
cmpsb
scas
sbb
ds
repnz
loop
rcrl
xlat
jle
xor
cmp
fdivrl
das
nop
cltd
stos
xor
xchg
mov
jne
jp
mov
movsb
or
dec
fsubrp
lods
incl
shrb
lret
mov
test
cltd
inc
jo
dec
inc
or
std
jmp
jg
sahf
mov
cmp
and
jns
test
mov
and
repz
ljmp
jp
xor
sti
in
stc
in
fs
lea
add
insb
mov
mov
dec
and
outsl
call
cmp
lods
sbb
xor
push
mov
imul
lock
jmp
jno
outsl
fwait
and
mov
or
ret
adc
cmp
jo
repz
sub
lcall
xor
fsubr
xor
cmc
push
pop
repnz
cmp
lahf
cmp
dec
rclb
xchg
cmp
pop
sbb
iret
or
push
pusha
in
bound
out
push
adc
jmp
cmp
jge
push
cmc
imul
cmp
jmp
jbe
push
call
cs
inc
or
and
push
mov
dec
xor
inc
lock
cld
lret
pop
repnz
pop
ret
xchg
cld
and
mov
daa
aad
icebp
fstl
cmp
divb
jnp
cmp
pushl
lcall
inc
cmp
pop
xchg
mov
lcall
mov
lods
outsl
cli
add
inc
rol
lods
sbb
mov
loop
cmc
incl
out
data16
pop
imul
movsb
jmp
shl
lcall
out
sub
sub
or
inc
mov
scas
and
xchg
in
push
js
dec
inc
ljmp
sbb
inc
flds
xor
sahf
inc
fcoml
pop
pop
or
imul
inc
fildl
add
xchg
and
jg
nop
sub
fimull
dec
and
sahf
icebp
in
dec
push
adc
popa
outsb
imul
or
call
xor
adc
repz
push
xchg
push
cld
jl
jmp
mov
xor
test
fimull
xchg
into
aaa
fbstp
outsl
sub
stc
incl
std
outsl
xchg
rcrb
rolb
or
xchg
shlb
dec
popa
push
sub
dec
call
arpl
sub
cmpsb
pusha
frstor
cmp
scas
aad
in
loopne
je
lock
das
xchg
adc
pushl
lcall
push
push
sahf
mov
pop
mov
and
add
mov
imul
outsl
dec
test
sarb
inc
jmp
and
ljmp
and
and
mov
popf
out
jno
inc
adc
loopne
sbb
xor
incl
jle
les
insl
insb
inc
mov
in
jbe
push
sbb
stc
adc
sub
pop
cld
jmp
loop
push
arpl
dec
mov
mov
mov
lcall
test
dec
cltd
cmp
cmp
in
imul
shr
loope
and
jmp
lcall
ljmp
nop
and
scas
idivb
arpl
call
cli
ss
jle
lahf
inc
aad
pushf
xlat
mov
xchg
mov
sbb
jmp
sub
mov
xor
sbb
xor
negl
rcrl
movsl
mov
sahf
sbb
add
xor
pop
fs
out
fnsave
mov
pop
bnd
adcb
movsb
jecxz
push
push
sub
cmp
call
sub
and
xor
cltd
jg
dec
and
and
jnp
addr16
fsts
je
xchg
push
pusha
mov
lock
dec
inc
aaa
and
lds
gs
cwtl
movsb
push
adc
dec
pop
and
test
sahf
adc
dec
cwtl
push
adc
push
cld
mov
inc
addb
pop
addr16
int
lcall
add
ds
and
sahf
mov
inc
fcmovnbe
outsl
daa
mov
adc
pop
insl
mov
hlt
push
pushl
and
sub
mov
xchg
or
in
sub
lcall
fistps
addr16
or
addr16
gs
adc
jnp
clc
jae
dec
mov
cmp
incl
and
mov
andb
cmp
sub
xchg
push
mulb
fdivr
movsb
cltd
fnstcw
test
cld
inc
jne
cmpsb
cli
push
sub
or
mov
pop
mov
jmp
or
sbb
stos
shrl
cmp
xchg
iret
jo
jno
cmpsb
jns
std
mov
insl
cmpsb
pop
js
cs
push
lret
adc
sub
pop
cwtl
loop
decl
aaa
or
outsl
in
loope
ss
xchg
add
decl
mov
popf
imul
std
es
mov
add
inc
inc
cmp
les
push
adc
repz
pop
sub
mov
js
cmp
and
xchg
push
xor
test
call
divl
dec
pusha
sbb
xor
arpl
movsl
cmpsb
xlat
add
mov
sarl
xor
pop
loopne
sbb
loopne
jns
scas
push
xlat
pop
adc
xor
or
insl
jb
pushl
cmp
in
dec
fcomps
mov
ds
xchg
pop
shl
out
fwait
adc
cwtl
adc
dec
and
pushf
inc
int3
xor
cmp
call
test
sbb
fadds
sub
inc
push
aad
decl
jge
and
imul
repnz
mul
outsb
call
jg
lds
push
pop
mov
jp
pop
mov
daa
pop
lods
push
pushl
in
pop
jl
sub
xchg
inc
test
mov
scas
out
call
lcall
sbb
lock
jo
fstl
movsb
jnp
daa
int
ffreep
cmp
pop
in
xlat
jle
adc
icebp
cmovnp
aad
out
or
sub
sbb
inc
lret
xchg
adc
jb
repz
and
pop
cmc
aam
dec
loopne
xor
pop
adc
decl
and
cmc
shlb
scas
adc
loope
stc
out
aam
filds
testb
decl
imul
xlat
pusha
xor
fcomps
int
scas
scas
mov
push
aas
sti
adc
lea
bound
dec
scas
xlat
pop
pop
fmull
sbb
incl
push
dec
lock
jns
pop
cli
xor
sub
nop
fs
out
call
cmp
mov
inc
mov
insb
xlat
out
mov
push
out
mov
inc
mov
das
cli
incl
mov
fisttps
lahf
add
mov
cmp
dec
and
sub
fidivs
mov
push
dec
jp
ljmp
xchg
adc
jno
outsb
out
data16
mov
sahf
sub
mov
pushl
iret
aas
inc
cmp
std
jecxz
cwtl
hlt
inc
push
ja
mov
pop
or
push
and
call
mov
inc
icebp
lods
loop
cmc
xor
orb
cmp
fcoms
js
or
into
test
andb
cmpsb
xorl
out
test
or
sub
mov
in
cmpsb
sar
jmp
shr
das
ficomps
jno
jge
push
out
push
jge
adc
pop
in
jmp
orb
pop
push
aam
mov
sub
sti
cld
pop
test
popf
int3
cmp
pop
mov
push
push
shll
cmp
loop
xor
push
push
jmp
ret
pop
and
loopne
mov
mov
and
add
fdivl
mov
jl
js,pn
sbb
sbb
pop
pusha
insl
inc
imul
addr16
aam
int3
jmp
call
adc
adc
sub
cmp
lock
es
cs
cwtl
test
jnp
push
fcomip
incl
lcall
mov
xchg
jno
insb
fistl
lock
aas
sbb
fidivrs
and
add
ja
push
cs
dec
ds
mov
je
sub
adc
loope
cmpsb
mov
or
rorl
orb
insl
ss
dec
ljmp
inc
pop
sub
push
pop
cld
nop
cmpsb
sti
xor
push
insl
out
sub
stc
loop
push
xchg
mov
aaa
addr16
sbb
xchg
push
popf
idivb
xchg
or
push
inc
pushf
dec
clc
mov
and
inc
xchg
movsb
popf
jmp
push
push
clc
pop
cld
scas
mov
mov
out
and
fadds
push
pop
pop
cmp
jge
sub
mov
add
inc
inc
test
decl
jno
inc
inc
cmpsl
jnp
xchg
mov
mov
push
mov
ljmp
or
push
mov
cli
repz
pushf
inc
cmp
les
jp
dec
jle
in
xchg
mov
call
les
ret
xchg
inc
cmp
and
inc
xor
add
adc
mov
int
xchg
sbb
or
xchg
fwait
lcall
lahf
lds
jb
out
bound
gs
mov
push
mov
sub
push
mov
call
dec
lea
shlb
out
push
test
je
lods
sar
fsubs
pop
adc
and
hlt
dec
pop
test
jge
data16
stc
enter
pop
imul
add
pop
or
push
push
fnstcw
imul
fbld
lahf
lods
or
fbld
mulb
cltd
aaa
into
lods
icebp
lcall
push
ret
sbb
mov
cmc
cmovge
lcall
addr16
xor
pop
adc
cmp
jnp
fldl
ljmp
decl
fs
dec
adc
xchg
std
xor
xchg
xor
iret
jmp
into
push
inc
jg
ljmp
inc
push
xchg
in
aad
ds
sub
lods
sbb
test
cmp
clc
clc
rcl
sub
jl
push
inc
sbb
iret
and
mov
cmp
je
jae
dec
push
and
aaa
and
repnz
movsb
nop
jg
std
out
or
and
fs
scas
testl
int3
mov
push
xorl
in
loop
insb
jno
adc
inc
jo
rolb
push
fistpll
add
cli
stc
jp
or
lds
pop
into
icebp
call
fdivs
push
mov
cmp
pop
fidivrs
lcall
push
xchg
fidivrl
in
call
sbb
dec
mov
enter
dec
ljmp
mov
int3
push
mov
test
xor
inc
push
ret
gs
sbb
pop
imul
scas
xor
add
fwait
fcomip
or
inc
cmp
mov
or
push
das
ud0
pushl
iret
or
orl
inc
pop
or
daa
xchg
add
adc
mov
jmp
add
and
les
dec
fsubp
out
cmc
addr16
ljmp
clc
mov
xchg
subl
int3
rcrl
movsl
lcall
icebp
testb
jle
sbb
cmp
pusha
fs
sar
jg
pop
cli
hlt
mov
bound
ret
mov
push
mov
sar
call
mov
test
xor
movsl
test
iret
pop
andl
mov
xchg
fldenv
out
stos
cmp
push
pop
push
push
or
cmp
jo
sbb
mov
mov
sbb
sub
xchg
fnstenv
cmp
add
jmp
dec
cmp
mov
xchg
xchg
fidivl
mov
int3
mov
addb
jge
out
decb
dec
sbb
mov
xchg
test
aaa
mov
mov
cmp
mov
loope
into
negl
push
inc
dec
shlb
jae
ret
jl
cs
pushl
or
push
out
dec
or
push
outsb
into
push
sbb
mov
jbe
enter
ljmp
inc
pop
sar
mov
shll
sbb
sub
and
jl
sub
pop
mov
jg
or
jb
jbe
leave
jl
in
test
sti
mov
xor
pop
test
push
mov
pusha
repz
pand
lods
mov
and
gs
jg
cmc
xor
sbb
mov
pop
mov
lret
dec
insb
je
mov
call
inc
pushf
pop
stos
jo
orb
pop
cltd
push
xchg
pushf
repz
rcll
inc
push
aad
lock
incl
fcompl
inc
fnstsw
fmul
hlt
inc
lods
mov
nop
cltd
push
sbb
pop
pop
pushl
inc
bound
add
jl
mov
lea
testl
ret
inc
and
pushf
xchg
in
leave
in
xchg
cs
in
pop
js
es
adc
fildll
mov
pop
cltd
arpl
nop
cmp
push
or
add
sti
aam
push
int3
bound
lods
push
les
inc
stc
movsb
fisttpll
sbb
inc
sarl
incl
sbb
xchg
xor
mov
loop
mov
mov
jecxz
dec
ljmp
and
pop
dec
lods
mov
fxam
sbb
je
fcmovnbe
enter
fnsave
inc
test
jne
pop
mov
push
add
jne
sub
and
in
xchg
sub
and
arpl
ds
mov
jo
mov
enter
loop
ja
decl
pop
cli
mov
push
adc
out
int3
dec
add
inc
lods
int3
cmpsb
mov
fcomi
push
pop
arpl
testl
jg
negb
lds
and
add
push
jmp
incl
out
cmp
sti
cmc
or
mov
mul
mov
mov
orb
ljmp
notb
sti
pop
jmp
dec
jl
outsb
sbb
scas
pop
xchg
cmp
and
test
xor
in
push
loope,pn
lcall
dec
ret
xor
mov
repnz
sub
dec
movsl
jb
pop
popa
add
sub
ds
fldcw
loopne
push
or
xchg
inc
pop
loope
or
rclb
mov
decl
xchg
fidivs
ljmp
insl
rolb
fimull
lods
sub
fildll
mov
sar
cmp
pop
pop
push
jg
push
ljmp
jns
ljmp
cld
mov
pusha
and
popa
and
or
cmpsl
dec
mov
in
pop
cltd
xchg
mov
jg
and
xchg
mov
fs
jmp
cmp
lcall
add
loop
add
and
rorb
jmp
sahf
subb
mov
push
mov
movsl
push
icebp
push
imul
pop
push
pop
popf
movsl
out
xchg
shlb
pop
dec
aas
mov
inc
test
push
movsb
stos
xchg
lock
ficompl
xchg
enter
jg
mov
pop
clc
das
mov
iret
aam
mov
in
xchg
mov
lcall
lcall
sbb
loopne
jle
aaa
inc
clc
es
out
loop
cmp
cld
push
frstor
adc
push
pop
loope
popa
repnz
hlt
dec
mov
decl
push
dec
push
mov
mov
mov
sarb
xrelease
incl
mov
paddsb
arpl
sub
xor
or
fstps
das
hlt
popf
out
imul
outsb
inc
mov
push
cmp
and
xchg
ljmp
push
adc
daa
and
rcl
ds
das
push
sti
pop
or
adc
data16
lcall
mov
jmp
sbbl
out
jge
adc
ljmp
mov
mov
stos
rolb
iret
xor
cwtl
call
cmp
lret
adc
mov
inc
cmpsl
mov
fld
nop
or
std
push
lret
ljmp
shr
stos
movsl
out
ljmp
insb
xlat
fwait
mov
lea
jbe
ljmp
pop
push
stos
sub
lock
xchg
imul
into
in
push
jbe
or
movsl
leave
in
sbb
fcoms
sub
jge
ss
repnz
jecxz
rcrb
movsb
jbe
inc
int3
or
pop
dec
xchg
sub
cld
sbb
movsl
lcall
xor
sbb
movsb
jns
decl
push
dec
scas
sahf
repz
and
test
lea
ss
cmp
sub
dec
outsl
sbb
xchg
jp
push
lahf
in
cmp
xor
les
jmp
das
jmp
aaa
movsb
lcall
push
jns
loop
rcll
push
out
xor
cmpsl
out
outsb
jg
inc
mov
aas
sbb
outsl
dec
popa
cld
sarl
adc
adc
sti
stos
sbb
fsubl
push
cmpsl
sub
add
and
rclb
push
xchg
push
push
sti
pop
adc
stc
xchg
pop
adc
clc
daa
adcb
ds
jne
cli
cmc
cld
sub
mov
punpckhdq
sbb
call
adc
cld
test
push
aad
aam
cwtl
ljmp
mov
pop
aas
mov
es
xchg
or
xlat
sub
in
arpl
sbb
mov
cs
push
bound
xor
adc
push
test
or
push
push
adc
adc
fcomip
decl
insl
push
mov
xchg
call
inc
loope
add
popf
lds
mov
mov
js
sub
push
push
hlt
sub
out
aam
in
je
xor
movsb
aaa
xchg
clc
ljmp
mov
sahf
fwait
sub
insb
jg
pushl
imulb
imul
outsb
jl
ja
or
xor
testl
pop
mov
jo
out
or
jns
push
incl
inc
xchg
mov
jns
je
es
push
cmpsb
push
adc
pop
aas
lahf
adc
ja
push
mov
daa
and
mov
dec
lea
inc
cmpsl
jmp
adc
and
enter
inc
xchg
lods
daa
outsb
jp
cmp
lret
mov
es
incl
mov
jne
call
data16
jl
xor
push
clc
dec
mov
sub
insb
ja
cwtl
xchg
stc
sub
ljmp
jo
sub
cmp
cmpl
dec
jae
pop
arpl
test
test
ljmp
adc
push
adc
cmpsb
loope
cwtl
in
adc
rcrb
pop
mov
call
out
pop
mov
mov
enter
loop
lcall
inc
ljmp
sub
mov
mov
cmc
int3
enter
call
out
sbb
roll
xor
imul
dec
pop
lods
mov
cmp
sahf
or
fmull
xlat
sarb
cmp
test
fildll
cmpsb
enter
xor
sub
arpl
cmp
call
lahf
add
fs
xor
les
push
ljmp
int3
mov
std
movsl
push
rorl
mov
sbb
mov
dec
dec
fisttpl
out
sbb
stos
rcrb
add
loopne
incl
jecxz
push
cli
sub
out
repnz
cmpxchg
adc
ljmp
outsl
std
push
movsl
and
cli
nop
stos
and
cmpsl
enter
bound
adc
adc
jmp
fcomip
fistl
xchg
xchg
jno
hlt
jecxz
jle
or
xor
ljmp
clc
mov
or
sarb
fnstenv
jns
push
shlb
fnsave
mov
pop
loopne
lcall
mov
mov
add
xor
lock
and
aam
sahf
mov
jl
cld
cmpsb
cs
inc
cmc
stos
rolb
xor
fistl
adc
mov
ljmp
pop
mov
mov
mov
pushl
std
or
ds
xchg
pop
enter
cmpsl
loop
mov
sbb
jmp
jnp
repz
test
out
pop
inc
bound
je
jmp
xchg
pushf
push
insb
inc
cltd
push
cwtl
call
cld
in
adc
xor
adc
add
or
lods
and
sub
cltd
ljmp
dec
insl
push
pop
std
js
and
jne
std
arpl
dec
mov
orl
dec
mov
jecxz
into
push
in
test
mov
mov
pop
sub
movsb
arpl
cmp
test
cli
xorb
lcall
xor
push
je
sbb
clc
push
xor
jl
inc
nop
outsl
mov
call
inc
cmpsl
adc
push
fs
inc
stos
pop
dec
adc
push
inc
and
jnp
or
lret
inc
stc
lcall
insl
sub
sub
mov
jns
sbbl
lcall
mov
outsl
clc
adc
jmp
scas
mov
jnp
pop
aaa
mov
rorb
and
pushl
adc
mov
sbb
mov
add
mov
repnz
jns
pop
xor
xor
lcall
xor
cmp
ficompl
and
cs
xchg
xor
push
cmp
ljmp
cmp
xor
lods
mov
xlat
add
xor
arpl
xchg
sub
call
xchg
arpl
popf
xor
mov
sbb
or
decl
daa
sarb
inc
ffreep
or
clc
dec
imul
test
pop
push
iret
dec
push
imul
xchg
outsl
push
push
es
cld
xor
push
mov
jmp
call
out
push
es
lret
movsb
cld
clc
mov
out
clc
mov
jg
mov
shlb
jo
test
cmp
shll
pushf
xor
stos
pop
loopne
and
adc
arpl
dec
andb
test
je
pop
lahf
clc
divb
push
pushl
cwtl
jae
jno
fsubs
cmp
push
and
clc
stc
shll
cmp
pushl
das
dec
lret
subb
pushf
js
loop
ret
popf
lds
insl
pop
pop
pop
dec
cmp
mov
enter
xchg
cmc
in
cmpb
pop
int3
xor
sub
test
or
xor
mov
call
mov
addr16
out
ret
in
lds
aas
or
dec
and
cmp
pusha
cmp
push
or
fxch
stos
xchg
mov
rol
sub
jns
insb
incl
cmc
std
pusha
and
add
loop
stc
out
jns
das
hlt
push
mov
clc
pop
adcb
es
rorl
sahf
sbb
jecxz
jp
pusha
fcoml
jmp
xchg
mov
adc
arpl
hlt
push
fsubrl
lods
hlt
aad
aaa
mov
filds
push
push
stos
or
cmpsb
sub
add
les
int
stos
in
mov
call
sbb
and
cmp
push
lcall
adc
dec
xchg
xor
popf
sub
ja
push
mov
call
push
mov
daa
sbb
lea
loope
dec
shl
ret
xor
lods
inc
cli
dec
out
jmp
inc
xchg
cmp
cs
or
push
movsb
push
mov
lret
ljmp
cs
and
call
icebp
nop
int
addr16
mov
and
lea
cld
cmp
bound
sbb
mov
sub
cmpsl
stos
scas
cwtl
inc
sbb
inc
jmp
stos
orl
sti
pop
pop
cwtl
insb
cltd
into
lock
and
cmp
sbb
inc
rol
adc
ss
xchg
xor
sbbl
outsl
dec
cmpsl
jle
inc
outsl
imul
mov
decl
inc
mov
in
scas
mov
fimuls
dec
sti
jecxz
adc
mov
in
int3
ljmp
push
and
xor
mov
outsb
ljmp
xor
ljmp
xor
enter
andb
repz
pop
pop
push
cmp
push
adc
call
inc
in
pop
jmp
aam
jns
ljmp
scas
cltd
push
push
dec
sbb
mov
sub
out
and
test
int
jne
incl
xchg
fadd
lds
jbe
fs
sbb
andb
push
inc
out
jecxz
dec
jg
lods
outsl
add
fwait
icebp
or
xor
xor
jbe
jb
das
clc
incl
ds
push
mov
fs
jbe
xorl
mov
inc
sub
add
aaa
outsb
pop
mov
lcall
cmpsb
mov
mov
es
fwait
inc
add
int
cli
ljmp
imul
dec
test
mov
push
in
lds
es
xchg
mov
dec
fnstsw
sbb
and
pop
fimuls
add
sarb
pop
das
shrb
dec
pop
xchg
sub
scas
push
pushf
arpl
pushf
sub
jl
lock
orb
lret
scas
iret
sbb
clc
shll
call
or
sbb
xchg
ret
clc
push
and
mov
fcoms
decl
xchg
or
xor
jge
aaa
and
pop
or
push
cld
fnsave
jbe
rclb
icebp
inc
in
mov
inc
lock
jg
dec
xchg
leave
loop
lahf
mov
addl
cmpsb
add
repz
decl
addl
sub
push
in
inc
stos
fisubs
cwtl
aam
xor
decl
js
cmp
ret
movsl
or
push
xchg
add
ret
mov
or
dec
jnp
iret
or
jnp
or
incl
hlt
mov
pop
xor
fsubrs
into
ljmp
push
and
jmp
pushf
pop
add
inc
xchg
scas
jne
inc
mov
mov
pop
xchg
cmc
fldenv
popa
mov
pushl
cld
mov
lahf
and
or
xor
nop
movsb
idivb
incl
inc
clc
mov
jecxz
test
js
xchg
adc
jb
loop
mov
pop
aam
aad
hlt
pushl
jge
test
pop
sbb
ja
test
add
ljmp
sub
mov
dec
stc
inc
movsb
or
div
jle
sti
adc
aad
aaa
test
call
mov
cmp
cmpsb
lods
lods
xor
mov
mov
cld
jg
insl
subps
dec
or
pop
sbb
cmp
mov
imul
push
lcall
std
jae
xlat
lock
mov
pop
lahf
shrl
mov
aam
jmp
inc
rcrl
mov
or
cs
cwtl
jmp
inc
cmp
in
movsb
dec
mov
es
pop
arpl
lcall
push
std
lcall
jl
sub
push
fcomps
sub
and
cmpsl
mov
call
fistpl
das
ud2
mov
fnsave
jg
jl
insb
sbb
loopne
jmp
pop
push
jg
jno
aas
sbb
call
push
jmp
popa
shrb
test
add
mov
aaa
hlt
subb
call
loop
pop
shll
cmpsl
aad
fldt
mov
loopne
mov
ja
fadd
lret
decl
frstor
dec
push
jae
mov
cli
test
aam
ja
cmpsl
or
jecxz
jnp
incl
or
pop
cmp
fildl
push
cmpsb
pop
mov
jns
sbb
call
jae
pop
cs
in
inc
leave
dec
pop
int
ret
push
adc
push
cmpb
orl
sahf
mov
jb
pop
dec
cmp
or
into
jbe
leave
loopne
jg
adc
push
out
push
popa
xor
fs
cli
pop
jg
sub
insb
repz
cwtl
jmp
fisttpl
xor
mov
ljmp
or
cmp
mov
fistl
sbb
pop
and
cli
cmp
jo
dec
adc
adc
push
or
mov
adc
shll
push
out
andb
jmp
adcl
das
xchg
jne
inc
imul
mov
scas
clc
incl
xchg
out
stos
inc
rcl
cmp
cmp
adc
add
mov
sarl
add
dec
mov
jmp
push
pop
mov
aas
sub
adc
or
inc
imul
lcall
call
mov
pop
rorb
mov
std
mov
push
pushf
call
out
push
outsl
add
push
mov
aam
lret
xchg
mov
add
stos
add
decl
andb
in
mov
xor
test
pop
push
loop
mov
js
and
ljmp
inc
cwtl
pop
daa
and
mov
cmp
push
shll
push
lahf
add
decl
lock
popf
int
sub
push
pop
xor
shlb
cmp
test
push
sub
mov
int
push
pop
daa
les
pop
sahf
ljmp
add
jb
stos
call
fstpl
inc
or
test
xchg
ss
sti
xchg
popa
outsb
mov
decl
pop
xor
ret
call
repnz
fnstenv
add
jns
adc
push
cli
ljmp
dec
scas
push
jecxz
adc
xchg
mov
mov
cs
mov
mov
and
das
or
mov
jbe
jmp
mov
mov
sub
dec
mov
nop
data16
add
cmpb
repnz
dec
cmp
sub
fwait
pop
mov
sub
dec
or
lret
iret
pop
sub
adc
adc
sub
fidivrl
dec
xchg
movb
decl
cmc
in
sbb
jb
dec
push
ret
cltd
add
push
add
push
aas
sti
and
call
jge
xor
adc
ret
mov
in
jecxz
loope
js
pop
out
dec
fwait
sub
inc
pop
pop
sbb
decl
ds
out
and
push
dec
jnp
jl
js
jo
push
mov
ljmp
jg
push
shll
inc
pop
and
es
mov
inc
sahf
and
ljmp
lret
call
or
pop
jg
pop
sub
cmp
enter
clc
mov
out
pop
jle
push
inc
mov
arpl
cli
icebp
aad
in
push
lret
cmp
fdivrp
decl
cs
mov
fst
aad
decl
in
xchg
jp
mov
js
push
nop
jge
jmp
pusha
nop
cwtl
loope,pn
mov
mov
cmpsb
inc
ret
push
mov
push
pushl
fcomps
sarl
jns
push
lea
clc
lret
mov
imul
inc
pop
xor
sub
or
xor
mov
adcb
mov
cmp
jg
gs
xorb
outsb
into
leave
jl
sub
inc
fdivs
aam
pushl
cmp
sbb
scas
add
aad
push
xor
idivl
jg
out
rclb
mov
lahf
and
rolb
sbb
add
call
pop
sub
xlat
jl
jp
arpl
mov
call
pop
sub
call
aam
mov
insl
ja
int3
cs
or
fs
sub
xchg
sbb
push
mov
repz
fimull
jl
xchg
bound
ja
into
mov
stos
ljmp
ret
sub
and
mov
fmuls
lods
iret
mov
iret
clc
std
movsl
pop
incl
sub
sub
je
fucom
lods
pop
push
in
sub
sbb
push
mov
and
fnstsw
sahf
nop
gs
push
and
jmp
sbb
xor
arpl
push
ds
imul
fwait
nop
ret
arpl
test
ljmp
xchg
lock
nop
mov
cmp
sub
jmp
dec
aad
cs
ffree
mov
cwtl
push
ret
and
cmp
mov
loope
decl
xchg
pop
cmpsb
cmp
addr16
sub
or
movlhps
ss
inc
in
push
and
dec
add
jo
lds
clc
jmp
push
cmp
cmp
add
xchg
lods
jo
int
popa
test
call
cmpxchg
imul
and
loope
xchg
sbb
aam
inc
rolb
lods
mov
orb
cwtl
subl
xchg
xor
ljmp
push
or
and
test
arpl
xchg
jbe
pop
pop
shl
jnp
pop
mov
int
mov
mov
decl
cli
xchg
sbb
xor
xor
inc
cmpsb
rcrl
mov
mov
int3
jg
incl
arpl
push
push
pushf
out
jb
out
cmp
xchg
fists
mov
xchg
sti
add
stc
jae
cmp
fdivrs
sub
mov
cmpsb
daa
rorb
lods
push
imul
jne
lcall
daa
int3
out
clc
ljmp
sbb
jae
xchg
or
orb
add
push
ret
mov
sub
or
ljmp
fwait
mov
leave
xor
call
faddl
call
stos
xchg
inc
mov
dec
sbb
jbe
push
sub
icebp
aam
cltd
pushl
sbb
push
mov
subb
outsl
mov
mov
rcll
sbb
ljmp
and
ret
fstps
out
sub
pop
push
jecxz
mov
add
pushl
sub
fisubrs
arpl
dec
xchg
fcmovnb
sbb
lock
cli
jno
test
clc
fwait
xchg
ficoms
arpl
sti
in
xchg
xchg
mov
mov
incl
icebp
out
pop
dec
rcl
lret
in
mov
pusha
add
push
arpl
xchg
jmp
xlat
in
mov
pop
mov
inc
and
fs
jno
leave
mov
cmp
aad
shrl
or
test
or
paddusb
push
cwtl
arpl
scas
shufps
adc
inc
incb
pop
fisttpl
dec
jnp
push
push
xor
pushl
lods
pop
scas
inc
mov
jo
mov
int
mov
addr16
jecxz
outsl
mov
lea
and
mov
cmc
sbb
movsl
ja
aas
inc
dec
cmc
dec
xor
push
scas
pop
int3
decl
or
repz
int3
dec
jge
push
add
cmp
xchg
push
je
xor
test
mov
insb
and
adc
lds
jg
sub
movsb
mov
xor
add
push
or
gs
pushf
idiv
incl
or
cmp
jb
xor
mov
icebp
mov
xchg
sbb
mov
repnz
jg
cld
mov
jbe
cli
xor
rcll
fldcw
fldl
imul
lret
rcr
sbbl
sbb
pop
add
daa
push
push
jnp
in
inc
inc
jne
xor
ljmp
repz
pop
jne
dec
je
dec
lock
pushf
xchg
int
bound
pusha
mov
push
or
leave
xor
xor
or
jle
arpl
cs
data16
fsub
pop
mov
or
pop
loopne
test
jb
sbb
inc
adc
jbe
cli
stos
pop
and
sarl
ljmp
and
pusha
xor
dec
fists
push
pop
push
out
test
lahf
test
cmp
and
ljmp
dec
lcall
adc
push
or
jo
push
call
aam
xor
scas
lea
div
out
and
cmp
insl
insb
cmp
sbb
jmp
jmp
adc
in
mov
nop
jno
sub
sbb
stos
pop
jle
cmp
js
insl
in
int
out
aad
mov
add
shl
pop
cmpsl
or
xchg
push
dec
dec
sub
and
and
cli
jl
xor
arpl
push
push
xor
aad
jae
jecxz
lcall
icebp
push
mov
inc
or
pop
sub
scas
test
negb
fdivrs
inc
sub
sub
jo
dec
jle
dec
inc
lds
dec
loop
and
cmp
shr
mov
mov
lods
inc
and
cmpsl
xchg
sbb
fistps
push
arpl
push
cmp
test
jno
fxch
pop
jnp
lods
outsl
pop
les
mov
loop
adcl
pop
xchg
push
sub
test
mov
loopne
lds
jmp
lret
outsb
pop
dec
icebp
sub
mov
aam
jb
pushl
loopne
dec
pop
sbb
xchg
mov
dec
ds
xchg
shlb
push
hlt
out
pop
mov
cmpb
push
sbb
xor
lock
cmc
mov
cmc
ss
dec
out
dec
fdivp
lods
pusha
in
jbe
cmp
call
push
mov
les
sbb
mov
call
gs
and
ljmp
jns
stos
add
mov
out
stc
mov
xchg
fwait
stc
mov
mov
shll
jmp
fisttpl
add
push
insl
cmp
shll
repnz
sbb
cmpsl
jnp
xchg
sub
push
popf
inc
inc
mov
inc
ja
sbbl
fistpl
xchg
out
jmp
jnp
pusha
das
mov
leave
push
and
xor
mov
ret
out
test
mov
push
mov
mov
movsl
in
jno
add
loope
mov
mov
ret
insb
push
mov
xor
mov
call
push
cwtl
sbb
rcr
ja
rolb
mov
decl
clc
mov
jle
mov
popf
or
inc
and
mov
push
fsubrs
adc
cmp
scas
sub
adc
pushl
adcb
les
cwtl
lds
movsl
and
stc
jns
int3
xor
add
and
push
pop
test
cwtl
push
decl
loopne
lahf
stc
test
sbb
lods
push
loope
call
les
mov
in
incl
push
sahf
sub
fdivrl
mov
roll
push
pop
rcr
sbb
lods
jg
lret
das
cmp
push
loop
and
icebp
fisttps
insl
push
xchg
int
dec
pop
pop
mov
fst
repz
cs
inc
adc
lahf
or
shlb
mov
sub
push
iret
mov
jmp
leave
fwait
loop
or
mov
mov
push
mov
pusha
inc
enter
push
decl
int
mov
sarb
and
pop
insl
inc
cld
decl
cmp
xchg
inc
sbb
adc
filds
int3
fidivrl
dec
cmp
xchg
cld
test
lret
jg
lock
fsubrs
or
je
sub
mov
fsubp
pushl
fidivrs
mov
daa
jbe
rcrb
adc
add
inc
js
xor
sub
mov
pushl
movq
cmp
adc
lea
xor
dec
adc
push
cmp
jge
mov
scas
cli
sub
fs
dec
ljmpw
popf
and
push
sbb
ljmp
xor
test
in
out
out
and
sub
add
mov
jle
push
mov
or
inc
jb
js
std
jg
incb
inc
mov
mov
add
icebp
cmpsb
push
xchg
int3
adc
sub
aaa
sub
fisubl
rcl
adc
repz
fldt
incl
icebp
fistpll
mov
test
dec
aaa
xor
mov
lds
ds
aas
clc
mov
ljmp
clc
and
jae
clc
pop
or
je
mov
xchg
dec
jne
rcl
cld
mov
jp
xor
add
scas
or
stos
cmp
cwtl
dec
lret
xor
test
cmpb
std
loopne
jge
jle
call
lcall
push
mov
into
mov
sbb
xchg
call
and
add
movsb
cld
ficomps
inc
dec
inc
inc
bound
cmc
cmp
test
das
mov
sti
lcall
lock
add
jnp
aam
add
inc
mov
ljmp
jecxz
mov
push
jbe
or
sub
cmpl
pop
mov
or
mov
mov
mov
push
pop
repz
ljmp
xchg
pop
push
mov
xor
or
flds
pop
aas
into
xchg
and
cmc
clc
pop
in
xorb
lcall
mov
in
es
push
mov
ja
ljmp
data16
fcomps
insl
js
addl
push
pop
mov
cmp
cmp
xorb
mov
outsb
pop
in
cltd
push
xchg
jl
mov
call
push
adc
or
js
sub
std
push
xchg
push
mov
pop
mov
call
inc
add
dec
ret
test
lds
push
aad
adc
sub
cmp
mov
jo
adc
push
je
jmp
dec
cmp
stos
fs
mov
push
gs
sbb
decl
mov
out
push
inc
xorl
push
sahf
sbb
xchg
seta
loope
int3
sar
jl
fstpl
daa
cmpsb
mov
jle
inc
pushf
sbb
ljmp
xor
inc
add
data16
mov
jbe
das
clc
hlt
gs
dec
out
and
jmp
in
cwtl
rcll
test
xorb
or
fucomip
enter
push
loope
loop
jmp
gs
dec
je
sbb
xor
pop
out
push
mov
cmc
jno
inc
mov
pushl
jle
lods
sbb
int
jmp
call
ftst
and
mov
mov
call
cmp
cmp
cmp
fisubrl
icebp
call
sbbb
incl
xor
imul
jne
mov
popf
bound
mov
js
js
inc
int3
loope
aas
inc
imul
ss
cli
daa
xchg
call
adc
outsl
mov
incl
mov
xchg
jo
sbb
dec
pushl
aaa
not
or
sub
iret
jmp
pop
mov
push
dec
pop
stc
xor
in
add
pushl
clc
mov
pop
int3
into
shll
mov
xor
nop
sbb
add
jg
mov
adc
rolb
add
pop
pop
add
xor
popa
clc
mov
je
xor
pushl
xchg
orb
gs
ja
mov
leave
sbb
cmp
sarb
ljmp
sub
lds
push
rcrl
jo
cmp
xchg
scas
stc
or
call
sub
mov
xchg
push
add
xchg
jecxz
xor
push
outsb
sarl
fists
lea
jb
lods
jle
loopne
sub
sbb
ret
mov
incl
loopne
call
jae
lret
inc
call
js
idivl
pop
or
pushl
cmpsl
jnp
mov
xor
push
cli
inc
jnp
insl
fadds
loope
mov
sub
mov
incl
std
dec
xrelease
fs
fidivl
mov
jle
lcall
and
jg
xchg
jge
fst
jg
mov
xor
or
icebp
jge
arpl
pop
arpl
cmc
lahf
out
push
jo
mov
fwait
adc
fcomip
pushl
mov
dec
fsub
out
mov
push
cli
loop
mov
std
roll
popa
loope
imul
xor
aaa
jne
out
push
cmpsb
xor
xchg
icebp
mov
dec
scas
mov
cmp
jmp
repz
or
mov
xchg
sub
popa
cs
or
jmp
inc
sbb
insl
out
aas
and
mov
test
mov
lock
ljmp
push
or
ret
iret
xchg
js
sbb
jp
sbb
inc
gs
call
push
pop
in
rcrb
pop
push
mov
mov
or
decl
dec
dec
rorl
fnstcw
jl
fildll
add
inc
sbb
cld
or
add
aad
call
pop
pop
mov
adc
orb
mov
loop
xor
pop
cmp
test
adc
inc
dec
cmp
outsb
pop
dec
subb
jmp
pop
rcll
es
arpl
mov
je
jbe
mov
mov
mov
inc
outsb
pop
xor
mov
add
inc
xor
inc
mov
cmp
daa
jle
incl
insb
lcall
jl
jmp
dec
lock
cwtl
add
adc
outsl
xor
pop
push
cwtl
js
sub
sbb
lret
xchg
fimull
jae
sahf
stos
cmp
int3
sbb
mov
popa
adc
mov
mov
aam
sbb
cmpsl
push
repz
notb
push
cmp
es
hlt
mov
movsb
stc
rcll
lock
ljmp
andl
cld
push
xlat
ds
scas
lahf
xorb
push
xchg
stos
dec
adc
dec
xor
sub
lea
sbb
sbb
inc
push
jae
rcl
mov
test
lcall
pop
loop
loopne
loopne
xorl
and
push
and
cld
in
fisttpll
mov
lcall
jne
and
aaa
loopne
aaa
jecxz
cmp
pusha
mov
mov
xchg
jg
incl
nop
mov
cmc
aam
cmc
fisubs
xchg
or
dec
mov
xor
push
adc
sub
jmp
dec
dec
add
sub
lds
out
jb
jl
push
jecxz
inc
in
in
icebp
fidivl
cmp
hlt
std
xor
xor
sub
dec
cmp
lcall
incb
js
sbb
mov
and
shlb
inc
or
sub
lods
outsb
test
pusha
adc
jae
nop
repnz
sbb
fistl
mov
call
ret
mov
movsb
mov
mov
fisttps
dec
inc
js
adc
int
or
imul
add
jmp
sarb
jp
fwait
and
test
call
cmp
jo
pushf
outsl
pop
or
incl
push
inc
scas
loopne,pt
mov
fwait
push
push
xchg
add
lods
ja
clc
lcall
int
pusha
cmp
shl
cmpsb
add
and
aaa
adc
popf
adc
sub
pop
ljmp
popa
dec
mov
es
jmp
inc
jno
sbbl
push
xor
decl
into
push
sub
adc
loop
test
push
add
ljmp
mov
jmp
adc
stc
cwtl
mov
enter
lret
outsl
sar
lcall
mov
xchg
sbb
cmp
rorl
jle
aas
lahf
xchg
dec
jp
hlt
jmp
xor
icebp
jg
and
and
sbb
or
cmp
dec
shll
lcall
faddl
mov
movsl
aad
dec
and
sub
pushl
js
push
lcall
and
adc
movsb
iret
repz
jns
jnp
scas
add
lcall
mov
incl
and
insl
out
insb
inc
lret
push
pop
lret
jl
push
loop
icebp
rcr
std
in
mov
jmp
pushf
pushf
jg
sub
into
bound
arpl
js
cwtl
cli
ljmp
outsb
xchg
movsb
adc
ja
daa
fiadds
inc
mov
js
sub
outsl
push
add
pop
repnz
enter
nop
add
or
test
dec
sbb
faddl
add
xor
cmpsb
aas
adc
fidivrl
dec
jb
and
sub
stc
std
pop
add
frstor
call
inc
clc
lea
add
mov
out
mov
loopne
in
mov
aam
int3
popa
add
add
sbb
or
adc
adc
in
jb
sbb
or
lret
mov
mov
lock
mov
jle
es
xor
mov
in
fbstp
int3
mov
shl
sahf
or
into
add
mov
ja
cli
lcall
mov
pushl
aas
mov
lea
aam
and
or
pop
sub
pop
pusha
add
cmp
or
popa
loope
aam
imul
mov
xor
jecxz
dec
ljmp
jmp
outsb
cs
sbb
call
sbb
cld
cmp
addl
xor
cmp
sbb
mov
add
sbb
arpl
test
and
movsl
xor
outsb
push
sub
dec
test
inc
adc
inc
push
adc
test
inc
jecxz
pop
call
cli
cltd
std
xchg
push
pop
insb
loop
pusha
std
add
pop
pop
test
mov
adc
clc
cmpsl
lea
sbb
adc
enter
je
adc
mov
sub
insb
sub
ficomps
push
mov
add
scas
mov
adc
nop
add
test
jp
dec
adc
dec
sbb
pop
pop
les
add
imul
mov
mov
jge
add
and
jne
add
cmp
mov
insl
fcoms
fmuls
imul
add
jle
add
or
add
loop
scas
scas
mov
inc
xchg
popf
std
inc
lcall
mov
or
pop
push
pop
incl
xchg
inc
rclb
xor
push
sbb
xchg
das
cmpsb
jp
dec
sbb
or
xchg
jne
jle
test
iretw
loopne
push
pop
test
dec
pop
sub
jl
in
dec
xor
inc
add
or
push
shrb
faddp
fildl
jg
int
push
mov
inc
xorb
enter
add
cltd
mov
test
hlt
jo
rorb
jno
mov
insl
xor
lods
xchg
icebp
add
or
and
shrl
inc
leave
xchg
xor
adcl
push
pop
push
mov
add
push
in
add
ret
cmp
dec
adc
clc
aaa
push
clc
add
gs
push
push
shrb
fwait
push
inc
adcb
add
push
std
add
leave
mov
and
dec
cli
adc
jl
xchg
mov
das
outsb
cli
inc
shlb
call
imul
jp
inc
cwtl
cltd
inc
or
pop
jecxz
decl
sub
fadds
add
push
dec
mov
sbb
cmp
in
fs
es
mov
hlt
dec
push
sti
stos
sub
jbe
dec
sbb
xorb
fldt
repnz
ret
cltd
out
scas
cs
sub
loop
add
fs
pop
mov
rol
sbb
dec
jp
mov
xor
or
or
sahf
in
icebp
mov
add
add
je
push
adc
in
and
xor
out
push
add
push
cmpsl
jl
jo
pop
cli
data16
roll
loopne
inc
test
addb
push
nop
xor
outsl
ja
and
jo
sbb
out
fldt
bound
sti
out
and
movsb
cs
xchg
lods
sub
mov
xor
subl
out
mov
mov
mov
mov
push
push
lret
enter
jno
and
push
fsubr
mov
adc
jno
pop
out
push
inc
pop
fcom
fs
or
and
xchg
mov
into
dec
and
xor
movb
lcall
and
pop
push
fs
mov
testb
xlat
and
ds
ljmp
rolb
daa
add
je
ja,pn
mov
fildll
add
mov
pop
fidivl
mov
int3
push
adc
xor
or
loope
jg
xor
shlb
and
push
lea
lods
fwait
enter
cmpsb
bound
add
notl
test
rcr
inc
clc
push
out
pop
icebp
lcall
pop
xor
push
mov
mov
xchg
cmp
shl
mov
rcr
adcb
in
adc
dec
loopne
push
cld
or
stos
popa
je
mov
out
sbbl
cmpsb
or
ljmp
nop
sbb
sar
pop
inc
xchg
cmp
pop
adc
adc
pop
js
fdivrs
adc
imul
xchg
pop
out
addr16
nop
lret
ljmp
ljmp
dec
inc
pop
jecxz
and
xor
mov
add
shl
enter
pushf
dec
inc
imul
mov
stc
movsb
fwait
mov
fsts
pop
les
cmp
jne
mov
or
mov
xor
loop
sahf
mov
fisubrs
adc
add
stc
xor
decl
inc
xor
insl
push
dec
adc
mov
rorb
ret
mov
mov
imul
loope
mov
std
sbb
daa
pop
push
test
dec
jno
pusha
mov
push
int3
xchg
enter
incb
cmpsb
xchg
mov
fcomip
pop
or
mov
mov
mov
outsl
adc
mov
and
movsb
xor
xor
or
scas
fcom
sahf
inc
xorb
mov
add
aad
std
xchg
pop
or
inc
repz
mov
jo
push
lret
xchg
popa
cli
decl
adc
adc
mov
inc
in
out
mov
ljmp
andb
insb
add
pushl
fdivl
movsb
test
mov
adc
push
movsl
pop
loopne
ja
fs
sarl
jae
or
or
out
popf
push
pinsrw
cmp
fnstsw
fidivl
fisubrl
sub
or
rclb
inc
add
imul
sbb
dec
or
adc
rcl
lea
or
push
mov
xorb
mov
scas
xchg
mov
push
fbstp
lcall
movsb
and
ss
fbld
cld
cmp
fwait
mov
rcr
mov
or
inc
ljmp
xor
aaa
mov
adc
std
addb
icebp
out
cmpsb
jecxz
add
mov
in
lahf
ss
jo
xchg
xor
jbe
into
es
incl
adc
sbb
ret
dec
lahf
fcompl
sub
cltd
sbb
hlt
clc
call
cwtl
jbe
jae
inc
inc
lret
lock
and
das
xor
xlat
fildl
ja
mov
es
push
pusha
xchg
adc
xor
stos
sub
jb
add
sub
fs
push
mov
aam
fadds
and
pushl
push
mov
mov
loop
sub
adc
sub
pop
divl
lahf
rolb
ret
es
ljmp
inc
adc
stos
cwtl
jmp
stos
jle
and
lds
inc
hlt
inc
cwtl
dec
lods
jg
outsl
xchg
fsts
xchg
and
insb
loop
jo
sub
cmp
mov
aas
iret
cmp
pushl
jo
ljmp
shlb
inc
adc
test
ret
jg
xchg
xchg
add
sbb
or
test
sub
inc
dec
xchg
and
push
in
fbld
cmp
cwtl
rcl
add
aam
jecxz
xor
xor
ljmp
mov
inc
adc
insl
int3
loop
adc
mov
in
and
cld
sbb
inc
mov
clc
pusha
cmpsb
mov
cli
cwtl
mov
add
in
out
loop
pop
mov
cld
scas
adc
and
inc
add
mov
push
sub
push
and
jmp
outsb
lods
fistpll
pop
add
mov
mov
push
mov
leave
mov
mov
je
and
mov
adc
cli
insl
jnp
push
adc
icebp
mov
bound
inc
sahf
or
rcrb
xorl
push
adc
fiaddl
stos
jmp
jl
push
icebp
mov
dec
pop
addr16
inc
or
mov
xchg
rcr
sub
outsl
cmp
push
mov
inc
mov
sub
adc
adc
pop
and
adc
and
pop
add
or
lock
mov
into
test
or
or
data16
lds
data16
test
add
test
pop
pop
sbbb
inc
pop
push
jmp
sti
pop
imul
mov
nop
nop
mov
sbb
test
sbb
out
push
int3
mov
xor
mov
sbb
dec
inc
cmpb
fisubrl
lcall
rolb
push
ss
mov
shlb
mov
iret
adcb
pop
scas
loopne
setl
scas
ficoml
iret
mov
mov
and
imul
out
addl
dec
bound
call
ret
add
cli
out
adc
int3
les
mov
aaa
jle
mov
sbb
inc
out
xchg
push
stos
sub
es
sahf
mov
xchg
loopne
lcall
dec
rolb
xor
dec
add
and
in
cwtl
sub
adc
fisttps
sbb
fstpt
xor
mov
bound
or
mov
test
fisttpl
mov
js
xchg
cmpsl
dec
movsl
rclb
lret
inc
shll
mov
mov
cmc
call
mov
in
cmc
mov
sub
out
lcall
inc
sub
sbb
js
push
cmp
popf
jnp
pop
nop
dec
decl
or
ret
gs
jb
and
mov
sbb
mov
push
jb
mov
fidivs
add
gs
mov
cmp
ret
inc
mov
pop
test
lods
nop
push
inc
xor
hlt
xchg
cmp
scas
divb
shr
xchg
outsl
stos
in
pop
pop
fdivs
jne
push
pop
mov
cmp
in
sbb
xchg
add
pop
add
xchg
bound
and
icebp
insb
add
dec
pop
fistps
push
add
popa
faddl
rcl
dec
es
jge
mov
or
faddl
adc
cmc
push
insb
mov
insb
adc
dec
push
push
jo
mov
aad
fbld
adc
mov
jo
cmovns
insb
lds
lcall
pop
inc
and
adc
fbld
out
dec
rcl
xchg
mov
sbb
sub
data16
mov
test
or
mov
pushf
mov
ss
ljmp
insl
fnstenv
repz
inc
or
pop
rorb
mov
rcrb
dec
inc
in
push
mov
or
dec
loopne
clc
mov
sti
into
xchg
jbe
push
or
xchg
and
in
bound
rol
jl
aas
dec
jge
xchg
rcrl
and
and
outsl
ret
ret
jle
loopne
cld
int3
sbb
pop
and
int
test
sbb
insl
in
scas
cs
or
mov
mov
orl
jb
ret
sub
dec
jl
push
roll
inc
jbe
dec
imul
ss
and
sub
inc
xor
hlt
or
sbbl
lds
mov
push
mov
sbb
sbb
mov
loop
out
subl
andl
add
setp
cmp
push
mov
andb
mov
or
cmp
mov
adc
icebp
push
push
and
inc
pop
pop
mov
add
xchg
pushl
enter
push
je
and
push
pop
lahf
std
lret
add
rcrb
int3
inc
jmp
test
dec
ja
pop
sbb
or
pop
xlat
add
xchg
or
call
add
sub
ret
popa
dec
pop
pop
mov
xchg
cli
push
pminub
inc
stc
or
nop
test
push
pop
mov
call
mov
jecxz
xor
xchg
dec
arpl
aam
dec
mov
add
popa
data16
cmp
test
pop
aad
mov
and
inc
adc
fnstsw
test
into
sarb
repz
sub
cmpsb
xchg
mov
rorb
rorl
adc
js
mov
cltd
adc
inc
dec
add
or
frstor
xor
ret
fcom
inc
add
jge
inc
loope
loop
adc
or
jecxz
outsb
push
or
es
fmuls
jnp
push
add
stos
test
xlat
dec
fists
in
jb
cmp
mov
shll
in
cmp
test
push
aaa
xchg
dec
test
jge
inc
cmp
inc
das
inc
xor
enter
test
mov
mov
dec
aam
xchg
mov
mov
roll
jo
mov
and
sub
add
test
call
loopne
adc
xor
push
arpl
inc
push
xor
fs
mov
aas
loop
mov
call
mov
jmp
cwtl
std
mov
cmpsb
push
lods
or
pop
mov
xor
out
lret
mov
inc
js
jbe
repz
aas
das
ret
push
call
test
add
stos
add
in
mov
lds
jp
clc
int
sbb
in
mov
cwtl
clc
dec
stos
or
nop/reserved
dec
cmp
std
leave
shrb
in
pop
add
cmp
iret
and
push
inc
and
out
and
mov
add
sbb
fstpl
lret
pop
mov
adc
outsb
inc
ror
push
fmuls
add
inc
cmpsb
sub
xchg
rclb
hlt
push
jbe
mov
sbb
lods
neg
adc
sbb
int3
or
add
pusha
xor
jp
std
loope
inc
jbe
xor
push
lcall
aas
icebp
ljmp
and
and
xor
out
fadds
sub
fstpl
dec
jae
fs
or
sbb
mov
arpl
jecxz
fbld
cltd
mov
inc
jo
sbb
xlat
enter
aad
jno
aad
push
jb,pn
das
ljmp
add
cli
cs
pop
fistl
ficoms
test
adc
aas
fiaddl
push
push
add
push
adc
enter
pop
push
jl
push
add
sbb
sub
addr16
sub
adc
out
or
push
mov
decl
mov
std
jg
sarl
lock
loopne
xchg
jg
xchg
pop
sbb
rol
decl
fwait
add
sar
aam
pop
sub
sub
lock
addr16
ljmp
loopne
mov
daa
cmpb
add
mov
push
mov
pop
sarl
lcall
xchg
in
sti
outsb
or
xchg
cli
roll
push
push
or
inc
out
jno
fs
add
mov
and
ss
inc
rcrl
jae
ret
mov
jmp
mov
sbb
push
adc
stc
xchg
lock
xor
in
xor
out
mov
or
add
lret
dec
bound
and
and
incl
jnp
jbe
xchg
sub
sub
jl
lcall
sbb
bound
ljmp
fdiv
dec
push
and
fcmovb
movsl
xlat
sbb
xor
fdivrs
lock
jb
push
push
shufps
stos
xchg
lock
jbe
int3
leave
nop
outsb
clc
out
movb
pusha
or
sub
push
decl
mov
mov
lahf
pushf
loope
nop
hlt
mov
or
fists
jno
fldt
ss
pop
and
and
in
or
insb
xchg
pop
mov
sbb
cmpsb
loopne
std
push
mov
inc
mov
pushl
add
sbb
test
aad
clc
mov
jecxz
xchg
adc
adc
hlt
subb
and
mov
push
lret
mov
push
andb
stos
push
jle
inc
sub
nop
and
out
add
pop
mov
mov
mov
push
addr16
in
das
cli
xchg
fistpl
les
xchg
je
push
xchg
stos
cmp
inc
mov
fdivrs
xchg
push
scas
je
sbb
add
stos
and
push
push
inc
sahf
cmp
cld
mov
mov
cld
scas
mov
dec
push
in
test
lea
sub
mov
clc
or
loopne
mov
mov
incl
cmpb
mov
insb
xor
pop
adc
cmpsb
mov
sub
cmc
cmp
mov
fwait
jp
mov
icebp
add
loopne
push
inc
loopne
idiv
mov
test
dec
jl
loopne
pop
jge
outsl
les
popa
int
mov
cs
xor
adc
and
fsubs
cltd
test
mov
push
cld
add
and
xor
lret
push
icebp
cmp
mov
push
sub
and
lds
scas
cmc
scas
mov
and
xlat
or
jecxz
call
sub
add
jo
lock
test
xor
inc
in
loope
adc
mov
rorl
sahf
push
fcomip
cltd
mov
clc
das
ret
lret
mov
add
pop
dec
in
ljmp
sub
pushf
js
add
das
and
clc
aaa
in
clc
cmp
sahf
or
sbb
cmp
fisubl
out
aas
sub
pop
add
inc
nop
call
xor
sarl
push
cld
or
aam
xchg
into
add
mov
sahf
clc
aas
mov
clc
adc
and
in
push
pop
cmpsl
test
pop
jo
mov
add
jbe
ja
pop
jbe
daa
add
call
orl
rcrl
mov
and
mov
jmp
pop
loopne
pop
ds
mov
add
cmc
cmp
mov
push
mov
decl
test
or
iret
dec
add
pop
mov
sbb
jbe
jno
outsb
and
jo
ficompl
mov
mov
in
push
movsb
or
addl
or
enter
addb
jmp
pop
or
add
adc
inc
scas
push
and
in
cmp
loopne
add
movsl
add
pop
je
mov
mov
les
jmp
lcall
adc
sub
aas
ret
xor
shrl
pop
add
xor
jbe
add
sbb
data16
inc
int
ljmp
inc
hlt
xchg
movsb
mov
sub
sub
ljmp
adc
add
insb
xchg
dec
arpl
jecxz
add
cmp
mov
pop
loopne
cmp
or
push
xchg
outsb
movsl
xchg
aad
jmp
sahf
in
insb
lretw
dec
xor
fistpll
out
les
jno
xor
mov
sbb
cmp
inc
pop
jp,pn
push
jge
mov
rorl
fisttpll
and
dec
call
fldenv
nop
pop
shll
push
push
or
aas
fs
js
inc
jno
in
pop
aaa
invd
jbe
inc
sbb
sub
std
jg
add
mov
sbb
xor
aas
inc
clc
sbb
push
sbb
lret
test
fwait
inc
cld
decl
mov
jl
sarb
or
mov
lds
push
adc
decl
lret
clc
and
stos
jno
nop
aam
mov
stc
jp
arpl
ss
or
pop
inc
mov
rol
push
ret
jnp
dec
clc
push
jo
add
rcrb
incl
repnz
inc
mov
cs
cmp
clc
sbb
pop
fidivs
jns
stos
add
xchg
or
ljmp
ljmp
add
into
add
inc
pop
fcmovbe
jg
inc
push
xchg
adc
aad
pop
sbb
pushf
dec
aam
sub
rorb
xchg
sbb
mov
mov
sarl
sbb
dec
mov
call
pop
push
pusha
out
adc
dec
stos
xor
test
cmp
xchg
lcall
les
push
xchg
adc
push
aas
xor
pop
sub
mull
pop
push
mov
or
pop
sti
loop
cmp
inc
fcomps
das
mov
cmc
and
mov
je
dec
std
jg
dec
inc
ja
test
mov
cmp
repnz
and
dec
push
insb
das
icebp
shll
in
jnp
add
pop
jl
inc
and
push
test
lds
inc
xchg
stos
jg
push
lods
orb
add
mov
pop
lock
loope
sub
inc
shl
pop
xor
shrb
subl
daa
jl
inc
dec
xchg
mov
shll
or
adc
fwait
cld
les
ret
jne
lods
jge
jmp
xchg
lds
cld
cld
mov
pop
push
lret
cmp
sbb
arpl
jl
nop
mov
ret
adc
ror
pop
cs
outsl
nop
aam
subb
sub
cmpsb
movb
mov
pop
daa
push
mov
push
push
out
add
push
fildll
cmp
insb
mov
test
mov
add
pop
pushf
xor
and
pop
xor
rorl
xlat
adc
in
xor
stos
jl
repnz
out
sub
xlat
push
scas
sbb
sbb
icebp
or
aaa
fs
adc
mov
push
pop
ljmp
xor
sbb
adc
and
push
pop
lods
loop
adc
mov
xchg
aas
xor
inc
jmp
data16
mov
xlat
xor
mov
test
mov
pcmpeqd
and
push
cli
and
xor
push
outsl
xchg
xchg
repz
lock
mov
pop
mov
mov
push
movl
push
decb
jae
pop
daa
and
xlat
push
xchg
outsl
mov
xchg
push
sub
pop
imul
fimull
sub
sbb
call
call
clc
push
daa
lods
cmp
ficompl
lods
jge
add
xchg
cmp
cmp
xchg
pushf
jo
movsb
push
mov
lock
lcall
xor
cmp
pop
sahf
xchg
movsb
outsb
lcall
and
mov
sbb
adc
sub
mov
jg
or
mov
jl
fisubl
sbb
in
lock
aam
cld
adc
lock
mov
out
movsb
mov
mov
mov
mov
imul
push
loope
ret
add
and
daa
daa
mov
pop
hlt
nop
lret
jge
cmp
movsb
xor
add
xchg
and
mov
loopne
xchg
inc
lcall
pop
jp
jo
mov
push
scas
rolb
jle
aam
xchg
mov
sbb
sbb
dec
pop
mov
sub
lcall
ds
jl
pop
sahf
add
push
dec
ss
addr16
lea
insl
dec
mov
int3
jbe
in
rolb
pop
int3
iret
sbb
clc
cwtl
inc
and
adc
mov
pop
fbstp
dec
mov
leave
scas
or
scas
and
in
sarl
add
mov
mov
shl
sbb
jb
or
jle
pshufw
out
dec
fbld
leave
cmp
cmp
push
shlb
sub
mov
ret
sbbl
sbb
push
push
dec
pop
cltd
add
sub
int
pop
mov
lock
sbb
iret
dec
sbb
jecxz
pop
mov
mov
je
int3
lcall
xor
jmp
jecxz
inc
test
cmpsl
sbb
xor
mov
fdivrs
popf
fs
xchg
and
movsb
inc
ljmp
pop
adc
mov
in
jns
mov
push
jg
jle
adc
xchg
lock
xor
push
push
sub
xchg
insb
gs
dec
sbb
and
push
mov
mov
jo
int3
mov
movsb
add
jge
jg
push
push
lret
ljmp
shrb
movsl
punpckhbw
dec
in
inc
and
mov
xchg
lcall
inc
sub
xchg
test
enter
dec
adc
push
cmpsb
daa
adc
aaa
mov
negl
in
aas
mov
repnz
xor
dec
push
cmpsl
cmp
mov
mov
cmp
pop
xchg
push
and
clc
mov
movb
shlb
rclb
movsb
and
add
dec
aam
arpl
rcrl
jle
repz
es
ds
es
jle
fsubr
lahf
pop
stos
mov
fsubrs
cld
in
repz
sbb
inc
push
mov
mov
add
popf
inc
movsb
stos
jg
movsl
out
pop
sub
push
pusha
jo
xor
sahf
jecxz
cmp
imul
mov
repnz
push
add
lods
nop
sbb
dec
adc
fwait
das
jge
push
pushf
cmp
imul
sbb
ror
xchg
test
cmp
lret
dec
add
test
adc
mov
push
in
cmp
mov
and
insl
bound
sub
mov
call
or
push
pop
testb
nop
mov
adc
mov
daa
testb
xchg
jae
ljmp
iret
das
js
sbb
xor
fisubs
popl
rorl
or
cmp
sbb
in
nop
pusha
rolb
add
cmc
jge
lods
adc
inc
loope
nop
sub
sbb
mov
mov
jg
xor
stc
dec
adc
rcrb
ss
js
inc
sti
popa
loopne
or
mov
push
and
push
pop
inc
add
js
cmc
jl
ljmp
dec
clc
jl
jno
jecxz
shrb
rcll
hlt
lea
ljmp
or
orl
ja
loop
cmp
in
arpl
and
std
mov
jge
rorb
subb
and
pushl
sahf
dec
enter
or
add
clc
ds
add
push
xlat
push
mov
mov
push
pop
adc
sar
outsl
mov
add
cmp
inc
decl
mov
jbe
sbbb
fisubrl
insb
mov
in
insl
add
jge
xor
adc
dec
hlt
mov
fbstp
mov
mov
shlb
pop
xchg
pop
or
sub
jmp
shlb
scas
out
lret
fisubl
mov
ljmp
and
mov
loope
or
jp
or
das
cmpsb
int3
mov
sahf
call
mov
xchg
sbb
incl
jmp
clc
add
cltd
out
pushf
sti
inc
inc
adc
mov
lds
and
or
jb
and
xor
dec
cld
ret
out
dec
inc
cmp
pop
je
pop
inc
cmp
cld
dec
fsubrs
mov
inc
movsb
fwait
roll
and
in
and
adc
out
adcb
fists
mov
imul
inc
cld
jg
int
inc
adc
jbe
push
sub
xchg
xor
sbb
out
loope
add
add
leave
adc
xchg
inc
jecxz
dec
or
or
mov
sbb
jns
outsl
mov
dec
dec
dec
jle
leave
call
adc
xor
add
lcall
and
sbb
lret
pop
loopne
mov
filds
mov
lock
out
loope
clc
lcall
fs
dec
imul
and
stos
sub
lods
pop
ret
and
decl
xchg
cmp
push
cmp
mov
mov
jg
xor
mov
test
xchg
push
or
jno
fildll
test
mov
jno
add
and
fs
clc
ljmp
mov
outsb
inc
outsl
lods
aad
test
mov
and
imul
decl
pop
inc
dec
mov
js
hlt
nop
or
jl
lock
in
int3
lret
mov
fsubrs
mov
loop
test
dec
fbld
cs
cltd
test
jbe
cld
ja
inc
lret
adc
push
dec
ret
scas
jmp
add
and
dec
ret
cmp
jg
call
repnz
or
push
jmp
enter
out
or
sub
pop
push
push
xchg
jge
fsub
mov
sbb
xchg
ret
je,pt
mov
repz
inc
cld
addb
push
xchg
or
decb
shr
mov
mov
js
pop
adc
add
lods
jge
lahf
dec
push
dec
push
inc
add
hlt
add
jmp
ret
xchg
popa
les
out
dec
jmp
push
divb
mov
or
sub
dec
stos
cmp
adc
shl
or
push
out
push
xor
adc
jne
fdiv
lock
rclb
or
movsb
push
xchg
imul
in
jp
clc
push
push
dec
shl
lret
xlat
mov
out
iret
popf
push
rcl
je
fimull
push
ror
mov
mov
cmp
add
cld
add
sub
outsl
inc
stos
inc
push
paddq
mov
out
or
bndldx
js
dec
mov
andl
sbb
inc
int3
rolb
mov
pushf
add
push
xchg
adc
test
notb
sbb
mov
cmp
mov
push
mov
sbb
mov
mov
add
cmpsl
mulb
in
cs
add
faddp
jo
loope
inc
andl
xchg
inc
in
hlt
daa
shlb
and
xchg
push
nop
adc
repnz
int3
cwtl
fmuls
out
mov
shlb
sub
push
aam
mov
adc
xchg
mov
jg
ret
jmp
jo
mov
mov
jmp
mov
inc
shrl
mov
addr16
sbb
push
icebp
cltd
inc
sbb
loopne
pushf
fdiv
loopne
les
push
push
jb
rol
stos
inc
push
push
dec
add
int3
mov
loop
push
mov
test
mov
or
jecxz
ss
xchg
dec
mov
shrb
adc
sbb
dec
lods
insb
add
xchg
jle
jl
adc
pop
mov
pop
aam
out
outsb
call
insb
inc
xchg
adc
push
ret
shrl
mov
cmp
mov
and
jmp
jbe
dec
push
mov
lock
push
xchg
stos
or
sbb
aad
imul
fidivl
loopne
mov
cmp
cli
std
decl
js
popf
daa
push
pop
test
fisubl
mov
inc
inc
adc
test
pop
pop
test
loopne
mov
push
mov
cmpsb
hlt
pushl
jmp
mov
mov
sbb
or
lea
int3
orl
sbb
inc
scas
ss
fcmovbe
lock
cmp
fs
cmp
inc
mov
orb
dec
call
mov
mov
xchg
cmp
mov
and
jp
ljmp
mov
xor
sbb
inc
arpl
mov
in
call
mov
loopne
cmp
cltd
jp
cmp
int
cltd
push
add
sbbb
es
jo
adc
pop
lcall
mov
inc
mov
or
and
lods
cld
cmpsl
jmp
loopne
pop
pop
adc
ja
mov
and
mov
ret
out
and
sbb
mov
xchg
or
aad
xchg
repz
mov
cld
movsl
push
pop
test
or
nop
aad
mov
adc
push
iret
mov
cld
pop
or
sub
ja
xchg
push
push
mov
sub
pop
imul
dec
rolb
pop
sbb
mov
sbb
arpl
rolb
nop
jb
std
pop
push
ret
fidivrs
dec
mov
mov
fwait
add
adc
pop
clc
mov
xchg
js
fmull
push
lcall
add
movsb
hlt
rol
jo
insl
add
jb
icebp
outsl
jb
dec
sar
cmc
shl
imul
cmp
push
lock
cmp
or
cmpsl
cmp
add
aad
ret
outsb
jle
sbb
push
dec
sbb
inc
or
js
cwtl
pop
xlat
pushf
mov
rolb
adc
mov
lret
inc
ret
or
and
lret
aas
or
stos
add
aas
inc
mov
sub
dec
mov
jnp
aaa
repnz
jbe
jmp
aaa
lea
cs
cmp
rorb
push
or
sar
in
orb
sbb
pop
add
inc
ret
pop
fisttpl
cli
mov
mov
clc
mov
loopne
nop
adcb
bound
jmp
insb
fsubs
mov
out
pop
cmp
std
or
sub
imul
and
addr16
das
aam
insb
ss
les
add
aas
test
sarl
addr16
fstpl
pop
inc
add
stc
mov
fisubrs
loope
stos
sbb
ja
jo
and
icebp
push
sti
cmp
push
test
mov
pop
mov
sbb
adc
bswap
in
enter
or
outsl
insb
cmp
inc
xchg
jmp
inc
mov
shrl
mov
outsl
inc
stos
fistpll
mov
fcomps
pop
in
pushf
cmp
xor
lods
orb
mov
fidivrs
xchg
ret
push
and
icebp
aaa
and
or
aad
decb
js
pop
test
scas
mov
inc
and
out
hlt
jmp
lock
adc
xor
pushf
rolb
mov
adc
in
inc
cld
inc
jl
leave
orb
shrl
outsl
pop
roll
dec
jl
inc
add
call
icebp
ja
fcoml
adc
adcb
dec
lock
sbb
mov
xor
test
mov
mov
push
push
fmuls
jp
xchg
push
sahf
pop
call
sbb
add
adc
xor
mov
push
dec
shll
adc
xor
loopne
shr
scas
icebp
pop
xor
outsb
xor
movsl
pusha
xor
jl
insb
out
push
lret
int3
je
inc
pop
xchg
stc
and
pop
rcrl
jo
pop
stos
cmp
jo
nop
popa
sub
adc
push
mov
rorl
arpl
pop
add
pop
into
or
fcmovbe
push
and
cli
movsb
dec
push
or
roll
mov
jns
in
in
mov
lds
movsb
jo
push
pop
fstpl
dec
inc
add
aam
fstpt
push
sub
jecxz
add
and
jg
repnz
jb
add
cld
add
push
push
xchg
mov
push
add
scas
sarb
inc
or
or
sbb
dec
shr
jecxz
shlb
roll
hlt
mov
hlt
mov
adc
lcall
into
inc
adc
je
rorl
push
call
lahf
dec
sbb
ja
xorl
push
jns
test
pop
jle
push
push
mov
mov
sub
pop
loop
and
lcall
or
xchg
pop
or
inc
decb
lret
cmc
adc
loope
movsb
jecxz
mov
add
mov
push
and
inc
clc
pop
loope
js
stos
xor
loope
mov
cmp
loopne
rcrb
scas
or
inc
cmp
ret
imul
aad
outsb
mov
clc
inc
push
or
test
mov
dec
cmp
fcomps
lds
lcall
mov
or
add
pop
mov
sbb
sub
cld
inc
sbbb
int3
jbe
je
cli
mov
pushl
push
pop
and
push
mov
sbb
push
shlb
xchg
int3
or
outsl
test
adc
call
add
shrl
mov
in
lcall
cmp
test
out
push
mov
add
sub
adc
cmp
xor
push
or
pop
out
idiv
xchg
cmpsb
mov
adc
lcall
sar
pop
mov
add
dec
mov
js
mov
es
inc
push
xchg
jle
or
shr
pop
je
mov
shll
add
jp
popa
pop
ret
rclb
mov
xchg
pop
xor
and
mov
xor
sub
je
push
out
pop
add
push
std
subb
les
not
dec
orb
cld
lahf
dec
cmp
jle
shll
xor
cs
sbb
adc
sti
imul
div
mov
pop
add
sahf
and
cmc
jle
pop
call
adc
xchg
les
dec
std
jmp
sbbl
and
or
or
mulb
xchg
push
pop
adc
inc
xor
push
jecxz
pop
addb
enter
inc
dec
sar
rcrb
pop
xor
faddl
insl
insl
xchg
call
adc
dec
xchg
loop
dec
clc
mul
add
or
adc
fcompl
std
add
enter
dec
mov
sub
ja
ret
scas
xchg
mov
pop
inc
pushf
adc
mov
xchg
pop
add
ljmp
fmul
js
cmp
loop
pop
fmull
es
jp
jbe
and
insl
inc
pushf
orb
cld
decl
add
pusha
lock
sub
mov
cmpb
dec
pop
add
cltd
rorb
push
loopne
movsl
pop
inc
je
jbe
dec
pop
adc
jl
mov
dec
mov
fs
push
dec
movsb
or
je
push
pusha
mov
sub
test
call
inc
shll
jle
mov
out
and
dec
roll
jno
and
sub
loop
add
xchg
fisubs
add
cli
mov
push
add
add
inc
sti
out
cs
imul
leave
mov
push
cmc
dec
scas
cwtl
cmc
mov
out
cld
fldl
fdivs
sub
lds
fs
mov
jg
jl
dec
adc
add
enter
adc
xorb
ja
add
aas
ret
repz
mov
rclb
mov
jl
mov
testb
mov
pop
es
rcrb
xchg
pop
fwait
ss
je
ljmp
mov
fcmovb
lods
push
mov
movl
fistps
inc
paddsb
fwait
inc
mov
dec
call
push
aaa
cld
das
push
mov
fsubs
cmpl
adc
js
shlb
add
cwtl
xchg
loopne
dec
jb
data16
add
push
stc
out
jp
or
inc
push
add
adc
popl
shlb
stc
lcall
mov
and
sti
xorl
sbb
into
sbb
add
mov
ss
cmp
incl
stos
rol
test
adc
in
in
rclb
xor
or
test
mov
fstpl
stos
arpl
imul
pop
pusha
mov
shlb
push
lds
cli
shl
in
mov
in
push
negl
clc
or
scas
adc
add
nop
mov
xchg
dec
sub
test
shl
push
and
xchg
push
jo
sub
pushf
push
pop
lahf
jle
xchg
xchg
and
ljmp
dec
mov
test
jmp
iret
or
fidivl
push
cli
jns
adc
or
cli
bnd
and
ret
inc
push
dec
insb
data16
sahf
push
adc
push
sub
sahf
shll
dec
into
xchg
cli
loop
add
loope
outsb
out
cmc
xor
add
mov
data16
loopne
ljmp
lock
popa
gs
mov
notb
addl
push
dec
shl
mov
or
pusha
add
pushf
test
xor
addr16
js
cmp
fidivs
mov
xchg
scas
clc
or
or
gs
push
adc
add
and
insb
arpl
mov
mov
pop
mov
gs
mov
pushf
enter
sbb
sub
adc
fiaddl
sbb
adc
inc
mov
or
into
push
fs
test
inc
cmpsb
add
mov
jg
push
or
cmc
mov
dec
fdivr
or
repz
cmp
xchg
adc
mov
popa
pop
dec
scas
repnz
mov
cmp
call
push
add
sbb
xchg
or
sbb
insl
pop
mov
xchg
jg
mov
xor
mov
pop
pop
mov
jecxz
adc
mov
pop
cld
int
mov
or
add
pop
pop
in
out
cmc
push
mov
dec
roll
lds
mov
in
rorl
cmpsb
and
inc
cwtl
movb
cli
pop
adc
sub
pop
sub
mov
nop
push
or
es
inc
inc
in
xor
testb
push
jecxz
or
mov
add
lock
adc
mov
inc
jne
xadd
cmp
in
mov
sbb
pop
add
lods
push
push
stos
orb
push
in
imul
sbb
add
in
inc
inc
call
xor
sti
cmc
cmp
inc
ss
dec
sbb
dec
mov
inc
push
pop
movsl
pop
cmpsb
adc
fimuls
sub
xchg
ret
iret
cmc
stos
pop
js
lods
add
std
mov
sub
lds
push
adc
and
or
mov
jnp
int
into
sub
out
jecxz
test
idivl
stos
push
cmpsl
adcb
mov
aas
push
add
sti
lods
fimuls
xchg
outsl
decl
popl
loopne
or
add
cmp
or
pushl
sbb
ret
in
mov
jmp
sbb
sub
shlb
fwait
add
cmp
dec
popa
xor
sbb
lock
add
aam
stc
mov
xchg
mov
mov
popl
repnz
mov
mov
dec
lret
dec
push
add
xchg
or
in
add
push
mov
mov
dec
inc
dec
mov
vorps
pushf
orl
mov
mov
hlt
mov
adc
je
inc
ret
jo
sub
lock
filds
nopl
mov
test
push
js,pn
pop
mov
lcall
fnsave
or
stc
jg
testl
cmpsb
xchg
sbb
jmp
call
daa
jb
and
ret
inc
xchg
xchg
pop
dec
jmp
xor
mov
jmp
call
out
add
pop
fdivrp
pop
rclb
xor
add
cli
jne
scas
jecxz
ds
inc
das
fidivl
add
pop
add
mov
pop
cli
add
data16
ret
das
fdiv
or
mov
ret
add
push
add
sbb
bound
aaa
lock
mov
movsl
jae
adc
aad
mov
push
adc
imul
call
mov
push
and
and
push
mov
adc
bound
add
bound
push
add
gs
push
mov
mov
inc
sti
call
scas
insb
call
sahf
inc
enter
jg
sbb
addl
jg
test
rol
mov
repnz
mov
fs
xchg
std
mov
negb
adc
cmpsb
xlat
dec
push
fsub
dec
or
clc
xchg
ja
mov
jle
mov
mov
push
fwait
les
add
sahf
dec
jg
fmulp
sub
cmp
push
push
cmp
enter
js
int
pop
lock
sbb
and
push
adc
xchg
pop
shlb
and
rolb
fildl
xchg
dec
mov
xchg
push
push
insb
dec
mov
xchg
xor
icebp
cmpsl
add
test
mov
add
or
mov
test
mov
repz
in
pop
mov
js
mov
subl
test
cs
mov
clc
mulb
test
mov
jle
push
test
stos
cwtl
out
data16
cld
sbb
jmp
jo
fidivrs
xorb
cmp
cmp
outsb
inc
mov
test
mov
jmp
call
in
rcrb
aaa
sub
in
xchg
dec
fs
sbb
adc
sub
xchg
js
hlt
cli
jg
mov
cmp
adc
push
mov
incl
icebp
ja
push
push
sbb
and
sub
mov
loope
pop
aad
out
sub
pop
jl
push
inc
ficompl
mov
xor
in
int
sub
fildll
dec
ret
imul
jle
mov
ss
test
imul
aas
or
lcall
rcll
jecxz
push
pusha
lcall
test
mov
sub
cmpsb
mulb
dec
cmc
or
pop
loopne
dec
pop
inc
fsubs
and
dec
push
sub
push
dec
fisttpl
adcb
imul
sub
cmp
dec
ja
cld
div
fistps
mov
push
ffreep
jl
cltd
jns
das
jo
enter
lahf
xchg
jle
or
adc
xchg
rol
cs
push
and
clc
fistpll
lcall
pushf
mov
mov
adc
ret
enter
fwait
and
dec
rorb
loopne
lock
shlb
pop
add
clc
outsl
mov
add
inc
inc
loope
sbb
lea
fs
add
pop
hlt
ljmp
adc
stos
shl
inc
data16
mov
dec
mov
fimull
dec
push
sbb
scas
aaa
loopne
jp
fimull
xchg
add
add
lahf
stos
adc
mov
lock
dec
call
shll
dec
lods
pusha
pushf
add
mov
xchg
jecxz
sub
inc
sub
in
es
jle
in
hlt
test
push
xor
movsl
cmp
cmpsl
push
mov
sub
les
jo
mov
sbb
jmp
sbb
dec
loopne
mov
push
rclb
scas
and
outsl
ret
inc
jne,pt
mov
mov
push
push
imul
mov
dec
push
shlb
cs
adc
dec
jl
fcomi
int
out
insb
rclb
inc
jl
mov
add
jmp
sub
mov
lds
mov
cld
pop
or
stc
pushl
ja
adc
outsb
inc
push
lods
and
mov
jns
es
insl
pop
dec
mov
lea
nop
shll
clc
shlb
push
fildll
mov
cs
push
call
pop
add
adc
inc
pop
cmp
pop
mov
les
stc
xchg
and
inc
or
pop
clc
adc
add
cwtl
cwtl
scas
dec
decl
xchg
fnstsw
loopne
in
sub
mov
mov
push
call
or
and
fsub
jnp
xchg
rolb
in
test
dec
js
xor
aad
pop
ljmp
jl
xchg
loop
jno
xchg
adc
jno
andb
les
inc
mov
notl
jmp
adc
or
into
push
and
push
jg
adc
mov
mov
and
and
cltd
adc
and
or
mov
add
inc
mov
andb
ja
cld
test
arpl
xchg
inc
mov
pop
mov
push
scas
mov
inc
dec
mov
lcall
rorb
leave
inc
decl
imull
loop
pusha
rorl
daa
jns
stos
push
les
xchg
pop
push
pusha
rolb
decl
xchg
mov
add
into
adc
shl
sbb
inc
push
cmp
and
jg
repnz
pop
push
push
dec
pop
test
es
inc
rcrb
mov
into
push
jl
ret
and
aaa
inc
test
sbb
int3
xor
cmp
jge
sub
addb
outsl
mov
pop
sub
push
das
sub
es
or
cmpsb
cmc
bnd
push
iret
fs
xchg
mov
btr
xchg
sbb
sbb
jmp
xor
xchg
push
xor
shrb
cld
fwait
loope
fdivs
outsb
les
mov
aam
xchg
jle
or
movl
mov
xor
jnp
push
insl
xor
bound
pusha
in
adc
hlt
and
xor
cmp
out
dec
push
mov
mov
mov
test
mov
dec
mov
imul
loop
mov
mov
and
movb
je
loopne
paddw
dec
jo
ss
push
sub
cld
dec
fmul
clc
mov
cmpsl
cmp
sub
lods
sbb
fwait
push
mov
sbb
sbb
xor
aad
adc
add
mov
mov
cmp
mov
dec
or
xor
fimuls
xor
sub
sub
lahf
icebp
cmpsb
mov
jp
loop
mov
stos
mov
mov
add
stos
ror
je
aam
and
mov
in
addr16
and
push
roll
mov
inc
cltd
or
cli
stc
nop
jne
jg
js
addr16
sbb
cmpl
inc
bound
adc
add
mov
les
loope
ror
add
xor
dec
add
sbb
in
in
jmp
or
jge
mov
add
dec
mov
jg
xchg
insb
mov
inc
loop
mov
lds
aam
add
cmp
test
cmp
icebp
dec
push
mov
adc
dec
mov
mov
lahf
scas
jg
decb
add
fidivrl
push
sbb
stos
xchg
mov
call
xchg
jg
bound
nopl
dec
or
cmpsl
dec
icebp
sub
inc
mov
cs
andb
or
add
clc
lds
adc
cmpl
mov
xor
cmc
outsl
add
lret
pop
pusha
adc
loope
or
pop
mov
or
dec
out
ret
ljmp
dec
adcb
ret
pop
ret
insb
ja
inc
adc
sub
xor
dec
nop
pushl
xchg
sbbl
inc
scas
arpl
cmp
lock
dec
inc
lahf
dec
mov
xor
inc
cmpl
adc
mov
and
scas
inc
lret
pop
icebp
outsl
jbe
stc
add
aam
data16
cld
pop
push
xchg
int3
out
aad
popf
dec
jno
push
es
into
mov
dec
loope
and
push
pop
xchg
xchg
aad
inc
sub
push
icebp
es
clc
incl
call
mov
rcll
lret
incb
mov
js
push
sbb
clc
lcall
ljmp
loope
call
xor
testb
loopne
jae
sbb
shl
cli
or
movl
jmp
jns
mov
or
popa
lcall
outsl
scas
cmc
nop
push
pop
jnp
shr
xor
xchg
push
lock
adc
cmc
mov
sbb
loope
mov
ret
mov
jnp
adc
cmpsl
jne
call
jp
cmp
mov
fbstp
cmp
call
adc
mov
loopne
push
sub
icebp
in
mov
popf
mov
cmp
sarb
push
jecxz
pop
push
inc
test
add
sub
ljmp
pmovmskb
and
cmpsb
fdivrl
shll
mov
scas
mov
cld
arpl
sub
mov
test
jp
xor
mov
add
ss
aaa
adc
pop
add
lret
insb
enter
add
andl
icebp
jbe
rorl
and
ret
push
xorb
add
incl
mov
pop
mov
mov
or
dec
pop
cli
loop
repz
adc
in
xchg
cli
xor
or
loopne
push
clc
dec
jb
xchg
inc
mov
dec
fimuls
fbld
push
push
dec
mov
or
xor
loopne
inc
shlb
xchg
addr16
xchg
sbb
outsb
pop
jo
fisttpll
les
loope
mov
clc
inc
fsubrp
inc
push
add
or
std
ljmp
add
inc
addl
sbb
lahf
push
jb
in
jb
inc
fwait
cmp
mov
xchg
inc
int3
icebp
test
pop
lock
test
add
sbb
addb
xchg
dec
icebp
pushw
xor
scas
cmc
into
mov
je
adc
sbb
mov
xor
sub
shlb
enter
rcrl
cmp
fwait
adc
xor
adcl
mov
xor
loop
sub
cmovs
xor
adc
aam
test
adc
addl
adc
outsl
xor
sbb
or
test
or
mov
ds
lahf
loop
dec
loop
inc
mov
flds
call
dec
test
dec
xor
xchg
testb
int3
outsl
rorb
xchg
mov
or
out
mov
pop
push
inc
jo
popf
xor
cmp
call
cli
fwait
cld
cmpsb
fwait
test
movsb
bound
xchg
jbe
mov
mov
cmp
cmp
aam
mov
pusha
sbb
hlt
pop
pop
mov
sub
push
cmp
xchg
cmp
enter
orl
andb
inc
or
xor
incl
sub
or
jbe
mov
popf
adc
and
mov
adc
sub
add
sub
xchg
je
loope
call
sbb
push
dec
mov
imul
andl
add
mov
pop
dec
pop
adc
or
js
cs
inc
inc
add
outsl
fsubr
mov
push
and
or
inc
mov
cwtl
clc
adc
das
scas
pusha
cmp
dec
jp
cmp
pushf
popa
jbe
or
add
inc
sahf
cmp
pop
mov
shrb
subb
sub
sbb
leave
and
andl
jmp
mov
aas
mov
mov
mov
mov
lcall
inc
push
movsb
lret
repnz
cmp
pop
add
shrl
push
push
fdivl
adc
mov
das
pushl
and
dec
inc
and
ljmp
lret
mov
pop
and
test
jecxz
sub
mov
decl
fcomps
inc
fwait
sbb
sub
pushf
test
mov
mov
xor
xchg
xor
aaa
adc
sbb
mov
cld
pushf
add
inc
mov
push
mov
or
rorb
outsl
or
jno
clc
test
push
jl
push
in
inc
pop
push
add
icebp
pushl
xchg
inc
add
aad
sbb
stos
nop
nop
lods
movsb
pop
std
add
mov
sbbl
push
sbb
mov
add
rorb
push
popl
pop
int3
push
into
xor
sub
xchg
or
scas
or
testb
or
mov
and
add
mov
jl
clc
faddp
cld
sbb
cmp
testb
pop
sub
inc
push
cmc
loope
pop
jle
push
inc
adc
cltd
loope
fsubrs
call
ljmp
mov
shrb
xor
sub
cmpsb
lcall
pop
cmp
loop
mov
and
lods
xor
adc
push
dec
das
out
pcmpgtd
icebp
outsl
xchg
aad
into
sbb
movzbl
decb
fs
mov
pop
ud0
lahf
cli
das
push
stos
mov
pop
add
bound
cmpsl
sub
outsb
cld
in
dec
add
xchg
sbb
push
decl
push
mov
movsb
ret
in
test
push
outsb
mov
push
sbb
fcomp
jle
inc
mov
sub
shl
fimuls
push
js
mov
mov
inc
fwait
mov
jb
inc
fidivs
rorb
or
sbb
filds
mov
cmp
adc
outsl
in
jno
mov
xchg
lret
or
fs
shl
lods
xor
xor
cli
fildll
outsl
movsb
sub
xchg
rcrb
mov
fbstp
inc
sbb
sbbb
inc
cld
out
mov
enter
push
pop
cltd
ror
xor
add
insl
insb
inc
dec
andb
pop
imul
out
add
cmp
push
flds
and
cmp
and
or
pusha
cmp
shll
jo
inc
fdivl
and
into
sub
rorl
add
inc
pop
call
stos
jnp
mov
push
and
inc
jb
cld
bound
call
int3
mov
loopne
pop
inc
mov
pop
or
lcall
and
fwait
push
inc
xchg
and
in
xor
mov
clc
jo
dec
or
inc
pop
loopne
loop
sbb
int
daa
jne
cmpsb
jo
sub
daa
cli
pop
call
cld
or
push
loope
movswl
xchg
cld
push
inc
pop
jno
sub
icebp
add
xchg
insb
test
scas
adc
js
pop
sub
mov
inc
out
mov
mov
test
clc
and
mov
sahf
lds
cmp
popf
push
mov
or
xchg
outsb
push
adc
call
sbb
jl
adc
sbb
mov
mov
adc
adc
test
push
dec
ss
mov
fcmovbe
adc
rclb
sub
mov
shlb
jo
mov
inc
insb
adc
and
add
test
call
xchg
repz
adc
add
mov
lcall
andl
mov
ret
nop
rcr
sbb
test
and
dec
loope
mov
ljmp
cmp
jg
insb
jnp
push
lds
testb
incb
enter
adc
movsl
pop
sbb
xchg
or
fidivrs
push
xlat
push
stos
aam
jae
cmpl
rcrb
mov
xchg
hlt
cmp
push
sub
mov
jmp
clc
imul
dec
popa
mov
ret
mov
cmpsl
jne
shl
add
mov
movsl
sub
cmpsl
or
xor
pop
decb
sar
cmp
int
or
shlb
xchg
and
dec
pop
push
dec
mov
pop
orb
adc
pop
mov
fidivs
ljmp
int3
fsts
jmp
jns,pn
cs
test
jne
cmpsb
mov
mov
pusha
or
mov
mov
add
push
add
imul
call
fs
pop
mov
pop
xchg
inc
cmp
imul
jmp
fistps
popa
imul
sbb
adc
orl
xor
add
sub
clc
adc
rolb
sbb
lret
jne
inc
bound
into
mov
jle
mov
xchg
sbb
and
sub
jno
xchg
mov
lret
xor
cmp
andb
ja
pop
je
ljmp
push
outsb
jg
pop
inc
iret
nop
sub
or
or
stc
pop
sbb
stos
mov
gs
sub
or
sbb
imul
or
imul
cli
popa
les
inc
jg
fmuls
sbb
loop
or
call
ret
sahf
push
jno
rcr
pop
or
or
xchg
je
cwtl
out
mov
outsb
sub
js
js
add
imulb
pop
loope
xor
pop
hlt
outsb
sbb
sub
mov
ret
jecxz
sub
jp
jmp
add
test
sbb
repnz
aam
fcompl
cmp
rcrl
inc
stos
xor
inc
mov
or
xchg
aas
test
pusha
into
push
xor
push
ds
dec
mov
enter
mov
lahf
push
loopne
scas
subl
push
incl
std
in
inc
jb
in
inc
adc
cmc
rclb
lods
scas
inc
sarb
jbe
add
or
in
pusha
mov
mov
gs
fs
cmpsb
std
push
cli
call
mov
mov
pop
xor
mov
adc
nop
cld
sbb
sbb
adc
sarl
jg
in
add
push
adc
cli
sbb
mov
les
into
data16
mov
sahf
add
jae
push
scas
jp
push
cmp
movsb
or
jo
pop
and
rcr
decl
adcb
pop
mov
cwtl
lods
or
popa
decl
jmp
pop
pop
fs
lcall
test
inc
daa
pop
loop
mov
sbb
push
out
aaa
call
mov
adc
inc
and
cwtl
sub
lcall
cmp
sahf
out
or
movsb
sahf
jge
cmpsb
fcoml
ret
inc
jle
ret
rcrl
jg
xchg
adc
hlt
or
loop
push
fidivl
jg
mov
mov
call
sbb
clc
cs
jg
cmp
push
lret
movsl
jmp
inc
and
fimuls
add
outsb
adc
pop
in
mov
cmpsl
or
and
rolb
sbb
ljmp
cli
aad
push
xchg
pop
xor
mov
stos
leave
adc
push
popa
jmp
xor
or
adc
arpl
dec
cmp
push
add
mov
jmp
imul
fidivrs
mov
lcall
in
les
daa
shlb
fisttps
call
xor
jbe
test
inc
jae
iret
adc
and
sbb
lea
lea
outsb
mov
pop
sub
ljmpw
and
and
stos
pop
or
push
or
nop
ds
mov
pop
dec
jecxz
mov
adc
or
nop
imul
std
cld
xchg
loop
mov
lret
push
jmp
mov
jb
inc
inc
shlb
sbb
cltd
sbb
decl
sti
dec
and
mov
xor
shrd
adc
xor
mov
inc
cmc
jecxz
mov
cmp
jecxz
ljmp
mov
and
jb
aaa
sar
jg
adc
add
sbb
adc
inc
repnz
sub
xchg
cmp
lods
cmp
pop
adc
mov
hlt
lds
jle
cli
rcrl
addr16
das
xor
push
outsl
lcall
mov
sbb
mov
mov
rolb
ret
loop
adc
ds
mov
push
loope
dec
jmp
jg
data16
fs
push
shrl
lea
adc
es
mov
push
or
cli
and
push
insl
dec
jb
dec
and
cs
sub
hlt
aaa
pop
icebp
jge
out
popf
inc
lret
jp
idivb
xchg
and
in
sub
mov
inc
mov
nop
jg
pop
loopne
or
out
pop
data16
insb
add
mov
shl
sarb
jge
fidivs
sbb
outsb
or
scas
shrl
and
jno
mov
inc
add
mov
xchg
mov
add
cltd
cld
out
cld
or
dec
and
divl
cltd
mov
ror
dec
fcomps
imul
in
cli
subl
jns
push
test
sub
jb
les
inc
test
or
xor
adc
test
ret
push
jmp
fs
lods
add
jnp
mov
push
das
mov
lods
lods
xchg
or
mov
in
pop
es
in
incl
dec
out
or
mov
icebp
add
test
ret
xor
or
or
stos
push
lret
addb
bound
test
pop
lcall
sarb
adc
xor
mov
add
es
in
test
dec
xchg
loope
mov
jmp
mov
xchg
jp
mov
mov
clc
xchg
mov
data16
std
mov
lds
outsb
dec
jge
aas
inc
pop
hlt
fsts
or
testb
clc
test
je
jbe
lds
jl
add
push
and
sub
cltd
das
sub
stc
mov
ja
fildl
mov
jo
or
push
mov
cmpb
or
scas
adc
sub
or
outsb
xor
adc
fdivrl
pop
pusha
or
dec
sbb
dec
jg
aam
sub
add
sub
xchg
call
pop
lock
fsts
stc
adc
insl
and
xchg
xchg
mov
nop
add
pop
nop
jp
ret
icebp
outsb
adc
rcrl
mov
scas
inc
xchg
fistpl
ljmp
fwait
sbb
jo
add
pop
mov
inc
sbb
fs
adc
mov
inc
inc
sbb
mov
add
lret
fsub
out
and
and
aaa
sbb
leave
adc
gs
clc
pop
cmp
sbb
add
mov
fiadds
inc
test
jnp
icebp
imul
push
movsl
ja
loopne
andl
xor
mov
mov
out
inc
jle
xchg
int
lods
adc
mov
ret
push
frstor
lock
jmp
inc
jnp
sub
divl
push
push
outsb
ljmp
mov
ss
add
adc
imul
add
push
inc
js
insl
push
scas
lret
add
cs
loop
pushf
mov
mov
mov
mov
adc
enter
pop
loop
pop
adc
sarb
stos
inc
sub
js
add
mov
ret
inc
ja
in
in
scas
or
mov
mov
and
js
and
jae
adc
adc
les
into
ror
push
and
pop
adc
repz
test
imul
cmp
mov
enter
jge
cmp
das
clc
push
sub
arpl
bound
inc
test
jle
js
rolb
xchg
and
pop
inc
not
push
pop
ds
sti
jp
xchg
in
movsb
or
jg
and
inc
mov
ja
je
inc
xchg
pop
insb
mov
mov
push
mov
les
jo
inc
mov
xchg
push
std
inc
inc
and
pop
adc
shl
or
in
add
jb
push
loope
or
cmp
xor
jo
cmp
inc
mov
outsl
inc
adc
or
fmul
test
shl
mov
push
es
push
pusha
pop
xchg
sbb
mov
jo
mov
dec
stos
mov
fistl
insb
mov
lret
xor
mov
test
and
jbe
pushl
cmpb
movsb
sub
mov
pop
dec
push
fwait
icebp
ljmp
popa
idiv
lahf
mov
and
mov
rcrl
nop
mov
push
mov
or
aam
jp
loop
sarb
adc
mov
shrb
popa
je
xlat
addr16
call
push
inc
push
data16
in
add
cmp
mov
loop
out
rolb
pop
loopne
jl
icebp
dec
dec
call
pushf
mov
ja
call
sub
add
pop
or
jbe
clc
cmc
pusha
mov
insb
push
inc
test
mov
xchg
mov
push
aad
dec
mov
addr16
in
test
mov
cmpsb
mov
xchg
push
push
imul
xlat
outsl
loopne
cmp
adc
es
js
incb
inc
hlt
das
sub
mov
rclb
aam
mov
ja
clc
mov
inc
insb
cld
push
mov
fwait
and
lock
imul
sub
test
fsubp
scas
and
xchg
sub
std
imul
sbb
in
push
cmp
insb
adc
out
xor
adc
xor
sbb
orl
dec
fs
and
aas
notb
jmp
push
insb
pushf
ret
adc
mov
mov
adc
xchg
test
mov
sbb
xor
in
inc
add
aam
loop
mov
jle
sbb
jl
mov
imul
pop
aaa
loop
sbb
in
add
in
aaa
sarb
add
gs
pop
ud0
ficomps
adc
push
ljmp
sub
test
mov
cmp
pop
sti
sbb
jo
inc
cmp
popa
adc
jo
mov
xchg
mov
dec
adc
sbb
ss
push
sbb
sub
insl
or
imul
xchg
loope
sbb
push
rcl
in
or
mov
jmp
inc
xchg
mov
cmp
add
pop
dec
test
mov
ljmp
sahf
inc
jb
pop
and
fmuls
incb
lds
adc
add
xor
cmp
dec
jl
or
sahf
test
and
or
out
mov
and
pop
out
addr16
cli
aaa
adc
les
push
push
and
mov
and
adc
clc
push
aas
sbb
imul
jne
pop
std
arpl
imul
fcompl
pop
addl
sub
sub
add
push
icebp
or
test
sbb
pop
sbb
mov
stos
xchg
ret
scas
aaa
icebp
std
iret
adc
mov
xchg
jbe
mov
jle
jne
add
shlb
sbb
loopne
aas
dec
std
fsubrs
das
lds
call
cld
and
incb
jle
mov
jl
dec
aaa
call
mov
les
mov
dec
xchg
sub
cmc
xchg
add
and
add
in
rcl
pop
ss
icebp
call
xor
xchg
hlt
ret
aad
sar
cs
sub
fildll
pushf
push
ret
stos
push
mov
clts
inc
ficoms
incl
or
jge
pop
ljmp
jbe
dec
out
test
icebp
cli
dec
sub
scas
fidivrs
loope
pop
aad
lcall
pop
cmp
enter
popa
pop
mov
add
cmp
xor
push
addb
pushf
dec
mov
pop
bound
mov
mov
or
mov
mov
cs
cmpsl
popf
fisubs
fisubs
mov
ljmp
cli
jns
cmp
rorl
sbb
shl
jo
mov
roll
repnz
fwait
addb
cld
dec
mov
lods
cwtl
test
pop
inc
sub
int
decl
incb
and
adc
mov
je
jl
data16
decl
lcall
jl
imul
add
pop
cmp
pusha
dec
data16
in
mov
inc
xchg
test
mov
add
dec
and
sbb
mov
jo
and
lds
dec
push
std
ljmp
sbb
adcb
pop
mov
add
push
enter
fisubrl
or
mov
sbb
inc
jo
test
insb
mov
and
pop
xlat
mov
inc
decl
aad
mov
daa
mov
rcrb
fs
inc
or
clc
jg
mov
push
andb
jns
dec
rep
call
inc
dec
cmpb
and
loop
sbb
cld
xor
pop
mov
sub
jg
clc
enter
daa
insb
xchg
dec
test
repz
cltd
mov
push
mov
loopne
inc
push
adc
stos
ja
jmp
mov
add
push
push
adc
and
daa
cmpsb
add
sahf
ljmp
rep
dec
das
sbb
jno
jle
pop
sbbl
cli
mov
inc
cmp
cmpsb
add
bound
lock
xor
fdivrs
sahf
shlb
outsb
repz
cmpb
je
mov
je
mov
rcl
and
jmp
sbb
lock
add
jb
cld
das
mov
cld
jle
cmpsb
fcoml
or
fcomip
lcall
jns
or
sbb
cmp
cmp
mov
mov
jg
aaa
popa
push
and
pop
add
loopne
in
mov
adc
test
dec
imul
cmp
and
add
imul
sub
jp
iret
dec
or
pop
pop
js
inc
cmp
fs
ja
add
pop
daa
adc
or
fs
call
xor
mov
dec
sbb
pop
lcall
jg
inc
and
sub
inc
hlt
xlat
jo
xchg
add
shr
sub
insb
sub
dec
insl
mov
sbb
adc
fimull
cmp
fildl
mov
lcall
pushf
lret
int
ja
lock
mov
imul
mov
push
or
add
jne
xor
mov
in
dec
xchg
std
inc
mov
pop
mov
push
push
jle
sub
mov
sbb
add
mov
es
ja
jmp
cld
push
inc
jb
add
mov
add
ret
push
cli
std
mov
or
jle
xchg
in
pop
adc
jb
inc
inc
xchg
push
cmp
sbb
jmp
aas
outsl
jecxz
subb
cli
adc
inc
imul
sub
sahf
jg
add
fcmovnu
and
cmp
int3
push
or
outsl
rcrb
movsl
fsts
xor
jle
aaa
dec
fisubrl
or
cmpsb
imul
pop
xor
mov
clc
mov
sbb
xchg
leave
fstpl
loope
popa
xchg
lds
push
mov
add
insb
jg
lcall
loop
clc
roll
xor
inc
inc
dec
ds
push
jmp
and
pop
scas
fsubrs
xchg
xor
push
cli
cmc
scas
dec
sar
jmp
mov
mov
cmp
sub
pushl
or
shlb
inc
pushf
and
incl
je
mov
in
xchg
mov
into
outsb
or
add
sbb
lret
inc
add
mov
mov
lods
pop
push
or
or
push
pop
or
test
mov
add
xchg
xchg
icebp
int
or
movups
add
cmp
into
cmp
leave
mov
pop
add
mov
cltd
pushl
jb
gs
add
push
sub
fcoml
mov
dec
add
fldenv
aas
cld
call
add
sbb
test
ja
mov
xor
hlt
and
push
fstpt
addl
push
push
pop
ljmp
push
ljmp
fimull
loopne
cmp
lods
or
clc
mov
je
adc
popf
out
push
incl
inc
enter
dec
and
xor
mov
xchg
jecxz
lods
or
pop
mov
dec
dec
pop
mov
add
outsl
cli
int
xacquire
cwtl
and
adc
outsl
in
mov
cmc
mov
outsb
mov
outsl
xchg
jne
adcl
das
push
inc
lcall
add
cmp
incl
push
ret
push
adc
fs
sbb
and
push
fs
mov
inc
mov
inc
addr16
cs
jmp
scas
ja
loopne
adcb
in
test
jg
ds
xor
inc
inc
ret
dec
test
aas
sub
pusha
gs
leave
xchg
test
loop
sar
xchg
inc
mov
push
stos
fisttpll
test
data16
hlt
and
add
inc
sub
inc
sahf
ss
decl
or
push
xchg
mov
popa
sysret
test
push
pop
stos
hlt
mov
mov
lcall
xchg
arpl
dec
sbb
gs
xchg
sub
icebp
mov
or
mov
clc
ds
sbb
push
xchg
stos
ret
push
cmp
push
insl
push
ljmp
or
lods
ret
pop
and
add
mov
icebp
subl
imul
xor
das
push
icebp
fwait
add
inc
add
xor
and
add
jl
pop
loopne
das
jecxz
dec
dec
cmp
and
aaa
cmp
inc
jle
out
mov
inc
jo
scas
enter
aam
mov
stos
les
cwtl
mov
hlt
sbb
inc
push
loop
lock
fdivrp
mov
jbe
sub
into
loope
cmp
not
cwtl
test
pop
jge
sbb
sub
push
hlt
fcomip
add
xor
icebp
lret
pop
push
loop
je
add
das
add
pop
push
cmp
lds
dec
call
loopne
mov
sbb
je
and
add
adc
cmp
or
jg
jno
mov
jo
scas
and
jno
push
mov
ja
stc
out
push
call
stos
shr
mov
fnsave
out
jbe
insb
insb
js
iret
lods
jecxz
jmp
push
sub
pop
ljmp
sbb
ljmp
or
popa
mov
pop
cmc
inc
mov
and
dec
arpl
pop
leave
call
xchg
movl
adc
xchg
fistps
xchg
ss
xchg
inc
xchg
push
cld
push
ret
pop
fnstsw
in
shl
fs
pop
push
mov
xchg
push
es
sbb
ljmp
icebp
push
jg
jl
sahf
xlat
dec
pop
mov
lods
pop
jns
xorb
xchg
push
sub
mov
clc
add
enter
jnp
sbb
xchg
out
je
cli
add
imul
outsl
scas
inc
loop
repnz
jecxz
push
add
fmull
jp
jo
inc
jl
add
push
fstl
sahf
mov
sbb
and
mov
add
xor
adc
adc
xchg
daa
js
add
movsl
jl
in
jle
outsb
jle
ds
loop
mov
xchg
jne
xchg
sub
or
ds
outsb
add
stos
mov
inc
add
adc
add
mov
adc
mov
mov
test
sbb
sbb
sarb
cmp
cmpl
icebp
hlt
add
cmpsb
jne
cld
add
mov
fwait
adc
scas
dec
out
xchg
add
xchg
push
cld
add
add
ret
fcoms
idivb
lret
cmpsb
pop
movl
movsb
pop
cld
add
jbe
icebp
xorb
fnstcw
scas
pop
dec
add
or
add
sbb
adc
xchg
xchg
fisttpl
mov
enter
out
xor
test
in
push
jne
enter
adcb
mov
decl
push
mov
pop
loopne
adc
xor
jnp
mov
pop
mov
jbe
fs
mov
imulb
sbb
push
leave
inc
sub
cwtl
inc
repnz
mov
add
push
js
test
mov
cmpl
inc
or
outsl
xchg
adc
bswap
subl
or
push
scas
xchg
js
lcall
incl
mov
pop
xlat
sbb
or
mov
icebp
pop
inc
leave
cli
push
call
lahf
repnz
imul
pushl
repnz
inc
cmpb
nop
or
adc
mov
mov
scas
cli
mov
cmp
xchg
lcall
adc
mov
push
in
lcall
mov
mov
arpl
pop
lret
addr16
fildl
adc
arpl
xorb
cmpsb
lret
mov
nop
xchg
xchg
and
incb
xlat
cmp
sub
notb
rclb
cmp
adc
sbb
dec
cmpl
jns
jmp
lock
lahf
jno
movsl
add
push
pushf
enter
add
mov
outsl
sub
jns
les
lock
and
mov
inc
xor
push
xor
cmp
es
dec
outsl
jg
mov
xchg
mov
sub
sub
cmp
enter
lret
addr16
xor
or
movsb
xchg
divl
test
je
adc
sbb
outsl
fwait
add
push
pushf
pop
sub
into
cmp
xor
es
ljmp
or
or
sub
push
dec
mov
and
inc
dec
es
bound
inc
sbbb
call
pop
lret
inc
cmpb
cltd
inc
mov
sub
repnz
and
fldl
repnz
inc
pop
test
fcomps
js
test
imul
inc
cmp
jge
mov
dec
loop
mov
sbb
cmp
xor
loopne
adc
outsb
imul
pop
clc
add
jno
cmp
roll
push
pushf
stc
sbb
out
sub
adc
mov
pop
push
push
add
shr
pusha
xchg
dec
xor
sub
xlat
in
and
lock
lock
sub
test
pop
scas
je
je
sbb
shrl
outsl
mov
sub
ja
pop
cmp
subb
fildl
pop
pop
or
movsb
pusha
addb
push
popf
mov
add
test
inc
jp
ljmp
movsb
in
sti
inc
add
mov
pop
mov
in
cli
ss
cs
mov
xor
dec
ror
xor
adc
mov
mov
test
sbb
xchg
fadds
xor
pop
pushf
rolb
inc
push
shrb
push
add
fmul
clc
jle
add
movsb
xchg
pop
test
pop
stos
ljmp
jl
cs
mov
pusha
int3
xor
or
push
push
iret
jbe
cltd
repnz
mov
inc
int3
mov
vpmacssdql
push
cli
cli
or
sub
rorb
gs
outsl
ljmp
jo
jp
sbb
movsl
mov
pop
sub
fisubs
pop
insl
fcomp
inc
jmp
xlat
loopne
xchg
negb
out
push
fiadds
stos
into
flds
popf
jp
cmp
cmp
les
or
das
test
xchg
ret
js
mov
dec
push
fwait
and
cmp
add
test
or
out
scas
loope
xor
or
jle
xchg
in
xchg
ljmp
mov
negb
add
addl
das
mov
mov
lods
lods
pop
push
mov
hlt
mov
pop
push
jl
jmp
xchg
and
jne
add
gs
inc
movsb
add
nop
jge
cwtl
stc
ss
adc
out
inc
das
mov
es
dec
cmc
test
jp
testb
xchg
int3
sbb
js
sub
xor
scas
fimull
push
aam
jl
and
jne
push
mov
push
mov
cld
fdivs
add
je
mov
jp
sbb
lret
sub
mull
xor
inc
je
xchg
test
pop
ret
in
pop
in
sti
mov
lcall
fildl
pusha
jg
lock
fcoml
fimuls
adc
mov
cmp
jmp
sub
or
ljmp
ret
je
enter
mov
sbb
fsts
or
xlat
out
or
movsb
mov
subl
cld
mov
mov
xor
pushl
je
mov
orb
sahf
test
mov
jl
ds
and
sbb
inc
sub
add
in
test
mov
in
fs
loopne
mov
out
loopne
bound
adc
dec
decl
addr16
movsb
arpl
adc
out
xor
je
inc
adc
js
sbb
jle
push
leave
scas
push
sbb
mov
lock
cmpsb
sbb
int3
jo
nop
in
jle
push
pop
adc
jbe
xchg
stos
xor
divb
or
ja
lahf
adc
inc
adcl
scas
mov
incl
ret
ds
xchg
movsb
add
xor
mov
push
aam
cmc
pop
jge
mov
pop
test
sbb
test
inc
ljmp
xor
pop
pop
lds
enter
push
lods
ret
pop
inc
hlt
pop
xchg
pop
hlt
jmp
lds
adc
mov
insl
aam
subb
std
mov
shlb
ljmp
jp
push
push
push
lret
scas
scas
mov
sahf
call
inc
cmp
xchg
aas
ja
and
sub
fs
push
lcall
sub
rolb
or
mov
sub
sub
mov
xchg
jno
jle
ficomps
mov
fildll
cmp
add
das
roll
fisubrl
mov
call
add
push
mov
ljmp
cmp
mov
push
inc
mov
push
cmp
pop
mov
movsl
push
xor
mov
call
mov
inc
sahf
movsb
pop
adc
push
stos
icebp
and
daa
cmp
roll
and
call
push
add
ss
orb
mov
inc
mov
adc
push
xor
cli
scas
mov
sub
push
jp
cmp
mov
test
lcall
ds
jmp
dec
cmp
lock
mov
fsubrs
jl
fnstcw
stc
roll
lea
jp
cmpsb
push
sbbb
scas
ret
xchg
mov
fs
add
loopne
pop
add
xchg
fadd
loope
test
cmpsb
mov
xor
stc
jmp
push
lret
lods
cmp
add
mov
jecxz
add
or
push
add
fbstp
add
adc
dec
jle
cmp
xchg
sarl
and
xor
sub
test
dec
cmp
into
inc
imulb
cli
ror
cmp
cmpsb
or
into
enter
mov
aad
or
pop
push
enter
adc
lods
add
mov
xor
mov
add
xchg
pop
pusha
enter
xor
hlt
inc
cld
xchg
mov
and
loop
out
mov
push
js
push
jbe
mov
jne
roll
inc
dec
xchg
insl
pusha
xchg
outsl
aas
or
lds
push
mov
pop
pop
daa
aas
jg
mov
mov
add
arpl
push
clc
test
add
inc
and
fsubs
sbb
jmp
nop
daa
sbbb
push
icebp
sub
ljmp
das
adc
scas
ret
inc
subb
rcrb
enter
data16
adc
test
xchg
cmp
pop
sub
sub
faddl
add
sub
add
and
ret
fs
mov
cs
mov
push
lock
in
movsb
lock
adc
movsb
or
pushl
sub
fcoml
pop
xor
stos
adc
pop
xor
pop
shlb
pop
add
hlt
fisttps
lcall
mov
mov
insb
mov
jb
fcmovnb
dec
out
push
dec
xor
mov
adc
shll
push
push
mov
lods
cli
clc
sbb
sbb
dec
push
adc
jle
jp
lock
shll
and
push
decl
out
loop
fidivs
and
cmc
test
stos
mov
add
mov
test
xchg
les
jns
sbb
outsl
sbb
xchg
mov
mov
jle
or
and
xor
add
scas
sub
push
cmpb
es
adc
incl
cmp
hlt
push
xchg
aaa
add
add
mov
and
das
mov
pop
sahf
mov
ja
inc
add
sbb
scas
push
jp,pt
imul
cli
mov
cld
dec
cmp
add
loopne
jecxz
cmp
popf
call
jne
and
add
inc
add
sub
and
sbb
jne
pop
cmpsb
jne
lods
push
mov
outsb
outsl
push
push
inc
mov
scas
ss
rorb
add
loopne
subb
sarb
fimuls
inc
xor
sub
dec
in
aad
decb
mov
dec
shr
outsb
lds
lock
outsb
push
sub
sbb
lea
sbb
mov
les
insb
popa
popf
or
fmull
data16
add
and
lahf
daa
sbb
mov
pop
ljmp
cmp
push
sub
pop
aaa
loope
mov
jp
sub
push
sub
pop
ds
aaa
jp
inc
cmp
movhlps
sub
push
xor
ja
add
sub
cwtl
loopne
pop
xor
dec
stos
push
int3
dec
into
sti
mov
test
lcall
ret
cmpsl
pop
cmp
in
in
ret
ret
fsubl
imul
adc
aad
pop
cmpsb
mov
xlat
decl
test
sarb
pop
pop
add
pushf
insb
out
ss
pushl
out
sbb
mov
roll
movsl
or
push
sbbb
push
and
cs
or
add
scas
mov
mov
frstor
inc
sbb
ds
stos
lds
sbbb
and
fsubrl
aas
int3
jl,pt
pop
je
push
pusha
es
xor
fsub
lcall
adc
hlt
push
call
out
dec
jecxz
add
jge
adc
jg
loopne
push
cli
or
inc
arpl
test
push
out
movsl
or
in
push
bound
xchg
cmp
mov
popa
or
sbb
xchg
pop
and
pop
outsl
mov
aas
out
adc
iret
push
daa
adc
pusha
xchg
out
mov
loopne
mov
test
inc
loopne
das
xchg
mov
jmp
mov
or
jbe
rcrb
incb
rcll
push
movsb
add
mov
jbe
jae
jp
mov
mov
inc
lods
or
ja
or
addr16
sbb
addr16
xor
lcall
outsl
add
shrb
das
sub
adc
or
outsl
sbb
and
movsb
arpl
fnstcw
add
xchg
pop
dec
loopne
sti
sahf
adc
mov
mov
lret
mov
int3
and
lods
sub
sbb
cmpsb
mov
scas
jecxz
mov
inc
lea
out
rorb
push
rcrl
xor
clc
push
xchg
mov
daa
inc
or
incl
movsb
sahf
jne
xorb
sub
sbb
insl
push
and
sub
xchg
jg
mov
jnp
jae
sti
inc
and
inc
mov
shll
xor
dec
jae
inc
rcrl
popa
outsb
push
enter
jno
jo
mov
sahf
popf
ds
lods
incb
mov
in
int3
and
lods
bound
lret
cmc
out
lcall
push
dec
fmuls
imul
repnz
outsl
fimull
jbe
adc
in
xchg
dec
rolb
test
mov
pop
adc
push
cmpsb
je
ret
jecxz
pop
sub
mov
lcall
add
repnz
sbb
xchg
dec
push
adc
xchg
and
add
sbb
jae
xchg
cmp
rclb
outsb
mull
pop
xor
sub
sbb
fucomi
mov
sti
or
aad
mov
movsb
jecxz
shrb
test
push
dec
push
outsb
cmp
movsb
pushf
push
pop
and
adc
jnp
xchg
and
notb
ljmp
popf
add
inc
adc
inc
mov
add
xchg
xchg
push
pushf
xorb
push
in
cmpb
cmpsl
adc
test
inc
leave
cwtl
fmul
movsl
nop
hlt
fs
les
jo
jle
in
add
push
in
sub
jo
ds
or
mov
clc
push
xchg
mov
cs
jmp
imul
outsl
sysenter
pop
pusha
fs
das
scas
inc
and
adc
js
mov
jmp
add
and
dec
adc
clc
or
xchg
js
and
fistpl
inc
push
mov
enter
sbb
sbb
test
mov
rcll
cmp
mov
add
mov
aas
inc
xchg
mov
mov
push
outsl
dec
mov
add
mov
jmp
mov
mov
sub
rcll
adc
je
bound
imull
in
xchg
cli
inc
and
mov
inc
subb
les
fiaddl
adc
xor
aas
or
xor
lds
jbe
sbb
pop
ror
mov
mov
mov
cs
ret
xor
push
cmc
in
call
mov
std
es
pusha
add
mov
pop
mov
ret
add
and
incl
xor
inc
mov
or
or
js
lea
sbb
pop
loope
sbb
adc
sarl
pop
push
dec
cmp
cwtl
mov
lods
add
add
mov
test
ljmp
fbstp
push
or
arpl
xor
lock
push
jp
inc
mov
rcrb
out
pop
repnz
add
loop
xor
das
cmp
mov
push
and
sub
test
out
mov
sub
dec
inc
incl
test
lock
in
or
or
pop
loope
mov
mov
adc
mov
or
incb
inc
dec
mov
mov
or
arpl
incb
fsubrp
cs
adc
jmp
dec
cmp
fstps
cmpsl
fisttpll
cmc
popa
aam
cld
aam
pop
arpl
cmc
dec
and
push
and
scas
sbb
dec
adc
lock
dec
sub
mov
scas
out
cmp
lcall
jmp
mov
or
aas
push
mov
sub
dec
adc
daa
mov
dec
nop
mov
pop
test
pop
movb
notb
insl
lock
mov
xchg
stos
out
add
ljmp
and
ja
cs
sbb
adcl
call
mov
mov
mov
add
aad
inc
hlt
imull
pop
lods
sar
xorl
movsb
inc
inc
sub
lcall
lds
dec
cli
pop
mov
lcall
adc
mov
xchg
dec
ss
push
fnstsw
dec
rorb
aad
sub
and
pop
cmc
push
aam
pop
fidivrs
sbb
mov
js
test
dec
push
adc
dec
insb
push
or
jl
jle
mov
mov
xor
movsb
pop
jl
and
pop
inc
xchg
mov
test
decl
loope
enter
adc
stos
je
add
push
call
mov
jo
cmc
mov
shlb
pop
icebp
fistpll
fcomip
rolb
push
mov
add
in
int3
sahf
sbb
inc
jl
cmc
in
scas
ja
sub
and
std
mov
enter
jnp
sbb
or
rep
out
add
inc
pop
into
adc
pop
jo
fldt
arpl
sub
cmc
push
aaa
loopne
and
sbb
dec
pop
stos
cmp
mov
push
dec
scas
push
mov
aas
push
pop
xchg
sbb
xchg
rclb
adc
ljmp
jp
or
movsb
pop
sub
lock
es
push
add
movb
cmc
mov
dec
add
push
loopne
stos
decl
xchg
push
in
ret
push
pusha
imull
lods
cld
mov
push
repz
push
inc
mov
xchg
or
push
pop
popf
pushf
xchg
sbb
lahf
and
lahf
std
push
lret
ljmp
jle
dec
lods
ja
xor
je
jp
sub
adc
mov
jb
scas
xor
add
in
dec
test
test
push
inc
sbb
inc
push
mov
push
jl
sub
mov
xchg
icebp
repnz
add
loopne
loop
lret
xor
cli
xchg
ss
je
mov
ja
mov
adc
test
adc
mov
lahf
inc
incl
xchg
xor
bound
sub
push
loope
xorb
stos
adc
cmp
les
cli
xor
fnstenv
inc
xor
sub
jg
mov
mov
sbb
cmc
adc
and
xor
aaa
nop
shlb
adc
sub
jmp
and
pop
add
fsubs
xchg
inc
and
clc
jae
or
add
or
add
dec
push
fistpl
scas
xor
jo
mov
sub
push
add
clc
into
xchg
xor
nop
sbb
loope
adc
faddp
nop
inc
inc
std
jl
and
jl
outsb
mov
jl
sub
mov
aas
js
nop
nop
push
add
in
lcall
push
adc
leave
hlt
adc
push
pop
mov
adc
dec
lock
pshufw
popa
inc
push
stos
fcmovb
mov
and
daa
xchg
lock
loop
loope
mov
aaa
jmp
mov
jno
test
ret
lock
imul
add
xor
add
mov
shl
pop
inc
rorb
in
ss
sub
lret
jo
repnz
ljmp
sbb
daa
out
push
cwtl
movsl
sbb
dec
jne
shrb
cs
add
xor
cmpsl
mov
push
adc
fsts
lcall
xchg
hlt
pop
add
lock
dec
int
mov
and
inc
incl
mov
stc
and
leave
testl
std
push
cs
ss
fmuls
add
xor
and
orl
xchg
pop
xor
jb
cmc
inc
imul
pushw
mov
jnp
sub
test
cld
jecxz
test
ja
adc
nop
xor
pusha
call
lods
mov
fwait
add
push
les
mov
test
lock
call
rolb
out
xor
xorl
je
push
dec
pop
mov
jbe
mov
mov
inc
mov
xor
incl
test
xor
xor
add
or
push
cld
lcall
inc
sub
fisttpl
es
push
sahf
cmp
pop
stos
dec
adc
xorl
cwtl
sub
shl
pop
sub
adc
gs
cld
xor
sti
mov
adc
shlb
dec
lock
outsl
adc
cwtl
cld
and
jp
mov
xor
inc
and
push
xchg
xor
jecxz
pop
pop
repz
jmp
add
cmp
cmc
add
out
clc
jmp
xchg
push
scas
les
addl
adc
xchg
test
adc
pop
inc
mov
inc
int
push
sub
adc
and
fidivrs
sbb
fmull
adc
inc
lock
fadd
inc
repnz
or
cltd
test
cmc
xor
aas
jge
fdivrs
jbe
pop
mov
xchg
xchg
xor
stc
fwait
sbb
xor
adc
test
adc
mov
test
mov
les
lret
call
jp
mov
call
pop
pop
mov
cmp
outsb
sub
js
mov
jae
and
push
movsl
fldenv
dec
jl
mov
or
mov
icebp
ret
das
sbb
test
mov
sub
xor
adc
daa
or
or
lcall
sub
mov
wbinvd
popa
stos
mov
sub
daa
pushf
pusha
xlat
jo
inc
movsl
jmp
dec
in
pop
push
pop
xor
or
jmp
lret
insb
and
push
or
mov
cwtl
cmpl
and
enter
dec
js
js
js,pt
stos
ds
mov
sub
adc
xchg
rcrb
popa
cltd
sar
ret
or
cmp
lock
xchg
jle
mov
cmpb
push
adc
add
mov
add
mov
sub
xor
push
fadds
inc
cmp
pop
pop
add
cwtl
adc
jmp
push
pop
push
adc
sub
test
push
xlat
daa
out
adc
and
pop
pop
es
sub
pop
adcb
arpl
ficoms
inc
loop
loopne
jb
or
cmp
mov
pop
loopne
push
push
push
call
rolb
mov
pop
and
je
adc
aas
push
jb
xchg
std
lret
jno
push
and
bound
les
jp
and
push
scas
pop
cmc
shrb
sbb
sbb
fs
sahf
fsubrs
nop
add
xchg
icebp
out
dec
outsl
popa
les
add
inc
xlat
lret
test
and
repnz
jg
addb
pop
movsl
js
jb
xchg
mov
bnd
jmp
add
pop
mov
in
es
jmp
mov
push
xchg
or
rcrb
xor
push
out
stos
mov
push
xor
xchg
iret
fwait
adc
fs
jg
sub
out
out
ret
push
in
gs
pop
ror
lock
pushf
add
push
lods
out
mov
inc
inc
sbb
mov
test
add
pop
icebp
add
les
mov
test
ucomiss
jno
mov
sbb
xor
mov
sbb
insl
repnz
filds
mul
adc
andl
pop
scas
outsb
add
and
movsb
aad
or
sbb
ds
and
inc
ret
aad
loope
movsl
orl
push
sub
incl
mov
pop
sbb
and
xchg
and
push
paddusw
je
push
cli
aam
lret
lret
adc
in
add
enter
call
inc
out
dec
pop
sub
cmc
mov
inc
sub
push
aas
clc
pop
add
mov
or
dec
pop
insb
enter
dec
cmp
rorl
sbb
nopl
dec
std
in
out
or
fucomi
loope
es
inc
fdivs
pop
dec
sbb
ficoml
xchg
enter
into
lock
xchg
mov
scas
nop
movsb
dec
loopne
addb
test
push
dec
orb
adc
loope
fistps
mov
or
inc
insb
jmp
xor
xor
adcb
mov
dec
outsb
jmp
pop
call
inc
mov
fildll
jo
arpl
pop
pop
xchg
mov
mov
inc
adc
pop
les
nop
je
inc
pop
sub
scas
jb
xchg
sbbl
aad
mov
pop
das
xor
fbld
or
or
stc
test
inc
rorb
aas
push
shrb
repz
pop
stos
or
pusha
push
adc
stos
adc
mov
mov
ficoms
gs
sub
out
pop
xor
inc
sub
push
fcom
fildll
dec
adc
and
mov
add
push
pop
mov
es
fcmovu
add
jp
jg
outsl
ret
vmovshdup
ret
cmpsb
in
lret
dec
fwait
outsb
adcb
fsubl
cmp
mov
fisttps
int
and
sbb
mov
xchg
es
adc
jle
jb
cmp
push
adc
aaa
mov
lock
adc
fisubs
mov
mov
adc
and
or
and
jl
shll
cmp
jbe
add
mov
mov
std
or
das
add
xchg
bound
xor
mov
xor
xchg
jle
mov
mov
xor
mov
inc
push
adc
jmp
test
mov
sbb
cmp
push
shlb
dec
mov
test
lcall
mov
pop
and
jg
cmp
imul
jns
scas
and
nop
mov
out
bound
ljmp
test
inc
push
rcll
jl
sub
inc
ret
insl
jno
nop
je
shll
and
push
aas
pop
jno
sub
adc
jp
test
xchg
inc
jg
icebp
mov
xor
and
and
mov
inc
pop
test
push
dec
push
mov
jo
ja
sbb
hlt
sub
mov
push
loopne
into
pushf
pop
xchg
or
mov
mov
mov
rcl
jg
mov
mov
and
mov
sbb
add
mov
nop
mov
sub
rol
sub
inc
lcall
add
push
xchg
je
and
inc
cltd
add
sbb
push
mov
fimull
data16
fmulp
inc
mov
inc
and
push
mov
jl
jmp
push
sar
push
push
cltd
jecxz
rorb
jne
std
ja
xor
or
xchg
fdivr
mov
insl
xor
mov
mul
call
sub
jle
xlat
ja
das
and
push
lds
repz
shll
xor
pusha
inc
daa
sub
sub
out
xor
dec
sub
lret
pcmpeqd
mov
mov
fidivl
lea
popf
adc
orl
pop
add
jg
loop
pop
mov
sar
xorb
push
int
mov
cs
stos
dec
fcompl
pop
leave
data16
dec
or
jecxz
sub
addb
or
cs
mov
mov
and
add
dec
jp
ds
scas
popa
mov
dec
ljmp
add
fistpll
decl
mov
es
jle
scas
mov
or
add
test
ljmp
adc
push
jge
ss
nop
push
inc
test
mov
jno
xor
pop
in
cld
leave
lds
lcall
adc
call
je
aaa
mov
pusha
std
rolb
repnz
mov
sub
sub
or
mov
mov
insl
aaa
aas
clc
fwait
cmpsb
cmp
jmp
inc
push
nop
pusha
jmp
orb
and
dec
and
pop
push
add
jae
sub
mov
aaa
jne
inc
std
jg
mov
push
aad
push
push
leave
mov
movsl
fsubrl
add
loopne
add
cmp
pop
stc
dec
sbb
dec
xor
cmp
add
loopne
idivb
add
mov
xor
or
testb
xor
ss
call
sbb
into
enter
sub
jp
mov
mov
scas
es
cmc
out
add
int
mov
or
loopne
pop
push
pop
mov
xor
xchg
test
lret
pop
std
mov
js
es
add
mov
mov
fdivrs
inc
adc
fimuls
mov
push
add
movsl
mov
not
mov
push
push
bound
cli
mov
inc
xchg
adc
mov
loope
mov
inc
fbld
dec
sbbb
xchg
fimuls
cmpl
jmp
icebp
sbb
leave
lds
lods
and
inc
and
gs
or
lret
scas
or
xor
out
pop
mov
rcrb
mov
fdivr
xchg
ret
mov
mov
testl
arpl
inc
aaa
push
arpl
lea
idivb
mov
popa
popf
mov
adc
cmp
sub
xchg
sti
lock
jmp
les
mull
cld
sub
xor
pop
mov
add
addb
loope
shlb
or
jecxz
pop
mov
loope
lock
and
add
jg
mov
aam
inc
das
dec
adc
jecxz
fcomp
test
push
es
loopne
in
sbb
loopne
mov
fsubrs
popf
and
testb
mov
and
stos
and
insl
ficomps
inc
push
add
sub
mov
mov
sbb
mov
push
lret
fst
xchg
push
add
out
sub
call
test
into
les
cld
mov
xlat
sub
xchg
or
add
pop
xor
pop
int3
pushf
xchg
ret
stos
ror
inc
mov
push
insl
jmp
ds
sub
jne
test
je
decl
scas
fistps
sarb
into
cli
sbb
sbb
mov
movsb
scas
into
repnz
adc
jmp
int3
cmp
adc
fwait
imul
dec
cmp
or
fdivs
lret
decl
ret
rep
pusha
repz
decb
daa
lock
cld
stos
cli
mov
sub
mov
cld
sub
xchg
pop
push
mov
pop
in
cmp
dec
shrl
jb
and
pop
jno
pop
sub
std
sub
cwtl
sbbl
dec
imulb
mov
inc
push
rorb
and
shrb
jle
xchg
mov
mov
mov
pop
inc
loop
adc
mov
push
lods
and
pop
xchg
scas
orb
mov
insl
out
xchg
out
cltd
test
lcall
into
add
icebp
sub
and
clc
das
dec
push
mov
incl
jp
lods
jns
push
mov
shlb
outsb
js
push
push
lcallw
push
xchg
imul
xchg
inc
pop
push
test
stos
xchg
fimuls
mov
push
cli
add
xchg
icebp
mov
jb
lcall
ret
sbb
cmpsb
mov
pop
sbbl
or
mov
xchg
in
aaa
jo
shr
lcall
inc
push
daa
dec
dec
das
push
xchg
and
cmp
add
loopne
rcl
adc
or
insl
js
loopne
mov
adc
jne
push
jmp
loopne
dec
push
sub
jae
push
dec
cmp
adc
ds
cltd
push
lcall
push
jo
orb
cld
ljmp
out
movsl
or
mov
jmp
sub
test
fldcw
xchg
adc
mov
lahf
add
and
mov
pop
insl
loopne
ds
and
lcall
popf
add
cmpsb
xchg
sbb
add
mov
bound
shlb
popa
and
aaa
jbe
fs
lock
lahf
sub
outsw
mov
jp
rorb
outsl
mov
inc
cmp
adc
sbb
cmpl
je
cmp
lahf
lock
cmp
pop
mov
hlt
mov
pusha
and
or
flds
mov
xchg
incl
mov
cmp
or
fbld
mov
movsl
jmp
es
int
arpl
add
and
jb
rorl
mov
add
xchg
add
lock
hlt
inc
add
andl
sbb
sub
mov
mov
push
jae
mov
mov
push
or
push
subps
gs
cli
dec
test
lods
lock
xchg
dec
cwtl
cmp
ljmp
inc
sub
lds
jae
push
dec
mov
or
test
dec
mov
mov
aas
pop
and
pop
and
mov
adc
orl
xor
adc
sar
pushl
ja
cmp
push
fwait
xchg
movsb
or
test
sbb
stc
inc
jecxz
add
lods
sbb
cmpsb
aad
out
cmpsb
hlt
sbb
arpl
cld
jne
add
lcall
test
adc
sbb
shll
mov
jae
out
rolb
jno
andb
dec
push
jecxz
sbb
sub
cld
pop
adc
les
jmp
iret
sbb
inc
mul
dec
push
mov
lea
leave
rol
mov
aam
adc
jnp
mov
out
inc
and
xor
xlat
sahf
push
sahf
cli
ljmp
xlat
dec
das
fcomps
inc
inc
inc
int3
xchg
cltd
addb
pop
sub
or
pushl
adc
adc
mov
ja
mov
adc
mov
into
push
rorb
dec
mov
fldcw
ds
rclb
sbb
ret
ret
jg
movsl
ljmp
xor
sub
and
out
test
leave
cmpsb
decl
adc
xor
adc
dec
arpl
mov
dec
cli
pop
add
or
jo
stos
outsl
in
loop
dec
lahf
nop
out
nop
cmpsl
pop
fwait
lock
ljmp
outsb
adc
mov
cli
decl
fldcw
add
sub
lods
xor
mov
popa
clc
pop
daa
xchg
sub
aaa
jmp
fimuls
mov
mov
jge
and
push
xor
mov
and
add
push
mov
cmp
ret
inc
pop
fcom
ljmp
mov
insb
or
or
sub
add
sbb
mov
pop
and
inc
outsb
sahf
sarb
addr16
mov
aas
sbb
push
div
lea
xchg
nop
adc
aam
add
push
dec
mov
mov
sub
cmp
push
pop
inc
mov
decl
mov
popa
ss
sti
stc
imul
mov
cwtl
inc
int3
in
fprem
push
mov
push
push
call
lock
scas
fcomip
jg
ret
mov
xor
push
fsubrs
les
sarb
sar
add
int
fistl
add
insl
nop
jmp
adc
sarb
mov
dec
and
sbb
cwtl
cmc
cmp
idiv
push
dec
imul
or
mov
or
incl
add
rol
push
ljmp
and
pop
cmpsb
fcoml
inc
sub
aad
inc
pop
add
stos
mov
push
fisttpl
push
push
popa
cld
in
push
mov
xchg
mov
fwait
divb
mov
pop
lock
sub
in
mov
aaa
mov
lods
pop
mov
mov
cmp
repz
std
jmp
xlat
xchg
push
mov
jo
pusha
dec
insb
mov
and
addr16
mov
mov
sub
les
pop
mov
push
inc
sub
sarb
ret
inc
scas
add
pushl
data16
call
pusha
xor
cli
shl
scas
add
xchg
jmp
sbb
adc
popf
inc
mov
call
push
push
cmp
lcall
nop
push
mov
leave
pop
in
or
cmp
mov
cmc
or
cmp
ss
stos
sub
fimuls
sbb
mov
insl
mov
pop
or
add
fst
test
xor
jns
popa
repnz
pop
dec
jne
mov
inc
or
adc
mov
add
push
mov
popf
ror
shl
sub
mov
stos
pop
scas
push
dec
std
push
stc
std
xchg
sarb
testl
int3
xchg
test
and
in
std
fildl
lods
loopne
clc
inc
pop
ljmp
mov
push
mov
sbb
inc
out
add
inc
pop
inc
js
jo
loop
and
jge
sbb
fimuls
jl
mov
pop
sub
inc
adc
adc
les
mov
push
loope
movsl
out
fimull
test
xor
cld
cltd
or
loopne
sbb
popf
xor
cmpsl
fnstenv
pop
push
sub
cld
lahf
sub
or
jns
vxorps
dec
dec
add
pop
loop
and
cli
ret
xor
dec
cli
dec
cmp
push
xchg
mov
xor
imul
adc
and
lret
cli
jne
add
sub
or
jo
das
jb
les
jns
ds
lret
pop
dec
cmp
cmp
nop
and
lods
xchg
cli
xchg
mov
cld
sbb
sbb
scas
pop
test
jo
mov
ret
cmpl
loope
mov
and
sub
jmp
mov
iret
rcrb
out
loop
inc
and
call
mov
call
mov
test
fs
and
push
jp
shl
jbe
mov
mov
or
loopne
mov
jl
mov
addb
outsb
jmp
out
movsb
dec
adc
cmp
cmp
idiv
cs
repz
fstpt
je
cmp
out
bound
int
jecxz
pop
scas
jo
stos
cli
cmc
arpl
dec
push
ljmp
sbb
cmp
cltd
fadds
add
and
sbb
nop
xchg
dec
sarb
cmpb
push
sub
push
loope
push
call
or
in
add
mov
call
cmp
arpl
cmp
sub
xchg
data16
push
cmc
xchg
add
xor
mov
call
mov
ds
cmp
lds
adc
outsl
es
mov
pop
sub
pushf
pop
pop
dec
sub
sub
jmp
ljmp
inc
sbb
fcomip
pop
inc
out
or
les
add
test
cmp
and
icebp
or
pop
jno
jbe
enter
mov
pop
mov
inc
xor
adc
cld
push
or
jg
mov
xchg
mov
dec
test
enter
outsb
jbe
frstor
push
push
lock
pop
push
ss
or
or
or
shrl
push
mov
pop
cmc
mov
push
in
xor
jnp
repz
faddp
iret
sahf
push
add
push
xor
lcall
jbe
sti
adcb
clc
mov
sbb
mov
stc
cmpsb
mov
jl
lahf
pop
pop
icebp
lock
imul
bound
mov
or
xor
mov
dec
inc
sub
rcl
data16
push
ljmp
or
sbb
push
int3
mov
outsl
das
and
js
pushf
inc
push
icebp
push
fwait
outsb
fcmovnb
inc
dec
mov
sub
repz
movsb
mov
add
mov
mov
ds
inc
and
xchg
xchg
aaa
test
push
cmp
push
adc
dec
dec
jp
out
push
pop
or
stc
dec
fcomip
addr16
sti
outsb
insb
pushf
jbe
test
and
push
mov
dec
std
lods
xchg
pop
test
mov
test
push
dec
scas
xchg
cwtl
aas
and
xor
notl
pop
cmp
xlat
and
mov
loopne
lods
icebp
or
xchg
xor
pop
mov
mov
or
mov
cs
or
aam
mov
ret
jle
lock
cli
adc
push
clc
mov
pop
std
mov
cmp
cs
push
pop
sbbb
jl
imul
mov
jns
sbb
sub
adc
pushf
push
xchg
test
add
or
xor
sbb
dec
je
leave
ljmp
call
ss
jae
popf
xchg
rcl
mov
cbtw
mov
movsl
xchg
fadds
add
enter
lret
push
push
clc
and
sub
loopne
cmp
lods
dec
inc
jg
inc
filds
mov
rolb
js
cld
scas
outsl
inc
fs
jle
mov
cmp
sbb
subl
add
mov
add
mov
pop
pushf
in
sahf
js
cmp
fdivrp
cs
add
push
fldcw
ds
mov
pop
cmp
lcall
push
es
push
js
add
jle
jp
lds
aad
test
mov
and
sub
lcall
inc
sub
pop
sbb
fidivrs
pop
imull
insl
sub
js
sbb
or
icebp
cmp
mov
and
dec
push
jl
sbbl
ds
inc
pusha
and
ret
xor
push
iret
cld
adc
scas
rorb
sti
xchg
xchg
lock
xor
loop
lods
sahf
dec
or
call
jge
movsb
test
add
jo
mov
into
pushf
pop
movsb
or
jl
dec
inc
aam
fmulp
es
rolb
xor
xchg
cli
and
test
or
pop
xor
adc
sub
xchg
ret
push
or
adc
fsubrs
or
test
es
add
xchg
mov
cwtl
sub
mov
xchg
pop
popa
test
or
sti
xor
addl
insb
pop
jns
and
inc
out
or
jecxz
out
push
mov
aam
push
test
hlt
mov
ret
ja
mov
es
sahf
jae
mov
jo
les
push
mov
pop
pusha
call
xor
jns
or
shlb
cmp
nop
inc
mov
and
cmp
out
and
mov
add
push
xlat
ljmp
cltd
add
sbb
lret
les
fwait
je
out
add
std
jno
mov
or
sarb
shrb
insb
test
push
out
push
mov
fcompl
cwtl
aam
add
ds
mov
loop
pop
fisubl
ret
aaa
mov
sub
sbb
or
inc
rcll
lret
pop
jmp
rorb
lods
lea
aaa
or
xor
cmp
mov
cs
ljmp
hlt
sbbl
inc
loop
add
sahf
rcl
test
push
mov
or
daa
das
push
dec
into
jge
or
fldl
fisubs
adc
and
xchg
add
jns
mov
arpl
mov
and
scas
insl
dec
out
inc
out
adc
outsl
mov
xor
mov
cld
ss
dec
data16
ret
cmp
inc
mov
dec
lods
mov
sbb
xor
dec
push
add
aas
jo
ljmp
add
and
add
cwtl
icebp
incb
nop
fyl2x
cwtl
mov
lret
scas
das
lods
cmp
mov
xor
push
adc
movsb
aad
and
subl
lret
fdivl
adc
cmp
cmp
adc
dec
push
jmp
pushl
mov
dec
sbb
pop
fisubs
in
aaa
repz
pop
std
aad
adc
int3
lahf
loop
pop
mov
add
dec
mov
inc
shlb
call
nop
int
sub
stos
inc
ljmp
mov
mov
mov
ret
mov
pop
xchg
and
vcmpsd
subl
mov
mov
mov
lods
ret
addr16
sbb
and
jl
ficoms
mov
popf
cmpsb
mov
call
adc
and
loop
shll
inc
xchg
nop
sbb
mov
jmp
cmp
mov
xor
inc
in
xor
insl
push
xchg
mov
or
icebp
xchg
dec
mov
adc
insl
loopne
clc
rcrb
mov
subl
sbb
out
and
sbb
out
mov
and
jno
inc
aad
cmc
icebp
mov
pop
sti
pop
push
aas
dec
cmpsb
cli
inc
jbe
loopne
push
cmpsl
stos
and
testl
xlat
call
cmc
in
lock
repnz
xor
ja
xchg
inc
ljmp
xchg
pop
inc
adc
lret
xchg
ss
or
inc
decl
sti
dec
adc
mov
cmp
jge
and
and
fidivrs
inc
xor
xor
not
dec
mov
jg
adcb
cwtl
xor
mov
repz
dec
orb
repnz
js
mov
ja
scas
pop
les
cmpsl
repnz
push
aam
inc
aaa
test
push
ljmp
or
add
adc
push
cmpsb
xor
push
adc
push
push
push
repnz
loop
call
incl
mov
push
data16
xchg
sbb
dec
push
push
fnstcw
or
insb
dec
insl
jp
idiv
jg
lahf
push
gs
mov
lods
add
test
pop
adc
popl
jecxz
xchg
nop
lcall
faddl
out
jl
sbb
incl
xor
inc
or
mov
outsl
enter
xchg
xchg
adc
icebp
cmpsl
decl
inc
rcrb
hlt
test
cmp
dec
mov
sbb
mov
aaa
cld
cmp
push
fcmovnu
xlat
test
mov
rclb
jg
je
iret
push
sbb
push
mov
jne
popf
jecxz
adc
outsb
loope
popa
dec
xchg
in
rcll
jbe
lcall
xor
jmp
push
xchg
fstl
out
clc
add
inc
sub
cmp
adc
mov
jg
mov
out
mov
subb
mov
mov
jno
lcall
xchg
shll
jbe
pop
testl
sbb
fstpt
jp
mov
push
cs
fmulp
inc
clc
call
je
pop
push
in
sbb
mov
xchg
pop
rcrl
cmp
lds
jge
outsl
cli
push
std
xchg
adc
repz
out
faddl
fcmovbe
mov
fwait
dec
js
lds
add
mov
pop
sub
adc
daa
in
nop
adc
outsb
sbb
loopne
ljmp
jge
sbb
xor
addr16
movl
or
mov
hlt
jae
roll
push
cmp
bound
push
and
jmp
cmp
mov
test
push
push
enter
jmp
stc
mov
mov
andb
loop
call
std
pushl
fsub
pop
cwtl
inc
stc
js
ss
jbe
and
mov
test
ljmp
mov
add
pop
das
pop
es
and
fisttps
inc
jnp
add
adc
cmc
jo
data16
hlt
ficoml
mov
rorb
pusha
test
sub
or
push
repnz
inc
inc
cmp
xor
or
std
ljmp
jbe
loope
lcall
push
adc
xchg
pop
mov
pusha
jl
adc
xchg
sbb
daa
mov
lods
adc
ret
add
sub
xor
aad
cli
mov
xor
sub
test
insb
ja
orb
jmp
jo
fcompl
mov
fmull
fsubs
fisubl
insl
mov
aaa
pushl
inc
inc
pushf
jp
adc
dec
bound
xchg
sub
pop
loopne
or
inc
loope
adc
call
lods
ds
lea
sbb
push
fwait
jmp
stos
stos
std
fwait
addb
mov
xorl
call
push
add
mov
adc
inc
js
pop
push
test
adc
fs
adc
jp
sub
in
mov
lock
and
fsubrs
aas
mov
cmp
dec
ljmp
push
das
clc
cld
mov
ret
popa
mov
ret
clc
das
les
dec
xor
movsb
sub
mov
stos
add
mov
outsb
mov
adc
add
push
xor
aas
ds
adc
and
inc
enter
andb
mov
lea
sub
pusha
inc
ljmp
aas
fs
add
dec
cli
inc
ja
inc
test
jno
clc
cmp
adcl
push
add
stos
loop
enter
sub
push
popf
xor
ja
mov
imul
inc
outsl
xor
push
jmp
ljmp
mov
sbb
lock
mov
out
fnsave
fisttpll
cwtl
lods
xchg
sub
call
ljmp
pop
cwtl
nop
push
jle
sbbb
lcallw
and
xor
push
mov
jl
cmpsb
bound
es
scas
outsb
cwtl
mov
loope
adc
std
or
xor
pop
pop
jge
mov
cmp
scas
and
xchg
cmp
xchg
lock
add
jmp
fsubrl
mov
roll
lret
dec
and
inc
fcompl
test
mov
lea
cltd
mov
push
lea
mov
pop
fadds
fisttpll
popa
inc
sbb
mov
cmp
test
dec
xor
movsl
push
or
xor
hlt
mov
cwtl
mov
aam
adc
arpl
push
pushf
mov
fiadds
pop
xchg
sub
adc
ja
jle
inc
jle
lcall
fisubl
xchg
daa
jmp
pusha
das
icebp
loopne
lahf
je
add
in
mov
sbb
outsb
xchg
xchg
incl
xchg
ja
jno
lcall
inc
push
lds
call
hlt
daa
je
orl
in
int3
or
outsl
mov
test
pushf
pushf
adc
pop
cmp
and
inc
dec
aaa
mov
push
xchg
test
cltd
jecxz
add
lahf
pop
rcrl
jle
push
cltd
mov
pop
filds
jb
xchg
xchg
pop
bound
getsec
add
add
push
gs
and
movsb
jecxz
nop
cmp
xchg
cmpsb
lcall
icebp
in
test
push
xchg
xor
add
test
sub
add
mov
mov
sub
sub
pop
pop
and
mov
jnp
in
ja
mov
cmp
popa
rorb
cmp
lcall
xor
popa
sbbl
sbbb
jb
out
dec
and
cmpsb
rorl
inc
mov
push
xor
adc
arpl
jge
iret
sbb
mov
loope
lock
sahf
cli
xlat
xchg
icebp
xchg
mov
out
pmuludq
add
dec
xor
push
add
xorl
mov
mov
fcmovnb
pop
cmpsl
sub
mov
jle
repz
ds
bound
js
and
fwait
inc
std
push
xor
call
jle
enter
cld
xor
fiaddl
sbb
push
and
aam
jno
or
mov
mov
xor
xchg
push
sbb
inc
lgs
shr
cmp
mov
es
mov
ss
ret
adc
push
inc
mov
loope
or
test
pop
paddw
lahf
stos
xorb
stc
cmp
jno
jp
or
push
icebp
and
cmp
sbb
call
cld
lcall
mov
mov
cmpsb
js
popf
out
xor
push
pop
sub
mov
cmpb
xchg
aam
insl
fdivr
mov
xchg
fs
push
stos
pop
push
cli
cmp
add
cmp
lahf
mov
cmp
fs
test
add
mov
inc
xchg
popa
pop
lret
or
xor
fdivr
jg
add
add
sbb
into
stc
lret
nop
scas
jmp
enter
test
repnz
push
inc
cli
test
add
loopne
sbb
cmpsb
stos
popf
js
bound
mov
cli
jmp
incl
mov
lahf
notl
out
dec
in
sub
dec
adc
mov
ja
ljmp
cmp
lock
pop
pushf
call
repz
sbb
jl
dec
adc
push
jecxz
xchg
stos
inc
mov
or
and
out
clc
xchg
or
dec
xor
xchg
xchg
mov
or
in
cmpsb
xchg
das
push
cmp
sbb
push
mov
and
iret
nop
data16
outsb
cli
adc
loop
outsb
mull
jg
and
fadds
lds
shll
call
adc
stos
sbb
inc
jge
out
and
add
and
mov
mov
mov
adcb
pop
push
cmpl
pop
jne
cmp
aam
and
xchg
adc
jecxz
subb
adc
inc
xchg
out
fs
sub
mov
or
je
mov
inc
adc
push
mov
and
add
mov
push
push
xchg
dec
loopne
add
mov
outsb
sbb
pop
enter
xor
dec
negb
xor
dec
pop
pop
das
pop
sub
mov
add
ficoml
in
jo
add
push
push
rclb
or
dec
or
cld
jp
in
sbb
js
repz
xor
mov
loopne
dec
add
push
pop
adc
dec
inc
cmpsb
mov
push
ljmp
shlb
lahf
pop
test
pusha
clc
notb
scas
flds
movsl
rorl
mov
hlt
inc
add
add
scas
or
inc
and
sbb
lret
fisubl
mov
push
imul
loopne
lock
dec
xchg
mov
jg
lods
add
pushf
das
or
aad
sbb
or
xor
xlat
mov
lcall
add
ret
aas
lock
add
xchg
and
in
mov
lahf
aad
hlt
in
leave
push
leave
shl
daa
jnp
sub
aam
push
and
clc
in
inc
xor
rcr
and
jb
mov
inc
mov
dec
insl
cmp
xor
rcll
cmpsb
xor
sbb
and
popa
mov
mov
loopne
mov
push
add
stc
sub
sub
jo
aad
push
pop
pop
fdivrp
pop
mov
nop
rclb
outsb
out
mov
and
add
push
cmpsb
cmpsb
fwait
and
push
add
rcrl
jo
fisttps
or
adc
outsb
lock
jnp
inc
xchg
mov
push
lods
and
jg
jle
cltd
or
iret
shll
mov
loope
fwait
sahf
gs
stos
sub
xorl
in
xor
stos
add
jb
add
fcomip
add
jb
je
jno
lret
inc
and
jle
adc
add
mov
or
imul
add
int
xor
decl
enter
shll
xor
ja
adc
sub
xor
lahf
push
jbe
jbe
test
je
stc
sub
and
or
sbb
std
imul
sub
or
fsubrl
sarl
jmp
and
cmpsb
and
jnp
cltd
imul
test
mov
push
ja
inc
repz
nop
cmc
out
sbb
inc
inc
loop
push
dec
loop
sbb
insb
jl
les
movsl
xchg
inc
mov
and
sbb
xchg
mov
mov
push
mov
dec
cld
addb
pop
xor
ss
out
xor
enter
clc
add
rcrb
fimull
jno
mov
insb
push
movsb
test
cmp
pop
xchg
out
scas
inc
out
call
sbb
add
sub
cs
aam
or
stos
fldl
rorb
push
or
add
loop
adc
pop
mov
pushl
andb
je
fldl
inc
xor
js
jb
sbb
fcmove
push
jle
add
xor
mov
adcb
jg
push
repnz
andb
jnp
mov
xor
dec
aaa
cld
lods
pop
hlt
jmp
daa
push
das
jge
aad
prefetch
jp
gs
xchg
xor
dec
test
lcall
test
push
add
jecxz
sub
or
stos
or
lods
imul
or
adc
and
js
jl
mov
stos
add
push
xchg
ss
sub
xlat
insb
negl
int3
sbb
inc
jbe
aam
and
dec
xor
stos
daa
je
fcomi
scas
xor
xchg
adcb
dec
xlat
push
into
jae
pop
sub
clc
push
or
lret
adc
add
sbb
xchg
daa
aas
add
mov
loope
jb
fcomp
cmpsb
adc
cwtl
outsl
xchg
in
push
outsb
int
test
fiaddl
int3
cmp
and
mov
icebp
jg
nop
xchg
sub
inc
clc
add
ficompl
aad
inc
es
and
lcall
rcr
shr
cli
push
sbb
or
jmp
jo
shlb
mov
push
fsubrs
inc
ror
icebp
dec
pop
sub
add
scas
lcall
aad
pop
int3
push
iret
add
ljmp
loop
sar
xchg
js
out
cmp
jne
inc
ljmp
adc
cmpl
lar
adc
sti
xlat
xchg
sbb
adc
or
stos
ret
lods
mov
dec
repz
dec
fdiv
cli
ljmp
xorb
fistl
in
inc
cmp
jp
push
call
pop
jp
movsb
stos
pop
or
aad
sbb
fcomps
icebp
mov
and
inc
add
adc
mov
dec
lcall
fbld
mov
or
add
mov
jge
cwtl
cmpsb
addr16
sub
add
push
shll
fadds
mov
adc
jge
mov
fwait
lods
clc
sbb
push
arpl
jmp
fistpll
inc
mov
sub
mov
aam
mov
adc
and
jmp
out
jae
add
popf
mov
mov
test
enter
stos
inc
jl
es
orb
mov
cmp
movsl
lret
add
popa
xchg
xchg
jo
repz
or
adc
pop
repz
sub
xchg
imul
pop
add
or
push
jp
repnz
sbb
ds
push
addl
jno
mov
add
jno
pop
mov
cld
adc
mov
cmp
xchg
mov
fstpt
xor
pop
push
sti
icebp
push
sahf
orl
pop
in
jle
pop
popa
cmc
cmp
ljmp
popa
mov
inc
mov
hlt
pop
imul
cmp
xor
pushf
dec
cmp
cmp
lcall
lcall
jbe
xor
icebp
ja
pop
adc
sbb
aaa
movsb
jbe
push
mov
cmp
adc
mov
sub
sub
sub
cmp
sbb
mov
cmp
add
test
mov
pop
push
add
iret
cmp
mov
push
sbb
cmp
lods
scas
scas
inc
lods
push
xlat
sub
pop
test
insb
xor
sbb
movsb
pop
push
inc
repz
cmpsb
dec
ss
aam
mov
inc
push
dec
jmp
mov
add
sub
fwait
neg
inc
jbe
sub
cld
xor
mov
xor
jecxz
add
jno
cmpsb
sbb
xchg
lds
sbb
sbb
ja
cmp
shll
out
pusha
movsl
push
cli
scas
aad
sti
orb
mov
js
shlb
jne
pop
out
push
push
cmp
adc
pusha
fnstsw
add
cld
or
xchg
pop
jne
mov
add
outsb
lock
sub
cmp
pop
mov
rcl
jle
push
lods
push
test
jl
out
dec
xor
test
and
xchg
mov
ss
pop
jbe
popa
stos
popl
lret
push
cwtl
je
outsl
inc
sub
add
dec
xchg
mov
orb
xchg
mov
jg
mov
hlt
outsb
es
add
outsb
fmuls
mov
xchg
mov
outsl
sbb
push
xchg
jb
cmpsb
xchg
das
pop
mov
pop
push
into
stc
movsl
pop
mov
push
add
insb
mov
ret
lock
inc
push
and
and
repnz
sub
addb
loopne
mov
outsl
push
sbb
xor
sbb
shlb
jg
and
mov
add
adc
mov
jo
cld
add
xchg
popf
push
adc
push
xchg
sub
loopne
pop
push
adc
fucom
mov
test
inc
jle
pop
cs
aas
rclb
or
enter
jg
pop
fldl
shll
jae
movl
dec
pop
lods
inc
sub
add
jmp
lret
jmp
ret
mov
pop
aaa
mov
sub
mov
test
or
sbb
dec
xor
clc
loop
push
call
sub
sarb
jb
push
or
sub
faddp
in
jb
jmp
aas
xchg
mov
mov
fcmovnu
pusha
pop
mov
mov
and
push
in
jle
add
or
hlt
or
icebp
pop
adc
lar
cmpsl
xor
movsb
xor
jl
leave
jo
mov
push
movsl
push
sbb
and
xor
and
sbb
or
adc
das
add
sbb
ficompl
sbb
fisttpl
call
xchg
add
jmp
aas
dec
lods
hlt
div
jg
imul
in
mov
scas
shlb
adc
add
shrb
sbbb
jbe
stos
pusha
stos
inc
fcmovnb
cmc
int
and
jp
stos
mov
inc
sbbl
xchg
fsubr
xchg
push
mov
cmp
adc
fs
mov
leave
rcll
push
cmp
or
fnclex
pop
push
test
call
mov
ljmp
push
cld
mov
push
mov
in
stos
sarl
rcll
outsl
ds
push
ljmp
loopne
movsb
cmp
cmp
std
add
mov
sub
lcall
sbb
hlt
sbb
pop
pop
jecxz
or
pop
jmp
cli
or
mov
sahf
enter
dec
int
xchg
mov
mov
cmp
ret
test
adc
mov
dec
cmp
push
lret
sub
mov
xor
rol
inc
dec
mov
push
outsb
lods
and
fisubrs
mov
sub
cs
inc
xchg
insb
js
int
mov
cmc
and
dec
outsb
and
scas
outsl
jae
pusha
xchg
xchg
push
call
in
loopne
xchg
jl
push
jbe
inc
sub
adc
clc
jno
pop
jne
insl
mov
mov
out
scas
and
sahf
incb
push
xchg
pop
test
or
jge
aaa
add
nop
test
movsb
inc
cmp
andb
incl
loop
jge
cltd
fwait
xchg
in
dec
mov
sub
sbb
jge
lret
jno
cmp
push
cmp
pop
jl
xchg
cmp
pop
insb
sub
mov
mov
push
into
pop
cs
add
inc
xor
clc
cmpsl
and
ljmp
shl
push
mov
stos
or
lahf
jb
fs
xor
push
jb
movsl
mov
movsb
push
cmp
fistl
add
pop
or
xor
scas
js
xor
loopne
les
mov
mov
sbb
rolb
addr16
roll
jb
insb
shlb
outsb
jmp
or
iret
sub
or
out
iret
xchg
fadds
pop
jle
andb
stc
add
bound
sub
inc
adc
push
or
and
andl
test
pop
pop
je
inc
int3
in
sahf
jmp
data16
xor
test
mov
movb
jo
and
mov
push
xchg
mov
xor
cs
push
jnp
or
mov
call
pop
je
cltd
roll
push
jmp
int
mov
lock
movsb
stos
insl
add
pop
lods
lods
mov
std
arpl
bound
and
mov
test
sub
adc
dec
lods
jg
incl
mov
call
push
fisubl
pop
jle
fstpt
jg
mov
and
icebp
lock
adc
ss
shlb
shl
jl
sahf
and
shlb
imul
dec
mov
adc
lcall
adc
pushf
into
fisubl
fiadds
or
ja
fwait
test
jo
movsb
cmpsl
add
add
ljmp
adc
das
cmp
adc
cmp
aas
imulb
jmp
jg
test
out
mov
leave
cmp
dec
adc
incl
pop
inc
jmp
adc
mov
jmp
pop
pop
mov
aad
fildl
sbb
ret
test
jmp
dec
dec
loop
dec
dec
sbb
push
adc
aad
insb
mov
mov
push
mov
mov
adc
pushf
fcom
call
sarb
movaps
mov
clc
jg
push
push
hlt
xor
mov
and
ljmp
dec
ljmp
pop
leave
lret
cmp
nop
adc
pop
clc
sub
sub
cmpsl
fidivs
and
scas
sbb
fildll
movsb
dec
add
in
pop
filds
fwait
movsl
das
push
clc
shlb
adc
xor
int
jne
ss
adc
dec
mov
mov
lret
addb
sub
push
inc
push
mov
adc
add
decl
dec
les
rorb
dec
daa
pushf
adc
lock
cld
addl
jb
mov
push
fdivrs
pop
icebp
mov
ljmp
xchg
and
jle
or
mov
sbb
mov
out
jo
inc
into
movsb
lock
inc
cld
nop
add
cltd
xor
jo
mov
call
test
out
xor
sbb
in
repnz
icebp
mov
shlb
dec
xor
jecxz
stos
inc
adc
nop
jmp
lea
add
in
data16
cld
subb
pop
hlt
loop
mov
jnp
inc
sub
lock
rorb
pusha
and
dec
and
pop
mov
cmpsl
mov
enter
stc
loope
stos
incl
adc
sub
es
test
scas
xorl
idivb
cmpsl
out
adc
jecxz
fwait
cli
test
mov
jl
jg
push
ljmp
jp
movsb
pusha
pop
xchg
xor
mov
mov
subb
push
stos
ficomps
xchg
imul
or
clc
sbb
decl
xor
sbb
loope
adc
data16
or
lcall
sub
aaa
movsb
lcall
xor
in
enter
rcrl
incl
rcrl
das
and
mov
pop
fucomip
jmp
jg
pop
out
sub
dec
pusha
scas
repz
mov
rorl
mov
clc
pushl
sub
inc
and
roll
insl
dec
push
mov
push
or
and
fsubl
lcall
insb
push
adc
xor
inc
lock
xorb
cld
push
mov
arpl
rolb
imul
cmc
sbb
cmp
icebp
mov
test
pop
into
cld
fs
dec
stc
or
pop
add
mov
sub
sarl
push
pop
push
ret
pop
inc
adc
dec
pop
mov
cmp
in
int3
je
cltd
adc
cli
std
sub
popa
adc
outsb
clc
pusha
dec
xor
lret
or
js
insl
push
lock
mov
cld
pand
in
sub
inc
aam
push
mov
add
jl
lock
push
outsw
xor
inc
mov
jl
rorb
xchg
pushf
cmp
ret
cmc
xchg
mov
cld
inc
jmp
out
cmp
rclb
mov
rorl
sub
xchg
outsl
addr16
dec
dec
mov
sbb
mov
push
cld
push
sbb
call
fcomps
lods
pop
arpl
inc
or
add
push
orl
inc
clc
cmp
mov
inc
pop
cmc
lods
shlb
test
cli
outsl
push
daa
js
sub
bound
fnsave
cmp
loopne
mov
orb
inc
sbb
and
inc
push
mov
xor
sub
imul
test
test
cmp
mov
rolb
sbb
sbb
mov
nop
in
imul
outsl
and
fbstp
and
fidivs
repz
aad
in
pushf
lret
jnp
stos
clc
xorl
and
dec
fsts
loop
fistl
movsb
mov
insl
insl
push
je
add
and
mov
icebp
cmp
pop
or
mov
push
loope
mov
add
movsb
icebp
outsl
addr16
push
dec
cwtl
rcrb
test
or
int3
dec
sar
mov
jo
mov
stc
daa
xor
scas
in
flds
daa
dec
scas
push
dec
push
dec
mov
add
test
cld
xchg
dec
cld
and
add
mov
push
jnp
adc
sub
clc
and
cld
xchg
push
xor
mov
mov
sub
aam
cs
jg
sbb
jge
jbe
nop
cmp
or
or
inc
cmpsl
lcall
add
lahf
xchg
sbb
and
push
cwtl
sub
mov
xchg
cwtl
and
mov
lock
cmp
lret
mov
mov
dec
hlt
ficoml
sbb
pop
daa
les
nop
lea
push
xor
mov
orb
xlat
gs
insb
and
clc
imul
clc
lahf
rcll
rcr
mov
aaa
sub
cmp
ss
pop
push
lods
jns
clc
scas
je
and
loope
push
ljmp
subb
pop
cmp
xor
js
inc
ljmp
loop
test
pusha
mov
inc
xchg
cmp
push
hlt
push
add
repz
data16
push
mov
mov
out
fimuls
xor
inc
stc
push
sbb
scas
scas
mov
jns
sub
icebp
fimuls
mov
inc
iret
add
mov
int3
add
jmp
sbb
xchg
add
inc
pop
loopne
cltd
xchg
roll
sahf
insb
lods
out
mov
mov
int3
loope
pop
ss
rcr
pop
or
fwait
or
inc
add
call
or
mov
ret
mov
ss
addr16
into
or
adc
js
pop
jl
lock
daa
scas
mov
mov
jne
adc
mov
add
shrb
cwtl
aaa
cmp
mov
fnstcw
sub
fs
inc
in
inc
mov
enter
mov
rcrb
lock
imul
xlat
pop
pushw
das
cli
dec
mov
cmc
push
cmp
sbb
je
push
lock
fisttps
fcomp
hlt
js
clc
scas
ljmp
cmp
or
or
mov
or
data16
pop
loop
sbb
mov
mov
orb
inc
push
inc
scas
outsb
std
xchg
add
fs
lods
push
out
scas
inc
adc
jle
xor
dec
insb
push
aaa
pop
pop
adc
pop
jae
out
mov
push
cli
js
out
sarl
andb
add
add
push
mov
jl
xchg
hlt
ucomiss
xor
hlt
adcb
xchg
orl
inc
pop
inc
lods
js
fcom
cmc
inc
ds
and
shll
sbb
mov
jmp
rclb
xchg
movsb
adc
out
sbb
ret
imul
ror
pop
scas
push
jp
cmp
adc
jl
cmp
fcomp
mov
xor
lock
mov
mov
leave
pop
mov
jg
or
mov
mov
stos
pop
aaa
push
add
cmp
sbb
mov
xchg
js
loopne
std
dec
push
pop
mov
push
jle
aas
jmp
xchg
outsb
mov
stos
push
imulb
mov
add
mov
daa
and
aas
add
dec
sbb
pop
mov
rcl
and
inc
cmp
adc
test
mov
inc
das
int
or
je
cmp
cmp
sarl
in
inc
hlt
sbb
aam
xchg
xor
mov
push
lods
test
mov
or
mov
movntq
out
add
xchg
dec
scas
jo
pop
jmp
mov
push
lock
add
and
sti
popf
movsl
fbld
rolb
mov
mov
test
xor
mov
mov
inc
sub
mov
pop
orl
pushf
and
add
xor
lock
mov
push
pusha
jecxz
andl
add
test
cmp
add
or
dec
shlb
mov
jo
lods
mov
mov
ljmp
fisubrs
stos
nop
xor
inc
push
mov
loopne
adc
jle
jp
fbstp
subb
rclb
je
pop
jbe
mov
ja
scas
sbb
cmpsb
mov
insb
or
pop
push
leave
cwtl
push
inc
inc
push
adc
pusha
pop
or
rorl
pop
inc
bound
lret
imulb
inc
mov
imul
cmp
pushl
hlt
notb
les
stos
adc
cwtl
inc
push
inc
cli
fnstsw
mov
pop
cmpsb
pop
and
sub
imul
jo
dec
pop
clc
jbe
cmp
lods
daa
leave
out
scas
push
mov
idivb
loopne
mov
xchg
sti
lcall
sub
movsb
data16
cmpsl
add
lahf
pop
les
mov
xlat
into
add
repz
inc
pop
mov
and
and
ret
and
clc
mov
fstpl
lahf
jl,pn
inc
push
and
gs
or
pusha
fdivrs
xchg
xor
xchg
inc
adcl
std
jmp
mov
outsb
adc
dec
sub
fistpl
int3
lods
dec
push
inc
int
and
mov
icebp
mov
add
xor
sub
ret
sbb
cmp
mov
inc
int
sbb
hlt
cmpsl
dec
enter
fdivl
dec
sub
adc
jle
pop
in
into
inc
mov
js
and
jg
adc
cmp
add
inc
adc
xor
xchg
sarb
arpl
push
pusha
xchg
rclb
repz
inc
movsb
leave
pusha
dec
test
cs
negb
lcall
xor
push
sbb
add
inc
xor
jnp
sarb
xor
or
add
loopne
jo
xchg
adc
mov
or
icebp
add
dec
lret
add
rol
mov
inc
dec
dec
dec
repnz
mov
ud0
jo
add
shl
pop
xor
mov
cld
in
mov
xchg
je
int
push
pop
imul
dec
out
pushf
nop
shlb
jge
es
mov
adc
aad
mov
fists
or
loop
in
pushf
push
push
jne,pn
mov
jge
sbb
pusha
cs
ljmp
stos
les
xchg
mov
lods
out
ret
push
ret
pusha
scas
jp
icebp
mov
push
add
dec
int3
hlt
ja
or
and
dec
inc
jmp
sbb
rol
mov
jbe
mov
es
stos
sbb
ds
ret
aam
xchg
scas
icebp
bound
mov
or
push
add
jno
fidivs
adc
clc
jg
jge
jns
inc
loop
or
inc
sub
jg
jle
ds
add
push
lock
inc
cwtl
icebp
stos
mov
xchg
outsb
nop
fmuls
mov
adc
je
cli
hlt
and
mov
repnz
ja
sub
inc
rcrl
add
jp,pt
inc
lds
pushf
cmp
mov
lret
lods
pop
fsubrs
and
fildll
mov
ss
and
lcall
or
int3
push
sub
idivl
fwait
mov
mov
shrl
push
add
mov
add
out
cmpsb
ja
mov
push
mov
cmpsb
xchg
lock
cld
mov
xchg
pop
pusha
inc
pusha
add
lcall
ret
add
adc
cld
scas
xchg
xchg
mov
pop
js
sub
out
int
dec
inc
push
inc
sahf
sar
sbb
lret
add
icebp
aas
add
mov
int3
jae
cmpsl
and
mov
out
adc
std
inc
inc
jbe
cli
decl
movsl
arpl
push
pop
fs
cmp
clc
fbstp
and
or
clc
out
pop
pop
ffreep
inc
icebp
or
mov
mov
dec
pop
out
cltd
adcl
or
inc
enter
hlt
jne
mov
pop
pop
inc
xchg
sahf
and
rcr
cltd
xlat
push
subl
fcompp
lahf
inc
dec
loop
mov
incl
dec
fwait
in
and
xor
inc
push
jecxz
nop
sub
mov
xor
mov
dec
les
add
cli
push
subl
adc
sbb
repz
rcrb
into
pusha
cli
addr16
rcll
das
cmc
mov
popa
lret
in
mov
push
mov
xchg
popa
mov
sar
mov
mov
popf
cs
push
mov
sub
mov
cwtl
lock
and
incb
incl
stos
ss
sub
add
xorl
push
xchg
bound
mov
push
cld
lcall
clc
cmc
or
push
xchg
adc
add
ljmp
mov
xor
stos
mov
clc
jg
decl
ss
fildll
cmp
cld
add
push
sbb
scas
cli
mov
push
les
call
push
scas
out
pop
and
jae
outsb
out
adc
movsl
push
enter
popa
cmc
xorb
stos
adc
outsb
out
cs
lcall
xchg
int
test
arpl
and
jo
push
fs
loop
lcall
divb
jne
aaa
int3
jb
cmp
inc
ret
xchg
or
pop
or
aaa
bound
add
mov
push
adc
incl
repnz
and
clc
enter
jb
shll
mov
nop
pop
push
fldt
or
or
cld
jmp
push
sbb
leave
sub
ret
fidivrl
cwtl
sub
call
add
push
xchg
imul
xchg
sub
clc
xchg
andb
sarl
outsb
push
sbb
rclb
xchg
scas
xor
adc
jge
incl
add
ss
call
add
sub
fcmovnu
sub
lods
ss
shrb
adc
scas
xor
cltd
push
and
inc
add
cli
xchg
sub
pop
mov
int3
je
jmp
xchg
or
mov
repnz
mov
aaa
jle
fsubl
js
jo
mov
inc
jbe
daa
adc
fnstenv
xor
or
orb
pop
jp
hlt
enter
and
fwait
mov
rcll
mov
dec
js
mov
pop
cli
sub
nop
cmp
adcb
sbb
push
lock
cs
sbb
inc
cmc
cmc
mov
add
jmp
loope
xchg
nop
or
push
pop
addl
push
outsl
and
or
in
jg
adc
inc
sub
sub
ljmp
inc
adc
loopne
lcall
lock
xor
mov
push
inc
mov
bound
enter
inc
hlt
adc
sub
incl
in
and
pop
stos
test
test
std
cmp
mov
and
sub
decl
dec
cmp
incl
stc
or
push
or
push
and
jle
push
mov
or
push
leave
cmp
lds
outsl
fmull
pop
xor
mov
lods
mov
scas
mov
add
cld
pop
lret
in
ss
mov
mov
mov
xor
test
mov
sub
xor
test
stc
add
push
hlt
mov
xor
call
and
fsubs
mov
adc
aas
push
fldcw
int3
jo
sahf
ljmp
shl
jl
mov
mov
fs
nop
scas
cmpb
or
or
mov
pop
push
jecxz
push
push
std
add
scas
dec
out
push
mov
mov
ret
mov
dec
mov
mov
or
rclb
lea
test
mov
in
cmp
mov
mov
gs
inc
pop
ss
fiaddl
and
cmp
cld
loope
sub
arpl
xor
addr16
cmp
out
inc
cmp
ja
pop
jbe
pusha
mov
mov
pop
pop
shl
nop
and
xor
push
rorl
movsb
lahf
mov
sbb
or
out
filds
sbb
es
jmp
call
inc
xchg
mov
pop
add
xchg
outsb
pushf
scas
movb
clc
pop
cmp
sbb
pop
lods
ret
shll
dec
mov
out
sub
inc
sbb
cmpsb
ret
or
sti
ljmp
pushf
sub
hlt
mov
shlb
jae
call
pop
out
lea
xor
inc
sahf
adc
inc
lcall
lret
int3
bound
jmp
or
aad
dec
ret
push
adc
es
inc
cli
and
push
push
ds
and
hlt
ja
enter
imul
call
cwtl
insb
mov
repnz
scas
loop
jbe
jg
inc
sub
pushf
xchg
jno
and
mov
sbb
pop
adc
jg
sub
cmpsb
inc
xchg
loop
sub
mov
push
push
and
cmp
lcall
pushf
popf
cli
mov
sbb
enter
jg
and
leave
xor
pop
sub
cmp
jae
cmp
movsb
sub
adc
adc
cli
jmp
aam
inc
fildll
inc
pop
xor
jb
out
and
rolb
jge
fs
in
int3
ss
repnz
roll
sub
pushfw
dec
pop
or
lods
into
dec
pop
sahf
sub
mov
inc
movsl
add
push
out
ret
mov
cltd
data16
or
mov
and
nop
sbb
or
aas
adc
cmc
cmp
inc
mov
push
adc
adc
sub
add
xchg
fimull
popa
cmpsl
mov
movb
hlt
aam
or
addr16
testb
xor
pop
pop
mov
into
push
pop
dec
out
mov
movsb
sub
int
sub
jl
sub
jb
jge
pop
loop
xor
push
lods
bound
xchg
sub
test
xchg
lds
xchg
bound
pop
cli
out
repz
lcall
push
mov
lock
mov
adc
cwtl
clc
jg
ljmp
call
xor
pop
popa
loopne
je
adc
fisubrl
mov
mov
mov
push
nop
inc
stos
cmpsb
call
push
push
aas
push
sbb
and
mov
dec
popf
push
add
ret
ss
lretw
sahf
aam
xchg
xchg
mov
data16
cmpsl
or
mov
dec
add
jp
jnp
ja
sub
pop
js
aad
adc
rolb
or
adc
xchg
scas
jecxz
xor
pushf
push
adc
fistl
fwait
add
inc
push
xorb
mov
jo
insl
xor
pop
ds
decl
mov
mov
xor
xchg
aad
and
push
ret
call
cmpsb
sahf
cmpb
lahf
insl
popa
mov
pop
cmp
scas
sub
mov
pop
add
push
jmp
push
dec
jge
sbb
sbb
in
icebp
sub
mov
es
jmp
data16
test
pop
rolb
add
cmc
inc
subb
or
adc
call
add
push
pop
lock
mov
das
jge
sbb
jns
into
lods
mov
loopne
adc
inc
lock
ss
mov
stc
and
jae
jne
mov
cmc
shrb
and
data16
jle
and
outsb
sahf
jb
mov
insb
daa
dec
add
loope
cli
insb
pop
jno
dec
push
pop
and
int
out
push
sub
pushf
adc
daa
int3
adc
push
mov
mov
pop
adc
and
insb
mov
mov
fldt
dec
jg
cmp
push
pop
in
and
aaa
xor
and
js
mov
test
sub
xor
aam
aas
je
push
lcall
adc
pop
cmp
jo
inc
mov
pop
dec
and
mov
paddusw
jbe
subb
test
dec
loopne
push
ljmp
jo
scas
in
dec
sbb
nop
or
jo
xchg
pop
xchg
jmp
xlat
dec
icebp
insl
sub
push
xchg
push
inc
push
scas
enter
lcall
movb
out
ss
retw
mov
xchg
sub
add
out
cmp
push
outsl
js
adc
movsb
mov
or
inc
and
push
lret
je
add
int
push
cmc
int3
xchg
outsl
loope
outsl
fisubs
subb
fists
iret
mov
aaa
push
fbld
repz
popa
sbb
in
cwtl
rcr
inc
fimull
jg
addr16
jl
test
orl
cmpsl
sbb
inc
dec
incl
loopne
adc
or
lds
nop
push
sub
inc
or
or
mov
enter
fisttpl
clc
ret
inc
rcrb
sub
in
adc
popa
mov
dec
pop
add
in
cmp
test
jle
mov
fimuls
mov
leave
fdivl
sbb
cmp
inc
jg
outsl
iret
dec
out
inc
ret
ljmp
jle
pop
movsl
into
decb
xor
xchg
out
inc
inc
or
dec
jle
repnz
adc
sub
aam
jle
xchg
xlat
fisubl
lds
aas
jp
mov
enter
dec
push
js
pusha
loope
les
jmp
adc
in
cmp
ret
insb
fcoml
sarl
inc
cmp
jg
and
jb
pop
cmpsl
mov
push
cltd
fdivs
mov
ds
sbb
sub
and
movsl
mov
inc
daa
and
cmp
stc
cs
jle
and
pop
add
mov
es
xor
sub
fsubl
dec
clc
mov
pop
mov
rorb
jae
stos
pop
mov
adc
call
and
jp
and
scas
sub
addb
gs
adc
push
pop
adc
jae
and
clc
mov
inc
xchg
adc
push
add
add
xor
imulb
xor
xchg
mov
mov
test
pop
mov
jmp
sbb
imul
dec
sbb
js
sahf
adc
je
and
clc
jecxz
pushf
push
mov
sbb
pop
iret
xlat
push
push
test
jge
scas
ja
push
and
push
test
push
add
shlb
aad
pop
loopne
cmc
stos
test
in
mov
sbb
fs
mov
sub
sub
fiadds
dec
clc
mov
mov
xchg
mov
in
test
rorb
adc
pop
mov
shll
jmp
lods
dec
mov
adc
inc
hlt
add
xor
imul
sbb
push
mov
add
sub
lods
loop
jge
jp
xor
scas
mov
add
mov
pop
sub
adc
rcll
popf
jb
dec
mov
movl
inc
fmuls
movsb
les
lock
das
push
fwait
sub
xorb
sti
loopne
iret
test
mov
and
int
add
mov
push
sub
fisubl
ret
mov
inc
rorb
test
decl
jg
adc
in
icebp
data16
mov
arpl
push
xchg
fmull
jecxz
test
mov
and
cmp
xchg
lock
rorb
outsl
jbe
faddl
or
daa
pop
sub
cs
sbb
push
aad
adc
mov
and
fs
std
cmp
fdivs
loopne
inc
xchg
dec
leave
fcomp
sub
sbb
adc
sbb
mov
jp
mov
inc
add
fs
mov
xor
add
mov
jge
xlat
mov
push
mov
movsb
repnz
sbb
pop
les
push
add
in
cld
mov
cli
inc
add
adc
inc
xor
lods
sete
push
push
sbb
pop
push
xor
scas
cld
jae
js
mov
add
mov
sarl
push
lret
mov
sbb
mov
mov
pop
jg
cmp
clc
mov
out
cmpsb
call
jg
xchg
loopne
cmp
lock
mov
mov
mov
sbb
sbb
cwtl
and
shl
pop
inc
cmc
or
xchg
mov
insl
or
or
aad
rolb
rcrb
loope
popa
pop
mov
fsubrp
ds
shlb
pushf
xchg
mov
or
jg
mov
test
mov
add
jmp
movsb
pusha
jl
jl
or
add
jp
push
test
cld
incb
pop
push
inc
js
cld
sub
bound
push
loop
add
pop
sub
sahf
or
imul
cld
test
lods
loop
mov
add
jns
dec
incb
push
mov
ds
aam
jno
pop
in
mov
loop
inc
outsl
insb
jo
pop
cmc
jnp
out
pop
and
and
fiaddl
mov
dec
divl
mov
loopne
adc
rcrb
jge
sub
aaa
arpl
or
hlt
out
xor
loopne
jmp
int3
cmpsl
add
pop
addr16
jp
outsb
repz
loope
sub
and
pop
or
das
jle
mov
clc
fcomps
fnstsw
mov
mov
loop
dec
lods
sub
loopne
js
push
cwtl
add
cmp
jbe
out
inc
sub
sub
ja
data16
popa
in
cmpl
sub
dec
clc
push
sbb
pop
inc
test
enter
mov
fbld
jle
sbb
out
cs
adc
push
xor
mov
mov
dec
ret
loopne
mov
fcomps
cld
outsl
pushl
cld
mov
mov
jp
aas
loopne
cwtl
push
rcrb
and
aam
mov
or
or
adc
fimull
and
jnp
mov
xchg
inc
adc
jl
inc
aaa
leave
push
fdivrl
fcmovnb
idivb
sub
adc
xlat
inc
adc
scas
fbld
pop
test
xchg
fdivrs
adc
and
pop
add
dec
insl
xor
mov
push
fs
inc
stos
out
push
or
lock
test
pop
enter
repnz
aaa
ret
add
push
aas
push
fdivr
add
ret
or
pop
enter
push
xor
mov
lock
pop
mov
push
movsb
add
jno
or
mov
icebp
cmpsb
cmpsb
mov
clc
pop
sub
clc
frstor
loope
ret
pop
cwtl
jge
clc
clc
add
jg
xor
mov
call
add
push
test
les
add
mov
std
xchg
add
outsb
lcall
jg
test
shll
sbb
xchg
andb
push
push
pop
xor
icebp
push
sub
adc
jl
icebp
cmp
outsl
lret
fmuls
sbb
adc
shll
inc
xor
mov
stos
add
mov
cmpsb
push
push
ljmp
sub
push
adc
sub
aas
add
inc
cmp
cs
js
inc
insb
fimuls
jo
std
mov
jo
hlt
out
js
push
stos
es
iret
add
icebp
mov
pusha
push
cld
popl
insb
in
push
jno
shrb
pop
cld
cwtl
shl
sub
lcall
inc
add
cwtl
adc
add
lcall
shlb
cli
add
out
jmp
mov
lahf
mov
pop
sbb
in
or
pop
arpl
push
aad
and
sub
repnz
lods
adc
and
bound
hlt
loopne
pop
sbb
sub
cmp
in
lcall
push
icebp
cmpsb
mov
push
cmp
data16
in
push
std
sub
sub
pop
inc
sub
rolb
mov
push
js
jecxz
jne
clc
sbb
jle
mov
sbb
loopne
jge
movsb
pop
loopne
dec
mov
sbb
stos
cs
mov
add
mov
rcrb
xlat
les
mov
stos
mov
and
pop
xor
xchg
les
and
mov
inc
roll
push
push
or
call
sahf
clc
lret
add
hlt
adc
sahf
gs
das
inc
xchg
ficomps
sbb
sub
ljmp
xchg
adc
std
incl
fidivrs
inc
push
add
pushl
pop
adc
mov
mov
fdivrl
mov
decb
add
sub
jae
adc
mov
arpl
jns
inc
call
lret
cmp
mov
dec
stos
lret
rorb
lods
xor
stc
push
into
movsb
or
mov
add
and
adc
or
lods
push
aam
out
add
insl
mov
scas
cmp
sarb
push
adc
mov
jg
push
in
dec
mov
inc
fdiv
mov
mov
insb
add
sbbb
and
cltd
outsb
das
xlat
dec
pop
repnz
ret
push
adc
jbe
stos
and
mov
jle
ljmp
pop
mov
out
cmp
lods
push
mov
test
cmp
rolb
fsubrp
fiaddl
sarl
out
clc
inc
inc
pop
ljmp
and
adc
mov
out
or
lods
lock
inc
jl
sub
push
jecxz
dec
adc
out
bswap
fcomp
inc
or
mov
movsb
jmp
or
dec
ds
lcall
inc
mov
fldt
hlt
icebp
pop
pusha
jmp
shlb
sub
decl
add
shll
add
mov
clc
or
mov
in
inc
cmp
cli
xchg
mov
lahf
lock
loope
jb
scas
test
jb
sub
mov
xor
xchg
pusha
arpl
roll
add
ljmp
push
ljmp
mov
loopne
dec
add
sbb
adc
adc
push
inc
jmp
lods
subl
into
iret
pop
mov
inc
push
test
push
xchg
dec
fcomip
mov
push
std
shlb
cmpsb
jp
lods
ret
xchg
jge
dec
mov
jo
adc
add
fstl
scas
dec
mov
pushf
sub
fdiv
push
or
hlt
sbb
loopnew
popf
rcl
adc
shrb
pushf
or
loopne
insl
sub
sbb
out
adc
ret
pop
lods
es
push
cwtl
ljmp
inc
mov
push
inc
and
and
and
mov
push
xchg
inc
into
movsb
adc
add
sub
pop
subb
repnz
mov
loopne
rcl
pop
sub
mov
jmp
mov
sub
or
test
cmp
cmp
add
in
movsb
dec
lcall
push
popa
inc
mov
sub
xor
fdivs
mov
lock
jle
add
mov
sbb
ljmp
insl
test
xor
cmpl
or
mov
lret
inc
sub
mov
cli
dec
mov
inc
out
cltd
lock
push
pop
jecxz
punpckhdq
sahf
mov
pop
outsl
and
in
stc
sarl
je
dec
mov
mov
adc
div
mov
jo
push
add
or
shlb
push
cmp
loope
fcoms
sbb
mov
sti
jmp
es
out
cld
aam
pop
lret
push
sub
ss
ret
xchg
sbb
in
loope
leave
dec
clc
mov
xchg
call
inc
adc
ss
jo
fsub
test
push
cmc
dec
mov
inc
add
add
lcall
adc
lahf
sbb
nop
jmp
les
cmpb
lahf
add
adc
cmp
add
or
into
pop
js
mov
adc
dec
insb
or
rcrl
add
xor
push
cld
dec
inc
and
and
subb
add
push
push
add
or
add
and
and
ret
out
adc
mov
add
out
aam
nop
insb
and
cli
inc
adc
mov
inc
data16
inc
and
add
or
int3
int3
mov
repnz
nop
cltd
pop
mov
push
inc
add
sahf
add
in
lods
pusha
dec
cmp
lods
inc
pusha
adc
inc
jae
int3
aam
dec
adc
jno
mov
jnp
push
rolb
add
lods
cltd
mov
xor
adc
mov
push
cs
addb
cltd
shll
ror
les
dec
mov
mov
adc
in
inc
inc
lock
inc
push
add
push
lods
cmp
fidivs
lcall
xchg
add
add
outsb
pushaw
push
test
or
xor
dec
movsb
jle
and
nop
shr
push
sub
mov
incb
in
xor
pop
repnz
js
hlt
mov
jp
add
mov
push
adc
xorb
dec
outsb
add
push
int
addl
test
pop
sbbl
nop
add
xor
cmp
jnp
nop
lods
cmpsb
in
es
or
push
pop
cmp
mov
scas
jbe
add
or
sbb
inc
clc
shll
fs
test
or
sbb
into
add
xor
adc
mov
pushf
or
pop
mov
xor
mov
nop
dec
cld
inc
lock
js
inc
pusha
pop
and
adc
rolb
sbb
xor
cld
add
and
sbb
sbb
xchg
inc
xor
test
mov
cmp
data16
int3
stos
add
cmpsb
movsb
sbb
mov
out
call
pusha
adc
push
je
cmp
cwtl
or
jo
dec
es
lods
shr
push
adc
mov
add
push
sbb
movsb
mov
sbb
call
sub
add
pop
adc
add
add
pop
sahf
and
loopne
sbb
jl
and
enter
ljmp
cmp
call
inc
xchg
loop
loop
inc
push
pop
scas
adc
mov
and
pusha
je
xchg
push
dec
and
xchg
sub
lcall
dec
pusha
es
jp
push
dec
mov
push
ds
int3
ret
push
dec
add
pushf
xchg
mov
mov
inc
cli
mov
push
data16
xor
enter
cmp
xchg
push
adc
xor
cmp
es
sub
pushf
push
stos
ss
clc
pop
xor
adc
adc
sub
and
pop
pushw
pop
mov
push
mov
orl
addr16
pop
jo
mov
call
add
inc
or
je
mov
popa
inc
rclb
js
ret
subl
lods
add
rolb
xchg
sar
adc
imul
mov
test
sahf
add
mov
cmpsl
mov
lods
movsb
cmp
sahf
push
in
lock
int3
sahf
cld
push
faddp
add
sbb
xor
pop
adc
inc
xor
xchg
mov
cli
or
mov
pop
test
or
je
jbe
mov
in
arpl
fmuls
js
xor
sub
cwtl
xchg
lret
mov
and
add
lock
dec
dec
xor
and
xor
xor
push
int
mov
jnp
push
outsb
nop
es
adc
call
data16
pusha
jo
push
add
orb
or
rcr
outsb
mov
cli
adc
in
or
dec
mov
sbb
inc
faddp
repnz
add
cmp
add
mov
int3
int3
in
jne
mov
mov
jbe
mov
or
sub
dec
lods
adc
push
inc
jbe
js
and
mov
rorb
pop
andl
imul
cli
es
ret
add
sub
or
bound
dec
dec
daa
ds
or
cmp
cmp
or
loopne
or
pusha
xor
sub
sub
mov
cmp
je
mov
or
adc
pushf
xor
jl
bound
roll
add
xor
sbb
imul
xchg
mov
mov
xchg
loop
push
mov
sbb
into
push
call
mov
aam
sub
rol
dec
sub
pushf
outsb
lret
iret
addb
nop
dec
pusha
stos
mov
mov
and
cltd
shlb
cmpb
aad
sahf
push
cmp
cwtl
push
inc
nop
cmp
add
dec
add
pop
ss
pushf
add
adcb
sbb
push
pop
and
and
bound
inc
mov
inc
nop
xor
data16
pusha
cmpsb
add
imul
ds
sbb
pop
in
xchg
jbe
ds
mov
add
add
inc
pusha
idivb
dec
jl
add
int3
adc
add
hlt
cwtl
rolb
inc
mov
es
mov
sbb
bnd
add
pop
in
dec
nop
sub
mov
cmpsb
adc
or
adc
adc
pusha
lods
repnz
and
lcall
push
enter
or
mov
jbe
pop
adc
mov
pusha
popf
inc
scas
adc
xor
popa
add
lods
mov
ret
hlt
out
jmp
andl
jo
fadds
mov
add
push
add
push
loopne
pop
xor
rolb
ds
js,pn
enter
xchg
sbb
and
ds
nop
mov
lods
dec
sub
or
jl
xor
adc
add
sbb
xor
out
stos
js
inc
mov
add
mov
bound
cmp
lea
xchg
ds
xchg
fmull
jb
xor
or
push
xchg
inc
nop
cmp
scas
js
adc
cmp
adc
push
or
scas
and
pusha
rol
aad
into
mov
mov
lods
push
adc
xor
fs
data16
pop
mov
push
cmpsl
rorl
fidivl
add
inc
or
scas
mov
mull
in
cs
insb
add
pusha
jb
xor
mov
push
stos
into
jb
or
inc
inc
and
pusha
sahf
cwtl
call
lret
adcl
dec
and
dec
dec
xor
js
mov
adc
rolb
sub
xor
adcb
enter
push
outsb
push
int
cmpsb
lcall
and
add
sbb
sub
pop
adc
movsb
movb
cld
ljmp
xor
insb
sub
call
pop
cmpsb
and
sbb
les
add
or
sub
ret
sbb
nop
mov
sub
lds
lret
adc
je
xchg
and
jmp
adc
loop
or
jb
or
and
in
mov
inc
add
sbb
mov
dec
xor
cwtl
xchg
insb
inc
adc
addb
add
imul
push
test
mov
pop
sbb
test
fldl
sbb
icebp
rol
loop
push
test
out
xchg
out
pop
xlat
or
cmpsb
fiadds
mov
adc
adc
addb
adc
sub
pop
sub
bound
nop
lock
mov
scas
pusha
add
inc
decb
fiaddl
mov
stos
in
sbb
in
and
adc
dec
or
cmp
test
xor
or
adc
inc
bound
add
mov
xchg
push
shrb
mov
ljmp
or
decb
orl
mov
mov
loop
outsb
or
jne
cwtl
push
data16
push
jl
add
sbb
add
mov
adc
xor
fs
mov
pop
mov
push
pushf
lods
je
inc
ss
push
and
into
adc
fcomps
sbb
adc
in
pop
adc
hlt
fisubs
les
inc
mov
sub
push
sarl
sbb
fcoml
out
jmp
adc
outsb
cmp
push
adc
les
test
mov
loope
and
push
cmp
inc
or
out
or
fldl
cltd
adc
repnz
cltd
push
mov
fcompl
mov
xchg
fs
pop
push
pusha
outsb
mov
pop
fdivs
or
push
push
inc
push
add
adc
dec
lret
data16
jo
push
notb
js
jo
and
adc
jle
inc
adc
test
cs
dec
or
push
sub
and
fcoms
test
cli
mov
mov
push
mov
mov
sub
mov
test
add
js
out
xchg
sbb
push
jle
xchg
fdivl
xchg
or
xchg
enter
stos
in
and
aam
inc
xorb
movsb
cwtl
ret
xchg
pop
or
cmp
hlt
mov
pusha
movsb
addb
add
sub
mov
push
fadds
xchg
aam
cwtl
js
mov
add
ficoml
daa
ret
inc
ficoms
test
cmpl
mov
add
jo
repnz
js
nop
push
add
pop
mov
enter
cld
push
arpl
xor
fimuls
mov
mov
inc
ficoml
dec
jnp
in
loopne
push
pop
push
dec
dec
or
xchg
stos
sarb
push
and
in
lods
or
nop
sbb
in
aam
adc
je
sbb
nop
mov
mov
dec
lods
mov
cmp
inc
ror
push
xor
nop
ret
mov
sbb
mov
push
or
inc
bound
xor
or
pushf
inc
or
pop
orl
cli
data16
shll
add
or
ljmp
pushf
cmp
mov
insb
lock
nop
sbb
cmp
in
xor
fdiv
cs
das
cmp
xchg
add
dec
test
movsl
int3
inc
int3
stos
xlat
test
jbe
add
aam
xchg
cmp
outsb
or
cmpsb
push
icebp
loop
jp
je
insb
subb
jns
fcmovb
movsb
mov
data16
or
fstps
dec
enter
ds
jge
push
inc
add
xor
jnp
sbb
test
push
call
xor
mov
dec
xchg
pop
mov
data16
mov
cld
rorl
or
and
sub
or
fdivs
xchg
xor
ficoms
loop
daa
jnp
repnz
and
cmp
mov
add
sbb
mov
cmc
in
add
movsl
and
push
adc
out
and
add
xor
add
jo
jo
insl
add
call
nop
or
inc
cmp
mov
add
add
rcl
rolb
loopne
loopne
stc
xchg
fwait
cmp
add
xchg
push
pusha
pop
out
repnz
jbe
mov
mov
cld
push
mov
sti
xor
fildll
repz
ja
xchg
jge
repz
pop
pop
push
aas
xor
push
mov
push
pop
nop
jg
ds
aad
push
aas
mov
push
mov
imul
pop
push
mov
push
xchg
ja
js
adc
adc
xor
cld
push
xor
adc
mov
push
inc
mov
jmp
mov
dec
sti
add
or
adc
jg
out
or
or
jmp
or
add
mov
fldt
cltd
or
dec
sahf
and
dec
pop
add
addb
mov
add
and
add
out
add
adc
pop
clc
sub
pop
xor
repnz
push
jne
cld
adc
add
pinsrw
dec
inc
les
jae
add
psrlw
or
sub
das
outsl
inc
mov
inc
sub
add
and
mov
inc
loopne
add
adc
pop
repz
jg
out
add
mov
inc
popl
insb
pop
popl
add
dec
sti
cwtl
xor
pop
inc
and
imul
inc
test
xchg
pop
sahf
push
outsb
wrmsr
and
cmp
mov
rolb
and
add
add
aaa
aaa
mov
sbb
add
daa
and
fldt
sub
xor
aaa
cmp
cmp
and
adc
sub
xor
add
imulb
cmp
add
cmp
ds
pop
dec
add
cmp
push
insl
fwait
out
in
cmp
outsb
inc
cmp
dec
es
dec
push
inc
push
push
dec
adc
dec
inc
push
dec
mov
dec
repz
pop
push
push
pop
pop
add
bound
jne
pop
repz
dec
dec
pusha
add
insb
push
push
fs
jp
cld
mov
fisttps
pop
add
push
push
jne
bound
add
scas
sub
jae
data16
jns
push
jae
mov
xchg
sarl
popa
aam
jl
jbe
fsubrs
repz
jns
push
push
jle
or
aaa
mov
push
xor
inc
aaa
dec
add
dec
add
cmp
outsl
push
insb
sub
ss
aas
push
add
aas
pop
add
xor
in
mov
cmp
and
push
push
cmp
adc
popa
and
and
aas
jns
inc
dec
push
inc
push
dec
insl
imul
pop
jae
push
insb
push
pop
outsb
inc
inc
js
pop
xor
add
gs
imul
jle
arpl
mov
shrl
jbe
test
cmpl
out
cmp
orl
jl
fildll
out
orb
mov
add
mov
mov
push
outsl
xchg
sbb
cwtl
sbb
xchg
push
imul
pushf
sub
test
cmpl
test
lea
push
xchg
mov
add
lahf
xchg
adc
add
add
xchg
mov
add
outsb
cwtl
cwtl
and
xchg
sub
sahf
sahf
sub
mov
and
cmpsl
movsl
out
lds
mov
lods
stos
xor
cmpsb
movsl
cmp
mov
mov
fiadds
push
jmp
stos
stos
mov
mov
add
scas
push
push
mov
arpl
push
mov
cmpsb
dec
jle
mov
mov
pop
push
addr16
lret
inc
aam
add
aad
pop
hlt
faddl
and
mov
inc
fwait
add
out
push
mov
push
pop
jbe
add
jp
add
jp
arpl
das
jo
add
outsb
in
xor
xchg
push
jne
aas
js
jle
cmpsl
cs
mov
insl
jle
push
jo
dec
roll
push
les
inc
pop
push
aas
neg
mov
push
ja
xchg
pushf
push
loop
insl
ret
sbbb
test
xchg
stos
add
xchg
cmpsb
fistpll
jle
xchg
mov
lea
sub
popf
push
mov
or
cwtl
int3
add
enter
push
mov
mov
inc
mov
fidivrs
mov
mov
jle
push
inc
test
jne
mov
sti
add
addr16
fucomi
shlb
inc
ret
push
enter
enter
pop
aad
outsl
jecxz
push
fsubrl
mov
mov
lods
cld
incl
test
roll
into
xchg
jecxz
xchg
add
in
add
lret
mov
or
push
call
xchg
mov
pop
xchg
mov
push
xchg
loop
loope
lea
mov
xchg
mov
ror
add
cmc
int
jg
fxch
push
hlt
push
fsubr
iret
repz
fwait
dec
repz
repnz
std
out
push
clc
lahf
mov
pop
pop
inc
fidivrl
and
adc
pop
adc
shrb
sti
test
adc
shrl
jle
pop
sub
pop
push
pop
push
mov
sbbl
push
addr16
jg
pop
adc
insb
popa
shrl
adc
jne
cwtl
out
popa
insl
test
pop
pop
cmp
jnp
repz
std
dec
mov
sub
pop
inc
pop
xor
xor
cmp
call
out
popa
mov
xor
cs
das
xor
mov
push
inc
pop
mov
lcall
and
and
das
cmp
adcl
sub
rcrl
add
sbb
das
xor
xchg
ficoms
cmpb
mov
sbb
and
xor
mov
sbb
div
pop
adc
push
sbb
sbb
and
xor
cmp
fwait
sahf
mov
mov
or
add
leave
mov
pusha
jno
xchg
lahf
mov
mov
adc
data16
jo
jo
push
push
ret
data16
push
jno
movsb
pop
xlat
pop
test
dec
dec
dec
dec
adc
sub
and
dec
pop
mov
fcmovu
pushl
iret
mov
mov
scas
movsb
mov
dec
push
decl
cmovno
push
push
pop
pop
cmpsl
mov
cmpsl
cmpsb
pop
pop
in
xchg
or
adc
jg
or
aas
add
aas
mov
push
push
pop
pop
cmpsb
mov
test
jge
daa
sbb
pop
inc
inc
popa
push
jbe
mov
ret
mov
add
icebp
faddl
popa
pop
cmpsl
ret
sarb
and
add
pop
pop
movsl
cmpsb
mov
or
int
mov
push
add
mov
xor
pop
ror
int3
mov
inc
mov
popa
push
push
add
lret
ror
int3
int
incl
arpl
movsl
cmpsl
ret
ljmp
in
rcl
mov
fs
jg
into
clc
sti
icebp
fstpt
ja
idiv
popa
cmpsb
mov
sti
out
fnstsw
mov
mov
pop
pop
cmp
jne
mov
mov
inc
pop
cvtdq2ps
pop
cmpsb
pop
aam
mov
cmp
pop
cmpl
push
adc
pop
push
ds
jge
popl
mov
or
insb
mov
push
mov
mov
fwait
mov
in
lods
xor
stc
mov
add
ret
pop
jge
xchg
mov
shll
sbb
repnz
in
inc
mov
mov
test
mov
fistpll
enter
and
cli
test
add
out
dec
pop
jns
mov
testb
add
lahf
addr16
cmp
incl
adc
add
pop
pop
add
jnp
add
test
cmp
decl
add
add
ret
int
rcr
add
call
jmp
add
and
push
xor
fistpll
js
pop
orb
lcall
mov
lret
mov
add
in
fucom
pcmpeqd
lock
push
cltd
push
es
or
mov
mov
std
test
mov
ja
scas
sub
sbb
pusha
iret
out
adc
pop
adc
jae
add
insb
mov
add
push
sbb
adc
add
add
push
or
fnstenv
push
adc
sbb
pop
cmp
cmp
cmp
data16
and
push
sub
cs
xor
xor
cmp
pop
add
dec
push
fwait
int
repz
dec
dec
push
fnstenv
pop
outsb
push
push
jo
ja
and
insb
add
push
mulb
fisubl
push
fs
dec
pusha
jns
inc
add
int
dec
add
push
add
pop
int
mov
add
pusha
add
add
add
addb
test
outsb
xchg
int3
outsl
jae
add
js
scas
cmp
int
pop
cld
sbbb
mov
cltd
mov
out
fwait
pushl
add
mov
roll
cmp
mov
add
xchg
ss
int
add
lcall
add
add
scas
add
add
mov
mov
mov
mov
cwtl
mov
mov
xchg
pop
ret
ret
add
int
mov
add
add
add
add
add
insb
ss
lret
add
add
add
fwait
int
mov
rolb
roll
roll
aad
mov
insb
ss
add
add
add
ss
int
add
add
add
add
add
data16
insb
add
add
add
add
insb
ss
int
call
add
add
int
mov
add
add
add
add
add
insb
ss
repz
add
add
add
fwait
int
mov
clc
add
add
add
add
test
xor
xlat
std
and
aam
push
xlat
mov
in
add
xchg
pop
xor
pop
divb
or
and
outsb
dec
inc
das
test
imul
dec
dec
dec
dec
add
mov
imul
push
xchg
sbb
inc
cmp
outsl
lcall
testb
add
dec
nop
ja
jl
je
jl
jge
xchg
mov
insb
mov
jl
je
pop
push
add
dec
outsl
pop
je
jbe
jbe
cmpb
cmpl
dec
xchg
test
jge
xorb
jle
jne
popa
adc
cmpl
js
data16
xlat
jle
cmpl
imul
leave
divb
pop
pop
pop
popl
ja
pop
jbe
addb
rcr
xchg
mov
jle
xchg
mov
and
lods
cltd
jp
bound
test
bound
loopne
xchg
adc
jg
pop
jbe
pop
ja
addb
xchg
push
cmpb
std
mov
bound
adc
mov
xchg
xchg
addl
jb
jbe
jbe
imul
jp
dec
sub
jp
jbe
imul
add
or
inc
adc
add
sti
incl
push
push
push
imul
sub
pop
push
dec
dec
push
pop
pop
or
mov
jp
pop
dec
and
mov
push
jbe
dec
daa
push
sbbl
sbb
bound
jmp
jo
jb
inc
adc
jl
dec
push
push
mov
fstps
or
dec
push
pop
sbb
pop
mov
jp
dec
pop
loopne
mov
es
je
or
sarl
adc
push
adc
insb
call
ss
pop
test
orl
mov
fistpll
cld
jle
push
push
or
jg
or
sbbb
mov
and
es
push
pop
ja
nop
lea
mov
and
or
cmp
adc
jb
or
es
idiv
imul
adc
outsb
jge
mov
ja
sbb
sbb
jp
jo
dec
outsb
jl
xor
cmp
xor
push
lds
lret
xor
mov
jp
or
jp
cmp
sbb
ds
ja
mov
or
jno
pop
and
push
push
fcmovnb
pop
addps
pusha
cli
dec
jbe
push
daa
push
xchg
adc
push
jnp
int
imul
and
sub
inc
cmp
sub
int
lock
cmp
jl
mov
push
jne
jle
mov
push
sub
or
addb
ja
je
scas
ret
sbb
lea
rorl
cmpl
je
dec
sub
mov
pop
subl
mov
pop
mov
push
dec
jl
lea
pop
fdivrl
jge
cmp
sub
and
popf
sub
mov
cld
dec
xor
xchg
push
jle
mov
pop
imull
push
ja
jb
add
jle
subl
mov
and
mov
pop
jge
jmp
xchg
push
lret
enter
push
popa
int
inc
je
fs
jle
out
aad
mov
outsb
push
jge
or
sbb
cmp
jg
pop
pushf
loop
and
sahf
and
jbe
sub
addl
jb
xchg
jo
in
out
pop
ja
jp
inc
mulb
shll
outsb
mov
jle
je
sbb
push
push
mov
pop
mov
push
aas
add
inc
dec
add
loopne
cmp
stc
add
mov
daa
cltd
xchg
xchg
add
incl
xchg
cmc
add
sar
add
out
add
scas
xchg
scas
sti
sar
repnz
pop
inc
add
inc
ja
lcall
int
sbb
mov
or
add
xor
or
int
cmp
or
mov
insl
outsl
fcomps
pop
mov
pop
xor
mov
mov
xor
xor
mov
ja
in
es
push
js
popf
fstl
xor
mov
in
jge
ja
pop
xor
xor
jne
pop
fldl
fcoms
inc
arpl
adc
jg
scas
sub
add
add
pop
or
xor
or
push
sub
sbb
pop
aaa
add
cwtl
les
aas
dec
inc
add
and
adc
inc
add
pushl
lds
dec
outsb
sub
sbb
dec
push
cs
add
aaa
push
add
xor
add
cmp
add
inc
bound
mov
and
and
mov
popa
add
testb
dec
ja
dec
jle
push
and
add
push
inc
and
pop
pop
or
jns
push
cs
mov
out
push
jns
jnp
mov
dec
test
push
addb
incl
pop
nop
jbe
mov
xor
add
pop
xchg
add
pop
xchg
add
in
aaa
mov
es
sub
add
gs
push
push
sar
xchg
outsb
lcall
jno
add
mov
push
xor
add
jp
fcmovnu
sbb
ds
jno
push
js
inc
jge
push
push
shrb
jle
inc
jle
cmp
insl
fldt
jge
cmpl
mov
sbbb
aaa
fildll
cs
mov
inc
xorl
mov
out
add
mov
add
inc
xchg
rolb
dec
xchg
lds
into
push
sbb
jg
int3
add
add
roll
pop
stos
aam
stos
fldl
cmpsl
les
loopne
mov
lret
into
mov
add
ficoml
mov
mov
mov
dec
mov
add
in
sti
pop
lock
out
push
rcr
add
in
add
testb
dec
ret
jne
repz
push
ja
push
fmull
addl
mov
mov
insl
roll
xchg
xchg
push
nop
cltd
push
xchg
xchg
fcomi
test
xchg
push
xor
xchg
popf
add
add
test
mulb
adc
stos
mov
stos
mov
movsb
cmpsb
test
lods
cmpsl
dec
or
insb
push
stos
test
push
cld
lcall
test
add
mov
add
pop
out
mov
mov
push
mov
xchg
mov
insl
ret
mov
iret
mov
iret
mov
sarl
repz
lret
mov
iret
mov
ret
mov
int3
mov
sahf
lret
mov
ja
mov
ret
ret
scas
cs
fldt
int
mov
fcmovb
fcmovne
mov
rol
dec
negb
pushaw
push
int
rcrb
mov
add
fucomi
fiadds
sbb
fwait
dec
mov
out
out
mov
xchg
sahf
cli
mov
xor
mov
mov
add
insl
sti
mov
lret
lret
leave
out
enter
int
fmul
push
shl
xlat
rcr
shlb
ror
push
aam
add
fisubrl
in
fcmovnbe
rcll
flds
in
outsb
out
roll
fstpt
loop
mov
fcoms
jecxz
push
jmp
mov
fstl
mov
cli
loopne
in
dec
in
fisttpll
sti
loope
add
loop
jmp
push
jecxz
in
jmp
out
inc
loop
add
jecxz
in
hlt
mov
stc
out
push
ljmp
fildl
sbb
mov
std
out
push
repnz
pop
les
into
push
fdiv
std
add
push
out
add
in
in
out
insl
mov
in
jecxz
loop
out
ljmp
push
in
mov
add
repz
push
in
cli
out
or
idiv
jbe
xchg
lcall
push
xchg
hlt
push
int3
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
xchg
xchg
xchg
adc
adc
xchg
xchg
mov
xchg
push
and
std
push
roll
jecxz
push
and
ja
sahf
cmp
or
sub
adc
fsts
ja
fcom
xlat
jecxz
jecxz
fcomp
sub
xchg
fisttps
ss
sub
fcom
rcr
rcll
add
scas
test
push
test
ljmpw
rcl
shrb
scas
mov
std
xor
jne
fsubrs
jp
jnp
fwait
test
std
in
fcmove
sub
jnp
xchg
mov
or
lret
lahf
xchg
imul
push
outsb
jbe
lahf
scas
fdivrs
idiv
fdivrs
sub
rcrb
pop
scas
pushf
jge
imul
pop
sar
add
add
imul
scas
ret
sub
jae
sub
std
ljmp
mov
push
sti
pop
sub
or
aas
outsb
jl
sarb
cmp
inc
outsb
mov
pop
int
or
or
popa
addr16
sbb
push
push
adc
add
aas
ret
sub
and
sbb
std
lods
mov
idiv
fisttpl
push
sub
and
aaa
cmp
xor
sbb
mov
test
cmpsl
imul
sub
std
stos
orb
sub
cmp
sbb
aas
rcrb
sub
dec
dec
cmp
pop
subb
ret
adc
push
incb
jae
mov
sbb
popa
pop
push
or
lahf
jo
ucomiss
push
sti
lods
jb
pop
sbb
fs
sti
in
sti
mov
scas
jl
mov
sbb
sti
jmp
mov
stc
jg
sbb
sbb
dec
pop
pop
jmp
pop
pop
pop
addr16
inc
cmp
mov
sbb
pop
ljmp
sti
call
cwtl
loope
adc
sbb
cmp
push
add
pop
sub
cmp
cmp
popf
bound
and
xor
out
cwtl
sub
stos
dec
push
daa
mov
mov
sub
loop
ret
jecxz
out
imul
imul
pop
cld
repnz
in
ret
xor
lea
lds
je
pop
jmp
xchg
fs
mov
pop
loope
jmp
lret
push
mov
mov
ror
xor
in
stos
stos
mov
lds
pop
icebp
jmp
mov
mov
mov
push
jmp
loope
shll
loop
imulb
in
aaa
mov
loope
mov
or
addr16
mov
icebp
out
mov
mov
in
lds
icebp
jecxz
rcr
mov
aad
mov
in
pop
out
les
mov
ss
outsb
ror
fs
mov
outsb
add
rorb
js
or
out
xchg
mov
fisubrs
push
mov
in
mov
out
into
lds
les
out
into
mov
aad
out
or
outsb
addr16
push
adc
fsubrp
mov
mov
jp
imul
iret
mov
adc
sub
gs
ljmp
or
addr16
bound
int3
out
aam
test
cmpl
mov
aas
sti
push
cmpsl
pop
adc
fs
mov
push
jno
imul
ljmp
test
mov
cmc
pop
add
out
jg
push
movsb
mov
mov
jae
push
push
inc
jae
ret
mov
fsubp
mov
stos
testb
push
idiv
in
push
lock
movsb
andl
ja
push
sub
push
insl
ja
mov
ja
fwait
test
idivb
movsl
sbb
in
das
clc
andb
and
sub
push
xor
js
mov
out
pop
mov
jns
dec
enter
clc
mov
std
outsb
call
sbb
or
pop
inc
ljmp
out
lods
push
or
sub
movsb
leave
in
mov
cwtl
repz
mov
mov
imul
add
add
mov
xchg
insb
sti
out
sub
mov
mulb
sti
mov
pop
adc
or
or
cmp
mov
sbb
fnstcw
and
adc
leave
pop
stc
clc
stc
lret
fdivrp
mov
fidivrs
mov
push
mov
aad
lods
js
pusha
push
push
add
cmp
out
fisubrs
pop
data16
in
add
adc
sub
jmp
arpl
mov
mov
mov
sbb
xor
adc
sbb
notb
ja
mov
stc
insb
or
not
mov
add
mov
aaa
clc
repnz
clc
cld
sarl
cld
or
add
fistpll
pop
sub
fimuls
mov
mov
mov
es
imul
leave
fcoml
faddl
orb
out
push
ja
int
push
add
and
out
mov
push
arpl
push
push
dec
and
add
std
cmp
lret
into
sar
pop
add
push
das
cmp
sbb
fucomp
fisttpll
push
and
std
cltd
cld
or
into
jnp
das
or
and
lret
mov
add
pop
cld
xor
insl
add
aad
nop
inc
cld
std
ret
pop
mov
mov
adc
pop
enter
mov
int3
rolb
aaa
iret
testb
push
push
add
and
adc
add
ljmp
sub
cmp
add
cmp
aas
mov
inc
aas
inc
inc
push
dec
mov
pop
jnp
push
pop
pop
pop
push
jbe
push
add
push
pusha
mov
add
or
add
adc
outsb
jno
jl
neg
fistpl
and
cmp
inc
cmpsb
inc
dec
add
dec
push
add
push
jbe
adc
add
pop
add
add
dec
inc
cwtl
int
outsl
into
inc
dec
dec
add
dec
add
dec
add
inc
dec
test
dec
push
outsb
dec
push
pop
add
mov
inc
add
push
push
push
push
pop
push
push
push
pop
pop
add
pop
fisubrs
incl
push
push
pusha
add
bound
popa
pop
popa
add
pop
fs
arpl
incl
ds
push
add
jo
jo
mov
jb
jns
jp
jle
mov
jnp
cmp
push
mov
add
data16
subl
mov
fwait
int
arpl
add
je
push
jae
push
jo
adc
jb
jp
mov
idiv
dec
dec
mov
add
les
push
or
adc
mov
xchg
push
adc
pmuludq
pop
push
pop
jmp
inc
fwait
insl
jmp
jge
mov
xor
mov
ljmp
add
xchg
mov
pop
mov
push
mov
add
mov
insl
pop
mov
nop
jns
into
jge
push
push
insl
nop
push
pop
mov
sahf
push
pusha
test
mov
mov
add
mov
adc
ret
scas
shll
add
mov
cmpsb
ret
leave
enter
push
insl
push
jno
int
ds
push
adc
out
add
xlat
call
outsb
xchg
into
and
jmp
in
repnz
push
xor
sti
mov
push
cmp
loope
jo
pop
xchg
push
out
testb
repz
add
jl
idivl
test
loop
or
orb
insb
push
test
popf
cltd
sahf
fisubrs
fldt
mov
add
cmpsb
popf
test
filds
movsb
add
stos
mov
lcall
inc
mov
cmpsl
mov
lods
incl
push
cmpsb
push
mov
mov
sub
mov
mov
fsubs
add
fisubrs
loope
jecxz
mov
xabort
call
xchg
mov
iret
add
add
outsb
push
mov
aad
rcr
add
in
es
sti
xchg
rep
jmp
lret
push
mov
mov
fcmovne
fidivl
fimuls
jecxz
aam
insl
mov
push
fucomp
shrb
in
push
push
in
cs
pop
or
fisttpl
fldl
ret
sbb
fisttpll
in
push
loop
enter
out
imul
add
ljmp
scas
jmp
add
in
lock
imul
mov
out
repnz
aad
decb
push
ficoms
loop
imul
repnz
jmp
jecxz
ljmp
int
mov
idivb
jecxz
ljmp
stc
repz
add
std
inc
sti
adc
cmp
add
xor
add
insb
orb
lahf
out
push
cmp
ss
imul
or
and
sub
in
or
or
fadd
sahf
daa
sub
sub
or
pop
out
dec
stc
decl
push
jno
adc
cmpsl
or
stos
lods
scas
lods
add
test
or
push
cmp
push
or
lds
ret
in
div
push
ret
shrb
or
stos
cmp
dec
pop
add
lret
or
or
pushf
loope
mov
sarl
lods
cmp
int
mov
or
or
shr
mov
outsl
pusha
lds
fadd
cmp
mov
dec
jecxz
out
call
std
fwait
jb
loop
or
lods
or
fadd
cmp
mov
adc
loop
pop
ljmp
out
push
daa
cltd
pop
mov
pop
popa
dec
fldt
mov
ret
call
mul
daa
cmp
jmp
iret
sub
mov
or
cmp
dec
pop
add
out
lock
add
daa
pop
cmp
mov
sbb
insl
pop
in
data16
leave
cmp
push
loope
out
jle
mov
or
sub
daa
cmpsb
sub
or
jmp
pop
in
cmp
dec
inc
xor
xor
aaa
inc
bound
out
sub
das
clc
or
sub
xor
cmp
iret
decl
pop
push
mov
mov
nop
or
xor
xor
sub
or
aas
xor
and
pop
orl
into
or
daa
into
das
inc
mov
inc
div
cld
cld
cmp
xor
jb
or
lods
cmp
lea
xchg
das
cltd
inc
fwait
pushf
cld
add
das
xchg
push
cld
add
pop
pusha
loop
cmp
inc
inc
popf
idiv
or
into
rcrb
sub
or
cmp
jg
bound
dec
fmuls
in
repnz
cmp
popf
cld
mov
mov
pop
mov
jge
jns
or
or
cmp
and
or
or
sub
inc
hlt
mov
pop
mov
mov
xor
daa
aad
cmp
bnd
fs
aad
fldcw
repnz
inc
cli
mov
loopne
int3
pushf
inc
aaa
bnd
insl
sub
cmp
or
or
sub
inc
cli
aam
out
mov
icebp
pop
mov
hlt
aaa
fsubl
xlat
jg
outsl
push
gs
sbb
sub
inc
cmc
scas
mov
fistpl
cld
xchg
das
jbe
pop
bound
sub
inc
repz
adc
imul
cmp
imull
dec
sbb
mov
fidivrl
fcompl
test
fimull
jmp
mov
or
push
mov
xor
cmp
frstor
mov
lcall
cmp
sbb
or
inc
fldt
mov
faddl
fisubrl
in
mov
std
pop
dec
push
add
movsb
or
xchg
sub
cmp
mov
pop
mov
jp
jl
out
or
mov
mov
or
fidivl
pop
and
adc
add
daa
movsb
es
mov
cmp
pop
outsl
orb
or
fnstsw
mov
jg
mov
cld
mov
lret
xchg
insl
push
inc
mov
add
pop
mov
insl
in
mov
cmp
test
das
mov
std
bound
sub
cmp
mov
push
push
mov
daa
inc
or
or
cmp
and
push
stc
out
jg
add
adc
adc
add
and
and
and
sti
popf
mov
xor
xor
sub
and
xor
mov
jg
xor
push
push
sbb
push
sub
push
push
int
popf
jmp
add
push
arpl
xchg
inc
sub
insl
fwait
out
push
inc
xor
add
adc
xor
add
fisubl
cmpsl
push
and
push
xor
ficoms
push
sbb
fisttpll
xor
inc
push
sbb
add
or
int
fwait
rorb
push
and
inc
push
and
outsb
sar
and
add
and
and
push
xor
int
mov
xor
pop
mov
fs
mov
imull
xchg
push
inc
and
inc
and
inc
pop
add
pop
sbb
push
adc
popa
xlat
push
jle
je
push
adc
adc
mov
cs
push
push
jl
pop
cs
test
xchg
xor
lcall
jnp
out
call
dec
and
xchg
outsl
shl
xor
xor
mov
mov
mov
int
push
cmpl
lahf
aas
stos
mov
push
or
ds
xchg
add
fdivrp
pushf
add
sahf
push
mov
add
add
insl
add
jnp
mov
scas
es
lods
add
scas
push
mov
pop
mov
imul
add
or
inc
xchg
testb
mov
xchg
dec
in
push
push
mov
int
movsb
pop
push
pop
test
arpl
fs
outsb
lcall
jl
insb
ret
push
jae
lret
les
jl
mov
ret
push
test
movb
add
add
jns
push
xchg
mov
jnp
in
imul
mov
lcall
push
mov
push
jns
repz
mov
imul
cmpsl
ljmp
mov
imul
mov
mov
lcall
mov
push
cmpsl
xchg
mov
mov
xchg
add
mov
add
mov
mov
aam
lret
fildll
lds
loop
roll
call
out
add
in
in
cld
cmc
out
or
std
div
push
sti
repz
popl
mov
add
add
add
add
incb
jns
mov
cmpl
and
popa
ret
popf
cltd
cmpl
rolb
ret
add
mov
jnp
leave
aaa
pop
pop
pusha
add
ret
jle
ret
mov
inc
cmpb
jnp
push
popa
sarl
mov
jle
mov
mov
test
and
popa
pusha
adc
adc
std
call
unpckhps
cltd
mov
movhps
repnz
jns
lahf
sahf
fwait
mov
or
lahf
lahf
or
cs
mov
mov
lahf
filds
dec
pusha
pop
test
xchg
inc
sub
into
fisttps
dec
dec
pusha
mov
and
mov
dec
dec
pusha
mov
mov
mov
sahf
ja
fwait
fwait
fwait
pop
add
and
sub
and
pop
sti
cs
pop
or
movsl
bound
es
and
mov
push
dec
dec
mov
lahf
ljmp
in
test
cmpsl
cmpsb
push
pusha
dec
lahf
test
lcall
mov
pop
jo
push
popa
test
call
mov
cltd
cmp
push
lahf
mov
inc
sub
repz
inc
lcall
fwait
fwait
dec
xor
inc
ret
add
lds
fwait
push
dec
lahf
fldl
inc
fs
cmp
dec
lahf
xor
inc
scas
mov
scas
mov
cmp
lcall
jge
push
pushl
popf
push
mov
xchg
xchg
jae
scas
mov
mov
cmp
out
jne
jbe
jo
insl
addr16
test
push
pop
mov
pop
xchg
xchg
mov
movsb
jle
jb
out
lcall
pop
pushf
mov
adc
jg
xchg
pop
lea
gs
jno
pushf
sar
mulb
bound
ja
addb
in
ss
mov
fs
insl
push
ss
jle
pop
pop
push
sbbb
pop
iret
jge
out
add
scas
mov
mov
js
lahf
pushf
jl
aas
cmp
scas
push
mov
scas
test
cwtl
test
mov
xchg
jbe
xchg
arpl
popa
add
enter
test
pushf
pop
sbb
sub
jnp
jle
aas
test
inc
add
mov
out
or
addr16
pop
pop
ja
pop
nop
push
sysret
imul
add
fbld
cmpsl
movsb
je
add
pop
daa
data16
cmp
pop
bound
inc
outsl
jmp
or
int3
inc
pop
mov
faddp
jbe
mov
add
add
mov
cmp
cmp
push
test
pop
add
pop
inc
pop
fcmovb
mov
pop
cmp
or
fcomip
call
push
pusha
inc
ds
or
lahf
cltd
cmp
xor
pop
and
sub
sub
mov
sub
xlat
sbb
pusha
adc
sbb
aaa
pop
jg
pop
and
out
add
xorb
add
in
sub
pop
add
jbe
inc
ds
xor
mov
lods
mov
push
xchg
repnz
push
in
data16
add
xor
push
jge
xor
and
addl
and
aam
shlb
pop
mov
in
add
push
adc
xor
inc
leave
adc
jo
push
inc
lahf
fwait
pop
inc
cld
out
adc
jae
add
sar
mov
orb
aas
loopne
push
arpl
out
loopne
mov
add
push
pop
pop
inc
call
jb
add
adc
sub
jg
dec
dec
add
cmp
dec
dec
push
push
inc
inc
add
push
add
push
pop
lcall
add
mov
int
flds
push
mov
es
mov
insb
xor
ds
dec
movsb
mov
push
mov
clc
mov
push
mov
dec
pusha
std
cmpsl
stc
dec
rorb
loop
pop
aam
fcmovbe
push
rcll
ret
push
pop
pop
les
insb
mov
pop
dec
icebp
push
dec
repnz
repz
hlt
outsl
pop
cmc
pop
mulb
data16
cld
add
insb
iret
data16
imul
cld
add
stc
in
insb
outsb
imul
outsb
lret
jb
out
leave
push
jo
push
jae
stc
in
jnp
jne
ja
jne
jns
jle,pt
repz
insb
ss
mov
int3
jp
jl
jge
jg
ss
mov
jg
popa
testl
stc
fucom
shrl
jno
sti
ja
xchg
lea
nop
ja
add
mov
decl
std
xchg
jg
add
mov
pushf
addb
incl
cltd
add
add
in
cmpsb
mov
cmpsl
mov
add
push
mov
fdiv
call
add
xchg
pushf
add
mov
or
fistl
sub
or
mov
push
iret
push
sar
test
int
mov
push
test
push
xchg
xchg
mov
mov
insb
ss
aam
rorl
fnstenv
pop
xchg
rolb
xchg
aad
xchg
xlat
popa
xor
push
xchg
xlat
push
xchg
fcoms
ds
shll
cltd
fcomps
cltd
ficompl
pop
test
push
mov
xchg
lcall
mov
fsubl
aad
cmpsb
pop
fisubs
sarl
push
cmpsb
stos
lods
filds
scas
ss
fisubs
fwait
int
sti
loop
mov
mov
mov
sahf
divl
mov
mov
mov
movb
lds
xlat
cmpsl
in
mov
sahf
aad
ret
jle
jmp
int3
repz
int
inc
leave
inc
into
fisubrl
jns
rcl
push
idivb
filds
lret
repnz
in
in
push
mov
push
idiv
out
push
and
out
clc
add
push
stc
cli
sysret
add
shrl
inc
enter
scas
in
mov
add
pop
lret
pop
add
add
and
popa
pop
mov
xchg
xchg
xchg
xchg
xchg
mov
stos
lods
lods
mov
mov
pop
popa
pop
add
sbb
daa
daa
das
xor
xor
or
pushl
aaa
cmp
cmp
jne
orb
incl
inc
dec
dec
dec
jbe
js
jl
addb
cltd
popf
popf
xchg
mov
and
pushf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
mov
mov
mov
incl
inc
inc
dec
dec
dec
dec
jae
jns
jge
addl
cmpb
outsb
mov
lock
cwtl
cmpl
jbe
incl
sbb
adc
loopne
popa
test
or
push
add
mov
fwait
cmp
andl
adc
pop
mov
outsb
imul
pop
subb
popa
jg
mov
pop
mov
mov
fwait
ss
popa
jge
xchg
leave
lret
insl
push
outsl
cmp
mov
fsubrs
ljmp
imul
add
popa
stc
lahf
jns
cmpb
add
data16
or
repz
mov
cmp
popa
ja
jle
xchg
sbb
fs
add
arpl
jae
mov
mov
iret
pop
arpl
pop
xor
popa
dec
mov
jge
fwait
pop
pop
popa
pusha
pusha
push
cmp
push
shrl
pop
shlb
rolb
pop
xor
lock
cld
dec
fwait
jbe
mov
pop
addr16
push
popa
dec
pop
das
xchg
mov
popf
xchg
xor
popa
inc
fwait
dec
daa
xchg
mov
pusha
call
jo
sti
inc
fwait
dec
daa
xchg
pop
fcomps
pop
iret
mov
rol
lret
inc
fwait
dec
es
pop
pop
push
pusha
sti
add
and
lret
ds
inc
and
les
and
or
mov
pusha
outsb
pop
inc
and
mov
xor
movsb
fwait
mov
push
in
inc
and
pop
add
imul
add
xchg
pop
or
aas
mov
adc
sbb
add
mov
decl
jg
sub
sub
sub
dec
push
push
mov
mov
pop
popa
sbb
stos
test
or
add
test
adc
pop
xchg
xchg
or
daa
stos
movsb
fistps
add
pop
pop
and
mov
aas
outsl
push
es
add
or
and
daa
cmp
repz
push
sub
sub
add
push
cs
add
sub
fwait
das
or
aaa
dec
push
inc
push
cmp
fcomi
push
add
cmp
adc
push
adc
dec
imul
outsl
add
dec
outsb
add
dec
insb
add
adc
inc
ss
notb
add
add
xchg
adc
ss
mov
insb
jg
push
pop
sbb
add
pop
xorl
addr16
add
data16
push
mov
fwait
add
pushf
add
addr16
imul
mov
insl
sbb
pop
jb
add
je
insl
sbb
push
jbe
push
je
push
js
add
cld
add
cmpb
push
mov
cmpsb
mov
add
add
into
jbe
lret
push
mov
add
mov
mov
push
sub
add
movsl
ljmp
add
mov
add
add
mov
icebp
mov
add
leave
fidivl
push
shlb
xchg
mov
dec
in
push
fildl
fcmovnb
push
imulb
fadd
leave
push
fmulp
int3
push
shrl
loope
loop
jecxz
iret
jnp
loopne
push
rcll
shll
rcl
in
jmp
out
pop
aam
aad
pop
out
aam
pop
xlat
fsubl
jns
push
out
call
mov
sahf
loop
in
call
mov
jmp
in
pop
pop
shl
repz
xchg
adc
inc
xor
add
and
or
cmpb
xchg
roll
jge
jp
outsb
pop
push
push
and
push
push
fbld
mov
push
bound
cmp
pusha
negl
test
pop
pop
pop
pop
pusha
pop
fnstsw
mov
push
pop
pop
imul
pusha
push
add
push
outsb
rorb
arpl
cmpl
pop
mov
mov
jg
popa
mov
dec
adc
pop
jp
int3
aas
negb
add
dec
sbb
push
lret
sub
ret
mov
and
pop
cmp
pmaxsw
pop
pop
shrl
popa
xchg
pop
rclb
mov
cmpl
pop
xchg
fldl
popa
jp
test
rcll
or
pop
testb
lock
pop
fadds
addb
aaa
fiaddl
jnp
adcb
dec
add
cs
jp
jb
enter
pusha
cmp
push
ss
daa
ret
sub
or
out
add
inc
mov
imul
lahf
nop
movq
jbe
and
pop
je
jae
das
out
cs
popa
mov
popa
jo
mov
mov
cmp
mov
pusha
and
jg
fadds
pop
mov
pop
mov
cli
push
jnp
les
xchg
ss
or
jae
je
ja
jbe
loope
fldcw
xor
pop
in
push
cld
popa
push
mov
subl
xor
sti
dec
xor
imul
jns
ret
sarb
mov
push
loopne
outsl
jae
popa
pop
aas
pop
adc
sub
rcrl
push
add
outsb
fcmovb
jbe
pusha
outsl
jne
pop
jge
jne
xor
jg
sub
pusha
bound
outsb
push
in
mov
sub
incl
add
add
or
mov
mov
push
mov
nop
daa
xchg
test
and
pop
aaa
xor
add
xor
sbb
dec
push
and
dec
mov
inc
and
dec
inc
arpl
ss
pop
jo
xor
cmp
push
and
shlb
jnp
das
xor
jns
xor
inc
xor
mov
idivb
add
insb
add
insl
push
add
ja
dec
add
dec
add
jl,pn
push
xor
mov
push
push
sbb
push
adc
sub
ja
dec
add
dec
push
push
dec
pop
out
data16
xchg
push
out
pushw
pop
outsb
cmp
pop
pop
imul
mov
jg
jbe
push
inc
js
pop
jo
sub
add
popa
pop
data16
sbb
ret
push
cld
ret
push
notl
aaa
lea
adc
mov
xor
pop
add
call
mov
mov
insl
imul
add
adc
gs
ss
xchg
das
imul
aaa
nop
add
outsl
imul
test
add
clc
inc
jecxz
add
divb
push
faddp
popl
js
xchg
xor
roll
push
mov
xchg
mov
mov
das
xchg
lahf
aaa
xchg
rolb
cltd
ret
pop
sbb
xor
xor
or
add
into
insl
pop
add
imulb
push
push
cmpsb
sbb
popa
lods
es
mov
add
scas
lock
fisubs
ret
jmp
push
in
push
movb
lret
in
jnp
in
sub
cmpsb
test
inc
jecxz
shl
mov
sahf
lcall
push
movsl
jno
mov
pop
into
roll
fbstp
les
fsubs
fptan
add
sti
inc
cltd
stc
iret
rclb
insl
mov
loopne
dec
negb
std
add
test
ljmp
fwait
in
mov
push
mov
lods
icebp
push
repz
mov
iret
les
movsb
mov
ret
int3
cld
outsb
aam
roll
insb
cmpsb
clc
push
jl
bound
movsl
aas
sbb
xchg
sbb
push
add
es
xor
adc
std
xchg
xchg
nop
enter
iret
lock
stc
and
popa
stc
std
mov
stos
movsl
xchg
shl
and
stc
repnz
popa
fistps
incl
std
cltd
pop
jae
pop
pop
pusha
add
pop
imul
out
decl
mov
popa
repz
cmpsl
std
mov
add
lock
roll
popa
pop
repnz
sbb
cltd
xchg
ror
into
int
scas
mov
pop
shlb
xor
test
mov
pop
sbb
or
movsl
lcall
andb
sbb
add
popa
mov
sub
test
pushf
test
inc
ds
pushf
punpcklwd
shl
cltd
mov
lods
xchg
push
cld
pop
gs
jo
push
xchg
call
scas
stos
gs
lcall
loope
mov
scas
lods
push
sbb
pusha
lcall
mov
jns
and
test
cmp
sub
sub
sub
sub
sub
and
and
mov
cltd
lods
pop
jo
mov
lahf
ljmp
lahf
sbb
lods
xchg
test
pusha
das
xor
add
jo
frstor
popa
xchg
push
test
lahf
aaa
pop
fidivl
pusha
add
imul
rcrl
lahf
sbb
pop
jno
stc
inc
pusha
push
or
push
add
jbe
mov
test
sarb
lret
leave
rcl
lahf
inc
andb
jo
ss
test
sti
popf
ds
inc
mov
mov
addr16
jg
mov
lret
int3
int3
loop
in
in
in
call
lret
popa
insl
std
fdivrp
jns
push
fisubrs
popa
push
shr
das
dec
dec
pop
fucomi
in
out
in
jmp
mov
dec
jne
jp
sti
mov
xchg
push
les
mov
mov
fstpt
mov
xor
xchg
mov
pusha
pop
pop
pop
jmp
in
pop
pop
dec
dec
dec
add
int
pop
ja
pusha
lahf
dec
lods
call
and
pop
pop
fninit
in
in
imul
pop
push
xlat
movsb
lcall
mov
inc
jle
je
pusha
inc
cmp
imulb
mov
pop
mov
jmp
mov
aas
add
adc
mov
pop
mov
pop
pop
es
lods
into
pop
mov
or
sti
data16
in
pop
in
idiv
hlt
pop
pop
loopne
pop
sti
dec
addl
inc
pop
loop
hlt
div
or
retw
add
pop
pop
in
not
xlat
in
pop
movsl
pushf
inc
add
jge
mov
mov
push
out
call
mov
mov
add
andb
and
out
pop
pop
icebp
inc
les
cmp
incb
out
dec
ds
bound
out
pop
add
inc
push
pop
adc
push
dec
or
xor
sub
and
subb
or
xor
cmp
iret
int
icebp
push
call
nop
popl
mov
mov
and
mov
add
and
inc
addr16
push
inc
mov
mov
add
mov
or
push
and
fldcw
int3
push
lret
cs
int3
in
jae
jge
pushf
and
cmp
cs
pop
mov
sbb
cs
insl
notl
das
add
inc
pop
fcomps
enter
rcrb
mov
dec
addl
inc
loopne
or
add
add
and
xor
mov
add
addb
mov
aas
add
push
push
jle
and
sbb
and
add
aas
xor
nop
loopne
cmp
adc
xor
es
adc
mov
int
adc
inc
dec
dec
add
dec
dec
push
dec
fldt
insl
push
push
mov
inc
inc
push
dec
inc
add
pop
pop
push
pusha
pop
pop
push
gs
add
push
dec
dec
aas
mov
pop
dec
dec
ds
insl
push
dec
je
es
push
jp
push
or
incl
pop
jl
add
add
push
add
push
or
mov
je
fwait
fwait
jns
dec
jl
ds
xchg
cs
add
add
decl
xchg
jno
mov
outsb
nop
mov
jne
cli
aaa
mov
lcall
cwtl
add
mov
addl
roll
or
out
jle
add
insl
pop
jmp
push
test
jle
lahf
outsl
or
popl
mov
cwtl
lea
lahf
xchg
add
add
mov
popf
add
xchg
mov
fstpt
test
cwtl
mov
mov
mov
mov
out
mov
mov
fstpt
ds
sarb
push
mov
mov
decb
int3
lret
rol
mov
iret
lahf
jg
add
add
push
mov
ret
add
fwait
inc
add
ror
aam
add
pop
aad
push
aam
dec
xlat
int3
xlat
into
ds
imul
add
leave
add
ror
push
rcr
push
fwait
outsl
mov
fcom
push
rcl
rolb
fcom
add
fxch
fdivr
fdivrp
out
add
iret
add
add
push
out
pop
fwait
lods
std
insl
loop
xchg
aam
add
fld
push
xlat
push
std
fcomi
fists
xor
fsubp
push
in
in
out
ss
out
adc
jmp
aam
out
call
loopne
mov
js
out
lock
jecxz
pop
ds
jecxz
cli
jecxz
in
repnz
add
cs
dec
ss
cmc
idiv
in
fcompl
fsubrs
call
jmp
jmp
push
icebp
xlat
sahf
outsb
not
ss
fcmovnbe
loopne
push
jmp
push
push
mov
ret
push
jecxz
mov
outsl
das
into
jecxz
ss
out
loope
call
in
mov
mov
call
outsb
mul
ds
loope
add
ljmp
fstps
in
hlt
out
push
stc
jmp
out
imul
jne
loope
cli
pop
call
scas
out
push
fldcw
insl
out
es
repnz
loopne
mul
mov
pop
cli
lock
push
push
jle
cmc
cmpsb
ljmp
repz
in
push
repnz
push
cli
scas
fldcw
jbe
hlt
cld
push
cmc
insl
rep
mov
ss
sti
idiv
into
clc
out
sti
in
push
ljmp
icebp
out
out
repz
cmc
hlt
lea
fldt
lock
push
std
hlt
push
cld
idivb
insb
mov
repnz
div
insl
neg
scas
stc
fadds
clc
jbe
lock
push
cld
clc
mov
xchg
xorb
cs
cli
jmp
out
pop
cmc
stc
add
div
cli
cld
call
sti
ss
stc
push
std
cld
andl
cld
xor
mov
out
mov
adc
add
sub
cmp
out
xlat
clc
pop
jno
movb
out
std
pop
das
push
adc
test
add
or
call
cli
xchg
mov
rol
lcall
or
aaa
pop
scas
cli
aas
push
or
and
sbb
push
or
mov
lds
incl
push
sbb
pop
and
or
pop
sub
dec
xor
dec
dec
add
int
outsl
fsubs
jmp
jecxz
lret
sahf
xchg
cltd
add
xor
lahf
jg
pop
dec
js
push
push
fs
mov
lret
outsb
movsb
int
out
pop
pop
xor
pop
push
dec
push
lods
je
arpl
mov
out
jecxz
loope
repnz
clc
cld
adc
xor
pop
popa
sarl
jns
jbe
in
fisubrs
in
repz
lock
pushl
inc
pop
gs
stos
xchg
in
mov
xchg
popf
ret
rcl
lahf
fsubrs
sar
scas
xor
gs
ja
shrb
rcr
imul
push
pop
pop
pop
pop
outsl
jo
jae
inc
adc
xor
ja
test
sti
or
push
inc
inc
les
incl
inc
ds
aas
inc
inc
inc
inc
push
pop
or
xor
test
lds
sbb
adc
fdivr
mov
sbb
lock
xor
scas
pop
cmp
xchg
shlb
dec
sbb
push
mov
xor
fimuls
mov
sahf
xor
inc
sti
lcall
shrb
stos
mov
jns
dec
xor
xor
jb
push
icebp
into
adc
pop
push
ja
mov
stos
lods
add
je
dec
jp
xor
xor
sub
clc
or
sub
es
fistpll
pop
in
pop
pop
xor
mov
fists
sti
mov
xor
pop
dec
bound
cmp
cmp
pop
daa
pop
sub
es
das
bound
cmpsb
dec
pop
xor
push
addr16
stos
adc
out
xchg
test
push
xor
and
cmp
push
push
push
fs
push
and
mov
push
and
inc
addl
jge
adc
add
fs
jge
mov
xchg
popa
outsb
call
jle
icebp
addl
pop
add
lods
sbb
pop
testl
pop
popa
das
fcompl
lea
ljmp
dec
sub
push
add
add
movups
jo
mov
pop
push
mov
pop
pop
pusha
int
enter
cmp
mov
lcall
add
or
add
adc
in
insb
mov
pop
mov
pop
push
pop
pop
mov
push
add
push
sbb
das
bound
daa
mov
xor
push
jne
js
mov
aas
jge
add
dec
les
imul
mov
dec
addb
inc
test
inc
mov
insb
mov
dec
ss
int
xchg
dec
xchg
dec
cltd
dec
pushf
push
sahf
push
data16
insb
mov
push
test
insb
ss
int
pop
lods
pop
mov
mov
mov
int
mov
mov
bound
ss
les
push
xchg
ret
aam
loopne
in
jp
or
les
addb
mov
insb
test
xchg
xchg
mov
insb
ss
int
pop
lea
nop
pop
xchg
pop
xchg
pop
jl
mov
xchg
pop
pushf
or
fwait
int
fnstenv
mov
fildll
scas
mov
add
lea
subl
sub
or
insl
int
or
rol
aam
push
int
repz
or
fcmovne
or
gs
mov
insb
fwait
addr16
push
imul
rolb
outsb
xlat
jo
xlat
jno
or
je
aaa
or
cs
negb
call
in
mov
out
xchg
jns
bnd
add
in
and
push
mov
js,pn
dec
loope
inc
jg
push
sahf
sahf
mov
ljmp
imul
andl
mov
scas
adc
sarl
xchg
testb
clc
cmpsb
xchg
ret
cli
lods
sti
mov
movsb
push
dec
mov
adc
faddp
into
bound
out
sahf
mov
pop
mov
fsubrp
jmp
cs
fmul
aas
lcall
pop
les
int3
add
lock
add
repnz
repz
xor
div
fsubp
add
cli
popf
test
in
call
jg
sub
inc
test
sub
es
lds
or
xor
mov
sbb
push
adc
popf
pop
fsin
decl
adc
jp
xchg
jp
jne
pop
add
mov
repnz
sub
pop
adc
pop
jae
es
pop
add
pop
sbb
add
and
pop
sub
femms
push
sub
out
popf
dec
dec
xor
add
pop
pop
or
sbb
aad
and
pop
pop
or
pop
adc
rcl
xor
push
xlat
push
repnz
jg
ficoml
pop
pop
aas
mov
and
or
mov
push
aas
ffreep
test
pop
xor
adc
dec
or
ljmp
nop
or
mov
add
jns
pop
add
out
add
or
push
das
dec
add
xor
add
or
mov
dec
dec
cmpsl
popf
orb
add
paddsw
push
push
arpl
lea
cmp
pusha
add
pop
pop
push
mov
jge
popa
pop
jb
and
sbb
fiaddl
iret
fisubl
pusha
lcall
xlat
mov
lea
push
daa
add
fdivrs
push
dec
jae
jne
sbb
jb
inc
pop
jb
add
pop
add
fxch
jb
or
inc
pop
fiadds
sbb
outsl
push
ja
inc
pusha
fnstcw
pop
sub
jle
mov
imul
ja
pop
inc
pop
sbb
mov
jne
sbb
pop
ja
aaa
mov
arpl
pop
mov
sub
inc
lock
pop
ja
inc
inc
and
jae
pop
outsw
mov
inc
fistps
pop
inc
aas
fs
scas
outsl
jnp
jle
or
sub
aas
pushl
push
and
pop
ds
mov
add
pop
cmp
sarl
ja
cmp
rcrb
popf
inc
mov
cmp
pop
jmp
fcoms
cwtl
lcall
jo
cmp
test
mov
xchg
xchg
jne
adc
xchg
mov
pop
cmp
call
pop
or
addb
jo
insl
insb
imul
shrb
pop
push
inc
pop
cmp
aad
pop
outsl
pop
arpl
pop
push
inc
mov
inc
pop
aaa
rcrl
cmp
pusha
pop
pop
push
aas
decl
sub
pop
pop
pop
pop
dec
cmp
stos
and
pop
or
std
pop
pop
pop
pop
dec
xor
dec
add
test
sub
inc
shl
outsb
dec
pop
dec
add
jo
mov
mov
mov
nop
xchg
and
imul
mov
fbstp
push
mov
or
scas
jbe
jg
pop
adc
int3
inc
xor
inc
add
add
push
les
inc
out
mov
mulb
and
push
push
int3
xor
xor
popf
in
sub
push
add
push
lret
add
add
cltd
cs
cmp
stos
stos
stos
pop
lret
fnstenv
pusha
push
push
jg
jo
or
or
insw
fistps
dec
pusha
das
ja
jg
cmpsl
jne
xlat
pop
jo
pop
or
cmpsl
pop
fimull
std
out
xor
mov
and
out
sarb
pop
jl
int3
movaps
push
xor
mov
add
xchg
outsb
rcrb
jg
and
cmpsb
lahf
inc
pop
add
pushl
lea
inc
xchg
and
and
lea
daa
add
pop
mov
cltd
clc
xchg
push
cltd
add
cltd
in
cld
xchg
or
push
cltd
xor
imul
xor
adc
dec
xlat
pop
xor
mov
dec
imul
mov
push
mov
sub
jae
sbb
inc
cwtl
insl
mov
dec
mov
and
add
and
add
sbb
daa
ss
add
add
cmp
xor
cli
fwait
pushw
cmp
sub
shl
push
jl
add
aaa
add
cmp
dec
push
ss
push
movsb
lock
add
dec
pop
add
inc
push
mov
pop
add
push
pop
add
push
gs
push
insl
ss
jbe
and
add
push
insb
add
push
jle
add
test
and
add
testb
push
add
push
push
push
add
pop
pop
pop
add
pop
jmp
add
inc
add
dec
add
dec
add
push
add
pop
add
popa
push
popa
data16
aaa
ljmp
addr16
imul
outsb
outsb
xor
jno
fidivs
add
jge
shrl
cmpl
subl
jo
push
jns
add
jl
add
lea
mov
popf
fwait
stos
movsl
scas
mov
adc
outsb
mov
les
push
sub
rolb
into
xlat
loop
add
loopne
add
hlt
stc
add
push
push
test
ljmp
xchg
add
add
pushf
mov
xchg
add
mov
mov
mov
mov
mov
mov
xchg
test
xchg
lods
mov
fwait
lods
mov
imul
xchg
lods
mov
cltd
mov
mov
mov
push
mov
loop
pop
mov
sahf
mov
mov
inc
inc
sub
mov
add
mov
outsl
fstpt
es
lret
int
mov
mov
add
pushf
int3
mov
into
xchg
rorb
lds
lret
rolb
scas
into
mov
mov
push
test
aad
iret
fcmovnbe
fimull
rcr
add
sti
int
mov
mov
fadds
mov
fcoml
fiadds
mov
cs
negb
push
mov
filds
mov
cmpsl
loope
xlat
loope
fidivl
fsubp
mov
ljmp
outsb
mov
loope
in
fimull
mov
fldl
mov
mov
push
es
out
fucomi
add
lods
mov
push
mov
mov
out
mov
fwait
add
cli
pop
out
data16
int
repz
out
mov
hlt
add
mov
stc
call
push
mov
clc
push
jmp
in
std
fdivl
jle
icebp
push
mov
enter
dec
shlb
xlat
insb
fildl
ret
in
push
pop
fldt
in
out
out
lret
dec
jmp
call
out
in
cmc
add
jmp
add
jmp
into
in
ss
jmp
insl
mov
cs
int
shr
lds
push
idivb
push
push
rolb
out
decb
push
fildll
fwait
in
int
movlhps
out
shr
testl
cli
jbe
icebp
push
ret
hlt
sti
push
rcrl
push
push
vpmaddwd
hlt
int
lret
out
iret
lret
enter
repz
lret
stc
ds
aam
cli
add
rcl
mov
hlt
ds
push
inc
in
in
in
das
sub
ss
or
sbb
aas
xor
sar
outsb
push
xor
sub
cmp
xchg
cmp
pop
call
sbb
imul
sub
mov
sub
pop
andl
cmpsb
stos
std
decl
pop
cmp
shlb
add
scas
sbb
loopne
mov
cmp
xor
outsl
pop
cmp
testb
bound
jge
into
mov
fstps
add
in
xlat
jne
inc
pop
push
sbb
inc
dec
dec
mov
aas
aad
popa
and
les
and
das
rolb
dec
dec
inc
inc
test
mov
out
xchg
cld
ja
iret
loope
popa
add
movlps
push
sub
clts
pop
insb
mov
inc
xor
fdivp
fstpl
adc
sub
push
and
sub
sbb
push
shl
loope
pop
pop
dec
push
sbb
push
shl
out
fistpll
dec
sbb
lock
adc
roll
cmp
and
sbb
xchg
push
insb
out
aad
sbb
jle
jns
cld
pushf
aad
cld
ficompl
sbb
insb
fwait
mul
aas
add
pop
pop
in
lock
loope
and
sub
sub
adc
add
sbbl
imul
lahf
loopne
sbb
sbb
jmp
push
inc
inc
push
inc
inc
push
push
mov
repz
jg
lods
int3
popf
sbb
push
inc
bound
test
push
fs
fcmovu
int3
sbb
idiv
idiv
idiv
pop
or
sub
out
jmp
idivb
insb
lahf
cld
idiv
fidivrs
pop
dec
incb
cli
cli
sti
hlt
pusha
xor
idiv
les
add
scas
jmp
sbb
cmc
fdivr
filds
fdivrs
pop
cmp
push
mov
int
insb
xchg
lret
hlt
hlt
loop
or
in
aas
roll
test
loopne
out
out
xlat
sbb
fisttps
es
ret
or
and
mov
and
mov
call
test
fwait
test
incb
arpl
pop
mov
pusha
fdiv
loopne
iret
mov
in
mov
add
sarl
xor
and
repz
and
mov
jmp
jmp
aad
push
lock
or
inc
mov
mov
fcomp
shl
loope
imul
xor
jae
mov
pop
mov
mov
fsub
jmp
and
xor
icebp
hlt
xor
mov
mov
out
ret
loopne
lock
out
in
pop
mov
pop
mov
mov
fldt
icebp
lock
lods
scas
mov
in
out
loope
repnz
jecxz
shlb
pop
clc
repz
mov
mov
ljmp
xor
adc
aad
add
pop
roll
decl
es
inc
add
pop
add
sahf
adc
push
outsb
push
outsl
insl
xchg
add
call
sarb
iret
fcmovu
add
out
add
repnz
xor
out
jns
add
push
push
pusha
add
mov
sbb
cld
mov
cltd
cmpl
cltd
sbbb
mov
int3
ret
sbb
push
fst
cmp
push
out
loope
push
push
adc
push
push
outsl
movsb
andb
clc
push
pop
mov
add
add
sbb
fcmovne
scas
add
cli
out
rcrb
dec
pop
fisttpl
sbb
lret
mov
into
test
cld
aas
push
lcall
and
pop
fldenv
sbb
pop
lock
pop
xchg
andb
adc
scas
ss
sbb
pop
es
adc
pop
adc
sbbb
and
int
mov
scas
push
push
push
push
push
or
outsl
jg
jae
inc
xor
xor
imul
mov
adc
jb
sbb
jge
push
cmp
sub
data16
insl
fnstenv
ss
add
push
dec
adc
push
pop
idivb
mov
in
pop
add
add
add
insb
sahf
mov
jp
add
add
dec
mov
lock
nop
add
imul
mov
adc
push
mov
mov
addr16
incl
xor
jbe
add
push
insb
cmpsb
adc
push
add
cwtl
add
outsl
push
adcl
xchg
and
add
mov
add
mov
clc
aaa
add
mov
or
mov
popf
and
dec
inc
add
xor
xor
mov
adc
outsb
fstp
fistpll
add
add
xor
push
aaa
push
or
mov
cwtl
dec
aaa
out
push
fwait
jbe
mov
push
cmp
inc
mov
sbb
stc
mov
push
push
inc
popf
add
inc
lcall
sbb
push
sub
and
mov
mov
sub
sub
insl
xchg
add
dec
cltd
add
dec
push
cs
dec
sub
pushl
sub
push
sahf
add
pop
movsb
add
dec
mov
in
out
dec
push
das
push
mov
push
movsl
push
pop
pop
ss
push
xor
xor
cmpsb
add
pop
movsl
add
pop
xor
lods
add
pusha
stos
ds
cmp
cmp
test
cmp
jbe
gs
out
push
add
dec
dec
insb
cmpsl
add
mov
inc
imul
jge
inc
push
add
lahf
insl
mov
push
inc
outsb
mov
push
push
imul
dec
outsb
mov
inc
outsl
mov
jne
jno
push
mov
rol
jae
cmpsb
mov
ja
push
js
add
out
out
jp
jge
jl
add
jne
add
mov
mov
pop
push
pop
jle
add
add
iret
rclb
mov
outsb
mov
mov
push
push
cmpb
add
orl
enter
fadds
mov
lds
popa
xchg
push
mov
imul
xchg
jle
mov
into
pushfw
push
jge
iret
mov
jno
outsb
fbstp
push
je
rcrl
xlat
add
es
aad
jge
cmc
inc
outsb
faddl
jg
fstl
dec
aaa
xor
loopne
push
cwtl
int
movsb
jle
add
xchg
xchg
push
push
mov
lods
mov
das
sbb
push
mov
jecxz
mov
cmpsb
push
mov
mov
mov
inc
pop
mov
mov
mov
div
inc
into
cmpsb
test
call
movsl
ficoms
test
xchg
mov
data16
push
lcall
movsl
mov
insb
mov
loopne
scas
out
loope
push
mov
pusha
mov
loope
loop
lret
ds
mov
fildll
test
push
jmp
es
jo
pop
xor
jmp
rclb
mov
pop
and
xlat
repnz
mov
add
aam
rcl
mov
fsubrs
xchg
lock
call
fistps
arpl
jl
xchg
movsl
lcall
ljmp
mulb
pop
pop
pop
pop
outsl
mov
call
fcmovbe
mov
aas
test
mov
xorb
push
jns
cltd
test
ss
shl
incl
jmp
fcmovu
mov
pusha
pop
push
jae
push
mov
lds
sub
inc
call
repnz
stc
out
fnstcw
imul
jg
imul
ljmp
cmp
mov
out
xor
push
jns
cld
jnp
fstpt
dec
or
in
out
mov
out
xor
sbb
xchg
xchg
or
jb
push
cmp
pop
add
sbb
add
inc
cmpb
mov
push
incl
cmpsb
mov
aas
inc
repnz
out
xchg
inc
jns
jle
mov
fdivr
into
faddl
cld
out
cmp
jle
imul
xchg
xor
in
cmc
sbb
inc
andl
in
jle
add
int
out
pop
jo
jg
sub
cmpsb
movsl
add
adc
cs
pop
adcl
mov
add
out
shl
aad
stos
xchg
subl
test
fwait
lods
mov
call
fst
mov
cwtl
mov
push
dec
jg
mov
adc
inc
repz
cwtl
xchg
pop
sbb
iret
rcrl
push
dec
add
push
dec
dec
dec
dec
inc
jg
insl
int
cmp
inc
inc
pop
adc
push
sbb
sbb
psubsw
cld
not
lret
pop
inc
adc
adc
imul
pop
adc
add
add
mov
mov
pop
std
pop
push
adc
and
and
and
les
xor
pop
xchg
and
mov
xchg
fcompl
insl
fildl
popa
mov
and
add
cmpsb
pop
and
mov
push
sub
mov
fisubrl
and
std
idiv
std
or
pusha
movlps
sti
mov
mov
and
pop
idiv
add
mov
dec
std
cld
pusha
add
mov
std
sbb
mov
daa
pop
push
rcrl
testb
add
dec
mov
add
pop
add
jae
in
arpl
pop
pop
lret
out
pop
add
data16
mov
rcl
pop
cmp
fsub
add
div
rolb
lds
sbb
mov
roll
and
in
or
add
pop
rclb
push
pop
cld
aas
jg
push
dec
inc
inc
and
dec
and
push
add
push
adc
and
inc
or
pushl
and
or
add
sub
or
adc
mov
jmp
enter
or
nop
dec
dec
add
cmp
inc
inc
filds
adc
add
mov
adc
enter
and
add
and
push
adc
dec
inc
and
dec
sub
jle
inc
out
cmpsb
sbb
sbbb
nop
and
adc
cmp
faddl
cmp
sub
add
mov
incl
or
test
sbb
and
loop
loopne
mov
and
or
adc
orb
inc
inc
dec
lock
cmp
orb
add
jnp
and
adcb
inc
or
fcom
or
shlb
shrl
or
inc
pusha
and
jo
rorb
nop
orb
test
pop
dec
pop
sbb
or
or
fisubl
pop
mov
inc
loop
or
rorl
scas
push
add
cld
mov
lret
inc
cmp
adc
mov
dec
or
and
adc
inc
and
add
insl
push
mov
adc
adc
and
nop
add
mov
enter
sbb
cmpb
ret
add
test
ljmp
add
adc
decb
mov
and
test
das
mov
movsb
or
add
push
rolb
inc
inc
hlt
fimull
or
mov
sbb
dec
lock
or
cmp
jno
popf
or
enter
pop
push
inc
nop
and
repnz
add
clc
subb
and
adc
mulb
rcrb
nop
subb
lock
dec
pusha
addb
push
push
inc
pop
test
pop
and
pusha
imul
dec
or
call
lods
pop
rcrb
pusha
or
adc
dec
inc
int3
clc
cmpsb
out
or
test
dec
imul
cmpsb
push
sub
or
call
or
nop
and
es
and
ja
scas
or
or
adc
or
sub
sbb
adc
and
sub
or
sub
mov
and
inc
dec
adc
dec
add
nop
cmp
movsb
in
mov
or
je
nop
add
and
enter
fcomps
push
inc
inc
hlt
pusha
adc
inc
sbbb
test
xor
or
lcall
lods
sbb
loop
sub
jnp
roll
rcrb
or
xor
add
sub
test
mov
pop
mov
inc
jb
adc
and
pop
adc
mov
outsl
loopne
orb
xchg
sbb
or
push
inc
and
mov
or
test
enter
lods
enter
sub
add
push
movsb
or
add
and
ljmp
mov
mov
in
xor
in
test
shlb
sub
inc
nop
sbb
test
jle
enter
push
inc
pop
sub
enter
push
mov
push
and
test
and
sub
cmp
test
test
out
lcall
ljmp
adc
cmp
jl
mov
lcall
and
push
sbb
inc
insb
cmp
pushf
test
adc
cs
roll
add
iret
in
inc
out
fiadds
jmp
out
shlw
mov
std
push
std
fists
fucomp
stos
mov
cs
push
push
lret
out
inc
in
fcoml
dec
ja
fisttpll
out
in
std
pop
jle
dec
outsl
fdivr
mov
repnz
es
mov
out
jbe
out
push
into
pop
cmp
out
inc
xchg
fimuls
push
out
mov
xlat
in
jle
inc
pushl
ffree
lret
cmpsb
fnstcw
idivl
iret
out
pop
mov
scas
push
std
pop
jmp
mov
scas
fldenv
dec
fucomi
push
cs
in
push
xlat
mov
cs
dec
push
ds
negl
fisttps
cld
addr16
fnstsw
sbb
lret
xchg
sti
scas
outsb
sarl
out
out
aaa
pop
lcallw
std
xchg
inc
negl
es
aas
ja
shll
fistps
out
outsb
xchg
xchg
aas
xchg
sahf
cmpb
daa
sub
js
push
mov
fnstsw
mov
mov
or
int3
call
push
out
cmp
ss
push
into
ret
push
xchg
das
sbb
sub
out
loopne
scas
ds
aaa
cld
pop
filds
addl
decl
pop
jbe
out
popf
mov
xchg
in
push
mov
addr16
pushw
or
addr16
xlat
xor
push
into
aaa
out
jg
iret
jl
test
inc
fbld
into
pmaxsw
jmp
cmp
scas
iret
mov
out
into
inc
addr16
decl
fimuls
push
push
sbb
inc
outsb
fldt
jae
or
outsb
es
outsb
ja
xchg
mov
out
sysret
scas
sub
xor
std
iret
call
xor
jnp
push
filds
ss
mov
push
push
daa
jno
xorl
rol
bnd
cs
neg
inc
mov
out
notb
neg
jge
femms
dec
scas
push
ds
out
mov
into
ret
daa
fstl
push
je
addl
cmpsl
mov
push
out
addr16
mov
out
pop
push
jmp
xchg
push
push
ds
fdivs
leave
decl
mov
fldl
ja
push
or
nop
aam
js
or
cmp
clc
mov
cmp
fidivrs
js
fimuls
loope
aad
xor
adc
lcall
sbb
in
addl
in
cmp
sbb
inc
inc
or
mov
xchg
enter
push
cmp
push
mov
aaa
mov
push
add
add
jmp
or
mov
cmc
hlt
cmpsl
out
std
scas
int
and
jp
ret
xlat
push
andl
add
xchg
std
or
lahf
stc
aas
cwtl
ljmp
cwtl
cld
mov
cld
fnstcw
nop
cmp
int
pushl
into
xlat
mov
int3
outsb
dec
pop
ljmp
mov
adc
ja
jp
xchg
pop
mov
lcall
mov
mov
push
xchg
incl
adc
push
inc
inc
lods
mov
cwtl
adc
and
sbb
lea
inc
clc
call
sti
mov
mov
repz
out
cmp
incl
or
mov
sbb
cwtl
xchg
xorl
mov
push
addr16
aad
lcall
add
adc
mov
sbb
mov
mov
add
jmp
ljmp
xor
enter
mov
ja
stos
or
fisttpl
decl
sbbb
sarb
pop
push
pop
daa
cwtl
sbb
movsb
aas
lcall
dec
jno
sub
or
call
outsb
jecxz
sbb
outsb
sar
pop
or
push
xchg
dec
loope
imul
jl
cmp
andl
out
rclb
and
add
jl
mov
jnp
pushl
gs
mov
adc
mov
dec
ret
stos
mov
sub
addr16
lock
dec
mov
sub
sub
mov
cmp
or
adc
push
iret
push
cmp
lods
fwait
test
mov
xchg
sbbb
inc
jge
ds
cwtl
xlat
jmp
dec
test
dec
lods
xchg
xchg
std
shll
jo
idivb
icebp
jle
stc
push
sub
jb
fdivrp
cmp
and
rcll
sarl
out
stos
inc
cs
outsl
adc
insb
stos
ds
decl
push
push
xchg
mov
sbb
jle
pusha
cmpsl
sahf
lret
push
inc
pop
lcall
xor
jle
lea
mov
or
jno
cmp
lods
mov
loope
incl
lret
cmp
ljmp
imul
mov
dec
mov
sbb
lcall
pop
leave
fldenv
dec
outsl
lret
pop
outsb
decb
fs
mov
mov
or
leave
pop
jg
imul
and
subl
out
add
fiaddl
gs
sbb
loop
mov
fwait
cwtl
fsubl
jmp
les
sub
xor
stos
sub
push
xchg
cmpsl
sti
sub
loopne
adc
mov
mov
lcall
pop
mov
add
scas
and
stos
lret
movsl
add
sbb
ss
ds
movsb
mov
jbe
lock
or
xchg
push
subb
mov
les
adc
sub
jmp
jo
mov
push
xchg
mov
fisubl
mov
popa
leave
pop
bound
int3
mov
inc
push
rclb
adc
mov
out
ret
mov
ss
and
nop
push
adc
mov
xchg
popf
and
mov
outsb
lret
in
fwait
mov
mov
xor
dec
pusha
ret
cmp
andl
adcl
dec
add
push
test
bound
xchg
add
nop
adcb
cld
insl
add
pusha
lcall
subl
xchg
insb
and
add
out
or
inc
dec
sub
js
addb
mov
out
aam
adc
adc
adc
sub
mov
imul
inc
jbe
add
test
mov
adc
inc
movsb
dec
aam
xchg
mov
aam
lahf
push
inc
xchg
lods
lea
cmp
mov
adc
and
notb
int
call
test
push
adc
adc
jo
push
andb
adc
mov
insl
pusha
and
sbb
inc
adc
mov
mov
or
and
int3
xor
loopne
adc
cmpsb
sub
cmp
lods
gs
pop
pop
push
fidivrl
adc
push
cmp
mov
mov
sbb
dec
xorb
mov
movsb
xor
or
and
dec
inc
cwtl
cmp
or
push
mov
adc
inc
mov
or
dec
loop
push
mov
push
lcall
pusha
adc
mov
mov
stos
sub
cmp
push
andl
and
or
dec
insb
into
add
pop
sbb
push
pop
cs
in
pusha
and
jp
cli
hlt
call
and
outsb
scas
and
fidivs
lods
sub
cs
adc
cli
movsb
mov
in
sbb
mov
xor
loope
lret
mov
add
xor
mov
cmp
adc
mov
sub
or
xor
orb
and
or
inc
inc
dec
sbb
sub
dec
popa
mov
subb
adc
fwait
add
data16
and
inc
mov
gs
jbe
pop
inc
outsl
push
in
in
mov
jb
and
cmp
and
push
ds
sub
or
and
xor
jl
add
mov
loopne
and
mov
addb
js
mov
test
mov
les
add
dec
mulb
sub
ss
stos
mov
push
mov
adc
xor
and
add
mov
sbb
pop
and
gs
lret
or
sbb
into
and
loop
js
cmp
mov
jl
jns
js
mov
mov
in
enter
inc
pop
scas
sub
xchg
xchg
int3
int3
or
cmp
rolb
mov
xlat
add
mov
add
xor
imulb
mov
xor
cmp
ss
and
xchg
mov
lods
inc
mov
pusha
cmpb
enter
bound
xor
cwtl
cs
popa
out
push
addr16
cmp
int3
int3
sub
mov
aam
inc
jbe
mov
add
mov
push
mulb
jbe
mov
imulb
nop
into
xor
xlat
push
or
fs
jo
push
mov
loopne
xchg
add
add
loop
ret
lret
pusha
dec
outsb
orl
add
cs
pop
clc
cmp
jbe
add
scas
les
xor
jo
push
or
and
pop
adc
sahf
mov
mov
push
adcb
add
pop
or
daa
rclb
xor
jo
aam
dec
pusha
mov
pop
xchg
pop
test
ficoms
xor
xchg
es
mov
push
add
iret
ret
shl
loopne
adc
adc
popl
inc
inc
adc
bound
int3
mov
sbb
xchg
shl
cs
cmpsb
mov
stos
jo
into
inc
push
pop
shll
mov
test
add
add
inc
andb
and
hlt
jp
xor
mov
cmp
adc
rolb
andb
add
pop
inc
or
mov
pop
cmp
dec
stos
sbb
sbb
orb
add
dec
dec
divb
adc
xchg
outsb
call
adc
and
mov
test
add
mov
fcoml
mov
inc
push
movb
xor
or
lcall
test
sub
outsb
inc
fmuls
cli
inc
addl
aam
test
cmp
mov
jg
sub
dec
sub
mov
add
cs
mov
sub
insb
roll
sarb
insb
cltd
movl
xor
or
sbb
cmpsb
imul
mov
jne
sub
mov
pushf
inc
dec
inc
test
adc
rclb
sbb
lret
repnz
cmp
and
addb
add
mov
jl
and
push
or
xchg
popf
dec
mov
dec
xchg
or
imul
lcall
fwait
mov
bound
push
mov
sub
jp
sub
adc
dec
cwtl
xor
jo
lcall
pop
out
and
loopne
add
fs
add
add
jo
dec
inc
xor
xor
jecxz
jo
mov
cs
cltd
cmpsb
adc
xorb
shlb
add
pop
movsb
ret
lcall
sbb
es
add
sub
data16
cwtl
mov
test
in
sub
add
push
dec
adc
insb
xor
adc
mov
test
jp
adc
int
stos
scas
sub
pushw
dec
push
bound
add
add
out
adc
and
scas
adc
xchg
sub
fmul
pop
aam
lods
enter
lock
icebp
pop
shlb
push
pop
or
out
popa
push
push
or
cmp
ret
cs
addl
inc
add
enter
test
mov
aam
cwtl
out
pushf
or
cmp
add
lcall
add
push
sbb
mov
mov
or
int3
lods
xorb
out
push
popa
addb
test
in
push
lcall
shl
xor
cwtl
ret
lcall
inc
mov
data16
push
add
push
pop
test
xchg
or
push
sub
adc
jle
fldcw
mov
fcoms
dec
mov
sbb
adc
and
gs
and
sub
sbb
push
xorb
sub
mov
call
sbb
ret
test
add
cwtl
mov
je
pop
xchg
adc
sbb
and
test
call
inc
dec
ljmp
test
push
cwtl
movsb
call
scas
push
inc
sbb
sub
bound
mov
mov
cli
or
sbb
sbb
dec
sbb
jb
andb
nop
jbe
loope
jno
jle
data16
test
or
in
ret
cltd
in
xchg
pop
std
and
adc
sbb
loop
add
fs
enter
ljmp
adcl
ret
mov
sub
push
and
imul
into
inc
mov
mov
es
pop
ret
loope
add
adc
cmp
adc
sbb
mov
lods
cmpsb
lcall
outsb
add
pushf
sbb
movsb
push
out
cmp
push
es
and
fmuls
je
loope
js
es
inc
mov
movsl
dec
xor
data16
inc
lret
or
mov
gs
push
xor
push
ljmp
push
push
lea
test
rorl
loopne
add
sbb
pop
push
cmpb
sub
adc
pushf
xchg
push
sub
push
fmuls
lret
je
test
dec
sbb
jmp
pop
bound
movsb
ljmp
sub
into
adc
cmp
dec
mov
adcb
daa
daa
and
in
shlb
popa
in
lcall
pop
test
mov
and
mov
jbe
mov
dec
or
sub
cmp
add
jo
push
pop
das
jae
les
into
add
or
out
lret
push
ret
jle
mov
adc
daa
cmp
mov
dec
mov
fiaddl
es
into
sahf
sbb
xor
or
sahf
inc
add
out
and
or
or
bound
inc
and
cs
mov
or
xchg
sbb
inc
add
add
or
or
push
or
gs
xchg
xor
xchg
popf
ret
and
ljmp
loopne
stos
pop
cmp
add
pop
repnz
repnz
pop
fsubrs
data16
call
ljmp
push
adc
popa
and
dec
andb
jmp
sub
stos
and
mov
icebp
cmc
rol
cmp
or
add
aam
icebp
xchg
inc
bound
add
mov
xor
jnp
dec
int3
es
pushf
fisubs
push
push
aam
cltd
pusha
xor
hlt
clc
test
or
push
xchg
scas
mov
mov
push
and
cmp
push
mov
test
adc
xor
inc
adc
dec
lcall
mov
adc
jl
add
mov
cmp
sbb
fsubrp
repnz
shlb
rorb
in
sbb
push
test
xchg
jl
inc
fimuls
sub
loopne
loop
add
mov
ror
xchg
add
push
xchg
test
dec
adc
add
sub
clc
xor
test
aad
leave
xor
test
rorb
dec
cmp
inc
push
rorb
rolb
icebp
mov
cmp
mov
mov
jp
lcall
mov
xor
rolb
add
insb
lret
inc
decb
inc
lret
clc
pop
inc
adc
push
sbb
ret
adc
loopne
add
ljmp
add
sahf
push
mov
fldcw
adc
sub
and
lret
shlb
add
jmp
arpl
inc
gs
arpl
popa
imul
push
gs
gs
inc
gs
mov
decb
fs
gs
inc
or
inc
js
je
jb
arpl
dec
gs
jo
imul
jae
inc
js
call
outsb
divb
outsb
xor
jns
insb
outsl
bound
inc
jb
mov
push
sub
addr16
jns
lahf
insb
inc
arpl
push
adc
push
arpl
add
push
jp
std
ja
outsb
insl
outsb
popa
jae
push
je
push
outsb
ja
fs
sbb
dec
popa
je
push
push
je
ret
popa
adc
das
jmp
jo
outsb
outsw
inc
inc
jne
outsb
jno
fsts
fcoms
mov
addr16
cmp
push
imul
jb
dec
sbb
push
push
sbb
add
or
cld
test
loopne
sbb
fs
gs
jnp
daa
dec
sub
cmpsl
mov
addr16
push
imul
repz
std
dec
outsl
mov
imul
sarb
inc
fs
add
xchg
jae
and
fistpl
mov
sahf
sbb
insl
insl
test
xor
dec
mov
imul
outsl
mov
jns
stos
jns
adc
icebp
cmp
scas
dec
pop
or
inc
cmpsl
out
cs
ljmp
outsl
dec
inc
dec
jo
push
lea
insb
push
int
push
sbb
mov
and
ja
dec
inc
jae
adc
inc
jae
push
mov
push
sbb
mov
push
loop
jns
sbb
pop
inc
pop
sub
mov
or
arpl
push
pop
jae
ds
sub
inc
adc
notl
push
repnz
dec
inc
dec
pushf
jo
js
rcll
fs
push
sti
xor
push
dec
leave
lods
sbb
pop
and
mov
inc
xlat
mov
cmp
adc
cmp
popa
jbe
push
andb
in
sbb
cli
stos
loop
loop
and
inc
addr16
pop
adc
pop
xor
fmull
ret
inc
inc
dec
and
pop
stos
mov
repz
jns
ljmp
imul
ss
adc
xchg
flds
mov
jbe
add
mov
push
push
sahf
xor
cli
inc
jb
jae
cmp
push
push
scas
ljmp
js
insb
pop
test
fidivl
out
icebp
push
adc
cmpsb
cs
push
push
xor
jno
sub
cmp
shrw
es
jo
imul
inc
insb
out
int
dec
bound
mov
pushf
je
outsl
mov
add
imulb
and
adc
or
mov
mov
jo
movsl
dec
shlb
aaa
push
inc
arpl
add
test
shrl
cmp
dec
cmp
jbe
popf
add
rcrb
lods
xor
push
dec
addr16
imul
scas
push
push
sahf
or
jae
out
jle,pt
insb
popa
jns
out
fs
add
push
dec
inc
mov
push
sti
dec
inc
pop
dec
add
loopne
cvtpi2ps
push
add
or
in
xchg
cld
sub
and
add
or
add
jns
adc
and
pop
jnp
xor
push
adc
adc
inc
insb
xchg
jbe
xor
mov
mov
add
je
test
push
xor
jb
mov
je
push
add
push
pop
add
inc
jo,pn
std
or
jnp
leave
or
mov
out
jno
sbb
pop
and
in
ljmp
int3
pusha
fcomps
cmp
fbstp
notl
lahf
ja
lret
xchg
in
inc
and
int3
sarb
out
rorb
mov
cmpsb
nop
dec
push
dec
flds
jo
out
cld
dec
dec
push
out
sahf
out
or
pop
pop
fdivl
dec
addr16
cli
lcall
adc
adc
xchg
jl
add
es
xchg
and
js
movb
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
rolb
add
adc
add
push
pop
add
add
and
or
add
add
addb
orb
add
test
add
rolb
add
clc
add
addb
add
and
add
dec
add
addb
add
add
cwtl
add
addb
add
rolb
addb
add
call
add
add
add
cmp
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
cmp
add
sub
cmp
add
push
add
xor
add
js
add
mov
add
add
add
xor
add
lock
xor
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
or
add
xor
add
pop
push
add
addb
sub
add
test
add
add
add
or
add
add
nop
mov
add
add
add
add
add
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
sub
add
mov
add
or
add
roll
add
add
add
add
add
aad
add
or
add
or
add
add
add
add
call
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
call
add
add
add
add
add
pop
add
add
or
add
add
loopne
add
mov
add
or
add
or
mov
add
or
add
add
add
or
call
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
pop
add
call
add
add
add
add
add
test
add
call
add
add
add
add
add
nop
sub
call
add
add
add
add
ss
mov
add
or
add
cmp
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
mov
add
or
add
add
add
call
add
add
add
add
add
loopne
add
call
add
add
add
add
pop
add
call
add
add
add
add
data16
mov
add
or
add
add
add
mov
add
or
add
add
add
mov
add
or
add
push
add
dec
imul
or
add
add
add
add
add
add
xor
add
or
add
add
add
add
add
add
sbb
add
or
add
addb
or
add
add
add
add
add
push
add
mov
add
add
add
call
add
add
add
add
pop
add
xchg
testl
add
add
jo
add
sub
add
add
add
or
add
add
inc
fwait
add
repnz
add
add
add
add
add
add
add
add
or
add
lahf
add
dec
pop
add
jo
add
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
and
push
add
add
imul
inc
add
jne
je
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
add
popa
add
add
and
inc
add
jb
outsb
add
outsl
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jns
popa
add
and
pop
add
add
and
push
add
imul
and
push
add
popa
add
and
xor
cmp
cmp
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
jns
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
add
add
outsl
add
jns
and
push
add
popa
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
sti
add
hlt
cli
add
inc
sti
add
adc
add
push
sti
add
sbb
add
pop
sti
add
and
add
imul
add
jne
add
xor
add
jle
add
mov
add
pushf
sti
add
lods
sti
add
mov
sti
add
add
add
sti
add
add
add
in
add
add
add
cli
sti
add
add
add
add
add
add
add
sbb
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
gs
outsl
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
popa
jns
outsl
jne
fs
