xchg
mov
in
sub
decl
pushl
lea
push
lea
push
or
add
lea
sti
push
push
push
push
push
call
neg
dec
add
xlat
dec
jmp
mov
add
leave
ret
push
xor
cmp
push
xor
push
push
push
dec
lock
mov
das
and
notl
sbb
push
push
push
and
inc
push
push
push
clc
dec
inc
insl
push
dec
sub
loopne
sti
pusha
fists
mov
xor
sub
popa
push
insb
push
push
xor
fs
in
outsl
fildll
sti
push
call
inc
and
popf
jo
jo
sub
pop
loopne
and
xor
push
daa
mov
sbb
dec
mov
mov
rsqrtps
std
jl
jge
pusha
int
push
icebp
dec
jb
sub
xor
jae
cld
add
call
imul
pop
clc
fnstcw
mov
imul
in
mov
push
xor
adc
dec
imul
add
push
cld
push
loopne
imul
mov
jl,pn
pop
clc
jne
outsb
inc
bound
rclb
inc
gs
jl
cmp
or
add
daa
add
sbb
not
sbb
jbe
sti
shr
fimull
cmp
add
test
out
subl
cwtl
jno
or
jg
test
add
in
ss
dec
push
sub
sbb
sbb
cmp
mov
pop
dec
adc
inc
fcomp
icebp
loopne
push
and
inc
inc
inc
call
popa
inc
scas
cmp
lock
test
push
shr
mov
add
in
call
jmp
mov
jbe
sub
sub
jns
insb
xor
cmovle
xor
cmp
dec
and
push
pop
inc
loopne
call
call
sub
dec
not
inc
or
into
idiv
pushl
or
aad
imul
not
dec
jmp
ljmp
rorb
shrl
lock
push
jmp
push
push
dec
pop
dec
add
loope
inc
push
cmp
sub
fcmovnu
ret
jo
aam
aad
mov
hlt
mov
or
mov
call
push
xor
outsb
adc
fidivl
into
push
inc
test
popl
in
fisttpl
cmpsl
sbb
in
ss
inc
outsl
inc
add
jns
stc
lcall
cmp
push
push
xor
ja
xchg
in
xor
jg
iret
dec
cmp
insb
call
ret
neg
dec
push
clc
or
rorl
sbb
inc
dec
add
push
sub
in
psadbw
sti
add
hlt
push
outsb
or
popa
icebp
icebp
xchg
jae
inc
pusha
push
mov
cmp
adc
call
or
clc
sub
pusha
fwait
outsb
jge
loopne
dec
cmp
dec
jns
js
add
imul
cmp
push
jo
outsl
push
aaa
push
ja
xchg
inc
jbe
fiaddl
roll
push
mov
push
xor
jae
mov
clc
mov
sti
incl
and
pushl
dec
adc
lcall
cmp
cmpsl
mov
add
in
lcall
call
dec
sub
movsl
add
test
neg
jmp
add
mov
bound
push
push
sbb
jl
dec
push
add
hlt
or
jo
push
adc
dec
pcmpeqd
cmp
hlt
or
not
lods
neg
dec
xor
ja
push
mov
add
adc
push
rcrb
icebp
sub
inc
or
inc
mov
xchg
pop
dec
gs
push
jns
ret
sbb
jbe
lahf
sub
dec
pop
inc
pusha
pop
xchg
aaa
and
push
cld
add
jg
jge
dec
js
dec
mov
xor
add
inc
js
jae
mov
repz
fs
daa
rorb
mov
stos
jecxz
push
add
xor
adc
sub
xchg
es
roll
sarb
arpl
dec
or
dec
cmp
xchg
out
movsb
rol
je
jo
stos
in
mov
insb
out
sbb
popa
aad
daa
push
pop
mov
test
inc
fadd
jp
sub
jp
bound
pop
es
mov
or
ds
decl
aam
inc
int3
push
dec
add
mov
push
dec
inc
and
pop
mov
cmp
pop
push
push
aad
rcll
jb
loope
add
mov
pop
mov
mov
dec
jns
mov
or
inc
call
dec
fstp
int3
sbb
lock
jns
push
flds
arpl
pusha
jae
xor
cld
cmp
rol
jae
jno
sub
call
test
lahf
inc
inc
daa
lock
sub
arpl
push
es
mov
xchg
jnp
sbb
push
xor
stc
les
sub
rclb
dec
jae
stos
loopne
popa
inc
inc
jns
pop
out
push
iret
jns
pop
ret
push
push
mulb
add
sub
inc
dec
js
adc
add
mov
imul
repz
bound
and
insb
adcl
out
in
xor
push
dec
ss
nop
fcomi
lods
add
dec
xor
push
out
ja
ficomps
dec
adc
mov
push
add
mov
test
sub
popa
adc
inc
xor
lcall
call
inc
sub
fimuls
test
xchg
pop
mov
add
pop
ret
cli
subl
push
push
push
lock
dec
mov
add
dec
xor
test
dec
xor
outsb
mov
jmp
insl
sub
aam
jbe
ja
sub
shl
and
adc
sub
adc
xor
test
dec
inc
dec
movl
aad
js
or
neg
incl
lods
mov
stos
ret
inc
adc
inc
xor
clc
dec
adc
mov
jmp
rolb
push
inc
jmp
or
and
ret
cmp
push
lods
dec
test
xor
xchg
fdivrs
inc
inc
aaa
pop
dec
gs
adc
jmp
bound
shrl
sbb
jbe
jmp
mov
xchg
inc
push
in
lock
loop
mov
cmp
je
lods
jg
fistpll
inc
call
arpl
hlt
ja
mov
cmp
xor
ds
shrb
push
xor
pop
movsb
push
xchg
xor
bound
pop
shll
loopne
sti
jge
test
cmp
or
test
mov
cmp
addr16
js
imul
dec
mov
mov
sub
add
testl
sbb
add
inc
push
add
or
jne
fldl
mov
pop
imul
ret
jae
mov
xor
aad
dec
call
and
aas
sbb
dec
push
repnz
lods
mov
mov
je
lcall
mov
out
insb
sub
inc
push
push
mov
or
dec
popf
scas
in
es
push
xchg
xchg
and
mov
call
outsb
ja
nop
push
jae
push
xor
mov
and
cmp
hlt
lods
out
rcll
fsubr
cmp
clc
call
scas
push
pop
push
arpl
or
in
aas
xor
push
jae
mov
jno
lods
test
test
sub
loope
ficoml
sbb
mov
jmp
dec
mov
xor
sbb
mov
imul
fadds
mov
les
pminub
and
in
outsb
mov
or
push
ja
xor
testl
stc
and
jle
sub
mov
sbb
data16
cs
scas
push
inc
fldcw
shll
daa
and
lods
sarl
cmp
and
jmp
es
bound
cmc
scas
fldt
jns
xor
push
dec
arpl
mov
bound
stc
das
cltd
test
xchg
lock
sbb
xchg
cmp
xor
add
js
mov
jo
aam
mulb
xor
jo
mov
pop
sbb
fpatan
push
mov
ja
or
dec
cmp
addb
imul
mov
clc
fs
inc
outsl
inc
inc
out
outsb
andl
push
mov
inc
addr16
outsl
dec
rcl
cmp
push
ja
insl
outsb
adc
mov
imulb
push
outsl
mov
bound
pop
cli
jl
pop
jg
hlt
xchg
loopne
rorb
pop
xor
dec
push
sbb
cld
inc
add
push
pop
adc
add
add
mov
adc
mov
jp
jo
push
push
jns
das
dec
sahf
add
fisttps
je
push
add
lods
mov
xchg
jbe
jmp
add
fimull
sub
jbe
out
jmp
lds
cmp
cmpsw
scas
or
xorb
stos
adc
pop
rcrb
pop
sub
jo
insl
movsl
bts
stc
fsts
pop
sub
jno
icebp
push
in
nop
aaa
jno
aad
in
jb
cmp
or
cmp
inc
insb
sbb
mov
cmp
call
ljmp
dec
pop
jns
addb
sub
xor
or
mov
jl
push
cwtl
popf
clc
imul
or
iret
xchg
jmp
sbb
int
in
or
outsb
pop
pop
andb
outsb
jne
jo
jecxz
inc
dec
inc
pop
call
mov
inc
rcl
sbb
jmp
les
pop
sub
xchg
negb
jg
jnp
xor
outsl
lret
push
xlat
scas
add
and
insb
ja
js
dec
add
push
rcr
testl
cld
cmpl
jns
dec
adc
dec
xor
sub
ja
or
or
xchg
push
imul
dec
jo
and
inc
ja
jno
xchg
push
dec
jb
mov
sahf
hlt
jecxz
lods
or
add
xchg
xor
rolb
icebp
aad
dec
rcr
mov
loopne
imul
cmp
sub
inc
daa
loope
pop
xchg
insl
cld
in
mov
cmp
ds
ljmp
repnz
rclb
sti
xchg
out
outsl
push
adc
jmp
push
ficomps
sbb
fisubs
mov
pop
xchg
movsl
pop
cmp
cld
out
cmp
inc
sbb
xchg
rolb
xchg
mov
xchg
add
out
dec
sbb
fdivrp
mov
cmp
add
or
xor
xchg
mov
into
pushl
sbb
out
xchg
inc
clc
xchg
add
adc
push
jnp
neg
adc
gs
sub
sbb
add
fistpll
insl
mov
xchg
dec
xchg
xchg
jle
dec
xchg
gs
push
arpl
lds
jb
cltd
xchg
pop
ficoml
push
ljmp
mov
outsl
outsl
xor
lds
orb
inc
xchg
sbb
mov
out
lret
ds
sbb
pop
in
adc
or
ljmp
xchg
shlb
jl
loopne
jno
or
cld
mov
pop
mov
dec
pop
jbe
xchg
xchg
insb
xchg
mov
sarl
xchg
add
xor
jnp
pop
and
mov
or
fwait
and
cli
xchg
xchg
jl
aam
les
test
inc
mov
mov
sbb
out
or
push
add
pop
mov
push
jnp
call
xchg
dec
lods
mov
jnp
out
xchg
jns
inc
out
jmp
insb
fwait
div
pushl
mov
je
xchg
pusha
loopne
adcl
shlb
jg
outsb
fisubs
les
adc
outsl
push
xchg
mov
movsl
insl
cmp
decl
or
xchg
inc
xchg
jmp
popa
hlt
mov
adc
xchg
inc
out
sbb
fcmovnu
pop
fcoms
test
or
or
jle
sbb
rolb
inc
xchg
cmp
pop
movsl
fmull
push
mov
pop
and
mov
xchg
fucom
push
leave
mov
cmc
dec
leave
xchg
frstor
insl
push
mov
sub
adc
and
and
fwait
jnp
lcall
enter
lock
je
es
pop
jb
cmp
xchg
outsl
add
xor
cld
cld
jbe
or
jecxz
into
jae
xchg
out
iret
xlat
cmp
jbe
mov
xor
dec
call
xorl
fsubrp
mov
or
and
mov
icebp
jo
pop
sbb
jecxz
ret
add
lods
push
mov
xchg
push
ja
test
sub
and
out
into
push
or
fmuls
push
pop
fisubs
ljmp
dec
inc
cltd
int
xchg
js
jno
inc
clc
xor
insl
add
add
xchg
sbb
dec
jo
adc
mov
add
inc
jp
xchg
ret
xchg
or
mov
cmp
xchg
cli
mov
adcl
mov
scas
lahf
inc
aam
pop
lret
fsub
add
push
cmc
outsl
and
lret
das
dec
ret
add
fdivs
rep
stc
push
lods
test
cwtl
rcll
xor
int
pushf
arpl
daa
out
ret
hlt
mov
mov
xchg
jns
lret
mov
mov
sbb
push
popa
mov
std
sbb
mov
fwait
or
movsb
lea
mov
pop
xlat
mov
mov
mov
jg
es
jecxz
pop
ror
xchg
push
sub
xchg
jne
mov
adc
inc
jb
call
xchg
fbstp
fistpl
push
push
ret
bnd
mov
stos
add
loope
xchg
jae
add
ficompl
fldl
inc
or
jp,pn
fwait
jmp
incb
ror
movsb
ljmp
cs
adc
xchg
and
in
aaa
mov
lea
mov
add
mov
pop
je
mov
sub
fnstsw
lock
in
mov
add
leave
les
dec
xor
cmc
not
std
imul
inc
rorl
add
sub
loope
mov
xchg
push
ljmp
pushf
sbb
sbb
lds
mov
cwtl
or
push
add
or
xchg
cwtl
dec
xchg
in
out
bound
mov
ljmp
inc
outsl
iret
pop
xchg
fwait
jle
and
bound
add
mov
xor
sbb
int3
inc
dec
inc
xchg
cld
outsl
pop
lret
cmp
xchg
int
cmp
mov
out
fcompl
xor
fildll
xor
popf
cmp
mov
push
pop
sbb
enter
xchg
fstp
in
cmpsl
mov
xchg
test
mov
insb
push
sbb
xchg
leave
out
scas
xchg
lcall
adc
mov
leave
adc
ljmp
std
adc
insl
xchg
mov
icebp
mov
push
dec
pop
sbb
test
nop
sahf
ss
fnstenv
mov
push
dec
sub
sub
sti
imulb
adcl
jnp
push
lods
les
push
arpl
or
lods
cmpl
xchg
push
test
mov
pop
clc
or
and
or
aam
or
add
or
jne
inc
dec
jecxz
mov
and
je
lret
cld
movsl
xchg
scas
push
push
sub
imul
and
sbb
aaa
pop
jo
or
mov
inc
or
test
fsubrs
inc
push
adcl
xor
add
or
lock
aaa
cmp
adc
xchg
fisubs
pop
push
pop
ljmp
outsb
inc
lock
shrb
push
pop
ja
int
adc
das
std
das
mov
dec
in
hlt
test
ffree
and
inc
bnd
shlb
xor
add
inc
sbb
outsl
outsl
rcr
or
mov
push
pop
call
pop
js
jg
sub
lret
les
pop
and
mov
repz
adc
stos
cwtl
roll
and
cmp
lods
add
movsb
pop
mov
fwait
sbb
mov
sbb
jl
mov
cwtl
cmp
add
inc
lods
cmp
dec
jne
add
inc
ljmp
xchg
fwait
xchg
aad
sti
push
cs
jecxz
jl
das
push
es
fwait
xchg
popf
mov
jb
fs
testl
gs
outsb
les
out
je
out
das
sub
or
cmp
add
xchg
mov
sub
jp
push
stos
mov
ss
es
stc
mov
repnz
decl
dec
pop
int3
lods
add
mov
pusha
enter
sahf
pop
or
adc
lods
cld
xchg
jne
mov
mov
xlat
mov
mov
lea
jo
les
movsl
enter
loope
dec
xchg
cmp
mov
mov
shll
inc
mov
inc
out
sbb
maskmovq
dec
outsb
push
mov
pop
pop
fs
xorb
sti
or
xchg
aam
jecxz
jecxz
insl
mov
test
or
and
jae
jl
xchg
sbb
adc
mov
pop
outsl
fstpt
jecxz
fadds
push
push
mulb
xor
jmp
fistl
add
sub
lea
jb
notb
aad
gs
mov
xlat
xor
fdivr
push
xchg
mov
sub
xchg
sti
cltd
jle
pop
mov
mov
cmpsl
sarl
es
mov
inc
rcr
test
das
outsl
repnz
and
mov
test
mov
xorb
cwtl
out
roll
mov
and
push
shl
mov
mov
mov
fwait
jecxz,pt
sbbl
lods
xor
sub
jae
cmpsl
mov
ds
jne
pop
pushl
jbe
push
cmp
sub
cmp
clc
pop
xchg
adc
cli
mov
nop
dec
movsb
push
mov
pop
icebp
or
push
xor
jg
fcmovnu
aam
aas
inc
addr16
in
test
or
mov
jmp
inc
mov
sbb
aas
call
pop
icebp
mov
repz
notb
mov
mov
lcall
out
mov
push
mov
mov
movsl
push
test
into
clc
popf
cmp
lods
fimuls
insl
std
push
push
mov
and
sbb
jp
cli
or
pop
fiadds
inc
xor
sbb
jmp
ret
mov
pop
lods
fxch
sbb
outsl
pop
cmp
mov
adc
dec
jecxz
dec
xchg
push
xor
ss
cmpsb
aaa
pop
sub
inc
dec
outsl
adc
push
repz
leave
push
loopne
stos
cld
iret
nop
test
push
jns
cmc
call
or
insb
addl
sub
add
call
pmaxub
or
ret
xor
adc
xlat
mov
dec
outsb
push
stos
popa
push
sub
subl
or
mov
push
lret
fstpt
sbb
jmp
mov
mov
dec
jmp
test
outsl
les
mov
scas
mov
imul
inc
pusha
fsubp
push
pop
mov
pop
gs
pmulhuw
inc
test
in
lods
sub
rolb
xchg
pusha
ja
cmp
sub
mov
inc
test
rcr
pop
dec
mov
stc
push
xchg
sbb
sub
mov
jae
mov
mov
gs
inc
outsl
xchg
pop
ffreep
fstpt
and
cli
pop
aad
rorb
pop
push
loope
mov
movsb
loop
subl
addb
sub
mov
in
mov
mov
pop
pop
out
pop
in
jnp
imul
mov
rcrl
outsl
sbb
sahf
aaa
popf
scas
xor
mov
clc
fucomip
push
pushf
or
jb
leave
mov
stos
cmp
add
or
gs
xor
ss
popa
sarb
adcb
enter
xchg
sbb
sub
lahf
call
xchg
cmpsb
push
jbe
jge
mov
hlt
aam
jbe
adc
cmc
negb
iret
inc
add
xorb
inc
jno
sub
sub
adc
push
mov
push
stc
adc
mov
mov
sub
lock
xchg
add
out
sbb
or
pop
adc
add
test
pop
jmp
fmull
pusha
and
jmp
sbb
cwtl
lods
subb
cmpb
push
popa
xor
shrb
cmc
iret
shlb
or
and
pop
mov
cmp
xor
xchg
pushl
xchg
xor
ljmp
or
addr16
sbb
pop
outsl
shl
lcall
push
gs
add
loope
and
mov
cli
andb
dec
pmaxub
inc
xchg
add
test
inc
adc
pop
pushl
icebp
pop
mov
cwtl
cmpsl
inc
mov
sub
sbb
leave
cmpsl
mov
loopne
sub
mov
pop
jp
mov
push
add
mov
push
pop
mov
push
movsb
and
movsl
jmp
mov
pop
adc
xchg
aas
pushf
loope
fdivrs
push
push
xlat
aam
test
lret
fdivr
jle
ret
sti
push
cld
fdivl
inc
and
xor
sub
jecxz
jmp
outsl
aas
out
add
int3
add
inc
aaa
jbe
out
pusha
push
movsb
dec
aaa
xor
push
mov
fisubrs
loopne
mov
lods
cld
test
pop
es
ljmp
mov
jbe
lea
mov
inc
inc
mov
ss
inc
cltd
or
pop
push
cmpsb
iret
adc
and
dec
dec
test
adc
mov
test
cmp
mov
push
imul
movl
inc
fistpl
sbb
adc
push
xlat
fistpl
mov
aaa
andl
pusha
push
aaa
clc
testb
insb
and
dec
xchg
push
inc
xchg
push
je
loope
mov
arpl
adc
pop
jb
inc
lock
cmp
or
ret
sbb
pop
out
or
mov
out
and
clc
aas
push
mov
loope
or
add
stos
push
adc
rorl
loopne
add
pop
adc
push
mov
and
push
outsl
push
mov
je
loopne
loopne
fs
push
sub
in
pop
mov
pop
mov
mov
jle
stc
aas
lcall
mov
pop
push
movsl
js
insl
mov
dec
vmwrite
clc
mov
mov
nop
hlt
popa
pop
shr
jo
sbbl
dec
adc
nop
push
and
push
andl
add
or
sub
shr
mov
cli
out
jmp
insb
pop
mov
test
scas
in
mov
bound
loopne
sti
movsl
push
ss
adc
icebp
xchg
mov
pshufw
cmpl
negb
sub
popa
lods
pop
sbb
loope
rcll
sbb
sbb
xor
dec
jle
adc
sarb
fstpt
adc
std
loopne
gs
std
inc
sub
jp
call
push
in
sub
std
xchg
lock
xchg
jae
in
cmp
xor
imul
sub
pop
push
enter
jle
inc
sub
fcoms
cmp
ret
sbb
add
jbe
xchg
popl
ret
aas
xor
mov
sbb
movb
call
fistl
push
leave
mov
enter
jge
jbe
mov
mov
pusha
icebp
jg
stc
pushf
sub
jo
adcl
cmp
fstpt
cs
fsubs
dec
add
ljmp
sbb
mov
imul
sysexit
shl
mov
fs
jne
bound
and
add
cs
push
repnz
adc
adc
push
fldl
lret
sub
orl
inc
cmp
adc
mov
mov
xchg
inc
movl
outsb
push
inc
sti
pop
in
outsl
je
jle
sti
pop
je
sahf
les
out
aaa
pop
mov
jo
jle
or
jns
inc
jmp
rolb
pusha
mov
je
dec
shr
add
inc
lods
int
js
push
xchg
or
xlat
adc
pusha
sti
test
ret
movsl
push
or
and
push
jne
inc
js
xchg
mov
rorl
mov
inc
fsubl
xchg
setl
push
mov
pop
push
outsb
pop
out
test
sbb
int3
adc
subl
push
jl
jmp
add
adc
xchg
and
mov
leave
aas
jbe
mov
inc
xor
sbbl
cmp
ja
nop
fsubr
xchg
xchg
jae
aas
cmp
cmp
cmp
mov
or
xchg
xor
outsl
out
pop
leave
mov
jmp
std
push
pusha
xor
xchg
fmull
jg
or
rcll
adcb
mov
or
cmp
fcomps
adc
fbstp
dec
pop
dec
jge
adc
mov
mulb
inc
or
lock
push
jecxz
idiv
sbb
add
and
incl
adc
fs
imul
icebp
inc
adc
dec
loopne
ret
push
je
cli
add
sbb
ret
and
popa
cltd
push
and
ret
loop
push
cs
das
or
xchg
cltd
data16
lea
adc
or
fisttpll
fwait
jno
xchg
or
pop
sbb
and
cltd
inc
scas
adc
mov
pusha
imul
stos
das
scas
sbbl
adcl
outsl
das
cld
mov
jbe
pop
sbb
dec
push
mov
mov
sahf
add
addb
mov
das
stos
adc
jg
pop
sub
sbb
test
call
in
test
sbb
in
out
sub
inc
inc
pop
adc
pop
add
rcr
je
test
dec
inc
or
adc
xchg
mov
xor
jnp
dec
push
divb
cmp
jae
js
repnz
mov
and
and
outsl
sar
dec
add
xlat
pop
outsl
shll
or
jnp
xorl
inc
mov
xchg
adc
dec
jnp
mov
jae
add
dec
or
addl
mov
xchg
sbb
ljmp
idivl
jno
iret
call
add
idivl
xor
push
cld
mov
leave
in
mov
lods
in
dec
cld
push
cli
jmp
daa
xchg
mov
mov
pop
sahf
and
push
loop
or
push
and
pop
mov
sbb
adc
mov
sub
enter
lret
hlt
outsl
mov
shlb
jp
in
adc
test
cld
cmp
popa
or
xchg
imul
push
dec
rolb
inc
or
xchg
repz
push
mov
out
pushl
jmp
add
cltd
sub
push
mov
scas
sbb
lock
nop
mov
or
jecxz
decb
fwait
sarb
pop
pop
popa
pusha
ds
das
js
sub
or
pop
xchg
cltd
xlat
push
js
sbb
add
sub
mov
pop
dec
fmull
in
mov
push
adc
push
jne
repz
das
js
in
mov
push
sbb
sbb
nop
mov
jp
mov
and
test
fdivrs
test
jne
bound
mov
fs
xor
popa
pop
or
outsl
jl
das
cmc
repz
sbb
ljmp
fdivs
cwtl
aaa
dec
add
popa
jnp
pop
das
pusha
mov
inc
hlt
mov
ja
incb
inc
sbb
fists
test
jg
xor
movl
sbb
jne
in
mov
inc
filds
out
shr
push
cli
stc
push
stc
mov
les
subl
inc
out
inc
pop
ficompl
mov
lcall
icebp
sti
mov
dec
pusha
mov
mov
mov
dec
add
sub
mov
mov
cmp
in
mov
mov
sbb
test
mov
dec
es
into
cli
movsl
mov
xor
fmulp
leave
sub
imul
nop
and
xchg
pop
ljmp
test
xor
pop
cmpsb
jne
jl
rcr
push
mov
jbe
dec
mov
popa
imul
mov
stc
jae
push
sub
lahf
mov
fcmovnu
jmp
fcoms
mov
mov
dec
sbb
out
pushf
lea
sbb
outsl
js
in
adc
push
mov
sbb
sti
add
fcmovb
inc
stos
mov
aaa
hlt
jge
dec
das
mov
ret
cwtl
or
adc
fs
loopne
cmp
dec
cmp
repz
lods
sub
and
xor
push
lock
pop
xchg
push
sub
sbb
gs
push
repnz
aaa
fidivrl
decb
movsb
mov
or
das
das
or
sbb
jno
loopne
lea
or
mov
popa
jns
cmc
rolb
inc
xor
xchg
dec
xchg
mov
nop
ds
fisttps
pop
dec
std
jg
flds
rcll
pusha
fistps
ljmp
mov
ds
dec
push
mov
xorb
sbb
adc
lcall
movsb
ds
dec
lret
call
mov
mov
mov
jecxz
mov
jbe
mov
add
xor
jmp
fimuls
xor
mov
pop
and
pop
mov
aas
sti
movsl
jmp
mov
xchg
loop
adc
jl
icebp
mov
aas
pop
mov
addr16
add
pop
data16
jmp
cmp
add
add
xor
add
sbb
lock
add
subb
xor
adc
or
mov
je
lcall
mov
dec
adc
dec
dec
mov
add
repnz
in
xchg
xchg
jp
jno
mov
cmp
cmp
jno
test
inc
xlat
adc
jnp
ss
lahf
sub
fcoms
outsl
stos
test
xchg
aas
scas
jbe
sti
call
inc
movsb
inc
dec
xchg
inc
pop
fcmovnbe
lods
pop
roll
mov
push
ds
and
es
shrl
clc
mov
push
xchg
dec
sbb
xchg
repz
jb
je
fwait
pop
mov
mov
mov
mov
jmp
movsl
stos
hlt
dec
push
movsl
and
mov
cmp
test
xchg
lea
shrb
or
or
in
and
unpckhps
decl
pop
sub
pop
dec
pop
mov
bnd
stc
aas
mov
or
inc
insl
dec
xlat
jle
sub
pusha
pop
dec
imul
cmpsb
add
lods
and
popf
inc
mov
fdivr
filds
and
pop
sbb
iret
xchg
fld
in
out
xor
call
mov
mov
inc
sbb
out
clc
pusha
inc
sbb
cmpsb
neg
mov
mov
das
aaa
fdivr
push
cmp
xchg
pop
inc
enter
aam
or
push
test
jbe
sub
fdivr
push
insb
stos
xor
or
mov
jl
int
push
popa
xchg
add
or
mov
lea
sbb
rorb
data16
jg
shl
push
mov
data16
pusha
stos
fs
loop
pop
pop
loopne
bound
sbb
hlt
pop
add
into
inc
sbb
cld
xor
dec
or
test
jbe
test
aam
pusha
dec
scas
inc
das
leave
stos
dec
push
mov
shrb
lock
pop
repnz
cs
movsl
vshufps
clc
cs
sub
cmp
je
clc
adc
dec
orb
xchg
jbe
mov
sub
mov
shrl
out
add
lds
xchg
mov
pop
pop
inc
push
inc
dec
je
or
jle
loope
lret
lds
pop
jp
mov
mov
jnp
pop
stc
into
jg
insl
dec
cmp
mov
mov
xorl
leave
adc
js
fldl
mov
pop
adc
jge,pt
pop
mov
xor
or
dec
cld
rcrb
jg
push
daa
sub
jo
daa
orb
push
sub
jns
xchg
jbe
call
cmpb
in
inc
shlb
mov
xor
inc
jmp
loopne
push
inc
pop
lret
test
es
mov
sub
lods
fnstcw
sbb
int
dec
mov
pop
lods
cltd
into
push
scas
or
lds
call
cwtl
bound
pop
out
jo
les
xlat
pop
mov
aad
decb
mov
pop
mov
enter
or
jmp
test
cmp
pop
addb
inc
mov
loope
jmp
ss
adc
je
cmp
hlt
cwtl
and
lret
fistpll
iret
insb
cltd
xchg
add
push
flds
adc
and
shr
jo
and
mov
mov
stos
out
push
ret
push
dec
mov
sub
scas
js
mov
cmp
ss
hlt
sub
rcl
test
repz
enter
dec
insl
incl
sahf
lcallw
ja
outsb
pusha
xchg
push
push
and
jnp
sti
clc
fisttps
test
mov
xchg
movb
xor
jo
inc
xchg
pop
push
dec
jge
loopne
mov
sbb
pusha
xchg
push
fisttpl
add
add
in
xchg
mov
push
cltd
pop
notl
adc
test
or
mov
mov
aas
mov
scas
adc
notb
mov
and
inc
mov
jae
jne
cli
push
imul
pop
shrb
or
sub
hlt
sbb
imul
cmpsb
jecxz
fildl
cmovle
inc
xor
movb
mov
mov
nop
clc
pusha
xchg
or
lock
sbb
push
popa
cli
xchg
pop
and
out
inc
mov
push
dec
push
cltd
add
jge
inc
mov
ljmp
fdivl
popf
sub
mov
outsb
mov
pop
insb
ljmp
int3
fs
imul
fsts
fwait
mov
aas
pushf
shr
fnstsw
add
push
push
leave
push
js
subb
adc
fucom
ficompl
xchg
dec
cs
mov
dec
xor
dec
into
xor
add
inc
dec
cs
fidivrs
add
cmp
adc
push
pop
movsl
adc
sahf
jmp
mov
xor
mull
outsl
je
insl
jnp
adc
xchg
mov
cmpsb
movsl
daa
mov
mov
fstl
cli
repz
mov
in
int3
mov
pop
outsl
cld
or
add
test
or
xor
cmpsb
movsl
ffree
pcmpgtb
ds
insl
negb
sar
push
iret
jge
in
pop
mov
scas
mov
push
inc
movsl
and
xor
cli
cmp
popa
inc
or
outsl
push
daa
sti
dec
fsubrl
fwait
in
jno
pusha
mov
adc
push
adc
and
push
cmpsl
lret
in
cli
mov
cli
pop
repz
test
sbb
jmp
xchg
cmc
or
sbbl
dec
and
mov
aaa
roll
lcall
pxor
ffreep
dec
cli
pop
cs
sub
scas
xchg
sti
stos
push
pop
pushl
jmp
pop
xor
in
mov
fwait
jbe
outsb
jb
pop
jo
nop
sahf
xorb
lock
dec
xchg
cmpsl
mov
inc
add
jno
jb
lea
mov
arpl
or
jle
insb
loope
cmp
pop
test
out
loopne
jp
dec
fs
shl
arpl
and
mov
cmp
mov
in
pop
aas
mov
mov
or
sub
mov
pop
es
sbbl
mov
cmpsb
lcall
add
sarb
aam
xchg
and
push
mov
mov
jo
jmp
out
push
cmp
fsubrp
test
out
adc
xlat
push
dec
std
pop
fdivs
sub
adc
daa
dec
lahf
xor
cli
or
pop
int
adc
nop
cltd
test
mov
cs
fstl
dec
mov
pop
out
xchg
into
cltd
add
or
pop
cmpb
cmpsb
or
jae
dec
xor
jb
insl
mov
aam
or
inc
sbb
ss
dec
adc
in
jo
mov
idivl
ret
stos
mov
lock
dec
or
pop
fnstsw
mov
iret
iret
loopne
and
std
je
add
enter
mov
lcall
xor
xchg
dec
es
push
xor
ror
inc
dec
not
jne
mov
xchg
fisubs
mov
sub
mov
pop
jg
cmp
xchg
xor
inc
pop
mov
sbb
push
mov
adc
inc
std
cmp
or
loope
js
cs
add
mov
call
mov
push
addr16
test
mov
and
sub
pop
es
mov
das
pop
clc
adcl
jno
cmovns
inc
test
mov
lods
push
adc
and
inc
dec
mov
xor
es
jmp
lods
jbe
pop
dec
sbb
ret
icebp
jp
inc
sbb
mov
sub
xchg
push
push
jecxz
mov
hlt
cmp
mov
cli
xchg
pop
adcb
sbb
add
add
or
decb
ljmp
rorb
test
sbb
lods
call
adc
mov
notb
test
pop
loope
jl
xor
xor
test
jmp
adc
fwait
pop
mov
fildll
into
inc
xor
fsubr
popf
sub
jmp
hlt
insl
jmp
daa
mov
ds
out
add
inc
push
pop
lods
ffree
xchg
sti
mov
or
mov
mov
rdtsc
cmpxchg
adc
xor
mov
add
jae
lea
call
or
stc
sub
jle
or
mov
lret
and
fsubl
add
or
pop
lods
xor
outsl
pop
cmp
xchg
pusha
loopne
mov
and
mov
jb
outsl
mov
jge
or
sub
xchg
pop
jo
dec
mov
outsl
jl
xor
xor
mov
add
in
cs
pop
jb
sbb
in
stos
in
mov
das
fcompl
cmp
insl
imull
movsl
add
push
push
jo
xor
in
push
inc
jmp
outsb
movsl
add
push
push
push
ss
popf
hlt
mov
xlat
mov
add
mov
inc
loopne
fnsave
jae
sbb
cwtl
push
push
iret
jnp
add
faddl
cmp
imul
ret
fimuls
and
mov
in
movsl
jg
jecxz
sahf
mov
adcl
pop
stos
push
pop
add
push
inc
mov
das
mul
outsb
aam
fmuls
jbe
pop
andb
cld
popl
inc
popf
or
call
dec
push
add
jmp
pop
ret
mov
dec
sbbb
mov
xor
cwtl
xchg
mov
jbe
sub
mov
add
cltd
adc
cld
inc
or
jmp
mov
inc
imul
dec
es
mov
fmull
nop
cwtl
pop
mov
je
sbb
cs
cld
cmp
mov
add
pop
dec
add
fwait
mov
pusha
xchg
xchg
fldcw
lahf
call
inc
mov
xchg
cli
mov
stc
fs
clc
xchg
dec
mov
jbe
pushf
and
das
lock
dec
or
ret
and
sbb
push
js
jecxz
pop
xor
pop
lcall
mov
mov
sti
pop
sbb
jb
call
add
ljmp
add
cltd
int3
inc
and
loope
inc
adc
jne
das
mov
and
xor
mov
mov
jno
repnz
scas
pop
sbb
ficoms
cmp
dec
or
xor
pop
rcl
push
in
dec
pop
or
cmc
aad
or
add
mov
dec
add
testl
fwait
roll
inc
or
sbb
xchg
rclb
negb
das
leave
fisubrs
xchg
lock
add
pop
mov
lods
jno
cld
test
stc
pop
dec
cli
inc
inc
and
jnp
les
pop
ficomps
jno
mov
and
hlt
scas
cmp
dec
mov
mov
aam
push
push
or
and
add
insl
mov
std
outsb
adc
dec
in
sbb
or
loop
mov
sub
sarl
mov
loop
sub
icebp
fistl
jg
add
lret
mov
inc
into
cmc
cmpsb
fisubs
cs
jno
sbb
or
test
cld
aad
mov
mov
add
sub
adc
cmp
stos
or
mov
or
dec
pop
les
cmpsl
adc
fistpl
enter
cmp
lcall
mov
and
in
in
lds
add
push
ljmp
or
in
pushl
lods
and
addr16
repz
in
mov
sbb
fldenv
xchg
pop
int
cmpsb
arpl
outsl
mov
jl
pop
lds
jg
divl
jecxz
inc
and
xchg
cwtl
ret
push
adc
adc
scas
fisttpl
xor
rolb
and
hlt
jg
cmp
testl
xor
shll
pop
outsb
cs
rorb
pop
pop
fwait
adc
dec
lcall
mov
dec
xor
and
aaa
sub
outsl
pop
cli
lret
loope
fs
push
xorb
dec
cmpsl
fstl
dec
mov
push
add
mov
and
add
xor
lods
pop
and
pop
inc
fldpi
jg
push
cld
jl
and
rol
inc
loop
popf
and
jmp
and
jae
sbb
xchg
outsb
mov
mov
aas
xorl
repz
push
cs
orl
scas
enter
sbb
hlt
mov
dec
add
xchg
addr16
in
xlat
ss
mov
in
sbb
fcmovnu
sbb
mov
jno
or
xchg
add
movsb
and
shlb
dec
mov
push
aam
shlb
sbb
ss
testb
mov
int
sbb
movsl
mov
and
mov
add
add
lcall
outsb
test
cmc
mov
shrb
in
cmp
jecxz
dec
mov
aad
ss
jmp
pop
frstor
and
sbb
sbbb
jg
add
stos
lds
test
push
push
mov
push
test
add
mov
icebp
xor
mov
orl
imul
or
fcmovb
incl
mov
mov
mov
fdivp
lcall
xor
adc
jle
sbb
aam
movl
push
in
xchg
adc
adc
jae
lcall
push
jnp
loope
push
repnz
repnz
mov
test
sub
ret
inc
mov
rcr
in
in
pop
frstor
pusha
mov
iret
test
xlat
cmc
push
lcall
pop
xor
mov
dec
fxch
jecxz
mov
aas
adc
xchg
pop
xchg
xchg
pslld
out
mov
jo
fwait
jge
push
popf
pop
xlat
pop
dec
dec
ret
in
dec
in
ds
lret
and
notb
dec
dec
pop
out
add
pop
pop
cltd
or
inc
rcrb
das
mov
clc
dec
je
inc
or
inc
dec
push
pop
addr16
sbb
pop
sbb
cmp
mov
scas
mov
cld
xor
sbb
popa
test
andb
cs
stos
lea
and
dec
fwait
add
dec
sbb
jbe
sub
jno
jg
mov
std
add
cmp
inc
sbb
fcoms
das
fmull
adc
adc
push
test
pusha
lea
mov
adc
lods
pop
test
adc
mov
mov
std
lock
sbb
sub
ljmp
jle
sbb
push
mov
inc
jmp
cwtl
jecxz
push
ret
sub
mov
sahf
sbb
hlt
aad
jge
jmp
sub
jmp
pop
pop
rclb
lret
xor
aaa
xchg
mov
and
std
or
outsl
pop
xchg
sbb
push
jge
adc
lret
mov
cmp
lods
jp
mov
mov
fisubs
sub
sti
push
dec
aaa
add
jp
outsl
cmp
and
imul
push
pop
repnz
call
cld
ja
pop
insl
sbb
or
dec
gs
push
and
test
mov
pop
dec
insb
adc
lret
mov
ret
xor
mov
push
sbb
and
push
cmp
out
adc
out
imul
push
hlt
arpl
xchg
xchg
push
mul
test
xchg
cltd
jge
cmpsb
fstpt
loop
sub
xor
mov
shll
or
je
iret
into
push
ja
xlat
mov
add
or
push
and
cltd
mov
inc
mov
add
test
jno
xchg
jmp
jecxz
out
pop
icebp
jg
in
fwait
add
mov
stos
call
call
mov
sti
or
mov
pop
push
pop
gs
outsb
sbb
and
mov
mov
pop
es
das
mov
xor
xchg
clc
fldt
cli
inc
ror
xchg
mov
jmp
stc
test
mov
and
push
jmp
sub
popl
in
js
rolb
lods
xor
and
fdivr
aaa
repz
roll
inc
add
push
sbb
test
sbb
xchg
jg
fstpt
xchg
fwait
dec
mov
cli
test
inc
cwtl
jle
outsb
add
jl
jp
xchg
insb
imul
incb
imul
adc
in
out
xchg
sahf
call
adc
mov
inc
mov
pmuludq
or
cmp
xchg
push
lea
cmp
sbb
push
popf
pop
mov
jp
mov
lds
stos
xchg
mov
je
jg
lret
jbe
ds
iret
or
mov
push
leave
cmp
out
stos
sti
mov
call
or
push
push
js
enter
lock
cmp
in
ljmp
cmp
sub
out
les
ret
out
cli
pop
cli
push
test
arpl
or
xchg
aam
in
add
out
jp
icebp
or
mov
sbb
fldt
inc
icebp
mov
cmpb
pop
bound
addr16
dec
xchg
int3
jl
inc
mov
xchg
inc
cmp
inc
outsl
xchg
loopne
and
or
rolb
cmp
adc
sub
out
dec
cs
call
outsl
mov
fmul
adc
inc
lods
cmpsl
mov
std
sbb
inc
push
je
jb
ljmp
fcoml
test
outsb
sub
repz
push
push
mov
fldl
loopne
aad
xchg
test
and
mov
stc
adcb
loope
add
lock
in
jno
ja
jmp
add
paddq
jl
mov
pop
jecxz
clc
push
push
mov
add
or
pop
xchg
adcl
aad
xchg
xchg
pop
sahf
rcl
jg
add
out
sub
cmp
or
sbb
lea
jns
and
in
cmp
ret
push
xchg
pop
fdivrs
push
cli
inc
and
or
mov
std
add
and
out
jp
adc
cmp
or
sbb
fs
jne
fimuls
js
inc
xchg
shrl
ja
sub
fnsave
cwtl
jne
push
mov
adc
mov
jno
icebp
scas
rcrb
jle
in
mov
out
fisubrl
dec
mov
adc
jnp
mov
das
sbb
mov
cli
inc
add
or
push
push
shll
dec
pusha
mov
pop
cld
pop
ljmp
lds
sub
or
mov
push
pop
or
rolb
lods
or
pusha
sbb
arpl
cmpsl
or
mov
arpl
and
aad
lods
xor
mov
js
jmp
pop
ja
push
lcall
std
jmp
or
mov
mov
ja
push
std
lea
dec
xchg
sbb
adc
nop
ss
iret
jb
mov
mov
jb
jne
insb
cs
mov
aad
cmp
push
mov
in
mov
ss
mov
out
arpl
push
roll
icebp
iret
nop
add
add
mov
xlat
adc
mov
das
or
add
cld
cmp
rorb
call
lds
mov
adc
cmp
fwait
pop
mov
aam
lret
mov
mov
add
imul
dec
lds
mov
outsb
jle
xlat
sbb
pop
mov
inc
mov
adc
dec
push
repz
mov
arpl
sbb
ficoms
mov
push
sub
movsl
dec
call
cmpsb
mov
mov
filds
mov
sub
js
int
xor
imul
push
jno
and
cmpsb
push
popaw
jns
mov
pop
divb
push
adcb
fbstp
adc
sbb
adc
fstpt
or
fsts
mov
xor
scas
dec
arpl
adc
jl
adc
sbb
cmc
dec
cmp
mov
add
mov
dec
cld
lods
sbb
dec
mov
imul
sub
cli
in
and
push
faddp
pop
rorb
cmp
mov
jmp
aaa
cmc
test
test
je
or
into
mov
sbb
mov
jb
add
lea
sub
imul
int
gs
jge
inc
das
mov
int
and
aad
stos
mov
imul
int3
aam
movsb
iret
sub
inc
sbb
ds
mov
sbb
stc
cwtl
movsl
pop
sbb
mov
sub
sbb
icebp
jg
xchg
ja
jecxz
sbb
jb
cmp
jns
faddl
mov
xchg
outsl
arpl
cmpsl
pop
aam
das
push
jbe
push
sbb
addr16
rorb
popf
shl
inc
fcomps
mull
add
mov
or
psubsw
mov
xchg
xor
xorb
push
sub
cmp
shlb
test
lods
iret
xor
cld
add
jb
xor
mov
jecxz
mov
push
enter
aas
movsl
aas
das
addr16
adc
rclb
jecxz
and
fnstsw
sub
pop
and
sub
xor
mov
push
mov
cmp
dec
call
xchg
fdivs
cbtw
dec
dec
mov
fdivr
mov
rorb
ljmp
dec
add
fistpll
cmc
xor
cmc
lds
out
lcall
mov
imul
mov
icebp
push
pop
call
roll
fmull
jmp
nop
and
leave
add
dec
pop
lea
int3
push
pop
inc
enter
nop
leave
notl
xchg
out
xchg
outsb
sti
lcall
std
cmp
bound
sbb
cmp
call
jg
aas
daa
daa
and
es
push
int
mov
xchg
pop
lahf
jno
pop
mov
jb
fwait
or
outsb
fildll
adc
push
rolb
lods
call
jmp
and
and
popf
sbb
std
fcmovnbe
sti
aad
inc
and
sbb
push
jne
ljmp
dec
sub
inc
xchg
sub
das
ljmp
mov
cmpl
ja
fucom
inc
shlb
rcr
ret
or
xorl
push
outsl
clc
pop
mov
loopne
mov
movsl
test
push
inc
cmpsb
in
nop
movsb
adc
add
imul
xorl
xor
inc
mov
lahf
mov
out
jle
in
dec
mov
mov
mov
add
mov
cld
shll
loop
inc
cmp
pop
stc
xor
xchg
cmpsb
orl
add
add
inc
addl
aam
and
cmp
subl
and
xchg
dec
and
ja
fidivrl
xor
adc
pop
cld
popa
cs
xor
xchg
into
jl
imul
ja
roll
into
and
pusha
mov
clc
loopne
subb
andb
sbb
push
repz
andl
in
jns
iret
jp
mov
jmp
in
inc
cmpl
push
std
jae
scas
push
jle
fisubrl
cwtl
outsl
or
test
enter
outsl
sub
adc
and
dec
in
inc
shll
or
lea
push
adc
adc
or
ret
fucomip
mov
jmp
lods
mov
xor
loope
and
jnp
dec
xchg
lds
and
mov
insw
movsb
cs
xor
mov
cmpsb
roll
repnz
lods
sbb
push
fcmovnbe
mov
fisttpll
ss
push
stos
cmpsb
cmp
mov
mov
inc
arpl
add
mov
fpatan
ror
shrb
sbb
dec
cmpsb
mov
add
in
shll
repnz
dec
sub
stc
sbb
add
mov
mov
xchg
mov
shrl
popa
cmp
ret
jge
jnp
call
inc
inc
clc
cwtl
or
pop
ret
mov
test
and
jb
pusha
push
inc
mov
nop
xor
les
fwait
icebp
dec
sbb
fistpll
lods
add
mov
or
loope
leave
mov
lods
and
test
fidivrl
leave
jb
cmpsb
inc
mov
adc
imul
frstor
inc
and
jno
sbb
cld
jb
jg
mov
shlb
sub
cltd
mov
dec
xor
pop
jb
jmp
cmp
fistpl
loop
adc
std
jg
xchg
or
bound
xor
sbb
sub
shlb
test
or
pop
mov
hlt
mov
jle
adc
icebp
les
jae
outsb
push
mov
popa
jmp
int
sbb
xchg
pop
adc
mov
int3
testl
sbb
in
into
psubsb
ljmp
popf
xchg
les
call
aas
popa
add
test
lahf
xchg
mov
cltd
mov
ret
pushf
xchg
and
enter
pop
test
push
and
out
adc
inc
fldt
or
jecxz
enter
es
pop
sub
nop
and
shr
inc
mov
lea
repz
inc
je
xchg
push
dec
aam
cmpsl
jne
ljmp
pop
mov
add
pop
cmp
idivb
cs
push
push
loope
lea
cmp
push
sti
scas
sbb
test
cmp
xor
leave
in
out
pop
ljmp
loopne
pop
rcrl
fcmovnu
sbb
imul
and
or
xchg
jmp
out
repnz
xorb
subl
outsl
fbstp
mov
dec
dec
rcl
loope
loopne
nop
adc
imul
nop
xchg
add
jae
inc
push
insb
xor
or
clc
out
xchg
bnd
jno
gs
cmp
popa
mov
mov
inc
adc
pop
and
or
dec
insb
iret
add
out
inc
popa
leave
inc
dec
in
test
jp
xchg
shll
inc
aaa
repz
push
mov
mov
add
jmp
xor
ret
fidivl
jae
mov
dec
jmp
testb
ljmp
cli
pop
movsl
subb
popf
fidivrl
jno
mov
push
add
fcmovnu
mov
adc
sub
sbb
sbb
cmpsb
jae
add
cwtl
adc
jmp
stos
adc
adc
sub
dec
fs
loopne
mov
and
test
sbb
frstor
jp
cmpsl
push
ljmp
and
inc
and
loopne
adc
or
add
addr16
cmpl
jmp
int3
loopne
into
pop
mov
jbe
gs
inc
mov
fidivs
clc
mov
mov
add
pushf
in
inc
stos
jnp
xor
imul
fwait
push
push
dec
and
sbb
dec
cmp
out
jno
fwait
loopne
lock
cld
pop
outsb
movsb
lods
xchg
ret
jge,pt
popa
xchg
xor
sbb
call
adc
arpl
imul
mov
bound
outsl
jne
lcall
ds
xchg
fdivrp
lods
and
out
lods
clc
fstl
sbb
sbb
enter
fwait
add
in
jb
adc
xchg
iret
xlat
dec
push
or
mov
sbb
ljmp
jo
or
test
hlt
dec
in
push
stos
xchg
jp
fists
mov
sub
mov
test
test
adc
push
sub
sbb
fcmovne
cltd
pop
sbb
dec
scas
lea
sub
add
mov
jg
pop
and
adc
out
dec
lock
xlat
ljmp
jle
sbb
inc
lret
lcall
push
mov
in
mov
sub
mov
sar
inc
sbbb
and
pop
stos
lock
imul
push
mov
push
in
jo
fstl
adc
out
nop
push
pop
outsb
mov
int
mov
jmp
ljmp
push
jle
movsb
xor
and
cmp
daa
mov
jmp
xchg
cmp
sbb
mov
popf
mov
mov
or
lahf
xchg
dec
jl
imul
or
add
jp
push
addb
in
call
stos
pop
adc
mov
and
jl
fcomi
push
out
xor
mov
xchg
mov
mov
sub
inc
inc
pop
mov
call
jne
jecxz
jmp
cwtl
daa
inc
fwait
clc
xchg
fcomi
add
jl
ja
mov
mov
push
mov
adcl
xchg
adc
lar
inc
lret
xorb
inc
adc
inc
fisubs
movsl
cs
xor
inc
sbb
incb
in
je
jp
ljmp
jno
inc
xchg
sub
cltd
inc
mov
sar
in
pop
lock
stc
pop
nop
testb
dec
push
je
popa
inc
jno
outsl
daa
js
arpl
outsl
outsl
xor
sub
decl
aam
and
adcb
inc
inc
push
pop
cmp
dec
push
or
mov
adc
dec
movsb
mov
fcmovnu
cmp
lahf
add
ljmp
cmp
insb
inc
decl
pop
push
jle
mov
sarl
insl
call
xlat
sbb
or
inc
rorb
ss
pop
mov
iret
roll
iret
imul
imul
addl
fnstsw
and
clc
xchg
jbe
mov
jne
xor
gs
pusha
outsb
mov
add
push
mov
xchg
jmp
mov
adc
imul
mov
mov
fistps
and
fsubl
sbb
nop
adc
loope
push
outsb
outsl
lahf
test
das
lret
ret
pop
jmp
das
mov
imul
jns
lahf
fcom
inc
mov
push
lret
mov
adc
shl
pop
pop
icebp
mov
cmp
mov
mov
lds
ret
movsl
mov
jl
push
fisttpl
out
mov
cmpsb
repz
sbb
mov
cld
shr
addr16
push
imul
cmp
cmpsb
pushl
hlt
mov
xorb
push
xchg
clc
xchg
sbb
mov
add
or
arpl
mov
cmp
rorb
js
sahf
inc
fldl
movsl
mov
test
into
mov
mov
mov
pop
sub
adc
lret
shl
add
cli
loopne
mov
stc
das
mov
mov
mov
aas
adc
sub
mov
testl
mov
fildl
cmp
call
clc
push
mov
andl
out
test
data16
mov
mov
inc
out
inc
adc
jbe
ficompl
je
rcl
pop
jo
in
mov
mov
mov
mov
cmp
xchg
sti
je
std
mov
into
scas
add
xor
push
add
rclb
sub
mov
jb
mov
mov
sub
dec
inc
lcall
adc
ja
xor
and
pop
pop
pop
fidivl
mov
jecxz
sub
add
insb
clc
jno
aam
mov
cmp
jns
mov
lcall
push
lahf
mov
or
sub
fists
xor
into
pop
cmp
xlat
sti
dec
mov
jecxz
mov
inc
cmp
pop
test
popa
bound
adc
lock
push
jae
push
adc
add
std
jbe
clc
sbb
xchg
dec
cmp
leave
movsb
jmp
in
mov
push
jo
xchg
sbb
push
sbb
mov
dec
jb
sbb
cli
dec
movl
pop
xor
in
adc
cmc
les
mov
push
inc
mov
or
cltd
mov
push
cwtl
xchg
pusha
adc
ror
ljmp
in
jbe
roll
lods
or
or
inc
jge
mov
fidivrs
push
cmp
cld
in
dec
pop
je
pop
ljmp
inc
mov
pop
dec
and
push
sbb
xor
outsl
mov
push
mov
int3
sbb
mov
xlat
ss
ljmp
push
xchg
lds
push
insl
lods
jo
fidivl
push
call
jo
out
cmpsl
and
and
pop
push
fstpl
push
insb
sti
xchg
pop
jae
rcll
ja
in
test
jno
dec
lahf
repz
push
test
sbb
jg
push
pop
cmpsl
mov
inc
mov
or
jle
or
or
sub
xlat
add
sbb
jl
aaa
loop
xor
xchg
push
enter
hlt
or
add
nop
sbb
jp
sub
ljmp
and
das
cmp
sub
les
mov
mov
push
ds
add
push
or
mov
pop
pusha
add
xor
jmp
fidivrs
popa
adc
or
jnp
cld
fimull
adc
jg
fwait
jnp
lret
arpl
adc
push
jge
outsl
cmp
add
gs
mov
add
dec
mov
repz
xor
cmp
mov
mov
fistps
sar
pop
scas
cmp
fildl
into
mov
aaa
mov
mov
xchg
lcall
lods
add
lock
add
cmp
fimull
pop
jle
cmp
lods
cmpb
pop
int3
arpl
pushl
mov
sbb
insl
xor
add
adcl
cmc
test
sub
icebp
xor
xchg
push
je
xor
jb
xor
mov
out
mov
sub
lret
jle
out
sub
int3
pop
lcall
loopne
jge
aas
js
das
mov
inc
inc
hlt
test
inc
dec
push
jecxz
push
adc
or
or
and
aaa
mov
push
test
mov
out
fstps
sbb
mov
xchg
cmp
mov
jno
and
ficoml
add
nop
mov
or
sub
inc
xchg
sub
jge
push
mov
jne
fs
sbb
fs
call
or
push
cmp
ds
lcall
movsl
ljmp
jecxz
ret
cmpsb
fnstsw
xchg
mov
dec
mov
mov
add
dec
lods
xchg
cmp
test
lcall
enter
push
imulb
mov
inc
jne
rorl
sub
cmpsl
je
fidivrs
cltd
scas
xsha1
cmpsb
or
pop
orl
mov
mov
pop
loopne
jmp
test
sub
imull
cwtl
movsl
fistpll
cmp
shll
inc
inc
repnz
fistpll
sub
jo
dec
das
cmp
fucomip
cmp
outsl
adc
or
fstl
push
aad
mov
mov
inc
fdivs
push
or
das
sub
jle
fwait
cmp
leave
aas
mov
jge
bound
std
ret
jne
jae
xor
push
mov
jg
in
imul
cmpsb
pop
adc
sub
push
enter
pop
lods
inc
dec
add
sub
xlat
mov
add
xchg
insl
cmpb
mov
in
rcrb
ljmp
or
mov
inc
or
push
xchg
loop
in
hlt
jne
ja
mov
dec
lcall
in
js
rcrb
testl
jle
jmp
hlt
add
xchg
iret
lods
fcomps
jp
push
popa
sub
in
movsl
mov
into
inc
shl
xchg
xor
add
push
mov
jb
adc
dec
lods
xlat
mov
adc
or
je
inc
adc
test
mov
sbb
sbb
pushf
cmp
es
clc
shll
pop
rcrb
mov
and
fdiv
outsl
insb
cltd
fs
out
push
aam
dec
inc
inc
push
jle
mov
inc
push
test
hlt
xchg
mov
popa
jnp
jo
shr
add
ret
das
mov
or
decl
or
jbe
jmp
adc
orl
sti
and
ja
fldcw
and
movsb
or
outsl
fdivl
inc
mov
cli
and
std
pop
jne
xchg
mov
xor
cmp
iret
int3
sbb
stos
pop
popa
sub
sub
push
sbb
mov
imul
xorl
hlt
adc
add
cli
fiaddl
stc
lock
in
jne
inc
pushf
xchg
mov
mov
xchg
add
icebp
jg
adc
popa
popa
add
or
jecxz
add
jg
les
adc
stos
aaa
sub
testl
outsb
adc
xchg
hlt
adc
stos
mov
pop
hlt
mov
rorb
movsl
mov
xlat
xlat
and
cmp
or
ficoms
sub
aas
cmpsl
rcrb
std
or
mov
sahf
cwtl
scas
dec
sahf
andl
inc
push
adc
push
push
pop
test
fidivl
aad
or
scas
aas
push
out
in
in
mov
jge
or
xchg
cmp
inc
pop
test
xchg
sar
daa
sbb
fnstsw
dec
out
xchg
movsl
call
or
or
add
lahf
and
insl
sub
es
fstpt
int3
lret
push
pop
jno
insl
repz
xchg
sub
fildl
scas
lock
add
mov
dec
or
sub
mov
icebp
mov
lcall
pop
add
shrb
add
call
push
insb
sbb
adc
loopne
es
ret
xor
push
cmp
movsl
mov
push
iret
pop
fsubrl
ret
sbb
aas
xchg
inc
loopne
mov
dec
leave
pop
cli
mov
aad
cwtl
repz
add
test
push
push
aaa
cltd
jno
dec
popa
cmp
ljmp
lcall
add
es
fildl
je
ret
pusha
int3
adc
jp
hlt
outsl
mov
aaa
cmp
outsb
inc
orb
leave
inc
pop
push
and
pop
repz
mov
stos
sti
fsubrs
aad
and
incb
jge
add
sbb
xchg
jp
es
jl
in
loope
or
mov
xlat
xor
fbstp
movsb
xchg
mov
cmp
jb
das
pushf
and
sub
pusha
pop
clc
in
inc
enter
mov
ljmp
aaa
cmc
sub
xchg
fmuls
push
pop
fidivl
sbb
movsl
fildll
scas
fmuls
and
mov
xor
mov
push
cmp
push
scas
and
orl
jmp
jo
pop
js
jge
push
aad
sti
jg
jl
xor
sbb
notl
or
mov
sar
out
sub
xor
cmpsl
jae
add
outsl
mov
inc
push
xchg
fidivl
inc
leave
mov
std
test
shlb
push
adc
or
je
jg
add
mov
push
pop
inc
push
push
inc
mov
loope
dec
sahf
rcrl
xchg
add
cwtl
jne
stos
sbb
xchg
fs
jo
cltd
xchg
pop
push
rolb
adc
mov
pop
mov
or
enter
jbe
lods
mov
addr16
sbbl
or
fcomip
aad
or
add
cwtl
mov
xor
sbb
push
leave
ss
push
sbbl
es
push
mov
mov
mov
popf
xchg
out
mov
sbb
clc
pop
push
lock
jae
sub
sbb
push
dec
mov
xor
and
xor
push
inc
loope
movsl
sub
jb
cld
movsl
outsb
test
jb
sub
inc
inc
mov
mov
inc
adcb
aas
aas
test
adc
mov
fldenv
push
or
jecxz
lea
mov
push
out
cmpsb
pop
sbb
add
lds
fwait
in
movsb
pop
pop
popa
and
xchg
xor
mov
int
or
lods
inc
inc
in
xor
and
jne
test
addr16
inc
push
jmp
sub
dec
out
adc
sahf
test
lcall
sbb
stos
dec
or
clc
mov
or
sbb
jne
cmc
aas
push
push
cmp
lcall
sbbb
outsb
aas
rclb
lock
inc
dec
sbb
test
test
or
and
cmpsb
sbb
lahf
mov
mov
or
popf
fisttps
sub
push
or
jnp
add
cmpsb
orb
inc
fisubrl
fadd
cmpsl
dec
int
or
ss
fildll
lcall
notb
jmp
sbb
xchg
das
inc
inc
adc
pop
das
fs
xchg
or
dec
or
pushl
or
xor
fildl
xor
mov
orb
or
das
subb
lods
mov
out
xor
pop
push
mov
lea
aam
daa
subl
loopne
fldenv
mov
incb
adc
adc
push
inc
xchg
mov
lcall
mov
movb
pop
push
push
dec
dec
fwait
aam
in
lfs
mov
mov
push
mov
pop
cmpl
into
mov
adc
jbe
xchg
fisubl
insb
mov
sarb
loop
or
mov
cltd
cli
xchg
xchg
cmp
jnp
mov
dec
pop
in
ja
enter
mov
xor
mov
or
mov
jne
imul
pop
lea
cld
ss
jno
adc
pop
jne
movb
movb
push
data16
dec
js
and
jo
cmpsl
lock
xlat
insb
mov
loopne
xlat
sbb
insl
std
rcl
jb
mov
jmp
mov
jmp
lret
sbb
adc
push
jae
jne
pop
adc
sbb
daa
insl
movsb
fsubrp
subb
icebp
dec
fistpl
cld
jg
jo
scas
sbb
jg
push
mov
push
mov
add
je
pushf
fildl
insl
std
out
mov
mov
adc
in
aas
xor
bound
or
jno
sub
jg
mov
fldcw
cmp
pusha
mov
or
cld
inc
mov
and
xchg
jecxz
mov
lock
jle
sub
mov
and
cmpsl
cld
js
lret
mov
add
xchg
loopne
hlt
popa
test
lahf
jmp
push
cld
mov
adc
sub
loopne
data16
sbbl
xchg
mov
jo
shrl
push
nop
cmp
int3
cmp
sar
ja
inc
fcom
pop
mov
inc
push
inc
sti
cmpb
jbe
mov
stos
les
or
jno
xor
pushf
jbe
fcom
fsubp
sub
add
jl
and
xor
mov
push
mov
icebp
xor
in
inc
fisubl
arpl
rol
or
push
test
jb
add
pop
bound
mov
mov
jb
in
outsl
adcb
fwait
in
or
sub
cli
xlat
lods
xchg
fsubp
add
xor
fs
addl
jl
test
jecxz
mov
adc
pop
or
pop
add
std
fwait
sub
adc
lea
popa
and
call
mov
pusha
dec
cmp
xchg
mov
mov
lret
cmp
sbb
mov
jl
pop
ss
fcmovnb
or
outsb
jecxz
cltd
imul
ret
pop
dec
xor
jmp
fdivr
mov
in
and
movsb
fstl
cmp
ret
insl
enter
xor
or
cmp
or
dec
loopne
push
cmp
mov
in
test
mov
pushf
jge
nop
cwtl
mov
lods
stos
push
dec
pop
int
jne
es
jl
lds
jle
xor
dec
sub
clc
outsl
push
add
outsl
pop
jl
clc
std
rcrb
cmp
mov
data16
sti
ret
in
imul
rcl
lods
cmp
and
lock
ljmp
les
cmpsl
lcall
pop
cs
push
dec
pop
shl
loopne
je
pop
or
push
mov
cmpb
xchg
push
decl
mov
and
cmpsb
sbb
push
dec
int3
push
insl
jmp
jp
pop
adc
push
faddl
push
outsb
fcoms
jge
add
nop
leave
and
mov
cltd
jbe
pushl
aam
pop
push
ror
push
sub
jno
lock
testb
sub
or
sub
mov
ljmp
jo
jno
jne
test
lcall
inc
inc
fstp
or
jg
mov
sub
inc
aad
cmp
les
or
ss
jbe
aaa
add
int
cmpsl
std
mov
dec
test
sbb
fwait
push
clc
mov
iret
andb
mov
push
loop
loopne
loop
hlt
out
sub
mov
test
lret
sub
adc
std
lods
jbe
cs
mov
out
pop
sahf
fiaddl
incb
jl
rorb
xor
adc
data16
push
loopne
in
shrl
les
cmp
mov
imul
add
loope
std
mov
in
pop
mov
fwait
sahf
inc
mov
pop
je
mov
or
je
lods
adc
push
add
mov
cmp
stos
ret
cld
push
cli
ds
int3
add
test
lock
cli
into
dec
loop
call
jmp
push
insl
mov
sbb
xchg
into
mov
rorb
bound
jne
xor
imul
jb
add
xchg
mov
movsb
and
inc
out
jmp
fdivrl
pop
cmp
int3
push
lret
lcall
lret
fnsave
fwait
mov
arpl
push
dec
lcall
rclb
in
jnp
cwtl
push
adc
jns
loopne
add
sbb
mov
push
xchg
pushf
jle
lods
cmp
rcll
fadd
cli
inc
outsl
mov
add
pop
aam
and
xor
es
or
xchg
mov
mov
inc
mov
es
rcl
cmpsb
jp
flds
call
pop
mov
or
std
lea
mov
sub
in
dec
ffree
in
mov
fsubrl
jne
sbb
pop
ja
sub
inc
sbb
jmp
jge
xor
in
fistl
cld
insl
cmpsl
fisttpl
cmpsl
sbb
xor
inc
mov
mov
idivl
cmpsb
xor
roll
pop
pop
adc
inc
inc
add
inc
adc
jge
xchg
enter
loopne
sub
loop
pop
push
test
xor
mov
or
push
cmpsl
into
fcmovnbe
out
pop
inc
sti
sub
cltd
icebp
jg
test
push
cs
cwtl
sub
pop
or
lcall
mov
xor
jne
and
or
add
fistps
jae
xchg
add
push
sbb
fs
pop
stos
fbld
ss
ljmp
sbb
mov
xchg
loope
js
adc
and
jg
cmpb
inc
dec
and
das
mov
clc
push
loop
xlat
es
lret
sub
mov
mov
inc
aaa
pop
or
in
ret
sbb
mov
notl
jmp
xchg
sahf
sub
sub
lcall
xor
hlt
or
mov
jmp
ds
dec
sti
xchg
jg
xchg
mov
out
jb
xor
popf
fisubrl
push
mov
in
inc
clc
adc
fsubrs
ja
xchg
lods
dec
imul
hlt
push
cmc
jg
and
in
repz
xchg
ljmp
mov
jno
xchg
mov
mov
je
es
fsub
xchg
or
inc
and
mov
lock
aaa
stos
xor
test
jmp
loopne
std
sub
mov
clc
mov
pushf
cld
mov
mov
inc
stc
pop
cmp
inc
mov
loopne
jmp
adc
add
popf
lock
in
add
add
fdivl
xor
adc
jo
inc
pop
add
lods
outsl
inc
pop
xchg
dec
dec
fistpll
mov
mov
out
pop
and
jp
push
jmp
sub
pop
pop
inc
daa
jecxz
dec
jne
mov
clc
das
mov
jb
sub
push
cwtl
push
mov
sahf
mov
lods
xor
adc
pop
add
pop
jle
insl
pushf
xchg
popf
xchg
repz
sbbl
jno
mov
push
mov
adc
test
push
in
cmp
mov
lret
mov
dec
jg
outsb
cltd
push
jnp
mov
in
mov
pusha
push
jle
adc
pop
cmc
dec
jmp
enter
lahf
lea
mov
call
sbbb
test
mov
mov
mov
cld
xor
mov
dec
pop
or
cmp
mov
xor
dec
add
xchg
add
push
inc
int
pop
stos
out
mov
loope
bnd
mov
pop
sub
imul
loop
fs
or
insb
pop
js
jo
dec
cmp
sub
xor
movsb
or
in
test
push
and
push
pop
jp
sub
sahf
pushf
mov
pop
clc
sbb
xchg
pop
jge
xor
icebp
inc
mov
or
sbb
dec
std
cltd
ljmp
mov
mov
loop
clc
sbb
sub
aaa
sub
test
adc
inc
push
jb
pop
xor
pop
add
mov
mov
or
jp
sbb
push
clc
sbb
xchg
stos
repz
adc
popa
stos
les
xlat
xor
inc
std
or
loop
jl
ss
dec
cld
mov
and
outsb
mov
inc
pop
add
jle
insl
bnd
das
mov
mov
sub
cmpsb
adc
inc
stc
cs
jns
call
pusha
mov
push
adc
outsl
xor
lret
outsl
and
or
add
sub
add
jge
cli
scas
xchg
iret
xchg
push
loop
xchg
jg
int3
aad
and
mov
xor
sbb
push
mov
xchg
xchg
or
aam
scas
and
les
movsl
fs
in
inc
loopne
jbe
and
xor
addb
pop
add
bound
xchg
je
push
neg
or
test
jnp
lock
shl
stc
ljmp
mov
fmulp
call
in
je
sub
sub
outsb
sahf
icebp
into
inc
loope,pt
push
cli
ret
jle
mov
sbb
and
out
rcr
loop
sahf
cmpsb
imul
xchg
ret
mov
shrb
adc
ret
rcl
lcall
fidivrs
dec
hlt
xchg
inc
jg
fildl
push
adc
sbb
pop
fldt
and
xchg
and
mov
xchg
rorl
lea
jbe
xor
std
dec
add
aas
xchg
pop
mov
insl
inc
lods
clc
test
stos
in
jo
sub
mov
lods
or
ja
sub
fcoms
mov
in
pop
fadds
sub
push
xorb
jg
jecxz
xlat
pop
mov
mov
mov
xor
je
pushf
mov
pop
shrl
sbb
dec
scas
or
lock
outsb
pop
outsb
and
mov
dec
test
mov
xchg
out
adc
out
add
daa
push
inc
and
testl
decl
stos
or
xchg
je
xchg
mov
mov
jbe
xor
fcmovne
fs
testb
js
jno
sti
jbe
fisttpll
xorl
mov
mov
rorl
cmp
das
jge
mov
stos
or
pop
push
rorb
cli
into
inc
jmp
gs
mov
push
gs
sbb
nop
jle
mov
xchg
dec
fstpl
jno
pop
nop
push
or
or
stos
xlat
out
or
xchg
mov
sbb
push
pop
xor
mov
push
hlt
jo
adc
lcall
test
lock
or
pop
mov
adc
push
push
dec
pop
cmc
inc
insb
js
xchg
jmp
ret
loope
mov
cmp
cmpsb
aaa
in
sub
cmpsl
and
mov
in
mov
lods
or
or
outsl
dec
mov
jae
aaa
ljmp
outsl
push
lahf
xchg
or
push
mov
push
lcall
dec
jno
fstl
jecxz
test
adc
int3
add
add
jo
call
xchg
dec
push
jns
xor
fiaddl
out
cmp
cmp
sub
dec
in
ffreep
sub
push
test
sbb
xchg
ret
in
jmp
adc
push
call
dec
push
sub
mov
mov
cmp
inc
add
call
ret
pop
aas
je
leave
mov
icebp
in
inc
rol
shl
hlt
inc
std
cmp
mov
dec
or
shrb
pop
and
and
inc
sbb
les
icebp
cmpsb
pushl
add
sub
cmpsl
lods
pop
push
inc
jle
jb
rcrl
pop
cs
sbbb
push
xchg
mov
jb
mov
aas
and
jmp
jge
mov
cmc
inc
cmp
pop
ljmp
aam
out
js,pn
xchg
or
xchg
push
fsts
outsl
add
and
inc
loope
push
and
std
mov
addr16
dec
test
repnz
or
stc
and
sub
aas
push
add
jp
add
je
nop
xchg
inc
adc
mov
or
mov
jg
sub
adc
pop
mov
adc
das
cmc
incl
test
jg
push
mov
adc
mov
mov
and
loop
aam
and
out
iret
inc
cmpb
jle
dec
shr
push
insb
xchg
pop
ss
dec
cmp
xchg
hlt
bound
test
mov
cs
pop
or
in
stc
sub
or
outsl
sbb
inc
mov
push
pop
fmuls
inc
sub
or
aam
idivl
test
mov
inc
adc
push
stc
stos
pop
xor
jb
pop
add
or
mov
cmp
jp
cmpsb
ljmp
call
add
push
mov
cmp
mov
lods
outsb
xchg
in
jmp
push
push
lock
imul
mov
inc
mov
aam
addr16
in
nop
repz
xlat
push
mov
gs
mov
test
insl
push
xor
inc
aaa
loopne
in
push
cs
dec
inc
adc
and
ds
repz
dec
mov
sbb
es
sub
pop
js
popa
into
fdivr
mov
pop
push
psubb
pop
pop
fs
in
cmc
mov
dec
dec
dec
in
rorl
and
hlt
call
jnp
mov
sub
cld
cs
add
jmp
pop
fists
push
cmp
pop
loopne
jg
je
sub
dec
lds
sbb
cltd
adc
popa
pop
shrb
sub
mov
stos
cmpsl
xor
add
loop
dec
push
cli
inc
test
daa
stc
pop
mov
sub
fists
mov
incb
push
int
cmp
std
movsl
sbb
inc
push
inc
mov
lcall
or
add
ljmp
adc
popf
xor
lret
and
sti
xchg
js
icebp
call
mov
mov
cmc
fwait
lret
jno
xlat
movsl
mov
insl
jecxz
and
xor
xchg
aas
push
out
sarl
push
cltd
incl
xchg
pushf
aaa
mov
icebp
mov
mov
shlb
add
mov
inc
push
nop
cmp
dec
enter
push
and
cli
scas
lea
stos
sub
add
out
pop
or
ret
push
add
xchg
cmpsl
push
xchg
out
sahf
push
andb
addr16
mov
shlb
cwtl
lahf
adc
adc
cmp
out
xor
cmp
dec
xchg
test
mov
and
push
insl
rcr
fidivrs
and
xor
jnp
cmp
test
inc
sub
sbb
pusha
and
pushf
pop
push
and
cs
jns
xchg
pop
fs
and
outsl
mov
hlt
dec
sub
sbb
cmpsl
sub
add
in
pop
mov
sub
mov
jns
in
call
stos
cmp
les
shrl
addr16
or
ss
xorl
addl
dec
test
mov
push
orb
add
jge
or
fidivrs
mov
mov
pop
cmp
sbb
das
sub
or
enter
push
or
xlat
xchg
imul
adc
incb
popf
jecxz
xorb
add
add
shll
fwait
out
or
dec
sysexit
rorl
sbb
adc
xchg
outsb
xor
es
std
push
mov
ror
mov
movsl
xchg
cld
pusha
adc
lock
ret
adc
push
ficoml
adc
daa
mov
and
pop
aaa
incb
std
push
cmp
fdivrs
outsl
push
mov
jb
lahf
add
stos
push
sub
repz
ljmp
aas
pop
pop
xor
rorb
mov
and
push
or
cld
lods
inc
pusha
js
inc
jmp
frstor
imul
fldl
inc
adc
lock
stc
add
pop
push
mov
test
mov
pop
mov
pop
divb
mulb
or
loopne
call
fadd
mov
call
test
pop
mov
lret
sbb
sahf
xchg
loopne
pop
iret
arpl
test
adc
push
fidivl
push
lea
lahf
cmp
cmp
jg
rcl
mulps
incb
dec
mov
loopne
mov
inc
js
mov
push
mov
mov
push
or
testl
js
addr16
cmp
cmpsl
popa
loope
jg
ljmp
inc
popa
loopne
faddp
pop
in
lods
push
mov
cmc
jb
mov
test
mov
add
mov
sub
jp
sbb
cltd
inc
cwtl
add
sub
imul
mov
arpl
aad
mov
scas
enter
mov
jmp
bound
fnstenv
orb
pop
xchg
or
cmp
or
and
sbb
mov
fldl
test
outsb
imul
push
gs
pop
adc
imul
add
xor
jmp
or
fs
mov
dec
mov
adcb
cmp
rcrb
or
sbb
stos
push
push
cld
fisttpll
dec
fnstcw
pop
xor
fidivl
push
mov
loope
ja
pop
mov
push
sbb
jne
aas
mov
xchg
add
decl
xlat
inc
pop
sbb
rclb
mov
imul
fucomp
xlat
pop
stos
das
sub
or
push
cmp
sub
mov
pop
sbb
and
adc
push
mov
hlt
xor
bswap
jnp
push
incl
add
push
dec
xor
or
inc
stos
std
aaa
mov
stos
or
xor
and
in
or
outsl
loope
adc
in
jg
inc
jnp
jge
and
sub
mov
mov
stc
jg
clc
xor
jbe
push
fcmovne
inc
xor
pop
lea
mov
bound
cmp
in
clc
decl
stos
xlat
add
xor
sbb
data16
lea
or
aaa
sti
sbbb
xlat
fisubl
shll
pushl
pushf
in
mov
dec
sbb
mov
xchg
int
jg
aaa
push
and
jae
and
adc
and
jp
inc
jbe
xchg
pushf
stc
call
decl
leave
inc
mov
xchg
xor
rolb
fnsave
stos
mov
cld
fstpt
jle
jp
aas
inc
out
fsts
movsl
or
mov
insb
outsb
xor
jecxz
out
mov
cld
inc
sbb
repnz
sbb
testb
mov
push
fildl
or
sti
les
or
xor
xchg
out
imulb
mov
jecxz
inc
addr16
add
xchg
imul
fcomps
inc
cmp
out
cmp
mov
adc
std
and
call
call
das
inc
jno
bound
pop
dec
test
pop
push
push
cwtl
adc
jns
incl
daa
jae
bound
addl
mov
data16
add
rolb
decb
test
sti
or
mov
addr16
inc
jmp
pop
in
mov
sbb
test
dec
inc
mov
in
imul
push
lds
push
shrl
movsl
ljmp
sub
mov
icebp
clc
mov
out
addb
lds
lods
inc
push
inc
fbstp
lock
cs
les
jmp
movsb
pop
adc
insb
mov
lahf
or
mov
pop
out
mov
aam
sbb
inc
rorb
gs
mov
mov
lock
jge
hlt
mov
xor
and
push
push
fld
es
or
adc
adc
xchg
xorb
add
stc
xchg
lock
cmp
push
gs
pop
mov
push
into
jno
fisubrs
je
push
push
out
ret
aam
test
push
cs
add
push
inc
push
call
ret
lods
test
push
ljmp
stos
iret
adc
mov
fsubrs
add
test
subl
insl
push
in
sub
int
mov
and
and
sbb
xchg
dec
pop
outsb
aad
cltd
push
stos
mov
movsb
and
jg
push
ret
sbb
sbb
or
mov
xor
pushf
daa
jns
sub
inc
mov
cmp
rorl
lods
roll
arpl
mov
jg
pusha
mov
push
popa
pusha
repnz
ljmp
pusha
sbb
sub
jb
xchg
iret
vcmpss
push
rcrb
xlat
pop
rolb
push
fcompl
idivb
and
aas
xchg
inc
pop
stc
gs
sub
je
testl
ss
add
cmp
outsl
je
cmp
rolb
xchg
lret
push
sbbl
imul
std
adc
and
add
fstps
imul
pop
pusha
lock
mov
dec
xchg
mov
jmp
insl
cmp
mov
xchg
cmp
mov
aad
xchg
stos
and
insb
in
mov
mov
cwtl
test
push
shll
sub
push
mov
pop
pop
aad
push
xchg
and
mov
cli
sbb
outsl
dec
xor
mov
popa
out
ret
push
ret
jo
lock
mull
adc
adc
inc
aad
mov
insl
mov
bound
out
and
xchg
xchg
stos
mov
pop
xor
sbb
inc
pushf
bound
in
pop
adc
sub
jb
loope
les
decl
movsb
dec
roll
ffreep
notb
daa
lock
mov
cmp
and
jmp
jmp
mull
or
push
lods
inc
inc
out
int
pop
ficoms
adc
mov
cwtl
in
cld
and
jb
loopne
dec
and
lea
dec
adc
cmp
mov
add
mov
hlt
add
mov
sarb
sub
dec
and
jl
test
adc
into
jp
aaa
lcall
jmp
add
push
ja
dec
mov
stos
pop
fsubl
gs
pop
pop
insl
mov
push
mov
and
icebp
adc
test
pop
addb
push
stc
dec
mov
xor
pop
pop
xchg
push
mov
or
dec
inc
sar
cmpsl
dec
int3
jmp
clc
push
insb
add
mov
mov
cwtl
or
mov
cwtl
loope
pop
mov
and
testb
sbb
add
and
inc
js
mov
push
mov
jmp
lea
cmp
popa
jge
jp
add
call
mov
add
call
or
jl
loop
loope
mov
sub
dec
mov
in
mov
push
inc
pop
jecxz
dec
lock
imul
push
test
pop
add
jg
push
cmp
jp
inc
outsl
movsl
sub
adc
or
jmp
adc
sbb
adc
imul
inc
fisttpll
mov
stc
orl
mov
out
js
push
xor
aas
and
mov
mov
hlt
adc
sbb
adc
xor
mov
loop
and
pop
dec
mov
mov
sbb
shr
pop
xor
sub
lret
lahf
clc
jmp
jle
xor
mov
xor
cld
test
mov
popf
inc
jne
decl
aaa
pusha
setge
xor
jmp
mov
ret
jecxz
pusha
mov
enter
or
test
lcall
jg
enter
decl
shlb
shrb
movsl
xchg
mov
add
cmp
aad
pop
nop
xchg
sbb
cmp
ficoml
mov
aas
xchg
jns
repz
mov
cmp
insb
cmp
sahf
mov
mov
sbb
dec
out
sbb
insb
mov
add
int
lods
jle
jmp
adc
sub
aaa
mov
shlb
loopne
dec
push
cmp
popf
or
fimull
or
daa
mov
outsl
outsl
jecxz
fstl
pusha
test
pushf
bound
inc
rcr
pop
xor
jmp
bound
jecxz
loope
stos
jmp
mov
xchg
mov
jecxz
sbb
scas
cmpsl
fcompl
cmp
cmp
mov
out
leave
arpl
cmp
mov
mov
sub
lock
mov
xchg
cltd
aas
sbb
arpl
sbb
test
inc
nop
cmp
sub
dec
sbb
out
std
sbb
cs
cld
xchg
addr16
out
int3
repnz
dec
gs
ret
ds
adc
cmp
lcall
inc
ficoml
adc
call
adc
in
addr16
mov
lret
push
xor
popf
mov
adc
les
push
or
pop
sbb
push
sbb
das
insb
add
stos
jb
stos
stos
cmc
in
mov
hlt
loopne
clc
out
xchg
rolb
mov
insl
sub
xchg
cmpsb
inc
aaa
add
mov
mov
fdivrl
lock
sub
cmpsb
and
mov
jg
test
mov
add
aad
das
inc
or
andb
pop
jne
fcom
push
sbb
cld
mov
frstor
fwait
push
xor
add
sbb
fsubl
inc
imul
xor
fadd
repnz
pop
sbb
inc
mov
jecxz
push
mov
xchg
lock
insb
jmp
decl
xchg
loopne
mov
cmc
mov
pop
in
andl
adc
imul
and
subl
hlt
das
std
out
adc
int
ret
loope
lods
movsb
cmp
popl
jne
testb
push
scas
mov
shrb
mov
in
pop
ljmp
incl
xchg
cmp
xlat
inc
int3
and
ret
call
insl
lods
sbb
mov
mov
adc
mov
aas
scas
or
dec
ja
sub
mov
sbb
stc
and
pushf
xchg
in
test
rolb
loop
pushl
aad
movsb
sub
dec
dec
pop
jecxz
mov
xor
ret
xchg
jbe
cld
fisttps
xchg
addb
pusha
mov
pop
rcr
add
ret
sub
dec
or
stos
rcll
lea
sbb
repz
sysenter
cmc
pushf
int3
syscall
or
mov
mov
pusha
je
sbb
mov
loopne
add
push
xchg
xchg
xor
cli
daa
cmpsb
adc
adc
idivb
test
fbstp
or
rcl
pushf
and
lcall
mov
jecxz
dec
mov
cmp
jo
jmp
pop
inc
lahf
lcall
cmpsb
movsl
xor
out
or
in
insb
xor
je
and
ja
ljmp
push
pop
sbb
lret
dec
test
dec
dec
push
adc
rorb
mov
mov
mov
push
lahf
outsl
sbb
inc
mov
imul
into
mov
dec
dec
rcll
lcall
fdivr
fnstcw
adc
cmp
and
sahf
inc
adc
inc
std
mov
sbb
fsts
inc
sbb
and
xchg
pop
or
xchg
dec
mov
cs
lods
sbb
fcmovbe
jg
and
aam
enter
pop
aad
xor
jo
cmpsl
fisttpll
sti
icebp
pop
cmpsb
outsb
xchg
popa
into
inc
inc
jmp
jo
fistpll
and
sbb
call
je
pop
mov
sub
sub
mov
insb
mov
adcb
mov
and
icebp
add
and
adc
popf
ret
adc
lea
rcrl
jne
push
or
mov
les
repz
lock
mov
adc
dec
sahf
scas
icebp
lods
aaa
lock
lret
cmp
orb
movsl
cmpsl
loopne
xor
pusha
sbb
inc
shrl
hlt
sbb
mov
add
data16
xchg
push
xor
pop
or
sbb
mov
shr
sbb
cmp
push
sbb
je
fiadds
cmp
push
jmp
adc
test
sbb
test
pop
xchg
jnp
add
insl
or
hlt
inc
fs
or
sub
adcl
rorl
leave
jo
push
dec
dec
fs
jg
jno
hlt
mov
repz
scas
push
nop
push
dec
mov
sub
jno
jecxz
sti
nop
test
shrb
mov
mov
lods
pop
push
mov
stos
jmp
test
cmp
cld
pop
jmp
or
dec
push
in
push
inc
jns
pusha
cli
jo
mov
push
andb
in
fistpll
pop
lret
sub
mov
jb
in
and
rcll
int3
mov
mov
ja
jmp
sbb
pop
mov
dec
add
je
fisubrl
imul
sub
outsb
mov
mov
cmp
add
cs
stos
xchg
mov
mov
test
push
jmp
pop
mov
mov
loopne
dec
dec
pop
add
lock
outsl
sbb
xchg
fdivr
test
in
jl
lret
aam
and
lds
inc
or
fwait
pop
adc
scas
test
add
mov
jge
sbb
js
and
pushf
call
or
in
into
aaa
jne
int3
popf
mov
je
xor
dec
or
mov
bound
mov
in
ficoml
icebp
jg
push
sbb
mov
xor
cmpsb
add
adc
xchg
dec
sbbl
and
jle
call
orb
push
jo
aaa
lret
inc
lods
outsb
jge
xor
pusha
test
inc
call
dec
cmp
or
adc
pop
inc
in
ds
mov
lcall
ret
daa
sbb
push
pop
dec
sti
sub
je
outsl
jge
pop
and
push
dec
push
or
xor
out
sbb
mov
inc
sbb
jmp
sbb
dec
jae
lret
sub
inc
mov
mov
xchg
sti
nop
mov
inc
outsb
adc
jbe
fidivrl
cwtl
rorb
xchg
dec
xor
push
mov
jmp
test
xchg
arpl
sti
ffreep
inc
shrb
repnz
insb
pushf
icebp
movsl
das
lock
lcall
adc
imulb
push
test
bswap
dec
std
or
xor
rorb
ja
push
lret
icebp
int3
in
xchg
outsb
push
int
mov
stos
nop
xor
sbb
lds
aas
or
pop
aaa
imul
cmpsb
inc
cmc
and
mov
xchg
and
pop
fisttpll
in
stos
sti
dec
jg
repnz
mov
scas
sub
mov
mov
clc
or
cmpsb
dec
mov
dec
xor
dec
inc
lcall
mov
ljmp
in
inc
mov
fisubl
icebp
clc
aaa
mov
adc
sbb
push
sbb
jecxz
cmp
and
jo
cmp
mov
movsl
dec
pop
pop
xlat
mov
imul
jle
ss
lcall
sub
mov
add
or
cld
fisttpl
ficoms
cltd
pop
fisubl
pushw
or
mov
sub
inc
jne
mov
jb
xchg
mov
push
and
xor
mov
mov
mov
out
sbb
aad
aam
sub
push
hlt
pop
xchg
outsl
xchg
bts
jne
pop
subb
int3
push
aaa
insl
and
daa
out
inc
xchg
imul
xchg
cmpsb
das
mov
and
xchg
inc
pop
cltd
or
bound
mov
dec
adc
or
bound
push
pop
hlt
dec
das
inc
sbb
pushf
flds
dec
fs
into
pop
or
mov
sub
call
ret
jno
out
roll
fadds
mov
addr16
push
loop
addr16
jnp
in
out
pop
inc
sub
iret
test
add
jo
jecxz
dec
fimull
adc
push
cmpl
fcmove
and
mov
lcall
and
and
add
cmp
out
les
dec
jg
stos
add
or
cmp
fidivrs
inc
mov
bnd
mov
andl
sbb
add
aad
out
testb
scas
inc
loope
mov
iret
cs
push
lds
mov
pop
cmp
adc
mov
fisttpll
rcrl
das
pop
mov
cmpsb
add
dec
jg
ret
rorl
je
fs
ficoms
ret
les
jb
xorb
mov
cs
xchg
call
xchg
add
stos
and
jge
sti
xor
push
dec
shl
lods
dec
lret
mov
add
sbb
pushl
mov
jo
imul
jmp
fsubs
push
mov
out
and
iret
add
fwait
pop
test
and
dec
fistl
js
add
je
inc
repnz
out
cli
ljmp
mov
sub
sub
mov
frstor
dec
jo
or
jnp
cmp
lock
lret
cltd
jecxz
push
je
rcll
pop
push
lahf
repnz
fbstp
push
test
mov
dec
push
popf
cmp
xor
in
aaa
dec
pop
test
sub
add
xchg
jg
add
nop
das
je
dec
push
les
mov
add
call
pop
mov
lock
cli
push
aas
push
xchg
aad
adc
and
orl
pop
add
add
push
pop
mov
ja
sti
sbb
inc
mov
fxch
jne
test
cmpsb
xchg
mov
mov
daa
cmp
pop
mov
std
pop
addl
or
fisttps
ficoml
cmc
mov
movsl
out
jg
fdivr
dec
sbb
or
and
mov
rcll
cmp
inc
shlb
pop
jg
jno
test
jg
or
sbb
pop
ss
in
push
std
decl
test
add
inc
inc
ljmp
aas
xchg
mov
jb
and
sub
test
fs
clc
fildll
add
dec
out
leave
popf
inc
clc
lret
add
sbb
sub
adc
or
inc
outsb
aaa
fiaddl
pop
adc
sahf
mov
mov
mov
mov
jb
ror
push
add
insb
in
jbe
enter
push
push
sbb
xchg
popa
adc
sub
imul
rcl
lods
fnstsw
mov
adc
dec
jecxz
jg
jns
dec
mov
push
xchg
xchg
xor
pop
mov
adc
sahf
adc
lock
xor
fsubrs
pop
sub
mov
in
jmp
cli
nop
push
insb
or
pop
cmp
lcall
movsb
mov
dec
sub
or
mov
cmp
test
or
pop
cmc
cmp
push
mov
cli
sbb
mov
xchg
clc
dec
in
js
aam
mov
inc
cmc
sub
imul
int
or
mov
lcall
pusha
ret
fsub
incl
out
and
add
ja
mov
xchg
movsl
aaa
pop
lods
inc
inc
cs
jne
outsl
daa
imul
inc
out
add
out
lods
fildl
add
xor
and
xor
inc
push
cmc
jge
sub
inc
scas
push
xchg
pop
testl
jg
outsl
test
mov
mov
loope
adc
notb
mov
es
stc
mov
insb
outsl
mov
inc
mov
lds
mov
pop
daa
mov
setno
dec
inc
push
and
inc
xchg
ficoml
out
test
push
lods
inc
dec
fs
cmp
lret
cmp
adc
dec
or
insb
aaa
les
mov
inc
xlat
xor
sub
cli
inc
mov
sub
xchg
add
das
stos
roll
les
cmp
nop
mov
cs
pop
jmp
shll
and
jl
cmp
std
mov
es
push
xchg
lock
adc
aaa
xor
mov
enter
aam
dec
push
push
shl
pop
add
add
push
sbb
sbb
fmul
movsl
mov
mov
or
or
xchg
cwtl
dec
je
jp
jbe
inc
xlat
gs
addl
rorl
pop
outsl
fdivr
hlt
int
mov
xor
movsb
ja
jecxz
push
outsl
subl
in
orb
xchg
mov
push
mov
jg
mov
out
pop
hlt
add
fisubrs
jne
mov
fs
mov
lahf
jbe
dec
inc
jecxz
mov
pop
mov
pop
loopne
cld
and
or
xor
cmp
push
imul
jmp
je
push
repz
push
insl
cmp
push
pop
ja
xor
fwait
jb
jg
xchg
pop
push
push
jne
xor
hlt
cmp
ret
push
or
jne
stc
insl
cmc
inc
inc
nop
iret
dec
sub
pop
pop
insb
enter
ljmp
bound
xchg
mov
or
pop
into
popf
out
xor
ljmp
adc
jb
fbstp
xchg
mov
xchg
jle
xchg
jp
dec
mov
adc
xchg
mov
xchg
inc
push
jg
cld
repz
ret
movsl
jle
bound
xchg
sbb
xchg
mov
mov
jno
and
mov
aad
into
inc
scas
fisttpll
sbb
mul
add
sbb
sub
push
dec
rcrl
sbb
inc
xchg
cld
les
mov
stos
inc
xor
aam
decb
lea
mov
xor
xor
add
mov
adc
cmpsl
sub
xlat
mov
pop
jecxz
sub
sbb
clc
mov
and
idiv
in
xor
adc
rol
outsl
and
dec
lds
cltd
out
pop
add
mov
outsb
push
hlt
ljmp
inc
in
fbld
out
or
rcrb
ljmp
sub
lcall
ss
jg
jmp
mov
adc
add
inc
ljmp
les
push
mov
cmpb
sub
aaa
sub
inc
ret
gs
mov
adc
nop
adc
push
xchg
mov
mov
pop
xchg
inc
or
jg
sbb
pushf
push
fwait
pop
sub
xchg
xor
pop
push
dec
ja
rcrl
add
mov
iret
push
jg
add
std
js
inc
movsl
xor
mov
and
leave
adc
push
sbb
orb
clc
ja
mov
mov
nop
into
dec
mov
jne
into
inc
mov
in
xor
xchg
sahf
movsl
jnp
xlat
jo
xor
jne
or
push
js
rol
add
dec
push
sub
pusha
hlt
test
mov
nop
mov
jns
xchg
mov
dec
push
cmp
sub
cmp
push
cmp
and
inc
mov
mov
pop
test
mov
mov
jne
and
in
pop
push
xor
mov
arpl
cld
das
push
xor
xor
mov
clc
fildll
outsl
fmull
sbb
jns
xor
or
sbb
xor
popf
dec
jbe
iret
test
xor
in
cmc
or
leave
les
jge
outsl
pop
xlat
cld
mov
adc
jge
adc
incl
cwtl
inc
sahf
jns
nop
rcr
dec
es
outsb
add
mul
push
fwait
popa
mov
mov
jb
xor
fisubs
sub
call
dec
cmovae
mov
cmp
cs
dec
mov
out
or
dec
push
cmp
ret
push
ret
fisttps
jbe
or
inc
push
push
pop
ficomps
mov
in
in
mov
out
cmpsb
orb
xchg
push
inc
pop
pushf
fdivr
inc
jmp
inc
mov
dec
jbe,pn
test
adc
cmp
fcompl
movl
rol
jae
pop
flds
das
fcoml
push
pop
es
test
sbb
push
clc
jb
or
xchg
push
jle
sbb
pop
stos
decl
test
call
orb
pop
jl
ljmp
inc
sbb
xor
mov
insb
stos
les
xchg
inc
cld
mov
fldl
jnp
sti
gs
sub
jg
cmp
and
div
dec
loope
mov
dec
fiadds
push
loopne
sub
js
push
sbb
jb
mov
push
fcomip
dec
pop
movsl
aas
or
and
sbb
xchg
mov
bound
pushl
jae
mov
adc
push
push
jne
mov
sbb
mov
scas
fiaddl
inc
daa
mov
jg
or
push
ds
push
subb
mov
clc
ret
jp
jo
stos
push
testb
jg
mov
xchg
js
pop
sbb
incb
shrl
ja
ss
lods
ds
inc
adc
mov
pop
mov
lods
int3
cld
xor
clc
ret
add
inc
mov
and
and
jmp
mov
cs
lret
mov
pop
shlb
push
push
idiv
jo
sub
mov
add
sarl
xchg
sbb
icebp
test
sub
imul
xchg
mov
dec
mov
mov
bound
push
mov
push
jecxz
fnstsw
mov
sbb
and
pop
lods
adc
loopne
mov
xchg
js
stos
inc
push
aaa
mov
test
addb
push
jne
dec
sub
or
stos
mov
dec
icebp
pop
cmpsb
mov
lcall
mov
mov
les
xchg
cltd
pop
jmp
arpl
xchg
push
nop
add
das
add
pop
or
push
mov
adc
xchg
adc
pop
mov
decl
mov
mov
dec
lcall
fnstenv
cmpsl
cmp
sbb
adc
sbb
adc
mov
adc
cli
or
outsl
std
lcall
aad
cld
out
jecxz
inc
mov
fstpt
add
lea
sbb
ljmp
jnp
inc
cmc
or
inc
insl
inc
cmp
shll
or
mov
aad
shrb
cmc
test
inc
insb
aad
jnp
es
mov
out
negl
shrb
fcomp
or
outsl
movsb
aaa
pop
andb
mov
dec
loopne
jle
inc
lahf
out
stc
pop
cmp
mov
lods
fstpt
arpl
push
pop
out
inc
add
or
add
jle
rcll
adc
push
mov
loope
add
lcall
xchg
pop
clc
mov
pushf
pop
pusha
enter
lods
mov
add
cmpsb
sbb
and
rclb
jle
out
aad
leave
out
aas
pop
enter
xchg
clc
outsl
insl
repnz
xchg
xor
mov
ljmp
add
scas
les
inc
insb
push
outsl
push
jecxz
movsb
jns
das
dec
jl
mov
lret
fisttpll
sub
pop
lds
or
js
xor
cli
mov
mov
cld
adc
or
cld
mov
xchg
xchg
xor
pop
add
dec
or
inc
out
les
xchg
shl
aaa
test
cmpsl
jae
mov
aaa
bound
jg
push
cmpsl
or
mov
adc
cs
push
insl
leave
std
int3
icebp
adc
adc
orb
add
push
testb
jl
pop
push
mov
cltd
jmp
lods
jns
cmc
mov
test
loope
insb
iret
dec
mov
jge
out
or
fiaddl
jge
ja
mov
insl
adc
fildll
std
or
mov
jle
mov
adc
loopne
push
add
jg
pop
mov
mov
lds
mov
sbb
pop
insb
out
cmp
cs
sub
stos
mov
adc
or
xchg
dec
sub
cwtl
jle
out
push
loop
mov
inc
sub
cwtl
xchg
imul
nop
not
lret
pop
jl
and
push
mov
mov
jbe
movsl
cmp
rclb
cmpsb
ljmp
or
mov
mov
inc
or
call
js
in
mov
xchg
push
add
fiadds
xor
and
or
ret
fbld
pusha
sarb
xor
push
lods
inc
jp
mov
inc
andl
inc
call
sarb
scas
mov
negb
xchg
push
sbb
lock
call
push
mov
out
xchg
jnp
pop
sub
mov
jb
call
xchg
movsb
in
xchg
call
jns
cmp
xor
xchg
arpl
cld
jmp
lahf
push
mov
add
xor
lret
mov
lcall
fstps
sbb
lahf
test
and
and
lods
mov
sbb
in
push
adc
cmp
aas
push
jae
adc
and
mov
pop
adc
hlt
inc
cmpb
ja
sub
mov
push
fwait
mov
int3
std
push
addr16
std
xor
xchg
sbb
push
mov
and
pop
std
jg
fstpl
outsl
jp
mov
adc
out
icebp
pop
mov
jo
fwait
aas
int3
sub
dec
pop
and
lcall
lcall
adc
stc
pop
bound
mov
jns
testl
cmp
xor
clc
scas
rolb
mov
pushl
not
or
push
cmpl
push
mov
sti
insl
movsb
aad
push
addr16
hlt
push
or
xchg
fists
aaa
mov
loope
mov
out
add
pop
subb
shlb
cmpsb
sbb
lods
aaa
mov
and
and
pop
inc
es
inc
add
gs
xchg
stos
mov
sbb
mov
or
cmp
and
popf
lea
add
gs
hlt
push
xor
add
pop
movsb
sub
incl
fldt
test
popf
lahf
mov
cmp
or
aad
mov
mov
rcrl
sbb
in
inc
outsb
inc
and
push
sbb
push
shlb
ret
cmpsl
inc
sbb
cmpsl
sbb
inc
je
dec
not
mov
fdivp
cltd
sub
mov
jns
call
adc
ret
fisubrs
cli
insl
testb
or
mov
andnps
xchg
pop
das
inc
test
subl
and
adc
ja
test
mov
lea
pop
cmp
push
loope
clc
xchg
insb
lds
scas
jb
das
shll
popa
ljmp
movsl
fidivrs
movsl
cmp
jmp
sbb
mov
mov
cmp
mov
cmp
es
aad
repnz
fistpll
push
pop
ret
insl
mov
sahf
xchg
jecxz
cmp
das
icebp
daa
or
cwtl
xchg
jb
mov
xchg
aas
and
xor
adc
pop
fcoml
insl
cmp
ja
add
aas
mov
lahf
fsubs
ret
insb
inc
push
add
or
jle
lea
outsb
jecxz
dec
fdivrl
jae
int3
fdivrs
fildll
rcrb
lea
sbb
repnz
mov
outsl
xor
pop
in
dec
cmp
movl
test
inc
dec
scas
call
or
mov
xchg
shrb
mov
adc
cmp
push
push
sbbb
dec
xlat
jno
insb
and
xor
jnp
push
mov
sbb
dec
jne
mov
mov
outsl
pusha
lods
nop
pop
cld
loope
jns
adc
mov
mov
test
pusha
xchg
pop
push
mov
pop
mov
or
xor
addr16
dec
push
mov
ds
faddp
mov
hlt
adc
ret
dec
gs
cmp
jge
adc
cltd
sub
hlt
aaa
adc
ds
ret
lds
cmc
push
pop
sub
sbb
sub
mov
aas
sub
cs
pop
clc
xchg
lret
sbb
das
out
mov
inc
add
lods
filds
mov
dec
mov
ret
stc
xor
xchg
push
lcall
jno
andl
add
mov
adc
js
jge
jo
cli
push
call
or
xchg
xor
scas
jo
inc
inc
xor
mov
adc
dec
cmp
adc
push
inc
fstp
lret
jecxz
push
pop
cld
ljmp
xchg
mov
sub
mov
imul
nop
cmp
cmp
imul
sub
pop
pop
rcl
lods
rcr
pop
push
mov
xor
xor
stos
add
mov
inc
shl
data16
out
test
outsl
fbstp
sbb
and
mov
fdivrp
in
lods
adc
jno
adcl
es
cld
fstpt
adc
in
add
outsl
jno
lods
pop
add
cli
pusha
iret
push
fs
mov
jnp
adc
push
std
jg
pop
js
lcall
xor
mov
fsub
and
xor
lcall
lcall
or
or
adc
push
xchg
jle
in
test
ljmp
rcrb
cmpsb
add
mov
jmp
pop
adc
ljmp
push
xchg
or
test
fucomp
test
je
ja
jne
subl
sbb
rolb
sbb
clc
popf
dec
scas
cltd
rorb
shrl
ljmp
outsb
outsb
je
les
mov
and
imulb
cmp
or
mov
and
outsl
ja
filds
cwtl
dec
mov
fs
pop
andb
clc
test
mov
xor
insb
add
mov
ljmp
dec
mov
cli
and
ffree
mov
adc
cmp
mov
popf
mov
adc
jbe
pop
mov
incl
jbe
xchg
mov
cmp
pop
cmpb
xlat
fiadds
loope
out
push
pop
fcompl
jo
mov
inc
push
mov
mull
mov
lods
push
neg
inc
add
inc
mov
jne,pn
les
jbe
movsl
movsl
leave
sbb
sbb
jecxz
out
push
push
fdivrl
imul
mov
inc
lahf
fimuls
lea
icebp
pushl
push
shll
inc
fsubrl
push
jbe
ds
push
fs
pushl
imul
add
enter
pushf
inc
add
pop
pop
xor
dec
inc
xor
xchg
cmp
push
dec
xor
leave
pushf
pop
mov
negb
add
add
xchg
clc
lcall
adc
jp
dec
add
pop
mov
add
sahf
fs
push
jecxz
pop
inc
pop
clc
fucom
in
xchg
jp
fwait
and
cli
mov
shl
add
inc
popf
icebp
and
insl
adc
mov
push
aaa
adc
popa
pusha
mov
mov
jle
stos
pop
sbb
cli
dec
xor
popf
clc
pusha
cmp
push
fadds
xchg
add
mov
adc
ret
repz
je
in
fiaddl
es
dec
cld
jg
std
sbb
push
jne
shlb
nop
into
mov
cli
cltd
mov
mov
mov
xchg
sub
push
cmp
cmpsb
aaa
js
fists
cmp
mov
gs
hlt
or
imul
jo
sbb
lret
je
pop
cmp
fwait
in
mov
fcmovnu
pop
adc
mov
or
mov
push
push
mov
and
in
or
jl
inc
adc
insl
test
jl
push
mov
aas
hlt
jae
in
dec
daa
mov
nop
loope
std
push
pushl
or
inc
dec
xchg
pop
movsl
cmp
pop
mov
mov
loop
mov
imul
dec
lods
incl
mov
cli
inc
inc
xor
into
bound
sub
ljmp
push
xchg
jbe
fstpl
aam
int
lea
pop
mov
int
pop
fnsave
inc
fistl
repz
lods
mov
ds
sarl
push
mov
pop
push
mov
loope
arpl
cwtl
mov
sarb
inc
jbe
stos
xchg
imul
decl
cltd
push
push
leave
stos
push
mov
das
outsl
mov
sub
ss
push
inc
sub
sub
lods
scas
sbb
cmp
subl
mov
repnz
je
inc
and
fwait
or
push
into
test
adc
ret
les
std
fstpt
addb
pop
cmp
pop
test
icebp
incl
js
aas
popa
adcl
popa
out
sbb
mov
mov
add
icebp
mov
cmp
fucomip
mov
and
pop
or
xor
inc
cmp
cmc
mov
mov
dec
or
sbb
or
clc
adc
lods
xor
loop
shl
test
mov
adc
das
add
push
sbb
or
sub
cli
icebp
dec
dec
jo
jmp
add
dec
jae
jecxz
pushl
shll
cwtl
sub
loopne
push
psrad
mov
idivb
nop
mov
nopl
cmp
jae
inc
mov
pusha
lods
pop
mov
inc
loope
and
dec
sbb
jg
cmc
lahf
test
pop
scas
pusha
adc
add
outsb
sbb
das
movsb
jno
dec
movsb
inc
pop
stc
cmp
jmp
inc
aad
add
mov
cwtl
push
hlt
pushl
popa
sbb
add
dec
jbe
aas
xor
mov
inc
inc
jno
adc
out
imul
sub
dec
cld
sbb
jne
sti
aam
add
stc
jnp
std
movsb
pop
jg
pop
loop
mov
call
stc
dec
sub
fcompl
outsl
mov
mov
push
je
or
outsb
jl
inc
add
pop
adc
mov
jmp
test
mov
jno
loope
pusha
inc
push
iret
inc
repnz
jp
mov
mov
xor
push
sbb
adc
jle
movsb
sti
pop
push
rcrb
mov
and
push
inc
push
adc
or
ljmp
adc
cmp
pop
in
incb
test
xor
stc
xchg
mov
pop
dec
idivb
pop
mov
repnz
outsb
pushf
imul
ret
insb
mov
ja
pop
push
jp
lahf
pop
add
mov
fnstsw
jnp
cwtl
jb
inc
sub
loope
jle
add
jmp
lea
call
jnp
adc
dec
es
add
movsl
push
cltd
mov
jns
adc
xchg
jg
stos
adc
jns
pop
dec
aas
test
mov
ja
mov
fisttpl
add
push
fnstcw
out
cli
adc
mov
lods
inc
aaa
inc
and
aas
lock
and
xchg
ret
pop
adc
in
in
popa
jb
adc
divb
test
cmp
incl
xchg
rcrb
mov
xor
push
ss
lcall
push
dec
sarb
cltd
and
push
pop
add
stos
popf
pop
scas
and
and
stos
add
lcall
outsb
cld
jp
rcll
add
or
mov
mov
xor
jbe
inc
add
pop
add
loope
add
jmp
stos
sar
lcall
mov
in
or
nop
add
push
mov
or
sub
adc
loopne
inc
std
decl
pop
cmp
enter
out
cmp
sub
addr16
loopne
cmc
xchg
dec
or
rolb
push
outsb
add
insb
flds
dec
lahf
das
cld
pop
in
jg
sbb
xlat
fisubrs
jmp
push
call
sub
ret
push
cmp
cs
outsl
rorl
sahf
lret
bswap
aaa
fwait
cmp
cmpsb
or
lods
addr16
movb
lret
push
aaa
sub
lahf
es
or
sbb
lcall
sub
push
stos
dec
mov
jecxz
jl
pop
clc
mov
lret
inc
iret
xchg
add
decl
xor
les
adc
add
jo,pn
adc
aas
mov
mov
add
js
xchg
popf
mov
xchg
inc
jg,pt
pop
filds
fistpll
and
jbe
icebp
xchg
jns
in
push
leave
cmp
dec
test
pop
icebp
je
pushl
insl
fstl
mov
push
mov
inc
rolb
add
mov
fstps
xor
cmp
in
push
fldt
icebp
cwtl
xchg
lock
inc
movsb
cmp
call
lea
mov
je
inc
ret
push
lea
cld
pop
add
fimull
dec
pop
mov
ljmp
mov
dec
add
jo
ljmp
pop
addr16
mov
and
add
push
jb
pop
hlt
push
mov
push
push
cmp
pop
jl
lods
jg
inc
mov
nop/reserved
aad
out
out
cs
adc
ljmp
cmp
dec
push
insl
mov
jo
jle
fldl
test
mov
std
mov
iret
in
mov
loopne
icebp
gs
stc
and
mov
aaa
outsb
xor
cmp
popa
fisubrs
outsb
mov
xchg
loop
fistpl
out
cmpb
movsb
shlb
rorb
mov
rorl
cmpb
enter
add
insl
jmp
in
xchg
jbe
inc
cld
lods
test
ljmp
jo
pop
out
dec
sbb
pop
lcall
lods
jns,pn
sbb
xchg
out
push
or
loope
pop
loop
cmp
jge
adc
ljmp
mov
lea
dec
nop
adc
sbb
jno
mov
in
es
ljmp
xor
je
std
mov
bound
ret
cld
mov
std
push
mov
jo
jmp
add
in
push
lret
add
push
daa
cltd
sub
jl
ja
out
sub
mov
mov
inc
sbb
lahf
stos
mov
and
fidivs
std
scas
mov
cmp
popf
stc
or
sub
lret
inc
je
and
add
and
and
pop
rcll
stos
rcr
imul
outsl
push
cmp
xchg
cmp
mov
dec
into
and
mov
add
sub
sub
test
das
insb
adc
out
addr16
adc
mov
outsl
hlt
mov
inc
or
arpl
popf
mov
outsb
mov
cld
add
jmp
mov
sbb
sti
mov
nop
test
fsubrp
jg
dec
jb
xchg
adc
lds
xchg
aas
lea
aad
aaa
add
mov
repz
xor
xrelease
inc
scas
movsl
mov
mov
lcall
push
shll
and
cmp
rcll
les
xchg
int3
xor
ja
mov
and
cmp
pop
add
or
mov
mov
or
repnz
add
xor
aad
xchg
jl
xchg
push
cli
pop
jbe
aam
or
or
or
ljmp
int3
loopne
jns
sub
imul
into
mov
aam
cmpsb
jg
push
enter
test
adc
repnz
pop
pusha
xor
push
fldz
adc
jg
adc
fdivs
scas
jae
sub
scas
lock
xor
jge
icebp
mov
dec
jb
mov
mov
stos
mov
orl
sbb
incl
dec
pop
loopne
pushf
jne
ds
xor
add
in
push
mov
data16
mov
mov
outsl
adc
mov
jnp
mov
and
fadds
pop
jo
and
test
les
mov
cmc
stos
loopne
not
or
or
in
pop
or
leave
xchg
stos
xchg
rorb
mov
rcl
addl
inc
pusha
lcall
sbb
xor
sub
dec
or
dec
pop
xchg
clc
lret
rcrl
les
ja
int3
das
inc
stos
sbb
nop
sub
mov
push
aam
jbe
mov
lcall
lods
inc
pop
mov
icebp
sbb
or
test
fstpt
mov
clc
mov
pop
sub
jle
out
ljmp
sbb
insb
inc
pop
out
das
ss
into
pop
sub
mov
and
clc
loope
jl
inc
call
push
faddl
stos
add
jae
mov
into
push
into
int3
mov
jl
push
mov
pop
xchg
add
dec
or
sub
push
xor
jle
push
pushl
push
lods
loopne
hlt
add
sarb
adc
sbb
iret
and
shlb
jns
add
xchg
test
outsl
jmp
icebp
xor
pop
mov
push
icebp
fiaddl
jecxz
pop
scas
divb
sbb
pop
sub
lods
jmp
add
jecxz
mov
inc
pop
fimull
mov
mov
dec
xor
mov
mov
inc
pop
cli
pop
inc
scas
inc
sbb
idivl
xorb
push
aas
adc
cmp
mov
enter
add
jnp
sbb
jno
ljmp
sub
push
lahf
push
int
mov
push
testl
ss
pushf
je
inc
add
nop
fdecstp
out
xchg
aam
aas
pusha
andl
pop
pushf
jmp
push
pop
setae
adc
hlt
add
or
bnd
mov
fadds
gs
mov
sub
dec
adcl
mov
nop
mov
out
sub
mov
sbb
mov
fcmovnb
mov
jmp
enter
arpl
and
out
mov
lods
test
adc
sti
movsb
push
add
pop
mov
fwait
gs
sub
fcompl
popf
cmp
call
pop
dec
push
mov
push
enter
mov
sub
pop
daa
aaa
add
daa
or
fabs
aad
sbb
dec
add
sbb
xchg
lret
stc
push
push
mov
clc
and
xor
and
mov
and
mov
sub
stos
shll
sbb
xor
cmc
pop
mov
mov
in
rcll
pop
call
inc
jnp
ret
in
mov
mull
shrb
imul
in
clc
push
shll
cmp
hlt
mov
sbb
and
cmp
mov
or
add
clc
pop
loopne
lret
lahf
mov
jbe
outsl
js
ror
adc
jl
jge
cltd
hlt
decl
mov
xchg
inc
pop
in
je
adc
movsb
test
arpl
std
into
mov
cs
add
clc
outsl
jno
int3
xchg
push
adc
push
inc
lods
and
out
lds
je
add
outsl
sbb
push
add
push
jecxz
repz
in
cmp
sub
out
popf
loop
sti
cmp
or
lea
test
dec
jbe
sbb
outsl
add
mov
pop
xchg
cmpb
xor
inc
mov
dec
shrl
loop
lods
mov
xor
mov
lods
push
mov
pusha
out
adc
pop
sub
sub
mov
mov
inc
dec
add
adc
adc
or
push
decl
outsl
push
pop
idivl
andl
jge
stos
arpl
rcll
inc
jbe
fisubrs
je
dec
mov
mov
and
pop
cmc
mov
fs
mov
jge
dec
pop
xor
movsb
aad
push
push
ds
mov
cwtl
je
mov
mov
ljmp
sbb
mov
rcll
xor
in
lcall
pop
call
bound
or
lcall
mov
aam
imul
fistl
mov
out
mov
jns
aam
mov
push
cld
decl
pop
xorb
mov
int3
mov
sub
fcompl
or
or
movl
jo
and
aaa
jl
imul
sub
shrl
sbb
push
mov
out
call
arpl
inc
insb
or
adc
aas
jo
or
adc
mov
pop
mov
movsl
jae
and
movsb
or
xchg
mov
xchg
jo
insb
test
rcrl
lea
mov
stos
jae
popf
ficompl
mov
jmp
sahf
aas
xchg
sahf
bound
mov
adc
shrl
cld
sub
lods
lods
and
mov
std
loopne
jne
and
loop
xchg
push
call
in
and
pop
addr16
aas
pop
push
movsb
pop
out
imul
xor
jecxz
dec
cmp
shrl
mov
sarb
ljmp
shll
or
inc
jno
nop
push
xor
mov
loope
pusha
inc
pop
mov
out
sub
and
or
frstor
pop
adc
lds
mov
cmp
jg
aad
xorl
nop
push
loopne
fs
push
push
mov
stos
jle
pusha
mov
test
jno
cs
aaa
pusha
xor
pop
aas
js
call
test
fs
out
xchg
ljmp
int
fcomps
enter
jno
mov
das
cld
dec
xchg
gs
mov
mov
out
mov
add
jo
stos
inc
cwtl
rorl
orps
push
cli
pop
cmp
jle
pushf
pushf
stos
pushf
push
jb
filds
cmpb
shl
jmp
pop
stos
mov
mov
mov
stc
cs
jmp
imul
jecxz
lods
pop
shlb
and
mov
orl
jl
nop
test
pop
pop
mov
xchg
jmp
ret
push
add
stc
sbb
or
lret
sbb
addr16
push
jg
insb
jecxz
loopne
fcmovne
adc
int3
pushf
je
cmp
std
sbb
mov
mov
jmp
fwait
je
xorb
sub
in
sub
sbb
mov
jnp
inc
fisttpl
inc
add
jmp
and
daa
cmp
add
rcll
and
out
ss
adc
mov
xor
movb
sbb
jmp
negb
cwtl
insl
inc
test
test
push
jns
in
clc
mov
push
sub
nop
cli
iret
insl
mov
sbb
jne
and
push
and
js
jg
enter
jmp
icebp
nop
mov
lock
sbb
fisubrl
pop
xor
adc
out
shlb
subb
sbb
mov
fildll
cmp
sbb
stos
jns
pusha
icebp
sbb
and
sub
cld
dec
dec
lds
inc
das
repz
movsb
xlat
push
push
rcr
aas
push
push
fistpll
sbb
mov
int3
mov
in
fistps
jae
dec
movsb
push
ljmp
add
sbb
add
inc
push
mov
push
jmp
lret
in
pusha
test
test
mov
jbe
incl
mov
push
cli
mov
push
dec
enter
je
jle
jo
xor
or
inc
mov
mov
pop
pop
or
cli
dec
mov
add
push
jno
xor
pop
cmp
cs
fistpl
das
nop
mov
inc
xor
adc
mov
out
dec
mov
jno
dec
mov
mov
sub
adc
js
sti
inc
cmp
or
push
popa
fildl
sub
pop
mov
fistps
jne
fcoms
mov
and
cmpsb
mov
bound
subb
and
stos
and
mov
xor
mov
loopne
or
fists
and
push
dec
int3
clc
lods
add
inc
cld
cld
xchg
and
sbb
sub
pop
add
and
cmp
push
out
jle
or
cmpl
test
out
out
xchg
push
xor
push
aaa
mov
outsb
dec
adc
dec
cmp
push
jo
data16
loopne
fucomip
je
push
jmp
sub
jmp
out
add
shlb
decl
sbb
mov
push
mov
pop
call
mov
pop
push
stos
loopne
in
mov
add
mov
out
imul
aaa
xor
decl
cmp
add
mov
cld
or
mov
repnz
imul
pop
cli
mov
pop
fistpll
push
add
push
pop
push
mov
adc
shll
pop
mov
jge
test
sbb
add
mov
dec
mov
aaa
test
dec
out
loope
sub
into
mov
lods
xlat
xor
dec
cmpsb
mov
add
pop
lret
mov
mov
xorb
push
mov
fwait
imul
mov
mov
popa
movsb
push
ret
push
jbe
sbb
jle
inc
push
inc
dec
stc
inc
mov
pop
or
outsb
inc
pushf
or
pop
mov
mov
and
jp
sub
mov
orl
push
sub
sarb
fs
adc
sbb
clc
xchg
cmp
icebp
adc
or
decl
mov
aas
mov
enter
jno
fstpt
jo
daa
jge
fisubrs
sbb
jecxz,pt
mov
push
loopne
fbld
mov
and
hlt
fadd
mov
aaa
jl
cmp
xlat
push
loopne
push
subl
jle
adc
inc
call
mov
fwait
add
mov
pushf
test
sbb
adc
add
xchg
test
fistpl
mov
mov
jbe
stc
cmp
jae
aad
pop
cs
dec
dec
pop
ficoml
cld
scas
dec
pushl
jbe
push
imul
jge
andl
and
je
xchg
scas
scas
adc
jecxz
loop
lods
rcl
pop
or
xor
pop
in
pop
clc
das
and
cmp
out
les
dec
out
adc
push
jo
fcmovnb
inc
sbb
mov
mov
fcoml
sub
inc
dec
push
sbb
sub
dec
mov
jg
sbb
daa
pop
add
pushf
pop
mov
lea
iret
sbbb
add
mov
sbb
fwait
enter
inc
lcall
pop
adc
sbb
dec
sbb
pop
push
sti
in
and
dec
xchg
and
aas
xchg
lods
nop
popf
call
cmp
mov
dec
movsb
adc
cmpsb
ljmp
stc
sbbb
inc
cltd
popa
adc
add
in
mov
add
sub
push
xchg
orl
lea
jnp
lahf
mov
dec
cmp
dec
lcall
and
xchg
cli
in
test
pop
and
rcl
cmp
cmp
rol
push
cmc
int
aas
inc
add
das
cld
incl
or
jbe
pushf
ljmp
outsb
jmp
jmp
in
mov
test
xchg
adc
ljmp
fistpl
xchg
xchg
sbb
fisttps
and
or
inc
hlt
push
push
test
and
mov
inc
notb
adc
cmp
aad
test
mov
outsl
or
je
mov
push
gs
jle
pop
out
xor
arpl
push
enter
shl
test
rol
cmp
aam
lds
pop
jge
lea
sahf
gs
xchg
xchg
mov
push
add
rorb
jbe
roll
sahf
cld
xor
pushf
pop
loop
sub
jb
mov
mov
movsb
gs
inc
and
sub
sbb
xor
push
nop
jns
or
ret
icebp
dec
dec
add
popa
cmp
and
jg
ret
repz
fcmovnu
adcb
add
adc
lret
xchg
sbb
mov
xlat
inc
mov
lds
loope
cmpsl
ficoms
push
rorl
pop
dec
inc
adc
mov
fsubl
clc
pop
adc
add
cmpsb
lret
add
repz
pavgb
imul
shll
jne
mov
xchg
stc
or
push
clts
std
call
mov
lea
pop
icebp
test
push
cld
rorl
decl
sbb
jp
clc
fidivs
shlb
dec
data16
sar
sbb
stc
bound
rclb
ds
addr16
mov
repnz
faddl
inc
dec
mov
jp
mov
pushl
sub
mov
ret
fs
das
push
jmp
sti
mov
push
xchg
ret
cltd
loope
and
and
fstl
mov
or
ret
cmp
xchg
lcall
hlt
andb
fwait
xchg
out
xor
incl
fimull
arpl
test
roll
dec
mov
clc
mov
test
lds
out
xchg
rcll
pop
jle
aaa
clc
lcall
push
lahf
stos
and
jae
mov
cmp
popa
fwait
cli
adc
mov
cwtl
lods
repnz
sarl
cmpsb
lcall
outsl
mov
dec
lret
shlb
jno
mov
pop
jge
sbb
outsl
mov
xor
aad
sub
xchg
xor
add
push
aam
roll
add
jl
jle
inc
inc
xor
cld
rorb
pusha
cwtl
js
xchg
ljmp
test
cld
inc
dec
ja
aas
std
das
mov
loope
push
ret
incl
cmp
icebp
fstpt
lods
dec
mov
je,pt
jge
jbe
js
mov
or
out
insl
lret
pushl
adc
mov
mov
sbbb
jmp
nop
sbb
xor
xor
lcall
sbb
inc
out
fwait
dec
andl
cmp
or
mov
cmp
ljmp
xor
scas
call
outsl
adc
jp
ljmp
sub
sbb
scas
adc
mov
push
enter
add
aaa
and
dec
fisubs
ffree
cs
push
add
dec
call
lret
mov
add
add
mov
or
add
aaa
repz
scas
xor
mov
add
mov
andb
mov
mov
mulb
sbb
pop
fistl
or
push
dec
loop
mov
test
addb
fstpl
push
inc
add
pop
movsb
jecxz
aam
movsl
add
or
xor
sbb
pop
jmp
pusha
cmc
and
xor
in
rcll
cmc
or
rol
loope
addr16
decl
aaa
jne
mov
dec
pushl
and
jne
jge
es
cli
xchg
add
insl
push
jp
or
jg
stos
decl
lcall
push
js
jno
es
sbbl
sub
mov
add
ret
xor
push
xchg
adc
add
cli
xchg
push
je
cmpsb
or
imul
insb
rclb
push
scas
fldenv
mov
jne
lods
mov
ror
jp
insl
fmuls
das
std
push
mov
cli
outsl
lea
and
sub
dec
outsb
lret
shrl
ret
es
scas
sbb
jmp
push
popf
outsb
jmp
dec
int3
scas
incl
inc
lds
xor
cld
pop
dec
icebp
je
insb
fidivl
fstps
adc
mov
std
or
add
stos
fs
ljmp
shl
and
cmp
jae
out
ljmp
filds
pusha
jg
mov
lock
lock
sub
popl
roll
mov
daa
pop
test
orl
daa
add
adc
push
lcall
and
or
adc
jbe
rorb
aam
mov
fisttps
stc
fldt
inc
lods
ja
xchg
mov
aaa
dec
sub
nop
jnp
jp
gs
jmp
xchg
add
xor
lods
xchg
outsl
jo
xchg
cltd
cmpsb
jbe
xchg
xor
decl
add
gs
js
nop
subb
pusha
sbb
pop
roll
pop
fistl
adcb
pop
mov
or
das
or
movsl
adc
pop
inc
rcll
pop
movsl
decl
cmp
ljmp
lods
xorl
in
shlb
mov
adc
lods
movsb
ss
mov
xor
sarb
int3
push
ret
dec
inc
add
mov
mov
lret
and
aaa
cli
mov
add
xor
icebp
ret
sarl
outsb
or
decl
loopne
fisttpll
ret
inc
xchg
pop
jl
jb
push
insl
jecxz
pop
or
add
add
dec
imul
pop
jecxz
icebp
outsl
cld
pop
pushf
mov
lcall
sub
and
push
pop
pop
jle
dec
cmpl
dec
inc
test
aas
je
int3
mov
push
mov
adc
or
jnp
mov
dec
mov
ljmp
mov
adc
add
ficomps
xchg
movsl
mov
jge
add
push
jge
sbb
sbbl
shl
insl
fadds
fldt
push
sub
mov
cwtl
and
xchg
jecxz
push
andb
inc
mov
pop
pop
in
fcoms
pop
add
jo
clc
add
hlt
in
dec
gs
jle
insb
dec
cmp
jbe
push
or
lcall
xchg
insl
pop
loop
jo,pt
push
inc
dec
dec
mov
je
das
xchg
ljmp
jp
xorl
xor
xor
adc
cld
jmp
pop
add
fsubrp
push
loope
sti
adc
fiaddl
jbe
xor
adc
mov
cld
movsl
mov
mov
shll
aam
filds
jl
pop
daa
mov
mov
test
add
insl
cmc
cs
je
loope
xor
lock
mov
repz
sbb
test
add
hlt
mov
fisubs
dec
cmpsb
pop
xchg
add
cwtl
mov
mov
or
xchg
lcall
pop
imul
fwait
sub
rcr
sub
clc
ret
lds
ret
inc
add
pop
loopne
js
xchg
test
mov
add
pop
mov
jg
mov
cmp
iret
scas
and
ja
out
les
cmp
push
or
mov
insl
and
inc
outsl
xor
stc
sub
inc
in
pop
insl
test
icebp
push
mov
lret
push
jmp
into
push
mov
inc
jo
ljmp
lock
fstpt
cmp
pop
push
pushl
or
push
and
cmpsb
cmovne
inc
pop
mov
cmp
mov
and
stos
adc
std
adc
lcall
sub
or
cs
popf
dec
jg
add
leave
mov
xor
call
data16
je
xchg
mov
in
scas
daa
loop
shlb
cli
inc
sub
xor
mov
and
xchg
aad
pushf
vshufps
xchg
or
push
repz
pusha
add
add
or
adc
call
sub
bnd
and
mov
loopne
movsl
push
sub
sub
inc
lret
jge
stos
cmp
sub
inc
jne
mov
lods
push
mov
cmp
adc
mov
test
inc
mov
les
jo
ficoms
jmp
dec
push
aas
jg
imul
or
fchs
scas
aad
ret
sbb
jmp
sub
dec
popf
add
jmp
mov
lcall
dec
sbb
dec
es
sub
add
stos
mov
bswap
xchg
ret
in
inc
popf
dec
prefetcht0
les
fwait
aaa
cld
adc
xchg
add
push
jp
push
fcom
das
bnd
or
je
xor
fwait
mov
cmpsb
cmp
stos
inc
add
lods
test
inc
jo
test
fdiv
hlt
nop
xchg
ficoml
insb
test
test
pop
aam
clc
push
nop
jno
mov
loopne
pop
clc
shlb
add
push
sbbb
sbb
cmp
pop
sar
lods
jg
xchg
push
icebp
lds
push
and
and
mov
jge
movsl
sbb
mov
imul
mov
push
pop
add
out
pop
jno
cwtl
fnsave
mov
jmp
adc
adc
cmp
xor
adc
xchg
inc
test
sbb
test
loopne
adc
inc
aad
nop
leave
xchg
jg
mov
dec
popf
insl
cmp
fbstp
xor
mov
mov
fmuls
incl
push
in
pusha
or
pusha
sub
enter
inc
sbb
mov
nop
leave
rorb
cmp
test
out
xor
inc
pop
mov
jg
ljmp
cmc
dec
and
add
movlps
pop
adc
pop
adc
test
add
jbe
clc
push
icebp
popf
fimuls
xor
xchg
cmp
mov
adc
sub
inc
rorl
mov
sbb
jo
push
pop
mov
lds
decl
sub
fisttpll
mov
mov
push
iret
inc
push
cmc
stos
mul
dec
out
pop
xchg
pop
mov
pop
das
adc
jecxz
out
test
pop
xor
jg
jmp
adc
push
sbb
dec
adc
mov
mov
xor
pop
add
insb
cwtl
xchg
out
loopne
xchg
xor
xchg
pop
lcall
rcrl
mov
inc
mov
mov
inc
inc
loope
loope
dec
cld
shrl
scas
jmp
jno
and
xchg
out
or
loop
mov
jg
movsb
faddp
add
movsl
push
inc
inc
or
imul
xor
jge
daa
dec
xor
iret
and
cld
das
adc
dec
inc
mov
clc
rorl
decl
cs
ss
stos
pop
test
outsl
and
fstps
loope
sbb
call
adc
clc
scas
dec
mov
mov
add
push
mov
jg
loopne
pop
add
ljmp
cmp
pushl
add
in
sub
jmp
clc
sarb
lea
pop
mov
jle
inc
shrl
pop
sbb
add
scas
loopne
or
add
test
cli
movsl
stos
jnp
jns
inc
popa
add
das
push
mov
jo
jb
push
mull
pusha
icebp
test
jle
push
xchg
fs
cmp
imul
mov
cmc
pop
jns
adc
mov
jnp
mov
jmp
pop
xchg
js
ds
in
jno
cmp
scas
inc
test
out
adc
xor
xor
pop
das
rol
jno
inc
jns
or
push
inc
and
cli
cmovs
enter
push
lea
fs
adc
inc
lea
repz
pop
or
fcmovu
mov
xchg
mov
fisttpll
imul
movsb
xor
ss
mov
mov
xor
adc
loop
mov
imul
mov
mov
mov
and
ret
test
adc
daa
stos
inc
fldt
jmp
ss
psubsb
jg
cmpsl
outsb
xor
lret
lahf
pop
xor
cmpsl
es
addb
add
lret
add
sbb
push
out
push
jne
ljmp
push
add
add
push
adc
test
add
push
or
fs
adc
loopne
clc
incl
adc
lret
pop
sub
test
xor
lds
bound
push
sti
lret
add
gs
cld
pushl
and
jl
add
add
cmp
mov
mov
repz
xor
sub
iret
push
ficompl
fcomps
jge
cmpsb
fadds
jg
out
lock
nop
fldcw
mov
mov
push
icebp
js
xor
inc
mov
leave
sub
loopne
mov
fs
nop
xchg
das
in
or
push
pop
adc
sub
mov
fistpll
popf
cmp
mov
out
sbb
pop
xorb
or
pop
shrl
jmp
insl
or
lea
jnp
rclb
mov
sub
enter
dec
bound
pushl
stos
dec
stc
push
push
cmp
adc
push
cmpsb
cmp
adc
clc
addb
lea
push
pop
lahf
mov
mov
add
or
ficoms
push
adc
fs
mov
cld
xchg
mov
mov
je
sub
ljmp
push
dec
aad
sahf
push
sbb
pop
lcall
mov
ja
subb
sar
push
add
cmp
lret
add
sub
aas
cwtl
add
jo
push
mov
out
pushl
lret
jae
add
adc
jno
cmp
xchg
test
push
xchg
mov
dec
insb
mov
push
cmp
mov
lcall
shlb
adc
insb
fcoms
rol
adc
mov
jmp
aas
insl
aam
and
fistpll
mov
sub
arpl
push
lds
scas
in
or
enter
clc
lods
cli
push
pop
testb
pop
push
mov
outsl
pop
sub
xor
andl
shr
outsb
das
mov
jmp
lea
inc
mov
or
mov
mov
sbb
jg
sbb
sbb
push
lds
cmc
das
jno
or
insb
cmp
inc
loope
dec
cmp
bound
dec
les
sub
sbbb
out
inc
incl
sarb
xchg
stos
loope
pushw
sub
lock
ljmp
jne
mov
sahf
mov
and
xor
je
sbb
mov
push
lock
add
lock
loopne
pushf
push
jmp
sbb
cmp
nop
adc
add
mov
pop
fwait
and
aaa
test
rorb
and
fistpll
push
cmp
sbb
lea
ret
lock
pusha
test
call
mov
jno
lret
or
fcomps
pusha
imul
clc
xorl
mov
shrl
imul
sbb
outsb
push
mov
icebp
or
or
ja
test
loope
cmp
mov
cld
or
shr
pop
or
mov
mov
jns
sub
lea
pop
mov
mov
cmpsl
fs
incb
pop
clc
push
cmpsl
sbb
dec
dec
cli
jg
lods
dec
test
sarl
cmp
push
stc
dec
icebp
or
pop
xchg
jmp
pop
cld
pop
mov
or
push
inc
adc
pop
loope
sbb
sbb
pop
push
rorl
leave
repz
loopne
andb
movsl
lret
push
cld
pop
xchg
or
push
push
in
mov
movsl
decl
call
sbb
mov
cld
push
popa
sti
ljmp
cs
test
aas
jge
push
les
push
outsb
push
cmpl
jecxz
adc
cmpsb
cs
mov
hlt
ret
lcall
stos
outsl
adc
push
shrb
adc
loope
push
dec
jno
adc
inc
inc
dec
cmp
cld
sarb
int3
mov
dec
lods
cmp
push
fists
mov
sub
data16
sub
mov
sti
and
push
dec
ret
pushl
push
jp
aas
mov
pop
std
mov
repnz
xchg
cmp
jg
je
jmp
ljmp
fiaddl
in
or
xchg
std
imul
ret
sarl
sbb
aam
push
lret
jmp
es
ljmp
div
xchg
daa
or
push
mov
test
mov
lcall
ss
lcall
xorl
icebp
xor
decl
mov
push
mov
outsb
and
popl
ret
push
pop
out
sub
sbb
dec
test
jecxz
addb
pop
loope
lea
dec
pop
bound
dec
clc
jg
lds
mov
push
loope
mov
out
ljmp
cmc
pushf
mov
inc
out
and
mov
jne
push
pop
ss
push
ljmp
stos
jmp
lock
mov
inc
cs
adc
or
jo
inc
cli
test
xor
dec
insb
sub
or
movsb
dec
sub
mov
in
jno
enter
dec
sub
cmp
ds
mov
cs
sbb
das
popf
push
fwait
push
jp
inc
loope
icebp
and
cld
jmp
or
rclb
clc
pop
jle
loopne
repnz
sub
xchg
inc
aaa
pop
cli
decl
ret
fistpl
aad
jmp
scas
mov
ret
idivb
jecxz
pushf
mov
dec
and
clc
pop
clc
cmpsl
inc
repz
xchg
rcrl
popf
or
ret
lret
sbb
dec
roll
xchg
repnz
filds
add
push
sbb
fwait
dec
mov
inc
aam
or
adc
and
add
lods
into
scas
cmc
loop
cmc
or
aad
orl
push
adc
outsl
das
lds
push
jecxz
dec
push
ss
xor
filds
jle
es
dec
fcoms
mov
cmpb
adc
pushf
push
jmp
cmp
pop
jno
pop
push
outsb
subb
lret
jb
cld
idiv
in
fs
call
sub
inc
and
unpckhps
out
shrb
mov
jnp
pop
test
jnp
sti
push
pop
push
orb
push
test
das
push
int3
pop
js
push
sub
sbb
incl
clc
xchg
mov
sub
sbbl
dec
lds
cmc
idiv
xchg
and
push
mov
in
fldl
mov
sub
mov
add
fcomi
jg
xor
dec
les
mov
loope
cs
or
adcb
les
ljmp
mov
popa
xchg
xlat
repnz
enter
addl
and
insl
cld
mov
aad
adc
inc
mov
andl
ljmp
cs
mov
xchg
dec
out
push
add
xchg
rcl
mov
xchg
adc
sub
out
push
xchg
lcall
xchg
push
iret
pushf
pop
popa
in
orl
nop
adc
adcb
aaa
mov
sarl
rcl
mul
xor
test
filds
adc
popa
insl
jecxz
mov
pushl
xchg
aas
mov
jno
cmp
hlt
or
and
lahf
cmc
jle
add
leave
mov
xor
cmp
lar
clc
sti
mov
jns
or
pop
dec
ljmp
xchg
cmp
push
push
pop
stos
roll
jle
imul
adc
in
divl
decb
xchg
fistl
aas
dec
mov
loop
pusha
xlat
xchg
jge
clc
pop
sbb
pop
ljmp
jns
pop
mov
adc
mov
idiv
mov
imul
repz
into
leave
push
or
int
cli
mov
or
fdivs
stos
sub
cld
fdivrl
cs
dec
mov
psubq
fimuls
aaa
lahf
sbb
mov
ljmp
jno
and
icebp
add
inc
roll
loopne
sbb
dec
push
xor
jp
orl
mov
mov
cli
decl
jmp
fwait
mov
popa
faddl
cmp
jb
mov
inc
dec
test
mov
test
mov
mov
add
mov
sti
pop
ljmp
push
inc
xchg
push
add
cld
sub
push
add
lret
or
int
pop
fiadds
add
testl
cmc
lea
jl
addl
xor
pcmpeqw
scas
mov
xor
jl
loop
push
imul
fwait
loopne
sub
daa
mov
push
lahf
call
sbb
ret
icebp
ffreep
push
pop
lods
stos
arpl
test
xor
cltd
lea
mov
stos
cli
push
insl
in
rcr
faddl
jno
pushf
add
sub
push
jg
xor
sub
daa
out
pop
xchg
out
test
pop
cmp
sub
orl
divl
lahf
int
sub
je
ret
add
xor
leave
sbb
mov
mov
xor
jecxz
mov
pop
and
xor
rcr
movsl
cwtl
add
mov
jmp
decl
inc
pushf
movsb
stc
lods
push
into
xchg
fidivs
adc
or
ds
in
std
jno
ret
push
test
ret
xchg
call
test
int
xchg
mov
add
lds
jmp
xor
push
mov
push
addb
push
jmp
test
adc
mov
pop
addr16
sti
fildll
add
sbb
adc
icebp
je
add
mov
insl
jmp
stos
sbb
jae
push
pop
mov
xchg
mov
xorb
add
adcl
mov
es
xchg
das
test
loope
cmp
cmp
cli
xchg
xchg
jbe
cmp
or
into
mov
sahf
and
insl
jnp
ljmp
mov
cmp
push
decl
std
dec
xchg
adc
inc
sahf
mov
icebp
xchg
clc
testb
popa
push
or
sub
incl
xchg
test
mov
hlt
jge
rol
or
das
adc
or
repz
sub
lock
cmpsb
and
pusha
cwtl
sbb
adc
daa
cmpsb
and
inc
stos
ljmp
mov
shll
dec
mov
sti
inc
stos
adcb
push
addr16
sbb
ret
inc
inc
sub
lods
sbb
fisubs
pop
popf
adc
pop
vpslld
sbbb
ljmp
mov
shll
sbb
dec
inc
xchg
add
inc
push
adc
push
mov
and
jle
cmp
and
call
popa
je
pop
icebp
add
cltd
stos
sbb
pop
aad
clc
or
inc
or
rolb
sbb
in
sbb
pusha
push
adc
fiadds
jg
repz
xchg
int
mov
push
enter
iret
cwtl
and
mov
xor
bound
push
sub
jl
out
in
add
or
push
icebp
aaa
and
movsb
add
dec
fs
movsl
jg
sbb
call
imul
mov
shrl
dec
sbb
or
push
fistpll
jle
and
fdiv
orb
jne
hlt
call
call
push
or
rorb
repz
lock
in
dec
lahf
call
js
sbb
fdivl
out
xchg
or
popf
xchg
loop
jmp
pop
mov
adc
inc
icebp
inc
mov
mov
sub
nop
lds
sub
mov
imul
mov
push
inc
mov
scas
dec
clc
ret
in
ret
jmp
xor
xchg
shlb
add
aaa
cmpl
jecxz
sub
je
xchg
inc
lcall
push
sti
cmp
cltd
test
mov
mov
xor
and
filds
jns
sbb
adc
xchg
xlat
bound
adc
test
lret
inc
jp
jle
push
fildll
fiadds
and
lds
cmc
inc
insb
push
pop
ret
or
loopne
jg
pop
inc
xchg
flds
cmp
and
cltd
adc
xor
outsb
aam
ss
jnp
repz
cs
push
mov
sar
sarb
inc
or
xchg
sbb
out
lahf
push
mov
decl
hlt
aas
in
popa
ss
in
arpl
xor
ja
nop
hlt
out
int
jb
nop
adc
out
xchg
mov
xlat
xchg
test
scas
push
jl
push
lock
or
mov
or
inc
jnp
jp
cmp
lahf
subl
stos
xor
inc
mov
inc
stc
adc
add
inc
adc
ja
adc
jo
fwait
mov
cmp
jg
jae
lods
cltd
sbb
xchg
adc
adc
ljmp
add
outsl
sbb
rolb
pop
ljmp
mov
into
popa
fildl
int3
xchg
aaa
pop
clc
or
pop
mov
call
clc
sbb
jg
cmp
xor
cld
mov
cli
adc
cmpsl
jge
mov
sub
inc
fstpl
mov
add
push
fs
pushl
fcomp
nop/reserved
push
or
les
add
adc
push
in
push
inc
sbb
xchg
filds
mov
fldl
xchg
in
insb
jecxz
adc
jg
leave
cmp
adc
push
mov
daa
mov
mov
mov
sbb
mov
xchg
addr16
mov
lock
mov
inc
and
sar
aam
pusha
popf
sbb
lret
xchg
dec
dec
fmul
lock
or
xchg
inc
dec
cmp
mov
ret
aam
aam
adc
adc
rolb
in
push
inc
jmp
push
pop
pop
inc
fsubl
arpl
or
imul
or
cli
jo
subb
xchg
xor
pop
push
xorl
xchg
jnp
dec
xchg
test
xchg
sub
mov
sub
mov
scas
pop
lcall
jmp
std
jg
lock
add
mov
sub
jecxz
arpl
mov
jecxz
movsl
orb
xor
fistpll
inc
and
scas
adc
sub
pop
xor
or
add
jne
push
test
dec
iret
mov
in
movsl
incb
xor
scas
add
or
cmp
mov
inc
popa
mov
mov
dec
push
xchg
repz
add
sbb
mov
stos
scas
dec
add
xchg
clc
test
sti
cmp
lcall
add
adcb
arpl
pushf
ret
cmp
xchg
pop
mov
ret
sbb
dec
stc
mov
movsb
jg
popa
lods
fcmovu
inc
inc
pop
mov
pop
jo
add
lods
dec
popf
fbstp
add
insb
or
push
rolb
les
mov
stc
add
xchg
test
insl
and
test
rclb
arpl
mov
out
lret
aas
xchg
add
imul
mov
add
insl
fnstcw
push
pusha
cmp
adc
addr16
sbb
scas
test
jno
decl
jg
cmpsl
dec
dec
and
cwtl
popa
or
or
jne
jmp
jg
or
cmp
addr16
xchg
inc
push
les
sub
mov
ficoms
adc
setno
shll
pop
ljmp
aam
cli
mov
nop
or
xor
inc
or
icebp
inc
or
sbb
or
add
sti
push
mov
scas
mov
fs
mov
jg
rolb
pop
xor
packssdw
cli
test
lret
lea
add
mov
std
insb
lcall
jle
js
scas
cwtl
pop
lock
decb
fwait
sbb
ror
xchg
sub
jno
call
jecxz
cmpb
jmp
add
cmp
pop
loop
pushf
mov
testb
and
in
or
mov
and
fdivrp
jg
and
imul
mov
arpl
or
pop
das
les
xor
insb
lods
mov
mov
mov
movsl
test
lods
push
sbb
ja
imul
lods
sub
sbb
fbld
bound
call
popa
outsb
adc
or
xchg
lock
lret
sub
aad
lods
imul
pusha
add
jg
fwait
or
and
push
lahf
sbb
or
aam
mov
cmp
nop
inc
xchg
addb
outsb
loopne
cld
fiaddl
enter
mov
adc
addr16
in
jle
xor
push
loopne
test
add
es
lret
jge
cld
shrb
mov
pop
adc
adc
test
inc
mov
sbb
ss
ret
pop
xor
or
or
push
add
dec
divb
loopne
or
inc
lock
push
dec
aaa
sub
popa
insb
jno
dec
adc
pop
add
leave
shr
test
sbb
jo
cmp
sub
negb
mov
xchg
or
lcall
mov
dec
lret
jg
fbld
je
jo
mov
mov
dec
fistl
xor
xchg
aas
cmp
ret
stos
icebp
pop
pop
cli
dec
push
hlt
nop
sahf
xor
xchg
adc
out
dec
adc
std
fwait
lret
pop
cmp
push
jne
xor
cmc
jl
ljmp
cmp
loope
mov
mov
pop
cmpsl
jle
ret
ret
dec
dec
in
ljmp
mov
pop
clc
pop
sub
pop
cld
push
pop
cs
in
mov
js
sbb
jo
cmovg
sub
add
mov
mov
pop
or
aaa
imul
xor
shrb
xchg
incl
mov
jb
fs
out
enter
js
add
and
sbb
and
mov
enter
mov
pusha
imul
call
cld
pop
mov
flds
sbb
mov
ret
push
inc
inc
test
xor
add
subb
mov
pop
adc
roll
rcll
lret
mov
inc
frstor
out
cld
add
xchg
ret
call
insb
cmc
std
jne
shrb
pop
inc
add
and
pushf
xchg
aas
dec
mov
jmp
movsb
stos
mov
jmp
mov
adc
nop
mov
mov
movb
push
sbb
jg
mull
cmpsl
inc
push
push
popa
dec
sti
fcmovu
adc
inc
cli
stos
call
in
loopne
push
sbb
mov
in
cltd
sub
sub
push
sar
in
out
xchg
inc
js
movsl
or
outsb
inc
gs
lods
inc
jecxz
movsl
pop
clc
lret
out
pop
and
xor
sub
lcall
cli
inc
push
mov
sbb
pushf
adcb
xchg
push
dec
pop
push
imul
outsl
ja
push
fimuls
xor
out
pop
xchg
xor
dec
int
add
pop
sbb
mov
adc
add
jg
stos
sub
popa
sbb
sahf
push
into
aam
outsl
call
clc
mov
outsl
cld
call
insb
cmpsl
or
andb
outsl
push
movsb
dec
xor
lcall
mov
dec
xchg
add
mov
adc
rcrb
cmp
sbb
outsl
call
leave
addr16
leave
xchg
es
dec
rclb
test
push
xchg
add
mov
aam
ror
push
lret
lahf
fmul
inc
imul
rorb
cld
jg
fistpl
adc
pop
sbb
jo
adc
mov
clc
popl
push
push
loope
mov
cltd
shll
or
scas
fs
leave
repnz
insb
push
mov
cmp
cmpsl
mov
jo
lcall
sti
lahf
inc
je
push
roll
scas
mov
testl
rcr
outsb
cmp
cld
xor
pop
push
and
lock
inc
in
and
adc
dec
arpl
and
outsb
fst
incl
fisttpl
lea
les
cmp
test
mov
ficomps
fstpl
push
cld
outsl
push
xor
cmpsl
xchg
mov
push
ljmp
adc
inc
hlt
cmpsb
pop
mov
jne
das
icebp
loopne
push
pushf
cld
or
push
mov
xchg
or
test
aam
into
add
pop
mov
push
push
fnstcw
push
lret
inc
mov
lods
jge
or
jo
push
rcr
sbb
jl
ds
jle
sub
push
and
insl
mov
insb
mov
aas
mov
aad
mov
xchg
dec
sbb
push
enter
sahf
jne
ljmp
outsl
xor
loopne
imul
dec
adc
sbb
pushf
cmp
rorl
stos
call
ds
in
adc
aas
lahf
lds
ds
pop
call
je
mov
cmpsl
stos
push
pop
clc
in
scas
cld
sub
pop
xchg
scas
xchg
cmp
mov
std
ret
mov
mov
dec
test
adc
pop
call
and
pop
pop
dec
test
mov
adc
push
lcall
mov
addb
rolb
rolb
ret
icebp
inc
subl
cmp
dec
movsl
aad
xchg
or
mov
clc
inc
arpl
push
inc
adc
mov
mov
ljmp
push
mov
pop
push
aad
add
out
decl
adc
mov
inc
inc
inc
add
sti
aam
ret
sbb
call
mov
gs
mov
push
popa
and
adc
inc
mov
mov
pop
pop
xchg
fwait
cmpsl
xor
xchg
sbb
pop
cmpsb
push
ret
int
es
or
mov
sub
xchg
mov
mov
pop
mov
add
stos
jge
cli
adc
inc
jmp
pop
fisttps
mov
jle
pop
sub
icebp
xor
and
sub
mov
popf
scas
and
fimuls
shrl
jmp
in
inc
dec
jecxz
jne
cmp
cmpsb
icebp
ds
xor
lahf
jns
test
ljmp
mov
imul
out
mov
fucomip
sub
pop
lock
mov
aam
or
test
aas
mov
daa
sbb
sbb
jmp
movsb
dec
push
or
add
xchg
jmp
mov
pusha
repnz
imul
cmp
jo
cmp
sbb
mov
je
cs
test
cmp
int3
ljmp
add
mov
adc
adc
mov
mov
mov
enter
fists
and
insb
mov
leave
mov
or
jne
je
cmp
cld
mov
push
incl
pop
and
push
jo
das
adc
fisttps
xchg
or
ret
subl
sub
popa
and
cmp
js
int3
repz
sbb
jbe
or
dec
push
mov
jae
mov
stos
bound
fbstp
clc
syscall
out
shrb
and
sbb
lcall
cmpsl
daa
loop
pusha
pop
ficoml
cs
push
jnp
dec
mov
pop
in
fwait
and
push
mov
dec
xor
lcall
mov
fwait
cmp
add
testb
mov
push
fwait
bound
add
fs
imul
lcall
mov
lock
mov
leave
cwtl
adc
jbe
or
lret
or
loope
pop
mov
jg
lea
shlb
mov
cmp
bound
fisttpl
clc
pushl
int
movsb
and
add
inc
cltd
outsl
mov
aam
jbe
add
push
push
jbe
out
shll
push
pushl
ljmp
xor
push
lret
mov
pop
pusha
jo
push
mov
call
add
inc
jl
dec
push
aaa
fwait
cmp
aas
mov
xchg
sub
fcmovnu
inc
xchg
std
imul
pop
data16
mov
or
shl
in
mov
jmp
test
daa
jno
test
xlat
mov
dec
nop
push
cmp
test
or
sub
ljmp
inc
adc
cmp
add
pop
repnz
mov
mov
pop
dec
sub
add
enter
mov
push
gs
push
inc
jo
xor
je
pop
push
jmp
arpl
out
cmp
add
lcall
mov
xchg
or
fmull
enter
decl
lret
cli
adc
cmp
mov
adc
rorb
fwait
push
sub
mov
add
pop
decl
add
inc
cld
pop
clc
stc
add
mov
stos
mov
outsb
add
mov
sbb
ffree
and
push
fadds
decl
inc
and
je
bound
mov
lret
jl
bound
sbb
mov
jl
mov
push
mov
jg
pop
jmp
add
or
pop
mov
xchg
out
jmp
arpl
inc
cld
jg
popf
inc
mov
and
repnz
pusha
dec
add
and
push
test
jb
sbb
andl
outsb
in
and
jmp
loop
iret
cmp
lcall
mov
cld
adc
rcr
aaa
pop
sbb
cs
or
stc
add
dec
adc
xorb
jns
imul
pop
pusha
xor
loop
lea
movsb
rol
xchg
mov
adc
mov
ret
jecxz
stos
and
in
mov
arpl
mov
dec
mov
xchg
repnz
lods
lret
mov
cmp
andl
leave
int3
out
je
and
aaa
loopne
mov
pop
sub
test
cli
aaa
es
mov
inc
xor
test
mov
push
xor
sbb
jg
push
push
insb
test
subb
addr16
shrl
.byte
.byte
.byte
xchg
mov
in
sub
decl
pushl
lea
push
lea
push
or
add
lea
sti
push
push
push
push
push
call
neg
dec
add
xlat
dec
jmp
mov
add
leave
ret
push
xor
cmp
push
xor
push
push
push
dec
lock
mov
das
and
notl
sbb
push
push
push
and
inc
push
push
push
clc
dec
inc
insl
push
dec
sub
loopne
sti
pusha
fists
mov
xor
sub
popa
push
insb
push
push
xor
fs
in
outsl
fildll
sti
push
call
inc
and
popf
jo
jo
sub
pop
loopne
and
xor
push
daa
mov
sbb
dec
mov
mov
rsqrtps
std
jl
jge
pusha
int
push
icebp
dec
jb
sub
xor
jae
cld
add
call
imul
pop
clc
fnstcw
mov
imul
in
mov
push
xor
adc
dec
imul
add
push
cld
push
loopne
imul
mov
jl,pn
pop
clc
jne
outsb
inc
bound
rclb
inc
gs
jl
cmp
or
add
daa
add
sbb
not
sbb
jbe
sti
shr
fimull
cmp
add
test
out
subl
cwtl
jno
or
jg
test
add
in
ss
dec
push
sub
sbb
sbb
cmp
mov
pop
dec
adc
inc
fcomp
icebp
loopne
push
and
inc
inc
inc
call
popa
inc
scas
cmp
lock
test
push
shr
mov
add
in
call
jmp
mov
jbe
sub
sub
jns
insb
xor
cmovle
xor
cmp
dec
and
push
pop
inc
loopne
call
call
sub
dec
not
inc
or
into
idiv
pushl
or
aad
imul
not
dec
jmp
ljmp
rorb
shrl
lock
push
jmp
push
push
dec
pop
dec
add
loope
inc
push
cmp
sub
fcmovnu
ret
jo
aam
aad
mov
hlt
mov
or
mov
call
push
xor
outsb
adc
fidivl
into
push
inc
test
popl
in
fisttpl
cmpsl
sbb
in
ss
inc
outsl
inc
add
jns
stc
lcall
cmp
push
push
xor
ja
xchg
in
xor
jg
iret
dec
cmp
insb
call
ret
neg
dec
push
clc
or
rorl
sbb
inc
dec
add
push
sub
in
psadbw
sti
add
hlt
push
outsb
or
popa
icebp
icebp
xchg
jae
inc
pusha
push
mov
cmp
adc
call
or
clc
sub
pusha
fwait
outsb
jge
loopne
dec
cmp
dec
jns
js
add
imul
cmp
push
jo
outsl
push
aaa
push
ja
xchg
inc
jbe
fiaddl
roll
push
mov
push
xor
jae
mov
clc
mov
sti
incl
and
pushl
dec
adc
lcall
cmp
cmpsl
mov
add
in
lcall
call
dec
sub
movsl
add
test
neg
jmp
add
mov
bound
push
push
sbb
jl
dec
push
add
hlt
or
jo
push
adc
dec
pcmpeqd
cmp
hlt
or
not
lods
neg
dec
xor
ja
push
mov
add
adc
push
rcrb
icebp
sub
inc
or
inc
mov
xchg
pop
dec
gs
push
jns
ret
sbb
jbe
lahf
sub
dec
pop
inc
pusha
pop
xchg
aaa
and
push
cld
add
jg
jge
dec
js
dec
mov
xor
add
inc
js
jae
mov
repz
fs
daa
rorb
mov
stos
jecxz
push
add
xor
adc
sub
xchg
es
roll
sarb
arpl
dec
or
dec
cmp
xchg
out
movsb
rol
je
jo
stos
in
mov
insb
out
sbb
popa
aad
daa
push
pop
mov
test
inc
fadd
jp
sub
jp
bound
pop
es
mov
or
ds
decl
aam
inc
int3
push
dec
add
mov
push
dec
inc
and
pop
mov
cmp
pop
push
push
aad
rcll
jb
loope
add
mov
pop
mov
mov
dec
jns
mov
or
inc
call
dec
fstp
int3
sbb
lock
jns
push
flds
arpl
pusha
jae
xor
cld
cmp
rol
jae
jno
sub
call
test
lahf
inc
inc
daa
lock
sub
arpl
push
es
mov
xchg
jnp
sbb
push
xor
stc
les
sub
rclb
dec
jae
stos
loopne
popa
inc
inc
jns
pop
out
push
iret
jns
pop
ret
push
push
mulb
add
sub
inc
dec
js
adc
add
mov
imul
repz
bound
and
insb
adcl
out
in
xor
push
dec
ss
nop
fcomi
lods
add
dec
xor
push
out
ja
ficomps
dec
adc
mov
push
add
mov
test
sub
popa
adc
inc
xor
lcall
call
inc
sub
fimuls
test
xchg
pop
mov
add
pop
ret
cli
subl
push
push
push
lock
dec
mov
add
dec
xor
test
dec
xor
outsb
mov
jmp
insl
sub
aam
jbe
ja
sub
shl
and
adc
sub
adc
xor
test
dec
inc
dec
movl
aad
js
or
neg
incl
lods
mov
stos
ret
inc
adc
inc
xor
clc
dec
adc
mov
jmp
rolb
push
inc
jmp
or
and
ret
cmp
push
lods
dec
test
xor
xchg
fdivrs
inc
inc
aaa
pop
dec
gs
adc
jmp
bound
shrl
sbb
jbe
jmp
mov
xchg
inc
push
in
lock
loop
mov
cmp
je
lods
jg
fistpll
inc
call
arpl
hlt
ja
mov
cmp
xor
ds
shrb
push
xor
pop
movsb
push
xchg
xor
bound
pop
shll
loopne
sti
jge
test
cmp
or
test
mov
cmp
addr16
js
imul
dec
mov
mov
sub
add
testl
sbb
add
inc
push
add
or
jne
fldl
mov
pop
imul
ret
jae
mov
xor
aad
dec
call
and
aas
sbb
dec
push
repnz
lods
mov
mov
je
lcall
mov
out
insb
sub
inc
push
push
mov
or
dec
popf
scas
in
es
push
xchg
xchg
and
mov
call
outsb
ja
nop
push
jae
push
xor
mov
and
cmp
hlt
lods
out
rcll
fsubr
cmp
clc
call
scas
push
pop
push
arpl
or
in
aas
xor
push
jae
mov
jno
lods
test
test
sub
loope
ficoml
sbb
mov
jmp
dec
mov
xor
sbb
mov
imul
fadds
mov
les
pminub
and
in
outsb
mov
or
push
ja
xor
testl
stc
and
jle
sub
mov
sbb
data16
cs
scas
push
inc
fldcw
shll
daa
and
lods
sarl
cmp
and
jmp
es
bound
cmc
scas
fldt
jns
xor
push
dec
arpl
mov
bound
stc
das
cltd
test
xchg
lock
sbb
xchg
cmp
xor
add
js
mov
jo
aam
mulb
xor
jo
mov
pop
sbb
fpatan
push
mov
ja
or
dec
cmp
addb
imul
mov
clc
fs
inc
outsl
inc
inc
out
outsb
andl
push
mov
inc
addr16
outsl
dec
rcl
cmp
push
ja
insl
outsb
adc
mov
imulb
push
outsl
mov
bound
pop
cli
jl
pop
jg
hlt
xchg
loopne
rorb
pop
xor
dec
push
sbb
cld
inc
add
push
pop
adc
add
add
mov
adc
mov
jp
jo
push
push
jns
das
dec
sahf
add
fisttps
je
push
add
lods
mov
xchg
jbe
jmp
add
fimull
sub
jbe
out
jmp
lds
cmp
cmpsw
scas
or
xorb
stos
adc
pop
rcrb
pop
sub
jo
insl
movsl
bts
stc
fsts
pop
sub
jno
icebp
push
in
nop
aaa
jno
aad
in
jb
cmp
or
cmp
inc
insb
sbb
mov
cmp
call
ljmp
dec
pop
jns
addb
sub
xor
or
mov
jl
push
cwtl
popf
clc
imul
or
iret
xchg
jmp
sbb
int
in
or
outsb
pop
pop
andb
outsb
jne
jo
jecxz
inc
dec
inc
pop
call
mov
inc
rcl
sbb
jmp
les
pop
sub
xchg
negb
jg
jnp
xor
outsl
lret
push
xlat
scas
add
and
insb
ja
js
dec
add
push
rcr
testl
cld
cmpl
jns
dec
adc
dec
xor
sub
ja
or
or
xchg
push
imul
dec
jo
and
inc
ja
jno
xchg
push
dec
jb
mov
sahf
hlt
jecxz
lods
or
add
xchg
xor
rolb
icebp
aad
dec
rcr
mov
loopne
imul
cmp
sub
inc
daa
loope
pop
xchg
insl
cld
in
mov
cmp
ds
ljmp
repnz
rclb
sti
xchg
out
outsl
push
adc
jmp
push
ficomps
sbb
fisubs
mov
pop
xchg
movsl
pop
cmp
cld
out
cmp
inc
sbb
xchg
rolb
xchg
mov
xchg
add
out
dec
sbb
fdivrp
mov
cmp
add
or
xor
xchg
mov
into
pushl
sbb
out
xchg
inc
clc
xchg
add
adc
push
jnp
neg
adc
gs
sub
sbb
add
fistpll
insl
mov
xchg
dec
xchg
xchg
jle
dec
xchg
gs
push
arpl
lds
jb
cltd
xchg
pop
ficoml
push
ljmp
mov
outsl
outsl
xor
lds
orb
inc
xchg
sbb
mov
out
lret
ds
sbb
pop
in
adc
or
ljmp
xchg
shlb
jl
loopne
jno
or
cld
mov
pop
mov
dec
pop
jbe
xchg
xchg
insb
xchg
mov
sarl
xchg
add
xor
jnp
pop
and
mov
or
fwait
and
cli
xchg
xchg
jl
aam
les
test
inc
mov
mov
sbb
out
or
push
add
pop
mov
push
jnp
call
xchg
dec
lods
mov
jnp
out
xchg
jns
inc
out
jmp
insb
fwait
div
pushl
mov
je
xchg
pusha
loopne
adcl
shlb
jg
outsb
fisubs
les
adc
outsl
push
xchg
mov
movsl
insl
cmp
decl
or
xchg
inc
xchg
jmp
popa
hlt
mov
adc
xchg
inc
out
sbb
fcmovnu
pop
fcoms
test
or
or
jle
sbb
rolb
inc
xchg
cmp
pop
movsl
fmull
push
mov
pop
and
mov
xchg
fucom
push
leave
mov
cmc
dec
leave
xchg
frstor
insl
push
mov
sub
adc
and
and
fwait
jnp
lcall
enter
lock
je
es
pop
jb
cmp
xchg
outsl
add
xor
cld
cld
jbe
or
jecxz
into
jae
xchg
out
iret
xlat
cmp
jbe
mov
xor
dec
call
xorl
fsubrp
mov
or
and
mov
icebp
jo
pop
sbb
jecxz
ret
add
lods
push
mov
xchg
push
ja
test
sub
and
out
into
push
or
fmuls
push
pop
fisubs
ljmp
dec
inc
cltd
int
xchg
js
jno
inc
clc
xor
insl
add
add
xchg
sbb
dec
jo
adc
mov
add
inc
jp
xchg
ret
xchg
or
mov
cmp
xchg
cli
mov
adcl
mov
scas
lahf
inc
aam
pop
lret
fsub
add
push
cmc
outsl
and
lret
das
dec
ret
add
fdivs
rep
stc
push
lods
test
cwtl
rcll
xor
int
pushf
arpl
daa
out
ret
hlt
mov
mov
xchg
jns
lret
mov
mov
sbb
push
popa
mov
std
sbb
mov
fwait
or
movsb
lea
mov
pop
xlat
mov
mov
mov
jg
es
jecxz
pop
ror
xchg
push
sub
xchg
jne
mov
adc
inc
jb
call
xchg
fbstp
fistpl
push
push
ret
bnd
mov
stos
add
loope
xchg
jae
add
ficompl
fldl
inc
or
jp,pn
fwait
jmp
incb
ror
movsb
ljmp
cs
adc
xchg
and
in
aaa
mov
lea
mov
add
mov
pop
je
mov
sub
fnstsw
lock
in
mov
add
leave
les
dec
xor
cmc
not
std
imul
inc
rorl
add
sub
loope
mov
xchg
push
ljmp
pushf
sbb
sbb
lds
mov
cwtl
or
push
add
or
xchg
cwtl
dec
xchg
in
out
bound
mov
ljmp
inc
outsl
iret
pop
xchg
fwait
jle
and
bound
add
mov
xor
sbb
int3
inc
dec
inc
xchg
cld
outsl
pop
lret
cmp
xchg
int
cmp
mov
out
fcompl
xor
fildll
xor
popf
cmp
mov
push
pop
sbb
enter
xchg
fstp
in
cmpsl
mov
xchg
test
mov
insb
push
sbb
xchg
leave
out
scas
xchg
lcall
adc
mov
leave
adc
ljmp
std
adc
insl
xchg
mov
icebp
mov
push
dec
pop
sbb
test
nop
sahf
ss
fnstenv
mov
push
dec
sub
sub
sti
imulb
adcl
jnp
push
lods
les
push
arpl
or
lods
cmpl
xchg
push
test
mov
pop
clc
or
and
or
aam
or
add
or
jne
inc
dec
jecxz
mov
and
je
lret
cld
movsl
xchg
scas
push
push
sub
imul
and
sbb
aaa
pop
jo
or
mov
inc
or
test
fsubrs
inc
push
adcl
xor
add
or
lock
aaa
cmp
adc
xchg
fisubs
pop
push
pop
ljmp
outsb
inc
lock
shrb
push
pop
ja
int
adc
das
std
das
mov
dec
in
hlt
test
ffree
and
inc
bnd
shlb
xor
add
inc
sbb
outsl
outsl
rcr
or
mov
push
pop
call
pop
js
jg
sub
lret
les
pop
and
mov
repz
adc
stos
cwtl
roll
and
cmp
lods
add
movsb
pop
mov
fwait
sbb
mov
sbb
jl
mov
cwtl
cmp
add
inc
lods
cmp
dec
jne
add
inc
ljmp
xchg
fwait
xchg
aad
sti
push
cs
jecxz
jl
das
push
es
fwait
xchg
popf
mov
jb
fs
testl
gs
outsb
les
out
je
out
das
sub
or
cmp
add
xchg
mov
sub
jp
push
stos
mov
ss
es
stc
mov
repnz
decl
dec
pop
int3
lods
add
mov
pusha
enter
sahf
pop
or
adc
lods
cld
xchg
jne
mov
mov
xlat
mov
mov
lea
jo
les
movsl
enter
loope
dec
xchg
cmp
mov
mov
shll
inc
mov
inc
out
sbb
maskmovq
dec
outsb
push
mov
pop
pop
fs
xorb
sti
or
xchg
aam
jecxz
jecxz
insl
mov
test
or
and
jae
jl
xchg
sbb
adc
mov
pop
outsl
fstpt
jecxz
fadds
push
push
mulb
xor
jmp
fistl
add
sub
lea
jb
notb
aad
gs
mov
xlat
xor
fdivr
push
xchg
mov
sub
xchg
sti
cltd
jle
pop
mov
mov
cmpsl
sarl
es
mov
inc
rcr
test
das
outsl
repnz
and
mov
test
mov
xorb
cwtl
out
roll
mov
and
push
shl
mov
mov
mov
fwait
jecxz,pt
sbbl
lods
xor
sub
jae
cmpsl
mov
ds
jne
pop
pushl
jbe
push
cmp
sub
cmp
clc
pop
xchg
adc
cli
mov
nop
dec
movsb
push
mov
pop
icebp
or
push
xor
jg
fcmovnu
aam
aas
inc
addr16
in
test
or
mov
jmp
inc
mov
sbb
aas
call
pop
icebp
mov
repz
notb
mov
mov
lcall
out
mov
push
mov
mov
movsl
push
test
into
clc
popf
cmp
lods
fimuls
insl
std
push
push
mov
and
sbb
jp
cli
or
pop
fiadds
inc
xor
sbb
jmp
ret
mov
pop
lods
fxch
sbb
outsl
pop
cmp
mov
adc
dec
jecxz
dec
xchg
push
xor
ss
cmpsb
aaa
pop
sub
inc
dec
outsl
adc
push
repz
leave
push
loopne
stos
cld
iret
nop
test
push
jns
cmc
call
or
insb
addl
sub
add
call
pmaxub
or
ret
xor
adc
xlat
mov
dec
outsb
push
stos
popa
push
sub
subl
or
mov
push
lret
fstpt
sbb
jmp
mov
mov
dec
jmp
test
outsl
les
mov
scas
mov
imul
inc
pusha
fsubp
push
pop
mov
pop
gs
pmulhuw
inc
test
in
lods
sub
rolb
xchg
pusha
ja
cmp
sub
mov
inc
test
rcr
pop
dec
mov
stc
push
xchg
sbb
sub
mov
jae
mov
mov
gs
inc
outsl
xchg
pop
ffreep
fstpt
and
cli
pop
aad
rorb
pop
push
loope
mov
movsb
loop
subl
addb
sub
mov
in
mov
mov
pop
pop
out
pop
in
jnp
imul
mov
rcrl
outsl
sbb
sahf
aaa
popf
scas
xor
mov
clc
fucomip
push
pushf
or
jb
leave
mov
stos
cmp
add
or
gs
xor
ss
popa
sarb
adcb
enter
xchg
sbb
sub
lahf
call
xchg
cmpsb
push
jbe
jge
mov
hlt
aam
jbe
adc
cmc
negb
iret
inc
add
xorb
inc
jno
sub
sub
adc
push
mov
push
stc
adc
mov
mov
sub
lock
xchg
add
out
sbb
or
pop
adc
add
test
pop
jmp
fmull
pusha
and
jmp
sbb
cwtl
lods
subb
cmpb
push
popa
xor
shrb
cmc
iret
shlb
or
and
pop
mov
cmp
xor
xchg
pushl
xchg
xor
ljmp
or
addr16
sbb
pop
outsl
shl
lcall
push
gs
add
loope
and
mov
cli
andb
dec
pmaxub
inc
xchg
add
test
inc
adc
pop
pushl
icebp
pop
mov
cwtl
cmpsl
inc
mov
sub
sbb
leave
cmpsl
mov
loopne
sub
mov
pop
jp
mov
push
add
mov
push
pop
mov
push
movsb
and
movsl
jmp
mov
pop
adc
xchg
aas
pushf
loope
fdivrs
push
push
xlat
aam
test
lret
fdivr
jle
ret
sti
push
cld
fdivl
inc
and
xor
sub
jecxz
jmp
outsl
aas
out
add
int3
add
inc
aaa
jbe
out
pusha
push
movsb
dec
aaa
xor
push
mov
fisubrs
loopne
mov
lods
cld
test
pop
es
ljmp
mov
jbe
lea
mov
inc
inc
mov
ss
inc
cltd
or
pop
push
cmpsb
iret
adc
and
dec
dec
test
adc
mov
test
cmp
mov
push
imul
movl
inc
fistpl
sbb
adc
push
xlat
fistpl
mov
aaa
andl
pusha
push
aaa
clc
testb
insb
and
dec
xchg
push
inc
xchg
push
je
loope
mov
arpl
adc
pop
jb
inc
lock
cmp
or
ret
sbb
pop
out
or
mov
out
and
clc
aas
push
mov
loope
or
add
stos
push
adc
rorl
loopne
add
pop
adc
push
mov
and
push
outsl
push
mov
je
loopne
loopne
fs
push
sub
in
pop
mov
pop
mov
mov
jle
stc
aas
lcall
mov
pop
push
movsl
js
insl
mov
dec
vmwrite
clc
mov
mov
nop
hlt
popa
pop
shr
jo
sbbl
dec
adc
nop
push
and
push
andl
add
or
sub
shr
mov
cli
out
jmp
insb
pop
mov
test
scas
in
mov
bound
loopne
sti
movsl
push
ss
adc
icebp
xchg
mov
pshufw
cmpl
negb
sub
popa
lods
pop
sbb
loope
rcll
sbb
sbb
xor
dec
jle
adc
sarb
fstpt
adc
std
loopne
gs
std
inc
sub
jp
call
push
in
sub
std
xchg
lock
xchg
jae
in
cmp
xor
imul
sub
pop
push
enter
jle
inc
sub
fcoms
cmp
ret
sbb
add
jbe
xchg
popl
ret
aas
xor
mov
sbb
movb
call
fistl
push
leave
mov
enter
jge
jbe
mov
mov
pusha
icebp
jg
stc
pushf
sub
jo
adcl
cmp
fstpt
cs
fsubs
dec
add
ljmp
sbb
mov
imul
sysexit
shl
mov
fs
jne
bound
and
add
cs
push
repnz
adc
adc
push
fldl
lret
sub
orl
inc
cmp
adc
mov
mov
xchg
inc
movl
outsb
push
inc
sti
pop
in
outsl
je
jle
sti
pop
je
sahf
les
out
aaa
pop
mov
jo
jle
or
jns
inc
jmp
rolb
pusha
mov
je
dec
shr
add
inc
lods
int
js
push
xchg
or
xlat
adc
pusha
sti
test
ret
movsl
push
or
and
push
jne
inc
js
xchg
mov
rorl
mov
inc
fsubl
xchg
setl
push
mov
pop
push
outsb
pop
out
test
sbb
int3
adc
subl
push
jl
jmp
add
adc
xchg
and
mov
leave
aas
jbe
mov
inc
xor
sbbl
cmp
ja
nop
fsubr
xchg
xchg
jae
aas
cmp
cmp
cmp
mov
or
xchg
xor
outsl
out
pop
leave
mov
jmp
std
push
pusha
xor
xchg
fmull
jg
or
rcll
adcb
mov
or
cmp
fcomps
adc
fbstp
dec
pop
dec
jge
adc
mov
mulb
inc
or
lock
push
jecxz
idiv
sbb
add
and
incl
adc
fs
imul
icebp
inc
adc
dec
loopne
ret
push
je
cli
add
sbb
ret
and
popa
cltd
push
and
ret
loop
push
cs
das
or
xchg
cltd
data16
lea
adc
or
fisttpll
fwait
jno
xchg
or
pop
sbb
and
cltd
inc
scas
adc
mov
pusha
imul
stos
das
scas
sbbl
adcl
outsl
das
cld
mov
jbe
pop
sbb
dec
push
mov
mov
sahf
add
addb
mov
das
stos
adc
jg
pop
sub
sbb
test
call
in
test
sbb
in
out
sub
inc
inc
pop
adc
pop
add
rcr
je
test
dec
inc
or
adc
xchg
mov
xor
jnp
dec
push
divb
cmp
jae
js
repnz
mov
and
and
outsl
sar
dec
add
xlat
pop
outsl
shll
or
jnp
xorl
inc
mov
xchg
adc
dec
jnp
mov
jae
add
dec
or
addl
mov
xchg
sbb
ljmp
idivl
jno
iret
call
add
idivl
xor
push
cld
mov
leave
in
mov
lods
in
dec
cld
push
cli
jmp
daa
xchg
mov
mov
pop
sahf
and
push
loop
or
push
and
pop
mov
sbb
adc
mov
sub
enter
lret
hlt
outsl
mov
shlb
jp
in
adc
test
cld
cmp
popa
or
xchg
imul
push
dec
rolb
inc
or
xchg
repz
push
mov
out
pushl
jmp
add
cltd
sub
push
mov
scas
sbb
lock
nop
mov
or
jecxz
decb
fwait
sarb
pop
pop
popa
pusha
ds
das
js
sub
or
pop
xchg
cltd
xlat
push
js
sbb
add
sub
mov
pop
dec
fmull
in
mov
push
adc
push
jne
repz
das
js
in
mov
push
sbb
sbb
nop
mov
jp
mov
and
test
fdivrs
test
jne
bound
mov
fs
xor
popa
pop
or
outsl
jl
das
cmc
repz
sbb
ljmp
fdivs
cwtl
aaa
dec
add
popa
jnp
pop
das
pusha
mov
inc
hlt
mov
ja
incb
inc
sbb
fists
test
jg
xor
movl
sbb
jne
in
mov
inc
filds
out
shr
push
cli
stc
push
stc
mov
les
subl
inc
out
inc
pop
ficompl
mov
lcall
icebp
sti
mov
dec
pusha
mov
mov
mov
dec
add
sub
mov
mov
cmp
in
mov
mov
sbb
test
mov
dec
es
into
cli
movsl
mov
xor
fmulp
leave
sub
imul
nop
and
xchg
pop
ljmp
test
xor
pop
cmpsb
jne
jl
rcr
push
mov
jbe
dec
mov
popa
imul
mov
stc
jae
push
sub
lahf
mov
fcmovnu
jmp
fcoms
mov
mov
dec
sbb
out
pushf
lea
sbb
outsl
js
in
adc
push
mov
sbb
sti
add
fcmovb
inc
stos
mov
aaa
hlt
jge
dec
das
mov
ret
cwtl
or
adc
fs
loopne
cmp
dec
cmp
repz
lods
sub
and
xor
push
lock
pop
xchg
push
sub
sbb
gs
push
repnz
aaa
fidivrl
decb
movsb
mov
or
das
das
or
sbb
jno
loopne
lea
or
mov
popa
jns
cmc
rolb
inc
xor
xchg
dec
xchg
mov
nop
ds
fisttps
pop
dec
std
jg
flds
rcll
pusha
fistps
ljmp
mov
ds
dec
push
mov
xorb
sbb
adc
lcall
movsb
ds
dec
lret
call
mov
mov
mov
jecxz
mov
jbe
mov
add
xor
jmp
fimuls
xor
mov
pop
and
pop
mov
aas
sti
movsl
jmp
mov
xchg
loop
adc
jl
icebp
mov
aas
pop
mov
addr16
add
pop
data16
jmp
cmp
add
add
xor
add
sbb
lock
add
subb
xor
adc
or
mov
je
lcall
mov
dec
adc
dec
dec
mov
add
repnz
in
xchg
xchg
jp
jno
mov
cmp
cmp
jno
test
inc
xlat
adc
jnp
ss
lahf
sub
fcoms
outsl
stos
test
xchg
aas
scas
jbe
sti
call
inc
movsb
inc
dec
xchg
inc
pop
fcmovnbe
lods
pop
roll
mov
push
ds
and
es
shrl
clc
mov
push
xchg
dec
sbb
xchg
repz
jb
je
fwait
pop
mov
mov
mov
mov
jmp
movsl
stos
hlt
dec
push
movsl
and
mov
cmp
test
xchg
lea
shrb
or
or
in
and
unpckhps
decl
pop
sub
pop
dec
pop
mov
bnd
stc
aas
mov
or
inc
insl
dec
xlat
jle
sub
pusha
pop
dec
imul
cmpsb
add
lods
and
popf
inc
mov
fdivr
filds
and
pop
sbb
iret
xchg
fld
in
out
xor
call
mov
mov
inc
sbb
out
clc
pusha
inc
sbb
cmpsb
neg
mov
mov
das
aaa
fdivr
push
cmp
xchg
pop
inc
enter
aam
or
push
test
jbe
sub
fdivr
push
insb
stos
xor
or
mov
jl
int
push
popa
xchg
add
or
mov
lea
sbb
rorb
data16
jg
shl
push
mov
data16
pusha
stos
fs
loop
pop
pop
loopne
bound
sbb
hlt
pop
add
into
inc
sbb
cld
xor
dec
or
test
jbe
test
aam
pusha
dec
scas
inc
das
leave
stos
dec
push
mov
shrb
lock
pop
repnz
cs
movsl
vshufps
clc
cs
sub
cmp
je
clc
adc
dec
orb
xchg
jbe
mov
sub
mov
shrl
out
add
lds
xchg
mov
pop
pop
inc
push
inc
dec
je
or
jle
loope
lret
lds
pop
jp
mov
mov
jnp
pop
stc
into
jg
insl
dec
cmp
mov
mov
xorl
leave
adc
js
fldl
mov
pop
adc
jge,pt
pop
mov
xor
or
dec
cld
rcrb
jg
push
daa
sub
jo
daa
orb
push
sub
jns
xchg
jbe
call
cmpb
in
inc
shlb
mov
xor
inc
jmp
loopne
push
inc
pop
lret
test
es
mov
sub
lods
fnstcw
sbb
int
dec
mov
pop
lods
cltd
into
push
scas
or
lds
call
cwtl
bound
pop
out
jo
les
xlat
pop
mov
aad
decb
mov
pop
mov
enter
or
jmp
test
cmp
pop
addb
inc
mov
loope
jmp
ss
adc
je
cmp
hlt
cwtl
and
lret
fistpll
iret
insb
cltd
xchg
add
push
flds
adc
and
shr
jo
and
mov
mov
stos
out
push
ret
push
dec
mov
sub
scas
js
mov
cmp
ss
hlt
sub
rcl
test
repz
enter
dec
insl
incl
sahf
lcallw
ja
outsb
pusha
xchg
push
push
and
jnp
sti
clc
fisttps
test
mov
xchg
movb
xor
jo
inc
xchg
pop
push
dec
jge
loopne
mov
sbb
pusha
xchg
push
fisttpl
add
add
in
xchg
mov
push
cltd
pop
notl
adc
test
or
mov
mov
aas
mov
scas
adc
notb
mov
and
inc
mov
jae
jne
cli
push
imul
pop
shrb
or
sub
hlt
sbb
imul
cmpsb
jecxz
fildl
cmovle
inc
xor
movb
mov
mov
nop
clc
pusha
xchg
or
lock
sbb
push
popa
cli
xchg
pop
and
out
inc
mov
push
dec
push
cltd
add
jge
inc
mov
ljmp
fdivl
popf
sub
mov
outsb
mov
pop
insb
ljmp
int3
fs
imul
fsts
fwait
mov
aas
pushf
shr
fnstsw
add
push
push
leave
push
js
subb
adc
fucom
ficompl
xchg
dec
cs
mov
dec
xor
dec
into
xor
add
inc
dec
cs
fidivrs
add
cmp
adc
push
pop
movsl
adc
sahf
jmp
mov
xor
mull
outsl
je
insl
jnp
adc
xchg
mov
cmpsb
movsl
daa
mov
mov
fstl
cli
repz
mov
in
int3
mov
pop
outsl
cld
or
add
test
or
xor
cmpsb
movsl
ffree
pcmpgtb
ds
insl
negb
sar
push
iret
jge
in
pop
mov
scas
mov
push
inc
movsl
and
xor
cli
cmp
popa
inc
or
outsl
push
daa
sti
dec
fsubrl
fwait
in
jno
pusha
mov
adc
push
adc
and
push
cmpsl
lret
in
cli
mov
cli
pop
repz
test
sbb
jmp
xchg
cmc
or
sbbl
dec
and
mov
aaa
roll
lcall
pxor
ffreep
dec
cli
pop
cs
sub
scas
xchg
sti
stos
push
pop
pushl
jmp
pop
xor
in
mov
fwait
jbe
outsb
jb
pop
jo
nop
sahf
xorb
lock
dec
xchg
cmpsl
mov
inc
add
jno
jb
lea
mov
arpl
or
jle
insb
loope
cmp
pop
test
out
loopne
jp
dec
fs
shl
arpl
and
mov
cmp
mov
in
pop
aas
mov
mov
or
sub
mov
pop
es
sbbl
mov
cmpsb
lcall
add
sarb
aam
xchg
and
push
mov
mov
jo
jmp
out
push
cmp
fsubrp
test
out
adc
xlat
push
dec
std
pop
fdivs
sub
adc
daa
dec
lahf
xor
cli
or
pop
int
adc
nop
cltd
test
mov
cs
fstl
dec
mov
pop
out
xchg
into
cltd
add
or
pop
cmpb
cmpsb
or
jae
dec
xor
jb
insl
mov
aam
or
inc
sbb
ss
dec
adc
in
jo
mov
idivl
ret
stos
mov
lock
dec
or
pop
fnstsw
mov
iret
iret
loopne
and
std
je
add
enter
mov
lcall
xor
xchg
dec
es
push
xor
ror
inc
dec
not
jne
mov
xchg
fisubs
mov
sub
mov
pop
jg
cmp
xchg
xor
inc
pop
mov
sbb
push
mov
adc
inc
std
cmp
or
loope
js
cs
add
mov
call
mov
push
addr16
test
mov
and
sub
pop
es
mov
das
pop
clc
adcl
jno
cmovns
inc
test
mov
lods
push
adc
and
inc
dec
mov
xor
es
jmp
lods
jbe
pop
dec
sbb
ret
icebp
jp
inc
sbb
mov
sub
xchg
push
push
jecxz
mov
hlt
cmp
mov
cli
xchg
pop
adcb
sbb
add
add
or
decb
ljmp
rorb
test
sbb
lods
call
adc
mov
notb
test
pop
loope
jl
xor
xor
test
jmp
adc
fwait
pop
mov
fildll
into
inc
xor
fsubr
popf
sub
jmp
hlt
insl
jmp
daa
mov
ds
out
add
inc
push
pop
lods
ffree
xchg
sti
mov
or
mov
mov
rdtsc
cmpxchg
adc
xor
mov
add
jae
lea
call
or
stc
sub
jle
or
mov
lret
and
fsubl
add
or
pop
lods
xor
outsl
pop
cmp
xchg
pusha
loopne
mov
and
mov
jb
outsl
mov
jge
or
sub
xchg
pop
jo
dec
mov
outsl
jl
xor
xor
mov
add
in
cs
pop
jb
sbb
in
stos
in
mov
das
fcompl
cmp
insl
imull
movsl
add
push
push
jo
xor
in
push
inc
jmp
outsb
movsl
add
push
push
push
ss
popf
hlt
mov
xlat
mov
add
mov
inc
loopne
fnsave
jae
sbb
cwtl
push
push
iret
jnp
add
faddl
cmp
imul
ret
fimuls
and
mov
in
movsl
jg
jecxz
sahf
mov
adcl
pop
stos
push
pop
add
push
inc
mov
das
mul
outsb
aam
fmuls
jbe
pop
andb
cld
popl
inc
popf
or
call
dec
push
add
jmp
pop
ret
mov
dec
sbbb
mov
xor
cwtl
xchg
mov
jbe
sub
mov
add
cltd
adc
cld
inc
or
jmp
mov
inc
imul
dec
es
mov
fmull
nop
cwtl
pop
mov
je
sbb
cs
cld
cmp
mov
add
pop
dec
add
fwait
mov
pusha
xchg
xchg
fldcw
lahf
call
inc
mov
xchg
cli
mov
stc
fs
clc
xchg
dec
mov
jbe
pushf
and
das
lock
dec
or
ret
and
sbb
push
js
jecxz
pop
xor
pop
lcall
mov
mov
sti
pop
sbb
jb
call
add
ljmp
add
cltd
int3
inc
and
loope
inc
adc
jne
das
mov
and
xor
mov
mov
jno
repnz
scas
pop
sbb
ficoms
cmp
dec
or
xor
pop
rcl
push
in
dec
pop
or
cmc
aad
or
add
mov
dec
add
testl
fwait
roll
inc
or
sbb
xchg
rclb
negb
das
leave
fisubrs
xchg
lock
add
pop
mov
lods
jno
cld
test
stc
pop
dec
cli
inc
inc
and
jnp
les
pop
ficomps
jno
mov
and
hlt
scas
cmp
dec
mov
mov
aam
push
push
or
and
add
insl
mov
std
outsb
adc
dec
in
sbb
or
loop
mov
sub
sarl
mov
loop
sub
icebp
fistl
jg
add
lret
mov
inc
into
cmc
cmpsb
fisubs
cs
jno
sbb
or
test
cld
aad
mov
mov
add
sub
adc
cmp
stos
or
mov
or
dec
pop
les
cmpsl
adc
fistpl
enter
cmp
lcall
mov
and
in
in
lds
add
push
ljmp
or
in
pushl
lods
and
addr16
repz
in
mov
sbb
fldenv
xchg
pop
int
cmpsb
arpl
outsl
mov
jl
pop
lds
jg
divl
jecxz
inc
and
xchg
cwtl
ret
push
adc
adc
scas
fisttpl
xor
rolb
and
hlt
jg
cmp
testl
xor
shll
pop
outsb
cs
rorb
pop
pop
fwait
adc
dec
lcall
mov
dec
xor
and
aaa
sub
outsl
pop
cli
lret
loope
fs
push
xorb
dec
cmpsl
fstl
dec
mov
push
add
mov
and
add
xor
lods
pop
and
pop
inc
fldpi
jg
push
cld
jl
and
rol
inc
loop
popf
and
jmp
and
jae
sbb
xchg
outsb
mov
mov
aas
xorl
repz
push
cs
orl
scas
enter
sbb
hlt
mov
dec
add
xchg
addr16
in
xlat
ss
mov
in
sbb
fcmovnu
sbb
mov
jno
or
xchg
add
movsb
and
shlb
dec
mov
push
aam
shlb
sbb
ss
testb
mov
int
sbb
movsl
mov
and
mov
add
add
lcall
outsb
test
cmc
mov
shrb
in
cmp
jecxz
dec
mov
aad
ss
jmp
pop
frstor
and
sbb
sbbb
jg
add
stos
lds
test
push
push
mov
push
test
add
mov
icebp
xor
mov
orl
imul
or
fcmovb
incl
mov
mov
mov
fdivp
lcall
xor
adc
jle
sbb
aam
movl
push
in
xchg
adc
adc
jae
lcall
push
jnp
loope
push
repnz
repnz
mov
test
sub
ret
inc
mov
rcr
in
in
pop
frstor
pusha
mov
iret
test
xlat
cmc
push
lcall
pop
xor
mov
dec
fxch
jecxz
mov
aas
adc
xchg
pop
xchg
xchg
pslld
out
mov
jo
fwait
jge
push
popf
pop
xlat
pop
dec
dec
ret
in
dec
in
ds
lret
and
notb
dec
dec
pop
out
add
pop
pop
cltd
or
inc
rcrb
das
mov
clc
dec
je
inc
or
inc
dec
push
pop
addr16
sbb
pop
sbb
cmp
mov
scas
mov
cld
xor
sbb
popa
test
andb
cs
stos
lea
and
dec
fwait
add
dec
sbb
jbe
sub
jno
jg
mov
std
add
cmp
inc
sbb
fcoms
das
fmull
adc
adc
push
test
pusha
lea
mov
adc
lods
pop
test
adc
mov
mov
std
lock
sbb
sub
ljmp
jle
sbb
push
mov
inc
jmp
cwtl
jecxz
push
ret
sub
mov
sahf
sbb
hlt
aad
jge
jmp
sub
jmp
pop
pop
rclb
lret
xor
aaa
xchg
mov
and
std
or
outsl
pop
xchg
sbb
push
jge
adc
lret
mov
cmp
lods
jp
mov
mov
fisubs
sub
sti
push
dec
aaa
add
jp
outsl
cmp
and
imul
push
pop
repnz
call
cld
ja
pop
insl
sbb
or
dec
gs
push
and
test
mov
pop
dec
insb
adc
lret
mov
ret
xor
mov
push
sbb
and
push
cmp
out
adc
out
imul
push
hlt
arpl
xchg
xchg
push
mul
test
xchg
cltd
jge
cmpsb
fstpt
loop
sub
xor
mov
shll
or
je
iret
into
push
ja
xlat
mov
add
or
push
and
cltd
mov
inc
mov
add
test
jno
xchg
jmp
jecxz
out
pop
icebp
jg
in
fwait
add
mov
stos
call
call
mov
sti
or
mov
pop
push
pop
gs
outsb
sbb
and
mov
mov
pop
es
das
mov
xor
xchg
clc
fldt
cli
inc
ror
xchg
mov
jmp
stc
test
mov
and
push
jmp
sub
popl
in
js
rolb
lods
xor
and
fdivr
aaa
repz
roll
inc
add
push
sbb
test
sbb
xchg
jg
fstpt
xchg
fwait
dec
mov
cli
test
inc
cwtl
jle
outsb
add
jl
jp
xchg
insb
imul
incb
imul
adc
in
out
xchg
sahf
call
adc
mov
inc
mov
pmuludq
or
cmp
xchg
push
lea
cmp
sbb
push
popf
pop
mov
jp
mov
lds
stos
xchg
mov
je
jg
lret
jbe
ds
iret
or
mov
push
leave
cmp
out
stos
sti
mov
call
or
push
push
js
enter
lock
cmp
in
ljmp
cmp
sub
out
les
ret
out
cli
pop
cli
push
test
arpl
or
xchg
aam
in
add
out
jp
icebp
or
mov
sbb
fldt
inc
icebp
mov
cmpb
pop
bound
addr16
dec
xchg
int3
jl
inc
mov
xchg
inc
cmp
inc
outsl
xchg
loopne
and
or
rolb
cmp
adc
sub
out
dec
cs
call
outsl
mov
fmul
adc
inc
lods
cmpsl
mov
std
sbb
inc
push
je
jb
ljmp
fcoml
test
outsb
sub
repz
push
push
mov
fldl
loopne
aad
xchg
test
and
mov
stc
adcb
loope
add
lock
in
jno
ja
jmp
add
paddq
jl
mov
pop
jecxz
clc
push
push
mov
add
or
pop
xchg
adcl
aad
xchg
xchg
pop
sahf
rcl
jg
add
out
sub
cmp
or
sbb
lea
jns
and
in
cmp
ret
push
xchg
pop
fdivrs
push
cli
inc
and
or
mov
std
add
and
out
jp
adc
cmp
or
sbb
fs
jne
fimuls
js
inc
xchg
shrl
ja
sub
fnsave
cwtl
jne
push
mov
adc
mov
jno
icebp
scas
rcrb
jle
in
mov
out
fisubrl
dec
mov
adc
jnp
mov
das
sbb
mov
cli
inc
add
or
push
push
shll
dec
pusha
mov
pop
cld
pop
ljmp
lds
sub
or
mov
push
pop
or
rolb
lods
or
pusha
sbb
arpl
cmpsl
or
mov
arpl
and
aad
lods
xor
mov
js
jmp
pop
ja
push
lcall
std
jmp
or
mov
mov
ja
push
std
lea
dec
xchg
sbb
adc
nop
ss
iret
jb
mov
mov
jb
jne
insb
cs
mov
aad
cmp
push
mov
in
mov
ss
mov
out
arpl
push
roll
icebp
iret
nop
add
add
mov
xlat
adc
mov
das
or
add
cld
cmp
rorb
call
lds
mov
adc
cmp
fwait
pop
mov
aam
lret
mov
mov
add
imul
dec
lds
mov
outsb
jle
xlat
sbb
pop
mov
inc
mov
adc
dec
push
repz
mov
arpl
sbb
ficoms
mov
push
sub
movsl
dec
call
cmpsb
mov
mov
filds
mov
sub
js
int
xor
imul
push
jno
and
cmpsb
push
popaw
jns
mov
pop
divb
push
adcb
fbstp
adc
sbb
adc
fstpt
or
fsts
mov
xor
scas
dec
arpl
adc
jl
adc
sbb
cmc
dec
cmp
mov
add
mov
dec
cld
lods
sbb
dec
mov
imul
sub
cli
in
and
push
faddp
pop
rorb
cmp
mov
jmp
aaa
cmc
test
test
je
or
into
mov
sbb
mov
jb
add
lea
sub
imul
int
gs
jge
inc
das
mov
int
and
aad
stos
mov
imul
int3
aam
movsb
iret
sub
inc
sbb
ds
mov
sbb
stc
cwtl
movsl
pop
sbb
mov
sub
sbb
icebp
jg
xchg
ja
jecxz
sbb
jb
cmp
jns
faddl
mov
xchg
outsl
arpl
cmpsl
pop
aam
das
push
jbe
push
sbb
addr16
rorb
popf
shl
inc
fcomps
mull
add
mov
or
psubsw
mov
xchg
xor
xorb
push
sub
cmp
shlb
test
lods
iret
xor
cld
add
jb
xor
mov
jecxz
mov
push
enter
aas
movsl
aas
das
addr16
adc
rclb
jecxz
and
fnstsw
sub
pop
and
sub
xor
mov
push
mov
cmp
dec
call
xchg
fdivs
cbtw
dec
dec
mov
fdivr
mov
rorb
ljmp
dec
add
fistpll
cmc
xor
cmc
lds
out
lcall
mov
imul
mov
icebp
push
pop
call
roll
fmull
jmp
nop
and
leave
add
dec
pop
lea
int3
push
pop
inc
enter
nop
leave
notl
xchg
out
xchg
outsb
sti
lcall
std
cmp
bound
sbb
cmp
call
jg
aas
daa
daa
and
es
push
int
mov
xchg
pop
lahf
jno
pop
mov
jb
fwait
or
outsb
fildll
adc
push
rolb
lods
call
jmp
and
and
popf
sbb
std
fcmovnbe
sti
aad
inc
and
sbb
push
jne
ljmp
dec
sub
inc
xchg
sub
das
ljmp
mov
cmpl
ja
fucom
inc
shlb
rcr
ret
or
xorl
push
outsl
clc
pop
mov
loopne
mov
movsl
test
push
inc
cmpsb
in
nop
movsb
adc
add
imul
xorl
xor
inc
mov
lahf
mov
out
jle
in
dec
mov
mov
mov
add
mov
cld
shll
loop
inc
cmp
pop
stc
xor
xchg
cmpsb
orl
add
add
inc
addl
aam
and
cmp
subl
and
xchg
dec
and
ja
fidivrl
xor
adc
pop
cld
popa
cs
xor
xchg
into
jl
imul
ja
roll
into
and
pusha
mov
clc
loopne
subb
andb
sbb
push
repz
andl
in
jns
iret
jp
mov
jmp
in
inc
cmpl
push
std
jae
scas
push
jle
fisubrl
cwtl
outsl
or
test
enter
outsl
sub
adc
and
dec
in
inc
shll
or
lea
push
adc
adc
or
ret
fucomip
mov
jmp
lods
mov
xor
loope
and
jnp
dec
xchg
lds
and
mov
insw
movsb
cs
xor
mov
cmpsb
roll
repnz
lods
sbb
push
fcmovnbe
mov
fisttpll
ss
push
stos
cmpsb
cmp
mov
mov
inc
arpl
add
mov
fpatan
ror
shrb
sbb
dec
cmpsb
mov
add
in
shll
repnz
dec
sub
stc
sbb
add
mov
mov
xchg
mov
shrl
popa
cmp
ret
jge
jnp
call
inc
inc
clc
cwtl
or
pop
ret
mov
test
and
jb
pusha
push
inc
mov
nop
xor
les
fwait
icebp
dec
sbb
fistpll
lods
add
mov
or
loope
leave
mov
lods
and
test
fidivrl
leave
jb
cmpsb
inc
mov
adc
imul
frstor
inc
and
jno
sbb
cld
jb
jg
mov
shlb
sub
cltd
mov
dec
xor
pop
jb
jmp
cmp
fistpl
loop
adc
std
jg
xchg
or
bound
xor
sbb
sub
shlb
test
or
pop
mov
hlt
mov
jle
adc
icebp
les
jae
outsb
push
mov
popa
jmp
int
sbb
xchg
pop
adc
mov
int3
testl
sbb
in
into
psubsb
ljmp
popf
xchg
les
call
aas
popa
add
test
lahf
xchg
mov
cltd
mov
ret
pushf
xchg
and
enter
pop
test
push
and
out
adc
inc
fldt
or
jecxz
enter
es
pop
sub
nop
and
shr
inc
mov
lea
repz
inc
je
xchg
push
dec
aam
cmpsl
jne
ljmp
pop
mov
add
pop
cmp
idivb
cs
push
push
loope
lea
cmp
push
sti
scas
sbb
test
cmp
xor
leave
in
out
pop
ljmp
loopne
pop
rcrl
fcmovnu
sbb
imul
and
or
xchg
jmp
out
repnz
xorb
subl
outsl
fbstp
mov
dec
dec
rcl
loope
loopne
nop
adc
imul
nop
xchg
add
jae
inc
push
insb
xor
or
clc
out
xchg
bnd
jno
gs
cmp
popa
mov
mov
inc
adc
pop
and
or
dec
insb
iret
add
out
inc
popa
leave
inc
dec
in
test
jp
xchg
shll
inc
aaa
repz
push
mov
mov
add
jmp
xor
ret
fidivl
jae
mov
dec
jmp
testb
ljmp
cli
pop
movsl
subb
popf
fidivrl
jno
mov
push
add
fcmovnu
mov
adc
sub
sbb
sbb
cmpsb
jae
add
cwtl
adc
jmp
stos
adc
adc
sub
dec
fs
loopne
mov
and
test
sbb
frstor
jp
cmpsl
push
ljmp
and
inc
and
loopne
adc
or
add
addr16
cmpl
jmp
int3
loopne
into
pop
mov
jbe
gs
inc
mov
fidivs
clc
mov
mov
add
pushf
in
inc
stos
jnp
xor
imul
fwait
push
push
dec
and
sbb
dec
cmp
out
jno
fwait
loopne
lock
cld
pop
outsb
movsb
lods
xchg
ret
jge,pt
popa
xchg
xor
sbb
call
adc
arpl
imul
mov
bound
outsl
jne
lcall
ds
xchg
fdivrp
lods
and
out
lods
clc
fstl
sbb
sbb
enter
fwait
add
in
jb
adc
xchg
iret
xlat
dec
push
or
mov
sbb
ljmp
jo
or
test
hlt
dec
in
push
stos
xchg
jp
fists
mov
sub
mov
test
test
adc
push
sub
sbb
fcmovne
cltd
pop
sbb
dec
scas
lea
sub
add
mov
jg
pop
and
adc
out
dec
lock
xlat
ljmp
jle
sbb
inc
lret
lcall
push
mov
in
mov
sub
mov
sar
inc
sbbb
and
pop
stos
lock
imul
push
mov
push
in
jo
fstl
adc
out
nop
push
pop
outsb
mov
int
mov
jmp
ljmp
push
jle
movsb
xor
and
cmp
daa
mov
jmp
xchg
cmp
sbb
mov
popf
mov
mov
or
lahf
xchg
dec
jl
imul
or
add
jp
push
addb
in
call
stos
pop
adc
mov
and
jl
fcomi
push
out
xor
mov
xchg
mov
mov
sub
inc
inc
pop
mov
call
jne
jecxz
jmp
cwtl
daa
inc
fwait
clc
xchg
fcomi
add
jl
ja
mov
mov
push
mov
adcl
xchg
adc
lar
inc
lret
xorb
inc
adc
inc
fisubs
movsl
cs
xor
inc
sbb
incb
in
je
jp
ljmp
jno
inc
xchg
sub
cltd
inc
mov
sar
in
pop
lock
stc
pop
nop
testb
dec
push
je
popa
inc
jno
outsl
daa
js
arpl
outsl
outsl
xor
sub
decl
aam
and
adcb
inc
inc
push
pop
cmp
dec
push
or
mov
adc
dec
movsb
mov
fcmovnu
cmp
lahf
add
ljmp
cmp
insb
inc
decl
pop
push
jle
mov
sarl
insl
call
xlat
sbb
or
inc
rorb
ss
pop
mov
iret
roll
iret
imul
imul
addl
fnstsw
and
clc
xchg
jbe
mov
jne
xor
gs
pusha
outsb
mov
add
push
mov
xchg
jmp
mov
adc
imul
mov
mov
fistps
and
fsubl
sbb
nop
adc
loope
push
outsb
outsl
lahf
test
das
lret
ret
pop
jmp
das
mov
imul
jns
lahf
fcom
inc
mov
push
lret
mov
adc
shl
pop
pop
icebp
mov
cmp
mov
mov
lds
ret
movsl
mov
jl
push
fisttpl
out
mov
cmpsb
repz
sbb
mov
cld
shr
addr16
push
imul
cmp
cmpsb
pushl
hlt
mov
xorb
push
xchg
clc
xchg
sbb
mov
add
or
arpl
mov
cmp
rorb
js
sahf
inc
fldl
movsl
mov
test
into
mov
mov
mov
pop
sub
adc
lret
shl
add
cli
loopne
mov
stc
das
mov
mov
mov
aas
adc
sub
mov
testl
mov
fildl
cmp
call
clc
push
mov
andl
out
test
data16
mov
mov
inc
out
inc
adc
jbe
ficompl
je
rcl
pop
jo
in
mov
mov
mov
mov
cmp
xchg
sti
je
std
mov
into
scas
add
xor
push
add
rclb
sub
mov
jb
mov
mov
sub
dec
inc
lcall
adc
ja
xor
and
pop
pop
pop
fidivl
mov
jecxz
sub
add
insb
clc
jno
aam
mov
cmp
jns
mov
lcall
push
lahf
mov
or
sub
fists
xor
into
pop
cmp
xlat
sti
dec
mov
jecxz
mov
inc
cmp
pop
test
popa
bound
adc
lock
push
jae
push
adc
add
std
jbe
clc
sbb
xchg
dec
cmp
leave
movsb
jmp
in
mov
push
jo
xchg
sbb
push
sbb
mov
dec
jb
sbb
cli
dec
movl
pop
xor
in
adc
cmc
les
mov
push
inc
mov
or
cltd
mov
push
cwtl
xchg
pusha
adc
ror
ljmp
in
jbe
roll
lods
or
or
inc
jge
mov
fidivrs
push
cmp
cld
in
dec
pop
je
pop
ljmp
inc
mov
pop
dec
and
push
sbb
xor
outsl
mov
push
mov
int3
sbb
mov
xlat
ss
ljmp
push
xchg
lds
push
insl
lods
jo
fidivl
push
call
jo
out
cmpsl
and
and
pop
push
fstpl
push
insb
sti
xchg
pop
jae
rcll
ja
in
test
jno
dec
lahf
repz
push
test
sbb
jg
push
pop
cmpsl
mov
inc
mov
or
jle
or
or
sub
xlat
add
sbb
jl
aaa
loop
xor
xchg
push
enter
hlt
or
add
nop
sbb
jp
sub
ljmp
and
das
cmp
sub
les
mov
mov
push
ds
add
push
or
mov
pop
pusha
add
xor
jmp
fidivrs
popa
adc
or
jnp
cld
fimull
adc
jg
fwait
jnp
lret
arpl
adc
push
jge
outsl
cmp
add
gs
mov
add
dec
mov
repz
xor
cmp
mov
mov
fistps
sar
pop
scas
cmp
fildl
into
mov
aaa
mov
mov
xchg
lcall
lods
add
lock
add
cmp
fimull
pop
jle
cmp
lods
cmpb
pop
int3
arpl
pushl
mov
sbb
insl
xor
add
adcl
cmc
test
sub
icebp
xor
xchg
push
je
xor
jb
xor
mov
out
mov
sub
lret
jle
out
sub
int3
pop
lcall
loopne
jge
aas
js
das
mov
inc
inc
hlt
test
inc
dec
push
jecxz
push
adc
or
or
and
aaa
mov
push
test
mov
out
fstps
sbb
mov
xchg
cmp
mov
jno
and
ficoml
add
nop
mov
or
sub
inc
xchg
sub
jge
push
mov
jne
fs
sbb
fs
call
or
push
cmp
ds
lcall
movsl
ljmp
jecxz
ret
cmpsb
fnstsw
xchg
mov
dec
mov
mov
add
dec
lods
xchg
cmp
test
lcall
enter
push
imulb
mov
inc
jne
rorl
sub
cmpsl
je
fidivrs
cltd
scas
xsha1
cmpsb
or
pop
orl
mov
mov
pop
loopne
jmp
test
sub
imull
cwtl
movsl
fistpll
cmp
shll
inc
inc
repnz
fistpll
sub
jo
dec
das
cmp
fucomip
cmp
outsl
adc
or
fstl
push
aad
mov
mov
inc
fdivs
push
or
das
sub
jle
fwait
cmp
leave
aas
mov
jge
bound
std
ret
jne
jae
xor
push
mov
jg
in
imul
cmpsb
pop
adc
sub
push
enter
pop
lods
inc
dec
add
sub
xlat
mov
add
xchg
insl
cmpb
mov
in
rcrb
ljmp
or
mov
inc
or
push
xchg
loop
in
hlt
jne
ja
mov
dec
lcall
in
js
rcrb
testl
jle
jmp
hlt
add
xchg
iret
lods
fcomps
jp
push
popa
sub
in
movsl
mov
into
inc
shl
xchg
xor
add
push
mov
jb
adc
dec
lods
xlat
mov
adc
or
je
inc
adc
test
mov
sbb
sbb
pushf
cmp
es
clc
shll
pop
rcrb
mov
and
fdiv
outsl
insb
cltd
fs
out
push
aam
dec
inc
inc
push
jle
mov
inc
push
test
hlt
xchg
mov
popa
jnp
jo
shr
add
ret
das
mov
or
decl
or
jbe
jmp
adc
orl
sti
and
ja
fldcw
and
movsb
or
outsl
fdivl
inc
mov
cli
and
std
pop
jne
xchg
mov
xor
cmp
iret
int3
sbb
stos
pop
popa
sub
sub
push
sbb
mov
imul
xorl
hlt
adc
add
cli
fiaddl
stc
lock
in
jne
inc
pushf
xchg
mov
mov
xchg
add
icebp
jg
adc
popa
popa
add
or
jecxz
add
jg
les
adc
stos
aaa
sub
testl
outsb
adc
xchg
hlt
adc
stos
mov
pop
hlt
mov
rorb
movsl
mov
xlat
xlat
and
cmp
or
ficoms
sub
aas
cmpsl
rcrb
std
or
mov
sahf
cwtl
scas
dec
sahf
andl
inc
push
adc
push
push
pop
test
fidivl
aad
or
scas
aas
push
out
in
in
mov
jge
or
xchg
cmp
inc
pop
test
xchg
sar
daa
sbb
fnstsw
dec
out
xchg
movsl
call
or
or
add
lahf
and
insl
sub
es
fstpt
int3
lret
push
pop
jno
insl
repz
xchg
sub
fildl
scas
lock
add
mov
dec
or
sub
mov
icebp
mov
lcall
pop
add
shrb
add
call
push
insb
sbb
adc
loopne
es
ret
xor
push
cmp
movsl
mov
push
iret
pop
fsubrl
ret
sbb
aas
xchg
inc
loopne
mov
dec
leave
pop
cli
mov
aad
cwtl
repz
add
test
push
push
aaa
cltd
jno
dec
popa
cmp
ljmp
lcall
add
es
fildl
je
ret
pusha
int3
adc
jp
hlt
outsl
mov
aaa
cmp
outsb
inc
orb
leave
inc
pop
push
and
pop
repz
mov
stos
sti
fsubrs
aad
and
incb
jge
add
sbb
xchg
jp
es
jl
in
loope
or
mov
xlat
xor
fbstp
movsb
xchg
mov
cmp
jb
das
pushf
and
sub
pusha
pop
clc
in
inc
enter
mov
ljmp
aaa
cmc
sub
xchg
fmuls
push
pop
fidivl
sbb
movsl
fildll
scas
fmuls
and
mov
xor
mov
push
cmp
push
scas
and
orl
jmp
jo
pop
js
jge
push
aad
sti
jg
jl
xor
sbb
notl
or
mov
sar
out
sub
xor
cmpsl
jae
add
outsl
mov
inc
push
xchg
fidivl
inc
leave
mov
std
test
shlb
push
adc
or
je
jg
add
mov
push
pop
inc
push
push
inc
mov
loope
dec
sahf
rcrl
xchg
add
cwtl
jne
stos
sbb
xchg
fs
jo
cltd
xchg
pop
push
rolb
adc
mov
pop
mov
or
enter
jbe
lods
mov
addr16
sbbl
or
fcomip
aad
or
add
cwtl
mov
xor
sbb
push
leave
ss
push
sbbl
es
push
mov
mov
mov
popf
xchg
out
mov
sbb
clc
pop
push
lock
jae
sub
sbb
push
dec
mov
xor
and
xor
push
inc
loope
movsl
sub
jb
cld
movsl
outsb
test
jb
sub
inc
inc
mov
mov
inc
adcb
aas
aas
test
adc
mov
fldenv
push
or
jecxz
lea
mov
push
out
cmpsb
pop
sbb
add
lds
fwait
in
movsb
pop
pop
popa
and
xchg
xor
mov
int
or
lods
inc
inc
in
xor
and
jne
test
addr16
inc
push
jmp
sub
dec
out
adc
sahf
test
lcall
sbb
stos
dec
or
clc
mov
or
sbb
jne
cmc
aas
push
push
cmp
lcall
sbbb
outsb
aas
rclb
lock
inc
dec
sbb
test
test
or
and
cmpsb
sbb
lahf
mov
mov
or
popf
fisttps
sub
push
or
jnp
add
cmpsb
orb
inc
fisubrl
fadd
cmpsl
dec
int
or
ss
fildll
lcall
notb
jmp
sbb
xchg
das
inc
inc
adc
pop
das
fs
xchg
or
dec
or
pushl
or
xor
fildl
xor
mov
orb
or
das
subb
lods
mov
out
xor
pop
push
mov
lea
aam
daa
subl
loopne
fldenv
mov
incb
adc
adc
push
inc
xchg
mov
lcall
mov
movb
pop
push
push
dec
dec
fwait
aam
in
lfs
mov
mov
push
mov
pop
cmpl
into
mov
adc
jbe
xchg
fisubl
insb
mov
sarb
loop
or
mov
cltd
cli
xchg
xchg
cmp
jnp
mov
dec
pop
in
ja
enter
mov
xor
mov
or
mov
jne
imul
pop
lea
cld
ss
jno
adc
pop
jne
movb
movb
push
data16
dec
js
and
jo
cmpsl
lock
xlat
insb
mov
loopne
xlat
sbb
insl
std
rcl
jb
mov
jmp
mov
jmp
lret
sbb
adc
push
jae
jne
pop
adc
sbb
daa
insl
movsb
fsubrp
subb
icebp
dec
fistpl
cld
jg
jo
scas
sbb
jg
push
mov
push
mov
add
je
pushf
fildl
insl
std
out
mov
mov
adc
in
aas
xor
bound
or
jno
sub
jg
mov
fldcw
cmp
pusha
mov
or
cld
inc
mov
and
xchg
jecxz
mov
lock
jle
sub
mov
and
cmpsl
cld
js
lret
mov
add
xchg
loopne
hlt
popa
test
lahf
jmp
push
cld
mov
adc
sub
loopne
data16
sbbl
xchg
mov
jo
shrl
push
nop
cmp
int3
cmp
sar
ja
inc
fcom
pop
mov
inc
push
inc
sti
cmpb
jbe
mov
stos
les
or
jno
xor
pushf
jbe
fcom
fsubp
sub
add
jl
and
xor
mov
push
mov
icebp
xor
in
inc
fisubl
arpl
rol
or
push
test
jb
add
pop
bound
mov
mov
jb
in
outsl
adcb
fwait
in
or
sub
cli
xlat
lods
xchg
fsubp
add
xor
fs
addl
jl
test
jecxz
mov
adc
pop
or
pop
add
std
fwait
sub
adc
lea
popa
and
call
mov
pusha
dec
cmp
xchg
mov
mov
lret
cmp
sbb
mov
jl
pop
ss
fcmovnb
or
outsb
jecxz
cltd
imul
ret
pop
dec
xor
jmp
fdivr
mov
in
and
movsb
fstl
cmp
ret
insl
enter
xor
or
cmp
or
dec
loopne
push
cmp
mov
in
test
mov
pushf
jge
nop
cwtl
mov
lods
stos
push
dec
pop
int
jne
es
jl
lds
jle
xor
dec
sub
clc
outsl
push
add
outsl
pop
jl
clc
std
rcrb
cmp
mov
data16
sti
ret
in
imul
rcl
lods
cmp
and
lock
ljmp
les
cmpsl
lcall
pop
cs
push
dec
pop
shl
loopne
je
pop
or
push
mov
cmpb
xchg
push
decl
mov
and
cmpsb
sbb
push
dec
int3
push
insl
jmp
jp
pop
adc
push
faddl
push
outsb
fcoms
jge
add
nop
leave
and
mov
cltd
jbe
pushl
aam
pop
push
ror
push
sub
jno
lock
testb
sub
or
sub
mov
ljmp
jo
jno
jne
test
lcall
inc
inc
fstp
or
jg
mov
sub
inc
aad
cmp
les
or
ss
jbe
aaa
add
int
cmpsl
std
mov
dec
test
sbb
fwait
push
clc
mov
iret
andb
mov
push
loop
loopne
loop
hlt
out
sub
mov
test
lret
sub
adc
std
lods
jbe
cs
mov
out
pop
sahf
fiaddl
incb
jl
rorb
xor
adc
data16
push
loopne
in
shrl
les
cmp
mov
imul
add
loope
std
mov
in
pop
mov
fwait
sahf
inc
mov
pop
je
mov
or
je
lods
adc
push
add
mov
cmp
stos
ret
cld
push
cli
ds
int3
add
test
lock
cli
into
dec
loop
call
jmp
push
insl
mov
sbb
xchg
into
mov
rorb
bound
jne
xor
imul
jb
add
xchg
mov
movsb
and
inc
out
jmp
fdivrl
pop
cmp
int3
push
lret
lcall
lret
fnsave
fwait
mov
arpl
push
dec
lcall
rclb
in
jnp
cwtl
push
adc
jns
loopne
add
sbb
mov
push
xchg
pushf
jle
lods
cmp
rcll
fadd
cli
inc
outsl
mov
add
pop
aam
and
xor
es
or
xchg
mov
mov
inc
mov
es
rcl
cmpsb
jp
flds
call
pop
mov
or
std
lea
mov
sub
in
dec
ffree
in
mov
fsubrl
jne
sbb
pop
ja
sub
inc
sbb
jmp
jge
xor
in
fistl
cld
insl
cmpsl
fisttpl
cmpsl
sbb
xor
inc
mov
mov
idivl
cmpsb
xor
roll
pop
pop
adc
inc
inc
add
inc
adc
jge
xchg
enter
loopne
sub
loop
pop
push
test
xor
mov
or
push
cmpsl
into
fcmovnbe
out
pop
inc
sti
sub
cltd
icebp
jg
test
push
cs
cwtl
sub
pop
or
lcall
mov
xor
jne
and
or
add
fistps
jae
xchg
add
push
sbb
fs
pop
stos
fbld
ss
ljmp
sbb
mov
xchg
loope
js
adc
and
jg
cmpb
inc
dec
and
das
mov
clc
push
loop
xlat
es
lret
sub
mov
mov
inc
aaa
pop
or
in
ret
sbb
mov
notl
jmp
xchg
sahf
sub
sub
lcall
xor
hlt
or
mov
jmp
ds
dec
sti
xchg
jg
xchg
mov
out
jb
xor
popf
fisubrl
push
mov
in
inc
clc
adc
fsubrs
ja
xchg
lods
dec
imul
hlt
push
cmc
jg
and
in
repz
xchg
ljmp
mov
jno
xchg
mov
mov
je
es
fsub
xchg
or
inc
and
mov
lock
aaa
stos
xor
test
jmp
loopne
std
sub
mov
clc
mov
pushf
cld
mov
mov
inc
stc
pop
cmp
inc
mov
loopne
jmp
adc
add
popf
lock
in
add
add
fdivl
xor
adc
jo
inc
pop
add
lods
outsl
inc
pop
xchg
dec
dec
fistpll
mov
mov
out
pop
and
jp
push
jmp
sub
pop
pop
inc
daa
jecxz
dec
jne
mov
clc
das
mov
jb
sub
push
cwtl
push
mov
sahf
mov
lods
xor
adc
pop
add
pop
jle
insl
pushf
xchg
popf
xchg
repz
sbbl
jno
mov
push
mov
adc
test
push
in
cmp
mov
lret
mov
dec
jg
outsb
cltd
push
jnp
mov
in
mov
pusha
push
jle
adc
pop
cmc
dec
jmp
enter
lahf
lea
mov
call
sbbb
test
mov
mov
mov
cld
xor
mov
dec
pop
or
cmp
mov
xor
dec
add
xchg
add
push
inc
int
pop
stos
out
mov
loope
bnd
mov
pop
sub
imul
loop
fs
or
insb
pop
js
jo
dec
cmp
sub
xor
movsb
or
in
test
push
and
push
pop
jp
sub
sahf
pushf
mov
pop
clc
sbb
xchg
pop
jge
xor
icebp
inc
mov
or
sbb
dec
std
cltd
ljmp
mov
mov
loop
clc
sbb
sub
aaa
sub
test
adc
inc
push
jb
pop
xor
pop
add
mov
mov
or
jp
sbb
push
clc
sbb
xchg
stos
repz
adc
popa
stos
les
xlat
xor
inc
std
or
loop
jl
ss
dec
cld
mov
and
outsb
mov
inc
pop
add
jle
insl
bnd
das
mov
mov
sub
cmpsb
adc
inc
stc
cs
jns
call
pusha
mov
push
adc
outsl
xor
lret
outsl
and
or
add
sub
add
jge
cli
scas
xchg
iret
xchg
push
loop
xchg
jg
int3
aad
and
mov
xor
sbb
push
mov
xchg
xchg
or
aam
scas
and
les
movsl
fs
in
inc
loopne
jbe
and
xor
addb
pop
add
bound
xchg
je
push
neg
or
test
jnp
lock
shl
stc
ljmp
mov
fmulp
call
in
je
sub
sub
outsb
sahf
icebp
into
inc
loope,pt
push
cli
ret
jle
mov
sbb
and
out
rcr
loop
sahf
cmpsb
imul
xchg
ret
mov
shrb
adc
ret
rcl
lcall
fidivrs
dec
hlt
xchg
inc
jg
fildl
push
adc
sbb
pop
fldt
and
xchg
and
mov
xchg
rorl
lea
jbe
xor
std
dec
add
aas
xchg
pop
mov
insl
inc
lods
clc
test
stos
in
jo
sub
mov
lods
or
ja
sub
fcoms
mov
in
pop
fadds
sub
push
xorb
jg
jecxz
xlat
pop
mov
mov
mov
xor
je
pushf
mov
pop
shrl
sbb
dec
scas
or
lock
outsb
pop
outsb
and
mov
dec
test
mov
xchg
out
adc
out
add
daa
push
inc
and
testl
decl
stos
or
xchg
je
xchg
mov
mov
jbe
xor
fcmovne
fs
testb
js
jno
sti
jbe
fisttpll
xorl
mov
mov
rorl
cmp
das
jge
mov
stos
or
pop
push
rorb
cli
into
inc
jmp
gs
mov
push
gs
sbb
nop
jle
mov
xchg
dec
fstpl
jno
pop
nop
push
or
or
stos
xlat
out
or
xchg
mov
sbb
push
pop
xor
mov
push
hlt
jo
adc
lcall
test
lock
or
pop
mov
adc
push
push
dec
pop
cmc
inc
insb
js
xchg
jmp
ret
loope
mov
cmp
cmpsb
aaa
in
sub
cmpsl
and
mov
in
mov
lods
or
or
outsl
dec
mov
jae
aaa
ljmp
outsl
push
lahf
xchg
or
push
mov
push
lcall
dec
jno
fstl
jecxz
test
adc
int3
add
add
jo
call
xchg
dec
push
jns
xor
fiaddl
out
cmp
cmp
sub
dec
in
ffreep
sub
push
test
sbb
xchg
ret
in
jmp
adc
push
call
dec
push
sub
mov
mov
cmp
inc
add
call
ret
pop
aas
je
leave
mov
icebp
in
inc
rol
shl
hlt
inc
std
cmp
mov
dec
or
shrb
pop
and
and
inc
sbb
les
icebp
cmpsb
pushl
add
sub
cmpsl
lods
pop
push
inc
jle
jb
rcrl
pop
cs
sbbb
push
xchg
mov
jb
mov
aas
and
jmp
jge
mov
cmc
inc
cmp
pop
ljmp
aam
out
js,pn
xchg
or
xchg
push
fsts
outsl
add
and
inc
loope
push
and
std
mov
addr16
dec
test
repnz
or
stc
and
sub
aas
push
add
jp
add
je
nop
xchg
inc
adc
mov
or
mov
jg
sub
adc
pop
mov
adc
das
cmc
incl
test
jg
push
mov
adc
mov
mov
and
loop
aam
and
out
iret
inc
cmpb
jle
dec
shr
push
insb
xchg
pop
ss
dec
cmp
xchg
hlt
bound
test
mov
cs
pop
or
in
stc
sub
or
outsl
sbb
inc
mov
push
pop
fmuls
inc
sub
or
aam
idivl
test
mov
inc
adc
push
stc
stos
pop
xor
jb
pop
add
or
mov
cmp
jp
cmpsb
ljmp
call
add
push
mov
cmp
mov
lods
outsb
xchg
in
jmp
push
push
lock
imul
mov
inc
mov
aam
addr16
in
nop
repz
xlat
push
mov
gs
mov
test
insl
push
xor
inc
aaa
loopne
in
push
cs
dec
inc
adc
and
ds
repz
dec
mov
sbb
es
sub
pop
js
popa
into
fdivr
mov
pop
push
psubb
pop
pop
fs
in
cmc
mov
dec
dec
dec
in
rorl
and
hlt
call
jnp
mov
sub
cld
cs
add
jmp
pop
fists
push
cmp
pop
loopne
jg
je
sub
dec
lds
sbb
cltd
adc
popa
pop
shrb
sub
mov
stos
cmpsl
xor
add
loop
dec
push
cli
inc
test
daa
stc
pop
mov
sub
fists
mov
incb
push
int
cmp
std
movsl
sbb
inc
push
inc
mov
lcall
or
add
ljmp
adc
popf
xor
lret
and
sti
xchg
js
icebp
call
mov
mov
cmc
fwait
lret
jno
xlat
movsl
mov
insl
jecxz
and
xor
xchg
aas
push
out
sarl
push
cltd
incl
xchg
pushf
aaa
mov
icebp
mov
mov
shlb
add
mov
inc
push
nop
cmp
dec
enter
push
and
cli
scas
lea
stos
sub
add
out
pop
or
ret
push
add
xchg
cmpsl
push
xchg
out
sahf
push
andb
addr16
mov
shlb
cwtl
lahf
adc
adc
cmp
out
xor
cmp
dec
xchg
test
mov
and
push
insl
rcr
fidivrs
and
xor
jnp
cmp
test
inc
sub
sbb
pusha
and
pushf
pop
push
and
cs
jns
xchg
pop
fs
and
outsl
mov
hlt
dec
sub
sbb
cmpsl
sub
add
in
pop
mov
sub
mov
jns
in
call
stos
cmp
les
shrl
addr16
or
ss
xorl
addl
dec
test
mov
push
orb
add
jge
or
fidivrs
mov
mov
pop
cmp
sbb
das
sub
or
enter
push
or
xlat
xchg
imul
adc
incb
popf
jecxz
xorb
add
add
shll
fwait
out
or
dec
sysexit
rorl
sbb
adc
xchg
outsb
xor
es
std
push
mov
ror
mov
movsl
xchg
cld
pusha
adc
lock
ret
adc
push
ficoml
adc
daa
mov
and
pop
aaa
incb
std
push
cmp
fdivrs
outsl
push
mov
jb
lahf
add
stos
push
sub
repz
ljmp
aas
pop
pop
xor
rorb
mov
and
push
or
cld
lods
inc
pusha
js
inc
jmp
frstor
imul
fldl
inc
adc
lock
stc
add
pop
push
mov
test
mov
pop
mov
pop
divb
mulb
or
loopne
call
fadd
mov
call
test
pop
mov
lret
sbb
sahf
xchg
loopne
pop
iret
arpl
test
adc
push
fidivl
push
lea
lahf
cmp
cmp
jg
rcl
mulps
incb
dec
mov
loopne
mov
inc
js
mov
push
mov
mov
push
or
testl
js
addr16
cmp
cmpsl
popa
loope
jg
ljmp
inc
popa
loopne
faddp
pop
in
lods
push
mov
cmc
jb
mov
test
mov
add
mov
sub
jp
sbb
cltd
inc
cwtl
add
sub
imul
mov
arpl
aad
mov
scas
enter
mov
jmp
bound
fnstenv
orb
pop
xchg
or
cmp
or
and
sbb
mov
fldl
test
outsb
imul
push
gs
pop
adc
imul
add
xor
jmp
or
fs
mov
dec
mov
adcb
cmp
rcrb
or
sbb
stos
push
push
cld
fisttpll
dec
fnstcw
pop
xor
fidivl
push
mov
loope
ja
pop
mov
push
sbb
jne
aas
mov
xchg
add
decl
xlat
inc
pop
sbb
rclb
mov
imul
fucomp
xlat
pop
stos
das
sub
or
push
cmp
sub
mov
pop
sbb
and
adc
push
mov
hlt
xor
bswap
jnp
push
incl
add
push
dec
xor
or
inc
stos
std
aaa
mov
stos
or
xor
and
in
or
outsl
loope
adc
in
jg
inc
jnp
jge
and
sub
mov
mov
stc
jg
clc
xor
jbe
push
fcmovne
inc
xor
pop
lea
mov
bound
cmp
in
clc
decl
stos
xlat
add
xor
sbb
data16
lea
or
aaa
sti
sbbb
xlat
fisubl
shll
pushl
pushf
in
mov
dec
sbb
mov
xchg
int
jg
aaa
push
and
jae
and
adc
and
jp
inc
jbe
xchg
pushf
stc
call
decl
leave
inc
mov
xchg
xor
rolb
fnsave
stos
mov
cld
fstpt
jle
jp
aas
inc
out
fsts
movsl
or
mov
insb
outsb
xor
jecxz
out
mov
cld
inc
sbb
repnz
sbb
testb
mov
push
fildl
or
sti
les
or
xor
xchg
out
imulb
mov
jecxz
inc
addr16
add
xchg
imul
fcomps
inc
cmp
out
cmp
mov
adc
std
and
call
call
das
inc
jno
bound
pop
dec
test
pop
push
push
cwtl
adc
jns
incl
daa
jae
bound
addl
mov
data16
add
rolb
decb
test
sti
or
mov
addr16
inc
jmp
pop
in
mov
sbb
test
dec
inc
mov
in
imul
push
lds
push
shrl
movsl
ljmp
sub
mov
icebp
clc
mov
out
addb
lds
lods
inc
push
inc
fbstp
lock
cs
les
jmp
movsb
pop
adc
insb
mov
lahf
or
mov
pop
out
mov
aam
sbb
inc
rorb
gs
mov
mov
lock
jge
hlt
mov
xor
and
push
push
fld
es
or
adc
adc
xchg
xorb
add
stc
xchg
lock
cmp
push
gs
pop
mov
push
into
jno
fisubrs
je
push
push
out
ret
aam
test
push
cs
add
push
inc
push
call
ret
lods
test
push
ljmp
stos
iret
adc
mov
fsubrs
add
test
subl
insl
push
in
sub
int
mov
and
and
sbb
xchg
dec
pop
outsb
aad
cltd
push
stos
mov
movsb
and
jg
push
ret
sbb
sbb
or
mov
xor
pushf
daa
jns
sub
inc
mov
cmp
rorl
lods
roll
arpl
mov
jg
pusha
mov
push
popa
pusha
repnz
ljmp
pusha
sbb
sub
jb
xchg
iret
vcmpss
push
rcrb
xlat
pop
rolb
push
fcompl
idivb
and
aas
xchg
inc
pop
stc
gs
sub
je
testl
ss
add
cmp
outsl
je
cmp
rolb
xchg
lret
push
sbbl
imul
std
adc
and
add
fstps
imul
pop
pusha
lock
mov
dec
xchg
mov
jmp
insl
cmp
mov
xchg
cmp
mov
aad
xchg
stos
and
insb
in
mov
mov
cwtl
test
push
shll
sub
push
mov
pop
pop
aad
push
xchg
and
mov
cli
sbb
outsl
dec
xor
mov
popa
out
ret
push
ret
jo
lock
mull
adc
adc
inc
aad
mov
insl
mov
bound
out
and
xchg
xchg
stos
mov
pop
xor
sbb
inc
pushf
bound
in
pop
adc
sub
jb
loope
les
decl
movsb
dec
roll
ffreep
notb
daa
lock
mov
cmp
and
jmp
jmp
mull
or
push
lods
inc
inc
out
int
pop
ficoms
adc
mov
cwtl
in
cld
and
jb
loopne
dec
and
lea
dec
adc
cmp
mov
add
mov
hlt
add
mov
sarb
sub
dec
and
jl
test
adc
into
jp
aaa
lcall
jmp
add
push
ja
dec
mov
stos
pop
fsubl
gs
pop
pop
insl
mov
push
mov
and
icebp
adc
test
pop
addb
push
stc
dec
mov
xor
pop
pop
xchg
push
mov
or
dec
inc
sar
cmpsl
dec
int3
jmp
clc
push
insb
add
mov
mov
cwtl
or
mov
cwtl
loope
pop
mov
and
testb
sbb
add
and
inc
js
mov
push
mov
jmp
lea
cmp
popa
jge
jp
add
call
mov
add
call
or
jl
loop
loope
mov
sub
dec
mov
in
mov
push
inc
pop
jecxz
dec
lock
imul
push
test
pop
add
jg
push
cmp
jp
inc
outsl
movsl
sub
adc
or
jmp
adc
sbb
adc
imul
inc
fisttpll
mov
stc
orl
mov
out
js
push
xor
aas
and
mov
mov
hlt
adc
sbb
adc
xor
mov
loop
and
pop
dec
mov
mov
sbb
shr
pop
xor
sub
lret
lahf
clc
jmp
jle
xor
mov
xor
cld
test
mov
popf
inc
jne
decl
aaa
pusha
setge
xor
jmp
mov
ret
jecxz
pusha
mov
enter
or
test
lcall
jg
enter
decl
shlb
shrb
movsl
xchg
mov
add
cmp
aad
pop
nop
xchg
sbb
cmp
ficoml
mov
aas
xchg
jns
repz
mov
cmp
insb
cmp
sahf
mov
mov
sbb
dec
out
sbb
insb
mov
add
int
lods
jle
jmp
adc
sub
aaa
mov
shlb
loopne
dec
push
cmp
popf
or
fimull
or
daa
mov
outsl
outsl
jecxz
fstl
pusha
test
pushf
bound
inc
rcr
pop
xor
jmp
bound
jecxz
loope
stos
jmp
mov
xchg
mov
jecxz
sbb
scas
cmpsl
fcompl
cmp
cmp
mov
out
leave
arpl
cmp
mov
mov
sub
lock
mov
xchg
cltd
aas
sbb
arpl
sbb
test
inc
nop
cmp
sub
dec
sbb
out
std
sbb
cs
cld
xchg
addr16
out
int3
repnz
dec
gs
ret
ds
adc
cmp
lcall
inc
ficoml
adc
call
adc
in
addr16
mov
lret
push
xor
popf
mov
adc
les
push
or
pop
sbb
push
sbb
das
insb
add
stos
jb
stos
stos
cmc
in
mov
hlt
loopne
clc
out
xchg
rolb
mov
insl
sub
xchg
cmpsb
inc
aaa
add
mov
mov
fdivrl
lock
sub
cmpsb
and
mov
jg
test
mov
add
aad
das
inc
or
andb
pop
jne
fcom
push
sbb
cld
mov
frstor
fwait
push
xor
add
sbb
fsubl
inc
imul
xor
fadd
repnz
pop
sbb
inc
mov
jecxz
push
mov
xchg
lock
insb
jmp
decl
xchg
loopne
mov
cmc
mov
pop
in
andl
adc
imul
and
subl
hlt
das
std
out
adc
int
ret
loope
lods
movsb
cmp
popl
jne
testb
push
scas
mov
shrb
mov
in
pop
ljmp
incl
xchg
cmp
xlat
inc
int3
and
ret
call
insl
lods
sbb
mov
mov
adc
mov
aas
scas
or
dec
ja
sub
mov
sbb
stc
and
pushf
xchg
in
test
rolb
loop
pushl
aad
movsb
sub
dec
dec
pop
jecxz
mov
xor
ret
xchg
jbe
cld
fisttps
xchg
addb
pusha
mov
pop
rcr
add
ret
sub
dec
or
stos
rcll
lea
sbb
repz
sysenter
cmc
pushf
int3
syscall
or
mov
mov
pusha
je
sbb
mov
loopne
add
push
xchg
xchg
xor
cli
daa
cmpsb
adc
adc
idivb
test
fbstp
or
rcl
pushf
and
lcall
mov
jecxz
dec
mov
cmp
jo
jmp
pop
inc
lahf
lcall
cmpsb
movsl
xor
out
or
in
insb
xor
je
and
ja
ljmp
push
pop
sbb
lret
dec
test
dec
dec
push
adc
rorb
mov
mov
mov
push
lahf
outsl
sbb
inc
mov
imul
into
mov
dec
dec
rcll
lcall
fdivr
fnstcw
adc
cmp
and
sahf
inc
adc
inc
std
mov
sbb
fsts
inc
sbb
and
xchg
pop
or
xchg
dec
mov
cs
lods
sbb
fcmovbe
jg
and
aam
enter
pop
aad
xor
jo
cmpsl
fisttpll
sti
icebp
pop
cmpsb
outsb
xchg
popa
into
inc
inc
jmp
jo
fistpll
and
sbb
call
je
pop
mov
sub
sub
mov
insb
mov
adcb
mov
and
icebp
add
and
adc
popf
ret
adc
lea
rcrl
jne
push
or
mov
les
repz
lock
mov
adc
dec
sahf
scas
icebp
lods
aaa
lock
lret
cmp
orb
movsl
cmpsl
loopne
xor
pusha
sbb
inc
shrl
hlt
sbb
mov
add
data16
xchg
push
xor
pop
or
sbb
mov
shr
sbb
cmp
push
sbb
je
fiadds
cmp
push
jmp
adc
test
sbb
test
pop
xchg
jnp
add
insl
or
hlt
inc
fs
or
sub
adcl
rorl
leave
jo
push
dec
dec
fs
jg
jno
hlt
mov
repz
scas
push
nop
push
dec
mov
sub
jno
jecxz
sti
nop
test
shrb
mov
mov
lods
pop
push
mov
stos
jmp
test
cmp
cld
pop
jmp
or
dec
push
in
push
inc
jns
pusha
cli
jo
mov
push
andb
in
fistpll
pop
lret
sub
mov
jb
in
and
rcll
int3
mov
mov
ja
jmp
sbb
pop
mov
dec
add
je
fisubrl
imul
sub
outsb
mov
mov
cmp
add
cs
stos
xchg
mov
mov
test
push
jmp
pop
mov
mov
loopne
dec
dec
pop
add
lock
outsl
sbb
xchg
fdivr
test
in
jl
lret
aam
and
lds
inc
or
fwait
pop
adc
scas
test
add
mov
jge
sbb
js
and
pushf
call
or
in
into
aaa
jne
int3
popf
mov
je
xor
dec
or
mov
bound
mov
in
ficoml
icebp
jg
push
sbb
mov
xor
cmpsb
add
adc
xchg
dec
sbbl
and
jle
call
orb
push
jo
aaa
lret
inc
lods
outsb
jge
xor
pusha
test
inc
call
dec
cmp
or
adc
pop
inc
in
ds
mov
lcall
ret
daa
sbb
push
pop
dec
sti
sub
je
outsl
jge
pop
and
push
dec
push
or
xor
out
sbb
mov
inc
sbb
jmp
sbb
dec
jae
lret
sub
inc
mov
mov
xchg
sti
nop
mov
inc
outsb
adc
jbe
fidivrl
cwtl
rorb
xchg
dec
xor
push
mov
jmp
test
xchg
arpl
sti
ffreep
inc
shrb
repnz
insb
pushf
icebp
movsl
das
lock
lcall
adc
imulb
push
test
bswap
dec
std
or
xor
rorb
ja
push
lret
icebp
int3
in
xchg
outsb
push
int
mov
stos
nop
xor
sbb
lds
aas
or
pop
aaa
imul
cmpsb
inc
cmc
and
mov
xchg
and
pop
fisttpll
in
stos
sti
dec
jg
repnz
mov
scas
sub
mov
mov
clc
or
cmpsb
dec
mov
dec
xor
dec
inc
lcall
mov
ljmp
in
inc
mov
fisubl
icebp
clc
aaa
mov
adc
sbb
push
sbb
jecxz
cmp
and
jo
cmp
mov
movsl
dec
pop
pop
xlat
mov
imul
jle
ss
lcall
sub
mov
add
or
cld
fisttpl
ficoms
cltd
pop
fisubl
pushw
or
mov
sub
inc
jne
mov
jb
xchg
mov
push
and
xor
mov
mov
mov
out
sbb
aad
aam
sub
push
hlt
pop
xchg
outsl
xchg
bts
jne
pop
subb
int3
push
aaa
insl
and
daa
out
inc
xchg
imul
xchg
cmpsb
das
mov
and
xchg
inc
pop
cltd
or
bound
mov
dec
adc
or
bound
push
pop
hlt
dec
das
inc
sbb
pushf
flds
dec
fs
into
pop
or
mov
sub
call
ret
jno
out
roll
fadds
mov
addr16
push
loop
addr16
jnp
in
out
pop
inc
sub
iret
test
add
jo
jecxz
dec
fimull
adc
push
cmpl
fcmove
and
mov
lcall
and
and
add
cmp
out
les
dec
jg
stos
add
or
cmp
fidivrs
inc
mov
bnd
mov
andl
sbb
add
aad
out
testb
scas
inc
loope
mov
iret
cs
push
lds
mov
pop
cmp
adc
mov
fisttpll
rcrl
das
pop
mov
cmpsb
add
dec
jg
ret
rorl
je
fs
ficoms
ret
les
jb
xorb
mov
cs
xchg
call
xchg
add
stos
and
jge
sti
xor
push
dec
shl
lods
dec
lret
mov
add
sbb
pushl
mov
jo
imul
jmp
fsubs
push
mov
out
and
iret
add
fwait
pop
test
and
dec
fistl
js
add
je
inc
repnz
out
cli
ljmp
mov
sub
sub
mov
frstor
dec
jo
or
jnp
cmp
lock
lret
cltd
jecxz
push
je
rcll
pop
push
lahf
repnz
fbstp
push
test
mov
dec
push
popf
cmp
xor
in
aaa
dec
pop
test
sub
add
xchg
jg
add
nop
das
je
dec
push
les
mov
add
call
pop
mov
lock
cli
push
aas
push
xchg
aad
adc
and
orl
pop
add
add
push
pop
mov
ja
sti
sbb
inc
mov
fxch
jne
test
cmpsb
xchg
mov
mov
daa
cmp
pop
mov
std
pop
addl
or
fisttps
ficoml
cmc
mov
movsl
out
jg
fdivr
dec
sbb
or
and
mov
rcll
cmp
inc
shlb
pop
jg
jno
test
jg
or
sbb
pop
ss
in
push
std
decl
test
add
inc
inc
ljmp
aas
xchg
mov
jb
and
sub
test
fs
clc
fildll
add
dec
out
leave
popf
inc
clc
lret
add
sbb
sub
adc
or
inc
outsb
aaa
fiaddl
pop
adc
sahf
mov
mov
mov
mov
jb
ror
push
add
insb
in
jbe
enter
push
push
sbb
xchg
popa
adc
sub
imul
rcl
lods
fnstsw
mov
adc
dec
jecxz
jg
jns
dec
mov
push
xchg
xchg
xor
pop
mov
adc
sahf
adc
lock
xor
fsubrs
pop
sub
mov
in
jmp
cli
nop
push
insb
or
pop
cmp
lcall
movsb
mov
dec
sub
or
mov
cmp
test
or
pop
cmc
cmp
push
mov
cli
sbb
mov
xchg
clc
dec
in
js
aam
mov
inc
cmc
sub
imul
int
or
mov
lcall
pusha
ret
fsub
incl
out
and
add
ja
mov
xchg
movsl
aaa
pop
lods
inc
inc
cs
jne
outsl
daa
imul
inc
out
add
out
lods
fildl
add
xor
and
xor
inc
push
cmc
jge
sub
inc
scas
push
xchg
pop
testl
jg
outsl
test
mov
mov
loope
adc
notb
mov
es
stc
mov
insb
outsl
mov
inc
mov
lds
mov
pop
daa
mov
setno
dec
inc
push
and
inc
xchg
ficoml
out
test
push
lods
inc
dec
fs
cmp
lret
cmp
adc
dec
or
insb
aaa
les
mov
inc
xlat
xor
sub
cli
inc
mov
sub
xchg
add
das
stos
roll
les
cmp
nop
mov
cs
pop
jmp
shll
and
jl
cmp
std
mov
es
push
xchg
lock
adc
aaa
xor
mov
enter
aam
dec
push
push
shl
pop
add
add
push
sbb
sbb
fmul
movsl
mov
mov
or
or
xchg
cwtl
dec
je
jp
jbe
inc
xlat
gs
addl
rorl
pop
outsl
fdivr
hlt
int
mov
xor
movsb
ja
jecxz
push
outsl
subl
in
orb
xchg
mov
push
mov
jg
mov
out
pop
hlt
add
fisubrs
jne
mov
fs
mov
lahf
jbe
dec
inc
jecxz
mov
pop
mov
pop
loopne
cld
and
or
xor
cmp
push
imul
jmp
je
push
repz
push
insl
cmp
push
pop
ja
xor
fwait
jb
jg
xchg
pop
push
push
jne
xor
hlt
cmp
ret
push
or
jne
stc
insl
cmc
inc
inc
nop
iret
dec
sub
pop
pop
insb
enter
ljmp
bound
xchg
mov
or
pop
into
popf
out
xor
ljmp
adc
jb
fbstp
xchg
mov
xchg
jle
xchg
jp
dec
mov
adc
xchg
mov
xchg
inc
push
jg
cld
repz
ret
movsl
jle
bound
xchg
sbb
xchg
mov
mov
jno
and
mov
aad
into
inc
scas
fisttpll
sbb
mul
add
sbb
sub
push
dec
rcrl
sbb
inc
xchg
cld
les
mov
stos
inc
xor
aam
decb
lea
mov
xor
xor
add
mov
adc
cmpsl
sub
xlat
mov
pop
jecxz
sub
sbb
clc
mov
and
idiv
in
xor
adc
rol
outsl
and
dec
lds
cltd
out
pop
add
mov
outsb
push
hlt
ljmp
inc
in
fbld
out
or
rcrb
ljmp
sub
lcall
ss
jg
jmp
mov
adc
add
inc
ljmp
les
push
mov
cmpb
sub
aaa
sub
inc
ret
gs
mov
adc
nop
adc
push
xchg
mov
mov
pop
xchg
inc
or
jg
sbb
pushf
push
fwait
pop
sub
xchg
xor
pop
push
dec
ja
rcrl
add
mov
iret
push
jg
add
std
js
inc
movsl
xor
mov
and
leave
adc
push
sbb
orb
clc
ja
mov
mov
nop
into
dec
mov
jne
into
inc
mov
in
xor
xchg
sahf
movsl
jnp
xlat
jo
xor
jne
or
push
js
rol
add
dec
push
sub
pusha
hlt
test
mov
nop
mov
jns
xchg
mov
dec
push
cmp
sub
cmp
push
cmp
and
inc
mov
mov
pop
test
mov
mov
jne
and
in
pop
push
xor
mov
arpl
cld
das
push
xor
xor
mov
clc
fildll
outsl
fmull
sbb
jns
xor
or
sbb
xor
popf
dec
jbe
iret
test
xor
in
cmc
or
leave
les
jge
outsl
pop
xlat
cld
mov
adc
jge
adc
incl
cwtl
inc
sahf
jns
nop
rcr
dec
es
outsb
add
mul
push
fwait
popa
mov
mov
jb
xor
fisubs
sub
call
dec
cmovae
mov
cmp
cs
dec
mov
out
or
dec
push
cmp
ret
push
ret
fisttps
jbe
or
inc
push
push
pop
ficomps
mov
in
in
mov
out
cmpsb
orb
xchg
push
inc
pop
pushf
fdivr
inc
jmp
inc
mov
dec
jbe,pn
test
adc
cmp
fcompl
movl
rol
jae
pop
flds
das
fcoml
push
pop
es
test
sbb
push
clc
jb
or
xchg
push
jle
sbb
pop
stos
decl
test
call
orb
pop
jl
ljmp
inc
sbb
xor
mov
insb
stos
les
xchg
inc
cld
mov
fldl
jnp
sti
gs
sub
jg
cmp
and
div
dec
loope
mov
dec
fiadds
push
loopne
sub
js
push
sbb
jb
mov
push
fcomip
dec
pop
movsl
aas
or
and
sbb
xchg
mov
bound
pushl
jae
mov
adc
push
push
jne
mov
sbb
mov
scas
fiaddl
inc
daa
mov
jg
or
push
ds
push
subb
mov
clc
ret
jp
jo
stos
push
testb
jg
mov
xchg
js
pop
sbb
incb
shrl
ja
ss
lods
ds
inc
adc
mov
pop
mov
lods
int3
cld
xor
clc
ret
add
inc
mov
and
and
jmp
mov
cs
lret
mov
pop
shlb
push
push
idiv
jo
sub
mov
add
sarl
xchg
sbb
icebp
test
sub
imul
xchg
mov
dec
mov
mov
bound
push
mov
push
jecxz
fnstsw
mov
sbb
and
pop
lods
adc
loopne
mov
xchg
js
stos
inc
push
aaa
mov
test
addb
push
jne
dec
sub
or
stos
mov
dec
icebp
pop
cmpsb
mov
lcall
mov
mov
les
xchg
cltd
pop
jmp
arpl
xchg
push
nop
add
das
add
pop
or
push
mov
adc
xchg
adc
pop
mov
decl
mov
mov
dec
lcall
fnstenv
cmpsl
cmp
sbb
adc
sbb
adc
mov
adc
cli
or
outsl
std
lcall
aad
cld
out
jecxz
inc
mov
fstpt
add
lea
sbb
ljmp
jnp
inc
cmc
or
inc
insl
inc
cmp
shll
or
mov
aad
shrb
cmc
test
inc
insb
aad
jnp
es
mov
out
negl
shrb
fcomp
or
outsl
movsb
aaa
pop
andb
mov
dec
loopne
jle
inc
lahf
out
stc
pop
cmp
mov
lods
fstpt
arpl
push
pop
out
inc
add
or
add
jle
rcll
adc
push
mov
loope
add
lcall
xchg
pop
clc
mov
pushf
pop
pusha
enter
lods
mov
add
cmpsb
sbb
and
rclb
jle
out
aad
leave
out
aas
pop
enter
xchg
clc
outsl
insl
repnz
xchg
xor
mov
ljmp
add
scas
les
inc
insb
push
outsl
push
jecxz
movsb
jns
das
dec
jl
mov
lret
fisttpll
sub
pop
lds
or
js
xor
cli
mov
mov
cld
adc
or
cld
mov
xchg
xchg
xor
pop
add
dec
or
inc
out
les
xchg
shl
aaa
test
cmpsl
jae
mov
aaa
bound
jg
push
cmpsl
or
mov
adc
cs
push
insl
leave
std
int3
icebp
adc
adc
orb
add
push
testb
jl
pop
push
mov
cltd
jmp
lods
jns
cmc
mov
test
loope
insb
iret
dec
mov
jge
out
or
fiaddl
jge
ja
mov
insl
adc
fildll
std
or
mov
jle
mov
adc
loopne
push
add
jg
pop
mov
mov
lds
mov
sbb
pop
insb
out
cmp
cs
sub
stos
mov
adc
or
xchg
dec
sub
cwtl
jle
out
push
loop
mov
inc
sub
cwtl
xchg
imul
nop
not
lret
pop
jl
and
push
mov
mov
jbe
movsl
cmp
rclb
cmpsb
ljmp
or
mov
mov
inc
or
call
js
in
mov
xchg
push
add
fiadds
xor
and
or
ret
fbld
pusha
sarb
xor
push
lods
inc
jp
mov
inc
andl
inc
call
sarb
scas
mov
negb
xchg
push
sbb
lock
call
push
mov
out
xchg
jnp
pop
sub
mov
jb
call
xchg
movsb
in
xchg
call
jns
cmp
xor
xchg
arpl
cld
jmp
lahf
push
mov
add
xor
lret
mov
lcall
fstps
sbb
lahf
test
and
and
lods
mov
sbb
in
push
adc
cmp
aas
push
jae
adc
and
mov
pop
adc
hlt
inc
cmpb
ja
sub
mov
push
fwait
mov
int3
std
push
addr16
std
xor
xchg
sbb
push
mov
and
pop
std
jg
fstpl
outsl
jp
mov
adc
out
icebp
pop
mov
jo
fwait
aas
int3
sub
dec
pop
and
lcall
lcall
adc
stc
pop
bound
mov
jns
testl
cmp
xor
clc
scas
rolb
mov
pushl
not
or
push
cmpl
push
mov
sti
insl
movsb
aad
push
addr16
hlt
push
or
xchg
fists
aaa
mov
loope
mov
out
add
pop
subb
shlb
cmpsb
sbb
lods
aaa
mov
and
and
pop
inc
es
inc
add
gs
xchg
stos
mov
sbb
mov
or
cmp
and
popf
lea
add
gs
hlt
push
xor
add
pop
movsb
sub
incl
fldt
test
popf
lahf
mov
cmp
or
aad
mov
mov
rcrl
sbb
in
inc
outsb
inc
and
push
sbb
push
shlb
ret
cmpsl
inc
sbb
cmpsl
sbb
inc
je
dec
not
mov
fdivp
cltd
sub
mov
jns
call
adc
ret
fisubrs
cli
insl
testb
or
mov
andnps
xchg
pop
das
inc
test
subl
and
adc
ja
test
mov
lea
pop
cmp
push
loope
clc
xchg
insb
lds
scas
jb
das
shll
popa
ljmp
movsl
fidivrs
movsl
cmp
jmp
sbb
mov
mov
cmp
mov
cmp
es
aad
repnz
fistpll
push
pop
ret
insl
mov
sahf
xchg
jecxz
cmp
das
icebp
daa
or
cwtl
xchg
jb
mov
xchg
aas
and
xor
adc
pop
fcoml
insl
cmp
ja
add
aas
mov
lahf
fsubs
ret
insb
inc
push
add
or
jle
lea
outsb
jecxz
dec
fdivrl
jae
int3
fdivrs
fildll
rcrb
lea
sbb
repnz
mov
outsl
xor
pop
in
dec
cmp
movl
test
inc
dec
scas
call
or
mov
xchg
shrb
mov
adc
cmp
push
push
sbbb
dec
xlat
jno
insb
and
xor
jnp
push
mov
sbb
dec
jne
mov
mov
outsl
pusha
lods
nop
pop
cld
loope
jns
adc
mov
mov
test
pusha
xchg
pop
push
mov
pop
mov
or
xor
addr16
dec
push
mov
ds
faddp
mov
hlt
adc
ret
dec
gs
cmp
jge
adc
cltd
sub
hlt
aaa
adc
ds
ret
lds
cmc
push
pop
sub
sbb
sub
mov
aas
sub
cs
pop
clc
xchg
lret
sbb
das
out
mov
inc
add
lods
filds
mov
dec
mov
ret
stc
xor
xchg
push
lcall
jno
andl
add
mov
adc
js
jge
jo
cli
push
call
or
xchg
xor
scas
jo
inc
inc
xor
mov
adc
dec
cmp
adc
push
inc
fstp
lret
jecxz
push
pop
cld
ljmp
xchg
mov
sub
mov
imul
nop
cmp
cmp
imul
sub
pop
pop
rcl
lods
rcr
pop
push
mov
xor
xor
stos
add
mov
inc
shl
data16
out
test
outsl
fbstp
sbb
and
mov
fdivrp
in
lods
adc
jno
adcl
es
cld
fstpt
adc
in
add
outsl
jno
lods
pop
add
cli
pusha
iret
push
fs
mov
jnp
adc
push
std
jg
pop
js
lcall
xor
mov
fsub
and
xor
lcall
lcall
or
or
adc
push
xchg
jle
in
test
ljmp
rcrb
cmpsb
add
mov
jmp
pop
adc
ljmp
push
xchg
or
test
fucomp
test
je
ja
jne
subl
sbb
rolb
sbb
clc
popf
dec
scas
cltd
rorb
shrl
ljmp
outsb
outsb
je
les
mov
and
imulb
cmp
or
mov
and
outsl
ja
filds
cwtl
dec
mov
fs
pop
andb
clc
test
mov
xor
insb
add
mov
ljmp
dec
mov
cli
and
ffree
mov
adc
cmp
mov
popf
mov
adc
jbe
pop
mov
incl
jbe
xchg
mov
cmp
pop
cmpb
xlat
fiadds
loope
out
push
pop
fcompl
jo
mov
inc
push
mov
mull
mov
lods
push
neg
inc
add
inc
mov
jne,pn
les
jbe
movsl
movsl
leave
sbb
sbb
jecxz
out
push
push
fdivrl
imul
mov
inc
lahf
fimuls
lea
icebp
pushl
push
shll
inc
fsubrl
push
jbe
ds
push
fs
pushl
imul
add
enter
pushf
inc
add
pop
pop
xor
dec
inc
xor
xchg
cmp
push
dec
xor
leave
pushf
pop
mov
negb
add
add
xchg
clc
lcall
adc
jp
dec
add
pop
mov
add
sahf
fs
push
jecxz
pop
inc
pop
clc
fucom
in
xchg
jp
fwait
and
cli
mov
shl
add
inc
popf
icebp
and
insl
adc
mov
push
aaa
adc
popa
pusha
mov
mov
jle
stos
pop
sbb
cli
dec
xor
popf
clc
pusha
cmp
push
fadds
xchg
add
mov
adc
ret
repz
je
in
fiaddl
es
dec
cld
jg
std
sbb
push
jne
shlb
nop
into
mov
cli
cltd
mov
mov
mov
xchg
sub
push
cmp
cmpsb
aaa
js
fists
cmp
mov
gs
hlt
or
imul
jo
sbb
lret
je
pop
cmp
fwait
in
mov
fcmovnu
pop
adc
mov
or
mov
push
push
mov
and
in
or
jl
inc
adc
insl
test
jl
push
mov
aas
hlt
jae
in
dec
daa
mov
nop
loope
std
push
pushl
or
inc
dec
xchg
pop
movsl
cmp
pop
mov
mov
loop
mov
imul
dec
lods
incl
mov
cli
inc
inc
xor
into
bound
sub
ljmp
push
xchg
jbe
fstpl
aam
int
lea
pop
mov
int
pop
fnsave
inc
fistl
repz
lods
mov
ds
sarl
push
mov
pop
push
mov
loope
arpl
cwtl
mov
sarb
inc
jbe
stos
xchg
imul
decl
cltd
push
push
leave
stos
push
mov
das
outsl
mov
sub
ss
push
inc
sub
sub
lods
scas
sbb
cmp
subl
mov
repnz
je
inc
and
fwait
or
push
into
test
adc
ret
les
std
fstpt
addb
pop
cmp
pop
test
icebp
incl
js
aas
popa
adcl
popa
out
sbb
mov
mov
add
icebp
mov
cmp
fucomip
mov
and
pop
or
xor
inc
cmp
cmc
mov
mov
dec
or
sbb
or
clc
adc
lods
xor
loop
shl
test
mov
adc
das
add
push
sbb
or
sub
cli
icebp
dec
dec
jo
jmp
add
dec
jae
jecxz
pushl
shll
cwtl
sub
loopne
push
psrad
mov
idivb
nop
mov
nopl
cmp
jae
inc
mov
pusha
lods
pop
mov
inc
loope
and
dec
sbb
jg
cmc
lahf
test
pop
scas
pusha
adc
add
outsb
sbb
das
movsb
jno
dec
movsb
inc
pop
stc
cmp
jmp
inc
aad
add
mov
cwtl
push
hlt
pushl
popa
sbb
add
dec
jbe
aas
xor
mov
inc
inc
jno
adc
out
imul
sub
dec
cld
sbb
jne
sti
aam
add
stc
jnp
std
movsb
pop
jg
pop
loop
mov
call
stc
dec
sub
fcompl
outsl
mov
mov
push
je
or
outsb
jl
inc
add
pop
adc
mov
jmp
test
mov
jno
loope
pusha
inc
push
iret
inc
repnz
jp
mov
mov
xor
push
sbb
adc
jle
movsb
sti
pop
push
rcrb
mov
and
push
inc
push
adc
or
ljmp
adc
cmp
pop
in
incb
test
xor
stc
xchg
mov
pop
dec
idivb
pop
mov
repnz
outsb
pushf
imul
ret
insb
mov
ja
pop
push
jp
lahf
pop
add
mov
fnstsw
jnp
cwtl
jb
inc
sub
loope
jle
add
jmp
lea
call
jnp
adc
dec
es
add
movsl
push
cltd
mov
jns
adc
xchg
jg
stos
adc
jns
pop
dec
aas
test
mov
ja
mov
fisttpl
add
push
fnstcw
out
cli
adc
mov
lods
inc
aaa
inc
and
aas
lock
and
xchg
ret
pop
adc
in
in
popa
jb
adc
divb
test
cmp
incl
xchg
rcrb
mov
xor
push
ss
lcall
push
dec
sarb
cltd
and
push
pop
add
stos
popf
pop
scas
and
and
stos
add
lcall
outsb
cld
jp
rcll
add
or
mov
mov
xor
jbe
inc
add
pop
add
loope
add
jmp
stos
sar
lcall
mov
in
or
nop
add
push
mov
or
sub
adc
loopne
inc
std
decl
pop
cmp
enter
out
cmp
sub
addr16
loopne
cmc
xchg
dec
or
rolb
push
outsb
add
insb
flds
dec
lahf
das
cld
pop
in
jg
sbb
xlat
fisubrs
jmp
push
call
sub
ret
push
cmp
cs
outsl
rorl
sahf
lret
bswap
aaa
fwait
cmp
cmpsb
or
lods
addr16
movb
lret
push
aaa
sub
lahf
es
or
sbb
lcall
sub
push
stos
dec
mov
jecxz
jl
pop
clc
mov
lret
inc
iret
xchg
add
decl
xor
les
adc
add
jo,pn
adc
aas
mov
mov
add
js
xchg
popf
mov
xchg
inc
jg,pt
pop
filds
fistpll
and
jbe
icebp
xchg
jns
in
push
leave
cmp
dec
test
pop
icebp
je
pushl
insl
fstl
mov
push
mov
inc
rolb
add
mov
fstps
xor
cmp
in
push
fldt
icebp
cwtl
xchg
lock
inc
movsb
cmp
call
lea
mov
je
inc
ret
push
lea
cld
pop
add
fimull
dec
pop
mov
ljmp
mov
dec
add
jo
ljmp
pop
addr16
mov
and
add
push
jb
pop
hlt
push
mov
push
push
cmp
pop
jl
lods
jg
inc
mov
nop/reserved
aad
out
out
cs
adc
ljmp
cmp
dec
push
insl
mov
jo
jle
fldl
test
mov
std
mov
iret
in
mov
loopne
icebp
gs
stc
and
mov
aaa
outsb
xor
cmp
popa
fisubrs
outsb
mov
xchg
loop
fistpl
out
cmpb
movsb
shlb
rorb
mov
rorl
cmpb
enter
add
insl
jmp
in
xchg
jbe
inc
cld
lods
test
ljmp
jo
pop
out
dec
sbb
pop
lcall
lods
jns,pn
sbb
xchg
out
push
or
loope
pop
loop
cmp
jge
adc
ljmp
mov
lea
dec
nop
adc
sbb
jno
mov
in
es
ljmp
xor
je
std
mov
bound
ret
cld
mov
std
push
mov
jo
jmp
add
in
push
lret
add
push
daa
cltd
sub
jl
ja
out
sub
mov
mov
inc
sbb
lahf
stos
mov
and
fidivs
std
scas
mov
cmp
popf
stc
or
sub
lret
inc
je
and
add
and
and
pop
rcll
stos
rcr
imul
outsl
push
cmp
xchg
cmp
mov
dec
into
and
mov
add
sub
sub
test
das
insb
adc
out
addr16
adc
mov
outsl
hlt
mov
inc
or
arpl
popf
mov
outsb
mov
cld
add
jmp
mov
sbb
sti
mov
nop
test
fsubrp
jg
dec
jb
xchg
adc
lds
xchg
aas
lea
aad
aaa
add
mov
repz
xor
xrelease
inc
scas
movsl
mov
mov
lcall
push
shll
and
cmp
rcll
les
xchg
int3
xor
ja
mov
and
cmp
pop
add
or
mov
mov
or
repnz
add
xor
aad
xchg
jl
xchg
push
cli
pop
jbe
aam
or
or
or
ljmp
int3
loopne
jns
sub
imul
into
mov
aam
cmpsb
jg
push
enter
test
adc
repnz
pop
pusha
xor
push
fldz
adc
jg
adc
fdivs
scas
jae
sub
scas
lock
xor
jge
icebp
mov
dec
jb
mov
mov
stos
mov
orl
sbb
incl
dec
pop
loopne
pushf
jne
ds
xor
add
in
push
mov
data16
mov
mov
outsl
adc
mov
jnp
mov
and
fadds
pop
jo
and
test
les
mov
cmc
stos
loopne
not
or
or
in
pop
or
leave
xchg
stos
xchg
rorb
mov
rcl
addl
inc
pusha
lcall
sbb
xor
sub
dec
or
dec
pop
xchg
clc
lret
rcrl
les
ja
int3
das
inc
stos
sbb
nop
sub
mov
push
aam
jbe
mov
lcall
lods
inc
pop
mov
icebp
sbb
or
test
fstpt
mov
clc
mov
pop
sub
jle
out
ljmp
sbb
insb
inc
pop
out
das
ss
into
pop
sub
mov
and
clc
loope
jl
inc
call
push
faddl
stos
add
jae
mov
into
push
into
int3
mov
jl
push
mov
pop
xchg
add
dec
or
sub
push
xor
jle
push
pushl
push
lods
loopne
hlt
add
sarb
adc
sbb
iret
and
shlb
jns
add
xchg
test
outsl
jmp
icebp
xor
pop
mov
push
icebp
fiaddl
jecxz
pop
scas
divb
sbb
pop
sub
lods
jmp
add
jecxz
mov
inc
pop
fimull
mov
mov
dec
xor
mov
mov
inc
pop
cli
pop
inc
scas
inc
sbb
idivl
xorb
push
aas
adc
cmp
mov
enter
add
jnp
sbb
jno
ljmp
sub
push
lahf
push
int
mov
push
testl
ss
pushf
je
inc
add
nop
fdecstp
out
xchg
aam
aas
pusha
andl
pop
pushf
jmp
push
pop
setae
adc
hlt
add
or
bnd
mov
fadds
gs
mov
sub
dec
adcl
mov
nop
mov
out
sub
mov
sbb
mov
fcmovnb
mov
jmp
enter
arpl
and
out
mov
lods
test
adc
sti
movsb
push
add
pop
mov
fwait
gs
sub
fcompl
popf
cmp
call
pop
dec
push
mov
push
enter
mov
sub
pop
daa
aaa
add
daa
or
fabs
aad
sbb
dec
add
sbb
xchg
lret
stc
push
push
mov
clc
and
xor
and
mov
and
mov
sub
stos
shll
sbb
xor
cmc
pop
mov
mov
in
rcll
pop
call
inc
jnp
ret
in
mov
mull
shrb
imul
in
clc
push
shll
cmp
hlt
mov
sbb
and
cmp
mov
or
add
clc
pop
loopne
lret
lahf
mov
jbe
outsl
js
ror
adc
jl
jge
cltd
hlt
decl
mov
xchg
inc
pop
in
je
adc
movsb
test
arpl
std
into
mov
cs
add
clc
outsl
jno
int3
xchg
push
adc
push
inc
lods
and
out
lds
je
add
outsl
sbb
push
add
push
jecxz
repz
in
cmp
sub
out
popf
loop
sti
cmp
or
lea
test
dec
jbe
sbb
outsl
add
mov
pop
xchg
cmpb
xor
inc
mov
dec
shrl
loop
lods
mov
xor
mov
lods
push
mov
pusha
out
adc
pop
sub
sub
mov
mov
inc
dec
add
adc
adc
or
push
decl
outsl
push
pop
idivl
andl
jge
stos
arpl
rcll
inc
jbe
fisubrs
je
dec
mov
mov
and
pop
cmc
mov
fs
mov
jge
dec
pop
xor
movsb
aad
push
push
ds
mov
cwtl
je
mov
mov
ljmp
sbb
mov
rcll
xor
in
lcall
pop
call
bound
or
lcall
mov
aam
imul
fistl
mov
out
mov
jns
aam
mov
push
cld
decl
pop
xorb
mov
int3
mov
sub
fcompl
or
or
movl
jo
and
aaa
jl
imul
sub
shrl
sbb
push
mov
out
call
arpl
inc
insb
or
adc
aas
jo
or
adc
mov
pop
mov
movsl
jae
and
movsb
or
xchg
mov
xchg
jo
insb
test
rcrl
lea
mov
stos
jae
popf
ficompl
mov
jmp
sahf
aas
xchg
sahf
bound
mov
adc
shrl
cld
sub
lods
lods
and
mov
std
loopne
jne
and
loop
xchg
push
call
in
and
pop
addr16
aas
pop
push
movsb
pop
out
imul
xor
jecxz
dec
cmp
shrl
mov
sarb
ljmp
shll
or
inc
jno
nop
push
xor
mov
loope
pusha
inc
pop
mov
out
sub
and
or
frstor
pop
adc
lds
mov
cmp
jg
aad
xorl
nop
push
loopne
fs
push
push
mov
stos
jle
pusha
mov
test
jno
cs
aaa
pusha
xor
pop
aas
js
call
test
fs
out
xchg
ljmp
int
fcomps
enter
jno
mov
das
cld
dec
xchg
gs
mov
mov
out
mov
add
jo
stos
inc
cwtl
rorl
orps
push
cli
pop
cmp
jle
pushf
pushf
stos
pushf
push
jb
filds
cmpb
shl
jmp
pop
stos
mov
mov
mov
stc
cs
jmp
imul
jecxz
lods
pop
shlb
and
mov
orl
jl
nop
test
pop
pop
mov
xchg
jmp
ret
push
add
stc
sbb
or
lret
sbb
addr16
push
jg
insb
jecxz
loopne
fcmovne
adc
int3
pushf
je
cmp
std
sbb
mov
mov
jmp
fwait
je
xorb
sub
in
sub
sbb
mov
jnp
inc
fisttpl
inc
add
jmp
and
daa
cmp
add
rcll
and
out
ss
adc
mov
xor
movb
sbb
jmp
negb
cwtl
insl
inc
test
test
push
jns
in
clc
mov
push
sub
nop
cli
iret
insl
mov
sbb
jne
and
push
and
js
jg
enter
jmp
icebp
nop
mov
lock
sbb
fisubrl
pop
xor
adc
out
shlb
subb
sbb
mov
fildll
cmp
sbb
stos
jns
pusha
icebp
sbb
and
sub
cld
dec
dec
lds
inc
das
repz
movsb
xlat
push
push
rcr
aas
push
push
fistpll
sbb
mov
int3
mov
in
fistps
jae
dec
movsb
push
ljmp
add
sbb
add
inc
push
mov
push
jmp
lret
in
pusha
test
test
mov
jbe
incl
mov
push
cli
mov
push
dec
enter
je
jle
jo
xor
or
inc
mov
mov
pop
pop
or
cli
dec
mov
add
push
jno
xor
pop
cmp
cs
fistpl
das
nop
mov
inc
xor
adc
mov
out
dec
mov
jno
dec
mov
mov
sub
adc
js
sti
inc
cmp
or
push
popa
fildl
sub
pop
mov
fistps
jne
fcoms
mov
and
cmpsb
mov
bound
subb
and
stos
and
mov
xor
mov
loopne
or
fists
and
push
dec
int3
clc
lods
add
inc
cld
cld
xchg
and
sbb
sub
pop
add
and
cmp
push
out
jle
or
cmpl
test
out
out
xchg
push
xor
push
aaa
mov
outsb
dec
adc
dec
cmp
push
jo
data16
loopne
fucomip
je
push
jmp
sub
jmp
out
add
shlb
decl
sbb
mov
push
mov
pop
call
mov
pop
push
stos
loopne
in
mov
add
mov
out
imul
aaa
xor
decl
cmp
add
mov
cld
or
mov
repnz
imul
pop
cli
mov
pop
fistpll
push
add
push
pop
push
mov
adc
shll
pop
mov
jge
test
sbb
add
mov
dec
mov
aaa
test
dec
out
loope
sub
into
mov
lods
xlat
xor
dec
cmpsb
mov
add
pop
lret
mov
mov
xorb
push
mov
fwait
imul
mov
mov
popa
movsb
push
ret
push
jbe
sbb
jle
inc
push
inc
dec
stc
inc
mov
pop
or
outsb
inc
pushf
or
pop
mov
mov
and
jp
sub
mov
orl
push
sub
sarb
fs
adc
sbb
clc
xchg
cmp
icebp
adc
or
decl
mov
aas
mov
enter
jno
fstpt
jo
daa
jge
fisubrs
sbb
jecxz,pt
mov
push
loopne
fbld
mov
and
hlt
fadd
mov
aaa
jl
cmp
xlat
push
loopne
push
subl
jle
adc
inc
call
mov
fwait
add
mov
pushf
test
sbb
adc
add
xchg
test
fistpl
mov
mov
jbe
stc
cmp
jae
aad
pop
cs
dec
dec
pop
ficoml
cld
scas
dec
pushl
jbe
push
imul
jge
andl
and
je
xchg
scas
scas
adc
jecxz
loop
lods
rcl
pop
or
xor
pop
in
pop
clc
das
and
cmp
out
les
dec
out
adc
push
jo
fcmovnb
inc
sbb
mov
mov
fcoml
sub
inc
dec
push
sbb
sub
dec
mov
jg
sbb
daa
pop
add
pushf
pop
mov
lea
iret
sbbb
add
mov
sbb
fwait
enter
inc
lcall
pop
adc
sbb
dec
sbb
pop
push
sti
in
and
dec
xchg
and
aas
xchg
lods
nop
popf
call
cmp
mov
dec
movsb
adc
cmpsb
ljmp
stc
sbbb
inc
cltd
popa
adc
add
in
mov
add
sub
push
xchg
orl
lea
jnp
lahf
mov
dec
cmp
dec
lcall
and
xchg
cli
in
test
pop
and
rcl
cmp
cmp
rol
push
cmc
int
aas
inc
add
das
cld
incl
or
jbe
pushf
ljmp
outsb
jmp
jmp
in
mov
test
xchg
adc
ljmp
fistpl
xchg
xchg
sbb
fisttps
and
or
inc
hlt
push
push
test
and
mov
inc
notb
adc
cmp
aad
test
mov
outsl
or
je
mov
push
gs
jle
pop
out
xor
arpl
push
enter
shl
test
rol
cmp
aam
lds
pop
jge
lea
sahf
gs
xchg
xchg
mov
push
add
rorb
jbe
roll
sahf
cld
xor
pushf
pop
loop
sub
jb
mov
mov
movsb
gs
inc
and
sub
sbb
xor
push
nop
jns
or
ret
icebp
dec
dec
add
popa
cmp
and
jg
ret
repz
fcmovnu
adcb
add
adc
lret
xchg
sbb
mov
xlat
inc
mov
lds
loope
cmpsl
ficoms
push
rorl
pop
dec
inc
adc
mov
fsubl
clc
pop
adc
add
cmpsb
lret
add
repz
pavgb
imul
shll
jne
mov
xchg
stc
or
push
clts
std
call
mov
lea
pop
icebp
test
push
cld
rorl
decl
sbb
jp
clc
fidivs
shlb
dec
data16
sar
sbb
stc
bound
rclb
ds
addr16
mov
repnz
faddl
inc
dec
mov
jp
mov
pushl
sub
mov
ret
fs
das
push
jmp
sti
mov
push
xchg
ret
cltd
loope
and
and
fstl
mov
or
ret
cmp
xchg
lcall
hlt
andb
fwait
xchg
out
xor
incl
fimull
arpl
test
roll
dec
mov
clc
mov
test
lds
out
xchg
rcll
pop
jle
aaa
clc
lcall
push
lahf
stos
and
jae
mov
cmp
popa
fwait
cli
adc
mov
cwtl
lods
repnz
sarl
cmpsb
lcall
outsl
mov
dec
lret
shlb
jno
mov
pop
jge
sbb
outsl
mov
xor
aad
sub
xchg
xor
add
push
aam
roll
add
jl
jle
inc
inc
xor
cld
rorb
pusha
cwtl
js
xchg
ljmp
test
cld
inc
dec
ja
aas
std
das
mov
loope
push
ret
incl
cmp
icebp
fstpt
lods
dec
mov
je,pt
jge
jbe
js
mov
or
out
insl
lret
pushl
adc
mov
mov
sbbb
jmp
nop
sbb
xor
xor
lcall
sbb
inc
out
fwait
dec
andl
cmp
or
mov
cmp
ljmp
xor
scas
call
outsl
adc
jp
ljmp
sub
sbb
scas
adc
mov
push
enter
add
aaa
and
dec
fisubs
ffree
cs
push
add
dec
call
lret
mov
add
add
mov
or
add
aaa
repz
scas
xor
mov
add
mov
andb
mov
mov
mulb
sbb
pop
fistl
or
push
dec
loop
mov
test
addb
fstpl
push
inc
add
pop
movsb
jecxz
aam
movsl
add
or
xor
sbb
pop
jmp
pusha
cmc
and
xor
in
rcll
cmc
or
rol
loope
addr16
decl
aaa
jne
mov
dec
pushl
and
jne
jge
es
cli
xchg
add
insl
push
jp
or
jg
stos
decl
lcall
push
js
jno
es
sbbl
sub
mov
add
ret
xor
push
xchg
adc
add
cli
xchg
push
je
cmpsb
or
imul
insb
rclb
push
scas
fldenv
mov
jne
lods
mov
ror
jp
insl
fmuls
das
std
push
mov
cli
outsl
lea
and
sub
dec
outsb
lret
shrl
ret
es
scas
sbb
jmp
push
popf
outsb
jmp
dec
int3
scas
incl
inc
lds
xor
cld
pop
dec
icebp
je
insb
fidivl
fstps
adc
mov
std
or
add
stos
fs
ljmp
shl
and
cmp
jae
out
ljmp
filds
pusha
jg
mov
lock
lock
sub
popl
roll
mov
daa
pop
test
orl
daa
add
adc
push
lcall
and
or
adc
jbe
rorb
aam
mov
fisttps
stc
fldt
inc
lods
ja
xchg
mov
aaa
dec
sub
nop
jnp
jp
gs
jmp
xchg
add
xor
lods
xchg
outsl
jo
xchg
cltd
cmpsb
jbe
xchg
xor
decl
add
gs
js
nop
subb
pusha
sbb
pop
roll
pop
fistl
adcb
pop
mov
or
das
or
movsl
adc
pop
inc
rcll
pop
movsl
decl
cmp
ljmp
lods
xorl
in
shlb
mov
adc
lods
movsb
ss
mov
xor
sarb
int3
push
ret
dec
inc
add
mov
mov
lret
and
aaa
cli
mov
add
xor
icebp
ret
sarl
outsb
or
decl
loopne
fisttpll
ret
inc
xchg
pop
jl
jb
push
insl
jecxz
pop
or
add
add
dec
imul
pop
jecxz
icebp
outsl
cld
pop
pushf
mov
lcall
sub
and
push
pop
pop
jle
dec
cmpl
dec
inc
test
aas
je
int3
mov
push
mov
adc
or
jnp
mov
dec
mov
ljmp
mov
adc
add
ficomps
xchg
movsl
mov
jge
add
push
jge
sbb
sbbl
shl
insl
fadds
fldt
push
sub
mov
cwtl
and
xchg
jecxz
push
andb
inc
mov
pop
pop
in
fcoms
pop
add
jo
clc
add
hlt
in
dec
gs
jle
insb
dec
cmp
jbe
push
or
lcall
xchg
insl
pop
loop
jo,pt
push
inc
dec
dec
mov
je
das
xchg
ljmp
jp
xorl
xor
xor
adc
cld
jmp
pop
add
fsubrp
push
loope
sti
adc
fiaddl
jbe
xor
adc
mov
cld
movsl
mov
mov
shll
aam
filds
jl
pop
daa
mov
mov
test
add
insl
cmc
cs
je
loope
xor
lock
mov
repz
sbb
test
add
hlt
mov
fisubs
dec
cmpsb
pop
xchg
add
cwtl
mov
mov
or
xchg
lcall
pop
imul
fwait
sub
rcr
sub
clc
ret
lds
ret
inc
add
pop
loopne
js
xchg
test
mov
add
pop
mov
jg
mov
cmp
iret
scas
and
ja
out
les
cmp
push
or
mov
insl
and
inc
outsl
xor
stc
sub
inc
in
pop
insl
test
icebp
push
mov
lret
push
jmp
into
push
mov
inc
jo
ljmp
lock
fstpt
cmp
pop
push
pushl
or
push
and
cmpsb
cmovne
inc
pop
mov
cmp
mov
and
stos
adc
std
adc
lcall
sub
or
cs
popf
dec
jg
add
leave
mov
xor
call
data16
je
xchg
mov
in
scas
daa
loop
shlb
cli
inc
sub
xor
mov
and
xchg
aad
pushf
vshufps
xchg
or
push
repz
pusha
add
add
or
adc
call
sub
bnd
and
mov
loopne
movsl
push
sub
sub
inc
lret
jge
stos
cmp
sub
inc
jne
mov
lods
push
mov
cmp
adc
mov
test
inc
mov
les
jo
ficoms
jmp
dec
push
aas
jg
imul
or
fchs
scas
aad
ret
sbb
jmp
sub
dec
popf
add
jmp
mov
lcall
dec
sbb
dec
es
sub
add
stos
mov
bswap
xchg
ret
in
inc
popf
dec
prefetcht0
les
fwait
aaa
cld
adc
xchg
add
push
jp
push
fcom
das
bnd
or
je
xor
fwait
mov
cmpsb
cmp
stos
inc
add
lods
test
inc
jo
test
fdiv
hlt
nop
xchg
ficoml
insb
test
test
pop
aam
clc
push
nop
jno
mov
loopne
pop
clc
shlb
add
push
sbbb
sbb
cmp
pop
sar
lods
jg
xchg
push
icebp
lds
push
and
and
mov
jge
movsl
sbb
mov
imul
mov
push
pop
add
out
pop
jno
cwtl
fnsave
mov
jmp
adc
adc
cmp
xor
adc
xchg
inc
test
sbb
test
loopne
adc
inc
aad
nop
leave
xchg
jg
mov
dec
popf
insl
cmp
fbstp
xor
mov
mov
fmuls
incl
push
in
pusha
or
pusha
sub
enter
inc
sbb
mov
nop
leave
rorb
cmp
test
out
xor
inc
pop
mov
jg
ljmp
cmc
dec
and
add
movlps
pop
adc
pop
adc
test
add
jbe
clc
push
icebp
popf
fimuls
xor
xchg
cmp
mov
adc
sub
inc
rorl
mov
sbb
jo
push
pop
mov
lds
decl
sub
fisttpll
mov
mov
push
iret
inc
push
cmc
stos
mul
dec
out
pop
xchg
pop
mov
pop
das
adc
jecxz
out
test
pop
xor
jg
jmp
adc
push
sbb
dec
adc
mov
mov
xor
pop
add
insb
cwtl
xchg
out
loopne
xchg
xor
xchg
pop
lcall
rcrl
mov
inc
mov
mov
inc
inc
loope
loope
dec
cld
shrl
scas
jmp
jno
and
xchg
out
or
loop
mov
jg
movsb
faddp
add
movsl
push
inc
inc
or
imul
xor
jge
daa
dec
xor
iret
and
cld
das
adc
dec
inc
mov
clc
rorl
decl
cs
ss
stos
pop
test
outsl
and
fstps
loope
sbb
call
adc
clc
scas
dec
mov
mov
add
push
mov
jg
loopne
pop
add
ljmp
cmp
pushl
add
in
sub
jmp
clc
sarb
lea
pop
mov
jle
inc
shrl
pop
sbb
add
scas
loopne
or
add
test
cli
movsl
stos
jnp
jns
inc
popa
add
das
push
mov
jo
jb
push
mull
pusha
icebp
test
jle
push
xchg
fs
cmp
imul
mov
cmc
pop
jns
adc
mov
jnp
mov
jmp
pop
xchg
js
ds
in
jno
cmp
scas
inc
test
out
adc
xor
xor
pop
das
rol
jno
inc
jns
or
push
inc
and
cli
cmovs
enter
push
lea
fs
adc
inc
lea
repz
pop
or
fcmovu
mov
xchg
mov
fisttpll
imul
movsb
xor
ss
mov
mov
xor
adc
loop
mov
imul
mov
mov
mov
and
ret
test
adc
daa
stos
inc
fldt
jmp
ss
psubsb
jg
cmpsl
outsb
xor
lret
lahf
pop
xor
cmpsl
es
addb
add
lret
add
sbb
push
out
push
jne
ljmp
push
add
add
push
adc
test
add
push
or
fs
adc
loopne
clc
incl
adc
lret
pop
sub
test
xor
lds
bound
push
sti
lret
add
gs
cld
pushl
and
jl
add
add
cmp
mov
mov
repz
xor
sub
iret
push
ficompl
fcomps
jge
cmpsb
fadds
jg
out
lock
nop
fldcw
mov
mov
push
icebp
js
xor
inc
mov
leave
sub
loopne
mov
fs
nop
xchg
das
in
or
push
pop
adc
sub
mov
fistpll
popf
cmp
mov
out
sbb
pop
xorb
or
pop
shrl
jmp
insl
or
lea
jnp
rclb
mov
sub
enter
dec
bound
pushl
stos
dec
stc
push
push
cmp
adc
push
cmpsb
cmp
adc
clc
addb
lea
push
pop
lahf
mov
mov
add
or
ficoms
push
adc
fs
mov
cld
xchg
mov
mov
je
sub
ljmp
push
dec
aad
sahf
push
sbb
pop
lcall
mov
ja
subb
sar
push
add
cmp
lret
add
sub
aas
cwtl
add
jo
push
mov
out
pushl
lret
jae
add
adc
jno
cmp
xchg
test
push
xchg
mov
dec
insb
mov
push
cmp
mov
lcall
shlb
adc
insb
fcoms
rol
adc
mov
jmp
aas
insl
aam
and
fistpll
mov
sub
arpl
push
lds
scas
in
or
enter
clc
lods
cli
push
pop
testb
pop
push
mov
outsl
pop
sub
xor
andl
shr
outsb
das
mov
jmp
lea
inc
mov
or
mov
mov
sbb
jg
sbb
sbb
push
lds
cmc
das
jno
or
insb
cmp
inc
loope
dec
cmp
bound
dec
les
sub
sbbb
out
inc
incl
sarb
xchg
stos
loope
pushw
sub
lock
ljmp
jne
mov
sahf
mov
and
xor
je
sbb
mov
push
lock
add
lock
loopne
pushf
push
jmp
sbb
cmp
nop
adc
add
mov
pop
fwait
and
aaa
test
rorb
and
fistpll
push
cmp
sbb
lea
ret
lock
pusha
test
call
mov
jno
lret
or
fcomps
pusha
imul
clc
xorl
mov
shrl
imul
sbb
outsb
push
mov
icebp
or
or
ja
test
loope
cmp
mov
cld
or
shr
pop
or
mov
mov
jns
sub
lea
pop
mov
mov
cmpsl
fs
incb
pop
clc
push
cmpsl
sbb
dec
dec
cli
jg
lods
dec
test
sarl
cmp
push
stc
dec
icebp
or
pop
xchg
jmp
pop
cld
pop
mov
or
push
inc
adc
pop
loope
sbb
sbb
pop
push
rorl
leave
repz
loopne
andb
movsl
lret
push
cld
pop
xchg
or
push
push
in
mov
movsl
decl
call
sbb
mov
cld
push
popa
sti
ljmp
cs
test
aas
jge
push
les
push
outsb
push
cmpl
jecxz
adc
cmpsb
cs
mov
hlt
ret
lcall
stos
outsl
adc
push
shrb
adc
loope
push
dec
jno
adc
inc
inc
dec
cmp
cld
sarb
int3
mov
dec
lods
cmp
push
fists
mov
sub
data16
sub
mov
sti
and
push
dec
ret
pushl
push
jp
aas
mov
pop
std
mov
repnz
xchg
cmp
jg
je
jmp
ljmp
fiaddl
in
or
xchg
std
imul
ret
sarl
sbb
aam
push
lret
jmp
es
ljmp
div
xchg
daa
or
push
mov
test
mov
lcall
ss
lcall
xorl
icebp
xor
decl
mov
push
mov
outsb
and
popl
ret
push
pop
out
sub
sbb
dec
test
jecxz
addb
pop
loope
lea
dec
pop
bound
dec
clc
jg
lds
mov
push
loope
mov
out
ljmp
cmc
pushf
mov
inc
out
and
mov
jne
push
pop
ss
push
ljmp
stos
jmp
lock
mov
inc
cs
adc
or
jo
inc
cli
test
xor
dec
insb
sub
or
movsb
dec
sub
mov
in
jno
enter
dec
sub
cmp
ds
mov
cs
sbb
das
popf
push
fwait
push
jp
inc
loope
icebp
and
cld
jmp
or
rclb
clc
pop
jle
loopne
repnz
sub
xchg
inc
aaa
pop
cli
decl
ret
fistpl
aad
jmp
scas
mov
ret
idivb
jecxz
pushf
mov
dec
and
clc
pop
clc
cmpsl
inc
repz
xchg
rcrl
popf
or
ret
lret
sbb
dec
roll
xchg
repnz
filds
add
push
sbb
fwait
dec
mov
inc
aam
or
adc
and
add
lods
into
scas
cmc
loop
cmc
or
aad
orl
push
adc
outsl
das
lds
push
jecxz
dec
push
ss
xor
filds
jle
es
dec
fcoms
mov
cmpb
adc
pushf
push
jmp
cmp
pop
jno
pop
push
outsb
subb
lret
jb
cld
idiv
in
fs
call
sub
inc
and
unpckhps
out
shrb
mov
jnp
pop
test
jnp
sti
push
pop
push
orb
push
test
das
push
int3
pop
js
push
sub
sbb
incl
clc
xchg
mov
sub
sbbl
dec
lds
cmc
idiv
xchg
and
push
mov
in
fldl
mov
sub
mov
add
fcomi
jg
xor
dec
les
mov
loope
cs
or
adcb
les
ljmp
mov
popa
xchg
xlat
repnz
enter
addl
and
insl
cld
mov
aad
adc
inc
mov
andl
ljmp
cs
mov
xchg
dec
out
push
add
xchg
rcl
mov
xchg
adc
sub
out
push
xchg
lcall
xchg
push
iret
pushf
pop
popa
in
orl
nop
adc
adcb
aaa
mov
sarl
rcl
mul
xor
test
filds
adc
popa
insl
jecxz
mov
pushl
xchg
aas
mov
jno
cmp
hlt
or
and
lahf
cmc
jle
add
leave
mov
xor
cmp
lar
clc
sti
mov
jns
or
pop
dec
ljmp
xchg
cmp
push
push
pop
stos
roll
jle
imul
adc
in
divl
decb
xchg
fistl
aas
dec
mov
loop
pusha
xlat
xchg
jge
clc
pop
sbb
pop
ljmp
jns
pop
mov
adc
mov
idiv
mov
imul
repz
into
leave
push
or
int
cli
mov
or
fdivs
stos
sub
cld
fdivrl
cs
dec
mov
psubq
fimuls
aaa
lahf
sbb
mov
ljmp
jno
and
icebp
add
inc
roll
loopne
sbb
dec
push
xor
jp
orl
mov
mov
cli
decl
jmp
fwait
mov
popa
faddl
cmp
jb
mov
inc
dec
test
mov
test
mov
mov
add
mov
sti
pop
ljmp
push
inc
xchg
push
add
cld
sub
push
add
lret
or
int
pop
fiadds
add
testl
cmc
lea
jl
addl
xor
pcmpeqw
scas
mov
xor
jl
loop
push
imul
fwait
loopne
sub
daa
mov
push
lahf
call
sbb
ret
icebp
ffreep
push
pop
lods
stos
arpl
test
xor
cltd
lea
mov
stos
cli
push
insl
in
rcr
faddl
jno
pushf
add
sub
push
jg
xor
sub
daa
out
pop
xchg
out
test
pop
cmp
sub
orl
divl
lahf
int
sub
je
ret
add
xor
leave
sbb
mov
mov
xor
jecxz
mov
pop
and
xor
rcr
movsl
cwtl
add
mov
jmp
decl
inc
pushf
movsb
stc
lods
push
into
xchg
fidivs
adc
or
ds
in
std
jno
ret
push
test
ret
xchg
call
test
int
xchg
mov
add
lds
jmp
xor
push
mov
push
addb
push
jmp
test
adc
mov
pop
addr16
sti
fildll
add
sbb
adc
icebp
je
add
mov
insl
jmp
stos
sbb
jae
push
pop
mov
xchg
mov
xorb
add
adcl
mov
es
xchg
das
test
loope
cmp
cmp
cli
xchg
xchg
jbe
cmp
or
into
mov
sahf
and
insl
jnp
ljmp
mov
cmp
push
decl
std
dec
xchg
adc
inc
sahf
mov
icebp
xchg
clc
testb
popa
push
or
sub
incl
xchg
test
mov
hlt
jge
rol
or
das
adc
or
repz
sub
lock
cmpsb
and
pusha
cwtl
sbb
adc
daa
cmpsb
and
inc
stos
ljmp
mov
shll
dec
mov
sti
inc
stos
adcb
push
addr16
sbb
ret
inc
inc
sub
lods
sbb
fisubs
pop
popf
adc
pop
vpslld
sbbb
ljmp
mov
shll
sbb
dec
inc
xchg
add
inc
push
adc
push
mov
and
jle
cmp
and
call
popa
je
pop
icebp
add
cltd
stos
sbb
pop
aad
clc
or
inc
or
rolb
sbb
in
sbb
pusha
push
adc
fiadds
jg
repz
xchg
int
mov
push
enter
iret
cwtl
and
mov
xor
bound
push
sub
jl
out
in
add
or
push
icebp
aaa
and
movsb
add
dec
fs
movsl
jg
sbb
call
imul
mov
shrl
dec
sbb
or
push
fistpll
jle
and
fdiv
orb
jne
hlt
call
call
push
or
rorb
repz
lock
in
dec
lahf
call
js
sbb
fdivl
out
xchg
or
popf
xchg
loop
jmp
pop
mov
adc
inc
icebp
inc
mov
mov
sub
nop
lds
sub
mov
imul
mov
push
inc
mov
scas
dec
clc
ret
in
ret
jmp
xor
xchg
shlb
add
aaa
cmpl
jecxz
sub
je
xchg
inc
lcall
push
sti
cmp
cltd
test
mov
mov
xor
and
filds
jns
sbb
adc
xchg
xlat
bound
adc
test
lret
inc
jp
jle
push
fildll
fiadds
and
lds
cmc
inc
insb
push
pop
ret
or
loopne
jg
pop
inc
xchg
flds
cmp
and
cltd
adc
xor
outsb
aam
ss
jnp
repz
cs
push
mov
sar
sarb
inc
or
xchg
sbb
out
lahf
push
mov
decl
hlt
aas
in
popa
ss
in
arpl
xor
ja
nop
hlt
out
int
jb
nop
adc
out
xchg
mov
xlat
xchg
test
scas
push
jl
push
lock
or
mov
or
inc
jnp
jp
cmp
lahf
subl
stos
xor
inc
mov
inc
stc
adc
add
inc
adc
ja
adc
jo
fwait
mov
cmp
jg
jae
lods
cltd
sbb
xchg
adc
adc
ljmp
add
outsl
sbb
rolb
pop
ljmp
mov
into
popa
fildl
int3
xchg
aaa
pop
clc
or
pop
mov
call
clc
sbb
jg
cmp
xor
cld
mov
cli
adc
cmpsl
jge
mov
sub
inc
fstpl
mov
add
push
fs
pushl
fcomp
nop/reserved
push
or
les
add
adc
push
in
push
inc
sbb
xchg
filds
mov
fldl
xchg
in
insb
jecxz
adc
jg
leave
cmp
adc
push
mov
daa
mov
mov
mov
sbb
mov
xchg
addr16
mov
lock
mov
inc
and
sar
aam
pusha
popf
sbb
lret
xchg
dec
dec
fmul
lock
or
xchg
inc
dec
cmp
mov
ret
aam
aam
adc
adc
rolb
in
push
inc
jmp
push
pop
pop
inc
fsubl
arpl
or
imul
or
cli
jo
subb
xchg
xor
pop
push
xorl
xchg
jnp
dec
xchg
test
xchg
sub
mov
sub
mov
scas
pop
lcall
jmp
std
jg
lock
add
mov
sub
jecxz
arpl
mov
jecxz
movsl
orb
xor
fistpll
inc
and
scas
adc
sub
pop
xor
or
add
jne
push
test
dec
iret
mov
in
movsl
incb
xor
scas
add
or
cmp
mov
inc
popa
mov
mov
dec
push
xchg
repz
add
sbb
mov
stos
scas
dec
add
xchg
clc
test
sti
cmp
lcall
add
adcb
arpl
pushf
ret
cmp
xchg
pop
mov
ret
sbb
dec
stc
mov
movsb
jg
popa
lods
fcmovu
inc
inc
pop
mov
pop
jo
add
lods
dec
popf
fbstp
add
insb
or
push
rolb
les
mov
stc
add
xchg
test
insl
and
test
rclb
arpl
mov
out
lret
aas
xchg
add
imul
mov
add
insl
fnstcw
push
pusha
cmp
adc
addr16
sbb
scas
test
jno
decl
jg
cmpsl
dec
dec
and
cwtl
popa
or
or
jne
jmp
jg
or
cmp
addr16
xchg
inc
push
les
sub
mov
ficoms
adc
setno
shll
pop
ljmp
aam
cli
mov
nop
or
xor
inc
or
icebp
inc
or
sbb
or
add
sti
push
mov
scas
mov
fs
mov
jg
rolb
pop
xor
packssdw
cli
test
lret
lea
add
mov
std
insb
lcall
jle
js
scas
cwtl
pop
lock
decb
fwait
sbb
ror
xchg
sub
jno
call
jecxz
cmpb
jmp
add
cmp
pop
loop
pushf
mov
testb
and
in
or
mov
and
fdivrp
jg
and
imul
mov
arpl
or
pop
das
les
xor
insb
lods
mov
mov
mov
movsl
test
lods
push
sbb
ja
imul
lods
sub
sbb
fbld
bound
call
popa
outsb
adc
or
xchg
lock
lret
sub
aad
lods
imul
pusha
add
jg
fwait
or
and
push
lahf
sbb
or
aam
mov
cmp
nop
inc
xchg
addb
outsb
loopne
cld
fiaddl
enter
mov
adc
addr16
in
jle
xor
push
loopne
test
add
es
lret
jge
cld
shrb
mov
pop
adc
adc
test
inc
mov
sbb
ss
ret
pop
xor
or
or
push
add
dec
divb
loopne
or
inc
lock
push
dec
aaa
sub
popa
insb
jno
dec
adc
pop
add
leave
shr
test
sbb
jo
cmp
sub
negb
mov
xchg
or
lcall
mov
dec
lret
jg
fbld
je
jo
mov
mov
dec
fistl
xor
xchg
aas
cmp
ret
stos
icebp
pop
pop
cli
dec
push
hlt
nop
sahf
xor
xchg
adc
out
dec
adc
std
fwait
lret
pop
cmp
push
jne
xor
cmc
jl
ljmp
cmp
loope
mov
mov
pop
cmpsl
jle
ret
ret
dec
dec
in
ljmp
mov
pop
clc
pop
sub
pop
cld
push
pop
cs
in
mov
js
sbb
jo
cmovg
sub
add
mov
mov
pop
or
aaa
imul
xor
shrb
xchg
incl
mov
jb
fs
out
enter
js
add
and
sbb
and
mov
enter
mov
pusha
imul
call
cld
pop
mov
flds
sbb
mov
ret
push
inc
inc
test
xor
add
subb
mov
pop
adc
roll
rcll
lret
mov
inc
frstor
out
cld
add
xchg
ret
call
insb
cmc
std
jne
shrb
pop
inc
add
and
pushf
xchg
aas
dec
mov
jmp
movsb
stos
mov
jmp
mov
adc
nop
mov
mov
movb
push
sbb
jg
mull
cmpsl
inc
push
push
popa
dec
sti
fcmovu
adc
inc
cli
stos
call
in
loopne
push
sbb
mov
in
cltd
sub
sub
push
sar
in
out
xchg
inc
js
movsl
or
outsb
inc
gs
lods
inc
jecxz
movsl
pop
clc
lret
out
pop
and
xor
sub
lcall
cli
inc
push
mov
sbb
pushf
adcb
xchg
push
dec
pop
push
imul
outsl
ja
push
fimuls
xor
out
pop
xchg
xor
dec
int
add
pop
sbb
mov
adc
add
jg
stos
sub
popa
sbb
sahf
push
into
aam
outsl
call
clc
mov
outsl
cld
call
insb
cmpsl
or
andb
outsl
push
movsb
dec
xor
lcall
mov
dec
xchg
add
mov
adc
rcrb
cmp
sbb
outsl
call
leave
addr16
leave
xchg
es
dec
rclb
test
push
xchg
add
mov
aam
ror
push
lret
lahf
fmul
inc
imul
rorb
cld
jg
fistpl
adc
pop
sbb
jo
adc
mov
clc
popl
push
push
loope
mov
cltd
shll
or
scas
fs
leave
repnz
insb
push
mov
cmp
cmpsl
mov
jo
lcall
sti
lahf
inc
je
push
roll
scas
mov
testl
rcr
outsb
cmp
cld
xor
pop
push
and
lock
inc
in
and
adc
dec
arpl
and
outsb
fst
incl
fisttpl
lea
les
cmp
test
mov
ficomps
fstpl
push
cld
outsl
push
xor
cmpsl
xchg
mov
push
ljmp
adc
inc
hlt
cmpsb
pop
mov
jne
das
icebp
loopne
push
pushf
cld
or
push
mov
xchg
or
test
aam
into
add
pop
mov
push
push
fnstcw
push
lret
inc
mov
lods
jge
or
jo
push
rcr
sbb
jl
ds
jle
sub
push
and
insl
mov
insb
mov
aas
mov
aad
mov
xchg
dec
sbb
push
enter
sahf
jne
ljmp
outsl
xor
loopne
imul
dec
adc
sbb
pushf
cmp
rorl
stos
call
ds
in
adc
aas
lahf
lds
ds
pop
call
je
mov
cmpsl
stos
push
pop
clc
in
scas
cld
sub
pop
xchg
scas
xchg
cmp
mov
std
ret
mov
mov
dec
test
adc
pop
call
and
pop
pop
dec
test
mov
adc
push
lcall
mov
addb
rolb
rolb
ret
icebp
inc
subl
cmp
dec
movsl
aad
xchg
or
mov
clc
inc
arpl
push
inc
adc
mov
mov
ljmp
push
mov
pop
push
aad
add
out
decl
adc
mov
inc
inc
inc
add
sti
aam
ret
sbb
call
mov
gs
mov
push
popa
and
adc
inc
mov
mov
pop
pop
xchg
fwait
cmpsl
xor
xchg
sbb
pop
cmpsb
push
ret
int
es
or
mov
sub
xchg
mov
mov
pop
mov
add
stos
jge
cli
adc
inc
jmp
pop
fisttps
mov
jle
pop
sub
icebp
xor
and
sub
mov
popf
scas
and
fimuls
shrl
jmp
in
inc
dec
jecxz
jne
cmp
cmpsb
icebp
ds
xor
lahf
jns
test
ljmp
mov
imul
out
mov
fucomip
sub
pop
lock
mov
aam
or
test
aas
mov
daa
sbb
sbb
jmp
movsb
dec
push
or
add
xchg
jmp
mov
pusha
repnz
imul
cmp
jo
cmp
sbb
mov
je
cs
test
cmp
int3
ljmp
add
mov
adc
adc
mov
mov
mov
enter
fists
and
insb
mov
leave
mov
or
jne
je
cmp
cld
mov
push
incl
pop
and
push
jo
das
adc
fisttps
xchg
or
ret
subl
sub
popa
and
cmp
js
int3
repz
sbb
jbe
or
dec
push
mov
jae
mov
stos
bound
fbstp
clc
syscall
out
shrb
and
sbb
lcall
cmpsl
daa
loop
pusha
pop
ficoml
cs
push
jnp
dec
mov
pop
in
fwait
and
push
mov
dec
xor
lcall
mov
fwait
cmp
add
testb
mov
push
fwait
bound
add
fs
imul
lcall
mov
lock
mov
leave
cwtl
adc
jbe
or
lret
or
loope
pop
mov
jg
lea
shlb
mov
cmp
bound
fisttpl
clc
pushl
int
movsb
and
add
inc
cltd
outsl
mov
aam
jbe
add
push
push
jbe
out
shll
push
pushl
ljmp
xor
push
lret
mov
pop
pusha
jo
push
mov
call
add
inc
jl
dec
push
aaa
fwait
cmp
aas
mov
xchg
sub
fcmovnu
inc
xchg
std
imul
pop
data16
mov
or
shl
in
mov
jmp
test
daa
jno
test
xlat
mov
dec
nop
push
cmp
test
or
sub
ljmp
inc
adc
cmp
add
pop
repnz
mov
mov
pop
dec
sub
add
enter
mov
push
gs
push
inc
jo
xor
je
pop
push
jmp
arpl
out
cmp
add
lcall
mov
xchg
or
fmull
enter
decl
lret
cli
adc
cmp
mov
adc
rorb
fwait
push
sub
mov
add
pop
decl
add
inc
cld
pop
clc
stc
add
mov
stos
mov
outsb
add
mov
sbb
ffree
and
push
fadds
decl
inc
and
je
bound
mov
lret
jl
bound
sbb
mov
jl
mov
push
mov
jg
pop
jmp
add
or
pop
mov
xchg
out
jmp
arpl
inc
cld
jg
popf
inc
mov
and
repnz
pusha
dec
add
and
push
test
jb
sbb
andl
outsb
in
and
jmp
loop
iret
cmp
lcall
mov
cld
adc
rcr
aaa
pop
sbb
cs
or
stc
add
dec
adc
xorb
jns
imul
pop
pusha
xor
loop
lea
movsb
rol
xchg
mov
adc
mov
ret
jecxz
stos
and
in
mov
arpl
mov
dec
mov
xchg
repnz
lods
lret
mov
cmp
andl
leave
int3
out
je
and
aaa
loopne
mov
pop
sub
test
cli
aaa
es
mov
inc
xor
test
mov
push
xor
sbb
jg
push
push
insb
test
subb
addr16
shrl
test
divb
jno
pop
incl
icebp
xchg
and
jle
daa
pop
cmc
outsl
cmc
sbb
std
enter
jb
stc
sahf
insl
lds
mov
mov
jp
cmpsb
and
std
pop
push
push
mov
repnz
mov
das
xor
out
adc
hlt
cltd
stos
dec
je
aaa
out
cmpsl
push
test
lods
inc
inc
mov
or
movsl
loop
or
ljmp
ds
je
aam
mov
pop
subb
aam
mov
push
shll
test
push
jns
pop
jno
scas
les
push
out
xor
and
das
mov
push
add
je
lea
jns
push
sub
call
lret
mov
sub
or
sbb
adc
pop
es
lahf
bound
pop
pusha
jae
rcl
mov
loopne
or
dec
cld
mov
mov
outsb
fdiv
mov
fcmovbe
out
ljmp
pop
inc
jp
aaa
adc
pop
jmp
popa
ljmp
mov
adc
mov
sahf
mov
cmc
outsl
das
rcr
loop
mov
and
shll
or
aad
cmp
inc
push
rcl
lea
push
loop
std
pop
xor
lods
in
imull
and
or
mov
je
or
pop
scas
and
arpl
xchg
jne
and
and
mov
shr
and
mov
pop
pusha
mov
push
push
mov
xchg
mov
cwtl
dec
push
std
cmp
and
mov
loope
or
adc
cltd
push
add
xchg
movsl
insl
lret
add
std
decl
cmp
pop
in
mov
mov
dec
adc
scas
adcb
in
sub
ljmp
sub
sub
push
addr16
inc
call
push
lock
inc
test
enter
loopne
xor
out
add
and
mov
cmpsl
movsb
xor
mov
cli
jg
mov
cmp
jg
inc
cmp
data16
add
xchg
dec
popf
mov
sar
cs
and
push
dec
lods
jecxz
call
and
jno
incb
mov
jnp
insl
push
inc
mov
ficoml
push
xor
adc
shrb
testb
xor
enter
sbbb
test
mov
pop
mov
inc
cs
jnp
inc
fnsave
cwtl
jmp
fs
mov
and
inc
pop
flds
insb
fildll
arpl
inc
or
clc
pop
decl
das
inc
and
test
jae
dec
into
es
cmpsl
or
and
mov
std
xchg
mov
mov
or
pushf
sti
xor
jne
mov
mov
and
adc
inc
or
xor
push
sbb
movsl
xchg
jge
lods
pop
pop
mov
iret
les
or
ret
pop
mov
push
or
adc
shl
filds
imul
push
jle
movsb
xor
test
inc
pop
xchg
decb
ret
fs
sub
sbb
cmp
and
sbb
mov
mov
out
mov
test
lcall
mov
movsl
add
and
movsb
clc
inc
mov
or
iret
decl
rorb
lods
push
mov
cltd
aas
cmp
in
mov
cli
fcmovnbe
push
jge
aam
pop
sbb
lods
xchg
fisubl
dec
adc
lods
jnp
and
and
and
cwtl
in
imul
xchg
xorl
mov
std
or
adc
push
xchg
pop
cmp
sbb
adc
xchg
or
lods
fsub
and
dec
xlat
out
sub
add
fs
jae
mov
push
inc
xor
fildl
xor
sbb
pop
jp
std
add
adc
adc
adc
rorb
icebp
mov
push
xchg
and
stos
rcrl
push
fwait
jae
and
cld
ljmp
sub
adc
inc
jl
cmpsl
and
pop
clc
pop
or
dec
imul
cmp
inc
insb
in
ljmp
mov
or
pop
ljmp
aas
and
jg
pop
ds
mov
inc
fs
sbb
jb
mov
xchg
addr16
test
mov
adc
das
gs
dec
nop
add
xor
adc
repz
jmp
es
mov
nop
cmp
sahf
paddd
test
adc
in
push
pushf
ja
and
pop
mov
and
ja
dec
push
mov
outsb
popf
mov
inc
push
flds
xchg
xchg
mov
cmp
inc
xchg
movb
or
cmp
push
sub
outsl
cld
ja
sahf
and
in
adc
xchg
in
push
xor
and
addr16
push
add
mov
or
xlat
mov
jns
sub
mov
pushl
mov
push
and
lds
std
xchg
jmp
aad
or
xor
enter
mov
mov
js
push
imul
jo
sahf
ljmp
jge
jo
sbbb
adc
lods
pop
inc
mov
and
dec
incl
bound
add
fidivs
mov
or
add
pop
jo
push
in
loope
pop
mov
cmc
pop
mov
pusha
mov
xchg
movsl
aaa
mov
leave
lret
cmp
sub
fisubrs
into
xchg
clc
xchg
outsb
sub
dec
mov
push
shll
pop
imul
mov
sbb
mov
add
out
sub
lcall
std
aam
sub
roll
jmp
cltd
ja
fstps
out
dec
insl
cs
mov
in
and
mov
dec
test
mov
inc
out
popa
daa
xchg
pop
add
and
cld
push
stos
or
jg
popa
cli
fistpl
dec
xchg
out
inc
or
jle
push
cmp
shl
jmp
out
sbb
sbb
fld1
clc
and
pop
loopne
sbb
rcll
dec
jge
ljmp
mov
mov
cmc
nop
daa
jnp
mov
add
fld
sub
and
xchg
inc
add
sbb
fists
and
push
sbb
mov
shl
out
lcall
inc
jne
xlat
ret
idivl
adc
ja
shll
cmp
sbb
das
xor
mov
andl
jno
pop
xor
xchg
mov
jmp
lcall
outsl
scas
cmp
push
lds
adc
mov
cwtl
jo
lcall
ret
dec
sbb
adc
in
pop
gs
adc
adc
gs
jg
push
test
test
out
decl
lea
sbb
push
cmp
inc
and
shrb
and
sbb
testb
jo
lcall
in
dec
add
mov
mov
test
pop
mov
add
cmp
repnz
fistpl
xor
dec
cs
test
push
lcall
out
mov
int3
sub
not
inc
push
jle
inc
stos
mov
scas
insb
and
pop
in
jp
pop
or
in
into
cld
fiadds
mov
inc
add
xchg
pushl
add
aaa
dec
cmpsl
jecxz
xor
popa
aam
sahf
or
mov
cmp
inc
mov
adcl
scas
outsl
clc
dec
aaa
pop
xchg
and
fdivrl
add
mov
cmc
stos
mov
pop
add
decl
jne
out
sub
imul
dec
ret
stc
jo
mov
jne
ficompl
mov
test
adc
mov
incl
dec
dec
pushw
ror
sub
and
leave
xchg
aam
inc
mov
mov
scas
sbbb
shrb
mov
mov
xchg
incb
jg
mov
dec
xchg
jge
push
adc
popa
loopne
jae
jnp
orb
inc
pop
push
out
and
lods
add
inc
push
outsl
ror
les
inc
lock
mov
lods
inc
stc
mov
roll
fnstsw
dec
cmp
fistpll
fcoms
or
adc
call
ss
adc
inc
mov
jbe
loopne
cs
inc
ret
nop
sub
pop
clc
ret
jbe
dec
or
sub
inc
dec
pop
mov
cmp
xchg
sub
js
xor
fiaddl
dec
dec
dec
rclb
jmp
adc
sbb
mov
xor
punpckhbw
adc
push
lret
out
imul
and
cmp
lret
xor
inc
mov
in
lcall
mov
xor
inc
sarb
vmptrst
in
sub
fcompl
das
xorl
sbb
mov
inc
sub
shrb
xorb
adc
inc
add
jnp
outsl
in
mov
add
and
cmp
xor
movsl
call
es
inc
ret
xchg
cmp
adc
mov
mov
adc
xchg
pusha
fistps
mov
add
inc
outsl
pop
gs
pop
cli
inc
or
or
mov
and
or
pop
push
lahf
sbb
dec
xchg
xlat
xor
xor
inc
pop
addl
call
movsl
push
das
inc
mov
sbbl
xchg
mov
jg
mov
bound
aaa
push
daa
sub
inc
bound
call
lcall
sbb
push
fucomip
pushf
cmp
das
in
test
push
sahf
data16
pop
dec
hlt
push
decl
rorb
mov
and
xchg
push
inc
sub
addr16
repz
gs
movl
or
test
in
dec
lcall
sub
add
in
cwtl
sbb
push
sarl
cld
jbe
pop
loope
lret
bound
outsl
adc
inc
ret
mov
mov
das
icebp
imulb
in
and
xchg
imul
xchg
push
push
loop
adc
rclb
or
ss
lds
cmp
adc
jb
sbb
das
cmc
jg
lods
cwtl
lret
adc
enter
movsb
push
test
fildll
popa
xor
pop
sarb
push
push
outsl
mov
push
movsl
pop
mov
movsl
pop
xlat
ffree
hlt
mov
xchg
out
adc
push
sub
subb
add
aaa
and
es
add
jg
lea
clc
adc
mov
into
jne
aaa
dec
loopne
mov
and
inc
and
inc
xor
cmp
and
inc
shr
and
cwtl
xor
stc
mov
insl
mov
mov
popf
and
xchg
jmp
or
or
dec
xchg
scas
cmp
ficomps
and
push
lods
call
sbb
xchg
out
xchg
fildll
lret
inc
mov
pop
add
lods
insl
das
sar
xor
bound
pop
or
sbb
pop
xor
ret
rcrb
inc
notl
in
subb
jp
test
std
dec
add
in
cs
jle
mov
xchg
xor
mov
cmp
inc
aad
push
or
inc
dec
sub
in
insb
jp
inc
sub
js
cli
dec
pop
hlt
sbb
lahf
jbe
fistpll
jle
cmpl
daa
and
push
sti
lret
lods
xchg
fucomi
mov
imul
inc
rclb
pushl
pop
out
or
adc
aaa
mov
and
sbb
xchg
mov
cmp
adc
adc
jmp
stc
cmpsb
push
repnz
and
sub
fucomip
decl
or
mov
mov
js
mov
addb
push
sahf
dec
mov
inc
insl
push
lahf
add
lcall
cli
shrb
insl
ljmp
mov
adc
decl
xor
sub
cld
add
mov
movsl
lods
add
and
cmp
inc
test
sub
in
pop
lds
hlt
push
push
out
pusha
jno
mov
pushf
pcmpgtd
ret
rorl
inc
pop
fsubs
arpl
xchg
add
and
or
adc
adc
push
jg
add
fldt
lea
and
mov
cwtl
popa
push
sub
mov
or
pusha
xchg
mov
rcl
add
add
jmp
push
dec
fildll
jb
push
mov
inc
jg
mov
repz
mov
pop
cli
sbb
in
push
fsub
repz
mov
fs
clc
and
or
nop
add
adc
lea
rcrl
aas
nop
pop
sub
adc
les
sar
pop
mov
adc
fstps
wbinvd
outsb
mov
xor
cmc
cmp
mov
mov
aam
jo
dec
or
mov
push
call
xchg
out
movsb
dec
pop
movb
mov
mov
sahf
jns
orl
out
jo
cmp
fstl
adc
test
jae
xchg
or
pushf
mov
cmp
cs
jl
lret
sbb
movsl
and
and
push
ret
sahf
shrb
mov
jae
pop
lock
loopne
cmpsl
mov
push
inc
jl
mov
cmc
inc
inc
sar
and
mov
sbb
fs
mov
lods
fisubl
test
jno
lea
mov
sbb
jbe
scas
pop
adc
inc
das
into
sub
cmp
movsl
leave
push
out
fmul
lods
or
add
es
loop
push
stos
adc
fbld
cwtl
xor
inc
rcl
popf
in
mov
outsl
push
jg
cld
inc
mov
mov
pop
push
sbb
mov
pop
pop
cli
call
add
pushl
mov
inc
xor
push
push
mov
mov
lcall
lahf
xor
add
xchg
mov
push
rclb
decl
mov
xor
lds
mov
fisttpl
push
push
push
adc
push
repz
sbb
xor
and
dec
or
cmpsl
mov
inc
adcl
outsl
inc
jo
add
insb
jo
repnz
jne
aam
fstpl
dec
mov
les
jecxz
decb
push
jno
jp
or
shlb
jbe
icebp
jnp
fcoml
das
mov
montmul
cmpsb
push
out
addr16
testl
lods
mov
stc
xchg
nop
scas
aam
mov
pop
sbb
pusha
stc
ljmp
test
ljmp
inc
pop
ret
push
add
mov
and
icebp
stos
mull
adc
sbb
iret
or
sbb
test
cmpsl
and
bound
xor
xchg
pushf
xor
sub
sarb
mov
push
les
or
lahf
mov
lret
adc
pop
adc
push
nop
jge
inc
dec
mov
mov
push
notl
push
ret
inc
push
pushl
adc
les
add
push
orb
mov
inc
mov
lahf
adc
shlb
sbbl
add
pop
push
insb
loop
and
ja
or
adc
add
ja
pop
jle
hlt
pushf
pop
adc
push
imul
jmp
xor
and
pop
cli
adc
add
push
mov
and
test
mov
aad
mov
mov
pop
jp
dec
mov
lds
test
stc
aad
shlb
hlt
shr
mov
scas
jp
decl
add
flds
jno
ret
adc
sar
loope
decl
lods
and
inc
mov
adc
inc
adc
pop
or
fwait
test
sbb
loop
pop
push
test
les
add
dec
mov
xlat
int3
je
shl
cmp
das
push
repz
adc
call
pop
sbb
inc
pusha
out
nop
jecxz
or
xchg
outsb
inc
das
jl
inc
imul
arpl
push
push
jo
cld
mov
cmp
cmc
sbb
clc
sub
das
mov
adc
rcll
js
jg
or
loope
adc
cmp
movsl
mov
mov
mov
add
rclb
aam
inc
movsl
popa
out
pushf
jp
decl
lahf
jno
jmp
in
loopne
inc
into
cwtl
jb
mov
xchg
ss
and
mov
pop
je
xchg
pusha
iret
lods
cld
or
sbb
push
cmp
inc
data16
mov
aad
fucomip
decl
shlb
lret
and
jge
inc
push
in
push
push
mov
or
dec
xor
lcall
out
ljmp
insb
aam
adc
mov
push
xor
stos
fcompl
in
outsb
aas
xor
dec
and
push
sub
xor
mov
add
push
movsb
jge
dec
jo
push
push
fcomps
out
leave
iret
subl
call
push
jno
icebp
push
inc
mov
jecxz
add
and
sbb
and
clc
jbe
adc
enter
stc
jmp
stos
fwait
loopne
rclb
or
sub
pop
testb
jbe
sub
loopne
mov
lea
dec
jno
xor
filds
std
inc
call
lds
jnp
clc
push
push
adc
loopne
add
dec
insl
and
into
cmp
popa
push
cmp
push
fdivr
sbb
mov
cmp
or
nop
push
and
add
xor
and
pop
fisubrl
ret
lods
fcmovnbe
test
in
cmp
lret
adc
rorl
sti
fsubrp
dec
dec
lcall
cli
mov
adc
mov
mov
jno
lock
lds
add
xchg
pop
in
in
xchg
sub
stos
and
test
inc
push
mov
push
or
mov
lret
or
mov
ja
inc
sbb
and
divb
push
test
popa
cmp
rorl
cld
popf
pop
mov
aaa
aad
movsl
out
pusha
in
inc
cmp
push
incl
xchg
xchg
cmp
int3
lds
rclb
or
imull
lods
sbb
aam
cmp
or
cmc
push
test
addr16
add
loop
adc
and
out
jo
in
fistpl
in
push
mov
lock
pop
hlt
xchg
mov
jmp
loopne
lds
sub
cmpsl
push
or
xor
rcl
stos
test
mov
sub
in
and
add
mov
adcb
jg
js
pop
pop
orl
popf
sub
in
bound
dec
dec
mov
xchg
test
aad
pop
mov
lds
push
adc
std
fistpll
stc
test
xchg
or
hlt
test
outsl
in
shrb
std
ds
leave
lock
loop
sbb
xchg
inc
pop
stos
icebp
addb
or
pushl
pop
jl
push
sbb
sbb
mov
mov
sub
das
push
out
test
inc
or
out
test
push
mov
xor
inc
cmp
je
add
imul
push
cld
repz
jbe
xchg
inc
cmp
mov
cmp
lock
dec
stos
lahf
in
sub
ret
push
lods
enter
pmullw
pop
xchg
or
dec
cwtl
scas
sarl
les
inc
aaa
dec
testb
pop
push
lods
clc
mov
sub
inc
arpl
cmp
testl
filds
inc
shll
imul
aaa
call
mov
push
dec
lahf
or
scas
mov
jg
cli
ja
rolb
add
int
xchg
stos
and
inc
mov
cmp
pop
dec
mov
in
and
outsb
or
int
nop
push
arpl
mov
mov
leave
or
stos
nop
mov
imul
cld
dec
and
in
sbb
fmul
jb
jg
xor
jo
lods
mov
arpl
in
incl
inc
jae
jbe
jnp
shll
mov
rcrl
fisttpl
in
fisubrs
insl
andl
inc
add
xor
gs
repnz
bound
jg
pop
mov
decl
call
inc
mov
xchg
sarb
jp
insb
bnd
rclb
jbe
mov
loop
mov
xor
dec
popa
xor
add
es
int
mov
std
filds
iret
aam
mov
fcomps
sbb
std
ret
fildll
std
psubsb
or
mov
cmp
loope
push
cmp
movsb
or
sbb
mov
add
iret
add
and
or
in
ja
push
mov
or
das
mov
cmp
mov
lcall
push
lcall
pop
insl
in
jl
les
push
loop
test
pop
jbe
loope
addr16
pushl
mov
cld
call
inc
xor
jp
mov
xor
mov
mov
or
jae
test
cmp
shlb
mov
push
mov
jns
addr16
pop
pop
mov
mov
in
inc
imul
ret
mov
outsl
andl
das
dec
jbe
pop
xchg
add
outsb
push
mov
pop
add
sub
pop
ljmp
inc
andl
push
fucomip
stc
mov
arpl
loop
add
sbb
je
cmp
iret
mov
mov
movl
xor
nop
popa
sbb
out
aam
cmc
xchg
repnz
pushf
jle
xor
cli
lret
sub
or
jmp
inc
mov
sarb
pop
add
jl
and
add
ss
in
shrl
in
hlt
sbb
sub
fdivr
ret
aam
inc
cmpsl
movl
mov
pop
add
mov
xor
cs
jp
shrb
les
xor
ficoms
pop
test
inc
jle
mov
stc
xor
jge
hlt
pushf
daa
or
mov
inc
das
rolb
pop
mov
or
sti
xchg
xchg
popf
push
imul
movb
insl
scas
jne
stos
add
mov
dec
push
xchg
pop
and
ljmp
in
arpl
cmpl
pushf
fidivrl
cs
mov
add
and
mov
xchg
and
pop
insb
mov
and
jl
mov
pop
ja
inc
insl
push
addr16
scas
ficoml
in
mov
cltd
and
dec
and
xor
push
dec
inc
out
jp
cmp
cmp
leave
cmp
aas
xor
dec
push
pop
ss
inc
lret
lahf
inc
popa
dec
enter
cmp
adc
jmp
pop
mov
les
dec
ss
call
and
mov
test
cld
or
and
loopne
rorb
fnstsw
stc
loope
and
lds
add
mov
add
push
rcll
lds
push
mov
rcrl
adc
adcb
jns
pop
iret
es
jo
push
inc
inc
scas
ret
cmp
inc
fnsave
and
jp
sbb
cmp
mov
inc
rcrl
pop
fists
jno
jecxz
xchg
es
aad
dec
inc
sbb
xchg
clc
fdivs
dec
xchg
sbb
and
loope
ljmp
mov
std
jg
and
mov
xchg
js
dec
pop
out
or
das
dec
call
mov
sbb
data16
pop
mov
adc
dec
jl
inc
push
movsl
push
push
sbbl
xor
push
cmp
movsl
mov
aaa
adcb
push
loope
inc
pmullw
sbb
mov
insb
push
ljmp
dec
adc
push
js
push
pop
cld
or
push
vfrczps
xlat
andb
mov
mov
jbe
xor
cmp
jecxz
lods
rol
pop
or
movsl
cmc
pop
mov
pop
js
mov
sub
inc
pop
inc
adc
mov
jne
shrl
push
sub
mov
popf
fadds
dec
imulb
negb
pop
jb
xchg
arpl
inc
insb
jp
add
in
enter
dec
icebp
shlb
pminsw
lds
cmc
bound
push
shrl
lods
xor
enter
lods
mov
clc
mov
sub
push
scas
cs
ret
push
dec
mov
cmp
addb
push
lret
mov
lret
xchg
jle
jg
jl
dec
mov
mov
jl
push
aas
subb
jo
ds
cmpsl
mov
cmp
dec
inc
test
push
jg
decl
xor
insb
cltd
sbb
push
cmp
add
outsb
testl
xrelease
fsubs
mov
cli
call
fmuls
xor
push
mov
js
lock
in
call
mov
in
sub
je
das
xchg
push
sbb
jg
scas
pop
pop
scas
sbb
dec
mov
inc
jge
adc
pop
iret
std
push
dec
loope
sarb
xchg
and
and
xchg
hlt
jne
jg
push
adc
jns
out
mov
lock
test
je
arpl
or
pop
adc
out
xor
or
cmpsl
pop
lahf
aas
xchg
outsl
call
dec
jmp
cmp
jg
or
adc
inc
ret
test
adc
lret
ss
bound
les
mov
icebp
call
adc
out
icebp
je
aas
test
inc
and
test
cmpsl
test
pop
fwait
mov
jb
add
adc
aam
jecxz
xchg
out
lea
arpl
or
dec
das
std
mov
popa
or
divl
adc
outsl
and
or
call
cmc
mov
insl
test
pusha
pusha
xorb
push
fmul
dec
pop
inc
test
mov
mov
adc
mov
xchg
mov
es
rcr
and
je
inc
adc
pop
inc
das
imul
fildll
or
lock
push
int
pop
or
test
mov
dec
and
fdivrp
or
cli
mov
ja
add
and
aam
push
andl
jle
popa
jl
inc
dec
xchg
xor
mov
push
sahf
aam
cmp
fidivs
les
pop
cli
ds
adc
xchg
cmc
push
sub
fdivrp
jle
scas
cltd
dec
aas
dec
imul
mov
das
jge
cmp
and
fdivrs
or
lods
pop
push
push
aas
adc
iret
test
xchg
push
sbb
xchg
or
cmpb
push
out
mov
mov
aaa
mov
sbb
nop
xchg
mov
sub
sbb
enter
mov
jmp
inc
adc
rcrb
jp
lds
aaa
cmpb
iret
rorb
xchg
pop
shr
stc
push
adc
push
pop
ret
test
and
loopne
call
shll
lcall
push
inc
push
ficoml
xchg
adc
fcmovnbe
push
dec
cwtl
mov
pop
dec
jno
pop
das
hlt
pop
jle
in
mov
scas
or
or
sbb
int3
adc
push
jge
int
and
incl
in
les
nop
fisttpl
pop
mov
sub
movsb
mov
or
sbb
cmp
and
or
or
or
dec
push
pop
ja
or
and
fldt
insb
cmpsl
inc
adc
jl
and
insl
mov
popa
lcall
cs
jg
sbb
xor
insb
test
xor
cltd
inc
jo
std
mov
push
dec
sub
aas
test
imul
add
xchg
pop
adc
loopne
dec
sti
imul
fstl
pop
outsl
sarl
jp
dec
das
push
in
sub
adc
adc
or
add
push
and
cmp
lods
ljmp
out
dec
fildl
arpl
in
adc
mov
mov
fwait
and
icebp
jge
inc
jecxz
fstps
loop
xchg
pop
mov
pop
outsl
cmp
dec
jne
cmpsb
movq
xchg
add
add
mov
clc
jae
ljmp
orb
pop
ljmp
and
push
sub
xor
scas
fcmovnu
call
mov
test
inc
stos
mov
and
mov
stc
dec
mov
push
icebp
movsb
mov
lahf
int
cltd
ja
xchg
test
mov
xor
aaa
jne
or
add
gs
push
cltd
cmp
mov
or
iret
adc
mov
mov
repz
push
pop
je
js
mov
popa
push
mov
jo
and
adc
cli
jne
das
mov
ficomps
ds
jmp
add
add
std
mov
test
sti
frstor
or
in
movsl
mov
xor
pop
add
repnz
in
call
arpl
inc
shlb
fs
cwtl
sub
into
add
nop
fs
rol
test
or
int
add
xchg
adc
mov
int3
and
fisttpll
stos
pop
outsb
stos
or
mov
lahf
or
pushl
daa
mov
imul
jno
mov
lret
pop
add
sub
sub
adc
add
mov
jne
decb
adc
in
xor
mov
mov
push
pop
jmp
sub
jl
mov
stos
xchg
insl
and
std
push
loop
adc
aas
push
iret
addr16
xchg
jl
shrb
cld
sbb
xlat
mov
mov
loopne,pt
mov
or
xchg
xchg
in
sbb
lcall
pop
xor
call
icebp
pop
ds
adc
or
mov
mov
push
mov
pop
jbe
idivb
jl
aad
dec
dec
movl
ljmp
mov
xchg
push
xchg
js
pop
mov
jns
and
jg
pop
jg
les
movsb
inc
std
or
test
ficompl
jl,pn
xlat
mov
fiadds
inc
call
add
test
pop
xorl
ret
mov
pop
cli
mov
shrd
lcall
mov
pop
push
cmp
mov
jns
scas
pop
push
xor
pop
mov
cli
scas
je
sbb
add
mov
push
pop
add
mov
adc
mov
std
xchg
into
js
cs
das
jge
jecxz
and
cmp
dec
xchg
in
push
movsl
js
sbb
aas
fucom
scas
jge
sbb
push
mov
or
sbb
sbb
mov
andl
and
out
mov
cld
popl
jge
pop
or
mull
ret
push
cld
std
clc
stos
sub
mov
xchg
sbb
or
call
inc
xchg
std
cmp
cmp
fadds
adc
sub
imul
aad
fisubrs
lods
fnstsw
inc
in
das
addb
and
inc
xor
mov
jbe
push
jo
hlt
add
out
cld
add
rorl
test
xor
xlat
mov
mov
test
mov
inc
or
insb
std
sbb
hlt
dec
dec
and
icebp
inc
fcoml
loop
inc
pop
ljmp
dec
bound
or
or
mov
dec
xchg
insb
outsl
pop
andl
ret
sub
dec
fbld
adc
jle
cmpsl
mov
ret
ja
jns
push
ss
inc
pushf
inc
adc
mov
sub
rol
shll
add
ret
int
push
jle
inc
loope
dec
std
cmpsb
loop
sub
mov
sbb
mov
mov
mov
negb
sub
cmp
mov
pop
sbb
sbb
cli
pop
jb
jns
loopne
mov
loop
loopne
inc
pop
fimuls
xor
mov
in
in
outsl
pop
jge
cmp
sti
or
ljmp
mov
jle
js
rolb
mov
jo
add
and
sbb
lock
push
cmpsb
mov
repnz
loopne
sar
cmp
pop
andl
std
and
pop
ja
mov
push
push
pop
inc
int
lock
stos
into
inc
jl
repz
outsl
out
rorb
pop
loopne
pusha
pop
jmp
in
mov
jle
aam
pusha
push
sbb
jmp
push
pop
rol
neg
pushf
test
adc
jne
sub
stc
shl
call
scas
or
pusha
push
call
mov
aad
inc
sbb
or
test
or
adc
xchg
mov
cmp
movsl
aam
mov
jg
and
lds
mov
push
mov
addr16
lcall
mov
jo
inc
inc
ror
sub
outsl
dec
adc
cmp
mov
rolb
mov
and
in
in
stos
mov
fwait
mov
cs
inc
loopne
fidivrl
and
xchg
cmpb
bound
dec
mov
test
andb
pop
mov
bound
outsl
adc
cld
sbb
frstor
in
dec
mov
push
shrl
ret
add
mov
mov
stos
out
xor
stos
popa
in
sbb
lds
jmp
mov
cld
pop
loopne
cmp
or
shll
and
xchg
pop
and
dec
push
dec
lcall
clc
clc
push
push
ds
test
fsubrp
movsl
push
cltd
mov
push
sub
icebp
mov
xor
sbb
dec
push
mov
and
bound
or
pop
xchg
fdivrs
jne
mov
mov
pop
push
mov
aam
hlt
and
nop
mov
clc
in
mov
andl
dec
fs
mov
sbb
cmp
mov
aaa
xchg
dec
push
adc
cli
outsl
icebp
xor
sub
test
sub
lods
push
xor
mov
call
mov
or
ret
push
cs
add
inc
mov
imul
sub
add
clc
push
popa
adc
data16
out
outsb
sub
adc
xchg
pop
aas
cmp
outsl
lock
sub
ret
cmpsl
or
mov
dec
aaa
jge
xlat
enter
or
xchg
shlb
cmp
mov
inc
or
xchg
jnp
in
enter
jg
ret
xor
mov
test
pop
mov
mov
icebp
jb
sbb
mov
jae
jmp
pop
rcll
xor
mov
xor
inc
or
pop
andb
enter
and
adc
cmp
dec
sbb
loopne
cmpb
ret
sbb
inc
jle
filds
clc
jg
sbbb
fdivl
jmp
fwait
hlt
cltd
cmp
add
sbb
leave
add
mov
das
mov
mov
add
mov
test
loopne
inc
lods
call
adc
jmp
jb
cmpsb
add
mov
jo
mov
inc
aaa
mov
push
sub
sub
and
jmp
ds
icebp
dec
mov
mov
fs
push
inc
xchg
adc
mov
push
sbb
dec
call
dec
dec
xchg
imul
decl
xorb
arpl
or
fbld
cmp
pop
mov
jno
cld
xchg
jg
lods
cmp
xor
pop
or
outsb
lcall
cltd
jns
jp
fsub
jge
lcall
and
mov
aam
int3
and
add
imul
jg
sahf
test
cwtl
addl
vmovaps
jmp
stos
pop
sti
push
jnp
bnd
mov
push
arpl
aad
movsl
jg
adc
add
and
loop
push
mov
ss
jle
mov
jno
out
data16
mov
xor
lahf
shlb
lods
test
push
cmpsb
mov
xchg
inc
mov
mov
jl
or
mov
push
cld
sub
or
pop
std
outsb
cmp
add
dec
fldenv
inc
lds
jmp
pop
sbb
push
jnp
stc
and
les
shll
mov
outsb
jl
xchg
and
out
shl
mov
incb
push
lds
sbb
ret
inc
ljmp
push
push
lret
push
orb
mov
lcall
dec
dec
cmp
fstpl
test
push
sbbb
jl
mov
and
popa
and
xor
mov
ficoml
cmp
lcall
test
jecxz
loope
pop
jnp
jg
inc
sbb
and
shll
aam
test
std
jg
jle
xor
sub
mov
inc
inc
test
mov
inc
outsl
adc
sub
mov
sarb
cs
stc
lea
sbb
cmp
add
sub
stos
enter
jle
leavew
xchg
xchg
out
adc
mov
call
iret
pop
xchg
push
mov
sub
incl
push
xor
ljmp
push
dec
dec
cmp
mov
outsl
sub
notb
push
sub
cmp
and
push
sahf
mov
call
adc
loopne
add
sbb
push
out
ss
mov
and
jae
rolb
ljmp
xchg
push
fisttps
inc
inc
icebp
inc
and
repnz
inc
sub
xchg
inc
sbb
xchg
sub
xor
jb
sahf
dec
loop
stos
js
sub
jle
clc
pop
xchg
mov
shlb
lret
jo
data16
mov
pop
shll
lods
rol
shlb
outsb
cmc
incl
in
xchg
mov
mov
imul
je
inc
enter
xor
sbb
ret
loop
and
push
divl
jbe
xor
mov
repnz
pushf
movsl
add
mov
or
xchg
test
shl
mov
and
mov
mov
jb
or
cwtl
sub
push
jno
addl
fdivs
inc
inc
cltd
sbb
sub
jnp
xor
xor
hlt
int3
movsl
std
shl
lret
mov
jo
in
rclb
les
add
gs
cmp
das
mov
push
cmpsb
fs
enter
xor
pop
or
nop
dec
or
pshufw
stos
inc
add
or
lea
jae
ss
add
fisttps
sbb
icebp
je
and
mov
mov
lcall
pop
test
sub
fucomip
cmp
jb
popf
fisubs
and
fidivrs
fwait
dec
iret
out
xchg
sbb
xchg
xor
dec
out
mov
or
in
pop
loopne
sub
push
ret
addl
stc
sub
push
xor
aaa
in
ss
imul
jne
decl
add
jo
pop
stos
sbbb
fidivrs
xchg
sahf
mov
and
mov
rorb
repnz
fimull
or
add
mov
test
bound
lcall
inc
movsl
addr16
cmp
popa
sti
stos
shlb
push
pop
add
adc
lds
mov
in
fdivs
pop
sbb
outsb
test
nop
jbe
jb
dec
sbb
sub
hlt
inc
pop
xchg
hlt
les
outsb
sbb
push
cld
aas
js
in
ret
ja
cmp
and
outsb
push
jg
pusha
mov
jmp
push
or
sub
push
js
ss
cmp
decl
aad
adc
lock
mov
rcrl
cmp
aas
fiaddl
adc
dec
lock
int
faddl
push
jp
imull
hlt
ret
fcompl
or
mov
pushf
and
int3
je
and
ret
cmp
push
sbbl
xor
mov
sub
mov
dec
mov
cmc
fdivrs
add
dec
lcall
mov
in
xchg
push
cmpb
leave
mov
popa
inc
rcll
je
test
jle
fdivl
test
ret
outsb
lock
outsl
mov
add
insl
jnp
sbb
subl
sub
xchg
push
lcall
ret
push
loope
shlb
adc
dec
add
sub
into
pop
test
jbe
and
jmp
and
mov
push
push
push
hlt
in
jne
mov
sub
test
iret
dec
and
dec
in
sbb
sbb
aad
cld
lret
add
inc
pop
pushf
jge
les
mov
cld
add
test
cmp
cmpl
pop
mov
ret
adc
jb
insl
push
mov
and
ret
outsb
rclb
fmul
sub
push
or
dec
loop
mov
push
ret
mov
shl
xlat
mov
push
mov
cmc
notb
insb
inc
sub
push
fstpl
mov
xor
aaa
mov
jg
mov
cmp
stc
mov
inc
fwait
push
inc
push
cld
into
test
js
add
sbb
adc
mov
dec
push
xor
test
fadd
pop
sbb
pop
icebp
and
test
mov
and
push
frstor
and
mov
sbb
ficompl
ss
mov
mov
jecxz
jecxz
es
cmpsb
scas
cmpsb
sarl
xorb
mov
or
pmaddwd
push
insb
insb
adc
push
test
imul
xchg
add
call
pop
sub
int3
push
ljmp
cmp
sbb
adc
cmp
jno
or
mov
pop
xchg
xchg
jbe
pushf
pop
mov
or
imul
aam
nop
dec
icebp
jmp
pop
fnstcw
test
scas
loop
adc
dec
pop
sub
mov
adc
outsl
inc
int3
call
fmul
rorl
pop
sub
jne
repz
jmp
dec
or
enter
sbb
sub
push
pop
shl
xorl
fs
cmp
arpl
or
cs
lock
jle
xchg
aam
push
xor
xor
jne
jmp
push
enter
lds
fucomi
mov
cmp
or
stos
pusha
sub
dec
jg
pop
test
push
mov
jnp
push
mov
fsubrl
and
fisubrs
imul
std
push
cs
inc
mov
sub
rolb
mov
movsl
sahf
sbb
pop
mov
aas
pop
adc
pop
sub
clc
or
mov
rol
test
pop
mov
sub
add
lods
sti
push
add
xor
das
dec
ret
inc
andb
pop
bound
sub
or
pop
lahf
mov
scas
and
lds
mov
mov
xchg
cmp
test
repnz
mov
inc
hlt
js
out
cwtl
fcmove
inc
frstor
pop
pop
mov
sbb
jno
mov
stos
cltd
lcall
mov
or
cmpb
mov
jne
js
or
or
xorl
mov
insl
dec
test
mov
xchg
jns
aaa
ret
montmul
cmpsb
inc
out
andnps
adc
and
inc
dec
dec
mov
movsl
pop
xchg
loope
jns
push
xor
call
sti
pop
addl
sbb
stos
les
mov
je
pop
mov
mov
loopne
outsb
mov
pushf
jbe
sub
jp
dec
sbb
cmp
mov
lea
push
sbb
mov
push
adc
jmp
cmp
adc
aas
enter
dec
sub
jp
fidivl
imul
dec
xchg
ret
xchg
test
inc
aaa
cmp
or
xor
jg
add
rolb
clc
jp
mov
cli
icebp
xchg
push
movsl
stc
sub
or
sbb
icebp
or
fistps
or
into
inc
jp
popa
xchg
or
int
out
dec
cmp
sub
shrl
mov
clc
in
lock
mov
clc
js
push
adc
cmc
add
cmp
and
daa
inc
mov
in
sub
xor
repnz
pop
shrb
shlb
in
lret
movsl
mov
push
cli
jge
sub
in
sbb
pop
fmuls
dec
js
mov
scas
negb
xor
fsubs
adc
fdivs
insl
insb
adc
add
mov
xorl
lock
jg
stos
ljmp
bound
pop
or
pop
push
pushf
jne
jmp
mov
je
fdivrs
cmp
xchg
cmpsb
xor
and
sub
daa
cwtl
pop
das
insb
outsb
inc
lahf
aas
cmp
push
pop
mov
adc
dec
jecxz
xchg
popa
sub
negb
push
out
inc
pop
inc
mov
out
inc
mov
xchg
test
aad
inc
mov
fwait
add
les
insl
cmp
inc
sti
loope
sbb
sub
mul
cmp
adc
mov
adc
push
in
mov
test
mov
icebp
dec
loopne
fsubr
cmpsb
push
push
cmp
test
add
sbbl
stos
mov
aaa
pusha
ret
jge
pop
mov
imul
loope
sub
cwtl
ds
mov
dec
or
out
js
dec
cmpsb
fs
push
repnz
movsl
aaa
sbb
ror
adc
sbb
lahf
push
mov
sbb
cmp
dec
adc
lret
les
push
testl
roll
pop
mov
sbb
dec
lock
ja
std
insl
mov
push
cmpsl
push
adc
loope
movsb
push
sbb
pop
sub
cltd
loop
xchg
push
arpl
sbb
repz
outsl
mov
iret
fmulp
push
out
sbb
jb
movsl
xor
test
rcrl
cmp
push
inc
in
fildll
pop
std
xchg
loop
push
sub
push
je
mov
daa
mov
inc
mov
xchg
rol
enter
sub
xor
xor
push
add
push
cmp
scas
loope
inc
sub
outsl
or
divl
leave
cmpsl
adc
add
fldt
outsb
insl
outsl
adc
add
ficomps
lock
push
adc
aam
push
jge
rolb
pop
testl
pop
dec
out
inc
adc
ds
fwait
sbb
sub
sbb
inc
mov
addl
jb
cld
out
jl
sbb
data16
repz
mov
fdivl
aaa
mov
xor
adc
adc
add
in
loope
int3
loopne
and
or
xor
mov
jns
jo
scas
fadd
or
and
mov
dec
clc
sub
mov
rorb
adc
push
xor
jmp
jle
cmp
push
enter
add
or
sub
add
mov
push
adc
mov
inc
cmp
sbb
push
xor
pop
push
movsb
out
ja
arpl
xchg
jnp
or
dec
loope
fiaddl
mov
scas
cmpl
and
mov
ljmp
mov
fsub
mov
out
dec
sti
insb
orb
jnp
adc
and
and
stc
int
mov
call
imul
add
in
jb
in
inc
aam
insl
sbb
in
cmp
dec
sahf
shrl
pop
mov
hlt
dec
orb
cmp
out
mov
fildll
fcoml
jle
jmp
ljmp
or
dec
xor
je
pop
outsb
jecxz
out
out
dec
jl
rolb
roll
cli
add
aad
cmpsb
fbstp
test
and
or
mov
pop
rclb
pop
rcr
es
je
xchg
bound
xor
pop
adc
jb
dec
ret
sub
in
ret
aad
inc
adc
test
sbb
jmp
sub
jle
xor
jg
popf
movsl
rorl
lret
bndstx
negl
out
adc
inc
inc
adc
jmp
out
test
cs
sti
add
nop
dec
inc
push
jmp
mov
and
mov
imul
iret
inc
addb
lods
sbb
mov
out
dec
mov
pusha
idiv
loope
push
inc
adc
mov
sub
fnstenv
icebp
mov
sbb
mov
or
mov
clc
push
or
iret
mov
cmp
adc
call
imul
aaa
cli
popf
mov
sub
fs
or
je
pop
pop
and
sbb
prefetcht0
into
sub
push
inc
cli
ja
insl
cmpsb
cmp
pop
test
lahf
scas
divb
mov
or
test
pop
mov
cmp
dec
cs
jbe
sub
add
sub
dec
std
mov
movswl
shl
call
int3
icebp
sbb
add
jge
add
sub
mov
mov
pusha
fucomp
sbbl
dec
and
shr
ret
call
inc
jle
cmp
lcall
mov
leave
xchg
xchg
jnp
cmc
daa
dec
or
push
pusha
and
pop
ret
push
insl
xchg
mov
test
sarb
mov
out
jns
and
sub
fdivrp
xabort
jge
repz
mov
inc
or
cli
jo
mov
cmp
sbb
repnz
push
test
add
sti
adc
dec
add
test
inc
repnz
pusha
mov
aas
lcall
shl
cmp
fcmovnu
into
or
mov
scas
stc
in
rcpps
xor
pop
dec
and
int
fadds
push
cmp
lods
stc
add
sbb
test
mov
stos
fidivl
rcll
insl
je
xchg
and
push
ja
pop
cmp
pop
fwait
or
sub
jae
ja
mov
adc
loope
jbe
add
pop
fiadds
fmul
lahf
aam
pop
jb
idivb
test
aam
mov
test
jp
xchg
mov
push
cmp
repnz
adc
and
stos
sbb
aas
in
mov
adc
jbe
sti
test
vminss
adc
mov
inc
mov
add
mov
dec
pop
imul
decb
mov
mulb
aad
clc
and
sbbl
push
ljmp
pop
cmp
in
insl
and
inc
push
push
mov
sbb
jnp
sbb
bound
xor
aad
cmpsb
adc
jb
and
outsl
aaa
add
pop
cmp
out
lea
mov
fcompl
mov
cmpsl
rcll
ret
cmp
jae
adc
xorb
inc
jnp
out
mov
pop
add
fisttpll
xchg
sbb
inc
mov
sbb
lds
scas
mov
push
sti
stos
fcmovnbe
in
push
adc
push
mov
or
inc
test
mov
sub
adc
xchg
movsl
imul
das
dec
add
jns
mov
mov
les
jne
mov
and
into
jl
xor
ret
fdivl
imul
and
mov
push
xchg
jle
ja
test
leave
jecxz
imul
adc
js
cmpsb
shll
lea
aam
shlb
xchg
xchg
dec
dec
leave
pop
mov
add
cmpsl
sub
xchg
shr
add
cs
jbe
icebp
shlb
mov
push
mov
dec
fistps
cld
ljmp
lods
xchg
ss
out
ss
fs
sbb
sub
mov
add
sbb
sbb
jmp
xor
xchg
pop
xchg
fidivrs
sub
dec
clc
pop
sti
das
mov
movsl
cmp
jns
js
jecxz
mov
mov
xchg
subb
mov
ljmp
sub
pop
test
rorb
mov
lret
sbb
adc
jnp
rorl
insl
sbb
arpl
push
mov
mov
adcb
outsl
and
inc
aaa
push
aam
scas
cmc
inc
xlat
fcmovu
push
cmpl
subb
mov
mov
inc
scas
outsl
jge
xchg
mov
adc
inc
add
dec
shrb
mov
adc
repz
push
enter
push
cs
pop
sbb
mov
fstpt
adc
pop
jns
repz
push
push
xchg
das
xchg
hlt
aam
cs
or
mov
fdivp
outsl
xor
jne
and
scas
mov
stos
and
ds
stos
gs
xchg
mov
in
mov
lcall
loop
adc
test
push
das
ja
xlat
and
call
std
fmuls
mov
ljmp
aas
jae
pop
ja
cs
loopne
das
les
lret
les
ss
add
mov
mov
nop
call
clc
rcrb
in
mov
jecxz
jg
mov
xor
clc
or
mov
subb
push
sbb
outsb
enter
dec
pop
mov
mov
dec
sbb
inc
or
jp
sbb
into
hlt
or
adc
popl
cmp
arpl
outsb
movb
in
mov
mov
ret
daa
mov
cwtl
pop
add
pop
daa
insb
cld
frstor
lods
dec
arpl
sti
xor
jmp
clc
add
nop
syscall
push
sub
mov
daa
shld
out
lahf
lea
outsl
ja
ja
jns
mov
mov
adc
push
adc
nop
and
lods
rolb
or
in
call
sub
xchg
adcb
jge
or
mov
xor
push
xchg
scas
sub
mov
call
xor
xrelease
and
pop
out
and
cmp
stos
roll
cmp
xchg
mov
ffreep
add
outsb
pushf
push
shlb
fucomi
cli
gs
in
sub
xor
outsb
jbe
dec
std
movsb
sbb
mov
adc
out
cli
aaa
jmp
inc
push
mov
jle
sbb
out
out
xchg
sbb
pop
mov
loope
inc
adc
fsubs
xor
clc
scas
xchg
outsl
jle
test
and
inc
nop
adc
cmp
and
aam
sbb
xor
sbb
lcall
test
cli
add
xorl
ffree
int3
inc
movsl
mov
ss
imull
popf
divb
fistpl
mov
aam
mov
mov
aam
pop
dec
rcrl
lcall
pop
push
insl
dec
jp
xor
je
dec
mov
outsb
jbe
and
cmc
pop
jl
sub
add
push
pop
jecxz
cmp
bound
pop
pop
test
jmp
cmpsl
jno
inc
cld
das
jo
rcl
add
cli
mov
push
sub
push
or
inc
or
sbb
and
loope
mov
cmpsb
shr
push
pop
cmpsl
fdivrs
je
mov
dec
loop
ret
ljmp
jo
adc
leave
sbb
out
mov
mov
or
xchg
sbb
and
fcmove
ror
lcall
cltd
call
xchg
adc
bound
imulb
pop
lea
sbb
adc
jmp
clc
xchg
loop
or
mov
rol
test
inc
mov
dec
repnz
lods
outsl
lock
mov
xor
notb
loop
negb
jb
fnsave
outsb
cmp
inc
call
push
push
mov
sahf
fldcw
loope
lds
loopne
xchg
outsb
mov
cmp
add
in
movb
imul
add
cmp
movb
shll
popf
imul
ret
push
push
lahf
cs
xor
pop
mov
int3
inc
inc
dec
xchg
fsts
outsb
fisttpll
sub
test
push
out
ja
sub
outsb
jb
inc
stos
add
std
jge
sub
sbb
sub
mov
divps
int
jmp
sbb
scas
inc
test
out
mov
mov
lahf
inc
idiv
push
mov
xchg
div
cmc
add
jle
ja
inc
mov
push
fidivl
gs
test
ror
fsubs
mov
mov
mov
prefetch
or
cld
pop
mov
rcrb
adc
popf
mov
adc
ljmp
mov
fmuls
popf
outsl
outsl
in
mov
jno
iret
fldl
cmpsb
into
aas
int3
cmc
push
xorl
and
xor
adc
ss
movsb
gs
inc
out
sbb
lahf
in
mov
cmp
jmp
push
xchg
ret
inc
mov
jp
lock
sti
add
inc
ret
in
or
mov
mov
in
dec
sbb
mov
adcl
and
rclb
and
jp
push
sti
push
and
out
faddl
in
fistps
repz
rcll
loope
sub
inc
pushf
dec
loope
sbb
addl
enter
aas
cltd
xchg
std
inc
fbstp
movsb
sti
fisubs
adc
and
je
adc
push
enter
loop
insb
sub
xor
addb
dec
fwait
pop
xchg
adc
push
cmpsb
jmp
mov
add
addr16
leave
repnz
xchg
shrl
outsl
xor
xchg
arpl
add
or
jb
xor
ja
cmpl
push
movsb
ja
adc
arpl
dec
jle
lds
mov
repz
dec
jge
mov
imul
test
shlb
sbb
aad
rorl
push
sub
hlt
inc
inc
pop
push
add
in
rolb
fwait
adc
les
or
rol
das
jbe
adc
pop
inc
cli
sbb
pusha
mov
ret
xlat
xchg
ljmp
cmpsb
sbbb
fs
orl
push
data16
sub
ljmp
cwtl
mov
dec
cmp
fwait
int3
xchg
stos
adc
mov
sbb
decl
loope
daa
sbb
and
jno
out
mov
cmp
outsb
out
xchg
xor
in
dec
cmp
cmp
add
or
and
testb
jbe
push
or
add
enter
push
dec
mov
adc
addl
in
xchg
outsb
lods
sub
jno
repnz
sub
ds
or
sub
add
pop
pop
sub
or
mov
xor
push
negl
cmpsl
pop
popa
cmpsb
add
xchg
mov
mov
mov
lret
adc
pop
into
add
loopne
or
cmp
shll
add
mov
or
nop
xorl
cmp
insl
cli
iret
push
gs
jne
and
xchg
mov
aas
push
lock
fwait
mov
rorb
inc
pop
icebp
adc
fidivl
movsb
mov
inc
jge
xor
xor
pushf
push
cmpsb
cmp
cld
inc
push
aad
xchg
mov
int3
mov
sub
ds
pop
jns
sub
pop
loop
add
xor
daa
xor
aam
sbb
mov
push
mov
sbb
xchg
pop
test
cli
jbe
or
stos
mov
sub
mov
jns
push
xchg
xor
xchg
mov
mov
or
jbe
cmpsl
fcoml
sub
inc
sbb
lcall
testl
lahf
inc
outsl
cmp
mov
test
shlb
in
push
mov
cli
sbb
mov
jns
adc
es
inc
fbstp
mov
or
lcall
mov
mov
jecxz
mov
pop
pop
movsl
incb
add
or
sub
sti
shll
pop
xlat
mov
adc
fists
clc
fsts
push
pop
mov
arpl
out
or
outsl
xchg
out
js
hlt
rcll
mov
or
xchg
sti
out
dec
xor
xchg
in
cli
cmpsl
xor
mov
inc
orb
fwait
push
popa
ror
cmc
ret
arpl
aaa
mov
mov
push
push
ss
cmp
cltd
cmp
and
cmp
mov
scas
leave
xor
ret
dec
popa
pop
in
dec
clc
cmp
pop
adc
stos
outsl
push
dec
and
xchg
adc
loope
or
fwait
dec
and
or
mov
add
aad
fimull
lahf
popf
sbb
daa
xor
cmpsl
push
cs
ficoml
enter
fcoml
dec
aam
loop
xchg
clc
ret
adc
stos
lret
outsl
int3
mov
mov
es
dec
emms
lods
mov
jp
xchg
cmp
add
int3
arpl
xor
stos
add
mov
scas
mov
fcomp
outsb
or
jae
jno
arpl
sbb
sbb
dec
aad
cli
add
pop
mov
movsl
or
popa
pop
out
jecxz
fwait
add
lea
pop
xchg
loope
cld
repnz
mov
cmp
adc
insl
pop
rolb
andl
loop
std
addr16
testb
shrb
mov
cmp
cmp
pop
insl
mov
cmpsl
iret
fisttpll
sbb
fldt
dec
mov
fiadds
add
inc
xchg
and
mov
pop
push
mov
jmp
aad
por
xchg
cmpsl
test
inc
sbb
jle
sbb
cmc
stos
cmp
mov
roll
aam
and
pop
sub
lcall
lods
adc
adc
ljmp
fistpll
push
out
shrb
repz
add
push
pushf
jmp
jp
add
scas
mov
out
sahf
fstpt
pop
fsubrs
pop
or
xchg
outsb
mov
shl
jne
mov
cmp
pop
push
push
cmpsl
mov
lock
lret
mov
pop
sub
mov
es
dec
in
out
xor
xorl
repz
mov
mov
mov
cmp
into
lods
jbe
and
or
jp
push
push
das
xor
xor
popf
lea
pop
pop
mov
jl
dec
daa
xor
cltd
call
lret
add
push
lea
inc
ljmp
fimuls
mov
ret
or
lahf
mov
jge
jg
jbe
insl
and
lods
cmp
test
std
ljmp
ljmp
mov
aad
inc
and
daa
mov
sub
faddl
test
dec
push
cs
cmc
jbe
xchg
xor
fiadds
sbb
rol
adc
loopne
dec
push
and
sbb
xor
call
sbb
mov
xchg
lahf
xor
es
shl
inc
les
testl
shrl
fisttpll
add
negl
jno
mov
outsb
inc
xor
push
cmpb
fsub
sbb
mov
btc
cmpb
js
xor
fists
jmp
inc
xchg
in
mov
push
push
xchg
dec
jp
jle
nop
dec
loope
or
sbbb
call
lret
lret
rcll
pop
jo
dec
add
fists
outsl
sub
adc
out
or
leave
je
fimuls
ds
inc
dec
sub
add
ret
int3
sbb
push
xchg
mov
int3
loop
sbb
sti
pop
scas
outsb
cmp
xchg
pop
adc
repz
push
jge
loop
adc
pusha
pop
insl
cmc
ljmp
xlat
jb
imul
and
js
or
push
imul
cmp
lock
loopne
andb
push
insl
adc
mov
das
inc
lea
push
sti
mov
push
jne
fnsave
call
mov
sub
sbb
repnz
lea
out
lods
mov
cs
into
inc
in
jne
aam
ret
sub
scas
mov
test
inc
insl
push
mov
adc
dec
dec
or
push
cs
dec
sub
out
sub
sbb
jo
and
or
sub
js
jge
push
and
pop
or
pop
cld
jge
popf
leave
mov
push
stos
insl
dec
cmp
rcr
or
dec
neg
dec
aaa
ds
mov
or
stos
inc
call
adc
clc
inc
test
pop
lock
push
push
cmp
mov
mov
lahf
cmp
imull
in
js
or
add
sahf
and
mov
fwait
pop
popl
dec
xor
cmpsb
decl
fildl
lods
jl
sub
lahf
mov
mov
gs
xchg
add
stc
insl
scas
adc
sti
and
imul
mov
pusha
adc
into
jl
pop
gs
and
jl
in
idivb
mov
dec
push
outsl
mov
or
decl
mov
sbb
testb
ljmp
arpl
stc
mov
sbb
sub
jmp
roll
and
arpl
hlt
push
adcb
mov
or
jno
or
das
jbe
add
dec
sbb
or
add
inc
adc
mov
add
ds
push
call
mov
inc
add
in
daa
adcb
cmp
mov
popa
xor
dec
jno
sbb
clc
dec
adc
call
loopne
cmpsl
cltd
jbe
xor
jns
data16
adc
mov
iret
call
sti
insl
call
imul
mov
inc
add
lock
call
orb
and
out
push
push
xor
lock
aad
aas
and
and
outsl
pop
adcb
dec
xor
jbe
addr16
dec
push
movsb
int3
mov
mov
mov
sbb
jmp
cwtl
jnp
fistpl
jo
in
push
and
out
inc
outsl
cmc
fwait
inc
hlt
call
inc
xor
xor
jb
jecxz
dec
pop
call
rcr
addb
mov
sti
mov
xor
sbb
jmp
push
pop
inc
push
data16
mov
push
scas
sbb
ja
add
pop
jg
movsl
sub
cmp
adc
outsl
out
lret
or
mov
dec
imul
fisttpll
fucom
jne
inc
xchg
call
cltd
movsb
dec
leave
das
push
push
fstsw
popf
inc
mov
lahf
pop
mov
xorl
ss
aaa
imul
cmp
lock
cld
push
int
xor
fs
ss
daa
std
aas
cmp
pushf
loopne
lcall
es
dec
push
jb
cmp
clc
ficomps
jmp
loopne
and
dec
push
fsubr
or
fcompl
lret
in
mov
insl
sarb
push
in
cwtl
aam
imul
pop
mov
mov
push
arpl
fmuls
loopne
xchg
pop
jmp
clc
gs
pop
stc
inc
xor
in
movl
jbe
jno
add
popa
push
mov
dec
out
arpl
iret
push
ficoms
loope
push
push
push
jno
xchg
and
bound
push
popa
inc
shrl
cmp
jno
fs
shr
sbb
test
addr16
nop
or
jge
inc
addr16
mov
pop
sbb
bound
dec
outsl
insl
shrb
imul
mov
adc
push
jmp
shlb
xchg
popa
push
xor
jb
xchg
mov
outsb
cld
sbb
sub
jne
icebp
lods
sti
das
cld
xchg
enter
inc
dec
sub
fists
roll
sub
jbe
fstps
sbb
mov
fldl2t
jb
mov
rcll
xlat
push
insb
jmp
jo
addr16
push
mov
sub
lds
fwait
xlat
mov
ss
xchg
adc
adc
fs
dec
in
in
in
adc
dec
imul
cmp
jmp
push
mov
xchg
jne
dec
inc
push
outsl
push
xlat
jb
adc
movsl
jecxz
in
dec
fmull
push
shl
dec
push
scas
xlat
sbb
or
loopne
jg
outsb
inc
push
xor
fidivl
adc
jmp
in
pusha
imul
adc
push
cmp
jl
sub
dec
xor
testb
push
outsb
jbe
add
add
dec
xchg
dec
bound
imul
fsub
dec
push
inc
js
adc
notb
inc
imul
xor
sbb
arpl
call
call
mov
inc
sbb
cmc
dec
mov
call
test
je
neg
pop
push
mov
std
inc
add
push
add
mov
sbb
mov
dec
jb
mov
jg
fistpll
fildl
pop
adc
ss
sub
iret
sbb
adc
push
sbb
adc
orb
pop
or
pop
mov
icebp
dec
ret
dec
sub
sbb
jmp
or
cs
push
dec
or
xchg
cmp
push
mov
shr
sbb
push
add
add
lock
ds
and
cltd
dec
arpl
shlb
jmp
arpl
ss
loop
jae
aad
iret
sbb
ret
leave
ret
insb
mov
mov
insl
sub
add
mov
lods
roll
or
andl
dec
fdivs
rol
jo
ficoml
push
xor
mov
or
push
add
push
push
push
popa
clc
jmp
fdivl
shll
das
xor
dec
or
cmp
adc
mov
insl
xchg
je
sbb
mov
shlb
aaa
jno
inc
cmp
outsb
aad
js
and
jo
pop
sti
hlt
or
das
dec
shll
lret
rcl
mov
add
in
jge
ss
jo
or
push
imul
addl
dec
test
mov
push
jns
inc
rolw
dec
loope
shrb
sarl
mov
imul
adc
dec
or
call
cmc
push
push
fimuls
cmp
cli
add
adc
dec
ret
mov
dec
shl
addr16
mov
in
push
clc
xchg
call
mov
inc
int3
enter
xorl
in
inc
inc
adc
or
fdivs
adc
je
mov
pop
adc
sbb
and
arpl
std
adcl
or
or
ret
js
int3
mov
lea
hlt
adcl
xor
cmp
scas
xor
and
insl
inc
pushf
std
sbb
call
out
add
loope
jmp
outsl
add
stos
fs
xor
cld
pop
insb
jmp
leave
dec
movsb
add
push
mov
jmp
outsl
fxch
lret
mov
pop
lcall
clc
sarl
xlat
fucomip
add
pushl
aam
jmp
mov
push
test
jge
js
xchg
lahf
or
pop
sub
and
fsubl
fs
mov
mov
mov
ja
dec
mov
xor
jg
fucomp
inc
ja
sarl
lods
fdivl
stos
adc
inc
in
add
lods
push
and
int
nop
loope
xor
in
dec
jbe
xor
cld
enter
push
sbb
push
outsl
sub
jbe
test
movsl
adc
xor
cmp
sbb
inc
dec
pop
mov
or
clc
add
out
push
jns
xor
jecxz
fwait
lods
pop
loopne
pop
dec
cmp
fimuls
daa
imul
imul
sbb
loopne
pop
sub
jp
jo
adc
or
fiaddl
cmc
call
fisubs
je
push
call
mov
je
dec
dec
idiv
icebp
xchg
test
sub
add
bound
inc
sub
pop
jmp
sbb
xor
pop
mov
dec
jno
call
mov
cli
add
jmp
inc
mov
popf
inc
jmp
in
movsb
mov
pop
inc
mov
ja
and
cmp
popf
push
push
out
je
cmp
int
cli
jge
push
pop
call
jae
sub
mov
jno
clc
dec
jne
add
push
xor
jbe
push
jmp
jno
ss
xchg
sbb
mov
das
jo
sahf
add
sarl
ljmp
jae
fidivs
sub
je
js
pop
push
or
sbb
in
jno
lods
and
aaa
xor
pop
jle
jmp
jbe
arpl
stos
cli
cwtl
add
pop
xchg
or
mov
fimuls
push
outsb
xor
mov
punpcklqdq
lods
jbe
cmp
nop
and
xor
mov
jbe
call
mov
jbe
add
into
jmp
je
aad
push
int
jae
mov
xchg
aaa
inc
jo
dec
inc
sub
cmp
pop
or
movsb
mov
sub
jbe
jg
into
dec
clc
inc
dec
dec
fistl
push
ss
arpl
inc
pop
jmp
insl
cld
add
inc
sbb
inc
cmc
dec
std
cmpsb
outsl
cmc
aaa
shlb
or
push
add
push
jno
sarb
hlt
leave
sub
jg
dec
pop
fadds
pop
dec
push
sub
inc
push
and
shll
sbb
fldcw
sub
jmp
arpl
add
in
push
pop
js
add
xchg
test
dec
jbe
or
out
call
sbb
mov
push
pop
add
enter
out
push
sub
push
dec
ret
mov
fiadds
shr
pushf
fsubs
insb
mov
aam
dec
xor
mov
out
mov
dec
das
movl
sub
push
mov
js
and
add
sub
inc
and
aad
sbb
mov
test
adc
sti
push
dec
sbbb
jmp
in
sbb
pop
fiadds
push
xor
adc
cmpsl
or
lea
clc
test
imul
mov
sub
push
loop
jmp
sbb
inc
jmp
ret
das
js
xchg
add
cmp
xor
jne
mov
dec
adc
dec
jae
xor
dec
fiadds
fs
out
mov
xor
push
fs
jg
push
mov
sub
inc
mov
out
lea
add
cld
mov
sbb
das
dec
mov
jmp
mov
add
not
sub
scas
sbb
incl
inc
mov
test
or
add
dec
sub
add
mov
cwtl
adc
sub
sahf
lods
ret
push
sti
enter
ret
sub
cmp
not
inc
dec
dec
sub
cmp
add
adc
cmpsb
add
addl
inc
jbe
loope
clc
push
xchg
jbe
inc
push
push
pop
sbb
pop
jl,pn
jb
push
popa
push
pop
call
inc
lds
pop
sahf
push
es
jbe
repz
jecxz
sub
stos
lock
adc
fidivrs
or
rolb
adc
outsb
mov
xchg
out
adc
mov
dec
rolb
pusha
fbstp
adc
adc
jmp
or
scas
js
or
fs
ja
lea
mov
or
ja
hlt
adc
pop
fs
mov
jg
nop
or
or
cs
popa
enter
or
aaa
and
cs
fs
cld
cmc
mov
pop
subl
sub
pop
call
push
mov
call
push
mov
cmp
in
ficomps
icebp
jb
push
dec
push
cmp
and
imul
xor
jb
mov
mov
mov
cmpsb
ss
insb
inc
push
decl
in
ja
push
sub
shl
push
add
cs
ljmp
sub
sub
bound
xor
inc
mov
je
push
dec
jo
insb
push
cmp
sti
repz
icebp
jo
popa
push
daa
clc
faddl
hlt
cmp
sahf
pop
jle
int
add
push
cmp
pop
decl
inc
push
cmp
jno
dec
js
xor
iret
mov
sub
inc
dec
stos
and
lock
mov
inc
jmp
adc
mov
adc
inc
xor
ret
inc
orl
stos
jmp
add
bound
outsb
sub
sbb
rorb
and
lods
in
xor
mov
push
sbb
sbb
inc
cwtl
pop
push
push
fcmovnbe
pop
dec
imul
push
pop
rorl
sbb
in
enter
fcmovnb
cwtl
push
pop
arpl
and
dec
dec
push
outsb
xor
dec
lock
dec
mov
gs
jno
lea
mov
sbb
add
inc
push
les
inc
inc
pop
test
das
and
cmp
cmp
fsubrs
push
mov
and
jmp
pusha
lahf
out
add
push
daa
popa
lcall
lahf
jge
jo
ret
and
cwtl
mov
shrb
and
inc
nop
sbb
add
call
push
inc
add
adc
mov
and
push
jmp
add
gs
xor
fs
insb
add
mov
add
push
add
dec
add
in
in
mov
and
add
add
mov
in
fstp
outsl
add
xor
js
and
inc
and
adc
fnsave
dec
push
add
dec
mov
aas
add
adc
mov
scas
or
sub
addr16
cmp
in
fcmovu
inc
and
add
pop
notb
inc
inc
dec
sub
cmp
notb
and
inc
jg
lcall
pop
xchg
cmp
fcmovnu
add
outsb
add
adc
and
bound
dec
lret
mov
mov
sbb
pop
push
dec
inc
jns
sub
push
insl
popa
push
inc
dec
dec
pop
jb
fidivs
mov
pop
imul
movsl
push
add
pop
imul
loopne
xchg
add
aaa
xlat
xchg
aad
add
insl
push
jbe
arpl
add
inc
lea
mov
and
sub
mov
lcall
pop
lret
xchg
imul
imul
imul
xor
jae
jecxz
sub
xor
add
out
dec
adc
fs
cmp
fstps
sbb
in
push
push
fsts
clc
jae
lods
mov
add
add
pop
xor
sub
and
or
imul
repnz
lods
mov
push
lcall
imul
mov
inc
adc
xor
push
adc
dec
dec
xor
xor
add
jp
mov
lods
adc
imull
pop
or
jno
xchg
push
out
jmp
inc
aam
subb
mov
mov
cmp
fistps
inc
fs
sub
cmp
xchg
xchg
adc
or
mov
xchg
mov
shll
retw
sti
inc
cmp
sub
and
mov
aaa
loop
adc
push
inc
mov
sbb
decl
adc
sbb
fisttpll
jnp
xchg
or
dec
adc
pop
dec
xchg
pop
inc
mov
shll
pop
aam
hlt
xlat
push
daa
fnop
inc
outsb
loopne
jle
inc
stos
lock
sub
shlb
sbb
push
pop
jne
and
add
pop
push
cmp
cmc
add
aad
sti
in
outsb
sub
push
or
xor
or
sub
fnsave
mov
xchg
xlat
les
insl
or
mov
ret
faddl
dec
cld
mov
mov
out
sbb
sahf
shlb
add
mov
xchg
or
out
pop
mov
push
xor
cmp
mov
cmpsw
mov
mov
mov
adc
xor
in
add
rcrl
icebp
push
fnsave
pop
sarb
add
scas
cwtl
adc
xchg
inc
scas
xchg
dec
sbb
cmc
inc
mov
ljmp
sub
fadds
jp
xor
push
aaa
add
lahf
repnz
adc
call
rclb
icebp
xor
mov
jg
imul
xchg
mov
out
xchg
aaa
or
jg
aam
jmp
cli
mov
adc
inc
inc
lds
fildll
xor
adc
daa
pushf
pop
cs
ja
call
sub
nop
mov
mov
add
adc
outsl
inc
mov
incl
or
orb
adc
cli
call
xchg
xor
iret
lds
or
or
xor
mov
push
je
inc
xor
xchg
test
cmc
shlb
push
bsr
bound
jae
repnz
inc
pop
mov
into
ret
jg
fnstenv
imul
jecxz
and
loope
or
sbb
ja
cmp
xor
mov
add
inc
jl
sbb
cld
jle
frstor
int3
inc
rsqrtps
dec
aad
dec
inc
jmp
arpl
and
xor
inc
rcr
out
sti
jge
cmc
or
shl
dec
add
push
and
xchg
mov
xchg
repnz
or
test
xor
mov
add
jno
scas
stc
mov
xchg
outsb
sbb
popa
xchg
sbb
jg
mov
jle
lock
mov
int
test
fcom
push
add
inc
cmp
incb
xchg
add
mov
leave
cmp
xchg
jg
xlat
hlt
cmp
movsb
jle
mov
xor
cmp
movsl
or
rcrl
mov
lahf
das
add
push
jns
arpl
loop
push
lret
and
dec
sbb
repz
pop
inc
stc
jmp
or
lret
xor
sarl
xchg
sub
ds
push
sub
hlt
pop
xchg
imul
xchg
icebp
fists
sbb
or
add
sbbb
jmp
jecxz
je
jnp
sahf
shl
push
jmp
movsb
pop
jo
mov
sbb
jle
xchg
sbb
arpl
dec
sub
das
jg
in
ret
fbstp
mov
xchg
push
cmp
leave
lret
and
or
ret
adc
lock
pop
out
push
or
xchg
test
add
lret
out
outsl
sbb
shrb
out
ss
adc
fildl
sub
dec
add
aas
push
fmul
decl
dec
xchg
sahf
mov
sti
lea
dec
xchg
or
dec
mov
xor
jbe
dec
sub
mov
lahf
inc
outsb
cmp
sub
cmp
insl
add
insl
addr16
or
sub
sbb
xchg
shll
fldl
mov
mov
inc
aad
sub
sub
movsl
sti
push
outsl
insb
insb
outsl
cld
sub
adc
inc
test
mov
lea
mov
push
std
mov
xchg
and
push
inc
and
lock
inc
inc
dec
inc
xor
test
mov
movl
jmp
cmp
repz
fs
xchg
enter
pop
stos
jmp
dec
jp
je
negl
adc
xor
mov
fisttps
hlt
lock
cltd
test
ljmp
xchg
xor
leave
sbb
mov
out
or
inc
sbb
roll
add
das
inc
jp
xchg
xchg
cmc
or
out
repz
test
jecxz
push
pop
loop
mov
mov
je
rclb
inc
adc
ficompl
ja
sarl
push
pop
shr
sub
in
movsb
lods
mov
mov
stc
push
pop
aam
sub
fldenv
mov
adcb
imul
pop
test
inc
pusha
popf
ds
outsl
jl
pusha
loop
pop
repz
cmp
insl
cmp
shl
test
jne
sbb
dec
mov
mov
dec
add
push
lcall
mov
arpl
sub
lcall
xor
xchg
mov
ss
or
mov
push
mov
mov
imul
add
stos
jg
jp
push
dec
and
lret
aam
iret
out
lock
repnz
inc
push
ret
adc
mov
push
pop
push
aas
into
push
loope
lods
mov
repnz
jnp
jb
rcrl
sbb
pop
xchg
lds
cmovle
imul
sahf
out
fisttpl
lea
sbb
cmpsb
test
inc
mov
ljmp
mov
cli
sub
cmpsl
xchg
or
or
popa
push
clc
fwait
jecxz
clc
push
push
push
aam
fldt
cmp
add
push
rorl
ror
rcrl
movsl
and
out
jo
jecxz
inc
and
xchg
add
lcall
test
clc
jo
jmp
lret
popa
adc
nop
loope
mov
pop
lods
movsl
sbb
mov
push
add
ja
mov
jl
adcl
bound
fcoml
das
sar
fldt
das
pop
pop
jmp
mov
in
sub
push
push
push
icebp
push
jle
outsl
andb
push
mov
lds
mov
daa
and
sub
jecxz
sbb
mov
sbb
xchg
jp
ds
in
paddb
loop
cmp
movsb
sub
hlt
daa
cmp
out
jmp
jp
inc
sub
sti
aas
and
lahf
lahf
stc
out
test
sbb
push
cwtl
xchg
notl
jne
daa
adc
or
mov
in
sahf
addb
add
mov
fsubl
repz
pop
pop
jo
xor
sub
in
add
addr16
inc
scas
mov
or
lods
inc
mov
test
mov
fs
addl
popf
movb
push
sub
jle
push
pop
push
daa
dec
sub
add
mov
aam
jecxz
xor
xchg
fucom
fsubr
push
jno
push
pop
sub
push
pop
adc
inc
addr16
in
dec
aaa
mov
scas
rcll
sahf
mov
mov
xor
add
ret
dec
xchg
mov
and
cmp
mov
daa
lods
enter
sbb
add
sub
outsb
jl
sbb
adc
popa
jecxz
int
xchg
push
mov
pop
movl
jae
ret
in
fstl
push
lock
sub
xor
mov
pop
jg
mov
mov
mov
inc
dec
add
inc
or
les
loopne
dec
cld
jbe
push
adc
and
or
and
mov
pop
push
mul
and
mov
pop
push
dec
inc
push
call
pop
sbb
pop
fdivr
lcall
jb
jle
daa
je
jbe
and
mov
fildl
ja
mov
pop
adc
push
cmp
repnz
loopew
in
or
out
xchg
mov
adc
int3
and
cmc
pop
xchg
lahf
je
xor
sbb
and
mov
and
jle
and
cmpsl
xchg
cmpsl
pop
mov
filds
mov
stc
push
jg
rcll
sbb
rorb
mov
or
mov
sbb
data16
xor
sub
and
and
test
and
std
ret
hlt
or
clc
adc
sbb
bound
adc
mov
lock
inc
mov
jg
test
callw
lcall
ja
ss
faddl
ret
lods
or
mov
mov
stos
push
add
stos
push
add
lea
or
aad
lret
lea
pop
out
mov
arpl
xchg
lds
loope
xor
movsl
test
imul
cli
idiv
pop
jo
icebp
mov
push
popa
jo
in
pop
repz
cmp
sub
cmpsl
je
xlat
jp
cwtl
ljmp
sbb
addb
pusha
nop
aaa
testb
cmp
mov
neg
sub
subl
dec
cmpsb
adc
nop
daa
aaa
mov
mov
adc
pop
push
popf
push
dec
leave
mov
mov
fwait
scas
or
add
std
mov
inc
jno
movsb
xchg
orb
mov
mov
je
ret
fistl
ficoml
adcl
stos
dec
pushf
idivb
adc
mov
cli
cmp
sub
pop
sar
test
into
outsb
notl
push
xor
xchg
imul
cmc
mov
xchg
fwait
jl
das
lret
or
inc
jecxz
cltd
and
sbb
and
inc
cld
pop
fstpl
popa
pop
and
aad
jnp
sub
push
pop
daa
xchg
notb
cmpsb
bound
inc
mov
fsts
adc
xchg
cld
pop
sti
and
inc
fstl
sub
or
test
mov
mov
xor
mov
add
add
jmp
sbb
push
mov
out
mov
mov
xor
sahf
inc
movsl
lods
adc
dec
stos
sub
and
mov
out
call
inc
jmp
inc
dec
jnp
jb
push
add
cli
outsl
frstor
pcmpgtb
or
xchg
sti
mov
lods
test
and
or
cmp
cs
ja
gs
negl
icebp
hlt
mov
add
cmp
pop
xchg
ljmp
and
nop
and
mov
pop
mov
mov
mov
cs
lea
mulb
in
mov
mov
mov
sub
dec
cmp
mov
pop
dec
pushf
or
push
into
and
cmp
shrl
jge
sarl
jl
and
xchg
mov
or
mulb
xor
mov
mov
scas
or
cmp
lods
fldl
stos
jbe
adc
xor
loope
loop
and
pusha
mov
or
push
movsb
mov
call
adc
mov
pop
mov
outsl
push
rolb
sbb
mov
lret
adc
jae
add
or
test
outsb
sbb
shll
fsubs
sub
jg,pn
lret
lahf
out
pop
add
adc
test
dec
dec
rcrl
lock
inc
pop
sbb
repnz
hlt
lret
jmp
fidivrl
imul
neg
sub
std
or
js
hlt
ljmp
xchg
cmp
sbb
test
daa
xchg
shrl
addr16
sbb
inc
aaa
in
test
add
or
mov
pop
adc
iret
mov
jecxz
outsb
arpl
sbb
inc
and
dec
mov
popf
out
loopne
xchg
cmp
out
lcall
jbe
or
sbb
not
adc
push
and
jmp
lahf
adc
adc
sar
pop
lcall
mov
lret
das
jp
xchg
stc
rolb
push
add
scas
test
sbb
dec
cs
cmp
stos
loopne
mov
adc
mov
cli
popa
sbb
psubsb
popa
fimull
adc
cmc
inc
stos
pop
jb
test
adc
sarl
inc
add
jno
mov
iret
enter
lods
mov
adc
xchg
loope
loope
outsb
cmp
fmuls
lea
fidivrl
outsb
mov
addb
sbb
inc
repnz
push
outsb
pop
ja
mov
inc
in
leave
push
mov
dec
sub
xor
sub
jecxz
mov
sbb
sbb
and
out
outsb
fstpl
sbbl
stc
cmc
pop
xchg
pop
insb
sbb
adc
and
mov
cli
push
in
mov
cmp
or
mov
pusha
sahf
icebp
dec
jg
mov
dec
xchg
fdivrs
and
loope
xor
js
ret
aas
mov
jle
dec
push
jp
and
xchg
outsb
pop
add
jge
mov
push
out
in
push
adc
jp
insl
fildl
xor
pop
cmp
add
sbb
movsl
push
mov
sbb
cmp
ja
hlt
jecxz
jb
test
mov
inc
addr16
es
rcl
jmp
push
pop
inc
repz
add
mov
or
push
jle
push
jo
fnstcw
push
scas
scas
fwait
imul
mov
adc
xchg
push
xor
mov
sbbb
je
xlat
insb
xchg
sub
jbe
je
rolb
arpl
cmpsl
ds
lahf
dec
iret
push
repz
aam
das
jg
ret
std
in
dec
fmuls
mov
pop
add
test
xor
iret
popa
iret
or
push
js
push
mov
add
lret
je
ss
outsb
sbb
sbb
add
ret
dec
adc
fstl
push
ss
or
idivl
insl
adc
aas
jbe
mov
fs
xor
sbb
cmc
in
dec
cmp
inc
cmpsb
pop
fwait
pusha
push
addr16
or
pop
shr
adc
add
jno
mov
gs
add
shll
std
xor
and
dec
adc
sub
jg
jae
cli
xor
mov
jns
inc
and
sub
lea
sbb
cmp
jp
enter
sbb
jnp
in
dec
jg
inc
xor
scas
lods
jno
inc
std
pop
in
adc
xlat
ret
in
cmp
pop
jno
pop
adc
push
mov
jle
aas
sbb
lods
pop
xchg
and
call
push
outsb
movb
pop
clc
loop
testl
pop
cmpsl
sub
push
mov
nop
pop
adc
jns
add
mov
jle
inc
aaa
lock
add
mov
cs
out
lret
inc
lea
imul
adc
aam
rorl
cmp
add
clc
testb
out
xor
aaa
dec
add
pop
cwtl
pop
das
xchg
insl
add
repz
fdivrl
js
orl
orl
inc
loop
sub
jno
inc
shrb
push
xchg
lods
addr16
pop
or
ficompl
popf
test
push
cmpsl
das
adc
mov
imul
mov
out
dec
push
push
jmp
rol
push
push
fwait
test
pushf
push
andb
xor
insl
cmp
mov
nop
enter
sbbl
es
mov
fsub
add
sub
and
jbe
lock
push
jmp
xchg
cltd
and
xor
jbe
jl
call
aam
aad
pop
mov
repz
ljmp
movsb
jp
fidivrl
add
nop
and
xchg
and
aad
push
adc
out
hlt
and
les
test
imul
cmp
sti
jmp
test
inc
ud2
insb
ja
in
xchg
fnstcw
enter
lret
jnp,pt
or
mov
push
fldl
sbb
dec
aam
leave
cmp
mov
cmp
je
pop
lahf
mov
xlat
sbb
cs
pushf
hlt
or
add
mov
das
pop
std
sub
fwait
js
and
inc
pop
cmovs
or
jbe
pop
xor
jnp
fstpt
sbb
lods
rcll
push
pop
or
jbe
push
and
mov
xchg
arpl
mov
push
fbstp
xor
cmc
mov
data16
std
mov
ret
lcall
xchg
push
lods
jl
xchg
imul
ljmp
cmpb
or
mov
inc
ja
popf
add
js
mov
mov
inc
je
idivl
mov
repz
add
fisttpl
sub
jb
nop
stc
mov
cmpsb
imul
repz
lods
in
jle
jo
test
ret
lock
rcrb
daa
jbe
mov
mov
pop
ss
cli
mov
jno
sbb
jb
xlat
mov
test
fnstsw
ja
xchg
xor
sbb
mov
loopne
mov
sbb
mov
inc
cmp
inc
ds
jns,pn
add
push
icebp
int
hlt
nop
xchg
mov
ret
push
xchg
adc
dec
jg
xchg
sar
adc
push
cld
or
and
sub
dec
jge
rolb
mov
inc
cwtl
cmp
je
insl
loope
fwait
dec
test
mov
into
mov
outsl
std
scas
and
sub
and
push
in
adc
xchg
in
lret
iret
fsubl
sbb
jae
jl
mov
add
lcall
pop
fistl
ret
int
xor
cmpsl
jmp
sub
std
push
cmp
or
push
add
into
cmc
nop
cs
mov
lods
rcr
out
push
arpl
push
movsl
fnstsw
dec
jg
push
out
mov
out
add
cmpsl
mov
movl
ficoml
pop
outsb
hlt
add
add
jmp
rol
push
fdivr
mov
mov
pop
test
jnp
cltd
mov
inc
mov
rcr
add
cmp
lret
add
cmp
fisttps
rol
mov
xchg
sub
stos
lahf
movsl
in
lods
jo
lods
in
sbb
push
outsl
adc
and
mov
jecxz
or
insb
or
jg
aad
ds
cld
ret
and
clc
push
mov
xor
and
clc
mov
lock
lcall
aam
xor
dec
gs
jnp
dec
cmp
inc
test
xor
popf
or
mov
int
xor
mov
xchg
push
call
aam
sub
adc
out
inc
incl
push
fadd
stos
pop
lock
adc
mov
push
lret
fldcw
or
rorb
inc
pop
imul
jmp
cmp
xor
les
out
mov
mov
mov
pushf
ds
mov
stos
xchg
nop
mov
mov
or
orl
in
pusha
adc
aam
pop
dec
dec
xorl
in
push
sti
jne
add
lods
ret
push
lods
aaa
jo
sub
cmp
pop
rolb
addr16
and
pop
add
lret
add
add
sar
outsb
cs
cmp
mov
pop
mov
sar
stc
fcomip
sti
xchg
mov
dec
cmp
sti
cs
inc
aam
push
jle
mov
or
mov
xlat
loop
jmp
jmp
scas
add
sub
std
sub
enter
loope
xchg
mov
int
sub
mov
xchg
adc
inc
pop
es
mov
loopne
push
add
popa
fsubs
xor
dec
add
aaa
lret
js
clc
clc
insl
fisubrs
stos
mov
sti
jmp
or
fbld
pop
cs
xchg
add
cmpb
xchg
or
sub
add
lock
sub
cli
je
mov
adc
inc
push
outsl
nop
push
jp
sbb
insl
adc
insl
add
cmp
es
jg
add
push
sbb
dec
nop
or
stos
fisubrs
pop
divl
daa
pop
inc
les
je
jne
cmp
repnz
stos
or
movsl
or
xchg
adc
xor
movl
add
ja
sub
ds
notl
adc
xor
or
outsl
mov
aas
adc
shrl
jp
mov
stos
add
test
pop
dec
pop
aam
out
sbb
enter
adc
jle
and
push
sub
adc
scas
out
mov
cld
lock
enter
inc
int3
fnsave
xchg
cmp
mov
push
ret
sub
pushf
dec
mov
in
lret
lods
cmp
and
sbb
push
cltd
inc
push
jne
lret
lds
call
es
fucomip
js
call
pslld
lcall
loope
or
into
dec
test
in
iret
repz
or
icebp
sub
imul
dec
mov
jo
mov
decl
cltd
cs
arpl
inc
loopne
ljmp
sbb
pop
push
decl
daa
shll
pop
test
sub
mov
xchg
lock
loope
inc
push
xchg
lock
rcl
shlb
iret
stos
xor
ljmp
cli
mov
jle
mov
mov
jp
sarb
or
inc
sbb
lods
pop
inc
lds
dec
in
sahf
push
add
decl
jne
fisttpll
cmc
inc
lret
repnz
aas
imul
pushf
and
cs
scas
cs
dec
lods
jle
xlat
and
sbb
js
ret
dec
dec
xor
jae
lds
or
jl
fwait
and
vpsubw
shlb
mov
mov
ja
dec
cmp
jb
incb
icebp
pop
loope
lock
mov
clc
decl
enter
and
iret
adc
mov
fcomi
popf
cmp
call
jg
rorl
or
or
and
neg
xchg
mov
or
subl
roll
xor
xlat
dec
test
sub
xor
xchg
mov
ret
jg
cmp
sub
rcr
mov
iret
fxtract
and
cmc
mov
adc
test
icebp
ds
lds
inc
ja
mov
out
add
test
clc
incl
stc
jge
inc
and
xchg
xchg
imul
jp
sbb
call
lret
jmp
into
xor
repz
repz
movsl
test
movsl
sbbb
fwait
into
mov
pop
mov
and
loop
fisubl
popa
xor
mov
inc
xor
pop
sahf
rol
mov
jmp
in
shrl
out
cltd
movsb
pop
outsl
or
ret
rolb
imul
push
sbb
stos
es
lahf
add
popf
xor
xor
fistps
outsb
clc
aam
cmc
push
sbb
jo
push
fwait
lds
or
cmpsl
inc
test
call
test
sub
sbb
icebp
pusha
xchg
add
push
leave
in
push
and
sar
xchg
outsl
enter
add
cmp
push
test
push
aad
dec
mov
cmpsb
jp
cwtl
sbbl
inc
jbe
pop
jl
adc
xchg
add
sbb
ljmp
movsb
mov
insl
ret
jbe
and
ret
enter
ja
xor
data16
pop
int
push
jae
outsl
enter
and
not
sbb
cli
push
fbld
hlt
pop
sbb
clc
sbb
cltd
pop
adc
push
movb
fwait
push
fnstenv
mov
loopne
xor
sbb
mov
mov
mov
dec
cltd
loop
movsb
sbb
and
jge
punpcklwd
sub
leave
adc
or
cmp
cmp
cmpsb
adc
mov
subl
lock
rolb
add
sub
xchg
out
add
xchg
sbb
int
sbb
add
shr
hlt
push
jae
jnp
fwait
mov
jo
outsb
push
xor
pop
xchg
inc
inc
xorl
fsubl
jmp
inc
pop
stos
or
lret
leave
jo
xor
jecxz
dec
push
pop
mov
fdivl
sbb
sbb
lcall
mov
pop
pop
sub
mov
fnstsw
divl
out
mov
jnp
inc
adc
cmp
push
adc
pop
in
jo
jmp
xchg
and
mov
xor
mov
adc
sbb
adc
lahf
jae
fwait
lods
lahf
addl
fcomps
jle
fwait
push
cmc
xchg
dec
rcrl
js
popa
and
push
lcall
ret
aaa
xchg
dec
and
rcr
xchg
pop
push
jmp
loope
je
out
and
mov
or
cld
rorl
jb
and
test
push
shll
add
cli
dec
out
outsl
dec
dec
jl
inc
adc
aas
insb
clc
push
loope
add
mov
clc
scas
sub
mov
mov
ficoml
jge
push
xor
mov
pop
int
lea
sub
lahf
sub
lcall
cmp
mov
aaa
xorb
aad
das
data16
call
bound
adc
loope
fiaddl
jo
in
mov
sti
cltd
and
out
sbb
into
std
stos
lret
ret
inc
call
adc
popa
das
jecxz
daa
insb
loop
rcll
push
aam
dec
mov
scas
push
lret
inc
into
in
ljmp
je
out
add
data16
add
mov
lea
pmullw
add
out
add
push
mov
jo
clc
cmpsl
mov
out
loopne
or
in
mov
pop
or
jae
adc
sti
jbe
pushf
xchg
cli
dec
repz
loope
cmp
jb
inc
mov
dec
push
xchg
cmpb
push
adc
js
out
out
inc
sbb
je
mov
xchg
gs
sbb
xor
sbb
add
insl
loop
mov
fidivrl
add
in
dec
lds
sbb
aad
and
pop
pop
dec
adc
das
mov
xchg
dec
orb
mov
inc
lea
cmp
mov
ret
lods
pop
xchg
jmp
test
fadds
lret
sbb
addr16
dec
in
mov
mov
fidivrl
pop
fcmovbe
jl
mov
js
out
pop
shl
push
rolb
mov
outsl
fiadds
jge
mov
jg
fisttps
dec
js
rcl
cltd
addb
cmpsl
sti
jl
scas
clc
mul
push
pushf
imul
mov
sti
repnz
pop
add
pop
outsb
scas
test
sbb
sti
mov
lea
outsl
insl
xor
arpl
jle
inc
sbb
sub
cmpsl
add
inc
mov
pop
cld
adc
fdivs
test
insb
cmp
jnp
sahf
push
lret
sub
adc
dec
insl
mov
sti
out
pop
mov
mov
and
xchg
push
cmc
mov
xchg
push
and
adc
icebp
test
sbb
dec
adc
mov
cmp
and
pop
test
nop
mov
jns
jmp
push
adc
popa
data16
xchg
mov
sub
cwtl
adc
in
inc
cmpsl
aad
pushf
and
lods
mov
dec
test
cmp
add
int
shll
outsb
lods
xlat
pop
sub
cmpsb
out
and
mov
movl
or
mov
dec
sub
aad
sahf
cmp
inc
xor
sbb
movsb
dec
inc
repz
movsb
pop
sub
lea
scas
add
adc
cmpsb
add
jne
je
sbb
test
movsl
jecxz
fnsave
sub
ja
ret
cli
pop
subb
stos
mov
add
jge
adc
xor
mov
pop
xchg
jle
or
imul
call
push
rclb
sbbl
inc
mov
int
aad
and
rclb
lahf
stc
lret
xchg
xchg
jns
mov
ret
lods
mov
push
lahf
push
scas
sub
stos
cli
push
add
rol
jge
mov
lods
dec
sub
mov
in
mov
mov
and
nop
out
sbb
mov
mov
out
lds
adc
cmp
dec
jb
push
xchg
mov
rcr
repnz
and
adc
push
hlt
imul
loop
xchg
jbe
jo
and
push
push
mov
cmpsl
out
add
mov
pop
jmp
or
gs
lock
and
out
mov
shrl
xlat
jns
mov
push
jae
mov
ficompl
jecxz
dec
fdiv
cmp
xchg
mov
add
movsl
frstor
pop
iret
sub
inc
inc
scas
add
cmpsb
fldl
xor
or
cmc
jg
jo
cli
push
or
and
add
popa
loopne
rcrb
insl
pushf
ds
jl
jnp
aam
sbb
fistpll
out
jp
jb
subb
das
ror
icebp
popf
xchg
outsl
popa
xchg
cmp
dec
pop
sbb
xchg
lcall
mov
ret
jecxz
push
icebp
ja
pop
addr16
rclb
lea
push
imul
insl
xor
dec
push
sbb
or
push
cltd
mov
mov
push
lds
mov
inc
ljmp
fldenv
movsb
enter
cmp
xchg
and
js
ds
out
pop
clc
roll
or
lret
push
pusha
decb
imul
add
push
cltd
cmc
mov
inc
sub
nop
ret
shlb
cmp
jmp
pusha
test
sub
dec
lock
xchg
inc
xchg
sbb
inc
into
ljmp
aaa
mov
jne
sub
leave
jl
int
pop
insb
stos
scas
movsb
cli
cmc
sub
adc
and
jg
jo
mov
rorl
xor
test
sbb
push
cmp
sbb
jge
and
js
mov
mov
jmp
mov
insb
cmp
popa
sti
shll
stos
jo
movsl
and
maxps
dec
fstl
dec
inc
test
inc
push
push
xor
or
lea
xchg
fsubl
jle
sbb
pusha
lds
adc
xchg
pop
push
cwtl
sbbb
popf
mov
mov
jge
pop
sub
jge
ss
cmpsb
add
lock
mov
das
inc
cwtl
call
mov
xchg
sub
push
call
mov
cvtps2pi
or
and
pop
ret
mov
imul
jb
or
adc
loop
sbb
lret
mov
mov
jp
in
icebp
and
mov
mov
insl
xchg
out
jnp
dec
mov
rorl
push
lcall
lahf
mov
xor
sub
stos
mov
push
push
adc
aas
sbb
out
sarl
sbb
push
out
xor
sbb
dec
mov
mov
inc
mov
mov
lds
inc
push
mov
push
dec
jge
test
add
daa
jae
aas
cmp
lea
add
jo
xlat
je
mov
loope
jno
or
sbb
sbb
mov
jmp
and
fisttpll
loopne
adc
test
fildl
test
dec
jae
mov
fs
mov
mov
jmp
loop
jl
jae
add
adc
sub
cld
adc
fldcw
push
mov
or
out
mov
sbb
aad
mov
mov
add
dec
adc
dec
cld
daa
test
iret
inc
and
cld
xlat
sub
add
icebp
leave
test
ret
dec
ja
push
test
lret
cmp
dec
fdivl
out
cmp
test
cli
bound
cmp
popf
xlat
pop
insb
jbe
jecxz
adc
into
and
les
mov
or
insb
shrl
icebp
sub
jl
incb
imul
das
leave
cmp
jo
and
addr16
pop
mov
push
xchg
xor
push
pop
sbb
jp
or
lods
sbb
aam
pop
sub
jbe
movb
stos
push
es
loopne
enter
mov
pop
daa
addr16
push
mov
fdivr
mov
or
xor
push
les
out
rorl
loope
sarl
fstl
sbb
icebp
pop
add
mov
leave
iret
in
cmpsb
mov
scas
rcrb
fs
pop
fldl
jge
icebp
mov
push
data16
pop
push
mov
jmp
cltd
mov
mov
xlat
add
inc
es
xchg
in
jbe
insb
stos
xchg
push
popf
mov
sbb
xlat
sub
inc
sbb
push
arpl
in
aaa
xorb
cmpsl
mov
pop
mov
cs
mov
xlat
or
addb
mov
testw
or
mov
mov
daa
mov
inc
mov
flds
mov
xadd
adc
or
xorb
sahf
inc
pop
es
mov
jle
and
aaa
outsl
xor
push
mov
inc
aad
popa
clc
fs
div
xchg
nop
fwait
int
sub
jmp
adc
into
push
popa
push
mov
repnz
mov
pushf
add
xchg
xchg
ds
push
sbb
mov
dec
xlat
jg
jne
mov
outsb
lock
dec
lcall
sti
mov
icebp
adc
sbb
test
ss
mov
bound
mov
fimuls
mov
mov
mov
fstpt
cwtl
int3
popa
aam
push
mov
mov
cmp
stos
imull
sub
and
mov
inc
std
push
movsb
insl
adc
xor
adc
clc
add
push
ja
jns
inc
or
loop
insb
mov
ja
cltd
aad
test
lcall
adc
mov
add
in
frstor
cmp
xorb
xor
add
sub
movsl
inc
lods
and
jbe
adc
ljmp
cltd
sub
push
fsubrp
jb
xor
or
mov
aas
xchg
pop
mov
add
inc
je
jg
mov
mov
pusha
or
outsb
ret
idiv
jp
lods
inc
fsubrl
in
and
cmpsl
or
scas
arpl
ja
lds
dec
clc
std
in
pop
out
fstpl
insb
daa
mov
sbb
mov
sbb
ss
xor
and
out
pop
push
mov
sbb
pop
adc
mov
cmp
int
stos
mov
iret
loop
incb
icebp
or
mov
jno
nop
clc
xor
addb
rolb
in
mov
clc
or
push
lcall
fnstenv
xchg
clc
in
push
xchg
sub
loope
clc
test
mov
mov
mov
fwait
adc
cli
xchg
adcb
das
jb
jge
stos
lahf
popa
shr
loop
cmp
out
sub
test
add
xor
clc
sti
ret
jae
int
cld
adc
mov
pop
shr
das
push
cmc
addr16
cmpb
lock
mov
test
out
idivl
call
adc
sahf
pop
subb
icebp
sub
xor
iret
nop
inc
cli
arpl
lods
jecxz
insb
push
cli
add
outsb
repnz
jae
addl
out
mov
out
push
push
addr16
ds
mov
push
shrl
xchg
xchg
aas
cmp
fisttps
xor
mov
jmp
xchg
cmp
cmp
jne
mov
push
mov
in
pop
or
test
out
pop
movsl
fiaddl
test
aas
mov
in
push
leave
sub
lods
lds
adc
aas
push
hlt
lcall
or
or
adc
sbb
adc
or
dec
jno
ja
jp
mov
dec
rcrb
dec
cltd
adc
adc
or
cmpsl
add
push
ljmp
push
iret
cmp
jb
out
xlat
cmp
add
adc
addr16
push
sbb
loop
loop
cmp
insb
jns
outsb
jge
test
daa
push
out
and
xlat
and
mov
idivl
adc
xchg
or
and
xor
xchg
mov
cli
inc
scas
cs
mov
pusha
push
andps
xorb
mov
rcll
lcall
roll
xor
xor
jle
sbb
and
mov
popf
mov
roll
sbb
sub
adc
hlt
adc
and
pop
out
cmp
mov
out
orl
ss
aaa
adc
xchg
fs
aad
jecxz
hlt
dec
pop
fsubrl
inc
pmulhw
xchg
dec
shll
cmp
and
andb
incl
xlat
mov
scas
mov
ljmp
xlat
shrb
dec
mov
add
adc
adc
jb
arpl
in
or
dec
and
fisubrl
in
rol
cld
loopne
scas
js
in
sahf
sub
leave
cmpsl
sahf
jb
push
inc
xor
xor
in
shll
xchg
call
mov
fldt
jg
rcrb
xchg
sbb
jbe
cmp
out
cmpsb
enter
mov
push
scas
add
mov
mov
pop
ja
and
mov
xchg
fwait
lea
outsb
std
push
cmc
mov
push
push
mov
pop
jle
xor
daa
push
stc
and
cmp
idivl
sbb
inc
pop
jecxz
in
xchg
jecxz
outsb
pop
lret
jbe
data16
ss
stos
add
ds
pop
out
jns
xor
cmp
or
scas
lret
mov
bnd
pop
lret
xchg
loopne
jo
gs
add
lods
popf
and
je
ret
mov
pop
inc
cmp
dec
scas
loop
sbb
mov
push
cld
loop
jne
fst
cli
in
push
cs
ror
les
clc
adc
mov
sub
hlt
pop
andl
xor
xor
fcomp
loope
cmp
pop
adc
das
adc
lret
je
mov
xor
stos
pop
loopne
shr
insb
push
mov
xor
add
inc
cmp
jecxz
xchg
test
bound
push
les
dec
jb
iret
pop
inc
mov
cli
stos
xchg
lcall
sbb
add
nop
adc
inc
fnsetpm(287
lea
adc
iret
dec
jmp
mov
mov
mov
call
ret
mov
mov
dec
aaa
add
or
adc
adc
gs
mov
call
in
fnsave
dec
insl
jecxz
jge
mov
xlat
pop
lock
sti
dec
addr16
push
ret
mov
mov
xchg
push
xchg
jbe
in
imul
xor
sub
inc
pop
xchg
lods
fimull
push
ret
jle
or
ret
fdivr
mov
decl
mov
add
enter
fistpll
cltd
add
mov
sub
pushf
push
punpckhbw
push
sbb
cs
lods
fimull
ja
movsl
dec
mov
gs
or
cmp
adcb
out
push
add
or
jne
cmpsl
jp
cmp
outsb
sub
sbbl
or
addr16
sbb
lods
frstor
out
shll
xchg
xor
or
ja
lahf
add
adc
leave
sbb
push
pushf
pop
ljmp
ret
inc
mov
sahf
push
cmp
dec
into
ja
js
jmp
adc
add
int3
adc
mov
leave
xor
xchg
xchg
adc
arpl
xchg
sahf
ret
dec
sbb
sbb
insl
and
dec
mov
ja
or
bound
les
mov
xlat
fimull
inc
sbb
insb
int3
fstl
in
loope
scas
sub
cmp
add
inc
cli
sbb
je
fldenv
int
adc
inc
mov
inc
fsubp
jmp
inc
xchg
cmp
aam
jecxz
mov
andb
les
ss
mov
jge
mov
and
mov
inc
mov
daa
cmp
std
inc
mov
out
push
pop
ret
sbb
mov
fdiv
pusha
push
sub
arpl
rcrb
jmp
lret
arpl
sub
xor
adcl
dec
mov
cs
or
mov
sarb
or
std
and
int
idivb
mov
or
add
lret
dec
pop
push
out
andb
mov
pop
mov
pop
mov
icebp
inc
mov
addl
mov
adc
mov
push
sub
adc
out
addr16
cmp
jno
insb
popf
shr
pusha
jo
ljmp
repnz
aad
andl
out
in
dec
test
popa
stc
popf
loopne
lahf
and
cmpsl
sbb
xchg
jle
inc
call
sub
ljmp
xchg
movsb
sub
js
push
push
mov
test
push
mov
adc
adc
mov
fildll
mov
inc
sub
stos
loopne
lret
lds
xchg
xchg
mov
and
mov
daa
mov
mov
cs
push
adc
les
pop
sbbb
cwtl
jnp
fadds
imul
cmpsb
jge
arpl
push
sub
add
dec
cs
push
mov
sbb
push
mov
stos
add
mov
push
dec
mov
dec
mov
cmpsb
pusha
jns
add
pop
lcall
mov
jb
out
movsl
subb
xor
or
and
outsl
sbb
movsl
push
xchg
cmp
sbbl
xchg
aam
pop
mov
scas
popf
pop
mov
lret
pushf
mov
or
sti
and
mov
unpckhps
sbb
repnz
ds
rcrl
in
jl
inc
mov
sti
leave
push
jg
adc
jp
xchg
add
mov
arpl
adc
lock
lods
inc
outsb
add
push
aaa
das
jmp
das
xor
xchg
icebp
fcompl
stos
push
xor
mov
xor
movsl
scas
jmp
cmpsb
cltd
lea
aam
adc
adc
mov
psrad
push
aad
clc
sbb
outsl
xor
mov
xchg
nop
out
pop
out
lret
movsb
add
inc
jp
push
enter
dec
andb
pop
loopne
push
repnz
insb
add
sub
push
pop
enter
jo
inc
call
shlb
mov
or
mov
lds
jl
mov
addl
xchg
das
outsl
mov
repz
sbb
mov
loope
mov
and
xor
ficomps
lret
loope
push
hlt
cmp
movsl
pop
push
adc
shll
in
insb
push
push
mov
pop
ljmp
xor
jb
mov
adc
ret
pop
outsb
cmc
cld
cmpl
jb
stos
mov
pop
mov
cld
pop
inc
jae
and
pmaxub
mov
mull
jne
test
jge
dec
je
cmp
push
loope
aas
shlb
iret
sbb
inc
sub
xor
mov
in
sub
xor
inc
sbb
lock
and
mov
adc
jg
enter
mov
dec
rcrb
outsl
mov
push
xchg
sub
out
fbld
lret
cld
jne
in
push
jne
sti
pop
xchg
fwait
out
lods
cmp
pushl
arpl
shrl
test
xor
fs
cmp
sbb
xor
lahf
ss
cmpsb
push
fidivrl
pusha
or
pusha
popf
js
lods
cmp
pop
gs
pop
or
add
ret
mov
push
je
es
pop
ror
or
andl
push
je
jmp
aaa
cld
insl
push
mov
xlat
or
add
mov
cmp
mov
jl
inc
fidivs
or
popf
stos
sbb
mov
shlb
test
jnp
mov
imul
sub
call
or
imul
ds
cld
push
dec
out
jo
bnd
sbb
lods
call
popf
add
int3
pop
lea
loop
push
or
pop
jge
sahf
ds
mov
sbb
jp
jle
daa
xor
jl
cs
das
xchg
jg
pop
cmp
inc
ja
or
cwtl
sub
xor
add
mov
xor
fdivr
fwait
xor
or
ja
cli
mov
jmp
jmp
xchg
loopne
add
xchg
fildll
out
sti
repz
mov
dec
xor
nop
cmpl
fwait
scas
popa
cmp
add
inc
sarb
loop
push
sarl
pop
js
push
aaa
pop
pop
test
xor
xor
aaa
mov
xor
in
inc
pop
sbb
ret
fwait
jg
xor
sbb
dec
fs
push
mull
stos
jae
inc
xchg
incl
pop
call
into
out
mull
xor
in
xor
xchg
adc
sub
mov
subb
jg
stos
iret
movsl
add
lods
int3
mov
xchg
pop
fldl
adc
dec
notl
jecxz
movsb
movups
sub
push
enter
fcmovnbe
pop
clc
sti
xlat
inc
fimuls
pusha
imul
push
dec
and
push
or
adc
add
aaa
int3
dec
jnp,pt
jnp
cltd
stos
jne
add
jp
popa
push
pandn
int
lock
mov
sub
add
push
xchg
pop
dec
mov
shlb
ss
mov
ljmp
inc
popa
mov
xor
add
jnp
in
ret
shl
xchg
xor
fnstsw
iret
aad
pop
sbb
mov
mov
loopne
in
bound
dec
pop
fadds
mov
jnp
or
movl
cli
adc
sub
or
mov
sub
mov
and
sub
xlat
or
xchg
sti
cmpsl
clc
nop
cmpsl
jecxz
jbe
mov
pop
push
sar
orb
mov
jnp
xchg
lea
mov
aad
aaa
or
fwait
test
aam
fiadds
mov
xor
scas
inc
out
lods
push
icebp
in
clc
shufps
lahf
fs
clc
mov
in
popa
call
lcall
sbb
loopne
es
ds
jp
xchg
mov
sub
sbb
inc
jo
mov
xlat
addr16
xor
dec
shrb
hlt
push
inc
mov
or
insb
clc
add
inc
and
dec
cmp
aad
lret
jne
aas
nop
or
jne
add
bnd
scas
mov
mov
mov
adc
add
ret
out
jo
sbb
in
insb
mov
ss
scas
and
push
rcl
popf
data16
inc
mov
inc
jns
dec
les
pushf
inc
arpl
cmp
pop
mov
call
imul
cmp
ret
clc
adc
jg
mov
adc
push
xor
adc
nop
sbb
negl
mov
pop
push
movsl
and
and
cld
imul
insl
push
orl
out
dec
leave
test
mov
lahf
cmc
popl
shrw
jae
test
fdivs
sub
insl
pusha
inc
mov
xchg
imul
mov
mov
mov
orb
out
and
sbb
cmp
pop
and
push
adcl
inc
shrb
cmp
aam
fnstenv
adc
inc
pop
xchg
adc
in
jmp
cld
or
imul
aad
xor
hlt
loopne
and
les
mov
dec
mov
mov
adcb
idivb
mov
out
inc
roll
pop
push
jecxz
jl
imul
push
pop
jbe
js
enter
inc
sahf
sbb
and
roll
and
fildl
test
into
js
loop
fwait
mov
dec
mov
sbb
ja
push
out
rorb
shll
loope
cltd
pushf
pusha
mov
ja
outsb
mov
addb
mov
push
ss
xor
in
scas
popa
and
cwtl
cmp
mov
ja
mov
lret
dec
scas
adc
cmp
outsb
mov
insb
cmpsb
add
movsl
xchg
aas
jns
shlb
cltd
or
dec
pop
or
dec
mov
fstl
loope
push
addr16
mov
bound
sub
inc
cmp
rcrb
int
sbb
jp
call
push
dec
cld
jle
sub
mov
push
push
scas
mov
push
push
arpl
and
orl
mov
mov
ja
jmp
lds
in
dec
les
push
xchg
daa
out
jae
ret
pop
dec
sti
or
mov
lds
cmp
xchg
jnp
xchg
xchg
lock
arpl
mov
sbb
mov
ds
cli
add
fdivp
push
daa
ret
leave
xchg
mov
imul
sbb
xor
neg
and
sahf
mov
adc
mov
rcr
mov
repz
dec
das
dec
loopne
das
or
mov
ja
mov
mov
mov
sbb
jp
mov
add
cwtl
repz
sarb
iret
pop
mov
pop
repz
dec
push
hlt
outsb
push
jbe
push
fwait
xchg
mov
jmp
pop
add
mov
or
and
call
mov
repz
mov
test
sbb
xchg
or
fisttpll
jge
dec
les
cwtl
cltd
pop
push
jno
scas
xor
loope
je
xor
pop
jne
mov
into
inc
dec
and
mov
sub
xchg
or
and
cmp
xlat
lock
fisttps
inc
out
mov
hlt
mov
outsb
sub
inc
jp
xchg
lods
ds
pop
inc
mov
and
adc
sbb
rcr
mov
push
lock
loop
orl
jmp
stos
jae
sti
out
mov
jae
cltd
push
add
cs
rcrl
mov
ret
or
inc
cli
mov
stos
ret
daa
xor
mov
push
in
les
cs
or
sub
mov
cli
jl
iret
mov
adc
data16
mov
pop
sbbb
les
or
sub
mov
xor
jae
mov
in
xchg
fs
push
ljmp
add
mov
scas
mov
scas
jp
in
insb
adcl
decl
test
push
sbb
jg
lds
dec
int3
shll
sub
dec
mov
hlt
sarb
sub
inc
push
imul
loopne
iret
std
push
out
sbb
idivl
pop
sbb
dec
dec
insl
out
nop
jg
ss
loop
sbb
rclb
mov
push
cld
jl
incb
mov
sti
mov
pop
ljmp
jno
lahf
and
push
mov
mov
jg
adc
pop
inc
iret
inc
xor
xchg
adc
adcl
loopne
rolb
lcall
cli
add
mov
jmp
test
sub
xrelease
cmp
sub
sbb
push
mov
xchg
mov
repz
daa
fucomp
cs
je
mov
xchg
inc
inc
inc
inc
addl
jns
mov
imul
lcall
testb
je
bound
sub
xor
and
xchg
xor
pusha
imul
dec
fwait
inc
pop
test
xchg
mov
xlat
das
mov
fwait
test
dec
and
sti
or
iret
and
dec
sbb
add
mov
jae
outsb
xchg
cwtl
hlt
cmp
adc
xchg
cmpsl
popf
es
mov
scas
js
xor
ficomps
inc
jecxz
adc
push
or
sub
jbe
mov
loop
sahf
xchg
nop
adc
outsb
clc
in
loope
imul
mov
jecxz
ljmp
inc
xor
ja
dec
pop
mov
inc
and
imull
rorl
xchg
jbe
mov
ret
inc
mov
add
or
shrb
lcall
pop
adc
xor
outsl
xor
mov
inc
pop
dec
out
inc
mov
xor
mov
cld
lods
xchg
pop
and
ret
pop
xor
cli
mov
sbb
lcall
rol
mov
out
cmp
xchg
std
push
adc
mov
popa
sbb
sar
xchg
mov
jno
lahf
jns
mov
mov
dec
pop
dec
arpl
callw
test
leave
jmp
mov
jp
popa
cmp
and
mov
xor
pop
add
lds
cmc
mov
aam
mov
mov
inc
lret
test
cmp
dec
scas
aas
add
mov
int3
push
int
sbb
sarl
dec
or
out
lahf
inc
call
cmp
out
cmpsb
dec
ja
push
fldcw
movsl
adc
add
add
in
rolb
cmp
es
mov
psubd
add
jmp
aam
frstor
test
jmp
and
push
cmp
jno
jmp
test
std
jae
and
pop
pop
and
mov
hlt
xor
aad
insb
in
xchg
mov
scas
and
rolb
paddd
lcall
lret
xchg
xor
repz
nop
scas
dec
cmp
shlb
jmp
adc
cmp
adc
jo
fdivs
or
or
push
std
jg
stos
jae
pushf
ds
inc
pop
add
jns
mov
movb
dec
sbb
smsw
xchg
push
test
in
aad
or
lcall
xor
outsl
jl
es
jecxz
loopne
imul
xor
movsb
sub
adc
cli
xchg
gs
push
inc
add
push
pop
jne
mov
pop
pop
fldenv
das
sbb
xor
sub
popa
ja
jecxz
mov
cmp
int3
decb
sbb
mov
stc
int3
inc
jmp
mov
jle
cmpsl
les
pop
addr16
out
mov
jb
sub
mov
add
les
cmc
or
aam
push
aaa
xor
pop
add
dec
int3
loope
push
mov
popf
mov
xchg
mov
negb
and
cli
fisttpl
out
jle
iret
dec
xchg
dec
out
insl
notl
ja
xchg
pop
roll
movsl
mov
mov
loope
test
xor
pusha
mov
mov
dec
lea
xor
jle
adc
mov
push
mov
mov
jmp
in
movsb
out
imul
inc
mov
cwtl
mov
adc
lods
fnstenv
xchg
not
ficoml
adc
mov
cmpsb
mov
pop
aas
sbb
or
out
mov
or
leave
in
inc
add
jle
mov
and
fistl
enter
mov
or
sbb
xchg
mov
pop
cld
stc
xchg
inc
xchg
xlat
push
mov
jl
or
add
jne
dec
cmp
cmp
les
or
inc
xchg
imul
xchg
add
and
and
lea
dec
mov
cmpsb
xchg
xchg
dec
int
push
mov
pop
ss
test
mov
mov
pand
lahf
imul
addr16
fcmovne
push
dec
adc
mov
call
sub
jmp
bound
xchg
ss
lea
sbb
les
adcb
fs
repz
xor
clc
xchg
cld
push
shrb
int3
jb
ja
pop
sbb
call
enter
fdivl
mov
lods
jle
jle
iret
dec
lods
mov
icebp
push
outsb
outsl
jl
xchg
xor
sbbb
cltd
jbe
test
sub
fidivrs
in
or
inc
fstpl
adc
push
lcall
mov
cmp
push
sbb
add
stos
push
add
testl
push
mov
push
and
js
loop
dec
aad
mov
mov
xor
aas
sbb
pop
outsl
out
mov
lock
ljmp
cmp
cmpsl
pusha
repz
cli
fdivr
cmp
xchg
scas
cmpsl
xchg
subb
in
ds
add
loope
sub
sbb
aaa
test
dec
adc
pop
push
xor
sbb
stos
add
mov
sbb
je
push
inc
jl
cltd
dec
pushf
mov
adc
mov
adc
ds
clc
push
out
ss
dec
ljmp
cmpsl
out
adc
repnz
sub
add
jle
mov
shll
pusha
ja
or
xchg
push
lcall
scas
jmp
xchg
sbb
push
lahf
sbb
sub
lea
mov
jb
fdivl
hlt
and
mov
add
mov
adcl
popf
arpl
fiaddl
xor
xchg
clc
mov
test
popa
push
cmpb
data16
in
mov
xchg
sbb
inc
and
dec
insl
push
subb
sbb
push
jge
and
xor
int3
inc
pop
int
mov
xchg
jg
lea
out
call
push
bound
ret
mov
ljmp
inc
stc
pop
outsl
loopne
mov
hlt
dec
repz
or
sbb
aam
shll
jecxz
add
push
std
inc
push
hlt
enter
mov
testl
insl
adc
jo
push
scas
xchg
add
xor
fstp
lret
lahf
outsb
clc
mov
xor
inc
in
sahf
sbb
movsb
adc
lods
enter
dec
ds
push
mov
or
jl
pop
mov
rcrl
pop
fst
push
pop
iret
or
ljmp
mov
in
aad
in
or
movsb
ret
or
xor
dec
or
or
cmp
outsb
mov
int
fisttps
out
insb
pop
and
ss
jl
cmpsl
orl
dec
stos
outsb
xorb
inc
lds
sub
into
cmpsl
add
push
dec
adc
icebp
pop
mov
icebp
cmp
int3
fidivl
insb
in
sub
into
bound
sbb
repnz
lea
outsl
mov
lods
sahf
loope
test
ja
xor
imul
fistps
and
mov
mov
adc
cmp
clc
cmp
jle
pop
das
mov
ss
inc
jno
mov
arpl
jno
call
or
lock
push
push
jbe
fldl
cmc
xor
push
inc
mov
mov
xor
push
sbb
sbb
add
add
mov
lcall
mov
sbb
sbb
mov
daa
pop
adc
adc
sbb
or
enter
gs
mov
pop
lea
js
cmc
pusha
fs
mov
jle
inc
mov
stc
sbb
cmc
or
test
add
mov
fcoml
dec
inc
sub
lcall
push
fmuls
wrmsr
push
ja
inc
lds
push
cli
mov
imul
jmp
mov
xor
sbb
push
xor
es
mov
or
xchg
or
or
inc
sub
mov
int3
daa
test
arpl
mov
sub
xchg
pusha
scas
popf
std
or
imul
inc
and
and
mov
pop
lahf
add
cmp
xor
xor
pop
jp
fcomps
sbb
test
mov
xchg
loopne
mov
jnp
sub
pop
call
jmp
xchg
push
cmp
in
inc
mov
lea
cmp
add
xor
loop
fidivrl
mov
dec
sbb
lahf
idivb
rorl
popa
frstor
pop
mov
out
add
rcrl
pushf
cmpb
pop
sahf
icebp
jmp
dec
bound
loopne
lea
lock
clc
sarl
or
inc
cltd
mov
lcall
inc
divl
mov
inc
ds
dec
pop
push
or
jbe
jle
sbb
fstl
inc
int
lds
lcall
cmp
jb
fstl
out
push
stos
cmp
and
repnz
je
add
bound
mov
and
pop
gs
test
int
pop
jle
add
cmpsl
jns
jbe
push
or
add
mov
out
lock
pop
orl
xchg
rcll
and
pop
idivl
mov
push
aam
mov
cltd
test
lahf
and
xor
icebp
into
testl
aas
pusha
dec
mov
loop
ret
ljmp
mov
jge
jns
pop
sub
ficoml
arpl
xor
jp
xor
data16
mov
nop
mov
or
iret
mov
fmul
call
inc
mov
adc
mov
int
test
lods
sbb
aaa
lds
jle
or
mov
add
cld
mov
pop
pop
in
clc
jl
ficomps
adcl
fwait
jnp
enter
adc
mov
fimuls
dec
outsl
and
or
jl
and
inc
pushf
out
mov
into
call
cmpsl
enter
add
filds
rcrl
pop
mov
jo
ret
and
mulb
or
ljmp
mov
xchg
inc
loope
or
ja
pop
mov
push
mov
cmp
ljmp
push
jg
adc
xchg
mov
loop
or
imul
mov
call
jg
jmp
loopne
mov
xchg
sub
xchg
rcr
fcoms
aad
pop
or
cwtl
xchg
out
rcll
jle
dec
fcmovnb
std
inc
repz
hlt
pop
mov
and
push
cmpxchg
cmp
lret
aas
idivl
pop
pop
xor
or
push
repz
sti
ret
adc
mov
lods
lods
out
add
mov
loop
int3
mov
jecxz
icebp
mov
adc
xchg
jb
out
lods
lea
add
pop
or
bnd
aam
scas
jge
fs
adc
mov
xchg
or
not
xchg
and
jp
jb
jle
daa
jo
mov
lret
inc
ficomps
mov
leave
sub
call
xchg
cmpsb
cmpsl
sub
sub
and
insl
incl
cmpsl
insl
addr16
jae
inc
bound
arpl
adc
lods
or
push
push
jmp
call
in
push
clc
out
jmp
es
icebp
scas
lods
test
push
mov
mov
add
sti
imul
mov
js
mov
jl
sti
jmp
es
push
cmp
lods
dec
faddl
or
mov
repz
mov
in
jl
mov
inc
pusha
out
aam
jp
and
loope
call
fstl
mov
les
add
scas
cmp
popf
jge
adc
cmp
adc
inc
add
push
cmp
mov
and
jne
add
dec
xchg
push
fisubl
mov
xchg
sub
push
sarl
inc
fsub
jg
sub
jne
mov
out
inc
test
mov
adc
imul
stos
inc
fsubrl
push
sti
sbb
mov
out
push
mov
dec
sti
aas
mov
dec
aad
cmpsb
addr16
xchg
adc
xor
loop
adc
jle
std
testb
aam
mov
dec
faddp
or
insl
sbb
or
mov
pop
push
cmpsl
dec
and
sub
xor
testl
fiaddl
hlt
mov
jnp
js
mov
in
not
mov
test
xchg
adc
nop
sub
mov
cmpsb
or
leave
push
adc
sahf
ret
adc
xor
ss
jp
mov
jl
fsub
sbb
or
jmp
mov
subb
insl
andl
dec
es
push
lret
int3
push
and
cmpsb
shr
pop
lods
fs
mov
mov
loopne
mov
and
or
sbb
js
cli
sarb
jp
pop
mov
cmc
add
jl
xchg
xchg
lds
imul
or
fldl
and
lcall
sbb
out
out
imul
shrb
inc
push
sbb
inc
sbb
jns
fistpl
outsb
adc
stc
xchg
mov
cmp
sti
sbb
clc
sbb
and
xor
fninit
int
lret
fbstp
pop
loop
xlat
sahf
movsb
pop
les
xchg
mov
xlat
cltd
xor
cmpl
xchg
and
daa
in
movb
mov
test
and
mov
rclb
mov
stos
movsb
pop
insb
adc
push
mov
inc
mull
xchg
imull
xchg
xchg
rcrb
jno
xor
sahf
mov
sti
and
mov
scas
jno
aas
xchg
cmc
mov
stos
ret
xchg
popa
cwtl
ja
inc
stos
jle
add
push
addb
imul
aad
mov
loope
adc
addr16
jno
cmp
cmpsl
sub
inc
jle
je
and
inc
add
repnz
or
push
je
sbb
arpl
ljmp
push
dec
sahf
push
push
or
lret
ret
dec
jns
daa
cmp
pop
cmpsb
pop
arpl
mov
ljmp
fdivrp
xchg
add
add
das
xchg
mov
dec
ds
add
sahf
mov
gs
xor
jl
outsb
jne
pop
cmp
cmp
sbb
mov
or
jne
adc
sbb
sbb
sub
out
mov
repnz
or
je
out
loop
insl
iret
push
jne
mov
enter
fnsave
add
fsubl
fs
mov
dec
das
mov
std
or
cmpsb
xchg
or
leave
mov
ror
add
sahf
sub
push
mov
pop
stos
adc
addl
pop
and
and
je
mov
xchg
loope
pop
lcall
aam
push
or
jo
scas
xor
fisttpll
dec
cs
faddl
inc
outsb
shlb
scas
jg
xlat
les
les
xchg
clc
shr
xchg
repz
sahf
adcb
ljmp
xor
inc
dec
aas
mov
imul
pushf
push
daa
jbe
mov
sbb
xor
and
or
adc
and
jmp
jo
xor
stc
call
push
mov
xchg
lods
js
and
dec
or
cmp
or
adc
loope
pop
xor
adc
fistpl
insb
mov
shlb
sbb
cmp
mov
sete
stc
rcrb
mov
js
in
xchg
stc
movsl
and
dec
mov
sbb
sahf
xchg
pop
in
sub
test
ja
jb
aas
xor
mov
cmc
test
jnp
pop
pop
mov
nop
pop
xchg
in
inc
clc
jo
pushf
pop
call
imull
inc
iret
push
or
mov
mov
lea
jbe
inc
shlb
dec
mov
popa
push
mov
pop
sbb
pop
call
rorl
icebp
aas
mov
jp
xor
cwtl
lea
dec
dec
mov
cmc
inc
mov
imul
loop
mov
iret
lcall
je
adc
or
lods
jg
jno
xor
shll
clc
aaa
out
mov
adc
cmp
imul
lods
or
dec
jl
mov
shll
call
adc
or
adc
test
fstpl
xchg
lcall
ret
lret
call
out
cmc
pop
pop
cmc
idivb
sbb
test
daa
or
adc
sbb
add
and
jecxz
ret
lahf
rorb
add
mov
and
mov
adc
repz
xor
loop
or
arpl
aaa
or
setle
lds
xchg
lahf
cli
xor
or
mov
jno,pt
jne
loopne
push
loopne
sub
in
out
inc
and
insb
pushf
adc
cmp
imul
mov
sahf
and
add
imul
push
inc
sbb
mov
mov
and
pop
sub
mov
mov
push
js
pop
push
js
sahf
test
mov
dec
inc
mov
dec
je
and
pop
rorl
jnp
fsubrp
roll
leave
or
cli
gs
push
mov
enter
mov
scas
in
adc
clc
or
ljmp
mov
sbb
mov
dec
roll
cmpsl
jge
jae
pop
outsb
dec
push
nop
and
jo
and
xor
cli
or
stc
xor
cmp
adc
loope
pop
xchg
push
cltd
mov
xchg
push
dec
add
and
nop
inc
je
subb
xchg
push
subb
push
daa
dec
xor
xchg
mov
jnp
push
lcall
filds
add
or
jg
in
das
fwait
cmpsb
pop
cli
push
leave
mov
cmp
push
rcl
dec
adc
orl
pop
push
ret
stc
xchg
aad
xor
pop
cmp
inc
jl
nop
sub
mull
mov
lret
pop
es
popa
add
cltd
lods
pop
adc
push
jmp
mov
jg
cmp
mov
nop
push
les
jnp
adc
inc
hlt
pop
ss
mov
inc
xchg
push
inc
push
xchg
fisttps
push
adc
dec
daa
add
outsb
or
add
cmpl
cwtl
xchg
mov
cmpsb
test
xchg
lahf
nop
mov
jmp
and
inc
mov
inc
scas
mov
call
fmull
pop
negb
jno
sub
cwtl
mov
les
mov
mov
pop
aas
mov
testb
mov
xor
rep
sbb
add
data16
adc
cltd
and
cli
lods
push
or
xchg
sbbl
and
shll
pusha
adc
je
lods
jns
lret
aaa
mov
loopne
stos
jnp
cmp
pop
outsb
add
clc
lods
stc
pusha
add
push
xchg
fisttpl
out
inc
mov
sbb
sbb
aam
mov
mov
xor
sub
iret
hlt
jo
push
push
xlat
addb
push
xchg
call
mov
lcall
and
sub
mov
mov
aas
xchg
ficoms
ljmp
outsb
pop
pop
mov
cmpsl
sub
add
cmp
test
mov
cmp
push
inc
fsubrl
aas
lds
dec
roll
cmp
sbb
jg
cmp
test
stc
rclb
adc
mov
insl
aam
or
sbb
jge
lods
jb
push
mov
cltd
mov
cmp
hlt
push
stos
shl
repz
sbb
add
cld
mov
mov
loope
out
xchg
mov
sbb
imul
call
ss
lret
addl
push
push
les
movsl
cld
add
inc
mov
jbe
or
xor
add
cmpw
leave
and
hlt
adc
lret
fisttpll
add
xchg
dec
loope
fstpt
loopne
jno
test
es
sahf
push
sbb
sbb
test
inc
and
mov
push
adc
adc
push
into
pop
dec
pop
ret
inc
inc
xor
arpl
rclb
gs
in
xchg
arpl
sar
adc
adc
mov
xchg
inc
cli
mov
mov
and
adc
in
scas
xchg
das
fcomps
ret
shrl
stc
jecxz
adc
xchg
jbe
inc
jl
mov
nop
add
fistl
fs
loopne
xchg
and
test
jg
lcall
pop
adc
and
mov
pop
or
jl
daa
sub
or
addr16
clc
mov
sbb
xchg
ljmp
sbb
xor
lea
pop
mov
das
iret
jp
xchg
ljmp
fisttpl
push
inc
repz
pushf
out
cmp
add
xorb
xor
imul
rcrl
xlat
dec
mov
test
mov
or
ss
sbb
mov
fs
inc
sar
and
pop
and
inc
sahf
mov
inc
push
call
push
cmp
lds
pop
dec
in
inc
inc
js
repz
data16
and
xchg
mov
push
test
mov
insl
in
nop
fldenv
in
xlat
xorl
xchg
jp
mov
iret
xchg
cld
not
xchg
mov
adc
ret
jl
pushf
jl
std
mov
jmp
and
mov
mov
or
aad
roll
imul
roll
lea
sbb
mov
inc
mov
das
mov
lahf
add
jl
loopne
outsb
popa
dec
lds
mov
pop
test
fisttpll
push
sbb
or
jecxz
mov
lahf
dec
pop
lret
ret
xor
fsub
je
adc
mov
xlat
enter
in
push
mov
adc
mov
cmpsl
sti
hlt
fdivp
rcll
xchg
dec
sub
ds
adc
inc
and
cmp
fdivrp
mov
jnp
leave
dec
and
pop
pop
int
cmc
jecxz
xchg
rolb
mov
cmpsb
inc
ljmp
inc
outsl
call
fcomp
mov
xchg
out
stos
pop
jb
xor
data16
dec
div
neg
hlt
and
mov
movsl
xchg
test
mov
popf
jle
mov
sub
shll
hlt
rol
aas
in
xor
test
mov
push
insb
aad
xor
lret
stos
or
mov
push
outsl
adc
rorb
pop
jle
pop
jecxz
sub
movq
adc
xchg
pop
in
scas
call
or
mov
push
mov
or
dec
add
mov
bound
xchg
sbb
pusha
adcl
test
sbbb
movsl
or
stos
sysexit
sbb
add
in
cwtl
in
push
pusha
add
les
xor
mov
rcrl
sub
adc
lods
cmp
out
mov
jg
cld
dec
mov
pop
data16
mov
xchg
adc
mov
pushf
cmc
jns
std
inc
addr16
dec
mov
mov
or
inc
ret
arpl
cli
add
dec
leave
aaa
and
mov
lahf
lret
mov
lods
sub
adc
cmp
add
repz
mov
mov
aam
ss
lods
add
test
jae
icebp
dec
sbb
jb
push
lds
ss
jge
dec
push
sahf
xchg
out
lods
clc
stos
call
xor
xor
inc
mov
push
adc
sub
pusha
je
cmp
int
dec
xchg
mov
push
aam
fwait
inc
iret
jg
rcll
or
popf
xchg
cmpb
pop
sub
loopne
cmp
into
std
fucomi
loope
cmp
in
xchg
sbb
andb
pop
pop
mov
pop
pop
sbb
and
out
loope
daa
roll
cmp
xor
rolb
addr16
into
dec
xchg
icebp
shlb
inc
scas
orb
pop
push
sbb
and
aas
pop
push
roll
add
pop
sti
add
push
iret
ja
out
and
dec
in
js
sbb
jmp
cli
out
inc
jmp
jns
mov
push
jg
in
roll
xor
push
ficompl
inc
jne
movsb
jae
push
mov
mov
test
mov
insb
cwtl
inc
test
insb
in
mov
ret
iret
je
mov
sbb
sbb
arpl
inc
ja
cmpsl
adc
pop
ja
mov
fwait
gs
mov
jbe
test
and
adc
push
cmp
js
pop
rorb
mov
lock
sbb
dec
ret
imul
mov
pop
jbe
cmp
or
mov
jl
fidivrs
lea
xlat
push
jmp
inc
cmp
xchg
popf
lret
push
roll
inc
push
push
cli
mov
gs
push
and
loop
xor
imul
inc
or
orb
rcrb
add
mov
jge
or
rcll
pop
sahf
fnstsw
xor
and
lods
and
mov
sbb
fstpl
cs
cltd
xor
or
sbb
jno
nop
pop
or
in
mov
xchg
sbb
sti
cld
adc
inc
mov
ja
mov
mov
and
jae
adc
lods
xor
jne
add
mov
adc
insl
fistps
call
scas
imul
sbbb
push
cld
in
rorb
add
sbb
ljmp
scas
or
push
and
stos
mov
neg
sub
or
add
xchg
fmull
stos
pop
call
stos
movsl
cld
or
je
call
outsl
cmp
or
add
es
fsubrs
lahf
inc
pop
stos
cmp
pop
cli
imulb
iret
notl
cmp
add
or
or
pop
pop
fistpl
or
roll
xchg
cmp
into
cmp
je
push
jne
decl
pushf
dec
mov
lret
xchg
xor
push
dec
icebp
icebp
inc
xorl
das
jno
test
adc
shrb
pop
mov
rolb
dec
loopne
cmp
push
mov
and
ljmp
push
sahf
lret
cmc
pop
pop
inc
cmpsb
sbb
fcmove
or
adc
outsl
inc
hlt
scas
int
sarl
xor
mov
jg
mov
mov
sub
adcl
sub
inc
cld
cli
push
xchg
mov
mov
lret
fisttpl
testb
push
pop
and
sub
jae
mov
cld
sbb
imul
incl
xorb
or
jo
sub
xor
adc
add
repnz
fstpl
hlt
adc
ljmp
sti
pop
out
aam
mov
dec
pushf
lret
out
test
fcmovnb
shrb
pop
sti
stc
popf
mov
sbb
outsb
out
cmc
pop
jns
lea
jae
pop
push
sbb
out
xchg
add
lea
cmp
popa
and
fwait
imul
sbb
cmp
or
inc
xor
pop
and
arpl
movsb
adc
mov
jmp
data16
cmpsl
popa
in
out
and
dec
lahf
jle
add
rorl
shr
push
mov
and
mov
mov
jge
xor
pop
adc
mov
sub
adc
addr16
popf
mov
movsl
xchg
or
bound
imul
in
mov
testl
push
fwait
mov
rcl
fmuls
dec
mov
adc
int3
inc
jg
out
clc
adc
repz
push
pushl
aad
pop
loope
pop
and
jmp
xor
inc
test
cld
sub
shll
andl
sbbl
mov
jl
inc
cld
cmp
loop
push
aaa
mov
cmp
pop
mov
gs
orl
loop
bound
sbb
popf
push
and
lcall
ret
and
push
ret
outsl
xlat
mov
aaa
jbe
mov
ljmp
mov
aam
fs
test
pop
add
stos
cwtl
leave
jecxz
pop
cmp
jl
mov
xor
mov
mov
mov
repz
push
xor
lcall
dec
in
shrl
pop
adc
out
inc
sbb
xor
mov
sub
push
add
xor
add
roll
fldenv
lock
xchg
fistpll
inc
out
xor
pop
outsl
popf
mov
repnz
inc
or
pop
xor
jmp
jb
jmp
aaa
and
cmc
stos
mov
nop
pop
ljmp
pop
aaa
lcall
or
mov
ret
es
xor
scas
cmp
scas
inc
sti
sti
dec
jl
inc
inc
add
cmp
ds
sarl
aaa
dec
loop
pop
inc
repz
imul
pusha
out
jns
shlb
jge
mov
jbe
out
fdivs
add
rolb
sbb
and
enter
sub
fadds
leave
scas
scas
pop
dec
or
jp
xchg
jnp
mov
mov
mov
xor
push
fisttps
out
leave
inc
pushf
or
cmp
lret
sub
xor
roll
pop
mov
ds
adc
and
cmp
xchg
ljmp
add
lcall
mov
imul
mov
lea
outsl
sar
xlat
push
add
out
sub
sbb
or
pop
loope
into
loopne
xchg
insl
lret
mov
movsl
call
xchg
cwtl
adc
add
dec
fldenv
xor
loope
gs
jb
js
sbb
mov
adc
jecxz
fimuls
push
mov
mov
cltd
ja
divb
inc
xor
add
cmp
sahf
insl
iret
movsl
sbb
fdiv
cmp
aaa
push
in
pop
iret
jae
jb
movsl
mov
fisttpll
ret
test
mov
bound
dec
or
mov
lahf
or
loop
fiadds
arpl
and
popf
sti
cmp
test
pop
xchg
or
dec
gs
out
xlat
or
or
pusha
nop
push
cmpsl
or
rclb
insb
inc
mov
test
dec
cmp
aam
push
cmpsb
mov
movb
pop
adc
dec
roll
or
hlt
jb
mov
mov
adc
dec
les
cs
in
ljmp
out
movsl
add
in
mov
fbld
lods
push
loopne
cld
adc
das
push
test
pusha
sbb
jecxz
mov
pop
dec
cmp
int3
inc
pop
mov
or
std
pop
xchg
push
jnp
rclb
mov
cli
push
add
ja
and
hlt
and
test
add
xchg
or
cmpsb
scas
mov
es
ret
fs
out
pop
das
std
inc
dec
iret
adc
jno
aas
push
mov
pop
lock
sub
cld
xor
adc
lahf
aas
ret
jge
test
cmp
add
frstor
jge
pop
in
ss
push
adc
lret
not
or
wrmsr
jl
mov
lahf
sarb
mov
push
mov
cli
arpl
add
cmp
lds
push
xchg
lcall
cltd
jo
bound
loope
dec
mov
inc
add
inc
frstor
lods
cmp
xor
test
rcll
xchg
xchg
cmpsb
fucomp
adc
loopne
cmpsb
repz
iret
inc
pop
lock
push
cmp
cmp
insl
cmp
mov
add
push
xor
add
imull
xchg
fwait
dec
and
inc
inc
adc
nop
add
imul
cs
inc
inc
dec
xchg
dec
and
lfs
icebp
xchg
repz
inc
popf
adc
inc
pop
dec
cli
inc
in
inc
jecxz
mov
push
jbe
lock
adcb
mov
xchg
dec
call
mov
lcall
fdivl
inc
ficompl
rorb
adc
mov
sub
rorb
mov
aas
notl
sti
sbb
mov
pop
lods
jp
jmp
rcrl
xor
jb
fcoml
out
ljmp
lods
test
jl
inc
insl
sahf
fcompl
pop
pop
mov
loopne
xor
hlt
btc
pushf
jb
and
test
inc
push
jecxz
push
push
cmp
sbb
sbb
sub
mov
inc
cmp
and
push
mov
cmp
in
into
fnstenv
in
leave
mov
dec
lock
je
mov
fsubs
decl
mov
popf
dec
ljmp
jne
nop
xchg
mov
pop
aaa
xchg
pop
rcll
movsl
or
push
loopne
add
das
cld
mov
sahf
inc
or
int3
daa
adc
bnd
les
dec
cld
cmp
ffree
inc
clc
xorb
addr16
mulb
jle
push
pusha
sub
push
in
cmp
scas
inc
mov
enter
daa
xchg
in
or
add
lret
push
pusha
movsl
fwait
xchg
loopne
mov
loopne
shll
xchg
xor
rcll
jmp
sbb
pop
pop
cmp
inc
movsl
in
xchg
imul
push
mov
out
idivb
enter
add
out
push
pcmpeqd
imul
jno
cmc
xchg
pushl
ds
lock
and
xchg
shll
sub
lods
pop
gs
push
add
mov
inc
les
mov
and
inc
pop
rcrb
jno
push
int3
cmp
lock
popa
cmp
push
mov
scas
jg
stc
cmp
test
icebp
movsb
jae
jae
xor
test
inc
jl
arpl
iret
mov
cmp
pop
sahf
lods
aas
lock
cwtl
push
test
jne
icebp
mov
mov
mov
icebp
in
nop
or
leave
mov
mov
xor
out
push
push
mov
in
iret
add
xor
addb
pop
inc
sub
push
mov
pop
std
mov
push
fisubrl
ljmp
jecxz
movsb
and
jo
push
fsubp
xchg
stos
xorl
xchg
push
mov
dec
or
add
mov
jne
push
inc
mov
or
or
adc
xor
or
fnstsw
leave
jmp
dec
js
popa
push
loopne
call
push
sbb
int
aas
add
and
pop
sbb
sub
sti
pop
mov
or
push
mov
inc
pusha
aaa
mov
rol
inc
popf
or
nop
dec
jb
scas
jp
sbb
movsb
sub
add
outsl
fadds
into
add
hlt
call
sbb
and
sbb
inc
aaa
mov
mov
bt
fbld
je
push
movsl
out
pushf
movsb
mov
test
es
sbb
fcoms
int3
imul
or
scas
call
xchg
fs
leave
inc
fistpl
push
aaa
xchg
xchg
arpl
push
aam
push
inc
push
xor
ret
sbb
cltd
icebp
out
stos
push
xchg
mov
push
int3
cmpsl
jecxz
fidivrl
inc
movsb
stc
jmp
aad
sarb
aad
jmp
mov
mov
arpl
inc
cmp
sub
insb
and
aad
clc
cmpl
or
testb
sbb
loope
das
sbb
in
adc
in
xchg
mov
inc
jg
sahf
and
sbb
stos
jge
out
movl
pop
inc
mov
fisttpl
xor
or
aaa
je
rolb
adc
inc
lret
jbe
mov
pop
sub
lods
lds
shl
call
inc
mov
push
clc
test
dec
mov
pop
movsb
pop
jl
stc
loope,pn
xchg
cld
sbb
das
pushf
dec
andl
data16
and
and
push
fsubrp
mov
sti
push
pop
addr16
repnz
lret
xchg
push
mov
mov
jne
aas
xchg
mov
test
por
pop
sahf
dec
out
dec
add
enter
repnz
shr
stc
in
xor
or
mov
mov
aam
add
add
cmp
cs
mov
push
shlb
mov
cs
rcrl
stc
mov
and
sub
mov
pop
mov
data16
movsb
mov
mov
cld
mov
inc
pop
cmp
mov
pop
sbb
xchg
stc
pop
fisttps
mov
repnz
and
xchg
push
inc
dec
mov
jle
in
jmp
imulb
lret
add
mov
stos
push
lret
adc
inc
cmp
ljmp
addl
xor
push
jne
pop
cs
in
insb
ja
mov
mov
push
sarl
push
add
andl
inc
and
je
dec
data16
xor
sub
pusha
and
aaa
aam
or
cmp
sub
xchg
push
cwtl
repz
dec
sbb
adc
mov
push
testb
aad
rcl
adc
sub
loopne
stc
cmp
pop
imul
inc
ja
jle
xchg
cwtl
mov
sbb
push
jno
mov
lds
lods
fcom
push
testb
insl
ljmp
shlb
xchg
iret
popf
scas
inc
out
cmp
inc
js
xor
out
or
je
inc
lea
ss
testl
ja
cli
mov
add
dec
push
add
orl
adc
cs
jl
jmp
out
xchg
dec
es
jg
push
lds
xchg
or
arpl
daa
movsb
decb
shl
cmpsl
push
xor
outsl
mov
stos
jno
adc
cmp
push
adc
mulb
mov
mov
push
jge
push
add
fadd
xor
fwait
pop
insb
data16
or
jno
lea
ss
xor
dec
xchg
pop
xchg
push
mov
shlb
xchg
mov
xor
jns
push
fdivr
sbb
dec
insb
mov
arpl
pop
and
orb
dec
and
jno
js
lock
repz
in
push
fxch
sbbb
push
xchg
xor
dec
add
or
rcrl
lds
stos
pusha
sbb
lods
mov
jnp
xchg
ja
xor
fwait
jmp
fbstp
mov
sahf
mov
iret
sub
fnstcw
lcall
in
and
inc
adc
dec
cli
inc
add
int
sti
add
bound
jp
sbb
or
lock
cmp
or
hlt
clc
lock
sbb
lds
cli
daa
mov
mov
xchg
mov
jo
sub
sbb
add
inc
mov
push
mov
add
mov
push
push
mov
mov
jmp
hlt
pop
js
ficoml
repz
sti
lahf
mov
add
cltd
ds
mov
push
jle
push
mov
sahf
test
add
lret
sub
add
clc
jmp
xchg
ds
cltd
sti
pop
hlt
cmpsl
arpl
out
popa
sbb
js
jno
and
pop
mov
in
lds
ljmp
push
sub
out
iret
xchg
and
and
mov
and
push
loopne
dec
test
popf
out
lcall
mov
lret
push
push
dec
cmpsb
cmpsl
ficompl
fs
sti
sbb
sub
cmp
addr16
outsl
add
clc
fisttpll
sbb
or
loop
clc
xor
rclb
inc
mov
pop
add
scas
sahf
adc
movb
sti
clc
push
ja
and
mov
fsts
pop
lcall
mov
filds
stos
and
pop
push
mov
fimuls
in
push
leave
mov
cld
popa
pop
out
lods
pop
dec
pop
inc
inc
ljmp
imul
sti
imul
std
repz
mov
leave
dec
dec
sti
inc
inc
jbe
lock
push
cmp
out
int3
mov
imul
jecxz
out
bound
mov
in
push
lahf
insl
xchg
out
mov
dec
mov
jl
jmp
outsb
sbb
aas
test
sub
xchg
data16
jo
mov
and
sahf
dec
pop
cmpsb
mov
add
js
push
inc
jbe
dec
iret
cmpsl
and
out
dec
mov
or
insl
sbb
inc
or
jbe
push
imul
insl
fcmovnb
ljmp
sub
and
sbbb
loope
add
pop
inc
cwtl
js
fdivrl
or
mov
cmp
ficoms
ret
push
cmp
sub
test
push
lock
and
pop
inc
jbe
imul
loopne
in
inc
dec
addr16
dec
loop
pop
out
add
inc
xor
sti
cld
cli
pop
fnsave
xchg
mov
sub
nop
in
arpl
pop
dec
dec
adc
jns
mov
mov
repnz
roll
dec
movsb
jle
push
out
enter
push
and
test
ret
loop
xor
pop
cmp
adc
movsl
xor
cli
lock
imul
xchg
cmp
test
das
mov
cmpsb
mov
ficoms
daa
icebp
dec
push
in
adc
sbb
inc
jge
or
pop
ljmp
std
and
mov
inc
mov
push
addr16
add
add
scas
lcall
cmc
sbb
jmp
add
xchg
and
rcl
lds
push
xchg
mov
cmpb
mov
mov
inc
push
and
inc
pushf
nop
inc
push
push
loope
pop
mov
es
mov
pop
xor
inc
sub
adc
aas
add
or
pop
fdivrs
aaa
movsl
les
rorb
pop
repnz
cmp
inc
and
xchg
cltd
es
or
pop
and
pop
and
pop
aaa
pop
adc
add
inc
loop
clc
mov
sbb
repnz
xor
adc
xor
ret
and
mov
jo
lcall
or
mov
jae
ret
jmp
and
bound
mov
nop
dec
sbb
or
and
nop
pop
pop
insb
add
adc
add
dec
imul
insl
push
xor
and
test
mov
cmc
mov
dec
pop
inc
xor
lods
mov
repnz
dec
rorb
xchg
out
ds
ffree
inc
cld
sbb
les
lods
ja
movsb
nop
xchg
int3
add
xlat
cmp
lods
es
repz
dec
iret
mov
xchg
pop
sbb
jo
mov
stos
fwait
bound
insl
das
les
jae
fsubr
jg
aam
adc
fbld
adc
or
loopne
popf
ja
xlat
imul
xor
das
push
pop
add
testb
jle
lret
test
inc
fistpll
pop
add
mull
loope
adc
push
add
aas
jno
ja
das
mov
rorl
xor
or
scas
fcoms
xchg
cmc
out
mov
cmc
adc
ja
lahf
or
mov
dec
or
lahf
lret
repz
mov
xchg
mov
mov
fmulp
jge
divl
addr16
push
xor
add
call
sub
stos
fstpl
inc
into
lret
insl
adc
dec
xor
cmp
inc
inc
stc
pop
mov
sti
pop
push
pushl
pop
hlt
lahf
push
inc
loop
adc
insl
cltd
mov
pop
pushf
addl
outsl
das
fsubr
mov
shll
jnp
sub
in
inc
jg
sub
fwait
and
push
scas
fwait
pop
push
or
jns
dec
test
ljmp
add
ss
fucomip
pop
add
pop
cmp
jle
iret
push
xchg
adc
inc
push
dec
xchg
ficompl
jmp
ficompl
iret
hlt
inc
out
mov
stos
cld
sti
sub
add
mov
xchg
out
jp
ja
lret
jp
and
mov
mov
enter
xchg
pop
test
lods
cld
sbb
jne
add
icebp
mov
jle
neg
push
aas
mov
xor
iret
addb
stc
insb
cwtl
or
pop
fidivl
sbb
scas
repz
cmp
xor
aas
adc
outsl
and
mov
mov
push
fwait
leave
xchg
out
cltd
cmp
clc
clc
mov
rorb
popa
mov
cmpsb
outsb
out
or
ds
or
clc
lods
adc
ror
mov
and
pop
sbb
pop
daa
addr16
push
pop
and
mov
mov
lret
sub
orb
xor
or
push
xor
aam
clc
cmp
push
inc
cwtl
lods
leave
jb
mov
loopne
arpl
inc
push
adc
or
int3
aad
mov
out
or
dec
cld
mov
es
jno
cmp
add
xor
ret
call
pop
gs
std
jae
in
fldt
cmp
call
cmp
sbb
ds
lahf
pushl
inc
xor
mov
xchg
mov
cmp
jl
fstpt
fcomps
ljmp
mov
xchg
orl
mov
insl
clc
xchg
outsl
push
pop
jno
std
sahf
cmc
mov
dec
insb
jb
stos
xchg
rcr
mov
sbb
insb
fisttpl
inc
testl
cwtl
mov
ja
xchg
into
stos
imul
mov
dec
inc
or
cmp
push
clc
in
mov
outsb
fbld
inc
sbb
push
or
vmovmskps
movl
into
jbe
movsb
jne
sar
icebp
fwait
adc
dec
movb
mov
mov
mov
addr16
jo
jecxz
ds
nop
aas
jnp
jl
daa
cmp
sbb
ss
add
mov
sarb
loopne,pt
cltd
stc
clc
xchg
imul
lods
std
jecxz
add
mov
sub
lcall
popf
jecxz
shl
fldcw
rol
data16
fstpl
popa
push
insl
mov
and
sbb
dec
in
fs
mov
mov
jmp
jmp
mov
je
jo
pop
cmp
clc
fucom
dec
inc
add
mov
push
notl
lahf
or
aad
shll
sub
repnz
jmp
mov
xchg
dec
add
and
xor
mov
xchg
arpl
mulps
mov
shlb
add
int
bound
dec
fdivr
pushl
aas
sti
and
sub
inc
pminub
jl
fwait
dec
and
cltd
push
ds
dec
push
cli
mov
lods
lcall
pusha
aas
cmc
test
jo
repnz
and
in
sbb
cmp
cmc
adcb
fistl
aad
adc
mov
aaa
scas
pusha
movsb
pop
sub
adc
subb
xor
es
lock
loope
push
test
and
xlat
movsb
xchg
adc
xlat
aas
and
stos
sub
in
pop
icebp
jmp
push
pop
adc
pop
add
ret
xlat
jecxz
sub
loope
rclb
pop
test
push
xchg
xlat
sarb
xchg
push
cmc
push
fnstcw
popf
decl
popf
add
push
sbb
fstpt
std
fistpl
jns
lock
adc
pop
ds
xchg
xchg
in
push
fnsave
sbb
mov
xchg
jno
dec
gs
testl
or
or
or
xchg
adc
call
jmp
inc
stc
test
lcall
sbbl
int
dec
bswap
push
pop
shll
jle
add
mov
mov
mov
fnsave
push
in
add
icebp
jg
jecxz
push
loop
or
mov
lods
rcr
or
inc
scas
jecxz
inc
push
sbb
les
clc
mov
xchg
pop
mov
sbb
mov
mov
shr
mov
jg
ds
mov
and
mov
scas
data16
mov
add
adc
mov
shll
stos
jecxz
or
jbe
pop
adc
outsb
mov
andl
shrl
pop
and
mov
shrb
inc
inc
outsl
aam
pushf
push
insl
mov
push
out
push
inc
jecxz
ds
push
jbe
mov
xor
in
out
int
idiv
stos
mov
xchg
xlat
xor
arpl
test
push
jg
repz
mov
aas
xchg
add
inc
cmpsl
adc
cmp
or
add
mov
pop
mov
lods
and
into
shll
dec
add
movsb
test
add
pop
push
out
nop
mov
dec
dec
xchg
out
adc
std
mov
cmp
arpl
fs
fwait
inc
repnz
icebp
sarb
cmpsl
and
rcrb
in
int3
mov
jbe
dec
out
push
jle
rorl
rcr
insl
cli
add
xor
dec
add
push
pop
push
push
js
int3
push
pusha
lahf
mov
mov
jg
frstor
movsb
std
sub
inc
mov
add
int
ss
icebp
leave
push
mov
and
lea
pop
outsl
lret
outsb
jo
cli
pop
hlt
rolb
push
pop
xor
push
inc
fcmovnu
xchg
sbb
fs
xchg
clc
ja
sub
jb
pop
dec
outsb
pop
inc
xor
stos
stc
mov
mov
and
push
pop
inc
jl
inc
inc
mov
scas
and
mov
mov
aad
jb
inc
or
adc
xor
and
cmpsb
jne
loop
sbb
mov
add
and
mov
daa
lret
cwtl
push
pop
mov
add
mov
sbb
cld
jge
popa
je
ds
or
ss
sbb
test
fistps
xor
mov
sub
or
mov
add
fnsave
mov
lds
test
shr
add
loope
sahf
lret
jb
mov
jle
dec
ljmp
scas
test
lock
xlat
jno
clc
test
push
insb
dec
inc
mov
testb
xor
mov
and
in
ljmp
roll
mov
or
bnd
mov
pop
rcl
into
jecxz
mov
in
iret
sbb
jns
mov
sbb
mov
and
xchg
lods
jg
arpl
fbstp
pop
push
and
and
mov
sub
sub
add
mov
push
icebp
icebp
or
aaa
xchg
and
sbb
bound
inc
adc
ret
test
hlt
das
jbe
mov
adc
test
outsb
jecxz
pusha
ret
and
out
ja
ss
cwtl
fstpl
inc
or
scas
jno
movsb
cmp
sbb
fs
inc
stc
pop
mov
mov
ds
pop
mov
jno
xorl
mov
pop
mov
repz
cs
cmp
lea
push
pop
pop
out
scas
and
popa
rcr
pushf
push
mov
test
test
xchg
pop
or
fdivrl
jecxz
mov
or
dec
push
mov
jg
jl
add
insl
stos
pushf
pop
dec
jg
or
inc
icebp
xchg
cwtl
lock
sahf
mull
cltd
je
seta
cli
icebp
inc
sahf
icebp
sbb
adc
sub
imul
pop
imul
or
sbb
pop
mov
mov
mov
pop
lds
mull
adc
mov
std
scas
inc
gs
xor
pop
mov
add
sbb
jmp
adc
jns
mov
cmc
repnz
pop
outsl
pop
gs
fiaddl
and
lods
arpl
pop
jae
jg
idivb
adc
daa
adc
mov
lock
xchg
mov
xor
clc
lret
loope
push
jl
std
stos
lcall
jl
push
idivb
lcall
inc
jecxz
scas
mov
jmp
inc
pop
mov
es
call
add
loopne
jge
mov
push
cmp
orl
movsl
mov
test
mov
add
inc
in
push
test
sbb
lock
add
xor
inc
add
lds
and
gs
mov
data16
and
mov
jmp
jle
leave
add
or
in
adc
ss
les
xchg
or
cmp
lds
and
ljmp
test
repnz
sub
icebp
lcall
insb
ss
jne
mov
in
outsb
inc
jne
or
imul
cmp
mov
and
lods
xchg
cmp
xchg
or
js
jo
ljmp
out
cmp
cmpl
push
push
adcb
into
add
mov
pushf
inc
cld
outsb
addl
inc
insb
call
arpl
adc
push
jae
ss
or
push
xlat
bound
inc
loope
or
popf
inc
popf
mov
xor
cmp
inc
popf
xor
fisttpl
in
adc
adc
pop
and
fstps
call
out
jno
sarb
inc
sub
cmp
dec
test
and
or
loopne
movsb
xor
xchg
add
std
orb
jbe
into
movsb
cmp
imul
pop
cmp
sbb
test
mov
loope
in
std
or
sbb
mov
pop
add
pop
mov
push
fdivl
xor
insl
aaa
leave
sub
lds
cmp
test
insb
rorl
sub
icebp
out
aaa
add
add
xchg
fistpll
js
xchg
jp
and
fsubr
push
xchg
jg
or
pop
cmpsl
lds
mov
xchg
sbb
lahf
jg
fisttpl
movsl
adc
mov
insb
sub
xor
sub
or
xchg
pop
test
add
push
pop
add
mov
adc
cmp
leave
mov
mov
cmovae
inc
cmp
lret
inc
cmp
dec
jbe
adc
mov
xchg
lcall
sub
add
into
add
xchg
mov
xor
mov
cltd
sub
pop
fwait
data16
xor
fisttps
mov
icebp
adc
ret
rorb
in
dec
mov
and
push
pop
push
adc
clc
mov
imul
scas
inc
push
out
push
adc
sbb
cmp
pop
mov
jb
rolb
or
loopne
enter
mov
sub
fistpll
mov
cmc
sbb
test
ljmp
xor
push
lods
movsb
leave
shlb
movsl
jg
jo
inc
xor
inc
fs
pop
inc
in
leave
adc
in
inc
inc
fistps
lret
mov
and
mov
mov
lcall
outsl
xchg
jg
icebp
pusha
and
add
pop
xchg
push
sarb
lock
add
pushf
inc
sbb
aaa
loopne
inc
clc
out
pop
inc
sahf
bound
xchg
mov
mov
mov
mov
and
imul
adc
iret
mov
jp
inc
cmp
pop
push
aad
jle
inc
jmp
and
adcl
xor
pop
nop
sahf
inc
rorb
adc
mov
dec
lods
ja
xor
adc
xchg
adc
jnp
pusha
pop
pop
mov
jmp
inc
pushf
call
push
xchg
xchg
sbb
cmc
pop
adc
adc
cmpsb
in
and
roll
pop
fiadds
cmp
mov
lret
movb
stos
add
jne
dec
pop
inc
outsb
mov
push
sub
xchg
mov
sbb
and
xchg
mov
movsl
push
inc
sahf
pop
decl
in
dec
mov
mov
adcl
and
dec
adc
inc
mov
addl
hlt
jmp
and
xorb
jnp
lcall
add
loope
fwait
inc
mov
mov
mov
outsb
add
mov
mov
jnp
xchg
mov
hlt
mov
push
iret
inc
cmp
jbe
or
push
add
jo
aaa
jo
aaa
sbb
shlb
mov
sbb
ds
stos
cli
or
pushf
pushf
ret
xlat
pop
repnz
iret
stos
jmp
mov
out
in
lret
stc
cli
sbbl
fldt
sbb
xor
andb
xor
mov
push
mov
cmp
jmp
out
ljmp
imul
inc
mov
xchg
ds
xlat
add
add
pop
cli
mov
iret
lret
xchg
mov
mov
test
and
leave
in
and
xor
sbb
aad
aaa
lds
cmpsb
xor
dec
ljmp
inc
outsl
jb
sub
pusha
xchg
popa
pop
outsb
mov
cltd
mov
sub
in
mov
push
jno
xchg
add
sbb
movsl
push
sbb
sbb
imul
lods
lods
daa
in
incb
or
lods
jp
mov
push
sub
arpl
arpl
cs
icebp
mov
jno
lahf
pop
hlt
inc
ret
pop
mov
jo
add
ds
ljmp
js
add
orb
enter
mov
fdivrl
in
cmp
add
dec
jbe
lds
sbb
add
jnp
add
sar
loope
or
or
add
cld
inc
outsb
fnstsw
push
inc
push
adc
shrb
xchg
jecxz
imul
sub
fldl
lock
mov
leave
daa
stos
add
aam
cmp
mov
sbb
outsl
cmp
jge
orb
movsl
pop
fidivrs
jo
pop
mov
push
daa
cmp
mov
pop
fidivl
pop
cmp
sarb
push
cld
out
mov
lea
push
add
xchg
mov
pusha
call
jne
arpl
out
mov
outsl
sbb
outsl
outsl
outsl
rcll
mov
clc
lock
inc
fcmovb
sub
push
inc
roll
or
xor
orb
adc
cmovnp
cmpsb
es
ljmp
xor
jbe
rorl
pop
loopne
out
das
pop
loop
pop
ret
mov
test
inc
pop
cmp
pop
adc
add
jg
setnp
add
mov
loop
jb
push
sub
and
add
dec
mov
movsl
out
stos
and
xor
add
mov
mov
cld
mov
int
dec
add
lret
or
adc
les
pushf
fucomi
movl
push
dec
gs
xchg
dec
xor
and
xchg
jg
test
dec
cld
add
hlt
or
pop
movsl
cmp
xor
test
popa
mov
push
ret
subb
mov
xchg
xor
test
inc
cmpb
addb
xchg
iret
and
fistl
mov
push
xor
lret
es
in
int3
push
aas
mov
push
xor
ja
sub
jbe
popf
scas
in
inc
inc
dec
das
jl
cwtl
insb
sub
dec
leave
cmp
popa
xor
ljmp
scas
cs
mov
out
sub
pop
mov
sub
and
or
pop
test
xchg
cwtl
pop
xchg
push
loope
jle
call
adc
jl
inc
mov
mov
push
xchg
xchg
pop
pop
call
lret
mov
adc
out
pop
sbb
bound
mov
pop
ficoml
movsl
add
out
push
adc
imul
cld
out
sub
cmp
jae
mov
stc
dec
cld
cmp
flds
mov
ret
sub
inc
pushf
mov
clc
cmp
or
ss
clc
and
mov
sbb
insb
sub
mov
int3
jmp
sbb
sbb
mov
add
mov
or
dec
imul
xorl
test
xchg
out
lea
stc
enter
mov
mov
mov
lret
mov
jb
mov
out
dec
jne
test
push
mov
sub
xlat
idivb
stos
out
scas
mov
sbb
fbld
shlb
pop
popf
xchg
mov
jl
pushf
xlat
push
outsb
cmp
scas
lcall
sub
outsl
and
dec
dec
adc
jnp
stos
cmp
int3
inc
inc
mov
add
adc
ss
dec
push
mov
ret
aad
dec
push
mov
call
testb
shrl
push
mov
adc
leave
inc
es
cmp
dec
mov
aaa
aas
push
lea
sarb
fmuls
mov
movb
cwtl
popa
repz
test
sub
dec
fstl
aaa
dec
push
call
lahf
std
jne
mov
add
mov
jge
or
shrw
add
sbb
pop
mov
cli
inc
cld
push
xchg
inc
stc
orl
mov
jecxz
ss
hlt
popa
pop
call
xor
push
int
mov
add
push
inc
adc
and
pop
xor
cld
es
pusha
fmull
jle
out
xor
push
lahf
ljmp
je
mov
dec
fs
filds
hlt
mov
jno
shrb
data16
push
dec
popa
pop
push
xorl
cmp
aaa
and
jns
inc
jmp
fisttpl
xchg
cmp
inc
mov
mov
inc
push
cmp
outsl
sbb
dec
ficoml
dec
aaa
xchg
dec
lret
jo
push
mov
scas
mov
outsb
scas
loope
mov
cs
xchg
sbb
nop
popa
movb
hlt
fsubs
inc
xchg
outsl
fidivrl
mov
fidivrl
jmp
xorl
mov
jae
in
data16
xor
or
pmaxsw
cmp
push
xlat
fisttpl
adc
int3
cmpsl
pop
fidivl
mov
cmp
inc
mov
sub
xor
mov
cwtl
leave
pop
mov
inc
insl
enter
pop
fwait
inc
insl
sbb
sbb
popf
loop
pop
iret
and
pop
icebp
xlat
cmp
test
andl
mov
jmp
jno
fwait
dec
gs
dec
pop
fcmovb
sbb
ret
inc
xchg
cmp
jp
loope
or
es
test
stc
or
aad
call
loop
cmpsl
xchg
pop
push
in
add
lock
dec
mov
insb
insl
inc
mov
sarl
gs
into
add
mov
and
in
jl
sbb
and
xchg
fdiv
aam
pushf
sbb
xchg
stos
jno
xchg
cld
inc
pop
push
in
ja
mov
testb
push
lock
dec
mov
mov
fstpl
enter
push
jo
push
xchg
cmc
das
or
outsl
call
loop
in
inc
std
fcmovnb
add
cmp
sti
mov
cld
xchg
xor
jle
imul
mov
lods
mov
xor
sbb
or
stos
in
scas
loop
mov
dec
addr16
add
sti
add
fwait
rcrl
ss
sbb
cmp
add
stos
sub
sbbb
push
jecxz
stc
adc
inc
push
pop
filds
test
shrb
inc
icebp
jge
lea
nop
pop
insb
sub
clc
and
add
and
or
lahf
in
repz
lcall
pop
mov
in
push
repz
mov
imul
jg
std
or
mov
data16
inc
mov
fwait
enter
and
mov
and
icebp
cmpsb
mov
jmp
in
mov
outsl
jmp
push
fistpl
scas
adc
inc
pop
pop
xchg
rol
jne
pop
cmp
jmp
fbld
xchg
mov
sbb
cmp
inc
jae
scas
xlat
mov
xchg
popf
fs
cmpb
test
mov
sbb
add
and
inc
dec
incb
mov
jmp
pop
loopne
outsl
mov
icebp
or
fnstcw
adc
jbe
cmc
ja
xchg
mov
clc
mov
jecxz
aam
cli
fs
outsb
outsb
fst
fistps
add
int3
push
shll
mov
psubsb
pusha
leave
and
sub
loope
lds
addr16
movsb
adc
xorb
push
shlb
add
pop
pusha
cmp
rolb
sbb
lret
hlt
rorb
push
aad
mov
and
sti
jno
icebp
fistpl
push
dec
aaa
test
inc
xor
xorb
and
stos
outsb
dec
push
mov
cli
lods
push
jne
jmp
inc
and
push
shlb
cwtl
pop
cltd
and
sbb
sahf
xchg
push
push
pop
or
or
add
rcrb
test
test
cmpsb
mov
xchg
addr16
mov
push
dec
sbb
fs
and
pop
pop
mov
out
stos
out
fidivrl
mov
lcall
loop
inc
pop
clc
mov
pop
push
xlat
cltd
shrb
fs
push
aad
pop
fldl
cmpsl
sbb
push
mov
cwtl
jne
sbb
lret
fisttps
in
sbb
repnz
dec
inc
and
lcall
mov
push
and
mov
push
mov
movsl
shll
jl
mov
jno
rcrb
je
dec
inc
arpl
add
mov
push
outsl
inc
ret
movsb
loop
inc
out
ret
mov
push
mov
idivb
inc
pop
rorl
pop
enter
inc
test
dec
xchg
in
xchg
loop
push
into
rolb
xchg
test
nop
rorl
add
and
add
lds
jbe
pop
push
fisttpl
les
test
scas
outsl
nop
adc
mov
aas
out
out
fisttpl
jne
xor
cltd
push
movsb
filds
dec
js
lcall
and
push
pushf
fldt
sbb
ss
mov
into
pusha
or
add
cmpsl
js
cmpl
addr16
mov
cmp
in
sbb
lret
xor
push
cmp
pop
mov
js
addb
leave
orb
xor
or
inc
sbb
sbb
pop
imul
or
xchg
lahf
mov
push
fmulp
lahf
sub
mov
sbb
mov
xchg
mov
icebp
outsl
pop
adc
stc
or
cmc
stos
hlt
lea
adc
fidivl
mov
loopne
rorl
jae
pop
sbb
pop
pop
subl
sbb
adc
and
mov
outsb
mov
cmp
jle
lods
mov
cli
sub
outsb
mov
loope
mov
cmpsb
add
pop
cld
test
fcmovnu
ja
vmread
movsb
and
adc
fimull
daa
push
leave
cmp
ficompl
lds
mov
cli
movsl
lea
cmp
mov
mov
mov
xor
sbb
add
fbstp
daa
js
arpl
jne
pushf
fwait
jp
das
and
sti
and
jg
lods
cmp
test
push
lods
aas
sub
int
add
mov
inc
xchg
add
mov
or
cmp
roll
pusha
push
dec
movsl
sti
orl
or
jae
mov
fadds
dec
mov
mov
cmpsb
mov
and
mov
mov
and
mov
pop
sbb
loop
cmc
cmp
xchg
sbb
cld
hlt
push
xor
fbstp
mov
or
mov
daa
xor
lock
sti
add
test
ss
xor
xor
aas
and
sub
jl
aaa
or
add
inc
jno
sets
lock
out
pushf
inc
sbb
and
int3
mov
and
or
clc
mov
cmp
scas
das
std
xchg
xor
out
sbb
sbbl
push
sahf
jge
cmc
shrl
subb
add
and
jecxz
inc
enter
loopne
and
xchg
aaa
inc
dec
dec
aas
movsl
jmp
pop
inc
inc
imul
das
jnp
inc
fucomp
pop
loope
mov
cmp
mov
clc
xchg
cld
aad
nop
rol
ds
fmull
push
mov
ret
mov
inc
cmp
mov
inc
mov
sbb
sbb
dec
incl
lahf
je
cmp
or
lods
and
jg
mov
add
add
icebp
lea
outsl
cmp
pop
sbb
and
dec
aam
push
mov
sbb
xor
inc
sbb
decl
mov
fistl
add
outsb
loope
loop
or
mov
adc
xor
sub
push
loopne
cmp
sbb
mov
iret
mov
cmc
mov
jo
adc
inc
sbb
push
mov
mov
inc
insl
ret
xchg
clc
fbstp
cs
mov
aas
mov
iret
jbe
mov
push
popa
aad
cltd
lock
mov
nop
iret
in
iret
data16
pop
push
pop
add
cld
pop
jne
fs
outsl
cmp
jmp
ds
imul
lret
divb
cmp
pop
mov
sbb
or
mov
sbb
push
push
insl
jg
decl
loop
mov
jle
mov
jg
inc
lods
lods
std
inc
faddl
popf
fisubl
test
cmc
or
bswap
sbb
loope
je
ret
outsl
cmp
mov
mov
in
stos
inc
ss
sub
in
cmp
push
inc
pop
mov
or
adc
bound
hlt
pop
mov
mov
jp
mov
ffree
inc
mov
jmp
mov
pop
cld
xchg
mov
addr16
rorb
outsl
movsl
ret
pop
sbb
xchg
addb
scas
mov
fadds
dec
lods
mov
ds
cmp
loope
inc
mov
decl
adc
adc
daa
mov
sbb
das
inc
aaa
jl
or
in
add
lcall
jmp
js
out
inc
daa
cmp
xor
sbb
xchg
xchg
jge
das
jge
shl
jbe
dec
adc
adc
fdivs
push
sarb
or
hlt
cmp
or
mov
lret
xor
mov
test
scas
xchg
jnp
lcall
push
cmp
imul
scas
mov
mov
in
add
test
push
mov
add
int
cld
pop
pop
pop
mov
fadds
push
sbb
vmaxss
inc
xlat
iret
jecxz
lds
movsb
mov
test
and
push
js
inc
in
les
rolb
inc
roll
aam
ja
mov
dec
imul
imul
repz
adc
repnz
adc
jmp
mov
mov
push
jno
data16
xor
sbb
jmp
pusha
and
xor
or
loop
aad
ja
and
fabs
cmpsb
xor
popa
and
je
loopne
cmpsl
test
and
pusha
mov
bound
mov
ja
pop
je
lret
scas
push
imul
push
sbb
push
mov
pop
jl
adc
add
add
movsb
dec
loopne
mov
mov
lahf
call
dec
int3
aam
jg
lock
pop
outsb
fwait
pushf
shll
inc
movsl
imul
add
add
cmpsl
or
dec
xor
mov
xchg
sbb
or
inc
push
xor
jle
fsubl
js
int
add
push
cmp
sbb
and
mov
xchg
adc
push
push
decl
cs
cmpsl
ficoms
push
shl
outsl
mov
jo
stc
inc
cmpl
ret
fidivrl
mull
inc
jp
push
lea
inc
jecxz
lods
and
add
pop
push
dec
cmp
jb
pusha
push
test
pop
lea
aaa
pop
xor
pop
xor
sub
mov
cli
push
add
test
pop
adc
aad
or
adc
nop
imul
lea
lret
mov
insl
add
enter
xchg
add
jmp
out
dec
pop
cld
hlt
adc
xchg
leave
sbb
adc
fdiv
call
pop
pop
mov
ds
cmp
push
mov
clc
push
jae
adc
notl
test
aas
or
push
inc
inc
movb
add
in
loop
or
pop
cmp
add
or
test
fwait
mov
jne
int3
mov
jns
pop
mov
clc
dec
inc
ret
dec
push
movl
inc
test
sub
mov
lret
fildll
rcrl
das
jno
inc
adc
xchg
out
outsl
daa
xlat
xchg
fnstenv
push
and
sub
inc
inc
add
xchg
cmp
iret
jo
adc
jne
test
and
mov
mov
in
pop
dec
mov
pop
scas
mov
sbb
lock
xchg
sbb
je
into
fcoml
loope
pop
fildll
xchg
or
dec
and
xor
test
rcll
push
jecxz
mov
cmp
xor
test
jle
cs
sub
dec
jmp
add
adc
and
push
add
xchg
sbb
adc
xchg
fsubl
or
clc
into
dec
sub
testb
push
mov
push
cmp
cmp
jne
mov
pop
mov
jb
ret
icebp
sbb
mov
sbb
sub
and
add
mov
cmp
mov
mov
mov
push
leave
popa
pop
adc
aam
push
imul
mov
sub
mov
insb
fildl
fidivl
mov
psrlw
adc
inc
adc
dec
mov
movsl
jae
pop
dec
sbb
adcl
pop
push
inc
aaa
rorb
cltd
push
xchg
test
push
in
clc
insl
pop
xchg
bound
pop
and
cmp
inc
add
inc
push
mov
push
add
das
jge,pn
mov
jg
dec
cmpl
or
mov
aad
pmaxsw
dec
adc
andl
data16
jbe
pop
sbb
mov
adc
and
stc
imul
jnp
lahf
inc
pop
cmp
mov
cmc
mov
or
int
sti
mov
inc
movsb
popa
mov
sbb
aad
cmc
or
arpl
and
or
mov
outsb
push
xor
inc
mov
in
es
mov
jl,pn
mov
mov
cmpsb
mov
out
dec
adc
je
movsb
push
xchg
ltr
nop
lds
xor
dec
jge
testb
test
and
aad
ja
cmp
decb
lcall
cmp
adc
cli
sub
xlat
test
jge
pop
and
add
jle
fwait
sub
mov
stc
jo
outsl
jo
stos
xor
mov
mov
es
mov
jge
pop
mov
orl
test
mov
xchg
add
xorl
mov
push
mov
loope
push
pop
loope
loop
rcl
mov
int
pop
aas
push
adc
repz
dec
fldenv
inc
pop
cmp
add
dec
lahf
and
mov
sub
add
cmp
cmp
fisttps
out
inc
mov
lahf
jne
mov
pop
pop
out
popf
mov
inc
insb
adc
leave
movb
cmp
jge
mov
pop
xchg
cmp
insb
cltd
add
mov
pop
icebp
inc
mov
aas
jb
enter
jne
fcmovu
stos
cmpsb
inc
pop
insb
and
xor
stc
fistps
lahf
es
adc
mov
sbb
adc
addr16
add
mulb
jo
sbb
shlb
xchg
fidivl
lock
xor
loopne
jnp
pusha
pop
shll
push
mov
pop
mov
shl
adc
or
mov
scas
inc
ds
shrl
sub
xchg
and
shrl
jb
adc
pushl
imul
xchg
push
lcall
test
cmc
pop
adc
pop
cs
hlt
or
push
int3
xlat
inc
jle
pop
mov
movsb
adc
fstp
addr16
lcall
push
add
sbb
xchg
ficompl
push
ss
sbb
adc
jo
xchg
mov
and
lds
popa
testb
fld
push
jp
cmp
popa
inc
add
or
push
inc
jle
aad
mov
or
sub
divl
add
xor
and
jecxz
add
test
adc
inc
mov
es
into
test
push
push
daa
lds
popf
or
jle
mov
daa
stos
aam
fldcw
dec
pop
shr
mov
aad
xchg
mov
sub
pushf
mov
pop
cmp
movl
icebp
adc
jp
and
bound
xchg
mov
aas
add
arpl
and
add
pop
mov
repz
lds
lret
add
hlt
jg
out
lods
rcrl
xchg
jae
xchg
lock
cmp
add
icebp
leave
pusha
push
xchg
ljmp
clc
pop
dec
movsb
inc
fstpt
pop
mov
insl
std
rcl
das
or
in
xlat
and
sbb
subl
mov
pop
fldl2e
enter
test
push
cmpsl
add
add
adc
cld
inc
in
inc
mov
or
shrb
xorb
jb
add
adc
pop
jo
ret
out
dec
sub
sbb
mov
cld
test
add
inc
mov
mov
cwtl
cmp
std
jg
dec
sbb
add
mov
jp
jp
xchg
cs
sub
rcrl
xchg
out
adc
addb
insl
loope
pop
hlt
loopne
sub
lcall
lock
jo
scas
aad
test
push
rcrl
jle
fstl
mov
mov
hlt
xor
fcoml
ja
xlat
and
dec
lock
rcrb
jne
ss
xor
in
pop
scas
ss
sub
xor
mov
xchg
cld
roll
pop
jbe
int
mov
repz
pop
test
movsb
filds
scas
xchg
pop
addb
pop
push
cmp
movsb
fistps
clc
les
cltd
fs
in
stos
out
js
rorl
test
mov
rolb
adc
xor
and
incb
or
aaa
insb
pop
mov
cld
push
or
mov
orb
or
test
lods
push
sti
sbb
mov
push
sahf
xchg
stos
pop
or
stos
pusha
aas
hlt
pop
add
incl
xlat
or
xlat
adc
das
in
cli
stos
sub
and
xchg
push
push
adc
lea
mov
jnp
imul
or
xor
sub
cli
hlt
fwait
push
mov
cmpsl
dec
add
enter
cmp
push
jle
ss
add
xchg
repz
pop
add
sti
sbb
jnp
data16
pop
mov
lea
xor
pop
std
inc
dec
scas
inc
outsb
subb
loop
push
push
pop
pop
mov
adc
fadd
sahf
add
adc
lock
call
adc
les
adc
loopne
movl
loop
aas
push
repz
and
inc
add
add
cmp
mov
and
push
push
cmp
fidivs
dec
das
daa
shlb
dec
cmp
cmp
add
test
sub
push
xchg
clc
lods
xchg
jae
xor
and
int
rcrl
je
loopne
stc
bound
xor
jbe
fs
adc
stos
lcall
sti
xor
es
pop
ret
xchg
mov
jp
mov
dec
cld
cmp
sbb
mov
adc
outsb
or
test
loope
aam
pop
in
adc
stos
ds
ret
jecxz
rorb
xor
test
les
sub
sub
das
push
mov
pop
xchg
or
sub
sub
push
cmpsl
test
loop
pop
into
xor
push
pop
adc
imul
sub
jle
adc
lcall
mov
dec
loopne
inc
or
add
jnp
sub
jmp
cmp
lret
mov
cmc
decl
xor
jmp
sub
mov
rol
je
enter
test
push
fidivl
push
push
mov
in
mov
pop
push
lahf
cli
add
cmc
mov
xlat
inc
cmp
movsl
and
shrb
or
mov
xlat
pinsrw
mov
cmc
sub
faddl
mov
adc
andl
mov
fnstsw
push
nop
add
cmp
fwait
mov
les
jle
out
addr16
dec
fstpl
inc
sbb
inc
call
push
bswap
std
add
pop
xchg
push
sbb
and
xchg
pop
cmc
clc
stos
pop
xor
imul
jne
fwait
test
repz
orl
or
cwtl
clc
mov
xor
sbb
jae
movsl
fninit
jp
and
jno
lcall
xor
repnz
xchg
cmp
cmpsl
mov
adc
ljmp
mov
push
or
fistps
or
lret
rorb
push
fistpl
test
xchg
outsb
mov
sbb
cmpsl
cs
adc
mov
imul
jge
outsl
imul
fsubs
push
xor
mov
mov
js
mov
arpl
popa
rcll
inc
pmuludq
inc
sub
outsl
incl
xchg
stc
clc
xor
xchg
inc
scas
hlt
insl
loope
mov
in
shrb
iret
adc
add
add
push
icebp
mov
jle
dec
or
lcall
stos
add
jg
and
fcomps
loope
jmp
sub
push
shr
jmp
push
cld
mov
scas
push
ret
mov
fistl
js
adcl
dec
ja
test
and
lret
ja
outsl
and
cmp
sbb
sbb
jmp
sbb
jno
push
repnz
push
jecxz
outsb
sub
mov
pop
js
inc
push
pmullw
jns
xchg
icebp
jo
cmp
stos
and
pop
fs
pop
cs
jbe
sti
int
sbb
out
and
les
jg
ljmp
add
imul
stos
mov
adc
or
lods
add
icebp
pop
ss
add
dec
or
mov
mov
cwtl
sub
dec
sbb
mov
push
hlt
imul
mov
push
jmp
add
push
sub
push
lds
cmpsl
dec
iret
inc
out
scas
jno
ret
dec
in
mov
icebp
inc
xor
shlb
inc
cs
inc
xlat
xchg
pop
fstpt
adc
lret
sbb
dec
or
jae
mov
clc
shlb
stos
lret
mov
cmpsb
mov
dec
pushf
lock
loope
jne
jbe
js
push
sub
and
loope
push
lcall
adc
fstpl
inc
inc
mov
adc
pushf
mov
or
sbbl
xorl
shrl
mov
push
ret
and
ret
bound
icebp
dec
adc
pop
cmp
cmc
lret
imul
enter
shl
adc
add
lds
push
cltd
test
pushl
dec
mov
ljmp
movsl
ja
push
jmp
and
inc
push
ficoml
jo
in
pop
sub
sbb
je
imul
test
stc
push
mov
sbb
addl
or
xchg
int
call
push
mov
mov
pop
dec
xor
hlt
inc
jo
jmp
aaa
popf
in
bound
cmp
add
hlt
xchg
iret
int
push
scas
mov
dec
ljmp
cmpsb
sbb
and
fildll
ret
sbb
jns
cmp
call
dec
cmp
sub
jg
loopne
or
loopne
mov
ret
int
ljmp
add
lea
ret
add
and
dec
adc
mov
fsubp
js,pt
sbb
ljmp
syscall
and
insl
inc
mov
dec
out
and
sbbb
add
pop
cmpsl
aam
and
test
cld
push
xor
rclb
jecxz
cli
mov
ljmp
add
pop
cmp
inc
int
fwait
mov
or
fucomp
adc
xchg
pop
imul
scas
mov
jnp
scas
push
mov
mov
add
bound
mov
daa
cmp
sarb
test
xor
sbb
aas
mov
movsb
xchg
xchg
mov
shr
insl
inc
mov
fwait
gs
jmp
jge
and
sbb
inc
mov
aaa
mov
rol
std
push
shl
sub
dec
push
data16
cld
rcll
outsl
jnp
inc
mov
mov
pop
out
inc
pop
push
shll
pushf
jle
int3
pop
add
ret
daa
pusha
loope
sub
mov
insb
int
aad
and
mov
cmpsl
loop
mov
movb
call
dec
addl
insl
dec
out
sub
mov
pop
js
sbb
add
mov
insl
push
das
and
sahf
test
insl
push
in
dec
cwtl
mov
rcl
lcall
xor
cltd
sbb
outsb
pop
jne
adc
mov
xorl
sti
jo
ja
aas
adc
ficomps
mov
fidivl
lcall
mov
mov
mov
push
mov
add
mov
push
sub
lret
mov
add
outsl
adc
mov
outsl
inc
dec
xor
adc
loop
insl
shll
ffree
xchg
xchg
fcmovne
call
in
add
sbb
nop
push
scas
dec
out
or
mov
jb
cmp
fdivrl
and
mov
inc
push
fsubrl
cmpsb
jb
push
in
fs
adc
aam
jmp
cmp
hlt
bound
call
sbb
shlb
add
fs
shrl
push
xor
loopne
mov
adc
xor
test
mov
xor
int3
mov
movsl
jbe
mov
push
mov
faddl
sub
btl
mov
ret
rcrb
imul
xor
sbb
cmp
and
in
clc
mov
movsb
jge
stos
push
incl
jbe
push
iret
sub
adc
test
xchg
sbb
mov
push
and
popa
mov
mov
pop
nop
ss
shlb
cmp
xor
dec
push
lock
push
fwait
sbb
jmp
loope
mov
sbb
xchg
out
divb
adc
sbb
icebp
icebp
xchg
mov
in
ret
sub
bound
and
pop
inc
aaa
lock
cmp
test
imul
adc
inc
ljmp
sub
cmp
out
rolb
rorl
push
sbb
clc
shl
scas
push
sub
aaa
arpl
addb
pop
dec
jne
push
adc
out
adc
dec
rorb
ljmp
int3
jnp
or
roll
jne
or
inc
mov
sahf
inc
mov
jmp
jecxz
mov
data16
and
inc
rcl
xchg
and
xchg
cmpsb
mov
sub
mov
sbb
add
scas
cmp
push
cli
fildl
adc
shrb
mov
pop
pop
lods
jecxz
hlt
icebp
in
push
std
and
inc
mov
sarl
enter
aas
je
sbb
pop
sti
add
adc
add
subb
mov
data16
lock
pop
mov
js
fistpll
lods
pusha
mov
lds
lods
fsubp
or
testb
mov
not
inc
sbb
pop
push
cmpsb
test
cmc
dec
das
jbe
fwait
lea
push
vpcmpgtw
push
iret
ret
sbb
lret
in
movntq
cld
add
add
popa
addb
push
sbb
loope
fcomi
inc
push
adc
stos
pop
jl
jge
jl
mov
pusha
fwait
mov
add
fidivs
jns
xor
jbe
in
mov
pop
sub
sub
xabort
add
fisubrs
test
sar
movsl
push
pop
pop
jb
sbb
mov
out
fnstenv
test
sbb
mov
mov
jno
mov
mov
outsl
mov
pop
xor
mov
stc
test
cmpsl
dec
fcmovnbe
sbb
inc
adc
fcomps
push
xor
sub
and
out
orb
lret
fwait
and
rep
mov
xchg
xchg
push
jecxz
inc
mov
jg
and
andl
push
pop
lahf
popa
push
imul
push
cmpsb
test
or
xchg
push
aaa
jns
push
addr16
lea
xor
mov
xlat
mov
test
shl
and
add
adc
push
popa
rcrl
pusha
ja
test
push
or
mov
push
jp
lcall
jbe
cltd
outsl
cli
mov
pop
mov
pop
and
rcr
sti
pop
inc
sti
push
mov
xlat
mov
std
jp
xchg
outsl
and
movsl
xor
sbb
aaa
push
incl
inc
dec
fmuls
fsub
push
jle
test
add
jo
mov
xchg
adc
mov
lods
lret
jb
xlat
xchg
movsb
call
fst
test
cmp
pop
movsb
pcmpeqd
or
xor
pop
aas
insb
out
cmpsl
arpl
std
shlb
cmp
add
sbb
enter
push
fnsave
xchg
jge
aam
stc
add
pushl
jge
adc
ljmp
stc
lds
inc
cmp
jmp
icebp
mov
cmp
and
or
mov
roll
notb
ret
sbb
sub
pop
test
pop
pop
adc
mov
xor
mov
push
add
filds
cmpsl
cs
sti
jo
je
mov
dec
xor
add
popf
mov
sub
mov
dec
aam
xor
hlt
jo
outsl
mov
jb
cmp
xor
mov
lahf
dec
mov
dec
add
xor
pop
stos
mov
addb
iret
scas
mov
cmp
cmp
std
es
mov
addr16
jl
notl
add
mov
shlb
adc
xlat
jl
push
xchg
mov
dec
dec
into
std
xchg
jo
mov
movl
aam
jae
js
dec
push
xorps
ret
fcompl
sub
out
btc
mov
or
sbb
paddusw
jae
jle
loop
pop
adc
sub
lahf
push
fs
ljmp
dec
push
fistpl
or
inc
cmpb
loop
and
sbb
out
test
mov
xchg
add
cmpsb
jg
rcll
sbbb
call
sahf
jle
hlt
mov
gs
sub
repz
and
push
xor
loopne
aas
cld
mov
mov
subb
mov
push
repnz
pop
sbb
jp
or
jbe
inc
rcr
sahf
and
sub
pop
add
sbbl
sbbb
iret
mov
jno
mov
clc
cltd
jno
loop
push
sub
cmp
popf
imul
dec
xchg
fdivl
sbb
outsl
or
cmp
enter
push
gs
shll
cmpl
adc
test
in
aam
cmp
ds
mov
int3
aaa
pop
cli
or
in
es
jle
cwtl
out
jmp
mov
pop
lods
sub
mov
cmp
mov
aas
and
sub
test
repz
int3
mov
insl
dec
ret
dec
dec
push
jo
aam
inc
scas
lock
mov
mov
push
xchg
test
nop
adc
ret
mov
ret
adc
push
fucomp
lcall
or
repz
movsw
xchg
cmp
pop
adc
and
adc
sub
mov
mov
pop
or
adc
adc
and
adc
and
adc
cmp
and
and
inc
inc
push
test
cli
inc
add
adc
and
mov
inc
loopne
mulb
fists
push
cli
push
lock
dec
popa
push
jns
lcall
xor
es
adc
and
aad
or
or
ljmp
cmp
add
mov
popa
sahf
pop
pop
mov
mov
cld
jmp
sahf
push
test
dec
mov
push
cmc
sub
je
mov
inc
insb
cmpsb
and
push
xor
xlat
adc
inc
push
lret
mov
pop
mov
and
addl
fwait
sbb
mov
in
movsl
pop
out
pop
cli
ljmp
push
cmpsb
pop
xchg
and
mov
movsl
in
inc
xor
mov
loope
sarb
scas
hlt
sub
mov
das
adcl
or
popf
sub
insl
and
lods
sti
cli
adc
pushl
sbb
cwtl
push
jle
lock
arpl
mov
add
push
sbb
jmp
loope
stc
dec
cmpsl
mov
div
lock
sub
data16
xor
pusha
outsl
xchg
xchg
add
mov
out
xchg
cmp
pop
jmp
mov
push
lret
out
push
mov
dec
push
xchg
xor
aad
out
cmpsl
ret
mov
ljmp
cmp
sbb
pop
cmp
js
ja
mov
std
jg
push
mov
cmp
aam
xchg
and
fisubrl
test
pop
pop
addr16
xor
out
leave
mov
xchg
pop
fiaddl
popa
shll
mov
addr16
aas
ljmp
inc
scas
cmp
dec
ds
pop
fbstp
xchg
dec
pushf
mov
cmp
jmp
dec
cmp
xor
pop
dec
dec
out
xchg
les
and
jp
iret
pop
cltd
data16
mov
bound
mov
mov
sub
inc
idivb
push
inc
lods
cli
decl
mov
pop
dec
lahf
lret
add
push
in
jle
push
fucomip
sub
ds
mov
test
adc
loop
jmp
ljmp
jge
ds
movsb
movsb
nop
add
or
aam
in
dec
cwtl
decl
pusha
mov
test
pop
stos
inc
pop
sbb
pop
ss
in
xchg
pop
ss
cmpb
pop
cli
incl
push
xor
jb
dec
xchg
enter
jle
sub
decl
ljmp
js
xchg
es
popa
cltd
mov
dec
sub
inc
mov
aam
pop
outsl
cmp
or
pop
add
jae
sar
repnz
xor
and
xor
ljmp
add
sub
pushl
outsb
loop
sub
push
nop
cld
or
xor
jae
mov
fsubl
pop
cmpsl
incl
cmp
ret
mov
xchg
repnz
stos
incl
hlt
pop
out
dec
mov
jae
xor
das
inc
jecxz
pop
xor
jg
decl
or
mov
aaa
adc
mov
es
pop
or
test
add
push
inc
in
mov
sbb
jne
sarl
andb
jg
jmp
dec
push
push
adc
in
dec
cwtl
insb
mov
jmp
push
aas
dec
jl
cli
pushl
mov
ds
out
fsub
cwtl
pop
lret
or
xchg
mov
dec
ljmp
inc
jnp
sarl
lods
cmc
repnz
add
rclb
pushl
fcoml
pop
mov
rolb
icebp
enter
xchg
ret
je
sahf
into
push
shlb
negb
mov
cmpsb
push
mov
cmp
pop
pop
or
sbb
cwtl
ljmp
push
add
inc
mov
pop
push
fidivl
jb
mov
mov
pusha
or
call
stos
mov
inc
cmp
push
stos
sbb
popa
mov
ljmp
in
pop
popa
xchg
out
es
sbb
mov
cmp
leave
mov
movsb
sub
push
jno
or
lock
or
testb
jno
movsl
clc
adc
in
ljmp
popf
ret
inc
icebp
dec
pop
scas
push
mov
fsubrl
dec
lahf
pop
in
sbb
call
adc
clc
ret
push
int3
xor
js
std
out
fldt
adc
and
scas
inc
jo
fnstsw
je
jo
fcomip
cmpsl
mov
jae
push
mov
cmpsl
push
hlt
inc
jge
mov
outsl
push
inc
daa
ds
sbbl
cli
mov
loope
jmp
jp
xchg
jecxz
or
sub
test
pop
imul
ds
jg
sub
test
sbb
enter
xor
cmp
or
and
mov
cwtl
addr16
clc
dec
mov
ror
stos
mov
xchg
pop
pop
jle
movsb
cli
pop
cli
das
cltd
push
stc
jbe,pn
dec
xchg
adc
sub
or
shr
sarb
fildll
sub
cs
add
repnz
pop
mov
pop
pop
call
push
jmp
xor
jg
nop
sarl
movsl
imul
flds
fwait
adc
xchg
ljmp
rcr
xor
in
inc
or
adc
insb
jbe
loopne
incl
xor
sbb
inc
mov
sub
jmp
sbb
inc
repz
call
cltd
adc
inc
push
orl
out
roll
push
movsl
int3
hlt
jmp
fbstp
cmp
call
test
dec
jge
xor
and
rcrb
decb
lods
in
cld
ljmp
push
adc
xor
push
fs
stos
mov
dec
arpl
cld
decl
and
add
xchg
mov
cmp
hlt
xchg
or
mov
inc
mov
and
xor
pop
lahf
push
outsl
cmpsl
icebp
call
push
dec
xchg
stos
mul
out
pusha
push
inc
test
outsb
cmpsl
sti
clc
mov
movsb
stos
cmpsb
jge
test
cwtl
in
mov
loop
sbb
sbb
pop
insb
xor
pop
xchg
and
cmpsb
cmp
mov
dec
test
mov
inc
lcall
jecxz
lods
add
call
shll
mov
xor
stos
loop
cmp
inc
mov
sbb
test
arpl
into
bound
sbb
cmp
decl
icebp
push
fwait
cltd
push
xchg
sbb
cli
out
arpl
sub
lods
test
ja
call
js
push
or
jp
icebp
dec
loope
mov
inc
loope
lea
mov
andb
sti
movsb
out
fcomps
cli
jbe
push
sub
mov
jg
loop
mov
mov
in
jg
pop
test
mov
push
int
sti
cmp
push
movsb
add
rcll
jg
call
mov
sbb
das
in
xor
mov
sub
add
loop
in
test
rorb
xchg
mov
inc
aaa
mov
push
scas
loopne
xlat
push
loope
jmp
add
outsl
ret
push
sub
add
dec
addr16
test
pushl
cmp
sub
fimull
push
inc
xchg
add
shlb
in
iret
pop
mov
mov
inc
leave
lea
mov
out
jo
lods
ss
ds
jmp
pop
xor
inc
insl
iret
add
arpl
pop
add
push
incl
mov
jge
pop
push
add
xchg
adcl
lods
sar
xchg
clc
mov
jle
mov
insl
jl
xchg
cmp
mov
or
iret
ss
popa
cmp
test
inc
or
hlt
and
mov
fcoms
cld
jbe
aaa
clc
ret
and
sub
mov
shll
jge
negl
into
dec
enter
xor
out
rclb
andb
jmp
cmp
adc
ljmp
cmpsb
repz
das
cmp
jmp
jecxz
shrb
das
or
lret
or
movsl
lcall
out
inc
or
dec
sbb
insl
mov
das
rolb
mov
xchg
fstl
push
pop
daa
jnp
inc
ficomps
sbb
pop
cli
pop
mov
int3
push
push
or
pop
rolb
adc
aas
lret
cmpsl
sub
jge
push
xor
inc
inc
fwait
pop
and
call
clc
decl
into
push
mov
xor
pop
das
jns
push
dec
jle
push
sbb
pop
popl
add
pop
pop
sub
adc
mov
sbb
aaa
cld
lahf
in
hlt
das
jmp
fdiv
dec
ljmp
in
add
dec
js
mov
jmp
sti
insb
xchg
sbb
call
and
sub
or
push
repz
mov
pop
inc
pop
bound
jb
ljmp
pop
dec
dec
adc
popa
mov
push
bound
popa
shl
popa
loop
aaa
xchg
lea
cmc
xchg
dec
inc
sbb
fimull
pop
or
fcmovne
call
mov
pop
pop
xchg
xor
lea
push
test
incl
fdivrs
out
sub
gs
cmc
scas
adc
dec
xor
sbb
inc
subb
ljmp
jb
xchg
nop
andl
fsubrl
xor
cmp
ss
addl
jl
jmp
jge
aam
lcall
xor
pop
lods
mov
adc
sub
decl
push
or
jecxz
in
jno
add
leave
inc
nop
mov
jg
jns
fs
lcall
cmp
call
mov
ds
mov
jae
lcall
repnz
add
movsl
ret
mov
lret
movsl
lcall
cltd
mov
lods
add
mov
cmp
fisubrl
inc
mov
mov
xchg
lret
hlt
rcr
xchg
jmp
mov
xchg
aad
es
add
jne
stos
lret
jge
insl
xchg
gs
insl
call
pushf
adc
add
jl,pt
imul
dec
lahf
repz
mov
lock
lcall
incl
mov
pop
sahf
call
inc
inc
aad
call
xor
jmp
incl
sub
mov
cmp
push
mov
movsb
and
mov
arpl
ss
incl
incl
pusha
test
ljmp
stos
pop
stc
and
dec
fs
incl
out
xchg
out
xor
xor
imul
sbb
sub
lcall
rorb
or
loop
sub
xchg
loop
push
lea
mov
decl
mov
add
sub
dec
test
mov
push
or
sbb
push
push
imul
jge
and
repz
jb
fadd
xchg
inc
cli
pop
push
int3
cmp
jne
fisubs
push
mov
data16
dec
push
dec
bound
cmp
outsl
incl
ds
adc
sub
and
dec
orl
lea
cmp
jg
call
mov
jae
xchg
fcmovne
lahf
cld
sahf
fadd
gs
adc
jg
js
and
hlt
icebp
aaa
cltd
aaa
repz
pop
sbb
pop
cli
lcall
pushl
icebp
mov
sahf
or
xchg
lcall
incl
add
hlt
lahf
iret
out
lock
jbe
orb
pushl
cmc
add
inc
mov
adc
arpl
lret
int3
ret
sbb
das
std
xor
mov
fldenv
ficoml
outsl
cld
decl
lds
add
dec
aas
stos
adcl
and
nop
xlat
mov
sub
lcall
sbb
sbb
shrb
xorb
int3
ret
out
daa
and
pop
cli
adc
repnz
mov
cmpsl
xchg
cli
stc
pusha
mov
cmp
push
xchg
pop
lret
dec
pushl
stos
std
cmp
shlb
push
imul
xchg
rorb
outsl
outsl
hlt
lods
insl
scas
es
jae
pop
cmc
add
or
call
dec
shll
ja
mov
enter
icebp
in
gs
pop
cmpsb
mov
jg
call
adc
in
or
sub
stc
inc
loop
es
pusha
add
jg
adc
sub
inc
push
inc
dec
mov
loope
sbb
cmp
jecxz
xchg
xor
or
pop
je
pop
std
push
out
add
dec
pop
cld
ss
jg
enter
insl
add
cmc
jo
ret
cwtl
inc
jo
add
jne
mov
pop
cli
push
addr16
push
push
dec
cmp
jg
or
inc
movsl
sar
sbb
push
sub
mov
xor
jle
stc
cmpsb
into
and
pop
pop
cli
pop
lcall
test
mov
lcall
mov
or
dec
sbb
cmpsb
mov
out
add
dec
xchg
adc
cli
inc
cld
js
subb
sbb
iret
jnp
sbb
ljmp
outsb
mov
pusha
jno
sahf
arpl
ja
pop
fadds
mov
lcall
adc
push
mov
in
inc
mov
outsb
fsts
aaa
and
and
jle
incl
scas
cmp
test
dec
sbb
sbb
jo
pop
sbb
mov
popa
cmpb
jle
jbe
jp
lcall
imul
outsl
cmc
mov
mov
pop
mov
push
adc
sub
xchg
stos
push
cmpsb
cli
push
incl
les
sbb
sbb
mov
lods
dec
outsb
cld
ljmp
aaa
xor
add
ja
jmp
hlt
cmp
jmp
jno
ljmp
popa
iret
iret
stc
std
push
push
repz
push
mov
aaa
add
sbb
stc
dec
fs
mov
mov
pop
push
lcall
lock
ljmp
leave
and
fnsave
nop
fisubs
outsl
call
dec
mov
les
inc
add
mov
push
imul
push
cli
sbb
imul
push
lcall
dec
int
scas
jne
push
loope
shrl
mov
in
sub
xor
decl
jmp
out
mov
xor
ret
pop
adc
mov
mov
adc
mov
pop
or
sub
jae
push
and
sarb
dec
adc
mov
in
in
sub
pushl
sub
repz
in
sub
clc
push
mov
add
loope
ficompl
or
ret
or
insb
fisubs
lcall
push
push
mov
pushf
jmp
add
jo
or
adc
call
ljmp
add
cmpsb
push
push
int
xchg
cmp
ficomps
idiv
lret
xor
push
icebp
xor
fldt
or
push
int
mov
mov
decl
add
jg
shrl
es
test
aam
lea
sbb
pop
mov
cmp
hlt
or
decl
pop
fwait
std
popf
scas
add
mov
das
inc
dec
push
loope
add
sub
sarb
mov
sbbb
xchg
imul
xor
pusha
mov
sub
bound
outsl
aaa
push
insl
add
mov
jnp
cli
push
das
incl
add
ds
in
push
test
mov
sub
dec
lahf
es
inc
mov
pop
clc
cmp
xor
and
sub
outsb
or
hlt
mov
push
mov
xchg
jmp
mov
and
xchg
mov
add
jg
jg
inc
push
jb
std
inc
sub
cmc
imul
aam
pop
loopne
cmpsl
push
repz
jae
mov
inc
jl
test
call
mov
lods
push
mov
or
aam
dec
sub
aaa
sbb
call
mov
insb
ret
pop
jecxz
outsb
xor
popl
decl
ficomps
mov
enter
inc
or
xlat
xchg
jae
or
xchg
pushf
stc
in
push
bound
jmp
jnp
jl
mov
outsl
mov
xchg
lea
aam
jg
or
test
mov
mov
sbb
jae
sub
mov
js
popa
jnp
in
testb
call
ds
jne
fwait
cmp
pushf
loopne
cmpl
int3
jecxz
pushl
cli
or
xchg
rorl
adc
and
je
xor
pushl
clc
or
mov
mov
xor
lahf
stc
push
repz
and
pop
loopne
push
cmpsl
dec
push
hlt
mov
fcompl
mov
lcall
lcall
xchg
rcrb
mov
xchg
fbstp
xchg
and
pushl
call
jp
in
lret
push
pop
dec
push
iret
mov
sti
push
clc
jg
decl
loopne
fnstenv
mov
jl
ds
fistpll
inc
lock
pop
push
and
mov
int3
dec
mov
andl
or
sub
fidivrs
incl
pop
xchg
lahf
xchg
mov
cmpsb
jno
cmpsl
add
lods
push
mov
lcall
xlat
dec
andb
clc
cmc
dec
and
sub
cmp
incl
out
push
pop
inc
adc
mov
shrb
sub
jmp
xor
jns
mov
cmpsl
les
inc
ficoms
push
push
lods
inc
clc
lods
cmc
decl
adc
repz
call
jno
cmp
push
pop
insl
hlt
iret
jmp
daa
das
lock
js
jmp
aaa
mov
aad
jnp
arpl
mov
cmpsl
test
and
rcrl
inc
sub
sarl
ja
jg
cmc
hlt
call
add
inc
das
pop
jbe
pop
cmp
dec
sbb
dec
hlt
inc
mov
ret
push
or
aaa
push
mov
push
xor
adc
cmp
or
push
ljmp
and
cmp
fldl
mov
das
cmp
into
lods
mov
mov
dec
je
out
nop
adc
lock
or
adc
and
cmp
jnp
cmp
or
jl
inc
mov
jmp
repz
mov
std
fildl
sub
mov
push
nop
push
ffreep
xchg
je
mov
int3
push
pop
clc
jbe
mov
lock
fiadds
mov
pop
adc
sub
xchg
loope
cli
lods
fwait
mov
sbb
xor
ja
jmp
stc
jg
lods
xor
inc
divl
dec
pop
push
add
dec
insl
sbb
push
clc
loope
dec
std
mov
sar
shll
in
adc
decl
lahf
lea
pop
pusha
aam
sbbl
bound
das
in
sbb
outsb
cmp
in
js
cmp
movsl
addb
ljmp
sub
stc
push
xor
jp
ret
sbb
rcr
inc
xchg
icebp
fwait
inc
fistps
mov
mov
int3
js
adc
movsb
clc
mov
incl
and
sub
ds
leave
cmp
in
sbb
mov
in
jmp
dec
sub
or
mov
scas
enter
in
jl
dec
mov
xor
pop
popf
and
mov
enter
mov
push
and
orl
jns
jbe
jb
ja
clc
mov
inc
mov
enter
jno
outsl
call
test
sub
pop
adc
loopne
jg
loope
imul
stos
sti
test
cmc
jbe
mov
subl
xor
jp
inc
dec
adc
adc
das
jo
mov
out
dec
ljmp
testl
aad
imul
insb
int3
out
pop
jo
daa
cmp
mov
xchg
mov
or
sbb
mov
shl
and
sub
jmp
xchg
push
movsl
adc
mov
inc
lods
mov
xor
rclb
cmp
mov
fbstp
subb
call
or
arpl
and
dec
out
dec
fcoml
insb
inc
popa
imul
hlt
jo
pop
pop
pop
rcrl
fildll
jl
mov
inc
int3
xor
fdivl
pop
jl
or
jmp
test
scas
cmc
ljmp
sbb
jg
add
sub
test
sar
call
sub
sub
xlat
cmp
outsl
mov
xor
out
out
mov
cli
aaa
cmp
jb
jle
mov
jp
popa
fcoms
imul
aam
aaa
mov
jmp
mov
push
fcomps
and
mov
sar
xor
mov
or
mov
cld
jo
aam
xchg
pop
and
pop
aad
loop
or
sar
and
jbe
imul
xchg
popa
sbb
inc
xchg
shlb
pop
xchg
jl
push
mov
aam
sub
sub
fsubrp
sbb
addr16
inc
and
jg
push
sub
cwtl
pushf
jno
mov
mov
fistpll
bound
in
add
dec
xchg
xchg
mov
adc
mov
sbb
push
cs
lcall
cmp
push
jb
inc
xchg
pushf
bswap
data16
loop
stos
mov
pop
cld
decl
pusha
pop
pop
adc
add
cmpl
clc
mov
fadds
inc
fwait
or
je
out
or
loop
loope
loop
clc
mov
sbb
mov
loopne
clc
jmp
pusha
dec
shrb
incl
or
jg
xchg
cmp
inc
loope
mov
add
call
call
jmp
xchg
cmp
dec
push
movsb
lods
adc
inc
push
xchg
mov
sub
sub
sbbl
les
stos
lcall
aad
sub
fsub
in
lods
loope
in
pop
lcall
inc
xchg
ja
jg
mov
adc
int3
jns
ret
jl
popf
lret
bound
mov
scas
xchg
sbb
call
popf
clc
mov
xor
cmpsb
data16
lock
adc
adc
loope
popf
push
adc
add
lcall
cld
and
incb
mov
outsl
fnstsw
jmp
and
call
ljmp
mov
movsb
std
mov
cli
jmp
test
and
xchg
sahf
xlat
xadd
aas
mov
aas
out
daa
jle
jl
ljmp
fidivs
std
mov
cmc
xchg
mov
es
pop
adc
and
xchg
subb
mov
ljmp
inc
sub
xor
cli
ljmp
rcrl
dec
popf
mov
rcr
popa
insl
xchg
je
clc
iret
jno
aaa
pop
sub
popf
inc
push
scas
mov
lods
push
dec
shrl
sbb
call
xor
push
mov
sbb
xchg
cli
mov
xchg
ret
xor
xchg
popf
jmp
scas
add
or
sahf
loopne
call
mov
push
dec
or
out
gs
sti
jl
push
jnp
sub
cwtl
hlt
mov
fcmovb
pop
lods
fsubrs
pop
push
xchg
mov
es
das
icebp
inc
sbb
int3
test
pop
cmp
aad
lock
pop
pop
push
xchg
xchg
push
or
inc
xor
push
sbb
jmp
push
and
inc
dec
cmp
sahf
add
adc
cmp
notl
mov
pushl
adc
push
mov
movsb
popf
outsl
rcl
mov
lds
sub
fldcw
mov
inc
in
sti
push
hlt
mov
pushf
fidivrl
cmc
pop
mov
ja
inc
mov
int
vpsrlw
test
shrl
cmpsl
das
mov
bound
cmp
rorl
inc
aad
or
fistl
lock
pop
imul
sub
jg
ljmp
inc
fs
pop
mov
jge
dec
cmc
add
imul
push
push
clc
pop
push
xor
xor
stos
pop
sbb
jno
call
push
xchg
mov
jno
cmp
jg
sub
bound
dec
in
inc
lea
push
call
and
rcll
xor
aad
cmc
jns
shl
je
lret
pop
roll
cmp
cmp
add
leave
movsb
adc
mov
sbb
je
icebp
push
jg
scas
fisubrl
mov
mov
popa
dec
movsb
dec
pop
mov
jg
incl
jle
push
ds
out
or
dec
push
minps
mul
out
inc
cmc
ljmp
out
inc
mov
gs
add
cmp
dec
dec
pmullw
mov
push
add
into
orl
push
arpl
jo
lds
inc
dec
jp
jg
lods
pop
push
int3
pop
in
das
out
aaa
inc
in
dec
popf
xlat
andl
pop
ljmp
sub
dec
shl
int3
xchg
add
sub
les
sub
nop
jns
push
sub
fcos
fucomip
adc
sahf
cwtl
dec
jnp
es
sub
adc
lcall
mov
push
mov
jns
hlt
dec
xchg
cltd
out
ret
icebp
filds
sbb
mov
lock
cld
pop
test
push
mov
mov
push
hlt
xor
in
and
add
insl
mov
and
imul
idivb
cmp
and
incl
mov
shll
mov
lahf
popf
jnp
lods
inc
push
jbe
sub
call
repz
inc
mov
lds
mov
and
cltd
jno
mov
xor
test
dec
in
pusha
sub
lcall
inc
lods
scas
iret
pushf
fidivs
cld
aaa
push
inc
dec
mov
icebp
dec
std
sbb
and
inc
fstpt
outsl
sbb
jbe
pop
testb
arpl
outsl
lock
stos
add
push
fists
pop
sub
inc
xor
stc
js
loop
xor
add
sbb
mov
cltd
test
xchg
cltd
in
mov
jge
jmp
and
mov
mov
incl
sub
sbb
das
mov
test
test
add
xchg
stos
ljmp
movsb
inc
stos
stos
dec
adc
dec
insb
ss
xor
js
sbb
test
fldcw
mov
push
mov
repz
jmp
jae
pop
cli
incl
mov
sub
push
dec
mov
cwtl
adc
mov
cltd
mov
stos
dec
std
inc
loop
movsb
pop
mov
xor
jg
mov
or
xor
inc
xor
stc
and
mov
dec
add
pop
dec
and
in
jmpw
ret
add
insb
aam
lcall
lcall
loope
inc
js
or
sbb
jle
test
in
mov
mov
outsl
push
ret
pusha
jo
aaa
add
decl
in
scas
outsb
sahf
test
xlat
cmp
and
dec
dec
mov
lcall
sbb
sbb
jle
jg
mov
scas
fsubl
cmc
call
imul
lret
cmc
stos
xlat
int3
sti
sti
lods
cmpb
lods
mov
jmp
xchg
inc
add
ljmp
push
mov
mov
mov
fildl
adc
mov
jp
mov
aas
test
push
sbbl
or
incl
pop
scas
icebp
mov
in
test
xor
outsl
sub
lcall
push
jnp
mull
sbb
and
call
insl
cmpsb
sub
mov
insb
outsl
sub
mov
shll
cltd
fmul
idiv
subl
push
cmp
pop
mov
inc
stc
mov
pop
mov
pop
scas
cmp
pushl
sub
mov
push
dec
and
fnsave
add
and
outsl
pusha
adc
jno
and
mov
decl
clc
pop
dec
sub
in
sub
outsl
jne
test
out
mov
cltd
ljmp
mov
mov
push
subl
sub
stc
test
push
cld
lcall
cmp
xchg
jno
cltd
int
stos
loopne
test
popf
repnz
jno
cmp
outsl
sbb
jbe
lret
out
pop
jb
cwtl
fildll
fistpll
shlb
pop
bound
add
aas
mov
pop
push
lcall
std
xor
nop
jg
lea
insb
and
sarl
aaa
sbb
sbb
lret
call
clc
sbb
in
pop
je
xor
inc
stos
outsb
les
dec
mov
adc
pop
call
jns
pop
ss
loop
or
mov
data16
sti
cmp
xor
xlat
inc
cwtl
mov
inc
mov
inc
push
cmp
push
pop
xchg
xor
cmpsb
xchg
test
fucomip
mov
or
add
aaa
loope
scas
test
loopne
dec
jo
mov
cmp
mov
inc
xchg
push
lods
jne
push
mov
pop
clc
mov
mov
mov
adcb
xor
sti
pop
cmp
and
outsl
lds
scas
sbb
sbb
push
cmc
cmc
lcall
xor
jecxz
in
mov
sti
sbb
cmp
fildll
cmp
aaa
add
xchg
mov
jbe
aas
sbb
incb
std
cwtl
in
fisttpll
loope
xor
jbe
sub
ret
push
orl
sub
push
and
xchg
js
stc
fwait
adc
sub
outsb
push
pop
push
pop
lret
pop
fistpl
dec
enter
add
jl
nop
or
dec
fists
incl
das
int3
popf
stos
mov
add
xlat
out
and
int3
imul
xchg
ljmp
shl
fstpl
repnz
pop
out
jb
cwtl
mov
pop
push
adc
push
ss
decl
int3
inc
sbb
mov
sti
call
loope
pop
xlat
cmpl
faddl
cmpsl
mov
cmp
xor
loopne
sbbl
shl
sub
cmp
xchg
inc
incb
outsb
push
jo
jne
dec
or
in
cmp
movsb
lret
test
adc
fildl
loope
daa
imul
outsl
call
outsl
mov
add
sub
mov
jmp
jp
mov
jle
cli
leave
addl
outsl
or
pop
dec
stos
aam
incb
dec
scas
inc
shll
call
divb
xchg
dec
fwait
int3
adcb
pop
sbb
xchg
sub
jg
mov
sbb
sbb
mov
flds
mov
jg
mov
call
inc
mov
pop
xor
clc
sbb
ljmp
shlb
inc
pop
mov
das
xchg
repnz
cmp
testb
lahf
int
decb
sbb
test
faddl
addr16
jbe
aaa
imulb
and
mov
int
lret
pop
sbb
add
pop
cli
cmp
pop
cmp
lcall
in
jo
inc
incb
jg
aad
push
fdivrl
push
jbe
int
inc
mov
mov
jae
add
or
and
ja
pop
xlat
xlat
and
insb
mov
push
aaa
insl
dec
inc
sub
insb
mov
mov
pushl
out
mov
lods
inc
aad
je,pn
or
xchg
dec
rorl
test
push
hlt
fimull
lock
cld
sets
inc
xchg
lock
xchg
cmp
sbb
push
xor
mov
testl
test
dec
lods
jp
negb
mov
outsl
push
repz
push
out
nop
or
mov
cmp
mov
dec
fdivrs
mov
popf
dec
and
jb
mov
aam
and
shll
ljmp
jp
lret
cmp
add
push
lcall
scas
jno
or
fstps
push
insb
sar
outsb
xchg
push
jl
call
push
outsl
jne
icebp
pusha
je
and
pop
std
call
dec
jmp
inc
popa
aad
iret
jp
repz
push
sub
cmp
inc
lds
movsb
fldcw
clc
or
in
push
xchg
lret
push
icebp
mov
jmp
jg
lods
mov
test
daa
fisttps
call
sbb
movsb
sub
xor
push
fs
movsb
push
xchg
dec
inc
push
cmpsl
lds
mov
adc
je
xor
pop
stos
lret
pushl
or
aad
mov
gs
incb
and
jg
lea
cmpsb
inc
sbb
xchg
cmpsl
test
push
in
sti
int3
push
sbb
inc
mov
pop
loop
push
test
mov
insb
out
ljmp
xor
popf
stc
xchg
adc
es
inc
lret
aas
add
call
clc
ret
fldcw
test
in
sti
lock
pusha
xor
mov
ljmp
cmc
iret
cmp
aaa
cmc
xchg
faddl
add
fiadds
std
jg
fbld
or
sbb
cmc
ret
andl
ljmp
push
repz
add
or
mov
jmp
in
push
ret
jmp
jl
jge
mov
aas
cmp
scas
jp
cmpb
cli
movsb
nop
or
xor
and
jmp
iret
and
mov
and
cmpl
push
outsl
mov
xchg
call
cli
pop
test
ja
mov
addr16
inc
mov
xchg
mov
incl
imul
test
stos
int3
xchg
aad
jnp
ja
mov
mov
je
ljmp
hlt
ss
pop
jo
lcall
divl
test
pop
pop
xor
in
and
mov
jae
sbb
call
jbe
dec
cld
xchg
scas
push
mov
gs
jl
or
in
repnz
clc
incl
push
cmp
stc
fidivs
in
out
mov
inc
pop
push
mov
jg
jmp
jmp
frstor
sti
cmp
outsb
mov
pop
add
test
leave
mov
loop
clc
ret
dec
mov
and
cmc
js
ret
xchg
mov
push
nop
cmp
inc
adc
mov
lock
inc
cmp
xchg
lods
adc
push
hlt
loope
call
int
sbb
mov
in
decl
gs
and
int3
mov
add
int3
dec
ds
lock
xlat
pushl
int
aas
pop
mov
xor
sub
cmpsl
movsb
cmp
shll
ss
inc
aaa
pop
inc
iret
int
inc
mov
sub
in
sbb
lcall
call
adc
test
ret
mov
mov
xor
mov
xchg
xor
jns
addr16
sub
popa
mov
call
test
je
out
inc
lahf
sbb
aam
xchg
subb
adc
xor
inc
lcall
lea
jnp
sub
mov
lds
std
pop
in
push
sbb
sub
mov
xchg
push
mov
stos
nop/reserved
xchg
cmc
mov
icebp
mov
in
push
jmp
or
stos
inc
mov
jg
xor
in
dec
adc
mov
test
pop
nop
in
repz
test
out
pusha
mov
jle
vmwrite
or
mov
xchg
das
cmc
ljmp
pop
push
dec
insb
shrb
jge
mov
push
xor
lcall
jno
sub
inc
inc
or
fiaddl
jg
addb
xchg
out
ret
inc
fimull
add
push
das
jne
mov
inc
lret
pop
loop
stos
cmpsl
pop
int3
mov
sbb
int3
mov
jg
decl
inc
pushf
cltd
dec
sub
shll
mov
xor
aas
cmove
movsb
aas
jge
inc
xchg
cli
outsl
xor
push
fadd
xchg
mov
mov
cli
call
mov
addr16
xchg
push
adc
jns
test
jl
adc
incb
push
subb
jo
sar
outsl
and
cmp
loop
jbe
std
add
sbb
das
lock
lea
adc
cmpsb
out
cmc
pop
div
xor
pushl
or
daa
jnp
lret
inc
sub
scas
push
ret
pop
test
and
lea
stc
xor
xchg
nop
cwtl
xchg
push
inc
cmpsb
stos
test
mov
add
je
push
arpl
jg
jbe
fcompl
jbe
movsb
sarl
popf
pop
les
icebp
pop
dec
inc
mov
insb
aas
jae
adc
mov
mov
pushl
push
pop
ss
outsb
ret
jecxz
xchg
addb
inc
clc
fildl
xor
sbb
not
cmp
jge
clc
sub
lods
sub
filds
shl
jbe
xor
fldt
loop
cmp
std
gs
cli
ljmp
neg
divl
inc
mov
mov
or
mov
mov
mov
pushf
lods
jg
pop
hlt
xor
mov
sub
jp
ljmp
sti
in
loop
inc
push
in
jg
mov
pop
jg
inc
inc
int3
xor
sub
test
dec
add
mov
push
cmp
into
mov
aaa
je
scas
jno
inc
xchg
aaa
pop
lods
pop
or
roll
dec
jae
dec
ret
scas
pop
jle
mov
stos
push
mov
nop
mov
jbe
pop
pop
clc
cmp
sbb
pop
mov
mov
push
push
out
in
xchg
scas
loop
sub
cli
das
cmc
fstpt
push
cwtl
scas
inc
push
aam
pop
hlt
in
jbe
push
ljmp
pop
imul
stos
outsl
icebp
xchg
push
inc
test
sub
sbb
into
push
jb
xor
enter
mov
mov
push
into
and
fiaddl
cli
pop
mov
pop
ss
pusha
movsb
xor
idiv
loope
aaa
mov
add
stos
arpl
imul
mov
cltd
stc
jg
jp
scas
mov
cmpsb
jl
pop
nop
in
iret
and
jl
mov
insb
mov
push
addr16
pushw
fimull
push
push
inc
xchg
stos
fwait
ljmp
inc
cli
lods
mov
inc
pop
dec
xchg
sub
cmp
mov
xor
in
sub
in
pusha
mov
cli
js
inc
add
jl
pop
pop
ss
fbstp
mov
mov
fdivs
shrb
je
fdivrl
pushl
call
mov
jnp
jecxz
and
jbe
xchg
or
lods
fwait
or
mov
mov
inc
clc
mov
jl
fistpll
pop
outsl
mov
in
faddp
fistps
inc
xchg
xor
lcall
cld
push
push
mov
adc
jle
data16
push
icebp
or
add
mov
aaa
jp
sbb
hlt
jle
mov
pop
xor
incl
sub
arpl
lods
stos
sbb
mov
adcl
repnz
jmp
sbb
fdivr
ljmp
push
mov
pop
shrl
jns
cmp
cld
push
mov
ss
aaa
pop
clc
lods
jnp
test
ret
sbb
xor
sbb
or
fists
push
cli
lahf
mov
loop
ljmp
cs
adc
xlat
xor
adc
icebp
mov
mov
sti
and
jecxz
adc
cld
ljmp
out
pop
xor
leave
mov
pop
cwtl
push
js
add
sbb
mov
in
loopne
xor
call
in
cltd
iret
rcrb
xor
js
mov
mov
mov
lock
pop
pop
daa
je
js
sti
aad
ss
loopne
jmp
lods
mov
xchg
mov
pop
fwait
push
imul
xor
ljmp
add
dec
popf
js
dec
sbb
pusha
xor
out
inc
in
jns
push
jb
jns
insb
cmp
jmp
out
jb
add
lcall
ja
or
inc
jns
cmpsb
sub
dec
notb
add
test
and
push
cld
pushl
cli
out
in
cs
cmp
pop
and
mov
pop
mov
das
jmp
daa
adc
and
mov
mov
sbb
loop
loope
xchg
push
inc
sbb
cmp
ljmp
jmp
aaa
movsb
scas
int
lahf
movsb
mov
cmp
mov
mov
andl
mov
mov
lods
push
mov
imul
sbb
mov
aaa
mov
nop
mov
sar
or
mov
ret
or
xor
mov
mov
jge
and
cmp
dec
mov
fdivrp
mov
mov
fsubl
push
cld
cld
arpl
sub
xchg
rorb
int
test
ljmp
divl
scas
in
sahf
jae
std
out
jge
mov
mov
and
loopne
lods
notl
leave
enter
mov
outsl
jge
daa
mov
insl
fwait
add
push
je
pop
std
in
jnp
pop
lea
push
addr16
pusha
mov
jg
daa
jp
jg
pop
sub
stos
ss
push
dec
jge
xchg
push
sbb
mov
add
loopne
add
or
add
ds
decl
std
push
xorb
test
idivb
loop
js
dec
inc
mov
mov
loopne
popa
xchg
mov
lret
cmp
cmp
add
call
sbb
jbe
dec
xor
jno
mov
incl
mov
inc
dec
in
in
pop
ret
mov
mov
pop
std
ljmp
pop
mov
test
dec
cltd
in
mov
test
adc
cli
ret
inc
jg
adc
sub
adc
push
repz
filds
xchg
mull
adc
jae
test
mov
cli
inc
das
cld
test
cld
sub
push
neg
inc
daa
loope
pop
push
fcomip
mov
inc
sbb
imul
mov
dec
stos
pop
push
mov
jnp
push
jae
jmp
add
push
mov
pushf
lret
pop
scas
scas
outsl
jne
call
int
popf
int3
mov
frstor
jl
ljmp
push
inc
hlt
push
stos
test
leave
jbe
mov
lahf
loope
fbstp
dec
push
mov
int
pushf
loopne
or
aad
cmc
xor
push
add
pop
rorb
lret
iret
addb
mov
mov
add
mov
cltd
popa
gs
jno
fdivr
add
int3
dec
sahf
inc
push
ret
or
dec
repz
loope
xchg
cmpsb
pop
xlat
jbe
js
bound
add
incl
js
mov
sbb
jge
idivb
std
jmp
out
test
movb
stos
add
ljmp
pop
cld
insl
pop
test
icebp
xlat
imull
sub
js
push
outsl
cld
lea
adc
loop
inc
lds
jmp
cs
jbe
pop
cs
jo
add
test
imul
jp
cmp
xchg
push
fwait
pop
fs
ljmp
mov
lcall
jnp
add
loop
mov
dec
pop
mov
jo
inc
aaa
mov
cmp
ss
pop
test
push
jmp
stc
push
out
iret
jl
lods
in
inc
adc
ja,pn
push
push
es
lcall
pop
pushf
out
outsl
xchg
sarl
push
xchg
mov
or
cmp
std
mov
lods
or
inc
gs
or
insl
or
mov
iret
mov
mov
aas
mov
pop
lds
and
mov
lret
xor
arpl
push
push
jge
sub
fstpl
pop
adc
call
aad
mov
mov
jno
jnp
sbb
aaa
push
bound
shlb
sbb
loopne
int3
into
arpl
add
dec
call
jle
xor
daa
cs
pusha
push
fs
shlb
mov
fnstsw
xchg
les
xchg
jae
int
jmp
or
popa
mov
jmp
inc
rdmsr
mov
cld
jno
sbb
fmuls
jnp
lock
gs
popa
cmp
push
sub
mov
out
jg
adc
dec
push
mov
adc
pop
outsl
jae,pn
jne
mov
push
push
jg
push
sub
cmp
je
xor
add
fucomip
xor
adc
sbb
aas
mov
push
and
mov
popf
mov
xchg
mov
xchg
sti
mov
pusha
loopne
lcall
pop
mov
in
jbe
aaa
insb
cmpsb
mov
pop
jno
aad
int3
xor
inc
or
lahf
xchg
iret
jmp
divl
sar
dec
lahf
fwait
shll
ss
jp
out
xlat
xchg
mov
or
dec
inc
rcrl
in
jne
cmc
jne
or
ljmp
inc
int3
push
push
ss
inc
push
cmp
dec
outsb
dec
push
xchg
clc
call
cmp
add
lods
ret
popf
enter
ljmp
xchg
std
outsb
adc
cmp
xlat
fisubs
mov
sub
push
mov
outsl
mov
cmpb
lea
in
lods
shrb
pop
call
aad
inc
in
fmull
arpl
incl
pop
jl
dec
test
cmp
xchg
ds
sub
and
pushl
cs
jmp
loope
inc
add
dec
movd
fdivl
fldl
movsl
push
mov
stos
push
mov
sarb
pop
loope
add
ds
push
jnp
pushf
push
int
icebp
dec
jns
pop
inc
aam
mov
xor
nop
xchg
jne
stc
dec
ds
outsl
or
xchg
call
sub
push
lock
fbstp
fcomp
dec
jnp
repz
mov
sti
je
inc
invd
cmc
mov
inc
lahf
cmp
adc
dec
arpl
neg
push
ret
sarl
std
cwtl
sti
dec
mov
cli
fildl
pop
cli
pop
ja
dec
xor
jg
push
inc
loopne
jnp
decb
rclb
fsubr
cmpsl
sub
cwtl
bound
xor
fisubrl
hlt
shr
nop
mov
jmp
adc
add
cmp
dec
mov
push
bound
out
inc
mov
push
test
mov
sbb
jl
jo
mov
fcompl
fucomip
or
into
xchg
adc
xor
mov
call
cltd
ret
sub
and
pop
loop
add
outsl
sub
push
rclb
pushf
ficomps
icebp
inc
aas
lds
je
xor
dec
push
sub
sub
fs
dec
gs
pop
mov
mov
xchg
clc
incl
jno
adc
add
adc
cld
fnstsw
jmp
and
mov
call
pushf
lret
mov
and
loope
cmp
adcb
stos
xor
test
dec
jp
push
dec
jmp
pop
push
outsb
fiaddl
pop
inc
jl
jo
incl
lds
push
jb
in
xor
adcb
push
or
mov
mov
es
inc
testb
fwait
pop
stos
test
divl
addr16
adc
lahf
dec
adc
or
adc
mov
xchg
jmp
sbb
leave
jb
pushf
xchg
adc
test
add
fdiv
incl
xlat
cwtl
adc
mov
push
hlt
int
or
inc
es
pop
xor
pop
and
das
ret
mov
mov
push
fiadds
and
inc
ret
pop
movsl
push
mov
lods
jne
xchg
fimull
adc
int3
and
push
xchg
sbb
pop
cmp
gs
inc
push
cmp
loope
hlt
cmp
mov
adc
cmp
dec
mov
inc
insb
stos
mov
les
daa
sub
mov
mov
jno
dec
test
cmp
stc
sub
cmp
or
popa
dec
int3
sar
dec
cmp
outsb
cld
xchg
jmp
jp
incb
sbb
movsb
mov
jg
inc
xchg
int
cmpsl
sti
adc
cmc
mov
xor
jle
or
pop
decl
jo
pop
int3
in
add
dec
jnp
incl
dec
pop
mov
ret
fistps
sub
mov
adc
dec
decl
idivb
aaa
hlt
test
xor
cmpsl
mov
xor
mov
inc
pop
cli
movsl
int3
sahf
lods
mov
test
call
scas
nop
push
lcall
scas
sbb
ffree
fsubrs
popa
imul
xor
call
mov
jae
clc
pushl
sbb
lock
mov
push
sbb
jg
sar
sub
xlat
call
int
cmpsl
xchg
adc
push
add
into
push
insb
ss
adc
adc
mov
jmp
ret
or
fcmovnb
add
sti
pop
insb
cmpsl
out
jle,pt
rclb
mov
loopne
arpl
jne
push
das
hlt
jge
gs
lea
inc
dec
std
mov
cmc
imul
inc
lret
sub
aas
in
fistl
enter
js
ret
xchg
aad
xor
sbb
add
inc
fs
mov
add
mov
pop
movsb
sbb
jb,pn
adc
call
cli
mov
loopne
test
sub
fldt
xchg
and
and
push
mov
ja
dec
mov
sti
or
xchg
mov
int3
add
jbe
pop
add
movsb
mov
les
adc
add
es
add
sub
inc
adc
push
adc
divb
xor
clc
cmc
hlt
xchg
sub
jae
jp
adc
lods
pop
sub
mov
xchg
sub
xchg
movsl
sub
jb
fildll
gs
xchg
mov
out
ret
jle
pop
sub
les
lahf
ss
decl
ja
cwtl
into
or
in
in
push
insb
xchg
mov
les
pop
aaa
or
sub
push
stos
js
daa
inc
je
adc
fcmovnbe
mov
addr16
mov
mov
sub
outsb
ret
adc
xlat
mov
dec
pop
fwait
scas
mov
xchg
pop
cli
fucomip
incl
mov
movsl
lods
clc
push
leave
xor
call
xchg
cmpl
jg
out
movsb
out
das
test
xchg
adc
mov
fstpt
scas
xor
xor
cmp
lds
sti
lcall
icebp
inc
gs
pushf
pop
in
push
and
mov
movb
sub
call
xchg
cmp
xor
cwtl
cmp
sbb
jmp
pop
inc
mov
hlt
xchg
daa
add
inc
outsb
sahf
mov
pushl
mov
ds
out
or
inc
fisttpll
pop
dec
push
data16
decl
push
leave
ljmp
loope
and
in
cltd
pop
mov
fildl
dec
mov
popa
mov
sbb
out
sbb
call
jl
stc
daa
adc
push
push
mov
outsb
dec
push
arpl
decl
dec
mov
cmp
jns
ljmp
inc
cmpsb
xor
mov
sahf
lods
ficoml
mov
outsb
mul
loopne
lcall
jp
loope
lcall
shrl
sub
fsubrl
fdiv
es
call
mov
pop
aas
push
jno
pop
daa
lods
jo
adc
sbb
outsl
mov
fnstsw
decl
jb
add
pushf
ljmp
int
sub
mov
int
xchg
ret
imul
call
imul
mov
subl
loop
mov
insl
add
pushl
insb
adc
daa
xchg
and
sar
cwtl
subl
cmpb
add
push
incb
pop
ret
jecxz
adc
aam
ljmp
cmp
lcall
fbstp
call
sub
pop
mov
xor
jmp
scas
dec
outsb
ret
ret
sub
xchg
outsb
dec
sub
int
dec
fwait
int
cld
jmp
sbb
push
insb
scas
jl
flds
fsubr
out
stos
sbb
mov
pop
icebp
mov
sbb
addr16
inc
push
xchg
clc
jg
lahf
xchg
and
lds
mov
fstpt
aam
cmp
inc
pushl
and
scas
push
inc
sbbb
adc
hlt
or
xchg
mov
cmp
loop
mov
in
push
les
jne
ljmp
push
jg
leave
adc
and
cld
fstps
jmp
mov
sbb
pop
cli
or
or
imul
popf
insb
ljmp
test
outsb
cmp
jbe
pop
ja
fisubl
fdivs
repnz
lock
or
mov
push
ret
clc
lcall
mov
jle
ja
adcb
push
xor
mov
push
outsl
mov
in
cs
in
or
dec
std
pop
pop
xor
sbb
xchg
loopne
push
lods
enter
xchg
adc
mov
lods
inc
mov
xchg
mov
adc
aam
push
xchg
test
icebp
jg
repnz
pop
cmc
mov
push
movsb
lea
mov
add
ljmp
push
xor
add
addb
mov
mov
cltd
or
lret
xor
ljmp
or
outsl
sub
inc
adc
fisubrs
xchg
add
data16
fxam
sbb
mov
popa
icebp
test
clc
dec
dec
pop
es
and
cmc
jg
fstpl
out
cmpl
jge
and
je
sbb
jl
push
nop
in
cld
jl
pop
pop
hlt
faddl
fcomps
mov
insl
or
or
jns
pusha
sbb
or
mov
test
and
jmp
stos
jge
dec
jbe
mov
jge
in
push
dec
insl
fsts
xchg
inc
aam
jb
cmc
lcall
pop
or
jbe
decl
jne
aas
mov
and
and
jg
jns
pusha
inc
in
dec
xor
lea
or
sub
sbb
in
leave
inc
clc
decl
pop
jp
jns
or
pop
fnsave
lock
aas
mov
incl
out
mov
and
mov
test
cltd
aam
fdivrs
xchg
jl
sahf
pushw
add
jns
mov
incl
mov
or
pop
fmull
jmp
call
or
xor
ds
ljmp
sub
mulb
fimuls
gs
decl
or
xor
test
xchg
sbb
stos
add
push
cld
lods
cs
mov
fnsave
cld
pushl
sub
sahf
and
add
jbe
mov
mov
inc
decl
das
jmp
jl
xor
jnp
sub
jecxz
xchg
std
hlt
clc
push
mov
test
mov
mov
jns
mov
sti
leave
lcall
pushl
sub
xor
sbb
lods
add
test
orb
fucomi
pop
shlb
cmp
jg
adc
jbe
out
in
cmpb
hlt
stos
cmp
xchg
mov
les
imul
out
in
clc
scas
jmp
popa
insb
xchg
sbb
out
mov
das
into
and
dec
mov
xorb
cs
outsl
mov
sub
fsubrl
cmpsb
movsl
push
sub
dec
push
mov
mov
dec
out
sbb
stc
adc
xor
aaa
lods
xor
pop
mov
clc
flds
pop
xor
fbld
sub
arpl
push
aaa
dec
sbb
jg
adc
dec
mov
icebp
jnp
sti
ret
xor
and
mov
jge
mov
mov
jo
jle
sahf
std
jnp
mov
push
and
or
add
add
stc
cmp
cs
movsl
outsl
out
lea
and
push
rcl
aaa
test
xor
sub
mov
out
mov
or
iret
push
fwait
push
je
arpl
jne
jno
ljmp
cmp
mov
sbb
in
stos
pop
inc
subl
ljmp
ret
xor
repnz
in
stc
pusha
inc
in
pusha
dec
jg
imul
mov
aad
int
sbb
test
loop
mov
mov
xor
loop
jae
add
fwait
incb
mov
jmp
incl
pushl
pop
fnstcw
mov
cmpsb
hlt
push
inc
call
decl
mov
jmp
xchg
in
lds
loopne
loope
fldcw
pushf
add
dec
cs
loopne
cwtl
mov
les
call
fisubs
xor
stc
inc
adc
jmp
aam
push
push
adc
sub
pop
enter
mov
pop
sbb
sub
call
sub
stos
sub
cmp
loop
daa
jl
pop
scas
sub
push
mov
dec
out
mov
push
or
ljmp
lahf
icebp
jg
decl
jne
insl
imul
mov
jae
repz
or
mov
jmp
dec
ss
mov
lods
cld
fidivl
jg
clc
lcall
data16
cmp
andb
add
adc
lcall
aam
sbb
cs
insb
je
or
decl
fsubrl
or
cld
filds
mov
xorl
pop
sub
dec
sbb
cli
push
mov
xchg
mov
sbb
xor
les
inc
ljmp
mov
inc
inc
popa
push
stos
cwtl
jle
push
adcb
incl
fwait
adc
repz
in
inc
adc
mov
lcall
pushl
mov
clc
or
addl
add
inc
push
notb
mov
add
dec
out
or
dec
xchg
decl
scas
mov
cmp
push
pop
movsb
xchg
scas
jp
stc
icebp
orb
xchg
test
jmp
or
inc
push
movsb
arpl
push
leave
test
in
je
stos
jecxz
nop
dec
std
pop
cmp
inc
dec
jns
push
fsubrp
xor
adc
push
inc
adc
je
and
imul
aaa
push
and
aaa
xor
inc
lcall
lcall
mov
ret
and
mov
cmp
push
scas
shll
add
sbb
incl
cld
das
cmc
fstps
call
mov
dec
xchg
cmp
pushl
dec
imul
test
call
jg
push
or
fstps
jmp
sbb
push
lock
and
and
in
pop
sub
dec
int3
ljmp
mov
divl
fsts
sbb
dec
rolb
lcall
pushf
repz
out
in
xor
in
cmpsb
jno
out
jbe
decl
mov
xchg
cltd
add
ret
xchg
dec
dec
inc
mov
subl
cmc
jg
incl
xchg
loopne
cmc
lret
mov
xchg
mov
ljmp
pop
cs
shl
mov
jg
js
mov
push
stos
cmp
push
lret
xchg
cli
jmp
xchg
mov
data16
repnz
or
adcb
inc
out
iret
dec
mov
repz
jmp
xchg
xchg
inc
sbb
gs
sub
add
push
sbb
mov
inc
add
mov
popa
mov
lahf
xchg
sub
cmpsl
push
cs
inc
jmp
je
nop
fisubrs
mov
push
outsl
dec
mov
cmp
or
jecxz
arpl
mov
rcrb
inc
aad
lret
mov
push
lods
or
adc
in
sbb
dec
xchg
add
cmc
lret
test
dec
in
imul
shl
popf
fcmovu
mov
das
cmc
ljmp
sub
sbb
jns
pop
outsl
mov
sti
ljmp
sbb
loopne
adc
cmc
adc
iret
in
or
xor
decl
icebp
mov
mov
adc
pop
pop
test
mov
mov
incl
push
jae
or
js
mov
cmp
lods
push
fbstp
into
fcompl
outsl
add
mov
ja
cltd
mov
add
adc
xchg
add
popf
adc
push
jae
shll
mov
sbb
scas
add
and
sbb
add
ret
pop
test
inc
jg
std
insb
out
jb
mull
or
jecxz
mov
in
mov
xchg
cmpsl
push
in
and
lods
push
jne
push
out
shrb
inc
cltd
xchg
sub
incl
jno
out
jbe
dec
aad
mov
dec
addl
pop
call
and
jle
lods
mov
pop
mov
pop
arpl
xlat
or
popf
jecxz
cltd
test
push
aas
loopne
mov
push
jne
mov
inc
mov
dec
jl
xorb
mov
cs
lea
inc
push
lret
or
nop
sti
popf
mov
xor
push
sbb
pop
call
sarb
xchg
sarl
mov
gs
add
pop
sbb
push
jns
jge
xchg
sub
pusha
repz
ja
call
lcall
jp
add
push
add
pushl
push
sub
or
sub
notb
push
call
add
inc
dec
enter
mov
sti
fucomip
jle
inc
dec
or
and
push
cmpsb
add
leave
adc
cmp
or
mov
aam
jmp
and
out
ja
fsubl
stc
jbe
clc
lods
cmpsl
or
dec
sub
push
es
outsl
jp
rol
add
add
std
xchg
push
call
testl
cli
ret
loopne
pop
fdivrp
out
mov
push
jmp
loop
js
add
cmp
dec
cli
mov
mov
shll
xchg
cmp
imul
jp
push
aaa
xchg
test
jmp
cmpsl
movsb
mov
nop
mov
out
sub
repz
mov
jo
sub
ds
lock
movsb
clc
insl
hlt
ljmp
add
or
repz
mov
fucomip
lcall
dec
lds
dec
pop
add
leave
cmpsl
or
mov
mov
shll
push
loopne
cltd
pop
sub
insb
into
leave
sub
icebp
jecxz
or
xchg
push
sub
in
scas
aam
iret
call
decl
lret
mov
ud0
inc
sbb
jnp
es
call
out
andb
mov
jmp
inc
mov
pop
sbb
jnp
push
nop
iret
mov
into
cmp
es
pop
clc
pop
cs
cld
ret
or
decl
xor
cltd
popf
loop
mov
out
mov
push
mov
fdivl
mov
clc
mov
dec
lds
push
mov
in
jle
int3
test
lods
pop
xchg
pop
bound
or
mov
loopne
sti
incl
test
push
aam
and
in
sub
xchg
mov
and
std
fildll
mov
test
mov
xchg
in
cwtl
or
out
and
idiv
push
adc
pop
xor
out
mov
addr16
mov
sarb
or
lods
scas
adc
popf
ret
inc
lea
pop
enter
inc
dec
cld
cld
repnz
cmp
test
in
jg
call
enter
jge
cmp
iret
faddl
shr
mov
jmp
mov
xchg
test
clc
mov
adc
inc
test
push
cmpsb
les
arpl
sbb
call
jmp
call
or
cs
fidivs
push
dec
inc
loopne
push
cmp
orl
and
das
js
stc
mov
fsubrl
push
insl
pop
std
ljmp
cwtl
test
out
push
jmp
lods
ljmp
dec
mov
inc
xchg
jb
mov
jno
ja
inc
ljmp
gs
push
sub
cmpl
jnp
inc
jle
fistps
out
adc
add
fcomps
lea
out
dec
std
cmp
imul
ja
fcomp
mov
aam
stc
push
orb
cmp
ja
test
push
mov
in
mov
rorl
and
adc
mov
repz
jo
sbb
dec
mov
cmc
leave
sbb
jb
ljmp
insb
movsl
xor
inc
mov
mov
dec
lock
pushl
jg
mov
xlat
lret
lcall
add
ljmp
out
cs
fidivs
mov
mov
mov
out
insl
mov
cwtl
cmp
sub
cmp
popf
sub
scas
pop
xchg
test
call
inc
mov
push
push
mov
mov
sbb
pop
rorl
out
cmpsl
mov
jb
pushf
pop
xor
shl
aad
and
lods
ljmp
cwtl
jo
loopne
mov
and
jp
push
loopne
add
lcall
or
call
mov
addr16
hlt
push
inc
cmovnp
stc
jns
sar
jmp
pop
dec
mov
push
mov
or
aas
jge
or
loop
clc
nop
jecxz
dec
cmc
call
and
pop
xor
outsl
lock
mov
lods
fs
dec
or
outsl
ljmp
or
add
inc
mov
lahf
jmp
push
repz
andb
push
fucom
incl
lahf
mulb
inc
push
mov
cmp
jmp
pop
cli
add
or
mov
push
sub
loopne
ficompl
sub
stc
jl
xor
lcall
inc
stos
jle
mov
inc
pop
sbb
iret
xchg
adc
add
insl
jb
xlat
fcomps
fmuls
sar
ljmp
inc
pop
cmpsl
hlt
push
sti
fnsave
pop
push
sbb
adc
jbe
cmpb
push
cld
add
adc
stos
daa
jp
adc
outsb
test
sbb
cmc
and
lahf
fadds
dec
jp
decb
lahf
adc
faddl
mov
push
sbb
dec
xchg
fxtract
xchg
push
pop
out
mov
sub
call
icebp
pusha
ss
movl
push
pop
cld
lret
aad
jle
movsb
ljmp
xchg
mov
xchg
mov
fsts
push
ljmp
icebp
xchg
pop
mov
gs
mov
push
mov
lcall
lret
sbb
add
out
jnp
scas
in
rcr
je
mov
lcall
jns
inc
sahf
lret
dec
mov
mov
xor
xor
or
rcrb
pushl
jmp
or
daa
out
or
lds
and
out
xlat
ja
inc
sbb
icebp
in
dec
xor
in
sar
decl
cli
lds
jo
cmp
dec
repz
les
add
jge
xchg
ja
jg
ljmp
pop
inc
pop
mov
mov
fbld
dec
adc
pusha
mov
decl
adc
or
repnz
sar
or
mov
pop
call
addr16
cli
jg
jg
dec
stos
into
clc
jmp
fs
adc
hlt
adc
dec
mov
int3
call
lock
add
pushl
test
mov
lret
sbb
pop
jno
sbb
cli
adc
inc
cmc
data16
aam
mov
aaa
clc
add
loopne
test
outsb
mov
mov
jnp
clc
out
mov
add
mov
push
mov
decl
out
push
ds
jns
cmc
xor
mov
sbb
pop
testb
or
xchg
ret
repnz
or
lea
mov
jmp
fs
mov
cmp
scas
sbb
jl
xor
cli
clc
jae
inc
lds
pop
jmp
inc
mov
arpl
lret
jl
mov
push
lcall
mull
lods
clc
push
das
fisubrl
iret
jno
and
out
fdivp
sarl
outsl
in
notb
popf
and
sbb
mov
incb
mov
cmc
fadd
pop
mov
push
clc
lods
out
jmp
and
daa
push
pop
rclb
add
daa
lahf
jbe
cli
mov
loop
std
movsl
inc
fisubrl
ss
adc
mov
loope
outsl
fildll
add
nop
pop
int3
or
mov
mov
xchg
call
dec
add
push
jl
cs
mov
and
hlt
test
in
call
negb
and
push
test
bound
aas
lret
adc
mov
out
incl
pop
push
movsl
cmp
cltd
clc
or
and
mov
arpl
lcall
loopne
out
sbb
pop
jle
aam
loope
daa
mov
fsubl
out
inc
std
insl
jg
xchg
cli
mov
inc
inc
jp
arpl
dec
mov
sub
add
out
add
ja
lock
jno
hlt
or
es
orb
mov
mov
mul
mov
pop
jo
mov
incl
test
and
fcoml
fisttps
cmp
jo
or
adc
cmpsb
sub
adc
push
push
or
dec
scas
stos
pop
ret
pop
push
imul
mov
sti
insb
imul
cpuid
xchg
mov
sbbl
fnstenv
imul
sub
and
mov
pop
inc
xchg
jmp
cmc
out
outsl
icebp
or
ljmp
ficompl
in
sti
int3
adc
push
pushf
mov
movsb
imul
push
pop
jle
jg
dec
test
jnp
or
adc
stc
inc
mov
test
cmp
and
pop
std
ljmp
ljmp
out
iret
jb
daa
push
jle
mov
fbstp
sub
adc
cmc
icebp
pop
movsb
lcall
pop
movsb
jg
inc
dec
fnstenv
and
ja
cmp
js
addr16
mov
push
test
pushl
cmpsl
sti
mov
push
rorl
arpl
ljmp
jbe
in
fiadds
js
mov
push
pop
xor
sub
cs
cs
and
sti
xchg
popf
xchg
sarl
dec
addr16
jmp
movsl
les
ret
push
cmpsl
adc
mov
xor
push
les
sbb
or
daa
xorl
xor
icebp
outsl
lret
or
adc
mov
fbld
cmp
shll
adc
pop
jl
int
lds
cmp
or
add
rolb
sub
ja
xlat
xor
sbb
out
in
push
aaa
das
pop
js
push
mov
push
mov
pop
jne
xchg
adc
call
jg
lock
ja
gs
pop
test
call
mov
fnstsw
xor
insb
or
mov
test
addr16
pop
sub
xchg
push
imul
pop
arpl
fcmovu
push
cltd
fdivrl
push
decl
lods
xor
mov
xchg
lods
lahf
push
xor
aad
mov
mov
jne
ret
mov
lea
sbb
adc
insb
cmp
lcall
dec
adc
lcall
jle
add
pop
sub
fnstsw
mov
cli
cs
and
fs
mov
mov
insl
sti
jno
mov
dec
test
cli
lret
cmpsb
push
push
jne
xlat
arpl
mov
or
pop
cli
cmp
xchg
das
cmp
jns
and
test
pop
cltd
ja
outsl
mov
shrb
loopne
int3
cltd
rcl
insb
jo
fnstcw
push
push
roll
lods
lods
pop
xchg
cltd
push
push
add
xchg
dec
dec
fistpl
pushl
sbb
gs
popa
test
cmp
add
jecxz
jmp
sbbb
adc
and
pop
push
cmp
jg
jo
movsb
xchg
cmpsb
test
ret
mov
sub
fdivr
pop
inc
aaa
jae
cli
ljmp
xor
fcmovnb
negl
enter
or
les
push
xchg
aam
mov
popa
push
dec
jb
mov
xor
jae
inc
pushf
mov
mov
xor
xchg
push
pop
fmuls
push
or
incl
aad
ret
test
mov
mov
jmp
and
mov
and
cmp
dec
mov
insb
out
into
incl
jmp
cmp
filds
scas
adc
pop
cmp
lods
dec
add
cwtl
loope
fucomip
test
sub
xor
cld
rolb
mov
leave
sub
std
lcall
mov
add
icebp
fldt
and
xchg
inc
cmp
stos
push
pop
add
dec
jb
in
jne
dec
popl
mov
xchg
jl
mul
decl
int3
or
mov
popf
inc
sbb
push
push
jb
push
ljmp
xchg
je
lcall
decl
jmp
call
push
pusha
inc
jl
fisubrs
cmpsb
lods
addl
lea
jp
testb
divb
inc
adc
push
loop
pop
xchg
lods
adc
jno
cltd
add
js
test
ljmp
jp
push
mov
pop
push
cmpsl
push
jge
pop
xor
loopne
decl
cwtl
push
jg
outsb
std
and
lds
sub
lcall
fwait
stos
and
pop
adc
out
daa
jl
cld
pop
and
out
dec
pop
mov
dec
inc
hlt
mov
imul
loop
decl
pop
xor
aas
cmp
pop
pop
icebp
jge
call
mov
ja
xor
pop
mov
int3
push
ret
lock
das
je
mov
mov
or
pop
mov
adcl
pop
sbb
cmp
lods
mov
dec
mov
inc
gs
adc
decl
mov
add
inc
fwait
mov
lock
xchg
jp
sbb
push
ja
jmp
outsb
imul
int3
shrl
inc
jnp
pushf
xchg
lret
ljmp
fisubs
fisubs
push
and
out
sti
icebp
mov
pop
loopne
jns
sbb
xor
bswap
dec
mov
mov
mov
sahf
sub
cmpb
dec
outsl
in
push
filds
fcmovne
jne
mov
inc
out
fnstenv
mov
mov
mov
xor
dec
mov
repnz
pop
and
push
mov
add
jg
fbld
mov
inc
jmp
into
adc
daa
int3
inc
outsl
fucomi
cmp
out
inc
mov
mov
sub
xlat
enter
xor
test
aad
mov
or
sub
popa
cmp
push
pop
sub
mov
cld
mov
inc
icebp
gs
nop
pcmpeqd
add
loope
mov
or
hlt
dec
mov
cmpb
sub
mov
mov
lods
ja
and
pop
jecxz
lahf
pusha
out
gs
jg
jl
sub
or
testb
mov
pop
std
rorl
pop
scas
sbb
add
xor
negb
mov
sub
xor
add
sub
xchg
std
decl
inc
mov
mov
adc
pop
jno
in
mov
cli
shlb
loope
rcl
sbb
decl
insl
insl
imul
push
cmp
aas
or
adc
icebp
pop
cltd
lock
cli
push
test
loop
jo
iret
sub
iret
test
sbb
or
pop
fsubrs
iret
inc
or
xlat
in
lods
pusha
std
lock
push
xchg
lods
hlt
and
fistpl
mov
call
mov
add
ret
pusha
aas
mov
repz
outsl
lods
call
out
inc
xchg
jp
daa
aad
sbb
dec
cmc
inc
incb
cmpsb
push
xorb
cmpsl
mov
pop
out
cs
test
sbb
jmp
pop
clc
incl
test
mov
and
add
push
dec
inc
xor
cltd
fucomip
sti
clc
outsl
icebp
inc
jne
mov
mov
cltd
fimuls
sub
jecxz
xchg
jp
call
pop
inc
jnp
pop
and
push
ret
aad
mov
mov
jmp
pop
pop
cmp
push
loope
jno
cld
test
mov
aaa
mov
dec
movsl
jg
pushf
mov
scas
add
pusha
les
or
sub
ljmp
icebp
inc
inc
xchg
std
push
imul
lret
outsb
dec
fidivs
incb
bound
lods
push
mov
mov
pop
cmp
call
das
mov
jl
hlt
in
pop
xor
pop
in
dec
cld
or
loop
xor
dec
sahf
dec
sub
mov
mov
bound
cmp
adc
call
sbb
inc
arpl
sub
lret
jnp
mov
loope
fwait
and
jno
aas
sub
mov
sar
ljmp
mov
and
cmp
in
sahf
fstl
mov
dec
or
jae
and
lods
jbe
mov
call
test
lods
stos
cmc
sub
shrb
sbbl
nop
pushf
xchg
or
xor
cmp
clc
into
repz
jb
cltd
fcomps
loop
int3
ficompl
out
movzwl
jg
lret
icebp
sbb
fdivl
push
test
mov
js
mov
push
pop
jl
cmpsb
xlat
js
ljmp
mov
jns
xchg
ja
add
outsl
lods
pushf
mov
pop
jae
inc
lea
mov
ljmp
std
aaa
daa
aam
aad
mov
push
loope
popa
lcall
sbb
mov
jb
push
mov
jp
leave
pusha
jmp
add
incl
dec
nop
scas
ret
fwait
sbb
mov
pop
inc
scas
and
sub
jge
clc
and
or
enter
or
push
mov
pop
repz
inc
cli
enter
fcompl
ds
xchg
xor
adc
dec
cwtl
push
int
lods
xor
inc
lcall
je
fnstcw
mov
insl
jmp
xchg
roll
jmp
and
arpl
ds
out
popf
jno
lds
lret
lods
lds
popa
stc
imul
rcr
lret
std
mov
clc
jg
std
sbb
or
mov
add
lret
shlb
push
pop
dec
insl
adc
sbb
stos
decl
rorl
jmp
push
roll
mov
jns
std
decl
push
sahf
and
sahf
aas
sbb
push
inc
cmc
or
mov
xchg
jne
xor
pop
dec
popf
push
movsl
call
mov
jmp
nop
jecxz
pop
push
aas
pushf
imul
cmp
aam
inc
jb
add
pop
hlt
hlt
cld
outsb
add
testb
inc
mov
dec
fstps
fsubrl
jl
popa
test
mov
decl
movsl
ljmp
xchg
mov
cs
clc
test
pop
cltd
aam
xlat
ds
movsl
xchg
jo
inc
test
ss
inc
aas
inc
xor
ljmp
pop
jae
xchg
fdivrp
xor
gs
icebp
xchg
outsl
hlt
jg
pop
mov
dec
dec
mov
push
or
inc
sub
out
ret
and
incl
sti
inc
mov
addr16
in
into
aaa
ret
cmc
xchg
ss
movsl
fcmovnu
push
xor
cmp
addr16
xchg
dec
testb
ljmp
cld
lcall
adc
sub
cmpsb
pop
pop
fiadds
sub
cmp
cs
mov
les
test
cmp
int
pop
loop
enter
in
jp
imul
pop
and
dec
std
insb
shrl
ds
jg
jg
pushf
cmp
out
pusha
mov
ret
sarl
jae
pop
cld
movsl
jle
jmp
cmc
pop
add
fsub
jl
les
mov
rclb
fmull
cwtl
insl
das
jle
mov
pusha
aam
call
push
in
mov
push
jb
pop
cli
loop
les
mov
cmp
xor
decl
mov
cmp
push
or
into
push
inc
xchg
jns
aaa
pop
incl
lret
fnsave
lock
xor
sbb
xchg
and
sahf
push
xor
int3
inc
cmc
fnstsw
scas
xor
jl
push
dec
idiv
pop
mov
nop
lea
stos
jo
xchg
in
mov
cld
call
push
cmp
jg
dec
test
pop
push
mov
in
call
das
cltd
adc
fmuls
xchg
sub
jle
rcl
xor
ljmp
mov
movsb
mov
lret
je
cmp
pop
lret
ja
out
popf
jp
mov
pop
adc
lcall
cmp
daa
mov
cmp
outsb
mov
jg
push
ret
dec
mov
cmp
mov
daa
sbb
sbb
sub
arpl
push
xor
in
and
mov
decl
cmc
repz
pushf
xchg
in
inc
scas
repnz
in
mov
xor
int
xchg
jno
rorb
ss
or
push
cmp
iret
and
in
mov
jmp
mov
rclb
loope
ds
int
xchg
je
insl
adc
cmp
xchg
xchg
in
aaa
incl
sub
aas
jno
outsl
mov
mov
loope
aas
test
pop
jmp
lea
dec
incl
dec
and
popa
mov
fucom
fimull
mov
lea
call
scas
loopne
dec
jns
decl
stos
lcall
jle
xor
cmp
ret
pop
pushf
lock
and
lret
add
mov
mov
mov
pop
adc
aaa
cmp
imul
lcall
and
sbb
lcall
inc
inc
push
push
stos
sbb
fcompl
and
push
test
sahf
xchg
mov
dec
and
xchg
jg
sbb
repnz
outsb
push
jge
sbb
cmp
xor
lcall
xchg
add
lret
ror
mov
jbe
jge
mov
arpl
sub
movsl
lret
inc
pop
mov
jg
shlb
xchg
mov
lods
ljmp
dec
stos
sbb
or
lds
idivl
lods
sbb
add
xor
push
pop
div
bound
sbb
jo
sbbl
jg
mov
jmp
aaa
jb
sahf
xor
mov
jg
lcall
mulb
dec
mov
cmp
cmp
int
mov
jmp
sti
pushl
xchg
xchg
inc
out
dec
xchg
repnz
fbld
mov
daa
mov
jg
or
and
clc
lea
sbb
xchg
cmp
pop
cs
add
cs
inc
movsl
jg
jnp
fbstp
inc
insb
sbbl
add
std
jg
incl
js
cmp
aam
pop
imul
xchg
idivl
pop
mov
mov
mov
cmc
outsl
cltd
stc
mov
ljmp
xlat
cmpl
outsl
idivl
mov
and
jns
icebp
mov
data16
in
mov
sarl
mov
incl
mov
outsl
ret
push
mov
xlat
sti
pop
outsl
cld
pop
push
jmp
inc
call
clc
mov
lods
cld
incl
inc
bound
cltd
scas
sahf
dec
xor
inc
cltd
clc
ret
pop
aas
adc
pop
and
outsl
aam
rol
xor
fldcw
jmp
xchg
xor
lret
int
leave
lods
adc
insb
xchg
sahf
jg
and
cmp
mov
xchg
out
pop
addb
call
adc
add
mov
xor
push
pusha
ds
jg
jg
mov
movsb
xchg
pop
ss
subb
jge
or
ljmp
lret
or
roll
mov
add
jg
and
sbb
pop
mov
arpl
aas
xchg
dec
or
pushl
pop
in
dec
clc
dec
and
cwtl
sub
adc
jns
iret
rcr
mov
lock
pusha
imulb
or
insl
hlt
mov
movsl
add
mov
mov
push
test
jmp
or
daa
fnstcw
dec
arpl
jnp
inc
jb
enter
pop
js
decl
xchg
cltd
or
xor
inc
insb
or
call
sbb
and
mov
push
sub
pop
clc
jae
daa
vsqrtps
and
jno
aad
sti
dec
nop
pushl
pop
cltd
ljmp
out
call
mov
push
out
rorl
pushl
loop
inc
pushf
iret
jmp
daa
add
xchg
mov
mov
jg
lods
sub
out
cld
pop
add
xor
dec
out
jae
call
dec
dec
and
bound
dec
jno
sbb
push
cmpsl
or
pushf
das
cld
dec
mov
stc
sub
cmpsb
inc
xchg
lock
out
loop
repz
xchg
cltd
xchg
pop
clc
adc
rolb
call
dec
jl
lea
lock
push
aas
sbb
push
jbe
mov
scas
pushf
aad
incl
shrb
add
in
push
fnclex
jg
push
lea
in
imul
aam
and
aad
jecxz
out
loopne
or
cmp
lods
pop
jecxz
jno
inc
adc
frstor
aaa
dec
inc
push
push
movsb
and
or
push
sub
dec
ljmp
jecxz
bound
cmp
mov
pushf
fildl
push
out
inc
push
xchg
dec
lcall
cld
adc
and
loop
adc
mov
outsl
mov
lea
mov
jnp
ljmp
dec
xor
push
mov
add
dec
cwtl
cli
sub
ljmp
inc
ss
xchg
fisttpl
mov
ljmp
mov
insl
ljmp
xor
push
dec
xor
aas
repz
decl
insl
push
imul
sub
and
sub
clc
test
data16
mov
mov
push
mov
pushf
dec
pop
mov
cmp
mov
cli
cmp
ljmp
push
jl
jb
pop
nop
call
lret
cmp
push
mov
fistpl
push
and
dec
fiaddl
inc
mov
shll
lock
or
ljmp
dec
lcall
xchg
xchg
call
xor
cmp
popf
icebp
das
inc
lea
insb
out
mov
call
xlat
mov
fbstp
jg
daa
cmp
pop
fcomip
fs
call
ja
sbb
cmp
add
mov
lods
jg
call
and
fists
ds
imul
lcall
cmp
bound
xor
test
mov
jmp
ljmp
inc
aad
pop
movsl
push
mov
sar
push
notl
ss
das
ljmp
xchg
out
jae
xlat
loope
call
movsb
addr16
push
ja
dec
dec
sahf
repnz
fsub
jecxz
data16
mov
insl
ljmp
ret
push
add
std
fnstsw
fdivr
xchg
insl
mov
daa
sbb
dec
jmp
outsb
mov
ljmp
cwtl
loopne
loope
and
mov
xor
dec
mov
outsl
mov
push
call
in
shll
inc
pop
jns
sbb
push
fcmovnbe
je
or
jns
mov
sbb
sbb
lahf
adc
lcall
mov
mov
sarb
fildll
mov
das
jmp
std
xchg
pushl
and
lods
or
loop
das
ss
insb
xchg
sbb
adc
fistps
nop
lods
in
jbe
mov
push
dec
xchg
ret
mov
sub
lret
ret
cmpsb
mov
mov
popf
mov
call
data16
cmp
mov
jg
mov
aad
cwtl
xchg
das
int3
push
arpl
jl
cmpl
cmp
out
outsl
std
or
sbb
call
add
or
js
out
mov
jmp
subb
ljmp
push
pop
shll
dec
cmpsb
popa
add
fdivl
ds
in
cmpsb
sub
fdivr
aaa
mov
add
jle
shlb
enter
xor
xor
xor
rcrb
popa
es
movsb
xchg
in
push
or
sbb
mov
in
mov
and
popa
jecxz
pop
test
inc
mov
push
aad
loop
add
mov
xlat
test
loopnew,pt
sbb
or
and
out
test
jg
fmull
cmp
xchg
stc
inc
sbb
dec
jg
movsl
aam
adc
lahf
jne
xlat
lods
xchg
cli
fucomip
insb
outsl
mov
lea
hlt
jg
call
out
lods
push
xor
mov
jle
mov
mov
sar
ljmp
jbe
mov
inc
shlb
repnz
aad
lds
or
call
cld
inc
jecxz
lcall
dec
mov
jg
loop
out
sbb
push
push
xchg
icebp
pop
xor
jns
xchg
xchg
loope
fbld
jnp
enter
xor
aam
add
shrb
fwait
add
sbb
or
mov
adc
into
xor
dec
pop
mov
xor
ucomiss
in
xchg
movsb
push
pop
out
ds
sub
dec
les
arpl
add
fildl
xchg
cli
lcall
sbb
xorl
xchg
pop
cmpsl
test
pop
mov
mov
shrb
std
mov
xor
idiv
dec
std
ljmp
lods
add
mov
int3
mov
ret
lea
sub
sbbb
cmp
aad
adc
dec
add
and
jp
sti
outsl
cld
pop
sub
cmpsl
aaa
jnp
push
popa
scas
leave
add
sub
lcall
std
jg
lds
sti
mov
je
scas
add
push
add
mov
cld
cli
in
ljmp
leave
fdivl
sub
mov
ret
push
fistl
sub
mov
insb
insl
sbb
jle
fstl
sub
jge
out
faddl
out
xchg
outsb
out
into
jnp
sahf
stos
vrcpss
pop
decl
loopne
fbstp
push
rorb
inc
sarb
gs
sub
mov
xchg
push
adc
jmp
fldt
js
jecxz
ljmp
sarb
cmp
in
pop
enter
out
jns
mov
mov
cwtl
js
pcmpgtb
cmp
call
ror
fs
jle
fisttps
std
xor
incl
lret
pop
jp
das
cmc
inc
popl
cmp
aad
jp
les
call
shll
mov
add
mov
decl
push
call
cwtl
lret
xor
or
hlt
fbstp
push
or
inc
faddl
test
aas
ljmp
and
leave
dec
cmp
xchg
icebp
inc
push
dec
jl
pop
pushl
stc
ss
pop
je
test
xchg
clc
pop
sbb
cld
mov
sbb
test
decb
cmp
inc
inc
mov
push
cmp
xchg
lods
jmp
in
inc
sub
test
mov
jno
jo
jae
call
flds
aaa
and
arpl
ja
movsb
dec
mov
in
mov
mov
rcrb
loopne
xchg
mov
ljmp
cmp
cmp
inc
ds
jge
int3
adc
outsb
cld
dec
std
lods
cmp
lret
stos
mov
out
inc
ljmp
xchg
lret
add
pushf
inc
add
pushf
mov
and
jmp
rcrl
xchg
stos
call
xchg
movsl
stc
cmpsb
mov
cli
pop
push
jg
jg
call
and
popa
scas
dec
rclb
pushf
sbb
and
and
ret
jmp
mov
push
sti
sbb
call
lea
incl
dec
sub
mov
in
cmpsl
testl
or
add
loop
cmp
jno
mov
mov
push
hlt
xchg
xor
lcall
jmp
in
mov
push
mov
jle
xchg
xor
xlat
negb
push
lea
push
or
decl
cld
mov
add
loop
fxch
cld
dec
dec
div
sub
cmp
cmp
and
xchg
les
and
mov
mov
incb
imul
or
xchg
and
and
push
lods
std
push
decl
lods
adc
rcrl
lock
ljmp
jmp
mov
pusha
cmp
call
xchg
sub
jnp
sbb
or
pop
in
xchg
ret
stc
xchg
mov
addr16
push
fbstp
jecxz
ret
xor
lods
aaa
cmp
lret
gs
push
xor
out
adc
mov
ret
int
nop
xor
icebp
pusha
int3
xlat
mov
fsubrl
mov
xor
stos
or
xchg
or
mov
pushf
mov
mov
or
pushl
scas
add
mov
ds
ret
neg
or
popl
mov
jge
sbb
push
inc
lret
fnsave
clc
or
fists
mov
lar
mov
insb
pusha
stos
jne
push
pop
cli
pop
clc
mov
dec
cmpb
sahf
lcall
pop
xor
stos
push
cmp
outsl
rolb
jns
push
push
ljmp
dec
insb
xchg
dec
inc
mov
inc
mov
mov
mov
xchg
ljmp
decl
imul
inc
scas
mov
pop
lods
add
cmp
jne
push
jge
mov
or
inc
pop
ljmp
lock
mov
pushl
mov
cwtl
sti
in
popa
add
cmp
jns
aad
dec
and
popa
lcall
jmp
bound
addr16
jnp
mov
loopne
ss
call
int3
xchg
cmpsl
cld
sub
mov
out
cmpsb
mov
xchg
xor
test
dec
inc
call
das
mov
push
mov
icebp
fbld
stos
pop
faddp
stos
rorw
es
incl
pop
cmp
mov
adc
inc
aam
cmp
jg
dec
enter
inc
push
fwait
sahf
sbb
adc
sbb
and
lock
popa
out
pop
adc
decb
outsl
into
dec
negb
imul
and
mov
das
test
dec
ja
clc
xchg
gs
add
sub
push
testl
pop
mov
aad
mov
mov
lock
push
movsl
cmc
jae
mov
rcr
enter
cltd
inc
movsl
push
inc
pusha
js
pop
scas
mov
dec
inc
or
mov
push
xlat
pop
lods
outsl
cld
inc
xor
dec
mov
and
scas
cmp
loope
fs
jmp
dec
scas
mov
mov
sub
or
out
jge
dec
js
addl
push
inc
jg
inc
sub
cmp
cmp
scas
mov
cli
jmp
sbbb
jno
jmp
adc
push
imul
inc
cmpsl
mov
inc
sahf
adc
jg
inc
xchg
fwait
outsl
cwtl
xchg
adc
imul
outsl
icebp
scas
mov
hlt
and
sbb
sbb
xchg
cli
incl
std
xchg
or
mov
das
jb
cli
decl
sub
cmpsl
test
jae
xchg
call
cmpsb
int3
mov
jg
scas
frstor
pop
scas
mov
jp
xor
xchg
cmc
dec
ljmp
out
jno
fisubs
xchg
out
das
jle
mov
jmp
pushl
aam
fcompl
cmpl
addb
sahf
orb
call
stc
bound
inc
rol
xor
and
and
xchg
mov
icebp
cmp
repz
and
pusha
sarb
std
add
pop
mov
insb
push
push
inc
or
or
mov
xlat
jae
push
pushf
add
cmp
pop
and
iret
cmpsb
aas
sti
in
int3
jecxz
jmp
stos
jnp
pop
jns
ljmp
mov
lods
cmp
leave
sbb
xchg
add
loop
dec
cld
add
shll
adc
xchg
rolb
test
js
cmp
out
mov
outsl
ret
add
call
adc
lahf
inc
jg
ja
push
pop
add
mov
mov
incl
cmc
popf
ja
nop
cmp
ret
daa
cmpsl
scas
cmp
pushf
orb
hlt
ret
cmpsl
pop
dec
decl
inc
enter
mov
enter
and
int
dec
gs
outsl
cmc
call
arpl
jo
jo
and
inc
into
int3
jmp
push
ljmp
and
faddl
cmp
sar
int3
idiv
sbb
xor
test
lret
mov
mov
aas
pushf
add
in
xor
add
ja
xchg
pushf
mov
xchg
aad
repnz
pop
into
repz
mov
test
push
cmp
loop
dec
cltd
pushf
pop
mov
cld
lcall
dec
jmp
lds
lcall
lea
aam
mov
adc
adc
pop
daa
mov
mov
outsl
jecxz
out
in
push
lds
sub
fld1
mov
test
ljmp
jo
cmp
repz
clc
ljmp
loope
mov
dec
aad
sub
cli
xchg
sbbb
cs
sub
ds
dec
mov
dec
cmc
cmp
xchg
clc
adc
jp
mov
xchg
add
push
push
ljmp
data16
jp
inc
xorl
hlt
jmp
xchg
sub
mov
jbe
mov
pop
stos
test
cli
iret
and
es
jle
pop
push
ljmp
push
nop
in
gs
mov
lcall
xchg
shr
cmpsl
xchg
add
mov
shrb
stc
xor
push
subl
clc
mov
and
or
jo
jnp
or
je
cmc
in
cmc
mov
add
stos
push
xor
adc
dec
imulb
cmpsl
std
fisttpl
ljmp
xor
mov
pop
mov
dec
jmp
cltd
fwait
push
dec
mov
adc
cs
loopne
ret
fidivrs
jnp
push
imul
mov
jmp
sub
rcll
mov
shlb
xchg
or
sbb
push
mov
or
inc
jg
fiadds
test
jo
mov
idiv
mov
inc
test
xchg
jmp
inc
jge
sub
pop
arpl
out
mov
test
or
lea
js
cmp
imul
inc
pushl
loope
sub
ljmp
fimull
mov
lcall
insb
push
xchg
fidivrl
inc
negl
test
or
das
fmull
les
or
jle
push
fcompl
xchg
es
push
push
pop
add
adc
and
lcall
bound
pop
pop
xchg
xor
aad
sub
xchg
fiaddl
movsb
clc
aad
pop
adc
fildll
pop
clc
xchg
jmp
pop
scas
jmp
rolb
lea
shl
mov
dec
jg
pop
sbb
sub
jnp
mov
pop
pop
ds
call
mov
cmpsb
cmp
jge
push
bound
xlat
mov
inc
sbb
cld
movsl
mov
movsb
aaa
adc
fidivrs
jb
cld
lcall
mov
and
jle
daa
lods
fs
js
or
loop
mov
ljmp
pop
push
mov
jle
into
sti
and
das
sub
mov
cmp
loopne
mov
push
sti
mov
cmp
lcall
clc
outsb
mov
sahf
mov
out
mov
sti
dec
push
repnz
js
cmc
or
adc
stos
in
test
in
ja
testl
and
jle
js
insl
iret
je
aaa
inc
js
mov
call
imul
jmp
jnp
mov
dec
je
mov
icebp
nop
aas
mov
mov
pop
mov
lea
sub
ret
into
mov
mov
xchg
adc
jo
inc
xor
lds
jmp
bound
pop
ret
jecxz
cld
jo
xchg
cli
inc
pop
sahf
outsb
pop
aam
ret
push
mov
flds
jg
dec
outsl
rcrb
out
cltd
xchg
out
ljmp
lret
cmp
cmpsb
mov
xor
shlb
scas
incb
lcall
and
test
lods
xor
outsb
add
xor
jg
mov
cmp
movsl
cmc
add
mov
or
push
aaa
cld
and
or
mov
cltd
ja
pop
pop
ds
icebp
clc
mov
sahf
jnp
jle
pop
cmc
es
gs
mov
repz
call
das
test
adc
aaa
cmp
in
add
xorl
les
fs
popf
clc
ljmp
popl
icebp
push
mov
cmp
mov
jno
dec
push
cmp
sub
xchg
das
pusha
sbb
ret
aad
int3
cmc
adc
xchg
icebp
dec
sub
adc
lds
mov
cwtl
xchg
cvtpi2ps
hlt
pop
ljmp
sub
addr16
shll
or
mov
pop
es
adcl
jg
lods
inc
and
das
inc
lret
or
fidivrl
push
aas
dec
out
xor
fmul
push
insl
push
mov
jg
decl
fsubs
dec
pop
cltd
xchg
and
push
inc
rcrl
std
outsl
mov
lods
fsubrp
insb
cmp
icebp
insb
inc
and
jg
pop
int3
push
aaa
loopne
shll
lcall
jp
icebp
decl
jb
je
xorb
rcr
std
insl
jb
xchg
dec
dec
movb
das
add
daa
push
aas
out
sub
inc
inc
mov
jl
xchg
push
add
call
fdivrp
je
aas
cwtl
clc
push
push
pusha
fs
bound
inc
sub
ljmp
lcall
call
outsb
notl
pop
push
lahf
out
lock
jge
inc
lea
add
lds
imul
pop
cmp
nop
in
mov
in
mov
inc
adc
mov
jp
and
push
je
stc
les
mov
mov
or
pop
mov
jmp
sbb
add
nop
mov
mov
cmpsb
std
cmc
loopne
pop
decl
pop
add
and
lock
das
xor
ljmp
sbb
add
imul
enter
and
aas
inc
mov
xchg
in
mov
cwtl
shlb
cltd
mov
decb
das
std
jns
mov
dec
xor
scas
clc
lods
add
fistl
mov
xchg
adc
xchg
push
loop
call
add
pop
jnp
ficoml
rcrl
jnp
ss
pop
dec
mov
pusha
mov
add
gs
xor
lahf
mov
sahf
and
sub
adc
out
and
sti
mov
jbe
adc
xor
fcoml
jg
jmp
cmpsb
jb
pop
mov
sub
shrb
mov
sbb
adc
ljmp
pop
sub
sti
das
jns
arpl
das
xchg
cmp
cmp
rorb
inc
jmp
out
into
cmp
push
adc
mov
aaa
rorb
inc
xchg
sub
decl
inc
adc
pop
movb
lret
rcl
popf
mov
pushl
or
ucomiss
loopne
ljmp
sub
int
xlat
jecxz
int
lcall
xchg
jbe
rcl
loope
jg
add
sub
mov
mov
and
and
xlat
sub
ds
out
repnz
pusha
kxorw
xchg
ljmp
dec
add
push
mov
fisubl
inc
into
jmp
and
call
inc
and
xchg
cmp
pushf
lock
adc
add
or
sar
mov
fidivs
jge
test
mov
mov
shlb
popa
jg
push
es
xchg
stos
or
mov
lods
xchg
pop
push
cli
mov
or
add
decl
jg
inc
pushf
or
subb
pop
sbb
mov
sti
add
mov
or
das
lock
jmp
mov
xor
cmp
stos
aaa
push
cs
incl
push
jo
push
outsb
jge
out
jle
dec
inc
sbb
add
rcrl
ljmp
jmp
daa
sub
loopne
fistl
in
paddd
jmp
ja
movsb
les
cmc
fists
fisubs
sub
cwtl
loop
mov
fwait
in
sbb
mov
xchg
cmp
inc
add
jno
mov
sub
and
sbb
scas
sti
dec
cltd
into
or
int
daa
loope
insb
popf
idiv
pop
ljmp
jno
vmovapd
or
outsb
leave
sbb
cwtl
cld
shl
cmp
ljmp
and
adc
or
lahf
mov
mov
dec
icebp
ret
cli
mov
mov
lcall
jmp
add
push
fdivrs
leave
xchg
or
ficoml
mov
fcmovne
int
cmp
mov
les
sub
ds
clc
cmp
pop
dec
stos
nop
ljmp
cmpl
jmp
or
repz
mov
inc
dec
cwtl
jg
push
js
data16
push
rolb
mov
cmp
aad
scas
push
test
imul
mov
xlat
mov
jg
jmp
shrl
dec
aas
aam
scas
pop
jns
or
aas
popa
les
jnp
std
sbb
ljmp
sbb
inc
stc
dec
xchg
cli
pop
mov
push
jge
icebp
jg
das
sahf
cmp
mov
inc
andl
mov
lahf
push
mov
jae
filds
das
out
mov
pop
lds
or
nop
lds
add
stos
and
push
out
inc
outsb
xchg
cld
cltd
test
fucomip
add
mov
add
loopne
pop
repz
pop
jne
push
into
push
inc
adc
decl
jmp
and
xor
inc
pop
lahf
aad
js
adc
stc
adc
imul
or
pushl
push
cmp
fadds
std
jle
pcmpgtb
mov
push
repz
mov
mov
mov
jo
nop
fisttpll
lock
ljmp
push
and
mov
imul
fbld
jl
push
addb
rorb
fidivrl
jbe
adc
clc
jne
loope
jecxz
inc
push
sbb
out
mov
iret
pop
mov
adc
push
add
mov
lods
mov
call
pop
push
cmp
leave
call
inc
sub
push
decl
push
pusha
fisubrl
and
push
jge
pushf
cltd
xchg
sbb
sbb
sbb
outsl
call
cmp
mov
imul
lcall
lods
aaa
call
mov
sbb
push
or
stos
cmpsb
lret
nop
fcompl
pop
mov
cmc
lods
pop
fdivrp
push
inc
ja
add
mov
add
mov
lods
inc
sub
add
mov
or
adc
add
and
lcall
ja
dec
inc
add
xor
xor
xor
xor
add
cmpsb
mov
es
repz
inc
imul
adc
or
dec
inc
adc
adc
add
add
imul
in
adc
adc
fwait
and
and
sub
jbe
xor
xor
xor
add
and
mov
push
xchg
add
add
mov
inc
adc
pop
imul
sub
fnsave
and
and
add
inc
jnp
lods
insb
sub
rcrb
inc
inc
inc
xchg
pop
adc
pop
pop
addl
jg
mov
pop
inc
push
dec
add
fs
insl
imul
fs
push
xor
jns
and
imul
add
adc
ja
cmovo
mov
add
pop
sub
add
pop
push
cmp
add
dec
mov
int
lcall
imul
push
adc
sub
adc
jl,pn
aaa
xor
xor
or
add
lods
mov
outsl
push
outsb
fmuls
jne
mov
arpl
add
jae
mov
fidivl
push
stos
and
sarb
add
adc
lods
rcrb
adc
lcall
test
mov
out
sbb
adc
dec
mov
or
and
lahf
mov
xlat
lcall
add
or
adc
sbb
popa
mov
lcall
ss
jne
std
jae
jne
insl
add
arpl
push
adc
adc
cmc
mov
pop
jae
jmp
xor
xor
jno
or
ss
rcll
inc
xchg
adc
ljmp
dec
or
imul
insb
ja
aaa
jbe
sbb
loope
inc
cld
movsl
rcrb
xor
add
imul
or
dec
inc
adc
jb
popa
insb
inc
insb
insb
outsl
inc
jne
jne
outsl
fs
pop
ret
loopne
es
push
fs
dec
pushf
mov
inc
dec
adc
or
xor
adc
shrb
sbb
push
inc
jae
inc
push
adc
mov
shlb
sub
pop
rcl
mov
fdivrs
sub
mov
or
repnz
icebp
sbb
pusha
pop
xor
xchg
mov
in
cmp
sbb
scas
mov
and
jae
or
imul
and
push
adcb
mov
inc
dec
std
adc
add
push
jmp
imul
jae
das
inc
inc
dec
jno
jne
outsb
je
sahf
pop
imul
lds
test
mov
in
push
adc
lock
jg
jnp
add
mov
arpl
jb
xlat
mov
popa
xorl
add
xor
or
mov
fs
xor
lret
inc
int
pop
int
inc
inc
arpl
and
jne
mov
out
ret
aaa
mov
test
imul
jecxz
fdivl
xchg
add
test
aaa
push
xor
aaa
dec
mov
dec
or
push
cmp
xchg
into
mov
or
dec
and
cmp
pop
push
dec
sub
push
dec
dec
shll
dec
int
daa
add
lods
popa
jo
mov
or
push
adc
xchg
aad
mov
jecxz
push
cmp
cmp
xchg
cmp
rcl
xor
out
dec
adc
jge
pop
xchg
pushf
mov
add
push
imul
cmp
push
jbe
nop
outsb
inc
cwtl
pop
jnp
adc
lcall
pop
add
dec
push
inc
pop
push
inc
pop
inc
dec
dec
pop
inc
inc
push
je
jb
inc
or
jne
lock
sbb
scas
outsb
xor
outsb
repz
aas
mov
ret
push
jae
jae
and
mov
jbe
jg
dec
dec
push
insl
bound
jo
enter
fcmovu
jae
or
rorb
mov
pop
pop
mov
imull
and
xchg
jecxz
or
gs
xor
sbb
push
pushf
imul
mov
call
adc
je
adc
mov
jae
int3
inc
jne
arpl
cmp
int3
imul
cli
mov
lcall
ja
adc
jne
movl
adc
fs
and
imul
sarl
rcl
sub
push
add
jns
inc
xchg
inc
or
dec
add
xor
fs
add
dec
xor
fnsave
bound
gs
jo
mov
inc
cmpsb
mov
popa
cmpsb
es
rolb
data16
mov
in
mov
sub
cmp
inc
cmp
xor
rcrl
repnz
adc
xor
mov
insl
lods
lods
add
dec
add
add
lods
push
popf
push
xor
clc
mov
push
xorb
test
and
mov
data16
bound
outsb
shll
push
jo
push
inc
inc
push
lds
pusha
mov
jae
jb
popa
je
dec
jne
js
or
inc
gs
imul
je
jne
and
mov
imul
imul
iret
fisttps
push
outsb
insl
popa
jo
imul
gs
insl
gs
push
push
fs
insb
inc
or
dec
popa
int3
fstp
outsl
sbb
push
imul
push
adc
fistl
jb
imul
pop
imul
xor
test
adc
divb
inc
fs
cmovne
adc
mov
jns
ss
cmp
mov
insl
jo
fldpi
int3
jb
rclb
outsb
outsl
ja
ret
out
jbe
stos
gs
in
stos
dec
call
mov
imul
popa
jne
je
inc
ss
pop
test
inc
dec
sahf
outsb
aam
jnp
push
dec
sub
jae
or
jg
negb
dec
imul
inc
je
insl
push
bound
jae
outsb
push
mov
insl
ret
push
lods
adc
ret
xchg
xor
aaa
sbb
dec
fs
adc
add
outsb
lea
gs
jg
insl
inc
inc
push
fists
or
outsb
mov
js
mov
gs
mov
sarl
xchg
sub
mov
imul
fidivl
fcmovu
imul
les
fmul
or
dec
outsl
fs
xor
data16
xchg
adc
clc
push
pop
dec
xchg
dec
jae
fimull
pop
call
jns
outsl
fs
fdivl
add
loope
xor
push
bound
push
shlb
insl
mov
shrl
and
jb
jae
sub
popa
incb
sbb
jb
jb
jae
adc
mov
fwait
mov
cmp
add
jne
mov
inc
inc
gs
fisubl
js
es
wbinvd
jae
pop
roll
xor
push
lret
jb
or
insl
outsl
jbe
jo
mov
mov
fs
arpl
xchg
jg
insb
addr16
sbb
fimuls
daa
sub
idivb
fs
arpl
in
inc
imul
sub
push
inc
dec
add
xchg
decl
stc
add
push
inc
loopne
sidtl
add
insb
add
jmp
and
pop
adc
and
leave
in
add
add
add
add
fnstsw
addb
sub
pop
lds
xchg
push
cmp
push
xor
nop
push
mov
push
jb,pn
sbb
mov
dec
fmulp
fmull
fcomp
fwait
inc
je,pn
jae
psubq
mov
cltd
xchg
push
shlb
and
ret
xor
or
and
es
pusha
mov
out
push
fwait
cmp
lahf
ss
lret
dec
or
lahf
js
inc
ss
inc
lahf
mov
leave
scas
stc
fiadds
dec
sbb
daa
pop
add
lods
rcrb
push
movsb
xchg
mov
xchg
sbb
add
out
pop
xchg
aas
jo
add
dec
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
and
mov
and
mov
shlb
dec
and
movsl
pop
or
pop
stc
sub
jg
ret
pusha
add
sub
cwtl
push
pop
adc
mov
test
mov
aad
jbe
fisttpl
sub
out
adc
xor
jg
es
jge
cltd
mov
pop
sarb
shll
jl
pop
rol
lock
or
lods
imul
adc
sbb
cmp
pop
push
frstor
cmp
aas
pusha
data16
fisubl
mov
xchg
adc
sbb
xchg
test
jbe
and
sbb
adc
sbb
arpl
fdivs
sub
jo
push
bound
mov
sbb
adc
repz
inc
flds
cmp
out
mov
popa
jge
push
jnp
jecxz
outsl
and
push
sarl
mov
xor
add
add
loopne
push
lcall
lcall
icebp
adc
test
xchg
dec
fnstenv
sub
xlat
xchg
inc
jnp
adc
inc
push
out
sub
rclb
push
sbb
lods
and
cmp
adc
inc
push
mov
lock
mulb
mov
orb
dec
ja
cmpsb
mov
pop
and
fnstsw
cmp
pop
xchg
mov
sbb
push
xlat
lea
stos
pop
movsl
cltd
xchg
mov
add
movsb
inc
cltd
sbb
add
jno
inc
cmp
xor
jb
and
add
dec
and
in
xor
and
arpl
inc
ja
negl
mov
mov
int3
cwtl
dec
out
mov
pop
or
jbe
mov
jg
pushf
cwtl
fnstenv
push
sbb
.byte
adc
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
inc
add
push
add
add
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
jl
adc
jns
dec
add
add
aas
add
add
add
add
add
add
add
scas
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
data16
add
imul
pop
add
jbe
jo
jo
js
arpl
add
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
data16
add
imul
inc
add
js
jb
imul
add
and
dec
add
jbe
insl
add
jno
je
jo
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
sub
and
aaa
add
add
add
add
add
and
xor
cmp
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
arpl
data16
add
imul
add
jbe
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
data16
add
imul
pop
add
jbe
jo
jo
js
arpl
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
data16
add
imul
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
data16
add
imul
inc
add
js
jb
imul
add
and
dec
add
jbe
insl
add
jno
je
jo
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
sub
and
aaa
add
add
add
add
add
and
xor
cmp
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
call
add
add
inc
add
add
add
and
add
xor
inc
inc
add
push
inc
add
pusha
inc
add
outsb
inc
add
add
add
jl
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
insl
gs
arpl
