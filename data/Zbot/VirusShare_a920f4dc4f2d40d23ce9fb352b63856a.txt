pop
stc
decl
push
add
and
xchg
mov
inc
loopne
call
and
inc
or
add
mov
or
cs
inc
cmp
insb
leave
es
or
fsts
mov
sbb
push
adc
xor
lcall
jmp
inc
add
mov
mov
repz
jne
mov
add
in
call
fiaddl
adc
push
fcoml
lret
test
inc
xor
mov
mov
out
add
cmp
mov
dec
cmp
rorb
cmp
xor
repnz
mov
sbb
mov
call
scas
jl
jbe
jno
jmp
rclb
jne
divl
sbb
adc
fimuls
dec
inc
xorb
enter
pop
inc
popa
sbb
jg
cld
mov
push
push
cld
neg
and
jmp
fisubrs
imul
inc
add
test
jg
pop
adc
loopne
jne
add
mov
fimuls
or
divl
rcr
out
call
in
mov
and
mov
not
sbb
rcll
lret
add
and
add
sub
outsl
mov
in
loope
sub
out
orb
pop
pop
mov
jne
not
les
lods
mov
adc
not
mov
movsb
fdiv
rorb
jge
pop
mov
xor
int
add
sbb
mov
insl
pop
loopne
inc
add
push
push
fimull
mov
scas
std
or
dec
sbb
sti
xchg
mov
outsl
imul
cmp
and
fisubrl
adc
inc
push
mov
push
fcoml
icebp
psubsb
clc
mov
xchg
xor
fldenv
sbb
and
nop
xor
loop
sub
loopne
inc
push
sahf
sti
es
push
jmp
mov
std
jo
fldcw
and
and
out
pop
or
fsubl
mov
mov
or
repz
popf
jp
add
subb
push
shl
mov
out
fucomip
sbb
jge
out
sbb
adc
jno
ds
roll
outsb
aaa
mov
sbb
inc
dec
mov
jne
cld
sbb
adc
ret
mov
sbb
or
scas
and
cmp
jnp
adcl
add
xor
ss
sbb
pop
ret
pop
push
ds
shlb
mov
adc
cmp
neg
loope
lahf
mov
dec
in
push
add
pop
cli
out
loopne
or
jne
call
clc
ljmp
jbe
adc
mov
or
arpl
add
jbe
adc
push
clc
sbb
push
pop
fisubl
clc
and
and
xor
bound
mov
rorb
stc
ret
leave
ret
int3
shr
push
and
in
aaa
andb
aam
pop
cmp
scas
xor
out
lock
cld
xor
mov
sbb
pushf
in
adc
add
mov
sti
and
add
and
cmp
in
xor
rclb
cmpsb
insl
insl
ljmp
mov
adcb
test
mov
xor
fdivrl
sbb
jmp
add
ret
pop
out
adc
jmp
sbb
xor
inc
adc
cs
xor
rorl
mov
lret
dec
fbld
nop
test
popf
sbb
mov
push
shlb
add
mov
daa
xchg
xor
and
frstor
fbstp
rep
jb
jae
in
and
fsub
in
addl
shll
es
fsubs
je
mov
lock
aaa
or
test
shlb
call
cmp
ja
popa
dec
dec
pop
lcall
gs
inc
and
xor
add
cmp
je
xor
cmp
pop
pop
ljmp
dec
and
push
popa
jmp
add
lret
negb
test
mov
xor
xor
lret
aam
hlt
jle
jne
adc
lcall
in
out
ret
xorl
dec
inc
and
stos
fs
xchg
cmp
xchg
jne
fwait
mov
dec
lcall
fwait
pop
inc
clc
push
push
inc
fdivp
and
xchg
mov
inc
add
cmp
shl
fadds
shr
add
push
xor
test
inc
mov
rcrb
xchg
inc
nop
xor
fsubs
inc
mov
pusha
divb
xor
loopne
mov
and
popa
xchg
les
xchg
ret
and
insl
xchg
mov
lret
popa
cmp
fs
js
or
pop
ficompl
out
repnz
add
inc
mov
int
je
notb
mov
fsubl
fimull
movsb
adc
xchg
jnp
dec
inc
int
lret
xor
in
sbb
dec
outsb
mov
iret
mov
lea
and
jecxz
and
inc
mov
pop
sub
push
iret
cmp
sub
sbb
ja
jnp
xor
rcrl
scas
lock
pop
add
xor
sbbl
adc
outsb
mov
xor
mov
add
rcr
aaa
mov
daa
jbe
cmp
lds
cmp
mov
out
je
test
mov
xor
xchg
add
lock
xlat
orl
jnp
jbe
dec
pusha
out
or
dec
fdivrl
pop
xchg
clc
insb
mov
daa
je
loopne
iret
ret
loopne
das
xchg
jnp
xor
roll
imul
test
sbb
aaa
or
jge
cs
push
andl
fwait
xor
cltd
ret
aam
jmp
stc
dec
mov
mov
add
rcrb
cmp
stc
or
jp
insb
mov
stc
push
xchg
dec
inc
test
xchg
pop
test
and
stos
popa
int3
les
pusha
testl
and
sub
xchg
mov
add
testl
lock
pop
add
and
scas
fnsave
pop
pop
insb
lock
xor
cmpl
fldl
sbb
lods
rcll
pop
inc
loopne
or
sbb
dec
xor
call
mov
js
xchg
sbb
pushf
into
aam
imul
mov
add
push
arpl
ss
lret
call
in
mov
cli
jle
jmp
ret
or
xchg
or
arpl
jae
xor
jae
stos
icebp
sub
ja
fisubl
dec
aad
jmp
dec
loope
push
jg
push
push
push
ljmp
sbb
dec
leave
insl
fs
push
bound
pop
aam
mov
pop
mov
iret
nop
sub
cmp
cmp
xor
inc
push
mov
mov
add
dec
lock
add
sahf
aam
and
idivl
imul
fbstp
adc
out
xchg
cmp
sbbl
aam
in
cli
dec
aam
mov
mov
in
shll
ljmp
inc
insb
jno
fists
dec
incb
add
jl
sbb
adc
add
jmp
fmuls
sub
add
sub
loopne
das
mov
pop
or
xor
inc
decl
cmpl
mov
push
jbe
aam
or
repnz
mov
and
dec
dec
push
loop
mov
cltd
xchg
add
add
or
fadds
fidivrs
or
sub
popf
mov
adc
sub
mov
fcoml
dec
or
sbb
sbb
aaa
ret
leave
and
roll
jno
xchg
std
xchg
add
rolb
stc
add
mov
add
pop
and
mov
sti
or
jae
xor
cmp
in
call
sahf
add
sbb
ds
ret
jnp
xor
popf
cwtl
std
or
and
mov
insb
in
mov
pop
push
sub
adc
push
std
and
inc
add
mov
add
sbb
aas
add
pop
les
mov
jg
push
js
add
push
inc
dec
pushf
dec
add
mov
jg
dec
add
adc
nop
sbb
arpl
cmp
testb
add
mov
xorb
aas
mov
add
dec
test
inc
add
xor
push
andb
xlat
aad
and
add
mov
push
xor
add
insb
in
fnstsw
out
push
loop
push
and
loopne
das
fisttpl
into
icebp
lods
push
jno
inc
hlt
fdivs
add
pop
mov
add
sub
in
push
sub
and
fidivl
sahf
es
fsub
outsl
mov
mov
and
dec
mov
jns
mov
mov
imul
imul
loop
jmp
pop
int
rcll
ret
push
ja
imul
cmp
xor
push
add
jbe
add
inc
aam
add
lods
out
pop
sbb
add
negb
insl
js
mov
mov
inc
jnp
sbb
xlat
in
cmc
in
fisubrs
xor
scas
test
pop
fdivr
or
lea
push
cmc
mov
imul
or
out
jbe
mov
test
inc
adc
cs
mov
test
ljmp
sbb
jg
adc
sbb
jecxz
or
mov
fwait
mov
dec
das
mov
adcl
push
sbb
or
xor
jne
fidivrs
and
jmp
pop
inc
cmp
insl
sti
mov
repz
outsb
jo
sbb
ljmp
hlt
in
mov
mov
add
push
and
push
sub
inc
sbb
mov
rolb
adcl
jo
mov
mov
add
repz
jp
rcll
test
jl,pn
loopne
cltd
xor
in
add
es
mov
inc
sarl
mov
lods
mov
cmp
push
js
sbb
enter
add
stc
mov
call
test
inc
cltd
add
stc
mov
js
outsl
add
jle
testl
js
push
fidivl
int3
or
add
jle
jg
mov
add
popf
or
add
fucomi
enter
ss
adc
dec
ja
and
mov
fcomps
dec
add
aad
add
add
add
repz
adc
push
sar
adc
and
out
add
sbb
xor
imul
adc
jmp
adc
mov
xorb
sbb
mov
lock
cmp
loopne
lods
into
mov
cld
mov
add
jmp
neg
testb
ss
sbb
and
subl
movsl
adc
xchg
rclb
into
cld
mov
mov
sub
xlat
int3
mov
mov
inc
or
sub
jae
add
mov
mov
cld
inc
and
sbb
repnz
pop
cli
pop
mov
dec
xor
rorb
and
in
sub
dec
push
sbb
daa
mov
scas
xorb
insl
hlt
xchg
dec
cmp
roll
in
data16
js
ja
scas
inc
xor
xor
negl
add
fdivl
mov
cltd
bound
xchg
mov
shll
dec
sub
mov
movsb
mov
push
sub
testb
sbb
mov
addr16
jp
push
and
pop
pushf
mov
in
add
lock
add
lods
adc
lock
pop
into
mov
test
inc
dec
or
fmull
ret
cmpsl
jle
adc
adc
or
mov
cmp
sbb
push
mov
out
imul
add
or
aaa
jb
stc
arpl
inc
cmp
and
sub
and
fistps
or
adc
pop
call
sbb
lea
inc
fadds
sbb
push
pushf
in
or
and
ret
adc
xor
stos
js
adc
dec
bound
mov
mov
xor
addb
loopne
jp
ljmp
xor
mov
add
xchg
xor
mov
jno
and
lds
es
mov
inc
inc
jne
in
add
aas
mov
adc
lods
inc
jecxz
loope
lods
mov
add
shrl
mov
add
leave
in
mov
rclb
stc
fldl
lret
inc
mov
enter
hlt
add
movsl
xor
or
jmp
xor
shl
ror
rorl
push
orb
movsl
push
pextrw
push
shlb
pop
call
lcall
loopne
jp
aad
sub
call
jle
sbb
sbb
push
lock
push
inc
add
adc
test
mov
sarb
shl
pop
cmp
clc
jmp
xchg
adc
jne
sbb
dec
cmp
mov
or
insl
cmovo
mov
xchg
inc
or
mov
inc
cwtl
and
sub
mov
sub
sub
ret
rolb
and
mov
push
movsb
sbb
repz
cmp
fldenv
adc
pop
jle
dec
sbb
rorl
and
rcrb
dec
pop
jecxz
add
aaa
xchg
xchg
fcomp
xor
push
mov
mov
inc
stc
mov
jbe
mov
cld
sub
fidivrl
les
add
popf
push
adc
inc
out
adc
mov
fdivrs
mov
scas
mov
sbb
sub
lret
cmp
dec
sbb
mov
lods
sbb
xchg
or
and
mov
fidivs
push
adcb
inc
adc
mov
add
push
inc
xchg
addr16
add
jae
push
cld
ljmp
xor
jecxz
xlat
test
or
mov
mov
jecxz
mov
mov
mov
int
adc
adc
xor
clc
shlb
sahf
dec
add
lock
or
popf
jae
push
push
mov
add
test
das
cltd
sub
out
dec
lcall
les
hlt
je
add
out
data16
andb
fidivrs
jo
leave
jge
fmuls
out
add
add
add
and
or
hlt
dec
cmpsb
jae
or
dec
mov
bound
add
mov
lea
sar
push
push
cmpsl
mov
lds
shrl
jge
xchg
nop
mov
or
rorb
jle
xor
jb
jmp
pop
test
mov
int3
mov
lret
aas
mov
cs
loope
push
add
sahf
xor
inc
dec
add
cli
icebp
mov
jno
lret
fiadds
incb
cmp
imul
pop
es
aaa
push
mov
adc
xchg
xor
mov
aas
pop
push
push
test
aam
rclb
bnd
add
cmp
adc
loopne
cmp
dec
imul
mov
adc
or
fistps
pop
pusha
inc
push
and
mov
add
pop
cmp
cmp
and
in
and
or
insb
add
add
cmpb
inc
test
add
sbb
cmp
nop
dec
arpl
sbb
add
clc
iret
repz
lods
jg
or
sub
jg
cmp
dec
or
adc
pop
test
insb
imul
mov
sub
fwait
add
sub
outsl
push
push
add
sub
idivb
lods
je
and
rol
sahf
mov
and
enter
mov
xor
popf
or
mov
adc
mov
stc
dec
cmc
insl
mov
in
and
int
mov
imul
outsb
adc
push
mov
inc
arpl
adc
xor
loope
adc
push
sti
push
out
test
or
xchg
push
push
inc
shlb
mov
lods
mov
das
insb
rorb
das
add
in
mov
jg
outsb
popf
push
lock
adc
addb
sub
cmp
nop
add
jno
sbb
aas
or
add
add
add
inc
pop
incl
aam
ret
lods
cltd
adc
inc
jnp
ret
jecxz
or
sub
repz
loope
jle
cltd
adc
lcall
xor
divb
jp
sub
out
shrl
fstl
and
shrb
inc
bnd
and
pusha
jle
xor
pop
cmp
jecxz
dec
nop
cmpsb
mov
loopne
mov
lock
sbb
dec
loopne
mov
pusha
or
ffreep
push
nop
fs
sbb
movsb
sbb
push
xlat
repnz
or
lock
int
push
pop
cli
roll
push
mov
cmp
pop
lock
mov
inc
xchg
inc
xor
dec
mov
and
push
imul
xor
adc
adc
and
mov
pop
daa
push
cmp
jp
call
adc
add
push
cmp
rorb
pop
lods
bound
aad
xor
ret
xor
pop
cmp
or
mov
or
int3
adc
pop
and
cs
sub
scas
loope
pop
lock
and
imul
mov
sub
add
nop
and
std
mov
lock
adc
xor
mov
add
movb
push
and
sti
test
jnp
add
sahf
or
xor
lret
fsubl
mov
sub
fisttpl
or
outsl
call
mov
adc
adc
hlt
adc
mov
jnp
call
adc
xor
les
or
pop
and
or
inc
sti
clc
or
loope
xchg
sub
orl
pop
test
jg
stc
sub
ret
dec
hlt
out
add
pusha
adc
imul
mov
push
out
mov
mov
sbb
arpl
push
int
push
fsts
inc
in
sbbb
lret
cmp
scas
xor
sbb
sbb
js
lcall
aaa
fs
mov
shrl
or
jp
and
cmp
mov
and
jae
dec
jmp
cmp
call
mov
sub
or
add
loop
inc
dec
cmc
loopne
aam
lea
push
adc
cmp
mov
fbld
mov
fcomi
or
inc
and
dec
std
stos
push
push
and
add
xor
out
sub
xchg
scas
push
mov
popa
and
js
cmp
mov
lahf
xchg
dec
sub
add
xlat
and
or
add
mov
test
test
popa
in
in
push
mov
cmp
clc
mov
xchg
sbb
mov
lock
imul
jmp
xchg
push
dec
lods
mov
cmp
add
leave
icebp
mov
cld
es
add
jb
popa
or
mov
mov
sub
sub
add
add
in
inc
inc
leave
mov
add
dec
push
add
sarb
xorb
mov
and
movsl
in
cmp
sbb
fistps
ret
in
mov
or
jge
add
pop
dec
cmp
and
js
in
sub
or
push
xlat
cmp
push
incl
outsl
jae
xchg
sbb
data16
xchg
and
in
popf
loope
adc
scas
iret
dec
orb
popf
pop
jl
clc
mov
mov
mov
add
aas
lods
sub
mov
mov
std
fistps
stc
adc
jo
jp
imul
inc
pop
ret
es
cli
nop
mov
insl
mov
lods
shr
in
xchg
inc
subb
or
add
or
into
jp
popf
in
xchg
or
cs
decb
lds
mov
xor
enter
call
xorl
or
push
mov
int
sub
sbb
xchg
jecxz
outsl
mov
jo
xor
and
repz
or
fwait
clc
repnz
sub
inc
jne
adc
shl
mov
outsl
cld
mov
jp
push
ja
sub
in
adc
mov
xor
mov
or
mov
insl
ljmp
mov
cmp
sub
pop
mov
inc
arpl
xchg
imul
jmp
xor
fistpl
mov
push
push
sahf
jbe
jg
orb
loopne
outsl
cwtl
xor
pop
pop
js
ret
aas
adc
outsl
les
dec
mov
insb
adc
test
cli
stc
inc
outsl
adc
jb
adc
dec
sbb
cld
mov
xor
mov
xchg
add
fcoms
iret
ds
mov
mov
add
sub
mov
push
cld
outsl
cmc
inc
insl
cmpsb
fs
mov
push
scas
bound
imul
inc
push
andb
pop
cmpsb
pushf
adc
mov
daa
nop
clc
or
arpl
mov
mov
movsb
adc
scas
pop
and
insl
repz
jne
pusha
cmp
mov
stc
aaa
add
inc
pop
mov
and
fiadds
dec
nop
mov
js
add
aaa
push
insl
inc
mov
lret
in
pushf
and
xchg
xor
add
movsl
mov
cmp
push
jno
dec
xchg
loop
add
dec
mov
sub
das
les
insb
ret
sbb
inc
sti
mov
fsubrl
addb
mov
mov
clc
lret
aad
arpl
jno
add
dec
adcl
or
dec
les
js
pop
in
stc
negb
xchg
sbb
and
add
dec
mov
loop
xchg
mov
imul
inc
inc
stos
cltd
popf
insl
pushl
sub
sarb
xor
xchg
mov
mov
lret
pushl
test
and
sbb
loope
clc
mov
cmpsl
mov
adc
out
imul
mov
cmp
sbb
mov
addr16
jg
push
fld
ret
xchg
xchg
and
popa
jo
hlt
test
sbb
push
jae
sbb
icebp
enter
data16
sbb
in
sbb
lock
jle
adc
js
pushf
and
addr16
ljmp
lock
dec
push
addb
mov
add
push
inc
inc
into
or
inc
xchg
fstl
push
mov
ficompl
xor
pop
cli
and
add
sub
repnz
insb
jg
ss
jb
stos
mov
pop
push
and
imul
xchg
cmp
dec
fisttps
dec
test
xchg
mov
xor
and
mov
lcall
je
or
adc
lcall
inc
pop
mov
or
or
lret
inc
or
and
les
adcb
inc
dec
dec
mov
and
test
call
sti
or
jl
inc
xchg
sahf
sbb
fstl
insb
mov
notb
mov
push
pop
outsl
rol
popa
pushf
cs
hlt
cmp
dec
push
inc
xchg
dec
ja
outsl
aam
je
pop
dec
push
and
push
test
es
stos
in
pop
xlat
jnp
aaa
jle
mov
xchg
sub
out
imulb
imul
cmpsl
movsl
add
shr
or
cmp
pop
push
jl
subb
inc
repz
sbb
jno
push
leave
pop
cmp
dec
enter
pusha
scas
xor
xor
dec
pop
inc
add
add
std
push
imul
shlb
mov
mov
pop
fwait
push
cmp
pop
pop
add
in
dec
or
or
push
jmp
movsl
ja
test
popl
jmp
mov
enter
aaa
pop
push
mov
repz
inc
scas
pop
imul
fsub
or
incl
adc
inc
mov
je
dec
fstp
jp
sub
push
in
add
xchg
jbe
in
pop
call
data16
mov
jmp
lods
add
ret
aam
push
xor
xor
mov
jge
gs
sub
add
fstp
dec
mov
pop
pop
pop
lcall
mov
dec
imul
xor
sbb
insl
adc
jns
iret
in
sbb
pop
fidivl
mov
adc
add
clc
stos
das
mov
in
xchg
mov
stc
sbb
mov
pop
sti
mov
mov
hlt
mov
sbb
mov
push
lcall
call
sbb
or
les
cltd
pop
and
sbb
fistpll
lods
xor
dec
jbe
xor
pop
or
push
fisubs
xchg
sbb
push
idivb
cli
in
pop
add
lea
push
push
dec
mov
pop
adc
call
cmp
push
mov
in
add
adc
mov
lds
fidivrl
inc
stc
outsl
stc
arpl
or
daa
mov
aaa
icebp
inc
dec
and
mov
subl
pop
jp
adc
dec
pop
enter
out
add
pop
and
mov
and
push
and
adc
subl
mov
push
mov
add
das
lock
jnp
aas
or
pop
data16
incl
jg
pop
stos
jp
dec
out
inc
inc
mov
mov
cwtl
sbb
inc
pop
or
fiaddl
cmpsb
movsb
or
es
ret
lods
cmp
and
pop
loopne
clc
xchg
mov
or
mov
int3
jb
pop
ss
leave
pop
push
xchg
fsubrl
push
inc
cmp
leave
or
jae
sub
jp
add
aaa
test
jbe
fwait
pushf
sub
jmp
ret
pop
lods
rclb
insb
pop
mov
add
test
icebp
adc
push
dec
adc
lahf
push
aas
mov
jp
sahf
les
test
sbb
push
out
decb
push
mov
adc
flds
hlt
fisttpl
inc
int
movl
loope
ret
mov
pop
mov
push
movsl
test
std
or
mov
mov
or
pop
bound
and
cli
mov
loop
test
and
cmp
mov
lods
inc
or
sbb
rolb
test
push
popf
stos
sahf
repz
inc
mov
and
fwait
or
mov
pop
push
push
push
mov
sbb
push
cld
mov
mov
and
pushf
hlt
test
test
adc
mov
ljmp
ds
shll
out
mov
or
pop
add
call
or
jge
pusha
out
inc
inc
push
insb
mov
ds
mov
adc
inc
inc
dec
or
mov
fisttpll
mov
out
mov
mov
xor
cmp
pop
adc
pop
pusha
push
test
xorl
adc
add
and
fldcw
popf
in
or
icebp
faddl
subb
sar
xor
das
push
cmpsb
jo
arpl
or
repz
fsubl
lods
aam
shll
repnz
es
xor
push
xor
cmpsl
mov
sbb
xchg
aaa
pusha
inc
sbb
fmull
add
fldenv
shrl
hlt
ds
and
aam
sub
xor
lret
fwait
orb
rcr
mov
sbb
xor
push
mov
mov
arpl
fmuls
sub
xchg
and
clc
pusha
data16
int
fdivl
sub
mov
push
xchg
adc
cs
movsl
lock
or
cmp
xchg
loopne
or
insl
inc
add
sbb
les
rcr
imul
lcall
jmp
aaa
ds
insl
dec
sub
add
push
lcall
andb
sbb
mov
mov
push
je
push
push
insl
pop
dec
adc
pop
movb
shlb
fsubrs
pop
enter
or
sahf
cmpsl
add
in
insl
lock
mov
ret
out
xor
push
xor
mov
mov
add
rcrl
pusha
jno
pop
inc
cwtl
push
sub
mov
xchg
pop
cs
sarl
fsubl
test
mov
adc
sarb
push
ret
test
test
cmp
dec
and
inc
enter
mov
mov
sub
xchg
cmp
insl
add
rolb
and
arpl
mov
pop
ss
cmp
dec
xor
or
cmc
lock
push
cli
aaa
inc
je
sbb
or
adc
pusha
adc
aas
and
push
mov
push
mov
xor
or
lahf
pop
loopne
sbb
aas
push
mov
xchg
mov
push
cmp
mov
jl
cs
clc
cmp
inc
and
mov
pop
subl
cli
push
xor
es
idivl
je
mov
pushf
int3
and
push
fiadds
and
loopne
adc
fadd
daa
pop
pop
lds
adc
fmulp
adc
pop
add
bswap
xchg
mov
dec
xchg
mov
and
shrb
lods
stc
pop
sti
sbb
sbb
or
sub
push
movsb
shlb
in
sub
aam
lods
dec
inc
sub
xchg
bound
aam
jb
dec
sub
pop
jae
je
lea
outsb
push
in
and
sbb
mov
sbb
pushf
int3
push
fs
enter
ja
xchg
shll
mov
push
mov
push
xchg
jecxz
inc
sbb
inc
pop
out
out
icebp
es
mov
sbb
add
sub
mov
js
xchg
inc
mov
ret
and
out
xchg
xchg
sub
adc
ljmp
push
jge
push
sub
push
fnstenv
inc
insl
jmp
fcompl
scas
sbb
lahf
mov
rorl
cmp
outsl
insl
xchg
adc
cmpsb
jmp
dec
inc
mov
std
pushl
pop
pop
in
dec
outsb
mov
pop
loopne
mov
jo
or
jmp
add
fcompl
fimuls
lcall
out
jmp
lds
pop
jge
pop
fwait
and
shll
push
pop
inc
mov
sub
aas
mov
out
and
rcr
push
in
add
add
outsb
filds
or
sbb
adc
sub
lock
call
push
bound
movl
scas
hlt
cs
push
or
mov
mov
stos
dec
xchg
leave
adc
std
push
mov
push
orl
mov
fisttps
cmp
mov
mov
int3
arpl
daa
pop
or
filds
push
mov
adc
in
sub
cmpsl
xor
lea
or
cmp
shlb
sub
mov
cltd
inc
inc
test
js
push
out
push
xor
sub
xchg
out
mov
mov
aas
stos
jnp
xchg
cmp
jecxz
adc
xlat
or
inc
rorl
dec
insb
fistpl
loopne
inc
jne
xchg
xor
pop
clc
adc
mov
xchg
sbb
adc
jg
testb
xor
nop
pop
inc
std
cmp
fwait
and
adc
mov
and
jb
cld
negb
cmp
adc
mov
pop
add
mov
outsl
mov
push
ret
sbb
inc
pop
sbb
nop
loope
divb
icebp
invd
popa
rcrb
aad
inc
rolb
shll
xchg
mov
jge
dec
jmp
into
addr16
ret
into
test
fildl
es
shrb
clc
scas
test
mov
test
out
jle
mov
xchg
mov
shrb
lret
insl
loope
pop
adc
cltd
dec
das
lcall
test
popf
or
aas
test
xchg
ja
popf
lret
sbb
dec
jg
push
mov
adc
add
mov
push
jno
inc
ss
fnsave
sub
add
hlt
or
jmp
fninit
in
sub
js
out
jg
sbb
mov
lcall
insb
xor
leave
xchg
cmp
sub
leave
sub
xor
clc
mov
add
hlt
mov
sub
out
sbb
sbb
add
mov
sti
xchg
sbb
xor
iret
cmp
ror
push
jle
inc
out
add
xchg
movsl
pop
mov
loopne
dec
test
mov
aaa
insl
idivb
sbb
es
sar
sub
lock
and
push
pop
in
test
pop
jecxz
enter
sub
mov
xor
in
call
adc
pop
sbb
mov
clc
and
cmpsl
loop
test
cld
aaa
jbe
inc
inc
cmp
add
aaa
pusha
shl
xchg
push
push
adc
out
fld1
and
mov
cwtl
aad
adc
dec
ss
mov
sar
out
mov
inc
pop
cmpsl
and
adc
not
mov
call
lock
push
cld
test
or
test
loope
sbb
imulb
test
or
aad
pop
mov
or
insb
jmp
outsl
push
mov
push
jl
out
ret
cmp
scas
ret
andl
js
call
imul
pop
fisubrs
in
jae
xchg
fidivrl
xchg
divl
inc
icebp
add
push
sbb
mov
cli
jg
cmpl
les
push
pop
or
rorl
pop
fisubs
pop
outsb
fnstenv
subl
mov
aam
pop
je
mov
sbb
mov
outsl
mov
mov
incl
out
and
cmp
pop
daa
stos
xchg
rclb
mov
fs
lods
lret
daa
sub
mov
fidivs
jne
scas
xchg
les
mov
adc
mov
movsl
cmpsb
lret
mov
pop
sub
and
dec
jle
sub
push
hlt
ja
icebp
pop
lret
mov
sbb
sub
jne
mov
inc
or
pop
jno
sub
xchg
inc
add
outsb
push
sbb
ret
lock
jmp
js
mov
arpl
test
repnz
xor
lods
das
cmc
jb
in
add
pop
iret
ret
add
fmull
pop
sbb
fcmovne
jno
pop
fdivl
dec
add
xor
xchg
sub
movsb
cli
outsl
enter
xor
push
ficoml
std
push
xor
jmp
les
popl
repz
add
adc
fnsave
jmp
jbe
dec
call
bound
mov
sub
and
dec
ret
aas
ljmp
xchg
or
les
out
or
cs
fnstsw
mov
fsts
pop
notl
push
adc
mov
mov
outsb
pop
test
movsl
push
sbb
sbb
icebp
dec
movsl
cltd
js
pop
gs
ficompl
jne
fisubs
or
out
mov
and
das
out
call
mov
dec
mov
test
out
push
xchg
jg
add
pop
sub
or
add
outsb
cmpsb
xor
outsl
loop
adc
jg
andb
repz
or
fsubr
insl
ret
xor
clc
or
xor
push
cwtl
icebp
or
add
cmp
push
outsl
jae
xor
leave
cmp
dec
in
fsin
or
mov
and
jmp
jle
shrb
rcrl
inc
jge
gs
mov
pusha
fisttpll
mov
pop
arpl
dec
pop
sti
jne
and
mov
cwtl
sbb
inc
adc
mov
stos
or
adc
fisttpl
dec
ds
out
pop
adc
mov
push
lds
and
test
lea
adc
icebp
int3
add
and
subb
push
cmp
mov
sbb
lahf
xor
push
sub
or
mov
decl
push
test
testl
outsl
cltd
mov
cmp
jne
std
aam
add
sahf
mov
jl
sub
cmp
inc
lds
adc
inc
mul
add
push
pusha
stos
icebp
mov
bound
xchg
incb
mov
xchg
push
mov
ds
enter
popa
sti
fistps
mov
pop
and
lods
call
fldenv
inc
cmpb
adc
xor
rcll
pop
push
mov
dec
mov
cmc
and
int3
mov
sbb
push
jp
and
hlt
add
ljmp
mov
xchg
mov
test
arpl
and
push
cmc
es
dec
mov
imul
clc
fisubl
or
stc
adc
and
mov
jl
mov
xorb
pop
rol
fisttps
pop
lds
lret
inc
outsl
cmp
or
jbe
dec
gs
lods
aad
mov
mov
int3
inc
rorb
in
test
fcmovnb
add
add
andb
sbb
mov
xchg
mov
and
test
inc
icebp
shrb
hlt
mov
test
sub
ret
fst
roll
push
cwtl
sbb
xor
cmp
mov
js
push
mov
ds
xchg
decb
int
pop
nop
cltd
push
mov
sbb
mov
vmovups
jecxz
or
inc
inc
add
inc
mov
bound
roll
mov
decl
pop
pop
pusha
out
sbb
xor
adc
hlt
jg
mov
add
scas
pop
push
insb
mov
in
call
mov
inc
mov
push
aad
mov
jl
jbe
test
mov
and
xchg
jnp
mov
loop
dec
or
sar
or
mov
and
loop
xor
outsl
cld
lret
fiadds
gs
and
adc
sub
push
adc
or
icebp
xchg
es
xchg
ss
int3
mov
negl
pop
mov
inc
sti
cmpsb
in
or
xor
incl
js
adc
repnz
fs
adc
loope
mov
xchg
lods
dec
js
sbb
pushf
incl
mov
mov
or
pop
adcb
mov
xchg
push
shr
sbb
popf
js
cmp
pop
and
push
jmp
fs
lods
loopne
jg
les
fisubrs
push
das
clc
pop
pop
rorb
add
outsl
and
mov
jge
xor
mov
xchg
popf
or
outsl
jne
and
fbld
adc
or
jae
inc
inc
add
std
les
jne
das
cmc
decl
icebp
or
adc
add
movsl
mov
std
sub
and
into
jle
sub
ffreep
pop
xor
rcr
jge
push
dec
pop
aaa
jbe
mov
pop
aaa
lods
add
jle
stos
test
lea
push
or
mov
sbb
jle
push
sbbl
inc
dec
sarl
mov
in
mov
inc
fisttps
dec
jns
test
movl
loop
push
adc
sub
fiadds
add
or
ljmp
or
push
loop
loopne
lock
rorb
jo
add
or
push
jo
jo
or
sub
or
xchg
push
push
test
addb
fcomip
sbb
daa
ljmp
mov
mov
inc
add
sbbb
test
jnp
add
fwait
mov
in
gs
mov
mov
and
pop
addr16
push
aam
sub
in
xlat
lret
dec
sub
adc
pop
rorl
data16
or
push
or
push
or
data16
or
sbb
ljmp
or
add
sub
push
dec
add
icebp
lods
adc
and
insb
inc
lea
push
nop
fiaddl
pop
inc
hlt
scas
sbb
nop
fbstp
loopne
jo
xorb
inc
fimuls
mov
dec
rorb
inc
sub
push
mov
push
es
inc
jmp
mov
addb
add
add
ret
mov
jmp
int
xchg
mov
mov
js
lret
xor
add
pop
pop
int3
leave
loopne
aaa
push
adc
or
dec
fwait
mov
xor
dec
loopne
cwtl
ljmp
or
mov
mov
int
test
add
push
lahf
lcall
push
or
mov
xor
loopne
jbe
outsl
jl
lcall
cmp
mov
ljmp
enter
or
ret
enter
pop
sub
int3
cld
pop
jne
clc
and
aas
sub
pop
dec
adc
sbb
xchg
ljmp
aam
inc
jmp
ljmp
mov
mov
lea
adcb
int3
fisubrl
es
dec
add
in
ret
jne
sbb
icebp
jge
mov
dec
dec
ja
and
xchg
out
sub
sbb
jmp
cmp
ja
fdivs
scas
jl
add
pop
mov
jge
push
sbb
das
mov
mov
sub
hlt
ret
jo
xor
mov
mov
mov
aam
out
push
aaa
adc
sub
jb
add
addl
add
xchg
mov
hlt
es
pop
or
adc
testb
push
rcll
adc
pusha
div
cmp
cld
das
lock
fs
sbb
pop
cmp
stos
shlb
incb
fucomp
jg
lea
mov
mov
push
test
pushw
mov
stos
negb
mov
pop
jecxz
insb
pop
orb
pop
aam
ss
pop
pusha
leave
sub
xor
orl
pop
mov
push
clc
pusha
cltd
movsb
mov
lds
jle
shl
add
cwtl
imul
cmp
add
fstl
pop
mov
mov
ret
outsb
mov
pusha
cs
in
leave
adc
fsubrs
sbb
sbb
lods
test
sub
push
lods
fs
pushf
jg
shll
pop
gs
lods
insl
andl
pop
add
stos
adc
xor
outsl
push
sbb
sub
jmp
cmpsb
inc
sub
mov
scas
in
jle
lods
adc
push
or
je
jbe
sti
jge
mov
ret
aaa
outsb
ja
add
adc
andb
push
cwtl
dec
inc
or
inc
lcall
test
xlat
dec
aad
sbb
sbb
addb
lods
outsl
insb
outsl
and
mov
fs
xchg
mov
sbb
adc
jg
adc
aas
inc
inc
mov
in
aam
pop
jbe
cmpsl
aas
mov
mov
sbb
daa
and
add
fildl
nop
test
imul
mov
adc
repz
call
inc
xor
sbb
sub
cmpb
dec
push
fwait
cli
and
pop
call
lods
cmp
lea
ds
call
fldt
dec
mov
xchg
and
xor
daa
ljmp
mov
cmp
jne
sbb
aad
in
and
hlt
push
fstpl
xchg
rcll
push
int
insb
xchg
daa
shl
inc
push
fidivrs
mull
pop
cld
aad
adc
loope
imull
dec
jge
add
push
lds
incl
jge
sub
enter
outsb
lds
shr
cld
loope
lods
data16
push
add
inc
cmp
push
adc
aam
je
xchg
sarb
shlb
popf
sbb
sbb
dec
add
orl
test
ss
and
pop
pusha
inc
jb
push
jno
stos
push
lock
sbb
inc
xor
lret
mov
rolb
mov
adc
push
sahf
xor
addr16
pop
fsubs
or
lock
aas
sarb
or
mov
jnp
shlb
roll
or
shlb
and
insl
jge
or
rcl
mov
push
pop
loope
sbb
inc
and
shlb
inc
add
pop
xor
cmp
jecxz
scas
nop
out
repnz
cmp
out
xlat
test
mov
insb
mov
xor
pop
fsubs
pushf
cmp
or
mov
das
call
fsubrl
les
mov
xchg
mov
iret
push
test
fidivrl
sbbl
movsb
aam
push
ret
add
push
jl
mov
sbb
mov
adc
sub
push
xchg
lods
mov
adc
scas
adc
inc
mov
push
and
or
sar
or
xor
int3
repnz
into
cmc
jecxz
add
mov
mov
sbb
lcall
les
ds
xor
sub
xor
hlt
addr16
test
inc
cmc
mov
add
cmpsl
lock
sbb
in
out
or
inc
push
test
jbe
shlb
adc
add
sub
cwtl
mov
aaa
fmuls
jne
fadds
fimuls
xor
push
xor
icebp
adc
fiadds
hlt
mov
adc
fbstp
pop
mov
xor
in
in
add
push
push
adc
xor
lret
push
aas
cmp
ja
xor
hlt
hlt
stos
lcall
pop
gs
sub
les
pavgb
test
push
and
adc
mov
rcl
das
mov
cmp
dec
or
inc
daa
mov
inc
sbb
push
dec
or
pop
icebp
test
jne
mov
push
adc
fldt
mov
jge
rclb
ret
pop
add
in
pop
inc
adc
and
outsl
jge
push
push
push
mov
rolb
push
in
shrb
inc
iret
xor
out
sbb
add
pop
je
add
stos
cmp
ret
xchg
jbe
jmp
add
add
into
adc
xor
popa
or
pop
and
ljmp
addb
ja
mov
adc
pop
push
or
add
and
cmp
or
and
cwtl
cmp
dec
sub
mov
jb
cli
ja
fiaddl
inc
mov
jb
dec
ljmp
clc
mov
add
lret
push
sub
add
sbb
jge
mov
repz
sub
pop
add
cmp
in
push
sbb
arpl
popf
mov
out
add
es
add
dec
shll
fsubrs
jp
mov
add
in
or
jns
sub
shrb
adc
pop
sub
add
push
stos
aas
cmp
sub
in
add
fadds
or
repz
lods
lret
adc
jno
mov
testb
fisttpll
mov
inc
stos
pop
mov
pop
nop
sbb
push
cmp
push
or
sbb
or
ffree
push
add
cwtl
inc
adc
pop
pop
and
cltd
inc
movsl
ljmp
loopne
fdivrs
cwtl
addl
mov
pop
cmp
mov
inc
js
mov
repnz
loopne
popf
pop
int3
enter
cld
xor
and
inc
cmpsb
add
adc
addr16
jle
xchg
push
add
test
mov
pop
movsb
inc
xor
and
add
ss
loopne
ret
jg
lcall
out
ss
jp
jecxz
je
rclb
mov
xor
jae
xor
sub
adc
jo
xor
add
mov
inc
lret
adc
adc
add
ret
push
fimuls
mov
push
loop
xchg
test
jnp
add
fcmove
shl
jo
loopne
into
loopne
dec
sub
and
loopne
in
push
mov
mov
rorl
sub
push
mov
fwait
add
je
das
sbb
cmp
mov
inc
xchg
dec
cld
ret
movsb
loope
in
repnz
xor
stos
cmp
push
adc
sbb
test
push
insl
daa
dec
lahf
pop
cmpsb
inc
inc
inc
jle
or
mov
add
stos
stos
imul
pop
loopne
sti
or
inc
in
and
adc
outsb
push
hlt
loopne
hlt
jns
sbb
stos
pusha
xlat
fiadds
inc
iret
sbb
dec
fchs
push
fbld
je
lcall
add
mov
shlb
or
cld
mov
adc
jp
dec
lock
mov
mov
lock
in
sbb
adc
roll
pop
cli
xchg
aam
inc
fcoml
ljmp
mov
cld
dec
inc
scas
test
loope
inc
pop
in
adc
popa
in
out
insb
aad
fcoms
rolb
dec
add
fimull
adc
push
add
jecxz
rcrb
adc
data16
sti
lods
mov
sbb
repnz
mov
fstps
loopne
dec
cmp
and
ljmp
lock
push
sub
gs
cmpsb
loopne
fdivr
or
leave
mov
cmp
popa
inc
ret
xchg
mov
push
cltd
lods
scas
jbe
lods
and
lds
jns
js
xchg
js
cmp
push
sbb
pop
pop
aam
xlat
jnp
lea
add
je
or
ljmp
adc
loop
aas
jae
dec
add
fdivp
dec
cmpsb
push
data16
xchg
and
dec
adc
aad
push
dec
pop
push
pop
mov
push
stos
aad
loope
mov
in
inc
lret
add
mov
adc
fcoms
mov
lods
add
mov
jo
mull
add
iret
and
sbb
or
add
lcall
xor
dec
xor
push
out
cmp
mov
ret
push
ds
mov
pop
jbe
jnp
jae
lock
das
hlt
add
subb
dec
loope
lock
mov
clc
and
jl
std
insb
xchg
mov
sub
adc
movsl
cltd
push
cmpsb
mov
rolb
subl
clc
add
lods
push
jge
cwtl
fwait
add
das
mov
popa
outsl
or
add
or
pop
inc
sub
dec
je
xorb
or
out
dec
cld
fwait
mov
cmp
inc
xchg
movzwl
rorl
add
test
outsb
push
lcall
adc
push
cmp
jecxz
mov
das
jne
icebp
sbb
xchg
xchg
sbb
cmp
mov
lret
test
dec
cmpb
jle
insb
lock
call
call
ret
arpl
adc
cs
adc
jns
scas
xor
and
enter
and
push
outsl
loop
jno
jb
sub
push
sar
cmpsb
es
mov
jbe
sub
dec
addl
loope
mov
jne
lock
sub
push
mov
mov
adcb
lea
pop
and
leave
std
outsl
gs
into
add
ret
or
adc
ss
sub
andl
mov
jg
decb
add
mov
push
notl
inc
mov
add
xor
lea
adc
in
lcall
push
pop
jns
enter
mov
inc
fistpll
jg
arpl
mov
data16
inc
pop
insb
jg
xchg
aad
or
add
lods
dec
mov
pusha
mov
lret
adc
fcmovnbe
pop
push
sahf
xchg
loop
loopne
lcall
mov
ja
or
bnd
or
mov
dec
js
and
mov
lahf
add
cld
fbstp
add
xchg
cld
add
loope
cmp
push
out
pop
mov
inc
push
aam
test
loopne
jmp
xor
cmpsl
lahf
push
movsb
repnz
mov
add
lds
clc
sbb
ret
or
scas
cmp
pop
jle
xor
and
lods
and
jmp
std
jmp
dec
or
jo
pop
mov
push
out
pop
es
mov
cmp
or
loop
mov
add
fidivl
subb
pop
dec
pop
pop
add
or
fistl
adc
das
ljmp
or
adc
mov
xchg
mov
addr16
cmpsb
movsb
outsb
adc
ljmp
mov
dec
nop
push
add
clc
pop
sub
cs
aaa
jle
subl
pusha
cmp
fisttpll
add
call
pop
and
cmp
aam
lahf
mov
mov
lods
mov
lds
or
jle
mov
sbb
push
fcomps
test
pop
jl
xchg
mov
xchg
popf
cmp
bound
push
lods
mov
sar
rorb
cmp
pop
push
nop
es
pushf
cmp
mov
mov
or
sti
iret
dec
in
push
or
pop
ljmp
cld
xor
fldl
and
ja
dec
cmpsl
pop
sti
outsl
int
movsb
sub
in
add
jp
add
push
jmp
in
lock
das
mov
fbld
mov
dec
test
stos
divb
xchg
mov
cli
xchg
stos
and
dec
out
popa
or
aaa
outsb
mov
or
js
popa
add
xor
pop
pusha
jecxz
sub
imul
mov
lods
cmc
mov
shr
or
scas
and
lahf
arpl
pop
add
cmp
jle
sub
push
mov
cmp
add
lds
ljmp
and
rcll
daa
hlt
shl
dec
iret
adc
mov
jmp
sub
andl
sub
add
dec
inc
stos
mov
add
fldl
mov
mov
add
inc
lds
xchg
jl
mov
test
insb
test
outsl
inc
or
rolb
xlat
in
lods
ljmp
js
imul
xor
adc
sarl
mov
fmuls
or
fldenv
shll
add
xor
aad
orl
xor
jmp
loope
mov
ror
ret
insb
out
movsb
rcll
mov
dec
test
add
cwtl
jo
xor
push
ret
adc
das
mov
jbe
fdivrl
out
mov
insb
cld
mulb
xor
xor
enter
cmp
add
push
xchg
es
lcall
push
insl
cli
adc
push
xchg
sbb
add
negb
pop
or
sub
xor
clc
lds
insl
fwait
jle
and
outsb
lea
iret
add
jmp
xor
inc
pop
loope
int
push
insl
cld
fdivrs
mov
dec
pop
iret
xor
out
pusha
jmp
in
insl
jbe
push
xor
jo
cmp
subl
stos
jle
fcmovu
clc
push
push
scas
clc
in
ret
add
lret
or
loopne
filds
inc
jno
aad
je
sbb
adc
inc
daa
mov
push
cmp
sub
pusha
pop
push
fadd
jbe
jmp
dec
call
push
data16
and
fistpll
and
in
adc
icebp
ret
sub
sbb
adc
lahf
mov
idivl
mov
and
mov
daa
add
cli
sub
xor
or
jnp
adc
out
mov
lret
mov
inc
ljmp
cmp
pushf
inc
push
sub
movsb
pop
bound
xor
addb
and
xor
pop
mov
sbb
cmpb
fildll
mov
fsub
add
loopne
or
movsl
mov
les
movsb
xchg
cwtl
xchg
aam
lahf
testb
mov
mov
and
test
leave
dec
loopne
push
mov
sbb
nop
and
mov
add
outsl
adc
repz
arpl
in
dec
insb
add
jle
inc
mov
pusha
pusha
jb
add
scas
scas
jo
sbb
add
or
loop
dec
shll
mov
test
sti
push
mov
mov
mov
js
rorb
mov
or
aaa
xor
xor
outsb
mov
push
iret
icebp
add
outsb
inc
or
push
div
mulb
imul
pop
cli
sbb
mov
das
int
mov
in
add
mov
sub
add
cmp
xchg
dec
ds
xchg
add
jl
mov
xchg
dec
cmp
popa
xor
xchg
clc
lcall
faddl
and
and
jo
out
icebp
dec
add
scas
nop
dec
ljmp
add
repnz
ljmp
jne
xorb
adc
pusha
xor
leave
xor
pop
sarb
sbb
dec
mov
mov
xchg
add
shll
loope
fcompl
adc
push
fists
push
fsubs
roll
pop
cmp
xor
dec
mov
xchg
test
and
cmp
and
xchg
addr16
or
sub
loopne
stos
call
inc
dec
add
mov
adc
testl
mov
push
cmp
out
inc
xor
shl
movsl
lcall
stos
pusha
push
jns
sbb
fmuls
or
fnstcw
aaa
push
push
or
call
mov
sbb
lret
push
mov
cmp
in
xchg
dec
lock
adc
sbb
xchg
stos
lcall
sbb
jge
adc
xchg
test
sti
ljmp
pushfw
stc
or
mov
clc
int
icebp
xor
adc
and
pop
adc
add
test
sbb
lahf
arpl
fwait
sub
adc
add
adc
rcrb
call
mov
ja
addr16
or
loop
out
push
test
xor
rorb
push
mov
leave
jbe
ret
nop
je
sbb
int3
jne
and
adc
in
ret
scas
rorb
mov
adc
das
sbb
sub
mov
fldcw
hlt
inc
mov
adc
lods
sub
aaa
mov
xchg
mov
jno
imull
rcr
cs
lea
push
pushl
insb
out
imul
add
or
fs
jmp
iret
jg
std
fisubrs
cs
sbb
jmp
xor
test
xchg
out
push
inc
jecxz
sub
or
adc
sub
iret
push
pop
fldenv
inc
push
loope
mov
daa
add
mov
ret
push
jle
mov
decl
xchg
xchg
cmpsb
sub
shrl
mov
mov
cmp
add
stc
mov
pop
mov
sub
push
incl
mov
jle
mov
mov
inc
jne
adc
mov
das
dec
mov
movsl
mov
inc
fwait
mov
popa
iret
mov
cmp
jle
add
pop
dec
dec
lcall
int
decl
jecxz
adc
ss
or
mov
fiaddl
jl
test
pushf
test
ja
in
lods
cs
sbb
lret
push
inc
rol
addr16
add
or
push
or
fsts
test
push
sbb
aam
sub
cwtl
mov
nop
rclb
push
add
xor
out
pop
inc
lea
ljmp
sahf
mov
lock
mov
add
and
in
int
rorb
mov
mov
or
cli
or
jne
push
es
in
and
jecxz
or
jae
sbb
enter
mov
inc
pop
push
xor
cli
nop
dec
or
mov
mov
data16
stos
fimuls
insb
icebp
inc
sbb
jnp
mov
mov
pop
mov
cltd
xchg
out
xchg
fwait
shl
fstl
jp
mov
add
fwait
mov
int3
and
sbb
int3
adc
pop
cli
cmp
fdiv
jl
scas
mov
mov
aad
jb
xchg
add
sub
arpl
in
adc
xor
add
lock
ret
ficomps
and
loopne
and
shll
or
fcoms
xor
arpl
mov
mov
mov
je
hlt
cmpsl
inc
mov
sub
mov
sbb
pushl
pop
adc
mov
adc
or
in
fldt
ror
add
insl
push
dec
jg
sbb
push
cli
les
cmp
push
jne
shl
xchg
cs
int3
sbb
adc
adc
mov
xor
add
adc
xor
and
test
push
mov
inc
sbb
mov
sbb
sub
outsb
bound
daa
sarl
mov
fidivl
inc
push
shr
mov
mov
or
inc
rcll
popa
cmpsl
es
fdivrl
roll
and
and
std
testb
scas
push
cwtl
adc
xchg
es
bound
xor
fcoms
adc
or
pop
cld
push
gs
pop
cvtdq2ps
fbstp
mov
orb
mov
pop
or
scas
adc
pop
xchg
add
sub
jb
pop
test
pusha
scas
mov
mov
add
pop
mov
and
das
ret
adc
push
sbbl
sbb
les
icebp
mov
into
mov
xchg
mov
push
sub
pop
jo
sbb
sbb
inc
inc
dec
aam
aas
mov
bound
jl
add
sahf
pusha
cwtl
xchg
sbb
inc
dec
push
push
fucomi
lods
mov
and
xlat
pushf
adc
insb
cmc
rclb
in
repnz
imul
jo
decl
hlt
adcb
mov
scas
leave
xchg
mov
mov
and
es
pop
arpl
push
dec
dec
ret
subl
or
cli
popa
sub
lods
bound
push
sub
mov
sbb
cmp
push
outsb
fistps
and
stc
es
mov
or
outsb
arpl
add
xorb
stc
lea
fisubrs
pop
fwait
dec
and
imul
add
mov
pop
loopne
test
jns
push
mov
test
bound
bound
test
mov
shll
in
call
je
and
add
mov
jne
fisttpl
adc
roll
push
fdivs
and
sti
pop
int3
les
sti
mov
dec
mov
and
sub
inc
and
push
mov
sbb
mov
into
pop
clc
inc
in
cld
push
cltd
outsb
sar
pop
ret
cmp
mov
bswap
add
mov
or
jecxz
fimuls
sarl
inc
or
mov
popa
les
mov
fisubrl
mov
push
mov
inc
das
mov
es
pop
adc
sub
push
invd
cli
popa
mov
inc
or
movsl
dec
pushf
fisubrs
dec
or
or
out
mov
xchg
adc
pop
xor
inc
pop
cld
outsl
lods
mov
pushf
loopne
cwtl
imul
or
sub
jbe
xchg
mov
xchg
add
data16
lock
dec
mov
call
popf
repnz
inc
and
and
dec
cmp
pop
stos
loope
xlat
test
mov
ja,pn
dec
or
pop
xor
cs
mov
sti
jge
jb
xchg
pop
or
add
jecxz
adcl
aaa
mov
jo
imul
and
mov
sub
in
test
mov
jle
add
cmpsl
sub
enter
aaa
adc
mov
mov
sub
pop
or
xchg
mov
cltd
sbb
ja
pop
push
cmp
push
je
mov
ljmp
shll
stc
xlat
out
push
test
lret
sbb
mov
push
jno
cmpsl
in
nop
jg
rcrb
imul
xlat
inc
icebp
or
mov
jmp
rcrl
into
xchg
jae
add
sbb
xorl
fdivp
pop
scas
mov
mov
loopne
repnz
mov
scas
cltd
jecxz
and
pop
sub
add
and
sar
push
mov
pop
insl
cmpl
das
aam
decl
arpl
push
jecxz
jmp
add
sub
cmpl
pop
and
iret
outsl
sbb
insb
fmull
xchg
add
shlb
clc
incl
push
mov
mov
ud1
push
idiv
incl
adc
movb
xor
jo
movl
incl
nop
outsb
dec
sub
cli
jl
fildll
xchg
or
clc
xor
insl
sarb
ds
lds
roll
add
mov
daa
xchg
movsl
insl
inc
into
and
push
jmp
stos
dec
cwtl
mov
bound
pop
orb
pop
mov
or
sbb
incl
jo
jmp
lret
mov
fsts
xchg
jae
dec
sar
and
add
ret
lods
mov
dec
insl
mov
fnstsw
sub
mov
cwtl
outsl
icebp
mov
adc
push
cmc
adc
jb
repnz
ljmp
das
cld
repz
inc
push
sbb
dec
in
fistpll
and
push
inc
adc
js
arpl
push
jecxz
das
test
mov
rcrl
shll
clc
test
jmp
xchg
out
add
mov
iret
xor
and
sbb
push
fildl
popa
add
movsb
mov
shlb
adc
xchg
push
test
add
mov
jmp
fstpl
test
insl
inc
inc
dec
insb
pop
in
jg
in
dec
negb
das
aas
xchg
adc
xor
in
push
push
mov
fsts
inc
repnz
lods
pop
and
ret
std
push
aad
push
enter
ljmp
mov
jecxz
jp
pop
clc
lea
ss
je
and
iret
std
ljmp
jmp
fidivrs
test
or
jmp
xchg
pop
push
adc
push
scas
test
cltd
adc
or
aaa
les
pushf
in
aas
add
cmpsl
repz
xchg
push
stos
fdiv
push
shl
sbb
mov
adc
xchg
icebp
outsb
jecxz
inc
das
xor
data16
or
cltd
xchg
mov
lcall
adc
jno
adc
sub
outsl
pusha
jmp
stc
inc
movsb
popa
pop
orb
aaa
fcoms
cltd
jmpw
mov
sahf
sbb
lods
mov
stc
mov
push
orps
ss
add
fmuls
add
push
int3
rcr
loopne
fildl
mov
mov
dec
lcall
push
dec
ja
cmp
andl
mov
test
or
mov
inc
xchg
dec
or
outsl
lds
jae
xchg
sub
lock
or
adc
paddw
push
mov
icebp
xchg
xchg
das
dec
adc
sbb
inc
and
stos
rcr
lods
sub
and
icebp
pop
dec
xor
push
adc
call
pop
sub
adc
daa
or
sub
lret
call
jo
pop
mov
adcl
mov
sub
push
push
stos
cmpsl
aas
clc
dec
and
sbb
movsb
das
dec
cltd
or
mov
out
sbb
sbb
movsl
lods
stos
out
les
aad
sub
hlt
jle
pop
pop
imul
pop
loopne
pop
js
jb
inc
xorb
pop
test
or
jge
in
xor
ss
je
xorl
daa
adc
inc
loopne
hlt
rcll
or
push
ss
stos
loope
xchg
push
cmp
js
add
xor
fidivl
and
fisubrs
ret
cmp
out
ret
sub
out
mov
enter
lock
xchg
pushf
mov
das
cmp
jbe
insb
aaa
jae
mov
inc
jmp
pop
mov
pop
push
js
lods
mov
std
mov
mov
addl
enter
mov
inc
insl
test
into
imul
sub
sub
movsb
insb
sub
fcompl
jg
push
adc
xchg
leave
jns
ror
popf
jecxz
sbb
adc
arpl
xor
jp
imul
jno
lahf
dec
or
or
fiaddl
and
push
sarb
mov
sti
mov
fwait
les
push
lea
shll
pop
add
mov
fsubs
inc
hlt
hlt
adc
insl
popf
cwtl
push
xor
dec
rclb
aam
aad
mov
sub
int
pop
mov
std
adcb
dec
inc
mov
sub
clc
in
into
adc
push
sti
enter
jge
testb
sub
jnp
les
das
fs
loope
pop
mov
subb
mov
mov
sahf
sbb
mov
fstpt
ret
dec
lcall
cld
test
add
das
insl
imul
outsl
mov
outsb
mov
or
test
mov
adc
xorb
dec
lret
mov
push
fldz
mov
mov
add
adc
jno
jo
and
add
sub
out
adc
daa
sub
ja
test
cli
cmp
repz
push
and
adc
sub
ficompl
adc
mov
jbe
outsl
ja
mov
jns
out
add
pop
in
aas
jnp
mov
bound
icebp
jg
sub
sub
ja
push
imul
push
loope
ja
js
mov
cld
adc
imul
sub
or
add
stos
mov
push
pop
lds
xor
pop
fists
outsb
sub
outsb
roll
into
jnp
jb
in
mov
sbb
pop
fildl
sbb
aam
pushf
daa
jnp
mov
sub
imulb
mov
lret
cld
push
xorl
out
push
insb
jp
jmp
mov
imul
or
xchg
jne
and
jp
pop
outsb
fucomi
mov
push
push
or
inc
mov
sbb
xorl
jl
xlat
xchg
dec
dec
inc
out
das
sahf
dec
int
js
dec
cmpl
jno
dec
pop
imulb
xchg
or
adc
arpl
call
sub
cmp
push
jecxz
inc
sbb
jg
es
jo
dec
outsl
aam
push
adc
adc
std
or
mov
fidivrs
pop
cwtl
out
test
adc
mov
push
sbb
jmp
or
aam
push
jne
rcll
dec
add
and
call
lcall
sahf
sub
popa
mov
push
loope
pop
mov
jno
dec
sub
orb
xchg
js
lret
sbb
jae
pusha
clc
inc
std
outsb
lcall
inc
mov
imul
fcoml
cmp
jmp
ja
xchg
movsl
jg
adc
shlb
sbb
and
nop
mov
lds
in
aam
dec
test
xor
xor
subb
pusha
inc
xchg
cli
fcoms
clc
or
fildll
adc
insb
inc
cmp
es
popa
push
out
fucomip
loope
out
jbe
jmp
mov
lcall
cmp
stos
xchg
in
enter
adc
cmp
xor
jno
fbstp
cmp
xchg
inc
fprem1
shlb
inc
in
scas
pop
pusha
inc
lea
fidivs
and
rol
adc
push
pop
outsb
sub
xor
cwtl
cmp
lods
sbb
push
jns
dec
pop
sbb
das
jge
xchg
push
test
pop
jo
jbe
lods
xor
outsb
mov
mov
or
dec
ljmp
jmp
cmpsl
cmp
int3
adc
xorb
sarl
add
mov
test
jne
outsb
cli
push
xchg
dec
or
test
mov
mov
cli
pushl
adc
cli
fs
arpl
leave
cmp
ds
outsl
xchg
fimuls
aas
es
lahf
or
ljmp
loop
adc
lods
xlat
inc
sbb
pop
sbbb
push
not
xlat
sahf
jecxz
xchg
pop
push
or
addb
mov
pop
les
push
push
mov
adc
mov
pop
mov
adc
cmp
mov
in
sarb
lea
dec
xor
sbb
repz
mov
pop
add
in
pop
or
sub
in
in
inc
enter
sbb
mov
popa
sbb
add
shrb
movsl
sarb
dec
or
cmp
mov
ret
mov
jbe
or
mov
cwtl
negl
imul
fists
xor
sub
sub
in
adc
testb
jp
orl
leave
push
clc
mov
aad
popf
sub
insl
movsb
push
xchg
xchg
push
pop
ficoms
jl
call
outsb
popa
add
loope
sbb
xlat
in
data16
cmp
shl
bnd
mov
and
in
mov
jnp
cmc
push
ret
pop
leave
loopne
ret
jecxz
jns
rorb
ss
push
inc
loope
fs
mov
jb
pop
hlt
stos
sbb
icebp
or
imul
mov
aam
cld
mov
mov
or
jae
fisubl
jp
mov
rcll
incb
add
push
fadds
aaa
sbb
call
or
fcompl
roll
in
daa
outsb
jge
push
xor
xor
leave
ret
outsl
mov
test
fbstp
out
das
cli
dec
and
or
jle
shl
fistl
es
and
jnp
rcrl
cmpsb
imul
out
cmp
adc
or
or
psubd
fisttpl
repz
sahf
mov
cld
add
push
fcmovnu
movsb
add
call
call
js
push
imul
sbb
xchg
iret
mov
jmp
call
loope
imul
jb
outsb
das
mov
add
inc
xor
mov
lods
mov
aad
cvttps2pi
ret
out
jmp
jmp
lock
movsl
outsb
push
mov
repz
scas
cmp
aaa
call
enter
push
out
or
mov
data16
mov
add
pusha
jno
add
inc
popa
lret
aas
adc
mov
mov
scas
cmp
es
pop
fisubrs
or
imul
cmp
scas
sub
scas
adc
dec
outsl
push
sbb
daa
add
jmp
sub
call
or
rcrl
cmc
xchg
adc
sqrtps
pushf
test
mov
cmp
es
xlat
mov
out
dec
jo
mov
call
jmp
into
cmp
adc
sub
and
addr16
sbb
inc
jge
mov
lods
adc
xor
das
fidivrs
jge
pop
inc
mov
out
loopne
inc
xor
lods
pop
xor
insb
insl
and
dec
jp
fldt
nop
push
ss
adc
das
push
pop
imul
test
mov
jo
pop
xchg
add
incb
adc
pop
jo
das
cmp
mov
mov
sub
push
lcall
jns
pop
insb
into
mov
cmp
out
mov
jmp
push
mov
push
jecxz
frstor
and
cmp
outsl
mov
lock
or
fdivs
add
inc
and
adc
sbb
or
add
das
rcl
mov
jmp
lret
push
fistpll
sub
enter
mov
lcall
popa
imul
sbb
jge
lcall
or
or
cmp
adc
pop
cli
outsl
mov
iret
sarb
sar
js
or
aam
and
ds
ret
rcrl
addr16
rorb
daa
xchg
add
inc
shrl
lock
xchg
out
insl
iret
mov
test
mov
jne
mov
nop
clc
outsl
out
xchg
ret
xor
add
popf
mov
sbb
pop
sbb
mov
or
je
test
dec
cld
mov
aaa
pushf
adc
test
cmp
inc
xchg
dec
sbb
push
add
lods
jp
ljmp
cwtl
lock
ja
clc
aad
xor
outsl
mov
aaa
xor
lods
sub
add
xchg
leave
sarl
ja
or
ds
inc
stos
dec
jge
in
sbb
repnz
subb
mov
ffree
ss
aaa
add
std
out
mov
pop
or
in
sub
or
call
sbb
dec
jno
or
iret
sub
push
hlt
adc
test
xchg
or
int3
loopne
xchg
stos
mov
mov
mov
shrl
outsl
ljmp
dec
push
scas
jnp
ljmp
aam
sub
mov
jge
nop
add
mov
ja
inc
pushf
cmp
in
mov
ror
subl
or
dec
push
or
xor
or
data16
push
pop
addb
jp
loop
mov
adc
loope
mov
xor
mov
dec
dec
or
xchg
mov
rolb
decl
pop
ljmp
inc
cmp
pop
mov
pop
popf
xor
inc
sub
sub
jge
cmpsl
jp
es
cs
je
das
lock
xchg
push
jbe
mov
push
stos
cs
pop
shrl
imul
add
cmp
out
lock
xor
frstor
xchg
push
rorl
add
lahf
or
mov
aam
ret
fisttpll
test
sub
sub
addl
test
push
notb
icebp
push
roll
out
fisubs
outsl
aad
sbb
clc
faddl
test
popf
stos
fwait
jo
and
pop
and
sub
push
ljmp
add
inc
and
mov
or
out
push
lahf
ljmp
add
jb
adc
adc
sbb
mov
sub
push
insl
out
repz
mov
outsl
xchg
mov
add
out
xor
xchg
pop
scas
cmp
xor
in
imul
or
inc
dec
pop
mov
bound
clc
ficoml
mov
push
call
adc
in
mov
lcall
ret
jne
in
sub
add
pop
in
lds
jecxz
push
fcoms
imul
jo
insb
stos
mov
nop
or
in
adc
add
push
dec
insb
outsl
mov
out
ja
iret
sbb
jns
popa
call
gs
dec
call
jp
pop
inc
or
mov
cld
push
imul
decb
lods
push
cld
out
lods
sbb
add
sbbb
push
push
mov
xor
xor
and
testl
or
cmp
inc
in
add
and
repz
cld
adc
shl
inc
pop
sub
daa
test
mov
or
cli
xor
sub
sub
std
daa
sub
fisubs
addb
imul
cs
xor
iret
pop
and
inc
xor
push
xchg
inc
add
fwait
into
lcall
xchg
cmp
lods
aad
popa
test
aas
loop
fisubl
pop
inc
inc
push
roll
add
cmp
dec
push
pop
int
mov
sbb
popa
jl
mov
aaa
fldl
and
ret
dec
daa
std
es
mov
add
icebp
inc
xor
add
sbb
mov
dec
mov
andb
lahf
pop
add
pop
stos
mov
or
fcoms
push
mov
in
rorl
mov
clc
pop
mov
cmp
xchg
adc
xchg
jns
hlt
add
out
adc
emms
clc
push
xchg
mov
call
das
fstps
in
lods
cmp
push
rorb
pop
mov
or
mov
lods
inc
call
out
xchg
add
mov
fistl
lock
sub
sarb
mov
inc
jg
shlb
stos
imul
pop
or
ret
push
jmp
enter
or
int3
loopne
or
pop
and
call
push
icebp
and
push
loop
mov
outsl
shl
cmp
and
mov
or
adc
scas
xchg
sub
pop
add
ret
sbb
lea
mov
movsb
loopne
cltd
aas
mov
jo
imul
mov
push
adc
loop
or
jg
cmc
cwtl
mov
sarl
adc
inc
inc
pop
stos
inc
loope
jns
mov
mov
xor
cmpl
add
xor
pop
adc
out
decl
xchg
xchg
mov
or
fimull
imul
andl
fisubrs
mov
push
ret
iret
sub
ljmp
cmp
mov
mov
pusha
mov
push
mov
or
pop
and
jns
dec
adc
fstl
std
add
std
sbb
adcb
sbb
jnp
mov
adc
or
movb
icebp
or
std
inc
aaa
xchg
xor
in
sbb
push
jmp
push
pop
xor
sub
and
pop
ds
fists
cmp
xlat
or
push
push
stos
inc
daa
ss
cmp
dec
lret
jne
insl
cmpsl
sbb
pushl
daa
inc
adc
or
fldt
icebp
xchg
sbb
bound
mov
pusha
mov
sahf
inc
pushl
dec
add
insl
jl
aaa
imul
pop
cltd
pusha
sti
adc
std
or
ret
adc
sub
cmpsb
mov
cld
mov
scas
test
xchg
cmp
xchg
xchg
icebp
test
jno
inc
adc
jl
and
sub
je
push
dec
stos
adc
fidivrs
add
stos
and
xchg
cmc
imul
test
loopne
addr16
das
ljmp
sti
adc
jge
mov
dec
scas
mov
repnz
mov
jae
out
xchg
dec
push
out
jg
jl
or
fwait
push
ret
cmc
pop
stos
push
xor
fstp
mov
inc
mov
and
or
push
jge
jmp
subb
lret
bound
daa
sbb
call
icebp
xor
push
sbb
pop
xlat
cmp
loope
loop
repz
inc
adc
arpl
insl
in
sbb
xchg
pop
je
pop
icebp
push
fstpl
test
mov
std
add
addl
sub
arpl
ds
mov
jmp
mov
or
aas
iret
push
sbb
push
dec
mov
mov
aaa
dec
mov
xorb
mov
lods
inc
push
ljmp
and
bound
pusha
jo
pop
clc
adc
jb
fistpll
pop
sub
mov
cld
jge
mov
push
mov
mov
call
fisubrs
cmp
ss
push
lahf
dec
icebp
lds
lcall
mov
sbb
jle
mov
pop
hlt
iret
add
mov
xor
add
push
mov
xchg
cmp
mov
xor
mov
jg
push
adc
pop
mov
jg
jno
mov
shlb
rolb
cmp
inc
sbb
push
jo
in
pop
std
pop
dec
pop
mov
pop
in
sub
pushl
push
or
and
jnp
mov
push
pop
adc
decl
jns
and
mov
rcl
dec
insl
mov
orl
lea
mov
mov
mov
xor
jo
jg
push
sbb
les
pop
popa
stos
or
movsl
cwtl
add
dec
repnz
push
movb
push
xor
in
or
mov
mov
pop
jbe
sbb
sub
test
stos
shrb
xchg
mov
cmp
mov
push
out
pop
mov
rcrl
fsubrs
les
ficomps
mov
push
push
les
cmp
mov
push
add
adc
jle
outsl
pop
arpl
insl
mov
xchg
fildl
ja
shrd
jmp
fwait
jmp
adcb
mov
pop
and
insl
dec
cmc
pop
adc
int
mov
mov
outsb
imul
and
inc
push
xchg
pop
insb
cs
jnp
mov
inc
pop
cmp
dec
mov
pop
in
gs
fists
shll
jnp
out
sub
orb
clc
xor
outsl
mov
mov
fisubs
fisttps
add
ja
int3
lret
lcall
pushf
rolb
out
push
add
negl
js
mov
cmp
push
lret
jo
mov
ficompl
inc
jge
and
cwtl
call
in
iret
movl
leave
mov
loope
shlb
add
xchg
frstpm(287
aaa
nop
lahf
jg
lods
call
xchg
xorb
xchg
or
popf
jge
jp
mov
arpl
addr16
add
inc
aam
std
scas
add
loope
fcmovnb
das
and
std
arpl
or
cmp
mov
fwait
pop
mov
fidivrl
mov
jbe
inc
jg
jmp
mov
test
loop
or
sub
popa
insb
cltd
inc
and
and
or
push
pop
cmp
mov
xchg
outsb
add
rcll
scas
inc
jno
mov
sbb
cmpsl
mov
popa
test
pop
push
jb
loopne
mov
xor
mov
pop
popa
loopne
mov
fbld
sti
fsubrl
into
scas
movsb
or
and
or
vunpckhps
pop
out
test
sbb
mov
or
out
or
and
ret
push
add
cmpsl
je
test
cmpsl
sub
cmp
xchg
stc
pop
stc
sub
roll
mov
mov
add
mov
div
cmp
decl
pop
jbe
sbb
sub
mov
pusha
push
nopl
es
cli
scas
scas
sarb
scas
les
xor
call
cs
mov
pusha
ljmpw
pop
pop
sbb
or
dec
pop
orl
in
add
xorl
lds
mov
aaa
add
or
sbb
xchg
pusha
cmp
or
lea
sub
jbe
or
fstps
mov
cmpsb
push
jmp
and
jnp
mov
out
fidivs
ss
add
sub
add
mov
mov
sbbl
ds
test
xor
jo
mov
jp
movsl
aas
fdivp
adc
xchg
fmull
stos
dec
push
inc
jae
pop
jae
jno
dec
insb
insl
das
scas
lea
jmp
pop
xor
gs
push
int3
cmp
cmp
andl
in
dec
adc
and
push
pop
bound
cmp
inc
sbb
jb
mov
jmp
loopne
arpl
xor
add
lods
mov
xorl
jo
inc
xor
sub
or
or
xor
aam
inc
mov
sub
in
jnp
shlb
mov
popf
test
outsb
fistl
and
iret
mov
push
shlb
fs
add
imul
out
mov
push
movsb
popa
iret
out
add
adc
xchg
adc
in
inc
jns
fistpl
leave
pop
mov
and
test
or
sti
shl
imul
icebp
or
int
test
dec
cli
rdtsc
std
push
hlt
lea
lods
mov
add
dec
and
add
aaa
mov
ja
fcomip
scas
xlat
cmpsl
data16
push
sbb
sbb
push
sbb
aas
inc
dec
rorb
and
adc
subb
or
mov
mov
mov
add
xchg
adc
mov
push
jbe
sarl
fnstsw
dec
mov
inc
mov
daa
enter
push
shlb
push
and
dec
dec
pop
test
mov
pop
rorb
sub
cmp
and
shlb
fists
int3
sbb
in
pusha
adc
mov
sub
inc
and
pop
aad
or
mov
sbb
sub
sbb
popl
in
stos
add
push
xor
add
inc
loopne
gs
cmp
mov
sub
add
inc
push
ret
sbb
stos
add
insl
std
enter
push
cwtl
and
push
dec
lcall
or
in
inc
xor
popa
aam
pop
push
inc
enter
add
push
mov
mov
jmp
sahf
xor
jns
ss
xchg
or
shl
hlt
sub
jne
mov
push
xor
xchg
arpl
lea
ret
push
or
mov
add
shlb
mov
add
pop
shl
out
popa
lahf
xor
sbb
cmpsb
nop
pop
push
push
int
aaa
rcrl
lea
add
or
fsubrl
lock
sbb
hlt
adc
cmp
pushf
jns
xor
jp
insb
sub
pop
jge
adc
cmp
rorb
or
popa
into
cmp
test
mov
mov
add
or
scas
mov
inc
insl
movsb
stos
xchg
stos
popf
push
popf
shlb
imul
xor
test
shrb
pop
fnstcw
adc
in
roll
xchg
loopne
mov
shll
in
and
add
pop
shr
les
jp
sub
xor
lret
es
mov
xor
jb
mov
sbb
fcom
inc
push
in
imul
mov
insl
in
sub
jb
daa
jbe
mov
aaa
inc
cmp
paddd
je
xchg
leave
ret
dec
fwait
ret
and
mov
loopne
aad
shrb
ret
loop
or
add
jb
mov
addb
ret
cmc
out
fdivrs
sarl
jl
inc
push
push
sbbb
xor
mov
inc
aaa
cmc
mov
or
mov
fs
cli
shrl
lods
or
arpl
adc
mov
push
faddp
lods
test
sbbl
pop
fcom
mov
pop
jl
cs
dec
adc
xchg
xorl
je
mov
negb
clc
iret
out
arpl
rclb
lea
pop
outsl
push
push
ljmp
fildl
sbb
clc
fistl
jmp
xor
lods
roll
pusha
sbb
lods
xchg
test
mov
adc
or
adc
loopne
jmp
mov
xchg
lret
jmp
add
aam
mov
mov
lahf
push
cmpsb
ffreep
orl
std
sbb
adc
jne
daa
sub
push
icebp
inc
inc
sbb
shrl
xor
xor
dec
je
das
jae
inc
mov
fnstsw
or
dec
insb
cwtl
shl
pop
xchg
mov
jp
shrb
push
push
daa
scas
mov
inc
push
out
sbb
add
xor
sub
sub
dec
scas
inc
mov
pop
and
mov
adc
inc
or
adc
pusha
xor
dec
lahf
inc
push
push
mov
mov
and
sub
fimull
sahf
aad
push
jno
hlt
sub
outsl
cld
push
jp
jp
cmp
out
out
std
mov
decl
jbe
add
xchg
pop
hlt
push
ja
xlat
dec
inc
adc
pusha
add
add
rolb
addl
add
popf
push
test
data16
push
or
shrl
fistpll
arpl
lds
iret
xchg
adc
and
fdivr
jbe
cmpsb
mov
jge
pushf
or
push
xor
mov
mov
add
or
add
out
lret
add
add
aas
mov
adc
add
xlat
mov
or
aaa
aad
loope
cmp
rcr
inc
push
aaa
vandpd
lock
add
ror
ljmp
fcmovb
sub
dec
add
and
pop
push
push
lock
adc
xor
add
xlat
rclb
mov
xor
ss
pop
xchg
jge
lret
jne
lock
push
fcompl
andl
and
jb
jg
add
adc
mov
gs
jo
pop
mov
sub
lea
pop
hlt
push
push
jb
mov
je
mov
dec
xchg
insb
loopne
nop
inc
enter
pop
push
cwtl
cltd
sub
enter
ljmp
mov
jnp
lods
dec
aad
pop
loope
jns
and
jo
shll
inc
das
mov
insl
mov
fistl
lock
sahf
inc
mov
jbe
pop
or
push
push
cmpsl
hlt
test
mov
push
cmp
cld
mov
and
or
mov
das
adc
in
test
push
inc
or
mov
mov
push
outsb
repnz
or
adc
loop
ja
mov
cs
xchg
push
mov
test
sti
in
bound
mov
xchg
inc
sub
dec
fwait
call
out
xchg
pop
cmp
xchg
jle
dec
sub
and
jns
test
inc
xchg
imul
mov
sbb
xor
mov
scas
mov
cmp
js
in
lods
sub
add
js
addb
jecxz
cld
jg
pushl
mov
movsl
out
addl
jl
jo
pop
cli
shrl
mov
cmc
arpl
or
push
cmp
lods
aam
movsl
or
insb
dec
and
outsb
dec
push
roll
dec
jbe
add
pop
lods
add
mov
hlt
mov
repz
or
xchg
mov
rep
mov
ret
sbb
or
test
out
aaa
add
sub
add
ja
sub
sub
pop
in
mov
inc
lods
xlat
and
push
aas
loopne
inc
push
insl
push
xchg
movb
in
pop
sbbb
aaa
movsb
call
ljmp
sahf
mov
dec
mov
pop
xchg
sub
pop
pop
and
jno
mov
add
sti
push
sti
push
jl
add
movsb
pusha
sub
add
mov
mov
jne
aaa
es
push
or
push
out
xchg
repz
or
push
inc
xor
lods
movb
cmc
or
push
rcll
out
dec
sub
jmp
adc
sbb
das
add
sub
nop
mov
mov
les
shrl
jecxz
out
es
add
daa
popf
pop
sbb
imul
fucomi
dec
je
add
add
add
fisubrl
pusha
hlt
inc
in
pusha
call
jmp
gs
inc
mov
inc
into
hlt
sbb
mov
xchg
test
fcom
insl
push
pop
fs
mov
mov
add
add
and
sahf
add
mov
sbb
incl
das
sbb
inc
mov
jae
lds
nop
mov
lahf
js
mov
inc
mov
adc
push
loop
push
pop
mov
or
loop
or
adc
jle
mov
cld
adc
inc
sbb
fiaddl
shlb
aaa
repz
pop
inc
dec
inc
xor
nop
add
stos
outsl
stc
xor
or
and
lret
mov
int
insb
xor
pop
rolb
outsb
lea
stos
repnz
jbe
mov
lret
or
dec
push
imul
mov
stc
jecxz
xchg
xchg
add
mov
inc
cmpsb
jmp
xor
outsl
cltd
jecxz
dec
stos
jp
mov
cmp
mov
outsb
dec
mov
or
icebp
jns
jp
flds
push
dec
adc
mov
xchg
addb
jp
icebp
shll
add
push
jp
or
sbb
test
adc
clc
stos
stos
fs
dec
and
pop
sub
loopne
sub
pusha
sub
adc
in
int
pushf
hlt
stc
movsb
sub
aaa
xor
sub
daa
xor
call
cwtl
and
pusha
aad
mov
stc
movsl
nop
ja
pop
aad
cmpsb
adc
ret
inc
inc
pushf
shr
repnz
inc
test
jecxz
sbb
sbb
lods
out
add
sub
push
test
sub
test
cmp
mov
pop
adc
or
mov
lock
insb
sub
push
xor
cli
or
and
ret
int
push
sti
xor
sub
xor
test
sbb
add
sbb
shlb
pop
cmp
push
cmp
rorl
add
xor
addr16
fisttpl
add
shlb
cmc
xor
ret
jmp
push
rcrl
je
cmp
push
mov
jae
int
rclb
and
and
into
pop
dec
bound
jg
cmc
and
cs
dec
push
pop
sbb
ljmp
push
mov
xor
mov
and
dec
aaa
mov
push
fisttps
rep
cmpsb
add
fbstp
test
fldt
ss
rcrl
lahf
dec
mov
stos
daa
test
xchg
jns
mov
fwait
add
testb
push
mov
sarl
add
sbb
inc
scas
test
dec
mov
sbb
sbbl
dec
int
leave
dec
jno
aaa
cmp
adc
test
push
orl
pop
or
xor
push
xchg
xchg
loop
pop
mov
cmp
loopne
nop
inc
push
imul
push
mov
adcb
xchg
pop
inc
lods
lret
xchg
jae
fists
rcrb
adc
add
xor
mov
movsl
hlt
or
jp
push
enter
mov
pop
popa
aaa
sub
shlb
xor
ja
js
outsl
aad
xor
fimuls
shrb
sub
sub
cltd
xor
xor
sbb
outsl
outsb
pop
dec
pop
rcl
push
imul
pusha
fsubrs
repnz
add
adc
nop
clts
es
enter
shlb
icebp
icebp
inc
and
or
adc
pop
cmp
outsb
cbtw
mov
pop
loop
aam
lcall
and
cltd
loope
lock
ds
fmuls
adc
jge
in
pop
mov
push
push
lods
pop
inc
inc
push
insb
jl
addb
jo
xchg
pusha
fimuls
fldenv
add
sub
and
push
jecxz
inc
cs
dec
or
mov
mov
mov
sti
mov
push
push
int
js
mov
xchg
or
jns
pop
mov
add
and
lock
mov
push
pop
inc
dec
sbb
out
lcall
pop
repnz
pusha
xchg
mov
loopne
jle
or
xchg
pop
dec
inc
out
or
dec
out
fsub
iret
pop
ja
ficomps
fstpt
mov
dec
mov
sti
cmc
add
or
movsb
movsb
and
dec
test
fsubs
inc
push
insl
jmp
or
or
lock
adc
pop
dec
clc
sbb
in
cs
mov
lcall
in
inc
aad
jecxz
das
pop
inc
lods
jbe
leave
mov
adc
mov
xchg
inc
mov
adc
ficompl
dec
loope
sbb
stc
jmp
xor
mov
push
pusha
stos
adc
nop
ret
js
incb
jge
call
add
sbb
das
jo
loope
jge
filds
sbb
mov
ret
add
aas
jg
loope
jecxz
lea
dec
pop
and
outsl
movsl
adcl
cwtl
push
scas
ljmp
adc
ljmp
push
add
sub
stos
sbb
dec
mov
cmpsb
push
lahf
outsl
out
and
arpl
add
add
pop
in
sub
sub
daa
or
call
sbb
jge
xchg
or
je
mov
sbb
inc
subl
sbb
mov
jle
push
test
dec
mulb
jb
mov
stos
and
add
rorb
hlt
int
pop
pusha
push
mov
shlb
out
mov
pop
push
subb
aad
jmp
stos
jae
or
jb
pop
mov
jg
rcl
scas
jbe
icebp
lahf
roll
adc
fcoml
decb
and
into
jns
xor
mov
jbe
or
jmp
push
push
mov
cli
mov
aad
push
cmp
test
int3
pop
pop
mov
inc
rolb
and
aad
jle
mov
es
inc
cmp
jg
pop
mov
jnp
into
xchg
adc
add
push
xchg
outsb
ret
rcr
fsts
mov
add
out
and
fbstp
lcall
push
xor
enter
mov
psrad
es
inc
hlt
mov
daa
xchg
add
dec
cld
aaa
prefetchw
or
clc
push
enter
xchg
inc
xor
cs
jbe
in
pop
mov
cmpsb
dec
pop
in
xchg
sahf
hlt
cmc
mov
pop
jmp
sub
sub
les
inc
push
sbb
mov
mov
cmpsl
repnz
inc
test
inc
lods
or
inc
adc
and
dec
sbb
leave
ja
jge
std
insl
and
aas
push
adc
cmc
cli
ja
jb
xor
mov
and
sub
add
idivl
loop
out
enter
xchg
das
in
push
insl
add
mov
fisttpll
sub
in
mov
in
cli
inc
push
jo,pn
adc
adc
jnp
cmp
mov
mov
fs
push
fstpt
imul
and
sti
incl
movsl
ret
or
sub
mov
jg
fs
pop
clc
leave
je
mov
fistpl
xor
stos
in
pop
add
jp
sub
mov
pop
cmc
test
xchg
and
ljmp
bound
out
mov
dec
mov
stos
mov
out
fsub
jl
sbb
mov
shrb
jbe
jp
jl
faddl
add
jp
and
pop
add
mov
and
jno
call
xor
or
pop
pop
or
adc
push
jmp
xor
cmp
das
outsl
add
mov
out
adc
lsl
and
outsl
ja
pop
push
add
jbe
xchg
cwtl
ror
sti
jg
lcall
cltd
lret
scas
dec
ds
adc
lret
shlb
incb
ret
cmp
sbb
xchg
cmp
fstps
in
cli
sub
sub
and
fdivr
sbb
dec
mov
mov
and
jg
loop
ja
lea
cmp
pusha
sub
adc
pop
or
and
jl
shlb
xor
leave
stos
push
inc
in
adc
aam
fcoms
mov
inc
push
cmc
orb
pusha
and
pop
sarl
andb
dec
ss
je
add
dec
adc
adcb
clc
hlt
mov
inc
cmp
pop
dec
pushf
loope
pop
mov
push
fisttps
jb
sbb
gs
push
test
add
ret
jbe
insl
and
insb
or
lahf
jbe
lcall
faddl
lods
test
lds
lock
je
add
rcrb
jp
orl
stos
insl
push
mov
mov
add
mov
pushf
imul
loop
loope
jmp
push
push
cmp
and
mov
jecxz
in
dec
divl
repz
push
push
jnp
clc
hlt
mov
mov
cmpsb
into
mov
lds
fs
pop
xor
aas
sub
in
in
mov
in
mov
leave
fcom
or
stos
pop
aas
lock
stc
stos
fldpi
xor
stc
add
sub
xchg
lods
roll
cmp
or
jmp
inc
stc
inc
movsb
leave
out
add
mov
inc
xor
xchg
movsb
ljmp
jns
dec
or
js
mov
je
mov
cltd
fisubl
shlb
lcall
mov
int3
idivl
xor
pop
lock
mov
or
pop
nop
xchg
adc
add
mov
mov
lock
mov
into
jnp
sarl
mov
mov
imul
std
ja
aaa
mov
inc
mov
rcrb
cmp
mov
jb
fcoml
add
leave
lcall
sbb
pusha
inc
fadds
roll
and
outsb
inc
decl
xchg
js
loop
out
les
out
mov
insl
or
mov
dec
iret
mov
add
xchg
adc
adc
lods
dec
jbe
xchg
jmp
push
test
or
push
out
jl
mov
add
orb
mov
das
fldl
jbe
sub
push
sbb
add
ror
and
pusha
or
js
jne
dec
std
jno
fistl
stos
dec
sub
add
orb
dec
jmp
pop
inc
ljmp
mov
loope
fnstenv
push
push
bound
repnz
es
outsl
negb
mov
and
fldt
pop
cld
mov
icebp
jae
loope
pmuludq
cwtl
mov
aaa
pop
loopne
jnp
mov
rcll
push
dec
insb
pop
lahf
push
mov
fucomip
je
sub
mov
jmp
movsl
movsb
sub
cmp
xchg
mov
cwtl
add
cmp
lods
add
test
dec
or
xchg
push
mov
jo
std
lcall
dec
imul
loopne
sbb
sti
lcall
sub
cmp
or
mov
lahf
mov
test
push
faddl
ret
inc
jmp
cmp
inc
popa
out
lret
in
andl
jmp
rolb
sub
cmc
popf
out
inc
das
mov
cmp
pop
cmp
dec
pop
js
push
pop
insb
sbb
xor
push
mov
mov
pushf
pop
jle
cmpl
ret
dec
popf
jl
or
jo
in
adc
dec
sub
rorb
pop
test
mov
rcrl
jge
mov
sub
add
testb
out
es
call
mov
xchg
imul
and
mov
jno
or
jo
push
aad
add
sbb
int
jmp
pop
cs
pop
pop
adc
arpl
dec
cmp
mov
shrb
enter
sbbl
dec
add
cmp
cld
mov
ficoms
ljmp
daa
mov
stos
mov
mov
mov
xchg
pop
clc
aaa
sub
int
inc
sub
insb
jge
hlt
xchg
enter
pop
and
jg
pop
test
add
arpl
pop
test
and
mov
dec
scas
pop
xchg
icebp
decl
fwait
aas
shll
pusha
adc
ret
and
cmp
push
dec
mov
cmc
pop
pop
adc
insb
add
mov
cmp
lahf
fdivr
test
es
mov
in
insl
aaa
mov
imul
adc
sbb
pop
adcl
scas
pop
mov
push
loop
inc
mov
int
subb
mov
pop
jecxz
adc
or
movsl
sbb
mov
mov
repz
xchg
fsubl
push
jae
test
and
xchg
cld
jg
outsl
outsl
cltd
inc
incb
inc
cs
in
dec
lds
xchg
shr
inc
inc
aaa
hlt
dec
sub
push
stos
negl
pop
xchg
decl
sub
add
jb
mov
xor
xchg
icebp
scas
cmpsb
cmp
ja
cld
icebp
xor
inc
insl
cmp
and
rorb
popa
outsl
popa
fisubl
ds
xchg
aaa
push
pushf
or
mov
adc
mov
lods
ret
bnd
rorl
out
clc
mulb
jp
mov
push
sbb
sub
sub
or
add
push
or
xchg
aam
adc
pop
and
push
cld
sub
xlat
adc
jb
movsb
pop
sub
out
cmp
jg
jo
lds
mov
jo
std
xchg
movups
and
xor
push
push
aam
mov
negb
aas
faddl
hlt
sbb
out
roll
rcrl
cmp
mov
aam
push
cmpsb
mov
mov
add
mov
je
dec
mov
cmp
es
jbe
sbb
or
add
ljmp
or
pop
or
sbb
aam
andl
mov
cmpsl
and
not
inc
test
pop
sbb
push
push
sbb
mov
js
out
sti
jo
nop
jge
jne
aam
icebp
or
addr16
dec
or
andb
outsb
stc
push
xchg
mov
add
or
int3
push
movsl
cmp
sub
inc
cld
sbb
add
std
push
push
popa
bound
jp
xorb
add
pop
jmp
ret
mov
pop
sbb
xchg
sbb
and
xchg
out
fldenv
xchg
push
popf
mov
or
daa
jge
mov
dec
inc
adc
jg
mov
adc
jnp
in
mov
push
xchg
fiadds
cwtl
mov
add
arpl
add
cld
sbb
pop
mov
adc
inc
add
adc
pop
adc
out
mov
adc
push
add
fisubs
mov
pop
ret
xchg
cmp
in
rcr
fwait
pop
push
adc
pop
faddl
mov
inc
int3
test
rcrl
filds
xor
pop
sub
push
xor
cmp
je
mov
and
movsl
out
stos
add
inc
add
jb
mov
sub
and
mov
stc
ret
add
and
mov
not
jae
aam
ja
std
add
adc
pop
movb
adc
mov
adcb
arpl
jbe
cld
inc
and
pop
sub
add
ret
iret
stos
mov
in
add
mov
jp
cmp
add
and
sub
loopne
mov
adc
in
jo
xor
dec
adc
push
inc
inc
jnp
jg
fsts
lahf
jp
addb
icebp
mov
popa
cld
call
shlb
xchg
mov
stc
mov
and
test
std
inc
xchg
jb
ret
mov
xchg
ss
pop
jmp
je
loop
push
addl
dec
dec
loope
das
sbb
cmp
jmp
push
les
cld
jmp
xorl
stc
lock
imul
pop
inc
addb
jo
and
cli
push
mov
jge
das
repnz
mov
or
dec
cld
pop
in
shll
iret
or
call
push
mov
sbb
test
in
sub
xchg
and
lock
daa
dec
or
decl
fidivs
movsb
pop
inc
push
ffreep
push
mov
orb
clc
in
cmp
rol
mov
push
call
mov
iret
cmp
ror
nop
xor
add
cmp
loope
mov
mov
outsb
call
loop
leave
or
jns
ret
mov
mov
stc
lods
lret
jle
inc
loopne
dec
out
and
in
and
dec
or
movsb
aad
jg
xchg
dec
and
inc
movb
xchg
imulb
and
loopne
loop
mov
dec
mov
cmpsb
dec
or
jp
push
fnstenv
fildl
and
sub
fistl
aaa
and
sub
jb
mov
pushl
or
cmc
mov
pop
adc
ja
pop
mov
in
push
jge
aaa
nop
ficoml
jns
scas
mov
dec
cltd
inc
sub
add
and
inc
adc
and
cmp
fcoml
mov
orl
ja
sbb
cmc
xchg
push
dec
stos
nop
in
fcoml
lahf
popf
push
pop
xchg
mov
add
faddl
cmp
je
add
push
sub
xor
fwait
lods
cmc
cmp
xchg
push
rorl
fst
sbb
pusha
push
and
sti
lahf
inc
or
jno
fsts
mov
and
dec
inc
stc
add
mov
fstpl
repz
mov
inc
pop
dec
jo
icebp
xchg
mov
faddl
aas
rorl
sbb
push
int
lea
stc
mov
into
sahf
subb
ret
gs
adc
add
mov
push
mov
loop
fldl
add
adc
and
xlat
push
inc
jo
cmpsb
xor
push
loopne
pop
dec
sbb
xor
push
int3
scas
into
subb
add
cli
sub
or
cmp
push
mov
ret
pop
xchg
loopne
out
mov
add
dec
shll
fadd
pop
push
cld
fmull
sub
push
sub
push
inc
stos
add
or
or
call
test
mov
push
pop
cmc
sub
or
pusha
adc
xor
cmp
cmp
inc
in
aaa
fcomps
add
call
inc
pusha
lret
add
add
adcb
sbb
std
pusha
adc
add
add
enter
in
cltd
loopne
mov
dec
sub
adc
add
and
nop
adc
das
jae
mov
lock
enter
adc
xlat
sarl
addb
xchg
aad
mov
and
movsb
mov
fisubl
lock
es
fwait
mov
pop
xor
adc
rcll
stos
ficoms
das
sahf
push
jg
ret
xor
lcall
xor
add
inc
dec
or
sbb
fmull
push
fildl
repz
push
ja
in
cwtl
inc
sti
add
mov
dec
addb
adc
or
sub
in
push
scas
ficompl
mov
inc
repz
fwait
cmp
sbb
mov
push
repnz
adc
push
push
inc
sbbl
sub
in
daa
mov
shl
in
cld
pop
push
add
jmp
push
add
cmpl
in
test
data16
inc
pop
push
mull
scas
push
fists
cmpsb
mov
add
pop
cmc
stos
or
sbb
sbb
lcall
cmp
jmp
mov
in
pop
mov
test
inc
sbbl
xchg
push
mov
cmpsb
xchg
dec
sbb
movsb
gs
or
jb
add
pop
aaa
mov
shrb
mov
cs
mov
inc
clc
sub
roll
shrb
fldt
testl
adc
sub
icebp
bound
jl
daa
jbe
cmp
fptan
dec
add
clc
mov
xor
mov
inc
mov
lods
mov
add
fucomip
dec
adc
inc
les
cmp
cmp
test
sti
jg
aas
jge
mov
sub
jae
cli
incb
push
aam
cwtl
push
loope
push
mov
arpl
dec
add
lods
jmp
push
cmp
push
ficoml
adc
dec
adc
mov
xor
mov
test
jo
test
rclb
lods
dec
je
mov
cmp
xchg
fwait
outsb
jl
in
aad
ss
mov
das
mov
andb
arpl
xchg
cmp
icebp
mov
pop
push
lods
nop
push
std
inc
jl
decb
sahf
adc
mov
nop
fcoms
sbb
xchg
mov
sbb
or
daa
movsb
sub
mov
adc
mov
push
dec
ret
ret
adc
std
sbb
mov
jecxz
dec
sbb
dec
inc
adc
fbstp
push
or
pop
aad
test
or
std
stos
repnz
sbb
mov
adc
imul
mov
lods
mov
mov
shrb
and
enter
fildl
cmp
xor
add
and
pop
pusha
adcl
cmp
push
std
push
int3
push
stc
adc
rorl
pop
cmpl
fdivs
ljmp
bound
pusha
dec
mov
aaa
add
test
sti
pop
ss
outsb
cld
mov
daa
subl
int3
in
mov
lock
mov
fisttps
ja
add
nop
cmpb
incb
out
popw
loop
add
dec
jmp
in
in
jle
pop
stos
or
shrb
loope
and
jl,pn
imul
cmc
loopne
mov
or
insb
and
or
and
test
xchg
xchg
push
sbb
mov
dec
fidivs
and
fnstcw
and
sbb
mov
xor
mov
inc
inc
shlb
push
and
xchg
cltd
mov
repz
ret
push
movsl
fists
add
jo
jb
mov
push
adc
inc
sub
aas
mov
dec
addb
aas
xchg
aaa
mov
xor
ss
aaa
hlt
cs
jo
mov
cld
add
popf
orb
cmp
test
pop
pop
in
push
ljmp
fists
cwtl
loope
in
aaa
fsubrs
les
scas
idivb
sub
loope
mov
push
or
insl
jg
inc
push
inc
les
dec
push
shll
stos
adc
push
and
adc
arpl
add
push
out
jne
pop
dec
push
test
outsl
dec
adc
sbb
dec
popf
popa
mov
add
cwtl
xor
in
xchg
into
pop
add
lret
xchg
pop
dec
jae
pop
test
outsl
sbb
pop
shll
outsl
push
and
pop
lock
call
mov
xor
ja
call
pop
push
jmp
jb
mov
mov
insl
dec
mov
sbbl
in
push
push
push
pop
sub
and
arpl
jmp
fcompl
jo
pushf
into
ret
icebp
jno
je
stos
imul
cmp
sub
pop
mov
mov
ljmp
icebp
test
push
sub
mov
fisubl
mov
addr16
leave
lcall
adc
fiaddl
mov
jg
sub
scas
xor
sahf
add
loop
iret
push
xor
sub
or
dec
out
adc
and
sbb
xchg
imul
aam
jmp
push
insl
xlat
cmp
sar
push
je
out
xor
imul
push
nopl
sub
fcmove
inc
jp
ds
xchg
ljmp
fsubs
pop
js
inc
dec
scas
shrl
add
sbb
shl
mov
sbb
gs
inc
pop
mov
pusha
mov
icebp
pop
mov
jo
cmp
dec
dec
pop
push
sbb
and
jecxz
lcall
in
das
xor
je
test
push
cmc
dec
icebp
or
inc
mov
sbb
sbb
call
je
shr
loope
fldl
and
xor
and
push
scas
imul
in
mov
mov
ss
testl
mov
sub
stos
mov
movsl
sub
movsl
in
mov
cmp
jg
das
sub
xchg
push
shl
and
repnz
test
pop
and
pusha
sbb
outsl
std
call
aas
mov
sub
data16
sbb
inc
std
cmp
aad
es
out
push
fcomps
call
orb
data16
lahf
fimuls
outsb
mov
int
rorb
xchg
ljmp
pop
lods
jle
nop
sub
fisubrl
outsl
das
mov
cld
or
pop
dec
and
push
clc
add
fldl
jecxz
outsb
xlat
mov
ret
push
popa
push
lods
and
cmp
cmp
sbb
xchg
testb
inc
roll
sahf
inc
sbbl
sbb
sub
inc
push
add
sbb
lods
fwait
cs
test
inc
testb
mov
fcoml
in
popa
out
xchg
pop
scas
lcall
das
or
xchg
repnz
dec
fiadds
jl
cmp
int3
out
mov
dec
fwait
dec
sti
fisubrl
pop
jecxz
loope
loope
xlat
inc
xor
mov
and
push
sbb
dec
adcl
hlt
arpl
scas
jo
outsl
inc
lods
mov
fdivr
test
out
popf
mov
push
decl
pop
adc
sub
fsub
push
or
daa
xor
in
int
test
les
jbe
js
decb
push
mov
mov
ss
movsl
leave
pop
adc
mov
push
mov
xor
and
push
ret
pop
push
and
sub
mov
movlps
cmpb
inc
push
addr16
ljmp
icebp
pop
int3
pop
lods
out
dec
shrb
mov
fcmovu
inc
xchg
push
sbb
repnz
push
int3
xor
shld
push
cmc
xor
xor
inc
pushf
jne
xorl
ret
mov
enter
adc
nop
mov
les
shll
lods
lret
add
aad
sbb
lods
stos
adc
and
push
push
arpl
ror
inc
jl
outsb
lret
pop
push
sbb
adc
js
sahf
scas
mov
xchg
adc
int3
repnz
test
and
out
hlt
fsubrl
push
test
push
enter
inc
or
mov
sbb
pop
cwtl
xchg
aas
dec
sub
mov
inc
xadd
adc
sub
xchg
mov
add
sarb
mov
movsb
and
sbb
sbb
loopne
push
roll
dec
cmp
sbb
mov
enter
data16
cmp
or
sbb
lcall
or
push
adc
inc
jae
mov
dec
out
push
fs
inc
pop
sbbl
jp
mov
jle
add
test
push
cmp
cmp
adc
xchg
dec
push
dec
cmp
and
mov
fstpt
inc
add
dec
jno
jp
shlb
and
inc
sub
cltd
aad
or
adc
jg
xchg
push
pop
sbb
out
mov
das
mov
stos
inc
in
pop
mov
lds
add
lds
clc
dec
cld
inc
std
sarb
fcmovb
xor
inc
xor
sbb
cmpl
mov
shlb
mov
std
inc
add
add
or
bound
enter
xchg
ljmp
inc
pop
and
mov
sub
addb
push
lahf
sub
clc
mov
fwait
jne
pop
xchg
mov
mov
push
jmp
imul
mov
jg
sbb
add
add
xor
incl
sahf
aad
daa
in
cmp
and
call
sbb
adc
add
test
das
push
xor
and
xchg
sbb
mov
lret
stos
xorb
fisttpl
aaa
ss
mov
inc
adc
das
fcmovnu
push
call
out
or
clc
loope
imul
adc
mov
aaa
or
jmp
stos
test
jecxz
shl
test
mov
and
push
cs
cmpl
mov
cmp
mov
cli
or
sbb
sbb
mov
cmpl
in
jbe
push
xor
mov
xchg
js
dec
jmp
add
std
dec
scas
dec
pusha
push
pusha
popa
mov
ljmp
popa
mov
scas
movsb
movsb
adc
ja
in
jbe
es
jge
pop
add
ficomps
cltd
cmc
dec
jno
adc
mov
subb
ss
jl
nop
cltd
fisubl
mov
sbb
push
inc
xor
mov
js
jg
cltd
sub
lods
lret
mov
dec
pop
ds
ljmp
push
cs
pop
loop
pop
subl
jg
push
sbb
pop
mov
mov
mov
mov
bound
mov
cmp
sbb
or
mov
bound
adc
lea
xchg
lret
cmp
gs
xchg
jne
nop
outsl
mov
das
lock
dec
shll
popf
lock
sbb
movsb
add
adc
dec
xor
loopne
pop
jne
stc
mov
out
loop
jne
inc
cltd
push
pop
psrad
and
mov
jge
fcompl
ja
jg
inc
cmp
aam
lds
js
jb
or
or
pop
out
addb
sbb
lds
sbb
sbb
pop
push
cmovl
xchg
or
lds
jo
shr
add
outsb
dec
in
mov
fstl
imull
pop
or
push
xchg
pop
mov
lds
orb
push
addb
or
fdivrs
leave
sub
mov
das
xchg
xchg
sub
and
out
lods
push
push
xor
fs
sub
shr
inc
je
xchg
dec
xchg
push
mov
mov
adc
cmp
add
add
jle
dec
cltd
mov
sub
mov
sarb
repnz
pop
sub
mov
mov
add
sar
setne
cmp
xor
cld
lods
xor
add
inc
dec
pop
sub
jnp
mov
adc
xor
call
cmpsb
out
movl
xchg
bound
push
sub
mov
orb
aas
xor
andl
add
mov
jmp
mov
adc
outsb
arpl
mov
push
or
push
xchg
mov
push
jb
test
push
shll
pusha
bound
pop
add
cmp
mov
pop
and
pop
sbb
aam
or
and
loop
fdivr
ret
or
je
call
and
xchg
xchg
stos
push
add
out
insw
or
dec
cmp
popa
lods
imul
adc
rorb
test
nop
pop
adc
sbb
insb
cmp
scas
xchg
sbb
movsl
int
adc
xchg
std
fildl
in
mov
xor
cld
xor
and
lock
jge
decb
dec
fs
mov
in
mov
fs
push
jp
shr
jl
pop
leave
adc
mov
cld
out
mov
lods
ljmp
jg
cmc
inc
mov
iret
lods
or
rcrb
sbb
sbb
cmc
std
arpl
xor
xor
jno
shll
roll
and
or
les
xchg
jnp
sub
dec
inc
add
cmp
ret
pop
pop
call
pop
or
sub
dec
sub
push
dec
aaa
outsb
call
jbe
or
cmp
lods
nop
out
mov
mov
mov
sub
aad
rorl
lret
jne
add
add
jns
loope
mov
adc
mov
sbb
or
cmpsb
mov
adc
mov
dec
sbb
fdivrl
lcall
pop
or
insl
in
cli
xchg
daa
jmp
fdivr
outsl
sub
push
or
loop
test
out
push
shl
in
clc
mov
or
inc
loopne
add
pop
push
fdivrl
enter
in
idiv
push
dec
add
xchg
mov
dec
pop
movsl
sub
mov
imul
je
pop
rep
mov
adc
push
les
push
out
or
addb
repnz
sbb
mov
jle
stos
ret
or
insl
pusha
test
pop
test
jecxz
sub
add
icebp
and
pop
std
sbb
rcl
pop
aad
push
cmp
and
insb
and
mov
add
call
adc
sbb
aaa
inc
pop
enter
pop
xor
test
push
jne
xchg
lods
ja
mov
sbb
add
and
pop
out
lcall
pop
shrb
mov
mov
adc
mov
push
pop
push
cmp
xor
cltd
rorb
push
adc
stos
scas
fldcw
pop
je
sub
jnp
inc
add
mov
jo
fldenv
or
jmp
repz
pushf
loope
or
adc
testl
sbb
ret
imul
mov
ret
clc
push
cltd
mov
mov
cmp
js
imul
sbb
insb
inc
sbb
sub
mov
xor
pop
mov
jae
push
jge
sub
nop
cmp
and
ljmp
ljmp
mov
push
xchg
mov
dec
shl
push
ja
addr16
cwtl
sbb
push
cmp
es
jp
roll
sbb
loope
aad
clc
cmp
push
jmp
sub
mov
add
je
shrb
sub
cmp
pusha
xor
jno
push
and
cmp
aad
leave
repz
out
fdivs
push
sbb
mov
fs
adc
jns
xchg
fsubs
xchg
mov
sub
cmp
enter
add
call
ss
out
mov
lock
sti
sahf
inc
addr16
mov
or
adc
outsb
testb
jp
and
lds
clc
or
pop
xchg
fmul
loop
push
jg
sbb
sub
inc
mov
fmuls
adc
clc
inc
xchg
ljmp
adc
fsub
inc
or
out
add
mov
dec
mulb
aaa
test
pop
test
fdivp
ja
out
push
adc
xlat
push
bound
test
je
stos
inc
aad
aaa
pop
sbb
or
mov
adc
fisubrs
fildll
jae
inc
fcoml
insl
pop
mov
push
mov
inc
or
dec
rcrl
mov
popa
add
dec
js
ja
ja
andb
insb
mulb
inc
inc
rol
cld
cmp
mov
call
mov
std
dec
cwtl
and
jne
mov
enter
lea
xchg
inc
pusha
jae
test
mov
sbb
sub
loopne
pop
mov
xor
hlt
pop
in
mov
sbb
xchg
int
in
imul
sub
add
xor
lcall
addb
mov
mull
rclb
and
xor
mov
push
mov
jmp
sub
push
out
jl
adc
out
insb
in
jne
subb
jae
and
pushf
sti
adc
jl
divb
lds
rolb
in
popa
push
filds
sti
sbb
add
pop
test
mov
xor
fadd
mov
adc
insb
xchg
sbb
dec
out
shlb
aad
mov
add
imulb
es
jo
dec
xchg
pushf
xor
les
testb
pop
jbe
cmp
jbe
dec
aaa
repnz
scas
dec
out
or
sub
fstps
in
xor
in
jmp
or
aaa
cmp
addr16
sbb
shrl
bnd
pop
jecxz
ficompl
sarb
add
jb
cmpsb
mov
stc
fiadds
xor
aad
dec
jle
sub
inc
rorl
int3
loopne
add
mov
outsb
out
dec
dec
sub
jg
add
lret
push
mov
push
xor
sub
lock
xor
stos
or
add
jb
mov
repz
out
mov
inc
or
xor
mov
sbb
mov
cld
cmpsl
scas
scas
je
lcall
jmp
and
das
lods
loope
inc
or
mov
or
add
sub
dec
rclb
mov
dec
sbbb
jecxz
icebp
das
outsl
xor
inc
mov
inc
mov
jne
mov
pop
in
mov
test
push
xchg
stc
sub
pusha
loope
or
mov
jo
lcall
test
inc
push
mov
sbb
das
mull
ret
xor
jo
inc
loop
sub
sub
xor
push
sub
xor
loop
hlt
inc
rorb
jl
lret
int
out
sbb
std
rcrl
jp
ret
cli
cs
xchg
fmuls
xorl
mov
and
or
cmp
adc
xchg
fisubrs
dec
jne
jg
shlb
dec
cmp
insl
in
cli
frstor
into
and
jns
mov
loop
divl
loope
add
cmp
fisubs
adc
lods
or
cmp
lds
jmp
mov
loopne
inc
sub
cmp
movsl
faddl
and
movsb
and
or
divb
or
jmp
lea
rolb
cld
push
and
jb
xor
pop
ficoms
addb
std
xchg
daa
lods
adc
adc
adc
inc
push
push
ret
dec
fwait
dec
call
rorl
mov
popa
mov
lock
popw
push
dec
aam
and
xlat
mov
add
mov
lock
xchg
fwait
ret
dec
ret
mov
mov
cmp
pop
cmp
jl
mov
lret
data16
enter
loope
icebp
push
push
es
mov
pop
ret
or
inc
or
cmp
jmp
sbb
pop
into
packssdw
and
inc
scas
and
push
outsb
mov
popa
dec
das
mov
stc
xchg
add
inc
xchg
lea
add
sub
add
sbb
cmp
inc
loopne
xlat
cmp
sub
pop
gs
sti
arpl
test
je
pop
mov
ret
xor
mov
mov
clc
call
sti
shl
jne
and
sub
lcall
lret
mull
pop
pop
and
mov
pop
jp
add
sbb
mov
in
fdivs
cmp
add
add
or
push
pusha
imul
mov
das
std
dec
out
pushf
std
xor
faddp
call
push
or
loope
sahf
pop
lret
adc
pop
mov
lahf
or
cmp
enter
mov
std
mov
adc
sbb
shl
divb
lock
and
pop
mov
cs
imul
les
shrl
inc
nop
jo
and
jne
pusha
push
mov
sarb
lcall
cmp
or
sbb
cwtl
sti
cmp
movsl
stos
add
lods
push
mov
jge
xchg
mov
int
xor
and
dec
in
aad
das
scas
outsl
push
or
inc
adc
and
push
orl
sub
loopne
push
pop
jbe
jmp
dec
push
cmpsb
dec
js
and
xchg
sbb
push
addl
clc
daa
icebp
pop
test
add
nop
and
leave
fmuls
push
cmc
sub
lds
mov
movsb
add
mov
jg
mov
mov
nop
test
cmpsl
in
je
enter
insb
sub
and
xchg
add
popa
rorl
sub
inc
xchg
push
outsl
push
sbb
ret
loope
add
outsb
inc
xor
add
pusha
cmp
jp
jnp
inc
mov
lcall
loopne
les
xor
lods
iret
ret
add
dec
sbb
jp
lods
cmp
sub
mov
shll
hlt
xchg
inc
in
push
in
cmc
shll
aaa
xchg
lods
pusha
lock
mov
punpckldq
or
cli
ja
lret
movsb
mov
push
pop
jae
add
and
add
mov
mov
data16
and
jae
rcr
or
and
int
enter
pop
pop
sbb
loop
mov
lock
or
xor
adcb
sub
adc
pop
out
es
repz
fcmove
ret
cmp
push
out
xor
jecxz
loopne
mov
stos
push
jae
jge
or
test
jecxz
xor
cmp
popf
nop
xchg
lret
cmp
cwtl
in
pop
adc
mov
imul
jg
sbb
fisttpll
push
aam
mov
shrl
sub
sub
add
dec
mov
mov
lock
or
cwtl
sub
test
gs
inc
out
loop
leave
mov
pop
add
and
mov
mov
pop
jmp
icebp
cwtl
sarb
adc
mov
cwtl
aad
mov
mov
inc
movsl
push
push
push
inc
or
out
sub
xor
push
shrb
xorb
pop
int
cmp
pop
nop
push
arpl
shlb
cmp
in
ljmp
cmp
mov
loope
int
pusha
add
into
iret
xor
xchg
and
xchg
out
xor
nop
in
mov
iret
mov
xchg
inc
out
loopne
aaa
adc
cmp
push
inc
push
rol
dec
sarb
add
add
mov
and
push
xchg
inc
call
das
sbbb
pop
mov
lock
pop
or
icebp
dec
outsl
xlat
xchg
aaa
and
aam
testb
fcoms
add
ret
pop
dec
mov
push
cwtl
mov
rorb
int3
data16
xchg
adc
shrb
subl
lock
add
push
fidivrs
cmp
and
push
imul
popa
rcrl
mull
cwtl
jno
add
sbb
adc
lret
shlb
jle
pop
pop
cs
iret
add
fbstp
shlb
subb
add
and
mov
push
xor
push
lods
ljmp
inc
jmp
lods
ret
or
jo
loopne
lcall
adc
jmp
fimuls
ds
cwtl
and
clc
jmp
sub
addr16
and
loopne
mov
mov
push
and
sarb
call
hlt
mov
icebp
xor
idivl
dec
mov
nop
mov
lret
fdiv
push
int
cs
and
popa
pop
pop
add
rolb
roll
mov
dec
cmp
sahf
or
add
cmp
sbb
es
xchg
loopne
inc
lea
test
cmpb
insb
fcomps
pushf
cmp
mov
shrl
dec
and
and
test
icebp
inc
inc
and
lods
and
add
popa
adc
test
sarl
ret
sbb
lock
pop
sbb
add
sub
mov
cmp
loope
and
xlat
jnp
add
popa
jne
cwtl
dec
add
adc
test
sarl
rorl
enter
xor
jne
data16
fistpl
add
adc
pop
push
xor
or
bound
sub
data16
sub
mov
shr
cmp
xorb
dec
jo
add
push
jmp
addl
and
inc
bndstx
jmp
inc
mov
sbb
xor
outsb
fucomp
mov
in
call
mov
cmp
sub
repnz
enter
stos
sbb
icebp
ljmp
mov
or
test
scas
fsubr
add
add
loopne
jb
adc
cmp
dec
mov
push
rcrb
inc
mov
les
les
repz
inc
sbb
jg
in
sub
pop
mov
or
mov
les
lds
je
push
adc
cmpsb
pop
and
pop
push
hlt
outsl
mov
outsl
cmp
sahf
sbb
sub
push
add
and
add
fs
cwtl
fnsave
dec
clc
ss
les
pop
inc
mov
es
cmp
sub
or
add
mov
mov
mov
cmp
mov
lret
pop
ror
movsb
sub
movsl
xor
inc
cltd
jae
scas
xor
or
sarl
arpl
pop
scas
cli
repz
rcll
or
xor
mov
jge
sbb
and
loop
cmp
addr16
mov
js
orb
mov
aas
ret
out
or
mov
pop
and
cmp
sbb
push
dec
stos
std
ljmp
sti
fdivs
js
ds
and
inc
jle
xchg
fmull
int3
dec
push
or
andb
push
xor
adc
adc
jge
mov
xchg
data16
or
mov
xor
or
mov
mov
push
add
rcrb
ret
add
push
ret
pop
icebp
clc
xchg
mov
pop
mov
mov
mov
loope
inc
mov
jl
mov
test
xor
pop
rclb
aad
and
lock
addps
sub
dec
or
mov
xchg
jae
dec
cltd
hlt
mov
jne
or
sub
clc
add
sbb
bound
xor
jecxz
mov
fldenv
add
xor
lcall
mov
ds
push
shl
pop
les
sbb
lock
mov
cmp
sub
and
shlb
mov
cmp
mov
push
shlb
and
int
inc
mov
fs
jnp
or
xchg
mov
xor
cmp
jg
inc
push
mov
aaa
movsb
sub
push
aaa
jne
call
mov
adc
incl
std
xor
movsb
push
es
or
add
add
dec
inc
cwtl
ret
sbb
or
ds
add
xor
mov
addl
cmpsb
stc
cltd
and
xor
mov
add
xor
add
aad
stos
push
popa
mov
and
push
loopne
popa
mov
jo
mov
hlt
jge
xor
sbb
cmp
xchg
sbb
jns
inc
push
stc
pop
fistpl
mov
mov
ja
fcompl
cmp
xchg
lock
push
add
bound
xlat
cli
mov
call
xor
add
mov
mov
insb
unpcklps
lds
xchg
adc
lahf
out
stos
and
in
cmp
cmp
ss
popa
inc
icebp
or
adc
and
imul
mov
xlat
mov
ffree
or
insb
and
jbe
in
mov
into
loop
sub
xchg
loope
jmp
adc
cmp
std
add
dec
aad
inc
outsl
fiaddl
cld
aaa
mov
sub
or
pop
ds
or
adc
je
adc
add
scas
std
and
rclb
stos
test
push
loop
xchg
add
inc
jne
mull
mulb
fldcw
loopne
xor
dec
add
in
adc
lods
jmp
inc
cs
in
sbb
in
pusha
xchg
shrl
and
mov
js
inc
xchg
lods
ljmp
jle
pop
jp
dec
adc
mov
repz
lods
loopne
cwtl
sub
imulb
mov
icebp
dec
scas
or
or
ljmp
in
mov
aaa
roll
out
sub
mov
cmp
xchg
jnp
andb
sub
fildl
adc
sub
mov
push
push
or
es
jbe
inc
jle
dec
mov
mov
nop
mov
or
imul
mov
sub
mov
pop
jo
mov
jne
inc
mov
inc
test
mov
sar
roll
ret
loop
cmp
mov
or
adc
in
cmp
sbb
rolb
decb
sub
fcoml
xchg
pusha
sbb
nop
fcomi
subb
jo
dec
pop
add
cmp
xchg
rorb
pop
out
sti
xor
push
lods
mov
sub
pop
mov
rolb
imul
add
dec
aam
mov
mov
add
mov
sub
ljmp
cltd
dec
in
incl
outsl
jmp
out
sbb
fstps
call
das
cld
pop
adc
test
lahf
cltd
pop
jo
fwait
pop
mov
mov
or
mov
bound
mov
cmp
shll
repz
push
jle
mov
lods
sub
ret
jge
and
cmp
jo
mov
push
jg
sbb
clc
pop
mov
mov
jl
mov
sub
dec
test
adc
and
insl
pop
sbb
outsb
fbld
call
jecxz
xchg
sbbb
lock
sbb
fnstsw
pusha
call
icebp
xchg
rsqrtps
push
fwait
inc
movsb
in
pop
or
mov
or
sbb
cmpsl
js
out
outsl
xor
test
inc
outsb
hlt
rorl
sub
jo
add
outsl
rorb
icebp
movsl
add
icebp
pop
xorl
jge
clc
and
cmp
and
addr16
xor
stc
aad
mov
or
xchg
or
add
movl
adc
movsb
cmp
inc
xor
push
mov
out
fidivrl
lods
rcll
test
movsl
pop
loop
rcrl
push
test
or
daa
loop
out
push
movsb
rcrb
iret
xchg
pop
push
add
decl
or
lods
rorl
dec
insb
push
add
mov
je
sub
jne
test
mov
nop
popf
jb
jbe
aad
xor
cmp
call
int
cmp
adc
sub
inc
lock
push
jle
xchg
add
pop
jg
or
xlat
idivl
mov
mov
xchg
fcompl
xorb
dec
push
cwtl
xor
add
cmpsl
jne
das
outsl
mov
dec
shlb
roll
and
mov
dec
outsl
outsb
adc
rcrb
jmp
mov
test
add
cmp
push
xchg
mov
cmp
fldenv
push
adc
aad
dec
imul
xor
mov
mov
or
cmp
pop
pop
or
sbb
add
clc
push
push
rcl
popf
mov
outsl
adc
jo
insl
and
outsl
std
mov
pop
cmp
andb
in
ja
iret
push
sbb
shll
adc
mov
fistpl
mov
mov
icebp
add
and
jo
mov
push
in
cmp
sub
cmp
aad
push
mov
add
movsl
ret
into
and
ljmp
bound
das
sbb
loop
addr16
mov
fisttps
clc
push
sti
outsb
xchg
xchg
add
or
xchg
in
inc
sti
jae
push
dec
add
or
loope
pop
or
push
aam
fisubrs
sub
or
add
sarb
lea
xchg
mov
inc
sbb
mov
add
jns
loopne
sbb
repnz
cli
imul
xchg
cwtl
imul
addr16
or
mov
jle
mov
scas
pop
add
sbb
xchg
push
or
push
stc
outsb
lahf
push
pushl
call
add
hlt
mov
xor
loopne
test
repnz
sbb
xlat
add
jp
xor
in
jno
cmc
fisubrl
fdivs
adc
cli
aaa
xchg
cmp
repz
das
add
addb
xchg
adc
imul
mov
mov
add
outsl
cmp
das
pop
cli
sbb
lock
pop
pop
stc
adcw
xorb
das
icebp
test
dec
fcomps
mov
cmp
ljmp
pop
ss
jno
stos
and
jmp
xchg
mov
pop
jp
cmc
out
dec
cs
insb
aad
mov
hlt
mov
jnp
clc
lahf
add
or
cmp
jg
arpl
push
test
leave
mov
push
inc
pop
fwait
xchg
popa
push
or
lods
loopne
and
shll
mov
add
sbb
shr
jns
xor
dec
movsl
cmp
sbb
test
push
dec
push
fdivr
call
inc
nop
xchg
mov
lret
sahf
fildl
or
push
rorb
cwtl
dec
lock
jl
cmpl
and
lock
clc
jmp
xor
movb
pop
insl
pushl
fistps
adcl
mov
jnp
das
inc
outsb
popa
and
cmp
mov
add
daa
pop
push
mov
cli
incl
fistpll
and
icebp
adc
lret
adc
jno
mov
in
push
ret
sbb
das
sub
repnz
mov
and
stos
and
lea
mov
or
mov
push
adc
xor
mov
fldenv
pusha
push
hlt
aaa
les
adc
aam
sbb
stos
not
das
imul
sub
imul
aam
or
aam
hlt
sub
andl
mov
das
sub
aad
cmp
mov
repnz
lcall
mov
hlt
inc
xor
data16
pop
add
in
push
mov
cmp
jge
out
dec
cld
xor
sahf
inc
pusha
icebp
outsb
mov
divl
aam
into
or
cwtl
jb
out
mov
sub
pop
idivl
sbb
out
add
add
cmp
rcrl
add
xchg
jo,pt
aam
lret
fcom
jecxz
icebp
cmpsl
fs
jb
les
add
or
adcl
sub
inc
sub
fmuls
mov
push
add
sbb
dec
cmc
lret
add
shrb
pop
int3
push
mov
cwtl
mov
xor
out
mov
push
vpunpckhwd
xchg
subb
inc
cld
out
test
dec
push
testl
xchg
or
in
rorl
push
mov
adc
inc
add
sbb
and
mov
and
push
xchg
cmp
adc
xchg
mov
jo
fcoms
aam
iret
mov
fcom
aam
in
aam
fisubl
adc
mov
inc
int
or
aad
ljmp
lds
and
mov
add
inc
cli
pop
push
mov
push
jae
insb
dec
add
test
mov
pop
xor
or
loopne
in
fmull
cltd
jge
add
xor
push
inc
lods
and
adcb
test
sub
and
stos
mov
sar
test
out
adc
js
adc
push
aaa
repz
xor
sbb
inc
rcrl
in
push
adc
mov
mov
adc
stos
sbb
adc
sahf
int
mov
cmp
es
call
add
push
dec
pminub
push
ffreep
pushf
test
adc
or
or
pop
stos
fsub
jmp
mov
lahf
xchg
pop
das
movsl
inc
mov
outsl
std
aad
push
mov
cmc
inc
bound
xchg
out
push
sbb
mov
les
inc
dec
call
roll
xchg
fidivrs
pop
jge
mov
movsb
pop
adc
pop
add
insl
repnz
dec
mov
jle
in
dec
push
sti
or
push
pop
inc
or
and
arpl
mov
add
mov
enter
push
add
aam
scas
cmpl
cmp
mov
lahf
addl
sub
cmp
mov
add
or
imul
rcll
aam
mov
jg
ljmp
loope
leave
adc
lods
dec
dec
aad
icebp
xlat
xor
cmp
mov
es
stos
mov
mov
ret
cmp
mov
sub
mov
xor
jg
insl
mov
es
cmp
adcb
aaa
mov
or
pop
push
xor
mov
ficoms
adc
jbe
mov
dec
lods
or
movsl
lock
fldenv
and
and
in
xorl
inc
xor
add
and
gs
push
pop
push
xchg
insb
inc
jle
inc
mov
lret
ret
dec
imul
test
fnstenv
decl
push
sbb
push
loopne
jne
lds
rcrl
add
mov
pop
pop
ja
or
test
call
in
stos
call
cmp
adc
cld
sub
or
in
add
jp
xor
out
sbb
hlt
jnp
cmc
and
enter
xorb
sti
mov
nop
xor
dec
mov
fdivrp
jg
push
stos
xchg
stc
shr
sbb
push
add
movzwl
aas
mov
mov
daa
lea
jp
ret
adc
cmp
lods
pushl
stos
call
push
push
int3
pushf
jl
rorl
push
ret
fsubs
jp
xchg
fisubl
lock
sub
das
inc
sbb
mov
in
pop
or
xchg
notl
fnclex
dec
xchg
mov
stos
adc
mov
test
lods
gs
xchg
movsb
je
mov
xchg
sbb
push
mov
or
ss
pop
clc
push
push
pop
mov
and
insb
es
xor
outsb
and
push
loope
bound
movsl
cmp
xchg
inc
mov
inc
mov
mov
mov
outsb
pop
inc
vucomisd
popa
pop
and
push
divl
push
add
and
mov
mov
in
js
sti
add
add
sbb
mov
adc
jl
loop
inc
movsl
repz
mov
lock
fidivl
pop
add
addb
mov
outsb
cmc
aaa
lret
jmp
jle
movsl
or
xchg
in
mov
mov
outsb
inc
sub
jmp
mov
xchg
inc
stc
and
hlt
bound
cli
fisttps
ljmp
pop
popa
dec
add
nopl
shrb
call
xchg
sub
jne
lret
mov
push
fsubr
push
lsl
mov
sbbb
mov
push
or
sub
push
mov
daa
adc
or
inc
loopne
les
mov
sub
add
and
test
movsb
mov
mov
testb
push
pop
mov
lock
jns
add
notb
mov
imul
pop
dec
mov
insb
xchg
dec
lods
xchg
pop
loopne
mov
mov
pop
sbb
dec
icebp
int
dec
je
dec
inc
sbb
cmp
dec
stos
push
out
adc
into
cli
shlb
xor
rclb
daa
add
fcmovbe
pop
pop
aas
fcoml
mov
int
rorb
add
dec
fwait
jge
sub
sbb
lock
sbb
rorb
or
mov
and
fwait
aam
adc
xorb
or
out
fmulp
add
sub
fadds
ss
adc
inc
shrl
cld
adc
and
mov
push
mov
cmpsl
mov
divl
or
cmp
iret
shlb
mov
and
jmp
mov
mov
inc
push
sub
icebp
or
add
int3
adc
fldlg2
mov
jecxz
pusha
insb
inc
dec
push
and
xor
push
xchg
xchg
mov
cmpsb
mov
mov
xchg
cmpsb
cmp
inc
xchg
xor
dec
mov
push
icebp
cmp
in
ficoms
scas
xchg
and
loope
xchg
adc
add
inc
ret
mov
or
clc
js
test
inc
xor
out
push
mov
push
adc
adc
cmp
loopne
dec
adc
mov
bound
or
pop
ret
mov
rcll
pop
mov
pop
or
imul
rcl
pop
gs
arpl
movb
into
fs
daa
dec
sub
push
mov
push
xor
cmp
or
mov
cmc
jg
sbb
rcl
insb
sub
cwtl
add
or
mov
cwtl
inc
jle
mov
das
push
fucomip
push
mov
enter
pusha
stos
add
mov
push
cmp
add
aas
sub
dec
add
dec
loope
mov
mov
dec
jmp
mov
jecxz
push
xchg
ljmp
mov
sub
outsl
rcrb
arpl
fiadds
clc
mov
xchg
sbb
jo
subb
mov
das
push
int3
adc
pop
loopne
shll
mov
mov
lcall
and
dec
jmp
ja
pop
dec
push
aad
pop
rcll
lock
xchg
mov
rolb
sub
popf
leave
lret
insb
xchg
mov
loop
in
fidivrs
cmp
mov
cmc
xor
movsl
fucomp
dec
mov
pop
aam
fcmovnu
push
sub
loopne
inc
push
dec
inc
sbb
mov
add
xchg
adc
fcomps
sahf
xor
lahf
push
or
mov
in
fmul
xor
push
mov
or
loopne
ret
sub
mov
scas
xor
push
xchg
cmpsb
dec
mov
sub
pop
pop
into
and
pop
inc
add
stc
mov
rcll
jge
add
push
fistl
hlt
pop
jle
dec
or
add
scas
pop
jns
inc
mov
add
fisttps
aaa
jno
popa
mov
loopne
fdivrs
enter
les
dec
pop
xlat
mov
sti
in
rorb
rorb
mov
dec
xchg
mov
and
xchg
clc
lods
punpckhbw
decl
mov
sub
add
and
incl
mov
idivl
or
dec
jb
pop
cmc
fstl
add
lods
call
mov
mov
ret
fwait
xchg
cmp
mov
xchg
sbb
mov
sbb
icebp
sti
jo
das
adc
xlat
stos
test
loop
sahf
add
outsb
stc
out
and
pop
clc
pop
aad
cli
dec
push
mov
mov
push
fdivr
ja
jns
push
add
or
insl
adc
pop
lock
xchg
data16
sbb
mov
jecxz
push
pop
mov
jmp
jle
pop
pop
inc
cltd
mov
mov
ficoml
push
sti
stc
out
inc
in
out
sbb
pop
mov
or
mov
scas
mov
call
xor
ror
push
das
mov
push
inc
daa
bound
rolb
lret
add
sbb
mov
aas
adc
cmc
bound
insl
leave
push
lods
inc
push
or
mov
rolb
sbb
inc
xor
js
jecxz
or
nop
mov
mov
scas
clc
or
add
adc
or
push
cmp
sub
sbb
mov
sbb
jo
sub
in
cmp
mov
xchg
loop
mov
je
pop
cwtl
enter
sub
cld
mulb
xor
and
add
pop
pop
adc
push
jb
out
jle
mov
loope
test
pop
or
xchg
lahf
add
mov
int3
cmp
lock
xor
mov
mov
lods
into
in
das
in
or
dec
cs
or
jnp
dec
mov
and
sbb
sub
mov
mov
mov
ljmp
push
sub
dec
adc
adc
cmpsb
sub
mov
cmc
addr16
mov
push
aas
adc
aad
addr16
stos
cs
fnstsw
sbb
push
xchg
shl
mov
pop
push
flds
in
jmp
jmp
push
sbb
leave
lods
scas
js
call
mov
xchg
sbb
inc
insb
or
mov
cmp
call
inc
test
mov
fisttps
mov
adc
pop
loop
test
mov
inc
mov
repnz
cmp
mov
sbb
lcall
frstor
lret
stos
add
add
push
adc
cli
pop
push
xor
adc
jae
mov
mov
push
dec
ss
pop
push
jne
jle
inc
lsl
xlat
fcmove
inc
lahf
aad
imul
std
jg
jecxz
fcoms
pushf
js
outsl
jmp
dec
adc
cld
or
push
adc
mov
popaw
or
rol
aas
add
and
inc
jl
sbb
insl
xor
cmp
shrl
adcl
push
jnp
shll
inc
or
inc
xor
js
out
xor
xor
fnstcw
dec
jg
andb
add
orb
jg
lods
or
data16
pop
js
ja
add
push
dec
xor
xchg
loopne
inc
mov
fistpll
enter
hlt
dec
cmp
mov
xchg
and
mov
out
mov
inc
add
adc
popf
sbb
xchg
adc
cmp
xor
pushf
stos
call
loop
inc
inc
dec
stos
ret
lret
cmc
push
or
add
bnd
push
inc
outsl
pop
jo
jno
push
add
sub
or
movsl
inc
icebp
daa
adc
adc
enter
lock
int
out
mov
cmp
push
adc
add
mov
in
push
xchg
in
push
in
dec
loopne
fwait
or
add
adc
test
mov
icebp
ret
or
lret
fsts
dec
add
push
push
stc
xchg
sub
dec
xchg
or
add
adc
cwtl
btr
mov
push
aaa
add
xor
notl
loopne
out
cmp
mov
bound
fildll
cmc
sub
inc
or
jo
jg
jo
jl
cmp
andl
add
push
or
pushf
sahf
frstor
movsl
adc
les
popa
pop
or
sbb
push
mov
insb
mov
ficoms
inc
in
xchg
ljmp
cli
jl
or
add
push
sbb
cmc
fwait
mov
outsl
sub
push
add
pop
imull
inc
icebp
mov
das
add
shr
pop
and
sub
and
dec
aas
dec
mov
lods
mov
add
lcall
mov
roll
subl
add
fsts
inc
jmp
pop
lcall
test
ja
test
test
fwait
mov
xchg
fidivrs
xchg
pusha
mov
in
cli
add
enter
fdivrs
dec
and
pop
mov
or
inc
and
test
jns
add
push
mov
jnp
push
insl
or
cmp
out
jge
imul
mov
cmp
fiadds
fs
xchg
jns,pn
pusha
push
add
les
fiaddl
and
fadds
insl
incl
pushf
mov
sbb
enter
fistpl
aas
mov
jb
bound
and
icebp
xor
push
inc
inc
jecxz
adc
sub
push
xchg
pop
fdivs
and
inc
lahf
inc
jp
imul
xchg
mov
mov
inc
loope
cmpsl
xchg
mov
xchg
test
das
int3
pop
push
fsub
jnp
or
xlat
mov
stos
das
mov
adc
mov
add
xlat
or
mov
xchg
out
push
fnstenv
push
adc
push
cmpb
sub
mov
out
cs
scas
nop
and
push
adc
pop
outsl
fistps
leave
stc
nop
cmovg
adcb
testb
jbe
dec
lods
nop
test
push
pusha
das
pushf
cmp
jecxz
jmp
ficoms
enter
push
push
faddl
daa
insl
test
and
test
pop
mov
aaa
dec
pop
ret
or
adcl
and
mov
jb
loopne
push
jmp
ds
aad
subb
lahf
ret
add
push
sbb
xchg
sti
xchg
push
xlat
pop
jecxz
sbb
add
mov
movsb
jo
fisttpll
xchg
mov
pop
lahf
dec
xor
adc
mov
add
cli
jno
mov
add
je
outsb
loope
mov
xor
sbb
in
sub
ljmp
jg
or
fwait
mov
rolb
lahf
mov
pop
mov
loop
loope
cmp
or
xchg
jg
mov
scas
cmp
jg
mov
jae
ljmp
movsb
mov
sub
mov
cmp
stos
sub
adc
fwait
loope
jle
enter
insb
incl
or
mov
ljmp
loop
ss
orl
imull
or
push
jle
mov
out
outsb
add
sbb
loope
push
fcmove
iret
nop
rorb
pop
cli
stos
sub
xchg
aas
jle
rcr
stos
shl
rorl
adc
test
sahf
in
xchg
nop
test
and
incb
outsb
push
and
popa
inc
push
out
pusha
addl
pop
mov
sbb
idiv
lods
push
sub
add
in
in
xchg
sbb
ds
mov
adc
adc
outsb
cld
add
daa
sbb
fldl
stos
sbb
fistpll
jl
idivb
fmul
adc
int
js
outsl
mov
push
insb
or
stos
and
fistps
xchg
inc
push
pop
jg
push
sub
and
adc
or
mov
jp
mov
inc
icebp
push
and
ss
sbb
mov
addr16
repnz
and
pop
add
mov
test
cmpsb
lea
adc
pop
and
aad
jg
imul
sbb
jbe
sti
mov
lods
test
loopne
sahf
cmovl
push
es
xchg
ljmp
sub
mov
stc
add
dec
insb
ljmp
jbe
cld
xchg
pusha
adc
inc
and
cwtl
fists
enter
push
stc
jae
cmc
xchg
stc
dec
rcll
out
dec
adc
aaa
jne
mov
add
add
mov
fldcw
add
rclb
das
dec
lret
or
or
xor
add
test
mov
ds
out
sbb
rclb
aas
jne
stos
rorl
jae
sbb
cmp
incb
pop
sti
fisttpll
jp
mov
cmp
xor
push
fmull
mov
inc
loope
aaa
vmptrld
repz
mov
mov
cmpb
cwtl
aaa
cmpsb
pop
and
ds
ret
cmc
fisttpl
imul
movsl
jb
push
push
sbb
push
mov
call
xlat
cwtl
xchg
das
cmpsl
cmp
imul
arpl
cmc
hlt
out
fcmovnu
lock
xor
hlt
adc
fdivrs
outsl
inc
jne
or
rol
cmp
sbb
stos
inc
insl
imul
mov
fidivrl
add
mull
mov
mov
mov
mov
xor
outsb
mov
lret
fwait
push
aad
outsl
push
iret
xor
rdmsr
fwait
add
bound
fcmove
fisttps
imul
call
or
dec
sbb
mov
lods
xchg
fidivl
loopne
jl
mov
cltd
lret
xchg
mov
adc
inc
push
or
cmpsl
scas
mov
pop
xlat
cs
ljmp
andl
test
push
dec
or
outsb
or
adc
adc
insb
loope
lock
pop
sbb
mov
pop
and
shll
mov
ljmp
mov
cmpsl
mov
cmp
xor
push
lcall
xchg
scas
test
insb
mov
movsl
mov
test
jp
push
pop
lea
int
aaa
das
out
mov
xchg
mov
fimuls
loope
push
pop
cmp
pop
outsl
call
mov
js
ret
insb
and
mov
push
push
sub
pop
fbld
xor
or
push
jge
xchg
fdiv
test
cmc
mov
dec
dec
sahf
or
push
ja
insl
lea
add
and
cmpsb
add
sub
rolb
sub
ja
and
addb
push
hlt
adc
sbb
jno
mov
adc
add
mov
das
sbb
or
mov
fsts
and
lods
sbb
mov
and
inc
jge
movsl
fmuls
xchg
jg
ss
mov
fwait
mov
xchg
rcl
adc
test
xchg
mov
dec
or
sbb
jl
into
push
test
js
xor
or
clc
aaa
loop
mov
push
ror
xor
sahf
or
xor
cmpsl
sub
and
je
mov
je
jb
or
inc
rcr
xchg
xor
sbb
pop
int3
mov
or
or
push
mov
shlb
insb
mov
mov
add
add
stos
data16
out
hlt
int3
sbb
mov
adc
push
loope
nop
fcomps
iret
mov
or
xchg
push
scas
notb
cmc
push
sub
sahf
inc
aaa
cli
inc
sar
jne
hlt
cmc
fwait
add
mov
clc
mov
lds
icebp
aam
jo
int
or
push
clc
stos
scas
enter
mov
push
xchg
icebp
cmp
aas
push
push
ja
cs
or
or
mov
xchg
mov
loopne
imul
es
adc
lret
fmuls
jns
xchg
das
mov
sub
pop
inc
cmp
sbb
pop
fsubrp
inc
les
push
andl
test
popf
andb
push
popf
clc
dec
adc
dec
es
jno
adc
adc
sbb
adc
sub
mov
push
adc
or
int3
faddl
adc
aad
push
mov
or
mov
add
sbb
inc
jne
lock
enter
mov
inc
xchg
xchg
aas
sub
pop
lds
mov
mov
add
adc
fisttps
scas
jmp
jp
aad
orb
xchg
xlat
and
xlat
sbb
dec
inc
add
jo
sbb
imul
dec
cli
subb
or
adc
aad
mov
or
jno
aas
je
cwtl
lock
lock
pop
andb
ret
arpl
ss
xchg
inc
andb
cmp
out
inc
xchg
push
ja
sbb
mov
stos
or
jb
cwtl
inc
std
or
jge
pop
int3
xor
es
inc
lock
add
xchg
aam
lret
adc
subb
push
shl
clc
xor
jae
or
add
stc
mov
inc
sub
mov
sbb
add
rorl
aas
jne
lock
out
or
enter
push
mov
jne
add
inc
dec
and
leave
sbb
aas
mov
int
inc
loopne
lock
xor
pusha
inc
out
push
mov
push
xchg
pop
arpl
scas
lea
mov
inc
nop
or
dec
add
mov
jg
es
shll
aas
sub
xor
sub
shll
jo
sbb
add
pop
jge
add
in
mov
push
pop
xchg
inc
leave
push
int
xchg
or
subl
jg
and
or
pushf
shll
pop
xchg
clc
inc
pop
add
push
jnp
pop
mov
movsl
outsb
push
in
mov
jnp
jb
push
mov
cmpsl
lods
push
inc
cli
insl
add
sahf
pushf
mov
or
insb
in
pop
cmp
jge
pop
ljmp
push
movsb
pusha
xor
jmp
outsl
push
cmp
or
fcompl
stos
cltd
mov
es
adc
push
js
cld
das
push
cwtl
and
dec
je
cli
mov
outsl
push
push
ficoml
dec
dec
jne
and
mov
or
pushl
adc
push
and
pop
test
mov
dec
dec
enter
sti
call
ds
cwtl
and
or
cmpsl
test
cmp
ss
lea
call
sahf
xchg
pop
mov
mov
lods
pop
or
decb
pop
outsl
lods
popl
out
ret
hlt
and
fiadds
push
or
mov
push
les
or
imul
ss
lods
xchg
ficoml
jg
mov
movsb
ja
cld
fidivl
rcrb
push
popa
aam
pushf
ret
mov
subl
gs
clc
dec
xor
insl
je
mov
scas
cwtl
or
pushw
adc
xchg
stc
xchg
psrlw
fisubrs
push
xchg
fdivs
push
rcl
shlb
cmp
mov
enter
out
add
pop
roll
nop
sbb
pop
add
mov
loopne
out
rcr
sbb
fisubrs
mov
push
mov
popa
sbb
add
mov
sbb
mov
icebp
xchg
sbb
mov
push
jge
xlat
dec
lds
iret
jmp
push
pop
xor
lods
lea
rcrb
sub
data16
outsb
sub
sub
fwait
and
cmpb
insl
mov
sbb
in
pop
pop
mov
push
inc
ljmp
jle
add
inc
in
or
out
xor
data16
movsl
ret
jb
jnp
add
and
or
fstps
sar
push
ja
lahf
clc
sub
shll
mov
mov
test
js
jno
loop
mov
or
ljmp
pop
out
pop
push
sbb
pop
test
aad
push
in
sub
rorl
fidivrl
jo
mov
mov
popa
jne
sti
testb
icebp
enter
icebp
inc
jns
adc
jecxz
addb
mov
js
jg
xchg
inc
pop
mov
das
and
or
push
mov
fiaddl
lcall
mov
out
notb
popf
jl
test
pushf
call
je
add
cld
fwait
sub
or
fildl
insl
xchg
or
in
aaa
mov
mov
notb
mov
popf
int3
rorb
in
aam
mov
mov
aas
adc
cmp
dec
or
rorb
push
fistpl
int3
aaa
and
mov
cli
or
dec
xorl
xor
cmpsl
add
sub
ja
sti
xchg
jge
mov
in
insl
mov
mov
inc
mov
adc
push
int3
pop
add
xchg
jge
out
inc
mov
sub
sbb
dec
fists
ljmp
das
fildll
push
sbb
sub
sti
inc
inc
push
mov
scas
dec
push
sub
cmc
add
gs
fists
push
ret
cwtl
and
lock
aaa
mov
xorb
cmpsl
lcall
sub
push
jle
addr16
fdivrl
out
aaa
loopne
test
jae
dec
aam
lahf
shl
in
add
decl
push
add
jns
adc
jno
sbb
mov
add
add
or
iret
in
ret
mov
xor
repz
das
mov
test
test
pop
div
in
jle
test
xor
pushf
movsl
push
dec
mul
or
adc
cmpsb
imul
jmp
test
rcrb
jbe
in
adc
add
xchg
mov
inc
mov
outsl
mov
jb
arpl
psubw
cmp
sub
inc
inc
xchg
or
in
out
pop
jle
xchg
adc
idivl
sbb
mov
repnz
fimull
and
pop
push
push
mov
daa
xor
xchg
aaa
fidivrs
dec
xor
jo
jno
mov
lahf
mov
sbb
jle
sbb
inc
cmp
mov
arpl
es
sub
mov
sar
xchg
pusha
inc
das
ljmp
jp
mov
daa
and
push
mov
jnp
lds
add
xchg
ja
jg
ret
xchg
aad
and
push
mov
dec
imul
in
fisubrl
or
xchg
test
adc
popf
and
aaa
inc
add
add
lock
popf
shl
es
mov
jnp
cli
and
js
fcomip
mov
into
pop
mov
dec
xchg
cmp
outsb
jb
insl
mov
mov
das
stos
in
sbb
mov
cmp
sub
mov
in
dec
dec
xor
test
lods
adc
fimull
dec
fs
inc
sub
push
test
xlat
js
ja
jnp
in
loop
adc
sbb
jl
add
sub
mov
lret
xchg
jle
aaa
adc
dec
sbb
rcll
cs
fcomp
insb
daa
insl
jl
adc
push
cmpsl
or
and
icebp
call
pusha
shl
push
cmp
xchg
pop
xchg
les
mov
push
pop
xlat
sub
inc
jb
popa
inc
xlat
sbb
lods
pop
pusha
mov
js
lods
loopne
cmpsb
jle
decb
add
add
push
scas
ret
mov
sub
jmp
roll
test
jp
mov
icebp
ret
fdiv
or
push
sbb
loope
pop
nop
lea
int3
and
sub
adc
stos
lds
stc
add
stos
call
inc
pop
outsl
cltd
and
loopne
shl
rorl
outsl
jmp
adc
or
or
cltd
or
sub
push
icebp
ficompl
add
movsb
pop
repnz
dec
mov
adcb
and
add
lock
inc
lahf
adc
push
lret
aaa
add
fs
xor
adcb
push
xchg
dec
inc
push
aam
enter
jo
popf
xchg
test
push
pop
adc
inc
xor
cld
and
jmp
mov
push
jmp
mov
rolb
es
mov
nopl
cmpl
fmul
push
pop
aaa
add
xchg
leave
cmp
jl
or
ja
rcrb
sarb
adc
sub
xchg
add
cli
pop
or
add
lret
inc
and
xor
add
fs
xlat
adc
jae
cmpsb
dec
int3
adc
rorb
and
sub
xor
xchg
es
sbbb
lea
mov
cmpl
mov
in
and
pop
repnz
push
sbb
and
inc
inc
mov
adc
add
jne
pop
sub
iret
xor
insb
push
loopne
or
xor
in
cmp
imul
dec
push
xor
dec
push
test
testb
add
mov
sbb
mov
add
xchg
cmpsb
ljmp
xor
mov
push
xor
outsl
push
insb
add
xchg
ftst
and
outsb
and
imul
clc
jbe
stc
mov
clc
outsb
shl
out
jb
jbe
pop
push
xchg
insb
popa
mov
mov
das
addb
fucomip
cmp
frstor
stos
and
xor
mov
addr16
cmp
pop
or
ljmp
mov
rol
inc
adc
or
lea
lcall
mov
flds
hlt
sub
xor
call
or
pop
dec
leave
cmp
dec
shll
and
and
sub
mov
adc
sub
pop
pusha
cli
rcl
cli
jp
pushf
pop
cmp
mov
or
adc
mov
push
pop
scas
mov
notl
cmp
js
xor
push
jge
sbb
fdivrs
inc
fidivl
je
in
scas
inc
es
inc
xchg
push
gs
mov
cmpl
add
jnp
imul
xor
push
rorb
push
imul
push
je
shlb
and
inc
int
sub
out
push
lock
sbb
int3
mov
dec
and
sbb
sub
pop
mov
in
lods
inc
push
and
and
fldcw
fildl
hlt
dec
pop
jns
pushl
mov
js
sbb
cmp
std
mov
inc
mov
fldcw
xor
cs
push
ljmp
dec
add
and
push
stos
push
cmp
push
add
push
mov
push
adc
mov
rorl
xchg
add
xlat
leave
rorb
xchg
shlb
das
movsb
subb
arpl
add
aam
pop
and
sbb
add
data16
mov
lock
out
and
loopne
sarl
add
add
in
inc
add
xchg
movsl
adc
cmpsb
xchg
mov
sub
sbb
scas
add
pusha
pop
jmp
ret
pop
test
xchg
and
push
mov
cmp
jl
sub
inc
dec
lock
or
xchg
mov
jae
mov
push
inc
push
add
js
je
mov
add
dec
pop
fwait
or
gs
xchg
xchg
mov
mov
or
sbb
push
add
nop
and
sbb
xchg
inc
ret
jle
movsb
stos
rcrl
imul
shlb
and
pop
lock
mov
or
adc
add
xor
pusha
add
add
outsl
xchg
insb
daa
roll
pusha
and
loope
imul
push
adc
stos
xchg
mov
jmp
push
xchg
mov
inc
pop
xor
shr
das
pop
jg
dec
cwtl
or
sub
sub
rolb
sahf
pusha
dec
push
neg
enter
xlat
adc
push
mov
mov
or
xchg
movsl
adc
pop
or
test
cs
out
add
js
loope
or
das
add
or
dec
and
test
mov
cmp
or
add
ret
xlat
push
pushl
pop
loope
insl
sbb
add
inc
mov
mov
push
shrl
or
push
sar
add
aaa
subl
jb
rorb
cmp
inc
mov
and
test
dec
notl
sbb
push
jp
xchg
or
stos
sub
dec
and
dec
xor
mov
rorb
repnz
leave
aam
add
es
mov
and
movsb
xor
movb
and
mov
dec
pop
mov
das
call
dec
cld
inc
int3
mov
shll
pop
sbb
andb
inc
fsubrl
and
inc
lods
cwtl
adc
jge
dec
ss
inc
fstpt
cld
jae
orl
push
adc
clc
sbb
shlb
mov
add
call
or
cmp
jg
jl
mov
add
fwait
movl
test
and
lock
mov
sbb
jb
mov
js
stos
xchg
add
popa
mov
les
or
outsl
mov
jno
xlat
in
jae
or
outsb
fcmovnbe
ljmp
mov
add
jl
push
rcrl
insb
inc
add
xor
jnp
nop
popa
mov
xchg
loope
shll
mov
dec
popf
inc
and
push
mov
cmp
jbe
jne
xor
inc
incl
loop
loope
mov
add
bound
push
int3
mov
sarb
sub
push
jg
xor
adcb
ret
test
jecxz
mov
cmp
or
rol
pusha
or
and
push
push
and
xor
mov
cmp
out
out
pcmpeqw
mov
xchg
sbb
aas
jo
andnps
inc
movsb
xchg
add
cld
mov
sub
loopne
xchg
xor
sub
rcrb
xor
test
ja
fstpl
mov
xor
mov
lret
xchg
xchg
es
adc
addb
nop
sub
loop
mov
cmp
nop
add
sbb
cmp
add
or
neg
pop
add
xchg
cs
sbb
inc
inc
or
inc
dec
or
mov
jge
push
adc
xor
fcoms
out
pop
int
mov
ret
insb
insb
mov
push
mov
lock
inc
fldenv
shll
adc
inc
outsl
mov
ret
adc
fsubrs
cmp
int
mov
lock
and
push
add
fidivl
je
push
cld
cmp
dec
adc
or
add
and
incl
dec
lods
mov
sub
outsl
das
and
subb
sub
jmp
test
sub
adc
daa
in
fistps
mov
push
mov
aaa
repz
pop
and
mov
ss
ljmp
push
cmp
in
fbld
adc
add
inc
xor
shr
adc
adc
or
das
adc
add
pushf
xor
cli
insl
enter
xchg
xor
lock
fisttpl
jecxz
xchg
mov
dec
push
bound
pop
into
mov
cmp
adc
jg
scas
pop
add
jmp
cld
stc
lods
fistpll
add
cwtl
mov
lcall
outsl
das
hlt
jmp
add
xor
sbb
cwtl
mov
sti
sub
and
sbb
mov
mov
jae
loop
andb
test
sbbl
or
xchg
pop
mov
out
cmp
ds
mov
std
fildl
add
imul
sbb
mov
stos
lods
dec
dec
sti
nop
pop
inc
cmp
mov
call
lea
dec
sbb
sbb
mov
inc
test
ds
pop
not
inc
call
js
push
xorb
and
cli
das
sub
popa
mov
enter
mov
dec
sbb
jg
lods
xor
adc
aaa
push
and
xor
fs
xchg
add
mov
sarl
push
pop
adc
enter
mov
push
lea
daa
adc
adc
or
adc
xor
inc
enter
int3
js
hlt
inc
test
adc
adc
or
out
hlt
and
xor
or
cltd
mov
shlb
aam
cmp
adc
and
loopne
pusha
and
push
inc
xlat
subl
fidivs
jb
andl
cli
movsl
sub
ss
and
adc
punpckhbw
cmp
or
and
mov
mov
fsubrl
ret
js
xchg
mov
add
fs
cs
or
aam
jl
cmp
test
or
roll
fisubl
mov
js
push
cwtl
lock
testb
fidivrl
mov
and
xor
ja
ret
pop
dec
clc
sbbl
orb
add
mov
sahf
xchg
jo
cmp
mov
inc
cmpsb
xchg
inc
loopne
xchg
xchg
adcb
movsb
mov
inc
pop
cmp
fsubr
andb
pop
dec
xchg
shll
and
jo
iret
mov
mov
mov
sub
inc
in
mov
xor
into
jp
mov
lret
outsb
sbb
add
and
jnp
or
aas
dec
movsb
bound
mov
sub
xlat
stos
push
lds
mov
lock
inc
push
lcall
jl
pop
pusha
loopne
cli
fsubr
inc
out
pop
sbb
sub
clc
xchg
rcll
test
subb
sub
xchg
adc
addb
inc
adc
push
fldl
jle
inc
adc
lret
inc
inc
or
mulb
in
mov
call
dec
jg
add
jl
fcmovnu
push
mov
dec
test
mov
push
inc
shr
rcrl
sbb
stos
ficoml
lods
jnp
fadds
cmp
sbbl
ret
cmp
xchg
xchg
inc
les
push
test
rcr
test
in
push
lcall
leave
sbb
cmp
pop
in
and
inc
push
fstps
jmp
pop
adc
cmp
mov
aam
inc
xor
ret
nop
sbb
in
xor
or
cmpl
ret
jl
push
clc
bound
lcall
out
cmp
adc
jg
fdivr
test
mov
out
xor
clc
lea
adc
imul
out
add
addr16
das
lock
movhps
shll
cwtl
adc
xchg
pop
dec
andb
and
mov
inc
shrl
lret
test
xor
sbb
notl
repnz
rclb
inc
outsl
cmp
out
inc
pop
fisttpll
adc
mov
popf
add
cltd
mov
mov
xor
mov
add
ljmp
loop
sub
popa
jl
scas
cmpsb
adc
sbb
mov
cli
add
or
call
gs
ljmp
stc
dec
dec
or
push
xchg
pop
sub
adc
aas
std
and
cltd
push
inc
outsb
pop
xor
xor
idivb
sbb
adc
xor
std
sub
or
js
mov
mov
sub
imull
adc
mov
ret
movb
scas
and
cmpsl
adc
push
push
jl
dec
adc
add
mov
js
aam
rcll
dec
jecxz
pop
jbe
fcompl
sub
sbb
push
pop
add
inc
push
ja
pop
in
mov
lods
pop
pop
or
inc
movsb
sub
je
roll
add
or
aam
xchg
sub
insb
pop
mov
lock
fdivrs
adc
orl
add
fisubl
test
push
leave
fsubrl
insb
icebp
inc
pop
dec
jbe
push
sbb
mov
insb
ret
movsl
cmc
adc
or
mov
pop
mov
mov
add
or
push
xchg
jns
icebp
mov
jge
test
or
sbb
adc
push
cmp
fstpl
sub
sbb
insl
inc
and
add
mov
sbb
fucom
ljmp
sbb
or
pop
ret
mov
xor
das
dec
jecxz
jmp
push
dec
adc
mov
inc
sub
insb
and
data16
add
jno
cld
outsl
loop
shrl
inc
or
xor
insb
loopne
les
rcl
and
mov
lods
call
sub
ds
fnstcw
add
jg
mov
mov
xor
test
sbb
pop
push
loope
cmpsl
fiaddl
pushl
test
hlt
and
inc
insb
jg
cmp
addr16
pop
pop
cmp
pop
or
pop
sti
sbb
pop
dec
and
lea
and
xor
sarl
loope
clc
test
and
dec
mov
aam
jecxz
mov
mov
test
ficomps
push
das
jae
and
test
and
dec
cs
nop
adc
mov
popa
fnstenv
or
push
add
xor
lea
push
leave
shll
outsl
icebp
or
mov
rcrl
jge
rcrb
jecxz
sbb
jno
rcll
insb
jb
fucomi
fbld
inc
dec
pusha
es
xor
lret
insl
fildll
test
std
and
ret
sub
rcr
lock
push
mov
lock
or
add
mov
cmp
sub
out
jecxz
jg
stos
and
mov
movsb
insb
insb
or
inc
sub
adc
fstpt
pusha
dec
je
mov
cmp
xor
std
push
std
pusha
call
sbb
popf
cwtl
push
jae
or
sub
cmpsb
icebp
add
fisttpl
pop
out
fcompl
xchg
or
rcll
test
xchg
or
xor
movsb
jno
adc
fimuls
movsb
or
sbbb
dec
pop
test
sbb
scas
ja
mov
idivl
push
sti
mov
mov
push
aas
cmc
sub
movsb
lods
pop
inc
fistl
addl
pop
lret
xor
call
lahf
xorl
out
addr16
and
nop
cld
mov
rclb
mov
add
jbe
inc
cmc
mov
and
lds
inc
out
sub
nop
sbb
push
stos
push
out
cmp
xor
and
sub
push
xor
out
outsl
or
add
int
sbb
ret
fadd
ret
cmp
faddl
jl
xlat
int
jae
and
xor
pop
int
inc
cmp
notb
mov
inc
adc
sbb
and
sbb
pusha
lods
xor
mov
icebp
out
fmull
push
shll
sbb
push
push
loopne
add
lds
dec
les
int
add
into
int3
cld
mov
mov
jne
jmp
clc
xor
inc
loopne
adcb
cmp
xor
in
popf
addr16
cmp
push
imul
movsb
and
inc
pop
add
mov
push
adc
pop
jno
mov
fimull
dec
xchg
jmp
add
xor
das
clc
xor
xor
or
mov
mov
xorl
or
and
mov
xor
sbb
lods
inc
dec
sbb
mov
add
add
add
adc
shll
push
pop
mov
pop
jmp
sub
add
loopne
mov
xchg
adcb
daa
sbb
mov
cmp
adc
adc
xor
test
nop
jecxz
faddl
or
sahf
mov
ss
jbe
mov
lea
adc
adc
or
inc
adc
sub
cmc
jmp
mov
loop
push
aaa
mov
lret
push
roll
sbb
test
hlt
or
sub
call
xchg
adc
call
cmc
aam
bnd
lods
inc
pushf
adc
loopne
adc
mov
les
mov
adc
std
pusha
outsl
xchg
js
cmpsb
aam
cld
mov
dec
sti
pusha
add
push
call
sbb
adc
inc
inc
nop
test
and
and
add
dec
xor
sti
insl
popf
test
mov
push
mov
lock
dec
push
cmp
cwtl
lea
lcall
loopne
out
lahf
or
cmp
jne
les
mov
orb
int3
rorl
cmp
push
mov
push
imul
sbb
mov
dec
pop
jae
shll
push
cmp
dec
xchg
iret
movsb
adcb
stc
sbb
fiaddl
cmp
adc
push
decb
orl
les
int3
icebp
jmp
jecxz
xchg
imulb
inc
cs
clc
cmp
and
cli
sub
aaa
cmp
cmp
or
lcall
or
arpl
jae
or
push
aas
push
int3
rolb
and
daa
jp
je
jae
push
test
int
hlt
loope
inc
out
inc
xor
or
xchg
add
movl
dec
sub
mov
lret
add
sub
xchg
mov
loopne
or
movsb
pop
repz
inc
hlt
pop
ret
sbb
and
mov
pop
jmp
mov
mov
ss
shrb
lock
adcb
mov
mov
popa
mov
or
pop
xchg
imul
or
pusha
jne
pop
sub
xor
and
adc
add
mov
push
lds
outsb
dec
lahf
sahf
adc
pop
lods
add
and
dec
add
test
xor
sbb
or
nop
inc
or
xchg
inc
add
pusha
ret
push
or
sbb
push
cmp
iret
aaa
loope
mov
rcrl
les
xlat
add
dec
fsubrp
fisttpll
mov
or
add
out
mull
sbb
inc
push
addr16
push
cltd
dec
sti
and
add
xchg
sbb
inc
stos
hlt
loop
int
mov
aas
adc
add
jo
subl
ljmp
std
les
sbb
clc
lods
push
push
hlt
and
out
push
adc
test
mov
into
stos
loopne
gs
mov
andnps
xchg
adc
mov
es
scas
dec
mov
mov
or
lcall
enter
fadd
mov
sub
inc
int
repz
cmp
mov
ljmp
fldl2t
add
sarb
mov
jnp
pop
and
popf
clc
xchg
xor
pop
rcrb
lods
mov
add
xchg
data16
mov
add
mov
out
sub
or
pop
push
mov
add
loopne
inc
pop
mov
adc
ret
add
mov
inc
data16
addb
into
nop
add
adc
inc
jnp
lahf
add
cwtl
xor
push
out
adc
int3
or
mov
inc
jne
mov
pusha
and
pusha
cmp
aas
inc
jmp
pushf
mov
mov
in
push
xchg
rorb
inc
add
mov
popa
and
and
lcall
lods
push
push
orb
push
adc
push
mov
inc
std
fcomi
jp
ss
mov
inc
push
out
pop
je
add
inc
mov
mov
dec
lahf
ret
adc
ret
bound
dec
gs
xlat
cmpsl
dec
addr16
sbb
rcrl
dec
xchg
mov
out
addr16
cmp
xchg
xchg
sub
inc
repz
dec
pop
inc
add
idiv
adc
outsl
sbbb
insl
jmp
jns
push
mov
out
lds
push
push
dec
decl
fldt
or
dec
dec
add
mov
and
cmp
sub
adc
fdivr
out
mov
bound
mov
aam
sbb
xchg
out
sti
mov
push
xchg
jge
jle
pushf
xor
xchg
setns
fsubrl
jg
sub
xor
jbe
test
por
push
xor
outsb
or
stos
jo
cltd
add
jmp
fildll
fldcw
test
pop
add
inc
insb
lret
push
stos
cmp
ljmp
pop
inc
mov
or
inc
lret
push
arpl
pop
xchg
or
je
es
sti
jg
add
push
push
pop
jbe
movsb
shll
shl
sbb
insl
loopne
adc
add
xchg
lret
and
pop
loopne
sbb
push
repnz
repnz
ja
stos
loop
cli
test
mov
sar
in
add
shll
push
or
jnp
sbb
std
dec
scas
xchg
dec
aam
daa
sti
es
xchg
and
mov
lods
insl
and
rep
adc
movl
imul
imul
mov
ljmp
sbb
xor
jmp
jg
and
clc
fstl
sar
pusha
jl
fwait
inc
dec
sub
je
mov
mov
cmp
mov
mov
das
cmp
incl
add
adcb
dec
xorl
mov
pop
loop
and
jno
shlb
fwait
pop
sub
sub
inc
xor
add
rolb
xor
or
add
orb
or
jmp
leave
adc
popa
push
jmp
sbb
shlb
fnsave
loopne
mov
dec
cmp
pop
orl
and
leave
dec
movsb
sub
lock
lods
pop
inc
cmp
push
xor
arpl
les
pop
pop
enter
cs
jmp
bound
insb
jmp
jo
sub
enter
loop
sub
addl
ret
sbb
stos
add
adc
xor
call
sbb
and
cltd
mov
cmpsb
xor
and
inc
inc
stos
pop
sbb
outsl
rclb
push
xor
inc
scas
jmp
mov
mov
adc
pusha
inc
rcrb
call
pop
call
enter
dec
rolb
js
xlat
popf
adc
xchg
mov
sbb
xchg
out
pop
sbb
sti
mov
jl
and
repnz
cmp
and
jae
mov
mov
test
and
int3
call
cmp
push
adc
icebp
lea
and
fsubrs
or
scas
push
inc
and
jnp
lds
loope
es
and
mov
and
fists
popf
in
adc
and
push
ret
sub
in
das
clc
or
jno
imul
cld
out
add
xor
inc
push
hlt
fists
mov
mov
xor
stos
add
push
adc
jbe
and
addr16
sbb
shl
pushf
and
and
add
add
or
cmc
pop
icebp
pop
inc
xor
cmp
cmp
adc
sub
push
xchg
addb
or
xor
jg
outsb
xor
xchg
or
sbb
and
pusha
rorl
mov
inc
mov
xchg
inc
iret
lret
mov
push
insb
andl
fstp
cs
in
add
add
jecxz
jne
sbb
cmp
sarl
ja
es
mov
cmp
subl
push
and
mov
jmp
cmp
ja
xchg
sbb
mov
mov
clc
jecxz
push
lock
fsubr
dec
mov
cmp
dec
mov
aaa
loopne
or
or
sub
adc
fidivrs
mov
faddl
stos
push
loopne
add
push
sub
or
push
insb
dec
aam
dec
add
mov
mov
lock
in
adc
adc
movl
lcall
into
lods
dec
sbbl
shlb
lret
je
mov
mov
test
inc
mov
or
dec
push
add
ljmp
and
add
rorb
in
sarl
sbb
pop
lea
mov
dec
aam
aam
popl
add
push
dec
inc
orl
aaa
sar
test
in
jecxz
pop
lods
mov
mov
dec
xor
jg
cmp
adc
xor
and
pushf
sub
push
sub
pop
mov
outsl
lock
cmpsl
test
movsb
dec
mov
test
jge
add
push
mov
fcomps
sub
mov
aad
mov
jns
push
sub
push
add
xor
movsl
int3
mov
and
call
push
dec
mov
iret
add
faddl
jbe
jle
inc
xchg
pop
xor
lods
repnz
xor
stos
rcrl
inc
loopne
ss
outsl
loop
cs
pusha
inc
xor
mov
pop
test
incl
outsw
push
xor
pop
mov
xorl
or
push
and
stos
leave
andb
push
mov
out
push
push
xor
inc
subl
mov
fs
out
jnp
add
ret
sbb
inc
and
sbb
ror
pop
push
call
fidivs
push
dec
daa
xchg
xchg
test
inc
mov
sub
pop
test
dec
inc
scas
fnstenv
ja
or
fwait
clc
mov
mov
mov
call
push
je
and
hlt
test
jg
inc
xchg
flds
inc
mov
pop
and
test
adc
mov
jo
xchg
std
jge
enter
lods
fstps
fsubp
test
pop
push
mov
cld
sub
or
scas
adc
popl
loope
sbb
or
cmpsb
lods
adc
addr16
insl
lcall
add
and
sub
inc
inc
mov
cltd
lds
sub
stos
add
pop
inc
fcos
push
sub
xlat
inc
sarl
or
nop
sub
outsb
les
sub
outsl
fwait
mov
imul
dec
test
adc
dec
popf
cmpsl
inc
in
ja
jg
mov
inc
arpl
cmpsl
aas
je
test
pop
jle
sub
xchg
out
mov
cltd
pop
mov
or
xchg
push
enter
add
lahf
xchg
push
or
lea
inc
test
inc
pop
add
rclb
or
lds
out
stos
aaa
hlt
shll
and
jbe
outsb
mov
and
std
dec
cld
hlt
or
push
jg
test
repz
mov
or
mov
add
push
inc
sbb
and
std
mov
inc
xchg
rol
push
adc
mov
pop
inc
lret
test
test
iret
loope
mov
xor
fs
movsb
mov
negb
xor
fmulp
cld
jecxz
dec
push
ss
jnp
mov
or
mov
cmpsl
sbb
add
lea
mov
and
in
xchg
inc
aaa
and
push
out
fs
fildl
dec
inc
lret
leave
mov
or
frstor
out
sub
mov
mov
push
mov
adc
or
jo
xchg
popa
mov
jle
mov
lahf
add
js
fldenv
and
in
pop
test
lret
subl
js
add
cmpsb
sbb
sub
mov
inc
faddl
jae
add
test
fsts
int3
aaa
pop
sub
mov
aaa
sub
xor
jl
gs
mov
in
ret
push
addl
xchg
jg
sub
movsb
int3
mov
mov
dec
push
add
xchg
adcb
jae
daa
add
outsb
hlt
mov
add
insl
jbe
cli
xor
dec
pop
xor
movsl
es
fisubrl
add
fwait
jns
rcrl
ret
gs
fdivs
lcall
sub
clc
icebp
out
xor
and
sub
ljmp
xor
mov
push
lods
and
push
popf
sub
pop
sbb
push
das
aad
out
and
subl
sbb
mov
mov
cmp
sbbb
outsb
fistps
inc
test
aam
cs
insb
pop
pop
xchg
adc
stc
je
pushf
js
insl
mov
and
adc
jbe
push
js
icebp
adc
lods
xor
xchg
or
ret
cwtl
out
movsl
bound
dec
xchg
out
mov
call
cld
stos
cld
jp
mov
das
aam
xor
cmpsl
mov
dec
pushl
out
cmp
push
pushf
cmc
mov
test
dec
jmp
and
jg
or
adc
stos
pop
lods
stos
jns
jne
mov
cmp
outsb
xchg
xlat
add
mov
xor
hlt
sub
push
sbb
shr
dec
jge
xchg
fldl
push
push
js
push
xor
mov
out
sbb
in
or
jae
pop
sub
jo
push
out
adc
sub
fisttps
out
pusha
test
jmp
inc
xor
les
shl
jns
les
dec
jle
fsubr
js
daa
xor
add
outsb
mov
push
std
filds
push
shl
lahf
mov
pop
pop
sbb
repnz
pusha
ret
test
push
mov
fisttps
inc
shr
mov
outsb
fs
test
dec
fnstenv
stos
sbb
pop
in
ljmp
and
inc
sti
jg
lods
and
mov
mov
cmpsb
push
mov
mov
rorb
dec
mov
xor
cmc
push
imul
shlb
cmp
add
sub
iret
out
das
mov
pop
std
jecxz
outsl
testb
subb
arpl
outsl
aam
lods
xor
mov
mov
sub
pop
andb
in
jg
cmp
inc
xchg
repz
jno
pop
sbbb
cmp
mov
test
pop
daa
dec
cwtl
cld
cwtl
cltd
push
imull
inc
cmc
jbe
jns
movsl
add
pop
stc
decl
push
add
and
xchg
mov
inc
loopne
call
and
inc
or
add
mov
or
cs
inc
cmp
insb
leave
es
or
fsts
mov
sbb
push
adc
xor
lcall
jmp
inc
add
mov
mov
repz
jne
mov
add
in
call
fiaddl
adc
push
fcoml
lret
test
inc
xor
mov
mov
out
add
cmp
mov
dec
cmp
rorb
cmp
xor
repnz
mov
sbb
mov
call
scas
jl
jbe
jno
jmp
rclb
jne
divl
sbb
adc
fimuls
dec
inc
xorb
enter
pop
inc
popa
sbb
jg
cld
mov
push
push
cld
neg
and
jmp
fisubrs
imul
inc
add
test
jg
pop
adc
loopne
jne
add
mov
fimuls
or
divl
rcr
out
call
in
mov
and
mov
not
sbb
rcll
lret
add
and
add
sub
outsl
mov
in
loope
sub
out
orb
pop
pop
mov
jne
not
les
lods
mov
adc
not
mov
movsb
fdiv
rorb
jge
pop
mov
xor
int
add
sbb
mov
insl
pop
loopne
inc
add
push
push
fimull
mov
scas
std
or
dec
sbb
sti
xchg
mov
outsl
imul
cmp
and
fisubrl
adc
inc
push
mov
push
fcoml
icebp
psubsb
clc
mov
xchg
xor
fldenv
sbb
and
nop
xor
loop
sub
loopne
inc
push
sahf
sti
es
push
jmp
mov
std
jo
fldcw
and
and
out
pop
or
fsubl
mov
mov
or
repz
popf
jp
add
subb
push
shl
mov
out
fucomip
sbb
jge
out
sbb
adc
jno
ds
roll
outsb
aaa
mov
sbb
inc
dec
mov
jne
cld
sbb
adc
ret
mov
sbb
or
scas
and
cmp
jnp
adcl
add
xor
ss
sbb
pop
ret
pop
push
ds
shlb
mov
adc
cmp
neg
loope
lahf
mov
dec
in
push
add
pop
cli
out
loopne
or
jne
call
clc
ljmp
jbe
adc
mov
or
arpl
add
jbe
adc
push
clc
sbb
push
pop
fisubl
clc
and
and
xor
bound
mov
rorb
stc
ret
leave
ret
int3
shr
push
and
in
aaa
andb
aam
pop
cmp
scas
xor
out
lock
cld
xor
mov
sbb
pushf
in
adc
add
mov
sti
and
add
and
cmp
in
xor
rclb
cmpsb
insl
insl
ljmp
mov
adcb
test
mov
xor
fdivrl
sbb
jmp
add
ret
pop
out
adc
jmp
sbb
xor
inc
adc
cs
xor
rorl
mov
lret
dec
fbld
nop
test
popf
sbb
mov
push
shlb
add
mov
daa
xchg
xor
and
frstor
fbstp
rep
jb
jae
in
and
fsub
in
addl
shll
es
fsubs
je
mov
lock
aaa
or
test
shlb
call
cmp
ja
popa
dec
dec
pop
lcall
gs
inc
and
xor
add
cmp
je
xor
cmp
pop
pop
ljmp
dec
and
push
popa
jmp
add
lret
negb
test
mov
xor
xor
lret
aam
hlt
jle
jne
adc
lcall
in
out
ret
xorl
dec
inc
and
stos
fs
xchg
cmp
xchg
jne
fwait
mov
dec
lcall
fwait
pop
inc
clc
push
push
inc
fdivp
and
xchg
mov
inc
add
cmp
shl
fadds
shr
add
push
xor
test
inc
mov
rcrb
xchg
inc
nop
xor
fsubs
inc
mov
pusha
divb
xor
loopne
mov
and
popa
xchg
les
xchg
ret
and
insl
xchg
mov
lret
popa
cmp
fs
js
or
pop
ficompl
out
repnz
add
inc
mov
int
je
notb
mov
fsubl
fimull
movsb
adc
xchg
jnp
dec
inc
int
lret
xor
in
sbb
dec
outsb
mov
iret
mov
lea
and
jecxz
and
inc
mov
pop
sub
push
iret
cmp
sub
sbb
ja
jnp
xor
rcrl
scas
lock
pop
add
xor
sbbl
adc
outsb
mov
xor
mov
add
rcr
aaa
mov
daa
jbe
cmp
lds
cmp
mov
out
je
test
mov
xor
xchg
add
lock
xlat
orl
jnp
jbe
dec
pusha
out
or
dec
fdivrl
pop
xchg
clc
insb
mov
daa
je
loopne
iret
ret
loopne
das
xchg
jnp
xor
roll
imul
test
sbb
aaa
or
jge
cs
push
andl
fwait
xor
cltd
ret
aam
jmp
stc
dec
mov
mov
add
rcrb
cmp
stc
or
jp
insb
mov
stc
push
xchg
dec
inc
test
xchg
pop
test
and
stos
popa
int3
les
pusha
testl
and
sub
xchg
mov
add
testl
lock
pop
add
and
scas
fnsave
pop
pop
insb
lock
xor
cmpl
fldl
sbb
lods
rcll
pop
inc
loopne
or
sbb
dec
xor
call
mov
js
xchg
sbb
pushf
into
aam
imul
mov
add
push
arpl
ss
lret
call
in
mov
cli
jle
jmp
ret
or
xchg
or
arpl
jae
xor
jae
stos
icebp
sub
ja
fisubl
dec
aad
jmp
dec
loope
push
jg
push
push
push
ljmp
sbb
dec
leave
insl
fs
push
bound
pop
aam
mov
pop
mov
iret
nop
sub
cmp
cmp
xor
inc
push
mov
mov
add
dec
lock
add
sahf
aam
and
idivl
imul
fbstp
adc
out
xchg
cmp
sbbl
aam
in
cli
dec
aam
mov
mov
in
shll
ljmp
inc
insb
jno
fists
dec
incb
add
jl
sbb
adc
add
jmp
fmuls
sub
add
sub
loopne
das
mov
pop
or
xor
inc
decl
cmpl
mov
push
jbe
aam
or
repnz
mov
and
dec
dec
push
loop
mov
cltd
xchg
add
add
or
fadds
fidivrs
or
sub
popf
mov
adc
sub
mov
fcoml
dec
or
sbb
sbb
aaa
ret
leave
and
roll
jno
xchg
std
xchg
add
rolb
stc
add
mov
add
pop
and
mov
sti
or
jae
xor
cmp
in
call
sahf
add
sbb
ds
ret
jnp
xor
popf
cwtl
std
or
and
mov
insb
in
mov
pop
push
sub
adc
push
std
and
inc
add
mov
add
sbb
aas
add
pop
les
mov
jg
push
js
add
push
inc
dec
pushf
dec
add
mov
jg
dec
add
adc
nop
sbb
arpl
cmp
testb
add
mov
xorb
aas
mov
add
dec
test
inc
add
xor
push
andb
xlat
aad
and
add
mov
push
xor
add
insb
in
fnstsw
out
push
loop
push
and
loopne
das
fisttpl
into
icebp
lods
push
jno
inc
hlt
fdivs
add
pop
mov
add
sub
in
push
sub
and
fidivl
sahf
es
fsub
outsl
mov
mov
and
dec
mov
jns
mov
mov
imul
imul
loop
jmp
pop
int
rcll
ret
push
ja
imul
cmp
xor
push
add
jbe
add
inc
aam
add
lods
out
pop
sbb
add
negb
insl
js
mov
mov
inc
jnp
sbb
xlat
in
cmc
in
fisubrs
xor
scas
test
pop
fdivr
or
lea
push
cmc
mov
imul
or
out
jbe
mov
test
inc
adc
cs
mov
test
ljmp
sbb
jg
adc
sbb
jecxz
or
mov
fwait
mov
dec
das
mov
adcl
push
sbb
or
xor
jne
fidivrs
and
jmp
pop
inc
cmp
insl
sti
mov
repz
outsb
jo
sbb
ljmp
hlt
in
mov
mov
add
push
and
push
sub
inc
sbb
mov
rolb
adcl
jo
mov
mov
add
repz
jp
rcll
test
jl,pn
loopne
cltd
xor
in
add
es
mov
inc
sarl
mov
lods
mov
cmp
push
js
sbb
enter
add
stc
mov
call
test
inc
cltd
add
stc
mov
js
outsl
add
jle
testl
js
push
fidivl
int3
or
add
jle
jg
mov
add
popf
or
add
fucomi
enter
ss
adc
dec
ja
and
mov
fcomps
dec
add
aad
add
add
add
repz
adc
push
sar
adc
and
out
add
sbb
xor
imul
adc
jmp
adc
mov
xorb
sbb
mov
lock
cmp
loopne
lods
into
mov
cld
mov
add
jmp
neg
testb
ss
sbb
and
subl
movsl
adc
xchg
rclb
into
cld
mov
mov
sub
xlat
int3
mov
mov
inc
or
sub
jae
add
mov
mov
cld
inc
and
sbb
repnz
pop
cli
pop
mov
dec
xor
rorb
and
in
sub
dec
push
sbb
daa
mov
scas
xorb
insl
hlt
xchg
dec
cmp
roll
in
data16
js
ja
scas
inc
xor
xor
negl
add
fdivl
mov
cltd
bound
xchg
mov
shll
dec
sub
mov
movsb
mov
push
sub
testb
sbb
mov
addr16
jp
push
and
pop
pushf
mov
in
add
lock
add
lods
adc
lock
pop
into
mov
test
inc
dec
or
fmull
ret
cmpsl
jle
adc
adc
or
mov
cmp
sbb
push
mov
out
imul
add
or
aaa
jb
stc
arpl
inc
cmp
and
sub
and
fistps
or
adc
pop
call
sbb
lea
inc
fadds
sbb
push
pushf
in
or
and
ret
adc
xor
stos
js
adc
dec
bound
mov
mov
xor
addb
loopne
jp
ljmp
xor
mov
add
xchg
xor
mov
jno
and
lds
es
mov
inc
inc
jne
in
add
aas
mov
adc
lods
inc
jecxz
loope
lods
mov
add
shrl
mov
add
leave
in
mov
rclb
stc
fldl
lret
inc
mov
enter
hlt
add
movsl
xor
or
jmp
xor
shl
ror
rorl
push
orb
movsl
push
pextrw
push
shlb
pop
call
lcall
loopne
jp
aad
sub
call
jle
sbb
sbb
push
lock
push
inc
add
adc
test
mov
sarb
shl
pop
cmp
clc
jmp
xchg
adc
jne
sbb
dec
cmp
mov
or
insl
cmovo
mov
xchg
inc
or
mov
inc
cwtl
and
sub
mov
sub
sub
ret
rolb
and
mov
push
movsb
sbb
repz
cmp
fldenv
adc
pop
jle
dec
sbb
rorl
and
rcrb
dec
pop
jecxz
add
aaa
xchg
xchg
fcomp
xor
push
mov
mov
inc
stc
mov
jbe
mov
cld
sub
fidivrl
les
add
popf
push
adc
inc
out
adc
mov
fdivrs
mov
scas
mov
sbb
sub
lret
cmp
dec
sbb
mov
lods
sbb
xchg
or
and
mov
fidivs
push
adcb
inc
adc
mov
add
push
inc
xchg
addr16
add
jae
push
cld
ljmp
xor
jecxz
xlat
test
or
mov
mov
jecxz
mov
mov
mov
int
adc
adc
xor
clc
shlb
sahf
dec
add
lock
or
popf
jae
push
push
mov
add
test
das
cltd
sub
out
dec
lcall
les
hlt
je
add
out
data16
andb
fidivrs
jo
leave
jge
fmuls
out
add
add
add
and
or
hlt
dec
cmpsb
jae
or
dec
mov
bound
add
mov
lea
sar
push
push
cmpsl
mov
lds
shrl
jge
xchg
nop
mov
or
rorb
jle
xor
jb
jmp
pop
test
mov
int3
mov
lret
aas
mov
cs
loope
push
add
sahf
xor
inc
dec
add
cli
icebp
mov
jno
lret
fiadds
incb
cmp
imul
pop
es
aaa
push
mov
adc
xchg
xor
mov
aas
pop
push
push
test
aam
rclb
bnd
add
cmp
adc
loopne
cmp
dec
imul
mov
adc
or
fistps
pop
pusha
inc
push
and
mov
add
pop
cmp
cmp
and
in
and
or
insb
add
add
cmpb
inc
test
add
sbb
cmp
nop
dec
arpl
sbb
add
clc
iret
repz
lods
jg
or
sub
jg
cmp
dec
or
adc
pop
test
insb
imul
mov
sub
fwait
add
sub
outsl
push
push
add
sub
idivb
lods
je
and
rol
sahf
mov
and
enter
mov
xor
popf
or
mov
adc
mov
stc
dec
cmc
insl
mov
in
and
int
mov
imul
outsb
adc
push
mov
inc
arpl
adc
xor
loope
adc
push
sti
push
out
test
or
xchg
push
push
inc
shlb
mov
lods
mov
das
insb
rorb
das
add
in
mov
jg
outsb
popf
push
lock
adc
addb
sub
cmp
nop
add
jno
sbb
aas
or
add
add
add
inc
pop
incl
aam
ret
lods
cltd
adc
inc
jnp
ret
jecxz
or
sub
repz
loope
jle
cltd
adc
lcall
xor
divb
jp
sub
out
shrl
fstl
and
shrb
inc
bnd
and
pusha
jle
xor
pop
cmp
jecxz
dec
nop
cmpsb
mov
loopne
mov
lock
sbb
dec
loopne
mov
pusha
or
ffreep
push
nop
fs
sbb
movsb
sbb
push
xlat
repnz
or
lock
int
push
pop
cli
roll
push
mov
cmp
pop
lock
mov
inc
xchg
inc
xor
dec
mov
and
push
imul
xor
adc
adc
and
mov
pop
daa
push
cmp
jp
call
adc
add
push
cmp
rorb
pop
lods
bound
aad
xor
ret
xor
pop
cmp
or
mov
or
int3
adc
pop
and
cs
sub
scas
loope
pop
lock
and
imul
mov
sub
add
nop
and
std
mov
lock
adc
xor
mov
add
movb
push
and
sti
test
jnp
add
sahf
or
xor
lret
fsubl
mov
sub
fisttpl
or
outsl
call
mov
adc
adc
hlt
adc
mov
jnp
call
adc
xor
les
or
pop
and
or
inc
sti
clc
or
loope
xchg
sub
orl
pop
test
jg
stc
sub
ret
dec
hlt
out
add
pusha
adc
imul
mov
push
out
mov
mov
sbb
arpl
push
int
push
fsts
inc
in
sbbb
lret
cmp
scas
xor
sbb
sbb
js
lcall
aaa
fs
mov
shrl
or
jp
and
cmp
mov
and
jae
dec
jmp
cmp
call
mov
sub
or
add
loop
inc
dec
cmc
loopne
aam
lea
push
adc
cmp
mov
fbld
mov
fcomi
or
inc
and
dec
std
stos
push
push
and
add
xor
out
sub
xchg
scas
push
mov
popa
and
js
cmp
mov
lahf
xchg
dec
sub
add
xlat
and
or
add
mov
test
test
popa
in
in
push
mov
cmp
clc
mov
xchg
sbb
mov
lock
imul
jmp
xchg
push
dec
lods
mov
cmp
add
leave
icebp
mov
cld
es
add
jb
popa
or
mov
mov
sub
sub
add
add
in
inc
inc
leave
mov
add
dec
push
add
sarb
xorb
mov
and
movsl
in
cmp
sbb
fistps
ret
in
mov
or
jge
add
pop
dec
cmp
and
js
in
sub
or
push
xlat
cmp
push
incl
outsl
jae
xchg
sbb
data16
xchg
and
in
popf
loope
adc
scas
iret
dec
orb
popf
pop
jl
clc
mov
mov
mov
add
aas
lods
sub
mov
mov
std
fistps
stc
adc
jo
jp
imul
inc
pop
ret
es
cli
nop
mov
insl
mov
lods
shr
in
xchg
inc
subb
or
add
or
into
jp
popf
in
xchg
or
cs
decb
lds
mov
xor
enter
call
xorl
or
push
mov
int
sub
sbb
xchg
jecxz
outsl
mov
jo
xor
and
repz
or
fwait
clc
repnz
sub
inc
jne
adc
shl
mov
outsl
cld
mov
jp
push
ja
sub
in
adc
mov
xor
mov
or
mov
insl
ljmp
mov
cmp
sub
pop
mov
inc
arpl
xchg
imul
jmp
xor
fistpl
mov
push
push
sahf
jbe
jg
orb
loopne
outsl
cwtl
xor
pop
pop
js
ret
aas
adc
outsl
les
dec
mov
insb
adc
test
cli
stc
inc
outsl
adc
jb
adc
dec
sbb
cld
mov
xor
mov
xchg
add
fcoms
iret
ds
mov
mov
add
sub
mov
push
cld
outsl
cmc
inc
insl
cmpsb
fs
mov
push
scas
bound
imul
inc
push
andb
pop
cmpsb
pushf
adc
mov
daa
nop
clc
or
arpl
mov
mov
movsb
adc
scas
pop
and
insl
repz
jne
pusha
cmp
mov
stc
aaa
add
inc
pop
mov
and
fiadds
dec
nop
mov
js
add
aaa
push
insl
inc
mov
lret
in
pushf
and
xchg
xor
add
movsl
mov
cmp
push
jno
dec
xchg
loop
add
dec
mov
sub
das
les
insb
ret
sbb
inc
sti
mov
fsubrl
addb
mov
mov
clc
lret
aad
arpl
jno
add
dec
adcl
or
dec
les
js
pop
in
stc
negb
xchg
sbb
and
add
dec
mov
loop
xchg
mov
imul
inc
inc
stos
cltd
popf
insl
pushl
sub
sarb
xor
xchg
mov
mov
lret
pushl
test
and
sbb
loope
clc
mov
cmpsl
mov
adc
out
imul
mov
cmp
sbb
mov
addr16
jg
push
fld
ret
xchg
xchg
and
popa
jo
hlt
test
sbb
push
jae
sbb
icebp
enter
data16
sbb
in
sbb
lock
jle
adc
js
pushf
and
addr16
ljmp
lock
dec
push
addb
mov
add
push
inc
inc
into
or
inc
xchg
fstl
push
mov
ficompl
xor
pop
cli
and
add
sub
repnz
insb
jg
ss
jb
stos
mov
pop
push
and
imul
xchg
cmp
dec
fisttps
dec
test
xchg
mov
xor
and
mov
lcall
je
or
adc
lcall
inc
pop
mov
or
or
lret
inc
or
and
les
adcb
inc
dec
dec
mov
and
test
call
sti
or
jl
inc
xchg
sahf
sbb
fstl
insb
mov
notb
mov
push
pop
outsl
rol
popa
pushf
cs
hlt
cmp
dec
push
inc
xchg
dec
ja
outsl
aam
je
pop
dec
push
and
push
test
es
stos
in
pop
xlat
jnp
aaa
jle
mov
xchg
sub
out
imulb
imul
cmpsl
movsl
add
shr
or
cmp
pop
push
jl
subb
inc
repz
sbb
jno
push
leave
pop
cmp
dec
enter
pusha
scas
xor
xor
dec
pop
inc
add
add
std
push
imul
shlb
mov
mov
pop
fwait
push
cmp
pop
pop
add
in
dec
or
or
push
jmp
movsl
ja
test
popl
jmp
mov
enter
aaa
pop
push
mov
repz
inc
scas
pop
imul
fsub
or
incl
adc
inc
mov
je
dec
fstp
jp
sub
push
in
add
xchg
jbe
in
pop
call
data16
mov
jmp
lods
add
ret
aam
push
xor
xor
mov
jge
gs
sub
add
fstp
dec
mov
pop
pop
pop
lcall
mov
dec
imul
xor
sbb
insl
adc
jns
iret
in
sbb
pop
fidivl
mov
adc
add
clc
stos
das
mov
in
xchg
mov
stc
sbb
mov
pop
sti
mov
mov
hlt
mov
sbb
mov
push
lcall
call
sbb
or
les
cltd
pop
and
sbb
fistpll
lods
xor
dec
jbe
xor
pop
or
push
fisubs
xchg
sbb
push
idivb
cli
in
pop
add
lea
push
push
dec
mov
pop
adc
call
cmp
push
mov
in
add
adc
mov
lds
fidivrl
inc
stc
outsl
stc
arpl
or
daa
mov
aaa
icebp
inc
dec
and
mov
subl
pop
jp
adc
dec
pop
enter
out
add
pop
and
mov
and
push
and
adc
subl
mov
push
mov
add
das
lock
jnp
aas
or
pop
data16
incl
jg
pop
stos
jp
dec
out
inc
inc
mov
mov
cwtl
sbb
inc
pop
or
fiaddl
cmpsb
movsb
or
es
ret
lods
cmp
and
pop
loopne
clc
xchg
mov
or
mov
int3
jb
pop
ss
leave
pop
push
xchg
fsubrl
push
inc
cmp
leave
or
jae
sub
jp
add
aaa
test
jbe
fwait
pushf
sub
jmp
ret
pop
lods
rclb
insb
pop
mov
add
test
icebp
adc
push
dec
adc
lahf
push
aas
mov
jp
sahf
les
test
sbb
push
out
decb
push
mov
adc
flds
hlt
fisttpl
inc
int
movl
loope
ret
mov
pop
mov
push
movsl
test
std
or
mov
mov
or
pop
bound
and
cli
mov
loop
test
and
cmp
mov
lods
inc
or
sbb
rolb
test
push
popf
stos
sahf
repz
inc
mov
and
fwait
or
mov
pop
push
push
push
mov
sbb
push
cld
mov
mov
and
pushf
hlt
test
test
adc
mov
ljmp
ds
shll
out
mov
or
pop
add
call
or
jge
pusha
out
inc
inc
push
insb
mov
ds
mov
adc
inc
inc
dec
or
mov
fisttpll
mov
out
mov
mov
xor
cmp
pop
adc
pop
pusha
push
test
xorl
adc
add
and
fldcw
popf
in
or
icebp
faddl
subb
sar
xor
das
push
cmpsb
jo
arpl
or
repz
fsubl
lods
aam
shll
repnz
es
xor
push
xor
cmpsl
mov
sbb
xchg
aaa
pusha
inc
sbb
fmull
add
fldenv
shrl
hlt
ds
and
aam
sub
xor
lret
fwait
orb
rcr
mov
sbb
xor
push
mov
mov
arpl
fmuls
sub
xchg
and
clc
pusha
data16
int
fdivl
sub
mov
push
xchg
adc
cs
movsl
lock
or
cmp
xchg
loopne
or
insl
inc
add
sbb
les
rcr
imul
lcall
jmp
aaa
ds
insl
dec
sub
add
push
lcall
andb
sbb
mov
mov
push
je
push
push
insl
pop
dec
adc
pop
movb
shlb
fsubrs
pop
enter
or
sahf
cmpsl
add
in
insl
lock
mov
ret
out
xor
push
xor
mov
mov
add
rcrl
pusha
jno
pop
inc
cwtl
push
sub
mov
xchg
pop
cs
sarl
fsubl
test
mov
adc
sarb
push
ret
test
test
cmp
dec
and
inc
enter
mov
mov
sub
xchg
cmp
insl
add
rolb
and
arpl
mov
pop
ss
cmp
dec
xor
or
cmc
lock
push
cli
aaa
inc
je
sbb
or
adc
pusha
adc
aas
and
push
mov
push
mov
xor
or
lahf
pop
loopne
sbb
aas
push
mov
xchg
mov
push
cmp
mov
jl
cs
clc
cmp
inc
and
mov
pop
subl
cli
push
xor
es
idivl
je
mov
pushf
int3
and
push
fiadds
and
loopne
adc
fadd
daa
pop
pop
lds
adc
fmulp
adc
pop
add
bswap
xchg
mov
dec
xchg
mov
and
shrb
lods
stc
pop
sti
sbb
sbb
or
sub
push
movsb
shlb
in
sub
aam
lods
dec
inc
sub
xchg
bound
aam
jb
dec
sub
pop
jae
je
lea
outsb
push
in
and
sbb
mov
sbb
pushf
int3
push
fs
enter
ja
xchg
shll
mov
push
mov
push
xchg
jecxz
inc
sbb
inc
pop
out
out
icebp
es
mov
sbb
add
sub
mov
js
xchg
inc
mov
ret
and
out
xchg
xchg
sub
adc
ljmp
push
jge
push
sub
push
fnstenv
inc
insl
jmp
fcompl
scas
sbb
lahf
mov
rorl
cmp
outsl
insl
xchg
adc
cmpsb
jmp
dec
inc
mov
std
pushl
pop
pop
in
dec
outsb
mov
pop
loopne
mov
jo
or
jmp
add
fcompl
fimuls
lcall
out
jmp
lds
pop
jge
pop
fwait
and
shll
push
pop
inc
mov
sub
aas
mov
out
and
rcr
push
in
add
add
outsb
filds
or
sbb
adc
sub
lock
call
push
bound
movl
scas
hlt
cs
push
or
mov
mov
stos
dec
xchg
leave
adc
std
push
mov
push
orl
mov
fisttps
cmp
mov
mov
int3
arpl
daa
pop
or
filds
push
mov
adc
in
sub
cmpsl
xor
lea
or
cmp
shlb
sub
mov
cltd
inc
inc
test
js
push
out
push
xor
sub
xchg
out
mov
mov
aas
stos
jnp
xchg
cmp
jecxz
adc
xlat
or
inc
rorl
dec
insb
fistpl
loopne
inc
jne
xchg
xor
pop
clc
adc
mov
xchg
sbb
adc
jg
testb
xor
nop
pop
inc
std
cmp
fwait
and
adc
mov
and
jb
cld
negb
cmp
adc
mov
pop
add
mov
outsl
mov
push
ret
sbb
inc
pop
sbb
nop
loope
divb
icebp
invd
popa
rcrb
aad
inc
rolb
shll
xchg
mov
jge
dec
jmp
into
addr16
ret
into
test
fildl
es
shrb
clc
scas
test
mov
test
out
jle
mov
xchg
mov
shrb
lret
insl
loope
pop
adc
cltd
dec
das
lcall
test
popf
or
aas
test
xchg
ja
popf
lret
sbb
dec
jg
push
mov
adc
add
mov
push
jno
inc
ss
fnsave
sub
add
hlt
or
jmp
fninit
in
sub
js
out
jg
sbb
mov
lcall
insb
xor
leave
xchg
cmp
sub
leave
sub
xor
clc
mov
add
hlt
mov
sub
out
sbb
sbb
add
mov
sti
xchg
sbb
xor
iret
cmp
ror
push
jle
inc
out
add
xchg
movsl
pop
mov
loopne
dec
test
mov
aaa
insl
idivb
sbb
es
sar
sub
lock
and
push
pop
in
test
pop
jecxz
enter
sub
mov
xor
in
call
adc
pop
sbb
mov
clc
and
cmpsl
loop
test
cld
aaa
jbe
inc
inc
cmp
add
aaa
pusha
shl
xchg
push
push
adc
out
fld1
and
mov
cwtl
aad
adc
dec
ss
mov
sar
out
mov
inc
pop
cmpsl
and
adc
not
mov
call
lock
push
cld
test
or
test
loope
sbb
imulb
test
or
aad
pop
mov
or
insb
jmp
outsl
push
mov
push
jl
out
ret
cmp
scas
ret
andl
js
call
imul
pop
fisubrs
in
jae
xchg
fidivrl
xchg
divl
inc
icebp
add
push
sbb
mov
cli
jg
cmpl
les
push
pop
or
rorl
pop
fisubs
pop
outsb
fnstenv
subl
mov
aam
pop
je
mov
sbb
mov
outsl
mov
mov
incl
out
and
cmp
pop
daa
stos
xchg
rclb
mov
fs
lods
lret
daa
sub
mov
fidivs
jne
scas
xchg
les
mov
adc
mov
movsl
cmpsb
lret
mov
pop
sub
and
dec
jle
sub
push
hlt
ja
icebp
pop
lret
mov
sbb
sub
jne
mov
inc
or
pop
jno
sub
xchg
inc
add
outsb
push
sbb
ret
lock
jmp
js
mov
arpl
test
repnz
xor
lods
das
cmc
jb
in
add
pop
iret
ret
add
fmull
pop
sbb
fcmovne
jno
pop
fdivl
dec
add
xor
xchg
sub
movsb
cli
outsl
enter
xor
push
ficoml
std
push
xor
jmp
les
popl
repz
add
adc
fnsave
jmp
jbe
dec
call
bound
mov
sub
and
dec
ret
aas
ljmp
xchg
or
les
out
or
cs
fnstsw
mov
fsts
pop
notl
push
adc
mov
mov
outsb
pop
test
movsl
push
sbb
sbb
icebp
dec
movsl
cltd
js
pop
gs
ficompl
jne
fisubs
or
out
mov
and
das
out
call
mov
dec
mov
test
out
push
xchg
jg
add
pop
sub
or
add
outsb
cmpsb
xor
outsl
loop
adc
jg
andb
repz
or
fsubr
insl
ret
xor
clc
or
xor
push
cwtl
icebp
or
add
cmp
push
outsl
jae
xor
leave
cmp
dec
in
fsin
or
mov
and
jmp
jle
shrb
rcrl
inc
jge
gs
mov
pusha
fisttpll
mov
pop
arpl
dec
pop
sti
jne
and
mov
cwtl
sbb
inc
adc
mov
stos
or
adc
fisttpl
dec
ds
out
pop
adc
mov
push
lds
and
test
lea
adc
icebp
int3
add
and
subb
push
cmp
mov
sbb
lahf
xor
push
sub
or
mov
decl
push
test
testl
outsl
cltd
mov
cmp
jne
std
aam
add
sahf
mov
jl
sub
cmp
inc
lds
adc
inc
mul
add
push
pusha
stos
icebp
mov
bound
xchg
incb
mov
xchg
push
mov
ds
enter
popa
sti
fistps
mov
pop
and
lods
call
fldenv
inc
cmpb
adc
xor
rcll
pop
push
mov
dec
mov
cmc
and
int3
mov
sbb
push
jp
and
hlt
add
ljmp
mov
xchg
mov
test
arpl
and
push
cmc
es
dec
mov
imul
clc
fisubl
or
stc
adc
and
mov
jl
mov
xorb
pop
rol
fisttps
pop
lds
lret
inc
outsl
cmp
or
jbe
dec
gs
lods
aad
mov
mov
int3
inc
rorb
in
test
fcmovnb
add
add
andb
sbb
mov
xchg
mov
and
test
inc
icebp
shrb
hlt
mov
test
sub
ret
fst
roll
push
cwtl
sbb
xor
cmp
mov
js
push
mov
ds
xchg
decb
int
pop
nop
cltd
push
mov
sbb
mov
vmovups
jecxz
or
inc
inc
add
inc
mov
bound
roll
mov
decl
pop
pop
pusha
out
sbb
xor
adc
hlt
jg
mov
add
scas
pop
push
insb
mov
in
call
mov
inc
mov
push
aad
mov
jl
jbe
test
mov
and
xchg
jnp
mov
loop
dec
or
sar
or
mov
and
loop
xor
outsl
cld
lret
fiadds
gs
and
adc
sub
push
adc
or
icebp
xchg
es
xchg
ss
int3
mov
negl
pop
mov
inc
sti
cmpsb
in
or
xor
incl
js
adc
repnz
fs
adc
loope
mov
xchg
lods
dec
js
sbb
pushf
incl
mov
mov
or
pop
adcb
mov
xchg
push
shr
sbb
popf
js
cmp
pop
and
push
jmp
fs
lods
loopne
jg
les
fisubrs
push
das
clc
pop
pop
rorb
add
outsl
and
mov
jge
xor
mov
xchg
popf
or
outsl
jne
and
fbld
adc
or
jae
inc
inc
add
std
les
jne
das
cmc
decl
icebp
or
adc
add
movsl
mov
std
sub
and
into
jle
sub
ffreep
pop
xor
rcr
jge
push
dec
pop
aaa
jbe
mov
pop
aaa
lods
add
jle
stos
test
lea
push
or
mov
sbb
jle
push
sbbl
inc
dec
sarl
mov
in
mov
inc
fisttps
dec
jns
test
movl
loop
push
adc
sub
fiadds
add
or
ljmp
or
push
loop
loopne
lock
rorb
jo
add
or
push
jo
jo
or
sub
or
xchg
push
push
test
addb
fcomip
sbb
daa
ljmp
mov
mov
inc
add
sbbb
test
jnp
add
fwait
mov
in
gs
mov
mov
and
pop
addr16
push
aam
sub
in
xlat
lret
dec
sub
adc
pop
rorl
data16
or
push
or
push
or
data16
or
sbb
ljmp
or
add
sub
push
dec
add
icebp
lods
adc
and
insb
inc
lea
push
nop
fiaddl
pop
inc
hlt
scas
sbb
nop
fbstp
loopne
jo
xorb
inc
fimuls
mov
dec
rorb
inc
sub
push
mov
push
es
inc
jmp
mov
addb
add
add
ret
mov
jmp
int
xchg
mov
mov
js
lret
xor
add
pop
pop
int3
leave
loopne
aaa
push
adc
or
dec
fwait
mov
xor
dec
loopne
cwtl
ljmp
or
mov
mov
int
test
add
push
lahf
lcall
push
or
mov
xor
loopne
jbe
outsl
jl
lcall
cmp
mov
ljmp
enter
or
ret
enter
pop
sub
int3
cld
pop
jne
clc
and
aas
sub
pop
dec
adc
sbb
xchg
ljmp
aam
inc
jmp
ljmp
mov
mov
lea
adcb
int3
fisubrl
es
dec
add
in
ret
jne
sbb
icebp
jge
mov
dec
dec
ja
and
xchg
out
sub
sbb
jmp
cmp
ja
fdivs
scas
jl
add
pop
mov
jge
push
sbb
das
mov
mov
sub
hlt
ret
jo
xor
mov
mov
mov
aam
out
push
aaa
adc
sub
jb
add
addl
add
xchg
mov
hlt
es
pop
or
adc
testb
push
rcll
adc
pusha
div
cmp
cld
das
lock
fs
sbb
pop
cmp
stos
shlb
incb
fucomp
jg
lea
mov
mov
push
test
pushw
mov
stos
negb
mov
pop
jecxz
insb
pop
orb
pop
aam
ss
pop
pusha
leave
sub
xor
orl
pop
mov
push
clc
pusha
cltd
movsb
mov
lds
jle
shl
add
cwtl
imul
cmp
add
fstl
pop
mov
mov
ret
outsb
mov
pusha
cs
in
leave
adc
fsubrs
sbb
sbb
lods
test
sub
push
lods
fs
pushf
jg
shll
pop
gs
lods
insl
andl
pop
add
stos
adc
xor
outsl
push
sbb
sub
jmp
cmpsb
inc
sub
mov
scas
in
jle
lods
adc
push
or
je
jbe
sti
jge
mov
ret
aaa
outsb
ja
add
adc
andb
push
cwtl
dec
inc
or
inc
lcall
test
xlat
dec
aad
sbb
sbb
addb
lods
outsl
insb
outsl
and
mov
fs
xchg
mov
sbb
adc
jg
adc
aas
inc
inc
mov
in
aam
pop
jbe
cmpsl
aas
mov
mov
sbb
daa
and
add
fildl
nop
test
imul
mov
adc
repz
call
inc
xor
sbb
sub
cmpb
dec
push
fwait
cli
and
pop
call
lods
cmp
lea
ds
call
fldt
dec
mov
xchg
and
xor
daa
ljmp
mov
cmp
jne
sbb
aad
in
and
hlt
push
fstpl
xchg
rcll
push
int
insb
xchg
daa
shl
inc
push
fidivrs
mull
pop
cld
aad
adc
loope
imull
dec
jge
add
push
lds
incl
jge
sub
enter
outsb
lds
shr
cld
loope
lods
data16
push
add
inc
cmp
push
adc
aam
je
xchg
sarb
shlb
popf
sbb
sbb
dec
add
orl
test
ss
and
pop
pusha
inc
jb
push
jno
stos
push
lock
sbb
inc
xor
lret
mov
rolb
mov
adc
push
sahf
xor
addr16
pop
fsubs
or
lock
aas
sarb
or
mov
jnp
shlb
roll
or
shlb
and
insl
jge
or
rcl
mov
push
pop
loope
sbb
inc
and
shlb
inc
add
pop
xor
cmp
jecxz
scas
nop
out
repnz
cmp
out
xlat
test
mov
insb
mov
xor
pop
fsubs
pushf
cmp
or
mov
das
call
fsubrl
les
mov
xchg
mov
iret
push
test
fidivrl
sbbl
movsb
aam
push
ret
add
push
jl
mov
sbb
mov
adc
sub
push
xchg
lods
mov
adc
scas
adc
inc
mov
push
and
or
sar
or
xor
int3
repnz
into
cmc
jecxz
add
mov
mov
sbb
lcall
les
ds
xor
sub
xor
hlt
addr16
test
inc
cmc
mov
add
cmpsl
lock
sbb
in
out
or
inc
push
test
jbe
shlb
adc
add
sub
cwtl
mov
aaa
fmuls
jne
fadds
fimuls
xor
push
xor
icebp
adc
fiadds
hlt
mov
adc
fbstp
pop
mov
xor
in
in
add
push
push
adc
xor
lret
push
aas
cmp
ja
xor
hlt
hlt
stos
lcall
pop
gs
sub
les
pavgb
test
push
and
adc
mov
rcl
das
mov
cmp
dec
or
inc
daa
mov
inc
sbb
push
dec
or
pop
icebp
test
jne
mov
push
adc
fldt
mov
jge
rclb
ret
pop
add
in
pop
inc
adc
and
outsl
jge
push
push
push
mov
rolb
push
in
shrb
inc
iret
xor
out
sbb
add
pop
je
add
stos
cmp
ret
xchg
jbe
jmp
add
add
into
adc
xor
popa
or
pop
and
ljmp
addb
ja
mov
adc
pop
push
or
add
and
cmp
or
and
cwtl
cmp
dec
sub
mov
jb
cli
ja
fiaddl
inc
mov
jb
dec
ljmp
clc
mov
add
lret
push
sub
add
sbb
jge
mov
repz
sub
pop
add
cmp
in
push
sbb
arpl
popf
mov
out
add
es
add
dec
shll
fsubrs
jp
mov
add
in
or
jns
sub
shrb
adc
pop
sub
add
push
stos
aas
cmp
sub
in
add
fadds
or
repz
lods
lret
adc
jno
mov
testb
fisttpll
mov
inc
stos
pop
mov
pop
nop
sbb
push
cmp
push
or
sbb
or
ffree
push
add
cwtl
inc
adc
pop
pop
and
cltd
inc
movsl
ljmp
loopne
fdivrs
cwtl
addl
mov
pop
cmp
mov
inc
js
mov
repnz
loopne
popf
pop
int3
enter
cld
xor
and
inc
cmpsb
add
adc
addr16
jle
xchg
push
add
test
mov
pop
movsb
inc
xor
and
add
ss
loopne
ret
jg
lcall
out
ss
jp
jecxz
je
rclb
mov
xor
jae
xor
sub
adc
jo
xor
add
mov
inc
lret
adc
adc
add
ret
push
fimuls
mov
push
loop
xchg
test
jnp
add
fcmove
shl
jo
loopne
into
loopne
dec
sub
and
loopne
in
push
mov
mov
rorl
sub
push
mov
fwait
add
je
das
sbb
cmp
mov
inc
xchg
dec
cld
ret
movsb
loope
in
repnz
xor
stos
cmp
push
adc
sbb
test
push
insl
daa
dec
lahf
pop
cmpsb
inc
inc
inc
jle
or
mov
add
stos
stos
imul
pop
loopne
sti
or
inc
in
and
adc
outsb
push
hlt
loopne
hlt
jns
sbb
stos
pusha
xlat
fiadds
inc
iret
sbb
dec
fchs
push
fbld
je
lcall
add
mov
shlb
or
cld
mov
adc
jp
dec
lock
mov
mov
lock
in
sbb
adc
roll
pop
cli
xchg
aam
inc
fcoml
ljmp
mov
cld
dec
inc
scas
test
loope
inc
pop
in
adc
popa
in
out
insb
aad
fcoms
rolb
dec
add
fimull
adc
push
add
jecxz
rcrb
adc
data16
sti
lods
mov
sbb
repnz
mov
fstps
loopne
dec
cmp
and
ljmp
lock
push
sub
gs
cmpsb
loopne
fdivr
or
leave
mov
cmp
popa
inc
ret
xchg
mov
push
cltd
lods
scas
jbe
lods
and
lds
jns
js
xchg
js
cmp
push
sbb
pop
pop
aam
xlat
jnp
lea
add
je
or
ljmp
adc
loop
aas
jae
dec
add
fdivp
dec
cmpsb
push
data16
xchg
and
dec
adc
aad
push
dec
pop
push
pop
mov
push
stos
aad
loope
mov
in
inc
lret
add
mov
adc
fcoms
mov
lods
add
mov
jo
mull
add
iret
and
sbb
or
add
lcall
xor
dec
xor
push
out
cmp
mov
ret
push
ds
mov
pop
jbe
jnp
jae
lock
das
hlt
add
subb
dec
loope
lock
mov
clc
and
jl
std
insb
xchg
mov
sub
adc
movsl
cltd
push
cmpsb
mov
rolb
subl
clc
add
lods
push
jge
cwtl
fwait
add
das
mov
popa
outsl
or
add
or
pop
inc
sub
dec
je
xorb
or
out
dec
cld
fwait
mov
cmp
inc
xchg
movzwl
rorl
add
test
outsb
push
lcall
adc
push
cmp
jecxz
mov
das
jne
icebp
sbb
xchg
xchg
sbb
cmp
mov
lret
test
dec
cmpb
jle
insb
lock
call
call
ret
arpl
adc
cs
adc
jns
scas
xor
and
enter
and
push
outsl
loop
jno
jb
sub
push
sar
cmpsb
es
mov
jbe
sub
dec
addl
loope
mov
jne
lock
sub
push
mov
mov
adcb
lea
pop
and
leave
std
outsl
gs
into
add
ret
or
adc
ss
sub
andl
mov
jg
decb
add
mov
push
notl
inc
mov
add
xor
lea
adc
in
lcall
push
pop
jns
enter
mov
inc
fistpll
jg
arpl
mov
data16
inc
pop
insb
jg
xchg
aad
or
add
lods
dec
mov
pusha
mov
lret
adc
fcmovnbe
pop
push
sahf
xchg
loop
loopne
lcall
mov
ja
or
bnd
or
mov
dec
js
and
mov
lahf
add
cld
fbstp
add
xchg
cld
add
loope
cmp
push
out
pop
mov
inc
push
aam
test
loopne
jmp
xor
cmpsl
lahf
push
movsb
repnz
mov
add
lds
clc
sbb
ret
or
scas
cmp
pop
jle
xor
and
lods
and
jmp
std
jmp
dec
or
jo
pop
mov
push
out
pop
es
mov
cmp
or
loop
mov
add
fidivl
subb
pop
dec
pop
pop
add
or
fistl
adc
das
ljmp
or
adc
mov
xchg
mov
addr16
cmpsb
movsb
outsb
adc
ljmp
mov
dec
nop
push
add
clc
pop
sub
cs
aaa
jle
subl
pusha
cmp
fisttpll
add
call
pop
and
cmp
aam
lahf
mov
mov
lods
mov
lds
or
jle
mov
sbb
push
fcomps
test
pop
jl
xchg
mov
xchg
popf
cmp
bound
push
lods
mov
sar
rorb
cmp
pop
push
nop
es
pushf
cmp
mov
mov
or
sti
iret
dec
in
push
or
pop
ljmp
cld
xor
fldl
and
ja
dec
cmpsl
pop
sti
outsl
int
movsb
sub
in
add
jp
add
push
jmp
in
lock
das
mov
fbld
mov
dec
test
stos
divb
xchg
mov
cli
xchg
stos
and
dec
out
popa
or
aaa
outsb
mov
or
js
popa
add
xor
pop
pusha
jecxz
sub
imul
mov
lods
cmc
mov
shr
or
scas
and
lahf
arpl
pop
add
cmp
jle
sub
push
mov
cmp
add
lds
ljmp
and
rcll
daa
hlt
shl
dec
iret
adc
mov
jmp
sub
andl
sub
add
dec
inc
stos
mov
add
fldl
mov
mov
add
inc
lds
xchg
jl
mov
test
insb
test
outsl
inc
or
rolb
xlat
in
lods
ljmp
js
imul
xor
adc
sarl
mov
fmuls
or
fldenv
shll
add
xor
aad
orl
xor
jmp
loope
mov
ror
ret
insb
out
movsb
rcll
mov
dec
test
add
cwtl
jo
xor
push
ret
adc
das
mov
jbe
fdivrl
out
mov
insb
cld
mulb
xor
xor
enter
cmp
add
push
xchg
es
lcall
push
insl
cli
adc
push
xchg
sbb
add
negb
pop
or
sub
xor
clc
lds
insl
fwait
jle
and
outsb
lea
iret
add
jmp
xor
inc
pop
loope
int
push
insl
cld
fdivrs
mov
dec
pop
iret
xor
out
pusha
jmp
in
insl
jbe
push
xor
jo
cmp
subl
stos
jle
fcmovu
clc
push
push
scas
clc
in
ret
add
lret
or
loopne
filds
inc
jno
aad
je
sbb
adc
inc
daa
mov
push
cmp
sub
pusha
pop
push
fadd
jbe
jmp
dec
call
push
data16
and
fistpll
and
in
adc
icebp
ret
sub
sbb
adc
lahf
mov
idivl
mov
and
mov
daa
add
cli
sub
xor
or
jnp
adc
out
mov
lret
mov
inc
ljmp
cmp
pushf
inc
push
sub
movsb
pop
bound
xor
addb
and
xor
pop
mov
sbb
cmpb
fildll
mov
fsub
add
loopne
or
movsl
mov
les
movsb
xchg
cwtl
xchg
aam
lahf
testb
mov
mov
and
test
leave
dec
loopne
push
mov
sbb
nop
and
mov
add
outsl
adc
repz
arpl
in
dec
insb
add
jle
inc
mov
pusha
pusha
jb
add
scas
scas
jo
sbb
add
or
loop
dec
shll
mov
test
sti
push
mov
mov
mov
js
rorb
mov
or
aaa
xor
xor
outsb
mov
push
iret
icebp
add
outsb
inc
or
push
div
mulb
imul
pop
cli
sbb
mov
das
int
mov
in
add
mov
sub
add
cmp
xchg
dec
ds
xchg
add
jl
mov
xchg
dec
cmp
popa
xor
xchg
clc
lcall
faddl
and
and
jo
out
icebp
dec
add
scas
nop
dec
ljmp
add
repnz
ljmp
jne
xorb
adc
pusha
xor
leave
xor
pop
sarb
sbb
dec
mov
mov
xchg
add
shll
loope
fcompl
adc
push
fists
push
fsubs
roll
pop
cmp
xor
dec
mov
xchg
test
and
cmp
and
xchg
addr16
or
sub
loopne
stos
call
inc
dec
add
mov
adc
testl
mov
push
cmp
out
inc
xor
shl
movsl
lcall
stos
pusha
push
jns
sbb
fmuls
or
fnstcw
aaa
push
push
or
call
mov
sbb
lret
push
mov
cmp
in
xchg
dec
lock
adc
sbb
xchg
stos
lcall
sbb
jge
adc
xchg
test
sti
ljmp
pushfw
stc
or
mov
clc
int
icebp
xor
adc
and
pop
adc
add
test
sbb
lahf
arpl
fwait
sub
adc
add
adc
rcrb
call
mov
ja
addr16
or
loop
out
push
test
xor
rorb
push
mov
leave
jbe
ret
nop
je
sbb
int3
jne
and
adc
in
ret
scas
rorb
mov
adc
das
sbb
sub
mov
fldcw
hlt
inc
mov
adc
lods
sub
aaa
mov
xchg
mov
jno
imull
rcr
cs
lea
push
pushl
insb
out
imul
add
or
fs
jmp
iret
jg
std
fisubrs
cs
sbb
jmp
xor
test
xchg
out
push
inc
jecxz
sub
or
adc
sub
iret
push
pop
fldenv
inc
push
loope
mov
daa
add
mov
ret
push
jle
mov
decl
xchg
xchg
cmpsb
sub
shrl
mov
mov
cmp
add
stc
mov
pop
mov
sub
push
incl
mov
jle
mov
mov
inc
jne
adc
mov
das
dec
mov
movsl
mov
inc
fwait
mov
popa
iret
mov
cmp
jle
add
pop
dec
dec
lcall
int
decl
jecxz
adc
ss
or
mov
fiaddl
jl
test
pushf
test
ja
in
lods
cs
sbb
lret
push
inc
rol
addr16
add
or
push
or
fsts
test
push
sbb
aam
sub
cwtl
mov
nop
rclb
push
add
xor
out
pop
inc
lea
ljmp
sahf
mov
lock
mov
add
and
in
int
rorb
mov
mov
or
cli
or
jne
push
es
in
and
jecxz
or
jae
sbb
enter
mov
inc
pop
push
xor
cli
nop
dec
or
mov
mov
data16
stos
fimuls
insb
icebp
inc
sbb
jnp
mov
mov
pop
mov
cltd
xchg
out
xchg
fwait
shl
fstl
jp
mov
add
fwait
mov
int3
and
sbb
int3
adc
pop
cli
cmp
fdiv
jl
scas
mov
mov
aad
jb
xchg
add
sub
arpl
in
adc
xor
add
lock
ret
ficomps
and
loopne
and
shll
or
fcoms
xor
arpl
mov
mov
mov
je
hlt
cmpsl
inc
mov
sub
mov
sbb
pushl
pop
adc
mov
adc
or
in
fldt
ror
add
insl
push
dec
jg
sbb
push
cli
les
cmp
push
jne
shl
xchg
cs
int3
sbb
adc
adc
mov
xor
add
adc
xor
and
test
push
mov
inc
sbb
mov
sbb
sub
outsb
bound
daa
sarl
mov
fidivl
inc
push
shr
mov
mov
or
inc
rcll
popa
cmpsl
es
fdivrl
roll
and
and
std
testb
scas
push
cwtl
adc
xchg
es
bound
xor
fcoms
adc
or
pop
cld
push
gs
pop
cvtdq2ps
fbstp
mov
orb
mov
pop
or
scas
adc
pop
xchg
add
sub
jb
pop
test
pusha
scas
mov
mov
add
pop
mov
and
das
ret
adc
push
sbbl
sbb
les
icebp
mov
into
mov
xchg
mov
push
sub
pop
jo
sbb
sbb
inc
inc
dec
aam
aas
mov
bound
jl
add
sahf
pusha
cwtl
xchg
sbb
inc
dec
push
push
fucomi
lods
mov
and
xlat
pushf
adc
insb
cmc
rclb
in
repnz
imul
jo
decl
hlt
adcb
mov
scas
leave
xchg
mov
mov
and
es
pop
arpl
push
dec
dec
ret
subl
or
cli
popa
sub
lods
bound
push
sub
mov
sbb
cmp
push
outsb
fistps
and
stc
es
mov
or
outsb
arpl
add
xorb
stc
lea
fisubrs
pop
fwait
dec
and
imul
add
mov
pop
loopne
test
jns
push
mov
test
bound
bound
test
mov
shll
in
call
je
and
add
mov
jne
fisttpl
adc
roll
push
fdivs
and
sti
pop
int3
les
sti
mov
dec
mov
and
sub
inc
and
push
mov
sbb
mov
into
pop
clc
inc
in
cld
push
cltd
outsb
sar
pop
ret
cmp
mov
bswap
add
mov
or
jecxz
fimuls
sarl
inc
or
mov
popa
les
mov
fisubrl
mov
push
mov
inc
das
mov
es
pop
adc
sub
push
invd
cli
popa
mov
inc
or
movsl
dec
pushf
fisubrs
dec
or
or
out
mov
xchg
adc
pop
xor
inc
pop
cld
outsl
lods
mov
pushf
loopne
cwtl
imul
or
sub
jbe
xchg
mov
xchg
add
data16
lock
dec
mov
call
popf
repnz
inc
and
and
dec
cmp
pop
stos
loope
xlat
test
mov
ja,pn
dec
or
pop
xor
cs
mov
sti
jge
jb
xchg
pop
or
add
jecxz
adcl
aaa
mov
jo
imul
and
mov
sub
in
test
mov
jle
add
cmpsl
sub
enter
aaa
adc
mov
mov
sub
pop
or
xchg
mov
cltd
sbb
ja
pop
push
cmp
push
je
mov
ljmp
shll
stc
xlat
out
push
test
lret
sbb
mov
push
jno
cmpsl
in
nop
jg
rcrb
imul
xlat
inc
icebp
or
mov
jmp
rcrl
into
xchg
jae
add
sbb
xorl
fdivp
pop
scas
mov
mov
loopne
repnz
mov
scas
cltd
jecxz
and
pop
sub
add
and
sar
push
mov
pop
insl
cmpl
das
aam
decl
arpl
push
jecxz
jmp
add
sub
cmpl
pop
and
iret
outsl
sbb
insb
fmull
xchg
add
shlb
clc
incl
push
mov
mov
ud1
push
idiv
incl
adc
movb
xor
jo
movl
incl
nop
outsb
dec
sub
cli
jl
fildll
xchg
or
clc
xor
insl
sarb
ds
lds
roll
add
mov
daa
xchg
movsl
insl
inc
into
and
push
jmp
stos
dec
cwtl
mov
bound
pop
orb
pop
mov
or
sbb
incl
jo
jmp
lret
mov
fsts
xchg
jae
dec
sar
and
add
ret
lods
mov
dec
insl
mov
fnstsw
sub
mov
cwtl
outsl
icebp
mov
adc
push
cmc
adc
jb
repnz
ljmp
das
cld
repz
inc
push
sbb
dec
in
fistpll
and
push
inc
adc
js
arpl
push
jecxz
das
test
mov
rcrl
shll
clc
test
jmp
xchg
out
add
mov
iret
xor
and
sbb
push
fildl
popa
add
movsb
mov
shlb
adc
xchg
push
test
add
mov
jmp
fstpl
test
insl
inc
inc
dec
insb
pop
in
jg
in
dec
negb
das
aas
xchg
adc
xor
in
push
push
mov
fsts
inc
repnz
lods
pop
and
ret
std
push
aad
push
enter
ljmp
mov
jecxz
jp
pop
clc
lea
ss
je
and
iret
std
ljmp
jmp
fidivrs
test
or
jmp
xchg
pop
push
adc
push
scas
test
cltd
adc
or
aaa
les
pushf
in
aas
add
cmpsl
repz
xchg
push
stos
fdiv
push
shl
sbb
mov
adc
xchg
icebp
outsb
jecxz
inc
das
xor
data16
or
cltd
xchg
mov
lcall
adc
jno
adc
sub
outsl
pusha
jmp
stc
inc
movsb
popa
pop
orb
aaa
fcoms
cltd
jmpw
mov
sahf
sbb
lods
mov
stc
mov
push
orps
ss
add
fmuls
add
push
int3
rcr
loopne
fildl
mov
mov
dec
lcall
push
dec
ja
cmp
andl
mov
test
or
mov
inc
xchg
dec
or
outsl
lds
jae
xchg
sub
lock
or
adc
paddw
push
mov
icebp
xchg
xchg
das
dec
adc
sbb
inc
and
stos
rcr
lods
sub
and
icebp
pop
dec
xor
push
adc
call
pop
sub
adc
daa
or
sub
lret
call
jo
pop
mov
adcl
mov
sub
push
push
stos
cmpsl
aas
clc
dec
and
sbb
movsb
das
dec
cltd
or
mov
out
sbb
sbb
movsl
lods
stos
out
les
aad
sub
hlt
jle
pop
pop
imul
pop
loopne
pop
js
jb
inc
xorb
pop
test
or
jge
in
xor
ss
je
xorl
daa
adc
inc
loopne
hlt
rcll
or
push
ss
stos
loope
xchg
push
cmp
js
add
xor
fidivl
and
fisubrs
ret
cmp
out
ret
sub
out
mov
enter
lock
xchg
pushf
mov
das
cmp
jbe
insb
aaa
jae
mov
inc
jmp
pop
mov
pop
push
js
lods
mov
std
mov
mov
addl
enter
mov
inc
insl
test
into
imul
sub
sub
movsb
insb
sub
fcompl
jg
push
adc
xchg
leave
jns
ror
popf
jecxz
sbb
adc
arpl
xor
jp
imul
jno
lahf
dec
or
or
fiaddl
and
push
sarb
mov
sti
mov
fwait
les
push
lea
shll
pop
add
mov
fsubs
inc
hlt
hlt
adc
insl
popf
cwtl
push
xor
dec
rclb
aam
aad
mov
sub
int
pop
mov
std
adcb
dec
inc
mov
sub
clc
in
into
adc
push
sti
enter
jge
testb
sub
jnp
les
das
fs
loope
pop
mov
subb
mov
mov
sahf
sbb
mov
fstpt
ret
dec
lcall
cld
test
add
das
insl
imul
outsl
mov
outsb
mov
or
test
mov
adc
xorb
dec
lret
mov
push
fldz
mov
mov
add
adc
jno
jo
and
add
sub
out
adc
daa
sub
ja
test
cli
cmp
repz
push
and
adc
sub
ficompl
adc
mov
jbe
outsl
ja
mov
jns
out
add
pop
in
aas
jnp
mov
bound
icebp
jg
sub
sub
ja
push
imul
push
loope
ja
js
mov
cld
adc
imul
sub
or
add
stos
mov
push
pop
lds
xor
pop
fists
outsb
sub
outsb
roll
into
jnp
jb
in
mov
sbb
pop
fildl
sbb
aam
pushf
daa
jnp
mov
sub
imulb
mov
lret
cld
push
xorl
out
push
insb
jp
jmp
mov
imul
or
xchg
jne
and
jp
pop
outsb
fucomi
mov
push
push
or
inc
mov
sbb
xorl
jl
xlat
xchg
dec
dec
inc
out
das
sahf
dec
int
js
dec
cmpl
jno
dec
pop
imulb
xchg
or
adc
arpl
call
sub
cmp
push
jecxz
inc
sbb
jg
es
jo
dec
outsl
aam
push
adc
adc
std
or
mov
fidivrs
pop
cwtl
out
test
adc
mov
push
sbb
jmp
or
aam
push
jne
rcll
dec
add
and
call
lcall
sahf
sub
popa
mov
push
loope
pop
mov
jno
dec
sub
orb
xchg
js
lret
sbb
jae
pusha
clc
inc
std
outsb
lcall
inc
mov
imul
fcoml
cmp
jmp
ja
xchg
movsl
jg
adc
shlb
sbb
and
nop
mov
lds
in
aam
dec
test
xor
xor
subb
pusha
inc
xchg
cli
fcoms
clc
or
fildll
adc
insb
inc
cmp
es
popa
push
out
fucomip
loope
out
jbe
jmp
mov
lcall
cmp
stos
xchg
in
enter
adc
cmp
xor
jno
fbstp
cmp
xchg
inc
fprem1
shlb
inc
in
scas
pop
pusha
inc
lea
fidivs
and
rol
adc
push
pop
outsb
sub
xor
cwtl
cmp
lods
sbb
push
jns
dec
pop
sbb
das
jge
xchg
push
test
pop
jo
jbe
lods
xor
outsb
mov
mov
or
dec
ljmp
jmp
cmpsl
cmp
int3
adc
xorb
sarl
add
mov
test
jne
outsb
cli
push
xchg
dec
or
test
mov
mov
cli
pushl
adc
cli
fs
arpl
leave
cmp
ds
outsl
xchg
fimuls
aas
es
lahf
or
ljmp
loop
adc
lods
xlat
inc
sbb
pop
sbbb
push
not
xlat
sahf
jecxz
xchg
pop
push
or
addb
mov
pop
les
push
push
mov
adc
mov
pop
mov
adc
cmp
mov
in
sarb
lea
dec
xor
sbb
repz
mov
pop
add
in
pop
or
sub
in
in
inc
enter
sbb
mov
popa
sbb
add
shrb
movsl
sarb
dec
or
cmp
mov
ret
mov
jbe
or
mov
cwtl
negl
imul
fists
xor
sub
sub
in
adc
testb
jp
orl
leave
push
clc
mov
aad
popf
sub
insl
movsb
push
xchg
xchg
push
pop
ficoms
jl
call
outsb
popa
add
loope
sbb
xlat
in
data16
cmp
shl
bnd
mov
and
in
mov
jnp
cmc
push
ret
pop
leave
loopne
ret
jecxz
jns
rorb
ss
push
inc
loope
fs
mov
jb
pop
hlt
stos
sbb
icebp
or
imul
mov
aam
cld
mov
mov
or
jae
fisubl
jp
mov
rcll
incb
add
push
fadds
aaa
sbb
call
or
fcompl
roll
in
daa
outsb
jge
push
xor
xor
leave
ret
outsl
mov
test
fbstp
out
das
cli
dec
and
or
jle
shl
fistl
es
and
jnp
rcrl
cmpsb
imul
out
cmp
adc
or
or
psubd
fisttpl
repz
sahf
mov
cld
add
push
fcmovnu
movsb
add
call
call
js
push
imul
sbb
xchg
iret
mov
jmp
call
loope
imul
jb
outsb
das
mov
add
inc
xor
mov
lods
mov
aad
cvttps2pi
ret
out
jmp
jmp
lock
movsl
outsb
push
mov
repz
scas
cmp
aaa
call
enter
push
out
or
mov
data16
mov
add
pusha
jno
add
inc
popa
lret
aas
adc
mov
mov
scas
cmp
es
pop
fisubrs
or
imul
cmp
scas
sub
scas
adc
dec
outsl
push
sbb
daa
add
jmp
sub
call
or
rcrl
cmc
xchg
adc
sqrtps
pushf
test
mov
cmp
es
xlat
mov
out
dec
jo
mov
call
jmp
into
cmp
adc
sub
and
addr16
sbb
inc
jge
mov
lods
adc
xor
das
fidivrs
jge
pop
inc
mov
out
loopne
inc
xor
lods
pop
xor
insb
insl
and
dec
jp
fldt
nop
push
ss
adc
das
push
pop
imul
test
mov
jo
pop
xchg
add
incb
adc
pop
jo
das
cmp
mov
mov
sub
push
lcall
jns
pop
insb
into
mov
cmp
out
mov
jmp
push
mov
push
jecxz
frstor
and
cmp
outsl
mov
lock
or
fdivs
add
inc
and
adc
sbb
or
add
das
rcl
mov
jmp
lret
push
fistpll
sub
enter
mov
lcall
popa
imul
sbb
jge
lcall
or
or
cmp
adc
pop
cli
outsl
mov
iret
sarb
sar
js
or
aam
and
ds
ret
rcrl
addr16
rorb
daa
xchg
add
inc
shrl
lock
xchg
out
insl
iret
mov
test
mov
jne
mov
nop
clc
outsl
out
xchg
ret
xor
add
popf
mov
sbb
pop
sbb
mov
or
je
test
dec
cld
mov
aaa
pushf
adc
test
cmp
inc
xchg
dec
sbb
push
add
lods
jp
ljmp
cwtl
lock
ja
clc
aad
xor
outsl
mov
aaa
xor
lods
sub
add
xchg
leave
sarl
ja
or
ds
inc
stos
dec
jge
in
sbb
repnz
subb
mov
ffree
ss
aaa
add
std
out
mov
pop
or
in
sub
or
call
sbb
dec
jno
or
iret
sub
push
hlt
adc
test
xchg
or
int3
loopne
xchg
stos
mov
mov
mov
shrl
outsl
ljmp
dec
push
scas
jnp
ljmp
aam
sub
mov
jge
nop
add
mov
ja
inc
pushf
cmp
in
mov
ror
subl
or
dec
push
or
xor
or
data16
push
pop
addb
jp
loop
mov
adc
loope
mov
xor
mov
dec
dec
or
xchg
mov
rolb
decl
pop
ljmp
inc
cmp
pop
mov
pop
popf
xor
inc
sub
sub
jge
cmpsl
jp
es
cs
je
das
lock
xchg
push
jbe
mov
push
stos
cs
pop
shrl
imul
add
cmp
out
lock
xor
frstor
xchg
push
rorl
add
lahf
or
mov
aam
ret
fisttpll
test
sub
sub
addl
test
push
notb
icebp
push
roll
out
fisubs
outsl
aad
sbb
clc
faddl
test
popf
stos
fwait
jo
and
pop
and
sub
push
ljmp
add
inc
and
mov
or
out
push
lahf
ljmp
add
jb
adc
adc
sbb
mov
sub
push
insl
out
repz
mov
outsl
xchg
mov
add
out
xor
xchg
pop
scas
cmp
xor
in
imul
or
inc
dec
pop
mov
bound
clc
ficoml
mov
push
call
adc
in
mov
lcall
ret
jne
in
sub
add
pop
in
lds
jecxz
push
fcoms
imul
jo
insb
stos
mov
nop
or
in
adc
add
push
dec
insb
outsl
mov
out
ja
iret
sbb
jns
popa
call
gs
dec
call
jp
pop
inc
or
mov
cld
push
imul
decb
lods
push
cld
out
lods
sbb
add
sbbb
push
push
mov
xor
xor
and
testl
or
cmp
inc
in
add
and
repz
cld
adc
shl
inc
pop
sub
daa
test
mov
or
cli
xor
sub
sub
std
daa
sub
fisubs
addb
imul
cs
xor
iret
pop
and
inc
xor
push
xchg
inc
add
fwait
into
lcall
xchg
cmp
lods
aad
popa
test
aas
loop
fisubl
pop
inc
inc
push
roll
add
cmp
dec
push
pop
int
mov
sbb
popa
jl
mov
aaa
fldl
and
ret
dec
daa
std
es
mov
add
icebp
inc
xor
add
sbb
mov
dec
mov
andb
lahf
pop
add
pop
stos
mov
or
fcoms
push
mov
in
rorl
mov
clc
pop
mov
cmp
xchg
adc
xchg
jns
hlt
add
out
adc
emms
clc
push
xchg
mov
call
das
fstps
in
lods
cmp
push
rorb
pop
mov
or
mov
lods
inc
call
out
xchg
add
mov
fistl
lock
sub
sarb
mov
inc
jg
shlb
stos
imul
pop
or
ret
push
jmp
enter
or
int3
loopne
or
pop
and
call
push
icebp
and
push
loop
mov
outsl
shl
cmp
and
mov
or
adc
scas
xchg
sub
pop
add
ret
sbb
lea
mov
movsb
loopne
cltd
aas
mov
jo
imul
mov
push
adc
loop
or
jg
cmc
cwtl
mov
sarl
adc
inc
inc
pop
stos
inc
loope
jns
mov
mov
xor
cmpl
add
xor
pop
adc
out
decl
xchg
xchg
mov
or
fimull
imul
andl
fisubrs
mov
push
ret
iret
sub
ljmp
cmp
mov
mov
pusha
mov
push
mov
or
pop
and
jns
dec
adc
fstl
std
add
std
sbb
adcb
sbb
jnp
mov
adc
or
movb
icebp
or
std
inc
aaa
xchg
xor
in
sbb
push
jmp
push
pop
xor
sub
and
pop
ds
fists
cmp
xlat
or
push
push
stos
inc
daa
ss
cmp
dec
lret
jne
insl
cmpsl
sbb
pushl
daa
inc
adc
or
fldt
icebp
xchg
sbb
bound
mov
pusha
mov
sahf
inc
pushl
dec
add
insl
jl
aaa
imul
pop
cltd
pusha
sti
adc
std
or
ret
adc
sub
cmpsb
mov
cld
mov
scas
test
xchg
cmp
xchg
xchg
icebp
test
jno
inc
adc
jl
and
sub
je
push
dec
stos
adc
fidivrs
add
stos
and
xchg
cmc
imul
test
loopne
addr16
das
ljmp
sti
adc
jge
mov
dec
scas
mov
repnz
mov
jae
out
xchg
dec
push
out
jg
jl
or
fwait
push
ret
cmc
pop
stos
push
xor
fstp
mov
inc
mov
and
or
push
jge
jmp
subb
lret
bound
daa
sbb
call
icebp
xor
push
sbb
pop
xlat
cmp
loope
loop
repz
inc
adc
arpl
insl
in
sbb
xchg
pop
je
pop
icebp
push
fstpl
test
mov
std
add
addl
sub
arpl
ds
mov
jmp
mov
or
aas
iret
push
sbb
push
dec
mov
mov
aaa
dec
mov
xorb
mov
lods
inc
push
ljmp
and
bound
pusha
jo
pop
clc
adc
jb
fistpll
pop
sub
mov
cld
jge
mov
push
mov
mov
call
fisubrs
cmp
ss
push
lahf
dec
icebp
lds
lcall
mov
sbb
jle
mov
pop
hlt
iret
add
mov
xor
add
push
mov
xchg
cmp
mov
xor
mov
jg
push
adc
pop
mov
jg
jno
mov
shlb
rolb
cmp
inc
sbb
push
jo
in
pop
std
pop
dec
pop
mov
pop
in
sub
pushl
push
or
and
jnp
mov
push
pop
adc
decl
jns
and
mov
rcl
dec
insl
mov
orl
lea
mov
mov
mov
xor
jo
jg
push
sbb
les
pop
popa
stos
or
movsl
cwtl
add
dec
repnz
push
movb
push
xor
in
or
mov
mov
pop
jbe
sbb
sub
test
stos
shrb
xchg
mov
cmp
mov
push
out
pop
mov
rcrl
fsubrs
les
ficomps
mov
push
push
les
cmp
mov
push
add
adc
jle
outsl
pop
arpl
insl
mov
xchg
fildl
ja
shrd
jmp
fwait
jmp
adcb
mov
pop
and
insl
dec
cmc
pop
adc
int
mov
mov
outsb
imul
and
inc
push
xchg
pop
insb
cs
jnp
mov
inc
pop
cmp
dec
mov
pop
in
gs
fists
shll
jnp
out
sub
orb
clc
xor
outsl
mov
mov
fisubs
fisttps
add
ja
int3
lret
lcall
pushf
rolb
out
push
add
negl
js
mov
cmp
push
lret
jo
mov
ficompl
inc
jge
and
cwtl
call
in
iret
movl
leave
mov
loope
shlb
add
xchg
frstpm(287
aaa
nop
lahf
jg
lods
call
xchg
xorb
xchg
or
popf
jge
jp
mov
arpl
addr16
add
inc
aam
std
scas
add
loope
fcmovnb
das
and
std
arpl
or
cmp
mov
fwait
pop
mov
fidivrl
mov
jbe
inc
jg
jmp
mov
test
loop
or
sub
popa
insb
cltd
inc
and
and
or
push
pop
cmp
mov
xchg
outsb
add
rcll
scas
inc
jno
mov
sbb
cmpsl
mov
popa
test
pop
push
jb
loopne
mov
xor
mov
pop
popa
loopne
mov
fbld
sti
fsubrl
into
scas
movsb
or
and
or
vunpckhps
pop
out
test
sbb
mov
or
out
or
and
ret
push
add
cmpsl
je
test
cmpsl
sub
cmp
xchg
stc
pop
stc
sub
roll
mov
mov
add
mov
div
cmp
decl
pop
jbe
sbb
sub
mov
pusha
push
nopl
es
cli
scas
scas
sarb
scas
les
xor
call
cs
mov
pusha
ljmpw
pop
pop
sbb
or
dec
pop
orl
in
add
xorl
lds
mov
aaa
add
or
sbb
xchg
pusha
cmp
or
lea
sub
jbe
or
fstps
mov
cmpsb
push
jmp
and
jnp
mov
out
fidivs
ss
add
sub
add
mov
mov
sbbl
ds
test
xor
jo
mov
jp
movsl
aas
fdivp
adc
xchg
fmull
stos
dec
push
inc
jae
pop
jae
jno
dec
insb
insl
das
scas
lea
jmp
pop
xor
gs
push
int3
cmp
cmp
andl
in
dec
adc
and
push
pop
bound
cmp
inc
sbb
jb
mov
jmp
loopne
arpl
xor
add
lods
mov
xorl
jo
inc
xor
sub
or
or
xor
aam
inc
mov
sub
in
jnp
shlb
mov
popf
test
outsb
fistl
and
iret
mov
push
shlb
fs
add
imul
out
mov
push
movsb
popa
iret
out
add
adc
xchg
adc
in
inc
jns
fistpl
leave
pop
mov
and
test
or
sti
shl
imul
icebp
or
int
test
dec
cli
rdtsc
std
push
hlt
lea
lods
mov
add
dec
and
add
aaa
mov
ja
fcomip
scas
xlat
cmpsl
data16
push
sbb
sbb
push
sbb
aas
inc
dec
rorb
and
adc
subb
or
mov
mov
mov
add
xchg
adc
mov
push
jbe
sarl
fnstsw
dec
mov
inc
mov
daa
enter
push
shlb
push
and
dec
dec
pop
test
mov
pop
rorb
sub
cmp
and
shlb
fists
int3
sbb
in
pusha
adc
mov
sub
inc
and
pop
aad
or
mov
sbb
sub
sbb
popl
in
stos
add
push
xor
add
inc
loopne
gs
cmp
mov
sub
add
inc
push
ret
sbb
stos
add
insl
std
enter
push
cwtl
and
push
dec
lcall
or
in
inc
xor
popa
aam
pop
push
inc
enter
add
push
mov
mov
jmp
sahf
xor
jns
ss
xchg
or
shl
hlt
sub
jne
mov
push
xor
xchg
arpl
lea
ret
push
or
mov
add
shlb
mov
add
pop
shl
out
popa
lahf
xor
sbb
cmpsb
nop
pop
push
push
int
aaa
rcrl
lea
add
or
fsubrl
lock
sbb
hlt
adc
cmp
pushf
jns
xor
jp
insb
sub
pop
jge
adc
cmp
rorb
or
popa
into
cmp
test
mov
mov
add
or
scas
mov
inc
insl
movsb
stos
xchg
stos
popf
push
popf
shlb
imul
xor
test
shrb
pop
fnstcw
adc
in
roll
xchg
loopne
mov
shll
in
and
add
pop
shr
les
jp
sub
xor
lret
es
mov
xor
jb
mov
sbb
fcom
inc
push
in
imul
mov
insl
in
sub
jb
daa
jbe
mov
aaa
inc
cmp
paddd
je
xchg
leave
ret
dec
fwait
ret
and
mov
loopne
aad
shrb
ret
loop
or
add
jb
mov
addb
ret
cmc
out
fdivrs
sarl
jl
inc
push
push
sbbb
xor
mov
inc
aaa
cmc
mov
or
mov
fs
cli
shrl
lods
or
arpl
adc
mov
push
faddp
lods
test
sbbl
pop
fcom
mov
pop
jl
cs
dec
adc
xchg
xorl
je
mov
negb
clc
iret
out
arpl
rclb
lea
pop
outsl
push
push
ljmp
fildl
sbb
clc
fistl
jmp
xor
lods
roll
pusha
sbb
lods
xchg
test
mov
adc
or
adc
loopne
jmp
mov
xchg
lret
jmp
add
aam
mov
mov
lahf
push
cmpsb
ffreep
orl
std
sbb
adc
jne
daa
sub
push
icebp
inc
inc
sbb
shrl
xor
xor
dec
je
das
jae
inc
mov
fnstsw
or
dec
insb
cwtl
shl
pop
xchg
mov
jp
shrb
push
push
daa
scas
mov
inc
push
out
sbb
add
xor
sub
sub
dec
scas
inc
mov
pop
and
mov
adc
inc
or
adc
pusha
xor
dec
lahf
inc
push
push
mov
mov
and
sub
fimull
sahf
aad
push
jno
hlt
sub
outsl
cld
push
jp
jp
cmp
out
out
std
mov
decl
jbe
add
xchg
pop
hlt
push
ja
xlat
dec
inc
adc
pusha
add
add
rolb
addl
add
popf
push
test
data16
push
or
shrl
fistpll
arpl
lds
iret
xchg
adc
and
fdivr
jbe
cmpsb
mov
jge
pushf
or
push
xor
mov
mov
add
or
add
out
lret
add
add
aas
mov
adc
add
xlat
mov
or
aaa
aad
loope
cmp
rcr
inc
push
aaa
vandpd
lock
add
ror
ljmp
fcmovb
sub
dec
add
and
pop
push
push
lock
adc
xor
add
xlat
rclb
mov
xor
ss
pop
xchg
jge
lret
jne
lock
push
fcompl
andl
and
jb
jg
add
adc
mov
gs
jo
pop
mov
sub
lea
pop
hlt
push
push
jb
mov
je
mov
dec
xchg
insb
loopne
nop
inc
enter
pop
push
cwtl
cltd
sub
enter
ljmp
mov
jnp
lods
dec
aad
pop
loope
jns
and
jo
shll
inc
das
mov
insl
mov
fistl
lock
sahf
inc
mov
jbe
pop
or
push
push
cmpsl
hlt
test
mov
push
cmp
cld
mov
and
or
mov
das
adc
in
test
push
inc
or
mov
mov
push
outsb
repnz
or
adc
loop
ja
mov
cs
xchg
push
mov
test
sti
in
bound
mov
xchg
inc
sub
dec
fwait
call
out
xchg
pop
cmp
xchg
jle
dec
sub
and
jns
test
inc
xchg
imul
mov
sbb
xor
mov
scas
mov
cmp
js
in
lods
sub
add
js
addb
jecxz
cld
jg
pushl
mov
movsl
out
addl
jl
jo
pop
cli
shrl
mov
cmc
arpl
or
push
cmp
lods
aam
movsl
or
insb
dec
and
outsb
dec
push
roll
dec
jbe
add
pop
lods
add
mov
hlt
mov
repz
or
xchg
mov
rep
mov
ret
sbb
or
test
out
aaa
add
sub
add
ja
sub
sub
pop
in
mov
inc
lods
xlat
and
push
aas
loopne
inc
push
insl
push
xchg
movb
in
pop
sbbb
aaa
movsb
call
ljmp
sahf
mov
dec
mov
pop
xchg
sub
pop
pop
and
jno
mov
add
sti
push
sti
push
jl
add
movsb
pusha
sub
add
mov
mov
jne
aaa
es
push
or
push
out
xchg
repz
or
push
inc
xor
lods
movb
cmc
or
push
rcll
out
dec
sub
jmp
adc
sbb
das
add
sub
nop
mov
mov
les
shrl
jecxz
out
es
add
daa
popf
pop
sbb
imul
fucomi
dec
je
add
add
add
fisubrl
pusha
hlt
inc
in
pusha
call
jmp
gs
inc
mov
inc
into
hlt
sbb
mov
xchg
test
fcom
insl
push
pop
fs
mov
mov
add
add
and
sahf
add
mov
sbb
incl
das
sbb
inc
mov
jae
lds
nop
mov
lahf
js
mov
inc
mov
adc
push
loop
push
pop
mov
or
loop
or
adc
jle
mov
cld
adc
inc
sbb
fiaddl
shlb
aaa
repz
pop
inc
dec
inc
xor
nop
add
stos
outsl
stc
xor
or
and
lret
mov
int
insb
xor
pop
rolb
outsb
lea
stos
repnz
jbe
mov
lret
or
dec
push
imul
mov
stc
jecxz
xchg
xchg
add
mov
inc
cmpsb
jmp
xor
outsl
cltd
jecxz
dec
stos
jp
mov
cmp
mov
outsb
dec
mov
or
icebp
jns
jp
flds
push
dec
adc
mov
xchg
addb
jp
icebp
shll
add
push
jp
or
sbb
test
adc
clc
stos
stos
fs
dec
and
pop
sub
loopne
sub
pusha
sub
adc
in
int
pushf
hlt
stc
movsb
sub
aaa
xor
sub
daa
xor
call
cwtl
and
pusha
aad
mov
stc
movsl
nop
ja
pop
aad
cmpsb
adc
ret
inc
inc
pushf
shr
repnz
inc
test
jecxz
sbb
sbb
lods
out
add
sub
push
test
sub
test
cmp
mov
pop
adc
or
mov
lock
insb
sub
push
xor
cli
or
and
ret
int
push
sti
xor
sub
xor
test
sbb
add
sbb
shlb
pop
cmp
push
cmp
rorl
add
xor
addr16
fisttpl
add
shlb
cmc
xor
ret
jmp
push
rcrl
je
cmp
push
mov
jae
int
rclb
and
and
into
pop
dec
bound
jg
cmc
and
cs
dec
push
pop
sbb
ljmp
push
mov
xor
mov
and
dec
aaa
mov
push
fisttps
rep
cmpsb
add
fbstp
test
fldt
ss
rcrl
lahf
dec
mov
stos
daa
test
xchg
jns
mov
fwait
add
testb
push
mov
sarl
add
sbb
inc
scas
test
dec
mov
sbb
sbbl
dec
int
leave
dec
jno
aaa
cmp
adc
test
push
orl
pop
or
xor
push
xchg
xchg
loop
pop
mov
cmp
loopne
nop
inc
push
imul
push
mov
adcb
xchg
pop
inc
lods
lret
xchg
jae
fists
rcrb
adc
add
xor
mov
movsl
hlt
or
jp
push
enter
mov
pop
popa
aaa
sub
shlb
xor
ja
js
outsl
aad
xor
fimuls
shrb
sub
sub
cltd
xor
xor
sbb
outsl
outsb
pop
dec
pop
rcl
push
imul
pusha
fsubrs
repnz
add
adc
nop
clts
es
enter
shlb
icebp
icebp
inc
and
or
adc
pop
cmp
outsb
cbtw
mov
pop
loop
aam
lcall
and
cltd
loope
lock
ds
fmuls
adc
jge
in
pop
mov
push
push
lods
pop
inc
inc
push
insb
jl
addb
jo
xchg
pusha
fimuls
fldenv
add
sub
and
push
jecxz
inc
cs
dec
or
mov
mov
mov
sti
mov
push
push
int
js
mov
xchg
or
jns
pop
mov
add
and
lock
mov
push
pop
inc
dec
sbb
out
lcall
pop
repnz
pusha
xchg
mov
loopne
jle
or
xchg
pop
dec
inc
out
or
dec
out
fsub
iret
pop
ja
ficomps
fstpt
mov
dec
mov
sti
cmc
add
or
movsb
movsb
and
dec
test
fsubs
inc
push
insl
jmp
or
or
lock
adc
pop
dec
clc
sbb
in
cs
mov
lcall
in
inc
aad
jecxz
das
pop
inc
lods
jbe
leave
mov
adc
mov
xchg
inc
mov
adc
ficompl
dec
loope
sbb
stc
jmp
xor
mov
push
pusha
stos
adc
nop
ret
js
incb
jge
call
add
sbb
das
jo
loope
jge
filds
sbb
mov
ret
add
aas
jg
loope
jecxz
lea
dec
pop
and
outsl
movsl
adcl
cwtl
push
scas
ljmp
adc
ljmp
push
add
sub
stos
sbb
dec
mov
cmpsb
push
lahf
outsl
out
and
arpl
add
add
pop
in
sub
sub
daa
or
call
sbb
jge
xchg
or
je
mov
sbb
inc
subl
sbb
mov
jle
push
test
dec
mulb
jb
mov
stos
and
add
rorb
hlt
int
pop
pusha
push
mov
shlb
out
mov
pop
push
subb
aad
jmp
stos
jae
or
jb
pop
mov
jg
rcl
scas
jbe
icebp
lahf
roll
adc
fcoml
decb
and
into
jns
xor
mov
jbe
or
jmp
push
push
mov
cli
mov
aad
push
cmp
test
int3
pop
pop
mov
inc
rolb
and
aad
jle
mov
es
inc
cmp
jg
pop
mov
jnp
into
xchg
adc
add
push
xchg
outsb
ret
rcr
fsts
mov
add
out
and
fbstp
lcall
push
xor
enter
mov
psrad
es
inc
hlt
mov
daa
xchg
add
dec
cld
aaa
prefetchw
or
clc
push
enter
xchg
inc
xor
cs
jbe
in
pop
mov
cmpsb
dec
pop
in
xchg
sahf
hlt
cmc
mov
pop
jmp
sub
sub
les
inc
push
sbb
mov
mov
cmpsl
repnz
inc
test
inc
lods
or
inc
adc
and
dec
sbb
leave
ja
jge
std
insl
and
aas
push
adc
cmc
cli
ja
jb
xor
mov
and
sub
add
idivl
loop
out
enter
xchg
das
in
push
insl
add
mov
fisttpll
sub
in
mov
in
cli
inc
push
jo,pn
adc
adc
jnp
cmp
mov
mov
fs
push
fstpt
imul
and
sti
incl
movsl
ret
or
sub
mov
jg
fs
pop
clc
leave
je
mov
fistpl
xor
stos
in
pop
add
jp
sub
mov
pop
cmc
test
xchg
and
ljmp
bound
out
mov
dec
mov
stos
mov
out
fsub
jl
sbb
mov
shrb
jbe
jp
jl
faddl
add
jp
and
pop
add
mov
and
jno
call
xor
or
pop
pop
or
adc
push
jmp
xor
cmp
das
outsl
add
mov
out
adc
lsl
and
outsl
ja
pop
push
add
jbe
xchg
cwtl
ror
sti
jg
lcall
cltd
lret
scas
dec
ds
adc
lret
shlb
incb
ret
cmp
sbb
xchg
cmp
fstps
in
cli
sub
sub
and
fdivr
sbb
dec
mov
mov
and
jg
loop
ja
lea
cmp
pusha
sub
adc
pop
or
and
jl
shlb
xor
leave
stos
push
inc
in
adc
aam
fcoms
mov
inc
push
cmc
orb
pusha
and
pop
sarl
andb
dec
ss
je
add
dec
adc
adcb
clc
hlt
mov
inc
cmp
pop
dec
pushf
loope
pop
mov
push
fisttps
jb
sbb
gs
push
test
add
ret
jbe
insl
and
insb
or
lahf
jbe
lcall
faddl
lods
test
lds
lock
je
add
rcrb
jp
orl
stos
insl
push
mov
mov
add
mov
pushf
imul
loop
loope
jmp
push
push
cmp
and
mov
jecxz
in
dec
divl
repz
push
push
jnp
clc
hlt
mov
mov
cmpsb
into
mov
lds
fs
pop
xor
aas
sub
in
in
mov
in
mov
leave
fcom
or
stos
pop
aas
lock
stc
stos
fldpi
xor
stc
add
sub
xchg
lods
roll
cmp
or
jmp
inc
stc
inc
movsb
leave
out
add
mov
inc
xor
xchg
movsb
ljmp
jns
dec
or
js
mov
je
mov
cltd
fisubl
shlb
lcall
mov
int3
idivl
xor
pop
lock
mov
or
pop
nop
xchg
adc
add
mov
mov
lock
mov
into
jnp
sarl
mov
mov
imul
std
ja
aaa
mov
inc
mov
rcrb
cmp
mov
jb
fcoml
add
leave
lcall
sbb
pusha
inc
fadds
roll
and
outsb
inc
decl
xchg
js
loop
out
les
out
mov
insl
or
mov
dec
iret
mov
add
xchg
adc
adc
lods
dec
jbe
xchg
jmp
push
test
or
push
out
jl
mov
add
orb
mov
das
fldl
jbe
sub
push
sbb
add
ror
and
pusha
or
js
jne
dec
std
jno
fistl
stos
dec
sub
add
orb
dec
jmp
pop
inc
ljmp
mov
loope
fnstenv
push
push
bound
repnz
es
outsl
negb
mov
and
fldt
pop
cld
mov
icebp
jae
loope
pmuludq
cwtl
mov
aaa
pop
loopne
jnp
mov
rcll
push
dec
insb
pop
lahf
push
mov
fucomip
je
sub
mov
jmp
movsl
movsb
sub
cmp
xchg
mov
cwtl
add
cmp
lods
add
test
dec
or
xchg
push
mov
jo
std
lcall
dec
imul
loopne
sbb
sti
lcall
sub
cmp
or
mov
lahf
mov
test
push
faddl
ret
inc
jmp
cmp
inc
popa
out
lret
in
andl
jmp
rolb
sub
cmc
popf
out
inc
das
mov
cmp
pop
cmp
dec
pop
js
push
pop
insb
sbb
xor
push
mov
mov
pushf
pop
jle
cmpl
ret
dec
popf
jl
or
jo
in
adc
dec
sub
rorb
pop
test
mov
rcrl
jge
mov
sub
add
testb
out
es
call
mov
xchg
imul
and
mov
jno
or
jo
push
aad
add
sbb
int
jmp
pop
cs
pop
pop
adc
arpl
dec
cmp
mov
shrb
enter
sbbl
dec
add
cmp
cld
mov
ficoms
ljmp
daa
mov
stos
mov
mov
mov
xchg
pop
clc
aaa
sub
int
inc
sub
insb
jge
hlt
xchg
enter
pop
and
jg
pop
test
add
arpl
pop
test
and
mov
dec
scas
pop
xchg
icebp
decl
fwait
aas
shll
pusha
adc
ret
and
cmp
push
dec
mov
cmc
pop
pop
adc
insb
add
mov
cmp
lahf
fdivr
test
es
mov
in
insl
aaa
mov
imul
adc
sbb
pop
adcl
scas
pop
mov
push
loop
inc
mov
int
subb
mov
pop
jecxz
adc
or
movsl
sbb
mov
mov
repz
xchg
fsubl
push
jae
test
and
xchg
cld
jg
outsl
outsl
cltd
inc
incb
inc
cs
in
dec
lds
xchg
shr
inc
inc
aaa
hlt
dec
sub
push
stos
negl
pop
xchg
decl
sub
add
jb
mov
xor
xchg
icebp
scas
cmpsb
cmp
ja
cld
icebp
xor
inc
insl
cmp
and
rorb
popa
outsl
popa
fisubl
ds
xchg
aaa
push
pushf
or
mov
adc
mov
lods
ret
bnd
rorl
out
clc
mulb
jp
mov
push
sbb
sub
sub
or
add
push
or
xchg
aam
adc
pop
and
push
cld
sub
xlat
adc
jb
movsb
pop
sub
out
cmp
jg
jo
lds
mov
jo
std
xchg
movups
and
xor
push
push
aam
mov
negb
aas
faddl
hlt
sbb
out
roll
rcrl
cmp
mov
aam
push
cmpsb
mov
mov
add
mov
je
dec
mov
cmp
es
jbe
sbb
or
add
ljmp
or
pop
or
sbb
aam
andl
mov
cmpsl
and
not
inc
test
pop
sbb
push
push
sbb
mov
js
out
sti
jo
nop
jge
jne
aam
icebp
or
addr16
dec
or
andb
outsb
stc
push
xchg
mov
add
or
int3
push
movsl
cmp
sub
inc
cld
sbb
add
std
push
push
popa
bound
jp
xorb
add
pop
jmp
ret
mov
pop
sbb
xchg
sbb
and
xchg
out
fldenv
xchg
push
popf
mov
or
daa
jge
mov
dec
inc
adc
jg
mov
adc
jnp
in
mov
push
xchg
fiadds
cwtl
mov
add
arpl
add
cld
sbb
pop
mov
adc
inc
add
adc
pop
adc
out
mov
adc
push
add
fisubs
mov
pop
ret
xchg
cmp
in
rcr
fwait
pop
push
adc
pop
faddl
mov
inc
int3
test
rcrl
filds
xor
pop
sub
push
xor
cmp
je
mov
and
movsl
out
stos
add
inc
add
jb
mov
sub
and
mov
stc
ret
add
and
mov
not
jae
aam
ja
std
add
adc
pop
movb
adc
mov
adcb
arpl
jbe
cld
inc
and
pop
sub
add
ret
iret
stos
mov
in
add
mov
jp
cmp
add
and
sub
loopne
mov
adc
in
jo
xor
dec
adc
push
inc
inc
jnp
jg
fsts
lahf
jp
addb
icebp
mov
popa
cld
call
shlb
xchg
mov
stc
mov
and
test
std
inc
xchg
jb
ret
mov
xchg
ss
pop
jmp
je
loop
push
addl
dec
dec
loope
das
sbb
cmp
jmp
push
les
cld
jmp
xorl
stc
lock
imul
pop
inc
addb
jo
and
cli
push
mov
jge
das
repnz
mov
or
dec
cld
pop
in
shll
iret
or
call
push
mov
sbb
test
in
sub
xchg
and
lock
daa
dec
or
decl
fidivs
movsb
pop
inc
push
ffreep
push
mov
orb
clc
in
cmp
rol
mov
push
call
mov
iret
cmp
ror
nop
xor
add
cmp
loope
mov
mov
outsb
call
loop
leave
or
jns
ret
mov
mov
stc
lods
lret
jle
inc
loopne
dec
out
and
in
and
dec
or
movsb
aad
jg
xchg
dec
and
inc
movb
xchg
imulb
and
loopne
loop
mov
dec
mov
cmpsb
dec
or
jp
push
fnstenv
fildl
and
sub
fistl
aaa
and
sub
jb
mov
pushl
or
cmc
mov
pop
adc
ja
pop
mov
in
push
jge
aaa
nop
ficoml
jns
scas
mov
dec
cltd
inc
sub
add
and
inc
adc
and
cmp
fcoml
mov
orl
ja
sbb
cmc
xchg
push
dec
stos
nop
in
fcoml
lahf
popf
push
pop
xchg
mov
add
faddl
cmp
je
add
push
sub
xor
fwait
lods
cmc
cmp
xchg
push
rorl
fst
sbb
pusha
push
and
sti
lahf
inc
or
jno
fsts
mov
and
dec
inc
stc
add
mov
fstpl
repz
mov
inc
pop
dec
jo
icebp
xchg
mov
faddl
aas
rorl
sbb
push
int
lea
stc
mov
into
sahf
subb
ret
gs
adc
add
mov
push
mov
loop
fldl
add
adc
and
xlat
push
inc
jo
cmpsb
xor
push
loopne
pop
dec
sbb
xor
push
int3
scas
into
subb
add
cli
sub
or
cmp
push
mov
ret
pop
xchg
loopne
out
mov
add
dec
shll
fadd
pop
push
cld
fmull
sub
push
sub
push
inc
stos
add
or
or
call
test
mov
push
pop
cmc
sub
or
pusha
adc
xor
cmp
cmp
inc
in
aaa
fcomps
add
call
inc
pusha
lret
add
add
adcb
sbb
std
pusha
adc
add
add
enter
in
cltd
loopne
mov
dec
sub
adc
add
and
nop
adc
das
jae
mov
lock
enter
adc
xlat
sarl
addb
xchg
aad
mov
and
movsb
mov
fisubl
lock
es
fwait
mov
pop
xor
adc
rcll
stos
ficoms
das
sahf
push
jg
ret
xor
lcall
xor
add
inc
dec
or
sbb
fmull
push
fildl
repz
push
ja
in
cwtl
inc
sti
add
mov
dec
addb
adc
or
sub
in
push
scas
ficompl
mov
inc
repz
fwait
cmp
sbb
mov
push
repnz
adc
push
push
inc
sbbl
sub
in
daa
mov
shl
in
cld
pop
push
add
jmp
push
add
cmpl
in
test
data16
inc
pop
push
mull
scas
push
fists
cmpsb
mov
add
pop
cmc
stos
or
sbb
sbb
lcall
cmp
jmp
mov
in
pop
mov
test
inc
sbbl
xchg
push
mov
cmpsb
xchg
dec
sbb
movsb
gs
or
jb
add
pop
aaa
mov
shrb
mov
cs
mov
inc
clc
sub
roll
shrb
fldt
testl
adc
sub
icebp
bound
jl
daa
jbe
cmp
fptan
dec
add
clc
mov
xor
mov
inc
mov
lods
mov
add
fucomip
dec
adc
inc
les
cmp
cmp
test
sti
jg
aas
jge
mov
sub
jae
cli
incb
push
aam
cwtl
push
loope
push
mov
arpl
dec
add
lods
jmp
push
cmp
push
ficoml
adc
dec
adc
mov
xor
mov
test
jo
test
rclb
lods
dec
je
mov
cmp
xchg
fwait
outsb
jl
in
aad
ss
mov
das
mov
andb
arpl
xchg
cmp
icebp
mov
pop
push
lods
nop
push
std
inc
jl
decb
sahf
adc
mov
nop
fcoms
sbb
xchg
mov
sbb
or
daa
movsb
sub
mov
adc
mov
push
dec
ret
ret
adc
std
sbb
mov
jecxz
dec
sbb
dec
inc
adc
fbstp
push
or
pop
aad
test
or
std
stos
repnz
sbb
mov
adc
imul
mov
lods
mov
mov
shrb
and
enter
fildl
cmp
xor
add
and
pop
pusha
adcl
cmp
push
std
push
int3
push
stc
adc
rorl
pop
cmpl
fdivs
ljmp
bound
pusha
dec
mov
aaa
add
test
sti
pop
ss
outsb
cld
mov
daa
subl
int3
in
mov
lock
mov
fisttps
ja
add
nop
cmpb
incb
out
popw
loop
add
dec
jmp
in
in
jle
pop
stos
or
shrb
loope
and
jl,pn
imul
cmc
loopne
mov
or
insb
and
or
and
test
xchg
xchg
push
sbb
mov
dec
fidivs
and
fnstcw
and
sbb
mov
xor
mov
inc
inc
shlb
push
and
xchg
cltd
mov
repz
ret
push
movsl
fists
add
jo
jb
mov
push
adc
inc
sub
aas
mov
dec
addb
aas
xchg
aaa
mov
xor
ss
aaa
hlt
cs
jo
mov
cld
add
popf
orb
cmp
test
pop
pop
in
push
ljmp
fists
cwtl
loope
in
aaa
fsubrs
les
scas
idivb
sub
loope
mov
push
or
insl
jg
inc
push
inc
les
dec
push
shll
stos
adc
push
and
adc
arpl
add
push
out
jne
pop
dec
push
test
outsl
dec
adc
sbb
dec
popf
popa
mov
add
cwtl
xor
in
xchg
into
pop
add
lret
xchg
pop
dec
jae
pop
test
outsl
sbb
pop
shll
outsl
push
and
pop
lock
call
mov
xor
ja
call
pop
push
jmp
jb
mov
mov
insl
dec
mov
sbbl
in
push
push
push
pop
sub
and
arpl
jmp
fcompl
jo
pushf
into
ret
icebp
jno
je
stos
imul
cmp
sub
pop
mov
mov
ljmp
icebp
test
push
sub
mov
fisubl
mov
addr16
leave
lcall
adc
fiaddl
mov
jg
sub
scas
xor
sahf
add
loop
iret
push
xor
sub
or
dec
out
adc
and
sbb
xchg
imul
aam
jmp
push
insl
xlat
cmp
sar
push
je
out
xor
imul
push
nopl
sub
fcmove
inc
jp
ds
xchg
ljmp
fsubs
pop
js
inc
dec
scas
shrl
add
sbb
shl
mov
sbb
gs
inc
pop
mov
pusha
mov
icebp
pop
mov
jo
cmp
dec
dec
pop
push
sbb
and
jecxz
lcall
in
das
xor
je
test
push
cmc
dec
icebp
or
inc
mov
sbb
sbb
call
je
shr
loope
fldl
and
xor
and
push
scas
imul
in
mov
mov
ss
testl
mov
sub
stos
mov
movsl
sub
movsl
in
mov
cmp
jg
das
sub
xchg
push
shl
and
repnz
test
pop
and
pusha
sbb
outsl
std
call
aas
mov
sub
data16
sbb
inc
std
cmp
aad
es
out
push
fcomps
call
orb
data16
lahf
fimuls
outsb
mov
int
rorb
xchg
ljmp
pop
lods
jle
nop
sub
fisubrl
outsl
das
mov
cld
or
pop
dec
and
push
clc
add
fldl
jecxz
outsb
xlat
mov
ret
push
popa
push
lods
and
cmp
cmp
sbb
xchg
testb
inc
roll
sahf
inc
sbbl
sbb
sub
inc
push
add
sbb
lods
fwait
cs
test
inc
testb
mov
fcoml
in
popa
out
xchg
pop
scas
lcall
das
or
xchg
repnz
dec
fiadds
jl
cmp
int3
out
mov
dec
fwait
dec
sti
fisubrl
pop
jecxz
loope
loope
xlat
inc
xor
mov
and
push
sbb
dec
adcl
hlt
arpl
scas
jo
outsl
inc
lods
mov
fdivr
test
out
popf
mov
push
decl
pop
adc
sub
fsub
push
or
daa
xor
in
int
test
les
jbe
js
decb
push
mov
mov
ss
movsl
leave
pop
adc
mov
push
mov
xor
and
push
ret
pop
push
and
sub
mov
movlps
cmpb
inc
push
addr16
ljmp
icebp
pop
int3
pop
lods
out
dec
shrb
mov
fcmovu
inc
xchg
push
sbb
repnz
push
int3
xor
shld
push
cmc
xor
xor
inc
pushf
jne
xorl
ret
mov
enter
adc
nop
mov
les
shll
lods
lret
add
aad
sbb
lods
stos
adc
and
push
push
arpl
ror
inc
jl
outsb
lret
pop
push
sbb
adc
js
sahf
scas
mov
xchg
adc
int3
repnz
test
and
out
hlt
fsubrl
push
test
push
enter
inc
or
mov
sbb
pop
cwtl
xchg
aas
dec
sub
mov
inc
xadd
adc
sub
xchg
mov
add
sarb
mov
movsb
and
sbb
sbb
loopne
push
roll
dec
cmp
sbb
mov
enter
data16
cmp
or
sbb
lcall
or
push
adc
inc
jae
mov
dec
out
push
fs
inc
pop
sbbl
jp
mov
jle
add
test
push
cmp
cmp
adc
xchg
dec
push
dec
cmp
and
mov
fstpt
inc
add
dec
jno
jp
shlb
and
inc
sub
cltd
aad
or
adc
jg
xchg
push
pop
sbb
out
mov
das
mov
stos
inc
in
pop
mov
lds
add
lds
clc
dec
cld
inc
std
sarb
fcmovb
xor
inc
xor
sbb
cmpl
mov
shlb
mov
std
inc
add
add
or
bound
enter
xchg
ljmp
inc
pop
and
mov
sub
addb
push
lahf
sub
clc
mov
fwait
jne
pop
xchg
mov
mov
push
jmp
imul
mov
jg
sbb
add
add
xor
incl
sahf
aad
daa
in
cmp
and
call
sbb
adc
add
test
das
push
xor
and
xchg
sbb
mov
lret
stos
xorb
fisttpl
aaa
ss
mov
inc
adc
das
fcmovnu
push
call
out
or
clc
loope
imul
adc
mov
aaa
or
jmp
stos
test
jecxz
shl
test
mov
and
push
cs
cmpl
mov
cmp
mov
cli
or
sbb
sbb
mov
cmpl
in
jbe
push
xor
mov
xchg
js
dec
jmp
add
std
dec
scas
dec
pusha
push
pusha
popa
mov
ljmp
popa
mov
scas
movsb
movsb
adc
ja
in
jbe
es
jge
pop
add
ficomps
cltd
cmc
dec
jno
adc
mov
subb
ss
jl
nop
cltd
fisubl
mov
sbb
push
inc
xor
mov
js
jg
cltd
sub
lods
lret
mov
dec
pop
ds
ljmp
push
cs
pop
loop
pop
subl
jg
push
sbb
pop
mov
mov
mov
mov
bound
mov
cmp
sbb
or
mov
bound
adc
lea
xchg
lret
cmp
gs
xchg
jne
nop
outsl
mov
das
lock
dec
shll
popf
lock
sbb
movsb
add
adc
dec
xor
loopne
pop
jne
stc
mov
out
loop
jne
inc
cltd
push
pop
psrad
and
mov
jge
fcompl
ja
jg
inc
cmp
aam
lds
js
jb
or
or
pop
out
addb
sbb
lds
sbb
sbb
pop
push
cmovl
xchg
or
lds
jo
shr
add
outsb
dec
in
mov
fstl
imull
pop
or
push
xchg
pop
mov
lds
orb
push
addb
or
fdivrs
leave
sub
mov
das
xchg
xchg
sub
and
out
lods
push
push
xor
fs
sub
shr
inc
je
xchg
dec
xchg
push
mov
mov
adc
cmp
add
add
jle
dec
cltd
mov
sub
mov
sarb
repnz
pop
sub
mov
mov
add
sar
setne
cmp
xor
cld
lods
xor
add
inc
dec
pop
sub
jnp
mov
adc
xor
call
cmpsb
out
movl
xchg
bound
push
sub
mov
orb
aas
xor
andl
add
mov
jmp
mov
adc
outsb
arpl
mov
push
or
push
xchg
mov
push
jb
test
push
shll
pusha
bound
pop
add
cmp
mov
pop
and
pop
sbb
aam
or
and
loop
fdivr
ret
or
je
call
and
xchg
xchg
stos
push
add
out
insw
or
dec
cmp
popa
lods
imul
adc
rorb
test
nop
pop
adc
sbb
insb
cmp
scas
xchg
sbb
movsl
int
adc
xchg
std
fildl
in
mov
xor
cld
xor
and
lock
jge
decb
dec
fs
mov
in
mov
fs
push
jp
shr
jl
pop
leave
adc
mov
cld
out
mov
lods
ljmp
jg
cmc
inc
mov
iret
lods
or
rcrb
sbb
sbb
cmc
std
arpl
xor
xor
jno
shll
roll
and
or
les
xchg
jnp
sub
dec
inc
add
cmp
ret
pop
pop
call
pop
or
sub
dec
sub
push
dec
aaa
outsb
call
jbe
or
cmp
lods
nop
out
mov
mov
mov
sub
aad
rorl
lret
jne
add
add
jns
loope
mov
adc
mov
sbb
or
cmpsb
mov
adc
mov
dec
sbb
fdivrl
lcall
pop
or
insl
in
cli
xchg
daa
jmp
fdivr
outsl
sub
push
or
loop
test
out
push
shl
in
clc
mov
or
inc
loopne
add
pop
push
fdivrl
enter
in
idiv
push
dec
add
xchg
mov
dec
pop
movsl
sub
mov
imul
je
pop
rep
mov
adc
push
les
push
out
or
addb
repnz
sbb
mov
jle
stos
ret
or
insl
pusha
test
pop
test
jecxz
sub
add
icebp
and
pop
std
sbb
rcl
pop
aad
push
cmp
and
insb
and
mov
add
call
adc
sbb
aaa
inc
pop
enter
pop
xor
test
push
jne
xchg
lods
ja
mov
sbb
add
and
pop
out
lcall
pop
shrb
mov
mov
adc
mov
push
pop
push
cmp
xor
cltd
rorb
push
adc
stos
scas
fldcw
pop
je
sub
jnp
inc
add
mov
jo
fldenv
or
jmp
repz
pushf
loope
or
adc
testl
sbb
ret
imul
mov
ret
clc
push
cltd
mov
mov
cmp
js
imul
sbb
insb
inc
sbb
sub
mov
xor
pop
mov
jae
push
jge
sub
nop
cmp
and
ljmp
ljmp
mov
push
xchg
mov
dec
shl
push
ja
addr16
cwtl
sbb
push
cmp
es
jp
roll
sbb
loope
aad
clc
cmp
push
jmp
sub
mov
add
je
shrb
sub
cmp
pusha
xor
jno
push
and
cmp
aad
leave
repz
out
fdivs
push
sbb
mov
fs
adc
jns
xchg
fsubs
xchg
mov
sub
cmp
enter
add
call
ss
out
mov
lock
sti
sahf
inc
addr16
mov
or
adc
outsb
testb
jp
and
lds
clc
or
pop
xchg
fmul
loop
push
jg
sbb
sub
inc
mov
fmuls
adc
clc
inc
xchg
ljmp
adc
fsub
inc
or
out
add
mov
dec
mulb
aaa
test
pop
test
fdivp
ja
out
push
adc
xlat
push
bound
test
je
stos
inc
aad
aaa
pop
sbb
or
mov
adc
fisubrs
fildll
jae
inc
fcoml
insl
pop
mov
push
mov
inc
or
dec
rcrl
mov
popa
add
dec
js
ja
ja
andb
insb
mulb
inc
inc
rol
cld
cmp
mov
call
mov
std
dec
cwtl
and
jne
mov
enter
lea
xchg
inc
pusha
jae
test
mov
sbb
sub
loopne
pop
mov
xor
hlt
pop
in
mov
sbb
xchg
int
in
imul
sub
add
xor
lcall
addb
mov
mull
rclb
and
xor
mov
push
mov
jmp
sub
push
out
jl
adc
out
insb
in
jne
subb
jae
and
pushf
sti
adc
jl
divb
lds
rolb
in
popa
push
filds
sti
sbb
add
pop
test
mov
xor
fadd
mov
adc
insb
xchg
sbb
dec
out
shlb
aad
mov
add
imulb
es
jo
dec
xchg
pushf
xor
les
testb
pop
jbe
cmp
jbe
dec
aaa
repnz
scas
dec
out
or
sub
fstps
in
xor
in
jmp
or
aaa
cmp
addr16
sbb
shrl
bnd
pop
jecxz
ficompl
sarb
add
jb
cmpsb
mov
stc
fiadds
xor
aad
dec
jle
sub
inc
rorl
int3
loopne
add
mov
outsb
out
dec
dec
sub
jg
add
lret
push
mov
push
xor
sub
lock
xor
stos
or
add
jb
mov
repz
out
mov
inc
or
xor
mov
sbb
mov
cld
cmpsl
scas
scas
je
lcall
jmp
and
das
lods
loope
inc
or
mov
or
add
sub
dec
rclb
mov
dec
sbbb
jecxz
icebp
das
outsl
xor
inc
mov
inc
mov
jne
mov
pop
in
mov
test
push
xchg
stc
sub
pusha
loope
or
mov
jo
lcall
test
inc
push
mov
sbb
das
mull
ret
xor
jo
inc
loop
sub
sub
xor
push
sub
xor
loop
hlt
inc
rorb
jl
lret
int
out
sbb
std
rcrl
jp
ret
cli
cs
xchg
fmuls
xorl
mov
and
or
cmp
adc
xchg
fisubrs
dec
jne
jg
shlb
dec
cmp
insl
in
cli
frstor
into
and
jns
mov
loop
divl
loope
add
cmp
fisubs
adc
lods
or
cmp
lds
jmp
mov
loopne
inc
sub
cmp
movsl
faddl
and
movsb
and
or
divb
or
jmp
lea
rolb
cld
push
and
jb
xor
pop
ficoms
addb
std
xchg
daa
lods
adc
adc
adc
inc
push
push
ret
dec
fwait
dec
call
rorl
mov
popa
mov
lock
popw
push
dec
aam
and
xlat
mov
add
mov
lock
xchg
fwait
ret
dec
ret
mov
mov
cmp
pop
cmp
jl
mov
lret
data16
enter
loope
icebp
push
push
es
mov
pop
ret
or
inc
or
cmp
jmp
sbb
pop
into
packssdw
and
inc
scas
and
push
outsb
mov
popa
dec
das
mov
stc
xchg
add
inc
xchg
lea
add
sub
add
sbb
cmp
inc
loopne
xlat
cmp
sub
pop
gs
sti
arpl
test
je
pop
mov
ret
xor
mov
mov
clc
call
sti
shl
jne
and
sub
lcall
lret
mull
pop
pop
and
mov
pop
jp
add
sbb
mov
in
fdivs
cmp
add
add
or
push
pusha
imul
mov
das
std
dec
out
pushf
std
xor
faddp
call
push
or
loope
sahf
pop
lret
adc
pop
mov
lahf
or
cmp
enter
mov
std
mov
adc
sbb
shl
divb
lock
and
pop
mov
cs
imul
les
shrl
inc
nop
jo
and
jne
pusha
push
mov
sarb
lcall
cmp
or
sbb
cwtl
sti
cmp
movsl
stos
add
lods
push
mov
jge
xchg
mov
int
xor
and
dec
in
aad
das
scas
outsl
push
or
inc
adc
and
push
orl
sub
loopne
push
pop
jbe
jmp
dec
push
cmpsb
dec
js
and
xchg
sbb
push
addl
clc
daa
icebp
pop
test
add
nop
and
leave
fmuls
push
cmc
sub
lds
mov
movsb
add
mov
jg
mov
mov
nop
test
cmpsl
in
je
enter
insb
sub
and
xchg
add
popa
rorl
sub
inc
xchg
push
outsl
push
sbb
ret
loope
add
outsb
inc
xor
add
pusha
cmp
jp
jnp
inc
mov
lcall
loopne
les
xor
lods
iret
ret
add
dec
sbb
jp
lods
cmp
sub
mov
shll
hlt
xchg
inc
in
push
in
cmc
shll
aaa
xchg
lods
pusha
lock
mov
punpckldq
or
cli
ja
lret
movsb
mov
push
pop
jae
add
and
add
mov
mov
data16
and
jae
rcr
or
and
int
enter
pop
pop
sbb
loop
mov
lock
or
xor
adcb
sub
adc
pop
out
es
repz
fcmove
ret
cmp
push
out
xor
jecxz
loopne
mov
stos
push
jae
jge
or
test
jecxz
xor
cmp
popf
nop
xchg
lret
cmp
cwtl
in
pop
adc
mov
imul
jg
sbb
fisttpll
push
aam
mov
shrl
sub
sub
add
dec
mov
mov
lock
or
cwtl
sub
test
gs
inc
out
loop
leave
mov
pop
add
and
mov
mov
pop
jmp
icebp
cwtl
sarb
adc
mov
cwtl
aad
mov
mov
inc
movsl
push
push
push
inc
or
out
sub
xor
push
shrb
xorb
pop
int
cmp
pop
nop
push
arpl
shlb
cmp
in
ljmp
cmp
mov
loope
int
pusha
add
into
iret
xor
xchg
and
xchg
out
xor
nop
in
mov
iret
mov
xchg
inc
out
loopne
aaa
adc
cmp
push
inc
push
rol
dec
sarb
add
add
mov
and
push
xchg
inc
call
das
sbbb
pop
mov
lock
pop
or
icebp
dec
outsl
xlat
xchg
aaa
and
aam
testb
fcoms
add
ret
pop
dec
mov
push
cwtl
mov
rorb
int3
data16
xchg
adc
shrb
subl
lock
add
push
fidivrs
cmp
and
push
imul
popa
rcrl
mull
cwtl
jno
add
sbb
adc
lret
shlb
jle
pop
pop
cs
iret
add
fbstp
shlb
subb
add
and
mov
push
xor
push
lods
ljmp
inc
jmp
lods
ret
or
jo
loopne
lcall
adc
jmp
fimuls
ds
cwtl
and
clc
jmp
sub
addr16
and
loopne
mov
mov
push
and
sarb
call
hlt
mov
icebp
xor
idivl
dec
mov
nop
mov
lret
fdiv
push
int
cs
and
popa
pop
pop
add
rolb
roll
mov
dec
cmp
sahf
or
add
cmp
sbb
es
xchg
loopne
inc
lea
test
cmpb
insb
fcomps
pushf
cmp
mov
shrl
dec
and
and
test
icebp
inc
inc
and
lods
and
add
popa
adc
test
sarl
ret
sbb
lock
pop
sbb
add
sub
mov
cmp
loope
and
xlat
jnp
add
popa
jne
cwtl
dec
add
adc
test
sarl
rorl
enter
xor
jne
data16
fistpl
add
adc
pop
push
xor
or
bound
sub
data16
sub
mov
shr
cmp
xorb
dec
jo
add
push
jmp
addl
and
inc
bndstx
jmp
inc
mov
sbb
xor
outsb
fucomp
mov
in
call
mov
cmp
sub
repnz
enter
stos
sbb
icebp
ljmp
mov
or
test
scas
fsubr
add
add
loopne
jb
adc
cmp
dec
mov
push
rcrb
inc
mov
les
les
repz
inc
sbb
jg
in
sub
pop
mov
or
mov
les
lds
je
push
adc
cmpsb
pop
and
pop
push
hlt
outsl
mov
outsl
cmp
sahf
sbb
sub
push
add
and
add
fs
cwtl
fnsave
dec
clc
ss
les
pop
inc
mov
es
cmp
sub
or
add
mov
mov
mov
cmp
mov
lret
pop
ror
movsb
sub
movsl
xor
inc
cltd
jae
scas
xor
or
sarl
arpl
pop
scas
cli
repz
rcll
or
xor
mov
jge
sbb
and
loop
cmp
addr16
mov
js
orb
mov
aas
ret
out
or
mov
pop
and
cmp
sbb
push
dec
stos
std
ljmp
sti
fdivs
js
ds
and
inc
jle
xchg
fmull
int3
dec
push
or
andb
push
xor
adc
adc
jge
mov
xchg
data16
or
mov
xor
or
mov
mov
push
add
rcrb
ret
add
push
ret
pop
icebp
clc
xchg
mov
pop
mov
mov
mov
loope
inc
mov
jl
mov
test
xor
pop
rclb
aad
and
lock
addps
sub
dec
or
mov
xchg
jae
dec
cltd
hlt
mov
jne
or
sub
clc
add
sbb
bound
xor
jecxz
mov
fldenv
add
xor
lcall
mov
ds
push
shl
pop
les
sbb
lock
mov
cmp
sub
and
shlb
mov
cmp
mov
push
shlb
and
int
inc
mov
fs
jnp
or
xchg
mov
xor
cmp
jg
inc
push
mov
aaa
movsb
sub
push
aaa
jne
call
mov
adc
incl
std
xor
movsb
push
es
or
add
add
dec
inc
cwtl
ret
sbb
or
ds
add
xor
mov
addl
cmpsb
stc
cltd
and
xor
mov
add
xor
add
aad
stos
push
popa
mov
and
push
loopne
popa
mov
jo
mov
hlt
jge
xor
sbb
cmp
xchg
sbb
jns
inc
push
stc
pop
fistpl
mov
mov
ja
fcompl
cmp
xchg
lock
push
add
bound
xlat
cli
mov
call
xor
add
mov
mov
insb
unpcklps
lds
xchg
adc
lahf
out
stos
and
in
cmp
cmp
ss
popa
inc
icebp
or
adc
and
imul
mov
xlat
mov
ffree
or
insb
and
jbe
in
mov
into
loop
sub
xchg
loope
jmp
adc
cmp
std
add
dec
aad
inc
outsl
fiaddl
cld
aaa
mov
sub
or
pop
ds
or
adc
je
adc
add
scas
std
and
rclb
stos
test
push
loop
xchg
add
inc
jne
mull
mulb
fldcw
loopne
xor
dec
add
in
adc
lods
jmp
inc
cs
in
sbb
in
pusha
xchg
shrl
and
mov
js
inc
xchg
lods
ljmp
jle
pop
jp
dec
adc
mov
repz
lods
loopne
cwtl
sub
imulb
mov
icebp
dec
scas
or
or
ljmp
in
mov
aaa
roll
out
sub
mov
cmp
xchg
jnp
andb
sub
fildl
adc
sub
mov
push
push
or
es
jbe
inc
jle
dec
mov
mov
nop
mov
or
imul
mov
sub
mov
pop
jo
mov
jne
inc
mov
inc
test
mov
sar
roll
ret
loop
cmp
mov
or
adc
in
cmp
sbb
rolb
decb
sub
fcoml
xchg
pusha
sbb
nop
fcomi
subb
jo
dec
pop
add
cmp
xchg
rorb
pop
out
sti
xor
push
lods
mov
sub
pop
mov
rolb
imul
add
dec
aam
mov
mov
add
mov
sub
ljmp
cltd
dec
in
incl
outsl
jmp
out
sbb
fstps
call
das
cld
pop
adc
test
lahf
cltd
pop
jo
fwait
pop
mov
mov
or
mov
bound
mov
cmp
shll
repz
push
jle
mov
lods
sub
ret
jge
and
cmp
jo
mov
push
jg
sbb
clc
pop
mov
mov
jl
mov
sub
dec
test
adc
and
insl
pop
sbb
outsb
fbld
call
jecxz
xchg
sbbb
lock
sbb
fnstsw
pusha
call
icebp
xchg
rsqrtps
push
fwait
inc
movsb
in
pop
or
mov
or
sbb
cmpsl
js
out
outsl
xor
test
inc
outsb
hlt
rorl
sub
jo
add
outsl
rorb
icebp
movsl
add
icebp
pop
xorl
jge
clc
and
cmp
and
addr16
xor
stc
aad
mov
or
xchg
or
add
movl
adc
movsb
cmp
inc
xor
push
mov
out
fidivrl
lods
rcll
test
movsl
pop
loop
rcrl
push
test
or
daa
loop
out
push
movsb
rcrb
iret
xchg
pop
push
add
decl
or
lods
rorl
dec
insb
push
add
mov
je
sub
jne
test
mov
nop
popf
jb
jbe
aad
xor
cmp
call
int
cmp
adc
sub
inc
lock
push
jle
xchg
add
pop
jg
or
xlat
idivl
mov
mov
xchg
fcompl
xorb
dec
push
cwtl
xor
add
cmpsl
jne
das
outsl
mov
dec
shlb
roll
and
mov
dec
outsl
outsb
adc
rcrb
jmp
mov
test
add
cmp
push
xchg
mov
cmp
fldenv
push
adc
aad
dec
imul
xor
mov
mov
or
cmp
pop
pop
or
sbb
add
clc
push
push
rcl
popf
mov
outsl
adc
jo
insl
and
outsl
std
mov
pop
cmp
andb
in
ja
iret
push
sbb
shll
adc
mov
fistpl
mov
mov
icebp
add
and
jo
mov
push
in
cmp
sub
cmp
aad
push
mov
add
movsl
ret
into
and
ljmp
bound
das
sbb
loop
addr16
mov
fisttps
clc
push
sti
outsb
xchg
xchg
add
or
xchg
in
inc
sti
jae
push
dec
add
or
loope
pop
or
push
aam
fisubrs
sub
or
add
sarb
lea
xchg
mov
inc
sbb
mov
add
jns
loopne
sbb
repnz
cli
imul
xchg
cwtl
imul
addr16
or
mov
jle
mov
scas
pop
add
sbb
xchg
push
or
push
stc
outsb
lahf
push
pushl
call
add
hlt
mov
xor
loopne
test
repnz
sbb
xlat
add
jp
xor
in
jno
cmc
fisubrl
fdivs
adc
cli
aaa
xchg
cmp
repz
das
add
addb
xchg
adc
imul
mov
mov
add
outsl
cmp
das
pop
cli
sbb
lock
pop
pop
stc
adcw
xorb
das
icebp
test
dec
fcomps
mov
cmp
ljmp
pop
ss
jno
stos
and
jmp
xchg
mov
pop
jp
cmc
out
dec
cs
insb
aad
mov
hlt
mov
jnp
clc
lahf
add
or
cmp
jg
arpl
push
test
leave
mov
push
inc
pop
fwait
xchg
popa
push
or
lods
loopne
and
shll
mov
add
sbb
shr
jns
xor
dec
movsl
cmp
sbb
test
push
dec
push
fdivr
call
inc
nop
xchg
mov
lret
sahf
fildl
or
push
rorb
cwtl
dec
lock
jl
cmpl
and
lock
clc
jmp
xor
movb
pop
insl
pushl
fistps
adcl
mov
jnp
das
inc
outsb
popa
and
cmp
mov
add
daa
pop
push
mov
cli
incl
fistpll
and
icebp
adc
lret
adc
jno
mov
in
push
ret
sbb
das
sub
repnz
mov
and
stos
and
lea
mov
or
mov
push
adc
xor
mov
fldenv
pusha
push
hlt
aaa
les
adc
aam
sbb
stos
not
das
imul
sub
imul
aam
or
aam
hlt
sub
andl
mov
das
sub
aad
cmp
mov
repnz
lcall
mov
hlt
inc
xor
data16
pop
add
in
push
mov
cmp
jge
out
dec
cld
xor
sahf
inc
pusha
icebp
outsb
mov
divl
aam
into
or
cwtl
jb
out
mov
sub
pop
idivl
sbb
out
add
add
cmp
rcrl
add
xchg
jo,pt
aam
lret
fcom
jecxz
icebp
cmpsl
fs
jb
les
add
or
adcl
sub
inc
sub
fmuls
mov
push
add
sbb
dec
cmc
lret
add
shrb
pop
int3
push
mov
cwtl
mov
xor
out
mov
push
vpunpckhwd
xchg
subb
inc
cld
out
test
dec
push
testl
xchg
or
in
rorl
push
mov
adc
inc
add
sbb
and
mov
and
push
xchg
cmp
adc
xchg
mov
jo
fcoms
aam
iret
mov
fcom
aam
in
aam
fisubl
adc
mov
inc
int
or
aad
ljmp
lds
and
mov
add
inc
cli
pop
push
mov
push
jae
insb
dec
add
test
mov
pop
xor
or
loopne
in
fmull
cltd
jge
add
xor
push
inc
lods
and
adcb
test
sub
and
stos
mov
sar
test
out
adc
js
adc
push
aaa
repz
xor
sbb
inc
rcrl
in
push
adc
mov
mov
adc
stos
sbb
adc
sahf
int
mov
cmp
es
call
add
push
dec
pminub
push
ffreep
pushf
test
adc
or
or
pop
stos
fsub
jmp
mov
lahf
xchg
pop
das
movsl
inc
mov
outsl
std
aad
push
mov
cmc
inc
bound
xchg
out
push
sbb
mov
les
inc
dec
call
roll
xchg
fidivrs
pop
jge
mov
movsb
pop
adc
pop
add
insl
repnz
dec
mov
jle
in
dec
push
sti
or
push
pop
inc
or
and
arpl
mov
add
mov
enter
push
add
aam
scas
cmpl
cmp
mov
lahf
addl
sub
cmp
mov
add
or
imul
rcll
aam
mov
jg
ljmp
loope
leave
adc
lods
dec
dec
aad
icebp
xlat
xor
cmp
mov
es
stos
mov
mov
ret
cmp
mov
sub
mov
xor
jg
insl
mov
es
cmp
adcb
aaa
mov
or
pop
push
xor
mov
ficoms
adc
jbe
mov
dec
lods
or
movsl
lock
fldenv
and
and
in
xorl
inc
xor
add
and
gs
push
pop
push
xchg
insb
inc
jle
inc
mov
lret
ret
dec
imul
test
fnstenv
decl
push
sbb
push
loopne
jne
lds
rcrl
add
mov
pop
pop
ja
or
test
call
in
stos
call
cmp
adc
cld
sub
or
in
add
jp
xor
out
sbb
hlt
jnp
cmc
and
enter
xorb
sti
mov
nop
xor
dec
mov
fdivrp
jg
push
stos
xchg
stc
shr
sbb
push
add
movzwl
aas
mov
mov
daa
lea
jp
ret
adc
cmp
lods
pushl
stos
call
push
push
int3
pushf
jl
rorl
push
ret
fsubs
jp
xchg
fisubl
lock
sub
das
inc
sbb
mov
in
pop
or
xchg
notl
fnclex
dec
xchg
mov
stos
adc
mov
test
lods
gs
xchg
movsb
je
mov
xchg
sbb
push
mov
or
ss
pop
clc
push
push
pop
mov
and
insb
es
xor
outsb
and
push
loope
bound
movsl
cmp
xchg
inc
mov
inc
mov
mov
mov
outsb
pop
inc
vucomisd
popa
pop
and
push
divl
push
add
and
mov
mov
in
js
sti
add
add
sbb
mov
adc
jl
loop
inc
movsl
repz
mov
lock
fidivl
pop
add
addb
mov
outsb
cmc
aaa
lret
jmp
jle
movsl
or
xchg
in
mov
mov
outsb
inc
sub
jmp
mov
xchg
inc
stc
and
hlt
bound
cli
fisttps
ljmp
pop
popa
dec
add
nopl
shrb
call
xchg
sub
jne
lret
mov
push
fsubr
push
lsl
mov
sbbb
mov
push
or
sub
push
mov
daa
adc
or
inc
loopne
les
mov
sub
add
and
test
movsb
mov
mov
testb
push
pop
mov
lock
jns
add
notb
mov
imul
pop
dec
mov
insb
xchg
dec
lods
xchg
pop
loopne
mov
mov
pop
sbb
dec
icebp
int
dec
je
dec
inc
sbb
cmp
dec
stos
push
out
adc
into
cli
shlb
xor
rclb
daa
add
fcmovbe
pop
pop
aas
fcoml
mov
int
rorb
add
dec
fwait
jge
sub
sbb
lock
sbb
rorb
or
mov
and
fwait
aam
adc
xorb
or
out
fmulp
add
sub
fadds
ss
adc
inc
shrl
cld
adc
and
mov
push
mov
cmpsl
mov
divl
or
cmp
iret
shlb
mov
and
jmp
mov
mov
inc
push
sub
icebp
or
add
int3
adc
fldlg2
mov
jecxz
pusha
insb
inc
dec
push
and
xor
push
xchg
xchg
mov
cmpsb
mov
mov
xchg
cmpsb
cmp
inc
xchg
xor
dec
mov
push
icebp
cmp
in
ficoms
scas
xchg
and
loope
xchg
adc
add
inc
ret
mov
or
clc
js
test
inc
xor
out
push
mov
push
adc
adc
cmp
loopne
dec
adc
mov
bound
or
pop
ret
mov
rcll
pop
mov
pop
or
imul
rcl
pop
gs
arpl
movb
into
fs
daa
dec
sub
push
mov
push
xor
cmp
or
mov
cmc
jg
sbb
rcl
insb
sub
cwtl
add
or
mov
cwtl
inc
jle
mov
das
push
fucomip
push
mov
enter
pusha
stos
add
mov
push
cmp
add
aas
sub
dec
add
dec
loope
mov
mov
dec
jmp
mov
jecxz
push
xchg
ljmp
mov
sub
outsl
rcrb
arpl
fiadds
clc
mov
xchg
sbb
jo
subb
mov
das
push
int3
adc
pop
loopne
shll
mov
mov
lcall
and
dec
jmp
ja
pop
dec
push
aad
pop
rcll
lock
xchg
mov
rolb
sub
popf
leave
lret
insb
xchg
mov
loop
in
fidivrs
cmp
mov
cmc
xor
movsl
fucomp
dec
mov
pop
aam
fcmovnu
push
sub
loopne
inc
push
dec
inc
sbb
mov
add
xchg
adc
fcomps
sahf
xor
lahf
push
or
mov
in
fmul
xor
push
mov
or
loopne
ret
sub
mov
scas
xor
push
xchg
cmpsb
dec
mov
sub
pop
pop
into
and
pop
inc
add
stc
mov
rcll
jge
add
push
fistl
hlt
pop
jle
dec
or
add
scas
pop
jns
inc
mov
add
fisttps
aaa
jno
popa
mov
loopne
fdivrs
enter
les
dec
pop
xlat
mov
sti
in
rorb
rorb
mov
dec
xchg
mov
and
xchg
clc
lods
punpckhbw
decl
mov
sub
add
and
incl
mov
idivl
or
dec
jb
pop
cmc
fstl
add
lods
call
mov
mov
ret
fwait
xchg
cmp
mov
xchg
sbb
mov
sbb
icebp
sti
jo
das
adc
xlat
stos
test
loop
sahf
add
outsb
stc
out
and
pop
clc
pop
aad
cli
dec
push
mov
mov
push
fdivr
ja
jns
push
add
or
insl
adc
pop
lock
xchg
data16
sbb
mov
jecxz
push
pop
mov
jmp
jle
pop
pop
inc
cltd
mov
mov
ficoml
push
sti
stc
out
inc
in
out
sbb
pop
mov
or
mov
scas
mov
call
xor
ror
push
das
mov
push
inc
daa
bound
rolb
lret
add
sbb
mov
aas
adc
cmc
bound
insl
leave
push
lods
inc
push
or
mov
rolb
sbb
inc
xor
js
jecxz
or
nop
mov
mov
scas
clc
or
add
adc
or
push
cmp
sub
sbb
mov
sbb
jo
sub
in
cmp
mov
xchg
loop
mov
je
pop
cwtl
enter
sub
cld
mulb
xor
and
add
pop
pop
adc
push
jb
out
jle
mov
loope
test
pop
or
xchg
lahf
add
mov
int3
cmp
lock
xor
mov
mov
lods
into
in
das
in
or
dec
cs
or
jnp
dec
mov
and
sbb
sub
mov
mov
mov
ljmp
push
sub
dec
adc
adc
cmpsb
sub
mov
cmc
addr16
mov
push
aas
adc
aad
addr16
stos
cs
fnstsw
sbb
push
xchg
shl
mov
pop
push
flds
in
jmp
jmp
push
sbb
leave
lods
scas
js
call
mov
xchg
sbb
inc
insb
or
mov
cmp
call
inc
test
mov
fisttps
mov
adc
pop
loop
test
mov
inc
mov
repnz
cmp
mov
sbb
lcall
frstor
lret
stos
add
add
push
adc
cli
pop
push
xor
adc
jae
mov
mov
push
dec
ss
pop
push
jne
jle
inc
lsl
xlat
fcmove
inc
lahf
aad
imul
std
jg
jecxz
fcoms
pushf
js
outsl
jmp
dec
adc
cld
or
push
adc
mov
popaw
or
rol
aas
add
and
inc
jl
sbb
insl
xor
cmp
shrl
adcl
push
jnp
shll
inc
or
inc
xor
js
out
xor
xor
fnstcw
dec
jg
andb
add
orb
jg
lods
or
data16
pop
js
ja
add
push
dec
xor
xchg
loopne
inc
mov
fistpll
enter
hlt
dec
cmp
mov
xchg
and
mov
out
mov
inc
add
adc
popf
sbb
xchg
adc
cmp
xor
pushf
stos
call
loop
inc
inc
dec
stos
ret
lret
cmc
push
or
add
bnd
push
inc
outsl
pop
jo
jno
push
add
sub
or
movsl
inc
icebp
daa
adc
adc
enter
lock
int
out
mov
cmp
push
adc
add
mov
in
push
xchg
in
push
in
dec
loopne
fwait
or
add
adc
test
mov
icebp
ret
or
lret
fsts
dec
add
push
push
stc
xchg
sub
dec
xchg
or
add
adc
cwtl
btr
mov
push
aaa
add
xor
notl
loopne
out
cmp
mov
bound
fildll
cmc
sub
inc
or
jo
jg
jo
jl
cmp
andl
add
push
or
pushf
sahf
frstor
movsl
adc
les
popa
pop
or
sbb
push
mov
insb
mov
ficoms
inc
in
xchg
ljmp
cli
jl
or
add
push
sbb
cmc
fwait
mov
outsl
sub
push
add
pop
imull
inc
icebp
mov
das
add
shr
pop
and
sub
and
dec
aas
dec
mov
lods
mov
add
lcall
mov
roll
subl
add
fsts
inc
jmp
pop
lcall
test
ja
test
test
fwait
mov
xchg
fidivrs
xchg
pusha
mov
in
cli
add
enter
fdivrs
dec
and
pop
mov
or
inc
and
test
jns
add
push
mov
jnp
push
insl
or
cmp
out
jge
imul
mov
cmp
fiadds
fs
xchg
jns,pn
pusha
push
add
les
fiaddl
and
fadds
insl
incl
pushf
mov
sbb
enter
fistpl
aas
mov
jb
bound
and
icebp
xor
push
inc
inc
jecxz
adc
sub
push
xchg
pop
fdivs
and
inc
lahf
inc
jp
imul
xchg
mov
mov
inc
loope
cmpsl
xchg
mov
xchg
test
das
int3
pop
push
fsub
jnp
or
xlat
mov
stos
das
mov
adc
mov
add
xlat
or
mov
xchg
out
push
fnstenv
push
adc
push
cmpb
sub
mov
out
cs
scas
nop
and
push
adc
pop
outsl
fistps
leave
stc
nop
cmovg
adcb
testb
jbe
dec
lods
nop
test
push
pusha
das
pushf
cmp
jecxz
jmp
ficoms
enter
push
push
faddl
daa
insl
test
and
test
pop
mov
aaa
dec
pop
ret
or
adcl
and
mov
jb
loopne
push
jmp
ds
aad
subb
lahf
ret
add
push
sbb
xchg
sti
xchg
push
xlat
pop
jecxz
sbb
add
mov
movsb
jo
fisttpll
xchg
mov
pop
lahf
dec
xor
adc
mov
add
cli
jno
mov
add
je
outsb
loope
mov
xor
sbb
in
sub
ljmp
jg
or
fwait
mov
rolb
lahf
mov
pop
mov
loop
loope
cmp
or
xchg
jg
mov
scas
cmp
jg
mov
jae
ljmp
movsb
mov
sub
mov
cmp
stos
sub
adc
fwait
loope
jle
enter
insb
incl
or
mov
ljmp
loop
ss
orl
imull
or
push
jle
mov
out
outsb
add
sbb
loope
push
fcmove
iret
nop
rorb
pop
cli
stos
sub
xchg
aas
jle
rcr
stos
shl
rorl
adc
test
sahf
in
xchg
nop
test
and
incb
outsb
push
and
popa
inc
push
out
pusha
addl
pop
mov
sbb
idiv
lods
push
sub
add
in
in
xchg
sbb
ds
mov
adc
adc
outsb
cld
add
daa
sbb
fldl
stos
sbb
fistpll
jl
idivb
fmul
adc
int
js
outsl
mov
push
insb
or
stos
and
fistps
xchg
inc
push
pop
jg
push
sub
and
adc
or
mov
jp
mov
inc
icebp
push
and
ss
sbb
mov
addr16
repnz
and
pop
add
mov
test
cmpsb
lea
adc
pop
and
aad
jg
imul
sbb
jbe
sti
mov
lods
test
loopne
sahf
cmovl
push
es
xchg
ljmp
sub
mov
stc
add
dec
insb
ljmp
jbe
cld
xchg
pusha
adc
inc
and
cwtl
fists
enter
push
stc
jae
cmc
xchg
stc
dec
rcll
out
dec
adc
aaa
jne
mov
add
add
mov
fldcw
add
rclb
das
dec
lret
or
or
xor
add
test
mov
ds
out
sbb
rclb
aas
jne
stos
rorl
jae
sbb
cmp
incb
pop
sti
fisttpll
jp
mov
cmp
xor
push
fmull
mov
inc
loope
aaa
vmptrld
repz
mov
mov
cmpb
cwtl
aaa
cmpsb
pop
and
ds
ret
cmc
fisttpl
imul
movsl
jb
push
push
sbb
push
mov
call
xlat
cwtl
xchg
das
cmpsl
cmp
imul
arpl
cmc
hlt
out
fcmovnu
lock
xor
hlt
adc
fdivrs
outsl
inc
jne
or
rol
cmp
sbb
stos
inc
insl
imul
mov
fidivrl
add
mull
mov
mov
mov
mov
xor
outsb
mov
lret
fwait
push
aad
outsl
push
iret
xor
rdmsr
fwait
add
bound
fcmove
fisttps
imul
call
or
dec
sbb
mov
lods
xchg
fidivl
loopne
jl
mov
cltd
lret
xchg
mov
adc
inc
push
or
cmpsl
scas
mov
pop
xlat
cs
ljmp
andl
test
push
dec
or
outsb
or
adc
adc
insb
loope
lock
pop
sbb
mov
pop
and
shll
mov
ljmp
mov
cmpsl
mov
cmp
xor
push
lcall
xchg
scas
test
insb
mov
movsl
mov
test
jp
push
pop
lea
int
aaa
das
out
mov
xchg
mov
fimuls
loope
push
pop
cmp
pop
outsl
call
mov
js
ret
insb
and
mov
push
push
sub
pop
fbld
xor
or
push
jge
xchg
fdiv
test
cmc
mov
dec
dec
sahf
or
push
ja
insl
lea
add
and
cmpsb
add
sub
rolb
sub
ja
and
addb
push
hlt
adc
sbb
jno
mov
adc
add
mov
das
sbb
or
mov
fsts
and
lods
sbb
mov
and
inc
jge
movsl
fmuls
xchg
jg
ss
mov
fwait
mov
xchg
rcl
adc
test
xchg
mov
dec
or
sbb
jl
into
push
test
js
xor
or
clc
aaa
loop
mov
push
ror
xor
sahf
or
xor
cmpsl
sub
and
je
mov
je
jb
or
inc
rcr
xchg
xor
sbb
pop
int3
mov
or
or
push
mov
shlb
insb
mov
mov
add
add
stos
data16
out
hlt
int3
sbb
mov
adc
push
loope
nop
fcomps
iret
mov
or
xchg
push
scas
notb
cmc
push
sub
sahf
inc
aaa
cli
inc
sar
jne
hlt
cmc
fwait
add
mov
clc
mov
lds
icebp
aam
jo
int
or
push
clc
stos
scas
enter
mov
push
xchg
icebp
cmp
aas
push
push
ja
cs
or
or
mov
xchg
mov
loopne
imul
es
adc
lret
fmuls
jns
xchg
das
mov
sub
pop
inc
cmp
sbb
pop
fsubrp
inc
les
push
andl
test
popf
andb
push
popf
clc
dec
adc
dec
es
jno
adc
adc
sbb
adc
sub
mov
push
adc
or
int3
faddl
adc
aad
push
mov
or
mov
add
sbb
inc
jne
lock
enter
mov
inc
xchg
xchg
aas
sub
pop
lds
mov
mov
add
adc
fisttps
scas
jmp
jp
aad
orb
xchg
xlat
and
xlat
sbb
dec
inc
add
jo
sbb
imul
dec
cli
subb
or
adc
aad
mov
or
jno
aas
je
cwtl
lock
lock
pop
andb
ret
arpl
ss
xchg
inc
andb
cmp
out
inc
xchg
push
ja
sbb
mov
stos
or
jb
cwtl
inc
std
or
jge
pop
int3
xor
es
inc
lock
add
xchg
aam
lret
adc
subb
push
shl
clc
xor
jae
or
add
stc
mov
inc
sub
mov
sbb
add
rorl
aas
jne
lock
out
or
enter
push
mov
jne
add
inc
dec
and
leave
sbb
aas
mov
int
inc
loopne
lock
xor
pusha
inc
out
push
mov
push
xchg
pop
arpl
scas
lea
mov
inc
nop
or
dec
add
mov
jg
es
shll
aas
sub
xor
sub
shll
jo
sbb
add
pop
jge
add
in
mov
push
pop
xchg
inc
leave
push
int
xchg
or
subl
jg
and
or
pushf
shll
pop
xchg
clc
inc
pop
add
push
jnp
pop
mov
movsl
outsb
push
in
mov
jnp
jb
push
mov
cmpsl
lods
push
inc
cli
insl
add
sahf
pushf
mov
or
insb
in
pop
cmp
jge
pop
ljmp
push
movsb
pusha
xor
jmp
outsl
push
cmp
or
fcompl
stos
cltd
mov
es
adc
push
js
cld
das
push
cwtl
and
dec
je
cli
mov
outsl
push
push
ficoml
dec
dec
jne
and
mov
or
pushl
adc
push
and
pop
test
mov
dec
dec
enter
sti
call
ds
cwtl
and
or
cmpsl
test
cmp
ss
lea
call
sahf
xchg
pop
mov
mov
lods
pop
or
decb
pop
outsl
lods
popl
out
ret
hlt
and
fiadds
push
or
mov
push
les
or
imul
ss
lods
xchg
ficoml
jg
mov
movsb
ja
cld
fidivl
rcrb
push
popa
aam
pushf
ret
mov
subl
gs
clc
dec
xor
insl
je
mov
scas
cwtl
or
pushw
adc
xchg
stc
xchg
psrlw
fisubrs
push
xchg
fdivs
push
rcl
shlb
cmp
mov
enter
out
add
pop
roll
nop
sbb
pop
add
mov
loopne
out
rcr
sbb
fisubrs
mov
push
mov
popa
sbb
add
mov
sbb
mov
icebp
xchg
sbb
mov
push
jge
xlat
dec
lds
iret
jmp
push
pop
xor
lods
lea
rcrb
sub
data16
outsb
sub
sub
fwait
and
cmpb
insl
mov
sbb
in
pop
pop
mov
push
inc
ljmp
jle
add
inc
in
or
out
xor
data16
movsl
ret
jb
jnp
add
and
or
fstps
sar
push
ja
lahf
clc
sub
shll
mov
mov
test
js
jno
loop
mov
or
ljmp
pop
out
pop
push
sbb
pop
test
aad
push
in
sub
rorl
fidivrl
jo
mov
mov
popa
jne
sti
testb
icebp
enter
icebp
inc
jns
adc
jecxz
addb
mov
js
jg
xchg
inc
pop
mov
das
and
or
push
mov
fiaddl
lcall
mov
out
notb
popf
jl
test
pushf
call
je
add
cld
fwait
sub
or
fildl
insl
xchg
or
in
aaa
mov
mov
notb
mov
popf
int3
rorb
in
aam
mov
mov
aas
adc
cmp
dec
or
rorb
push
fistpl
int3
aaa
and
mov
cli
or
dec
xorl
xor
cmpsl
add
sub
ja
sti
xchg
jge
mov
in
insl
mov
mov
inc
mov
adc
push
int3
pop
add
xchg
jge
out
inc
mov
sub
sbb
dec
fists
ljmp
das
fildll
push
sbb
sub
sti
inc
inc
push
mov
scas
dec
push
sub
cmc
add
gs
fists
push
ret
cwtl
and
lock
aaa
mov
xorb
cmpsl
lcall
sub
push
jle
addr16
fdivrl
out
aaa
loopne
test
jae
dec
aam
lahf
shl
in
add
decl
push
add
jns
adc
jno
sbb
mov
add
add
or
iret
in
ret
mov
xor
repz
das
mov
test
test
pop
div
in
jle
test
xor
pushf
movsl
push
dec
mul
or
adc
cmpsb
imul
jmp
test
rcrb
jbe
in
adc
add
xchg
mov
inc
mov
outsl
mov
jb
arpl
psubw
cmp
sub
inc
inc
xchg
or
in
out
pop
jle
xchg
adc
idivl
sbb
mov
repnz
fimull
and
pop
push
push
mov
daa
xor
xchg
aaa
fidivrs
dec
xor
jo
jno
mov
lahf
mov
sbb
jle
sbb
inc
cmp
mov
arpl
es
sub
mov
sar
xchg
pusha
inc
das
ljmp
jp
mov
daa
and
push
mov
jnp
lds
add
xchg
ja
jg
ret
xchg
aad
and
push
mov
dec
imul
in
fisubrl
or
xchg
test
adc
popf
and
aaa
inc
add
add
lock
popf
shl
es
mov
jnp
cli
and
js
fcomip
mov
into
pop
mov
dec
xchg
cmp
outsb
jb
insl
mov
mov
das
stos
in
sbb
mov
cmp
sub
mov
in
dec
dec
xor
test
lods
adc
fimull
dec
fs
inc
sub
push
test
xlat
js
ja
jnp
in
loop
adc
sbb
jl
add
sub
mov
lret
xchg
jle
aaa
adc
dec
sbb
rcll
cs
fcomp
insb
daa
insl
jl
adc
push
cmpsl
or
and
icebp
call
pusha
shl
push
cmp
xchg
pop
xchg
les
mov
push
pop
xlat
sub
inc
jb
popa
inc
xlat
sbb
lods
pop
pusha
mov
js
lods
loopne
cmpsb
jle
decb
add
add
push
scas
ret
mov
sub
jmp
roll
test
jp
mov
icebp
ret
fdiv
or
push
sbb
loope
pop
nop
lea
int3
and
sub
adc
stos
lds
stc
add
stos
call
inc
pop
outsl
cltd
and
loopne
shl
rorl
outsl
jmp
adc
or
or
cltd
or
sub
push
icebp
ficompl
add
movsb
pop
repnz
dec
mov
adcb
and
add
lock
inc
lahf
adc
push
lret
aaa
add
fs
xor
adcb
push
xchg
dec
inc
push
aam
enter
jo
popf
xchg
test
push
pop
adc
inc
xor
cld
and
jmp
mov
push
jmp
mov
rolb
es
mov
nopl
cmpl
fmul
push
pop
aaa
add
xchg
leave
cmp
jl
or
ja
rcrb
sarb
adc
sub
xchg
add
cli
pop
or
add
lret
inc
and
xor
add
fs
xlat
adc
jae
cmpsb
dec
int3
adc
rorb
and
sub
xor
xchg
es
sbbb
lea
mov
cmpl
mov
in
and
pop
repnz
push
sbb
and
inc
inc
mov
adc
add
jne
pop
sub
iret
xor
insb
push
loopne
or
xor
in
cmp
imul
dec
push
xor
dec
push
test
testb
add
mov
sbb
mov
add
xchg
cmpsb
ljmp
xor
mov
push
xor
outsl
push
insb
add
xchg
ftst
and
outsb
and
imul
clc
jbe
stc
mov
clc
outsb
shl
out
jb
jbe
pop
push
xchg
insb
popa
mov
mov
das
addb
fucomip
cmp
frstor
stos
and
xor
mov
addr16
cmp
pop
or
ljmp
mov
rol
inc
adc
or
lea
lcall
mov
flds
hlt
sub
xor
call
or
pop
dec
leave
cmp
dec
shll
and
and
sub
mov
adc
sub
pop
pusha
cli
rcl
cli
jp
pushf
pop
cmp
mov
or
adc
mov
push
pop
scas
mov
notl
cmp
js
xor
push
jge
sbb
fdivrs
inc
fidivl
je
in
scas
inc
es
inc
xchg
push
gs
mov
cmpl
add
jnp
imul
xor
push
rorb
push
imul
push
je
shlb
and
inc
int
sub
out
push
lock
sbb
int3
mov
dec
and
sbb
sub
pop
mov
in
lods
inc
push
and
and
fldcw
fildl
hlt
dec
pop
jns
pushl
mov
js
sbb
cmp
std
mov
inc
mov
fldcw
xor
cs
push
ljmp
dec
add
and
push
stos
push
cmp
push
add
push
mov
push
adc
mov
rorl
xchg
add
xlat
leave
rorb
xchg
shlb
das
movsb
subb
arpl
add
aam
pop
and
sbb
add
data16
mov
lock
out
and
loopne
sarl
add
add
in
inc
add
xchg
movsl
adc
cmpsb
xchg
mov
sub
sbb
scas
add
pusha
pop
jmp
ret
pop
test
xchg
and
push
mov
cmp
jl
sub
inc
dec
lock
or
xchg
mov
jae
mov
push
inc
push
add
js
je
mov
add
dec
pop
fwait
or
gs
xchg
xchg
mov
mov
or
sbb
push
add
nop
and
sbb
xchg
inc
ret
jle
movsb
stos
rcrl
imul
shlb
and
pop
lock
mov
or
adc
add
xor
pusha
add
add
outsl
xchg
insb
daa
roll
pusha
and
loope
imul
push
adc
stos
xchg
mov
jmp
push
xchg
mov
inc
pop
xor
shr
das
pop
jg
dec
cwtl
or
sub
sub
rolb
sahf
pusha
dec
push
neg
enter
xlat
adc
push
mov
mov
or
xchg
movsl
adc
pop
or
test
cs
out
add
js
loope
or
das
add
or
dec
and
test
mov
cmp
or
add
ret
xlat
push
pushl
pop
loope
insl
sbb
add
inc
mov
mov
push
shrl
or
push
sar
add
aaa
subl
jb
rorb
cmp
inc
mov
and
test
dec
notl
sbb
push
jp
xchg
or
stos
sub
dec
and
dec
xor
mov
rorb
repnz
leave
aam
add
es
mov
and
movsb
xor
movb
and
mov
dec
pop
mov
das
call
dec
cld
inc
int3
mov
shll
pop
sbb
andb
inc
fsubrl
and
inc
lods
cwtl
adc
jge
dec
ss
inc
fstpt
cld
jae
orl
push
adc
clc
sbb
shlb
mov
add
call
or
cmp
jg
jl
mov
add
fwait
movl
test
and
lock
mov
sbb
jb
mov
js
stos
xchg
add
popa
mov
les
or
outsl
mov
jno
xlat
in
jae
or
outsb
fcmovnbe
ljmp
mov
add
jl
push
rcrl
insb
inc
add
xor
jnp
nop
popa
mov
xchg
loope
shll
mov
dec
popf
inc
and
push
mov
cmp
jbe
jne
xor
inc
incl
loop
loope
mov
add
bound
push
int3
mov
sarb
sub
push
jg
xor
adcb
ret
test
jecxz
mov
cmp
or
rol
pusha
or
and
push
push
and
xor
mov
cmp
out
out
pcmpeqw
mov
xchg
sbb
aas
jo
andnps
inc
movsb
xchg
add
cld
mov
sub
loopne
xchg
xor
sub
rcrb
xor
test
ja
fstpl
mov
xor
mov
lret
xchg
xchg
es
adc
addb
nop
sub
loop
mov
cmp
nop
add
sbb
cmp
add
or
neg
pop
add
xchg
cs
sbb
inc
inc
or
inc
dec
or
mov
jge
push
adc
xor
fcoms
out
pop
int
mov
ret
insb
insb
mov
push
mov
lock
inc
fldenv
shll
adc
inc
outsl
mov
ret
adc
fsubrs
cmp
int
mov
lock
and
push
add
fidivl
je
push
cld
cmp
dec
adc
or
add
and
incl
dec
lods
mov
sub
outsl
das
and
subb
sub
jmp
test
sub
adc
daa
in
fistps
mov
push
mov
aaa
repz
pop
and
mov
ss
ljmp
push
cmp
in
fbld
adc
add
inc
xor
shr
adc
adc
or
das
adc
add
pushf
xor
cli
insl
enter
xchg
xor
lock
fisttpl
jecxz
xchg
mov
dec
push
bound
pop
into
mov
cmp
adc
jg
scas
pop
add
jmp
cld
stc
lods
fistpll
add
cwtl
mov
lcall
outsl
das
hlt
jmp
add
xor
sbb
cwtl
mov
sti
sub
and
sbb
mov
mov
jae
loop
andb
test
sbbl
or
xchg
pop
mov
out
cmp
ds
mov
std
fildl
add
imul
sbb
mov
stos
lods
dec
dec
sti
nop
pop
inc
cmp
mov
call
lea
dec
sbb
sbb
mov
inc
test
ds
pop
not
inc
call
js
push
xorb
and
cli
das
sub
popa
mov
enter
mov
dec
sbb
jg
lods
xor
adc
aaa
push
and
xor
fs
xchg
add
mov
sarl
push
pop
adc
enter
mov
push
lea
daa
adc
adc
or
adc
xor
inc
enter
int3
js
hlt
inc
test
adc
adc
or
out
hlt
and
xor
or
cltd
mov
shlb
aam
cmp
adc
and
loopne
pusha
and
push
inc
xlat
subl
fidivs
jb
andl
cli
movsl
sub
ss
and
adc
punpckhbw
cmp
or
and
mov
mov
fsubrl
ret
js
xchg
mov
add
fs
cs
or
aam
jl
cmp
test
or
roll
fisubl
mov
js
push
cwtl
lock
testb
fidivrl
mov
and
xor
ja
ret
pop
dec
clc
sbbl
orb
add
mov
sahf
xchg
jo
cmp
mov
inc
cmpsb
xchg
inc
loopne
xchg
xchg
adcb
movsb
mov
inc
pop
cmp
fsubr
andb
pop
dec
xchg
shll
and
jo
iret
mov
mov
mov
sub
inc
in
mov
xor
into
jp
mov
lret
outsb
sbb
add
and
jnp
or
aas
dec
movsb
bound
mov
sub
xlat
stos
push
lds
mov
lock
inc
push
lcall
jl
pop
pusha
loopne
cli
fsubr
inc
out
pop
sbb
sub
clc
xchg
rcll
test
subb
sub
xchg
adc
addb
inc
adc
push
fldl
jle
inc
adc
lret
inc
inc
or
mulb
in
mov
call
dec
jg
add
jl
fcmovnu
push
mov
dec
test
mov
push
inc
shr
rcrl
sbb
stos
ficoml
lods
jnp
fadds
cmp
sbbl
ret
cmp
xchg
xchg
inc
les
push
test
rcr
test
in
push
lcall
leave
sbb
cmp
pop
in
and
inc
push
fstps
jmp
pop
adc
cmp
mov
aam
inc
xor
ret
nop
sbb
in
xor
or
cmpl
ret
jl
push
clc
bound
lcall
out
cmp
adc
jg
fdivr
test
mov
out
xor
clc
lea
adc
imul
out
add
addr16
das
lock
movhps
shll
cwtl
adc
xchg
pop
dec
andb
and
mov
inc
shrl
lret
test
xor
sbb
notl
repnz
rclb
inc
outsl
cmp
out
inc
pop
fisttpll
adc
mov
popf
add
cltd
mov
mov
xor
mov
add
ljmp
loop
sub
popa
jl
scas
cmpsb
adc
sbb
mov
cli
add
or
call
gs
ljmp
stc
dec
dec
or
push
xchg
pop
sub
adc
aas
std
and
cltd
push
inc
outsb
pop
xor
xor
idivb
sbb
adc
xor
std
sub
or
js
mov
mov
sub
imull
adc
mov
ret
movb
scas
and
cmpsl
adc
push
push
jl
dec
adc
add
mov
js
aam
rcll
dec
jecxz
pop
jbe
fcompl
sub
sbb
push
pop
add
inc
push
ja
pop
in
mov
lods
pop
pop
or
inc
movsb
sub
je
roll
add
or
aam
xchg
sub
insb
pop
mov
lock
fdivrs
adc
orl
add
fisubl
test
push
leave
fsubrl
insb
icebp
inc
pop
dec
jbe
push
sbb
mov
insb
ret
movsl
cmc
adc
or
mov
pop
mov
mov
add
or
push
xchg
jns
icebp
mov
jge
test
or
sbb
adc
push
cmp
fstpl
sub
sbb
insl
inc
and
add
mov
sbb
fucom
ljmp
sbb
or
pop
ret
mov
xor
das
dec
jecxz
jmp
push
dec
adc
mov
inc
sub
insb
and
data16
add
jno
cld
outsl
loop
shrl
inc
or
xor
insb
loopne
les
rcl
and
mov
lods
call
sub
ds
fnstcw
add
jg
mov
mov
xor
test
sbb
pop
push
loope
cmpsl
fiaddl
pushl
test
hlt
and
inc
insb
jg
cmp
addr16
pop
pop
cmp
pop
or
pop
sti
sbb
pop
dec
and
lea
and
xor
sarl
loope
clc
test
and
dec
mov
aam
jecxz
mov
mov
test
ficomps
push
das
jae
and
test
and
dec
cs
nop
adc
mov
popa
fnstenv
or
push
add
xor
lea
push
leave
shll
outsl
icebp
or
mov
rcrl
jge
rcrb
jecxz
sbb
jno
rcll
insb
jb
fucomi
fbld
inc
dec
pusha
es
xor
lret
insl
fildll
test
std
and
ret
sub
rcr
lock
push
mov
lock
or
add
mov
cmp
sub
out
jecxz
jg
stos
and
mov
movsb
insb
insb
or
inc
sub
adc
fstpt
pusha
dec
je
mov
cmp
xor
std
push
std
pusha
call
sbb
popf
cwtl
push
jae
or
sub
cmpsb
icebp
add
fisttpl
pop
out
fcompl
xchg
or
rcll
test
xchg
or
xor
movsb
jno
adc
fimuls
movsb
or
sbbb
dec
pop
test
sbb
scas
ja
mov
idivl
push
sti
mov
mov
push
aas
cmc
sub
movsb
lods
pop
inc
fistl
addl
pop
lret
xor
call
lahf
xorl
out
addr16
and
nop
cld
mov
rclb
mov
add
jbe
inc
cmc
mov
and
lds
inc
out
sub
nop
sbb
push
stos
push
out
cmp
xor
and
sub
push
xor
out
outsl
or
add
int
sbb
ret
fadd
ret
cmp
faddl
jl
xlat
int
jae
and
xor
pop
int
inc
cmp
notb
mov
inc
adc
sbb
and
sbb
pusha
lods
xor
mov
icebp
out
fmull
push
shll
sbb
push
push
loopne
add
lds
dec
les
int
add
into
int3
cld
mov
mov
jne
jmp
clc
xor
inc
loopne
adcb
cmp
xor
in
popf
addr16
cmp
push
imul
movsb
and
inc
pop
add
mov
push
adc
pop
jno
mov
fimull
dec
xchg
jmp
add
xor
das
clc
xor
xor
or
mov
mov
xorl
or
and
mov
xor
sbb
lods
inc
dec
sbb
mov
add
add
add
adc
shll
push
pop
mov
pop
jmp
sub
add
loopne
mov
xchg
adcb
daa
sbb
mov
cmp
adc
adc
xor
test
nop
jecxz
faddl
or
sahf
mov
ss
jbe
mov
lea
adc
adc
or
inc
adc
sub
cmc
jmp
mov
loop
push
aaa
mov
lret
push
roll
sbb
test
hlt
or
sub
call
xchg
adc
call
cmc
aam
bnd
lods
inc
pushf
adc
loopne
adc
mov
les
mov
adc
std
pusha
outsl
xchg
js
cmpsb
aam
cld
mov
dec
sti
pusha
add
push
call
sbb
adc
inc
inc
nop
test
and
and
add
dec
xor
sti
insl
popf
test
mov
push
mov
lock
dec
push
cmp
cwtl
lea
lcall
loopne
out
lahf
or
cmp
jne
les
mov
orb
int3
rorl
cmp
push
mov
push
imul
sbb
mov
dec
pop
jae
shll
push
cmp
dec
xchg
iret
movsb
adcb
stc
sbb
fiaddl
cmp
adc
push
decb
orl
les
int3
icebp
jmp
jecxz
xchg
imulb
inc
cs
clc
cmp
and
cli
sub
aaa
cmp
cmp
or
lcall
or
arpl
jae
or
push
aas
push
int3
rolb
and
daa
jp
je
jae
push
test
int
hlt
loope
inc
out
inc
xor
or
xchg
add
movl
dec
sub
mov
lret
add
sub
xchg
mov
loopne
or
movsb
pop
repz
inc
hlt
pop
ret
sbb
and
mov
pop
jmp
mov
mov
ss
shrb
lock
adcb
mov
mov
popa
mov
or
pop
xchg
imul
or
pusha
jne
pop
sub
xor
and
adc
add
mov
push
lds
outsb
dec
lahf
sahf
adc
pop
lods
add
and
dec
add
test
xor
sbb
or
nop
inc
or
xchg
inc
add
pusha
ret
push
or
sbb
push
cmp
iret
aaa
loope
mov
rcrl
les
xlat
add
dec
fsubrp
fisttpll
mov
or
add
out
mull
sbb
inc
push
addr16
push
cltd
dec
sti
and
add
xchg
sbb
inc
stos
hlt
loop
int
mov
aas
adc
add
jo
subl
ljmp
std
les
sbb
clc
lods
push
push
hlt
and
out
push
adc
test
mov
into
stos
loopne
gs
mov
andnps
xchg
adc
mov
es
scas
dec
mov
mov
or
lcall
enter
fadd
mov
sub
inc
int
repz
cmp
mov
ljmp
fldl2t
add
sarb
mov
jnp
pop
and
popf
clc
xchg
xor
pop
rcrb
lods
mov
add
xchg
data16
mov
add
mov
out
sub
or
pop
push
mov
add
loopne
inc
pop
mov
adc
ret
add
mov
inc
data16
addb
into
nop
add
adc
inc
jnp
lahf
add
cwtl
xor
push
out
adc
int3
or
mov
inc
jne
mov
pusha
and
pusha
cmp
aas
inc
jmp
pushf
mov
mov
in
push
xchg
rorb
inc
add
mov
popa
and
and
lcall
lods
push
push
orb
push
adc
push
mov
inc
std
fcomi
jp
ss
mov
inc
push
out
pop
je
add
inc
mov
mov
dec
lahf
ret
adc
ret
bound
dec
gs
xlat
cmpsl
dec
addr16
sbb
rcrl
dec
xchg
mov
out
addr16
cmp
xchg
xchg
sub
inc
repz
dec
pop
inc
add
idiv
adc
outsl
sbbb
insl
jmp
jns
push
mov
out
lds
push
push
dec
decl
fldt
or
dec
dec
add
mov
and
cmp
sub
adc
fdivr
out
mov
bound
mov
aam
sbb
xchg
out
sti
mov
push
xchg
jge
jle
pushf
xor
xchg
setns
fsubrl
jg
sub
xor
jbe
test
por
push
xor
outsb
or
stos
jo
cltd
add
jmp
fildll
fldcw
test
pop
add
inc
insb
lret
push
stos
cmp
ljmp
pop
inc
mov
or
inc
lret
push
arpl
pop
xchg
or
je
es
sti
jg
add
push
push
pop
jbe
movsb
shll
shl
sbb
insl
loopne
adc
add
xchg
lret
and
pop
loopne
sbb
push
repnz
repnz
ja
stos
loop
cli
test
mov
sar
in
add
shll
push
or
jnp
sbb
std
dec
scas
xchg
dec
aam
daa
sti
es
xchg
and
mov
lods
insl
and
rep
adc
movl
imul
imul
mov
ljmp
sbb
xor
jmp
jg
and
clc
fstl
sar
pusha
jl
fwait
inc
dec
sub
je
mov
mov
cmp
mov
mov
das
cmp
incl
add
adcb
dec
xorl
mov
pop
loop
and
jno
shlb
fwait
pop
sub
sub
inc
xor
add
rolb
xor
or
add
orb
or
jmp
leave
adc
popa
push
jmp
sbb
shlb
fnsave
loopne
mov
dec
cmp
pop
orl
and
leave
dec
movsb
sub
lock
lods
pop
inc
cmp
push
xor
arpl
les
pop
pop
enter
cs
jmp
bound
insb
jmp
jo
sub
enter
loop
sub
addl
ret
sbb
stos
add
adc
xor
call
sbb
and
cltd
mov
cmpsb
xor
and
inc
inc
stos
pop
sbb
outsl
rclb
push
xor
inc
scas
jmp
mov
mov
adc
pusha
inc
rcrb
call
pop
call
enter
dec
rolb
js
xlat
popf
adc
xchg
mov
sbb
xchg
out
pop
sbb
sti
mov
jl
and
repnz
cmp
and
jae
mov
mov
test
and
int3
call
cmp
push
adc
icebp
lea
and
fsubrs
or
scas
push
inc
and
jnp
lds
loope
es
and
mov
and
fists
popf
in
adc
and
push
ret
sub
in
das
clc
or
jno
imul
cld
out
add
xor
inc
push
hlt
fists
mov
mov
xor
stos
add
push
adc
jbe
and
addr16
sbb
shl
pushf
and
and
add
add
or
cmc
pop
icebp
pop
inc
xor
cmp
cmp
adc
sub
push
xchg
addb
or
xor
jg
outsb
xor
xchg
or
sbb
and
pusha
rorl
mov
inc
mov
xchg
inc
iret
lret
mov
push
insb
andl
fstp
cs
in
add
add
jecxz
jne
sbb
cmp
sarl
ja
es
mov
cmp
subl
push
and
mov
jmp
cmp
ja
xchg
sbb
mov
mov
clc
jecxz
push
lock
fsubr
dec
mov
cmp
dec
mov
aaa
loopne
or
or
sub
adc
fidivrs
mov
faddl
stos
push
loopne
add
push
sub
or
push
insb
dec
aam
dec
add
mov
mov
lock
in
adc
adc
movl
lcall
into
lods
dec
sbbl
shlb
lret
je
mov
mov
test
inc
mov
or
dec
push
add
ljmp
and
add
rorb
in
sarl
sbb
pop
lea
mov
dec
aam
aam
popl
add
push
dec
inc
orl
aaa
sar
test
in
jecxz
pop
lods
mov
mov
dec
xor
jg
cmp
adc
xor
and
pushf
sub
push
sub
pop
mov
outsl
lock
cmpsl
test
movsb
dec
mov
test
jge
add
push
mov
fcomps
sub
mov
aad
mov
jns
push
sub
push
add
xor
movsl
int3
mov
and
call
push
dec
mov
iret
add
faddl
jbe
jle
inc
xchg
pop
xor
lods
repnz
xor
stos
rcrl
inc
loopne
ss
outsl
loop
cs
pusha
inc
xor
mov
pop
test
incl
outsw
push
xor
pop
mov
xorl
or
push
and
stos
leave
andb
push
mov
out
push
push
xor
inc
subl
mov
fs
out
jnp
add
ret
sbb
inc
and
sbb
ror
pop
push
call
fidivs
push
dec
daa
xchg
xchg
test
inc
mov
sub
pop
test
dec
inc
scas
fnstenv
ja
or
fwait
clc
mov
mov
mov
call
push
je
and
hlt
test
jg
inc
xchg
flds
inc
mov
pop
and
test
adc
mov
jo
xchg
std
jge
enter
lods
fstps
fsubp
test
pop
push
mov
cld
sub
or
scas
adc
popl
loope
sbb
or
cmpsb
lods
adc
addr16
insl
lcall
add
and
sub
inc
inc
mov
cltd
lds
sub
stos
add
pop
inc
fcos
push
sub
xlat
inc
sarl
or
nop
sub
outsb
les
sub
outsl
fwait
mov
imul
dec
test
adc
dec
popf
cmpsl
inc
in
ja
jg
mov
inc
arpl
cmpsl
aas
je
test
pop
jle
sub
xchg
out
mov
cltd
pop
mov
or
xchg
push
enter
add
lahf
xchg
push
or
lea
inc
test
inc
pop
add
rclb
or
lds
out
stos
aaa
hlt
shll
and
jbe
outsb
mov
and
std
dec
cld
hlt
or
push
jg
test
repz
mov
or
mov
add
push
inc
sbb
and
std
mov
inc
xchg
rol
push
adc
mov
pop
inc
lret
test
test
iret
loope
mov
xor
fs
movsb
mov
negb
xor
fmulp
cld
jecxz
dec
push
ss
jnp
mov
or
mov
cmpsl
sbb
add
lea
mov
and
in
xchg
inc
aaa
and
push
out
fs
fildl
dec
inc
lret
leave
mov
or
frstor
out
sub
mov
mov
push
mov
adc
or
jo
xchg
popa
mov
jle
mov
lahf
add
js
fldenv
and
in
pop
test
lret
subl
js
add
cmpsb
sbb
sub
mov
inc
faddl
jae
add
test
fsts
int3
aaa
pop
sub
mov
aaa
sub
xor
jl
gs
mov
in
ret
push
addl
xchg
jg
sub
movsb
int3
mov
mov
dec
push
add
xchg
adcb
jae
daa
add
outsb
hlt
mov
add
insl
jbe
cli
xor
dec
pop
xor
movsl
es
fisubrl
add
fwait
jns
rcrl
ret
gs
fdivs
lcall
sub
clc
icebp
out
xor
and
sub
ljmp
xor
mov
push
lods
and
push
popf
sub
pop
sbb
push
das
aad
out
and
subl
sbb
mov
mov
cmp
sbbb
outsb
fistps
inc
test
aam
cs
insb
pop
pop
xchg
adc
stc
je
pushf
js
insl
mov
and
adc
jbe
push
js
icebp
adc
lods
xor
xchg
or
ret
cwtl
out
movsl
bound
dec
xchg
out
mov
call
cld
stos
cld
jp
mov
das
aam
xor
cmpsl
mov
dec
pushl
out
cmp
push
pushf
cmc
mov
test
dec
jmp
and
jg
or
adc
stos
pop
lods
stos
jns
jne
mov
cmp
outsb
xchg
xlat
add
mov
xor
hlt
sub
push
sbb
shr
dec
jge
xchg
fldl
push
push
js
push
xor
mov
out
sbb
in
or
jae
pop
sub
jo
push
out
adc
sub
fisttps
out
pusha
test
jmp
inc
xor
les
shl
jns
les
dec
jle
fsubr
js
daa
xor
add
outsb
mov
push
std
filds
push
shl
lahf
mov
pop
pop
sbb
repnz
pusha
ret
test
push
mov
fisttps
inc
shr
mov
outsb
fs
test
dec
fnstenv
stos
sbb
pop
in
ljmp
and
inc
sti
jg
lods
and
mov
mov
cmpsb
push
mov
mov
rorb
dec
mov
xor
cmc
push
imul
shlb
cmp
add
sub
iret
out
das
mov
pop
std
jecxz
outsl
testb
subb
arpl
outsl
aam
lods
xor
mov
mov
sub
pop
andb
in
jg
cmp
inc
xchg
repz
jno
pop
sbbb
cmp
mov
test
pop
daa
dec
cwtl
cld
cwtl
cltd
push
imull
inc
cmc
jbe
jns
movsl
add
dec
push
xlat
aas
add
xchg
or
ds
push
leave
mov
mov
ss
xchg
xchg
fdivrs
fstl
adc
adc
inc
inc
dec
std
packssdw
lds
add
sbb
cld
aas
and
add
mov
adc
pop
roll
mov
daa
cmpsl
stos
insl
dec
repnz
mov
imul
addr16
lret
je
js
mov
movd
or
mov
lock
pop
xchg
sbb
cmc
mov
and
add
repnz
mov
sub
ret
xchg
xchg
popf
lret
and
cmp
dec
add
mov
cmc
jnp
sub
outsl
std
push
and
add
cltd
cmpl
lea
add
std
outsl
sbb
cmp
sbb
add
fildl
lds
loop
dec
add
add
out
incl
fwait
cmp
sbb
fwait
jl
mov
and
shlb
push
sub
cmpl
jg
test
pop
sub
repnz
sbb
or
pop
and
addl
xchg
clc
pop
cmpl
inc
mov
lock
and
jecxz
lahf
jae
xchg
or
lock
cmp
arpl
add
jbe
fdivs
cmpsl
icebp
loope
dec
inc
mov
mov
aas
mov
pop
sbb
insl
imul
movsl
dec
push
push
lahf
aaa
sbb
mov
je
or
add
fistps
xchg
stc
ljmp
repnz
ja
mov
inc
dec
push
push
mov
dec
push
fnstcw
jg
mov
sub
mov
fiaddl
pop
loope
mov
add
js
adc
call
out
dec
xchg
scas
jns
xchg
mov
pop
int
jp
push
dec
lds
xor
push
insb
fildl
pop
shlb
mov
mov
cwtl
jbe
fdivrl
lods
scas
cmp
in
add
xchg
mov
inc
mov
and
std
outsl
test
pop
or
arpl
jns
or
loopne
xor
clc
xor
data16
imul
sti
mov
add
cmp
mov
pop
subb
add
movsl
mov
sbb
int
push
inc
pop
clc
xchg
cs
add
jg
nop
popa
pop
lds
xchg
rorb
mov
cmpb
shll
and
movsl
pushl
xchg
xchg
aas
pushf
or
inc
ret
paddw
xchg
insb
dec
sbb
outsl
insb
das
rcll
and
aas
and
jmp
jg
xchg
add
sarb
mov
and
popf
and
fidivl
dec
iret
sub
sbb
jbe
adc
mov
dec
xchg
mov
push
lods
mov
sbb
inc
jl
xor
pop
pop
ljmp
test
push
pop
test
sarb
jle
hlt
in
inc
and
jl
sbb
fmuls
jecxz
loopne
adc
cs
mov
pop
ret
shlb
push
mov
mov
xlat
or
outsl
out
jg
xchg
les
mov
and
test
gs
cmp
adc
inc
add
mov
sbb
nop
dec
push
add
add
js
inc
and
loop
dec
fcompl
mull
xchg
cmp
mov
iret
add
aas
pop
test
mov
xchg
addl
pushf
call
jne
addl
cmpsl
pop
mov
xchg
daa
and
sub
or
mov
decl
fldl
pop
pusha
jg
dec
js
mov
push
ret
or
jmp
out
pop
arpl
roll
scas
add
iret
and
test
dec
push
jne
xor
mov
sbb
adc
xor
jmp
and
jp
fimuls
std
in
add
imul
pop
xorl
divl
mov
in
mov
idivb
xor
or
and
jo
les
and
adc
mov
mov
pop
lods
mov
fcmovbe
arpl
inc
xorb
push
mov
jge
icebp
xorl
xchg
jnp
cltd
ss
push
inc
scas
sbb
ror
fs
mov
fcmovnu
or
push
jbe
mov
pop
shl
ljmp
cmpsl
xor
xchg
and
daa
andl
sti
call
or
jne
int3
dec
sub
xor
push
fdivs
sub
and
shrb
add
and
and
out
mov
adc
test
inc
inc
push
adc
loop
js
repnz
lock
icebp
and
add
push
and
dec
add
mov
xor
add
inc
shll
add
push
pop
adc
adc
pusha
add
push
jo
inc
out
push
clc
sub
jb
cli
ja
inc
ret
mov
fcmovu
pop
cli
mov
ljmp
das
sub
sub
pop
and
jno
jge
dec
or
push
aam
dec
pusha
jo
jnp
xchg
push
cli
cmp
sahf
mov
pop
mov
pop
loope
xchg
enter
fidivrl
imul
xor
imul
cli
divl
stos
xchg
in
data16
in
sbb
add
xchg
dec
insl
sbb
movsl
dec
mov
xor
xor
hlt
dec
xchg
pop
mov
loope
mov
cmp
fs
cmp
outsl
xchg
jl
aam
jnp
add
fcoms
sbb
sti
test
pop
lock
ljmp
inc
int
dec
mov
pop
mov
repnz
cmp
in
sub
mov
js
int
add
inc
rcll
lahf
lods
mov
icebp
jg
push
repnz
or
lods
movsb
daa
bsr
jmp
adc
xchg
jmp
mov
sbb
pop
pop
add
push
jo
mov
aaa
push
add
or
pop
daa
clc
or
lock
and
pop
mov
fwait
outsb
inc
es
pop
xchg
call
jo
mov
and
and
ja
scas
push
fcomps
mov
xchg
popa
imull
push
adc
je
sbb
cmc
jb
xor
cmp
cmc
out
jge
mov
aas
lds
cmp
mov
jnp
jno
add
test
int
out
rcl
push
aad
mov
lret
lods
mov
add
push
adc
clc
or
adc
pusha
scas
test
subl
aam
adc
push
lods
mov
dec
dec
stos
cwtl
pusha
outsl
loopne
aas
addb
lock
xor
mov
incl
test
sti
pop
dec
dec
adc
and
lret
lods
add
add
cltd
inc
lods
testl
mov
cmp
cmp
repz
fwait
stos
mov
shlb
in
pusha
sub
std
pop
ljmp
or
mov
les
adc
jle
cwtl
insb
fsubrs
xor
xchg
shrb
fwait
outsb
push
dec
jae
push
jp
xchg
cwtl
aad
fiaddl
pop
cmc
inc
aam
imul
icebp
aaa
xor
out
jne
je
test
ret
mov
sub
popa
or
rorl
inc
add
inc
add
gs
and
mov
add
imul
rorl
xlat
incl
sub
jl
add
push
push
pushf
es
repnz
lret
insl
in
in
fnstcw
dec
or
sub
hlt
add
cmp
popf
dec
in
dec
addl
cmp
lea
adc
ret
mov
out
rol
cmpsl
lods
sbb
fst
mov
imul
test
add
inc
pop
jle
sbb
test
test
mov
clc
jae
pop
cmpsb
jne
push
sbb
stos
xchg
sub
xlat
fwait
in
rorl
ficomps
push
out
and
mov
sbb
sbb
outsb
sub
jne
jp
repz
nop
bound
inc
or
or
adc
inc
js
dec
fdivr
or
fwait
sub
fnstenv
test
add
sti
popa
add
sarl
xor
lds
out
and
pop
push
in
js
mov
lock
inc
pop
popf
xor
int
loope
scas
mov
and
lcall
pop
dec
xor
sbb
daa
mov
ffree
inc
fdivrs
push
xlat
js
inc
add
dec
scas
into
popa
cmc
mov
jle
or
jl
orb
ss
adc
out
lods
lea
mov
sti
fisttpl
mov
push
enter
dec
sub
scas
test
sbb
hlt
cmpsb
mov
mov
popf
or
je
jb
xchg
mov
roll
xor
faddl
into
movsl
arpl
insl
and
lahf
ret
rcll
lock
test
mov
mov
rolb
dec
inc
mov
jns
aas
enter
adc
fildll
decl
lea
pop
pop
xor
out
stos
mov
mov
out
adc
in
lock
or
movl
xlat
loope
mov
out
sub
sub
test
jno,pt
mov
int3
and
leave
adc
jae
sbb
hlt
nop
jmp
pop
ds
mov
jbe
cld
fimuls
inc
jg
mov
inc
sub
enter
xchg
fsubrs
aaa
xor
sbb
out
std
movsl
shrb
rorl
dec
je
push
mov
pop
loopne
or
mov
push
sbb
test
fistl
or
push
xor
cmc
jb
xor
out
icebp
outsl
or
xor
icebp
mov
pop
mov
dec
pop
cmc
lahf
ss
xlat
push
das
fsubrl
add
xor
movsl
movb
pop
movsb
xchg
mov
push
pop
mov
int3
xchg
std
pop
fcom
sbb
add
and
xchg
mov
push
pop
cmp
lcall
pop
js
push
xchg
and
icebp
pop
fisubrl
pop
mov
lret
lret
test
push
dec
xor
fs
mov
jg
xor
cltd
rolb
shl
jo
shl
int
les
mov
in
into
cmpsb
ljmp
jmp
pop
xor
sub
push
es
xlat
in
outsl
jg
fimull
adc
and
dec
inc
mov
mov
out
adc
pop
jne
loope
mov
and
xlat
mov
addl
inc
inc
sub
push
mov
rolb
sub
mov
je
push
das
orl
popa
inc
mov
out
and
test
rcr
cmp
push
or
mov
jle
addb
inc
les
or
mov
stos
pop
add
xor
add
and
adc
cmpb
add
movsl
add
jne
inc
mov
mov
cmp
test
mov
and
jge
in
inc
add
mov
push
fildl
pusha
push
shl
add
adc
push
int3
jge
lcall
mov
fnstenv
adc
sbb
push
xchg
stos
pop
lock
addr16
dec
inc
xchg
mov
xchg
xchg
fsubrl
mov
push
cmpsb
and
cmpsb
rcrb
and
and
popf
in
rclb
roll
cmp
adc
and
pop
out
cmpsb
lds
sub
sbb
and
cltd
sub
mov
hlt
test
xor
pop
int
inc
cwtl
add
stos
xchg
add
stc
push
push
and
aaa
cmp
mov
in
lret
mov
push
sub
call
sbb
ljmp
inc
or
xor
jb
sbb
and
push
dec
push
adc
fiaddl
jmp
and
int3
mov
push
inc
mov
cmp
addb
jmp
and
std
adc
outsb
sub
int
mov
mov
inc
jecxz
int
outsl
mov
or
xor
cltd
addr16
loope
in
clc
imul
adc
push
jp
orb
add
pop
inc
jmp
adc
or
fs
in
sbb
xchg
add
and
aad
and
in
xchg
les
leave
jp
daa
adc
fwait
push
stos
bound
and
aad
sub
pusha
sub
adc
cmp
push
add
repnz
inc
cmp
inc
stos
sbb
inc
sbb
adc
xchg
add
loope
add
mov
mov
xor
jo
mov
adc
and
push
push
inc
jecxz
adc
pop
jb
test
loope
inc
mov
daa
inc
insl
mov
cmp
or
cmp
push
test
jo
sub
xor
mov
sti
test
inc
das
xor
xchg
in
mov
sbb
dec
cwtl
fnsave
mov
lods
cli
add
pop
mov
cmpsb
xlat
jno
idivb
sub
inc
testl
pushf
and
pop
inc
pandn
jp
mov
scas
xchg
insl
add
add
mov
scas
mov
mov
stos
and
insl
outsb
and
test
mov
xchg
sbb
cmp
data16
mov
in
out
mov
mov
pop
add
push
xorl
rorl
fiaddl
cmp
or
fidivrs
sbb
test
xchg
cli
mov
cmp
adc
lcall
mov
fisubrl
mov
out
outsb
pop
pop
jo
or
int3
add
cltd
adc
mulb
xchg
aaa
xor
and
xorb
sbbb
adc
fwait
aas
outsb
sbbl
adc
andb
cmp
mov
je
div
out
lods
cmc
mov
xor
xchg
add
cs
outsl
mov
ror
add
rcr
aas
insb
jno
stos
std
adc
inc
add
jecxz
das
sbb
andb
insl
sti
test
shll
rclb
cwtl
push
incb
jne
push
das
mov
xchg
sbb
fisttpl
mov
pop
xchg
inc
shll
add
push
mov
sub
mov
mov
add
inc
call
aad
inc
arpl
adcl
mov
lea
or
pop
repz
jo
rcll
jg
xor
into
jg
inc
mov
mov
or
decl
sbb
jne
aad
sbb
inc
mov
aaa
pop
clc
mov
xor
mov
fimuls
pop
repnz
push
jnp
xor
adc
xor
mov
jle
js
jp
jmp
lret
jg
jg
lret
inc
and
and
rcll
sub
mov
mov
pop
add
xchg
ret
test
inc
movsl
xor
inc
ss
add
adc
or
or
jns
xor
pop
push
sbb
pop
loope
push
hlt
mov
xchg
push
mov
outsb
push
mov
adc
pop
inc
pop
push
lea
push
out
and
mov
dec
inc
jge
sbb
mov
xor
pop
sbb
sbb
sub
sti
cmpsl
icebp
inc
push
mov
jno
test
bswap
and
enter
inc
jmp
inc
sub
movsb
pop
daa
inc
xchg
or
mov
cmp
and
inc
xchg
push
pushf
std
jp
fwait
adc
adc
pop
xchg
cmp
adc
lods
sarl
loop
pop
fisubl
mov
adc
imulb
rclb
adc
jecxz
add
repz
outsl
pushf
mov
fucomi
pop
aad
sbb
mov
mov
lcall
add
das
jbe
aaa
loop
mov
and
popf
iret
and
mov
repnz
sub
dec
cld
enter
mov
or
hlt
adc
add
mov
lcall
jo
inc
or
outsl
push
pop
mov
cmp
out
mov
add
pushl
aaa
mov
xor
test
nop
pop
dec
shlb
mov
jb
movsb
rcl
sbbb
inc
push
pop
les
pop
test
dec
xor
lock
lods
push
cli
sub
icebp
or
aad
pop
jne
xor
fists
loopne
jb
xchg
jg
cmp
jge
fidivrl
push
enter
and
fsubl
xor
add
jle
mov
mov
dec
inc
test
adc
mov
ret
add
adc
cmp
push
lea
imul
cmp
fcomip
iret
add
bound
clc
rolb
bound
cmpsl
pop
mov
test
mov
or
pop
sbb
movsb
subb
inc
fwait
js
decb
and
sub
jo
sub
stos
mov
lea
int
push
sub
stc
rcr
sbb
inc
pop
cltd
push
lods
lods
or
adc
mov
out
or
push
dec
gs
inc
les
cmp
inc
jecxz
adc
test
mov
ds
push
pusha
jnp
push
test
and
adc
push
out
jg
cwtl
and
jl
mov
lahf
test
jno
fldl
aam
sti
mov
xchg
pop
dec
out
test
aaa
mov
lods
push
shlb
pop
aad
clc
lods
test
inc
inc
xchg
rcl
les
inc
insl
ljmp
mov
out
sub
fldl
xchg
and
pop
fucomi
and
lock
test
fisttpll
sar
inc
lea
jg
scas
dec
and
push
mov
jnp
jl
test
and
xor
cli
outsl
in
jmp
xor
cmp
push
sar
dec
inc
cwtl
enter
add
mov
and
push
push
lods
push
cmp
cmp
stos
scas
and
sbb
push
adcl
add
movsb
add
and
test
add
cmp
pop
lcall
lcall
das
ds
and
bound
pop
push
sar
ret
and
nop
stc
jo
inc
add
adc
xchg
add
lods
cmpsl
imull
loopne
jns
pop
push
int
test
inc
sar
fs
sub
mov
ret
mov
out
testb
xor
sub
mov
inc
pop
push
xorb
pop
out
stc
ret
or
dec
pop
push
mov
add
add
pop
or
clc
shlb
test
fisttpl
or
adc
stc
cltd
bound
out
into
and
into
push
mov
pop
xor
inc
sub
outsl
js
dec
fwait
jae
mov
hlt
enter
add
sbb
cwtl
push
int3
sub
or
and
fimuls
add
js
mov
or
ss
addr16
movsl
xchg
es
mov
mov
mov
mov
or
pusha
xchg
cmp
mov
ret
fsts
shl
lock
iret
mov
loopne
das
or
xor
pop
add
dec
add
shr
cld
push
sbb
mov
push
push
dec
cmp
xlat
subb
daa
ret
fwait
aaa
shlb
test
dec
xor
or
pusha
push
movsb
or
repz
daa
aad
jp
test
and
daa
mov
fisubrs
lcall
pop
cmp
inc
jmp
xlat
inc
mov
jmp
test
jne
or
inc
mov
sub
or
adc
pop
push
adc
xchg
mov
sti
cmp
js
add
inc
inc
shl
add
movsb
add
icebp
aam
mov
notl
jo
cwtl
inc
mov
sbb
test
mov
inc
mov
fimull
or
push
dec
pusha
ss
test
ret
jne
add
das
rcrb
and
lods
add
inc
shlb
out
andb
mov
xchg
cmpsb
dec
adc
dec
nopl
inc
mov
fsincos
dec
dec
sbb
push
shl
jo
and
add
enter
xchg
adc
aam
negl
insb
int
fadds
mov
insl
in
and
inc
add
mov
jl
mov
mov
jp
fcomps
mov
idivb
test
mov
ret
mov
aam
add
cli
xchg
cwtl
iret
scas
movsl
adc
cmpl
push
mov
mov
inc
je
cwtl
cmp
push
dec
or
or
pop
aas
test
inc
int3
call
mov
fdivr
adc
iret
loop
xorb
xor
sbb
mov
rclb
push
sub
std
mov
fsubrl
and
adc
fistl
mov
add
fisttpll
add
xchg
cmpl
or
xor
out
inc
call
scas
in
je
les
and
adcb
xor
sbb
dec
push
and
jo
add
out
lret
sub
adc
mov
cld
xlat
and
lcall
pop
movl
call
repnz
sti
xor
inc
and
adc
push
lcall
dec
jbe
cmp
xlat
lock
and
test
or
jbe
aam
fnstcw
push
inc
dec
popf
aaa
add
cmpsb
fldcw
xchg
mov
mov
mov
roll
mov
fimuls
sub
lret
hlt
ret
add
push
sbb
or
mov
sbb
xchg
cs
loopne
and
pop
mov
pop
in
adc
insb
xor
push
push
push
jmp
lock
cmp
inc
test
fwait
repz
inc
mov
fstps
je
jo
push
lds
add
test
lret
fucomi
shrl
dec
adc
pop
les
push
paddsb
mov
add
mov
add
or
jns
sahf
push
add
jns
mov
shrb
push
mov
or
call
xchg
add
add
sbb
cmp
sbb
fisttps
shll
cmp
mov
jle
test
adc
andl
enter
inc
cmp
jnp
or
stos
xor
xrelease
imul
lahf
sbb
lods
sbb
clc
jno
es
jae
jg
cwtl
repz
cmp
add
sbb
push
clc
adc
in
and
in
pop
mov
shlb
outsl
ljmp
pop
inc
push
inc
mov
and
fistps
sahf
mov
jae
lods
popf
add
call
mov
cmp
call
test
xchg
movsl
pusha
xorb
push
roll
add
sub
dec
inc
sub
mov
das
hlt
cmp
push
fadd
and
mov
gs
lcall
in
sub
sbb
xor
xchg
and
adc
cwtl
mov
or
loop
xchg
pop
ret
and
add
jecxz
pop
cmc
and
jp
outsl
mov
or
adc
inc
and
mov
aad
es
xor
pushf
xchg
jecxz
inc
adc
dec
scas
add
fwait
and
ja
push
push
out
mov
xor
shll
clc
xor
int3
repnz
cmp
addb
jbe
xor
dec
das
jo
insl
out
add
repnz
shl
enter
xchg
inc
push
sbb
sti
gs
je
inc
sub
leave
pusha
mov
pusha
das
dec
aam
lret
dec
add
and
insb
cld
clc
pop
adc
lods
xor
sbb
ljmp
fs
incl
or
pop
jg
lret
xor
lahf
js
fbld
sub
mov
xor
out
add
nop
fs
outsb
aad
push
lods
popf
xchg
test
mov
push
pop
mov
mov
cld
dec
add
jl
mov
mov
sbb
cmpsl
aad
mov
push
mov
pusha
add
pop
stos
sbb
out
inc
jo
cmpsb
cmp
add
inc
rcll
int
cmpsb
or
fistl
mov
lahf
test
mov
xor
or
pop
inc
adc
out
fdivrl
adc
add
cli
pop
ds
pop
fiaddl
mov
fnstsw
aas
stos
add
xor
cmp
call
rorl
add
in
xlat
add
dec
mov
mov
icebp
inc
fs
push
imul
out
lret
sub
push
mov
sarb
mov
jne
add
add
mov
mov
in
out
loopne
scas
add
mov
cmp
repz
adc
ret
sub
add
fisubrs
pusha
push
push
push
lcall
dec
popa
jns
sbb
lods
fucomp
mov
or
add
popw
testl
ss
jmp
or
push
lahf
cwtl
mov
jle
decl
adc
dec
call
mov
and
and
jle
mov
adc
and
stos
dec
or
push
adc
and
repnz
clc
pop
mov
mov
xchg
jns
xor
jl
cld
or
repnz
data16
aad
fbstp
movsl
rolb
or
fcoms
cmpb
jmp
or
xchg
or
mov
daa
test
pop
inc
scas
dec
xlat
push
xchg
in
mov
sbb
adc
cmpsl
lcall
add
and
dec
out
fildl
jl
sub
inc
inc
movsb
or
mov
std
test
and
and
pop
add
mov
cld
xchg
pop
imulb
decl
inc
xchg
push
lea
or
stos
push
mov
adc
cmc
xchg
jmp
sahf
in
lods
mov
sub
jp
orl
jle
inc
xor
cmp
js
and
popa
sbbb
dec
int3
loopne
sbb
fst
or
in
mov
mov
pop
and
es
sub
shll
sub
fistpll
ljmp
pop
jmp
or
int3
fwait
push
jno
push
mov
xchg
addr16
xchg
cld
bound
pop
inc
movsb
loopne
sbb
incl
cwtl
ret
sbb
inc
stos
or
mov
mov
push
pop
jle
sub
push
inc
sub
push
xchg
mov
or
mov
sub
dec
jge
loopne
push
cld
decl
das
cmpl
scas
scas
or
lret
sub
movsb
ljmp
pop
add
cld
sbb
inc
pop
outsl
out
ret
xlat
cmp
test
test
add
and
pop
arpl
mov
jl
mov
adc
mov
not
roll
clc
add
enter
xor
mov
hlt
or
movsb
cmpsl
stos
sub
cmp
pusha
shll
adc
in
int3
adc
pop
loop
repz
or
rcl
sub
aad
adc
and
vpsadbw
pushf
adc
push
mov
xor
lahf
jae
je
xor
shlb
in
andb
inc
xchg
or
call
fistpll
cwtl
add
scas
mov
hlt
pop
mov
and
push
xor
mov
subb
xchg
scas
sub
inc
es
adc
sbb
outsl
int
roll
push
pop
or
xchg
adc
add
cmp
loopne
sbb
mov
add
xchg
pop
iret
xor
add
inc
sub
inc
inc
adc
aaa
call
inc
and
mov
cmp
divb
dec
adc
and
les
mov
xchg
cmp
adc
dec
adc
sbb
inc
pop
cli
sahf
or
rcrb
enter
fsubrl
jle
pushf
shlb
sti
sahf
dec
in
adc
jmp
sbb
xor
ds
adc
mov
jnp
into
xchg
test
lods
fmuls
scas
subb
les
add
test
imul
xor
add
ja
cmp
adc
or
mov
repz
xchg
jle
add
jle,pt
iret
in
pusha
jecxz
xor
insl
js
lcall
pop
xor
jae
push
or
leave
inc
adc
shll
sbb
add
loop
mov
fcomi
xchg
loope
mov
out
fstl
xchg
xor
jl
and
cmp
cmp
jp
jmp
mov
call
outsl
popa
ror
or
mov
ss
xchg
imul
imul
dec
adc
sbb
es
bound
loope
and
sub
and
mov
les
andb
icebp
xor
rclb
cltd
cmc
mov
bound
addr16
push
rcrl
mov
mov
cmp
out
mov
xchg
xor
insb
cmp
sub
icebp
lea
mov
dec
cmp
cmp
mov
faddl
pusha
pop
push
inc
or
xor
insb
add
inc
aaa
sbb
psrlw
mov
push
cmp
mov
sarl
xor
mov
in
out
adc
mov
inc
xor
or
lcall
jnp
adc
mov
and
adc
sti
loopne
inc
insb
lock
dec
xor
and
gs
sarl
daa
xor
fdivr
filds
pop
mov
sub
and
cwtl
push
mov
mov
ljmp
mov
mov
lock
jge
xor
add
shll
xchg
sbb
mov
cmpb
leave
dec
mov
inc
das
inc
arpl
and
andl
mov
pusha
ja
add
loope
sahf
fdivs
cmp
lcall
or
in
rorl
movb
push
jg
es
inc
int3
shlb
loop
add
xchg
stc
mov
xchg
lahf
fisubl
adcl
add
sub
adc
out
xchg
push
addb
mov
ret
pop
sahf
inc
push
and
outsb
xor
pop
add
or
in
xor
imul
jno
subl
add
jnp
and
push
adc
mov
shlb
xchg
cmp
ret
jbe
mov
cli
lret
and
pop
addb
xchg
sti
xchg
jl
ljmp
call
mov
movsb
xchg
inc
lock
test
ret
sub
aad
adc
adc
pop
add
sub
mov
dec
scas
xchg
mov
push
adc
lret
leave
mov
push
adc
pushl
mov
ror
test
add
cmp
sub
ljmp
add
mov
leave
lock
dec
cwtl
incl
mov
pop
jp
inc
outsb
lds
add
leave
in
inc
pop
fwait
push
shlb
push
sbb
add
mov
cli
ret
lea
icebp
inc
pop
call
addr16
push
loopne
dec
jle
fwait
mov
mov
pop
fnsave
mov
fucomi
xlat
cwtl
push
cltd
xor
in
into
frstor
add
aam
inc
into
dec
add
rorb
mov
orb
xchg
sub
sahf
lea
into
cltd
subl
xor
imul
js
lods
fs
out
lcall
inc
dec
repnz
and
in
or
scas
loop
or
inc
outsl
call
pop
add
fmuls
cmp
push
insb
or
jmp
push
mov
cmp
adc
cwtl
lds
or
mov
scas
push
dec
stos
add
mov
out
adc
adc
test
and
imul
push
mov
movsl
or
adc
cmp
mov
popf
jnp
and
jnp
and
insl
jg
repnz
pop
adc
sub
xchg
loope
dec
les
clc
fildl
leave
jb
pushf
popl
iret
mov
scas
mov
sbb
iret
popa
dec
nop
test
clc
mov
cmp
fwait
cli
push
sbb
sub
ret
sbb
mov
dec
and
inc
sar
dec
std
xchg
sub
inc
sarl
xor
adc
sti
cld
int3
mov
das
std
push
xorb
sbb
and
adc
ljmp
dec
adc
xor
idiv
add
cltd
pop
and
test
rolb
cld
into
cmpsl
ficoms
push
lret
cwtl
or
add
sbbl
cs
inc
ret
out
cmpsl
mov
jbe
inc
sub
and
insb
das
mov
xchg
pop
sbb
js
out
and
and
insl
dec
out
and
mov
and
mov
dec
or
push
ds
orb
lret
cltd
or
mov
sbb
cmp
xor
add
xchg
jg
test
pop
and
sbb
arpl
ljmp
pusha
mov
cmp
fildl
xchg
mov
sbb
or
jge
push
scas
pop
mov
fisubrl
jecxz
and
inc
jl
mov
imul
js
add
xor
call
pop
fisubrl
in
cmp
cmpb
fldt
sbb
mov
adc
rolb
sub
mov
in
mov
sub
or
mov
fildl
and
hlt
aaa
cmc
adc
and
sbb
test
add
wbinvd
hlt
in
mov
test
xor
fwait
sbbl
fs
push
jecxz
fldt
xchg
stos
cmp
cmpsb
jne
jmp
rcrl
xor
jne
vmaxss
decb
sahf
xchg
repz
jbe
cwtl
mov
or
cmc
filds
sahf
xchg
aas
cmpsl
adc
imul
arpl
or
movsb
mov
mov
les
pop
rclb
pop
clc
sub
adc
jmp
or
imul
icebp
jbe
decl
jbe
outsl
in
jecxz
or
jo
call
into
leave
clc
push
pusha
dec
aad
xor
and
xchg
adc
xor
rolb
sub
mov
clc
loopne
test
test
out
inc
out
fisubl
and
outsl
loop
sti
inc
rorb
fisttps
rcr
fsubrl
cli
dec
in
xor
in
sub
dec
pop
sbb
xchg
loopne
jg
push
movsl
mov
inc
add
fs
mov
mov
mov
mov
cmp
outsl
decl
ret
mov
mov
test
jo
push
pop
scas
jbe
rcrb
je
and
or
sar
and
sub
inc
xchg
add
outsb
xor
sub
and
dec
lahf
shrd
addr16
sbb
fisttpl
push
xchg
push
fmuls
and
push
jo
dec
adc
jo
fcompl
jecxz
js
adc
mov
mov
outsb
add
dec
inc
jp
or
adc
mov
sbbl
subb
mov
sbb
cs
ret
xchg
rclb
dec
mov
cs
jg
out
pop
jle
pop
fdivl
popa
pop
outsl
mov
lret
xchg
adc
mov
mov
inc
popl
mov
jecxz
inc
repz
inc
arpl
sub
jno
jns
lcall
pushl
inc
stos
mull
loope
adc
add
lods
cli
inc
imul
movsb
jnp
mov
daa
push
dec
xchg
or
mov
dec
or
push
add
test
fildl
jg
and
arpl
sbb
pop
in
out
sar
cmpsb
lods
pop
movsb
jo
mov
mov
es
mov
dec
incl
adc
lock
jmp
add
mov
xlat
movsb
mov
in
ret
cmp
mov
mov
inc
movl
and
roll
shll
xor
jge
aam
jecxz
out
cmp
inc
xor
mov
dec
push
inc
nop
lahf
stos
mov
out
incl
cmp
push
shl
jmp
sti
daa
dec
repz
addl
mov
stos
add
mov
test
mov
cmp
jecxz
jmp
dec
cmp
mov
pop
fs
mov
xchg
jle
push
pop
fstpl
dec
test
mov
pop
clc
das
vsubps
dec
xor
xchg
jl
jb
cmp
mov
in
mov
cmp
cmpl
call
test
sbb
cli
lods
jmp
inc
sahf
push
or
in
loopne
std
pushf
xor
jb
mov
mov
inc
push
sub
adc
mov
mov
je
rcr
sub
iret
and
inc
or
sub
and
and
in
adc
sub
mov
and
jp
inc
testb
sbb
xchg
shrl
iret
mov
aad
ljmp
dec
fs
outsl
ljmp
sbb
mov
popf
outsl
ror
fldenv
gs
mov
in
nop
ss
das
faddl
sub
dec
out
push
or
data16
jecxz
and
outsl
loop
dec
inc
leave
inc
sbb
les
rorb
inc
movsl
das
mov
rcll
lret
inc
xchg
sbb
adc
ja
sti
inc
loop
fs
jmp
decl
pusha
in
mov
push
push
pop
adc
out
and
fs
test
mov
scas
test
add
fistpl
pop
cmp
je
mov
or
pop
mov
gs
outsb
pop
mov
insl
loopne
outsl
loope
pushl
cli
cld
daa
pop
mov
sar
mov
push
jl
mul
jg
jge
mov
rorl
sub
imul
push
sub
jge
push
and
sbb
pop
or
int
fildl
jb
and
adc
leave
push
arpl
jg
mov
push
lret
pusha
test
mov
mov
popf
add
daa
xchg
add
pop
dec
sbb
and
jge
push
call
out
pushf
jb
and
loop
xchg
inc
inc
out
shld
mov
imul
mov
pop
mov
aam
or
xor
jp
ds
lret
jle
inc
nop
and
jno
pop
ljmp
jecxz
dec
jmp
pushf
pop
push
std
inc
jg
push
cmp
jg
pop
cmp
xorl
les
imul
lods
hlt
push
divl
fsubrs
pcmpgtw
or
push
faddl
cmpsl
inc
loop
xor
pop
dec
std
outsl
outsb
outsl
xchg
clc
imul
jo
jb
clc
mov
fdivrs
cmc
pop
in
outsb
pop
cmp
bound
jbe
roll
ret
and
pop
std
imul
push
nop
test
fsubrl
lock
dec
andl
and
lock
outsb
mov
outsb
xchg
aas
and
clc
out
cs
pushf
inc
and
sbb
jge
push
aaa
lea
rol
pop
inc
insl
mov
mov
loope
aad
push
or
ret
cmp
xorl
mov
and
mov
repnz
lret
ret
and
je
data16
clc
fistpll
das
push
cmc
and
popa
dec
fnstcw
test
xchg
mov
stos
and
lcall
mov
mov
lds
stos
outsb
xchg
jl
pop
in
jmp
cld
das
pop
mov
pop
jge
adc
imul
mov
sub
push
xor
call
dec
mov
xor
mov
sbbl
sar
push
aad
add
or
stos
jge
mov
xor
or
jmp
addb
mov
hlt
ss
push
push
sbb
push
mov
pop
ljmp
adc
inc
sub
jge
scas
mov
pop
mov
incb
inc
xchg
rorb
push
mov
in
or
fcoms
shll
mov
lds
pop
mov
inc
outsb
pop
cmc
push
dec
sbb
cmp
push
add
add
or
and
xor
mov
xchg
jno
adc
sar
fists
bnd
leave
jmp
add
cmp
cmpl
dec
outsb
cmp
jecxz
or
out
and
vpsllw
scas
push
xchg
mov
das
and
inc
add
fwait
sbb
mov
cld
int3
fwait
inc
icebp
sbbb
jg
add
push
outsl
in
jns
sarl
sbb
jbe
outsb
das
adc
xor
cmpsl
push
xchg
scas
rcrb
lods
movsb
mov
pop
push
sti
pusha
and
loop
imul
popa
les
out
xchg
ds
xor
lds
shll
dec
push
jno
mov
mov
push
xor
pop
push
push
mov
out
ljmp
fdivr
sarb
insl
cmp
add
or
and
cwtl
inc
insl
or
nop
and
mov
lcall
adc
mov
adc
sub
lock
fcomp
loop
add
add
add
push
lock
pop
iret
adc
sub
pop
adc
dec
in
fxch
int
sub
iret
stc
nop
pop
ja
jns
fstpl
push
sub
xchg
and
pop
fidivl
push
adc
sbb
shrl
sbb
andl
popa
je
enter
sbb
mov
icebp
mov
pop
call
int
cmpsl
decb
out
rcrl
insb
push
les
push
push
mov
loopne
imul
ja
mov
daa
dec
test
cli
jmp
jbe
mov
dec
stos
cwtl
rcrb
icebp
dec
das
fdivr
fbld
push
adc
or
jno
push
xchg
pop
xor
or
xor
inc
cld
mov
dec
pusha
jg
pop
mov
sbb
fbstp
cld
adc
xchg
cli
dec
inc
pop
sbb
ret
rorb
and
push
in
mov
cwtl
pusha
and
xor
data16
xlat
cltd
mov
inc
stos
pop
cmpsb
aad
mov
mov
loopne
and
sbb
mov
jne
insb
shlb
ds
cwtl
adc
pusha
fimuls
test
sbb
psllq
scas
rcl
cli
out
or
adc
and
adc
adc
pop
mov
cli
xorb
mov
das
pop
adc
jne
lock
clc
rcrl
pop
lret
or
aad
add
outsb
mov
push
mov
fistpll
dec
rorl
or
lods
popa
out
or
fistps
cli
adc
es
mov
xchg
rcrb
xchg
add
jmp
test
sbb
mov
loop
xor
aaa
pop
fildll
stos
lret
leave
outsb
xor
lods
jmp
popa
or
push
mov
and
xchg
and
jo
pop
pop
sub
sahf
push
shll
test
mov
mov
add
aaa
aad
cwtl
jmp
push
add
test
add
sbb
mov
xor
decb
in
mov
jecxz
mov
and
js
sarb
out
outsb
push
arpl
sbb
sub
in
fwait
xor
lea
dec
cmp
les
fists
dec
push
and
xorl
push
scas
cld
and
std
loop
xor
cld
and
repz
roll
and
mov
fistpl
pop
mov
push
jge
mov
test
fdivrs
idiv
incl
xchg
dec
add
js
cmp
loop
xchg
pop
and
mov
fsts
sbb
pop
push
dec
mov
mov
jae
lock
gs
mov
and
inc
push
mov
inc
xchg
adc
dec
sub
mov
je
es
fnstenv
push
ret
jg
lret
xchg
and
cmp
and
bound
inc
fists
ljmp
popf
std
pushf
stos
jno
xchg
std
xchg
cltd
jle
mov
xchg
ret
outsl
enter
aad
movsl
cmc
xorl
inc
xchg
movsw
xchg
fistl
cld
cmp
cmp
cwtl
or
push
insl
cwtl
iret
mov
xchg
outsb
fs
and
lret
push
fildl
mov
mov
call
xchg
lret
test
out
movsb
xor
aas
cmpsb
inc
negb
pop
adc
repz
add
or
sub
pop
mov
add
dec
xor
pop
add
sbbb
fldt
inc
jle
inc
fwait
imul
adc
sar
push
add
dec
lock
subl
lock
das
jne
pop
mov
jo
xor
add
or
jg
jg
adc
aam
inc
movsb
pop
pop
pop
cmp
xchg
jb
xchg
test
gs
sub
xchg
or
pushw
ss
and
incb
fs
pop
lods
icebp
aad
push
cmpsb
addb
dec
in
call
xlat
in
das
dec
dec
or
roll
pop
gs
jl
push
loopne
inc
ss
xor
test
pusha
loope
mov
add
in
push
pop
add
je
mov
pop
cmp
imul
sub
cmp
add
insb
sbb
cmp
mov
jg
mov
mov
jl
xchg
xor
xchg
enter
sti
add
lods
jmp
cld
scas
push
decb
xor
out
jecxz
cmp
fisubs
push
add
jbe
inc
xchg
xor
mov
in
sbb
pop
mulb
mov
adc
incb
pop
or
cltd
mov
xchg
mov
or
sub
push
sti
jnp
or
enter
rolb
push
mov
lock
pop
jb
mov
pop
jge
mov
popf
or
in
mov
jge
movsl
pushf
ljmp
or
ss
sbb
xchg
sub
stc
jae
xchg
jge
pop
test
add
in
out
cs
les
pop
sbb
jge
xchg
jo
das
push
add
icebp
fsts
push
sarl
stos
scas
mov
test
lret
fst
jns
lds
das
andb
loope
andps
jmp
test
pop
mov
and
mov
sub
mov
add
loop
adc
push
adc
cmovnp
xor
sbb
and
inc
mov
inc
fs
pop
push
and
inc
inc
sbb
roll
int
and
mov
in
popf
add
testl
and
push
addb
les
mov
jne
push
inc
pop
int3
nop
add
add
fisttpll
mov
mov
call
sub
loopne
xor
sbb
jae
or
addr16
sbb
inc
aam
adc
and
std
add
testl
popa
fwait
xlat
sbbb
ret
push
cld
popa
rorl
add
add
inc
sub
shrl
jg
and
jmp
stos
cli
sub
and
cmp
dec
clc
inc
add
push
sarl
add
xlat
cs
lcall
stos
dec
inc
mov
sub
mov
rolb
sbb
adc
xor
sub
push
rclb
sub
shrb
les
push
mov
adc
scas
sub
cmc
sbb
ss
imul
inc
leave
loope
add
rcrl
js
sbb
push
test
sub
fs
arpl
mov
pop
rorb
rcll
sbb
cmc
es
out
push
mov
add
cmp
or
and
repz
pop
push
les
pusha
rcrl
inc
adc
jne
int3
cmpsb
and
cltd
in
jg
or
jge
xor
cltd
cs
dec
pop
pop
gs
clc
rclb
movsl
mov
stos
jle
out
push
xor
add
idivl
jae
out
push
add
sub
cmp
fildl
je
add
data16
mov
jo
ret
and
call
sub
jg
cli
call
adc
sub
xor
sbb
roll
dec
enter
pop
xor
mov
xlat
into
dec
jmp
loope
jne
aad
in
std
mov
fs
pusha
cmpl
adc
jg
sbb
daa
imul
fcmovbe
add
int3
das
mov
ds
hlt
and
insl
cmp
sub
sar
push
sub
pop
mov
mov
mov
das
mov
mov
sti
xchg
adc
mov
fmuls
inc
cmc
mov
and
notb
in
sbb
gs
sti
out
ret
add
mov
das
fdivl
sub
mov
rcrb
mov
sbb
push
push
pop
fldt
and
in
mov
adc
sbb
cmpsb
push
mov
ja
outsl
aad
cmp
push
fwait
out
adc
mov
divl
sub
jge
fdivs
jae
push
fld
xchg
jg
fistpl
mov
stos
adc
fstpt
cmc
jb
dec
push
mov
mov
jo
jnp
pop
fcomi
cmp
ret
push
ret
insl
xor
ret
mov
inc
lds
inc
testl
fists
adc
mov
data16
xor
mov
cmp
cmc
xor
loop
and
test
cmpsl
sbb
and
inc
sbb
aad
fstpt
cmpsl
nop
sub
test
sub
sbb
jecxz
outsl
clc
mov
push
or
filds
sub
add
arpl
pop
jle
in
sbb
pop
call
fdivr
push
mov
pop
out
adc
fdivs
add
pop
cmp
cmc
pop
sbb
sti
cmp
aaa
mov
mov
les
pusha
aas
pop
sbb
shl
in
decl
aam
nop
in
sub
mov
xchg
fisubrs
xor
jbe
jge
adc
ret
adc
sbb
add
lret
icebp
sub
cmp
and
fmull
mov
xor
xlat
mov
sub
xorl
out
sbb
jecxz
or
into
movl
icebp
call
jno
stos
xchg
arpl
mov
mov
test
xor
mov
mov
adc
fs
outsl
daa
imul
push
aas
pop
jbe
dec
pushf
out
call
and
pop
mov
loope
adc
inc
out
lea
aas
pop
or
rcrl
loopne
and
adc
adc
dec
add
lcall
loopne
pop
dec
es
push
aam
cwtl
aam
ds
add
ds
jne
mov
xor
test
iret
mov
call
add
xchg
add
pop
or
mov
adc
add
add
out
xchg
js
movsb
cmpsl
lret
add
test
add
dec
pop
stc
addb
sub
addr16
or
mov
out
pop
fmuls
xor
xlat
mov
mov
mov
add
addb
cmp
stos
xor
test
dec
mov
jo
and
and
andb
and
inc
arpl
std
pop
push
hlt
xor
inc
sbb
adc
and
loopne
popf
mov
add
xchg
in
pop
outsb
push
decl
and
xor
or
and
cmp
mov
sarl
xchg
pusha
add
pusha
fucomip
daa
adc
push
dec
shr
xchg
loope
push
push
daa
add
mov
and
cmc
out
pusha
ret
cmp
jns
sbb
push
pop
push
inc
push
pop
push
aas
sub
repnz
call
jae
or
ljmp
xchg
mov
das
ret
hlt
inc
adc
adc
add
nop
cmp
mov
out
es
and
adc
add
sub
dec
mov
inc
add
mov
lret
sbb
and
and
mov
add
cltd
cmp
cli
add
adc
mov
jmp
rcrl
mov
hlt
sbb
cltd
mov
iret
rcr
out
rcl
adc
mov
sbbb
inc
dec
pop
and
pop
xor
adc
test
mov
push
inc
add
rcll
pop
iret
ss
inc
lds
cmp
fisubs
stos
les
das
cmc
aam
into
scas
fldt
or
loopne
mov
sbb
pop
mov
js
push
add
sbb
cmp
jg
clc
ret
popf
je
add
cs
mov
outsl
jo
aad
and
mov
mov
shrl
pop
jg
and
sarl
and
mov
fs
sarb
mov
leave
sub
add
push
sub
jae
rcrb
adcl
mov
or
fidivrs
in
push
xchg
cld
or
inc
xor
js
sbb
adc
mov
jle
push
aaa
mov
imul
or
or
das
pop
arpl
popf
scas
andb
in
mov
pop
cmpsl
stos
std
mov
lea
xchg
mov
fcoms
inc
ljmp
lds
cmp
rol
jb
loope
push
jmp
lret
push
inc
push
add
push
jg
iret
and
insl
mov
mov
xor
sub
mov
ja
mov
xchg
mov
dec
into
mov
lds
sti
inc
inc
mov
das
jg
daa
lahf
and
aas
xchg
and
int
sahf
mov
mov
dec
daa
aaa
sub
dec
bound
addr16
in
mov
xchg
adc
mov
jne
sbb
pop
pop
int3
loop
lds
jnp
in
jae
pop
sbb
or
arpl
or
xchg
shl
mov
jno,pn
sub
jns
imul
les
mov
lock
cmpsb
pop
pop
pop
clc
sti
inc
or
popa
popa
in
fs
mov
lcall
loopne
xor
push
push
nop
cmp
mov
jns
fs
lds
push
lds
lcall
push
pop
push
mov
or
loop
cs
lahf
outsb
ret
mov
mov
jae
out
add
jp
inc
loopne
push
insb
mov
enter
jl
xchg
fldt
cmp
jp
cmp
mov
inc
cmp
mov
test
mov
jle
sub
inc
rorb
bound
push
sub
and
or
or
and
push
in
mov
js
or
dec
add
icebp
pop
pop
scas
hlt
pop
adc
jp
aaa
movsb
bound
xor
mov
sub
jne
stc
lcall
xchg
aaa
je
or
call
jno
and
fwait
lret
push
lods
rorl
lret
pop
je
stos
fdivp
into
mov
aaa
out
inc
js
cmp
mov
xor
arpl
ja
shlb
and
iret
outsb
repz
xor
lds
mov
or
int3
iret
call
in
push
sbb
call
rorl
lods
or
ds
data16
out
negb
jo
int3
das
rcr
es
sbb
inc
sub
cmp
adc
xor
mov
ret
or
adc
mov
jg
fidivl
push
mov
mov
pop
jnp
xor
inc
cmc
roll
test
mov
imul
jecxz
pop
fisttps
lods
xlat
dec
jl
addr16
adc
push
fistpll
xorl
mov
hlt
shr
test
call
ja
outsl
push
and
cltd
jle
test
push
cmp
xor
cld
aaa
outsl
aam
adc
pusha
lea
add
sub
fildll
sub
add
repz
in
das
cld
ffreep
sub
xor
sub
mov
cmp
mov
js
ret
dec
fadd
bnd
push
adc
movsl
push
mov
ljmp
inc
add
or
ret
popf
sub
lods
les
xchg
sub
xlat
lret
int3
adc
xchg
outsb
les
jl
adc
ja
in
pop
loopne
jmp
icebp
sbb
addr16
mov
dec
out
adc
mov
into
jo
das
test
std
inc
adc
std
call
add
push
xchg
inc
push
jp
mov
ljmp
fsubs
lods
test
push
jg
das
shl
and
repz
fs
ret
nop
pop
js
add
adc
call
scas
sar
adc
jge
inc
movsb
dec
pandn
cld
sbb
inc
adc
movsb
jns
inc
incl
pop
jp
out
and
leave
out
fbstp
push
pop
or
sub
adc
xor
jg
flds
or
mov
hlt
pop
and
das
or
pop
in
into
loop
xchg
lcall
daa
dec
cmp
roll
mov
adc
adc
divl
repz
mov
test
mov
arpl
test
movl
inc
ljmp
xor
aaa
fisttpl
test
inc
jne
cmp
rorl
push
pop
and
xchg
push
add
xchg
shll
add
fs
sbb
jb
cltd
adc
movsl
mov
pop
clc
mov
push
cmc
adc
sub
ljmp
cmp
movsl
cmpsl
clc
pop
push
push
nop
cs
out
pushf
push
jnp
jno
flds
shll
movsl
dec
das
and
pop
cli
mov
dec
mov
into
mov
mov
test
out
movsb
test
push
js
fcmove
xchg
fwait
adcl
inc
mov
add
pop
mov
adc
in
push
xchg
insl
std
sbb
mov
mov
sbb
outsl
pushf
push
mov
mov
mov
push
jmp
std
push
jg
or
cmp
add
inc
cmp
or
pop
push
and
sbb
movsl
xor
add
push
mov
jno
arpl
lcall
sbb
dec
scas
sbb
fcoms
jecxz
fildll
clc
mov
sub
xor
dec
hlt
ljmp
lahf
repnz
push
mov
dec
sbb
xchg
jge
aaa
enter
loop
repnz
xor
mov
xor
pop
out
into
mov
add
jg
aaa
imul
ljmp
pop
push
imulb
pop
push
sti
add
scas
into
and
pop
fistl
loope
in
movb
sub
inc
mov
outsb
mov
iret
push
sbb
fisttpl
fnstsw
add
fisttpl
rolb
addr16
lods
rclb
cmc
xchg
lock
push
xchg
cltd
pushf
mov
aas
inc
jmp
adc
aam
mov
in
or
sub
or
push
ljmp
dec
daa
cli
or
aam
rcrb
push
mov
xchg
adc
aas
inc
mov
das
mov
mov
xchg
inc
es
cmpb
test
mov
dec
call
add
pop
rorb
aam
mov
pop
clc
lods
sarb
mov
or
or
xlat
jp
mov
clc
xchg
les
das
int
cltd
pop
popa
sub
sarb
sub
add
movsb
dec
jl
jnp
les
int
orb
pop
mov
ret
pop
cli
cmp
sub
dec
inc
sub
xchg
jle
xor
dec
pop
mov
lock
xchg
jo
mov
mov
push
jge
pusha
jl
jg
f2xm1
mov
dec
sbb
cmc
mov
push
pop
call
lods
dec
mov
push
imul
int3
ja
jo
mov
jecxz
add
js
or
or
shlb
clc
add
pop
clc
and
js
cwtl
int
cmp
stc
xchg
test
xor
cld
ja
mov
mov
add
jg
fstps
pop
add
dec
sbb
incl
mov
in
and
dec
or
add
outsl
je
or
xchg
or
ds
xchg
insb
fbstp
xchg
or
mov
in
rcll
cli
add
cmpsl
pushf
ds
mov
rolb
mov
mov
jo
or
out
push
sbb
or
sub
rcl
mov
xchg
loope
leave
or
mov
mov
add
pop
arpl
fcmovu
hlt
inc
xchg
lock
test
fdivs
cmpl
jp
dec
test
pushl
sub
int
push
ljmp
ss
add
lcall
and
add
std
sub
aaa
dec
es
and
inc
mov
outsl
filds
idivb
js
jbe
jmp
enter
push
mov
pop
or
mov
sbb
and
mov
dec
xchg
and
adc
mov
rorb
ja
mov
xchg
mov
les
fwait
mov
mov
sbb
fsubs
aaa
mov
pop
push
xchg
sub
mov
xorb
or
fcomp
cmc
mov
lahf
cld
mov
jl
xor
adc
adc
orl
add
push
pop
push
adc
cwtl
imul
add
sti
outsl
or
jl
shlb
sbb
inc
pushf
sbb
inc
incl
xor
xor
add
dec
in
push
fwait
mov
pop
sbb
add
test
push
and
lock
pusha
lcall
pop
mov
fucomip
xor
pop
xor
pop
stos
test
fisttpl
stos
imul
jae
and
and
xchg
push
adc
adc
pop
xlat
mov
push
cld
cli
call
fwait
int3
jmp
push
mov
dec
lahf
push
rcl
mov
ds
xor
hlt
lods
mov
push
xor
shlb
cmp
mov
xchg
mov
jne
lret
outsb
fistpll
std
movsl
js
mov
jp
leave
popa
mov
inc
push
mov
jnp
and
inc
clc
enter
inc
movsl
adc
pop
or
sub
cmc
loope
loopne
out
cmp
ljmp
dec
aaa
in
pushw
or
cli
pop
dec
btr
dec
out
movsl
in
jmp
adc
sub
cltd
les
pop
neg
and
rol
ds
add
cmpsb
int
mov
arpl
jge
fwait
lea
jecxz
loopne
sbb
sti
and
or
popf
push
sbb
xor
hlt
push
filds
movsl
cmp
rorb
jbe
xor
testl
out
out
adc
movsl
shr
lret
mov
add
mov
jbe
jg
fnstsw
outsb
inc
fdivr
pop
push
jmp
add
mov
sarb
push
pop
fst
push
jbe
pusha
loop
ds
mov
test
inc
lcall
mov
scas
jo
push
shrl
or
pop
mov
add
insb
int
mov
push
mov
inc
clc
inc
sub
repnz
ret
nop
adc
adc
incb
popf
jp
fdivr
mov
mov
test
push
stos
dec
aam
adc
clc
ret
inc
rol
push
aad
out
neg
in
pop
inc
inc
sbb
push
adc
fcompl
stos
rcl
xchg
movb
inc
sti
lods
outsl
arpl
mov
daa
ja
dec
mov
or
add
popa
dec
orb
das
inc
in
loop
jb
jle
pusha
stos
push
enter
rcrb
push
push
cmp
mov
xor
loop
sub
js
cmp
shl
out
rorl
inc
cs
push
pushf
movsb
icebp
pushf
cmp
jno
sub
mov
aam
xchg
dec
mov
push
cmpsl
and
out
andl
movsl
es
ljmp
mov
push
cs
and
cmc
push
aam
fists
rsm
inc
mov
enter
fistpll
add
xchg
roll
scas
cmc
aaa
jbe
shll
mov
push
add
sbb
dec
je
mov
in
push
cmpb
cltd
push
movsb
sar
mov
mov
mov
sub
mov
xchg
in
inc
cmpb
or
dec
mov
mov
pop
cmpsl
fsubl
rorl
jo
sbb
out
js
sub
out
daa
fistps
push
jge
sbb
lds
in
mov
jmp
lods
ffree
incl
in
dec
lods
rolb
cld
sub
mov
mov
sub
pop
call
and
or
dec
imul
mov
sbb
pop
adc
dec
pop
das
insl
cld
cmpsb
lcall
sub
dec
das
pop
inc
sub
pop
mov
ds
xor
outsl
das
insb
cmp
test
jg
push
cli
scas
or
cmp
aad
movl
int
xor
push
push
xchg
ljmp
pop
in
cmp
xchg
dec
sbb
mov
test
adc
dec
mov
sbb
out
add
jbe
push
ret
cli
out
pop
movsb
rorb
adc
test
or
int
add
fcomi
sbb
nop
push
mov
or
dec
lahf
cli
popa
mov
pop
xor
mov
stos
inc
lcall
or
cmp
mov
inc
es
jne
int
imul
dec
lods
xor
jg
pop
clc
mov
ret
into
mov
cmp
dec
sahf
negb
lds
mov
inc
xchg
sti
xchg
stc
push
les
cli
pusha
sar
lock
cld
outsl
push
cltd
xlat
jo
xchg
sbb
jmp
dec
jge
pop
es
xchg
xchg
pushf
mov
dec
xor
push
div
rolb
fidivrs
roll
mov
sbb
cmpsb
stos
movsb
lahf
jae
cmp
decb
mov
push
ret
cmc
mov
sbb
movsl
jb
ret
insb
push
notl
mov
cmp
mov
pop
lods
mov
and
inc
lock
push
mov
fistpl
imul
mov
mov
mov
inc
push
lods
ss
add
cmp
push
dec
adc
in
or
aam
fidivs
xchg
push
jmp
cmp
aaa
nop
mov
push
or
fcomps
testb
pop
enter
cmpsb
cmp
xchg
clc
push
loopne
shrl
je
lods
loope
mov
sbb
mov
push
and
dec
je
cld
dec
insb
pop
incb
jae
les
iret
or
push
or
std
out
stos
cmpsb
fucomp
pop
lea
rol
pop
loope
dec
and
xchg
shrb
push
jo
ljmp
and
add
lcall
mov
scas
dec
out
or
pop
enter
jl
or
loope
mov
mov
scas
cmc
popa
daa
jp
add
and
mov
subb
xor
push
mov
ljmp
cmpsb
inc
fs
ja
xor
shll
dec
push
ficoms
mov
test
leave
pop
imul
lds
mov
xchg
and
sahf
test
fists
and
jle
mov
jmp
jl
mov
in
data16
push
xchg
js
push
imul
fcmovu
cli
push
inc
pop
outsl
repz
jp
mov
push
push
pop
pop
dec
lcall
xchg
js
sahf
sub
lcall
jle,pn
jne
add
xchg
fiadds
fsub
loope
ret
mov
xchg
and
lock
cli
decl
pop
std
push
pop
adc
cld
movsl
stos
jle
jl
mov
stos
fs
mov
mov
les
jg
push
xchg
in
pop
mov
xchg
les
inc
pop
stos
testl
shl
jg
std
push
aam
sub
add
mov
jb
pop
aaa
mov
mov
clc
notb
pop
adc
inc
jecxz
adc
pushf
cwtl
repz
push
xchg
cmpb
out
sbb
xchg
xchg
inc
jge
cld
das
sub
ret
push
in
gs
mov
xadd
cli
xlat
je
int
mov
or
lds
loope
fldln2
or
add
sti
lret
sub
push
fs
incl
fimull
dec
jmp
sbb
cs
mov
movsl
mov
push
mov
mov
add
sbb
rcrl
mov
loope
xor
push
pushf
out
outsb
mov
cmp
add
and
or
xchg
pusha
pop
sbb
inc
sub
cmp
out
ret
mov
mov
adc
adc
mov
aad
repz
push
inc
xor
clc
add
rorb
test
or
dec
ja
jg
and
sub
not
mov
adc
adc
icebp
popf
cmpsb
mov
adc
aaa
out
or
pop
xchg
mov
sub
xchg
ss
mov
rclb
adc
adc
loopne
and
sbb
pop
test
mov
mov
outsl
cwtl
push
inc
adc
jne
leave
jnp
push
test
mov
cs
dec
pop
dec
inc
rcrb
pusha
shll
mov
scas
movzbl
lods
mov
jns
lret
sbb
add
subb
ffreep
push
adcl
insl
fs
packuswb
push
mov
outsb
add
insb
rorb
mov
dec
insl
outsl
mov
out
and
jmp
xchg
inc
add
pop
xchg
sahf
jecxz
das
icebp
cltd
dec
subl
cltd
pop
mov
sub
call
hlt
imul
arpl
mov
adc
sbb
pop
mov
loope
mov
sbb
insl
sub
or
dec
xor
mov
pop
inc
mov
clc
les
cmp
push
adc
cmp
in
outsl
fucomip
push
lds
mov
shr
and
insl
outsl
sbb
je
cmp
or
fs
in
pop
pop
adc
xorl
mov
movsb
nop
fldenv
xchg
lods
add
test
sbb
dec
aaa
lea
dec
mov
jp
int3
add
mov
cmp
jo
out
xor
xor
mov
xchg
fdivrs
inc
cmpl
pop
clc
jg
and
dec
sub
ss
dec
mov
lcall
adc
xlat
inc
sbb
inc
adc
sub
shrl
jno
lea
sub
add
neg
inc
sub
cmpsl
mov
ljmp
jb
or
mov
mov
ja
and
retw
cmp
loopne
dec
outsb
adc
add
push
push
add
mov
lock
xor
and
pusha
push
sbb
cmp
lods
add
mov
jle
testb
pop
lcall
jl
clc
inc
test
adc
push
aad
outsl
ret
comiss
into
push
push
stos
sub
push
pop
and
outsl
mov
and
ljmp
or
subb
or
xchg
adc
xor
ss
add
push
push
mov
pop
les
xchg
add
aaa
std
inc
or
mov
push
sub
adc
cmovbe
push
jo
test
add
mov
mov
xchg
das
loopne
mov
fiadds
mov
xor
sub
inc
cmp
scas
test
fidivl
iret
les
stc
mov
movsb
imul
inc
add
xlat
jne
or
ds
xor
adc
and
inc
or
jnp
imul
sahf
aam
int3
push
enter
or
jbe
test
xor
mov
aam
mov
mov
movsb
cli
je
xorl
or
and
cmp
lods
sub
adc
loop
sbb
push
inc
shll
loop
adc
sbb
outsl
mov
xchg
add
incl
lret
jne
leave
jne
adc
xchg
sbb
sbb
xchg
pop
fidivrl
mov
push
js
add
mov
sahf
push
shr
inc
aam
dec
add
fstpt
inc
mov
cmp
enter
add
pop
call
mov
adc
inc
test
adc
lea
push
adc
out
mov
lcall
orb
popa
and
cmp
leave
out
push
adc
dec
inc
int3
dec
xchg
adc
mov
push
aad
cmp
add
loopne
xor
pop
mov
jae
mov
jg
fistpl
fld
xor
rsm
mov
sub
clc
out
or
into
in
mov
and
ljmp
dec
or
clc
mov
mov
inc
outsb
hlt
pop
inc
push
stos
sbb
test
cmc
pop
hlt
add
sub
addl
rcll
scas
mov
aam
ss
push
jo
adc
ja
rcrb
push
enter
mov
aam
inc
jl
out
add
xchg
icebp
or
ret
push
mov
pop
out
jne
jmp
mov
in
test
fildl
lea
or
mov
lret
push
adc
shrb
test
int3
stos
fmul
repnz
add
add
inc
ds
adc
xor
add
inc
or
sbb
iret
mov
mov
pushf
outsb
cwtl
mov
stos
xor
fwait
push
cmpb
incb
cmp
cmp
testl
or
imul
adc
jbe
loope
mov
cmpsb
push
jbe
dec
cmp
addr16
test
adc
pop
cmp
xor
cmpb
int3
movsb
cs
xor
mov
shrb
mov
mov
fdivrs
pop
cld
jne
pusha
add
stos
call
xchg
mov
sbb
xchg
aam
cwtl
xchg
shlb
xor
pop
sub
push
aas
dec
jbe
cwtl
addb
ljmp
jne
inc
cmpb
xor
mov
mov
out
or
dec
mov
cltd
loop
cs
jae
fnstcw
jg
ds
pop
rcl
stos
fwait
pop
or
and
inc
into
iret
mov
test
add
xor
mov
notb
push
mov
pop
pop
pop
scas
std
das
shr
mov
arpl
decl
sbb
loop
jecxz
int3
xor
lds
mov
cmp
cld
es
lds
out
push
mov
mov
push
push
push
jecxz
jmp
pop
test
and
cs
outsb
imul
lret
sbb
mov
sub
mov
mov
add
das
gs
gs
in
xchg
or
cs
cmp
loopne
xor
inc
mov
add
dec
shlb
adc
dec
cmp
sbb
mov
ljmp
cmp
popa
out
test
mov
inc
jnp
shll
shll
fimull
lock
mov
xor
jl
xor
add
and
outsl
push
inc
cltd
push
popa
inc
pushf
sub
lods
inc
lods
fsubl
fcmovbe
cmp
lahf
loopne
jbe
mov
ficoml
sub
decl
cmp
out
sbb
out
add
lret
ret
cmp
enter
sbbb
xchg
and
fs
adc
inc
popf
imul
adc
ss
nop
sti
aam
sbb
dec
push
add
dec
mov
or
arpl
repz
mov
ja
push
push
adc
mov
adc
mov
push
pop
iret
dec
shlb
popf
adc
or
bound
fwait
test
sub
popf
xchg
stos
sub
or
dec
adc
addr16
mov
lcall
adc
rcll
or
dec
js
adc
cmpsb
jns
scas
addr16
data16
aas
shll
addb
jo
lds
push
pop
jb
rcr
sbb
ficomps
shr
mov
push
imul
or
jno
mov
mov
and
cmp
dec
adc
xor
and
push
push
out
sbb
fcmove
jp
rclb
loopne
add
sbb
sarb
mov
fsubrl
pop
xchg
sbbb
sti
pusha
in
fisubrs
cmpsl
sbb
add
add
sbb
lea
ljmp
fidivl
push
cmp
sbb
js
and
outsb
inc
movsb
rcrb
mov
fcomp
ja
int
or
or
aaa
and
adc
push
push
mov
push
fildll
ja
js
shlb
dec
ja
test
sub
pop
aaa
int3
sub
lea
add
and
adc
push
mov
je
mov
andb
sbb
mov
out
add
push
icebp
mov
xchg
lods
adcb
and
fistps
xchg
and
push
fimull
sbb
test
sub
frstor
loope
xchg
dec
ret
mov
ret
ja
and
lret
je
xchg
fidivs
dec
mov
pop
out
jbe
shlb
stc
cmovns
pop
mov
add
push
popa
mov
movsl
jg
mov
inc
lret
inc
pop
mov
push
mov
add
and
je
test
cli
cmp
or
cmp
or
sti
mov
mov
inc
mov
loopne
pusha
je
filds
dec
push
ljmp
dec
cmp
mov
add
cmp
int3
or
rorb
cmp
pop
add
decl
push
pop
rcrb
xchg
mov
push
mov
jne
adc
dec
sub
adc
clc
imulb
cld
lcall
iret
in
sarl
lds
in
clc
bound
out
ret
add
dec
testb
jne
into
ljmp
lods
daa
adc
sti
dec
lret
or
push
loope
cmp
jg
mov
sbb
mov
icebp
movsl
jge
push
add
push
jge
fsubr
scas
mov
fldcw
test
lahf
inc
jmp
addb
add
sbb
sbb
add
in
add
test
sbb
fwait
mov
mov
push
call
lds
jnp
pop
pop
or
xchg
les
jecxz
mov
call
xchg
push
clc
add
cld
lea
test
mov
arpl
sbb
xor
jp
cld
xchg
outsb
push
daa
pop
jae
mov
cmp
or
les
or
fbld
mov
das
aad
dec
pusha
ljmp
pop
mov
jne
mov
pop
and
sbb
mov
fmuls
addr16
in
mov
xchg
or
movsb
fildll
pop
clc
fldt
push
mov
or
adc
xor
out
xchg
mov
fucomp
loopne
mov
mov
push
push
mov
adc
mov
jg
and
stos
jg
dec
xchg
imul
rcrb
cs
out
ds
aad
js
in
push
mov
jl
inc
imul
lock
mov
int3
pop
and
xchg
out
inc
lret
icebp
neg
into
popa
dec
out
adc
dec
cmp
fstl
mov
or
jg
popa
mov
iret
adc
xchg
and
fdivp
push
lds
cmp
adc
test
std
mov
sub
incb
cld
jmp
cmp
nop
adcl
aam
movsb
fdivl
or
hlt
xor
push
js
inc
sbb
mov
mov
mov
lea
push
mov
sub
js
jne
aaa
js
insb
or
nop
pop
sbb
sbb
outsl
test
outsl
icebp
inc
ret
jmp
jb
in
or
outsl
add
add
sub
jle
inc
ficoms
xchg
push
xchg
jle
rclb
push
pop
call
sub
mov
mov
and
pop
add
or
sub
push
adc
int
and
lret
pop
and
mov
or
lock
loope
and
pop
or
sub
dec
or
jne
leave
out
add
and
cli
pop
add
cmp
cmpb
fldl
push
add
adc
lock
pop
sub
ret
sub
test
sbb
insb
xchg
jecxz
cmp
das
mov
test
mov
jge
mov
inc
test
mov
inc
mov
lods
add
testl
icebp
cmp
mov
adc
es
int
lea
fidivrs
jg
mov
pop
xorb
and
mov
jp
inc
cmp
mov
mov
adc
sub
xor
push
adc
push
stos
das
fcoml
aaa
je
push
fdivrl
pop
xchg
call
lock
xor
xchg
push
xor
and
lock
add
loopne
js
pop
mov
cmpsb
xor
pop
jle
or
add
mov
jbe
pop
dec
inc
xchg
js
pop
clc
aam
sbb
stos
sarl
jl
cld
lea
mov
popf
addr16
out
jb
adc
lret
xchg
rcr
pop
pop
mov
cmp
push
insb
in
sbb
sti
je
imul
out
inc
inc
scas
mov
outsl
lock
fidivs
int3
cmpb
adcb
or
jns
sbb
sahf
or
adcl
xor
aaa
mov
pop
push
jo
add
out
mov
out
xor
icebp
ret
xchg
scas
pusha
or
push
mov
sbb
or
mov
inc
add
movl
clc
sub
or
sbb
adc
sub
mov
sub
jle
adc
add
or
js
mov
pop
sub
adc
cld
leave
data16
and
add
lcall
xor
push
push
fistl
pop
icebp
mov
pslld
push
call
mov
sar
pop
adc
mov
or
inc
sub
adc
cmp
push
jecxz
dec
pushf
push
clc
inc
pop
or
stos
dec
xchg
inc
das
sub
add
stos
mov
es
fdivl
cmp
test
jae
lock
bound
push
adc
add
fwait
or
jp
mov
outsl
sub
sub
mov
mov
xchg
adc
ret
out
add
movsl
adc
jnp
les
lds
mulb
imul
mov
adc
add
inc
or
fimull
add
adc
adc
and
xor
pop
scas
mov
mov
scas
loopne
push
add
or
inc
mov
mov
hlt
cwtl
cmp
push
push
imul
fmuls
pusha
lods
in
sbb
mov
or
adc
sub
mov
js
xchg
aaa
lock
lcall
in
movsb
mov
sbb
push
add
adc
dec
add
roll
push
mov
hlt
mov
das
add
xchg
fcmovbe
cmpsb
dec
xor
jg
enter
call
ss
pusha
pop
shlb
fcmovnbe
jno
gs
movsl
sub
xor
sbbb
adc
lcall
xchg
les
aad
push
mov
mov
jle
pop
shlb
sub
imul
std
jg
outsl
inc
mov
adc
je
push
and
mov
mov
aas
mov
inc
fdivl
icebp
repnz
sbb
shr
adc
xchg
in
ss
jg
dec
xlat
fwait
xor
jb
daa
mov
cld
push
popf
dec
sbb
ss
fistpll
cld
mov
aas
push
add
into
xchg
sbb
loope
loope
sbb
mov
ret
mov
adc
cmpsl
and
jnp
arpl
gs
sbb
lahf
fidivrl
mov
sarl
mov
mov
shlb
pop
clc
ficoms
scas
push
cmp
adc
icebp
jbe
inc
push
iret
inc
ja
pop
jg
pop
mov
xchg
jo
loop
jne
std
mov
call
out
and
and
sbb
into
dec
mov
insl
jno
test
xor
das
inc
inc
xor
data16
inc
cmp
adc
lock
jecxz
push
je
insl
mov
mov
cmp
test
fadds
pusha
aaa
pop
jb,pn
add
outsl
mov
cwtl
mov
and
mov
clc
pushl
jae
lea
stc
cmp
push
dec
incb
pusha
sti
sbb
jae
mov
xor
adc
out
popa
imul
loope
out
pop
iret
mov
addr16
mov
sti
pop
or
arpl
xchg
xchg
jge
decb
ja
jmp
enter
int3
mov
das
fists
lods
imul
pop
or
popa
pop
push
or
fdivrl
decl
fsubrs
or
mov
inc
push
int
faddl
jg
push
cmp
test
and
out
and
lea
pop
andb
mov
jne
adc
and
arpl
xchg
pop
ret
test
and
hlt
aaa
mov
inc
push
imul
lcall
lahf
push
jnp
dec
mov
sbb
and
loopne
xlat
in
cmpsl
mov
mov
pusha
fsubs
mov
sbb
sbb
push
scas
jae
je
xor
cmpsl
test
fildll
insb
aas
dec
ret
cmpsb
push
dec
sbb
fisubs
inc
sbb
and
push
shrl
cmp
lret
cld
mov
test
jmp
leave
and
stos
cmp
sbb
test
push
pop
stc
das
mov
add
or
adc
push
addb
gs
cmp
cmp
push
cmp
imul
jp
pop
popf
jecxz
mov
mov
jg
mov
stc
or
dec
lock
movsb
inc
or
add
movl
rorl
pop
fs
inc
xor
imul
lahf
inc
popl
pop
in
in
mov
lahf
popa
jmp
stc
mov
push
add
outsl
add
xchg
inc
xor
dec
cld
sub
lcall
adc
cmpsl
and
add
jnp
stos
test
inc
adc
add
lret
rorl
cmp
cmc
or
mov
mov
test
jns
std
jnp
push
frstor
sbb
aam
loop
inc
jne
mov
fdivl
testl
shr
mov
jbe
popf
movsl
mov
and
orb
pop
dec
rcll
cmp
andl
sub
and
aam
ret
gs
dec
dec
jb
test
xor
dec
mov
addb
or
xorl
lret
insl
pop
pop
sub
add
inc
pop
add
sbbl
test
push
xchg
out
and
xor
push
add
adc
push
pop
inc
inc
or
cmp
repnz
sbb
js
sbb
sub
adc
xchg
sarl
dec
add
das
cmp
add
inc
and
pop
test
push
aaa
mov
dec
imul
adc
jae
dec
movsb
dec
enter
or
jge
nop
das
lret
mov
test
inc
into
jb
sub
pop
out
add
int3
or
call
sub
sbb
xchg
adc
mov
mov
xor
enter
or
fiadds
ja
sub
inc
fstps
clc
js
jmp
shl
sub
rorb
xor
ss
pop
inc
pushf
fcoms
mov
sbb
sub
adc
stc
fiaddl
mov
ljmp
add
jecxz
mov
mov
add
outsl
ljmp
out
pop
sbb
in
mov
scas
jmp
lahf
js
add
out
sarb
pop
sti
popf
cmpb
inc
cmp
and
inc
arpl
sbb
or
mov
and
aad
ds
jno
mov
push
add
in
pop
test
mov
rclb
xchg
dec
les
xchg
ljmp
popa
pop
xchg
cmp
ret
mov
mov
loopne
push
inc
stos
xchg
mov
fiadds
add
push
test
in
pop
pop
bound
dec
push
or
icebp
es
ds
sub
loopne
fst
out
push
pop
mov
xor
jbe
xchg
sub
aaa
fisubrs
xor
ret
stos
mov
xor
cmpb
and
les
push
mov
pusha
cmpl
mov
push
mov
dec
cwtl
popf
cltd
mov
scas
mov
cwtl
outsl
rorb
sbb
inc
aad
outsb
repnz
icebp
aas
loopne
add
sub
add
push
sub
loope
sti
lret
add
mov
ja
frstor
mov
shll
jbe
mov
clc
sbb
adc
and
push
mov
jbe
dec
mov
cmp
mov
jo
out
stos
pop
inc
enter
mov
mov
pusha
push
cmpsl
jo
push
cs
test
xchg
adc
movsl
fstl
xor
xchg
aad
cs
sub
sub
ds
sbb
cld
xorb
out
imul
flds
aam
push
jo
cmpsb
decb
std
scas
lret
adc
lcall
cmp
pop
add
bound
mov
jo
addb
cld
and
imul
add
pop
mov
cltd
fprem
xchg
mov
pop
cmp
inc
incb
cwtl
sub
xor
ret
and
inc
and
xchg
push
mov
and
pop
mov
decl
cmc
jecxz
clc
and
std
mov
mov
cmpsb
test
jae
add
outsb
cmp
mov
inc
pop
clc
jg
scas
sbb
push
xchg
hlt
cmp
lds
mov
icebp
push
dec
andb
and
mov
cmp
inc
insl
pushf
mov
ljmp
fnstcw
inc
cs
sbb
enter
shrl
outsl
xor
push
jmp
call
loopne
adc
xchg
in
leave
fwait
lret
dec
sbb
icebp
and
pop
pusha
adc
lret
add
xlat
pop
xchg
les
mov
les
mov
lods
mov
andl
test
sbb
inc
mov
sbb
call
mov
fdivl
mov
inc
or
dec
fistpll
enter
inc
sub
cwtl
push
pop
xor
shlb
push
enter
ljmp
test
mov
lea
or
sbb
cwtl
sbb
push
aam
push
test
cmp
inc
loop
into
aam
fidivrl
fsubl
clc
das
xchg
push
outsl
and
push
cmp
cmp
fistpll
xchg
dec
loop
je
xchg
test
lods
adc
std
sub
mov
jmp
mov
cmp
mov
inc
test
and
pop
test
sub
cmpsb
adc
sbb
movl
and
jnp
sub
mov
pop
push
sahf
adc
xchg
lret
repz
xchg
scas
divb
sbb
loopne
push
mov
dec
test
add
inc
movsl
stos
jp
aaa
push
jbe
in
ljmp
and
fsubrs
xchg
stos
das
push
mov
lahf
fdiv
popf
shlb
jmp
pop
or
xchg
hlt
mov
std
lahf
aas
add
sub
pop
push
ja
lods
rolb
sub
cmp
mov
xor
dec
cmp
xchg
outsl
je
jg
mov
das
shrl
sbb
xor
mov
lock
dec
jne
push
lcall
xchg
nop
movsb
inc
addl
jecxz
imul
jno
cmp
push
xchg
mov
fiadds
repnz
pushf
xorb
mov
mov
shlb
loope
das
mov
sbb
sbb
in
mov
add
mov
push
nop
scas
mov
pop
pop
test
int3
aam
cld
int
jge
mov
cmp
pop
inc
in
or
jecxz
or
xor
inc
mov
pop
mov
mov
shlb
lcall
or
cmp
push
adc
jae
call
add
bound
pop
ret
pop
lods
nop
adc
adc
xchg
jo
jecxz
xor
fdivrs
xchg
mov
stc
fwait
test
pop
hlt
xor
outsl
mov
pushf
insb
mov
pop
mov
sarl
loope
ja
mov
and
mov
sbb
cmp
xor
and
xchg
inc
les
pop
icebp
xlat
pop
jno
cmp
sbb
or
cwtl
dec
add
inc
push
lcall
pop
int
outsb
and
adc
or
mov
inc
add
repz
xchg
push
inc
pop
add
shll
cmc
pop
clc
test
xchg
push
in
addr16
fldl
pop
js
lea
mov
aad
jb
sbb
test
lret
dec
pop
arpl
outsb
sub
cmp
inc
xchg
repnz
xorl
mov
or
lret
out
push
and
push
sar
in
pop
mov
adc
pop
sbb
push
aaa
jecxz
adc
mov
subl
or
cmpsb
cmc
add
cltd
sub
and
pusha
aad
and
test
lods
clc
outsl
lahf
add
cmp
sub
int3
xchg
mov
ret
adcl
add
and
lahf
mov
ljmp
mov
sub
add
sbbl
icebp
ret
push
icebp
clc
jnp
pop
test
sub
mov
movsl
or
je
int3
test
dec
add
outsl
mov
sbb
aad
jg
mov
std
cld
fs
mov
mov
decl
icebp
lds
mov
and
insl
test
jnp
clc
idivb
mov
sbb
icebp
pop
push
sar
daa
mov
mov
add
shlb
inc
mov
and
add
mov
or
pop
adc
dec
add
pusha
movsl
incb
decl
add
inc
add
and
adc
and
and
test
mov
adc
in
mov
decb
nop
inc
and
test
add
sub
test
adc
and
fistps
and
inc
adc
and
and
adc
adc
mov
stos
sbb
add
and
or
not
inc
pop
inc
add
and
inc
nop
cmp
pop
subl
aaa
mov
inc
adc
lods
fnsave
mov
adc
adc
mov
jle
ss
and
adc
ja
adc
and
and
mov
jbe
add
add
or
adc
mov
in
add
add
or
mov
insl
ss
pop
and
add
and
fisubrl
imul
add
pusha
and
add
adc
insl
fistpl
mov
inc
or
inc
outsb
lods
insl
outsb
adc
or
and
mov
cmp
or
and
in
add
or
adc
fiaddl
and
adc
mov
out
pop
rcrl
outsb
in
and
inc
and
xchg
nop
and
pushf
int
mov
nop
dec
mov
scas
rorb
adcb
cltd
test
fiaddl
mov
adc
jbe
pop
imul
and
subl
and
insl
incl
pop
cmpsb
rcll
mov
rcr
cmp
add
dec
cmp
pop
popa
jae
stos
nop
push
pop
imul
lods
mov
fdivl
push
js
imul
mov
pop
imul
mov
push
nop
sti
mov
imul
ja
sub
and
popf
insl
mov
and
adc
jp
imul
dec
sub
xchg
mov
pop
lods
xor
adc
push
ja
or
lcall
mov
jmp
sub
push
sub
bound
add
mov
adc
ljmp
push
sub
int
cmp
jns
pop
mov
pop
add
jo
imul
add
push
pop
test
jns
dec
orb
adc
std
xchg
xor
adc
dec
insl
leave
and
imul
ja
enter
pop
and
adc
sbb
adc
pop
mov
nop
xchg
and
es
add
js
mov
in
jb
adc
push
imull
mov
adc
and
adc
sbb
out
movsb
sbb
jae
faddl
or
mov
inc
inc
testl
and
sub
in
lods
xor
sbb
imul
and
stc
pop
add
insl
cmpsb
test
test
mov
pop
jae
popf
sub
fistpl
sbb
test
inc
and
inc
test
insl
or
inc
xor
adc
divb
or
or
hlt
test
subb
fs
pop
imul
in
jmp
aas
push
adc
sbb
int
or
popf
mov
icebp
cmp
jmp
leave
std
mov
cmp
mov
call
adc
inc
insb
int
mov
sbb
add
add
and
prefetcht2
lods
xor
pop
or
inc
or
and
mov
push
add
mov
ss
imul
or
inc
push
and
lcall
lods
mov
lock
cmpsl
push
fucom
pop
jo
jle
popa
lea
and
and
subb
je
adc
mov
pusha
cmp
push
test
xchg
add
jno
sbb
sbb
cmp
fistpl
imul
xchg
dec
or
sar
xor
jne
or
cwtl
and
outsl
cwtl
mov
pop
popf
adc
mov
add
imul
cwtl
adc
and
or
insb
push
imul
add
mov
cmp
push
inc
cs
push
sub
mov
xchg
shrb
dec
out
add
or
mov
adc
inc
mov
aaa
adc
inc
push
xor
sub
and
sbb
inc
mov
cmpsl
jae
push
xchg
jne
inc
imul
shlb
or
xor
in
add
xlat
fcmovbe
pop
jle
ds
addr16
cs
add
or
jne
cltd
cmp
add
jge
push
test
jne
lods
add
jecxz
movb
push
jo
inc
dec
dec
adc
mov
add
jp
mov
xchg
fs
inc
stos
cmp
lret
roll
fistpl
test
mov
aam
push
pop
and
pop
adc
mov
adc
ja
fisubl
or
aam
add
dec
and
test
mov
push
andb
cmpsb
aas
jo
sbb
push
push
sti
les
rclb
and
shrb
dec
out
out
test
inc
push
and
rolb
push
stos
adc
sbb
sbb
sub
xor
adc
mov
mov
arpl
shrb
xchg
jne
sbb
and
mov
adc
ja
pop
jae
xor
orb
add
in
add
xchg
cmp
push
mov
adc
mov
int
inc
jae
mov
addr16
or
or
adc
lods
adc
mov
and
pusha
mov
ficoms
mov
hlt
ds
pop
mov
adc
mov
iret
pop
push
or
lods
scas
or
mov
or
das
mov
push
dec
add
xor
inc
pop
adc
add
jmp
sub
int
int
cs
call
int
lret
add
in
and
je
test
and
and
mov
xchg
dec
rcrl
into
adc
lcall
xchg
negb
and
inc
mov
pusha
outsb
mov
cmpsb
pop
cmp
jg
shlb
dec
add
and
aas
daa
inc
add
and
int
add
inc
shlb
femms
add
push
xor
in
or
adc
cmp
enter
ret
and
mov
sbb
pop
adc
mov
cs
jge
mov
push
adc
mov
xchg
incl
dec
push
cwtl
lods
mov
inc
xchg
or
lods
mov
sbb
out
dec
stc
mov
imul
fs
imul
mov
inc
xchg
enter
adc
and
rolb
xor
mov
and
add
loopne
push
mov
pop
mov
or
test
add
bt
mov
push
or
aam
cmp
filds
add
push
dec
push
add
cs
sub
and
or
fcoml
push
xchg
add
mov
mov
les
pop
stos
mov
mov
es
test
and
fisubl
and
pop
adc
mov
push
sub
loopne
cwtl
mov
mov
add
sbb
mov
inc
add
add
or
insl
inc
inc
push
or
push
add
int
outsl
outsb
adc
or
adc
mov
lods
stc
mov
lods
push
fisubrl
push
dec
andb
inc
sbb
int3
clc
adc
cmc
hlt
cmpsb
jnp
add
fisttpll
pusha
mov
sbb
cmpsb
or
and
cmp
push
imul
and
add
gs
add
add
cmp
movsb
and
dec
push
scas
stos
pop
sbb
imul
inc
mov
adc
sub
lock
lret
push
dec
inc
sub
mov
push
mov
mov
fsubl
fsts
mov
subb
adc
cs
or
pop
jae
or
mov
rcll
xchg
stos
sbb
mov
cmp
je
lcall
push
imul
dec
jbe
imul
popa
mov
mulb
mov
jnp
rorb
push
push
adc
loopne
inc
xor
inc
cmp
cltd
aad
pop
or
and
pop
mov
fisttpl
jo
cmp
stos
add
inc
pusha
jae
stos
push
mov
stos
jge
test
lods
int3
mov
add
xlat
pop
fisttpll
jmp
jae
xor
pop
sub
xchg
adc
adc
add
pop
rcll
je
sub
test
add
lahf
ret
mov
inc
imul
insl
sbb
cmpsl
push
adc
data16
and
leave
sub
add
lea
xor
scas
add
jns
or
pop
dec
fst
lcall
add
imul
xchg
in
lcall
cmp
jno
add
pop
xchg
xchg
shlb
adc
or
push
dec
cltd
fucomip
inc
jae
popa
and
cmp
or
rorl
test
sub
insl
es
lods
fs
stos
roll
add
jle
leave
adc
cli
push
and
or
cmp
or
pop
add
dec
pop
inc
rolb
nop
add
add
sarl
scas
out
out
loopne
js
cld
cmp
xchg
adcb
adc
sbb
pop
push
adc
test
ss
push
xor
sub
mov
mov
fwait
inc
mov
add
rorl
test
outsb
lods
adc
inc
mov
push
xchg
addl
add
mov
and
rcll
rcl
sbb
or
dec
sbb
int
push
or
push
add
xlat
mov
mov
pop
mov
adc
mov
adc
xchg
mov
push
loopne
js
or
loopne
or
lret
fldl
dec
mov
mov
mov
rcll
lods
cmp
xor
add
push
imul
xchg
in
es
popa
test
rcrb
subl
push
hlt
xor
bound
push
sub
inc
fisubs
rclb
and
into
adc
insl
mov
sbb
xor
cmp
lahf
adc
mov
ss
xor
xchg
add
loop
aaa
sub
jns
xchg
and
sub
and
xchg
sub
inc
and
or
mov
push
inc
pop
sbbl
dec
int
cltd
push
adc
mov
ret
lret
sarl
repz
setb
add
inc
adc
mov
or
add
sbb
ds
mov
dec
inc
add
filds
cmp
cld
xchg
ret
call
lcall
jp
int
pop
sub
sbb
pop
pushf
lahf
inc
adc
lcall
insl
cmp
stc
sbb
pop
cs
arpl
pop
sub
xchg
inc
pop
cmp
xchg
in
lods
cltd
lcall
jecxz
jp
pop
sbb
arpl
movsl
jo
sbb
callw
jns
jb
in
aad
add
push
cmp
and
mov
dec
rolb
sub
jo
xchg
int3
ficomps
test
inc
or
xor
pop
test
int
or
adc
push
ret
xor
stos
aam
test
add
in
mov
mov
adc
stos
mov
xchg
inc
ds
push
insl
fwait
mov
jbe
add
add
test
in
ret
daa
sbb
xchg
and
lds
push
js
add
and
inc
mov
fstpt
dec
xchg
inc
cmp
ljmp
adc
mov
jne
mov
mov
and
or
inc
lock
add
and
clc
shl
dec
cmp
inc
stc
outsl
ss
pop
mov
add
out
lcall
shrb
negl
adc
add
in
lret
call
test
cmp
push
add
push
bnd
loopne
pop
fbld
loopne
add
fists
sti
lret
push
sbb
fucomip
stc
jg
call
xchg
mov
and
mov
add
add
insl
add
mov
call
mov
or
push
push
fsubl
cmp
scas
aad
add
sbb
jno
dec
and
or
scas
cmp
or
insb
sahf
mov
cmpsb
fsubr
das
mov
lea
add
xchg
mov
mov
add
mov
shlb
ja
jae
pop
pop
xchg
sti
out
incl
fbstp
mov
leave
jnp
add
cs
jno
pop
pusha
mov
mov
dec
add
mov
cmpl
pop
add
sub
ret
add
in
repnz
cld
push
rcll
add
ret
push
add
shrl
jno
push
add
cmp
hlt
orb
sbb
stc
and
add
lahf
inc
popf
xchg
add
leave
push
aad
add
es
push
or
pop
jmp
add
sbb
mov
xor
andb
lods
cltd
inc
out
icebp
add
rorl
adc
imul
and
loopne
or
xchg
pop
xchg
dec
das
lods
dec
inc
mov
mov
jecxz
enter
jae
and
mov
ds
popa
mov
in
call
cmp
shlb
mov
rcll
jo
add
in
add
add
flds
jg
jg
call
arpl
into
xchg
inc
xchg
je
in
mov
mov
pop
sub
sbb
hlt
fbstp
push
pusha
adc
in
jb
fucom
dec
andl
daa
xor
ja
inc
cmpsb
cli
into
jecxz
leave
adc
js
orl
testl
lret
repnz
push
or
in
dec
xor
mov
pop
add
jge
cltd
inc
sbb
iret
insl
inc
lock
jmp
add
insb
push
inc
dec
add
mov
mov
jge
lock
clc
out
nop
lcall
fcompl
jo
mov
or
add
inc
fldt
mov
inc
loop
inc
mov
adc
jge
mov
sbb
insb
call
js
jmp
xchg
testl
adc
fldl
and
in
rclb
jnp
aam
or
add
sbb
and
xor
dec
lock
inc
fldenv
adc
add
dec
xor
mov
cmp
clc
sub
add
std
cwtl
nop
pop
and
or
dec
sub
xchg
cmp
repnz
mov
push
add
sbb
popl
mov
inc
sub
cld
pop
dec
or
xor
cmp
mov
xchg
addl
and
jb
add
cmp
mov
movsb
mov
and
xorl
movsl
imul
mov
insb
push
add
pop
dec
nop
jmp
int3
pop
mov
incl
movsl
jge
icebp
bound
stos
sar
fistl
cmp
push
sbb
mov
outsl
cld
imull
xchg
movsb
jno
pop
sub
out
es
sahf
or
dec
xor
addr16
inc
cmc
fsubs
ljmp
xor
push
add
rolb
insb
jmp
xchg
outsl
cmpsb
or
loope
test
notl
lret
cmpb
push
das
test
jge
gs
jg
sbb
je
lds
pop
enter
nop
jl
mov
rorb
add
xor
fimull
icebp
outsl
movsb
test
inc
inc
and
mov
fildll
xchg
xchg
add
test
dec
es
pop
mov
push
mov
lret
dec
subl
cld
sbb
lret
add
and
popf
xchg
jbe
add
jbe
sub
or
aas
in
test
mov
faddl
mov
popa
rcll
out
andb
xchg
fistpll
jbe
test
push
and
movsl
cmp
sti
les
inc
inc
push
std
fistpll
ja
rolb
xchg
subb
clc
movsl
sbb
mov
push
ret
inc
sub
pop
sahf
insb
or
inc
aad
xchg
mov
das
pop
jbe
pusha
xchg
mov
pop
cli
jo
popa
pop
pushf
test
arpl
add
loop
inc
add
xor
addr16
add
sarl
dec
pop
xchg
pop
xchg
mov
push
clc
jbe
daa
ret
iret
js
mov
dec
psadbw
adc
cltd
mov
pop
mov
outsb
frstor
jmp
adc
push
cmc
out
es
jmp
push
xchg
jle
cmp
mov
xchg
xchg
adc
dec
dec
mov
dec
mov
jbe
bound
push
fwait
mov
stos
sub
pop
stos
lock
add
jne
insb
jbe
add
clc
push
imul
rcrl
push
jge
fninit
sub
test
pop
add
or
dec
mov
and
inc
push
xchg
inc
xchg
cmp
jg
popf
aam
inc
jmp
jmp
or
mov
fistl
cmp
nop
test
inc
push
mov
into
loopne
test
or
insb
mov
je
divb
mov
inc
addb
mov
add
popf
xor
mov
ljmp
push
jl
sti
add
mov
mov
jno
fisubs
lret
mov
push
sbb
fwait
inc
fmulp
add
loope
push
cmp
push
in
jl
jmp
dec
flds
ret
push
jl
cmp
jecxz
paddd
mov
adc
loope
lods
push
jo
or
push
lcall
hlt
sbb
aam
and
jnp
enter
scas
inc
adc
mov
pop
ljmp
ds
pop
cs
pop
fnstsw
sbb
add
lds
pop
scas
lods
sti
mov
mov
push
or
inc
inc
pop
add
call
mov
outsl
aaa
jne
dec
or
out
cmp
cmpsl
mov
and
dec
jo
pusha
daa
ret
mulb
inc
mov
inc
inc
add
xchg
xor
cli
rclb
lods
test
inc
xlat
or
out
jb
ret
mov
cmp
sub
and
add
popa
out
fsubl
sbb
ficomps
mov
pop
mov
nop
lods
or
cli
mov
mov
xor
enter
aas
add
ficomps
sub
cmp
pushf
xchg
push
add
stos
movhlps
nop
loope
int3
add
mov
sbb
inc
and
xor
xchg
test
jb
stc
push
out
mov
and
inc
hlt
sbb
mov
in
jae
pop
adc
cltd
pop
xchg
imul
xchg
scas
cld
or
jbe
add
imul
cs
sbb
jmp
and
fcomi
jg
out
push
add
mov
push
mov
jg
insb
pop
sbb
iret
mov
fwait
add
ds
loop
cmpl
rcll
mov
xor
cmp
xchg
add
popa
bound
jg
inc
mov
jne
xor
int3
lock
jae
and
dec
cltd
mov
iret
cmp
pop
cwtl
mov
cld
outsl
icebp
pushf
push
jge
cmc
imul
mov
data16
dec
fs
out
jae
std
fisttpl
inc
imul
shlb
lock
repz
jecxz
test
lods
pop
inc
lock
lds
or
out
iret
xor
enter
aam
xchg
jg
adcb
das
and
and
in
cltd
in
fstl
or
pop
aas
mov
sub
add
iret
xchg
shlb
or
xchg
subb
mov
jecxz
inc
cmp
mov
xchg
jmp
mov
in
fildl
cmp
sbb
jge
dec
shr
mov
inc
sub
lahf
jae
adc
inc
aaa
or
andb
push
daa
pop
mov
std
loop
jo
dec
iret
fsubs
ret
aas
into
mov
pop
add
sahf
mov
or
gs
jmp
xor
mov
stos
push
ds
mov
add
xchg
and
cmpsb
pop
mov
sub
repz
lea
sbb
mov
aaa
sub
sub
loopne
xchg
adc
push
xor
cli
jle
fistpll
mov
out
ds
repz
push
push
hlt
jmp
mov
lock
xor
cs
push
dec
push
shrl
aaa
push
movsb
mov
les
or
hlt
ja
sbb
lods
mov
shll
int3
sbb
mov
adc
aam
inc
dec
dec
mov
call
sbb
les
adc
mov
dec
xchg
cld
sbb
mov
pop
push
iret
dec
adc
lret
sbb
loope
lock
stc
jb
arpl
icebp
out
aas
test
inc
mov
imul
lods
bound
mov
sbb
lds
jg
xor
dec
mov
stos
pop
mov
push
mov
or
ficoml
mov
insl
and
mov
dec
mov
push
sbb
outsb
hlt
cmpsb
jb
sbb
les
sub
clc
ss
outsb
pop
icebp
lcall
xor
clc
push
push
and
dec
adc
lretw
xchg
fisubrs
cld
mov
ds
aas
or
xchg
pop
dec
jne
dec
inc
hlt
or
repz
clc
movsl
or
sbb
sbb
or
and
jne
pop
mov
das
sbb
and
loope
push
aad
pop
leave
ret
imul
mov
mov
repnz
xchg
repnz
push
pushf
js
jae
and
sar
out
jge
xchg
inc
ljmp
xchg
lret
outsb
and
mov
mov
loope
and
pop
neg
rcr
fdivrl
int
jno
cwtl
shll
fcompl
xor
aaa
rcr
rolb
jle
jmp
movsl
or
sub
jne
pop
mov
and
notb
cmp
mov
mov
test
push
jae
sbb
mov
add
sarl
js
push
daa
pop
pop
fst
pushf
cmpsb
xchg
out
test
out
jb
add
clc
adc
call
adc
iret
cli
das
lea
insl
inc
outsl
dec
add
jle
inc
push
and
lret
push
add
ds
and
js
daa
ss
inc
imul
fs
sahf
cmp
cltd
das
xor
clc
push
pushf
xlat
mov
and
iret
in
mov
push
jge
idivl
inc
mov
mov
cmp
ljmp
loope
sbb
js
lds
out
xor
dec
adc
xchg
ret
dec
add
ja
lods
es
cli
out
fiaddl
cmpsl
inc
adc
add
idiv
mov
inc
mov
and
test
add
xor
sub
cmp
ss
xchg
out
repz
dec
aaa
add
int3
dec
insb
pop
clc
ret
stos
stos
aad
pop
shlb
cmp
dec
or
sbb
fstl
jp
add
add
xchg
mov
mov
inc
xchg
cmc
push
mov
inc
inc
pop
mov
hlt
xor
loopne
push
stos
mov
cmp
cltd
cli
in
or
or
ret
xchg
pop
sub
addl
leave
or
sbb
mov
jecxz
or
test
out
repnz
pushl
loope
orl
xchg
dec
mov
sahf
push
rcrl
add
ja
ret
gs
mov
jmp
sbb
cmpsl
pop
pop
icebp
xor
jbe
scas
pop
fildl
call
add
mov
insl
aaa
or
or
pop
outsl
push
cmp
mov
in
clc
ljmp
cld
xor
push
popa
sbb
bsr
dec
in
sahf
cmp
xchg
mov
push
ret
fwait
mov
pop
sbb
pop
das
cmp
mov
push
push
imul
fbstp
js
inc
add
lods
pop
inc
xlat
in
xor
pusha
sbb
jp
adc
test
imul
xor
jmp
sub
and
jmp
outsb
in
push
enter
cmp
ficompl
cmp
adc
or
push
jns
dec
jle
sar
aas
xchg
xchg
and
adc
js
pusha
inc
fucomi
idiv
imulb
cmpsb
fwait
sbbb
jb
icebp
mov
cmp
daa
jg
movsl
pextrw
and
dec
sub
hlt
mov
popa
ljmp
add
xchg
data16
jge
mov
jg
outsl
pop
imul
arpl
mov
pushf
inc
push
xor
jle
mov
mov
clc
cmpsb
mov
scas
jecxz
push
filds
and
sbb
push
xchg
outsb
dec
outsb
push
fisubl
jp
dec
push
pop
icebp
inc
or
or
sbb
icebp
pop
clc
mov
std
lea
cmp
arpl
push
push
outsl
cld
push
adc
push
flds
call
mov
mov
mov
dec
ljmp
pushf
ja
dec
lods
push
sahf
cmpb
pop
sub
lock
add
subb
jnp
rcl
or
and
push
sub
cmpsl
add
pop
mov
mov
stc
and
pop
outsb
mov
cmpsb
sbb
and
or
movsb
test
jo
lock
mov
or
xchg
js
or
movb
mov
and
mov
addb
scas
test
in
mov
enter
and
adc
sbb
nop
mov
pop
imul
pop
push
stos
js
movsb
xchg
aad
mov
frstor
jo
adc
jg
adc
test
xor
add
sub
das
jge
sub
jge
mov
iret
jnp
inc
fs
ss
imul
mov
lahf
mov
sub
loope
jp
imul
sbb
lds
inc
mov
or
and
lods
inc
shrb
mov
xlat
dec
scas
push
push
mov
push
nop
mov
cmp
loope
xor
add
mov
lods
xlat
sbbl
push
push
jbe
cwtl
pop
adc
push
aam
jne
adc
mov
pop
cli
movsb
cmp
test
push
mov
into
adc
cmp
mov
aam
ret
insl
mov
mov
jecxz
jbe
sahf
bound
scas
sub
sub
add
and
aad
ret
pop
push
fistps
mov
je
mov
mov
jmp
je
lret
aaa
push
inc
int
mov
test
in
into
push
js
lods
add
or
mov
iret
adc
leave
daa
mov
jo
adc
sub
fistpll
dec
pushf
pop
and
pop
pop
addb
and
pop
ljmp
xor
insl
pop
int
decb
inc
lahf
cmp
adc
mov
mov
or
aaa
std
rclb
in
stc
mov
xrelease
sbb
fbstp
cmc
call
andb
jnp
adc
lret
mov
xor
out
mov
mov
add
inc
stc
xchg
sub
cli
dec
jo
mov
push
sub
inc
jb
adc
add
push
clc
iret
or
push
scas
dec
xchg
decb
movsl
sbb
js
push
aaa
xchg
jno
push
sub
rcll
scas
mov
imul
add
ret
hlt
pusha
mov
idivb
inc
aad
dec
inc
jnp
sbb
xchg
pop
mov
lahf
daa
push
mov
sub
clc
mov
push
cs
add
adc
pushl
push
add
inc
loop
mov
dec
out
sbb
nop
xor
jb
mov
sbb
inc
pop
pop
mov
inc
test
stos
inc
in
xchg
lds
cmp
fsubrs
mov
mov
out
fs
push
stc
outsl
mov
sti
aas
mov
cmp
cwtl
sti
xlat
push
pop
wbinvd
fdivrp
outsl
aaa
outsb
pop
sbb
and
cli
scas
and
hlt
insl
out
inc
add
cmpsb
cmpsl
mov
xchg
push
pop
filds
pop
sbb
not
inc
inc
pop
jg
aas
adc
cmp
icebp
jbe
push
push
mov
mov
xchg
popf
pop
pop
outsl
dec
xlat
xorl
sbb
ljmp
or
sahf
sbbl
cmpl
pop
jno
mov
cvtps2pd
dec
fistpll
adc
lahf
mov
pop
nop
and
arpl
sbb
fldenv
cmp
shll
cmp
xor
push
xchg
int
je
cmp
mov
jnp
mov
nop
scas
lahf
mov
push
adc
outsl
les
push
insl
shrb
stc
adcb
stos
adc
sub
dec
sbb
mov
cmp
mov
lret
mov
jg
adc
fnstcw
cmp
jg
mov
add
mov
inc
mov
arpl
and
push
std
movsl
pop
neg
sub
lret
pop
insb
and
repnz
xor
dec
ja
bound
sub
xchg
dec
loope
mov
jp
and
xor
adc
enter
sub
push
sbb
cld
inc
mov
jns
sbb
dec
jecxz
or
lods
and
mov
clc
addb
dec
dec
and
pop
push
pop
out
dec
xchg
mov
push
psraw
fld
push
pop
mov
adc
sbb
scas
mov
push
je
or
inc
out
xchg
dec
dec
jo
push
jo
add
add
icebp
inc
mov
bound
xchg
test
fadd
outsb
mov
inc
cmp
je
ror
inc
fs
fwait
push
cmp
inc
shlb
in
add
es
mov
addr16
and
in
adc
pcmpgtw
dec
xor
test
push
sub
shlb
pushw
in
iret
fwait
clc
in
push
in
or
ficomps
cmp
mov
std
test
jne
mov
or
mov
dec
cwtl
push
repz
cs
jmp
mov
mov
in
subl
fiadds
dec
add
mov
adc
adc
les
jge
outsb
xchg
fisubl
push
shl
js
pop
cmp
jne
or
xor
lea
ja
popf
jbe
jnp
adc
mov
and
aam
inc
gs
sbb
fldl
adc
lahf
les
inc
jg
clc
mov
add
je
pop
inc
and
cmp
pop
jne
push
rclb
push
leave
movsl
xor
adc
jae
fiadds
cmp
jg
or
movd
inc
pop
add
cmp
push
add
dec
sbb
ret
mov
mov
roll
push
fbstp
ret
pusha
sbb
jl
and
test
fldt
imulb
data16
and
dec
adc
incb
adc
or
mov
mov
cmc
adc
push
outsl
jb
ss
shlb
pop
pushf
cmp
push
dec
filds
push
xchg
adc
pop
loopne
in
cmp
mov
add
addr16
jl
pop
inc
inc
ds
adc
lret
and
cli
das
std
shrb
js
loope
mov
and
sbb
testb
fcoms
xchg
dec
pushf
xchg
outsl
in
ret
dec
add
mov
inc
xchg
movsb
outsb
mov
add
mov
mov
mov
pop
sti
push
bound
mov
fldt
adc
sbb
inc
into
shrb
or
xor
dec
inc
xorb
andl
es
push
fnstcw
ret
mov
orb
sbb
sub
sbb
push
fistl
mov
pushf
mov
loope
sbb
scas
sbb
mov
cmp
aas
icebp
in
movsl
jecxz
sub
popa
rorl
mov
popa
xor
push
pushf
push
idivb
ja
adcb
jge
rclb
sbb
push
mov
sub
imul
sbb
ror
add
push
jns
popa
jecxz
or
lods
push
adc
cmp
call
outsb
dec
fadds
push
xor
in
mov
repz
dec
inc
ficomps
xlat
std
jl
mov
mov
mov
decb
push
and
and
loope
add
xchg
xor
push
stc
leave
mov
jl
std
xchg
add
push
mov
int3
inc
loope
mov
scas
sbbl
and
sbb
xchg
rcll
xchg
or
push
or
test
mov
lcall
mov
inc
inc
sub
ljmp
incl
mov
ret
das
push
jmp
mov
popa
pop
xchg
test
push
les
sub
ljmp
idivl
jmp
jle
sub
sbb
pusha
in
outsl
inc
jge
ss
rol
cmc
mov
push
dec
outsl
loopne
inc
mov
or
push
cmp
ret
call
lea
popf
enter
and
enter
and
out
dec
mov
ljmp
adc
clc
lcall
out
xor
mov
mov
xchg
xchg
add
xor
cli
test
mov
jae
jg
add
mov
or
sbb
pop
or
call
inc
jo
jne
mov
imul
cld
mov
es
fiaddl
mov
pop
out
pop
pusha
addl
inc
push
and
cmp
xchg
ds
pop
lods
aaa
fdivrp
lock
loopne
dec
and
adc
std
sbb
inc
mov
clc
stos
jnp
dec
icebp
outsl
adcb
es
pop
pop
mov
mov
xchg
cli
mov
sbb
and
xor
lods
dec
or
pop
cli
jbe
fbld
mov
movsb
push
loope
insl
popa
imul
mov
adc
stos
test
aad
fwait
stos
cmp
xor
arpl
jge
lahf
out
adc
jg
cs
shrb
movsb
push
mov
das
mov
xor
mov
sbb
or
test
jl
mov
lcall
inc
adc
mov
cld
jle
loope
nop
pushf
pop
rcr
xor
jge
or
nop
cmpsl
mov
xor
mov
lock
stos
aad
mov
push
lret
fldenv
cli
mov
and
adc
lock
xor
arpl
push
in
mov
add
mul
adc
push
insl
add
xchg
into
sahf
stc
add
and
fistl
aad
xchg
pop
jmp
clc
notb
cmpsl
pop
sbb
cmp
addr16
inc
xchg
cwtl
das
sbbl
mov
inc
jb
push
loopne
or
sub
mov
adc
outsb
inc
rcl
addb
daa
sbb
aam
xor
adc
mov
jle
mov
dec
push
pop
out
xchg
jp
mov
mov
lds
xchg
add
mov
sub
ret
jg
outsl
fidivrs
dec
lods
sbb
sub
rol
cli
les
add
mov
and
ret
scas
insb
xchg
jge
dec
add
and
dec
std
cmpb
das
pop
sub
inc
push
sbb
xor
jo
ds
int
pop
or
dec
and
mov
adc
xchg
add
mov
fbld
mov
sbb
or
cmp
add
in
cmpsb
movsl
inc
adc
mov
dec
jne
js
cli
xor
adc
pop
cmpsl
pop
cmp
std
ret
aaa
fisubrs
xchg
jne
ja
ss
incl
imul
cld
and
js
lcall
fadd
pop
mov
jge
cld
jp
xor
or
int3
mov
and
xchg
pop
mov
sub
add
jae
test
lcall
incb
push
daa
inc
sbb
xor
dec
xchg
or
fcmovnu
or
test
mov
mov
sub
dec
lds
mov
pop
and
stos
shlb
movsb
mov
mov
jo
cli
sub
movsl
mov
push
into
insl
fstpt
fimuls
ds
fldt
pmaxub
adc
inc
and
xchg
lea
loope,pn
jg
add
xchg
mov
jecxz
mov
sbb
and
dec
mov
jg
adc
movsb
aas
bound
cmp
loope
add
mov
or
adc
cmp
adcb
jne
xchg
fs
jl
incl
jo
popa
cmc
fiadds
jg
cmpsb
mov
andl
dec
lods
push
xchg
dec
cmp
jp
ret
sbb
push
mov
jne
insl
int
inc
std
out
adc
add
add
jl
sbb
nop
cltd
mov
adc
shll
pop
cmp
or
jbe,pn
sub
xchg
mov
sti
push
sub
sub
aam
shlb
jb
push
aam
rcr
mov
push
popf
dec
push
arpl
cmpsb
dec
xchg
add
pop
out
and
mov
inc
or
cwtl
clc
xor
idivl
add
lds
int3
and
xchg
jns
xchg
mov
ljmp
or
xchg
add
int3
dec
cmp
sarl
je
test
push
inc
jecxz
sub
xor
popl
add
lods
das
fsubrl
in
sub
outsl
mov
clc
out
ret
loopne
push
push
movsl
xor
dec
push
mov
xchg
mov
push
pop
mov
ret
bound
in
cli
pop
outsb
mov
push
sbb
ja
mov
adc
addr16
and
imul
inc
add
xor
jmp
pushf
mov
mov
in
add
cli
or
sub
ficomps
jmp
sbb
outsb
dec
push
addb
jg
sub
outsl
aam
test
orb
jne
movsl
dec
test
inc
or
pop
mov
std
lcall
dec
repnz
mov
xor
sbb
cmp
stc
push
negb
sub
subb
sbb
xchg
aaa
jl
stos
in
and
fidivs
lea
mov
push
jnp
mov
mov
fists
sub
fwait
sub
or
pop
push
es
xor
jp
scas
rolb
and
push
cmp
or
sub
faddp
cs
outsl
sarl
adc
inc
push
test
loopne
add
or
ficoml
jmp
lea
mov
sub
jecxz
movsl
ss
xor
sbbl
fmuls
scas
lcall
es
aaa
push
js
mov
xchg
pusha
rcll
add
jne
jnp
test
lret
jg
loope
cmpb
cli
jecxz
jb
jb
shlb
test
imul
dec
jecxz
or
push
aad
cmp
insb
pop
pop
and
ds
mov
fwait
or
and
lock
sbb
add
and
or
dec
out
ret
clc
ret
adc
loop
cmpsb
nop
sahf
ficompl
jo
iret
dec
push
sub
mov
mov
pop
jb
or
mov
cmp
cli
push
mov
push
xor
pop
sahf
and
subl
ss
sbb
mov
inc
pop
cmp
sub
leave
xor
ss
pop
push
mov
sub
sub
imul
mov
ret
pop
push
and
push
push
mov
shlb
inc
and
pop
cmpsb
aas
pop
jecxz
mov
adc
lea
pop
cld
inc
adc
shl
push
ds
mov
ljmp
shll
or
repnz
adc
jb
je
movsl
sbb
lock
inc
mov
push
add
movsl
mov
and
xchg
jno
add
fs
lret
push
adc
shll
xchg
or
pop
loop
adc
push
or
add
rclb
mov
jmp
adc
jns
or
cltd
xor
out
xlat
xchg
pop
aam
cmp
pushf
mov
push
test
mov
and
fs
and
movsb
das
sbb
cmp
sub
ret
stc
dec
das
fdivr
push
popf
adc
rcrl
orl
fcmovnb
jbe
nop
sbb
nop
lahf
stos
out
js
add
jg
mov
adc
xor
add
ret
xchg
jmp
sub
pop
shll
xorb
dec
int3
xor
pop
pop
mov
inc
mov
outsl
xchg
mov
mov
pop
sub
or
add
cmc
std
mov
push
push
mov
inc
and
xor
imul
fistpll
mov
mov
loop
loop
orb
add
ljmp
aam
sbb
in
das
mov
adc
pop
cld
scas
xor
sbb
lcall
lret
cmp
mov
pop
scas
or
mov
sbb
cmpsb
rolb
call
ss
or
cmp
mov
enter
inc
xchg
clc
call
es
ljmp
popf
lock
ljmp
ficompl
int
jne
cwtl
or
cli
fiadds
push
add
mov
jg
loopne
daa
adc
fidivrs
or
jg,pn
push
aad
das
cmp
sbb
xor
lods
jns
adc
inc
test
xchg
pop
jns
ds
je
jecxz
cs
or
aaa
in
mov
pop
xchg
jp
mov
popa
push
jns
in
movsb
cmp
mov
loope
or
jno
cmp
icebp
push
decl
movsl
xor
pop
cmpsb
sbb
outsb
leave
mov
es
dec
mov
pop
cs
call
lcall
ja
roll
cld
or
ja
push
fcom
fs
cmp
add
add
cmpb
inc
jecxz
adc
ja
sbb
scas
sbb
aad
cmp
movsl
lret
int
inc
jecxz
cltd
test
adc
das
jns
or
add
pop
mov
lods
or
xor
cmc
in
jle,pt
cmp
add
xchg
push
xchg
bound
out
aad
scas
sub
outsb
dec
push
jecxz
rolb
ds
xor
icebp
add
insb
dec
add
xchg
outsl
jne
test
jecxz
ja
pop
dec
ss
sar
xchg
xadd
fsubs
adc
mov
xor
ss
pushf
xchg
test
movsb
lea
jg
pop
dec
arpl
test
rcll
jg
adc
adc
fisttpl
lock
test
loopne
inc
mov
in
fstl
add
pop
cmp
sub
jge
or
mov
add
gs
sub
mov
mov
lea
jge
faddp
mov
gs
out
mov
scas
out
push
cmp
sbb
fdivr
das
cs
cmc
cmp
or
push
lret
sbb
loop
cmp
js
and
jnp
xchg
cli
daa
test
pop
adc
jg
lods
popa
pop
sub
mov
aas
shlb
idiv
scas
sbb
jl
inc
xchg
push
lock
add
fisttpl
mov
jb
inc
add
mov
mov
ffreep
mov
mov
test
mov
pop
das
fldt
cld
nop
sarl
jae
fmulp
mov
push
mov
movsl
lods
out
xor
icebp
incl
xlat
mov
sbb
adc
pop
and
ss
aaa
imull
or
popa
leave
ror
adc
or
sub
movsb
push
or
or
mov
mov
fidivl
mov
push
inc
sar
sahf
dec
hlt
xchg
dec
add
in
inc
lret
loope
adc
loopne
inc
mov
mov
adc
inc
sbb
insb
mov
adc
pop
dec
jg
mov
adc
push
ret
and
jl
dec
jl
mov
sbb
addr16
jg
mov
pop
cltd
subb
add
inc
sbb
add
dec
jne
jbe
mov
loope
pop
pop
pop
xor
sbb
sahf
mov
ja
lods
add
push
dec
daa
mov
mov
sbb
lea
cmp
lret
lret
jmp
mov
mov
ret
inc
inc
clc
out
clc
idiv
lds
icebp
pop
hlt
rolb
dec
out
jns
push
clc
lods
pusha
pop
fimuls
jl
cmp
clc
jbe
test
xor
insb
lods
stc
sbb
fildll
xchg
xor
mov
ficompl
xchg
or
push
loope
xchg
bound
adc
mov
push
insl
call
pop
in
or
mov
jmp
test
inc
call
jmp
insb
cmc
popf
dec
loop
lock
sub
lahf
mov
lds
popf
imul
clc
mov
fmuls
push
add
addb
xor
jp
dec
icebp
lods
in
adc
nop
sbb
in
xchg
decb
clc
sub
aaa
sti
cs
cmpb
mov
mov
xor
mov
dec
dec
pop
inc
cld
incl
xor
and
push
das
or
adc
mov
mov
cmpsb
jle
insl
xchg
sbbb
mov
cmp
mov
sbb
jne
pop
pusha
aaa
mov
test
fstl
or
pop
pop
cli
out
lock
shll
push
icebp
inc
lods
orl
aaa
stos
mov
clc
or
mov
rol
pop
inc
pop
loopne
mov
aam
inc
sbbb
sbb
inc
stc
in
shrl
sbbb
jg
mov
xchg
mov
adc
lea
add
inc
jmp
pop
ja
ret
and
icebp
mov
pop
cmc
ret
xor
lock
sub
das
dec
dec
jo
xor
enter
scas
or
ljmp
cmp
jne
mov
jmp
push
mov
fwait
cpuid
push
push
push
inc
dec
or
mov
shll
imulb
fwait
jae
fwait
xchg
cmp
insl
or
pushf
jl
mov
movsl
adc
pop
sub
jecxz
mov
add
mov
cmp
pop
push
cmpb
mov
and
jle
jb
pushf
outsl
outsb
imul
sbb
jle
cmp
jmp
push
xor
mov
in
add
jne
lret
push
and
ljmp
push
idivl
push
inc
xor
sub
add
sbb
in
cmp
loop
and
lret
mov
scas
inc
or
les
dec
or
inc
jbe
pop
jecxz
pop
push
not
mov
cmp
push
stos
push
insl
mov
jecxz
pop
pop
and
mov
xchg
sar
nop
lret
enter
in
add
lods
addr16
mov
mov
inc
lahf
lahf
les
add
ljmp
cld
outsl
pop
jmp
andl
jge
xchg
insl
dec
xchg
pop
inc
xor
push
and
and
inc
cmp
mov
xchg
pop
mov
in
adc
xor
hlt
das
cmc
mov
mov
push
mov
out
pop
lret
ret
xorb
sub
mov
and
rclb
mov
or
mov
fs
xchg
arpl
or
mov
int
adc
aas
xchg
push
mov
jge
and
sbb
call
mov
mov
adc
mov
leave
repnz
jne
push
repz
insb
ljmp
clc
jl
sbb
cmp
ja
adc
rclb
mov
outsl
jg
and
fisubs
loop
pop
loopne
mov
mov
dec
icebp
cmpb
adc
lahf
ret
shr
loopne
inc
push
push
fcomps
mov
mov
xor
add
mov
pushf
push
hlt
push
mov
push
icebp
and
test
into
add
pushl
xor
outsl
jne
fidivrl
aad
sub
lret
negb
cmp
mov
or
in
call
fld
ljmp
and
aam
lahf
rolb
aam
mov
adc
loop
xchg
and
or
das
insl
sub
es
cmp
lahf
daa
call
shlb
addb
and
cmp
sub
loopne
subl
xlat
sub
add
inc
aad
or
mov
lcall
jbe
fwait
in
push
fsub
mov
mov
pop
dec
jae
shl
dec
jne
stc
sub
outsb
lea
js
loope
or
dec
mov
jo
subb
cld
jg
pusha
mov
lock
push
sub
pop
scas
aam
in
test
adcb
fildll
ficoms
shll
std
inc
adc
pop
jno
inc
lret
or
loop
adc
data16
into
sub
xchg
pop
pop
das
arpl
or
push
loop
add
push
xchg
mov
mov
call
pop
cmc
pop
arpl
sbb
xor
loope
clc
mov
icebp
dec
dec
test
pop
push
push
sub
sbb
xchg
xor
fisttpl
fcomps
pop
pushf
inc
jne
mov
aam
stos
jge
and
sbb
out
jg
xchg
pop
mov
mov
xor
jbe
jbe
ja
loop
sar
inc
push
fnstcw
adc
fsubrl
dec
sub
mov
test
or
push
pop
shlb
sbb
mov
frstor
enter
dec
rcll
addb
push
imul
push
sub
lods
xchg
sub
pop
pop
icebp
sbb
mov
adc
out
and
push
leave
stos
sbb
in
loope
shrl
ret
mov
cmp
mov
lahf
push
fsts
out
xchg
sub
cmpb
pop
xchg
lcall
hlt
insb
dec
icebp
aad
sbb
sub
cwtl
outsb
adc
dec
mov
fists
cwtl
jecxz
sub
dec
clc
mov
cmc
mov
mov
dec
inc
js
or
mov
sub
in
dec
mov
aaa
cli
lods
sbb
fstpt
mov
or
inc
sub
je
cmc
mov
xorb
stos
xchg
mov
lahf
fiadds
nop
sub
mov
xchg
mov
push
jp
xchg
pusha
add
pop
sub
cmpsl
cli
or
ret
mov
pop
inc
shrb
loope
aas
mov
sub
repz
sub
push
rorb
xchg
push
clc
ret
push
mov
std
mov
mov
and
mov
int3
mov
fsts
cmp
sub
sub
add
out
mov
mov
sub
daa
and
push
pop
mov
pop
cs
pop
mov
sbb
sbb
inc
sbb
leave
faddl
aas
outsl
loopne
mov
push
xchg
int
jg
or
jae
out
or
mov
scas
stos
xchg
scas
cld
mov
pop
loopne
adc
sbb
fstl
cli
pop
mov
xchg
add
out
popa
and
mov
xor
test
insb
cmpsb
xchg
daa
or
push
mov
enter
sub
cmpsl
mov
add
jbe
xchg
mov
sar
mov
mov
rolb
xchg
ret
lret
mov
pop
in
sbbb
adc
add
xchg
cmpsb
add
out
lea
decl
das
cmp
mulb
iret
add
ss
sub
ja
inc
test
imul
xchg
sbb
mov
fstps
pop
loopne
cmc
mov
adc
pushl
roll
and
mov
sbb
ja
fidivs
mov
cli
xor
notb
insl
std
xchg
push
cmp
adc
testb
or
out
in
adc
icebp
mov
test
cmpsb
lds
jb
jne,pn
push
pusha
cmp
daa
arpl
je
add
add
jo
push
cwtl
lea
aam
test
lcall
mov
sbb
stos
or
xchg
rorb
fsub
lret
inc
aam
outsl
adc
out
lods
inc
push
and
inc
add
mov
test
dec
andb
inc
das
xchg
xor
jno
cmpsl
negl
mov
inc
iret
adc
aaa
inc
adc
mov
mov
push
test
mov
add
add
or
outsb
std
andb
shll
push
pop
test
or
lods
push
or
mov
lahf
jg
sahf
inc
in
pusha
rcrl
fisttpl
popa
pop
inc
in
dec
mov
sbb
pop
jp
jmp
out
dec
repz
push
adc
call
dec
push
shll
jge
in
mov
sub
or
mov
ja
call
jp
es
sbb
fstpl
and
roll
sub
adc
decl
or
adc
sbb
call
mov
daa
ret
lahf
das
adc
sti
push
push
add
add
jb
ud2
je
jno
shll
sub
and
xchg
add
push
push
and
cld
inc
adc
das
fucom
sbb
adc
mov
pop
bound
mov
fcomps
bound
filds
adc
inc
add
jae
xchg
clc
das
mov
add
sbb
scas
xchg
aaa
decb
mov
shr
sti
lret
in
push
in
mov
sbbl
mov
outsl
aam
std
jns
and
test
mov
inc
sub
or
pop
xor
and
inc
rcl
pop
mov
jbe
imul
adc
lea
and
decl
pusha
adc
inc
inc
or
add
pop
cmpsb
je
xor
mov
loopne
jmp
rcll
xor
jg
ret
in
add
cwtl
push
ljmp
popa
inc
dec
lret
sysenter
shll
lods
or
or
imul
aaa
add
xor
add
jnp
xor
inc
stos
outsb
push
mov
or
push
cwtl
pop
dec
cmpps
es
push
outsb
mov
jmp
cltd
test
and
or
insl
mov
mov
lret
dec
mov
mov
data16
lods
pop
gs
repz
pop
imul
push
push
mov
xor
and
push
and
and
outsl
jb
jo
and
aas
mov
lret
test
jo
sbb
loopne
popa
aam
rcl
pop
push
roll
adc
fiadds
xor
and
pop
xchg
fwait
int3
cli
and
cmpsl
push
xchg
push
inc
arpl
mov
aaa
movsl
je
xor
adc
inc
push
out
jp
in
pop
sub
std
sub
nop
xchg
sub
gs
sarb
xor
imul
in
xor
sti
ja
loope
mov
xor
mov
pop
mov
imul
dec
mov
addr16
sbb
add
push
mov
icebp
popf
add
js
jmp
or
jb
add
or
jno
fisubl
addr16
xor
in
mov
jl
push
pop
pop
pop
push
mov
mov
jg
mov
cli
movsl
dec
fs
xchg
mov
fisttps
jno
push
aam
mov
sbb
lret
lea
popa
stos
das
repnz
add
pop
mov
jo
loopne
cwtl
mov
es
adc
sub
sub
or
lcall
mov
cmp
push
icebp
dec
gs
sbb
adc
xor
dec
inc
cmp
scas
int3
fadd
hlt
lahf
inc
in
clc
arpl
int3
cld
or
cltd
repnz
cld
fldenv
dec
push
jecxz
jecxz
inc
loopne
lret
hlt
jp
dec
add
cmp
xor
cmp
insb
cmp
mov
adc
xor
data16
xchg
test
lea
loopne
or
fistps
xchg
mov
aam
adc
sub
and
mov
or
sub
ficomps
mov
pushl
sbb
pop
dec
lds
mov
arpl
and
xchg
cmpsl
mov
or
lahf
sbb
xchg
outsb
push
push
dec
aad
or
out
or
dec
push
lea
xchg
data16
and
loope
mov
jmp
fcmovu
add
add
cli
pop
test
sbbb
jmp
sub
mov
sub
call
xchg
loopne
ss
fldt
xchg
insb
push
test
daa
push
xchg
scas
imul
fwait
xchg
es
xor
out
mov
subl
mov
adc
ja
jg
loop
jg
cmpsl
xchg
cmp
jle
dec
mov
movsl
jmp
xchg
jecxz
scas
mov
adc
inc
mov
sti
mov
mov
push
xchg
dec
pop
or
scas
icebp
sbb
leave
lods
xchg
aaa
call
sub
mov
inc
int3
insb
push
push
aaa
test
adc
pop
and
adc
jns,pt
cmc
shll
test
lea
imul
test
jg
leave
test
inc
dec
sbb
jle
mov
adc
sbb
lret
sub
inc
pop
mov
scas
rolb
lahf
in
mov
clc
addb
and
or
xchg
and
lcall
mov
outsb
pop
xchg
test
mov
mov
add
inc
mov
out
sbb
cmp
lock
push
push
push
dec
cmp
inc
mov
notb
mov
pusha
add
push
and
push
in
out
add
clc
out
jg
push
jmp
add
div
push
adc
in
pop
jge
stc
jb
and
lock
movsl
ljmp
xor
mov
add
dec
sub
cld
decl
roll
out
into
pop
xor
repnz
in
ja
insb
ret
pop
or
pop
sahf
loop
and
div
mov
aad
fs
or
stos
or
jb
pop
xor
std
call
fcmovne
lcall
or
fimull
dec
push
mov
sbb
mov
xorl
pop
cli
fbstp
cmp
mov
aam
call
jl
jno
lea
and
xor
hlt
sbb
js
icebp
imul
mov
dec
xchg
cli
mov
cmp
cmpsb
movsl
xchg
jbe,pt
shlb
pop
or
pop
push
fucomi
ret
out
sahf
fdivr
cli
xor
in
lods
rcrl
gs
ret
pop
xchg
jmp
shlb
sub
sbb
sbb
sub
ds
ljmp
jo
inc
cltd
orl
dec
hlt
sub
or
cmc
cmpsl
inc
or
outsb
aam
xlat
add
mov
xor
cmp
mov
fiadds
sbb
aaa
insb
inc
not
mov
aam
mov
into
jo
inc
push
sub
aad
arpl
out
rclb
in
nop
mov
jle
pop
mov
shlb
inc
lods
hlt
pop
mov
rorl
loop
jnp
je
mov
and
lret
and
dec
bound
sbb
mov
adc
cwtl
add
addb
fildll
js
add
nop
dec
sub
adcl
testl
xchg
adc
call
push
xor
inc
sub
xchg
xor
enter
insl
xchg
ss
repz
ret
push
and
inc
repnz
or
cld
negl
dec
mov
jno,pt
lods
ss
push
fisubl
mov
inc
std
lods
fidivrs
fisttps
cmp
je
sahf
fsubs
sahf
ljmp
ffreep
das
cld
subb
ret
and
fmuls
rol
xor
test
inc
jle
out
loope
imull
add
push
movsb
cwtl
jle
int
lcall
xor
mov
lds
push
and
std
inc
adc
mov
das
cwtl
es
sar
and
sbb
xchg
mov
push
sti
add
mov
pop
sbb
adc
push
jmp
add
push
add
sub
hlt
push
adc
jg
pop
fsubrs
enter
adc
pop
pop
mov
push
lahf
push
call
fadd
rolb
lock
lret
xor
mov
jmp
mov
inc
jnp
push
push
mov
out
xor
dec
add
test
or
aaa
push
maxps
cmp
das
or
and
rclb
mov
push
xchg
inc
sahf
sarl
ffreep
xchg
inc
push
sub
pop
sub
int
negl
adc
ficoml
out
ficompl
xchg
out
adc
iret
or
fists
stos
popf
inc
mov
add
inc
clc
dec
jmp
notb
nop
insl
xor
inc
mov
jle
ret
call
and
push
repnz
repz
outsb
lcall
mov
ja
cmp
test
mov
pop
pop
arpl
call
les
xchg
into
adc
dec
lcall
aad
mov
lods
ret
add
mov
rorb
inc
mov
pop
pop
adc
or
mov
pop
jb
add
fcmovnb
xchg
stc
ret
xchg
test
iret
dec
mov
adc
xchg
test
xor
lcall
shll
sbb
cmp
fxtract
loopne
jo
test
mov
pop
out
out
dec
arpl
test
mov
das
jmp
mov
setbe
cmp
push
fdivrp
mov
pushf
jle
aaa
iret
insb
adc
cmpsb
fistpll
inc
gs
fs
rorb
cmc
ja
sbb
xlat
repz
inc
or
movsb
pushf
adc
movsl
shrb
rolb
push
add
cmp
mov
pop
sbb
je
adc
mov
push
inc
inc
loope
arpl
mov
pop
pop
dec
jo
hlt
outsl
push
mov
and
push
es
ja
das
aam
mov
aas
sbb
and
and
jp
pop
pop
xchg
lods
mov
or
fildll
pop
loopne
sarl
ja
test
mov
icebp
add
out
aam
ret
dec
cwtl
add
cmpsb
cli
cs
aaa
dec
pop
std
jns
movsb
popf
aas
scas
or
mov
mov
rolb
shrb
dec
arpl
adc
loope
rcr
incl
adc
xor
bsf
test
xchg
fld
sarb
mov
sub
mov
add
add
sbb
mov
jne
jno
jecxz
ja
mov
ss
mov
fsubl
inc
in
jmp
dec
adc
lds
mul
or
aaa
mov
les
fdivrs
push
sub
xlat
adc
add
sti
jecxz
loopne
mov
orb
jne
pop
aam
adc
pop
mov
leave
cmp
xchg
std
lock
rcrb
and
mov
repz
outsl
fdivl
jmp
sbb
push
cmp
fbstp
sbb
aaa
push
inc
jge
scas
imul
es
fs
lahf
loopne
fimuls
call
add
int
fnsave
mov
hlt
mov
test
stos
mov
push
lods
sahf
mov
ljmp
mov
dec
add
lock
into
les
loopne
call
or
fimuls
lahf
insl
xor
repz
lds
mov
sub
stos
mov
lahf
xchg
lock
and
mov
mov
pusha
imul
adc
mov
add
pop
jle
fisubs
and
pop
mov
sbb
and
sub
scas
mov
fdivrl
add
je
and
orb
mov
in
mov
adc
je
adc
daa
cltd
aad
mov
outsb
dec
xchg
testb
icebp
jmp
push
mov
add
in
sti
sbb
leave
xchg
mov
jle
je
les
sbb
lods
je
pop
jmp
addr16
jne
dec
cmpl
cmp
mov
xchg
xor
daa
ret
mov
and
js
mov
mov
jl
pop
mov
lods
pop
dec
pop
je
in
popa
sti
cmp
or
or
add
decl
sbb
aas
cmp
mov
adc
loop
jo
sbb
std
insb
jo
mov
lahf
call
cwtl
test
xchg
inc
test
mov
leave
pop
fidivrs
pop
clc
or
repz
jo
aaa
mov
push
in
adc
mov
clc
lret
xor
jp
jo
popa
adc
adc
call
sahf
in
rcrl
dec
jmp
jo
xor
mov
loop
pop
fucomi
or
paddq
push
incl
pop
icebp
mov
and
das
aam
cli
or
sbb
jno
dec
lods
movsl
stos
lret
jecxz
pop
sub
cmp
xchg
adc
xchg
mov
in
jb
lcall
lret
enter
bound
iret
xor
dec
cld
fsubrl
aam
ds
xor
push
add
mov
subl
adc
ss
dec
rcr
mov
fs
pop
sbb
mov
test
ss
mov
adc
push
lods
movb
out
sahf
out
mov
sub
mov
dec
in
jg
fistpll
dec
inc
inc
xchg
mov
pop
add
sub
ljmp
cmp
add
mov
les
cli
popf
add
out
jg
cmpsb
int
and
stos
push
mov
jns
inc
jecxz
adc
out
dec
lds
add
add
mov
dec
mov
push
mov
pop
cmp
fisubs
fwait
and
lret
dec
out
aaa
push
out
push
outsl
leave
add
cmpsb
mov
mov
aas
cmp
cmp
in
loop
dec
pop
or
scas
xchg
cld
inc
pop
cli
and
push
int3
inc
int
xlat
push
mov
add
mov
inc
lcall
ret
out
ss
mov
sub
xchg
ror
clc
pop
inc
dec
cli
jo
test
fistpll
outsl
test
cmp
lea
mov
or
ret
pop
aam
jg
jg
push
and
push
daa
jle
test
les
sub
sub
pop
mov
aas
inc
and
lea
mov
dec
jl
mov
adc
sbb
push
xchg
pop
nop
shlb
mov
pop
out
fistpll
jbe
je
jb
jo
adc
dec
jge
xchg
mov
jo
mov
inc
mov
inc
rclb
inc
mov
popa
sti
push
test
mov
cltd
dec
add
notl
pushl
xor
hlt
movsb
cmpl
sub
push
fs
add
pop
push
push
clc
sbb
call
nop
xor
cli
pop
mov
rcll
adc
ljmp
xchg
inc
and
inc
inc
outsl
push
mov
or
push
sbb
pop
jl
lods
and
xchg
into
in
sbb
inc
push
cmpl
inc
push
lds
xorl
cmp
gs
push
imul
pop
insl
das
inc
pop
mov
mov
pop
dec
jbe,pt
push
in
outsl
jmp
pop
mov
xchg
mov
adcb
adc
es
loope
sti
or
fisubl
and
mov
es
in
pop
outsl
jg
inc
arpl
lcall
test
mov
jg
mov
rcrb
in
xchg
fwait
jae
imulb
popa
stos
out
in
icebp
jne
push
cld
dec
addb
js
jp
insb
mov
jecxz
dec
aam
das
dec
mov
lds
mov
cs
push
jo
sbb
lret
clc
mov
rorl
inc
add
icebp
push
pop
data16
movsl
or
dec
repz
cmp
push
outsb
out
sub
xor
xchg
test
dec
andb
loopne
frstor
gs
adc
loope
lods
jp
sti
dec
push
cmp
add
push
fstpt
rolb
mov
sbb
ret
sahf
add
mov
mov
jb
jae
loopne
pusha
mov
mov
pop
sub
xchg
js
pusha
adc
push
sub
jmp
out
inc
mov
imul
pop
imul
lret
or
sub
push
mov
adc
in
and
jecxz
pop
in
stos
fisubrs
dec
hlt
and
cs
xchg
ljmp
or
inc
add
ss
inc
ljmp
andb
outsl
xor
or
mov
movd
mov
gs
pop
push
loope
xor
xor
lock
mov
or
mov
aaa
jmp
inc
lods
fdivr
shll
fisttpl
sbb
mov
inc
scas
ja
push
icebp
dec
pop
sti
push
fwait
jo
jp
pop
sub
fcoms
popa
and
mov
add
imul
mov
xchg
orb
jecxz
mov
orl
mov
adc
jb
mov
out
loope
inc
push
adc
mov
rcrb
lods
loopne
pop
xor
add
scas
jge
xor
or
pop
pushf
dec
fnstsw
xor
and
inc
pop
inc
sbb
cltd
jo
sti
add
mov
call
ja
mov
jl
inc
pop
movsl
pop
sbb
xchg
xchg
insl
adc
lcall
cmc
mov
cmp
mov
fsts
and
fidivs
cs
lret
movsb
aad
or
ja
xchg
sbb
lock
insb
fistpll
cmp
cli
insb
or
test
cmp
bound
inc
hlt
insl
faddp
cmpsl
aaa
jne
adc
cwtl
cmp
xor
jmp
push
jge
mov
insb
inc
mov
imul
nop
mov
pop
ljmp
mov
pop
cmp
jle
mov
mov
add
mov
adc
das
sub
mov
jo
nop
xor
arpl
in
incl
mov
popf
mov
cmp
leave
add
mov
scas
cld
mov
pop
xor
push
das
iret
int
or
rorl
popa
mov
cli
int3
setl
pop
decb
push
push
aam
cs
dec
sub
adc
or
decl
adc
push
mov
adc
and
shrb
pop
pop
adc
cld
lods
hlt
mov
aaa
jge
aas
push
js
mov
loopne
das
or
stos
hlt
jb
lcall
fildl
push
pop
sub
xor
dec
icebp
jns
fldcw
sub
sbb
sbb
adc
test
inc
jl
inc
push
rclb
mov
adc
mov
sbb
rsqrtps
push
lcall
iret
in
stos
push
jnp
bnd
cld
enter
pop
es
mov
sbb
and
inc
in
mov
ss
pop
je
rcrb
loop
iret
fmull
cli
ljmp
mov
pop
test
addr16
jle
cmp
pop
adcb
pop
dec
jne
int3
gs
fcomps
adc
push
sub
rcll
fistl
mov
mov
sbb
pop
insl
inc
mov
xor
add
push
xor
jmp
push
fsubs
xor
jae
jecxz
and
pop
data16
jle
adc
pop
loope
cmp
pop
sbb
dec
icebp
test
inc
inc
sti
les
ret
hlt
mov
pop
or
ja
sub
xchg
mov
or
cmpsl
dec
test
lods
mov
mov
test
jp
imul
nop
push
jle
push
aaa
shl
xchg
ret
push
aad
mov
lods
sub
dec
push
xor
xor
pop
cli
sbb
bound
aaa
or
jo
mov
add
cmc
aas
xchg
jge
fsubrl
testb
and
or
push
jmp
adc
xor
fiaddl
mov
mov
stc
inc
add
loopne
aam
xor
adc
lret
dec
lahf
push
add
mov
or
adc
adc
mov
and
sub
lea
rcr
imul
movntq
cmp
lea
mov
add
adc
pop
int3
mov
and
shlb
aas
out
adc
push
mov
outsl
xlat
push
add
lret
lea
sbb
jmp
shr
ret
pop
mov
out
loope
outsl
mov
push
ret
andw
jg
jmp
cmp
scas
dec
jge
or
movsl
movsl
outsb
mov
push
push
and
push
rcl
gs
and
inc
lcall
outsl
insb
pop
bt
cli
sub
add
test
cmp
sbb
or
inc
or
mov
or
dec
in
fisubl
add
fdivs
cs
xor
push
pop
loopne
rcrb
ffreep
push
aas
push
cwtl
mov
in
lea
mov
jle
cmp
cmp
dec
dec
repnz
xchg
and
add
imul
aas
stc
aad
fnsave
lcall
sub
ficomps
jnp
test
iret
bound
andb
sub
leave
lock
mov
inc
cmp
dec
sbb
and
jl
pop
pusha
sub
add
test
mov
aad
mov
clc
ljmp
mov
jmp
in
mov
mov
mov
lret
in
sub
test
pop
sarl
scas
or
sti
js
imul
mov
rcl
roll
sub
jecxz
or
and
push
push
stos
cwtl
jle
add
cltd
movsb
pop
in
mov
sub
inc
xchg
repnz
pop
fdivrl
inc
mov
add
loop
pop
lret
cld
push
add
cmp
aam
movsl
mov
mov
call
dec
sti
shl
das
add
fwait
iret
or
sahf
lret
adc
div
dec
pushl
shr
andb
cmp
mov
std
int
push
push
iret
push
or
mov
push
test
add
jle
sarl
test
rorb
inc
sub
fistpl
in
outsl
loope
cmp
int
in
mov
xor
ljmp
pop
hlt
loope
aas
jne
adc
pop
idivl
pop
xchg
xchg
cmp
jo
fisubrs
or
fldl
jbe
jb
or
xor
out
lea
add
inc
xor
mov
pop
push
pushf
add
and
dec
mov
lock
pop
push
push
mov
mov
lock
jae
adc
icebp
mov
lea
je
call
mov
mov
iret
cmp
lock
sbb
ja
sbb
add
mov
lock
rolb
push
push
xchg
xchg
into
sbbl
xchg
cwtl
stos
imul
or
das
cld
and
sti
push
and
rcrl
add
push
mov
mov
add
or
pop
push
sahf
dec
test
stos
movsb
pop
push
incl
sbb
popf
pop
sbbb
pop
mov
xor
lahf
mov
fdivl
adc
decl
rcrl
ret
loope
and
pop
push
stc
clc
push
fnstcw
lods
das
cld
and
aas
repz
test
dec
sbb
into
push
sbb
sti
ljmp
jno
into
in
push
scas
outsl
lods
sbb
dec
mov
xchg
loop
fwait
clc
imulb
lret
inc
sbb
mov
or
push
and
add
fidivs
cmpsb
add
sti
lods
pop
xor
mov
and
or
mov
popf
sbb
adc
arpl
leave
ss
cmp
push
ffreep
xchg
sbb
mov
push
and
adc
inc
xor
dec
mov
dec
lods
addr16
imul
jl
or
ret
dec
jno
aam
jle
xor
clc
pop
aaa
sub
cmp
lahf
and
xchg
inc
incb
adc
shl
sub
xchg
mov
dec
pop
pop
push
push
xor
cld
pusha
popa
mov
enter
inc
sbb
ss
lods
sub
pop
push
addr16
mov
dec
or
xlat
mov
mov
shr
pop
sub
sbbb
push
push
jl
sub
into
dec
sub
xor
or
xor
adc
orl
incl
lods
xor
mov
jnp
shlb
shrb
das
inc
adc
and
test
mov
jp
rol
dec
decb
outsl
xchg
mov
ret
mov
sub
jbe
out
ljmp
jb
or
enter
out
sbb
call
pusha
arpl
mov
dec
in
inc
idiv
mov
cld
pop
pop
adc
sub
jno
or
push
leave
fisubrs
mov
mov
xor
dec
jg
add
adc
lock
push
sub
js
outsb
push
xor
sbb
movsb
scas
movsl
fisubrl
mov
jmp
cltd
jnp
das
dec
mov
out
decb
push
jge
fwait
cmp
out
or
xchg
mov
outsb
mov
sub
enter
hlt
sbb
in
ds
inc
push
adc
cmc
or
movsl
js
icebp
shlb
adc
aam
lds
in
test
dec
add
imul
and
lret
cmpsl
jmp
rorl
in
jmp
and
xlat
cmp
int3
jecxz
cmpsb
mov
inc
test
jo
jo
lods
cmpsl
out
xchg
or
stos
sub
aaa
mov
movb
ds
ffreep
adc
aas
mov
out
pop
xor
stc
test
out
and
and
mov
adc
mov
mov
pushf
pop
push
hlt
sahf
push
mov
psraw
mull
mov
popa
popa
jmp
mov
pop
popa
add
jbe
repz
pop
je
jmp
xchg
aas
fidivs
add
sub
mov
fmulp
jge
push
jle
aas
xchg
sbb
lret
dec
pop
jns
jmp
mov
mov
enter
out
sub
push
inc
rclb
mov
popf
icebp
jne
mov
add
add
xchg
stos
or
and
bound
ret
cmp
or
js
add
js
mov
fstpt
and
psubq
das
fldt
jle
in
lods
repnz
movsl
les
pop
test
cmpsl
mov
jg
leave
push
push
pop
arpl
pusha
inc
lret
jne
sbb
insl
jecxz
mov
push
stc
push
xchg
fcmovnu
shlb
mov
jge
push
scas
bound
xchg
lods
or
fisttpl
cmp
arpl
hlt
xor
and
mov
mov
ds
or
addr16
mov
adc
out
xchg
push
loop
ljmp
leave
out
loop
sub
mov
or
inc
test
jo
push
sarb
rclb
sbb
aam
fnsave
jo
out
insb
mov
mov
cmp
repz
push
lods
adc
mov
mov
jg
adc
std
data16
mov
xchg
sbb
mov
and
push
jae
cmp
lcall
aam
cltd
jg
cmp
xchg
cmp
and
scas
popa
jo,pt
jg
stos
lds
xchg
ret
sbb
aaa
inc
mov
jb
pop
push
cwtl
mov
rcrl
mov
out
cmp
out
lds
push
cmp
mov
nop
add
jne
mov
movsl
repnz
out
mov
test
pop
mov
das
testb
es
inc
lock
pop
pop
icebp
sarl
jecxz
popf
and
jae
push
loop
test
lret
adc
adc
xchg
insb
cli
fwait
jmp
ljmp
adc
push
xor
decl
test
lcall
add
add
fs
test
arpl
dec
mov
rorl
xor
add
adc
pop
sbb
into
sub
pop
mov
jbe
inc
mov
lea
xor
cmp
and
popf
imul
fildll
push
test
bound
in
leave
lcall
shl
dec
push
shl
fadds
mov
aam
inc
mov
call
push
pop
out
add
sbb
in
mov
test
cmp
or
push
iret
add
lret
or
icebp
in
into
lret
dec
out
inc
jmp
sub
dec
xor
jb
push
push
outsb
pushf
jge
int
xor
adc
xchg
negl
popa
adc
sub
adc
mov
inc
in
in
and
jg
pop
cli
mov
mov
mov
dec
mov
mov
cmp
jns
dec
inc
enter
sti
dec
je
in
lahf
in
push
mov
mov
int
loopne
lock
jl
sub
and
ja
les
and
pop
or
nop
pop
popa
repnz
scas
fiaddl
jb
xchg
test
mov
sbb
testb
stos
addb
add
loopne
lds
pop
popf
sub
jmp
pop
cli
mov
lcall
mov
lock
inc
inc
cwtl
mov
lcall
and
insl
dec
and
cmc
gs
scas
std
sub
scas
lahf
movsb
popa
cmp
add
fbstp
test
fwait
or
sti
xchg
int3
pushf
push
insb
lahf
push
nop
or
faddp
out
loop
mov
mov
dec
out
inc
ror
das
xchg
inc
mov
popa
push
mov
add
shrl
fcoml
and
mov
subb
pusha
pop
and
or
adc
fstl
fidivl
es
cmp
test
sub
sub
test
inc
repnz
mov
ljmp
add
jge
enter
insb
xchg
cmpsl
xor
cmp
dec
mov
push
test
subl
in
aam
inc
in
sar
dec
test
jne
push
cli
sbb
das
popl
or
int
sbb
mov
add
adc
neg
fdivs
repnz
adc
pusha
add
sbb
mov
xor
jge
push
cmp
mov
test
imul
je
rolb
and
je
mov
mov
sub
inc
and
add
cs
in
pop
imul
arpl
sbb
jg
imul
orl
icebp
add
popf
mov
xlat
xchg
lods
insl
sbb
loopne
test
add
push
lahf
xchg
push
sbb
lcall
or
clc
or
idivb
push
mov
mov
call
jb
ss
ja
ja
xchg
aam
jno
dec
add
ret
adc
pop
lcall
xchg
add
inc
test
add
jo
sub
loope
aam
fdivr
or
mov
inc
xor
in
orb
pop
test
decb
pop
jns
popa
xchg
icebp
cmp
xchg
inc
lods
lret
loopne
xor
mov
add
repz
in
out
sub
pop
mov
jbe
mov
fisttpll
mov
mov
ja
cld
sbb
fists
js
add
pop
jp
or
mul
mov
cld
outsl
fisubrl
adc
and
push
fs
mov
push
jg
xchg
sbb
mov
mov
rcl
mov
sbbl
and
test
dec
sbb
and
mov
cs
sbb
aas
add
fsubp
cmpsl
cmp
adc
lea
dec
out
aam
mov
js
cmpsl
pop
outsl
inc
push
mov
push
adc
shrb
loopne
punpckhbw
add
and
or
xchg
xchg
inc
sbb
in
mov
test
or
pusha
jae
cmp
sbb
sbb
inc
mov
fwait
pop
push
xchg
sbb
out
imul
es
icebp
sub
fcoms
adc
pop
xchg
xchg
les
das
xlat
ret
out
sbb
outsb
cs
gs
scas
mov
inc
mov
pop
ss
push
push
or
ret
add
mov
fistl
fisubrs
arpl
mov
mov
jp
xchg
mov
dec
and
xchg
mov
adc
mov
loopne
mov
inc
xchg
repz
cs
getsec
mov
and
pop
inc
mov
xchg
sub
push
fdivrl
mov
push
mov
jae
xlat
sbb
mov
hlt
adc
fwait
add
mov
push
xchg
ret
and
xlat
mov
xchg
outsb
pop
cmp
mov
call
loope
mov
mov
rorl
mov
sysexit
adc
outsl
jb
lret
sub
mov
cmpsb
pop
mov
inc
mov
and
outsl
xchg
shll
push
imul
add
ljmp
adc
stc
jnp
movsl
mov
jg
sbb
cli
call
pop
xchg
fs
sub
add
movsl
pop
or
xorl
js
sti
fistps
jb
cld
imul
dec
loop
loop
shll
fidivrl
fdivrs
outsl
jnp
incb
ret
push
mov
dec
mov
popa
ret
mov
mov
sbb
dec
test
outsl
xor
dec
cmp
push
pop
ret
insl
xchg
mov
shrb
js
adc
dec
faddl
insl
ja
subl
bound
jmp
xor
xchg
jge
sub
mov
dec
outsl
loopne
divl
mov
out
outsb
inc
add
mov
cwtl
jle
jo
dec
lock
inc
cmpsl
jecxz
mov
jp
test
push
test
add
dec
sub
mov
mov
fcoml
mov
mov
std
and
decb
fwait
shrb
stos
je
dec
cmp
pop
inc
pusha
mov
inc
fdivr
and
hlt
cwtl
les
in
xor
push
loope
nop
sbb
push
mov
inc
dec
dec
add
inc
jecxz
cmpsb
push
mov
or
imul
stc
orl
and
mov
lods
push
xor
shlb
jecxz
or
push
pop
repnz
daa
mov
jae
imul
jg
cmpsb
pushf
movsl
fistps
rcll
aad
jns
or
std
pop
lret
inc
push
inc
nop
push
mov
add
xor
adc
fisttpl
ds
add
mov
stos
out
fcompl
cmpsl
aas
repnz
movsl
jl
inc
mov
notb
mov
notb
scas
push
cmp
lods
sbb
pop
test
mov
mov
pop
test
lock
mov
cld
and
xchg
add
cmp
cld
mov
inc
mov
jp
arpl
lds
js
sbb
pop
xor
push
es
lahf
sbb
push
lret
mov
xacquire
xorl
jge
scas
push
ret
dec
dec
adc
dec
xor
or
sbbb
mov
test
add
adc
lock
or
push
cmp
dec
aaa
scas
xchg
std
rcll
insl
andb
mov
fsub
rcrl
adc
mov
mov
arpl
adc
xchg
dec
pushf
jmp
mov
and
add
jae
and
jmp
cwtl
push
pop
or
aam
shrb
pushf
std
outsl
adc
sbb
std
aaa
adc
and
mov
push
fmuls
mov
inc
ja
xchg
and
pop
lds
aaa
arpl
xchg
sti
pop
loopne
aad
fbstp
mov
pop
sbb
fwait
sub
sub
clc
jo
xchg
cmc
inc
adc
stos
dec
popf
dec
ret
sub
jg
lahf
daa
sub
inc
mov
mov
push
insb
test
loop
dec
scas
scas
sub
mov
loop
ficomps
pop
pop
cmp
add
js
jmp
add
clc
xchg
cli
pop
push
pop
push
insb
daa
push
mov
push
aad
int
push
addr16
mov
addr16
jmp
inc
cmp
call
inc
push
jae
mov
mov
clc
jo
loope
fs
inc
mov
jmp
repnz
xor
mov
jg
fidivrs
sub
xchg
subl
inc
xorl
xorl
lods
loopne
pushf
lds
fnstsw
icebp
notb
xchg
add
fiaddl
or
or
outsl
mov
cmp
imul
loop
inc
mov
in
cmc
xchg
outsb
and
mov
push
insl
loope
cmpsb
or
lock
lods
push
jnp
decl
icebp
es
push
nop
or
mov
dec
push
xchg
fbstp
jl
mov
cmpsl
sub
sbb
jmp
mov
int3
or
aad
xchg
mov
nop
cmp
test
stos
popa
and
or
mov
ljmp
shlb
jno
dec
sub
mov
loope
call
inc
fwait
out
inc
pop
stos
adc
mov
incl
jno
outsb
sub
sti
mov
jb
sub
lock
lahf
pushf
scas
xlat
outsb
test
call
mov
and
xchg
loop
fcmovbe
or
test
jno
jge
sbb
sbb
adc
jl
add
clc
jg
mov
addr16
fildll
aad
push
imul
mov
lods
push
fidivs
adc
mov
stos
add
scas
mov
decl
mov
ss
xchg
xchg
push
cmp
mov
aad
add
add
outsl
lds
or
jge
iret
out
cmpsl
sbb
jg
mov
xor
push
add
enter
inc
push
fbstp
movsl
call
xchg
xchg
ljmp
xchg
adc
or
add
dec
fnsave
jne
xor
mov
dec
inc
mov
xchg
pop
fcomp
pop
stc
xchg
xchg
dec
xor
jbe
push
cs
inc
mov
or
xchg
sub
imul
push
add
cmp
mov
incb
lods
lods
shlb
cmp
pop
add
in
mov
mov
adc
dec
xchg
cmpsl
mov
outsb
or
mov
in
notl
cli
mov
cwtl
mov
jmp
pop
fistpll
pushf
popf
repz
mov
andb
call
sahf
jo
or
push
loopne
idivl
lds
mov
inc
pop
arpl
gs
pushl
or
and
mov
shl
clc
icebp
decb
ljmp
aas
add
inc
add
aad
imul
jp
add
or
iret
ljmp
xor
pop
adc
jo
out
xchg
xchg
xor
push
mov
push
cmc
dec
cmp
testb
mulb
mov
mov
outsl
inc
mov
out
imul
dec
cmp
mov
std
cmpsl
ds
dec
rcrb
mov
sti
jle
stos
pop
in
and
stc
mov
or
jo
scas
in
or
fs
sub
pop
imul
jle
xlat
je
cld
fyl2xp1
xor
xchg
scas
outsl
in
sub
repz
fwait
leave
jmp
dec
xor
out
movsl
fwait
or
adc
scas
mov
sub
sub
stos
bound
das
xor
jmp
test
ss
fdivrl
movsl
fdivs
push
inc
ds
dec
cld
in
shr
push
inc
sub
mov
xor
in
jge
sbb
xchg
jbe
push
outsl
decb
jg
adc
dec
or
xor
push
xor
ds
xchg
xlat
std
js
sbb
test
mov
sub
ret
mov
adc
sub
adc
xchg
mov
sub
jne
and
jg
std
pop
add
xchg
cmpl
arpl
jmp
stc
mov
ljmp
popa
lcall
jg
andl
inc
lea
add
sub
das
rorb
ss
roll
jge
add
jo
clc
sbb
jb
aas
in
movsl
mov
mov
rcr
inc
pop
jmp
push
mov
mov
cs
enter
loop
inc
fildl
jmp
test
sti
movsb
push
js
mov
notb
cld
add
xchg
or
jno
or
mov
mov
shll
mov
dec
and
push
aam
jl
movsl
arpl
loop
mov
sub
xor
adc
icebp
cmpsl
pop
pusha
add
lcall
cld
out
call
shl
inc
mov
ret
inc
movsb
cmpsl
in
dec
xchg
das
mov
mov
pop
mov
mov
push
adc
ffreep
cs
push
test
cmp
js
out
mov
in
add
mov
inc
xor
fnsave
push
push
in
mov
xor
cltd
shl
push
bound
data16
fcomip
cmpl
push
and
push
mov
inc
jge
mov
sub
mov
call
mov
jne
push
lea
mov
mov
leave
cmp
mulb
push
inc
cmp
push
mov
dec
or
xchg
and
lods
pop
outsl
or
jmp
pop
dec
out
jl
xchg
enter
xor
fwait
stos
or
jnp
sti
scas
pusha
add
fmull
add
lock
movsl
xchg
inc
testl
push
cmpsb
sbb
push
ljmp
mov
mov
mov
lahf
sbb
add
push
inc
jbe
test
leave
std
fcmovnu
popf
or
cmp
add
test
lods
lcall
pop
jae
jle
adc
movsb
test
push
mov
pop
adc
jo
cs
aaa
xor
xor
xchg
push
jg
dec
aad
cmpl
ss
call
mov
push
cmp
xchg
cmc
and
jne
aas
js
cmpsb
sbb
xchg
mov
push
icebp
mov
mov
cmpsb
pop
fidivrs
push
arpl
pusha
push
xlat
xchg
nop
push
cli
cli
cs
stos
fsubrs
sub
sbb
loopne
inc
repnz
jae
adc
ljmp
cmp
mov
insb
xchg
in
push
insb
sarb
loope
icebp
lea
cmp
mov
in
sbb
push
add
push
ljmp
or
repnz
push
xchg
sbb
dec
jns
mov
aaa
jl
and
int3
sahf
adc
cmp
mov
xchg
or
or
pushf
adc
rorl
icebp
test
jbe
jns
inc
jge
cld
lds
pop
fistpll
inc
pop
sbb
faddl
enter
fistpll
adc
mov
ds
cld
pop
jle
mov
fsubrl
push
mov
out
jae
and
test
std
out
das
in
jae
jle
call
scas
clc
movsl
mov
lods
in
jmp
pop
addr16
mov
adc
lds
and
jecxz
xchg
in
push
add
out
ficompl
inc
jle
clc
ret
in
aaa
jg
js
mov
jns
fs
pop
jl
js
ss
push
imul
cld
adc
mov
in
sbb
dec
das
mov
mov
push
ret
or
dec
push
addb
hlt
mov
mov
xchg
mov
jne
stos
in
repnz
xchg
mov
cmp
dec
jge
xchg
sahf
sbb
inc
cmp
mov
adc
es
test
imul
mov
in
jns
test
pop
mov
scas
mov
lret
test
jne
stc
loopne
clc
or
and
aam
push
pop
sub
insb
or
je
jbe
mov
jmp
xor
lds
cwtl
loope
mov
cmpsb
fldl
jecxz
xor
sbb
jg
out
or
addl
and
ds
sti
pop
ror
das
nop
pop
push
push
cld
ds
ds
dec
fcmovbe
test
aam
or
shrl
loopne
sbb
fstps
cmpsb
mov
test
and
add
or
pop
jle
mov
out
lret
cmp
add
imul
jp
out
sbb
loopne
jge
or
mov
pushf
das
pop
mov
xor
in
push
fiaddl
dec
mov
pop
jmp
add
mulb
xor
gs
insl
outsl
addr16
lea
nop
mov
jns
mov
mov
aaa
popa
cmpsl
or
sub
cwtl
test
je
push
das
lret
nop
js
ficoml
add
inc
cmp
adc
cs
adc
push
xchg
loope
test
leave
std
cmp
add
push
loopne
popf
and
and
ret
pop
enter
dec
rorb
jo
enter
out
jo
inc
nop
jle
imul
out
and
cmpsb
pop
clc
gs
fnstenv
add
sbb
inc
jmp
lock
lea
int3
cmp
add
loope
in
out
mov
and
xorb
ljmp
xchg
push
jnp,pt
fildll
sub
ja
mov
fstpt
notb
call
aaa
xchg
adc
or
ja
jmp
inc
shrl
cmp
popf
fsubrl
out
rcrb
iret
jg
push
xchg
inc
xchg
fldenv
cmp
lea
dec
shrb
lea
ret
mov
ret
sahf
inc
pushf
sbb
gs
cmpw
hlt
xor
std
leave
cmp
mov
cli
adc
pop
clc
out
test
insb
sub
xchg
daa
repz
ljmp
mov
mov
stos
jge
and
xchg
insl
andl
mov
lea
std
pop
bound
jp
fisttpll
xchg
mov
inc
push
in
cld
test
push
push
jne
mov
rcll
sbb
out
pop
orb
xchg
lock
lods
xchg
arpl
jl
mov
in
mov
lahf
or
or
pop
das
xor
push
clc
popa
xchg
sub
or
aad
imulb
mov
mov
loopne
fidivl
inc
push
imul
mov
pusha
ret
subl
mov
adc
movsb
insl
stc
aaa
or
lods
fldenv
cli
in
sub
fidivrs
or
insb
inc
aaa
mov
imul
ds
mov
jnp
jne
adc
in
cs
mov
fcoml
fs
mov
mov
or
loop
scas
daa
xor
dec
call
lods
data16
mov
push
mov
and
ret
repnz
push
mov
aas
fsts
jo
aas
inc
in
fsubs
sub
or
fwait
add
test
mov
test
fdivrs
and
es
push
fcoml
adc
sub
or
inc
or
mov
push
pop
sti
xchg
sbb
les
adc
push
mov
lock
adc
test
pop
lods
mov
stc
push
mov
and
js
add
imul
mov
dec
xchg
push
es
cmp
adcl
aas
js
out
sub
jg
or
aad
dec
xchg
add
mov
dec
imul
sbb
cld
out
cmp
add
and
pop
or
fbld
push
lods
jge
and
divb
push
gs
mov
sub
lret
xchg
setl
inc
movsb
xchg
pop
stos
dec
arpl
xchg
dec
fnstsw
jbe
mov
mov
push
shl
inc
lods
xorl
ss
jg
inc
clc
lcall
xchg
adc
ss
adc
clc
ljmp
adc
hlt
scas
add
sahf
add
mov
lods
js
add
adc
loope
dec
das
sub
pop
inc
mov
mov
andl
jle
imul
mov
sub
mov
addb
fwait
adc
inc
shrl
pop
cli
or
xor
jmp
lods
enter
insl
dec
mov
pop
bound
ljmp
jb
out
leave
dec
jno
test
push
imul
or
xlat
and
fbld
jmp
or
mov
daa
aaa
mov
xor
cmp
jle
cmc
sub
sbb
add
int
and
mov
je
in
and
push
lret
adc
lea
cmc
lea
xchg
cmovo
loope
sti
insl
out
les
xor
es
incl
mov
dec
push
insl
gs
and
push
mov
sub
pushw
ljmp
lret
inc
popf
inc
loopne
dec
mov
pop
jg
dec
jo
jg
or
dec
cld
xchg
stos
cmp
hlt
rol
or
aas
lea
fbstp
enter
mov
repz
jg
fistpl
pop
dec
add
dec
xor
stos
mov
jg
jl
icebp
and
xlat
and
sub
dec
test
in
outsb
mov
adc
imul
es
mov
decl
jge
push
mov
pop
clc
sbb
fcomip
dec
aaa
out
lea
mov
push
je
xchg
test
pop
inc
push
dec
sti
sbb
jbe
inc
sahf
or
pop
mov
cltd
inc
inc
cmpsb
stc
aas
fmuls
cli
incl
andb
jge
imul
or
adc
rcr
imul
mov
pop
or
push
dec
aad
rorl
dec
mov
push
jg
out
jp
push
add
mov
lcall
es
aad
ljmp
inc
add
lods
in
jns
inc
mov
loope
push
or
cmpsb
fimuls
les
xor
frstor
aam
inc
mov
icebp
rolb
mov
add
pop
sub
mov
push
sbb
dec
jl
call
clc
inc
outsl
sar
pop
jb
in
sub
roll
mov
jle
ljmp
jg
addb
ja
int
cld
add
sub
fisubl
inc
cmp
mov
pop
jb
orl
adc
sub
and
push
pop
cli
negl
aaa
xor
xor
mul
mov
cmpsl
or
insl
sub
es
addr16
pop
jne
loope
pop
lock
jb
andl
cs
mov
stos
cwtl
xor
ljmp
test
cs
jp
inc
xor
subb
cwtl
add
outsl
mov
les
test
ds
mov
push
jns
cmpsl
cmpb
jle
lods
sbb
dec
mov
seta
repz
shl
lret
hlt
pop
mov
push
pop
loop
mov
cmp
mov
outsl
adc
inc
inc
inc
inc
cwtl
jb
mov
sarl
mov
push
push
lea
in
add
mov
mov
push
cwtl
hlt
push
popf
icebp
jbe
ljmp
or
pop
jp
outsl
mov
mov
adc
push
ljmp
je
cld
push
mov
ljmp
mov
std
or
adc
sarl
mov
sub
icebp
push
inc
mov
mov
clc
push
or
mov
mov
jno
loop
or
xorl
sbb
sahf
cmc
out
jo
push
sbb
mov
xchg
out
mov
jno
insl
imulb
dec
imul
fsubl
xorb
mov
adc
mov
adc
outsl
outsl
pop
sbb
sbb
out
fwait
sub
outsl
fwait
and
cmpsl
ret
les
cmp
add
lret
mov
cmp
add
sub
sahf
stos
add
ret
mov
mov
fidivs
sub
cmp
test
sbb
outsl
cld
push
add
stos
cwtl
ret
mull
sbb
ds
sbb
adc
arpl
icebp
aam
and
lahf
mov
adc
ret
jge
aad
movl
sahf
outsl
aaa
cmc
aam
xlat
mov
inc
pop
push
andl
add
or
or
push
arpl
adc
inc
jne
xor
cld
pushl
push
or
int3
jns
rol
mov
mov
cli
scas
push
sub
sub
xor
mov
push
pop
pusha
sbb
das
mov
ficoml
inc
sbb
and
sbb
jecxz
xor
mov
popf
sub
cmp
push
cmp
daa
lcall
push
es
add
adc
adc
push
ss
rcrb
in
insl
outsb
push
push
testb
outsb
pusha
fimull
shll
xchg
fisttpl
dec
fiadds
in
mov
xchg
loope
push
inc
mov
sub
out
es
cmp
fidivrs
dec
sbb
movsl
ja
js
rorl
pushl
push
fdiv
mov
jecxz
je
lods
pop
cld
cmpsl
push
mov
fistl
sti
or
jnp
pop
adc
pop
sbb
dec
sbb
mov
or
movsl
ret
mov
sub
push
das
std
shrb
push
in
addr16
aaa
ljmp
sar
jne
out
jle
pop
or
pop
subl
ljmp
add
repnz
and
aam
loop
and
sbb
inc
arpl
mov
add
lret
das
subl
push
in
ret
mov
loopne
add
dec
xchg
arpl
xchg
add
jmp
sbb
cli
cmp
push
js
or
in
cli
jmp
adc
mov
dec
add
or
adc
loopne
scas
daa
sub
insb
sbb
fisttps
ficomps
jle
insb
xchg
ret
out
leave
mov
jg
pushf
movsl
stos
bound
enter
sub
inc
adc
in
or
xor
insb
push
jecxz
push
fsubrl
cli
and
mov
push
pop
jp
scas
pop
rclb
ds
xchg
push
mov
std
jp
int3
inc
aad
and
adc
inc
fnsave
jno
aam
inc
inc
mov
cld
jle
lock
outsl
inc
aaa
inc
mov
push
popa
jg
in
push
pop
call
scas
xor
fists
in
enter
inc
jb
ficoml
mov
jecxz
push
test
push
cmp
rcll
inc
cmp
mov
or
jl
mov
xchg
leave
daa
iret
push
dec
ljmp
call
mov
lock
xor
les
inc
push
jbe
outsb
rorb
or
pop
testl
iret
xchg
test
push
push
push
xchg
mov
jbe
pop
jg
cli
sub
sub
loopne
data16
cmp
leave
decb
mov
push
adc
out
rcll
sbb
out
pop
loopne
fdivrs
je
add
lret
pop
add
test
dec
loopne
fisubrl
push
outsl
xchg
stos
dec
mov
pop
mov
xor
loopne
fdivr
in
jp
mov
cmp
pusha
fldcw
mov
jecxz
je
fwait
mov
pop
lock
testl
insb
sbb
imul
sub
mov
cmp
jmp
in
and
xorl
insb
popa
or
clc
and
xchg
sahf
addr16
pop
mov
mov
mov
inc
mov
int
sarl
aaa
and
jb
adc
daa
icebp
lods
enter
fcmovu
clc
enter
jle
ljmp
mov
dec
fchs
jecxz
jbe
and
ss
addb
andl
jecxz
lahf
add
mov
cwtl
mov
xchg
out
jns
push
pop
push
loope
pop
sub
inc
popf
push
mov
xchg
mov
call
add
xchg
mov
shrb
add
xchg
mov
dec
inc
cmc
ret
xchg
pusha
and
pop
ret
sbb
mov
pop
push
push
mov
xchg
jbe
mov
dec
add
movsb
ss
lcall
push
hlt
mov
xchg
push
xchg
cltd
cmp
aaa
lods
xchg
mov
pslld
jnp
jnp
rcl
and
jne
idiv
jae
sbb
inc
jge
mov
fwait
and
js
adc
in
add
sub
cld
jmp
inc
in
mov
arpl
test
jbe
inc
or
getsec
outsl
dec
jl
lea
cmpsb
movsl
add
addl
xlat
xor
fdivrs
mov
jecxz
sbb
jp
and
lds
xchg
icebp
into
js
mov
test
or
dec
fidivrs
pop
inc
sub
sbb
cmp
inc
cmp
sub
pop
cli
xchg
pop
pushf
daa
sbb
jnp
outsb
in
inc
shr
pop
add
lds
aad
in
loopne
add
adc
xchg
push
add
outsl
das
mov
xchg
push
xor
cmp
in
sbb
aam
mov
and
lahf
loopne
hlt
stos
xchg
mov
lea
mov
mov
rol
insl
out
cmp
popa
ret
lods
fwait
pop
cmp
ljmp
and
mov
adcb
push
jae
cs
mov
push
test
rcr
inc
jae
mov
aad
aad
sti
cmp
sbb
jecxz
lea
push
mov
mov
xchg
jb
mov
inc
lock
pop
xchg
inc
jp
xchg
andb
outsb
cmp
push
hlt
adc
movsl
mov
jmp
pop
jl
sub
sub
pop
test
movhps
dec
jle
cmp
ds
lods
and
xor
sbb
pop
fwait
sbb
cltd
mov
dec
push
xor
loope
push
pop
mov
mov
jmp
gs
pop
push
stos
inc
push
in
mov
adc
fidivrs
mov
jbe
jbe
subl
or
loopne
cmc
mov
loop
testb
in
inc
into
mov
mov
sub
pop
and
mov
push
scas
add
xchg
lret
push
and
sub
lods
in
ret
loop
movsb
in
ret
adc
jl
cs
shrb
jmp
fadds
bound
fbld
sbb
test
mov
or
dec
outsl
les
loope
sub
and
sbb
ja
das
dec
in
lret
cs
decb
mov
jne
cli
insl
scas
or
cmpsl
movsb
mov
sti
shrb
pushf
jb
sbb
lret
xor
icebp
repz
lret
test
es
and
push
inc
add
aaa
sar
pop
test
or
cmp
xor
lret
ret
sub
movsl
in
sbb
les
mov
ffree
fistpll
add
xorl
test
mov
outsl
pop
pushf
aas
int
adc
nop
mov
jmp
inc
aas
pushf
mov
das
xchg
xlat
mov
divl
adc
add
lods
outsb
icebp
sbb
mov
lods
enter
mov
cli
sub
shll
or
orl
dec
pop
test
lret
inc
test
jbe
call
mov
pop
push
shl
xor
dec
int
inc
in
decl
test
iret
mov
outsb
xchg
pop
mov
pop
aaa
dec
sarb
pop
lret
dec
aad
sbb
push
xchg
movsl
das
jge
test
xor
xchg
or
or
outsl
std
jmp
ret
clc
lock
movsb
cli
mov
pop
mov
mov
jg
jg
add
fidivrl
jp
xchg
fldenv
xchg
mov
insl
add
jecxz
int
cmp
mov
testb
pop
bound
repz
dec
pop
inc
push
rcrb
pop
dec
cs
pop
lcall
cld
in
ret
or
sbb
push
into
and
push
push
decl
xor
sbb
and
cmp
sbb
inc
sbb
lcall
push
into
inc
jmp
jns
lock
pusha
push
call
in
test
cmpsl
cld
sbb
adc
iret
sahf
test
mov
daa
sbbl
rcrb
loope
bound
insl
sbb
pushf
stos
pop
outsb
pop
mov
mov
add
loope
out
in
ljmp
daa
push
pop
flds
sub
aam
loopne
roll
jb
mov
mov
in
repz
mov
or
mov
xor
sub
or
repz
je
jne
push
inc
dec
or
pop
mov
pop
pop
iret
mov
mov
pop
inc
xchg
sbb
dec
xchg
and
loope
jbe
jo
data16
and
push
mov
adc
rcll
dec
sub
xchg
mov
in
negb
add
jo
icebp
push
mov
lret
shlb
aaa
or
pop
test
inc
or
aam
and
aam
adc
mov
test
sbb
push
es
cmc
out
ficoml
jmp
nop
je
jecxz
adc
xor
xor
inc
push
lahf
adc
testb
mov
filds
enter
rolb
mov
int3
sbb
and
xorl
or
pop
jge
movsl
xchg
or
mov
mov
loope
adc
xor
pop
ret
sbb
mov
push
ljmp
pop
movsb
xor
push
test
inc
stc
dec
jmp
decl
aas
dec
call
lret
dec
cmpsb
jle
js
jmp
outsl
out
push
jg
push
leave
inc
sub
mov
sub
sbb
subb
cmc
dec
xor
or
xchg
test
movsl
ja
sti
data16
and
js
clc
cwtl
int3
cmc
mov
mov
cmp
dec
or
inc
daa
stos
pop
call
bound
int
out
fiaddl
das
cld
pop
mov
hlt
xchg
xor
sub
es
call
lock
outsb
loopne
sti
aad
jg
adc
sub
into
mov
fdiv
mov
cs
call
push
lock
popf
gs
div
mov
call
pop
pushl
mov
lods
dec
jp
les
jmp
aaa
daa
les
and
inc
pop
inc
imul
es
pop
xor
pushf
sarl
mov
inc
fnsave
push
fcoml
jnp
xchg
jge
jle
mov
push
mov
jl
fbstp
xchg
sbb
sbb
jns
icebp
inc
pop
cli
aas
push
jb
xor
stos
sub
movsb
pushf
push
mov
loop
insl
imul
lea
mov
fmuls
lahf
movsb
mov
push
and
ljmp
in
mov
push
cmpsl
pop
mov
rcll
mov
fstpt
outsl
mov
jne
std
or
push
jge
sub
ds
fsubrs
ss
xchg
cltd
hlt
dec
add
inc
sub
arpl
decb
mov
jae
cmp
add
xchg
movsb
popf
test
jle
incl
mov
sbb
aam
inc
out
push
push
sub
int3
and
rol
test
inc
or
das
lock
mov
push
mov
aad
add
pop
pop
insl
movsb
rclb
ret
inc
mov
jbe
mov
push
outsl
mov
das
cmp
test
and
xchg
cld
test
push
mov
popa
or
fildl
fwait
leave
sbb
sti
pop
sub
rcl
sar
adc
loop
xchg
in
ret
imul
mov
add
mov
sbb
les
xor
jno
inc
sbb
and
push
fisubs
xchg
ss
cmpsb
sub
mov
adc
lcall
mov
fistpll
scas
subb
add
ljmp
pop
and
das
repnz
ret
in
imul
adc
dec
fbstp
stos
jge
cmpsl
ret
jae
mov
mull
stc
dec
xlat
das
xor
adc
cmc
jg
sbb
sub
inc
outsb
and
adc
in
mov
add
loop
out
jg
and
cmp
insl
add
ja
xorb
add
rcll
mov
cmc
test
cmc
sbb
mov
mov
and
jg
jne
dec
loope
and
decl
mov
mov
and
dec
call
xchg
fisubs
iret
imul
adc
cmp
clc
inc
loope
adc
movsb
xor
mov
subl
xor
push
pop
xor
rolb
maxps
xor
push
push
enter
and
pop
xor
xchg
dec
ret
mov
jecxz
stc
clc
add
pushl
push
cmp
jg
call
sub
add
add
pop
xchg
daa
gs
fstpt
arpl
das
xchg
xchg
clc
nop
pop
out
sub
aad
pop
inc
in
movsl
xchg
inc
xor
movsb
add
fcmovnbe
or
mov
cmpsb
cmc
push
push
pop
call
popf
daa
pusha
aaa
lcall
inc
les
fwait
test
and
adcb
pop
pop
mov
outsl
arpl
aam
sub
outsl
cltd
xchg
and
test
pop
cmp
rolb
fnstenv
and
add
js
adc
xchg
jmp
mov
in
push
nop
push
fsts
mov
or
gs
fisubs
loopne
inc
or
or
lods
or
cmp
xchg
xor
sahf
rolb
mov
pop
inc
jmp
mov
aaa
push
adc
mov
push
inc
in
sub
pop
ljmp
push
repnz
movsb
scas
or
mov
xchg
cmp
test
adc
adc
movsl
jae
and
jle
out
mov
dec
lds
add
or
and
sbb
adc
rolb
push
repz
mov
sub
jae
ret
mov
pop
inc
int
add
aaa
mov
lods
mov
mov
cmp
in
outsl
inc
pop
out
and
inc
mov
out
adc
fimuls
sbb
pop
out
fiaddl
sub
xchg
clc
or
jne,pn
cmp
subb
sbb
ljmp
clc
jnp
stc
pushf
lcall
decl
pushf
jno
prefetchwt1
or
outsl
or
mov
jmp
nop
leave
add
jl
pop
out
jl
insb
push
push
pop
sbb
rcrb
cmp
xchg
das
in
and
je
xchg
cmp
add
mov
cmp
lcall
fbstp
cld
mov
cmpl
sub
mov
lret
jmp
dec
aas
push
cmc
sbb
sbb
jecxz
add
clc
rorb
adc
jge
pop
inc
mov
mov
mov
insl
xchg
and
mov
ss
cmc
idivb
xorb
jge
mov
lods
insb
mov
dec
fimull
and
into
pop
or
sub
dec
mov
das
push
fisttpl
mov
dec
dec
and
adc
ds
mov
jbe
mov
pop
aaa
push
cmpl
lcall
sub
lods
add
sub
push
dec
xor
out
xor
jmp
cmp
inc
and
push
jo
adc
ss
mov
jp
je
pop
incb
dec
ret
sbb
cmp
pop
sub
mov
cmp
or
sbb
jmp
ficompl
mov
dec
test
jne
shr
jo,pn
bound
das
adc
and
jbe
mov
addl
jl
jns
outsl
mov
jo
adc
scas
fildl
push
les
test
clc
xchg
divl
hlt
movsl
adc
mov
pusha
inc
fistl
pop
andb
fbld
sahf
movsl
sbb
fcomi
push
push
xor
dec
dec
and
xor
shl
mov
xor
inc
mov
pop
outsb
add
sub
sti
outsl
scas
xor
mov
lea
pop
xchg
das
push
iret
mov
or
mov
rcrl
cli
or
test
and
mov
mov
cmp
rolb
bound
inc
or
call
movsb
pusha
scas
das
mov
ja
xchg
pop
repnz
xchg
je
aad
fiaddl
cmp
pop
jmp
mov
sub
cli
jo
addr16
xor
push
push
mov
pop
and
sbb
sti
xlat
pop
jbe
pop
test
in
stos
push
stc
nop
xor
push
stos
fidivs
xor
sti
addr16
cld
out
call
adc
mov
decl
aaa
mov
lret
xor
cwtl
pop
jmp
mov
adc
pop
adc
adc
inc
imul
push
call
push
and
mov
daa
fdivs
stos
push
push
xor
add
inc
xchg
xor
inc
adc
cmpsb
out
and
enter
lret
fbld
sub
mov
lcall
pop
push
jne
mov
cltd
aam
or
adcl
and
test
jge
dec
xchg
cmp
cs
add
jb
addl
mov
test
and
mov
inc
mov
xchg
mov
cmp
sbb
xchg
repnz
push
hlt
out
test
ss
out
dec
cld
and
cmp
pushl
pop
push
jbe
adc
sbb
fstpt
sbb
scas
call
aas
in
xlat
add
cmpsb
xchg
push
into
or
jg
jl
sti
in
gs
mov
and
ja
inc
aam
cmpsl
mov
push
movsb
mov
lahf
rcll
and
jnp
sub
lods
insl
push
jl
popa
dec
adc
or
mov
js
adc
sarb
inc
nop
rolb
fildl
cli
jg
inc
fwait
jecxz
sbb
lret
sbbl
cs
or
mov
and
fdivrs
sbb
call
push
sub
dec
arpl
xchg
jp
ret
movsl
jg
xor
adc
ret
scas
idivb
push
adc
test
loopne
testl
jecxz
jge
je,pn
iret
inc
cli
jge
push
dec
mov
mov
mov
push
sub
test
fwait
loopne
insb
mov
rcl
or
sbb
jge
jns
ds
ja
cltd
mov
add
mov
cwtl
push
jns
lods
xlat
fcmovnu
xchg
or
mov
cmp
pop
mov
sub
fistl
or
outsb
cltd
int
fsts
setnp
pop
xor
es
dec
sbb
mov
insl
cli
fisubl
insb
sub
pushf
cltd
jne
lods
pop
xlat
add
lds
imul
loop
fists
inc
inc
in
ljmp
push
loopw
mov
add
stos
sbb
fidivrs
or
sbb
leave
rolb
xor
cli
inc
mov
dec
stc
mov
jmp
jg
test
sub
imul
or
pusha
fnstenv
testb
push
add
ds
pop
les
inc
push
adc
enter
mov
push
aas
lahf
scas
cmp
ja
sbb
and
jbe
xor
lock
rorb
cld
outsl
aaa
loopne
nop
cmp
loopne
mov
jb
sub
daa
add
add
repnz
fdivrs
push
hlt
xchg
xor
lods
movsl
pop
pop
add
aam
aas
jae
jecxz
push
andb
or
sbb
inc
and
es
mov
push
sbb
mov
mov
les
int3
mov
mov
aaa
sbb
and
add
mov
jo
mov
cmp
fbstp
inc
push
xchg
push
or
incb
fmull
aam
in
pop
mov
and
das
rol
dec
pushf
and
mov
pop
aad
mov
push
inc
adc
mov
mov
fists
ja
orb
scas
xlat
pop
rep
inc
inc
mov
inc
pop
or
scas
adc
mov
adc
out
jo
enter
stos
push
iret
repnz
mov
mov
xchg
stc
jne
cmp
outsb
sarb
sub
or
icebp
call
outsl
mov
call
and
cld
aaa
mov
les
nop
sbb
push
popa
mov
inc
dec
or
cmp
sbb
nop
sbb
pusha
aad
mov
mov
xor
js
and
cmc
xchg
push
jbe
cli
es
imul
adc
mov
and
loop
aad
push
push
adc
sub
hlt
in
sbb
popa
adc
and
aam
es
inc
mov
xchg
cli
inc
dec
xor
arpl
and
orl
popf
mov
cli
test
mov
js
sub
inc
in
inc
shll
fs
outsl
cmp
mov
sub
pop
orb
out
ds
xor
jb
in
or
imul
filds
cmpsb
mov
mov
mov
push
mov
inc
pop
push
cltd
bound
sbb
adc
leave
bound
loopne
mov
leave
mov
nop
jmp
insl
movsl
add
add
and
push
mov
xor
push
jle
or
inc
addl
test
nop
test
andl
push
dec
aaa
and
in
and
jo
mov
jb
push
into
and
lods
jg
mov
xor
fs
push
out
xchg
inc
mov
das
and
in
divl
fists
or
mov
int
sbb
mov
dec
xchg
icebp
bound
lcall
dec
mov
inc
mov
jge
push
inc
pusha
mov
aam
jae
int3
shrb
mov
adc
out
std
pop
mov
xchg
fdivr
inc
es
and
das
insb
add
adc
jmp
popa
jecxz
xor
movsl
push
jge
xchg
aam
jge
lods
lock
jnp
idivl
sub
pop
lods
mov
inc
iret
aaa
jge
jmp
push
xlat
mov
incb
aad
mov
popf
sahf
jle
mov
xchg
lea
mov
and
pushf
loope
add
loop
aad
adc
pop
jbe
movsl
loop
clc
jo
mov
insl
mov
push
push
fistl
sub
fucom
ret
jb
lret
sub
fists
gs
pop
xor
xlat
arpl
addr16
decl
insl
in
jge
jp
sub
idivl
repz
idivb
or
sub
fsubrs
loop
mov
sub
sbb
xor
add
aaa
outsb
jl
clc
jo
mov
sarb
sarl
imulb
orb
enter
ret
sbb
ror
xor
sbb
mov
loopne
sbb
xor
rcrl
mov
add
mov
lds
cmc
pop
sub
add
or
pushf
pop
or
movsl
ret
rclb
aad
fisttps
or
inc
sbb
adc
cmc
mov
daa
mov
add
imul
or
jge
stos
push
mov
mov
cs
add
insl
mov
ljmp
and
sarb
ficomps
xchg
jno
dec
imul
inc
pop
sahf
fcoms
mov
jg
cs
loop
mov
jp
mov
lea
cmp
mov
mov
das
mov
out
jb
imul
mov
dec
inc
pop
lret
nop
cmp
jp
xchg
loop
std
outsl
mov
jae
xor
popa
rcrl
dec
decl
filds
addb
rcrl
or
loop
dec
ljmp
xor
adc
fidivs
dec
mov
aaa
dec
adc
test
jbe
cmc
aam
cs
sbbb
mov
adc
ja
xchg
xchg
stos
imul
testb
fnstsw
pop
pop
repnz
out
addr16
bound
pop
adc
add
or
or
dec
int
cmpsb
jb
icebp
js
rol
aaa
xor
push
dec
bnd
jg,pt
pop
call
mov
push
add
addr16
pop
mov
fdivrs
into
jecxz
inc
jnp
shlb
jl
jle
jmp
fildl
std
push
es
hlt
mov
jae
dec
lods
sbb
push
dec
sbb
jne
imul
ffree
pusha
or
into
or
repnz
clc
outsl
sub
xchg
and
fnstenv
ret
fisubrs
nop
mov
sbb
xor
sbb
cmp
dec
sbb
pop
sbb
hlt
mov
clc
jno
stc
add
adc
lret
or
out
in
fwait
and
dec
add
dec
lock
inc
xchg
mov
mov
jg
pop
movsl
adc
lea
cmp
mov
push
xchg
mov
inc
stc
ficompl
es
xchg
xchg
pusha
jbe
adc
dec
fistpl
ss
aam
jp
adc
or
fsts
rclb
sbb
movsl
outsb
insb
das
push
js
fmull
fildll
mov
out
mov
cli
push
pusha
loopne
popf
aam
cwtl
jmp
ja
push
shlb
sti
imul
add
roll
sbb
mov
jmp
jns
jg
adc
adc
or
pop
or
add
insl
pop
fildll
or
movsl
rorb
mov
sub
sahf
divl
pop
xor
mov
cs
sbb
cwtl
vmwrite
push
mov
xor
inc
mov
inc
sbb
push
scas
mov
xchg
pop
pop
in
push
les
fcom
adc
fninit
mov
and
mov
xchg
inc
mov
xchg
je
cmp
hlt
imul
xor
dec
adc
cmp
out
fcmovb
in
push
mov
pop
lcall
mov
jne
sub
adc
in
movsl
mov
addr16
in
xchg
je
mov
cmpsb
fbstp
mov
aad
adc
outsl
dec
xlat
push
push
xchg
loope
gs
addr16
rcrl
adc
push
xchg
xchg
pop
leave
cmp
lock
jle
enter
test
jle
mov
int3
or
leave
popf
shlb
data16
sub
movsl
fmuls
adc
out
jnp
sub
testb
cwtl
mov
mov
cmp
push
dec
icebp
aas
roll
and
dec
jg
movsl
push
push
sub
adc
jo
cmp
pusha
cmp
pop
push
inc
cld
lods
sbb
xor
mov
and
add
out
cmp
movnti
mov
sbb
lods
cli
fwait
js
add
popa
cmpb
lods
pop
leave
mov
or
xchg
test
inc
test
xor
dec
jbe
mov
call
out
outsl
xchg
adc
push
mov
clc
or
arpl
lods
push
mov
scas
inc
cli
fidivs
fiadds
fcomps
mov
pop
hlt
push
stos
call
push
add
sub
jmp
nop
cmp
sarl
lret
sbb
cltd
pop
pop
scas
les
ficoms
pop
mov
movb
call
jbe
mov
insl
push
arpl
dec
mov
insl
mov
pop
sti
xchg
repnz
test
sbbl
inc
ljmp
xor
or
xchg
mov
hlt
mov
push
movsl
inc
mov
xchg
or
mov
pop
sub
or
or
and
call
out
incl
cltd
jnp
outsl
jge
sub
inc
sbb
ljmp
sbb
adc
fdivl
rcr
loopne
sbb
xor
enter
xchg
aaa
pop
cld
xchg
pop
mov
jl
aad
pusha
dec
outsl
in
clc
add
pop
push
push
sub
mov
in
dec
fldt
imul
pop
mov
enter
add
adc
dec
and
sbb
dec
dec
out
sub
fistpl
lods
adc
push
pop
lods
cmp
jnp
mulb
push
pop
call
jg
popf
jae
sub
mov
test
lcall
ret
scas
dec
adc
outsl
xchg
repnz
and
gs
cwtl
and
aam
and
sbb
test
sub
ljmp
inc
dec
adc
sbb
mov
xlat
sub
into
inc
sbb
stos
xor
addl
call
mov
push
je
cmp
mov
dec
pushl
adc
loop
das
mov
aam
adc
packuswb
movsl
mov
sbb
mov
pop
pop
lcall
rorb
xor
test
sbb
jmp
sbb
outsl
pop
fs
idivb
and
test
lods
mov
cmp
hlt
cwtl
sbb
lret
push
sti
mov
insl
sbb
xchg
jns
mov
test
rcl
or
jno
mov
mov
add
int
mov
inc
out
sar
cmp
orl
filds
xchg
cmpsb
dec
cmpsb
push
pop
dec
cs
notb
pop
in
pop
out
cli
or
pop
adc
jp
mov
push
cmpsb
xchg
cwtl
cli
ret
push
inc
mov
jmp
or
xlat
loope
jmp
outsl
sub
repz
mov
inc
in
dec
fnstsw
mov
out
ret
sti
fbstp
out
push
rcl
daa
loop
and
ljmp
int3
push
mov
cmpsl
sbb
int
rcrb
jp
add
cwtl
jne
add
mov
test
adc
aam
mov
out
xchg
mov
mov
sbb
jl
movsb
adc
xchg
bound
loop
in
pop
xor
das
or
mov
sub
inc
mov
xchg
out
or
cltd
dec
mov
es
xor
lods
ljmp
mov
jg
lds
dec
dec
test
push
sub
insl
fldt
xor
lock
popa
sub
or
aam
inc
xchg
testl
or
push
or
sbb
lret
scas
rsqrtps
adc
xor
pop
lea
out
scas
sub
cli
aaa
inc
push
popf
mov
push
and
loop
mov
insb
adc
nop
mov
clc
mov
and
pop
cmp
mov
cli
decl
dec
push
cmp
push
int
or
jecxz
fistps
imul
aas
lret
fisttpl
add
cmp
jmp
pop
inc
and
push
inc
jo
push
leave
jecxz
int
pop
lahf
jo
push
lods
ret
fidivrl
mov
xor
addr16
scas
sbb
mov
pop
aas
test
add
js
lahf
adc
add
cmpl
push
mov
sbb
or
sbb
mov
dec
jl
inc
les
and
decl
push
sbb
fisttpll
imul
test
or
cmp
sti
cmp
outsl
pop
std
jo
push
inc
shlb
cltd
push
hlt
push
mov
mov
sbb
lcall
xchg
fisubrs
clc
xor
fs
cmc
loope
divb
and
fsubr
add
jle
and
jo
mov
rcll
cmpsl
outsl
das
pop
cmp
jo
inc
lds
addr16
push
call
lret
std
xchg
or
add
test
arpl
jbe
push
pop
sub
pop
stos
mov
jge
cltd
in
and
mov
fwait
mov
pop
jbe
les
scas
aad
inc
cmp
js
sbb
add
xlat
jg
add
xlat
mov
ffreep
push
add
xor
inc
aad
out
adc
push
sbb
repz
in
filds
lcall
pop
lods
fsubs
jp
mov
xchg
cmp
dec
hlt
or
shr
test
jl
stos
jecxz
mov
jb
shrl
imul
pop
mov
call
loopne
pop
popf
pop
imul
xor
add
ljmp
je
daa
lods
int3
lds
icebp
repnz
and
adc
inc
add
inc
cmpsb
lock
jo
out
loop
jle
out
mov
cmp
aaa
inc
cwtl
dec
addb
loopne
fs
pop
mov
push
sub
clc
dec
das
fmull
fiaddl
cli
inc
jmp
outsl
and
mov
decb
mov
or
scas
sbb
or
adc
mov
push
int
in
mov
std
lds
push
enter
rcl
add
sbb
sub
rol
mov
jecxz
xor
je
cwtl
push
pop
mov
test
fs
mov
call
xchg
mov
pop
loope
mov
addr16
mov
outsb
add
cmp
adc
adc
jnp
mov
ret
jg
push
popf
call
xor
fwait
cmp
gs
inc
daa
js
xchg
adc
sarb
pusha
xchg
xchg
xchg
imul
xor
and
mov
pusha
sti
aaa
inc
dec
shlb
insb
sarb
int3
xchg
dec
int3
incb
sbb
stos
mov
dec
and
pop
mov
jb
in
mov
adc
pop
cmp
mov
or
xor
dec
xor
sti
dec
mov
push
out
in
mov
inc
insl
js
notl
cmp
cltd
or
sbb
push
xchg
add
ficoml
mov
lret
mov
in
insl
addb
ss
push
cld
call
cmp
test
out
fbstp
add
into
mov
dec
or
shrl
cli
lcall
sub
divb
addr16
mov
pop
pop
push
imul
aaa
sbb
imul
fildll
inc
enter
dec
xchg
mov
lret
fs
jl
adc
fnstenv
int
movsl
outsb
inc
cld
mov
dec
movsb
stos
mov
popf
mov
xor
xor
decl
mov
fdivrp
add
sarl
sahf
repz
cld
out
ja
mov
cld
ljmp
xchg
pop
pop
lret
or
arpl
fyl2xp1
and
xor
std
mov
sbb
loop
fisubrs
stos
xorl
popa
call
lock
mov
lret
ret
cmp
mov
call
sub
subl
cmp
push
pop
ljmp
jns
jecxz
bound
xor
jno
sar
loope
std
arpl
dec
rorl
mov
int
lahf
add
mov
ljmp
cld
sub
into
and
repnz
inc
cmpsl
test
testl
std
lret
adc
jne
test
out
xlat
dec
and
push
push
xchg
sti
mov
add
les
repz
inc
aaa
lcall
mov
outsl
mov
test
movsl
shlb
or
call
test
push
incl
divl
jns
adc
into
cmp
push
push
pushl
pop
sub
daa
push
pop
jg
cs
jne
push
pop
adc
lcall
lock
loope
clc
mov
sbb
jl
jno
mov
aaa
les
adc
dec
dec
loope
stc
mov
icebp
sbb
shlb
adcb
stos
push
outsb
or
rcrb
pop
ljmp
std
call
stos
lds
add
jg
xor
scas
stos
aam
pop
and
incl
mov
orb
push
mov
fisubl
xchg
xor
mov
repnz
rorl
imul
ljmp
hlt
add
pop
in
pop
sub
jge
xchg
mov
lcall
dec
pop
leave
fcoms
dec
sub
cmp
dec
pop
adc
std
icebp
mov
jae
cmp
scas
xor
mov
fdivrl
mov
jns
push
jg
mov
xor
mov
ja
push
es
cmc
cmc
call
cli
mov
subb
je
popf
filds
leave
pop
test
scas
sbb
mov
in
sub
or
outsl
mov
shll
mov
ljmp
pop
pop
jne
xor
and
dec
and
ja
dec
xchg
sub
jp
cs
and
sbb
push
pop
jp
jmp
pushl
dec
add
and
xor
pop
lahf
repz
fdivs
push
sahf
test
push
jecxz
mov
pop
fnsave
pop
push
fimuls
incl
push
outsl
push
insl
addr16
add
rclb
push
inc
punpckldq
jb
sbb
lret
inc
fs
jne
jmp
or
push
insb
mov
in
dec
enter
mov
test
mov
mov
pop
mov
mov
xchg
decl
jg
sub
and
in
lods
int3
cmp
sbb
jbe
sub
gs
icebp
push
inc
xor
xchg
xchg
inc
lods
shll
out
rorl
jp
pop
cmp
pushl
repz
ja
mov
or
fstp
sahf
cmp
sar
and
cmp
stos
lret
insb
add
mov
dec
decl
mov
stos
loop
mov
lods
fistl
mov
popf
xor
daa
insb
mov
jne
push
jge
sbb
int
mov
inc
mov
into
aaa
add
les
lock
lcall
add
clc
inc
and
mov
loopne
pop
ret
cmp
in
mov
fnstsw
inc
notl
sahf
push
ds
sahf
push
push
jg
sbb
push
movsl
aaa
js
inc
xchg
lcall
inc
xlat
jp
stos
imul
push
shl
out
out
mov
mov
mov
ffreep
das
jge
or
aas
rcl
adc
das
xor
jmp
mov
mov
movsl
mov
or
in
fsub
inc
dec
out
loop
inc
xchg
lods
ds
jg
into
outsl
js
xor
cmp
cmpsb
iret
fnstcw
test
test
ljmp
int3
pop
mov
mov
fdivs
sub
jg
cmp
mov
hlt
daa
or
inc
gs
push
gs
nop
xchg
andb
hlt
sarl
sbb
jae
xchg
pop
rol
pop
insl
cltd
inc
pop
xor
das
sbb
sbb
movswl
lods
sbb
leave
dec
mov
dec
in
jl
in
daa
xor
loopne
aam
cmp
lret
push
incl
push
ja
and
mov
jmp
push
inc
lock
cli
cmp
aam
pusha
call
je
add
mov
leave
js
repnz
jecxz
add
push
enter
sub
fstp
ljmp
cmc
xchg
lock
mov
mov
mov
daa
fildll
push
lret
into
stc
fiaddl
and
xchg
and
lcall
cli
xchg
dec
ret
cltd
push
ljmp
cltd
call
xor
out
decl
adc
lret
cli
add
push
pop
js
inc
dec
call
fsubs
mov
lcall
mov
in
jb
and
js
in
aam
pop
orb
fadds
pop
mov
lds
xchg
or
xor
loope
and
bound
loope
movsl
pop
sahf
jp
movsl
xor
test
test
addr16
pop
add
decl
ret
cmp
rcll
repnz
shr
sbb
rorb
pop
fisttpl
pop
push
incl
push
jmp
insl
cmp
hlt
xor
loopne
push
int
sbb
sahf
stc
into
push
es
inc
jmp
dec
xor
les
mov
sub
xchg
sar
cmp
mov
xchg
mov
scas
ss
push
sbb
jmp
jecxz
or
or
out
mulb
out
xchg
faddl
repnz
xchg
incl
push
mov
or
sub
lds
movl
ljmp
stos
push
stc
dec
sbb
fisttpll
mov
push
inc
fidivl
sarl
test
mov
sbb
and
pusha
push
sahf
jne
push
pop
dec
pop
ror
aaa
insl
xor
call
aas
dec
fisttpl
xchg
cltd
adc
in
cld
lds
movsl
dec
scas
sti
idiv
call
push
mov
cmpsb
push
pop
cld
pop
mov
popa
in
xchg
in
imul
stc
addr16
test
mov
decl
outsl
dec
add
rolb
sahf
add
out
ret
inc
jge
mov
pushl
or
ljmp
rclb
or
int
xchg
ret
fcoml
cmp
into
or
xchg
ja
jge
out
mov
inc
dec
int3
les
test
xchg
hlt
out
rorb
xor
in
sbb
incw
add
pop
pop
or
stc
jo
mov
sub
ret
ljmp
add
jae
mov
mov
mov
decl
cmp
insl
test
stc
shlb
mov
xchg
mov
cld
outsl
icebp
lcall
push
inc
subl
dec
out
mov
xor
nop
repnz
lcall
das
adc
ds
loop
je
sub
rorb
test
mov
add
jno
inc
imul
call
lds
dec
jg
pushl
mov
lock
cmp
aad
lods
or
mov
shrb
sbb
imul
or
or
push
jmp
addr16
daa
xrelease
pusha
fstl
icebp
jb
sbb
stos
push
mov
cmp
das
in
arpl
call
and
jmp
cwtl
adc
pop
fdivrl
repz
sbbb
adc
pop
ds
cld
add
mov
stc
icebp
imulb
jo
pop
addr16
mov
or
lcall
fsubrl
rclb
nop
psubusb
ds
mov
je
mov
ss
call
sbb
jle
or
push
inc
ret
sub
out
std
xchg
test
mov
incl
inc
push
jg
and
mov
mov
xor
lcall
adc
xchg
xchg
pusha
jo
or
cmp
je
daa
bound
scas
fisttpll
shl
sub
decl
ljmp
aad
cmp
test
pop
inc
cmp
lcall
call
xchg
sbb
sti
in
les
ret
add
dec
jbe
loop
lock
outsl
pop
loop
subb
xchg
adc
nop
and
mov
mov
loopne
mov
pop
addr16
loopne
incl
lret
jmp
icebp
cmpsl
sub
sub
jl
pop
addb
jns
sbb
mov
ljmp
es
mov
mov
or
movsl
aam
clc
mov
mov
cmp
cmp
mov
jae
or
push
push
insl
xchg
shr
adc
push
pushf
sbb
das
cld
incl
dec
mov
and
gs
push
js
addr16
ud0
sub
fisubs
xchg
incb
loope
mov
pushl
cmpsl
push
push
cmp
dec
cli
or
inc
adc
or
push
inc
insl
ret
mov
js
call
jl
inc
sbb
test
sub
jmp
insb
mov
inc
inc
sub
loopne
in
movl
fnstenv
aad
movsl
push
pushl
clc
push
out
cmpl
pop
lret
and
ljmp
sti
sbb
mov
jbe
xor
lahf
mov
ljmp
loope
out
pop
pop
mov
mov
dec
stos
js
pop
push
in
jae
inc
jmp
cmp
in
sahf
ds
les
call
mov
lea
push
xchg
or
adc
dec
jl
insl
push
mov
xchg
jmp
jmp
jno
cli
into
ljmp
test
cmp
leave
sbb
pop
pop
sbb
xlat
into
sub
cli
pushl
sbb
mov
mov
in
in
or
jno
adc
lret
mov
test
fiadds
int
dec
test
xlat
mov
jp
jbe
subb
das
icebp
loopne
fidivrl
in
dec
cli
add
fdivl
pop
push
push
cld
lcall
inc
jle
sti
out
fsubl
mov
clc
xor
jecxz
icebp
int
cmc
dec
inc
imul
lcall
and
cmc
xor
push
aad
pop
pushf
mov
pop
stos
jp
sti
ja
jge
iret
inc
jo
push
lods
xlat
jge
mov
addr16
and
pop
sbb
cmp
decl
insl
daa
fcos
popa
ljmp
or
push
push
push
dec
outsl
mov
loopne
dec
mov
lods
and
cmp
adc
scas
divl
decl
mov
pop
mov
mov
mov
cwtl
rcrb
jp
pushl
cli
in
in
inc
into
int3
adc
push
push
out
or
mov
ljmp
test
jb
in
xchg
jle
jno
push
xchg
out
hlt
pushl
lret
pop
xchg
mov
cmp
xor
scas
mov
ljmp
sub
popf
lret
int
push
lea
pop
inc
in
sub
and
mov
call
xchg
push
orb
stc
mov
dec
adc
outsl
sbb
mov
outsl
add
mov
lcall
dec
imul
addr16
inc
and
adc
scas
cli
push
lea
daa
jg
mov
mov
lret
ds
mov
add
push
or
cmp
fsubl
imul
lods
lcall
pop
mov
fisubrs
inc
add
pop
imul
lock
stos
roll
cmp
fnsave
sbb
int3
or
inc
jnp
xchg
filds
hlt
jmp
mov
out
inc
ror
xchg
push
hlt
nop
int3
rcrb
jmp
pop
ffree
ret
scas
shrl
sbbb
sub
mov
push
movsl
sbb
call
sub
sub
xchg
dec
rcrb
fdivrs
ljmp
cld
lret
fstl
sbbl
pusha
or
repnz
adc
jns
mov
push
test
movsl
xor
push
iret
mov
mov
mov
mov
decl
or
jl
pop
jge
pop
test
lods
jo
add
daa
icebp
aas
lods
push
pop
icebp
pop
call
cld
mov
adc
out
inc
lods
adc
mov
sub
jl
test
repnz
xor
aaa
lea
xchg
push
stos
loop
icebp
add
iret
mov
push
sub
addr16
add
sub
or
jg
and
scas
sahf
inc
mov
incl
vcvtsi2ss
cli
in
xchg
and
ret
xor
cld
jg
push
nop
mov
lret
xchg
fcmovnbe
insl
jl
jmp
mov
test
jp
jl
cmpsb
test
adc
pop
ficompl
mov
or
push
shrl
cmp
mov
mov
mov
mov
ljmp
xchg
jnp
inc
jo
sbb
mov
pusha
punpcklwd
or
inc
ljmp
push
jmp
in
pop
out
ss
lods
jp
add
outsb
xchg
mov
decl
cmpsl
or
lock
sub
ljmp
les
aad
or
mov
repz
dec
mov
cmc
jge
mov
mov
loopne
dec
movsl
jmp
aas
mov
or
push
mov
clc
incl
and
pop
mov
mov
cmp
outsl
xchg
cmp
loop
enter
pushf
repz
mov
cmp
jg
rcr
insb
repnz
sub
mov
mov
loopne
jnp,pt
mov
push
clc
lcall
xchg
ret
out
mov
fs
cs
call
cwtl
lret
and
cmpsb
jo
idivb
mov
stos
sbb
fs
bound
lock
jno
repnz
and
pop
adcl
jg
dec
pop
dec
js
out
xchg
test
cmpl
mov
push
je
ljmp
mov
loopne
dec
aad
cmp
sti
adc
mov
pushl
test
jns
push
pop
ret
je
add
push
call
lret
inc
popa
dec
aas
push
xchg
mov
lcall
repz
bound
jmp
inc
and
mov
mov
test
bound
stc
ret
ljmp
xchg
mov
sbb
out
cltd
sarb
ret
mov
inc
jecxz
ret
jg
mov
pop
push
aas
jp
cmc
adc
repnz
jbe
aad
push
clc
call
popa
cmp
cmp
test
adc
inc
adc
enter
leave
adc
fists
lret
out
xchg
add
push
in
jne
xchg
sub
call
pop
sub
mov
stos
cmp
jecxz
or
adc
pop
std
push
adc
les
cwtl
pop
in
xchg
xorb
sahf
ret
call
mov
rcr
xchg
lea
dec
popa
aam
sub
pop
popf
outsl
mov
mov
lret
pop
in
push
fnstcw
sbb
inc
out
jns
jl
cs
das
call
mov
add
incl
xor
jno
loop
inc
test
out
lock
aad
call
mov
cld
cmpsl
adc
mov
push
cld
jg
cld
lcall
and
mov
mov
push
in
cmp
std
jmp
fucom
in
outsl
pop
lahf
jp
mov
shrb
mov
dec
mov
movsl
mov
out
cmpsl
pop
xchg
test
sti
sbb
aad
cmp
ljmp
cmc
jp
push
add
aas
negb
int3
movsl
lods
arpl
inc
xorl
cmp
cmpsb
or
lcall
xor
ljmp
jae
cli
out
lcall
cmp
decl
jg
clc
push
inc
fidivrs
mov
test
jg
inc
mov
xor
cmp
cmp
lcall
and
mov
or
cmpsl
inc
ljmp
std
push
pop
lds
cmpsl
fcompl
loopne
call
mov
push
into
and
lcall
xor
rcrb
cwtl
loope
xor
xor
or
xchg
fcom
repnz
mov
xor
scas
inc
notl
pushf
xor
in
daa
incl
cmc
pop
jne
jae
sahf
xor
xchg
adc
call
ljmp
lret
insb
lcall
fidivrl
pop
and
fnstcw
mov
push
out
xchg
push
cmc
mov
hlt
lods
jb
jnp
pop
cmpsb
int3
mov
lcall
orl
cwtl
aas
lods
test
xchg
outsl
aas
or
xchg
rolb
daa
and
mov
add
cmp
aas
jp
mov
test
pop
aas
out
pushf
mov
fstpl
lea
pop
sub
pop
sub
sbb
sub
mov
mov
jp
das
mov
pop
mov
push
jg
pop
and
pop
jne,pt
push
ja
jmp
subb
adc
test
push
xorb
in
dec
or
call
xlat
inc
xor
cmp
jg
aad
fs
mul
add
test
sarl
daa
pop
pop
adc
ljmp
dec
xchg
push
jns
cmpsb
sbb
ljmp
ljmp
cmpsl
pop
testb
test
lcall
lds
mov
adc
push
fbstp
jmp
pop
sub
and
and
filds
sub
push
mov
fistl
std
and
pushl
push
daa
ss
mov
dec
fsubs
jno
je
mov
push
cmp
out
add
icebp
dec
sahf
push
mov
pop
and
mov
jns
ss
jmp
lret
sub
arpl
or
pop
in
cs
imul
incl
movsl
pop
push
pusha
ror
push
ficoms
sub
decl
rcll
lret
jg
lods
pop
mov
push
cmp
sub
cmc
cmpsb
sub
mov
jg
sbb
mov
push
cli
xchg
in
ss
pop
sub
cmp
or
stos
dec
fs
ror
mov
adc
or
mov
sbb
xchg
adc
xor
dec
je,pt
repz
lcall
std
out
cs
idiv
mov
ss
adc
add
cli
ret
xor
sbb
dec
jp
adc
cli
jmp
inc
sbb
xor
xchg
hlt
adc
fistps
hlt
lea
pop
into
xchg
lret
cli
popf
inc
push
cmp
lret
mov
push
jno
aam
int
je
cmc
jl
cmpsb
xorl
cmp
mov
sbbb
mov
xorb
imul
pop
inc
or
add
cli
pushl
xor
xchg
fdivr
pop
jge
lcall
lcall
call
out
sub
js
pop
xchg
and
inc
filds
add
or
adc
loopne
loope
inc
jmp
cmp
or
out
push
xchg
aas
roll
and
cmp
rcrl
adc
jp
and
lods
adc
adc
xor
mov
adc
mov
mov
mov
jmp
data16
ret
outsl
mov
call
jle
movsl
mov
movsl
push
daa
out
mov
dec
jge
mov
cwtl
xchg
cs
cmp
add
xor
fnstenv
imul
call
lods
push
and
and
pop
jne
mov
shll
incl
cmp
lods
pusha
lret
in
daa
xchg
cld
pop
cmc
mov
dec
imul
ds
int
in
clc
mov
sbb
das
or
ss
imul
xchg
pop
sbb
adc
es
das
cmc
pop
xor
inc
sbb
fcomps
add
mov
aam
cli
test
out
pusha
outsb
inc
adc
pushf
mov
incl
test
lcall
dec
dec
lods
fwait
movb
jg
std
and
dec
pop
dec
and
pmulhw
lods
roll
int3
adc
lcall
mov
fwait
shufps
add
aas
rcrb
and
jg
adc
sbb
jno
mov
sub
icebp
int3
bound
add
mov
and
pop
loopne
loop
lds
cld
call
sub
cwtl
mov
int3
cmp
ret
xchg
mov
into
jbe
notb
pop
das
std
inc
mov
lock
sub
sar
loope
sbb
sub
pop
jmp
ljmp
rolb
nop
pop
jnp
or
add
dec
ja
jb
sahf
or
mov
inc
test
lret
mov
jnp
pushf
and
cmp
sbb
xchg
das
cld
aaa
sbb
arpl
dec
nop
das
mov
ljmp
sahf
push
test
fistps
add
insl
shrb
fwait
dec
test
iret
leave
idiv
fdivrl
test
xchg
dec
mov
clc
push
dec
push
cmp
inc
sub
stc
adc
call
push
outsl
xchg
sbb
push
mov
jge
or
inc
fistl
dec
or
or
repz
inc
mov
dec
sarl
pop
aam
xchg
mov
pop
lret
fs
push
dec
pop
adc
xchg
decl
cld
in
mov
pushf
jae
add
lret
inc
addr16
cld
xchg
add
mov
loop
lcall
cmp
je
sahf
test
insl
jecxz
push
jl
insb
add
dec
shrl
dec
jbe
fisubrs
cmpsb
jno
cmp
mov
sbb
pop
shll
jae
push
jmp
andb
jo
add
add
imul
mov
or
mov
inc
pusha
inc
shlb
add
mov
cmp
and
jb
jmp
mov
pop
popf
xor
push
idivl
fistps
leave
subl
shll
pushf
mov
faddl
pop
pop
loopne
mov
das
xor
mov
xadd
jmp
call
adc
pop
shrl
imul
sub
call
sti
adc
nop
push
mov
cld
pushl
movsb
sub
push
js
sbb
out
adc
jmp
pop
das
scas
push
cmpl
loope
add
fs
jl
mov
mov
int
lock
lock
lret
popf
xlat
jns
nop
sub
jmp
mov
push
xchg
or
add
loopne
push
mull
sbb
or
fnstsw
or
cmc
and
cli
or
add
fldlg2
dec
out
xchg
std
xor
jno
mov
lcall
outsl
sbb
imul
pop
mov
jle
rcll
lock
ja
adc
jmp
xchg
jns
outsl
push
jae
std
push
insl
ror
push
shlb
mov
cld
cmp
push
pop
adc
or
hlt
inc
scas
xor
cwtl
dec
push
push
cmpsl
call
inc
out
add
fs
dec
fwait
out
imul
add
sbb
jne
es
call
pop
push
inc
pop
mov
stc
jne
mov
push
cmc
jne
dec
mov
lock
inc
out
les
movsb
clc
xor
pop
mov
and
dec
and
mov
or
stos
jl
ret
xchg
int
dec
sub
jne
call
jge
mov
cwtl
sahf
dec
in
das
pop
movb
das
aaa
inc
pop
mov
in
push
bound
sar
out
fildl
jge
mov
cmc
inc
insl
mov
jae
push
sub
iret
fimull
push
cmpl
clc
xor
mov
and
ss
test
enter
jecxz
lds
xchg
popa
sbb
pushl
nop
xchg
fldcw
in
cmp
fstpt
mov
sub
leave
stos
add
push
int3
sub
sbb
std
sbb
push
mov
lcall
adc
jnp
xor
and
mov
pop
inc
jg
repz
rol
das
lods
pop
mov
data16
mov
mov
dec
call
push
out
xchg
ret
ja
mov
sbb
or
pop
jp
xlat
add
out
leave
cmpsb
cmp
ljmp
xor
mov
dec
xlat
or
xorl
push
div
pushl
push
test
jne
xor
sub
xor
mov
insb
aas
outsb
and
dec
push
dec
mov
and
out
les
xchg
mov
jl
lds
pop
test
test
leave
std
dec
mov
or
pop
pop
out
pop
mov
jnp
xchg
dec
popf
xchg
aaa
repnz
push
adc
pushf
inc
pop
sub
mov
adc
jb
js
dec
mov
cmc
jg
push
pushf
fidivrl
out
cmpsl
fidivrs
add
popf
sbb
ljmp
cmp
cmp
pop
jle
inc
imul
in
sub
push
cmpsb
mov
lods
in
mov
jg
jne
jp
jge
out
shrb
fists
clc
fidivl
mov
fwait
push
test
sbb
outsl
ljmp
mov
ljmp
pop
ss
pushl
in
adc
xor
push
jae
leave
int
out
dec
or
jne
cmc
lods
sahf
adc
sub
or
scas
dec
ja
outsb
adc
jmp
jbe
stos
fxtract
push
pushf
arpl
cs
mov
inc
push
in
push
cwtl
adcl
push
enter
sbb
ss
insl
popf
lcall
in
push
bound
mov
cli
das
lock
ja
gs
pushf
nop
adc
lods
xor
inc
mov
push
cmp
call
scas
out
int3
mov
fwait
xlat
xor
outsl
mov
cmpsb
push
xor
in
incl
das
cmp
nop
xchg
scas
ljmp
aad
jo
aaa
cli
adc
mov
add
clc
mov
mov
shl
push
ljmp
imul
inc
sub
mov
xor
lret
cmpsb
rcrl
add
and
insl
mov
insb
fsubr
and
fwait
loop
imul
xor
add
mov
lret
lods
push
jo
ljmp
enter
icebp
push
pushf
mov
pop
xchg
lahf
xchg
or
mov
and
mov
mov
ret
sub
jmp
and
sar
dec
data16
ficoml
sbb
call
cmp
jg
fsubrp
andb
xor
jo
xchg
in
fnstenv
and
dec
ljmp
in
repnz
cs
push
incl
pop
push
cmp
in
out
cmc
add
cmp
mov
jle
call
pop
call
jae
push
mov
xor
mov
shll
loopne
mov
fwait
divl
xor
mov
jl
test
sub
pop
inc
mov
add
jb
fnstsw
dec
xchg
int
mov
jl
xchg
push
xchg
subb
rcl
fwait
icebp
out
fimuls
cmp
and
cld
or
pop
ss
cmp
pop
push
add
out
incl
test
mov
jne
mov
xor
out
jmp
xor
mov
je
test
adc
add
adc
pushl
loopne
and
mov
dec
sub
leave
xchg
mov
ja
call
int
mov
sub
hlt
or
mov
sbb
mov
aad
sub
lods
push
ret
push
sti
xchg
ss
out
mov
mov
jb
nop
or
cmc
or
ja
jo
mov
or
jg
mov
push
mov
loope
addl
cmp
loopne
fwait
bound
pop
push
push
push
push
mov
insb
sbb
jbe
push
cmpl
pop
decl
js
pusha
int3
jns
hlt
sub
jb
push
repz
cwtl
mov
pop
cli
add
and
mov
push
sarb
lcall
idivb
mov
inc
mov
mov
imul
xchg
jge
mov
hlt
mov
addl
xchg
cli
inc
clc
andl
scas
push
mov
pushl
lcall
sbb
hlt
mov
stos
push
mov
add
sub
ljmp
jl
lods
cwtl
mov
out
enter
mov
or
and
clc
pop
repnz
jg
jnp
mov
popf
in
test
adc
mov
std
cmp
in
cmp
inc
out
adc
push
das
cmc
call
jge
sub
fs
ljmp
insl
mov
ljmp
mov
lea
sub
jecxz
mov
pop
fwait
je
push
sbb
xor
push
xchg
shll
test
add
or
mov
mov
sbb
mov
cs
sahf
jmp
inc
sub
push
sarb
cmc
jge
hlt
jl
dec
out
in
ds
ja
mov
jmp
in
js
mov
ret
inc
jp
out
jg
sub
mov
cld
inc
movsb
decl
adc
adc
xchg
push
repz
pop
mov
repz
rol
jb
lcall
push
dec
mov
sub
ret
xor
cld
std
xchg
popa
jo
sbb
xchg
icebp
xchg
pop
mov
ret
out
in
and
xchg
inc
xor
idivl
cld
in
sbb
loopne
cwtl
mov
push
xchg
mov
pop
mov
ror
push
aam
pushl
push
or
push
jmp
mov
aaa
jmp
ja
gs
jg
jmp
stos
imul
cmp
xor
jo
bound
jg
fstl
pop
int
or
inc
mov
xchg
jne
popf
mov
icebp
mov
outsl
pop
push
or
cmp
loopne
mov
fnstsw
test
das
pusha
hlt
push
lret
out
sub
fmul
outsl
jno
call
mov
es
push
jle
in
mov
scas
adc
loopne
cld
incl
call
mov
pop
add
decl
call
push
les
sbb
sub
outsl
push
xchg
sti
test
jo
in
outsb
arpl
mov
decl
inc
xor
adc
push
sti
in
pushf
shl
sub
cwtl
and
test
clc
lcall
inc
push
xchg
cwtl
cmpsl
mov
je
cmp
divl
fwait
mov
clc
xchg
push
loope
js
fwait
sub
jecxz
loop
pop
incl
pop
fidivrs
jp
xor
mov
repz
loope
out
cli
and
jg
call
mov
out
jo
add
fmulp
cmp
xchg
or
pushf
adc
sub
pop
rorl
pop
sahf
mov
pop
test
fdivl
mov
push
cmp
cmp
insl
incl
fistpl
inc
arpl
adc
daa
outsl
sahf
or
inc
mov
iret
shr
sbb
mov
ljmp
insl
inc
hlt
sbb
scas
xchg
lcall
push
std
mov
mov
lcall
dec
arpl
loopne
aad
lea
inc
jp
hlt
lock
sti
xchg
mov
mov
clc
aaa
cli
decl
push
movsl
xorl
loop
mov
xlat
int
rolb
dec
jg
xchg
dec
das
push
jmp
mov
scas
cmp
call
gs
pusha
aam
mov
aad
test
dec
clc
jno
cmpsl
mov
push
dec
lods
sbbl
mov
sbb
sbb
call
bswap
jp
les
add
cmp
xchg
sub
push
pop
jns
dec
rcr
jecxz
mov
fwait
jnp
adc
mov
dec
inc
cmp
jmp
jmp
xchg
mov
ss
lods
and
lods
movsb
pop
push
outsb
insb
out
xor
je
arpl
cmpsb
incl
pop
setbe
call
xor
and
cltd
mov
int
jge
add
ljmp
rolb
or
lahf
filds
sub
lret
or
sbb
jne
mov
lcall
push
add
aam
jmp
lahf
pop
divl
or
call
dec
lods
and
aad
mov
pop
sub
dec
loope
xchg
rcrl
pop
std
lcall
jae
push
cmpl
and
lcall
lsl
push
js
xor
arpl
iret
add
mov
ljmp
ja
push
sbb
xchg
jo
ds
test
call
mov
rcr
mov
loopne
sbb
or
xchg
cmp
in
pop
fwait
movsb
popa
push
decb
cmp
std
push
add
mov
and
or
iret
fisttpl
faddl
imul
decl
mov
pop
shrb
cmp
push
mov
xchg
pushf
mov
jmp
dec
cmp
mov
or
cld
xchg
cmp
enter
call
mov
dec
sub
pop
cmp
xor
sbb
dec
xor
mov
in
out
adc
fs
fstpl
imul
cmp
cmp
cmpsl
movsb
rcrl
fimuls
repz
andl
mov
scas
in
dec
lcall
flds
fucomi
icebp
cld
and
shrl
cltd
and
fwait
ds
lret
cmpsl
stos
jmp
sub
iret
leave
or
sub
inc
out
int3
imul
lret
clts
aas
mov
pop
loopne
jae
xor
frstor
insb
adcl
test
dec
add
insl
pushl
fsubrs
pop
orb
xor
and
mov
jmp
movsl
cmp
nop
sbb
cmp
dec
dec
dec
lea
jnp
mov
or
cmp
mov
jg
aas
ljmp
mov
out
fldenv
repz
movsl
cmpsl
mov
inc
ljmp
add
clc
dec
imul
pop
loop
push
and
mov
lahf
adc
test
pop
adc
mov
jl
fs
ljmp
inc
mov
js
mov
test
inc
fs
decl
inc
fwait
pusha
xchg
aaa
push
pushf
js
sub
jle
loop
xchg
jb
in
fildl
push
push
gs
xchg
jb
lcall
sbb
cmp
fisubrs
or
xor
lret
sbb
lock
cmp
cld
cmp
push
push
jb
pushl
imul
fs
loope
sbb
neg
jnp
lahf
test
or
int3
incl
mov
mov
mov
in
jecxz
in
dec
push
sub
bound
jg
ljmp
dec
xor
aam
in
or
dec
or
inc
pop
mov
out
sub
test
and
add
cmp
ljmp
call
adc
pop
movsl
and
lock
push
out
pushf
in
adc
pop
orl
jmp
add
pop
pop
or
and
aas
icebp
or
or
mov
dec
movsl
idivb
aaa
cmpsl
inc
cmp
nop
and
or
inc
sub
mov
dec
cmpsb
add
pop
lret
js
arpl
cli
movsb
push
mov
insl
test
repnz
pop
or
into
iret
movmskps
dec
call
add
mov
jg
push
pop
sub
dec
mov
ljmp
inc
psrad
and
jmp
movsb
pop
sbb
imul
fnstsw
or
out
mov
mov
call
out
dec
push
in
mov
or
mov
and
xor
js
cltd
test
les
xorb
or
sbb
add
adc
or
inc
fidivrs
and
insb
fildl
aaa
mov
insb
cltd
sub
adc
mov
out
cmpsl
and
sbb
cmp
rcrb
cs
lock
pop
xor
mov
jmp
xchg
xchg
hlt
fldt
or
pop
cmc
mov
aad
ljmp
push
sarb
imul
or
les
lds
repz
push
add
data16
int3
and
std
mov
xchg
fs
andb
repnz
or
mov
or
incl
iret
pop
jp
aas
mov
cmp
jns
cmp
lcall
lds
xor
movsb
cld
aas
push
out
arpl
mov
jne
jg
incl
testl
dec
mov
iret
gs
aam
call
ljmp
repz
std
punpckhwd
mov
add
or
xchg
lcall
ljmp
loopne
imul
sti
out
xlat
xor
sbb
ljmp
sbb
adc
xchg
pop
out
jns
jnp
add
lcall
mov
push
push
in
push
or
clc
jge
incl
xorl
pop
sub
outsl
push
xchg
aad
and
mov
cmpsb
inc
dec
test
movsb
daa
mov
pushl
mov
cmp
cmpsl
outsb
sbb
loope
mov
pushl
into
jno
aad
mov
push
mov
xchg
adc
imul
mov
pop
push
jge
jecxz
sbb
or
mov
adc
incl
rcll
mov
add
incl
lcall
push
cmpl
insb
and
mov
lcall
leave
sti
mov
dec
jae
lret
rcll
mov
sub
jae
lcall
mov
rcl
and
mov
xchg
arpl
fbstp
lcall
jp
push
cmp
popa
into
push
mov
fdivs
xor
dec
mov
in
cld
aas
repz
out
xchg
dec
into
push
call
pop
and
cs
stc
sar
mov
sahf
push
xor
mov
sub
call
cwtl
out
lahf
lds
in
sbb
decl
sub
outsb
jp
rcr
cmp
push
mov
sar
ljmp
cmp
mov
pop
inc
push
jle
mov
fmuls
gs
pop
fstpl
test
movb
daa
loopne
stc
popf
mov
popf
int3
aaa
dec
call
ret
add
pushf
push
sub
out
push
popa
sub
stos
decl
aad
sub
in
mov
outsl
je
sahf
adcl
and
cli
incl
jg
leave
and
xor
mov
fwait
outsl
cmc
dec
push
dec
mov
adc
inc
jo
xchg
aad
push
pusha
sbb
int
pushl
xor
sti
cmp
adc
xchg
sbb
xor
sarb
adc
or
outsb
stos
dec
js
cmp
dec
fmuls
cmpsb
call
push
loope
sub
pop
pop
cmpsb
pop
outsl
xchg
and
out
data16
das
cld
jmp
decb
negb
test
mov
mov
vmaxsd
dec
popf
mov
andb
xchg
xchg
mov
inc
mov
mov
inc
rorb
inc
fsubrs
fcmovnu
push
scas
incl
pushl
jno
dec
adc
bt
cmp
je
cmp
pushl
sub
insb
pop
mov
mov
sarb
adc
lods
cmc
dec
sti
test
jmp
xchg
xchg
scas
mov
inc
addr16
inc
jmp
add
sarl
push
aam
sbb
daa
jns
xor
inc
leave
das
call
fistpl
add
mov
stc
adc
jmp
aaa
mov
test
lret
icebp
arpl
mov
dec
push
mov
jp
and
test
lcall
jne
dec
sub
mov
fimull
add
scas
push
movsl
sbb
pushl
pop
nop
mov
scas
push
lods
lcall
popf
ffree
cmp
ljmp
pop
scas
adc
arpl
mov
div
pop
push
fs
lahf
lock
aas
xchg
jg
push
sti
lret
mov
daa
pop
popf
test
loopne
push
lcall
iret
popa
shrb
adc
imul
pop
out
sbb
pushl
std
jae
ficompl
add
jl
jl
ds
cwtl
jne
call
mov
dec
fidivrs
push
pop
cmc
loope
pop
aad
shlb
incl
push
out
xor
call
push
push
dec
and
ja
lock
pop
idiv
ljmp
shr
xchg
push
push
notl
test
and
push
add
pop
loopne
dec
pop
sub
pop
xlat
sub
psubd
adc
std
inc
mov
dec
push
fsubp
jne
pushf
mov
out
sbb
jge
std
incl
sbb
cltd
cld
jno
adc
sbb
je
shl
outsl
jno,pn
mov
dec
xor
cld
mov
inc
cmp
xchg
loop
testl
pop
xor
ficoms
loop
out
enter
std
insb
scas
out
jmp
dec
in
jb
and
adc
divb
stos
cmc
jmp
subl
mov
ret
xor
outsb
lret
jl
cmc
aaa
call
mov
mov
in
movsl
pusha
repz
dec
cmpsb
lret
sar
mov
insl
fistps
nop
jns
xlat
xchg
aas
into
inc
lcall
jg
mov
inc
mov
jbe
pop
lea
push
adc
mov
sub
add
scas
dec
test
outsl
adc
lea
mov
sahf
mov
fldenv
clc
mov
loop
call
daa
mov
cmpb
mov
repz
lods
js
daa
subb
mov
ljmp
loopne
bound
je
idiv
mov
mov
lds
mov
pushf
rcll
dec
pop
inc
jg
mov
decb
rep
cltd
call
fidivrs
int3
ficomps
xchg
cltd
ljmp
jmp
add
sahf
push
cmp
aam
sahf
or
mov
jno
icebp
push
stos
incl
jg
and
iret
ret
std
dec
cmpsl
fisttps
inc
enter
int
aaa
das
lock
hlt
cmp
mov
jg
xchg
mov
lock
xor
into
sub
push
mov
or
and
inc
ljmp
sbb
fwait
xchg
cmpsb
cmp
jnp
sahf
adc
adc
pushl
adc
xor
push
cmp
into
pushl
setb
test
sub
inc
loope
mov
pop
aaa
pop
ss
sahf
sub
sti
hlt
mov
mov
mov
pop
inc
into
test
mov
cmp
push
mov
ljmp
clc
mov
dec
jmp
dec
sbbb
mov
cmp
imul
pop
loop
call
sub
mov
jne
sbb
sub
cmpsb
insb
inc
shrl
mov
mov
aas
arpl
outsl
icebp
mov
inc
pop
inc
cmpsb
mov
add
push
jg
xchg
fcomps
stos
fisubs
add
mov
cmc
jg
jb
jmp
xor
decb
push
add
adc
add
dec
std
adc
xchg
pop
xchg
lahf
dec
xor
roll
hlt
xchg
inc
les
aad
les
aam
sbb
push
int3
je
mov
popa
jmp
cmc
incl
fisubs
adc
jmp
push
hlt
mov
push
push
icebp
inc
jb
pop
and
adc
cld
add
xchg
pop
and
in
out
push
int
dec
rcr
ja
icebp
pop
mov
hlt
add
push
aam
icebp
inc
xchg
add
addb
mov
jl
sbb
mov
out
prefetch
push
cwtl
lods
repz
inc
call
mov
stos
frstor
sub
cli
sbb
movl
scas
mov
inc
and
fstp
test
add
subb
and
pop
call
or
mov
pop
in
inc
outsl
mov
push
mov
icebp
aas
fs
mov
ljmp
mov
shrb
mov
add
sbb
pop
or
std
mov
je
inc
pop
sbb
xchg
cmp
add
add
cmp
inc
inc
movsb
out
sub
fndisi(8087
sub
insl
xor
add
orl
aaa
and
inc
mov
jns
lods
or
and
mov
sbb
imul
aad
or
repz
sub
pushf
mov
mov
aad
stos
js
bnd
scas
sbb
sbb
into
fcoml
bnd
jo
xor
sbb
lock
stos
pop
and
inc
or
mov
xor
fistpll
sub
cmp
mov
movsl
in
mov
pop
dec
clc
push
or
xchg
pop
xor
cmp
arpl
jo
sbb
add
cmp
sbb
dec
mov
ja
mov
jb
cltd
and
inc
mov
cs
leave
and
aaa
clc
fldl
sub
movsb
xchg
movsl
shll
test
pop
mov
sub
das
push
bound
aad
mov
sbb
adc
inc
add
fsubrl
mov
pop
pop
xor
test
lahf
test
addr16
cld
xchg
inc
fsubrp
mov
or
sub
cmpsl
fdivl
fucomip
incb
mov
dec
xchg
loope
jnp
jle
stos
lods
stos
daa
cld
push
mov
subb
ret
mov
mov
xchg
mov
sub
out
addb
xchg
insb
jecxz
xlat
in
ret
sbb
sub
fsubrs
int3
in
cld
incl
mov
ja
mov
enter
xchg
subb
loopne
pop
popf
xor
or
jl
adc
xchg
outsl
shll
aad
stos
lock
lods
ficomps
inc
pop
fisttps
dec
arpl
fidivl
scas
out
mov
stos
std
test
fnstenv
adc
inc
lcall
pop
jns
lea
out
mov
pop
lcall
push
push
xor
pop
insl
mov
ds
decl
ja
fs
cmp
insl
icebp
insb
ss
sub
adc
mov
test
movsl
xchg
add
dec
lea
lds
test
or
ja
xchg
sub
lods
leave
fdiv
xlat
sub
fwait
test
in
xchg
sub
sub
daa
or
or
orb
dec
mov
dec
push
fnstsw
jg
inc
mov
jg
cmp
bound
sbb
adc
or
cmp
pushf
icebp
push
popa
hlt
xor
and
mov
cli
movsl
aaa
andb
repnz
jmp
and
sbb
add
jle
ficoml
xchg
adc
popf
loop
sbb
push
mov
mov
push
pop
add
mov
mov
fistpl
sahf
sti
bound
xor
dec
inc
aaa
mov
mov
pop
sbb
sub
or
cmp
frstpm(287
adc
cltd
loop
cli
pop
sub
push
popa
cmpb
or
int
icebp
push
je
mov
xor
cmp
push
adc
dec
movsb
add
sub
pushf
sbb
ja
mov
out
or
inc
push
xchg
call
lahf
mov
int
lods
push
xchg
or
inc
xor
xchg
and
mov
xor
inc
sbb
shll
mov
and
cltd
cli
fwait
lods
inc
push
clc
dec
movsb
gs
mov
pop
fdivrs
jle
inc
jl
insb
popf
lret
scas
imul
fdivr
pop
in
imul
push
mov
call
das
jo
repnz
add
outsb
jmp
sbbl
repnz
ds
sub
bound
sbb
cmp
addb
push
out
sbb
jbe
add
addb
sub
mov
push
call
mov
xchg
out
push
inc
pop
incl
push
mov
ja
mov
clc
jp
shl
push
pop
add
out
ret
rorb
cmp
insl
jmp
pop
shrb
xlat
jg
cld
mov
jne
cmp
xor
test
jmp
ficoms
negl
mov
outsb
mov
lods
rcl
loop
lds
adc
push
dec
call
mov
aad
sbb
jbe
push
dec
adc
hlt
xchg
mov
out
andl
fildl
dec
xlat
bswap
repz
int3
push
dec
cld
faddl
or
inc
andl
cmp
mov
sbb
or
je
jae
aaa
fstpl
xor
and
jb
js
loopne
mov
jno
rcr
mov
pop
or
rcr
jnp
and
or
inc
inc
or
popf
mov
push
int3
and
add
pop
sub
mov
xor
xchg
lcall
jle
rorb
decl
mov
pop
mov
jbe
int3
add
and
mov
fsubrl
push
hlt
scas
mov
es
rol
xor
or
lods
push
fstpl
cmpl
js
in
push
outsl
or
sub
mov
dec
cmpsb
nop
add
dec
xor
cmp
jl,pn
loop
js
leave
xorb
pop
cmc
push
mov
das
icebp
test
push
cmp
in
push
rcl
xchg
cli
jge
nop
or
mov
xchg
cmp
pop
mov
fsub
neg
inc
cmp
aam
in
mov
sbb
or
cwtl
xchg
pop
jp
out
aaa
add
jo
jl
jle
cmpsl
lcall
insl
je
xchg
cs
fmul
aam
faddl
push
dec
insb
cs
sub
mov
outsl
or
pop
in
push
adc
add
sbb
pop
lcall
movsl
dec
cmpsl
and
fdivrl
outsb
sbb
jbe
mov
push
add
adc
nop
lock
xchg
incb
or
jbe
jbe
cmpsl
inc
loope
aas
adc
or
jle
sbb
aad
fwait
mov
jnp
test
cmc
jb
jl
sarb
pushf
iret
loop
aaa
sbb
or
mov
push
mov
push
mov
and
or
mov
je
ds
or
negl
jb
repz
add
les
cmp
mov
or
mov
lret
and
adcl
add
outsl
in
inc
jmp
js
or
leave
push
and
and
and
shl
and
xlat
pop
jmp
rorl
insl
jle
mov
fbstp
inc
arpl
push
das
jl
js
sbb
stc
and
sub
sub
sub
dec
mov
jmp
mov
pop
push
fdivrs
inc
stos
xor
cs
outsb
sete
es
nop
loope
mov
aaa
xorb
int
daa
inc
mov
mov
fdivs
lock
ret
lods
test
sub
or
mov
sub
push
adc
shl
aas
mov
mov
mov
dec
jecxz
xchg
xchg
or
outsl
test
jne
das
jmp
daa
sub
rolb
mov
cmp
lods
xor
xchg
push
sbb
xchg
inc
xchg
fdivrs
test
xchg
inc
xor
or
daa
mov
icebp
push
int
sbb
push
lret
jns
adc
mov
xchg
and
and
mov
mov
notb
mov
jl
mov
arpl
xor
out
sub
movsl
push
mov
adc
cmp
add
jmp
and
enter
jle
cmp
push
cmp
sbb
arpl
or
lret
insb
push
jl
dec
cli
mov
sub
adc
fs
and
loope
jg,pn
fildll
loopne
add
popf
mov
and
ja
daa
inc
pusha
adc
cmpsb
pushf
inc
push
cli
pop
mov
sbb
jmp
pushl
dec
lea
ljmp
fdivrp
xchg
pop
xchg
xor
add
inc
loopne
lahf
add
aaa
lods
sub
jecxz
iret
fadd
dec
das
ret
fs
push
mov
stc
push
xchg
mov
outsb
pop
stos
fdivrp
pop
daa
pop
aas
and
insl
pushl
call
cmpsl
rolb
dec
ds
inc
mov
pop
lret
loop,pn
addr16
nop
test
test
jmp
hlt
inc
pusha
pop
int
mov
sbb
lret
adc
clc
adc
out
clc
pop
mov
jmp
ret
pusha
ljmp
adc
mov
pop
in
int3
sub
dec
xor
and
dec
ficoml
sarl
or
ss
xor
xor
test
inc
and
int
push
pop
jl
or
jge
les
jb
add
mov
xchg
ret
mov
xor
ljmp
ret
fdivs
orl
jl
movsl
sub
test
shlb
xor
clc
mov
dec
xchg
mov
iret
mov
dec
and
add
and
adc
adc
je
fistps
push
mov
cmp
rorb
in
into
rolb
inc
cmp
mov
mov
les
cmpsb
mov
push
imul
mov
dec
push
es
mov
out
cli
rcrb
mov
mov
test
int
inc
out
push
add
jg
sti
jns
fs
add
or
bound
lea
or
test
sub
pusha
es
mov
adc
mov
cmc
in
outsl
jmp
sbb
or
faddp
es
or
out
in
fistl
pushf
sub
and
add
outsb
push
icebp
sarb
add
mov
repnz
in
fld
test
xchg
pushf
das
adc
insl
cld
into
pushf
add
in
int3
sub
adc
mov
stc
ja
mov
andl
xchg
jno
sub
dec
xchg
pop
cmpsl
push
fcmovbe
hlt
ljmp
mov
jg
sbb
lds
inc
dec
lds
push
icebp
test
pop
mov
cmp
mov
jbe
dec
shrl
cmpsl
pop
sbb
inc
int3
mov
mov
cmp
test
repnz
test
jne
in
add
adc
mov
pop
xor
mov
stos
mul
jo
adc
mov
cltd
or
inc
push
push
ja
subb
fcmove
pop
or
lds
cmp
add
jns
pushf
sub
adc
inc
lret
js
fcmovnbe
lods
imul
pop
push
or
dec
inc
sbb
or
and
jle
cmp
lahf
cmp
mov
mov
daa
cli
mov
jp
mov
sbb
push
or
xchg
daa
pop
out
mov
mov
add
decb
cmpsb
adc
xchg
mov
push
add
inc
cli
pop
jmp
outsl
int
xor
rcr
jecxz
push
add
sub
push
lock
cmp
les
inc
jae
dec
push
adc
adc
rol
fisttpl
sbb
das
mov
xor
rcrl
sub
lcall
add
cs
test
dec
xor
push
mov
xor
cmc
aas
loop
jb
or
jno
adc
mov
add
xchg
mov
mov
pusha
loopne
int3
sub
inc
and
outsl
adc
aam
cmpsl
and
cli
jb
mov
dec
pop
add
ror
out
outsl
popf
arpl
fbld
andl
ja
xchg
jecxz
cmpsb
je
ja
jecxz
jl
lods
cmp
add
mov
mov
mov
js
inc
add
sbb
xchg
jo
pop
fs
pop
inc
fcmovnbe
cmpsl
ja
in
mov
add
notb
aad
push
mov
or
fsubrl
lcall
repnz
out
pusha
jg
push
push
subl
outsl
push
je
jo
popf
xchg
lods
inc
push
enter
imul
das
mov
cmp
ljmp
scas
mov
jae
rcll
in
or
mov
fistl
mov
lret
call
inc
rclb
pop
xchg
loopne
cmp
outsb
iret
test
mov
jle
lds
mov
cmp
test
add
jg
mov
dec
in
mov
jge
int3
jno
rorl
cmp
test
imul
add
movsb
push
test
sti
call
hlt
andb
mov
mov
in
fmull
out
subb
dec
andb
jo
scas
cmp
aaa
outsb
ds
sahf
xor
pop
ljmp
insb
or
mov
sbb
subb
add
mov
fidivs
inc
outsl
movsl
push
faddp
aas
xchg
pop
sbbl
xor
push
mov
shlb
stos
mov
mov
pushf
test
push
adc
mov
dec
xor
loopne
xor
shl
fs
fidivrl
jo
fwait
jp
in
lods
pop
sub
js
pop
pop
pop
jo
aam
mov
mov
les
inc
sbb
mov
adc
movsb
addr16
xchg
push
fxtract
jne
sahf
cmpsb
jns
sub
test
jb
xchg
pop
push
inc
cmpl
xchg
xchg
push
lcall
ss
les
mov
push
add
aad
loop
cmc
and
sub
clc
sbb
lcall
test
out
jbe
shrb
insl
es
push
jo
stos
movsl
or
fldlg2
cli
sub
stc
es
xor
rcl
iret
loopne
add
cs
cmpsl
pop
adc
inc
mov
insb
push
aaa
sub
mov
bound
mov
lock
std
sbb
aas
push
push
inc
add
sti
or
cmpsb
rolb
or
xchg
sub
mov
push
mov
scas
mov
dec
mov
vorps
pusha
rorb
cld
add
or
inc
sub
inc
cmc
shlb
and
dec
mov
sub
mov
mov
jecxz
bound
lcall
ljmp
adc
ljmp
movsl
dec
lret
mov
insb
lock
dec
inc
jl
adc
xor
in
ret
push
cmp
sbb
scas
push
pop
pushl
xchg
inc
pop
ror
xor
jne
out
mov
popf
test
jb
xor
inc
fwait
pop
clc
fistpl
and
pop
es
imul
pop
push
outsb
cld
pop
insl
pop
adc
loope
loopne
call
les
lret
ret
int
mov
rcll
dec
lcall
cmpb
ret
in
aas
add
xchg
or
push
insl
xor
rol
pusha
clc
ja
mov
mov
push
mov
mov
cltd
xchg
js
adc
inc
test
sar
push
gs
and
or
push
std
pop
xor
fisubl
out
call
ret
sbb
fsubrs
sti
jmp
subl
and
shl
out
in
daa
inc
rol
sbb
ret
cs
mov
push
mov
push
mov
js
rclb
pop
adc
incl
lcall
or
aas
push
dec
sbb
je
push
ss
add
subb
ljmp
sbbl
aas
sbb
sbb
jg
and
and
pop
cmp
movsl
int
insb
jp
inc
adc
inc
lods
dec
test
shll
ljmp
adc
arpl
push
jns
sub
outsb
adc
sbb
jp
pop
pusha
jb
cmp
cld
push
mov
jno
dec
sub
outsw
mov
jecxz
mov
mov
in
and
inc
ljmp
add
adc
adc
cmp
xchg
ja
test
inc
subl
ljmp
imul
xor
mov
fnstcw
pop
push
clc
filds
xlat
enter
push
inc
xchg
push
pop
cmc
ffree
test
scas
add
fdivrs
push
mov
or
notl
jnp
or
pop
lods
dec
dec
add
sbb
and
pop
loop
into
xor
test
push
add
into
mov
pop
loopne
mov
std
add
fcomps
jb
adc
adc
cmp
pop
cwtl
rorl
jmp
mov
push
add
aad
add
inc
cmc
inc
jg
mov
nop
mov
cmp
mov
out
test
sbb
outsl
pop
stos
das
mov
js
adc
push
mov
push
orb
fcom
lds
mov
ds
les
push
pushf
or
and
aas
enter
pop
jecxz
sub
sbb
daa
pop
shr
daa
push
xchg
lcall
clc
cmp
test
clc
out
or
cmp
inc
cmp
pushl
fimull
in
jp
cld
call
or
jnp
fstpl
pop
push
out
roll
inc
ljmp
decl
loop
mov
jo
incb
das
sub
jo
mov
or
adc
ljmp
mov
jbe
jb
mov
pusha
jmp
mov
in
xchg
es
sub
mov
or
cmpsb
pop
inc
inc
je
mov
les
inc
out
jbe
je
test
bound
jp
arpl
xor
jo
mov
daa
cmp
stos
sbb
mov
mov
popa
fnstcw
in
pop
mov
jge
cmp
imul
mov
test
adc
insb
mov
in
stos
xchg
pusha
test
pop
fdivr
clc
xchg
imul
test
std
scas
scas
sub
out
push
mov
mov
ror
jge
sbb
nop
ss
fdivr
das
hlt
decb
or
test
test
pop
inc
mov
cs
mov
cli
clc
fmulp
push
xchg
out
clc
out
out
add
mov
data16
fwait
push
imul
pop
xor
jl
in
test
in
pop
insb
add
add
decl
repnz
push
divl
std
outsl
push
push
or
inc
jnp
xor
inc
mov
jb
adc
or
mov
pop
jo
test
data16
lea
push
and
mov
sub
push
sbb
fcompl
xchg
pop
pop
ficompl
xchg
mov
mov
jecxz
outsb
xor
jmp
sahf
add
jge
sub
faddl
movsl
pop
cld
lods
lods
movb
pop
sub
outsl
scas
ds
mov
std
incl
pusha
sbb
adc
dec
inc
inc
dec
loope
xchg
stc
and
repz
push
movups
mov
adc
pop
stos
cmp
sub
into
je
pmaxub
mov
adc
or
into
or
outsl
mov
iret
mov
loopne
stc
jecxz
mov
in
cmc
lock
jo
jmp
xchg
jb
test
adc
pop
rclb
add
adc
add
dec
shrb
insl
test
jl
push
pop
adc
shrl
aad
hlt
in
mov
pushf
ljmp
dec
daa
push
divb
pop
mulb
xchg
xor
inc
mov
addb
and
jae
icebp
and
inc
inc
jo
pop
in
mov
mov
inc
shr
ret
addr16
pop
mov
in
rcr
aas
adc
mov
push
push
mov
pushl
pop
push
mov
test
pop
pushf
pop
fisttpl
ljmp
scas
sbbb
clc
sub
ret
fcmovnu
out
ret
cmpsb
movsl
outsb
sbb
xor
cmpb
cmpsb
test
aaa
push
cmp
and
roll
sti
shl
xchg
pop
cs
stc
sbb
pop
mov
jg
les
testb
int3
mov
push
inc
mov
leave
xchg
or
aas
in
mov
lods
fwait
mov
cmp
cli
mov
pop
std
sar
mov
cmpsl
adc
sub
outsb
fcmovu
cmp
and
shlb
push
adc
cli
aad
jmp
adc
pxor
push
shrb
pop
addr16
pop
add
rorl
inc
xchg
pop
inc
jne
adc
lock
add
xor
jge
lcall
testl
enter
hlt
or
out
clc
call
in
lock
xor
xor
adc
or
mov
mov
pop
in
insl
cmc
or
push
jae
push
inc
popf
icebp
dec
test
lcall
and
ja
frstor
ret
push
cli
lcall
test
popf
cmp
dec
mov
lret
gs
cltd
cmp
or
push
xlat
jge
ret
jo
or
mov
push
pop
fidivs
testb
ljmp
inc
or
dec
mov
xchg
scas
repnz
jg
sbb
cmpl
and
mov
sub
and
movsl
or
insb
and
and
adc
comiss
inc
rol
stc
inc
call
lea
sarb
lea
ljmp
fstps
jmp
xchg
or
jle
lock
add
je
lahf
cmp
fidivrs
std
xchg
and
data16
addb
pop
cmp
cli
movb
test
mov
les
lock
addr16
je
or
call
pop
inc
mov
nop
jb
gs
sbb
aaa
mov
cmp
nop
mov
imull
dec
out
lods
or
dec
dec
loop
js
jmp
fistps
les
loop
neg
mov
mov
push
icebp
jae
xlat
test
mov
lea
adc
push
push
and
pop
clc
xchg
test
adc
mov
in
mov
sbb
enter
or
cltd
mov
nop
and
jg
loope
loop
sar
aaa
mov
icebp
mov
rorb
out
pop
or
cs
lods
sub
dec
std
int3
mov
insb
mov
xor
stc
les
mov
add
xor
add
pop
add
test
movaps
or
adc
sbb
jnp
clc
std
sbb
ss
jle
push
sbb
rcl
mov
jb
mov
enter
addr16
xchg
sbb
cmc
int
or
repnz
jmp
shr
mov
dec
mov
ss
icebp
xor
and
out
lock
jle
mov
adc
sbb
or
add
fildl
jge
int3
jecxz
cmp
pop
pop
js
jge
stos
pop
lock
or
push
aas
mov
sahf
push
cmp
mov
and
jecxz
sub
cwtl
push
loop
adc
pop
xor
sbb
jo
fldt
pop
mov
repnz
sub
or
sub
mov
fidivs
mov
jae
ret
add
ret
inc
lret
push
call
xchg
mov
sub
sub
pop
mov
jmp
sbb
subb
loop
inc
push
add
jb
xor
and
jle
icebp
adc
or
jmp
jle
lock
push
jbe
fimull
pop
push
shl
out
mov
xchg
cmp
fistpll
lcall
jp
push
outsb
mov
add
mov
push
cmp
and
imul
fimuls
or
orl
mov
xor
fcomip
dec
cmp
cmp
cmpsl
daa
cmc
and
jnp
out
add
hlt
jg
lret
es
mov
popa
outsl
cld
outsl
outsl
mov
adc
int3
ss
jns
xchg
nop
pop
pop
loopne
fs
xor
pop
mov
adc
mov
mov
lock
mov
mov
repnz
dec
cmc
adc
push
das
cmpsl
rsqrtps
loopne
push
xchg
clc
stc
rcl
xchg
add
mov
aas
mov
and
clc
pop
pop
das
cmc
outsl
jge
aad
adc
mov
xor
inc
inc
cmpb
xor
sub
call
movsb
iret
int
loope
enter
jg
fcomip
sub
test
nop
out
popf
jbe
scas
mov
xor
push
mov
push
xor
in
clc
call
popa
mov
ja
add
into
repnz
pop
push
dec
xor
pop
sbb
sahf
push
movsl
outsb
fdivs
lret
jbe
subps
outsb
mov
jbe
aas
cwtl
leave
imulb
push
sub
pop
es
je
lods
idiv
fisttps
pushl
push
daa
or
sbb
mov
hlt
aad
xor
in
adc
jg
ja
or
sub
sbb
bound
inc
out
jecxz
or
or
into
jb
jbe
fsub
test
jg
imul
mov
negb
mov
sbb
dec
dec
mov
adc
adc
inc
mov
call
nop
adc
cld
out
clc
xor
jle
jp
mov
inc
add
push
inc
push
cmp
movsl
or
divl
hlt
nopl
aas
sbb
shrl
jae
and
push
repz
xor
leave
ds
aas
mov
mov
mov
pop
call
popf
addr16
iret
jmp
pop
insb
sbb
xor
cltd
and
fwait
or
cmp
in
push
cmc
fstpt
xchg
or
pop
push
mov
lods
cmp
push
icebp
inc
pushf
insl
pop
mov
popa
push
mov
or
add
cmp
or
repz
mov
mov
es
inc
inc
or
or
ljmp
pop
dec
xor
imul
cmpsl
jno
mov
and
loopne
movsb
fs
lret
xchg
adc
mov
and
aas
stc
jg
aad
loop
out
mov
inc
adc
fcoms
sti
mov
cmp
das
cld
xchg
clc
addr16
scas
aam
aaa
roll
sbb
sub
ljmp
pusha
push
inc
mov
dec
lret
mov
xchg
xlat
push
cli
fildll
mov
int3
jmp
pop
mov
movq
jg
lock
pop
dec
mov
jb
push
and
out
dec
test
repnz
fs
xchg
rorb
push
mov
scas
or
add
pop
adc
incl
js
xchg
push
lret
aam
ds
enter
mov
clc
mov
fcoms
mov
bnd
xchg
lea
ljmp
push
std
out
lods
sbb
pusha
xor
dec
mov
push
in
add
cmp
shll
cs
mov
mov
mov
jecxz
aam
dec
mov
test
inc
leave
mov
es
dec
inc
daa
gs
in
push
pop
xor
sub
push
pop
pop
mov
mov
rol
push
cli
inc
cmc
addb
test
gs
or
jp
pop
cmp
xor
mov
ret
stos
pop
sbb
roll
sub
jno
jg
push
sbb
arpl
lods
cmp
sub
dec
aad
cmc
xor
or
sahf
mov
rcrb
cmpsl
out
pop
mov
inc
fildl
enter
xchg
ffreep
lods
xor
test
lret
xor
add
pop
lahf
fwait
inc
aaa
adc
sub
ret
lahf
xor
dec
in
xor
mov
adc
insb
mov
sbb
rorb
mov
and
testl
pop
dec
and
jecxz
jp
mov
test
or
sub
add
mov
adc
jmp
pop
ds
pop
sub
inc
test
cli
mov
ret
xchg
lret
addr16
or
or
mov
leave
test
popa
out
pop
cmp
sbb
mov
ss
dec
cmpsb
inc
cmp
lock
imul
inc
inc
fisttpl
frstor
add
ljmp
and
xor
push
push
sbb
and
inc
push
jle
sub
xorb
repz
loopne
inc
ljmp
dec
orl
add
dec
mov
in
sub
push
xchg
sub
out
enter
mov
push
xor
dec
jne
mov
push
jo
popa
sbb
fcomps
sub
xor
mov
shrl
sti
mov
sbb
xchg
fldl
mov
inc
stos
mov
mov
inc
pop
jmp
pop
sub
fld
and
jnp
js
inc
pop
xor
rcl
loop
push
mov
add
pop
push
sar
dec
adcl
fs
fcoms
or
bswap
jl
mov
je
adc
or
icebp
sarb
enter
xor
mov
xchg
add
lods
lds
lods
inc
sbb
or
adc
add
fdivrs
in
testl
inc
mov
push
ljmp
test
xchg
js
cmp
mov
cmp
adcb
sbb
push
das
xchg
mov
xor
js
xchg
sub
xchg
push
aas
and
dec
mov
sbb
and
fisubrs
cwtl
adc
hlt
outsl
and
and
dec
data16
bound
cld
jg
jbe
mov
xor
cmp
pop
adc
xor
mov
inc
cld
pop
movsb
adc
roll
fwait
mov
inc
push
sti
push
or
std
xor
mov
insl
add
fwait
or
pushf
add
inc
inc
sti
or
and
das
adc
dec
adc
daa
or
stc
sub
xorl
ljmp
test
sub
icebp
and
sub
mov
add
imul
push
adc
pushf
lea
ja
inc
loope
mov
negl
fucomip
inc
lods
cmp
mov
mov
filds
mov
mov
pop
jno
sbb
push
das
sub
or
and
sahf
mov
cmp
les
daa
fadds
pop
or
in
mov
push
in
xchg
rorl
or
pop
add
call
pop
push
push
mov
pushf
dec
add
iret
ret
pop
fwait
cli
pop
shrl
ljmp
push
and
fwait
outsl
push
dec
cmp
stos
mov
nop
mov
btc
std
add
mov
fucomp
and
fdivs
ja
push
dec
mov
test
jp
mov
inc
xor
xchg
shlb
add
adc
xor
add
dec
mov
pop
cmc
add
push
mov
add
test
mov
aaa
data16
inc
cmp
loopne,pn
js
push
pop
iret
inc
insl
jg
adcl
or
fldcw
push
mov
and
and
or
shlb
sbb
aas
ljmp
ficoms
jp
pop
outsb
add
add
add
xor
stc
jno
cmp
xchg
push
idiv
inc
int
cmovo
das
cmc
and
inc
fs
cs
dec
out
fisubs
xchg
loope
fneni(8087
push
fnstsw
push
sbb
scas
out
or
movsb
and
dec
dec
mov
lods
sub
jle
xor
or
imul
invlpg
mov
aaa
jp
ljmp
insl
push
adc
pop
jo
fisubrl
sbb
jg
int3
inc
jns
shll
cmc
das
std
icebp
div
pusha
sub
pop
jl
jcxz
xchg
push
or
mov
fistps
movsb
inc
mov
and
jge
fneni(8087
divb
mov
mov
insb
ds
aas
std
add
lods
int3
mov
or
pop
loop
hlt
cmpl
or
jb
xor
sub
and
neg
jp
out
fildll
dec
out
sbb
cmp
nop
cmp
jb
adc
lcall
es
adc
add
jbe
sbb
jge
cmp
jge
mov
out
pop
andb
fistl
push
mov
jg
mov
or
mov
push
rcl
or
cwtl
jo
push
call
lods
ret
jmp
xchg
push
sahf
xchg
adc
ds
sbb
or
or
dec
pop
popl
mov
pop
inc
ret
pop
addb
jmp
mov
loopne
xchg
popa
cwtl
xchg
pop
mov
adc
cwtl
xor
xor
lea
lret
scas
aas
push
ds
sar
jg
jnp
adc
dec
pop
mov
adcb
xchg
fbld
cmp
rol
push
inc
and
in
scas
leave
cld
pop
jnp
enter
lret
jne
fsubrl
mov
js
out
nop
pop
xor
add
lcall
push
jmp
cmp
js
rcrl
decb
nop
pop
popa
in
outsb
or
int
mov
loopne
and
pop
inc
stos
lds
dec
pop
adc
jmp
js
test
filds
cmp
les
hlt
sbb
and
rcrb
rcr
clc
repnz
mov
xchg
dec
incl
push
add
es
fwait
fs
or
fidivrs
jnp
sbbb
faddl
adc
imul
inc
insb
jle
add
xor
push
aam
jp
inc
sub
inc
jnp
mov
loope
xchg
add
sbb
adc
fiadds
jbe
push
sbb
pusha
js
inc
repz
fucomi
sti
inc
push
xchg
int3
clc
scas
int
mov
mov
or
mov
push
dec
fdivrl
icebp
mov
pop
cld
sahf
lds
mov
cmp
inc
les
cltd
daa
test
mov
mov
divb
sub
movsb
and
or
mov
in
mov
in
or
loop
or
sbb
mov
dec
jge
or
and
cmpsl
xor
lret
fs
mov
sarb
shrl
mov
call
inc
add
sub
test
sbb
push
push
xor
fildll
fisubl
pop
icebp
inc
mov
std
sar
sbb
cwtl
aad
or
out
sti
mov
int3
fisttpl
mov
mov
mov
add
orb
jmp
iret
mov
add
jb
jg
call
mov
pop
and
pusha
pop
jmp
cmp
jmp
inc
pop
js
adc
test
inc
into
jp
push
lcall
ss
add
dec
out
add
fsts
jo
lds
jnp
aas
sbb
cmp
pop
cmpsl
insl
pop
push
ret
sub
scas
xor
lods
lret
pop
mov
inc
mov
stc
sbb
inc
and
jo
in
out
inc
lret
xor
icebp
push
cmpsb
test
jmp
pop
sbb
mov
pop
sub
mov
icebp
xor
sub
inc
insl
jnp
mov
mov
sub
or
hlt
cmp
or
mov
dec
dec
pop
jns
int3
cld
xlat
sbb
bound
sub
xchg
lcall
nop
testb
inc
jecxz
cs
loope
push
loope
adc
add
jb
lcall
adc
clc
adc
test
inc
or
inc
and
aad
pusha
cli
add
pop
mov
test
mov
xor
pop
inc
jnp
jle
jbe
shl
fistl
add
xchg
xchg
dec
int
dec
pop
xor
stos
daa
das
cmp
sub
sbbb
inc
push
cld
mov
inc
mov
add
lcall
and
and
ljmp
out
out
sub
je
lds
adc
and
pop
ss
xchg
std
fidivrl
sub
sbbb
mov
lret
ja
fistpl
test
cltd
mov
out
push
and
in
mov
loope
xchg
inc
mov
pop
push
add
lds
daa
xor
mov
xchg
inc
mov
xlat
mov
jnp
into
scas
mov
inc
pop
xchg
and
jbe
ret
ret
mov
push
loope
add
sarl
imul
imul
and
jl
jl
mov
xor
jge
out
lea
fwait
and
lret
xor
or
push
rorb
fadd
popl
addr16
xchg
ret
push
and
orb
pop
mov
push
imul
out
sub
sub
add
jl
clc
lcall
aam
push
dec
pop
icebp
adc
push
jecxz
mov
xchg
popf
ret
loope
or
dec
mov
inc
cmp
push
shll
mov
fistl
jb
push
stos
into
mov
cmp
sub
test
dec
aas
and
fidivrs
xor
ss
dec
and
das
cmp
push
cld
ret
mov
pop
xchg
stos
dec
ret
int
cmp
insl
fistl
xor
push
inc
fwait
push
mov
push
push
sub
andb
cmp
in
inc
mov
cli
out
sbb
mov
lret
ja
pop
pop
push
lahf
mov
in
ret
push
mov
push
jbe
or
ss
je
fistpl
js
iret
mov
call
xchg
add
ret
or
or
xchg
pop
add
aas
and
push
or
sbb
inc
orb
rclb
in
arpl
les
dec
mov
popf
pop
and
mov
shufps
jl
mov
fcom
sbb
sbb
or
lods
mov
xchg
inc
push
adc
push
and
aaa
fwait
mov
inc
ficomps
and
std
enter
mov
jo
push
fstl
aad
mov
stos
ds
add
sbb
test
or
out
pop
mov
sub
shrl
jmp
sub
sbb
push
cmp
leave
add
ds
mov
fs
stos
mov
push
loopne
cli
lea
sar
and
pop
push
inc
rolb
decb
daa
ds
jnp
mov
cmp
in
incl
xor
sub
fstpt
xchg
insw
aas
sbb
jecxz
push
cmp
or
aad
orl
rolb
pop
loopne
fldt
les
scas
xor
jge
cmp
xchg
loop
mov
aam
mov
add
out
cmpsb
icebp
pop
movsl
test
xchg
dec
je
sub
rcrl
mov
jo
sub
sbb
sub
testb
push
andb
jg
leave
ljmp
mov
int3
scas
shlb
xor
ljmp
jno
rclb
mov
dec
cli
iret
and
cmpsb
dec
lds
and
pop
loop
jecxz
lods
fsub
cmpsb
pusha
sbb
jb
pop
gs
or
inc
xchg
iret
xchg
mov
ror
sub
push
std
inc
dec
jns
mov
ljmp
pop
adc
inc
or
xchg
pop
or
jle
loopne
pushf
adc
js
mov
stos
mov
fistpl
sarl
iret
xor
xchg
or
pop
fsubs
xor
mov
jle
sbb
sbb
sub
mov
mov
add
testb
loop
adc
mov
xchg
dec
je
adc
jmp
mov
inc
add
cmp
bound
subl
adc
add
pop
lret
push
jne
ljmp
stos
dec
sub
xlat
sub
in
cltd
lret
pop
cli
jl
orb
add
ret
out
dec
std
outsl
into
test
mov
in
sbb
out
fiadds
push
daa
out
jno
cmp
xchg
movsl
pslld
andb
mov
lods
mov
clc
js
adc
decl
push
dec
lds
pop
add
sub
cmp
icebp
je
xor
repnz
addr16
enter
inc
sub
push
cmp
je
and
sahf
inc
insl
imul
cmp
test
mov
fst
mov
enter
cmpsb
or
adc
gs
bound
add
push
ret
mov
repz
out
xlat
and
pushl
or
mov
int3
mov
and
pop
adc
pop
push
insl
les
inc
stos
push
cmc
inc
adc
lahf
call
xchg
xchg
or
daa
jns
test
orb
sbb
adc
arpl
scas
xor
add
sub
inc
jbe
jg
adc
or
jge
out
push
push
jno
push
mov
pop
in
mov
imul
lods
rorl
test
in
arpl
add
inc
bound
jecxz
pop
and
imul
mov
sub
shlb
pop
aaa
stc
or
enter
std
pop
jge
inc
mov
rcrb
outsl
std
pop
or
dec
popa
test
in
aas
and
push
sahf
sub
add
sbbb
mov
sbb
gs
dec
int3
in
ljmp
mov
push
js
inc
adc
outsl
push
mov
inc
test
scas
add
pop
inc
cmc
inc
lock
inc
fucomi
fdivr
and
mov
pop
rorl
cli
clc
cmp
aam
cwtl
xchg
roll
adc
cmpsb
and
lret
inc
stos
or
push
add
lods
enter
stos
push
mov
xchg
outsl
add
adc
outsl
dec
insl
hlt
inc
cltd
out
pop
imul
std
sbb
add
rcll
push
pop
xchg
lret
mov
bndldx
sub
pop
data16
cmpsl
add
movsb
or
stos
repz
jae
add
inc
add
int3
andb
sbb
xchg
inc
and
or
pop
mov
pop
es
jne
pop
dec
cmp
sbb
lea
add
scas
xor
mov
mov
and
jle
jmp
and
bound
test
mov
in
outsl
dec
inc
mov
mov
je
adc
jne
sub
inc
xchg
or
inc
outsl
filds
push
mov
sbbb
stos
sbb
ror
cs
mov
int
movsb
cmp
pop
rorb
loope
or
cs
sbb
es
jg
std
das
icebp
call
insl
xor
inc
pop
cwtl
cmpsl
aaa
mov
les
das
lock
sahf
rcrb
outsl
cs
ds
mov
lock
ljmp
dec
xchg
jle
imul
push
cmp
fadd
in
decl
imul
aam
aad
push
call
sbb
mov
pop
push
movsb
mov
cmp
in
mov
mov
js
subb
out
and
fldenv
scas
cmc
arpl
mov
std
out
in
in
push
incl
cli
out
jbe
test
jo
push
scas
dec
jge
fmuls
ret
cmp
xor
and
xlat
sbb
sub
lods
cmp
leave
inc
mov
mov
sbb
cld
mov
movsl
stc
test
or
cltd
mov
and
movsl
out
sbb
fimull
jecxz
cld
js
gs
insb
rcr
mov
fstpl
fiadds
cs
dec
jge
adc
int3
sub
xchg
sbb
jmp
jg
fcoms
sub
cmp
sub
mov
jp
js
mov
cmpsb
pop
std
data16
insb
xor
push
rcrl
aam
enter
roll
sub
inc
inc
mov
stos
mov
mov
mov
mov
pop
pop
or
sub
sbb
mov
lret
ds
sub
pop
xchg
loop
inc
cld
inc
pop
push
mov
nop
nop
popa
sub
rorl
sub
icebp
std
mov
fstpl
adc
mov
jmp
lods
push
mov
es
rcr
enter
dec
fstpt
bound
nop
pop
xchg
imul
jl
gs
mov
push
scas
sbb
dec
push
mov
jl
xor
push
mov
jae
inc
mov
out
jmp
ljmp
flds
pusha
dec
or
xchg
mov
pop
or
fistl
push
mov
mov
cld
adc
ret
pop
fistl
idivb
mov
sbb
jecxz
jbe
xor
fs
adc
mov
mov
orl
int3
shl
rolb
mov
mov
cmp
xchg
ja
add
mov
mov
and
mov
lods
std
ss
loopne
jge
cltd
dec
add
cld
adc
pushf
add
mov
aad
lock
mov
mov
mov
lds
adc
fildl
imul
adc
and
inc
cwtl
xchg
cmp
xor
xor
jns
fsubl
lcall
in
shll
jbe
ds
pop
maskmovq
imull
das
rol
mov
jmp
mov
mov
pop
dec
jmp
mov
pop
push
stos
mov
in
hlt
ss
std
test
push
loope
dec
dec
dec
fdivrl
cmp
pushl
jecxz
out
mov
mov
jl
fsubl
inc
in
inc
sub
mov
or
pop
js
sbb
mov
mov
test
dec
sbb
xor
shll
inc
mov
mov
adc
pushf
jno
aam
addb
movsb
sti
lock
lret
mov
mov
inc
cmp
pop
xchg
cmp
pop
notb
mov
inc
sti
mov
fstpt
inc
test
addr16
lea
popf
jl
subb
jle
pop
cmp
call
pop
and
loopne
xchg
xchg
insl
pop
fwait
inc
mov
je
pop
out
xor
pop
add
mov
leave
mov
std
and
test
nop
or
mov
xor
xchg
ret
add
faddp
in
add
push
insl
mull
int
xchg
ljmp
dec
adc
or
and
jne
loope
and
xchg
add
lds
lret
add
xor
shl
push
insb
ds
mov
push
lahf
dec
and
xor
mov
add
repz
cmpb
shr
mov
or
dec
push
insl
call
adc
fmuls
sbb
inc
xor
ja
imul
sub
hlt
sbb
nop
loope
jne
cs
ret
push
or
mov
inc
stos
mov
cmp
add
sahf
ds
and
add
popf
or
ss
imul
xor
mov
imul
mov
and
aam
sbb
inc
in
mov
jno
incl
test
add
int3
imul
mov
sbb
test
xchg
adc
sub
cmp
xor
inc
cmp
shl
cmp
sub
inc
pop
xchg
push
push
mov
fistpll
das
xchg
in
clc
arpl
f2xm1
add
pop
mov
add
mov
out
mov
mov
int
xchg
sti
pop
adc
and
xchg
pop
jge
push
adc
sub
lcall
test
test
jge
sarl
dec
sub
and
xchg
lret
pop
add
sbb
mov
add
inc
sbb
dec
push
sti
or
bound
cmp
inc
jmp
cmpsb
inc
rclb
or
fs
xchg
int
sub
mov
cmpsb
stos
jecxz
lahf
into
ss
das
repz
or
aad
and
outsl
insb
and
nop
xchg
xlat
mov
loopne
sub
fidivrs
and
pop
out
jne
adc
filds
jo
repnz
jo
test
out
mov
sti
sbb
dec
das
je
clc
mov
hlt
mov
cli
testb
mov
fisttpll
bound
test
nop
mov
dec
hlt
push
inc
xor
stos
mov
hlt
pop
add
pop
or
insl
xor
adc
add
and
btc
mov
ret
cmpsb
adc
push
lea
mov
mov
xchg
sar
push
add
iret
pushf
pop
push
push
clc
stos
push
mov
pop
movsb
insl
scas
fdivl
out
insl
movsl
lret
sbb
fucom
sbb
mov
adc
push
sbbl
call
fimull
pushf
mov
mov
sub
pop
add
out
mov
daa
jmp
mov
ret
mov
into
popa
ds
cmpsb
jne
adc
jl
add
cmp
dec
imul
aad
pop
inc
or
cwtl
mov
add
stos
mov
lcall
mov
pop
aam
fcoms
or
add
lock
push
stos
lods
mov
and
pusha
test
lret
orb
negl
inc
shlb
clc
sub
mov
pusha
and
jne
inc
fnstenv
jns
mov
jb
jp
ficoms
mov
test
mov
sbb
lock
je
hlt
pop
mov
scas
aas
out
ljmpw
ret
mov
xchg
clc
push
mov
push
or
xchg
test
push
xchg
or
push
mov
push
mov
shlb
data16
push
mov
pcmpgtb
fcmovnbe
mov
add
xchg
or
aaa
inc
lret
imul
cmc
pop
cmp
or
out
adcl
jge
dec
in
rcrb
mov
xchg
mov
pop
test
sbb
ret
and
mov
ss
mov
cmpsl
lea
fwait
mov
sbb
and
std
fstl
outsl
pop
dec
add
inc
fs
mov
jle
add
fcomp
xchg
out
mov
xor
cmpsb
mov
jp
pop
cmp
sarb
mov
lock
sbb
jnp
int
sbb
test
gs
adc
daa
data16
aaa
push
lds
lds
add
aaa
sbb
dec
int3
fmuls
fwait
cmp
adc
or
cmp
sub
hlt
fwait
adc
mov
inc
ljmp
mov
push
mov
stos
jecxz
pop
push
mov
sbb
mov
clc
mov
loopne
stc
mov
fisubrl
outsl
pushl
inc
call
jmp
or
adc
mov
dec
icebp
cwtl
sub
sub
push
inc
aaa
xchg
aad
mov
adc
mov
or
jno
movsl
out
into
jg
in
outsl
and
push
inc
inc
decl
scas
jbe
inc
push
loop
jne
btc
push
lock
mov
std
lods
ljmp
sbb
adc
subw
daa
jecxz
std
sar
cmp
dec
push
adc
push
xor
cmpl
mov
in
arpl
mov
sbb
adc
xchg
fidivs
cmp
cmp
ss
mov
sbb
dec
inc
pop
jmp
shrb
jmp
push
aam
cmp
movl
out
into
or
inc
dec
or
mov
push
pop
lock
imul
inc
cmp
shll
adc
jge
pushf
mov
mov
mov
dec
ficomps
xor
sbb
std
aaa
mov
xor
leave
arpl
scas
ss
and
clc
test
adc
jecxz
or
xor
leave
int3
outsl
sahf
mov
sbb
nop
clc
pop
test
bound
test
daa
adc
dec
pop
stc
add
popf
aad
jnp
jg
aad
push
and
pop
sub
rclb
sub
fdiv
adc
mov
inc
jno
lods
dec
cmp
flds
lds
loope
mov
dec
jge
push
mov
dec
or
xchg
pop
or
push
imul
aas
fcmovb
pop
loope
popf
and
in
pop
jge
fbstp
daa
mov
scas
pop
mov
push
test
cmp
insb
and
push
repnz
inc
mov
pop
push
push
xchg
jnp,pn
pop
icebp
pop
mov
push
mov
dec
out
nop
sbb
in
bsf
push
mov
jo
fstl
addr16
mov
jae
xchg
push
insl
mov
xchg
pop
xor
inc
add
push
pop
rol
jo
jnp
or
mov
push
push
jbe
shrb
mov
jno
dec
xor
adc
pop
pop
ss
lods
jns
mov
ret
mov
sbb
sti
pop
mov
js
xor
jp
ljmp
repz
lcall
cmpsb
push
pusha
cmp
outsl
jb
rcr
pop
lahf
mov
add
cs
or
aad
and
cmp
sar
xchg
mov
cmp
cli
push
pop
in
sbb
mov
sbb
or
xchg
or
inc
je
push
jecxz
add
xchg
loopne
loope
pop
sub
cmp
gs
out
push
mov
das
aas
mov
lahf
int3
lods
inc
fs
movsl
mov
xchg
lea
jp
push
inc
insb
xor
enter
icebp
jecxz
aaa
js
and
icebp
jl
add
test
gs
xchg
mov
add
push
sub
sbb
movsb
shlb
ret
fwait
and
jl
sbb
inc
dec
sbb
cs
jmp
in
aaa
mov
mov
mov
jnp
mov
aad
pop
pusha
lods
out
sar
loope
mov
movsb
dec
std
mov
outsl
push
fmuls
and
inc
jmp
ret
pop
push
sbb
mov
push
shlb
dec
and
mov
test
xor
sbb
xor
bound
pop
sub
outsl
mov
fdivs
lret
shrb
push
jg
test
nop
jne
pop
ss
enter
xorb
and
in
add
aas
stos
shll
push
sub
jns
jge
cmp
cmp
inc
loopne
sbb
ffree
loopne
push
mov
jno
adc
mov
lods
sub
mov
aaa
xor
adc
mov
or
xor
push
cltd
sbb
xchg
xchg
outsl
or
test
aam
inc
mov
dec
sbb
cmp
outsl
outsl
insb
ljmp
dec
mov
js
fisubl
cmp
sbbb
jb
push
push
or
sti
mov
dec
sbb
mov
scas
push
fwait
jle
mov
test
push
lock
add
sub
shlb
inc
mov
adc
add
stos
stc
push
dec
mov
jle
add
fnstcw
sar
fwait
cmp
cmpsb
cmp
cmpsb
dec
test
icebp
fisttpll
adc
call
cwtl
cld
sbb
cmp
cmpsb
pop
xorb
mov
pop
xor
ds
push
or
cmp
cmovo
fistpll
sbb
inc
mov
shrb
call
xchg
jne
xchg
outsb
jno
lds
xor
mov
bound
call
inc
push
xchg
test
mov
scas
push
dec
and
ja
mov
movsl
push
sbb
xor
test
das
nop
mov
gs
inc
mov
push
bound
lcall
pop
ret
and
lahf
or
mov
mov
into
ljmp
push
stos
and
mov
insb
cmp
mov
or
loope
pop
cmp
dec
mov
gs
or
outsl
xchg
mov
mov
and
jle
pop
mov
fidivrs
xchg
arpl
add
jmp
movsb
sbbb
rolb
stc
or
xchg
push
je
cs
and
add
fs
les
rcl
adc
pop
mov
cmp
hlt
inc
jecxz
lcall
jle
loope
test
enter
ret
xchg
ds
push
inc
movsl
fwait
mov
ret
and
jbe
sub
mov
mov
lret
js
adc
ret
and
std
xlat
push
pop
rclb
jns
and
insb
mov
mov
repnz
push
and
sahf
push
leave
pop
in
mov
aaa
aam
or
popa
push
std
imul
mov
cmpsl
test
sarb
push
lods
aam
xchg
push
cmp
fists
test
or
sbb
push
out
addb
sbb
outsl
fdivs
rcr
inc
mov
mov
nop
mov
ja
mov
xchg
dec
out
dec
mov
call
jg
jge
fists
movnti
loope
cli
clc
push
pop
adc
and
or
jbe
jae
and
call
cmc
fistps
cli
or
mov
daa
idivl
ret
xchg
out
adc
inc
sub
add
add
lods
push
xor
inc
mov
cmp
cmpsl
cmp
insb
fldt
and
sbb
push
inc
stc
pop
push
push
or
jg
pop
lcall
loop
fwait
scas
andl
fs
inc
int
fisttpl
or
rcl
mov
xor
mov
mov
add
add
call
xchg
aam
jne
out
sub
lea
xchg
lret
mov
xor
add
adc
xlat
mov
js
jmp
daa
cmp
imul
push
out
test
loopne
shrb
adc
push
jl
sub
incl
add
or
lods
inc
lret
rcrl
loope
adc
cmpsb
and
sbb
outsb
pusha
std
shr
pushf
jnp
ss
mov
push
leave
lds
stos
call
icebp
sbbb
in
mov
imul
adc
fnstsw
mov
or
push
jecxz
xor
pop
imul
sahf
adc
or
push
nop
push
icebp
enter
std
decl
ljmp
mov
sbb
dec
xor
xchg
fadd
mov
addr16
popa
in
testl
xor
shll
dec
fists
decl
adc
dec
mov
sub
ret
sti
xor
or
lcall
mov
cmp
xchg
jo
mov
sub
cmp
jle
pop
jg
or
scas
lret
and
jecxz
mov
cld
lahf
adc
pop
aas
dec
icebp
sbb
aad
lods
ljmp
sbb
repz
in
cmpb
incl
stos
fdivl
push
and
jne
mov
out
out
jno
lock
cmc
mov
mov
nop
cld
ret
outsl
xor
pop
loope
cmp
push
call
mov
adc
pusha
adc
push
mov
pop
lahf
rolb
daa
push
cmp
aaa
sub
bound
addb
iret
xor
xor
insb
mov
aaa
xorb
pusha
imul
lretw
xchg
das
je
mov
cli
pop
adc
sub
or
add
fisubrl
int3
mulps
sar
inc
inc
jl
xlat
addr16
or
pop
xchg
mov
jp
dec
addr16
outsb
cmpsl
sbb
mov
cmp
adc
mov
mov
dec
add
pushf
jl
sbb
orl
outsl
push
jb
dec
repz
pop
xor
movsl
add
lcall
mov
xchg
mov
add
std
add
inc
add
add
addr16
das
sarb
iret
cmpsb
cs
je
sahf
es
lcall
sub
or
nop
jmp
orl
cs
and
xchg
adc
inc
jae
cwtl
mov
sbb
out
stc
adc
jno
das
mov
std
mov
adc
xchg
shl
xchg
ret
or
in
fwait
mov
pop
call
cmpsb
add
push
fnstenv
push
dec
sub
jg
lcall
outsb
sbb
xor
wrmsr
jle
sub
xorb
xchg
mov
movsl
mov
mov
outsb
clc
ja
cmp
cs
jl
cmpsb
rol
or
outsb
xor
push
cmpsb
add
sti
xchg
clc
movsl
cmp
or
test
add
mov
mov
add
xlat
jl
and
daa
ficoml
sbb
sar
mov
jmp
and
pushf
cmpsb
adc
test
pop
fisubrl
mov
out
filds
pop
jecxz
std
ja
mov
pop
xchg
xchg
cmpsb
data16
jg
sub
aaa
les
js
cmp
in
pop
shll
fsubrs
push
push
mov
xchg
imul
mov
sbb
test
xlat
jns
or
icebp
dec
mov
inc
push
cwtl
nop
jne
das
std
jg
xchg
xor
mov
xor
dec
stos
and
mov
mov
shlb
incl
add
sbb
xlat
pushf
push
dec
jne
mov
fcoms
mov
sbb
pusha
frstor
and
push
inc
adc
dec
add
dec
mov
jnp
out
push
jge
mov
sbb
push
pop
and
inc
adc
bound
jl
xchg
pop
xchg
inc
movsl
pop
loop
shl
xchg
dec
into
and
xor
mov
call
call
mov
call
mov
call
out
cmpsl
mov
clc
fdiv
rorb
stos
mov
outsl
cmp
rcr
loopne
adc
adc
sub
xchg
pop
add
xlat
cmp
std
test
pop
fwait
decl
ss
inc
cs
loopne
mov
ljmp
add
insl
std
jg
push
mull
movsb
fiadds
mov
mov
jne
cmp
clc
sub
jne
imul
adc
loopne
push
sti
xchg
adc
or
pop
aad
rcrl
push
push
seto
mov
or
dec
and
movb
lea
mov
and
gs
and
jmp
cmp
pop
xchg
jbe
xchg
shlb
fdivrs
inc
or
ds
imul
mov
inc
fiadds
outsb
mov
loope
pop
jmp
loop
or
adc
lret
add
mov
xor
mov
stos
sub
pop
popa
cmc
inc
cmc
daa
pop
adc
out
cmp
push
sub
sar
aas
sbb
repnz
push
dec
les
fsubs
scas
and
or
add
loop
sbb
mov
push
aad
jg
jo
push
xchg
xchg
aam
rol
fbstp
inc
out
ret
ja
popf
punpckhdq
push
test
pop
xchg
repz
pop
adc
push
jnp
xorb
pushf
inc
sub
das
inc
mov
mov
add
aas
mov
addr16
inc
fsubr
push
fs
cltd
sbb
or
sub
sub
shlb
jg
clc
cltd
dec
ret
jge
mov
int3
jmp
xchg
mov
pop
sub
jecxz
adc
into
pop
mov
pop
in
jl
jl
pop
inc
mov
cmpl
lods
hlt
rol
scas
add
js
inc
repz
clc
aaa
jbe
cld
icebp
in
daa
mov
icebp
or
pop
xchg
pop
xor
movsl
aad
pop
inc
mov
jle
je
pop
pushf
call
mov
adc
unpcklps
outsb
fsubl
fisttpll
sbb
test
ret
es
scas
dec
xchg
cmp
and
jmp
push
mov
push
adc
sub
insl
cld
pop
push
cmp
popa
fnsave
pop
mov
pop
fcmovnbe
lea
gs
adc
cmp
pop
sub
aas
popa
or
rolb
pop
nop
icebp
lret
mov
push
and
in
ljmp
dec
add
adc
pop
jnp
ja
ret
add
sbb
sbb
and
jp
jbe
bnd
insl
cwtl
popa
and
call
push
scas
mov
add
xchg
push
cmp
inc
cmp
xchg
aas
out
outsl
push
jge
ret
xlat
adc
test
pop
xlat
pop
mov
ss
adc
loope
adc
in
jle
add
int3
orb
pushl
xchg
gs
sbb
jmp
pop
xor
sti
xor
xchg
push
and
mov
inc
mov
into
mov
aas
ja
outsb
hlt
pop
rcrl
rcrl
push
push
push
or
mov
shlb
and
mov
inc
inc
pop
call
push
sub
xor
add
sbb
mov
mov
lcall
leave
lahf
stos
pop
rclb
dec
push
or
and
cmpsb
sub
push
xchg
mov
outsl
test
test
and
loope
mov
add
imul
mov
xchg
stos
mov
in
movsb
pop
or
fwait
sbb
push
mov
cmp
pop
aad
pop
sub
ret
adc
out
jmp
aam
jle
sbb
jno
vmwrite
adc
jns
paddw
pop
and
sub
nop
mov
int3
enter
data16
scas
je
dec
inc
push
pop
mov
pop
lods
adcb
test
jge
jns
int3
add
mov
and
frstor
mov
mov
scas
sti
sub
cmpb
push
lods
test
js
inc
sahf
adc
pushf
jnp
jne
nop
add
push
aaa
jp
lcall
mov
cmc
push
dec
add
ja
fiaddl
js
push
mov
aam
sbb
add
mov
rorl
clc
xchg
mov
xor
add
push
and
jo
jno
jbe
fstpt
rcl
or
enter
pop
data16
or
xchg
ljmp
sub
ret
sub
stos
in
in
pushf
sbb
adc
divb
or
test
in
mov
pushf
xorb
sbb
or
ret
or
dec
or
mov
ss
mov
mov
mov
mov
movsl
mov
aam
jmp
clc
fldl
pop
push
adc
or
loop
test
lret
shrb
inc
inc
xor
orl
les
cmpsl
add
daa
lods
ret
insl
add
pusha
dec
or
rcrb
loope
jno
cmp
dec
and
sub
js
or
roll
ret
ret
mov
mov
cmpsl
cwtl
mov
pop
jmp
jne
jg
fwait
out
mov
test
test
xor
pmulhuw
add
outsl
loop
push
test
push
pop
decl
mov
inc
push
mov
nop
mov
cmpsl
or
xchg
subb
hlt
aaa
mov
xor
mov
pushf
jg
aad
scas
mov
out
adc
sub
inc
push
pop
sbb
jmp
or
add
fwait
sbb
mov
aam
sub
mov
sub
outsl
add
call
adc
pop
sub
test
lea
sbb
lcall
jp
and
push
adcb
inc
cmp
cli
bsf
das
ds
or
and
mov
bound
adc
jmp
repz
cld
call
shlb
pop
ljmp
popl
jae
outsl
fnstenv
cs
rcll
sub
and
add
ret
out
insl
cmp
sarb
inc
sub
in
adc
int
dec
pop
mov
test
movzwl
mov
ja
bound
adcb
ret
adc
jb
xchg
sbb
outsl
adc
insl
dec
js
mov
jle
outsb
int3
sahf
and
mov
leave
testb
jl
sti
movsl
and
cmpb
std
push
and
or
lea
fidivrs
inc
imul
lods
lahf
jbe
ret
pop
fdivr
imul
cmp
adc
and
and
inc
mov
icebp
stos
insl
push
lahf
adcl
mov
dec
shrb
imul
inc
dec
sbb
mov
js
push
outsl
test
xchg
or
lods
fwait
push
and
jmp
xor
scas
shlb
xor
loopne
jl
jns,pn
xchg
mov
lahf
adc
fbld
sti
inc
jb
push
cmpxchg
sbb
sbb
pop
sbb
pop
push
pusha
jg
pop
add
inc
mov
dec
inc
ja
les
cli
cmpsl
jmp
mov
stos
jns
pusha
pop
lods
movl
mov
in
jae
jecxz
or
ja
jecxz
in
pop
jg
xor
cli
mov
lods
cwtl
insl
lock
sysenter
ss
pop
pop
push
sti
sbb
adc
dec
enter
mov
mov
clc
imul
push
inc
filds
inc
mov
mov
popl
lcall
std
mov
dec
stos
or
pop
mov
pop
add
in
or
cld
nop
pop
mov
pop
dec
cmc
cmp
arpl
mov
outsl
lods
out
shrb
jl
jo
xlat
adc
mov
or
xchg
test
sbb
js
fmull
jnp
test
fisttpl
scas
mov
mov
sbb
mov
pop
adc
adc
and
loope
mov
outsl
dec
shll
sub
aaa
incb
pop
test
arpl
push
bound
pop
push
cld
mov
scas
adc
cmc
lret
lea
and
testb
shlb
sub
inc
fisttpll
mov
jl
shlb
pop
out
push
xchg
jmp
add
sahf
je
leave
sub
sti
push
jnp
scas
cmp
inc
xchg
outsl
xor
mov
jp
scas
xor
xchg
ret
push
inc
fistpl
lahf
pusha
sub
call
leave
pushf
int3
cwtl
pop
movsl
andl
sbb
pop
dec
or
fsubrp
mov
icebp
and
push
inc
jp
adc
sti
push
mov
jo
in
loope
fimull
sub
data16
push
test
cmp
jecxz
pop
test
orb
outsl
dec
jg
ljmp
cltd
lret
pop
mov
lcall
idiv
xlat
cmp
sbb
jns
or
bound
mov
xorb
imul
imul
enter
or
repnz
mov
mov
loop
ja
fimuls
das
js
jo
mov
cmp
mov
mov
pop
je
es
cmp
clc
int
cs
add
rcll
lods
int3
fmulp
andl
pop
scas
mov
or
call
inc
incl
add
test
xchg
jg
push
push
shl
pushl
jg
or
xchg
jbe
cmp
mov
std
add
cmp
mov
mov
fs
popa
rcrl
test
ljmp
jge
jg
scas
sbb
mov
mov
mov
and
lods
pop
cld
pop
push
add
leave
movsl
or
cmp
icebp
decl
sub
call
or
cmpl
stc
and
sbb
or
push
icebp
js
xor
in
sub
jmp
adc
mov
fsubp
jg
fistps
inc
sub
loopne
addr16
loope
outsb
movsl
cwtl
cmpsl
pop
jge
cmc
popa
mov
rcrl
cmp
incl
mov
shll
jmp
movsb
mov
mov
xor
jg
xor
mov
mov
ret
loope
jg
fwait
lcall
test
sti
rcll
loop
movsl
jg
jo
aam
xchg
mov
xor
shlb
shlb
fdiv
arpl
cld
inc
fildl
inc
add
dec
inc
cmp
frstor
mov
decl
xorb
test
jecxz,pn
mov
int
cltd
push
inc
movsb
jle
push
int
sahf
pop
mov
stc
push
lret
push
aaa
fcomps
pop
cmpsb
push
xor
scas
popf
xchg
dec
pushf
les
add
daa
xchg
imulb
repz
sub
cmc
out
in
adc
mov
sub
ret
out
adc
aas
sbb
lods
mov
xchg
pusha
sub
aad
lret
xchg
pop
cmp
and
shll
or
or
out
icebp
lds
mov
sbb
pop
xor
sub
mov
and
scas
pop
scas
incl
inc
mov
sbb
push
sub
les
mov
sub
repz
les
add
cli
xchg
jmp
add
aas
cmp
ljmp
jb
xchg
pop
fcompl
push
xchg
and
mov
sub
add
lea
sub
xchg
cmp
imul
and
in
aaa
jnp
mov
ror
enter
out
mov
inc
lahf
fs
test
or
clc
cmc
in
mov
out
les
cli
or
xchg
pop
mov
adc
mov
push
test
push
jb
popa
xor
jns
rcl
popa
stos
mov
scas
xor
sub
fiadds
xlat
stos
jo
bound
out
ror
pop
scas
or
out
popa
adc
fwait
sbb
pop
aaa
orb
sub
mov
or
rorb
adc
mov
lahf
cmp
ja
leave
push
fs
cmp
dec
lahf
aaa
and
subl
ret
xchg
fisubs
inc
leave
jo
fcoms
push
cmpsl
xor
in
add
outsb
mov
test
sbb
or
mov
cwtl
pusha
loope
outsl
dec
push
xchg
sub
shr
ss
jnp
jl
mov
les
mov
adc
mov
fidivrl
dec
fs
adc
sub
outsl
inc
lods
ljmp
bound
xchg
test
jp
imul
or
jecxz
jbe
mov
mov
cmp
sti
enter
out
jmp
mov
movsl
mov
test
mov
lods
add
jbe
in
or
mov
cwtl
rorl
iret
int3
aad
push
add
mov
repnz
mov
mov
jge
shlb
rorl
xchg
fcoms
xchg
ss
and
jp
in
push
sub
arpl
mov
enter
mov
pushf
fwait
mov
add
mov
movsb
cmp
dec
jo
jnp
aam
fimuls
lahf
fsubrl
std
pop
sarb
xchg
mov
mov
cmp
push
and
xor
lahf
fsubs
cmp
test
sbb
xor
or
xor
cmp
inc
test
sbb
int
fistl
push
push
aaa
lcall
stos
or
loop
dec
jnp
mov
test
xlat
or
mov
shl
fstl
test
cmp
add
adc
or
stos
fstpl
xor
and
jl
mov
mov
sub
mov
clc
das
adc
cmp
shlb
or
sbb
mov
push
aas
test
dec
enter
inc
push
cwtl
xor
pop
mov
insl
pop
sbb
mov
mov
insb
push
cmpb
insl
or
sbb
mov
outsb
js
push
push
ret
push
pop
sbb
decl
and
shlb
sub
ss
mov
mov
cmpsb
shrb
scas
mov
or
dec
mov
fstl
sbb
xchg
mov
fistps
sbb
mov
xchg
sar
bound
lock
shlb
or
ja
rolb
aaa
jbe
insl
add
fwait
popa
inc
jl
aam
call
sbb
leave
mov
xchg
inc
repnz
push
les
clc
shrb
or
and
rorl
lods
mov
or
shr
ret
iret
pop
cmp
dec
sub
cld
rclb
mov
cmp
sti
adc
fwait
mov
mov
cltd
mov
repz
mov
jo
push
out
ret
shlb
shll
aam
fninit
add
int3
xor
pushl
xlat
lcall
stc
adc
lea
mov
pusha
or
xchg
dec
xor
mov
push
push
sub
shl
mov
sub
xchg
cmp
sahf
or
and
cli
pop
adc
lret
dec
push
mov
mov
clc
fwait
rol
mov
xchg
xor
lods
hlt
out
sar
ss
jecxz
loope
or
cmp
icebp
mov
mov
outsl
out
loopne
scas
jo
xchg
add
loop
addb
dec
stos
xchg
lcall
cli
jns
std
dec
movsb
adc
xlat
and
nop
push
ljmp
loop
pusha
pop
jne
cmc
add
mov
inc
cmp
and
aas
test
lcall
pop
sub
movsb
xchg
sbb
jmp
outsl
push
dec
test
inc
push
pusha
and
add
test
mov
add
mov
fdiv
int3
icebp
jns
data16
adc
sub
fisttps
test
cmp
mov
fprem
sbb
xorl
cmp
in
mov
push
xchg
enter
push
mov
ss
mov
mov
cmp
in
inc
add
sbb
push
sarb
lock
loopne
ret
cmp
mov
cmp
cmpsl
in
ljmp
cmp
arpl
xor
es
aaa
mov
hlt
mov
push
in
nop
inc
cwtl
je
out
jae
or
and
cmovae
lret
xorl
lock
ret
aad
test
andl
aaa
or
mov
inc
das
add
test
lcall
inc
ret
dec
jae
adc
sbb
fbld
xchg
into
shlb
jl
mov
push
inc
and
sti
cwtl
daa
jbe
push
mov
loope
mov
cmp
pop
sbb
mov
and
aam
xor
and
sbb
xchg
push
lds
or
outsl
sub
arpl
xor
movsl
sub
add
dec
add
mov
jg
pusha
rolb
add
jo
imul
insb
gs
in
mov
inc
or
inc
inc
inc
push
dec
gs
fs
jns
sbb
mov
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
je
fnsave
jne
cmp
pop
push
outsl
push
je
adc
push
gs
or
push
push
insl
fsin
dec
imul
inc
inc
aas
imul
cmp
gs
pop
push
popa
popa
bound
insb
outsl
bound
push
imul
inc
gs
jne
jae
imulb
popa
jge
inc
mov
je
arpl
arpl
inc
adc
mov
in
jns
outsl
ret
arpl
cmp
jns
lea
mov
push
outsb
popa
arpl
inc
in
lods
imul
scas
inc
xchg
ds
js
test
fcoms
gs
imul
inc
dec
inc
push
fsubrs
jne
mov
jae
push
inc
push
inc
adc
adcl
fs
or
cmp
test
cmovno
movsl
insl
pusha
sbb
cmp
lods
dec
xchg
jae
insb
popa
jns
jae
dec
incb
jo
push
pop
outsl
ja
inc
inc
inc
insb
push
pop
mov
adc
add
int3
mov
inc
insb
icebp
jl
arpl
adc
fnstenv
mov
push
inc
add
out
sbb
loopne
sidtl
add
add
adc
xorb
rorb
inc
or
jmp
add
ficomps
jo
or
mov
ja
dec
ss
push
add
and
cmp
inc
das
inc
sub
mov
xor
inc
jbe
add
je
xlat
repz
mov
jb,pn
das
fmuls
sti
and
add
inc
js,pn
add
xor
cmpsb
push
loopne
in
sbb
mov
loope
sub
into
inc
lahf
jmp
inc
push
jbe
xlat
popf
ffree
dec
sub
sub
fidivl
cmpl
arpl
sub
insb
lahf
cs
add
add
clc
ja
sarl
and
add
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
orb
add
mov
add
add
add
sbbb
add
add
sbbb
add
loopne
add
add
pop
add
add
mov
add
fadds
add
add
add
sub
add
push
add
cmp
add
js
add
add
add
or
add
mov
add
or
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
or
add
add
pusha
mov
add
or
add
mov
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
clc
add
addb
add
or
add
add
add
add
or
add
add
add
add
mov
add
mov
add
fadds
add
add
adc
add
sub
andb
add
js
add
mov
push
add
enter
add
add
sbb
add
inc
add
add
push
pop
add
nop
add
add
mov
push
add
loopne
add
or
add
xor
add
pop
push
add
addb
sbbb
add
rolb
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rolb
adcb
add
call
pop
add
adc
add
cmp
add
pusha
or
xor
add
mov
add
mov
add
fmuls
add
add
add
sub
add
add
add
or
add
add
adc
add
or
add
or
add
lods
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
add
or
add
add
subb
add
add
add
add
add
lods
add
adc
add
or
add
lods
add
or
add
or
add
add
add
lods
add
adc
add
or
add
add
add
adc
add
or
add
add
add
adc
add
or
add
add
or
add
or
add
scas
add
adc
add
or
add
scas
add
or
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
push
add
add
add
add
push
add
jo
add
adc
add
or
add
add
mov
add
or
add
add
pushf
scas
add
adc
add
or
add
scas
add
or
add
add
add
add
push
add
enter
adc
add
or
add
push
add
loopne
add
adc
add
or
add
pop
add
clc
scas
add
adc
add
or
add
pop
add
adc
add
or
add
add
sub
add
or
add
scas
add
adc
add
or
add
scas
add
adc
add
or
add
pop
add
insb
scas
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
add
add
pushf
scas
add
adc
add
or
add
add
mov
add
or
add
or
add
scas
add
adc
add
or
add
or
add
scas
add
adc
add
or
add
or
add
scas
add
adc
add
or
add
or
add
add
adc
add
or
add
add
sbb
add
or
sub
sti
add
add
pop
add
enter
je
add
lock
sub
add
sbb
add
inc
or
andb
add
push
push
add
nop
or
subb
add
mov
add
add
or
orb
adcb
add
xor
sub
add
pop
or
subb
add
add
add
rorb
cmp
add
clc
or
xorb
add
and
add
dec
or
add
jo
add
cwtl
or
add
rorb
add
or
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
sldt
js
add
mov
add
add
sldt
lock
sbb
add
inc
adc
sub
add
push
pop
add
nop
adc
addb
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
js
add
or
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
add
add
or
add
mov
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
call
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
sldt
add
add
add
add
add
or
add
sldt
add
add
add
add
add
or
add
adc
add
or
add
add
xorb
add
add
add
add
add
mov
add
add
or
add
mov
add
add
or
add
or
add
or
add
add
add
add
push
add
shlb
add
or
add
push
add
in
add
or
add
or
add
add
hlt
mov
add
add
add
add
add
add
or
add
adc
add
or
add
mov
add
add
add
add
add
push
add
cmp
add
adc
add
or
add
push
add
push
mov
add
add
add
add
add
sldt
pusha
mov
add
add
or
add
add
jo
add
adc
add
or
add
add
mov
add
or
add
mov
add
add
add
add
add
mov
add
add
add
add
add
sldt
enter
or
add
or
add
adc
add
mov
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
or
add
or
add
mov
add
add
add
add
add
mov
add
add
or
add
adc
add
add
push
add
add
add
add
add
or
add
adc
add
add
lahf
add
add
push
add
addb
nop
dec
add
add
push
add
rclb
push
and
add
xor
add
adc
add
cmp
add
inc
or
add
add
add
adc
push
or
add
dec
push
add
and
add
push
push
add
add
add
add
add
sub
add
popf
add
add
add
add
add
add
add
add
add
mov
incl
mov
filds
mov
incl
ljmp
add
outsl
filds
mov
filds
mov
incl
mov
filds
idivl
add
jle
add
outsb
filds
imull
add
filds
mov
jg
add
outsb
incl
mov
jle
add
incl
std
filds
mov
jg
add
incl
mov
out
incl
ljmp
add
out
incl
mov
incl
mov
filds
idiv
incl
mov
filds
std
jg
add
out
incl
std
outsl
filds
imul
filds
mov
incl
mov
outsb
filds
jg
add
jle
add
jg
add
outsl
incl
incl
mov
out
incl
mov
outsl
incl
mov
outsl
incl
std
outsl
filds
std
jle
add
out
incl
mov
filds
mov
out
filds
mov
filds
mov
incl
mov
filds
jg
add
out
filds
mov
filds
mov
jle
add
filds
jle
add
outsb
filds
std
jle
add
out
incl
mov
filds
mov
outsb
filds
cmc
jle
add
outsb
incl
out
filds
mov
incl
mov
jle
add
out
filds
mov
filds
mov
incl
std
outsb
filds
mov
incl
mov
outsl
filds
mov
out
filds
mov
incl
idiv
incl
cmc
jg
add
filds
jg
add
out
incl
mov
incl
jle
add
incl
cmc
out
incl
mov
incl
mov
outsl
incl
mov
filds
mov
filds
idivl
add
out
filds
std
out
filds
cmc
out
incl
mov
incl
cmc
out
filds
mov
filds
idivl
add
out
filds
imul
incl
cmc
outsb
filds
mov
incl
imul
filds
cmc
out
incl
out
filds
cmc
filds
incl
mov
filds
mov
jle
add
outsl
filds
mov
filds
mov
outsb
filds
cmc
jle
add
jg
add
incl
mov
filds
cmc
outsb
filds
mov
out
filds
jle
add
outsl
incl
std
incl
mov
filds
idiv
incl
mov
outsl
filds
idivl
add
out
incl
cmc
outsb
incl
mov
filds
mov
incl
cmc
incl
incl
cmc
outsl
filds
mov
outsl
incl
idiv
incl
idivl
add
filds
idiv
filds
mov
jg
add
incl
std
filds
std
out
incl
cmc
out
incl
mov
incl
incl
mov
out
filds
filds
std
outsb
incl
mov
incl
ljmp
add
incl
idiv
incl
mov
incl
std
out
filds
mov
jg
add
outsl
filds
std
jg
add
out
incl
cmc
out
incl
mov
jle
add
out
incl
mov
out
incl
idiv
incl
mov
jg
add
outsb
filds
out
filds
mov
incl
mov
incl
mov
outsl
filds
out
incl
std
jle
add
outsb
incl
std
jle
add
incl
jle
add
outsl
incl
mov
jle
add
jle
add
filds
filds
cmc
jle
add
outsb
filds
out
filds
cmc
out
incl
imul
incl
mov
jg
add
outsl
filds
std
incl
ljmp
add
filds
jle
add
outsl
filds
idivl
add
jg
add
filds
mov
filds
cmc
jg
add
out
filds
std
jg
add
out
incl
jle
add
mov
aaa
pop
push
je
arpl
jp
cli
popa
out
scas
loope
mov
fisubs
insb
dec
pop
popf
jge
adc
push
fisubrs
insb
je
inc
outsb
subl
lock
mov
scas
fwait
inc
fistpll
or
xchg
sub
jl
addr16
add
lcall
jmp
dec
push
cmp
ficoms
jmp
pushf
jg
ljmp
and
mov
ja
std
xor
push
cwtl
xchg
into
jg
cmp
popa
dec
add
fidivrl
jmp
popa
ds
popf
adc
lcall
xor
fnstcw
jle
js
jg
or
ffreep
sub
insb
push
xor
inc
movsb
movsb
jno
sbb
jmp
pop
es
into
movsd
dec
mov
fsubl
bound
push
cld
cli
inc
adc
cmpsl
mov
cmpsl
cmp
push
or
shll
inc
dec
leave
xor
lea
xor
push
repz
lcall
dec
or
jbe
fstpt
xchg
cmp
or
xchg
iret
cld
inc
call
insl
dec
aad
bound
cmp
test
ss
in
jns
pop
shll
mov
mov
sub
stos
add
push
roll
cmc
pop
cmpsb
orl
xchg
jne
xor
test
repnz
jp
sub
or
repz
faddl
imul
in
lds
adc
rcrb
pop
adc
roll
clc
lods
and
pop
fdivrl
int
movsl
add
fdiv
sahf
xor
sar
sbb
maskmovq
negl
xchg
into
inc
inc
ret
sbb
sbbl
iret
push
addb
movsl
and
out
xchg
je
jo
or
lahf
jb
mov
cmp
enter
mov
mov
sub
dec
mov
fdivr
mov
pop
push
icebp
mov
push
lret
mov
sbb
sbb
movsb
xlat
xchg
mov
mov
jle
jmp
testl
jge
insb
and
sub
push
fisubs
add
add
out
dec
add
aaa
cld
sbb
daa
or
adc
movb
daa
push
mov
and
les
xor
mov
int3
mov
outsl
jbe
lcall
push
dec
pop
and
repnz
les
and
test
cld
adc
dec
jecxz
push
xor
xchg
fimuls
adc
mov
add
add
test
ss
push
jo
ds
faddl
add
push
jo
adc
mov
xor
mov
lods
lret
cltd
je
push
ds
sbb
add
add
lcall
orb
negb
xor
lea
je
std
or
cmp
in
repz
inc
dec
add
enter
aad
pop
jmp
or
cmpsb
lahf
mov
mov
dec
add
jno
dec
xorl
jecxz
xor
or
mov
cmpsl
push
rolb
lahf
jne
daa
lret
ss
jmp
aaa
jge
ljmp
int
and
xor
inc
ret
shrb
cmp
test
and
adc
add
add
fucom
fcompp
push
sbb
jg
stos
pop
scas
jbe
xor
add
xchg
dec
in
pop
dec
in
out
pop
sub
call
sbb
scas
pop
pushf
add
mov
popa
stos
mov
lret
ljmp
fs
adc
iret
pop
ds
sub
add
andl
les
mov
xor
in
ljmp
in
out
dec
clc
stc
sub
adc
aam
fsubrp
sbb
xor
push
lret
cld
push
or
sub
addl
pop
add
add
pop
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
bound
add
insb
add
outsb
add
and
inc
add
jb
jo
add
add
adc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
outsb
add
add
add
popa
add
jae
and
inc
add
popa
add
add
add
imul
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
imul
add
add
and
push
add
jae
add
add
add
jo
add
add
add
imul
push
add
jne
imul
add
add
pop
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
jo
add
add
add
add
add
add
jne
je
and
xor
xor
xor
xor
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
popa
add
jae
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
outsb
add
add
add
add
add
add
imul
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
pop
add
add
push
adc
xor
add
clc
pop
add
mov
or
add
and
add
add
addb
or
and
and
or
or
add
sbb
add
xor
test
add
and
add
and
or
inc
mov
add
dec
inc
inc
or
mov
inc
add
add
and
adc
mov
dec
or
add
push
pop
add
add
dec
dec
adc
push
adc
add
add
push
addl
add
add
add
inc
or
inc
add
mov
or
addb
mov
add
add
test
adc
xor
add
xor
inc
inc
inc
add
inc
mov
or
add
mov
add
inc
and
or
addl
add
add
pop
add
subb
add
or
nop
nop
addb
aam
add
nop
dec
orl
addb
and
add
in
add
adc
or
sub
dec
nop
adc
add
pop
add
inc
and
add
sub
add
add
mov
add
add
or
xor
adc
and
pop
add
or
add
or
add
pop
add
nop
dec
add
test
add
add
add
add
or
add
nop
sub
and
or
add
add
add
add
or
add
addb
and
adcb
pop
add
add
nop
and
inc
mov
xor
nop
test
or
add
add
add
add
and
add
and
pop
add
and
mov
add
add
andb
or
adc
pushf
pop
add
or
orb
rolb
and
xor
add
mov
add
or
add
dec
nop
addb
add
add
addb
add
and
dec
xor
aam
add
and
nop
mov
add
add
pop
add
addb
adc
or
or
add
or
nop
sub
or
pop
add
adc
sub
mov
add
sub
adc
or
add
test
or
sbb
add
and
adc
add
or
xor
and
or
and
pop
add
nop
or
adcl
adc
dec
add
add
andb
add
nop
add
adc
add
dec
pop
add
xor
push
xorl
xor
or
adc
add
or
test
pop
add
and
andb
sub
add
add
add
sub
adc
adc
push
add
mov
add
orb
adc
push
add
add
add
addb
rolb
add
test
add
adcb
adc
nop
inc
xor
add
mov
rorb
nop
addb
and
les
add
inc
add
or
add
add
aam
add
add
or
dec
add
xor
pop
add
add
add
rolb
hlt
pop
add
adc
push
add
pusha
add
add
adcl
sub
orl
addl
add
mov
xor
adc
or
add
pusha
add
or
and
adc
inc
and
adcl
sub
inc
push
and
or
add
dec
pusha
add
addb
and
addb
nop
mov
adc
add
add
dec
or
add
addl
add
orb
add
inc
adcb
add
pusha
add
or
movl
adc
add
adc
and
or
add
orb
dec
adc
push
rolb
add
dec
lods
pusha
add
add
or
add
add
dec
add
add
movl
add
or
add
or
add
pusha
add
or
dec
nop
nop
shlb
and
and
or
addl
addb
or
sub
or
movl
add
add
test
rolb
add
and
mov
and
and
add
add
add
adc
or
xor
and
inc
adc
add
or
adc
and
test
add
xor
add
sub
or
addb
and
cmp
add
and
xor
or
or
and
test
add
movl
xor
addb
popa
add
add
add
add
add
and
push
adcb
je
add
and
sub
addb
add
add
mov
inc
and
or
mov
popa
add
and
addl
and
and
mov
add
mov
rolb
adc
or
add
and
nop
add
add
inc
xor
or
adc
popa
add
adc
inc
or
dec
mov
addb
aam
add
movl
or
loopne
add
add
or
dec
and
and
add
add
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
or
adc
push
sub
test
add
and
andl
or
nop
xor
adcl
add
and
and
test
dec
add
xorb
and
adc
add
inc
add
xor
or
or
add
or
and
inc
sub
inc
add
orl
add
add
addl
sub
andl
xor
and
test
inc
add
addb
or
xor
adc
or
add
push
mov
push
inc
or
add
adc
or
inc
mov
test
add
adcb
add
adcb
adc
or
add
and
inc
inc
xor
andb
add
xorb
rolb
test
or
or
test
nop
add
rolb
and
adc
and
add
movl
inc
add
test
inc
add
or
and
add
orb
or
add
and
or
xor
or
mov
rclb
inc
add
add
push
adc
add
add
addl
sub
nop
test
movl
and
subb
xor
add
inc
and
or
and
andb
add
inc
addb
addb
adc
add
and
rclb
sub
mov
mov
mov
xor
sub
sub
add
push
and
inc
add
or
and
or
mov
and
dec
adc
and
add
adc
adc
orb
test
test
add
and
or
sub
xor
or
movl
addb
inc
or
adcb
orb
dec
add
inc
adc
xor
or
add
adc
inc
nop
rolb
adc
or
adc
add
or
add
and
and
or
and
or
adcl
and
push
xor
inc
and
or
add
add
add
add
inc
or
adc
add
or
push
inc
push
mov
or
add
sub
inc
add
and
inc
add
or
add
add
mov
adc
add
add
rclb
test
xor
rclb
and
or
push
or
add
or
mov
add
or
sub
or
xor
inc
mov
add
shlb
shlb
adc
nop
or
add
inc
inc
xorb
add
and
and
and
adc
inc
andb
dec
adc
inc
movl
add
test
dec
inc
inc
adc
or
andl
addb
add
or
add
or
and
push
dec
test
and
mov
sub
inc
adc
test
adc
adc
shrb
add
or
add
and
test
add
and
inc
orb
adc
push
mov
add
add
pop
mov
add
add
push
mov
add
mov
add
add
add
add
shlb
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
ja
gs
inc
js
