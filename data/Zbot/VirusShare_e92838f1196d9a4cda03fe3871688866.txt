or
add
and
add
xor
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
jo
add
adcb
add
xchg
add
rclb
add
add
add
xchg
add
or
add
sub
add
add
add
fs
add
jp
add
xchg
add
sahf
xchg
add
mov
xchg
add
aam
add
add
add
hlt
xchg
add
xchg
add
push
xchg
add
sbb
add
add
mov
mov
pop
add
and
mov
sub
arpl
mov
pop
add
and
stos
aas
dec
mov
xlat
rcl
inc
add
mov
sub
inc
adc
xlat
inc
adc
inc
sub
mov
int3
lret
inc
enter
shr
sbb
lret
das
rolb
add
subl
xlat
xor
sub
in
inc
cmp
cmp
sub
adc
int3
das
sub
lock
inc
xchg
inc
test
mov
andl
cld
das
sub
dec
ss
sub
adc
and
cmp
or
xor
out
mov
mov
daa
add
sub
xlat
test
sub
sub
and
and
inc
add
enter
enter
sub
pusha
das
sub
inc
mov
out
sub
sub
mov
inc
inc
add
sub
mov
xor
xor
xor
aas
mov
comiss
add
das
sub
adc
fstp
xchg
jae
iret
mov
mov
add
mov
cld
xchg
sub
adc
push
das
sub
adc
mov
lret
inc
adc
mov
into
sub
and
sub
cld
push
sub
fcoml
popa
mov
cld
push
sub
aam
cmp
kandnw
fdivrl
kandnw
in
adc
mov
mov
xor
iret
fldenv
das
xor
lret
inc
add
sub
adc
inc
and
cmpl
xchg
inc
add
cld
sub
adc
inc
and
cmp
cmp
inc
movsb
mov
add
xor
sub
xor
test
sub
hlt
subl
mov
sub
mov
dec
xor
mov
inc
push
xor
xor
xor
inc
and
subl
sub
inc
or
subl
enter
push
xor
adc
xor
in
into
or
vcomiss
xor
inc
adc
mov
sub
subl
into
in
xor
add
jbe
sub
into
add
cmc
in
in
getsec
sub
adc
sub
xor
scas
cmc
in
pushl
out
sub
cld
cwtl
sub
sub
xor
adc
mov
inc
scas
das
inc
and
mov
popf
mov
sbb
in
aad
test
mov
and
cwtl
or
and
sub
cld
jg
sub
subl
sbb
adc
aad
inc
and
ds
mov
arpl
out
subl
cvtps2pi
inc
adc
adc
inc
mov
scas
in
cmp
sbb
mov
lds
xor
mov
xor
lods
xor
inc
add
add
sub
sub
jae
scas
repz
cmp
fs
dec
sub
cmp
jae
inc
ret
aad
scas
incb
mov
popf
ret
jae
adc
ficomps
add
sub
inc
add
mov
add
sbb
xor
jae
mov
inc
add
inc
dec
inc
mov
mov
lret
xor
aas
inc
lret
cmp
inc
mov
mov
push
lret
inc
aad
dec
lcall
sub
cs
jne
sub
into
adc
sub
mov
inc
add
add
sub
sub
xlat
ds
fcos
push
fistl
ds
ds
ds
call
fstpt
mov
ds
jmp
mov
sub
ds
ds
inc
mov
inc
inc
adc
sub
cld
add
sub
mov
sub
ds
ds
rep
pop
sub
sub
in
ds
inc
stos
mov
mov
inc
stos
inc
ds
inc
mov
inc
mov
inc
lds
and
adc
ds
sub
lods
dec
xor
das
sub
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
popf
inc
lds
mov
iret
inc
aad
inc
dec
pushl
sub
sub
sub
sub
das
lret
sub
arpl
and
and
inc
lret
jae
mov
sbb
mov
icebp
and
mov
leave
dec
cld
out
popa
sub
lret
inc
mov
inc
stos
pop
inc
sub
rcrl
ds
mov
mov
inc
and
inc
mov
inc
lret
jae
popf
popa
sub
lret
sub
xor
mov
mov
mov
inc
and
inc
mov
inc
lret
jae
pop
popa
sub
lret
sub
dec
ds
inc
mov
inc
sbb
lods
inc
aad
cld
xchg
popa
sub
lret
sub
inc
sbb
xchg
and
lods
ljmp
inc
aad
cld
popa
popa
sub
inc
adc
inc
push
adc
sub
cld
aas
popa
sub
lret
sub
lods
adc
sub
inc
lds
scas
bsf
adc
lds
mov
decb
and
lret
cld
mov
sub
mov
sub
cld
dec
xor
sub
sub
inc
mov
xchg
mov
leave
mov
iret
mov
sarl
mov
in
test
das
dec
cwtl
sub
sub
sub
cli
inc
mov
sub
adc
mov
inc
stos
stos
sti
or
lret
push
pushl
sti
sub
adc
or
mov
inc
stos
stos
shrl
lret
push
ds
mov
sub
sub
sub
sub
movsb
int
adc
xor
lret
inc
mov
lret
mov
sbb
mov
in
ds
cld
and
sub
sti
sub
sub
mov
inc
mov
inc
stos
stos
rcl
sub
pop
inc
mov
inc
stos
stos
sti
sub
sub
popf
in
adc
pop
inc
mov
inc
and
add
sub
inc
mov
sub
fwait
inc
mov
lret
inc
mov
inc
stos
mov
mov
and
stos
subl
inc
mov
sub
cmp
sub
mov
inc
stos
stos
sti
sub
sub
fldcw
lret
pop
jmp
aad
add
add
sub
sub
xlat
fcos
repz
maskmovq
idivl
mov
xchg
ds
flds
idivl
lds
in
idivl
lds
lds
lds
lds
lds
xchg
inc
inc
mov
lds
lds
lds
lcall
inc
mov
lods
idivl
lds
mov
jmp
mov
lds
ds
decl
pop
fcomi
ds
xchg
lods
xor
fsubrl
idivl
mov
inc
mov
idivl
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
inc
mov
inc
sbb
ds
inc
inc
mov
inc
mov
ds
ds
inc
inc
mov
inc
aad
cld
lret
sub
inc
popa
xor
mov
arpl
lods
adc
sub
sub
inc
mov
inc
stos
xchg
xor
adc
inc
mov
stos
stos
sub
jnp
push
das
sub
inc
sub
sub
inc
mov
sub
sub
inc
aaa
lods
dec
ss
das
sub
inc
cmp
mov
pushf
add
ds
pushf
push
sub
sub
idivl
lds
sahf
add
sub
idivl
lds
mov
cmp
idivl
lds
mov
inc
sahf
dec
sub
idivl
lds
sbb
lods
push
idivl
mov
pushf
ja
sub
idivl
mov
pushf
jns
sub
idivl
mov
pushf
cltd
insb
sub
idivl
mov
pushf
mov
sub
lds
ds
sahf
sub
sub
pushf
sbb
sub
mov
sub
idivl
lds
push
push
sub
sub
ds
stos
push
or
sub
inc
mov
lret
inc
mov
lret
ljmp
inc
mov
lret
inc
mov
inc
stos
inc
sub
aad
xor
outsb
aaa
pop
mov
std
lods
outsl
push
cmc
sub
pop
mov
inc
mov
xchg
sub
xorl
sub
or
sub
xchg
mov
sub
mov
xchg
mov
adc
inc
mov
ljmp
xor
pushl
lret
inc
mov
inc
stos
inc
sub
aad
inc
lds
faddl
or
sub
sub
pop
inc
mov
lret
inc
mov
xchg
mov
mov
sub
lret
inc
mov
shll
pushl
lret
inc
mov
inc
stos
inc
sub
aad
xor
inc
mov
xor
and
xor
lret
sub
jno
ret
lds
xor
sbb
inc
sub
aad
cmp
inc
lds
mov
inc
shll
xor
cs
sub
sub
xor
lds
aad
mov
sub
sub
sub
xor
aad
adc
inc
lret
cmp
aad
inc
aad
ds
inc
aad
dec
lcall
sub
lock
sub
aad
inc
push
and
sub
scas
add
mov
loopne
sub
or
sub
mov
inc
aad
inc
sub
push
pop
xor
inc
mov
inc
lds
mov
das
sub
adc
addb
sub
add
dec
je
sub
adc
mov
inc
lret
xor
aad
ds
rorb
or
sub
inc
mov
lret
inc
mov
xchg
mov
or
sub
sub
pushl
lret
inc
mov
inc
stos
inc
sub
aad
inc
mov
inc
sub
sub
and
lds
mov
sub
adc
in
inc
mov
xor
ds
inc
mov
inc
mov
inc
lret
xor
imul
mov
popl
inc
pop
mov
inc
fwait
xor
inc
mov
inc
dec
cmpl
mov
sub
inc
add
stos
xor
add
xor
aaa
sub
dec
xor
sub
sub
mov
sub
inc
cs
sub
lods
dec
xor
sub
sub
sahf
inc
sub
sub
xor
sub
sub
xchg
mov
sub
sub
cmc
or
inc
rolb
lret
inc
ds
lcall
mov
sub
inc
mov
cld
test
sub
sub
lea
sub
xor
adc
jno
xor
dec
lcall
xor
adc
inc
mov
lea
lods
inc
cmp
jno
xor
lcall
inc
sbb
inc
and
sub
aaa
inc
in
sub
sbb
inc
sub
cmp
and
dec
lcall
inc
lds
mov
xor
lds
inc
lcall
sub
xor
ds
aad
dec
xor
sub
sub
loope
lods
stos
add
xchg
lods
out
mov
inc
add
add
inc
shll
xchg
sbb
adc
xor
sub
sub
sub
sub
sub
sub
mov
lods
stos
imulb
sub
inc
aad
inc
inc
dec
lds
inc
sub
popf
or
sub
sub
dec
xor
ds
xor
add
or
cmc
sbb
inc
mov
xlat
sub
mov
lods
adc
xlat
sub
inc
ds
lods
adc
cld
xor
sub
adc
sub
jae
and
sub
les
mov
add
xchg
lods
ds
popf
cmp
iret
inc
sbb
add
mov
inc
inc
dec
inc
aaa
ss
inc
mov
dec
lcall
lret
cmp
dec
inc
aad
inc
shrl
sub
lods
adc
add
ds
sub
scas
in
das
inc
xchg
fwait
xor
mov
push
inc
aad
inc
lds
sbb
xchg
lods
popf
adc
lods
add
xchg
lods
out
mov
sub
inc
add
add
sub
mov
leave
mov
sub
sub
lods
adc
roll
xor
adc
inc
lret
xor
cmc
sbb
ds
rclb
fst
inc
aad
xor
mov
cmp
adc
inc
aad
dec
lcall
cs
sub
sub
and
adc
fsubrs
and
sub
or
loopne
aad
sub
sbb
xchg
popf
je
sub
adc
mov
lret
xor
aad
rclb
lods
stos
mov
inc
mov
inc
stos
xor
add
xor
dec
xor
sub
sub
inc
rorb
mov
pop
sbb
adc
cmpsb
sub
sub
sbb
adc
inc
out
xor
inc
daa
pop
xor
cmp
mov
lds
lret
ds
lds
add
inc
lds
push
adc
dec
lcall
popf
lds
sub
out
and
movl
push
adc
fwait
xchg
stos
ds
inc
mov
inc
stos
pop
sub
dec
sub
lods
adc
inc
stos
stos
fldcw
lret
inc
lods
adc
adc
inc
mov
cmp
inc
mov
inc
aad
sub
pop
inc
lds
popf
sub
mov
and
sub
movsl
sub
sub
mov
inc
add
add
inc
lds
rcr
xchg
sub
and
mov
sub
mov
sub
mov
sub
inc
fdivrl
sub
mov
das
sub
popf
and
das
sub
popf
and
das
sub
sub
lds
repz
sub
sub
sub
das
sub
inc
lods
mov
pop
popf
sbb
dec
xor
das
sub
inc
mov
inc
cmp
xchg
xlat
inc
or
adc
xor
sub
sub
pop
adc
ds
repz
mov
fcomi
ds
incl
fcomi
ds
idivl
mov
xchg
lods
inc
ds
cmp
call
ds
ret
repz
repz
mov
pop
adc
sbb
or
lods
mov
pmaddwd
mov
sub
xor
stos
inc
aad
iret
lret
sub
cmp
sbb
inc
inc
sub
sbb
mov
inc
lret
pop
ds
mov
sub
mov
mov
inc
sbb
into
mov
lret
pop
mov
shll
xlat
jnp
dec
ds
arpl
inc
fwait
mov
mov
inc
lds
push
adcl
jne
sub
sub
lret
fldcw
lret
arpl
roll
lret
cmpl
inc
mov
ds
inc
mov
sub
shrl
adc
xor
sub
mov
xor
dec
lcall
mov
mov
ds
inc
mov
inc
dec
inc
mov
mov
inc
fwait
inc
lods
sub
int3
jno
xor
lret
inc
mov
inc
stos
xor
mov
sub
inc
mov
inc
mov
push
int
mov
inc
stos
xor
xor
sub
inc
mov
sub
ds
dec
lcall
jo
xor
mov
inc
lds
push
adcl
jne
sub
inc
lds
or
arpl
lods
dec
xor
sub
sub
inc
mov
sub
lods
adc
lret
sub
lods
adc
inc
adc
sub
lods
adc
cld
jno
sub
lods
adc
inc
xor
mov
inc
lds
lds
or
arpl
jnp
mov
xor
xor
adc
sub
push
sahf
sub
sub
cmp
mov
sub
add
ljmp
sub
inc
lds
mov
inc
mov
ds
inc
mov
lods
jmp
sub
inc
add
lcall
rcr
xchg
sub
cmp
rclb
imul
popf
in
cmovae
cmp
fidivs
call
aas
xor
out
xchg
lods
jmp
sub
inc
add
add
mov
sub
pushf
lahf
sub
idivl
mov
xor
rcrl
inc
adc
adc
lods
mov
or
sbb
subl
insl
sub
xchg
sub
sahf
xorl
sub
mov
and
xchg
sbb
xor
sub
pushf
sub
sub
add
sbb
lcall
ds
xchg
sbb
lcall
ds
and
xchg
push
divl
and
popf
and
inc
and
divl
and
popf
and
inc
adc
and
xchg
push
notl
imull
cmp
inc
and
divl
and
popf
and
inc
and
divl
and
popf
and
inc
adc
and
xchg
push
notl
imull
cmp
inc
and
cld
adc
xor
cmp
add
sbb
xor
sub
lea
sub
inc
and
inc
movsb
daa
xlat
mov
testl
sub
mov
and
mov
testl
sub
xorl
xchg
lods
add
xchg
lods
stos
jmp
cmp
aad
add
testl
sub
testl
enter
sub
mov
sub
mov
mull
mov
sub
mov
mull
aad
inc
fldcw
xchg
sub
inc
inc
sbb
mov
das
sub
testl
ret
sub
sub
mov
lds
loope
push
sbb
sub
adc
mov
out
mov
inc
add
xlat
fnstcw
sub
test
or
sub
loope
sub
inc
sbb
cmp
dec
adc
inc
mov
sub
shl
inc
sub
testl
mov
mov
sub
mull
adc
xchg
push
inc
fcoms
xlat
mov
sub
xchg
jecxz
and
mov
mov
loope
sbb
sub
adc
scas
xchg
mov
xlat
mov
jmp
inc
add
xlat
mov
sub
test
or
sub
shrb
sub
testl
sub
add
sub
xchg
shlb
mov
mov
sub
mov
mull
adc
xchg
sbb
xchg
inc
inc
lret
xlat
mov
das
sub
testl
ret
sub
sub
mov
and
sub
loope
xor
das
xchg
lods
out
mov
inc
add
inc
mov
dec
lcall
sub
test
xor
sub
xchg
mov
sub
aad
mull
mov
xorl
idivl
aas
xor
dec
inc
lret
sub
xchg
sub
mov
lods
jmp
mov
out
mov
sub
inc
add
mov
inc
lds
lds
lods
adc
mov
xor
xor
dec
inc
cmp
in
inc
sub
inc
add
mov
inc
lds
lds
lods
adc
mov
xor
add
in
cmp
aad
add
add
xlat
mov
sub
mov
sub
inc
adc
sub
xchg
push
mov
xor
mov
imulb
sub
rcr
inc
mov
inc
mov
xchg
xorl
cmp
inc
mov
xchg
xorl
sub
inc
mov
xchg
scas
xor
dec
sub
sub
and
scas
xor
cmp
loopne
sub
xchg
scas
ds
ds
mov
mov
inc
in
xchg
ficoms
xlat
mov
and
fidivs
loopne
rcrb
adc
and
in
xchg
into
xchg
fiadds
pop
xlat
mov
and
fisubrs
mov
jne
sub
shlb
mov
aad
dec
mov
mov
inc
mov
xchg
scas
xchg
into
inc
xor
xorl
mov
mov
mov
inc
mov
sbb
inc
in
addl
xorl
jecxz
mov
faddl
and
scas
inc
xchg
aaa
xorl
adc
sub
sub
loope
mov
inc
add
add
mov
sub
inc
lds
lds
lds
aad
sub
subl
cmp
inc
lds
push
mov
cmp
inc
lds
push
subl
cmp
inc
lds
cmp
aad
add
add
rcrl
fnstcw
mov
mov
sub
ds
stos
adcl
sub
cs
sub
jl
sub
inc
mov
mov
sub
inc
mov
xchg
mov
mov
lret
cld
fildll
sub
mov
sub
cs
sub
fldt
sub
sbb
sbb
adc
adc
push
or
sub
and
sub
xor
in
mov
adc
xchg
jecxz
xchg
lods
popf
mov
movq
sbb
mov
jne
sub
adc
mov
aaa
xorl
mov
inc
or
scas
bsf
dec
inc
mov
xchg
mov
mov
or
mov
xchg
mov
add
mov
inc
mov
add
jecxz
xchg
inc
ret
inc
add
push
jecxz
scas
xchg
xor
inc
lds
lret
ds
mov
xor
faddl
cmp
mov
mov
inc
mov
inc
adc
sub
inc
mov
inc
mov
jne
sub
aam
ret
inc
add
push
jecxz
scas
xchg
mov
scas
inc
lds
lret
mov
adc
sub
dec
sub
inc
inc
mov
xchg
mov
mov
ds
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
inc
mov
xchg
mov
dec
dec
xchg
sub
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
sub
sub
in
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
sub
jmp
inc
sub
inc
add
add
mov
sub
pushf
and
sub
ds
inc
lds
lds
mov
adc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
ds
xor
or
sub
mov
ds
inc
mov
inc
lds
test
xchg
sub
xchg
enter
stos
xorl
mov
inc
lds
enter
mov
mov
sub
in
decb
sub
inc
lds
aad
xchg
mov
lds
mov
inc
mov
faddl
and
enter
scas
inc
lds
enter
inc
dec
xorl
cmp
sub
sub
add
lds
mov
xor
xchg
rcrb
push
inc
aad
xchg
fadds
inc
mov
mov
mov
ds
inc
mov
inc
mov
faddl
and
mov
inc
mov
inc
mov
mov
lds
mov
xor
inc
mov
xchg
mov
or
mov
xchg
mov
or
inc
mov
inc
mov
faddl
and
mov
xor
inc
mov
xchg
mov
or
inc
mov
xchg
mov
inc
mov
inc
mov
fcoml
xor
xorl
gs
mov
inc
mov
faddl
cld
xchg
mov
mov
xor
repz
sub
and
mov
sub
mov
xchg
mov
inc
mov
dec
xor
sub
sub
sub
cmpl
mov
xor
jmp
sub
inc
add
add
mov
sub
mov
sub
xlat
mov
sub
inc
mov
test
xchg
sub
xchg
mov
sub
scas
sbb
insl
mov
xor
sbb
mov
mov
sub
mov
sub
mov
sub
inc
aad
xchg
fdivs
into
sbb
insl
aad
xchg
mov
inc
mov
xchg
mov
cmp
xor
sub
inc
mov
xchg
mov
inc
dec
xor
sub
sbb
or
sub
cs
sub
jl
sub
inc
mov
ds
mov
sub
pushf
and
sub
ds
mov
sub
ds
inc
lds
enter
lds
lds
mov
mov
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
inc
mov
ds
inc
mov
ds
inc
mov
ds
inc
mov
inc
aad
cs
loopne
sub
fdivl
fiaddl
mov
sub
add
aad
xchg
enter
lret
aam
xorl
inc
inc
dec
cmp
pop
inc
lds
in
xchg
call
scas
xorl
ds
cmp
push
mov
sub
inc
in
inc
mov
in
xor
mov
loopne
sub
mov
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
mov
cmp
pop
inc
mov
inc
mov
adc
dec
cwtl
lds
mov
jne
sub
pop
xor
xor
ret
xchg
mov
in
xor
mov
loopne
sub
lods
ds
xor
inc
adc
add
in
sub
subl
rol
xchg
mov
enter
xorl
scas
adc
inc
mov
xchg
enter
mov
fmull
cld
inc
mov
jne
sub
and
mov
adc
into
dec
ss
push
cs
sub
sub
sub
inc
lds
mov
xchg
mov
cmp
mov
fimuls
sub
dec
ss
sub
sub
jmp
sub
inc
add
add
das
sub
xlat
inc
or
sbb
flds
cmp
lods
adc
rcr
cld
adc
sub
inc
daa
push
inc
cltd
inc
faddl
fwait
inc
mov
cld
mov
inc
push
sbb
sub
cld
repz
sub
loop
inc
inc
ss
sub
cld
mov
adc
sub
lret
cld
mov
sub
lods
adc
xchg
mov
lods
jmp
xor
inc
mov
add
sub
sub
xchg
lods
ss
add
dec
test
idivl
push
mov
sub
sub
rclb
ds
mov
sub
sub
sub
sub
lret
inc
mov
cld
shrl
sub
inc
add
mov
xor
xor
mov
sub
lods
dec
xor
sub
sub
stos
imul
mov
xchg
shrb
sbb
xorl
sub
das
sub
lds
cmc
and
xchg
mov
mov
inc
nop
sub
xchg
or
lcall
inc
inc
negl
dec
lcall
mull
in
dec
lcall
test
cmp
and
dec
test
imul
xchg
sbb
mov
dec
jmp
inc
lds
popf
lds
test
aaa
sub
inc
adc
sub
lea
adc
xor
dec
dec
sbb
sub
xchg
lods
jmp
cmp
inc
lds
scas
sub
notl
mov
lods
add
aad
add
add
flds
inc
mov
adc
sub
sub
sub
inc
mov
inc
fldenv
mov
inc
cmp
sub
mov
inc
cmp
mov
inc
cmp
sub
sub
mov
inc
cmp
sub
sub
mov
inc
cmp
sub
ds
inc
cmp
mov
inc
cmp
sub
int3
inc
cmp
sub
aam
cmp
sub
mov
cld
hlt
sub
sub
inc
mov
int3
sub
ds
lods
dec
xor
sub
sub
mov
sub
daa
jae
arpl
imul
xor
and
xor
ds
ds
xor
in
xchg
loop
in
popf
in
pop
pop
add
inc
aad
inc
and
jmp
in
daa
push
adc
inc
arpl
aad
inc
mov
inc
aad
xor
xor
aad
mov
sub
ds
inc
aad
xor
mov
sub
sub
inc
lds
lods
adc
fwait
inc
mov
xor
add
aam
in
mov
in
mov
out
jmp
sub
stos
inc
mov
sub
inc
ds
mov
scas
inc
scas
mov
dec
int3
sub
push
xchg
xorl
sub
idivl
sub
mov
dec
lcall
mull
lods
idivl
sub
sub
loope
flds
inc
cmp
sub
cmp
mov
jecxz
scas
xchg
stos
scas
inc
aas
sub
dec
adc
inc
cmp
sub
jmp
cs
xor
sub
pushl
out
lods
fcos
cmp
jmp
aas
into
cs
imul
push
add
into
dec
adc
sub
sub
sub
fdivl
mov
aas
xchg
mov
sub
scas
cld
cmp
sub
scas
adc
mov
cs
sub
sub
push
inc
stos
xor
inc
mov
inc
or
inc
int
xor
cmp
sub
sub
adc
dec
inc
sbb
sbb
jno
xor
xor
mov
aad
xor
mov
xor
adcl
sub
add
sub
inc
mov
inc
adc
ds
cld
inc
or
sub
lods
adc
kandnw
inc
or
adc
stos
cmp
mov
fs
sub
lret
cld
dec
adc
sub
jbe
sub
sub
mov
sub
test
or
sub
adc
push
or
sub
adc
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
inc
mov
ds
sub
mov
ss
sub
sub
xchg
ds
sub
inc
mov
pop
sub
or
lret
xor
ds
xor
dec
mov
lds
inc
lds
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
push
les
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
inc
cmp
xchg
fisubrl
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
inc
sbb
sub
xchg
mov
adc
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
inc
dec
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
lds
xchg
mov
mov
inc
mov
les
inc
mov
jne
sub
xchg
lret
dec
dec
sub
xor
mov
sub
sub
cld
leave
sub
mov
sub
sub
call
adc
lret
cld
mov
mov
inc
stos
mov
lods
adc
sub
push
inc
lds
sub
adc
sub
sub
sub
ds
push
or
sub
adc
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
sub
fs
sub
inc
mov
ds
mov
ds
sub
sub
sbb
pop
sub
add
lret
xor
ds
xor
dec
mov
lds
inc
lds
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
push
pushf
mov
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
sub
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
inc
adc
sub
xchg
mov
adc
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
sub
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
lds
xchg
mov
mov
inc
mov
pushf
mov
inc
mov
inc
mov
jne
sub
xchg
lret
mov
ret
dec
shrb
sub
sub
xor
xor
or
sub
push
inc
stos
mov
lods
adc
lds
sub
lods
sub
mov
cmc
push
sub
mov
mov
sub
ds
push
or
sub
adc
inc
mov
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
sub
cmp
shrl
sub
inc
mov
ds
sub
inc
mov
ds
sub
inc
mov
inc
lds
loopne
sub
or
rolb
sub
sub
sub
add
adc
mov
adc
xorl
inc
inc
lea
inc
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
mov
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
sub
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
lds
xor
inc
mov
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
sub
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
mov
xchg
lret
dec
mov
aam
xor
lds
mov
jne
sub
sbb
mov
adcl
ret
dec
ss
sub
sub
mov
mov
ljmp
ljmp
sub
adc
sub
mov
cmp
cld
mov
and
sub
inc
mov
jmp
sub
inc
add
int
mov
xor
mov
sub
ds
inc
stos
xor
inc
pop
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
inc
mov
pushl
sti
sub
lret
ljmp
sub
xor
sbb
ds
inc
mov
lods
adc
inc
mov
lret
shrl
adc
sub
ds
inc
mov
loope
lods
adc
inc
mov
inc
lds
ds
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
mov
sub
push
mov
cmpl
jnp
mov
neg
mov
jmp
mov
rol
mov
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
movl
movl
cmpl
jb
mov
mov
sub
mov
ror
mov
mov
sub
mov
push
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
mov
add
mov
mov
xor
add
mov
lea
mov
mov
movzbl
add
mov
movl
mov
mov
orb
mov
movl
movzbl
xor
mov
mov
mov
xor
add
mov
cmp
mov
sbb
mov
movl
movl
movl
movl
lea
mov
mov
and
mov
lea
mov
mov
sub
mov
mov
lea
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
movl
cmpl
jg
xor
mov
add
sub
mov
cmp
je
mov
mov
mov
and
xor
xor
add
cmp
mov
adc
mov
add
imul
mov
shr
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
movl
mov
mov
and
movzbl
rcl
mov
add
lea
mov
mov
xor
add
incl
cmpl
jne
mov
movzbl
xor
sub
sub
mov
mov
mov
xor
add
cmp
jne
cmp
movzbl
mov
adc
mov
mov
movzbl
xor
lea
mov
movl
cmpl
jg
cmpl
jle
mov
mov
or
jmp
mov
sar
mov
movzbl
sub
movzbl
xor
add
mov
jmp
xor
mov
sub
inc
mov
and
mov
lea
xor
imul
inc
mov
cmp
jne
mov
jmp
mov
cmp
jp
mov
and
jmp
mov
adc
mov
sub
mov
mov
xor
add
ror
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
xor
movl
cmpl
jb
mov
xor
mov
mov
mov
xor
lea
xor
mov
cmp
jne
mov
mov
orb
mov
xor
add
imul
xor
mov
mov
xor
mov
xor
lea
mov
xor
xor
mov
sub
add
cmp
jne
mov
mov
mov
sub
xor
add
pop
movl
pop
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jbe
mov
xor
movl
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
jmp
cmpl
jne
push
pushl
pushl
pushl
movl
addl
orl
call
lea
mov
mov
mov
add
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
add
mov
movzwl
and
mov
pop
mov
mov
mov
subl
andl
subl
mov
xor
test
mov
mov
sbb
mov
mov
mov
xor
leave
ret
push
mov
sub
mov
movzbl
and
mov
mov
movzbl
xor
mov
movzwl
and
leave
ret
push
mov
sub
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
push
call
jmp
lea
mov
mov
mov
and
mov
movl
cmpl
je
mov
mov
xor
mov
mov
xor
mov
add
mov
movl
mov
xor
add
mov
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
mov
mov
cmp
jne
lea
mov
jmp
cmp
jne
movl
cmpl
jle
mov
andl
subl
xorl
test
je
mov
mov
add
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
jmp
mov
mov
imul
mov
sub
mov
or
mov
cmp
jnp
mov
and
jmp
movzbl
sbb
mov
sbb
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
leave
ret
push
mov
sub
push
call
cmpw
je
xor
leave
ret
movl
addl
andl
movl
lea
movl
mov
call
movl
mov
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
or
mov
mov
call
movl
cmpl
jne
mov
shlb
mov
mov
mov
mov
mov
cmp
andl
adcl
mov
lea
mov
call
test
je
call
mov
movzbl
add
mov
mov
mov
mov
mov
mov
xor
mov
rcrb
mov
mov
mov
add
mov
movl
mov
jmp
push
call
push
mov
sub
mov
mov
push
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
push
movl
cmpl
je
mov
xor
movl
mov
cmp
mov
movzwl
sbb
mov
add
movl
mov
mov
mov
cmp
mov
mov
adc
mov
xor
add
mov
mov
cmp
jnp
lea
mov
mov
mov
xor
jmp
movzwl
mov
or
mov
mov
mov
xor
mov
mov
mov
mov
cmp
movzbl
mov
adc
mov
mov
mov
lea
mov
mov
test
mov
mov
adc
mov
mov
lea
mov
mov
mov
mov
or
mov
mov
lea
mov
lea
mov
mov
mov
xor
mov
mov
lea
mov
mov
lea
mov
mov
movzwl
and
mov
movl
cmpl
jl
mov
mov
sbb
mov
lea
mov
mov
pushl
mov
mov
push
add
mov
mov
inc
mov
push
lea
cmp
movzwl
adc
push
mov
mov
mov
mov
movl
mov
pushl
movl
addl
xorl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
add
push
call
lea
mov
mov
mov
or
mov
mov
mov
mov
xor
xor
lea
cmp
je
movl
cmpl
jne
movzbl
add
mov
lea
mov
mov
mov
add
lea
mov
mov
mov
or
mov
mov
mov
neg
mov
xor
add
mov
mov
lea
mov
mov
mov
sub
mov
mov
xor
cmp
mov
mov
adc
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
and
cmp
mov
mov
adc
cmp
mov
mov
adc
mov
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
addl
andl
add
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
movl
push
lea
push
mov
mov
mov
push
mov
mov
mov
movl
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jb
mov
xor
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jg
mov
add
xor
cmp
je
mov
cmp
jne
movzbl
xor
mov
mov
xor
add
cmp
jb
mov
addl
mov
cmp
jae
mov
movzwl
mov
dec
cmp
ja
addl
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
mov
add
imul
movzwl
mov
lea
push
mov
xor
add
cmp
mov
mov
sbb
mov
imul
mov
add
push
movl
cmpl
jne
mov
adc
mov
xor
mov
or
pushl
mov
call
cmpl
je
cmp
mov
sbb
mov
xor
inc
xor
mov
jmp
mov
movzwl
sub
mov
mov
add
xor
mov
mov
cmp
je
mov
cmp
lea
mov
mov
mov
sbb
xor
mov
add
mov
mov
movzwl
movzwl
or
mov
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
mov
imul
xchg
dec
addl
dec
cmp
jne
lea
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
xor
movl
cmpl
ja
mov
mov
xor
lea
mov
add
mov
mov
add
dec
jne
jmp
mov
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
movl
mov
test
movzwl
sbb
mov
mov
movl
cmpl
jge
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
push
push
mov
movzwl
add
mov
mov
xor
mov
sub
mov
add
cmp
je
mov
cmp
movzwl
shl
mov
mov
mov
xor
add
cmp
je
mov
cmp
mov
mov
sbb
mov
mov
mov
mov
add
cmpl
je
pushl
pushl
mov
mov
pushl
call
mov
mov
mov
xor
add
mov
mov
add
mov
xor
add
mov
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xor
movl
cmpl
jle
test
mov
mov
adc
pop
add
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
mov
push
movl
cmpl
jne
movzbl
mov
adc
mov
mov
mov
sub
xor
lea
mov
mov
movzwl
sub
mov
pop
div
cmp
je
cmp
je
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
push
xor
mov
pop
div
cmp
jae
cmp
je
mov
mov
andb
push
xor
lea
mov
mov
mov
sub
mov
pop
div
cmp
ja
cmp
je
xor
add
mov
div
cmp
je
cmp
jne
lea
mov
mov
movzwl
or
mov
mov
test
mov
mov
adc
mov
add
mov
mov
mov
cmp
jbe
mov
movzbl
not
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
movl
cmpl
jae
mov
mov
and
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
and
mov
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
movl
movl
movl
cmpl
jae
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
mov
push
cmp
movzwl
mov
sbb
movl
movl
pop
mov
mov
sub
mov
test
jne
mov
xor
add
mov
inc
cmp
jb
push
push
mov
movzwl
mov
xor
mov
push
mov
mov
xor
lea
cmp
mov
adc
mov
mov
mov
xor
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
movl
cmpl
jb
mov
mov
mov
sub
mov
mov
mov
test
jne
mov
mov
mov
cmpl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
mov
movzwl
xor
xor
mov
incl
shll
mov
mov
or
mov
mov
mov
mov
mov
cmp
jb
mov
mov
xor
jmp
lea
mov
mov
mov
add
lea
mov
mov
mov
sbb
mov
mov
movzwl
add
mov
dec
not
and
movl
cmpl
jb
mov
mov
adc
mov
mov
mov
orb
mov
mov
cmpl
js
mov
imul
jmp
mov
mov
orb
mov
mov
sbbb
lea
mov
movzbl
mov
xor
mov
mov
mov
mov
mov
sub
mov
xor
mov
jmp
mov
sub
mov
mov
cmpl
jae
mov
sbb
jmp
mov
and
movzbl
adc
mov
mov
mov
sub
mov
xor
cmp
mov
jne
mov
mov
mov
mov
movl
jmp
cmpl
je
mov
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
and
mov
xor
xor
add
add
xor
test
sbbl
xorl
xorl
div
shl
mov
jmp
cmp
jne
pushl
call
jmp
cmp
jne
movl
cmpl
jbe
mov
mov
push
pushl
mov
and
mov
mov
call
mov
jmp
cmp
jne
mov
mov
push
push
push
jmp
sbbl
xorl
push
push
pushl
call
add
mov
lea
xor
mov
xor
lea
test
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
mov
xor
xor
xor
add
lea
div
shl
mov
pushl
pushl
call
inc
cmp
mov
mov
sbb
mov
xor
mov
mov
mov
movl
cmpl
jl
mov
mov
subb
mov
sar
mov
mov
mov
or
push
xor
pop
div
cmp
jbe
mov
add
mov
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
pop
push
call
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
test
jne
push
subl
push
call
movl
cmpl
jg
mov
push
push
lea
mov
push
pushl
subl
orl
pushl
call
add
mov
jmp
cmp
jne
call
mov
pushl
orl
push
push
push
push
pushl
pushl
call
add
dec
jne
pop
pop
ret
push
mov
push
mov
mov
movl
cmpl
jg
movzbl
sub
mov
movl
mov
push
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
lea
and
mov
mov
imul
imul
mov
mov
imul
lea
and
mov
or
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
movl
cmpl
jg
mov
mov
mov
xor
mov
xor
xor
lea
xor
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
subl
orl
addl
or
cmp
jne
pop
leave
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
movl
movl
cmpl
jg
mov
movzwl
and
mov
movl
movl
mov
mov
xor
mov
mov
mov
mov
push
lea
mov
mov
mov
xor
push
mov
mov
mov
add
xor
xor
mov
imul
sub
mov
mov
mov
movl
mov
movzbl
or
mov
xor
mov
add
push
mov
mov
xor
mov
mov
orl
mov
imul
mov
cmp
mov
mov
adc
movl
addl
mov
mov
xor
lea
mov
mov
mov
and
mov
xor
mov
add
mov
xor
movzwl
andl
add
cmp
ja
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
mov
sub
mov
xor
cmp
jne
movzbl
add
jmp
mov
xor
mov
mov
sub
mov
mov
mov
xor
mov
mov
or
mov
add
mov
movzwl
cmp
jne
mov
mov
xor
add
imul
mov
mov
mov
push
call
test
je
mov
xor
mov
or
mov
add
movzbl
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
mov
cmp
mov
sbb
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
cmp
mov
adc
mov
mov
call
test
jne
cmp
lea
mov
mov
mov
adc
movl
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
movl
cmpl
je
cmp
mov
sbb
mov
add
movzwl
cmp
mov
jbe
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
push
call
jmp
movl
mov
mov
mov
add
mov
xor
xor
lea
xor
movzbl
sub
mov
mov
xorl
mov
mov
xor
add
andl
imul
mov
movzbl
mov
sub
xor
cmp
je
movl
cmpl
jle
addl
mov
mov
mov
mov
cmp
je
andl
mov
add
mov
mov
xor
sub
add
movzwl
or
mov
mov
imul
mov
jmp
mov
mov
and
mov
xor
sub
add
mov
mov
mov
and
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
call
jmp
mov
mov
xor
add
cmp
je
addl
jmp
mov
movl
cmpl
ja
mov
mov
sub
mov
mov
xor
mov
or
mov
xor
lea
mov
jmp
orl
mov
mov
or
mov
mov
imul
mov
mov
xor
movzwl
or
add
xor
cmp
pop
pop
pop
je
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
movzwl
movzwl
and
mov
mov
mov
add
mov
mov
mov
and
leave
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jle
mov
movzbl
or
mov
mov
mov
add
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
movzbl
and
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
xor
mov
mov
subb
push
mov
add
mov
xor
mov
mov
mov
mov
push
pop
sub
add
cmpl
mov
mov
pop
jne
mov
mov
orb
mov
xor
add
leave
ret
push
mov
sub
mov
mov
and
mov
mov
or
mov
mov
mov
add
mov
leave
ret
push
mov
push
push
cmp
mov
mov
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
mov
xor
add
leave
ret
mov
xor
mov
mov
xor
mov
mov
and
mov
xor
mov
mov
ret
push
mov
sub
mov
movl
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
push
movl
cmpl
jbe
mov
mov
and
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
mov
or
xor
mov
add
cmp
je
mov
jmp
orl
push
pushl
push
pushl
call
test
mov
mov
sbb
mov
lea
mov
mov
mov
add
mov
mov
shlb
xor
pop
mov
and
mov
add
pop
pop
leave
ret
push
mov
push
push
mov
mov
movl
cmpl
jl
pushl
mov
call
xor
inc
subl
andl
xor
cmp
jne
pop
pop
pop
ret
push
mov
push
push
movl
cmpl
jl
mov
mov
add
jmp
mov
sar
mov
movzwl
and
mov
movl
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
mov
movl
cmpl
jb
mov
xor
movzwl
shl
mov
movzbl
or
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
andl
xor
mov
addl
jmp
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
add
mov
mov
mov
leave
ret
jb
je
and
push
push
bound
add
xor
je
and
cmp
outsl
js
inc
add
dec
push
add
add
add
add
addb
addb
addb
add
and
or
add
add
inc
addb
addb
addb
and
cld
dec
inc
add
inc
add
add
fxch
ljmp
add
cmp
add
or
add
cli
cli
fdivrp
sti
push
push
push
push
push
push
push
dec
incl
inc
add
inc
add
add
addb
add
add
addb
jns
add
fadds
inc
add
test
faddl
inc
add
addb
addb
addb
add
add
add
add
add
add
std
stc
decb
std
hlt
data16
idiv
xor
repnz
adc
std
enter
leave
aad
adc
xor
stc
decb
std
hlt
data16
idiv
xor
repnz
adc
std
enter
leave
aad
and
xor
stc
decb
std
hlt
cmp
lock
imul
stc
dec
aad
xor
inc
daa
inc
aaa
push
xor
decb
std
cmc
imul
cmp
int3
stc
dec
aad
inc
es
daa
push
aaa
pusha
xor
decb
std
cmc
imul
incb
std
int3
stc
dec
aad
push
es
daa
pusha
aaa
jo
ja
incb
std
stc
gs
hlt
cmp
lock
push
dec
aad
bound
jno
jo
xorb
idiv
pop
std
stc
gs
hlt
aaa
std
lock
push
std
repnz
stc
dec
aad
jb
andl
xchg
idiv
pop
std
stc
gs
hlt
decb
std
lock
gs
repz
stc
dec
aad
andb
daa
nop
aaa
mov
pop
std
stc
gs
hlt
decb
std
lock
imul
stc
dec
aad
xchg
mov
xor
stc
push
std
hlt
imul
idiv
aad
mov
aaa
shlb
aaa
shlb
xlat
cmc
ss
stc
adc
sti
decb
std
cmc
fs
repnz
stc
dec
aad
ret
daa
shlb
loopne
out
incb
add
addl
hlt
addb
test
popa
fs
add
pop
fs
push
sub
inc
add
jne
add
fs
push
add
or
add
ja
add
pop
jne
push
pop
push
add
gs
adc
cmpsb
adc
adc
push
adc
ss
adc
test
mov
adc
jl
adcl
adc
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
xchg
sbb
adc
adc
cmpsb
adc
adc
push
adc
ss
adc
test
mov
adc
jl
adcl
adc
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
xchg
sbb
adc
addr16
push
jne
inc
push
xchg
sub
pusha
adc
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
imul
add
add
inc
add
dec
add
push
add
add
add
add
inc
add
add
add
or
inc
add
out
jmp
test
icebp
out
pushl
inc
add
out
decl
inc
add
out
incl
fs
stc
incb
add
add
add
add
pop
add
jbe
add
add
sbb
sbb
sbb
sbb
add
stc
imul
adc
cmc
gs
idiv
pop
std
lock
std
icebp
stc
repnz
aad
adc
incb
add
xor
aaa
add
jae
imul
jae
add
add
jae
fs
push
add
gs
xor
add
add
add
push
add
jb
outsb
push
add
add
adc
add
adc
xchg
or
add
jbe
add
jo
add
imul
add
add
fs
push
add
popa
add
imul
add
add
add
inc
stc
js
incb
pop
lock
pop
int
pop
push
std
pop
mov
pop
sub
int
add
jns
inc
add
std
push
std
imul
std
push
std
insl
std
and
sub
stc
incb
add
std
adc
std
sub
stc
fs
adc
insl
std
pusha
std
sbb
imul
add
add
add
push
add
addl
add
jecxz
repz
xor
aaa
add
xor
cmp
cmp
sub
xor
jne
pop
xchg
xor
add
xchg
out
shlb
push
jo
popa
cmc
popa
cs
aaa
pop
ja
sbb
xchg
xchg
cmpsb
lret
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
insb
pop
aaa
dec
push
bound
jp
bound
insb
sub
push
and
aaa
xor
xor
inc
gs
js
cmp
jb
xor
and
cmp
and
xor
bound
xor
add
cmp
add
dec
jo
xor
push
push
xor
jno
xor
add
add
je
pop
cmp
and
fs
push
jno
aaa
bound
and
sub
xor
jns
and
push
outsb
popa
xor
popa
outsl
dec
and
dec
push
je
pop
xor
inc
popa
ss
popa
js
xor
and
and
xor
je
pop
inc
xor
inc
xor
add
add
push
je
jb
popa
jb
and
xor
je
push
inc
add
arpl
gs
pop
outsl
inc
add
and
push
and
push
and
cmp
add
inc
inc
xor
add
push
cmp
push
push
push
jns
add
cmp
insl
cmp
sub
add
je
inc
push
bound
aaa
push
js
jb
aaa
add
jb
and
dec
and
xor
dec
push
bound
pop
xor
push
add
aas
push
fs
push
aaa
inc
add
push
jp
je
xor
add
add
add
add
add
add
mov
add
pop
jg
add
sahf
add
add
add
add
add
clc
add
sub
add
add
add
jo
mov
bound
cmp
add
add
aaa
add
loop
data16
add
add
push
add
in
pop
mov
into
add
add
jle
mov
push
xor
movsl
sahf
mov
mov
mov
outsb
les
outsb
inc
dec
hlt
jecxz
cld
sbbl
xor
xchg
stc
jne
ret
repnz
cmp
push
inc
filds
lret
cmp
push
sbb
outsb
or
repnz
subl
mov
sub
cltd
sub
add
mov
pop
faddl
xchg
mov
sbbl
mov
repz
push
stos
push
and
outsl
or
negl
sub
fidivl
repnz
mov
sub
mov
lea
das
and
jle
inc
dec
stos
mov
dec
fsubrl
xor
xor
jl
mov
push
jns
fwait
push
jecxz
pop
or
push
inc
nop
les
or
fcompl
das
or
mov
roll
js
xchg
cwtl
sub
push
test
push
push
xchg
dec
pop
insl
push
stc
xor
dec
or
decb
mov
push
neg
enter
lock
push
mov
inc
and
idivl
sub
xor
notl
ret
into
js
int3
test
xor
mov
push
push
adc
enter
add
nop
enter
mov
in
out
insb
cmpsl
xchg
insl
scas
cmp
xchg
adc
push
mov
notl
inc
and
addb
push
lock
xchg
cmp
adc
out
jno
pop
lods
stos
das
jmp
mov
dec
push
sbb
lods
and
icebp
aas
pop
sbb
or
arpl
xchg
or
sbb
jmp
xchg
push
pop
xchg
xchg
sbb
aam
mov
cld
test
cmp
inc
xchg
scas
loopne
sbb
push
hlt
into
movsl
icebp
lret
fdivrs
data16
add
xor
cli
punpckhwd
out
pusha
and
mov
fsubr
inc
fdecstp
push
inc
call
cmp
push
push
inc
popa
test
mov
xor
dec
mov
mov
cmp
imul
lock
jne
scas
nop
xchg
sbb
jns
rcrb
push
dec
push
pop
adc
xor
inc
dec
push
pop
mov
pop
mov
and
mov
insb
roll
xchg
adc
repz
xchg
pop
sbb
int3
repnz
sbb
and
sbb
arpl
cmp
gs
loopne
adc
adc
sbb
sti
cmp
stos
ja
jle
repz
js
add
fisubrl
dec
aam
push
ja
sub
xchg
jne
push
fnstenv
ja
jbe
call
push
mov
fimuls
or
jbe
enter
push
loop
addl
lcall
dec
lea
sarb
pop
or
lret
and
mov
cmp
ljmp
popf
push
xlat
pop
adc
inc
ret
push
jl
repnz
sbb
and
pop
pop
fldt
mov
fsubs
pop
and
mov
mov
xor
mov
jns
inc
out
mov
jmp
jns
in
ljmp
push
icebp
lock
movsl
jmp
sub
push
mov
aad
jecxz
inc
or
xor
movsl
push
loop
xor
jbe
shll
push
pushf
mov
xchg
pop
sub
sarl
lods
add
cmp
dec
pushf
mov
push
xlat
push
mov
fisubs
daa
pop
jge
sbb
mov
loopne
loope
aaa
add
popf
cli
int
pop
pusha
popf
cmc
sbb
jle
jnp
fcompl
lods
adc
enter
xor
mov
xchg
scas
push
nop
sub
icebp
mov
jl
cmp
loopne
cmp
sub
test
sahf
es
in
xchg
inc
sub
cld
mov
ret
pusha
jae
xchg
insb
int3
popf
pop
clc
js
sbb
fmull
test
or
mov
push
repz
loopne
add
sbb
add
ss
les
mov
popf
mov
jno
in
jne
cli
push
inc
cmpsb
and
adc
sub
pop
test
dec
das
inc
ret
dec
iret
lret
repnz
sub
xchg
sbb
add
xchg
out
in
push
jecxz
mov
popf
cmp
mulb
aas
cmp
fiadds
add
nop
insl
mov
aad
inc
inc
int
xor
and
mov
cld
pop
dec
jbe
or
aaa
or
daa
xchg
popf
inc
dec
add
inc
insl
aas
pop
sbb
xchg
jecxz
sub
xchg
movsb
mov
iret
inc
xor
push
nop
cwtl
cmpsl
das
sbb
mov
cmp
loope
test
scas
sbb
adcb
dec
sub
jge
dec
js
negb
mov
gs
jb
adc
or
dec
lahf
push
inc
insb
jne
cld
enter
adc
mov
mov
je,pt
flds
cmpsb
mov
push
das
mov
add
lods
cmp
out
pop
sub
nop
inc
inc
mov
adc
inc
repnz
push
stos
shrl
push
push
lea
dec
push
mov
push
mov
push
loop
sbbl
clc
je
rclb
lret
mov
cmc
xchg
xor
mov
aam
push
xor
push
inc
cli
sub
stos
int
jg
jnp
enter
enter
inc
bound
xor
sbb
test
cli
adc
mov
xchg
push
scas
ret
scas
adc
sahf
and
dec
xchg
lcall
xchg
aaa
mov
cli
adc
mov
mov
je
xchg
leave
ss
test
call
xchg
in
sub
pop
aas
std
imul
mov
scas
repnz
add
das
jns
fs
sbb
adc
jecxz
call
add
iret
xor
sbb
movsl
xchg
subl
out
mull
stc
stc
sbb
cmc
daa
mov
in
xchg
test
stos
les
popa
fsts
jnp
sbb
xor
add
add
dec
cs
js
in
mov
xchg
dec
inc
mov
add
lea
or
out
notb
out
outsl
into
push
mov
subl
push
fldcw
and
adc
dec
jge
mov
cmp
dec
inc
add
clc
inc
ljmp
and
popa
xor
push
lret
rcll
lcall
mov
movl
insl
sub
pop
rorl
mov
jo
sbb
aaa
cmp
pop
leave
xchg
xor
cmp
in
hlt
cld
lret
clc
or
imul
and
mov
mov
inc
aaa
or
ficomps
and
or
rcr
fucomip
pop
mov
call
scas
pop
sbb
sbb
xchg
inc
rorb
push
nop
mov
xor
fsub
and
data16
inc
shlb
cmpsl
and
dec
push
or
popa
sti
dec
mov
arpl
dec
and
push
loop
lcall
inc
jno
dec
ss
test
jns
xorb
in
sbb
push
inc
pop
cmp
mov
cs
test
push
sbb
mov
mov
jg
cs
fcmovnu
stos
sbb
dec
dec
adc
lods
movsl
gs
cmpb
push
shr
dec
out
add
test
pop
mov
sub
bound
mov
ljmp
push
jnp
sbb
enter
lock
aad
and
es
rorl
and
push
push
rcrl
sub
mov
ljmp
ljmp
lods
stc
outsb
inc
inc
lods
sbb
ljmp
pushf
ljmp
shrb
mov
mov
pop
imul
enter
mov
or
mov
cmc
adcb
push
dec
sahf
lea
into
mov
pop
inc
pop
push
fwait
shrl
bound
je
push
out
xor
mov
xchg
mov
mov
bnd
int
xchg
pop
movsb
xchg
into
push
movb
jecxz
cs
outsb
mov
int3
sub
jbe
mov
mov
mov
fcmovnu
ret
xor
xchg
cwtl
cmp
mov
test
js
lods
popf
test
pop
adc
xor
sbb
xchg
fnstcw
js
hlt
xor
mov
fisubrl
mov
xor
repz
fldcw
fcoml
cmp
xchg
loopne
jnp
dec
sbb
call
sub
cmp
cmp
mov
mov
mov
movsb
xchg
push
scas
mov
mov
mov
das
dec
cwtl
mov
pop
insl
or
enter
aam
pop
inc
adc
inc
lods
adc
int
mov
mov
and
out
out
or
xchg
test
int
or
pop
mov
fnstsw
gs
cmove
adc
dec
mov
pop
mov
push
leave
sbb
fldenv
inc
jb
ds
test
es
push
lods
call
add
push
sub
stc
inc
pop
or
cmp
xchg
sbb
mov
jnp
cmp
push
in
rorb
nop
mov
roll
into
int
xchg
in
push
pop
dec
xchg
addr16
subl
xlat
cs
stc
dec
lods
xlat
repz
jo
xor
pop
out
out
out
dec
pop
push
les
and
xchg
push
loopne
mov
jae
popf
filds
mov
out
ficompl
xchg
mov
outsb
icebp
arpl
or
cltd
fnstcw
xor
cmc
jne
aas
pop
adc
fsubrs
xchg
popf
cmp
mov
cli
fcomps
repz
ja
cmp
pop
sub
xor
aam
or
outsb
stos
add
scas
aad
cmpsl
pop
movsl
cmpsb
in
sbb
xchg
mov
das
leave
int3
loop
aam
jnp
sub
and
cmpsb
cltd
lea
add
mov
sub
and
or
inc
and
lcall
xor
test
adc
rcl
pop
out
test
ret
lock
lcall
mov
gs
fwait
lods
and
enter
lods
mov
mov
inc
xor
push
dec
or
adc
les
leave
xchg
ljmp
inc
outsl
jns
jl
wrmsr
ret
cmp
xlat
orl
and
jno
sub
xorb
out
pusha
sub
mov
neg
mov
lea
stos
xor
adc
iret
ret
insb
xchg
add
add
lret
xchg
push
imul
xchg
adc
daa
andl
mov
aaa
sti
pop
adc
jns
dec
and
or
push
lcall
cmpsb
adc
fnstenv
xchg
xor
int3
int
jo
mov
lcall
push
pop
push
cmp
mov
sub
cmp
cmp
cmp
mov
sbb
test
jl
iret
aam
enter
cli
xchg
popa
inc
mov
mov
aaa
pop
xlat
lods
jne
cmp
leave
popf
call
and
shll
push
and
aas
xor
jnp
loopne
fldcw
js
cmp
or
fldl
stos
adc
push
xorl
inc
add
xchg
iret
dec
mov
mov
pop
pop
dec
cs
pop
push
jno
std
mov
cmp
fstpl
loop
mov
ljmp
stos
fcom
imul
jns
clc
sub
std
xchg
mov
out
lds
xchg
out
dec
sbbl
and
lods
or
jg
jmp
inc
stos
lret
xor
cmp
pop
push
jmp
stc
push
inc
out
xchg
inc
shll
sub
sub
scas
push
mov
into
aam
add
pop
movsb
cmp
daa
or
xchg
pop
add
sub
cld
xchg
jb
lods
mov
scas
movd
xchg
pop
sbb
cmpsb
adc
jg
into
ss
lea
push
stos
ds
add
and
dec
mov
jp
js
iret
mov
sbb
aam
push
aad
mov
inc
ss
imul
adc
mov
push
inc
jge
adc
insl
push
pop
add
outsb
loope
movsl
push
push
imul
xchg
movsl
dec
jno
mov
inc
xor
outsb
jbe
adc
jmp
sbb
test
test
xor
and
jmp
aas
sbb
call
mov
incl
test
mov
cmp
outsb
and
std
pop
sahf
cmp
adc
cwtl
pop
stos
jmp
cmp
pop
mov
dec
insl
pop
sub
sarb
add
and
pusha
incb
rolb
mulb
pop
stos
cmp
sub
movaps
jmp
adc
sub
stos
shlb
orb
mov
icebp
or
lahf
mov
mov
jnp
adc
stc
jl
hlt
pop
aaa
nop
xor
adc
imul
lret
setns
in
inc
stc
aad
mov
push
stos
xor
arpl
dec
int
out
scas
mov
cmc
add
cmp
mulb
mov
push
mov
adc
lock
scas
sbb
fidivs
jb
mov
jno
push
ja
pop
mov
in
stos
in
aaa
or
in
jmp
jp
fldl
mov
into
cmp
push
lods
icebp
inc
adc
mov
sbb
push
inc
out
outsb
repnz
fnsetpm(287
mov
lret
mov
loope
std
addr16
inc
dec
movsl
aad
in
in
movsl
or
iret
fidivrl
call
addr16
xchg
daa
mov
cmp
push
in
int3
sub
cmpsb
adcb
in
push
jnp
je
pushf
or
pop
daa
jno
add
mov
mov
pop
rcrb
xchg
lea
das
in
test
in
jbe
stos
unpckhps
aam
cmp
lret
out
xor
fnstcw
dec
rep
push
push
or
sahf
nop
scas
mov
addl
inc
or
sub
dec
xor
sub
sbb
das
sub
loop
lcall
stos
scas
mov
out
sub
or
jge
leave
jae
cli
mov
outsl
ss
mov
or
pop
adc
add
out
xor
je
or
push
push
sub
mov
adc
addr16
push
cmp
aas
pop
shl
mov
pcmpgtd
int
cmc
je
mov
push
and
aas
call
lret
aas
cmp
sub
sub
out
sub
adcl
inc
jnp
outsb
leave
rcrb
fstpl
push
mov
dec
cmp
lret
mov
push
sub
into
leave
test
xchg
xchg
insb
mov
das
out
xchg
sti
xchg
push
xchg
mov
inc
push
addr16
inc
add
pop
dec
je
cmp
mov
out
cltd
mov
fwait
stc
mov
sub
out
out
push
adc
xor
push
mov
sub
sti
inc
mov
in
mov
mov
test
out
ljmp
xor
mov
mov
scas
sbb
ja
push
unpckhps
je
cs
fwait
xchg
ja
xchg
push
push
dec
add
repnz
loopne
mov
in
xor
sbb
push
lret
pop
mov
scas
pop
xlat
aam
cmp
or
xor
addr16
hlt
popa
imul
inc
jae
lcall
fwait
movl
leave
push
push
std
pop
rcrb
pop
cmp
dec
cltd
or
push
mov
xchg
lea
flds
push
stos
mov
cld
je
mov
in
aam
cli
cmp
or
inc
mov
sahf
rcrb
jae
jg
ljmp
test
cmp
scas
xor
mov
nop
xlat
jmp
or
jno
ds
pop
imul
push
lods
ret
test
dec
es
jl
xchg
hlt
ror
dec
and
inc
subb
aaa
dec
cmpsb
or
sub
daa
pop
sbb
push
cmp
daa
dec
push
xchg
insb
mov
aam
jnp
mov
and
ljmp
movsl
jmp
add
jl
in
inc
inc
and
mov
cli
xor
pop
icebp
mov
cs
ficoms
push
es
pop
fldenv
icebp
ret
pop
cwtl
addb
cmp
iret
fldcw
xor
and
inc
add
sbb
leave
push
inc
inc
mov
sbb
fldt
lock
out
ret
ret
and
inc
and
pop
jge
in
pop
inc
fdivl
das
mov
enter
or
jne
clc
mov
mov
popf
fdivrl
fildll
pop
dec
lock
jmp
call
int
pop
jl
popf
mov
pop
pop
je
xchg
or
iret
add
and
adc
mov
iret
std
lea
cmp
lcall
shr
sbb
cmp
sbb
fidivl
aam
or
inc
stos
push
xor
pop
loopne
push
push
add
sub
stos
adc
cs
out
les
or
pusha
pop
inc
rcll
out
lahf
push
insb
xchg
dec
lret
inc
xor
inc
mov
dec
ret
dec
int3
mov
push
jb
mov
sbb
mov
movsb
dec
push
dec
adc
aad
jae
xchg
jno
sbb
xchg
call
inc
sub
dec
shlb
cltd
and
mov
test
repnz
or
mov
mov
pop
xchg
call
pop
xor
pop
xorl
and
sub
cld
lock
fimuls
push
jns
xlat
push
outsl
fstl
push
addb
aad
outsb
cs
data16
js
push
jl
stos
and
outsb
or
addl
aaa
iret
or
enter
lock
push
pop
cmpsb
dec
or
sahf
test
xor
cmp
popa
mov
je
pop
cmp
or
xlat
jo
fisubs
jno
mov
and
lods
dec
jnp
adc
dec
lahf
pop
xchg
out
out
dec
pop
daa
hlt
add
mov
add
and
rcll
or
out
ljmp
ret
cmovnp
mov
mov
cmp
xchg
jmp
push
xchg
push
cwtl
push
js
and
cld
jo
sub
xor
jp
int3
lahf
sub
push
je
cmp
rcrb
mov
sub
adc
push
push
enter
lods
je
repnz
out
sti
fucomi
fdivrl
leave
mov
addl
xchg
insl
int
or
or
and
xchg
cmp
inc
in
clc
dec
aam
inc
cmpsb
push
outsb
jns
cmp
movsb
dec
cmp
loopne
loopne
fwait
mov
pop
sbb
ss
mov
shr
das
jp
lea
cmp
sbb
sbb
ficompl
or
imul
fiadds
inc
xor
lcall
mov
add
bound
jmp
push
xor
or
call
cmp
mov
ret
push
movsb
pusha
mov
add
jnp
imul
push
mov
mov
sti
xchg
cld
mov
test
hlt
pop
add
rorb
jmp
xlat
in
push
aas
insb
inc
cld
mov
fstpt
jne
lahf
pusha
mov
test
xlat
jg
stos
les
into
dec
add
data16
sarb
mov
aad
sub
sbb
std
call
fwait
cmpsl
fnstenv
outsl
daa
add
sbb
out
mov
push
iret
fnstsw
cmp
cmp
inc
in
mov
and
flds
in
repnz
sbb
into
push
lret
popf
mov
out
mov
fsubrp
test
dec
mov
int3
fimull
sub
inc
jp
push
jbe
je
sbb
sub
out
pop
add
jne
pop
mov
mov
mov
pop
sahf
dec
leave
cs
into
add
lret
pop
mov
jp
add
repnz
loopne
ljmp
mov
int3
lds
pop
and
sbb
mov
nop
scas
and
and
jns
fwait
cmpsl
in
repnz
push
sub
test
fxch
movsb
sbb
pop
int3
mov
inc
push
test
mul
and
jge
xorl
add
or
inc
sti
enter
cmc
rorl
lret
fadds
and
sub
test
fdivl
push
das
add
rcr
dec
int
cmpsl
jo
push
or
xchg
jb
lcall
lds
adc
pop
repz
jns
cwtl
sbb
jne
mov
outsl
arpl
mov
adc
mov
fmul
xor
cmpsb
sbb
test
sbb
cmp
pop
push
in
loope
sub
test
outsl
push
in
fwait
mov
cltd
mov
lods
cli
and
inc
mov
insb
fwait
repz
push
arpl
in
jp
push
jl
xchg
dec
or
not
pop
insb
clc
adc
push
popf
lock
jns
mov
filds
pop
data16
mov
jo
cld
pop
mov
adc
pop
sbb
jno
add
roll
fs
std
mov
nop
fidivl
xchg
fistpll
jp
call
in
mov
cwtl
add
mov
cs
ret
xlat
cmc
xchg
mov
dec
or
imul
push
imul
jne
jp
lahf
mov
dec
add
and
lock
jg
fcoms
je
call
shlb
fmull
jae
mov
dec
adc
fisttpl
pop
pop
comiss
inc
mov
xchg
pop
iret
adc
pop
es
aad
xchg
arpl
movsl
in
lret
cmp
pop
fwait
mov
cmp
cli
push
lds
adc
and
repz
xchg
inc
jge
hlt
dec
imul
add
pop
push
lods
test
xchg
mov
push
cmpsl
pop
nop
and
xlat
fldz
adc
jmp
shll
mov
int3
xchg
dec
sbb
push
lahf
or
pop
out
adc
pop
and
std
mov
rolb
repz
movsb
pop
scas
jne
cwtl
sti
inc
cld
cmp
add
inc
dec
push
inc
out
imul
shlb
sbb
call
and
mov
jnp
push
popa
and
mov
xchg
mov
mov
mov
sub
mov
mov
mov
dec
inc
ljmp
xchg
iret
jbe
call
ret
xchg
push
xlat
mov
outsl
rcr
movsl
or
lret
lds
adcl
mov
xchg
pop
dec
sub
pop
shlb
aas
add
in
jnp
cltd
mov
jne
add
adc
cmpsl
stc
xchg
mov
pushf
xchg
pop
stos
sub
and
fwait
je
cwtl
push
lret
cmp
jp
cmp
sub
fdivrl
repz
add
jge
add
push
xchg
inc
roll
call
or
mov
scas
push
ret
sbb
xchg
dec
fstp
cmp
mov
mov
push
or
jle
daa
testl
and
fnstcw
fnstcw
push
aaa
sub
jb
in
push
jne
iret
cmpsl
cmp
jl
hlt
mov
dec
das
cmpb
inc
in
dec
mov
and
add
sub
cld
sbb
cmp
aas
and
jae
stos
pop
mov
cmpb
fdivl
pop
cmp
and
in
nop
mov
rorb
cwtl
mov
adc
outsb
mov
or
aam
jp
jmp
fisubrs
dec
stos
iret
imul
mov
mull
push
jae
mov
std
movsl
mov
sbb
into
notl
adc
in
cwtl
push
stos
add
bnd
push
or
jnp
cmpsl
pop
ss
int
js
mov
adc
xor
ret
add
movsb
mov
mov
jge
dec
jb
cli
gs
mov
ds
jb
jp
js
nop
lret
mov
pop
dec
mov
aaa
mov
xchg
cmpsl
cmovs
shl
int3
sbbl
mov
arpl
mov
aad
rcll
or
pushl
pop
adc
add
jecxz
es
add
outsb
lea
imull
or
and
mov
inc
shr
adc
gs
lds
mov
sbb
mov
adc
jo
mov
sti
xchg
xchg
hlt
fbld
mov
loop
mov
xor
decl
rolb
add
cmp
call
mov
repz
xor
int3
dec
cmovnp
stos
pop
cmc
adc
jl
aas
push
jae
test
and
pop
rcll
shlb
test
ja
test
mov
adc
outsl
dec
mov
jp
fsubs
xchg
mov
sub
dec
cltd
stos
in
xchg
sbb
cmp
push
mov
lods
fisubs
inc
iret
jne
scas
js
xchg
push
pusha
and
mov
or
arpl
dec
push
in
push
rolb
outsb
cmp
orb
cwtl
mov
xchg
push
inc
int3
aaa
es
and
jno
imulb
aam
mov
test
cmpsb
mov
xchg
jne
xchg
mov
movsb
cmp
sub
and
lret
ret
and
roll
pop
in
xchg
mov
and
mov
ss
ret
outsb
faddp
insl
arpl
push
jnp
out
std
dec
fldenv
lcall
mov
outsb
es
inc
mov
repz
out
sub
nop
xchg
mov
lahf
pop
jecxz
mov
mov
out
sbb
call
push
sbb
pop
pop
cmpsb
sbb
sbb
mov
aas
test
jge
push
sub
dec
xlat
dec
sti
dec
mov
and
cmp
sub
and
mov
in
or
xchg
fisttps
lods
or
fcoml
test
test
push
mov
cmpsb
repnz
adc
mov
lcall
mov
hlt
mov
xchg
push
push
and
fs
jns
inc
popa
push
sub
and
test
loope
cli
push
push
mov
mov
in
xor
clc
test
ds
icebp
push
mov
fistpl
int
dec
jbe
sti
mov
lds
aam
pusha
insb
jbe
jl
mov
or
adc
clc
push
xchg
or
imul
xorb
sarl
lock
test
test
jmp
add
jle
add
js
sub
in
cmp
inc
lds
cmp
sarl
cwtl
jmp
lods
lret
dec
loope
lods
ds
pop
mov
adc
jne
ljmp
mov
xor
repnz
jb
fnsave
into
pop
fistl
mov
xor
stos
notb
pusha
cs
fcomip
add
insb
xchg
dec
mov
lea
scas
mov
or
shlb
push
cwtl
jne
stos
jl
or
ja
inc
push
xchg
fstpt
cmp
jae
xchg
inc
pop
jle
add
add
in
mov
mov
imul
cmp
push
pop
aas
dec
xchg
mov
mov
adc
push
rcrb
rorb
jb
loop
hlt
mov
xchg
hlt
xchg
mov
stos
pushf
inc
xchg
push
mov
inc
je
cltd
ds
stos
sti
test
pop
scas
imul
dec
out
imul
mov
outsl
aam
mov
popf
inc
setno
test
xchg
dec
add
jbe
mov
outsb
mov
adc
cltd
jmp
rcl
dec
inc
xchg
pushf
cld
xchg
sub
in
cmp
test
imul
pop
cmp
sub
mov
dec
xchg
movsb
xor
cltd
call
sarl
imul
push
out
cmp
xlat
movsl
ret
mov
cmp
xor
shll
add
mov
xchg
xchg
fistl
dec
inc
mov
cmc
das
imul
iret
dec
lret
push
ja
insb
das
sub
xchg
adc
mov
dec
inc
mov
das
cmp
jbe
stos
mov
ret
sbb
push
fisubrs
ljmp
mov
adc
xchg
and
lods
push
dec
mov
xchg
jns
xchg
cmp
pop
pop
cmp
dec
sbb
das
stos
aam
in
xchg
addr16
arpl
sti
inc
push
dec
sub
pop
stc
test
adc
leave
fldt
add
add
add
add
add
add
add
add
add
add
mov
add
add
roll
add
mov
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
ja
add
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
repnz
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
movl
add
add
add
add
add
add
nop
data16
sbb
add
push
pop
adc
add
add
add
add
add
add
add
add
jae
mov
mov
cltd
test
pushf
mov
cmp
dec
jmp
push
std
and
subl
aad
and
cmp
push
imul
fnsave
push
dec
repz
mov
addl
and
push
test
test
popf
mov
popf
jo
orl
sbb
fwait
mov
sbb
pop
mov
jae
cmp
xor
sbb
dec
push
xor
jmp
pop
xor
test
pop
es
shrb
mov
and
sti
testb
aam
mov
add
push
aam
jbe
pusha
orb
jo
movsl
popf
les
sbb
sbb
sarl
lcall
fidivrl
repnz
or
pusha
xchg
lsl
icebp
push
jle
aad
pop
scas
mov
dec
cmpl
mov
xchg
fs
inc
push
mov
mov
stos
inc
push
out
in
pop
jae
mov
lock
and
pop
cs
ret
shlb
ret
dec
push
jo
sbb
test
test
adc
sbb
repz
adc
dec
fisttpll
int
mov
andb
or
add
jb
add
add
mov
add
add
jne
bound
add
add
add
fildl
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
repz
add
add
add
add
add
add
add
add
pop
add
add
aaa
aaa
jb
cmp
add
push
adc
cwtl
adc
leave
cmp
add
adc
pop
imul
mov
push
adc
mov
adc
sub
add
push
adc
cld
push
adc
fisubrl
adc
jae
adc
sarb
jg
adc
jg
adc
xor
adc
test
adc
andb
addl
add
adc
xchg
jo
add
adc
cmp
adc
shrb
adc
fistpll
adc
pop
dec
adc
arpl
add
adc
popf
push
adc
daa
inc
adc
cmp
add
jne
add
bound
add
cmp
add
adc
jo
adc
sbb
adc
xchg
adc
outsb
sbb
add
dec
adc
push
jle
add
adc
mov
adc
mov
inc
adc
addr16
adc
dec
add
add
arpl
add
adc
enter
pop
xor
add
inc
adc
mov
push
adc
aaa
dec
adc
jge
adc
cmp
adc
and
js
jb
and
outsb
dec
xor
outsb
outsb
push
inc
insb
je
push
inc
outsb
jbe
je
xor
dec
push
aaa
aaa
cmp
inc
cmp
and
aaa
aaa
jo
inc
inc
dec
xor
xor
cmp
and
dec
push
xor
aaa
fs
aaa
dec
xor
and
jo
dec
je
fs
aaa
bound
inc
outsb
xor
je
and
add
push
inc
insb
and
xor
cmp
and
cmp
dec
push
dec
and
xor
outsb
cmp
jb
je
and
xor
and
xor
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
lods
inc
add
dec
cmp
cmp
push
aaa
inc
ss
pop
push
cmp
push
push
add
xor
push
xor
inc
inc
add
xor
inc
push
cmp
pop
inc
add
inc
cmp
push
xor
add
xor
xor
aaa
pop
dec
add
xor
inc
xor
pop
inc
cmp
push
add
dec
pop
push
push
aaa
dec
xor
push
xor
pop
push
push
pop
inc
push
xor
add
inc
pop
cmp
push
pop
add
pop
xor
xor
push
dec
add
push
cmp
pop
pop
cmp
cmp
add
push
pop
cmp
push
cmp
cmp
push
inc
dec
add
xor
xor
xor
push
xor
pop
xor
xor
push
add
xor
pop
xor
xor
add
inc
pop
pop
dec
pop
inc
ss
inc
add
xor
pop
xor
push
push
aaa
xor
add
dec
pop
push
pop
cmp
pop
inc
add
inc
xor
pop
add
push
xor
inc
push
push
pop
push
push
pop
add
add
pop
add
cmp
pop
push
add
inc
add
add
add
pop
add
cmp
dec
add
push
add
add
add
xor
pop
add
add
dec
add
add
add
add
inc
add
push
add
pop
add
add
add
pop
add
dec
add
push
add
dec
add
dec
add
add
aaa
add
add
push
add
dec
inc
add
add
pop
add
xor
xor
add
add
add
cmp
dec
add
push
add
xor
pop
add
push
push
add
add
pop
add
dec
add
add
pop
add
push
add
add
dec
add
add
inc
add
cmp
xor
pop
add
inc
add
dec
add
xor
xor
inc
add
inc
add
add
add
pop
add
add
add
add
push
push
inc
push
out
adc
dec
mov
mov
jno
pop
add
dec
cmp
dec
push
imul
pop
arpl
dec
ja
insb
pop
bound
push
addr16
jo,pn
bound
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
push
push
int
iret
dec
jnp
cmpb
mov
mov
fistpll
arpl
pop
sub
mov
sub
lret
mov
mov
fndisi(8087
cltd
push
ds
pop
nop
push
ljmp
clc
imul
mov
sub
mov
je
adc
fwait
in
roll
adc
cs
or
aam
adc
and
ljmp
cmc
int3
aad
jns
add
clc
out
lock
xchg
sbb
sub
loopne
aas
push
xor
repz
ficomps
cltd
jecxz
inc
sub
scas
push
pop
fcmovu
ljmp
int3
pusha
and
sub
sub
mov
pop
dec
fmul
fs
jo,pt
test
xchg
outsl
andl
cmpsb
adc
jmp
mov
lods
add
jnp
sti
mov
mov
dec
cmp
call
and
movsl
ds
stos
addl
insb
inc
push
mov
xor
pop
pop
fisttpll
je
mov
out
nop
shlb
mov
push
cwtl
pop
inc
fdivr
sbb
mov
add
rorb
pushf
insb
xor
imul
dec
or
push
daa
mov
bound
in
add
lds
scas
mov
and
xor
sub
xor
xchg
mov
aaa
push
fmuls
pushf
sub
mov
fisttpll
icebp
insl
push
arpl
dec
sbb
mov
aad
xchg
inc
cmc
jb
in
scas
ror
or
cmpsl
or
les
ljmp
jbe
lock
push
ss
sub
movsb
jge
xor
mov
mov
imul
and
pop
xchg
adc
push
or
rcrl
int3
cmp
addb
lods
sbb
mov
dec
xchg
inc
push
mov
in
cmpsb
mov
rcll
sbb
push
and
lods
gs
test
jle
dec
dec
mov
and
cmp
add
test
adc
jbe
cld
aam
xchg
adc
or
aaa
xor
es
rcll
xchg
lods
cmp
movsl
dec
fisttpll
push
and
mov
cmp
pusha
fsubrs
jl
push
mov
or
adc
mov
mov
popf
sarb
cmpsb
sahf
sub
and
cmp
add
add
scas
push
add
les
repz
add
fbld
int3
sub
popa
dec
lahf
cmp
xchg
lods
and
jnp
outsb
ret
cmp
jg
lret
mov
push
mov
rcr
or
mov
ds
push
ljmp
push
mov
test
push
gs
or
xchg
cmpsl
je
sbb
sbb
fnstcw
push
cmpsb
int
jbe
pop
inc
rolb
sbb
call
sub
fidivs
xchg
stc
adc
jb
mov
push
jno
mov
or
xor
out
pop
fs
bound
and
mov
jg
mov
xchg
sbb
int3
cltd
cmp
bound
adc
test
cmp
mov
sub
outsl
cmp
mov
sub
std
jmp
cmpsl
jmp
sti
push
lahf
cmpsl
adc
insb
dec
sti
mov
pop
sbb
mov
cmp
fbld
lahf
adc
cmp
adc
fidivl
cmp
aad
xorl
popf
add
sub
sub
mov
jmp
sbbb
mov
andl
push
or
insb
in
test
or
mov
cld
xor
int3
out
mov
push
fcompl
and
xor
fadd
dec
gs
in
out
cmpsb
testl
sub
pop
arpl
daa
hlt
test
stc
into
xchg
xchg
sub
es
js
push
pushl
fsubr
mov
cwtl
mulb
fucomi
mov
mov
jecxz
push
int
xchg
jg
movsl
mov
ds
into
xor
and
cmp
cmp
pop
jnp
cwtl
inc
xor
inc
out
jecxz
cmp
das
xor
repnz
scas
inc
jmp
int3
imul
dec
outsb
and
dec
inc
sub
lds
lods
adc
or
scas
cmpsb
add
imul
xchg
movsl
lock
hlt
push
jne
cld
imul
sbb
movsl
adc
sbb
push
adc
inc
xchg
in
inc
repnz
jmp
inc
push
or
sbb
xchg
and
imul
adc
mov
push
push
mov
push
inc
ficoml
xchg
aam
pop
dec
cs
mov
add
aad
stos
push
fimuls
int
push
xchg
sub
sbb
pop
push
gs
and
mov
sbb
lods
insl
sbb
test
scas
xor
in
mov
push
lods
or
xchg
and
jo
or
call
test
testb
dec
sbb
add
inc
lds
xor
fnop
mov
in
add
imul
adc
lock
push
xor
cld
sti
lahf
mov
lcall
sbb
xchg
icebp
adc
xchg
xor
call
les
aas
mov
sbb
shrb
pop
and
lret
std
into
sub
in
xchg
xchg
sub
pushf
or
push
push
mov
and
andb
or
adcl
add
popa
sub
ret
mov
rorl
add
add
dec
xchg
mov
add
push
jns
dec
mov
xor
lret
mov
mov
scas
das
mov
shrb
inc
loope
xor
dec
and
mov
imul
cmp
mov
add
xchg
push
lea
and
ds
imul
aam
cmpb
jmp
lea
cs
sbbl
ljmp
inc
test
inc
adc
jmp
sbbb
adc
loope
or
push
clc
mov
fwait
or
jle
je
outsl
xor
sahf
insb
sub
sbb
mov
test
push
xchg
push
aam
jecxz
cmc
movsb
mov
ss
lea
jle
dec
mov
js
mov
jle
jo
or
scas
jmp
rcr
js
cld
rcr
call
jns
pop
xor
cmpsl
aam
cs
push
inc
sub
push
insl
xchg
outsb
pusha
fcoml
push
dec
call
ss
ja
mov
push
ja
out
mov
adc
movsb
dec
xor
popa
pusha
push
outsl
sub
dec
fsubr
inc
dec
addb
gs
fimuls
pop
scas
push
ror
rcrb
xchg
jbe
out
cmpsb
mov
imul
pop
pop
sub
inc
into
dec
pop
add
sbb
push
adc
xchg
cmpsb
push
js
outsl
or
stos
or
repnz
fldl
pusha
adc
cmp
cltd
cmp
push
adc
cmp
or
int3
jmp
nop
add
mov
mov
fcoms
ja
es
call
sti
xor
lret
popf
pop
lods
inc
adc
jnp
negb
pop
push
lock
fistps
idivl
test
mov
xchg
clc
clc
ffree
imul
pop
lods
into
andb
mov
daa
xchg
sub
jnp
inc
mov
mov
outsl
loop
enter
inc
repnz
xchg
xchg
cmp
cltd
add
in
push
push
outsl
cmp
pop
jne
mov
push
sbb
sahf
subb
repz
mov
lea
cmpl
lcall
into
insl
adc
and
push
sarl
addl
test
aam
cmp
mov
fmull
cmp
fcomip
jo
mov
movsb
or
mov
sbb
push
in
mov
jge
stc
dec
add
cmp
cmc
sahf
into
ret
icebp
xchg
cltd
mov
xchg
lret
jns
lahf
adc
fildll
dec
or
mulb
out
mov
clc
out
mov
stos
mov
inc
xchg
push
sbb
push
sar
xor
inc
cmp
pop
stc
inc
lahf
ret
movsb
popa
sub
or
popa
add
push
sub
or
mov
pop
dec
test
lret
cmp
lret
xor
scas
shlb
sbb
int
or
scas
je
lea
enter
scas
pop
jne
ss
icebp
dec
push
add
xlat
add
cmp
fisubs
inc
jmp
pop
jmp
mov
add
sub
mov
jae
out
add
adc
fwait
fistpll
or
out
and
outsl
ss
pushf
out
jnp
inc
jecxz
popf
cld
int
test
loopne
cld
stc
sub
es
xchg
mov
pop
mov
test
aaa
repnz
inc
leave
lret
adc
adc
in
push
pop
lods
iret
lcall
rcrl
into
popf
aad
mov
data16
mov
aas
jns
in
std
pop
xchg
icebp
hlt
jl
sub
ja
xor
shll
mov
ds
push
cmpl
mov
pop
mov
cmp
or
iret
cmpsl
mov
push
cmpl
xor
xchg
jb
pop
pop
aad
inc
outsl
push
sub
push
push
pop
add
cmp
xchg
inc
scas
xor
fcmovnb
subb
xchg
jge
push
jns
push
jp
push
lret
aad
xchg
push
lds
inc
cs
sub
into
xor
fnstcw
mov
pop
loopne
arpl
cmp
sbb
test
mov
inc
push
cmpsl
cmp
or
aas
jo
repnz
andl
stos
add
es
sbb
mov
rcr
mov
imul
sub
mov
inc
divl
jnp
lds
call
add
jo
test
sub
pusha
pop
out
sub
jbe
and
xorl
or
mov
and
mov
adc
das
mov
sub
inc
mov
or
in
mov
jbe
out
aaa
ja
cwtl
xchg
outsl
cltd
fcomps
aas
js
pop
out
test
mov
jne
mov
adc
je
lods
xchg
mov
dec
aam
jns
or
xor
movsb
inc
add
and
sbb
mov
mov
jns
addl
xlat
xchg
jl
inc
mov
in
push
aaa
hlt
mov
pop
and
cmp
xchg
div
xchg
and
shr
loope
mov
dec
push
in
mov
add
in
repnz
jo
sub
or
data16
je
push
faddl
pop
push
push
mov
gs
mov
stos
sub
cmp
js
pop
adc
inc
mov
jle
push
stc
notb
jne
setno
in
cmp
es
dec
cld
jmp
loope
and
or
or
stos
adcl
bnd
sahf
leave
fwait
iret
sarl
jg
pop
cli
addr16
pop
push
ss
ds
push
outsl
in
subl
jle
sarl
inc
cwtl
ja
loop
arpl
in
sub
cld
aas
into
fnstsw
jl
jb
loope
mov
xchg
sub
mov
xor
movsl
push
pop
rcrb
repz
rcrb
mov
jbe
fadds
cmp
cmp
xor
sub
rcr
cmpsb
int3
movsb
clc
push
cld
push
pop
les
lock
aaa
repnz
lds
addr16
into
cs
arpl
mov
es
fdivrl
or
dec
push
movsl
in
cld
js
jo
mov
push
std
sub
and
xchg
sarl
pop
and
pusha
stos
jo
add
mov
cmc
xorb
xchg
movsb
inc
insb
stos
int3
xchg
out
mov
mov
cmpsl
xor
scas
sbb
cmp
dec
dec
push
and
mov
js
aas
mov
out
and
in
inc
enter
mov
in
imul
cmp
in
lds
xor
pop
daa
mov
movaps
sub
mov
imul
mulb
mov
pop
aaa
sbb
add
inc
cmp
sbb
xchg
sub
pop
or
push
inc
movsb
lea
mov
inc
inc
push
adcl
mov
dec
imul
stos
js
loope
pop
ja
mov
mov
xchg
inc
mov
call
cmp
xor
jne
les
notl
mov
hlt
xlat
in
xor
cld
xor
repz
ret
mov
inc
pop
push
in
mov
add
fists
mov
pusha
adc
sahf
mov
dec
addr16
lcall
pop
inc
lret
add
mov
sub
mov
jmp
lahf
cmpl
in
adc
mov
mov
call
mov
mov
fdivl
cmp
rol
mov
mov
sti
cmc
repz
and
in
push
int
push
xor
out
push
cmp
push
add
or
mov
cmp
lods
and
sbb
iret
mov
loopne
loopne
mov
dec
ljmp
cwtl
insb
pop
mov
lods
loopne
or
mov
arpl
jne
imul
mov
mov
gs
aam
fwait
jno
int3
test
cmp
cmpsb
inc
and
rolb
ret
js
push
sahf
out
adc
mov
inc
test
mov
and
jge
imul
daa
add
xchg
out
popf
jmp
iret
dec
cmp
cmpsl
jns
loope
sti
mov
mov
jl
sbb
sub
in
int3
push
jne
mov
push
scas
out
inc
mov
nop
cwtl
lahf
icebp
sbb
and
cmp
and
inc
jbe
out
xchg
jae
rorl
notb
xor
enter
jo
outsb
push
add
inc
mov
lock
jl
mov
cmp
aad
push
mov
mov
sbb
sbb
dec
aaa
mov
sti
adc
ror
jge
lret
push
lock
js
adcb
test
ja
xchg
adc
test
cltd
push
push
into
stos
jno
lock
fcoms
lcall
mov
pop
sub
dec
fwait
inc
jp
lods
inc
bound
aas
in
dec
cmpl
in
lock
cmp
rcll
loope
add
sti
fst
inc
sub
cwtl
sub
stos
sub
pop
outsb
dec
fcom
fistpll
fnstenv
add
dec
je
cmp
daa
dec
lcall
xor
sbb
out
pop
push
ret
and
inc
inc
inc
ljmp
xlat
outsl
or
mov
lods
rol
or
sbb
xchg
adc
lcall
sbb
jae
rcrb
add
or
cld
das
lods
push
fidivs
sbb
jge
fidivrs
jmp
mov
sahf
aaa
cld
mov
imull
in
add
aas
out
sar
je
mov
lds
popl
ljmp
sbb
and
xchg
loopne
mov
sub
mov
jo
fidivs
mov
pop
pushf
pop
add
push
xchg
sub
out
nop
adc
push
mov
inc
adc
sub
ja
xor
lods
fcomp
imul
decb
stos
or
mov
js
push
std
lcall
lahf
and
or
xchg
dec
test
jmp
test
cltd
adc
sbb
shrb
pop
mov
pop
movl
cmp
rol
cmp
cmp
jecxz
stc
mov
popa
outsl
jmp
jne
icebp
pop
popf
mov
jmp
pop
repnz
lret
aas
sbb
sahf
icebp
fdivr
mov
xor
mov
xchg
outsb
cltd
out
xbegin
jns
jae
cld
cmp
scas
dec
add
stos
xchg
inc
mov
inc
cltd
addb
mov
stos
pop
push
movsl
cmp
lods
pop
inc
popa
mov
imul
cli
rol
mov
inc
or
mov
pushf
mov
lret
adc
xor
iret
ret
sbb
push
cmpsb
sbb
sar
pop
xchg
xor
xor
shlb
fldl
stos
jecxz
cmp
rorl
lcall
mov
cld
inc
lret
jge
scas
jno
cmpsb
ret
scas
xor
xchg
stos
jae
dec
dec
jns
mov
push
or
sub
cmp
sbb
pop
out
fbld
addb
inc
fistpl
outsl
fimuls
jg
mov
mov
cmp
mov
dec
lea
mov
push
jnp
loop
test
mov
dec
jno
aas
jbe
into
cld
jg
push
das
adc
sub
lcall
and
adc
insl
dec
mull
pop
outsl
push
pop
rorl
stc
xchg
sbb
adc
fisttps
icebp
imul
test
testb
or
rorl
shrl
adc
in
test
sub
hlt
out
sbb
sub
cmpb
movsb
pop
sub
jnp
pop
mov
call
mov
push
jnp
into
mov
sub
push
les
ret
loope
jl
repnz
sbb
push
clc
xor
push
idivb
stos
leave
icebp
mov
adc
fld
mov
jmp
adcb
jae
or
sub
dec
inc
ficomps
add
and
jecxz
inc
sub
loop
popf
cmp
iret
loope
and
scas
pusha
cld
mov
mov
push
inc
movsb
clc
cli
sub
shl
aam
mov
add
mov
jno
test
dec
pop
stos
sbb
or
out
mov
nop
jle
jl
sbb
pop
and
mov
cmpl
xchg
test
aad
mov
fsubrs
fisttps
orb
cmp
jne
cwtl
fstps
insl
mov
xchg
andl
and
fdivrp
cmp
shl
hlt
add
mov
les
idiv
jl
lret
mov
add
add
dec
insb
movsb
loopne
roll
hlt
pop
pop
scas
int3
mov
cmp
push
add
adc
nop
jns
lock
divb
dec
mov
mulb
stos
inc
xor
xor
movsb
mov
mov
dec
mov
sbb
add
je
sbb
ret
xchg
sti
sub
dec
or
jae
cmpsb
dec
mov
std
mov
js
push
or
sbb
js
mov
xorb
add
and
sbb
ret
jp
cltd
loope
inc
mov
addb
pusha
sbb
lret
and
lods
dec
rcrl
repnz
and
mov
inc
add
xlat
jl
xchg
jns
cli
leave
inc
lods
dec
fxch
faddl
xchg
aaa
xchg
aaa
addl
loope
lret
mov
inc
addl
cltd
movsb
push
leave
dec
scas
test
xor
pop
and
mov
dec
lret
fwait
push
push
xchg
mov
lea
cmp
stos
lods
fs
lock
adc
or
incb
ljmp
pop
add
or
cmpsl
and
iret
sarb
cltd
orb
pop
jns
mov
les
aaa
adc
inc
jl
mov
montmul
cmpsb
add
pop
loopne
dec
xor
mov
jl
dec
mov
leave
jecxz
test
pop
dec
insl
lcallw
fsubr
mulb
adc
orb
mov
sbb
or
cmp
cwtl
outsb
add
lahf
es
mov
mov
cli
scas
popa
push
je
mov
xlat
pop
xor
aad
pop
bound
ds
pop
and
push
cmp
mov
repz
push
dec
inc
shrb
cmp
lret
aam
call
stos
aad
clc
lret
jmp
or
sbb
inc
sti
pop
lret
ret
mov
adc
push
xchg
adcb
push
xchg
pop
add
or
push
shlb
fwait
das
sub
rcr
push
cmp
jle
cmp
jae
jle
xor
jl
sti
dec
mov
xor
shl
ja
lods
dec
sub
sbb
sbb
pop
inc
mov
ret
hlt
lea
fs
inc
mov
jle
add
mov
cld
cmp
out
inc
mov
pop
lods
jno
hlt
mov
xor
mov
sub
insl
fnstsw
sub
mov
aaa
inc
hlt
pop
cld
cltd
xchg
movq
dec
call
sbb
mov
sub
dec
cmp
andl
enter
sbb
repnz
shlb
mov
dec
push
pusha
out
xor
int3
test
jb
int3
lock
test
cmp
xchg
orl
adc
ljmp
pop
cld
shll
mov
pop
lds
js
ret
or
pusha
dec
xchg
jns
jp
stos
xlat
test
add
rolb
mov
lods
in
pop
addr16
mov
cmpsl
ret
fistpl
stc
xchg
xchg
jne
jne
testb
dec
or
scas
mov
movsb
dec
test
jg
xor
sbb
jnp
mov
xchg
sub
call
cltd
data16
xchg
sahf
sbb
aas
jns
fldl
cmp
lfs
cmp
jns
sbb
dec
adc
and
hlt
mov
jns
test
scas
push
test
mov
or
loop
xor
sub
and
imul
push
mov
mov
bnd
and
pushf
jle
aad
adc
mov
into
cltd
mov
xor
fiadds
dec
cmp
push
stc
cmpsl
divl
dec
mov
adc
xchg
nop
cmp
fisubs
std
jo
into
pop
xchg
out
jge
das
arpl
push
test
mov
cmp
out
mov
dec
sub
movsb
push
dec
cmpsb
push
out
stc
or
sub
cli
fldl
divl
sti
aas
push
lret
faddl
cs
jns
push
in
cmp
movb
cmp
push
adc
lret
into
adcb
mov
mull
cmp
aas
sbb
xor
add
sub
or
or
push
cli
ret
repnz
lahf
mov
mov
aaa
adc
dec
mov
les
adc
xor
or
dec
or
loope
xchg
scas
pop
push
ret
outsb
adc
or
fisubrl
fildll
inc
cmc
cli
lds
jnp
cmpsb
daa
sbb
add
popl
cmp
roll
sub
push
and
xchg
gs
in
aaa
push
mov
insl
adc
pop
xor
mov
pop
inc
pusha
je
push
dec
sub
jp
xor
xchg
mov
cmpsb
mov
out
or
and
cmp
xor
in
sub
loope
fcmovb
repz
xchg
loope
or
push
pop
shll
mov
mov
pop
int
cld
xlat
std
outsb
cmp
sbb
sbb
xchg
cmpsb
xchg
xchg
pandn
gs
stos
int3
test
lret
and
cmpsl
mov
mov
in
not
pop
rcrl
dec
pushf
xchg
xor
and
scas
pop
xchg
call
push
data16
adc
adc
test
xchg
mov
insb
and
mov
repz
addr16
mov
inc
das
sub
xor
nop
xorl
in
bound
in
movsl
and
aad
sbb
push
pop
and
push
inc
pop
dec
mov
int
jbe
push
push
movsb
ss
lcall
xchg
cmp
inc
jle
fisttpl
xchg
xchg
stos
add
cmp
cld
sub
inc
adc
ja
cld
xor
xlat
add
mov
and
mov
jo
pop
out
aad
push
mov
jbe
faddl
xchg
ficompl
into
sbb
outsb
clc
jmp
sub
or
sub
test
loope
lods
ja
idivl
int3
adc
xor
sbb
mov
push
jp
xchg
mov
fwait
out
or
incb
cmp
or
ljmp
out
in
push
jg
mov
es
negl
clc
mov
sbb
aas
nop
lods
bound
fists
xchg
loopne
mov
push
loopne
mov
inc
push
dec
call
xlat
aaa
mov
push
ss
rorl
cli
sub
xchg
jmp
int3
popf
push
jp
mov
jmp
jo
pop
mov
loopne
cs
jo
inc
lock
or
pop
jno
dec
shll
ds
arpl
and
mov
push
sub
jmp
shr
inc
outsb
ret
dec
outsl
dec
or
aad
cmpsb
fisubl
mov
into
repnz
ljmp
xchg
ja
addl
and
imul
mov
in
lahf
mov
jbe
dec
xchg
jno
test
jbe
popa
dec
fst
push
popa
jnp
out
xchg
inc
cmp
repz
mov
cmp
mov
in
fdivl
jmp
fildl
mov
mov
fwait
sbb
add
adc
sbb
dec
rolb
enter
out
test
pop
mov
push
mov
sub
mov
mov
add
repnz
dec
lahf
test
lcall
lret
rcrb
pushl
loop
cli
aas
test
js
loope
imul
in
and
add
xchg
and
pop
push
cmp
je
jae
pop
into
xchg
mov
sub
adc
inc
add
addb
fcompl
xor
dec
adc
out
xchg
lar
pushf
cmpsb
and
cmpsl
sub
cld
mov
out
xchg
or
push
xchg
and
xchg
mov
lahf
or
scas
mov
push
push
xorl
push
mov
movsl
enter
int3
sbb
mov
cmp
clc
repnz
mov
sbb
jmp
sub
pop
jae
xchg
xchg
pop
daa
cmp
jo
xor
gs
ret
imul
testb
pop
or
clc
lret
cltd
push
mov
dec
adcb
les
loopne
jno
mov
rcl
adc
fbstp
and
das
mov
xor
in
cwtl
pop
mov
cwtl
pop
pop
cmp
popf
adc
scas
mov
cmc
mov
bound
cmp
cmp
cld
mov
jne
or
dec
fdivrl
lret
pop
test
in
negl
sub
push
out
popa
cli
push
loopne
and
cli
dec
das
jne
adc
mov
add
mov
fwait
aam
icebp
imul
jbe
mov
inc
mov
mov
popf
int
aam
mov
pop
insb
out
iret
movsb
in
push
jns
mov
add
push
jns
popf
out
push
pop
cmp
lret
mov
cmc
add
pop
stos
daa
dec
xor
mov
mov
or
popf
out
gs
repz
pop
inc
ljmp
mov
imul
clc
out
push
mov
repnz
aam
test
out
xchg
or
mov
je
push
push
test
fists
mov
pop
dec
aam
jns
fbstp
outsb
pusha
dec
push
sub
fwait
enter
dec
js
lret
andb
adc
cmpl
jnp
xor
out
cmp
adc
cmpsl
inc
aas
push
andl
and
inc
jl
and
loopne
test
pop
out
lods
aaa
test
sti
popf
xorl
ret
mov
jno
mov
leave
mov
ds
jmp
adc
clc
out
xchg
mov
sbb
and
push
popa
icebp
jge
sub
loopne
jmp
nop
dec
mov
movsl
ret
rcrb
mov
lahf
lcall
cmc
cmp
movsb
movsl
mov
jmp
jl
or
add
jb
or
scas
add
lea
mov
fwait
pop
dec
rcrb
xor
xor
or
cld
mov
push
xor
dec
movsb
jge
cmp
mov
mov
mov
mov
lret
push
mov
push
mov
push
cmpsl
or
es
insb
repz
mov
out
pop
daa
test
and
pop
insl
xorb
fwait
pop
cmp
sbb
mov
xor
inc
inc
imul
leave
dec
inc
in
add
rcl
sub
xor
enter
sub
push
sub
mov
xor
lods
int
pop
mov
inc
push
in
dec
jmp
int3
scas
in
out
jl
jp
or
inc
int3
cmpsl
xchg
sbbb
mov
je
lods
ljmp
shrl
mov
nop
adcb
idivb
iret
fisubrl
pusha
test
lcall
mov
ja
xor
add
lea
stos
push
and
fwait
pop
dec
iret
mov
or
jae
std
popf
xchg
push
xor
mov
push
sub
xchg
xchg
adc
popf
push
lcall
fs
pop
das
repz
jp
cmp
cmpsb
sub
cmp
repz
mov
pusha
sbb
rolb
repz
mov
in
adc
xor
mov
or
adc
mov
stc
ficomps
adc
mov
clc
mov
call
adc
shlb
push
lods
fnstsw
jle
imul
jg
jge
pop
or
cmp
xchg
jl
out
call
add
push
gs
jmp
dec
dec
leave
fidivrs
mov
dec
push
loopne
iret
push
ret
shr
jo
mov
and
mov
mov
jmp
and
mov
fwait
jle
in
xchg
std
hlt
pushf
jge
sub
inc
mov
inc
add
sub
stos
mov
pop
pop
dec
or
xchg
scas
push
mov
mov
jle
mov
into
mov
insb
cli
adc
stc
mov
mov
inc
es
mov
popf
xlat
pop
mov
cltd
inc
ja
inc
jb
or
std
and
lds
xchg
jnp
inc
mov
dec
out
popf
ds
xchg
stos
and
ret
xchg
dec
cmp
and
outsb
adc
js
mov
push
pop
insl
orb
sub
dec
fstpl
faddl
bound
cwtl
push
pop
incl
cltd
div
testb
dec
insb
or
inc
es
cmp
test
faddl
xor
add
inc
flds
cmp
inc
pop
or
cld
pop
lds
jnp
mov
test
add
add
add
add
add
lock
add
add
add
add
add
add
add
mov
sub
add
pop
add
add
push
add
add
dec
add
cmp
add
add
add
add
add
add
add
add
add
add
xchg
jae
add
add
add
add
add
add
add
sahf
add
sub
das
mov
std
inc
test
mov
adc
jmp
movsb
test
lcall
mov
out
push
xor
xor
and
pop
call
or
out
test
ret
inc
lock
cli
repz
xor
scas
jg
lock
xchg
insb
addr16
outsl
addb
mov
push
pop
pusha
shrl
xor
je
lea
push
lods
repz
cli
popf
test
lock
lahf
jns
sub
xchg
sahf
mov
xchg
sub
push
shll
mov
xchg
jg
inc
nop
dec
in
out
shr
xchg
popl
hlt
push
add
cmp
xchg
add
or
sbb
out
fs
push
adc
and
mov
lcall
in
bound
ja
aaa
rorl
insb
int
mov
jg
cmp
jecxz
scas
cmpsb
loopne
mov
cmp
dec
mov
mov
stos
jne
add
loopne
pop
adc
addr16
pop
push
lcall
mov
aam
cmp
add
int3
mov
stos
mov
icebp
sti
es
aad
fs
daa
dec
xchg
out
clc
shrb
sbb
jmp
jmp
das
xchg
iret
test
push
loopne
xchg
scas
cmp
jmp
or
pop
cmp
cltd
mov
jno
sub
sub
mov
test
loopne
imul
aas
dec
jecxz
mov
jno
je
jbe
or
inc
xchg
jp
js
loopne
popf
push
test
pop
loopne
lods
fcoms
xchg
lock
jg
mov
sbb
xchg
mov
or
inc
push
aaa
push
pusha
sbb
and
inc
xor
fucomp
fwait
in
and
out
sbb
movsb
dec
mov
xchg
mov
iret
rclb
xchg
sub
clc
and
shl
hlt
mov
sbb
adc
mov
mov
mov
mov
cmp
insl
xor
mov
popf
pop
xchg
clc
test
and
dec
mov
popl
scas
mov
dec
add
xchg
push
mov
pop
call
cmp
pop
pop
les
mov
sub
insb
push
je
ja
testb
jle
and
mov
lods
test
cmp
sub
jl
jmp
dec
adcl
cmp
sbb
cmc
sti
adc
mov
repnz
cmc
dec
les
jl
ret
lods
push
jae
movsl
rclb
pop
mov
xor
lods
fmull
fs
ss
movsl
aaa
cmpsb
sbb
or
mov
inc
and
mov
mov
arpl
fdivrl
fisubs
enter
insl
jno
inc
pusha
les
or
jl
xchg
and
xchg
add
cs
inc
add
lock
aaa
dec
inc
push
frstor
rorl
cmpl
clc
inc
repnz
inc
aam
arpl
xchg
mov
aas
adc
and
pop
pusha
mov
sbb
andb
js
scas
adc
mov
rolb
xchg
aaa
xlat
xchg
enter
scas
pop
scas
mov
mov
mov
imul
xchg
xchg
pop
js
scas
popf
jg
fcompl
nop
mov
sub
inc
lahf
aad
icebp
dec
lret
or
jmp
out
xchg
rorb
fldenv
shlb
pusha
adc
mov
mov
cltd
or
in
or
aad
xchg
pop
pop
inc
pop
imul
popf
call
cld
mov
out
cmp
pop
out
ljmp
mov
sbb
int3
mov
roll
lcall
outsl
or
sbb
jle
dec
push
jo
dec
jecxz
pop
and
adc
pop
movsl
in
in
add
insl
lret
mov
xchg
add
sbb
out
scas
sbbb
ds
and
sbb
mov
icebp
shlb
jmp
jle
int3
pop
mov
orl
or
xchg
push
push
mov
aas
insb
out
int3
sub
bswap
leave
mov
mov
push
in
pop
pop
cli
inc
or
dec
stos
fnstenv
cmpsb
lock
pop
mov
xor
dec
andl
scas
insb
pop
bound
pop
repz
leave
jl
mov
leave
lcall
fistps
bound
jb
push
jno
xchg
adc
xchg
vorpd
mov
or
fwait
jne
push
dec
dec
xchg
test
sub
ljmp
mov
sub
sbb
sbb
and
pop
sbb
push
mov
or
push
leave
mov
add
sbb
rol
insl
cmp
xchg
xor
xor
daa
push
pop
aaa
dec
push
ss
ret
sbb
mov
push
cld
pop
mov
orb
or
idivb
sub
mov
setp
jle
data16
iret
orl
inc
pop
pop
and
jne
roll
fs
sbb
clc
mov
mov
nop
adc
jne
popa
jle
push
mov
pop
sub
data16
pop
stos
pop
psrad
das
aam
dec
out
and
andl
loopne
imul
cmp
pop
mov
sub
cmp
incl
cld
xchg
and
add
lods
inc
jecxz
mov
ret
xor
in
test
fstpl
mov
xchg
cwtl
inc
mov
das
jbe
and
les
xchg
xor
sub
out
fimull
ss
push
stc
rcl
ret
nop
jno
shl
sbb
mov
shrb
popa
in
sub
fisttps
dec
movsl
icebp
iret
aaa
popf
popf
push
shl
push
inc
fwait
or
enter
push
mov
xor
ficoml
xlat
pop
cmpsb
sbb
loopne
mov
gs
fcompl
pop
jmp
daa
aaa
test
mov
jmp
fs
push
or
daa
dec
sub
outsl
pop
mov
mov
jbe
ds
pop
jno
inc
cmp
mov
jne
sahf
xchg
bound
add
jae
imul
mov
pop
sub
xchg
xchg
cmp
push
gs
mov
pop
xchg
gs
lret
test
dec
fsub
inc
call
xor
test
adc
sub
jmp
xchg
mov
daa
adc
cmc
sub
or
add
pop
arpl
adc
cltd
push
inc
mov
xchg
inc
int3
je,pt
dec
test
sub
int3
mov
cmp
fprem1
dec
inc
or
outsb
lods
push
scas
in
nop
cmp
mov
mov
sub
pop
mov
filds
test
push
insl
je
ret
add
push
adc
dec
pop
cmp
mov
mov
sbb
std
push
aaa
push
dec
sbb
je
ja
jg
popf
stos
cmpsb
pop
repnz
hlt
adc
out
out
negl
gs
cld
in
mov
mov
pop
jae
addr16
mov
fcomps
dec
mov
fisubrs
push
fisubl
jb,pn
add
lods
push
pushf
sub
lods
sub
sbb
test
push
shrl
fwait
repnz
nop
dec
pop
push
call
pop
clc
add
stc
adc
mov
inc
lcall
and
sbb
xchg
pop
xor
inc
mov
mov
fmul
xchg
aas
in
stos
cmc
ss
add
push
mull
xchg
xchg
dec
in
add
or
cli
dec
scas
es
cmp
or
mov
dec
xor
or
negb
mov
cmp
or
outsb
xor
sbb
push
add
loope
push
adc
test
push
push
jp
jg
ljmp
xchg
movmskps
push
xchg
inc
std
pop
aaa
out
fistpll
xor
and
outsl
and
daa
cld
add
bound
stc
add
roll
repnz
sbb
ss
lret
popf
test
mov
mov
mov
xor
sahf
lods
js
jb
es
ja
iret
loope
add
xchg
sub
pop
xchg
fisubl
xlat
sbb
hlt
pop
loope
cwtl
mov
test
loope
out
jp
mov
sbb
inc
lods
pop
out
loope
mov
jnp
das
nop
mov
arpl
out
push
repnz
or
inc
int
pushf
loopne
dec
popf
mulb
and
shrl
andl
dec
sbb
lods
xchg
add
lcall
inc
ror
cmp
outsb
jmp
lret
insb
jmp
rcrl
push
adc
imul
jne
jns
enter
aam
sbb
xchg
mov
jb
jmp
bound
push
cld
inc
cli
mov
inc
ss
bound
and
sub
inc
push
icebp
sti
push
sbb
mov
jns
adc
subl
in
inc
adc
mov
sub
ss
ljmp
cwtl
mov
sarl
rcrb
in
imul
cmpb
cmc
leave
call
shll
icebp
or
sub
fmull
push
dec
or
pop
cmp
bound
mov
sbb
loope
sbb
and
dec
push
inc
sub
sub
or
imulb
cs
adc
xchg
outsb
rorl
ja
pop
cmp
push
cli
lret
jns
or
into
jg
out
mov
imul
cmp
cmp
and
stos
fsubl
pop
negb
subl
or
imul
sub
ret
and
hlt
mov
push
sbb
or
fldenv
cs
and
arpl
loope
mov
out
fldcw
jmp
jbe
push
jno
mov
pop
pcmpeqb
push
jl
xor
jp
aaa
jmp
cmc
ror
lret
and
mov
or
jnp
and
mov
inc
ss
fmuls
sub
scas
mov
mov
hlt
inc
adcl
fldt
stc
sti
cmp
enter
cwtl
mov
sub
movsl
fcompl
mov
stos
pusha
xor
pushf
popa
jbe
call
dec
mov
pop
push
add
clc
cmpsl
into
es
dec
mov
stc
aam
sub
pop
mov
testb
sbb
nop
test
hlt
in
in
pop
test
icebp
daa
into
mov
aam
roll
mov
add
sub
cmpsl
mov
ret
scas
cmpsl
jecxz
loop
lret
shr
call
mov
shlb
jbe
lret
outsb
mov
outsl
aas
filds
cmpsb
xor
test
out
sub
mov
fsubp
cmp
lahf
jp
and
mov
leave
call
jl
arpl
test
mov
cmp
pop
xchg
pop
js
fwait
ret
push
cmp
arpl
lret
add
mov
cmp
sbb
add
into
negb
adc
jg
jnp
shrb
sbb
into
jbe
ror
insb
les
inc
scas
inc
or
into
scas
add
or
pop
in
iret
sarb
fwait
cmpsb
adc
ss
pop
repz
and
dec
add
jmp
jno
sbb
pop
mov
rcrb
hlt
push
dec
cmp
out
ja
inc
leave
pop
lret
lcall
bound
inc
jbe
push
pop
pusha
pop
aaa
xchg
mov
mov
in
jae
mov
sti
icebp
pop
inc
xor
in
addr16
mov
imul
shlb
ljmp
adc
and
cltd
scas
push
pop
cli
cmp
jo
test
add
cltd
sub
daa
stos
iret
xor
addr16
jbe
inc
cmp
pushf
dec
mov
and
jmp
dec
andb
popa
xor
push
int3
push
jno
cmp
in
push
loopne
pop
in
iret
sub
cmc
mov
cmc
mov
mov
fdivs
pop
insl
fucomp
shlb
adc
mov
add
in
sbb
je
insb
mov
mov
mov
fisubs
push
scas
xor
out
sub
mov
dec
fwait
inc
push
rorb
loope
ficoms
loope
imulb
jbe
das
stos
in
cmp
in
cmp
in
or
lock
out
scas
mov
fidivrl
test
ret
pop
test
add
aad
imul
push
and
js
sub
loop
iret
jo
or
clc
mov
push
cltd
nop
push
fucomp
fildll
outsb
mov
pop
lods
in
pop
data16
adc
inc
shrl
inc
in
mov
adc
mov
push
push
mov
cltd
xlat
mov
adc
jne
mov
pop
jnp
mov
test
lea
sar
jns
jge
cmpsl
sub
stc
into
or
mov
nop
pcmpgtb
leave
push
push
mov
adc
subb
pop
mov
pop
pusha
ds
rcr
outsl
daa
loopne
imul
cmp
popa
jns
add
hlt
insb
test
xchg
rcll
mov
shrb
cmp
test
test
imul
loop
pop
adc
insb
inc
jae
ret
xchg
mov
shlb
jbe
ljmp
add
je
push
pusha
xlat
scas
repnz
sti
sbbb
mov
dec
in
mov
mov
movsl
lods
pop
fsubrp
adc
aaa
push
cmp
pop
test
cmp
or
in
adc
in
sti
nop
jle
xchg
cmpsb
std
lea
sub
punpckhdq
or
lds
mov
js
xor
fbstp
lods
outsl
cmc
rol
and
sbb
mov
imull
cmc
fsubr
hlt
and
push
test
cmp
fisubrs
out
xorl
xchg
and
xchg
sahf
mov
mov
push
cmp
cmp
mov
and
mov
into
aaa
adcb
aaa
cmp
pop
and
pop
sbb
inc
je
xor
shrb
fidivs
cmp
inc
fdivrl
jb
pushf
sub
stc
movsb
imul
push
cwtl
adc
inc
aad
adc
roll
into
jecxz
pop
or
in
inc
pop
ljmp
std
mov
or
lahf
push
push
add
es
and
popa
mov
jmp
ss
ficomps
push
sbb
mov
xor
or
pop
pop
push
mov
pusha
loope
aam
push
or
jp
xor
icebp
adc
mov
and
loope
rclb
cmp
dec
dec
xchg
mov
into
xchg
ret
shl
cmp
into
adc
push
arpl
js
js
mov
pop
jmp
movsl
jns
test
out
xchg
and
test
mov
pop
mov
aas
dec
and
in
cmp
out
pop
pop
pop
scas
lret
inc
test
arpl
outsb
pop
push
lock
ss
inc
fstpt
adc
or
xchg
mov
in
sahf
or
jmp
cltd
jp
dec
ljmp
dec
insb
push
pop
mov
mov
pop
arpl
sbb
push
sbb
mov
into
stos
mov
div
or
lds
movsb
and
icebp
pop
mov
nopl
add
dec
sti
je
mov
inc
or
stc
ljmp
dec
jmp
add
dec
mov
ss
pop
xchg
or
iret
xchg
sub
push
filds
pop
pop
aaa
inc
jbe
loope
sbb
mov
out
popf
cmpsl
jmp
leave
push
minps
jge
pop
mov
hlt
cmp
lahf
sbb
stc
sar
movsl
pop
test
push
sbb
cltd
popa
icebp
scas
std
test
sbb
inc
sub
pop
repnz
cmc
rclb
sub
pusha
inc
mov
push
cmpb
andb
jnp
inc
sub
mov
repnz
insl
test
ucomiss
ds
push
xchg
pop
jecxz
out
fildll
push
sub
enter
inc
mov
mov
leave
mov
imul
aad
push
add
lods
lods
loopne
xchg
cmp
loope
dec
cmp
and
ret
call
adc
dec
loopne
xor
sub
jb
cmpsb
int3
push
fldenv
dec
insb
mov
shl
jbe
or
and
jns
xchg
adc
jecxz
daa
fcmovnbe
ret
test
cmp
mov
or
icebp
ljmp
arpl
lds
mov
mov
push
jge
into
and
inc
sub
pop
jae
jb
pop
jo
adc
lahf
jl
adc
and
js
int
jg
sub
pop
loopne
mov
cltd
rcll
pusha
outsl
xchg
leave
inc
xchg
iret
add
ficoml
repz
pusha
inc
cli
mov
pop
or
dec
add
leave
sarb
dec
push
add
cmp
iret
std
shl
xor
pop
cmp
mov
subl
rcl
pop
add
mov
adc
cmpsl
push
fdivrl
xchg
push
jmp
cmp
int3
lcall
pop
or
lea
lcall
into
xlat
push
pop
nop
lret
cmp
insl
xor
in
push
imul
lods
mov
jecxz
rorl
stos
or
divl
sti
sbb
pusha
fs
setg
popa
or
mov
imull
cmc
pop
cwtl
outsl
adc
add
xchg
addb
xor
and
lret
dec
scas
add
add
and
sahf
inc
xor
sti
ficomps
int3
and
hlt
dec
jg
pop
mov
push
push
js
mov
fcomip
es
xchg
pop
iret
mov
aam
adc
enter
imul
scas
sahf
sub
push
loope
addr16
popa
outsl
adc
sub
into
aad
adc
mov
push
pop
and
mov
mov
test
sbb
je
cld
ljmp
xchg
and
inc
lret
aam
push
adc
pop
loop
div
mov
cli
sbb
mov
movsl
or
sub
mov
dec
or
clc
xchg
push
pop
sbb
movsb
fsts
cmp
lods
xor
jne
fimull
dec
shlb
jecxz
jno
dec
ljmp
mov
in
jg
cmpsb
test
scas
adc
sub
or
pop
mov
cld
scas
inc
lahf
push
rorl
push
out
cwtl
fsubp
cwtl
sub
cld
aas
je
lret
ret
aam
sub
lret
lea
cmp
dec
aas
fnsave
add
into
and
cmp
fimuls
es
push
sahf
jnp
sub
jmp
xchg
xchg
mov
mov
jecxz
cli
jle
stos
loop
lret
jbe
rorl
dec
ds
mov
icebp
sbb
pop
mov
jae
push
sti
loopne
sub
lods
ja
clc
ja
pop
mov
and
std
popa
dec
sbb
push
in
sahf
stos
adc
mulb
mov
iret
pop
gs
fnstenv
movsb
loope
aam
mov
lret
push
fs
xor
mov
loop
add
xor
add
mov
ds
push
not
push
sbb
mov
call
out
lea
jp
sbb
dec
mov
add
stos
pop
jg
jo
imul
andl
cmp
cs
arpl
loop
mov
ja
jmp
jae
jno
push
sub
test
lods
lds
scas
xor
rorl
orl
inc
jno
push
inc
fidivrs
pop
shr
xorb
imul
sub
lods
daa
fisubrs
push
xlat
sub
ljmp
fldenv
adc
cmp
pop
leave
and
push
mov
mov
mov
fcoms
xchg
cwtl
sarl
addb
fucomp
pushf
and
push
push
pop
xor
into
push
sbb
dec
cli
sub
jb
adcb
xor
fwait
sub
out
cmp
subl
imul
or
sub
push
ret
outsb
add
dec
ret
jge
aas
cltd
or
push
rclb
dec
cmp
ljmp
loopne
mov
adc
test
movsl
mov
aam
jmp
pop
idivb
jp
mov
dec
call
inc
or
addr16
inc
inc
xchg
mov
in
repnz
dec
mov
mov
pop
dec
add
fbld
xchg
out
sti
ds
push
dec
arpl
mov
loope
lock
movl
sub
cmp
insl
pushf
cmpb
mov
adc
pop
mov
icebp
in
adc
adc
xor
in
lret
ljmp
pop
lods
mov
cmp
fisubl
push
mov
push
sub
aad
fcompl
cmpb
pop
inc
shlb
pop
daa
clc
jle
sub
fmuls
jp
inc
js
das
aam
xchg
cld
sub
gs
sbb
pop
add
push
pop
pusha
sbb
mov
bound
call
lret
adcb
xchg
pop
jecxz
imul
cmp
pop
int3
xor
jle
pusha
adc
sub
adc
push
jb
ja
lods
adc
ja
pop
xor
mov
lcall
in
shll
xor
into
xlat
jns
imulb
addr16
and
push
jne
int3
test
xchg
inc
cli
aaa
or
dec
xchg
insb
fwait
stos
mov
pop
xor
inc
lds
mov
daa
and
mov
or
jl
shll
aas
mov
and
aas
and
push
in
mov
fists
ljmp
test
or
outsl
scas
sub
jp
clc
mov
push
mov
mov
and
call
popa
out
jo
outsb
or
sub
ret
jb
push
addr16
mov
push
inc
jecxz
cli
dec
out
sahf
inc
pop
adc
shrl
movb
xor
stos
lods
or
lret
cmp
push
sbb
mov
addl
cld
insb
in
and
pop
fcomip
dec
in
sbb
loopne
sub
stos
jge
int
pop
mov
jb
xor
sbb
or
out
inc
sar
in
imul
jb
jge
sub
xor
mov
fimuls
pop
mov
mov
adc
je
test
fiaddl
dec
sub
sbb
fldl
inc
outsb
test
xor
jecxz
or
int3
and
inc
or
fstpt
mov
fldenv
fcmovnu
fwait
aas
pop
jp
int
lcall
bound
mov
sbb
divb
shll
xchg
jl
shll
add
jle
mov
shr
add
sbb
movsb
jecxz
cmp
divb
push
andl
push
das
sub
sbb
jle
stos
cld
hlt
xor
enter
adc
mov
scas
loopne
into
inc
xor
test
or
adc
sbb
mov
aas
movsb
leave
scas
outsb
fs
sbb
loop
lahf
dec
rclb
sbb
lods
jecxz
cmp
inc
repnz
xchg
cmpsl
jb
mov
enter
adc
scas
roll
pop
cwtl
iret
xchg
xchg
iret
or
cwtl
or
scas
pop
jno
jb
pop
adc
ss
out
popl
adc
loop
jb
mov
push
mov
mov
ds
cmp
punpcklbw
mov
dec
xor
data16
sti
mov
shlb
int3
in
in
imul
mov
pop
pop
imul
call
jb
xor
and
pop
ret
hlt
call
in
or
xchg
or
push
or
loop
int3
insb
adc
adc
aas
xor
xor
xchg
jo
push
cld
sahf
cmp
sub
xorb
inc
adc
sbb
sub
dec
or
sbb
mov
lods
jae
mov
cli
ror
das
loopne
add
nop
lea
fadds
movsb
push
xchg
jmp
fwait
popf
fsubr
fs
dec
clc
dec
out
push
mov
lret
call
repz
mov
in
push
int3
enter
pop
int3
loope
scas
mov
not
stc
loopne
loope
pop
cli
mov
jl
mov
xor
cwtl
add
or
inc
in
xlat
xor
roll
jb
cmc
lock
leave
add
push
mov
xchg
xor
pop
cmc
xor
xor
stos
fsubr
inc
dec
clc
push
nop
fcomp
sbb
insb
or
fs
lret
das
adc
xchg
test
inc
push
pop
xor
mov
addr16
cli
repz
ljmp
dec
dec
mov
mov
lahf
loopne
inc
cwtl
pop
pop
outsl
shlb
adc
pop
cmp
loope
loopne
mov
push
cwtl
andb
pop
mov
add
adc
mov
push
sbb
movsb
call
scas
and
jecxz
pop
mov
dec
adc
daa
cwtl
int3
icebp
inc
and
xchg
sub
jmp
lahf
rcll
inc
mov
jns
dec
sub
mov
push
xchg
das
fwait
andl
gs
lds
add
outsb
xchg
mov
and
push
call
and
test
pop
cmp
rclb
jbe
cli
das
or
stos
ss
icebp
sub
inc
jl
jnp
cmp
add
xchg
cmpsb
outsl
jnp
dec
adc
rclb
int
sub
shll
shr
pop
mov
std
push
push
inc
xor
and
into
ret
in
dec
dec
xchg
aad
mov
pop
sbb
aaa
push
mov
pop
pushf
fs
pushf
sahf
test
cmc
xchg
xor
insb
jge
pop
scas
lret
das
sarl
cmpsl
int3
pop
call
jmp
imulb
cwtl
pop
fwait
ljmp
dec
sub
inc
or
cmp
insl
aaa
ss
ja
imul
dec
fsubs
mov
and
icebp
decb
test
shl
inc
int
mov
mov
pop
jl
ret
sub
jmp
xchg
adc
sahf
call
orl
inc
out
mov
lret
mov
iret
bound
out
adc
imul
incl
jecxz
xlat
dec
cmp
cmpsl
cmpsb
testb
adc
loop
mov
xor
cli
cmp
push
fs
jno
popf
or
test
inc
push
cmp
adc
add
push
je
in
rcll
mov
mov
call
out
cmp
rorl
out
andl
xor
arpl
test
or
jno
sub
dec
scas
mov
sbb
sbb
fldcw
int3
outsl
push
andb
addb
and
xchg
sub
jmp
outsl
add
inc
xor
jecxz
icebp
xor
orb
faddl
stos
cmp
or
hlt
adc
or
and
xor
fs
xchg
push
aaa
arpl
or
inc
xchg
and
rcrb
add
stos
xlat
leave
and
mov
divl
out
in
mov
pop
imul
xorb
shlb
mov
mov
xchg
add
adc
mov
rorl
sub
psllq
push
mov
dec
mov
sub
scas
sarb
inc
pusha
popa
pop
hlt
into
mov
jnp
mov
loopne
mov
jnp
mov
aam
push
mov
push
add
add
sbb
fdivrl
push
inc
jl
repz
lds
add
insl
jne
lret
stc
stos
scas
sub
mov
test
test
fstps
test
dec
push
bnd
sub
call
inc
adc
mov
xor
das
stos
lcall
and
jle
cmp
call
cmp
rolb
xchg
out
mov
js
pop
mov
jmp
and
out
mov
jb
lret
cmpl
ficompl
xlat
aas
push
mov
xchg
mov
int
sbb
jbe
shll
into
out
cmc
sub
pop
fistps
sbbl
mov
pop
jl
push
int
lahf
adc
mov
cmp
push
adc
bnd
dec
pop
add
cmp
cwtl
outsb
and
movsb
adc
shll
ljmp
cmp
add
sub
cltd
ljmp
jecxz
je
mov
scas
aam
ja
hlt
lea
push
js
or
xchg
xchg
mov
jb
in
es
cmp
shll
cmp
pop
lret
sub
xor
pusha
inc
adc
adc
aad
loop
dec
cmp
jae
outsb
jmp
adc
daa
aad
mov
es
pusha
inc
sbbb
inc
jae
xchg
enter
in
mov
adc
ja
sbb
cmp
rorb
jmp
mov
sub
loopne
inc
mov
loopne
clc
inc
adc
test
fildll
or
fcomp
ret
mov
stos
push
jl
ret
push
push
fwait
cmp
cmp
mov
pop
pop
lret
mov
mov
mov
ret
into
sti
repz
adc
pop
sti
fs
jp
pop
push
inc
dec
popf
pop
xadd
or
sbb
cmp
cltd
xor
sbb
divb
aaa
xor
xor
xor
pop
subb
adc
jp
dec
xchg
inc
pop
pop
mov
hlt
outsl
je
adc
adc
imul
lcall
popf
orb
inc
je
or
in
imulb
out
push
jmp
inc
sbb
and
jle
movsb
cwtl
cmp
pop
cmc
mov
mov
dec
lock
imul
lock
dec
inc
and
mov
sub
jmp
ds
hlt
lret
rcrb
bound
loop
sbb
call
dec
inc
out
jge
and
cmc
or
shlb
xlat
xor
or
data16
popf
mov
call
sbb
push
js
cmp
mov
test
mov
jmp
mov
call
adc
inc
sub
pusha
cwtl
mov
mov
mov
sar
test
popa
dec
mov
mov
mov
mov
cmpb
leave
mov
movsl
fidivrs
add
mov
roll
add
add
add
jno
add
add
adc
add
add
add
add
add
add
dec
push
add
test
add
add
add
add
add
sbb
add
add
add
add
add
mov
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
push
add
add
add
add
add
stos
push
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
push
filds
add
add
add
lds
or
incb
movsb
cli
loope
inc
mov
sbb
add
sub
loop
mov
xchg
aad
cs
pop
mov
out
jne
ror
pusha
int3
out
pop
bound
ja
sbb
inc
cwtl
cmpsb
ja
fprem1
pop
and
mov
inc
test
mov
and
loope
lret
fs
insb
lods
cmc
fnstenv
imul
gs
ss
xchg
dec
jmp
mov
loop
xchg
inc
jp
test
adc
sbb
xchg
lret
cwtl
incb
adc
lods
addb
xchg
sahf
lods
bound
fs
cmp
cli
jmp
in
pushf
int
int3
inc
xchg
inc
jmp
adc
mov
out
push
jo
cmc
and
cmpsl
addr16
test
test
sub
imul
add
add
inc
add
fcoml
sbb
daa
and
aaa
cmp
push
aaa
add
test
in
adc
ss
pop
adc
test
ss
mov
mov
fildll
xchg
mov
stc
jno
cmp
jmp
lret
sbb
nop
or
stos
jo
fs
cs
pop
leave
mov
mov
rcll
cmpb
mov
cli
jbe
pop
dec
xor
or
leave
scas
sub
pop
mov
ja
jbe
scas
adc
scas
sub
mov
bound
daa
test
inc
sbb
jmp
pop
cmp
push
pop
push
rolb
add
dec
ds
sub
sub
ret
idivb
jp,pt
sub
fimuls
out
or
mov
inc
adc
dec
loope
adc
add
xor
fsubr
jo
in
test
pusha
inc
stos
xchg
jo
fs
and
xchg
mov
sbb
fisttps
dec
push
imul
cmpsl
push
jno
fcom
pop
dec
jmp
je
jnp
add
je
addr16
cmp
js
sbb
pop
lods
or
insb
jae
daa
lret
sbb
adc
jecxz
out
adc
arpl
pop
sub
dec
add
pop
mov
add
dec
adc
dec
sbb
ret
fisubs
push
out
das
pop
in
pop
hlt
sbb
mov
outsb
popa
mov
inc
scas
mov
jae
jno
pop
daa
or
mov
xrelease
xor
pop
int
cwtl
enter
and
push
adc
pop
rclb
dec
xchg
idivl
xorl
adc
popf
cld
test
cmpsb
shll
fwait
mov
push
sahf
sub
loope
inc
stc
lock
jae
shlb
mov
gs
incl
in
popf
shlb
sbb
push
sub
mov
sbb
mov
loope
jl
cmc
sub
mov
and
rcl
std
sub
pop
xor
fwait
das
sub
lcall
mov
sub
out
popf
repnz
test
popa
leave
mov
inc
pop
stc
xchg
in
xchg
mov
arpl
pop
mov
and
out
jg
inc
jns
cmpl
insl
sbb
pop
out
repz
bound
roll
xor
sub
mov
out
push
push
out
push
test
addr16
test
aaa
push
or
ljmp
mov
ret
popa
add
inc
pusha
xchg
pop
icebp
jmp
xchg
xchg
xchg
cmp
cmp
adc
and
cmp
or
lahf
adc
dec
jb
shrb
sbb
push
cmc
adc
aad
inc
sub
xor
dec
jg
mov
xor
cmp
cmpsl
xchg
std
popa
mov
xor
jl
in
and
movsl
notl
aam
pop
push
push
stos
push
ss
in
lahf
jno
add
mov
les
adc
fidivs
es
mov
mov
xlat
jns
mov
mov
aaa
loopne
inc
ss
lea
jbe
push
fs
scas
jnp
mov
cmpsl
push
pop
add
popf
xchg
data16
loop
fwait
popa
nop
dec
xor
inc
icebp
fxch
aas
sub
jb
lret
add
gs
jecxz
and
xor
fildll
cmpsb
loop
stos
rclb
repz
popf
jbe
jp
stc
adc
jnp
mov
or
cmp
mov
mov
les
push
mov
mov
and
repnz
sbb
mov
push
pusha
and
sub
jge
jg
xchg
fadd
mull
mov
push
cmpsl
cmovns
jl
sub
cmpsl
cld
ret
mov
and
and
out
int3
movb
dec
push
movsb
js
sahf
inc
mov
jbe
xor
mov
add
push
cld
xor
mov
adc
cmpsl
mov
or
jns
rorl
dec
shll
dec
das
inc
pop
and
xor
push
mov
in
jnp
push
sbb
lcall
jns
jle
xchg
adc
paddsb
inc
add
in
mov
lods
xlat
sub
jae
xor
cltd
aas
mov
mov
xor
add
push
std
mov
mov
or
sbb
aas
push
and
mov
xchg
insl
inc
mov
bound
sbb
xchg
insl
sti
xor
jnp
jb
test
jl
mov
xchg
mov
imul
popf
arpl
or
pop
push
jbe
and
cltd
inc
dec
adc
xchg
xchg
lahf
popf
idivb
insb
cmp
mov
pusha
incb
in
frstor
gs
pop
movsb
jno
or
and
cwtl
fcmovbe
pop
jmp
xor
jl
cmpsl
push
push
jp
or
aam
add
jp
ja
xchg
lcall
jne
push
inc
xchg
rcrb
ljmp
adc
xchg
push
test
dec
adc
mov
fsts
in
add
inc
stos
push
mov
jae
mov
mov
out
mov
addr16
xchg
insb
dec
inc
js
or
mov
je
mov
pop
outsl
inc
sti
clc
dec
fwait
fs
push
push
sbb
inc
test
lds
nop
in
loop
test
addr16
pop
int3
xor
ljmp
or
scas
into
lds
adc
sub
pop
push
into
inc
hlt
inc
pop
dec
pop
mov
inc
cmp
pop
mov
leave
imul
fs
test
fimuls
and
push
push
mov
cmpsl
jne
pop
stos
mov
jne
pop
clc
inc
push
mov
xchg
xlat
orl
js
popa
jle
pop
jge
out
cltd
enter
out
sahf
out
scas
lret
int3
int
mov
fstps
mov
mov
xchg
jg
pop
das
pusha
push
mov
dec
xchg
sbb
and
cmp
mov
pop
movl
mov
dec
dec
and
jmp
aam
adc
js
dec
aas
loopne,pt
fs
jb
shrl
dec
into
js
mov
scas
arpl
std
pop
mov
ljmp
scas
ss
jmp
sub
jne
lea
int
xor
in
dec
out
jg
cli
data16
fs
xor
pop
cmc
aaa
gs
in
dec
sbb
cld
stos
mov
test
lret
pushf
adc
lret
sbb
mov
and
mov
pop
and
inc
in
fdivp
inc
xlat
scas
xor
dec
fsubrp
jnp
fiadds
stc
or
lret
dec
xlat
into
sbb
sti
inc
fwait
jbe
fcompl
push
repnz
xchg
mov
pop
jecxz
jmp
mov
lds
adc
mov
cwtl
repz
xchg
and
cltd
shlb
mov
xor
mov
xchg
mov
out
mov
mov
mov
add
mov
pop
aas
sarb
push
in
mov
adc
mov
mov
mov
inc
cmp
dec
inc
adc
lret
popf
lahf
mov
aaa
cmc
popa
scas
es
pusha
pusha
and
pop
xor
mov
into
and
adc
loopne
jmp
mov
jnp
dec
push
js
xchg
int
xor
mov
arpl
lods
lret
insb
jp,pn
test
mov
mov
adc
jmp
or
cwtl
sti
jbe
or
mov
inc
adc
jb
xchg
push
lret
andb
cmc
sub
jno
cmp
fisubrl
mov
adc
les
ljmp
mov
leave
xchg
and
insb
add
lea
hlt
sub
ljmp
hlt
push
fnstcw
cld
imul
out
das
jmp
dec
lods
mov
or
sti
pop
ret
dec
pop
call
fsubp
popa
mov
pusha
icebp
jo
adc
sub
sbb
pandn
in
xor
pop
sarl
sbb
int
stc
sub
lods
jae
xlat
jle
and
out
movsb
sbb
dec
pop
and
fdivrs
fldl
mov
pop
je
mov
fldl
mov
and
or
add
lahf
das
sbb
cwtl
cmpsl
adc
dec
or
mov
inc
ds
adc
ret
in
sbb
sub
enter
dec
push
cwtl
je
cwtl
fildll
cmpsb
jmp
cmp
lods
fildll
stos
mov
fucomi
add
insb
and
insl
xchg
out
in
sub
arpl
lods
aam
fimuls
imul
lret
out
data16
mov
fcompl
rcrl
jnp
sub
stos
rcrl
sti
cmp
fisubrl
sbb
add
sbb
aam
repnz
jg
adc
and
mov
pop
fnstsw
iret
ljmp
inc
push
stos
scas
nop
ret
and
mov
pop
pop
push
mov
xchg
sub
and
lahf
push
ret
jge
xchg
and
ds
pop
pop
pop
insl
inc
push
push
or
sbb
jle
sti
arpl
inc
mov
nop
repnz
jne
jge
lcall
sbb
push
pop
xchg
stos
adc
fldl
andb
dec
aas
or
xor
dec
inc
add
insb
lock
push
scas
push
clc
pop
popf
adc
fsubs
lret
ret
gs
dec
add
xor
fmuls
xchg
adc
movsl
inc
inc
loope
out
daa
lahf
pop
ffreep
or
jb
aad
inc
in
pop
test
or
jle
movsl
pop
sbb
pop
push
mov
cmp
mov
lret
and
sbb
test
movsb
push
cltd
scas
aad
dec
cmp
cmp
out
fimuls
jb
das
or
out
mov
lret
mov
pop
pop
push
sbb
xor
pop
lahf
dec
mov
pop
sbb
scas
pop
iret
jge
xor
pop
inc
push
mov
mov
jne
and
in
fs
push
clc
xchg
pop
sbb
cmpsb
shll
cli
int3
fdivr
nop
add
mov
inc
or
add
push
aas
cmp
xchg
loope
mov
popf
xor
popf
cmp
aam
mov
push
movsl
push
fldenv
ja
sbb
adc
and
fidivrl
sbb
or
cmp
dec
pop
mov
cmp
fidivl
mov
push
adc
or
xchg
es
jl
xchg
jae
adc
xchg
sbb
js
xchg
xor
jo
mov
xor
repz
adc
pop
adc
notb
jmp
sbb
inc
push
fisttpll
std
fs
insb
inc
out
xchg
sbb
push
inc
cmpl
cmpsl
cmp
popf
push
xchg
es
aam
daa
push
cmp
movsl
push
inc
out
stos
push
and
xchg
adc
nop
jne
adc
jp
jns
jmp
add
mov
loop
and
mov
jne
popa
pop
loopne
jbe
mov
fcom
sbb
mov
mov
lods
pop
mov
in
dec
sbb
js
pop
cmpsb
shl
inc
outsl
pop
pop
mov
outsl
and
or
push
jecxz
sarl
mov
jge
mov
js
inc
cmpl
inc
pop
xlat
pop
xor
lea
jno
cmp
test
mov
movl
aaa
in
in
sarl
push
xchg
pushf
cmp
inc
je
jo
pop
cmp
lret
out
cwtl
jns
pop
xor
jae
xor
aas
mov
aas
ja
incl
shrb
xor
jg
sub
xor
hlt
jnp
cmp
jns
sub
in
push
push
aas
mov
xchg
mov
pushf
sbb
mov
and
lock
loope
jae
ret
add
jne
cltd
mov
sti
jp
mov
cwtl
mov
sub
push
cwtl
dec
ss
inc
inc
xor
shlb
das
push
adc
mov
pusha
out
xor
or
xor
mov
jecxz
shlb
pusha
mov
lret
lock
lods
int3
sti
mov
dec
loopne
mov
xchg
inc
rcll
enter
ud1
adc
inc
inc
jne
xor
aam
testb
mov
and
sub
fstpl
cmp
cmp
and
in
adc
jmp
add
mov
jge
jae
inc
mov
fstl
es
mov
jmp
pop
repz
std
mov
lret
fmul
mov
sbb
sbb
mov
fcoms
mov
repnz
or
lret
or
sub
outsl
stos
xchg
or
jnp
ja
pusha
iret
mov
cld
test
push
dec
cld
into
ja
into
cmpsl
dec
lahf
pop
mov
xchg
aad
jle
rcrl
inc
sbb
pop
and
pushf
push
sbb
ret
and
mov
hlt
je
sub
pop
jl
ret
dec
icebp
out
mov
nop
mov
sub
cli
inc
shrl
popa
mov
pop
sub
mov
fimuls
fnstsw
cmpb
push
cli
push
ja
xchg
pop
push
pop
lcall
dec
adc
dec
xor
xchg
or
sbb
dec
mov
sub
cwtl
mov
lcall
jnp
push
and
jge
cmp
insb
dec
ret
les
bound
lahf
lret
inc
push
stc
ja
aas
mov
aam
and
bound
jns
cmp
dec
test
test
fdivs
xchg
and
bound
sti
ljmp
inc
scas
mov
fiadds
push
xor
aad
pop
push
mov
addr16
mov
in
xchg
pushf
jnp
sub
sbb
sar
pushf
fstp
outsl
inc
std
pop
addr16
push
mov
or
sbb
leave
aad
add
jb
lea
icebp
push
mov
dec
push
jae
dec
cmp
sbb
and
pop
fs
pop
cmp
sbb
and
out
scas
and
mov
jecxz
cmpsb
call
repnz
daa
mov
test
mov
mov
adc
into
cmp
out
loop
sbb
test
adc
pop
adc
dec
roll
push
dec
and
bound
sti
push
or
cmc
icebp
lds
mov
cmp
scas
jle
or
aaa
and
bound
pmuludq
das
es
dec
xor
cli
loop
dec
add
packssdw
scas
mov
cmc
or
les
icebp
jnp
push
cs
mov
loop
and
imul
sahf
out
shld
loope
push
xchg
or
adcl
cmc
mov
xchg
dec
inc
inc
scas
mov
dec
push
sub
or
pushf
xor
jae
outsl
in
es
enter
into
or
icebp
push
mov
stos
mov
cs
dec
daa
inc
jge
and
mov
idivb
mov
pop
popl
cmp
iret
add
cmpsb
fs
adc
aas
lods
jp
hlt
js
dec
sahf
mov
and
pop
mov
pop
fdivrs
arpl
inc
dec
lea
pop
xor
sub
ret
inc
call
add
adc
test
idivl
movsl
push
in
or
fs
jge
imulw
sti
int3
adc
mov
orb
into
xor
in
pop
jg
and
pop
mov
roll
push
test
cmpsl
ret
push
push
cmp
adc
imul
sti
arpl
mov
out
pop
jecxz
jne
xchg
movsl
push
movb
cmp
pop
ret
or
icebp
add
aad
sub
mov
cmp
out
cmpb
mov
in
pop
ss
aad
leave
cli
mov
lahf
adc
mov
ss
int
mov
adc
sbb
or
pop
push
aad
jl
pop
and
dec
cmpsb
jno
fsts
fcmovnbe
mov
scas
xor
sbb
xchg
pop
out
pop
xor
push
dec
inc
sbb
pop
in
push
ds
fs
loopne
rcrl
jno
push
xor
sbb
jae
mov
xorl
or
dec
js
mov
mov
xlat
je
pop
inc
jne
loop
push
in
test
lea
rcll
jmp
jae
leave
dec
push
sub
mov
decb
jnp
outsb
loopne
nop
sbb
and
mov
cs
and
cs
xchg
push
xor
dec
ds
out
icebp
lea
push
add
adc
shlb
inc
push
adc
mov
mov
xchg
jecxz
repnz
test
pop
shlb
mov
mov
cmpb
pop
and
cmpsl
stos
jmp
push
outsb
andl
or
sbb
and
sub
jmp
test
xor
int
nop
mov
stos
dec
fwait
cmp
or
push
gs
pop
add
repnz
scas
or
mov
rclb
add
test
sbb
test
mov
gs
add
loopne
mov
sub
mov
lahf
lret
cwtl
sbb
sub
pop
inc
add
sbb
clc
addr16
inc
ds
fldl2t
cli
test
mov
mov
aaa
mov
psllw
jae
inc
call
push
pop
pop
fimull
hlt
push
in
bswap
jno
int3
hlt
dec
xchg
vmwrite
inc
push
inc
inc
adc
pop
adc
ljmp
mov
js
cmp
mov
int3
loop
mov
mov
rcr
xchg
mov
or
cld
pop
xchg
push
and
add
inc
fistps
add
pop
gs
rorb
sub
or
sub
rcll
push
push
imul
mov
mov
enter
adc
fdivrl
jcxz
es
dec
test
inc
adc
adc
test
les
icebp
fwait
popa
or
xor
inc
outsl
push
mov
dec
add
aad
in
cmp
push
sbb
pop
enter
jl
jb
adc
std
idiv
in
out
incl
cmpsl
inc
mov
jae
lcall
cmpsl
sbb
jnp
fildl
sbb
and
sti
lods
or
mov
nop
xchg
jmp
ret
push
mov
out
push
mov
iret
add
cli
popf
push
xchg
stc
or
push
clts
mov
sub
leave
pop
iret
add
and
pop
cmp
leave
pop
mov
sub
in
mov
sub
mov
dec
lods
cmp
out
jp
xlat
and
pop
or
xchg
jl
dec
popf
cltd
or
fdivrs
xor
jg
fdivrl
in
push
lock
or
jecxz
sub
and
sub
scas
sub
into
test
pop
sbb
insl
lods
in
add
pop
cmc
clc
pop
std
add
sti
std
mov
cwtl
xor
dec
mov
rcrb
testb
mov
mov
popa
sub
pop
mov
fsubrl
test
sub
pop
jbe
jecxz
push
dec
fcmovne
sub
add
mov
xchg
ljmp
mov
xor
or
xchg
pop
repnz
int
push
nop
fdivrp
imul
sub
pop
jle
xchg
out
add
hlt
stc
push
mov
or
test
inc
vmread
jecxz
cmp
xor
and
adc
and
mov
sahf
cli
clc
out
xor
xor
sub
and
das
bound
aad
insb
jmp
inc
cwtl
mov
outsb
sbb
leave
or
mov
mov
fidivrs
lods
dec
inc
mov
test
sub
pop
js
sub
or
sbb
arpl
insb
in
sub
xor
jg
push
adc
addr16
sub
loop
lods
sub
push
insb
rclb
repnz
ss
xchg
and
xchg
jno
popa
xchg
in
sbb
and
cmc
icebp
cmp
jne
adcb
std
mov
mov
cmc
jo
loop
movsb
outsl
xchg
xlat
jae
adcb
jle
js
sbb
push
pop
shll
rep
adc
insb
mov
mov
std
mov
pop
xor
add
sarl
clc
arpl
stc
inc
lods
rcll
push
mov
jnp
fbld
pop
js
inc
ja
dec
dec
pusha
popf
lods
clc
daa
ja
or
insl
aaa
mov
jmp
add
adc
dec
cmp
dec
xorb
inc
xor
jmp
jg
or
pop
call
fcmovb
mov
or
push
lock
sub
mov
push
push
mov
push
pop
call
lcall
mov
repnz
cmp
cmp
xor
jmp
jle
push
sub
cmp
sbb
stos
mov
xchg
push
push
sub
mov
push
test
xor
or
sub
mov
xchg
add
icebp
dec
mov
sbb
xchg
arpl
add
enter
add
xor
add
addl
daa
mov
mov
shrd
dec
cmp
jl
dec
pop
shrb
test
dec
and
les
out
xchg
in
out
es
cmp
jae
lcall
mov
mov
and
push
sbb
outsl
aaa
stos
imul
adc
xchg
jno
mov
or
push
and
mov
mov
jno
mov
xlat
dec
pop
mov
push
push
sub
mov
aaa
mov
cwtl
cld
das
loop
jnp
les
arpl
daa
inc
enterw
mov
jge
mov
hlt
out
adc
pushf
fcmovb
mov
pushf
inc
loop
or
sar
pop
push
jg
push
cmp
cltd
sahf
dec
imul
push
adc
cwtl
xchg
mov
fistpll
cmpsl
movsb
add
loop
xchg
sub
jp
pop
arpl
push
ret
adc
negb
or
out
push
bound
and
lea
mov
insl
sahf
dec
push
sbb
fdivr
sub
sub
dec
popa
pop
add
inc
stc
adc
and
sti
filds
nop
xor
add
cmpsl
out
mov
rcrl
lock
sbb
and
ljmp
and
mov
inc
int3
cmp
xchg
add
pop
addr16
lock
shl
mov
iret
lcall
mov
mov
aad
pop
lret
inc
and
pop
pop
add
enter
out
stos
and
or
xchg
cli
push
cs
decl
fnsave
stos
jle
int3
pop
ret
add
subb
orl
sub
imul
cmp
jno
scas
push
or
mov
mov
xchg
mov
sarl
aam
add
cwtl
xor
lcall
mov
clc
repz
icebp
fmuls
pop
orb
pop
sti
adc
ss
cmpsb
xchg
add
mov
popf
push
adc
in
sbb
fcmovu
mov
xchg
or
sbb
inc
sbb
jmp
sar
adc
fwait
arpl
mov
adc
jbe
ja
mov
stos
call
inc
inc
pop
and
cli
mov
fsubrs
imul
outsb
mov
cli
mov
push
icebp
sbb
and
fwait
imul
popf
andb
bound
pop
pop
sub
pmullw
jecxz
lcall
imul
dec
in
cltd
cmp
bound
out
pop
cmp
addl
aam
push
int3
aad
dec
xor
or
fmull
inc
cmp
inc
imul
aas
push
cmc
insl
fsubrs
mov
jnp
ss
div
in
icebp
xor
sbb
insb
test
push
imul
xor
movsl
rol
loop
xor
adc
cmp
out
sub
movsb
cmc
test
xor
jl
push
jle
sar
arpl
sbb
mov
mov
ret
fs
sbb
ficompl
dec
sarb
stos
lret
out
gs
inc
xchg
in
mov
sahf
xor
pop
mov
dec
leave
and
repz
in
es
lea
mov
or
sbb
xor
inc
subl
push
push
insb
push
fmul
xchg
cmc
test
xor
push
pop
cmp
test
std
enter
pop
mov
hlt
stc
fdivs
scas
or
push
in
movb
mov
lods
mov
icebp
aaa
out
aas
mov
mov
xor
xchg
sbb
pop
pop
and
mov
inc
clc
jbe
xor
fldl
and
out
mov
jp
les
rcrl
mov
xor
loope
xchg
and
nop
lret
mov
xchg
cmp
and
ud1
stos
sbb
dec
inc
cmp
out
in
cli
pop
mov
adc
xchg
or
xlat
sahf
pop
in
adc
pop
orl
fnstsw
test
fnstenv
mov
lcall
int
xchg
sbb
scas
xor
nop
pop
dec
in
jmp
daa
or
mov
push
push
out
ret
fcom
fiaddl
rcrb
and
cli
rorb
jg
stc
or
cmp
jbe
cmp
out
add
xor
adc
pop
rorb
mov
dec
in
jns
outsl
stos
scas
test
enter
and
iret
ficoml
sub
xchg
inc
test
sbb
add
sub
shrb
xor
xchg
add
pop
hlt
and
xor
sub
dec
shl
movsl
jbe
jne
push
shlb
push
scas
cmp
mov
mov
mov
movsb
clc
push
mov
pop
cmc
ret
inc
mov
arpl
ljmp
mov
xlat
add
dec
lock
jns
std
movsl
sub
jl
or
dec
jle
mov
dec
xchg
loop
jo
xor
push
mov
mov
sub
pop
ljmp
lods
scas
adc
icebp
les
imul
int
outsb
jbe
lea
push
cld
stc
xchg
mov
cwtl
mov
jbe
jbe
rcrl
lret
jmp
jne
bnd
icebp
shlb
out
std
pop
push
xlat
lahf
xchg
mov
mov
sar
sbb
gs
and
dec
adc
and
inc
xor
sub
or
xor
jb
lods
inc
subb
popf
push
icebp
xchg
mov
pop
jl
or
sub
cmpsb
xchg
sbb
mov
xor
jne
inc
setbe
sbb
jmp
gs
cmp
cs
ljmp
testb
enter
std
mov
xor
outsb
dec
jb
sub
leave
mov
jno
in
inc
movsb
pop
push
andl
pop
aad
and
inc
fisubs
shrb
and
sbb
cmpsb
cmp
stos
jg
inc
es
aad
xchg
dec
mov
scas
std
push
int3
jge
icebp
es
pushf
mov
push
pop
loope
shl
sub
sbb
sbb
jo
arpl
sub
pop
jno
dec
test
jp
adc
push
sbb
xor
mull
in
leave
add
jecxz
jg
inc
jb
cmpsb
push
push
aam
in
mov
mov
jmp
fdiv
mov
stc
mov
mov
sub
jge
pop
adc
lods
xchg
das
loop
cmpl
and
aaa
sbb
test
bound
dec
push
mov
adc
bound
sub
lea
sarb
mov
call
sbb
sbb
pusha
add
fucomi
dec
es
pop
inc
xchg
test
dec
imul
add
jnp
inc
push
shrl
dec
fwait
test
cmp
out
daa
sbb
cmp
jg
mov
repz
adcl
cmp
movsb
test
pop
fisttpll
andl
pushf
inc
lahf
xchg
mov
mull
mov
xlat
mov
pop
cmp
add
xchg
lret
mov
xor
scas
mov
ljmp
jo
subl
movsl
cmc
xchg
sub
inc
adc
roll
loop
aas
push
rorl
aas
push
aaa
imul
mov
jecxz
test
inc
xchg
bound
xchg
adc
sub
mov
in
aaa
aaa
test
cmp
lcall
or
sbb
mov
sahf
push
jl
jns
int
lret
insl
imul
es
push
pop
fsubrl
mov
jge
cli
mov
pop
xor
bound
mov
lahf
mov
mov
cmpsl
pop
mov
int3
jl
test
mov
dec
jb
test
loop
movsl
pop
ret
movsb
into
mov
movsl
jge
arpl
cli
mov
add
pop
lea
js
int3
xchg
fdivrs
mov
rolb
repz
gs
dec
mov
adc
mov
ds
lods
dec
lock
fwait
pop
ja
lds
dec
mov
add
adcb
faddl
add
pop
dec
jne
subb
mov
xor
imul
jg
dec
jbe
cld
pop
push
mov
lea
sub
loope
cmpsb
cld
popf
dec
or
cmpsl
adc
loopne
out
lahf
lods
fs
add
xchg
xchg
dec
add
bound
xor
les
adc
and
in
iret
mov
orl
ss
sbb
test
mov
inc
jge
arpl
insb
adc
into
jns
dec
mov
sahf
arpl
lret
jno
xor
mov
xor
cld
jg
lcall
ret
stos
push
ds
push
mov
add
and
loopne
or
aad
cli
inc
cld
stc
cmp
clc
push
sbb
or
in
or
mov
aad
hlt
pop
add
adc
mov
lret
sbb
sbb
sub
mov
pushf
or
adc
in
and
sti
scas
add
nop
mov
mov
repnz
or
sub
sbb
outsl
xchg
rolb
add
add
add
add
add
add
add
je
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
aam
add
add
add
xchg
add
add
add
add
add
add
add
add
test
add
add
cmp
add
add
add
movsl
add
add
mov
add
add
add
add
jmp
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsl
add
add
add
aam
repnz
add
add
add
addr16
loopne
cltd
orb
mov
add
pop
loop
fnsave
pop
pop
andl
jb
sahf
sti
and
sbb
dec
ss
cmp
out
mov
nop
fidivs
lock
jg
into
es
rcrl
mov
adc
and
inc
jns
mov
repnz
pop
jmp
push
imul
add
cwtl
sbb
dec
shll
and
and
out
movsb
inc
pop
pushf
push
fidivl
push
adc
mov
xchg
or
lret
mov
dec
mov
leave
lcall
push
inc
cltd
pop
adc
and
rolb
int3
fldl
push
jo
sub
jl
insl
fdiv
jecxz
in
bound
xchg
xchg
sbb
cld
push
arpl
push
and
mov
push
sahf
loope
mov
adc
insl
sbb
jns
inc
shll
mov
mov
cmc
ja
or
cmpsl
dec
fnstcw
icebp
fwait
jmp
mov
test
out
fiadds
cltd
mov
mov
jbe
mov
cltd
jmp
and
pop
into
lods
jecxz
int
dec
dec
sub
iret
jecxz
das
flds
sahf
es
pop
fcompl
push
leave
cmpsb
stc
stc
mov
pop
dec
nop
sbb
sti
sbb
and
mov
xlat
sbb
mov
mov
lds
movsb
daa
popa
xchg
add
jb
in
sbb
decl
mov
add
shll
movsb
xchg
push
testl
daa
mov
mov
aad
and
mov
loope
dec
js
fs
ret
push
fists
dec
fimuls
jbe
cmp
lcall
test
fsub
pop
add
not
adc
pop
gs
faddl
int
xchg
mov
lret
ja
mov
push
sbb
int3
mov
out
xlat
xor
in
xchg
cmpsl
fcmovne
jge
mov
ds
mov
cli
lods
outsb
flds
vpaddb
fcmove
outsb
pushf
push
notb
out
iret
fld
and
jae
out
add
loop
or
cmpsl
jo
push
jo
cmpsl
inc
rolb
out
inc
add
jmp
cmpsb
xor
loopne
xchg
mov
xor
jb
dec
ljmp
and
dec
ret
mov
daa
jnp
cmp
rcll
vpextrw
lahf
jmp
xorl
mov
sbb
or
stc
sub
xor
fiaddl
rcr
sbb
adc
cmpsl
es
mov
dec
lea
fwait
adc
pop
iret
pop
mov
mov
lds
imul
adc
popa
popf
arpl
add
sub
push
pop
inc
mov
cwtl
mov
in
inc
adc
shl
js
jl
and
sbb
inc
xchg
xor
fcomps
repz
comiss
lahf
cmp
jmp
sbb
int
xor
xor
addr16
xlat
sub
les
mov
shlb
into
jge
je
push
shl
mov
lahf
push
sub
inc
xor
mov
push
push
jne
out
ficoms
xor
jne
shl
je
inc
in
mov
pushf
pop
or
fidivrl
cmp
ret
test
sub
sbb
out
adc
lds
dec
ret
jle
xchg
jno
movsb
sbb
mov
xchg
cli
rcl
xchg
mov
inc
mov
mov
cmp
cld
pop
push
cmp
mov
orb
addr16
inc
pop
cmp
call
sbb
ljmp
add
add
rcr
std
push
sbb
mov
add
popf
pop
adc
mov
push
push
or
rcrb
lret
sub
sbb
and
xchg
lods
mov
cli
push
xchg
inc
add
cmp
fcomps
sbb
dec
lret
pop
adc
mov
imul
stos
dec
jp
xchg
test
xchg
lods
inc
jmp
gs
mov
js
fwait
ret
xchg
stc
cmpsb
dec
lea
fldt
out
jmp
sbb
pop
or
bound
jno
and
adc
mov
jns
inc
xchg
xor
negb
xchg
mov
rclb
cwtl
sahf
or
dec
xchg
pop
pop
jnp
or
ja
push
push
mov
insl
cltd
jg
mov
fidivrl
out
dec
movsl
push
cld
push
aam
sbb
xor
mov
push
clc
inc
xchg
loop
sar
enter
sti
xor
not
mov
sbbb
arpl
pushf
aad
or
push
punpcklbw
cwtl
push
dec
dec
ss
cmp
popf
pop
pop
mov
jae
mov
jae
dec
cli
leave
or
movsb
je
outsb
movsl
shll
mov
and
test
push
inc
push
push
cmpsb
and
loop
enter
ret
dec
xor
xor
pop
xor
mov
mov
cmc
hlt
jmp
shll
arpl
cmp
lcall
cltd
test
and
sub
ja
int
xchg
mov
sahf
cmp
in
jb
xorb
ss
push
push
rclb
add
xchg
scas
xor
daa
inc
cltd
popf
cmp
icebp
and
jmp
dec
xchg
das
push
xchg
lcall
ljmp
dec
lret
mov
mov
scas
or
popa
ja
es
sbb
hlt
jge
add
stc
cmp
fisttpll
mov
lahf
xchg
xchg
xchg
pop
add
outsb
das
int
jle
push
jns
lea
gs
mov
jle
sub
lret
shlb
pop
pusha
aad
ljmp
scas
outsl
mov
adc
loopne
fildl
bound
mov
mov
loope
data16
and
push
adc
and
andl
inc
add
into
mov
adc
aaa
inc
test
adc
xchg
mov
xchg
xor
sbb
adc
jl
je
lds
stos
dec
dec
cmpsb
rcrb
dec
lock
movsl
ljmp
std
rcl
mov
popf
and
das
lea
pop
inc
adc
mov
out
adc
adc
and
je
add
popf
testb
lods
sbb
mov
cltd
dec
sahf
pop
mov
push
sti
jno
and
frstor
mov
xor
xchg
xchg
pusha
xor
mov
jp
sbb
out
aam
lds
in
sbb
sti
xor
cltd
sub
sbb
ljmp
fdivrl
rol
mov
je
into
inc
ss
outsl
or
loop
mov
loopne
sbb
daa
addr16
push
int
lahf
mov
push
pushf
jns
ss
jnp
push
mov
shlb
mov
jne
mov
shr
lret
in
jmp
out
pop
aaa
mov
inc
rorb
cmp
lock
lds
imul
add
je
pop
pop
mov
sub
lea
sub
xchg
stos
mov
lds
xchg
jl
addr16
dec
push
or
sub
lea
and
mov
or
dec
push
or
rclb
xor
pop
dec
push
fcmove
and
pop
xchg
adc
push
or
and
push
scas
loopne
dec
scas
mov
int3
stos
pop
adc
mov
loope
cli
jb
fs
mov
push
pop
leave
repnz
fisubrl
push
cs
or
rcrl
dec
sbb
push
testb
stc
jbe
jmp
mov
sbb
inc
mov
dec
imul
aaa
sub
sbb
scas
clc
stos
sbb
inc
cmp
call
rcr
sbb
jle
insl
cmpl
or
outsb
dec
sub
inc
loopne
sarb
xchg
mov
imul
fstl
rcrl
push
das
insl
cmpsb
cmp
aaa
popa
pusha
push
roll
mov
xor
or
jne
iret
inc
sbb
and
loope
dec
lahf
pop
pop
scas
xor
in
mov
xchg
jecxz
outsl
aas
sti
mov
jae
nopl
cli
sbb
jge
rcrb
sub
cmp
imul
jl
stos
xchg
loop
lret
push
in
cmp
mov
mov
lds
movsl
sbb
leave
inc
cmpsl
pop
adc
mov
sbb
push
ljmp
sub
cs
mov
loop
out
sub
jb
jbe
in
orb
stos
rcll
and
jmp
jge
xor
popa
lcall
sbb
jmp
sbb
jmp
sub
nop
inc
push
cmp
nop
sbb
pop
push
cli
shll
sbb
cmc
jg
enter
je
or
sti
ljmp
jmp
xor
bound
test
aam
stos
push
imul
repz
cmc
rolb
xchg
and
mov
pop
adcb
jno
fwait
push
push
loopne
ds
mov
jbe
pop
ss
fdivr
jne
movsl
sbb
iret
xchg
mov
nop
rorb
sub
dec
scas
mov
jge
sbb
arpl
ret
inc
in
jmp
cmp
jb
xlat
fistl
or
lds
sub
adc
jne
arpl
repz
subb
or
fistl
mov
pop
popa
add
popf
call
and
pop
pop
xor
cmp
fcmovbe
or
pushw
fstpl
mov
jo
pop
jg
adc
dec
jb
jno
xchg
or
add
movsb
clc
and
clc
sbb
xchg
test
stc
addr16
lods
cmc
and
popa
int
mov
jle
fcomps
subl
pop
push
fwait
mov
stos
repnz
or
mov
mov
loop
inc
add
sar
mov
movb
outsb
hlt
or
call
data16
push
out
mov
sub
mov
sub
or
aas
das
push
mov
pop
cmpsl
les
repz
pop
and
in
push
js
jae
and
add
jl
inc
sub
sbb
das
jmp
or
add
cmpsb
jnp
out
jno
push
xchg
mov
mov
fnstsw
incl
movsl
adc
fldenv
loope
icebp
mov
cltd
push
into
packuswb
pushf
mov
das
push
popf
mov
addr16
xor
adc
js
aam
xchg
fs
inc
in
add
mov
cmc
push
or
stc
lahf
mov
rcll
jg
outsb
arpl
test
xchg
repz
out
fmulp
cmc
sub
in
adc
ja
xchg
int3
test
mov
inc
test
scas
or
sbb
test
ds
stc
xor
pop
lods
repnz
add
loope
and
jno
jp
add
aam
jns
cmpsl
mov
inc
fucompp
testb
mov
dec
mov
call
adc
or
or
ljmp
xor
ljmp
inc
scas
imul
mov
fxch
jae
cmc
mov
jns
in
jg
in
mov
aas
xor
xor
push
jns
pushf
rorb
jae
popf
pop
mov
fwait
leave
decl
sti
xlat
int
cmp
faddl
pop
addr16
and
aad
in
pop
in
sti
jno
xchg
dec
mov
mov
jb
popa
cld
mov
bound
xor
inc
ret
inc
push
xchg
pushf
push
add
mov
lcall
mov
loope
cmpsl
in
mov
rorl
icebp
jg
movsl
mov
add
insb
add
pushf
mov
mov
cmp
enter
mov
add
and
scas
dec
dec
jbe
mov
inc
jns
or
pop
or
push
xchg
jp
add
add
xor
filds
insl
lret
add
loopne
jecxz
mov
into
out
mov
push
pop
arpl
xor
sbb
andb
mov
sbb
fistl
pop
xchg
out
sub
xchg
js
dec
sbb
and
insl
add
sti
inc
js
jbe
mov
lds
out
aas
pop
imul
mov
inc
pushf
les
sub
adc
arpl
cmpsl
test
cmp
lods
aam
jae
jecxz
sbb
inc
repnz
pop
je
xor
fcmovnbe
cmp
dec
push
pop
fcoml
inc
fs
sub
aaa
aad
add
xor
or
mov
pushf
pavgb
es
out
daa
dec
sub
add
and
or
or
ltr
je
xor
int3
dec
jg
test
jns
sbb
bound
iret
fiadds
les
rorl
mov
xor
push
gs
lcall
pop
cmpsb
add
enter
dec
xorl
mov
jo
xlat
or
mov
inc
lea
xor
dec
push
out
cmp
pop
pusha
push
nop
push
mov
cmc
das
test
cltd
inc
add
les
out
scas
cmp
and
xchg
xchg
bound
test
xchg
xor
jg
sbb
mov
dec
jmp
pop
sub
or
rcrl
inc
mov
and
movsl
inc
insb
outsb
push
in
adc
xchg
popl
mov
xchg
adc
ret
aas
dec
pop
in
lret
xor
push
es
cmp
sar
test
lods
pushf
out
mov
imul
sub
adc
jo
cmp
nop
dec
mov
fs
hlt
push
fucomp
mov
adc
out
pop
xlat
jno
adc
data16
jno
add
aad
push
inc
or
add
cmp
xchg
or
sbb
lods
pop
lret
stos
xor
or
jge
inc
sub
je
popa
cmp
lods
clc
jmp
test
lahf
mov
sub
push
jle
andb
cmpsl
insl
mov
fdivrl
test
pop
shl
scas
stos
xchg
cmpsl
mov
mov
outsb
out
fwait
push
insw
sbb
ror
mov
loop
enter
nop
sub
imul
sahf
inc
shlb
int3
cwtl
cwtl
jno
popf
adc
mov
into
aad
in
inc
insl
imul
mov
mov
xchg
or
aad
adc
std
adcb
mov
mov
or
push
add
pop
imul
add
mulb
sub
pusha
stos
frstor
xchg
mov
mov
dec
xlat
gs
cmp
lds
movq
xor
xchg
gs
gs
cmp
xchg
push
mov
es
or
cld
sarl
dec
pop
sbb
in
and
rcrb
and
in
fcompl
rol
mov
mov
pop
pop
jge
dec
dec
push
jle
ljmp
in
sbb
dec
jmp
ljmp
xchg
xor
cmp
or
mov
mov
fs
test
sbb
stos
ret
movnti
cld
mov
sarl
push
lret
fcmovnb
lods
cmp
mov
cmp
mov
push
iret
cli
add
jns
add
mov
push
inc
inc
push
out
jge
mov
fadds
mov
gs
mov
cmpb
icebp
inc
inc
push
decl
test
stos
and
rclb
sahf
inc
mov
lods
dec
push
pop
and
xchg
sbb
iret
mov
sub
sahf
or
or
xchg
cmp
jmp
add
lret
lds
jo
and
les
push
and
fnsave
shlb
pop
pop
aad
subb
adc
push
adc
jmp
mov
sbb
xchg
jne
pusha
lock
jge
lret
add
pop
add
fisttpl
jbe
insb
pop
mov
mov
outsb
jns
loop
cltd
out
andb
stos
adc
fnstsw
adc
cmp
jge
jnp
mov
adc
dec
xor
sbb
aam
stos
and
js
mov
ret
call
dec
and
adc
lock
sub
add
xor
jnp
movsb
sar
shl
sbb
repnz
sub
popa
scas
mov
cld
sub
mov
xchg
jecxz
mov
pop
add
sub
push
push
cwtl
aam
xor
dec
cmc
pusha
sub
inc
add
js
pop
gs
out
push
mov
pusha
movsb
jne
rorl
cs
cmpsl
int
jbe
mov
inc
pop
dec
pop
cwtl
pop
and
jge
and
fisubrl
xor
lret
mov
in
cmp
mov
and
jns
cli
push
xchg
push
sub
adc
pusha
mov
jae
cmpsb
sub
mov
in
movsb
and
ret
jg
lock
sub
ds
jecxz
pusha
bnd
fwait
push
roll
lds
and
cwtl
inc
cmp
adc
fbstp
ret
xchg
push
or
mov
and
addr16
jp
add
hlt
sub
inc
neg
pushf
inc
sub
rcll
dec
jge
dec
lods
sub
sub
dec
add
push
mov
sti
subb
stos
cmp
cmp
xchg
cmpsb
cmp
cmp
sub
mov
clc
ds
ret
cmp
lcall
bound
pushf
scas
xor
cmp
or
sub
pop
stc
sbb
xchg
mov
dec
sbb
and
and
js
cltd
mov
mov
call
addr16
icebp
inc
dec
jle
ret
ficompl
les
lcall
sti
cmp
xor
xchg
repnz
cmp
sub
sub
dec
dec
jno
mov
insl
addr16
lods
pop
das
jle
ljmp
xchg
test
mov
out
push
jp
clc
out
pop
jmp
jae
or
xor
adc
faddp
mov
das
jb
mov
sbb
fsubrl
daa
cltd
mov
jne
shll
and
jbe
out
nop
enter
inc
mov
in
sti
mov
stc
mov
ret
jno
cs
mov
in
mov
repz
xor
pushf
jmp
ja
icebp
call
cmc
or
cmpsb
mov
jl
mov
cmp
enter
mov
aaa
push
pop
lea
fnstsw
xor
mov
mov
sarl
inc
cmp
int3
xchg
pop
ja
dec
xchg
xor
inc
lahf
xchg
je
iret
add
sub
or
fidivrl
add
pop
fsubp
cmp
scas
pusha
repnz
adc
mov
roll
minps
dec
sbb
clc
push
scas
pop
imulb
xchg
xor
cmp
mov
fdivrp
sub
sub
loope
es
xchg
addr16
pushw
jg
std
or
cwtl
lcall
out
cli
jg
push
push
jp
cmp
push
test
mov
inc
call
push
loop
push
push
adc
fsubr
inc
xchg
pop
sbbb
adc
push
sti
and
mov
into
pop
jl
daa
test
mov
mov
fnsave
pushf
std
and
sbb
fwait
nop
lds
inc
pop
pop
test
das
cmpsl
adc
shlb
aas
fsubl
inc
xor
jl
je
lods
jp
xor
fwait
out
dec
scas
sti
push
jp
pop
loop
cld
scas
adc
in
and
dec
lods
sub
leave
sarb
rol
insb
inc
mov
fstl
xchg
scas
clc
or
cmp
mov
jl
add
mov
scas
in
mov
popf
mov
scas
lods
fisttpll
jnp
mov
add
xor
inc
push
jmp
pop
pop
sti
jo
fcompl
add
dec
and
cmp
push
adc
mov
push
insb
jnp
loopne
lea
jb
sbb
test
popf
mov
mov
xor
pop
mov
jl
stc
pop
mov
push
push
scas
lods
and
mov
ds
jbe
dec
mov
dec
jno
bound
push
fistpl
movsl
mov
xchg
dec
dec
mov
sub
or
xchg
jnp
xchg
or
sti
add
ret
rcr
inc
inc
iret
roll
mov
in
push
subb
adc
dec
xor
mov
into
mov
push
inc
push
inc
sbb
mov
mov
sbb
dec
stc
aam
repnz
test
rol
das
repnz
fidivl
test
out
mov
sbb
sub
popf
ja
mov
negb
ret
jne
mov
mov
mov
jp
push
fucomip
pop
pop
push
sbb
leave
jle
fcoml
es
in
inc
dec
ja
pop
popf
xchg
dec
jle
xchg
cmpsb
xchg
loopne
xchg
fsubl
int3
inc
aad
inc
jno
lret
inc
andl
jecxz
outsl
jb
int3
stos
mov
leave
addl
rcr
mov
in
in
sbb
add
xchg
add
inc
nop
mov
shll
mov
inc
push
lcall
mov
scas
mov
dec
push
aad
mov
inc
gs
outsl
fstl
sub
sbb
mov
push
aaa
sti
pop
jmp
out
fcomip
cmp
test
jg
fcmove
sbb
jbe
mov
mov
pop
mov
or
fcomps
push
sub
mov
pop
std
or
movsb
mov
mov
out
pushf
lods
add
cwtl
mov
hlt
fs
pop
call
adc
mov
fwait
dec
push
pop
shlb
aas
or
fistl
inc
adc
and
pop
and
sahf
cmpsl
push
inc
push
lock
ret
adc
inc
sub
stc
push
mov
out
daa
clc
push
pusha
cmp
cld
sbb
cwtl
jge
jle
insb
push
and
loope
ja
xor
cmp
or
adc
xchg
inc
inc
mov
sbb
mov
xchg
jmp
ret
sbb
xor
jge
lea
xor
jnp
scas
dec
mov
inc
addr16
inc
fiadds
fwait
sbb
cli
push
lcall
cmpsb
push
movsb
inc
repz
shrl
inc
pop
les
jecxz
orb
inc
repz
jecxz
push
stc
inc
mov
outsb
pop
fsubl
and
stos
pop
inc
fisttps
add
and
sbb
dec
int3
adc
push
in
out
xchg
es
lret
adc
mov
adc
lods
adc
cmp
lret
lahf
jb
aaa
inc
push
mov
pop
jae
jo
push
xchg
sub
adc
icebp
arpl
adc
ret
mov
pop
sub
and
ret
mov
add
add
and
hlt
sub
scas
data16
lods
cli
jnp
scas
cld
xchg
dec
insl
pop
pop
or
insl
ljmp
ja
fisubl
in
pop
add
jbe
pop
jmp
mov
cmc
ds
test
mov
jg
test
fstpl
push
dec
mov
mov
cmpsl
pop
cmpsb
je
pop
inc
push
inc
inc
fcompl
fdivs
int3
add
aam
out
fwait
loopne
xchg
cmp
and
xor
aad
sub
mov
sbb
aam
sbb
pop
iret
pop
xchg
ds
imul
pop
push
push
out
mov
loop
int
pop
jg
mov
loop
push
insb
stos
cs
mov
mov
out
jecxz
xchg
and
dec
mov
hlt
cmp
fsubrp
mov
insb
push
or
stc
lcall
sub
arpl
pop
movsl
aam
aad
mov
sub
jae
mov
jle
pop
in
xorl
add
cmp
cmp
pop
cmc
test
push
pusha
hlt
out
lcall
push
int
sti
mov
mov
xchg
cmp
ljmp
or
movsb
into
push
roll
dec
and
mov
adc
lahf
sub
movsb
mov
lahf
mov
stos
sub
nop/reserved
hlt
push
or
push
lock
mov
lds
in
and
out
fwait
xchg
ret
mov
or
testb
dec
cmpsl
inc
in
push
sarl
lcall
cli
insb
jl
mov
xor
inc
lahf
or
pop
lds
push
xor
sbb
into
orb
add
hlt
push
insl
arpl
xor
in
mov
les
or
in
push
bound
cmp
scas
adcb
jnp
sarl
push
enter
pop
adc
fwait
int
je
or
xlat
dec
jnp
jns
int3
jne
inc
add
cmp
sbb
or
xor
call
cmp
sbb
and
mov
jmp
jbe
lea
inc
nop
lret
mov
frstor
xor
mov
cmp
jg
xor
dec
clc
stos
test
repz
pop
push
fisttpll
in
jne
cli
insb
cmpsb
in
cli
xchg
cmp
push
sbb
jnp
lret
mov
popa
loope
test
popf
lahf
xlat
mov
aas
je
in
mov
inc
mov
add
jmp
jnp
jmp
pop
lcall
in
std
scas
in
xchg
das
add
dec
sub
xor
xor
mov
aad
lret
imul
and
test
jmp
fisttpll
fsubp
ljmp
loopne
sbb
loop
shlb
mov
cs
sbb
jle
data16
or
iret
mov
jae
mov
test
lea
add
fisttpll
sub
mov
cmpsl
mov
dec
std
jmp
bound
aaa
push
cmpsl
int3
dec
inc
push
int
movsl
dec
and
mov
cs
jp
mov
test
xchg
loopne
xchg
mov
jb
push
subl
add
mov
imul
divb
cltd
mov
add
dec
out
or
fnstcw
pop
jg
inc
dec
sbb
sahf
pop
add
cli
mov
or
add
push
out
jge
insl
push
imul
dec
das
rcrl
faddl
pop
cmp
data16
aad
jg
pop
and
fcomps
jp
shr
fyl2xp1
inc
inc
xor
add
dec
sub
sub
subb
icebp
mov
ds
pop
xchg
xchg
loopne
cwtl
daa
push
out
sbb
movsb
fwait
ds
inc
push
adc
in
in
xor
lds
xor
pop
call
mov
fsub
mov
insb
sarl
cmpb
dec
cmp
adc
jmp
loop
repnz
shlb
idiv
insb
xchg
stos
stos
popf
mov
push
pop
jnp
jl
lret
sub
js
pop
add
mov
dec
push
xchg
in
pop
movsb
jns
stos
jbe
push
jne
hlt
sarl
push
mov
pop
dec
clc
or
pop
lods
int3
or
mov
enter
arpl
mov
add
add
xchg
adc
mov
mov
fstl
push
xchg
dec
divl
sub
test
js
push
hlt
cld
fstpt
into
inc
pop
ret
and
cmpsb
cmp
test
shrb
dec
popf
pop
mov
or
push
loop
xchg
ret
xchg
or
scas
dec
add
test
inc
push
lods
jg
out
addr16
ja
mov
stos
jo
stos
add
push
jg
jl
daa
mov
cmp
mov
add
sbb
shll
outsb
inc
std
push
ret
adc
and
xlat
or
or
pop
mov
lds
cmpsl
mov
mov
and
or
pop
dec
inc
cmp
mov
mov
repz
jg
hlt
xchg
jmp
fcompl
mov
jle
arpl
fmull
sub
and
mov
lods
fwait
xor
mov
jle
sahf
enter
xchg
stos
outsl
inc
mov
icebp
test
mov
xor
cmp
lds
adcb
jmp
arpl
lahf
sbb
in
dec
imul
outsl
lret
and
div
enter
imul
mov
stos
rcrl
push
mov
dec
mov
idivb
jecxz
adc
add
test
fists
dec
jnp
js
add
fstpl
shlb
dec
rcl
jl
add
push
add
test
add
add
add
cwtl
add
add
add
add
add
add
add
mov
add
add
add
fiaddl
add
add
dec
cmp
add
add
cmp
xchg
add
add
flds
add
add
add
add
add
add
add
faddl
add
add
jle
add
add
int3
add
add
add
add
repnz
add
add
add
add
add
jp
add
add
add
add
add
add
jecxz
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
dec
inc
sub
add
lret
add
cmc
mov
add
xor
add
add
add
add
add
sub
add
dec
add
add
add
add
add
adc
add
add
add
add
add
add
lcall
add
add
add
pop
add
add
add
jbe
add
add
add
or
mov
notb
jne
mov
test
gs
adc
jne
xor
lea
pop
xchg
arpl
aas
push
fisubrs
inc
xchg
inc
mov
jle
and
rorb
xor
mov
jmp
inc
sbb
or
divl
xlat
xchg
cmp
inc
cmc
inc
aad
xor
test
cmp
and
stos
inc
inc
push
in
dec
cmpb
sbbl
mov
testl
cld
mov
pop
loopne
sbb
bound
adc
push
sbb
addl
and
push
call
lret
in
jge
leave
mov
test
imul
and
imul
enter
cmp
std
jg
mov
push
cwtl
scas
in
stos
jmp
lahf
rcrl
mov
xchg
push
jge
int
fisubrl
adc
push
adc
mov
imul
int
loope
mov
push
xchg
fidivl
mov
push
or
mov
mov
jge
cmp
gs
cmp
jp
pop
push
out
in
dec
jge
cmc
call
arpl
xor
push
fisubl
cmp
and
jmp
push
movsb
jo
out
add
insl
mov
psllq
lahf
mov
lahf
rorb
push
iret
mov
inc
icebp
into
pop
fucom
aaa
in
xchg
repz
inc
sarb
cmp
movb
dec
mov
cmp
cwtl
test
sbb
dec
dec
cmovbe
cmp
popf
stc
sti
std
and
bound
iret
out
pop
stos
ja
rorb
or
xchg
iret
frstor
push
lahf
dec
aad
mov
fisubl
movb
in
notb
lret
mulb
sbb
loope
ret
pusha
outsb
out
sub
mov
sbb
push
sub
fldt
repnz
pop
call
scas
push
aaa
pop
test
dec
loopne
pop
pop
stos
push
jl,pn
push
ror
dec
mov
mov
adc
push
cmpsl
arpl
or
inc
adc
test
cmp
push
dec
inc
fs
jecxz
outsl
jb
cmp
pushf
insb
mov
filds
lods
aam
aad
adc
inc
lock
pushf
add
mov
inc
mov
pop
repz
aad
add
mov
pop
sub
adc
enter
lcall
mov
adc
ss
addr16
jmp
sub
mov
xor
out
mov
pusha
jae
sbb
into
push
mov
xchg
inc
cwtl
out
stc
xor
cmp
repnz
lods
movsl
shrb
aas
pop
pop
decl
int
call
call
mov
push
push
and
mov
in
rorl
push
cmpsl
jmp
dec
push
dec
test
orb
or
jmp
xlat
inc
inc
lret
push
lret
in
rorl
jne
insl
xchg
pop
enter
jb
lret
iret
lahf
add
pop
pop
add
and
sub
sub
dec
roll
inc
jmp
add
std
fidivrl
dec
shll
add
mov
add
jbe
cwtl
mov
sub
jno
sbb
loope
pop
outsl
pushf
adc
rcrb
xchg
movsb
ret
push
mov
loope
dec
lret
jb
pop
xchg
adc
daa
inc
insl
repnz
ss
jo
push
negb
outsl
mov
dec
dec
dec
mov
jno
fwait
outsb
movsl
int
pop
cmp
mov
stc
int3
test
ficoms
mov
scas
adc
xor
sub
add
xchg
sbb
repnz
pop
mov
sbb
loopne
shll
es
gs
sbb
xor
xchg
jo
inc
push
xchg
je
popa
test
clc
loope
and
mov
ret
dec
or
push
jo
stos
sbb
cmp
movsb
and
pop
push
push
mov
sbb
aas
sub
pop
in
pusha
xchg
lcall
ljmp
das
or
fstps
pop
sti
data16
and
scas
outsl
lcall
mov
out
out
push
mov
jge
movl
mov
xor
orl
xchg
loope
test
adc
sbb
pushf
push
cltd
mov
and
sbb
push
push
int
jo
outsb
das
mov
cltd
pusha
mov
push
dec
add
mov
or
mov
ret
and
jo
jge
ret
aad
jb
fisubl
jnp
insb
cmpsl
xchg
in
pushf
xor
push
add
cmp
subb
loop
stos
sbbl
fldl
jo
ss
xor
fiaddl
or
jne
leave
cmpsl
jle
lcall
in
out
jnp
divl
nop
xchg
enter
cli
mov
add
or
dec
ds
cmp
jns
xchg
xchg
ret
leave
gs
fists
inc
dec
inc
minps
out
push
rcrl
stc
aas
mov
xchg
jp
mov
mov
lret
adc
int
subl
popa
stos
lret
arpl
xchg
lea
popa
leave
stos
xchg
shl
add
lret
cs
cmpsl
fadd
lcall
xchg
xchg
pusha
mov
icebp
icebp
or
dec
pop
sbb
cmp
mov
mov
pop
pushf
jge
inc
xor
out
int3
icebp
cmp
rcr
es
pop
jno
jle
insb
pop
aas
fisttps
rcrl
sub
add
icebp
pop
fcmovb
push
movsb
push
rcrb
loope
jge
and
in
int3
jnp
or
mov
rorb
mov
dec
clc
pushf
cld
icebp
stos
cmpsl
sar
push
cltd
js
push
das
mov
fs
ja
fisubrs
jle
insb
push
scas
imul
inc
test
ret
in
in
sub
jb
pop
out
pop
jecxz
in
fnstsw
fcmovnu
inc
icebp
xchg
ret
mov
stc
xchg
ror
xor
mov
mov
push
lret
adc
or
sbb
out
std
cltd
int
cmp
mov
shll
add
pop
pop
adc
push
xor
jne
jb
cmp
inc
cmp
pop
test
aam
jno
xchg
xchg
int3
mov
je
inc
xor
pop
push
mov
cltd
out
mov
sub
pop
repz
add
mov
in
push
je
mov
mov
adcl
pop
xchg
mov
sarl
pop
cmp
mov
mov
xor
mov
pop
ja
jmp
es
mov
fsub
dec
push
lds
rcrb
adc
lods
mov
or
fiadds
pop
inc
sub
rorb
stc
jl
notb
push
out
xor
mov
add
fs
pop
adc
push
xchg
cli
cmp
add
adc
mov
lods
jmp
jae
aam
test
shll
sub
jecxz
or
mov
pop
stos
cli
cld
mov
cmpsb
clc
cmp
mov
cmp
sbb
notl
jns
push
movsl
mov
cmp
xor
sbb
das
xchg
mov
push
mov
jg
add
mov
jne
negb
dec
jo
push
mov
jbe
inc
push
pusha
xchg
mov
mov
xchg
pop
push
cs
cmpsl
push
cmpsl
xor
inc
in
les
jmp
lods
cmp
dec
jnp
jnp
adcb
add
inc
xchg
mov
mov
loop
sub
addb
inc
xchg
cmp
sub
ret
or
adc
stos
xor
ret
sub
mov
fs
and
pop
sub
inc
or
dec
daa
adc
popa
popf
loopne
nop
insl
pusha
enter
inc
pop
lret
mov
jns
dec
imul
fwait
rcrl
ror
test
pop
and
addl
cli
or
push
in
push
mov
push
out
push
pop
pop
inc
mov
fisubs
int
cmp
xor
xchg
sti
xchg
bound
sbb
lahf
push
and
dec
repz
lret
push
jge
jl
or
popf
sub
insb
ret
mov
push
outsb
or
dec
jae
adc
adc
push
mov
dec
daa
xchg
dec
mov
rorb
jmp
push
inc
cmp
daa
inc
cmpsl
push
mov
mov
xor
into
fidivrs
inc
cmp
sbb
int
int
decl
mov
arpl
popf
jne
push
pop
gs
mov
adc
lahf
inc
into
adc
outsl
cwtl
dec
mov
mov
mov
movsl
rorb
rol
inc
push
arpl
fcmovnb
jmp
xor
scas
gs
mov
and
movsb
mov
pop
inc
lcall
and
pop
lret
mov
push
daa
xor
fcompl
lods
or
mov
ret
mov
mov
sub
push
adc
and
insl
in
mov
xchg
mov
outsl
and
pusha
test
lods
lods
inc
js
cmp
loop
std
inc
outsb
cmc
push
and
or
arpl
jo
xchg
imul
out
sbbl
xchg
sarl
outsl
add
fcmovne
imul
dec
lret
mov
mov
arpl
cwtl
dec
fisttps
jg
jmp
jle
test
mov
sub
into
jns
pushf
arpl
push
in
rclb
mov
ljmp
loope
fcoms
adc
imul
imulb
fwait
mov
sub
stos
mov
jo
mov
mov
mov
call
test
xor
insl
fsubrl
adc
out
push
faddl
pop
mov
jp
xchg
bound
movsl
jno
adc
out
mov
push
scas
rcrb
push
mov
mov
clc
mov
sub
int3
and
sahf
fs
add
pop
push
jnp
cli
das
daa
test
add
pop
sti
dec
push
mov
sbb
push
sbb
aad
outsb
xchg
aaa
push
xchg
nop
sbb
lahf
push
pop
mov
mov
push
call
shll
inc
ss
add
xchg
inc
dec
loopne
arpl
xchg
or
or
ss
mov
pop
or
inc
testl
ljmp
push
mov
je
dec
push
stos
test
fwait
aad
dec
mov
add
mov
out
mov
mov
add
cmp
mov
fwait
cmpl
test
lcall
shrb
fcomps
ret
or
ret
stos
push
popf
xchg
and
mov
add
bound
push
xchg
lret
dec
cmp
sbb
ret
hlt
insl
fs
jbe
inc
iret
jne
sub
xchg
adc
mov
cltd
and
xchg
xlat
sbb
pusha
aas
mov
das
rcl
jns
daa
cs
dec
cmp
mov
mov
movsl
xor
nopl
cwtl
sub
mov
inc
inc
adc
or
jmp
loope
mov
pop
lea
les
es
orw
mov
inc
jmp
sbb
jb
sbb
lds
cmp
fildl
ds
scas
scas
add
sub
add
inc
nop
lahf
jns
add
outsl
mov
aaa
push
push
xlat
cwtl
addl
iret
jmp
nop
xor
imul
int
push
add
pusha
out
inc
pop
xchg
leave
mov
addr16
cwtl
adc
sbb
push
lret
das
inc
xchg
fiaddl
test
std
pop
mov
add
mov
test
test
adc
inc
and
ret
ret
inc
test
mov
mov
mov
sarl
xchg
jmp
mov
popa
rclb
add
cmp
ffreep
divb
add
jmp
repnz
or
in
xor
lds
mov
jl
adc
push
repnz
pusha
scas
lcall
pushf
cmpb
mov
push
test
cld
and
xchg
mov
push
inc
push
push
dec
std
mov
in
insl
dec
fldt
pop
adc
aad
mov
add
mov
lds
jmp
in
lds
test
pop
push
inc
roll
add
cmp
mov
mov
cmp
pop
sub
dec
pop
inc
add
push
scas
test
xor
or
arpl
push
xor
inc
ss
xchg
or
xchg
pushf
cmp
outsl
jo
imul
fwait
xchg
push
cli
andb
mov
dec
ret
cmp
scas
or
mov
xchg
sbb
mov
or
imul
dec
push
mov
dec
xor
test
int
call
cmpsb
fidivl
aaa
lret
cmp
cwtl
adcb
fcmovne
inc
hlt
movsl
dec
dec
outsb
and
mov
inc
mull
test
push
or
add
fmulp
xor
and
pop
cmpsb
bound
xor
and
lods
sub
scas
sbb
push
mov
or
or
js
fucomi
dec
aam
mov
arpl
mov
in
in
pop
bnd
mov
xchg
ja
subb
xor
dec
int
clc
xchg
cmpsb
lods
mov
aad
daa
mov
repnz
adc
or
scas
mov
dec
inc
jecxz
mov
fildl
icebp
call
das
mov
enter
push
nop
loopne
inc
lcall
stos
movsb
pop
mov
gs
mov
out
lods
push
pop
popf
outsb
std
das
xchg
pop
sub
pop
cmp
add
lret
clc
cli
sbb
nop
mov
enter
imul
cmp
or
icebp
lods
in
add
cltd
dec
sahf
cmp
adc
dec
lea
xchg
std
mov
lea
lea
mov
jl
call
dec
mov
test
cmp
lods
jne
and
pop
mov
and
pop
lahf
and
ljmp
daa
scas
cmp
outsb
insl
jle
loope
lods
jmp
sbb
xchg
testb
stos
sarb
xor
je
xor
enter
pop
dec
imul
imul
lcall
lcall
arpl
add
pop
xor
sub
rcl
and
push
mov
inc
push
pop
mov
fidivrl
js
pop
inc
nop
push
ds
adc
xchg
or
pop
in
movsb
xchg
lret
jmp
sub
inc
int
adcl
shll
or
and
fsts
subb
test
fcmovnb
mov
ljmp
inc
icebp
aam
sbb
gs
xor
pop
xchg
jge
adc
repnz
and
aam
pop
or
insb
sub
mov
xchg
sub
or
into
enter
mov
xchg
push
arpl
add
icebp
out
xor
ret
fistl
popf
adc
xchg
mov
jne
inc
cmp
scas
or
nop
jnp
call
push
inc
loope
js
scas
aad
lods
ror
gs
mov
dec
xor
sbb
lds
aam
rorl
pop
imul
lods
jno
mov
jo
sub
imulb
in
xor
push
dec
testb
rorl
inc
pop
out
cmp
sar
mov
push
loopne
aaa
sub
push
into
xlat
lock
mov
stos
lock
test
andb
jbe
das
and
int3
sarb
inc
jp
cmpsb
fs
and
in
icebp
push
mov
push
rcll
adc
clc
add
xor
xlat
cwtl
pop
cwtl
imul
les
je
cltd
fstpl
mov
fistpll
add
jne
xchg
filds
bound
daa
push
xorl
les
scas
adc
out
stos
out
and
out
in
ja
adc
insb
mov
mov
data16
sub
add
fcompl
out
pop
les
push
loopne
pop
add
xchg
je
pop
adc
jbe
sti
ja
test
arpl
sbb
xor
or
ds
jecxz
or
int
jns
xor
cmc
rorl
lods
stc
stos
and
sarb
sbb
cmp
cli
fwait
ljmp
int3
ret
fcoml
pop
aaa
nop
mov
call
mov
jnp
push
sub
cwtl
xchg
sub
jae
or
push
lds
and
push
pop
mov
sarb
leave
push
jne
iret
mov
fnstsw
mov
jno
inc
pop
sti
and
cmp
lock
dec
in
stos
cli
and
dec
and
mov
or
pop
test
pop
js
pop
cmc
int3
jnp
xchg
cmp
xor
insb
sahf
daa
inc
add
aad
sub
test
sti
aas
mov
dec
xor
popa
push
lods
mov
pop
test
aas
jbe
xchg
fsts
in
push
adc
lods
mov
es
pop
push
lahf
sbb
xor
xor
fstps
outsb
loope
cltd
enter
xlat
cli
jae
in
cmp
shl
mov
sbb
in
ret
mov
mov
int
add
neg
pop
out
xor
jnp
add
sbb
repnz
mov
cmp
adc
lret
mov
adc
jmp
adc
push
mov
subl
sbb
jae
ss
cld
imul
xchg
addr16
and
outsl
jae
pop
ret
mov
mov
add
jge
out
mov
xchg
stos
lock
xchg
mov
xchg
sbb
inc
mov
mov
aam
pop
fwait
mov
mov
sti
ret
push
orl
or
cli
fsubl
or
lret
mov
ja
sahf
inc
xchg
dec
inc
mov
aad
lcall
sbbb
popf
repz
lods
mov
sub
xor
cmc
push
test
test
out
adc
cld
out
and
and
pop
ss
and
loop
pop
xchg
nop
rcrl
movsl
xchg
jne
adc
js
jno
push
idivl
ja
and
lds
mov
fisubrl
add
jmp
cwtl
rolb
rclb
mov
pop
sbb
xchg
mov
popa
clc
rcll
sbb
mov
cmp
xchg
pop
cmpsl
mov
pop
or
xchg
std
loope
dec
ss
mov
inc
or
out
jecxz
pop
inc
jae
push
mov
das
fnstsw
jo
call
xchg
cwtl
xor
adc
fsubrl
dec
fwait
pushf
cmp
js
stc
inc
cmpsl
cli
adc
outsb
lock
in
dec
shl
shl
mov
mov
aas
mov
scas
shr
clc
mov
mov
cmpsb
inc
test
stos
xor
in
testl
mov
popa
xchg
scas
cld
xor
rcrl
mov
jne
lret
je
sbb
dec
lds
inc
xchg
dec
lahf
je
cmp
call
test
cmp
dec
icebp
and
testl
stos
icebp
cld
insb
xor
sbb
push
fmul
inc
inc
jnp
lret
mov
xchg
mov
inc
xchg
cs
pusha
push
enter
xor
mov
adc
imul
push
mov
cli
mov
test
in
push
ja
loop
inc
jnp
aaa
sbb
ja
hlt
jg
mov
imul
push
orl
adc
inc
outsl
mov
sbb
enter
xor
stc
pop
in
sub
packuswb
mov
cmp
test
ret
push
aad
push
hlt
js
mov
std
xor
movsb
or
icebp
orl
cmp
add
jno
es
in
push
xchg
cs
add
adc
popl
or
and
xchg
push
cli
pop
gs
push
jge
pop
sti
mov
insl
mov
je
pop
push
fcoms
pop
jp
jl
xchg
xchg
lds
sbb
in
adc
adc
cmp
mov
les
lret
adc
icebp
bound
into
fwait
rclb
inc
mov
lds
dec
iret
xor
test
ret
gs
push
stos
andb
mov
jl
std
pop
lock
xor
scas
test
cmp
sbb
xor
dec
out
mull
pop
fcomp
lret
jmp
iret
sub
dec
pop
iret
mov
mov
mov
lds
pop
add
int3
xchg
push
loope
cmc
push
mov
lock
mov
lea
popa
bound
push
mov
inc
sub
and
or
mov
jns
popf
add
movsb
lds
mov
lret
cmp
outsb
or
loopne
test
jnp
inc
jb
stc
mov
sub
mov
mov
ljmp
pop
pop
insb
pop
es
jne
or
repnz
rcr
sbb
ja
mov
cmp
lock
jecxz
dec
out
sbb
adc
stc
pop
inc
or
sar
pop
movsl
movsb
fisttpl
jl
fmulp
test
jne
stos
pop
gs
mov
dec
dec
sbb
fsubrp
pop
aad
sbb
pop
pop
mov
push
dec
push
dec
jp
or
mov
push
adc
jg
lahf
adc
decl
cld
cltd
bound
mov
sbb
cmc
aas
aad
popa
das
idivl
and
add
jmp
mov
xlat
sbb
sar
bound
sti
aad
pop
std
sarl
lods
stos
aas
jo
xchg
out
addps
pop
in
mov
lods
mov
pop
mov
inc
ja
cmpsl
outsb
lret
push
dec
repz
mov
movsl
loope
push
sbb
je
ret
push
xchg
and
clc
cld
rorl
out
addb
xchg
test
mov
pushf
or
xchg
pusha
mov
lods
popa
scas
loopne
es
std
dec
add
mov
aad
fnsave
psubsb
add
push
stc
mulb
add
or
pop
jo
push
cld
sub
or
js
insb
aaa
das
pop
inc
inc
push
push
sub
sti
fucomi
insb
pop
and
adc
imul
popa
jg
jb
push
je
lods
lcall
dec
mov
or
fimull
xchg
mov
xor
in
xor
lret
xchg
or
push
inc
xchg
dec
sbb
jnp
int
and
ja
inc
adc
repz
out
mov
mov
outsl
pop
pop
xchg
push
mov
test
add
mov
out
popa
sub
pop
jp
cwtl
dec
dec
mov
call
lds
mov
or
int
xchg
movsb
ret
jp
adc
out
push
dec
cmp
pop
cwtl
jge
cmp
in
jg
pop
dec
cli
lahf
insb
push
push
into
cltd
je
bound
inc
stc
nop
push
jns
lods
and
mov
jp
aam
rclb
sahf
pop
lcall
rcrb
test
mov
jae
sbb
aas
int
lcall
aas
xchg
outsl
inc
xchg
outsb
dec
test
and
shll
lret
xchg
mov
imul
xorb
loop
mov
ljmp
mov
mov
mov
stos
dec
add
jg
sti
inc
sbb
hlt
mov
mov
jbe
mov
sbb
lock
mov
insb
shr
dec
push
cmpsl
shlb
mov
jns
pop
scas
xor
add
repnz
xchg
inc
nop
lock
xlat
jne
iret
dec
pop
movsl
adc
sti
xchg
mov
ret
sub
jnp
sub
cmpsl
cwtl
in
push
lahf
jl
mov
dec
stc
and
loop
dec
push
imul
cmp
jae
xor
loope
cmp
lods
cs
xchg
cmp
pop
enter
jno
push
mov
sbb
dec
jne
lcall
xchg
test
pop
out
xor
pop
ja
dec
in
push
stc
cmovbe
lret
fstl
mov
push
add
add
loopne
test
sub
or
mov
mov
adc
jae
and
sub
add
jne
or
into
mov
inc
inc
inc
roll
xchg
popf
dec
loop
push
push
add
movsb
add
sub
mov
push
in
shll
or
push
jl
mov
sub
stc
out
mov
lods
and
xchg
mov
leave
inc
div
out
aaa
rcrl
insb
mov
push
fwait
test
iret
std
lea
cmp
cli
andb
push
push
jp
xchg
mov
sbb
lods
cmp
lods
push
aaa
dec
shlb
fidivs
jb
mov
test
scas
jecxz
pop
push
jmp
popa
stos
test
sbb
daa
loopne
into
fmuls
cld
je
icebp
clc
icebp
aas
jne
jne
ljmp
sbb
mov
test
add
lea
sbb
rorb
insb
movsb
xchg
outsb
int
jns
xor
inc
xchg
mov
sti
jno
shlb
jno
fnsave
dec
adc
sahf
pop
or
push
mov
in
jno
mov
cmp
loop
or
daa
mov
fstl
loopne
mov
mov
or
int
faddl
rorl
push
enter
push
divb
popf
aas
or
call
pop
cmp
push
pop
test
push
fcomp
popa
fsub
cmp
addr16
ret
mov
daa
pop
inc
hlt
xor
pushf
mov
ja
jo
movsl
shl
stos
sbb
jne
xorl
jb
and
inc
fstpt
adc
iret
pop
leave
mov
scas
jmp
orb
pop
insl
cmpsl
out
sbb
add
sbb
int3
sti
sbb
les
inc
jo
enter
cld
rol
mov
icebp
out
aam
loopne
cmp
imul
addr16
loope
mov
jo
inc
ss
mov
xor
int
xor
arpl
cmp
imul
dec
hlt
mov
lahf
imul
adc
push
or
mov
repz
adc
notl
xlat
sbb
adc
incl
lcall
push
stos
or
mov
scas
adc
in
add
movsl
sbb
imul
in
std
mov
lret
pop
jge
rcrb
inc
es
lahf
adc
arpl
test
daa
pusha
mov
sti
int
pop
jb
pop
es
xor
icebp
nop
fidivrl
pop
dec
pop
cltd
lcall
jno
dec
movsb
mov
cmp
popa
call
pop
out
mov
rcrb
inc
sub
out
jmp
push
mov
pop
pop
or
leave
sbb
sub
cpuid
shrl
pusha
cli
es
stos
es
add
out
enter
dec
sti
loop
das
inc
inc
movsl
dec
sub
in
int
and
sub
xchg
je
fcomps
pushf
sub
jne
push
pusha
mov
mov
sub
aaa
popa
leave
shl
decl
shrb
cmc
sbb
mov
subl
pop
jmp
mov
sbb
push
add
stos
mov
arpl
aaa
mov
popf
mov
repz
adc
xor
add
push
mov
subb
lods
push
icebp
pop
nop
orb
addr16
or
shlb
in
cmc
cltd
or
fnstsw
pop
cmp
rol
cs
push
jmp
loope
cmp
rol
mov
or
loopne
das
lock
pop
xor
fwait
dec
and
sbb
daa
sub
mov
in
add
sbb
hlt
and
cmp
repnz
jnp
daa
mull
ja
das
inc
add
or
mov
es
pushl
or
jno
dec
mov
sub
ss
push
pop
jae
xor
adc
dec
popa
sbb
jecxz
adc
imul
jl
lods
jle
sbb
jae
stos
sub
mov
xor
cmp
inc
mov
loop
xchg
fistl
mov
xor
inc
add
xor
jl
movsl
inc
mov
adc
sbbb
ret
subl
dec
ljmp
dec
in
rolb
ficoms
outsb
cmpsl
outsl
add
das
cld
popf
in
leave
dec
rorl
cs
adc
mov
pop
push
xchg
inc
sub
pushf
js
sbbl
dec
mov
rolb
neg
mov
and
mov
pop
and
jo
dec
mov
data16
push
push
test
pop
mov
mov
push
or
sti
pop
push
mov
add
stos
das
stos
mov
inc
add
enter
jle
sbb
mov
mov
insb
out
aas
push
mov
mov
dec
add
ljmp
pop
jno
ret
ffreep
cmp
ljmp
scas
or
iret
mov
xor
test
lea
cwtl
ret
xchg
push
bound
movsb
mov
sbb
push
inc
daa
push
xor
out
in
test
jmp
mov
add
mulb
cltd
outsb
aad
imul
stc
sub
adc
cmpsl
pop
xor
add
sub
cmpsl
xchg
testb
and
push
call
fcompl
sub
sub
xchg
inc
or
sbb
cli
mov
add
daa
sub
mov
mov
sub
mov
daa
fs
test
fidivrs
and
aam
fwait
lds
and
lods
fidivrl
movsb
lret
sub
or
and
mul
jp
in
jle
xor
xchg
out
pop
iret
mov
dec
push
data16
icebp
mov
mov
inc
mov
add
lea
mov
sub
and
icebp
sub
aam
xor
mov
jo
sbb
outsb
mov
cld
sti
jle
jnp
pop
push
xchg
push
aad
and
xchg
outsb
mov
push
sub
sub
push
outsb
sti
test
aaa
jo
xor
imul
inc
syscall
mov
mov
out
repnz
sub
lods
cmp
dec
xor
cli
jb
inc
test
or
cmp
fwait
dec
clc
mov
and
mov
push
stc
sarb
sahf
movntps
inc
xor
ljmp
fadds
ds
inc
add
addl
push
xor
mov
stc
or
add
xchg
jb
cmp
enter
jnp
sti
cltd
lea
fnstsw
ret
pop
test
in
ja
sti
or
gs
lcall
push
jbe
mov
dec
es
mov
pop
and
popfw
adc
push
fsts
fs
nop
je
sub
sbb
inc
fsubrl
xor
sub
icebp
xor
cmpsb
or
loop
pop
and
stc
lahf
dec
stos
loop
push
xlat
adcl
mov
test
loopne
in
mov
dec
dec
out
outsb
pop
out
test
fistl
pop
stc
addr16
mov
enter
fidivs
jmp
lahf
or
filds
cwtl
dec
jb
inc
fisubl
mov
add
outsl
push
bswap
mov
mov
xchg
mov
sbb
imul
dec
and
test
or
dec
call
ror
data16
scas
imul
sbb
mov
jp
mov
pop
adc
add
add
movsb
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
mov
jmp
das
push
sub
and
mov
subl
sbb
sub
mov
xlat
push
or
cmp
rol
and
das
or
sbb
ret
test
iret
popf
daa
push
xchg
cmp
stc
mov
xchg
dec
and
sub
mov
aaa
out
loopne
lret
pop
dec
add
push
std
jne
inc
pop
nop
fldt
dec
movsl
xor
mov
arpl
lcall
cmpsl
int3
xor
xchg
sbb
sbb
fwait
mov
add
push
mov
adc
push
xor
in
pop
das
in
adcl
xchg
dec
mov
mov
ret
dec
ds
scas
mov
fbstp
addr16
and
sbb
repz
push
bnd
inc
dec
mov
or
push
pop
push
mov
daa
mov
cmp
rcrl
sub
test
sbb
fs
enter
and
xchg
aaa
imul
icebp
mov
jmp
adc
inc
fcoms
pop
les
inc
mov
or
and
mov
jg
in
pushl
jbe
mov
mov
adc
testb
je
fimuls
pop
adc
add
mov
or
outsb
arpl
adc
mov
lods
xor
push
lcall
mov
icebp
pushf
or
push
jmp
fisubrs
andb
loopne
test
pop
and
pop
cmc
popa
mov
xchg
jg
test
clc
push
inc
push
enter
push
add
lods
es
icebp
mov
sbb
aaa
cmp
aaa
pushf
push
sub
aas
je
jge
add
adc
and
inc
mov
sub
in
mov
fs
dec
out
xrelease
sub
vpmaxsw
add
lock
xor
jg
pop
and
in
roll
pop
xor
and
jb
das
fiadds
mov
les
das
pusha
or
out
inc
or
jecxz
aaa
or
dec
test
jecxz
mov
push
jne
lea
push
aaa
fimull
mov
mov
mov
add
mov
out
pop
fcomps
icebp
hlt
add
out
roll
xchg
dec
gs
mov
stos
inc
dec
aam
sub
lods
call
movsl
out
pop
xchg
ljmp
clc
xor
aas
test
rclb
jns
inc
lcall
xor
fstpt
add
sub
sub
jne
pop
dec
adc
xchg
imul
cli
test
or
lock
and
dec
mov
loopne
add
pop
je
mov
jp
mov
out
rol
movsb
lock
jecxz
std
dec
in
fistpl
mov
mov
test
pop
sub
out
push
push
fidivs
pop
cld
nopl
rcr
cmpsl
sti
sbbl
mov
or
int
xor
aas
sbb
addr16
repz
loop
sub
sub
rcrl
push
in
cltd
jge
jg
xchg
stos
dec
popf
jns
rclb
cmp
mov
inc
pop
push
mov
cmp
cmp
jmp
loopne
cmpl
push
fisttps
arpl
aam
das
fidivs
xchg
xchg
xor
jne
jae
clc
fwait
xor
cmp
mov
jne
jge
es
aaa
leave
adc
inc
mov
add
shrl
divb
test
lea
xchg
cmp
mov
rolb
test
pop
lea
xor
idivl
cld
aaa
xchg
cmp
lea
jae
icebp
pop
and
jp
dec
cmp
sbb
mov
ficompl
fldt
test
xchg
loope
mov
mov
sbb
push
faddl
repnz
add
mov
push
cmp
mov
mov
cmp
add
pop
iret
jnp
fcoms
int3
push
and
jmp
call
add
pop
iret
jmp
xor
inc
xchg
enter
out
mov
pusha
dec
std
movsl
js
out
jo
xlat
imul
dec
movsl
jbe
repz
enter
cs
lods
sahf
and
outsl
mov
and
arpl
movsl
push
dec
fsincos
adc
rorb
fdivs
fildll
sahf
call
int3
mov
jp
movsl
pop
xchg
subl
fwait
mov
lock
cld
xchg
sub
ret
inc
jns
cmp
fsubp
rclb
sti
mov
adc
dec
lcall
mov
test
ds
lret
xor
sbb
push
inc
mov
into
insb
repz
loope
fsubs
cmp
out
push
fistl
push
jno
std
adc
mov
sub
push
mov
mov
pop
push
out
js
sbb
leavew
adc
add
adc
cmc
insl
xor
stos
mov
repnz
lahf
test
xor
and
and
gs
cltd
sbb
stos
aam
jb
pop
leave
imull
or
inc
scas
push
jns
pop
aam
outsb
xlat
jbe
int3
inc
push
xchg
jp
out
mov
adc
pop
pop
in
dec
cmp
clc
xchg
pop
jnp
add
cmpsb
cmpsl
adc
xor
mov
inc
lods
pop
arpl
fstps
mov
dec
dec
and
pop
or
das
dec
push
adc
and
push
and
lods
js
repnz
xchg
fdivrs
push
je
sub
insl
jno
in
dec
out
add
dec
mov
movsb
mov
adc
or
fldenv
shrb
fdivl
test
sub
lcall
xor
lods
fsubl
shll
out
add
mov
xchg
repnz
jg
out
in
inc
ds
scas
imul
pushf
add
cs
or
jae
cltd
ficompl
jecxz
lahf
popf
sbb
movsl
mov
fwait
ss
inc
clc
dec
add
push
clc
aam
jge
xchg
test
outsb
ret
dec
pop
in
jne
jmp
mov
sub
add
cmp
cli
dec
add
jle
out
pop
lds
pushf
mov
pusha
loope
bound
cltd
add
stc
test
push
xchg
je
add
bound
xchg
mov
cmpsl
fsubp
out
xchg
sub
mov
test
ja
xchg
imul
cltd
in
shlb
push
pop
dec
sub
pushf
sbbb
rclb
sub
xchg
ds
cmp
jae,pn
push
xchg
scas
aam
fcomi
aas
in
or
lahf
jbe
cwtl
dec
cmp
in
fildll
push
jae
adc
sbb
dec
arpl
sub
adc
ss
or
jp
stos
push
xor
jae
cmp
sbb
pop
inc
loope
sarb
adc
jecxz
lock
es
divb
pop
clc
popf
pop
and
inc
cld
mov
lret
mov
fisubs
nop
mov
push
fsubrs
xchg
sub
cmp
sub
push
or
inc
sahf
inc
out
ret
jmp
dec
sahf
loop
test
inc
lods
cmc
cmp
mov
jg
pause
push
in
fistps
inc
pop
or
aad
sti
cmp
add
or
inc
fstpt
insl
and
test
popf
inc
xrelease
out
push
mov
sahf
dec
loope
scas
jbe
xor
xchg
adc
mov
sbb
out
xor
jecxz
stc
ljmp
ficoms
test
xchg
popf
jbe
sbb
add
int3
add
and
dec
hlt
dec
mov
cld
cmc
jecxz
pop
and
push
xchg
xor
push
cmp
fs
push
and
sub
xchg
cmpsb
add
idiv
popf
icebp
mov
add
ret
es
sub
mov
xchg
dec
stc
xor
and
adc
jp
pop
iret
mov
lcall
mov
leave
test
mov
xchg
jl
xchg
and
shlb
lds
into
movsb
stos
js
test
push
xor
xchg
mov
pop
jl
xor
sbb
out
fstpl
lahf
leave
push
and
lret
cmp
fldcw
aam
leave
jl
into
jg
and
fisubl
push
clc
push
sti
add
sub
xor
insl
loopne
mov
mov
movl
push
push
mov
inc
mov
pop
and
inc
pop
xor
dec
push
add
sbb
jle
mov
pop
es
nop
cwtl
and
loop
push
mov
enter
xor
outsl
es
test
cmpl
xchg
or
cmp
push
jecxz
fwait
adc
push
xor
popf
dec
mov
pop
pop
pop
jo
scas
out
xchg
and
insb
mov
jg
lods
dec
aad
jl
push
je
and
sbb
push
pop
push
gs
test
ljmp
xor
jmp
lret
or
adc
pop
jbe
outsl
mov
dec
lcall
dec
vpmacsdqh
mov
mov
pop
sti
sub
inc
pop
or
mov
and
ljmp
push
loopne
inc
scas
cltd
mov
nop
out
iret
ljmp
pop
add
lds
cmpsb
ret
mov
ds
ud2
push
mov
or
cs
add
jmp
pop
add
mov
and
scas
push
push
cwtl
popa
cmp
sarb
rol
roll
movsb
add
inc
ljmp
inc
stos
inc
mov
or
pop
mov
outsb
add
cltd
fs
outsb
jo
aam
jmp
btr
outsl
dec
ret
or
lock
in
cld
jmp
out
or
mov
fistpl
and
movsb
lahf
jnp
xchg
ljmp
sarb
mov
ret
in
repnz
jns
out
loop
andl
lret
mov
mov
jbe
and
notl
leave
lods
out
xlat
js
fs
mov
jl
inc
or
jbe
dec
or
iret
lret
mov
fistl
push
call
sbb
popf
xchg
jle
loopne
in
mov
out
out
mov
add
stc
aam
jae
fisubs
sub
mov
aas
add
in
js
add
out
jp
test
xchg
xor
mov
push
test
push
and
jl
mov
scas
bound
fstpt
pop
xchg
inc
movsb
in
adc
jmp
cmpsl
sti
movsb
fwait
insl
mov
fnsave
rcrl
xor
aas
push
xchg
leave
arpl
mov
lds
sub
cwtl
push
in
outsl
xor
cmpb
xchg
out
jne
jmp
jecxz
clc
lcall
je
pop
mov
jp
jne
fndisi(8087
cs
or
xchg
xor
mov
jmp
inc
xor
dec
add
lcall
adcl
scas
jmp
loope
cmp
out
iret
add
jne
std
push
xchg
out
imul
sbb
sbb
nop
mov
xor
sbb
js
push
mov
push
pop
out
cmp
lods
lret
fisttpl
push
adc
mov
std
cld
adc
je
movsw
in
stos
mov
ret
je
xor
or
dec
cmp
aaa
out
inc
repz
sub
stc
fsts
add
mov
add
push
add
call
popaw
push
xor
pop
or
add
cmp
sub
or
je
and
xor
jecxz
loopne
pop
icebp
and
xorl
inc
stos
shl
mov
adc
movsb
loopne
nop
and
inc
cwtl
into
jne
cmp
lds
push
or
sbb
push
cs
xchg
add
pop
add
sub
mov
ljmp
or
adc
pop
sub
in
jg
in
pop
mov
mov
pop
jnp
std
mov
xor
cmp
in
rorl
add
orb
mov
enter
aas
dec
sbb
int3
pop
icebp
or
es
popa
mov
call
mov
fmul
popf
loope
mov
lahf
add
jp
insb
inc
jge
dec
dec
xor
ror
jb
jmp
sbb
lods
scas
leave
enter
adc
sub
mov
xor
and
lret
icebp
lock
popa
int3
dec
pop
mov
pop
sbb
mov
xchg
sub
mov
cld
dec
es
cmp
xlat
cli
cs
cmp
xchg
dec
push
call
or
scas
out
lret
dec
nop
sbb
mov
add
mov
jmp
inc
js
outsb
add
sub
loopne
lea
std
inc
out
mov
rcl
adc
dec
bnd
pop
aas
mov
lcall
lods
add
aam
dec
loope
sub
xchg
xchg
mov
mov
jge
or
xor
or
fnstenv
pop
lret
mov
inc
stc
xchg
cmpsb
push
out
inc
inc
fstps
inc
and
push
pop
jo
scas
adc
mov
adc
mov
in
cmp
rol
in
pop
push
sub
mov
pop
pop
cmp
imul
push
xchg
mov
mov
loop
xchg
ja
and
cmpsl
jno
in
pop
out
imul
dec
push
or
outsl
les
sub
sub
push
xchg
lret
icebp
adc
sbb
push
cmpsb
mov
push
mov
shrb
cmpsb
mov
test
adc
mov
push
jle
or
dec
jns
ss
mov
xchg
test
jmp
stos
jns
sub
jmp
pop
pop
aad
mov
mov
in
or
fisubs
outsb
cmp
pop
xchg
jmp
js
scas
push
adc
or
lods
xchg
inc
das
ss
in
loope
mov
popa
mov
cmp
pop
aaa
movsb
sbb
fwait
ss
add
lea
out
cmpl
inc
mov
fimull
dec
sub
fwait
mov
mov
repz
pop
mov
test
repz
test
mov
pop
ljmp
mov
cmpsl
cmp
adc
je
mov
adcl
call
and
je
lods
addl
es
cmpb
cmp
das
mov
pop
jae
int
jmp
cltd
and
push
mov
cmp
mov
popf
lods
insb
push
cld
jnp
pop
data16
in
fidivs
lods
repz
jne
mov
or
pop
cmp
xor
xchg
pop
aas
push
add
fistpl
xchg
mov
mov
mov
sarl
fwait
jmp
pop
fcoms
add
fbstp
cmovne
in
imul
sbb
sbb
cmp
adc
test
xchg
pop
add
mov
mov
into
mov
ss
lods
jle
sbb
sub
loop
ds
in
pop
fmuls
mov
popf
pushf
xlat
imul
fiadds
pop
adcl
mov
imull
popa
inc
jbe
shlb
add
mov
mov
stc
icebp
inc
div
sarb
cmp
xchg
and
fucomi
lods
sub
sub
jnp
mov
push
mov
add
jns
cs
push
in
popa
sub
add
mov
push
inc
cs
push
ds
aam
add
int
stos
add
cmp
add
clc
and
mov
xchg
movsl
shr
mov
lret
repz
cmp
in
push
idivb
imul
jmp
mov
xor
and
add
sbb
into
sbb
data16
xlat
repnz
aad
jg
cs
call
add
sub
add
lret
adc
pop
push
inc
inc
inc
xchg
sbb
repz
cmpl
lahf
sub
in
enter
sbb
js
sarb
jecxz
mov
adc
pop
ret
mov
std
bound
mov
mov
adc
jle
imul
push
push
out
dec
mov
or
clc
cs
adc
mov
push
inc
call
lahf
nop
push
int3
aas
push
enter
int
or
mov
in
mov
pop
and
hlt
jl
mov
fdivrl
aam
inc
mov
pop
daa
nop
cmp
addr16
and
int
dec
in
aam
dec
jle
mov
mov
add
das
imul
aad
jo
sbb
or
stos
pop
jmp
pop
hlt
jg
mov
sub
subl
mov
pop
insl
xchg
hlt
mov
add
rcrl
insb
call
mov
jecxz
mov
push
pusha
push
je
repz
popf
xchg
pop
ljmp
mov
mov
xlat
or
adcl
inc
fstpt
pusha
es
inc
popa
std
ds
enter
dec
xor
cld
pusha
mov
push
ret
orb
insl
pop
push
mov
or
movsb
mov
stos
loop
dec
push
fs
stos
test
cld
ja
das
scas
adc
dec
hlt
mov
in
call
or
push
xchg
fisttps
mov
mov
pop
test
test
scas
pop
and
cld
cli
jp
lds
imul
mov
and
and
sbb
test
test
repz
lahf
inc
sub
xchg
imul
sbb
js
and
pop
mov
jns
mov
testb
movsl
sub
in
push
ja
adc
mov
cmpsl
daa
arpl
gs
scas
xchg
sbb
cli
ds
lea
dec
inc
push
adc
lcall
out
cmpsl
addr16
push
sbb
mov
loop
call
mov
xchg
es
mov
push
rorl
loop
fstpt
jo
cs
sbbb
fiaddl
inc
xchg
cwtl
sti
mov
xchg
inc
jae
jl
sbb
mov
sub
jg
stos
push
sbb
loop
dec
xor
fimuls
leave
daa
jge
shll
jbe
scas
popa
fwait
push
cmc
jnp
aaa
or
sbb
hlt
outsb
insb
es
jmp
sar
out
jle
jnp
dec
insl
or
out
mov
pop
jae
nop
and
mov
loop
cmp
dec
inc
add
test
jb
shlb
inc
mov
sub
lahf
mov
mov
fildl
mov
jno
xor
sbbl
cmc
ret
aas
fisttps
jge
clc
cwtl
cmpsl
lea
std
pop
sub
dec
pop
ja
faddp
fcmovnb
mov
sarl
dec
push
and
repz
cmp
inc
mov
pop
sub
sbb
cmp
mov
pusha
mov
in
mov
repnz
daa
sbb
iretw
insl
into
addr16
push
testb
clc
mov
mov
xchg
imul
int
ud1
aam
jecxz
mov
and
mov
jns
sub
or
mov
lret
gs
in
mov
jno
imul
inc
test
sub
stos
scas
mov
jne
ret
or
test
scas
push
arpl
jbe
cltd
fdivrs
stos
mov
loope
cmp
pop
adc
mov
outsb
pop
pop
jmp
iret
and
mov
pop
dec
ds
xor
push
mov
aaa
mov
subb
in
sub
cltd
js
loopne
jnp
imul
insb
outsl
dec
rcll
fnstsw
mov
mov
lea
sbb
pop
lods
mov
ret
pop
xlat
mov
mov
add
out
push
clc
mov
pop
decl
mov
out
mov
jge
and
sub
popa
mov
add
out
stos
loope
stc
leave
fsubl
lea
lea
pop
xchg
cmp
or
push
stc
cmpb
and
sub
dec
outsl
mov
inc
xor
mov
or
add
xchg
iret
pop
push
fwait
push
add
sarb
int3
dec
xchg
pop
cmp
jae
jae
popf
inc
loope
pushf
pop
jle
xchg
int
js
adcb
cmp
fimuls
cmp
les
adc
call
cmp
push
xorl
jne
xlat
stc
mov
roll
adc
lods
je
pop
jmp
cmp
arpl
sub
repnz
mov
jae
dec
in
sti
adc
xchg
nop
mov
loope
aam
cwtl
hlt
cmp
and
pushf
push
or
faddp
lea
je
add
mov
mov
push
jmp
jae
mov
cltd
xor
mov
cmc
pop
or
xchg
jo
pop
xchg
fwait
mov
cmp
rorl
xchg
je
pop
leave
mov
push
iret
adcl
or
incb
mov
xchg
fmull
dec
shrb
shrb
js
fcompl
jo
shlb
pop
cmpsb
mov
inc
or
xchg
mov
rcll
pop
add
jne
or
je
test
dec
push
mov
test
xchg
in
sbb
divb
negb
aad
out
inc
push
aas
test
mov
dec
dec
xor
and
jae
sbb
mov
test
add
sbb
cld
fildl
icebp
or
cmp
ljmp
xor
or
je
mov
je
hlt
cltd
imul
cmpsl
fisttpll
daa
dec
mov
adc
stc
jbe
mov
xchg
inc
sub
sbb
add
nop
je
jno
fcomi
fstp
mov
jo
pop
and
imul
push
xchg
hlt
xor
jb
cmp
push
cmp
push
sbb
mov
lock
test
adc
ss
push
mov
xor
mov
or
or
andl
cmp
mov
sub
mov
and
xchg
addr16
add
adcl
add
jb
nop
mov
cmp
pop
jbe
mov
rorl
cmp
std
sub
xor
inc
mov
xchg
xor
push
jb
sti
pcmpeqw
test
push
sbbb
push
fsubrp
push
mov
sub
js
jle
dec
fcmovnb
test
outsb
cs
mov
add
pop
call
push
scas
stc
and
mov
fwait
enter
iret
sub
popa
cmp
popa
mov
push
jmp
jmp
adc
scas
jecxz
mov
out
xor
pop
push
ror
imul
filds
stc
not
popa
fdivl
ret
mov
push
mov
jne
add
inc
cmp
xor
addr16
xlat
cmp
xchg
mov
push
leave
test
aam
arpl
xchg
loope
stos
sub
iret
inc
aam
inc
push
lret
mov
mov
push
rclb
mov
jge
adc
xchg
or
pop
jne
xchg
sbb
ljmp
mov
pop
mov
into
pop
mov
xor
add
jne
xchg
fidivl
fcmovu
inc
push
xor
push
testl
notb
lea
cmp
cltd
pop
push
out
ret
push
inc
ret
jo
fsubl
cmc
xchg
test
sub
daa
push
notb
test
les
jl
testl
pop
mov
adc
nop
lods
rcll
lcall
or
imul
popa
enter
lock
sbb
pop
pop
or
popf
xchg
stos
bound
dec
pop
les
ficoml
lea
stc
and
dec
jns
xchg
cltd
mov
shll
ja
xchg
xchg
lea
jne
xchg
movsb
mov
cmp
mov
xchg
inc
add
mov
shrl
ficomps
es
jle
sbb
pop
and
sbbl
and
cmp
jo
pop
cwtl
sub
sbb
cmp
dec
sub
mov
dec
test
outsb
add
sti
mov
outsb
mov
mov
int
dec
sub
dec
jmp
scas
cmp
mov
mov
xor
stc
adc
ret
cmp
inc
jno
cmp
mov
mov
imul
push
and
sub
or
jp
fcom
adc
xchg
pusha
repnz
cld
outsb
lds
fcomps
sahf
and
lods
repnz
fbstp
lods
pushf
inc
sbb
int
hlt
aam
dec
jle
ret
xchg
adc
jg
iret
scas
addl
rolb
push
nop
push
lods
mov
dec
insl
mov
arpl
inc
xchg
xchg
int3
mov
imul
push
dec
mov
ljmp
lcall
inc
enter
popa
adc
cmp
cmpsb
ret
jecxz
adc
push
jb
out
in
add
dec
lock
test
mov
jb
cwtl
mov
imulb
push
inc
es
sub
mov
jo
aad
movaps
movsb
mov
subb
rorb
inc
adc
test
xchg
pop
clc
mov
scas
inc
dec
add
shll
adc
jg
inc
adc
cli
push
sub
xchg
test
dec
into
sub
add
sahf
and
mov
aaa
inc
subl
push
fldenv
fldl
xchg
xor
inc
jmp
push
pop
in
xchg
fwait
xlat
xchg
ret
loopne
xchg
xor
push
inc
or
mov
or
xchg
cld
jo
xchg
sbb
leave
or
jg
stc
and
pop
adc
jecxz
icebp
mov
fiadds
js
mov
pop
rolb
pop
mov
cmp
or
jmp
xchg
or
fisttps
fldt
outsl
leave
in
rcrb
and
lods
loope
outsb
lcall
and
dec
mov
jo
jb
sti
inc
mov
xchg
and
aad
push
adc
pop
or
xchg
jno
sbb
in
jp
adc
lock
pop
inc
outsl
xchg
dec
jb
xchg
xor
adc
pop
mov
dec
mov
fistl
xor
ret
jno
loop
xchg
lods
cld
int3
lods
dec
ss
mov
jne
test
rorl
and
movsl
and
xor
popf
push
lret
cmp
push
or
jmp
fisttpl
ret
mov
ja
jmp
cli
daa
mov
adc
push
add
push
ret
adc
jne
lret
mov
mov
jo
or
nop
jnp
and
mov
arpl
lods
popf
add
shrl
fadds
push
nop
and
test
mov
cmovns
out
mov
dec
fldcw
ret
ds
push
push
adc
lods
add
hlt
imul
adc
test
js
je
call
push
mov
xchg
cmp
icebp
push
test
mov
mov
xor
mov
dec
jne
mov
and
push
lods
aam
dec
push
xchg
and
clc
jmp
jo
sbb
and
scas
fsubs
mov
jb
cmp
stos
pop
lret
js
fisttps
sbb
call
xchg
shl
out
mov
pop
outsb
adc
cmc
popf
rcrl
pop
bound
scas
paddq
cmp
mov
mov
mov
jno
enter
cwtl
xchg
repz
bsr
push
stc
push
test
js
lods
hlt
in
jmp
pop
gs
sbb
jno
enter
mov
in
dec
testb
xor
pop
push
add
push
jecxz
loope
stos
loope
mov
dec
and
pop
or
sub
jmp
int3
daa
test
dec
cwtl
leave
lret
or
sbb
ss
lcall
mov
jg
dec
xchg
loope
mov
pop
mov
ds
adc
iret
mov
push
movups
je
push
pop
cltd
insl
jnp
insb
xchg
pop
push
lret
iret
pop
push
cwtl
inc
and
dec
mov
and
push
push
jno
mov
or
pop
imul
dec
repnz
mov
push
xlat
pop
lods
add
cmpsl
dec
notb
cmp
and
xchg
aas
dec
add
adcl
out
cwtl
add
cwtl
mov
ljmp
push
lods
sbbb
sub
push
jne
pushl
jge
pop
mov
push
cmpsb
sub
int3
ret
mov
dec
xlat
pop
push
roll
mov
or
out
enter
jge
dec
inc
push
in
pop
sub
mov
out
sbb
mov
inc
out
bound
xchg
movd
cmp
jge
pushf
jne
enter
aaa
lahf
sub
int3
addr16
imulb
or
jg
test
clc
ds
and
aaa
pushf
or
nop
lahf
jnp
in
xchg
push
cs
clc
cwtl
xchg
xchg
add
sbb
pop
jne
or
lock
cmp
pushf
mov
jno
ret
call
mov
loop
fisttps
cmpsb
insb
adc
dec
enter
and
xchg
stc
movsl
imul
je
jo
sub
nop
mov
pusha
cmpsb
mov
sarl
jecxz
pop
jno
mov
cmp
push
or
dec
outsb
xchg
push
fisubl
and
sub
es
xchg
clc
jp
gs
push
lret
hlt
adc
jmp
adcl
xor
fcmovnu
dec
cmp
aas
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
xor
add
add
add
add
js
add
repnz
add
add
add
mov
add
push
xchg
add
cmp
add
rclb
add
add
add
add
dec
adc
add
nop
add
out
add
push
adc
add
nop
add
cmp
add
or
add
and
add
xor
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
jo
add
adcb
add
xchg
add
rclb
add
add
add
xchg
add
or
add
sub
add
add
add
fs
add
jp
add
xchg
add
sahf
xchg
add
mov
xchg
add
aam
add
add
add
hlt
xchg
add
xchg
add
push
xchg
add
sbb
add
add
add
cmp
inc
gs
outsb
jne
je
je
add
mov
inc
jb
ja
gs
push
add
inc
gs
jb
insl
gs
jb
arpl
pop
push
inc
push
gs
add
push
gs
outsl
arpl
add
movl
outsl
insl
gs
aaa
push
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
gs
insb
addr16
je
insl
dec
outsb
je
inc
pop
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
push
inc
push
jo
jb
jne
push
add
js
push
gs
insb
addr16
je
insl
push
gs
inc
add
or
jae
push
push
dec
gs
popa
addr16
add
incb
dec
gs
popa
addr16
outsl
js
add
add
je
popa
jb
je
insb
imul
add
inc
push
xor
cs
insb
add
pop
add
jb
outsl
dec
outsb
je
add
add
je
inc
imul
dec
popa
insl
gs
add
dec
push
inc
push
dec
cs
insb
add
add
popa
addr16
imul
dec
arpl
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
jb
insl
jo
add
add
insb
inc
imul
js
je
push
add
lea
inc
gs
outsl
insl
jo
gs
gs
imul
add
rolb
gs
fs
imul
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
push
imul
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
dec
imul
jo
push
gs
imul
jae
mov
inc
dec
inc
imul
je
gs
inc
outsl
insb
outsl
jb
add
add
gs
gs
dec
bound
arpl
inc
inc
dec
xor
cs
insb
add
cmp
inc
pop
pop
xor
and
push
cmp
bound
cmp
xor
dec
xor
and
add
pop
xor
and
insb
jne
dec
insl
push
xor
pop
jbe
sub
pop
xor
jo
inc
dec
imul
xor
inc
add
dec
insl
push
jno
fs
fs
aas
inc
popa
xor
jo
xor
inc
xor
aaa
cmp
insb
push
xor
xor
xor
jno
and
movsl
into
in
dec
add
add
add
add
add
add
add
add
add
add
fcoml
add
cld
xchg
add
mov
jbe
add
je
add
xchg
add
sub
xchg
add
addr16
add
add
add
add
add
push
jbe
jb
cmp
xor
gs
add
jbe
outsl
imul
push
pop
pop
pop
pop
dec
push
outsl
inc
inc
pop
inc
push
inc
inc
dec
inc
pop
add
dec
push
dec
dec
push
inc
inc
jb
jno
js
dec
dec
inc
dec
dec
inc
inc
pop
inc
push
inc
pop
push
inc
inc
inc
pop
add
push
inc
pop
pop
dec
pop
js
pop
bound
bound
pop
inc
inc
pop
inc
inc
dec
inc
pop
add
inc
inc
inc
outsb
js
dec
inc
dec
inc
inc
pop
inc
push
inc
pop
inc
push
inc
dec
inc
pop
add
add
gs
insl
aaa
aaa
outsw
and
outsb
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
and
add
addb
add
add
add
add
add
add
add
dec
add
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
mov
add
in
add
add
add
in
mov
add
in
add
add
add
mov
add
in
add
add
add
inc
movsb
add
mov
add
in
add
add
add
inc
dec
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
fcomps
sbb
and
sbb
and
add
add
aad
rcrl
movsl
and
sbb
and
add
add
xchg
and
xor
and
push
push
fstpl
std
mov
sbb
and
sbb
and
mov
loopne
movsl
and
sahf
mov
movsl
and
add
sbb
and
inc
sbb
and
sbb
and
sub
sbb
and
add
add
adc
inc
add
add
insb
add
jo
add
add
arpl
data16
imul
add
outsb
add
insl
add
add
add
push
add
jb
arpl
jbe
outsl
add
add
imul
add
inc
add
arpl
jo
add
data16
push
outsl
add
insl
add
add
jp
imul
jns
adc
inc
add
js
outsb
add
add
add
add
insl
add
imul
jp
jo
bound
insb
add
add
js
popa
add
jno
ja
data16
jno
push
jno
insb
add
add
arpl
push
add
add
jns
add
bound
jno
jp
jne
jb
imul
add
data16
push
jne
jae
imul
outsl
add
jb
imul
add
popa
add
jns
jns
arpl
je
data16
jns
push
add
push
add
add
data16
jbe
add
insb
add
je
bound
imul
push
add
add
ja
add
add
add
push
imul
add
outsb
add
jno
insl
add
imul
add
imul
jae
push
jbe
insb
add
insl
add
jae
jb
insb
add
add
jp
adc
inc
add
jbe
je
data16
add
insb
add
jae
add
outsb
add
add
adc
dec
add
add
insl
add
data16
data16
add
add
push
data16
jno
insl
add
add
add
jbe
insl
add
ja
add
add
js
insb
add
imul
add
jae
outsl
add
insb
add
adc
push
add
je
push
insl
add
bound
jne
jno
jns
jne
data16
add
add
jb
je
jbe
add
adc
push
add
jp
jns
insl
add
jp
outsb
add
jp
jbe
push
add
add
jbe
jns
data16
add
push
push
add
jns
insl
add
je
push
add
add
ja
adc
add
bound
bound
jne
push
push
add
popa
add
jae
data16
push
jno
jo
ja
jne
jne
adc
inc
add
insb
add
jae
jb
add
bound
data16
jb
jb
insl
add
add
add
outsb
add
add
add
add
add
je
jbe
je
je
jb
arpl
js
jno
js
adc
add
outsl
add
jb
js
je
imul
js
data16
jns
jo
popa
add
jne
imul
push
add
add
insl
add
outsl
add
jb
add
add
jbe
popa
add
add
jb
popa
add
lldt
outsb
add
add
push
imul
jb
insb
add
add
add
add
jb
je
jbe
add
add
popa
add
ja
jo
jns
push
insb
add
jo
lldt
imul
outsb
add
jb
jbe
jbe
jbe
js
je
popa
add
js
add
add
add
push
inc
add
add
add
xor
cmp
inc
cmp
xchg
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lahf
cmp
sbb
add
pop
aas
lods
aas
sarb
aas
out
aas
clc
aas
aas
add
add
add
or
adc
pop
xor
xor
xor
xor
xor
xor
xor
xor
jb
jbe
jl
xorb
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
inc
xor
xchg
xor
ret
xor
shlb
loop
call
xor
push
ss
and
sub
xor
aaa
ss
ss
ss
ss
ss
ss
outsl
ss
mov
pop
aaa
getsec
sub
aaa
jg
test
mov
cwtl
aaa
mov
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
bound
push
cmp
cmp
cmp
cmp
lods
cmp
push
ds
sub
dec
ja,pt
ds
aas
dec
aas
push
aas
push
outsb
aas
movsb
aas
iret
aas
add
add
add
add
and
sub
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
xor
xor
xor
xor
xor
xor
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
shlb
ss
lret
fdivs
pushl
sbb
inc
aaa
push
aaa
fs
ret
aaa
in
lock
adc
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
mov
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
jp
cmpb
cmp
xor
cmp
dec
ds
ds
ds
ds
aas
xor
push
aas
pop
aas
mov
cld
aas
add
add
add
add
add
xor
xor
scas
xor
xor
xor
xor
xor
jno
xchg
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
mov
xor
pop
ss
sub
cmp
push
ss
bound
push
ss
test
pushf
divl
add
sbb
aaa
cs
xor
aaa
dec
aaa
push
aaa
push
aaa
bound
mov
aaa
cli
aaa
push
cmp
cmp
dec
cmp
cmp
jg
test
nop
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
js
jle
add
add
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
aaa
add
add
add
xchg
cmp
sahf
cmp
stos
cmp
mov
mov
cmp
into
cmp
fidivrl
out
ljmp
cmp
add
push
or
push
adc
push
sbb
push
and
es
cs
ss
ds
ds
ds
ds
ds
ds
ds
ds
bound
ds
outsb
jb,pt
jbe
jp
jle
cmpb
mov
mov
