push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
movl
fldl
fstpl
call
fnstcw
movzwl
or
mov
fldcw
fistpl
fldcw
cmpl
je
mov
mov
mov
imull
mov
mov
sar
sub
mov
add
add
mov
sub
mov
mov
lea
decl
jmp
movl
movl
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
les
push
mov
xlat
mov
push
inc
les
push
fstl
mov
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
in
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
je
adc
push
push
xchg
push
jo
adc
adc
call
test
leave
ret
push
mov
sub
movl
fldl
fstpl
call
fnstcw
movzwl
or
mov
fldcw
fistpl
fldcw
cmpl
je
mov
mov
mov
imull
mov
mov
sar
sub
mov
add
add
mov
sub
mov
mov
lea
decl
jmp
mov
leave
ret
nop
push
mov
mov
call
nop
nop
call
xchg
push
jo
adc
push
push
xchg
adc
xchg
adc
adc
push
jo
push
push
push
mov
fstl
mov
pop
shl
push
push
push
fists
mov
adc
pop
aam
push
fists
mov
xor
push
push
rcll
adc
push
jo
aam
push
mov
push
adc
mov
aam
push
mov
push
adc
fstl
mov
aam
push
mov
fstl
jo
xchg
adc
push
aam
push
int3
mov
jo
outsb
and
adc
fists
mov
int3
mov
jo
insb
sub
push
fists
mov
in
daa
push
push
rcll
fstl
jo
xchg
push
jo
in
push
mov
call
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
imulb
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
js
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
pop
sub
pop
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
dec
mov
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
and
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
push
mov
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
icebp
xchg
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
and
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
les
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
es
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
test
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
and
pop
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
cmp
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
cmp
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
adc
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
cmp
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jecxz
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
cmp
pop
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
xor
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
pop
jl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
das
jnp
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
xor
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
add
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
ss
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
aad
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
jbe
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
test
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
fimuls
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jnp
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
cmpsb
or
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
dec
jne
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
or
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
or
add
mov
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
adc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
fnsave
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
cld
add
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
add
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
subl
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
sub
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
push
outsb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
sbb
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
cld
imul
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
in
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
iret
push
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
sbb
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
aam
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jne
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
dec
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
add
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
in
adc
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
out
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
je
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
shll
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
fcoml
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
bound
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
movsb
push
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
addr16
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
or
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
cmp
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
xchg
imul
pop
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
or
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
jl
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
loopne
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
les
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
lods
outsb
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
xor
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
pop
pop
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
pushf
arpl
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sub
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
bound
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
call
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
int3
pusha
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
rclb
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
addr16
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
movsl
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
cmp
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
js
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
test
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
dec
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
insb
jp
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
push
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
hlt
js
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
icebp
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
pop
jg
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
les
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
and
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
dec
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
push
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
adc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
cmp
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
cld
jo
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
adc
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
ja
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jecxz
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
sub
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
sbb
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
pop
inc
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
in
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
das
inc
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
aam
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
aad
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
test
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
add
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jnp
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
in
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
dec
aas
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
je
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
inc
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
les
push
xchg
adc
fs
push
xchg
push
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
faddl
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
hlt
cmp
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
cmpl
je
mov
mov
push
push
fildll
lea
fmul
fnstcw
movzwl
or
mov
fldcw
fistpll
fldcw
mov
mov
mov
mov
mul
mov
shr
mov
mov
imul
sub
mov
mov
lea
decl
jmp
mov
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
add
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
int3
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
or
adc
add
jo
xor
and
jo
int3
adc
pop
push
push
xlat
mov
push
and
adc
jo
adc
stos
stos
fst
sub
jo
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
lret
push
add
jo
pop
test
and
stos
stos
xchg
adc
sti
int3
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
xchg
int3
adc
add
jo
test
cmp
stos
stos
xchg
adc
xchg
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
adc
add
jo
int3
test
stos
fst
xor
stos
stos
xchg
adc
mov
roll
stos
stos
stos
fstl
mov
fst
or
jo
scas
int3
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
addr16
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
and
add
test
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
int
push
fstl
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
int
push
fstl
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
mov
xor
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
mov
loop
fdivp
dec
nop
mov
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
sarl
pop
xchg
pop
jae
fdiv
jmp
fsubl
js
call
mov
or
pop
mov
icebp
adc
ds
inc
mov
push
inc
out
sbb
push
lret
fnsave
and
aam
cwtl
int3
lret
pop
and
jne
jl
std
mov
js
ret
out
pop
js
ret
out
pop
in
add
push
aaa
and
dec
nop
mov
ds
imul
psadbw
testb
ds
testb
ds
xor
mov
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
cltd
inc
jae
mov
xchg
testb
ds
testb
ds
testb
ds
aad
rcll
ss
hlt
dec
test
loopne
int3
lods
enter
testb
ds
cmp
in
mov
cmpsb
idivl
pop
repz
movsb
sub
dec
jp
into
je
push
bnd
js
testb
ds
popa
push
and
outsl
pushf
sub
flds
stc
les
xor
test
cwtl
jbe
sub
testb
ds
cld
iret
and
adc
rcrb
nop
mov
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
cwtl
sbb
insb
popa
or
sub
push
pop
adc
test
or
mov
aaa
jp
jbe
sahf
xor
addr16
mov
fwait
and
sub
dec
cs
lret
orb
cmc
inc
lahf
adc
add
out
xchg
push
scas
push
daa
push
cld
mov
push
push
push
add
ror
cld
js
mov
push
sub
mov
push
add
jl
into
sbb
pop
inc
imul
inc
sub
push
sub
mov
and
xor
jp
mov
lock
lds
mov
fldcw
mov
repnz
out
xlat
std
xlat
jmp
pop
addr16
mov
push
push
and
insl
orb
adc
push
icebp
push
imul
imul
xor
repz
adc
sub
inc
lcall
gs
aam
roll
ljmp
jecxz
pop
lcall
jecxz
and
adc
cmc
rolb
out
rsm
test
lcall
cmp
add
adc
push
iret
adc
jns
aam
out
mov
jo
outsl
add
jb
dec
push
jb
sub
cmp
stos
jg
and
and
xor
cs
repnz
jg
inc
lods
inc
sub
aaa
lock
xor
pop
mov
fmuls
popa
icebp
lds
jne
movsb
in
daa
das
inc
es
lret
out
sbb
cmp
xchg
adcl
mov
test
pop
adc
xor
adc
mov
xor
outsl
and
data16
fwait
xlat
xchg
andb
sbb
fiaddl
scas
pop
xor
pop
aaa
int
cmpsl
or
icebp
fcompl
fs
outsl
mov
imul
dec
ficoms
aas
or
hlt
push
in
push
pop
add
sub
sbb
jb
test
xchg
pop
cs
lcall
adc
fwait
mov
add
mov
pusha
mov
scas
sub
shll
sbb
popl
sub
movsl
mov
jne
mov
and
mov
lea
sbb
jb
and
daa
sub
mov
add
push
das
pop
or
jb
cmp
mov
push
push
pop
adc
lea
mov
lds
lcall
adc
es
mov
xor
ror
mov
js
pushl
xchg
test
add
jbe
adc
ljmp
sarl
xchg
and
mov
js
cmpsb
mov
lret
sbb
jbe
in
or
mov
xor
loopne
cs
lods
sbb
jbe
mov
cmp
or
sub
sub
jmp
fnstcw
outsb
add
or
or
lcall
dec
out
icebp
faddp
lret
and
push
outsb
sub
in
mov
xor
lods
sub
mov
jge
ljmp
aad
ret
or
dec
sub
jmp
pop
cmpsb
inc
aaa
pop
mov
inc
cwtl
sub
call
pop
and
mov
cwtl
pop
stc
loopne
aas
in
arpl
mov
stos
push
cs
jmp
cmp
in
cs
fmull
mov
js
sub
negb
xor
pop
mov
aad
xchg
nop
pop
out
and
or
aad
or
or
in
xlat
cmp
pop
pop
add
dec
ficompl
or
out
aaa
fcomps
add
sahf
jnp
push
movntq
jle
or
and
jge
jmp
mov
sub
fs
nop
jmp
test
or
xlat
ja
rorb
or
pop
dec
mov
push
sbb
xchg
in
lahf
dec
repnz
cld
popa
dec
and
data16
jge
ds
xchg
pop
cmp
push
mov
jbe
pop
xor
ljmp
ds
and
dec
inc
jl
push
stos
xor
mov
cltd
lret
or
cmpb
ficoml
mov
lcall
ret
cs
mov
cmpsb
outsb
mov
call
pushf
call
cmpsl
jne
je
popa
jecxz
pop
or
cltd
fstl
add
cmp
xchg
add
aam
push
cmc
outsl
jmp
pop
sbb
inc
fwait
in
das
adcb
in
call
xchg
xchg
lret
repnz
jo
lret
das
test
sti
add
movsb
xchg
mul
gs
lret
mov
jg
dec
pusha
xchg
mov
jecxz
pop
rcrb
sub
jns
pushf
dec
xchg
cmp
push
ljmp
jge
outsb
xchg
ror
ffree
pop
stos
mov
or
adc
xchg
fwait
xchg
ljmp
pushf
movsl
cmp
std
push
scas
mov
out
xchg
std
stos
xor
out
fcoms
addr16
repz
sub
or
shlb
pushl
adc
fisttpll
inc
testb
lds
enter
cltd
push
jp
mov
int3
jecxz
fucomp
ret
inc
hlt
xor
lret
mov
popf
lret
xchg
dec
das
enter
movsl
cmp
jmp
cmp
jmp
and
data16
xchg
sub
and
lret
ljmp
ret
mov
sbb
popf
mov
mov
inc
adc
mov
pop
cli
das
mov
push
pop
add
je
into
mov
mov
mov
fstl
jno
xor
jl
rcrb
icebp
jb
imul
cld
lahf
ficomps
push
or
mov
dec
stos
gs
outsl
inc
imul
cwtl
sub
fcoml
xchg
icebp
sbb
push
ss
adc
cmp
add
push
stos
xor
push
sti
cmp
fildll
and
mov
cmp
mov
cmpsl
ss
std
shr
mov
push
insl
subl
outsb
int
cmp
mov
daa
add
nop
jmp
rcrb
jl
fidivrs
mov
ret
mov
cmp
pop
das
testb
ds
dec
addr16
out
pop
and
add
mov
testl
add
pushf
in
stos
lock
push
dec
dec
das
jno
xor
outsb
cltd
scas
xor
mov
fninit
in
ss
dec
ret
cmp
mov
das
mov
push
test
xchg
xor
sbb
mov
xchg
shll
std
repnz
mov
fcmove
pop
xchg
pop
cmp
xchg
fisubl
sbb
xchg
rorb
inc
inc
leave
out
inc
jp
gs
rorb
sub
adc
hlt
sbb
aaa
pop
sbb
out
out
xorb
pop
inc
jne
jp
push
sbb
or
int
out
mov
mull
mov
rclb
stos
or
dec
scas
or
jge
cmp
pop
fs
addl
aam
test
xchg
fsqrt
cli
sbb
jbe
push
into
mov
call
enter
dec
sub
pop
sub
out
xchg
fsqrt
cli
sbb
jbe
dec
mov
and
movsb
cwtl
add
arpl
xchg
fsqrt
cli
sbb
jbe
insb
cwtl
adc
xchg
fsqrt
cli
sbb
jbe
inc
mov
cs
inc
sbb
rclb
pop
sub
lcall
sbb
jp
ret
rorl
add
add
inc
cwtl
jp
dec
lret
mov
roll
sahf
test
pop
add
imul
dec
cmp
fists
les
mov
in
push
add
rcrb
bound
xchg
movsb
add
mov
scas
push
test
mov
insb
cld
sbb
int3
in
int
negb
enter
dec
sub
jecxz
insb
test
fsubrs
int
jecxz
popf
add
ror
enter
dec
sub
loop
jo
mov
add
inc
mov
fbld
scas
xor
das
scas
stos
sbb
aad
add
in
dec
shll
mov
repnz
std
mov
mov
popa
out
mov
sbb
rcrb
gs
jmp
aad
push
std
rcrb
icebp
fsubs
xchg
movsb
add
mov
xchg
gs
push
adcl
xor
mov
push
cmp
jb
and
dec
inc
ja
jmp
or
rcr
add
push
mov
hlt
idivb
xchg
bound
rcrb
dec
nop
mov
ds
cwtl
cmp
push
pop
and
mov
adc
pop
loope
fs
pop
dec
gs
inc
and
xchg
repz
cmp
pop
scas
mov
scas
add
pop
add
xor
push
mov
sbb
out
stc
cmp
outsl
call
das
xor
pop
inc
and
loopne
inc
jmp
xchg
insb
addr16
testb
ds
dec
inc
cltd
sarl
xchg
stos
or
cmpsl
push
mov
cli
sub
lahf
clc
ljmp
xchg
je
push
ljmp
sub
push
rcrb
and
repnz
movsb
jle
xchg
push
mov
shll
ret
addl
jmp
cltd
sub
shr
dec
shl
or
in
push
push
dec
ja
mov
adc
jecxz
mov
ja
push
cwtl
adc
inc
mov
xchg
mov
inc
cmp
mov
cmp
inc
in
dec
bound
leave
cmpsb
fucomi
movsl
adc
leave
imul
ljmp
sbb
and
lods
dec
push
int
call
pusha
fcoml
or
addl
jns
call
push
cmp
xor
jnp
add
jl
repnz
push
xchg
jne
mov
repz
jns
pop
lret
sbb
lock
jp
ds
fcmovne
cmpsl
addl
ret
cmp
jno
fnstcw
mov
orl
jb
cld
cmpsl
and
pop
push
out
es
sahf
imul
push
jl
decb
dec
sub
ss
ret
mov
inc
in
dec
xchg
sub
mov
mov
xor
in
dec
sbb
stc
xchg
idivl
dec
mov
in
loopne
lcall
repz
test
push
in
ficompl
movsl
loope
xchg
aaa
mov
in
movsb
pop
mov
push
xchg
lcall
ret
pop
js
aad
repz
into
cmp
mov
add
mov
loopne
test
push
push
jo
test
loop
jno
andb
lds
add
pop
adc
sub
test
jecxz
jns
testl
bound
stc
cmpsb
lret
jne
push
and
pop
repz
fwait
jbe
mov
pop
mulb
sub
ljmp
jb
pop
int3
mov
fisubrs
das
xorl
icebp
jg
lods
mov
aam
cmpsl
xor
push
ja
loop,pt
test
jnp
popa
jne
sub
bnd
test
push
es
mov
mov
pop
movsl
jecxz
repz
cmp
gs
addr16
or
daa
xlat
jns
pop
mov
inc
cmp
aas
adc
je
pushf
movsl
fs
add
enter
rorl
jge
fcom
in
adc
add
daa
pusha
int3
pop
inc
xor
out
lahf
add
notl
adc
lds
pop
mov
add
je
jmp
or
das
xor
xchg
shlb
std
sbb
sub
add
mov
sub
inc
icebp
mov
inc
dec
xchg
and
sub
jnp
xor
or
xchg
xchg
push
jg
stc
bound
rorb
loope
push
xlat
pop
test
gs
fnsave
jne
mov
jg
xchg
addr16
and
or
hlt
cli
pop
xchg
popf
jb
add
adc
jnp
xchg
fnstsw
mov
jno
filds
dec
iret
bound
pop
mov
sub
shll
ret
push
push
mov
and
sub
mov
jl
roll
push
adc
add
adc
lods
or
fisttpll
aas
clc
cwtl
inc
imul
xor
push
push
jmp
adc
in
mov
cwtl
movsl
dec
sbb
stc
inc
mov
sbb
sbb
dec
inc
cltd
sarl
xchg
stos
or
cmpsl
push
mov
cli
sub
xchg
add
inc
insb
ret
jecxz
icebp
xchg
xchg
je
push
inc
insl
xchg
add
insb
dec
add
xchg
inc
rcrb
inc
push
shlb
ficomps
repnz
jle
xchg
push
mov
hlt
xchg
adc
das
das
addl
jle
shl
mov
dec
shl
or
in
mov
jle
stc
in
ja
mov
adc
cli
faddl
aaa
ja
push
cwtl
adc
inc
mov
xchg
mov
inc
cmp
test
jge
fwait
in
jbe
add
bound
lea
mov
leave
imul
ljmp
sbb
sub
mov
dec
push
int
call
mov
aaa
addl
aaa
push
fucomip
dec
sbb
fbstp
pop
cmpl
mov
jne
mov
repz
jns
pop
lret
sbb
lock
jp
xchg
cmp
xchg
outsb
cld
shrl
adc
movsl
insl
mov
mov
orl
jb
cld
cmpsl
and
lock
jp
mov
mov
seta
push
ret
mov
inc
lock
add
cmc
mov
mov
mov
ljmp
idivl
dec
mov
in
loopne
lcall
repz
call
xchg
mov
loope
xchg
aaa
mov
adc
and
push
xchg
lcall
insl
popa
dec
dec
js
aad
repz
into
sub
nop
adc
ret
ja
int3
lea
add
sbb
jecxz
push
push
jo
test
cmc
pop
push
lea
lds
inc
les
mov
sub
test
jecxz
jns
testl
bound
in
xor
jne
xor
lods
sti
sub
pop
dec
fwait
out
cmpsb
cmp
jle
cmpsl
jno
mov
sub
ljmp
mov
pop
int3
mov
rcrl
adc
jg
lods
mov
bound
dec
es
mov
aas
test
out
xor
scas
jmp
xchg
mov
push
push
int
pop
push
scas
pop
mov
mov
pop
movsl
jecxz
repz
cmp
mov
mov
xlat
jns
pop
mov
inc
arpl
pop
mov
or
aas
add
enter
test
or
sub
in
adc
add
dec
cmp
sub
or
xchg
fxam
cli
out
lahf
and
push
loop
lds
push
lds
mov
outsl
cmp
je
jmp
repnz
shlb
std
sbb
sub
add
mov
mov
int3
pop
fistpl
jle
and
or
inc
inc
mov
or
xchg
xchg
push
jg
fs
fnstcw
mov
inc
pusha
loope
push
xlat
pop
pop
int3
mov
add
jno
jne
mov
jg
add
stos
loope
pushf
xlat
or
hlt
cli
pop
xchg
pop
cmpsl
dec
lods
pop
lods
push
cmp
imul
enter
jb
mov
inc
aaa
dec
iret
bound
pop
mov
sub
in
imul
mov
clc
mov
or
mov
das
sti
jle
sub
push
push
adc
pushf
popf
jbe
sbb
mov
cltd
fisubrl
fisttpll
subb
sbb
adc
xor
push
add
mov
push
cwtl
movsl
dec
sbb
stc
mov
iret
popf
inc
lcall
and
out
and
dec
aam
nop
in
rcr
loope
fmull
xchg
mov
xchg
in
movsl
jp
pop
or
std
mov
dec
inc
push
pop
adc
mov
dec
fsubl
lret
sbb
xchg
daa
movsb
push
mov
int3
push
cmp
pop
jl
insl
lret
sbb
mov
jbe
mov
adc
cmpsb
je
enter
xor
and
sbb
xchg
or
scas
inc
mov
cmp
push
mov
or
push
cmp
insl
push
dec
pop
lahf
popf
jle
stos
lods
pusha
fcompl
testb
ds
testb
ds
testb
ds
testb
ds
sbb
push
sub
scas
lahf
xor
movsl
push
sub
cmpsb
mov
ja
cmpsb
mov
into
add
xor
add
jg
outsb
and
rorb
adc
xchg
mov
pushw
xchg
mov
or
enter
dec
loop
jecxz
fwait
xchg
popf
test
xor
dec
nop
mov
ds
testb
ds
sbb
push
sub
cmpsb
mov
into
add
jg
outsb
and
pushw
xchg
mov
sbb
push
push
loope
sarl
rcll
mov
mov
mov
inc
test
ljmp
ss
je
push
hlt
xor
jp
mov
je
je
cmp
nop
mov
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
pop
sub
mov
imul
xchg
push
outsl
ja
outsl
gs
cltd
pop
push
add
ficoms
out
and
in
rcrl
repz
mov
divl
test
add
fcompl
imul
cmp
mov
enter
push
in
in
xlat
mov
and
and
in
dec
mov
push
sbb
mov
push
fldl
mov
arpl
adc
out
sbb
js,pn
inc
xor
and
scas
sbb
mov
scas
sub
xor
ja
sbb
xchg
pop
leave
cs
jo
out
xchg
xlat
mov
inc
in
cwtl
jmp
jbe
and
sub
mov
std
push
mov
sbb
sub
pop
sbb
in
push
sub
add
daa
inc
inc
mov
nop
xlat
pop
orb
enter
push
inc
aas
mov
push
mov
les
add
cmpsb
pushf
std
mov
mov
data16
addr16
push
mov
lcall
lods
push
jne
sbb
add
arpl
mov
jnp
clc
push
push
aaa
mov
or
xor
jecxz
iret
mov
inc
xlat
mov
pop
into
divb
sub
mov
xor
int
mov
adc
aas
loope
inc
cli
push
ljmp
bound
mov
mov
test
mov
add
aas
std
adc
dec
xchg
ds
repz
cmp
sbb
repnz
loop
imul
inc
outsl
inc
and
data16
mov
sub
add
icebp
cmp
out
shrb
sbb
inc
pusha
pop
inc
out
push
push
repz
add
cmc
sbb
imul
cltd
out
fldt
andps
push
or
mov
out
mov
ret
cmp
cmpsl
repz
imul
or
lea
sbb
mov
xchg
popa
jns
out
lret
mov
pop
scas
insb
xor
or
in
xor
add
mov
mov
insb
dec
and
sbb
mov
jnp
in
roll
inc
xchg
jno
push
mov
lcall
sub
mov
cmp
adc
or
aam
xor
or
les
mov
es
xor
orb
fimuls
push
sub
les
mov
cmp
or
jae
push
arpl
pop
frstor
js
mov
push
int
aas
cmp
mov
push
addr16
shlb
scas
sar
mov
imul
ret
pop
push
es
xchg
sbb
cld
push
push
cltd
out
mov
push
dec
cld
mov
mov
fdiv
arpl
stc
repnz
or
jle
jo
push
jmp
test
xchg
cltd
adc
mov
lcall
pop
mov
roll
movsb
lahf
call
subl
arpl
ss
mov
nop
dec
cld
sub
cmp
push
jmp
pop
pop
adc
rcll
scas
cmpsl
pushf
sbb
in
data16
cmc
in
scas
xor
sbb
test
jo
pop
lea
imul
movsb
xchg
push
mov
jmp
in
adc
cmpsl
je
lret
js
lret
xchg
push
sub
ja
cs
std
mov
cmp
xchg
movsl
rcl
cmp
imul
pop
pop
adc
inc
push
jmp
mov
push
xchg
push
faddl
cmpsb
test
loope
xor
out
je
xlat
divl
mov
popa
call
xor
mov
sbb
xchg
ficomps
dec
dec
insb
jnp
cmp
pop
push
mov
pop
les
clc
in
xchg
jb
jno
dec
add
jmp
jecxz
mov
imul
aaa
sbb
mov
mov
out
scas
mov
call
push
inc
mov
aam
cmc
xchg
insb
mov
leave
mov
adc
js
clc
push
in
xor
mov
jb
ret
xchg
inc
shlb
in
xchg
jnp
sar
jle
pop
xorb
dec
aaa
rorb
cld
movsb
dec
imul
jmp
lcall
jno
bound
adc
dec
push
les
in
cmp
out
jo
mul
add
add
cmp
gs
das
int
fildll
nop
fildl
int
fildll
nop
fildl
push
push
es
inc
cltd
jg
push
es
inc
cltd
jg
mov
pushf
frstor
fisttpll
mov
pushf
frstor
fisttpll
mov
pushf
frstor
fisttpll
mov
pushf
frstor
fucom
test
push
out
sub
out
sub
out
sub
out
sub
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
cli
mov
ja
cmp
ja
cmp
ja
cmp
ja
cmp
ja
cmp
ja
cmp
ja
cmp
ja
cmp
or
push
arpl
dec
mov
ljmp
cmp
pop
xor
popf
push
gs
popf
push
jb
inc
cmp
jb
inc
cmp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
and
shlb
xor
jecxz
rol
and
shlb
xor
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
out
ss
mov
jns
hlt
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
mov
cmp
lahf
lcall
outsl
nop
add
mov
js
call
sti
jle
jle
inc
and
popf
jnp
fwait
hlt
mov
fimuls
sub
add
imul
ficoml
sub
repnz
ficoml
sub
xchg
jg
inc
pop
push
loopne
jg
inc
pop
push
aaa
push
dec
mov
aaa
push
dec
mov
ljmp
cmp
in
pop
popa
cmp
pop
xor
popf
push
gs
popf
push
gs
popf
push
gs
popf
push
jb
inc
cmp
jb
inc
cmp
jb
inc
cmp
jb
inc
cmp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
lods
pop
cmp
pop
faddp
and
shlb
xor
jecxz
rol
and
aad
cmp
data16
sbb
fmuls
pop
sub
mov
mov
loopne
add
outsl
sahf
and
lret
pop
or
sarb
and
mov
icebp
mov
mov
pop
cmp
cmp
aad
cld
lret
jne
pop
imul
scas
out
shrb
adcl
fnstenv
es
sarl
ds
data16
sbb
fmuls
pop
sub
mov
xor
int3
pushf
out
aas
leave
loop
ljmp
ret
mov
dec
pop
out
mov
cmp
mov
aas
sti
std
dec
pop
dec
fdivrs
jo
mov
mov
lret
in
icebp
mov
push
loopne
aam
cwtl
sbb
imul
movsl
fidivl
rcll
inc
insl
les
sub
xor
pop
pop
dec
loope
jnp
lcall
cmp
roll
lods
repnz
into
prefetch
or
or
subl
mov
and
scas
push
or
mov
xchg
lods
ja
sbb
shrb
push
rorl
insb
push
jnp
push
int
mov
sub
cld
mov
mov
orl
mov
data16
lcall
pop
test
je
add
xchg
out
sbb
adc
dec
pusha
nop
cld
daa
sub
fdivl
rclb
adc
adc
nop
ret
jle
pusha
sbb
mov
pushf
aad
out
add
fnstsw
mov
and
cmp
mov
lea
pop
xchg
sbb
cmp
add
scas
movsl
sti
in
int
mov
mov
jbe
arpl
std
mov
inc
iret
rep
dec
and
fisttpll
jl
jne
sbb
jmp
lods
cmp
adc
sub
dec
cltd
packsswb
or
sbb
push
in
fldcw
inc
jb
je
push
fidivrs
push
iret
out
sbb
lcall
jns
aad
sbb
mov
lcall
test
adc
xchg
in
mov
or
pop
pushf
sti
xor
add
xor
subl
or
push
pop
repnz
fimull
out
mov
rclb
cmp
call
cmp
jl
and
adc
and
add
outsb
dec
mov
repnz
xorb
leave
sub
lahf
jecxz
adc
jns
sub
add
pop
inc
mov
sub
mov
addr16
cli
xchg
popf
mov
mov
icebp
lods
and
insb
add
hlt
mov
jbe
dec
test
outsb
sahf
xchg
mov
cmc
add
pop
or
xor
lods
push
or
mov
xor
xchg
int
and
push
in
xor
and
fldl
lahf
flds
mov
cmp
sbb
or
cli
pop
adc
into
xor
xchg
rcrb
push
fildll
fldenv
cmpsl
lret
adc
jge
loopne
push
aad
push
mov
xchg
mov
cmp
add
fmulp
lret
cmp
in
aas
idivb
icebp
insl
sarb
jo
push
jae
adc
sub
pop
mov
jg
jb
fbld
das
stos
movsb
out
aam
and
insl
scas
ss
lods
js
xchg
call
xorl
test
inc
xchg
xor
or
out
sarl
jnp
shlb
les
mov
stos
dec
pop
inc
push
stos
adc
xor
test
mov
ret
icebp
mov
xchg
inc
push
xor
rorl
ss
in
jne
adc
xchg
adc
inc
pop
repz
sbb
cmpl
jecxz
xor
dec
sub
fdivl
inc
lock
cmp
jmp
xchg
pushf
lcall
pusha
add
loope
jle
std
in
pop
std
outsb
fnstenv
fcmove
jl
mov
pop
aas
mov
jge
nop
dec
hlt
ljmp
fistpl
sub
cmp
inc
and
inc
in
xchg
jle
pop
lret
sbb
aam
xchg
xchg
lcall
jl
dec
jmp
enter
mov
data16
dec
xchg
cmpsb
fcomi
inc
adc
sbb
jmp
insl
inc
sub
lea
push
sbb
js
into
icebp
imul
int
iret
enter
jne
insl
jbe
sbb
lahf
test
jno
mov
cmpsl
dec
or
loop
adc
ljmp
scas
push
aaa
daa
inc
sbb
outsb
lods
sub
mov
jp
ds
dec
mov
mov
pop
xor
jmp
or
adc
popa
iret
push
jp
cmp
mov
push
mov
xor
in
mov
in
dec
cmp
int
insl
sbb
pop
jg
pop
xor
jnp
dec
jb
mov
push
inc
out
stos
subb
and
pop
pop
jae
inc
loope
cltd
test
add
mov
mov
adcl
cli
jno
pop
aas
xchg
repz
cmp
cmpsl
push
lods
lret
int
sbb
push
cmp
popf
cmp
cli
mov
or
xchg
stc
imul
aas
jle
xchg
gs
adc
insb
mov
mov
push
dec
xor
jnp
std
xorl
xor
test
shr
vmwrite
push
shrl
cmp
ret
pop
dec
icebp
mov
or
shrb
mov
xchg
sbb
addr16
stos
and
xchg
scas
sub
stos
mov
xor
push
mov
or
call
sbb
movsl
addl
dec
jno
inc
mov
dec
xchg
add
pop
xchg
adc
sbb
jl
dec
pop
aad
push
sub
aam
jns
jle
lret
push
xor
mov
cmpsb
mov
jp
xchg
push
jne
push
das
inc
aam
std
sbb
mov
lahf
xchg
mov
sub
jb
sahf
and
cmpsl
hlt
shlb
push
push
js
xchg
clc
out
push
push
gs
es
nop
sub
jg
faddp
cmp
mov
sub
sbb
iret
aaa
push
fcmovu
adc
dec
js
adc
sub
jnp
xor
sbb
mov
xor
xchg
stc
scas
dec
ret
xlat
mov
sahf
xor
mov
and
or
mov
push
jne
push
arpl
mov
enter
ljmp
iret
repnz
fidivrl
daa
out
cmp
loopne
mov
add
loop
dec
jmp
fstp
push
jno
inc
out
sbb
shrb
mov
xchg
or
push
xor
mov
cmc
inc
inc
rolb
sarb
inc
sub
sub
xchg
fstps
mov
lods
lcall
jnp,pn
ss
out
and
jo
scas
outsb
outsl
cmpsl
dec
inc
jb
cmp
jns
aad
sub
sub
jbe
add
nop
shrl
scas
cmp
cmp
add
sub
fcompl
sbb
cmp
repz
mov
add
int3
fcmovnbe
mov
sub
jne
into
inc
jp
cli
and
mov
arpl
sarb
cmp
add
lcall
cmp
arpl
cmpsb
in
arpl
lods
push
cwtl
and
cmp
aaa
mov
sbb
push
es
add
in
fsubrs
ret
out
rcll
xor
dec
faddl
pop
aad
or
mov
push
jbe
sbb
mov
hlt
fld
nop
in
in
outsl
ja
ljmp
mov
jl
mov
shll
repz
daa
mulb
lock
xlat
mov
or
add
lret
pop
adc
sbb
pop
scas
int3
mov
loop
loope
aad
cltd
xchg
push
lock
mov
data16
cmp
sbb
ret
lods
push
mov
jp
stos
loope
push
push
into
and
ret
and
in
in
pop
outsl
mov
cmp
sbb
push
mov
mov
sub
sub
iret
or
jne
or
out
push
sub
nop
enter
fstpt
xor
test
repz
jp
adc
adc
adc
stos
loopw
jecxz
cltd
ret
icebp
push
pop
nop
mov
je
mov
inc
rclb
cwtl
push
push
test
lea
sub
sub
inc
pop
cwtl
mov
mul
xchg
ja
inc
add
das
and
sbb
pop
pop
mov
cmpsl
and
xchg
aam
fwait
imul
cmpsb
mov
pop
hlt
scas
pusha
mov
mov
cmpsl
inc
cmp
aaa
sub
mov
cli
inc
movsl
jg
add
cmp
popa
mov
rorl
ret
in
or
jnp
adc
in
xor
repz
jns
int
and
gs
out
mov
outsl
fnstsw
sti
push
call
ret
push
push
lcall
loope
xchg
dec
jae
sbb
mov
lret
dec
push
xchg
icebp
push
add
clc
xlat
and
cltd
or
mov
inc
pop
cmp
pop
lods
pushf
or
dec
mov
test
scas
pushf
lods
pop
in
mov
scas
mov
jle
fs
pop
or
stc
inc
sbb
mov
insb
and
add
jnp
test
mov
sub
dec
int
call
orb
sub
and
sub
ret
leave
sbb
adc
bound
push
cmovs
jmp
std
xchg
sbb
sbb
jmp
sahf
in
xor
jo
pop
into
jne
idivl
in
jns
imul
adc
jbe
jnp
icebp
mull
pop
pop
mov
mov
negl
mov
int3
loop
fwait
cmp
adc
add
mov
jmp
call
adc
or
in
dec
arpl
shll
aaa
arpl
mov
pop
inc
std
mov
push
scas
outsb
push
dec
pop
insl
pop
les
fimull
cmp
js
ja
gs
dec
jp
movb
stc
inc
jge
lahf
sub
out
inc
jecxz
mov
lods
outsl
mov
inc
lret
dec
xchg
mov
push
enter
pop
std
rclb
xchg
scas
pushf
out
xor
and
stos
add
mov
mov
inc
inc
in
mov
das
lds
jbe
sbb
lock
sbb
or
dec
mov
lods
das
pop
fistl
sarl
inc
dec
adcl
aas
jle
lock
mov
testb
mov
aam
dec
movsl
shl
into
xchg
pop
movsb
out
mov
aas
outsl
in
jg
test
fs
push
cmpb
addb
mov
xchg
sub
inc
sbb
ja
add
inc
cmp
cli
mov
push
push
sub
pop
test
sbb
add
jmp
out
adc
xchg
es
clc
data16
jb
add
fld
cmp
mov
loopne
mov
sub
xor
fistps
push
xchg
out
test
and
sub
fcmovu
insb
adc
xchg
sarl
push
mov
inc
loopne
in
cli
adc
xlat
out
aaa
lods
fnsave
mov
imul
cmp
jb
sbb
fdivrs
lcall
repz
pop
dec
dec
inc
hlt
inc
cmp
mov
test
imul
mov
adc
mov
lock
insl
fdivl
mov
pusha
je
push
daa
fwait
jmp
lret
lea
pop
loope
scas
sub
push
ljmp
in
movsb
movsl
mov
pop
or
lock
sub
jne
ds
mov
pop
iret
imul
fstp
sub
icebp
xchg
fimuls
jp
sbb
movsb
mov
ja
push
sbb
ficoml
xor
jbe
scas
mov
xchg
mov
jl
pop
jp
lds
in
nop
add
hlt
call
xchg
outsl
lret
pop
scas
fwait
or
inc
jne
leave
dec
inc
jl
xor
inc
add
inc
das
aad
in
mov
xlat
mov
imul
jge
lods
jge
sahf
mov
insb
dec
lods
jno,pn
xchg
ret
push
push
and
mov
push
js
outsl
add
jmp
mov
mov
lea
xchg
pusha
sbb
mov
pop
cmp
scas
mov
pop
cmp
mov
out
inc
cltd
gs
add
dec
lret
adc
cli
ret
std
lods
mov
mov
jbe
sarb
adc
jae
dec
js
pop
mov
mov
cmp
adc
mov
jecxz
xor
pop
dec
cmpsl
and
xchg
mov
adc
inc
sbb
xchg
out
movsl
stos
pop
shlb
push
mov
sbb
into
fdiv
icebp
mov
dec
lret
outsb
int
mov
sbb
xchg
sub
add
lds
outsb
xor
std
ljmp
mov
rcr
rcrl
jbe
gs
add
ss
repz
inc
je
in
cmp
sub
lret
xchg
pop
add
jmp
ds
inc
mov
mov
aaa
mov
gs
jmp
and
xor
sbb
cltd
roll
mov
movsl
loop
add
xchg
cmpl
ds
pop
ljmp
movsb
pop
mov
xor
repz
cmp
outsl
test
pop
cmp
jae
jbe
sbb
pusha
stc
popa
xchg
mov
mov
bound
jbe
pusha
xchg
repz
std
push
sti
and
mov
pop
jae
popf
shlb
iret
out
jno
dec
pop
sub
nop
lods
push
jmp
or
and
mov
mov
jae
and
arpl
stos
rcrl
and
ja
sub
lret
lock
mov
xchg
pusha
shll
mov
les
aad
clc
dec
mov
cwtl
pop
push
xchg
push
icebp
enter
cld
push
out
cmp
rorb
add
inc
pop
out
imul
pop
mov
push
sub
mov
insl
push
shrl
add
clc
pop
and
mov
push
ljmp
pop
xchg
mov
outsl
cs
cmp
orb
test
sub
add
lods
mov
imul
push
cmpsl
outsb
add
test
aad
negb
mov
add
and
lret
scas
jno
inc
sbb
sub
shll
out
punpckhbw
push
or
cmovb
sub
mov
in
aam
or
dec
repz
fwait
mov
xchg
jae
cld
ds
adc
pop
dec
lret
cmp
adcl
cld
jnp
mov
mov
cli
xchg
mov
sub
in
into
fisubrl
notb
in
inc
rcl
rorb
mov
es
imul
cmpsl
hlt
aad
xor
stos
adc
fildl
out
pop
ljmp
cld
clc
pop
xchg
sub
stos
and
into
xchg
cmp
xchg
stos
pop
sub
sbb
ret
cmp
pop
and
outsb
pop
mov
ret
nop
xor
xor
lods
inc
gs
out
cmp
bound
cmp
and
adc
xlat
popf
push
sub
mov
sbb
xchg
lock
adc
inc
xchg
adc
movsl
inc
mov
test
in
lock
push
dec
jno
xor
in
adc
ja
cmp
lret
shlb
lahf
mov
sbb
pop
mov
cmpsb
lahf
xchg
out
je
outsb
aas
scas
mov
and
mov
pop
scas
bnd
xchg
dec
in
push
out
jnp
movsb
dec
sbb
fistps
adc
mov
fs
bnd
ficompl
xchg
push
jnp
shlb
repnz
mov
dec
out
xlat
aaa
cmp
test
lret
ss
fwait
lds
xor
ljmp
mov
nop
mov
xor
xor
repnz
stc
and
daa
push
dec
mov
pop
test
pop
xor
jge
pop
nop
jecxz
push
inc
xchg
xchg
xchg
cmp
mov
inc
sahf
psubsw
adc
in
xor
pop
push
mov
pop
or
xor
into
inc
fdivr
mov
push
enter
mov
into
xor
push
loop
cmp
xor
stos
mov
mov
bound
std
mov
xchg
or
mov
pop
dec
xchg
push
std
sbb
jecxz
push
cmp
rclb
fwait
adc
push
test
adc
std
mov
jp
mov
lods
dec
push
les
mov
test
push
mov
ss
or
cmp
sub
pushf
push
mov
push
sub
jne
aas
inc
push
out
insl
pop
andl
and
mov
xor
cmp
sbbb
test
mov
cmp
movsb
push
pop
fmuls
loop
pop
sub
and
and
rolb
jns
cmp
loope
xchg
and
add
jne
outsb
inc
jle
adc
mov
sti
dec
inc
sbb
jge
push
dec
insl
add
sub
dec
sub
lret
mov
sbb
in
mov
mov
lock
orb
dec
popf
int3
pop
push
rolb
scas
in
cmp
xor
leave
ja
loope
add
pop
mov
out
nop
sti
sub
cli
xlat
push
pop
pop
int3
xor
jecxz
push
daa
ja
clc
inc
adc
add
push
mov
out
add
fcoms
mov
loop
fmuls
pop
lock
clc
cld
adc
repnz
loop
dec
or
int
adc
xchg
xor
cld
imul
inc
addr16
push
mov
inc
cmpsb
jl
or
pop
mov
psubb
xchg
je
mov
pop
and
shl
cmp
push
xchg
pusha
jle
stos
pushl
pop
push
push
or
sbb
test
fcomp
sti
dec
jo
pusha
fsts
mov
xchg
mov
movups
cld
push
cmp
std
mov
mov
cs
popa
pop
int
fisubrs
add
call
testb
adc
sbb
test
test
inc
pop
and
ljmp
mov
jae
std
insl
jp
test
pop
inc
xchg
iret
mov
xor
inc
and
add
pop
dec
rclb
test
jle
fs
mov
xor
pop
subb
pop
fsubl
xchg
sbb
adc
mov
xchg
loopne
and
in
cltd
push
fcomps
int
cmp
pop
inc
leave
ja
ds
jne
mov
inc
sub
mov
int
push
dec
mov
lcall
mov
mov
cmp
inc
cwtl
mov
sbb
aaa
fs
mov
test
sbb
push
mov
gs
test
xor
mov
aas
xor
xor
aas
out
jo
push
std
pop
pop
cli
ljmp
fimuls
add
cmpsb
xchg
sbb
imul
out
sub
in
mov
call
or
push
aaa
xchg
push
adc
dec
sbb
jns
pusha
and
sarl
xchg
add
mov
cmp
jecxz
loop
jae
push
test
cmpsl
and
xchg
addr16
mov
pop
push
lock
xchg
add
aad
jge
cmp
mov
adc
adc
mov
imul
sbb
mov
sub
iret
push
data16
lret
mov
stos
ret
push
jb
cmpsl
outsl
xor
push
push
decb
mov
or
push
lea
dec
or
imul
gs
cmpsl
push
add
repz
mov
je
movsl
sbb
push
xor
adc
sbb
mov
in
pop
sbb
icebp
mov
mov
xchg
rcrl
mov
and
dec
arpl
inc
add
lods
lcall
xor
xor
cwtl
aas
sbb
ja
xor
out
sub
pop
movsb
aas
js
aaa
divb
aad
or
inc
xorl
mov
daa
pop
xchg
fsub
daa
sub
out
in
jp
fiadds
mov
dec
jo
icebp
repnz
xchg
cmp
cmp
xchg
outsl
arpl
inc
sbb
lds
pop
adc
cmp
jae
clc
push
movsb
shrb
dec
lcall
mov
std
ljmp
ss
xor
rclb
or
shrb
ljmp
mov
push
cmp
movsl
jne
cmp
les
or
rolb
sbb
cmpsl
mov
xchg
outsl
or
ss
sbbl
addr16
push
ss
jns
bound
lock
and
jno
and
dec
jl
bound
mov
mov
ss
aad
adc
arpl
aad
inc
and
push
lcall
adc
dec
movsl
xor
clc
outsl
repz
xchg
inc
push
icebp
fdivr
es
aam
push
or
jo
mov
add
add
xchg
mov
jg
push
sub
imul
push
mov
daa
mov
inc
nop
out
sbbl
daa
movl
adc
ret
nop
outsb
int3
sub
push
sub
mov
sbb
sbb
dec
in
daa
jg
jle
xchg
sub
adc
xchg
mov
push
rcrb
xchg
inc
repnz
in
js
add
test
mov
lret
jns
les
mov
jge
pop
hlt
inc
daa
push
mov
mov
call
popa
daa
inc
les
mov
bound
sbb
jb
das
jg
bound
aad
mov
nop
pop
push
mov
stos
ss
dec
repz
lret
gs
in
or
in
out
add
je
mov
mov
insl
das
stos
pop
mov
sbb
dec
dec
adc
mov
fstp
lret
sbb
xchg
sbb
xchg
pop
adc
inc
lret
jge
mov
pop
setne
leave
dec
and
pop
pop
pop
cmpsb
shlb
pop
sti
cmpsb
push
sub
sbb
pop
lret
xchg
sbb
fcomps
xor
mov
and
jne
movsl
fs
cltd
xor
push
fnstsw
xor
cmpsb
aam
js
iret
pop
scas
aam
sahf
lcall
les
sti
push
imul
sti
loope
push
jecxz
outsl
lods
mov
jno
jmp
push
ds
pop
sbb
bound
int3
bnd
ja
adc
mov
pop
call
cmc
inc
movsl
jmp
repz
sbb
in
xor
cmp
fisubrs
inc
jbe
dec
mov
jl
aas
dec
fsubrl
dec
and
jmp
lret
mov
xor
sub
outsl
cmpsl
xchg
mov
test
sub
jae
js
inc
lcall
jnp
cmp
rorb
pusha
add
icebp
add
rcrb
pop
loop
and
mov
test
pushf
push
outsl
das
in
cmpl
iret
sbbb
jmp
dec
sbb
xor
jge
std
pusha
jne
mov
mov
mov
out
mov
or
fst
xor
mov
cmp
push
sbb
xchg
mov
push
shr
xchg
cmp
ds
sub
dec
mov
sti
sub
cmpsl
aas
mov
inc
rorb
jbe
xchg
mov
pop
xchg
fidivl
jo
adc
dec
xchg
jmp
xor
adc
lcall
and
add
pop
dec
mov
lret
test
data16
xlat
jp
fwait
push
insl
into
sbb
add
inc
mov
pop
mov
sbb
xchg
push
jno
adc
push
and
or
addr16
mov
xchg
movsb
lahf
dec
mov
fadds
adc
mov
jg
cmpsl
jae
addb
add
lods
or
push
sbbl
lds
cmp
test
outsl
inc
dec
or
test
or
sbb
out
js
ljmp
out
sbb
stos
or
lcall
je
sub
test
add
scas
loope
and
adc
push
jge
repnz
iret
lock
mov
dec
call
mov
lcall
movsl
mov
lods
sbb
push
jecxz
roll
rcl
pusha
mov
test
dec
mov
mov
repnz
fwait
jge
ljmp
enter
rcll
mov
and
mov
and
int
push
addb
adc
and
imull
outsb
mov
jecxz
dec
mov
out
adc
js
icebp
jno
sub
aad
movsl
fisubl
xchg
adc
inc
jno
cwtl
xchg
nop
inc
dec
sub
shll
push
pop
lahf
jmp
mov
mov
scas
push
dec
hlt
push
jg
sub
mov
repnz
arpl
repnz
dec
outsl
into
pop
inc
fcompl
cmp
ds
outsb
int
pop
pop
cmpsb
jo
jle
rolb
je
aas
ss
sub
outsl
inc
cmpsb
inc
pop
loop
pop
enter
pop
pop
or
fisttps
insl
cmp
stos
push
out
enter
int3
inc
mov
test
pop
roll
add
movsl
add
or
inc
mov
xor
push
pop
repnz
inc
cmp
mov
mov
and
jne
sarb
les
add
push
hlt
push
pop
xchg
add
je
popa
mov
pushf
pop
xchg
aam
mov
sarl
xchg
xchg
shll
andb
mov
pmaxsw
das
pop
out
clc
jl
cwtl
push
scas
mov
xlat
pop
sub
inc
inc
jbe
xchg
mov
xchg
lret
xorl
dec
pop
rcrl
cmc
stos
mov
mov
jle
test
jbe
sbb
out
mov
push
mov
lret
data16
aam
sub
lret
sbbl
and
add
lock
xchg
mov
negl
mov
test
lock
icebp
mov
xchg
add
cmp
mov
add
mov
out
inc
and
push
jnp
push
outsb
dec
loopne,pn
pop
pusha
mov
jnp
dec
std
clc
add
rolw
jo
cmc
and
std
movsb
pop
add
aam
xchg
push
jmp
inc
or
aam
mov
xchg
int
testl
mov
lcall
add
lcall
add
cmp
xchg
or
mov
sti
jg
or
xor
mov
and
inc
lds
test
stos
push
jecxz
pop
in
ss
xchg
inc
stos
xlat
inc
and
or
sbb
mov
shlb
loop
cli
pop
mov
inc
andb
or
icebp
cmp
add
push
or
dec
iret
adcl
xor
push
xor
mov
fs
shrl
adc
loop
shlb
inc
inc
mov
in
fnstsw
das
and
jge
mov
jae
dec
pushl
mov
fdivrl
insl
rorl
in
data16
jmp
xchg
in
cmp
jo
add
jae
xchg
in
repnz
mov
je
loopne
mov
adc
test
jl
mov
xor
push
pop
rcr
sub
and
daa
mov
mov
sbb
mov
jb
rcll
or
mov
sbbb
pop
and
das
addr16
cmpsb
lcall
je
into
movsl
cmc
jmp
imul
mov
pop
in
mov
push
repz
test
xchg
mov
xorb
daa
repz
sbb
repz
pop
jecxz
and
xchg
arpl
xor
mov
jno
push
sbb
sbb
sbb
mov
push
add
ret
bound
jl
loopne
mov
cmp
iret
jae
sub
mov
pop
pop
call
adc
cmp
test
or
lods
add
popa
loopne
cli
xchg
cwtl
fs
xlat
fwait
jmp
aas
movsb
cmp
test
xchg
or
lahf
xor
dec
xorb
xchg
std
pop
add
add
mov
movsl
mov
stc
fistpll
pop
xchg
inc
es
or
jge
aas
or
dec
cmpsb
cli
rorl
fdiv
adc
adc
inc
mov
addr16
add
adcw
out
int3
dec
jle
cmp
andl
pop
mov
std
ds
dec
call
push
and
pop
out
jno
and
rcrl
inc
call
dec
insl
adc
ret
rcl
mov
ds
mov
scas
sub
mov
push
jne
sbb
aaa
dec
xor
adc
push
mov
lret
ss
jg
jp
mov
xor
stos
rol
in
iret
xorl
subl
imul
sbb
sub
mulb
shrb
xor
push
xchg
sarb
cmp
jae
sub
add
ja
dec
add
ja
testb
pushf
rcl
or
sub
mov
addr16
xor
cmp
mov
mov
imul
fbld
shlb
sar
xchg
push
mov
das
lock
xchg
mov
orl
loop
and
mov
aas
inc
fmuls
mov
pushf
cltd
sub
jecxz
dec
add
ja
mov
cli
fsts
lock
push
call
cmpsb
add
out
xchg
and
das
xor
movsl
rclb
cmpsb
enter
inc
mov
fisttpll
adc
sbbl
cmp
jo
push
ds
adc
pop
lcall
xchg
inc
ljmp
rcrl
mov
xchg
les
inc
jne
dec
sub
inc
mov
mov
pop
sbb
decb
dec
push
sbb
mov
xchg
jns
lea
iret
inc
adc
and
inc
or
sub
push
les
jecxz
mov
jecxz
mov
mov
add
adc
push
sbb
xlat
xchg
lret
sarb
sbb
pop
sub
xor
cmp
incl
push
xor
inc
in
mov
adc
scas
outsl
add
lret
sbb
add
jns
es
or
xlat
cmp
imull
sahf
sub
sub
sub
stos
rcll
inc
fs
sub
cmc
cs
sbb
out
inc
mov
mov
cmp
mov
leave
cli
xor
popa
pushf
sub
jb
add
js
rcrl
xlat
mov
mov
mov
push
idivl
sub
xchg
scas
cmp
push
xor
test
adc
mov
fwait
adc
mov
pop
imul
pop
out
out
jbe
cli
lret
adc
daa
xchg
test
insb
mov
xor
in
jb
dec
cmovs
jecxz
jl
jmp
or
cmp
and
ja
es
popf
push
mov
mov
dec
je
sub
mov
leave
rcr
sahf
fisubrs
icebp
and
rcrb
outsb
in
gs
pushf
inc
jb
jecxz
pop
push
mov
add
int
mov
sbb
add
mov
lcall
sbb
push
dec
cmp
js
xor
add
adc
jno
pop
pop
enter
jo
dec
mov
fwait
lock
dec
xchg
mov
adc
in
out
pop
cmpsb
test
mov
xchg
pop
in
mov
mov
test
adc
dec
push
aas
pop
inc
std
jge
mov
mov
inc
mov
pop
jb
fnsave
inc
add
data16
outsb
imul
push
ret
jno
out
dec
or
hlt
fmulp
jp
jno
faddp
pop
outsb
cmp
inc
push
push
push
call
sub
das
jle
lahf
orb
roll
jmp
jp
xor
mov
jne
mov
pusha
pop
nop
shrb
outsb
lret
add
testb
insl
push
inc
mov
in
mov
jb
clc
mov
jnp
lcall
mov
pop
cmp
sbb
cmp
jge
js
inc
push
and
cmp
mov
mov
outsb
out
mov
jge
insb
dec
jo
add
int
scas
xchg
dec
js
mov
mov
popa
cmpsb
mov
fwait
and
das
inc
ret
xor
dec
add
out
jbe
decl
or
popa
and
lds
inc
iret
mov
pusha
in
or
imul
je
jg
repz
ds
cmp
pop
cmp
or
pop
inc
xchg
repnz
cmp
mov
or
adc
inc
push
cwtl
pop
xor
push
cld
mov
sbb
cmc
andb
loope
push
pusha
je
fsub
and
shrb
or
dec
pop
inc
ret
je
or
fcompl
jo
sarl
pop
adc
loopne
add
mov
lret
lahf
ret
ret
xor
mov
jns
and
scas
mov
fsubs
lea
ja
or
jno
pusha
adc
jmp
subb
and
movsl
xorl
sahf
call
test
cwtl
xlat
cmc
mov
push
push
cli
xor
lock
insb
shll
ds
push
adc
sar
js
jge
pop
pop
ja
jp
mov
aad
cmp
shl
jne
mov
sub
shlb
fists
mov
add
daa
add
mov
test
lret
cmc
mov
in
xor
and
xchg
mov
xor
leave
sbb
fnstcw
xor
jnp
cmp
pop
sbb
mov
jmp
mov
mov
or
sbb
shrb
pop
xor
push
mov
sub
repz
add
in
test
out
mov
in
mov
inc
sub
cs
jae
inc
xchg
adc
mov
loop
fwait
ja
jmp
pusha
dec
push
andb
in
xor
inc
out
mov
dec
scas
ud1
outsl
lods
ret
arpl
sahf
push
dec
fwait
dec
or
dec
sbb
outsb
push
aam
or
sub
xchg
pop
inc
push
add
push
and
xchg
push
or
out
xchg
fdivs
mov
xchg
xor
pushf
jns
rcll
push
push
add
cmp
ret
insl
rcll
lcall
imul
imul
add
mov
shlb
xchg
adc
jno
sti
xlat
cmpsl
sub
lock
popf
sti
ja
aad
mov
mov
jno
mov
mov
xchg
test
addr16
xchg
fistl
fisubs
out
lret
or
sbb
push
mov
mov
pop
aas
pushf
insb
in
mov
jnp
xchg
loop
push
cltd
in
out
mov
into
lcall
mov
std
sti
in
pop
stos
and
std
xor
scas
cs
arpl
mov
adc
adc
imul
mov
jecxz
mov
and
test
ja
movsb
into
out
lock
inc
xchg
outsl
addb
cmc
jmp
push
pusha
repnz
xchg
mov
mov
loope
jns
mov
in
cmp
xchg
pushf
loop
cmc
mov
pop
sub
enter
cmc
shll
test
lahf
lock
inc
in
mov
call
test
shrl
lcall
push
jo
andps
in
stos
xchg
incb
push
push
cmp
outsb
cmp
mov
cmc
mov
sub
test
and
sub
push
daa
lea
sbbl
fildll
sahf
jo
push
jecxz
inc
adc
sub
push
cs
outsb
xor
and
inc
sti
in
mov
es
fbld
arpl
out
fs
fs
lret
cmp
push
in
mov
jle
and
jl
jno
ja
iret
or
lea
sub
scas
or
sub
insl
ds
inc
imul
fwait
sbb
popa
stc
negb
dec
leave
mov
xchg
inc
xor
ja
int3
and
repz
add
sbb
or
xor
and
push
aam
mov
mov
xchg
xor
push
add
dec
imul
mov
testb
mov
xchg
test
arpl
adc
adc
js
jo
inc
je
push
jg
mov
cmpl
mov
push
pushf
xchg
jne
stc
std
or
mov
xlat
imull
mov
xchg
arpl
xchg
in
ss
push
xchg
ret
sub
inc
popl
mov
movntps
sbb
cmp
mov
jle
stos
sarl
push
lock
xchg
shll
pop
adc
loope
rcr
and
mov
ds
cmpsl
add
movsb
sti
xlat
jecxz
divl
jg
nop
sbb
rcll
test
mov
rorl
loop
ret
sbb
leave
xor
adc
mov
jae
outsl
dec
pop
insb
jg
fadds
add
mov
sbb
adc
mov
cld
test
mov
add
pop
fwait
test
cmp
pop
adc
shl
cmp
add
sub
add
nop
pop
pop
shrl
sbb
mov
arpl
inc
push
push
add
jbe
push
xchg
sub
cmp
ficompl
popa
pop
je
popf
cld
lret
arpl
adc
fcompp
test
mov
push
sub
lret
out
jo
xchg
push
addr16
add
outsl
add
pop
pop
dec
and
bound
push
sbb
bound
mov
mov
jl
test
int3
pop
or
pusha
xlat
out
test
or
jae
sbb
inc
sub
xor
loopne
cmpl
sbb
jg
repz
dec
adc
stc
pusha
or
xchg
mov
push
movl
je
mov
sub
add
fs
or
imul
push
jg
lods
jge
mov
int3
or
mov
mov
pop
sbb
lods
stos
adc
and
mov
pop
or
cmpsl
sbb
icebp
pop
pop
std
decb
in
or
repz
cwtl
adc
inc
fbld
lahf
jle
jecxz
rcll
or
jo
mov
into
push
and
orb
clc
dec
jp
jle
inc
pop
fidivrl
lret
jg
jns
icebp
add
xchg
lods
jnp
jne
cmc
dec
aas
add
xchg
repnz
push
push
aaa
and
das
jns
pop
mov
cmpsl
xchg
adc
into
dec
pinsrw
cmp
adc
fistps
ja
test
scas
dec
pop
push
rcr
sub
dec
jae
and
fdiv
outsb
sub
stc
pop
xchg
sbb
test
nop
testb
inc
aad
fdivr
aad
push
xor
push
sub
pushf
or
mov
push
adc
fildl
push
cmp
roll
in
in
pop
sub
js
div
in
and
jmp
push
mov
or
jmp
xlat
xor
sbbl
sahf
cltd
mov
adc
test
scas
nop
std
movsb
dec
clc
pop
pop
mov
add
pop
pop
loope
fisubl
mov
and
aad
aam
cwtl
jge
test
out
mov
mov
das
es
xchg
out
adc
dec
dec
fs
xchg
sbb
pop
xchg
cmp
pusha
push
sbb
cmp
outsb
pop
push
pushf
aad
xchg
adcl
sbb
jl
das
out
int3
sub
or
popf
cmp
lret
cmpsl
or
outsl
mov
ljmp
xor
popa
pop
pop
fimull
push
mov
das
sbb
xor
adc
or
mov
xchg
dec
outsb
jmp
cmp
pop
jge
fcoms
aaa
iret
mov
jmp
dec
mov
mov
out
test
ja
popa
push
scas
dec
out
jg
mov
dec
dec
in
xchg
adc
lcall
jle
xchg
lds
fs
xchg
aas
hlt
lcall
dec
frstor
clc
cld
jle
lea
mov
push
push
test
add
push
pop
imul
jle
subb
adc
insb
xchg
arpl
add
in
ret
ss
imul
rcrb
jnp
cmpsl
mov
rorl
and
push
add
pop
orb
ds
insb
jmp
sbb
std
pand
xlat
lcall
dec
xchg
jge
cmp
lock
jnp
sbb
push
pop
in
std
sbb
jle
and
sahf
out
sub
iret
loope
ja
jnp
sub
int3
push
or
dec
out
and
cwtl
inc
dec
cmp
add
sbb
jb
test
mov
mov
or
dec
ficomps
mov
aam
sbb
hlt
mov
cli
mov
cmpsb
xchg
pop
sbb
cmc
dec
js
mov
add
mov
mov
scas
add
push
sub
mov
add
negb
jnp
cmpsb
push
sahf
ljmp
ds
dec
add
subl
aaa
lods
rol
push
adc
mov
dec
push
adc
arpl
iret
adc
ret
push
pop
mov
roll
leave
stos
into
fcoms
mov
bound
sbb
lea
or
ss
jp
xor
pop
scas
cs
out
mov
lret
addr16
add
outsb
mov
sbb
into
dec
fstpl
add
pop
xor
push
and
cmp
test
adc
adc
and
cmp
push
addr16
sub
fcoml
push
adc
pop
mov
mov
xchg
jge
pop
mov
jno
and
lea
shll
lret
mov
std
jns
add
jle
cmp
cmpl
pusha
daa
add
and
orb
jns
cmp
add
dec
lret
cwtl
fcoms
imul
pop
sub
mov
popf
dec
in
out
mov
cmp
clc
jecxz
loope
jnp
cmpsl
push
mov
and
mov
cli
fs
adc
pop
xchg
add
lea
xchg
sbb
inc
xlat
add
pop
js
and
sbb
push
in
or
lea
mov
shlb
mov
pavgb
cmc
xchg
lds
jo
ret
insl
xor
inc
push
add
incb
mov
repnz
or
mov
jno
sub
xchg
fstpl
mov
pop
imul
sbb
xor
pop
sub
xchg
xor
push
imul
sahf
ja
xchg
outsb
cmpsb
pop
popf
sub
scas
and
add
inc
xor
jmp
outsl
clc
mov
pop
pop
pusha
out
and
sbb
aaa
dec
jo
sbb
test
popa
pop
push
daa
nop
call
das
std
lock
or
xor
xchg
mov
pop
loopne
xchg
into
sbb
adc
sbb
pop
adc
sub
and
push
mov
rcll
jno
fcoml
int
dec
cwtl
add
aaa
sbb
ja
jg
cmp
nop
dec
inc
dec
add
ret
out
nop
jge
enter
pusha
jae
mov
dec
fnstenv
mov
jbe
ss
test
je
nop
loop
sbb
jb
and
cmp
std
push
lods
dec
sbb
or
jne
jnp
fildll
xor
cmp
bound
cli
cwtl
shrl
cld
adc
cmpsl
dec
aaa
lods
push
pop
lock
mov
jnp
cmp
mov
push
sub
push
jo
std
or
and
pop
fdivrl
in
and
mov
shrl
xchg
mov
cltd
das
cmpsb
in
cmp
cmp
sbbl
mov
xchg
mov
mov
xor
pushf
notb
push
popa
jmp
push
insl
inc
xchg
mov
mov
fbld
inc
lcall
xchg
sub
outsl
mov
movsl
inc
rcrl
icebp
subl
cwtl
mov
mov
imul
mov
aaa
jle
pop
mov
dec
lds
dec
push
es
loopne
inc
push
data16
mov
and
and
mov
lret
lds
adc
jae
ret
dec
and
sub
int
sub
gs
repz
ljmp
js
ja
jmp
xor
sub
inc
leave
out
clc
ret
mov
jle
sub
xor
es
je
dec
inc
and
call
mov
cmp
lds
mov
or
ret
cmp
iret
mov
pop
mov
lcall
into
scas
rclb
sub
xrstors
sub
nop
adc
and
aad
test
loopne
cmp
mov
push
ficomps
js
pop
push
or
sbb
mov
xchg
xor
cmovl
les
mov
dec
jns
in
lret
in
test
int
xor
push
xor
jmp
xchg
sarb
jne
loop
jg
in
mov
sbb
divl
smsw
mov
xor
sti
fstl
sbb
mov
inc
inc
je
pop
and
sub
dec
mov
xchg
sbb
loopne
sub
inc
in
adc
je
sti
dec
mov
pop
mov
das
fisubs
andl
cld
xlat
add
mov
lcall
push
and
add
and
inc
jne
sub
or
fsubl
insb
stos
test
scas
inc
into
xchg
aam
sahf
inc
cmpsl
inc
je
outsl
xchg
fiaddl
or
and
pop
jo
hlt
inc
in
mov
sub
xor
sub
gs
sbb
fcompl
out
sti
or
push
test
divl
mov
push
pusha
xlat
pop
adc
cmp
in
aaa
mov
add
popa
in
sub
push
add
mov
push
or
cli
lahf
hlt
jo
pop
xorl
pop
jns
pop
outsb
test
cmp
repz
mov
xor
xchg
dec
sbb
cmp
sbb
enter
fwait
add
jp
cmpsb
dec
imul
cwtl
pop
cmp
cwtl
es
ja
cmp
lret
pop
xor
dec
jbe
out
jae
call
mov
iret
dec
mov
sbb
fsts
mov
ljmp
xchg
fwait
push
cmp
adc
cmp
mov
add
jecxz
push
jb
mull
cwtl
cli
ljmp
pusha
mov
push
lcall
lock
cmp
or
sub
iret
fs
inc
jg
jle
mov
xor
jno
rcr
test
pop
jp
jno
mov
xor
xchg
sbb
lret
hlt
sub
cmp
xchg
sub
sbb
lcall
ss
and
ja
and
aam
adc
cmp
jbe
sub
sub
scas
popf
sbb
aaa
mov
stc
dec
jg
or
pop
mov
lret
out
cmc
inc
xor
stos
lcall
clc
cs
int
loop
aad
fsubrl
sahf
adc
js
cmpsb
mov
pop
divl
jmp
mov
pop
mov
pusha
push
pop
xchg
and
outsl
ja
mov
scas
int3
fdivrl
cmp
jne
mov
xchg
push
mov
insb
pushf
mov
xchg
jmp
ficoms
addr16
ds
mov
incl
mov
sbb
dec
mov
cld
movzwl
sbb
hlt
mov
add
or
xchg
icebp
push
sbb
jg
pop
insl
sbb
cli
jmp
scas
cmpsb
dec
fimuls
push
add
imul
dec
xchg
add
scas
lcall
xor
and
mov
cmpsl
test
repnz
dec
pop
push
jb
rcrb
movsl
mov
adc
mov
adc
mov
cmp
fwait
xchg
jecxz
repz
mov
sub
pop
pop
sub
push
out
and
in
add
inc
test
xchg
mov
test
cmpsl
insb
fisubs
jae
xor
in
adc
xchg
mov
jb
pusha
jge
insl
fsubl
nop
jg
mov
sarl
loope
cmp
mov
cmp
pop
icebp
mov
inc
or
test
loope
lods
xchg
jae
push
clc
xchg
or
inc
out
ret
push
aas
movb
outsl
std
je
pop
push
enter
out
mov
shr
push
sbb
adc
sbb
add
jle
lods
fsubrl
arpl
dec
mov
in
insl
cli
popa
sub
lret
test
inc
jns
dec
xchg
xor
out
hlt
jns
pop
inc
ret
ss
push
mov
push
and
and
lahf
or
std
xor
mov
ret
popa
inc
fsubrp
aaa
rclb
and
mov
jg
or
and
roll
jmp
push
ja
sbb
rorl
in
in
sbb
call
cwtl
push
jns
inc
push
push
pop
dec
shlb
dec
push
mov
inc
scas
ret
addl
stc
rorb
xor
lds
es
and
jle
sti
mov
jl
adc
outsb
pop
pop
xchg
push
sar
cmp
mov
cmp
pop
jg
xor
in
mov
lods
outsl
cmp
pushf
loopne
jp
mov
test
movsb
pop
sub
jo
cmp
clc
xor
scas
in
ljmp
ja
sub
add
mov
push
adc
and
popf
ret
aas
in
xchg
movsb
push
andb
adc
sbb
dec
jbe
dec
jmp
pop
testb
ds
add
and
cwtl
stos
cmpsl
cmp
cmp
int3
aaa
adc
mov
ret
lods
ret
shrl
xchg
sti
nop
repz
loop
out
cmp
adc
mov
and
or
mov
jp
ret
push
jne
cmp
cmp
jae
cmp
cmc
push
xchg
or
jb
ret
cmc
mov
add
xchg
dec
nop
sahf
inc
rolb
push
lcall
sahf
jnp
out
fstps
test
scas
daa
adc
xchg
mov
jp
cmp
adc
jg
jae
sub
mov
dec
ss
push
fwait
mov
jbe
mov
mov
scas
mov
inc
out
mov
movsl
insl
adcl
repz
rcl
divl
call
push
lret
and
sar
into
dec
xchg
xchg
cmpsl
fmuls
mov
arpl
cs
test
or
cs
je
xor
xor
cmp
push
andl
xchg
hlt
fnstsw
pop
rol
scas
push
movsb
xor
sbbl
mov
cs
mov
stc
call
and
pop
in
hlt
pop
jmp
cltd
sbb
shll
mov
mov
cltd
test
test
xchg
mov
jmp
lahf
repz
push
fucomip
adc
lods
call
out
xor
jne
testb
ds
testb
ds
testb
ds
testb
ds
or
div
mov
pop
xchg
fsubs
push
cmp
imul
movsb
in
xor
push
mov
and
add
stos
arpl
int
dec
fimull
scas
je
dec
fs
sub
mov
lret
add
stos
arpl
ss
push
xor
lahf
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
inc
scas
repnz
inc
scas
repnz
inc
scas
repnz
inc
scas
repnz
inc
scas
repnz
inc
scas
repnz
lcall
outsl
pop
xchg
mov
movsb
mov
push
inc
scas
repnz
inc
scas
repnz
inc
scas
repnz
gs
mov
repnz
inc
scas
repnz
inc
scas
repnz
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
push
xor
into
test
mov
es
mov
es
pusha
frstor
add
sub
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
pusha
frstor
add
sub
dec
nop
mov
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
pop
in
add
enter
stos
shl
sbb
cmc
out
dec
loop
mov
inc
cmpsl
add
stos
insb
js
mov
and
test
push
in
ljmp
mov
pop
dec
mov
adc
popa
jbe
mov
sub
insl
pusha
rolb
shl
mov
adc
test
jae
jne
imul
adc
movsb
pop
inc
in
push
mov
cmp
stc
negl
jg
sbbb
shl
xchg
sub
cmpsb
outsb
out
pop
pop
sbb
adc
inc
nop
or
loop
sysenter
push
cltd
or
push
inc
cmpb
enter
push
pushf
cmpsl
ja
pop
xchg
ret
xchg
ret
les
jg
mov
fistpll
jmp
out
sar
fwait
aad
add
mov
cmc
cmpsb
jecxz
sub
push
lea
arpl
fldenv
aam
test
es
push
mov
dec
push
cmp
cwtl
xor
mov
xchg
sub
mov
inc
mov
lods
mov
jle
mov
imul
and
repz
fiadds
repnz
das
test
lods
frstor
mov
bound
enter
imul
jmp
adc
mov
bound
bnd
adc
clc
sbb
cmp
add
mov
sub
push
repz
xor
es
cmp
lcall
jne
lods
enter
lods
jnp
sti
std
imul
je
jmp
mov
sahf
xchg
pop
movsb
and
add
stos
arpl
pop
nop
ljmp
scas
dec
fs
sub
mov
lret
add
stos
arpl
sbb
or
adc
movsl
pmuludq
cwtl
pop
lea
mov
outsl
test
popa
cli
stos
movsb
int3
pushf
testb
dec
xchg
rsqrtps
lock
adc
test
js
scas
xchg
xor
in
movsb
lret
scas
mov
fsubrl
jae
xchg
xor
insb
lret
int
andb
push
iret
inc
push
xor
out
mov
mov
gs
test
xadd
push
push
jae
sub
das
xchg
mov
sub
push
add
add
mov
sub
push
repz
xor
es
cmp
lcall
jne
lods
enter
lods
jnp
sti
std
imul
je
jmp
mov
sahf
xchg
pop
movsb
and
add
stos
arpl
pop
nop
ljmp
movsl
ss
insl
jle
stc
add
jl
dec
push
mov
inc
adc
movsb
sahf
roll
dec
pmuludq
cwtl
pop
lea
mov
outsl
test
popa
cli
stos
movsb
int3
pushf
testb
dec
xchg
rsqrtps
lock
adc
test
js
scas
xchg
xor
in
movsb
lret
scas
mov
fsubrl
jae
xchg
xor
insb
lret
int
andb
push
iret
inc
push
xor
out
mov
mov
gs
test
xadd
push
push
jae
sub
das
xchg
mov
sub
push
pop
pop
cmpsb
pop
or
testb
ds
testb
ds
testb
ds
dec
jmp
xlat
jecxz
mov
or
cli
sbb
dec
jnp
dec
nop
mov
ds
testb
ds
dec
jmp
xlat
jecxz
mov
dec
nop
mov
ds
testb
ds
testb
ds
testb
ds
popa
and
stos
pop
testb
ds
testb
ds
testb
ds
pop
outsl
lds
dec
nop
mov
ds
testb
ds
dec
jmp
xlat
jecxz
mov
out
cwtl
adc
sahf
push
testb
ds
testb
ds
inc
scas
push
lcall
insb
enter
xor
dec
nop
mov
ds
testb
ds
lret
pop
cmpsb
das
ret
xchg
or
insb
enter
xor
dec
nop
mov
ds
testb
ds
adc
popa
dec
mov
adc
push
gs
cmp
testb
ds
testb
ds
rol
shll
insb
les
fisubs
leave
testb
ds
testb
ds
adc
pop
test
dec
jecxz
inc
jbe
jmp
testb
ds
testb
ds
mov
cmpsb
jo
adc
dec
cwtl
test
adc
out
ss
mov
jns
hlt
xorl
jmp
iret
pop
pop
mov
fimuls
sub
fimuls
sub
lahf
and
push
push
iret
pop
pop
mov
fimuls
sub
fimuls
sub
les
mov
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
pop
rorb
cld
iret
jnp
xchg
mov
or
push
fistps
and
mov
dec
jno
sub
dec
test
push
inc
pusha
ss
test
mov
dec
loopne
xchg
fstp
clc
or
insl
add
or
lret
data16
fmuls
jb
dec
fidivrl
add
or
mov
xchg
sub
xor
sti
cmpsl
pop
imul
ret
jle
repz
cwtl
pop
sbb
sahf
imull
adc
dec
sub
pop
imul
dec
lcall
dec
insb
repnz
dec
repnz
xor
xor
jg
or
int
sbb
fs
xorl
test
ja
cmpps
push
in
dec
clc
scas
and
fmull
mov
outsl
fcomp
add
xchg
push
mov
test
dec
clc
inc
dec
sbb
xchg
sub
xor
in
and
in
vcmpps
stos
ja
test
mov
pop
xchg
dec
jle
inc
pop
dec
data16
decb
test
ja
sbb
cwtl
int
push
pop
xor
xlat
ds
out
or
ja
cmp
and
sahf
aaa
cmpb
mov
movsl
ss
pop
test
inc
mov
dec
pop
cmc
mov
sahf
insl
inc
pop
outsb
mov
aaa
fsubl
clc
adc
mov
xchg
jge
roll
pop
fistps
and
sarl
xchg
mov
jns
mov
xchg
mov
dec
fcomps
add
xchg
push
jae
lods
lret
cmpsl
je
xor
subb
sti
and
cmp
or
mov
pop
jb
mov
mov
cmp
loope
lock
adc
inc
js
call
pop
cmc
bound
mov
add
add
xchg
fs
loopne
mov
fsubrs
jg
fnstsw
mov
in
jnp
jg
pusha
jno
mov
mov
xchg
pop
dec
jmp
push
mov
shll
ss
pop
xor
dec
std
testl
jb
pop
inc
imul
in
jmp
mov
ret
mov
aad
rorl
mov
and
scas
inc
test
fs
jo
mov
sub
int3
ja
outsl
and
jg
xchg
adc
adc
out
mov
pop
xchg
cmp
ss
sbb
mov
xchg
push
jecxz
iret
ret
jg
cmpsb
mov
fst
js
lret
shlb
push
dec
xchg
or
jecxz
pop
sbb
inc
xchg
pop
and
mov
fwait
cmp
fsubrl
pop
call
iret
fs
add
mov
shr
movb
imul
jb
pop
inc
adc
xchg
int3
mov
daa
mov
pop
jne
scas
pop
outsl
mov
lcall
fs
js
add
push
mov
mov
cltd
xor
inc
mov
sub
xchg
xor
inc
enter
cmpb
dec
and
mov
cli
inc
pushf
add
inc
jns
fistps
push
leave
sbb
xchg
insl
ret
or
mov
stos
outsb
mov
int
pop
ret
adc
loopne
fistl
mov
movsb
jecxz
push
mov
stos
pop
filds
call
xchg
sbb
jbe
in
mov
jne
mov
outsl
addr16
arpl
cmp
inc
add
inc
sub
jo
sbb
jbe
add
test
ja
inc
dec
ret
scas
in
mov
mov
push
pop
pop
jo
lea
and
stos
adc
pushl
cmp
icebp
pushf
cmpsb
ss
mov
pushf
xor
addr16
mov
mov
ds
or
pop
sbb
aaa
js
mov
fwait
lds
inc
push
cmc
ja
mov
int3
mov
out
cmpsl
xor
xchg
dec
sub
ljmp
ficompl
xchg
icebp
addb
pop
adc
stos
and
shrl
cwtl
imul
ret
out
dec
sbb
jb
sbb
cmp
dec
insb
pop
dec
test
loopne
movsb
mov
add
aad
in
test
mov
jmp
sub
xor
sbb
insb
xchg
arpl
or
daa
leave
es
mov
mov
and
js
clc
daa
push
push
lcall
jae
ret
add
and
dec
or
es
in
dec
mov
pop
pop
jae
es
fildll
ret
xor
nop
add
cmpsl
sub
or
insl
cwtl
lods
add
push
dec
in
pop
cmp
push
lock
cwtl
daa
cmp
addr16
xor
pop
push
ja
or
fnstsw
lret
push
push
cwtl
aas
sub
or
in
icebp
int3
lods
insl
or
lahf
mov
fucomip
inc
aad
mov
pop
mov
jle
mov
imul
lea
add
iret
loopne
mov
scas
shrl
shl
adc
rorb
mov
and
lods
cwtl
jb
aas
xlat
inc
dec
pop
insb
add
stos
push
mov
dec
ja
sub
lret
fnstcw
mov
xchg
arpl
in
mov
ret
jecxz
js
adc
out
addl
shr
pop
push
xchg
inc
inc
and
pop
test
xor
cmpsl
cmp
les
mulb
mov
or
mov
push
xchg
in
pshufw
aam
xchg
xor
out
push
or
fs
push
dec
jcxz
cmc
loope
jmp
xlat
jg
adc
push
jne
lahf
clc
inc
mov
mov
dec
dec
adc
test
xor
fwait
add
stos
jns
pushl
rol
ret
add
jge
stos
daa
push
fstpl
dec
jecxz
ja
jno
leave
mov
fwait
imul
pop
in
adc
xorl
xor
in
inc
arpl
imulb
sub
bound
bound
iret
es
dec
cmpsb
adc
cmp
jno
cmp
push
nop
add
iret
or
sbb
jle
dec
xchg
sbb
inc
call
out
js
inc
pop
movsl
sahf
jp
jl
xor
enter
notl
sbb
pop
out
enter
notl
js
test
push
mov
mov
jp
popf
in
stc
cltd
movsl
adc
push
jecxz
test
mov
orl
cwtl
and
and
push
xor
pop
push
out
bound
icebp
mov
inc
push
pop
xor
jno
stos
lds
sub
mov
clc
mov
xor
fstps
lds
sub
fisubs
xchg
mov
jb
sbb
xchg
xorl
imul
sub
mov
and
mov
stos
xchg
jb
arpl
loop
lds
pop
dec
mov
jg
push
call
lret
inc
jecxz
sbb
daa
mov
add
sti
mov
mov
cltd
push
sbb
fisubs
imul
push
inc
jns
pop
inc
aam
xor
or
int3
jmp
pop
mov
aas
jne
sbbl
xor
cmc
inc
das
lock
mov
ljmp
cmp
cmpsb
sbb
stos
in
mov
jnp
and
jne
les
out
les
pop
iret
aaa
mov
ud1
jns
and
inc
into
outsb
mulb
out
add
and
out
or
and
out
push
push
imul
arpl
mov
sub
inc
xor
push
dec
xchg
push
and
mov
aaa
daa
sbb
lock
loop
loopne
inc
mov
mov
cmp
in
mov
imul
bound
outsb
sub
push
pusha
mov
push
mov
stos
mov
nop
jmp
scas
aas
mov
cmp
iret
xchg
add
lret
mov
jle
xchg
std
les
or
push
les
or
fsubrl
nop
mov
ds
pop
pop
pop
jg
pop
add
cmpsl
fxch
lea
pop
cmp
ja
cld
adc
je
jnp
jp
cld
sbb
sbb
xchg
ljmp
sahf
inc
enter
enter
cmp
pop
adc
ret
or
mov
scas
push
push
mov
outsl
add
aad
ret
mov
scas
push
push
mov
mov
scas
inc
or
mov
scas
push
push
mov
cld
mov
sbb
add
repz
sbb
add
add
ret
jge
iret
or
lcall
adcb
cmp
in
ret
jbe
and
cmc
aam
mov
jle
and
adcl
sub
leave
mov
fwait
sbb
out
inc
add
jae
lcall
lcall
xor
xor
adc
psrld
icebp
pop
jno
push
sti
fdivl
cmp
sub
or
mov
mov
mov
jo
mov
roll
test
push
xchg
cmp
mov
outsb
jne
mov
mov
mov
jo
inc
fs
mov
inc
cmc
aas
dec
jmp
xchg
mov
add
cltd
ljmp
callw
rorb
outsb
test
add
push
test
and
adc
mov
adc
arpl
xchg
cmp
inc
dec
adc
enter
push
cmp
xchg
cltd
repz
and
call
cltd
repz
popf
fadds
sbb
scas
push
sub
fdivp
adc
jmp
lds
mov
pop
sub
or
shl
xchg
data16
or
jno
out
loopne
mov
sub
rcrl
dec
mov
int
out
cmp
or
cli
testb
ds
js
mov
jmp
add
push
mov
test
xlat
je
ficomps
pop
add
insl
mov
outsb
mov
mov
and
push
cmp
out
or
add
loop
mov
push
pop
in
scas
iret
testb
mov
or
jg
pop
faddl
data16
data16
test
daa
add
aad
jle
movsl
or
add
sbb
imul
mov
jo
outsl
test
nop
fadds
sbb
mov
mov
xchg
or
sbb
xchg
and
jbe
rorl
xchg
pusha
push
test
xor
ljmp
pop
cs
pushf
jae
cmpsl
cmp
nop
inc
test
xor
rorl
and
arpl
fistpl
bound
loope
cs
mov
dec
sub
clc
inc
xchg
cld
inc
shll
shl
add
dec
jb
repnz
dec
pop
test
xchg
jbe
repz
jg
add
push
push
out
dec
mov
lds
jae
lods
addr16
pushf
or
insl
in
call
push
add
outsl
mov
push
dec
pop
loope
mov
inc
xchg
mov
ds
addb
divps
aaa
ret
mov
add
sub
repz
aaa
push
testl
das
dec
scas
adc
push
sbb
nop
imul
loopne
lods
out
addr16
add
or
xchg
cli
pop
cmp
mov
mov
xchg
xor
xor
mov
lret
jae
and
xlat
cmc
add
bound
or
sbb
dec
ljmp
ja
or
aam
mov
jecxz
or
push
push
lods
icebp
movsl
adc
mov
mov
cwtl
xor
test
inc
scas
inc
fmulp
pop
div
mov
push
outsb
mov
std
out
sti
call
cs
jmp
mov
subb
jle
and
les
or
push
les
or
testb
in
pop
mov
or
sub
or
xchg
pop
add
adc
cwtl
outsb
jae
pop
pop
push
add
push
repz
cwtl
dec
fwait
push
sti
fadd
adc
xchg
add
sti
mov
lods
insl
popf
sbb
notl
adc
scas
mov
out
push
sbb
lcall
jge
out
roll
jl
int3
pusha
arpl
sbbl
mov
cmp
lret
int3
mov
mov
scas
and
test
push
push
test
scas
repz
shll
shll
movsl
fwait
pop
sbb
data16
ljmp
mov
aad
fistpl
jb
scas
in
adc
jp
scas
loopne
call
mov
pop
outsl
movl
sbbl
pop
outsl
add
and
xchg
dec
aad
xchg
data16
inc
rcl
mov
imul
dec
inc
add
push
cmp
mov
and
inc
cmp
sbb
push
fistpll
mov
sbb
jp
xchg
mov
adcb
push
adc
les
dec
and
es
pop
inc
es
rcll
scas
adc
ljmp
pop
data16
mov
sbbb
cmp
inc
jbe
push
sahf
xchg
jno
sbb
cs
push
jp
mov
mov
lret
mov
sbb
add
mov
cwtl
sbb
jns
jne
add
xchg
into
nop
call
stos
into
xchg
mov
mov
dec
lret
loope
mov
jo
sub
or
inc
sar
cltd
ret
idivb
popa
add
mov
adc
jge
xchg
pop
cwtl
stc
push
andb
or
add
into
mov
cmp
sub
mov
pop
fdivl
fdivrl
in
push
sti
and
test
outsb
xchg
dec
cmp
inc
sub
pop
test
dec
popf
xchg
cmpsl
add
mov
insl
mov
jnp
cmpsl
or
push
xchg
addr16
stos
push
leave
sbb
incb
or
fisttps
mov
in
mov
mov
icebp
xchg
mov
test
bound
dec
cmp
es
jne
mov
xchg
shl
xlat
mov
out
push
pop
mov
adc
adc
rcr
ja
mov
stc
mov
pop
xchg
in
mov
cmp
pop
mov
repnz
fldenv
pushf
mov
fldcw
sbb
xor
mov
loope
aam
faddp
dec
add
xlat
adc
xor
int
push
xchg
aam
mov
imul
mov
xor
cld
push
arpl
jae
aas
int
adc
or
jg
fs
mov
nop
inc
aas
mov
sbbl
scas
jbe
jl
push
int3
mov
mov
int3
in
fs
cmp
loop
outsb
jnp
and
xchg
dec
xchg
jmp
into
imul
push
mov
jmp
shlb
jne
dec
mov
and
pop
loopne
pushw
aas
or
movsl
and
sbbl
sub
sbb
ret
mov
and
mov
inc
sti
xor
fnsaves
push
repz
xchg
mov
imul
ds
add
mov
adc
pop
jnp
pushf
popa
out
mov
subb
inc
inc
imull
and
in
inc
adc
cwtl
xchg
sub
int
enter
mov
ret
fistl
in
stc
nop
cmpsb
sbb
fwait
leave
repnz
and
push
data16
dec
lea
lods
pop
inc
idivb
es
mov
test
imul
lret
lret
and
jo
bound
lds
push
pop
arpl
dec
adc
xor
push
sub
inc
push
mov
std
test
cmc
pop
push
ret
jno
int
xchg
jmp
shld
call
fldenv
das
test
fisttps
jl
sub
jecxz
jmp
inc
scas
in
hlt
rol
fdivr
jnp
push
icebp
add
mov
push
popf
push
sub
xor
adc
leave
push
ret
cmp
ja
dec
loope
outsb
scas
rol
push
lds
cmc
fisttpll
negl
or
lcall
lea
mov
cltd
and
and
dec
dec
lds
dec
xchg
sub
lea
jg
dec
in
iret
push
les
adc
adc
jg
test
int3
popf
jo
outsl
mov
inc
hlt
out
xor
push
jbe
xchg
cmp
mov
daa
sti
mulb
and
sub
aam
add
mov
jo
fcmovnu
aad
mov
and
aam
repnz
ret
add
pop
out
push
testl
push
jne
sub
movsl
test
push
fwait
xchg
inc
les
mov
das
shlb
scas
cmpsb
call
mov
adc
ss
and
cltd
push
sub
daa
cmp
dec
mov
int
outsl
cmp
das
sub
dec
rolb
cmpb
ja
dec
clc
nop
popf
test
and
int3
mov
test
xor
add
pop
mov
fcoms
xchg
cmpsb
imul
loopne
and
es
and
pop
iret
imul
cmp
or
daa
call
icebp
jb
mov
cmp
jecxz
repz
push
mov
pop
jb
ret
inc
add
ja
add
ret
inc
jl
add
jns
fmul
test
vminps
sub
sahf
mov
jo
jle
test
dec
rorb
ljmp
cwtl
add
adc
stos
lret
pop
test
mov
jo
lahf
mov
incb
inc
loopne
add
fsub
cmc
test
dec
nop
add
jbe
mov
lcall
fisttpl
decb
iret
xchg
mov
jp
jmp
cld
pop
xor
sub
movsb
insb
xchg
sbb
outsb
movsl
push
fdivrl
das
inc
pop
out
iret
or
sti
jns
and
mov
dec
cmpsl
jecxz
and
stc
call
dec
mov
mov
notl
cli
mov
shll
cmp
scas
pop
pushf
loop
aam
rorb
push
xchg
into
sarb
sbb
cld
adc
enter
jge
mov
in
nop
les
xor
xlat
hlt
scas
fs
add
ljmp
cmp
jnp
dec
pop
sti
inc
jnp
pop
push
push
popa
xchg
out
jle
loope
xchg
jb
repz
int
push
inc
imul
jae
fisubrs
push
clc
xchg
out
xor
loopne
cmp
mov
loopne
jnp
iret
je
mov
jbe
push
mov
paddd
out
int3
fcmovb
sbb
mov
aas
push
shlb
and
add
mov
arpl
sbb
inc
xlat
inc
test
test
inc
sbb
push
clc
pop
sub
icebp
std
pop
mov
loope
jge
and
inc
rcl
sub
adc
push
push
fimull
push
cmpl
cmp
sti
lods
popa
mov
mov
popa
inc
cmp
test
cmp
push
aam
xorl
pop
push
out
sbb
push
jbe
mov
nop
pop
jmp
pop
xlat
enter
mov
pop
add
inc
mov
mov
cld
lods
push
shll
shlb
adc
xor
dec
les
mov
repnz
or
in
sahf
and
cltd
pop
into
repnz
xchg
adc
push
push
mov
in
add
inc
mov
shrl
cmp
dec
pop
xor
lods
push
jl
and
enter
or
mov
lea
popa
push
rcrb
or
sub
gs
lods
mov
jmp
ficomps
push
mov
test
add
and
ljmp
std
xchg
xchg
popf
int3
enter
inc
pop
jecxz
cmc
out
out
inc
rorb
mov
aad
lcall
and
scas
jge
in
jg
repz
cltd
mov
test
cltd
pop
jb
xchg
xchg
xchg
imull
arpl
nop
lds
mov
mov
xchg
icebp
mov
or
ljmp
jnp
les
out
shll
lods
and
mov
xchg
in
test
pop
and
mov
jbe
dec
sbb
and
push
pop
jns
and
xchg
je
mov
dec
and
cmp
mov
repz
cmpsl
cmpsl
ffreep
adc
mov
mov
xor
inc
mov
repz
in
fistl
inc
enter
in
mov
mov
inc
mov
pop
mov
dec
jns
out
sarl
cmc
or
pop
mov
pop
xchg
cwtl
jbe
leave
in
push
jbe
push
sub
pop
jns
sbb
lock
pop
push
loop
inc
inc
lahf
das
inc
lods
cwtl
and
add
mov
jae
and
or
jmp
and
arpl
sbb
lret
sbb
sahf
pushf
insl
test
je
sahf
push
ret
leave
push
inc
in
ss
sbb
inc
rorl
adc
jmp
cmpsb
mov
push
mov
adc
insl
push
sbb
loope
test
adc
cli
add
ss
loop
das
ljmp
jbe
dec
sub
not
sub
repnz
mov
add
xlat
cltd
add
rorb
cmp
jnp
pusha
stc
scas
sub
mov
sbbb
lock
clc
mov
addr16
jp
sbb
push
pop
lds
jle
out
mov
pop
shrb
ret
rcrb
adc
lret
jecxz
jb
pusha
mov
aam
addb
mov
lahf
push
xor
inc
lods
push
mov
lods
mov
mov
cmp
mov
sahf
mov
add
jne
push
mov
cwtl
outsb
jns
pop
add
ja
and
lock
pop
in
jg
sbb
sbb
dec
pop
jae
jecxz
mov
jp
pop
sub
fldl2e
adc
xchg
sbb
les
mov
loopne
imul
mov
cmp
dec
mov
stc
pop
xor
pop
addb
push
sub
fidivrl
inc
sarl
ret
jns
cmp
jmp
sarb
mov
scas
inc
leave
ret
mov
xor
push
mov
test
sub
mov
div
pop
mov
aam
js
idivl
fs
lcall
test
pop
fsubl
xor
xchg
rorb
lods
cmpb
fimull
jg
xor
inc
sti
pop
adc
and
imulb
and
ret
add
push
mov
push
pusha
rcl
outsb
cmpsl
xor
test
add
add
mov
xorl
fcmove
inc
sbb
test
std
and
pop
xchg
cwtl
jbe
leave
in
cmpsb
adc
mov
rcrl
std
testb
es
jb
sbb
scas
fs
dec
movsl
xlat
pushf
pushf
mov
jg
cltd
sbb
xor
mov
subl
in
xor
xor
cmpsl
pusha
mov
iret
orb
mov
jno
outsb
push
cmc
mov
mov
or
lret
leave
sbb
sbb
xchg
in
inc
mov
inc
lods
pop
jns
in
mov
ja
xchg
dec
mov
cmp
xchg
ret
mov
mov
xor
cmp
mov
rcr
and
mov
add
cmp
addr16
lock
mov
dec
repz
mov
sub
stc
xor
jb
leave
jbe
jb
lds
scas
jbe
and
test
je
or
test
ret
xchg
xor
add
fucomip
mov
js
hlt
push
push
shr
fs
xor
shlb
sbb
inc
pop
push
test
or
loope
mov
inc
dec
jb
cld
inc
dec
cld
imul
adc
sbb
mov
icebp
in
cs
xchg
cmp
sbb
inc
test
rol
xchg
notrack
rorl
inc
scas
loopne
rcll
movsl
or
mov
aam
movsl
insl
rcll
pop
cwtl
pop
or
mov
sbb
sbb
and
jge
xor
xchg
mov
sub
shlb
imul
push
sahf
jbe
jg
jb,pt
mov
fists
mov
xchg
xor
mov
movsb
add
or
fcmovb
ds
mov
and
mov
stc
sbb
sbb
mov
nop
aad
jle
gs
imul
mov
adc
or
lea
dec
imul
sbb
cli
ljmp
test
dec
fcmovnb
mov
adc
fildll
jecxz
xchg
ja
lea
lret
pop
arpl
jne
es
pop
sbb
ss
add
inc
call
sahf
or
repz
test
adc
mov
adc
lea
mov
mull
lods
inc
das
pushf
push
mov
ret
xor
jl
repnz
dec
lcall
mov
cmp
sub
aas
jmp
adc
scas
sub
and
loope
nop
xchg
shl
push
subl
js
inc
push
push
push
sub
fwait
jmp
xor
cmp
mov
dec
mov
dec
nop
lahf
lcall
pop
adc
jg
add
mov
lahf
adcb
mov
out
sub
daa
add
mov
mul
sub
cmp
in
pop
add
xor
sti
aas
test
hlt
xor
xor
icebp
in
pop
mov
xor
int
adc
shl
cld
sub
push
xchg
cmp
mov
push
lret
dec
dec
aas
xor
push
fisubl
sbb
call
xchg
imul
sbb
in
mov
push
call
cli
popf
pop
sbb
lahf
sbb
jbe
adc
sti
xchg
shll
push
int3
pop
inc
daa
dec
sar
xor
sti
adc
loop
mov
lock
shlb
dec
jmp
mov
and
pop
push
inc
shll
rcrb
mov
leave
mov
lock
dec
int
dec
jnp
dec
sub
mov
sbb
or
ror
inc
scas
inc
or
rcll
inc
jl
sbbb
bound
mov
fisttps
pusha
icebp
inc
mov
xchg
sbb
stc
sbb
cltd
pushf
jmp
add
ret
int
das
dec
jae
jns
pop
dec
dec
mov
xor
test
out
cmp
mov
cmpsb
daa
cmp
cmp
ss
jmp
data16
xor
pop
push
jmp
inc
mov
lahf
jns
fadds
sub
or
in
mov
insb
fsubp
clc
pop
xlat
lret
rorl
cmp
in
std
gs
adc
stc
fstl
mov
inc
cmp
insb
inc
push
hlt
dec
push
push
popl
xchg
fcoms
data16
rcrb
push
stos
mov
push
cltd
fisttpll
mov
mov
clc
mov
mulb
mul
cmc
rcrb
mov
mov
mov
xchg
mov
sahf
cmp
jne
lods
push
dec
mov
push
mov
test
leave
pop
cwtl
fs
out
xchg
rorb
xor
out
or
mov
mov
mov
sbb
enter
xchg
loope
cmc
ljmp
in
lahf
cld
nop
xchg
bound
sub
shrl
pop
jp
bound
mov
call
and
mov
cs
xlat
dec
sub
imul
lock
daa
adc
imul
pop
jns
mov
rorb
cmp
xchg
xchg
sbb
sub
std
cld
cmp
sbb
movsb
imul
xor
int
inc
imull
mov
pushf
lock
mov
xor
aad
imul
lods
into
cmp
pop
stos
inc
test
dec
test
mov
testb
xor
jbe
cmp
or
dec
add
in
out
pop
inc
dec
ss
iret
lret
push
insb
cmp
jae
or
cmp
xchg
cmc
sbb
loopne
jp
cmp
push
shll
es
clc
cmp
mov
jae
pushf
addr16
adc
sbb
xchg
mov
xchg
dec
in
mov
outsb
sbb
mov
dec
adc
shlb
inc
mov
pop
sub
xchg
cs
out
fdivs
lret
orb
mov
mov
add
pop
xor
divb
loopne
shll
inc
jb
xchg
cmp
and
test
andl
dec
outsl
lods
shr
adc
idiv
fnsave
add
and
inc
jecxz
mov
cmp
test
lcall
into
fcomi
dec
nop
mov
ds
lcall
xor
mov
pusha
or
pusha
fidivl
push
mov
sub
pop
iret
add
jl
dec
push
mov
inc
jno
cmpl
xor
cli
jbe
xor
repnz
xchg
je
or
jl
and
pop
xchg
dec
add
sub
mov
neg
insl
popa
xchg
mov
push
mov
mov
ds
mov
sub
pop
mov
or
sub
int3
pop
int3
jle
icebp
aad
dec
mov
sbb
leave
fucomi
cmpsl
leave
jbe
bound
jns
adc
mov
sbb
mov
mov
fstl
fincstp
jl
mov
cmpsb
insl
cmp
push
test
jns
pop
cmpsl
rcrl
sub
out
xor
adc
xchg
inc
ljmp
or
imul
imul
lock
decl
ficoml
cmp
add
add
in
and
push
sahf
mov
movsb
xchg
or
adc
lock
iret
mov
ret
mov
xchg
sbb
mov
hlt
mov
push
ret
enter
ja
xchg
and
mov
mov
fstpl
mov
inc
fiaddl
in
xchg
and
and
dec
pop
xchg
stos
mov
arpl
xchg
int
xor
dec
push
mov
push
mov
rorb
add
scas
inc
inc
orl
sbbl
push
mov
mov
push
dec
frstor
arpl
out
xorl
stos
inc
out
popa
fnsave
frstor
sub
or
scas
and
adc
fsub
mov
pop
and
lock
jnp
and
lret
testb
ds
push
adc
dec
cld
push
sub
or
jecxz
cmpsl
pop
sbb
add
sbb
in
jae
and
in
pop
mov
in
dec
push
mov
pop
sbb
cmp
mov
add
int3
arpl
xchg
mov
and
subl
inc
pop
bound
loopne
pusha
scas
popa
push
mov
insl
fwait
add
cmpsb
insb
ja
sub
cmp
loope
rorl
add
sub
in
in
pop
popa
add
scas
cmp
adc
fdivrl
in
push
ljmp
mov
add
jl
cmp
pop
into
jbe
xchg
xor
int
fwait
push
int
or
adc
ja
movsl
sub
icebp
daa
in
aaa
movsl
add
push
stos
dec
or
movsl
cmc
lret
adc
push
and
push
mov
push
dec
popa
push
jns
pop
je
bound
pushf
xchg
shll
sbb
mov
or
fs
inc
repnz
iret
pop
xchg
and
mov
fistpl
je
dec
mov
andl
inc
and
sub
dec
test
dec
fbstp
fldt
pop
notb
movsl
js
dec
inc
xchg
test
mov
adc
int
movsb
adc
mov
inc
mov
pusha
lcall
iret
sub
fstpt
xchg
sarl
push
int3
or
test
pop
pop
pop
jns
repz
and
lcall
inc
cwtl
lock
lcall
add
sub
repz
rcl
xor
shr
mov
dec
std
mov
push
or
clc
inc
push
imul
lods
orl
xor
test
movsb
data16
popa
mov
jle
ljmp
sbb
or
push
mov
test
sub
push
addr16
push
pop
out
inc
sbb
imul
xor
sti
fstpl
xchg
cmp
mov
fisubrs
ljmp
cmc
in
bound
adc
dec
lods
cmc
sbb
movsl
inc
in
aad
decl
mul
hlt
sbb
jb
push
aam
mov
fs
mov
pop
je
xor
mov
testb
aas
mov
xorl
je
les
mov
aad
push
push
cmpsb
pop
std
movsl
sbb
sbb
inc
addr16
lds
popa
add
lret
fidivl
mov
xor
cmp
popf
outsb
mov
push
lds
or
dec
mov
popa
dec
mov
loope
ret
mov
xor
dec
movsb
ljmp
jle
lahf
mov
sti
mov
jg
inc
push
inc
mov
or
mov
popa
inc
rep
sbb
or
or
inc
stc
dec
sub
call
sti
pop
scas
ljmp
mov
ret
test
mov
imul
push
mov
roll
jae
notb
outsl
and
cmpb
pop
push
pusha
and
xchg
fucomip
jmp
jb
pop
sti
pop
ljmp
pshufw
outsl
fadds
sbb
jmp
aam
lods
pop
inc
icebp
test
mov
jbe
adcl
mov
sbb
or
arpl
incl
nop
jl
imul
das
push
pushf
push
xor
ds
and
xchg
adc
dec
adc
test
cmp
lock
out
leave
xor
jne
push
pop
test
mov
leave
sbb
cmpb
icebp
xor
jns
pusha
enter
mov
js
add
mov
cmp
cmp
loop
icebp
cwtl
in
sub
ja
pop
inc
int
xor
shl
repnz
cmp
mov
jp
arpl
mov
fildl
cwtl
and
mov
mov
popa
lcall
or
mov
iret
enter
push
mov
lahf
push
movsl
add
and
push
leave
xor
popf
iret
mov
ror
orb
ja
loope
das
mov
notl
bound
mov
jmp
or
jnp
pop
dec
cmp
or
push
pop
mov
adc
push
es
cmp
sahf
enter
loope
add
aam
mov
int
mov
adc
orl
push
mov
lds
jb
cmp
stc
icebp
mov
xorb
push
jnp
adc
movsb
imul
dec
xor
je
pushf
fwait
adcl
out
ret
dec
fwait
jmp
and
outsl
sub
adc
movsl
inc
inc
lret
jbe
dec
pop
lcall
ret
pop
inc
push
pop
mov
inc
sbb
mov
lds
lea
mov
imul
out
aaa
cld
out
sbb
sbb
jg
mov
daa
loope
inc
ret
push
xorb
insl
int
and
iret
or
mov
sbb
mov
jne
icebp
fwait
into
mov
sbb
xor
lahf
push
push
sbb
jno
add
loop
testl
adc
stc
push
imul
cltd
fwait
jnp
repnz
add
xor
mov
adc
movb
jne
cmp
pop
pushl
pop
sbb
cmp
nop
jge
mov
ss
cmpsb
popl
pushf
xchg
test
loope
inc
jecxz
or
loop
movsb
sti
aam
push
in
icebp
pop
sub
sub
sub
cmp
xorb
insl
int
subb
bound
testl
sub
add
dec
testb
pop
mov
adc
stc
jl
xchg
sahf
push
cmp
in
les
sahf
dec
mov
test
and
fisubs
xor
push
mov
jne
mov
mov
cmp
cltd
and
vshufps
cltd
xor
dec
or
aaa
rcll
cmp
adc
or
out
cmp
fwait
push
or
mov
loope
in
in
cwtl
inc
rcll
mov
mull
fldcw
arpl
pop
imul
movsb
pusha
lock
mov
jecxz
mov
dec
add
cmp
dec
sub
out
clc
fwait
mov
jmp
jmp
fldt
cmpsb
clc
mov
imulb
fcmovbe
sub
hlt
cld
and
mov
addr16
fdivs
pop
jns
push
push
lods
jle
add
jnp
cmp
and
shl
mov
mov
push
cmc
popf
add
jecxz
cmpb
mov
cs
sub
ret
daa
adc
sub
pop
mov
push
sti
sub
fs
sub
xor
cld
mov
rcrb
lret
jne
and
adc
icebp
fsubs
repz
out
xor
adc
sbb
cmp
or
jne
sub
xor
inc
mov
imul
mov
jns
cmpsb
inc
insl
mov
int
lahf
push
ret
dec
add
inc
push
mov
fmulp
xor
enter
fnsave
sbb
pop
insl
jle,pn
dec
pop
push
shrb
mov
sub
or
xor
iret
hlt
lret
lods
loop
fadd
jmp
mov
push
lret
imul
imul
out
mov
xorl
and
sub
mov
rcrl
and
dec
aas
lods
rclb
stos
mov
adc
push
repnz
push
mov
push
pop
adc
mov
mov
pop
in
mov
cmp
fildl
sbb
jae
jb
cmp
les
sahf
daa
into
test
sahf
imul
fistl
sub
push
pop
aaa
clc
mov
fdivs
insb
test
mov
push
rorb
xchg
ja
xchg
rclb
xor
setno
add
pusha
movsb
movsb
stos
movsl
mov
mov
mov
sub
jbe
lret
fdivs
outsb
popa
arpl
push
lods
mov
inc
or
dec
bound
mov
in
dec
adc
mov
mov
out
outsl
aam
or
das
push
adc
cmc
push
std
fdivl
cmc
js
lea
dec
int
in
lahf
sub
mov
ja
or
out
or
push
shrb
add
fisubrl
jbe
insb
stos
mov
cmpsl
jnp
fldl
xchg
fdiv
jg
int3
es
push
sbb
xchg
inc
push
in
pop
cmp
add
rcrb
and
sub
xor
jb
test
cmp
addr16
in
cmp
pop
repnz
test
sbb
xor
mov
and
jle
xor
cmpsl
andb
iret
push
or
add
out
jecxz
je
movsb
jle
dec
daa
dec
movsb
rolb
dec
sub
push
roll
std
in
and
mov
push
scas
or
push
lahf
bound
xor
leave
leave
int
sti
scas
aam
fcompl
std
nop
add
dec
cltd
scas
dec
pop
fldcw
out
stos
scas
arpl
shrb
add
dec
dec
mov
rcrl
cmc
or
test
clc
hlt
pop
cmp
and
dec
in
mov
jae
pushf
inc
cmpsb
pusha
mull
pop
add
mov
inc
jecxz
pop
sbb
sub
icebp
mov
leave
movl
cwtl
and
mov
mov
mov
or
sbb
pop
lret
into
add
test
imul
push
adc
pushf
pop
and
movsl
pusha
popf
mov
js
xchg
lock
sub
fisttpll
loop
mov
cli
sbb
mov
mov
stos
cli
sub
insl
lods
xchg
push
bound
pop
and
mov
cmp
lods
ret
repnz
and
sub
pop
inc
rcrl
mov
mov
inc
mov
jae
mov
adcl
sub
lea
int3
js
jmp
call
and
push
and
sahf
push
or
xchg
push
or
fs
or
or
sarb
cmp
or
cli
sbb
inc
idivl
std
add
pop
scas
mov
mov
shrl
pop
testb
push
mov
insb
inc
inc
mov
cmp
xor
andl
fwait
xor
mov
fwait
leave
repnz
or
dec
dec
lahf
xlat
inc
mov
push
sub
in
add
aad
inc
mov
loopne
stc
stc
xor
adc
pop
dec
pop
cmpsb
in
test
xor
jp
dec
jnp
cld
inc
arpl
adc
arpl
dec
fcmovne
jne
pop
clc
aad
xchg
fimull
sub
ret
add
mov
stos
push
pusha
cmpsl
stos
imul
clc
fstpt
or
pop
std
jl
xchg
or
mov
cmp
icebp
in
add
adc
rcrb
dec
mov
leave
js
xor
adc
inc
pop
cmc
adc
xchg
fdivrp
mov
xor
aaa
sbb
or
fsub
dec
nop
testl
hlt
xchg
adc
ret
push
lds
out
out
pop
dec
pop
imul
mov
sbb
movb
adc
cmp
jge
add
sub
insl
stos
imul
inc
das
lods
in
xchg
sarl
sub
mov
cmpsb
push
outsl
mov
mov
xchg
arpl
adc
jl
sti
sub
outsb
iret
mov
test
ret
xchg
jns
hlt
mov
out
sub
stos
push
stos
cs
clc
xchg
imul
clc
or
dec
dec
fiaddl
adc
daa
cmp
fwait
lret
push
adc
scas
cli
cmc
daa
jb
push
sub
xchg
push
mov
cmpsb
stos
jns,pt
ss
int
rolb
jg
inc
movntq
es
inc
popf
mov
or
jo
ja
sbb
cltd
test
sub
test
gs
popf
into
push
outsb
loop
and
adc
fisttpll
daa
pop
out
jns
sbb
and
adc
and
cmova
inc
lcall
data16
std
jmp
xchg
rorl
push
pop
sbb
inc
pusha
ds
xchg
test
fs
dec
lahf
cs
sub
xor
cs
daa
mov
mov
lods
ljmp
pusha
cmpb
lods
scas
xlat
pop
mov
std
addb
insb
mov
inc
xchg
in
mov
fs
pop
xchg
mov
sub
sahf
push
sub
in
fisttps
lret
inc
mov
mov
or
andl
pop
je
bound
sbb
ljmp
test
cs
popa
lcall
mov
movsl
nop
fistps
loopne
out
sub
xor
push
movsl
bound
test
ret
xchg
push
filds
in
enter
push
pop
xchg
popf
fbld
lock
imul
mov
into
repnz
and
add
sbb
push
pop
addb
scas
jo
sub
pop
pop
shll
aas
xor
inc
dec
lahf
mov
dec
insb
pusha
out
js
sbb
mov
mov
mov
jne
out
je
jge
mov
cmp
movsb
mov
js
or
mov
or
fnsave
in
mov
jne
sub
xchg
ds
decb
lret
cli
dec
lcall
aas
adc
fcmovnu
mov
xchg
cmp
xchg
outsb
adc
push
ja
dec
jl
jne
jle
outsb
sub
cmp
add
adcb
enter
pop
adc
loopne
pop
mov
sbb
push
jne
scas
inc
sbb
repnz
xchg
xchg
or
outsl
movsb
repz
and
ja
dec
xor
mov
push
mov
lret
or
out
subl
lcall
push
ret
insl
scas
add
test
fcomps
xchg
aad
dec
fbstp
sub
push
fdivl
inc
in
or
outsb
inc
js
pusha
xor
loop
cli
in
push
ja
cwtl
mov
xchg
xchg
loope
imul
xor
xchg
sub
pop
dec
sbb
pop
mov
orl
and
adc
xchg
mov
fisubs
jp
push
sub
or
dec
xchg
enter
and
pop
push
mov
inc
std
xchg
push
cmp
lods
inc
test
sbb
stc
repz
jns
push
jmp
test
mov
xor
and
ss
test
fistl
in
push
pop
jae
xor
inc
add
and
mov
fildl
lods
sub
xlat
fwait
jge
sbb
add
aad
mov
je
imul
adc
ret
test
repnz
sbb
jecxz
cmp
bnd
dec
mov
xor
inc
test
cmp
pop
dec
lock
fldcw
mov
outsb
fadd
je
loop
lea
jne
rclb
inc
mov
push
and
mov
sub
aas
insl
insb
mov
cmpb
shll
jbe
mov
and
pop
jp
and
and
jne
dec
mov
sti
mov
push
cmc
add
out
push
ret
jne
mov
stc
mov
nop
adc
imul
pop
adc
sbb
push
hlt
dec
je
imul
fldcw
aas
adc
and
rorl
jmp
out
fcmovb
sub
test
shll
imulb
outsl
xchg
negl
mov
lods
pushf
loopne
mov
lock
pop
adcb
and
and
pusha
sti
frstor
fisubl
and
mov
adc
dec
rcll
fs
aaa
mov
cwtl
push
xor
inc
insb
incb
in
sarb
repz
popf
inc
mov
aas
loop
pop
xchg
adc
xchg
pushf
out
das
stc
lods
pushf
cmp
roll
mov
pop
pop
pop
outsl
lret
enter
loop
outsl
xchg
insb
cmovg
shll
cmpb
pop
xchg
sbb
jecxz
repz
movsl
lods
xchg
pop
ja
test
sbb
push
push
mov
inc
scas
push
pop
xor
loopne
dec
mov
xchg
xor
stos
pop
adc
mov
jb
sbb
test
cmpsb
mov
lahf
dec
lds
add
cmpsl
inc
stc
jge
sbb
add
scas
push
fs
xchg
popf
jg
ljmp
pop
lcall
jnp
je
or
or
idivb
add
ss
pop
mov
dec
mov
sbb
or
xchg
jnp
mov
dec
pop
push
dec
fimull
aas
stos
stc
dec
pop
enter
adc
push
adc
out
lret
andb
jmp
push
dec
and
and
inc
xor
iret
stos
les
sar
stos
std
addb
dec
negl
jbe
scas
push
movsl
mov
or
sti
mov
push
fucomp
aad
test
std
imul
jnp
movsb
jo
push
dec
cmpsb
sbb
xchg
mov
sarb
and
insb
sbb
psubd
jo
mov
pop
add
rcrl
pusha
cmc
mov
lods
push
or
sub
loope
and
and
hlt
cmp
or
xlat
js
filds
dec
arpl
sbb
in
xchg
lods
in
adc
dec
push
or
lret
clc
out
cmp
pop
mov
push
xor
push
and
mov
loopne
shll
push
sbb
icebp
hlt
movsb
ficomps
iret
jnp
xchg
call
stc
fiadds
inc
fmull
pop
popf
dec
jmp
movsb
nop
sub
mov
jmp
inc
push
jg
or
mov
add
inc
jnp
inc
movsb
adc
xlat
dec
dec
ret
ds
xchg
lods
inc
pushf
cli
icebp
test
insl
repnz
adc
popf
pop
mov
inc
adc
xchg
jp
enter
jp
mov
movsl
inc
clc
sbb
xor
mov
inc
dec
cld
mov
xchg
jae
add
lea
imul
lahf
cmpl
jno
xor
cmp
sbb
aam
sbb
sbb
subb
inc
cs
test
and
in
sub
rolb
insb
inc
jge
cltd
inc
and
and
daa
mov
fdivrl
xchg
jl
cmp
dec
inc
dec
leave
push
pop
pushf
mov
dec
pop
jp
or
ret
mov
jecxz
enter
jmp
lea
nop
int3
icebp
int
bound
testl
aaa
cld
mov
notl
test
mov
and
shr
fists
pop
add
stos
push
incb
adc
out
test
sbb
pop
or
sub
push
jl
repnz
cmp
or
or
jb
fwait
xor
sbb
inc
movsb
ja
sarl
sti
mov
pop
into
xchg
adc
adc
dec
xchg
xchg
mov
ficompl
mov
fstpt
leave
cmp
mov
sti
mulb
loopne
xor
jo
rolb
pop
loope
bound
cmp
mov
adc
mov
sub
and
mov
dec
loop
les
das
jg
mov
push
jb
insl
mov
adc
int3
cmpsb
aam
inc
dec
lods
or
data16
sbb
jmp
test
add
xchg
lods
lock
repnz
out
cmp
scas
and
jae
jge
add
adc
mov
lret
adc
dec
and
lret
sub
adc
xchg
std
cmp
pusha
into
mov
testl
sub
rcll
in
mov
sub
push
mov
pop
scas
pop
inc
mov
adc
fstl
stos
add
sbb
hlt
insl
mov
push
mov
sub
pop
sbb
js
xchg
mov
mov
jp
fistpl
add
into
dec
push
cmc
push
insb
xchg
popa
movsl
fstpt
xor
aas
sbb
or
cmp
or
push
rcll
push
mov
sub
pop
xchg
in
dec
rcrl
repnz
cmp
mov
stc
insb
lds
testb
lret
ret
fbstp
jmp
insl
pop
scas
mov
dec
sarb
pop
ss
and
mov
xchg
icebp
stos
pop
aam
lret
sub
dec
jg
dec
xchg
pop
je
jo
sub
xchg
adcl
scas
mov
mov
cmc
sar
int3
stos
push
nop
cli
cmp
push
pop
mov
sub
andb
les
cmp
jb
pop
sahf
bound
mov
sahf
add
mov
rorb
fadd
xor
aaa
xor
xor
pop
mov
popa
xor
adc
lds
or
bound
xor
jno
inc
dec
negl
cmc
push
arpl
lock
loop
cs
and
stos
jae
imul
out
aas
push
push
mov
mov
int3
outsb
pop
cmpsl
mov
and
xchg
lea
pop
stos
inc
dec
movsb
xor
imul
in
jno
fptan
sbb
adc
imul
mov
mov
and
sbb
dec
fcoml
inc
sbb
dec
nop
push
mov
mov
shll
fdivrp
xchg
sbb
mov
sub
inc
sub
aaa
push
js
xor
mov
in
mov
jl
mov
cmp
sbb
add
cwtl
stos
je
add
push
xlat
and
sbb
xor
popa
sub
push
cwtl
into
mov
sub
jecxz
adc
sub
adc
inc
lods
fmull
push
out
fs
and
inc
cli
inc
xchg
clc
daa
xor
cmp
cmp
pusha
sbb
cli
cli
sahf
lock
inc
stos
mov
int3
sub
cwtl
pop
shll
pop
in
insl
xchg
out
add
lods
daa
cmp
pop
in
negb
sub
lret
mov
and
dec
sbb
fisubrs
nop
jge
stos
push
test
cmpsl
inc
sub
lcall
pop
test
sub
adc
ss
aas
lldt
movsb
jmp
sbb
mov
jp
xor
movsl
fiadds
mov
inc
and
pop
pop
daa
in
cli
jne
rclb
icebp
repz
or
sbb
and
mov
shrb
fstps
push
jge
fsubs
mov
mov
or
and
lcall
mov
stos
mov
shll
test
pushf
lock
outsl
inc
mov
xchg
jnp
adc
arpl
sub
popa
xor
jl
aas
dec
sbb
cmp
lret
outsl
mov
push
bound
stos
lahf
rcrl
pop
aam
icebp
shr
lods
sub
out
std
pusha
test
out
fsubrs
add
mov
xchg
and
mov
fs
lret
jecxz
adc
int3
mov
fistpll
ds
in
xchg
push
xchg
in
subb
comiss
jo
sub
in
lock
lcall
fwait
lret
js
xchg
and
clc
clc
lods
mov
mov
in
dec
inc
xchg
jne
add
add
cmpsb
jne
or
add
pusha
push
jbe
rorl
stos
push
mov
xlat
adc
lcall
sbb
out
mov
test
in
mov
int3
ss
mov
mov
adc
testb
mov
out
lcall
adc
or
xchg
inc
mov
loopne
nop
mov
xchg
pop
inc
subl
bound
xor
in
mov
lret
lds
js
jae
cli
rclb
aas
enter
test
sub
mov
push
cmp
push
rolb
jp
fs
outsl
sbb
dec
xchg
popa
cs
aaa
add
mov
inc
sti
inc
or
loope
dec
pop
dec
mov
rcl
arpl
icebp
mov
sti
sub
inc
mov
and
daa
les
cs
rorb
cltd
mov
mov
pusha
ds
in
mov
es
pusha
dec
sub
and
dec
dec
dec
or
mov
and
sti
push
enter
pop
inc
adc
repz
mov
or
push
xor
popf
jge
cmp
mov
mov
cmp
jge
add
pop
and
int
jns
gs
cmp
imul
das
roll
dec
inc
std
cmpsb
testb
pop
stc
test
fidivrl
mov
sub
mov
and
sbb
add
push
mov
lcall
xor
sbb
imul
inc
bswap
sub
add
insl
lcall
or
or
js
xchg
rep
mov
dec
jns
scas
mov
push
dec
lret
out
sub
pop
loop
pop
cmpb
push
adc
add
cmpsb
icebp
int
push
mov
dec
add
jns
mov
jae
ds
test
dec
inc
scas
movsb
add
inc
lcall
fisubrl
imul
int3
cmp
jno
pop
ds
and
mov
ds
xchg
outsl
vprotd
and
jmp
cmp
and
adc
dec
mov
cmc
lea
cmp
fstpt
sbb
ret
in
mov
clc
ret
push
mov
out
test
cmc
add
inc
or
xor
mov
ss
sahf
jl
fnstcw
mov
int3
mov
add
aas
cwtl
pop
fucomp
jg
adc
xor
insb
pop
iret
inc
push
in
int3
cmpsl
dec
push
imull
lahf
mov
or
out
xor
inc
mov
sub
add
xor
pusha
lahf
je
daa
popf
repnz
mov
fs
mov
ficoms
mov
mov
adc
mov
adcl
xor
cmp
sub
cs
inc
pop
inc
pop
data16
mov
mov
sbb
sbb
and
jns
jns
jle
inc
and
sub
out
dec
ja
fcmovne
in
pop
lahf
clc
jno
je
inc
sbb
rol
dec
test
push
xchg
int3
add
push
sbb
movsl
cmp
sub
sbb
mov
mov
cmp
and
lds
ja
xor
jle
jle
lea
push
xor
scas
xor
pop
sub
and
and
inc
sbb
lods
outsb
imull
push
add
es
pop
in
push
sbb
mov
mov
xor
nop
cmp
pop
leave
push
jg
push
rolb
shll
xchg
iret
subl
sub
js
dec
fwait
jnp
ss
popa
inc
adc
cwtl
in
or
gs
or
iret
mov
icebp
inc
scas
jb
xor
jle
mov
movsb
jle
mov
cmpl
push
cmp
fnstenv
add
ljmp
mov
xor
mov
mov
mulb
mov
sub
call
cld
rcl
cmc
mov
repz
xchg
test
rolb
repnz
or
daa
test
cltd
incb
pop
iret
test
insl
scas
outsb
jp
lcall
mov
es
adc
xor
out
jle
pop
clc
or
sbb
inc
jl
fisubl
pop
add
fnstenv
repz
fdivrl
mov
mov
push
fnstsw
enter
add
cli
outsb
and
enter
rcpps
cmp
pushf
nop
out
sbb
mov
jno
and
xlat
and
popl
aam
push
sub
mov
insb
rcrb
pop
imul
cmp
jmp
and
sbb
mov
push
jg
enter
notb
test
pop
push
cmp
pop
scas
mov
daa
outsl
test
int
inc
aam
mov
inc
or
stc
rorb
arpl
std
popa
imul
ja
dec
into
in
outsb
shl
pop
loop
mov
dec
test
rolb
idivl
xor
aam
push
fstps
and
sbb
js
dec
arpl
sbb
test
pop
nop
cs
imul
mov
lahf
push
xlat
aaa
lret
pop
jnp
fnsave
mov
out
dec
pop
sub
sub
push
jl
push
ficompl
or
cmp
fiadds
adc
es
sahf
shr
out
xchg
and
mov
xchg
das
adc
das
movb
out
ljmp
sbb
xchg
fsubrl
dec
push
lea
xorb
xchg
or
call
mov
mov
jecxz
dec
sbb
std
outsb
push
sub
sahf
adc
cmp
pop
inc
fxch
mov
inc
lock
add
sub
jnp
mov
add
adc
push
fsubs
pushl
and
cwtl
incl
mov
aad
mov
movsl
inc
shll
pop
shll
cld
repnz
mov
test
lds
sbb
cltd
cmpsb
das
cmp
in
out
adc
mov
scas
push
stos
xchg
xor
je
fmuls
push
xchg
xor
push
adc
or
xchg
or
les
mov
icebp
shrb
xchg
and
cs
fwait
pusha
fnstsw
outsl
sub
xor
xchg
dec
insl
lds
sbb
inc
lahf
repz
iret
fstps
icebp
pushf
jecxz
insl
sbb
push
js
mov
jae
leave
movsb
inc
push
dec
fwait
xor
push
mov
lret
orb
icebp
inc
xchg
inc
push
mov
mov
jb
inc
jp
pop
cltd
sbbb
repnz
xchg
mov
xor
sbb
lods
idiv
clc
stos
leave
scas
xchg
xchg
lret
stc
lahf
jb
xrelease
jg
sub
and
jecxz
cmp
jbe
or
into
ja
enter
aad
inc
sbb
mov
mov
aaa
loope
bound
pushf
jbe
aad
cli
xor
jne
sbb
lret
test
xchg
push
inc
lret
shl
or
test
inc
pop
lahf
pop
mov
mov
sbb
mov
cwtl
jns
inc
jne
or
fisubrl
stc
cli
push
jg
leave
subl
pushf
dec
pop
lahf
sub
arpl
call
mov
sub
or
leave
fisubl
fs
or
jno
add
lods
mov
jle
dec
sahf
or
loope
cmpsl
jg
sbb
icebp
add
pop
hlt
stos
inc
lds
pop
add
jg
outsb
and
pop
and
sub
mov
fidivrl
cs
xlat
insb
imul
jbe
xchg
ficomps
pop
movsb
cmc
cmp
jge
xor
shll
or
ja
pop
sahf
call
push
fmull
rclb
adc
sub
cmpsb
adc
jmp
ljmp
cmp
shll
push
dec
and
cs
pusha
xor
pop
scas
push
shll
inc
mov
outsb
cmpsb
or
inc
add
pushf
divl
jno
mov
movsb
idivb
push
cs
xor
jno
sbb
mov
push
inc
inc
jg
mov
je
jo
aam
add
ja
ret
inc
dec
enter
pop
bound
and
les
lret
and
xchg
xchg
add
cmpl
or
scas
fiaddl
pop
jae
and
adc
xor
aaa
pop
nop
push
mov
mov
ret
cld
addb
xor
and
aaa
mov
lods
mov
adc
call
iret
and
push
sub
jns
sarl
dec
in
ja
shlb
subl
lret
cltd
add
adc
loope
cs
dec
jo
push
cmpsb
mov
xor
mov
lea
icebp
add
xor
sbb
sbb
jg
or
cmp
mov
jmp
sahf
inc
adc
dec
mov
ss
dec
fs
fiadds
pop
mov
fisttpll
data16
mov
mov
push
adc
xorb
xorl
xchg
test
jle
lea
mov
cwtl
les
pop
or
sub
sub
jb
mov
mov
rcll
fldt
mov
xor
or
mov
sahf
fscale
fadd
adc
pop
mov
or
dec
movsb
scas
fldenv
les
add
or
lahf
pop
jb
cmc
lods
jmp
dec
outsb
call
cmpsb
dec
inc
int3
jae
sbb
jmp
call
and
scas
xchg
add
cmpb
push
ja
mov
pop
and
ret
pop
dec
aaa
iret
cmpsl
mov
dec
addr16
das
mov
cmp
popl
cmp
sub
and
je
sub
mov
lods
inc
inc
test
adc
or
inc
sub
dec
and
adc
jmp
dec
lods
push
mov
fstpl
adc
ret
out
jo
test
rorl
sbb
push
sub
js
xchg
sub
stos
scas
movsl
fisttps
cltd
mov
inc
jno
loopne
rorb
nop
popl
jmp
adc
jecxz
add
aam
std
xchg
fs
in
lret
arpl
insl
hlt
sti
mov
ljmp
mov
dec
in
and
sbb
insb
stos
mov
ret
subb
in
mov
aam
or
nop
pop
pop
push
ljmp
je
insl
fsubs
mov
outsl
add
xchg
jge
mov
movsb
xchg
mov
add
pop
jne
nop
addr16
xchg
fsubs
repnz
ljmp
cmp
ljmp
cmpsb
testb
leave
lret
jne
cli
test
push
decb
lods
adc
inc
lret
or
stos
xchg
fwait
lcall
aaa
xor
mov
push
xchg
mov
push
push
loope
xchg
pop
sti
mov
daa
jno
cmc
daa
dec
pop
pop
push
push
push
mov
dec
jbe
xchg
int
mov
xor
jp
ds
mov
mov
rcrl
cmp
in
repnz
xor
inc
mov
xchg
xor
mov
orl
cmp
xor
out
mov
fstl
mov
or
sahf
xchg
loopne
paddusb
inc
pminsw
cli
movsb
fxch
xchg
lock
dec
mov
addr16
dec
loop
mov
add
repnz
jo
in
je
adc
test
sbb
xchg
jno
jne
movsl
out
movd
dec
and
push
fdiv
mov
mov
cmp
out
shll
add
sub
inc
mov
clc
stos
mov
pushf
adc
mov
sub
push
cmp
clc
jo
je
stos
sbb
inc
scas
fsts
pop
sahf
adc
das
daa
gs
mov
adc
fisttps
add
mov
aas
add
adc
cmp
mov
fisttpl
popa
imul
ret
scas
daa
xchg
das
cmpsb
daa
xor
fsubrl
movsb
dec
adc
fs
adc
xorb
xchg
push
mov
outsb
data16
arpl
add
mov
push
sar
int
fidivrs
fnstsw
jno
das
sub
push
data16
sub
out
cmp
test
popa
mov
mov
xor
outsb
sbb
pop
sub
adc
adc
dec
xchg
inc
mov
daa
stos
icebp
dec
pushf
in
mov
mov
pop
xor
into
cltd
dec
push
sbb
or
or
push
repnz
pop
int3
inc
add
mov
iret
cmp
xor
pop
push
add
stos
popa
pusha
fwait
add
ja
ljmp
adc
push
jo
push
idivb
stos
xchg
pop
cmp
divb
push
or
dec
mov
nop
pusha
fsubrl
and
or
mov
jns,pt
in
les
std
sub
dec
xchg
cmp
push
mov
sub
mov
ds
lock
das
cmp
xor
inc
jnp
imul
daa
inc
cmp
or
scas
or
lret
adc
cmc
dec
scas
loope
frstor
les
test
inc
mov
test
loope
pop
andl
sbb
ret
xchg
fists
inc
imul
ret
xor
imul
sub
bound
ljmp
out
push
push
movsb
push
jecxz
xorb
xchg
dec
or
mov
rolb
lods
jecxz
cmp
mov
int3
pop
cwtl
push
and
pop
jge
jae
lock
rorb
sub
sub
fisttps
aad
cmpsl
lret
sbb
sbb
aad
cmp
shll
cmpsb
iret
repnz
mov
imul
push
pop
mov
jno
sbb
mov
sub
ret
arpl
out
push
icebp
outsl
pop
mov
inc
out
fimuls
pop
movsb
out
cmpsb
inc
cmpsl
push
ret
adc
lods
leave
pop
test
jnp
rclb
sub
stc
lods
mov
xchg
pop
pop
cld
xor
movl
xor
fldt
xor
les
jmp
pusha
fldt
out
xor
push
adc
dec
orb
inc
subl
push
jmp
ljmp
pop
xor
fs
mov
into
ja
lods
outsl
xchg
push
xlat
mov
mull
mov
sti
mulb
mov
outsl
xor
xor
jl
js
cmp
js
dec
mov
stos
add
lret
loop
test
pop
lods
ds
fwait
mov
hlt
inc
iret
lock
pushf
mov
or
and
and
inc
jae
xchg
imul
insl
das
div
aaa
dec
into
pop
cmpsl
cwtl
mov
xchg
test
leave
sbb
cmp
mov
iret
insb
or
outsb
imul
inc
insl
test
int3
fdivl
push
test
testl
cli
rcrl
jne
fwait
mov
sub
loop
das
cmpsl
pop
add
adc
cltd
add
inc
aam
lods
pop
add
inc
or
jmp
into
push
mov
push
std
sti
push
xor
xchg
fst
jecxz
mov
outsb
repz
test
push
insl
movsl
and
test
and
imul
adc
mov
call
ret
sbb
ficompl
clc
and
aam
push
inc
xor
and
shl
lods
dec
iret
into
jns
inc
out
dec
imul
ds
mov
pop
mov
aam
lods
sub
xor
ret
and
dec
mov
cmpsl
fmul
iret
mov
sub
leave
pop
loope
add
xchg
pusha
adc
xchg
pop
imul
dec
push
es
sub
xchg
stc
xchg
cltd
mov
in
rep
cli
popa
scas
mov
inc
jno
iret
xlat
pop
jl
int3
dec
mov
and
imulb
dec
push
adc
scas
lock
push
cmpsb
xchg
jecxz
inc
sub
inc
pop
sub
ret
ret
pusha
sbb
mov
dec
jmp
xor
mov
neg
mov
pop
xor
out
insl
xchg
mov
and
xchg
aam
rclb
std
xchg
daa
icebp
bound
js
dec
cmp
aas
push
into
lods
aad
dec
insl
out
lds
jmp
add
lahf
and
int3
dec
xchg
lea
ss
mov
hlt
sahf
or
pop
addb
push
pop
lock
inc
xchg
add
or
sbb
inc
or
nop
cld
pop
push
inc
inc
jo
in
mov
mov
pop
shrl
inc
sahf
repz
les
mov
pop
cmpsb
fidivrs
cmpsl
fdivr
cmpl
adc
clc
or
sti
scas
mov
jne
add
jl
or
xor
mov
sbb
or
mov
stos
inc
icebp
std
sub
sub
pop
dec
push
lods
add
inc
jne
popa
cmp
aas
cmpsb
push
sub
mov
xorb
lods
outsb
xor
lahf
fdivrs
stos
mov
into
mov
lret
test
in
sbb
sbb
cmpsb
leave
popf
dec
inc
das
and
stos
dec
mov
sbb
movsb
mov
rcl
add
pop
add
lock
mov
mov
mov
sbb
inc
mov
mov
std
mov
jo
outsb
inc
inc
push
dec
lcall
sbb
mov
in
insb
and
pushf
in
mov
mov
mov
dec
insb
daa
mov
pop
fwait
lds
sbb
and
lea
mov
insb
add
xchg
enter
pop
stc
lea
cmp
in
stos
xor
dec
xchg
mov
xchg
nop
xchg
in
das
inc
fadds
jns
xor
pop
jmp
sbb
pop
or
mov
sti
sti
test
pushf
and
pop
enter
fs
inc
xchg
xchg
sbb
in
lods
sbb
pushf
pop
mov
jb
xchg
lcall
xchg
mov
addl
adc
mov
and
push
out
jg
mov
cmpb
ja
jg
mov
push
add
mov
xor
push
dec
sub
dec
stos
lahf
sbb
hlt
jmp
sub
sbb
pop
sbb
mov
js
inc
rolb
mov
cltd
addb
or
mov
sub
mov
ret
jg
cmp
mov
test
std
mov
clc
inc
push
xchg
push
sub
cmpsl
jb
aam
flds
inc
mov
jmp
push
mov
xor
movsb
mov
imul
mov
stos
push
lods
pop
add
push
xchg
ret
add
add
mov
push
jmp
dec
ficompl
in
mov
mov
or
enter
pop
add
fbld
out
inc
sbb
xor
xor
ljmp
aad
mov
pop
sbbb
mov
decl
adc
mov
dec
push
fwait
pop
jae
and
pop
data16
mov
loop
sub
fsub
jno
repnz
jns
loop
or
test
fdivrp
scas
adc
pop
pop
icebp
fists
and
stos
hlt
loop
mov
popa
or
sar
xchg
or
jne
push
in
xchg
movsl
mov
cmpsl
rclb
cmp
lds
setg
clc
mov
leave
dec
add
adc
mov
loop
add
xchg
icebp
or
pcmpgtb
sbbl
push
in
cli
movb
xchg
sub
insl
add
mov
psubw
pop
jbe
lret
shrl
imul
lea
mov
mov
and
cmp
sbb
push
xor
dec
je
xchg
dec
add
mov
xor
popa
lahf
out
fst
enter
inc
fmuls
jp
lret
lret
in
aas
cmp
add
add
shll
mov
lea
xchg
jno
sbb
sbb
popa
stc
lods
clc
popa
mov
loope
dec
cmpsb
aad
xchg
push
enter
jno
cmp
loopne
mov
and
push
and
arpl
enter
aam
lret
and
clc
or
pop
cli
mov
outsl
dec
in
cli
movb
xchg
sub
xor
fisubl
lret
shrl
imul
lea
adc
dec
inc
call
negb
ja
call
lahf
test
add
out
test
repnz
enter
jb
shrb
loop
loop
fimuls
dec
stc
mov
imul
add
js
je
and
fs
or
test
or
xchg
mov
bnd
aaa
sbb
push
clc
aam
repz
and
fsubrp
aas
push
scas
or
in
jbe
lds
sbb
pop
mov
xchg
sbb
jl
xor
mov
aas
mov
pop
adc
sbb
lahf
in
xchg
jo
and
cltd
dec
fists
pop
sub
mov
test
jb
cmc
push
xchg
mov
cmp
aaa
pop
jg
sbb
sbb
jnp
aam
rcrb
lcall
pusha
push
sbb
stos
int
dec
mov
cld
xor
jae
cmpsb
mov
aad
sbbb
sarb
sarl
cli
scas
aas
push
stos
and
fs
std
mov
repnz
sub
ret
test
cmpsl
out
daa
cmp
cmpsb
fldt
xchg
dec
data16
jae
jmp
mov
dec
shrl
jl
stc
or
mov
scas
repnz
cmp
and
cmp
loope
repnz
int3
imul
leave
cwtl
subl
jns
mov
pushf
mov
mov
inc
or
adc
adc
push
icebp
cmpsl
fidivl
cld
icebp
cmp
jbe
add
cmc
imul
push
int3
add
aad
imul
cmpsb
mulb
push
fsts
pop
mov
movsl
xchg
jl
adc
mov
cmp
mov
cltd
cli
jmp
mov
scas
insb
ljmp
aam
movsb
xorb
cwtl
es
mov
jae
push
fmulp
fs
out
in
mov
ret
cmp
stos
jne
pop
arpl
cmpsb
outsl
jno
shrb
sub
jo
jle
jne
addr16
jmp
cld
mov
addb
jbe
and
cmp
movsb
xchg
sub
xor
pop
stc
push
and
or
push
xchg
inc
sbb
pop
add
scas
and
sub
loop
ss
aam
cmpsb
subb
punpcklwd
mov
roll
pusha
testl
dec
xor
inc
ret
mov
or
pushf
mov
lcall
fwait
pop
cmp
lea
sbb
out
dec
jns
mov
pop
std
lock
ret
push
sbb
push
jnp
stos
xchg
mov
pushw
imul
stos
cmp
add
rorb
pop
movsl
fildl
dec
into
test
push
rorl
adc
fstp
dec
mov
sub
addr16
cmpsl
fstps
adc
test
mov
xchg
pop
mov
out
and
cmp
popf
xlat
xor
aaa
mov
iret
mov
dec
mov
add
push
pop
adc
push
lret
xchg
enter
dec
cltd
mov
ret
xchg
add
xchg
sbb
clc
adc
adc
push
dec
jae
xorb
cmp
insl
xchg
call
jo
das
pop
test
jp
jmp
or
nop
cmpsl
arpl
jp
inc
push
fs
or
ja
aas
cmp
mov
je
sysret
lahf
in
data16
insb
ja
mov
add
loope
aad
test
rclb
push
stos
or
imul
push
mov
movsl
test
inc
mov
stos
stos
in
out
mov
cmp
iret
add
insb
sbb
mov
aad
xor
mov
adc
orb
test
imul
lock
jp
insl
jb
mov
push
pusha
push
sbb
add
mov
loopne
into
sbb
push
and
addr16
push
sbb
pop
mov
das
sbb
adc
or
cmp
pmaxsw
rcr
jbe
imul
lret
lret
lretw
rcrb
loop
bound
lea
push
cmove
icebp
nop
int3
push
jbe
repz
decb
jnp
pop
dec
and
mov
mov
or
jp
xor
lret
dec
dec
mov
outsl
sub
sbbl
adc
pop
mov
mov
aam
imul
mov
mov
ret
mov
rcrl
dec
adc
negb
mov
pop
fldcw
adc
mov
cmc
js
lock
sbb
jl
bound
lds
jle
push
fdivl
rcrl
imul
cmp
adc
pop
cmpsl
dec
dec
and
lds
dec
push
dec
cld
push
stc
jge
xchg
arpl
cmp
scas
int
daa
xchg
jge
sti
pop
push
sub
sub
ds
xor
iret
fdivr
cmp
mov
pop
cmp
fistl
add
cmp
lcall
jp
fsub
push
ret
ljmp
clc
add
cmc
jmp
add
sub
in
movsb
popf
push
rol
jle
mov
xchg
sqrtps
mov
das
mov
push
icebp
mov
imul
jle
adc
test
inc
mov
sub
fidivs
shrb
adc
adc
sbb
push
mov
xchg
gs
out
clc
push
popa
int3
push
lock
cwtl
sub
cmpsb
pop
xor
sbb
and
aas
mov
rcrl
lea
fcomps
add
sub
dec
mov
cmpsl
pop
int
push
jns
mov
lahf
xchg
popa
test
cmp
fstpt
add
addb
fidivrl
loopne
dec
push
in
into
and
cmp
in
push
cmpsb
push
inc
into
sbb
pushf
rcll
mov
jae
cmp
sbb
mov
movsb
dec
mov
ret
lret
mov
cltd
cmpsb
movsl
pop
sbb
mov
rorl
loop
les
pop
sub
iret
pop
add
mov
inc
pop
faddp
aam
mov
sbb
cmp
mov
popa
xchg
pop
mov
push
into
pushf
or
jne
xchg
pop
push
lret
aaa
adc
loope
into
dec
aam
sbbl
sti
pop
in
adc
ficoms
jmp
or
xchg
add
push
scas
sub
mov
mov
test
mov
jg
fs
sarl
mov
pop
inc
mov
push
shll
pusha
aas
bound
add
xorb
gs
adc
pop
std
stos
inc
popf
fwait
mov
popf
sbb
xchg
push
lea
or
jo
clc
add
lods
adc
pop
mov
cltd
imul
cmp
push
jmp
ja
pop
cld
inc
inc
and
stos
fs
push
in
jae
sub
lahf
dec
mov
fs
and
dec
loop
pop
pop
xor
ret
rcrl
and
add
xor
and
mov
inc
test
fdivl
xor
mov
pop
cld
dec
dec
insl
mov
or
sbb
roll
pop
jne
cli
xchg
xchg
jmp
cmpsl
xor
pushf
ficompl
mov
popf
mov
adc
xchg
jne
imul
outsl
jge
mov
lock
inc
mov
sbb
ljmp
adc
and
mov
adc
cmc
iret
and
scas
mov
lcall
add
lret
cmc
cmpsl
xor
lods
mov
jg
jae
pusha
jo
mov
lret
les
stos
lods
js
jno
add
cwtl
pop
out
cs
bound
sar
lret
bound
vcvttps2dq
push
push
add
cld
imul
jecxz
mov
movsl
push
mov
movsl
ljmp
push
pop
fwait
xlat
lcall
ret
jp
repz
push
xchg
mov
std
cmpsb
inc
test
cmpsb
popa
add
or
test
mov
adc
ret
cmpsb
lret
jle
adc
fmul
mov
les
and
and
popa
mov
xor
pop
inc
sub
loopne
adc
aam
jmp
fucom
mov
stos
mov
sbb
clc
flds
data16
dec
addr16
mov
and
xchg
lods
pop
mov
adc
inc
lret
sbb
wrmsr
inc
out
mov
test
dec
sbb
xchg
cmp
xchg
arpl
enter
sbb
and
leave
aaa
rcl
dec
add
es
xor
mov
cmp
adc
mov
mov
inc
insl
push
sbb
fs
popf
int
dec
cmc
and
or
dec
stos
xchg
mov
or
test
call
out
cmp
pop
lock
cmpsb
inc
sub
out
jnp
ss
xor
lcall
in
loope
jo
jo
loopne
dec
stos
add
mov
lret
dec
sbb
insl
pop
cmp
jbe
idivb
inc
adc
mov
mov
sti
sub
xor
or
fidivl
lea
xchg
mov
sbb
dec
mov
add
dec
mov
test
repnz
cmp
push
out
and
jle
jae
mov
pop
adc
outsl
jnp
mov
xor
sahf
in
mov
pop
into
push
or
aaa
mov
stc
mov
mov
dec
mov
mov
lcall
push
mov
sub
adc
mov
sahf
inc
ficompl
ret
mov
cmpsl
push
adc
mov
out
int
test
mov
aad
andl
cmp
jle
insl
or
cmp
push
out
add
inc
fldenv
pop
leave
push
sarb
mov
and
fwait
sbb
adc
aaa
mov
adc
push
push
inc
and
jnp
and
jns
sub
movsb
in
dec
jg
inc
fst
nop
add
aas
cltd
stos
movsb
push
mov
xlat
push
mov
nop
push
loop
pop
ss
xchg
icebp
and
int3
xchg
cs
dec
mov
and
sbb
aam
push
adc
cmp
dec
jb
cltd
ja
repz
lods
jne
pop
jle
bound
inc
cmpsb
xchg
mov
push
mov
lods
fwait
sbb
inc
cmp
jo
sbb
enter
sub
into
fsub
in
sbb
add
push
ds
out
mov
xchg
rolb
pop
mov
xlat
sbb
pop
cltd
mov
fdivl
mov
jge
dec
pusha
lods
test
push
xor
jmp
xor
out
cmp
cwtl
lea
xchg
lock
dec
xchg
jmp
fld
data16
jno
cmp
xchg
aam
sbb
or
mov
xchg
cmp
adc
stos
mov
add
lea
decl
das
xchg
mov
or
xchg
rorl
popf
bound
sarb
jg
pop
push
loope
mov
adc
jne
push
mov
xor
fucom
xchg
loop
push
and
dec
lods
lcall
aaa
cmp
test
test
pop
jns
sub
out
lcall
or
sbbl
sbb
inc
jmp
out
push
mov
sub
jle
movsl
and
pop
cld
cwtl
out
xor
sub
scas
mov
pusha
out
pop
jb
mov
punpckhdq
int
lea
add
jg
inc
xlat
cmp
test
xor
sti
add
in
sbb
in
fwait
scas
inc
push
ficoms
mov
adc
xlat
mov
pushf
lds
not
lods
es
das
aas
adc
nop
jmp
sbb
ret
dec
add
xor
mov
mov
int
xchg
sub
scas
add
mov
xchg
or
add
aad
stos
mov
stos
test
and
xor
xchg
add
sarl
pushf
inc
pop
insl
inc
shrb
mull
mov
cs
add
add
out
iret
cld
dec
dec
xorl
lret
dec
xchg
or
jg
icebp
pop
js
jb
mov
call
xor
dec
pop
push
cmp
jno
jmp
cmpsl
and
out
divb
sarl
xor
inc
js
mov
enter
xchg
out
mov
lret
sub
dec
xor
popa
call
xchg
push
pop
repz
inc
xchg
mov
adc
jecxz
shr
mov
and
test
gs
out
test
pop
stos
cmpsb
lret
popa
inc
enter
xor
push
sti
inc
xchg
sub
fisubl
mul
inc
fidivrl
pop
cltd
cmpsl
adc
andb
fdiv
outsb
sbb
mov
xor
or
mov
lret
hlt
repnz
in
inc
pop
stc
js
test
mov
addl
movsl
ss
inc
pop
xchg
test
push
add
dec
jp
jae
mov
xor
xor
in
shr
and
mov
adc
xchg
mov
lahf
inc
and
test
push
push
sub
sbb
test
mov
pop
lret
inc
xor
loopne
mov
mov
ja
pop
clc
pop
mov
xor
gs
mov
stc
jmp
dec
push
lahf
xor
push
cmp
mov
jle
sbbl
movsb
fs
push
mov
test
mov
hlt
xor
inc
repnz
outsl
cmp
scas
inc
scas
sbb
pop
lods
adc
data16
test
das
jecxz
fwait
out
mov
testl
cmp
adc
xchg
fidivl
xchg
add
pop
jle
shll
test
inc
in
outsb
xchg
outsl
sarb
jmp
fsub
cmp
daa
pop
adc
push
lret
fisttpll
sti
inc
push
aam
and
imul
pop
clc
push
ja
mov
scas
lds
in
dec
fiaddl
scas
icebp
add
sti
or
mov
inc
ss
out
lods
cmc
std
xor
mov
mov
mov
idivl
imul
push
mov
lods
rorl
scas
call
cs
imul
int
or
xor
lock
pop
inc
sub
ret
jb
shl
addb
sub
dec
push
fwait
decb
out
mov
lahf
xchg
repz
mov
frstpm(287
mov
in
popa
out
out
pop
pop
ljmp
adc
std
mov
flds
mov
ret
pop
mov
aam
aaa
cld
jle
mov
sti
xor
xchg
xor
or
dec
imul
add
ret
lcall
pop
aas
mull
adc
popa
add
hlt
add
push
and
mov
xor
movsl
movsl
cmp
loope
outsb
pop
ret
jnp
sbb
aam
push
testb
insl
dec
mov
shr
sbb
and
mov
mov
and
lret
insl
sbb
aas
das
out
test
inc
daa
shlb
xchg
sub
dec
xor
xor
into
and
sti
xor
and
lcall
dec
outsb
mov
lods
add
add
fs
xlat
push
mov
shll
mov
icebp
int3
xchg
push
lret
fisubl
test
ds
in
cmpsl
xor
mov
ljmp
scas
loop
dec
fldz
enter
push
mov
in
aad
lods
cmc
adc
in
data16
xchg
jmp
mov
adc
int
sar
xor
pop
and
mov
frstor
rcrl
push
xchg
leave
inc
inc
int3
insb
lock
dec
orl
movntps
jnp
adc
ja
push
lock
pop
movsl
movsl
aam
jge
push
je
repz
aaa
hlt
mov
inc
add
aam
fcmovne
mov
in
in
push
or
stos
pop
test
popa
and
cmp
mov
inc
dec
mov
add
sub
mov
sarl
xchg
sub
lret
outsb
lret
cmp
xlat
in
bound
stos
dec
lods
ja
popa
inc
test
fwait
jp
cli
jnp
inc
out
scas
sbb
ljmp
sub
mov
sub
mov
das
adc
pop
push
sub
fisttpll
push
sahf
inc
rolb
cmpsb
lahf
pusha
outsl
dec
cwtl
mov
and
sub
add
cmpsb
jl
lret
test
and
adc
mov
in
jo
gs
or
xor
adc
cmp
mov
mov
or
xchg
aas
mov
pop
je
popf
in
es
call
imul
test
xor
and
and
notb
sbb
aas
cmpsl
ficomps
sti
or
stc
das
jnp
outsb
jmp
inc
jmp
ret
fmuls
lret
sarl
cmp
sbb
xorb
mov
stos
push
adc
xor
out
sbb
insb
mov
xchg
outsb
fmul
mov
jb
sbb
in
jp
sbb
loopne
mov
test
test
fdivr
mov
jns
int3
fwait
add
test
lret
lea
push
push
mov
xchg
push
pop
mov
hlt
fwait
movsb
scas
sti
xchg
xchg
dec
cmp
sub
sbb
ljmp
andb
outsb
out
testl
jl
bound
call
jle
lret
js
data16
xchg
stos
shll
jnp
dec
sub
ss
xor
inc
rcrb
loope
or
jnp
mov
dec
cltd
ja
sub
sub
cmpsb
ja
insl
and
and
jge
xchg
pop
sbb
sub
call
jl
js
push
mov
popf
sub
xchg
push
fistl
cltd
cmpsb
mov
mov
out
pop
inc
lret
add
stos
cwtl
aaa
out
cld
gs
or
mov
cld
mov
shlb
cmp
mov
and
push
out
jns
push
inc
xchg
xchg
mov
iret
fnsave
adc
cmpsb
cmc
pop
loope
insl
or
in
cmp
push
jno
mov
rorb
loopne
lcall
mov
cmpsb
aas
xor
jne
imul
ds
testl
push
pop
jae
lock
daa
mov
or
cwtl
test
ret
lea
decb
negb
fbstp
stos
mov
fcoms
xchg
xchg
dec
rcll
push
in
pop
jge
ds
mov
imul
xchg
lret
pop
movsl
nopl
dec
sarb
and
push
push
mov
dec
mov
xor
pop
xchg
out
test
out
dec
daa
pusha
movsb
jecxz
add
inc
mov
test
jp
fwait
lahf
jnp
aaa
cwtl
iret
ss
int
mov
fistpll
cmp
ss
jg
mov
push
push
cs
sbb
dec
cmp
lret
sarb
jmp
popf
out
adc
xchg
ret
mov
or
movsb
into
stos
dec
test
mov
jge
sub
sbb
mov
mov
ljmp
push
add
jle
aaa
sub
pop
xlat
mov
mov
iret
mov
es
es
out
and
je
xor
jmp
push
jmp
gs
cmp
in
insb
xchg
cmp
adc
mov
add
hlt
sbb
add
push
aam
jl
jbe
cli
popa
mov
mov
out
fcompl
xor
jl
jns
mov
lret
aas
mov
mov
cwtl
ret
movsl
lods
and
xor
testl
adc
pop
in
mov
adc
ja
jbe
and
add
xchg
mov
jge
imul
adc
fnsetpm(287
xchg
and
mov
cmp
roll
inc
or
cmp
jge
outsl
jg
adc
sbb
repz
and
orl
jg
iret
pop
ss
xchg
pop
dec
pop
dec
push
mov
sub
and
mov
leave
pop
xor
mov
sbb
test
out
mov
in
hlt
push
sbb
sbb
or
sub
cmpsl
sahf
push
mov
lods
pop
xchg
inc
movsl
ret
rorb
mov
sub
xchg
cmp
jp
sub
pop
clc
adc
int3
jae
pop
add
pop
dec
mov
loop
xor
and
inc
xor
stos
cmp
xorl
fisttpl
shl
int3
or
dec
enter
cmp
xlat
lods
push
cs
ja
leave
stos
shll
pop
out
adc
mov
stc
mov
ja
add
xchg
test
pop
hlt
clc
aad
add
cmp
rcll
fwait
dec
das
or
in
xchg
xlat
mov
or
decl
movsb
mov
js
sub
fwait
or
add
lods
jb
dec
jbe
push
sbb
add
mov
xchg
cmp
iret
xchg
adc
push
aas
sub
sub
cmp
cld
lds
push
cmp
movsb
insb
jle
popa
fnstenv
xlat
xchg
or
mov
cmp
and
mov
mov
push
cmp
nop
cld
sbb
jecxz
mov
and
push
jnp
push
pop
fwait
pop
orl
pop
out
fisttpl
sbb
stos
xchg
mov
mov
xchg
pusha
sbb
inc
and
and
pop
push
sbb
lods
lds
jmp
sub
std
dec
jp
enter
fstl
mov
pusha
xor
int3
icebp
fimull
inc
xor
aas
lret
jg
xchg
imul
popa
inc
or
imul
mov
xchg
js
dec
add
jb
out
add
repz
jp
out
sbb
push
lahf
jmp
cmp
inc
jns
movsl
lock
andb
xor
leave
inc
cmpsl
pop
mov
jae
adc
into
jns
mov
lds
in
pop
scas
pop
cmpsl
mov
out
or
xchg
cwtl
pop
pop
pop
sub
mov
mov
xchg
pop
cmp
div
cltd
shll
adc
mov
xchg
das
call
ss
jns
je
imul
lret
frstor
push
sub
sub
out
cmp
out
cmp
out
or
xchg
adc
fldcw
daa
cmp
sub
mov
into
je
mov
cmp
mov
sbb
mov
ljmp
xor
sbb
xchg
enter
inc
fmull
and
fsubrl
insb
jnp
pushf
out
and
adc
xchg
push
int3
sbb
lods
mov
outsb
movsl
pop
pop
addr16
mov
in
adc
repnz
fdivr
dec
add
mov
xor
and
stos
aas
movsb
inc
frstor
mov
add
sbb
mov
iretw
pop
adc
sti
icebp
xchg
insb
jb
mov
cs
or
jp
ss
ss
je
jae
mov
sub
sbb
inc
push
mov
dec
movsb
test
stc
cmp
cmp
inc
xchg
push
jmp
jb
into
out
cmp
insl
ja
pushf
and
jno
cmpsb
push
js
sub
fistps
add
jae
jne
test
shlb
iret
push
ja
les
inc
jns
sbb
lods
xchg
sub
mov
movsl
sub
push
jne,pn
jg
xchg
negl
cld
hlt
addr16
and
lcall
sbb
daa
es
push
mov
dec
stc
movsl
cld
int3
sub
mov
mull
ret
out
adc
inc
xchg
push
pfrsqit1
cmp
cmp
mov
pop
sar
sub
aad
repz
xchg
push
sub
mov
sub
mov
adc
adc
sub
mov
shl
lods
jb
ss
repnz
mov
sub
call
fs
in
mov
sbb
inc
divb
in
cld
dec
push
subb
cmp
sahf
sbb
cmc
mov
xchg
and
sub
push
nop
sbb
and
push
xor
xor
jmp
in
lea
data16
imul
mov
lret
pushf
divb
push
popf
stos
lods
adc
in
imul
mov
hlt
loop
inc
sub
or
loopne
ja
aaa
jne,pn
sub
les
lahf
adc
outsb
inc
xchg
popf
cmpsl
xor
and
das
outsb
loopne
xchg
mov
sub
cmpsl
xchg
cmpsl
and
ret
or
jl
popl
data16
icebp
test
stos
or
pop
adcb
mov
mov
ds
arpl
jae
dec
mov
jg
fidivrl
dec
push
pop
cmc
lret
add
fsubrs
inc
mov
sbb
and
pop
push
push
imul
cwtl
sahf
adc
sti
aas
jl
mov
xor
mov
rolb
sub
popa
xor
cwtl
xor
cmp
mov
mov
lret
jae
ss
push
or
and
js
jge
inc
pop
xchg
pop
adcb
es
fisttps
inc
iret
mov
repz
mov
jo
adc
gs
scas
sub
std
and
loopne
paddsb
push
mov
lcall
fwait
xchg
cmpsl
sbb
aas
jb
dec
inc
ss
adc
push
rcrl
pusha
xor
test
sub
ret
lods
mov
cmpsl
cld
mov
dec
rcr
sti
mov
mov
mov
jle
mov
je
push
ficoml
push
addr16
push
adc
lahf
lcall
push
ficompl
add
lods
in
mov
jbe
dec
cmp
push
icebp
bound
ljmp
adcl
xor
mov
test
bound
push
and
scas
stc
adc
fistpl
loope
out
sub
push
add
pop
pop
mov
jmp
dec
movsb
pop
mov
rolb
or
jmp
fs
pop
xchg
aaa
dec
aad
adc
cld
aas
popa
mov
ljmp
sub
or
lret
and
hlt
inc
scas
adc
and
mov
movsb
mov
mov
or
bound
mov
mov
cwtd
xchg
jo
mov
pop
inc
jnp
aas
add
mov
scas
mov
jge
mov
xchg
leave
xor
mov
int
push
sbb
cli
jnp
and
ret
mov
cmp
push
pop
hlt
xchg
ss
es
dec
adc
xor
pop
fcomp
push
repnz
rcrl
pop
daa
ret
lahf
imul
arpl
mov
dec
mov
or
cwtl
outsb
orl
inc
add
outsb
push
push
mov
in
shll
int3
aam
and
cmpsl
add
push
ret
mov
cs
in
and
inc
pop
xor
cmpsb
mov
loope
aad
sub
xchg
lret
jo
pop
and
sub
pop
ror
shl
mov
mov
ret
dec
cltd
jno
jmp
jne
in
jbe
cmpb
mov
xor
lret
in
int
add
mov
mov
pop
xor
xchg
shlb
leave
imul
mov
mov
add
jp
loope
xchg
lods
mov
fnstsw
mov
dec
outsb
lds
and
add
add
push
xlat
insb
std
pop
les
mov
cmpsb
lock
mov
nop
sbb
inc
lock
add
or
movsb
sbb
dec
out
cld
or
push
fsin
out
inc
jo
jmp
xchg
cmpsb
lds
or
xchg
jge
xchg
xchg
push
xor
ljmp
fsubrl
mov
les
pushf
jbe
jmp
cmp
hlt
in
xchg
xor
fwait
daa
cmp
inc
mov
mov
dec
test
cmp
dec
mov
shr
sbb
dec
lods
lcall
push
mov
call
or
jge
outsb
stos
or
or
pop
mov
jmp
or
jno
clc
add
pop
dec
pusha
fisubs
insl
pop
aas
xor
mov
pop
adc
mov
add
push
and
ss
xlat
lcall
loopne
or
jo
fcmovb
addl
popa
fiaddl
loope
orl
pop
push
lret
sahf
and
jecxz
ja
pop
push
outsb
mov
jecxz
ds
sarb
ret
mov
push
cmpsb
sub
rorl
push
pushf
jne
jge
mov
lock
sbb
xchg
roll
and
sarb
jmp
inc
cmc
insb
insb
or
mov
dec
sbb
movsl
cmp
mov
mov
xchg
xchg
fisubs
jnp
imul
mov
cmp
inc
push
mov
pop
hlt
mov
xchg
rcl
and
rclb
pushf
and
lock
or
or
enter
aas
cmp
pop
adc
popa
xchg
ret
cmc
aas
pop
pop
mov
xor
pop
pop
bound
orb
add
mov
roll
mov
inc
cld
xchg
xorl
bound
mov
inc
in
ret
cmp
xchg
shrl
cmp
sbb
ret
sbb
mov
adc
bound
cmpsb
push
pop
jae
sub
add
mov
or
das
inc
pop
sarl
sbb
fs
cmc
call
jb
jo
pop
push
mov
aam
in
dec
jo
pop
test
sbb
ret
xor
cmp
stos
mov
loop
daa
xor
mov
stos
daa
sbb
dec
popw
in
inc
stos
test
mov
cmpsl
fisttpl
or
loope
dec
pusha
xchg
pop
lahf
in
movsb
lahf
insb
icebp
ficomps
shl
lea
imul
cmc
repz
push
inc
or
scas
inc
int
cmpsl
sbb
inc
dec
mov
aad
cmpsl
movsl
dec
idivb
iret
daa
mov
pop
add
push
in
cmp
pop
cmp
and
lea
add
ss
out
data16
dec
imul
inc
xlat
repz
jb
sub
mov
add
mov
inc
enter
aam
or
push
imul
not
fimull
mov
jg
push
adc
gs
loopne
xchg
mov
aas
jmp
bound
cmpsb
aaa
out
xor
dec
pop
fs
mov
mov
out
sti
mov
push
mov
sub
in
jae
cmc
add
lahf
jo
pop
push
cld
xchg
dec
xchg
test
mov
adc
cld
jp
dec
add
mov
mov
jns
jns
rorw
icebp
cmpsl
dec
mov
or
mov
cli
mov
pop
jmp
fs
inc
iret
sti
jbe
and
jecxz
sbb
stc
addl
lods
jo
out
loopne
fdivrs
daa
rolb
cmpsb
iret
iret
in
mov
test
add
roll
jmp
lods
aad
cmp
aas
sub
popf
lock
aad
push
fs
imul
cmp
ds
cld
pusha
jge
xchg
fnstsw
stc
cs
dec
cmp
orb
iret
sti
pop
sub
mov
scas
jb
aad
out
push
clc
cmp
iret
mov
outsb
dec
mov
repnz
fldenv
mov
cld
shll
xor
xor
pop
pushf
std
cmp
jb
xchg
dec
or
in
arpl
cmp
ss
ja
pop
fbld
or
imul
fisttpl
and
arpl
int
xor
lds
test
adc
xor
loopne
dec
decb
dec
inc
and
mov
movb
xlat
es
stos
pop
in
lcall
xchg
sub
mov
jbe
lods
lret
mov
decl
cmpsl
mov
in
fstpl
and
cmp
das
jns
lea
push
shlb
popf
daa
mov
pop
outsb
div
or
push
and
cmp
rcll
cmpb
lock
shrl
xchg
outsl
add
inc
daa
daa
dec
mov
cmp
mov
call
cmc
es
aaa
fyl2x
int
and
mov
mov
pop
loop
in
ja
mov
pop
scas
ds
push
pushf
xchg
pop
jecxz
sti
lods
pop
or
scas
test
adc
pop
outsl
xchg
aas
xor
fldl
or
int3
fimull
ja
fs
fnstsw
decb
push
dec
dec
mov
dec
cmp
adc
or
pop
std
ds
cld
das
and
leave
or
out
neg
gs
and
sub
xchg
lds
add
movsb
xor
or
out
mov
js
cli
mov
loopne
es
sub
fldenv
testb
add
xchg
and
dec
dec
test
popa
mov
lahf
sbb
inc
mov
xor
inc
das
push
mov
fsubrp
dec
cmp
dec
scas
push
test
push
clc
in
adc
xor
rorb
jnp
outsl
xor
dec
popl
or
adc
mov
ss
jbe
push
mov
or
pushf
popf
cmpsl
jo
rolb
xchg
test
pop
adc
push
fstpt
push
movsl
cmp
pop
clc
pop
dec
imull
stos
and
xor
fstpt
in
mov
mov
mov
xor
lahf
dec
sbb
ss
stos
push
repnz
fstl
push
jno
xor
stc
loope
cltd
pop
shl
flds
cmc
fs
mov
cmpb
jbe
push
sbb
sbbl
leave
loopne
fsubrs
xchg
mov
jo
lods
shrb
inc
mov
arpl
mov
sub
fwait
or
out
insl
cs
xor
jg
and
jns,pt
out
loop
mov
lods
xlat
stos
into
mov
sub
into
lods
fisubrl
or
gs
mov
jno
int
pushf
lcall
lds
out
loop
mov
pop
call
scas
sub
aam
mulb
fsubrl
dec
sbb
sub
sahf
fldenv
cmp
leave
mov
jmp
pusha
in
fsubrp
sbb
ds
shrl
xchg
movb
cli
inc
orb
mov
shlb
sbb
jnp
cmpsl
js
adc
xor
cmp
scas
scas
in
ret
sub
ljmp
sbb
dec
cmp
mov
out
dec
push
mov
xlat
mov
inc
cmpsb
push
mov
shrb
pushf
push
test
xchg
xor
out
dec
dec
daa
mov
add
and
jp
loop
cmpsb
dec
test
mov
adc
sbb
fidivl
mov
lods
mov
cmp
pop
or
mov
test
mov
inc
dec
or
sbb
adc
test
push
and
dec
cltd
imul
arpl
add
add
stos
jge
imul
add
sbb
leave
out
inc
push
popf
rcll
mov
add
push
out
jg
add
pop
mov
jecxz
sub
xor
std
in
pop
jl
cmpl
es
addr16
push
shlb
ss
fs
xchg
pop
or
xchg
or
mov
cmp
push
jb
cmpsl
shlb
sbb
pop
pusha
mov
or
cmpsb
xchg
pop
jns
add
pop
sub
lret
xchg
in
pop
xchg
adc
test
ds
insb
scas
mov
jecxz
bound
movsl
stc
cltd
out
dec
sbb
daa
call
sbb
in
mov
jbe
jne
mov
in
mov
or
add
jb
in
iret
mov
sti
xor
push
stos
sbb
sbb
cltd
bound
mov
fs
push
xchg
pop
insl
xlat
xorl
int3
mov
push
mov
mov
loopne
xchg
mov
lods
divl
cs
mov
sbb
dec
imul
enter
stc
cmpsl
js
pushf
lds
outsb
fisubrl
aam
mov
dec
scas
adc
and
cmp
xchg
push
add
sbb
xchg
ficompl
enter
jb
test
out
push
or
and
filds
xor
nop
pop
js
jl
cltd
das
mov
push
enter
mov
les
inc
loope
add
js
stc
fidivl
popa
sbb
loopne
sti
inc
push
jle
push
adc
sub
and
out
add
cltd
push
push
xchg
xchg
pop
int
dec
sub
das
mov
popf
lock
add
pop
in
sub
cmp
rorb
pop
cmp
scas
mov
sti
icebp
sti
subl
cmp
jns
cltd
fwait
sub
lock
rorb
jg
mov
dec
mov
add
mov
inc
jno
shrl
jmp
cmp
push
cmpsl
cmpb
mov
leave
sti
repnz
lock
jo
sub
mov
jns
lods
xchg
pop
icebp
jg
fiaddl
mov
adc
int
xchg
push
cmpsl
imulb
je
mov
mov
popf
xor
loopne
cmp
aaa
or
in
jl
movsl
push
push
mov
in
add
mov
imul
pop
push
xlat
mov
pop
inc
in
sbb
or
test
jp
in
xor
dec
pop
push
stc
and
mov
mov
in
xchg
mov
movsb
inc
inc
std
pusha
push
jns
scas
call
repz
inc
jge
aad
in
inc
xchg
adc
shlb
dec
lea
jmp
cwtl
lcall
sub
push
jp
rcl
jo
and
rolb
or
jecxz
loopne
or
and
test
out
and
in
jns
aad
lock
leave
addr16
inc
adc
cld
cmpsb
les
cli
mov
cli
insb
cmp
dec
dec
test
push
push
dec
mov
dec
sub
mov
xchg
jmp
pusha
push
dec
pop
outsl
int
icebp
in
inc
in
mov
testb
add
mov
jbe
dec
cmp
rorl
add
cmp
mov
loop
les
xchg
inc
mov
fs
add
cmp
in
jbe
inc
pop
lret
dec
cld
mov
cltd
push
adc
faddl
mov
lahf
sbb
mov
mov
dec
xor
outsb
adc
mov
sti
vcvtps2ph
jmp
cs
sti
add
or
ret
loop
sbb
pop
and
jae
jl
bswap
cmp
and
ret
lea
add
cwtl
pop
push
loop
fidivrs
or
push
test
inc
xchg
mov
adc
adc
xchg
xchg
int
adc
rorl
pusha
sbb
inc
and
and
jnp
xor
cmp
fisttps
mov
int3
xchg
dec
dec
mov
inc
pop
fistps
pop
mov
sbb
add
jns
test
lahf
cmp
push
cli
data16
sbb
jecxz
cmp
push
jge
cmp
inc
outsb
xor
dec
push
inc
addl
inc
pop
mov
sbb
pusha
add
lds
outsb
add
fimuls
pop
inc
and
ljmp
adc
cli
divb
sub
mov
adc
loope
outsb
cs
lds
mov
jmp
pop
xor
xor
push
ret
fiadds
pop
xchg
mov
ss
xor
out
lea
loope
adc
outsl
lret
loope
xchg
rcrl
cmp
pop
nop
cmpsb
add
pop
dec
xchg
in
xchg
lret
in
mov
inc
fnstcw
lds
repz
dec
nop
sbb
push
arpl
mov
jns
mov
cmpb
movsb
push
lcall
mov
push
inc
xchg
push
mov
mov
int3
ljmp
pop
xor
xor
pop
adc
fucomp
mov
pop
sti
mov
sarl
xlat
mov
in
test
cltd
pusha
and
add
pop
push
mov
and
jp
push
faddl
test
lea
fisubs
adc
out
je
jno
and
and
add
fwait
push
cs
pop
add
loopne
mov
lds
cmc
fmul
shll
loope
or
dec
adc
dec
es
or
inc
and
lahf
pusha
clc
add
mov
adc
fwait
jge
mov
xlat
call
js
pop
cmp
inc
cmp
lahf
nop
bound
ret
cltd
pop
imul
add
dec
mov
mov
jno
jnp
aaa
ljmp
adc
shlb
inc
aad
cli
gs
dec
mov
stos
dec
scas
mov
add
dec
inc
in
cmp
adc
imul
sub
jns
jge
cs
mov
inc
inc
push
xchg
mov
pop
jnp
lds
shrl
push
popa
fwait
insl
mov
push
fisttps
outsl
std
push
xlat
push
test
shlb
outsl
jp
mov
cmp
dec
leave
sbb
sahf
cld
add
in
mov
xor
jge
mov
lds
clc
or
test
jle
add
mov
pop
clc
mov
fmul
xlat
dec
pop
add
cmp
dec
inc
pop
mov
and
xchg
pop
fcmovbe
sub
je
xor
or
aam
mov
adc
and
pop
or
sbb
pop
cmp
pop
cwtl
cmpsl
in
aas
mov
xchg
mov
jecxz
dec
gs
inc
fldenv
scas
mov
into
jmp
or
and
es
sbb
lahf
mov
xlat
inc
jmp
popf
sub
mov
out
adc
adc
inc
loopne
insl
daa
mov
push
loopne
fidivs
xchg
push
push
into
loope
jp
xor
into
fucom
fs
lock
lock
inc
mov
cmc
dec
pop
in
xor
sarb
cmp
push
imul
sub
mov
cltd
dec
test
ds
daa
push
xor
pop
arpl
cmp
adcb
xor
xchg
adc
dec
jnp
mov
fincstp
stc
jmp
dec
mov
push
mov
repz
xchg
pop
cld
enter
cmpb
inc
stc
stc
std
pusha
and
jge
bound
inc
mov
inc
ds
jns
les
ljmp
rcll
xchg
push
rcll
push
cmp
movsl
test
mov
sbb
pusha
mov
xor
or
ficoms
adc
add
mov
arpl
shlb
cmp
aaa
pushf
jp
jge
or
mov
cmp
xchg
cli
pop
xor
scas
pop
out
and
daa
scas
dec
jmp
sti
xchg
gs
ret
arpl
mov
mov
pop
movsl
call
fidivrs
xchg
mov
aaa
loop
adc
clc
ret
xorl
stc
ja
movsb
fsts
ja
aam
add
pop
lods
cmp
gs
arpl
cmp
push
mov
hlt
dec
mov
and
repz
push
fwait
dec
js
stos
out
cld
xor
cmpsb
mov
imul
xchg
cli
and
sub
test
mov
mov
xchg
cmp
int3
subl
jo
incl
mov
adc
or
testb
pop
inc
int
call
and
mul
and
and
adc
daa
push
aaa
enter
xor
insb
insl
sub
ss
mov
loop
rcrl
cmp
sub
ss
hlt
movl
xchg
jns
sub
or
sbb
inc
imul
jb
ja
or
sbb
adc
loopne
nop
nop
fisttpll
mov
mov
fs
xchg
popf
arpl
jb
jl
jp
addr16
or
in
divb
adc
add
fnstenv
into
jecxz
pop
lock
add
pusha
roll
or
arpl
mov
xor
mov
fildll
cmpsl
into
mov
cmpsb
fstpl
xchg
mov
outsb
lock
stos
rclb
mov
sbb
mov
xlat
cmovne
aad
mov
outsb
inc
cmp
cmp
orl
gs
popf
mov
sbb
cmpsl
inc
into
and
pop
popa
in
xor
xorb
in
push
movsb
mov
setb
pop
push
mov
arpl
mov
and
xchg
dec
mov
pop
mov
lds
rcrb
dec
mov
fcoms
outsb
je
rcrb
aam
cmp
imul
fstpl
xchg
call
pop
fsubrp
sbbb
sbb
inc
sbb
sbb
into
leave
add
jl
ljmp
lods
mov
push
mov
jg
mov
xchg
enter
pop
mov
stc
push
scas
jne
js
in
pushf
jp
mov
cmpsb
test
test
and
mov
insl
insb
ret
andl
add
test
add
sbb
lcall
call
pop
ja
fucomip
mov
mov
push
xchg
gs
xor
jp
mov
ljmp
xchg
ret
fimull
inc
sbb
jb
add
out
dec
mov
jecxz
cmp
lret
shlb
test
lcall
cld
subb
sbb
mov
adc
cmp
cmp
xor
push
cmp
lret
or
leave
js
mov
fnstcw
fnstsw
and
xchg
jo
clc
mov
mov
mov
stos
mov
mov
sbb
das
orb
outsl
sbb
xchg
push
sub
lock
addr16
ljmp
fildl
sub
pushf
pusha
js
outsb
cwtl
test
and
mov
addr16
shlb
repz
movsb
jp
imul
dec
mov
rcl
or
nop
das
out
mov
call
aad
popa
lods
adc
xor
dec
fs
mov
add
das
xor
dec
push
jb
out
mov
xchg
jmp
shrb
hlt
lret
pushf
lea
add
nopl
lahf
ljmp
xchg
pop
add
jne
pop
add
add
sub
push
jecxz
or
inc
mov
movsl
fadds
dec
mov
push
xchg
push
mov
dec
in
add
mov
mov
cld
ret
jle
das
jp
add
in
sbb
out
adc
in
popf
ss
dec
xchg
and
cwtl
mov
dec
or
or
fidivs
cmp
mov
leave
into
mov
rcrl
xchg
data16
fucomip
fmul
lret
mov
ljmp
xor
pop
or
out
jge
rcrb
sysenter
cld
mov
jecxz
jecxz
xchg
lods
xlat
xchg
ds
ror
cmp
rcrl
sbb
lret
jecxz
arpl
cld
jge
push
testb
xchg
push
xlat
jbe
in
out
js
rcrl
jmp
scas
aad
push
sbb
ret
aam
addb
imulb
lds
sbb
and
xchg
stc
lcall
pop
push
lret
pusha
insb
loope
dec
jl
add
fnsave
jl
push
pop
mov
xchg
mov
sbb
mov
leave
xlat
stc
cli
add
mov
in
bound
out
dec
dec
dec
mov
add
jne
jp
rclb
sub
clc
mov
pop
fldt
test
cmp
sbb
inc
mov
int
sbb
fucomp
test
xor
sub
push
mov
shll
jno
cmpsl
push
mov
fsubl
fnstenv
fbstp
pusha
dec
popf
push
adc
imul
xchg
pop
shrd
fmul
and
jae
dec
adc
aam
ds
add
sahf
adc
movsl
mov
pop
repnz
out
cmpsb
insl
xor
mov
in
sar
mov
aad
lods
sbb
push
inc
ds
daa
and
incl
notl
mov
es
jns
dec
cmpsb
cmpsl
aam
addr16
push
scas
push
add
in
push
cmpsb
test
mov
xchg
lock
and
mov
add
jne
and
fidivs
scas
mov
jle
movl
mov
jle
jp
rol
das
mov
icebp
outsb
addr16
mov
sbb
jmp
and
int
aam
call
out
dec
xchg
aam
sub
loop
lret
call
pop
xor
in
inc
push
iret
cmpsl
mov
mov
sbb
loop
xlat
arpl
je
fdivrs
shl
jmp
rclb
imul
out
jp
jae
out
sbb
pop
test
jns
inc
jg
or
rcrb
aad
lcall
adc
pop
push
mov
mov
out
adc
add
iret
adc
mov
and
and
pop
adc
jb
in
lds
mov
mov
mov
pop
mov
sub
sbb
adc
jo
stos
nop
dec
call
call
dec
in
outsb
or
icebp
dec
imul
push
outsl
mov
inc
js
sub
inc
rol
dec
xor
push
out
xchg
jno
mov
pop
cmp
jnp
lods
cmpb
sbb
adc
stos
repz
xchg
lods
adc
sti
jns
and
in
test
out
and
rcll
ds
out
ss
xchg
adc
cwtl
enter
loope
faddl
fs
cltd
insb
popw
xor
push
mov
out
insl
shll
stos
ja
cmc
mov
jge
je
lods
int3
movsb
pop
mov
mov
push
mov
out
mov
dec
adc
fmuls
pop
push
pop
sub
es
xlat
lods
lcall
cmp
rorb
outsl
add
dec
mov
add
xor
enter
ljmp
jo
dec
gs
mov
icebp
xor
hlt
fisttpl
cld
mov
in
add
push
test
nop
sti
xor
cwtl
mov
adc
inc
add
lret
lea
mov
push
movsl
pop
adc
pop
jno
cmp
dec
stos
dec
pop
shll
js
mov
mov
jne
test
aaa
pusha
je
jle
leave
in
pusha
dec
inc
sbb
push
push
jmp
pop
add
xchg
cli
cmp
std
jb
and
mov
or
cmp
in
movsb
add
dec
push
xchg
pop
fcmovbe
es
scas
sbb
test
pushf
out
aaa
jo
inc
lea
gs
hlt
jg
clc
push
or
sbb
adc
push
add
rcr
pop
ss
ret
inc
sti
testb
add
subl
push
loope
pop
dec
cmp
and
mov
test
mov
jns
iret
call
insb
push
push
xor
int
inc
jne
daa
fcomps
mov
pop
and
adc
cmp
jge
and
sbb
fucomp
ret
aam
shl
sbb
imul
sub
xchg
push
cmp
leave
leave
pop
sub
pop
rorb
and
cs
add
lock
jbe
xor
in
mov
notl
sbb
jo
push
cmp
pop
adc
add
std
scas
add
scas
mov
je
aad
add
out
fwait
mov
sbb
int
push
and
aad
push
mov
movsl
aas
ret
aas
jl
es
dec
xor
push
xchg
hlt
dec
xchg
or
popf
call
adc
xchg
out
mov
cs
mov
add
pushf
push
cli
sbb
mov
dec
cltd
mov
and
ja
enter
mov
rcrb
mov
sbb
data16
ljmp
xchg
and
cmpsb
into
xchg
push
addb
push
mov
arpl
stos
adc
test
jp
jbe
or
mov
push
mov
xchg
pop
add
cmpl
inc
mov
nop
push
push
mov
daa
inc
jle
xchg
push
push
mov
inc
dec
aam
xor
shlb
hlt
ljmp
add
push
push
js
sbb
push
inc
xchg
movsl
dec
push
cmp
push
jg
stc
sub
imul
push
pusha
call
outsb
jmp
sbbl
test
and
pop
loope
add
shrl
cmp
repnz
sub
xor
adc
addb
and
xchg
repz
outsl
jbe
mov
sub
mov
cmp
mov
scas
pop
incl
mov
mov
cli
mov
push
int3
fidivs
mov
pop
addr16
jne
in
subb
mov
xchg
pop
push
dec
arpl
xor
in
adc
pop
sahf
xlat
cld
xchg
xchg
js
aas
and
inc
in
dec
int3
push
scas
testb
xchg
imul
roll
and
dec
out
and
outsl
or
xchg
rcl
lret
int
stos
nop
stos
xchg
lea
jp
jns
sub
add
out
insb
repz
inc
data16
aad
push
sahf
mov
iret
mov
test
aad
mov
je
jmp
aaa
icebp
out
xchg
std
sbb
stos
mov
sbb
loopne
ds
push
inc
dec
in
or
test
fistl
rorb
and
shlb
mov
repz
arpl
lods
cmp
ja
insl
pop
xchg
fincstp
sub
cld
fcomi
xor
push
xchg
in
daa
fimull
add
aaa
gs
inc
lcall
cmp
insb
popf
in
scas
pop
mov
lods
add
lods
imul
xchg
adcb
push
xchg
aaa
sbb
ret
adc
lret
repz
scas
sub
or
sub
fistps
loop
add
sub
in
jge
add
negl
adc
mov
cs
mov
jecxz
fnstenv
push
lock
leave
cld
mov
jl
fildl
int3
jle
push
outsb
adc
scas
fcomps
ret
jl
lahf
out
and
out
mov
shl
fnstenv
push
lock
mov
lods
clc
push
clc
test
mov
loopne
sbb
negl
and
push
clc
call
filds
sbb
xchg
jno
lock
loope
aad
mov
mov
daa
xor
pop
pushf
adc
mov
in
popa
dec
pop
cmp
ss
xchg
movsl
out
loope
xor
xchg
pusha
cmpl
addr16
cwtl
lock
fs
fwait
or
jmp
xchg
clc
xchg
or
xor
insl
mov
cs
pop
push
movsb
orl
repz
movsl
lahf
outsb
inc
xor
arpl
add
xlat
aaa
jle
outsl
sbbb
xchg
sub
mov
xor
sbb
pop
mov
push
or
cmc
loop
clc
mov
sub
inc
pop
add
fstpl
jbe
sbb
leave
out
add
clc
and
add
ret
sub
inc
adc
insb
jne
push
dec
popf
inc
sti
pop
inc
lret
cmpsl
std
scas
jne
dec
pop
jle
pop
push
adc
or
in
icebp
mov
and
add
fs
scas
movsb
jnp
mov
xor
pop
ss
fcom
test
je
dec
or
out
icebp
js
enter
pop
subl
pop
test
xchg
in
pop
adc
ret
adc
jl
push
ljmp
push
mov
mov
out
cmp
lds
and
decb
les
mov
and
decb
lods
mov
loop
out
pusha
jns
xor
jns
adc
sbb
xlat
fnsave
repz
mov
mov
jle
out
lahf
jo
push
mov
aam
pop
add
adc
test
mov
cmp
xchg
xor
pop
lcall
lahf
mov
out
sub
sbb
and
in
test
fmuls
pop
or
pop
movsl
xor
call
imul
fldcw
dec
repz
mov
xchg
push
xchg
gs
jmp
gs
fs
pop
imul
pop
sub
mov
add
or
push
dec
sbbl
inc
or
push
pop
sbb
mov
xor
add
out
fs
fsubr
hlt
xchg
xor
xchg
mov
cmpl
cmp
pop
mov
adc
mov
mov
xorb
mov
insl
mov
addl
in
sbb
pop
and
test
jns
and
clc
mov
adc
push
imul
mov
leave
push
and
xchg
and
loop
out
dec
es
cltd
in
jmp
leave
gs
cmp
adc
mov
lcall
aaa
and
and
lds
mov
fisubrs
std
ret
fimuls
clc
push
jb
mov
adc
inc
pop
enter
cli
fldenv
call
js
pop
outsl
mov
lock
cld
dec
testl
ja
insb
in
mov
lock
mov
in
cmpsl
arpl
sbb
test
or
adc
sbb
int
sbb
pop
xor
adc
mov
in
add
mov
pushf
fistpll
out
jle
xorl
movsb
cs
ret
dec
test
xor
mov
xchg
mov
scas
push
in
movl
les
inc
jg
lcall
ss
push
xor
push
and
fnsetpm(287
cmpsb
les
inc
lahf
loopne
pop
jp
dec
ss
fwait
sub
fisubrl
ja
xor
cltd
scas
bound
jo
cmp
sub
stos
dec
mov
rcll
push
push
rclb
vcomisd
jle
rcrl
jbe
pop
push
pop
adc
mov
add
dec
aad
or
adc
cmp
cmc
jb
sub
pop
insl
mov
or
pop
fs
mov
mov
mov
sbb
jmp
pop
cmp
mov
icebp
sbb
xor
fisttpl
js
mov
popa
sub
inc
dec
mov
lahf
push
or
pop
xchg
ss
cs
adc
test
mov
iret
push
or
xor
shll
inc
push
mov
or
mov
mov
sub
sbb
push
sub
pop
out
pushf
icebp
call
fimull
or
popa
out
or
pop
cmp
push
fisubl
sub
xchg
scas
and
in
pusha
loopne
addr16
lea
stos
dec
or
shll
es
pop
jno
jp
and
cmp
ss
push
out
fsubs
jne
test
sbb
or
mov
pop
pop
pop
subb
and
jno
fs
mov
insb
fcoml
mov
cmc
fs
mov
imul
sarl
xchg
sub
cmpsl
xchg
dec
jmp
repnz
loope
mov
add
fists
repz
jp
sbb
or
cmp
iret
dec
pop
lods
mov
stos
imul
es
test
mov
xlat
iret
add
mov
or
rolb
push
push
mov
lahf
dec
inc
pop
mov
js
bound
sub
and
dec
pushf
loop
shr
push
push
fsubs
push
divb
sub
mov
or
nop
mov
mov
mov
in
out
shrb
mov
lcall
sti
and
mov
test
pop
mov
inc
cmp
mov
jmp
xchg
inc
scas
adc
movb
pop
hlt
daa
xor
jecxz
les
xchg
add
cmp
add
decl
jle
mov
pop
mov
mov
fstpt
mov
mov
push
sub
push
fsub
leave
lds
enter
jmp
dec
pop
xor
jnp
pop
add
cld
push
jno
push
fstpt
mov
adc
test
push
pusha
cmpsl
xorl
int
mov
hlt
mov
xor
sub
aad
mov
les
adc
int
pop
aad
mov
pop
das
mov
mov
pop
cmp
push
es
xchg
push
sub
mov
sbb
inc
flds
push
fs
sbbb
popa
xchg
aam
punpckhdq
jecxz
xor
insb
fisttpll
sti
cmp
sahf
mov
pop
mov
add
repz
xchg
mov
daa
mov
repz
push
repnz
popf
jb
or
test
sbb
pop
pop
lahf
insb
icebp
cmpsb
cs
ss
cmc
mov
fcoml
aad
mov
push
shrl
inc
push
or
lock
mov
sahf
outsb
add
jge
or
cmpsl
cmp
mov
or
pop
sbb
test
ljmp
in
jge
js
or
xchg
jae
cmp
sbb
cs
not
test
sbb
xchg
add
pop
cmp
and
fldt
and
mov
pop
fsubl
inc
nop
push
fldt
sbb
add
inc
out
mov
jmp
push
push
adc
push
jecxz
and
sub
fisubrs
mov
je
stc
push
inc
cld
mov
enter
ret
outsl
xor
pushf
pop
into
xchg
fs
inc
pop
or
inc
into
fidivrl
or
andb
cld
dec
xchg
dec
mov
int
fisubrs
dec
lods
and
insl
jmp
cs
xor
lret
stos
sti
cmp
les
mov
sbb
insl
out
jb
push
or
movsb
clc
out
add
loope
sub
add
xchg
cwtl
and
or
outsl
xchg
push
std
xor
adc
fidivl
fucomi
xor
push
test
gs
dec
cmp
sbb
or
pop
and
add
cwtl
lods
dec
decb
mov
sub
jnp
jecxz
lcall
mov
cwtl
ss
cmp
in
dec
sub
or
cwtl
sub
test
mov
test
sbb
and
and
setle
xchg
imul
pop
dec
out
mov
mov
add
gs
and
cmp
mov
test
mov
jge
loop
cmc
cwtl
sbb
xchg
repnz
aaa
repz
jmp
jns
dec
jg
push
pop
pop
or
inc
aad
inc
pop
es
outsl
xchg
adc
hlt
adc
push
cmp
pop
jnp
and
in
imul
mov
cld
mov
cltd
adc
or
insl
cmp
jb
cmp
xorl
stos
mov
cs
out
fstl
or
fwait
out
pop
inc
lret
stos
push
push
addl
cwtl
push
dec
shl
xchg
lcall
push
jbe
xlat
mov
in
std
ret
push
imul
clc
icebp
aas
ret
movsb
xchg
scas
jbe
mov
xor
ja
sbb
dec
jp
in
insb
dec
andb
lds
fldenv
pop
mov
mov
idivl
or
outsl
sbbb
push
push
ja
stos
lock
and
jno
shl
jae
leave
cmp
pop
rorb
mov
in
jle
or
mov
in
xor
fcoml
stc
aam
and
aad
xor
bound
ljmp
hlt
cltd
outsb
pop
das
mov
enter
jmp
pop
mov
adc
push
je
cmpsl
sub
addl
pop
rclb
dec
out
adc
mov
rolb
xchg
test
sub
rolb
out
pop
mov
enter
jg
cs
pop
outsl
push
xor
imulb
iret
test
std
in
jmp
out
or
or
cmpsl
add
daa
shll
ja
out
mov
dec
adc
lahf
jecxz
pop
orl
mov
lcall
push
orl
jle
aam
scas
leave
sbb
sub
sub
jo
mov
add
xchg
inc
ret
lcall
lods
push
sub
jnp
jg
dec
or
xchg
inc
int3
sub
mov
dec
testb
ss
jns
mov
push
pop
sub
cmc
cli
push
jle
push
adc
jecxz
xchg
lods
cmc
cmpsb
shl
dec
shlb
call
cwtl
mov
jg
mov
sub
loope
adc
clc
into
cmp
shrb
stc
mov
add
aaa
scas
out
jnp
nop
dec
mov
adcb
mov
ds
popa
sbb
pop
push
shlb
jb
inc
jne
and
subl
xor
jp
sar
xor
pop
imul
mov
mov
pop
sub
or
lahf
jmp
push
addb
sub
mov
mov
cmp
sub
push
hlt
inc
movb
xchg
loope
out
and
ficompl
mov
jnp
fs
jle
outsb
xor
xor
jecxz
mov
jb,pt
xor
sahf
ljmp
shl
add
scas
repz
add
ret
jg
xchg
mov
hlt
enter
aad
insl
jecxz
cmc
pop
fisubrs
pop
adc
jne
lods
mov
sub
sbb
mov
or
jno
cltd
stos
push
cmpsb
fs
aaa
or
arpl
mov
sahf
outsl
xchg
xchg
lds
dec
cmp
push
push
or
mov
shlb
out
and
xchg
xor
das
cli
sub
push
mov
or
loopne
fsubrs
test
cwtl
movsb
sub
lcall
or
push
rep
jmp
outsl
insb
call
rcr
mov
inc
xor
imulb
ja
mov
cs
subl
mulb
scas
decb
jno
mov
mov
mov
xchg
out
pop
hlt
dec
mov
pusha
cmpsl
mov
cmp
inc
inc
push
xchg
mov
push
adc
arpl
je
mov
in
es
inc
sbb
imul
cmp
popa
mov
mov
fcmove
loope
imulb
adc
ss
pop
aas
psrad
shr
add
mov
sbb
mov
aas
es
ljmp
pop
xchg
mov
mov
mov
cmp
adc
jo
cmc
addb
xor
cmp
imul
fs
pop
lret
mov
ret
les
imul
lock
push
sahf
xlat
inc
push
push
xor
jno
shll
dec
orb
jno
es
icebp
add
or
mov
fdivl
test
push
shr
inc
push
ljmp
xor
xor
dec
dec
push
mov
jle
push
in
stc
imul
imul
jp
dec
cmpsb
pusha
mov
cmp
mov
jp
sub
and
xchg
add
cmp
mov
sbb
stos
jno
out
imul
pop
xchg
mov
mov
mov
push
subb
bnd
xchg
test
lock
mov
scas
add
gs
imul
fs
fwait
pusha
pop
mov
iret
and
pop
mov
dec
rol
sti
out
ljmp
fnstcw
xchg
and
push
jb
dec
xchg
aaa
div
inc
out
mov
or
mov
inc
fstps
push
arpl
arpl
add
ja
dec
add
mov
cld
lds
les
xor
add
inc
mov
pop
insb
xor
test
mov
bswap
push
sahf
cmp
mov
pop
pop
jb
movsl
dec
mov
mov
jmp
sub
int3
and
jge
adc
out
lahf
cmc
sub
out
mov
dec
js
ja
lcall
cli
pop
xchg
and
cmpl
inc
aaa
xlat
in
fisubrs
insl
rorl
fbstp
stc
stc
push
mov
mov
sbb
push
movb
or
push
and
scas
or
lret
or
dec
bound
adc
sbb
xor
cli
and
lods
test
cmpsl
adc
jnp
pushf
lods
pop
pop
jg
bndldx
sbb
or
fcompl
sbb
cmc
mov
sahf
push
xor
push
imul
mov
stos
and
cld
jmp
sahf
rcrl
outsl
aaa
jg
ret
sub
fmuls
sbb
in
mov
add
fcoms
push
jb
aaa
std
es
xchg
xchg
push
into
in
and
shlb
shrb
dec
pop
and
jae
push
xchg
rcll
push
jecxz
push
outsb
les
jecxz
fistl
iret
pop
lret
cmp
dec
mov
repz
in
and
pushl
xlat
mov
adc
pushf
mov
mov
outsb
cmp
scas
xchg
mov
cli
lods
cmc
sbb
hlt
mov
pop
sbb
movsb
push
sub
mov
mov
call
xchg
dec
add
jp
push
inc
sbb
jmp
cmp
pop
add
jge
dec
ret
cmp
jle
dec
in
mov
sti
or
ret
out
test
repnz
mov
and
rcll
mov
jne
add
ss
xchg
xlat
push
add
fcompl
inc
dec
sub
mov
and
xor
gs
int3
xchg
mov
pcmpgtd
ss
ljmp
push
sbb
inc
inc
mov
and
bound
scas
add
push
in
dec
in
int3
pop
mov
adc
jbe
loopne
xor
pop
cwtl
jg
lahf
les
in
cmpsl
adc
jle
push
out
adc
jecxz
dec
cwtl
push
aad
or
pop
and
rcrb
roll
lret
jl
mov
or
mov
aad
lcall
mov
hlt
mov
or
movsb
incb
adc
or
push
stos
add
and
leave
mov
insl
mov
orl
dec
inc
lds
pop
mov
popf
stos
movsl
or
cwtl
insl
insl
mov
and
decl
movsb
mov
addr16
mov
inc
hlt
jb
push
and
xchg
mov
jb
sti
xor
inc
pop
adc
adcb
leave
pusha
inc
test
pop
pop
addl
leave
adc
dec
jae
aaa
iret
cmp
fldl
std
test
sbb
sbb
push
xchg
decl
test
mov
or
in
adc
outsb
mov
or
add
fwait
xchg
mov
jae
push
imull
xor
lock
rolb
push
push
adc
push
jecxz
and
xor
sub
mov
je
stc
push
inc
cld
mov
call
mov
xlat
mov
cmp
shl
push
cs
popa
ja
dec
xlat
hlt
scas
repnz
cmp
fwait
jmp
pop
fstps
cmp
lret
sbb
sbb
or
das
push
push
rclb
mov
in
xchg
jne
add
cmpsb
push
cltd
fdivr
cmp
sub
fistpl
xor
add
addb
dec
test
adc
cmp
bound
sti
cmpsb
adc
repnz
ret
in
dec
add
push
pop
and
mov
add
lcall
inc
ret
js
idivb
xor
push
movsb
xlat
notb
out
int
in
ja
dec
jmp
and
adc
pop
lahf
loope
mov
jae
and
inc
push
mov
pop
xchg
mov
repz
shll
push
xchg
mov
pusha
fbld
test
adcb
mov
jnp
punpcklbw
sub
les
add
les
xchg
mov
fnop
idivl
cmp
fmulp
jle
mov
daa
rorb
fsubs
pop
xor
ret
push
pop
ror
inc
test
std
push
shr
jae
inc
xchg
pop
xchg
mov
cld
and
or
nop
mov
mov
cmp
adc
sbb
ljmp
pop
jb
pusha
cli
icebp
cmp
lret
and
sub
arpl
or
adc
push
fmul
ret
cmp
pop
inc
adc
xchg
js
sbbl
sub
adc
pop
push
test
cmpsb
add
ss
adc
icebp
jp
shl
lret
mov
hlt
xor
mov
cmpl
leave
dec
add
es
mov
je
ljmp
push
xor
push
mov
mov
in
out
mov
xor
std
in
pop
xlat
xchg
out
inc
addr16
mov
push
xchg
inc
jns
mov
aam
xchg
adc
and
jnp
inc
insl
das
sub
fimull
sarl
jns
std
nop
movsl
daa
lcall
loop
cmpsb
loop
gs
aad
fdivs
jbe
cmp
jne
loop
mov
outsl
inc
insb
inc
jb
pop
lock
or
jo
cld
popl
lahf
iret
lock
pop
insl
push
adc
aaa
shlb
mov
cld
sbb
jmp
cmp
test
mov
pop
jb
pop
lods
inc
adc
test
imul
fldl
sub
push
adc
fst
jp
jp
adc
or
sbb
fiaddl
add
stos
loop
cmp
hlt
lods
cmp
mov
xor
push
popf
ret
mov
xchg
test
cmpsb
sub
dec
push
fs
push
cmc
and
pop
enter
ret
insb
lcall
sbb
sub
insl
fimuls
mov
int
outsl
fcomps
push
sbb
inc
dec
push
and
push
lea
pop
cmpsl
nop
movb
inc
arpl
dec
bound
mov
mov
aam
jne
or
add
fwait
test
mov
cmp
push
xchg
into
xchg
mov
fdivs
roll
adc
xor
sbbl
cmp
jbe
mov
pop
ja
test
cmp
in
jge
insl
cmc
inc
xlat
stos
outsl
mov
imul
addr16
or
pop
sahf
mov
jle
das
cmc
dec
loop
movsb
loope
fldt
popa
mov
sub
mov
mov
call
push
pop
mov
sbb
pop
icebp
call
push
popa
pop
pop
dec
dec
dec
ss
jbe
in
inc
inc
mov
call
mov
add
std
push
mov
xchg
out
cmp
push
mov
insl
push
icebp
xchg
iret
and
push
or
dec
rcrl
mov
subl
lock
mov
nop
shl
mov
cmp
pop
rcrb
push
add
sub
mov
sub
lret
cld
sub
mov
fcmovnbe
enter
fstl
mov
repz
sub
ficompl
ret
push
and
push
into
sbb
insl
rcl
lock
enter
popa
cmp
fwait
insl
aas
pop
xchg
out
cmp
lea
xor
jbe
inc
mov
nop
stc
sbb
add
jg
int3
jb
nop
adc
jecxz
mov
xlat
mov
testb
mov
cs
repz
pop
dec
aad
shll
repz
out
repz
push
sub
cmpsb
cmp
inc
push
daa
xchg
push
inc
pop
and
xchg
int
enter
out
aad
push
mulb
lret
mov
pop
sbb
xchg
dec
mov
jns
cmc
mov
sar
push
push
mov
mov
cmpb
push
nop
inc
pop
sub
dec
mov
test
fimuls
jp
push
xchg
inc
lods
inc
jbe
cmc
mov
pop
sub
jb
jp
mov
imul
lret
sbb
es
outsb
and
loopne
bound
mov
in
popa
add
add
adc
jne
push
mov
icebp
and
insl
movl
enter
ds
sub
or
mov
dec
push
sub
call
adc
out
cwtl
jne
lds
and
pusha
js
jge
stc
cli
sub
fdivs
adc
pusha
mov
scas
mov
test
mov
dec
mov
mov
pop
jnp
mov
sub
sub
jbe
mov
bound
frstor
aam
xchg
js
xor
dec
mov
or
and
dec
and
xorl
push
rcll
sbb
sub
cmp
fbstp
cmp
adc
pop
xor
jg
inc
mov
in
in
das
lods
jp
pop
jg
push
lock
outsl
aaa
pop
inc
fldcw
fnstsw
pop
push
sahf
mov
sahf
cmp
mov
jecxz
mov
xor
mov
push
mov
fisubrl
enter
in
mov
or
add
adc
adc
arpl
push
fstps
xlat
xor
movsl
movsb
pop
stos
rol
data16
xchg
test
add
mov
or
cmp
mov
pop
mov
lock
cmp
popa
adc
gs
jae
cld
lea
into
lock
push
mov
mov
jg
pop
loop
add
sti
mov
mov
loop
pop
jmp
add
lds
and
mov
cld
ja
ficoml
aad
xchg
xor
push
aas
aas
icebp
mov
xor
lret
cmp
clc
push
aaa
inc
sahf
jp
cmpsb
arpl
mov
and
ficomps
push
sub
lods
jb
mov
cwtl
sar
pop
nop
rcll
and
jae
xor
repnz
push
mov
je
pop
cmpsb
cmp
int3
cmp
lock
xchg
jns
daa
rcll
and
repz
mov
insb
fmulp
scas
xor
imul
push
jbe
jge
roll
mov
pop
rcll
lea
dec
and
inc
jbe
cmp
and
xchg
js
jns
mov
xchg
adc
ret
ret
aas
nop
jmp
mov
pop
call
jne
insl
jmp
loopne
movb
rcl
mov
js
mov
addr16
mov
mov
lret
jecxz
fisubrl
imul
daa
add
add
lret
testl
sahf
mov
push
in
xchg
cmc
std
push
loope
pop
dec
mov
ret
cmp
fcomps
lcall
dec
sub
pushf
pop
mov
adc
mov
xchg
add
cmp
jns
inc
cltd
in
repz
mov
sti
mov
roll
add
cmp
xchg
or
pop
shl
and
mov
jmp
mov
mov
out
dec
cmp
popa
sbb
pop
adc
dec
mov
lea
inc
dec
cld
mov
mov
pop
mov
out
mov
rclb
and
pop
mov
ja
rcrl
push
dec
das
mov
jg
xchg
and
push
pop
loopne
ficoml
cmpsb
les
or
mov
cmp
mov
inc
sub
scas
int3
lahf
pop
je
add
cmc
call
sub
pop
js
pop
lods
daa
mov
jo
pushf
testb
adc
nop
sar
xchg
pop
inc
mov
jle
daa
and
jmp
repnz
jl
fldl
test
stos
pop
cmp
and
mov
push
sub
filds
xchg
xchg
mov
inc
jo
out
inc
fisubs
adc
pop
add
mov
mov
cwtl
dec
ret
out
inc
rorl
jp
mov
sub
add
fbld
int
sbb
dec
mov
shll
test
adc
xor
jle
or
lea
jl
xor
xchg
mov
mov
and
aam
scas
not
sarl
mov
loope
or
inc
add
outsl
rcrb
mov
enter
pop
or
scas
fs
movsb
xchg
shrl
sub
pop
scas
cmp
loop
les
add
adc
out
and
mov
imul
jns
jg
lret
jno
cmpsb
mov
xchg
pop
int3
lcall
pop
fld
add
dec
and
fwait
mov
in
inc
add
mov
xchg
mov
xor
das
dec
scas
mov
xor
test
add
add
cmp
cmp
jae
jge
cmpsl
loopne
add
fdivrs
xor
push
mov
call
lods
pop
ds
cltd
jbe
add
test
jae
mov
nop
sbb
and
outsb
jb
cmp
int
sti
dec
add
in
xor
mov
adcl
mov
push
es
jb
cli
add
sub
mov
jb
movsb
or
and
xorb
cmp
or
aas
cmp
jmp
je
or
mov
std
jmp
cli
lds
lahf
cmpsl
fidivs
ss
mov
adc
or
sub
push
pop
jns
lds
adc
imul
adc
and
push
shl
daa
cmp
xor
push
and
stc
imul
jo
pop
enter
pop
out
pop
xchg
or
aas
lock
jnp
mov
subl
outsl
sbb
mov
pop
dec
inc
scas
dec
loope
ds
push
adc
mov
incb
sub
mov
punpckhwd
lock
mov
leave
mov
or
adc
sub
mov
outsl
dec
xor
dec
jp
nop
cmc
mov
stos
xchg
xor
xchg
add
fdivrl
push
and
pop
icebp
inc
clc
push
pushf
and
int
cmp
pop
cmpsl
xchg
sbb
mov
cmp
pop
cld
aam
int3
scas
push
ret
fsts
mov
imul
xor
leave
jmp
fildll
faddl
dec
mov
inc
mov
loopne
pop
hlt
jno
push
or
mov
and
loopne
sbb
xchg
cwtl
cmp
leave
jne
pop
mov
lods
mov
aaa
mov
xlat
add
xchg
out
jbe
cmpsl
or
mov
jb
jge
cmc
movsb
xor
mov
jmp
rorb
lock
xchg
mov
sub
pop
sti
aas
int3
repnz
add
mov
inc
inc
rol
mov
scas
gs
and
push
cmpsl
adc
cmpsl
repnz
inc
mov
add
jle
xchg
cld
fwait
in
shlb
sbb
dec
sahf
loop
roll
dec
dec
in
in
push
pop
push
and
inc
movq
imul
addr16
lea
dec
outsl
push
das
outsb
lcall
mov
loopne
inc
dec
dec
into
gs
js
dec
add
popa
sbb
mul
dec
pop
sub
mov
ret
xor
ljmp
push
sub
adc
sub
icebp
sub
add
push
scas
ja
pushf
clc
or
testl
pop
xor
pushf
adc
pushf
and
repz
ds
call
outsl
or
cmp
or
sub
mov
lret
ljmp
lahf
adc
dec
rcrb
lds
mov
xchg
aas
sahf
lret
mov
pop
add
mov
in
icebp
insb
xchg
filds
mov
push
sub
mulb
bound
jns
int
cmpsb
mul
ss
iret
pushf
and
outsb
push
inc
pushf
fldcw
xor
jmp
xor
xchg
aaa
cmpsl
cmp
sbb
and
pop
and
xor
cmp
pop
add
cmp
inc
sti
pop
inc
lret
cmpsl
imul
jmp
popf
stos
mov
and
inc
popf
sub
scas
imul
sub
sbb
cmc
fst
xor
cltd
mov
les
add
xchg
cmpsb
cs
xchg
push
popa
sbb
or
loope
lcall
imul
and
mov
xchg
mov
or
cmpb
repnz
mov
out
or
lea
sub
dec
mov
lret
pop
jne
jae
imul
push
bound
out
and
mov
cli
mov
mov
mov
add
out
test
test
cmp
jmp
adc
stos
in
imul
xchg
mov
xchg
or
xor
lds
mov
jecxz
dec
jg
xchg
fs
cmp
jle
sub
aad
jns
lods
ljmp
ret
add
mov
stos
cmp
mov
cmp
push
out
cmp
adc
insb
enter
std
mov
out
or
pop
sbb
in
push
jl
ss
rcrb
sbb
bound
sbb
mov
xchg
xor
xchg
sbb
push
out
out
cwtl
add
out
sbb
mov
push
push
cld
pop
pop
inc
faddl
pop
out
leave
push
std
pop
jl
in
mov
mov
mov
push
cs
mov
cli
out
loope
fmull
adc
xchg
pop
mov
aas
aas
and
and
cltd
inc
adc
xor
stos
stc
lods
jae
sub
imul
sbbb
mov
and
fnstcw
push
push
clc
mov
cmpsb
xor
sbb
js
ds
sbb
or
jge
lret
fwait
cmpl
jp
cmpsl
jge
ficompl
std
scas
mov
imul
test
jno
push
jl
rcrb
insl
call
or
fwait
pop
fnstsw
hlt
xlat
inc
lods
xchg
dec
xchg
cmc
inc
ss
push
insb
or
cld
mov
aam
mov
fst
cmp
mov
and
pop
aaa
in
data16
dec
add
mov
pop
shll
nop
mov
sub
fcomps
js
push
pop
xchg
stos
mov
cmc
icebp
pop
pop
and
add
or
fimuls
and
imul
pushf
mov
dec
or
xor
mov
adc
out
loop
jg
xor
pop
mov
bound
movsb
push
mov
loopne
push
filds
loop
cmpsw
es
test
insl
stos
orb
gs
test
mov
mov
adc
leave
nop
mov
subl
xchg
xor
outsl
add
mov
insb
xlat
cli
lret
mov
outsb
clc
test
adc
std
aad
out
div
xor
pop
std
xchg
in
mov
out
dec
mov
or
daa
lahf
cmp
or
ja
or
push
lret
or
mov
clc
in
sub
jo
sbb
lret
dec
add
icebp
push
pop
jae
adc
fistpl
icebp
sbb
inc
push
fs
lea
cli
pop
and
jp
adc
std
fnstenv
add
data16
sub
insb
mov
mov
mov
adc
das
jp
xchg
and
push
jecxz
sub
add
pop
mov
pop
lcall
in
out
ss
push
mov
push
pop
jo
xor
xchg
or
and
cmp
dec
popf
inc
sti
pop
inc
lret
cmpsl
dec
mov
xlat
pop
lods
dec
inc
pop
and
xchg
adc
push
pop
in
cld
aaa
cmp
repz
shlb
dec
insl
jmp
mov
push
cmp
and
xchg
pushl
adc
or
inc
fisttpll
cmp
testl
add
jo
lcallw
dec
push
stc
fcomps
mull
push
fildl
out
gs
cltd
sub
in
push
dec
outsl
popl
jle
bound
xor
xor
fists
dec
jb
mov
push
dec
mov
lea
lds
mov
mov
push
outsb
cmp
jb
lahf
mov
jo
fisubrl
jnp
mov
sbb
daa
dec
jge
mov
xchg
sub
enter
mov
dec
lds
adc
dec
pop
xchg
mov
or
rorl
xchg
in
push
filds
hlt
xchg
mov
mov
pop
push
cmp
subb
mov
push
cmp
lcall
push
push
jnp
into
loope
test
lods
xchg
mov
inc
js
xchg
sbb
inc
shlb
popa
mov
inc
push
mov
pop
icebp
jmp
xchg
dec
insb
cmp
jno
xchg
adc
inc
imul
insl
fucomp
pop
xlat
inc
decb
pop
xchg
inc
leave
push
loopne
fstpl
imul
mov
cmp
dec
fmull
push
stos
adc
xchg
stc
aam
xlat
or
std
fbstp
pop
pop
or
mov
jb
flds
rorl
mov
adc
pusha
roll
sbb
adc
repz
jnp
mull
adc
scas
ds
mov
jp
movsb
push
pop
jo
and
imul
adc
mov
aas
push
gs
and
mov
mov
jnp
sbb
fisttpll
jg
sbb
js
mov
lods
push
sub
jbe
lds
jae
in
xchg
cmp
repnz
push
popf
jge
dec
add
push
sbb
cmpsl
xor
fs
call
cwtl
sahf
mov
jle
pop
mov
ret
xor
inc
jnp
repz
test
punpckhbw
std
addr16
cli
jg
sti
icebp
cmp
push
into
out
test
add
jecxz
inc
pop
test
cmp
shl
mov
or
rcl
cmpsl
cmc
pop
aad
in
sbb
cltd
cmp
xchg
xor
mov
adc
adc
cmp
rcrl
mov
sbb
push
mov
test
and
inc
jbe
sub
cmp
mov
nop
xor
sub
jns
xchg
inc
cmc
xchg
pop
insb
cmpsl
int
rorl
test
cmpsb
mov
jl
stos
xor
test
in
mov
data16
cltd
push
xor
dec
xor
add
jl
and
push
add
xor
outsl
mov
push
pusha
aam
xlat
push
mov
or
movsb
pop
inc
mov
mov
lods
out
sub
arpl
je
ret
ja
test
mov
gs
mov
outsl
imul
xchg
mov
push
mov
lods
jns
imul
inc
mov
std
jp
out
jne
cmp
push
push
stos
sub
jb
mov
cmpsl
mov
cmp
test
in
mov
lret
push
cmp
lods
xchg
pop
ss
push
cmpsl
sub
mov
mov
gs
test
pop
mov
jns
es
aam
sbb
icebp
mov
jp
jne
andl
mov
fcomps
movsl
cmpsb
in
jmp
lcall
movsl
mov
adc
or
fwait
fwait
dec
lret
lea
or
or
cmp
aam
mov
test
fs
pushf
fstpl
cmpsb
pop
movsl
jne
pop
scas
addr16
pushf
and
sti
jle
call
fs
push
and
clc
enter
or
mov
mov
mov
aad
cmp
mov
icebp
in
xchg
push
and
inc
cmp
js
cs
and
or
cltd
jmp
popa
dec
push
mov
xchg
or
mov
xchg
push
push
negb
sub
sbb
pop
and
mov
mov
xchg
xor
loop
scas
cld
xor
insl
cmc
je
gs
sar
pop
jmp
ret
and
mov
jo
fbld
sbb
inc
pop
out
or
bound
fildl
ss
and
out
add
mov
cmp
mov
fwait
ret
pop
dec
xor
add
jnp
mov
jns
jle
push
xchg
out
mov
dec
sbb
imul
mov
inc
pop
push
push
test
pusha
sbb
xchg
out
cmp
movsl
rcl
icebp
inc
push
jne
jmp
or
mov
aam
mov
aas
push
mov
sahf
in
sbb
or
and
mov
jb
add
jl
cmp
je
hlt
or
jo
adc
shl
int3
out
cmp
cmp
pop
jle
xor
dec
xchg
ss
mov
lret
ja
ljmp
cmpl
or
add
push
inc
xor
cmc
les
jo
insb
ljmp
movsb
pop
subb
cs
add
pop
rcll
xor
fadd
ret
xchg
adc
leave
adc
cmp
jmp
cmp
fstpt
pop
or
or
xor
push
inc
or
aas
fs
fisttpl
addb
jecxz
mov
jnp
push
sbb
push
or
inc
sbb
and
dec
push
xchg
pop
mov
es
pop
or
int3
sub
loopne
cmp
mov
aam
int3
in
mov
jbe
add
push
inc
dec
out
push
xor
mov
add
repz
dec
mov
out
mov
cmpsb
cmp
stos
and
insl
cmpsb
test
cli
dec
xchg
imul
lret
push
sub
or
push
inc
or
fimull
in
arpl
push
call
sbb
add
xor
xor
mov
negb
shll
mov
int
lret
pop
aam
imul
lock
in
push
int3
xor
cmpsl
lea
adc
push
sub
imul
jg
and
in
in
lods
xor
ljmp
xchg
cmp
ret
mov
loop
pop
ljmp
sbb
jmp
out
inc
inc
test
sar
negl
sub
test
or
mov
mov
pop
aam
xor
add
xor
ror
add
or
mov
scas
inc
lods
cld
movsl
or
push
jle
pop
pushf
fistl
iret
cli
aaa
cli
repnz
cld
mov
aaa
jmp
sbb
ffree
mov
fbstp
push
jmp
shlb
ljmp
xchg
fdivrs
dec
pop
cmp
inc
in
sub
fwait
jl
rorl
stos
in
movsb
into
sbb
loop
in
scas
mov
mov
repnz
imul
push
and
ds
pusha
into
adc
cli
sahf
es
jns
sbb
lock
mov
push
andl
xlat
xor
pop
mov
cmp
sbb
leave
dec
mov
pop
ret
nop
lods
test
sahf
add
push
pop
cmp
sub
dec
add
out
or
leave
mov
cmc
xor
pop
pop
xchg
push
shlb
dec
add
jle
cmp
jp
rcrb
subl
cmc
outsb
jmp
imul
adc
nop
mov
jg
lcall
lret
adcb
aam
mul
daa
fcmovb
stc
add
dec
or
aam
sbb
and
popa
mov
add
gs
sar
or
pop
inc
int
gs
cmc
lahf
into
test
pop
fs
adc
lods
push
jmp
repnz
es
sbb
std
icebp
loop
fiaddl
daa
rcl
add
push
sbb
cmp
mov
inc
pop
lahf
sti
jmp
shr
movntq
mov
mov
shrb
cmp
dec
push
clc
pop
jecxz
test
jbe
cld
outsl
mov
loope
je
xchg
pushf
xchg
insl
lods
push
lcall
dec
jg
js
xor
test
imul
cmp
xlat
push
xor
fldenv
xor
nop
dec
mov
push
jns
fisttps
scas
pop
mov
mov
mov
or
jnp
mov
leave
aaa
sub
adc
jo
pop
les
pusha
dec
and
push
cmp
xlat
sub
in
mov
shlb
mov
add
inc
pop
fists
outsl
in
mov
insw
xor
icebp
or
or
mov
dec
jle
jge
ja
jle
iret
jb
sti
js
sub
fcomip
fnstcw
mov
loop
test
mov
iret
js
ds
or
test
popa
adc
inc
loopne
int
inc
mov
add
ljmp
out
push
cs
xchg
mov
imul
jge
pop
mov
addl
adcl
and
jne
and
xor
lds
add
clc
mov
cmp
jno
rcrb
ret
push
aad
les
pushf
test
push
inc
leave
add
popf
pop
add
ds
mov
cmpsl
push
xor
pop
aad
int3
pushf
aaa
mov
or
and
fstpt
loopnew
cmpsb
adc
mov
sbb
mov
lret
mov
repnz
lahf
or
mov
push
add
loopne
fidivl
mov
dec
cltd
js
dec
mov
sbb
adc
mov
push
pop
out
mov
stos
outsl
cs
jecxz
in
rcll
pushf
sti
mov
jg
imul
inc
stos
rcll
stos
scas
movsl
sub
xchg
push
pop
push
inc
mov
fcmovb
fwait
xor
imul
pop
lcall
mov
inc
divl
aad
into
cmp
int3
mov
and
inc
in
stos
lret
mov
sbb
xchg
mov
dec
movsb
lret
nop
mov
or
dec
push
xchg
xor
add
cmp
push
xor
mov
xor
add
lds
sarb
xor
cmp
add
fldenv
cltd
std
jne
dec
ret
scas
pop
mov
inc
ljmp
shrb
out
mov
shrb
mov
sbb
testl
jae
es
xor
jbe
cmp
ss
fs
cli
mov
roll
add
loopne
push
mov
in
adc
jge
in
mov
cs
mov
and
cmp
xor
and
pop
cmp
loope
fistpl
push
dec
lock
out
std
pusha
ret
xchg
mov
sbb
inc
sub
int
and
adc
xor
mov
add
fcoms
cmp
sub
fstpt
mov
repnz
jmp
or
fwait
popa
mov
cld
iret
xorl
xchg
adc
mov
imul
push
mov
ds
or
sbb
pusha
mov
and
cmpsb
and
fbstp
pushf
in
idivb
add
rcll
mov
xor
fst
adcl
xor
ja
sub
ret
add
xchg
add
add
xchg
xchg
xor
in
cwtl
int
fcoml
push
lods
shll
sbb
in
and
dec
iret
pop
stos
jbe
pop
dec
idivl
mov
in
dec
pop
cmp
cli
jge
mov
fmuls
cld
lcall
ret
push
shrl
aad
pop
xchg
movsl
sub
stc
stos
popa
clc
sub
test
mov
pop
fstpt
sub
std
ror
clc
jl
xchg
xchg
adc
adc
pop
jnp
push
xor
and
lahf
iret
sahf
sbb
adc
cltd
jno
jge
push
adc
sbb
int3
lret
or
movsb
cltd
and
inc
jnp
mov
repz
push
push
cmp
scas
lea
test
cmp
pop
les
adc
imul
push
movsl
jle
cli
adc
and
pushf
xor
sub
popa
xchg
out
fldl
jle
popf
mov
jle
dec
fwait
cmpsl
push
or
xchg
cmp
das
and
test
movsb
xlat
ja
cmp
test
push
mov
dec
xor
pop
and
gs
mov
xchg
cmp
cmpsb
mov
ret
ja
sub
rcrl
push
imulb
fistpll
mov
pop
in
pop
cmc
jge
push
pop
sbbl
les
add
push
ss
xchg
pop
loopne
mov
lods
test
and
sbb
and
inc
in
inc
cmp
add
pop
adc
mov
rolb
iret
lcall
dec
push
xor
jge
clc
or
ds
cmpsb
pop
test
daa
test
push
movsl
xchg
push
aaa
sahf
es
mov
pusha
lret
repnz
or
inc
mov
xchg
adc
jae
jae
stos
inc
dec
or
icebp
push
mov
mov
pop
mov
or
xchg
hlt
sbb
push
xchg
lock
dec
add
jnp
push
mov
mov
stos
dec
push
rorl
lods
cmpsb
lea
dec
in
cmp
pop
clc
or
pop
or
pushf
xchg
ficompl
mov
mov
cmp
mov
hlt
iret
pop
jecxz
dec
sub
les
out
out
mov
out
mov
repnz
xchg
cmp
push
pushf
pusha
out
lods
pop
pop
cmp
sbb
push
movsb
sahf
lret
sbb
cmpsb
mov
pop
cwtl
push
jno
add
cmc
sbb
out
mov
jo
fidivrs
lahf
sti
into
add
pop
mov
mov
outsb
xchg
daa
into
leave
js
inc
add
cli
adcb
repz
outsl
divb
push
mov
mov
add
daa
loopne
or
sbb
add
scas
xchg
mov
fstl
movsb
xchg
xor
subb
xchg
fwait
mov
ss
jbe
lahf
pop
jle
icebp
sahf
xor
push
fldt
push
int3
pop
ja
popf
imul
pop
out
or
cmpsl
mov
or
scas
rclb
pop
pop
cmp
test
aad
xchg
pushf
xor
cli
leave
repz
push
jp
data16
sub
aas
sbb
cmp
sbb
or
and
xor
sbb
out
loopne
dec
mov
sbb
ret
enter
movb
sbb
xchg
sub
in
dec
pushf
push
mov
jge
aaa
int
lcall
lcall
adc
push
mov
sub
sub
sub
scas
ss
cs
sbb
rol
jnp
outsl
inc
jb
ss
dec
push
xchg
mov
sbb
jge
cmpl
inc
cmp
ja
mov
push
xchg
inc
out
lret
rep
cmpsb
push
push
lcall
leave
xchg
inc
lock
jle
bound
testb
and
cmp
adc
add
sbb
addr16
stc
xor
jb
or
or
rorl
xchg
cwtl
jmp
ja
sbb
push
fwait
popa
popa
in
imul
mov
or
fcoms
cli
jns
fcmovu
push
jecxz
jmp
or
lds
jae
sub
inc
mov
mov
inc
lret
sub
or
daa
and
sub
jecxz
add
nop
loopne
push
xchg
out
cmp
cmp
push
dec
xchg
jg
lods
cmc
fcmovu
add
adc
inc
icebp
pop
scas
mov
in
cmp
out
pushf
pop
sub
mov
in
cli
jne
or
insl
mov
sub
mov
xchg
push
xor
mov
and
call
jns
shll
dec
mov
cmc
decl
dec
ss
sbb
sub
les
lret
pop
mov
imul
jmp
loop
xchg
push
int3
dec
addr16
xlat
adc
fidivrl
sti
and
pop
adc
add
push
imul
repnz
mov
sbb
ss
xor
fimuls
xchg
or
int
ja
sarl
mov
mov
xchg
dec
leave
pop
stos
aad
or
or
xchg
in
inc
mov
push
xor
les
mov
add
jp
int
aam
pop
lcall
aad
les
sbb
fs
ret
in
add
fsubr
bound
add
popf
sar
cmpsb
icebp
daa
jle
mov
andl
fisubs
jbe
repz
rclb
jl
bound
cmc
das
cmc
ljmp
push
dec
ret
lcall
subl
cmp
pop
xor
jne
subl
inc
or
sarb
and
dec
and
popf
push
aas
xchg
add
jno
sub
outsb
sahf
xchg
mov
into
push
jg
jae
push
sub
pop
pushf
push
xchg
or
dec
mov
add
aam
out
movsb
repz
jo
es
jmp
adcb
test
int
pop
addr16
xor
aas
xor
xchg
sahf
or
push
hlt
sbb
in
out
inc
xor
call
dec
lods
aam
add
mov
jg
adc
incl
inc
or
lcall
sub
jmp
xlat
mov
ljmp
mov
jg
adc
incl
movsb
subl
int
out
xchg
in
clc
mov
jmp
xlat
mov
ljmp
in
in
mov
sarb
fucom
jae
stos
fcmovnu
adc
xor
lea
popf
mov
push
mov
lret
mov
adc
dec
or
adc
add
mov
add
lcall
out
push
ljmp
rorb
insl
mov
je
xchg
inc
dec
mov
pop
test
or
pusha
rclb
mov
incl
sub
and
jl
push
mov
ljmp
jmp
xor
in
sahf
add
imul
or
out
mov
les
mov
and
cltd
pop
push
add
shl
call
xor
loopne
jnp
push
pop
out
mov
fildl
lds
aas
ss
movsb
jb
loope
or
jecxz
sbb
aam
gs
sbb
fadd
repnz
stc
jns
pop
push
fdivrp
int3
or
movsl
das
aaa
jbe
repz
lcall
dec
popf
sub
mov
inc
xor
loop
ljmp
sbb
xor
outsb
gs
sub
imul
pop
fimuls
or
movsl
lcall
adc
xor
out
inc
pop
inc
xor
add
in
aas
mov
lahf
rcll
pushf
push
lret
ljmp
lock
mov
or
shll
jge
or
push
out
sub
pop
mov
mov
cmp
ficompl
jmp
sub
aam
outsb
popa
add
mov
stos
fdivrp
xchg
lret
pop
pop
cmp
inc
ss
cld
push
dec
popa
xchg
aam
mov
mov
jge
jp
xchg
andl
and
inc
shrb
pop
mov
cmp
ljmp
push
leave
test
mov
cltd
addb
in
mov
popl
fadd
jo
sbb
mov
test
fs
xor
push
add
sub
mov
mov
bnd
sub
dec
xor
lock
fwait
fs
add
pop
ljmp
inc
pop
and
sbb
push
pop
inc
arpl
fsts
lea
popf
mov
xchg
enter
xchg
jbe
xor
loope
xor
adc
or
ret
sbb
and
js
fdivrs
pusha
cmp
cs
jnp
or
sub
cmp
dec
sti
scas
std
insl
cmp
cmp
adc
xor
addr16
fimull
push
jno
cmp
fmulp
cmp
push
fnstenv
jne
test
sub
loopne
pop
int
jmp
subl
pop
mov
es
fdivp
sub
int3
add
mov
sbb
ss
ret
jne
aaa
imul
jno
xchg
cmpsl
fildll
dec
shlb
in
outsl
das
pop
xor
or
orl
cmpsl
xor
pop
xchg
outsl
cmp
sub
jp
push
inc
adc
add
and
mov
pop
inc
test
jl
sti
lods
xlat
mov
inc
mov
out
or
dec
adc
add
pop
push
sbb
mov
lods
test
loop
fimull
xchg
repz
sbb
testl
or
or
jae
mov
daa
inc
js
mov
sar
pop
shlb
push
nop
sub
cmc
cmp
jo
dec
mov
lcall
lods
mov
jmp
mov
andl
test
aaa
jle
hlt
loope
mov
movsb
aam
fmulp
mov
pop
inc
pusha
xchg
mov
popf
mov
mov
or
sbb
pop
rcrb
test
enter
popa
dec
fldz
mov
sbb
xor
nop
test
dec
test
inc
fsubrl
idivb
adc
push
jge
push
mov
cmp
mov
pop
xchg
push
mov
fidivs
xlat
in
pop
push
sbb
scas
xchg
inc
xchg
icebp
data16
mov
mov
lods
stos
sahf
stc
int
pop
movsb
pop
mov
mov
xor
mov
or
pop
mov
or
cmp
mov
pop
push
in
pop
xor
cmc
mov
jns
pop
popa
jnp
cwtl
pop
add
mov
mov
jb
cmp
mov
stos
fistpl
in
and
test
push
scas
les
push
cli
mov
fwait
lret
and
fwait
adc
out
sub
adcl
leave
mov
cltd
sbb
add
adc
icebp
clc
pop
out
fmull
mov
add
sbb
fldenv
cmpsb
cmpsb
mov
jmp
and
fidivrs
loop
cmpsb
fisubrs
mov
jle
and
inc
fistpl
sbb
and
lds
push
or
sub
jle
fcomps
mov
imul
test
shll
sbb
fdivp
pushf
scas
push
xchg
mov
imul
sub
sbb
xor
ss
mov
xchg
mov
movb
sarl
inc
xchg
pop
mov
inc
aas
and
je
xor
mov
jns
xor
dec
adc
cs
jmp
imul
cmp
and
push
mov
movsb
pop
lods
add
ljmp
notl
loop
stc
cmp
push
push
xchg
xchg
pop
sub
add
mov
inc
mov
movsl
pop
mov
sub
ss
push
test
add
orb
icebp
shll
pop
loop
nop
mov
repnz
pusha
outsl
xchg
or
jmp
pop
add
repz
icebp
jl
test
mov
rorb
jae
leave
mov
cmp
ljmp
and
repnz
or
mov
iret
pop
xor
and
cmp
add
int3
test
or
rcll
jp
in
pop
outsb
out
rcll
decl
dec
shrb
pop
call
dec
xchg
sub
pop
cmp
mov
push
push
into
call
movsb
lret
dec
fcoms
cmp
test
mov
aaa
fisttps
xchg
push
test
xchg
xchg
out
orb
xchg
pusha
sti
cs
mov
xor
mov
push
adc
sub
jp
lock
fxch
fnstsw
daa
lret
inc
jno
into
insb
and
adc
pop
mov
lret
sti
nop
push
inc
or
push
pop
outsl
std
mov
adc
xor
jge
cmp
cmp
pop
jne
xchg
mov
adc
mov
xchg
imul
cli
pop
out
push
xchg
xlat
xor
arpl
stos
add
mov
and
push
loope
std
dec
jne
sub
jno
xchg
and
dec
aas
push
mov
pop
xchg
repnz
lods
xchg
jbe
pop
rcrb
enter
inc
dec
and
xor
les
pop
xchg
push
es
ret
add
push
xor
adc
jge
push
jle
roll
stc
mov
push
cmpsb
add
cmc
jmp
and
aas
xor
adc
loop
cltd
add
or
inc
add
fstps
dec
xlat
test
fwait
mov
shr
jne
adc
adc
or
xor
fidivrl
negl
movsb
cmp
cmpsb
inc
xchg
sbb
imul
add
hlt
mov
pop
xchg
inc
and
and
scas
and
sub
mov
test
testb
mov
stc
aaa
add
jne
sahf
add
sub
stos
lcall
data16
add
xchg
decb
jb
mov
or
addr16
adc
jmp
jae
mov
popf
sub
jp
outsl
inc
inc
adc
testb
pop
inc
cmp
or
into
pop
jbe,pn
dec
jns
mov
cmp
adc
stos
data16
add
ljmp
stos
lret
adc
jge
xlat
xchg
sbb
lea
dec
adc
cltd
push
dec
cmp
pop
mov
mov
mov
sub
lret
lock
add
bound
sbb
lret
in
jbe
roll
repnz
lret
je
scas
mov
test
jmp
jno
ror
fwait
cmc
xor
mov
cmpb
ds
jp
push
push
mov
xchg
adc
dec
jp
xlat
jae
jne
or
xchg
push
mov
ret
pop
mov
xchg
dec
sbb
cvttps2pi
rolb
mov
das
lock
push
icebp
pop
negb
inc
nop
sub
cmp
inc
icebp
add
daa
pop
jl
or
xchg
mov
xchg
out
push
lea
adc
scas
mov
test
adc
cs
insb
dec
rol
pushf
add
push
pop
xchg
xchg
pop
out
punpckhdq
out
pushf
jne
mov
mov
sbb
xlat
loope
mov
xchg
es
dec
cld
movsl
stos
add
je
fwait
sbb
sbb
out
andl
or
sbb
lods
inc
jnp
pop
pusha
push
call
mov
shlb
icebp
sbb
pcmpeqw
jl
repz
pop
and
mov
stos
nop
mov
add
mov
fstps
add
mov
sarl
out
xor
cld
loopne
push
pop
daa
sbb
dec
push
leave
sub
sbb
repz
gs
xchg
std
pop
push
mov
mov
out
and
mov
in
mov
cmpsl
es
inc
cmp
cmp
mov
repz
push
add
data16
mov
cld
jb
or
ret
popa
mov
movsl
push
arpl
mov
ljmp
in
jp
mov
push
mov
fmuls
xchg
xchg
test
add
xorl
test
jmp
inc
jl
test
jae
fdivrl
ljmp
into
xchg
push
stos
add
lods
mov
mov
cmp
orb
cltd
xor
dec
push
sbb
mov
sarl
fimuls
out
mov
setae
pop
xor
add
dec
cld
insb
ja
hlt
shll
sub
mov
push
mov
cmp
mov
aad
lock
imul
scas
mov
ljmp
mov
jp
and
jl
or
aam
in
mov
lahf
xorb
dec
and
mov
and
insb
pop
add
ficomps
insl
or
lea
xchg
and
xor
xchg
negb
xchg
jle
add
xor
jo
fiadds
addr16
dec
lcall
ret
inc
sbb
popf
ss
and
iret
jmp
and
xchg
test
mov
and
push
jmp
inc
nop
push
add
je
in
in
cld
scas
fcomps
mov
jmp
das
lea
cmp
add
lods
jmp
aam
test
push
adc
ljmp
cltd
push
jl
xor
fwait
push
mov
pop
sbb
dec
pusha
xor
xchg
fildl
add
push
mov
leave
cmp
mov
int
dec
in
loop
push
ficoml
fsubrs
mov
push
jg
loope
pop
xor
cmp
loope
pushf
fnstcw
cwtl
jge
mov
xor
mov
adcl
pop
mov
cmpsl
inc
add
roll
lcall
jmp
sbb
ss
push
addr16
push
js
shll
sbb
mov
ret
dec
stc
pushf
ja
push
adc
sub
pop
in
popf
rol
push
jg
inc
aam
cmc
cld
cmp
cli
mov
pop
sub
add
dec
lods
testl
inc
pusha
int
aas
mov
jnp
pop
cmc
cwtl
int3
aas
mov
in
int3
ljmp
lea
cmc
lods
js
xor
adc
hlt
rcrl
xor
sub
aad
pop
icebp
adc
xchg
xor
cmpsb
fs
fnstcw
mov
repnz
test
test
bound
loope
pop
fmuls
xor
nop
mov
ljmp
xchg
jecxz
fists
jl
pop
or
sbb
mov
js
and
cmp
mov
add
and
sar
loope
xchg
xor
mov
repnz
int3
clc
dec
ja
xchg
ljmp
std
mov
sub
test
add
dec
leave
call
fcompl
and
out
cmovae
adc
inc
adc
repz
jmp
cld
or
push
lcall
ja
xchg
xchg
hlt
aad
push
aam
xor
leave
in
stos
cmp
mov
aaa
ficompl
inc
mov
sub
mov
popf
aam
sbb
cmc
pop
out
fsubrs
lahf
adc
push
mov
sub
xor
dec
insb
std
cmpsl
gs
jmp
jns
xchg
cwtl
mov
insl
in
inc
mov
into
ja
sub
mov
sbb
stos
xchg
loopne
mov
clc
push
repz
mov
push
xlat
cmpsb
sbb
js
movsl
int
outsl
pop
and
mov
stc
les
lret
test
rcr
adcl
pop
xchg
hlt
push
fisttpll
mov
jmp
fld
push
add
ds
cmp
sub
mov
stos
mov
mov
addr16
mov
std
mov
cwtl
pop
xlat
ja
add
fisubs
dec
inc
arpl
mov
xchg
pop
outsb
push
out
shrb
test
popa
pop
push
jl
outsb
xchg
cmpsl
jl
in
dec
aam
shr
pop
inc
pop
inc
fcmovnb
push
cmpsl
lods
sbb
and
clc
pop
rcrb
mov
mov
cli
imulb
push
add
and
std
mov
pop
dec
fsubl
xor
lret
cli
sahf
cmp
pop
pop
xchg
daa
push
sbb
cmp
jnp
lcall
lock
orl
xchg
xor
repnz
pop
xor
sbb
out
mov
cld
rcl
xor
lds
adc
cmpsb
mov
sub
add
inc
dec
out
in
sub
fldcw
cld
push
xchg
pop
fs
mov
incb
jle
cmp
mov
jns
jmp
or
push
cwtl
gs
pop
push
add
add
pushw
mov
sbb
mov
stc
cmp
sbb
aas
jmp
shl
xor
cmp
jbe
or
add
aam
les
or
lret
mov
rcll
fdivrs
les
ds
mov
arpl
push
mov
cmpl
enter
mov
pop
movsl
sub
lock
les
rorl
and
pop
sub
mov
cmp
in
mov
imull
mov
pusha
xchg
dec
fnstcw
adc
mov
and
loop
push
fists
in
sub
mov
out
jecxz
out
mov
sbb
andl
push
dec
mov
dec
lcall
addr16
push
ret
push
inc
pop
jge
int3
pop
jns
mov
leave
les
mov
push
cmp
aam
jns
incl
push
xor
mulb
cmp
add
xor
jae
sahf
jl
mov
and
in
ds
add
mov
popa
sub
js
ss
mov
lret
andl
ret
out
sub
fwait
lcall
dec
xor
inc
insb
incb
in
rorb
in
jne
aas
out
in
cmp
mov
mov
add
popa
scas
xchg
jo
sub
cmpsl
dec
lret
in
jns
lahf
out
cmp
iret
jmp
jno
aaa
adc
repz
jmp
xchg
xchg
push
insb
clc
insl
cmpsb
mov
lcall
inc
jg
fsts
iret
adc
adc
xchg
sti
mov
push
xor
decb
js
push
and
sbb
sarb
pop
in
notb
dec
out
in
push
test
pop
lea
ret
movsb
repnz
pop
cmp
lods
shrb
pop
cmp
xchg
loop
or
ficoms
jg
lea
push
shl
cld
mov
icebp
pop
rcl
jl
adc
in
or
add
fiadds
fistps
outsl
imul
xor
cltd
dec
cs
mov
jle
fadds
cmpb
mov
rcr
lds
lea
xchg
call
arpl
cld
sbb
xchg
stc
jmp
notl
fwait
lahf
es
add
or
arpl
jns
loopne
iret
adc
inc
pop
pop
adc
fstpt
fcomp
pushf
out
mov
stos
fldenv
mov
adc
and
outsb
sbb
sbb
sbb
add
orb
loop
mov
gs
or
xchg
mov
dec
cs
je
xor
or
and
adc
pop
sub
and
mov
jns
xchg
mov
and
pusha
outsl
les
outsb
in
mov
out
adc
ja
push
sub
dec
rol
cmpsb
insb
adc
ficompl
ret
cmpsb
mov
pavgb
loope
std
cmc
enter
cltd
push
and
push
add
xchg
insb
mov
sub
scas
pop
ror
and
mov
jmp
scas
sub
lahf
xchg
jle
or
shll
dec
cmp
jns
test
outsl
adc
loopne
mov
loope
xchg
std
adc
roll
and
cmp
jp
mov
negb
mov
jl
popa
mov
mov
and
out
arpl
mov
loopne
cli
mov
push
dec
ds
leave
or
sbb
sahf
cmc
and
mov
outsl
es
popa
xorl
pop
lret
je
int3
lahf
test
sub
aas
sub
mov
cmp
sub
leave
outsl
push
jbe
jbe
push
mov
jnp
sahf
jbe
ss
stos
push
sbb
mov
aad
and
mov
call
lret
dec
fbld
inc
cmp
test
lret
in
mov
int
int3
sub
xor
fs
xchg
or
data16
addr16
cmp
aam
aas
mov
int3
rorb
dec
and
hlt
mov
insl
mov
in
bound
loop
fbld
sub
call
out
push
daa
cli
xchg
fld
daa
lods
xor
dec
or
add
fwait
inc
inc
jne
shrb
out
movsb
stc
pop
xchg
lahf
mov
aaa
mov
pop
mov
cmp
lods
lea
xlat
outsb
xor
jg
ds
add
adc
mov
lock
mov
xchg
jp
mov
ffreep
xor
ret
sbb
inc
jno
or
jle
or
popl
fwait
and
adc
in
inc
pop
gs
mov
sbb
pop
cmp
pop
cmpsl
dec
pop
inc
icebp
stos
cmp
cmpsl
mov
aam
push
gs
sbb
and
test
cmp
movsb
mov
xchg
mov
hlt
fs
jg
push
in
pop
lahf
or
xchg
pop
mov
jecxz
sbb
shll
push
mov
and
jne
testb
dec
ljmp
push
cld
mov
ja
mov
push
mov
hlt
jns
and
mov
sub
add
div
push
jmp
loope
movsb
or
push
or
lds
out
lock
pop
cmpl
xchg
sbb
xchg
dec
and
sub
imul
jno
cmp
mov
mov
cmpl
inc
imul
pop
dec
arpl
add
js
push
inc
mov
mov
push
pop
lea
add
stos
pop
push
out
inc
out
and
xchg
xor
outsb
sub
push
movsb
xor
mov
aad
cmpsb
cmp
pushf
addr16
outsb
push
cmpsb
jmp
adc
rcrb
nop
test
push
sbbb
cmp
push
ss
jmp
push
pusha
jle
dec
daa
xchg
sub
daa
mov
push
fisttpll
pop
add
js
dec
jp
lret
push
test
inc
sub
ljmp
outsl
xchg
push
subb
adc
inc
mov
adc
push
mulb
fisubl
jmp
je
cmp
mov
mov
sub
scas
jns
and
icebp
inc
cmp
clc
mov
lea
cmp
jae
add
sub
cmc
cli
adc
cmp
rcll
dec
inc
xchg
std
scas
mov
ret
insl
inc
nop
push
adc
sub
jae
enter
das
rcll
ret
xor
inc
mov
enter
adc
sub
loope
cld
cmovnp
cmp
and
mov
cmp
adc
ja
popf
cmp
nop
cmp
push
lcall
sahf
leave
out
aaa
lods
sub
fisttpl
pop
fldenv
jp
mov
xchg
es
repz
out
fnclex
mov
popf
sub
mov
jae
or
sub
inc
sub
push
add
mov
mov
pop
fadds
addr16
hlt
mov
mov
xchg
pop
sbb
js
movl
dec
jno
popa
add
in
repnz
pop
or
adc
fldenv
rol
sub
lahf
lahf
iret
je
push
test
mov
mov
jge
xorl
fstpt
mov
movsl
outsb
test
stc
push
cltd
repz
lret
adc
cmpsb
movsl
sahf
inc
adcb
xor
add
hlt
dec
cli
push
adc
andb
sub
enter
mov
ds
jne
sub
xor
out
push
xor
data16
push
xchg
sub
cmpsl
cwtl
mov
mov
leave
pop
jg
pushf
dec
popf
aas
ss
xchg
xchg
xchg
push
or
fiaddl
in
push
inc
popf
inc
push
lods
cld
inc
xchg
and
aad
jge
lods
dec
sahf
out
lret
pop
jo
cmc
jno
adc
jo
sbb
popa
mov
xlat
pop
mov
rcrl
inc
test
jbe
push
inc
ljmp
loopw
out
sti
loopne
shll
rclb
ljmp
mov
sub
adc
call
inc
push
mov
push
mov
icebp
out
ss
hlt
push
jle
shl
or
fisttpl
sbb
leave
push
sbb
jecxz
incb
lock
ret
cli
sti
mov
add
mov
outsb
and
xchg
fisubrl
movsb
jbe
mov
xchg
push
mov
cmp
sbb
icebp
jp
push
dec
insl
inc
popl
mov
xchg
mov
jmp
pop
shrb
inc
xchg
sub
lods
lods
inc
add
jp
dec
dec
loope
out
mov
ret
mov
push
pop
fcoms
sub
push
test
fldl
gs
xchg
and
shl
xor
push
adc
xor
and
pop
stos
mov
xor
dec
movsl
call
out
fwait
lods
aaa
sub
subl
push
dec
repz
sbb
rorb
inc
inc
in
jle
pop
std
sub
sub
sub
popa
jae
xchg
int3
mov
pop
inc
or
insb
push
jb
lods
les
push
aaa
mov
test
cld
stc
inc
ds
pop
fldenv
sbb
mov
leave
shrl
dec
sbb
mov
scas
ja
xchg
jns
sbbl
inc
xchg
inc
jno,pn
sub
adc
xor
xchg
mov
dec
jle
jno
sahf
jb
mov
ss
mov
mul
sbbb
xchg
popa
adc
int
push
or
xchg
xchg
nop
fs
into
mov
daa
xorl
sbb
mov
pop
es
aad
out
dec
jmp
xor
push
add
lret
repz
cs
fsubs
stos
sbb
les
jle
fnstsw
fbld
mov
inc
pop
xchg
imul
stc
cmp
out
lds
bound
and
mov
jne
scas
movb
js
ds
iret
sub
and
inc
cwtl
sub
adc
or
sub
fnsave
scas
add
mov
mov
and
adc
std
cltd
rcll
add
push
pop
fcompl
popf
stos
mov
push
pop
push
das
jno
bswap
lods
push
insl
sbbl
jo
pop
es
push
jp
test
aam
dec
xor
mov
dec
ljmp
jbe
mov
pop
xchg
rolb
insl
addr16
mov
mov
sbb
stos
or
xchg
mov
jle
outsl
std
cmp
add
jmp
push
add
push
and
or
xchg
sbb
inc
pop
inc
in
push
or
mov
loop
inc
and
dec
jo
add
outsl
mov
sarb
shrl
xchg
cmp
mov
add
jg
pop
data16
jecxz
adc
dec
mov
popf
add
mov
iret
sub
es
pop
push
pop
xchg
sti
lahf
and
clc
pop
sbb
jg
fdivl
push
xchg
ret
or
test
iret
stos
mov
adc
mov
popa
mov
mov
cmpsl
inc
add
data16
cltd
orl
cltd
adc
jg
add
sarb
ja
sub
mov
cmpb
lock
cld
jp
lret
sbb
push
xchg
idivb
movsb
or
movsl
inc
testb
inc
and
sbb
jmp
mov
sbb
push
pop
push
or
adcb
pop
fs
ficompl
les
jmp
ret
lret
or
clc
popf
test
cwtl
bnd
xor
clc
fidivs
xor
add
js
jle
ret
push
mov
sub
or
mov
mov
mov
mov
inc
pusha
imul
pop
dec
sbb
or
push
orl
mov
dec
sbb
enter
push
pop
sbb
out
mov
push
dec
and
mov
xor
fisttpl
lods
insl
jg
gs
inc
leave
in
in
shll
mov
repz
pop
add
xchg
movsb
xorb
pushf
in
xchg
daa
mov
or
call
out
pop
fnsave
cmp
test
mov
cmp
or
push
cmp
sbb
pop
mov
cmpb
nop
sahf
aas
rorl
dec
and
cmc
je
pop
imul
rcrl
filds
aaa
xchg
fisttps
jecxz
add
jle
or
add
and
adcb
icebp
xlat
or
ljmp
repz
inc
in
fnstenv
mov
push
push
dec
xor
cmp
cmp
xchg
push
and
es
jecxz
or
scas
or
mov
pusha
jo
xor
pop
leave
push
and
inc
stos
jae
and
dec
rcrb
shlb
sub
dec
arpl
les
jo
xor
sub
add
ficoml
or
imulb
add
loop
icebp
scas
loope
fs
in
fcoms
sbb
ss
xor
sub
jg
imul
cld
sbb
mov
mov
int
loopne
mov
cmp
je
out
call
sub
mov
cmp
xadd
xchg
dec
add
fsub
or
ret
fs
je
lods
mov
cmp
cmpsb
loop
data16
mov
mov
adc
stos
or
push
fbld
cwtl
sbb
shll
lret
rolb
sub
mov
loop
xchg
adc
jne
loop
sarl
in
pop
and
or
push
push
mov
pop
loop
inc
ja
mov
in
aad
scas
push
push
loop
inc
inc
in
xlat
pusha
stos
mov
rcr
and
insb
xchg
int3
and
arpl
fwait
xor
adc
sbb
lods
jge
or
mov
pop
add
int
adc
int3
test
jne
pusha
pop
xor
add
clc
bound
and
xor
mov
arpl
push
xchg
pop
daa
outsb
repnz
je
sub
repz
cmp
loopne
rorb
dec
add
xor
daa
cmp
mov
add
jae
xchg
adc
int3
mov
sbb
int
mov
loopne
cmp
dec
push
ret
dec
ret
xor
xor
fsubr
outsb
loop
xlat
leave
lds
outsl
jns
cld
inc
fiaddl
jmp
xchg
stc
orl
and
cmc
loope
push
add
mov
push
loop
xchg
xchg
clc
dec
pop
out
cmp
inc
mov
enter
aam
pop
jmp
in
pop
or
pop
call
sub
loop
call
inc
imul
out
test
cmp
xchg
push
pop
insl
icebp
and
sub
imul
sub
addr16
repnz
jo
and
hlt
and
call
jecxz
xlat
jmp
jge
mov
fwait
mov
jbe
cmp
js
loop
fdivs
cmovae
xchg
sub
jl
push
loop
cmp
in
xor
lahf
and
pop
dec
stos
push
jnp
cli
xor
leavew
movsl
outsl
cmp
pop
out
push
jns
adc
into
mov
daa
stos
arpl
ficompl
out
lods
dec
outsb
test
daa
test
or
outsl
jg
sarb
je
or
fildll
sbb
clc
decb
iret
lock
aam
mov
sub
jnp
clc
mov
rorb
clc
pop
fdiv
jge
aaa
pop
sbb
push
ja
scas
orb
pop
test
pop
xchg
jo
xor
clc
xchg
iret
ret
lahf
dec
jae
imul
cmp
xchg
addl
out
pop
xor
mov
idivb
dec
test
add
push
je
sbb
ficoml
mov
ret
loope
js
je
cld
mov
inc
call
sbb
mov
mov
in
fstps
or
jbe
push
and
mov
pusha
dec
insl
mov
ret
loop
stos
je
loopne
sahf
pushf
mov
push
out
cmp
loopne
ja
shlb
mov
nop
mov
jl
mov
sbbb
xchg
pushf
jg
xchg
sbb
jo
sahf
or
test
sarl
cmc
mov
ja
call
cs
cmc
add
sbbl
hlt
cmp
inc
sbb
outsl
pop
sbb
push
pop
cmpsl
rol
mov
aad
mov
cmp
inc
bnd
in
call
pusha
repz
jae
mov
notb
into
jbe
movsb
jae
fidivl
xorb
ja
lret
pop
inc
js
dec
addr16
push
dec
lret
sub
push
les
int
jo
scas
jecxz
addr16
jne
fsubp
jmp
mov
push
dec
mov
ds
cs
test
and
popf
mov
addl
jmp
push
adc
ret
and
rorb
loope
sub
movsb
test
pop
fistpl
icebp
fsubs
push
or
vpsubd
data16
iret
pop
jecxz
sbb
mov
xor
or
out
test
sbb
xchg
add
push
andl
jae
mov
adc
adc
push
mov
jecxz
shlb
imul
mov
lods
cld
mov
push
arpl
stos
or
daa
adc
andb
movsl
stos
test
jae
repnz
outsl
cs
test
neg
dec
imul
dec
loopne
pop
push
sbb
scas
lods
fcoml
inc
out
mov
jg
cmpsb
push
movsl
dec
in
jae
repnz
inc
mov
push
leave
pop
les
xor
or
call
movsb
lock
enter
jo
in
enter
dec
dec
add
xchg
add
enter
jg
imulb
add
pop
sub
enter
mov
rcr
aam
imul
daa
lea
lock
out
inc
cmp
push
pushf
mov
inc
and
xchg
imul
xchg
loope
loopne
stc
dec
sub
mov
pop
call
adcb
mov
pop
sarl
scas
test
lods
sub
push
jb
pop
jmp
stos
rcl
and
jle
adc
das
sub
pop
and
scas
xchg
adc
mov
hlt
xchg
dec
push
shrl
mov
mov
mov
sub
push
cs
jns
adc
dec
loop
orb
jp
push
mov
xchg
push
outsl
mov
or
daa
lcall
outsl
pop
push
in
cmp
xor
dec
xchg
fdivrs
mov
adc
and
xchg
je
mov
das
xchg
mov
or
mov
out
out
mov
fwait
mov
in
pop
ja
mov
enter
pop
and
pushf
inc
out
jnp
inc
mov
cmpsb
movsb
jns
push
cmp
push
stos
aad
outsl
pushf
push
scas
pushf
imul
pop
imul
pop
sahf
sbb
jl
inc
pop
mov
mov
inc
out
in
enter
pop
andl
lods
xchg
stos
jmp
add
sbb
xor
pop
jo
or
inc
xor
dec
cmp
setp
shrl
in
stc
in
insl
inc
retw
dec
or
inc
pop
and
nop
and
xor
repz
mov
pusha
or
mov
stos
int
ds
xor
std
push
jnp
inc
into
aad
test
jbe
jo
sbb
enter
std
inc
stos
insl
cmpsb
addr16
mov
jo
cmp
call
pop
insl
xchg
ret
sub
mov
daa
adc
dec
add
inc
imul
sarl
std
xchg
mov
int
dec
inc
mov
fcompp
aaa
pop
push
mov
push
jg
aad
mov
in
dec
int3
ss
pop
movsb
or
int3
mov
dec
imulb
cmp
sub
add
mov
push
jge
lahf
push
sbb
nop
sub
push
push
push
stos
jnp
xchg
clc
hlt
cmp
xchg
mov
dec
cld
push
xchg
xor
test
jns
fnstsw
xor
xor
cwtl
pop
cld
les
mov
jl
je
mov
and
imul
inc
inc
mov
adc
fnsave
pop
push
inc
pop
je
int
xor
sub
xor
and
lock
fldl
movsl
divb
jg
and
outsl
jp
cs
sub
jnp
pop
les
sarb
or
push
mov
mov
jne
stc
and
cmc
pop
shll
jns
aas
adc
jp
xchg
outsl
je
mov
fisubl
in
rcll
sbb
or
das
fnstsw
add
adc
or
enter
in
ror
popf
xchg
inc
test
mov
jb
jmp
ror
adc
mov
imul
test
aad
dec
mov
and
mov
movsb
xchg
jae
int
in
sub
cwtl
push
nop
hlt
mov
push
fnstcw
jb
xor
into
std
cltd
fcoml
loopne
repz
mov
adc
xchg
rcrl
popa
pop
mov
mov
pusha
fdivrs
popa
mov
mov
cmp
aas
jo
mov
shrl
pop
xchg
push
je
divb
inc
cmp
aaa
jmp
xor
repz
lock
pop
mov
pop
in
mov
jle
je
or
sbb
push
mov
xchg
xchg
dec
mov
push
inc
in
aam
repz
pushf
xchg
shr
push
leave
xchg
movsb
loopne
loop
out
dec
sbb
call
sub
nop
push
ss
enter
jbe
xchg
in
fsubrl
hlt
leave
xor
iret
pop
jno
mov
xor
cli
call
sbb
mov
incb
sarb
sbb
dec
sbb
cmpsl
pop
shl
mov
push
xchg
jb
or
iret
dec
push
gs
cmp
or
push
jns
jnp
mov
mov
enter
das
in
cmc
adc
lahf
sbb
leave
pop
lahf
shrb
sub
loopne
test
mov
movsl
roll
je
push
popf
in
les
xchg
out
andl
push
out
pop
dec
cmp
sub
test
dec
outsb
jecxz
loopne
mov
mov
ljmp
shlw
loopne
in
test
xchg
dec
cmp
cmp
dec
xor
cli
sbb
sub
arpl
sar
stos
xchg
push
jne
lods
rsqrtps
xchg
xchg
sub
pushf
in
or
jne
mov
dec
jnp
adc
inc
xor
or
outsb
xchg
rcrl
ret
ja
and
inc
jnp
sbb
or
adc
jmp
mov
clc
push
cmpsl
cwtl
insl
int3
fcmovnb
fstpl
imul
test
cli
mov
loop
mov
cmpsl
adc
add
pop
mov
dec
xchg
cmc
std
mov
inc
nop
push
outsl
push
push
fsubrl
ds
push
dec
cmovbe
fstl
mov
imul
sbb
int3
fsubl
xchg
addb
sti
out
jmp
lds
imul
mov
jae
xchg
cmpb
pop
add
add
shll
mov
mov
mov
jle
adc
test
mov
aaa
dec
cmp
sub
and
adc
adc
ret
dec
inc
scas
push
std
jle
xchg
push
cwtl
movsb
jno
adc
mov
jecxz
mov
imul
dec
out
jb
js
cmp
sbb
pop
fcomi
add
inc
sarl
lcall
mov
mov
sub
popf
mov
jno
les
and
push
stos
lock
ljmp
rcll
fwait
hlt
test
lahf
push
inc
imulb
cmp
ret
ss
clc
mov
xchg
xor
fnstenv
xchg
and
jg
mov
add
aam
shll
xchg
mov
int
in
sti
incl
lods
dec
daa
or
xor
loopne
shll
push
out
push
popf
aas
sbb
pusha
push
xchg
bound
cmpsl
fs
jl
loopne
mov
inc
sbb
push
inc
imul
mov
addr16
ss
xor
pop
pop
rcll
push
xchg
push
lret
adc
loopne
in
flds
ljmp
xchg
lea
cld
ret
xor
aaa
xchg
lock
data16
add
repnz
xlat
std
cltd
shlb
jne
ljmp
fdivrl
sub
in
repnz
pushf
lods
notb
or
mov
mov
orb
aad
cs
lods
jo
sti
jno
dec
sahf
push
push
xchg
xchg
int3
sub
in
or
std
imul
insb
in
push
mov
lret
push
push
jecxz
pop
aam
xor
scas
sub
sub
and
pop
test
jo
xor
loopne
xor
in
ret
imul
add
jns
xlat
cmp
mov
push
push
cwtl
sub
imul
adc
sub
aad
imul
mov
sbb
pushf
cmc
push
pop
pop
mov
push
push
pop
cmpb
sbb
mov
cmp
inc
sbb
push
dec
adc
jne
test
xchg
dec
mov
int
fcoml
and
pusha
out
rolb
inc
and
andb
hlt
cmp
stos
popa
iret
jnp
or
mov
aad
shl
dec
pop
push
xor
lahf
loop
movb
sbb
cmp
dec
test
in
addl
or
jbe
lahf
jbe
dec
push
shrl
imul
mov
mov
aaa
inc
out
inc
jbe
hlt
out
loopne
cmp
dec
fbld
int
out
or
jl
push
insl
pop
data16
out
jb
lahf
xchg
stos
jp
fst
fstl
push
pavgb
mov
fldt
loopne
jne
dec
cmp
mov
dec
int3
movsb
xchg
mov
adc
and
aas
dec
xchg
xor
les
sbb
push
dec
cmc
shl
xor
and
rep
push
decb
sbb
sbb
shrl
jge
cmpsl
xor
xchg
daa
clc
jmp
or
sub
scas
push
lock
mov
shrl
mov
mov
imul
sub
out
xchg
movsb
dec
jmp
pop
jg
jbe
ja
dec
scas
imul
pop
ret
cmp
jp
stos
in
scas
dec
and
inc
pop
sahf
ja
ds
sbb
sbb
xchg
or
mov
daa
or
loop
mov
pusha
cmp
mulb
add
xchg
lock
push
or
xor
les
dec
scas
out
testb
movsb
testb
lods
xchg
xchg
inc
inc
gs
popf
repz
and
jle
loopne
xchg
ss
dec
cld
popa
in
jno
push
dec
dec
dec
orb
ret
cmp
ds
pop
imul
fimull
loop
xor
addb
out
cli
sbb
mov
inc
daa
push
idiv
mov
loope
ja
xchg
ror
jmp
mov
mov
cmp
adc
jbe
into
mov
out
aam
cmp
movsl
jl
add
lds
mov
ficompl
bound
sub
fsubs
pop
out
sub
sub
sbb
cs
pop
inc
inc
sbb
xorb
pmullw
aad
sbb
mov
clc
mov
in
cltd
inc
xchg
fs
fsubrp
ss
aam
push
add
aad
aad
sbb
mov
arpl
orl
pushf
call
sarl
in
adc
ret
xchg
movsb
icebp
adc
and
bound
sbb
or
mov
mov
adc
xchg
xor
fstp
mov
jge
xchg
out
pop
arpl
cmp
xor
fstpl
rcrb
jp
mov
push
xchg
mov
into
fnstenv
iret
shrb
xchg
loop
mov
xchg
sub
inc
lods
aad
xchg
std
pushf
pop
mov
sahf
adc
sub
pop
inc
lds
adc
push
je
ds
sub
popf
lret
in
sub
mov
int
pop
mov
adc
add
or
jnp
mov
enter
inc
shll
dec
pop
xorb
pop
sbb
sarb
lret
pop
cmc
vandps
into
sub
sbb
out
test
jp
subb
push
jnp
inc
and
cli
xchg
mov
imul
push
rolb
jo
fdivl
inc
ja
adc
lods
insb
mov
xchg
push
popf
push
xor
xchg
sahf
aam
popa
ret
cmpsb
pop
ja
mov
les
clc
loopne
daa
fcomps
sarb
add
mov
lret
xchg
movsb
sub
lods
test
push
xchg
jno
fwait
mov
int
inc
xchg
jae
mov
and
lret
dec
jmp
jb
pop
add
mov
push
pop
push
shll
push
or
pop
insb
pop
adc
jbe
cwtl
xchg
push
jmp
gs
leave
sbb
mov
jecxz
rorl
repnz
jno
cwtl
mov
add
dec
pop
int3
cli
aad
mov
xchg
push
push
dec
xor
repnz
ds
adc
cmpsl
ljmp
repnz
sub
roll
mov
repz
xlat
aas
cmpb
daa
lds
xchg
sbb
aaa
ffree
mov
repnz
test
flds
and
gs
insb
je
pop
pop
call
jmp
stc
sbb
mov
jb
cmpl
clc
dec
adcb
pop
nop
and
push
xorl
test
arpl
sbb
fldenv
xchg
sti
jb
rcrl
mov
push
mov
adc
inc
mull
out
out
dec
xchg
sub
ss
lret
fwait
out
adc
sbb
push
out
out
pop
movsl
dec
mov
pop
in
sahf
in
sti
sbb
mov
inc
add
cmp
out
or
arpl
jp
mov
rcrb
adc
mov
pop
sahf
sub
inc
mov
xor
jecxz
out
cltd
dec
adc
xchg
inc
or
fisubl
in
push
es
pop
push
push
out
xor
icebp
int
jnp
orb
subl
xchg
jo
add
mov
int3
cmp
stos
test
out
cmp
cmovne
std
fstl
in
aad
rorb
jbe
rcrl
cmp
mov
dec
dec
mov
push
push
rcl
fadd
sbb
int3
push
mov
cmp
jo
sub
ljmp
adc
xchg
fs
mov
pop
pop
movsl
loopne
rcl
xor
aas
push
mov
mov
push
dec
int3
incb
fwait
into
sub
sbb
pushf
loop
lods
pop
pop
fwait
negb
test
sub
lret
andb
pop
mov
int3
repz
and
inc
mov
fwait
dec
jbe
ret
out
inc
mov
mov
fs
call
cltd
mov
xchg
cmc
jae
hlt
rorb
push
jmp
cmc
dec
xchg
repz
js
mov
cmc
push
rcll
aad
push
pop
lahf
popf
subb
xor
cli
cmp
and
std
jecxz
jnp
mov
xchg
pop
mov
andl
mov
ljmp
jmp
dec
fsts
push
adc
push
jbe
cmp
leave
cld
addb
mov
popf
sbb
inc
xor
pop
test
gs
lods
xor
test
and
int
mov
sub
jmp
jo
ss
repz
inc
lock
mov
addr16
lret
scas
xlat
test
jns
push
scas
sub
popf
lahf
cmc
and
js
les
cmp
das
or
cmc
out
lds
inc
shrb
aam
pop
sub
mov
sub
fnstsw
fcompl
or
cmp
jge
mov
lods
pop
aaa
or
and
sub
jmp
sbb
popa
push
negw
fstps
orl
cmp
pop
aas
dec
or
out
shlb
in
push
je
sub
mov
and
pop
pop
into
mov
mov
push
stc
sub
pop
xchg
xchg
xchg
and
mov
or
fwait
stos
adc
lds
push
fucomi
pop
inc
cli
mov
popa
xor
push
mov
xchg
jmp
or
dec
pop
imul
jmp
or
leave
adc
mov
shr
jno
lcall
mov
fdivr
inc
cmp
xor
test
inc
jnp
pusha
scas
subl
pop
push
sub
loop
jnp
push
sbb
sbb
aaa
sub
push
call
adc
cwtl
push
es
dec
repz
out
stos
pusha
insb
adc
cs
mov
arpl
test
dec
sub
push
sub
std
out
mov
mov
jne
leave
popa
push
sbb
push
push
movsl
insl
ret
inc
xlat
out
jne
out
aas
sub
dec
dec
out
mov
in
mov
data16
mov
xchg
or
orl
and
cmp
daa
push
mov
sbb
sahf
and
vandpd
subl
lods
das
and
mov
xchg
in
jmp
sbb
cwtl
push
cmp
in
in
xchg
adc
or
jge
aaa
arpl
lea
insb
addb
pop
xchg
divl
and
push
lcall
add
loope
dec
mov
cmpsl
mov
xchg
mov
mov
movsb
imulb
gs
sub
clc
aaa
lock
in
movsl
adc
jp
sbb
jle
jb
repnz
call
loope
push
sahf
jae
inc
inc
repnz
lods
jmp
not
lret
out
xor
xchg
pop
push
pop
data16
pop
cmp
mov
out
aad
jb
sbb
push
inc
arpl
sub
pop
lahf
dec
push
fstl
mov
orl
out
decb
sbb
lret
test
neg
incl
out
loop
outsl
ljmp
cli
lret
adc
clc
notb
pop
fcmovu
and
fsub
cmp
sti
sbb
pop
fildl
arpl
gs
push
add
jb
jmp
inc
push
aam
stos
inc
mov
adc
sbbl
fdiv
and
andb
test
inc
shlb
loope
loop
into
dec
rolb
and
and
pop
jb
lock
pop
cwtl
cltd
jbe
push
movsl
pusha
adc
or
dec
aad
push
fs
jnp
pop
popf
dec
std
fistpll
pop
das
mov
movsl
loopne
fildll
or
and
adcl
js
or
cwtl
xlat
aam
lods
pop
mov
mov
movsl
lret
outsb
xor
jecxz
xchg
push
sahf
mov
mov
fistps
mov
negl
mov
xor
movsb
xchg
adc
cmp
adc
in
dec
pop
arpl
push
aaa
jne
outsb
sbb
or
cs
mov
popf
movsl
testl
xchg
and
adc
inc
sub
fsub
jmp
mov
xchg
lock
ds
cltd
push
mov
and
popf
fcomi
test
push
hlt
mull
sub
mov
mov
enter
lock
pop
xchg
or
xor
sbb
rcrb
notl
test
and
jo
xlat
sub
pop
inc
ret
enter
out
sub
dec
out
aam
aaa
or
movsl
fistpll
and
cli
sbb
or
xor
int3
mov
sahf
pop
pop
mov
dec
push
or
fistpl
repz
jae
jno
fs
sbb
lret
dec
mov
mov
ret
adc
mov
cs
cmpl
fistps
or
fisubrl
hlt
mov
jns,pn
jecxz
mov
add
int3
out
addr16
out
push
insl
nop
push
jno
push
aam
ljmp
dec
xchg
aad
push
xor
shll
xchg
and
lock
jae,pn
inc
lea
mov
pop
jl
mov
adc
shll
popf
pop
repnz
pusha
sub
mov
movsb
or
in
out
subl
fidivs
repz
or
dec
jbe
pop
sbb
and
jle
outsb
bnd
movsb
xchg
xchg
jne
xchg
push
test
mov
and
adc
and
push
or
call
mov
dec
xchg
mov
int
cld
lds
sahf
int3
mov
int
movsb
out
push
lock
mov
test
scas
mov
mov
xchg
repz
fwait
out
in
mov
xor
std
aas
cwtl
or
repz
dec
xlat
sbb
sti
leave
out
dec
add
jp
dec
pop
add
xlat
nop
cmp
popa
pop
pop
repz
popf
inc
jnp
ret
add
aas
int3
test
or
xchg
popf
ja
lcall
fsubl
scas
mov
test
cli
lds
and
orb
mov
jp
cmp
movsl
mov
into
mov
dec
mov
movsb
rclb
or
push
sub
sbbl
sub
sbb
bswap
ds
mov
jb
dec
nop
cwtl
inc
mov
aaa
pop
scas
or
aam
jl
jmp
enter
ss
insb
sbb
mov
bound
test
add
mov
inc
cmpsb
lahf
pusha
or
out
push
sbb
fnstsw
pop
jno
dec
jmp
or
rorl
and
push
adc
xchg
and
mov
out
jmp
xchg
outsl
adcl
xor
jb
jb
add
stos
call
and
jg
sbb
lahf
dec
nop
and
jecxz,pn
cltd
add
add
cmc
lods
cld
add
add
push
mov
pop
hlt
shrl
adc
mov
push
fs
or
or
lods
jecxz
popa
test
sbb
jne
cmp
sub
das
xor
fdivrs
rcl
fcoms
and
mov
outsb
adc
cmp
mov
cmc
std
add
out
aaa
xchg
popl
rorl
and
push
dec
mov
mov
cs
cwtl
pop
push
add
in
fucompp
mov
test
mov
cs
xchg
lods
sbb
jo
inc
dec
mov
push
dec
pop
xlat
xchg
jg
mov
rcrl
dec
jg
mov
xchg
lea
xchg
dec
arpl
push
in
mov
clc
sbb
jg
jae
push
or
push
in
add
cmpsl
xchg
popf
in
pop
pop
add
mov
mov
sar
outsb
in
adcb
mov
cs
cmp
mov
insl
lock
inc
das
icebp
sarl
mov
pop
cmpsb
lret
test
cmp
cmpsl
les
loopne
test
mov
ljmp
outsb
ret
adc
rolb
popa
mov
lret
mov
sub
lods
mov
jp
jo
fisttpll
adc
call
aad
shl
dec
ds
enter
dec
mull
inc
nop
int3
ja
adc
xchg
wbinvd
cld
mov
jmp
dec
sub
pop
mov
or
filds
mov
push
ret
mov
leave
sbb
push
sub
mov
mulb
cld
adc
dec
mov
adc
out
aas
add
sbb
mov
inc
push
sbb
icebp
into
inc
cld
les
call
mov
mov
in
mov
pop
push
adc
sbb
add
in
adc
dec
and
cmp
cmp
mov
push
pop
or
mov
mov
push
sub
pop
imull
loop
push
mov
dec
cmpsb
bnd
cmp
inc
outsl
mov
mov
push
push
popf
or
sbb
out
adc
and
fwait
mov
dec
mov
hlt
sbb
jns
sub
push
dec
inc
and
mov
lcall
movsl
cmpxchg
jbe
cmp
and
aad
jp
cmpsl
sub
ja
in
nop
movsl
cmc
stos
mov
dec
inc
mov
hlt
mov
call
js
xchg
jnp
test
iret
icebp
add
sbb
mov
push
sbb
inc
pop
jg
mov
push
inc
imul
mov
out
sbbb
mov
repz
out
bound
jp
ja
xchg
enter
pop
into
push
xchg
clc
cmp
add
jmpw
fistpl
rolb
loop
adc
leave
gs
int3
test
mov
sub
scas
out
scas
dec
out
mov
xor
in
scas
dec
jne
mov
jne
scas
mov
mov
dec
xchg
push
dec
call
dec
daa
iret
pop
cmc
outsl
add
mov
insb
jo
sti
push
adc
mov
xchg
outsb
lret
lods
aaa
jmp
mov
pusha
cmp
sub
pusha
rorl
xor
fwait
out
sub
pop
xchg
mov
xchg
cmp
gs
dec
mov
or
fisttpll
xchg
negl
xlat
test
loopne
mov
pushf
rorb
imul
push
jnp
iret
lea
mov
fs
dec
inc
dec
mov
and
scas
jbe
pop
and
jns
xchg
or
or
fs
pop
mov
xor
pop
inc
mov
out
inc
jle
inc
jp
lods
call
xor
jae
push
or
add
xor
call
mov
addr16
or
xor
or
lret
lea
test
addl
sub
andb
mov
movsb
enter
out
sbb
cmp
test
pop
xchg
out
sbb
addr16
dec
insl
mov
idiv
dec
int3
dec
inc
ja
lea
jne
adc
lret
int
xor
stc
pop
push
es
mov
xchg
mov
add
fmul
push
shll
xchg
stos
scas
xchg
cmp
ret
sar
fs
lret
dec
add
mov
fs
push
sbb
lock
and
inc
loope
jecxz
js
sbb
std
push
inc
out
pop
push
pushf
divl
iret
lahf
into
out
push
repnz
into
cmove
sub
aaa
roll
jge
mov
int3
testl
outsl
or
mov
shll
xchg
mov
mov
insb
incb
in
sarb
repz
add
js
xor
jbe
dec
adc
mov
vpcmpgtb
xor
and
dec
pop
mov
in
add
dec
mov
mov
xor
jmp
xlat
mov
or
mov
ret
fmuls
lret
cld
loope
leave
mov
shr
pop
lock
inc
fdivs
or
iret
xor
fildll
outsl
lods
push
test
cltd
les
das
andb
mov
notb
mov
mov
lea
push
cmp
dec
fistpl
inc
xlat
pop
sub
outsl
mov
jns
dec
out
push
mov
inc
jecxz
mov
loopne
jbe
pop
mov
jb
adc
lcall
push
call
mov
fcmovu
out
lahf
in
jo
and
inc
stc
push
pop
ljmp
adc
int3
subb
push
adc
mov
add
jge
iret
xor
fstpt
mov
jae
pusha
push
push
mov
add
hlt
sub
repz
jae
testb
push
mov
mov
inc
adc
fisubs
dec
test
sub
xor
mov
xor
push
mov
lds
outsl
mov
sbb
insl
notl
aaa
cmp
xor
icebp
add
mov
in
push
rsm
cmpsb
xchg
ja
mov
dec
repz
rorl
mov
cmpsl
dec
push
cwtl
cmp
xor
sub
cmp
lcall
push
jbe
add
or
mov
sub
inc
dec
hlt
xor
mov
fwait
dec
add
sbb
xchg
je
jle
push
pop
add
test
sbb
and
jmp
insb
or
orl
cmc
js
or
jns
jns
push
pop
insb
aas
out
pop
leave
pop
in
cmp
mov
shrb
out
mov
mov
push
popf
fbld
ja
pop
test
arpl
add
xor
mov
xor
xchg
inc
mov
inc
mov
lods
stc
loop
xlat
pcmpgtd
ss
ljmp
fs
or
addr16
call
lret
xor
inc
scas
loope
in
in
mov
sub
fsubs
sbb
and
jae
inc
fwait
push
lock
scas
mov
das
jno
call
gs
cmp
xchg
movsl
addb
ja
mov
aam
sbb
xchg
ficompl
mov
inc
or
and
push
repnz
mov
jmp
scas
xchg
jns
rolb
pusha
ss
mov
cmp
out
add
rorl
lock
pop
rcll
ret
addr16
sahf
sarl
cmp
iret
outsl
sub
jo
sti
fisttpl
or
xchg
aam
or
lea
stos
xor
lods
adc
mov
std
repnz
loop
mov
xor
imul
mov
js
jbe
lret
cltd
out
mov
popa
add
dec
adc
sbb
ja
stc
mov
fwait
sbb
xor
pusha
jnp
mov
imul
aaa
pop
insl
das
cmp
out
mov
xchg
es
sub
and
and
sbb
outsb
dec
jmp
xchg
mov
sti
jae
arpl
mov
lods
and
mov
leave
lcall
shlb
mov
mov
aam
in
mov
clc
or
sub
mov
inc
xor
fisubl
js
out
fisttps
cmpsb
xchg
xchg
shrl
pop
push
xor
fwait
xchg
adc
rcll
ja
aad
idivl
mov
es
lock
mov
es
negb
dec
xlat
test
imul
popa
sbb
lea
mov
xchg
aam
mov
jns
push
nop
add
push
in
into
inc
filds
fwait
pop
lret
insl
xor
adc
adc
xor
mov
inc
jo
push
out
rcl
fmuls
push
in
into
inc
filds
pop
shlb
jb
loopne
pop
add
and
mov
fisubs
das
add
pop
cmp
mov
imul
jbe
mov
jns
mov
ret
xor
xlat
cmp
fsqrt
push
gs
andl
xor
rcl
push
or
adc
pop
fcoms
mov
mov
lock
add
imul
sub
js
jp
movsb
add
mov
pusha
ret
test
xchg
popa
add
cwtl
test
sbb
mov
outsb
in
loope
insb
adc
icebp
popf
dec
insb
mov
dec
jl
jnp
std
sub
hlt
or
mov
push
inc
pop
mov
mov
sbb
das
lret
ss
pop
xor
repnz
clc
and
repnz
xor
aad
mov
mov
jp
loopne
leave
jae
cmp
dec
sbb
mov
mov
jl
popf
test
movsb
insl
lret
ss
sahf
rol
sbb
adc
fisubl
cwtl
add
lods
in
aaa
adc
data16
push
mov
sub
ljmp
mov
fnstsw
pop
jl
cmp
adc
cld
vmread
adc
mov
adc
test
imul
jp
movsl
sbb
pop
mov
adc
andb
jb
mov
mov
or
sbb
lret
adc
psllw
xchg
inc
scas
stos
loope
cmp
loop
arpl
push
xor
cltd
shlb
dec
sti
cld
mov
imul
lret
jg
pop
imul
sarb
es
mov
popa
gs
call
movhps
jnp
insb
inc
or
out
dec
jb
cltd
nop
dec
dec
sub
xor
fcompl
push
cmp
sbb
lock
jmp
lock
subb
int3
jnp
test
nop
sub
divl
xlat
pop
test
fcmovb
mov
cmp
cmp
mul
aad
pop
and
scas
xlat
sub
fstpt
inc
shll
mov
rorb
mov
cltd
mov
add
cmpb
fdivs
adc
add
mov
aas
jno
ret
pop
push
push
push
pop
push
inc
sbb
idivl
insb
sbb
and
enter
or
xchg
mov
aas
iret
ret
cld
or
mov
xor
ror
lret
das
xchg
shr
pop
rcl
and
fcoml
les
inc
movsl
pop
adc
fdivs
lcall
add
sub
aad
or
inc
and
sarl
mov
sub
fmuls
adc
addr16
pop
ret
push
cld
dec
arpl
push
mov
jge
test
and
pop
jle
pop
xor
fmull
movl
notl
jnp
test
push
cmpsb
popf
int
dec
jbe
in
cmp
inc
test
jbe
pop
lret
mov
xchg
mov
sbb
sahf
sbb
mov
sbb
fsubrp
cmpsb
inc
add
lcall
push
adc
push
shl
jns
cmp
insl
popa
add
fimull
ljmp
rclb
jle
ret
ret
int3
int
pop
sti
jbe
adc
movsl
les
pop
lds
xchg
ss
sub
fbstp
iret
add
jmp
push
sub
or
xchg
dec
repnz
scas
aaa
addb
in
inc
fmul
fnstsw
sbb
rcrl
ds
leave
xor
fdivrs
xchg
inc
test
cmpsb
xlat
enter
mov
mov
mov
les
dec
mov
push
scas
outsb
inc
addr16
fdivl
inc
scas
lock
iret
adc
pop
or
mov
jno
push
sub
pop
ljmp
lcall
nop
mov
hlt
xchg
sub
sub
jb
cli
mov
shrb
cmp
cld
test
jmp
mov
adc
in
and
mov
pusha
shll
cs
loopne
les
bound
out
gs
fs
aam
mov
cmp
inc
cmp
sub
mov
adc
or
pop
sbb
mov
jmp
push
jo
aam
pop
inc
and
cmp
mov
pusha
push
stos
cld
inc
sub
test
cmp
pusha
add
sbb
lahf
mov
fstpl
repz
incb
jle
xor
outsb
paddd
xor
cli
outsb
xchg
push
xchg
pop
xor
push
loop
out
out
outsl
mov
sub
loopne,pn
sbb
fsubs
push
outsb
dec
jo
adc
jle
jno
pop
lea
lea
adc
insb
out
xchg
dec
add
bound
in
dec
sbb
mov
popa
mov
sbb
lods
pop
push
xchg
std
testb
adc
mov
push
shll
aad
xlat
add
or
and
iret
dec
cwtl
je
jnp
inc
out
push
push
push
mov
xor
mov
mov
mov
sahf
movsl
dec
mov
lock
ror
or
cmpsl
jg
jle
xchg
ljmp
jae
xor
out
fcom
lods
xchg
sbb
mov
lods
mov
js
and
nop
test
cmpl
cli
sbb
inc
sub
or
orl
mov
movsl
inc
sub
jecxz
sbb
adc
and
dec
inc
sti
jo
out
inc
jo
add
inc
xor
add
in
push
inc
addr16
mov
fst
test
enter
mov
jp
xchg
or
daa
jp
stos
push
cmp
jnp
stos
xor
lods
or
jp
lret
fisttpl
out
pop
sbb
pop
sub
std
jne
inc
xor
in
imul
sbb
cmp
cmp
mov
bound
adc
push
mov
push
lret
ja
ret
pushf
push
js
ds
aam
jmp
pop
jo
adc
cli
mov
lahf
cld
mov
xchg
cmp
mov
push
jmp
aas
mov
ret
aam
xchg
sahf
jo
daa
fists
jl
add
mov
push
das
leave
hlt
add
iret
cmpsl
lods
loope
mov
xchg
pop
shlb
nop
sub
adc
or
jb
cld
int
or
xor
cwtl
mov
rorb
push
imul
stc
mov
mov
ljmp
xor
xlat
mov
push
mov
jmp
rorb
jecxz
inc
xor
adc
pop
mov
add
repz
imul
fwait
pop
fs
mov
lret
pop
test
mov
icebp
mov
cmp
xor
mov
add
add
cs
sbb
icebp
les
aaa
insb
aaa
pop
inc
out
jge
lahf
cld
mov
ljmp
es
test
cmp
dec
jne
lcall
repz
adc
dec
cmpb
pop
stos
andb
sbb
out
cmp
fwait
ret
xchg
leave
jg
jae
mov
cwtl
mov
lods
insb
sub
pop
push
add
xor
xchg
xchg
jl
je
mov
jmp
stc
push
insl
mov
mov
xchg
mov
jno
or
in
sti
popa
xor
mov
push
mov
insl
std
dec
mov
fiaddl
mov
cmpsl
xchg
mov
push
mov
inc
fwait
sbb
fsubs
jne
inc
mov
pushf
add
lock
lods
lock
icebp
ss
movsl
pop
sbb
loopne
popf
movsl
xor
pop
sub
std
adc
dec
fisubl
cmp
das
xor
pop
insb
scas
mov
icebp
dec
add
mov
pushf
push
and
xorb
test
adcl
sbb
and
scas
or
and
jmp
movsl
inc
hlt
xor
pop
in
adc
or
xorl
inc
sub
mov
pop
frstor
int
ds
cs
mov
iret
dec
in
add
cmp
shr
mov
push
and
pop
test
adc
jbe,pt
dec
gs
mov
scas
retw
cmpsb
xchg
movsl
xorb
xor
sbb
stos
dec
outsb
pusha
mov
mov
adc
test
jmp
test
daa
pop
imul
test
incl
mov
cmp
ret
cld
push
and
jo
push
push
emms
dec
mov
pop
rcrb
jecxz
jecxz
rcl
xor
rclb
clc
inc
lds
test
out
int3
sbb
mov
mov
pop
mov
pop
and
jle
or
cmpsl
and
aam
data16
pusha
or
cmp
or
adc
mov
test
dec
add
lds
pushf
repz
and
pop
xor
jp
and
adc
fcompl
push
xchg
sub
push
lods
mov
cmpb
hlt
mov
fcmove
xchg
outsb
outsl
jl
rcrb
test
shll
sub
xchg
lea
stos
into
daa
stos
push
xor
inc
cld
lods
dec
out
fiadds
fwait
mov
out
sbb
lahf
xchg
cld
xchg
imul
cmp
sub
adc
js
mov
fdivr
rorl
mov
cmpsl
loope
adc
dec
lds
leave
jge
cld
in
mov
sarb
and
pop
push
into
icebp
push
pushf
jl
shlb
pop
push
inc
cmp
inc
jno
push
sub
mov
popf
sbb
fstpl
mov
loop
sub
jno
mov
xchg
imul
mov
dec
sbb
push
jo
add
scas
arpl
pop
xchg
sti
popa
aas
pushl
orl
inc
inc
mov
jo
inc
fs
pop
shl
mov
cmpsl
stos
sub
dec
push
inc
popf
sti
icebp
sbb
adc
mov
xchg
push
pop
mov
sbb
sti
lret
stos
test
pop
pop
push
inc
popf
sti
icebp
sbb
adc
fwait
loopne
mov
fmul
inc
test
hlt
in
addr16
fsubrs
lret
jae
adc
push
push
mov
pushf
xchg
pop
mov
cmp
xlat
xchg
mov
push
test
mov
fsubrl
pop
inc
dec
push
int
mov
sar
iret
jno
dec
test
icebp
mov
cwtl
arpl
mov
jno
sub
shl
mov
outsl
xchg
daa
test
jp
add
pop
add
jge
or
cmp
das
jb
and
cmc
inc
movsb
sbb
xor
into
fs
pop
jg
leave
push
test
inc
dec
popa
mov
nop
ret
call
js
mov
fnstenv
ror
in
mov
test
mov
jb
cmp
pop
jge
jo
sub
int3
aas
pusha
mov
pcmpgtb
dec
ss
icebp
cmpsb
into
outsb
mov
decb
adc
cld
mov
lcall
xchg
icebp
jle
mov
movsl
les
pop
leave
mov
repnz
mov
inc
sub
sub
push
bound
test
dec
pop
fldt
int3
inc
mov
mov
int3
addb
div
jp
fbld
adc
enter
sub
imul
dec
mov
sub
xor
aad
call
xchg
mov
bound
ja
fwait
adc
lea
stos
out
mov
pop
insl
xchg
repz
jns
mov
sub
bound
test
jo
fidivrl
lods
inc
xor
pushf
lcall
xor
inc
xchg
or
pop
fsubrl
or
lahf
repnz
inc
jecxz
xchg
ficomps
scas
icebp
mov
pop
faddp
mov
dec
cmp
and
jecxz
scas
js
xor
push
cmpsb
mov
fcmovnu
add
fadd
lods
push
js
mov
cmpsl
or
mov
jmp
lret
xor
enter
ret
fs
int3
add
scas
xchg
cmp
mov
sbb
sbb
fimull
push
call
cmp
mov
inc
jns
jnp
enter
in
cmp
fnstsw
mov
jae
lret
in
mov
mov
push
arpl
xlat
dec
dec
ret
lock
mov
sarl
xor
push
les
jmp
addl
movsb
jnp
pop
and
cmc
ljmp
inc
sbb
pop
dec
inc
jne
subb
jns
sbb
mov
cs
inc
mov
pop
sbbb
shrl
aaa
int
ror
pop
inc
pop
xchg
pop
fldcw
dec
sub
fsts
enter
pop
shl
jmp
addr16
mov
pop
aam
pop
shlb
dec
ret
push
dec
cmp
push
mov
icebp
shl
dec
xor
sbb
cwtl
sub
test
pop
aas
add
inc
pop
mov
and
adc
xchg
mov
outsb
push
push
inc
and
push
add
out
gs
fdivr
or
testb
push
push
dec
out
and
scas
je
sbb
orb
lods
jb
add
sbb
adc
mov
pushf
jecxz
sub
loope
mov
pop
and
incb
mov
jne
inc
and
xchg
out
mov
mov
or
fisubl
scas
aam
jne
sub
dec
inc
xor
mov
lea
sbb
imul
or
xchg
movsb
mov
pop
mov
pop
es
xchg
inc
in
adc
pop
gs
movsb
and
and
push
andl
push
jb
lahf
mov
inc
jns
ret
dec
imul
fmull
out
mov
data16
mov
push
fisubrs
sub
add
stos
pop
xor
mov
add
adc
jno
mov
jle
jnp
dec
jnp
rcrl
pcmpeqb
dec
cmp
cs
mov
sub
pop
adc
pop
mov
inc
loope
mov
xor
pushf
pop
or
sarl
add
push
scas
cwtl
test
pop
push
std
ja
cltd
ja
dec
or
xor
push
test
mov
loope
sbb
rcrl
jg
sbb
lret
mov
push
dec
sub
jp
maxps
gs
inc
pop
lcall
popf
cmpsl
dec
icebp
sub
jecxz
xor
out
xchg
popa
xorb
jecxz
and
call
cltd
mov
nop
xor
mov
bound
movsl
rolb
scas
cmp
mov
inc
adc
and
lcall
insl
lock
imul
mov
jecxz
sarb
cli
mov
in
mov
dec
test
je
repnz
cwtl
hlt
popf
mov
fwait
movsl
sub
std
arpl
loopne
outsb
xor
add
xor
out
repz
xchg
jnp
dec
cmc
and
int
ljmp
mov
mov
xchg
repnz
jnp
or
fs
mov
mov
push
xor
push
shrb
mov
mov
jbe
in
jmp
dec
and
cli
sub
pop
out
mov
call
or
ja
push
lahf
ja
mov
ret
pop
stos
hlt
movsl
mov
out
dec
das
int
call
sub
movsb
dec
adc
testl
stc
out
add
movsl
es
push
and
push
stos
xchg
pop
cmp
and
adc
and
adc
xchg
mov
outsb
push
push
inc
and
push
add
fdivr
xlat
outsb
je
popf
jmp
notb
out
and
scas
je
cmp
test
test
cli
dec
add
or
fidivrs
aam
inc
pop
pop
cmp
lret
lcall
sbb
cmp
in
mov
cmp
pusha
fdivrl
mov
adc
push
push
and
dec
incl
inc
jmp
lfs
cmc
in
sbb
push
mov
push
mov
cmp
dec
mov
xor
lret
shlb
int
pop
push
pop
rclb
add
pop
rol
add
lgs
dec
or
aaa
lock
mov
repnz
push
and
dec
incl
das
push
xchg
mov
jl
xchg
decb
shll
xchg
jo
cmp
test
fwait
xchg
movsb
xor
mov
iret
repz
sub
mov
push
aas
incl
sub
insl
pop
adc
xchg
je
fs
and
int3
aad
das
or
icebp
pop
sub
dec
pop
sub
dec
pop
sub
dec
push
lock
imul
lock
icebp
aas
lock
rolb
enter
aaa
les
mov
pop
movl
sti
fwait
ret
sub
xchg
add
repz
mov
cs
mov
and
fcom
mov
jl
aas
pop
sub
pusha
sarb
call
aas
shrl
leave
popa
xchg
or
js
in
push
mov
ja
mov
sti
fiaddl
in
pop
cmp
in
andl
push
and
dec
mov
dec
mov
lods
mov
and
popf
xor
lods
add
sub
xorb
cmp
xor
decl
mov
xor
rcrb
mov
test
sub
outsb
out
rolb
jo
loopne
push
xchg
xor
add
sbb
xlat
stos
sbb
jmp
insb
aad
mov
int3
mov
sbb
cmp
arpl
dec
push
fcompl
lret
out
jbe
add
int
push
push
pusha
adc
outsl
pop
pop
fsts
pmulhw
aad
mov
addr16
adc
out
add
sbb
fsubrs
and
or
gs
jg
mov
sbb
insl
outsl
cmp
mov
cmp
insl
adc
pop
mov
lock
lock
mov
ret
mov
pushw
test
and
or
mov
or
lea
aaa
int3
xchg
pop
popf
sbbl
add
jbe
add
negb
xor
fucom
mov
jb
mov
jg
loopne
jb
stc
jbe
aaa
std
movsl
orl
cmpsl
mov
push
movsl
movsl
arpl
add
add
xchg
mov
mov
lods
push
cmp
lcall
out
mov
das
dec
out
jb
out
xchg
inc
xor
jb
mov
inc
mov
or
adc
mov
stos
int3
movsl
pop
out
xchg
jo
lods
and
sbb
jmp
sbbb
mov
cmp
das
and
xchg
sub
movsl
jle
lret
xchg
jb
ljmp
xor
sbb
push
adc
nop
pop
jns
cmpsl
or
hlt
lahf
ljmp
test
push
jae
jnp
xchg
pop
sarb
sahf
mov
lods
pushf
das
imul
and
insb
push
sbb
mov
mov
mov
es
div
mov
call
and
jne
mov
movsl
mov
out
cmp
cmp
cwtl
fidivrl
lock
mov
jmp
or
out
cmp
lahf
insl
inc
testl
mov
xchg
mov
int
or
xchg
adc
les
and
sbb
xor
aas
enter
arpl
aaa
sub
lods
xchg
mov
adc
fidivs
or
add
outsl
cltd
jge
addr16
outsl
sub
push
jmp
and
cmp
mov
pusha
sbb
or
inc
cmc
jb
xlat
cmpl
aaa
addl
aad
in
cmc
aaa
lahf
repz
insb
rolb
sub
lgs
dec
lock
cmp
adc
xchg
xchg
ds
test
xor
aam
adc
sbb
mov
mov
mov
mov
lods
lahf
push
mov
popl
decl
test
mov
mov
in
mov
mov
xor
jb
pusha
cmp
push
mov
cmc
or
xchg
mov
mov
pop
dec
adc
in
xchg
push
lcall
bound
add
add
lret
mov
inc
js
inc
adc
inc
sbb
in
mov
aad
push
test
ss
sbb
lret
rcrb
adc
dec
sub
insl
ljmp
push
sub
mov
pop
or
popa
push
dec
ljmp
lods
iret
adc
mov
mov
fs
inc
out
daa
andl
lahf
xchg
or
jne
movsl
out
jo
call
sahf
adc
mov
mov
test
pop
ret
data16
mov
mov
fldcw
dec
stos
mov
sbb
xchg
jo
mov
int3
dec
fdivrs
imul
jb
and
push
and
imul
popf
jbe
adc
aam
sub
jmp
iret
jle
mov
inc
aam
rcl
inc
xor
add
out
aad
decb
lahf
test
scas
and
cltd
aad
cmp
popf
ss
jnp
fiadds
mov
mov
popa
fadds
lea
push
dec
sub
mov
xor
data16
test
ja
sub
mov
push
aaa
pop
jge
sbb
push
ret
or
movsb
sahf
mov
mov
xchg
arpl
add
mov
flds
lods
inc
in
pop
nopl
mov
sub
ja
pop
aam
push
pop
rclb
mov
and
or
or
into
repnz
pop
xor
mov
lock
insl
test
sub
std
dec
cmc
clc
jb
mov
iret
je
loope
or
inc
xchg
bound
dec
mov
pusha
push
jl
vpunpckldq
sarb
popa
sahf
sbb
std
adc
adc
les
jge
jb
sub
jg
sbb
and
ss
inc
push
xchg
divl
add
pop
push
out
push
push
xrelease
sahf
and
sub
lds
fists
sbb
lock
lods
mov
push
inc
cmp
mov
xor
pop
sub
xchg
and
jmp
sub
xor
lods
icebp
aam
mov
xor
aam
xchg
xor
sbb
mov
and
add
mov
pop
mov
jg
add
loopne
sahf
push
pop
fprem
jns
inc
mov
pusha
mov
jge
out
mov
ret
movsb
popl
sub
jnp
inc
fwait
sub
mov
adcb
add
push
scas
sub
mov
mov
xor
ss
in
into
addr16
fsts
cmp
or
push
into
enter
jecxz
lret
xchg
add
rclb
testl
sub
xlat
push
mov
test
pop
or
cmp
cmp
pop
in
stos
or
cmp
add
and
pop
clc
push
fcompl
mov
fstpl
mov
jecxz
andl
and
dec
call
addr16
dec
dec
dec
push
push
add
jmp
mov
out
sub
push
add
pop
int3
jbe
lds
scas
pusha
es
mov
loop
dec
xlat
cmpl
fildl
add
push
les
xchg
push
sbbb
sbbb
aam
ret
adc
aaa
mov
gs
aas
xor
scas
shlb
xchg
out
neg
push
add
push
idiv
mov
xor
leave
mov
or
jo
or
lods
mov
pop
pop
push
sbb
dec
mov
pop
decl
dec
jo
pop
movsb
popf
loope
lds
pusha
rcl
sub
or
pushf
mov
lods
test
cmovbe
in
fnsave
mov
test
add
into
insl
popf
jle
mov
popw
movl
imul
add
cmp
test
into
roll
add
pusha
jns
jg
and
cld
cmova
jno
push
lret
cltd
mov
mov
xchg
adc
test
call
and
popa
mov
and
push
icebp
dec
aam
adc
push
push
aam
sarb
addr16
inc
cmp
adc
lock
jle
ja
mov
nop
mov
int3
jnp
rorb
jae
nop
sbb
or
ljmp
rolb
jns
int3
nop
into
aas
xorb
in
and
add
xchg
push
push
mov
outsb
iret
repnz
jns
push
dec
jl
jb
aas
xor
xor
lcall
mov
mov
sbb
pop
sub
mov
xchg
lea
dec
popl
xor
outsl
mov
add
nop
out
sub
enter
add
outsb
sbbl
adc
adc
sbb
xor
push
pusha
sub
ss
push
daa
subl
sarb
insb
sub
mov
dec
xchg
cltd
mov
aad
in
mov
stos
andl
push
gs
push
jno
hlt
xchg
fcompl
lret
push
xchg
cmp
add
sub
cmpsl
dec
xchg
mov
push
push
or
aam
and
dec
or
inc
xchg
sbb
inc
inc
cmp
xchg
mov
and
js
pop
je
nop
rcrl
in
iret
popf
nop
jb
jo
xor
shl
dec
pusha
inc
ret
add
jl
bsr
cmp
std
adc
mov
cmp
insl
mov
fidivrs
xor
inc
or
cmp
sub
inc
jl
aam
mov
mov
in
arpl
imul
rcrl
rclb
out
int3
jp
cmp
cmpb
dec
mov
inc
mov
xor
rclb
mov
fwait
popf
test
inc
repnz
call
sub
lahf
mov
sarb
fwait
ss
stc
mov
cmp
mov
int3
push
mov
and
sub
repnz
repnz
mov
orb
mov
pop
les
push
pushf
test
adc
adc
les
adc
push
cmp
mov
mov
push
arpl
push
jge
test
sbb
icebp
movsb
outsl
scas
cmp
sub
sahf
stc
sbb
jno
add
push
repnz
jb
cmp
pop
push
std
inc
xor
adc
mov
lahf
lea
jmp
fstpl
cld
in
push
mov
aas
es
stc
push
test
add
js
jae
dec
cmpsb
push
and
xchg
sub
sahf
pushf
das
pop
mov
pop
lods
xor
push
add
shll
rol
pop
sbb
js,pn
sbb
nop
or
cmovl
push
pop
fimuls
jnp
out
lahf
enter
outsb
sub
add
pop
cmp
add
inc
jmp
bound
dec
outsb
or
and
movsl
pop
xor
rcl
cld
nop
out
push
imul
fmull
dec
sbb
pushf
mov
addr16
mov
cmp
mov
pop
sub
pop
lret
subl
ja
rolb
mov
into
psrlq
int
loopne
pop
cmpsb
repz
inc
sarl
dec
mov
in
xchg
icebp
loop
mov
cmp
outsl
mov
mov
mov
add
push
adc
into
stc
imul
mov
cmp
lea
xor
repz
shll
rcr
int
int
mov
cmc
scas
cmp
adc
push
loope
pop
push
add
aam
clc
xor
add
inc
or
xor
decb
js
es
pop
andl
test
and
mov
std
rcrl
xor
pop
pop
ss
mov
imul
pop
mov
adc
es
push
pop
arpl
insl
sub
mov
inc
ja
dec
or
stos
inc
cmp
add
pop
jg
ljmp
push
inc
or
sbb
das
adc
ja
pop
out
add
testb
mov
cmp
and
scas
fisubrs
int3
adc
fisubrs
dec
sbb
cmpsb
jmp
sti
aam
ljmp
call
icebp
leave
sbb
jbe
xor
mov
enter
dec
sbb
push
pop
mov
repz
test
sbb
ret
xchg
lret
fisttpl
jge
xchg
inc
jo
mov
adc
jbe
xor
add
fsubrl
cmpl
dec
nop
sub
test
xchg
jo
decl
xchg
pop
ljmp
and
in
pushf
sub
shll
sub
aaa
jl
sbb
sti
lahf
push
pushf
in
mov
aas
cmp
pop
rcr
push
fcoml
xchg
add
insl
stos
jg
fildll
sbb
adc
and
into
dec
dec
push
push
inc
pop
les
cmp
rol
or
dec
stos
test
and
xchg
in
mov
push
sahf
add
scas
jbe
popf
inc
mov
pavgb
sbb
inc
jne
mov
or
mov
dec
sub
and
jg
in
mov
push
hlt
push
xor
xor
push
lret
notb
jmp
mov
add
pusha
adc
xchg
dec
jne
fisttps
push
std
pop
repz
lret
gs
jl
mov
in
movsl
out
in
sbb
inc
xchg
lret
cmpsb
sbb
push
or
punpckhdq
inc
cld
outsb
in
lock
push
and
adc
rorl
adc
shr
stc
loope
xchg
push
int
push
sub
inc
mov
mov
loopne
xlat
mov
pop
out
xor
in
rcr
aaa
mov
sti
cmpsb
hlt
faddp
out
push
jge
fists
dec
mov
imul
cmp
insb
push
mov
jp
push
out
pop
sub
test
mov
bound
lcall
das
movsl
pop
sub
inc
rcll
inc
lods
or
fucomi
data16
rorb
mov
outsb
outsl
inc
cmp
mov
divb
loope
rcll
rcrl
and
adc
inc
movsl
mov
mov
mov
clc
jle
sbb
test
jle
push
lcall
cmc
shll
push
shrl
mov
push
sub
and
fadd
mov
enter
pop
fs
pop
pop
sub
mov
mov
call
mov
adc
test
out
pop
loope
inc
or
movsl
fdivs
dec
push
mov
adc
mov
xlat
cs
js
int3
iret
fld1
ret
mov
pop
xchg
jb
into
jge
sbb
inc
mov
shrb
and
bswap
xchg
shlb
out
pop
dec
inc
sahf
or
pusha
adc
sbb
jle
pop
inc
pop
cld
stos
push
mov
inc
and
dec
sbb
adc
out
inc
hlt
test
stos
cltd
imul
xor
or
lcall
mov
inc
in
and
mov
cmp
inc
jg
movsb
lret
bound
mov
push
popf
jle
out
ljmp
dec
pop
jmp
or
pop
fidivrs
test
repz
or
sub
pop
sbb
loope
lods
dec
inc
dec
mov
ret
inc
gs
ret
lcall
in
lods
mov
scas
mov
mov
leave
ja
xchg
adc
notl
add
fnstsw
std
in
into
add
cmpsb
in
loope
shrb
sub
addl
jmp
jno
pop
outsb
movsl
cmp
and
sbb
int3
and
inc
sarb
ja
and
jnp
fs
or
das
pop
jnp
dec
cmp
xor
cld
dec
jecxz
enter
loopne
adc
ret
enter
ds
cmp
ret
xlat
mov
sbb
xor
mov
xchg
jnp
in
and
cmc
pop
ds
add
pusha
mov
sub
sahf
pop
push
sub
fldt
aad
sub
and
inc
rorl
lods
cmpb
jmp
inc
sbb
jp
mov
sub
xchg
scas
push
into
mov
out
in
idivb
arpl
sti
pop
je
add
xor
mov
cmp
and
add
and
jg
gs
adc
xor
pop
mov
nop
mov
jbe
mov
gs
loopne
push
dec
lahf
les
fldt
lret
aad
icebp
mov
push
pop
pop
mov
push
out
add
or
jle
jg
shll
mov
mov
fcomps
push
gs
mov
sahf
sub
out
xchg
mov
xor
mov
mov
out
test
stc
mov
push
mov
es
dec
lock
push
add
ds
cmp
push
xlat
jae
sbb
dec
ret
notl
mov
lds
pop
pop
mov
movsb
call
js
test
hlt
or
adc
les
dec
or
fwait
ja
movsl
int3
lahf
xor
mov
test
cmp
jns
call
or
cwtl
bound
mov
lods
sub
clc
mov
or
es
pusha
push
and
fbstp
lods
jnp
sahf
xchg
mov
fsubl
xchg
aaa
mov
test
sub
clc
or
mov
jle
loop
sub
ret
cmpsl
add
call
ja
mov
outsb
mov
xchg
jecxz
xor
in
mov
mov
lea
push
insb
jecxz
jecxz
xchg
xchg
bnd
pop
sbb
inc
push
adc
fists
xchg
negl
aaa
rorb
mov
mov
js
sbbb
incl
ljmp
or
outsb
xchg
in
dec
sbb
sbb
test
popf
push
sbb
xor
cmpb
out
mov
push
std
sub
mov
ret
rorl
mov
cmpsl
dec
xchg
fisttpl
scas
and
push
cmp
lcall
dec
shrl
jae
int3
cmpsl
pop
or
mov
jne
push
or
jb
jp
cld
mov
cld
cmova
push
jns
sub
shll
jo
loope
mov
cmpsb
nop
mov
dec
std
sbb
inc
mov
and
mov
xchg
cmc
jle
jmp
loope
negl
test
scas
add
imul
inc
lods
pusha
outsl
fwait
adc
loopne
fstpt
sub
setg
adc
xchg
cld
gs
mov
outsl
sub
inc
sarl
and
lock
daa
daa
and
jmp
push
jp
xchg
xor
das
sub
nop
add
mov
xchg
jno
daa
pop
or
push
lods
jp
add
test
sbb
push
cs
jmp
dec
aaa
in
adc
sub
mov
in
mov
sbb
or
dec
xchg
pusha
enter
xor
push
aad
sahf
fwait
inc
dec
adc
xchg
lds
xchg
sbbl
dec
cltd
icebp
fld
jge
cmp
cld
outsb
or
ds
aam
gs
sbb
sbb
movsl
aaa
cli
fcmovnu
xlat
shrl
xchg
and
jnp
push
std
es
inc
and
sbb
jae
pop
test
cmp
negl
iret
outsl
in
dec
mov
jl
jg
stos
and
cmpsl
mov
lcall
insl
mov
fidivl
lea
or
jmp
xchg
push
and
aas
adc
jl
decl
movsb
mov
xchg
rorb
das
int
pop
and
xchg
adc
adc
dec
jns
push
push
outsb
popf
clc
mov
add
dec
push
sub
nop
jmp
add
pusha
sbb
jne
es
jecxz
pop
clc
mov
scas
lods
pop
addl
mov
mov
cmc
lods
and
insl
sbb
pop
inc
inc
mov
and
xchg
add
cld
cmova
repnz
mov
xchg
mov
push
xchg
cmovns
test
shr
adc
test
xchg
insl
test
jne
mov
test
mov
push
sbb
pop
lahf
cs
je
or
fmuls
pop
and
fwait
and
movsb
arpl
or
ljmp
jl
out
mov
dec
push
addr16
in
push
mov
jnp
rorb
fwait
push
stos
arpl
cltd
movsb
xor
data16
push
out
sbb
repz
xor
fs
fsubs
out
clc
inc
mov
adc
mov
in
imul
mov
pop
pop
gs
rcll
mov
gs
scas
imul
ljmp
add
xor
and
pop
ljmp
ljmp
jnp
ljmp
cld
fstpt
push
stos
sbb
clc
mov
cld
cs
loope
mov
sbb
jg
push
data16
out
in
stos
rcrb
scas
mov
out
ret
and
fwait
push
ret
stc
mov
fisttpl
packssdw
push
add
clc
shl
or
xor
aas
mov
dec
fldl
in
xchg
aad
outsb
add
mov
test
fbstp
scas
insl
or
repz
fstpt
mov
fldl
in
imul
or
cmp
push
sbb
or
out
adc
das
mov
int
pop
fsubrl
lret
mov
mov
add
fstpt
push
fmull
add
pop
rcl
xor
xchg
xlat
fnstenv
xlat
jecxz
sbb
fldt
fs
xor
push
divb
jg
int
cwtl
mov
inc
jg
ret
add
sahf
aad
sub
push
fwait
push
scas
dec
xor
data16
dec
jno
cmpsl
cs
cwtl
repnz
pusha
add
ficoms
cmp
adc
cmp
dec
xchg
shl
xchg
dec
das
xchg
cmp
testl
inc
inc
cwtl
ja
loope
mov
sahf
jp
int
std
mov
movsb
mov
lret
pop
js
add
mov
lods
rcrb
xlat
jp
mov
lea
mov
outsb
adc
xor
add
cmp
or
loop
in
cmpsb
mov
out
stos
sbb
push
jbe
ljmp
iret
test
cs
mov
xchg
pop
mov
lahf
sbb
push
and
sub
xor
add
nop
dec
ret
jp
lahf
ret
pusha
or
stc
push
gs
jecxz
lods
cmp
and
in
xchg
pop
pushf
mov
mov
test
jae
out
sti
mov
jmp
outsl
push
dec
push
inc
or
nop
cmp
fisubl
or
inc
mov
ret
sbb
mov
inc
mov
enter
mov
jo
and
or
popa
shlb
movsb
cmc
or
xchg
out
fadds
mov
add
das
aad
or
adc
push
xchg
mov
aam
or
adc
fcoms
repz
repnz
cmpb
iret
jge
test
and
jmp
ja
cmp
aam
lds
ficoml
int3
inc
cwtl
adcl
sub
es
xor
mov
mov
adc
sbb
mov
mov
pop
stos
and
pop
nop
ss
cmp
push
out
mov
adc
stc
push
int3
cltd
test
sub
std
and
sbb
sbb
inc
adc
push
xor
sbb
repnz
xchg
cltd
sbb
fdivl
ret
mov
push
add
add
cmc
xlat
jecxz,pn
push
adc
jno
jnp
inc
jo
je
fstp
test
jecxz
sbb
cmp
iret
js
lcall
mov
loop
jb
sti
lcall
dec
jne
mov
bound
sbb
adc
ret
ret
xor
hlt
lcall
ret
mov
push
popf
and
push
cltd
cmp
add
mov
add
sti
sub
lds
xchg
mov
inc
js
pop
stos
pop
jae
clc
mov
xor
jne
sub
je
inc
mov
sub
hlt
mov
stc
fistpl
test
pop
mov
insb
and
dec
test
dec
cmp
mov
jecxz
push
push
repz
mov
push
jg
sbb
ret
and
xchg
fwait
mov
jae
std
jg
xchg
fistpl
jne
loopne
iret
lods
sbb
mov
adc
pop
pop
dec
leave
rcrl
push
adc
add
inc
jno
xor
dec
cmp
dec
aas
pop
out
ret
aam
mov
test
fildl
xchg
jbe
sub
stos
lret
stos
je
jp
or
orb
sub
mov
js
insl
adc
push
imul
or
sub
fdivr
cmp
cs
addr16
movsb
sti
and
loopne
icebp
lea
arpl
orb
insl
xlat
loopne
sbb
es
leave
iret
push
adc
std
pop
jno
sbb
push
rclb
cmc
xchg
out
scas
mov
xchg
insb
shll
rorl
inc
pop
push
into
aas
xor
dec
push
daa
ljmp
push
test
aad
mov
pop
mov
test
push
xor
mov
stc
mov
mov
push
js
int
fdivl
ja
lds
mov
out
adc
scas
int3
das
inc
sbb
sub
mov
inc
fildll
mov
or
test
xor
adc
lcallw
push
movsl
dec
pop
incb
sub
mov
rorb
loope
fisubl
sub
das
test
movups
fs
sbb
cmp
std
ret
ficoml
dec
push
or
and
dec
roll
mov
cld
xchg
pop
pop
sub
mov
loop
andb
adc
add
int3
mov
cltd
cmp
lods
repnz
and
mov
add
adc
addr16
sbb
push
scas
scas
mov
push
sub
inc
cmp
test
xchg
mov
stos
js
sahf
jg
mov
orl
movsl
xchg
ds
sarb
mov
lret
dec
mov
mov
outsl
mov
xchg
push
cwtl
and
inc
mov
mov
xchg
adc
xchg
repnz
pop
cld
ss
lcall
xor
ret
bound
pushf
psubd
pop
stc
push
leave
push
scas
sub
and
nop
shrb
fnstenv
adcl
loop
add
sub
pop
sbb
int
pusha
pop
fdivrp
test
inc
aam
xchg
or
jb
mov
rcrb
push
dec
aam
js
push
mov
imul
push
cld
shl
inc
in
icebp
ljmp
mov
mov
repnz
inc
ja
incl
sahf
dec
cltd
stos
orb
mov
fldt
rcr
movsb
xor
cmp
or
push
testb
cwtl
mov
xor
lods
lret
or
addps
fiaddl
loope
ds
inc
rolb
test
ret
pop
dec
fildl
or
jmp
jg
cmp
sahf
aaa
jle
sbb
sub
push
push
dec
scas
mov
and
pop
lret
mov
push
in
sub
and
xor
lret
std
or
pop
adc
dec
clc
pop
enter
popf
sub
test
mov
jns
cmpsl
xor
out
aad
mov
jmp
rolb
pop
adc
pop
push
addl
add
std
mov
mov
xor
xchg
adc
jmp
test
mov
bsr
dec
out
jo
loopne
mov
scas
push
bound
and
inc
loop
jp
hlt
shrb
pop
push
sub
add
sub
push
test
mov
lods
sahf
jae
xchg
cmc
cmc
ja
lods
in
add
jge
std
in
cltd
dec
fistpll
mov
cmp
mov
into
add
sub
neg
jmp
push
mov
inc
push
add
outsb
pop
aam
or
lret
lods
scas
jmp
js
inc
mov
pop
adc
mov
outsl
mov
push
xchg
shrl
push
arpl
shll
push
gs
xchg
sbb
mov
and
scas
add
addr16
sbb
jecxz
in
loop
enter
int
lds
xor
mov
xor
sahf
lcall
out
push
mov
bound
das
adc
push
push
aam
jne
enter
lock
cltd
fucomp
mov
jns
dec
leave
pop
lret
xor
adc
sub
fsubp
clc
pop
test
lret
sub
repnz
fbstp
adc
jg
xchg
and
roll
dec
test
pop
adc
mov
imul
and
inc
push
addr16
sbb
pop
movb
lds
push
mov
jecxz
mov
pop
or
cmp
mov
mov
repnz
cmpsb
jmp
pop
jle
leave
out
sbb
scas
cmp
out
fwait
pop
inc
fisubrl
and
xor
dec
jmp
ljmp
and
or
mov
push
insl
xchg
das
aaa
loop
adc
dec
push
or
mov
nop
xor
dec
into
dec
jecxz
lcall
mov
repnz
jbe
sub
loop
decb
gs
push
sti
fldl
test
std
and
test
stc
mov
push
movsl
js
sub
inc
adc
jmp
aad
dec
cld
scas
inc
stc
shlb
pop
cld
push
jge
pop
and
fs
dec
bound
xor
out
out
add
out
insb
ss
push
outsl
push
cmpsb
mov
or
imul
sbb
mov
or
inc
nop
clc
popa
xor
sub
mov
or
inc
mov
jle
xlat
xchg
addb
sbb
icebp
cmpsb
scas
mov
frstor
pop
mov
data16
loop
jo
xchg
push
incl
fists
nop
popa
inc
jge
jno
cmpsb
psrld
rcll
jmp
jmp
cmp
xor
inc
int
adc
orb
notl
movsb
fcomi
mov
scas
daa
cmp
gs
es
cld
jno
int
ja
or
xor
adc
push
mov
in
or
cwtl
mov
aad
int
or
das
xchg
push
add
mov
adc
lret
push
dec
sub
inc
dec
push
jecxz
sahf
cmpsb
jecxz
sbb
push
push
cmpsl
test
or
icebp
push
push
mov
test
pushl
enter
mov
out
sub
sub
push
insb
mov
je
push
xor
fwait
add
xor
aaa
mov
lods
jne
ret
arpl
inc
mov
test
je
jno
xor
xor
and
inc
push
pop
clc
inc
pop
cld
dec
sub
aad
xchg
sti
push
outsb
mov
cmc
cmp
test
jbe
push
jle
adc
popf
add
cmp
and
scas
clc
addr16
pusha
jns
mov
cmp
pushf
rcl
mov
fs
push
pop
sub
add
pop
test
in
fstpl
jmp
xchg
out
xor
inc
adc
dec
and
dec
jmp
dec
and
jg
cwtl
nop
mov
adc
jp
or
iret
pop
shl
dec
mov
outsl
sbb
imul
in
sbb
pop
jg
insb
mov
lret
sub
lcall
push
xor
xchg
cmpsl
and
lods
jl
sub
or
sub
cmp
and
inc
rcrl
dec
jb
es
sahf
maskmovq
notl
mov
xor
and
mov
mov
mov
sub
mov
enter
mov
movsl
aad
cld
out
mov
xor
mov
inc
dec
test
arpl
xor
fstpl
fs
xor
xor
xchg
test
ret
add
or
dec
test
mov
pop
and
mov
jmp
jno
les
jecxz
inc
aam
bound
lds
add
jbe
sub
ret
in
lcall
std
insl
and
jp
jmp
pusha
and
fyl2x
pop
jecxz
mov
es
std
icebp
mov
dec
pop
jmp
sahf
imul
nop
testb
jae
std
sbb
jns
sub
inc
mov
test
fs
cmp
adc
test
mov
push
rorl
js
imul
xlat
rep
lock
repz
lret
pop
int3
inc
movsb
inc
das
dec
mov
into
int3
out
sahf
xor
aam
push
sub
outsb
dec
imul
in
daa
sub
testl
adc
and
std
mov
lret
test
mov
mov
dec
mov
or
xchg
sbb
adc
xor
and
pop
dec
pop
push
push
pop
mov
test
mov
adc
lea
push
add
inc
sub
cli
and
or
lods
mov
mov
mov
xor
repz
jp
cmp
cmpsb
push
sbb
jle
mov
xlat
clc
lods
push
xchg
dec
jo
add
sbb
pusha
mov
xchg
stc
loopne
dec
fs
dec
inc
mov
ljmp
and
jb
or
push
mov
das
and
or
scas
jle
sbb
jns
scas
aam
test
mov
push
fdivl
mov
inc
mov
fmulp
insb
scas
fdivrs
gs
out
idivb
fcoms
sbb
das
or
fs
imull
pop
notb
fdivrs
mov
xor
enter
jb
or
push
mov
mov
adc
or
cs
jp
pop
xchg
jp
mov
and
test
out
lock
mov
sbb
sub
sti
sbb
fwait
stos
sbb
sbb
scas
cmp
inc
mov
add
sub
pop
out
repnz
ret
gs
in
sahf
cmc
push
push
lret
and
or
daa
popf
jp
iret
jge
mov
and
and
or
int3
data16
sub
ret
and
jg
xchg
jg
push
movsb
mov
sbb
popa
xchg
xchg
cld
adc
fbld
mov
inc
mov
push
push
fstl
inc
iret
or
push
mov
lret
cli
dec
jle
cmpsl
jg
mov
int
arpl
cmpsb
loop
loopne
xchg
push
ret
sbb
mov
faddl
or
mov
adc
scas
fcmovnb
mov
idiv
ja
inc
fmulp
fucomi
sti
outsl
jns
inc
or
xchg
data16
fisttpl
xor
cmpsb
xchg
mov
push
filds
loop
sbb
out
and
out
inc
pop
jns
les
repz
cwtl
mov
pop
sub
and
aas
imul
int
pop
mov
loopne
mov
adc
sub
ljmp
rcll
dec
stos
popa
fwait
int3
pop
dec
xor
inc
call
cmc
mov
movsl
mov
inc
fisttpll
std
mov
scas
outsl
cmp
bound
jo
adc
xor
jne
push
xchg
icebp
pop
imul
add
mov
pop
out
dec
lods
dec
popl
and
shll
les
insl
icebp
sarl
push
filds
wrmsr
out
fbld
cltd
sti
sub
sbb
mov
adc
xor
and
jnp
inc
cmp
daa
or
loop
jne
push
xchg
dec
adc
mov
test
repnz
ret
adc
pusha
push
imul
mov
adc
cmpl
jo
outsb
je
jp
fstps
mov
inc
push
in
repz
mov
outsb
data16
cs
mov
mov
je
and
ss
cmpsb
adc
inc
jbe
mov
repz
mov
faddl
pop
jb
or
sbb
enter
mov
imul
inc
jle
roll
adcb
xorb
lods
ds
jmp
addr16
pop
adc
test
fisttpll
cmp
mov
mov
xchg
loop
or
jle
roll
adcb
dec
sbb
add
inc
test
xor
lcall
mov
sahf
imul
adc
cmpsb
out
mov
push
add
xor
push
pop
mov
and
icebp
xor
push
cmc
jle
roll
adcb
insb
jo
imul
jle
fsts
push
in
or
addb
jl
mov
aad
push
and
mov
stos
xor
mov
popf
xor
enter
xor
gs
or
push
pop
xor
pop
ret
out
push
gs
ret
fsubrp
loopne
sbb
in
dec
push
push
mov
push
sub
das
or
xchg
xchg
jle
ja
pop
div
xchg
lret
mov
push
into
sbb
push
imul
and
cmpsl
xorl
inc
mov
mov
jecxz
mov
or
cwtl
clc
lds
aam
xchg
nop
xor
xchg
dec
inc
aam
mov
sahf
sbb
out
xchg
or
jmp
inc
mov
lcall
test
sbb
lea
lods
push
popf
add
or
xor
stos
pop
adc
pop
jge
ret
mov
mov
sub
mov
dec
jbe
xchg
or
sbb
es
enter
mov
lret
push
cmp
enter
adc
repz
cmp
out
outsl
dec
jmp
fcmovnu
insl
and
ljmp
jne
pop
mov
sarl
mov
push
pusha
roll
dec
mov
repnz
jl
or
in
inc
popa
int3
sub
fs
xchg
mov
cwtl
push
add
push
push
clc
lea
dec
lahf
stos
pop
shlb
les
mov
sbb
insb
jecxz
js
cmpb
rep
add
jo
cmpb
insb
movsl
cmp
int3
nop
pop
xchg
cmp
inc
xchg
dec
jg
xchg
pop
sahf
and
scas
data16
es
push
jge
add
cwtl
das
insl
loopne
inc
sub
in
mov
mov
lret
in
xchg
fnstsw
cmpb
dec
scas
repnz
lret
gs
add
jl
shl
mov
and
sub
or
popf
aam
and
sbb
shll
sub
xchg
inc
jo
mov
xchg
jmp
jbe
dec
stos
pinsrw
out
dec
mov
loope
jne
hlt
mov
mov
xchg
or
and
push
sub
jns
std
pusha
div
dec
lods
or
dec
test
xchg
sbbl
xlat
xchg
lock
in
shlb
out
nop
inc
dec
inc
icebp
sahf
inc
or
jp
jb
scas
outsb
fwait
push
push
inc
fnstenv
adcl
hlt
jle
dec
into
xor
adcl
mov
ss
or
mov
aaa
lahf
out
fwait
adc
lcall
inc
adc
add
inc
in
dec
cmp
iret
dec
cmp
sub
cmpsb
xchg
les
push
and
jle
mov
sbb
push
out
rolb
push
rcrb
shrb
repz
pushf
lock
ljmp
jmpw
push
dec
xor
add
fyl2x
arpl
jg
in
and
inc
out
lahf
sbb
mov
fisttps
and
loop
mov
push
in
push
adc
xchg
adc
adc
xchg
xor
and
xor
jg
rcrb
inc
mov
lds
in
or
mov
sub
es
repz
lods
cmp
imulb
imul
jle
add
dec
push
push
aas
shll
push
inc
push
fnsave
pop
mov
xor
pop
cmp
adc
mov
rclb
and
neg
xchg
shrb
fnstenv
gs
cmpb
xchg
dec
out
cmp
js
std
lahf
xchg
add
cmc
out
test
jg
fsts
jo
dec
dec
stos
pushf
inc
shrl
cmp
call
not
pop
test
mov
ret
call
xchg
pop
movsl
pop
xchg
es
pop
in
dec
push
jo
inc
or
out
xor
sub
dec
shll
jl
in
loopne
adc
imul
jnp
inc
mov
pop
cli
insl
inc
nop
out
push
xor
jmp
out
aas
les
lods
rclb
cmp
filds
mov
add
jbe
daa
adc
cli
adc
mov
adc
sub
xchg
jp
add
sbb
shrl
mov
lock
leave
stc
pop
mov
aad
xlat
dec
inc
inc
adc
cs
pop
jbe
std
rcr
jne
rolb
pop
xchg
cmc
jl
sbb
sub
stc
outsb
call
in
xchg
push
imull
lods
inc
hlt
add
mov
pop
jmp
push
and
inc
mov
into
movsb
aas
pop
loope
mov
ss
cmc
push
pusha
lret
xchg
jmp
mov
leave
repnz
stc
iret
cmp
pop
fcomps
pop
ret
sub
push
rcl
out
bound
popa
sbb
rolb
add
xchg
mov
fistpl
inc
inc
adc
in
lods
push
xor
dec
xchg
push
out
nop
push
outsb
inc
insl
in
xlat
lea
inc
add
stos
sub
mov
jne
sbb
mov
dec
es
cs
lahf
cmp
loopne
cmp
pop
stos
pop
mov
in
xchg
sahf
mov
imul
loope
out
aam
xlat
pop
add
mov
aam
mov
movsb
std
mov
cmpsb
cmpsl
sbb
fsubrl
mov
mov
idiv
pop
mov
xlat
jp
xor
popf
mov
es
loop
cmp
rolb
adc
cs
aad
outsl
and
add
bound
aas
loop
imul
out
push
sti
loope
jmp
inc
push
or
dec
stos
add
das
jns
cmpl
out
pop
jae
sub
pop
jnp
ds
jg
mov
stos
inc
push
mov
sbbb
stc
push
jp
inc
push
lock
jne
and
leave
outsb
movsl
orb
in
js
cmp
pushf
adc
icebp
add
lock
mov
mov
lcall
mov
sbb
cmp
out
cmp
loope
or
imul
and
shll
xor
loop
les
fidivs
or
fiaddl
inc
sub
push
adc
cmp
and
repz
mov
add
jns
adc
mov
cmp
mov
dec
xchg
shlb
mov
and
mov
fldt
inc
mov
loop
mov
dec
out
ret
cmp
mov
loop
xchg
mov
dec
inc
mov
mov
jae
mov
or
jecxz
jnp
mov
cmpsb
in
pop
aad
add
neg
lcall
lods
mov
xor
lret
daa
cmc
mov
jo
aad
les
xchg
mov
mov
push
mov
xor
pop
div
xor
pushf
data16
push
adc
arpl
imul
jmp
ja
fstp
rorb
loop
call
or
mov
inc
fs
and
mov
mov
std
mov
sub
add
outsl
mov
sbb
sbb
cmpsl
stc
or
mov
scas
push
or
es
pop
fdiv
push
mov
lods
ljmp
xchg
and
inc
push
pop
mov
jmp
ret
pop
xor
fwait
pop
fistl
sbb
sbb
ljmp
movsb
pop
ret
aad
hlt
fsts
jg
cmp
inc
int
inc
and
cmp
mov
push
ret
addr16
les
or
sbb
cs
sahf
jo
mov
adc
lcall
iret
add
shl
cmp
mov
mov
imul
xor
sarl
gs
lret
lcall
xlat
into
jle
dec
push
ret
int3
and
push
mov
rcrl
ret
shll
xchg
test
cmp
adc
js
dec
inc
cwtl
sbb
jne
cmc
sub
and
inc
lea
cmp
sub
test
int3
loopne
mov
addr16
sub
lret
and
dec
xchg
mov
test
push
scas
je
bound
mov
out
pushf
mov
xor
rcr
mov
js
addb
mov
push
xchg
cltd
gs
push
mov
sti
mov
cmpsl
dec
outsb
or
roll
push
addr16
or
mov
cli
roll
xor
pop
daa
pop
test
in
xchg
sbb
add
cmp
jmp
inc
sbb
sbb
mov
out
mov
push
sbb
mov
loopne
inc
and
lds
xchg
sub
insl
ljmp
mov
jecxz
fs
mov
push
gs
rorb
in
inc
mov
push
cmc
ficompl
dec
les
addb
bound
cmpsb
shr
xor
scas
inc
inc
cmp
xor
pusha
and
lret
mov
gs
jg
mov
sar
icebp
mov
adc
and
jo
mov
fildl
sti
jle
ret
lret
dec
push
fs
in
dec
push
iret
test
fistpl
mov
les
rep
lods
or
les
lea
adc
xor
into
mov
or
adc
xor
sbb
cmpsl
add
cmp
dec
push
outsl
das
popf
scas
pop
dec
cmc
jo
in
pop
mov
mov
push
xchg
fidivrl
lahf
add
pop
push
dec
fdivrs
pusha
ficoml
dec
and
aas
sub
sub
andl
mov
loop
sub
sarl
fmul
loopne
inc
adc
mov
mov
hlt
in
lods
les
pop
or
push
in
scas
insb
cmc
pop
xor
outsb
rcrl
sub
sub
pusha
clc
pop
les
mov
call
filds
pop
sub
jno
mov
stos
es
add
outsl
ss
mov
adc
jnp
test
rorb
mov
test
sarl
jb
mov
cmp
xchg
mov
cmp
or
inc
dec
push
jmp
sbb
dec
or
idivb
and
mov
cmp
cmpsb
mov
xchg
push
cmpb
lods
fistpl
lcall
push
in
pop
push
xchg
or
xchg
cwtl
jns
test
cmpb
or
jmp
push
push
ss
fsubrl
adc
loopne
movsb
mov
ljmp
lods
in
push
push
testb
adc
arpl
call
sub
adc
mov
test
cmp
or
xchg
cmpb
mov
mov
imul
push
cmc
jl
les
cmpsl
das
xlat
int
adc
lret
inc
sbb
scas
jmp
stos
sbb
add
in
ja
cmp
orb
ret
mov
push
push
dec
jno
mov
jb
mov
clc
lahf
negl
sbb
test
pop
push
imulb
adc
lock
fldz
outsb
leave
dec
mov
sbb
les
testb
jg
cmp
rorl
call
enter
and
fdivr
mov
or
add
scas
sub
pop
mov
xchg
xor
in
sahf
pop
addr16
mov
imul
shl
in
imul
cmc
cmp
aam
mov
or
push
stos
ds
fcmovne
mov
and
iret
inc
adc
push
mov
fdiv
into
mov
push
aam
mov
mov
das
mov
roll
mov
bound
add
mov
call
pop
pushf
dec
mov
pop
add
pop
comiss
faddl
cld
pop
push
rcrb
sbb
test
repnz
mov
ja
or
mov
and
ss
rcrl
jp
test
pop
insl
pop
fs
sbb
sbb
mov
jmp
pop
sub
mov
enter
xchg
pop
cmp
jae
pusha
int3
and
int3
push
mov
mov
fdivrp
mov
push
xor
mov
jle
lret
sub
mov
and
fxch
lods
sbb
mov
cmp
imul
loope
cmp
test
aas
mov
jecxz
lds
add
out
clc
mov
lret
push
sub
loopne
es
out
inc
popf
std
or
stos
push
rcl
imull
cmpb
or
xchg
es
jne
pop
mov
pop
out
pop
and
pop
mov
mov
jns
into
jno
push
jb
push
jne
shrl
cmpsb
js
xchg
iret
mov
push
mov
aas
insl
loope
xchg
jg
inc
pop
loop
fnstsw
inc
call
mov
sbbl
pop
jg
mov
pop
icebp
cmp
iret
and
sub
icebp
dec
int
push
xchg
jle
shrl
and
sbbl
in
inc
sbbb
dec
jecxz
cmpsb
shlb
rorb
aam
lock
jcxz
fcmovne
test
shl
movsb
lahf
pop
idivb
push
push
xor
adc
cmpsl
lea
bswap
jg
das
push
repnz
pop
jae
movsb
adc
push
mov
ret
fists
aaa
inc
sbb
mov
sub
add
ffreep
addr16
test
sbb
loopne
sub
mov
sbb
imul
arpl
or
mov
jp
int3
xor
out
pop
imul
mov
repnz
or
mov
icebp
mov
in
dec
sbb
pextrw
jg
test
mov
roll
stc
or
rorl
or
popf
sub
repnz
jecxz
jl
push
push
in
ret
out
in
jne
nop
xor
test
call
aad
xor
cli
mov
in
mov
mov
lret
sahf
cmpsl
fildll
jp
mov
call
mov
sub
leave
lcall
imul
in
into
test
movsb
dec
leave
jecxz
fwait
out
cld
sbb
loop
mov
rcll
inc
mov
push
lods
add
mov
vcvtsi2sdl
fwait
jbe
mov
lds
add
jl
adc
jne
movsb
in
bound
test
mov
push
popf
dec
hlt
insb
jo
lret
mov
test
adc
mov
or
adc
ret
inc
mov
push
les
daa
jno
pop
mov
hlt
clc
sahf
gs
mov
inc
push
add
xlat
sbb
sbb
pop
pop
add
mov
jo
dec
fldt
int
orb
dec
adc
ret
cmp
jae
jl
cltd
lcall
add
lcall
bound
jl
shlb
sub
add
cmpsl
jae
icebp
fcompl
aam
fsub
sub
pop
mov
das
not
mov
xor
fisubs
cs
xor
push
test
lret
xlat
or
iret
fmull
inc
cltd
mov
add
or
xchg
mov
jmp
pop
jnp
mov
adc
sub
mov
or
fs
sub
pop
lret
orl
push
sub
rclb
insl
jmp
cmpsb
rorl
mov
jle
push
jmp
mov
pop
stos
in
dec
rclb
bound
push
repnz
xchg
sahf
cld
subl
pop
mov
iret
shrb
xchg
loop
mov
mov
jns
mov
mov
sti
mov
movsb
cmc
adc
jge
test
fwait
arpl
fsubs
jb
clc
fwait
loopne
ljmp
add
mov
jp
in
lea
loopne
xchg
sbb
push
cmp
and
push
inc
pop
jno
push
outsl
ds
dec
inc
push
xor
popf
add
xchg
adc
adc
sub
les
nop
addr16
or
or
jbe
mov
push
jb
add
test
xchg
shrb
inc
xor
nop
psubb
lock
jno
enter
xchg
pop
pop
call
std
and
mov
adc
or
mov
push
pop
call
cmp
xor
fildll
add
frstor
fwait
push
and
adc
inc
xor
mov
int3
mov
outsl
adc
push
cwtl
je
insb
or
sbb
fidivrs
sub
cmp
pop
cltd
or
and
bnd
aas
cld
mov
dec
push
jno
fdivrl
and
in
sub
sahf
mov
pop
xchg
ljmp
lret
orl
inc
out
icebp
fistpl
mov
xchg
jmp
popf
cld
je
push
es
dec
clc
lcall
and
inc
or
inc
dec
or
cmp
loop
inc
cltd
adc
push
je
aad
cmp
sub
daa
mov
or
pop
jne
rorb
cld
dec
lret
adc
ja
loopne
into
loop
push
cltd
test
ljmp
mov
xor
sarl
ret
mov
rcll
mov
out
pop
imul
jp
aas
lds
dec
lret
roll
flds
pop
fabs
mov
and
adc
pop
inc
xchg
xor
push
mov
stos
lcall
sbb
fnstcw
sbb
orb
fistpl
and
jecxz
shrl
into
les
je
or
add
or
mov
jnp
xchg
shl
xchg
cs
sub
add
loopne
dec
cmp
fwait
mov
mov
push
push
mov
push
clc
iret
sub
mov
lret
fxch
loop
push
push
xor
and
int
xchg
and
mov
out
xchg
daa
sbb
pop
mov
shlb
outsb
mov
jne
in
into
jecxz
and
push
dec
icebp
mov
scas
and
inc
sbb
decb
cmpsb
xchg
dec
out
mov
es
aam
notb
sbb
lret
push
testl
imul
mov
or
fsubl
pop
dec
mov
and
lea
fidivrs
xor
push
in
lds
enter
mov
mov
out
or
sub
xchg
xor
nop
lock
in
enter
das
sub
xor
dec
bound
je
sahf
or
mulb
sbb
sub
aaa
ret
mov
mov
fcoml
cmpl
les
xor
xorb
out
popa
fisttpll
or
inc
cmp
sub
dec
fisttpll
movsb
push
insl
popf
movsb
insl
push
mov
add
push
enter
movsb
insb
mov
mov
fwait
jecxz
jle
push
sbb
inc
stc
mov
cmp
xorl
jl
jg
xchg
xchg
sub
test
or
in
cmp
sub
aad
lahf
les
call
js
mov
cmp
cmp
mov
push
insl
ret
and
inc
pop
aaa
aad
cmpsb
mov
lds
xchg
cmp
loopne
pop
out
fiadds
cmp
mov
pop
stos
and
and
mov
xor
lahf
fadds
insb
xor
lea
inc
rorl
sbb
in
ret
nop
xchg
mov
or
lea
jno
add
add
add
push
mov
out
lds
jae
xor
dec
roll
shlb
pop
pushl
bound
jo
jb
adc
push
pop
aas
mull
adc
and
divl
bound
data16
cltd
mov
xchg
push
stc
and
inc
gs
pushf
icebp
hlt
movsb
ficomps
sub
xor
in
in
pop
push
and
sbb
push
sarl
push
movsl
pop
mov
pusha
imul
mov
jmp
cmp
inc
test
dec
repnz
pop
outsb
cmp
or
lods
push
xchg
clc
xchg
mov
jl
bound
cmc
jp
sbb
and
mov
leave
roll
mov
insb
sbb
mov
loop
jle
mov
hlt
and
xchg
js
retw
sub
jns
or
or
clc
fcmovnb
inc
mov
jp
mov
mov
and
ja
xchg
inc
add
pop
xor
insb
pushf
sbb
fstl
cmpsb
sub
add
adc
mov
outsb
sub
mov
inc
pushf
je
adc
sti
cmc
mov
sub
mov
or
mov
imul
rorb
jle
mov
cmp
call
dec
add
in
mov
cli
inc
out
xchg
pop
sbb
sub
adc
lds
dec
adc
push
dec
gs
xor
pop
push
add
adc
add
xchg
pop
push
sbb
mov
push
icebp
loopne
pop
push
movsb
dec
mov
mov
and
mov
push
outsl
es
in
test
nop
sub
adc
push
lret
hlt
call
or
mov
xchg
xchg
jb
inc
sbb
inc
sbb
jns
add
rorl
decl
mov
adc
out
loopne
add
fwait
ja
sarb
loop
repz
out
test
aaa
pop
fdivl
sbb
jns
dec
sub
pop
dec
fwait
test
pop
push
cli
call
lret
pop
xlat
mov
lret
mov
test
cmp
mov
mov
dec
dec
or
mov
push
xchg
sti
add
pop
sub
inc
inc
dec
clc
out
adc
fstpt
ja
mov
ret
bound
sub
imul
dec
out
xchg
shlb
fs
push
fwait
in
shll
sti
cmpsl
dec
outsb
ss
icebp
add
adc
sahf
jb
outsb
mov
jnp
xor
negl
mov
add
sahf
dec
jmp
into
push
sbb
sahf
decb
lahf
push
mov
inc
inc
mov
fldl
xor
mov
sub
leave
jno
xchg
jge
cmp
addr16
xchg
cmp
aas
cs
push
adc
movsb
jl
add
out
dec
jo
fmuls
push
xchg
out
adc
xor
jne
ljmp
stos
push
inc
nop
add
jne
ret
jp
fisubrs
dec
subl
in
push
cmc
arpl
and
js
mov
sbb
sahf
mov
test
inc
or
pop
test
bound
cld
xchg
inc
outsb
cmp
mov
jo
add
inc
lods
test
inc
out
xor
pop
adc
out
inc
push
inc
aam
and
inc
push
mov
mov
fistpl
int
dec
adc
xchg
push
fmulp
cltd
dec
stos
leave
inc
inc
int3
insb
shrl
fs
or
sbb
adc
or
es
inc
lcall
xor
push
clc
add
rclb
sbb
in
mov
mov
lcall
sub
push
sbb
pop
or
sbbl
inc
push
mov
mov
push
jnp
cwtl
xchg
dec
jecxz
cmpsl
cmp
pushf
mov
inc
add
mov
and
in
sub
push
pop
inc
lcall
into
jmp
dec
aas
push
jo
jns
jno
je
fcompl
repnz
imul
add
pop
sbb
jo
jne
mov
fldt
push
xchg
xor
shrl
test
sub
dec
daa
and
add
in
sub
mov
out
sub
push
jbe
call
subl
sbb
and
mov
ficoms
sahf
push
adc
cmp
mov
std
and
pop
movsl
sahf
xchg
int3
push
jecxz
daa
cmp
scas
outsb
push
push
das
mov
lock
sarl
stos
dec
pop
notb
movsl
js
in
xchg
fisttps
or
push
or
cmpsl
pop
pusha
stos
int
jl
cmp
xor
pop
hlt
pop
mov
imull
lea
push
push
jb
cmp
and
into
xor
imul
in
pop
loopne
aam
cmc
push
addl
ficomps
pop
dec
imul
xchg
fwait
les
dec
fnstsw
into
xor
add
jmp
bswap
insb
cmpsb
add
cmp
pop
sti
je
cmp
je
nop
fcoms
pushf
aaa
xor
dec
and
iret
mov
out
fcoml
into
xlat
cmc
or
mov
jge
in
mov
push
jo
insb
cmc
xchg
mov
bound
test
aam
inc
and
adc
jge
xchg
and
push
sbb
adc
call
inc
adcl
push
popf
dec
icebp
fidivrs
loope
insb
dec
pop
leave
adc
in
xchg
repz
mov
in
xchg
aas
inc
ja
aad
or
sar
test
ss
push
in
jecxz
cmp
cmp
xlat
mov
xor
cmc
outsb
jnp
adc
xchg
gs
fsubrs
into
cmc
leave
push
sub
rcll
cvtpi2ps
jp
mov
cltd
add
push
rclb
cld
add
push
loopne
stc
xor
cmpsl
and
mov
out
or
test
fbld
jbe
or
aad
inc
adc
jmp
dec
das
movsl
push
test
fisttpll
popl
cmp
std
xor
mov
push
dec
xlat
lods
or
jl
push
negl
scas
pushaw
cs
in
cltd
push
push
sub
jecxz
add
mov
xlat
pop
push
jae
in
pop
mov
mov
daa
sbb
fs
mov
or
jmp
dec
mov
mov
test
in
cmpsl
andl
inc
cli
push
std
das
adc
cwtl
mov
gs
jl
pushl
mov
sbb
and
or
jmp
lods
or
mov
mov
mov
add
mov
decl
pop
adc
icebp
jg
xor
pop
pushw
std
in
lret
push
xor
clc
push
xchg
stos
sub
outsb
or
add
popf
pop
nop
xchg
insl
push
fwait
int
inc
mov
or
addr16
jbe
fwait
test
adc
pop
stos
xchg
out
push
adc
inc
iret
cmp
and
shl
xchg
lds
repnz
in
pusha
sbb
xchg
pop
rcl
fmull
es
jns
das
xchg
sub
jnp
dec
lods
jl
cmp
lahf
push
cmc
jae
sarb
loope
adc
cmp
xor
cmpsl
sbb
mov
jg
xchg
xor
sti
jp
lods
and
loop
xchg
movsb
mov
pop
pop
scas
pop
sbbl
orb
dec
mov
sub
icebp
mov
inc
mov
sub
cli
push
jbe
std
sub
cmc
test
and
les
cwtl
cmpl
cld
adc
mov
orl
imul
adc
and
hlt
test
mov
lods
iret
fiadds
enter
jg
pop
int3
jle
lret
loope
mov
cmp
imul
xchg
xchg
jnp
adc
mov
pop
sbb
scas
outsb
ret
and
adc
imul
jge
or
insl
mov
jle
insb
testl
pop
into
mov
mov
or
leave
mov
mov
std
out
dec
sbb
shll
xchg
mov
mov
stos
cmc
adc
enter
nop
jnp
fdivrs
mov
xor
scas
cmp
ss
icebp
xchg
out
cld
repz
mov
loop
pop
in
xchg
mov
aas
in
bound
ss
dec
frstor
stos
pop
mov
das
push
dec
clc
es
xchg
push
and
mov
call
xor
popf
mov
cmpsl
stos
push
mov
mov
mov
cmp
stos
pop
in
mov
repnz
adc
cs
lret
jecxz
popa
loopne
stos
mov
jno
hlt
mov
mov
cmpsl
dec
xchg
mov
mov
or
stc
cmp
pusha
mov
jle
subb
inc
dec
mov
pop
pop
lock
add
cmpsl
cwtl
dec
cwtl
das
push
cld
enter
mov
jecxz
mov
mov
std
icebp
cli
std
call
subb
lods
cmc
mov
adc
mov
imul
sub
test
inc
sbb
ds
sti
cli
outsl
pop
mov
add
cmc
and
add
cmpsl
lods
pop
push
int
imul
xchg
repz
push
mov
or
enter
hlt
ficomps
push
insb
stos
insb
dec
pop
dec
out
and
jmp
cmp
pop
imul
mov
adc
cmp
mov
dec
insl
sub
loop
cmp
pop
inc
mov
js
pop
xor
aad
popf
mov
push
cmp
cli
and
cmp
in
shlb
mov
jp
push
push
xor
sub
mov
mov
sub
xor
or
push
jae
push
xchg
sbb
pop
mov
sbb
mov
push
sbb
xchg
pop
inc
adcl
hlt
sbb
out
loop
test
adc
enter
or
insl
pop
cmc
push
cs
adcb
pop
stos
inc
xor
ja
hlt
mov
arpl
mov
dec
or
fwait
clc
xor
cmp
inc
lds
outsb
subl
xchg
dec
add
ret
scas
fimuls
or
push
rcrb
scas
and
sbb
pop
mov
out
cmp
jl
and
cmp
xor
sub
cmpsl
dec
fcmovnbe
xlat
out
inc
add
sbb
test
inc
or
aam
mov
incl
jl
nop
shlb
addr16
mov
in
cmp
outsl
test
jno
inc
adc
xor
dec
mov
mov
aaa
shlb
inc
inc
sub
mov
add
clc
sub
cmpl
test
pop
fs
mov
shll
jbe
test
xor
mov
and
lret
repz
mov
insl
dec
jne
cmc
lock
outsb
cltd
lock
inc
push
jb
and
adc
lea
mov
scas
ja
psubw
out
aaa
cmp
les
jb
es
xor
jge
cld
inc
pop
fs
push
clc
imul
out
dec
push
xor
cli
pop
test
in
je
inc
or
cld
add
sbb
push
fnstcw
insl
and
pop
inc
add
mov
cmp
jns
cmc
fstl
xchg
cmp
inc
pop
sub
mov
aas
mov
subb
arpl
adc
mov
pop
jl
sbb
fnstenv
les
aaa
pop
outsb
mov
les
add
bound
pushl
xor
sbbb
inc
jo
push
mov
shrb
arpl
push
mov
enter
ficompl
mov
out
stc
xorl
enter
lock
push
movl
jns
mov
std
and
inc
push
dec
pop
cwtl
xchg
cmpsb
insl
inc
imul
adc
je
scas
xrelease
andb
and
mov
sbb
rorb
fcoml
movl
out
or
cld
lcall
adc
dec
ret
xchg
sub
es
cltd
dec
aaa
sbb
xchg
sahf
jl
cmp
xlat
or
add
repnz
mov
pop
pop
inc
out
and
mov
mov
addr16
loop
fnstsw
mov
jb
enter
jne
das
stc
hlt
ret
rclb
pushf
xchg
mov
aaa
push
mov
adc
subb
xchg
addr16
iret
jns
mov
out
xor
ret
cwtl
sbb
call
sbb
inc
sub
adc
lods
mov
add
aas
sub
ds
cmp
mov
jl
insb
shlb
mov
or
push
hlt
dec
adcl
xor
push
mov
pushl
out
xor
sti
stos
mov
mov
mov
test
mov
js
cmpsb
pop
aam
dec
xor
lock
mov
add
movsb
mov
cli
fildl
adc
in
sub
mov
jns
inc
or
jecxz
cmpps
adc
xchg
cmp
jb
mov
das
xchg
in
sub
jb
sbb
lea
leave
pop
mov
popa
xchg
sub
stc
sbb
jbe
rcrl
movsl
inc
add
fs
aam
add
sub
dec
xchg
ret
fldenv
or
xchg
mov
jae
insb
addb
mov
or
push
mov
adc
add
decb
mov
fiadds
add
mov
push
lcall
jge
and
lods
mov
repz
jg
ds
in
rcrl
xchg
insb
cwtl
xchg
xlat
repnz
ja
sbb
jp
scas
add
hlt
add
xor
push
ret
mov
or
push
out
std
jp
std
mov
imul
and
int3
pop
mov
mov
insb
lds
roll
cmp
adc
fstl
lahf
in
js
dec
mov
mov
jle
adc
mov
dec
jmp
xor
add
nop
mov
xchg
mov
cmp
dec
push
jl
pop
in
fistl
gs
dec
mov
imul
xchg
ficoms
jmp
jecxz
push
in
lea
icebp
aad
data16
or
jge
push
push
lods
aad
stos
and
pop
mov
xchg
pop
shl
sbb
das
das
add
lahf
orl
out
sahf
sbb
movsl
sbb
les
fidivrs
xor
sbb
jae
add
sahf
stos
inc
or
scas
or
hlt
sbb
dec
mov
pop
push
push
fbstp
sbb
xchg
adc
mov
cmp
lods
fwait
jb
in
fisttps
fimull
jns
jae
sbb
dec
lock
xorb
test
or
push
jmp
and
scas
xchg
jo
or
lahf
test
stos
pop
pop
loope
subb
push
psllw
fs
fwait
out
rcll
aam
cli
insb
subl
and
movsl
mov
xchg
sbb
or
xor
loop
pop
call
push
cltd
inc
cwtl
xchg
cmp
jnp
cmp
addr16
pop
adc
jg
jb
sub
scas
xchg
test
mov
js
aas
out
sbb
pop
cmpsb
les
push
lret
jp
pop
pop
scas
imul
cltd
and
lret
punpcklwd
nop
inc
inc
scas
rep
push
sub
lods
sub
cmp
push
aam
imul
xchg
stc
enter
lea
mov
popa
inc
hlt
pop
adc
sbb
sbb
inc
std
inc
je
jbe
aam
mov
adc
dec
lods
cld
test
push
jo
inc
je
jp
sub
loop
mov
rorl
pop
pop
or
jns
jl
stos
dec
jno
dec
and
cmpsl
js
cwtl
adcb
out
std
test
loop
and
mov
cmp
mov
movl
nop
fcmove
stos
jb
es
inc
stc
mov
ja
icebp
jns
cmp
jnp
sub
mov
fimuls
pop
enter
mov
shlb
mov
fisubrl
xchg
or
cmp
jge
mov
jmp
das
clc
mov
mov
adc
addr16
and
outsb
push
adc
repnz
std
pusha
das
add
or
xchg
xor
jp
xorb
or
adc
jp
lret
inc
lock
repz
push
jns
scas
xorl
cmc
iret
scas
in
dec
push
jmp
sbb
outsb
or
push
lods
mov
sti
je
mov
notl
push
xor
pop
sbb
cwtl
mov
and
adc
adc
daa
mov
xchg
sbb
xor
push
mov
idivl
jmp
fiaddl
loopne
gs
mov
stc
push
imul
add
cmovb
test
iret
repnz
aad
pop
sbb
xchg
add
mov
or
sarl
sbb
sbb
xchg
jo
jmp
jno
loope
xchg
pop
jnp
push
and
xchg
imulb
in
int
outsb
mov
mov
inc
or
and
and
jns
pop
xchg
mov
je
arpl
adc
jb
pop
mov
lahf
sahf
mov
xchg
fisubl
sbb
mov
mov
xlat
sub
jp
and
ds
cltd
push
adc
cmpsb
jb
inc
cmp
test
cld
mov
movsl
sbb
lods
int3
gs
imul
testb
sbb
negl
xor
jge
in
push
and
sub
fstpl
mov
int
adc
push
pop
adc
sbb
adc
dec
pop
inc
sub
cmp
pop
pop
leave
pusha
insl
data16
outsl
xchg
pop
xchg
stc
outsb
out
test
push
int
push
es
dec
cmp
popf
jmp
push
in
loop
and
inc
ljmp
xchg
fcomip
adc
inc
jne
in
sub
lds
xchg
lds
cmp
int
fwait
sbb
iret
packsswb
std
rclb
stc
es
xor
cmc
cmc
mov
or
das
test
movsb
out
fstps
out
daa
les
shll
loope
fistpll
pop
dec
xchg
hlt
mov
mov
cli
xchg
aas
dec
dec
mov
mov
testl
xor
inc
mov
sbb
test
pushw
and
outsl
add
int
sbb
xor
adc
xchg
cmpsl
sbb
or
xlat
and
cld
cmova
jo
push
scas
dec
fidivs
xchg
xchg
lcall
ret
or
lea
or
pop
aas
jg
enter
cmpsb
test
hlt
movsl
mov
clc
or
lcall
test
xor
imul
fists
push
inc
sbb
mov
mov
loopne
int3
xor
subl
and
ret
ljmp
sub
fs
mov
aad
cli
scas
cmp
push
test
aad
xchg
sbb
mov
mov
lods
jno
loop
mov
pop
mov
xchg
mov
incl
into
dec
push
adc
mov
sbb
das
cltd
and
popf
or
cmp
daa
movsl
sbb
fcmovbe
gs
test
mov
loop
sarl
dec
add
es
pop
je
scas
jmp
dec
add
push
test
call
sub
jecxz
cmp
push
in
mov
outsl
jnp
push
int
cwtl
xchg
push
leave
and
in
xchg
insb
jecxz
sub
int3
arpl
inc
pop
inc
repz
fiaddl
pop
cltd
jmp
clc
pop
out
push
ret
ds
pop
lahf
pushf
pushf
loope
out
jb
hlt
arpl
mov
jne
inc
lea
cmc
mov
lahf
mov
mov
jmp
dec
pop
cmpsl
cmp
xor
ret
int3
fmuls
int
and
loopne
in
ltr
xor
int3
push
pop
aam
mov
adc
jnp
fsubs
inc
mov
jl
movsb
dec
lods
pop
lea
pop
add
jae
push
leave
insl
fs
pushf
lods
cmpsl
ljmp
icebp
loope
call
pushf
stos
mov
fs
mov
mov
lds
mov
jg
xor
lret
and
popf
loopne
and
sub
ret
mov
push
cltd
pop
lcall
or
push
push
adc
hlt
cmp
test
ss
cmp
mov
imul
fmulp
xlat
aas
shlb
jl
push
jae
sub
sub
fnsave
out
aas
cltd
idivb
fildl
push
test
es
cli
sbb
mov
cmp
adc
movsl
call
mov
adc
cld
or
push
jnp
bound
out
insl
mov
add
mov
cltd
mov
cmc
mov
setae
xor
test
pop
cs
aaa
sbb
mov
aad
cmp
dec
popa
xor
and
jae
js
testl
int3
lcall
lsl
mov
clc
jge
push
inc
and
or
loopne
push
add
es
loope
add
repz
leave
in
mov
sbb
cmpsl
push
jmp
and
aaa
mov
jl
int
ss
mov
or
test
les
mov
jmp
push
xchg
nop
test
dec
sub
inc
or
mov
fidivrs
jno
jae
into
outsb
insb
mov
insb
sbb
jns
xchg
mov
cmp
or
fwait
cli
jns
not
cmp
sti
cmc
es
adc
or
fisubrs
pop
mov
lds
in
insl
mov
mov
test
popf
xorl
out
sbb
es
gs
xchg
xor
push
nop
xlat
das
cmp
aas
inc
hlt
out
out
jecxz
fnstcw
in
inc
push
adc
push
sub
push
xor
movsl
adc
cwtl
xchg
lea
in
insb
jg
adc
lods
and
inc
fldl
sub
fimull
inc
mov
jp
lahf
xor
fnstenv
fwait
mov
pop
pop
jns
xor
repz
adc
lock
xchg
xchg
andb
jnp
inc
mov
pop
jmp
jp
add
mov
out
push
jmp
mov
in
push
sub
push
aas
jmp
ret
cmc
movb
sahf
sbb
pop
xor
sub
fsubrs
or
xor
mov
mov
cmp
jnp
mov
aam
je
movsl
sahf
scas
add
jns
popf
icebp
dec
pushf
or
jb
jbe
xchg
inc
decb
ss
jnp
outsl
jp
and
cmc
cli
out
out
adc
iret
sub
sub
mov
fwait
gs
sbb
push
mov
mov
pop
pop
gs
pop
inc
pop
lock
add
aas
xchg
sti
scas
add
jne
sub
push
jle
or
adc
adc
mov
fwait
bound
mov
in
cmp
push
adc
ljmp
cmc
loop
and
mov
ja,pt
xlat
icebp
data16
ss
xchg
and
or
fbld
stos
js
or
pop
mov
cli
jge
push
adc
lock
push
jb
imul
jb
push
dec
xor
cli
mov
scas
scas
push
scas
push
insl
in
js
mov
into
int
xor
lods
mov
std
nop
and
cwtl
or
in
mov
jb
nop
pop
jge
scas
enter
lahf
cmp
mov
out
inc
push
mov
out
push
mov
sub
sbb
fisubrs
xchg
xor
ljmp
lea
add
fisttpl
ret
and
dec
lods
les
add
mov
fistpl
mov
pop
ss
add
fsubrs
inc
mov
cltd
mov
mov
sub
in
orb
fiaddl
xchg
lgs
xlat
fwait
mov
aaa
out
jnp
cwtl
mov
mov
lahf
jl
popa
mov
test
sbb
push
sub
jae
sarb
loope
fwait
sub
mov
in
out
cmp
lcall
xor
mov
xchg
pop
add
lds
fisubrl
sbb
ret
lds
popf
ljmp
jne
mov
std
mov
inc
push
push
add
mov
rclb
mov
or
mov
mov
adcb
aam
popa
sub
dec
mov
ret
imul
inc
push
and
or
push
sub
push
cmpsb
sti
rorb
in
inc
pop
lods
ret
and
mov
call
out
insl
cmp
mov
jae
push
mov
stos
xlat
add
ret
jle
fs
mov
xchg
cmpsl
xchg
ret
enter
cs
push
in
mov
mov
pushf
lahf
mov
ds
lods
outsb
pop
xchg
cmp
lods
jp
fdivrl
sbb
xchg
dec
outsl
sub
popf
push
in
or
pop
inc
xchg
subb
repz
icebp
lcall
je
lods
test
sarl
inc
mov
lds
pop
sub
imul
in
push
insl
clc
repz
je
push
mov
dec
sub
add
add
push
xor
jne
int3
mov
mov
mov
mov
sbb
inc
sbb
xor
sub
xchg
adc
notb
cmp
rorl
imul
scas
aad
or
jecxz
cwtl
pop
mov
xchg
pushf
imul
pusha
push
inc
ror
xor
orb
push
popa
xor
mov
and
je
xchg
fs
and
loope
sbb
push
jns
jae
leave
push
ss
fnstsw
addr16
jg
stc
int
pop
lret
movsl
mov
aam
xor
dec
nop
pushf
adc
mov
das
sti
add
dec
shl
in
jmp
test
pop
dec
out
or
jno
xchg
roll
mov
add
jb
loope
mov
lcall
adc
jecxz
rol
ljmp
adc
lea
orb
mov
pop
icebp
mov
or
sti
icebp
push
push
dec
jno
inc
add
sbb
cmp
mov
cmp
xor
xchg
xor
scas
xlat
mov
mov
test
cmp
mov
push
das
cmc
xor
test
subl
mov
jbe
ficoms
decb
aad
mov
adc
lret
mov
inc
cwtl
xlat
pusha
xor
popf
jmp
dec
jl
cli
mov
cltd
jmp
sti
sub
push
gs
test
jno
mov
xor
dec
push
mov
dec
xchg
movsl
pop
mov
das
ljmp
push
push
adc
mov
lods
push
jb
rolb
imul
stos
sbb
leave
jnp
fbld
mov
xchg
xchg
xor
loop
and
je
and
jae
fnsave
push
subb
js
jb
cmp
negb
popf
xor
add
jle
add
inc
fldcw
jo
into
sub
call
arpl
into
add
sbb
loopne
adc
out
xchg
dec
pop
repz
inc
aaa
xchg
inc
div
jg
outsb
lods
push
xchg
push
iret
and
mov
pop
jns
jns
add
sub
sahf
dec
push
mov
mov
jmp
inc
popa
dec
pop
sub
nop
lock
ljmp
xlat
mov
push
pop
xor
in
aas
push
xchg
pop
add
cli
nop
inc
repnz
mov
in
add
aaa
and
sub
cmp
xor
aam
popf
or
outsb
xchg
fs
add
das
jb
and
cltd
ljmp
lock
lea
scas
rol
push
in
mov
jo
mov
cmp
cmp
decb
push
mov
xchg
jle
scas
loope
sub
mov
fcompl
dec
call
add
ss
enter
adc
data16
icebp
jns
push
and
adc
or
mov
sbb
and
pop
mov
pop
adc
fisttpll
int3
clc
mov
inc
pusha
mov
leave
mov
sbb
aad
xchg
add
dec
mov
mov
sti
dec
lret
repnz
outsb
int
mov
cmp
xor
push
jnp
into
cmpl
mov
pop
xchg
icebp
jmp
daa
mov
fnstenv
icebp
pop
out
testl
es
cltd
sbb
insb
ja
imul
lcall
mov
xchg
scas
insw
push
lods
xor
stc
insb
in
fbld
push
dec
or
pop
push
pushf
mov
adc
popf
mov
bound
bound
in
rcrb
inc
mov
mov
xor
fabs
adc
daa
rcr
dec
ljmp
in
cmp
cmp
mov
jge
dec
xchg
or
ret
adc
cmc
mov
sub
test
xchg
dec
outsb
loop
popf
stos
sub
push
lahf
mov
loop
andb
addl
lret
outsb
insb
test
xlat
outsl
outsb
jg
xchg
mov
lock
mov
clc
daa
inc
inc
out
in
ds
sbb
mov
xchg
lds
jno
xor
xchg
dec
jecxz
sbb
xor
sub
leave
in
xor
pop
push
pop
into
adc
or
test
imul
add
push
mov
sub
pop
jmp
xchg
sub
cld
push
xor
mov
pop
into
cmp
sub
cmpl
push
jne
lahf
es
pop
cs
lret
arpl
add
bound
cmp
sub
push
and
and
adc
fcmovnu
cmp
ljmp
and
iret
fwait
cs
add
mov
pop
pop
scas
int
sbb
gs
incb
and
sub
add
pop
rolb
movsl
movsl
xor
daa
cmp
in
sbb
insb
dec
xorb
js
pop
add
pop
mov
push
test
popa
mov
outsl
lods
mov
aaa
shlb
ret
inc
mov
pop
push
jp
jbe
es
loope
cltd
js
notb
mov
sbb
fcmovbe
bnd
dec
pop
push
aam
mov
xchg
enter
mov
dec
mov
orb
xor
dec
xchg
xor
aaa
stos
imul
test
andb
jg
and
xor
mov
gs
push
fwait
js
aam
add
sbb
nop
cmp
arpl
xorl
sbb
aad
out
and
pop
hlt
rclb
push
lret
fdivl
xchg
add
mov
adc
pop
xchg
stos
push
sahf
sub
lods
jbe
scas
jns
scas
aaa
pusha
out
cmpsb
int3
mov
add
pop
inc
cmp
into
fists
out
pop
insb
push
ds
mov
and
inc
jg
and
cmp
and
es
insb
jb
aas
mov
shlb
in
insb
das
xchg
aad
xlat
cmp
sub
mov
xor
in
cld
dec
and
loop
mov
pop
inc
xchg
mov
push
in
jg
dec
daa
es
add
mov
mov
sub
adc
xor
push
jb
sbb
sub
dec
ja
gs
mov
xor
jae
lods
add
jg
xchg
out
out
adc
adcl
lcall
and
push
lret
hlt
in
xor
adc
cld
xor
adc
jne
je
or
pop
pop
cltd
arpl
push
pop
idiv
divw
test
aaa
mov
lods
scas
push
mov
clc
jmp
in
enter
inc
sbb
das
or
decb
mov
mov
out
mov
mov
ja
ljmp
je
in
jge
adc
mov
adc
mov
leave
sbb
xchg
jl
cli
and
iret
popf
andb
add
inc
jnp
inc
add
sub
pop
fildl
movsb
cmpsb
hlt
leave
sti
not
test
fidivs
push
shrl
int3
in
or
mov
adc
xchg
fs
jg
mov
push
sarb
fmull
aaa
rcrl
stos
fcomps
mov
test
incl
test
jae
ds
push
jns
jne
insl
jbe
or
cmp
cli
xchg
mov
les
fldt
stc
inc
fsubs
fwait
mov
xchg
xor
scas
or
or
test
imul
mov
repz
xor
loope
stc
add
cmp
das
outsl
in
enter
adc
mov
sahf
enter
aaa
and
lods
mov
add
inc
adc
arpl
mov
fcompl
mov
xor
dec
jns
out
and
cmp
jnp
aad
sbb
icebp
xchg
in
addr16
imul
push
jecxz
sub
mov
andl
dec
adc
das
pop
lea
sbb
leave
xor
mov
movsb
fstl
popa
imul
cs
jecxz
scas
add
insl
inc
lret
pop
pop
cltd
jae
inc
arpl
imul
mov
inc
mov
xchg
xchg
adc
test
out
jmp
dec
add
rcrb
dec
inc
dec
fistps
ret
int
bound
fiaddl
mov
out
sbb
enter
xchg
fsubrl
data16
outsl
push
pop
outsb
loopne
shrb
xchg
add
js
jp
or
sub
cmp
mov
cwtl
mov
jmp
mov
jnp
ja
sub
add
addr16
jg
sti
and
mov
xlat
lret
jnp
push
shll
mov
lock
xor
std
jo
sahf
leave
andb
stos
mov
clc
push
sub
mov
imul
call
add
loope
fisubs
rorb
mov
ret
push
fs
adc
sar
sub
leave
mov
inc
ja
cmp
lds
adc
sub
ss
insb
add
test
lds
mulb
dec
mov
enter
bound
dec
fnstenv
xchg
jle
mov
in
xor
fiaddl
sub
int3
jmp
addr16
cmp
mov
mov
mov
dec
mov
dec
insl
sub
lret
mov
sahf
push
enter
rcr
dec
ret
incl
jb
jno
fldenv
in
xorl
out
xchg
lcall
push
sub
test
jp
cmp
sbb
into
sbb
cwtl
xchg
stos
cmp
xchg
pop
mov
decb
mov
xor
mov
xchg
mov
mov
jne
popf
xor
aam
rorb
add
xchg
xchg
popa
aam
dec
out
mov
call
lcall
xor
cmp
push
hlt
mov
fisubrl
das
lcall
xchg
pop
popf
leave
mov
sub
test
or
pop
sub
call
stos
and
pop
xor
enter
shrl
pop
ftst
push
cmpl
incb
aas
xchg
inc
hlt
dec
mov
imul
mov
fwait
dec
out
pop
mov
into
adc
mov
add
cmp
cmp
mov
loop
and
outsl
push
fcmovnu
out
lods
fbstp
nop
call
dec
push
pop
dec
mov
sub
sub
je
fisubrs
movl
fsubl
pop
sahf
sbb
mov
inc
push
arpl
mov
or
fistps
mov
out
int3
pmulhw
insb
xchg
or
mov
dec
xor
test
aad
fdivrs
sbb
pop
cli
in
sub
cli
mov
imul
xchg
xor
in
sub
push
out
pop
test
add
movsb
push
insl
push
xor
xchg
jle
cli
mov
adc
stc
add
jecxz
xor
inc
mov
clc
mov
mov
mov
xchg
test
pop
cmp
test
pop
xchg
cs
je
xor
sub
or
mov
les
fistpll
mov
and
and
push
aaa
sbb
test
test
cld
sbb
incb
mov
insb
xor
xchg
cmp
insl
hlt
int
cmp
icebp
lea
aas
in
scas
jp
cmp
orl
mov
inc
push
dec
push
xchg
pushf
imul
int
incb
cmp
clc
sub
stos
pop
fstps
cmp
lds
insb
mov
mov
jno
sub
repnz
out
add
cmp
xlat
add
scas
lcall
mov
testb
adc
jp
xor
cmpsl
call
into
jge
cmp
push
mov
sti
ret
movsl
int
sub
or
test
xor
sbb
adc
xchg
sub
add
inc
dec
lods
pop
pop
fndisi(8087
arpl
xchg
sub
jnp
inc
xchg
cmp
js
cld
movsl
repz
sub
or
sub
in
mov
dec
adc
out
adc
add
xchg
gs
cmpsb
xchg
inc
xchg
mov
dec
movsb
sbb
or
dec
mov
mull
sahf
dec
pop
push
jg
js
dec
jb
xchg
aaa
push
bound
mov
imul
inc
popa
pop
xchg
jle
out
jns
cmp
or
addb
dec
inc
sbb
es
cmp
jl
sub
mov
mov
mov
push
cld
pop
sbb
and
xchg
loop
add
xor
negb
adc
imul
inc
inc
mov
je
push
dec
fiaddl
or
lret
mov
xor
inc
add
xchg
jp
and
push
sub
sbb
rolb
cmp
rclb
inc
push
adc
mov
xchg
data16
dec
jl
ja
push
lds
sti
jl
aaa
test
insl
pop
pop
pushf
out
aaa
pop
cs
test
and
push
repnz
es
int3
insb
jnp
cmp
jbe
scas
sub
and
lcall
adc
in
das
aam
int
pop
enter
movsl
jae
clc
mov
dec
sbb
data16
into
push
enter
dec
adc
jmp
jbe
push
adc
loop
stos
push
jbe
fs
sahf
inc
mov
pop
negl
lock
mov
add
xchg
push
lods
fidivl
outsb
pop
aad
imul
sbb
repnz
pop
dec
aad
test
pop
test
dec
in
popa
xor
and
sub
mov
mov
push
dec
rcrl
mov
push
jg
sub
cwtl
pop
out
addb
push
mov
cmp
push
jbe
enter
movsl
jp
rcrb
les
lea
adc
mov
lods
in
adc
incl
js
sub
lret
or
insl
add
daa
ror
cmp
push
pop
mov
lock
xor
xchg
lret
pop
or
cwtl
dec
and
aas
xchg
push
cmpsb
or
imulb
and
sub
lods
aam
mov
out
out
sahf
add
ljmp
mov
mov
mov
in
mov
das
je
ljmp
in
pushf
inc
jl
nop
sbb
enter
xor
or
add
aaa
popf
cmp
mov
cmp
xchg
xchg
xchg
les
andb
lret
ficompl
in
insb
adc
psraw
mov
or
data16
sahf
mov
or
popf
or
insl
mov
mov
fldt
xchg
lods
mov
divb
lock
pop
dec
push
ds
cld
mov
mov
pop
shrl
orl
repnz
add
cltd
add
push
outsb
jb
sti
dec
lret
ja
mov
sub
pop
jmp
cwtl
xorl
rolb
adc
add
fildll
mov
inc
sub
cmpl
test
add
jg
mov
orl
and
data16
mov
inc
sub
rcrb
lock
and
or
call
dec
xchg
imul
iret
push
subb
jmp
stc
addr16
rcrb
and
inc
pushf
push
cmpb
int3
popf
mov
sahf
inc
into
cld
and
aam
hlt
clc
push
xchg
je
xor
insb
sbb
inc
bound
pop
xchg
mov
and
add
mov
jne
pop
xchg
inc
mov
mov
loopne
stos
enter
mov
jp
pmaddwd
rcrb
or
push
out
or
mov
psubb
pop
pop
addr16
add
xor
sub
push
mov
xchg
mov
icebp
mov
testb
sbb
cltd
sbb
or
mov
clc
mov
mov
cwtl
andb
mov
inc
inc
enter
out
push
inc
stos
pop
jmp
jl
inc
and
cmp
dec
xchg
mov
jle
arpl
aaa
sub
out
cmpsb
scas
lds
dec
and
jl
imulb
and
arpl
mov
ja
ret
add
xor
fbld
sbb
int3
repz
xchg
je
jle
adc
out
lods
cmpsl
loop
jo
sahf
ficompl
sub
fldcw
bound
inc
stc
fwait
aaa
loope
movl
js
les
push
aas
cmp
pop
jbe
loopne
xor
push
xor
jb
dec
jno
lds
decb
cmpsl
or
mov
iret
cmp
jo
jne
imulb
or
aad
sub
pusha
addr16
js
daa
and
sbb
jp
sar
cltd
sar
ss
pop
xchg
or
dec
mov
fildl
cmp
push
jae
cltd
sub
cmpsl
addl
jbe
rcrl
sahf
mov
xor
jne
mov
loop
test
fldt
out
mov
stos
jb
sub
or
mov
icebp
xchg
add
dec
stc
in
insl
mov
dec
std
clc
and
test
add
xor
sbb
pop
lods
or
stos
mov
scas
and
les
mov
lret
mov
movsb
xor
jae
jl
rol
push
bound
out
out
cmp
ret
xor
ret
xchg
add
inc
addb
sbb
leave
pop
pop
fdivrl
jecxz
inc
dec
mov
inc
and
movsb
fimull
popa
add
xchg
mov
in
ja
sub
das
sbb
xchg
push
adc
pop
fwait
pop
sbb
or
sti
aaa
outsl
pop
add
int
fcmovbe
pop
das
nop
jmp
arpl
push
xor
jmp
mov
iret
mov
xlat
into
and
aas
dec
jle
cli
imul
in
or
rcrl
xorb
adc
sbb
adc
inc
jecxz
lahf
leave
adc
loopne
fadd
test
addl
inc
dec
fstl
mov
jo
ret
mov
in
movsb
sarb
inc
lds
repz
jmp
pop
lods
cmp
adc
mov
cltd
mov
mov
xor
mov
lahf
lods
fs
ja
popf
and
dec
cltd
jbe
test
pop
insl
sub
mov
xchg
mov
scas
xchg
mov
test
or
cmp
jp
js
jle
mov
outsb
sub
mov
push
fwait
jmp
pop
or
ret
xchg
nop
cmc
lret
je
dec
leave
iret
cmp
add
shl
out
inc
aaa
mov
pop
mov
jb
into
imul
cltd
or
pop
inc
loopne
cmp
push
lahf
push
pop
cmp
xor
inc
js
push
mov
leave
scas
ffree
addr16
addps
or
cwtl
mov
dec
xchg
lret
xchg
xlat
push
mov
movsb
push
aad
in
cmp
sub
aam
cmp
pusha
cmc
mov
jl
xor
jbe
inc
mov
dec
mov
pop
je
and
xchg
mov
cs
xor
xlat
fisubrs
push
jmp
pop
xlat
push
enter
stos
lret
and
es
lret
xchg
pop
clc
js
cmc
xchg
push
jmp
jmp
add
mov
fcoms
mov
jmp
clc
cmpl
fstp
adc
xor
pop
xchg
pop
sti
push
jmp
clc
cmpl
mov
lret
imul
push
mov
cmc
clc
adc
jecxz
and
rorl
jg
mov
add
insb
inc
jg
cmp
or
dec
into
mov
pusha
leave
pop
mov
fisttpl
jmp
lods
ds
inc
jecxz
sbb
cmp
insb
and
arpl
sub
movsl
insl
inc
dec
sub
stos
outsl
and
mov
lods
mov
lahf
add
mov
xchg
leave
mov
mov
xchg
insl
stc
movsb
pusha
jmp
xor
dec
mov
push
sbbl
or
lret
inc
sbb
cmp
mov
sbb
loop
inc
and
inc
insl
mov
inc
das
jbe
in
rcrw
jnp
xor
sub
gs
or
push
enter
mov
xor
dec
shlb
frstor
xchg
aad
lcall
fdiv
jns
jmp
iret
mov
dec
js
sbb
aad
dec
ja
sub
gs
fnsave
fnstcw
int
enterw
cmp
je
and
xchg
xchg
push
lock
dec
cmp
outsl
cmc
push
test
test
iret
scas
pop
fldln2
je
dec
inc
in
mov
cmpsl
xchg
mov
jg
push
clc
xchg
iret
add
loope
dec
loopne
cmp
shlb
cld
add
mov
movb
and
sbb
mov
js
xchg
xchg
mov
xor
fcmovne
divb
in
pop
in
xchg
jnp
sub
jbe
cmp
xchg
out
adc
in
push
jg
dec
rorb
loopne
xor
loop
mov
aad
cmp
sarl
mov
push
or
or
mov
mov
mov
and
test
push
ja
xor
or
mov
cmpsl
dec
jae
loope
fs
xchg
add
lahf
push
leave
cmp
imul
lock
sub
jmp
fstpl
dec
andl
test
mull
mov
mov
mov
ljmp
jnp
lods
bound
mov
bound
and
cltd
sbb
dec
cmp
mov
mov
jnp
ficompl
faddl
pushf
dec
es
or
inc
lock
fcompl
sbb
xchg
ret
movsb
and
dec
and
stos
add
fiaddl
and
adc
mov
gs
popa
adc
sub
rcrb
mov
hlt
jmp
jno,pn
xchg
push
loopne
sub
xchg
mov
imul
lahf
mov
and
pop
ja
loopne
adcb
jns
scas
std
das
rclb
je
pop
lret
lods
out
jmp
stos
cmp
push
pop
jae
ds
movsb
mov
or
clc
mov
and
cmpb
jmp
jae
mov
test
push
sbbb
outsb
pop
push
js
jmp
lds
push
sbb
clc
aaa
dec
sarl
lea
or
lea
jle
arpl
jmp
xchg
cmp
in
and
cld
cmova
jp
jne
orl
data16
fwait
orl
iret
enter
push
mov
mov
or
sarb
pop
xor
and
sbb
fiaddl
sbb
loopne
lea
fidivrl
adc
pop
int3
sbbl
or
fisttpl
test
data16
cmpb
or
movsb
pop
jmp
jae
mov
or
jmp
fdivs
in
or
out
call
mov
rcrl
insb
jl
mov
lret
addr16
loope
std
enter
pop
stos
xor
mov
cltd
cmpl
outsl
push
cmp
xorl
outsb
sbb
mov
mov
mov
dec
mov
scas
sbbb
je
dec
out
mov
fiaddl
dec
data16
clc
leave
in
int3
or
les
out
and
sbb
gs
test
arpl
cmp
or
sarb
outsl
jne
add
and
sub
xchg
icebp
scas
sbb
out
pop
int3
cmp
or
xchg
aas
faddl
mov
mov
jmp
jns
aaa
or
xchg
push
jg
into
or
out
aad
sub
testl
data16
jbe
je
jmp
add
adc
daa
cmp
enter
mov
outsb
mov
in
scas
in
xchg
xchg
add
sub
test
std
pop
lret
aam
push
and
sbb
xchg
int3
xchg
mov
adc
pusha
cmp
push
or
fs
xorb
aam
pop
cmc
in
and
xor
jecxz
cld
push
das
ds
dec
dec
pop
out
and
imulb
sub
int3
xchg
mov
sub
and
pop
push
or
fs
xorb
aam
adc
into
cmp
inc
mov
addr16
xchg
cld
and
xchg
jg
lahf
cli
sbb
insb
dec
cmp
out
into
mov
lods
adc
test
cmp
jecxz
pop
out
mov
adcb
aam
fwait
dec
hlt
rorl
mov
fiadds
shrl
add
or
subl
out
shl
pop
xchg
sub
or
sub
into
xor
jp
xchg
add
cmp
in
mov
mov
dec
xor
fbstp
add
ja
jl
add
cmp
and
add
xchg
orl
in
fiaddl
call
sbb
repz
jno
test
in
insl
add
xchg
jns
or
push
cmp
mov
adc
test
lock
leave
jno
lods
subl
mov
das
lret
push
jne
arpl
and
int
push
jl
xor
sub
pop
lret
fildl
add
jmp
loope
scas
rep
ja
mov
adc
push
cmp
nop
mov
sub
icebp
cmpsl
jle
adc
jns
orb
test
inc
xor
insb
push
dec
inc
mov
pop
in
sbb
sbb
out
out
mov
inc
sbb
stc
cmpsl
out
call
cmp
sar
mov
and
push
pop
cmp
cmovl
int
mov
push
jnp
out
cwtl
out
pop
sbb
dec
mov
les
xchg
out
imul
or
xchg
push
pop
push
cli
push
inc
or
adcb
mov
loop
mov
shl
outsb
ljmp
std
test
fdivr
cmc
cltd
xlat
lcall
adc
dec
jp
sbb
inc
mov
jge
mov
inc
lret
int
loopne
shr
inc
repnz
ds
jns
hlt
cs
test
in
jmp
xchg
xor
and
gs
push
dec
cltd
pushf
cmpsb
jge
packssdw
ror
sub
add
aad
orb
jne
mov
mulb
xchg
pop
pop
push
jb
clc
fisubs
cmp
add
cmp
mov
push
cmp
fs
cmc
fists
inc
lret
sub
in
test
js
jle
mov
or
push
sbb
cmp
xor
call
adc
xor
fstl
fdivs
ret
push
sbb
cs
mov
cmp
push
pop
inc
testl
divl
mov
adc
jno
shlb
hlt
cmpsb
add
xor
out
push
jno
xor
pop
lods
aas
ljmp
jl
into
push
pop
test
mov
les
aam
and
out
adc
add
andb
sub
mov
fnstenv
cmp
scas
mov
push
mov
jmp
xchg
xor
enter
sbb
cmpsb
jg
jge
xor
push
inc
int3
wbinvd
stos
mov
jne
fiadds
push
pop
call
mov
sub
test
dec
adc
push
or
pop
mov
inc
jo
dec
push
stos
xor
rcrb
inc
and
cltd
int3
cmpsl
das
xchg
mov
insb
sar
test
mov
mov
int3
ret
mov
stos
and
dec
sbb
std
sub
cltd
lret
daa
mov
enter
inc
fmuls
das
jae
out
cmc
push
and
cmp
jecxz
mov
mov
mov
jp
daa
sub
in
test
inc
rolb
xlat
cmp
inc
call
cli
pop
xchg
leave
es
sub
mov
aam
push
cmp
xor
sbb
cmp
fs
mov
std
xchg
repz
mov
push
mov
xor
loope
cmp
add
int
pop
pop
mov
test
in
imul
stos
mov
fcoml
xchg
or
loope
fxch
fcomps
cltd
adcl
int3
push
lods
hlt
shr
ret
aad
xchg
lret
inc
sbb
test
push
cmp
inc
lahf
andl
jl
fxch
add
jl
imul
cltd
aam
pop
out
es
inc
pop
jne
mov
sbb
cltd
je
inc
shlb
call
bound
jmp
cmpb
das
pop
int
mov
xchg
std
jge
adc
sti
mov
pusha
lea
cmpsb
add
xchg
xchg
pop
cmp
movsb
pop
icebp
sbb
mov
pop
or
xchg
inc
add
mov
dec
sti
xchg
xchg
stc
sbb
sahf
cli
mov
push
cmp
arpl
das
xchg
incb
hlt
mov
xor
data16
cmc
sub
mov
sbb
fwait
xor
jge
mov
and
xor
xorb
xor
or
sbb
dec
pop
adc
inc
icebp
fdivs
sbb
sbb
cmpsl
in
mov
popf
xor
xchg
fsubs
rcll
pop
cmp
out
push
jle
jnp
nop
jnp
ss
mov
lea
inc
lods
loop
aas
ds
movsl
fwait
mov
push
imul
adc
dec
pop
mov
cli
dec
mov
jnp
stos
adc
sbb
xchg
jae
jbe
fwait
push
mov
and
psraw
xor
jnp
stc
in
stos
cwtl
test
add
or
nop
mov
test
mov
and
inc
adc
dec
imul
pop
ret
xchg
imul
mov
mov
dec
mov
jb
xchg
mov
movsb
sbb
repnz
std
das
movd
dec
aaa
test
icebp
lret
sbb
adcl
fistpl
sbb
cmc
fadds
sbb
mov
cld
push
mov
rcrl
sbb
sub
dec
fstpl
mov
sub
lahf
push
mov
jg
popf
cmc
push
cmpl
xchg
imul
subb
cmp
pop
pop
xchg
lods
mov
rorl
lea
sub
mov
daa
or
loop
mov
mov
and
shr
js
scas
and
stc
jo
or
cmp
mov
adc
add
jmp
lret
imul
push
aaa
push
push
lea
mov
inc
ja
xor
mov
adc
inc
dec
push
add
and
std
add
fldl
loope
jbe
rcll
je
adc
imul
sti
outsl
in
scas
xchg
cmpsb
loope
jno
push
ss
adc
into
ds
jmp
xchg
fidivs
mov
sbb
jg
in
push
mov
adc
pusha
das
xchg
fldenv
loop
gs
scas
in
xchg
lock
sub
fistpll
ljmp
dec
inc
in
adc
test
jge
or
and
xchg
lods
fildll
cld
call
dec
aas
js
into
or
das
sub
pop
aad
inc
cltd
pop
rclb
cmp
dec
arpl
jo
call
cmpsb
mov
sbb
aam
jp
pop
inc
pop
dec
jmp
test
pop
or
mov
popl
inc
clc
shr
lock
xchg
mov
push
mov
fidivs
mov
std
jb
jae
mov
mov
imul
int3
xchg
jmp
fmull
cli
mov
inc
push
jge
add
movaps
aad
pop
xchg
test
adc
loopne
sub
cltd
xor
in
xor
pop
push
in
test
pop
or
push
fs
and
lea
xor
or
out
mov
mov
lods
stos
in
test
inc
mov
inc
sbb
out
subl
int
cmp
cmpl
adc
lock
xor
in
insb
inc
sub
jl
xor
pusha
movsl
hlt
test
push
mov
xorl
mov
push
xor
cmp
sbb
xlat
add
jp
int3
adc
not
dec
sub
add
jmp
pop
mov
int
arpl
cmpsb
lods
int3
mov
adc
repz
movsb
aas
loope
out
imul
mov
sbb
lods
test
in
data16
in
push
mov
lret
xchg
bound
adc
ja
cltd
imul
lcall
lods
call
out
mov
lods
test
push
mov
pop
int3
aam
mov
fwait
sub
cltd
scas
inc
xor
sbb
push
mov
push
imul
fdivrl
cli
adc
cld
mov
push
or
addb
rorb
ljmp
mov
test
or
cmpsl
in
pop
xlat
cmp
push
mov
sahf
mov
popa
sub
aaa
jmp
inc
repz
dec
xor
cld
bsr
lret
loopne
mov
and
incl
push
addr16
pop
xor
je
call
push
push
push
gs
pop
push
arpl
mov
arpl
test
popa
xchg
in
xchg
jp
xor
dec
cli
dec
push
mov
call
jge
stos
mov
lahf
inc
inc
js
add
adc
les
xchg
cmp
pop
push
or
decl
sub
mov
push
adc
cltd
daa
cmp
mov
mov
jno
shlb
add
stos
in
rol
add
mov
inc
jns
mov
push
scas
and
popa
js
int3
nop
xor
pop
sti
rorb
pop
sbb
ds
inc
mov
jecxz
and
mov
push
or
adc
lods
fimull
lea
lea
fwait
into
xchg
or
shrl
xchg
int
mov
sbb
jmp
shl
sub
fs
mov
data16
sub
lea
adc
xchg
aad
ficomps
sub
or
dec
xor
xchg
loope
inc
pop
jmp
jo
fstps
std
dec
into
out
mov
jnp
fisubrs
dec
xor
rol
test
push
into
outsb
sbb
and
popl
imul
mov
or
add
adc
fists
pop
add
scas
addr16
daa
xor
out
cwtl
fucomip
xchg
pop
pusha
xchg
mov
imul
mov
outsb
push
data16
jbe
in
hlt
es
test
test
xchg
or
xchg
sti
test
dec
and
add
mov
sub
sbb
sub
xor
call
andb
adc
arpl
shrb
in
adc
mov
mov
mov
or
lea
pop
mov
push
push
mov
add
icebp
stos
and
rcrl
outsl
pop
rcrl
pusha
stc
push
pushf
rcrl
repz
inc
in
imul
test
bnd
mov
pop
lcall
or
xchg
push
lods
fs
ja
dec
push
jle
dec
fisubrs
testb
xorb
jg
sub
js
addr16
sbb
xchg
pop
fadds
aam
mov
jae
das
lods
fdiv
pop
dec
loopne
cmp
int3
or
ss
xor
xor
das
inc
movsb
pop
and
in
push
sub
sub
stc
jbe
lahf
dec
lret
sbb
lock
hlt
jbe
push
xor
mov
jo
sti
incb
mov
and
enter
ret
repnz
fwait
cmp
dec
push
xchg
int3
jno
pop
roll
ret
dec
push
clc
repz
inc
sbb
mov
in
xor
push
push
pop
mov
jno
cmpsb
or
ds
pop
les
push
out
jno
push
sbb
cmpsl
roll
pop
or
lock
cmp
fwait
pop
movsb
pop
xchg
xor
mov
fwait
sbbb
inc
js
lret
mov
das
lods
push
sbb
shlb
ds
inc
mov
ja
scas
das
mov
fs
je
in
jmp
lock
push
xchg
inc
sub
inc
inc
dec
in
push
or
subb
fs
out
lahf
cli
mov
mov
popf
subb
push
call
jb
cli
rcrb
rcl
pushf
and
jle
cmp
push
push
inc
or
adc
dec
push
add
aad
lods
pop
add
adc
push
or
add
enter
hlt
or
repz
sti
fiaddl
sbb
outsb
ljmp
sti
adc
inc
xor
jl
rcrb
outsb
iret
ds
jns
lods
xor
mov
push
mov
inc
jg
add
cmp
and
pop
jnp
filds
call
ds
push
lcall
and
roll
mov
pop
ficompl
pusha
rcrb
push
fcoms
sbb
push
xor
jns
pop
decl
pop
dec
jge
sbb
dec
push
mov
jbe
pop
push
inc
jbe
add
lret
sub
xchg
in
inc
dec
mov
inc
cmc
xor
out
aad
js
sbb
pop
mov
sbb
fsubrl
sub
sub
hlt
add
jb
popa
adc
rolb
add
int
out
jae
fisubs
jp
jno
pop
stos
jbe
xor
shl
add
inc
in
insb
pop
outsl
adc
out
push
loop
xlat
xchg
ror
mov
mov
cvtps2pi
popf
and
adc
hlt
clc
sub
add
loop
jmp
dec
cmp
jns
pop
dec
adc
xor
adc
in
mov
movsb
loope
or
dec
out
mov
in
repz
push
add
jae,pt
lret
pushl
xor
cmp
out
fstl
into
fnstsw
xor
outsb
jnp
das
movsb
incb
pop
adcl
cmp
sub
dec
push
fsubl
cmp
sbb
mov
xchg
xchg
dec
rclb
lret
dec
in
int3
xor
jno
push
mov
shlb
nop
cs
mov
test
sub
sti
int3
cmp
es
rclb
push
push
std
push
dec
inc
fcomps
xor
and
sub
sub
repz
popa
dec
add
insb
pop
xor
pushf
ret
inc
and
inc
mov
loop
nop
mov
repnz
pusha
ret
and
fwait
imulb
je
stos
hlt
mov
jge
into
and
push
push
gs
scas
es
jecxz
dec
xchg
mov
addr16
movsb
scas
aaa
insl
add
and
xchg
xor
lods
dec
out
add
fsubrs
sub
mov
unpcklps
and
out
mov
outsb
jmp
imul
es
insb
mov
rep
pop
fists
fwait
aam
jne
out
push
cmp
sbb
fldcw
mov
fsubrs
inc
fistps
dec
adc
sarb
clc
addr16
pop
cmp
mov
ljmp
int3
popa
add
sarb
gs
aam
icebp
cwtl
out
mov
in
push
rcrw
fadds
gs
iret
sbb
sarl
imul
pop
xchg
mov
or
imul
sub
out
cmp
mov
fnsave
xchg
mov
mov
or
mov
pushf
imul
js
data16
sar
movsb
loop
ljmp
daa
and
imul
sbb
lea
loop
clc
mov
jmp
test
push
adc
addb
out
cmp
hlt
mov
leave
in
add
int3
sbb
sbbb
mov
popf
add
adc
and
lock
mov
add
jge
or
push
push
jg
or
aad
mov
ljmp
repz
test
mov
inc
cmp
fisubl
mov
pop
mov
cli
push
rolb
scas
mov
xchg
dec
imul
in
dec
subl
pop
imul
push
in
leave
test
cld
nop
daa
inc
pop
ljmp
pusha
push
cli
in
dec
cmp
add
mov
mov
in
cwtl
mov
shrb
sti
push
loop
fistpl
jnp
push
pop
outsb
arpl
lret
or
adcb
sbb
fistpl
insl
pushl
cmp
outsb
cmp
in
repz
and
rcrb
jne
fcoms
aam
lds
mov
xchg
sahf
call
add
minps
mov
or
inc
inc
xor
gs
xchg
jle
aas
scas
iret
fldl
aam
ja
loop
push
in
fwait
int
aas
pop
xchg
addr16
adc
sub
mov
xor
add
xor
jo
xlat
adc
ret
addb
jns
jp
pop
pusha
fidivrs
aas
jmp
push
cltd
pop
push
enter
inc
push
jb
data16
mov
cmpsl
pop
out
clc
es
bnd
sub
int3
sbb
xchg
xchg
adc
inc
in
cwtl
pop
iret
xor
insl
sbb
xor
lock
mov
mov
sbb
xchg
pop
sbb
aad
mov
cmpsl
pop
lods
add
std
xchg
les
movsb
test
xorb
es
push
stos
fs
or
out
lcall
mov
inc
out
cmpsl
stc
mov
rorl
pop
sarb
aad
ja
sbb
xor
cmp
cld
inc
in
rep
int
movsb
mov
nop
fstl
xchg
mov
lods
movsl
pop
adc
jg
popa
icebp
das
lock
push
adc
or
or
mov
js
lahf
xchg
adc
out
inc
sbb
sbb
ljmp
test
sar
les
gs
push
divl
mov
mov
adc
sahf
add
and
fcoml
cs
lret
mov
mov
pop
stos
and
xor
xlat
movsl
leave
xchg
pslld
or
sbb
imul
mov
loopne
imul
scas
and
in
ss
aad
pop
inc
mov
in
rcrl
xchg
repnz
fcomi
add
ja
test
sbb
sbbl
les
cmp
xchg
adc
mov
test
mov
movsl
jge
mov
pop
dec
inc
pop
fsts
mov
popa
scas
sbb
es
sbb
xchg
add
ret
and
cmp
mov
inc
jp
movb
push
push
outsb
push
movb
jl
add
xor
push
dec
in
jne
or
and
mov
xchg
ret
int3
out
stos
add
push
ljmp
sub
pop
push
jg
ficomps
ljmp
push
cmpsl
inc
push
or
jl
mov
test
xor
ret
imulb
xor
loopne
sbb
inc
pop
fnstenv
call
cmpsl
test
adc
adc
test
call
push
push
dec
addr16
pop
mov
sub
mov
sbb
leave
push
cmp
sahf
fistps
jecxz
xor
in
jle
mov
inc
dec
dec
mov
daa
pushf
or
fmull
popf
out
mov
mov
aas
jae
test
xchg
movsl
jo
mov
outsl
pop
test
icebp
inc
aas
and
shrl
pop
iret
mov
or
popa
push
gs
inc
xor
sbb
cmc
push
xor
xor
jecxz
loop
xorb
mov
out
inc
xor
or
sub
and
sub
add
std
cmp
sub
dec
xlat
mov
iret
lods
cmp
in
ss
popf
add
jae
andb
movsb
mov
in
push
push
ret
jae
mov
push
js
pusha
xor
fiadds
std
mov
xchg
sub
push
inc
mov
push
aad
adc
int
cmc
xchg
mov
xchg
xchg
push
dec
adc
cmp
dec
xchg
imul
cmp
xchg
dec
xor
gs
out
lret
inc
sbb
sbb
sub
add
push
sbb
clc
inc
test
mov
adc
and
call
xor
daa
roll
std
lret
lea
jae
jp
sub
lock
in
clc
push
movsb
dec
xchg
fcomp
jmp
mov
mov
out
jae
sahf
xor
or
mov
xlat
sub
jl
mov
ret
xchg
sub
mov
jae
fwait
mov
pop
mov
cwtl
insl
xchg
addr16
pop
out
push
mov
mov
adc
sbb
push
shlb
add
scas
jbe
xchg
cmp
cld
scas
fsubrs
fwait
adc
xchg
pop
add
pop
fwait
cmc
inc
test
sarl
cmpsb
icebp
dec
int
inc
pop
xchg
nop
jge
push
pop
sarb
addr16
or
subb
fwait
aad
xor
repnz
iret
popa
or
aam
mov
lods
out
adc
add
test
adc
push
enter
scas
mov
js
pop
out
inc
push
test
inc
popa
push
push
shll
sub
cmpsb
lret
lock
or
mov
add
jle
pop
xchg
sbb
imul
cmp
adc
push
sbb
or
pop
sahf
add
xchg
in
adc
push
push
mov
loop
cmp
inc
pop
mov
outsb
dec
movsl
loopne
mov
adc
sti
ret
sahf
sbb
adc
gs
psubsw
adc
pushf
mov
lret
mov
xor
ljmp
adc
test
push
mov
sarb
sub
xchg
dec
xchg
xchg
outsb
cmp
mov
sbbl
or
sbb
and
mov
jb
push
fsubl
inc
jns
xchg
mov
xrelease
adc
or
jle
xchg
push
mov
sub
jb
dec
xchg
aas
stos
add
in
clc
inc
jl
xchg
inc
mov
sti
clc
sub
push
mov
mov
ror
inc
or
sub
inc
sub
cmp
xor
ja
jle
aad
loopne
xor
mov
aas
mov
xchg
and
mov
sub
mov
sti
test
ret
jecxz,pt
pop
xor
lea
fisttps
inc
pop
dec
cmpb
inc
popf
jecxz
pop
mov
rcr
decl
shll
and
fidivrl
test
sub
xlat
jae
mov
sbb
daa
mov
jle
lods
xor
push
aas
mov
add
sub
mov
pop
addr16
mov
ja
pop
pop
in
movsb
loopne
add
add
addr16
add
push
sbb
xchg
ror
mov
pop
in
mov
mov
dec
lds
imul
dec
aaa
dec
pop
pop
iret
mov
ja
pop
pop
in
mov
dec
mov
les
lock
je
aam
in
movsb
lcall
into
loopne
rclb
xor
sbb
into
jae
pop
hlt
sub
xor
incb
pop
jno
xchg
xor
pop
mov
push
movsb
lods
mov
stos
cmp
inc
loopne
sbbl
pop
and
loop
mov
fistl
sarl
test
leave
out
inc
adcl
fwait
jmp
fisttps
lret
xchg
xor
out
imull
mov
jle
int
cmpsl
int3
in
neg
jmp
cmp
push
push
cmc
idiv
dec
inc
inc
repnz
jns
push
adc
push
xor
and
pop
or
mov
lcall
iret
lret
testb
push
outsb
jmp
mov
cld
push
push
dec
imul
pop
mov
push
aas
in
sub
cli
call
rclb
add
fldenv
fsubrp
and
test
test
ljmp
or
pop
pop
test
pcmpeqd
jno
xchg
jl
xor
mov
cmpsl
push
cmp
pop
or
mov
ss
xchg
adc
mov
lcall
push
cmc
sbb
bound
sti
or
adcl
mov
loope
in
lods
sti
cmp
mov
std
outsl
ja
jb
inc
jg
mov
int3
push
mov
clc
popf
pop
aam
mov
xchg
pushf
cmp
fisubl
mov
add
xchg
dec
inc
push
and
push
loopne
lcall
and
in
mov
sbbb
pop
in
test
out
dec
ret
mov
bound
pop
and
test
pop
imul
xchg
jg
js
cmp
fmulp
int3
xlat
push
jmp
insb
adc
or
xchg
repnz
out
repnz
sub
jbe
adc
pop
jb
fidivs
jg
test
pop
dec
fisttpl
mov
xchg
sbbb
icebp
arpl
push
adc
loop
xchg
in
aaa
xchg
shl
inc
push
sbb
xchg
cmpxchg
cmp
subb
pop
imul
repz
je
xor
in
bound
in
out
cmpsl
inc
adc
es
dec
daa
jne
fnstsw
mov
mov
xor
jae
cli
sbb
and
lcall
mov
xor
jns
fildll
adcl
push
fadds
inc
lahf
cmp
enter
fdivrl
jb
inc
jb
scas
movsl
cmp
lds
out
mov
jae
popf
in
movsb
cmpsb
push
xchg
jnp
lock
or
cmc
in
mov
rolb
lahf
ds
loop
lods
jl
packssdw
fsubrs
flds
inc
push
lea
xchg
cmpsl
cmc
es
sbb
xchg
aaa
mov
push
popa
push
rcr
xor
push
sbb
into
pop
mov
pop
and
mov
jp
ffreep
cmp
ds
inc
rcrb
call
pushf
fidivl
mov
pop
lret
push
jns
rorl
push
push
int
movsl
inc
lock
insb
push
push
ljmp
and
rclb
add
fs
or
jg
hlt
mov
inc
xor
inc
mov
pop
push
mov
js
cltd
mov
stc
inc
das
add
push
mov
cwtl
mov
add
enter
lods
jnp
jb
gs
fnstenv
testb
jp
in
fdivrl
daa
mov
addr16
mov
pop
sbb
xchg
mov
subb
in
ret
xchg
jmp
xchg
out
pop
loope
lock
icebp
les
or
pop
push
lahf
sub
repnz
clc
push
rorl
lds
jecxz
mov
aad
scas
nop
ds
js
repnz
test
dec
jae
aaa
xor
in
mov
cld
fisubrl
out
pop
mov
pop
mov
shll
jmp
mov
pushl
cmp
mov
ficomps
push
call
int
adc
mov
loop
mov
and
test
in
add
inc
ret
add
push
push
std
pop
sbb
lret
mov
sub
aam
stos
pop
xlat
adc
insl
inc
fwait
js
in
push
fs
mov
das
or
jnp
push
xorl
jnp
es
jo
in
dec
je
xor
xor
xchg
and
mulb
mov
sbb
mov
aad
mov
inc
ret
add
mov
fstps
stc
insl
int3
js
or
mov
mov
out
jecxz
mov
pop
int
inc
outsb
xor
jl
out
mov
adc
mov
jo
test
int
fdivrl
clc
lret
int3
insb
push
aaa
mov
push
fsubl
std
lret
hlt
or
mov
add
popa
mov
fs
stos
push
xchg
jb
cmp
dec
sbb
cltd
iret
jno
int
sbb
cmp
aaa
cmovg
pop
fwait
pop
pop
imul
arpl
movl
cmp
cmp
call
sub
dec
dec
push
popf
in
sbb
jno,pt
and
cmp
ret
into
pop
dec
in
dec
js
jo
addl
push
pop
mov
orl
xchg
les
add
mov
xchg
movsl
dec
lahf
inc
inc
jnp
mov
int
or
scas
js
rcl
ljmp
xchg
mov
cwtl
clc
out
shll
mov
push
xchg
imul
ret
lods
dec
test
mov
adc
ss
pop
in
cmp
ja
adcl
popf
dec
cs
and
and
es
and
outsl
jno
int
pop
fwait
push
cmpsb
nop
lahf
rclb
mov
je
push
xchg
mov
test
lds
jbe
mov
mov
add
jp,pn
in
ficomps
add
add
xor
lcall
xlat
sbb
jmp
data16
or
pop
add
push
adc
push
enter
icebp
mov
add
ja
jb
out
sbb
fsubrl
pop
sti
rol
and
cwtl
push
hlt
jae
repnz
iret
and
mov
sbb
cwtl
in
out
mov
cmp
inc
mul
dec
xchg
pop
pop
xchg
pop
je
adc
push
sahf
cmp
cld
inc
movsb
hlt
push
lods
inc
mov
jns
jns
mov
pop
mov
rcrl
push
outsl
and
pop
stc
xchg
sub
repz
mov
add
out
and
movsl
mov
mov
std
cmpsl
sub
cmp
mov
jno
jg
pop
dec
xor
setl
sub
stos
cli
sub
xchg
lret
xchg
mov
dec
push
xor
pop
lea
jecxz
in
fcoml
adc
sub
pop
into
sbb
lret
adc
iret
bound
cmp
and
jb
lock
clc
in
das
aam
and
cmp
xchg
sti
inc
lods
push
sahf
cmp
dec
or
iret
jno
xchg
push
xor
mov
mov
adc
fwait
repz
xlat
mov
dec
jecxz
xor
rcrb
dec
cltd
adc
add
cmp
jecxz
bound
out
lds
std
je
xchg
cmp
negl
lret
mov
push
mov
xchg
inc
lcall
inc
jp
mov
shr
lret
hlt
lea
fisttps
mov
sub
dec
or
and
outsl
ss
add
daa
cmp
sti
pop
xchg
add
cltd
stc
andps
inc
sti
icebp
jg
jge
icebp
cmp
pop
jnp
pusha
cltd
mov
xchg
arpl
movsb
fs
out
cmp
adc
push
mov
sub
xchg
jmp
fnstcw
push
fsubl
and
stc
pop
sbb
mov
pop
or
lret
mov
add
add
push
sub
ss
pop
jmp
inc
icebp
add
pop
shrl
inc
cmpsl
popa
inc
test
adc
cmpsl
xor
xchg
ss
inc
sub
sti
in
outsb
lret
dec
mov
aam
cmc
cld
cmp
fadds
fwait
rorb
jmp
fs
loopne
cld
mov
hlt
pop
pop
enter
adc
scas
cmp
leave
adc
insl
push
sub
in
pop
leave
ja
mov
lret
jae
xlat
loope
insl
or
pop
dec
out
lods
dec
jo
cmp
pushf
xchg
sub
dec
and
pop
fs
test
das
sub
sub
pop
xchg
xchg
daa
testb
stc
int3
sti
mov
fists
jle
jo
cmp
mov
mov
pop
loope
sub
clc
push
orb
imul
mov
das
inc
aaa
sbb
push
cltd
xor
push
es
mov
icebp
sarb
push
imul
jno
cltd
clc
and
daa
xor
gs
adc
xor
sbb
outsl
inc
dec
and
mov
adc
in
mov
sub
cmp
imul
dec
mov
testl
pop
outsl
in
xor
xchg
push
daa
shll
lods
jns
hlt
sti
int3
out
dec
and
mov
add
inc
fcoms
xlat
sti
pop
mov
enter
lret
mov
pusha
repnz
std
and
push
cwtl
jno
pop
test
mov
dec
pop
inc
mov
data16
fistpl
push
fwait
xchg
mov
xorl
adc
imul
mov
shll
daa
pop
jge
fs
jnp
or
rep
and
lds
lock
cwtl
cmpsl
xchg
jl
lahf
lcallw
or
add
sbb
in
cmp
shrb
cwtl
loopne
mov
testl
test
vsubsd
lcall
mov
insb
xchg
push
jg
and
testb
test
outsb
rorb
mov
adc
jno
ljmp
push
clc
arpl
leave
inc
cmc
sub
jl
fmul
mov
outsl
add
or
mov
mov
sbb
sbb
mov
aam
jg
mov
bound
sbb
fldenv
lods
jb
sub
icebp
int3
movsl
hlt
jo
jge
sub
sbb
in
add
call
bound
hlt
sbb
dec
out
xor
fisttpl
push
in
inc
lahf
int
or
lret
std
cmpsb
adc
jge
aas
pop
pop
sbb
test
inc
lret
and
call
mov
xlat
jnp
icebp
jb
xchg
xchg
push
sub
and
sub
xlat
push
fcoms
push
inc
or
xchg
push
xchg
ss
and
sbb
outsl
xor
dec
pushf
inc
jae
dec
cs
shll
daa
pop
jge
fs
cmp
xchg
sub
or
je
jmp
cs
mov
and
aam
loope
lods
sbb
ficompl
ljmp
test
fistpll
xchg
inc
test
sti
outsb
mov
xor
dec
nop
subb
fadd
test
nop
dec
loopne
push
mov
jecxz
push
lret
push
mov
es
stos
mov
add
bound
sub
dec
aaa
lcall
sbb
stc
rolb
loop
dec
movsb
imul
gs
xchg
hlt
or
das
aaa
cmp
jge
enter
fadds
dec
subl
test
es
push
jmp
xor
sbb
cmp
or
cmpsb
aam
mov
fs
in
clc
cs
ja
dec
adc
add
dec
jecxz
pop
lret
mov
mov
or
sbb
adc
rcll
aas
add
loopne
cld
inc
xor
ljmp
outsb
inc
shr
inc
xlat
notb
jmp
pop
icebp
sbb
adc
mov
cltd
push
adc
or
pop
jecxz
pop
lret
jmp
mov
iret
in
imul
add
nop
mov
pop
sub
or
mov
adc
mov
icebp
les
pop
sub
loop
sub
sbb
loop
pushl
dec
nop
mov
mov
loope
mov
xor
into
sarb
mov
jnp
and
addl
jae
cli
xchg
jge
pop
mov
mov
push
movsl
in
pusha
js
pop
test
psubsw
ret
dec
xor
xchg
jo
xchg
jp
out
sbb
cwtl
xor
mov
dec
subl
xchg
rolb
into
pop
movsl
adc
cld
sbb
loop
push
push
ja
test
mov
cmpsb
gs
in
mov
xor
adc
push
scas
sub
lahf
das
mov
adc
add
mov
nop
mov
rcl
lret
mov
lock
sarl
xor
cmp
inc
push
lock
mov
mov
imul
in
mov
xor
sub
cmp
and
cmp
or
adc
xchg
andb
jmp
jb
mov
mov
imul
push
cmp
xor
loope
push
pop
mov
cmpsl
lods
mov
sahf
iret
fwait
sahf
add
leave
push
sub
add
mov
push
icebp
mov
pusha
xchg
mov
mov
lcall
mov
in
insl
pop
loope
dec
xor
mov
jmp
movsl
jmp
mov
dec
lds
mov
gs
mov
imul
popf
push
rolb
cmp
shll
fistpl
inc
int3
insb
xchg
loopne
pop
push
sub
mov
adc
push
cmp
pop
dec
mov
lock
xor
mov
inc
sbb
daa
test
data16
cmp
ja
sbb
cmp
arpl
mov
scas
xor
pop
daa
sub
jns
cmp
cmp
sbb
add
cmc
iret
sar
xorb
shll
cmp
arpl
jp
push
hlt
add
aas
mov
and
xchg
xchg
lock
pop
fs
mov
fists
mov
pop
xor
sahf
sub
xor
ljmp
outsl
stos
jb
dec
dec
jmp
stos
adc
adc
mov
sbb
cwtl
call
repnz
rolb
shrl
sub
adc
pushf
jbe
pop
xor
pop
ja
inc
mov
jle
push
xor
test
mov
stos
cmp
std
aad
addr16
test
mov
or
cmp
popa
and
add
cmp
mov
jae
ljmp
inc
sub
rol
push
test
shll
lret
js
sub
and
inc
sub
cmp
imul
add
adc
orl
inc
shrb
fwait
int
pop
cmp
mov
inc
cmp
add
add
or
add
jns
mov
sbb
jo
dec
xchg
pop
xchg
mov
pop
jne
xchg
ret
cmp
pushf
clc
lds
les
mov
adcl
cmp
repnz
and
in
mov
or
std
adcb
fists
add
xor
sub
popa
xlat
xchg
aas
arpl
push
rcll
pushf
xchg
mov
sbb
loopne
mov
sub
sbb
loop
frstor
out
mov
std
imul
sub
test
or
mov
cmpsl
call
adc
ja
movsb
ret
add
push
jno
or
ds
or
push
fadds
sub
out
inc
xor
sub
data16
call
or
pop
in
mov
adc
daa
repz
cmpsl
fcmovbe
fsin
cmp
mov
sub
mov
mov
cmp
dec
shl
jge
pop
lahf
and
mov
inc
popa
mov
cmc
movsl
rcrl
test
mov
cli
push
out
push
xor
sub
lods
xor
adc
rorl
jb
jae
lret
xchg
iret
mov
shll
or
push
clc
cmp
ss
mov
lods
add
push
lods
mov
mov
mov
push
inc
xchg
dec
mov
iret
jp
popl
aad
xor
mov
jmp
xor
sbb
clc
jae
test
xorb
fistps
add
cli
mov
add
inc
jnp
out
outsl
adc
adc
mov
add
jg
and
in
add
sbb
or
movb
xchg
ret
mov
mov
xchg
cli
ss
lods
flds
pop
test
xor
xchg
pop
pop
notl
pusha
popa
xor
push
popf
inc
or
out
cs
lods
sub
enter
in
push
clc
jb
pop
jg
pop
sub
inc
mov
adc
stos
rcll
cmp
call
testb
xor
pop
popa
fmuls
scas
test
in
push
xor
mov
xor
mov
xchg
add
scas
adc
add
fidivs
loope
adc
in
push
ret
mov
jmp
pop
or
out
test
or
dec
cmc
mov
andb
mov
jg
outsl
add
cmp
insl
jge
push
and
pop
fcmove
gs
push
mov
sbb
dec
ljmp
cmp
sbb
shr
add
ds
push
jns
scas
cmp
rol
sub
pop
nop
popf
add
sub
cmpsl
pop
outsl
rcrl
xor
repz
int
mov
ss
and
loope
orps
dec
clc
jo
sbb
int3
sub
rolb
jnp
arpl
mov
shlb
imul
in
xchg
iret
aaa
sbb
xchg
xchg
lds
lods
movsb
gs
ss
xchg
ret
sbb
xor
std
test
mov
or
adc
sub
xchg
ror
lahf
lret
js
test
insb
mov
sub
int
aad
in
xchg
xor
hlt
icebp
shll
ljmp
mov
insl
repnz
aas
pop
cmp
jns
inc
mov
cmp
ret
or
xchg
int
dec
loopne
call
xchg
push
sub
outsl
xchg
outsl
or
dec
rorl
dec
int3
mov
sahf
inc
lcall
aad
popf
bound
inc
cmpsl
adc
sbb
push
push
jo
pop
jecxz
popf
push
and
push
shlb
and
mov
add
ljmp
fbstp
imul
pusha
aam
lea
mov
or
jbe
cmpl
pop
les
jecxz
adc
jnp
lret
fdivs
stos
scas
popa
push
test
cmp
pop
fildl
cmp
outsb
and
jle
in
stos
mov
inc
mov
xorl
jns
mov
lods
adc
dec
cmp
and
xor
cmc
and
mov
add
scas
mov
je
mov
and
addr16
cmp
int3
mov
xor
lods
outsl
mov
inc
cmc
in
les
pushf
pop
pop
ftst
xlat
aad
outsb
push
or
push
pop
arpl
jae
or
push
xchg
xchg
in
mov
xchg
mov
or
mov
lahf
fists
negl
mov
mov
pop
enter
loopne
xor
push
inc
push
push
push
shlb
cmp
push
popa
and
pushf
mov
lcall
jbe
cmp
mov
push
jmp
scas
and
or
cs
ljmp
xchg
jle
push
jnp
popa
cmp
fmull
ret
vsqrtsd
jmp
cmp
inc
dec
je
lock
inc
mov
push
xor
out
pushf
idivb
sub
mov
inc
addr16
shr
mov
pop
cwtl
xchg
mov
je
orl
ret
jg
sub
imul
cmpsb
repz
pop
sub
in
fwait
daa
out
push
fadd
mov
xchg
test
enter
push
bound
mov
stos
jno
mov
test
cltd
leave
cli
pushf
ret
std
sub
test
stos
and
dec
push
mov
or
mov
push
dec
xchg
clc
cld
leave
mov
js
sub
ficoms
addr16
es
dec
aaa
fdivrs
into
shl
daa
icebp
lret
out
xor
mov
ret
mov
orb
aaa
mov
adc
scas
arpl
jbe
fstpl
mov
jmp
xor
push
lock
scas
inc
cmpsb
inc
jmp
ror
fwait
daa
ja
mov
pop
addb
mov
lds
out
push
push
in
pop
add
and
pop
push
xchg
aam
add
sarl
xor
inc
mov
outsb
push
xor
pop
std
insl
push
cmpsl
aaa
adc
pop
cmpsl
cmpb
addb
js
mov
xchg
cltd
mov
imul
insl
popf
lock
mov
sbb
sahf
sbbl
add
mov
adc
int
push
fsubrs
aam
sub
jno
jecxz
adc
xor
push
pop
mov
data16
das
in
icebp
mov
ret
ret
mulps
and
mov
lock
lods
outsl
dec
xchg
ljmp
cmp
fdivs
jmp
sub
mov
in
in
jne
jl
jns
and
push
dec
dec
and
pop
add
lret
test
adc
lds
and
popf
mov
pop
cmp
fistl
call
dec
vpmacssww
lret
jb
mov
cmc
sbb
adc
pusha
outsl
cmp
fnstsw
in
mov
fldcw
and
dec
and
sub
out
cs
mov
imul
ljmp
mov
test
lret
jg
mov
jp
inc
js
cli
mov
loopne
sbb
inc
repnz
adc
in
dec
mov
add
mov
mov
inc
sbb
inc
out
std
or
fistl
sbb
clc
test
xor
and
stos
add
pusha
scas
jmp
out
rorb
jb
and
adc
data16
push
dec
xchg
xchg
jl
xor
inc
sub
mov
push
push
jb
add
idivl
hlt
sbb
xor
and
push
in
outsb
rolb
xor
data16
ret
push
addr16
dec
es
cld
sti
hlt
xor
enter
repnz
repnz
xor
in
inc
out
lret
pop
fwait
mov
dec
xor
fcmove
xchg
push
push
add
sahf
jl
pop
enter
ret
pop
lods
adc
in
add
xchg
dec
lcall
test
adc
cld
jns
xor
mov
pop
sub
bnd
cs
divb
cmp
inc
push
sbb
adc
push
sarl
imul
adc
xchg
imul
mov
jge
inc
es
mov
nop
pop
sub
cmp
and
pop
fstpl
adc
add
call
les
fisttpl
jl
sbb
and
adc
inc
sub
jl
mov
mov
mov
mov
adc
lock
sbb
and
hlt
xchg
icebp
lods
dec
push
inc
mov
cmp
pop
subb
mov
dec
xor
ret
in
orl
inc
push
jle
aaa
jnp
sahf
dec
adc
loope
sub
cmp
xlat
outsb
sub
jp
imull
insl
mov
scas
mov
mov
ficomps
jmp
bound
mov
adc
pop
add
ret
stos
xor
aam
mov
sti
cmc
into
mov
jno
dec
aam
and
shrb
scas
out
pop
inc
jb
jne
cmc
enter
dec
mov
insl
cli
clc
jmp
cmp
icebp
fldl
jo
cmpsl
lret
add
xchg
pop
sub
xor
in
popa
scas
ljmp
inc
ret
repnz
jmp
and
pop
lahf
xor
mov
in
loope
test
push
jge
mov
sbb
sbb
xor
pop
inc
sarb
or
mov
inc
inc
rclb
ficoml
cmc
cmp
aas
push
mov
or
xchg
pop
ss
mov
sti
push
dec
lods
sbb
shrb
test
gs
out
popa
sub
lcall
and
ljmp
dec
cmp
sub
clc
mov
aaa
dec
popa
aam
jne
shld
jp
jno
and
jge
das
lds
jl
fldpi
mul
clc
inc
xor
iret
pop
push
addr16
fwait
cmp
fwait
lods
pusha
inc
out
pop
push
shrb
leave
pop
sub
mov
mov
fisubl
sbb
test
in
pop
test
mov
and
jae
hlt
cltd
mov
js
in
imul
mov
add
xchg
int
ljmp
sub
mov
add
adc
xchg
jle
stos
daa
mov
ja
movsb
divl
and
push
sub
jbe
cmp
lcall
push
cmpsb
jp
push
lds
sub
push
and
sarl
jnp
int
sbb
dec
add
mov
dec
inc
leave
rolb
or
dec
aaa
nop
dec
lcall
xchg
test
call
cmp
and
mov
pop
cmp
mov
out
add
dec
in
clc
icebp
imulb
and
inc
imul
or
lods
mov
repnz
pushf
push
das
jnp
fistpll
movsl
loope
push
cmp
hlt
out
fwait
and
or
push
lahf
sbb
or
cmp
adc
xlat
in
mov
adc
sbb
xchg
iret
jle
add
jbe
jne
sub
lea
je
mov
mov
fsubrs
push
stos
mov
dec
cmp
les
mov
xchg
sbb
arpl
xlat
sub
fcom
hlt
ja
inc
jmp
cmp
xor
lods
cmpsl
sub
cld
dec
mov
inc
insl
test
addl
cmpsb
mov
je
int
jo
pop
jo
sbb
int
jae
inc
push
sub
daa
push
pop
mov
aas
fmuls
adc
ljmp
insl
pop
xor
ja
outsb
push
ss
sub
cmp
mov
out
mov
sub
into
xchg
jbe
mov
loop
loop
jl
sar
ds
add
lea
pusha
sbb
fs
pusha
lahf
or
bound
jmp
xor
subb
cli
cltd
push
aam
cmp
mov
push
jae
cmpsb
es
inc
lock
imul
scas
ds
lahf
sbb
xor
or
dec
sbb
cmp
add
fisttps
push
cmpsl
out
mov
mov
jmp
dec
fnsave
jmp
cmc
addr16
mov
cmpsl
jb
mov
fsts
test
roll
xor
lods
mov
mov
dec
out
sbbb
pop
dec
insl
jecxz
cli
stos
sti
sbb
sbb
mov
dec
add
cltd
clc
es
jl
pop
enter
cmc
push
add
repnz
mov
xchg
or
es
pop
into
fisttps
dec
mov
in
scas
enter
bound
mov
mov
mov
xchg
or
cmp
andb
dec
add
cltd
clc
mov
jg
shr
insl
dec
movsb
pop
roll
int3
mov
xchg
or
push
mov
cmc
arpl
inc
sbb
sbb
xor
and
ret
sub
aam
test
sbb
mov
fwait
xchg
or
fimuls
scas
fs
lret
and
shll
inc
mov
shrb
filds
jne
adc
aad
lds
jl
push
mov
jnp
lds
mov
scas
jecxz
xlat
mov
or
les
cmc
imul
scas
gs
divl
adc
jge
dec
insl
cmp
adc
mov
scas
mov
aaa
push
sbb
mov
outsl
pop
das
or
mov
stc
jmp
ja
loope
cs
pop
push
pop
not
pop
lock
aaa
push
sbb
mov
outsl
pop
sahf
bound
mov
jge
icebp
or
inc
lods
cltd
pop
jnp
test
adc
push
adcb
cli
jbe
repnz
clc
pop
repz
jmp
repz
jbe
cmp
push
outsl
adc
push
sbb
mov
outsl
pop
xchg
rclb
push
sbb
imul
cmp
push
andl
les
popf
dec
jo
ret
lcall
call
scas
dec
shlb
add
xchg
mov
ja
adc
daa
inc
fsubrl
loop
daa
dec
loope
pop
subb
jge
repz
iret
jbe
popl
inc
dec
cmp
xchg
por
pop
mov
dec
jno
subl
inc
lods
fcmovnbe
xor
movl
sub
jbe
cmp
arpl
jp
cwtl
pop
mov
aaa
sub
cmpsl
loop
jo
pop
sbb
pop
and
test
inc
sti
pop
out
xchg
out
in
aas
or
mov
pop
jbe
loopne
xor
out
adc
sub
and
mov
mov
xchg
mov
dec
add
jp
push
inc
mov
sbb
cmp
mov
aaa
and
inc
jo
sarb
dec
or
and
inc
ja
cmc
xor
xchg
aam
test
inc
in
dec
jle
ret
cmc
std
mulb
pcmpgtd
ss
ljmp
add
fwait
mov
pop
mov
rcrl
idivb
jb
and
jg
cmp
inc
ds
xor
inc
notb
cltd
xchg
xchg
int3
sub
xchg
aaa
xlat
in
data16
cmp
or
lahf
shrl
test
ljmp
mov
daa
dec
dec
imul
jle
jnp
repz
sbb
sbb
testl
out
inc
pop
jo
in
leave
sub
xor
cld
pop
xchg
push
lea
lahf
int
jp
cmp
or
push
popa
mov
adc
lahf
pop
add
imul
inc
outsl
sub
inc
cmpsb
jo
push
ja
call
insb
mov
and
leave
mov
add
push
xchg
les
in
jmp
pushf
or
jbe
sbbb
and
jg
aad
cmp
js
in
stc
fldcw
push
aad
pop
pop
dec
inc
mov
xor
push
out
and
and
cld
xor
or
into
test
pushf
ret
ljmp
xlat
das
inc
mov
xchg
lahf
sbb
test
fisubrs
dec
xor
test
pop
int
mov
xor
orb
add
xchg
ret
shlb
pop
mov
int
xchg
sahf
fstl
enter
jp
jo
sti
push
adc
mov
sub
stc
hlt
cmp
xchg
adc
aam
pusha
mov
add
and
call
dec
in
dec
jge
mov
inc
jo
fldt
pop
popf
clc
push
mov
in
inc
xchg
xlat
jno
or
sbb
add
and
lret
add
dec
ljmp
lret
shlb
lock
sti
clc
push
stc
ljmp
sahf
repz
mov
mov
aaa
cmp
cltd
lods
int
in
mov
out
adc
or
pushf
sub
push
jp
rorl
inc
dec
aaa
jmp
add
dec
out
pop
push
xor
out
fstps
fldenv
xchg
loope
mov
stos
push
fdivrs
js
jmp
cmpb
xchg
mov
mov
ror
jecxz
cmp
mulb
add
cmp
out
fdivrl
in
push
pop
or
insb
cmc
or
mov
cwtl
mov
pop
jecxz
xor
and
mov
pusha
inc
xchg
jbe
lods
or
mov
ret
sbb
inc
idiv
sub
daa
lret
xchg
sbb
inc
mov
inc
test
addb
or
insl
pop
lret
jbe
xchg
pop
es
stc
xor
xchg
sti
shl
xchg
loop
jae
sub
cmpsl
mov
das
sub
scas
or
leave
punpckhdq
mov
add
mov
dec
push
cld
adc
notb
sbb
ss
mov
movsl
and
inc
add
insl
cs
hlt
xchg
mov
aaa
and
outsl
jmp
lahf
push
pop
leave
mov
xor
jbe
inc
pop
fldt
inc
dec
out
push
imulb
pop
pop
aad
movl
xchg
shlb
scas
sub
pop
or
inc
jp
mov
xchg
pusha
jecxz
add
nop
jl
aam
insl
inc
popf
jb
or
movsl
mov
aad
jmp
push
and
stos
or
xor
inc
dec
add
adc
xor
scas
cwtl
lods
in
in
mov
iret
loope
xor
fmul
sti
xor
add
pushl
xchg
in
jns
mov
lret
addb
call
sbb
into
xchg
in
cmp
sbb
push
sub
push
xchg
hlt
and
inc
add
int3
cs
or
sub
sub
addr16
cmp
ss
fmulp
test
jle
ljmp
mov
insl
ficomps
lahf
in
xchg
cmpsl
xchg
int
imul
mov
sti
pop
int3
stos
bound
cwtl
mov
mov
js
xchg
jb
fimuls
int
adc
jmp
add
and
add
iret
and
dec
in
mov
lds
mov
gs
jmp
add
and
xor
push
fcmovbe
add
fldl
pop
loopne
cmpsb
icebp
imul
shll
test
pop
enter
cwtl
mov
adc
add
mov
push
inc
ficoml
jbe
push
outsb
mov
add
out
cmp
push
and
xlat
mov
inc
lcall
int
rorl
js
cmpsb
xor
ret
push
or
cmc
loopne
movsl
sbb
xor
dec
ds
jmp
rcrb
scas
jbe
pushf
adc
sub
sub
pusha
adc
int3
das
addb
jae
or
xchg
jecxz
sbb
clc
jp
fs
mov
cmp
xchg
lea
cmpsb
push
pop
test
fistpl
sbb
rorl
sbb
out
xlat
mov
xchg
jl
outsb
je
mov
push
push
mov
mov
and
xchg
mov
cwtl
in
mov
loop
test
fstl
jle
cmc
ficompl
lcall
cmpsl
test
sbb
jne
std
sbb
mov
dec
push
outsb
and
sub
push
and
inc
dec
adc
popf
ja
jle
movsl
and
dec
icebp
and
rcrl
and
push
jecxz
or
jne
pushf
call
and
or
or
pop
mov
pop
inc
jg
enter
dec
xchg
mov
subb
add
stos
pop
xlat
jp
lea
dec
outsl
testl
pop
cmpsl
jbe
rcr
repz
dec
pop
mov
dec
mov
adc
sbb
jp
pushf
push
jle
lret
shrl
data16
sahf
xchg
jp
cmp
jb
jae
push
out
shll
or
xor
out
jbe
out
popa
cmp
pop
jb
or
xorl
inc
dec
ljmp
jo
lock
in
mov
aam
and
cmp
sbb
add
pop
sbb
xchg
dec
shlb
adc
mov
sbb
mov
push
fisubs
push
cmp
mov
adc
xor
repz
rcrl
mov
test
repz
mov
out
mov
adc
mov
jecxz
mov
inc
add
enter
add
repz
fdivl
dec
repz
mov
sbb
cs
hlt
cltd
sub
push
inc
orb
sbb
or
lods
pop
add
std
mov
mov
cmc
daa
movsb
xchg
lcall
je
jns
cmp
bound
ja
pop
inc
jg
dec
add
inc
iret
cmpsb
icebp
cmc
leave
inc
out
sti
push
test
lods
sub
in
pop
sti
inc
pop
sub
jo
sub
dec
mov
push
adc
bound
lret
loopne
out
ja
testb
jnp
sbb
bound
imul
jmp
xor
data16
fisttpll
sbbb
and
dec
je
sbb
shrl
jmp
jne
shlb
les
cltd
xor
leave
adc
xor
inc
pushf
xor
in
mov
push
rcrb
and
and
in
add
push
sbb
jmp
pop
lea
in
sarb
sub
pop
cmpsl
jbe
cmp
imul
push
or
aas
rol
adc
outsb
out
xchg
push
mov
sbb
loope
lods
cmp
xor
int3
int3
pusha
orl
aaa
jmp
pop
adc
jp
inc
pop
jb
xor
xor
les
xlat
popa
fsubr
pop
imul
pop
nop
push
loopne
jae
stos
push
mov
in
fnsave
xchg
mov
push
dec
mov
pop
inc
sti
mov
aas
lods
jb
mov
push
inc
fnstenv
gs
adc
cwtl
std
and
mov
pop
int3
sbb
dec
and
add
ret
vpcomq
mov
lea
fmul
inc
movsb
gs
add
lds
gs
sbb
pop
sub
dec
fistpll
inc
or
movsb
lret
out
in
cltd
and
sub
test
ret
in
push
mov
mov
push
xchg
jns
push
pop
fldl
mov
adc
jge
out
enter
jmp
mov
idivb
sub
ja
aam
pop
aas
inc
add
xchg
jnp
dec
xchg
aaa
and
sub
ds
mov
adc
aas
fdivl
cmpsl
fidivrl
daa
sbb
adc
lea
and
repz
lret
jno
cwtl
and
cld
lods
in
lcall
mov
jmp
pop
add
int
icebp
push
aam
or
mov
fsubs
popl
in
push
ds
adc
lods
inc
je
pop
enter
inc
mov
add
sub
adc
adc
cli
jo
pop
enter
mov
lock
data16
dec
pop
or
push
sti
dec
or
inc
cwtl
popl
cmc
cld
cmp
pop
jg
lods
je
scas
push
mov
and
loopne
xchg
add
jmp
popa
shrb
hlt
call
mov
pushf
or
inc
leave
and
jle
mov
test
inc
inc
pop
gs
stos
dec
xchg
movsb
and
xor
push
xchg
popa
ds
add
mov
sbb
push
shr
push
lods
fs
inc
imul
mov
push
push
sarb
sbb
mov
inc
push
cli
mov
xchg
xchg
add
sub
lock
lret
mov
ret
mov
mov
out
shll
testl
add
xor
in
test
mov
addb
and
push
dec
push
sub
js
add
loopne
int3
xor
outsl
or
fbld
sbb
sbb
shrl
test
filds
js
xchg
push
ss
fsubs
andb
std
or
loopne
adc
stc
adc
jb
imul
jne
call
jnp
lods
aam
dec
cmp
push
outsl
mov
mov
mov
pop
sbb
pop
lds
test
stc
sub
jp
fwait
cmpsb
lcall
call
cmpb
ss
lret
xor
les
aaa
repz
ja
arpl
add
jb
adc
adc
int
neg
mov
call
imul
mov
hlt
out
jmp
and
scas
into
fmuls
movsl
add
xchg
dec
stc
int3
scas
nop
out
rcl
xchg
sbbl
add
std
or
fcompp
nop
into
imul
cld
push
in
clc
in
add
fists
xchg
sbb
mov
rclb
arpl
push
cmp
in
repz
aaa
mov
cmpl
lret
dec
jl
and
aas
sbb
inc
fdivr
call
jge
lea
call
xchg
out
push
je
mov
sbb
inc
das
adc
aas
fsubs
lahf
push
push
popf
mov
in
loop
mov
or
and
xchg
aad
out
fs
stos
dec
test
lea
lock
mov
adc
cmc
or
outsb
sbb
pop
aam
outsl
or
xor
leave
dec
leave
pop
ds
std
sub
sti
fld
xorl
or
bound
pop
ret
fs
jmp
cmp
sub
iret
stos
dec
lret
xor
dec
fldcw
push
xor
arpl
sti
shrl
fcomps
cmp
cmp
scas
sub
out
dec
into
sbb
jg
cli
xor
ljmp
mov
sbb
jbe
jle
sarb
push
cmp
xor
data16
mov
aam
stos
ret
aas
mov
gs
ret
insl
aam
push
mov
pop
sbb
lds
xchg
cmc
mov
sti
in
in
or
cmp
jl
sub
std
pop
sbb
jb
mov
jecxz
mov
jl
push
clc
push
jge
fdivp
call
lods
mov
popf
out
mov
jmp
mov
mov
mov
push
rolb
push
pop
sub
push
cmp
push
mov
push
in
pushf
cmp
dec
xor
dec
lea
loop
cmp
lcall
push
addb
dec
push
in
mov
std
popl
xor
add
push
pop
je
test
popf
outsb
mov
push
pop
and
test
xchg
xchg
pop
dec
hlt
lods
popf
mov
scas
add
mov
int
mov
xchg
fwait
bound
mov
jl
pop
in
sub
loop
cmp
testb
cld
mov
inc
inc
je
out
pop
mov
aad
jecxz
lods
sbb
cmp
jg
jb
fistl
jnp
jl
out
inc
sbb
nop
push
cmc
jo
std
pop
addr16
adcl
jge
jae
enter
sbb
cmpsl
add
cmpsl
stos
lahf
pusha
cmp
sub
sbb
pop
fiadds
or
icebp
dec
mov
sahf
xchg
jge
pop
rcr
das
aaa
push
inc
outsl
incb
aaa
sti
pop
sub
test
xchg
outsb
add
dec
mov
es
sbb
push
cmp
sbb
pop
sarl
mov
sar
sub
cld
popa
mov
pop
rclb
leave
sbb
psubw
jae
jg
aaa
mov
cli
out
mov
xorl
mov
adc
loop
movsb
pop
dec
js
sbb
lock
cld
push
mov
iret
daa
fnstsw
push
iret
in
push
out
xor
pop
sbb
outsb
inc
inc
xchg
fisttpll
fs
pop
cmp
pop
inc
inc
add
lock
lods
jnp
add
or
inc
cmp
jecxz
adc
cwtl
fdivp
cmp
in
repz
lds
mov
jecxz
push
fistl
cmc
fistl
jnp
jl
inc
stos
mov
es
mov
dec
fldl
mov
loop
mov
jb
sub
dec
push
fldl
xchg
jnp
inc
push
push
sbb
xchg
mov
push
nop
les
stos
push
std
je
mov
cmpsl
mov
repz
sub
xlat
ror
cs
sub
adc
sub
mov
enter
fincstp
sub
shr
rclb
pop
sbb
inc
stos
adc
inc
shll
sub
iret
subl
fisubs
sahf
xor
ljmp
add
cwtl
outsl
cmp
imul
icebp
xchg
jo
ret
into
push
or
jae
subl
or
cwtl
out
js
sub
insl
adc
std
cld
dec
mov
xchg
lods
in
xor
pop
imull
xchg
cmc
inc
into
inc
in
push
movsb
out
hlt
xchg
jmp
sbb
mov
mov
test
mov
int3
xchg
add
xchg
scas
fldenv
jno
mov
xor
inc
and
inc
leave
rcll
xchg
add
push
mov
sarl
jge
push
lahf
push
add
test
mov
lds
mov
fwait
jle
stos
or
jne
xor
repnz
xchg
push
leave
or
mov
xor
maskmovq
divl
rep
xor
popf
out
iret
pop
fiadds
loopne
sahf
or
mov
sub
sar
lea
cld
loopne
outsb
lcall
inc
sbb
push
push
aad
xor
mov
lods
lahf
fs
movsb
jg
test
mov
xchg
and
bound
mov
fstps
hlt
add
cs
pop
loopne
inc
dec
mov
sahf
xchg
jge
pop
rcr
das
aaa
push
inc
outsl
incb
aaa
push
xor
fsub
xchg
sub
dec
inc
mov
repz
cmp
xor
dec
sbb
inc
dec
cmp
inc
pop
sbb
lcall
lcall
push
in
xchg
push
in
jmp
ds
out
sbb
adc
lcall
rcrl
sub
xor
push
lret
in
jge
add
mov
xchg
add
scas
jnp
pop
xchg
sub
xchg
mov
fwait
sbb
daa
ss
and
popa
sarl
lods
or
dec
icebp
in
dec
add
or
inc
sub
mov
decl
mov
movsl
test
icebp
cwtl
pop
std
stc
dec
out
adc
jg
fisttpl
or
push
cs
test
jl
or
notb
jmp
sub
mov
outsb
mov
or
and
dec
adc
repz
adc
pop
fidivrl
xchg
xor
outsb
mov
mov
ds
rcll
clc
push
out
test
lds
jnp
iret
mov
les
insb
fs
lds
lds
scas
push
loop
inc
pop
in
les
inc
adc
dec
les
ja
push
push
ljmp
rol
loop
fwait
movsl
adc
lds
mov
push
mov
inc
push
scas
xor
enter
testl
rcrb
test
cli
mov
ficoms
in
repnz
add
xchg
dec
mov
adc
int3
in
inc
mov
push
ja
dec
mov
sbb
mov
cmc
addl
pop
pushf
rcrl
push
xor
xchg
sbb
dec
inc
popl
loop
nop
mov
sbb
sub
imul
pop
jb
insl
ret
lock
into
ljmp
mov
rcrb
lods
xlat
xor
les
cwtl
jno
mov
add
sbb
loope
scas
and
ds
lahf
jns
ljmp
fisttps
hlt
pop
xchg
in
dec
mov
mov
pop
dec
add
dec
push
cld
mov
insl
cs
cmp
dec
lahf
iret
inc
in
or
popf
test
mov
or
push
into
add
int
stos
inc
daa
and
mov
lcall
ret
bound
dec
notl
sub
aad
ret
idivb
je
shll
out
push
movsb
mov
aad
fisubs
push
cli
jp
push
mov
add
cmp
xchg
aad
incb
clc
pop
xchg
jbe
repz
cli
fwait
dec
out
jl
inc
das
xchg
sub
inc
out
jg
pop
add
das
dec
cmp
loope
pop
inc
push
jbe
add
popf
jmp
rorl
bndldx
shlb
push
pusha
js
push
inc
ss
mov
sbb
scas
mov
xor
and
cmp
idiv
loopne
push
inc
lock
inc
fdivrl
popa
sbb
int3
jne
inc
mov
add
jg
lock
enter
xchg
aas
xchg
in
je
cmc
and
and
rcrb
jl
scas
mov
mov
cmp
mov
push
xchg
test
into
xor
and
sbb
lock
fimull
arpl
mov
movsl
dec
cmp
inc
test
sub
in
fcomi
je
xor
pop
adc
xchg
das
push
popa
jmp
insb
xchg
imul
js
pop
push
movsb
jno
dec
icebp
mov
insb
fcomps
loope
and
mov
aam
dec
inc
pop
in
xor
jp
ljmp
cltd
add
bt
mov
cmp
andl
mov
sbb
out
rcrb
pushf
shll
dec
cmp
imul
incl
es
std
test
stos
clc
scas
sbb
mov
ds
mov
stos
test
or
in
add
jne
iret
sbb
imul
jno
movsb
jle
or
and
rcl
loope
test
add
inc
mov
ds
xchg
dec
adc
out
cld
ljmp
mov
or
cmp
adc
aas
das
cmp
xchg
std
loope
sahf
inc
push
add
ja
mov
pop
loop
inc
aas
and
or
int
mov
fisubrl
int
jnp
stos
jnp
sbbb
popf
scas
and
push
andb
leave
rol
mov
jbe
in
int3
pop
dec
or
cmp
pop
xchg
jecxz
addr16
inc
out
adc
call
mov
inc
lods
inc
cmp
jo
add
xchg
pop
xchg
xchg
pop
inc
jp
lahf
les
mov
packssdw
sub
sub
sbb
sbb
call
in
insl
fisttpll
mov
stc
pop
aad
incl
sbb
or
ret
dec
cltd
mov
dec
jle
mov
cld
pop
sub
lcall
jmp
je
out
mov
push
aaa
pop
jmp
sub
jecxz
or
and
nop
xchg
inc
pop
jnp
lds
rclb
not
xor
mov
lock
es
and
fld
fildll
imulb
je
lahf
pop
push
ss
pop
outsb
arpl
addr16
push
jae
mov
or
out
fstl
and
or
mov
xor
inc
mov
mov
repz
icebp
and
bnd
push
inc
mov
imul
xchg
and
sbb
pusha
push
cmp
ficoms
inc
rcll
lret
out
lods
pop
xor
dec
fsubp
scas
xorl
scas
add
adc
pop
sti
inc
and
add
fadd
aaa
cmp
jae
pop
xchg
pop
int3
mov
rcrb
mov
push
and
xchg
adc
lock
adc
pop
mov
jge
popa
aas
repz
and
mov
fs
sbb
push
pop
pop
sbb
push
loopne
sbb
or
or
aas
fsqrt
and
sub
mov
iret
xchg
jmp
mov
in
call
sub
adc
sbb
and
and
dec
jno
dec
pop
test
repz
aas
sbb
mov
pop
testl
jnp
shlb
loop
in
insl
lods
xchg
jb
fs
push
call
cmc
test
sub
in
push
arpl
fisubl
jbe
scas
subl
loop
sahf
push
gs
sbb
out
lret
test
pop
xor
lahf
sbb
fmulp
pop
cld
cmp
jbe
pop
cmp
inc
ljmp
addb
shlb
insl
sub
fldt
out
xor
xor
pop
add
outsb
repnz
inc
pop
mov
xchg
xchg
xchg
adc
popf
jns
cmp
imul
pop
xchg
jle
mov
test
or
test
jnp
rorl
pop
inc
mov
or
pop
jne
popl
das
add
ret
int
sar
cmpsb
push
ss
dec
cmp
mov
jo
xchg
add
loop
movsl
hlt
nop
in
icebp
repnz
adc
ja
icebp
push
outsb
pop
ja
hlt
outsb
xchg
popf
movsl
mov
test
xlat
cmp
arpl
xor
jmp
add
lcall
pcmpeqd
jb
add
jns
aas
mov
or
stc
mov
call
into
cltd
fnstsw
jl
pusha
xor
pop
push
xor
arpl
mov
pop
incb
enter
cli
jbe
xor
ret
das
mov
sahf
jae
cmp
and
clc
xor
sub
dec
ja
cmp
push
inc
dec
add
inc
xchg
lahf
cmpsl
gs
jnp
mov
cwtl
std
sbb
repnz
mov
sbb
movsb
movsl
and
push
test
mov
cmp
inc
mov
lods
add
and
xor
jae
mov
lret
ja
xchg
js
jne
cmpsb
mov
and
test
mov
int
xor
aaa
xlat
xrelease
mov
ficoml
addr16
stc
jb
daa
push
cmpsb
dec
and
mov
test
lahf
rcrb
xchg
sbb
stos
out
fadd
es
rorl
add
dec
push
inc
daa
mov
push
pusha
dec
repnz
sub
fildl
pop
push
outsl
ss
fwait
xor
jnp
mov
and
into
jae
pop
inc
mov
or
inc
out
sbb
stc
sub
lcall
add
add
inc
and
sbb
xor
mov
jmp
jge
mov
dec
lret
mov
into
movsb
mov
es
add
adcb
mov
push
movl
mov
in
fwait
test
fs
inc
jle
cli
scas
sbbb
or
mov
xchg
mov
fnsave
stc
roll
xor
sbb
stos
dec
mov
xor
mov
out
dec
jl
jns
test
xchg
lea
or
add
hlt
jns
sahf
out
pop
loop
outsl
sub
and
repz
fnstcw
mov
lcall
mov
popa
mov
cwtl
shl
movsl
xchg
dec
cltd
iret
hlt
scas
fidivs
xchg
cmc
or
rclb
imul
fcoml
je
adc
push
movsb
out
fcmovnu
xchg
in
sub
inc
dec
shll
mov
icebp
hlt
repnz
ret
xor
repz
sbb
mov
sbb
stos
mov
jg
mov
pop
bound
pop
add
sub
mov
imul
sbb
outsb
jecxz
lahf
loop
pusha
lahf
cld
push
cmp
pop
sub
xchg
and
outsb
cmp
or
std
jmp
dec
mov
push
mov
jno
cmp
pusha
icebp
inc
outsb
fistl
sahf
push
repz
repnz
jp
push
ja
xchg
cmp
push
inc
mov
mov
cld
js
inc
mov
fisttpll
pop
jg
mov
aad
add
loope
out
scas
push
icebp
inc
push
leave
ja
mov
inc
cmpsb
push
adc
mov
andb
adc
mov
sbb
ds
rcr
mov
jbe
dec
fs
sbb
mov
scas
sbb
fdivr
lods
mov
fistps
inc
dec
mov
pushf
gs
sbb
rclb
shll
ds
das
add
dec
adc
popf
mov
add
pushw
mov
jl
inc
data16
lcall
jno
mov
mov
fmul
cwtl
push
and
or
cmc
out
loop
dec
and
popf
fisubs
pop
test
ds
add
sar
ds
js
inc
fnsave
popa
enter
and
shl
inc
dec
in
adc
repnz
ja
ret
addl
cmpl
push
xor
xlat
pop
mov
xchg
inc
stos
popa
adc
ds
data16
stc
das
bound
push
mov
xor
call
rolb
xchg
sbb
fsts
dec
in
lods
mov
cld
lret
out
ret
cmc
lea
inc
ja
mov
lods
cs
lds
cltd
xchg
push
adc
push
mov
inc
fs
push
mov
scas
and
outsb
jne
cli
sbb
or
sbb
loope
addr16
popa
into
pop
adc
jb
icebp
jle
xor
mov
arpl
call
iret
add
rolb
clc
in
dec
cmc
orl
pop
mov
add
aad
fmull
mov
adc
lret
popa
mov
pop
sub
dec
out
lcall
int
sbb
aad
mov
fs
aaa
lret
dec
sub
pop
mov
xor
jp
lea
icebp
les
xchg
xor
iret
daa
add
or
add
lret
xchg
out
arpl
inc
inc
div
or
xchg
adc
repz
fdivrs
add
or
in
sbb
push
inc
test
leave
push
mov
pushf
cmpl
cwtl
and
loope
xchg
jle
loop
fisttpl
std
imul
test
mov
out
or
jmp
adc
jge
ss
pusha
xor
lods
pushf
clc
xchg
mov
call
pop
xchg
fcoml
and
hlt
xchg
test
ret
mov
call
xchg
mov
xchg
je
mov
fisubs
xchg
movl
shll
cmc
aaa
movsb
xor
inc
and
pop
loop
shll
es
aaa
in
jecxz
jae
cmp
test
popa
hlt
adc
cmp
sti
pop
mov
sbb
idivb
xor
fcompl
pop
in
mov
aam
clc
sub
loop
shrl
add
xchg
scas
adc
jge
mov
mov
outsl
mov
and
jne
rorb
mov
int3
fcompl
sub
push
imul
inc
mov
xor
dec
push
std
cmp
mov
fmuls
jns
aas
push
andb
jno
adc
pop
mov
and
dec
ja
fcmovbe
mov
out
sbb
cwtl
in
cmp
out
xorl
lods
outsl
hlt
jbe
mov
cmp
mov
jb
out
inc
xchg
leave
mov
loopne
js
add
pusha
lock
add
cmpsb
nop
xchg
xchg
test
cmpsl
cmp
pop
pop
je
xchg
cmp
mov
mov
sbb
add
jns
cmp
cli
nop
mov
cmp
pop
mov
popl
jo
or
scas
ds
les
in
movsb
imul
sbb
or
aam
adc
lret
cmp
cmc
lahf
push
pop
sbb
xor
loopne
scas
ret
fstpt
into
or
xchg
cmp
sbb
mov
inc
mov
pop
inc
lret
mov
push
jns
cmp
loope
movl
jno
sub
arpl
xor
jns
push
ret
inc
pop
data16
mov
xchg
iret
xchg
jp
xchg
pop
jne
leave
mov
repnz
mov
and
jecxz
adc
je
xchg
or
ja
xor
cs
fistpl
and
popf
mov
sbb
cmp
repz
inc
shrb
cmc
stos
mov
mov
orl
mov
mov
push
ret
cs
pop
xlat
fwait
testl
adc
xlat
mov
mov
inc
fiadds
lret
xlat
repz
lcall
sbb
daa
or
sub
aam
lea
imul
sub
mov
mov
adcb
out
cwtl
loopne
stos
or
mov
xlat
lret
xor
leave
cmc
addr16
push
push
std
cmp
xchg
mov
inc
insl
or
mov
and
cmpsb
lods
iret
xor
testl
jae
insl
mov
out
xor
dec
pop
pop
sbb
pop
jge
cmp
dec
fwait
in
ljmp
mov
or
sbb
int3
push
pop
xchg
lcall
xor
sub
dec
jp
imul
imul
dec
adc
ja
cmpsl
xor
sub
orl
aad
push
mov
pop
mov
mov
and
hlt
cmp
cltd
xchg
aas
aaa
dec
psllw
fldcw
fxch
fidivrl
mov
jnp
cmp
fwait
lret
dec
sub
dec
or
stc
aas
cmp
adc
cmp
add
fnsave
pop
nop
xor
js
daa
dec
cmp
mov
xchg
inc
fiadds
aad
int
pop
jle
add
jne
xchg
mov
xchg
xor
add
adc
inc
les
jle
jle
jae
jae
aam
mov
or
mov
xor
or
mov
insl
hlt
fistpl
aam
mov
dec
ljmp
std
out
pop
loop
jge
adc
sbb
xor
mov
loope
lods
out
push
sub
mov
cmpsl
cltd
dec
cmc
or
pop
movq
dec
orl
sbb
hlt
sub
mov
mov
jae
pop
mov
pop
jecxz
xchg
ja
loopne
std
add
popa
mov
adc
dec
sbb
adc
mov
nop
adcb
aad
cs
push
mov
movsl
orl
out
push
stc
cmp
jae
or
add
push
jle
mov
adc
and
cmp
mov
aas
fiaddl
xchg
test
pop
in
shrb
lods
push
and
mov
push
int3
enter
jno
adc
lods
daa
mov
and
les
jecxz
mov
mov
enter
cmp
mov
add
xchg
mov
cmpsb
inc
mov
pop
std
roll
insl
sbb
in
lret
or
pop
pusha
out
and
xchg
mov
in
mov
test
mov
xchg
pushf
mov
mov
cli
movsl
mov
es
movsb
sub
jge
ja
test
sbb
cwtl
dec
or
jmp
jp
push
orl
cld
jecxz
nop
outsl
xchg
je
scas
xor
enter
inc
imul
inc
iret
aad
call
jmp
xor
ret
pop
xchg
xchg
sbb
fstps
dec
xchg
dec
mov
or
and
scas
sahf
or
movsl
mov
lods
pop
mov
sub
or
loope
mov
xor
or
lock
cmp
fdivrp
jae
xchg
xchg
out
lds
push
rclb
mov
jo
ljmp
mov
jmp
mov
inc
int
data16
je
sbb
shl
rcrb
mov
das
mov
ja
xchg
jnp
add
addr16
inc
mov
inc
sub
sbb
cmpsl
call
aas
push
xchg
das
fldt
and
aas
test
les
mov
pop
mov
popa
fidivrs
std
jb
loopne
clc
mov
inc
adc
xor
jae
rclb
gs
jecxz
lahf
lcall
aad
loopne
xor
adc
mov
mov
stos
inc
pusha
fsub
mov
ret
xchg
jns
jmp
jg
mov
mov
add
add
and
mov
mov
mov
push
popa
repnz
mov
or
repnz
cmp
lahf
sub
pop
pop
sbb
xchg
rcrb
xchg
movsb
xchg
jle
pop
jge
adc
lock
incl
mov
and
out
sbb
in
push
leave
ljmp
jp
scas
test
nop
fbstp
pop
cmp
add
loopne
test
outsl
ret
sub
sbb
popf
leave
jmp
pop
mov
or
sbb
loope
inc
loop
or
inc
fstl
call
sbb
jecxz
mov
outsb
not
jg
fmull
fisubl
adc
pop
test
pusha
es
inc
cli
push
lcall
movsb
mov
mov
and
lret
mov
adc
jg
push
sub
gs
fwait
mov
xlat
xchg
cs
cli
pop
data16
sbb
cmpsb
bnd
ret
mov
outsl
jmp
add
cmp
inc
arpl
xchg
mov
out
mov
push
subb
sbb
dec
jle
push
xchg
mov
push
xchg
lods
xor
movsl
fldt
sub
adc
daa
push
popf
clc
in
xor
dec
dec
dec
dec
adc
xchg
cli
jmp
push
mov
les
icebp
insl
loope
jbe
mov
inc
push
lahf
mov
bound
and
pop
inc
addr16
jmp
sub
jb
mov
les
push
je
imul
js
icebp
insb
aam
repz
mov
xchg
cmp
loope
xorb
xor
and
dec
push
and
loope
lret
or
ret
movsl
mov
xor
jle
push
inc
subl
mov
mov
cmp
add
mov
jle
test
insb
insl
push
subl
dec
dec
pop
jle
scas
adc
xor
pushf
insl
adc
push
out
test
mov
push
push
lds
inc
jl
jne
xchg
mov
lret
ret
inc
test
int
fldt
jnp
sar
pop
js
xchg
jns
sbb
add
es
push
adc
jge
pushf
sub
push
jne
repz
loope
push
iret
lahf
cld
adc
es
fldcw
in
cli
xchg
xlat
in
mov
cmpsl
rclb
jne
mov
icebp
sti
nop
xor
das
jns
mov
lret
mov
ja
repnz
loop
and
cltd
das
inc
pop
and
mov
pushf
pop
and
jle
or
shl
cmpsl
inc
cmpxchg
adc
mov
cs
adc
insl
pop
jo
sbb
lret
shrl
lods
mov
push
cmp
sub
sub
adc
xchg
push
ds
and
xchg
dec
loope
mov
imul
mov
push
xor
sarl
xor
gs
xor
fistpll
out
adc
add
inc
add
pop
repz
jns
fnstsw
adc
std
fdivp
aas
and
ret
ss
dec
sti
or
iret
sbb
mov
enter
or
notb
subb
jp
enter
je
push
and
mov
out
mov
and
aam
push
outsb
mov
adc
mov
jno
shlb
lret
inc
lock
loope
das
notb
jmp
cmp
rorb
pop
sbb
and
icebp
adc
and
adc
int3
dec
out
insb
call
inc
outsb
inc
sti
jae
mov
xchg
xor
pop
add
dec
mov
dec
movsl
dec
pop
mov
hlt
cmp
dec
or
aas
and
call
push
imul
jmp
mov
xchg
mov
lock
lock
into
mov
ja
adc
mov
jmp
jae
xor
pop
add
hlt
cmp
js
popf
test
stos
jne
jg
stos
push
push
cmp
loop
mov
mov
cmp
int3
jbe
call
lock
dec
pop
ds
mov
inc
movsl
add
shlb
or
fadd
and
jbe
xor
pushf
cli
mov
insb
testb
frstor
test
mov
jp
push
jnp
inc
sub
jmp
push
daa
inc
sub
jge
mov
inc
lret
xlat
mov
xor
faddl
insb
push
sbbb
sub
sbb
xor
mov
stos
sahf
int
rcl
mov
in
push
or
add
out
lret
cmp
xchg
and
int
cmp
lods
cmp
cmp
mov
xor
cltd
in
mov
xchg
mov
imul
sub
xor
roll
xor
jl
pushl
mov
stos
add
mov
mov
scas
or
mov
daa
fnstcw
pop
dec
jns
stc
mov
sub
or
xchg
push
or
sub
and
and
adc
cmp
sbb
push
popf
fidivs
mov
aad
or
dec
decl
xlat
das
xchg
stc
fildll
xor
inc
sbb
pusha
lahf
les
push
popf
das
lods
add
jnp
mov
mov
loope
pop
sub
rcrb
stos
loopne
in
dec
sbb
lcall
xor
inc
inc
test
divb
jns
andl
cltd
test
movsl
aam
gs
rcrb
fdivp
xchg
into
daa
mov
aad
pop
sahf
mov
cmpsb
cmp
aam
movsl
rcrl
fdivs
into
mov
mov
add
subl
icebp
movsb
enter
xor
pop
clc
sub
or
popf
les
mov
shll
xchg
add
or
adc
push
gs
cmp
outsb
or
add
in
gs
mov
xchg
fistps
ficomps
nop
sbb
add
add
negl
faddl
lds
rclb
sub
add
cmp
push
iret
pop
shlb
pusha
cltd
pop
ret
and
test
push
hlt
inc
xchg
push
loope
xchg
cwtl
xchg
cltd
loop
cmp
cmovg
int3
ret
ret
rclb
in
xorl
pop
sti
popf
int
ret
mov
cmp
cmp
repz
sbb
cmpl
pop
push
ljmp
mov
or
inc
pusha
mov
cmp
clc
fwait
inc
test
and
jo
inc
push
push
xchg
iret
push
add
jg
test
lods
sbb
lret
fdivl
dec
bound
dec
adc
cmp
pop
das
aaa
int3
mov
ds
sbb
imul
repnz
inc
mov
adc
add
push
push
dec
cmp
and
xchg
fmull
mov
popf
mov
add
roll
fidivrl
jle
pop
or
leave
mov
jne
pop
lcall
mov
pusha
mov
sub
pop
inc
and
and
jo
inc
push
push
xchg
adcb
mov
xchg
test
scas
mov
xchg
pusha
test
adc
ret
rolb
cmp
loopne
aaa
xchg
jns
dec
push
lock
leave
mov
jmp
sahf
sub
ret
mov
mov
and
sbb
pusha
mov
sub
adcl
jo
or
jo
and
mov
imul
jns
dec
mov
sbb
sub
jb,pt
push
loopne
add
dec
add
sbb
xor
out
inc
and
inc
out
push
jl
aaa
push
inc
mov
dec
cmpsb
iret
frstor
std
jle
inc
cmp
mull
in
or
dec
push
movb
inc
cmc
mov
adc
aaa
mov
int3
dec
mov
cmp
push
dec
push
mov
sbb
imul
inc
xchg
outsb
ret
mov
out
xor
inc
push
mov
pop
jno
pop
sub
cmp
loope
push
mov
ja
ss
push
inc
jbe
shl
cmp
xor
test
hlt
dec
loope
mov
sbb
inc
mov
sbb
dec
jbe
inc
push
shlb
xlat
inc
rolb
push
pop
mov
lods
scas
add
dec
xchg
mov
test
cmp
fwait
sahf
jns
jmp
mov
xchg
mov
mov
add
xor
push
inc
in
push
sub
jl
cmpsl
adcl
mov
adc
idivb
inc
jp
sub
insl
fisubrl
pushf
and
jle
xchg
push
cmp
mov
dec
sbb
mov
sub
shl
gs
push
pop
jle
lahf
test
pop
notl
mov
jbe
sarb
inc
js
xor
stos
mov
outsl
xor
in
lods
pop
stos
push
cmp
decb
dec
outsl
outsb
adc
insb
lret
lods
or
arpl
push
lret
sub
jmp
dec
cld
cmp
inc
pusha
nop
hlt
pop
xor
adc
xchg
test
mov
dec
stos
jns
int
pop
fwait
pop
or
lahf
test
lock
inc
adc
loopne
jns
mov
and
in
sbb
push
sbb
ljmp
sub
mov
sbb
push
loope
fsubrl
mov
and
add
add
repz
sub
dec
in
inc
and
mov
outsb
and
push
out
fisubrl
cli
mov
xchg
mov
mov
repz
adc
test
sub
jnp
xchg
inc
incl
aaa
lds
sub
test
mov
ret
dec
push
stos
mov
lret
mov
jbe
pop
test
cmp
dec
icebp
test
jbe
icebp
loopne
aam
xchg
push
push
addr16
test
mov
pushf
lea
movb
subb
arpl
scas
mov
and
adc
xor
mov
jno
aaa
pop
outsb
mov
in
inc
and
mov
pop
repnz
enter
ss
inc
xor
mov
mov
mov
aaa
jnp
test
jbe
test
pop
in
push
repz
mov
movsb
cmp
jb
pop
pmulhuw
fadds
lods
out
dec
test
cmp
insb
mov
fs
ss
or
push
inc
xor
mov
jae
sub
sub
jne
outsl
in
xorb
mov
lods
popa
in
fsts
mov
andb
out
push
xchg
push
lret
adc
add
add
movsl
cmp
pop
outsl
jmp
jbe
push
xlat
enter
inc
push
repnz
push
xchg
add
imul
mov
imul
aam
sub
shll
es
pop
add
cmp
mov
lods
cmp
mov
inc
sbb
std
lret
mov
cmp
pop
in
sbb
xor
dec
pop
xor
out
pop
xor
sbb
mov
in
repz
lods
aaa
add
mov
std
sub
repnz
test
xor
test
mov
lret
adc
pop
icebp
xchg
inc
push
je
sub
fsubl
and
cmp
ret
ret
inc
mov
outsb
cltd
ja
mov
mov
cmp
loopne
xchg
or
es
call
sub
inc
adc
xor
lret
pop
xchg
mov
mov
jge
sbb
dec
test
inc
sahf
push
fdivr
sub
sub
sahf
loope
fisttpl
xchg
movsb
clc
sub
sub
push
flds
js
sbb
cwtl
push
insl
sbb
or
pop
and
push
mov
frstor
or
adc
add
jne
inc
insb
aas
or
jnp
loope
dec
push
inc
adc
cmpsl
call
mov
aam
popa
push
loop
lcall
out
cmpsb
and
cwtl
pop
rcrb
fsubrl
or
fnsave
sub
mov
mov
jb
mov
pop
loope
mov
dec
sbb
es
cmp
clc
in
jbe
inc
cmp
pop
cmpsb
lahf
xchg
sub
aas
stc
mov
mov
xchg
jmp
daa
sub
xlat
std
inc
in
or
mov
into
xchg
and
data16
or
push
xchg
mov
mov
adc
out
sbb
out
int
cmp
jbe
fdivl
loopne
xchg
das
lcall
jg,pt
je
inc
cmc
add
in
lods
out
insb
in
or
mov
scas
scas
mov
sti
mov
lods
lcall
inc
and
stos
inc
pop
sub
nop
push
or
shll
inc
push
icebp
iret
gs
sbb
cmp
mov
loop
bound
mov
ss
xchg
enter
movsl
push
adc
mov
leave
xchg
pop
push
jle
repz
push
dec
ret
gs
aad
or
lcall
add
cmp
stos
mov
push
cmp
hlt
sarl
ss
rcrb
in
sbb
cmp
push
pop
inc
cmp
add
inc
hlt
ja
and
es
cs
pop
ja
mov
into
mov
ss
addr16
or
push
subb
fs
incb
cmp
jp
int3
and
or
push
ja
xlat
mov
add
jp
mov
xchg
jno
aaa
lds
inc
ss
pop
or
sub
add
mov
jb
xor
xchg
push
push
fnclex
pop
ret
dec
fdivr
lock
jnp
mov
cwtl
sub
mov
sub
jl
jno
jge
jle
sub
dec
push
inc
mov
cld
out
loop
pop
out
sbb
xchg
or
xchg
stos
fiadds
mov
lret
leave
pop
shl
int3
je
pop
sub
xchg
push
stos
pop
cmpsl
lret
dec
sbb
loop
sub
pop
add
mov
add
xlat
push
es
sub
ds
mov
in
dec
jmp
test
mov
sub
hlt
fcoms
pop
dec
pop
or
aad
dec
out
div
imul
fcoml
aas
ror
mov
outsl
ret
mov
mov
shll
movsl
cltd
add
cmp
add
cmp
mov
cmp
dec
cmc
or
shl
jbe
cmp
mov
inc
in
leave
adc
insl
ret
adc
dec
stos
imul
or
sahf
mov
lahf
rolb
mov
inc
cmp
or
ficoms
mov
or
ss
loopne
xor
sbb
push
cmpsb
mov
js
fisttpll
rcll
jo
enter
xlat
imul
jl
aaa
mov
ret
int3
jle
and
test
mov
adc
jnp
fs
xor
aas
enter
pop
add
in
add
shlb
orb
imul
jmp
cli
ds
ja
lahf
call
mov
insl
std
push
lret
mov
inc
inc
fmul
push
enter
xchg
push
lds
loop
ja
in
sbb
sbb
fidivrs
mov
mov
cmp
loop
xchg
shrl
int
icebp
cmp
shlb
jmp
daa
enter
mov
aad
int
mov
iret
insl
pusha
andb
mov
out
jbe
sahf
cmp
fwait
dec
xchg
lods
fsub
mov
shll
push
dec
arpl
movsl
mov
pop
call
add
leave
sub
stos
pop
mov
das
insb
push
inc
out
mov
jns
mov
pop
jge
adc
jb
or
fwait
es
inc
stc
mov
cmpsb
fidivrl
adc
push
inc
push
scas
jle
dec
pop
dec
repnz
dec
sti
xchg
or
fidivrl
popa
fwait
jecxz
inc
js
xor
arpl
inc
push
sbb
inc
sahf
xchg
jge
mov
xchg
aas
fsubl
and
cltd
adc
dec
insb
jns
cmp
add
cmp
das
orb
pop
dec
andl
in
lret
adc
jbe
xchg
dec
mov
in
mov
pop
jecxz
jg
jno
push
je
sahf
cmp
dec
sbb
add
rcrl
dec
aad
push
mov
int
xor
lret
mov
mov
adc
sbb
mov
lcall
loope
dec
mov
cli
dec
mov
shr
sbb
xor
jo
add
or
mov
mov
sbb
inc
push
movsb
fisubl
sub
dec
nop
pop
push
aad
jb
sub
shl
jnp
pop
movsl
cmp
lret
xor
xchg
mov
ja
loop
es
mov
push
pop
mov
scas
mov
dec
test
repz
ljmp
mov
mov
fs
ficoml
and
cmp
ss
rcll
jg
loop
adc
cld
fsubrs
pop
dec
pushl
lret
inc
xchg
out
xchg
sub
xchg
jecxz
adc
sbb
aad
cmp
pusha
aas
or
cld
push
push
cmc
lahf
popa
and
movsl
add
lods
rolb
xchg
jmp
decb
add
or
rcr
cmpsl
push
inc
shl
loopne
fwait
test
cmp
pop
xchg
shl
mov
sub
das
adc
movsb
mov
out
insb
cwtl
cmp
jecxz
imul
jo
cli
insl
mov
pop
fmull
adc
das
dec
xchg
lret
sub
vpsrad
mov
arpl
sbb
js
outsl
outsb
or
not
dec
call
rclb
adc
jp
es
pop
aam
or
sbb
clc
pushf
inc
push
mov
shlb
mov
dec
jo
sbb
mov
lock
stos
mov
mov
lods
mov
add
scas
aas
xor
mov
jmp
mov
or
jmp
je
add
mov
andb
mov
enter
mov
adc
hlt
in
fnstenv
test
push
jl
outsb
or
mov
cs
push
pushf
cld
loop
lret
pop
aad
push
xchg
hlt
out
imul
mov
es
inc
sarl
sbb
imul
xchg
cmc
imul
lret
in
or
add
out
and
pop
test
daa
xchg
cmp
xor
or
les
adc
push
out
push
movb
outsl
incl
adc
out
sbb
fwait
in
add
xor
xor
jae
jb
pop
adcb
cmp
out
dec
movsl
push
cmpsl
ret
sbb
dec
fistl
inc
jnp
jbe
aam
gs
jecxz
jbe
push
mov
or
xor
or
out
jg
sbb
lahf
adc
das
sahf
mov
or
in
sbb
fwait
imul
inc
xor
mull
sub
sub
pop
repz
loopne
pop
sub
sub
fidivs
mov
jg
pop
xchg
push
cmp
push
adc
adc
pop
dec
scas
sub
shll
xor
xor
xor
or
jl
sahf
mov
ficompl
adc
xchg
pushf
jnp
insl
clc
and
stos
das
ret
pusha
jns
cmp
test
and
outsl
arpl
inc
je
shl
in
js
popa
into
jo
xor
out
and
pop
test
mov
pop
push
fisttpll
enter
pop
cltd
out
clc
fisubrl
test
icebp
ja
fldcw
xor
xchg
shlb
dec
xor
mov
das
mov
sti
ja
mov
in
inc
sbb
mov
mov
adc
mov
adcb
test
inc
int
cmp
shl
dec
pop
bnd
mov
repnz
icebp
push
and
pop
dec
scas
sahf
divb
insb
sbb
hlt
movsb
insl
repnz
iret
mov
mov
cmpsl
rclb
sub
xchg
leave
enter
push
ret
dec
add
int
or
enter
xor
mov
popl
inc
repz
sarl
mov
mov
dec
pop
std
stos
jl
jmp
pusha
shlb
icebp
gs
xor
das
pushf
lea
inc
add
jne
lret
ficomps
pop
movsl
pushf
ss
repnz
loop
xor
add
add
push
outsb
jb
adc
daa
mov
sub
and
in
pop
adc
xchg
or
add
ret
pop
sub
pop
xor
mov
jecxz
push
ja
divb
in
imull
sarl
and
addl
cmp
outsb
jmp
js
movlps
sbb
push
roll
sti
adc
aaa
mov
dec
or
add
js
js
and
mov
shlb
xchg
pop
jle
mov
sbb
loopne
cmp
addr16
pop
jl,pt
pop
pop
out
add
sub
adc
es
jecxz
mov
lock
stos
dec
dec
mov
mov
and
and
bound
xchg
and
jmp
fisttps
std
out
mov
std
arpl
clc
mov
das
pushf
lea
inc
sbb
icebp
cmp
gs
hlt
mov
ljmp
add
rcl
cltd
out
mov
xchg
rorb
ficoms
jp
dec
and
jns
xor
lcall
and
push
dec
xchg
loop
in
in
push
mov
jae
mov
movsb
mov
test
filds
movsb
lds
inc
arpl
jbe
inc
testb
std
jno
cmp
addr16
pop
jl,pt
push
pop
mov
or
cmc
es
jecxz
mov
lock
jle
dec
adc
jne
mov
and
and
mov
fidivrl
xchg
and
jmp
fisttps
std
stos
jl
jmp
pusha
shlb
lcall
das
pushf
lea
inc
add
jne
imul
orl
repnz
sbb
test
or
push
outsb
jb
adc
daa
mov
inc
mov
jbe
jnp
in
stos
into
pop
shlb
div
mov
xchg
or
in
mov
add
fiaddl
into
push
addr16
mov
and
inc
in
add
mov
cwtl
xor
mov
mov
inc
mov
mov
pop
movsb
and
push
lds
rorb
leave
cwtl
rclb
sbb
shll
outsb
fstpl
cmpsl
jecxz
daa
pushf
fwait
out
or
cmc
pop
ds
xchg
ds
sbb
xchg
sbb
stos
je
mov
movsl
dec
les
inc
pop
dec
cmp
ds
lretw
sbb
test
cmp
adc
add
nop
xor
add
jmp
mov
mov
popl
and
lahf
sub
nop
cmc
sub
xchg
clc
jne
mov
jmp
cli
jo
out
icebp
jge
lea
xchg
push
int
xor
pop
sbbb
push
mov
stc
insl
pop
inc
addr16
mov
xor
das
addl
or
mov
adc
adc
sub
int3
xor
gs
add
sahf
pop
xchg
inc
or
cld
pop
dec
mov
push
data16
loop
loope
adc
sub
mov
aam
jne
mov
mov
das
arpl
scas
leave
sti
fadd
fdivrs
aaa
or
arpl
cmp
push
cmpb
xchg
sub
mov
iret
push
mov
add
pop
xchg
ret
pop
adc
or
xor
or
inc
call
mov
cs
sbb
out
es
sbb
adc
pusha
dec
mov
fucomip
jo
js
push
in
negb
pop
and
and
jmp
imul
jmp
pop
pop
rcr
ss
sarb
pop
stos
mov
addr16
mov
inc
and
and
aad
bound
shll
push
popf
int
sbb
cwtl
call
dec
dec
addr16
lods
mov
insl
ror
mov
xchg
cmp
test
pop
mov
data16
sub
test
jmp
jle
inc
or
std
fsubrs
jge
rorb
loopne
les
scas
nop
dec
xor
pop
pop
push
jne
xchg
std
or
sahf
outsb
cs
mov
iret
scas
mov
movsl
outsb
call
push
ljmp
lret
xor
arpl
ljmp
in
jmp
pushf
pop
push
dec
or
mov
pop
push
das
test
cmp
sub
mov
stos
dec
lea
imul
mov
xchg
jge
mov
test
fistl
in
scas
bound
mov
hlt
push
inc
cmpsb
cltd
ret
cs
mov
jp
mov
mov
roll
cmp
les
mov
add
cmc
mov
scas
aam
clc
mov
mov
nop
inc
bound
and
stos
int3
out
imul
test
insl
ret
or
jl
add
xchg
loope
cmpl
push
stos
imul
lcall
dec
pop
mov
push
mov
std
movsb
sbb
or
pop
cli
mov
dec
jo
pop
push
jne
push
inc
jecxz
cmpsb
cmp
imul
insb
movsb
push
inc
jne
ljmp
jle
divl
imul
dec
jbe
jg
icebp
js
sub
rcrl
lds
in
jg
mov
lret
pop
cli
push
lret
and
sarb
push
jg
jle
or
push
mov
push
test
out
sbb
aaa
jg
imull
mov
notl
xchg
inc
lods
dec
cld
popf
sar
xchg
sub
cmp
les
jb
es
mov
lcall
and
shlb
and
pop
xchg
dec
out
mov
stos
out
push
jl
mov
push
jle
cs
push
cmc
mov
push
mov
or
push
jb
jg
and
mov
das
cmp
jno
sbb
and
in
clc
out
jb
cli
popa
add
inc
enter
shll
mov
pusha
xchg
push
push
sbb
mov
notl
or
into
pop
add
mov
and
ljmp
push
aam
or
xchg
adc
adc
call
dec
lods
jae
push
push
bnd
fcoml
mov
or
inc
push
and
push
out
scas
mov
sub
sbb
xorb
push
sbb
cmp
lahf
xlat
out
jae
add
push
xor
call
cmp
rorb
inc
ds
dec
gs
pushl
leave
push
push
aaa
mov
dec
stc
lcall
sar
or
cmp
pop
jl
ret
push
push
push
and
movsb
scas
insl
roll
cmp
push
insb
push
adc
inc
cmpb
or
sbb
inc
dec
xor
cli
sti
cmp
xchg
or
sbb
mov
xchg
adc
mov
jb
lods
mov
jno
clc
or
jno
adc
lcall
add
aaa
add
or
push
add
mov
mov
mov
loop
inc
and
push
push
xor
sub
div
outsb
and
pop
stos
shlb
sbb
pop
in
or
fistps
pop
out
cwtl
shr
stos
or
jp
pop
or
jae
in
push
or
xor
cmpsl
lea
popa
mov
hlt
out
or
mov
jp
adc
push
push
mov
inc
mov
fistl
jecxz
add
mov
mov
sahf
addb
xor
and
test
xor
out
xchg
fldenv
adc
in
out
or
ret
and
fsts
movsl
xlat
ss
adc
fcmovnbe
mov
push
add
dec
xchg
pop
arpl
rorl
mov
xchg
and
loop
fmull
sahf
out
and
cmp
sub
sbb
lret
cmc
mov
mov
arpl
mov
xlat
bound
in
scas
repz
sbb
push
add
nop
stc
adc
mov
fcompl
in
cs
mov
adc
xorl
stc
aaa
xchg
mov
dec
aam
es
pop
lods
push
jp
loopne
xchg
in
add
movsl
adc
mov
scas
push
aaa
fstps
push
shlb
dec
mov
mov
jp
dec
xchg
mov
xor
mov
xor
sti
add
int
sbb
dec
movsb
push
sarl
mov
call
outsb
mov
adc
mov
jge
push
imul
pop
push
inc
xchg
mov
dec
clc
push
nop
sarb
sahf
popa
test
pop
rorb
lods
sub
aas
or
jns
daa
push
xor
mov
adc
or
aaa
adc
imul
inc
adc
lret
jb
mov
test
and
mov
mov
cmpsb
push
les
fbld
inc
imul
daa
in
fsts
push
push
and
in
push
ss
shl
mov
ret
shlb
js
pop
push
mov
sbb
hlt
sarb
in
loope
call
push
inc
in
pop
mov
int3
mov
data16
clc
divl
fs
adc
pop
push
repz
add
inc
pop
sahf
ja
stos
push
ds
xor
or
stc
out
sarl
ljmp
lret
sarl
jo
sub
into
inc
icebp
inc
pop
call
movsb
dec
xchg
js
aad
add
cmp
adc
xchg
js
push
lea
mov
out
cs
mov
rcl
pop
outsb
inc
push
sub
dec
notb
movsb
push
cmpsl
ret
jae
add
or
xlat
xor
js
out
popf
loopne
jns
cmp
push
in
out
insl
clc
and
aam
push
inc
pop
pop
sub
mov
out
push
or
call
loope
mov
jg
pop
cmp
movsb
xor
pop
sbb
stos
sti
xor
outsb
test
in
cli
iret
mov
inc
and
rol
jmp
aas
rcrl
adc
inc
mov
cs
ss
in
jno
pop
aam
inc
sub
cs
mov
xor
or
mov
or
cltd
out
js,pn
mov
or
mov
dec
popf
sub
push
inc
xor
test
bndldx
pop
jo
push
cld
pop
mov
push
or
rcrb
mov
sbb
ja
and
fsubr
lock
ret
lcall
xor
jne
sub
pop
inc
xchg
push
scas
jns
or
out
in
xchg
imulb
xor
stos
mov
sub
imul
and
pop
sbb
mov
out
sti
inc
mov
fisubrs
lret
mov
daa
stos
rcll
sbb
pushf
cmp
and
pop
inc
mov
scas
xor
mov
lahf
in
loope
add
test
fidivs
and
dec
push
pop
out
aam
jl,pt
shlb
pop
cwtl
mov
js
out
pusha
dec
cs
sub
dec
xchg
scas
mov
pop
rorl
rorb
mov
sbb
outsb
jns
sub
ss
mov
enter
add
mov
mov
jo
push
and
es
loop
push
out
ljmp
push
inc
scas
leave
lock
add
ficompl
push
in
pop
jecxz
jne
shlb
bnd
frndint
jnp
aaa
cmpb
and
fsubs
mov
andb
enter
movsb
popf
cmp
inc
sbb
dec
rcrl
mov
aad
ret
inc
jge
test
arpl
pop
xor
pop
adc
xchg
int
xor
sbb
scas
xchg
scas
jnp
rcrb
mov
push
cmc
mov
test
outsl
pop
fdivl
xchg
sahf
ret
ja
sub
xor
dec
shlb
inc
add
int
mov
rolb
adc
lcall
inc
stc
nop
mov
bound
xlat
movsb
ja
stc
lahf
fiadds
jnp
xchg
and
or
cmp
sbb
push
and
and
fsubrp
ret
sahf
sbbl
sub
call
inc
cs
ljmp
ret
push
mov
cmp
fsubs
lret
cld
jb
repnz
push
fldt
mov
mov
test
ljmp
sub
dec
divl
adc
mov
popf
mov
xor
push
push
mul
mov
xor
lret
push
xchg
mov
and
mov
xor
shrl
mov
jbe
lea
sbb
mov
movsl
dec
pop
xchg
dec
call
adcb
mov
xchg
xchg
add
or
js
sbb
nop
push
sub
xchg
aam
lea
aam
dec
lds
pushf
lods
inc
jne
repz
xor
loopne
aam
call
sti
mov
mov
aam
out
pmaddwd
sub
mov
inc
push
mov
sub
jb
out
pop
add
xor
arpl
pusha
aaa
lahf
adc
mov
movsb
dec
adc
addr16
sub
rcll
inc
mov
test
xchg
pop
test
pop
inc
add
in
push
test
xchg
push
jns
sbb
cmp
mov
adc
mov
lock
testl
xchg
aad
fsubp
sub
out
mov
mov
imul
call
scas
cmc
cli
inc
pop
jge
imull
sub
jno
inc
iret
jo
mov
mov
jmp
imul
push
in
jb
dec
sbb
sarb
cmp
mov
outsb
xor
rcrb
mov
pop
in
js
ljmp
and
lcall
push
dec
or
sub
stc
pop
cmpsl
and
pop
inc
pop
loope
jb
in
and
mov
jp
fwait
jne
cmp
bnd
push
pushf
adc
xchg
fistps
mov
or
lret
cmc
add
or
negl
push
outsb
lret
loope
shl
xor
fisubrs
out
arpl
jne
cmp
adc
fcompl
xchg
loopne
push
adc
lcallw
arpl
mov
xor
rcrb
and
fs
sub
das
cmpsl
cmp
gs
jg
mov
fs
test
std
ret
ficoml
dec
push
or
and
mov
cmp
test
ljmp
pop
sub
scas
xor
cli
jno
ss
enter
jbe
cli
jmp
outsl
xor
adcb
imul
sub
out
push
int
pop
mov
shl
mov
mov
xlat
xor
mov
xor
dec
movsl
push
jne
ss
shl
or
ret
or
in
lds
pop
insl
clc
and
and
or
insl
aas
and
push
std
xor
push
mov
lea
leave
mov
mov
ret
inc
dec
decb
jmp
lret
jge
lret
repz
stc
push
inc
dec
rcll
rcll
int3
dec
rol
add
add
mov
cli
pop
dec
sbb
cmp
mov
out
bound
enter
cmc
fadd
xor
mov
loope
scas
call
sti
jbe
ret
dec
in
nop
out
testl
mov
in
or
in
adc
jnp
lret
and
cwtl
mov
in
adcb
push
and
scas
jmp
and
inc
xchg
jno
jle
hlt
pop
jae
mov
and
mov
jge
cs
shll
xchg
xchg
xor
or
or
inc
jno
push
mov
sub
jnp
sub
cmp
sbb
and
repz
cmp
cmp
cmp
sbb
add
fsubs
add
inc
shl
push
shll
mov
mov
xor
into
mov
mov
push
adc
pop
mov
cmp
scas
sub
mov
stos
mov
ret
lret
sbb
bound
pop
push
dec
mov
fcompl
dec
lcall
cmp
cwtl
mov
repnz
lock
inc
lcall
xor
std
pop
sub
and
les
dec
insb
orb
cld
inc
sti
lock
in
jge
movsb
xor
lahf
pusha
jle
cli
xor
out
jg
jbe
das
stos
sub
lods
repnz
and
mov
stc
add
sbb
cmp
cmp
out
cmp
daa
daa
cmp
jne
dec
das
lret
insb
mov
stos
mov
mov
mov
sbb
iret
xchg
jge
call
imul
enter
cltd
fistpll
gs
dec
stc
or
sbb
les
jno
div
sbb
sahf
xor
cld
sti
in
push
and
jae
or
nop
mov
mov
enter
fsubrl
imul
jmp
loop
fbld
xor
adc
pushl
repnz
out
add
arpl
inc
ficomps
push
inc
mov
add
test
add
ljmp
pop
rolb
popa
iret
pop
xchg
adcb
repz
or
dec
mov
clc
push
sbb
dec
outsb
dec
sub
jge
mov
bnd
and
mov
xor
rcll
je
or
mov
dec
pop
sub
adc
jp
push
pop
push
pop
pop
xchg
stos
daa
arpl
arpl
jnp
fistpll
dec
rclb
lret
iret
push
mov
outsb
test
cmc
dec
lods
loope
nop
rcrb
or
out
sub
imul
xchg
call
adc
jmp
mov
push
je
out
outsb
gs
pop
imul
jbe
or
sbb
rclb
push
imul
movsl
outsl
rcl
add
fidivl
icebp
outsl
lods
push
pop
nop
push
xor
dec
dec
mov
pop
in
stos
jge
push
enter
add
in
add
xchg
xchg
stos
mov
or
sub
hlt
testl
incb
out
imul
dec
and
imul
loope
ja
push
push
inc
jbe
mov
inc
jp
cwtl
add
xor
inc
sub
sti
jne
mov
or
in
inc
xchg
or
xchg
xchg
shlb
pop
mov
test
xor
xchg
nop
push
and
pop
loop
push
mov
les
test
fstpl
js
adc
xor
cmp
pop
and
dec
stc
or
rcrb
testl
shll
js
jne
add
pop
addr16
outsl
mov
mov
sbb
popl
cld
inc
add
dec
fisubrl
cmp
in
les
out
pushf
loopne
fdivrp
mov
xor
sub
mov
test
and
mov
mov
imul
stos
or
adc
jecxz,pn
bound
fistps
iret
add
or
sub
jnp
sub
cmp
or
pop
xchg
outsb
pop
addl
fimuls
js
or
add
and
jg
jne
enter
fistl
repz
mov
inc
lods
cmp
bnd
in
data16
cwtl
fistl
fidivrl
icebp
arpl
into
add
mov
insl
dec
or
adc
insb
xchg
movsl
cmp
xor
jbe
maskmovq
divl
lret
push
out
mov
mov
lds
pop
or
cmp
or
adc
push
sub
mov
pushf
pop
leavew
ja
movsb
mov
mov
mov
lahf
int
adc
dec
fwait
stos
aam
in
scas
inc
adc
out
ljmp
and
xorb
jecxz
jns
pop
decb
sbb
lahf
loop
ret
cmp
push
or
out
xor
push
lahf
stos
icebp
xor
filds
daa
mov
in
jne
and
xchg
jecxz
jb
arpl
fisubl
cmp
movsb
cwtl
xor
pop
adc
cmp
mov
cmpsl
test
imul
xchg
mov
xchg
aas
inc
out
mov
dec
mov
dec
xor
iret
or
insl
push
stc
movsb
or
and
daa
int3
mov
mov
or
ret
cmp
add
cs
movsl
aas
or
sub
ret
mov
push
mov
mull
ja
mov
or
imul
inc
cmpb
lock
mov
lss
loopne
jle
ljmp
lock
rcrb
fists
lret
mov
sbb
and
xchg
lret
rcr
and
mov
cmp
jl
icebp
xchg
in
rcll
add
std
push
std
push
or
std
sub
push
mov
mov
or
mov
xchg
adc
sbb
push
jb
int
lds
or
push
push
xchg
nop
lahf
pop
mov
or
repz
bound
cli
mov
cmc
push
loope
sub
leave
out
jo
sub
test
push
imul
movsl
xchg
rcll
push
cld
sbb
mov
mov
pop
inc
scas
sub
cmp
test
sbb
lods
dec
adc
fcompl
fwait
ljmp
mov
mov
push
cs
sub
pop
inc
pop
push
jmp
bound
push
into
adc
sahf
stos
xchg
adc
inc
jne
popfw
roll
js
pop
pop
fwait
out
inc
mov
fwait
fs
fldl
addr16
sub
dec
jecxz
ds
lcall
sub
imul
daa
lret
dec
xchg
push
std
inc
sub
push
dec
inc
inc
dec
xchg
and
dec
adcl
dec
mov
jo
je
adc
fistpl
push
add
mov
adc
loope
or
cmp
int
notb
sub
sub
mov
dec
push
inc
int
sbb
jne
and
iret
movsb
popa
lcall
xchg
fldt
cltd
pusha
push
nop
bound
pop
scas
cmp
add
pushf
mov
mov
daa
outsl
mov
mov
sbb
popl
cld
inc
add
stos
jp
mov
mov
xchg
mov
xchg
cmpsb
bound
pop
sub
insl
jb
into
ss
into
cltd
adc
cltd
xchg
jg
xor
xchg
mov
xchg
pop
into
addr16
push
jb
jno
mov
or
push
and
fwait
mov
pushl
mov
roll
pop
and
and
jb
xor
fcoml
leave
mov
test
mov
loop
mov
test
aam
outsb
cld
nop
dec
jmp
mov
or
jmp
hlt
cli
les
add
push
pop
and
xchg
mov
sahf
cmp
push
cmp
cmpsl
repz
lock
sbb
bound
push
out
mov
fcmovu
and
xchg
clc
mov
mov
xor
xchg
cld
mov
jp
adc
sub
xor
rcr
roll
jmp
or
xchg
lock
aas
mov
fneni(8087
ret
stc
lret
mov
leave
xor
sub
sbb
cli
cmp
ret
dec
mov
orb
pop
fwait
cmpsb
fs
sbb
sbb
cwtl
push
mov
pop
mov
and
or
inc
inc
mov
push
inc
mov
mov
adc
mov
loope
add
cmp
scas
movsl
lods
or
rcrb
mov
jne
add
or
mov
int
push
adc
stc
bound
imul
in
push
mov
lods
mov
loop
fdivs
fwait
push
mov
movsb
insl
test
movsl
dec
lret
aas
adc
adc
and
scas
jecxz
lods
and
movsb
or
cmpsl
dec
or
pop
and
repnz
jle
loope
xchg
and
movsb
xchg
xchg
fwait
inc
bnd
pop
mov
jl
orb
adc
in
shll
fdivrs
test
test
lahf
dec
xor
pushl
sub
mov
std
sbb
xchg
ret
cmp
pushf
xchg
push
xor
frstor
aaa
push
movsb
mov
stc
push
je
push
sti
scas
aaa
mov
pop
xor
push
stos
icebp
mov
sbbb
lcall
loop
aas
jnp
push
pusha
rclb
shll
imul
jecxz
in
sbb
or
pusha
fcomi
scas
xor
mov
dec
sub
lahf
nop
lret
shlb
mov
inc
jb
and
dec
popa
and
and
fsubl
movsl
rclb
cmp
bnd
push
sarl
mov
pop
pop
test
adc
jbe
push
divb
push
icebp
cs
in
hlt
inc
in
movsl
and
out
je
adc
js
pop
or
xor
mov
orl
lret
mov
jecxz
out
scas
clc
cltd
rcl
pop
cmp
outsb
or
jnp
aad
add
sub
pusha
xchg
iret
xchg
cli
xchg
and
and
push
xor
jecxz
cltd
lock
dec
jmp
inc
nop
out
mov
roll
push
xchg
lahf
jno
fildl
mov
stc
into
xchg
dec
sbb
negl
xor
movsb
jno
int
mov
and
lea
jg
jp
pushf
dec
sbb
mov
lods
lods
into
sub
aad
push
outsb
cmp
cmp
mov
test
loop
sub
int
sbbb
and
dec
mov
inc
outsb
cmp
aaa
in
fsub
fstps
cmp
jmp
scas
inc
fxam
fists
and
insl
repz
jb
pop
aas
mov
dec
jp
adc
and
hlt
sub
push
repnz
sbb
mov
out
mov
clc
xchg
xchg
push
sbb
cli
pop
lods
scas
ds
xchg
xor
dec
add
shlb
scas
mov
ss
icebp
or
mov
in
or
cmp
pop
mov
int
mul
inc
test
adc
fdivrl
ret
xchg
in
dec
xchg
stos
sub
jb
mov
mov
push
mov
andb
ret
xchg
push
jns
xor
insl
cli
cli
fcomip
jb
loop
std
jl
and
mov
cli
bound
movsl
jb
push
rol
and
addr16
mov
popf
mov
xchg
xor
sbb
das
jle
jge
dec
dec
icebp
sub
out
xchg
adc
cmp
js
or
nop
out
lahf
pop
pop
mov
fsubr
xor
jmp
xchg
arpl
lds
mov
xor
pop
xchg
cld
push
xor
pushf
dec
test
dec
je
ret
cmp
out
adc
cmp
adc
shll
in
and
xor
loop
fmull
jae
mov
imul
test
sarl
adc
pop
pop
mov
xchg
je
mov
out
xchg
xor
in
int3
push
xlat
mov
aaa
scas
adc
inc
movsl
adc
adc
sbb
sbb
and
les
ja
movsb
frstor
push
hlt
cmp
cmp
jb
in
leave
pop
mov
add
movsl
xor
push
cmp
dec
lock
lret
scas
inc
testb
fidivs
sbb
xchg
test
dec
sbb
pop
orb
and
mov
incb
xor
sbb
dec
shll
bound
xor
nop
jl
iret
out
lret
and
jbe
lods
mov
jbe
imul
stc
sub
inc
fsts
fistpll
fisubrl
add
test
lock
xor
sub
das
stos
inc
cmpsl
icebp
mov
sub
push
sub
cmp
scas
lcall
shrb
dec
dec
dec
stc
divb
mov
leave
mov
xchg
xchg
in
lret
jae
dec
js
mov
push
push
adc
jb
inc
pop
out
xlat
mov
mov
je
lods
xchg
mov
es
mov
orb
jae
int
jmp
cmp
cs
aas
xor
fisubl
jl
xchg
mov
loopne
and
insb
gs
and
popa
jno
inc
fisttps
sub
sbb
jge
shl
mov
or
aam
bound
pop
mov
add
popa
xchg
mov
adc
outsl
ja
lcall
popf
mov
lea
leave
sbb
es
xorl
xor
std
dec
into
push
mov
xor
mov
adc
adc
int3
fs
cmp
xchg
jl
aam
sbb
sub
outsb
adc
cld
fistl
pop
movsb
rcl
xchg
lock
jo
mov
sahf
cmpsb
out
push
fs
mov
movl
int3
or
push
std
or
pop
scas
insb
lahf
imul
jl
rcll
cld
jmp
cs
inc
add
outsl
sub
aaa
cld
mov
iret
cltd
ja
xchg
adc
shlb
jae
xchg
hlt
xlat
fs
inc
loopne
push
pop
dec
cmp
setnp
div
pop
pop
pop
dec
jne
rcrl
test
sbb
or
push
or
mov
gs
loop
pop
lods
mov
push
push
ret
lret
icebp
test
fildll
sub
mov
outsl
sbb
arpl
in
frstor
iret
push
push
cmp
out
dec
aam
pop
es
sub
filds
out
mov
cmpsb
adc
adc
outsl
pop
fisttpll
loopne
mov
inc
test
jnp
xchg
cmp
movsl
push
shlb
lods
cltd
cwtl
dec
jl
cmp
sub
mov
sub
add
inc
mov
and
pop
dec
inc
rcll
mov
xor
and
fistpl
cmc
mov
mov
jg
lods
cli
insb
add
jbe
jl
xor
cmp
mov
and
inc
out
sbb
sbbl
out
mov
aaa
xchg
adc
cwtl
xchg
addr16
mov
mov
mov
push
or
in
push
arpl
sub
mov
xchg
int
sarl
out
imul
inc
outsl
shl
repnz
fwait
push
xchg
sub
repnz
dec
push
aam
in
push
outsb
out
fbstp
lret
jb
pop
stos
ret
sbb
loopne,pt
sbb
add
outsb
jbe
inc
into
aam
and
or
imul
outsb
add
mov
pushf
cmpb
inc
bound
ljmp
aas
adc
xchg
sub
outsl
das
jns
mov
xor
aas
dec
enter
aam
movsb
xchg
cs
push
xchg
sti
xlat
push
push
xchg
add
je
movsb
outsb
cmp
jp
fcoml
cmp
adc
imul
adc
pop
pusha
mov
addr16
add
mov
jle
xlat
loop
inc
pop
lret
fs
loopne
pop
mov
popf
imul
in
addr16
fidivs
std
and
shr
std
clc
sub
clc
fdivrl
lds
movsl
xchg
cmp
fisttpl
insl
push
rcl
jmp
mov
cmp
jb
xchg
out
dec
in
xchg
lcall
popa
outsl
movsl
add
inc
mov
cmp
mov
jbe
movsb
fadds
js,pt
and
xor
dec
repnz
ret
mov
adc
ret
ja
movsb
pop
jnp
sbb
or
mov
push
out
iret
push
shlb
sub
add
sub
stos
nop
xchg
test
adc
fisubrl
or
push
mov
dec
mov
mov
dec
jmp
add
push
jge
out
scas
adc
push
add
aas
and
sahf
es
mov
or
xchg
add
shlb
sbb
push
insl
or
adcb
js
enter
dec
mov
lcall
xor
xor
pop
add
mov
inc
int3
popa
scas
iret
out
pop
push
add
cmp
jb
sbb
inc
aad
cltd
mov
loopne
stos
mov
sahf
xor
jb
ret
repnz
das
xor
jae
test
cmp
pop
loopne
jno
fisttpll
jecxz
out
out
test
jns
jno
sub
in
inc
cmc
add
pop
push
cltd
sbb
push
int3
subb
data16
js
out
movsb
es
add
mov
mov
push
sub
stc
imul
xor
gs
sbb
inc
pop
stos
cmp
es
push
push
lods
out
arpl
sub
mov
or
js
daa
cmp
pop
aas
aas
pushf
sub
inc
sti
ds
pop
cmc
addl
lock
inc
cs
enter
sbb
aas
decb
mov
out
stos
sbb
and
push
in
xor
into
hlt
arpl
out
cmp
sbb
cmpsl
popa
push
frndint
mov
push
lds
fisttpl
and
xor
insb
in
xchg
add
repnz
xor
inc
insb
repnz
test
xchg
jnp
div
jb
xchg
inc
data16
ds
add
into
sub
jo
xor
shl
cmc
repnz
dec
lods
and
push
bound
sub
push
mov
or
push
inc
stc
adc
inc
in
mov
cwtl
das
dec
mov
rclb
mov
push
push
fimull
mov
test
scas
sti
test
scas
test
fcomps
push
jp,pn
push
loop
xchg
push
pop
hlt
mov
jecxz
xchg
stos
in
rcrb
mov
out
aaa
adc
fisubrl
jns
or
aaa
shlb
out
test
dec
inc
jge
xchg
add
inc
sbb
pop
pop
mov
shll
push
xchg
test
cld
sbb
inc
shrl
push
cwtl
insl
xchg
je
cs
movsl
data16
lods
es
cmp
insl
xchg
push
push
rorb
test
dec
fiaddl
pushf
divl
xchg
sbb
adc
lcall
push
xor
sbb
cmpb
dec
mov
cvtdq2ps
xchg
cmp
jmp
jecxz
std
cli
mov
inc
imul
sbb
inc
cmp
xchg
sahf
push
xchg
scas
outsl
loope
ret
outsb
in
loop
lret
ud1
sti
filds
sub
movsl
clc
mov
inc
mov
push
cmp
pop
shrl
xor
ret
pop
xchg
sbb
mov
pusha
pop
and
cltd
insl
add
fistl
rorb
inc
xor
xlat
and
subb
fs
inc
jb
inc
adc
mov
push
jg
gs
dec
ror
inc
lahf
lds
nop
clc
mov
fs
xchg
push
jne
movl
mov
mov
push
pushf
mov
imul
mov
cmc
rcrb
or
mov
fstps
add
jmp
lahf
and
mov
or
sbb
cmp
mov
pushl
add
xlat
ficompl
rorl
test
ja
cltd
inc
cmc
xchg
dec
jbe
aam
gs
mov
sub
push
adc
fiadds
pop
icebp
inc
jno
repnz
bndldx
mov
and
imul
or
lret
mov
or
lcall
pop
mov
std
mov
jge
inc
inc
popf
sbb
pop
in
movsl
dec
jb
and
pop
dec
mov
call
out
rcrl
inc
lcall
inc
mov
rclb
push
add
lds
imul
pop
fldcw
push
mov
and
stc
sbb
jae
xchg
mov
dec
add
ja
dec
dec
cmpsb
ja
push
clc
out
push
nop
das
mov
jno
iret
ret
js
test
inc
stc
lcall
je
mov
add
repnz
loope
out
test
addb
pusha
cmp
inc
mov
vpunpckhbw
lock
rorl
repnz
dec
push
test
or
and
fldenv
lret
das
cltd
lahf
mov
cli
stc
hlt
or
and
out
mov
filds
pushf
adc
into
mov
ljmp
xchg
test
mov
movsb
hlt
push
xchg
scas
dec
lahf
push
pusha
or
xchg
lahf
fldcw
ret
daa
xchg
es
mov
push
aad
aad
repz
jp
inc
lods
imul
lret
dec
ja
jge
cld
movsb
rdtsc
sub
inc
ss
mull
or
jno
add
push
dec
ds
sbb
mov
shld
jbe
cli
add
jbe
cmp
sarb
ret
xchg
out
dec
xor
dec
or
vcvtdq2ps
idiv
fucomi
mov
sub
ljmp
pushf
xchg
or
in
fwait
adc
adc
push
dec
cmp
adc
mov
add
mov
clc
push
roll
dec
xor
stos
test
dec
mov
aam
mov
xchg
std
rcrl
mov
mov
xchg
inc
ja
sbb
andps
int3
test
sbb
test
jg
pop
mov
movsb
es
adc
lods
cmp
sbb
dec
enter
sub
addr16
jns
inc
es
add
pop
shll
gs
mov
out
mov
jne,pn
les
test
xchg
cmp
mov
in
or
aam
xor
dec
dec
clc
mov
or
pop
imul
insb
xchg
daa
sahf
mov
push
fadds
push
pop
loope
xchg
cwtl
jno
and
imul
adc
sahf
lods
inc
data16
stos
mov
test
outsb
adc
sbb
sahf
jg
hlt
mull
cmc
ss
enter
mov
mov
xor
fdivrl
mov
mov
push
mov
mov
out
mov
xchg
xchg
and
cli
push
adc
or
dec
call
std
jne
mov
aam
test
enter
call
or
pop
push
popa
xchg
push
or
in
cwtl
insl
jp
push
dec
ja
cmp
jb
iret
pusha
mov
xorl
lcall
out
jg
nop
int3
sub
jbe
jmp
xor
adc
adc
cmpb
push
push
int
dec
xchg
jnp
sub
hlt
int
cmp
pop
out
iret
dec
xchg
inc
sahf
cmpsl
int
sbb
outsb
int3
jae
bound
xor
fsubrs
push
cmp
icebp
pop
sbb
aad
insl
sub
pop
test
int
add
jnp
movntq
hlt
sbb
call
enter
js
jmp
pop
in
sbbb
inc
mov
rorb
das
xchg
jmp
rcrb
pop
add
imul
fimull
out
movsl
or
pop
scas
ja
movsb
pushf
int
ss
inc
aam
addl
xchg
adc
popf
lret
cmp
add
in
decb
cmp
dec
lcall
push
jo
sub
jb
inc
sbb
mov
jl
orb
adc
mov
sahf
or
sti
cltd
dec
push
repz
sbb
or
dec
sub
push
jl
out
rorb
and
xchg
fcompl
enter
cltd
mov
push
arpl
sbb
ljmp
loope
test
aam
inc
imul
das
test
push
mov
or
jne
mov
test
pop
xchg
xchg
lock
stos
mov
loope
jecxz
jl
rol
aas
imul
or
sbb
cwtl
adc
mov
lods
and
adcb
jne
out
das
inc
gs
ret
cld
mov
push
das
aad
fisttpl
jecxz
jecxz
pop
hlt
inc
in
jb
mov
jns
dec
pop
mov
xchg
adc
xor
pop
cs
mov
rorb
incl
cmp
push
mov
fsubrs
pop
sbb
inc
push
xchg
je
gs
lods
ficomps
int
lcall
push
call
sbb
ljmp
iret
fsubl
data16
lock
pushl
mov
popa
gs
call
pop
outsl
data16
inc
push
sbb
xor
sbb
int
pop
adc
sahf
cmpsl
dec
adc
pop
mov
dec
mov
add
cld
sbb
push
pop
pushf
cmp
push
dec
dec
cmp
cmp
mov
enter
sbb
mulb
lock
xor
adc
push
sub
filds
adc
leave
test
and
or
test
in
mov
loopne
and
jmp
test
fmuls
mov
lods
push
add
lahf
cmc
inc
lcall
pop
setnp
gs
adc
gs
faddl
cmpsl
popf
scas
xchg
popa
daa
pop
in
push
int
sbb
pushf
jbe
sbb
enter
sahf
jg
jge
sub
leave
xchg
xor
aas
push
xor
sbb
mov
sti
mov
lahf
ljmp
mov
push
cld
bound
sbb
sbb
dec
sahf
in
jge
out
cmp
stos
xrelease
sbb
lahf
popa
mov
adc
mov
xchg
dec
aad
aam
das
pextrw
je
mov
mov
pushf
sbb
sarl
sbb
pop
cmp
sub
rdpmc
int
imul
int
mov
js
cmc
insb
test
loop
cmpb
mov
cmpsb
push
or
fisttpl
inc
mov
arpl
xlat
imul
sbb
inc
dec
shr
mov
inc
push
sbb
xchg
cld
dec
jg
out
ss
or
jbe
push
and
pusha
adc
bound
adc
pop
push
jbe
addr16
push
pop
dec
sti
xor
adc
adc
push
out
add
fildll
leave
jg
inc
and
scas
dec
dec
sbb
adcl
ljmp
leave
push
std
and
mov
daa
jp
add
adc
mov
fs
sarb
lret
inc
mov
sbbb
outsl
movsb
push
dec
xchg
xchg
and
iret
xchg
stos
jecxz
lods
rorl
sbb
lret
pop
xchg
or
xchg
jno
int
orl
xor
xor
mov
call
mov
fistl
adc
pop
rolb
repnz
repz
jnp
sbb
out
popa
xorb
sbbl
addl
dec
dec
push
jmp
int
or
clc
inc
sub
and
shll
adc
out
cmp
movsl
cld
repz
pop
dec
add
inc
scas
sbb
xlat
cmpsb
push
jae
cs
popa
std
sbbl
adc
aam
and
aas
mov
push
pop
mov
cs
inc
sbb
sbb
fisubs
mov
data16
ficoms
mov
popa
gs
cmp
in
dec
cmp
xlat
orb
push
gs
push
or
jo
xor
sbb
xchg
cmp
mov
sbb
stos
push
adc
mov
andb
cmpsb
cmpl
test
mov
pop
mov
push
test
pop
push
lret
out
lea
dec
cmc
add
ljmp
xchg
cmpsb
nop
icebp
jg
sti
sub
test
inc
testl
stos
jns
fstpl
cmp
push
sbb
divl
or
adc
sti
dec
daa
sub
imul
sbb
xchg
out
mov
inc
and
dec
ror
and
mov
lret
cmp
icebp
ret
sbb
push
pop
pushf
cmp
push
jno
pop
inc
leave
andb
jne
js
test
pop
movsl
enter
testb
dec
out
imul
ljmp
cmp
inc
jne
mov
gs
mov
jmp
xor
test
sbbb
test
dec
mov
ret
mov
movsl
fisttpll
dec
cwtl
ljmp
xlat
hlt
in
or
adc
mov
mov
xor
in
and
rcl
fsubrl
call
test
mov
push
push
push
mov
jmp
sub
sbbb
test
push
lods
cld
push
popf
int
jge
push
pop
roll
in
xchg
push
inc
pop
outsb
ljmp
fnop
mov
pop
jge
xchg
je
test
mov
leave
mov
jmp
xlat
int
pop
jge
cmpb
mov
cmpsl
test
xor
fdivp
inc
aad
ja
mov
cmp
push
aas
xchg
fsubrl
jmp
out
sbb
aam
and
mov
cwtl
sbb
mov
hlt
bound
jmp
adc
insl
loop
shll
add
mov
rorb
inc
daa
pop
xor
lret
xorb
push
hlt
mov
mov
xor
sti
xorb
xchg
or
insb
das
icebp
std
xchg
jbe
data16
es
lret
loop
push
sahf
add
cmc
imul
mov
mov
push
rcrl
cld
add
jnp
es
mov
and
outsb
mov
xchg
test
sub
xor
dec
inc
cltd
imul
cld
mov
iret
nopl
jns
pop
std
xchg
pop
out
mov
scas
xchg
add
int
pop
adc
sahf
cmpsl
lods
push
mov
inc
loopne
aam
push
sar
or
push
mov
sbb
pushf
pushf
jns
pop
repnz
test
push
aad
or
lock
or
imul
mov
sbb
xchg
js
pop
xchg
int
aam
and
push
xchg
xor
loopne
stc
fisttpll
add
add
jle
andb
mov
popa
xor
enter
jle
cmp
pop
cmp
cmp
nop
fdiv
jmp
adc
dec
jno
leave
test
pop
call
xchg
mov
stc
ja
push
cltd
test
add
sub
mov
loopne
dec
sti
shlb
pop
sbb
or
push
popf
int
jge
push
jne
dec
cmp
pushf
pop
in
mov
jl
loop
mov
test
loop
pop
jbe
movsl
mov
cmpsl
rclb
and
push
leave
push
fisubrs
or
fmuls
pop
xchg
int
aam
and
das
call
popf
mov
int
mov
mov
mov
shr
sbb
adc
sub
mov
lret
or
lcall
popf
mov
scas
or
cmp
adc
loop
lea
inc
aad
xchg
addr16
popl
add
lock
add
pop
aas
mov
push
add
int
xor
push
mov
mov
mov
sub
test
cmp
adc
jle
popf
add
sbb
int
sahf
inc
ret
cmp
jb
push
pop
xchg
and
xchg
hlt
xchg
add
inc
pop
xor
jo
rol
mov
mov
stos
dec
ret
dec
mov
lods
outsb
sbb
stos
and
out
subl
push
arpl
cltd
incb
mov
dec
loope
pop
hlt
mov
sbb
sbbb
dec
or
lahf
enter
ss
loop
ret
testb
mov
mov
rorl
cs
ret
cmp
mov
xor
lret
out
adc
or
int3
mov
arpl
outsl
insl
jne
gs
and
mov
mov
push
push
addb
mov
data16
stos
push
push
iret
push
adc
fisttps
repnz
rclb
ljmp
pop
cmp
dec
leave
loopne
outsb
cli
test
inc
js
sub
xchg
mov
out
ret
xchg
xor
mov
pop
jne
cmp
std
xchg
call
sbb
lods
and
sbb
sub
test
pop
xor
je
dec
incl
mov
xchg
cmovp
inc
mov
icebp
xor
lds
dec
mul
stc
pop
or
ljmp
cld
xchg
pop
jns
test
or
loop
js
inc
cmp
lods
jg
mov
mov
in
popf
and
inc
inc
pop
mov
xchg
insb
pop
clc
mov
pop
int3
aad
dec
mov
mov
mov
cs
int
sub
sbb
mov
std
push
sbb
notl
sahf
inc
mov
les
dec
cmp
repnz
mov
das
stos
xchg
adcb
pop
mov
push
sbb
adc
repz
inc
pop
shll
int
loope
and
dec
mov
jae
dec
insb
push
scas
stos
cmpsl
mov
sbb
out
int3
dec
lcall
sub
dec
mov
dec
mov
jl
in
insb
push
mov
push
pusha
push
sub
stos
adc
xor
adcl
dec
data16
xchg
mov
lcall
dec
ds
inc
or
test
cmp
cli
decb
jns
jae
adc
stc
push
ficomps
shl
loopne
cmp
test
push
mov
mov
or
pop
cwtl
xchg
lock
mov
add
pop
sub
cmp
xor
mov
sahf
out
xor
inc
mov
jae
or
hlt
lcall
ds
mov
je
dec
mov
into
loope
arpl
or
xor
inc
ss
inc
jb
sbb
int3
je
and
in
sub
dec
imul
jge
push
cmc
cmp
cwtl
enter
jl
sbb
icebp
cmp
mov
rcr
lds
xchg
fdivl
lea
stos
test
jmp
fmul
xchg
pop
dec
add
sti
jne
mov
out
lods
cwtl
adcb
xor
jl
mov
pushf
into
sbb
sub
cmpsl
sub
mov
add
cmp
or
dec
aad
push
mov
fdivrs
inc
je
insl
and
je
icebp
jae
mov
jbe
adc
and
dec
or
mov
pop
fisttps
out
xlat
push
adc
push
insb
mov
ret
imul
or
cmpsl
or
in
push
xchg
pop
jmp
gs
fs
mov
sub
cld
imul
incb
les
faddp
inc
inc
and
stos
or
mov
fldcw
out
push
xchg
mov
rorl
pop
add
inc
and
pop
incb
les
mov
popf
xchg
lea
lret
sub
jl
add
addr16
push
jbe
movsb
pop
dec
pop
xlat
dec
xorb
lods
rcrl
mov
sbb
int3
cli
push
cwtl
dec
loope
jo
sub
pusha
push
or
ja
jecxz
jmp
adc
popa
dec
or
pop
lea
inc
jbe
stos
pop
inc
sub
faddl
sub
sbb
pop
ret
popf
inc
jl
lods
jecxz
push
mov
pop
repz
or
mov
je
dec
test
xchg
in
shrb
adcl
lret
and
mov
ja
xor
insl
ret
jp
sti
sbbb
leave
add
inc
cmc
fwait
iret
outsb
push
push
lret
sbbb
push
mov
fsubrl
sbb
out
sub
mov
dec
mov
shr
sbb
xlat
rolb
jl
int
mov
xorb
lahf
ds
into
pause
nop
mov
shrl
arpl
shll
mov
insl
pop
cmp
sar
adc
xor
les
jg
movsb
cld
es
repnz
xchg
mov
scas
push
sarb
shll
jb
shlb
pop
test
mov
add
mov
jmp
insl
jge
and
mov
stos
pop
jae
jns
leave
jl
lock
mov
cld
in
or
rolb
arpl
insb
mov
cmp
leave
jnp
dec
sbb
hlt
inc
mov
pop
dec
imull
add
mov
scas
or
imul
movsl
test
jmp
int
stos
adc
add
icebp
mul
push
pop
daa
jno
out
das
sub
dec
adc
icebp
divl
fisttps
xor
dec
stos
loop
pop
cmpsb
mov
mov
push
sbb
cmp
or
sbb
fcmovb
jp
sti
push
int3
sbb
shl
dec
movsl
pop
jge
clc
xchg
xor
in
dec
adc
outsb
rcrb
pop
mov
push
mov
bound
repz
sbb
dec
xlat
movsl
jmp
mov
jnp
jno
call
std
shlb
adc
sbb
leave
stc
pushf
and
fwait
xor
sub
outsl
cmpsb
jo
addr16
das
cli
xor
jbe
add
adc
push
sub
in
push
cmp
jecxz
dec
gs
aad
jo
jge
xchg
ljmp
mov
pop
fidivs
sbb
push
cli
xor
loope
push
popf
insl
ljmp
cmp
leave
arpl
mov
outsl
push
loop
and
and
xchg
or
push
pop
lock
into
out
cld
aad
add
xchg
sti
mov
dec
add
imul
daa
inc
es
cs
sbbb
cmp
lcall
ja
lods
cmpsb
es
outsl
push
les
bound
cmpsl
out
int
cmp
adc
xchg
and
repz
dec
je
push
loope
jo
std
push
mov
add
pop
leave
mov
sub
int3
lret
or
cltd
xchg
adc
push
pop
push
je
das
inc
test
enter
into
adc
xor
jb
jo
or
fcomps
xor
mov
push
jns
adc
imull
and
jmp
je
js
jl
pop
pop
dec
mov
das
fdivl
add
adc
lock
movsb
add
into
filds
hlt
push
dec
lret
leave
loopne
jbe
pop
cmc
adc
inc
jae
loope
sbb
fisttps
mov
fcoml
xchg
jl
enter
shll
and
lahf
jae
xor
cmp
jno
push
add
sub
ret
lcall
pop
pop
jne
cmp
cld
xor
ja
cmp
lahf
mov
insl
or
scas
ret
subl
scas
or
movsl
ret
in
sub
mov
add
or
inc
stos
jp
cmp
cmpsl
dec
cs
jns
sub
cmc
sub
xchg
cs
stos
mov
add
addb
test
lods
adc
pop
mov
adcb
sub
mov
mov
jnp
cmp
mov
mov
iret
jmp
sbb
lods
and
xchg
fs
imul
jmp
pop
movsl
lods
mov
xchg
cld
push
pop
xchg
jne
xchg
inc
fisttps
sbb
je
rorl
pop
pop
pop
cs
stc
xchg
repz
cmp
sbb
out
lock
push
cmpsl
stos
test
ret
sub
cmpl
add
jb
cli
into
mov
inc
mov
setbe
fldcw
mov
addr16
pop
sbb
sbb
sub
aaa
negl
push
mov
xchg
mov
push
adc
aaa
iret
sub
adc
in
mov
dec
ret
add
xchg
in
shlb
data16
adc
and
push
mov
loopne
cwtl
or
lcall
insl
test
mov
mov
cmp
dec
int3
cld
test
lods
mov
lret
ret
dec
ja
ret
add
in
cmpsb
cmpsl
inc
push
notl
shl
jp
mov
mov
push
subb
jmp
mov
sub
cmp
dec
or
cmp
and
out
lods
adc
movb
dec
addr16
dec
push
sbbb
cli
rclb
pop
andb
xchg
out
add
pop
cmp
push
loopne
or
pop
mov
aam
fildll
push
push
in
push
xchg
lds
leave
inc
adc
inc
je
idivl
and
inc
testb
jns
pop
call
mov
xchg
jb
mov
inc
ds
int
push
push
cmpb
scas
popa
mov
pop
aas
clc
fsubrs
jmp
xchg
divl
adc
fidivl
lcall
sbb
daa
cmc
out
xchg
imul
shrl
mov
sbb
add
dec
mov
and
mov
popa
push
out
loopne
cmp
lret
lahf
lods
daa
imul
js
inc
incb
in
out
inc
dec
mov
dec
lcall
or
in
pushl
inc
pop
subl
or
je
add
int3
pop
outsl
and
in
adc
adc
ljmp
sarb
dec
xchg
pop
mov
and
arpl
sub
in
sbb
push
cltd
inc
cmp
mov
cld
adc
add
mov
hlt
lea
mov
cld
ss
jge
sbb
lret
test
ja
ja
mov
mov
not
or
push
or
clc
xchg
or
jns
sub
arpl
cld
cmc
faddp
stos
xchg
mov
sbb
mov
fdivrl
push
cmp
xor
test
subb
pop
add
div
daa
jle
inc
jno
push
loope
mov
jns
pop
sub
test
filds
adc
mov
pop
sahf
mov
lret
shlb
pop
sbb
lds
pop
aas
adc
outsb
xchg
fadd
shlb
push
mov
in
cmp
sub
mov
dec
mov
jae
aas
imul
push
mov
or
lret
or
ret
das
roll
mov
sahf
dec
fcomps
and
add
mov
sub
into
add
lods
sbb
fisubrs
pop
jae
push
imulb
cmpsl
loopne
leave
rcr
add
pop
push
fsubr
mov
pop
push
orl
sbb
lret
sub
xchg
inc
mov
pop
or
add
test
imul
or
jge
mov
cwtl
xchg
push
imul
mov
repz
scas
insb
pop
xor
ret
mov
fcomi
pop
cmpsb
lahf
addr16
push
in
mov
movsb
lods
sub
mov
pop
push
adc
out
dec
push
xor
rcrb
cmp
add
sbb
fs
mov
xchg
jo
pop
mov
and
sub
out
and
xchg
xor
or
cmp
xor
addr16
push
aad
test
test
mov
sub
mov
lea
xlat
mov
push
adc
movb
dec
addr16
dec
push
sbbb
cli
rclb
pop
andb
xchg
out
pop
cwtl
sbb
xchg
sbb
into
test
int3
in
and
inc
cmp
addb
add
or
xchg
mov
ds
rorb
dec
dec
fiaddl
mov
xchg
or
in
jb
push
enter
ljmp
push
pop
das
xor
pop
jne
or
scas
cmp
push
xor
cmpl
rcll
call
test
jns
jbe
rcll
jmp
mov
fmull
shrl
adc
push
pop
mov
and
mov
jae
sub
xchg
xorl
xchg
xchg
jecxz
mov
xchg
add
cmp
xchg
neg
mov
or
in
ja
pushf
mov
sub
inc
stos
mov
cmc
in
loop
leave
ret
insl
cli
cmpsl
cmpb
xor
or
adc
push
or
xchg
outsb
das
addr16
gs
fists
xchg
xchg
mov
push
leave
jl
jne
cld
inc
rcrl
jae
push
sahf
in
add
push
cltd
cmp
jno
sahf
add
mov
fnsave
dec
ljmp
xchg
and
shlb
adc
lock
mov
jl,pn
jb
call
cmp
sbb
jae
inc
cmp
add
add
gs
xchg
imul
push
outsb
popa
xor
xchg
mov
jmp
fisubrl
cmp
jne
mov
dec
mov
mov
add
inc
out
sbb
aad
pop
push
test
xor
sahf
mov
mov
test
jle
mov
pop
lds
out
not
stos
inc
adc
outsl
or
std
mov
shlb
or
scas
adc
add
fisubl
dec
mov
movsl
push
sub
imul
jae
daa
fidivl
dec
jno
sar
push
adc
or
movb
inc
push
cltd
movsb
push
and
shlb
or
sub
xor
adc
sbb
sub
imul
push
add
jnp
xor
shll
fs
in
adc
push
and
mov
cli
push
dec
push
out
jmp
jno
or
xlat
fwait
or
mov
inc
lcall
add
movsl
mov
repz
sahf
jg
xor
icebp
or
lahf
daa
orb
pop
int
mov
sbb
dec
fidivrl
dec
sbb
aam
aaa
push
cmc
pop
adc
xor
js
xorl
xchg
jl
push
ljmp
adcb
sti
push
and
mov
into
xor
or
rorb
jmp
xchg
daa
jmp
inc
std
je
imul
and
jecxz
bound
push
mov
mov
outsl
jmp
cwtl
jmp
pop
adc
test
and
popa
mov
mov
mov
sbb
push
mov
pop
lds
mov
das
cmp
sarb
push
xchg
or
rorb
jmp
mov
in
repnz
je
imul
mov
mull
adc
inc
dec
xchg
aad
fistpll
mov
dec
popa
insb
pushf
and
or
ret
jbe
mov
lret
popa
mov
or
ret
frstor
push
in
out
int3
dec
fbstp
mov
das
cmp
stc
pop
inc
pop
jl
xor
dec
add
fldenv
pop
rcrl
aam
xor
ret
in
jle
mov
outsl
fdivr
dec
inc
popa
jnp
jns
je
out
nop
jecxz
adc
cmp
and
and
clc
adc
int3
jmp
mov
xchg
and
fildll
pop
cld
fwait
pop
push
adc
bound
fs
ret
orb
pop
xchg
dec
xchg
mov
cmp
fwait
cmp
and
lock
push
mov
and
mov
cmpsl
xor
cmpsl
stos
mov
mov
jns
in
xchg
push
daa
dec
inc
sbb
ficoms
jecxz
inc
jg
inc
fcoms
and
in
mov
inc
mov
sbb
push
jbe
jbe
push
sub
cmp
inc
pop
pushl
scas
jne
xor
cmp
in
push
jnp
xor
ret
int3
sbb
int3
push
iret
mov
pop
push
cmc
adc
lods
mov
jno
leave
dec
mov
dec
shlb
xlat
lods
pop
or
call
dec
mov
jle
ds
add
insl
hlt
sbb
mov
cmp
and
mov
jge
call
xchg
adc
mov
jb
jne
xor
pop
subps
dec
push
subl
adc
sub
cmpsl
and
dec
cmpsl
fldenv
mov
xor
aad
pop
push
lea
ss
add
push
cmp
in
adc
repnz
cmp
cmp
mov
lcall
cwtl
inc
mov
xchg
add
dec
cmpsl
sbbl
jmp
and
popa
aad
into
data16
sbb
les
mov
cmp
xchg
insb
stos
insl
enter
idivb
adc
shlb
xchg
loope
leave
lret
cmp
sbb
enter
sub
mov
insl
je
sub
mov
mov
cmpsb
or
sbb
inc
fcmovnu
in
inc
lret
outsb
inc
bound
pop
mull
fnstcw
sub
lret
sub
adc
lock
pop
dec
cli
push
cwtl
dec
loope
jo
dec
dec
dec
fsubrs
ja
ret
xchg
data16
inc
mov
mov
mov
and
dec
ret
jp
mov
ffree
xchg
adc
scas
movsb
mov
jle
jp
inc
and
gs
imul
push
lock
adc
or
aaa
mulb
test
mov
sbb
movsb
xchg
scas
push
push
ja,pn
pusha
aaa
leave
jl
repnz
fdivrl
sub
lcall
mov
dec
cwtl
test
dec
push
fisttpl
jmp
lahf
mov
fnstsw
pop
out
mov
fwait
ret
sub
mov
and
es
jno
fistpl
sarb
ss
cmp
les
cmpsb
push
pop
adc
imull
dec
push
loopne
cli
mov
addl
hlt
cmp
push
lock
and
call
mov
es
inc
mov
mov
lods
rcrb
iret
test
mov
cltd
es
xor
test
mov
fwait
fwait
inc
das
add
inc
pop
shll
movsb
mov
lret
jge
rcrl
enter
cmp
test
es
fidivl
cmpb
cmp
imull
in
imul
loopne
fsubr
jns
test
shlb
xchg
int3
out
lds
movsl
adc
cli
jmp
ljmp
add
mov
outsb
call
lret
cwtl
adc
or
pop
repnz
push
fs
aaa
and
cli
in
push
or
lods
mov
push
out
xchg
mov
jbe
jmp
cmpsl
pop
pusha
fisttpl
sbbb
inc
and
dec
ror
gs
inc
xchg
add
cwtl
test
les
inc
daa
sbb
inc
test
cld
push
popf
int
jge
push
setle
push
push
cmc
cmp
mov
mov
sub
adc
inc
lcall
sbb
adc
pop
mov
or
test
adc
int
pop
adc
sahf
cmpsl
pavgb
inc
aaa
jmp
cwtl
adc
lret
sbb
nop
mov
nop
test
gs
xchg
outsl
movsb
jae
lret
adc
into
stos
mov
or
jge
and
das
data16
and
and
scas
mov
push
cmp
xlat
sbb
pminub
adcb
loope
pop
loope
xor
jns
dec
pop
dec
and
enter
dec
mov
neg
shll
out
inc
pushf
leave
add
mov
and
jne
insb
loopne
iret
push
push
or
and
int
in
mov
jno
jne
lret
push
ljmp
sbb
xchg
jmp
push
and
idivl
add
and
rolb
shlb
push
mov
lret
cmc
mov
cmpb
stos
sarb
data16
mov
ror
xchg
les
lods
outsl
fimull
lcall
int3
sub
stos
inc
cli
out
inc
arpl
jo
hlt
pop
scas
dec
pushf
pop
xchg
pop
push
test
mov
xchg
repnz
or
bound
mov
mov
mov
popf
fs
dec
inc
lcall
insl
dec
or
int3
clc
ds
dec
push
xchg
pushw
out
xchg
mov
jbe
sti
mov
push
movsl
cmp
aad
mov
sbbl
pop
xor
push
mov
sarl
in
stos
pop
in
fcompl
mov
pop
xor
sti
sub
jo
aam
mov
and
mov
jbe
jmp
cmpsl
pop
pusha
fisttpl
sbbb
inc
and
dec
ror
aam
xor
mov
outsl
in
xchg
cs
imul
jle
in
fnstcw
lea
lea
jecxz
lahf
add
sahf
pop
dec
jns
add
sahf
lock
js
dec
jle
cmp
in
adc
sub
ljmp
std
cmpsb
xchg
sub
jns
xchg
push
rcl
out
bound
xchg
sbbl
sub
mov
sub
push
push
cmovs
inc
nop
pop
loopne
scas
sub
lods
jmp
push
orb
mulb
sahf
in
jns
pop
stos
ja
mov
aad
out
int
inc
sub
xchg
std
into
pop
imul
ds
xchg
jecxz
lea
rorl
fldt
push
icebp
cmp
inc
add
mov
pop
mov
ret
mov
pop
call
cmp
add
movsb
or
sti
jno
sub
fwait
jl
dec
dec
mov
and
add
mov
push
out
lea
enter
clc
outsb
hlt
sub
lods
sub
testl
inc
jg
sub
sub
mov
ja
cmp
mov
jle
sub
mov
out
insb
xor
mov
adc
dec
das
adc
scas
inc
or
sub
push
xchg
or
in
push
mov
es
inc
imul
pop
enter
cli
xchg
loope
cmp
xor
lahf
inc
cmp
sub
pop
cld
mov
dec
add
fldz
push
cltd
mov
add
jb
aam
mov
and
mov
jbe
jmp
cmpsl
pop
pusha
fisttpl
sbbb
inc
and
dec
ror
hlt
andl
out
inc
lods
add
clc
bound
xlat
repz
out
rcr
hlt
cwtl
jp
adc
sahf
mov
dec
or
in
jl
add
out
xchg
and
enter
pop
push
sub
lahf
loope
mov
cmp
mov
es
pop
mov
adc
sbb
inc
leave
mov
test
xor
fldenv
sbb
inc
orb
jb
adc
mov
add
and
iret
repz
and
and
mov
cli
loopne
xchg
es
mov
dec
inc
in
mov
fs
in
mov
cmp
ds
fdivs
jno
js
xchg
xchg
xor
cli
in
cmp
ffree
insl
push
repz
out
aas
scas
mov
dec
inc
or
pushf
stos
mov
aam
rorb
decl
xor
mov
leave
jb
pop
pop
or
pop
xchg
lods
adcl
jo
insl
stos
dec
ret
aam
xor
jecxz
shlb
or
add
dec
lcall
jno
rcrb
inc
push
dec
pusha
vunpckhps
lds
pop
cmp
call
sahf
scas
iret
cs
lret
stc
push
mov
lahf
outsb
imul
mov
add
mov
add
and
mov
sbb
lock
add
xchg
cmpsl
cs
and
repnz
stos
cli
lret
gs
loope
mov
addr16
rorl
loopne
leave
popf
fisttpl
cli
popa
cmc
in
add
scas
add
pop
aas
jg
sbb
sub
dec
or
adc
push
fldt
push
loop
popf
mov
ret
pop
addr16
rorl
loopne
inc
lds
cltd
mov
or
push
cli
fstpt
mov
push
mov
in
or
inc
clc
mov
inc
cli
jbe
mov
jnp
jecxz
pop
push
xchg
daa
pop
dec
scas
adc
cmp
fwait
js
xor
in
add
mov
out
cmp
nop
lods
sahf
lahf
push
call
insl
subl
subl
cmp
jl
stos
lcall
dec
nop
shlb
pop
call
sub
ja
push
aas
out
mov
rcll
jbe
les
add
jle
push
das
fcmovb
jno
cmp
movsl
sub
inc
outsl
jns
sahf
ret
mov
cmpl
adc
xchg
inc
cmp
pop
inc
pop
lods
lea
pop
inc
mov
gs
shlb
add
pop
push
in
or
repz
repnz
cltd
fninit
sbb
stos
nop
inc
fwait
xchg
mov
or
test
mov
outsb
xchg
dec
cwtl
adc
shlb
rcrl
mov
push
clc
sbbl
and
pop
cmp
inc
or
mov
into
push
ss
call
jmp
pop
push
xor
shll
or
imul
pop
outsl
mov
push
sub
mov
dec
sahf
mov
movsl
cmp
aad
out
pop
jbe
movsl
mov
cmpsl
rclb
jp
dec
mov
mov
lahf
into
cmp
and
mov
sbb
jo
add
xor
jecxz
imul
jmp
cmp
das
lods
sbbb
adc
pop
push
jae
push
imulb
cmpsl
loopne
leave
rcr
sbb
enter
mov
xchg
push
call
dec
mov
jle
ds
add
insl
hlt
sbb
cwtl
clc
icebp
or
lret
cltd
mov
in
jne
das
pop
sub
pop
movsb
sarl
add
jle
les
ret
ret
mov
orl
imul
loopne
aam
push
mov
lret
test
es
hlt
push
push
xor
testl
jns
enter
push
xchg
mov
lea
popf
mov
and
test
xchg
int3
daa
sub
mov
movl
movsb
mov
es
jl
stos
loope
mov
aas
aaa
xor
push
sahf
add
xor
sbb
add
pop
adc
mov
push
lods
mov
mov
and
sub
mov
inc
rcr
frstor
fmuls
inc
pop
movd
sub
xchg
fs
cmp
mov
push
add
out
loope
mov
js
ss
fs
lcall
xchg
insb
in
mov
out
inc
in
les
aas
add
add
sub
loopne
sar
sub
scas
addb
push
pop
adc
inc
sbb
aad
sbb
mov
dec
lcall
addr16
dec
lods
inc
inc
mov
pop
xlat
pusha
cs
add
inc
mov
xchg
push
push
sub
loopne
add
lret
mov
out
outsb
xchg
cli
inc
out
inc
sbb
stc
jo
lds
addr16
inc
test
stos
mov
or
jge
imul
outsb
xor
mov
mov
ret
push
movsl
adc
gs
jmp
insb
lret
cmp
adc
xchg
push
ljmp
shll
ret
push
in
lret
pushf
movsb
pop
aaa
lods
pop
mov
adc
sbbb
mov
negl
or
xlat
mov
lahf
adc
push
stos
ja
ret
aaa
add
xor
mov
lahf
data16
mov
clc
leave
das
jbe
adc
jnp
add
out
cmp
add
sbb
mov
popa
push
lret
mov
jno
leave
js
movsl
sahf
fldenv
jnp
inc
or
and
cmc
cmc
shl
sbb
iret
cmp
cmp
and
stc
adc
fmuls
imul
push
addb
sbb
add
mov
jmp
insl
clc
cmp
mov
fs
fcomip
mov
lock
cmpsb
sahf
mov
rcrl
dec
dec
push
insb
in
push
and
stc
cmpsb
sbb
fxch
cmp
fmul
int
xchg
sub
sub
stos
stos
and
lods
mov
push
sub
outsl
stos
jno
dec
pop
cmp
int
leave
xchg
ja
xchg
cs
ja
xlat
jle
mov
arpl
rcr
sbb
loope
xor
cs
jb
push
xchg
enter
pop
outsb
jecxz
fstpt
cmpsl
shll
loopne
nop
pop
aam
vpsubsw
and
and
test
add
in
cmc
test
pop
cmpsb
insl
pop
call
mov
pop
cmc
or
lods
divb
hlt
in
mov
aaa
loope
fidivs
push
movsl
shl
out
test
jge
xlat
mov
xchg
pop
pop
mov
out
xor
lods
xor
xchg
xchg
scas
sbbl
dec
test
lods
push
subb
xchg
stos
mov
shl
push
addb
loopne
ret
orb
outsb
shlb
pop
mov
stc
xchg
xchg
sbb
adc
imul
mov
xabort
pop
loope
cmp
adc
xor
xor
aas
roll
or
lret
mov
mov
out
jb
jb
adc
outsl
loop
pop
push
mov
pop
jle
pop
lcall
cwtl
mov
cmpsb
cmp
add
add
cs
cmp
cmpsb
add
loopne
cmp
mov
stc
scas
ret
sub
ss
ljmp
xchg
loope
pop
popa
into
xor
add
mov
cmpb
pushf
cmp
sub
fstpl
or
out
clc
add
mov
or
mov
jle
hlt
pop
adc
cs
pop
mov
pop
and
int3
pop
xor
jno
jle
xchg
repnz
shlb
andb
mov
jno
clc
sahf
in
sbb
mov
or
xor
cmpsb
test
les
inc
push
test
adc
je
xorb
inc
push
or
push
sbb
inc
push
mov
bound
pop
aaa
call
xor
es
sub
sbb
jle
cld
aas
push
sbb
gs
inc
cmp
stc
stos
imul
stos
adc
pop
adc
lret
mov
jae
push
lock
fwait
and
fisubrs
loope
repnz
pop
cld
inc
push
sub
adcb
inc
pop
sbb
scas
pop
pop
and
sti
dec
pop
jae
dec
clc
sub
inc
fidivrl
sarb
aad
jle
add
xchg
pop
faddp
push
scas
jle
je
ss
repnz
popf
push
push
idivb
out
sahf
in
repnz
arpl
cmp
mov
xor
in
or
push
roll
mov
dec
arpl
dec
sbb
cmp
push
xchg
pop
repz
imul
stos
push
pop
out
mov
sbb
sub
outsl
and
shll
repz
sub
push
stos
test
add
mov
mov
mov
inc
in
push
adc
inc
add
push
inc
inc
loopne
cmp
inc
mov
popa
fiaddl
inc
addb
mov
stos
cli
inc
dec
stos
xchg
cmp
cmp
popa
push
nop
js
imul
stos
enter
rorl
push
push
and
imul
out
call
ss
add
mov
loopne
sub
xlat
inc
fcmovne
mov
dec
push
sbb
mov
repnz
lea
ret
adc
fisttpl
jo
stos
push
mov
jb
jge
int
mov
pop
mov
xchg
inc
push
movsl
shlb
add
stos
test
flds
sub
rolb
pusha
pop
mov
and
outsl
xchg
xor
dec
cmp
jbe
into
sbb
push
sahf
jp
mov
imulb
mov
dec
inc
add
cmp
out
scas
int3
jg
and
and
mov
push
or
jne
xchg
sbb
xchg
jg
or
ja
leave
jns
xchg
bound
adc
adc
les
jp
dec
nop
adc
push
xbegin
push
fsubrl
xchg
adc
push
sbb
jnp
cld
out
mov
dec
xchg
outsl
mull
test
lahf
insl
movsb
push
mov
inc
gs
dec
mov
cwtl
test
test
movsl
jge
aas
sbb
sbb
sub
stc
leave
mov
or
subl
ds
sbb
cmp
decb
push
test
lods
fsts
ror
or
mov
dec
mov
mov
stc
outsl
and
mov
fstps
clc
mov
push
cmpl
imul
cmc
xor
aad
jmp
xchg
in
out
cmp
hlt
jns
ss
jno
xor
pop
mov
pop
and
stos
mov
push
jb
sbb
pop
fs
outsl
call
cmp
mov
ja
insl
aaa
lods
fimull
push
shr
int3
lods
pop
sbb
add
stos
aam
imul
fwait
sbb
sbb
inc
push
ror
daa
xchg
pop
inc
inc
push
jle
repz
sub
adc
subb
cli
push
fsubrs
add
lret
bound
push
aad
mov
xor
insb
inc
push
dec
cmpsl
mov
hlt
lds
hlt
es
rcll
call
loopne
mov
pop
fsubrs
adc
rorb
push
cltd
mov
xchg
aas
mov
dec
push
push
and
xor
nop
outsb
and
and
outsb
xchg
sbb
imul
mov
inc
stc
aad
xorb
or
mov
out
je
test
outsl
pusha
mov
sbb
iret
into
lahf
mov
lret
pop
test
sbb
pop
pop
and
mov
in
imul
xchg
mov
cmp
stos
fstps
aas
enter
xor
mov
sbb
or
ljmp
pop
les
and
pop
push
lock
add
sbb
mov
imul
xchg
xchg
inc
push
lahf
inc
jno
lahf
ret
pushf
sbb
jbe
outsb
mov
cmp
aas
sub
or
jb
cwtl
jo
pushf
sarb
push
add
push
add
pushf
lret
xchg
les
mov
div
fisubs
adc
cmp
rcrl
loopne
jg
push
mov
dec
icebp
leave
inc
xlat
jle
lea
pop
push
shrl
test
popf
sbb
cvtpi2ps
pop
out
or
fcompl
nop
nop
xchg
loopne
xchg
adc
das
and
xchg
loopne
adc
xchg
xor
and
inc
inc
jmp
push
mov
inc
ljmp
clc
cli
outsl
js
adc
add
adc
push
loope
in
ja
and
in
sbb
xchg
andl
jge
push
inc
js
or
lahf
fldenv
lcall
mov
mull
mov
je
cmpsb
aam
xchg
adc
jl
test
sub
add
and
das
mov
out
mov
xchg
lods
sbb
push
mov
pop
dec
aas
ret
pop
cmp
mov
jo
pop
push
mov
subl
int
jno
lahf
jnp,pt
outsl
ss
sbb
imul
test
out
int
sahf
fidivs
and
sbb
mov
mov
and
shll
test
jp
pushf
stc
jbe
in
pcmpeqw
repz
addb
push
jmp
cmp
mov
xor
mov
pushf
add
frstor
std
pop
test
hlt
mov
test
clc
js
pusha
mov
cmc
pop
jmp
je
jg
sub
test
fwait
out
push
mov
mov
loop
or
shll
lret
shlb
ret
push
out
movsl
fs
sub
fisubl
popf
std
push
testb
jp
dec
and
cmp
mov
xlat
nop
addl
aaa
jecxz
rorb
add
movsl
mov
cltd
inc
cwtl
xchg
loopne
mov
and
cmp
xor
add
inc
mov
or
lret
mov
imul
divl
cli
decl
xchg
mov
pushf
xchg
enter
push
pop
sbb
movsb
gs
das
mov
add
push
cwtl
or
jne
lret
inc
repz
test
in
aad
es
dec
dec
popf
test
aas
push
and
in
aam
sti
fbld
cmpsl
cmp
in
cmc
jp
pop
scas
push
loop
cld
addr16
and
adc
popf
mov
enter
repnz
mov
pusha
out
scas
mov
dec
rclb
and
jae
mov
dec
stc
dec
xlat
hlt
mov
data16
mov
jne
outsl
push
test
mov
icebp
aaa
push
mov
sbb
fadd
js
mov
data16
aaa
imul
loopne
sbb
pushf
ficomps
inc
push
movsl
push
fimuls
jmp
adc
xchg
add
inc
in
add
dec
std
pushf
aaa
mov
mov
dec
ds
cwtl
mov
push
xchg
mov
xchg
insb
sbb
and
enter
xchg
mov
xor
int
mov
lock
mov
inc
xor
add
add
pop
scas
mov
out
popl
mov
mov
hlt
mov
inc
movsl
outsl
data16
lods
dec
cli
xchg
mov
cwtl
je
push
fwait
arpl
jnp
outsb
pop
jle
test
in
lret
daa
mov
aam
adc
push
push
daa
dec
mov
int3
jg
stos
data16
cmp
push
das
and
in
cmpsb
icebp
pop
xlat
sbb
out
out
stc
test
imul
ljmp
test
push
mov
cwtl
leave
or
dec
mov
dec
lds
out
fistpl
sti
leave
loopne
movsl
popa
repnz
sbb
cmpsl
mov
mov
iret
xchg
mov
xchg
ss
xor
lods
mov
js
add
rcrb
jp
xor
sub
popf
xor
push
bound
pop
cli
insl
fimull
mov
sbb
dec
adc
loopne
lret
test
jae
cmp
and
lcall
mov
jg
ret
add
cmp
je
ret
lahf
fisubrl
cmpsl
insb
jbe
dec
iret
ror
outsb
sub
push
add
xchg
lret
xchg
cmp
push
push
adc
int
inc
inc
in
jge
es
pusha
mov
cwtl
mov
inc
daa
cs
xorb
or
push
sbb
ja
jg
add
mov
xor
xchg
mov
sbb
adc
cmp
jp
aad
fadd
insb
sarb
pop
dec
imul
into
frstor
sbb
stos
or
and
mov
jle
mov
int3
stos
push
sub
in
ds
out
mov
shlb
les
mov
out
imul
pop
and
push
inc
dec
mov
popa
imul
imull
sahf
xchg
adc
ret
inc
jmp
bound
cmp
xlat
push
int
test
mov
dec
pop
xlat
and
mov
rclb
pop
push
outsb
xchg
add
loop
clc
outsl
and
sub
insl
test
mov
ret
inc
movsb
jo
add
pop
out
pop
xor
adc
push
pusha
sub
repnz
push
sbb
mov
xchg
sti
neg
mov
test
mull
pop
mov
popa
pop
fldenv
fisubrl
jp
cmp
sub
lods
dec
mov
push
jae
clc
sahf
out
inc
sbb
adc
sub
push
push
jb
data16
push
push
inc
pop
push
aad
adc
jbe
lods
lds
lcall
jb
das
lea
jg
js
stos
lret
sub
mov
xor
mov
xchg
fimuls
mov
incl
jle
mov
in
adc
jecxz
xor
pop
push
mov
aas
push
push
or
outsb
les
push
sbb
mov
shrl
add
mov
jno
aad
cmp
divb
xor
adc
pop
lahf
jmp
stos
fldenv
adc
int
cld
hlt
mov
stc
in
sbb
call
xor
pop
int3
nop
mov
cmc
call
or
mov
add
stos
mov
imul
pop
xchg
pop
sti
push
repz
xor
xchg
out
cltd
xor
inc
xchg
xchg
jne
arpl
movsb
fstpt
sub
jp
push
xor
das
push
xlat
scas
loopne
lret
pop
call
jge
rol
xchg
jecxz
test
sbb
neg
fcoms
dec
sbb
notl
cli
mov
xor
mov
and
or
imul
mov
or
mov
leave
imul
ret
pop
fs
push
push
ret
xor
test
ret
js
mov
insl
push
or
push
aad
mov
inc
jb
add
aad
int
add
test
jno
insl
dec
data16
add
jo
insb
or
pop
bound
jae
or
mov
pop
test
stc
cli
jo
xchg
xor
mov
loopne
sbb
mov
lahf
je
pushf
cld
fucomip
fcmovb
rclb
shll
pusha
test
pushf
or
xchg
pop
mov
mov
cltd
addl
loopne
out
xchg
add
inc
xor
les
std
lahf
fimull
int3
jge
sti
mov
jno
jo
hlt
xchg
pushf
jb
jae
pop
jbe
dec
and
jb
ljmp
push
xor
add
and
out
fbstp
inc
stos
jge
inc
or
cmpsb
ficoms
fisttps
lea
mov
push
cwtl
xor
or
jb
push
dec
fidivl
sbb
and
sub
fiadds
add
lock
mov
xor
push
insl
filds
adc
pop
mov
adcb
les
fldenv
jno
notb
mov
push
cs
xchg
adc
scas
xor
xchg
das
std
pop
arpl
add
adc
jp
mov
imulb
loopne
sub
out
jg
cwtl
lods
dec
cltd
cld
pop
pop
fadd
jae
fsubs
xor
pop
add
cltd
push
std
int
repz
fists
mov
mov
sub
test
clc
mov
inc
dec
ds
flds
mov
fwait
and
lret
leave
stos
adc
and
push
jnp
mov
mov
push
ja
cmpl
mov
shrb
mov
sub
stos
jl
xchg
sbb
adc
adc
loope
adc
jb
inc
int3
popf
mov
dec
cmp
xlat
loopne
xchg
in
ja
cmpb
mov
pushf
cltd
mov
mov
bound
pop
xor
or
mov
xchg
pop
xor
out
and
loop
cli
mov
fs
sbb
sub
cmc
jne
mov
push
lods
pop
hlt
outsb
or
xor
enter
add
mov
xchg
sub
ljmp
xchg
pop
sbb
mov
jb
pop
cmp
je
sbb
cltd
in
and
jne
mov
sbb
sub
out
leave
inc
icebp
mov
mov
shll
jecxz
sub
pop
out
mov
dec
je
sbb
push
fs
push
jge
dec
fcmovbe
pop
push
mov
mov
stc
repz
fcompl
dec
std
and
inc
mov
scas
mov
pop
mov
add
aas
jae
mov
fcomp
arpl
pop
jae
dec
inc
movsb
add
mov
and
push
in
cmp
adc
sti
or
push
cmp
pop
int
loop
xlat
pop
dec
sbb
out
fs
pop
adc
xchg
cmpsb
repz
jns
mov
sbb
lret
xchg
fiaddl
mov
dec
mov
jl
jp
lea
rcr
push
in
enter
ret
loope
fnstsw
mov
jecxz
stc
imul
push
mov
arpl
mov
pushf
dec
stc
pop
lahf
mov
adc
jmp
add
clc
cld
mov
icebp
xchg
push
and
test
stc
or
pop
mov
mov
jle
inc
loop
xchg
fsubl
mov
mov
pop
pushf
and
push
lods
lcall
pop
int3
test
mov
shrl
push
pop
imul
mov
mov
or
dec
xchg
outsl
inc
popa
sbb
neg
or
adc
int
mov
jecxz
addr16
lods
pop
in
jp
sbb
repz
in
xchg
filds
xchg
sub
aad
fs
cs
adc
mov
lea
adc
push
mov
pusha
aad
pop
in
mov
mov
adcb
clc
fs
mov
enter
push
sub
std
dec
test
adc
in
mov
insb
cltd
adc
je
inc
mov
push
mov
sub
lcall
xchg
shlb
jmp
push
adc
popa
fwait
mov
sbb
cmpsb
das
cmc
pop
adc
call
loopne
mov
out
fisttps
mov
cmp
cwtl
push
jbe
stos
cmpsl
imul
or
or
mov
mov
push
pop
ss
clc
pop
aam
jb
jge
out
loop
xchg
rcrb
sub
fidivrl
sbb
ja
cmp
daa
ja
mov
inc
xchg
and
ja
or
rcrl
add
outsb
mov
into
jle
add
fmuls
inc
mov
mov
negb
jmp
decl
dec
sub
mov
mov
aam
or
and
pop
imul
es
dec
cmc
insb
das
pop
push
lcall
mov
dec
cmpsl
jecxz
mov
sbb
ss
sbb
xor
adc
pop
cmpsb
test
cmp
insb
mov
inc
int
pop
fsubrl
lret
inc
adc
nop
pop
aad
sbb
stc
loope
rol
push
mov
int
in
mov
loopne
test
clc
push
cmc
and
xor
lods
xchg
fildl
jge
les
mov
shll
mov
stos
xlat
or
movsl
inc
pushf
cwtl
lcall
xchg
mov
add
ljmp
jbe
ljmp
mov
mov
bound
out
iret
and
scas
adc
push
xlat
pop
and
jnp
sbb
into
lcall
hlt
ds
pop
popf
sahf
xchg
cmpsl
insl
inc
call
cld
arpl
nop
jb
mov
or
outsl
fsubl
aam
xchg
int
jge
aas
mov
pop
jecxz
arpl
inc
sahf
sub
sub
jp
sub
add
ret
fmuls
jp
iret
pop
jecxz
mov
pop
pop
sarl
iret
jl
cmpsb
xchg
cs
push
mov
gs
idivl
jmp
testb
pop
cmpsl
dec
mov
pop
and
enter
int3
push
insl
imul
inc
xchg
sbb
lods
pop
pop
rclb
add
gs
inc
nop
stc
mov
mov
sysret
shl
pushf
outsl
pop
xchg
pushf
mov
inc
adc
mov
xor
and
xchg
adc
push
pop
adc
incb
jb
adc
and
lahf
addr16
aaa
jbe
mov
orl
stos
adc
nop
dec
fucomp
inc
ret
lcall
xor
sub
dec
scas
pop
pop
cmp
inc
jne
push
dec
or
dec
imul
dec
jl
arpl
hlt
and
push
pushw
xor
shrb
or
cmpsl
cmp
mov
bound
inc
aad
jae
enter
pop
scas
aad
inc
pop
leave
pop
incb
fisubrs
sbb
or
hlt
test
jmp
scas
hlt
repz
rolb
out
jne
mov
fildll
lret
and
addr16
pushf
adc
popa
mov
mov
xchg
stos
push
mov
mov
loop
sbb
out
aaa
nop
pop
sbb
cmp
repz
sbb
xor
dec
and
sbb
mov
loopne,pt
mov
sub
jb
mov
fistl
call
aas
jg
push
fdivrl
or
sti
notl
xor
jns
add
push
dec
hlt
pop
sub
jne
jo
and
rcrl
cltd
dec
push
jne
or
inc
iret
pop
aad
in
push
aam
mov
xchg
es
in
jg
test
or
xchg
push
xor
push
lahf
mov
je
sarb
icebp
jmp
ret
add
jns
sub
add
pop
mov
pop
pop
push
aas
dec
lea
inc
and
icebp
fucomip
decw
out
pop
dec
lcall
subl
sti
xchg
sub
adc
aad
andb
jnp
not
popl
pop
cmc
sub
xchg
adc
movsl
add
mov
sbb
leave
xchg
inc
inc
mov
sub
dec
mov
xchg
and
lahf
or
xchg
sahf
dec
push
insl
push
jns
std
lret
ss
addb
cmp
adc
mov
xchg
aas
fadds
pop
xchg
insl
cmp
dec
or
inc
xchg
mov
sbb
jns
outsb
sbb
mov
sbb
pop
fsubrs
xchg
imul
repz
push
stos
dec
rclb
pop
mov
jno
fiaddl
sbb
mov
pop
loope
repz
call
sbb
cmp
cmp
ds
loope
dec
xchg
mov
sub
jo
jecxz
leave
cmpsb
or
xchg
inc
cmp
push
mov
cmp
push
aas
movsb
pusha
cmpb
ret
repz
mov
insl
mov
cld
jg
push
mov
cmc
test
and
mov
xor
pushf
shrb
js
push
push
insl
dec
and
jae
add
clc
pop
cld
rclb
sub
icebp
sub
lret
ret
sbb
xchg
invd
push
scas
ret
outsb
cmp
jb
xor
adc
sub
jg
mov
aam
mov
loopne
sti
mov
rol
scas
cmp
fdivrl
push
pop
imul
jo
lds
nop
or
jo
sbb
xchg
push
insl
or
xor
dec
sub
fstpl
out
in
test
das
icebp
lds
xchg
jge
and
pop
sbb
mov
mov
and
xchg
lret
outsb
pop
xchg
pop
pop
xchg
dec
insb
xlat
xlat
test
mov
into
popf
mov
wrmsr
mov
mov
out
in
xlat
mov
jmp
or
pop
jecxz
cmp
sub
incb
pop
cmp
fldcw
xor
stc
stos
aaa
mov
xchg
enter
pop
fyl2xp1
xor
push
mov
xor
leave
add
aam
dec
cmpsb
shll
pop
mov
mov
sub
add
jmp
nop
pushf
or
stc
mov
adc
and
and
push
mov
mov
jns
mov
inc
iret
and
lahf
idivl
inc
lods
jns
popf
outsl
sbb
push
inc
sub
xor
loop
ret
cmp
loopne
pop
jmp
hlt
test
lods
icebp
pop
rcrl
stos
lret
cwtl
cmp
in
jmp
jg
test
fldl
jg
push
sub
dec
ss
xor
xor
les
shlb
sahf
repz
fld1
inc
add
and
insl
sub
scas
nop
popa
es
dec
testl
or
repnz
push
cmp
sbb
mov
mov
ret
faddp
xchg
loopne
addr16
out
jl
push
sbb
out
and
es
mov
mov
enter
and
mov
push
inc
xchg
xchg
fsubl
fdivrl
pop
sub
ficomps
adc
mov
push
test
incb
fsubr
cmp
aaa
jl
mov
lret
loope
mov
sub
xor
js
mov
xorl
pop
mulb
lret
xchg
lret
fdivs
cmpsb
shl
pop
inc
xchg
cld
rcl
gs
mov
sarl
popf
negb
decl
pop
clc
cmp
test
cmc
sbb
pop
and
and
test
psllw
cmp
mov
mov
jbe
mov
mov
filds
lds
in
jmp
dec
mov
inc
jp
cmpsl
jmp
xchg
mov
lods
flds
push
pushf
jl
pop
mov
loopne
sub
cwtl
roll
inc
mov
dec
sub
inc
or
cld
fldt
jecxz
repz
push
cs
inc
rcrl
arpl
lahf
cwtl
imul
xchg
mov
das
test
inc
xchg
mov
add
pop
cmp
jne
jae
nop
and
lods
movsl
sahf
or
or
in
sbb
jle
pop
xchg
std
stc
dec
push
int3
testb
push
cwtl
jmp
mov
sub
jecxz
repz
push
mov
mov
jmp
inc
dec
mov
test
enter
and
push
dec
pop
ss
jmp
aam
jecxz
dec
push
add
jb
pop
mov
fiadds
enter
scas
sbb
cmp
jle
jnp
adc
xor
scas
mov
vmovq
mov
or
push
lods
dec
jge
clc
push
jnp
mov
mov
pop
jecxz
or
popa
lods
xor
jae
rclb
cmp
push
je
push
dec
mov
xchg
cltd
jno
pop
nop
mov
sbb
xor
add
xor
mov
inc
sbb
scas
or
lock
dec
das
add
insl
and
in
in
sub
pmuludq
or
lods
add
mov
mov
cmp
inc
fildll
das
adc
push
push
aam
cld
jp
fwait
xlat
inc
mov
stos
xor
cltd
cmpsl
repnz
pop
xor
and
mov
cwtl
js
pop
inc
jle
jns
mov
xchg
xor
dec
adc
sahf
sub
enter
rcll
test
dec
pop
adc
mov
lcall
sub
push
aas
divb
orl
pop
fidivs
mov
sub
fstpl
mov
jns
push
lock
cmc
sub
dec
lods
inc
push
les
inc
jg
bound
jo
jno
sub
jg
out
popf
xchg
cmp
xor
lret
insb
and
imul
fidivs
outsb
lods
ret
roll
jns
stc
sbb
adc
and
xchg
data16
loope
xchg
test
sti
popf
fucomp
lret
daa
lods
and
fucomi
cmp
xor
or
loopne
jge
push
mov
lea
pop
mov
jl
ljmp
movsl
or
mov
cmp
xchg
and
dec
jbe
push
sti
ds
loop
cmp
dec
cli
mov
daa
or
adcb
pop
popa
aam
in
lahf
fimuls
out
mov
pop
dec
sbb
sub
cmpsl
and
xchg
lcall
stos
mov
mov
jae
mov
push
jmp
and
shlb
hlt
mov
enter
repz
hlt
es
xchg
lods
out
dec
std
and
ss
xchg
sub
xchg
stc
loop
test
ds
inc
call
cmp
repnz
jle
leave
mov
test
jle
or
dec
jo
dec
or
std
enter
xchg
insb
xchg
imul
pop
sar
jmp
or
pushf
scas
mov
mov
ss
cmp
mov
loope
arpl
xor
das
push
gs
push
xlat
das
outsb
scas
out
push
inc
mov
stc
mov
jno
gs
icebp
push
jbe
lar
jmp
sbb
mov
mov
xchg
or
pop
adc
lods
add
loop
mov
cltd
sub
sbb
mov
movsl
out
imul
mov
mov
testl
aaa
rclb
test
inc
gs
sarb
push
jge
push
imul
bound
das
cmp
loopne
imul
cmpb
stos
adc
push
push
movsb
push
add
adcl
mov
repnz
add
jmp
mov
jns
jnp
ror
pop
cmc
cltd
push
std
dec
les
ds
ja
sub
and
lahf
ret
lods
popa
jo
xchg
adc
jns
out
pop
push
xor
sbb
ljmp
imul
stos
scas
in
xchg
int3
dec
mov
jns
lock
mov
andl
ret
sbb
pop
cmpl
inc
cli
dec
inc
mov
aam
lods
jg
mov
cmp
les
fnsave
and
imul
jne
scas
xlat
add
sbb
mov
pop
pop
push
mov
gs
lods
mov
xchg
pop
imul
clc
insb
pop
mov
cld
movsl
out
jmp
popa
popf
mov
mov
jecxz
loopne
clc
or
add
out
or
push
dec
fstpt
sbb
ja
pop
add
mov
xchg
mov
dec
rcrl
outsb
add
in
sub
sub
sahf
inc
inc
jne
sbb
mov
icebp
jmp
test
jno
fwait
lcall
and
int
lods
imul
xchg
inc
mov
popf
fs
inc
or
movsl
je
adc
sub
ficompl
or
mov
mov
pop
fsts
mov
nop
out
lahf
bound
ficomps
into
loop
xor
mov
notl
nop
ljmp
cltd
mov
sub
das
mov
mov
xor
nop
sbb
mov
lahf
cld
xor
add
cld
aas
js
lods
xor
inc
test
add
imul
out
mov
push
pop
pop
inc
adc
adc
jae
mov
adc
sarl
push
shrl
repz
pop
movsl
sti
jg
ss
movsl
mov
lea
ja
and
and
jbe
fs
jg
call
inc
mov
mov
mov
xchg
imul
sub
stc
outsl
pop
push
pusha
cmc
sub
add
pop
xor
sbb
stc
lret
ss
out
fdivl
add
mov
in
jb
mov
fistpl
je
cmp
test
lret
inc
push
lea
idivb
ja
int
aas
fisttpl
xor
sub
mov
mov
fidivrl
sbb
or
lret
adc
mov
ljmp
hlt
or
xor
das
inc
add
stos
cwtl
mov
scas
cmpsl
aam
aas
xlat
cmp
cmp
out
mov
movsb
and
pop
jns
shrb
int
push
and
cmpsl
mov
leave
adc
inc
sbb
jb
pop
mov
frstor
pop
add
jb
or
pop
repz
dec
int3
add
cmp
xor
pop
in
jg
mov
push
xchg
aas
movsl
lahf
dec
mov
sub
xlat
mov
dec
cs
pop
sbb
inc
mov
in
mov
bound
push
push
je
cmpsb
pop
jnp
cltd
push
add
or
imul
jge
aaa
mov
jb
xchg
lret
fisttps
movsl
cld
add
iret
ss
ja
jmp
mov
popf
pop
mov
insl
jp
mov
addr16
sbb
mov
add
sti
inc
pusha
adc
in
into
inc
lods
mov
test
push
mov
sti
int
xchg
popa
add
fmull
ss
jae
sub
mov
mov
lahf
dec
loop
push
sti
fwait
ljmp
inc
jno
or
add
inc
pop
leave
add
pop
arpl
xchg
push
sub
dec
inc
outsb
ljmp
add
and
std
lds
jae
jmp
add
repz
cmp
movsb
loope
sub
push
xchg
jb
dec
cltd
outsb
shll
pop
dec
pop
dec
push
and
cmc
fsts
jg
or
lock
xchg
shrl
out
fistpl
gs
fmull
sti
test
inc
sub
lret
movsl
ret
popa
sbb
xchg
sahf
je
xchg
aaa
out
xchg
movsb
dec
bound
jns
popf
sbb
inc
out
push
add
mov
inc
pop
insb
inc
adc
cli
mov
xor
lods
das
add
mov
shlb
mov
mov
push
pop
push
cmp
mov
mov
mov
mov
jle
inc
mov
xchg
and
movsb
jmp
clc
popf
fists
jge
ss
xchg
dec
mov
fdivrs
sti
lret
xchg
inc
out
movsb
add
aam
xchg
ja
pop
sub
cmpb
movsb
mov
lahf
sbb
inc
pushf
xor
xchg
in
movsl
movsl
call
aaa
or
pop
sahf
cmpsl
dec
add
out
enter
sub
jnp
enter
mov
pusha
or
aaa
iret
pop
ficomps
into
jecxz
mov
arpl
and
out
testl
popa
xchg
hlt
xor
xor
and
daa
adc
gs
mov
add
orb
sbb
mov
mov
rolb
into
dec
ljmp
cltd
mov
adc
pop
adc
jp
movsl
icebp
add
or
test
mov
mov
mov
bound
inc
mov
pop
insl
sbb
adc
pop
mov
push
xor
jns
adc
dec
mov
push
xchg
cmp
mov
xorb
pop
loopne
and
shlb
rcl
bound
int
add
xchg
inc
and
mov
sti
stc
lret
pop
add
jo
xchg
mov
hlt
jne
negl
cmp
jae
nop
out
lcall
jle
out
lret
sbb
popa
pop
xchg
mov
bound
sub
sbb
dec
out
scas
ja
jno
cmpsl
mov
inc
and
jecxz
mov
push
inc
add
fisttpll
push
pmaxub
sbb
movsb
ja
mov
cmp
xchg
cld
scas
xchg
jmp
aad
das
push
imul
or
add
imul
outsl
mov
inc
add
aaa
enter
xlat
mov
sub
fmulp
out
cltd
loope
shr
push
js
inc
fcomps
xor
xchg
cltd
cmpsb
test
xor
icebp
int3
mov
cmp
in
cmp
notl
ss
xchg
addl
sub
jb
dec
adc
fwait
jp
ret
shlb
cmpb
mov
dec
movsl
inc
add
cltd
imulb
mov
cmp
jecxz
mov
and
xor
out
push
repnz
push
ret
stc
xchg
inc
xor
std
arpl
int
xchg
cmpsb
mov
push
mov
fisubrl
pop
leave
stc
mov
mov
insb
push
popa
mov
adc
std
xor
add
aaa
pop
call
dec
or
ret
cmpsb
push
mov
pop
lods
repz
imul
push
xor
loope
sbb
ret
sarb
lret
xchg
pop
test
mov
and
mov
gs
fs
inc
cmpsl
xchg
flds
cld
in
xchg
jb
or
cmp
xchg
mov
push
pop
test
hlt
and
pusha
mov
jle
ljmp
std
xchg
imul
ja
mov
outsl
sbb
jae
mov
orb
jne
call
scas
lret
cmp
sub
dec
mov
cmp
popa
shl
mov
cltd
cmp
or
jp
adc
dec
pop
jg
mov
das
shrl
dec
hlt
int
cmp
notb
add
outsl
adc
xchg
jl
insb
jp
push
into
pushf
push
gs
daa
mov
movsl
mov
ljmp
rorb
mov
and
mov
and
ljmp
in
out
shrb
stos
movsb
xchg
xchg
jle
mov
cmpl
inc
jno
sbb
dec
mov
insb
jmp
jl
dec
xor
xchg
cmp
jo
cmp
cs
iret
fcmovb
stos
inc
jo
xchg
add
adc
les
popf
sbb
das
daa
mov
cli
adc
fidivrs
xor
dec
push
and
cvtpi2ps
sub
push
cli
inc
test
dec
movsb
mov
nop
or
xchg
sbb
cmc
arpl
push
popa
add
sbbb
xor
das
cmp
xchg
les
mov
cmpsb
mov
sbb
or
or
addr16
ss
out
lods
negb
jl
aaa
lock
in
mov
lret
sub
push
add
outsl
or
popa
jp
in
test
push
mov
lahf
push
mov
icebp
xlat
neg
cli
pop
xor
insl
js
ret
sahf
shrl
lds
outsb
jge
adc
add
testl
xchg
mov
rcll
push
test
cmp
mov
shl
into
cmp
fsubrl
mov
sbb
rcll
cld
js
aam
fistpll
add
mov
xchg
dec
jge
dec
test
adc
jnp
xchg
adc
push
xchg
fwait
mov
popf
repnz
and
in
faddl
loop
outsl
out
xchg
cmpsl
mov
jle
repnz
mov
and
mov
rorb
stc
testb
dec
scas
lahf
push
ret
les
inc
and
popf
dec
movsl
mov
lods
enter
iret
mov
shlb
jg
push
inc
je
dec
mov
cmp
rcl
cmp
jecxz
pop
out
jne
sbb
push
popa
push
ja
push
xor
movsl
jb
xor
jecxz
jne
and
cmp
shrb
jmp
rolb
jecxz,pn
pop
out
dec
jnp
and
adc
cmpsl
dec
or
fildll
sbb
testb
sbb
dec
pop
xchg
data16
jo
inc
sbb
icebp
fwait
cmp
or
int3
daa
sbb
mov
jle
int
sbb
xchg
pop
add
and
pop
ds
sbb
and
je
push
cwtl
sub
cmp
push
in
add
aaa
fndisi(8087
daa
out
sbb
inc
mov
nop
clc
mov
dec
mov
xchg
out
mov
adc
mov
xchg
leave
push
inc
call
mov
out
inc
and
sub
cltd
pminsw
pop
xchg
ja
jae
mov
pop
add
or
push
test
cwtl
outsb
mov
or
fimull
loop
sub
push
sbb
cs
adc
push
or
xchg
fnsave
xchg
stos
ja
cmc
mov
ret
push
ret
dec
fldl
adc
pushf
dec
mov
push
inc
push
stos
cs
lock
inc
ds
cmp
stos
mov
mov
xor
icebp
cmpb
jbe
popa
xchg
add
sub
and
fadds
lds
push
bound
ljmp
cmp
and
ljmp
pop
ret
notb
test
sar
enter
mov
push
into
sbb
add
in
inc
push
mov
xor
pop
mov
in
push
mov
movsl
and
push
add
lret
gs
sub
sub
out
stc
dec
inc
xor
and
ja
adc
mov
mov
cmc
popa
aam
fdivrl
mov
ja
ret
or
es
iret
xorl
and
pop
mov
mov
and
or
jns
xchg
push
ds
cmp
xor
cmpsb
in
adc
adc
rorb
fs
ja
xlat
in
arpl
int3
push
or
xchg
pop
in
ss
into
cmpsl
lret
jb
and
shr
push
scas
jo
pushf
pop
mov
jns
push
sbb
dec
movsl
mov
xorb
adc
out
es
add
dec
mov
int
and
or
mov
sbbl
fwait
lahf
addr16
jb
sbb
ret
loop
loop
inc
add
adc
jb
jbe
push
es
sarb
push
cmp
test
cmpsb
pop
mov
out
in
repnz
pop
shrb
pop
pop
outsb
cltd
call
pop
cmp
sarb
outsb
and
xchg
pop
int3
and
sbb
rcrl
jno
pop
jecxz
arpl
add
cmp
rorb
shl
mov
and
bound
inc
fs
test
adc
and
or
xchg
mov
jno
pop
adc
mov
jo
rcrb
insl
xor
push
add
insl
add
xchg
loopne
dec
and
lds
mov
bound
out
imul
and
fidivl
sbb
in
cmpsb
pop
lods
jle
add
aad
test
cmp
mov
push
sbbb
aam
fiadds
xor
xchg
sbb
add
mov
scas
jno
push
ljmp
in
scas
push
out
cmpsb
mov
add
les
icebp
sar
sub
cmp
mov
mov
popf
enter
fstps
mov
std
xor
outsl
enter
mov
push
cmpsl
pop
pop
add
iret
out
subb
xchg
jns
cwtl
test
sahf
pop
loopne
xchg
js
outsl
outsb
inc
sarl
int
hlt
dec
sub
lods
or
jns
cmpsl
adc
inc
pushf
adcb
dec
and
jecxz
push
sbb
inc
jge
xor
ja
push
sub
aam
mulb
xchg
adc
mov
sarb
std
mov
enter
test
push
popf
adc
addl
lret
and
xchg
dec
sub
mov
icebp
mov
cmp
mov
inc
cli
scas
fmull
mov
mov
adc
sbb
scas
or
loop
mov
mov
aam
cmp
jns
cmp
pusha
push
push
ss
cs
dec
jecxz
ret
cmpsl
ljmp
xchg
mov
mov
push
pushf
loop
adc
jmp
adcb
jp
mov
mov
sub
addb
jns
das
cmc
sub
daa
arpl
and
xor
ror
popf
out
pop
call
subl
ret
ja
test
push
push
mov
sahf
mov
jg
mov
mov
das
jns
dec
xchg
mov
mov
jp
dec
movsl
mov
fistl
mov
mov
sub
shr
neg
mov
insb
add
out
jp
cmp
dec
dec
jns
pop
fucomi
fiadds
pop
shlb
push
lret
mov
pop
jg
cmp
push
sahf
adc
and
mov
test
je
sti
fwait
es
test
pop
sub
push
leave
shlb
cs
sbb
jg
mov
pop
jle
sub
add
xchg
cmp
mov
jge
mulb
out
jmp
lahf
mov
sub
sub
test
jp
xchg
mov
popa
notl
push
sub
push
fucomp
and
lahf
pop
adc
fidivl
scas
repnz
mov
ret
das
adc
imul
sbb
shll
mov
sar
cmc
repz
xlat
sub
lahf
mov
sbb
sub
subb
jns
scas
jl
xchg
xor
mov
push
adc
sbb
lods
mov
test
sarl
mov
daa
ret
test
add
mov
xchg
icebp
stos
loop
inc
and
pop
dec
cmp
shll
rorl
scas
mov
movsb
xor
jg
sbb
ficomps
pop
mov
in
idiv
mov
cmp
push
mov
sbb
mov
lods
fildl
xor
repnz
xchg
or
ret
mov
into
out
and
or
mov
jp
pop
lcall
stc
or
psubw
dec
and
xorl
fwait
cmc
dec
cmpl
pop
loop
jae
jmp
add
gs
std
or
fildll
icebp
mov
lods
or
aad
mov
insb
incb
in
sarb
mov
into
dec
dec
fsubrp
aas
sub
jo
jns
stos
dec
push
mov
cmp
mov
stc
or
cmc
xor
cmp
jmp
inc
loopne
xlat
enter
cs
xor
push
cmpsb
and
pop
call
mov
sbb
cmp
mov
loop
lahf
in
push
sbbb
push
mov
cmp
repz
jmp
outsb
icebp
subl
dec
iret
les
in
push
ss
repnz
push
test
sbb
push
ljmp
je
adc
push
xor
stos
sar
lret
push
mov
cmc
in
loopne
mov
xchg
outsl
fdivs
inc
dec
mov
jp
test
push
shrl
cld
popa
lds
int3
andb
push
adc
mov
and
ljmp
test
loop
pop
roll
repz
push
sub
adc
and
push
pop
push
movsl
jo
mov
cltd
inc
stos
in
and
sbb
iret
stos
imul
mov
inc
iret
mov
fstps
addl
dec
rcrb
in
or
sub
loope
subb
xchg
lahf
ja
mov
je
in
std
clc
lahf
xor
sbb
mov
mov
pop
ja
ja
xor
aam
test
loopne
jg
inc
xor
sbb
lods
cmpsb
lahf
pop
loopne
push
popf
bound
jno
inc
nop
xchg
scas
xor
ljmp
add
adc
test
push
mov
scas
ljmp
int
xor
in
sub
rclb
ret
xor
lock
xchg
pop
cld
jle
lea
or
lcall
insb
clc
popa
pop
inc
xchg
sub
rcll
orb
pop
jae
push
bound
cmpsb
sub
dec
cmp
and
rcrl
ror
cltd
in
js
cmc
mov
pop
or
dec
or
daa
add
test
sub
imul
dec
sbb
or
fisubrl
sbb
shr
jl
fadds
cli
rcrb
or
jle
jae
test
sub
pop
movsl
and
dec
lcallw
mov
pop
jb
daa
scas
popa
fs
xor
mov
add
mov
cmp
cwtl
mov
call
push
push
notl
push
push
movsl
mov
jle
xchg
scas
xor
mov
xor
mov
jge
mov
arpl
das
jle
nop
cmp
arpl
lahf
in
stos
sti
push
jl
out
test
mov
inc
icebp
adc
test
cmpsb
or
mov
or
aas
xchg
aas
xchg
call
mov
jno
ljmp
fsubrl
rol
cmpsb
lcall
dec
sub
out
test
inc
das
mov
inc
sub
jne
insl
ljmp
ja
movsl
fistps
adcb
test
and
stc
add
test
insl
mov
adc
sub
or
dec
roll
rclb
mov
and
ljmp
fwait
mov
pop
fsubrl
xor
mov
and
push
mov
notb
ret
push
into
daa
xchg
mov
fistpl
lcall
push
imul
jns
xchg
sbb
xorl
cmc
cmp
lods
and
mov
rcrb
imul
add
cld
cmp
jns
lahf
add
and
push
scas
jne
arpl
mov
outsb
mov
adc
sbb
cmp
mov
cmpsl
mov
mov
cwtl
add
incl
pushf
std
sub
pop
jl
dec
fldcw
sbb
outsl
bound
mov
popl
jo
ret
or
and
aaa
je
and
rep
negb
mov
mov
into
clc
fstpl
sbb
jbe
mov
orl
lcall
jle
dec
shlb
mov
inc
and
cld
sbb
xor
and
std
push
push
dec
outsl
pop
sub
dec
loopne
push
or
enter
pop
arpl
push
movsb
adc
nop
pop
data16
push
and
lods
dec
lcall
or
ds
push
das
jecxz
out
rcll
scas
leave
or
cmpsb
cmp
in
pop
and
pop
mov
mov
cmp
cwtl
mov
xchg
loope
in
test
pushf
scas
lods
adc
out
jnp
aaa
mov
aam
jbe
inc
test
nop
xlat
pop
adc
push
ss
add
add
adc
mul
ss
lahf
int3
dec
rcrb
sbb
sti
lods
xchg
adc
int
push
pop
xor
loope
pop
xchg
or
push
outsl
roll
jg
xor
call
sub
sbb
xchg
jp
das
jge
ja
mov
push
add
arpl
into
insl
jns
sub
test
cld
dec
aad
jge
fisttps
mov
fs
push
ficompl
outsb
lahf
cltd
ret
fistpl
lds
std
out
mov
popa
sbb
pop
jge
cli
cmp
or
test
xor
sub
jne
rorb
mov
pop
lret
xor
push
push
fidivrl
jns
push
addl
out
xor
mov
std
inc
or
mov
into
movsl
and
aaa
and
and
jae
mov
push
mov
clc
cmpsl
mov
add
pop
adc
das
pop
sbb
pop
std
jno
mov
cmpsb
filds
cs
xor
iret
sar
xorb
or
adcb
mov
or
sub
pop
repz
add
aas
mov
and
add
icebp
sub
imulb
outsb
mov
xchg
bound
ret
bound
xchg
sbb
js
push
lret
jns
int
inc
insb
mov
jge
rclb
cmp
cmp
mov
xchg
xor
fnstenv
xchg
and
mov
or
adc
mov
divb
incl
lods
dec
daa
or
scas
mov
cmp
jb
or
sbb
inc
lods
test
mov
mov
hlt
sbb
call
xchg
mov
cmp
or
imull
inc
push
inc
jae
ret
lret
mov
cmpsb
cmp
cs
xor
jb
sub
jl
sbb
fistpl
sub
or
pop
cmp
mov
inc
fs
sahf
cmpsl
rol
cld
fildl
into
xor
nop
cmp
hlt
pop
or
icebp
cmp
cmpsl
fistpll
out
incl
lods
dec
daa
or
cld
or
imul
adc
dec
ffreep
pop
mov
scas
ljmp
dec
pop
in
add
cwtl
shrb
bound
sub
cvtpi2ps
mov
psrlw
add
daa
push
sub
or
ficomps
fcmovnbe
xchg
cmp
xor
or
mov
push
cmpsb
mov
mov
sarb
es
ds
add
cmp
sarb
sbb
mov
mov
pop
or
rcl
stos
cmp
push
aam
jno
fcmovnu
push
cld
cltd
rolb
outsb
pop
and
data16
jb
imul
fsubrs
or
cltd
mov
push
jno
pop
jne
mov
pop
stc
lret
daa
cltd
iret
fsubrs
daa
pushl
ja
lcall
pop
sub
mov
out
test
pop
lahf
ret
addl
mov
stos
movsl
ljmpw
hlt
and
push
push
js
push
scas
js
outsb
xlat
push
add
enter
or
cltd
mov
add
xchg
js
nop
lret
insb
xchg
pop
jmp
ljmp
pop
push
dec
mov
mov
fwait
jnp
cld
rcrl
int
sub
mov
daa
jge
or
fisttpll
pushf
cmp
push
dec
das
lds
gs
cmp
jl
arpl
in
jno
and
cmc
in
out
mov
loop
xchg
ret
adc
and
cmc
jp
sub
fcmovbe
jle
jb
xor
mov
cmpsb
xor
cwtl
push
adc
aam
xor
insb
dec
sub
shl
push
cmpsl
adc
jp
leave
jle
adc
cmp
xor
push
add
push
adc
repz
sub
mov
jmp
push
dec
or
push
mov
pop
rcrb
mov
dec
mov
outsb
push
repz
repnz
int
fildl
pop
imul
repz
hlt
add
xchg
test
es
pcmpeqd
lcall
jmp
mov
push
mov
in
jne
in
push
lcall
aam
xchg
and
sbb
jmp
cli
and
mov
jo
mulb
sahf
sub
pop
dec
lea
arpl
pmulhuw
and
sbb
xor
es
sti
jmp
dec
shll
push
fmull
inc
insl
jo
ret
fmull
mov
or
cld
mov
pusha
pop
jle
aaa
int3
ret
cmp
fmull
mov
or
cld
mov
xchg
add
or
pop
popa
inc
incl
dec
push
lcall
xor
push
ss
mov
push
lret
inc
mov
mov
mov
and
rcrb
adc
repz
sbb
mov
fucom
sub
cli
push
cmp
push
imul
or
fidivrl
out
pop
lahf
inc
inc
jl
cmc
insl
sbb
mov
cmpb
in
movsl
fsub
mov
in
clc
push
daa
push
jb
add
mov
inc
push
sub
push
inc
repz
fildl
cmp
dec
lahf
cmp
shufps
sub
dec
jns
sbb
add
pushf
mov
xor
lret
or
sbb
inc
out
ljmp
ljmp
test
scas
lds
mov
push
mov
jnp
lock
sub
mov
shr
sub
adc
xor
fildll
loopne
stc
mov
xchg
mov
cmp
mov
sub
pop
pusha
in
insb
push
cmc
pop
in
bound
inc
js
stc
jb
mov
dec
jne
jno
dec
hlt
rcll
jmp
push
and
ret
notl
shl
int3
jb
or
mov
ljmp
fisttpll
and
mov
inc
pusha
pop
inc
lock
mov
test
cwtl
xlat
jns
out
mov
sub
mov
jl
outsl
sub
out
sbb
sbb
mov
jb
pop
mov
sub
adc
xor
dec
push
nop
fdiv
sbb
mov
push
fidivrs
push
fisubrs
inc
fistps
and
dec
and
xchg
pop
int3
icebp
cmp
jne
and
pop
shlb
mov
jp
adc
jmp
cmc
sub
and
mov
and
jns
mov
mov
adc
push
adc
sbb
out
ss
or
xchg
int3
into
dec
int
push
ss
int
xlat
ss
pusha
and
xchg
inc
and
aad
in
or
mov
out
shrl
lods
add
push
xchg
mov
cli
pop
dec
sub
pop
jne
add
sbb
iret
or
insl
mov
fcompl
xor
movsl
adc
imul
movsb
jmp
pusha
jbe
adc
movsb
cld
dec
lahf
das
lcall
adc
xor
jbe
mov
hlt
jg
and
clc
sbb
sub
pop
sub
xchg
mov
mov
fwait
in
jne
hlt
nop
test
mov
inc
in
shrb
add
add
cmp
jmp
ss
je
fadd
loop
loope
sub
jo
hlt
test
push
adc
ret
pop
pop
popa
movsb
xor
movsl
jbe
cmp
ja
imull
xchg
insb
mov
fcompl
xor
ret
mov
inc
push
ja
mov
add
addr16
push
mov
outsb
and
fcomps
mov
or
ret
int
xchg
adc
or
mov
push
mov
pop
adcb
xchg
hlt
jo
lods
ja
xchg
dec
daa
fisubl
int
jno
pop
fld
sub
sbb
mov
mov
insb
testb
push
ffree
and
loop
jnp
jl
sub
xchg
cli
sbb
es
rclb
scas
cmp
mov
sub
rorb
xchg
and
push
popf
inc
xchg
mov
xchg
stc
mov
mov
jo
pop
pop
movsl
sub
imul
stc
jns
push
lcall
icebp
dec
insl
jl
push
clc
jnp
mov
jne
popa
stos
or
mov
add
repnz
xlat
inc
daa
incl
add
cmpsb
lods
mov
pop
enter
into
pop
sbb
mov
insb
xor
stos
dec
popa
repnz
nop
add
mov
cmc
nop
cmp
sub
daa
push
inc
xchg
inc
addr16
shl
adc
xor
out
or
lret
xchg
repz
hlt
fidivs
or
xchg
mov
outsl
enter
mov
imul
xor
nop
or
test
mov
dec
in
mov
mov
lret
not
xchg
gs
mov
out
cmpsb
pusha
dec
out
mov
push
fisubrs
xor
xor
bound
lcall
fucom
lock
dec
int
inc
sub
cmpsl
stc
out
fimull
subb
cmp
movsl
imul
inc
rcl
fwait
out
mov
out
fisubl
or
add
cmp
lods
push
lret
jle
stos
sbb
cmp
add
mov
shrb
cs
sbb
and
pusha
shrl
test
dec
adc
jge
add
cmpl
pop
rol
push
gs
push
dec
dec
loope
sub
pop
adc
mov
inc
addb
scas
incl
dec
sub
jg
mov
push
mov
inc
cs
notl
sti
push
push
or
sbb
add
mov
in
jge
sarb
adc
in
enter
xchg
or
lret
sub
outsl
inc
mov
pusha
push
lret
inc
pop
test
in
or
stos
aaa
mov
push
out
pop
mov
mov
insl
pop
test
aam
fidivrl
test
add
sub
jp
jns
sahf
cltd
lcall
push
mov
in
jne
hlt
nop
test
mov
inc
in
test
cmp
mov
inc
pop
push
jge
or
das
sub
mov
dec
sti
add
ret
pop
setbe
rolb
bound
sub
fdivrs
arpl
test
dec
mov
cs
insb
mov
test
into
adc
sti
dec
mov
jl
mov
gs
imul
fs
sbb
std
cmc
in
or
ja
cmp
int3
cmc
or
push
jmp
or
loopne
fldt
mov
jmp
aam
mov
adc
fcomi
into
mov
and
int3
push
pop
sbb
aas
test
es
stos
sub
mov
push
insb
hlt
inc
mov
or
and
adc
sahf
mov
bound
and
cmp
into
or
aas
das
fbstp
jmp
mov
dec
lods
push
cli
jnp
icebp
mov
adc
lea
adc
inc
cmp
rclb
ret
shll
cmp
jmp
pop
fildl
fidivl
cli
repnz
fwait
mov
sbb
jmp
in
mov
rorb
xchg
and
push
popf
inc
xchg
mov
xchg
stc
mov
mov
jo
pop
pop
movsl
sub
imul
stc
jns
push
lcall
icebp
dec
insl
jl
push
clc
jnp
mov
mov
add
lcall
mov
test
gs
jne
test
les
lods
iret
lock
sub
mov
jbe
mov
mov
lods
fmul
es
mov
jnp
lret
out
push
or
fisttpll
xchg
add
aas
ret
and
rclb
jbe
leave
add
mov
leave
subb
jle
testl
push
icebp
int3
insl
enter
scas
pushf
outsb
or
xchg
int
cmp
addb
fildl
repnz
and
xchg
aaa
pop
or
pop
inc
sub
iret
fdiv
sbb
mov
push
pop
adc
cld
or
pop
jbe
add
mov
adc
dec
cmp
mov
cs
stc
popl
xlat
jmp
scas
xlat
aaa
adc
lea
mov
and
das
dec
and
pop
lret
pop
hlt
jb
push
js
sbb
or
out
jmp
cmp
cwtl
inc
xor
xchg
faddp
outsl
mov
sub
mov
xor
pop
fcoms
dec
es
lret
ffreep
shlb
adc
enter
shr
fcmovnbe
sub
fistpll
dec
jno
inc
mov
ss
cld
and
xor
mov
mov
jnp
movsl
aaa
cld
pop
popf
out
mov
xor
out
mov
sbb
icebp
push
sub
daa
dec
lret
pop
jae
and
xchg
mov
aam
in
mov
jmp
out
sbb
mov
push
repnz
pop
leave
mov
push
push
mov
xchg
pop
jns
imul
push
in
in
sbb
cmp
pusha
shl
sub
add
jmp
jne
decb
sub
adc
add
pop
sahf
iret
jo
int
pop
fdiv
sbb
mov
push
and
out
test
jns
dec
aad
mov
jmp
stos
test
mov
enter
jbe
mov
mov
arpl
imul
pop
mov
push
jl
sbb
inc
pop
jmp
xchg
mov
pop
sbb
pminsw
pop
lea
sbb
cmp
push
mov
in
jne
stc
xor
shr
adc
pop
in
sbb
adc
sbb
mov
cmp
mov
int3
insl
xchg
push
jl
pop
push
scas
andl
cmpsb
pusha
mov
jae
dec
pop
sub
jge
jle
mov
mov
and
dec
movsl
jb
push
or
sub
or
cmpsl
jmp
and
push
pop
js
xchg
xchg
in
ljmp
add
cli
adc
int3
pop
test
insb
pop
mov
scas
xlat
add
add
pop
xchg
aaa
sub
push
insl
mov
sbbb
repz
rorl
add
inc
sbb
gs
mov
push
push
push
adc
test
insb
inc
jbe
popf
test
adc
je
jg
inc
xor
jae
fiaddl
and
lcall
mov
jo
xor
xor
adc
jbe
mov
movsb
and
fdivp
orb
sbb
in
ja
mov
fisubrl
xlat
mov
neg
cmp
and
lcall
cmp
dec
sti
sub
shlb
insb
push
rcl
mov
jbe
pop
push
popf
mov
sbb
stos
les
mov
in
out
pop
xor
lods
sbb
cli
call
xor
cld
out
pop
mov
mov
sbb
adc
pop
fsubr
sahf
jae
sub
xor
sub
mov
jge
ror
xor
and
mov
mov
dec
mov
pop
push
cltd
mov
notl
fwait
aad
out
rcrb
popa
pop
adc
jne
bound
test
sti
jmp
ljmp
data16
into
dec
test
cmp
push
into
xor
sbb
hlt
leave
xchg
sub
rcll
mov
push
frstpm(287
xchg
jo
repnz
add
sbb
std
subl
mov
push
lret
push
xor
enter
jae
inc
cs
cmpsl
fldcw
mov
loope
mov
jno
cltd
and
stos
testl
cmp
aad
sbb
es
push
pop
add
and
or
and
enter
mov
xlat
bound
jo
jl
hlt
call
pop
or
xchg
sbb
adc
dec
push
test
jle
mov
adc
xchg
loop
xchg
pop
xchg
das
es
out
and
std
mov
sub
fisttps
mov
test
movsb
popa
mov
xlat
nop
xchg
data16
pop
dec
lret
add
ds
nop
insl
jecxz
mov
enter
inc
stos
mov
xor
rcl
add
xchg
sbb
mov
mov
xchg
bound
and
sub
sbb
cli
lcall
stos
xlat
cmp
xlat
or
fwait
cmpl
into
popa
in
mov
jl
inc
cs
jmp
push
ljmp
inc
mov
stos
cmp
jge
xlat
add
sahf
push
ret
push
mov
pop
sub
popa
cmc
mov
xchg
fs
pop
dec
sub
push
jge
dec
mov
loopne
xchg
push
sbbl
movl
in
mov
jp
mov
jnp
xor
stc
mov
aas
ds
mov
popf
dec
push
adc
xor
cmp
mov
add
cmp
jge
pop
decl
jne
roll
out
xor
pop
jne
xor
jnp
push
inc
sub
push
addr16
or
sarb
sub
test
mov
shll
leave
mov
scas
ret
fildl
mov
jne
out
dec
push
aad
sub
adc
xchg
jg
dec
test
inc
jmp
cmp
ret
and
cmc
jle
sub
je
jbe
inc
fistpll
fcompl
add
push
stos
scas
insl
inc
xlat
pop
add
xchg
mov
mov
stc
jecxz
push
rcll
stc
jmp
popa
pop
fs
xchg
into
dec
push
add
stc
sub
or
jecxz
jns
jl
push
out
movsb
xor
dec
ljmp
fiaddl
xor
jno
loope
loop
pop
bound
bound
scas
add
popa
pop
pcmpgtb
lahf
and
and
push
xlat
sbb
xchg
mov
jb
mov
inc
aaa
xorl
adc
mov
mov
xor
pop
lock
mov
scas
push
dec
xorb
jle
dec
int
sahf
sub
add
incb
jmp
cmp
pop
jne
cmp
test
fcmovnu
orb
cmpsb
inc
rolb
fisubrs
or
hlt
mov
push
and
dec
in
rclb
cs
leave
dec
nop
setns
mov
jmp
leave
xchg
out
fucomi
fidivs
mov
mov
jmp
out
inc
jg
push
insl
inc
testl
hlt
push
jge
xchg
cmp
inc
shl
lret
mov
fiadds
push
fsubs
lcall
shl
sbb
mov
bound
cmp
sarl
std
xchg
xchg
inc
in
mov
mov
shlb
sbb
js
xchg
dec
pop
xlat
aad
movsl
aam
repz
push
sub
pop
mov
orl
stos
sbb
stos
mov
shr
xchg
aas
mov
push
inc
cmp
jae
or
jl
lds
leave
or
mov
xor
add
mov
addr16
mov
push
pop
dec
lock
mov
and
lahf
and
cs
pop
pusha
stos
loope
scas
push
xlat
sbb
xchg
mov
jb
mov
cld
pop
cmc
dec
xor
iret
pushl
xlat
mov
cmp
jbe
popa
setge
dec
bound
incb
jno
sub
inc
cmp
or
stos
les
jmp
adc
bound
adc
and
loope
mov
pop
jnp
movb
in
or
test
loop
pop
mov
add
pop
dec
sub
int
mov
fldenv
test
pop
add
out
add
mov
xor
fsubs
jns
int3
cmp
mov
dec
test
mull
shrl
mov
mov
mov
mov
nop
mov
ret
jnp
ds
dec
xor
cmpsb
adc
add
cmp
sbb
cld
cmpsb
aaa
cmpb
movsl
sub
cmp
in
mov
pushf
jno
adc
add
add
ja
lods
std
popa
hlt
jne
dec
mov
ss
popf
mov
nop
dec
or
adc
outsb
pop
mov
adc
and
hlt
xchg
jb
or
iret
xor
ss
inc
sub
xor
sub
cltd
pop
addr16
cmp
pop
incb
adc
jmp
inc
pop
or
outsl
sub
jecxz
and
jb
dec
rcrb
mov
mov
jecxz
sub
fbstp
mov
adc
xor
sub
pop
cld
bound
pop
jne
scas
cmp
adc
hlt
pop
in
xchg
sbb
bound
or
sbb
push
mov
js
sub
jmp
bound
push
sbb
pop
mov
adc
and
or
fstpt
xor
incb
fwait
or
pop
addr16
cmp
pop
incb
adc
jmp
inc
pop
or
outsl
sub
jecxz
and
jb
dec
lcall
in
in
mov
push
out
or
jo
mov
adc
xor
adc
push
pop
bound
bound
pop
dec
iret
pop
and
jmp
insb
test
outsl
sub
mov
mov
lods
dec
imul
dec
sbb
sbb
mov
cmp
or
clc
mov
repnz
sub
pop
pop
xchg
or
push
iret
cld
imul
out
fucomip
decl
mov
xor
ret
jp
push
outsl
inc
jns
jg
or
xor
call
jo
mov
add
daa
int3
rcr
sbb
leave
xchg
xorl
fimuls
mov
fidivs
mov
enter
cltd
xor
shlb
stc
mov
aas
ds
mov
dec
mov
mov
push
frstor
sub
je
push
or
mov
add
add
lret
add
jb
fs
xchg
pop
mov
pusha
or
insl
sbb
dec
xchg
pop
push
andb
pop
sub
adc
xchg
lahf
jno
test
jnp
inc
or
push
pop
jmp
xor
push
negl
in
pop
cmp
lret
lods
xor
repnz
ds
call
pop
xor
sub
add
add
roll
cmp
fldenv
test
jae
cmp
or
adc
push
xchg
lods
inc
cmp
out
xchg
mov
scas
push
sahf
xchg
sbb
shll
fdivs
adc
cmpsb
clc
popa
fcompl
loope
pop
pop
lea
or
adc
jmp
loop
popf
stc
sahf
enter
idivl
mov
xor
mov
aam
push
aas
xor
xor
pop
pop
repz
pop
dec
mov
dec
mov
xchg
sbb
stos
sarb
js
mov
sbb
imul
xor
shlb
stc
mov
aas
ds
mov
dec
mov
mov
and
pop
mov
in
faddl
inc
arpl
pop
xchg
jnp
mov
jne
xchg
movsl
push
scas
mov
ja
fdivrs
std
sub
std
lock
cmc
xor
in
fstpl
pop
mov
dec
movsl
loope
cli
mov
sub
push
jns
push
iret
mov
cmpsl
rol
inc
mov
jmp
adc
inc
sub
sbb
pop
jno
sbb
xor
sbb
sub
adc
pop
push
mov
hlt
leave
pop
mov
mov
or
dec
sbb
sbb
mov
cmp
or
test
cmp
inc
inc
shl
in
push
xchg
cmp
sub
push
dec
lods
and
mov
xchg
loopne
jge
sub
mov
cli
outsl
or
loope
movsb
add
pop
mov
das
mov
hlt
into
mov
popa
mov
mov
xchg
add
iret
mov
mov
mov
adc
xor
xlat
aad
movsl
aam
repz
dec
fsubrs
jns
addr16
cmpsl
cmpb
cmpsb
pop
movl
into
fsubr
loope
daa
jb
jecxz
xor
pop
cld
jnp
insl
ficomps
cmp
mov
in
push
and
adc
ret
fcmove
sti
mov
cld
cs
sarl
mov
mov
stc
mov
pop
mov
lret
xchg
xchg
mov
clc
in
fmull
sahf
mov
mov
xlat
cli
push
xchg
mov
ljmp
push
out
stc
or
adcb
lea
pop
mov
leave
mov
cmp
add
lcall
scas
repz
les
lea
js
mov
stos
mov
sbb
mov
enter
int
dec
pop
fcomps
stos
xchg
cmpsl
mov
mov
je
jge
and
xlat
lret
inc
sar
hlt
imul
pop
lcall
cmp
mov
outsl
cmpsl
enter
leave
adc
sbb
mov
fcmovu
mov
pusha
aam
jns
loope
inc
nop
xchg
ret
popf
mov
sbb
jecxz
jge
stos
jmp
sbb
test
push
imul
js
stos
dec
sub
repz
inc
dec
sbb
sbb
mov
pushf
dec
xchg
xor
loop
out
mov
jecxz
incl
fwait
sbb
adc
pop
roll
fldcw
adc
aad
insb
mov
and
jge
inc
jnp
nop
sbb
sbb
xchg
dec
lds
flds
das
push
rcrl
push
pusha
inc
jno
lcall
mov
dec
sbb
sbb
mov
std
and
xor
sub
xchg
mov
dec
or
mov
pop
sub
jmp
push
lret
adc
pop
sbb
jl
adcb
nop
cmpsb
pop
push
dec
push
jge
in
adc
xchg
dec
pop
xlat
push
stos
pushf
fwait
adc
mov
fwait
clc
jns
push
punpckldq
pop
out
mov
cwtl
inc
ror
jp
push
add
imul
fucomip
cwtl
shrb
xchg
adc
rolb
or
or
push
dec
hlt
sahf
adc
add
mov
fdivrs
and
cmp
ljmp
push
sbb
shrl
mov
ja
insl
inc
outsl
test
pushf
sbb
jecxz
sbb
cwtl
and
dec
or
orb
outsb
sbb
ret
lods
inc
push
nop
je
cwtl
arpl
rorl
pop
rcrb
aas
popf
mov
out
imull
mov
sbbb
sbb
stos
mov
xchg
mov
sbb
test
andb
les
shll
sub
ss
fwait
sti
in
adc
mov
sub
out
xor
jp
adc
clc
std
inc
mov
test
outsb
ss
pushf
dec
jns
sub
mov
addr16
pop
nop
incl
gs
inc
and
enter
lea
xlat
and
xorl
or
pop
outsb
cwtl
jne
mov
dec
js
mov
out
scas
gs
push
xchg
out
jb
sub
cmp
lahf
icebp
lret
loopne
lock
cltd
mov
and
jl
popa
mov
call
adc
pop
iret
cwtl
aad
adcb
add
sbb
js
mov
xor
js
movaps
ret
jno
xor
xchg
out
jo
xchg
js
lods
sub
scas
dec
sub
sbb
mov
adc
adc
inc
imul
loope,pt
icebp
inc
rorb
pop
mov
cmc
adc
dec
out
or
inc
xchg
js
clc
ror
push
iret
popf
push
adc
push
daa
mov
pop
out
or
cmpsl
scas
xchg
fdivp
fsubrl
nop
xchg
mov
out
fimull
inc
sbb
in
movsl
pop
mov
cld
jae
mov
je
je
fadd
sbb
mov
pop
mov
call
cmp
cli
push
add
roll
add
xchg
xchg
push
mov
push
outsb
pop
mov
into
movsl
aas
inc
cltd
dec
mov
xchg
test
jne
jmp
dec
xorl
imul
push
sub
and
stos
jnp
leave
int3
stos
mov
add
mov
pop
inc
test
cmpsb
mov
xor
sbb
jne
xor
les
cmp
adc
sti
rcll
jle
xchg
fwait
adc
adc
pop
cmp
lods
dec
xor
adc
pop
test
sub
and
pop
imul
mov
movsb
sub
je
inc
push
push
fmuls
outsl
add
mov
dec
push
pop
add
jg
mov
push
int3
fwait
mov
dec
es
push
sahf
popa
jnp
xor
ret
xchg
fisubrl
outsb
push
jo
jle
sbb
sbb
mov
cmp
or
int
cwtl
cmp
adc
jge
jno
xlat
fistpl
mov
addb
mov
bnd
jnp
push
jns
repnz
adc
jbe
jne
scas
scas
and
push
popf
pop
test
int3
lods
das
test
adc
dec
out
or
mov
jns
adc
fldenv
fs
mov
iret
inc
imul
xchg
hlt
outsb
testl
sbb
cmc
adc
dec
out
or
lock
xor
es
jb
push
xor
repnz
cmpsl
scas
xchg
fdivp
fsubrl
nop
xchg
mov
out
fimull
inc
sbb
in
movsl
pop
mov
cld
jae
mov
je
je
sti
xchg
dec
ret
mov
je
mov
pop
mov
call
xor
int3
inc
loope
flds
std
or
and
aaa
push
outsb
pop
mov
into
movsl
aas
inc
cltd
dec
mov
xchg
test
jne
jmp
dec
xorl
imul
push
sub
and
stos
addr16
movsb
mov
dec
repnz
pop
inc
test
cmpsb
mov
xor
cmp
fadd
mov
jle
adc
js
mov
in
push
fmuls
outsl
add
mov
subl
jle
inc
sbb
loop
inc
in
std
outsb
add
inc
pop
xchg
mov
jg,pn
cmp
xlat
stos
hlt
mov
cmp
les
aad
mov
sahf
leave
xchg
out
fucomi
ficomps
sbb
dec
ficomps
les
sbb
mov
lret
rclb
scas
adc
outsb
dec
sub
aaa
rolb
ljmp
fistpll
xchg
hlt
popa
mov
movsb
aam
ja
rolb
xchg
bound
cwtl
std
or
sbbl
je
sub
or
inc
jnp
jo
xchg
hlt
sbb
jecxz
imull
add
and
mov
mov
insl
push
or
sub
cs
mov
dec
xor
ficoml
jae
in
mov
mov
sarl
pop
fcmovb
insl
sbb
push
mov
cmp
adc
outsl
mov
xor
ss
test
std
repz
dec
sbb
dec
pop
lock
data16
rorl
mov
out
jg
incb
sti
lods
push
cmpsb
movsl
mov
pop
add
xchg
in
mov
daa
push
int
subl
cmpsb
push
add
scas
xchg
xor
movsb
add
hlt
xchg
popf
add
lock
lcall
push
push
add
dec
cvtpi2ps
mov
aad
sbb
sbb
mov
cmp
or
in
xor
stos
lcall
jmp
sub
iret
fwait
not
out
mov
sahf
bnd
jp
std
js
mov
call
jge
aaa
pop
jno
mov
insb
mov
lods
xchg
mov
stos
hlt
push
ja
xor
sbb
push
adc
daa
test
into
cmpps
loopne
mov
fistpll
xchg
std
mov
inc
insl
cmp
into
jmp
add
mov
jno
jg
xchg
sub
scas
jp
jb
xlat
adc
arpl
ljmp
pop
mov
fimuls
mov
test
outsb
call
cltd
xor
shlb
stc
mov
aas
ds
mov
dec
mov
mov
sub
mov
inc
pop
sbbb
or
imul
nop
in
jp
shll
popf
imul
and
fmull
int
add
inc
push
push
and
lds
push
adc
movsb
dec
arpl
int
inc
push
mov
repz
leave
mov
add
ret
adc
js
or
pop
outsl
fst
or
cltd
dec
lahf
mov
movsb
xchg
loopne
cltd
daa
cltd
pop
out
out
pop
out
repz
push
into
iret
adc
cmp
mov
into
and
sarl
xor
xchg
rcll
or
dec
inc
call
and
andb
mov
outsb
cmp
cltd
cmp
fcompp
das
bnd
aam
test
or
jo
stc
scas
cwtl
push
fdivr
lret
aam
adc
mov
cmp
cmp
xor
cld
imul
jp
pop
adc
mov
int
lea
or
popf
nop
int3
fists
sar
sub
lds
adc
mov
add
jae
pop
pop
or
mov
xchg
lret
int
jb
mov
lods
popf
popa
clc
and
push
inc
add
out
dec
sbb
pop
xchg
mov
shlb
dec
mov
shlb
mov
lods
decl
inc
add
push
lds
sbbb
pop
imul
idivl
mov
loope
gs
xor
jno
popa
shrl
jnp
and
jp
test
mov
push
add
loopne
mov
and
inc
or
aam
jecxz
mov
lcall
fbstp
lds
mov
negb
push
bound
xchg
test
mov
mov
testb
inc
out
loopne
leave
jp
stos
cltd
es
addb
out
movsl
jbe
sub
adc
mov
loope
fcomps
mov
in
jne
ljmp
icebp
test
insl
ss
mov
mov
add
ds
jo
lds
pop
pusha
inc
sub
sub
sub
mov
scas
into
mov
mov
jae
rcrl
pushf
mov
xlat
les
ja
mov
in
jne
and
in
or
push
test
xor
pop
push
xor
dec
xchg
jp
out
mov
sub
cmp
and
dec
xor
jl
push
mov
push
mov
jg
repz
aam
add
arpl
test
fstpt
sbbb
cs
adc
adc
movsl
mov
xchg
cmp
or
les
or
arpl
mov
xchg
rep
shl
data16
insl
cltd
sub
lea
cmpsb
mov
jl
stos
movsl
cs
mov
jg
repz
aam
add
mov
fsubr
sbb
insl
jb
pop
pusha
sbb
idiv
call
ja
xchg
fisubs
fstl
cmp
pop
push
les
cmp
lea
jecxz
les
call
push
test
cmp
insl
lcall
sahf
ss
mov
mov
test
cmp
mov
lock
fidivrs
ret
test
enter
ja
pop
pop
stc
dec
adcl
inc
repz
lahf
mov
loope
push
xor
mov
es
pop
mov
aaa
mov
fcom
mov
incl
or
xchg
sub
dec
lds
or
loope
xor
adc
jge
fcoms
fstl
int
jb
les
mov
movb
lret
adc
sahf
or
xchg
mov
movsl
fcmovne
pushl
sarb
xchg
mov
jle
stos
sahf
addr16
stc
ret
jg
insl
jl
jb
cmpb
mov
sub
mov
sub
jp
jno
mov
push
inc
test
data16
icebp
ja
mov
addb
test
outsb
daa
subl
and
push
pop
popa
aas
adc
aam
xlat
xor
cld
test
jnp
cmpsl
adc
jmp
icebp
ss
mov
pop
mov
cli
std
jge
ja
into
xorb
push
ss
mov
sub
cli
mov
loop
add
jns
push
mov
in
jo
enter
mov
push
mov
in
jne
add
aad
and
fadd
cmp
call
mov
jnp
jo
ss
push
sbb
cmc
hlt
fs
scas
xor
adcl
jno
mov
mov
aaa
repz
fidivs
mov
into
jne
jne
popf
sub
mov
or
scas
inc
xor
xchg
out
shlb
int
jl
jne
ss
inc
mov
push
jmp
mov
in
xchg
sbb
add
or
mov
cmc
xchg
or
in
xchg
lret
jmp
or
and
jnp
jbe
add
inc
in
test
and
adc
or
push
mov
in
push
stos
adc
shll
push
fildl
xchg
xchg
mov
movsl
dec
out
rorb
inc
nop
push
pop
add
xchg
inc
sbbl
inc
cwtl
adc
cmpsl
clc
test
pop
int3
or
sub
popf
mov
adc
lret
push
jnp
gs
int
mov
pop
add
xor
and
cmp
lret
mov
sti
cmpsl
pop
lret
mov
call
mov
repz
test
clc
xchg
mov
inc
and
js
sub
adc
loop
je
or
adc
jmp
loope
and
je
mov
hlt
pop
and
rolb
inc
repz
dec
or
xor
jmp
stc
out
mov
jp
arpl
add
aaa
aad
and
fsubrs
fisubl
repz
mov
add
popf
sbb
test
ljmp
cmc
hlt
fs
scas
xor
jnp
push
push
push
mov
mov
aaa
adc
jne
fldcw
push
add
mov
pop
aas
adc
fstpt
ret
ja
mov
lcall
pop
mov
cwtl
adcl
jecxz
mov
repnz
ds
fsubr
notb
lret
inc
iret
sub
dec
jb
adc
dec
fwait
and
decb
leave
popf
inc
imul
and
jnp
jbe
bnd
enter
stos
xor
repz
sbb
pushf
ljmp
pop
mov
cmp
cli
cli
aas
jne
inc
jae
jae
push
mov
xchg
xchg
mov
movsl
dec
out
rorb
inc
nop
push
pop
add
xchg
inc
sbbl
inc
cwtl
adc
cmpsl
clc
test
pop
int3
or
mov
pushf
lcall
cld
gs
int
mov
pop
add
xor
and
cmp
lret
mov
sti
cmpsl
pop
lret
mov
call
mov
repz
test
and
sahf
push
xchg
enter
movsb
xor
sbb
pop
adc
jmp
loope
and
je
mov
hlt
pop
and
rolb
inc
inc
jl
sub
cmpb
xchg
dec
push
fsubs
adc
in
lea
and
jg
jnp
jl
xor
repnz
jns
inc
ljmp
pop
mov
push
adc
adc
test
mov
jle
iret
jmp
cmp
cmpsl
movsl
cmpsl
dec
adc
dec
mov
lret
pop
jge
mov
inc
sbb
pusha
andl
in
sub
mov
addb
aam
or
decl
test
in
out
mov
stos
mov
jge
sahf
sbb
xor
and
sbb
and
mov
mov
repnz
iret
push
adc
shlb
mov
sub
xchg
xor
or
add
xor
lods
mov
jnp
xor
push
cmp
rcrl
inc
sub
test
mov
das
push
xor
jne
adc
rcrb
xor
xchg
popf
outsb
mov
inc
jb
push
and
mov
jl
pusha
into
push
jecxz
lods
mov
js
mov
push
cmp
iret
adc
nop
outsb
or
or
adc
xor
lods
dec
cmp
jecxz
mov
push
mov
in
jne
xor
cld
or
pop
jle
mov
xchg
iret
rcl
loop
push
imul
mov
jo
or
jecxz
pop
das
cli
jb
movsl
adc
inc
out
mov
pop
xor
mov
ljmp
pop
int
inc
je
rolb
push
ret
imul
adc
faddp
es
pop
xchg
test
in
dec
inc
push
pusha
out
lds
cmp
inc
hlt
test
in
dec
inc
push
pusha
stos
sbb
xlat
ret
pop
pop
bound
push
in
dec
inc
push
pusha
repnz
imul
out
fs
divl
test
in
dec
inc
push
pusha
xor
sub
jp
inc
gs
inc
test
in
dec
inc
push
pusha
mov
or
cli
lds
out
imul
push
or
jae
or
sbb
add
stos
enter
fimuls
int3
mov
jl
pop
orb
sub
out
andnps
in
fimuls
int3
mov
ficoms
adc
mov
xor
jo
push
adc
dec
jmp
adc
bound
sub
or
inc
push
outsb
faddl
daa
ret
scas
sub
mov
add
and
adc
dec
sahf
scas
sub
mov
fstl
out
and
iret
sbb
fcmovu
scas
sub
mov
cltd
mov
mov
cmpl
fwait
out
mov
sub
mov
jae
stos
pushf
mov
lahf
jp
ja
pushf
fisubrl
lods
scas
sub
mov
lahf
incl
cmp
mov
sahf
scas
sub
mov
into
es
stc
ds
lcall
scas
sub
mov
int
mov
pop
xchg
mov
in
idivl
addr16
fucomp
jp
jp
mov
repnz
xchg
mov
popf
push
clc
fnclex
xor
bound
push
fs
cmp
dec
push
repz
cmc
and
mov
sti
in
inc
sub
xor
inc
lret
stos
sub
cltd
movsl
pop
mov
sub
iret
mov
xor
je
ss
sub
mov
mov
inc
cltd
pop
subl
aad
pop
xchg
lds
sbb
pop
lea
inc
mov
xor
mov
mov
popa
xchg
bound
jb
push
test
jne
mov
or
test
push
mov
xchg
inc
or
sbb
and
mov
loopne
xchg
push
jl
sub
repz
filds
xchg
xorl
push
mov
push
mov
ss
mov
stos
lahf
pop
xor
pop
adc
dec
cltd
jne
sub
daa
out
and
cmp
ja
mov
mov
fwait
inc
pop
shrl
jb
and
mov
pop
test
loopne
mov
fs
inc
stos
push
xchg
mov
je
jae
shrb
inc
pop
cmp
mov
test
push
and
cmp
test
ljmp
outsl
mov
xlat
call
fildll
dec
daa
pop
fsubrs
scas
xlat
pop
mov
ss
test
adc
mov
lahf
xchg
cmp
icebp
xor
leave
ret
sahf
push
lret
or
pushf
stos
push
loop
daa
mov
cmpsl
jb
sub
inc
repz
leave
xlat
xchg
inc
scas
cmp
hlt
fldt
push
mov
mov
xor
int3
jmp
cmp
fs
push
test
pop
lods
movsb
and
inc
leave
add
xor
outsl
scas
mov
sub
pop
rclb
in
iret
data16
imul
aas
mov
cmp
mov
bound
stos
outsb
data16
scas
sub
xchg
sub
nop
push
mov
dec
out
jmp
pop
rorb
punpcklbw
add
jl
cmpsb
lea
sar
frstor
xchg
ret
adc
jbe
arpl
rcrl
inc
mov
mov
mov
sti
enter
fwait
pop
lea
cmp
iret
adc
fwait
in
jne
insl
outsb
test
or
xchg
pop
fcmovnu
lret
add
outsb
cmpsb
dec
test
dec
imul
cld
inc
add
or
xchg
hlt
and
or
test
mov
mov
mov
das
outsl
jmp
add
daa
mov
mov
sbb
int
into
push
and
sbb
loop
movsl
sub
cli
mov
call
dec
and
call
jmp
test
rorl
iret
adc
fwait
in
jne
ljmp
cwtl
stc
add
or
push
mov
sbb
mov
push
dec
xor
shll
adc
cmp
daa
push
pop
popa
out
das
dec
cmpsl
xlat
xor
push
push
jmp
add
aaa
js
fwait
jnp
jl
push
stos
xchg
dec
ljmp
xchg
dec
add
je
push
movsl
dec
scas
xor
jmp
cmp
or
mov
out
xor
rcrb
pop
mov
mov
adc
sbb
imul
xchg
pusha
popf
sarl
lods
int3
jmp
test
rorl
iret
adc
fwait
in
jne
negl
inc
js
orl
fmulp
dec
ja
aaa
pop
andl
mov
or
sbb
and
xchg
mov
test
imul
or
mov
xlat
add
aas
jle
notb
ljmp
cmpsl
or
das
mov
imul
out
fmuls
sbb
es
stc
ds
je
push
inc
test
mov
dec
dec
cwtl
rclb
lcall
maskmovq
notl
jmp
adc
int3
aas
or
sbb
outsb
xor
inc
sbb
shlb
pop
push
push
jo
call
cmp
out
jle,pn
lea
mov
pop
push
xorb
sub
xlat
sub
sub
xchg
js
scas
imul
stc
inc
jecxz
push
ss
les
xor
jg
dec
js
out
in
call
cmpsl
cmpsl
or
lahf
insl
shr
push
mov
movsb
mov
fisubrl
fcomi
xchg
jnp
mov
xchg
scas
lcall
scas
inc
push
xchg
mov
sub
ds
es
push
sbb
or
mov
xchg
iret
scas
mov
std
and
aad
push
fsubl
or
mov
xchg
and
scas
cli
inc
dec
gs
cmpl
pop
enter
lret
or
int
std
shll
mov
push
hlt
add
push
mov
mov
pop
and
push
fisttpl
lods
daa
adc
mov
test
ljmp
ja
xchg
cmp
sub
or
inc
movsl
sbb
inc
rcll
outsl
xor
dec
stc
in
push
mov
faddp
adc
cmpsl
sbb
arpl
icebp
je
cld
inc
cmpsl
lods
dec
daa
push
jns
mov
cmp
and
xchg
loope
dec
in
scas
outsl
xchg
mov
mov
add
js
shll
into
cmp
pop
push
jbe
adc
mov
mov
mov
xor
pop
test
sbb
stos
cmp
rclb
imul
xor
and
sbb
idivl
pop
in
int3
push
adc
jne
mov
cmp
loope
int3
lahf
sbb
addr16
inc
adc
and
push
out
fisttpll
or
inc
stos
out
rcrb
imul
adc
push
mov
mov
sti
andb
fwait
aas
sahf
repz
push
jmp
enter
aam
xchg
orl
sbb
ds
clc
sub
mov
lret
xor
mov
sbbb
pusha
and
fucom
dec
out
fsubrs
pop
icebp
jb
jo
or
rcr
sub
cmp
js
inc
or
pop
fst
decb
out
test
pop
xchg
insb
scas
adc
mov
push
and
and
sub
mov
or
mov
jmp
mov
jnp
sbb
rorb
aas
cmp
xor
icebp
inc
std
xor
mov
mov
popf
and
push
inc
mov
and
fldenv
fistps
xchg
dec
loop
jae
sub
rcl
dec
je
hlt
pop
inc
pop
adc
xor
mov
std
or
push
mov
aad
imul
cwtl
or
jmp
ljmp
pop
test
jl
mov
mov
mov
out
sub
mov
mov
ljmp
cmp
pop
ja
sbb
popa
das
in
jp
pop
cwtl
push
mov
imul
add
das
or
fdivrl
add
movsl
out
clc
loope
out
inc
ljmp
popf
cld
movsb
pop
mov
js
jns
dec
stos
dec
fxch
mov
xor
fisttps
lahf
shrl
sub
or
pop
lret
mov
stc
inc
fisubs
lret
sbb
cmp
lea
jg
xor
arpl
cmpsl
ss
push
stos
fdivr
xor
shrb
add
mov
leave
sbb
cmp
rclb
mov
test
jp
sub
out
xchg
mov
mov
mov
in
jne
fdivrs
inc
lret
iret
div
adc
pushf
xor
dec
out
jl,pt
cwtl
lods
repnz
sbb
xor
fwait
inc
xchg
pop
pop
int3
decl
mov
sub
rorl
sub
mov
mov
fwait
xor
ja
add
xor
jmp
stc
out
mov
icebp
bound
xor
ss
psrlq
mov
shl
fcoms
stc
sahf
mov
xor
sti
mov
call
push
arpl
xchg
movsl
adc
adc
fwait
in
jne
out
mov
ret
ret
fcoms
bswap
scas
leave
inc
inc
xchg
lds
int
ljmp
cmp
add
call
xchg
add
dec
xchg
movsl
push
cmp
lods
scas
xchg
cmpsb
ljmp
arpl
lahf
test
arpl
pop
jno
mov
ja
sbbb
jmp
in
or
rol
mov
out
ret
add
inc
in
mov
imul
daa
xorb
jmp
pop
arpl
xchg
filds
scas
sarl
pop
or
xorl
sbb
cmp
fbstp
lret
xchg
mov
jo
push
icebp
inc
push
xchg
mov
sbb
cmp
mov
out
ja
mov
cs
cmovnp
in
push
mov
xor
jge
inc
addr16
gs
and
jecxz
and
in
dec
inc
push
pusha
aas
pop
fldt
cmpsb
scas
repz
inc
adc
shrb
call
mov
mov
xchg
sub
sub
jge
dec
jle
and
and
jmp
out
ja
mov
mov
insl
mov
mov
push
jns
mov
dec
inc
push
pusha
aas
pop
fldt
cmc
and
ret
add
and
setl
jnp
fisubrs
inc
adcb
stc
fimull
and
inc
repnz
dec
xchg
xor
push
jne
shlb
cmp
loopne
jns
xor
add
imul
sbb
mov
mov
dec
jmp
dec
xor
std
push
test
fwait
dec
ficomps
rorb
in
dec
inc
push
pusha
adc
popf
inc
adc
push
cmp
nop
test
sub
fsubp
mov
jecxz
pop
mov
repz
and
movsb
pushf
fs
popl
ja
gs
js
rcrl
add
ja
repz
pop
addl
add
xor
xchg
testb
iret
push
cmp
arpl
aas
jle
jge
jmp
push
xor
dec
stc
in
push
mov
xor
jge
inc
push
jecxz
adc
outsb
fldenv
dec
scas
adc
sbbb
push
in
dec
inc
push
pusha
ss
scas
adc
enter
arpl
out
adc
aaa
add
mov
sub
repnz
enter
mov
jnp
lret
fcmovbe
cmp
ffree
mov
xor
or
dec
jmp
push
scas
mov
push
push
test
fwait
dec
adc
in
xlat
fstpt
or
push
adc
pop
cmp
inc
mov
movsb
shrb
inc
pop
gs
mull
lds
lods
mov
shr
in
out
iret
push
cmp
mov
ret
add
push
cwtl
dec
stc
sub
std
test
mov
ds
fistpl
xor
out
ja
mov
es
sub
mov
add
loopne
push
int3
mov
imul
xchg
in
mov
sbb
out
xchg
fs
pop
and
xchg
add
push
push
and
jmp
push
outsl
mov
or
mov
mov
icebp
pop
dec
inc
mov
lcall
mov
push
cmp
push
fmul
imul
cmp
stc
das
repz
cmp
sbb
cmp
stos
cld
mov
popf
js
push
data16
lahf
pop
cmc
into
popf
sbb
mov
movsl
inc
jo
daa
lea
pop
filds
bnd
ret
push
cmpsb
xor
stc
push
lret
out
stos
out
cmp
or
mov
adc
mov
out
xor
jo
pop
into
xor
adc
fwait
in
jne
adc
jb
shlb
jl
jle
cmpsl
clc
stc
mov
push
insl
sub
pop
or
call
sbb
pop
movl
xchg
popa
iret
and
push
inc
dec
cltd
lds
fwait
aas
cmpsl
arpl
sahf
sbb
roll
push
mov
in
jne
ljmp
cwtl
stc
add
or
xchg
sahf
addb
mov
sub
in
fsubr
xchg
sbb
mov
cltd
lcall
iret
xor
jmp
stc
out
mov
jecxz
jbe
jb
xlat
les
ja
mov
in
jne
cmpsl
mov
inc
int
mov
dec
sbb
pop
mov
sbb
cmp
mov
add
movsb
out
pop
or
cmp
mov
mov
mov
pop
in
add
mov
mov
addl
inc
xlat
cli
dec
ret
movsb
sub
stos
aas
stc
enter
mov
xchg
sub
push
jge
or
xor
add
insb
cld
jl
mov
jb
scas
dec
or
outsb
ficoml
test
popf
aam
stos
call
dec
test
sub
shr
cltd
mov
lods
xchg
pop
repnz
mov
inc
add
push
mov
not
out
and
or
clc
sub
mov
mov
dec
int
cld
pop
pusha
iret
pushf
mov
scas
fwait
jecxz
nop
jbe
ljmp
pop
ficomps
loop
jle
push
test
xchg
mov
into
dec
push
jb
sti
imul
adc
or
mov
mov
fs
sub
cmp
shl
mov
dec
sbb
test
inc
dec
das
in
arpl
cmpsb
das
mov
mov
scas
mov
cmp
sub
add
push
jecxz
xchg
jle
sub
inc
enter
sbb
cmc
push
insb
push
sub
ss
or
jne
xor
scas
lods
je
mov
ret
mov
shrb
push
mov
data16
movl
xor
insl
es
in
or
idivb
out
insb
aam
jb
lcall
mov
mov
xchg
lds
inc
fcmovbe
mov
fidivrl
xor
ret
lahf
xor
mov
dec
out
fsubrs
mov
sub
cmc
push
mov
mov
andl
adc
add
sub
jbe,pn
fwait
lods
test
dec
outsl
in
or
sbb
mov
in
jne
or
lahf
and
cmpsl
cwtl
test
lret
fcmovnb
xchg
mov
notl
scas
jne
fdivrs
inc
lret
iret
mov
loope
into
int
cmp
popf
ret
push
jns
jle
cli
xchg
inc
pop
pop
and
and
jle
in
pop
out
add
scas
pop
shrl
mov
pop
rolb
mov
popf
fwait
mov
jo
push
addr16
cld
out
fcoml
dec
andl
dec
lds
mov
in
jne
push
dec
addb
sbb
xchg
xchg
loopne
repz
or
gs
pop
pop
xchg
ss
nop
js
inc
cmp
lret
cli
decl
movsl
xlat
sti
lds
test
xchg
and
push
mov
in
jne
jb
icebp
sub
pop
test
test
call
push
inc
bound
dec
scas
mov
and
sahf
and
pop
sarl
jns
jb
mov
cmp
insb
jb
adc
xchg
ds
imul
jle
dec
adc
stos
data16
push
mov
in
jne
sti
pop
xor
sbb
dec
add
mov
dec
dec
jl
lcall
test
inc
add
xchg
mov
aad
push
insb
stos
out
xor
dec
mov
repz
hlt
pop
in
cmp
rcll
dec
iret
enter
iret
adc
fwait
in
jne
sti
pop
xor
sbb
dec
add
mov
dec
dec
jl
lcall
test
inc
add
xchg
xchg
jp
movsb
add
or
mov
fpatan
xor
hlt
pop
in
cmp
rcll
dec
iret
enter
iret
adc
fwait
in
jne
incb
inc
out
xchg
mov
lea
dec
outsl
lds
jno
call
into
iret
setl
jae
dec
les
outsl
movsb
xor
loope
push
push
js
sub
pop
pop
xchg
mov
push
push
dec
test
stos
je
adc
das
mov
mov
push
mov
in
jne
out
js
sbb
sahf
pop
adc
rclb
push
jmp
stc
icebp
dec
popf
mov
xchg
test
jnp
mov
lods
ja
ret
adc
outsb
dec
pushw
add
bound
das
popa
mov
sub
dec
stos
hlt
lods
dec
push
jle
mov
lods
lcall
xchg
imul
and
adc
in
jg
adc
repnz
imul
push
inc
cltd
in
sub
dec
loop
add
inc
xchg
mov
orb
fs
push
mov
in
jne
xor
jno
pop
dec
cmpsb
push
push
mov
ljmp
sub
movsb
mov
test
sbb
jle
cmp
or
lret
mov
outsl
es
sub
inc
add
ljmp
orb
iret
adc
fwait
in
jne
dec
lea
jg
dec
xchg
imul
loopne
inc
scas
jae
mov
pop
cmpsb
int3
cmp
pop
testb
xlat
in
mov
sti
inc
mov
scas
xor
out
es
ficoms
loopne
inc
scas
jae
mov
icebp
das
out
mov
repnz
lret
cs
in
out
mov
ret
push
scas
xchg
mov
add
pop
cmpsb
mov
out
dec
in
shlb
push
mov
in
jne
adc
lods
xchg
aad
out
fimull
xor
imul
leave
jb
pop
and
cmp
rolb
sub
mov
jne
out
and
jecxz
inc
xchg
cmpsl
and
jnp
int3
hlt
gs
jle
add
fs
rol
test
shl
mov
push
test
test
fs
inc
inc
dec
jp
mov
and
jnp
xchg
pop
xchg
inc
add
fdiv
sbb
mov
das
in
aad
push
stos
aas
test
add
rcrl
repnz
jle
stc
xchg
pop
inc
arpl
push
jle
mov
jge
stc
cmpsl
ds
mov
rcrl
popf
mov
inc
repnz
xor
jle
mov
jge
stc
cmpsl
das
mov
mov
push
mov
in
jne
cltd
inc
push
ret
add
jns
pop
fmuls
mov
xorl
add
mov
push
imul
jo
mov
sbb
mov
pop
xchg
cmpsb
jl
cmp
inc
inc
dec
pop
xor
xor
jb
mov
mov
addr16
pop
mov
pop
sub
shrb
std
xor
or
and
dec
mov
jmp
cltd
mov
mov
mov
mov
ret
and
pop
xchg
out
out
out
mov
jns
ljmp
in
je
ja
lock
gs
or
es
cwtl
pop
call
adc
stos
sti
iret
jo
rol
icebp
push
lahf
jl
and
sub
ffreep
adcl
subl
and
leave
test
std
xchg
movb
mov
int3
add
es
jmp
add
lahf
and
xchg
icebp
in
dec
adc
lret
fdiv
cmpsl
xlat
addb
push
stc
movsb
push
dec
movsb
jnp
mov
pop
adc
enter
sbb
dec
pop
ss
and
fiaddl
stos
aaa
testl
shlb
sbb
cmp
add
mov
pop
jbe
outsb
hlt
repz
into
cmpsb
fistl
lret
mov
adc
push
push
iret
loope
test
pop
nop
call
jns
lock
imul
jl
jmp
mov
shlb
cmp
pusha
push
xchg
sub
pop
mov
or
pushf
dec
xchg
mov
rolb
push
les
nop
xchg
pop
mov
insb
cwtl
push
clc
arpl
xor
jno
push
in
or
fcomps
mov
jl
bound
mov
in
jne
inc
mov
aas
loop
js
filds
add
mov
pop
mov
or
push
or
sbb
sub
insl
loopne
icebp
jp
jbe
loop
inc
fisttpll
jnp
or
clc
inc
xor
stc
dec
mov
fdivrl
xor
mov
out
loop
addl
setge
mov
dec
fucomp
in
mov
stos
and
mov
fildll
add
fucomi
sbb
outsl
xor
push
dec
jbe
inc
lods
add
loop
mov
popf
mov
push
adc
faddl
in
test
xor
push
pop
add
jmp
int
subb
ja
mov
in
jne
stos
mov
out
mov
mov
dec
mov
xchg
cmpsb
sbb
adcl
cmp
into
jo
cmp
xor
pop
je
pop
rolb
mov
bound
lcall
out
adc
or
push
fadds
cmp
push
addr16
fxch
mov
sub
sub
push
mov
mov
leave
test
mov
jle
cmp
adc
popa
pop
test
mov
push
mov
xchg
aaa
dec
data16
xor
call
enter
mov
mov
mov
adc
dec
pushf
data16
bnd
mov
ret
sbb
shl
dec
lock
mov
push
mov
out
repnz
jne
xor
movsl
xorb
loopne
lret
inc
mov
sub
add
push
in
lahf
xorl
mov
jp
jecxz
cltd
fnstcw
stos
cmp
inc
mov
add
adc
add
fcmovbe
sub
les
add
loop
stc
sbb
sti
movsb
mov
lcall
ficompl
shll
cmp
jmp
fisubrl
xor
insl
cli
call
lods
lcall
sbb
out
fucom
arpl
push
mov
push
popa
sbb
addl
testl
adc
or
dec
xchg
push
sbbl
xchg
sysret
add
jl
dec
rcll
cmp
iret
mov
fidivl
lods
daa
xchg
sub
adc
and
lods
pop
cli
or
call
fsubl
mov
hlt
int3
ja
in
out
mov
jmp
ficompl
shll
cmp
jmp
fisubrl
xor
insl
cli
call
lods
lcall
sbb
out
fucom
arpl
push
mov
push
popa
sbb
addl
testl
adc
or
dec
xchg
push
sbbl
mov
push
sbb
mov
in
bound
popa
or
inc
popf
add
jecxz
fsubs
inc
je
lcall
dec
into
incl
push
and
mov
cmpsl
mov
cli
call
lods
lcall
jno
cmc
xor
xor
sub
incl
xchg
iret
cmp
int3
add
rol
pusha
pop
mov
adc
pop
fs
and
and
pop
aaa
adc
aas
repnz
sbb
sbb
out
sub
xchg
imull
lods
jns
inc
sbb
in
aas
fcomps
pop
ret
dec
fisubs
pop
adc
mov
push
pusha
inc
jge
or
sarl
nop
xchg
addr16
int
test
jo
pop
add
ss
subb
push
repz
sahf
push
js
sar
push
aas
std
call
pop
dec
imul
cli
out
lods
je
call
adc
outsb
pop
push
or
jp
push
dec
rcll
cmp
iret
mov
fiaddl
lea
or
in
stc
lahf
and
data16
out
in
cltd
test
jp
mov
cmpsb
xchg
jne
rol
jno
jl
dec
adc
scas
les
adc
addr16
pop
jnp
repnz
repnz
shlb
shr
movsl
les
mov
or
fiadds
imul
popa
repz
pop
xorl
mov
adc
xor
cmp
inc
sub
mov
ds
add
mov
jp
js
mov
call
popa
mov
cmp
scas
fstpt
enter
out
sbb
out
dec
mov
insb
mov
mov
call
fnstsw
in
ss
test
mov
sub
sbb
cmp
loop
iret
addb
xchg
stos
in
out
xchg
xchg
or
mov
in
xor
xchg
mov
repz
repnz
lret
clc
mov
sbb
adc
lock
je
mov
rorb
ss
in
bound
popa
or
inc
popf
add
mov
dec
sub
or
imul
dec
into
incl
push
and
mov
cmpsl
mov
cli
call
lods
lcall
jno
cmc
xor
xor
sub
incl
xchg
iret
cmp
mov
cli
std
lahf
xchg
xchg
mov
adc
pop
fs
rorl
lret
repz
push
out
mov
pusha
lods
push
bound
fists
fldt
xlat
jmp
push
xchg
mov
jae
push
adc
call
pop
ja
out
mov
fistps
int
subb
shl
xor
mov
pop
pushf
nop
mov
jecxz
into
dec
adc
stos
data16
add
xchg
sub
pop
sub
mov
pop
inc
or
rorb
cmp
jae
fcmovnu
push
mov
xor
int3
cli
cmp
into
adc
std
mov
mov
mov
push
dec
lea
lea
xchg
cltd
or
jns
fdivrs
push
lahf
xor
repnz
jns
lcall
mov
sarb
dec
push
or
mov
push
cmp
xor
pop
inc
movsb
jne
and
xchg
fs
jo
adc
fcmovnu
push
mov
xor
int3
cli
cmp
into
adc
std
mov
mov
mov
push
dec
lea
lea
xchg
cltd
or
jns
fdivrs
push
lahf
xor
repnz
jns
lcall
mov
sarb
dec
push
or
mov
push
cmp
xor
jg
pusha
call
stos
fisubrl
or
lret
mov
outsl
xchg
push
sub
mov
data16
fs
sbb
dec
rcr
aas
aam
outsl
mov
loop
test
lret
push
mov
mov
dec
scas
sub
xchg
jb
repnz
sub
sub
cli
mov
xorl
inc
add
mov
sbb
in
jl
test
and
dec
mov
xor
pop
lcall
in
xchg
add
dec
roll
sub
icebp
nop
cld
outsb
btc
pusha
insl
sahf
cmp
popa
lret
xor
outsb
and
cmpb
push
dec
xchg
rcrw
add
je
aam
add
push
scas
xor
mov
jae
or
lods
iret
xchg
sub
shl
cmp
test
fxam
scas
aam
xchg
jb
adc
xor
hlt
mov
xor
popa
fbld
jo
mov
mov
out
dec
je
add
jo
movq
or
stc
jmp
add
imul
addb
movsl
cmp
in
cmp
cmp
cmp
fs
fadd
sbb
pop
xor
jle
std
or
movsl
rorb
std
pop
shll
lods
jne
gs
test
fcomi
imul
aas
pop
jg
hlt
repz
inc
or
aas
add
mov
pushf
xor
imul
lock
pop
mov
or
xor
aad
push
jle
out
das
jbe
mov
push
mov
dec
in
jle
outsb
dec
mov
xlat
mov
fdivrs
pop
stos
pop
pop
movsl
vmovshdup
aas
adc
popa
sahf
push
xchg
jne
dec
ldmxcsr
jge
test
lods
es
out
js
lret
mov
cld
cmp
ss
aas
out
scas
rcrl
jle
rcll
sub
sahf
push
push
mov
and
pusha
insb
in
scas
sbb
pop
mov
push
jo
pushf
cs
imul
cli
or
mov
das
jbe
mov
push
mov
dec
in
jle
outsb
dec
mov
xlat
mov
fdivrs
pop
stos
pop
pop
movsl
vmovshdup
xor
push
jg
sbb
stos
lcall
daa
int3
jb
fcoml
fdivl
cwtl
push
fwait
insb
jae
negl
fistpl
cmpb
ja
loopne
jl
test
mov
int3
jle
repnz
fldcw
push
shrl
push
jle
out
das
jbe
mov
push
mov
dec
in
jle
outsb
dec
mov
xlat
mov
fdivrs
pop
stos
pop
pop
adc
cmp
push
mov
in
insl
jb
leave
mov
mov
push
daa
out
lods
je
incl
xchg
mov
out
pop
cltd
sub
fcmovb
ret
cmc
mov
hlt
xchg
insb
iret
mov
fisubl
inc
aam
lret
es
or
cwtl
lahf
cs
leave
insb
cmp
jb
scas
cmp
and
pop
dec
and
test
inc
aaa
jnp
push
lds
push
inc
insl
test
mov
inc
ds
push
lods
xor
sub
enter
in
pop
jns
mov
or
push
cld
jle
rcrb
call
fldcw
into
pusha
dec
ljmp
push
insb
mov
mov
js
jmp
pop
outsb
aam
lds
sbb
or
scas
mov
adc
icebp
lods
mov
mov
aas
mov
test
jns
push
outsb
sbb
add
lds
dec
jne
bound
sbb
dec
cld
push
mov
fsubrl
dec
scas
jns
arpl
add
mov
out
out
xor
aam
cmp
pop
mov
mov
pop
out
jg
dec
push
js
and
jg
out
pop
and
adc
js
scas
add
dec
shl
movsb
lods
je
call
adc
mov
sar
mov
stos
xchg
popa
sbb
js
mov
and
jnp
pop
bound
lds
ljmp
jb
pop
cmp
clc
popa
divb
outsb
inc
push
push
call
jg
fldenv
pushf
dec
or
push
testl
addr16
stos
inc
pop
and
and
scas
adc
mov
inc
lret
and
inc
shrl
fimuls
dec
jmp
mov
sbb
jl
or
aaa
arpl
adc
fs
dec
mov
mov
or
inc
inc
xchg
in
push
je
xlat
and
jl
shlb
cmp
out
jmp
imul
and
adc
fwait
in
jne
and
jp,pt
lahf
fs
pop
ljmp
push
mov
insb
pop
or
imul
pop
outsl
xchg
push
mov
sahf
inc
jle
imul
imull
or
sub
cltd
dec
ljmp
ds
xor
mov
pop
das
mov
rclb
push
aaa
xlat
jnp
pushf
dec
xchg
mov
ss
cmp
push
jg
inc
sub
push
mov
in
jne
cli
aam
ffreep
popa
jle
clc
dec
mov
pop
in
push
sbb
push
inc
and
shrl
push
outsl
mov
rorl
aas
ffreep
mov
mov
movsb
pop
inc
ljmp
sbb
in
mov
lret
add
lcall
xchg
push
lcall
dec
cmpsb
inc
fdivl
adc
and
mov
mov
stos
movsl
push
mov
in
jne
cli
aam
ffreep
popa
jle
sbb
fdivrs
sbb
leave
xor
scas
imul
hlt
mov
out
rcl
xor
cmp
xor
mov
std
adc
mov
aaa
hlt
in
sbb
mov
in
jne
fst
stos
xor
stos
mov
push
or
xchg
pushf
mov
gs
sbb
mov
inc
jle
cmc
leave
sti
jmp
xchg
loopne
xchg
mulb
sarb
xor
add
or
and
jle
data16
or
add
push
pop
in
loopne
jge
fsubrl
pop
xor
lods
jmp
scas
jno
loopne
in
dec
or
and
enter
mov
mov
jle
testl
addr16
in
lods
fsubrl
cli
paddusb
or
mov
and
lret
xchg
pusha
mov
sahf
jns
popa
mov
sbb
jne
rol
lcall
inc
stos
add
mov
sub
lret
push
jne
in
mov
jl
negl
xchg
pop
inc
iret
mov
sub
mov
test
cmp
mov
sub
cmp
and
jb
inc
test
push
in
stos
or
in
xor
aam
xchg
pop
pop
jmp
std
mov
add
rcrb
xchg
shrb
jge
xchg
xchg
pop
out
xlat
fsubrl
push
and
fidivrs
sub
inc
mov
pop
push
dec
jno
fcomip
cmp
jbe
mov
pop
ret
cmp
ljmp
mov
int3
adc
in
aam
imul
in
cli
mov
xor
inc
jno
inc
cltd
loop
sti
mov
out
xor
xorb
call
scas
mov
or
sub
popf
sti
dec
push
jge
fwait
mov
pop
daa
push
outsb
cwtl
adc
faddp
add
mov
stos
call
pop
loopne
inc
or
mov
dec
fstl
insl
jno
aad
or
xchg
mov
in
push
and
add
push
xchg
xor
imul
mov
pop
cwtl
or
dec
inc
push
xor
and
addr16
xor
dec
inc
xchg
cmp
sbb
mov
fdivl
cmpsb
into
xlat
dec
inc
pop
mov
push
jge
aam
mov
es
into
sti
adc
jl
dec
dec
push
jnp
insb
xor
les
mov
mov
xchg
nop
fwait
xor
test
test
outsb
mov
mov
mov
popa
hlt
dec
and
pop
sahf
cs
xor
fisttpll
hlt
iret
xlat
call
mov
mov
add
adc
aaa
stc
or
loopne
mov
pop
mov
movsb
push
dec
shl
dec
xor
or
popa
lea
and
insl
and
stos
push
pop
pop
stc
dec
adcl
fwait
in
jne
das
shll
add
cmp
pop
outsl
dec
inc
add
inc
stos
cmovae
sbb
int
jne
or
xchg
adc
push
mov
lods
push
movsl
sbb
xchg
jb
mov
xchg
sub
jle
aad
adc
scas
cmc
mov
push
xor
ja
or
movsl
mov
call
mov
addr16
and
sbb
push
sar
sbb
xchg
pop
sbbb
jmp
loop
or
call
cs
jno
jge
stos
cmp
push
xlat
xchg
jmp
dec
and
insl
xchg
inc
lea
inc
or
mov
mov
pushf
call
fwait
in
jne
mov
cmp
stos
adc
cmp
fdivr
mov
inc
pop
mov
cmp
xchg
push
push
sub
push
and
jb
lret
inc
adc
loope
sbb
shlb
fidivrl
jle
adc
xchg
bound
pusha
and
sub
cmc
loopne
pop
pushf
ret
xchg
movsb
cltd
cld
enter
mov
imul
loop
xchg
addr16
loopne
mov
scas
mov
div
jb
cld
pop
dec
daa
mov
mov
jae
scas
hlt
loope
inc
stc
pusha
leave
ret
pop
cmpsb
sti
sbb
fwait
in
jne
xchg
mov
mov
out
mov
push
cmc
jno
dec
mov
lock
xlat
adc
pusha
add
fwait
dec
clc
test
pop
movsl
call
aad
jle
pop
mov
loopne
mov
pop
shrb
dec
jne
pushf
or
mov
lret
cmp
insl
dec
or
sarl
or
pop
cmp
cmp
cmpsl
mov
pop
push
sti
cmp
scas
add
jecxz
or
test
icebp
mov
mov
insl
inc
mov
pop
cmpsb
mov
sbb
sbb
shlb
and
pop
jl
xchg
cs
ljmp
in
aad
fisubl
push
and
push
aaa
stos
test
mov
je
xchg
test
mov
movsb
daa
mov
jns
ret
push
inc
adc
mov
pushf
stc
xchg
sub
jge
loope
sbb
push
out
lcall
inc
movb
fdivrs
adc
inc
inc
sub
sarb
mov
or
mov
clc
rorl
cmpsb
and
add
out
dec
ret
rcr
sbb
cmp
cmpsl
hlt
adc
popf
imul
push
mov
mov
scas
js
push
sub
mov
mov
aas
in
lock
fnstsw
xor
adc
es
enter
aam
jl
cmpsl
fsubrs
rcrl
sub
xchg
nop
cmc
repnz
sti
jecxz,pn
cwtl
jmp
mov
pop
inc
loope
or
and
mov
mov
sarb
dec
push
or
mov
push
cmp
popf
adc
dec
mov
dec
cmp
shlb
sbb
cmc
dec
in
xchg
int3
ret
ljmp
fadds
out
stos
outsl
xchg
mov
mov
pushf
and
jae
sub
xor
imul
je
pop
add
adc
jecxz
in
insb
and
ljmp
dec
repz
inc
rclb
icebp
jp
js
pop
jle
mov
in
and
daa
std
lea
call
push
lods
jp
data16
push
jl
repz
sbb
cmpb
mov
adc
push
lock
addl
mov
inc
movsb
jmp
dec
pause
adc
dec
or
dec
ret
mov
add
test
imul
xor
out
test
sbb
scas
xchg
add
cmp
push
jns
call
mov
push
call
data16
pusha
hlt
push
fidivrs
lahf
arpl
dec
popa
enter
xchg
sbb
outsb
inc
hlt
adc
fcmovnu
pop
sti
adc
popf
gs
sub
push
shrb
lock
mov
iret
and
aam
mov
insb
push
inc
je
outsl
xor
scas
ja
cmp
pop
call
or
push
sub
imul
stos
lcall
and
xor
scas
mov
rol
jbe
aad
arpl
cmpsb
cltd
mov
rclb
sub
mov
test
in
mov
jle
aad
xchg
cwtl
and
jl
mov
icebp
push
xchg
in
jno
mov
rcrl
or
cmp
inc
or
jmp
sub
aas
dec
mov
fdiv
inc
imul
and
arpl
dec
popa
enter
xchg
sbb
outsb
inc
hlt
adc
fcmovnu
pop
sti
adc
popf
gs
sub
push
shrb
lock
mov
iret
and
aam
mov
insb
push
inc
je
outsl
xor
scas
ja
cmp
pop
call
or
push
sub
imul
stos
lcall
and
xor
scas
mov
rol
jbe
aad
arpl
mov
xchg
inc
cmp
addr16
jp
push
fnstenv
lea
lock
leave
dec
and
ds
sbb
je
leave
enter
mov
fdivrs
mov
xor
cmp
pop
jnp
int
mov
cltd
adc
dec
cmp
fwait
and
ljmp
int3
fldl
xor
data16
or
inc
in
dec
pop
ds
add
sub
popa
fmull
pop
ficoml
and
addb
sub
lods
sub
arpl
pop
adc
mov
int
loope
dec
xor
mov
cmc
je
and
sbb
pop
lds
repz
clc
push
jmp
fs
mov
xchg
test
push
adc
mov
fdivrl
add
cmc
lock
add
incl
or
enter
nop
xor
adc
dec
sbb
int3
push
dec
cmp
sti
js
in
out
sbb
ret
rol
fimull
fimull
insl
mov
movsl
call
mov
loop
and
cltd
into
xchg
insb
aaa
add
shl
mov
dec
cli
sbb
pop
test
movsb
mov
je
daa
cmp
pop
xor
call
push
cmpsb
jb
cmp
mov
xchg
jmp
inc
mov
int3
mov
add
and
in
out
sbb
ret
arpl
push
push
xchg
fs
das
xchg
scas
and
enter
out
int3
ss
pop
mov
add
lea
pop
jno
dec
pop
and
pop
mov
mov
insb
add
and
fs
mov
cld
int3
adc
dec
int
xchg
mov
xchg
icebp
gs
xchg
shll
insb
jne
sbbl
test
adc
repnz
je
lock
dec
pop
jle
lcall
jno
les
mov
xchg
pop
cmp
jle
sbb
lods
or
scas
dec
xor
mov
cmc
je
and
sbb
pop
lds
repz
cld
xor
pop
sbb
sbb
xchg
test
push
adc
mov
fdivrl
add
cmc
lock
add
incl
or
enter
nop
xor
add
jbe
ret
push
cs
lds
ja
mov
pushf
cli
inc
into
mov
add
xchg
pop
in
scas
mov
xor
out
pop
add
test
out
jge
xchg
icebp
pusha
shrl
sub
ljmp
fs
aam
sahf
sbb
jp
dec
aas
inc
scas
mov
std
ret
mov
sarl
lods
or
xchg
jecxz
loopne
insl
mov
mov
xchg
outsb
in
loope
fbld
mov
jbe
notb
out
sbbl
mov
loopne
mov
push
rcll
outsb
mov
ja
pop
in
enter
jg
ds
and
inc
dec
enter
and
stc
jbe
notb
sahf
inc
xchg
xchg
out
adc
ss
cmp
inc
mov
stos
movsl
mov
imul
mov
inc
dec
idiv
es
ljmp
fstpt
and
sub
push
hlt
cmp
sub
sub
mov
lahf
add
dec
push
insb
mov
dec
cld
aad
push
pop
stos
fisubs
sub
cmpsl
rclb
int3
out
in
clc
push
cmp
and
pushf
shrl
pop
push
mov
xlat
mov
mov
mov
stos
mov
add
mov
adc
rolb
shrb
or
add
pusha
out
mov
pop
shll
push
xor
dec
dec
xchg
jp
jecxz
xor
mov
test
mov
xlat
sbb
aaa
rolb
mov
icebp
add
faddl
fs
orb
movsl
daa
add
xchg
adc
test
mov
shll
int3
mov
pop
std
pop
nop
inc
adc
push
xorb
loope
push
int
repz
cmp
push
adc
mov
aad
push
mov
outsl
and
insb
jae
es
ds
in
cwtl
push
mov
mov
sbb
test
cmp
sub
scas
out
sub
aaa
pop
or
outsb
dec
sub
inc
dec
loope
leave
sahf
mov
cmp
dec
pop
xor
xlat
in
sbb
das
xchg
lods
dec
addr16
jnp
cmp
ret
inc
jg
dec
dec
add
mov
aas
inc
pop
pop
insl
jne
mov
das
arpl
pop
jmp
jae
mov
add
push
cmpsl
jae
mov
sub
sbb
fmuls
stos
shlb
jle
in
pop
aaa
cmpsb
jg
in
push
nop
pop
pop
mov
fsts
mov
adc
pop
cmp
int3
ds
imul
rclb
pop
sub
mov
js
stos
clc
push
insb
in
add
ficomps
pop
fs
and
cmc
adc
js
call
jmp
and
add
out
ljmp
inc
xor
jle
outsl
rcr
adc
jmp
testl
inc
jne
call
mov
cmp
sbb
jo
stos
push
test
push
xchg
inc
cwtd
std
pop
jbe
outsb
cmp
pop
data16
pop
cmp
sti
lahf
inc
mov
or
decl
shlb
jno
xchg
dec
mov
out
out
enter
into
mov
rclb
scas
ret
das
loop
ds
push
mov
dec
push
jmp
mov
subb
xchg
push
inc
std
gs
adc
and
es
sti
cmp
sbb
fwait
mov
or
jp
and
pusha
cmpl
sahf
fbld
mov
push
inc
rcrl
and
push
arpl
and
or
xlat
hlt
jp
pop
fdecstp
and
aad
and
scas
stc
ficomps
imul
sub
adc
mov
notb
hlt
loope
je
jle
sub
pop
fidivrs
pop
adc
addr16
push
mov
test
inc
sar
lcall
int
cmpsl
addr16
fbld
cmp
xchg
fdivs
jle
jl
cltd
stc
jl
icebp
lahf
in
shll
ds
enter
fnstsw
int3
sbbb
jmp
iret
mov
dec
inc
adcb
xchg
cmp
int
mov
imul
scas
mov
cmpsl
dec
popf
mov
sub
js,pn
iret
mov
iret
add
aad
inc
pmulhuw
mov
cmp
cmpsb
int3
hlt
push
out
add
in
push
lock
sahf
pop
je
jp
xor
bound
iret
add
aad
inc
movq
mov
in
xor
push
iret
out
and
rcr
mov
cmc
sub
cmp
mov
insl
inc
cmp
mov
mov
cmpb
lret
and
mov
dec
sub
push
iret
push
sbb
ja
imul
outsl
xchg
test
repnz
mov
push
pushf
imull
jl
pushf
stc
dec
or
mov
lock
cld
das
add
aad
hlt
xor
push
jg
jns
xor
data16
fs
pop
mov
data16
or
lcall
sub
in
push
push
xchg
push
roll
iret
push
xor
jno
sbb
arpl
rorb
push
repz
iret
push
lret
xor
pop
mov
in
xchg
test
cmp
pop
xchg
imul
loope
or
lcall
and
jno
dec
aad
cmpsl
cli
pop
cltd
add
movsl
out
stos
sub
mov
adcb
jno
pop
and
push
dec
repnz
jl
pop
mov
adc
add
push
jae
mov
sub
sbb
inc
fidivl
adc
jo
cwtl
push
test
mulb
add
or
frstor
sbb
daa
xchg
jns,pt
es
jo
rorb
out
dec
mov
add
xor
pop
stc
pushf
adc
dec
pop
decl
mov
add
int
mov
mov
and
and
loopne
fbld
xor
jb
shrb
and
int
adc
lret
ds
call
dec
pop
sub
cmpsb
fisubs
jecxz
jno
push
jns
mov
stos
cli
ret
push
mov
add
sub
mov
push
fsubp
lods
xorb
xor
cld
fisubs
xchg
sahf
loopne
sub
insb
sbb
adc
jb
lss
je
jns
dec
xchg
mov
inc
mov
jmp
idivl
mov
or
lahf
lock
xchg
sub
adc
inc
push
bound
ret
dec
sbb
in
xorb
xor
cld
fisubs
xchg
jle
ret
pop
jno
inc
fildll
push
jmp
sar
pop
jns
int3
sbb
or
scas
push
push
pusha
push
ljmp
in
pop
rolb
je
pop
inc
push
pop
xchg
or
shrb
sahf
dec
iret
loopne
ss
inc
dec
mov
mov
add
test
cltd
and
mov
xchg
rcrl
jne
push
jl
xchg
inc
sbb
push
adcl
mov
test
jecxz
fs
jmp
and
cltd
test
mov
mov
inc
mov
adc
adc
push
add
sbb
movsl
lds
and
mov
push
jnp
cmpsb
je
lret
dec
and
mov
popa
xchg
daa
xor
mov
out
jnp
dec
cmp
mov
fistpl
stos
sub
and
daa
push
xor
jecxz
add
jns
int3
ror
fisttpl
push
test
push
dec
cld
dec
jg
xor
push
js
lret
adc
xchg
test
cmp
pop
hlt
int3
ror
fisttpl
xchg
ljmp
das
bound
mov
bound
insl
add
ja
cltd
ljmp
xlat
add
lahf
popa
mov
inc
js
cli
stos
icebp
adc
sbb
pop
push
xchg
outsb
pop
mov
sub
mov
and
cmpb
lods
movsb
ja
shrb
shll
outsb
lods
data16
roll
inc
jp
jge
outsl
rolb
cmpsl
add
pop
push
movsb
lret
clc
punpcklbw
dec
test
cs
ljmp
test
cmp
mov
shl
xchg
jns
push
cmp
call
filds
mov
dec
insl
mov
popa
pop
xchg
in
fmull
or
inc
bound
insb
je
mov
inc
mov
cmp
shrl
pop
adc
sub
aam
xor
sahf
push
js
fs
les
fsts
inc
repz
pop
and
lods
jmp
inc
cmc
outsb
or
loope
ficoms
mov
mov
mov
push
jle
dec
stc
pop
imul
cli
mov
and
adc
fwait
in
jne
shlb
add
insb
arpl
inc
or
mov
fwait
cs
pop
fwait
xor
in
mov
inc
inc
mov
mov
out
or
inc
push
add
roll
xor
test
xor
scas
xchg
or
loop
dec
int3
movsb
jnp
movsb
and
cmp
sbb
mov
dec
xchg
imulb
xor
data16
cmp
sahf
mov
test
sub
scas
stos
pop
xchg
push
jle
fldl
addr16
dec
or
add
push
pop
into
jle
mov
filds
cld
in
cwtl
sbb
fistps
das
add
dec
scas
mov
addb
inc
sbbb
loop
inc
mov
dec
cmp
add
cmp
add
xor
jo
xchg
lret
xor
daa
mov
lock
or
pop
imul
out
mov
and
and
cmpsw
jge
test
nop
or
mov
cmpsl
mov
mov
outsb
js
jne
mov
aam
shll
scas
pop
adc
je
pop
add
and
jb
lret
add
mov
insb
sub
dec
or
push
stos
cmp
and
add
pop
sbb
mov
jb
mov
push
mov
out
dec
repnz
mov
sbb
mov
mov
lea
fdivs
stc
scas
jl
xchg
jno
and
insb
push
or
out
stos
sbb
sbb
pop
loopne
sar
mov
mov
iret
add
mov
add
sub
test
lock
andl
in
dec
pop
fldt
mov
mov
push
imul
xchg
scas
arpl
mov
dec
mov
cs
push
jp
adc
cld
mov
cltd
push
mov
rcll
fnstcw
push
or
push
shll
ljmp
xchg
mov
add
cmpsl
jg
shll
imul
jno
jb
mov
xchg
cld
addr16
adc
adc
arpl
adc
sub
bound
fdivs
sti
rclb
pop
mov
out
shlb
xor
cmp
xchg
imull
jne
je
cmpsb
lret
mov
adc
arpl
js
rcrl
sbb
mov
insb
mov
decl
lock
or
sub
outsb
pop
pop
fisubrl
add
repz
rolb
dec
scas
decb
pop
int
mov
loopne
stos
mov
pushf
je
jbe
and
loope
cli
shlb
ja
sti
cmpsl
xor
xchg
xchg
and
ficomps
and
lahf
push
fldl
sub
popf
push
andl
adc
movsb
adc
in
sbb
mov
mov
lock
popa
lods
inc
aad
lahf
mov
shlb
scas
push
sbb
add
cmp
in
xchg
push
mov
test
mov
pop
and
les
push
xor
lret
mov
popa
mov
call
push
ja
rorb
imul
std
ficompl
push
fsubs
mul
lret
int
sbb
mov
ljmp
push
add
fadds
dec
inc
in
inc
addr16
daa
inc
sbb
in
sub
js
xchg
aaa
inc
stos
xor
adc
pop
adc
sub
pop
daa
das
xchg
repz
cwtl
pop
xor
cmp
mov
mov
hlt
dec
jnp
call
dec
cmp
hlt
push
sbb
loop
xorl
mov
dec
push
mov
in
jne
out
or
addr16
mov
cmpl
cmp
cmp
pop
inc
inc
or
xor
or
mov
lret
dec
inc
ds
mov
push
xlat
fwait
dec
fdivrs
or
popa
popf
fbstp
and
mov
mov
push
mov
in
jne
faddl
sub
sbb
mov
negb
mov
add
mov
ret
xor
rorb
mov
xchg
insl
sub
jmp
ds
pop
rcll
mov
inc
std
cmp
out
xor
fwait
mov
iret
loop
xchg
movsl
inc
lods
mov
cmp
imul
dec
test
cwtl
lds
cmpb
mov
pop
pop
mov
push
popa
ljmp
test
stc
inc
out
pop
xchg
mov
add
pop
iret
pop
inc
rorl
dec
loopne
mov
jmp
push
cmp
jl
je
sbb
dec
outsl
das
lret
xor
and
movsb
mov
mov
cmp
icebp
std
and
and
mov
mov
add
mov
in
jne
or
xchg
inc
dec
notb
xchg
iret
popf
lds
fs
jge
pop
mov
xchg
xlat
inc
mov
enter
push
mov
cmp
xor
js
push
mov
in
jne
ds
mov
lds
mov
mov
sub
push
xchg
adc
mov
jecxz
jmp
pusha
cwtl
jns
jne
inc
mov
cmpsb
push
sbbb
dec
mov
aad
lods
inc
leave
in
js
sub
adc
lods
add
ret
xchg
jo
inc
dec
jae
push
dec
sbb
or
movsb
mov
mov
shll
sbb
stc
xor
lods
loopne
cmpsl
jno
gs
jbe
jle
dec
adc
stos
data16
push
mov
in
jne
sti
inc
mov
pop
addr16
jle
sub
les
jecxz
sub
sarb
add
movsb
hlt
pop
or
gs
dec
cmp
inc
repz
xchg
cmpsl
push
rclb
pop
test
or
js
or
lods
roll
jge
dec
xchg
les
or
push
jg
fidivs
and
lret
adc
add
mov
dec
xor
lods
pushl
cmp
sbb
push
repnz
sub
or
mov
loopne
loope
out
stos
test
rorb
mov
dec
mov
mov
xor
gs
inc
jmp
pop
xor
mov
int3
dec
mov
mov
push
scas
pop
imull
inc
jle
cmpsl
pushf
pmaxub
les
mov
cmc
popf
xor
cmpsl
sub
cmp
imul
imul
ds
in
add
imul
xor
cmc
pusha
fs
jecxz
decl
xor
dec
mov
outsb
mov
cmp
test
jg
mov
mov
inc
xor
std
push
ficompl
or
jge
dec
mov
fisttps
mov
out
sbb
incb
ficoms
es
cmp
cmp
mov
lret
pop
adc
or
sbb
fcmovnb
dec
xor
pop
pop
sub
outsl
mov
andb
ret
cmp
fimull
xor
xchg
sbb
loope
xchg
mov
jg
cmp
xchg
mov
xor
adc
ljmp
pop
sahf
mov
or
fsubl
test
fdivrl
xor
or
lret
mov
adc
push
jo
mov
dec
mov
loop
jle
stc
fsts
iret
jbe
and
ucomiss
mov
insl
dec
test
push
gs
xchg
dec
sbb
pop
adc
fdivrl
sahf
cltd
outsl
hlt
mov
popf
add
sub
pop
pusha
mov
jnp
into
shl
dec
jle
insb
int3
andl
sahf
pop
int3
jb
pop
inc
stos
dec
sbb
pop
push
sbb
insb
sbb
pop
jmp
push
add
pop
lcall
sub
pop
push
xchg
mov
sar
popf
mov
cwtl
hlt
jo
ret
mov
mov
push
aam
testb
lods
xchg
jmp
rcrl
js
push
push
arpl
lods
jo
push
xor
inc
sbb
or
push
cmp
pop
pop
popa
adc
incl
mov
push
rcrb
loope
mov
push
pop
pop
les
rol
addr16
jb
stos
shlb
test
mov
mov
mov
and
shrb
shrb
movb
insl
jl
cmp
dec
mov
jp
xor
jo
adc
aad
cmp
div
lret
sbb
lret
popf
mov
inc
fwait
xchg
fmuls
pushf
pop
cmc
inc
dec
mov
pop
ss
cmp
fisubs
cmpsb
int3
xchg
insb
bound
mov
sti
fldl
jae
ljmp
fistpll
shl
insl
mov
ss
or
mov
push
xor
repz
ret
fbstp
jge
push
mov
in
jne
push
in
ss
fmuls
mov
pop
in
clc
sbb
mov
aaa
lret
daa
into
or
ficompl
insb
sub
sub
adc
lods
xor
fdivrp
int3
out
dec
pop
cmpsb
mov
in
sbb
sub
xor
mov
xchg
jae
das
movsl
mov
cmp
pusha
bound
add
mov
scas
add
lods
cli
push
add
roll
add
insb
inc
mov
gs
cmp
jmp
push
cmp
sbb
xor
repnz
mov
orb
sub
insl
push
inc
es
leave
push
icebp
fisttpl
adcl
arpl
dec
cmc
in
and
add
mov
push
add
pop
pop
movsl
in
sub
out
in
xchg
mov
lds
pop
loop
rcrl
jnp
xor
mov
movsb
icebp
mov
out
aas
clc
mov
ja
adcl
loope
push
and
test
imul
or
dec
outsb
mov
sbb
and
jns
cli
jg
push
mov
ljmp
imul
add
push
sub
xchg
jl
lahf
adc
aam
push
addr16
mov
push
aaa
test
cmp
pop
or
and
fbld
jns
jmp
inc
inc
jmp
jne
fidivl
xchg
xchg
fcmovnbe
sbb
les
cs
fnstenv
in
push
sub
pop
cmp
sub
dec
cmova
subl
inc
fwait
xchg
insl
insb
sbb
cmp
scas
movsb
hlt
push
cmp
mov
xor
fadds
dec
movsb
enter
push
xchg
mov
aad
sbb
inc
js
or
pop
mov
push
or
xchg
leave
sub
adc
mov
bound
hlt
lret
or
add
mov
sbb
test
outsb
stos
data16
dec
idivb
fucomip
movsl
push
jae
mov
mov
push
mov
out
push
adc
testl
loopne
dec
pop
das
sub
jnp
jp
sar
xor
adcb
scas
dec
cmp
mov
pusha
xchg
sbb
adc
jb
ficompl
jle
push
inc
pop
imul
mov
jg
popl
repz
lret
popa
add
adc
sbb
mov
dec
mov
inc
sti
je
ljmp
or
fsubl
push
dec
mulb
int
adc
sbb
pusha
dec
insl
sbb
sbb
xor
dec
test
and
pop
in
ljmp
popa
jge
xor
addr16
push
push
icebp
and
inc
mov
call
pop
out
int3
mov
jns
xlat
rclb
das
mov
xchg
jg
mov
jns
out
xchg
add
push
outsl
adc
fsubrl
xchg
jnp
fwait
or
arpl
jge
push
loopne
lcall
dec
in
sbb
push
sbb
push
in
cmp
js
shll
lret
push
jecxz
mov
sarb
leave
sub
je
test
shrl
add
mov
push
ljmp
insl
cs
pushl
cmpl
pushf
int3
pop
mov
mov
xchg
addr16
cmp
pop
mov
test
enter
pop
pop
sbb
hlt
fwait
jne
sbb
mov
in
jne
adc
push
fsubrs
loop
mov
xchg
mov
leave
fstpt
fsub
dec
popa
pop
lahf
popf
pop
and
inc
gs
aam
outsb
ret
jns
push
pop
data16
xor
imul
fwait
in
jne
scas
and
ja
call
xor
rcrl
fcoms
leave
out
ret
add
and
sbb
js
mov
xor
arpl
enter
insb
testl
jle
xchg
divl
jbe
stc
inc
jecxz
sbb
mov
clc
hlt
fwait
ror
popf
and
dec
xchg
xchg
cmp
lock
push
fdivrs
cmp
stos
stos
or
shl
sub
xchg
pop
mov
aaa
or
and
bound
jle
ret
jns
xchg
xchg
sub
stos
xor
popa
or
test
lcall
leave
push
js
push
dec
test
lahf
xor
and
outsl
ja
std
jb
aaa
movsb
jp
cwtl
out
inc
sbb
rolb
dec
test
pop
mov
push
nop
aaa
negb
or
aam
testb
sti
ret
bound
cmp
sbb
mov
mov
dec
scas
pushf
inc
xor
and
shll
jg
ficoms
xor
lods
idivb
cmp
sub
jbe
insl
cs
xchg
add
push
mov
xchg
sahf
or
jecxz
mov
pop
stos
adc
rclb
dec
sbb
dec
mov
dec
test
inc
cmc
sbb
ret
test
vsubpd
fsubs
mov
jb
cmp
sbb
mov
loope
adc
pop
xorl
ljmp
mov
loop
stos
and
push
xor
jle
insl
js
in
or
or
insl
es
cwtl
vcvttsd2si
bound
push
pop
pop
mov
rep
or
jp
mov
enter
mov
cmp
cltd
lcall
mov
or
mov
and
lods
pop
adc
rolb
fnstcw
clc
cmpsb
fsubr
inc
cltd
mov
int3
pushf
inc
inc
push
push
mov
pop
in
mov
push
cmp
pop
jl
xlat
lret
and
cld
xchg
fildl
sbb
inc
cmpsb
jnp
pop
movsl
jge
sub
pop
mov
aaa
dec
dec
decb
subl
sahf
fs
sbb
and
in
xor
mov
rclb
ss
adc
mov
mov
outsb
jns
cs
pop
loope
jb
das
mov
mov
mov
test
es
and
inc
xchg
ljmp
mov
sti
vpmacsww
aad
insl
dec
lods
es
add
sbb
mov
lods
jnp
stos
and
jo
cs
jno
aaa
outsb
jg
in
and
or
roll
gs
adc
jae
or
jno
mov
sub
cld
mov
loop
cmp
gs
mov
flds
xchg
and
cmp
ss
out
mov
pop
into
jle
xor
int
mov
inc
sbb
or
sarb
push
movsb
sub
xchg
pop
mov
pop
lods
out
cmp
out
mov
and
lods
aam
sbbl
pop
sarb
jmp
add
nop
mov
ds
jge
stos
cli
adc
mov
xor
incb
sub
jmp
push
sub
xchg
or
jp
mov
push
or
mov
ja
pushf
les
mov
nop
js
mov
clc
outsl
into
inc
or
cmpl
cmp
loope
jle
rcrb
dec
and
mov
call
push
test
std
or
sub
mov
arpl
int
addl
dec
pop
push
cmpsl
ds
sbb
frstor
scas
xor
add
in
shll
into
stos
xchg
dec
sbb
mov
pop
adc
jmp
in
jb
mov
mov
int3
insl
jne
inc
jl
jecxz
add
mov
das
mov
jne
rep
or
xor
jp
push
int
rol
jbe
sbb
sbb
and
dec
pop
push
pushf
xor
into
inc
cld
roll
jo
add
rep
pop
lds
jbe
dec
lock
test
cmp
dec
out
shlb
jg
push
dec
cld
mov
popf
sub
dec
cmp
sbb
push
leave
sbb
icebp
and
ds
mov
cs
cwtl
sar
inc
aaa
adcl
mov
movsb
stc
iret
mov
in
cmp
insb
inc
call
fs
fnsave
iret
xor
push
lock
movsb
ss
xchg
mov
aam
lahf
xchg
ret
sbb
cmp
ljmp
lcall
jnp
add
pop
push
jns
pop
pop
repz
insl
in
js
call
outsb
lret
je
test
jne
int3
insl
or
mov
inc
stc
int
pop
enter
pop
imull
incl
lcall
inc
pop
ja
shrl
scas
dec
or
or
fstl
cmp
in
subb
in
jno
mov
pop
jnp
jo
fcmovnbe
adc
xchg
fisttpl
lret
cltd
and
or
pop
les
push
mov
cltd
and
or
ljmp
sbb
into
data16
out
sub
sbb
testb
mov
shr
out
les
sbb
pop
fadds
push
pop
std
loopne
push
jb
mov
ficoms
sahf
or
push
jb
call
mov
ljmp
inc
fnstenv
dec
mov
fisttps
cmp
cmp
xor
push
dec
popf
xchg
inc
add
popl
fs
jb
sub
mov
mov
daa
mov
jb
call
pusha
or
mov
push
in
inc
sahf
sbb
sub
xchg
xchg
push
sub
arpl
xchg
add
js
push
loop
inc
xor
jecxz
adc
push
mov
push
mov
mov
xor
dec
jle
mov
adc
imul
mov
xor
pop
aas
bound
iret
jne
pusha
inc
popf
mov
fsubl
repnz
std
in
int3
icebp
sub
or
outsl
mov
xchg
cmp
jl
jnp
loop
in
jno
and
outsb
js
cmp
push
neg
les
paddsw
lahf
jo
bound
mov
ret
ss
xor
push
mov
xor
pop
repz
divl
lods
shrb
call
je
test
insb
lret
roll
push
adc
arpl
aas
cmp
stos
cwtl
js
lret
pop
inc
stos
hlt
jne
push
push
movsb
push
push
fwait
gs
xor
loope
sub
add
sub
jbe
subl
popf
mov
pop
xchg
repz
outsb
adc
int3
in
or
cmp
enter
mov
cs
insl
xchg
imul
and
add
add
and
loop
cld
mov
gs
scas
outsb
jbe
sub
inc
mov
ja
lock
ja
std
cmpsb
fnstenv
enter
repnz
mov
out
push
adc
cmp
jp
adc
push
iret
dec
les
and
cmpsl
or
ljmp
xor
add
inc
xor
repz
pop
outsl
loope
rolb
inc
xor
repz
inc
lods
mov
jnp
pop
fwait
dec
xor
ret
rclb
aam
fwait
add
jmp
sti
pop
push
mov
sub
out
push
out
insl
jo
outsl
add
inc
clc
mov
push
scas
or
fldlg2
or
testl
jp
jp
aam
dec
clc
pusha
test
ljmp
jno
inc
add
ret
mov
add
das
dec
pop
call
push
jo
testl
pop
test
cmp
out
mov
pop
aaa
lods
sbb
sbb
cmpsl
adc
stc
fdivrs
sub
fstpl
jecxz
mov
push
push
jnp
dec
mov
or
outsl
cmp
add
es
xchg
mov
fidivs
mov
xor
test
jmp
cli
push
mov
mov
mov
pop
fsubrs
fcmove
xchg
shrl
daa
adc
jne
cmp
shlb
jae
sub
xor
int3
scas
and
int3
mov
mov
jp
mov
cmp
jmp
lret
aas
mov
pop
out
test
ret
loope
mov
mov
daa
adc
add
out
xchg
mov
out
dec
xorb
adc
sub
xchg
add
rcl
jle
nop
adc
mov
mov
testb
pop
fstpt
das
xor
inc
loopne
fdiv
cs
mov
xchg
dec
xchg
stos
push
in
into
or
dec
xchg
stos
push
fisubs
inc
sahf
pop
enter
pop
daa
icebp
imul
decb
shll
cmp
mov
adc
xor
out
cmc
incb
fs
mov
xor
cli
into
movsb
or
mov
xchg
cmp
cmp
jne
mov
in
sbb
sub
js
cmpsl
pop
into
sbb
push
loopne
jg
or
nop
or
inc
fmull
stc
mov
xchg
cmp
sub
dec
dec
stos
mov
sub
adc
pop
adc
lds
hlt
subl
dec
inc
jae
icebp
sub
ljmp
inc
pop
mov
xor
and
lods
xor
xchg
in
std
lret
push
bnd
clc
adc
xor
std
lods
xchg
sbb
xchg
sub
mov
lret
dec
repz
sbb
addr16
inc
dec
sbb
loope
mov
jb
pushf
pop
test
jmp
cmp
cmp
daa
aam
fcoml
xlat
pop
test
push
das
push
cmpsb
dec
adc
cmp
adc
sub
inc
push
cmpsb
nop
xor
fxch
xor
ja
push
mov
pop
jge
cmpsl
mov
push
shlb
addb
in
jnp
loopne
fcomi
pusha
popf
fmulp
bound
loope
or
ds
add
cli
scas
mov
or
jb
mov
or
fistpll
lret
add
jmp
sbb
in
cmpsb
jle
out
and
and
pop
jno
adc
jl
ja
jb
int
push
aad
inc
lahf
cmp
cmp
mov
push
mov
scas
cmp
sti
mov
sub
jg
pop
iret
lret
cmc
push
shll
inc
pop
cmpsl
clc
cltd
call
xor
or
pop
rcrl
push
scas
jb
ja
in
imulb
pushf
in
pop
mov
test
push
mov
int3
inc
data16
mov
lret
and
cmpsb
scas
into
mov
mov
or
jp
and
out
dec
xchg
dec
add
out
sub
mov
scas
movsb
ss
mov
cltd
shll
out
lret
mov
inc
int3
xor
repz
push
pop
jo
sub
mov
pop
pop
out
repz
sub
negl
adc
pop
push
jecxz
push
push
cltd
gs
jae
repz
lahf
mov
cmp
jmp
pop
push
sub
js
mov
negl
push
cld
mov
push
or
inc
mov
mov
lcall
dec
mov
pushf
fisubrs
xlat
pop
lahf
cmpsl
fs
jo
add
or
mov
mov
jge
test
dec
cmp
lods
in
in
xor
int
sti
fidivl
dec
xor
outsb
inc
jle
sbb
fiaddl
mov
cmpsl
mov
and
js
js
pop
call
xchg
rorl
mov
adc
sbb
mov
push
inc
mov
sub
stc
and
push
jns
test
icebp
mov
cld
pop
fs
pop
rcll
add
fists
shrl
daa
xor
aaa
mov
mov
push
or
mov
out
in
cmpsl
lahf
test
mov
in
add
push
xchg
icebp
dec
cs
dec
add
inc
fildl
add
icebp
popa
addr16
or
js
aam
jg
leave
arpl
sub
cmpsb
xor
cmc
pop
ja
cs
mov
jg
cmp
jmp
xchg
pushf
notl
xchg
fsts
addr16
and
scas
add
push
scas
pop
and
outsl
in
cld
je
add
sbb
repz
inc
out
js
leave
ret
fs
mov
pop
add
pop
sbb
rdmsr
leave
add
xchg
and
add
mov
xor
mov
sbb
pop
test
sub
mov
add
sbb
andps
dec
fs
mov
fildll
sbb
pop
mov
mov
es
dec
faddl
into
xchg
mov
jbe
mov
iret
les
in
mov
mov
dec
cmp
and
sbb
sbb
xchg
mov
rep
sub
js
jecxz
popa
inc
js
dec
jnp
movsl
push
test
xchg
and
mov
cld
add
cs
aad
pop
shl
lret
imul
jge
ret
les
xchg
pop
movsl
mov
inc
sti
inc
outsb
fldt
jno
and
sti
in
or
cmpsl
ffree
push
xchg
rorb
jmp
mov
aad
pop
test
xchg
movsb
sub
xlat
inc
jmp
jb
arpl
push
test
cmp
cmpsl
mov
stos
add
sub
push
pop
lret
dec
into
cwtl
and
add
jne
xor
xor
pop
mov
sub
aas
mov
sub
mov
mov
daa
add
mov
stos
movsl
fsubrp
outsl
mulw
sbb
out
and
cwtl
push
nop
add
dec
dec
pop
icebp
cmp
popa
out
test
xor
and
mov
ret
fisubrl
es
nop
mov
dec
std
mov
push
cmp
aaa
mov
mov
fstpl
ljmp
int3
jnp
hlt
cmp
pop
and
das
sbb
mov
inc
add
leave
xor
fsubs
xchg
gs
or
clc
lcall
pop
jmp
mov
sbb
xchg
jp
lds
fcoml
and
cmp
aaa
mov
icebp
mov
cmp
mov
test
dec
mov
outsb
xor
aaa
popf
adcb
pop
shll
add
mov
scas
cmp
dec
push
adc
lods
xchg
fisubrs
dec
and
push
cmpl
andl
clc
or
push
negl
jbe
je
mov
mov
out
fisttpll
cmp
scas
shlb
out
xor
pop
xabort
sahf
xlat
mov
adc
xchg
test
jns
inc
movsl
pop
setns
int
xor
test
pushf
pop
repnz
cmc
mov
aaa
nop
mov
loopne
mov
lea
les
cwtl
ja
adc
xchg
fchs
add
test
fists
dec
jecxz
mov
js
mov
test
jae
pop
inc
ljmp
ss
add
out
cmp
jge
cli
pop
jmp
stc
sbb
mov
dec
cwtl
mov
ret
insl
cmp
loope
fadds
pop
data16
insb
in
adc
test
icebp
ss
or
pushf
mov
cmp
mov
nop
cli
sub
cwtl
mov
dec
jo
adc
dec
adc
je
sarb
or
or
imul
data16
mov
scas
lahf
xchg
rep
adc
inc
adc
add
sti
xor
jo
lcall
fmuls
xor
sub
fistpl
adc
fstl
cli
jg
mov
rclb
lods
sti
je
xlat
mov
pushf
sub
mov
not
jecxz
dec
out
adc
mov
loope
mov
in
iret
addr16
mov
pop
pop
aaa
in
and
jo
imull
jne
int
add
push
sar
cmp
sarl
iret
and
lret
pushf
lret
fcompl
loop
mov
jne
test
sbb
add
mov
mov
aaa
xchg
xchg
or
test
pop
push
ror
outsb
popa
cwtl
int
les
pop
out
scas
xchg
xor
cmp
popa
rcll
jbe
les
pop
pop
aas
cmpsl
insl
xchg
jg
mov
inc
dec
jns
xor
xchg
insb
outsl
dec
and
scas
sub
push
sbb
daa
and
or
sub
inc
mov
aaa
sub
es
inc
jne
stos
mov
ds
scas
out
int
push
sbb
scas
cs
cmpsl
xchg
inc
adc
jo
dec
call
sbb
bound
mov
fdiv
out
insb
das
lret
loop
push
mov
cs
xor
in
test
out
cwtl
mov
bound
jmp
sahf
test
lods
fs
test
jnp
push
mov
inc
imul
jo
inc
sub
inc
loopne
mov
add
and
mov
test
push
inc
push
mov
out
jp
popf
pushf
sbb
add
cmc
sub
pop
xor
fcmovnbe
pop
inc
mov
cmp
lret
mov
sub
push
ret
mov
push
dec
jns
jno
pop
sbb
les
push
inc
inc
cmp
adc
outsb
xor
lret
jp
call
jg
in
int3
nopl
or
push
jge
xchg
inc
mov
inc
out
mov
cmp
add
pop
out
bound
ret
and
lcall
stos
push
mov
aam
pop
jns
int3
aam
sbb
repnz
mov
cmp
loop
cltd
pop
lahf
or
sbb
leave
outsl
cld
mov
mov
es
and
imul
rol
xchg
stos
test
push
jp
mov
dec
stos
fiadds
jns
subl
in
fsubs
add
xchg
int
mov
shrb
and
mov
jge
jne
fistps
pop
mov
hlt
xchg
int3
fildll
cmpsb
cli
cltd
movsl
std
ret
mov
push
push
inc
outsl
loopne
ficoms
or
mov
mov
das
fcmovnbe
in
shl
int3
cmc
pop
mov
mov
sbb
fnstcw
mov
insb
pushf
pop
stos
popl
and
sbb
das
xchg
sub
std
cmp
push
cmp
aam
xor
inc
lods
repnz
test
movsl
bound
dec
es
adc
cmp
sbb
lods
ret
jp
sbb
insl
or
lahf
mov
stos
xor
fisubl
scas
pop
scas
add
sahf
rcll
scas
mov
outsl
hlt
scas
pushl
sarl
lahf
xor
push
jle
pop
inc
dec
inc
ficoml
ss
sub
leave
gs
jo
sbbb
scas
cwtl
test
push
stos
lret
xchg
imul
add
push
mov
fidivrl
mov
jp
pushl
push
stos
mov
pusha
aas
add
bound
fmull
aad
sub
push
rol
movsl
jp
pushl
push
rclb
cwtl
pop
inc
xor
setnp
aaa
mov
sub
jno
sbb
and
sub
loopne
dec
push
adcb
fcompl
es
push
mov
in
mov
xchg
add
mov
aad
add
and
dec
pop
xor
push
jno
lret
xchg
out
jo
les
ss
mov
sbb
aas
add
int
sub
xchg
mov
and
adc
data16
push
adc
loopne
aas
push
popf
push
stos
mov
scas
inc
xlat
test
out
aaa
pop
add
push
mov
cwtl
add
and
and
pop
loope
dec
jg
fsubrs
pop
jnp
gs
ret
sbb
jecxz
repnz
sub
cmpsl
insl
int3
cmp
pop
adc
repnz
bound
push
or
mov
push
stc
sbb
arpl
dec
cmp
mov
cmp
bound
xor
mov
shrl
mov
push
jp
gs
lods
popa
push
sub
cli
sbb
mov
insb
push
fisubrs
popf
adc
and
dec
icebp
xor
mov
ret
push
and
sti
adc
loopne
jbe
in
xchg
cmpsl
mov
add
lahf
divl
cmp
addr16
cmp
dec
lcall
out
int3
gs
cmp
popf
dec
es
dec
fdivl
pop
adc
mov
ja
nop
xchg
test
xchg
push
or
dec
aaa
xchg
cmp
cltd
aam
mov
cmpsb
jmp
jg
push
adc
mov
and
test
fcoml
dec
insb
repz
aaa
xchg
cmp
cltd
pop
movsl
lock
mov
lock
fsub
jg
push
cmpl
mov
sub
jns
imul
mov
sahf
sub
rcll
stos
dec
ds
mov
nop
push
lret
in
mov
push
cmp
mov
imul
add
jl
imul
leave
mov
adc
jae
adcl
xchg
mov
sahf
rcr
stos
dec
jp
push
push
stc
push
push
mov
dec
xor
lods
pop
add
pop
test
rcr
jne
dec
rorl
movswl
sub
icebp
lcall
mov
scas
jae
das
orl
sbb
neg
push
xorl
fistl
popa
sbb
push
clc
in
push
outsb
xchg
and
in
push
push
sub
or
fwait
lcall
iret
inc
and
int3
stos
iret
ret
insb
rclb
dec
push
lcall
stos
push
mov
decb
movl
xor
sbbl
push
add
data16
data16
das
out
push
dec
mov
lahf
mov
dec
xchg
jbe
jle
test
push
cmp
imul
cmp
mov
stos
sbb
push
cmp
gs
xor
or
in
lcall
sbb
mov
dec
lock
push
repnz
mov
lahf
ss
shrl
mov
cmpsb
pop
nop
outsb
or
dec
pop
sbb
nop
dec
outsb
xchg
pop
or
xor
xor
or
push
les
shll
subl
leave
jecxz
mov
dec
shrl
mov
mov
xchg
stos
jnp
pop
lods
push
adc
pop
test
and
popa
jb
sbb
enter
adcb
fidivl
sbb
imul
clc
lret
out
jle
negb
cmpb
leave
sub
xor
stos
adc
outsb
add
daa
js
xor
in
testl
test
xor
loope
sbb
sub
lock
push
repnz
mov
xchg
lret
daa
dec
daa
daa
outsl
sub
sub
jbe
shlb
jb
pop
fs
fildl
rorl
bnd
or
adc
and
mov
pop
imul
roll
xchg
and
push
push
push
jmp
cmp
inc
rol
mov
fmull
arpl
xor
in
out
cmp
add
mov
ss
aaa
jns
fistps
rcll
stos
in
xchg
imul
fs
ret
mov
inc
lret
rclb
mov
iret
testl
xchg
jle
pop
jg
sbb
mov
shlb
and
or
popf
mov
into
sbb
movsl
vpsubusb
je
outsl
xchg
pop
push
int
push
rolb
lahf
es
orb
push
ret
jb
cmc
ret
or
pop
mov
jge
lret
push
push
mov
fwait
mov
flds
in
shlb
fdivl
mov
push
cmp
sub
sbb
pop
xchg
mov
insb
pushf
pop
stos
push
and
xor
out
repnz
xchg
push
sbb
bnd
dec
stos
es
xchg
sbb
lds
sbb
cmpsb
sub
sti
cld
mov
jbe
mov
js
lcall
adc
test
imul
out
xchg
shrb
xadd
mov
jno
shrl
jne
insb
mov
pushl
test
push
lock
xchg
xor
xor
sbb
lahf
movsb
xchg
xchg
or
in
out
int3
aas
mov
xlat
fimull
std
or
lods
sbbl
in
shlb
hlt
out
jno
xchg
push
and
cmp
inc
dec
lcall
roll
jge
stos
dec
adc
dec
out
lds
pushf
ret
mov
cmp
xor
dec
jg
inc
dec
addb
sbb
or
and
lret
lock
in
roll
jl
dec
pop
mov
mov
or
in
jb
mov
mov
xlat
inc
test
xchg
mov
aam
stos
dec
ss
ret
ja
xchg
dec
cmp
push
xchg
stc
repz
dec
add
dec
movsl
xor
jge
pop
pushw
push
jnp
jp
adc
fsubr
bound
fs
dec
shll
js
mov
and
out
in
sbb
repnz
repnz
pop
rol
add
adc
insb
cmpsb
leave
mov
iret
jl
jmp
lcall
jg
mov
mov
sub
nop
loop
mov
aas
and
stc
inc
sbb
push
shlb
xor
rcrl
pop
lret
cmp
mov
sahf
sbb
lret
dec
cltd
pop
sbb
pop
cs
push
pop
xorl
pop
sbb
jo
or
test
outsb
mov
cmpsb
shr
mov
fdivrl
pusha
pop
dec
test
cmp
add
out
xlat
test
xchg
iret
mov
add
mov
push
int3
cld
notl
into
cmpl
ljmp
fnstsw
sub
mov
ret
jg
aaa
push
sbb
push
or
add
and
push
cmp
in
test
inc
sbb
mov
mov
mov
xchg
pop
inc
insl
inc
and
cmpsl
xlat
popa
cmpl
dec
or
xor
mov
incb
rcrb
add
in
orl
xor
xchg
ss
lret
mov
sar
cmpsb
jns
aas
das
or
push
sub
rcll
stos
cmp
repnz
push
mov
pop
movsl
pusha
pushf
mov
je
dec
xchg
mov
mov
push
push
mov
mov
adc
xor
jno
jg
jecxz
xchg
pusha
and
imul
flds
xchg
popa
shlb
pop
cltd
cwtl
add
pop
pusha
adcb
clc
daa
jns
pop
lea
imul
cmpsb
sysexit
imul
test
les
xor
fimuls
push
add
rorl
and
imul
xor
clc
jns
xchg
imul
repz
sub
jns
xchg
cmp
fsubl
adc
cmp
cld
xor
imul
cld
dec
lods
out
jg
pop
cmp
push
cmpsl
fcomps
push
test
insb
and
call
sub
and
in
repnz
dec
or
subb
mov
in
cmpsb
fstps
inc
sub
out
mov
cmp
mov
cmp
pop
cmpsl
mov
dec
clc
push
es
div
inc
dec
test
loope
outsl
movsl
or
repz
movsb
fcom
test
cmp
test
in
inc
sbb
lcall
shrb
leave
push
ret
mov
ret
jae
adcl
idivl
ret
sub
jno
cmc
in
orl
hlt
xchg
test
xchg
cmp
xor
lret
fisttpl
cmp
mov
or
dec
inc
popf
es
cmpsl
rcrl
sbb
mov
jl
xchg
xlat
test
inc
xchg
mov
jg
lret
mov
push
inc
lahf
xchg
enter
jp
mov
repnz
mov
mov
sbb
mov
cmp
repz
sub
movsl
jae
pop
inc
mov
mov
pop
daa
sbb
cld
mov
mov
push
jo
push
add
sbb
outsl
arpl
test
sahf
jmp
jg
push
pop
and
in
pop
jo
inc
mov
sbb
jns
jmp
inc
or
inc
clc
ret
fdivrs
out
dec
lret
and
test
dec
fcoms
ja
imul
mov
dec
inc
jae
stos
xor
xor
rcll
push
fisttpl
test
and
je
mov
out
pop
lds
popa
sbb
mov
decl
mov
ficompl
incb
jle
cmp
repnz
jo
notl
mov
xor
cmp
pop
jge
arpl
and
jp
sbb
lods
jne
outsl
adc
dec
sti
insl
fwait
outsb
cmc
in
iret
mov
jno
repz
adc
jae
stc
lea
and
jg
push
dec
or
xchg
mov
aam
stos
dec
andl
nop
mov
ds
rcrl
icebp
loope
sbb
push
inc
cmp
jo
add
adc
mov
testb
ds
jnp
aam
mov
aas
cmp
imul
nop
mov
xlat
pop
xchg
test
dec
lcall
ds
xor
mov
outsl
cmp
jnp
jo
scas
cmp
or
pusha
dec
scas
repz
xor
dec
nop
mov
ds
popa
int3
and
xor
test
push
inc
or
sub
mov
adc
popf
mov
jbe
or
dec
or
outsb
lahf
adc
sbb
dec
nop
mov
ds
loope
jecxz
test
inc
int3
loope
out
test
fwait
bound
push
sub
aas
xor
nop
mov
ds
mov
aam
sbbl
neg
mov
adc
ja
inc
mov
test
dec
nop
mov
ds
outsl
cwtl
xor
and
adc
lret
sbb
cmpsb
cld
sub
cmpsb
pop
or
xor
dec
nop
mov
ds
testb
ds
cwtl
sbb
insb
popa
or
sub
push
pop
adc
test
or
mov
aaa
jp
jbe
sahf
xor
addr16
mov
fwait
and
sub
dec
cs
lret
orb
cmc
inc
lahf
adc
add
out
xchg
push
scas
push
daa
push
cld
mov
push
push
push
add
ror
cld
js
mov
push
sub
mov
push
add
jl
into
sbb
pop
inc
imul
inc
sub
push
sub
mov
and
xor
jp
mov
lock
lds
mov
fldcw
mov
repnz
out
xlat
std
xlat
jmp
pop
addr16
mov
push
push
and
insl
orb
adc
push
icebp
push
imul
imul
xor
repz
adc
sub
inc
lcall
gs
aam
roll
ljmp
jecxz
pop
lcall
jecxz
and
adc
cmc
rolb
out
rsm
test
lcall
cmp
add
adc
push
iret
adc
jns
aam
out
mov
jo
outsl
add
jb
dec
push
jb
sub
cmp
stos
jg
and
and
xor
cs
repnz
jg
inc
lods
inc
sub
aaa
lock
xor
pop
mov
fmuls
popa
icebp
lds
jne
movsb
in
daa
das
inc
es
lret
out
sbb
cmp
xchg
adcl
mov
test
pop
adc
xor
adc
mov
xor
outsl
and
data16
fwait
xlat
xchg
andb
sbb
fiaddl
scas
pop
xor
pop
aaa
int
cmpsl
or
icebp
fcompl
fs
outsl
mov
imul
dec
ficoms
aas
or
hlt
push
in
push
pop
add
sub
sbb
jb
test
xchg
pop
cs
lcall
adc
fwait
mov
add
mov
pusha
mov
scas
sub
shll
sbb
popl
sub
movsl
mov
jne
mov
and
mov
lea
sbb
jb
and
daa
sub
mov
add
push
das
pop
or
jb
cmp
mov
push
push
pop
adc
lea
mov
lds
lcall
adc
es
mov
xor
ror
mov
js
pushl
xchg
test
add
jbe
adc
ljmp
sarl
xchg
and
mov
js
cmpsb
mov
lret
sbb
jbe
in
or
mov
xor
loopne
cs
lods
sbb
jbe
mov
cmp
or
sub
sub
jmp
fnstcw
outsb
add
or
or
lcall
dec
out
icebp
faddp
lret
and
push
outsb
sub
in
mov
xor
lods
sub
mov
jge
ljmp
aad
ret
or
dec
sub
jmp
pop
cmpsb
inc
aaa
pop
mov
inc
cwtl
sub
call
pop
and
mov
cwtl
pop
stc
loopne
aas
in
arpl
mov
stos
push
cs
jmp
cmp
in
cs
fmull
mov
js
sub
negb
xor
pop
mov
aad
xchg
nop
pop
out
and
or
aad
or
or
in
xlat
cmp
pop
pop
add
dec
ficompl
or
out
aaa
fcomps
add
sahf
jnp
push
movntq
jle
or
and
jge
jmp
mov
sub
fs
nop
jmp
test
or
xlat
ja
rorb
or
pop
dec
mov
push
sbb
xchg
in
lahf
dec
repnz
cld
popa
dec
and
data16
jge
ds
xchg
pop
cmp
push
mov
jbe
pop
xor
ljmp
ds
and
dec
inc
jl
push
stos
xor
mov
cltd
lret
or
cmpb
ficoml
mov
lcall
ret
cs
mov
cmpsb
outsb
mov
call
pushf
call
cmpsl
jne
je
popa
jecxz
pop
or
cltd
fstl
add
cmp
xchg
add
aam
push
cmc
outsl
jmp
pop
sbb
inc
fwait
in
das
adcb
in
call
xchg
xchg
lret
repnz
jo
lret
das
test
sti
add
movsb
xchg
mul
gs
lret
mov
jg
dec
pusha
xchg
mov
jecxz
pop
rcrb
sub
jns
pushf
dec
xchg
cmp
push
ljmp
jge
outsb
xchg
ror
ffree
pop
stos
mov
or
adc
xchg
fwait
xchg
ljmp
pushf
movsl
cmp
std
push
scas
mov
out
xchg
std
stos
xor
out
fcoms
addr16
repz
sub
or
shlb
pushl
adc
fisttpll
inc
testb
lds
enter
cltd
push
jp
mov
int3
jecxz
fucomp
ret
inc
hlt
xor
lret
mov
popf
lret
xchg
dec
das
enter
movsl
cmp
jmp
cmp
jmp
and
data16
xchg
sub
and
lret
ljmp
ret
mov
sbb
popf
mov
mov
inc
adc
mov
pop
cli
das
mov
push
pop
add
je
into
mov
mov
mov
fstl
jno
xor
jl
rcrb
icebp
jb
imul
cld
lahf
ficomps
push
or
mov
dec
stos
gs
outsl
inc
imul
cwtl
sub
fcoml
xchg
icebp
sbb
push
ss
adc
cmp
add
push
stos
xor
push
sti
cmp
fildll
and
mov
cmp
mov
cmpsl
ss
std
shr
mov
push
insl
subl
outsb
int
cmp
mov
daa
add
nop
jmp
rcrb
jl
fidivrs
mov
ret
mov
cmp
pop
das
ss
push
jb
cltd
inc
icebp
loop
cltd
jg
movsl
or
loope
cmp
mov
inc
loop
mov
push
add
push
push
xor
movsb
mov
out
mov
lods
pop
xchg
cmpsl
jmp
inc
sub
or
sbbb
push
lret
outsb
dec
pop
sub
movsb
mov
mov
xor
jnp
hlt
sub
cmpsb
or
cmp
cmp
cs
mov
dec
add
inc
lods
or
sbb
push
movsb
stos
mov
sbb
xchg
icebp
das
xchg
xorb
adc
jecxz
xchg
lret
jmp
outsl
jle
inc
movsl
adc
xchg
cmp
and
sub
add
xor
mov
gs
push
inc
stc
mov
imul
pop
dec
sub
outsl
adc
mov
outsb
sti
mov
cmp
xor
rcl
push
mov
and
outsl
adc
mov
int3
stc
mov
mov
fidivrs
dec
xor
mov
xor
push
in
out
mov
cmp
sub
dec
stc
sti
hlt
leave
mov
sahf
xchg
fnsave
mov
sbb
mov
push
pop
into
mov
inc
mov
mov
mov
or
push
subb
push
jae
pop
aad
cmp
rol
outsl
add
lods
adc
xchg
mov
sub
mov
insl
je
cmp
cltd
add
fldl2t
mov
and
lret
ljmp
pop
cmpsl
in
scas
cs
ss
rolb
loop
mov
mov
pop
es
orl
mov
lds
stos
test
sbb
mov
jne
cmpsl
ds
lahf
push
test
stos
pop
aam
push
jne
repnz
or
daa
nop
ficoml
jae
push
or
xor
adc
lret
lods
fwait
add
out
lock
std
into
pop
and
sub
xor
data16
out
int3
clc
lret
jl
nop
sub
or
mov
adc
adc
call
jecxz
adc
rcrb
pop
adc
out
mov
and
js
xchg
mov
dec
insl
or
xor
push
lahf
aas
pop
push
ja
leave
xor
jns
dec
inc
dec
adc
lcall
pushl
push
lahf
aas
pop
push
enter
stc
fimuls
cmp
jns
out
jne
into
push
dec
adc
addl
xchg
aaa
xor
xor
xor
or
mov
mov
fs
imul
jp
and
rcll
inc
mov
mov
push
lcall
or
iret
inc
dec
jge
dec
clc
mov
lret
mov
jg
mov
add
xor
sarl
lock
cmp
lcall
imul
inc
aam
mov
jecxz
jge
dec
mov
mov
jmp
int
pop
mov
mov
rorb
or
pop
mov
dec
les
pop
pop
xchg
adc
popf
jne
mov
mov
inc
lods
int3
jmp
pop
mov
jo
mov
mov
loope
dec
mov
dec
rcr
subb
xchg
xchg
mov
lods
fsubrs
lods
jne
or
or
cmc
les
es
mov
mov
sbb
xor
popa
andl
loopne
mov
add
jl
out
xchg
xchg
loop
mov
repnz
xchg
add
sub
sub
hlt
mov
shll
or
clc
stos
xor
out
mov
lret
sbb
out
je
inc
ss
insl
movsb
cmpsb
jge
rcrb
jb
enter
or
mov
add
sub
fwait
insb
imulb
mov
nop
mov
sbb
xchg
ljmp
stos
sbb
in
lea
xor
outsb
dec
adc
imul
cmp
xor
push
iret
sub
mov
jb
xchg
repz
into
pop
xor
push
xchg
mov
pop
ficoml
orb
adc
into
and
repnz
cmc
push
imul
fidivrl
js
xor
popa
inc
sbb
lods
mov
test
pop
inc
test
push
mov
mov
flds
and
lods
imul
les
and
in
movsb
push
mov
pop
cmc
jmp
arpl
xor
and
mov
scas
jbe
imul
mov
jmp
insl
cmc
jg
adc
jmp
or
decl
mov
inc
ret
dec
jae
mov
fcomps
fidivrl
jne
push
ja
sahf
cmp
icebp
ss
push
pop
jp
shl
popf
pushf
push
je
inc
ret
push
loop
clc
push
or
xchg
lret
mov
mov
dec
cmc
sub
push
push
xchg
loopne
jge
jmp
aaa
in
inc
pop
es
leave
cmc
sbb
sub
lea
pop
sub
scas
mov
jg
mov
bnd
rorb
aaa
mov
adc
jnp
lcall
push
adc
in
rcrb
mov
jp
xor
xchg
in
adc
mov
int3
and
mov
push
addb
sbb
push
insl
xchg
je
xor
movsbl
cmc
lret
insl
xchg
mov
pusha
leave
int3
mov
sbb
mov
out
fnstsw
pop
dec
lret
jle
sbb
lock
cwtl
and
cmp
cmp
or
mov
mov
adc
rclb
aas
jne
jae
decl
cmp
jns
pop
sahf
dec
jl
ror
push
bound
je
cmp
aas
push
popa
lock
les
aam
shrl
mov
sub
mov
data16
iret
pop
icebp
lret
f2xm1
mov
inc
out
cli
push
push
pop
in
js
xor
addr16
out
rorb
pop
ds
or
aaa
andb
push
pop
push
aaa
mov
dec
popl
mov
push
dec
fdivrp
sahf
xchg
nop
sti
bound
xchg
stc
sbb
xchg
xchg
mov
mov
repz
mov
cmp
int3
and
daa
xchg
fdivrs
test
loope
incb
insb
fisttpll
sbb
pop
xor
stc
mov
test
sbb
les
test
movsl
mov
std
cli
inc
sub
push
mov
adc
and
das
pushf
ljmp
xchg
or
shrb
arpl
and
xor
dec
push
out
lahf
adc
ret
xor
mov
out
inc
pop
xchg
enter
xor
das
jo
xor
add
arpl
fldcw
rolb
rcrl
pop
push
xor
call
outsb
push
test
repnz
push
lcall
dec
repz
pop
jl
call
xchg
push
in
mov
cmp
add
or
jae
pop
aad
cmp
movb
repz
adc
and
pop
test
inc
xlat
mov
push
or
rorb
and
adc
cwtl
cltd
mov
lock
les
jno
jbe
mov
ljmp
push
add
jb
or
pop
in
pop
and
push
les
jmp
scas
fadds
dec
mov
jns
mov
out
sbb
or
and
jg
clc
out
xor
jns
icebp
or
in
pop
int
test
arpl
mov
iret
sarb
stc
ljmp
add
mov
xor
fwait
aaa
cld
mov
jo
inc
adc
sarl
clc
dec
or
mov
jns
add
add
icebp
push
lea
stos
cmpsb
and
fxch
jae
dec
inc
fs
or
movsl
dec
or
or
out
mov
lds
sub
sub
addb
ljmp
xor
mov
rclb
fwait
pop
mov
mov
mov
jle
pop
in
enter
dec
stos
mov
mov
mov
insl
pop
mov
xchg
hlt
stos
aam
add
xchg
sahf
add
repnz
je
and
push
incb
push
std
or
loope
hlt
jb
aas
mov
dec
mov
push
pop
popa
int3
pop
popf
pop
sti
int3
ret
repz
xchg
jns
jmp
sbb
sbb
mov
fisttpl
and
sbb
xchg
sbb
mov
loope
mov
test
fwait
dec
sub
in
sub
xor
cli
add
popf
mov
lods
int
push
ss
ret
sbb
fildl
mov
outsb
cmp
fwait
ret
mov
xor
pop
adc
pop
into
addr16
and
sbb
das
shrl
je,pt
cmp
jp
mov
xchg
and
mov
mov
mov
imul
ss
out
push
sbb
sahf
inc
inc
into
mov
xchg
sbb
hlt
dec
cs
ss
mov
push
lods
scas
sub
sub
dec
push
jmp
aam
mov
lret
pop
sbb
movsl
out
out
mov
jmp
mov
push
popf
add
and
xchg
add
rsqrtps
mov
addb
in
and
dec
pop
lahf
sbb
int3
cmp
in
sbb
fiaddl
jnp
and
js
jmp
add
mov
xchg
jge
and
cmp
orb
adc
cmp
adc
data16
movsl
dec
xorl
leave
in
mov
push
lods
pop
pop
fwait
xchg
sbb
data16
jno
xchg
xlat
sbb
push
fisubl
dec
int
xchg
add
loopne
inc
nop
stc
popf
adc
inc
out
inc
and
jmp
dec
stos
adc
cs
enter
lahf
clc
pop
xchg
cwtl
in
add
dec
mov
xor
or
loope
cmc
and
loope
out
jne
insl
lods
push
js
repz
fwait
mov
sbb
lret
adc
or
or
gs
or
jns
sbb
call
cmp
loope
inc
jmp
insl
jmp
scas
xchg
jb
mov
inc
cmp
jmp
fiaddl
xor
xor
xor
adc
cmp
and
roll
push
jb
rcr
add
lret
hlt
add
lods
nop
mov
cmp
lods
rcll
shll
pop
and
outsb
lods
movsl
push
sub
fxch
inc
inc
push
xor
sub
imul
push
inc
xor
jae
add
mov
stos
dec
mov
orl
popf
loope
inc
mov
out
push
lahf
testb
mov
ja
mov
loope
sarb
push
call
icebp
sub
fwait
imul
outsl
aad
sub
xchg
rcl
mov
mov
add
pop
sahf
mov
add
nop
outsb
movsl
mov
pop
jmp
ret
xchg
jbe
js
pop
mov
mov
jecxz
adc
aam
fistps
push
add
jnp
mov
mov
sbb
inc
inc
pop
and
pop
mov
ficompl
int
loop
mov
inc
arpl
inc
or
and
ret
xchg
jbe
icebp
push
daa
pop
pusha
and
adc
jne
lahf
out
mov
inc
fnstcw
mov
dec
lahf
stos
or
arpl
mov
sarl
sbb
mov
out
add
add
pop
xor
jmp
dec
rcrb
cmpsb
inc
push
pusha
lret
xlat
fdivp
mov
sub
sbb
and
repnz
outsl
push
mov
popf
aaa
cmp
mov
scas
test
cltd
cmpsb
pop
xlat
pop
pop
js
add
mov
in
dec
xchg
imul
sahf
mov
or
mov
jp
sbb
inc
into
shll
mov
push
dec
dec
movsl
sub
ja
mov
std
cmp
xchg
repnz
nop
and
test
mov
or
stos
jge
roll
jmp
mov
dec
sbb
xor
insl
pop
and
fnstcw
xchg
mov
mov
mov
lcall
dec
xor
mov
pop
shrl
jb
cmp
dec
fistl
aam
pop
lods
les
lods
jb
inc
jno
inc
daa
xchg
push
jne
mov
leave
dec
shl
jl
xchg
cli
xor
sub
js
jo
enter
add
and
in
sub
push
repnz
sub
mov
pushf
jmp
lcall
mov
enter
xchg
and
out
jl
cwtl
jg
cmp
add
xchg
mov
es
pop
or
dec
inc
sub
xor
sub
lret
sbb
mov
sti
jmp
dec
mov
insl
xor
add
jg
repz
cltd
xor
jns
loop
lcall
mov
gs
hlt
dec
daa
or
dec
inc
sub
movl
dec
daa
mov
jl
addr16
mov
push
fs
jo
add
pop
test
jb
dec
mov
in
add
inc
pop
cmp
pop
sbb
cmp
dec
sar
loope
sbb
test
test
insl
push
popf
leave
cli
cwtl
out
shl
jmp
inc
sub
sti
push
frstpm(287
mov
add
jae
mov
imul
das
imul
or
ss
or
popf
call
ret
mov
movsl
insb
inc
sbb
test
outsl
inc
xor
and
fninit
and
adc
ja
insl
into
jae
es
jno
add
xor
mov
add
sarl
sub
jbe
shlb
stc
jg
ljmp
lods
iret
movsl
jno
add
std
xchg
cmpsb
mov
in
fildl
pop
jmp
sub
cmpsb
dec
mov
shll
lret
jmp
imul
jbe
adc
push
shll
test
sbb
sub
aam
fdivrs
xlat
or
mov
push
pushf
pop
push
mov
repnz
inc
inc
dec
push
dec
push
js
mov
testl
jbe
jae
xchg
outsl
stos
iret
movsl
cmp
addb
jb
fmul
aam
jle
jl
add
push
mov
dec
out
add
mov
pushf
pop
sarb
xor
cmp
xchg
sub
stos
mov
addr16
das
inc
test
repz
pop
js
imul
int
cmp
shlb
cmpsl
pop
jg
push
pop
push
xor
pop
xlat
leave
movsl
mov
icebp
pop
daa
mov
in
cmpsl
or
fcoms
in
cmp
cwtl
ret
add
sbbl
inc
sub
test
mov
inc
gs
inc
pop
imul
lret
xchg
push
jb
sub
push
push
int3
sahf
sub
xor
dec
je
xor
push
inc
out
dec
jmp
in
cmp
fwait
add
pop
clc
adc
jbe
ja
push
xchg
push
mov
mov
dec
jg
out
mov
decb
xchg
jge
cmpl
pop
clc
adc
jbe
ja
push
xchg
push
jbe
or
push
pop
call
pop
xchg
inc
fwait
push
sub
jae
sbb
push
inc
pusha
out
push
fsubrp
out
jp
mov
jne
popa
je
lret
jns
into
mov
cmp
pcmpeqd
test
add
stc
jl
dec
lds
mov
punpckhbw
adc
cmpsb
push
popa
mov
pop
stos
sub
dec
int3
repz
test
mov
fs
mov
fucomi
xchg
or
xor
and
mov
push
or
les
std
shll
cmpsl
pusha
shlb
rorb
mov
stos
mov
sub
loope
insl
and
arpl
outsl
ret
insl
sar
fidivs
inc
js
aad
jg
xor
scas
test
adc
movsl
lahf
fcomi
cld
adc
fwait
xor
jecxz
test
imul
pop
ljmp
push
adc
sti
push
dec
jnp
inc
or
lret
andps
sbb
movsb
dec
push
das
dec
fwait
test
sub
jne
mov
cmc
adc
inc
push
fdivrs
cmp
movsl
cmpsb
and
insl
sar
fidivs
inc
js
aad
mov
jmp
int3
das
mov
insl
inc
std
adc
cmp
pop
fwait
push
dec
pop
add
rclb
hlt
mov
mov
sub
adc
mov
jge
cli
dec
out
sahf
fwait
ljmp
mov
test
hlt
mov
sub
mov
imul
inc
scas
mov
mov
jp
xor
lea
data16
mov
and
cltd
sbb
and
jl
shlb
push
xchg
aam
ss
jo
ss
inc
mov
imul
add
push
pop
cmp
inc
imul
add
sub
cmp
sub
popa
jae
jnp
stc
dec
push
xchg
inc
popa
nop
jp
out
sbb
xor
jno
mov
clc
xor
mov
fdivrl
scas
cmpsl
add
pop
pushf
or
jl
imul
or
pop
insl
enter
stos
mov
movl
fsubr
repz
or
arpl
cmp
repnz
loope
mov
mov
mov
pop
call
xchg
pop
leavew
mov
pop
and
mov
sub
and
or
mov
push
inc
mov
or
lea
gs
jne
rcrl
aaa
mov
add
sub
xchg
ljmp
jg
insl
mov
cli
das
je
xlat
ljmp
and
xchg
shrb
sub
pop
cmpsb
ds
jecxz
aas
aaa
insl
adc
popf
ret
icebp
movsl
adc
cmpl
mov
loop
dec
sub
adcb
jb
rclb
loope
pop
cmp
pop
add
sbb
or
inc
shlb
mov
lcall
mov
in
inc
mov
in
xor
dec
jb
sub
into
imul
in
das
stos
mov
popa
mov
scas
lret
pop
pop
lcall
fld
cmp
outsl
xor
pusha
xchg
pop
addr16
fld
std
xor
std
cmp
subl
sahf
jne
outsl
fwait
rcr
pop
rorb
dec
mov
stc
out
mov
adc
sbb
xchg
or
or
in
movsb
subl
mulb
sarb
outsb
xchg
fwait
repz
ret
mov
adc
jle
movsb
enter
push
leave
jl
add
xorb
mov
push
gs
xchg
pop
adc
xchg
push
test
das
jb
testl
pop
fidivrs
xchg
push
jmp
mov
cmp
cmc
add
fs
xor
lret
jae
xchg
sub
dec
lahf
lods
xchg
data16
xchg
mov
or
sub
mov
mov
clc
fmul
and
jle
rclb
cmp
outsb
pop
adc
or
dec
inc
int3
sub
sarb
sbb
fmul
lret
fists
mov
icebp
jae
mov
pop
cmpsb
movups
pushf
mov
add
xor
ret
or
xlat
out
jne
xchg
ds
fbstp
push
fldl
dec
test
or
jecxz
ja
mov
mov
inc
test
sti
xchg
mov
inc
mov
dec
sub
mov
ja
pop
pop
xchg
and
mov
dec
imul
xchg
out
cmp
addb
aad
xchg
rclb
cli
push
and
imul
ret
or
in
mov
loope
addr16
add
loopne
fwait
test
xchg
loopne
add
mov
xchg
jg
lcall
lds
scas
cmp
insb
shr
into
mov
jge
lods
pusha
pop
jbe
dec
ret
sti
int
cld
inc
jmp
jle
push
mov
sub
push
iret
fimuls
jae
cmp
mov
push
call
sti
lcall
or
xchg
inc
addr16
fildl
sbb
pushl
push
lods
inc
shll
xchg
xor
mulb
cmp
pop
dec
loope
lock
inc
xorl
sar
imul
sbb
xlat
mov
add
cld
icebp
mov
sbb
stc
mov
cmp
xor
lcall
loope
hlt
mov
movb
sarl
out
or
inc
sbb
mov
popa
mov
popf
cmpsl
xchg
cmp
sbb
enter
mov
icebp
addl
ret
aam
sar
repnz
cmp
pop
test
lods
add
add
mov
fdivrp
popa
outsl
mov
in
jg
pushf
aam
pop
js
fildll
enter
ja
aad
fsubl
sbb
in
ljmp
push
flds
pop
lea
insl
sub
xchg
dec
in
fs
adc
js,pn
cmp
jp
sbb
or
add
sub
push
fistps
inc
js
stos
stc
arpl
adc
adc
ffreep
mov
and
js
in
int
and
mov
aam
subl
sarb
xor
imul
pop
js
xlat
pop
xor
mov
test
leave
adc
int3
cwtl
adc
imul
std
fs
cs
arpl
adc
xor
iret
mov
rcr
jne
nop
adc
jb
lret
push
rcrl
pop
push
call
inc
pop
adc
xchg
ficoml
xor
js
repnz
sarl
cs
fwait
add
push
jmp
scas
or
out
scas
fucomip
jg
pop
clc
and
dec
jo
cwtl
loope
or
repz
inc
lods
cmp
imul
dec
and
mov
scas
ljmp
mov
jb
mov
mov
fs
ret
jl
mov
xor
movd
lahf
lcall
insb
mov
repnz
mov
enter
fadd
imul
cmp
imul
repnz
push
xchg
mov
dec
fs
cmp
lahf
gs
cs
fnstenv
pop
hlt
or
push
fistpl
xchg
movsb
andl
sbb
loopne
mov
call
sbb
lcall
jne
pop
test
mov
test
add
outsb
mov
pop
inc
enter
fadd
imul
xor
inc
lret
cwtl
adc
pop
hlt
or
push
or
in
sbb
mov
mov
outsl
mov
sahf
dec
xor
push
out
cmc
nop
inc
cmp
test
repnz
push
in
push
les
cmpsb
dec
insb
mov
ret
mov
loop
cld
push
xor
sub
subb
mov
stc
mov
push
ret
ret
jbe
test
mov
leave
outsb
cmp
jmp
call
outsl
loop
push
pop
sub
mov
push
out
lcall
insl
data16
repnz
mov
add
sub
mov
popa
inc
xadd
shll
mov
arpl
pop
repnz
mov
and
adc
inc
cltd
xchg
adc
sahf
popf
jmp
lahf
addr16
cmc
cmp
cvtps2pd
lret
call
xchg
sub
and
and
repnz
mov
leave
pop
subb
xchg
mov
xor
insb
push
test
enter
adc
gs
push
mov
xor
jmp
sbb
ljmp
aaa
and
movsl
sarl
or
xor
xchg
add
movb
xchg
mov
add
shrl
xchg
lea
mov
test
ret
ret
push
lret
leave
push
ret
sahf
sti
mov
adc
xor
push
pushf
loope
and
add
das
fdivs
inc
mov
test
mov
push
inc
imul
or
adc
mov
jb
mov
lods
mov
ret
cs
push
repnz
sahf
outsb
push
add
jp
rcrl
mov
adc
xchg
movsl
cmpsb
fs
and
cwtl
xchg
lret
dec
adc
add
push
mov
mov
lods
sbb
add
fisubl
cli
xor
add
jo
jge
mov
mov
idivl
mov
movsl
leave
and
jmp
ret
inc
mov
mov
rolb
inc
dec
jns
jb
icebp
insl
adc
or
lret
jo
mov
or
pop
es
inc
mov
mov
xchg
pop
ljmp
xor
sbb
and
lods
rcll
or
jmp
movsl
xor
xchg
push
stc
and
aam
mov
and
int
lea
int3
jno
ret
push
adc
sub
pop
adc
out
inc
mov
and
pushf
movsb
repnz
mov
and
sub
subb
dec
call
jo
cmp
movsl
dec
and
sub
jg
ret
int
fwait
sub
mov
pop
lret
pop
outsb
cltd
imul
mov
pop
cs
pop
mov
mull
popa
outsb
add
dec
nop
mov
ds
testb
ds
testb
ds
testb
ds
mov
js
ret
adc
sub
in
cmpl
test
out
inc
jle
mov
je
pusha
je
popf
insb
pushf
fcomps
and
into
add
dec
imul
adc
movsl
jne
xchg
pop
aas
movsb
lcall
dec
inc
mov
testb
ds
pop
mov
adc
fists
pop
fstl
xchg
shl
gs
sub
in
push
push
ljmp
in
rcll
testb
ds
arpl
push
fisubl
or
cmp
dec
nop
mov
ds
pop
sbb
cmp
push
mov
testb
ds
pop
mov
pop
jne
lret
mov
add
sbb
gs
leave
ret
jmp
in
cli
ret
rorb
mov
cmpl
test
cli
xchg
fidivs
daa
clc
sub
jge
mov
lret
inc
fcmovb
add
aam
into
dec
xchg
int3
mov
loop
shlb
adc
js
push
add
inc
aaa
dec
jne
add
outsl
jnp
rcrl
fistps
lea
dec
cmc
test
push
std
idivb
inc
int3
mov
out
dec
jae
adc
xor
das
in
bound
sbb
dec
inc
push
test
lods
mov
adc
ljmp
xchg
or
rclb
loopne
roll
dec
xor
inc
push
lret
dec
out
mov
clc
je
movsl
and
out
mov
jb
movsb
cld
shll
jns
out
dec
mov
and
cmovl
sahf
pop
daa
push
iret
icebp
mov
jmp
pop
sub
mov
movsl
aas
sahf
outsl
es
mov
js
adc
adc
lods
jecxz
or
lcall
xchg
xor
xchg
adc
orb
or
or
pop
jae
sub
xor
lcall
or
inc
mov
js
sub
jno
test
pop
rclb
inc
or
or
cltd
push
aam
mov
bound
divl
insb
sub
lds
cmp
aaa
jnp
popf
test
xchg
and
or
push
ljmp
or
rolb
int
fstps
jno
mov
mov
mov
cwtl
pop
lds
sub
idivb
ficompl
mov
ret
push
cmp
jnp
mov
test
out
xchg
bound
movsl
xchg
or
push
mov
loopne
mov
mov
mov
icebp
and
xchg
sub
jl
call
cmp
cs
cld
mov
push
and
pop
mov
mov
cmp
jg
rcl
push
adc
cli
cltd
sbb
and
jno
sub
das
dec
xchg
dec
sahf
lcall
xor
neg
cmp
add
sub
inc
mov
mov
cwtl
xchg
cmp
clc
pop
fidivl
mov
xor
add
cmpb
out
dec
nop
mov
ds
testb
ds
mov
mov
daa
daa
and
dec
nop
mov
ds
mov
pop
cltd
add
xor
dec
nop
mov
ds
mov
out
mov
lahf
mov
arpl
out
es
push
dec
int
div
dec
nop
mov
ds
push
pop
in
lock
add
dec
nop
mov
ds
add
add
ret
xchg
testb
ds
loop
pushf
gs
test
mov
cmpsl
xor
push
shlb
nop
mov
ds
in
push
enter
xor
dec
nop
mov
ds
fnstenv
pop
cmp
xchg
testb
ds
fistpll
lods
mov
dec
nop
mov
ds
lock
test
lods
jp
testb
ds
iret
pusha
push
inc
jmp
dec
nop
mov
ds
jge
push
cmp
mov
testb
ds
pop
ficoms
sub
int
dec
nop
mov
ds
jl
addr16
pop
cli
xor
nop
mov
ds
repz
clc
push
xchg
div
dec
nop
mov
ds
loopne
jne
dec
sbb
lahf
testb
ds
push
rcrl
testb
ds
xchg
imul
testb
ds
xchg
xchg
dec
mov
dec
nop
mov
ds
xor
lcall
push
hlt
call
push
testb
ds
mov
sub
push
push
testb
ds
mov
pop
repnz
mov
mov
ds
fsub
mov
and
dec
nop
mov
ds
inc
mov
mov
adc
testb
ds
loop
fstl
repnz
testb
ds
andb
out
mov
xchg
testb
ds
pop
dec
stos
loopne
pop
adc
mov
ds
sti
adc
test
dec
nop
mov
ds
data16
push
push
rorl
mov
ds
in
int
sbb
push
testb
ds
jns
or
dec
cmpsl
testb
ds
mov
xchg
jbe
testb
ds
iret
jp
push
push
std
ljmp
ds
nop
sahf
mov
fwait
testb
ds
movsb
cmp
add
push
cmp
xor
testb
ds
jmp
inc
cmpsb
xor
mov
cs
jns
cmp
nop
mov
ds
pop
xlat
mov
dec
nop
mov
ds
add
dec
cltd
testb
ds
popf
mov
popl
testb
ds
xchg
xchg
sbb
ret
ds
movsb
testb
ds
mov
das
push
ds
testb
ds
mov
aaa
sub
xchg
testb
ds
sbb
subb
dec
nop
mov
ds
cwtl
pop
and
mov
nop
mov
ds
cltd
mov
into
adc
mov
out
clc
dec
inc
or
nop
mov
ds
mov
jbe
adc
popa
and
dec
nop
mov
ds
aad
push
add
jg
lcall
imul
stos
in
in
mov
dec
nop
mov
ds
jmp
cmc
bnd
dec
nop
mov
ds
dec
out
loope
push
repnz
testb
ds
mov
jge
leave
mov
nop
mov
ds
xchg
test
mov
testb
ds
mov
jnp
jl
testb
ds
cmc
pop
out
mov
dec
nop
mov
ds
jp
shll
mov
or
jl
aaa
scas
xchg
mov
jge
lret
sbb
mov
fsts
adc
cmpsb
arpl
stos
push
ret
hlt
addr16
stos
or
add
push
jp
pop
out
daa
insl
in
jb
or
push
cmpsb
inc
dec
repnz
stos
aam
jg
scas
arpl
lret
mov
or
in
jp
cmp
ret
dec
mov
std
inc
jl
inc
fwait
xchg
and
es
mov
jbe
loop
add
xchg
bound
mov
int
dec
fwait
fs
jno
or
mov
ds
testb
ds
inc
mov
bound
ss
cmp
ljmp
jns
jl
clc
jp
pop
mov
je
sub
ja
sbb
insb
push
cmp
xchg
test
pushf
pop
not
lods
popa
fnstenv
cli
stos
jb
scas
xchg
sbb
cs
fldcw
sbb
nop
iret
mov
sub
gs
imul
aas
test
jmp
ret
push
and
or
add
mov
js
testl
mov
push
xchg
pop
pop
call
je
in
and
push
xor
subl
clc
pop
xchg
arpl
scas
lds
dec
add
das
cld
or
xchg
and
scas
mov
inc
popf
pop
jns
jae
sbb
repnz
push
lahf
repnz
rcll
fldt
mov
jl
icebp
jns
pusha
out
fistps
test
sti
pop
ret
adcb
xchg
lods
mov
mov
add
stos
xlat
mov
dec
inc
out
inc
mov
faddl
loope
lds
call
arpl
sub
das
rcll
lock
xchg
mull
fcompl
mov
xlat
imul
leave
std
and
push
pop
icebp
sbb
mov
push
sbb
fsubl
clc
adc
mov
insb
aad
out
insb
or
cmp
insl
cmp
jmp
add
adcb
mov
pop
xchg
loope
sbb
xchg
mov
or
mov
call
sbb
cltd
cmp
or
mov
pop
jb
mov
mov
cmp
nop
hlt
rcll
cmpsb
mov
sub
sahf
ds
aam
clc
jae
jle
inc
scas
adc
cld
add
add
xchg
fs
mov
or
inc
std
mov
add
int3
arpl
adc
mov
loop
in
mov
pop
dec
jmp
push
mov
jmp
dec
sub
and
js
mov
or
pop
sub
fldenv
in
jmp
mov
ret
mov
mov
test
jecxz
cmc
in
cmp
add
jle
inc
add
arpl
ja
outsl
and
test
or
cltd
sbb
lahf
cmp
imul
mov
sti
enter
push
push
into
pop
or
mov
mov
cmpsb
mov
ror
jae
xchg
add
fs
out
mov
ud1
fidivrl
in
mov
inc
fsts
and
mov
fwait
cmp
cld
pop
push
shrb
pusha
cltd
mov
div
push
sbb
cmp
jge
add
dec
mov
in
and
rcrl
pop
inc
adc
fisttps
fcmovb
push
mov
pop
in
int
jbe
xchg
push
pop
enter
js
add
push
mov
mov
cltd
xor
pop
sub
jnp
inc
xchg
push
jo
sarl
mov
cwtl
arpl
jbe,pt
jae
iret
imull
xor
rcr
adc
leave
sbb
cld
dec
xor
aam
jp
iret
and
add
movsl
std
daa
in
add
dec
xchg
mov
mov
movsb
jecxz
scas
or
or
in
push
cmp
inc
loop
pop
mov
ds
mov
mov
mov
arpl
cmp
inc
add
scas
leave
sbb
lods
add
xor
add
test
add
push
pop
pop
jo
rep
jb
mov
icebp
add
cwtl
lahf
cmc
jns
ds
test
lahf
js
push
in
in
into
dec
out
int
lds
pop
in
ds
or
push
push
mov
fsubrl
lahf
lret
mov
mov
shll
out
cmpsl
xor
xchg
dec
sub
sbb
cmpsb
cmpsb
xor
std
leave
mov
imul
or
adcb
out
push
inc
jbe
sub
cwtl
imul
ret
out
dec
sbb
jb
sbb
cmp
dec
insb
pop
dec
test
loopne
movsb
mov
add
aad
in
test
mov
jmp
sub
xor
sbb
insb
xchg
arpl
or
daa
leave
es
mov
mov
test
sbb
jo
mov
test
imul
pop
xor
or
or
daa
xorb
add
mov
les
jl
mov
les
adcl
xor
lock
enter
dec
mov
shr
mov
push
and
in
outsl
adc
lret
or
aas
lds
adc
mov
into
dec
sbb
push
fnstcw
lock
push
out
inc
jns
fs
stos
mov
es
dec
xor
mov
fcompl
pop
iret
iret
loop
sub
fstpl
jbe
in
inc
dec
in
cli
jmp
aas
scas
movsb
and
push
std
jne
pop
bound
in
cli
ja
inc
or
clc
dec
popa
push
leave
push
push
mov
test
xor
sbb
push
mov
push
sbbb
jecxz
sub
sub
sbb
mov
cmp
mov
and
mov
mov
jnp
std
out
sbb
add
push
rcll
xchg
popf
dec
mov
stos
test
mov
and
scas
lret
jecxz
cmpsl
int
loopne
shlb
jbe
lret
dec
insb
jne
jl
pop
xchg
rcr
xor
cmp
mov
imul
adc
dec
lret
je
in
addb
or
push
pop
test
orb
test
jbe
mov
pop
sysret
and
add
jecxz
leave
je
mov
mov
aad
aam
push
rorl
scas
repz
scas
test
int3
sbb
aaa
nop
mov
xchg
std
imul
jmp
cmpsl
or
mov
and
cmpsl
sahf
rcrb
add
mov
sub
popf
mov
mov
cmpsl
sbbl
stc
mov
fldl
sub
outsb
sub
scas
jge
mov
imul
das
fpatan
mov
cs
pusha
and
or
jbe
cmp
jb
xchg
push
das
sbb
dec
pop
das
mov
xor
loop
aaa
mov
inc
jbe
inc
andl
shll
sbb
adc
cmp
iret
pop
ja
in
inc
jmp
ret
movsb
adc
xchg
and
cli
lret
pop
cmp
ja
add
lods
jns
cmpsl
addb
lcall
xlat
dec
pop
sahf
fmulp
xor
jle
push
or
cmp
mov
cwtl
lret
xchg
lea
pop
rorb
jnp
adc
xchg
mov
ss
fisubs
push
push
gs
loop
cmpsl
les
and
and
lahf
aad
push
mov
mov
cltd
pop
mov
fnstcw
dec
fs
cltd
pop
dec
rolb
cmpsb
sti
inc
xor
jo
sar
arpl
cwtl
insl
pusha
in
mov
dec
sti
scas
stos
mov
stos
fwait
or
mov
or
inc
incl
jbe
and
cmp
sub
mov
add
movsl
popf
inc
into
or
add
xor
lea
pop
adc
inc
xchg
loope
sahf
aam
sbb
mov
test
inc
hlt
movsl
cmp
push
hlt
rolb
cmpsb
leave
sti
or
in
adc
test
mov
data16
into
mov
stos
pop
mov
iret
int3
nop
pop
loopne
pop
mov
xchg
pop
sub
push
xor
dec
adc
outsb
and
jb
sub
cltd
adc
iret
sbbb
lea
cli
inc
cmp
add
add
fcompl
ret
adcb
xchg
inc
icebp
cmpsb
xchg
jo
shlb
xchg
mov
mov
sub
or
imul
add
inc
dec
les
lcall
shlb
cmp
inc
repz
push
cmp
enter
aaa
leave
loope
mov
cltd
aaa
jae
loop
add
loope
sti
add
push
lret
jae
jb
das
or
ljmp
or
cmp
push
pop
mov
jmp
fwait
add
mov
cmp
cmp
aaa
or
cmpsl
mov
cmp
mov
sarb
jg
cmp
leave
lock
and
jae
jns
add
push
fwait
cmp
cmp
enter
jmp
dec
dec
inc
mov
mov
out
jle
xchg
fwait
pop
ret
xchg
ffree
ret
or
test
sbbl
pop
mov
mov
fiaddl
repz
pusha
call
test
stos
es
in
pop
dec
mov
mov
out
mov
out
mov
mov
mov
out
mov
dec
das
out
test
in
add
aas
xor
int3
loopne
out
repz
push
lcall
mov
sub
pusha
ja
fldcw
sub
jg
stos
aam
or
out
dec
push
sub
aam
xchg
adc
imul
xor
popa
das
repz
lea
sbb
add
or
or
pop
jno
push
push
push
lahf
insl
xlat
ljmp
pop
cmpsl
fwait
hlt
sarl
cmp
mov
push
fcmovnbe
lock
repnz
mov
mov
arpl
lahf
add
aam
adc
xchg
shl
mov
test
xchg
adcb
inc
dec
cltd
inc
sti
xlat
xchg
sub
jno
jbe
mov
cmc
outsb
ret
push
aad
cmc
les
xchg
int3
pop
lret
lods
loope
enter
repnz
pop
dec
out
mov
imul
and
mov
movsl
daa
lcall
jnp
mov
icebp
mov
fldl
mov
mov
bound
pushf
fldt
in
aas
cmp
or
loopne
adc
xor
int3
cmpsl
subb
xchg
jl
mov
lea
pop
xchg
dec
xchg
ja
lock
test
pop
addr16
lea
sahf
pushf
jnp
ss
or
push
stos
or
in
mov
fstl
sub
rol
lret
jo
mov
in
shrb
je
push
push
pop
int
jle
or
xor
dec
inc
imul
aam
lods
loope
jle
int3
lock
and
and
sahf
jno
inc
lahf
sbb
lock
or
nop
mov
fldt
lods
movsl
in
dec
mov
shlb
data16
and
mov
xor
dec
mov
fistl
mov
pop
dec
cs
pop
mov
les
insb
mov
adc
add
clc
nop
mov
lcall
inc
mov
cmp
aam
jo
out
out
lahf
dec
adc
int
shrb
pop
adc
sub
dec
xor
push
xchg
pop
jle
fucomi
addr16
xchg
insb
push
aaa
fs
ffreep
into
push
mov
xlat
cmpsb
popa
jno
shlb
dec
movaps
xor
mov
sbb
sub
add
adc
mov
inc
jp
andb
rorl
ret
fstps
ret
js
movsl
push
push
mov
cmp
lret
mov
push
mov
jae
mov
inc
mov
mov
xchg
lods
es
xchg
sub
imul
insl
fwait
imul
mov
std
xchg
insl
xchg
mov
pop
push
pop
push
push
sti
pop
iret
xor
popa
pop
push
lods
add
nop
js
ror
rcr
mov
mov
push
out
sbb
popf
push
mov
pusha
mov
jge
jge
sbb
mov
jmp
pop
into
push
push
adc
xor
ss
sub
or
out
daa
adc
lea
xchg
hlt
out
mov
xor
test
mov
mov
dec
xchg
mov
xor
loopne
pusha
mov
sbb
sahf
repz
js
xor
mov
aaa
fwait
shll
push
ja
pop
repnz
push
adc
cmpsl
in
outsl
xchg
cmp
jb
xchg
sub
cmovnp
pushf
sub
adc
xchg
js
lret
fisubrl
jns
cmp
lea
fdivrl
mov
into
sub
ret
subb
ljmp
mov
fdivr
loopne
into
lock
into
leave
ss
in
lock
push
pop
subb
xor
inc
movsb
push
out
jle
adc
inc
or
roll
jne
mov
adc
mov
xchg
push
test
xor
popf
in
enter
push
js
mov
daa
iret
adc
imul
in
mov
adc
or
pop
mov
mov
push
push
lock
call
andl
les
aad
lods
pmulhw
in
cli
and
ficompl
clc
sbb
pop
call
fs
enter
outsl
subl
jb
adc
mov
push
jbe
sarb
adc
mov
sub
cmc
mov
jmp
and
and
pop
add
sbb
add
and
sbb
ljmp
iret
pop
stos
les
movsb
jo
inc
fcomp
push
cmp
and
in
cmp
push
push
cwtl
fists
inc
push
adc
mov
fnstenv
lea
or
inc
xor
test
xor
add
inc
call
jg
vpmadcswd
jnp
sbb
inc
cmpsl
pop
cld
mov
popa
setnp
add
out
out
sti
jbe
pop
outsl
test
mov
loop,pn
shrb
loopne
mov
inc
mov
xchg
jmp
sarl
pop
jnp
adc
loopne
sbbl
inc
daa
fdivrl
fs
pushf
sti
sub
mov
and
cmpsb
mov
and
xchg
push
addr16
adcb
push
in
in
jmp
push
mov
cmc
mov
dec
addr16
repz
xlat
xor
fucomip
shlb
xchg
ljmp
popa
xchg
xchg
ljmp
xchg
and
mov
xchg
sub
xorl
dec
xor
insb
sahf
es
adc
push
jno
pop
inc
sub
pop
sar
xor
and
mov
jb
xor
mov
sbb
aad
and
xchg
les
decb
push
loopne
stos
fwait
sub
and
mov
enter
mov
sub
xor
pop
test
imul
sub
sarb
mov
sbb
adc
sbb
ss
out
ret
push
shr
inc
fsubrl
icebp
cmc
sub
jbe
jl
dec
popa
xor
add
sbb
cmp
das
outsb
inc
insl
adc
xor
pop
cmp
out
aaa
imul
add
jb
or
lahf
cld
pop
mov
leave
mov
xchg
outsl
push
sbb
adc
cmp
jns
mov
insb
sarb
mov
dec
test
sbb
inc
pusha
add
xchg
mov
jno
mov
dec
xchg
xor
push
pusha
shl
sahf
push
movsl
and
fsubrl
arpl
ss
sahf
mov
sub
test
pop
aas
xor
and
stc
sbb
jl
ror
pop
mov
inc
enter
test
adc
inc
into
stos
dec
jecxz
and
shl
mov
adc
pop
dec
adc
or
add
pusha
and
and
inc
pop
and
aam
lock
xchg
push
int3
arpl
pop
jns
dec
mov
jbe
jle
push
xchg
mov
and
es
insb
mov
mov
xchg
out
sahf
push
sahf
or
mov
std
stos
ficoml
gs
dec
pop
call
and
or
scas
into
das
icebp
inc
adc
push
xlat
jmp
andb
popf
loope
mov
pop
pop
push
cmp
testl
cwtl
mov
mov
sub
arpl
and
dec
inc
js
pshufw
popa
int3
sub
loope
test
and
shlb
jle
js
bound
filds
rcrb
test
in
mov
sub
or
sti
imul
fmuls
test
push
cmp
push
jae
addl
ret
cld
ljmp
jae
xor
dec
mov
out
iret
int
inc
add
out
cltd
popf
jp
jmp
in
loope
in
aaa
sub
cmp
jns
mov
lsl
xor
mov
push
std
stos
push
lock
mov
or
ljmp
dec
push
xchg
cwtl
mulb
in
daa
push
xor
adc
fwait
dec
dec
and
je
stos
ret
aad
cs
sub
mov
push
arpl
inc
testb
jg
lods
scas
xchg
mov
sbb
adc
or
popl
aas
push
lods
cli
mov
fsubs
jne
fldenv
adc
add
fwait
rorl
jecxz
nop
bound
notl
xchg
pop
mov
pusha
pop
syscall
sub
inc
in
popf
and
inc
mov
sub
sub
pop
sub
lcall
adc
mov
insb
add
cli
adc
xchg
adc
inc
lahf
and
lds
push
or
push
push
ja
fsubr
jno
mov
jmp
pop
add
xchg
mov
push
jnp
sub
cmpsb
inc
test
int
add
pusha
push
jle
adc
inc
ja
gs
jae
xor
sub
or
sub
xlat
jnp
lds
sbb
jle
lea
xchg
xor
xor
or
pop
dec
call
sub
int
xor
lock
jp
fwait
aas
ds
xor
mov
mov
adc
sbb
bound
repz
pop
lods
repz
sbb
mov
stos
cmp
fstp
inc
or
inc
jb
addr16
jmp
push
ss
xor
mov
adc
adc
fmull
bound
cmc
inc
ret
cmc
lock
or
inc
sub
out
mov
pushf
sahf
cmp
sbb
gs
dec
out
int
scas
outsl
stos
xor
idivb
fisttpl
adc
decb
int
or
je
test
mov
dec
push
or
jne
jecxz
xorb
hlt
inc
and
ret
push
out
jge
pop
dec
aam
mov
sub
xchg
cmc
add
xchg
push
stos
mov
sarl
pop
mov
or
mov
push
pop
lods
fldt
pop
sbb
imul
repz
test
mov
sub
sti
add
jbe
shlb
push
push
cli
adc
pop
shlb
cmp
int3
out
mov
loop
cmp
mov
rcr
fcompl
add
into
and
aaa
add
insl
adc
mov
inc
aam
mov
pop
mov
movsb
push
clc
mov
mov
push
imul
inc
sbb
rcr
enter
out
cli
xor
adc
push
add
cs
pop
mov
das
pop
dec
jo
aad
mov
add
les
xor
xor
jns
xor
mov
mov
jnp
imul
lea
xor
sbb
cmp
jns
sbb
mov
in
ret
ss
daa
fcmovnbe
ja
mov
mov
jnp
movsl
mov
mov
inc
clc
js
pop
in
xor
xor
and
dec
push
pop
call
imul
insl
jp
subl
mov
jp
push
xchg
mov
into
jmp
out
cmc
sub
frstor
lea
lret
clc
mov
lea
pop
sti
mov
xchg
add
cli
xchg
repnz
mov
cld
sub
cmpsb
xchg
iret
clc
push
loopne
xchg
ds
aam
mov
sbb
jb
jl
fwait
push
mov
jge
xchg
dec
or
sysenter
push
push
push
sti
fwait
pop
lahf
sub
cli
pop
inc
fwait
ljmp
inc
mov
stos
or
mov
xchg
repz
inc
sub
sub
int3
pusha
lret
lds
ret
sbb
add
push
mov
pop
ror
fnstenv
pop
cmc
mov
lahf
or
das
and
sbb
xchg
push
pop
rorl
in
push
shll
scas
into
iret
int
add
pushf
fs
imul
mov
pop
dec
push
or
inc
dec
cli
or
lods
aam
test
xchg
ficomps
ljmp
ss
ljmp
mov
sub
stos
cmpsl
push
add
push
push
xchg
push
aam
push
sub
in
and
mov
sub
cli
push
ficoml
imul
movsl
outsl
sbb
push
jb
outsb
jecxz
int3
sarb
push
int3
out
pop
cmp
outsl
lods
imul
packsswb
fs
push
sbb
add
mov
pop
and
push
pop
out
das
fldenv
pop
ja
stos
mov
mov
pop
mov
xchg
movsb
rcr
fwait
scas
push
sub
das
fdiv
mov
sahf
lret
out
push
subb
inc
ficoms
subb
cmp
mov
mov
cs
pop
sbb
xchg
sub
out
nop
mov
cmp
aas
and
rcrb
es
mov
repnz
mov
pop
pop
push
jecxz
push
jmp
and
push
daa
repz
loope
mov
jmp
test
dec
test
cwtl
xor
imull
xchg
cmc
pop
push
cltd
fimuls
sarl
cltd
in
aam
or
and
repz
mov
out
mov
aaa
cwtl
imul
mov
mov
lods
stc
push
movsb
int
sub
xor
add
aam
test
mov
fucom
push
dec
mov
sbb
cli
jl
sub
outsl
add
jge
ds
add
icebp
xor
cmc
into
aaa
stos
hlt
sbb
dec
and
xchg
jne
push
rcr
jne
xchg
mov
cs
pinsrw
push
mov
adc
inc
mov
in
loopne
or
mov
sub
loop
cs
inc
jnp
xor
repz
pop
lret
ror
sti
call
pop
sub
fs
aaa
push
xchg
push
xor
dec
movsl
je
mov
pop
or
pop
mov
jge
cmp
ljmp
pop
inc
sub
imulb
inc
or
inc
push
sbb
cmp
xor
je
inc
in
inc
xchg
sbb
jp
mov
repz
xchg
imul
add
sbb
mov
loopne
daa
das
jg
xchg
adcl
sub
out
fldt
dec
jno
push
sarl
cmp
sbb
cmp
std
adc
xor
cmp
push
dec
dec
inc
xor
dec
mov
sbb
adc
fucomip
mov
fmull
sbb
popa
and
aas
out
pop
scas
cmc
cld
jl
stos
loopne
xchg
xor
jge
xchg
and
add
mov
dec
les
je
popf
adc
lods
xor
int
rolb
xchg
cwtl
jmp
xchg
sbb
or
add
push
xchg
sti
jmp
mov
sub
mov
cmp
inc
xchg
call
test
cmp
cli
cld
js
jae
push
sbb
sarb
mov
dec
in
stc
mov
mov
and
jge
fildll
in
mov
dec
inc
mov
sub
clc
add
and
cmp
jo
xor
jge
or
es
xlat
dec
sub
lahf
xor
in
inc
xor
loop
jnp
mov
jnp
and
scas
jecxz
xchg
jmp
cwtl
xor
pusha
push
into
inc
lds
mov
mov
push
or
xlat
add
xor
jb
xchg
mov
arpl
sub
leave
mov
outsl
notl
clc
mov
lods
test
iret
lods
pop
push
mov
and
mov
insl
mov
inc
movsb
dec
int3
mov
jo
subb
sbb
mov
mov
ret
pop
mov
cmp
gs
cmc
and
jg
mov
mov
lods
fwait
ds
gs
js
cmp
and
jecxz
daa
in
outsb
mov
xor
add
dec
in
les
fcoml
jl
lods
mov
mov
test
inc
jle
add
add
idivb
arpl
dec
cli
jo
xchg
sbb
mov
aas
xchg
mov
jnp
and
fldt
nop
daa
sarl
mov
js
adc
popf
data16
cmp
fdivp
or
in
cmc
lods
adcl
out
mov
mov
or
inc
cmpsb
pop
add
subb
lahf
lock
dec
add
lods
xor
push
in
dec
mov
add
loope
mov
ljmp
lods
mov
je
mov
test
lds
xchg
rorb
jl
adcb
cmpsl
imul
leave
adc
mov
sub
jnp
adc
mov
out
mov
shlb
xchg
jne
push
push
and
repnz
mov
jns
jecxz
xor
in
push
js
sbb
add
cmp
xchg
in
mov
test
cwtl
inc
inc
les
aam
jb
adc
lahf
mov
jle
imul
xchg
jnp
xor
mov
sahf
test
mov
xlat
sbb
xchg
mov
lds
mov
enter
or
dec
call
mov
xchg
scas
out
sub
int3
ljmp
jmp
pop
out
pop
jno
jg
mov
adc
ftst
mov
loopne
lods
lret
push
sbb
mov
sub
mov
and
mov
add
call
dec
mov
call
sub
xchg
mov
cmp
cmp
sub
bound
inc
push
cmp
out
insb
xor
addl
mov
mov
imul
sub
push
leave
mov
or
xlat
xchg
mov
and
popa
jp
negb
mov
mov
data16
xchg
inc
movl
mov
jg
dec
jle
push
push
xchg
jmp
std
mov
or
fmull
mull
inc
add
imul
lret
adc
and
stos
lret
xor
test
enter
sahf
shrl
pop
mov
xchg
aas
fsts
mov
cmpsl
into
push
lods
push
jg
jne
pop
outsl
ja
loope
sbb
orl
sub
mov
iret
out
cmp
outsl
xor
push
and
jle
dec
mov
mov
lods
push
ret
pop
add
xchg
cmpsb
jbe
inc
xchg
out
xchg
popf
movsb
pop
sbb
add
rolb
testl
test
add
pop
ja
xor
mov
xchg
fadds
add
jbe
shrb
ja
loope
loop
sub
or
and
fcomi
fnstcw
sarl
add
inc
dec
mov
cmpsb
cld
mov
push
push
jns
daa
xchg
push
repz
stos
xchg
xor
cmp
cld
mov
push
push
push
std
das
mov
out
lods
push
ja
xor
in
clc
sub
icebp
push
and
mov
enter
xchg
int3
mov
jb
inc
test
jnp
jmp
subl
pop
push
adc
mov
nop
cld
and
mov
mov
xchg
xor
shll
and
sub
jle
fidivl
rol
dec
into
or
mov
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
testb
ds
add
xor
push
push
jo
jb
add
add
pusha
les
add
addr16
xor
xor
push
jne
imul
jo
jb
adcb
add
add
add
inc
add
inc
add
incl
inc
add
in
xchg
inc
add
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
roll
in
ret
add
add
roll
call
roll
add
add
sbb
add
add
add
add
add
add
add
ret
cwtl
ret
movsb
ret
mov
add
add
roll
call
roll
add
add
sbb
add
add
add
add
add
add
add
ret
cwtl
ret
movsb
ret
mov
add
add
add
add
je
jb
arpl
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
xchg
add
outsb
add
add
arpl
add
add
pop
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
rolb
adc
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
add
rolb
sub
add
add
rolb
sub
add
add
rolb
sub
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
inc
sub
push
add
add
add
add
adc
add
sbb
add
inc
sub
push
add
add
add
add
add
add
xor
add
inc
sub
push
add
add
add
add
or
add
add
pop
rolb
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jp
add
add
xor
xor
xor
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
and
add
add
inc
add
insb
add
push
add
jb
jae
imul
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
