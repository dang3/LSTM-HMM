push
mov
sub
movl
lea
mov
mov
or
mov
add
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
or
mov
sub
mov
sub
mov
push
push
push
call
cmp
jne
movl
movl
lea
mov
mov
mov
and
mov
sub
add
mov
lea
mov
mov
mov
add
mov
sub
mov
mov
or
imul
mov
call
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
cmpl
jne
call
jmp
lea
mov
mov
mov
sub
imul
mov
mov
push
mov
push
call
add
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
push
mov
sub
movl
movl
lea
mov
movl
mov
or
mov
add
cltd
idiv
imul
mov
movl
mov
or
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
mov
sub
imul
mov
jmp
lea
mov
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
imul
mov
movl
lea
mov
mov
or
mov
add
add
mov
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
imul
mov
movl
mov
or
sub
add
mov
lea
mov
mov
add
mov
cltd
idiv
add
mov
jmp
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
imul
add
mov
jmp
movl
movl
mov
and
add
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
mov
add
imul
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
movl
lea
mov
mov
mov
add
mov
mov
or
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
mov
imul
mov
movl
cmpl
jl
movl
lea
mov
movl
mov
or
mov
imul
mov
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
cmp
jg
movl
movl
mov
or
imul
mov
movl
lea
mov
mov
mov
add
add
mov
movl
mov
and
mov
add
cltd
idiv
add
mov
movl
lea
mov
mov
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
or
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
imul
mov
movl
mov
and
add
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
imul
mov
jmp
movl
movl
mov
sub
add
mov
jmp
movl
movl
lea
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
and
mov
imul
mov
jmp
movl
mov
and
mov
sub
mov
cmpl
jg
movl
mov
and
add
imul
mov
jmp
cmpl
jl
movl
cmpl
jl
movl
lea
mov
movl
mov
mov
or
sub
mov
sub
mov
mov
sub
add
mov
jmp
movl
lea
mov
lea
mov
mov
mov
and
mov
imul
mov
sub
mov
movl
mov
or
imul
add
mov
movl
mov
and
mov
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
or
mov
or
sub
mov
sub
mov
lea
mov
mov
mov
sub
mov
sub
mov
jmp
mov
and
mov
add
cltd
idiv
add
mov
mov
or
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
movl
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
movl
lea
mov
lea
mov
movl
mov
mov
or
mov
add
cltd
idiv
imul
mov
movl
mov
add
mov
cltd
idiv
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
cmpl
je
mov
or
add
imul
mov
movl
mov
sub
imul
mov
movl
movl
mov
add
mov
jmp
mov
sub
mov
movl
lea
mov
mov
mov
imul
mov
movl
movl
mov
and
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
movl
mov
mov
or
imul
imul
mov
jmp
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
xor
je
movl
lea
mov
mov
mov
or
add
imul
mov
movl
mov
add
mov
sub
mov
call
movl
mov
or
add
mov
movl
cmpl
jg
cmpl
je
movl
lea
mov
mov
mov
imul
add
mov
cmpl
je
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
push
call
add
jmp
mov
add
add
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
movl
lea
mov
mov
mov
add
add
mov
movl
cmpl
jne
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
movl
lea
mov
mov
or
mov
add
cltd
idiv
imul
mov
movl
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
mov
add
mov
movl
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jg
movl
mov
and
add
add
mov
jmp
mov
and
mov
sub
add
mov
lea
mov
mov
mov
and
mov
and
add
mov
jmp
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
movl
movl
mov
or
mov
or
sub
mov
movl
mov
sub
imul
mov
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
and
add
mov
sub
mov
movl
mov
sub
mov
sub
mov
mov
sub
imul
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
and
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
movl
mov
sub
mov
movl
lea
mov
movl
mov
and
mov
sub
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
mov
sub
mov
sub
mov
movl
mov
imul
mov
movl
lea
mov
mov
mov
and
sub
add
mov
movl
mov
or
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
mov
imul
mov
movl
lea
mov
mov
mov
or
imul
imul
mov
mov
and
imul
imul
mov
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
sub
mov
movl
mov
sub
mov
movl
mov
sub
mov
movl
mov
or
mov
add
cltd
idiv
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
sub
add
mov
lea
mov
lea
mov
mov
mov
or
mov
mov
or
sub
imul
mov
movl
mov
push
push
call
add
push
call
mov
movl
mov
sub
imul
mov
push
mov
push
call
mov
push
call
add
shl
push
push
push
push
call
mov
movl
cmpl
jae
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
cmpl
jg
movl
mov
or
mov
sub
add
mov
jmp
lea
mov
mov
mov
or
add
add
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
movl
movl
mov
add
imul
mov
mov
mov
mov
rorl
mov
xor
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
imul
add
mov
lea
mov
mov
mov
imul
mov
jmp
call
mov
add
mov
jmp
push
call
mov
movl
cmpl
jne
movl
mov
imul
mov
lea
mov
movl
mov
and
mov
sub
imul
mov
lea
mov
mov
mov
sub
imul
mov
jmp
movl
mov
push
call
add
movl
movl
mov
cmp
jl
lea
mov
lea
mov
mov
mov
and
mov
mov
add
imul
mov
mov
or
mov
add
cltd
idiv
add
mov
mov
and
mov
add
cltd
idiv
mov
sub
mov
jmp
lea
mov
mov
mov
and
add
mov
sub
mov
mov
add
mov
cltd
idiv
add
mov
mov
and
sub
imul
mov
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
xor
mov
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
xor
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
jmp
push
mov
push
mov
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
jmp
jmp
jmp
cmp
add
les
add
mov
xor
add
jo
add
pop
xor
add
and
add
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
and
add
xor
add
add
add
mov
add
lret
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
sbb
add
or
add
cld
xor
add
xor
add
xor
add
xor
add
add
add
add
fiaddl
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
bound
add
jb
add
adc
add
xchg
add
mov
add
shlb
add
add
loopne
add
out
add
clc
add
jle
add
dec
push
inc
and
insb
popa
outsb
arpl
push
dec
xor
push
push
add
imul
gs
xor
cs
insb
insb
add
add
push
imul
insb
insb
outsl
arpl
add
add
add
add
dec
es
add
es
add
xor
add
xor
add
add
shlb
add
xor
add
je
add
or
add
mov
add
jl
add
sbb
add
mov
add
add
xor
add
les
add
mov
xor
add
jo
add
pop
xor
add
and
add
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
and
add
xor
add
add
add
mov
add
lret
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
sbb
add
or
add
cld
xor
add
xor
add
xor
add
xor
add
add
add
add
fiaddl
add
es
xor
add
cmp
add
inc
add
push
add
pop
add
bound
add
jb
add
adc
add
xchg
add
mov
add
shlb
add
add
loopne
add
out
add
clc
add
jle
add
add
add
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
je
imul
cmp
inc
jb
popa
je
inc
imul
gs
jne
jb
outsb
je
jb
arpl
jae
mov
dec
popa
jae
inc
jb
outsl
jb
add
add
gs
xor
popa
je
inc
jbe
outsb
je
add
push
add
gs
je
push
push
add
sbb
dec
jne
jo
je
bound
push
je
imul
add
popa
jo
gs
insb
insb
outsl
arpl
mov
jo
jb
add
mov
jo
insb
insb
outsl
arpl
pop
add
je
jb
arpl
jae
gs
jo
add
inc
imul
gs
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
roll
dec
jae
popa
fs
outsl
fs
je
add
jno
inc
gs
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
add
gs
push
dec
jne
je
inc
jns
add
add
insb
je
inc
jns
gs
outsl
push
imul
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
jae
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
cmp
inc
gs
outsl
fs
gs
imul
add
iret
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
push
dec
inc
dec
xor
cs
insb
add
sbb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
addr16
jo
outsb
dec
gs
js
add
add
gs
push
gs
imul
jne
add
roll
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
in
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
mov
dec
jo
outsb
push
push
push
outsl
imul
roll
push
gs
jb
popa
je
dec
gs
add
add
je
arpl
imul
imul
arpl
add
je
imul
imul
je
outsl
jb
je
add
push
inc
push
dec
xor
cs
insb
add
insl
jae
cs
insb
add
imul
arpl
cs
insb
add
lds
pop
arpl
js
je
testb
gs
je
dec
add
arpl
inc
imul
pop
arpl
imul
imul
arpl
insb
outsb
add
pop
pop
addr16
popa
imul
cmp
pop
imul
insl
add
gs
jae
jb
popa
je
gs
add
mov
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
test
pop
pop
jo
pop
insw
outsl
fs
cwtl
add
jae
je
popa
jo
pop
je
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
mov
pop
outsl
outsb
gs
je
in
add
js
gs
pop
push
gs
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
lods
adc
add
add
add
lods
jmp
push
mov
sbb
repnz
dec
add
repnz
lods
sbb
xchg
add
adc
push
or
scas
adc
or
jo
in
push
or
xchg
rcr
addl
dec
cwtl
lods
dec
mov
lret
je
adc
orl
xlat
aad
mov
xor
adc
je
sub
iret
or
xchg
adc
or
mov
sbb
insb
andl
ret
mov
or
dec
ret
inc
mov
adc
test
jl
pop
loope
inc
adc
fwait
jle
aas
mov
ja
repnz
pop
test
cmpsb
call
mov
push
sub
out
sbbl
push
adc
scas
adc
mov
dec
adc
xor
cmc
add
jne
add
stos
sbb
or
repz
lods
push
push
or
adcl
push
jb
and
adc
cmp
and
adc
adc
into
inc
dec
ss
sub
and
inc
xchg
fistpl
inc
xor
mov
adc
mov
mov
sbb
and
xor
popa
add
rcrl
js
insl
fimull
idivb
and
push
mov
pusha
and
in
xchg
rorb
fsubl
cmp
sub
push
and
lret
pop
push
sbb
and
sbb
dec
outsl
ss
ja
or
sub
cmp
xor
hlt
and
and
adc
mov
and
or
cmp
and
push
jb
ret
and
in
xchg
mov
fwait
push
sub
or
pop
mov
and
or
pop
bound
decb
fwait
loop
arpl
mov
or
inc
xor
xchg
enter
xor
movsb
sbb
jae
mov
or
adc
xchg
inc
jg
nop
sbb
and
jmp
add
adc
xor
inc
pushf
decb
mov
fimull
cmpsb
jno
inc
imul
mov
adc
fwait
fs
pushl
cmp
popf
sbbl
xor
mov
not
es
and
fwait
ss
test
adc
push
jnp
ret
mov
mov
and
jb
nop
and
in
xchg
sahf
mov
sbb
outsb
and
jno
or
jbe
xchg
jne
enter
stos
jle
pushf
mov
pusha
and
in
xchg
cs
lea
hlt
enter
mov
pop
fwait
jo
add
xchg
fs
xor
or
inc
adc
sub
fisubs
fcoml
cwtl
mov
and
xchg
add
addr16
loopne
fimull
mov
xor
and
mov
adc
fwait
insb
inc
cmc
ss
mov
imul
sbb
mov
jmp
mov
repnz
push
adc
fisubl
mov
xor
push
push
and
adc
jns
jae
and
xchg
orl
add
aam
adc
movsb
es
test
add
loop
add
movsb
adc
or
cmp
adc
es
jmp
add
dec
sbb
mov
add
or
add
mov
push
and
add
add
fwait
orl
and
adc
sbb
lret
pusha
pop
lahf
adc
mov
xchg
ljmp
clc
mov
or
scas
movsl
cmp
icebp
adc
mov
loop
push
lret
lods
mov
scas
std
out
adc
mov
notl
incb
ffree
adc
cmp
in
cmpl
fstl
loopne
mov
and
adc
dec
aaa
cs
mov
mov
pop
and
mov
and
sahf
orb
mov
xchg
lret
mov
mov
xor
fsubl
xor
mov
adc
shlb
inc
jl
xchg
sbb
test
mov
jmp
add
popa
xor
add
cmc
sbb
inc
and
sub
sbb
push
mov
test
scas
and
jns
addl
andl
add
mov
rclb
sbb
add
shll
dec
xchg
sub
push
clc
int3
inc
sbb
in
orb
lret
or
inc
xor
mov
jge
xor
enter
or
bound
scas
push
inc
xchg
dec
shlb
repnz
aam
stos
je
inc
mov
mov
test
sbb
inc
js
pusha
stc
testl
lock
xor
adc
sub
imul
hlt
xor
jmp
and
ja
scas
jbe
out
or
inc
xor
loope
dec
in
lds
push
sbb
sbb
fadds
je
aad
mov
repnz
jnp
cmp
lret
add
adc
fnstenv
push
cmp
xor
pop
xor
lahf
jns
mov
lahf
jnp
mov
lahf
mov
out
dec
cmpsl
out
dec
movsb
out
dec
movsl
shll
stc
pop
push
test
gs
test
icebp
fstl
jle
insb
mov
jle
insb
sar
outsb
ret
cmp
push
push
aam
or
sbb
sbb
push
push
adc
inc
push
ret
stc
inc
push
sar
push
stc
pop
ljmp
cld
popa
out
jo
jae
cld
dec
out
push
cld
dec
out
add
dec
out
cmp
dec
out
pop
cld
inc
out
or
cld
inc
out
sbb
inc
out
paddb
adc
pop
out
inc
cld
pop
out
dec
cld
pop
out
push
cld
push
out
pop
cld
push
out
outsl
cld
push
out
jno
push
out
arpl
push
aad
sbb
jne
and
cld
and
xor
adc
adc
insl
outsb
jl
loope
movb
jecxz
movsb
push
sbb
lcall
imul
lcall
lock
and
icebp
and
add
xor
mov
in
inc
loope
stos
cmp
cltd
adc
jl
lret
outsb
mov
cli
ss
test
cmp
mov
adc
imul
dec
dec
mov
inc
cmp
xchg
imul
adc
outsb
jl
rol
push
mov
push
xor
movl
lock
ljmp
dec
and
mov
jnp
add
jl
xchg
xchg
xor
cmp
sub
xlat
mov
sub
mov
cmpsb
ds
sub
ds
test
push
sub
jle
sub
jmp
mov
jecxz
dec
mov
jecxz
dec
mov
jecxz
dec
mov
jecxz
dec
mov
jecxz
dec
cmpsl
jecxz
dec
movsb
jecxz
dec
movsl
jecxz
dec
stos
jecxz
dec
stos
jecxz
dec
test
mov
test
jecxz
dec
scas
jecxz
dec
lods
out
and
jbe
insb
jmp
jecxz
icebp
out
icebp
pop
popf
enter
lret
sub
jle
sub
leave
push
lret
clc
lret
push
int3
push
sar
push
xbegin
iret
push
leave
clc
rclb
clc
rcll
clc
rclb
clc
rcll
clc
aam
lock
aad
idiv
push
hlt
clc
xlat
push
cli
clc
fcoms
clc
fsts
clc
ficoml
clc
fistl
clc
fcoml
clc
fstl
clc
ficoms
clc
fists
clc
rclb
mov
cmp
sub
adc
pop
pop
insb
sub
mov
sub
imul
imul
push
ds
ds
ds
ds
ds
sub
ds
sub
arpl
bound
jge,pt
xor
jl
xor
jg
xor
jle
xor
jns
xor
js
xor
jp,pt
aaa
jne,pt
cmp
je
cmp
ja
cmp
dec
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
ds
sub
aas
pop
sub
jle
xchg
cmpsb
push
inc
nop
adcb
stos
push
inc
nop
xchg
nop
scas
push
inc
nop
mov
nop
mov
dec
nop
mov
nop
jecxz
dec
and
icebp
lods
jecxz
push
xchg
loop
icebp
scas
jecxz
push
xchg
loopne
icebp
mov
mov
ljmp
into
loop
jecxz
push
mov
jge
outsb
mov
stos
outsb
mov
dec
movsb
insl
mov
dec
cmpsb
outsb
mov
dec
cmp
movsb
jl
mov
test
dec
popf
outsb
ret
sbb
sarb
outsb
lds
jl
jmp
fdivrs
outsb
leave
inc
xchg
fdivrl
jecxz
adc
pop
cmp
pop
sub
rcrl
pop
pop
and
pop
push
icebp
aam
push
icebp
ficomps
pop
push
icebp
xlat
pop
and
out
and
fstps
ficompl
out
pop
and
icebp
fstpl
negb
les
cs
adc
rcll
icebp
mov
xor
icebp
mov
xor
icebp
mov
sahf
icebp
mov
adc
sbb
in
or
stos
aad
movl
push
pop
aad
pop
das
movl
and
pop
aad
les
and
pop
xchg
sbb
pop
aad
push
aad
push
aad
xchg
pop
mov
aad
push
aad
push
aad
adcb
add
mov
mov
mov
mov
mov
lret
mov
shll
jl
sarl
icebp
add
test
add
adc
lods
shll
js
shll
jl
shll
int
stos
jl
shrl
jl
shrl
jl
rcl
jl
rcl
jl
rcl
jl
rcl
jl
rcl
jl
rcl
jl
rcr
jl
rcr
jl
rcr
jl
rcr
jl
rcr
jl
rcr
jl
rcr
jl
rcr
jl
rol
jl
rol
jl
rol
mov
rol
mov
fcomps
fstps
loope
mov
icebp
jecxz
mov
outsb
in
cmpsb
icebp
out
repz
pop
adc
call
lret
adc
ljmp
and
inc
xchg
out
repnz
out
repnz
nop
lock
mov
push
mov
push
movl
push
mov
mov
push
mov
cmp
outsb
movsb
je
outsb
movsl
jl
outsb
cmpsb
jl
outsb
cmpsl
jl
outsb
test
push
outsb
test
jl
outsb
stos
jl
outsb
lods
jl
outsb
lods
jl
outsb
scas
jl
outsb
scas
jl
outsb
mov
add
sbb
int
mov
pop
xchg
rcrl
or
lds
stos
or
leave
pop
out
or
into
jg
iret
int3
aad
mov
fcmovb
das
xchg
fcmovnb
cs
movl
test
out
xchg
push
in
setae
sti
mov
lahf
std
xchg
dec
in
icebp
sbb
ss
imul
iret
aas
push
loop
adc
in
mov
or
or
jecxz
dec
clc
loopne
mov
clc
cmp
ficoms
lcall
cmp
cld
pop
mov
mov
loopne
jecxz
mov
mov
pop
sbb
out
mov
pop
icebp
xor
pop
icebp
sub
push
testl
mov
push
roll
or
add
adc
testb
add
popf
adc
pop
popf
adc
xchg
and
add
es
icebp
and
mov
pop
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jl
outsb
nop
and
or
sub
adc
xchg
aad
and
pop
shrl
pop
loope
jecxz
icebp
imul
icebp
fs
es
mov
popa
xchg
shll
icebp
lret
jecxz
icebp
scas
and
sbb
jl
sbb
jg
sbb
jle
sbb
xor
ds
pushf
lret
and
ror
je
ror
js
ror
jl
ror
jl
shl
dec
stos
lea
jecxz
mov
icebp
in
scas
icebp
out
shll
and
and
and
or
add
popf
in
into
sbb
out
jecxz
cwtl
lock
loopne
nop
dec
loope
pop
push
outsl
ljmp
inc
jl
icebp
inc
dec
ljmp
pop
call
sti
cmp
sub
sbb
in
nop
rcrl
rolb
inc
shrl
icebp
outsl
jecxz
fsubrl
inc
xor
inc
shrl
icebp
jcxz
icebp
popa
jecxz
loope
jecxz
in
loopne
jle
or
jnp
pop
add
fildl
jno
mov
and
repnz
shrl
lock
shll
negb
aad
negl
mov
pop
xlat
mov
pop
fdivs
sti
pop
fidivl
stc
pop
fdivl
lcall
fidivs
std
pop
loopne
loop
loope
jecxz
loop
loopne
jecxz
loope
in
out
in
out
out
in
out
in
call
mov
pop
ljmp
or
add
add
mov
add
pop
mov
pop
pop
mov
or
or
xchg
or
or
mov
iret
jecxz
mov
pavgw
jmp
adc
push
icebp
adc
sbb
adc
sbb
adc
jecxz
icebp
pop
jecxz
icebp
sbb
adc
sbb
pop
icebp
sbb
push
icebp
sbb
adc
sbb
adc
sbb
jecxz
icebp
pop
jecxz
icebp
and
insb
icebp
and
outsl
icebp
and
outsb
icebp
and
imul
jecxz
icebp
es
icebp
daa
jecxz
icebp
sub
fs
sub
addr16
sub
data16
sub
popa
icebp
sub
pusha
icebp
sub
jecxz
icebp
das
jecxz
icebp
xor
jl
xor
jg
xor
jle
xor
jns
xor
js
xor
jecxz
icebp
aaa
jecxz
icebp
cmp
je
cmp
ja
cmp
jae
jecxz,pt
icebp
aas
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
pop
jecxz
icebp
pop
mov
xor
push
loope
jmp
loope
jecxz
icebp
xor
jecxz
icebp
aaa
jecxz
icebp
cmp
add
cmp
pop
icebp
cmp
push
icebp
cmp
add
cmp
add
cmp
jecxz
icebp
aas
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
inc
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
dec
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
push
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pop
jecxz
icebp
pusha
jecxz
icebp
popa
jecxz
icebp
adc
add
js
mov
lock
and
ljmp
jb
and
push
repz
sbb
in
dec
xchg
loop
mov
cli
clc
ucomiss
ljmp
ljmp
inc
xchg
insl
mov
pop
icebp
js
pop
icebp
jg
pop
icebp
and
pop
icebp
xchg
pop
icebp
loop
icebp
mov
push
push
xchg
call
push
jmp
add
cwtl
jecxz
add
adc
push
lock
js
or
xor
cmpsl
mov
mov
inc
incl
lcall
pop
add
push
adc
addl
cs
mov
lods
xchg
push
dec
mov
push
and
push
push
sub
adc
mov
and
and
int
lods
sub
jae
sub
jno
das
in
js
add
jns
and
jb
and
and
add
ds
jb
cmp
and
cmp
es
and
adc
xor
mov
xor
sub
and
adc
mov
xor
and
in
xchg
outsb
mov
outsl
pusha
add
mov
inc
adc
fwait
arpl
ss
andl
push
mov
adc
cmp
sub
push
cmpl
outsl
ss
outsb
xorl
push
jbe
and
adc
mov
enter
mov
push
lret
pop
lret
inc
shlb
int3
jg
fisttps
and
ret
jl
adcl
xor
mov
roll
js
xchg
mov
in
mov
or
mov
and
and
add
adc
pop
inc
lret
mov
pop
adc
fbstp
les
push
ror
ror
les
jl
fimuls
or
or
push
mov
imul
cli
sahf
xorb
add
pop
and
loope
negl
jle
dec
daa
inc
cli
cli
int
fdivrl
cmpb
cld
hlt
loop
std
inc
test
rcrb
xchg
movl
pushl
pop
pop
pop
xchg
add
dec
popl
enter
stc
outsl
pop
lock
pop
push
jecxz
pop
push
xlat
inc
cmp
stos
fs
shrl
xchg
aas
xor
mov
adc
aam
jno
in
inc
sub
add
mov
cmpsb
mov
pop
cmp
cwtl
xor
aas
xor
sbb
dec
adc
add
push
mov
jmp
push
jbe
jb
xchg
outsl
xchg
mov
add
rcrl
push
mov
sub
imul
bound
pop
pop
mov
lods
cmc
pop
shll
xchg
std
mov
ja
pop
mov
sub
arpl
das
adc
mov
mov
fstpl
fstps
lcall
add
sub
fiadds
hlt
das
mov
xor
add
das
sub
cmp
inc
jnp
lahf
jl
dec
outsb
fmull
pushf
dec
xor
cmp
das
sub
jp
sub
cmp
or
mov
add
pop
adc
in
jnp
push
ljmp
and
repz
push
jb
xor
or
hlt
ret
adc
push
shll
or
add
push
mov
push
ret
scas
rorb
sbb
leave
bound
inc
mov
hlt
lcall
add
mov
and
or
fs
jl
sbb
dec
mov
mov
or
test
mov
fs
test
aaa
aam
pop
lcall
dec
push
sub
adc
push
pop
pushf
inc
leave
int3
push
lcall
cmp
in
inc
adc
adc
xlat
or
mov
sub
enter
and
and
into
mov
xchg
rolb
mov
lea
jg,pt
or
and
in
sbb
mov
sub
add
and
lods
cmp
mov
sbb
lods
pop
leave
cmp
mov
les
xor
call
push
inc
pop
clc
stos
jnp
aad
dec
add
ds
adc
xorb
mov
add
push
add
push
sarl
push
cld
enter
mov
or
mov
mov
cmc
aas
int3
xor
xor
icebp
sub
xor
inc
xor
sarl
loope
inc
icebp
jb
pop
xor
jp
push
sbb
outsb
les
or
in
inc
jae
rorl
lret
lret
das
dec
lea
xchg
lret
imul
pop
adc
pop
push
jo
sahf
add
inc
add
and
ret
inc
add
push
mov
jecxz
loop
jae
and
rcll
push
push
cmp
subb
mov
push
cmp
inc
bound
lahf
pcmpeqw
mov
int
outsl
into
add
test
xchg
hlt
mov
mov
lods
cmp
iret
les
push
cmp
mov
cmp
mov
je
adc
pop
mov
int
or
pop
aaa
pop
cwtl
test
jecxz
rcll
push
rorb
ret
pusha
or
sbb
aas
or
aas
out
and
adc
fs
mov
sbb
clc
push
mov
push
test
lahf
in
add
es
movsl
or
xor
mov
out
jge,pn
mov
leave
cmp
push
xchg
loope
aaa
fiadds
and
pop
popf
cmp
fimull
lods
push
mov
add
jb
mov
fstpt
mov
jb
stc
or
lret
mov
loope
push
insb
and
test
xchg
mov
jbe
inc
jp
push
and
mov
insl
and
punpckhbw
jmp
pop
in
hlt
mov
sub
test
adc
mov
cli
ljmp
in
fcmovnu
dec
inc
cmp
repnz
push
xor
dec
jecxz
jne
pop
push
cli
dec
aaa
pop
pop
and
dec
fisttps
sub
push
lea
adc
enter
mov
jge
imul
lock
ds
adc
in
cmpl
rcr
jl
clc
xor
scas
mov
dec
cmp
inc
jg
mov
push
loope
movsb
ficoms
mov
leave
sub
dec
add
jle
or
shll
add
call
arpl
cmp
fldenv
or
push
fs
prefetch
enter
push
add
push
dec
xor
repnz
mov
inc
push
lods
add
movsb
dec
scas
adc
jnp
hlt
les
roll
data16
in
jne
push
int
cwtl
push
mov
outsb
lods
das
fbld
jb
jecxz
adc
testl
fstpl
ds
pop
insb
repz
into
inc
push
stos
pop
lock
mov
shl
pop
mov
fdivp
pop
and
addr16
mov
fdivr
sbb
rolb
cmp
int
cmp
dec
aad
iret
lods
jecxz
je
call
les
push
jge
xchg
xor
loopne
je
in
cmpsl
imul
call
adc
fdivrs
inc
mov
dec
xorb
test
sub
or
sub
and
sbb
in
mov
pop
jl
adc
fisubrl
add
jge
lods
jne
out
mov
jge
hlt
push
add
xor
std
testl
jecxz
add
ret
pop
cmp
lcall
xor
sbbl
outsb
or
mov
push
add
and
mov
cmp
lods
pop
pop
sti
jge
stos
xor
adc
sub
cmp
inc
add
in
bnd
mov
sbb
and
push
loope
in
pusha
push
adc
repnz
cmpsl
sbb
popa
pusha
sub
into
and
adc
fcomi
sbb
add
cmp
and
outsl
adc
in
adcl
lcall
gs
or
mov
aad
add
mov
mov
inc
iret
je
mov
mov
add
sbb
xchg
adc
adc
add
or
sub
mov
mov
cltd
out
jp
mov
adc
push
stc
test
add
popf
and
and
push
mov
cmp
jecxz
das
mov
mov
xor
out
push
les
lret
cmpsb
xchg
cmp
inc
pop
xchg
ret
out
pop
cli
shl
cs
cmp
pop
lods
mov
insl
jb
adc
push
lds
pop
add
ja
dec
aas
jle
mov
lods
enter
inc
cmpsl
nop
xor
mov
add
adc
or
adc
pop
sub
and
aas
mov
lods
adc
xchg
daa
jns
dec
mov
into
ljmp
cmpsb
out
cmp
lods
aaa
sub
stc
jne
cli
sbb
jb
inc
sbb
test
mov
sbb
sbb
or
jns
aam
rorb
js
mul
pop
mov
aad
pop
mov
xchg
add
mov
mov
mov
addl
add
out
addl
popa
lods
inc
cltd
jle
cmp
pop
adc
mov
imul
mov
mov
sarb
idiv
push
pop
push
or
xchg
ret
push
sbb
int
inc
add
jne
sbb
arpl
jae
cmc
bound
lds
lcall
mov
xchg
fwait
leave
daa
in
call
pop
and
pushf
inc
loop
jmp
inc
aam
mov
mov
scas
and
clc
cmp
pushf
mov
fbstp
xchg
jne
lcall
dec
out
mov
loope
mov
and
mov
out
mov
jp
movsl
icebp
sub
and
shl
xchg
pushf
stc
jno
sbb
fsubs
popa
cmp
pushf
pushf
push
or
lcall
jmp
mov
shll
sub
test
mov
cmp
pop
loop
adc
and
int
dec
insl
dec
jg
jnp
ljmp
lahf
sbb
cs
cltd
or
mov
mov
fmull
sti
fdivl
inc
inc
fldt
andl
arpl
inc
iret
jecxz
xchg
dec
das
faddl
test
mov
shll
mov
adc
xor
sbb
arpl
inc
mov
mov
movsb
pop
les
push
adc
cmp
dec
ljmp
jno
mov
cmc
push
call
lds
adc
sub
pop
in
fsubr
sbb
sub
xlat
aaa
pop
inc
push
lret
and
xchg
mov
arpl
sti
stc
adc
in
jg
sub
jno
mov
js
ljmp
jno
icebp
mov
orb
incb
and
mov
mov
adc
out
out
cwtl
fisubl
sbb
arpl
jg
push
and
xor
adc
out
repz
jg
or
pop
sbb
mov
daa
ret
mov
repnz
loope
cmp
cs
cmp
sbb
clc
mov
adcb
inc
xlat
das
les
test
adc
and
adc
shlb
or
mov
mov
mov
sub
cmp
cmp
push
add
add
imul
rcr
stos
sbb
test
inc
jns
int3
adc
adc
mov
mov
loope
or
xor
sti
data16
jecxz
jno
mov
xchg
push
ljmp
pop
mov
negb
inc
jle
outsb
les
add
cmp
cmpsb
test
sbbl
xchg
jle
adc
js
out
js
les
out
cld
sbb
arpl
sbb
lea
and
dec
test
mov
fcoms
cmpsb
lods
hlt
mov
adc
and
sbb
je
adc
push
jmp
and
xlat
aad
cld
mov
divb
cmp
and
push
inc
icebp
cli
mov
fisubs
movb
call
adc
gs
xor
dec
mov
mov
xchg
pshufw
jno
push
inc
int3
sbb
xlat
lret
add
fdiv
scas
add
adc
jae
pop
daa
les
arpl
push
jnp
adc
xchg
cmp
rcrl
xchg
jno
mov
fprem
ljmp
jno
mov
xor
je
jo
and
mov
fmull
inc
xchg
mov
sti
lds
fadd
sbb
arpl
push
inc
sub
aad
ffreep
xlat
adc
mov
or
mov
enter
push
xor
out
push
movb
ret
mov
mov
idivl
inc
adc
lds
sbb
arpl
add
pop
cltd
inc
and
or
add
mov
inc
adc
lcall
addl
mov
dec
std
cmp
and
pop
add
inc
mov
scas
inc
dec
mov
adc
in
xchg
adc
fwait
or
ss
incb
push
sub
adc
mov
and
nop
add
inc
les
sahf
xor
mov
mov
aas
xchg
sti
cld
inc
adc
dec
dec
int3
ss
and
cmpl
fcoml
or
pop
pusha
cmp
and
pop
pop
mov
aam
int3
mov
cli
das
sub
fwait
push
and
push
xchg
push
and
adc
mov
and
push
add
xchg
daa
pop
lods
inc
adc
dec
shrl
das
sbb
fwait
insl
dec
loope
adc
cwtl
subl
dec
push
mov
orb
and
cmp
mov
inc
shlb
adc
mov
mov
rcll
mov
jbe
xchg
ss
jg
sbbl
cmpsb
dec
pop
cmp
and
or
test
or
inc
xor
mov
dec
mov
and
in
xchg
cli
cmpsb
inc
adc
mov
inc
sbbl
js
mov
pusha
dec
cmp
and
roll
pushf
inc
mov
jno
mov
andb
xchg
add
lods
fwait
adc
ss
and
daa
cmp
pop
cmp
out
mov
add
mov
and
xchg
or
inc
xor
jp
push
clc
in
xchg
pop
xchg
inc
adc
xor
ss
lret
ficoml
and
adc
sub
cmp
and
movb
xchg
push
xor
xchg
mov
mov
xchg
jge
fildl
addr16
and
xor
add
pushf
and
adc
mov
mov
shlb
mov
out
xchg
and
add
xchg
xchg
pop
testl
mov
mov
and
adc
ss
and
push
adc
and
adc
cmp
and
mov
clc
inc
ret
xor
or
les
in
xchg
test
fwait
shll
movsl
sub
lea
push
dec
adc
mov
pop
mov
sub
loope
pop
xchg
bound
inc
inc
xor
test
push
xchg
jg
adc
fwait
cmp
xor
test
cld
andl
and
adc
mov
pop
mov
movsb
fisubl
add
xchg
push
pop
repz
jg
int
mov
dec
and
in
xchg
cmpsl
inc
adc
fwait
cmp
and
andl
mov
dec
inc
cmp
and
mov
pop
or
loopne
lahf
sub
pop
in
xchg
rorl
fwait
bound
ss
and
jns
dec
push
enter
dec
dec
cmp
and
sti
add
xchg
inc
pop
gs
xlat
xor
cs
push
xchg
cmpsb
inc
adc
fisttpll
ss
and
cmpl
and
adc
je
idivb
and
cwtl
add
adc
xchg
sbb
adc
jnp
xchg
pushf
inc
adc
fwait
push
dec
sub
jmp
mov
mov
mov
cmp
and
xor
sub
push
stc
test
and
in
xchg
imul
lds
add
lret
stos
push
push
xlat
lret
adc
mov
jno
hlt
add
pop
pop
lods
inc
jns
mov
sarb
xchg
popl
aas
dec
pop
ss
and
push
icebp
xor
adc
pop
dec
and
sbb
add
inc
mov
stc
mov
mov
xchg
sbb
outsb
and
andl
and
adc
mov
dec
push
cmp
and
call
adc
mov
out
mov
testb
inc
dec
mov
iret
mov
ret
mov
dec
dec
sahf
test
call
push
jg
and
adc
mov
and
xor
cmp
mov
mov
loope
or
filds
fwait
in
dec
repnz
and
adcl
imul
sbb
popa
and
jno
and
and
stos
mov
int3
and
in
xchg
xor
fwait
or
ss
and
push
rcll
mov
and
xchg
rcrb
js
dec
push
add
mov
mov
ja
or
fwait
js
mov
and
push
je
iret
adc
or
and
xchg
add
inc
scas
xor
xor
mov
xchg
xchg
sahf
cmove
dec
fwait
clc
dec
xor
sbb
and
xchg
adc
mov
dec
sub
and
or
mov
dec
xor
lds
movswl
and
repz
adc
fwait
push
add
out
gs
insb
inc
movsb
decb
pop
daa
rcl
add
fstps
lods
xor
dec
push
dec
rclb
lea
inc
testb
insl
add
out
xlat
mov
sub
mov
mov
push
adc
addr16
or
cwtl
call
in
shlb
das
lock
xchg
dec
inc
lods
add
add
adc
aas
mov
jmp
jg
inc
pop
cmpl
and
pop
add
les
mov
gs
jne
outsl
fwait
push
lea
imul
add
mov
dec
lods
sbb
mov
je
fists
adc
xchg
mov
andb
add
inc
jg
sbb
ja
dec
test
orl
xchg
pop
nop
call
jle
mov
imul
add
adc
dec
icebp
pop
push
cli
je
jmp
cmp
xchg
add
push
sbb
repnz
xchg
xchg
scas
adc
pop
call
sbb
cwtl
iret
jns
cmp
dec
pop
adc
gs
lock
aad
pop
mov
mov
cmpsb
push
daa
bound
repz
add
or
jne
cs
cmp
repz
pop
cld
sub
mov
test
add
add
push
lods
push
xchg
les
cmpsl
jno
lock
outsl
sbb
pop
jmp
scas
jmp
sahf
popa
jne
call
out
sub
sbb
lcall
gs
fcmovne
rcrl
inc
jmp
push
xchg
push
add
or
sub
decl
mov
dec
jb
push
sbb
cmp
test
sti
das
scas
sub
xchg
xor
push
and
inc
sarl
lods
and
mov
sbb
adc
mov
or
sarb
add
popa
pop
jno
mov
push
lods
add
or
mov
loopne
and
out
out
sbb
mov
push
mov
mov
mov
test
addr16
fldl
cltd
pusha
push
mov
add
add
lea
scas
inc
pop
lret
sub
mov
xor
lods
push
sub
xor
cld
sbb
in
into
lds
test
in
xchg
lods
add
push
test
mov
ss
push
das
clc
adcb
mov
xor
into
mov
pop
pop
xchg
lods
ja
dec
ret
mov
stos
cltd
cli
cmp
and
sti
add
mov
sub
inc
jge
ror
add
std
xchg
jecxz
mov
lods
or
or
sbb
test
mov
mov
sub
xor
push
push
orb
lods
insb
inc
ret
adc
inc
cmp
ret
pause
add
out
add
cmpl
aaa
adc
gs
sbb
cli
pushf
mov
stos
imul
pop
mov
in
xorl
add
loop
test
cmp
gs
in
add
mov
call
ss
outsl
lahf
arpl
add
rol
xor
or
mov
rcrb
mov
rorb
repnz
cmpsl
lods
mov
icebp
inc
xor
enter
inc
add
mov
pop
mov
push
out
nop
push
stos
add
notb
push
icebp
dec
shll
mov
add
dec
ljmp
call
or
cmp
adc
mov
push
add
mov
adc
dec
clc
cmp
stc
lock
mov
mov
fs
loope
mov
in
pushf
ljmp
aas
clc
loopne
into
mov
adc
aam
int
inc
idiv
lods
clc
pop
cmp
ret
lret
xchg
adc
les
xchg
ss
adc
sbb
cmp
push
sub
in
mov
mov
adc
fisubs
cmpsb
in
leave
adc
cmp
sub
sbb
rclb
cmp
and
xchg
push
cmp
and
mov
cld
inc
pushf
xor
loope
mov
in
xchg
mov
adc
xchg
dec
inc
fisubl
addb
imul
mov
iret
dec
data16
and
das
add
call
xor
cmp
mov
xchg
and
in
xchg
sub
fwait
add
movsl
and
mov
pop
push
pop
lock
adc
mov
and
or
pop
cmp
push
cmp
mov
cmpsl
mov
dec
mov
xchg
jp
xorl
lcall
cmp
and
add
inc
jecxz
sti
daa
sti
in
and
in
xchg
cmp
fwait
cmovs
sahf
and
andl
and
adc
mov
dec
mov
jmp
add
inc
adc
mov
jp
adc
fcoms
pop
rcrb
insl
in
out
rep
and
adc
mov
and
inc
add
xchg
insb
pop
incb
iret
movsb
test
or
in
xchg
call
repz
cmc
dec
adc
jl
add
mov
xchg
push
cmpsl
or
adc
mov
dec
gs
and
jno
flds
aam
jnp
mov
in
xchg
cmpsb
and
adc
and
notl
jecxz
int
mov
jmp
add
sbbl
pushl
xor
sahf
mov
in
xchg
adc
ss
and
cmpl
mov
mov
dec
jb
mov
pop
jno
jae
pushf
jo
jae
inc
mov
mov
pop
mov
adc
fwait
inc
pop
cmc
ss
iret
push
insl
xlat
mov
inc
cmp
and
mov
push
xchg
insl
pop
jne
pop
xor
pop
mov
xchg
xchg
enter
adc
jns
xchg
ss
loop
lods
dec
add
xor
adc
insl
dec
mov
jmp
add
pop
shl
scas
xor
or
imul
and
push
loop
and
adc
in
dec
loope
inc
and
inc
add
hlt
imul
xchg
adc
push
fwait
jmp
and
orl
and
adc
jmp
add
xchg
xchg
pop
aad
xchg
xor
or
out
jne
xchg
in
xchg
and
fwait
sbb
sub
dec
adcl
mov
mov
dec
es
and
roll
sub
pop
imul
mov
sbbb
and
push
fs
sub
dec
mov
jmp
add
inc
aas
xor
mov
mov
xchg
xchg
adc
fwait
jge
into
ss
mov
dec
add
xchg
inc
pop
fwait
inc
fwait
xor
and
mov
and
in
xchg
fmuls
fimull
divb
xorl
mov
and
in
add
inc
ljmp
leave
mov
notl
adc
aaa
dec
pusha
ss
and
sbb
pop
push
adc
aaa
dec
add
and
insb
add
cli
xor
daa
in
add
and
in
xchg
jbe
and
fwait
add
sub
cwtl
andl
push
mov
inc
mov
cmp
and
incl
mov
jmp
xor
mov
in
xchg
into
xor
fwait
sbb
ss
and
subl
push
or
and
adc
imul
jmp
add
inc
lcall
jns
frstor
in
xchg
add
cltd
fwait
cmpsb
pop
xorl
orl
divb
jb
and
iret
jne
dec
add
pop
push
inc
std
xor
xor
or
fwait
inc
and
cmp
adc
dec
adc
cmp
jns
icebp
add
sbb
mov
in
xchg
adc
fwait
mov
and
push
cltd
and
adc
mov
data16
and
mov
in
mov
jmp
pop
and
in
xchg
mov
mov
fwait
rorl
jo
cmp
lock
and
adc
mov
dec
cmc
cmp
and
add
cmp
shll
ret
jne
mov
mov
xchg
sbb
cltd
aam
mov
dec
mov
mov
dec
lahf
cmp
and
xchg
add
inc
das
xor
xchg
mov
pop
xchg
xchg
mov
push
xorl
mov
push
or
and
adc
mov
dec
clc
cmp
and
add
inc
ljmp
std
mov
das
xchg
push
mov
loop
xchg
orl
mov
cmp
and
je
movsl
scas
outsb
push
or
in
add
or
ss
inc
push
adc
push
sbb
leave
ja
inc
iret
imul
lcall
jns
fs
push
call
jge
jae
ja
insb
dec
jl
scas
inc
addr16
repz
sbb
jbe
lret
sub
dec
imul
push
mov
lods
pusha
movsb
xchg
xchg
adc
fwait
and
movsl
xor
movsb
test
push
and
cmp
mov
nop
add
in
xchg
sbb
ds
in
shrb
dec
push
add
repz
jecxz
ss
dec
in
test
xor
mov
sbb
push
pop
in
or
in
adc
data16
push
inc
loopne
repnz
mov
mov
arpl
xchg
repz
bsf
roll
adc
arpl
mov
jne
add
adc
dec
jo
loop
lock
push
mov
add
jmp
sub
adc
adc
push
or
adc
jle
rcr
adc
clc
clc
or
sbb
add
adc
or
std
mov
inc
xor
adc
xor
xor
mov
outsl
adcl
xchg
mov
mov
stos
adc
mov
add
or
adc
int3
sub
add
sbb
aam
sbb
sarl
jl
add
mov
xor
imul
ficoms
adc
ror
mov
mov
xchg
icebp
add
xlat
adc
cmp
and
adc
testl
jmp
inc
data16
lret
mov
movsb
mov
adc
sbb
mov
adc
xor
fs
xor
jp
add
pop
adc
loope
inc
fstps
add
sbb
jns
fidivl
mov
xor
sub
adc
mov
out
cmp
adc
pop
mov
enter
loopne
add
mov
add
pushf
add
ret
pushf
inc
mov
sahf
add
je
mov
adcl
xchg
rorb
adc
jp
sub
mov
adc
cmp
fadds
shlb
dec
xchg
enter
sbb
ret
fmul
mov
rclb
or
dec
mov
fisubs
movsb
in
xchg
leave
adcb
fldl
mov
mov
adc
popf
xchg
push
loope
adc
push
add
loope
movsb
prefetch
fs
sub
mov
mov
xor
and
in
xchg
adc
rol
pop
mov
test
fs
in
mov
int3
enter
mov
fcoms
and
cmp
mov
xor
ds
pusha
push
mov
enter
add
xchg
push
sub
insl
stos
outsb
xor
and
test
sbb
adc
repz
pop
mov
xor
jne
repnz
rorb
xchg
addr16
adc
mov
je
xchg
and
inc
mov
sbbl
pushf
push
push
cltd
add
inc
cmp
and
mov
adc
and
jae
add
imul
push
jo
pop
ss
repnz
pop
inc
mov
enter
loope
test
pop
fwait
mov
xchg
xor
clc
and
adc
mov
add
xchg
rcrl
movsb
jmp
fsts
adc
mov
je
jns
jae
popa
xchg
int3
shrb
push
mov
sbb
ja
adc
mov
loopne
jb
ja
test
mov
pop
dec
repz
test
dec
and
adc
mov
repnz
and
inc
pusha
rcrb
xor
imul
adc
andb
cmp
xchg
cmp
pop
ficoms
fsubr
jb
int3
mov
loope
popa
add
test
adc
mov
cmp
add
add
lock
scas
test
xor
mov
xchg
mov
dec
enter
mov
or
ss
mov
push
xor
pop
adcl
mov
ljmp
mov
dec
and
add
leave
scas
adc
jle
mov
jbe
add
fwait
sti
adc
and
adc
push
mov
clc
add
mov
jbe
inc
test
ljmp
inc
add
mov
jb
mov
lock
dec
xchg
cmp
jbe
dec
mov
add
enter
jge
ds
pop
mov
adc
adc
adc
or
stos
fwait
cld
sbb
add
int3
int3
in
shlb
aas
push
cmc
xchg
int3
iret
lcall
and
xor
fucom
add
lods
fisubrl
sarl
mov
int
add
movsb
andb
mov
add
or
andl
pop
mov
dec
inc
xchg
adc
adc
mov
mov
dec
adc
dec
xchg
inc
clc
xor
and
push
mov
push
jmp
mov
mov
xchg
lods
adc
lods
dec
jne
shlb
js
shll
and
add
mov
jmp
aam
loopne
aad
das
fisubrl
xor
lret
or
ss
int3
mov
mov
and
add
xchg
or
inc
pop
xor
ret
mov
mov
sbb
push
movsb
xchg
xorb
in
pushf
inc
push
sbb
jecxz
insl
dec
jmp
jb
leave
ljmp
jmp
jb
xchg
inc
and
mov
dec
or
push
das
stc
sub
sub
je
jge
insb
movsl
cs
sub
loope
addr16
and
push
xchg
sbb
popa
lea
insb
test
ja
adc
sahf
adc
mov
sub
mov
jmp
ljmp
in
xor
or
test
pusha
popa
sub
call
jbe
jge
loopne
fsubrs
mov
ja
dec
push
shll
sbb
xor
test
and
xchg
popf
jne
sbb
fimull
push
jg
data16
cmp
lcall
arpl
cmp
inc
int
push
adc
xor
or
add
pop
nop
dec
out
aam
xchg
mov
mov
outsl
test
or
and
dec
ljmp
adc
and
jmp
jo
jae
int3
fistpl
jb
cwtl
jnp
xchg
and
iret
push
push
or
aaa
imul
or
and
fcomps
loopne
add
cmp
gs
fidivl
dec
adc
push
sub
inc
adc
jp
jo
mov
gs
ja
jae
pop
es
mov
sub
and
cmp
inc
and
out
cmp
aam
inc
pop
xchg
rorl
fdiv
pop
jbe
push
add
dec
sbb
dec
nop
movsl
in
int3
jne
dec
mov
mov
into
gs
mov
push
or
mov
lret
int
ja
xchg
in
enter
push
cltd
mov
inc
xchg
inc
cli
out
pop
cmpsl
pusha
lcall
jbe
inc
or
sub
xchg
mov
das
mov
out
push
dec
popf
inc
pushf
inc
mov
dec
je
cmp
add
sti
xchg
cs
add
shll
jl
mov
push
or
xor
jo
xor
pop
pop
or
push
lret
dec
and
inc
mov
dec
inc
loopne
cmp
fcmovbe
lods
enter
sbb
mov
scas
cmp
sub
cmp
sbb
add
push
mov
adc
pop
bound
pop
in
pop
inc
adc
inc
int
push
dec
int3
movsl
xor
mov
cld
push
cld
pusha
dec
add
xchg
iret
lret
pushf
jl
xchg
push
and
add
mov
sbb
test
cmp
sub
cmp
mov
mov
daa
pushf
lcall
test
and
mov
or
mov
daa
and
add
jno
sbb
ja
fistpll
popa
lea
sarb
outsb
inc
cmp
aas
movl
lcall
add
inc
in
push
pop
xchg
loope
stos
mov
or
movsb
mov
mov
aaa
xchg
xorb
lcall
dec
faddl
lock
das
je
and
jbe
lods
js
inc
shrl
dec
hlt
sub
lods
push
inc
push
icebp
push
bound
pop
pop
jb
push
cmp
mov
xor
jns
pop
lds
cmp
mov
sub
add
and
add
mov
mov
mov
jle
outsb
push
in
rcl
fnstsw
shrb
std
jae
jmp
mov
out
jmp
or
dec
in
push
adc
push
jne
int
cmp
movb
into
ror
rcl
aad
fcomps
xor
add
lea
jnp
xchg
jne
adc
shlb
ds
js
mov
es
pop
sbb
push
mov
shlb
cltd
jle
xchg
jle
or
jo
das
add
fbld
loopne
jno
nop
adc
fnstsw
mov
fbld
adcb
daa
xchg
add
lea
outsb
xchg
cli
and
icebp
sbb
mov
loop
lods
pop
adc
mov
or
inc
test
call
sbb
cmpsl
push
push
stos
test
inc
ljmp
inc
in
sbb
push
out
or
jmp
add
mov
dec
in
pop
sub
loop
dec
mov
xchg
popl
lahf
and
or
xor
aaa
jo
xchg
sub
in
jns
xor
or
sbb
xor
sub
inc
fwait
test
xchg
cmp
cmp
dec
dec
add
dec
dec
dec
ficompl
add
xlat
int
outsb
rcl
icebp
pop
ret
fcomp
jbe
or
hlt
int3
jmp
fistpll
loopne
mov
fsubs
xor
movsb
sarl
mov
or
adc
pop
mov
or
cwtl
sbb
mov
sbb
or
mov
sub
xchg
or
pushf
pusha
iret
jns
lods
mov
push
call
push
adc
sar
loopne
lds
cld
push
push
lock
pop
lock
pusha
in
shll
xchg
out
out
cmp
outsb
leave
jo
ljmp
fistl
cmpl
mov
xchg
add
cmp
fdivl
jg
int3
pop
fnstsw
insl
and
jne
cmc
int
pop
psraw
pop
push
clc
in
stc
movb
out
rol
lds
ret
jmp
cmp
xchg
add
xchg
sub
sbb
cmpl
xor
daa
pop
adc
xor
jbe
andb
pop
add
cld
js
roll
pushf
leave
ja
adc
add
push
lods
add
sbb
sbb
scas
mov
add
sbb
movsb
aas
push
movsl
test
adc
adc
push
decb
dec
lods
inc
pop
dec
lret
dec
pop
mov
dec
dec
pop
sub
call
push
cmp
dec
add
sbb
or
and
aad
cmp
mov
pop
push
push
or
cmp
test
adc
xchg
aas
add
xchg
sub
mov
leave
loop
push
outsb
lret
ss
jb
add
mov
mov
jg
arpl
outsl
rclb
xor
arpl
jno
push
jle
or
push
dec
cli
gs
rcl
insl
push
ret
lahf
sbb
andb
mov
pop
pop
adc
pop
lcall
dec
cld
inc
add
push
aad
roll
jae
in
ret
push
cmpsb
jno
in
je
and
sbb
insl
xlat
insb
les
loop
cltd
cmp
and
mov
sub
ds
mov
inc
xchg
mov
or
push
lods
add
sbb
add
pop
stos
call
pop
rep
lods
sbb
mov
add
dec
jecxz
shrb
insl
jmp
inc
test
mov
mov
jb
push
jb
cmp
jmp
or
repnz
mov
pop
pop
int3
mov
mov
out
xchg
adc
loopne
in
lds
call
mov
fildll
jecxz
mov
inc
adc
fadd
cmp
sarl
dec
pop
leave
shrl
shr
cmpsb
mov
rorl
fwait
push
stos
add
test
in
xchg
fwait
xchg
das
xchg
add
cs
mov
sub
mov
test
mov
mov
sbb
jl
add
je
in
xchg
jno
lods
call
push
cltd
inc
adc
and
insb
inc
jb
push
data16
bound
add
jb
sarl
add
js
adc
jae
jmp
inc
nop
sbb
mov
pushf
cmpsb
push
orl
or
xor
das
je
cmp
out
adc
pop
and
xor
and
dec
inc
dec
mov
out
and
jb
fcoms
push
add
out
push
pop
pop
push
sub
dec
adc
mov
mov
dec
cmp
es
test
or
in
in
add
lahf
add
mov
add
dec
pop
push
ljmp
and
or
popa
bound
jb
fwait
lret
lahf
xor
test
stos
push
fldt
insl
fadd
test
sbb
arpl
mov
xchg
cmp
stos
ljmp
cmp
out
push
loop
call
pop
icebp
icebp
into
bt
shrb
repnz
lods
mov
mov
push
mov
or
mov
sub
jo
push
xor
or
mov
mov
repz
pop
push
pop
dec
and
addb
test
mov
popl
cmp
inc
pop
inc
fistps
lret
pop
ret
fs
fldenv
dec
rclb
jno
int3
jo
jo
push
in
in
out
inc
inc
xchg
pushf
orb
outsb
lods
daa
and
in
movsl
cmp
or
ja
in
out
dec
mov
sbb
mov
xor
lahf
mov
jle
xchg
or
xchg
test
mov
add
add
jne
jle
pusha
or
jbe
cmp
dec
inc
inc
inc
jge
inc
cmpsb
jnp
push
call
aam
es
adc
add
sub
sti
fs
aad
or
dec
mov
ret
lahf
subb
mov
mov
jecxz
fs
mov
stos
nop
xchg
mov
mov
jb
jno
xor
push
out
rcl
test
add
lods
or
sbb
inc
add
test
adc
daa
cmc
push
push
daa
cltd
and
and
cmp
in
mov
or
xchg
subl
scas
xchg
dec
xchg
pop
xchg
ss
into
nop
cmp
fldenv
mov
test
push
shll
pop
rcrb
lods
mov
mov
or
add
dec
pop
push
call
dec
pop
loopne
mov
cmc
cmpsb
insb
in
stc
iret
inc
cli
and
ss
test
adc
ret
ffreep
sbb
pop
dec
loop
pop
dec
mov
inc
add
jge
je
dec
jae
hlt
jl
jae
jae
mov
cwtl
in
es
or
inc
fwait
push
jno
jle
jbe
bound
xlat
sbb
scas
adc
jns
bound
cmp
mov
mov
adc
or
lea
outsl
ljmp
jl
leave
jb
inc
cmp
in
enter
pushf
cmpsl
inc
adc
lret
mov
sti
insl
mov
xchg
sbb
fcmovnu
ja
test
and
adc
and
mov
inc
repnz
add
hlt
push
cmovnp
sbb
mov
or
popa
je
fs
push
insb
mov
inc
in
sbb
lock
loope
push
mov
cwtl
xchg
lods
movsl
mov
sbb
mov
stos
daa
add
add
push
test
push
insb
inc
stc
push
add
inc
dec
add
push
ds
pop
inc
in
mov
fdivr
nop
inc
dec
cld
sbb
push
je
cmp
pusha
in
inc
pop
sbb
add
inc
cmpsl
dec
pop
cmp
pop
inc
call
in
add
mov
ja
adc
fldt
das
shlb
adc
jb
movsb
rolb
pusha
loopne
push
push
std
dec
add
inc
lret
adc
adc
cmpsb
sbb
insl
jle
xchg
gs
clc
dec
pop
push
sbb
push
inc
das
lods
cmp
xorl
adc
mov
lahf
movsb
mov
sub
stos
add
lods
shlb
lds
fsubl
sbb
push
rcr
in
xchg
mov
jge
add
sub
nop
mov
sbb
cmp
shlb
dec
std
dec
dec
push
pop
pop
push
mov
xlat
inc
xlat
mov
int
dec
add
adc
push
popa
lods
inc
jle
mov
xor
and
xchg
mov
mov
dec
xor
popf
scas
sub
add
mov
cmc
xchg
and
scas
dec
pop
ljmp
shll
icebp
push
mov
pop
int3
sti
dec
add
mov
adc
je
out
jmp
lods
inc
add
mov
sbb
or
sbb
scas
add
sbb
xchg
mov
mov
push
mov
pop
sub
in
sbb
test
pop
pop
pop
adc
push
js
pop
dec
push
jb
adc
into
dec
andb
push
sub
pop
loope
adc
xlat
imul
les
repnz
andb
or
sbb
ljmp
push
icebp
loope
xor
out
insb
lods
mov
or
and
cmp
cmp
sub
jo
stc
adc
jmp
jp
lock
push
popa
loopne
sbb
movsl
orl
inc
cli
mov
add
push
ret
aas
or
push
fsubrs
ljmp
jecxz
push
filds
stos
pop
hlt
cld
dec
ja
jmp
pushf
insl
pushf
mov
mov
cmp
push
pop
mov
lcall
adc
outsb
lock
jmp
fidivl
cmp
loope
mov
or
scas
xchg
in
pop
nop
cs
flds
addr16
xlat
xor
ror
jg
cltd
xchg
aaa
xchg
and
jne
addb
xor
fists
gs
lret
mov
sahf
pop
pusha
pop
rolb
xchg
pop
mov
sbb
std
loope
incb
mov
mov
out
or
pop
sbb
iret
xchg
jge
lock
inc
movsl
into
enter
shlb
aad
arpl
mov
imul
sahf
in
stos
icebp
cli
ljmp
jmp
testb
sbbb
stc
or
adc
sbb
and
sbb
dec
push
add
hlt
insb
aam
pop
or
or
ja
and
xchg
xor
sbb
xor
ret
xchg
sbb
mov
out
pop
lea
imul
cmp
xchg
push
pop
mov
daa
pop
mov
jns
mov
inc
inc
and
fisttpll
xor
pusha
jne
xchg
je
jg
sub
imul
leave
push
fmull
jnp
loopne
es
sub
gs
add
xchg
xchg
mov
out
cli
mov
mov
popf
or
xchg
sub
xor
jl
sarb
dec
inc
movsl
jne
addr16
stos
adc
scas
mov
sti
cmp
xchg
scas
lods
mov
add
cmp
cmp
xchg
or
icebp
jne
adc
addr16
jns
into
push
lret
ror
inc
jnp
xor
in
dec
push
inc
testl
sbb
sub
cwtl
loope
sbbl
repz
cld
scas
inc
push
loope
mov
mov
test
mov
adc
and
mov
scas
push
mov
push
fldcw
fisubl
cwtl
mul
lock
dec
xchg
add
pop
xchg
jno
pop
inc
xor
adc
imul
popa
add
push
mov
mov
outsb
test
fbld
push
cld
pop
jno
leave
pop
popa
test
and
mov
xlat
lret
fwait
jno
jmp
add
mov
jno
pusha
js
xor
push
add
mov
push
out
dec
jnp
push
push
inc
push
add
popa
mov
dec
push
inc
loop
pusha
jp
jno
sbb
sti
bound
les
mov
add
mov
push
ja
jge
dec
test
pop
or
push
notl
pop
int
add
cld
inc
adc
mulb
std
jecxz
repnz
push
cli
sti
in
insb
cs
jbe
loop
or
mov
bound
out
addr16
jp
test
cmp
dec
outsl
lret
loopne
imul
mov
es
inc
int3
adc
cld
fs
sbb
bound
ret
cs
jmp
or
push
push
pop
jmp
adc
jle
dec
jl
xor
adc
mov
sub
jne
mov
push
bound
jb
call
dec
inc
pop
out
jp
pop
stc
push
jecxz
mov
sbb
dec
fsubrs
imul
xor
jno
mov
sbb
jns
inc
adc
lods
stos
xchg
push
cmc
add
lret
mov
scas
xor
mov
jns
xchg
sub
fldcw
js
shlb
aam
xor
push
jns
insl
jl
mov
pop
inc
popf
clc
subl
scas
or
outsl
cmc
push
pop
adc
test
and
imul
gs
outsb
mov
lods
sub
push
jbe
adc
adc
add
addr16
pop
pop
mov
rcrb
sbb
push
adc
mov
out
cmc
ljmp
add
dec
fmul
shrb
fisubl
out
rorb
mov
mov
aam
iret
fldcw
ret
lods
inc
add
leave
jb
xlat
aam
popa
add
inc
movhps
loop
add
loope
shl
push
fldz
mov
call
roll
out
mov
jecxz
cld
inc
mov
xchg
scas
add
jp
test
add
rcll
popa
fildl
jo
ret
daa
stos
in
jg
jnp
mov
lret
xchg
add
cmp
idivb
movl
push
cmp
jae
cld
bound
rcll
js
xlat
jnp,pn
int
cmp
mov
mov
sti
ljmp
mov
test
lret
push
sarl
inc
push
or
and
cmp
adc
ret
jbe
pusha
movsl
xor
sub
jge
sbb
insb
push
inc
cli
add
mov
mov
dec
sbb
adc
ret
jg
clc
dec
or
lahf
add
stos
push
aad
fldl
dec
mov
push
mov
pop
mov
jb
adc
clts
pop
mov
dec
lahf
and
outsl
cmp
scas
sub
mov
popa
add
int3
cmp
lcall
in
xor
and
pop
inc
push
out
pop
pusha
pusha
inc
outsb
inc
leave
jb
push
adc
pop
xor
mov
rolb
pmaxub
ficompl
pushf
aam
insb
cld
in
inc
loop
notb
xor
out
out
lds
lret
popa
ret
jae
rcrb
into
dec
jnp
enter
or
pop
int
les
xchg
stos
mov
subb
sbb
cmp
lea
and
adc
mov
loop
mov
jnp
xchg
jle
fldenv
jp
mov
cmp
pop
push
mov
sbb
sub
adc
add
rdpmc
pop
push
and
sub
push
push
or
push
dec
cmp
bound
fwait
push
nop
addl
jne
stos
fildl
lret
scas
mov
mov
ror
adc
andb
xchg
pop
popf
idivl
adc
aad
jb
mov
mull
rcr
dec
sub
and
pop
adc
push
and
adc
add
int
test
xchg
jg
lea
adcl
xor
adc
sarl
cld
loope
cmp
inc
aas
test
cmp
cmp
pop
fs
aad
add
ds
sub
imul
in
mov
addr16
jle
data16
inc
fnsave
dec
adc
inc
shll
stos
les
jg
dec
mov
push
inc
fisttps
mov
xchg
aam
mov
ljmp
mov
test
mov
dec
xor
ss
repz
pop
out
movsb
imul
push
in
jge
push
out
cmp
and
negl
jbe
fcoms
mov
je
mov
test
aaa
in
std
dec
mov
fisttpll
inc
imul
jb
decb
stos
mov
call
mov
mov
negl
cmpsb
sub
inc
pop
add
pop
sahf
xor
mov
inc
in
adc
in
dec
fiadds
inc
dec
jae
outsl
les
mov
inc
inc
pop
outsw
cltd
lahf
scas
jns
stc
jp
xchg
out
pop
xor
into
cmp
cmpsb
push
jns
ret
pop
inc
shlb
sub
mov
add
inc
jne
addr16
icebp
push
dec
cmc
xchg
pop
in
int3
imul
shll
sbb
in
jae
push
test
dec
insl
out
insb
je
jno
cs
mov
fistl
ss
daa
xor
sahf
add
imul
sub
adc
je
pusha
jae
fcoms
jbe
aad
jp
pop
jb
inc
in
adc
out
push
inc
dec
ljmp
add
pop
push
push
cld
inc
push
dec
clc
inc
push
pop
lea
pop
testl
mov
jo
push
les
outsl
cmpsb
jg
hlt
les
mull
sbb
xchg
xchg
pop
dec
adc
sub
jmp
mov
or
xchg
and
cmp
xor
ss
fnstenv
idivb
lea
jg
mov
js
inc
add
aaa
movsb
dec
ja
jne
enter
mov
cmpsb
xchg
bound
arpl
nop
sar
fmuls
inc
outsl
dec
fisubl
mov
xor
adc
inc
fdivrs
jbe
cmp
imul
fwait
inc
in
shlb
adc
sbb
mov
or
js
aaa
jae
mov
push
addr16
sbb
lret
outsb
jg
bound
pop
inc
leave
into
jp
push
lret
aad
das
xchg
and
cmp
mov
addr16
jle
add
jnp
cs
cmp
sub
movsb
push
jo
andl
aaa
in
lods
push
sbbl
dec
cs
jno
push
pushf
mov
sti
inc
sub
test
jne
cmp
mov
testl
xchg
cmp
dec
bound
lcall
out
stos
cmp
addl
sbb
fsubl
outsl
sbb
dec
ds
mov
mov
dec
out
sarl
sbb
xchg
pop
xchg
xchg
in
loop
adc
pushf
std
xchg
mov
inc
jl
inc
xor
je
subb
lret
ficompl
xchg
inc
nop
mov
gs
mov
mov
int
pop
push
jo
fimuls
js
or
add
sahf
cmp
int3
pop
jg
adc
push
mov
into
xchg
mov
lret
jnp
adc
jo
ljmp
pop
pop
in
inc
inc
xor
fmuls
mov
mov
ficomps
movsb
cmpsl
adc
and
popa
arpl
inc
out
ret
push
mov
int3
xchg
imul
pop
cmp
icebp
push
cmp
and
xchg
stc
jno
push
call
inc
addr16
sbb
or
cmp
sbb
into
int3
ss
or
push
inc
add
insl
addr16
mov
cs
fidivl
xchg
push
insb
mov
call
bound
or
dec
sub
sub
push
stc
cmpb
movsl
pop
cwtl
mov
push
sbb
out
sub
out
push
add
call
addr16
or
ds
iret
xchg
adc
adc
ret
add
and
inc
enter
lret
inc
in
dec
inc
stc
inc
sbb
sbb
pop
into
adc
test
mov
inc
xor
dec
pusha
adc
les
sub
fs
cmp
jge
ljmp
xor
dec
sub
inc
or
ret
pop
inc
mov
mov
int3
push
je
ffree
lock
out
sub
sub
mov
jbe
push
fwait
push
xchg
xor
iret
cmp
and
and
jge
int
mov
xor
sub
cmpsb
adc
inc
aaa
pop
add
cmp
add
xor
fiadds
pop
mov
out
mov
cmp
cmp
into
push
mov
test
in
jecxz
push
test
adc
fs
xor
xchg
add
push
cli
cmp
cld
xchg
dec
sub
ret
or
dec
add
cltd
stc
adc
mov
inc
cld
lea
inc
lods
push
pop
fucomp
xor
fisubs
arpl
call
subb
bound
push
inc
add
inc
sub
pop
jl
out
sbb
movsb
push
clc
mov
call
lock
hlt
sahf
in
sbb
adc
sbb
cltd
inc
or
jbe
aam
push
cmp
mov
add
mov
test
and
lods
cli
cld
add
and
lcall
sub
dec
out
into
ret
and
xchg
inc
std
inc
pop
mov
test
mov
dec
mov
add
xor
adc
jl
cmp
mov
ret
js
mov
scas
jl
ljmp
or
das
mov
test
push
jle
insl
addr16
aaa
cmp
inc
cltd
xor
mov
call
in
imul
fisttps
or
sub
movsl
fld1
pushl
cmp
in
rolb
push
push
xor
xor
lea
push
mov
repnz
call
inc
cmp
lds
add
jb
popa
cmpsl
xchg
popf
mov
insl
push
mov
dec
mov
mov
mov
xchg
imul
mov
pop
popf
pusha
and
sub
mov
imul
bound
pop
mov
jns
leave
sar
stc
int
in
and
aad
sub
inc
mov
push
inc
les
mov
push
jle
movsl
pusha
imul
mov
sbb
cwtl
dec
sub
sub
je
das
aad
mov
flds
rclb
pushf
bound
cmp
xlat
jae
jb
test
push
adc
and
jo
int
adc
je
jae
sbb
mov
jae
and
sub
sahf
adc
mov
jo
mov
addr16
mov
mov
mov
jae
sub
mov
push
inc
and
xchg
push
loop
dec
inc
dec
adc
push
jle
or
sub
inc
mov
jo
push
scas
inc
out
push
xor
stc
jp
fs
gs
mov
and
mov
lds
sbb
fyl2x
data16
int3
push
jo
jnp
sbb
mov
xor
push
sbb
jg
mull
cmp
int3
scas
imul
mov
add
add
enter
xchg
mov
out
arpl
call
dec
xchg
sbb
orl
popl
inc
adc
cmp
clc
push
andl
and
add
xchg
dec
pop
loopne
jno
fsubs
mov
jne
and
push
aam
fnstsw
pop
sbb
test
das
cmp
mov
inc
das
jno
cmp
out
inc
jl
inc
xor
inc
insb
cmp
fs
popa
push
adc
adc
scas
leave
ljmp
roll
inc
adc
mov
les
orl
sub
popf
shll
mov
dec
push
in
push
add
sbb
imul
scas
inc
dec
repnz
and
les
gs
ja
sti
dec
push
xor
rolb
in
inc
dec
movsb
mov
dec
inc
orl
sbb
or
test
or
lahf
pusha
xor
movsb
xor
pop
arpl
xor
mov
mov
dec
cmp
add
mul
xor
vprotb
test
out
jge
cmp
or
insl
dec
mov
or
push
dec
sub
testl
pop
pop
stos
sub
pop
add
insl
mov
jne
adc
call
js
cltd
test
cld
xor
cmp
mov
pop
es
adc
gs
push
aam
ljmp
nop
je
sub
inc
addr16
push
cmp
pop
inc
pop
jb
jne
incl
fsts
mov
cli
aad
cmp
push
pusha
test
pusha
mov
inc
jecxz
call
cmp
lea
pop
lahf
sarb
ret
leave
and
add
out
adc
or
cli
daa
addl
add
push
je
lods
fs
in
push
xor
lret
jno
push
mov
repz
push
insb
push
pop
or
mov
ljmp
pop
xchg
xor
push
push
add
push
je
dec
or
in
jge
mov
cmp
or
push
fsubr
cli
in
sti
jp
cmp
cmpsb
jne
repz
movl
adc
inc
pshufw
pop
shll
cltd
into
shlb
fldenv
je
jmp
in
dec
mov
push
test
cltd
sbb
popa
mov
push
sbb
sbb
mov
sub
mov
test
cmpsl
adc
dec
outsl
sbb
les
fiaddl
daa
xor
pusha
sub
fisubrl
inc
mov
dec
cmp
enter
lret
lock
add
mov
add
or
xchg
mov
repz
lea
mov
pushl
sar
mov
cmp
jmp
test
add
sub
es
pop
and
adcl
inc
or
outsb
add
pusha
mov
loopne
sub
mov
aas
or
add
or
rcrl
lea
test
daa
pop
sub
and
pusha
jo
xor
push
mov
pop
mov
shlb
and
push
je
xor
inc
push
out
add
pop
test
rcll
push
jnp
or
dec
divl
sbbl
and
pop
cltd
inc
movsl
rorb
movsl
jle
insb
js
push
test
mov
and
cld
movsb
sbb
or
adc
imul
mov
push
cmp
lds
adc
jg
add
mov
fstps
shll
mov
gs
pushf
add
adc
push
aaa
loope
and
daa
or
push
add
inc
push
lods
lret
mov
sub
je
xchg
mov
xchg
add
sbbb
hlt
xchg
xlat
test
in
pop
mov
cmp
fcoml
lahf
call
pop
test
cmovl
xchg
loope
enter
arpl
cmp
int
add
mov
mov
call
mov
push
cmp
fdivr
and
lea
jmp
push
or
aam
stos
cltd
gs
and
sarb
sar
sub
int3
repz
or
xchg
std
and
sbb
ds
ret
lcall
adc
inc
test
mov
nop
or
pop
xchg
xchg
icebp
inc
or
lds
sbb
adc
loop
xchg
adc
xchg
mov
fcmovnu
mov
mov
iret
jecxz
mov
adc
inc
pop
push
inc
mov
xlat
adc
jecxz
lea
and
lods
push
cmp
mov
sub
test
jo
in
jnp
stos
pusha
jnp
loopne
xchg
or
sub
les
jge
clc
push
dec
insl
in
push
cld
outsb
sbb
cmpsl
fcoms
bound
lock
and
sbb
aas
stos
xor
xor
fwait
push
add
into
push
mov
stc
sub
ficomps
sbb
stc
dec
lret
cmp
mov
xor
jmp
nop
and
dec
rclb
dec
ss
pop
sbb
xor
add
in
mov
insb
adc
sbb
imul
xchg
xor
jp
popf
stos
lea
push
out
sub
pop
shrl
jg
sub
mov
push
out
push
iret
or
adc
xor
inc
test
sbb
push
mov
mov
cmpsb
or
push
pop
sbb
mov
inc
adc
shll
lock
mov
jg
movsl
in
enter
push
mov
cmp
sbb
and
outsb
cld
rorl
or
dec
cmp
subl
cmc
call
cs
xor
sbb
adc
add
sbb
push
or
mov
dec
je
mov
lea
pop
adc
mov
cltd
pop
sub
pop
subl
popf
pushf
add
pushl
je
out
sub
addb
adc
or
and
call
std
mov
pop
js
cmc
and
es
mov
inc
xchg
sbb
pop
inc
mov
mov
popa
jle
push
push
push
add
mov
inc
adc
addr16
cmp
and
xchg
push
adc
daa
inc
push
stos
incb
dec
sti
cltd
fadds
jp
and
dec
jmp
rorb
xorb
mov
push
fiadds
sub
push
int3
add
aaa
inc
test
addr16
imul
imull
int
and
cli
push
jne
fwait
and
pop
mov
arpl
mov
loopne
repz
pop
jo
mov
cli
mov
call
jmp
jnp
dec
mov
fistps
out
inc
jo
adcl
pop
add
incb
mov
decl
mov
nop
orb
test
addr16
jnp
leave
inc
jo
mov
mov
add
or
jnp,pn
fldenv
je
imul
out
add
lahf
sbb
xor
sub
andl
cld
aaa
ror
sarb
pop
adc
lods
sbb
pusha
cmpsl
pop
lods
add
cmp
push
cmp
rcl
pop
xor
push
je
push
int
cmp
mov
incb
or
roll
jecxz
sub
imul
int3
mov
mov
sahf
stos
mov
hlt
popa
mov
add
ret
cmp
aaa
and
mov
mov
lcall
jecxz
push
outsb
and
xchg
mov
dec
hlt
mov
std
jnp
jmp
adc
jno
rcll
stc
out
popf
sub
sub
fmuls
movsl
ret
xchg
fnstcw
movsb
movsl
and
mov
sub
call
inc
out
in
lahf
push
dec
mov
xor
pop
xchg
popf
inc
pop
dec
mov
add
mov
push
in
pop
cmpsl
imul
andb
adc
xor
pusha
or
inc
or
mov
push
into
stos
cli
sub
mov
sbb
mov
sbb
pop
push
push
out
leave
insb
das
lret
jmp
mov
sub
adc
or
cmp
push
sti
scas
and
cltd
repnz
in
fstpl
or
inc
jne
cmp
adc
add
xchg
call
mov
inc
insl
stos
push
jmp
or
jb
frstor
dec
adc
ds
iret
movl
cmpl
sbb
sub
lods
and
fwait
pop
inc
mov
popa
nop
mov
pop
and
sub
mov
int3
loop
push
xchg
cltd
inc
adc
bnd
enter
or
das
inc
or
les
or
adc
cli
jnp
out
and
sub
clc
push
sbbb
je
xchg
fldt
cwtl
scas
aas
loop
es
xchg
add
add
ljmp
add
adc
push
dec
in
pop
xchg
sbb
xor
sbb
add
lea
insl
jo
sahf
out
xchg
sbb
adc
push
sbb
cltd
leave
mov
inc
sub
dec
inc
aaa
inc
leave
mov
dec
clc
cltd
sti
outsl
mov
sbb
dec
xchg
push
jne
call
ret
inc
cmp
shl
push
adc
cld
push
popa
pop
or
lahf
adc
out
pop
popl
xchg
adc
subl
cmp
mov
and
gs
push
in
cmpsb
and
adc
es
mov
insl
les
sub
sbb
jge
rolb
fcomps
popl
inc
pop
fisttpl
nop
pop
sub
test
clc
jo
cmp
mov
cltd
sub
lods
pop
mov
lahf
sbb
subl
sbb
push
xlat
xchg
mov
inc
sub
inc
pop
ds
jns
cmp
xor
or
add
dec
push
mov
dec
xchg
pop
mov
push
inc
inc
mov
pop
test
xor
add
sbb
loope
fsubrp
icebp
adcb
pop
sbb
dec
fnstenv
bound
test
movd
ja
mov
lds
or
cmp
call
addr16
adc
dec
fs
lock
cmp
js
adc
nop
movsb
mov
loop
lds
pop
jl
and
icebp
jmp
mov
ret
repz
xor
jl
and
jnp
add
leave
and
xor
loop
push
notb
mov
add
enter
pop
or
into
call
mov
pushf
mov
dec
into
cltd
xor
mov
inc
aad
cmpl
push
mov
or
lock
inc
pop
sbbb
pop
jbe
popf
or
pop
adc
cmp
dec
pop
mov
xchg
repz
and
add
mov
psubw
inc
rcrl
and
adc
mov
add
ret
inc
mov
dec
outsb
xchg
jge
push
bound
rcll
repnz
mov
pop
sbb
xchg
iret
inc
mov
push
pop
inc
scas
fcomps
and
sti
jp
xor
lods
lcall
sbb
mov
loopne
lea
pop
adc
mov
dec
outsb
sbb
mov
jmp
lods
push
xchg
mov
and
jge
cmp
sub
pop
hlt
dec
psubsb
dec
cmp
adc
cli
inc
and
movsb
push
add
lods
stc
push
or
xor
cmp
jno
sbb
daa
sub
fcomi
es
movsl
cmp
push
lods
mov
mov
xchg
movsb
pop
int3
mov
mov
test
ds
leave
push
sub
push
jecxz
lods
xor
fdivs
je
push
arpl
dec
pusha
notb
dec
dec
les
inc
in
int
daa
cwtl
adc
mov
in
jbe
pop
pop
pop
in
movsb
lods
movsl
int
sbbl
mov
leave
in
sbb
stos
sbb
pop
test
jmp
in
imul
cmp
aaa
mov
stos
xchg
jp
mov
shlb
sbb
push
out
sarb
add
lods
ss
cmp
aam
fwait
xor
sbb
mov
sbb
push
push
adc
loop
mov
les
mov
push
mov
xchg
push
jecxz
lods
sub
push
mov
mov
xchg
and
xchg
fwait
sbb
je
push
xor
sbb
adc
mov
adc
in
add
popf
fnstsw
cmp
sbb
jno
fdivrl
xor
lcall
adc
cmpl
mov
fsub
out
insl
and
out
addr16
hlt
or
aaa
cld
pop
mov
push
in
mov
jbe
and
mov
ja
push
cmp
add
and
mov
dec
xchg
jmp
push
movl
neg
outsl
xor
adc
cld
cwtl
xor
add
jmp
loop
cmpsl
mov
cmp
adc
sbb
adc
xorb
mov
or
sarl
or
cwtl
mov
lea
in
or
push
js
pushf
insb
aad
and
out
mov
lock
inc
push
sar
and
jbe
inc
dec
jecxz
fs
dec
push
add
xor
das
jno
cmp
push
or
push
adc
xlat
and
data16
pop
sbb
mov
mov
xor
sbb
add
mov
lret
and
push
nop
push
aad
inc
sbb
or
inc
lret
xchg
inc
stos
fisubrs
add
cmpsb
aam
cmp
fcoms
cs
and
xor
jl
orl
xor
nop
hlt
popf
cmp
sub
arpl
pop
mov
sbb
test
dec
and
sub
adc
jbe
and
std
sbb
pushf
in
fwait
xchg
sub
add
mov
ja
cmpl
adc
xor
xchg
mov
sub
inc
mov
adc
inc
xor
fldt
data16
stos
and
mov
inc
cli
sahf
push
cmp
fsubr
movsl
ja
dec
out
push
call
imul
ret
xchg
and
in
adc
mov
loopne
push
repnz
popf
push
nop
push
cmp
jb
inc
add
or
push
jae
sub
adc
jecxz
je
sub
push
mov
sub
addr16
adc
or
push
mov
or
jge
into
push
and
inc
mov
jmp
es
mov
mov
jg
xor
jno
jmp
sbb
push
insl
mov
cmc
inc
or
inc
jne
or
pop
xchg
lods
les
and
or
jmp
int
mov
adc
sbb
xchg
adc
std
adc
inc
inc
or
ret
sub
stos
push
jp
ljmp
lds
cs
arpl
dec
adc
ja
xor
aam
les
sbb
sbb
xor
leave
jmp
xor
rolb
cwtl
andb
sub
insl
and
std
pop
jo
xor
xchg
or
xchg
sub
pop
je
xorb
decl
pop
cwtl
mov
pop
push
clc
add
inc
fcoms
and
push
arpl
lret
add
inc
inc
ljmp
ret
cmp
mov
loope
pop
sbb
frstor
loopne
mov
mov
sarl
daa
fiadds
jmp
mov
mov
add
movsl
adc
cmp
xor
inc
jne
cmp
add
test
or
lret
pusha
ret
fsts
hlt
dec
addr16
push
cld
jmp
xchg
loop
lea
mov
fisubl
pop
leave
fbstp
imull
xor
pop
and
xchg
hlt
shl
mov
add
and
inc
add
push
ficoms
ljmp
insl
mov
push
mov
movsl
cwtl
pop
sti
lock
lea
cmpsl
xor
add
popf
aad
mov
ficompl
in
push
call
xor
leave
cmp
and
mov
mov
push
bound
adc
jae
leavew
and
mov
lcall
and
popa
sbb
mov
in
insb
xchg
push
repnz
pushf
adc
hlt
out
push
xchg
adc
push
rcrb
pop
cmp
add
xor
imul
inc
fwait
mov
inc
loop
int3
mov
dec
ret
sbb
shll
pop
add
scas
mov
adc
jp
add
sbb
pop
pop
js
fldl
scas
das
jmp
loop
mov
shlb
xor
fbld
sbb
jp
mov
xor
das
imul
adc
push
mov
push
sub
sti
sbb
push
lcall
ljmp
mov
push
movsb
xor
adc
dec
add
adc
xchg
mov
fwait
adc
xor
imul
cmp
or
pop
call
xchg
mov
xchg
xchg
adc
xchg
popa
fistpl
xor
and
cmp
pushf
jb
xchg
inc
aam
shrb
jae
push
push
adcb
loopne
jno
int3
stos
sbb
pop
repz
dec
outsb
adc
lret
cmp
adc
and
push
xchg
and
les
cmp
jmp
sbb
add
leave
test
push
popf
jmp
dec
adc
sub
xor
jbe
pop
add
push
xchg
fildl
popf
jle
xor
dec
and
test
pop
lret
rcll
ret
hlt
icebp
and
xor
push
add
pushf
adc
pcmpeqd
adc
pop
jne
pop
mov
sbbl
mov
repnz
sti
inc
mov
push
mov
cmp
dec
and
jns
cmc
lds
scas
xorl
adc
adc
pop
cmpb
inc
test
lock
xchg
jmp
repz
into
mov
xchg
out
lret
fidivrl
add
popf
fwait
test
sti
ja
sahf
push
ret
push
inc
je
int3
mov
push
sub
xor
rcrl
jl
xor
mov
mov
xor
jbe
push
or
enter
jo
mov
ret
lods
push
or
sub
push
jmp
std
xor
mov
add
enter
movsl
fwait
lret
das
jl
add
iret
inc
sbb
repz
inc
clc
push
sti
and
push
mov
dec
add
addr16
fcomi
fs
mov
xchg
jmp
aam
push
cmpsb
cmp
and
int3
cmp
jge
mov
ret
stos
mov
out
and
sub
ja
std
xchg
push
mov
sub
jns
dec
sti
lds
addr16
insl
imul
push
sbb
inc
fidivrs
add
sbb
es
sub
fisttpll
or
fwait
fwait
dec
and
xor
and
sbb
push
jmp
ss
aad
and
sti
les
ret
aas
mov
and
aaa
mov
or
mov
and
scas
add
or
push
ja
xchg
mov
cli
hlt
arpl
jge
andb
inc
adc
jae
cmpb
add
mov
jmp
test
loopne
repz
inc
popf
rolb
xchg
fidivl
pop
rcll
inc
cmp
aad
xchg
mov
jp
mov
xor
mov
mov
data16
sbb
lock
rolb
inc
or
mov
add
xor
push
mov
adc
or
stos
add
insl
sub
leave
fld
enter
add
es
test
enter
je
jbe
mov
mov
rcrl
pop
cmpsl
out
pop
inc
sbb
and
mov
jno
dec
shlb
cwtl
int3
adc
adc
jmp
aam
add
mov
pusha
testb
cmp
mov
int
cld
mov
pop
or
mov
xlat
dec
xor
shl
push
push
adc
inc
addb
xchg
lret
dec
sub
or
or
mov
cmpsl
mov
mov
add
mov
add
add
lods
ds
daa
xchg
inc
and
bnd
mov
sbb
aaa
loope
dec
push
fcoms
inc
push
in
jecxz
stc
adc
mov
insb
inc
dec
push
outsb
repnz
or
mov
call
xchg
mov
std
or
mov
jl
out
xchg
ja
xchg
push
sbb
adc
test
cmp
push
xchg
outsl
sbb
movsb
and
mov
aam
pop
sub
mov
dec
push
or
sub
pop
push
lcall
dec
vpshld
sbb
lcall
inc
subb
daa
rorb
push
shl
sbb
or
xor
lret
add
mov
adc
pop
addr16
stos
ret
jge
jp
leave
push
mov
fsubl
push
sbb
jmp
mov
mov
mov
testb
sbb
lods
lcall
rcrl
add
hlt
mov
in
pop
pop
jl
mov
xchg
mov
and
cmp
bound
incb
out
and
aas
or
sbb
fwait
inc
dec
dec
adc
mov
out
cmp
sti
xor
mov
xor
imul
or
sbb
mov
stos
mov
dec
popf
std
enter
int3
incb
in
sbb
ret
sub
or
and
es
push
xrelease
xor
push
jmp
cwtl
aas
or
dec
sub
dec
clc
cmp
ret
loopne
push
xchg
enter
adc
lea
mov
xchg
jne
cmp
fimull
pop
push
sbbb
push
ret
mov
and
push
daa
add
jne
scas
sbb
ror
pop
out
mov
sbb
mov
cmp
push
cmpsb
and
data16
and
jg
and
in
xchg
and
push
std
scas
jecxz
test
mov
test
fsts
add
outsb
lods
icebp
fisubrl
add
cmp
movsb
inc
insb
add
fdivs
sub
adc
push
adc
xchg
test
xor
data16
xchg
push
adc
mov
pop
xchg
or
lea
popa
push
les
xchg
hlt
scas
or
inc
mov
and
and
sub
add
adc
std
hlt
cmp
call
xor
inc
add
inc
aaa
mov
inc
jno
jg
cmc
in
pop
xchg
inc
into
sbbl
adc
jbe
int3
lock
xchg
dec
adc
dec
mov
idivl
sub
jle
or
mov
mov
xor
jbe
or
inc
push
cli
movsb
addr16
scas
push
or
ret
fyl2xp1
cltd
dec
enter
popa
leave
idivb
jae,pt
cs
or
mov
jne
mov
jno
jns
xchg
adc
lret
hlt
cmp
sbb
cmp
in
adc
cwtd
push
adc
bound
in
hlt
and
add
mov
mulb
add
add
les
push
sarb
mov
cmc
jle
xlat
daa
fdivl
inc
and
ljmp
mov
adc
pushf
bnd
mov
and
lock
lret
sbb
jns
mov
lret
fadds
dec
or
ljmp
sbb
imul
dec
sub
loopne
push
loop
fdivrl
add
pop
pop
adc
adc
cmp
lea
nop
clc
xor
inc
mov
cmp
dec
arpl
in
add
clc
mov
cli
ljmp
into
mov
inc
aaa
in
dec
xor
lods
cwtl
fs
mov
dec
or
xor
inc
cltd
jmp
sbb
or
jg
xor
inc
in
aam
dec
shlb
mov
and
fsubl
insl
mov
jbe
divb
xchg
cmpsl
sahf
fnsave
or
pop
mov
mov
popa
outsl
and
call
int
inc
xor
adc
cmpsb
push
adc
out
xor
ret
push
push
mov
scas
aam
sub
hlt
cli
cmovo
repnz
and
push
incl
adc
jbe
or
fcomps
sub
lret
insb
cmp
sahf
mov
mov
sbb
cmp
xchg
push
add
fistpl
add
or
mov
pop
dec
and
sbb
gs
mov
std
or
out
mov
loop
xchg
dec
loopne
insb
repz
cmpsb
sbb
xor
push
add
inc
xchg
push
cmp
in
cmp
jne,pt
push
dec
push
pushf
xchg
push
mov
xchg
push
xor
and
cmpsl
add
out
jmp
fbld
push
add
mov
inc
xchg
call
in
mov
loop
push
push
int
mov
clc
in
dec
cli
mov
mov
imul
add
nop
jmp
inc
push
nop
nop
inc
incb
aaa
dec
add
pusha
push
sub
cmp
or
sbb
andb
jge
notb
pop
mov
dec
or
mov
cmc
xor
or
test
in
sub
in
push
mov
and
and
nop
cmpsl
stos
aad
aad
or
sbb
add
dec
mov
add
push
add
mov
mov
pop
pop
sahf
adc
mov
mov
ret
adc
test
out
adc
rclb
nop
stos
inc
xchg
je
jmp
mov
jle
xchg
sbb
dec
push
inc
xchg
pusha
or
test
mov
or
fwait
push
inc
shlb
test
push
mov
xor
scas
in
jb
out
cli
cmp
insl
jge
or
cmp
cld
xchg
mov
pop
test
sbb
push
push
sbb
clc
pop
add
cmp
ja
mov
jb
lea
mov
loope
xchg
or
cli
inc
clc
jg
cltd
adc
fdivp
cmp
xor
xchg
jae
mov
push
gs
scas
pop
pop
xorb
jbe
xor
hlt
cs
repnz
inc
cmp
lock
pusha
mov
inc
scas
cwtl
pop
scas
sti
xchg
sbb
or
adc
pop
popa
add
daa
or
sub
jae
pop
xchg
sbb
mov
addr16
fisubl
fisttps
add
addr16
sbb
dec
pop
mov
push
inc
xor
iret
add
push
shll
pop
andl
sbb
shld
jge
shlb
ficompl
push
es
cli
les
or
int3
stos
and
inc
ss
jge
sub
jb
jae
pop
lock
mov
je
and
pop
xchg
mov
je
mov
adc
push
adc
call
or
iret
jl
inc
leave
sub
bound
mov
xchg
fstpt
outsl
movsl
orl
inc
loop
cmp
lahf
xchg
jmp
jnp
add
or
insl
adc
pushf
and
mov
fwait
and
gs
pop
into
cmp
xor
gs
push
clc
gs
sbb
adc
lret
or
mov
mov
sbb
and
fstpt
pushf
jae
mov
adc
addr16
into
and
cmp
xor
dec
add
fimull
test
ret
out
nop
mov
jmp
shll
jae
add
sub
icebp
cmp
rcr
xor
pop
daa
les
lods
inc
push
outsl
pusha
in
data16
jo
mov
es
pop
inc
add
and
add
sahf
adcb
mov
sarb
mov
cld
cmpsl
js
jmp
add
fiadds
daa
mov
loopne
jnp
sbb
or
test
call
cmp
stos
loope
xorl
or
pop
mov
adc
push
jb
or
jne
ss
cmpsb
add
mov
pop
or
fstps
push
and
stc
push
addr16
je
xchg
adc
dec
movsl
adc
ds
jns
jmp
adc
call
cmp
push
push
test
idiv
cli
jbe
cmp
aad
loopne
pop
mov
ror
xor
aam
pop
loop
hlt
es
notb
xchg
scas
pusha
hlt
mov
push
scas
dec
jmp
jno
lea
mov
insl
add
arpl
sbb
or
cmpb
push
cmc
dec
or
stos
sub
call
inc
stos
dec
push
inc
jns
pop
jnp
or
dec
mov
popf
xor
jg
mov
adc
stos
je
xchg
or
mulb
adc
inc
test
pop
in
dec
xchg
mov
vpsrlq
push
and
mov
push
pop
pop
loopne
ror
push
es
or
xchg
dec
and
mov
dec
sbb
ds
aaa
jp
or
mov
xchg
nop
adc
mov
pop
push
movsb
xchg
imul
cmpsb
sub
leave
add
lret
movsb
leave
or
sbb
inc
cwtl
dec
out
mov
and
lcall
cwtl
xor
dec
cmp
push
push
shl
addl
jecxz
push
add
push
push
mulb
pop
add
pop
or
cmp
ds
sbb
sbb
sub
jmp
or
clc
mov
sub
fidivs
hlt
mov
inc
push
scas
and
mov
in
adc
adc
and
xchg
add
add
rcll
int
adc
fwait
cmp
js
es
xchg
inc
idivb
adc
pop
push
stos
mov
cmp
cmp
es
jbe
aaa
jmp
adc
or
add
test
fnsave
sbbl
mov
cmp
arpl
cmpsb
mov
decb
leave
jnp
loop
mov
arpl
outsb
repz
pop
aas
test
xor
add
imul
sbb
test
add
jge
call
add
dec
leave
jl
xchg
in
out
es
subb
sahf
sbbb
lret
stos
adc
lds
outsl
dec
nop
call
nop
push
xchg
push
jmp
cltd
ret
addr16
push
dec
mov
call
and
mov
or
or
push
xlat
adc
mov
ret
std
int
add
rorl
adc
incl
stos
call
pushl
push
out
fisubs
les
daa
in
test
push
and
and
add
movd
loopne
movsl
xchg
or
fdivp
xchg
hlt
cwtl
sub
stos
inc
inc
or
rclb
stos
pop
dec
fimull
cmc
cmc
push
maskmovq
divl
xchg
test
notl
mov
xor
xchg
and
push
mov
xor
sahf
aas
cwtl
lock
cmp
mov
dec
add
nop
ret
loop
nop
inc
xor
daa
loopne
mov
or
adc
xlat
xor
push
xlat
sub
push
mov
mov
xchg
mov
mov
add
xor
es
lret
lods
inc
adc
incl
loopne
adc
cmc
mov
push
addl
popa
pop
orl
dec
pop
dec
lock
adc
inc
addr16
out
cltd
push
loopne
mov
shrd
jns
rorb
imul
arpl
adc
cli
adcb
jecxz
xchg
push
je
xchg
negl
mov
lea
pushf
and
call
and
fildl
orl
or
sbb
lods
divl
test
add
and
adc
bound
call
adc
loopne
lea
shll
sub
xor
rol
pop
xchg
lea
cmp
insl
push
push
lock
ret
filds
mov
movsl
les
adc
xor
pop
sub
adc
ret
in
aaa
add
icebp
aam
mov
adc
add
sbb
lcall
test
cmp
adcl
out
add
or
sub
mov
mov
or
sbb
out
or
pop
hlt
inc
outsl
sbb
mov
decb
mov
add
sti
inc
call
sarb
mov
xor
into
ss
insl
test
mov
cmc
mov
in
pop
das
js
adc
addb
push
inc
cmp
mov
adc
pop
add
orb
lea
xor
and
fnstenv
xchg
leave
add
sbb
loope
stos
incb
inc
inc
sbb
or
mov
cli
mov
jno
scas
sbb
pop
add
pop
xchg
fidivl
ljmp
adcl
cmpsb
aam
loop
or
sub
xchg
pop
inc
pmuludq
fmulp
pop
xchg
cld
shlb
mov
div
xlat
or
lods
jmp
in
test
add
mov
loopne
xor
jl
pop
mov
xchg
mov
cmp
adc
mov
mov
or
ss
inc
mov
xor
icebp
movsb
add
jbe
daa
stos
mov
fistpll
bound
adc
popa
push
imul
fisttpl
enter
pop
jne
pop
test
stc
inc
nop
movsb
push
push
in
bound
sbb
jne
add
add
xor
xchg
cmp
xor
scas
mov
dec
adc
cmp
dec
push
mov
sub
pop
movsl
inc
cmpsb
leave
call
testb
mov
jle
jo
push
dec
and
inc
shrl
sub
adc
and
mov
xchg
dec
mov
mov
push
cmp
lcall
push
lahf
or
cmp
fistl
addr16
dec
add
pop
repz
push
inc
pop
hlt
sub
dec
fcoms
shlb
fcmovnu
cmp
fimuls
mov
imul
icebp
insb
mov
or
les
fcoms
fwait
push
and
add
sub
pop
pushf
mov
pop
outsb
sub
fistpl
fwait
and
jmp
xor
adc
inc
sub
jge
add
and
loop
pop
or
xor
mov
pop
or
imul
xchg
pop
pop
mov
test
cmp
and
mov
rclb
std
inc
popf
cli
orb
mov
decb
testl
mov
int
xchg
in
adc
and
sub
jbe
sbb
lods
pop
pop
fneni(8087
mov
loop
std
xchg
shrl
rcl
icebp
inc
jnp
mov
fst
int
mov
and
pop
adc
repz
or
xchg
lret
push
movsl
or
push
inc
sahf
cmp
mov
push
adc
mov
nop
push
xor
xchg
cld
cwtl
push
sub
push
or
push
shll
int
mov
shr
cmpsl
hlt
clc
lods
mov
fs
xor
leave
inc
xor
mov
call
and
ret
inc
adc
inc
jl
outsw
cmp
aaa
aaa
inc
mov
adc
mov
aaa
int
or
and
push
es
les
adc
adc
mov
or
adc
cmpsl
pop
repnz
cmpsl
mov
das
shll
mov
mov
xlat
mov
jecxz
das
cmpsl
xchg
xor
pop
dec
mov
mov
fidivrl
icebp
pop
or
mov
subl
ljmp
call
sbb
in
scas
fsubs
add
jl
ret
je
lods
call
sub
mov
dec
adc
and
jmp
addb
cmp
inc
ret
stc
and
mov
or
aad
loope
negl
fmuls
sbb
or
dec
hlt
ja
add
mov
stc
iret
push
int3
mov
aaa
lret
cmp
push
popa
and
lret
add
pop
cmpsb
rcl
sbb
sbb
cwtl
dec
lret
adc
xlat
sti
mov
sbb
mov
lahf
inc
mov
push
fmull
adc
push
fcmovu
inc
push
and
hlt
cmp
push
fsubrl
adc
or
push
pop
test
sahf
fbstp
dec
lret
and
loope
cli
leave
sub
and
inc
and
and
les
lea
push
xor
adc
lock
and
sbb
dec
pop
xlat
sub
inc
rorl
inc
dec
int3
adc
add
rclb
sbb
aaa
mov
jo
push
mov
sti
or
je
adc
sub
pop
add
scas
jbe
and
or
adc
mov
sbb
and
xor
std
stc
loopne
sbbb
jmp
test
or
insb
les
dec
cmp
rcrb
xor
dec
dec
mov
push
xlat
sub
push
add
jmp
out
xor
or
jle
xchg
push
sti
push
and
lcall
xor
lea
add
popf
in
fld
pushf
xor
in
push
cwtl
lret
cltd
xchg
loop
jmp
lret
mov
mov
sahf
leave
loopne
lea
mov
jg
jmp
mov
push
mov
mov
xor
popa
add
fsts
je
and
adc
int3
mov
cmp
or
push
loopne
inc
scas
sbb
cli
pusha
inc
ljmp
call
nop
psubb
cmp
rcl
or
push
sbb
inc
push
repz
add
push
loopne
nop
sub
push
dec
add
ds
pop
mov
pop
push
inc
push
dec
push
xor
das
int3
mov
js
and
and
stos
cmp
or
mov
addr16
push
xchg
mov
cld
add
and
out
aam
add
or
mov
cmp
dec
enter
dec
push
in
jp
scas
inc
rcrl
or
fwait
and
cmpsl
inc
cmp
cld
aas
cmp
jle
pop
add
inc
xchg
cli
scas
wbinvd
sbb
mov
xchg
sbb
push
inc
cmp
mov
inc
and
fiadds
shll
pop
mov
stc
adc
mov
mov
push
inc
sti
xor
pushf
lcall
and
cltd
sub
lds
cmp
mov
dec
inc
fs
adc
sbb
enter
outsl
sbb
pop
mov
cmp
pop
push
mov
pop
lods
push
in
ret
pcmpeqd
inc
rcl
scas
aas
add
xor
jnp
xor
lret
adc
push
repz
inc
and
mov
mov
aam
lods
xchg
test
lods
xor
cmp
push
call
jb
and
cmp
sub
and
pop
mov
adc
in
and
add
xor
ljmp
test
xchg
mov
decb
cmp
push
lock
hlt
mov
sbb
or
fs
ret
pop
dec
or
popa
sub
or
sbb
adc
mov
mov
mov
sbb
push
lock
lods
xchg
into
test
add
xchg
xchg
enter
and
bound
fcoml
pushf
jo
xchg
int
mov
xor
in
cld
js
push
jo
xor
dec
jns
sbb
adc
push
push
icebp
mov
aaa
add
andl
adcb
or
push
mov
movsl
mov
subl
or
mov
into
stc
sbb
negb
stos
aad
inc
mov
xor
sbbb
mov
mov
decl
movsb
ret
inc
adc
mov
test
push
jmp
push
fsubrl
mov
out
fadd
xor
cmp
adc
push
fsubs
ffree
fs
std
mov
stos
dec
rol
ss
mov
int
int
das
sbb
fdivs
adc
inc
push
lods
cmp
sbb
sti
inc
pusha
clc
pop
ja
loop
addr16
testb
mov
call
loopne
push
sti
mov
lds
sti
add
hlt
push
pop
adc
nopl
mov
cli
pop
mov
sub
sbb
mov
jae
pop
movsb
cmp
lret
jg
hlt
int
dec
xor
bound
gs
fs
mov
sbb
fcmovne
aas
xor
movsb
lret
adc
cli
jmp
sbb
sub
inc
jg
xor
adc
jno
mov
mov
loop
clc
add
mov
push
dec
jge
sub
loopne
ret
and
je
imul
add
mov
or
nop
call
daa
les
or
mov
mov
push
lods
mov
mov
or
xor
and
pop
rcrb
test
push
xchg
jns
out
aas
out
fildll
push
test
inc
das
xchg
jae
lea
mov
adc
hlt
sbbb
pop
mov
nop
adc
js
call
dec
clc
and
inc
mov
fstps
or
and
notb
jmp
pop
callw
or
xchg
int3
adc
xlat
jnp
add
mov
hlt
movsb
jmp
movsl
pop
mov
cli
and
mov
arpl
xor
mov
and
mov
jnp
or
or
or
pop
adc
inc
cmpsl
sbb
and
inc
cmpsb
pop
pop
xchg
pop
inc
imul
mov
xchg
fs
xor
pop
mov
icebp
cld
je
sarb
test
and
or
daa
insb
sub
in
inc
mov
sbb
stc
and
mov
pop
mov
push
sbb
lds
sbb
or
outsb
or
insl
sti
lret
mov
in
inc
es
adc
xchg
pop
lea
lret
int
and
add
fisubrl
jb
add
lds
jbe
shlb
inc
mov
test
add
adc
call
scas
mov
out
xchg
push
inc
mov
adc
dec
dec
jbe
loop
xchg
xor
and
pushf
adc
scas
xor
movsl
popf
addr16
cltd
das
fs
sar
and
fsubrs
addl
mov
enter
addl
sub
dec
mov
sub
stos
adc
decb
mov
cmpsl
cli
add
movsl
push
dec
je
xchg
sub
mov
sbb
mov
fs
lcall
mov
popa
jne
jbe
mov
push
or
rcrl
push
mov
push
xchg
xchg
or
mov
cli
adc
add
xchg
ss
test
mov
pop
enter
add
pop
sarb
call
jmp
xchg
push
push
in
xchg
and
or
mov
movl
call
jmp
or
enter
add
jb
andb
scas
sbb
gs
xchg
push
dec
adc
dec
xor
repnz
cltd
pushf
in
outsl
lcall
or
add
push
push
cmpl
inc
ljmp
pop
adc
scas
jno
mov
adc
test
xor
adc
adc
or
popa
call
sub
leave
inc
mov
pop
cmp
pop
add
test
adc
pop
adc
mov
pop
adc
sbb
repz
pop
xchg
mov
es
add
lods
cli
jb
push
xor
jae
mov
cli
mov
jbe
and
cmpsl
or
and
cmp
mov
out
or
mov
add
and
lahf
dec
insb
adc
idiv
int
lretw
inc
les
and
or
xchg
and
mov
scas
out
cmp
adc
cmpsl
adc
sub
push
scas
push
cwtl
jp
sti
dec
cltd
xor
shrb
cltd
jo
cld
push
and
das
insb
icebp
xchg
push
outsb
xchg
mov
pop
rcr
mov
call
lahf
inc
cmp
arpl
jo
pop
pushf
shlb
jnp
sub
icebp
xor
fimull
mov
imul
enter
test
mov
mov
cmp
xchg
inc
daa
out
jp
adc
mov
mov
xorb
lods
mov
sub
aaa
jbe
in
subb
push
xchg
dec
inc
pop
sbb
xchg
movsl
mov
inc
movsl
in
ret
mov
xor
lret
pushf
stc
adc
loopne
ljmp
xor
cmp
lahf
sub
xchg
test
inc
pop
jnp
inc
xor
mov
aas
adc
jg
enter
sub
sub
inc
mov
push
addl
mov
jne
xor
sub
cwtl
mov
pop
fwait
je
aad
and
pop
push
inc
lahf
add
mov
fs
les
push
adcl
push
lea
adc
pushf
mov
push
xchg
sub
xor
mov
bound
add
push
mov
or
adc
dec
jns
push
call
add
ljmp
adc
fs
jo
adc
jb
shl
sub
xchg
call
mov
loope
xor
imul
mov
sub
cld
push
add
adc
dec
add
inc
pop
xchg
inc
cs
stos
lea
mov
inc
loope
call
adc
cmpsb
sbb
xchg
js
pushf
into
sub
or
call
movsb
test
push
data16
push
lret
insl
mov
xor
and
rolb
divb
mov
subl
push
mov
inc
lods
ret
adc
jge
sbbb
popa
notl
aaa
mov
jne
sub
cmp
jne
cmpsl
mov
jmp
xor
sub
add
add
sub
push
or
add
es
es
mov
jnp
and
inc
jns
fcoml
dec
mov
xchg
dec
pop
add
pop
fsubp
cld
dec
and
or
jl
setp
mov
or
mov
push
inc
mov
add
push
movl
and
cwtl
xorb
addb
cli
ret
and
cmp
lds
je
dec
xchg
adc
xor
sub
sarb
in
add
cwtl
fdivs
je
ficomps
cmpsl
and
dec
push
dec
aas
shrb
sub
fnstcw
or
pop
fsub
das
cmp
push
setb
call
xchg
and
rclb
sbb
ss
push
fs
adcl
mov
es
push
cmp
addr16
xchg
push
inc
xchg
adc
adc
repz
inc
push
xchg
lea
push
adc
mov
mov
xor
add
leave
lcall
sbb
xor
add
dec
ret
in
rclb
pop
dec
adc
mov
adc
inc
push
hlt
and
adc
daa
fists
insl
andb
stos
jmp
or
cltd
popf
addr16
ss
daa
cltd
and
imul
or
testb
imul
sti
lods
xor
inc
subl
jbe
sbbb
cmp
jge
jmp
mov
mov
adc
or
clc
scas
adc
push
mov
lret
add
roll
imul
lahf
mov
std
das
out
push
dec
mov
test
mov
mov
scas
pop
push
add
testl
or
lret
inc
lahf
ret
and
incl
mov
jp
cmp
sub
add
push
pop
iret
dec
or
cs
xchg
js
fisubs
and
push
inc
pop
call
adcl
adc
cmp
inc
lcall
ljmp
dec
jnp
sub
xchg
pusha
adc
push
or
call
push
mov
pusha
test
and
pop
and
and
pop
xor
or
push
pushf
call
flds
xor
testl
sbb
xchg
sti
repnz
out
mov
fiadds
pop
inc
add
mov
ljmp
dec
pop
dec
add
inc
dec
test
je
pop
sbb
mov
insb
adc
xor
dec
jne
mov
js
dec
pop
and
sub
lret
in
dec
jno
mov
add
dec
test
arpl
adc
je
sub
fmuls
xchg
jmp
xchg
call
std
scas
rcrl
outsb
xchg
jne
mov
cmp
add
add
mov
pop
jne
ja
and
int
add
mov
cmp
sbb
inc
sub
sub
js
push
lock
xor
and
xor
pop
ret
pop
mov
sbb
cmp
sbb
inc
pop
cmp
push
inc
adc
add
and
int3
mov
xor
jb
data16
sahf
xchg
add
sti
repnz
push
addb
lea
mov
sub
adc
add
or
inc
ret
mov
add
addr16
xchg
sti
and
or
les
ror
lret
sbb
mov
jns
mov
push
cmp
inc
movsb
push
loopne
lods
std
or
inc
std
and
jmp
pop
jae
xor
xchg
sub
cmp
cmpsb
sub
leave
pop
popf
pop
insb
jbe
or
pop
adc
sbbb
dec
movsl
lret
pop
mov
xchg
jg
xchg
dec
pop
out
je
jb
loopne
lahf
adc
push
in
sub
jae
lds
xchg
jecxz
push
jp
xor
mov
jns
jg
xor
fists
cld
jge
nop
jecxz
lock
push
inc
call
addr16
test
mov
lahf
push
mul
and
push
cltd
inc
lds
data16
inc
cmpsb
xor
mov
int
fisttps
add
pop
add
or
push
cmp
dec
inc
sbbl
cmp
push
cli
call
xchg
addb
mov
sub
shll
or
bound
loope
shr
push
inc
cmp
fnstsw
mov
rorl
inc
push
xchg
cs
test
or
scas
stc
in
test
cmpl
xchg
add
inc
jne
mov
pushf
rcll
test
or
sbb
adc
sbb
push
sbbb
jae
dec
call
int3
mov
push
sub
call
or
xchg
or
mov
xorl
test
dec
cmp
sbbb
dec
in
outsb
mov
jg
adc
shll
inc
push
gs
mov
mov
adc
insl
push
outsb
fmuls
loopne
xlat
aas
andl
mov
daa
mov
xchg
ret
fidivrs
xor
je
ss
pop
insb
sub
movsl
cmpsb
jb
adc
cmp
add
jg
push
shlb
sbb
mov
inc
sub
sbb
sub
inc
xchg
xchg
add
push
xchg
jno
or
push
cwtl
push
mov
adc
dec
fsubs
paddq
mov
scas
fadds
sbb
sub
cmp
out
inc
pop
pop
xchg
pop
pop
sub
sti
mov
sbb
cmp
adc
inc
leave
cltd
push
push
and
cmp
pop
add
cmpsb
mov
roll
lret
cmp
out
gs
push
sub
sub
adc
dec
enter
and
pop
fucomip
dec
adc
imull
or
sbbl
inc
test
lahf
leave
frstor
filds
mov
call
popf
push
fwait
push
pop
testl
je
or
jmp
sbbb
or
mov
cli
xchg
hlt
push
fdiv
cld
shlb
pop
mov
test
xchg
pop
xor
imul
dec
cli
or
or
sub
call
jmp
in
std
push
iret
add
in
push
push
divb
cltd
inc
pusha
sbb
imul
sub
popa
cmp
push
adc
mov
pop
lods
or
push
mov
imul
nop
je
inc
dec
xor
lock
sbb
gs
add
popf
xor
call
addr16
testl
cmpsb
mov
sti
sub
mov
sti
xor
inc
test
sbb
js
pop
stos
push
dec
and
and
pop
add
sub
jne
jl
adc
or
das
fisubrl
mov
insl
push
popa
mov
push
xchg
or
testb
push
adc
mov
add
sbb
pushf
add
jecxz
lods
mov
cmc
dec
jle
jecxz
out
shrl
fidivrs
ds
push
cmpsl
addl
sbb
push
jne
cmp
mov
xor
pusha
out
cwtl
je
add
and
fimull
and
push
scas
mov
mov
lods
xor
inc
sbb
ret
and
imul
daa
dec
sahf
xchg
xor
cli
mov
and
and
inc
loop
ja
cld
xchg
xor
hlt
outsl
fiadds
sbb
ja
fstps
push
sub
shrb
fidivs
pop
jns
mov
sahf
and
dec
jns
jge
mov
or
addr16
shlb
xchg
push
and
xor
enter
popf
add
mov
call
leave
cltd
cwtl
inc
xor
inc
jae
in
sub
dec
add
sbb
inc
scas
mov
lret
inc
inc
pop
xchg
pop
fmull
incb
mov
push
mov
sbb
and
addr16
cmp
movsb
pop
inc
inc
pop
and
ds
jp
push
int
inc
subw
call
repnz
inc
das
sub
dec
call
cmc
ret
sbb
jg
cmp
push
inc
movsb
and
mov
xor
sarl
add
pop
pop
mov
adc
addb
mov
test
xchg
cmp
add
add
pop
es
lret
fistpll
xor
inc
sbb
xchg
push
mov
pop
pop
arpl
mov
or
addr16
sarb
insb
cmp
add
int
gs
cmp
outsl
dec
and
jb
scas
xchg
cmp
and
stc
shr
aaa
jb
rcrl
push
dec
scas
inc
inc
in
inc
dec
nop
xchg
mov
aam
test
inc
pop
imul
test
jecxz
add
and
cmp
in
sbb
shrb
lea
ret
lock
xor
js
sub
xlat
stc
mov
test
fwait
mov
mov
mov
cli
cmp
pop
jl
xor
mov
mov
addr16
rclb
xchg
clc
cli
in
sbb
lds
mov
cmp
movsb
mov
insl
inc
jae
add
and
rorl
popf
hlt
ret
ja
add
sbb
inc
dec
inc
jo
adc
mov
dec
inc
das
mov
or
shlb
sahf
push
int
aas
adcb
test
icebp
int
arpl
inc
jne
jb
gs
in
inc
ficomps
stc
mov
stc
jmp
leave
addl
or
scas
mov
test
inc
dec
cltd
add
and
rorl
mov
sbb
inc
gs
lods
sub
and
jbe
and
mov
data16
repz
in
jecxz
fistpll
daa
cmp
pushf
cmp
aad
mov
xchg
fldl
test
hlt
adc
orl
dec
addl
std
mov
aas
fcomps
inc
or
pop
push
int
jle
push
push
je
lea
jne
push
pop
fnstenv
cwtl
das
loope
gs
gs
cmp
cli
jmp
repnz
xlat
cmp
jmp
or
inc
mov
imul
mov
push
popf
imul
push
adc
icebp
lods
addr16
aad
pop
xor
gs
incb
sub
jne
jne
or
fnstcw
scas
push
popa
out
xor
and
cmp
ljmp
iret
dec
iret
and
inc
xor
loop
sar
test
stos
pusha
inc
xchg
sub
test
add
inc
or
add
jne
mov
incb
cmpsb
nop
and
cmpl
loope
inc
jecxz
and
pop
jae
cli
add
and
lret
push
mov
inc
nop
outsl
shll
push
xchg
mov
add
push
dec
cmp
loopne
call
mov
xchg
rcrl
call
lret
sub
ror
mov
pop
pop
cs
jmp
test
push
or
mov
nop
scas
add
insl
lods
dec
or
mov
lea
push
sbbb
push
hlt
leave
mov
xorb
jae
jle
sarb
cli
push
mov
jmp
scas
jmp
leave
xchg
mov
sarb
and
sbb
dec
push
in
popf
lret
adc
push
pop
adc
loop
mov
icebp
idivb
xchg
and
fldcw
repnz
clc
ja
push
mov
lds
inc
cmpsl
inc
scas
dec
js
cs
cs
and
test
in
jmp
sti
pop
shrb
je
cmpsl
lods
shll
cmp
push
mov
push
xor
add
mov
sub
jo
test
ret
test
pop
mov
testb
outsl
rcl
call
inc
inc
in
jb
adc
fadds
test
cmp
mov
mov
mov
mov
fidivs
and
mov
cmp
cmp
fisubrs
inc
js
xchg
daa
cld
lods
test
bound
dec
cld
scas
push
cs
adc
scas
mov
cmp
adc
pop
mov
lods
xor
pusha
repz
es
cmp
jno
cmpsl
adc
sub
stos
or
lea
dec
pop
repz
cmc
mov
roll
or
inc
in
dec
or
clc
addr16
filds
inc
out
dec
stos
and
idivb
insb
and
adc
addr16
movsb
mov
xchg
and
sarl
xchg
ja
cltd
mov
add
sub
ret
shll
arpl
ds
jns
je
jb
and
push
push
jae
xchg
fadds
out
sub
jmp
stc
and
clc
adc
adc
xchg
insl
cltd
lock
fwait
int3
or
and
pop
fistpl
popf
xchg
ja
lods
push
inc
cmp
movsl
imul
mov
xchg
lret
xor
pop
mov
fcmove
hlt
mov
movsb
mov
out
movsb
pop
jb
in
mov
out
cmp
sbb
and
cmc
dec
sub
std
repz
push
dec
adc
xchg
push
sub
mov
std
xchg
push
mov
rcl
fidivrl
push
movb
adc
popf
push
jmp
lods
mov
lcall
sbb
adc
inc
into
nop
test
fildll
aad
sub
sbb
pushf
rcll
cmp
jl
pop
and
push
add
in
push
cs
jne
sbb
jns
js
push
mov
adc
dec
loop
sbb
pushf
sub
mov
add
jae
ret
sub
and
fsubs
adc
xor
sub
jmp
loope
lcall
xchg
ficoml
adc
jno
cmp
lret
bound
adc
sub
jmp
stos
out
lret
dec
cmp
or
push
pushf
push
popf
jne
jb
cmp
xchg
dec
incb
fadds
cmp
push
inc
loope
sbbb
mov
xor
sbb
jp
adc
mov
daa
jecxz
dec
sbb
sub
sbb
test
xor
lea
xchg
push
cmp
adc
sub
cmp
ret
cltd
dec
out
repnz
adc
jbe
mov
sub
lods
outsb
lret
sub
jne
jae
scas
inc
test
subl
data16
sbb
adc
icebp
sub
mov
sbb
mov
push
pushf
adc
xor
inc
std
jnp
outsl
mov
enter
test
movsl
rcr
xor
ja
sub
add
mov
out
test
pop
inc
sbb
stos
pop
mov
orl
dec
or
mov
and
add
xchg
imul
mov
pop
dec
mov
jne
sub
add
into
imul
loope
and
or
shlb
add
ds
cli
jecxz
xor
mov
cwtl
sub
or
sbb
xor
fbstp
lcall
aas
scas
lods
leave
adc
das
xchg
incl
adc
xor
mov
add
iret
in
add
in
clc
sub
mov
xor
xorl
imul
xchg
mov
and
fistl
xchg
pop
sub
mov
sti
mov
int
clc
hlt
and
loopne
push
and
popf
adc
decl
daa
adc
adc
inc
adc
sbb
std
sbb
movsl
add
adc
arpl
nop
push
add
push
cmp
jno
sub
push
push
xor
les
icebp
add
and
ret
in
adc
gs
test
cmp
push
lcall
xchg
xor
mov
loopne
xchg
add
fwait
and
ficoml
xchg
imul
push
aam
jae
mov
cmp
enter
js
xchg
adc
pop
loope
adc
inc
push
push
sbb
pop
ja
lret
mov
add
cmpsb
push
sub
dec
mov
mov
xchg
pop
add
sub
or
adc
test
jp
push
aas
jae
adc
fxch
andl
jno
mov
and
outsb
xor
les
xchg
inc
inc
sti
sub
and
or
sub
and
xor
and
jecxz
insl
ror
call
cld
sub
add
sub
xor
inc
pushf
inc
gs
test
xchg
clc
divb
ret
pop
cmp
dec
or
mov
mov
sub
test
jmp
fistps
scas
pop
mov
lock
bnd
cmp
mov
out
rcr
outsb
adc
xlat
aaa
mov
out
xor
adc
mov
and
mov
mov
fs
mov
push
jne
std
fcoml
add
inc
and
movsb
and
lods
xchg
iret
jge
scas
js
mov
xchg
mov
in
push
std
xor
ljmp
cli
test
outsl
movsb
and
mov
mov
mov
add
test
repnz
sbb
popf
repnz
mov
sarl
mov
inc
or
jp
std
inc
jno
jbe
ljmp
or
pop
std
fwait
mov
cmpsl
sbb
inc
popa
test
sub
cmp
jno
adc
shrl
out
mov
scas
push
jne
pop
mov
imul
xchg
and
sbb
cli
and
add
aaa
fldl
and
push
dec
push
cmp
movsl
mov
sbb
push
sbb
aad
pusha
je
push
inc
std
mov
pop
ds
addr16
xchg
sub
sub
enter
jnp
test
mov
mov
clc
test
dec
add
jns
das
push
out
mov
add
push
sbb
xor
inc
int3
es
inc
sub
dec
push
aas
xor
cmpsl
cmp
call
mov
push
call
test
push
call
pop
push
and
xchg
mov
ret
inc
add
adc
jne
inc
lea
stos
repnz
jbe
adc
enter
jge
xchg
lea
add
push
inc
adc
stos
insl
mov
jo
idiv
aad
ret
dec
ja,pn
mov
stc
test
scas
icebp
cwtl
mov
mov
adcb
xchg
orb
mov
push
jge
daa
lds
rcr
test
lods
jecxz
and
mov
dec
mov
xor
xchg
dec
outsb
add
push
adcb
imul
and
dec
cmp
mov
push
mov
nop
clc
mov
add
sub
xor
inc
rcrb
mov
sbb
shlb
loope
add
mov
hlt
cmp
cs
pop
inc
and
cld
add
adc
and
js
xor
jns
call
adc
sub
inc
stc
lock
and
nop
push
sbb
fsubs
icebp
mov
push
aad
enter
adc
in
loop
xlat
cltd
push
pop
in
jecxz
and
nop
jge
sbb
ljmp
repnz
fwait
daa
sub
sub
mov
push
cmp
pushf
mov
fs
iret
add
jp
cmp
sbb
mov
xchg
ret
dec
mov
lahf
pushf
call
je
xchg
and
jp
or
sbb
inc
and
mov
add
mov
js
mov
and
dec
mov
mov
add
std
mov
mov
mov
and
push
push
or
cwtl
or
cltd
testl
adc
mov
sbb
add
pop
push
cli
lcall
or
or
inc
cmp
lods
je
test
mov
jns
inc
add
xchg
mov
repnz
insl
xor
cmp
aam
decb
add
add
add
adc
add
je
cmp
cltd
xor
and
mov
inc
dec
mov
pusha
jmp
adc
push
cmp
icebp
leave
push
fisttpll
mov
jl
data16
lret
lods
cmp
jns
sti
stos
stos
call
fimuls
xchg
pop
add
lret
pop
pop
jmp
push
inc
mov
stos
fildl
insl
or
and
loopne
imul
out
fbld
push
mulb
push
push
and
and
pop
jge
and
sbb
inc
and
inc
and
mov
pop
mov
mulb
int3
push
xchg
sub
mov
cld
std
rcll
add
in
xor
inc
or
pop
cltd
jns
lret
dec
lock
xchg
in
or
jns
or
adc
add
push
pop
dec
roll
sbb
xchg
mov
cmp
icebp
add
xchg
mov
sub
xchg
cmp
add
imul
or
mov
sub
inc
iret
dec
and
push
aas
push
add
cmp
mov
mov
sub
xor
jo
cwtl
jbe
in
xchg
rcll
sbb
lds
adc
jae
dec
shll
cli
lcall
lds
push
push
mov
add
hlt
inc
sub
add
arpl
mov
fbstp
mov
push
popf
adc
add
push
sbb
jecxz
xchg
mov
dec
cmp
cmp
or
sub
rorl
push
cmp
adc
cmp
inc
adcl
cmpsb
add
inc
and
pop
sbb
or
jb
add
insl
adc
inc
and
and
je
push
sub
outsl
jl
mov
dec
ds
and
sbb
mov
xchg
popa
cld
testl
jecxz
int3
imul
cmp
outsb
inc
or
jmp
or
xor
push
mov
inc
arpl
pop
adc
add
cmpsl
adc
and
mov
jp
movsb
clc
xor
lcall
mov
inc
and
sub
mov
sbb
and
mov
cli
dec
dec
out
ds
push
push
sahf
xor
sbb
mov
shlb
test
add
stc
adc
stc
sub
and
test
inc
dec
mov
mov
mov
xchg
and
xchg
iret
pushf
push
push
movsl
and
xor
jno
jmp
outsl
xor
mov
mov
cmp
sbb
repz
cld
out
push
and
mov
dec
call
cli
mov
ss
aas
xchg
mov
dec
cmpb
out
and
inc
sbb
in
pop
movaps
lock
pop
not
and
add
jle
gs
inc
incl
incl
or
pop
lds
push
ret
in
jl
push
dec
mov
stc
inc
mov
repz
mov
push
cmp
mov
mov
sbb
dec
jp
and
inc
inc
jnp
inc
aas
lahf
adc
or
test
xchg
test
and
xor
ja
data16
je
push
jmp
or
hlt
lahf
jbe
je
sub
add
ficoml
inc
xchg
test
in
add
leave
add
and
subb
adc
lahf
push
std
jmp
push
xlat
sub
mov
mov
pop
inc
cli
sub
and
jge
ret
jnp
mov
call
stc
or
xchg
or
push
adc
cmp
sub
push
mov
imul
jle
pop
les
push
pop
stc
inc
push
xor
roll
aas
jnp
stc
negb
cmp
addps
popf
push
mov
in
call
test
add
add
popa
sbb
add
aas
cmp
imul
and
xchg
les
out
cli
sub
mov
pop
dec
xchg
cli
mov
nop
sub
scas
inc
xchg
in
dec
aam
js
loop
sbb
sub
mov
clc
imul
rorb
jnp
mov
hlt
push
stos
sbb
or
fs
push
adcb
cli
pop
test
xchg
ffreep
mov
shl
imul
xchg
push
pop
mov
mov
jl
adc
inc
cmp
adc
xchg
fs
pop
pop
dec
mov
xchg
jge
sub
push
push
sbb
in
jp
adc
clc
jmp
fisttpl
popf
or
sub
daa
pop
idivl
loope
cmp
in
movsb
mov
cli
mov
lock
arpl
repz
scas
cmp
add
test
mov
rorb
fs
inc
sub
dec
cltd
subb
insl
pop
call
inc
dec
and
jo
out
int
imull
and
adc
das
pop
int
aas
in
xor
int3
mov
arpl
clc
jae
dec
mov
mov
jbe
nop
push
push
imull
jmp
pop
add
repnz
repz
cmp
mov
adc
mov
mov
add
in
mov
dec
iret
mov
jbe
in
dec
dec
scas
cld
popf
in
and
cli
repnz
in
loope
mov
xchg
lret
add
rep
sub
adc
fstl
sub
das
inc
fsubs
addr16
es
in
mov
xchg
sbb
aam
or
lcall
cltd
mov
xor
test
and
adc
mov
out
movl
dec
and
add
jne
cli
inc
and
xchg
sbb
aaa
in
lock
imul
mov
sbbl
into
or
jnp
xchg
add
jno
lock
fs
pusha
int3
scas
int3
pop
nop
pop
push
push
and
mov
lahf
out
dec
fnstenv
mov
cwtl
xor
icebp
adc
jge
xchg
imul
xchg
das
jl
cmp
imul
inc
jmp
popa
fs
push
decb
dec
push
jmp
in
xchg
outsb
inc
test
push
jbe
fstl
loopne
andb
add
add
mov
xor
jbe
cmpsb
adc
xor
pop
push
xchg
mov
sbbb
and
out
jge
xchg
orb
mov
imul
in
sahf
xor
mov
repnz
nop
adc
inc
fcmovnb
orl
call
jae
sbb
or
ljmp
push
ljmp
mov
add
movsl
push
inc
xchg
cmp
mov
xor
mov
gs
shlb
inc
repz
sti
dec
dec
cmp
shlb
addl
inc
outsl
sub
push
inc
dec
es
shll
std
aad
mov
cli
bound
sbb
mov
inc
push
xchg
xor
pop
dec
rclb
push
cltd
mov
push
push
scas
push
es
imul
pop
add
cmp
repnz
push
xchg
mov
ja
mov
inc
cmp
and
mov
or
bound
jecxz
cwtl
jbe
and
add
xor
movsl
fs
and
stos
movsl
faddp
inc
sbb
jns
jmp
js
push
aad
daa
dec
popa
sub
aam
lods
adc
add
sbb
mov
dec
push
mov
push
filds
faddl
mov
sbb
cmp
cmp
into
pop
xchg
imul
add
jge
push
ja
xchg
add
testl
sub
push
and
and
addr16
aad
mov
hlt
stc
pusha
mov
hlt
pop
push
imul
push
icebp
movsl
in
jno
xchg
arpl
sbb
rcrl
enter
sbb
push
push
lock
mov
rclb
mov
rcl
fistpl
xor
or
mov
sbb
jbe
inc
cwtl
dec
push
mov
add
sbb
aam
cmp
jp
sbb
sbb
sub
ret
shl
mov
xchg
xor
testb
cmp
sbb
push
movsb
xchg
pop
sub
subb
nop
jne
or
mov
pusha
clc
out
mov
mov
mov
xchg
and
add
fcoml
inc
add
inc
pop
fcomi
adc
push
add
push
and
sbb
lock
fisttpl
push
rcll
cs
jnp
shlb
mov
les
dec
xor
inc
inc
ss
adc
add
jg
pop
in
xchg
cmp
and
inc
jo
or
sbb
push
and
mov
adc
pop
sub
mov
cmp
add
inc
pop
jo
dec
cmp
fstpt
cli
xor
xor
ljmp
sub
jne
push
mov
push
lret
xor
jp
push
sbb
sub
mov
add
imul
pop
lcall
pop
mov
js
jmp
outsb
in
ljmp
push
mov
jo
adc
out
or
mov
pop
cmpsb
jae
outsl
add
leave
xlat
insl
jne
ljmp
scas
out
daa
icebp
stc
mov
call
cld
std
dec
dec
lcallw
adcl
mov
je
js
or
pop
das
pusha
in
jne
and
add
ljmp
test
pop
mov
jae
sub
sub
sub
dec
and
add
in
push
cmp
rol
push
cld
mov
adc
iret
inc
inc
dec
xor
fucomp
mov
imul
mov
scas
daa
faddp
sar
cmp
aas
enter
in
call
fidivrs
loopne
repz
addr16
jle
xchg
cld
in
repnz
sub
stos
jmp
xor
in
out
add
push
jmp
or
push
pop
mov
jmp
lea
pop
jo
xorb
sti
inc
mov
lahf
lea
jmp
sbb
add
cmp
test
inc
movb
pusha
in
out
lds
inc
ret
cmc
xchg
push
lret
sub
call
or
push
adc
jno
mov
cwtl
sbb
icebp
test
mulb
mov
addr16
ret
js
pop
mov
call
inc
jg
jae
pop
mov
adc
mov
push
pop
pop
xor
js
dec
add
or
sbb
lcall
lcall
xor
inc
xlat
subb
push
cmc
subb
insl
xor
insl
dec
adc
push
fwait
add
ficomps
mov
pop
rcll
jge
adc
pop
test
inc
cmpsl
dec
test
lods
dec
and
sub
jno
rclb
pusha
dec
sbb
nop
mov
daa
or
in
mov
ja
mov
test
sub
jmp
sub
and
push
test
add
mov
cli
call
pop
jnp
push
sub
divb
das
push
inc
pop
sti
stos
adc
test
stos
sbb
out
arpl
data16
jo
pop
inc
jecxz
mov
and
or
les
and
push
push
les
jb
jl
jbe
mov
lret
jmp
adc
dec
mov
mov
mov
jnp
and
xchg
or
xor
and
push
inc
dec
imul
out
mov
pop
and
lds
out
call
sbbl
pcmpeqb
jmp
clc
push
adc
push
xor
rcr
add
xchg
out
rorl
idivb
adc
dec
mov
pop
push
sbb
cmp
or
psrld
pop
mov
jne
mov
inc
cmp
popf
push
mov
push
mov
lcall
and
and
mov
adc
das
or
xchg
lcall
adc
fildl
and
sub
cmp
repz
cmp
aas
mov
rclb
lea
pop
adc
adc
push
inc
adc
or
and
and
icebp
jp
pop
cwtl
clc
imul
movsl
test
jle
subl
add
xchg
leave
dec
cld
rclb
repnz
sub
repz
hlt
inc
test
dec
cmp
inc
and
int3
mov
dec
jb
cmpsl
dec
je
insb
mov
sub
sbb
insb
or
xchg
inc
int
insl
pop
sub
fcoml
cli
mov
pop
pop
mov
jne
or
pop
lock
enter
or
testb
jle
insl
movsl
jno
jno
push
lahf
xor
repz
lea
in
out
lods
xor
jns
inc
mov
je
cmp
rcll
sub
hlt
xchg
lods
cmp
inc
dec
cmc
or
loope
fisttpl
sti
ret
mov
mov
mov
cmc
pop
iret
pop
enter
xchg
mov
cmp
or
inc
lcall
jnp,pt
or
sub
pop
test
jns
icebp
je
jle
out
dec
ss
dec
sub
and
mov
sub
add
sti
je
lret
inc
lds
xchg
mov
cmp
or
paddd
add
add
fildll
rorl
ret
push
roll
pop
jge
pop
xor
daa
sahf
pushf
cld
xor
lea
cmp
lods
push
imul
out
push
pusha
test
les
sbb
subl
push
les
jle
mov
popa
or
imul
lret
fcompl
mov
aam
imulb
inc
fisubrl
pop
adc
in
push
push
jg
inc
in
test
and
mov
sbb
std
popl
pop
mov
xor
ljmp
push
fwait
incl
ljmp
xor
jne
cwtl
aaa
dec
cld
lea
enter
xor
mov
daa
mov
lahf
mov
dec
cmp
fsubl
push
dec
sbb
test
mov
xor
aaa
repnz
jo
lret
mov
test
push
test
and
leave
das
mov
lock
adc
xor
idivb
les
out
test
addb
popa
aas
mov
push
mov
sahf
mov
fisubrs
pushf
or
fs
test
aad
jmp
out
push
inc
fimull
inc
js
xchg
inc
or
mov
mov
or
cmp
stc
mov
mov
clc
mov
test
jb
out
movsl
inc
arpl
pushf
scas
loop
popf
sub
mov
cmpsl
fs
push
sbb
jmp
mov
fadds
sahf
ljmp
jmp
lret
mov
xchg
mov
insb
inc
cmp
lcall
add
push
mov
scas
inc
sub
mov
and
inc
mov
adc
pop
je
decb
and
call
test
sahf
sti
jmp
stos
mov
xor
and
mov
es
dec
cmp
mov
js
xchg
jge
pop
push
popa
sbb
mov
les
xchg
popl
xor
idivb
push
insb
xor
xchg
adc
leave
stos
sub
mov
push
jmp
xlat
adc
nop
cmp
pop
scas
cmp
push
inc
fstps
bound
clc
orl
inc
shl
dec
cmp
dec
push
xchg
lcall
ficoml
mov
push
jnp
inc
add
mov
dec
pandn
insb
cs
push
jl
dec
out
jo
xor
sub
inc
xor
pop
or
subl
fdivrs
xor
xlat
andl
fneni(8087
mov
xor
push
jbe
std
stos
inc
lock
call
test
lea
test
push
fildl
inc
sbb
icebp
addr16
cmp
sub
add
jg
cmp
mov
jbe
mov
push
xchg
pop
cwtl
or
or
xchg
jb
sub
nop
fcmovu
adc
je
repz
std
dec
loopne
sbb
sbb
xor
addl
inc
shlb
sarl
mov
call
sarl
cmovns
fs
test
mov
mov
or
sub
sbb
push
mov
cmp
cwtl
mov
mov
mov
gs
and
xor
mov
call
test
sub
scas
call
mov
sub
enter
mov
and
fcoms
push
adc
int
xchg
mov
fdivs
lds
pusha
mov
adc
addr16
xchg
cwtl
fimuls
mov
mov
sub
mov
inc
xor
xchg
adc
jl
mov
jg
mov
nop
add
pop
fdivr
pop
pop
fstpl
mov
push
add
dec
and
pop
stos
adc
jmp
fs
and
cmp
mov
mov
and
lea
fsub
and
cli
out
cmc
jl
mov
mov
add
jge
adc
push
loop
movsb
xchg
pop
into
mov
fiadds
mov
mov
mov
les
movsb
cmp
and
mov
adc
xchg
cmp
call
loop
insb
cli
sub
pop
mov
jl,pn
lods
out
xor
cmp
stos
clc
or
ljmp
cltd
and
push
movsb
roll
add
iret
daa
sub
mov
dec
adc
push
ja
pop
in
shr
lds
gs
aas
jnp
std
pop
in
sbb
sub
mov
jae
or
push
xor
movsl
mov
decb
pop
daa
bound
stos
push
icebp
cs
jmp
fstp
jo
cmp
insb
sub
mov
pop
cmp
add
das
cli
ss
pop
dec
cwtl
test
call
loopne
mov
imulb
jnp
negb
aaa
addr16
pop
adc
cld
lcall
xor
pop
fsubrl
mov
lcall
dec
push
loopne
and
adc
lods
out
sub
sbb
fcompl
in
pop
cmp
inc
push
cld
push
es
pop
cmp
icebp
imul
pop
test
sbb
stc
clc
test
adc
jne
mov
and
adc
xchg
pop
lods
pop
or
mov
dec
in
arpl
push
mov
aas
cmp
jnp
xor
sub
adc
pop
loopne
sub
pop
pop
xor
mov
or
inc
popf
push
push
ret
shll
sub
out
push
add
dec
sub
dec
dec
xchg
mov
aaa
sbb
loop
rcll
out
mov
repnz
mov
pop
pop
fcomps
and
es
mov
nop
rclb
lahf
xchg
orl
imul
orb
aam
mov
pop
into
das
mov
hlt
loop
lock
in
mov
inc
aaa
lods
test
out
lea
mov
fcmove
outsb
cld
mov
jnp
repnz
or
dec
xor
push
pop
push
dec
jae
pop
xchg
push
dec
jmp
jmp
push
scas
addr16
inc
repnz
inc
mov
mov
scas
outsl
mov
imul
and
inc
push
jbe
sub
cld
add
or
bound
stos
cwtl
hlt
orl
aas
add
pop
loopne
and
incl
fstpl
adc
or
bound
fcmovu
add
dec
pop
cmp
sub
fimull
cmp
insb
pop
leave
fimull
in
sarl
mov
adc
mov
mov
push
sahf
inc
dec
mov
call
inc
into
lret
mov
imul
fisubs
cmpsb
inc
bound
sbb
add
and
mov
cmpsb
xchg
fcoml
pop
insb
or
or
subl
mov
inc
jns
or
data16
or
out
push
add
pop
cmpsb
cmp
stos
xchg
mov
and
mov
test
jbe
stos
mov
movsl
insl
sbb
rorl
and
stc
add
pop
inc
test
cs
pop
lock
rcrl
int
and
sbb
inc
inc
clc
cli
add
adc
jl
push
xchg
stos
je
lock
data16
fcmovbe
pop
cs
adc
push
aam
push
and
cmp
mov
or
aam
jo
dec
call
sub
lcall
xor
and
dec
adc
jne
in
sbb
adc
cmpsl
lret
cs
test
xchg
jle
shll
sbb
xor
addr16
pop
add
cmp
mov
mov
sub
add
mov
std
rcrl
push
popf
or
mov
dec
or
inc
inc
fs
outsl
sbb
in
lea
pop
lret
jle
add
adc
sbb
out
rcrb
int3
xor
sbb
lcall
pop
push
xchg
adc
push
inc
in
cli
push
dec
out
and
les
fwait
daa
cwtl
mov
pushf
sub
and
mov
xor
or
lahf
ja
push
aad
sbb
data16
pop
std
xor
xchg
jns
aad
les
test
popf
dec
loop
fmull
mov
dec
jl
rcr
test
cli
insl
shll
xor
xor
add
mov
pop
jp
pop
mov
sahf
jae
cmp
dec
mov
dec
scas
mov
cmpsl
mov
dec
sti
push
in
cli
jae
xchg
insb
lea
dec
fwait
mov
push
pop
xor
sub
in
std
add
gs
je
lds
ficoms
mov
mov
fcoml
pop
fs
push
insl
arpl
test
push
std
push
fs
leave
repnz
mov
push
fisttpll
daa
sbb
bound
mov
jns
push
loopne
fildl
mov
sub
xchg
cmp
mov
xchg
push
jne
pushf
and
sbb
js
inc
xor
xlat
nop
clc
mov
aaa
mov
jb
ljmp
jns
cmp
pop
movsb
mov
jns
mov
add
sbb
mov
mov
jne
push
outsl
in
in
out
mov
mov
lahf
and
mov
movsl
mov
xchg
fcomp
lret
sbb
mov
lods
subl
sbb
sbb
mov
out
mov
sub
bnd
or
and
insb
mov
mov
fsubs
xor
xor
xchg
or
fimuls
pop
push
outsl
dec
nop
sub
mov
in
fwait
xchg
jns
mov
dec
mov
pop
mov
lret
in
or
pop
lods
xchg
in
and
xchg
movsw
pop
push
imul
nop
add
push
lock
daa
push
ss
leave
fsubl
cld
xchg
pop
or
xor
mov
adc
jns
out
xchg
stos
xor
xchg
jne
or
ret
sbb
leave
sbb
dec
lahf
add
or
adc
rolb
mov
sbb
sbb
or
pop
cs
outsl
xchg
or
push
mov
xlat
icebp
dec
add
call
push
push
lret
push
sub
shll
es
push
push
xchg
bound
and
pop
and
outsl
mov
inc
adc
sarl
movsl
and
icebp
adc
push
xor
push
aaa
add
jb
and
dec
mov
inc
aad
sbb
mov
mov
or
xlat
aas
pop
or
pop
add
sbb
std
mulb
push
xor
es
push
cmp
jae
pop
jns
roll
aas
dec
or
stos
out
arpl
or
loopne
jle
outsb
repnz
cmp
ss
mov
jle
enter
jo
movsb
sbb
jo
jecxz
and
out
sub
adc
test
rcr
stos
xchg
test
cltd
iret
dec
andb
dec
cltd
lea
lock
cmpsb
push
push
jnp
imul
and
xchg
and
mov
jge
mov
or
lahf
push
jl
xor
es
mov
test
push
sbb
ja
repz
das
adc
xor
lock
cltd
push
repnz
sbb
pop
and
lds
ds
dec
fnclex
inc
clc
xchg
icebp
jecxz
loopne
rcll
pushf
mov
dec
inc
adc
fsts
sub
inc
xchg
imul
xchg
inc
dec
std
cli
xor
push
xchg
add
mov
push
push
jmp
rol
xchg
inc
mov
pop
mov
sbb
xchg
pop
les
enter
cmp
aaa
add
loopne
push
xchg
loopne
sub
push
test
movsb
fcomps
aad
daa
push
jbe
mov
or
xor
sbb
imul
in
push
mov
in
add
adc
push
clc
inc
mov
jecxz
mov
fwait
mov
xchg
xchg
push
sti
add
lea
sbb
push
imul
push
jbe
xor
lret
sbb
insl
mov
clc
repz
movsb
div
scas
cmp
filds
push
inc
ljmp
mov
out
push
jae
inc
jbe
outsl
jmp
out
xchg
pop
adc
sbb
xchg
inc
mov
pop
leave
imul
das
inc
inc
mov
dec
sub
lahf
dec
out
fcomps
adc
aad
cmp
dec
popa
jne
mov
test
test
mov
mov
jno
xor
dec
lods
mov
stos
mov
mov
in
xor
cmp
bound
fnstenv
inc
lahf
mov
xor
testb
push
xchg
lea
je
insl
push
mov
test
cmpb
int3
push
xor
mov
and
xchg
jns
filds
insb
lahf
shl
jecxz
cmpsb
add
lods
sbb
and
inc
xor
and
out
pushf
push
mov
cld
jg
shl
xchg
scas
push
xlat
outsb
adc
data16
adc
sub
mov
sub
aaa
je
jno
pop
xchg
sub
push
and
dec
push
shr
push
test
aas
inc
xchg
fimull
cmp
mov
jne
xor
insl
adc
mov
adc
inc
outsb
or
aas
xor
arpl
push
xor
xlat
sbb
xchg
lods
mov
or
ret
mov
cltd
push
mov
les
jp
jge
fmulp
xchg
testb
pop
or
jmp
jg
out
add
inc
mov
pop
xor
jp
xor
repnz
pop
pop
shll
lahf
cs
inc
fwait
cmp
sub
or
pop
jl
mov
adc
pop
dec
into
iret
mov
sbb
jmp
test
mov
adc
pop
push
test
add
fnstcw
adc
mov
frstor
sbb
push
das
js
push
xor
push
sahf
mov
and
jg
mov
cmp
pushf
pop
xor
mov
scas
daa
sbb
pop
pop
xor
jb
push
fs
add
cmp
ljmp
movsl
sbb
decl
lret
lea
into
data16
sub
xchg
push
pop
and
pop
stos
and
xlat
push
add
jne
rorl
sar
fstpl
stc
test
repnz
adc
outsb
je
cwtl
ror
cmpsl
xchg
or
adc
inc
movsl
aad
xchg
pop
mov
xchg
cmp
int3
imul
inc
inc
pop
sbb
out
nop
add
or
popf
add
shlb
push
mov
push
int3
push
scas
inc
and
push
and
mov
imull
jae
jge
popa
push
sub
fisubl
out
call
cmp
inc
push
aas
dec
inc
stos
les
add
lahf
cmp
out
cmc
cmp
test
xchg
std
ljmp
push
mov
mov
pop
loopne
or
jo
es
imull
cmpsl
aaa
and
and
imul
fistps
mov
stos
cmc
out
loop
in
inc
push
pop
inc
sub
dec
or
ret
mov
mov
lea
dec
push
lods
mov
fdivs
sub
adc
pop
sti
lahf
pop
lods
sub
push
jmp
stc
movsb
mov
xchg
dec
shrl
jg
sti
jnp
test
int3
das
out
std
inc
movsb
dec
movsb
add
add
test
mov
daa
and
jmp
stc
out
and
cmp
shrl
cmp
inc
sahf
jnp
jbe
repz
adc
out
adc
stos
and
adc
icebp
xchg
dec
aam
mov
test
test
pop
fsubrs
mov
push
rcrl
filds
cmp
jno
inc
movl
loop
mov
mov
jo
add
adc
xchg
mov
cmp
cmpsl
fs
in
incb
mov
ficoms
mov
sbb
and
jmp
push
hlt
ljmp
rolb
fwait
cmp
test
xor
dec
insl
test
rclb
ss
mov
movsb
cmp
xchg
test
aam
dec
fucomi
pusha
ret
enter
cmc
icebp
js
out
xchg
mov
fs
mov
jbe
rcll
mov
or
mov
test
push
dec
iret
pop
stos
ss
mov
jg
pop
in
cmp
and
ret
mov
adc
push
xchg
addr16
xchg
jmp
dec
loope
rcrl
gs
cmp
std
addr16
test
jb
adc
popf
mov
adc
in
fisubrs
in
mov
jne
sub
pusha
xchg
lahf
jmp
shll
enter
jmp
sub
mov
pop
push
xchg
adc
add
inc
inc
jmp
add
test
testl
ret
xor
mov
add
call
dec
and
aaa
sbb
js
sbb
je
stos
xchg
xchg
adc
or
mov
jno
stc
or
daa
les
fs
push
cmc
push
sub
xchg
movsl
sbb
shrl
xchg
imul
sbb
gs
test
mov
or
jne
bound
fwait
leave
jg
ljmp
js
pop
dec
sbb
inc
jg
sbb
add
and
adc
scas
lahf
inc
dec
sbb
dec
push
xchg
mov
lcall
pop
push
sub
and
faddl
testl
fmul
and
daa
or
push
mov
add
and
and
int3
xchg
jp
test
nop
jbe
pop
xor
jne
push
repz
fsubrs
add
xor
pop
fisttpll
lret
je
dec
iret
pop
ljmp
popa
sbb
loop
lods
call
pop
daa
xchg
xchg
cmc
outsl
xchg
mov
out
shlb
cs
and
movsl
xor
out
movsl
popf
jbe
sub
mul
cld
xchg
jbe
aam
addb
push
sub
and
jo
and
xchg
sbb
pop
xchg
push
cmp
mov
mov
adc
test
and
je
adc
mov
xchg
pop
add
mov
inc
hlt
mov
add
push
rolb
xchg
sub
adc
iret
mov
xor
sbb
stos
push
shll
xor
pop
lret
cmc
or
rcrb
mov
and
or
call
lods
scas
mov
in
adc
jg
push
scas
add
cmpsl
nop
xor
jno
imul
push
sbb
push
jb
je
xchg
mov
in
adc
push
pop
sub
push
and
sub
les
add
and
push
test
gs
mov
imul
and
lcall
fsubs
xor
add
lahf
mov
mov
jne
cmc
loopne
loopne
imul
inc
shll
jmp
test
sahf
imul
push
mov
cmp
rcrb
mov
add
pop
and
xchg
mov
outsl
lea
sbb
call
jae
cwtl
inc
mov
popf
add
bnd
sub
cmpsl
add
sub
jle
cmp
flds
mov
sub
mov
xchg
loope
rcrb
subb
mov
xor
lods
push
jnp
js
sbb
sub
push
jmp
sub
leave
out
int3
xorb
enter
cwtl
icebp
popl
or
jmp
mov
xor
aad
andb
popa
push
pop
aad
popa
jb
mov
cwtl
pop
call
loope
adc
cmp
mov
call
xchg
int
mov
xchg
das
out
dec
inc
xchg
jmp
ja
lea
adc
repz
inc
je
fs
cs
dec
daa
mov
pop
lea
enter
push
arpl
cli
push
sub
addr16
cld
pop
pop
and
std
dec
ror
xchg
stos
sbb
sbb
imul
aam
or
call
pop
adc
das
scas
in
adc
and
mov
inc
or
lret
sahf
in
fadd
xchg
out
push
cmp
mov
inc
mov
mov
mov
sbb
jle
cmp
adc
out
xchg
xchg
push
jmp
pop
push
scas
push
mov
mov
bndstx
cli
mov
cld
fs
sbb
xchg
or
xchg
pop
push
insb
sub
push
int3
call
dec
push
or
jns
js
adcl
test
adc
sti
es
stos
leave
aam
jae
test
fidivs
aam
inc
xchg
out
dec
or
mov
call
movsl
add
inc
push
subb
pop
leave
sbb
sbb
jmp
es
mov
pop
cmp
and
inc
call
into
loop
roll
loope
loop,pt
dec
sub
jno
sub
or
xchg
mov
or
mov
fdivrs
or
xchg
and
lea
repnz
ret
pushf
sbb
adc
jns
and
mov
xchg
mov
js
xchg
movsl
test
push
and
das
cli
xchg
repnz
lret
jmp
orl
push
cmp
test
testb
mov
dec
add
icebp
idivb
stos
dec
jbe
push
mov
push
pop
sti
push
out
das
pop
icebp
mov
imul
push
in
lret
sbb
out
nop
sub
je
inc
or
jne
nop
jecxz
in
xchg
add
xor
pop
cmpsb
aaa
rorb
dec
mov
inc
inc
cld
incb
fwait
jmp
sti
adc
popf
out
jge
add
stos
stc
xchg
pop
lods
cmp
jno
stc
repnz
enter
adc
inc
dec
xor
cmp
dec
fsubs
xorb
pop
fwait
test
out
std
xor
in
sbb
cli
out
xchg
cmpsb
loop
outsl
not
bsr
mov
hlt
pop
adc
inc
cmp
pop
cmc
inc
xchg
cmp
ljmp
in
pop
es
mov
mov
clc
inc
inc
push
outsb
add
lock
movl
lds
lds
xchg
ret
fildll
mov
or
je
sub
push
inc
dec
shll
xor
ficomps
les
rcl
and
push
cmp
imull
dec
test
push
xchg
loopne
push
dec
flds
xor
js
cmp
jmp
fiaddl
or
sub
xchg
mov
addr16
fstl
repz
xor
rcll
add
lret
jbe
sar
aas
inc
adc
xchg
mov
cmc
cwtl
les
mov
in
add
sub
mov
dec
movsl
mov
xchg
icebp
pushf
jecxz
adc
inc
dec
push
shrl
shlb
ret
push
jg
jecxz
add
push
sti
push
push
ds
ja
lock
ret
xchg
mov
loopne
out
jo
xor
shl
jmp
mov
mov
bound
adc
out
movsb
outsb
mov
js
dec
jge
adc
pusha
add
add
int3
in
divps
testl
call
stc
jle
imul
es
test
dec
and
pop
xor
imulb
xor
flds
jmp
and
sahf
sub
in
cld
daa
dec
les
into
mov
add
jno
push
pop
cmp
data16
and
add
sbb
std
or
pop
fsubl
popa
pop
imul
adc
push
sbb
fs
repz
mov
leave
movl
bound
in
out
lods
subl
fnop
jo
jnp
jbe
and
pop
xor
dec
push
sub
or
add
iret
push
loopne
js
push
adc
or
clc
loopne
mov
ljmp
popf
lea
mov
jecxz
in
sub
and
xchg
push
test
loopne
out
add
testb
out
ffreep
mov
or
bnd
mov
xor
cltd
adc
andl
mov
popa
ss
add
scas
ljmp
adc
mov
fnstenv
dec
and
push
or
mov
adc
lods
hlt
or
js
push
js
jo
repnz
stc
mov
jo
adc
jmp
cmpsl
mov
xor
inc
test
jb
repnz
ficompl
mov
inc
loope
adc
and
cmp
gs
shl
stos
inc
cmp
dec
in
add
and
out
pop
sbb
lcall
int3
cmc
jmp
sti
jns
dec
idiv
out
jmp
jns
jecxz
inc
cs
mov
mov
movsb
cmp
inc
push
and
stc
adc
jmp
dec
mov
addl
cli
sbb
sbb
jp
shl
sub
fsubrs
and
pushf
mov
insl
mov
dec
fnstcw
push
or
push
je
push
inc
add
stc
and
jbe
fwait
or
xor
inc
or
inc
or
mov
js
test
sub
rclb
push
mov
les
push
mov
or
mov
mov
xchg
inc
mov
mov
popf
or
ret
push
jno
or
dec
and
push
fsubl
cli
sahf
sub
sahf
inc
and
inc
mov
dec
mov
sarl
push
and
push
xchg
fsts
call
mov
lods
imul
clc
or
nop
repnz
inc
push
shrb
test
mov
or
call
or
sub
mov
lcall
or
jp
adc
hlt
or
jmp
mov
sbb
dec
lret
xor
in
push
iret
shll
or
mov
ja
xchg
stc
push
out
in
sub
out
and
pusha
xchg
stc
xchg
mul
mov
idiv
js
shl
movsl
xor
push
es
cli
sti
pop
cs
mov
mov
imul
scas
pop
out
pushf
daa
adc
jnp
add
push
daa
out
stos
cli
cld
and
push
or
fisubs
jae
or
mov
mov
shll
inc
push
repz
cmp
xchg
xchg
out
orb
mov
push
mov
sbb
add
lret
mov
pop
or
mov
jb
push
xchg
les
xchg
jns
mov
call
call
pop
xor
push
sti
inc
mov
insl
adc
sub
jae
add
shlb
movsl
xorl
jae
imul
adc
push
and
jp
out
inc
std
shrb
jne
popf
icebp
adc
jbe
sarb
in
int
mov
jg
add
inc
sub
ds
iret
adc
sub
pushf
sub
or
ret
mov
les
pop
sbb
jo
jl
into
and
repnz
cmp
sub
in
add
leave
push
adc
push
add
push
mov
idivl
mov
xchg
aad
mov
adc
add
mov
or
mov
fistl
aas
cltd
shrb
cmp
scas
loop
and
add
jne
add
cmp
repnz
cmc
aad
adcl
and
arpl
adc
adc
push
mov
mov
fimull
mov
push
push
pop
mov
pusha
push
xor
push
mov
inc
mov
ret
push
clc
xchg
push
mov
jns
sarl
and
test
dec
mov
xchg
subb
sub
sbb
cmpsb
mov
pop
lcall
enter
sbbl
les
insb
addr16
inc
sub
fstpt
adc
pushf
mov
push
push
cmpl
loopne
sub
cwtl
test
stos
pop
lock
aas
and
jmp
sbb
int
and
push
fs
ja
pop
mov
cs
dec
call
addr16
push
and
and
cmp
adc
xchg
or
add
lret
loop
add
adcb
mov
and
fisttpl
cmp
jae
add
sbb
sub
lock
pop
loopne
push
and
inc
push
nop
cltd
inc
dec
inc
adc
popf
inc
out
out
push
addr16
jno
xchg
xchg
cmpsb
mov
lea
sbb
out
leave
or
mov
mov
mov
mov
sub
mov
leave
push
mov
jle
cli
pusha
js
bound
scas
js
inc
lock
movsl
mov
shr
push
mov
xor
imul
addl
xor
adc
je
or
ret
call
lods
das
sbb
daa
and
sbb
nop
or
scas
add
adc
daa
and
push
fbstp
movb
pop
mov
push
add
or
mov
dec
sbb
sub
hlt
fidivl
sbb
aad
push
xchg
adc
jae
andl
pusha
popl
or
lcall
loop
div
scas
movsb
cmp
aas
sbb
cmc
dec
sub
sbb
sub
mov
stos
adc
cmpsl
enter
int
jnp
stc
les
sub
mov
test
in
and
xor
int3
xchg
pop
or
xchg
jmp
mov
lds
mov
push
inc
xor
sbb
or
push
inc
jge
scas
cltd
ret
daa
or
push
mov
and
sahf
add
mov
in
imul
mov
mov
cld
andl
mov
and
stos
mov
xor
mov
stos
fmul
movsb
xchg
sbb
mov
jmp
stc
inc
outsl
les
or
leave
lock
or
bnd
sub
filds
in
mov
inc
sbb
cli
add
add
jae
cli
mov
mov
sbb
mov
loopne
sbb
fwait
shlb
sub
xchg
add
mov
nop
pop
in
das
or
adc
mov
fidivl
xor
mov
mov
mov
jge
mov
inc
push
inc
push
test
fnstenv
push
pop
insb
mov
incl
push
or
repnz
icebp
fcomps
loopne
adc
ret
cmc
hlt
mov
fwait
mov
pushl
and
and
test
orb
mov
leave
int3
adc
xor
dec
mov
sub
mov
addr16
or
fstl
fwait
xor
jns
out
push
ss
mov
stos
push
pushl
pop
push
and
add
sti
mov
jns,pt
sub
jo
in
push
adc
addr16
jl
jmp
in
add
adc
adc
mov
xor
dec
pop
xchg
xor
jmp
lcall
push
leave
xor
insb
pop
fs
jp
test
pop
loope
dec
out
inc
jp
sub
sti
cmp
ficoml
adc
andb
divb
push
sbb
jl
in
cwtl
jge
call
xchg
mov
adc
inc
testb
sub
push
stos
imul
stos
dec
pop
adc
fwait
mov
negl
clc
add
in
loop
fwait
lret
jge
push
pushf
insl
mov
sub
adc
std
mov
add
push
or
je
jno
daa
xor
loop
xor
mov
cmp
ret
fdivl
mov
or
in
mov
sub
push
add
xchg
adc
and
sbb
mov
data16
and
ja
adc
aaa
and
sub
dec
pop
shll
and
mov
es
hlt
lcall
xor
jle
sahf
insb
mov
sub
call
pop
lret
add
incb
mov
cld
and
ljmp
mov
nop
fisubrl
push
xchg
mov
add
int3
xor
push
adc
in
sub
daa
lds
pushf
test
push
pop
fsubs
mov
add
push
or
fldcw
xor
cld
orl
cmp
xchg
mov
xor
mov
inc
jge
mov
sub
cmp
adc
mov
stos
in
xor
add
mov
bound
push
jecxz
ljmp
enter
push
add
mov
mov
add
add
add
push
daa
and
xor
xor
sub
add
sub
test
xor
scas
push
mulb
add
mov
fs
jne
sub
es
push
sub
lea
mov
jns
mov
sub
movsl
das
mov
jmp
cmp
push
add
cmpl
xchg
movsl
add
je
xor
cli
int3
inc
loopne
mov
add
clc
fstpl
xor
add
dec
movsb
dec
adc
fistpll
pop
inc
mov
fmuls
adc
mov
or
cmp
mov
lret
xor
pusha
sbb
adc
sbb
cmp
subb
mov
mov
mov
pop
add
cmp
xchg
pop
xchg
loope
sbb
mov
orl
cmp
pop
out
addb
mov
je
add
adc
cli
add
in
xor
test
xor
andl
sbb
mov
movsb
cli
adc
dec
daa
in
adc
and
mov
test
xchg
dec
sub
sbb
fisubrl
outsl
call
mov
push
and
fst
adc
mov
jge
jae
lcall
mov
mov
loope
add
mov
inc
jbe
push
test
jo
outsl
fwait
insb
pushf
sbb
cmp
xor
cmpsl
cld
in
loop
jmp
loope
lret
insb
add
mov
inc
mov
fistpl
inc
add
xor
je
mov
dec
pusha
sar
loopne
adc
xchg
mov
clc
push
cmp
xchg
add
fidivrs
push
in
push
add
adc
adc
jmp
fcoms
mov
das
data16
cwtl
lods
movl
movsl
mov
pop
ljmp
and
bound
inc
adc
ret
les
cmpb
sbb
inc
xchg
and
call
mov
shl
add
dec
push
and
call
out
pop
lret
sbb
inc
es
test
lods
push
out
pop
cmp
push
or
inc
test
xchg
in
lea
xchg
rorl
and
mov
jno
ficomps
shll
sub
daa
insb
incb
push
mov
jle
into
loope
nop
dec
mov
out
pop
or
push
loope
ret
push
cmp
xor
test
fnstenv
cmp
pop
mov
cltd
push
pop
loopne
push
fisubs
ss
stc
push
pop
add
lret
es
or
shll
inc
and
push
out
push
pop
cmp
in
andb
ss
mov
add
shl
mov
xchg
clc
mov
cmpb
andb
cmp
jno
popf
loop
scas
outsb
stc
outsb
mov
or
push
push
jp
sbb
mov
mov
cmpsb
in
sbb
sub
push
outsb
roll
daa
rclb
push
dec
cs
fsubs
add
mov
out
and
lret
mov
fdivrs
inc
ret
fdivl
adc
mov
dec
hlt
bnd
dec
gs
inc
fldenv
repz
adc
cmpl
xchg
xchg
aas
and
fcmovnbe
jb
jecxz
adcl
mov
xchg
mov
xchg
shll
jbe
sub
adc
filds
mov
cmp
mov
es
or
inc
lea
jp
out
mov
mulb
ljmp
int
pop
dec
adc
outsb
push
sbb
test
lock
scas
in
xor
add
or
add
mov
pop
mov
cmc
imul
flds
outsb
adc
adc
adc
mov
aad
dec
loope
adc
and
call
fwait
adc
push
aam
mov
shlb
sbb
mov
xchg
push
decl
adcb
into
xchg
movsb
test
or
jl
rorb
sbb
adcb
pop
in
and
dec
fsubrl
idivl
and
cli
mov
fsubp
jne
adc
xchg
jno
inc
inc
xchg
pop
gs
nop
sbb
repz
add
icebp
mov
lret
pop
lea
lods
inc
enter
imul
push
or
lret
adc
adc
lret
mov
sub
push
xchg
adc
out
clc
cmpsl
ljmp
adc
lods
ret
add
xor
sub
pop
dec
sbb
in
xchg
ret
jmp
jmp
jge
sub
sbb
jno
loopne
lock
cmc
xchg
imul
push
xchg
loop
fldt
adc
stos
jae
adc
lahf
sbb
or
adc
or
ja
int3
sub
adc
xchg
lea
dec
in
cli
jns
lret
loope
fsubl
inc
call
or
sbb
or
cmc
inc
test
fdivs
loopne
loopne
pop
adc
xor
out
sub
dec
adc
mov
mov
pushf
pop
loop
scas
or
fs
sub
adc
ja
add
mov
dec
and
sahf
ljmp
cmp
jae
mov
inc
xchg
sub
cmp
test
xor
push
test
add
iret
gs
repnz
and
hlt
movsb
xor
sbb
cwtl
mov
adc
xlat
mov
and
mov
or
or
or
movsb
push
hlt
popa
cmp
and
fwait
xor
add
call
stc
and
adc
and
mov
add
and
mov
push
cmp
lahf
inc
call
adc
test
adc
inc
testb
add
xchg
or
cmpsl
xchg
mov
dec
push
inc
cwtl
jnp
or
repz
mov
lods
in
or
fcomip
jg
or
push
ret
cli
add
ret
ret
sahf
dec
or
push
lahf
adc
jae
xchg
aas
cli
push
xchg
insb
sbbl
fimull
and
in
aam
xchg
cli
and
call
test
adc
jmp
adc
imul
mov
test
mov
pop
cli
arpl
xchg
pop
mov
jle
push
mov
out
ret
out
sub
ss
outsl
adc
popa
xchg
mov
shll
cmp
test
push
cltd
es
lahf
xchg
mov
jbe
sbb
out
roll
cld
pop
cmpsl
shrb
popf
xchg
iret
jmp
jae
bound
mov
ficoms
mov
pop
push
dec
and
in
xor
leave
xor
lods
inc
mov
data16
les
leave
add
js
mov
in
or
test
stc
loopne
dec
xchg
inc
add
fldt
fs
and
cmp
dec
ds
xchg
adc
les
or
movsl
sbb
add
push
add
iret
sbb
and
insb
pop
lods
add
mov
mov
jmp
lea
sbb
jnp
push
pop
push
fs
int
sub
loope
cmp
pop
loope
or
dec
cmp
fcoms
push
ds
push
dec
sub
data16
adc
les
xchg
adc
mov
or
dec
imul
pop
mov
or
insl
gs
xchg
xchg
or
dec
out
lods
cli
fisttpll
fimull
mov
pop
sbb
xchg
ss
fldt
cmp
xchg
int
sbb
cmp
cmp
jmp
pop
pop
out
les
pop
loop
mov
arpl
gs
mov
push
mov
pop
cmpb
or
dec
and
adc
xchg
int
adc
mov
je
mov
cmp
and
enter
cmpsb
mov
sub
enter
subb
xchg
in
add
jae
daa
xchg
data16
cmp
popaw
push
push
gs
je
or
pop
sub
adc
xchg
or
mov
aam
mov
or
pop
jo
add
xchg
movsb
push
je
cmp
inc
loopne
xor
inc
sbb
fdivrl
nop
call
push
xor
inc
stos
push
inc
add
sbb
imul
and
rcrb
lret
pusha
push
fistpl
scas
pop
inc
loope
or
lock
push
adc
or
ja
add
mov
int
bound
jp
pop
push
or
pop
nop
cmc
push
mov
sub
sub
int
cld
pop
add
push
and
push
xlat
cmp
sbbb
push
bound
mov
and
jo
and
ret
imul
cmp
cmpsl
int
inc
loopne
daa
push
push
movsl
jg
out
and
mov
xchg
lcall
xchg
into
xchg
mov
pop
div
inc
das
jb
adc
ja
adc
or
sbb
xor
ret
adc
jmp
std
pop
inc
es
push
lahf
xor
call
and
jge
mov
pop
mov
mov
inc
ja
in
mov
adc
jp
mov
jecxz
test
pop
in
loop
mov
clc
pop
xchg
dec
in
cmp
rcrl
stc
test
or
fs
leave
loope
xor
mov
xchg
and
out
push
das
jne
sub
call
cs
push
sub
or
mov
lret
pop
nop
xchg
inc
cmp
aaa
push
call
pop
out
sub
ffreep
in
sub
adc
or
jl
push
cmpsb
lcall
push
out
pop
sbb
dec
invd
lock
xlat
or
xor
pop
fcomps
test
and
dec
loopne
sbb
push
in
shl
sub
fwait
inc
lret
lret
loopne
mov
xchg
or
or
mov
dec
sahf
cmpsb
jp
push
out
adc
mov
cmp
or
add
clc
xlat
pop
mov
mov
dec
dec
pop
mov
cwtl
cmp
push
dec
inc
adc
cmp
fs
mov
andb
cs
cs
xor
incl
adc
inc
fists
aas
popa
in
fs
jbe
fildl
sub
enter
es
add
dec
inc
cmp
mov
xor
or
aad
sbb
mov
mov
push
ds
pushf
inc
cmp
push
jb
in
aaa
popf
das
negl
jbe
inc
iret
xor
and
aas
cmp
repz
inc
js
test
or
mov
add
je
cmpsl
daa
xchg
ds
pop
repnz
sub
mov
mov
mov
add
lods
sbb
sbb
test
pop
ja
sub
push
mov
sub
pop
in
mov
xor
dec
jmp
dec
jbe
sbb
add
ret
cwtl
add
lock
rcr
jno
in
fldt
jbe
lcall
cmp
es
mov
roll
xor
cli
bound
daa
xor
hlt
je
icebp
add
cmpsb
adc
add
test
adc
dec
ret
or
push
xor
test
or
cs
pop
mov
pop
mov
test
ret
cmp
or
aad
sub
or
push
ficoms
ljmp
jae
addb
cmp
or
adc
out
cli
dec
jns
je
sti
daa
arpl
clc
mov
test
cmc
test
imul
xor
jmp
daa
enter
sbb
out
popa
jmp
adc
hlt
scas
fnsave
out
lahf
pop
xor
mov
jns
adc
cmp
jae
cs
les
stc
dec
arpl
into
or
rolb
adc
lds
xlat
and
daa
cmpsl
add
sbb
adc
adc
shrl
push
and
and
adc
push
adc
adc
add
pop
loop
mov
cmpsb
inc
insb
xor
adc
aaa
push
jmp
push
fisttpl
mov
mov
sahf
js
ror
repnz
fnstenv
dec
inc
pop
stos
lods
xchg
repz
pop
cwtl
imul
pop
mov
scas
pop
lret
stos
rolb
gs
jg
hlt
lods
pop
or
lods
mov
mov
fisubs
xor
push
sbbl
mov
sti
jge
clc
mov
movl
es
sub
pop
lret
jbe
stc
mov
sub
adc
dec
jno
adc
xchg
sub
dec
adc
mov
mov
andl
xchg
pop
and
xor
test
addr16
sub
test
repnz
pop
gs
mov
je
fimuls
mov
imul
dec
ret
mov
xchg
imul
push
sbb
jp
andnps
or
inc
mov
push
lods
push
iret
xorl
add
dec
cltd
mov
in
adc
push
int3
loope
js
in
gs
ss
cli
push
inc
ss
jecxz
jg
mov
jb
push
pop
mov
cmp
subl
sbb
lea
cmpsl
mov
push
cmpl
fadds
mov
xor
push
dec
ss
mov
lret
test
pushf
or
and
movl
sub
pop
ret
daa
xchg
cltd
cmpsl
es
es
sub
push
jmp
iret
mov
dec
or
movl
cs
and
xchg
scas
shlb
mov
sbb
sub
add
ficoms
inc
mov
outsl
stos
add
pop
cld
jg
sub
push
imull
dec
xchg
mov
lahf
fcmovnbe
js
imul
jle
mov
sbb
dec
addr16
cwtl
pop
ljmp
xchg
es
lods
mov
fwait
sub
jae
ss
jg
mov
daa
dec
stc
or
adc
jnp
xchg
cli
or
or
and
mov
mov
pop
cmp
or
arpl
jbe
sbb
push
in
out
aaa
and
adc
push
cmp
orb
push
pusha
xor
cmp
fimull
hlt
dec
jne
rorl
insl
into
adcb
pop
push
jb
je
pop
adc
xchg
push
and
push
test
and
and
mov
xchg
sbb
push
shrb
adc
cmp
mov
and
test
stos
or
lret
and
aaa
mov
and
mov
xor
fldl
mov
add
jnp
jns
mov
fucomip
je
xor
adc
shll
enter
adc
jl
movsl
rolb
push
add
or
cmp
xor
mov
fdivs
mov
add
mov
jp
xchg
mov
sub
xchg
rol
popw
mov
lahf
push
mov
movsl
popa
insl
and
cld
mov
lock
fisubrl
ds
sub
jnp
sti
arpl
inc
add
jg
loope
push
pop
sbb
mov
scas
incb
push
mov
fsubr
push
nop
lret
or
or
cltd
cwtl
fdivs
jmp
push
arpl
xor
and
leave
inc
adc
fs
dec
rcll
push
in
push
push
xor
repz
lret
insb
adc
cmp
sbb
adc
lods
out
xor
loopne
push
or
cmp
enter
jnp
call
adc
lcall
stos
scas
adc
push
enter
out
inc
sub
sbb
pop
cmp
push
hlt
adc
xchg
enter
loope
les
cmp
scas
jb
test
jmp
or
xchg
push
jp
lods
cli
scas
sub
icebp
in
push
in
pop
wbinvd
scas
add
outsl
in
or
push
xor
push
push
inc
adc
nop
inc
fsts
dec
or
and
lahf
or
sbb
pop
push
mov
lret
add
mov
repz
mov
pop
cmpsl
sbb
pop
shlb
loopne
clc
mov
adc
lcall
and
incl
pop
push
scas
push
mov
pop
mov
addl
push
dec
sbb
jecxz
or
xchg
popf
dec
mov
loope
pop
mov
pop
or
push
push
or
leave
cmc
out
stc
fcoms
and
cs
je
jp
pushf
inc
ud1
je
or
jecxz
push
jae
mov
or
cwtl
cmp
rorl
fld
adc
fwait
bound
enter
scas
out
xchg
xchg
mov
aas
pop
data16
clc
push
mov
cs
adc
adc
xor
inc
in
xor
out
out
ljmp
outsl
dec
sub
mov
in
test
call
jns
repz
faddl
cmp
inc
adc
adc
movsb
je
sub
inc
lea
or
pop
pop
mov
call
xchg
mov
sbb
ja
add
rolb
and
sub
sbb
out
and
or
pop
add
fisttpll
aas
aaa
inc
mov
inc
movsl
jecxz
or
fmull
inc
add
inc
sar
mov
cmc
mov
mov
in
inc
sbbl
jp
arpl
inc
icebp
xchg
mov
aad
mov
mov
imull
leave
or
dec
and
pop
fwait
fwait
shrl
data16
pop
sub
shrb
sub
push
sbb
scas
pop
sub
adc
push
test
or
inc
int
push
aas
cltd
int3
or
popf
fwait
repnz
scas
sti
loop
add
or
mov
mov
cmp
mov
push
mov
and
addl
addr16
lahf
pop
mov
bound
xbegin
inc
mov
negl
stos
je
push
inc
sbb
inc
insb
and
lea
add
and
xchg
or
fs
adc
and
mov
jbe
lock
pushf
negl
cmpb
and
jmp
dec
add
in
shll
nop
mov
xchg
cmp
xor
int
and
adc
xchg
test
lds
xchg
xchg
and
and
pinsrw
sub
roll
sub
in
add
xor
cmpsb
adc
push
xchg
fwait
pop
push
das
stos
in
test
fcompl
push
repz
adc
lds
mov
mov
jge
iret
cmp
cld
jae
inc
call
aam
and
lcall
into
cli
push
sbb
mov
sti
push
testb
adc
adc
repz
or
jnp
testb
dec
lcall
or
jo
roll
sub
sub
xchg
enter
jmp
lea
xchg
cwtl
repnz
xor
push
xor
ljmp
sbbb
aas
pop
jp
push
aam
leave
adc
add
iret
dec
mov
mov
sbb
hlt
pop
inc
jge
and
push
or
pop
mov
mov
lea
in
push
pop
outsb
push
xchg
sbbl
mov
in
xor
push
jl
sbb
repz
mull
pop
pusha
dec
or
or
pop
jns
sub
pop
lock
cmp
xchg
js
out
push
cmp
mov
sahf
ret
mov
push
lret
add
adc
adc
dec
cmp
imulb
inc
out
mov
pop
mov
in
dec
jmp
int3
test
and
dec
hlt
pop
jne
mov
test
push
mov
push
or
fwait
dec
test
jnp
mov
iret
sbb
fldenv
jo
incb
and
jne
gs
das
cmp
add
adc
das
in
mov
adc
imul
pop
mov
push
mov
sub
add
pop
adc
je
lcall
xor
push
mov
adc
mov
adc
lods
xchg
imul
sub
xor
sbb
push
pushf
jge
inc
inc
adc
adc
loopne
cli
or
dec
sub
xor
mov
sahf
mov
mov
in
push
xchg
dec
pop
andl
sub
jmp
or
lea
cmp
jne
adc
sub
cwtl
xchg
bound
jbe
jle
and
mov
and
stos
mov
movsl
xor
adc
pop
leave
int
jp
mov
add
enter
add
loop
sbb
out
adc
dec
test
mov
jg
lahf
jne
sub
hlt
cmp
push
push
in
add
push
test
xchg
cmp
paddusb
loop
in
pop
stc
cmpsl
dec
imul
clc
sti
iret
enter
cmp
dec
es
repnz
in
stos
or
add
push
loop
pop
addl
ret
daa
mov
test
jno
jecxz
or
jmp
ja
push
xchg
mov
and
jp
test
adc
loopne
xor
stos
addl
xor
pop
mov
inc
adc
jmp
subb
movsl
cmp
add
cmp
jge
jp
and
push
xchg
mov
test
pop
or
jne
ljmp
shll
mov
or
jno
sbb
push
push
icebp
out
inc
xor
addl
xchg
cmp
jle
mov
pop
dec
push
push
xor
inc
out
cli
pop
out
cmp
add
inc
imul
pop
fstl
shrb
mov
pop
lds
ss
push
gs
add
pushf
mov
stos
mov
notb
xlat
inc
stos
cs
pop
ss
in
sbb
inc
mov
xchg
adc
xor
ficoml
mov
pop
cmp
pop
sbb
enter
enter
enter
enter
dec
imul
test
mov
add
or
enter
sbb
hlt
test
mov
xor
or
mov
inc
orb
fwait
mov
daa
mov
sub
mov
push
or
jne
sbb
test
ficoms
call
mov
adc
add
in
and
mov
mov
sub
into
lods
movsb
fwait
jg
sbb
cmpl
jp
fucomip
cmp
xor
jg
xchg
rolb
pop
adc
mov
stc
mov
mov
incb
fcoms
test
xor
lock
arpl
divl
sbb
ja
jmp
out
cli
inc
test
leave
mov
sbb
in
nop
xorb
outsb
loop
push
push
push
xchg
sbb
popa
ss
or
arpl
fildl
push
repz
cmpb
ret
ljmp
dec
lret
cmp
aam
xlat
test
lds
rorb
lods
add
call
or
mov
cmp
pop
icebp
jecxz
mov
xchg
and
or
push
cwtl
popf
aaa
adc
and
aad
das
mov
xchg
adc
push
jmp
adc
arpl
mov
and
call
shl
xor
cmpsl
jp
xchg
sub
xor
mov
cs
cli
fs
cs
cmc
lcall
add
pusha
call
push
roll
jmp
and
jmp
rolb
cld
cmovae
cmp
adc
xor
insb
and
insb
xor
fistl
incl
push
push
xor
mov
add
push
add
add
sub
pop
adc
inc
push
dec
pop
test
cmp
adc
rorl
int3
les
inc
push
mov
sub
mov
mov
jmp
sar
or
xor
mov
cmp
into
adc
mov
pop
fsubr
mov
out
sbb
fstl
pop
flds
or
cli
cmp
pusha
iret
flds
daa
xchg
pop
mov
cld
inc
push
data16
cmp
sbb
repnz
loopne
inc
cmp
je
je
dec
mov
jecxz
inc
dec
mov
fwait
push
dec
movsb
inc
push
pop
popa
cmp
dec
pop
jp
sbb
mov
scas
in
xor
fldcw
push
test
add
test
call
add
stos
lea
imul
call
sub
xchg
idiv
in
jmp
or
xor
sbb
pop
pop
mov
inc
jmp
or
push
or
lea
enter
mov
es
jo
imul
add
push
imul
cli
inc
sub
cltd
and
jae
or
jns
pop
cwtl
fs
pop
sub
or
and
popf
or
or
sub
cltd
clc
pop
dec
mov
pop
vpunpckhdq
sbb
lds
xchg
insl
xor
dec
out
ljmp
mov
mov
cmp
dec
fidivrs
std
xor
push
and
mov
leave
hlt
mov
lock
cmp
cli
dec
xor
push
pop
in
mov
aas
int3
add
xchg
cmp
lea
mov
dec
inc
cmp
aaa
jb
pop
mov
call
dec
xlat
pop
xchg
into
add
jne
cmp
dec
pop
mov
daa
enter
jno
icebp
add
lret
adc
jnp
lcall
lock
push
add
pop
mov
mov
movsl
jp
jecxz
test
inc
add
and
add
mov
mov
mov
dec
pop
pop
repnz
jge
push
dec
mov
mov
add
vmwrite
daa
pop
push
notb
jno
shr
add
js
movsl
or
lahf
js
mov
inc
push
mov
insb
cld
inc
insl
sbb
push
je
jae
or
mov
mov
sbb
and
data16
xchg
and
jmp
stos
hlt
jmp
out
and
aad
mov
nop
cli
mov
mov
sub
pop
adc
jmp
das
cltd
orl
inc
xor
mov
addr16
cmp
mov
lock
adc
call
xlat
adc
clc
cmpsb
sbb
pop
dec
out
addl
decl
stc
outsb
mov
je
sbb
sub
cli
enter
mov
repnz
xor
fldl
cltd
mov
mov
push
fwait
jge
inc
mov
xor
out
sub
sar
mov
mov
iret
pop
scas
push
in
xchg
int
xchg
test
outsl
mov
sbb
jmp
mov
dec
fstpl
aas
cld
and
clc
mov
imul
jae
scas
mov
adc
scas
add
mov
jg
fmull
mov
dec
or
sbb
hlt
push
mov
push
xor
mov
push
cld
mov
aam
sbb
and
xchg
insl
loope
loope
mov
pop
or
push
bound
mov
loopne
or
ret
push
mov
lods
enter
mov
and
mov
mov
lret
push
call
aaa
cmp
cmp
mov
bound
sub
std
je
xchg
popw
jp
push
cmc
push
cli
mov
xorl
jmp
xor
fimuls
in
push
lcall
jmp
xor
adc
dec
aad
jl
leave
jnp
pushf
xchg
addr16
sbb
gs
leave
push
push
sti
xchg
shll
mov
add
fisttps
in
mov
out
pop
cmc
inc
push
movsl
and
ret
popa
mov
jo
mov
inc
lcall
inc
imul
call
arpl
xchg
push
test
std
adc
movsl
loopne
adc
outsb
shl
inc
movsl
jno
shl
repnz
cli
loopne
and
bnd
mov
inc
mov
idivl
pusha
xor
mov
in
inc
mov
dec
sahf
xor
pop
mov
or
fldenv
sarb
nop
push
lret
push
dec
cld
ja
out
aas
jns
lret
in
sbb
je
loope
mov
in
in
xchg
sbb
push
dec
lds
dec
pusha
fdivs
inc
jne
pop
mov
adc
sti
push
pop
sub
adc
leave
mov
out
clc
mov
inc
rorb
push
xchg
jl
mov
inc
push
cld
popa
and
cmpsl
pop
inc
dec
xor
popa
push
jne
and
lret
mov
aas
call
mov
push
sbb
data16
insl
sub
outsl
jg
push
shrb
mov
cli
mov
xor
inc
in
push
sub
push
pop
sub
pop
call
test
mov
in
sbb
jecxz
inc
add
and
mov
loope
pusha
aas
xchg
test
rorb
addl
fwait
inc
add
repnz
push
mov
shrl
and
daa
mov
clc
jmp
repnz
jne
outsl
or
sbb
jmp
shlb
std
inc
mov
cltd
mov
mov
push
jbe
push
add
in
lock
add
lret
dec
push
aaa
mov
cmpsb
add
es
dec
mov
or
add
adc
xor
ljmp
test
jecxz
add
call
adc
push
mov
dec
push
leave
sub
or
mov
out
je,pt
pushf
pop
add
mov
mov
jb
inc
mov
bnd
push
jne
clc
call
or
icebp
test
mov
sub
dec
xchg
mov
or
push
filds
mov
adc
mov
sub
hlt
shr
cwtl
pop
inc
fs
aas
adc
clc
xor
mov
add
or
xor
pop
pop
fsubrl
push
sbb
add
mov
sahf
sub
mov
mov
les
fldt
imul
nop
pop
push
push
xor
pop
xchg
adc
pop
mov
pop
xchg
enter
stos
test
push
dec
sbb
rcr
sbb
push
cltd
sbbl
or
adc
stc
mov
xchg
pusha
push
ret
add
lret
lret
jge
cmp
inc
and
das
pop
sbbb
call
mov
xor
inc
push
loopne
in
sub
cmp
push
inc
addb
test
push
mov
stc
sub
test
aas
jo
cwtl
xchg
out
xor
jae
test
outsb
das
orb
pusha
jbe
and
inc
and
cmp
xor
shrl
addb
daa
xor
adc
mov
leave
jp
cld
add
cmc
xor
sbb
fidivl
fdiv
mov
xor
cmp
sub
cs
outsb
lea
call
and
in
xchg
adc
inc
xor
punpckhdq
mov
ljmp
imulb
pusha
lret
testb
cli
add
fadds
hlt
test
out
test
dec
or
test
xor
xchg
push
mov
stos
cwtl
lods
insl
out
push
fs
test
fldt
nop
adc
xchg
pop
mov
nop
aad
xchg
les
jns
cmp
test
sbb
shl
jmp
mov
push
in
or
or
stc
add
inc
inc
icebp
test
ret
pop
xor
hlt
dec
movsl
test
sahf
int3
mov
stc
or
fbld
je
inc
pop
cwtl
jge
mov
je
jmp
mov
xor
les
dec
push
jl
in
push
add
daa
imul
xor
xchg
les
jne
push
addb
in
dec
or
xchg
pop
lret
ftst
push
sti
xor
xor
xor
pushf
jns
dec
mov
out
sti
rorb
sbb
dec
push
xor
or
push
and
push
cld
hlt
or
inc
inc
stos
fcomps
fdivrl
sbb
or
sbb
add
aam
mov
push
mov
push
dec
decl
icebp
jge
add
loop
pusha
push
je
ja
imul
aaa
pop
cld
pusha
adc
das
pop
inc
push
ret
mov
aaa
clc
jnp
mov
scas
seto
inc
movsb
imull
in
sub
sub
andl
mov
mov
pop
nop
and
inc
fadds
stos
clc
adc
movsb
sbb
add
scas
std
xorl
in
xor
enter
aas
pop
popa
mov
clc
fwait
and
cmpsl
inc
push
sub
push
mov
ja
or
xor
and
adc
sti
cltd
xor
add
pop
test
cmpsb
adc
push
dec
sbb
add
dec
pop
testb
or
add
jecxz
es
ss
inc
pushf
mov
lds
inc
pop
loope
cld
subb
cmp
pop
loope
and
push
adc
sub
mov
out
int3
push
jno
outsb
sub
pop
cwtl
push
cmp
xor
outsl
subl
or
test
mov
xor
mov
je
dec
fistpll
lret
jb
dec
lea
movsl
movsl
or
pop
push
cli
shrl
pusha
jbe
pop
or
cltd
push
cmpsb
xchg
sub
cmp
int3
pop
call
jns
jmp
inc
xor
xor
sbb
cli
pop
sbb
inc
shlb
xchg
test
or
mov
call
xchg
cli
mov
mov
cltd
test
das
sbb
jmp
sub
jns
test
test
rclb
adc
js
addr16
cs
jl
je
dec
daa
add
in
mov
test
jne
xor
sbb
push
lock
test
cmpb
repz
addr16
pop
loopne
dec
cld
call
cmpsb
adc
mov
add
mov
sub
add
fnstenv
out
mov
lret
repnz
ljmp
ljmp
xchg
sub
loopne
mov
ljmp
es
mov
pop
data16
cwtl
pop
cld
xchg
divb
sub
xchg
fisttpl
into
jo
repnz
data16
and
cld
push
popa
jnp
jb
cmc
iret
aaa
inc
insl
cld
push
ss
push
in
cld
mov
leave
jge
inc
pop
jle
je
sub
add
imul
mov
push
add
adc
test
push
loope
in
or
and
push
pushf
insl
mov
fcomps
int
jne
adc
sub
cmp
testb
out
lods
or
sub
idivl
stc
movups
rorb
mov
into
rclb
push
dec
push
cmp
mov
push
adc
xor
loop
test
and
xor
sbb
test
dec
and
lcall
mov
push
dec
mov
push
jl
insl
add
jge
inc
push
mov
adc
loop
dec
mov
and
sub
add
xor
inc
int3
inc
in
sbb
and
push
inc
jo
out
andb
adc
mov
adc
push
mov
dec
add
nop
movsl
cmpsb
adc
jge
enter
lock
xor
shrb
xor
cltd
mov
xor
push
dec
das
out
ficoml
adc
cwtl
fs
mov
jp
inc
fstps
and
cmp
push
or
mov
test
and
lcall
icebp
sbb
adc
jp
adc
lcall
out
inc
sub
cmpsl
push
pusha
test
add
cmp
mov
leave
daa
stos
mov
ret
inc
fldl
jnp
inc
push
xchg
int3
adc
sbb
push
or
pop
push
ja
sub
gs
mov
call
xchg
sub
xor
push
xor
daa
outsl
cli
xchg
addr16
gs
call
lret
push
dec
and
or
dec
or
aaa
in
lock
adc
push
lret
xor
fsubl
cld
lods
fwait
pop
pop
xchg
or
dec
pop
js
cmp
pop
pop
xchg
cmovg
dec
jge
mov
dec
jne
cmp
add
adc
mov
inc
pop
shr
pop
jmp
xchg
pop
cmp
xor
movsl
sub
mov
mov
mov
ss
xchg
nop
sbb
stc
pop
scas
dec
or
inc
in
push
adc
ljmp
adc
mov
je
pop
jmp
mov
cmpsb
mov
xor
push
pop
mov
jge
mov
call
dec
jmp
repz
fildll
xor
inc
in
scas
cs
sub
or
test
cmp
sub
xor
sbb
stc
outsl
add
rorl
dec
imul
adc
in
cld
cmp
add
adc
out
mov
shr
lock
push
in
mov
lods
pop
or
or
sbb
mov
and
or
inc
push
aam
fisttpl
fsubr
sub
lods
mov
push
mov
rolb
dec
xchg
ss
adc
lret
int
push
sbb
outsb
rcl
incb
dec
sub
aaa
mov
xchg
sub
lds
pop
xor
jg
clc
add
push
cmp
xor
inc
packuswb
mov
sbb
cld
jae
inc
inc
and
lea
call
xor
in
dec
or
sbb
push
add
sub
push
cmp
scas
hlt
out
xor
ljmp
gs
sub
fisttpl
leave
scas
ffree
popf
fs
jg
mov
aam
fcomp
fidivrs
dec
es
clc
leave
pop
ljmp
jae
fwait
mov
in
or
push
mov
push
bound
repz
mov
pop
mov
add
xchg
je
std
inc
xor
fsubrs
xlat
sti
movsb
int
sarl
ficoml
jl
aad
jge
adc
jmp
cmp
test
jmp
jb
dec
xchg
imul
cmpb
mov
push
lods
popf
movsl
mov
pop
mov
push
push
ljmp
sub
shll
xchg
outsb
jmp
and
cmpsb
dec
dec
mov
sub
mov
js
add
sbb
lcall
jge
sbb
push
add
and
sbb
cmpsl
xchg
sbb
adc
adc
dec
jp
test
orb
dec
add
popf
add
leave
popa
jbe
mov
mov
and
cmp
out
push
ss
sub
push
pop
or
xor
add
lea
push
call
fdivrl
mov
or
cmp
mov
sub
inc
cs
cmp
loope
xchg
movl
xor
or
adc
lcall
mov
add
jb
aas
or
sub
dec
es
icebp
adc
test
add
or
push
mov
adc
lock
shrb
dec
lea
add
push
or
lahf
ret
fwait
xchg
adc
xchg
movsl
adc
lcall
mov
imul
bound
jae
cmpl
add
fsubrl
orb
movsl
lods
add
popf
mov
sarb
addr16
inc
mov
ret
mov
jmp
fdivrl
and
jmp
add
mov
inc
stc
push
xchg
push
or
mov
inc
mull
xchg
jb
int3
add
adc
or
sahf
mov
add
repz
inc
and
and
scas
imul
lea
inc
inc
gs
lret
fsub
outsl
inc
movb
mov
xor
scas
sarl
stc
out
mov
sbb
or
inc
and
movsb
and
mov
dec
adc
adc
mov
dec
dec
loop
in
push
mov
adc
mov
lds
cmc
inc
es
je
lds
nop
mov
lcall
ljmp
xor
mov
adc
shl
cmpsb
mov
fnstcw
jecxz
pop
mov
cmp
and
pop
nop
cmc
jecxz
loope
movsb
mov
mov
std
test
mov
inc
mov
out
xor
or
push
out
nop
inc
jle
test
imul
or
hlt
push
and
stc
lods
pop
cmp
gs
and
push
fldl
xor
xor
orl
out
es
add
and
sbb
cli
pop
aas
adc
mov
les
or
push
adc
lods
nop
rcrb
repnz
and
or
mov
mov
mov
and
in
xchg
fisttps
and
cltd
add
divl
test
sbb
xchg
jno
scas
inc
scas
rolb
loope
mov
cli
fidivrl
mov
jl
push
bound
dec
mov
stc
xor
cmpl
icebp
pop
xor
mov
cmp
rcrb
sti
adc
shl
paddusw
mov
negb
push
add
dec
push
je
ret
cltd
xchg
outsb
movsb
push
andb
xchg
mov
and
push
xor
or
fwait
push
daa
aas
push
xchg
imul
jge
sbb
in
rorl
jecxz
and
mov
je
add
adc
icebp
xor
fstl
jo
sub
inc
out
stos
insb
inc
out
cli
insb
shr
push
jo
sub
mov
sbb
adc
or
rorl
xor
push
addr16
stos
cltd
adc
insb
inc
and
das
out
sbb
or
inc
jns
in
adc
add
jmp
xchg
iret
xchg
test
or
or
dec
insb
and
mov
insb
cltd
sub
xlat
dec
nop
cmp
xchg
add
push
stc
push
or
jle
stos
mov
rorb
jae
inc
ja
add
mov
sbb
insl
lahf
jp
mov
pushf
inc
mov
pushf
popf
add
jmp
mov
sub
add
sbb
xchg
sbb
sbb
shrl
and
inc
push
jl
or
xchg
mov
push
mov
push
and
push
adc
stos
insl
mov
xchg
test
push
sub
cmp
jb
std
cltd
out
jae
push
inc
push
cmp
sbb
pop
mov
sub
mov
add
xchg
push
push
inc
loopne
sbb
mov
insb
inc
ret
mov
fdivl
pop
and
push
mov
mov
pop
xchg
mov
sub
inc
call
neg
lret
mov
mov
test
sub
push
xchg
fdivrl
loope
mov
test
push
aam
xchg
clc
outsb
and
and
mov
dec
push
arpl
imulb
es
mov
loopne
nop
aaa
mov
std
cmpsl
cmpsl
and
xor
cmp
shl
sub
fldcw
add
jae
shl
lods
repz
jl
sbb
ffree
mov
lcall
cltd
mov
sub
movsb
stos
add
in
jo
jne
cmp
pop
cmc
sbb
adc
and
lock
cwtl
push
int
cmp
pusha
cltd
roll
inc
sbb
jle
pop
jl
sub
scas
mov
pop
in
pop
test
int3
mov
std
push
jmp
adc
sub
or
push
stos
push
push
inc
ret
jae
push
sub
repz
pop
mov
xchg
call
mov
cltd
pop
loop
shrb
in
mov
shrd
loopne
push
cmp
mov
cmp
out
cwtl
adc
xchg
adc
ffree
ljmp
jo,pt
push
pop
inc
inc
cmp
jne
pop
xor
stc
xchg
push
scas
push
and
jae
or
sti
insl
sub
dec
mov
std
sub
and
test
sub
and
jecxz
xchg
aaa
clc
mov
sub
rcll
and
mov
sti
loopne
mov
push
stos
cli
lret
test
xlat
push
enter
jne
call
xor
shl
push
mov
xchg
xor
mov
inc
lahf
pop
fs
cli
aaa
or
xchg
pop
add
rol
inc
or
and
add
sub
adc
js
out
cmp
add
into
cmpsb
and
adc
mov
int
mov
adc
cmp
pop
cs
sbb
mov
xor
cmp
insb
gs
cltd
jge
jg
add
scas
rcl
scas
inc
xchg
arpl
je
sub
adc
push
lahf
fcoms
xchg
sub
xor
adc
imul
adc
sarb
lods
add
push
outsl
push
mov
test
addr16
fwait
add
inc
mov
hlt
cmp
sbb
cmp
popa
inc
sbb
dec
call
test
xchg
mov
lret
ss
jecxz
mov
ficoml
rcll
push
mov
ret
jg
sub
or
fidivl
and
or
pop
mov
adc
mov
or
ljmp
dec
inc
jbe
aaa
jle
rcrb
xor
loope
mov
jmp
int3
mov
dec
inc
je
lret
xlat
adc
or
or
xchg
push
adc
push
jp
xor
fs
test
gs
std
mov
pop
jbe
cmp
setl
aaa
fnstenv
mov
movsb
aam
inc
and
outsb
js
mov
mov
xchg
add
inc
sbb
imul
pop
psadbw
hlt
aas
add
ds
jns
jmp
dec
dec
negl
sbb
aam
es
aas
mov
and
ret
inc
lcall
inc
sarb
stos
imul
ds
loopne
sti
scas
fmul
or
push
fadds
movsb
fsubr
sbb
call
je
adc
mov
or
int3
fs
jns
out
sbb
enter
adcb
jge
sub
push
mov
dec
xchg
cltd
neg
add
pop
das
jo
loope
mov
pop
inc
push
test
push
mov
cmp
inc
in
nop
jmp
mov
into
data16
dec
cmpsb
out
push
adc
pop
inc
xor
or
icebp
dec
push
lret
pop
dec
hlt
enter
jl
mov
inc
push
mov
popf
xchg
adc
mov
dec
pop
xor
mov
nop
loope
mov
fnstcw
dec
dec
insb
pop
cmp
push
xor
loope
faddl
cli
shll
add
sbb
inc
push
call
jg
outsb
fsubrp
inc
and
out
aam
lea
push
jne
or
mov
push
mov
out
bnd
push
popa
mov
or
push
fwait
pop
cli
inc
adc
jp
das
jmp
adc
or
mov
or
push
and
std
lds
xchg
loope
jmp
xchg
push
fstps
xlat
dec
aam
sub
les
pop
fidivl
jle
mov
sbb
call
push
jnp
dec
loopne
out
and
adc
pusha
jle
xor
add
pop
pop
adc
cmpsb
cwtl
outsl
jecxz
lret
push
mov
add
adc
mov
xor
adc
pop
xchg
adc
ss
fmull
inc
adc
repz
call
mov
int3
jae
xchg
xor
clc
cli
dec
pop
fists
dec
in
daa
dec
es
cli
add
mov
and
movsl
pop
stos
push
call
les
mov
stc
jmp
sbb
mov
cmp
rorb
jbe
repnz
sarb
scas
aam
std
xchg
cld
mov
enter
sbb
and
xor
gs
inc
add
mov
stc
aas
jge
mov
xchg
push
push
sub
aad
stos
cltd
je
cmp
loopne
jl
adc
or
mov
in
and
addb
adc
sub
std
xchg
es
fnsave
mov
pop
out
mov
repnz
aad
cmp
sub
mov
xchg
adc
push
movsb
push
insl
loop
or
sbb
adc
stos
sub
xor
gs
int3
mov
add
imul
test
sub
faddp
arpl
mov
out
lcall
addr16
sbb
push
mov
push
mov
addr16
mov
test
in
aas
sti
loopne
stc
jmp
cmp
loop
inc
mov
ja
cmpsb
mov
or
or
push
mov
std
nop
stc
mov
shlb
jge
mov
fcmovbe
push
pop
mov
stc
inc
daa
in
stc
dec
pusha
mov
cli
add
ret
jmp
ret
add
leave
dec
out
lret
data16
mov
data16
jns
mov
pop
mov
xchg
aad
dec
scas
sub
loop
addr16
jg
push
adc
cltd
or
xor
push
fsubr
repnz
adcb
adc
push
push
loopne
mov
inc
insb
push
in
sbbb
xorl
test
mov
and
rcll
das
push
fbld
popa
xlat
iret
out
jecxz
mov
jg
mov
ljmp
and
push
xchg
inc
pop
mov
pop
loop
mov
adc
outsl
mov
and
xorl
stc
test
push
rorl
jns
lcall
outsl
add
int
and
adc
and
cmp
xor
ret
roll
xor
leave
test
sbb
aam
add
daa
dec
lahf
xchg
mov
mov
scas
pop
or
inc
inc
sub
ss
cltd
mov
test
test
cli
or
pushf
and
mov
xchg
jecxz
in
lahf
lods
rcrb
mov
call
push
jp
jb
mov
gs
aaa
mov
push
add
in
setns
aam
ja
test
sub
pushf
and
andl
or
imul
or
ds
sub
inc
inc
rcll
push
fldt
sub
and
setne
add
pop
push
leave
stos
inc
push
mov
add
popa
xor
mov
shl
pop
inc
push
cmpsb
adc
pushf
pop
jns
push
mov
sub
xchg
das
jno
icebp
mov
xor
loope
leave
loop
pop
push
mov
push
add
dec
xchg
out
ss
test
call
push
mov
lods
xchg
pop
cmpsl
popa
sub
out
xor
das
mov
aam
push
mov
push
out
dec
adc
pop
les
out
movsl
aas
and
call
ret
push
and
inc
cli
enter
dec
ret
and
or
inc
and
mov
pushf
adc
push
mov
xor
mov
jo
jecxz
push
fwait
pop
icebp
je
adc
xchg
das
bound
or
and
jb
pop
jb
cmp
jge
sbb
mov
jmp
mov
cmp
inc
push
lea
in
jmp
es
sbb
push
lea
mov
pusha
sbb
inc
cld
insb
mov
mov
cmp
mov
lods
xchg
jg
mov
movsb
sbb
in
stc
sbb
aas
add
adc
fs
pop
mov
lcall
add
cmpsl
inc
cmp
enter
aas
cli
xchg
sub
lss
out
jbe
and
jecxz
hlt
lods
jns
add
xchg
hlt
or
bound
cmp
dec
cmp
clc
push
jle
test
fs
adcb
fs
push
or
xchg
push
dec
dec
sti
add
jmp
rorl
sub
push
roll
pusha
repnz
clc
clts
in
and
mov
sbb
xchg
mov
jnp
xorl
pusha
pop
loopne
std
push
nop
push
outsl
test
pop
loopne
and
negl
cmp
test
in
in
inc
dec
sbb
xchg
pop
xchg
dec
pop
sub
sbb
in
push
enter
in
fildl
xchg
lea
push
repnz
repz
inc
sbb
dec
adc
dec
lods
xor
out
loope
inc
mov
jmp
lahf
sub
sti
push
daa
mov
cmp
dec
jl
push
push
add
and
sbb
negl
sbb
aas
xchg
adc
dec
movsl
push
adc
xchg
test
mov
cmp
or
movsb
loop
call
ret
adc
mov
aam
in
cli
push
lea
insb
add
xor
call
inc
je
inc
test
andl
stc
pop
mov
fsubl
or
inc
movsl
repnz
movsb
xor
inc
movsb
adc
cmp
loopne
xor
in
or
cmpl
dec
sbb
test
loop
les
push
and
bound
mov
icebp
xchg
adc
xchg
cmp
out
stos
xor
mov
dec
or
sbb
out
pop
xchg
inc
ljmp
out
out
mov
push
jl
or
daa
mov
shlb
inc
sti
and
sar
rorl
aad
xor
xor
xchg
cmp
pop
xchg
pop
push
mov
aas
fsubl
or
ficoms
or
ss
mov
dec
enter
jl
mov
jnp
dec
out
adc
push
pusha
pop
inc
ss
scas
cltd
iret
and
lret
cmp
cld
push
cmpsl
arpl
mov
aad
fwait
jne
xchg
mov
sbb
jmp
xchg
cmp
and
cs
push
adc
cs
sbb
aas
xchg
test
in
clc
lea
cmovne
adc
pop
pop
sti
inc
and
cmp
or
sub
mov
sbb
cmp
sbb
inc
inc
leave
in
dec
mov
mov
test
lahf
dec
or
sub
dec
cmp
mov
xchg
push
adc
xor
pop
pop
push
inc
push
mov
jecxz
mov
add
inc
mov
int3
xchg
mov
dec
cwtl
sbb
dec
aad
push
jbe
addr16
rcrl
std
jb
fldt
cmp
sub
jb
adc
into
popf
pop
pop
int3
aas
enter
fistl
inc
in
or
es
add
movsb
cli
or
jmp
mov
jecxz
test
sti
push
call
mov
ret
xchg
sub
jmp
jne
mov
enter
mov
sub
mov
in
dec
mov
sbb
lea
pop
pop
cmp
and
push
inc
test
push
pop
fs
add
inc
adc
adc
test
mov
push
xor
dec
rclb
shl
mov
mov
and
pop
adc
pop
sbb
dec
mov
js
mov
dec
push
std
aam
sbb
test
sub
xchg
cltd
cmp
push
add
cmp
outsb
aaa
repnz
push
cltd
jno
test
adc
inc
or
lods
sbb
push
push
rcll
clc
pop
mov
dec
or
cld
call
fs
inc
and
es
sbb
je
add
ljmp
push
testb
rcl
cmp
inc
ds
scas
mov
add
sub
mov
xchg
add
out
sub
sub
jmp
xchg
push
test
jmp
inc
sub
mov
cmc
repz
xlat
push
mov
sahf
xchg
xchg
mov
test
sbb
lods
xchg
mov
or
pop
insl
aas
xorl
adcl
popa
gs
dec
mov
mov
dec
aad
testl
jmp
mov
xchg
xor
inc
adc
decb
clc
add
jg
clc
cmp
iret
test
sub
imul
xchg
jbe
addl
mov
mov
dec
and
lret
or
lock
aam
clc
xor
notl
sub
and
inc
js
dec
xchg
inc
call
mov
call
inc
pop
push
cld
mov
out
mov
enter
push
mov
lock
ss
lcall
mov
push
and
test
xchg
jnp
sub
mov
movsb
cmp
mov
add
adc
cmp
pop
out
sahf
sbb
add
mov
push
icebp
es
fdivrs
xlat
addr16
adc
xchg
jb
jle
inc
loopne
pop
fcmovnbe
add
or
aaa
loopne
je
daa
pop
and
mov
mov
pushf
adc
mov
pop
sti
pop
push
rorb
and
hlt
push
xor
xchg
and
add
shrl
stos
inc
mov
in
aaa
adc
ja
sarb
notl
sub
in
inc
mov
adc
jp
mov
xor
pop
xchg
xchg
int
loop
sbb
xor
sbb
int3
mov
and
test
inc
mov
sub
and
push
adc
lock
or
mov
or
xor
int
testb
adc
mov
notl
test
jle
scas
jmp
inc
mov
dec
inc
call
sub
outsb
movsl
lods
out
fiadds
mov
jp
pop
sub
in
push
add
mov
cltd
rorb
xchg
fs
ljmp
pushf
adc
fs
adc
mov
dec
add
add
sbb
lret
pop
cmpsl
sub
addr16
add
cmpsb
in
test
and
mul
sbb
jmp
fwait
data16
cs
aaa
push
jle
push
cmp
cwtl
pop
or
jmp
xchg
stos
cwtl
inc
or
aaa
jmp
fldenv
icebp
es
or
rcrl
test
and
stc
sub
sti
mov
aas
outsl
push
pop
and
pop
inc
mov
lret
mov
aad
push
mov
je
lret
orl
je
inc
cmc
inc
cmp
mov
pop
sbb
enter
sbb
jecxz
mov
jo
hlt
sbb
or
jmp
and
jle
mov
sti
sbb
popf
inc
pop
push
and
pop
inc
rol
sti
sahf
call
pop
push
push
sbb
fidivs
mov
push
inc
xchg
call
xchg
dec
jns
dec
xchg
pop
std
or
sub
mov
in
push
mov
push
jg
sbb
outsb
test
inc
clc
fscale
pushf
or
add
push
xlat
mov
mov
pop
aas
test
test
mov
cmp
rorb
clc
mov
mov
dec
cld
ss
xor
adc
jmp
out
lods
adc
add
test
in
xchg
ss
add
inc
sbb
rclb
inc
fdivl
pushf
jmp
sbb
inc
and
jns
lahf
inc
dec
and
and
inc
push
sahf
pop
sub
cld
push
xchg
sbb
fdivrs
inc
sub
adc
xor
inc
mov
test
and
ds
mov
mov
jnp
mov
push
pop
dec
loopne
rep
popa
mov
add
loopne
pop
loop
jae
test
cmp
xchg
pop
stos
mov
loop
add
ljmp
mov
arpl
sbb
daa
imul
idivb
rorl
fstps
inc
mov
push
or
xchg
sbb
adc
inc
xchg
mov
ficompl
movsb
push
jb
jmp
pop
push
insb
fs
repnz
call
ss
dec
shl
add
push
fsubr
movsl
mov
xor
add
mov
push
push
dec
dec
mov
mov
cmp
cmp
in
mov
dec
cmp
push
gs
jg
push
mov
add
mov
add
pushf
cmc
jmp
loope
repnz
sbb
cli
aad
daa
push
into
inc
out
ficompl
adc
mov
testl
jns
ds
cs
aad
inc
inc
mov
and
cmp
shll
mov
fs
pop
je
push
xor
push
insb
stos
adc
hlt
lret
xor
cltd
jge
outsb
mov
pop
push
dec
sub
jg
sub
aad
cmpsb
push
ret
js
adc
lahf
dec
mov
inc
and
ret
test
mov
popa
or
jb
cli
fadds
dec
mov
jne
adc
je
xchg
xor
lea
lahf
out
pop
or
lea
add
out
cs
pop
push
push
loopne
in
push
and
cmpsl
lahf
push
push
jg
push
dec
mov
int
call
les
mov
fstps
xor
in
cli
push
cmp
sbb
es
pop
push
sbb
add
fdivs
rcrb
dec
inc
call
push
mov
fcomps
out
les
mov
xor
add
xchg
mov
sbb
mov
aad
cmp
imul
push
hlt
xor
mov
lea
mov
jno
jmp
push
repz
sub
mov
mov
fstps
mov
pop
jp
jecxz
jns
sub
insb
call
outsl
jge
mov
cmp
push
mov
mov
icebp
mulb
aad
or
in
mov
inc
cli
and
jne
hlt
dec
push
dec
and
pop
lods
mov
push
sub
mov
scas
mov
pushf
lea
fldcw
into
add
mov
imul
add
movsb
inc
push
out
pushf
inc
push
std
push
and
add
xchg
jnp
lea
pop
add
and
subb
xchg
or
dec
inc
inc
adc
in
sub
loopne
or
mov
xchg
divl
push
inc
imul
sub
or
out
mov
fstps
adc
jnp
icebp
stc
pop
std
add
push
sub
scas
jmp
mov
imul
jne
xchg
sbb
inc
test
jno
cmp
and
jmp
sbb
dec
dec
cld
insb
xchg
push
outsb
sti
imul
pusha
nop
and
pop
jnp
fistl
fimuls
pop
mov
aaa
inc
adc
das
mov
add
jmp
cmp
cwtl
subl
cmp
pop
push
lods
inc
inc
mov
cmp
adc
nop
in
subl
inc
xor
and
inc
mov
xchg
or
leave
js
push
inc
fstpl
push
aas
or
loope
out
inc
sahf
inc
sbb
mov
xor
movsl
mov
movsl
cli
sbb
mov
imul
test
push
leave
push
insb
je
jmp
jp
mov
push
sub
outsl
or
xor
mov
cmp
lret
mov
sahf
add
in
imul
stos
sbb
rolb
insl
mov
inc
outsb
sbb
les
and
in
xor
andl
wrmsr
jns
sub
sbb
aas
xchg
aad
test
lock
or
aad
subb
pop
mov
pusha
movsl
mov
cmp
dec
fstpl
call
daa
leave
push
adc
inc
or
cmpsl
dec
int3
sbb
jbe
mov
cmpb
push
test
pop
stos
xchg
jp
pop
int3
sti
and
test
jle
mov
adcl
lret
out
pop
clc
xchg
cmpsl
addb
addl
xor
jnp
movsb
daa
sarl
and
adc
push
test
lret
xadd
push
mov
das
mov
sbb
mov
sarb
into
ss
adc
rorb
loope
sub
js
and
jne
outsb
imul
sbb
movsb
and
push
js
lods
pop
push
cmpsl
jl
jle
icebp
adc
je
inc
xorb
dec
das
dec
call
mov
push
popf
mov
add
jmp
lods
es
push
nop
and
sub
lods
push
xor
lea
sub
xchg
adc
iret
xchg
xchg
rorl
movsl
lock
pop
pop
adcl
imul
cmpsl
in
bound
inc
or
push
sbb
inc
pop
ljmp
push
sbb
sub
xchg
daa
xor
scas
pop
jne
sti
repz
and
jmp
mov
jbe
xchg
mov
repz
popf
cwtl
pop
mov
cmpsb
pop
cmp
pop
jbe
ljmp
cld
sub
inc
mov
adc
or
or
test
mov
or
mov
int
popa
push
and
dec
pop
adc
xchg
callw
inc
xchg
jns
cmp
in
pop
xchg
fsubrp
leave
bound
sbb
add
and
sbb
lock
mov
jne
xchg
mov
push
lea
mov
cmc
data16
jmp
int3
mov
sbb
daa
cmp
jo,pt
xchg
bound
mov
mov
scas
sub
inc
sbb
outsb
mov
add
lret
cwtl
mov
adc
dec
sbb
sti
sub
dec
daa
xor
in
mov
loop
adc
mov
mov
cmp
mov
inc
dec
xor
adc
fisubrs
arpl
vmovss
adc
std
fsub
xor
and
jp
int3
jg
inc
push
mov
xchg
inc
enter
cmc
stos
int3
fadds
xchg
and
adc
insb
push
mov
xchg
aam
dec
or
out
arpl
or
lret
xchg
add
cmp
aam
mov
cmp
xor
jne
cmp
aam
xchg
stc
or
repz
fstps
aas
mov
jmp
ss
adc
inc
or
xor
cs
clc
add
rorl
mov
adc
push
sbb
sub
dec
mov
popf
xor
push
and
mulb
int3
or
std
test
jecxz,pn
push
xchg
icebp
sub
ss
adc
sub
repnz
dec
xchg
fstsw
mov
lar
cmp
out
lock
aam
pushf
xchg
mov
mov
rolb
cs
cmp
adc
outsl
pusha
testb
ja
subl
mov
push
sbb
aas
jnp
pop
ret
nop
das
int3
pop
leave
add
or
jg
fisubs
je
sbb
scas
cmp
xchg
call
lahf
imul
or
pop
mov
add
or
cltd
xchg
shr
jle
push
stos
inc
aam
loop
add
add
push
sbb
push
xchg
in
add
add
xchg
pop
inc
call
add
shl
aam
nop
stc
jge
pop
mov
cld
sbb
cwtl
jne
ljmp
pop
push
cmp
aad
cmp
dec
mov
pop
sar
xchg
enter
scas
adc
lock
mov
paddw
adc
call
pop
lods
push
add
out
les
fdivrl
call
div
jp
movq
into
or
adc
xor
push
gs
pop
pop
and
insb
sub
sbb
outsb
aad
rcr
sarb
inc
xchg
mov
adc
daa
or
test
repnz
fsub
callw
xor
push
push
insl
or
mov
dec
lods
fnstenv
movsl
mov
xchg
scas
lock
lret
lds
callw
sbb
add
xchg
outsl
loope
mov
jo
xor
sbb
movsl
push
outsl
fwait
jge
adc
add
add
and
push
pop
cmp
and
push
and
test
insb
bound
pop
push
dec
fsubrs
mov
inc
cltd
and
out
add
mov
inc
adc
pop
mov
ficoml
jg
jp
cmp
mov
test
bnd
or
jo
lret
push
jbe
cmp
cli
inc
mov
inc
lcall
in
scas
repnz
divl
mov
lret
cmpb
or
rolb
hlt
in
cld
and
outsb
sub
add
jnp
cmc
sub
loop
mov
out
or
clc
add
xor
out
call
jbe
mov
jl
sbb
push
dec
loopne
mov
aas
dec
xor
repz
jo
dec
adcb
test
leave
dec
lea
xor
adc
push
or
scas
imul
cmpsl
mov
xchg
sub
xchg
jmp
rorb
fsubrp
leave
cmp
out
ljmp
repz
sahf
cmp
sbb
xchg
add
cs
or
popa
or
mov
xchg
cmp
sahf
push
dec
cmp
push
mov
xchg
jmp
out
repz
sbb
xlat
cmp
or
push
je
sarl
dec
stos
adc
mov
enter
mov
in
mov
add
lret
addr16
ja
scas
xor
decb
ds
daa
mov
sbb
mov
inc
mov
push
fstps
addr16
xor
rolb
scas
cmp
or
and
andb
mov
fisubrs
loop
or
xchg
mov
cmc
js
push
les
std
and
idivl
loop
lods
addr16
push
sahf
ss
and
lahf
or
jl
cmp
imul
mov
sub
sub
or
sub
adc
incb
jb
push
pop
jp
aaa
jo
gs
inc
cmp
sbb
sbbl
test
rcrb
lods
rcll
cs
mov
mov
call
mov
xchg
push
pop
punpckhbw
xor
mov
test
jmp
js
xor
xchg
es
add
xchg
add
fadds
cmp
push
xchg
jmp
ret
out
push
adc
rcrl
mov
sub
adc
push
add
pushf
fnstcw
das
mov
pop
jp
mov
daa
mov
inc
xchg
arpl
imul
cwtl
jns
xor
test
cs
add
mov
sub
and
sbb
push
jno
movsl
pop
pop
mov
stos
movsl
pop
add
enter
xchg
xor
mov
es
fadds
or
adc
push
adc
shll
inc
pop
aas
mov
test
sahf
sbb
fisubrs
dec
stc
mov
or
xor
cwtl
mov
inc
dec
icebp
cmp
or
cmpb
loop
inc
fsts
jg
out
sbb
cmc
call
xor
pushl
xchg
adc
stos
dec
sub
aaa
jg
jmp
inc
mov
inc
xor
mov
pop
inc
es
add
popa
test
or
xor
ret
mov
int3
lds
dec
mov
in
xchg
xchg
dec
jo
or
mulb
push
cmp
test
jle
xchg
pushf
fildll
imul
mov
sti
jbe
adc
pop
rol
xchg
and
call
push
jae
fnstcw
lcall
xchg
lcall
sub
mov
dec
loope
mov
xor
mov
xchg
inc
rcrb
sub
dec
test
jns
xchg
or
xor
mov
leave
nop
in
fwait
cmc
call
add
les
jnp
mov
mov
adc
add
jp
scas
lahf
dec
adc
out
or
aad
mov
imul
pusha
lods
adc
stos
dec
imul
xchg
stc
pop
sub
pop
ret
dec
cmp
add
add
and
stc
jno
and
lock
adc
push
sub
push
add
xor
cli
xlat
cmp
mov
inc
int
cmovns
pop
add
mov
loope
xchg
cwtl
mov
cmc
js
in
and
das
mov
mov
inc
pop
ret
adc
add
in
and
xor
adc
and
add
inc
inc
leave
insb
out
sbb
test
jno
inc
push
xor
jnp
movsb
int
icebp
mov
sub
lea
lret
push
mov
fisubrs
adc
pushl
loop
movsb
in
cltd
andb
jbe
sub
mov
jmp
nop
fs
and
das
and
jae
fnstenv
insl
adc
cltd
test
xor
in
mov
adc
adc
ds
loopne
sbb
gs
sti
js
out
mov
sub
pop
inc
out
outsl
jb
in
cltd
je
xchg
pusha
wbinvd
cmpsl
mov
cmp
mov
or
pop
push
lret
mov
fnstenv
pop
pop
sub
pop
pop
push
je
mov
fisubrl
mov
outsb
out
fcoml
cmp
nop
push
sub
notl
dec
jne
push
or
dec
inc
xchg
xor
hlt
pop
inc
ret
pop
adc
or
shll
movsl
push
aad
xchg
cld
fcoms
push
pop
dec
mov
in
verr
cmp
adc
aad
dec
fldcw
push
shrb
inc
lock
add
mov
sub
out
and
and
bound
inc
xor
sbb
mov
xchg
rclb
mov
and
pop
and
int3
pop
aas
jle
dec
add
add
push
and
adc
and
test
sbb
push
das
stos
mov
filds
int3
mov
pop
enter
cmp
divb
jb
xor
mov
in
and
lods
xor
jae
enter
scas
in
sub
xor
ret
xchg
fbstp
mov
ds
shll
test
and
call
xor
aad
rcr
sbbb
call
stos
and
js
jp
mov
mov
lret
xchg
cmpsl
icebp
push
adc
xchg
and
and
mov
push
sbb
sbb
cmpb
not
sti
sub
jb
mov
clc
out
lock
jle
decl
adc
xchg
pushf
adc
mov
pop
xchg
and
pop
gs
stos
rorl
ds
push
or
push
jae
jg
xchg
js
pop
or
and
or
mov
add
test
and
push
call
lahf
subl
loope
int
add
xor
negb
push
fs
jno
adc
fsts
adc
in
push
in
mov
cltd
loope
and
pop
cmp
adc
jmp
push
push
sub
fimull
pop
data16
xor
imul
ss
mov
fmull
or
movsb
inc
and
xor
xor
inc
jb
push
dec
dec
sub
es
in
mov
cmp
or
cmp
fnstcw
jmp
popa
xor
mov
or
clc
dec
insb
cmp
repz
xchg
and
xor
jo
shlb
mov
mov
mov
jp
pusha
push
or
xchg
imul
mov
xchg
fstps
adc
stos
pop
adc
mov
addl
cmp
mov
xchg
les
fimuls
fs
movups
insb
xchg
push
fs
imul
push
insb
cld
mov
lahf
test
sbb
fmuls
mov
sbbl
add
outsl
test
push
mov
pop
mov
push
and
imul
xchg
sub
mov
jg
hlt
daa
outsb
das
pop
fcoms
dec
dec
push
dec
in
sar
jae
pop
inc
lock
push
test
pop
stos
add
push
test
xor
in
in
movsb
and
inc
in
fs
clc
pop
pushf
cltd
scas
insb
pop
inc
imul
gs
out
pop
cltd
iret
add
xor
sub
mov
pop
pop
pop
mov
fucomip
leave
mov
lret
mov
adc
and
inc
mov
pop
call
xchg
jbe
and
fiadds
mov
push
out
es
adc
icebp
cmp
sub
int3
inc
lahf
mov
xchg
in
xor
in
and
movsl
cltd
dec
add
inc
repnz
push
fstpl
jb
lods
sub
in
or
fcoml
add
push
jmp
mov
lcall
lfs
push
daa
sbb
pusha
movsl
inc
je
mov
push
jne
sahf
mov
dec
push
adc
bound
bound
test
and
and
add
scas
mov
cltd
lahf
fmuls
cmp
adc
or
jae
xor
and
or
dec
sarl
or
xor
fstl
frstor
fsub
movsb
and
pop
rolb
push
call
sbb
fwait
testl
rorb
inc
and
fcomip
jne
xlat
pop
cltd
jmp
lret
pop
cld
lea
sub
sti
mov
inc
clc
rcr
out
movsl
add
push
ror
jg
sahf
xor
or
and
xor
shl
mov
mov
push
popf
mov
pop
and
mov
mov
mov
daa
or
mov
call
cmpb
xchg
ljmp
dec
jecxz
lock
cs
stc
das
cmpsb
jmp
iret
daa
loopne
clc
jne
sub
jg
mov
push
sub
inc
sahf
in
push
nop
add
mov
popa
inc
jp
imull
cli
xor
dec
mov
cmp
ljmp
add
test
dec
hlt
or
subl
std
jne,pt
dec
cmp
das
lds
gs
lea
sbb
clc
mov
xor
popa
mov
inc
xor
pusha
mov
or
fucomp
imul
loop
call
sbb
movsb
in
push
movb
popf
adc
sarb
jnp
cs
inc
dec
mov
movsb
jnp
xchg
push
pushf
xchg
mov
sub
shl
or
test
pop
rcrl
push
push
rcl
outsl
pop
sub
push
stc
add
inc
dec
out
out
dec
in
dec
adc
scas
xchg
xor
mov
and
push
lcall
inc
pop
in
or
cmpsb
rorl
fs
mov
shlb
mov
inc
push
and
cmp
movsb
scas
dec
fwait
inc
dec
mov
cwtl
test
std
cli
push
mov
stc
aaa
mov
into
daa
inc
repnz
jb
divb
lock
dec
jp
inc
into
push
xchg
pop
mov
xchg
testl
sub
jae
inc
add
mov
jmp
movsb
movsl
pusha
mov
mov
dec
jp
in
mov
push
xchg
test
xor
or
sbb
mov
and
or
push
adc
mov
jmp
inc
add
dec
clc
ret
inc
add
inc
das
and
adc
ljmp
pop
in
add
push
inc
in
fsts
adc
sbb
fisubrl
daa
adc
xchg
mov
dec
dec
inc
nop
in
inc
add
inc
lahf
mov
pop
mov
movsl
adcl
mov
cld
adc
dec
pop
push
lahf
sub
inc
pusha
xor
dec
sbb
in
xchg
jge
out
into
sub
xor
out
cmp
adc
and
jmp
lahf
popf
and
push
adc
nop
daa
push
sub
mov
jb
pop
cmp
pop
inc
cmp
xchg
mov
mov
sub
inc
jl
aaa
cmp
push
pop
scas
ret
repnz
mov
mov
xchg
call
mov
xlat
out
repz
notl
cmp
xchg
or
jle
push
xchg
movsl
das
outsb
test
jns
inc
mov
pop
jnp
and
or
push
push
dec
push
inc
sbbl
movsb
xor
sub
and
push
and
inc
mov
mov
test
cmp
cltd
mov
inc
in
pop
xchg
cmp
adcb
cmp
and
gs
mov
insl
jne
insb
adc
test
out
in
xchg
rorb
pushf
adc
mov
test
add
call
mov
enter
jne
sub
jmp
insl
ret
and
dec
inc
mov
fstpl
lret
shl
ljmp
xchg
mov
lods
adc
sbb
addr16
or
adc
push
or
push
lds
mov
fldcw
jb
or
inc
and
cmp
push
adc
sub
sbb
pop
lock
add
sbb
fildll
icebp
and
cld
adc
inc
outsb
fdivp
or
je
cmp
call
fldenv
sub
jns
outsb
shrl
test
test
xchg
call
scas
push
cmpb
push
lock
push
sub
mov
out
push
mov
loop
enter
sar
sbb
xorps
mov
push
jg
push
pop
mov
ds
and
loopne
adc
jmp
mov
jg
jmp
cmp
ss
cmp
lret
jne
lret
push
dec
xor
jp
mov
xchg
sbb
lcall
cld
sub
sbb
popf
dec
jmp
in
push
add
inc
adc
pop
add
xchg
int3
data16
data16
inc
mov
sub
xchg
aam
push
sbb
mov
cld
pop
jb
push
xor
pop
pop
and
je,pn
test
dec
std
sub
jno
pop
inc
mov
rclb
inc
mov
data16
jns
xor
mov
xchg
dec
sti
js
adc
push
and
call
loopne
mov
imulb
cmp
xchg
fisubs
xchg
jle
push
loope
push
lahf
and
sti
or
mov
or
sahf
xchg
and
xchg
int
inc
aad
pop
or
test
arpl
add
or
js
les
mov
test
inc
and
mov
pop
rclb
push
jmp
in
mov
inc
pushf
movsb
cmp
or
mov
xchg
mov
loope
xor
testl
ljmp
in
fdivrl
cmp
ficompl
movsb
pop
mov
andb
dec
inc
inc
outsl
mov
leave
pop
loopne
or
test
cld
xor
aam
outsb
loop
or
scas
add
push
jns
sub
inc
lret
jno
bound
lahf
dec
lea
lock
stc
xor
or
bound
insl
mov
xchg
lea
test
adc
jg
bound
ljmp
push
scas
and
arpl
popf
ret
cs
jle
ljmp
add
cmp
sub
sub
adc
aad
mov
insb
aas
int3
sbb
fwait
arpl
stos
aas
add
stc
cmp
popl
jmp
adc
mov
sar
mov
mov
lock
dec
or
out
lea
pop
std
test
pop
and
add
inc
and
repnz
cli
sub
jo
addl
pop
pop
std
inc
mov
mov
sbb
imul
sub
call
jl
imul
and
sub
xor
push
ficompl
xchg
arpl
mov
mov
pop
and
mov
popa
ficompl
xchg
or
mulb
cmpb
cmp
jmp
push
mov
jns
int3
xchg
push
test
daa
les
dec
cmp
jne
and
pop
dec
jae
aaa
jne
outsl
movsl
insb
aam
mov
cmp
xor
xor
xchg
push
fwait
jbe
ret
cmp
xor
jle
jbe
sub
outsb
or
js
push
mov
jno
add
and
andl
cmp
testb
xchg
lret
pop
hlt
sub
mov
mov
mov
or
xlat
leave
push
sbb
push
std
push
int3
jle
jno
lea
sti
jecxz
push
or
cli
push
push
repnz
push
cmp
push
call
xchg
rorl
dec
incl
add
and
popa
sbb
dec
imul
xchg
addb
out
stc
loop
aad
adc
pop
es
arpl
inc
leave
sbb
xchg
lahf
add
sbb
inc
sbb
sbb
in
scas
sub
add
loope
pop
mov
fcoms
sbb
loop
hlt
adc
notb
aas
aaa
pop
repz
test
leave
jns
pushf
xlat
sbb
scas
or
dec
sbb
fcmovbe
jmp
pusha
loope
leave
dec
std
mov
sbb
adc
adc
fs
cmp
mov
push
push
cmp
aad
sub
repnz
adc
sbb
idivb
ret
push
pop
push
sbb
fstps
cld
mov
fs
test
std
and
cmp
cltd
cli
imul
mov
cmp
repnz
and
shll
pop
ja
adc
sbb
test
sub
sarb
and
inc
pop
testb
test
adc
scas
pop
fcmovnb
ret
adc
shlb
xchg
outsl
pop
jno
repnz
mov
dec
push
mov
inc
mov
je
dec
icebp
pop
xchg
xlat
ds
mov
mov
push
movsb
flds
call
mov
imul
cltd
addr16
or
sarl
dec
imull
ficoms
sti
in
cmp
test
lret
mov
dec
or
add
imul
les
push
pop
inc
mov
push
cmp
cmp
push
cmc
popf
je
mov
and
jecxz
mov
mov
add
clc
jns
inc
test
adc
and
xor
jmp
jae
ss
sbbl
pop
jne
inc
sbb
xchg
gs
js
add
mov
xchg
mov
lcall
sbb
xchg
xchg
jne
cmp
in
inc
adc
ss
mov
mov
hlt
mov
mov
fstpl
xlat
data16
lock
adc
scas
xchg
shrb
gs
mov
out
data16
mov
testb
push
outsl
int3
int3
nop
jmp
adc
adc
inc
inc
sbb
jecxz
dec
shll
daa
popf
jo
sbb
jnp
pop
pop
mov
or
mov
xor
sbb
cmp
cmp
xchg
cmp
ret
aad
jge
push
and
negl
jp
add
imul
clc
out
aaa
das
mov
or
cs
ds
jb
lret
inc
les
mov
in
jl
clc
and
jbe
sub
fdivs
and
add
mov
sbb
nop
orl
stos
cmp
dec
jns
jo
sub
cwtl
mov
cmova
dec
mov
in
test
fs
inc
data16
push
push
xor
hlt
imul
jmp
lock
sti
cmp
lret
pop
inc
adc
cmpsb
sub
clc
cmp
scas
je
xor
clc
cld
dec
test
add
inc
xor
or
jbe
and
movsl
daa
incl
aaa
mov
push
lds
sub
cmp
aas
jmp
stos
xlat
mov
mov
rclb
pop
cmp
clc
sbb
inc
xchg
mov
adc
or
mov
sbb
jns
repnz
cmpsl
pop
jne
cmc
les
leave
shrl
jl
sbbl
sbb
xor
int3
cmp
xchg
xchg
imul
adc
inc
lcall
stos
js
xor
mov
mov
test
inc
test
lods
mov
lock
das
lcall
mov
movsl
jle
mov
inc
mov
cwtl
aam
mov
out
fidivs
mov
jl
and
push
bound
jecxz
mov
adc
stos
dec
pop
jne
nop
lahf
sbbl
daa
cld
xlat
sti
lret
inc
add
notl
repz
mov
outsl
add
icebp
add
sbb
adc
mov
aas
add
lods
add
cmp
call
pop
ja
test
sub
clc
sahf
dec
add
ret
sahf
je
aad
fsubs
add
and
xor
in
mov
in
loop
and
cli
je
inc
and
in
sahf
mov
scas
popa
push
adc
rolb
je
jbe
lea
cmp
test
imul
cmp
and
push
ss
mov
sti
pop
inc
addl
mov
je
xchg
adc
pop
or
sub
aaa
mov
jg
enter
dec
mov
xchg
repnz
rcrl
aas
stc
sbb
push
dec
sbb
out
sbb
call
mov
mov
vmwrite
pop
call
adc
inc
leave
push
or
dec
sbb
in
leave
and
in
adc
xchg
xor
jae
mov
xchg
sub
cmp
pop
and
lock
das
or
add
leave
push
cmc
jl
pop
std
bound
fnstenv
sub
add
xchg
insb
cmp
sbb
mov
push
outsb
in
aam
fiadds
cmp
mov
cwtl
mov
sbb
aas
imul
ja
push
sarl
jmp
nop
mov
dec
adc
sbb
in
daa
and
mov
push
jmp
mov
stc
mov
iret
jecxz
aam
xor
mov
xchg
adc
mov
sub
push
movsb
or
nop
scas
mov
int
out
out
dec
std
cld
inc
dec
daa
mov
push
dec
inc
jno
mov
add
sub
imul
sub
pop
daa
or
xchg
jmp
cld
testb
les
inc
and
lods
iret
rorl
es
addl
std
dec
mov
mov
push
in
dec
pop
shrb
mov
add
or
pop
cmp
movsl
add
add
add
sbb
push
in
idivb
or
xchg
out
mov
or
and
and
inc
and
sti
scas
subb
popa
and
insb
test
jecxz
inc
popl
adc
mov
imull
cwtl
xlat
or
mov
jbe
xchg
mov
scas
mov
lds
fcomps
or
dec
sub
pop
inc
lds
inc
cmp
mov
add
inc
mov
fs
xchg
sahf
add
in
dec
sahf
ret
fdivrs
add
adcl
adc
movsb
sub
push
jle
mov
add
sbb
add
ficompl
jmp
cltd
jo
fisubrl
and
push
xlat
xchg
mov
addb
add
xor
sbb
imul
stc
mov
call
loope
mov
mov
inc
adc
daa
inc
sbb
les
inc
repz
loop
mov
jl
fcomps
lret
dec
insl
lahf
dec
jp
mov
mov
dec
loopne
int
cs
je
in
pop
cld
inc
push
fdivrl
loopne
lods
xor
sbb
aam
sbb
insb
inc
sbb
mov
dec
xchg
inc
jns
pop
punpckhbw
pop
pop
mov
test
cltd
adc
add
addr16
inc
repnz
mov
mov
push
xchg
inc
jns
cmp
lock
sub
jp
lahf
cmp
xor
repz
xchg
jmp
arpl
xchg
jp
test
out
mov
cwtl
push
les
fsubrs
ret
mov
aaa
cmp
xchg
add
xchg
int
jbe
aaa
or
ljmp
cli
pop
insb
pop
push
or
push
inc
and
mov
cli
sub
sti
movsb
and
xor
mov
mov
jg
loopne
sbb
mov
negb
dec
xor
movsl
les
int3
mov
xlat
call
and
es
repz
sub
movsb
fbld
data16
push
adc
xor
add
sub
lock
sti
outsl
subl
enter
push
shrb
sbb
es
decb
stos
fwait
es
imul
ficompl
xchg
ja
in
inc
cmp
imul
dec
cmc
daa
adc
add
jne
or
inc
dec
dec
push
aam
push
orl
sahf
push
or
stos
lods
mov
test
ljmp
and
call
inc
lods
mov
mov
mov
xchg
mov
orl
ret
xor
test
mov
dec
adc
pop
cld
rcrl
xchg
and
testl
inc
ret
pop
cmpsb
xchg
jbe
fsubr
movsb
in
xor
mov
jb
jl
call
xchg
jl
inc
mov
cmp
sbb
pop
data16
sbb
inc
cwtl
push
inc
pop
int3
sub
cmc
loop
popa
adc
test
cwtl
mov
jnp
fs
mov
pop
adc
mov
test
aas
loope
es
mov
sahf
mov
sti
shl
xor
hlt
lods
cmp
inc
pavgb
imul
mov
add
add
xchg
mov
push
jmp
pop
cmp
mov
scas
sbb
push
rorl
jecxz
push
xor
mov
clc
or
pushf
xchg
pop
push
imul
rclb
and
adc
imul
pop
push
adc
out
dec
xchg
xor
roll
mov
insb
xchg
inc
mov
jno
jl
daa
clc
mov
cmp
hlt
inc
cltd
push
cmpb
je
mov
jg
xorl
bnd
xchg
jl
xor
test
lea
flds
inc
push
ret
ds
adc
adc
movsb
lea
mov
pop
pop
repz
mov
call
imul
cmc
xlat
cli
icebp
movsl
or
dec
or
inc
ja
ret
stos
cmp
fwait
sbb
xlat
lret
xchg
roll
lds
and
mov
movsb
jae
movsl
fldenv
insb
add
push
jo
cli
jo
out
repz
aas
andl
lahf
push
jne
sahf
and
cli
arpl
mov
lock
xchg
inc
and
inc
lcall
and
sbb
imul
cwtl
imul
push
add
pop
jle
jnp
pop
jne
rorb
inc
jle
leave
pop
push
aas
jl
cld
and
push
lahf
pop
cmpsl
cli
and
int
mov
es
adc
jo
jg
lea
add
je
jl
add
mov
into
and
inc
pop
push
pop
imul
popf
testl
mov
scas
insl
inc
inc
popf
cltd
jnp
ljmp
mov
loop
add
outsb
push
xchg
xor
pop
leave
or
xor
or
mov
gs
mov
pop
inc
cmpsb
aam
fstpl
fbstp
sbb
jl
shrb
daa
jl
pop
test
je
ficomps
add
push
out
and
dec
mov
rcrl
inc
xchg
pop
insl
and
out
and
adc
rorl
mov
pop
adc
mov
aaa
jns
push
ss
adc
dec
adc
test
lcall
jns
es
es
xchg
les
cmc
jns
xor
jge
in
loop
mov
sub
lret
push
pop
or
push
or
xor
inc
mov
cwtl
xchg
movsl
jl
mov
es
and
arpl
adc
mov
sbb
test
rcrl
data16
outsl
stc
push
loop
fidivrs
repnz
pop
push
imul
jmp
dec
and
and
dec
cmc
dec
lods
mov
dec
loope
mov
fcoml
mov
jbe
mov
fistpl
enter
hlt
mov
pop
sahf
or
rorb
je
fcompl
pop
sbb
lahf
in
das
es
or
mov
dec
std
push
mov
or
sbb
fstl
pop
adc
enter
int
jne
cmp
lock
jl
mov
xchg
mov
js
xor
in
pop
cmp
push
lds
arpl
mov
aaa
outsb
sub
mov
repnz
cmp
das
test
aas
pop
pop
jo
data16
mov
xor
jbe
sub
and
xchg
xchg
cmpsb
mov
adc
add
or
cmp
aad
push
mov
cmp
bound
gs
xchg
stc
sub
jo
stos
clc
hlt
push
or
or
push
out
and
dec
push
dec
inc
sbb
mov
pushf
aas
orl
adc
flds
adc
or
pop
adc
mov
pop
aas
push
xchg
add
jbe
cli
jmp
inc
nop
xor
adc
ret
scas
scas
and
out
inc
mov
dec
adc
adc
and
js
dec
out
lds
outsb
push
xchg
les
sbb
out
aad
push
mov
cli
cmp
das
enter
inc
test
push
sbb
mov
push
jmp
adc
aad
mov
mov
xorb
add
mov
mov
inc
outsl
push
cmp
btr
das
push
mov
jle
mov
jne
push
movsl
pop
mov
jmp
dec
jae
inc
ret
cli
inc
mov
add
fsubl
lahf
add
fdiv
shrb
movsb
pop
xor
movsl
cmp
in
xchg
mov
mov
int
lock
lds
mov
inc
cmp
stos
mov
cld
mov
decb
jne
subl
mov
adc
mov
flds
lock
cmp
jno
out
sub
sahf
xchg
out
or
in
push
or
inc
ss
cs
icebp
mov
sti
push
mov
sti
ds
stos
push
sub
rcrl
mov
mov
imulb
and
stc
or
cmp
pop
xchg
pop
sub
jnp
jecxz
movb
and
cmp
jle
inc
push
inc
jb
sub
sbb
aas
add
sub
repz
enter
adcb
pop
outsb
push
add
jbe
mov
das
sub
mov
in
or
mov
pop
push
in
and
pop
fdivr
bound
xchg
pop
rcll
jg
pop
stos
mov
ret
sub
notb
fimull
in
sbb
scas
and
sub
loopne
ret
pop
sbb
pushf
sbb
out
lahf
daa
adcl
pop
xor
push
mov
scas
insl
in
pop
push
movsl
mov
fisubl
jo
cli
test
xor
insl
pop
sar
jl
cmp
sub
mov
scas
push
mov
lea
and
sub
pop
mov
xor
cli
push
fildl
ret
cmc
push
aam
test
or
js
xchg
or
mov
xor
es
jge
sti
xchg
and
fwait
ret
inc
dec
shl
stos
dec
jo
insl
xchg
cli
dec
jmp
pop
sbb
ljmp
or
dec
push
in
sbb
xor
mov
lods
rcrl
push
xchg
rcr
pop
or
mov
out
or
fiaddl
push
int
in
mov
jmp
adc
pop
mov
test
addl
and
aaa
inc
or
pop
adc
and
adc
jecxz
or
movsl
mov
test
lcall
push
cltd
push
das
insl
jp
lock
pop
test
push
ljmp
ficoml
clc
sbb
mov
xor
outsl
add
or
and
push
call
xor
outsb
into
in
pop
in
or
icebp
rorl
xor
jb
das
sub
stos
xchg
or
movsb
xor
out
push
push
clc
sbb
test
inc
mov
and
lock
mov
and
mov
inc
and
mov
push
rcr
call
rclb
es
scas
jne
sub
add
das
stos
mul
add
lods
push
push
addb
decb
cmp
and
inc
lds
je
push
or
cli
push
cmp
sub
int
cmp
mov
loopne
stos
insl
jae
sub
cld
add
pop
mov
lods
inc
je
inc
xlat
ds
cld
push
or
cld
in
sti
cmp
push
xchg
leave
jmp
rorl
dec
lds
cmp
stos
in
mov
pop
in
aaa
call
xor
add
clc
mov
movsl
fnstenv
push
or
inc
test
inc
ljmp
add
xchg
pop
jle
addb
scas
jnp
clc
xchg
adc
sti
jle
mov
icebp
xchg
mov
xchg
mov
xchg
aas
call
dec
push
adc
outsb
inc
imulb
pop
arpl
jg
dec
add
add
jo
jnp
lods
push
out
inc
sti
dec
and
mov
mov
dec
adcb
xchg
stos
decl
fwait
add
sub
mov
test
out
or
test
sbb
jae
sbbl
sub
in
loope
sub
push
bound
stos
or
lahf
push
pop
mov
pop
bound
insb
adc
or
mov
push
jmp
jge
pop
push
div
insb
scas
sub
xchg
ret
jb
pop
mov
jl
or
jbe
or
popa
mov
cs
imulb
mov
push
jne
mov
or
js
push
mov
mov
scas
hlt
mov
push
mov
jae
repnz
dec
xlat
mov
fldt
lahf
push
mov
cmp
xor
scas
loop
mov
lahf
push
push
xor
push
xchg
mov
sbb
in
xor
lcall
sti
adc
sbb
repnz
sub
mov
push
xor
das
in
fdivrs
movsl
pop
shll
fnstenv
lahf
sbbl
loope
jb
jg
inc
jmp
xor
in
xor
clc
movsl
dec
add
and
cmc
dec
call
jmp
adc
rcll
repnz
cli
xlat
pop
cmp
sar
incb
aad
pop
pop
lea
cmp
pop
push
lea
mov
and
inc
pop
sahf
xor
sbb
or
fs
es
mov
or
jge
push
rclb
xor
stc
fisttps
xor
cwtl
in
mov
or
or
xchg
inc
in
rolb
adc
inc
mov
sub
mov
shl
mov
sbb
cld
cmp
jl
push
sbb
or
inc
adc
fwait
mov
icebp
xchg
in
inc
dec
sbbl
push
add
cmp
dec
mov
mov
imul
inc
lret
imul
bnd
ret
push
addr16
mov
and
mov
sbb
addr16
inc
mov
aaa
cmp
inc
xchg
lea
bound
test
mov
std
and
push
out
xchg
movsb
cmc
aas
das
aam
cmp
pop
clc
lds
je
lret
pop
push
mov
jno
out
sub
sbb
jecxz
lret
adc
das
lock
int
dec
push
jae
cli
xchg
stos
and
cmp
jmp
roll
mov
pop
mov
icebp
cmp
sub
add
cwtl
testl
mov
lock
and
jo
cmc
nop
pop
fadds
xchg
ret
inc
fs
leave
pop
shll
loop
cmp
add
push
lcall
push
fstps
mov
mov
fs
fs
cli
scas
xchg
or
pusha
adc
jne
pop
enter
lds
and
sbb
iret
or
mov
out
ret
dec
inc
add
rorl
inc
xchg
addl
out
dec
dec
add
add
aaa
lods
sahf
inc
mov
sub
xor
sub
ret
mov
or
adc
xchg
mov
movsb
jb
pop
hlt
ljmp
sbb
mov
xlat
mov
loope
xor
cmpb
fmuls
fiaddl
movsb
cld
out
cmpsl
jo
xchg
cmp
movsl
imul
std
mov
push
scas
insb
imul
cmpsl
or
dec
fstps
adc
out
mov
jmp
sub
outsl
mov
pop
rcrl
and
dec
or
adc
and
std
xchg
mov
push
lret
out
xor
imul
stos
inc
ja
std
xchg
adc
xor
sti
inc
add
aas
sub
fldcw
rcll
dec
jge
repz
test
jmp
adc
or
inc
fs
ss
inc
inc
repnz
and
pop
dec
inc
push
in
cmp
inc
cltd
sub
or
xchg
push
rcr
mov
pmaddwd
mov
fs
xorl
outsb
push
dec
push
sub
or
sub
fwait
sub
xchg
push
mov
in
pop
push
jmp
cld
mov
ds
clc
add
mov
fsubrl
cli
mov
lret
lahf
mov
sahf
dec
add
bound
mov
insl
push
add
mov
out
and
cli
cmpsl
add
inc
daa
mov
and
test
cmp
mov
insl
dec
shrl
dec
mov
lret
enter
or
shr
sbb
popa
dec
xchg
jb
adc
pop
jl
call
inc
sub
mov
jmp
xor
dec
or
xchg
les
iret
add
in
loopw
and
add
xlat
fdivl
xchg
gs
and
daa
pop
lret
push
xor
jbe
adc
add
cmp
pop
push
popf
mov
inc
popa
and
cli
pop
add
in
pusha
in
jbe
xchg
cmp
ret
push
test
push
rolb
rolb
nop
mov
leave
test
push
and
stos
or
int3
data16
mov
xor
ds
lock
rclb
and
stos
out
xchg
arpl
incl
js
out
ret
lret
or
add
lea
push
adc
fsubrs
push
add
fdivrp
popf
mov
daa
xor
call
inc
mov
push
mov
lds
dec
or
push
sub
or
addr16
xor
mov
cld
add
push
aam
jbe
adc
xchg
mov
aaa
aam
adc
dec
cmp
or
ds
addr16
and
bound
pusha
mov
fucompp
dec
fisubl
sbb
sahf
inc
push
call
mov
mov
xchg
push
push
sbb
imul
jp
int3
movsb
lahf
jne
mov
stos
sarl
cltd
mov
xor
cli
mov
dec
mov
add
and
fimuls
push
out
nop
jnp
add
cmp
sub
outsb
ljmp
inc
dec
popa
inc
in
into
je
mov
ljmp
mov
aam
mov
mov
loop
lret
dec
call
imul
dec
inc
sub
loope
orl
push
into
sub
mov
and
jecxz
mov
pop
jl
loopne
lods
and
movsl
mov
cltd
aaa
xor
push
mov
and
mov
je
pop
mov
or
out
in
mov
sbb
push
and
leave
sub
jbe
or
hlt
cmpsb
aas
sub
xor
lock
mov
vmovlps
mov
inc
das
repnz
inc
lretw
and
outsb
push
xor
pop
push
shll
ljmp
mov
mov
ja
sub
sub
lock
mov
push
add
les
inc
jne
incb
mov
add
and
in
push
mov
pop
push
mov
bound
stc
ljmp
xor
lahf
cs
aam
cs
mov
movb
or
sbb
outsl
es
daa
bound
insb
dec
lret
mov
or
mov
movsl
pop
xchg
repnz
insb
out
fdivrs
push
mov
adc
popf
sub
push
push
in
lods
sub
jb
bswap
or
cmp
or
dec
add
sbb
rorl
push
sbb
adc
sbb
adc
push
psubsw
call
icebp
ret
adc
and
jb
cld
push
pop
cmp
pop
cmp
pusha
outsb
xchg
mov
push
dec
dec
xor
das
push
jmp
xchg
jo
out
inc
xor
jo
and
adc
lock
sub
add
push
mov
jb
je
inc
sarl
sahf
int3
cmpsb
nop
cmp
shlb
sbb
scas
mov
int
pop
lea
sahf
mov
lock
lods
mov
xor
and
jnp
shrb
shl
mov
xor
imul
xor
push
and
movsl
xchg
sub
cwtl
xchg
adc
sarb
es
mov
cmc
mov
jno
fs
inc
fistpll
push
inc
pop
pop
pop
das
stc
dec
aad
add
push
dec
mov
popf
std
and
add
loope
mov
jl
loope
repnz
mov
insb
xor
cmp
cli
cld
cld
or
fstps
lcall
es
popf
adc
xor
lret
loop
outsl
pop
hlt
lret
push
nop
clc
jmp
and
or
les
inc
outsl
and
out
leave
pop
leave
std
jae
in
mov
sub
cmp
and
sarl
and
aad
xchg
ja
sbb
cmc
sbb
sub
and
cld
mov
mov
fs
clc
aam
push
sub
push
fs
imul
xchg
dec
xlat
and
movb
jg
call
jle
iret
stos
jnp
xor
or
stos
mov
mov
shrl
data16
xchg
in
mov
dec
sub
iret
das
mov
ljmp
scas
stos
imul
sarb
add
js
xchg
scas
pop
aaa
add
lea
roll
dec
sbb
test
xor
cli
mov
xchg
mov
pop
add
cmp
clc
cmp
scas
add
jp
mov
xor
cli
sub
addb
sbb
cmpsb
lahf
xchg
int
pusha
data16
pusha
mov
inc
cmp
sub
loopne
testb
pop
adc
repnz
push
xor
out
mov
stos
jae
and
dec
inc
testl
test
das
test
push
subl
std
popf
clc
cmpsl
add
jp
cmp
and
jecxz
dec
sub
pop
xchg
dec
sub
and
roll
or
inc
jecxz
js
movsw
mov
movsb
xor
mov
xor
je
add
push
andb
inc
xor
in
push
lds
mov
push
mov
fmul
mov
inc
andb
or
mov
fildll
lods
sti
stc
or
mov
inc
push
mov
dec
fisttps
and
cmp
and
xchg
xchg
es
sub
inc
mov
sar
push
jns
out
xchg
cmp
and
cmp
hlt
stos
push
clc
stc
sub
or
xor
mov
adc
shll
push
out
jle
inc
mov
lods
mov
mov
dec
movsb
sub
pop
adc
pop
repz
inc
add
xor
adcl
push
out
inc
pop
in
push
and
lret
add
mov
loop
out
outsl
fsubs
sbb
sarb
mov
add
pop
int3
pop
mov
adc
sbb
push
add
pop
divb
outsb
dec
shll
pop
push
cmc
inc
ret
decl
xor
out
mov
xchg
js
add
mov
xchg
sbb
sbb
nop
neg
out
add
fs
push
xlat
add
test
jmp
data16
pusha
mov
mov
or
mov
ljmp
pop
xchg
jb
xor
ret
mov
andb
mov
and
jbe
push
loope
and
push
push
les
iret
in
push
sub
inc
inc
scas
js
rcrl
imul
add
mov
test
testb
dec
or
lahf
scas
or
xor
cld
cmp
or
fdivrs
add
xor
adc
pop
inc
sbbb
and
movsl
sti
adc
adc
rcrl
adc
dec
jecxz
fadd
stc
xchg
cld
mov
outsl
in
test
push
popf
cmp
add
popf
int3
add
dec
shr
xchg
and
jge
mov
push
jnp
push
and
jmp
loopne
fdivrl
loope
sbb
sahf
cmp
sarl
xchg
dec
aaa
inc
add
into
jmp
lods
dec
push
pop
sub
lods
roll
add
xchg
cmp
adc
je
cmpsl
sbb
addr16
iret
movsb
cmp
bound
mov
lods
sub
sub
jo
cli
or
in
inc
push
leave
push
out
mov
sub
adc
and
icebp
sbb
inc
xor
pop
popf
mov
inc
sub
dec
mov
repz
movsl
lea
fistpll
mov
cwtl
cmp
mov
mov
add
pop
dec
or
and
xchg
daa
sar
add
hlt
dec
cli
test
lods
je
cld
lea
cmp
fldt
inc
inc
inc
test
cmc
xor
mov
addl
jmp
test
insl
add
push
pop
push
pop
sbb
lods
mov
ret
ret
out
dec
js
sub
and
and
sub
push
in
xor
push
pusha
sub
add
push
in
xchg
pushf
jbe
adc
ss
xchg
xorl
push
jl
and
mov
adc
or
push
mov
xor
out
rcll
inc
lret
je
fmul
into
or
in
xchg
mov
inc
cmpsb
and
scas
or
in
xchg
push
in
inc
xchg
movsb
mov
in
xchg
adc
xlat
data16
cmpb
inc
dec
fstps
push
adc
sbb
dec
fstl
test
sbb
sbb
xchg
sbbl
adc
or
add
sbb
outsl
xor
and
rorl
aam
fdivp
inc
mov
sbb
enter
das
xchg
ficoms
inc
sbb
movsb
add
and
in
xchg
mov
fwait
test
ss
aad
fisttpl
dec
jb
enter
dec
movsb
pop
xchg
inc
push
inc
adc
xor
jecxz
adc
mov
or
mov
pop
ret
or
push
adc
movsb
out
inc
adc
hlt
push
jmp
cs
loope
sub
jns
inc
and
les
fwait
mov
sbb
movsb
and
popf
push
inc
jge
int3
xlat
and
movsl
leave
push
mov
xchg
call
xor
xor
jp
sbb
xor
daa
xchg
push
mov
add
and
sub
pushf
or
dec
inc
ss
adc
fmuls
popa
fwait
or
imul
or
mov
adc
scas
and
pushf
or
xchg
mov
sbb
lds
lock
dec
sub
stc
sbb
dec
std
fimull
inc
xor
xor
mov
je
and
or
fwait
sbb
movsb
push
and
test
out
or
push
ss
and
in
sub
in
in
sbb
test
leave
sub
shl
cltd
or
scas
xchg
inc
adc
mov
xchg
pushf
cmp
and
lret
in
adc
leave
clc
adc
in
cltd
movsb
enter
rorb
enter
push
dec
std
push
dec
inc
and
adc
mov
dec
xor
and
mov
and
mov
sbb
icebp
xor
hlt
cmpsb
push
clc
in
and
adc
mov
dec
fdivrl
and
jge
int3
xchg
gs
les
mov
test
xlat
and
in
xchg
and
mov
xor
sub
pop
adc
sbb
push
test
fwait
cmpsb
subl
fwait
cwtl
and
sbb
or
hlt
js
jmp
add
xchg
mov
xor
cld
test
push
clc
and
lock
push
call
int3
lahf
pop
popa
lods
mov
stc
lahf
sbb
enter
sub
and
adc
ss
and
push
test
or
and
push
je
and
adc
fs
int
mov
inc
and
in
xchg
adc
push
and
in
push
cmp
and
adc
mov
dec
adc
and
push
test
or
and
in
xchg
in
cli
inc
adc
fmull
ss
jge
int3
xor
xchg
les
stos
dec
lods
cmp
and
jmp
mov
mov
orb
in
xchg
je
push
adc
fwait
insb
jns
xor
mov
jb
and
add
pop
dec
inc
in
inc
cmp
mov
les
cltd
cmp
adc
or
xor
adc
cltd
adc
sbb
iret
xor
call
xor
and
mov
decl
ss
adc
sahf
sub
aad
and
int
ret
and
loope
sub
mov
xor
mov
mov
notb
scas
xor
sbb
inc
and
test
outsl
mov
mov
jbe
xchg
adc
inc
sbb
mov
add
and
in
xchg
mov
fwait
xchg
ss
xlat
xorl
push
outsb
bound
adc
dec
dec
push
cmp
and
jmp
inc
xchg
xchg
pop
cmp
xor
cmpl
push
mov
or
dec
push
ss
or
call
out
and
add
xchg
dec
pop
fiadds
lret
mov
mov
lods
xchg
mov
movsb
inc
adc
fwait
stos
dec
or
mov
mov
push
xchg
xchg
adc
nop
dec
jbe
push
outsb
and
add
iret
pop
pop
inc
divl
push
dec
lcall
mov
sub
xor
fwait
sub
and
mov
sbb
mov
sbb
decb
sbb
inc
pop
xor
out
clc
mov
mov
enter
rolb
dec
outsl
ss
stos
pop
push
scas
mov
mov
mov
pushf
mov
add
inc
jb
ret
js
pop
mov
dec
xchg
dec
popl
adc
fwait
inc
dec
out
ss
push
and
adc
mov
adc
and
pop
sbb
sbb
divb
adc
mov
dec
fidivrs
and
jg
into
xchg
addr16
movb
mov
movsb
mov
mov
arpl
repnz
push
push
dec
and
cltd
adc
sbb
xor
and
cltd
or
bound
dec
mov
mov
in
xchg
and
xor
mov
and
and
add
xchg
mov
inc
mov
sbb
mov
sbb
in
sahf
test
cli
out
and
adc
mov
dec
fidivrs
and
jg
mov
loope
and
sbb
mov
add
and
in
xchg
mov
fwait
xchg
ss
xlat
xorl
push
outsb
bound
adc
dec
dec
push
cmp
and
lret
sbb
jmp
ds
or
mov
dec
es
and
mov
push
xchg
mov
insl
mov
mov
mulb
pop
sub
inc
push
out
and
adc
mov
dec
lret
and
adc
mov
inc
add
stos
sahf
or
and
in
xchg
xchg
fwait
jle
xlat
ss
filds
pop
and
adc
inc
dec
dec
cmp
and
xchg
add
xchg
fwait
pop
xor
sub
mov
mov
mov
add
add
lcall
mov
dec
out
clc
and
ja
xchg
jg
into
inc
addr16
mov
mov
mov
inc
adc
fwait
lcall
orl
and
adc
pusha
dec
data16
and
testl
dec
inc
out
inc
cmp
sub
xor
cmp
and
fwait
sbb
adc
mov
push
add
pop
add
xchg
inc
pop
ljmp
enter
shlb
lods
push
sbb
cmp
and
pop
inc
xor
and
push
out
jmp
in
xchg
fwait
rorb
ss
and
shll
mov
dec
jne
dec
cmp
aam
add
daa
ss
lea
push
jge
adc
mov
or
push
mov
pop
imul
sub
jne
pop
popf
cmp
les
mov
or
push
lcall
pop
fwait
inc
ret
cmpsl
jp
enter
mov
and
push
lock
mov
mov
dec
xchg
ret
pop
cmpb
loopne
hlt
call
scas
pushw
add
cmp
add
adc
cmpl
mov
nop
adc
lret
mov
mov
push
js
push
aas
outsl
cmpsl
xchg
push
in
or
fucom
dec
mov
mov
inc
es
cmp
dec
fnstenv
fiadds
adc
ret
xchg
sbb
out
inc
inc
jno
push
add
push
pop
adc
ret
adc
push
test
stc
xchg
mov
adc
cltd
adc
add
sub
fidivl
sbb
jne
pop
inc
mull
scas
push
fistl
call
xor
or
outsb
mov
adc
xor
xchg
xor
mov
scas
gs
nop
push
mov
into
sub
movsl
mov
fdivr
mov
mov
or
add
insb
cli
cmp
xchg
mov
mov
jb
mov
sub
pop
adc
push
adc
inc
sub
or
cmp
inc
out
aam
mov
cmp
mov
push
xchg
mov
data16
mov
push
subl
cmp
mov
adc
js
rolb
push
adc
cmp
call
mov
sub
adc
adc
addr16
jno
xor
data16
xor
jle
and
adc
or
mov
mov
cli
outsb
mov
dec
mov
movsl
adc
mov
and
pushf
mov
xor
jbe
add
nop
adc
fcoms
insb
push
inc
mov
or
adc
pop
add
add
push
and
outsb
fs
xchg
push
sub
xchg
cmp
push
xchg
adc
sbb
je
push
loop
lret
call
cli
jl
out
addr16
cs
mov
out
and
mov
sbb
enter
enter
les
insb
ud1
insb
mov
test
pusha
fists
and
int
call
push
cmp
mov
cmp
and
adc
inc
test
cld
push
xor
cs
es
sbb
repnz
sbb
pop
xchg
or
push
dec
fwait
and
or
stc
adc
mov
adc
mov
cmp
int3
dec
lahf
fidivs
and
and
hlt
mov
repz
fst
cmp
pop
push
pop
push
push
loope
rclb
mov
xor
imul
mov
mov
mov
and
je
jae
popa
adc
std
mov
enter
outsl
cmp
push
sti
or
stc
sub
push
and
js
or
jae
rol
push
insl
xchg
sbb
aaa
cli
inc
nop
je
jb
adc
push
lret
pop
pushf
jnp
test
cli
test
cmp
mov
sub
movsb
adc
sub
mov
mov
rclb
mov
push
gs
dec
and
repnz
roll
dec
mov
mov
inc
xor
xor
push
sahf
adc
cmpsl
flds
sbb
scas
mov
pop
lss
mov
pop
add
mov
xchg
outsl
test
nop
loope
test
icebp
or
ss
or
xor
mov
pop
lods
mov
pop
lods
mov
pop
sbb
jecxz
cmc
insl
adc
jge
lods
scas
add
pop
mov
cmp
xlat
call
mov
cli
fcoms
inc
adc
mov
jg
lods
es
in
testb
xchg
stc
sbb
call
jnp
rorb
into
cli
mov
nop
sarb
xlat
insb
clc
add
or
add
stc
push
jbe
call
iret
xor
or
je
inc
mov
xor
mov
cmp
mov
mov
push
lahf
in
and
jl
or
iret
pop
pop
pop
mov
pusha
sbb
adc
in
sub
gs
inc
movsl
lahf
jp
inc
push
call
or
add
shlb
push
std
push
push
sub
call
movsl
outsb
nop
push
call
cmpsl
sub
pop
repz
adc
loop
xor
pop
in
addb
push
in
sbb
notb
push
mov
scas
xchg
xchg
mov
sub
repz
scas
daa
dec
incb
lods
xor
mov
je
in
push
inc
push
out
movsb
add
sbb
push
mov
dec
mov
lahf
cmc
cmp
rolb
repnz
popa
adc
pmuludq
test
adcl
adc
push
xchg
push
pop
enter
hlt
cld
push
adc
xchg
adc
lds
pop
jns
xchg
je
bound
inc
repz
cld
xchg
lcall
test
inc
scas
mov
sbb
sbb
aad
sub
push
adc
push
bnd
repnz
adc
aaa
hlt
jns
push
inc
add
and
sbb
add
aas
pop
mov
ja
mov
mov
ss
and
addl
adc
mov
inc
xchg
fstpl
sub
pop
mov
mov
xchg
and
push
inc
sbb
cmp
mov
int3
jne
cmp
stos
pop
xor
pop
adc
lods
adc
inc
mov
inc
adc
fwait
dec
fbstp
jle
aas
sbbl
and
adc
lods
mov
ret
or
in
xchg
push
leave
push
sub
push
adc
jecxz
mov
xchg
pushf
and
add
and
hlt
and
ja
adc
jo
jle
jl
mov
adcb
push
aam
and
adc
adc
xchg
popf
pop
push
inc
fbstp
xorb
shlb
in
xchg
adc
push
addr16
and
adc
lahf
lret
sub
ss
push
jae
ret
xchg
mov
sub
sbb
push
and
and
cltd
adc
fmuls
ss
and
inc
movsb
mov
ficoms
push
and
jmp
push
and
adc
mov
inc
xchg
int
loopne
addr16
lcall
and
in
xchg
cwtl
sub
adc
je
or
sbb
push
pop
into
and
adc
cmp
and
xchg
add
mov
fimull
movsb
cmp
and
mov
push
outsl
xchg
sub
and
inc
sbb
xchg
adc
rcrb
inc
or
dec
rcl
dec
xor
mov
aam
and
add
dec
or
adc
test
sbb
and
add
fs
dec
mov
movsb
nop
mov
jbe
xor
cs
push
push
inc
in
push
push
and
adc
pushf
jb
sub
push
mov
les
out
jnp
ret
jle
or
jb
repz
imul
outsb
insl
imul
fsubs
or
mov
jle
fistps
inc
sti
xor
xchg
cmp
sarl
out
inc
sbb
stos
jne
mov
or
sub
and
orl
push
inc
mov
call
fimuls
ss
pusha
sub
cmp
adc
cmp
and
xor
sbb
lea
inc
mov
mov
jle
mov
pop
mov
and
cmp
mov
and
adc
lahf
sub
test
lret
or
lcall
mov
push
enter
cmp
inc
push
scas
adc
or
jbe
jl
pop
test
push
aam
and
data16
add
or
cmp
mov
push
cltd
loopne
add
popl
outsl
dec
scas
sbb
mov
sbb
or
dec
adc
mov
rorb
cmp
es
shr
jo
jno
mov
inc
outsl
stos
push
xlat
popa
dec
ja
in
ret
push
inc
adc
pop
aad
jbe
push
fs
insl
fistpll
push
enter
stc
in
add
xchg
sbb
push
cld
jne
jge
sarl
std
cmovb
int3
lods
jecxz
ret
cmp
and
adc
pop
pop
sub
cmp
dec
int
add
ret
jp
insl
pop
jecxz
push
sub
enter
dec
sub
jmp
add
stos
ds
in
jno
test
push
xchg
mov
popf
inc
push
jo
or
adc
cmp
fiaddl
jne
lds
cmp
xchg
je
cmp
sbb
cli
cmp
sbb
inc
inc
in
jge
xchg
icebp
cltd
mov
inc
out
popl
xchg
stc
inc
cli
es
pop
pusha
push
dec
addr16
jl
iret
js
mov
mov
nop
js
pop
mov
jle
xchg
push
lret
fs
mov
test
scas
out
ja
mov
push
outsl
les
out
pop
push
loop
dec
add
fsts
into
fcomps
push
inc
push
fildll
cltd
into
cltd
pop
dec
jns
mov
idivb
icebp
mov
loopne
and
or
add
mov
cld
arpl
aam
xchg
or
mov
xchg
and
ss
or
push
outsl
mov
mov
sub
xor
flds
adc
push
adc
dec
jg
push
mov
add
pop
je
dec
fwait
add
repz
or
inc
stc
aam
pop
jo
push
jge
xchg
and
loopne
loope
scas
pusha
or
adc
jnp
cmpsb
test
and
sub
out
dec
xor
push
and
fidivrl
lock
int
hlt
jo
lahf
inc
mov
jecxz
out
xor
sbb
movsb
cltd
adc
in
mov
lock
xchg
test
dec
js
mulb
int3
adcl
mov
int3
testb
insb
jmp
pop
add
out
addl
in
lcall
sbbb
les
cmp
ret
call
pop
xor
mov
hlt
mov
push
pop
xorb
popf
movsb
dec
ja
jbe
pushf
mov
sub
jno
outsl
mov
es
fucomi
pop
mov
adc
jo
xor
dec
xchg
incb
mov
jbe
sub
das
stos
fwait
dec
adc
cmp
movsl
mov
dec
int3
psubd
mov
inc
cmpsl
insb
mov
dec
mov
jg
jbe
xor
pop
cmp
lret
jae
shlb
adc
jno
sar
jae
and
xor
dec
lods
xor
add
mov
pop
repnz
insb
jo
or
call
int
xchg
adc
cltd
jns
and
inc
and
das
mov
lret
push
mov
xchg
dec
sar
dec
addr16
popa
adcb
push
arpl
movsl
and
cmp
mov
mov
inc
lret
push
fmuls
iret
adc
xchg
faddl
out
jb
mov
pop
rcll
movsl
dec
fs
test
loopne
into
flds
ret
aam
or
mov
adc
aad
xor
pop
push
xchg
out
inc
jns
cmp
into
sti
lahf
lret
je
sbb
fdiv
adc
mov
mov
jns
out
mov
arpl
dec
cwtl
pop
cmp
sub
mull
inc
sub
sub
ficoml
je
icebp
lds
pop
mov
xlat
sahf
jb
push
push
iret
adc
mov
add
xor
lock
lahf
xchg
in
or
fmul
push
ljmp
add
xor
sbb
or
sbb
fs
and
in
popf
dec
xor
arpl
cmpsl
adcl
cld
loopne
ret
and
xlat
jle
xorb
cld
aam
es
xor
mov
scas
in
mov
jl
inc
fidivl
and
test
cmpl
push
inc
outsb
es
adcl
bt
pop
mov
cli
xor
lds
xor
ret
pop
sahf
jo
push
add
test
or
adc
outsb
xchg
inc
xor
lcall
xor
and
ja
fwait
outsl
jle
bound
inc
loopne
ret
stc
xchg
and
push
xchg
scas
mov
jb
ss
cmp
ss
dec
lret
jmp
mov
adc
les
sbb
popa
out
jmp
pushf
push
mov
sub
add
mov
add
fisttpl
add
subb
sub
push
insb
call
stos
bsf
jne
sub
adc
adcl
cmp
stos
pop
ficomps
mov
dec
pop
cmpl
xor
cmc
sbb
arpl
sarb
popa
xchg
xchg
gs
insb
ljmp
xchg
mov
call
ljmp
xlat
pop
into
mov
lods
fcomp
mov
mov
ljmp
pop
adc
test
decb
xor
fnstenv
or
and
dec
add
out
adcb
sub
pushf
pop
mov
mov
xor
jmp
cmpsl
adc
out
movsl
outsl
sub
or
and
jne
insl
xchg
add
clc
cmpsl
jae
in
ljmp
xchg
jp
data16
pop
mov
jns
dec
repnz
sbb
out
clc
cmpsl
pusha
fs
inc
imul
xchg
jbe
push
outsl
inc
inc
fdivl
cwtl
dec
cmp
push
inc
int
cmp
cmp
hlt
dec
mov
mov
adc
adc
sbb
inc
inc
fnsave
inc
sti
cwtl
dec
inc
in
rorb
push
fcomps
inc
sub
cltd
pop
inc
dec
jl
subb
sub
dec
mov
clc
jecxz
mov
jge
sub
or
fnsave
lds
mov
mov
push
movsl
inc
add
sub
hlt
inc
sbb
cs
bound
mov
rsqrtps
cmp
insl
sub
jae
sub
sar
push
fwait
daa
sub
andl
dec
daa
adc
sbb
jbe
addr16
pop
out
xchg
or
dec
lods
ret
inc
test
pop
jle
xor
test
sbb
inc
jae
cmp
ffreep
mov
and
cltd
dec
adc
inc
sbb
xrelease
mov
inc
imul
cmp
fs
sub
or
data16
call
push
push
test
pop
shlb
daa
push
pop
inc
aaa
push
or
dec
and
push
dec
mov
movsb
ret
mov
add
movsl
cmp
leave
xchg
or
xchg
out
add
mov
and
aam
inc
roll
jae
push
insl
cmp
imul
pop
adc
test
repz
std
arpl
cmpsl
mov
mov
ret
mov
adc
push
adc
cwtl
cmpsb
cs
and
and
cmp
add
xor
or
aaa
testl
add
or
push
and
add
mov
cltd
fs
out
mov
insb
mov
jmp
popa
pop
adcb
push
push
clc
inc
inc
jge
cli
mov
jae
or
aam
cmp
pushf
inc
jge
sub
mov
mov
mov
cltd
xor
test
adc
test
xor
outsb
repz
push
leave
dec
adc
lods
inc
push
lcall
mov
imul
in
mov
and
pop
mov
rol
adc
test
mov
jle
rorb
popf
outsb
jle
jo
in
addr16
dec
into
dec
in
pop
cmpsb
scas
push
adc
fs
mov
mov
pop
dec
push
mov
cmp
jo
add
outsb
mov
mov
dec
fwait
cmp
push
cmp
movsl
lds
insb
out
movsb
sbb
and
push
pop
aam
xchg
push
hlt
fidivrs
fcomps
mov
xor
imul
pop
data16
lcall
inc
sbb
inc
ror
push
adc
xchg
inc
xchg
mov
pop
cmpl
cmp
js
lret
insb
fistps
mov
pop
add
fildl
or
je
movsl
mov
dec
pop
mov
nop
cmp
inc
xchg
fcomps
int3
mov
mov
sub
leave
nop
gs
cmp
lret
pop
int3
pop
es
fs
xlat
lods
outsl
and
imul
push
fidivl
gs
inc
fistps
xchg
scas
in
inc
std
leave
cmp
push
push
hlt
inc
mov
dec
inc
nop
lea
hlt
adc
mov
mov
adc
mov
mov
rolb
test
js
xchg
dec
inc
insb
test
and
xor
shrb
dec
mov
or
or
adc
data16
outsb
push
clc
scas
push
mov
mov
ja
push
add
fldt
mov
lods
push
iret
imul
stos
xor
xor
mov
jne
mov
adc
inc
imul
mov
inc
mov
mov
push
dec
and
mov
cmp
add
adc
sub
push
jg
mov
push
cld
divb
and
mov
adc
cmp
pop
lods
push
outsl
shll
jne
push
inc
subb
addr16
push
jb
stc
fs
push
pop
jae
mov
out
clc
sbb
push
in
shlb
pusha
add
arpl
call
ret
push
cwtd
test
push
dec
mov
dec
cmp
enter
dec
add
push
inc
mov
jmp
daa
inc
inc
fwait
pop
and
shlb
sbb
inc
sbb
icebp
testl
sbb
sbb
inc
jae
cltd
fs
hlt
cmp
adc
pop
and
xchg
dec
or
jno
cli
ja
or
loop
lret
jge
pop
mov
andl
mov
lret
xchg
xor
cwtl
lods
jmp
push
fidivl
cmp
cmp
fwait
push
mov
push
leave
jnp
mov
loopne
sub
jp
push
ljmp
fstps
aam
jo
cmp
psllw
adc
cmc
xchg
mov
mov
mov
cmp
sub
pop
push
xor
xlat
and
cwtl
sarb
xchg
pop
lea
xchg
push
int
andl
test
sub
and
dec
push
push
jns
mov
in
add
sbb
mov
pop
push
or
push
sbb
mov
mov
lret
aaa
and
push
sbb
and
inc
inc
cli
fwait
mov
push
incl
pop
imul
into
sarl
dec
jno
inc
test
adc
mov
push
adc
fwait
nop
cld
push
add
bound
popa
xchg
adcl
dec
lahf
pop
mov
dec
adc
dec
xor
dec
clc
inc
jl
fwait
mov
popa
inc
stos
idivb
push
sub
sub
mov
inc
push
lods
lret
test
xchg
mov
push
jbe
pop
clc
mov
fldcw
inc
lock
jl
mov
in
mov
and
int3
xchg
cmp
movsl
lods
loope
stos
aam
xor
push
adc
xchg
rcll
repz
jp
dec
ffree
out
mov
push
xor
pop
adc
inc
xor
pop
in
clc
mov
mov
cmp
std
fs
inc
imul
jb
xlat
mov
sub
dec
adc
push
icebp
test
pop
or
push
mov
int3
and
dec
push
icebp
mov
dec
call
mov
mov
pop
mov
or
mov
lock
mov
or
xor
and
jns
mov
cmc
pop
mov
jp
mov
or
xor
rorl
jg
sub
pop
push
lock
imul
sbb
xchg
cwtl
push
push
jg
adc
inc
pop
jnp
mov
push
inc
push
imul
ret
mov
lock
je
jae
sbb
mov
pop
xor
stos
push
mov
add
inc
xor
push
mov
repz
xor
jg
jnp
roll
add
pop
dec
loope
pop
repnz
mov
mov
sub
and
push
pop
arpl
frstor
imul
xchg
jbe
icebp
mov
loop
cmp
addr16
ljmp
mov
jae
sarl
icebp
xchg
or
mov
xchg
push
repnz
cwtl
inc
dec
pop
push
pop
mov
xchg
jae
mov
xor
lea
pop
add
cmp
jmp
pop
pop
sbbb
imulb
ljmp
sbb
imul
mov
mov
addr16
sbb
decl
cmp
rorb
inc
push
dec
add
decl
shrl
push
bound
adc
nop
xchg
sahf
jmp
insb
or
add
mov
sti
dec
push
sti
cmp
movsl
loope
lret
cmpl
jle
and
rcrb
mov
and
or
jmp
xchg
adc
shl
fimuls
sahf
in
jns
mov
and
xchg
jle
ljmp
dec
in
adc
inc
dec
fildll
xchg
mov
add
cmc
js
mov
pop
fildll
jne
je
pop
mov
cmc
or
test
scas
subb
gs
push
xchg
mov
push
shrl
mov
mov
outsb
xchg
sbb
fisubrl
mov
xchg
movsb
inc
or
ds
mov
lret
push
mov
push
leave
enter
js
dec
adc
xchg
shll
por
inc
xchg
rclb
and
test
inc
and
sbb
test
fsubrs
and
and
push
and
sbb
jbe
cmp
adc
es
pusha
jmp
pop
rcrb
inc
mov
xchg
push
repz
pop
pop
xchg
out
sahf
aam
inc
scas
int3
sub
insl
dec
rolb
xchg
ret
mov
dec
stos
inc
add
stos
push
add
adcl
addl
pop
nop
out
xor
ret
adc
jns
clc
inc
lea
daa
inc
int
std
sti
dec
pop
sub
dec
aas
pop
jb
fisubl
pop
pop
add
push
shll
pop
inc
and
rcll
inc
pop
mov
push
mov
pop
push
ss
pop
lds
push
and
push
mov
shr
out
and
movsl
cmp
mov
inc
mov
daa
jecxz
cmpsb
adc
sbb
fadds
or
sub
mov
push
add
popf
mov
push
mov
inc
inc
shl
or
iret
or
mov
gs
mov
xchg
cli
jmp
push
jle
xchg
int3
cmp
inc
test
sub
adc
sub
sbb
cmp
sbb
inc
jecxz
loop
inc
xchg
inc
mov
jbe
pushf
out
mov
test
idivl
cltd
fistpl
xor
jecxz
mov
sub
iret
testb
mov
ficoml
push
loop
jge
mov
xor
out
jg
das
inc
in
bound
jbe
sub
or
push
in
push
leave
cli
jge
pushf
sbb
xlat
mov
mov
clc
adc
or
sub
fistpll
push
mov
dec
jmp
push
cmp
js
and
sub
sarb
or
sbb
enter
push
lahf
ret
push
popf
cmp
add
into
dec
adc
push
mov
sbb
mov
dec
call
adc
inc
sub
jg
mov
inc
orl
negl
dec
icebp
rol
lahf
negl
xchg
rcrl
es
cmc
insb
inc
dec
mov
mov
cmp
xor
dec
jge
mov
xchg
cmp
insb
push
adcl
pop
adc
lret
test
jne
and
add
jecxz
mov
mov
xor
shrb
das
add
pop
aaa
adc
pop
jae
sub
ds
sar
adc
sbbl
add
outsb
push
lea
adc
push
xor
jo
cmp
js
sbb
stos
fsubl
xchg
arpl
jmp
mov
sub
andl
leave
loop
pop
pushf
stos
sub
test
inc
shlb
xchg
gs
les
mov
test
negl
jbe
movsl
test
mov
jb
cli
in
imul
in
dec
mov
pop
sbb
mov
inc
fisttpll
sarl
dec
imul
jb
dec
jp
mov
mov
mov
repnz
jb
and
push
ret
sub
mov
aam
lea
cmp
push
rcrb
sbb
cmpsb
mov
xor
adc
add
adc
add
movsb
mov
sub
cmp
push
mov
xor
sbb
stc
push
pusha
call
sti
in
lahf
inc
sbb
inc
sub
addb
lods
test
mov
out
mov
repnz
shll
dec
cmp
push
jp
repz
iret
mov
flds
mov
inc
push
sbb
cltd
inc
hlt
clc
jnp
es
clc
pop
cli
push
ljmp
pushf
roll
mov
pop
adc
addb
pop
shrb
pop
push
lahf
xor
lods
or
outsl
mov
fistl
and
test
sbb
sbb
stos
dec
push
out
sbb
fwait
out
xchg
sub
cld
mov
fwait
add
jmp
xor
add
jb
loopne
mov
pop
jae
fdivrl
cwtl
cmp
mov
sbb
pusha
pop
jge
or
decb
mov
ljmp
imul
cli
jno
ret
jp
sub
mov
jb
mov
fs
or
test
lods
inc
fwait
dec
ss
leave
in
fldl
test
xor
out
out
cs
stc
notb
std
sbb
jbe
push
add
subb
sti
sbb
jmp
lret
sub
fdivl
add
jns
xor
shlb
add
call
loope
addr16
loop
sub
or
stc
mov
ljmp
or
repz
inc
sub
imul
insb
push
add
dec
add
push
cmp
and
sbb
push
bsr
push
adc
mov
mov
adc
leave
mov
or
inc
xchg
pop
lods
daa
jb
fs
mov
add
scas
aad
call
pop
fcompl
jbe
shlb
pop
movsl
js
jle
je
fprem1
push
loope
mov
sbb
aad
call
inc
sarb
inc
mov
cmp
cltd
incl
out
iret
loope
jmp
dec
push
inc
call
cmp
xchg
and
and
rcll
mov
push
push
pop
xchg
push
sub
aaa
sub
or
inc
push
adc
ljmp
cmp
int
xor
sub
aaa
xor
sbbb
daa
dec
push
enter
push
xchg
clc
roll
test
jecxz
mov
ds
cld
jmp
cmp
leave
xor
sbb
jge
and
xchg
jle
bswap
idivl
pop
or
mov
sbb
scas
sbb
call
jle
leave
shl
lahf
enter
pop
clc
lahf
dec
daa
movsb
in
and
cmp
mov
lcall
jmp
roll
pop
xchg
repnz
and
je
addr16
and
mov
jmp
sbb
fmulp
or
and
out
adc
add
jmp
add
jbe
fadds
fs
aam
push
mov
js
and
aaa
stc
ds
or
sbb
sbb
shlb
push
lret
sub
cmpl
push
cmp
pop
adc
jb
mov
cwtl
sbb
adc
push
icebp
icebp
inc
out
push
dec
paddusw
mov
cmp
or
mov
xor
or
cmp
and
push
xor
cli
xor
mov
outsl
sarb
js
orl
in
pop
cmp
jmp
sub
aaa
or
movsl
xorb
sub
cmpsl
sbb
outsb
data16
fs
pop
mov
mov
fmuls
sub
rcll
rclb
inc
sbb
mov
loopne
push
dec
sub
in
and
loope
and
pop
movsl
xchg
scas
std
inc
cmp
sub
jae
nop
es
in
fistpll
adc
inc
je
jp
inc
ffreep
rorb
pop
stos
aas
fdivr
test
loop
or
dec
add
mov
mov
cli
aam
cwtl
xor
ds
out
cmp
sarb
dec
push
inc
or
aaa
insb
mov
subps
add
push
sbb
cli
cmp
sub
sub
jo
and
mov
int
push
loope
movsb
enter
flds
aam
pop
jnp
in
leave
hlt
xchg
cmp
imul
pop
dec
leave
test
and
ret
gs
out
mov
pop
adc
push
mov
mov
mov
loopne
adc
fidivrl
push
mov
insb
lods
dec
ret
xor
lretw
add
add
loop
sbb
inc
sbb
push
in
rcrl
dec
or
cld
pusha
lea
call
push
adc
mov
push
cmp
cmp
pop
addr16
fnstsw
inc
pusha
and
divb
out
fstpt
sub
push
xor
add
cmp
or
and
or
jle
int3
shll
jge
sbb
adc
adc
mov
std
rclb
cwtl
lods
or
adc
pop
or
sub
adc
stos
sbb
adc
int3
in
es
adc
sbb
cli
stos
sub
jne
pop
stos
gs
gs
inc
add
push
pop
aaa
pop
ljmp
add
or
nop
mov
jae
cmp
mov
adc
int3
mov
mov
add
sahf
inc
jle
jmp
mov
cs
mov
sub
mov
in
push
mov
out
or
testb
xchg
adc
test
sbb
insb
mov
in
int3
add
orl
psubsw
repz
fisttpl
push
std
adc
sbb
dec
xor
mov
test
push
mov
xchg
icebp
push
loopne
daa
add
jnp
test
aaa
cmp
shll
sub
clc
and
sub
movsb
xchg
stc
mov
pop
sub
dec
movsb
ja
insl
sbb
or
test
ljmp
arpl
add
iret
loop
add
push
add
jns
xchg
leave
lock
xchg
cltd
push
or
add
cmp
loop
adc
fldenv
lock
imul
or
lcall
ja
pop
je
or
mov
push
lods
fwait
jmp
add
dec
aam
je
addl
lea
pushf
dec
cwtl
hlt
or
iret
or
jmp
add
mov
ret
shll
imul
jmp
mov
vcvtss2sd
cmpl
mov
mov
jo
das
xor
shrl
xchg
rclb
test
sub
sbb
sbb
cmpl
dec
adc
xchg
cmp
mov
jecxz
sahf
outsb
ret
adc
inc
add
pop
inc
push
test
imul
ja
xchg
and
cmp
jmp
mov
mov
push
aam
mov
and
or
dec
xrelease
jmp
xor
sub
push
movsb
call
mov
xor
mov
sub
dec
adc
jno
mov
mov
add
js
push
add
lret
fmulp
cmp
push
inc
jnp
add
divl
daa
pop
scas
hlt
sbb
inc
dec
pop
pop
sti
xchg
popa
ljmp
pop
mov
dec
stc
adc
push
and
lahf
std
filds
mov
sub
cwtl
pop
int3
mov
incb
push
xchg
and
xchg
bound
push
sbb
adc
loopne
adcb
gs
jle
pop
dec
jo
test
and
pop
mov
sti
sub
sbb
sbb
xchg
cli
cmpsb
aam
pop
cmp
push
inc
rcrb
test
mov
adc
mov
xor
jae
jno
mov
insl
mov
inc
stc
add
out
jne
jne
xor
sbb
dec
repnz
enter
gs
jo
mov
sbb
xor
jge
xor
xchg
push
inc
in
jb
rolb
enter
jae
data16
lock
and
pop
mov
sahf
mov
pop
jb
xor
add
lret
add
rorb
pop
xchg
pop
push
call
push
mov
maskmovq
testl
xchg
pop
ja
gs
inc
inc
xor
push
les
jg
cmp
push
jbe
incb
aad
xor
adc
mov
lcall
sbb
cmpl
lds
xlat
jb
jno
stos
gs
mov
dec
push
xchg
les
jecxz
dec
stc
and
out
inc
hlt
jmp
mov
rcr
fdivrs
push
stos
dec
sub
xor
cmp
jae
lahf
daa
sbb
lods
lahf
pop
sub
sbb
add
shlb
sub
je
jle
and
xchg
roll
and
jb
cmp
mov
lcall
push
push
jl
xchg
inc
into
cmp
cmc
pop
clc
out
add
sbb
or
lock
addr16
hlt
shrl
clc
out
stc
dec
adc
add
mul
mov
adc
and
or
cmp
daa
dec
or
lret
test
add
lods
es
imul
test
test
xlat
mov
data16
dec
dec
out
fstpt
cmpb
and
cmp
cmc
mov
inc
testl
dec
jb
pop
lods
mov
sbb
out
or
stc
adc
fs
dec
sbb
jmp
add
movsb
pop
and
nop
loope
add
dec
pushf
iret
dec
or
cltd
inc
lock
mov
cmpl
push
and
ror
jl
adc
pop
imul
push
or
dec
jl
pop
xor
popa
fxch
mov
inc
adc
mov
dec
sub
adc
filds
mov
mov
daa
lahf
dec
jno
pop
loop
push
jbe
sub
push
inc
lock
jo
mov
cmpsb
adc
pop
mov
adc
pop
movsl
icebp
push
or
adc
add
lea
cmp
mov
frstor
fwait
mov
out
push
inc
adc
add
push
ret
xchg
jecxz
push
sub
mov
mov
push
adc
cmp
inc
xchg
rcll
lea
in
push
push
mov
mov
call
fnstsw
pop
divb
in
adc
mov
add
mov
pop
adc
adc
loop
enter
iret
sbb
push
mul
or
outsl
jb
cmp
pushf
cmp
mov
xor
ljmp
mov
lock
pop
jnp
push
xor
or
mov
lret
jns
out
push
dec
hlt
nopl
sbb
mov
and
and
cmpl
jne
out
dec
ljmp
addr16
mov
fs
or
inc
enter
add
adc
in
outsl
xchg
add
mov
pop
sti
jl
jae
mov
hlt
cmp
push
sbb
pop
std
jecxz
test
scas
insl
xchg
push
mov
sahf
clc
mov
jne
cmpsl
sub
xor
lock
xchg
push
jmp
stos
jne
lea
mov
fwait
mov
or
xchg
ljmp
faddl
rcrb
pop
repz
loopne
hlt
sub
and
xlat
enter
jge
bound
sub
loop
push
jecxz
pop
or
adc
ss
insl
ja
inc
in
inc
xchg
outsl
mov
inc
imul
test
sbb
and
cmc
cwtl
inc
dec
cld
mov
in
test
lock
daa
test
jae
dec
pop
add
fsubp
pop
fdivrs
sub
flds
and
xor
mov
cli
sahf
push
dec
cmpsl
mov
or
pusha
shl
lock
es
or
adc
movsl
inc
push
xchg
mov
pop
rorl
xchg
dec
dec
jle
adc
mov
gs
or
dec
dec
lds
mov
push
daa
adc
bound
cmpsb
sbb
and
xor
mov
out
jge
clc
in
mov
adc
rorb
xor
ljmp
sub
shlb
push
fnstcw
in
mov
lods
sub
and
cli
cmp
out
and
in
xchg
mov
mov
inc
sbb
sub
or
ss
cld
ljmp
add
adc
and
push
and
pop
jb
push
add
das
jbe
pop
pop
mov
mov
mov
test
aas
pop
pop
mov
int3
out
dec
sbb
std
lds
sbb
lret
out
add
aas
out
enter
int
repnz
push
sbbl
dec
jmp
test
scas
js
sub
mov
pop
xchg
data16
xchg
arpl
out
sbb
xlat
dec
and
int3
lock
iret
rorb
repz
lahf
and
hlt
xchg
add
divb
dec
fsubs
loopne
pop
leave
dec
add
ljmp
mov
enter
pop
adc
negb
mov
hlt
out
loopne
and
inc
fdivrs
xchg
call
sbb
loop
das
in
sar
scas
jmp
and
mov
gs
xor
inc
xor
push
mov
add
clc
pop
sbb
mov
xor
pop
xor
or
or
mov
ret
or
push
inc
or
mov
clc
xor
cmpsl
fisubrl
testl
icebp
mov
xor
lahf
ret
xchg
jb
pop
mov
sbb
call
pop
in
inc
push
inc
xor
scas
out
stos
xchg
push
or
int3
jecxz
jmp
adc
mov
add
push
orl
test
dec
das
loop
shrl
pop
or
imul
inc
sbb
fstl
adc
xchg
sub
mov
pop
idivb
fs
or
mov
or
adc
je
arpl
mov
cmp
and
lea
jge
cmp
out
or
cmp
adc
or
call
loope
jecxz
out
inc
inc
push
and
cwtl
or
push
cs
or
in
fs
pop
ljmp
inc
enter
push
pusha
jmp
clc
in
clc
mov
stos
sbb
fwait
xor
call
in
xchg
jl
pusha
repnz
inc
dec
gs
sbb
in
decl
push
mov
lds
xchg
arpl
daa
shr
outsb
in
xchg
test
inc
sbb
leave
xchg
imul
in
idiv
or
dec
sbb
lds
push
or
shlb
fwait
mov
imull
push
push
shlb
mov
mov
adc
stc
pop
andl
inc
lock
mov
xor
lock
sti
addr16
jb
es
or
mov
outsb
push
mov
and
adc
mov
jae
lret
mov
sub
inc
mov
mov
subb
mov
mov
jp
cmc
dec
je
aam
pop
mulb
cmc
mov
das
cmp
insl
cmp
push
push
js
gs
push
sub
pop
push
repnz
rcll
insl
fdivl
jp
pop
sub
dec
pushf
sbb
sbb
neg
cltd
pushf
xchg
pop
aas
das
test
punpckldq
subl
outsb
push
loopne
daa
push
mov
sub
sti
dec
call
cmpb
dec
lret
mov
lds
js
mov
pop
shrl
cltd
clc
cld
cltd
aad
insl
out
sbb
fnstcw
out
rolb
xor
aam
cwtl
or
repz
jmp
mov
mov
insl
cmpsl
loop
orb
call
or
les
sbb
mov
pop
adc
pop
sbb
mov
hlt
scas
mov
mov
dec
inc
cli
add
insl
out
add
adc
mov
jns
cli
push
mov
mov
cmp
out
mov
jmp
cmp
xor
sbb
mov
or
cwtl
arpl
push
mov
sub
jecxz
es
and
xchg
lcall
adc
or
clc
pop
mov
inc
push
push
sbb
or
add
ret
mov
sbb
lcall
cmp
pop
add
orl
add
bound
push
or
clc
movsl
adc
mov
push
std
test
insb
bound
out
je
sbb
repz
jge
lcall
xchg
dec
mov
loope
pusha
adc
aam
lcall
test
inc
sbb
inc
fldcw
sub
cmp
mov
in
push
add
push
pushl
pop
add
ss
inc
mov
jecxz
outsb
cmovp
cmp
enter
cmp
lahf
jne
mov
scas
repnz
xor
not
mov
out
rol
add
mov
inc
mov
mov
sub
jne
mov
mov
scas
int3
jg
mov
pop
ja
adc
das
enter
jecxz
push
ficompl
adc
mov
ret
sub
ret
test
adc
mov
ret
jecxz
in
das
sti
jmp
jns
cwtl
ja
xor
adc
loopne
lret
adcl
mov
jl
push
cmp
mov
fmul
cwtl
xor
std
mov
aam
lahf
pop
aas
pop
leave
int
test
je
adc
xchg
and
push
pop
jno
repnz
jno
scas
inc
pop
or
hlt
hlt
stos
enter
insl
stc
dec
mov
pop
jmp
data16
xor
jmp
push
out
nop
pop
aam
adc
outsl
pop
scas
pop
or
or
pop
fucomip
adc
xlat
push
lahf
xchg
stos
add
bound
cmp
stos
xchg
std
dec
mov
adc
cmp
pop
jecxz
jge
arpl
insb
push
test
test
mov
xchg
sbb
inc
call
shrl
push
cmp
mov
jbe
test
xchg
xor
or
jns
adc
decb
js
fbld
lock
lret
jns
mov
cli
mov
mov
loop
lcall
ss
aam
test
and
inc
add
xchg
fcmove
sub
jle
mov
pop
pusha
lock
fists
push
test
popf
and
lods
out
test
adc
sub
out
imul
fldt
out
loopne
xchg
or
inc
push
sbbl
or
aas
push
test
addb
sub
or
lret
push
xor
ret
js
sub
bound
in
dec
cmp
fcomps
enter
mov
jne
dec
popa
sub
sti
icebp
adc
movsb
rcll
mov
mov
jbe
aas
or
je
jbe
pop
jne
cltd
cmpsb
sub
dec
daa
mov
mov
rclb
sbb
movsl
mov
inc
or
xchg
out
les
xchg
mov
cmpsl
or
xor
sub
fisubs
testl
mov
add
inc
inc
test
nop/reserved
inc
addl
sbb
xor
jecxz
add
das
aas
adc
mov
ds
sbb
and
pop
out
not
fdiv
pop
jne
push
data16
jae
or
stc
add
into
dec
jg
or
jle
dec
in
xchg
xchg
fldcw
push
sbb
mov
or
adc
sub
addb
push
hlt
mov
pop
or
sub
jb
adc
push
movsb
sbb
stos
ljmp
cltd
shl
movb
fs
fwait
std
adc
nop
popa
mov
pop
sub
out
aam
clc
call
xor
pop
adc
mov
sub
and
ds
sbb
pop
or
mov
pop
add
inc
ja
add
nop
js
inc
adc
pushf
jle
cmp
mov
popl
pop
fiaddl
or
and
mov
push
pop
stos
mov
sbb
mov
stos
nop
inc
leave
mov
push
adc
mov
aad
add
adc
cmpl
pop
jl
popf
push
push
pop
sub
xchg
inc
cli
das
mov
and
ret
pusha
pop
mov
mov
inc
sbb
mov
loop
mov
cmpsl
sub
mov
adc
call
test
fcoml
mov
adc
jne
cmp
bound
and
and
push
push
pop
fs
in
mov
xor
adc
ljmp
xchg
out
pop
pop
jnp
fcomp
pusha
and
cmp
ja
jl
adc
fnstenv
inc
sub
lods
lret
int
stos
dec
sub
mov
inc
cmp
jle
lcall
inc
icebp
jnp
jne
push
in
pushf
push
in
xchg
pop
cmp
mov
fstps
ja
mov
sbb
xor
push
mov
enter
pusha
sub
adc
sub
jmp
inc
enter
xor
sbb
and
mov
jne
inc
add
pop
pop
mov
js
push
mov
jne
push
push
cli
paddw
cltd
sub
or
add
fldl
push
ret
add
in
sbb
jle
mov
inc
push
addb
gs
mov
test
cmp
repz
and
cwtl
call
movsl
clc
add
lods
inc
mov
xchg
cmp
jbe
test
push
sbb
lahf
test
enter
xchg
adc
lahf
pop
subb
inc
cltd
xchg
xchg
jecxz
fiadds
cld
xor
cli
popa
pusha
or
sbb
mov
pop
push
call
sub
add
ds
mov
jle
fwait
cld
rcr
push
cltd
sbb
es
mov
aad
dec
sub
inc
xchg
xchg
es
leave
adc
icebp
pop
test
cmp
nop
rorb
test
fsubs
xor
xor
xchg
adc
sbb
pop
xchg
cmpsl
push
ret
mov
inc
xchg
les
stos
jmp
dec
xlat
movsb
popl
and
adc
lds
mov
pop
xor
sub
inc
scas
mov
cmp
mov
and
pusha
lods
pop
adc
movl
push
mov
inc
xchg
insl
call
pop
cmp
dec
hlt
mov
adc
cmp
xchg
mov
pop
pop
dec
std
push
xor
jmp
das
jnp
add
cmc
push
dec
sbb
fldl
loop
dec
test
aad
movntps
dec
sbb
adc
inc
cmpsl
sbb
adc
aas
test
ret
add
pop
jmp
jecxz
sbbb
dec
adc
push
sub
and
addl
aad
dec
loope
les
mov
and
xor
inc
cmp
pop
insb
movsb
gs
xchg
mov
add
ficoms
dec
in
push
push
lea
call
mov
mov
dec
jge
lcall
xor
push
cmp
nop
push
dec
xchg
sbb
cmp
pop
insb
mov
mov
sbb
iret
push
inc
pop
or
xchg
inc
in
stc
sub
push
bound
lret
push
jo
cltd
push
mov
scas
push
cmp
xchg
or
clc
mov
std
fsubrl
fdivl
inc
pop
xchg
jbe
xchg
adc
cmc
adc
dec
sti
cs
cs
fiaddl
push
sbb
xor
fsubs
push
sbb
in
inc
fiaddl
ds
xor
rorl
ljmp
ret
inc
std
or
mov
pop
addr16
int
ds
xchg
sahf
out
scas
xchg
xorl
add
mov
fs
sbb
pop
inc
push
sbb
xor
push
mov
add
pusha
sbb
stc
or
js
push
popf
jne
mov
adcl
push
lods
and
jle
mov
cltd
jno
dec
in
mull
je
pop
mov
pop
aas
notl
adc
mov
add
mov
mov
sub
pmaxub
fildll
xchg
xchg
mov
inc
cwtl
movsb
cmp
and
adc
xchg
fbstp
repz
clc
mov
adc
lea
icebp
inc
call
dec
dec
adc
out
adc
mov
push
add
mov
out
jl
cli
and
xchg
and
lahf
popa
push
pop
sub
cmpsl
sbb
xor
sbb
hlt
psubusb
or
mov
gs
jbe
cmp
dec
inc
dec
xchg
push
test
es
into
scas
mov
mov
insb
mov
int
scas
je
cmp
dec
sub
lods
and
mov
and
cs
adc
push
jnp
push
mov
cmpsl
dec
popf
xchg
inc
add
push
push
or
dec
rol
fsubl
cmpsb
inc
mov
dec
push
cmp
ds
mov
adc
repnz
push
sahf
push
push
cs
pop
mov
les
repnz
mov
push
sbb
test
adc
sub
cmp
add
inc
jae
xor
push
dec
and
sub
test
aam
dec
cmp
add
mov
and
or
dec
outsb
rorb
stc
add
punpckhdq
loope
sbb
adc
and
adc
cs
mov
loop
inc
cmp
ljmp
cli
adc
cwtl
inc
sub
iret
and
popl
sub
lods
sub
dec
stos
es
cmpl
cwtl
imul
pop
mov
push
aam
jbe
push
ljmp
add
add
insb
fsubr
xor
xchg
stos
mov
push
in
gs
arpl
and
xor
sub
mov
mov
xchg
stc
sbb
or
inc
lahf
sub
and
lahf
ds
jbe
icebp
test
adc
fisttpll
adc
test
dec
xchg
test
and
and
xchg
add
pop
mov
pop
aas
mov
push
add
inc
adcb
cs
mov
jecxz
sbb
or
lea
mov
push
adc
call
mov
add
push
ds
ljmp
adc
out
or
mov
jge
xchg
roll
es
iret
sbb
movsb
lds
inc
shll
pop
xchg
fs
or
repz
or
adc
in
jo
mov
dec
adc
xchg
sbb
push
xlat
loope
lock
pop
cmp
pop
je
push
gs
xchg
sbb
pop
mov
push
push
in
roll
adc
shlb
and
das
dec
sahf
rcl
stos
add
addr16
push
mov
clc
mov
fistl
insl
jae
mov
pop
les
xor
ds
ss
loop
arpl
repz
push
out
cli
push
adc
pop
jge
inc
jno
rorl
pop
and
pop
adc
out
dec
add
into
jb
push
adc
adc
cmp
pop
jo
lea
jae
popa
inc
popa
or
sub
bound
movsl
or
inc
scas
scas
ss
call
adc
rclb
sbb
pop
adc
fmul
scas
mulb
jbe
icebp
test
sub
mov
cmp
mov
in
out
mov
cltd
adc
mov
adc
mov
jnp
adc
lds
adc
sti
dec
dec
mov
fcoms
pop
imul
jl
icebp
pop
and
sub
xchg
push
out
mov
inc
decl
cs
adc
mov
cwtl
add
cwtl
inc
or
or
popf
push
lret
inc
and
dec
xor
std
fistl
jo
sub
xor
adc
ljmp
movsl
sub
and
and
mov
lock
jmp
dec
xchg
xchg
dec
xchg
test
rorl
and
sbb
or
add
dec
shrb
out
sbb
andl
testl
or
sub
aaa
test
adc
loope
ja
aaa
push
sub
or
mov
mov
inc
adc
stos
test
or
pop
mov
outsl
and
mov
and
or
fs
mov
adc
xlat
jae
popa
bound
sub
mov
mov
adc
inc
pushf
mov
arpl
fldl
insb
test
and
sbb
pop
push
adc
test
out
pop
xchg
stc
mov
nop
jbe
cmp
add
ret
sub
sbbl
add
cmp
icebp
aas
addr16
daa
and
cmpsb
xchg
jns
mov
add
loopne
adc
and
push
cmp
sbb
adc
aas
and
adc
jmp
jnp
loope
sub
sbb
or
cmp
xchg
and
daa
in
call
pusha
jl
inc
jnp
aam
or
inc
add
orl
repz
neg
xor
imul
test
push
orl
movl
ja
xor
call
xchg
cs
out
or
stc
rclb
daa
mov
cmp
add
inc
lods
push
fs
fidivrl
loope
jb
and
mov
add
xor
mov
dec
shlb
shrl
push
mov
inc
and
lods
jge
inc
mov
mov
push
dec
cmp
notb
pop
push
push
pop
outsl
daa
enter
xor
jmp
aam
aad
add
cwtl
and
inc
stos
jno
mov
iret
pop
cmp
mov
aas
sbb
push
inc
push
orb
jno
inc
push
out
lret
in
clc
jle
jecxz
push
arpl
jo
xor
testl
xchg
fstps
nop
push
sahf
shlb
rolb
inc
clc
out
das
pop
mov
dec
int
or
cmp
add
jle
xor
mov
push
or
or
sarl
cmp
enter
sbb
js
xor
frstor
leave
test
shr
sbb
mov
ja
scas
adc
mov
mov
or
and
hlt
loopne
insb
hlt
mov
mov
inc
cltd
dec
lret
jbe
in
xor
loope
xchg
scas
int3
jmp
rorb
popa
dec
pusha
dec
xchg
or
stos
ss
lahf
xor
fchs
call
add
mov
notl
jmp
fcomi
jl
adc
or
repz
out
cwtl
pop
mov
adc
inc
mov
xor
loop
adc
mov
lsl
mov
lahf
push
mov
cmp
movsl
inc
dec
ds
xlat
push
pop
push
add
fwait
add
inc
dec
xchg
push
adc
xor
or
push
in
xchg
or
xor
mov
clc
mov
mov
out
clc
movsl
lock
test
xor
push
mov
hlt
or
fadds
sbb
dec
pop
push
lods
adc
and
stc
and
mov
cld
mov
repz
flds
xor
mov
dec
mov
cli
iret
mov
pop
sbb
add
xchg
popf
aad
shrb
jg
sahf
in
mov
cmp
repz
cmp
daa
or
loopne
aad
dec
inc
mov
adc
imul
dec
cld
xchg
cmpsb
xchg
add
dec
add
mov
push
fwait
mov
push
pop
push
stos
inc
push
mov
mov
addr16
je
mov
pop
jp
in
loopne
pop
call
push
or
or
adc
les
incb
mov
lret
xlat
push
add
lods
and
repnz
cmp
xor
bound
inc
imul
or
insl
adc
test
addr16
mov
or
cmp
or
pop
addr16
dec
sub
jb
add
pop
push
je
das
scas
cli
cmp
cmp
pop
cs
rcrl
jo
xor
adc
loop
inc
mov
in
or
call
je
push
push
ds
sti
push
push
push
sub
pop
cmp
sbb
pop
bound
movl
sub
jl
fimuls
jl
stos
aas
ds
sub
jns
sbb
daa
shrb
popa
mov
xchg
pop
addb
push
das
inc
inc
pop
dec
pop
in
sub
jno
jg
rolb
enter
ret
nop
push
nop
jbe
gs
cltd
add
pop
fsts
stc
testl
js
sub
pusha
in
cmp
jle
push
and
lea
jbe
sub
mov
into
pop
push
fs
jmp
fidivs
xor
fildl
mull
mov
xchg
add
xor
mov
push
jp
daa
dec
rcll
mov
stc
mov
loope
mov
int
rcr
adc
dec
jae
sbb
aam
mov
movsl
dec
mov
sbb
test
jno
lods
sub
in
cli
sbb
out
sbb
sbb
mov
popf
call
push
xchg
mov
shl
mov
adc
mov
dec
push
leave
or
int
cld
jo
xor
roll
call
out
xor
push
xor
lods
insb
jb
inc
inc
aam
loopne
dec
jo
orb
fwait
loop
push
sbb
inc
sub
leave
scas
push
adc
fimull
cmpl
sbb
sub
xchg
push
push
aas
popa
push
add
or
xchg
mov
push
cld
aam
xchg
push
cmp
jmp
aam
les
xor
xchg
sahf
test
cli
push
mov
cltd
add
roll
popa
je
push
pop
lds
or
mov
jmp
leave
cmp
sub
lea
test
loope
and
sbb
ret
into
mov
aam
mov
adc
call
inc
sbb
ljmp
cmpsb
adc
sbb
sub
jmp
push
add
cwtl
inc
pop
push
fidivrs
dec
mov
aad
fidivrs
call
jbe
and
test
insl
jne
mov
js
inc
inc
imulb
outsl
cmp
xchg
and
cld
mov
rorl
lods
sbb
shlb
call
adc
push
hlt
adc
call
pop
mov
enter
out
push
testb
out
dec
push
mov
call
push
jecxz
lock
push
in
loop
add
push
in
dec
cmp
cmp
call
xor
es
mov
mov
and
adc
flds
xlat
lahf
cmpsb
sbb
push
ret
js
and
dec
dec
mov
sahf
inc
test
out
adc
rcrl
pop
sub
outsl
mov
mov
stos
mov
jns
mov
adc
adc
jo
add
add
and
test
push
xchg
xchg
in
mov
call
xchg
mov
arpl
sub
mov
dec
stos
xchg
xor
adc
push
fstps
dec
lock
pusha
das
xchg
fbstp
insb
push
mov
adc
mov
inc
cld
gs
jo
ljmp
xlat
std
js
shlb
xor
test
push
imul
adc
dec
lds
pop
sub
call
cld
mov
jno
in
les
mov
inc
cwtl
cli
push
test
cmp
mov
and
jae
rcrl
cld
clc
xor
in
or
and
nop
out
adc
insb
mov
jbe
add
movsl
sub
scas
xchg
sub
xlat
dec
sti
jl
clc
sbb
and
push
jnp
fistpl
idivb
les
iret
aaa
sarb
mov
stc
lret
sbb
lret
andl
fsubs
xchg
push
adc
pop
lock
popf
testb
or
repnz
jecxz
in
or
and
pop
push
and
push
jmp
xchg
leave
cmp
movsb
lret
or
cld
lea
rorl
add
sbb
daa
xchg
or
mov
lcall
push
lds
or
pop
sbb
mov
push
testl
jl
or
push
add
ljmp
gs
sbb
cmpb
lods
in
jle
jmp
es
in
sub
cld
push
sarl
adc
pop
mov
cwtl
aaa
cs
insb
cli
dec
sub
pushf
add
add
dec
fldenv
out
jmp
sbb
jae
aaa
push
orb
out
ret
daa
cmp
dec
mov
insl
sub
cmp
add
xor
sub
add
mov
es
pop
sub
and
inc
cwtl
xchg
shlb
out
test
dec
sub
and
mov
sbb
push
shl
mov
fistpl
and
mov
add
mov
test
jmp
jns
cltd
sti
mov
jnp
into
idivl
push
push
mov
pop
adc
mov
into
jmp
sub
pop
leave
or
out
fsubr
adc
cmpsl
sbb
sub
push
pop
es
push
inc
movsb
xor
adc
fwait
sub
ret
jo
jnp
mov
inc
and
aad
jo
cmp
cmpsl
add
sbbb
leave
pop
and
cmpsb
mov
sbb
adc
fs
pusha
mov
call
xor
sbb
xchg
mov
insl
xchg
js
imul
enter
mov
mov
mov
mov
xor
sbb
dec
or
sub
in
clc
dec
xchg
xchg
les
jo
popf
mov
pop
jno
test
mov
adc
fwait
mov
test
repnz
dec
nop
dec
cmp
dec
pop
xor
inc
jae
fdivrs
lock
lretw
inc
mov
sbb
daa
and
ret
fadds
and
push
adcb
lcall
mov
adc
fwait
mov
rol
pusha
dec
mov
popf
sub
clc
mov
loope
inc
push
and
cmp
mov
imul
ficoml
push
rcrl
call
push
lds
out
or
in
call
cli
aam
stc
jb
xchg
dec
sbb
push
jl
cmc
dec
push
sti
repz
hlt
les
jbe
push
or
and
xchg
lretw
adc
les
and
mov
adcl
cmpsb
or
sbb
xor
adc
jp
xor
outsl
inc
jmp
test
ss
xor
das
mov
xor
punpckhbw
mov
jecxz
inc
rolb
lock
repnz
je
shll
and
mov
loop
aaa
mov
fldenv
pushf
popf
mov
outsb
sbb
or
cmp
push
jmp
jge
push
test
xchg
cmpl
sbb
cltd
aaa
stos
and
mov
nop
sbb
add
mov
xor
stc
jb
sbb
xchg
and
call
mov
pop
dec
mov
sub
xchg
and
cmpsb
xchg
sub
mov
push
xchg
lret
and
jmp
inc
mov
adc
mov
and
sar
add
push
sbb
xchg
mov
inc
insl
and
adc
fmul
sti
mov
testb
pop
inc
aad
xchg
and
push
popf
leave
sub
fdivrl
add
int
sub
aas
popa
mov
xor
shrl
lea
or
pop
mov
add
pop
out
ja
dec
inc
std
mov
cmpsl
scas
test
push
fs
mov
in
adc
mov
movsb
mov
es
and
out
mov
sub
fwait
push
insl
call
cmp
mov
adc
loop
push
and
cltd
data16
mov
dec
xor
pop
sub
int3
dec
pop
mov
and
inc
xchg
mov
pop
stos
inc
mov
roll
dec
push
lds
xor
test
mov
adc
insb
aas
dec
adc
xchg
and
or
daa
mov
leave
cmp
popa
jg
sti
stos
shl
push
cmpsb
mov
mov
cmp
loop
inc
lcall
cltd
adc
call
jb
int3
mov
imul
arpl
and
xchg
adc
addr16
add
jbe
pop
in
call
ljmp
das
int3
movsb
je
add
aas
jge
ficoml
push
push
pop
jne
cmp
cmc
les
push
pop
xor
xchg
and
pop
int
cmp
andb
rorl
push
xor
and
in
jmp
xor
mov
cmpsb
xor
pushf
sbb
pop
and
mov
xor
aam
test
lcall
push
sbb
adc
imul
fnstenv
jg
pop
push
pop
xor
mov
lcall
fmuls
cwtl
xchg
nop
or
movsl
or
mov
adc
and
scas
jle
mov
pop
push
sub
std
test
bound
add
cltd
pop
lds
leave
add
test
fabs
insb
push
cmp
rcrb
pushf
sub
mov
or
cli
adc
jmp
jl
lea
pop
daa
dec
scas
repz
push
sbb
cmp
jbe
add
or
xchg
xchg
cmp
data16
rclb
lret
ret
lret
mov
adc
xor
mov
pop
sbb
jb
cmp
sbb
stos
movsb
popf
mov
push
hlt
mov
daa
add
movsl
sbb
out
push
inc
jo
or
rolb
aaa
push
sub
adc
cmp
dec
add
dec
inc
loopne
scas
pop
adc
adc
les
test
sbb
ja
std
mov
adc
mov
cmp
inc
and
push
pop
test
sub
mov
fidivl
call
xchg
test
inc
ljmp
cmp
dec
add
push
lods
test
push
push
mov
pop
sbb
loopne
push
pop
inc
out
xchg
mov
jo
push
pop
mov
push
xor
test
mov
insl
rolb
pushf
mov
push
xor
add
cmp
mov
fmuls
jl
add
jns
in
into
fdivr
in
sub
imul
xchg
leave
sbb
mov
out
sbb
in
fxch
call
mov
push
pop
test
leave
mov
popf
and
repnz
sbb
call
xchg
mull
pop
sahf
loopne
sbb
mov
add
cli
ja
and
test
andb
cld
mov
jmp
dec
dec
lret
movl
fisttpl
aaa
enter
ja
int3
mov
push
fdivr
sub
pop
sub
inc
inc
add
lods
and
inc
mov
cmp
aas
pushf
push
aad
add
daa
jge
or
sbb
push
out
lea
cmp
fsubs
or
xor
adc
pop
outsb
mov
fcmove
pop
or
adc
jo
xchg
push
jge
and
insl
mov
fdivrs
in
ss
leave
mov
sbb
xor
push
xor
ds
mov
pusha
lods
pop
cmpsb
pop
je
pop
stos
push
test
testb
push
cltd
in
ljmp
jno
mov
movsl
int3
pop
adc
loop
mov
and
nop
inc
mov
jae
popa
cmp
cmc
loope
mov
jno
pop
add
les
and
push
pop
outsl
or
pop
pop
testb
xor
sub
mov
out
in
cmp
push
stos
dec
out
pop
pop
inc
or
adc
pop
mov
mov
sbb
xor
verr
in
jnp
outsl
mov
sub
stos
incl
mov
cmp
push
in
daa
in
js
dec
sar
mov
xchg
adc
stos
fcmovu
clc
mov
xor
sub
test
cli
std
mov
dec
xor
fwait
je
and
or
push
fimull
rolb
jae
das
dec
jmp
adc
clc
jge
andb
sbb
xchg
js
call
jle
xchg
fcmovu
rolb
outsb
push
and
ud1
repz
push
stos
stc
pop
push
jns
sub
xor
stos
roll
out
mov
cmp
jne
sbb
pop
stos
pop
xchg
add
jb
cmp
mov
mov
incb
sbb
or
cmp
insb
insl
out
inc
aas
jnp
mov
mov
loopne
or
icebp
jg
aaa
or
int3
jo
nop
inc
xor
push
or
or
mov
test
addr16
dec
stc
pop
stos
jle
movsb
jl
mov
push
mov
mov
mov
mov
cmp
and
push
cmpsb
in
jo
repnz
imul
leave
and
mov
push
xlat
mov
pop
jns
scas
fwait
stos
dec
repnz
fstpt
fwait
jo
jecxz
cmp
and
sarl
and
push
cmp
dec
sahf
or
hlt
mov
sbb
mov
push
jmp
xlat
ja
enter
mov
test
cmp
mov
in
push
fwait
xor
mov
fidivs
sti
push
mov
mov
into
inc
push
ret
or
xchg
add
push
cmpsl
sbb
mov
aas
push
stos
cmpsb
push
push
mov
nop
pop
clc
mov
shr
outsb
inc
adc
adc
subb
je
test
call
xor
lds
adc
dec
int
pop
fiadds
lea
ret
inc
sbbl
xchg
jnp
add
jmp
daa
shll
mov
or
or
fwait
imul
lock
and
sti
sti
mov
ret
jns
xor
pop
ja
jne
in
ss
mov
pop
cmp
les
out
mov
jae
adc
pop
mov
stc
push
or
flds
xchg
xchg
in
int3
ret
popf
outsl
mov
lods
adcb
test
lods
fsubs
inc
jae
lds
jp
loope
push
add
fwait
je
test
jne
mov
clc
adc
stc
jecxz
sbbl
lret
or
dec
es
cmpb
dec
sbb
mov
out
mov
push
xchg
movsb
push
push
fwait
add
push
dec
push
sti
push
fcoms
sub
push
mov
adc
mov
dec
add
enter
xchg
mov
push
mov
sbb
xchg
xor
icebp
jmp
mov
cs
mov
jbe
push
xchg
mov
add
or
push
shrl
xor
cmp
push
pop
or
in
data16
add
pop
sbb
enter
mov
pop
add
adc
and
cmp
data16
outsb
or
test
pop
cmp
stc
outsl
xor
mov
fs
fsts
in
push
mov
imul
daa
fmul
sti
sub
lea
daa
push
pop
mov
pop
dec
enter
aas
jge
cmp
scas
in
xlat
std
insb
dec
les
es
stos
ss
cltd
mov
testb
mov
mov
cmp
jnp
fstps
lock
jb
sbb
adc
insb
clc
inc
pop
inc
es
push
cmp
out
in
jmp
adc
add
lock
iret
mov
jl
cld
lahf
mov
and
pop
in
cmc
dec
pop
add
sub
push
add
mov
adc
push
outsb
add
xchg
inc
or
fdivrl
jecxz
ret
int
ljmp
cli
cli
seto
xchg
adc
ret
sbb
popf
cwtl
ret
ljmp
aas
push
idivb
fld1
in
dec
xchg
push
and
xor
ljmp
ret
shrl
or
loop
into
inc
loopne
fcoms
adc
inc
cmc
pop
inc
xor
insl
sbb
or
scas
in
stos
sbbb
cmp
scas
sar
jle
and
mov
and
insl
mov
call
mov
add
nop
insb
and
xor
add
add
stc
dec
mov
mov
in
pop
stos
adc
mov
in
pop
dec
or
push
rorb
sbb
andl
rorl
dec
scas
stc
fists
push
xor
xor
xchg
and
cltd
cmp
les
ljmp
dec
call
and
inc
lods
imul
sbb
sbb
or
xchg
movsb
mov
clc
mov
popa
in
sub
call
std
movsl
movsl
jnp
sbb
xor
jbe
sbb
or
sub
testl
mov
dec
xor
cmp
les
and
sub
cld
sub
call
cld
mov
jne
inc
fsubs
int3
fs
cmc
aad
or
data16
lock
sbb
push
xor
daa
hlt
cmpsb
in
dec
add
add
repnz
gs
push
clc
rcrl
and
jo
push
out
mov
iret
jmp
pop
mov
mov
out
inc
lcall
pop
inc
lea
leave
enter
mov
sub
mov
cmp
lret
mov
jecxz
push
push
pop
pop
mov
adc
jmp
imul
push
leave
pop
lods
lret
mulb
or
idivb
orl
push
push
cli
or
lahf
cmp
test
mov
fisubrs
sub
pop
jg
imul
adc
andb
xchg
mov
sahf
mov
decb
out
or
aad
dec
lods
push
ljmp
push
or
addb
mov
and
test
pop
push
jbe
pop
and
cmp
lret
and
cwtl
adc
sub
mov
hlt
adc
pop
sub
xor
add
mov
test
xor
mov
stos
and
out
mov
sub
fs
je
sbb
xor
js
shrl
mov
jbe
repnz
cmp
lahf
jmp
pop
push
sbb
sbb
mov
xchg
nop
adc
ret
decl
fsts
mov
dec
sub
lahf
sbb
sbb
sub
sbb
sub
dec
xor
jge
mov
pop
int
fcomps
fs
add
fsts
lret
in
push
add
addr16
and
jbe
mov
ret
add
sbb
pusha
add
pop
pop
mov
rolb
das
in
pop
inc
pop
lcall
ljmp
mov
fistl
push
dec
cmpsl
div
stos
daa
jbe
pop
dec
xor
cmp
js
mov
cmpb
jns
mov
jae
mov
or
movsl
sub
push
mov
dec
jne
xlat
push
jbe
aaa
pop
loopne
add
test
dec
icebp
mov
movb
add
ret
xor
mov
jge
popa
mov
outsl
dec
or
bnd
push
stos
rol
jmp
mov
mov
xor
and
jnp
xchg
orl
test
scas
cmpsl
out
sub
dec
pop
dec
shll
clc
js
fnstsw
jmp
call
je
sub
inc
in
sbb
add
clc
mov
mov
add
pop
add
call
or
lods
xor
into
add
add
stos
sti
adc
test
pop
pusha
and
jne
adc
and
negb
lea
fdivl
push
inc
andb
xadd
mov
mov
scas
push
cmp
pop
xchg
clc
out
push
cmp
fisubl
ficomps
mov
add
rep
adcl
xchg
pop
jmp
cmp
adc
adc
fwait
sbb
jmp
adc
mov
add
mov
dec
mov
cmpsb
lods
pop
test
in
mov
jae
sub
sub
ret
pop
stos
mov
outsb
cmp
es
js
call
pop
mov
out
test
andb
push
negl
mov
push
cli
dec
push
es
cmp
aas
mull
ret
mov
loope
repz
adc
out
andb
pop
outsl
cltd
jmp
mov
sbb
ja
push
pop
xchg
call
jo
stos
pop
and
push
stos
xor
js
inc
adc
scas
adc
shr
stos
aaa
addr16
inc
mov
movsb
aas
push
sti
rcr
add
ds
scas
or
push
and
adc
or
mov
or
xorb
outsl
lock
xor
add
adc
fistps
idivl
std
jo
inc
xchg
add
imul
push
adc
repnz
sub
stos
mov
mov
aaa
and
xchg
adc
and
sbbb
sub
lods
and
bound
sbb
xchg
fcmovb
enter
ljmp
push
mov
rclb
mov
movsb
fs
pop
cmc
ds
pop
mov
pop
rcrl
out
jg
cmpsb
dec
fstpl
cmc
jns
lahf
fmuls
sbb
subl
aas
cltd
test
cwtl
das
mov
inc
push
push
pop
sbb
negl
mov
outsl
bound
fistl
lret
and
push
inc
sbb
mov
cmp
nop
jl
es
adc
sub
push
mov
outsb
mov
jo
lea
shrl
jecxz
ds
pop
jmp
adc
inc
inc
jle
sbb
push
cmp
cmp
mov
jo
mov
ret
cld
fwait
sub
mov
jge
int3
fldt
and
mov
out
test
xchg
out
std
test
and
sti
or
lea
push
lods
je
imul
loop
cld
leave
xchg
cli
jge
and
cmp
imull
outsl
push
mov
loopne
arpl
and
sub
in
pop
movsb
data16
mov
push
xchg
xchg
cwtl
out
out
out
mov
shll
loop
call
jno
mov
pop
xchg
cli
add
xchg
fimull
cmc
and
push
arpl
dec
test
mov
adc
sbb
pop
cmp
rclb
shr
jne
test
aad
das
inc
sub
xchg
mov
mov
pop
or
je
or
push
jp
fs
jle
sub
test
push
scas
fs
push
andl
pop
jmp
test
out
fistps
mov
lea
cmp
push
stos
sub
outsb
mov
lods
xchg
pop
mov
xor
leave
jmp
dec
fistps
or
mov
rorl
and
out
sub
add
in
movsl
out
jp
cmpsl
movsl
xchg
pop
mov
daa
xor
push
mov
xor
pop
sti
mov
fcmovu
xchg
lods
andl
pop
imul
mov
xor
stos
ds
data16
test
jo
adc
jno
nop
jo
mov
jp
pop
mov
call
inc
stos
mov
pop
fcomps
push
and
and
dec
mov
cmp
jb
and
inc
lret
insl
mov
sub
loopne
or
push
es
adc
adc
jg
inc
lea
mov
icebp
push
fmull
fwait
sarl
test
cmp
dec
mov
inc
cmp
dec
movsl
xor
cmp
fildl
mov
sbb
movl
aad
pop
stc
cltd
fwait
push
push
or
scas
and
push
sub
leave
fs
xchg
mov
dec
je
pop
mov
insl
dec
cmp
jnp
or
les
adc
inc
outsb
add
and
test
add
fists
das
subb
sbb
adc
xor
pusha
add
mov
es
aam
pop
adc
mov
ss
push
rclb
jge
add
int3
mov
xor
cld
ret
or
sub
and
xchg
jae
adc
mov
cmp
sub
jmp
pop
imul
push
inc
push
adc
jne
mov
ss
jnp
cwtl
movsb
push
mov
std
pop
sbb
xchg
arpl
and
mov
ja
lahf
leave
xor
fists
push
sbb
jno
repz
int3
stc
orl
sub
fdivrs
push
inc
cmp
push
movsl
pop
pop
mov
push
ljmp
dec
dec
fcoml
jmp
test
sbb
cmp
mov
js
sti
pop
scas
repz
mov
jo
into
xlat
pop
call
jg
xor
cmpl
imul
add
or
call
popa
test
or
inc
repnz
sub
cmp
push
imul
js
mov
paddw
mov
pop
or
and
mov
fistl
outsl
cmpsl
dec
fisubl
mov
fimuls
mov
mov
cmpl
rclb
mov
inc
push
mov
sarb
lahf
fisubrs
add
pop
rcll
sbb
push
adc
fs
jl
jnp
or
sub
jmp
negb
das
movsl
adc
push
pop
mov
inc
adc
fnsave
fcmovnbe
popf
movsl
xor
loope
add
data16
cltd
dec
xchg
cli
pop
pusha
neg
cs
mov
in
xchg
je
inc
mov
mov
mov
jbe
imulb
push
pop
adc
or
fsubr
add
aaa
outsb
jne
adc
jmp
mov
cmpsl
cmp
scas
sub
fwait
pop
inc
mov
pusha
sub
cmp
les
scas
mov
lods
fbstp
xor
dec
mov
fcmovnb
push
popf
dec
fildl
mov
adc
cli
mov
jo
sub
inc
in
test
call
add
cltd
ds
push
add
test
leave
stos
outsb
sbbb
std
pop
stos
inc
add
rcr
fwait
sbb
and
stos
sbb
jne
in
cli
testb
adc
pop
mov
jno
call
dec
adc
fwait
adc
out
add
dec
adc
add
push
pop
dec
inc
push
arpl
aaa
push
fistpll
fildl
imul
fcmove
mov
push
decb
or
pop
mov
pop
add
ss
add
jg
xor
lcall
ja
mov
xor
ret
jnp
mov
push
sbb
popf
out
nop
push
or
bound
incb
lock
inc
scas
or
cmp
das
gs
add
loope
xor
mov
pop
mov
sahf
inc
inc
ret
or
push
mov
in
inc
and
cli
outsl
ja
je
sub
shlb
lock
lea
enter
test
push
pop
and
xchg
dec
pop
mov
add
inc
push
sbb
xchg
sub
jle
loop
jo
lcall
push
lret
mov
std
inc
xchg
xor
fdivl
ss
bound
mov
push
pop
push
sub
mov
add
push
sbb
xchg
jb
push
add
dec
enter
push
push
sbb
sub
ja
push
adc
scas
jecxz
add
aaa
jbe
aam
add
mov
fwait
jne
sub
dec
push
jae
mov
cwtl
add
sub
lret
nop
sbb
cwtl
xor
addr16
je
and
lahf
rcrl
idivb
adc
adc
test
adc
lcall
jnp
rcl
push
js
test
ret
adc
sbb
out
loop
test
xor
xchg
xor
dec
or
ss
pop
and
imul
push
sbb
sbb
aas
or
jg
in
ret
dec
mov
lea
add
addl
inc
sbb
xlat
fcoms
push
sbbb
mov
cmp
lea
cmp
pop
adc
jge
sub
fstl
pop
sbb
mov
roll
push
ljmp
cmpsl
nop
imul
push
in
jne
aas
push
cmp
data16
cmp
push
push
arpl
add
adcb
dec
hlt
in
and
in
fwait
sbb
pop
dec
add
or
lea
ljmp
xlat
xchg
jne
and
and
fistps
add
dec
pop
xor
mov
sub
movsl
je
enter
sti
aam
cltd
loop
and
fldl
or
ror
outsl
test
push
and
xchg
test
into
inc
aas
add
sbb
or
cmp
je
std
or
jne
mov
and
pushf
sarl
sbbl
jecxz
sbb
insl
pop
push
add
or
rorl
adc
push
mov
add
js
pop
mov
or
xor
or
lret
mov
dec
mov
xchg
aad
in
sbb
add
mov
and
and
bnd
aam
stos
nop
cwtl
mov
clc
pop
or
xchg
sbb
fcoml
faddl
test
ret
cmp
adc
test
xchg
xchg
adc
cld
or
jae
or
clc
aas
inc
repz
sub
adc
cmc
add
pop
lods
inc
adc
jp
xchg
jbe
push
dec
jle
jmp
mov
xor
dec
sub
in
xchg
popf
add
dec
mov
fildll
push
push
xchg
mov
loope
inc
pop
lds
fs
mov
sub
movsl
jge
stc
cs
pop
scas
sti
pop
mov
es
insl
pop
lcall
dec
mov
ja
lret
xchg
insl
mov
incb
mov
pop
xchg
call
mulb
bnd
pushf
sar
xor
lds
mov
inc
shr
adc
std
pushf
cwtl
je
sub
add
push
mov
mov
addb
push
xor
jno
outsl
mov
xor
add
lcall
test
addr16
lret
fidivrl
add
push
mov
nop
div
inc
push
mov
dec
or
adc
mov
lcall
dec
fwait
sub
mov
jmp
xor
int3
out
push
push
call
mov
inc
add
ds
pop
fstpt
and
jp
mov
xlat
inc
insb
ljmp
or
insl
cmpsl
rolw
inc
inc
push
add
ds
decb
in
xor
sahf
ror
mov
sbb
into
mov
aaa
or
ss
outsl
call
loop
pop
adc
popf
push
xchg
inc
cmpsb
pop
xchg
clc
or
or
mov
inc
pop
mov
call
jecxz
pop
in
repz
sarb
ja
cld
pop
xor
ss
sarb
adc
loop
jnp
in
or
aam
sbb
stc
cmpl
cmp
mov
jp
stos
jbe
clc
std
mov
dec
sub
insl
ss
adc
movsb
inc
imul
mov
adc
adc
push
fistps
jl
and
mov
rcrb
and
xchg
xor
ret
and
subl
js
xchg
aaa
je
incb
sbb
xchg
sub
sub
cltd
and
dec
imul
mov
cmp
cli
xor
push
cli
mov
xlat
bound
insl
xchg
and
movsb
jp
xor
fdivs
add
and
dec
cmpsl
xchg
insb
sub
pop
sub
je
pop
out
mov
sbb
aad
and
xor
jne
ljmp
das
aam
fs
xchg
add
jae
out
out
and
fdivs
std
jbe
repz
es
popf
scas
push
out
jmp
jp
jne
pop
cld
mov
jmp
movsb
sbb
fxch
sub
mov
imul
ljmp
sub
cltd
fsubrl
mov
out
push
stos
mov
pushl
jge
jge
push
dec
punpcklbw
loopne
fsubr
mov
jnp
movsb
mov
and
lcall
or
inc
mov
loop
mov
xchg
push
stos
shl
mov
shlb
sub
hlt
jge
pop
clc
mov
push
aaa
mov
jns
test
xorb
adc
mov
bound
lahf
imul
fsubs
es
nop
pop
jg
cmp
mov
sub
cmp
fisubl
xchg
cmp
inc
repz
loope
jbe
push
sub
inc
test
jecxz
dec
negl
std
imul
movsb
stos
decb
jmp
adc
adc
nop
call
cltd
push
add
pop
decl
push
movsl
daa
push
lods
hlt
adc
inc
xchg
adc
push
push
clc
pushf
jp
jle
inc
lea
xchg
rcrb
addr16
jo
xor
ja
xlat
push
jge
mov
inc
pop
aad
lds
pop
mov
data16
ret
xrelease
and
call
add
sar
cwtl
mov
dec
jb
push
sub
test
mov
pop
addl
dec
add
adc
xchg
jne
outsl
mov
push
mov
and
inc
sbb
add
pop
dec
ja
sub
jge
sub
adc
adc
mov
mov
mov
sub
fucomi
popl
xor
jne
test
mov
sub
cli
mov
pop
sbb
call
sub
cwtl
cmp
add
add
xchg
imull
cmc
xor
stc
push
testb
mov
lldt
mov
mov
daa
inc
add
mov
roll
mov
cmc
pop
in
daa
inc
mov
push
idivb
das
mov
mov
pusha
cmpsb
ret
push
out
fwait
inc
pop
aad
les
imul
xor
xor
pop
ret
adc
fcomp
sub
fs
mov
mov
inc
dec
test
fldenv
add
test
nop
sub
subb
mov
mov
testl
mov
insb
lock
and
mov
lret
icebp
and
mov
shll
dec
lahf
outsb
or
dec
nop
andl
and
call
lock
jecxz
mov
push
daa
movsb
add
push
stc
mov
xchg
in
data16
xor
mov
aaa
jl
insl
cld
dec
addr16
stc
fs
push
repnz
dec
adc
cwtl
daa
push
int
and
cs
movb
push
cmp
xor
add
adc
fbstp
pop
lea
cmpsb
lods
pop
out
pop
and
sbb
in
mov
stos
jecxz
ret
inc
cmpsb
mov
lcall
sti
shrl
js
bts
push
adc
adc
sub
xor
push
adc
aam
fcomi
jecxz
mov
movsb
mov
mov
aas
jl
stos
jns
push
sub
movsl
aaa
add
lahf
aad
push
repz
cmp
xchg
push
daa
sub
out
sbb
insb
test
push
cmp
push
cld
lea
inc
stc
inc
stc
sbb
sbb
aas
xchg
push
mov
scas
out
ja
stc
push
or
add
jno
dec
pop
fcoml
sbb
dec
mov
mov
mov
add
das
xchg
mov
or
add
repnz
jbe
jle
cli
xor
jno
inc
mov
jae
or
inc
push
mov
adc
ja
insb
mov
ror
cmc
fwait
stos
xor
jecxz
mov
adc
push
jl
pop
cmp
and
xchg
sbb
ret
out
rcl
mov
div
dec
push
rorb
mov
daa
call
cwtl
inc
sbb
jbe
and
mov
push
notl
movsb
xchg
jle
pop
mov
mov
fs
inc
add
dec
dec
mov
dec
lods
dec
cmp
jbe
inc
xchg
inc
sub
xchg
test
xchg
leave
rolb
mov
data16
dec
ret
aam
scas
and
xor
fiaddl
loope
js
fsubl
xchg
out
dec
jl
xchg
imul
inc
sarb
lods
dec
jne
xchg
push
sub
pusha
or
pop
sbb
pop
addl
lods
cwtl
pop
sbb
cwtl
sbbl
jge
aas
xchg
push
hlt
sbb
or
lea
cld
cmc
mov
and
sbb
xor
push
sbb
mov
pop
je
jo
hlt
into
fcomp
or
adcb
sbb
or
xor
inc
mov
shll
add
and
jno
cmp
jne
or
cmp
aad
push
jb
sub
jle
call
aad
xor
inc
or
mov
xor
sbb
lcall
test
inc
cli
lods
mov
sub
mov
add
cwtl
jnp
push
test
cmp
mov
jp
cmp
add
cmp
sbb
mov
insl
pop
enter
push
mov
fsubrs
dec
pop
and
fbld
dec
jbe
in
jne
call
add
sbb
inc
and
jmp
mov
stc
cmp
jge
inc
xor
cs
clc
scas
shr
sahf
xor
clc
xchg
loop,pt
cmp
les
aas
in
mov
xor
cmp
pop
sub
in
out
lahf
push
nop
mov
xchg
cmp
add
add
jg
push
mov
je
dec
lahf
in
lcall
lret
and
xchg
cmpsb
imul
mov
ljmp
jbe
push
lods
inc
pop
push
mov
fadds
sub
adc
push
and
or
cli
push
fbld
push
cmp
scas
bnd
adc
repz
lret
pop
sbb
gs
outsb
rolb
push
add
dec
enter
inc
mov
fidivrs
movsb
mov
stos
xchg
or
cld
mov
add
popl
add
mov
push
and
in
xchg
adc
aaa
xor
xchg
cmp
out
out
inc
mov
stos
call
mov
push
nop
or
add
roll
into
cli
in
mov
adc
push
lock
lret
ljmp
fmuls
inc
adc
mov
mov
out
inc
or
stc
pop
lcall
pop
lock
ljmp
icebp
and
or
mov
gs
outsb
leave
icebp
and
or
jl
ljmp
xchg
push
aam
mov
js
and
shl
and
or
jl
ljmp
clc
out
fcmovb
adc
loopne
xchg
ljmp
or
or
out
cmp
loope
aas
dec
adc
ret
push
jns
rorl
add
push
loop
jge
xchg
lods
xor
pusha
iret
jb
dec
mov
imul
imul
lea
in
roll
cld
mov
adc
push
or
orl
jmp
add
sub
in
xchg
aad
xchg
cmp
xor
jl
push
in
lea
sbb
or
add
shlb
mov
sbb
test
pop
shlb
shlb
xor
xor
insl
aam
rolb
pop
popf
mov
adc
loopne,pn
and
lock
fucomp
test
xchg
hlt
ljmp
pop
mov
test
or
pop
push
fcoms
ljmp
test
stos
xchg
in
adc
sbb
or
cmp
lret
test
sub
xchg
adc
xchg
das
cmp
in
sub
dec
aas
std
sub
pop
aas
int
fs
lds
je
jns
fdivrl
dec
sub
cld
dec
test
pushf
sbb
mov
cmp
jmp
fstpl
fnstsw
fisttpll
or
lods
iret
sbb
mov
iret
jns
fmul
dec
fucomp
ret
pop
xchg
test
mov
rorl
icebp
cmp
jmp
loope
repz
loope
repz
jl
sub
mov
cmp
pushf
repz
lods
repz
mov
repz
fdiv
dec
loope
lock
loope
in
and
mov
loop
cld
cltd
ljmp
stc
out
pop
cld
leave
out
insb
cld
fldz
jl
sub
mov
cmp
pushf
cld
or
lods
cld
sbb
mov
cld
jns
fdivr
dec
out
in
cld
pop
out
cld
or
sub
xchg
push
cmp
ss
push
push
pop
cld
fs
dec
cld
je
jle
test
cld
xchg
push
sahf
cld
movsb
push
mov
mov
mov
cld
aam
fdivrp
in
into
cld
hlt
push
cld
add
out
cld
cmp
sbb
mov
sub
push
cs
push
push
pop
cld
fs
dec
cld
je
jle
test
cld
xchg
push
sahf
cld
movsb
push
mov
mov
mov
cld
aam
fdivrp
in
into
cld
hlt
push
cld
add
out
cld
cmp
sbb
mov
sub
cltd
sub
dec
aas
stc
sub
insb
aas
fldcw
mov
cmp
lods
aas
sbb
int3
aas
jns
fdivrl
dec
sub
cld
dec
test
pushf
sbb
mov
cmp
jmp
fstpl
fnstsw
fisttpll
or
lods
iret
sbb
mov
iret
jns
fmul
dec
fucomp
ret
pop
xchg
test
mov
rorl
icebp
cmp
jmp
loope
repz
loope
repz
jl
sub
nop
repz
test
sbb
shl
loope
repz
loope
lock
loope
in
sub
mov
loop
cld
cltd
ljmp
stc
out
pop
cld
leave
out
insb
cld
fldz
jl
sub
mov
cmp
pushf
cld
or
lods
cld
sbb
mov
cld
jns
fdivr
dec
out
in
and
addb
inc
cld
add
or
or
sbb
lret
sbb
or
and
xor
cmp
nop
shl
inc
xchg
mov
ffree
dec
loopne
ss
aas
fs
jp
ss
ljmp
movsl
sbb
cmp
or
mov
sub
adcl
inc
ss
lcall
inc
lods
in
jmp
push
out
std
mov
mov
xor
sbb
cmp
xor
inc
cmp
repnz
and
scas
lock
iret
in
daa
dec
in
clc
cli
jge
and
mov
add
ss
cmpsw
popf
ret
mov
pmaxsw
xor
fisubrl
rorl
dec
icebp
dec
adc
cli
mov
mov
shrl
sbbb
push
imul
push
stc
and
xchg
js
fs
outsb
inc
inc
cmp
mov
cmp
mulb
fcoml
jecxz
arpl
xchg
iret
mull
push
aas
aaa
and
cmpsb
jle
jecxz
pop
shl
and
cmc
loopne
pop
in
aaa
mov
add
pop
sbb
mov
pop
xchg
divb
pop
xor
je
loope
inc
clc
icebp
call
dec
repz
test
xor
movsb
das
mov
xor
rolb
in
sub
in
clc
cli
pop
enter
in
sub
cli
adc
nop
sub
pushf
into
popf
xchg
xor
je
cmp
or
cmpsb
add
jae
sub
hlt
xor
add
lds
popf
ss
mov
xor
mov
pusha
or
test
xor
cmp
daa
xchg
bswap
loop
adc
ret
cmp
push
jb
mov
dec
sbbb
leave
dec
shr
adc
int3
lcall
sub
xorl
push
enter
add
cli
xchg
xchg
fsubl
and
std
gs
push
daa
jno
inc
ljmp
movsb
cmpsl
xchg
insb
adc
shl
je
loope
inc
in
je
pusha
sbb
fs
jl
push
mov
jb
repnz
jbe
sbb
push
push
lret
rclb
aas
pushf
dec
and
fdivrl
cmp
xchg
mull
mov
mov
jmp
xor
sub
and
js
js
mov
pushf
jmp
xor
call
loopne
jo
imulb
jle
insb
jo
fisubrl
and
sub
js
cmpsl
or
jge
aad
push
idiv
leave
and
sbb
test
ds
fwait
bound
xlat
mov
fdivs
push
cmp
mov
call
pusha
fwait
out
mov
push
and
cmpsl
xchg
mov
and
xchg
adc
fdivl
popf
xchg
or
ficoml
movsl
jge
or
stc
outsb
push
hlt
sbb
fidivrl
or
je
fnclex
lea
xlat
inc
or
jno
fwait
adcb
fbstp
sbb
vphaddudq
dec
cmp
sub
fdivl
jns
cmp
testl
fistps
cmpsl
stc
push
in
cmp
jne
rcl
xchg
repz
icebp
mov
cmp
or
mov
pop
clc
aam
cltd
test
adc
stc
jb
pop
cmp
lret
cmpsw
jp
push
ja,pt
clc
je
das
jb
add
insl
push
add
enter
jg
frstor
in
jne
cmp
movb
add
fs
cmp
mov
in
add
push
pop
pusha
xchg
xlat
dec
sub
xchg
cmc
daa
lods
ljmp
mov
mov
cli
xchg
in
insl
cmp
in
mov
ds
test
inc
mov
mov
mov
mov
or
mov
pusha
enter
sub
dec
mov
mov
xchg
cmp
push
leave
lret
jle
add
in
idivl
dec
xchg
out
lea
inc
pop
mov
pop
cmp
xor
test
xor
inc
mov
std
fwait
cmpl
mov
data16
outsl
and
xchg
dec
in
or
lret
test
sub
in
pop
and
and
out
cmp
iret
sub
aaa
adc
cmp
stos
sub
arpl
add
jge
sub
cmpsl
jp
sarl
sbb
bnd
in
je
dec
enter
push
push
repz
stos
and
cltd
pusha
add
scas
sub
leave
mov
repz
mov
ds
xor
push
xor
xchg
jge
fildll
mov
out
add
je
mov
fs
outsb
test
mov
pop
leave
repz
lcall
xchg
mov
loope
repz
mov
or
mov
ja
dec
dec
daa
in
xchg
daa
sbb
mov
mov
lahf
pushl
cld
xchg
popf
in
or
mov
lea
stc
inc
hlt
cmc
scas
stos
jbe
ret
in
rcrb
hlt
fcoml
cld
and
xchg
hlt
sar
jle
shr
loopne
fists
sbb
add
xlat
aas
loopne
dec
aas
xchg
sub
popa
aas
sub
loop
sub
cwtl
aas
add
sub
out
pop
sub
adc
mov
daa
ds
das
aas
aas
call
sub
popf
aas
adc
sarb
jnp
faddl
aaa
call
xchg
scas
das
sbb
dec
leave
stc
adc
imul
mov
cmp
fwait
das
push
xchg
sti
xor
nop
xor
lahf
clc
xor
lahf
inc
adc
pusha
divl
sahf
add
fs
rol
sbbl
lds
push
xchg
iret
push
addr16
outsl
out
and
dec
pop
call
push
pop
imul
pushf
sbbl
femms
loop
xchg
sbb
lret
insb
jl
loope
lret
fisubl
ds
js
inc
xchg
ds
pop
inc
aas
pop
sub
add
sub
cmp
dec
outsl
lock
xchg
jecxz
pop
xchg
pusha
fs
ret
push
je
cltd
insb
decl
sub
into
mov
test
add
push
lock
mov
push
dec
mov
aas
xchg
nop
in
dec
fs
pushf
loop
cmp
adc
and
daa
bound
xlat
cmp
or
lret
aas
push
push
or
test
push
fdivrl
jecxz
pop
repnz
mov
out
add
pop
cmp
push
rclb
icebp
jecxz
arpl
aaa
inc
push
add
xchg
mov
cld
pop
cmp
dec
pop
sahf
cmp
jmp
cmp
mov
cmc
pop
push
sti
pop
out
daa
js
fs
sbb
push
push
sahf
lock
xor
mov
in
pop
repnz
pop
call
bound
aas
cld
jle
sarl
jle
ror
sbb
xchg
pushf
popf
xorb
jb,pt
push
aas
cwtl
inc
pop
repnz
adc
push
jecxz
mov
mov
and
out
cmc
xchg
out
cmc
mov
sbb
mov
mov
insl
sbb
cmp
sub
pop
pop
mov
mov
iret
xor
push
push
xchg
sbb
dec
push
cli
xchg
lock
addr16
into
in
popa
int3
sub
fsts
cld
cli
push
idiv
xor
xor
jecxz
mov
xor
mov
mov
icebp
xor
dec
je
dec
sub
push
js
add
sub
inc
lret
mov
in
das
das
in
enter
push
fnstcw
in
jl
fnstenv
add
jbe
data16
xchg
pop
inc
mov
les
push
xchg
cmp
or
int
xchg
lret
sbb
jbe
les
jmp
dec
pop
in
jb
arpl
cld
popa
add
insl
aas
jne
jo
shrl
mov
cmp
cmp
out
dec
mov
out
dec
aad
cld
jl
cld
jbe
loopne
dec
out
ljmp
test
or
and
lret
icebp
insb
or
xor
daa
cld
inc
pop
je
dec
rcrl
iret
mov
movsl
jle
enter
jle
orb
daa
dec
sahf
popf
mov
stc
in
adc
daa
sti
cmp
lret
insb
xchg
pop
ficompl
idivb
cmp
int
out
cmc
out
out
cmc
clc
xor
repz
stos
push
test
xchg
lock
das
pmulhw
scas
push
iret
push
bound
dec
inc
shrl
ds
bound
cs
mov
and
xchg
mov
push
mov
mov
xchg
aam
fsts
hlt
out
inc
loop
pop
push
adc
jo
xlat
dec
mov
pop
xchg
inc
push
jo
jb
jp
paddusb
std
sahf
or
or
loope
sarl
pop
div
pusha
pop
inc
jo
fnstcw
ds
push
jp
cmp
and
ds
jae
dec
jle
rorl
inc
std
jb
lahf
and
sbb
inc
mov
inc
push
or
lock
dec
out
jmp
lahf
pop
stc
ds
xchg
add
xor
dec
rorl
icebp
out
repz
pop
out
add
lock
pop
in
test
push
scas
cld
mov
cmpsb
adc
cmpsb
pushf
xchg
push
push
shlb
xlat
pop
jecxz
int
divb
loopne
pop
cmp
adcl
push
popf
movsb
pop
decb
mov
or
xlat
rolb
lret
mov
jge
ss
andb
jg
inc
stos
ret
int
scas
pop
repnz
lahf
push
cmp
pop
ret
inc
pop
shlb
pop
cmp
jecxz
out
xchg
icebp
sub
mov
jl
jmp
xor
shr
sub
sub
in
mov
or
andl
inc
call
sti
xchg
xchg
or
cmc
repnz
stc
into
sbb
cmp
cs
xor
cltd
push
shll
out
loopne
sub
out
push
push
sub
or
pop
mov
fs
sub
out
sti
pop
stos
sub
xor
adc
jp
loop
test
cmp
loopne
cwtl
js
xor
lahf
test
outsb
mov
fcomps
xor
dec
push
xchg
lret
sbb
popa
aas
imul
jp
in
in
inc
push
lret
out
inc
jmp
cmp
jp
stc
orb
fs
ret
cmp
ret
mov
das
push
mov
mov
ror
roll
repz
ljmp
subb
iret
pop
outsb
mov
push
mov
stc
xchg
leave
lods
add
mov
jb
outsb
mov
int3
push
mov
outsl
jmp
sti
jb
incl
cwtl
mov
dec
xchg
subb
rorl
inc
daa
iret
dec
mov
dec
iret
call
and
fistpll
stc
aas
cmpsb
cmp
jg
repnz
sbb
leave
xchg
fldcw
sub
mov
xchg
mov
push
push
pop
in
cmp
out
dec
loope
fwait
xchg
add
lcall
mov
mov
aad
jp
out
or
push
je
xchg
pusha
inc
cmp
push
pushf
push
leave
shlb
mov
cmp
xor
cmp
mov
test
push
mov
cli
xchg
out
psubsw
mov
xchg
pop
sahf
jmp
js
ljmp
mov
pop
xor
nop
cs
mov
cwtl
sub
push
xchg
cmp
cld
mov
aas
sub
aas
pop
sub
push
mov
xor
rep
bound
ss
loop
sbb
pop
mov
notb
scas
lock
xchg
push
jmp
sbb
cmc
or
ret
sbb
xchg
xchg
xchg
mov
mov
bnd
cmp
int3
dec
mov
or
out
and
aas
in
mov
add
jbe
lods
cmp
cmp
dec
stos
bnd
lock
mov
cmp
inc
ret
ret
shll
out
xor
loop
xlat
out
repnz
out
nop
pop
mov
push
add
pop
lahf
sbb
mov
mov
mov
cltd
mov
adc
sahf
in
sub
in
das
cli
lret
sub
mov
sub
out
add
or
lock
aad
jp
divb
pushf
enter
out
pop
xor
xchg
inc
daa
loopne
nop
sahf
xor
mov
mov
psubusw
jge
mov
cmpsb
dec
xor
inc
test
xchg
cmp
mov
cltd
sub
repz
xchg
dec
add
int
fwait
push
leave
lret
xchg
pop
mov
sbb
dec
enter
loop
enter
sbb
fstps
stos
aad
jp
shll
popf
xorb
nop
sub
push
mov
imul
mov
outsl
add
dec
mov
cmpsb
push
ds
adc
and
inc
cmp
mov
fildll
das
sbb
inc
cmp
adc
sbb
xor
dec
mov
andb
jmp
aaa
lods
push
mov
dec
push
in
sti
xchg
pusha
sub
jl
sahf
add
mov
xor
xchg
xchg
cmpsl
fcoms
xchg
dec
in
sub
shll
or
and
fstps
push
lock
push
pushf
out
mov
loope
bound
or
dec
jmp
fs
jmp
call
mov
adc
je
pop
or
and
cmc
jl
ss
pop
inc
sbb
xchg
out
ja
sub
scas
dec
jmp
lahf
cmp
scas
jg
jl
jo
xchg
mov
insl
call
leave
out
and
js
ret
out
and
mov
pop
nop
pusha
push
pop
inc
cmp
aas
hlt
cs
and
inc
in
cmp
dec
sbb
sub
pop
sar
dec
xor
sub
out
xchg
dec
lds
insb
mov
stos
cmp
cmpsl
jo
sahf
push
adc
rorl
or
enter
and
rcll
sarb
mov
ss
daa
xchg
es
xchg
iret
push
xor
sbb
xchg
adc
outsb
push
push
daa
adc
js
fcmovne
mov
sti
aas
bound
mov
fwait
mov
dec
inc
ret
out
push
sub
push
mov
and
stc
jecxz
test
cmp
mov
push
xlat
stc
icebp
push
idiv
adc
in
lock
clc
adc
jmp
cld
jnp
fstl
inc
test
dec
mov
cmp
icebp
std
sti
pop
xchg
pop
mov
mov
clc
arpl
dec
pop
push
push
cmp
pusha
mov
out
aad
in
cmc
stos
jmp
repnz
aam
ljmp
mov
mov
aas
fsubrs
pushf
outsb
add
mov
xor
xchg
aas
out
data16
test
insb
adcl
aad
daa
mov
inc
lret
outsb
add
xchg
cmp
mov
xor
ss
cmp
adcb
test
add
sbb
mov
loope
pushf
or
pop
subb
cmpsb
pop
mov
aam
xchg
js
loop
or
push
out
outsb
and
and
and
insl
ljmp
ljmp
pop
sbb
inc
repnz
loope
mov
inc
js
adc
ret
in
pop
outsl
aad
aam
sbb
sub
pop
xchg
and
jbe
bound
sub
adc
adc
mov
pop
lods
jo
sbb
addr16
pusha
mov
mov
dec
push
das
add
sub
pusha
sbb
adcb
dec
dec
repz
in
pop
mov
rorl
in
lds
mov
push
pushf
hlt
mov
popf
cld
sbb
les
xchg
jne
push
enter
sti
aad
dec
add
data16
add
cli
mov
dec
popf
xor
add
mov
mov
and
leave
das
insb
mov
shlb
adc
and
fsts
adc
cmp
pand
leave
icebp
pusha
daa
test
jl,pt
inc
pop
fs
cmc
roll
in
xchg
sbb
and
fidivs
jecxz
adc
shr
in
mov
cli
sbbl
lods
or
add
sub
shll
jle
loop
aad
jle
sar
dec
mov
mov
in
adc
hlt
call
imul
lea
cmpsl
xchg
mov
jnp
xchg
loop
sahf
lock
or
sbbl
dec
cltd
cmpb
lods
push
shll
cmpsb
push
gs
test
xchg
ret
repz
mov
clc
sbb
mov
popa
in
cmp
nop
je
jp
les
das
incb
jge
add
adc
test
dec
shrl
and
out
pop
outsl
xorb
mov
cld
cs
lahf
test
leave
shlb
sub
inc
xchg
jl
cwtl
das
cmp
cmc
cld
fxch
loope
or
bound
and
add
std
sbb
aam
pop
js
xor
jle
addb
push
push
popa
push
xor
loopne
fcomps
rorl
cmp
adc
jle
popa
mov
into
dec
jmp
mov
adc
popa
test
xchg
pop
add
and
shrb
bound
test
adcb
sahf
mov
in
in
pop
or
push
xchg
push
pusha
or
dec
jmp
inc
pop
lcall
rorl
jb
popf
mov
outsl
xchg
lods
xor
adc
xchg
mov
cmpsb
clc
daa
insb
dec
mov
in
mov
sti
lret
jle
or
mov
ret
loop
xchg
push
xchg
call
stc
fiadds
lret
xchg
andb
ljmp
ret
addb
add
xor
xchg
and
loop
jo
dec
xor
pop
and
xor
jo
leave
mov
xlat
repz
inc
or
mov
inc
lea
xor
mov
repz
inc
insb
roll
scas
jecxz
adc
or
cwtl
emms
pop
mov
mov
aad
pop
lock
je
ret
and
repz
mov
push
les
sbb
in
mov
fisubrs
add
out
add
add
xchg
jbe
xor
js
dec
imul
push
and
xor
mov
or
mov
mov
mov
or
jge
pop
test
sbb
fsubrl
test
aas
hlt
mov
lahf
adc
jnp
push
jl
fs
movsl
add
xchg
pop
dec
inc
cmc
xor
aad
mov
in
xchg
clc
cli
inc
adc
cmp
in
pop
mov
push
js
and
adc
mov
and
mov
sub
rorb
sahf
js
test
adcb
lcall
inc
mov
in
idivb
or
js
in
int
add
add
add
add
in
jne
add
add
ljmp
pop
shrl
add
xor
popa
call
or
add
push
add
add
inc
mov
lea
adc
push
inc
add
loop
add
xchg
push
imul
xchg
imul
inc
add
popa
add
mov
jne
xchg
incl
in
mov
push
popa
add
add
inc
push
add
cmp
ljmp
cmc
in
inc
mov
popf
lea
xor
adc
xchg
je
incl
dec
add
popa
add
mov
dec
jne
lret
incl
icebp
mov
jne
xchg
incl
or
mov
pop
mov
ret
cltd
add
add
adc
inc
xchg
push
inc
inc
insl
add
xor
addl
add
dec
data16
push
popa
add
add
inc
push
add
cmp
ljmp
cmc
ljmp
add
pushl
push
dec
je
call
inc
inc
xchg
mov
sub
add
mov
add
repnz
pop
add
adc
test
incb
mov
push
in
push
mov
imul
mov
ljmp
inc
imul
push
orb
arpl
mov
mov
xor
inc
push
cltd
mov
rorb
bound
push
sahf
xchg
mov
popf
mov
stc
ljmp
je
mov
add
push
je
mov
mov
add
sahf
add
ljmp
cld
push
sahf
jne
repnz
add
gs
mov
push
ret
jne
pop
stc
mov
in
xor
call
popf
popa
add
and
add
stos
add
call
add
orb
cmp
sahf
xchg
mov
pop
add
add
adcl
add
adc
add
push
orl
jo
jne
xor
cmp
sahf
xchg
or
adc
add
add
adcl
add
adc
add
push
orl
inc
add
add
cmp
sahf
xchg
or
outsb
test
subb
add
popa
jmp
xor
xor
popa
mov
mov
sbb
sbb
js
mov
sub
popa
mov
dec
cmpsl
adc
jmp
push
add
inc
jns
in
mov
lea
pop
cmp
ja
lea
popa
ljmp
std
ljmp
shr
lock
bound
mov
fmull
add
cld
add
or
je
inc
loop
in
push
jmp
mov
and
ljmp
mov
jne
jge
xchg
or
add
add
pusha
ret
add
adc
and
std
roll
add
or
xor
adc
add
mov
popa
jae
xor
add
rolb
dec
mov
call
jne
adc
aam
lret
jmp
jmp
dec
flds
adc
jmp
lods
mov
jmp
jo
rcrl
lods
add
popa
jge
add
or
std
fs
sbbb
add
call
movsb
shr
out
add
je
mov
inc
jno
call
out
sahf
jmp
adc
jl
mov
mov
and
add
inc
jae
arpl
add
add
fs
push
sbb
push
or
je
insb
arpl
outsl
jb
aaa
imul
gs
aaa
imul
outsl
add
je
sbb
push
or
pusha
add
outsb
cs
push
xor
gs
add
add
add
popa
add
add
add
popa
add
add
add
add
add
add
mov
hlt
gs
daa
sub
aad
adc
mov
addr16
xchg
movsb
xor
and
and
add
leave
scas
dec
push
sub
and
imul
test
dec
push
jns
jns
int3
adc
inc
test
pop
push
imul
outsl
mov
mov
in
int3
daa
lcall
xchg
pop
fs
aam
pop
lea
movups
fs
and
sbb
add
mov
das
lcall
in
sub
adc
aad
test
adcb
mov
or
and
ds
mov
lahf
stos
or
push
jp
cwtl
add
ja
xor
adc
and
and
dec
int3
addr16
into
and
fnstenv
iret
push
jecxz
into
xchg
int
push
loop
push
shrb
loopne
ja
and
sub
sub
pop
sub
sbb
and
dec
fnstsw
test
jmp
lds
cmp
loopne
or
call
imul
js
mov
in
xchg
cmp
jns
push
pusha
daa
rorl
mov
jmp
adc
shll
adc
sti
adc
iret
mov
test
mov
inc
jmp
inc
and
mov
in
fistpl
mov
xchg
xchg
sbb
imul
sub
repz
lods
cmp
bound
and
out
and
push
int3
push
loope
call
add
pop
lods
mov
popa
xchg
iret
iret
aad
sti
xchg
cmp
fbstp
aas
cmp
and
popa
mov
add
sbb
gs
push
dec
and
mov
movl
outsl
repz
mov
inc
prefetchwt1
or
loopne
pop
cmp
pop
ds
sub
cmp
sti
jae
test
mov
mov
stos
or
or
inc
in
ret
lds
cmc
jl
mov
adc
popa
out
scas
adc
popa
cmp
fisttpll
inc
mov
in
mov
xadd
outsb
mov
xchg
inc
or
mov
pop
out
imul
xlat
mov
dec
and
mov
shrl
fstp
lret
push
mov
jmp
add
nop
ficoms
inc
or
jecxz
ss
scas
repnz
cmpsb
cmp
arpl
cmp
mov
inc
in
pop
cmp
popa
fcoml
inc
pop
pop
popa
cld
retw
js
xor
test
fs
push
jle
mov
sub
mov
mov
call
mov
push
pop
pushf
xchg
movsb
gs
je,pn
into
ret
jl
jecxz
mov
enter
ja
dec
jecxz
pop
xchg
mov
mov
jns
cmp
es
das
sub
out
call
push
jecxz
dec
outsb
or
sub
and
sbb
push
es
imul
ss
jg
mov
ret
or
ja
notb
dec
test
cmc
sub
divb
rol
mov
stos
xchg
dec
cmpsl
and
ljmp
ja
sti
mov
rcr
sti
and
sarl
jmp
push
mov
fs
nopl
xchg
cmp
pop
test
test
outsb
fisttps
nop
imulb
icebp
xor
movsb
fmuls
add
mov
pop
xchg
ret
xchg
add
add
add
add
add
and
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
mov
add
shlb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
incl
add
incl
push
or
add
inc
add
add
add
stos
add
adc
pop
add
add
add
jno
add
rol
addb
add
add
add
out
in
fmul
add
fucomp
in
fucomp
cld
add
in
fstp
out
rorb
jmp
cld
add
fstp
mov
or
mov
rolb
add
add
int3
int3
or
add
add
int3
int3
int3
fstp
rcr
int3
int3
int3
int3
fmul
int
int3
faddl
int3
int3
in
or
in
int3
in
or
ror
into
fmull
add
rorb
fmul
ffree
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
std
stos
cld
sti
addl
subb
cld
mov
clc
add
cmc
sub
push
sti
addb
mov
sub
cli
addb
pop
mov
sub
pop
mov
mov
pop
sub
clc
idiv
imull
div
idiv
pop
pop
clc
add
add
add
sub
div
cmc
cmc
cmc
add
sub
div
imulb
div
add
add
cmc
imulb
sub
sub
idiv
stc
stc
push
clc
div
stc
stc
stc
stc
stc
stc
clc
clc
sub
stc
stc
imull
sub
sub
sub
sub
sub
push
push
stc
imull
stc
sub
cmc
idiv
clc
clc
sti
sub
stc
stc
cli
sub
clc
cmc
add
sti
cli
clc
clc
lods
sub
cli
cli
push
sub
clc
cmc
add
div
clc
sub
add
sti
cli
div
sub
add
add
sub
add
cli
cli
push
cmc
add
notl
add
sub
sub
cli
addb
testb
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
incl
add
incl
push
or
add
inc
add
add
add
stos
add
adc
pop
add
add
add
jno
add
rol
addb
add
add
add
ljmp
ljmp
cli
out
in
out
fucomp
out
fucomp
out
out
out
ljmp
cli
stos
stos
out
out
ljmp
fdivrp
ljmp
or
ljmp
rolb
int
cli
out
fstp
out
out
cld
add
int3
out
ljmp
mov
fdivrp
in
int
fnstsw
int3
fdivrp
ljmp
int
rolb
int3
int
ljmp
add
add
add
in
int3
int3
int3
ror
add
or
int
cli
in
int3
int3
int3
int3
int
int3
or
fstp
int3
int
int3
int3
int3
int
out
fstp
int3
fstp
int
or
fucomp
cli
fnstsw
fmul
add
ror
out
cli
int3
into
rcr
int3
add
lret
fsubrp
int3
int3
or
ror
add
in
in
int3
add
fldl
or
add
out
fstp
add
int
in
out
out
out
add
or
fucomp
out
out
in
std
rolb
add
int3
out
in
faddl
add
add
rolb
or
in
fmul
int3
int3
fdivrp
cli
stos
stos
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
pop
lock
psubb
add
cld
add
aas
incb
add
addb
jmp
pop
ljmp
add
add
add
add
add
add
or
add
add
addb
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
std
std
std
std
std
cld
cld
sti
std
cld
sti
sti
cmp
stos
cld
sti
addb
stos
cld
sti
addb
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
stos
stos
stos
stos
std
stos
stos
cld
addb
stos
std
stos
cld
sti
addl
cmp
std
stos
cld
sti
addb
add
cmc
sub
push
cmp
std
stos
sti
addb
mov
sub
push
sti
std
cld
cmp
cmp
mov
pop
pop
mov
sub
subb
ljmp
stc
stc
addb
pop
sub
clc
idiv
stc
sti
std
sti
cmp
clc
imull
div
idiv
pop
pop
clc
add
add
add
clc
clc
subb
std
sti
stc
push
clc
sub
div
cmc
cmc
cmc
add
testl
sti
adcb
imull
div
cmc
imulb
div
add
add
cmc
imulb
idiv
stc
cld
std
sti
adcb
sub
sub
idiv
stc
stc
push
clc
div
stc
stc
stc
stc
stc
stc
cli
sti
ljmp
cli
stc
stc
clc
clc
sub
stc
stc
imull
sub
sub
sub
cli
cmp
ljmp
push
push
sub
sub
push
push
stc
imull
stc
sub
cmc
idiv
sub
cmp
std
addb
sti
sub
stc
stc
cli
sub
clc
cmc
add
sti
cli
add
cld
std
cli
sti
cli
push
clc
clc
clc
lods
sub
cli
cli
push
sub
clc
cmc
add
div
add
cli
cld
sti
clc
clc
clc
sub
add
sti
cli
div
sub
add
add
add
ljmp
sub
add
cli
cli
push
cmc
add
notl
add
sub
stos
sti
ljmp
sub
cli
addb
testb
std
cld
lods
stos
cld
sti
sti
subb
add
clc
addb
ljmp
xorb
add
add
sub
push
sti
stos
stos
adcb
add
add
add
add
testb
cld
cmp
sub
cmc
cmc
add
add
sub
ljmp
div
clc
clc
push
subl
std
std
std
std
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
pop
lock
psubb
add
cld
add
aas
incb
add
addb
jmp
pop
incl
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
