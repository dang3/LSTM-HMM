push
mov
sub
movl
cmpl
jne
movl
lea
mov
movl
movl
mov
or
mov
add
cltd
idiv
mov
movl
mov
add
add
mov
lea
mov
lea
mov
mov
mov
and
mov
sub
mov
sub
mov
movl
mov
imul
add
mov
movl
cmpl
jne
movl
movl
mov
sub
mov
sub
mov
mov
or
mov
add
cltd
idiv
mov
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
push
push
push
push
call
movl
movl
lea
mov
mov
mov
imul
mov
movl
mov
sub
add
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
movl
jmp
mov
add
mov
cmpl
jge
lea
push
call
movl
lea
mov
mov
mov
sub
add
mov
movl
movl
lea
mov
mov
and
mov
add
mov
sub
mov
jmp
cmpl
je
call
push
push
push
push
call
push
call
jmp
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
and
add
imul
mov
jmp
movl
movl
movl
mov
or
sub
mov
sub
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jl
call
push
push
push
push
call
jmp
call
push
push
push
push
call
jmp
push
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
or
sub
mov
movl
movl
lea
mov
mov
mov
imul
mov
jmp
call
movl
movl
lea
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
movl
mov
or
mov
add
cltd
idiv
imul
mov
movb
movl
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
add
mov
sub
mov
jmp
push
push
lea
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
and
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
mov
and
mov
add
cltd
idiv
imul
mov
jmp
movl
lea
mov
mov
mov
imul
mov
call
movl
jmp
mov
ret
mov
movl
movl
lea
mov
mov
or
mov
mov
sub
mov
sub
mov
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
sub
add
mov
movb
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
and
mov
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
push
call
add
mov
or
imul
mov
lea
mov
mov
and
mov
add
cltd
idiv
mov
sub
mov
jmp
movl
mov
and
mov
sub
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
push
push
mov
push
call
add
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
movl
mov
push
mov
push
mov
push
call
add
movzbl
test
je
movl
lea
mov
movl
mov
or
mov
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
cmp
jg
movl
lea
mov
mov
mov
sub
mov
sub
mov
jmp
mov
and
add
mov
movl
lea
mov
mov
mov
add
mov
sub
mov
call
movl
lea
mov
mov
mov
and
mov
sub
add
mov
jmp
call
movl
mov
or
mov
sub
mov
mov
push
mov
push
mov
push
call
add
movl
cmpl
jl
jmp
movl
mov
add
add
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
cmp
jg
cmpl
jl
jmp
movl
mov
imul
mov
sub
mov
mov
push
mov
push
mov
push
call
add
movl
mov
add
mov
cltd
idiv
imul
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
sub
mov
movl
lea
mov
mov
mov
sub
imul
mov
movl
lea
mov
mov
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
mov
movl
mov
cmp
jne
lea
mov
movl
mov
add
mov
cltd
idiv
add
mov
mov
add
imul
mov
push
push
push
call
jmp
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
imul
mov
movl
mov
cmp
jl
movl
lea
mov
mov
mov
add
mov
mov
and
mov
sub
imul
mov
movl
mov
add
mov
cltd
idiv
imul
mov
mov
cmp
jg
mov
imul
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
push
call
cmpl
je
push
push
push
push
call
jmp
movl
mov
imul
mov
mov
add
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
sub
imul
mov
push
call
mov
or
mov
sub
mov
sub
mov
jmp
cmpl
jg
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
call
jmp
movl
mov
add
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jl
movl
mov
or
imul
mov
push
call
jmp
movl
mov
imul
mov
movl
lea
mov
mov
mov
add
imul
mov
jmp
push
push
push
call
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
mov
sub
imul
mov
call
call
call
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
mov
or
imul
imul
mov
cmpl
jl
movl
jmp
mov
add
mov
cmpl
jge
call
mov
add
mov
cltd
idiv
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
call
jmp
movl
movl
lea
mov
mov
mov
sub
mov
call
call
movl
mov
and
imul
mov
sub
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
movl
mov
imul
add
mov
push
push
push
push
call
movl
mov
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
mov
movl
mov
or
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
movl
mov
and
mov
imul
mov
push
push
push
push
call
jmp
movl
cmpl
jne
movl
movl
mov
add
mov
movl
movl
mov
add
mov
jmp
movl
lea
mov
movl
mov
mov
or
mov
add
cltd
idiv
imul
mov
movl
movl
lea
mov
movl
mov
or
mov
add
cltd
idiv
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
cltd
idiv
add
mov
jmp
movl
mov
and
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
or
imul
add
mov
movl
mov
or
add
mov
sub
mov
call
push
call
add
shl
push
push
push
push
call
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
sub
mov
call
jmp
movl
mov
add
mov
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
mov
or
mov
or
add
imul
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
movl
mov
add
mov
sub
mov
mov
or
mov
and
imul
imul
mov
mov
mov
mov
push
mov
push
push
push
push
call
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
sub
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
and
imul
mov
movl
mov
add
mov
push
push
push
push
call
movl
mov
or
add
mov
sub
mov
call
movl
movl
lea
mov
mov
mov
imul
add
mov
movl
mov
or
add
add
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
call
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
cltd
idiv
imul
mov
lea
push
call
call
movl
movl
mov
cmp
jne
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
call
jmp
movl
movl
mov
sub
mov
lea
push
call
movl
mov
add
add
mov
call
movl
movl
mov
or
mov
or
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
movl
mov
mov
or
imul
mov
call
lea
mov
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
cmpl
jl
lea
mov
lea
mov
mov
mov
mov
add
mov
call
call
jmp
movl
cmpl
jg
movl
lea
mov
mov
mov
sub
mov
mov
and
mov
sub
imul
mov
mov
sub
mov
jmp
movl
lea
mov
mov
mov
and
mov
add
cltd
idiv
add
mov
mov
sub
imul
mov
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
cmpl
jg
movl
lea
mov
mov
mov
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
mov
sub
mov
jmp
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
cmpl
jg
push
call
call
movl
mov
and
mov
add
cltd
idiv
mov
jmp
mov
sub
mov
mov
add
imul
mov
movl
mov
sub
mov
sub
mov
mov
or
mov
or
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jne
call
call
jmp
push
push
push
push
call
lea
mov
mov
mov
or
sub
mov
push
call
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
lea
push
call
mov
sub
mov
lea
mov
mov
mov
sub
add
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
sub
mov
movl
movl
lea
mov
mov
or
mov
add
mov
movl
mov
imul
imul
mov
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
and
add
mov
sub
mov
lea
mov
mov
mov
imul
mov
cmpl
jg
mov
and
mov
add
cltd
idiv
add
mov
lea
mov
mov
or
mov
mov
add
add
mov
push
push
push
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
add
imul
mov
cmpl
jl
push
push
push
push
call
push
push
push
push
call
jmp
call
lea
mov
mov
add
mov
mov
cltd
idiv
mov
call
cmpl
jg
push
call
jmp
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
push
call
jmp
movl
movl
mov
or
imul
mov
sub
mov
movl
mov
add
imul
mov
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
mov
and
add
add
mov
mov
and
mov
and
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
mov
imul
mov
mov
add
mov
cltd
idiv
mov
sub
mov
push
push
push
call
push
push
call
movl
cmpl
jne
mov
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
lea
mov
mov
mov
or
mov
add
imul
mov
lea
mov
mov
mov
imul
mov
sub
mov
mov
push
call
add
jmp
call
movl
movl
lea
mov
mov
mov
add
imul
mov
cmpl
jne
mov
cmp
jl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
mov
imul
imul
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
and
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
jmp
call
movl
lea
mov
mov
mov
imul
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
movl
movl
lea
mov
mov
mov
or
imul
imul
mov
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
add
mov
mov
cltd
idiv
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
lea
push
call
call
movl
mov
add
imul
mov
jmp
call
movl
movl
mov
and
add
mov
sub
mov
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
call
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
lea
push
call
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
movl
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
and
imul
mov
movl
mov
cmp
jne
push
call
push
call
call
cmpl
jne
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
sub
mov
jmp
movl
lea
mov
mov
mov
add
add
mov
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
and
mov
add
cltd
idiv
mov
movl
mov
and
imul
add
mov
jmp
movl
mov
or
mov
add
cltd
idiv
add
mov
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
imul
mov
call
call
movl
movl
lea
mov
mov
mov
or
imul
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
and
mov
mov
sub
mov
push
push
push
push
call
movl
lea
mov
mov
mov
add
mov
call
cmpl
jg
call
jmp
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
and
add
mov
movl
lea
mov
mov
mov
sub
add
mov
call
movl
mov
or
mov
add
cltd
idiv
mov
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
xor
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
mov
push
pop
mov
cmp
jne
inc
inc
mov
cmp
je
test
jne
cmp
jne
inc
inc
jmp
cmp
jbe
inc
inc
cmpw
ja
mov
test
je
cmp
jbe
ret
push
mov
push
xor
mov
test
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
test
mov
jne
push
call
pop
mov
cmpw
je
push
push
call
mov
pop
inc
cmpw
je
lea
push
call
test
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
cmpw
lea
jne
pop
pushl
call
andl
andl
pop
pop
movl
pop
ret
push
mov
push
push
push
push
mov
push
push
push
call
mov
mov
mov
cmpw
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
shl
push
call
mov
add
test
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
mov
push
andl
cmpl
movl
mov
je
mov
addl
mov
push
pop
cmp
jne
mov
add
push
pop
cmp
je
test
je
incl
test
je
mov
mov
add
mov
add
jmp
incl
test
je
andw
add
cmp
jne
add
jmp
push
pop
incl
test
je
mov
mov
add
mov
add
cmp
je
test
je
cmp
jne
test
jne
sub
jmp
test
je
andw
andl
cmpw
je
mov
cmp
je
cmp
jne
add
jmp
xor
cmp
je
cmp
je
mov
addl
mov
mov
incl
movl
xor
cmpw
jne
add
inc
jmp
cmpw
jne
test
jne
xor
cmp
je
cmpw
lea
jne
mov
jmp
mov
xor
push
cmp
pop
sete
mov
shr
mov
dec
test
je
inc
test
je
movw
add
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
mov
add
incl
add
jmp
test
je
andw
add
incl
jmp
mov
pop
pop
cmp
pop
je
mov
mov
incl
pop
ret
push
mov
push
mov
push
push
xor
xor
push
mov
test
jne
call
mov
test
je
movl
jmp
call
mov
test
je
movl
jmp
cmp
jne
test
jne
call
mov
test
je
xor
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
pop
test
jne
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
jne
test
jne
call
mov
test
je
cmpb
mov
je
push
push
push
push
push
pushl
call
test
je
push
add
call
cmpb
lea
pop
jne
inc
mov
lea
push
call
mov
pop
test
jne
push
call
xor
pop
pop
pop
pop
pop
ret
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
pushl
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
jmp
push
call
pop
xor
push
call
mov
jmp
mov
push
push
push
mov
push
mov
test
jne
call
test
je
movl
jmp
call
test
je
movl
jmp
cmp
jne
call
jmp
cmp
jne
call
mov
push
mov
push
push
push
push
pushl
call
mov
test
je
lea
push
call
mov
pop
test
je
push
push
push
push
push
pushl
call
test
jne
push
call
pop
xor
pop
pop
pop
pop
ret
mov
jmp
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
jmp
jmp
push
mov
push
andl
call
cmpw
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
movl
call
test
je
cmpl
jne
cmpl
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmpb
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmpb
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
pushl
call
xor
ret
push
pop
ret
mov
push
cmp
push
jne
push
xor
cmp
push
mov
jle
mov
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pushl
push
pushl
call
pop
pop
jmp
cmp
jne
mov
mov
mov
test
je
push
push
push
call
mov
cmp
jne
pushl
call
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jmp
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
test
je
push
pushl
pushl
call
add
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmpw
je
inc
inc
cmpw
jne
mov
push
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
dec
inc
add
inc
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
dec
inc
add
dec
inc
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
orl
call
cmp
je
pushl
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
cmp
je
push
push
pushl
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
cmp
jne
mov
ret
dec
dec
neg
sbb
not
and
ret
push
mov
mov
push
cmp
jne
mov
cmp
ja
mov
jmp
cmp
jne
mov
add
and
cmp
ja
mov
jmp
cmp
jne
mov
test
jbe
lea
push
call
cmpb
pop
jb
cmp
ja
push
call
test
pop
je
mov
movl
jmp
add
and
cmp
ja
call
test
je
mov
movl
push
pop
jmp
xor
pop
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
push
mov
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
decb
jne
mov
and
jmp
lea
mov
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
ret
mov
add
and
cmp
ja
push
mov
pop
ret
xor
ret
cmpl
push
push
push
push
jne
mov
jmp
push
push
pushl
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmpl
jne
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
orb
lea
mov
movl
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
pushl
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
pushl
call
pop
ret
orl
pop
ret
push
mov
push
push
push
mov
push
cmpl
je
andl
lea
mov
cmpl
jne
mov
push
add
push
push
call
test
je
orl
decl
mov
test
je
cmp
jbe
mov
incl
decl
je
sub
sub
test
jge
cmpl
mov
mov
je
cmpl
jne
push
lea
pop
cmpl
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmpl
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzbl
add
andb
cmpl
movl
jne
incl
cmpl
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
pushl
call
add
test
jne
mov
addl
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
jb
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
mov
push
push
mov
cmp
jne
incl
mov
cmp
je
andl
andl
mov
lea
mov
lea
cmpl
jne
cmpl
jne
cmp
jne
incl
jmp
mov
lea
cmp
jae
cmpb
jne
xor
and
and
and
lea
cmp
jne
incl
mov
cmpb
jne
incl
incl
inc
jmp
mov
cmp
jge
cmpl
jne
mov
cmp
jl
mov
movl
andl
lea
movzbl
add
cmp
jge
cmpb
jne
movzbl
inc
jmp
mov
mov
cmp
jl
mov
cmp
jne
cmpl
je
incl
mov
add
add
add
cmpl
mov
jl
mov
cmp
mov
je
jmp
or
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
neg
sbb
and
add
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
push
call
mov
mov
push
mov
call
pop
mov
pop
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
outsl
inc
add
jo
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
inc
add
add
add
add
add
add
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
jo
add
jo
add
jo
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
inc
add
jb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
jb
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
jl
cmp
jg
push
call
incl
pop
cmp
je
push
call
jmp
cmp
push
je
cmp
je
pushl
push
call
pop
pop
jmp
lea
mov
jmp
mov
movl
cmp
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
pop
cmp
pop
je
jmp
xor
mov
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
pop
test
pop
jne
cmpb
jne
cmpl
jg
push
lea
push
push
call
andb
lea
push
pushl
call
add
test
je
incl
add
cmpb
je
inc
cmpb
je
push
push
call
mov
pop
test
pop
jne
xor
push
call
pop
xor
jmp
cmpl
jne
xor
jmp
push
push
lea
push
push
push
call
mov
add
cmp
je
mov
mov
cmp
je
pushl
lea
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jmp
call
mov
push
call
pop
decl
mov
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
push
lea
push
lea
push
pushl
call
add
test
je
lea
push
call
inc
push
call
pop
mov
test
pop
je
lea
lea
shl
push
mov
mov
mov
mov
lea
lea
mov
push
lea
push
call
mov
mov
lea
push
pushl
call
mov
push
movzwl
mov
lea
push
pushl
call
mov
add
cmp
jne
mov
cmp
jne
mov
call
test
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
pop
leave
ret
mov
push
push
push
push
push
test
pop
jne
push
call
pop
mov
andb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
pushl
add
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
pop
pop
test
pop
pop
jne
mov
ret
pushl
call
andl
mov
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
je
cmpb
jne
cmp
jne
mov
mov
and
cmp
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
mov
push
push
call
pop
test
pop
je
mov
push
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
lea
push
lea
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
jmp
push
push
call
pop
pop
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
push
pushl
call
pop
mov
pop
pop
pop
pop
leave
ret
xor
ret
push
mov
test
jle
push
lea
pushl
add
pushl
call
pop
dec
pop
jne
pop
pop
ret
push
mov
push
push
push
mov
push
push
push
call
mov
add
mov
test
je
cmp
jne
cmpb
lea
je
add
push
push
call
pop
pop
xor
jmp
andl
push
push
call
pop
test
pop
je
cmpl
mov
lea
jne
cmp
jge
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jge
cmp
je
push
mov
push
add
jmp
cmpl
jne
test
je
cmp
jne
push
mov
push
add
push
call
add
cmp
je
test
je
incl
lea
jmp
or
pop
pop
pop
pop
ret
push
mov
push
pushl
call
cmpb
lea
pop
pop
je
push
push
push
pushl
call
add
cmpb
lea
pop
je
push
push
push
pushl
call
add
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
pushl
mov
call
pushl
call
pop
mov
pop
jmp
pushl
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
push
movzwl
movzwl
push
mov
test
mov
mov
jne
or
jmp
push
lea
push
push
push
push
push
pop
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
push
push
pushl
push
call
add
or
pop
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
xor
cmp
push
push
movzwl
je
push
push
push
push
push
pop
push
call
push
push
push
push
mov
call
push
push
push
push
or
call
pushl
or
call
add
cmp
pop
je
pushl
call
pushl
call
pushl
call
add
mov
mov
mov
or
jmp
mov
mov
cmp
je
push
call
mov
pushl
call
mov
pushl
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pushl
call
pushl
call
pushl
call
push
mov
mov
mov
call
mov
add
mov
mov
mov
cmp
je
push
push
call
push
call
mov
add
mov
mov
mov
cmp
je
push
mov
call
pop
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
movl
mov
xor
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
call
pushl
call
pop
mov
pop
jmp
mov
pushl
mov
mov
mov
mov
mov
mov
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
movzwl
test
jne
or
jmp
lea
push
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
pushl
or
call
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
push
push
push
push
call
add
or
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
sub
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
mov
push
call
mov
push
mov
call
push
mov
call
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
mov
inc
movzbl
jmp
inc
inc
cmp
jne
push
lea
push
push
push
push
pushl
push
call
add
test
je
mov
mov
xor
mov
inc
inc
inc
cmp
jl
mov
push
push
lea
push
push
pushl
push
call
add
test
je
mov
mov
cmpl
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
lea
movw
inc
movzbl
inc
inc
cmp
jle
inc
inc
cmp
jne
mov
mov
add
mov
mov
cmp
je
push
call
pop
mov
mov
mov
cmp
je
push
call
pop
mov
mov
pushl
call
pushl
call
pop
mov
pop
pop
pop
jmp
pushl
call
pushl
call
pop
pop
push
pop
jmp
pushl
mov
mov
mov
call
pushl
call
pop
mov
pop
mov
xor
pop
leave
ret
xor
ret
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
xor
cmp
push
push
jne
call
test
je
mov
mov
jmp
movl
mov
cmp
je
mov
cmp
je
push
push
push
call
add
lea
cmp
mov
je
cmp
je
push
push
push
call
mov
add
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
je
add
push
call
mov
pop
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
je
push
push
push
pushl
call
test
je
lea
push
push
push
pushl
call
test
je
add
push
push
push
call
add
push
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
pop
jl
test
je
mov
add
cltd
sub
mov
mov
sar
pushl
lea
mov
pushl
call
pop
test
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
pop
pop
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
pop
neg
sbb
andl
inc
cmpl
pop
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
push
mov
sub
push
push
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
mov
test
pop
mov
jne
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
test
pop
jne
orw
mov
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
orb
xor
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
xor
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orb
cmp
jne
mov
mov
not
shr
and
pop
pop
pop
leave
ret
pushl
call
sub
pop
neg
sbb
inc
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
pushl
call
sub
pop
neg
sbb
push
inc
push
mov
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
orw
call
mov
mov
ret
push
mov
push
push
push
mov
test
je
cmpb
je
push
push
call
pop
test
pop
je
push
push
call
pop
test
pop
jne
lea
push
push
push
jmp
lea
push
push
push
pushl
call
test
je
lea
push
call
pop
pop
leave
ret
mov
mov
cmp
je
inc
inc
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
lea
push
push
mov
and
push
or
push
call
test
je
lea
push
call
cmp
pop
je
cmpl
je
push
pushl
call
pushl
mov
call
pop
cmp
pop
pop
jne
xor
leave
ret
push
pop
leave
ret
push
mov
sub
lea
movl
push
call
test
je
cmpl
jne
push
pop
leave
ret
xor
leave
ret
push
mov
push
push
push
push
xor
pop
lea
mov
cltd
sub
sar
mov
imul
mov
cmp
je
cmp
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
add
andb
push
pop
jmp
mov
xor
mov
inc
test
je
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
jmp
ret
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
push
push
push
push
mov
push
mov
xor
movl
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
jne
inc
push
call
mov
pop
test
mov
je
mov
push
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
push
push
mov
movl
lea
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
mov
jne
inc
push
call
mov
pop
test
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
movl
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
lea
movl
mov
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
lea
pushl
push
call
lea
mov
add
sub
mov
mov
movl
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
lea
movl
mov
lea
mov
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
add
mov
pop
mov
pop
pop
leave
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
mov
push
push
push
mov
mov
push
call
mov
xor
cmp
je
push
call
push
call
pop
movl
jmp
mov
mov
cmp
jne
mov
cmp
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
andl
inc
cmpb
jne
movl
inc
pushl
lea
push
lea
push
mov
pushl
push
call
add
inc
cmpl
ja
cmpl
je
push
call
pop
jmp
push
call
cmpl
pop
pop
pop
jbe
mov
andb
mov
sub
leave
ret
xor
leave
ret
push
mov
movsbl
push
push
cmp
push
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
push
mov
mov
pop
mov
cltd
idiv
test
jne
push
pop
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
mov
movb
incl
mov
decl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
pushl
mov
mov
pushl
mov
push
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
add
idiv
imul
add
push
call
add
jmp
mov
andl
push
pushl
pushl
pushl
pushl
jmp
mov
mov
mov
mov
test
jne
push
pop
jmp
lea
jmp
mov
mov
mov
mov
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
idiv
cmp
jl
inc
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
pushl
mov
mov
pushl
mov
push
inc
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmpl
je
mov
mov
mov
andl
push
push
push
pushl
pushl
jmp
mov
mov
mov
push
push
push
pushl
pushl
call
add
cmpl
je
mov
push
push
push
pushl
movb
incl
decl
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
mov
pushl
xor
cmp
pushl
setne
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
push
cltd
pop
idiv
jmp
cmpl
je
mov
andl
push
pushl
pushl
pushl
pushl
call
add
jmp
mov
push
pushl
pushl
pushl
pushl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
mov
pushl
cmpl
pushl
mov
jg
pushl
jmp
pushl
call
add
pop
pop
pop
pop
ret
mov
push
push
cmpl
je
mov
mov
mov
test
je
mov
mov
incl
inc
decl
jne
pop
pop
ret
push
mov
push
xor
push
cmp
mov
je
pushl
pushl
pushl
call
add
jmp
mov
mov
cmp
jae
dec
push
mov
lea
test
je
push
mov
push
cltd
pop
idiv
mov
add
mov
mov
cltd
idiv
incl
dec
cmp
mov
jne
pop
mov
add
sub
pop
jmp
mov
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
cmpl
jbe
mov
push
cltd
pop
idiv
mov
add
mov
inc
cltd
idiv
decl
test
mov
jg
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
push
cmpb
je
mov
mov
xor
cmp
je
mov
mov
mov
lea
mov
mov
mov
mov
inc
incl
mov
cmp
je
decl
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
movzbl
testb
je
mov
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
cmpb
jne
pop
pop
pop
leave
ret
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
test
pop
jne
add
jmp
push
push
call
pop
test
pop
jne
add
mov
movb
jmp
test
je
add
mov
test
je
cmpl
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
inc
jmp
add
jmp
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
mov
jg
mov
jmp
mov
test
jle
cmpl
jbe
mov
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
decl
cmpl
jg
mov
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
pushl
push
push
pushl
pushl
call
add
jmp
push
mov
sub
cmpl
push
push
push
jne
xor
lea
push
push
push
lea
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
pop
cmp
je
push
push
push
movl
pushl
pushl
call
mov
add
cmp
je
push
call
pop
cmp
mov
mov
jne
cmp
je
push
call
pop
or
pop
pop
pop
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmpl
jne
push
mov
push
push
pushl
pushl
call
add
test
je
mov
andb
cmpl
mov
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
mov
imul
add
sub
inc
inc
mov
cmp
jl
xor
jmp
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
movl
lea
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
mov
cmp
jne
mov
mov
lea
lea
orw
orw
push
pushl
pushl
pushl
push
call
mov
cmpw
je
cmpw
jne
push
push
pushl
call
add
mov
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
push
pop
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
push
mov
cmpl
push
push
mov
push
je
mov
mov
movb
inc
neg
adc
neg
jmp
mov
mov
mov
xor
push
pushl
push
push
call
mov
xor
push
pushl
push
push
call
mov
mov
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
mov
mov
mov
mov
mov
dec
inc
cmp
mov
jb
pop
pop
pop
pop
ret
push
mov
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
call
call
push
call
pop
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
pushl
pushl
call
push
pushl
pushl
call
add
mov
cmpl
jne
push
push
pushl
call
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
pushl
call
add
jmp
push
push
push
pushl
call
mov
orl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
add
add
add
in
add
hlt
filds
add
add
adc
add
sub
add
inc
loopne
add
add
push
add
aam
add
xchg
loopne
add
add
lret
add
loopne
add
add
dec
in
add
add
rcr
add
in
add
in
add
add
add
je
add
and
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
add
add
fs
add
add
loop
add
add
loop
add
loop
add
loop
add
loop
add
add
and
add
xor
add
jecxz,pt
add
add
push
jecxz
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
add
add
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
add
add
add
xor
add
add
add
loopne
add
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
add
add
jmp
xor
add
xor
add
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
add
jb
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
incl
add
add
inc
inc
add
incl
add
add
inc
inc
add
incl
add
add
inc
add
incl
add
add
incl
add
add
dec
inc
add
incl
add
add
inc
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
cmp
add
cmp
add
add
sub
add
add
add
jns
add
jp
add
pushl
jp
add
pushl
jl
add
jl
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
jne
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
insl
insl
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
jmp
mov
incl
mov
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
call
lods
inc
add
lods
inc
add
add
add
jmp
inc
add
lods
inc
add
add
add
pushl
mov
add
jmp
mov
add
incl
add
add
add
incl
add
add
mov
fists
add
adc
add
add
add
add
add
loopne
add
rolb
add
add
add
add
add
loope
add
add
js
add
es
add
rolb
add
add
add
add
add
add
cmp
add
adc
add
add
add
in
add
hlt
filds
add
add
adc
add
sub
add
inc
loopne
add
add
push
add
aam
add
xchg
loopne
add
add
lret
add
loopne
add
add
dec
in
add
add
rcr
add
in
add
in
add
add
add
je
add
and
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
add
add
fs
add
add
loop
add
add
loop
add
loop
add
loop
add
loop
add
add
and
add
xor
add
jecxz,pt
add
add
push
jecxz
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
add
add
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
add
add
add
xor
add
add
add
loopne
add
add
add
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
mov
inc
gs
imul
je
add
push
gs
imul
insb
add
je
je
dec
popa
outsb
fs
add
xor
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
add
gs
je
push
gs
popa
jo
outsl
jb
inc
add
pop
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
add
gs
je
dec
jne
gs
add
sbb
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
jae
bound
addr16
jb
jae
outsb
je
sgdtl
je
jne
jb
outsb
je
push
add
fiadds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
insb
add
and
push
je
inc
jo
push
add
dec
push
inc
push
dec
cs
insb
add
jo
dec
jae
push
jo
popa
je
add
inc
push
pop
push
push
xor
cs
insb
add
add
je
jo
gs
outsb
je
imul
inc
push
push
push
inc
push
dec
cs
insb
add
imul
gs
je
jb
jne
dec
outsb
outsw
push
add
push
gs
imul
inc
js
je
jb
arpl
jae
pop
add
insb
push
outsb
ja
outsb
fs
add
insl
imul
outsl
arpl
jae
add
inc
jne
jb
outsb
je
jb
arpl
jae
filds
push
outsb
push
gs
js
gs
imul
gs
add
dec
outsl
fs
gs
imul
add
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
movb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
jb
outsb
je
push
dec
add
xlat
add
push
gs
popa
insb
jne
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
dec
popa
jae
inc
jb
outsl
jb
add
add
inc
gs
popa
insb
jne
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsl
fs
gs
imul
add
and
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
jb
jns
mov
jo
jb
popa
je
add
cmc
add
jb
jne
insb
inc
jb
add
jo
jb
add
adc
push
jb
je
inc
imul
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
loop
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
insb
inc
jo
inc
js
je
add
jo
insb
insb
outsl
arpl
roll
gs
jo
gs
insb
insb
outsl
arpl
xlat
add
inc
popa
fs
jb
je
push
je
add
inc
gs
jb
arpl
fs
jae
add
jecxz
dec
outsl
popa
fs
imul
add
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
gs
add
gs
push
dec
jne
je
inc
jns
gs
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
jo
inc
gs
je
imul
push
add
roll
inc
gs
push
dec
outsb
outsw
add
add
push
popa
insb
imul
add
add
push
popa
insb
imul
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
mov
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
mov
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
lea
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
xor
dec
outsl
arpl
gs
outsb
outsw
push
add
and
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
inc
push
add
dec
add
je
inc
dec
inc
push
add
xchg
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
mov
add
add
add
add
add
add
sbb
mov
icebp
dec
pop
andl
add
sbb
ljmp
test
dec
pushl
and
inc
bound
add
jb
add
jne
add
jne
rorl
ds
jp
dec
loopew
mov
pushf
or
movsb
pop
stos
mov
outsb
jnp
stc
ds
push
xchg
insl
xor
pushl
and
inc
bound
add
jp
add
jne
add
jne
rorb
lock
mov
psllq
push
fwait
dec
pushl
lret
pushl
dec
add
int
rorb
jmp
xor
js
mov
push
imulb
dec
sarl
inc
rorb
pinsrw
jnp
mov
rorb
mov
mov
dec
add
mov
call
xorl
add
clc
add
jno
loope
inc
adc
sarb
jns
cld
push
cmpsb
dec
add
jecxz
push
call
cmp
lret
push
fwait
dec
pushl
lret
pushl
dec
add
int
rorb
add
xor
lds
aas
or
aas
or
dec
add
inc
ds
mov
add
es
stc
dec
inc
cmp
adc
popf
call
mov
cld
cmpsb
rorb
and
rep
das
xor
push
insb
sbb
stc
rolb
and
leave
ret
rorl
in
or
enter
inc
shlb
pop
and
clc
mov
sbb
add
adc
test
dec
add
les
call
sub
add
repnz
aad
add
shr
shlb
add
xor
pop
xor
inc
xor
xchg
inc
add
lea
jbe
add
jb
adc
movsb
add
scas
adc
ret
and
enter
enter
ret
sbb
cld
icebp
dec
mov
jl
lock
mov
xchg
test
cmp
add
dec
add
or
lea
pop
daa
xor
test
addl
push
add
int3
push
add
mov
xchg
test
je
mov
dec
lea
mov
mov
cld
icebp
dec
or
push
fmuls
mov
mov
jl
jne
mov
add
lds
decl
lock
dec
mov
add
repz
and
dec
add
std
ret
mov
push
mov
sub
mov
or
in
jne
sbb
inc
jp
sbb
inc
fldt
sbb
outsb
idivb
lea
mov
or
rorl
or
add
scas
mov
cli
mov
je
mov
xor
std
xorb
popf
aaa
decb
mov
popa
pop
test
add
xor
pop
cmp
inc
or
sarb
or
rclb
xor
dec
jae
repz
add
sub
stos
dec
add
mov
shr
sti
adc
ret
fsubs
imull
mov
out
test
inc
test
shr
roll
sbb
dec
outsb
sbb
add
xchg
lods
icebp
dec
jae
icebp
jbe
ja
enter
xor
or
ret
adc
test
movsb
jp
and
add
mov
jp
inc
and
fsts
out
ss
cmpl
aam
outsl
sbb
icebp
dec
xor
mov
jle
pop
xchg
cmp
aad
pop
jb
and
icebp
dec
add
icebp
sbb
adc
mov
insb
outsl
les
add
aas
and
xchg
dec
push
imul
sbb
out
outsl
pop
push
icebp
push
js
test
sbb
loopne
or
xchg
daa
xor
incl
pop
icebp
dec
add
fildll
insb
insb
icebp
dec
add
icebp
dec
add
icebp
dec
add
icebp
dec
add
icebp
xchg
int
xchg
int
jge
cmc
xlat
push
aam
add
lcall
mov
in
sub
lods
aas
pop
sahf
push
cwtl
pusha
fimull
loop
gs
xchg
loopne,pt
xor
cld
cmp
and
push
fcomps
inc
ss
leave
pop
lods
imul
int
add
cmp
jno
sbb
push
cli
lods
push
jmp
shll
dec
inc
rcrl
out
repz
pop
clc
mov
fsts
pop
xor
test
testb
pushf
jns
cmp
sti
popf
popa
inc
rolb
shrb
mov
sbb
outsb
dec
mov
cwtl
nop
mov
leave
xchg
mov
push
jo
jge
es
rorb
push
enter
cmp
push
dec
out
ret
sahf
push
lret
and
shrl
fsubs
and
outsb
jmp
mov
leave
mov
jno
fisttpl
les
inc
roll
or
jl
outsb
xor
data16
cs
xlat
aaa
add
test
xor
jb
xchg
xchg
mov
xchg
adc
or
outsl
shll
and
pop
test
adc
clc
sbb
mov
test
jmp
push
xor
repz
in
test
jg
rorl
mov
ss
xor
out
and
lret
outsl
popf
pop
das
outsl
cwtl
dec
fstl
xchg
jp
xchg
fsubrs
pop
outsl
std
push
xor
out
xor
negb
mov
or
xchg
adc
std
cmpsl
dec
sbb
mov
shll
mov
mov
push
mov
add
cli
out
ja
add
ss
dec
push
shlb
xchg
add
mov
xchg
popf
pop
mov
and
jle
dec
and
adc
sub
xchg
daa
add
data16
cmp
fsubrs
mov
lahf
testl
or
or
push
mov
push
push
sub
addr16
push
dec
imul
xor
cwtl
cmp
iret
jne
int3
sub
sbb
rclb
cmp
or
in
test
enter
test
or
lods
or
sbb
popf
iret
mov
sub
scas
ret
pop
jns
imul
xchg
push
inc
lods
sti
jl
mov
cld
int3
jno
push
or
mov
int
dec
adc
or
or
lcall
push
mov
shr
rclb
mov
lret
andb
inc
out
pop
or
dec
inc
add
inc
ret
push
cs
or
add
subb
imul
int3
dec
cmp
adc
dec
and
sbb
mov
gs
arpl
imul
lods
push
inc
je
aaa
dec
sub
subl
and
inc
pop
loop
pop
cmp
jno
lods
test
and
or
mov
sahf
dec
leave
lock
sub
push
xor
int
enter
mov
push
mov
pop
cmp
dec
cmp
cmp
xchg
jnp
push
push
pop
and
adc
mov
sbb
aam
in
and
cld
and
cld
dec
frstor
mov
mov
icebp
nop
and
sti
and
in
cmp
ja
mov
rorl
adc
mov
aaa
mov
out
adc
or
sbb
ss
sub
int
mov
aad
into
add
or
daa
and
push
xor
mov
xor
call
or
and
cmpsl
fstp
push
add
xor
mov
cmpl
dec
in
and
mov
stos
loop
inc
or
fldl
push
xor
aam
sub
push
bnd
push
inc
xor
push
cmp
and
mov
mov
sahf
pusha
enter
in
xor
and
sbb
jns
mov
pop
mov
mov
out
or
les
flds
loop
addr16
js
mov
loopne
scas
loopne
jmp
pop
rorb
push
adc
out
xorb
pop
or
sbb
insl
or
and
bound
iret
jb
push
rorb
shrl
cmpsb
ret
add
lods
xchg
and
dec
push
and
or
xchg
cmp
mov
or
int
push
xchg
inc
xchg
or
xor
pop
mov
sub
mov
hlt
cmp
adc
stc
fsubs
jbe
movb
flds
xor
add
sub
add
cs
pop
cmp
adc
sbb
jb
push
out
push
push
pop
mov
push
dec
inc
add
inc
lcall
sbb
loope
sarl
loop
sbb
movsb
cmp
sub
sti
push
add
inc
inc
sarl
xchg
inc
dec
insb
inc
dec
ja
dec
in
mov
pushf
shrl
pop
dec
cltd
xor
ss
mov
cwtl
sub
xor
and
lds
sub
mov
inc
js
add
sub
mov
fs
fildll
jb
imul
pop
cli
dec
inc
mov
mov
xchg
das
addr16
sbb
dec
in
sahf
dec
pop
xor
jne
add
popa
sbb
sbbb
notl
bndstx
pop
addr16
or
jl
or
inc
push
sbb
push
xlat
dec
xor
scas
sahf
sub
mov
popa
addr16
or
leave
filds
add
mov
sbb
pop
jno
pusha
and
pop
cmpb
mov
sbb
shll
pop
add
clc
fists
pop
sub
jg
push
and
xor
popa
add
push
subb
dec
pusha
jno
es
xor
mov
inc
sbb
or
push
xchg
jl
jne
push
push
std
pop
enter
xchg
or
lret
inc
fs
xor
xchg
push
and
push
push
fucomip
test
lea
test
or
rcrl
adc
push
cmp
cmovnp
mov
inc
rclb
push
xor
jle
mov
das
cmp
xor
mov
inc
sbb
xor
push
pop
ss
int3
jge
pop
fs
call
addl
fidivs
je
xchg
in
lods
mov
lock
dec
cmp
imul
xchg
or
sub
dec
push
or
xorl
add
xor
lahf
loop
sarb
xchg
mov
test
jae
dec
inc
and
sbb
add
addr16
inc
mov
sbb
and
outsl
clc
cmp
push
cmp
arpl
adc
mov
mov
scas
out
aad
pop
cmp
rolb
pop
movsb
inc
gs
adc
adc
mov
xor
adc
mov
jae
mov
stc
stos
mov
and
push
stos
movsb
aas
push
stc
mov
adc
popa
push
rolb
lcall
xchg
cmp
scas
push
fstpt
pop
or
rcrl
enter
cmp
fmull
imul
sub
jmp
cmp
leave
sub
pop
cld
adc
pop
xor
enter
adc
fcompl
lock
dec
cmpsb
pop
adc
push
or
mov
inc
repnz
jb
add
sub
mov
or
int3
repz
cli
xchg
idivl
dec
inc
xor
notb
js
outsl
sbb
adc
push
xor
push
mov
dec
lods
xor
adc
out
ds
lret
mov
push
je
sbb
pop
mov
sub
aaa
arpl
movsb
stos
sbb
je
pop
out
xchg
popf
mov
adc
add
mov
xchg
and
sub
mov
js
add
xor
inc
cmc
and
dec
jnp
mov
add
jl
mov
inc
mov
and
lret
adc
roll
out
mov
pushl
jnp
lcall
decl
pop
divb
movsb
and
fidivl
int
into
js
push
test
xchg
pop
bound
ds
push
sbb
or
orb
push
daa
or
push
cmp
xor
inc
jnp
or
jl
pop
adc
pop
rcll
push
add
sbb
push
pop
add
adc
inc
or
sbb
jns
and
sub
jle
sub
pop
sbb
ja
xor
ja
sbb
rcll
push
jecxz
pop
and
cmp
mov
ljmp
xor
data16
mov
cwtl
push
orl
in
pusha
adc
cli
pusha
xor
or
data16
pop
rcr
and
mov
mov
push
push
jge
mov
xor
dec
jb
ror
jb
pusha
lods
inc
in
scas
mov
xor
xor
rol
push
das
dec
scas
adc
mov
cld
mov
je
dec
aaa
icebp
clc
outsb
cmpsl
dec
movsb
jle
ds
jle
arpl
cmpb
add
push
xor
aad
aad
pusha
cmp
jns
and
xchg
add
nop
inc
das
fstpt
push
lcall
pusha
push
add
sub
orb
mov
daa
cmp
mov
mov
xchg
and
mov
cmp
dec
std
cmp
lret
rol
jae
subps
xchg
pop
negl
push
scas
xchg
mov
data16
jl
in
fldl
pop
stos
outsl
arpl
fmull
pop
xor
repnz
xchg
jecxz
aas
iret
mov
and
push
not
cwtl
cmp
inc
mov
scas
pop
fisttpl
fmul
sti
sbb
add
out
lret
mov
add
leave
add
sbb
add
pop
adc
andl
xchg
shll
cs
hlt
movsl
inc
das
hlt
pop
cmp
fidivrl
imul
roll
and
mov
mov
lds
orb
inc
mov
stos
insb
or
adc
adc
sarl
mov
xchg
xchg
jno
push
xchg
dec
mov
mov
mov
jge
fldl
fcoml
pop
inc
cmp
daa
test
inc
bound
sub
jb
sub
fs
fwait
pop
outsb
pop
adc
dec
mov
add
out
shl
cmp
decb
adc
or
imul
ret
movsl
das
inc
inc
jecxz
scas
call
fistps
ficompl
dec
test
push
ret
xchg
push
jge
sbb
in
inc
add
mov
push
add
imul
cmp
int3
fcoms
or
mov
mov
std
pop
aas
pcmpgtd
or
popa
push
or
rcrb
pop
or
scas
sub
mov
or
sbb
adc
adc
sub
inc
sub
xchg
pop
xchg
mov
sti
xchg
xchg
sbbb
lret
xchg
pop
sub
push
or
das
stos
push
sub
pop
mov
sbb
push
movsl
cmp
sbb
inc
pop
sahf
pusha
lahf
pop
mov
xchg
cltd
dec
enter
enter
imul
add
sbb
pop
lret
add
add
out
mov
mov
dec
pop
in
lret
and
push
lcall
dec
mov
pop
jo
dec
repnz
fsubl
lahf
repz
add
ja
adcb
icebp
mov
popl
adc
xlat
mov
ljmp
push
cwtl
cmp
xchg
imul
imul
js
subl
xchg
arpl
pop
faddl
push
push
cwtl
mov
int3
add
mov
mov
pop
add
pop
ja
bnd
je
mov
into
push
or
push
fsubrs
jl
insb
xlat
orl
xchg
adc
ficoml
and
adc
cmc
push
mov
popf
sti
cs
pop
xor
sahf
add
cmc
xor
aad
pop
jle
hlt
lea
jl
pop
mov
mov
and
outsl
pop
fs
scas
xor
pop
aas
inc
xchg
add
in
add
mov
or
repnz
rolb
mov
fcoms
bound
dec
jae
dec
andb
test
pop
or
sub
in
add
mov
das
pusha
sub
mov
pop
in
js
or
or
mov
jl
xchg
push
arpl
push
cmpsb
aaa
test
loopne
cs
setb
pop
cmp
clc
cwtl
lahf
test
xor
test
push
inc
adc
mov
push
pop
leave
sub
add
cltd
loop
or
pop
lods
jge
rcrl
pushf
out
dec
and
fwait
stos
add
inc
mov
jnp
sbb
inc
sbb
push
pushf
mov
xor
repz
push
pop
inc
pop
add
loopne
pop
or
repnz
daa
call
dec
adc
pop
and
test
jmp
frstor
lret
mov
arpl
adc
or
adc
xchg
test
mov
jg
xor
stc
xchg
cmp
mov
sbb
lock
sbb
leave
jg
jae
jg
loope
push
push
loope
imul
sbb
ficomps
mov
mov
mov
test
and
mov
js
dec
sub
sbb
fdivl
out
dec
jnp
in
out
xchg
xor
cld
xor
test
lcall
adc
push
jns
sbb
jne
es
test
mov
mov
xor
rolb
or
cmp
inc
outsl
loopne
or
add
adc
jge
mov
push
sbb
dec
pop
stos
pop
ja
add
dec
pop
fsts
push
leave
leave
sbb
push
fmul
push
lods
bnd
imul
adc
mov
adc
test
iret
lods
roll
fimull
dec
sbb
jge
daa
jl
cmpsl
push
cli
sbb
sbb
arpl
lahf
lds
out
lcall
inc
iretw
jno,pn
iret
dec
mov
cmp
in
out
das
mov
clc
arpl
pop
es
pop
stc
popa
add
adc
push
mov
mov
gs
or
in
cli
repnz
sahf
pop
sbb
push
jecxz
inc
cmp
cwtl
mov
pop
push
add
out
aas
sbb
orl
pop
inc
fiaddl
and
push
add
movsb
adc
xchg
ljmp
mov
sub
pop
loopne
cmp
jg
cmp
push
or
and
leave
loope
scas
jns
lods
scas
iret
in
mov
jno
repz
xchg
insb
cmpsb
shrl
call
cmp
insb
sbb
adc
mov
xchg
cmp
xor
inc
clc
sub
ss
sub
fucomp
pop
xor
lds
test
and
rclb
or
push
mov
mov
pop
aas
sti
addr16
or
jmp
push
adc
cmp
inc
mov
test
cld
rcr
repz
lock
lock
xor
push
in
sbb
xchg
jg
add
and
sahf
xor
dec
mov
cltd
push
or
mov
push
nop
jle
popf
xchg
out
fs
lcall
xchg
add
ret
outsl
ja
add
test
push
rcrl
push
call
cltd
mov
fucom
push
arpl
aam
fwait
aam
cwtl
fwait
pop
cld
or
or
in
movl
out
cmp
sub
cmpsb
shll
push
cmp
sub
jl
add
mov
fucom
mov
sbb
xlat
ds
ljmp
jnp
sarb
movl
inc
sub
gs
xchg
orb
test
rcr
xchg
push
add
daa
inc
push
xchg
cmp
nop
jg
pop
add
cmp
pop
and
test
inc
push
push
test
add
add
call
insb
mov
add
shlb
jecxz
lods
out
push
mov
addr16
aas
lret
in
mov
xor
mov
lret
push
arpl
mov
jns
ja
mov
repnz
mov
push
nop
xor
call
in
pop
imul
addr16
jp
and
or
add
push
fmuls
push
rol
fdiv
sbb
pop
push
adc
fs
fstpl
push
out
pusha
mov
ds
stos
or
jno
and
add
jp
int3
repz
imul
out
movb
dec
scas
jmp
inc
xor
dec
inc
jno
fcom
xchg
and
cmp
outsl
fwait
mov
and
sub
cmp
mov
jno
fstpl
inc
add
sub
dec
sbb
xchg
add
or
mov
adc
xchg
mov
movsl
insl
and
add
repnz
stos
mov
mov
jg
mov
xor
xchg
pop
push
inc
and
repnz
js
sub
leave
pop
inc
jmp
scas
jge
jmp
jnp
sbb
movsb
or
sbb
aam
daa
mov
aad
xchg
aad
mov
hlt
ljmp
pop
fwait
ljmp
push
or
mov
jmp
pusha
mov
sarb
ja
cmp
loopne
leave
jmp
pop
xor
or
or
xor
sbb
loopne
cmp
mov
sarb
jo
movsb
add
add
cmc
xor
xchg
sbb
pushf
ret
pop
or
lea
mov
dec
jae
cld
in
test
jo
js
pop
je
test
rclb
dec
or
lea
inc
mov
cmp
ds
add
into
jle
cmp
add
cmp
stc
pop
hlt
sub
add
xchg
sbb
xor
in
into
inc
xlat
faddl
out
pop
add
jmp
add
push
add
sub
outsl
mov
add
dec
push
xor
mov
cmp
pop
ret
add
pop
and
out
pushf
dec
popa
addl
xor
xchg
ds
pop
pop
sbb
dec
mov
jmp
test
push
gs
ficomps
stc
push
sbb
adc
xor
push
std
int3
jne
jge
jne
lret
outsl
mov
adc
xchg
pop
inc
jge
aam
add
sub
add
or
std
clc
cli
mov
fisttpll
add
lods
ret
insb
aaa
bound
lds
or
sahf
sbb
icebp
sahf
repnz
sub
lods
lock
pop
sti
lahf
test
jne
fprem
iret
stc
mov
jge
pop
push
push
mov
cmp
loope
add
add
outsb
pop
mov
cmp
mov
jne
mov
and
hlt
cmp
rorl
mov
adc
adc
xor
jmp
lcall
sub
add
adc
cmp
mov
jae
test
jae
iret
mov
mov
jbe
sub
mov
lods
nop
pop
push
cmp
sbb
scas
pop
add
jle
sbb
sub
lock
dec
cmpb
add
fs
dec
pop
inc
popa
mov
pop
add
mov
call
cli
lcall
aam
inc
bnd
int3
inc
mov
stos
scas
mov
jns
out
cmpsb
int3
dec
xchg
mov
and
sub
and
fisubl
pop
fiadds
xchg
push
or
sub
jl
icebp
push
add
inc
push
ret
push
sub
xchg
pop
pop
imul
mov
mov
mov
std
mov
cmove
push
sub
push
cmp
xor
jg
mov
test
add
adc
lret
clc
lcall
dec
pusha
outsl
xchg
dec
pop
cmp
sub
mov
sbb
mov
lret
xor
jl
xor
movsb
std
fidivs
or
push
popf
sahf
sbb
leave
mov
mov
mov
movsl
cld
jbe
xor
adc
in
outsl
andl
ds
jcxz
and
jno
pop
mov
mov
call
enter
jge
push
mov
dec
lcall
jg
gs
push
in
test
rorl
pop
xor
aad
and
enter
ja
xlat
adc
or
xlat
in
push
addr16
in
insl
cmc
pop
and
cmp
xlat
ja
mov
subb
dec
sahf
addr16
dec
test
mov
inc
jmp
pop
mov
daa
dec
add
shr
adc
insb
loopne
adc
int
mov
sbb
movsl
jae
test
pop
push
jns
imul
pop
stc
clc
setno
mov
pop
pop
sbb
xchg
mov
xchg
mov
xchg
cmpb
lock
sub
lea
adc
mov
or
out
push
jmp
add
xlat
imulb
push
pop
dec
in
pop
or
push
jecxz
loopne
xor
pop
pop
inc
adc
jle
out
mov
jb
mov
xchg
lret
xchg
inc
inc
out
shr
or
scas
inc
enter
btr
sbb
decb
push
xchg
push
mov
in
xchg
xchg
addr16
lock
and
arpl
and
iret
into
mov
add
stos
mov
or
lods
lahf
inc
jno
dec
sbb
adc
xchg
in
aas
in
and
mov
xchg
call
movsb
loope
dec
adc
add
xor
add
testl
lea
adc
shll
popa
mov
cmp
mov
mov
sub
sbb
mov
dec
pop
sub
sbbl
or
inc
in
cmpl
cs
les
cmp
fsubrs
flds
sbb
mov
decl
fcoml
or
dec
popf
aaa
cmp
push
fwait
pop
nop
jp
out
mov
mov
mov
jle
push
xor
ds
imul
icebp
adc
adc
xor
insl
pop
jle
and
mov
les
inc
xchg
scas
inc
ds
pop
out
mov
inc
es
add
lcallw
add
shl
fiadds
sub
add
xchg
mov
cmpb
fs
loop
mov
jp
jge
ret
pop
jge
sahf
mov
jbe
mov
push
sbb
push
sbb
add
sub
sub
negb
lret
inc
stos
sbb
adc
push
rcll
sub
cmp
lods
loopne
xchg
mov
aas
je
adc
enter
and
clc
daa
bound
cmp
ds
popa
and
pop
pop
mov
imul
movsl
jmp
arpl
imul
add
pop
ret
pop
mov
jecxz
pop
add
arpl
sbb
push
rolb
jo
cmc
test
lcall
add
inc
mov
add
jnp
xchg
lret
mov
sub
comiss
cmc
add
popa
fwait
xchg
dec
fs
movsl
clc
stos
jecxz
pop
pop
dec
pop
pop
adc
gs
out
paddw
add
lods
rclb
mov
cwtl
push
insb
int3
loope
adc
int
jnp
push
fists
stc
ret
push
repnz
xor
shrb
insb
dec
xchg
mov
lds
je
mov
aam
xor
sbb
pop
sbb
lret
cmp
xchg
mov
add
add
in
xchg
pop
daa
sub
add
add
or
fisttpll
lock
loop
jbe
in
pop
test
xchg
add
mov
lods
adc
and
push
jnp
dec
dec
roll
adc
sbb
psrlw
pop
popf
jb
mov
int3
aam
ret
insb
bnd
lds
test
ljmp
push
dec
dec
rcrb
jno
out
je
lock
pusha
cltd
sub
push
mov
addr16
dec
ja
stos
xlat
add
and
ret
pop
loopne
vcvtsd2ss
sahf
loopne
aas
and
mov
insl
mov
imul
ss
fwait
loopne
inc
and
cwtl
repnz
lea
imul
inc
cltd
sub
hlt
nop
inc
jne
hlt
fisttps
lcall
jae
shlb
add
mov
jbe
mov
xchg
into
lds
jb
jg
aas
test
out
fcoms
pop
ret
sbb
fisttps
add
fstl
sub
mov
inc
cmp
jecxz
push
mov
push
shll
jp
movsl
cmpsb
pop
push
dec
jnp
pop
pop
pop
iret
xchg
in
test
pop
dec
xor
clc
out
es
add
add
sbb
ret
mov
jb
aam
xchg
sbb
in
xchg
in
ds
shll
cmp
pusha
cmpl
mov
pop
stos
inc
pop
dec
or
mov
pop
add
lock
xchg
in
xchg
outsb
jp
aad
popf
lea
inc
dec
xchg
outsl
and
xchg
mov
fnsave
imul
scas
sbb
sbb
add
pop
daa
addr16
mov
ss
jno
fsts
cltd
shrb
pop
sbb
outsl
je
cmpxchg
jle
sub
shll
ds
inc
cltd
sbb
sbb
push
sahf
aad
in
outsl
inc
xor
xor
mov
adc
addr16
push
decb
ret
mov
mov
bound
adc
cmp
push
lcall
xchg
sbb
loop
pop
andb
push
jmp
jmp
loope
nop
in
lock
push
popf
mov
mov
aam
mov
ljmp
dec
test
movsb
cmovb
sub
xchg
fwait
out
cld
jb
out
push
ret
inc
cltd
xchg
sub
xchg
xor
pop
push
xor
xor
jg
adc
clc
push
lods
jno
icebp
xchg
aam
inc
pop
loop
mov
xchg
orb
xor
test
or
push
push
inc
lcall
pop
or
jns
outsb
adcl
mov
lcall
xor
adc
cmp
jno
hlt
shl
es
xor
add
int3
sahf
into
ljmp
or
sbb
jne
je
testb
or
add
stc
pop
jno
mov
divb
dec
or
jge
ret
sub
sbb
pop
lea
pop
cmp
jno
fistl
jmp
sbb
loop
mov
es
les
sbb
and
cmpsb
adc
ret
pop
push
xlat
lea
sbb
cmp
ffree
mov
orl
icebp
jae
lea
sti
pushf
or
pop
dec
cmp
mov
or
xchg
sti
notl
xlat
push
das
dec
cld
xchg
mov
ret
mov
inc
adc
stos
pop
fbld
push
xchg
push
insb
pop
jecxz
test
cmpsl
jns
aad
in
mov
xlat
add
push
lret
or
push
popa
push
dec
icebp
cld
inc
hlt
subl
inc
jne
jnp
mov
pop
adc
cmp
push
xlat
movsb
data16
cltd
aaa
push
xor
int
cmp
pop
push
dec
xor
add
jge
push
cmp
mov
mov
inc
pop
push
pop
rorl
cmp
incb
repnz
cmp
test
push
out
sahf
cmp
sub
push
dec
mov
jg
pop
stc
lret
addl
mov
les
sub
sub
xor
or
pop
or
fisttpl
shrl
cmovno
inc
sub
sbb
cmp
and
dec
sbb
sbb
push
sub
cmp
fldt
or
jno
jbe
add
push
repz
ret
daa
sahf
popf
jns
jno
and
mov
xchg
dec
dec
std
int3
shll
stos
outsb
inc
mov
mov
add
cmp
cmpl
in
movsl
out
call
jmp
nop
mov
adc
ret
in
mov
sbb
ljmp
in
jp
popf
daa
pop
popf
adc
lahf
inc
aad
jmp
int
jl
addr16
sub
shll
imul
outsl
sub
pop
ss
inc
and
data16
test
test
pop
in
push
pop
test
mov
inc
jnp
aad
xchg
loopne
ret
popf
xchg
cli
dec
push
jno
pextrw
or
jno
scas
data16
add
icebp
push
rcll
ret
adc
xor
inc
pop
inc
inc
pop
cld
xor
aad
enter
inc
pop
ficoms
orl
cld
jno
fsubs
and
add
test
sbb
dec
mov
stc
pop
ret
cmp
inc
adc
sub
xchg
xor
imul
push
xchg
adc
inc
xchg
pop
mov
inc
sub
inc
add
lds
adc
dec
test
cld
push
movsb
xor
mov
repz
pop
addl
adc
inc
inc
cld
mov
pop
aaa
jne
les
sbb
mov
adc
mov
lock
jge
ror
cmp
mov
mov
adc
sbb
divl
xchg
aam
inc
mov
aad
sbb
negl
pop
adc
inc
add
mov
add
pushf
mov
lret
push
mov
inc
dec
gs
jp
imul
pop
fwait
xchg
fimull
mov
leave
and
or
arpl
js
mov
xor
dec
lcall
jnp
ret
jge
dec
cmc
hlt
mov
pusha
and
insl
adc
add
inc
stc
adc
xchg
aam
adc
dec
adc
fistps
rclb
xor
pop
and
in
xchg
push
sbb
test
cmpsl
xor
xor
dec
pop
and
shl
mov
xor
insl
and
ja
sarb
adc
pushf
jl
aam
and
mov
push
add
lods
int3
xor
mov
dec
jno
jle
mov
inc
sub
jbe
stos
and
loop
repz
push
dec
jg
and
insb
mov
jnp
aaa
pop
out
xchg
rorl
mov
and
iret
adc
mov
jl
hlt
mov
movsb
jbe
xchg
push
movhlps
jg
pushf
cmp
gs
cmp
jns
or
xchg
stc
dec
in
js
and
add
mov
inc
xor
aad
xorl
scas
pop
cli
push
pop
stc
sti
ret
jge
dec
daa
hlt
lahf
pop
mov
add
mov
sbb
aad
test
in
xor
jp
es
fnstenv
pop
dec
push
mov
mov
loope
push
dec
lret
hlt
mov
mov
mov
inc
pop
and
xchg
pop
dec
test
testl
mov
xchg
sahf
adcb
xor
pop
inc
xor
sbb
dec
mov
sbb
sbb
adc
fs
and
data16
int3
inc
ret
adc
xchg
icebp
add
mov
push
out
push
lret
ret
and
add
rorb
test
enter
in
out
imul
lods
inc
push
movsl
call
inc
xchg
cmp
pop
mov
jo
jecxz
push
dec
cmpsl
mov
and
jmp
mov
push
pop
xchg
sbb
fisubs
xor
adc
dec
mov
lods
adc
and
test
addr16
pop
xor
push
mov
test
xchg
ret
jge
dec
xchg
hlt
cmp
sbb
out
and
jg
sbb
xor
lret
fisubl
mov
lods
fidivrs
inc
xchg
xor
jnp
xor
pop
cmp
ret
jge
dec
dec
hlt
in
das
sbb
loope
stos
mov
mov
mov
sbb
fistl
ds
lahf
adc
mov
jge
pop
adc
sbb
mov
adc
inc
sub
mov
mov
imul
insb
xchg
and
jb
jp
push
jge
adc
mov
inc
sahf
cmpsb
adc
loop
mov
frstor
add
stos
adc
enter
in
mov
mulb
arpl
inc
bound
aad
or
repnz
adc
outsb
aad
xlat
xor
ficoms
into
inc
ret
jge
dec
mov
popf
pop
movsb
sbb
mov
inc
xchg
xlat
dec
add
iret
fisttpl
adc
inc
jl
iret
aad
stos
xor
fdivrl
add
ret
jge
dec
stos
hlt
jmp
push
sbb
jecxz
inc
add
pop
aad
mov
scas
mov
gs
shlb
aad
lret
dec
jge
fistpl
push
int3
xor
ret
jge
dec
jno
inc
pop
xchg
sbb
fisubl
mov
pop
dec
cmp
push
xor
add
push
sahf
adcl
sub
addr16
push
outsb
pop
xlat
ja
add
hlt
mov
sbb
inc
or
add
data16
pop
mov
aaa
pop
xchg
mov
int
cmp
out
dec
jl
dec
inc
iret
xor
sti
dec
and
test
ret
jge
dec
push
hlt
xchg
pop
push
sbb
xorl
pop
xchg
xchg
jne
shlb
xor
sbb
jnp
inc
pushl
fst
ficoms
ficomps
push
xchg
inc
adc
mov
jle
cmpsl
pop
mov
mov
in
fcomps
xchg
stos
dec
das
mov
xchg
int3
adc
mov
push
sahf
fistl
jo
lahf
dec
arpl
cmp
dec
adc
cltd
unpcklps
enter
in
cmpsb
push
and
add
cld
lds
xchg
adc
push
add
jp
push
push
clc
jecxz
js
dec
mov
adc
lret
in
or
pushf
in
mov
sbb
lods
addr16
kunpckbw
and
sub
inc
inc
mov
inc
xor
pop
rcll
and
jmp
fwait
hlt
pop
pop
adc
mov
in
push
xchg
xchg
rorl
mov
test
out
mov
mov
add
dec
xchg
push
adc
push
push
mov
jl
popa
test
mov
pop
in
jl
insl
xor
pop
xchg
xchg
sbb
xchg
add
or
and
stos
scas
mov
push
push
cli
ret
outsl
mov
sub
clc
aas
and
add
sti
sbb
out
mulb
testb
movsb
pop
leave
stos
cmp
pop
test
fmuls
loopne
ficompl
inc
daa
mov
mov
test
int3
pop
and
stos
rorl
inc
jae
or
inc
stos
scas
push
sbb
inc
dec
lret
stos
add
stc
test
add
adc
or
jnp
pop
repnz
xorl
lods
in
mov
insb
xchg
loop
sbb
outsb
inc
aad
xchg
lds
push
mov
scas
pop
rol
jmp
test
aaa
mov
dec
in
sub
add
xlat
xor
ja
jg
push
rcll
adc
out
mov
pop
cmp
mov
cltd
adc
call
ja
mov
push
add
mov
jle
mov
movsb
ret
inc
inc
rcll
sub
xor
xlat
stc
scas
addr16
or
ret
das
jp
mov
cmp
and
movsl
shrb
lret
ljmp
mov
add
mov
mov
cwtl
pop
test
lcall
lcall
jecxz
lcall
pop
roll
cli
mov
xchg
mov
or
aam
xor
test
arpl
roll
frstor
enter
mov
xchg
or
loop
pop
imul
outsl
bnd
pop
add
nop
aaa
lods
add
add
in
je
dec
mov
adc
xchg
xchg
push
push
push
and
test
out
or
mov
cwtl
push
inc
xchg
sbb
xor
mov
movsl
sub
and
les
icebp
or
sub
xchg
add
pop
mov
xor
sub
jecxz
out
mov
popa
lret
pop
add
mov
pop
jns
je
gs
test
stos
pop
fwait
lods
fiaddl
add
arpl
insl
jne
les
lret
cmp
test
add
pop
loope
fsubrl
add
mov
pop
add
push
pusha
aaa
pop
push
ds
cwtl
push
or
fdivrl
adc
mov
call
jge
nop
rcrb
pusha
push
mov
data16
call
add
movsb
mov
inc
cld
mov
fmull
or
jl
mov
xchg
push
clc
sbb
mov
addb
pop
loopne
mov
sarb
add
std
jae
and
pop
xchg
cmp
insl
ret
pop
outsl
sbb
daa
cmp
jne
jg
and
or
jo
xchg
jge
mov
mov
xchg
rol
or
lds
pop
ja
aam
push
inc
pop
push
loop
jle
lock
cmp
or
sbb
push
in
pop
push
lods
pop
scas
adc
hlt
andl
jmp
lret
mov
dec
push
scas
push
add
push
cmp
adc
daa
and
mov
push
shrl
arpl
cmpsl
test
int3
xchg
ficompl
xchg
adc
xchg
push
xor
sarb
imul
add
imul
out
cltd
rcll
push
and
mov
push
cmp
cmc
loopne
adc
jae
test
mov
pop
out
sbb
nop
add
pop
mov
shll
jno
sti
jmp
adc
lods
xchg
iret
movsl
cmpsl
xchg
stc
add
jle
push
std
cmp
popf
ret
popf
pop
sbb
mov
adc
rorl
call
scas
fcmovnbe
scas
cmc
fucomi
pop
stos
out
rclb
je
iret
and
cmc
mov
adc
cmp
arpl
test
xchg
xor
dec
jno
add
sti
ret
scas
inc
mov
xchg
fidivrl
imul
inc
dec
jmp
mov
pop
js
into
mov
pop
mov
lcall
aas
and
int
xor
pop
pop
stos
aaa
cld
jno
testl
dec
out
cwtl
jg
fcompl
adc
das
jbe
sbb
out
cmpsl
in
int3
sti
jno
mov
sub
mov
mov
mov
inc
gs
outsb
push
mov
add
mov
pushf
pop
fisubs
sti
push
push
cs
jo
pop
ljmp
push
cltd
dec
test
add
xlat
sub
sbb
cltd
xchg
dec
pop
movsl
sub
mov
mov
jbe
add
fucomip
out
mov
inc
mov
mov
xchg
xacquire
and
jns
fiadds
pop
loopne
ljmp
cmp
xor
fldl
scas
lret
movsl
inc
je
sub
add
subl
arpl
in
and
jle
call
xor
pop
data16
sbb
push
push
leave
inc
rclb
push
fwait
sbb
pop
je
dec
ljmp
dec
sbb
iret
xor
or
adc
mul
cwtl
mov
movsl
pushf
mov
or
addr16
nop
ret
jge
dec
mov
sbb
inc
leave
outsb
mov
xchg
push
dec
add
and
gs
jecxz
adc
mov
mov
cmp
add
movsl
mov
adc
mov
or
fildll
cld
add
push
inc
mov
xchg
aad
fisubl
jnp
inc
mov
pusha
xor
pop
mov
ret
jbe
and
pusha
xor
into
add
call
fidivrs
lods
cmc
xor
jbe
push
pop
shlb
adc
inc
sbb
sub
push
movl
or
arpl
dec
sbb
lods
scas
pop
lods
mov
xchg
inc
dec
xor
aad
xor
das
push
fsubrl
ret
jge
dec
inc
hlt
fs
mov
out
iret
les
xor
cmpsl
aad
in
and
fwait
subl
cmc
cmpsl
xor
dec
pusha
mov
movsb
in
ret
jge
dec
ret
pop
pop
sbb
or
xchg
dec
xchg
mov
push
mov
test
mov
jb
jle
jae
xorb
dec
mov
lock
and
adc
mov
mov
jno
xchg
adc
inc
mov
xor
add
adc
mov
sub
push
push
adc
xor
adc
pop
fisubrl
out
pop
mov
out
fs
ljmp
xchg
and
adc
lods
mov
xor
push
sub
fimuls
mov
jo
movsb
ret
jge
dec
movsb
hlt
xor
sbb
or
loop
mov
rcr
adc
mov
push
sahf
rclb
les
mov
dec
adc
enter
in
push
sub
jno
arpl
out
dec
pusha
and
jp
lods
sarl
inc
std
xor
aad
mov
add
mov
adc
push
push
push
in
pop
repnz
outsl
dec
out
mov
jne
incb
notb
mov
in
push
std
pop
ljmp
enter
in
pop
push
movl
or
push
aad
xchg
xchg
in
push
sbb
sahf
cmp
test
jl
addb
push
lock
enter
in
cmpsb
push
jae
loopne
aaa
pop
pop
lods
sahf
xor
movsl
aad
lret
loop
lods
addr16
inc
jle
or
mov
mov
adc
inc
xchg
push
enter
in
mov
mov
xor
mov
aad
pop
and
je
lods
inc
jnp
inc
fidivs
xor
aad
xor
pop
dec
push
mov
aad
test
hlt
sub
sbb
js
adc
xor
iret
int3
xchg
sahf
call
push
push
xchg
mov
adc
iret
and
scas
add
xchg
in
jmp
adc
xchg
xor
inc
sahf
rclb
ljmpw
or
outsb
mov
adc
les
and
in
aad
adc
add
mov
inc
inc
jge
aad
pop
and
or
inc
shll
aad
add
mov
daa
stos
mov
hlt
dec
xor
imul
mov
inc
cmp
xchg
adc
mov
cmp
or
cwtl
xchg
xchg
add
mov
out
je
inc
fwait
lods
les
mov
and
es
rcrl
jae
xor
xchg
popa
dec
in
sbb
mov
jmp
aas
adc
xchg
push
add
push
pushf
sahf
aaa
pop
mov
push
push
iret
mov
jle
pop
pop
fstpl
mov
mov
pop
and
aad
ss
sub
mov
sahf
les
push
cld
xor
xchg
push
fisttpl
xchg
lahf
xchg
icebp
sbb
popf
cmpsb
divl
adc
xchg
aad
mov
lods
test
pushf
in
pop
pop
test
rorb
cs
in
fldcw
inc
add
sub
int3
jge
aad
push
and
ds
lods
or
xor
aad
push
mov
xor
lods
adc
inc
call
and
sub
daa
lods
test
jge
aad
frstor
js
lods
in
jnp
inc
lods
xor
xlat
push
xor
cmp
push
pop
pusha
push
ret
pop
in
ret
jge
dec
lods
hlt
loop
jns
add
add
push
xor
pmullw
and
mov
lods
jp
mov
aas
xor
dec
mov
and
push
in
int
ret
jge
dec
stos
hlt
imul
mov
push
pop
aad
xchg
addb
mov
mov
in
xor
in
mov
negl
push
dec
scas
hlt
scas
pop
xchg
sbb
fdivrl
lods
push
pop
test
mov
xchg
fwait
dec
fsubl
punpckhbw
je
jp
int3
test
adc
repnz
or
pop
pop
std
flds
inc
popf
ja
leave
adc
sbbb
lahf
push
push
repnz
adc
jge
dec
js
push
pop
push
sbb
push
mov
mov
sbb
lret
xor
cmp
int
adc
pop
popf
push
dec
iret
xchg
and
sbb
cltd
inc
pop
sub
enter
in
fsubrs
testb
mov
hlt
or
lods
pop
inc
pop
fadds
in
into
ret
jmp
jae
dec
mov
mov
adc
das
mov
mov
adc
sub
inc
jle
jp
sub
xor
insl
sahf
out
or
push
mov
mov
fdivs
es
lret
xchg
movsl
enter
enter
fxam
push
aad
hlt
insl
je
push
xchg
pop
cmp
mov
dec
cmp
insb
outsb
loopne
fisubl
push
shr
jmp
rorb
mov
xchg
test
aaa
lret
sbb
xchg
push
sbb
negl
fsub
outsl
adc
pop
rcl
xlat
ds
xchg
adc
mov
int3
push
mov
lock
sub
xchg
adc
test
lods
cmpsb
pop
or
cltd
addb
adc
cld
rorb
nop
cmp
xchg
aad
pop
and
cmp
xor
dec
push
sbb
mov
push
aam
push
mov
xchg
in
sbb
adc
rcrb
mov
add
adc
sbbb
imul
enter
pushf
jg
cltd
outsb
dec
push
ror
daa
xor
hlt
ss
pop
adc
sti
cmp
push
mov
sarl
adc
xchg
xchg
push
subb
xchg
int3
mov
movsl
adc
push
lock
xchg
xor
jae
xchg
xor
pop
sarb
xchg
xor
lock
adc
movb
int3
adc
xor
xchg
mov
xchg
popa
add
push
test
cwtl
jb
adc
ret
cltd
invd
jnp
xchg
movsb
adc
mov
leave
xor
rclb
scas
push
rcll
adc
or
orl
rclb
jno
adc
or
add
xor
adc
mov
cltd
mov
fdivl
dec
and
lock
lahf
aam
jae
xor
je
lea
mov
cmp
icebp
mov
and
sar
stc
xchg
xchg
adc
sub
shl
sub
sar
and
sarl
adc
decb
dec
pop
cltd
fsubrs
xor
mov
cmp
dec
add
sub
xchg
sbb
filds
call
xor
adc
or
jp
leave
fistl
insb
add
xchg
jns
push
cmpsb
push
sub
aas
mov
rorb
in
jnp
popa
push
xchg
dec
jo
sub
shlb
adc
into
pop
adc
in
add
rclb
call
xor
pop
push
into
push
dec
sub
es
mulb
jo
incb
xchg
xchg
rolb
scas
les
sahf
mov
add
and
push
and
aam
push
adc
in
mov
ficompl
jp
loopne
testb
fnsave
and
dec
add
adc
fcompl
ds
xchg
inc
outsl
push
outsl
adc
or
sbb
pop
adc
dec
fcmovne
push
jg
inc
scas
mul
cltd
pop
add
lods
arpl
fwait
cmpsb
shll
sbb
sbb
fstl
pop
fsubl
push
or
je
loopne
gs
inc
adc
push
adc
call
mov
mov
jle
xchg
and
dec
cmp
and
pusha
leave
inc
scas
pop
mov
shlb
nop
cmp
incl
gs
stc
int3
add
cmp
movsl
dec
pop
lock
mov
mov
into
adc
test
add
repz
and
dec
pop
jae
nop
xchg
cmp
lcall
mov
int
jo
jno
sbb
bound
jg
adc
add
jb
fs
xor
push
sub
dec
sbb
dec
jbe
stc
rcll
nop
mov
data16
cmpsb
flds
add
dec
push
mov
push
lock
push
rclb
xchg
in
loope
mov
add
cltd
loop
inc
adcb
push
sbb
js
cmp
jne
adc
sub
fstl
popa
js
ljmp
or
push
popf
out
inc
fisttpl
and
pushf
cmp
adc
mov
imul
mulps
mov
scas
sahf
inc
push
xor
pop
icebp
adc
add
push
rorb
dec
aad
popa
cld
add
ret
mov
xlat
inc
popf
fwait
loope
pop
dec
pop
aad
out
or
add
add
add
pop
int
cmp
inc
add
pop
push
inc
movsb
jo
inc
push
add
mov
jno
inc
xchg
daa
or
push
sub
aam
push
add
xchg
mov
ljmp
loop
xlat
mov
cs
xor
push
mov
in
push
ds
mov
dec
mov
shrb
pop
cmc
adc
negb
dec
popl
add
dec
lahf
xchg
pop
stos
cmp
loope
lea
fmuls
push
push
out
ret
and
out
jno
cld
jno
idivb
shl
xchg
mov
pushf
imull
adc
jp
cltd
or
pop
mov
scas
sub
imull
bound
lret
pop
aad
ds
mov
out
pop
or
repz
push
popa
lret
popf
or
jg
inc
push
push
xchg
push
je
mov
mov
ds
jp
mov
jecxz
xor
push
std
aad
sar
out
popl
push
fld
fcmove
cmp
das
lods
cltd
movsb
and
pop
stos
mov
adc
out
add
pop
adc
mov
mov
aas
cmp
jo
fldcw
insl
clc
mov
daa
repnz
sar
sbb
mov
repz
inc
jb
xchg
inc
push
sti
pushf
pop
dec
xlat
ss
lods
jge
push
fsub
mov
fldl2e
sbb
push
ds
pushf
aas
pop
out
jg
push
shlb
add
popa
add
popl
es
pop
in
or
or
aaa
sbb
jb
in
gs
dec
jl
pop
pop
cmp
repnz
js
xor
or
jo
cmp
pop
sub
cmp
push
imul
jnp
pusha
add
push
cmc
adc
inc
cmp
push
adc
push
push
xor
call
xchg
sbb
bound
dec
sub
cmp
xchg
add
sub
push
sub
in
pushw
fmul
push
js
fldcw
sets
push
into
sbb
dec
mov
sbb
dec
jae
xor
push
aad
xchg
outsl
insl
rcll
adc
push
pop
or
cld
sbb
in
jp
insl
mov
int3
push
outsb
add
lret
bound
inc
int3
and
into
addl
jo
or
jmp
je
inc
cli
test
fiaddl
jno
cmp
imul
cwtl
lea
hlt
pushf
adc
xchg
adc
vcvtss2si
push
pop
repnz
outsb
inc
dec
push
and
sbb
sbb
and
ja
cmc
push
imul
das
cmpsb
cmp
adc
add
mov
mov
into
sbb
in
xchg
data16
dec
mov
xchg
jmp
lods
sarl
xlat
aad
cmp
jo
hlt
andl
dec
lret
and
push
jnp
and
sub
sub
dec
clc
outsl
mov
mov
jl
outsb
inc
cs
lea
push
lods
add
inc
test
insl
xor
jno
cmp
mov
movsl
add
xchg
cmpsl
jnp
dec
cs
and
jbe
stos
inc
fisubrl
push
cmp
mov
inc
push
push
inc
mov
or
or
fsub
pop
enter
inc
push
mov
mov
into
add
sbb
mov
xor
or
inc
mov
sub
ljmp
pop
loop
imul
sbb
imul
push
stc
mov
push
push
sbb
add
push
testb
test
or
cmp
pusha
test
add
pop
adc
mov
imul
lds
pop
in
or
pop
pop
push
push
jbe
dec
popa
cltd
sub
dec
out
adc
and
jle
arpl
sub
inc
inc
jl
cwtl
int3
push
dec
rol
cmp
push
or
ret
or
add
mov
jmp
push
mov
je
pop
aaa
pop
sbb
icebp
mov
in
push
cltd
pop
xor
aam
js
adc
std
adcb
xor
mov
call
or
pushf
sub
mov
sub
and
cmp
je
subb
rcrb
xchg
jo
inc
test
and
sub
bound
out
pop
pop
jg
mov
xor
sub
mov
in
inc
sbb
ja
mov
adc
jno
push
mov
or
inc
inc
ret
arpl
push
cltd
sbb
push
cmp
subl
in
loop
pop
ja
or
mov
sarb
outsb
mov
mov
xor
push
mov
mov
fldcw
lods
jne
scas
sbb
add
outsl
mov
data16
dec
xchg
loope
pop
mov
in
into
xchg
into
dec
jns
pop
in
imul
inc
ds
adcb
pop
popa
int3
or
sahf
inc
pop
and
fwait
jg
sub
sbb
xchg
cmp
sub
ret
adc
movsl
or
pop
inc
pop
or
push
or
inc
loope
adc
ds
mov
jg
mov
mov
inc
es
and
shlb
popa
push
and
pop
push
pushf
lret
xor
xchg
sbb
fadds
xor
adc
and
popa
insb
fstpt
aaa
nop
out
inc
jno
repz
jns
add
push
dec
ljmp
cmp
mov
or
and
out
loopne
ja
sbb
mov
sub
mov
push
add
imul
aam
cmp
xor
fs
das
insl
add
fistl
push
gs
xor
call
push
fdivrp
imul
in
xchg
cmp
loopne
bound
cmpsb
mov
cmp
sbb
int
push
xor
fmull
enter
inc
cli
rolb
push
pusha
loop
inc
pop
pop
cmp
jns
add
lds
jnp
add
mov
dec
imul
push
and
arpl
adc
xor
mov
or
js
sub
mov
cmpsb
xor
jne
push
aaa
loope
jns
and
xor
negb
bound
sub
xor
adc
sbb
sbb
and
pusha
pop
out
jp
daa
out
dec
aaa
sub
lcall
repnz
inc
data16
aam
imul
mov
dec
out
jb
lea
or
pop
std
aas
pop
xchg
pop
out
arpl
pop
mov
cmp
fcompl
xor
lahf
call
xchg
xchg
cmc
rolb
or
into
dec
sbb
or
xor
in
icebp
out
sub
es
es
out
out
pop
ss
mov
jecxz
jo
push
das
vmulss
jp
pop
es
imul
jno
sbb
cmpsb
hlt
ss
mov
out
pop
add
mov
lea
test
xorb
or
add
insl
js
mov
push
xchg
sub
pop
setge
ljmp
aam
add
cld
imul
or
sbb
icebp
mov
add
xor
pop
addr16
push
inc
jns
adc
cmc
call
sub
adc
adc
cltd
popf
pushf
xor
mov
sbb
lods
and
pop
sbb
sbb
rorl
pop
inc
xchg
push
cmp
and
jo
or
nop
pop
pop
adc
flds
and
inc
adc
sbb
cmp
pop
push
and
adc
push
xchg
and
jmp
or
sub
add
popa
push
and
clc
mov
or
cld
or
mov
shl
mov
pop
pop
push
rolb
adc
pushw
pop
pop
add
pop
dec
inc
and
push
sbb
sub
or
cmp
loop
mov
push
movsb
inc
push
dec
repz
das
xor
jmp
sub
dec
lret
jns
imul
mov
cltd
xcrypt-ctr
cmpsl
sbb
pop
pop
das
outsb
out
mov
ret
mov
pop
flds
or
mov
aas
and
xlat
fsts
dec
push
lcall
ret
rolb
es
sbb
add
cwtl
jbe
xchg
mov
sub
push
fstl
push
and
bound
sbb
sub
xor
mov
add
sub
inc
or
xchg
mov
mov
fcmovnb
xchg
lahf
ja
das
add
pop
repz
xchg
aas
mov
popl
cltd
roll
add
cli
lcall
jl
adc
jo
adc
dec
sbb
adc
dec
push
add
dec
bound
es
ret
sub
xor
daa
or
and
rclb
lea
into
bswap
rolb
add
push
xchg
add
test
cmpb
outsl
push
pop
pop
cmp
arpl
add
add
cmp
push
xchg
mov
loop
and
adc
lret
xchg
xor
bound
jle
jg
cli
mov
cmpsl
pushf
rol
xchg
mov
push
push
in
jg
dec
lods
cli
jg
pop
pusha
pop
movsb
pop
sub
inc
inc
push
sbb
sbb
loop
scas
mov
dec
add
popa
incl
imul
add
inc
sbb
dec
cmc
and
adc
add
sbb
enter
pop
sbb
cmp
or
xor
imul
or
xchg
cltd
xchg
and
adc
dec
cltd
cwtl
sahf
faddl
cmp
adc
sti
loope
test
div
jb
pop
xlat
adc
and
sbb
inc
addb
outsl
jno
jo
xor
icebp
fcmovnbe
sahf
lea
sbb
notb
or
cs
adc
and
aad
push
dec
cs
push
inc
push
leave
adc
les
pop
push
scas
adc
xor
cltd
jmp
sbb
pop
lret
enter
mov
mov
xchg
shll
mov
rorb
shll
fwait
or
inc
dec
pop
sar
mov
xchg
push
sbb
sbb
xchg
mov
adc
aas
adc
mov
mov
jge
in
loope
pop
adc
xor
out
loop
pop
adc
mov
sbb
jnp
mov
inc
or
mov
sub
cmp
xchg
lock
adc
xchg
or
fstpl
enter
jg
xor
pop
or
adc
sub
inc
daa
add
mov
outsl
jmp
imul
ja
cmp
sub
cmp
or
lock
ret
pop
into
and
push
jnp
and
xlat
data16
fldl
sbb
mov
xchg
in
or
mov
test
inc
scas
test
ret
adc
mov
adc
test
notb
repnz
mov
xchg
test
xor
lahf
add
and
mov
xor
pusha
jg
lods
ffreep
leave
push
push
cs
dec
or
pop
sbb
add
jp
hlt
sub
addr16
adc
sub
pop
xor
aam
nop
fcoms
xchg
dec
dec
sub
in
test
lea
out
mov
inc
adc
sub
push
cmp
pop
sbb
adcl
mov
int3
btr
movsb
imul
dec
adc
mov
sti
insl
scas
not
hlt
push
push
xor
mov
jo
cmpsl
xchg
rcl
xchg
or
inc
add
jno
dec
gs
arpl
add
push
cmpsl
jo
adc
arpl
mov
cmp
pop
bsf
xor
adc
push
mov
cld
leave
jmp
lret
aas
cmp
dec
daa
and
push
or
or
leave
push
icebp
call
fstpt
pushf
cmpsb
xlat
fsubs
push
add
pop
filds
or
fildl
iret
add
rcll
cmpsb
test
push
inc
push
clc
push
mov
dec
imul
pop
and
add
mov
push
sbb
xchg
sbb
outsb
loopne
ffree
rcll
dec
add
jmp
out
cmp
js
xor
push
and
cmp
or
and
adc
out
and
and
push
push
sbb
lret
enter
sub
loopne
xchg
out
in
mov
dec
stc
sbb
add
xor
stc
adc
cmp
cmp
or
sub
daa
daa
add
pop
jb
movsl
dec
cmp
scas
or
pop
fcmovb
mov
push
cltd
lds
jg
mov
dec
mov
out
push
movb
push
cmpl
push
inc
dec
lods
fwait
add
inc
ja
sbb
pop
addr16
fstl
push
cmp
or
add
pop
jb
adc
jae
subb
dec
dec
out
gs
jmp
fwait
pop
inc
mov
and
adc
adc
push
add
sub
sub
mov
sub
mov
sti
dec
scas
rclb
cmp
push
dec
dec
incb
push
or
cmp
adc
cwtl
vunpcklps
jl
add
imul
fisttpl
mov
cmp
mov
pushf
mov
inc
andb
sahf
repnz
sub
xchg
inc
cmpsb
scas
nop
cmp
push
fs
jecxz
ret
outsb
jns
pop
adc
mov
rcrb
pop
pop
cmpsl
out
lock
cmp
ja
sbb
xchg
sub
ja
jo
clc
sub
push
jbe
ds
aas
and
xchg
adc
in
mov
sbb
xchg
add
dec
repz
inc
pop
adc
sbb
sub
movsb
pusha
and
clc
imul
mov
lods
insl
mov
xchg
addr16
jge
out
inc
add
dec
push
xchg
in
add
push
sbb
mov
repnz
mov
popa
add
arpl
cli
hlt
add
daa
xchg
jo
lods
fadd
sbb
adc
cltd
pop
adc
jl
fldcw
adc
fsts
jns
sbb
andl
fstl
add
jp
push
xchg
add
or
adc
dec
ja
xchg
adc
dec
dec
push
int
inc
sbb
cwtl
mov
out
popa
outsl
ds
pop
pop
xor
sbb
fs
sbb
xchg
rol
pushf
repz
addr16
movsl
xorb
ret
cmpsl
push
dec
push
pop
push
pop
pop
cmp
in
cli
pop
push
idivb
and
xchg
addb
std
popa
pop
clc
inc
mov
push
rcl
fisttpl
push
adc
shlb
push
jecxz
jne
sbb
xchg
stos
popl
out
xchg
cmp
adc
xchg
cmp
pop
mov
es
cmp
outsb
cld
xor
pop
enter
hlt
popa
sub
decl
inc
adc
add
sbb
or
or
sbb
or
and
xorb
fwait
adc
es
ss
jnp
sub
int
inc
xor
pop
dec
add
cmp
jg
and
or
mov
mov
enter
mov
mov
push
pop
jge
push
adc
fldt
daa
mov
sub
xor
cmp
mov
cmp
lahf
lods
sbb
orb
dec
lahf
lds
pop
stos
or
popf
sbbb
aaa
nop
fmul
ds
sbb
in
dec
lret
enter
xchg
push
mov
in
mov
pop
push
jge
jae
xchg
pusha
aad
imul
das
sub
dec
fsts
jae
adc
cmp
in
pop
push
inc
add
push
inc
dec
mov
pop
ds
pop
dec
xchg
push
jg
mull
inc
sti
rcrb
lahf
ss
bound
dec
inc
dec
addr16
fistpl
cmp
add
lods
push
and
mov
lcall
push
sub
xchg
jns
insl
push
pop
cmc
push
xor
das
aas
sbb
cmpsl
insb
dec
inc
outsl
pusha
dec
inc
inc
pop
adc
pop
stos
sbb
pop
push
pop
inc
stos
push
push
dec
mov
dec
mov
cmc
jnp
jb
pop
repnz
addr16
dec
aas
js
cmp
or
push
xor
and
jbe
ds
pop
pop
or
dec
push
push
xchg
lret
fiadds
cmp
inc
sahf
js
and
inc
cmp
xor
push
pop
or
xor
and
jp
punpckhwd
xchg
sub
and
add
shlb
lcall
lea
out
pop
movsb
mov
cmc
lods
stos
in
jnp
sub
mov
mov
cs
mov
fwait
cld
faddl
and
sbb
adc
subb
leave
add
sbb
stos
loop
out
pusha
imul
xrelease
std
jb
sub
fwait
sbb
add
imul
sbb
out
shr
and
inc
fs
or
dec
push
arpl
je
je
sahf
adc
xchg
or
or
adc
dec
cmovns
adc
xlat
imul
cli
sub
daa
adc
xor
adc
sbb
and
pop
out
js
and
call
je
add
sbb
add
mov
mov
dec
fimuls
pop
in
mov
mov
divl
or
imull
jp
sti
vmread
stos
cmc
mov
lods
dec
mov
jl
divl
mov
scas
dec
push
lahf
xchg
movsb
mov
iret
in
mov
inc
mov
dec
inc
xchg
imul
mov
mov
adc
or
in
fcompl
adc
ret
sub
enter
pusha
jnp
stos
fidivs
incb
pusha
push
rorl
fs
jbe
insb
inc
sub
insl
jp
push
jno
add
adc
jns
mov
adc
dec
push
sbb
add
movsl
mov
push
and
clc
xchg
jne
sub
push
icebp
fs
xchg
and
cltd
mul
out
sbb
mov
mov
nop
aad
add
sbb
push
cmp
data16
mov
pusha
and
cwtl
rol
ret
adc
pop
fisttpll
lret
sbbl
jnp
push
nop
popf
ljmp
ror
xchg
xor
or
push
addb
mov
ja
and
sub
popa
push
xchg
jl
or
or
push
adc
adc
dec
aas
cmpl
mov
or
adc
int3
mov
dec
daa
pop
lock
pop
lods
pop
ss
addr16
adc
cmp
aad
arpl
adc
jecxz
insl
or
fsts
pop
testb
push
or
pushf
inc
add
add
push
mov
adc
xor
lea
bound
jbe
mov
aad
loope
nop
push
add
loope
cmpsb
push
xor
inc
push
dec
outsb
inc
lcall
jae
in
jp
push
or
mov
imul
and
dec
sub
push
lcall
mov
sbb
nop
mov
sbbb
push
or
mov
dec
pop
xchg
rcrl
leave
mov
mov
or
pop
add
es
sub
out
adc
inc
or
mov
mov
or
jb
push
dec
push
je
mov
rol
adc
std
jns
jns
in
adc
add
dec
mov
or
mov
xor
ret
pop
ficoml
repnz
and
fsubl
mov
xchg
mov
xorl
iret
jecxz
and
cli
adc
aam
xor
fistl
roll
adc
push
lcall
adc
sbb
iret
cli
push
daa
add
or
sub
stos
aam
data16
lret
pop
adc
mov
inc
dec
fcompl
and
mov
sbb
nop
sub
jp
addl
test
ret
fs
xor
aaa
jecxz
cmp
push
xor
pusha
inc
pop
mov
jo
pop
sub
jno
ja
add
test
movsl
or
mov
cmp
fs
into
inc
ret
test
movb
incl
mov
inc
and
mov
push
jge
xlat
outsb
arpl
jnp
and
add
mov
lods
outsl
mov
outsb
sub
jp
cmpsl
movsb
inc
cmc
or
daa
cmpb
aaa
jle
pusha
inc
xchg
cmp
mov
jne
push
pop
scas
mov
pop
scas
scas
inc
shll
jno
cmc
pop
mov
cmpb
push
jg
in
pusha
mov
xchg
decl
cmp
or
mov
packuswb
mov
movups
and
add
enter
mov
jg
sbb
inc
aas
push
sbb
dec
les
dec
sub
aas
mov
bound
ds
rcll
lock
dec
jne
and
fsts
sub
and
push
in
pop
dec
xor
xchg
movsb
bound
mov
mov
out
test
push
dec
nop
sbb
imul
jl
ja
sbb
mov
lahf
sti
cmp
add
lret
xor
add
sub
mov
in
comiss
xor
and
jbe
lods
mov
ljmp
fisttpl
sbb
mov
push
jge
test
cmp
xor
aad
dec
pop
in
test
loope
js
and
add
cmp
iret
scas
adc
fidivrl
mov
aad
in
mov
xchg
pop
inc
popf
popa
and
inc
pop
in
jbe
int3
test
jge
inc
lcall
ficoml
dec
das
cltd
inc
stc
lahf
sub
jle
lahf
dec
mov
int3
adc
push
push
mov
jae
xlat
cmpb
arpl
add
jo
test
add
mov
out
xchg
pop
movsl
xor
pop
cltd
rorl
js
or
push
call
insb
gs
dec
or
push
jbe
mov
push
push
dec
jae
push
and
call
dec
sbb
xchg
inc
sub
mov
xor
adcb
mov
sbb
sti
fstp
das
dec
pushf
das
or
sahf
test
sub
dec
push
jp
push
mov
out
mov
sbb
out
aaa
pop
pop
fiadds
or
or
jae
lods
enter
and
xor
push
or
insl
loopne
gs
sbb
xchg
push
imul
xor
xchg
pop
incb
out
daa
add
or
and
lret
sbb
dec
adc
jg
sbb
pop
sub
inc
xor
lret
push
adc
out
sbb
stos
pop
mov
mov
jae
add
mov
movsl
lods
testb
jmp
pop
hlt
push
sbb
xchg
inc
add
data16
jne
cwtl
pusha
push
mov
or
loop
popa
inc
xchg
pushf
mov
mov
mov
xor
mov
dec
js
add
pop
push
dec
sbb
out
xchg
sbb
ficomps
std
adc
nop
xchg
movsb
enter
addr16
jle
xchg
or
push
insl
shlb
jne
aaa
adc
dec
adc
jae
loope
cmp
sbb
adc
sub
cltd
inc
out
test
jp
jecxz
ss
add
ja
mov
icebp
adc
pushf
sbb
pop
fsubr
jne
test
cmp
sub
or
push
out
enter
inc
inc
inc
sub
or
inc
out
lret
cltd
dec
or
adc
add
adc
sbb
mov
inc
and
add
mov
outsl
cltd
fwait
push
aad
addr16
mov
aas
jl
stos
mov
sbb
aaa
in
js
in
sub
es
and
jns
mov
aam
int3
in
and
mov
xchg
fwait
mov
push
add
lret
sbb
cmp
lea
int3
cmp
jle
dec
lea
inc
push
push
dec
inc
adc
or
dec
sub
lsl
adc
push
sub
dec
push
add
cs
aas
jno
pop
dec
data16
dec
push
dec
mov
pop
insl
sbb
adc
stos
jo
xor
pusha
loop
add
cmp
call
xchg
std
aam
xchg
jge
arpl
and
add
test
inc
cltd
sbb
mov
ljmp
push
sahf
out
dec
rorb
xor
faddl
xchg
enter
push
jnp
xchg
clc
pop
xchg
mov
cli
mov
jno
das
lods
mov
ja
sub
xchg
cld
and
jno
fs
arpl
adc
push
xorb
inc
in
call
movsb
pop
and
fimuls
adc
in
fsubrl
iret
sub
mov
pop
pop
inc
xor
dec
aaa
test
adc
adc
cmp
dec
jp
jo
ss
sahf
adc
lods
js
push
aaa
dec
cmp
ss
xrelease
pop
int3
out
lret
inc
pop
mov
xchg
movsb
in
add
mov
int
mov
mov
cli
enter
and
inc
jp
jecxz
sub
or
dec
sahf
shlb
or
pop
xor
aad
jne
in
adc
addl
inc
inc
icebp
push
pop
add
pop
dec
dec
adc
or
or
push
inc
inc
sbb
push
dec
pop
pop
pop
sbb
cmp
adc
outsl
icebp
xchg
add
sub
jbe
arpl
and
scas
push
adc
jbe
jo
or
and
and
mov
xor
add
cmp
je
shlb
js
daa
dec
jmp
pop
mov
pop
adc
sub
fwait
jno
fldl
sub
pushf
pop
stos
xor
call
and
lret
or
mov
add
adc
push
jb
movsb
xor
jae
gs
sbb
cmp
jb
push
xor
sti
gs
and
ret
adc
arpl
mov
push
push
cli
xchg
cli
xchg
xchg
push
push
flds
xor
ss
or
adc
pop
insl
sbb
mov
sub
imul
mov
lods
inc
sub
orl
dec
jae
jb
dec
dec
adc
mov
or
sub
push
popa
jge
out
in
loopne
xor
add
pop
or
cmp
imul
dec
sub
sti
sub
pusha
push
arpl
pop
xor
cmpsb
push
add
repnz
or
das
pop
stos
push
lret
pop
jl
and
and
lods
out
rorb
lock
sbb
jne
popaw
adc
mov
sub
jnp
jae
js
push
in
mov
push
enter
xchg
stos
mov
adc
repz
and
jo
pop
and
pop
and
xor
or
and
and
rcrl
aas
sbb
xor
jnp
cld
xchg
jae
clc
into
test
std
sbb
mov
out
std
data16
int3
insb
jo
enter
clc
les
pop
jecxz
jbe
ds
mov
sar
jae
lret
jno
cmp
seta
lods
xor
adc
clc
ja
add
cmp
pop
sbb
cmc
andb
mov
xchg
enter
lret
cmp
adc
test
jp
aam
cmp
adc
pop
sub
mov
pop
pushf
dec
sub
push
loop
pop
movzwl
sbb
cmp
adc
xchg
adc
iret
mov
ror
in
or
mov
xor
push
sbb
orb
fcmove
lea
xor
sti
pop
stc
push
dec
test
add
aam
mov
sbb
test
cmp
rorb
int
pop
dec
mov
dec
ret
push
adc
add
and
cmc
sub
imul
xor
and
jno
cmp
stos
ljmp
sbb
mov
test
test
repz
fistpl
fnstcw
daa
in
or
popa
es
adc
and
mov
jmp
pop
and
repnz
roll
push
mov
or
add
push
std
add
sub
in
cwtl
adc
or
rorb
cmp
stos
mov
push
pop
orb
aad
stc
cmp
cmp
mov
sub
lds
or
stc
inc
cmp
rorl
leave
aas
repz
and
xchg
push
push
pop
test
cmp
pop
in
pop
or
cli
jg
pop
and
xchg
dec
pop
xchg
sbb
xchg
jl
push
push
fiadds
mov
loope
lea
and
clc
add
lcall
out
xchg
cmp
in
adc
fcomp
adc
fnstcw
jl
ljmp
aaa
mov
ja
jmp
xorb
ja
and
adc
insl
fsts
out
repnz
mov
cltd
testb
fists
jp
outsl
jo
jmp
movsb
or
xor
adc
es
enter
adc
in
xor
mov
out
fisttpl
incl
xor
push
ds
testb
aad
cwtl
daa
ret
data16
push
fadd
jbe
ffree
and
pslld
cmpsb
lods
andl
push
push
outsl
femms
lret
sbb
negb
out
pop
aam
int
jge
leave
fwait
imull
push
mov
call
and
pop
imul
hlt
pop
incl
mov
cmp
jno
sub
into
jmp
je
xor
jbe
and
cs
mov
jecxz,pn
cs
jns
xor
push
add
call
add
xor
push
push
jg
pop
sarb
in
sub
pop
pop
xor
add
mov
inc
ljmp
in
jge
dec
mov
adc
push
out
dec
pop
pop
mov
and
inc
loope
imul
xor
pushfw
and
dec
stos
mov
push
ja
das
pusha
loop
xor
xchg
xorl
pop
push
stc
pop
pop
push
xor
or
pop
mul
inc
xchg
cmp
iret
xchg
mov
lret
notb
cmp
push
and
or
rolb
sub
call
mov
adc
cmpsl
dec
adc
call
adc
push
xor
or
jne
inc
sbb
insb
lds
and
and
push
popf
cmp
push
xchg
cmp
cwtl
mov
add
ljmp
mov
mov
xlat
mov
adc
cmp
cmp
pop
sbb
inc
mov
mov
pop
inc
decl
and
ficoms
or
sahf
jl
push
push
mov
add
jno
mov
or
ja
adc
mov
sarl
add
fs
sbb
movsb
push
adc
mov
lds
mov
sbb
pop
roll
adc
inc
xchg
xor
insb
xchg
pop
push
jno
xor
inc
push
xor
hlt
jno
sti
jno
or
push
jmp
call
sbb
inc
popf
adc
sub
dec
inc
imul
inc
cmp
mov
mov
ds
adc
xor
ret
nop
lcall
loop
fwait
mov
das
enter
inc
dec
mov
repnz
pop
xchg
adc
scas
push
sbb
add
outsb
and
mov
adc
pop
sbb
negl
mov
or
inc
ds
jnp
fmuls
pop
inc
cltd
mov
push
or
dec
jne
push
pop
pop
jmp
mov
add
lret
adc
gs
rorb
out
sub
adc
jbe
xor
and
and
fldenv
out
xor
mov
jne
inc
lcall
les
adc
xor
cmp
or
inc
add
les
lret
addr16
inc
xchg
dec
scas
xor
adc
fiadds
test
xor
lcall
mov
mov
pop
fs
or
sub
or
es
add
adc
adc
dec
jmp
lock
lahf
lahf
test
xor
or
add
and
sub
pushl
dec
xchg
imul
aas
fldenv
push
jb
mov
adc
aas
lahf
push
in
jmp
adc
popf
out
gs
push
sahf
lahf
sti
pop
xchg
or
dec
add
or
in
xor
dec
imul
and
incl
pop
not
adc
inc
cmp
sbb
jmp
push
cmp
cmp
xor
mov
push
jmp
cltd
add
mov
cmp
adc
mov
xor
mov
xchg
inc
jge
loopne
das
pop
fdivs
test
xchg
xchg
repnz
pop
and
adc
push
orb
xchg
cmc
mov
mov
or
sub
pop
aam
sub
jecxz
sub
sti
mov
icebp
jle
es
loop
or
or
or
jae
add
repnz
aam
test
ret
fadd
pop
loope
sub
adc
push
nop
push
xlat
bound
roll
xchg
mov
pop
sbb
adc
inc
roll
jnp
dec
mov
jmp
insb
pop
imul
cmp
rcl
shll
sar
daa
jl
xchg
jge
iret
add
popa
dec
xor
imul
rcll
test
stos
pop
jno
add
stos
ret
test
and
push
addr16
adc
mov
cmp
jge
fisubrl
or
xchg
ljmp
mov
mov
dec
daa
mov
bound
mov
sbb
dec
adc
pop
mov
jl
inc
xchg
lcall
loope
add
jecxz
and
cli
pop
fs
decb
pushf
push
and
dec
push
cmpsl
rcr
fnsave
fmuls
js
pop
cmp
stos
cltd
pushf
sbb
xchg
int3
pop
push
inc
scas
popf
inc
sbbl
ss
xlat
jp
aad
or
add
aam
jbe
mov
push
and
fidivs
aas
arpl
shlb
pop
sbb
movsl
pop
imul
mov
popf
stc
bndldx
inc
jmp
aad
cltd
enter
test
push
or
dec
mov
pop
outsl
pop
shll
dec
std
xor
lock
and
adc
mov
and
or
push
add
xor
inc
int3
sub
sub
mov
test
sbb
popa
movsb
inc
pop
push
lods
pop
pop
adc
inc
add
loop
sahf
mov
jp
or
bound
xchg
cmpsl
add
and
inc
mov
sahf
inc
pop
mov
sbb
sti
push
pop
repnz
sub
push
pop
push
loopne
cmpsl
add
dec
add
std
hlt
pop
ds
jl
hlt
fsts
push
push
jge
out
ss
sbb
sbb
or
and
xchg
inc
mov
sub
adc
sub
and
xor
wbinvd
clc
imul
add
sbb
and
loope
fbstp
pop
push
push
sub
sub
rcr
in
int3
out
fstpl
int
cmp
push
add
mov
adc
dec
push
add
bound
ficoms
sub
shl
dec
mov
add
popa
adc
scas
mov
fbstp
mov
bound
pop
push
addl
clc
cmp
inc
es
popa
das
fadds
sub
pop
cmp
mov
mov
scas
cwtl
subl
xor
loope
xchg
mov
je
sub
xor
push
fwait
xchg
push
adc
sub
xor
dec
jne
jbe
pop
push
popa
push
inc
or
sub
and
push
call
scas
or
push
jae
adc
mov
adc
cmp
cmpl
mov
add
es
jbe
xchg
push
push
popa
call
push
nop
cmp
addr16
outsb
push
adc
xor
pop
xor
cmpsb
or
inc
stos
jl
jg
mov
or
notb
clc
sub
es
lret
push
jg
test
dec
xchg
and
sub
xchg
outsb
stos
xor
ficoms
add
inc
hlt
cmc
push
cmp
or
scas
dec
sti
mov
mov
lret
mov
add
vunpckhps
fidivl
mov
mov
push
mov
jmp
and
ret
push
sbb
jmp
in
dec
push
call
sbb
inc
les
and
out
sbbl
sbb
fwait
imul
hlt
add
jnp
fsts
jnp
sbb
add
cld
je
mov
out
add
dec
popa
push
dec
pop
mov
inc
push
pusha
lods
push
jge
adc
xchg
js
test
gs
push
or
jb
cmp
sbb
loop
outsl
outsl
test
jmp
pushf
mov
inc
sahf
push
xchg
xor
sbb
cmp
das
js
fistpll
jmp
fldcw
adc
cld
fs
shl
fmuls
sub
inc
xlat
xchg
mov
push
lcall
cs
push
int3
je,pt
dec
jnp
and
inc
cmp
and
in
sub
jo
mov
or
lds
fstps
ret
adc
pop
rcrl
inc
sub
in
dec
rcl
dec
out
popf
fwait
pop
or
push
fbstp
fldcw
in
mov
test
mov
addr16
mov
xor
mov
adc
and
das
rorb
mov
hlt
sbb
push
pop
cmp
and
or
pushw
fs
sbb
sarb
sbb
rolb
jl
cmp
sbb
shlb
xchg
add
adc
ljmp
sub
xor
sbb
dec
repz
fwait
mov
bound
std
fs
pop
lcall
and
add
hlt
xchg
sub
cmpsl
xchg
jne
es
push
mov
add
xchg
sub
fidivrl
pushf
adc
push
inc
mov
aad
lcall
stos
xor
push
scas
out
imul
xchg
enter
add
inc
idivb
jmp
adc
icebp
sub
test
mov
negb
cmc
adc
dec
mov
aas
push
mov
ret
scas
icebp
pop
pop
inc
and
and
jae
pop
inc
orb
pop
sub
fnstcw
iret
or
push
je
movsb
pop
sub
ja
movl
ds
mov
insl
rolb
jne
or
push
jae
jp
push
sarb
ja
push
inc
jae
sbb
and
dec
pop
lahf
mov
rorb
ret
push
xchg
push
adc
xlat
cmpsl
sub
nop
mov
add
aad
push
jo
push
movsl
scas
mov
insb
clc
pusha
xor
push
and
in
xor
fcmovbe
enter
shll
adc
or
cmp
adc
cmpl
dec
mov
mov
pop
adc
push
push
adc
sbb
ret
fcomp
faddl
pop
push
lret
push
movsl
into
inc
push
aad
loop
push
mov
jae
add
jl
sub
pop
jp
jge
lods
pushf
lea
cwtl
fs
fidivrs
sub
push
enter
pop
lret
jo
sub
cmpsb
xor
inc
adc
xchg
push
insl
jae
mov
or
cmp
das
cmpsl
add
and
inc
dec
jge
mov
jno
cmp
mov
xchg
rclb
lret
sub
push
jno
mov
sub
xor
aaa
and
jg
push
stos
sarb
stos
mov
pop
jg
push
sub
mov
sti
push
pushf
lret
sbb
xor
outsb
sub
sbb
pushf
cmp
dec
cli
in
icebp
call
cs
add
xor
xchg
imul
dec
and
lock
inc
mov
push
flds
xchg
test
push
loope
cs
push
or
out
shlb
mov
je
xchg
iret
push
inc
bound
pop
bound
inc
sbb
mov
fisubrs
and
pop
sub
cltd
out
add
pusha
and
repz
dec
inc
jo
repnz
sub
dec
xor
push
lcall
aam
lret
cmp
std
cmp
or
daa
add
dec
cwtl
daa
and
or
and
lret
aaa
sti
fildl
nop
mov
or
shlb
pusha
mov
lock
jb
cli
cmp
sbb
sub
idivb
daa
pop
enter
xchg
test
loop
imul
add
cli
cmp
jne
sub
popa
ja
sbb
add
adc
push
and
fsub
movsb
pushf
or
adc
sub
add
push
xor
pop
rcr
xor
shrl
dec
mov
iret
pop
clc
fdivs
xchg
out
mov
imul
test
add
adc
cmp
xchg
jo
mov
bound
mov
lea
mov
loop
int3
adc
cli
push
dec
push
push
xor
inc
jl
mov
mov
inc
call
ss
sahf
ljmp
or
push
test
mov
cmp
mov
cmpl
mov
xchg
emms
stos
ret
sub
push
jecxz
sbb
dec
push
and
frstor
flds
jne
lods
mov
pop
add
jle
scas
test
inc
xor
mov
add
loopne
aam
or
mov
inc
inc
xor
dec
incl
xor
adc
sub
adc
ret
mov
sbb
mov
sbb
jbe
js
fisubs
fucomp
pop
int
out
mov
sub
ficoms
add
inc
xchg
mov
test
insl
js
adc
sbb
cmp
cmp
dec
push
sub
fwait
aaa
jbe
mov
lock
xchg
xor
call
push
sub
inc
fwait
std
push
rol
rcl
jne
aas
mov
ss
mov
hlt
mov
dec
lds
adcl
or
xor
ljmp
pop
rdmsr
call
out
outsl
jl
sahf
xor
jge
dec
aas
out
into
xchg
bound
mov
sbb
pop
sbb
daa
aaa
inc
pop
mov
scas
and
inc
in
push
ret
pop
cwtl
dec
sub
xor
pop
pop
sub
repz
dec
xchg
cmc
sbb
push
push
inc
add
xchg
test
add
xchg
gs
lea
mov
mov
movsl
mov
scas
sahf
push
out
jl
pop
pop
rolb
in
add
or
inc
ja
adc
outsb
iret
dec
adc
cli
fcoml
cwtl
das
dec
xchg
icebp
adc
lds
add
jmp
repnz
aad
pop
or
xlat
dec
adc
bound
mov
push
sub
jbe
popa
sbb
call
shlb
pop
cwtl
adc
xor
jno
or
in
mov
xchg
fcoms
mov
out
scas
bound
mov
es
idivb
mov
and
or
and
out
xor
jle
rol
in
mov
lds
repnz
or
dec
jb
adc
rcr
dec
iret
imul
aaa
in
jle
adcl
inc
arpl
and
sub
cli
cmpsl
sub
pop
ret
mov
dec
or
adc
ret
sti
cmp
push
jmp
lods
inc
cmp
cmp
dec
addr16
jp
cwtl
mov
into
cmp
gs
mov
push
push
pop
hlt
push
imul
stos
pop
xchg
xor
mov
dec
dec
jp
adcl
aam
js
movb
cmp
pop
lcall
fcomip
jl
divb
mov
sub
xor
das
add
or
jnp
ret
roll
call
adc
sbb
push
mov
push
pop
idivl
add
and
rcr
lret
mov
daa
jne
test
jns
and
repnz
and
xchg
outsl
push
ret
ljmp
and
inc
pop
xchg
dec
push
ja
dec
dec
or
faddl
xchg
push
adc
bound
and
push
mov
sbbb
in
cmpsl
mov
into
dec
add
and
mov
mov
daa
rol
dec
dec
stos
insb
add
inc
popa
sahf
mov
das
out
fs
mov
mov
push
addr16
jo
popa
mov
scas
sarl
push
aad
sahf
add
enter
scas
mov
rcr
xchg
jge
outsl
xchg
jle,pn
add
fstl
xchg
xchg
lahf
inc
push
jbe
repnz
adc
mov
dec
push
shll
adc
sbb
inc
adc
add
add
push
ljmp
xor
push
dec
xor
cmp
or
imul
push
jg
stos
pop
ss
fcmovnb
dec
xchg
std
jecxz
imul
rol
leave
or
pop
out
or
mov
sbb
insb
iret
shrl
jb
aaa
movsl
das
lcall
dec
imul
sarl
ror
add
add
sub
loop
das
xor
add
jmp
inc
or
mov
fisubs
xor
aaa
mov
outsb
int3
xor
ror
fcmovb
rol
mov
or
daa
fnsave
pop
xor
movsl
fcom
call
in
fimull
loop
mov
jbe
push
pop
jl
add
mov
fdivrs
add
jnp
or
fisubl
je
movsl
stos
xor
bound
rorl
sbb
in
les
add
sbb
cmp
lcall
sub
stos
hlt
cmp
das
add
xchg
dec
inc
fdivrl
jge
cmpb
enter
jo
sub
mov
scas
or
into
xor
repz
ja
daa
repz
xor
mov
cmp
fldt
stos
out
cmpsl
repz
jbe
add
pop
ds
push
jbe
xchg
inc
push
je
popf
clc
lock
rclb
fcmovbe
sbb
jmp
fsts
jbe
loop
repnz
test
daa
add
rcrl
test
sbb
lret
lds
mov
pop
xor
pusha
sbb
push
insl
cmp
or
mov
sub
sub
push
sbb
bound
mov
out
stc
loope
sbb
loope
xchg
mov
adc
mov
outsl
or
ss
sbb
imul
fadd
mov
lahf
jmp
sbb
fsubp
std
and
and
dec
or
shl
in
rcr
sbb
xchg
clc
or
add
sahf
xlat
xor
cmpsb
ss
push
and
pop
sbb
sub
lret
mov
and
mov
stc
movsl
sub
hlt
jge
repz
test
leave
cmp
mov
mov
aas
loope
xchg
aas
inc
dec
fsub
lods
sbb
and
ret
clc
push
mov
or
xchg
xchg
lock
jmp
mov
push
jns
decl
sbb
outsb
fstps
jno
loopne
xor
add
cmpl
pop
push
jmp
loopne
gs
fsubl
xchg
jns
popa
cmc
jp
sub
jae
pop
mov
out
cwtl
mov
sbb
fstl
psrlw
and
movsl
jno
test
cs
lock
add
lcall
sub
ja
xlat
idivb
ljmp
adcb
xchg
inc
jns
les
insb
aaa
outsb
mov
xor
sub
mov
push
xor
andl
jl
aam
mov
lock
xchg
push
ret
jo
stc
mov
lds
arpl
sti
and
ret
mov
ss
inc
push
shll
stos
dec
pop
pop
jns
pop
inc
notb
mov
mov
push
lcall
dec
xor
sbb
sbb
inc
push
ds
inc
xchg
cwtl
jmp
outsb
push
test
outsb
gs
sbb
pop
add
test
in
sbbb
add
pusha
adc
add
out
lret
movsl
mov
cmc
test
in
sbb
mov
test
push
or
push
add
lahf
shr
jecxz
add
xor
adc
inc
sbb
xor
subl
ret
sub
testl
jge
add
adc
ffree
or
sarb
lds
dec
sub
das
test
adcl
pushf
popf
testl
pop
cmc
test
xor
or
mov
mov
out
or
stos
sub
xor
je
mov
and
cltd
xchg
pop
inc
xchg
push
cmc
or
inc
push
dec
ss
xchg
fadd
adc
xorl
or
int
loopne
jmp
sub
aam
add
mov
cld
and
in
rorl
les
clc
dec
fisubrl
fbstp
in
push
jbe
xchg
imul
mov
add
or
std
jg
sub
push
jg
add
shll
test
orl
mov
adc
stc
imul
dec
xor
inc
or
or
adc
test
dec
js
movsb
sbb
dec
mov
out
popf
xchg
mull
mov
push
fs
out
or
sarl
jae
pop
dec
scas
mov
sbb
pushf
test
inc
pop
mov
notb
or
call
lcall
lds
xchg
leave
inc
inc
fsubrs
sub
pop
sbb
stos
push
adc
push
sbb
xor
ret
cmpsl
fnstenv
and
dec
mov
lea
dec
mov
xchg
dec
ss
mov
test
and
mov
mov
push
push
add
xor
into
std
sub
cli
mov
stc
mov
adc
into
add
xchg
pusha
andl
mov
push
xchg
mov
mov
or
xchg
mov
lds
mov
ficoms
lahf
mov
imul
inc
mov
out
cmp
outsl
mov
mov
jl
loop
jae
lock
inc
sti
inc
mov
mov
fstpl
xlat
fidivrs
rorb
pop
cmp
pop
mov
add
aas
jne
addr16
sub
mov
mov
test
jo
das
lea
jecxz
popf
push
bound
xor
popa
out
push
ret
add
mov
push
push
pop
pop
inc
jne
popa
xlat
pop
add
repz
insb
and
test
adc
pop
in
pop
jmp
or
or
aad
push
cmpsl
dec
stos
inc
xor
lret
pushf
jl
mov
daa
aas
xchg
pop
pop
fldt
xor
pop
jmp
xchg
adc
add
nop
mov
inc
mov
cmp
pushf
data16
fs
xchg
xchg
cmc
les
ffree
and
gs
jnp
pop
inc
ljmp
sti
lds
lods
and
es
jmp
lods
cmp
mov
jbe
enter
mov
movsl
rolb
push
ja
cmpsl
lahf
push
loopne
mov
int
out
sbb
pop
xchg
gs
jae
mov
push
inc
shrl
inc
jmp
pusha
sbb
add
dec
inc
sbb
and
mov
cld
dec
repz
dec
dec
and
int
ret
and
sbb
dec
xchg
imull
add
dec
cmp
sbb
out
or
dec
cwtl
and
call
les
rcll
push
je
inc
dec
jmp
mov
pusha
pop
add
cmpl
nop
adc
pop
jecxz
daa
push
sti
and
push
enter
imul
gs
mov
pop
dec
adc
scas
cmc
in
mov
sbbl
jmp
inc
or
sbb
push
mov
int3
push
je
cmpsl
scas
jb
dec
cmp
cld
inc
xchg
arpl
mov
or
test
and
and
popf
je
ficomps
push
sbb
insb
mov
lret
int
pop
aam
mov
xchg
popl
mov
leave
cmp
test
stos
je
push
shrl
adcb
push
dec
loopne
jg
data16
push
mov
sbb
cwtl
dec
push
mov
add
xchg
mov
pop
addb
insl
ss
sub
jne
and
in
pop
dec
fistpl
outsl
xchg
jg
add
scas
add
mov
cld
pop
addr16
cmp
addr16
xchg
subl
jp
and
push
dec
mov
call
out
pushf
fldenv
fisttps
add
ljmp
lret
cmp
jno
push
outsl
xchg
inc
repnz
mov
pop
xor
in
arpl
dec
xor
nop
xor
dec
cmp
imul
jnp
add
sbb
iret
cmpsb
xchg
adc
dec
test
js
xchg
and
xchg
jge
xor
js
popf
test
fldl
test
movsl
fwait
jmp
test
popa
sbb
shl
imul
dec
aam
add
cmp
inc
push
loopne
push
clc
fcompl
aas
mov
fstpl
pusha
int
scas
test
mov
jne
jecxz
add
sbb
and
das
xlat
xorl
imul
xchg
sbb
jbe
push
jnp
fisttps
sub
xchg
add
nop
adc
pop
add
push
xlat
xchg
xchg
dec
sahf
pop
lods
out
in
aad
dec
add
out
out
rcrb
pop
or
in
cmp
sbb
adc
aaa
push
jmp
adc
xchg
gs
mov
idiv
addb
stos
ret
jo
add
lds
mov
dec
mov
hlt
pusha
adc
pop
inc
loope
out
sub
dec
or
mov
mov
xor
lahf
nop
cli
enter
fstpl
mulb
negb
in
mov
or
arpl
sbb
js
sbb
sbb
test
ja
shll
xchg
xchg
enter
jge
add
cmp
stos
push
lea
sub
mov
sbb
xor
shll
stc
inc
movsl
inc
scas
aam
cmp
push
sahf
or
mov
add
js
fadds
pusha
jnp
les
push
rcrb
test
sahf
int3
jne
ja
jg
xchg
adc
out
adc
movb
pop
pop
mov
int
mov
pop
pop
jl
in
lock
test
jle
add
push
xor
or
push
sbb
pop
lahf
dec
cmpsl
stc
divl
mov
jb
movsb
cli
and
mov
mov
popa
sbb
add
jo
lock
mov
jb
and
push
stc
jbe
push
in
std
imull
xchg
leave
pop
repz
push
or
mov
adc
mov
fmulp
inc
bound
mov
jmp
inc
outsl
sub
inc
out
repnz
xchg
and
cltd
push
jle
cmpsl
jnp
inc
cwtl
or
inc
sbb
cld
push
xchg
or
sub
mov
shll
lock
push
imul
daa
cld
or
mov
sub
sbb
push
mov
dec
ljmp
aaa
xchg
mov
pop
adc
xchg
outsb
sub
mov
sub
cs
stos
xchg
mov
or
xlat
lret
mov
or
push
sbb
xchg
dec
mov
into
cmp
mov
sub
ret
ret
cmp
cmp
fistpl
push
xor
push
fsubrs
xor
dec
push
fldt
adc
lods
xor
jae
jns
sbb
js
sbb
sub
push
daa
nop
mov
push
mov
bound
push
mov
add
jl,pn
jmp
das
lahf
popa
sahf
das
and
ljmp
xchg
push
jae
dec
lcall
pushf
dec
pop
ret
sub
jecxz
pop
xchg
testl
test
pop
adc
push
adc
sub
adc
jmp
inc
push
incb
dec
xchg
pushf
fwait
ss
cmp
add
stos
pop
mov
ficoml
or
leave
add
adc
shlb
pop
jo
aam
adc
mov
pop
pop
push
cli
out
pop
bnd
adc
aam
mov
cmp
xor
lahf
push
push
rorb
dec
mov
test
mov
into
add
mov
cmpsl
jns
dec
test
xor
aas
sbb
and
or
xor
in
mov
cmp
mov
xchg
das
nop
mov
or
jnp
inc
ret
or
xchg
scas
repz
or
and
int3
mov
add
mov
mov
mov
push
mov
pusha
sbb
jecxz
sub
xchg
test
iret
push
mov
jp
mov
and
mov
addl
popa
icebp
mov
js
inc
pop
adc
mul
stos
cmpsb
ja
je
xor
jbe
into
push
sahf
pop
es
movsb
cwtl
ljmp
cmpsb
sub
or
sub
inc
cmp
adc
je
aam
test
dec
movsl
lock
push
mov
mov
fidivrl
push
test
push
lret
inc
xchg
xor
dec
jns
xchg
add
cmpsl
xor
sbb
jg
mov
jle
mov
inc
dec
jge
inc
push
insl
pop
pop
inc
jecxz
inc
mov
jle
push
mov
and
test
jle
leave
int
mov
and
mov
add
out
movb
push
cs
sub
adc
mov
or
xchg
add
pusha
jb
les
dec
push
pop
orb
fidivrl
out
mov
pop
cwtl
rcrl
pop
jp
aad
loopne
imul
mov
stos
push
xchg
mov
adc
and
call
pop
adc
repz
pop
fsts
add
sbb
adcl
adc
jbe
bound
in
lcall
sbb
jns
push
inc
push
aaa
sahf
stos
add
mov
sti
xchg
xor
lea
sub
pop
aad
push
mov
pop
repnz
or
aaa
fstpl
iret
jnp
mov
movsb
sarb
mov
dec
lret
ret
or
jne
mov
js
and
ljmp
sub
fnstsw
je
nop
add
sti
cmp
lahf
adc
pop
adc
pop
iret
mov
jns
cmp
push
push
lahf
inc
call
lds
sub
mov
cli
ret
sbb
lods
adc
mov
imul
push
mov
mov
mov
data16
push
out
adc
mov
loope
xchg
in
or
mov
jmp
mov
mov
sbb
cmp
pop
mov
sub
jb
daa
jnp
into
insl
push
xor
pop
mov
jmp
xor
dec
ficompl
xchg
or
push
cmpb
cltd
jl
lds
js
les
mov
stc
xor
pop
rol
das
sbb
out
push
add
gs
mov
bound
pop
stc
sbb
xchg
dec
push
in
or
es
push
shll
pop
pop
or
push
push
mov
aas
dec
cs
ss
adc
adc
pop
fsubrl
not
fiaddl
mov
push
mov
push
xchg
std
add
mov
sbb
xchg
sahf
xchg
sbb
test
push
add
pop
call
fdivrs
ror
stos
ficoml
push
sti
mov
push
mov
insl
lods
rorl
inc
clc
cmpl
or
jp
insb
dec
sub
dec
sub
add
bound
movsl
push
dec
int3
rclb
mov
gs
xchg
push
test
push
push
repnz
pop
cltd
data16
cmp
push
popa
dec
push
cld
add
rclb
jnp
lods
je
adc
mov
nop
or
mov
xchg
sbb
push
jnp
std
clc
jmp
mov
add
xchg
mov
cld
hlt
int
jnp
pop
xor
jne
loopne
push
mov
adc
xchg
dec
les
adc
std
or
and
pop
movb
push
loopne
js
add
roll
pop
mov
bound
dec
xor
call
les
cmpb
dec
incl
pop
call
inc
les
jg
or
lods
bound
fisttpl
jg
out
push
push
mov
cmp
xchg
roll
lcall
iret
inc
or
sbb
mov
xchg
pop
sarb
dec
cmpsl
jp
dec
jno
cmp
lods
jbe
cmp
mov
insb
sub
inc
dec
gs
lods
add
adc
call
jl
jg
cmp
arpl
adc
lock
inc
mov
jl
push
loop
pop
adc
push
cmp
xchg
adc
jne
int
dec
lods
bsr
and
test
cmp
adc
xchg
or
in
mov
push
and
adcb
or
xchg
inc
int
dec
rcl
add
sub
add
dec
jne
mov
negb
nop
cmc
sbb
ja
mov
cli
clc
or
and
mov
pop
push
dec
pop
jp
mov
mov
push
and
jmp
out
push
test
lret
cmp
xchg
jb
lret
mov
data16
aad
pop
xor
sbb
lret
mov
sub
stos
push
cmp
mov
loop
xorl
or
mov
fisubs
fldcw
ss
out
or
cmc
insb
add
sub
cmpl
jp
push
and
push
mov
or
aad
xchg
push
hlt
mov
mov
fcompl
sub
in
pop
iret
ffree
mov
insl
add
mov
push
les
xchg
mov
sub
push
adc
movsl
push
ds
or
call
in
add
shrb
sbb
lea
scas
dec
loope
daa
wbinvd
xchg
add
addr16
adc
xchg
insl
icebp
mov
pop
sti
ficompl
int
push
dec
lar
iret
push
fldl
movsb
std
or
pop
mov
insl
cmp
add
dec
jb
push
push
mov
arpl
and
xor
dec
mov
inc
jg
mov
out
test
dec
mov
mov
lods
sbb
fs
pop
out
fldcw
jp
sbb
inc
push
in
or
mov
mov
push
mov
inc
mov
inc
imul
xchg
lcall
cmp
pop
fwait
je
adc
push
jae
sbb
out
add
inc
adc
insl
mov
or
push
in
bound
mov
pop
add
iret
int3
xchg
imul
pop
hlt
jns
imul
out
clc
mov
arpl
push
jecxz
dec
jmp
xorl
pop
sbb
jge
cwtl
pop
jg
lock
cmp
out
xchg
movsl
cmp
push
mov
adc
jbe
push
call
clc
mov
mov
mov
dec
push
gs
aaa
cld
and
loope
testb
jp
mov
cmp
push
imul
jge
imul
push
fcmovu
loope
mov
dec
mull
xor
outsb
mov
xor
sbb
pop
repz
pop
mov
and
or
fwait
aas
lea
mov
push
test
pop
push
movsb
lock
dec
stc
int
rclb
mov
outsb
push
dec
xor
outsb
dec
cli
xlat
insl
imul
movsl
cltd
dec
xchg
jg
ljmp
lods
or
inc
pop
add
add
insb
mov
inc
pop
test
call
mov
push
mov
das
jo
push
dec
clc
push
jno
sbb
imul
bound
ja
arpl
and
inc
mov
test
or
or
pop
rcrl
ss
push
and
push
mov
and
fwait
xchg
mov
dec
stos
out
push
loope
pop
pusha
xchg
cs
dec
in
mov
mov
xor
in
cmp
rolb
sub
or
xlat
int3
sbb
shlb
arpl
lea
sarb
mov
cltd
lret
nop
sahf
jnp
xchg
mov
pop
loopne
fnstcw
mov
and
movsl
sbb
inc
lock
or
in
mov
and
ja
sahf
in
mov
inc
push
push
sti
inc
add
divb
jne
inc
mov
inc
add
jmp
in
lds
int3
andb
adc
rorl
pop
xchg
fdiv
inc
xlat
jmp
jbe
imulb
in
xor
push
xchg
bound
adc
les
sti
cmp
push
add
loopne
and
sahf
mov
adc
mov
add
testb
mov
pusha
push
jns
movsl
rcrb
push
cli
push
movsb
imul
pop
leave
mov
cmp
or
addl
jmp
out
ret
test
pop
enter
mov
and
push
push
popa
cmp
repz
mov
cmp
sub
adc
mov
repz
jne
pop
shlb
dec
aas
push
in
add
stc
lds
aas
daa
cmc
cmp
fnsetpm(287
mov
mov
sbb
pop
enter
adc
sbbl
cmp
sbb
test
adc
jmp
lods
mov
sub
inc
gs
es
push
into
push
sub
jb
lcall
addr16
inc
orl
jne
adc
or
push
in
test
stc
lret
dec
mov
inc
ja
mov
pop
mov
cltd
out
push
mov
xor
xor
in
and
ror
or
nop
or
xor
push
cs
aas
inc
test
push
hlt
cmovbe
fwait
repz
add
iret
dec
mov
in
inc
sbb
test
jae
cwtl
cld
mov
loope
dec
adc
jbe
xchg
call
or
sbb
fdiv
mov
xor
lahf
negl
stos
mov
xor
rcll
fwait
shrb
mov
loopne
inc
pop
outsb
mov
inc
fstpl
jl
adc
das
lret
psadbw
lcall
scas
sbb
adc
jecxz
loope
sbb
loop
fisttpll
fwait
jl
test
pop
mov
push
popf
adc
popf
in
jb
movsl
push
inc
je
outsb
aas
xchg
pop
je
mov
and
inc
fs
mov
add
icebp
call
fsubrl
mov
pop
adc
inc
add
aad
push
jge
xor
sub
dec
adc
pop
mov
pop
mov
mov
mov
jmp
push
jnp
cmpsl
xlat
mov
sub
jno
or
sub
ret
cld
xor
dec
je
adc
data16
jne
mov
dec
leave
lods
fstps
mov
push
ret
push
cmp
adc
or
popf
in
subb
dec
mov
add
movsl
imul
pusha
sub
dec
mov
arpl
aas
outsl
dec
jge
gs
inc
mov
call
es
fcmovne
push
iret
pop
rol
mov
adc
ds
call
adc
test
in
cmp
push
in
outsb
or
hlt
and
mov
and
shlb
repz
data16
repz
lcall
mov
out
and
movsl
lods
pop
je
pop
cmp
sahf
adc
js
sahf
and
into
addr16
das
test
push
orb
repz
push
ret
push
xor
imull
ljmp
addb
mov
call
sub
mov
orb
adc
push
mov
sub
mov
pop
jl
in
cmp
adc
pop
mov
scas
mov
and
test
insl
pop
mov
scas
and
insb
imul
mov
lods
fistps
pop
data16
testl
nop
jl
inc
lods
call
scas
sbb
add
nop
mov
addr16
pop
pop
push
mov
fcmove
sbb
and
cltd
xor
jns
aaa
jp
mov
aas
inc
jne
cmp
fmull
or
stc
popa
sub
scas
rorb
clc
inc
outsl
jb
dec
add
mov
repnz
test
add
enter
mov
icebp
jbe
mov
dec
inc
hlt
xor
adc
dec
sbb
xor
in
loopne
jp
lret
leave
cwtl
adcb
sub
pushf
xor
sbb
int3
dec
rorl
sub
push
jne
jb
jae
xor
popa
jnp
fsts
mov
add
push
nop
aaa
icebp
mov
push
jmp
sbb
sbb
iret
jno
jbe
mov
aas
mov
aad
mov
pop
clc
addl
cltd
and
lods
mov
push
arpl
inc
adc
add
push
insl
dec
sahf
push
or
or
push
mov
sbb
pop
sarl
sub
push
and
mov
inc
das
aaa
mov
add
scas
jg
xor
adc
mov
sti
stos
push
fs
and
ljmp
aaa
push
lret
push
fcompl
sub
push
cs
clc
sbb
sub
bound
je
mov
outsl
lods
bound
push
and
loopne
jnp
sbb
mov
das
adc
out
push
or
mov
push
int3
xchg
inc
leave
dec
adc
sbb
ret
lahf
call
jae
imul
cld
xor
mov
mov
test
cmc
or
cmp
fmul
xchg
iret
test
jne
cld
je
adc
in
add
movsb
movsl
ljmp
xor
insb
mov
push
addr16
mov
jo
jl
jmp
cmpsl
orb
fs
lcall
mov
add
leave
ret
loop
sub
in
push
vmwrite
add
addb
cli
jge
arpl
cltd
xor
add
mov
adc
enter
push
xor
sub
fstl
mov
inc
stos
pop
bound
mov
sub
dec
xor
mov
push
out
xor
sub
sbb
jmp
pop
jo
sub
mov
pushf
sbb
adc
lret
sub
mov
aad
iret
cmp
push
fmul
rcrb
sub
xchg
jmp
popf
adc
movsl
arpl
pop
addr16
pusha
pop
ja
ficomps
inc
xchg
sub
aad
leave
iret
sub
adc
fisttpl
sarl
mov
mov
sub
jnp
ficoms
pop
or
xchg
popa
pop
adc
addr16
or
icebp
sub
mull
notb
inc
loope
fsubr
cs
lea
jle
and
mov
add
adc
mov
jmp
stc
sbb
sub
lahf
into
fsts
je
shl
pusha
adc
dec
and
insl
and
mov
out
xchg
adc
sub
or
add
push
xchg
add
nop
push
adc
mov
push
inc
and
mov
mov
nop
dec
aam
fimull
mov
fs
in
xchg
adc
mov
in
jp
jo
lret
std
push
jno
or
pop
movsl
shlb
lods
lods
es
stos
imul
pop
daa
inc
lds
pop
mov
or
ret
out
xor
xorl
jnp
dec
inc
jno
push
mov
js
jg
stos
idivb
jge
pop
or
mov
mov
bound
inc
das
aas
testl
inc
mov
xor
fdivs
mov
xlat
dec
mov
and
pop
inc
push
mov
or
push
fimull
cld
imul
sbb
in
inc
fnsave
test
mov
popa
xor
jns
rcrb
mov
outsb
pop
pop
xchg
mov
aas
imul
jo
mov
jge
inc
inc
filds
mov
repz
adc
sub
lds
jecxz
aad
adc
scas
dec
and
or
and
lea
cld
inc
inc
cmp
mov
aam
pop
add
dec
jecxz
shlb
push
adc
and
or
loop
pop
rolb
rorb
pushf
xor
fwait
mov
andl
fcompl
jg
jno
mov
sbb
aad
xchg
push
mov
mov
sbb
aam
bnd
fcoml
adc
sti
cmpsb
outsb
jecxz
mov
adcl
xchg
outsb
lahf
xor
pop
mov
cmpsl
jb
arpl
enter
xor
pop
xchg
and
inc
cmp
and
scas
xorb
aam
xchg
cli
les
lea
xor
outsb
push
dec
out
mov
xchg
das
enter
add
push
or
push
inc
call
int3
xor
in
fildl
loop
loopne
notb
xchg
adc
fiaddl
push
lret
cwtl
rcl
xchg
adc
lret
shlb
and
ret
xchg
pop
sbbb
int
inc
xlat
inc
add
mov
push
add
outsb
mov
sub
ret
and
add
dec
iret
inc
outsl
outsb
cld
jns
hlt
push
sub
sbb
xchg
ss
mov
movsb
push
mov
je
ds
lahf
sbb
call
adc
inc
pop
popf
xlat
sub
or
ficoms
pop
fcoml
adc
inc
ljmp
loope
inc
xor
orb
lods
ss
sahf
stos
push
lcall
test
mov
cli
or
fisubrs
cmc
pop
int
mov
fsts
pusha
jbe
add
idivb
sbb
aad
push
xor
cmp
lds
hlt
adc
inc
or
jbe
mov
mov
jle
jle
adc
xor
cmp
mov
jb
insl
jb
in
xor
pop
jmp
or
pop
sbb
adc
xchg
dec
pusha
xchg
mov
cld
jmp
dec
orb
pushl
lret
imul
add
mov
fists
jb
pop
jmp
sub
cmp
fnstsw
mov
jae
fistpll
sub
pop
cltd
lret
jns
xchg
rcll
dec
xchg
fbld
jle
lods
leave
push
lock
push
push
jge
inc
fidivs
inc
xchg
add
and
jmp
inc
shll
sbb
inc
nop
lret
outsl
adc
mov
sbb
leave
in
sbb
pop
xor
ficomps
push
std
cmp
cli
ljmp
push
adc
cltd
mov
out
jno
mov
cmp
push
hlt
or
sub
sbb
loope
call
cmp
mov
daa
lock
push
pop
mov
jecxz
stc
dec
jecxz
jo
in
dec
and
fwait
imul
pop
jl
sbb
sub
cmpxchg
mov
jle
xchg
test
orb
or
sbb
adc
cmp
cmp
sbb
enter
and
adc
and
or
adc
stc
cmpsb
xchg
and
or
rol
jg
adc
and
pop
sbb
ret
enter
aad
adc
mov
mov
rcl
jg
mov
add
sbb
cli
and
aaa
clc
jbe
pop
aam
jno
lods
in
sbb
fcoms
cwtl
sub
fistpll
orl
test
push
sbb
test
sbb
jg
decb
out
xor
cmp
arpl
xchg
aas
jb
jge
xchg
mov
mov
jle
mov
aam
and
mov
pop
sub
push
imul
lcall
jp
lods
jno
ret
adc
rcrl
out
stos
pop
sub
aam
lds
mov
inc
mov
add
xor
adc
xlat
xchg
leave
arpl
repnz
popf
fcoml
mov
adc
test
sti
les
insl
pushf
cmc
fidivl
clc
pop
shl
jns
cld
lea
lds
sub
ret
shr
adc
cld
pop
shl
dec
mov
jmp
lahf
jo
push
rolb
mov
dec
in
sub
cli
sub
and
jae
and
test
adc
xchg
xor
adc
xor
jmp
mov
enter
inc
js
push
out
imulb
pusha
mov
push
mov
ds
int3
xchg
pop
shlb
pop
xchg
jmp
pop
in
xchg
pop
cmpsl
jmp
push
mov
inc
mov
adc
call
xchg
mov
fisttps
mov
fwait
test
in
push
in
rcr
cmp
ret
mov
cmpb
mov
cwtl
lods
inc
iret
pop
daa
std
sub
sbb
inc
pop
insb
les
insl
fsubr
call
sub
fsubl
lret
jae
pop
dec
and
dec
mov
jb
ret
aam
dec
push
movsl
lds
cli
addl
xchg
jmp
adc
call
imul
insb
xor
cmp
leave
push
jl
ret
sbb
mov
xor
ss
cmpb
out
into
sub
cmpsl
xchg
fistpll
mov
es
xchg
pop
jmp
fcoml
sbb
sahf
mov
shlb
jg
jecxz
fildl
pop
dec
add
les
stos
sub
jns
push
cli
pop
or
inc
psraw
lods
dec
pusha
enter
dec
inc
pop
xor
lods
xor
xlat
iret
mov
adc
stc
jl
fiaddl
fidivrl
or
sahf
dec
pusha
xchg
xchg
push
rcl
sti
icebp
cmc
int3
mov
cmp
pushf
ds
pop
stos
data16
inc
pusha
pop
lret
out
rolb
inc
in
xor
jmp
jne
loopne
out
out
pushl
in
mov
cltd
icebp
sbb
inc
mov
adc
cld
rorb
or
adc
insb
stos
jmp
and
or
scas
lcall
lods
sub
cs
and
lret
cmp
cmp
xchg
lret
ficomps
dec
pusha
xchg
sbb
mov
aas
fwait
lcall
call
sub
mov
push
xorl
mov
in
jecxz
push
call
mov
cmp
mov
pop
mov
xchg
or
xchg
jo
jg
pop
cmp
scas
pop
cmp
testb
and
mov
ss
pop
lods
inc
fldcw
xor
fidivrl
and
ds
adc
cmp
xor
insl
pusha
test
and
aam
into
stc
sbb
dec
pop
xchg
xor
out
and
scas
mov
std
test
mov
pop
push
fsubrs
icebp
outsl
mov
lret
cmpl
fadds
mov
or
std
pop
adc
inc
pusha
inc
cmp
je
cmp
mov
cmp
mov
iret
adc
icebp
add
cmp
out
cs
scas
xchg
jnp
testb
and
add
out
pop
mov
lret
fiadds
mov
std
xchg
push
xor
or
sbb
inc
dec
mov
add
test
sbb
dec
add
jle
jb
and
cmp
sahf
imul
mov
cmp
iret
dec
inc
jno
dec
es
pop
mov
sub
mov
sub
jne
lret
jl
fs
cmp
pop
xor
lock
int3
in
xorl
jno
daa
sub
push
sub
subl
lods
lods
xchg
mov
les
sbb
xchg
inc
adc
sbb
psubsb
cmp
out
xor
pop
mov
xchg
mov
in
push
and
adc
sbb
mov
add
into
inc
lcall
lcall
xor
subl
daa
cmpsl
lds
dec
out
mov
cmp
sub
mov
rorl
ret
shlb
daa
lods
inc
and
insl
xchg
inc
dec
fs
imul
icebp
loopne
sbb
orl
push
adc
js
add
movsl
xor
pop
xor
cld
fldenv
inc
mov
mov
pop
leave
and
ret
icebp
clc
adc
mov
popf
dec
leave
pop
leave
inc
pop
out
lods
je
aam
push
inc
fistl
clc
pop
mov
pop
add
cmp
xchg
jne
xor
lret
insb
je
sbb
pop
fldenv
call
pop
mov
enter
lods
mov
pop
js
hlt
fwait
cli
mov
xchg
inc
push
or
test
mov
nop
sbb
mov
sahf
adc
sbb
nop
cmp
dec
sbbl
ljmp
and
push
ds
cmp
xlat
push
cmp
adcl
push
test
dec
push
adc
pop
lods
push
sub
mov
or
insb
pop
push
push
push
and
cltd
pop
add
jo
cmpsb
sbb
pop
and
mov
jno
ficoms
nop
leave
fisubs
fwait
sub
and
fdivs
test
pop
pop
jb
rcl
loopne
addr16
mov
dec
pop
push
jbe
pop
dec
and
inc
and
and
jle
cmp
mov
jns
inc
movsb
jno
sub
xor
dec
mov
gs
cltd
inc
pop
in
mov
stos
out
push
push
adc
adc
push
cmp
mov
aas
xchg
xor
jbe
add
xchg
dec
fcmovnbe
mov
fcoml
loopne
ds
xchg
lods
push
dec
fsubl
dec
cmpsl
movsl
dec
inc
data16
push
lea
repnz
sub
sub
add
add
call
fists
sub
inc
sub
aam
into
inc
fcompl
mov
cld
dec
mov
sub
mov
fs
cmpsl
inc
add
lret
mov
inc
addr16
movsl
dec
sub
inc
lock
dec
inc
stos
enter
dec
pop
dec
and
jbe
aad
pop
data16
shrb
outsl
mov
mov
test
sbb
or
lret
jp
enter
shrb
dec
jo
adc
cmp
jns
aad
cmp
lahf
fistpll
push
sub
cli
cmp
inc
into
add
or
xchg
sbb
mov
push
xchg
sbbb
push
mov
test
mov
sar
repz
outsl
pop
jmp
add
mov
add
movsb
js,pn
mov
sti
xchg
ret
jbe
cld
and
loopne
je
dec
lahf
jo
lods
mov
lea
ret
add
jp
jmp
jmp
mov
pop
cmpsl
movsl
hlt
pop
aam
mov
sub
js
push
pop
pushf
fldenv
or
sahf
mov
push
ret
inc
xchg
and
lcall
push
add
mov
sarl
mov
jae
xor
pop
mov
rclb
push
push
inc
push
fcmovbe
push
mov
repz
pop
clc
imul
xor
adc
inc
push
jbe
push
xor
xchg
pop
fldl
out
js
mov
dec
or
loope
add
pusha
daa
dec
xchg
mov
arpl
xorb
ficoms
mov
pop
lods
sub
in
inc
jecxz
in
xor
cmp
stos
jno
push
push
sub
adc
mov
lea
cmp
and
mov
sbbb
inc
rorl
cmp
sbb
inc
cmpsb
mov
mov
dec
sub
out
in
push
pop
int
push
ss
lods
and
inc
in
cld
bound
fisubrs
sbb
ficoms
mov
xchg
inc
dec
les
adc
xor
jmp
test
push
mov
push
test
mov
cld
xchg
mov
mov
cmpsl
xlat
test
inc
lods
pop
xchg
cmp
fldl
jecxz
adc
or
mov
call
and
dec
mov
rcll
movsl
dec
push
nop
push
sub
dec
lods
cltd
jecxz
mov
jmp
mov
sahf
lods
mov
jge
mov
arpl
mov
dec
sbb
cmp
lret
call
sbb
dec
lret
movsl
inc
aas
dec
bnd
psubsb
loop
aad
pop
sub
push
xor
lock
frstor
dec
pushf
inc
mov
xor
add
pushf
clc
mov
jecxz
xchg
imul
or
inc
insb
and
ja
sub
jecxz
mov
movsl
popa
mov
out
hlt
jbe
out
pop
fisttpll
icebp
in
stos
sbb
stos
jno
out
aaa
and
jns
add
adc
inc
rcrb
shll
push
inc
cld
mov
mov
sub
mov
test
es
xchg
cltd
mov
push
pop
out
call
in
xchg
test
jo
adc
jl
dec
jo
or
and
push
adc
xlat
lea
rorl
jmp
mov
das
dec
sub
pushf
dec
sbb
clc
add
sub
add
pop
negb
les
movsb
mov
dec
bound
push
nop
loop
push
fmull
outsb
ljmp
push
jae
js
pop
dec
test
popa
mov
lret
test
adc
repz
sbb
fwait
rcll
cli
stc
mov
int3
adc
repz
ror
fwait
cmp
rcrb
or
lret
call
ja
in
inc
sub
lcall
shrd
mov
int
mov
sub
add
outsb
xor
dec
int3
int3
mov
nop
ficoml
aam
sbb
lock
aas
sbb
mov
mov
mov
fsubl
sti
dec
adc
das
add
mov
jns
jge
rclb
add
adc
sahf
and
sub
fsubs
push
test
clc
jno
add
sbbb
out
or
cltd
push
cmp
mov
and
mov
andb
je
adc
mov
xchg
ljmp
pop
aas
mov
mov
push
imul
push
pop
test
out
cmp
nop
mov
or
fwait
shlb
xlat
inc
or
std
xor
push
int3
adc
jne
insb
add
cmp
push
mov
or
rolb
popa
xchg
push
jmp
xchg
add
or
fwait
inc
sub
xchg
xor
push
adc
or
mov
xchg
cmp
jl
push
dec
xchg
loope
leave
jnp
adc
adc
push
or
mov
aas
add
jnp
popf
or
and
arpl
enter
add
xchg
jno
mov
push
sbb
jne
dec
sahf
gs
inc
mov
sub
jb
mov
mov
adc
outsb
sbb
jnp
cmp
or
push
shlb
and
ja
imul
pop
cmp
pop
or
lock
cmp
ds
jnp
xor
les
xchg
dec
pop
push
or
mov
aam
and
insb
cli
pop
outsb
sbb
xchg
mov
stos
add
cmp
ja
shrb
shrl
pop
and
mov
mov
add
and
aas
sti
cmp
add
sub
rclb
cmpb
push
add
pushf
jno
aaa
cmp
out
je
xchg
test
cmpsl
sbb
or
xor
faddl
lds
push
dec
lahf
fcoms
xchg
mov
cmpl
inc
xchg
cwtl
xlat
divl
sahf
sbb
inc
xchg
xor
xchg
imul
add
fsubrl
lea
add
and
xchg
int3
scas
or
out
ret
dec
out
mov
cmp
jmp
and
push
xchg
aam
and
xchg
adc
leave
mov
xor
lret
push
and
fwait
repz
cmp
cmc
push
push
sub
fsubs
lahf
cli
out
xchg
ljmp
test
aaa
add
out
jb
dec
dec
test
dec
push
nop
dec
je
fs
in
pop
std
bound
push
jbe
pusha
call
lea
hlt
mov
decl
test
sbb
ss
fsubl
adc
fcoms
idivb
imul
inc
mov
movsb
sahf
mov
xchg
mov
cld
fstpl
sub
and
or
in
mov
cmp
push
adc
out
jno
pop
adcb
pusha
mov
xchg
fnstcw
cmpsb
push
imul
lods
gs
adc
dec
xor
jl
shrl
cmp
fistpll
mov
sub
out
in
and
test
js
mov
cwtl
sub
inc
xlat
xchg
jle
ret
call
cmc
rcrl
mov
pop
sbb
adc
sub
popa
imul
inc
jnp
inc
popa
repz
push
adc
imul
and
xchg
out
inc
push
pop
movsb
adc
shrb
shll
fnstcw
and
inc
cmc
sbb
or
mov
cltd
xor
push
stc
xchg
inc
jl
in
jno
fbld
lock
inc
add
lods
push
push
scas
xchg
inc
es
notb
xor
adc
adc
and
js
aaa
js
sbb
out
sbb
divl
das
and
aas
xor
push
std
push
testb
mov
cmovae
shlb
adcb
fs
int3
loopne
cvtdq2ps
cltd
push
or
adc
ss
nop
bound
enter
aam
std
sysret
xor
pop
jb
mov
jge
pop
and
push
popf
jge
inc
and
aas
movsb
or
int3
add
dec
or
in
xchg
popw
aaa
movsl
pop
xchg
scas
outsb
mov
lret
fdivrs
and
enter
dec
mov
push
or
fdivl
ror
stos
push
in
inc
inc
cmp
insb
repz
cld
inc
jo
sub
pop
and
xor
sub
pop
fistps
out
enter
fyl2x
std
push
icebp
test
sbb
insb
sbb
pop
push
jno
fwait
movsl
jae
pop
push
lret
test
cli
test
cmc
dec
cmc
and
imul
call
addr16
mov
fildll
out
pop
subl
push
or
xchg
fldenv
mov
sub
dec
adc
push
ret
sbb
xor
add
sub
adc
add
adc
movsb
push
dec
cmpsb
mov
shufps
jo
es
cld
into
insb
fwait
inc
lret
add
xchg
out
dec
inc
pop
sbb
push
jb
lds
jle
lock
mov
push
xchg
mov
stc
mov
push
cmp
cltd
pop
inc
lea
cmp
lock
add
pop
xchg
sub
bnd
pop
pop
std
out
ret
pop
add
daa
push
pop
mov
ret
push
jg
lea
enter
xor
rcr
jl
lds
sub
or
jo
cmpb
xor
jo
imul
idiv
in
not
aam
sbb
ret
roll
sbb
rcrb
push
jns
daa
mov
jae
dec
loop,pt
add
leave
fildll
push
aaa
sbb
and
negb
push
pop
inc
push
aad
mov
mov
test
out
in
cli
fbld
xchg
push
dec
btc
fldt
cmp
xor
add
xchg
adc
addl
mov
mov
push
fcmovbe
cmp
dec
in
fcmovnb
dec
js
jbe
hlt
lret
and
jnp
inc
dec
jg
test
sbb
or
repz
hlt
sub
or
mov
sbb
daa
push
xchg
xchg
jb
call
pushf
sub
leave
pop
dec
and
push
mov
pop
cmpsb
cs
enter
cmpsl
pushl
pop
push
or
sti
cmp
int3
es
mov
in
push
fldenv
mov
addr16
cmp
scas
mov
repnz
les
push
stc
loope
mov
ja
push
xchg
push
pop
rcrb
sub
imull
push
clc
cld
dec
add
fadds
mov
cmpsb
and
inc
mov
sarl
mov
mov
jne
mov
jmp
jmp
or
cld
sarb
in
inc
testl
adcb
test
xchg
xor
les
int3
mov
jnp
scas
jp
push
pop
xor
dec
dec
sub
fimuls
dec
xchg
cmp
mov
adc
or
pop
inc
and
ss
add
push
cltd
stc
mov
and
mov
dec
imul
je
mov
mov
fs
push
stc
clc
sbb
jnp
pop
and
pushf
mov
xor
or
mov
cmc
mov
adc
sbb
fadd
pushf
xchg
sub
and
jns
push
lods
outsb
pop
arpl
pop
xchg
out
subb
sbb
pmulhw
stos
in
loope
adc
pop
push
jno
dec
in
mov
xor
mov
inc
inc
outsb
ja
shrd
and
adc
adc
mov
jl
sahf
imul
push
sti
dec
stos
xchg
decl
adc
jmp
pop
fisubrs
cs
and
movsb
subl
mov
js
adc
xchg
and
mov
jbe
ficompl
mov
inc
aas
test
mov
mov
mov
push
les
adc
stos
call
xor
cmp
adc
push
movsl
dec
sarb
sub
daa
stc
pop
or
sub
push
adc
cmp
outsl
push
push
xchg
clc
data16
dec
in
insl
jecxz
leave
fwait
cmp
mov
xchg
dec
xor
push
cmpb
sarb
add
mov
pop
jp
out
sbb
arpl
dec
or
lret
inc
jno
push
sbb
inc
xchg
pop
adc
ret
and
sbb
fisttpl
inc
push
sub
xor
jmp
xchg
sti
fidivl
das
jo
divb
mov
jb
test
popf
pop
aas
int
sbb
mov
pop
push
fldcw
push
movsl
bound
mov
in
scas
imul
adc
or
leave
sbb
add
sbb
aas
insl
pop
in
push
mov
jbe
fwait
test
mov
repz
ret
pop
dec
leave
adc
or
xchg
enter
arpl
or
mov
add
pusha
sub
inc
popa
jo
ss
jl
jb
xchg
dec
mull
pop
inc
jl
fdivrs
sbb
jne
sbb
es
inc
mov
vmwrite
push
jmp
inc
cli
mov
daa
xor
push
cli
lods
mov
or
int3
xchg
bnd
stos
adc
jnp
mov
inc
mov
dec
mov
jb
pop
pop
inc
aaa
or
adc
xchg
sub
or
in
ret
movsb
mov
mov
aad
fwait
outsl
movsb
jle
dec
out
or
fsts
mov
jo
rcll
sbb
xor
out
xor
std
pop
sub
adc
push
fwait
test
aaa
lcall
movsb
insl
cmp
pop
mov
out
scas
xchg
hlt
or
sbb
push
mov
mov
and
sub
cmp
and
mov
shll
addl
adc
and
nop
push
adc
dec
sub
cmp
test
shlb
popf
cmp
orl
pop
imul
jae
push
subb
dec
mov
add
push
icebp
movsl
in
jmp
mov
dec
cmpsl
ret
fnsave
daa
mov
and
jp
mov
cmp
in
enter
mov
jo
fwait
xchg
cmp
ficompl
ror
imul
seta
dec
jb
push
enter
icebp
jle
push
dec
repz
dec
inc
cmp
repz
or
fdivrl
mov
inc
mov
inc
sub
adc
pop
bound
sbb
into
in
and
mov
gs
fldl
mov
xchg
push
das
aam
inc
jge
push
cmpsb
mov
ds
call
call
push
sbb
add
jne
pop
inc
ds
ss
data16
mov
cmp
int
xor
xor
sahf
pushl
or
lods
pop
sarb
clc
rclb
loope
mov
jns
jae
add
sbb
xchg
inc
cmp
add
and
mov
fcompl
aam
inc
push
adc
sub
sub
sbb
or
in
filds
inc
mov
cmp
adc
xor
imul
jg
mov
out
outsl
dec
imul
movsb
or
iret
out
aaa
dec
out
movsl
inc
cmpsl
scas
mov
mov
jno
cmpl
add
or
lods
pop
push
imulb
shl
test
inc
sbb
dec
mov
aad
sti
inc
lcall
and
outsb
movsb
adc
insb
or
pop
xor
mov
cwtl
jmp
dec
or
pop
cs
inc
xchg
movswl
faddl
mov
cld
or
aaa
or
js
push
jg
gs
cli
movsb
shlb
inc
pop
cmp
cltd
dec
inc
and
pop
jnp
adc
pop
hlt
add
cmpsl
test
fucomi
push
leave
cmpsl
xor
bound
loopne
cmp
fs
xchg
fisubrs
dec
notl
sbb
bound
dec
sub
lea
dec
push
clc
adc
pop
xor
or
hlt
mov
sti
mov
adc
scas
or
push
mov
jo
pop
jno
cmp
or
lcall
movsb
xchg
jp
xchg
and
pop
es
lds
mov
ljmp
nop
enter
push
jno
jecxz
std
xor
inc
std
mov
xchg
cmp
js
cmp
or
pop
dec
xchg
adc
and
repnz
sub
cmp
test
cltd
je
or
pop
mov
or
arpl
dec
sub
inc
xchg
repnz
pop
dec
mov
cmc
and
lahf
sub
add
aam
adc
jmp
cmp
sbb
es
add
jno
mov
flds
dec
into
icebp
enter
mov
push
add
shlb
mov
sub
mov
jb
mov
paddw
iret
mov
pushf
fistpll
pop
lcall
xor
xchg
ret
dec
sub
inc
fdivl
mov
push
adc
pusha
mov
fimull
je
jg
scas
addr16
xchg
sub
xlat
lea
lea
pusha
dec
cmc
ljmp
test
xor
nop
jp
push
je
imul
in
push
pop
inc
dec
sbbl
inc
push
mov
data16
mov
or
cs
sbb
out
add
and
aam
test
jmp
xor
daa
cmp
lret
adc
jmp
or
mov
ss
sahf
pop
jb
out
mov
and
in
sbb
jg
xchg
inc
mov
cmc
sub
arpl
bswap
xchg
aaa
jp
cmp
adc
push
sbb
add
cmp
lods
mov
xchg
call
pop
xchg
aad
or
rolb
test
jge
popf
push
and
in
jl
xchg
mov
in
iret
test
and
or
ret
cs
push
mov
xlat
cmc
or
in
lret
clc
and
xor
shr
daa
xor
mov
cmp
and
fistpl
repz
cmp
xchg
int3
pop
repz
insl
lret
mov
add
filds
roll
pop
imul
sbb
or
push
std
lock
sub
es
adc
pop
ret
test
dec
push
movsl
fsubl
push
aam
testb
push
ja
adc
xor
xchg
sbb
push
push
xchg
jle
loope
xchg
cwtl
in
and
add
push
mov
inc
stos
lret
and
xor
mov
mov
mov
daa
jnp
mull
les
stos
pop
dec
mov
pop
mov
jecxz
fidivrl
mov
iret
xor
mov
cmp
mov
lcall
xchg
inc
xor
sub
pusha
bound
fldl
pop
pop
xchg
push
jb
push
paddb
inc
or
loopne
into
out
xchg
loop
jo
scas
adc
sub
lods
fs
or
lcall
shrb
cmp
or
fldcw
push
add
ljmp
stos
push
lds
sbb
or
push
sbb
ficoml
push
stos
dec
test
xchg
hlt
ret
dec
cmpsb
inc
addb
add
nop
int
fwait
cmpsb
mov
pop
push
inc
sahf
xchg
leave
jle
and
push
mov
cltd
xor
push
fstl
aas
call
push
inc
sbb
inc
sti
ja
jb
xor
outsl
pop
cmp
scas
aam
lods
adcb
repnz
daa
loope
dec
add
mov
dec
cmp
mov
pop
adc
loope
cmp
sahf
mov
cltd
push
mov
pop
test
sbb
stos
lea
add
xchg
jns
adc
dec
test
inc
test
cltd
and
adc
and
cmp
push
jb
mov
inc
movsb
and
mov
out
hlt
lods
cwtl
xor
pop
in
adc
pop
imul
jae
loope
dec
in
cltd
jge
popa
push
xchg
inc
pop
in
lret
xor
out
xor
imul
and
ret
mov
xor
test
mov
push
fidivrl
das
dec
test
cld
or
aaa
aam
aas
push
sbb
dec
les
call
push
mov
shrb
cmp
inc
xor
xor
aas
inc
inc
mov
mov
mov
mov
xchg
sub
aaa
xchg
adc
movsb
mov
xor
lahf
and
lret
pop
mov
data16
daa
add
stc
add
lcall
into
fcmovu
imulb
in
pop
or
das
lds
jge
jmp
mov
fwait
inc
jl
pop
out
xchg
dec
in
pop
xchg
scas
mov
in
cmp
test
test
ds
pop
test
inc
jne
pop
dec
sub
mov
pop
ja
xchg
mov
xchg
lds
xchg
std
addr16
push
adc
fisubs
stc
sub
adc
jae
and
icebp
jp
andb
jg
repnz
xchg
dec
xor
cmpb
push
pop
mov
lock
adc
cld
out
cmc
inc
mov
aad
cmp
sub
loope
dec
mov
insb
out
call
xchg
rcrb
enter
repz
ret
pop
mov
mov
in
xchg
mov
jl
jbe
rclb
sahf
testb
jmp
test
lods
daa
cwtl
insl
inc
inc
nopl
add
cltd
push
mov
add
sbb
push
pop
repz
jae
inc
fisttps
pop
loop
scas
adc
out
jae
pop
ja
mov
mov
cltd
mov
mov
shr
insb
mov
shll
idivb
xlat
clc
add
cmc
adc
inc
jle
or
decb
push
cmp
xor
pop
mov
sbb
xchg
cmpsb
sbb
pop
aam
pop
pause
cwtl
fidivrs
adc
mov
push
cmp
mov
les
aam
xchg
pop
stos
jl
lret
jbe
cmp
sbb
push
or
push
loope
mov
rclb
dec
repz
cs
or
gs
lret
scas
fcoml
add
test
xchg
ret
or
cmp
lds
sub
adc
push
push
mov
divb
and
popa
jno
repz
add
jmp
cmc
mov
orb
sbb
rcr
or
icebp
or
adc
xchg
je
sahf
sub
sub
xor
cltd
dec
push
jge
repz
dec
sbb
sub
pop
cwtl
mov
jns
mov
cmp
xor
dec
aaa
bound
div
xor
jbe
pushf
push
popf
add
iret
in
loope
mov
scas
mov
jp
mov
ret
cwtl
scas
jnp
or
dec
shll
jae
add
pop
mov
in
cmp
sub
mov
call
loop
jnp
jmp
adc
cli
push
out
jae
dec
inc
fs
aad
js
xor
mov
adc
inc
ljmp
mov
int
sbb
and
jge
vmptrld
stos
mov
mov
xchg
shll
in
push
mov
dec
cltd
fadd
pop
add
pop
jnp
inc
imul
inc
dec
adc
push
daa
pop
stos
cmp
xchg
sbb
out
adc
aad
jecxz
hlt
hlt
mov
mov
addr16
adc
stos
mov
mov
sub
jae
mov
daa
ficomps
xlat
test
cmp
adc
xchg
adc
pop
sbb
ljmp
push
lods
xchg
lahf
in
cs
or
mov
xchg
jmp
sbb
inc
out
testb
pop
pop
repz
xor
cmp
call
loope
add
orl
cmp
push
add
dec
cwtl
jb
jo
rorl
cli
mov
add
ficompl
je
dec
imul
fldenv
pushf
adc
loope
inc
loopne
push
pop
pop
loopne
fs
or
xchg
out
inc
mov
pop
rcl
rorl
into
loope
cmc
popf
aam
repz
lcall
les
imul
addr16
or
lret
sub
sub
adc
push
testl
je
lahf
pusha
loopne
mov
test
lcall
notb
xchg
jge
mov
cmp
mov
jmp
dec
pop
insb
mov
mov
xchg
jmp
shll
out
fs
mov
adc
push
test
or
fwait
dec
jmp
dec
xor
pop
xor
push
sbb
imul
sbb
jmp
push
pop
stc
je
sbb
mov
bound
push
adc
adc
adc
icebp
cltd
mov
xchg
lds
loop,pn
pop
jle
cmpsl
adc
or
andl
pop
mov
sub
cmp
dec
repnz
mov
test
pushf
and
movsl
xor
inc
pop
mov
xchg
xor
in
add
adc
push
or
or
fs
cmpsb
xchg
adc
mov
jle
add
sbb
or
or
mov
mov
cwtl
lahf
dec
xor
sub
xchg
repz
mov
cli
cmp
movsb
mov
dec
insb
movsl
aam
cld
push
sbb
aas
gs
aaa
mov
xor
call
or
mov
fistps
push
leave
stc
sub
in
popa
and
adc
lahf
adc
cmp
std
mov
jg
repz
dec
xchg
push
xor
push
jbe
lcall
inc
loopne
cmp
jge
sbb
test
aas
mov
push
clc
and
test
jbe
mov
lcall
xor
in
pop
mov
xor
cltd
test
loopne
lret
rolb
sar
push
push
ss
out
xchg
fmulp
and
dec
out
andb
cld
mov
std
shlb
lret
stos
inc
iret
roll
adc
pop
leave
adc
fldl
lret
je
movsl
int3
clc
dec
pop
adcl
push
sub
adc
mov
mov
jmp
adc
and
test
push
xor
cmp
lods
repnz
inc
inc
fisttpll
xchg
cmp
push
sahf
cwtl
or
fdivrl
lcall
repnz
or
dec
cmp
leave
addl
std
xchg
or
mov
dec
dec
or
adc
mov
aas
nop
sti
pop
add
mov
add
or
mov
jge
xchg
mov
xchg
inc
popa
dec
int3
push
lea
and
lcall
loopne
jae
push
test
xor
jo
and
add
jg
aas
jnp
loop
lahf
jl
push
lahf
sbbb
and
aaa
add
xchg
inc
imul
xor
fisttpl
iret
test
inc
dec
mov
or
jae
jmp
push
sbb
lods
mov
jg
cwtl
xlat
scas
add
cmp
jne
int
pusha
test
mov
lods
jge
fidivl
pop
push
push
adc
cmp
xchg
or
mov
push
dec
add
adc
nop
rclb
push
aad
fwait
aaa
mov
add
sbb
adc
and
cmpsl
xchg
negb
gs
or
jmp
lahf
jmp
dec
xchg
cld
add
push
jge
test
jns
lock
leave
mov
inc
cwtl
jnp
cmp
mov
sbb
fbstp
pop
fwait
mov
scas
sbb
pop
in
call
xchg
add
and
iret
xorb
add
cmp
sar
push
and
dec
pop
cmp
jge
imul
jb
jl
testb
leave
lret
stc
adcl
sub
flds
mov
jmp
movsl
stc
mov
xlat
push
lret
in
jbe
adc
dec
dec
stc
out
in
or
insb
mov
out
adc
dec
leave
sbb
pop
les
jmp
lahf
and
test
rcrl
mov
out
jmp
pop
mov
mov
pop
cli
repz
in
popf
or
imul
nop
push
pop
mov
xchg
ja
into
inc
or
lds
cmp
add
scas
and
iret
dec
dec
cmp
stc
inc
js
dec
test
aam
sbb
pushl
popf
jo
sub
cmp
push
pop
pusha
cmp
adc
inc
adc
push
xchg
jne
xchg
inc
or
inc
mov
push
xor
out
sub
icebp
push
jg
movsl
mov
mov
push
add
jno
inc
or
push
shll
outsl
adc
in
inc
insb
pop
dec
inc
fbstp
mov
or
mov
fwait
xor
inc
pop
add
call
fmull
cmp
mov
aam
dec
ja
cltd
cmp
inc
subl
movsb
mov
push
mov
xlat
data16
in
mov
fwait
xchg
inc
aaa
in
sbb
fbstp
sub
mov
inc
popf
mov
cmp
push
movb
push
dec
loop
fwait
pop
cmovs
mov
pushf
jb
cwtl
mov
mov
xchg
inc
aas
outsb
add
loopne
pop
sahf
aad
push
xchg
out
ret
enter
mov
cmc
push
addl
lret
inc
add
inc
mov
gs
rsqrtps
inc
mov
jge
add
cli
hlt
mov
int3
sub
xor
and
dec
dec
pop
icebp
mov
xchg
out
dec
out
insl
push
out
dec
adcl
repnz
push
and
out
fcoms
push
fimull
and
adcl
xchg
xchg
jecxz
pop
push
sbb
loopne
inc
cvttps2pi
sub
lea
daa
loope
jb
ljmp
stc
xchg
xchg
mov
and
sbb
loope
movsl
fidivrl
xchg
test
sbb
shl
fadd
es
add
mov
mov
and
dec
xchg
jb
fisubrl
adc
mov
push
roll
push
xchg
mov
loopne
sub
pop
adc
out
pop
call
fcoml
cmpsb
into
cmpsb
adc
xor
cmp
dec
pop
pusha
mov
xor
cmp
insb
inc
add
loop
jmp
sbb
add
out
adc
sbb
add
inc
add
sar
shl
adc
mov
add
jns
mov
mov
fmulp
sbb
push
outsl
imul
dec
pop
adc
and
jecxz
and
lock
mov
insl
lds
fdivl
mov
mov
pop
mov
aas
mov
and
sbb
adc
xchg
jle
scas
add
call
add
fs
inc
imul
pusha
test
loop
call
pop
or
icebp
mov
stc
das
jo
adcl
sub
outsb
inc
das
xor
push
inc
cli
pop
push
inc
notb
shl
push
xor
loope
jmp
mov
nop
test
cmp
add
stc
adc
movsl
insb
pop
int3
xor
dec
mov
repz
lock
and
lds
add
sarb
cmp
adc
stos
dec
pusha
pop
cmp
sub
jecxz
fsubrs
adc
movsb
dec
sbb
in
jge
out
mov
in
stos
addl
pop
leave
das
adc
sti
push
xchg
sub
sub
xor
or
pop
pop
inc
aam
push
mov
sbb
out
and
gs
lret
out
xchg
dec
inc
xor
or
cwtl
sub
and
add
sbb
inc
xchg
inc
jle
jns
test
jmp
les
jle
and
inc
pusha
lret
xor
fdivp
icebp
addb
mov
clc
inc
sbb
ss
insl
sub
nop
rcrl
fmuls
push
sub
inc
mov
inc
ret
bound
out
dec
pop
xchg
or
stos
xor
test
adc
jg
push
in
push
cmc
inc
testl
out
pop
clc
mov
or
rorl
jge
sub
mov
out
addr16
xchg
mov
leave
bound
or
or
inc
adc
or
scas
inc
out
movsb
divb
clc
add
pop
and
xchg
push
xchg
ret
mov
call
and
jae
daa
cmp
mov
cltd
fisubs
outsb
aas
mov
mov
mov
pop
jmp
adc
jb
sub
jbe
pop
out
aad
jge
out
pop
je
call
pusha
popf
push
fldcw
mov
stos
add
or
fidivrl
mov
in
xor
sti
xchg
jbe
sti
xchg
jmp
sub
push
xorl
pop
fmull
testb
adc
test
pusha
fs
test
and
adc
sarl
in
add
adcb
ficoms
pop
add
pop
fidivs
push
mov
xlat
cmp
testb
or
xchg
cmpsl
lahf
pop
sbb
jmp
pop
test
push
cs
sbb
mov
fists
jp
aam
jno
sbb
xor
sbb
repnz
add
aad
clc
fstpt
inc
je
outsl
call
sarl
aas
push
fsubr
stc
insb
cmp
inc
lret
and
fsubrs
outsb
xchg
loopne
mov
sbb
and
int3
sbb
lea
sub
ds
sahf
fistps
push
mov
mov
lcall
push
sbbb
stc
adc
out
dec
daa
pop
cmp
dec
pop
imul
sbb
jg
push
xlat
cmp
xor
dec
mov
repnz
inc
jns
movsb
jecxz
cs
pop
xor
fwait
sub
arpl
imul
jmp
mov
stc
in
add
jmp
xchg
push
cmp
incl
jmp
fbstp
sbb
dec
xchg
jmp
or
pushf
pop
fidivl
and
adc
enter
cmp
fwait
mov
add
dec
outsb
fs
in
shlb
and
xchg
nop
pop
lret
pop
xchg
fwait
insl
aas
rcll
mov
test
xchg
fldenv
push
xchg
sub
adc
jg
adc
mov
jge
mov
test
ss
sahf
sub
fdivrs
lret
xchg
inc
test
sahf
adc
pop
jmp
mov
stos
sbb
lret
pop
mov
and
das
hlt
dec
sbb
mov
insl
mov
nop
gs
icebp
lcall
dec
sbb
in
stc
cmp
cld
andl
mov
orb
mov
movsb
xchg
inc
lods
or
sub
mov
je
sbb
ja
sub
inc
xchg
adc
mov
out
xchg
cmp
fsubrs
hlt
push
sbb
lret
jbe
je
repz
sbb
ljmp
data16
cmp
test
cmp
and
dec
cmp
gs
movsl
mov
inc
std
sub
adc
inc
push
lahf
inc
sbb
fimull
xchg
test
sub
dec
adc
inc
adc
dec
mov
mov
adc
jne
lods
clc
and
mov
push
inc
cwtl
repnz
pop
cmp
jnp
repz
stos
fisubrs
js
xlat
xchg
ret
add
in
clc
daa
iret
push
cmp
sahf
pop
inc
sbb
nop
jae
out
add
jno
sbb
push
or
and
repnz
fcoml
xor
hlt
fstpl
lods
mov
adc
int
icebp
push
ror
jecxz
push
or
mov
ds
ljmp
popf
or
jae
jmp
cmp
mov
xchg
pushf
push
orl
adc
xchg
rorl
inc
sbb
sbb
or
lret
pop
inc
xor
sub
dec
addl
xor
ja
shrb
dec
les
scas
popf
sbb
adc
jb
adc
rorl
enter
ror
aad
out
mov
adc
add
arpl
xchg
sbb
int
cmc
pop
pop
jns
add
pop
push
adc
bound
jne
sbb
inc
add
cmpsl
cld
pop
lea
add
mov
dec
dec
cwtl
and
jo
leave
jle
in
int
mov
cld
sbbb
push
out
ret
test
or
js
push
call
xor
push
cmp
xadd
out
ss
into
aas
ljmp
nop
add
stc
or
pop
xchg
ja
pop
sub
rclb
mov
push
xchg
xchg
adc
aam
add
mov
xchg
mov
pop
xchg
and
sbb
push
loop
cmpl
cs
xchg
js
sbbl
mov
xor
cmp
insb
jl
aad
pushl
lret
or
pop
jecxz
ss
in
fisttpl
fwait
mov
stc
fistpll
push
sbb
fdivl
popf
rorb
loopne
das
mov
aas
notl
cmpsl
push
ror
fwait
sahf
jl
mov
mov
das
pop
insl
or
loop
lahf
adc
inc
xchg
add
sbb
cli
and
push
cmpsl
cltd
mov
add
jmp
adc
sub
sub
push
mov
add
repz
xchg
xchg
dec
xchg
push
jno
gs
dec
pop
stos
test
dec
mov
stos
push
pop
aad
sahf
jbe
sbbb
fiaddl
mov
push
aaa
pop
xor
sub
fisubrs
sbb
ret
xchg
mov
test
inc
inc
hlt
popa
pop
and
pushf
ffreep
cmp
mov
sub
adc
push
scas
and
dec
call
dec
inc
xchg
fstps
jl
mov
cmp
jmp
dec
cli
dec
fdivl
jne
cmc
add
mov
and
pop
or
cmp
lods
popa
jg
push
in
adc
dec
ss
jmp
rolb
bound
xor
mov
ss
push
je
push
push
sti
cmp
jmp
popf
push
repnz
aam
sbb
push
push
sbb
mov
arpl
pop
sbb
stos
mov
scas
inc
loopne
xor
rcrl
cwtl
adc
lcall
xchg
int
fisttpll
cs
je
mov
mov
mov
push
das
pop
sti
xor
in
mov
mov
mov
movsb
cmpsb
adc
mov
dec
cmp
ds
clc
sub
or
mov
movsb
or
rol
sub
stos
outsl
mov
mov
mov
loop
pop
jno
jne
stc
out
mov
adc
push
subl
aas
das
jns
push
dec
mov
enter
push
test
lcall
push
sti
ret
out
sti
fs
pop
pushf
or
ds
dec
mov
or
rorb
and
arpl
pop
jne
sub
pop
sbb
push
xor
mov
mov
leave
jns
inc
mov
test
and
push
mov
mov
je
add
jae
inc
sub
hlt
mov
add
push
xchg
sub
cmp
std
xor
mov
fistl
in
sti
dec
xchg
fisubl
jb
push
outsl
mov
xchg
imul
mov
icebp
iret
jns
add
adc
sbb
sub
hlt
ficoms
loop
inc
fildll
and
push
pop
cmp
clc
in
sub
inc
cwtl
cmp
mov
lods
add
jl
lock
adc
push
xor
jecxz
icebp
jbe
dec
rolb
ds
add
dec
adc
xchg
lea
add
loopne
mov
push
inc
push
lret
loope
std
dec
ss
add
push
ret
loopne
jg
sbb
ds
fcompl
pop
test
test
adc
mov
repnz
outsb
pop
out
fisttpl
mov
ret
dec
xchg
xor
push
ds
int
add
test
mov
push
shll
aaa
xchg
lock
xor
fimuls
fistpl
test
pop
push
lods
enter
in
inc
cvtpi2ps
pop
repz
les
dec
cwtl
adc
or
daa
pushf
andl
cli
lea
and
or
add
jno
dec
sub
inc
dec
clc
ret
sub
fstpt
xlat
aam
sub
inc
jo
test
pop
sub
rcr
cs
mov
stos
lret
mov
mov
neg
jo
mov
and
push
xor
outsb
push
xor
cmp
push
jmp
xchg
shlb
and
sbb
or
pusha
cmp
adc
inc
jl
insb
int
fisubs
lods
push
mov
frstpm(287
jne
jae
data16
hlt
sbb
out
fcoms
xchg
sbb
or
xchg
push
push
out
shll
leave
add
pop
cld
in
lods
add
mov
popf
aas
push
int
sbb
mov
mov
xchg
lret
daa
mov
fldt
mov
cmpsl
in
pop
pop
cmp
mov
add
mov
arpl
loopne
mov
cld
in
mov
mov
mov
jns
imul
loope
mov
lret
enter
repz
cmpsb
push
mov
movsl
out
jb
or
push
or
pushf
mov
enter
and
jle
rcll
lahf
mov
or
mov
sbb
cmpl
xchg
inc
lea
sbb
movsb
xchg
ljmp
scas
cltd
cwtl
ret
push
mov
mov
dec
loope
cmp
sti
push
dec
aad
or
out
push
sarb
pop
call
jne
inc
or
push
adc
dec
repz
fbld
test
hlt
loopne
test
push
fcompl
mov
dec
ret
cmp
cld
mov
sub
mov
xlat
jg
pop
loopne
pop
cmp
xchg
loope
rcrl
inc
xchg
and
sti
orb
stos
xor
insl
xor
push
sbb
jns
sbb
mov
in
push
arpl
and
xchg
aad
cmp
sarb
int
xor
shlb
push
add
pop
jno
insl
dec
or
rorb
mov
sbb
pop
add
mov
repnz
and
adc
add
sbb
cmp
or
xor
addb
add
xchg
push
mov
and
mov
adcl
movsb
xlat
test
in
in
rorb
pop
jnp
or
mov
mov
call
mov
mov
push
call
push
pop
out
jle
xchg
rol
mov
fistpll
mov
std
mov
or
enter
rcll
add
dec
filds
mov
loopne
insl
loopne
or
mov
mov
scas
pop
xor
nop
iret
push
lret
stos
mov
inc
mov
add
mov
mov
pop
in
cmp
push
loope
mov
cltd
push
lock
scas
into
fdivr
push
push
out
mov
idivl
jle
adc
sbbb
adc
popa
sbb
sub
shlb
sub
sbb
aam
lahf
adc
hlt
sub
mov
pop
sub
cmp
hlt
and
pop
mov
and
pop
outsb
les
sbb
xor
aad
cmpl
inc
mov
and
mov
mov
add
pop
test
fldl
mov
pop
dec
inc
roll
cld
dec
fimuls
or
fmull
ret
int
icebp
faddp
loope
rolb
pop
lret
repnz
out
sbb
mov
fsubr
xchg
inc
lret
mov
mov
in
mov
fs
ret
jmp
and
or
and
xor
loop
cld
xor
xor
add
push
xchg
inc
out
jg
in
or
cmovge
or
icebp
adc
sbbl
aaa
adc
mov
ja
dec
jo
in
pop
loop
out
in
push
xor
mov
pop
es
cli
fs
dec
dec
arpl
inc
stc
mov
xor
inc
and
adc
jp
cmp
lock
jge
sub
icebp
xchg
push
xchg
rclb
sub
push
cld
int
add
out
fbstp
dec
rorl
sbb
leave
bswap
mov
stos
loope
inc
jns
fs
ja
push
lods
in
mov
xor
sub
xorl
std
cmp
stos
js
mov
shr
jmp
or
jg
lds
inc
dec
mov
xor
fnstsw
push
or
scas
mov
dec
jp
nop
mov
orb
int
popw
into
jnp
xchg
push
sbb
add
in
pop
out
rorb
in
adc
xchg
loope
mov
jp
repnz
jbe
in
cmp
fdivl
sbb
punpckhbw
out
jge
sbb
sbb
pop
iret
mov
shll
inc
jb
push
cmp
sub
add
fs
pop
rorb
mov
xor
and
fwait
rorl
ljmp
icebp
and
adc
push
pop
test
and
mov
jns
cmc
cmp
jno
icebp
and
push
push
mov
dec
jne
jbe
cmp
loope
sub
and
testb
sbb
sbb
stos
sti
leave
mov
or
pop
mov
add
cmp
adc
add
push
add
lahf
push
add
test
shl
push
push
jmp
outsl
scas
pushf
pop
dec
enter
mov
dec
push
inc
push
push
lahf
jge
jbe
jl
dec
pop
ja
movsb
push
xor
push
sub
sbb
xor
out
sti
stc
sbb
call
pop
in
cwtl
cmp
mov
int
call
pop
fsubs
jp
pop
neg
and
flds
dec
shrb
and
roll
inc
mov
add
pop
movsl
cld
jb
dec
adc
dec
imul
jb
xor
aad
push
int
sbb
pop
sahf
mov
std
cld
cmc
add
cs
xor
or
or
jl
pop
fs
out
pop
vmovntps
movsl
fsub
subl
int3
push
out
sbb
xlat
mov
cmpsb
push
wrmsr
stos
mov
sub
xor
negl
stos
insb
mov
inc
aaa
xchg
mov
leave
cwtl
adc
leave
rclb
divl
push
cmc
jbe
pop
in
push
ds
mov
lds
hlt
insl
out
xor
xchg
xor
roll
test
sbb
or
mov
lret
data16
jg
mov
rclb
mov
push
mov
jno
cli
mov
pop
sbb
fucom
dec
xor
mov
sub
dec
xchg
pop
sahf
adc
and
inc
pop
push
movsl
mov
test
lret
outsb
push
mov
insb
push
out
mov
sbb
push
mov
clc
aas
inc
add
imul
negl
out
jg
imul
inc
mov
sbb
mov
or
and
out
mov
mov
inc
out
fucomi
inc
dec
shrl
jo
mov
dec
add
dec
xor
inc
icebp
dec
aaa
bndldx
mov
pop
test
jecxz
arpl
jl
mov
sub
add
mov
test
cmp
push
mov
mov
jmp
hlt
les
cmc
push
add
lea
pop
scas
or
sub
leave
mov
lea
or
jbe
clc
pop
and
jne
out
xor
test
and
jo
cmc
outsl
mulb
fstpl
cmp
dec
pop
cli
inc
mov
inc
int
daa
aam
fsubl
test
cmp
loope
shll
repz
pop
sbb
cmpsl
fisubs
mov
xorl
imul
jbe
loop
cmp
mov
xor
mov
scas
enter
into
sub
imul
sub
inc
lock
lret
xchg
sub
xchg
adc
sub
cmpsl
ret
xchg
push
adc
adc
and
mov
das
std
cmpsl
addb
jnp
sar
add
push
dec
jnp
adc
jo
mov
mov
push
mov
xor
dec
stos
jge
xor
push
loop
insb
sub
cwtl
inc
gs
pop
imul
push
popf
sub
mov
jae
xor
in
lcall
aad
ljmp
lret
jnp
adc
jb
xor
std
xorb
ror
enter
jo
jecxz
dec
test
mov
dec
mov
add
pop
mov
adc
xchg
cmpl
bound
loopne
xor
les
sub
cmp
add
roll
inc
bound
cltd
mov
fs
push
pop
mov
adc
sub
psraw
lock
mov
sub
dec
xchg
fistps
cmc
in
sbb
fldl
popa
xor
mov
rcrb
or
je
sahf
cmpl
addl
cmpsb
pop
and
pop
outsb
fwait
std
mov
inc
add
jl
pop
xchg
add
in
mov
pop
push
xor
dec
jbe
dec
cmp
jle
cmp
dec
roll
addl
mov
ja
outsb
xchg
add
imul
and
aad
inc
lret
frstor
xor
sbb
sbb
push
adc
pop
sub
cmc
pop
sti
or
push
inc
mov
dec
popf
add
inc
mov
sub
dec
out
sub
jbe
fnstcw
lock
xchg
shl
data16
push
and
jg
movsb
jle
xchg
fildl
or
ret
test
nop
adc
repnz
lods
pop
cwtl
add
sbb
int
sub
mov
fcom
add
lea
cmp
repz
sub
daa
mov
xchg
and
gs
repnz
mov
inc
or
ljmp
push
aam
lea
sahf
and
cmc
xor
xor
mov
orb
inc
mov
pop
lcall
lret
adc
cltd
inc
lds
jb
jle
pop
sub
and
in
cmp
or
arpl
cld
in
pop
lahf
and
xchg
mov
loopne
jmp
dec
das
fxch
cld
pushf
inc
mov
inc
cmp
xchg
xor
mov
and
setno
adc
pop
mov
gs
jmp
fs
mov
pop
or
popa
mov
jo
test
fcompl
mov
jnp
mov
fnstsw
pop
mov
lret
imul
popa
push
pop
ret
sbb
jnp
fdivrl
push
lret
mov
daa
mov
popa
sub
cmp
push
call
mov
ja
fnsave
lcall
and
xor
inc
sarb
push
and
dec
cmp
add
or
int3
mov
inc
cmp
pop
sarl
iret
jmp
jns
mov
pop
in
adc
pop
adc
or
shld
test
stos
dec
insb
xchg
pop
sbb
fwait
inc
jmp
push
dec
pop
pop
int3
push
fmul
dec
pop
pop
sbb
adc
dec
lds
jecxz
lds
push
sbb
aad
aad
test
jecxz
fs
repz
rcll
fwait
stc
dec
inc
mov
jmp
lods
pop
add
sbb
cmp
jl
jne
push
lds
je
xor
sub
inc
adc
repz
adc
nop
adc
pop
lds
mov
add
arpl
cmp
inc
sbb
rcrb
cmp
inc
subb
inc
add
jo
jae
push
pop
fwait
imul
cltd
xor
xchg
cmp
dec
and
push
and
jo
nop
mov
mov
xor
or
and
fistl
icebp
mov
mov
pop
js
xor
adc
dec
ljmp
adc
addr16
mov
jno
bnd
test
push
and
mov
sti
sbb
mov
ds
stos
fisubrs
iret
pop
pop
pop
cmpl
sarb
gs
jg
mov
jl
push
mov
dec
cmp
mov
or
lret
or
xchg
aas
loopne
add
insl
cmp
cmc
leave
fstpl
cmp
cmp
pushf
icebp
jge
clc
loop
push
arpl
sarl
int3
push
popa
arpl
ja
add
and
outsb
insb
sbbl
xor
adcb
fdivrs
adc
inc
pop
sbb
dec
cmp
dec
test
pop
or
add
and
cltd
jmp
or
repnz
xchg
push
add
cmp
xchg
movsb
xor
stos
mov
movsl
andl
lahf
pop
xor
jg
jb
shrb
out
push
mov
bound
add
test
push
pop
jb
mov
adc
pop
sbb
aas
inc
or
pop
mov
sub
sahf
push
stos
and
not
sbb
jle
push
jle
pop
jmp
fs
fistpl
sub
rcrb
and
adc
xchg
cltd
movsl
dec
pop
xor
cmp
lret
addl
pop
mov
xor
je
inc
cmp
iret
shll
stos
outsb
mov
aas
cmpsb
add
rep
jbe
insl
cmpsl
fistps
add
sarb
scas
lods
lods
dec
cmp
mov
and
cld
add
xchg
iret
test
jb
fisttps
cmpsl
fiadds
call
sbb
imul
dec
adc
cmp
xor
mov
cmp
or
ficompl
xchg
and
les
pop
mov
xor
inc
cwtl
xchg
xor
sub
or
out
sti
and
fcomps
lret
mov
mov
mov
jbe
call
pop
xchg
xor
sbb
dec
mov
cmovne
xor
dec
cltd
or
adc
or
adc
cmpsb
jecxz
or
inc
mov
pop
mov
sub
cltd
into
mov
push
pop
mov
leave
cmpsb
loop
add
sbb
fsubr
bound
into
pop
addr16
adc
jne
jnp
popa
push
push
test
jnp
mov
or
aaa
testb
sub
into
mov
cmp
push
inc
das
cwtl
jl
mov
cld
mov
cwtl
loope
adc
leave
jnp
pusha
mov
es
stc
cs
mov
sahf
xchg
test
hlt
cli
dec
subb
xchg
sbb
push
sub
xchg
aam
pop
fdivrl
rorb
pop
mov
nop
pop
cmp
and
or
jns
frstor
in
into
xchg
xlat
mov
fcmovb
cs
int3
daa
add
and
mov
jae
xor
sub
ret
dec
cmc
fbstp
push
push
call
jbe
push
xor
xlat
arpl
xchg
jne
dec
fwait
push
movsl
pop
push
push
movsb
cmpsl
xor
das
ficomps
push
mov
inc
lcall
add
push
jge
in
idiv
pop
ud2
jo
mov
shll
mov
push
mov
push
mov
push
loop
push
call
jge
ds
lret
or
dec
mov
cwtl
loope
jmp
cmp
ja
xlat
iret
pusha
pushf
cli
sub
mov
gs
mov
adc
mov
outsb
dec
inc
sbb
adc
push
mov
mov
nop
cmpsb
xchg
sti
dec
loope
push
xor
mov
mov
mov
fs
ret
int3
outsb
in
xchg
jno
sbb
aaa
xchg
dec
push
xor
bound
mov
insb
out
mov
or
testl
jg
adc
aaa
xchg
stc
movsl
jge
loopne
cmc
push
in
repnz
push
pop
xor
pop
push
movsb
or
mov
sbb
out
adc
add
fwait
jo
call
adc
or
ja
sub
aam
mov
sbb
mov
jns
shll
mov
mov
inc
aam
push
and
daa
fmull
xchg
pop
cmc
or
cmp
push
sbb
cmp
imul
add
outsl
inc
clc
jge
jecxz
jg
and
mov
or
push
dec
movsb
push
mov
pop
pop
cmp
push
jp
xchg
jns
mov
and
rorb
sub
add
sub
stc
leave
push
out
clc
int3
sbb
out
mov
aas
and
cld
inc
imul
mov
jns
stos
out
fsubs
jb
cmpsb
shlb
js
fnstcw
lcall
xchg
or
jecxz
pop
lds
loop
sahf
cli
movsb
fwait
jne
in
inc
add
and
jno
sbb
jg
pop
lods
push
adc
jno
sub
sub
aad
idivb
mov
lcall
gs
mov
fwait
icebp
cld
sbb
cmpsb
std
jge
push
cmp
or
mov
pop
mov
dec
lds
inc
sub
xchg
addr16
es
aaa
mov
inc
and
mov
mov
ss
stc
jns
xchg
out
std
bound
lods
inc
loop
je
lods
bound
roll
cmp
jno
xor
in
dec
stc
test
fucomi
dec
popf
es
movsl
inc
jl
sbb
adc
pop
mov
mov
dec
cmp
sub
scas
adcb
push
dec
push
jno
into
sar
pop
jmp
and
repz
sbbl
mull
sbb
imul
scas
adc
rcr
xor
ds
mov
je
add
out
pop
push
enter
leave
xchg
sbb
adc
jb
inc
pushf
adcl
sbbl
cmp
or
movsl
push
ljmp
rcll
ss
mov
cmp
dec
xchg
rolb
cltd
mov
mov
fmuls
int3
xchg
mov
inc
cmp
jb
adc
in
xchg
fcompl
push
mov
jo
xchg
repnz
xchg
jae
ret
adc
sbb
and
cmpsb
pop
xor
ret
mov
push
mov
mov
mov
cmp
and
push
sbb
push
ficomps
mov
stos
pop
sbb
dec
inc
outsb
xor
mov
cmp
gs
rcrl
loop
mov
ja
sub
sti
cs
das
in
jecxz
sbb
mov
mov
stc
sarb
test
ret
push
sub
adc
lods
jnp
cmp
call
jae
adc
dec
test
loop
sbb
daa
or
add
adc
mov
fs
sbb
loop
cmc
add
xorb
inc
mov
aaa
faddl
pop
pusha
add
cmp
movsb
push
sbb
loope
fstps
jnp
fists
jge
cmpsl
mov
xor
mov
mov
and
push
pop
and
call
lods
sbb
stos
je
pusha
shrb
out
sub
sahf
xor
pop
xor
sbb
and
sbb
or
cmp
push
jp
or
in
jmp
pop
popa
inc
pop
jg
dec
ror
mov
mov
jbe
sbb
fisubs
jnp
add
sub
mov
sbb
or
sbb
scas
movsb
daa
dec
mov
mov
pop
adc
clc
push
push
sti
lea
xchg
adc
into
cwtl
fbld
fidivrl
jo
call
out
jmp
dec
push
xchg
sbb
int3
cmc
mov
jne
jae
ljmp
lods
sub
rorl
jle
sbb
sub
push
aam
out
js
lret
sub
cmp
push
shll
xchg
je
scas
test
mov
arpl
fcmovu
or
fisttps
fists
xor
sbb
test
inc
in
and
inc
or
or
into
xor
jge
fsubl
pop
bound
fwait
mov
sahf
leave
push
fmull
out
repz
ret
icebp
or
xor
cmp
repz
sbb
or
mov
mov
and
notb
loopne
imul
inc
jge
sbb
sbb
adc
mov
or
push
fsubrl
cmp
and
adc
jnp
fidivl
fdivl
ficompl
ds
jns
aas
sub
add
addb
iret
jg
mov
jae
cmc
cmp
cmpsb
sar
cltd
or
and
lret
mov
lcall
mov
mulb
testb
lock
mov
insl
pushf
mov
lock
ret
icebp
adc
sub
pop
and
push
or
mov
sbb
addr16
push
imul
mov
add
cld
dec
mov
in
loopne
add
adc
mulb
cmc
or
cmp
sbb
pop
jae
scas
or
cmp
cli
and
nop
ja
mov
out
fldt
pusha
and
lahf
pop
mov
cmpsb
sbb
mov
pop
mov
push
pop
cmp
sub
inc
fstps
dec
jne
mov
cld
int
cli
mov
negl
or
pop
std
xor
sbb
pushl
pop
push
or
inc
enter
add
fdiv
mov
dec
mov
cmp
repz
pop
mov
add
call
mov
dec
fwait
and
and
scas
cli
out
rcrb
jg
push
cmp
fmul
movsl
and
test
sub
and
filds
and
dec
mov
hlt
lret
cld
or
sbb
pinsrw
pop
xor
iret
push
test
mov
scas
dec
icebp
das
idivb
inc
push
inc
movsl
imul
sbb
pop
xor
insb
les
pop
mov
ss
sub
pop
add
xchg
addb
lds
sti
pushl
and
int3
pop
add
rcr
jns
mov
xchg
mov
push
sbb
add
in
dec
out
adc
rcrb
mov
pop
pop
dec
pop
xchg
sbb
fisttpll
jns
lcall
fbld
subl
mov
sbb
or
sti
pop
adc
je
test
add
int
sub
aam
and
mov
cltd
dec
and
stos
shl
jae
xchg
jae
inc
sub
jnp
dec
push
xchg
pusha
dec
push
dec
test
dec
roll
pop
lahf
cwtl
cmp
iret
push
lcall
insl
repz
push
test
popa
ret
dec
sbb
lahf
cmpb
orb
mov
cmp
sbb
push
loope
sbb
frstor
cmpsb
shrl
test
push
sub
cmp
pop
dec
mov
mov
xchg
pop
movsl
add
jp
sbb
adc
pop
xor
adc
fisubrl
pop
sub
push
adc
sbb
push
lahf
pshufw
or
fwait
xor
or
or
mov
mov
dec
mov
mov
lret
arpl
pop
shlb
push
fstl
jmp
test
test
dec
adc
add
shrl
jl
fidivrl
sarl
test
push
stos
test
cmpl
jp
mov
insl
cmpsb
dec
inc
and
je
rclb
push
and
or
je
mov
mov
mov
jbe
cwtl
in
pop
and
dec
xchg
incl
or
roll
pop
cmp
nop
inc
and
xchg
adc
nop
xchg
hlt
in
hlt
js
gs
cmp
sub
cmpl
insb
cmp
into
jo
inc
fs
sub
loop
jb
xor
xor
jmp
mov
xchg
dec
icebp
jnp
push
cltd
popa
leave
sub
xor
mov
mov
enter
xlat
mov
arpl
paddw
mov
ret
pusha
sub
pop
dec
jae
and
js
insl
sbb
sahf
cs
loope
test
inc
lods
test
mov
or
jae
xor
push
lock
insb
ljmp
test
std
sub
xchg
int
xor
pushf
inc
aas
lahf
jns
cmp
pop
mov
xchg
fwait
mov
lcall
dec
lret
pop
inc
sbb
dec
xchg
xor
dec
stos
push
mov
fistl
pop
inc
xchg
xor
aas
pop
ljmp
fldenv
dec
adc
pop
xchg
cmpsl
dec
xchg
fstl
mov
inc
in
into
imul
ljmp
cmpsl
sti
pop
add
adcl
in
xchg
cld
mov
idivl
and
movsb
pop
dec
pop
or
xor
insb
lret
push
aam
fwait
pop
les
xchg
push
inc
jecxz
pop
push
or
and
xor
or
and
mov
clc
pop
push
lods
mov
in
out
je
out
notl
pushf
push
jo
and
or
ret
test
fiadds
xorl
or
dec
lock
in
push
fisubs
jbe
or
or
jnp
dec
imul
dec
sub
fwait
dec
xchg
popa
aam
gs
xor
lahf
sarb
arpl
enter
sbb
mov
sbb
mov
add
imul
out
int3
ret
dec
or
xchg
xor
repnz
adc
fisubl
ljmp
int
jle
pop
inc
inc
dec
pop
rcll
das
ret
jmp
add
js
pop
mov
pushf
dec
inc
mov
orl
int3
movntq
shrb
cmp
mov
fwait
push
outsl
data16
sbb
and
or
sub
hlt
xor
ss
jle
mov
std
lahf
sbb
mov
push
into
mov
add
jg
dec
mov
icebp
xor
enter
jns
movsl
jle
movsb
mov
pusha
psrlw
pop
and
testb
jb
dec
movsl
xor
out
mov
sub
mov
loope
mov
out
and
icebp
in
pop
mov
jae
and
or
inc
lahf
cmp
lock
xchg
cmp
jp
push
test
mov
jg
pop
xchg
and
popf
and
xchg
movsl
xchg
xchg
mov
adc
loopne
inc
pop
insl
test
data16
jl
js
lret
dec
mov
cmpsb
int
mov
es
mov
and
sub
sbb
ss
enter
and
xchg
stos
and
cmp
shlb
mov
adc
sbb
in
mov
bound
dec
lods
bnd
test
jl
mov
or
movsl
sub
jae
and
ljmp
xorl
mov
dec
push
sub
testb
mov
mov
add
jbe
adc
fwait
sbb
mov
and
sub
xchg
jge
fisubrl
imulb
cmp
mov
bound
dec
mov
push
je
into
dec
std
inc
cld
xor
ja
xchg
movsl
xchg
and
adc
jp,pn
sbb
jae
inc
aad
mov
mov
and
xchg
xlat
adc
sbb
pop
pop
jno
adc
and
add
push
iret
dec
nop
gs
adc
call
jae
cmpl
mov
pop
aas
mov
in
xor
ret
fincstp
nop
sbb
fistl
push
pop
mov
lea
mov
inc
sbb
xchg
dec
shl
loope
test
aam
sub
subb
xchg
fistl
jnp
push
add
xor
imulb
rorl
ja
cmp
inc
push
rcr
lcall
inc
push
in
mov
inc
pop
jb
clc
jno
mov
or
mov
cld
test
add
popf
inc
inc
jge
mov
lea
cmp
lds
jmp
aaa
xor
dec
in
sbb
adc
aaa
mov
push
xchg
or
mov
xchg
stc
call
pop
cli
loope
int
xor
push
sub
xchg
and
lock
mov
fsubr
cmp
sbb
test
inc
adc
mov
jecxz
arpl
rcrl
shlb
adc
fxch
mov
js
pop
cld
and
fdivl
sub
and
sbb
stc
fistps
push
mov
shrl
ret
dec
xchg
std
fisubl
popa
sub
popa
push
dec
mov
and
or
repnz
pop
push
aaa
mov
movsb
dec
inc
sub
in
pusha
cmp
jne
mov
dec
call
adc
xor
shlb
test
xchg
popa
pop
loopne
ret
scas
loopne
rcrl
test
or
xchg
xor
mov
dec
push
fstpl
aad
mov
imul
jmp
cmp
add
mov
cmp
push
or
push
push
mov
add
pop
cwtl
mov
mov
or
or
ds
ss
cmp
pushf
jg
add
and
adc
xor
adc
loopne
mov
push
adc
and
outsl
outsb
insb
fdivrl
or
movb
fcmove
push
fisttps
sahf
pop
jge
rolb
testb
add
or
aaa
loope
call
or
mov
xlat
fadd
xchg
mov
xorb
imul
jl
in
cmp
adcb
aaa
mov
ja
mov
and
ret
dec
pop
cmp
roll
out
dec
adc
cs
xlat
popa
popa
sbb
inc
pop
sub
jb
aaa
int3
pop
push
sub
adc
push
sbb
push
aaa
push
stos
and
push
jb
orb
and
or
imul
cltd
inc
push
mov
add
add
adc
pop
mov
and
add
dec
popa
cmp
shrl
jo
adc
push
test
aam
cmp
push
rcr
jmp
adc
mov
mov
sub
cli
inc
enter
cltd
xor
adc
jge
pop
and
push
xchg
adc
mov
int
iret
adc
pop
xor
sbb
rclb
mov
xlat
imul
repnz
jbe
pop
mov
mov
inc
cltd
push
jg
jge
inc
push
jmp
das
je
fadds
sub
sub
and
cld
rcrb
sub
rolb
dec
mov
sahf
adc
and
add
jo
push
push
xchg
popa
rorb
inc
in
or
dec
mov
push
mov
sub
xor
xchg
sub
mov
push
cmp
mov
jge
inc
push
sahf
add
push
xor
xor
adc
jb
leave
decl
cld
push
sti
outsl
push
pop
xchg
and
cmp
mov
sub
sbb
out
pushf
jp
lods
iret
push
leave
inc
xchg
dec
mov
popa
lret
xchg
push
xchg
test
xchg
cmp
add
cmp
leave
ss
call
mov
sbb
mov
std
test
repz
push
daa
push
ret
mov
loopne
clc
fimull
add
mov
bound
pushf
and
xor
cld
add
mov
filds
mov
sbb
and
aaa
iret
adc
jo
xchg
ja
pop
in
xchg
jo
ret
adc
test
in
pop
sbb
inc
stc
jae
mov
or
jecxz
mov
sbb
jl
dec
and
jmp
loope
xchg
push
push
gs
mov
lcall
fiaddl
inc
xor
js
pop
mov
loop
xchg
jnp
or
pusha
addl
loop
leave
jbe
inc
inc
daa
mov
xor
add
xor
xor
adc
pop
call
mov
xchg
mov
shlb
fimull
addr16
and
enter
mov
mov
test
mov
or
test
xor
mov
and
je
xor
adc
roll
push
je
mov
inc
mov
mov
pop
pop
push
xchg
sub
sub
test
or
xchg
mov
and
sbb
ret
lcall
inc
dec
pushf
lret
dec
mov
xor
ret
push
call
dec
nop
imul
jg
dec
or
adc
and
sub
pop
xchg
stos
add
inc
imul
iret
or
pusha
in
adc
lahf
aad
fcoms
jae
and
mov
scas
lods
and
jnp
outsb
jg
xor
hlt
ret
or
or
repnz
dec
pop
pop
pop
push
xchg
test
sbb
pop
cs
inc
aad
add
mov
lock
or
adc
pop
sti
jne
or
les
cmp
sub
in
mov
xor
mov
sbb
sub
adc
imul
int3
ja
or
jp
fcoml
pop
call
mov
push
aaa
adc
xor
jge
stos
push
push
dec
or
loopne
aaa
push
mov
lods
movsb
ja
data16
decb
sahf
pop
xor
push
movb
xabort
js
mov
pop
xlat
and
cmp
aaa
ret
xor
inc
jecxz
pushf
jno
jae
mov
push
xchg
ds
stc
in
jo
cmp
adc
andb
inc
stos
and
mov
cwtl
xchg
out
mov
fadd
mov
or
mov
jl
fidivrl
sub
mov
mov
pop
out
xchg
loopne
scas
nop
cmp
arpl
bound
and
jmp
incl
jle
cmpsb
fidivl
sub
int3
mov
out
imul
pusha
push
repnz
nop
add
cmc
sub
pop
fsubrl
xor
sarl
pop
rcl
cmp
jge
mov
adc
scas
mov
push
xchg
decb
dec
cmp
mov
nop
pop
fcomps
loope
add
fstps
adc
and
inc
cmp
mov
sbb
popf
scas
out
and
xlat
ja
sub
push
test
mov
xchg
and
pop
int
xor
mov
mov
ss
cmp
and
push
mov
sbb
xchg
adc
pop
adc
dec
xor
dec
pop
mov
sbb
push
ret
jge
inc
pop
hlt
adc
and
adc
pop
mov
dec
jno
sbb
jne
cmp
push
arpl
jb
adc
push
js
jno
inc
and
pop
sbb
jo
xorl
dec
ret
cmp
mov
pop
insl
andb
pusha
fdivp
dec
daa
lock
out
cwtl
nop
sbb
pushf
out
das
jle
fwait
imul
mov
es
push
iret
mov
popa
adc
mov
sbb
and
adc
scas
les
gs
jg
cmp
adc
inc
ret
int
push
inc
xchg
mov
adc
fisttps
daa
mov
dec
in
outsb
inc
xchg
sbb
dec
daa
inc
mov
push
dec
fisubrl
jmp
jbe
scas
clc
cmpsl
cmp
sti
fwait
mov
pusha
test
xor
xor
popa
sub
xlat
jg
adc
mov
icebp
cmc
push
push
or
mov
push
inc
cmp
jl
imul
cmp
push
jo
cmp
sub
test
stc
mov
push
sbb
in
or
ret
jno
push
pop
add
mov
dec
bndldx
mov
xchg
div
xchg
xorl
cld
add
or
adc
cli
rcrb
lods
fsubrs
hlt
mov
xor
cmpsl
cmp
or
pop
dec
rol
sub
lds
dec
mov
add
adc
in
or
insl
mov
pop
jo
divb
insl
mov
je
push
fadds
adc
inc
sbb
dec
jb
lcall
jae
push
dec
jne
cmc
mov
jbe
fs
xchg
insl
clc
imul
lods
xchg
sub
ficoms
sub
dec
arpl
jo
mov
sahf
repnz
push
xchg
dec
mov
imul
cmpsb
adc
or
dec
call
push
push
pop
cmp
nop
fwait
xor
sbbb
stos
xor
jecxz
cmp
sbb
fcompl
inc
adc
movl
aas
jns
mov
clc
add
cld
or
jmp
push
mov
xchg
cmp
pop
xchg
imulb
lods
imul
lret
add
mov
xchg
jb
sub
bound
mov
inc
adc
fists
push
pop
popa
push
or
sarl
pop
idivl
sbb
lea
enter
xor
rolb
push
inc
jae
xor
inc
mov
insl
shll
sbb
or
mov
shrb
xchg
movsb
jnp
pop
and
push
pop
jae
shrl
cli
jg
dec
add
inc
aaa
sub
push
mov
stos
jns
ds
fcoms
xor
nop
cmp
add
adc
insb
adc
jmp
xor
sahf
jae
in
xchg
andl
pop
sbb
nop
test
loopne
or
push
test
sub
pop
sub
add
sahf
mov
mov
cltd
xchg
push
jg
je
xchg
push
call
and
int3
aam
or
adc
icebp
and
dec
imul
fsubrl
clc
mov
hlt
sub
pop
in
mov
jge
repnz
es
jecxz
mov
xchg
or
jne
xor
test
pop
inc
xor
push
add
fcmovu
cli
ficoms
fs
sub
ljmp
mov
and
aam
repnz
test
dec
add
leave
dec
out
cmp
das
sbb
sbb
push
std
jmp
or
add
pusha
std
pushf
pop
or
lea
rclb
xchg
pop
sbb
adc
fs
cmp
mov
setle
sub
jbe
lds
xchg
pop
aaa
pop
jecxz
enter
add
push
les
push
repz
clc
roll
add
movsl
lcall
mov
adc
clc
xchg
push
mov
xchg
div
fnstcw
icebp
mov
mov
xor
xor
fs
test
jne
lret
sbb
lret
or
out
mov
test
divb
xchg
rcll
jle
or
sub
and
sub
pop
fxam
sub
sbb
bound
pop
sbbb
gs
nop
xchg
test
lahf
push
jmp
xor
imul
pusha
es
xor
dec
gs
sahf
push
cmp
das
scas
aad
inc
insl
mov
cmpl
inc
jne
out
cwtl
out
cmp
add
popf
pop
daa
enter
pushfw
add
mov
mov
push
ret
xchg
adc
call
xchg
sub
xor
dec
cs
dec
cmp
cmpsl
stc
mov
in
scas
push
movsl
mov
push
pop
aaa
insl
ljmp
arpl
aas
and
or
dec
out
xchg
outsl
pop
test
jp
adc
cmp
mov
xor
mov
mov
push
xchg
push
sbb
sub
mov
clc
push
mov
dec
mov
in
sub
inc
cs
or
xchg
xor
in
rcrb
cmp
not
dec
imul
cmp
jbe
push
xchg
cmp
movsl
imul
pop
inc
stos
push
and
sbb
je
repz
jb
ja
ficoms
mov
jp
add
ljmp
or
scas
jmp
cmc
push
ljmp
mov
or
xor
mov
mov
jp
xor
mov
cmp
call
pop
insl
jg
das
mov
shll
std
mov
into
sbb
mov
in
push
dec
pop
add
pop
sti
loope
and
mov
xchg
lahf
fmul
mov
and
lret
xor
in
pop
dec
adc
int3
mov
inc
add
test
bnd
hlt
je
xor
enter
bound
jmp
popa
stos
mov
iret
inc
pop
jns
insl
xor
mov
sub
mov
mov
or
stc
mov
mov
xchg
std
out
lods
aas
dec
sbb
adc
dec
add
pop
leave
dec
sbb
stos
test
pop
sub
hlt
push
mov
leave
cmp
adc
or
xor
push
pop
jge
icebp
and
mov
jmp
cmp
jae
imul
dec
into
push
and
jne
mov
shll
inc
pop
in
add
popa
xchg
outsb
leave
shlb
adc
push
jb
push
iret
in
call
or
sub
add
inc
je
mov
ret
test
inc
aam
jg
rorl
xor
out
lret
pop
pop
adc
jmp
cld
and
xorl
add
jg
outsb
mov
and
jle
je
mov
test
pop
lock
cmpsl
mov
fidivl
pop
aad
lahf
pop
dec
jns
xlat
or
lea
jp
loop
addb
mov
mov
nopl
je
inc
and
repnz
xchg
add
cwtl
sub
lock
mov
pop
pop
sub
mov
dec
dec
outsl
push
inc
aad
aas
add
jns
pop
insl
mov
jbe
add
sub
popa
mov
lea
sub
xchg
out
xchg
and
push
xchg
daa
lahf
test
flds
sbb
arpl
cltd
pop
call
sbb
pop
fldcw
loopne
push
lret
inc
psraw
push
or
aaa
pop
cmp
mov
pop
dec
fisubrl
jge
negl
in
or
pop
adc
xchg
cmp
mov
add
cmpsl
and
sbb
push
xchg
sub
cmp
add
shll
scas
ja
or
lret
jecxz
clc
subl
jae
mov
mov
stos
or
arpl
mov
popf
sbb
cmp
aad
pop
loopne
or
pop
bound
jne
add
in
ret
enter
mov
lret
fsts
cmp
and
and
push
inc
ret
push
gs
iret
mov
jbe
subb
test
inc
addr16
xchg
and
fwait
shlb
test
xorl
sub
mov
xchg
mov
imul
sbb
push
sbb
ss
test
jno
fwait
mov
in
or
int3
ret
enter
lock
pusha
jb
popa
adc
test
or
jb
cmp
call
cmp
mov
jb
lods
iret
imull
btr
mov
cmpb
cmp
mov
or
adc
sbb
jecxz
xor
xchg
pop
enter
stos
push
add
pop
les
adc
push
xlat
mov
dec
sti
push
push
push
daa
insb
sub
mov
mov
fwait
mov
cmp
fs
mov
dec
mov
mov
push
push
add
dec
rclb
rcrb
cmp
mov
mov
je
lock
sub
add
xor
jns
repz
cmp
stos
ret
ret
mov
dec
sub
and
jb
or
lea
movsb
js
mov
pop
add
movsl
sub
jnp
les
jbe
daa
push
cmpsb
daa
or
push
and
movsl
sub
dec
jne
jge
mov
insb
push
push
mov
or
mov
icebp
inc
repnz
cs
mov
push
popa
push
mov
inc
adc
and
jnp
cmc
int
add
lret
jns
aad
jb
rcll
xor
loopne
add
ret
xor
add
jmp
push
dec
imul
orl
mov
pop
cmp
dec
dec
jae
lret
stos
dec
icebp
and
cmp
jnp
js
jb
jle
or
cmp
add
inc
loope
cli
cld
and
dec
jecxz
sub
testl
dec
ss
xor
adc
clc
popa
stc
pushf
ljmp
cs
xchg
js
and
jbe
das
sbb
jbe
jp
sub
mov
xor
push
loop
adc
xchg
and
inc
mov
aas
xor
sbb
sbb
inc
mov
stos
fsubr
add
test
pop
mov
shrb
xchg
cmp
xchg
insl
or
rcr
cmp
pop
adc
dec
inc
test
cmc
int
sub
inc
jg
push
and
push
xchg
lods
inc
inc
popf
test
dec
lcall
cmp
cmp
lahf
lods
jecxz
xor
mov
adc
xchg
bnd
xchg
add
out
or
inc
xchg
repz
fsubl
lds
push
unpckhps
and
jo
mov
nop
or
xchg
jb
mov
or
sub
or
lcall
jns
sub
shl
sti
dec
jno
inc
or
adc
mov
pop
ja
mov
fcmovu
repz
idivb
sub
xchg
and
test
popf
popf
dec
fisttpl
adc
pop
scas
sbb
and
jo
int
popf
cld
sub
xor
out
movsl
sbb
cli
lds
mov
mov
inc
mov
adc
sub
leave
sti
sub
mov
addr16
leave
pop
rcrb
cmp
pop
stos
into
xchg
movsl
and
es
cmp
icebp
pop
mov
xchg
xor
fdivrs
sti
pop
ror
stos
rcrl
je
aad
ficoms
cmp
xor
mov
jmp
inc
pop
daa
dec
dec
dec
stc
iret
int3
and
add
pop
mov
or
sbb
repnz
lret
sbb
mov
iret
in
xchg
pop
sub
fsubl
push
push
xchg
add
dec
dec
js
loop
pop
das
lret
mov
out
jl
movsb
cmp
push
inc
into
pop
mov
lret
and
jno
sbb
repnz
daa
out
test
push
jb
fildll
and
pushf
out
adc
jl
inc
in
out
inc
decb
int
pop
xchg
jp
loope
cld
ret
pop
jb
sbb
sbb
in
int
pop
xchg
scas
xor
leave
std
sub
ror
fwait
inc
vmread
add
in
jb
mov
js
cmpsl
sahf
fimuls
mov
add
fs
sbb
insl
jns
mov
or
mov
fs
xor
cs
loopne
cmp
enter
cmp
test
das
ret
sub
popf
jmp
cmp
pand
cmpsl
dec
adc
test
test
xor
sbb
pop
add
push
xor
fistpll
inc
leave
mov
shlb
mov
daa
or
sbb
dec
nop
cmp
add
xor
push
pop
pop
and
loop
and
add
leave
pop
daa
imul
fs
pop
sub
loopne
pop
xchg
out
inc
hlt
adc
insb
pop
pop
sub
in
fstpt
aad
or
test
daa
out
pusha
push
dec
daa
mov
mov
adc
cmp
and
jnp
adc
test
push
jb
xchg
and
mov
mov
cmpsl
push
mov
in
clc
leave
xchg
mov
vmovhpd
mov
aaa
push
pop
call
es
add
outsl
mov
jle
and
inc
int3
sub
xchg
adc
mov
xlat
add
cmp
xchg
and
out
sbb
sbb
sub
fwait
insl
ret
cmp
loopne
fnstenv
jecxz
push
ret
orl
test
ljmp
fsincos
lods
pop
inc
adc
mov
jae
or
in
inc
mov
xchg
daa
loopne
add
add
aad
add
adc
xlat
out
inc
sub
inc
ljmp
push
xor
xchg
mov
jl
dec
sbbl
push
sbb
and
test
bound
inc
in
sub
imul
xchg
adc
add
gs
push
xlat
into
xor
and
or
cld
rcll
jle
iret
push
popf
sub
imul
cltd
repnz
xchg
adc
fmuls
mov
stos
and
dec
and
lds
cmp
es
arpl
jbe
and
out
ret
inc
sarl
xchg
decb
aad
adc
mov
jg
jg
jne
jb
cmp
pop
xor
nop
push
dec
dec
xor
ljmp
js
test
pop
jle
pop
dec
mov
or
shlb
cmpsb
scas
imul
xor
daa
cwtl
les
gs
pop
cwtl
sub
jge
adc
inc
stc
in
xchg
das
nop
insb
inc
jecxz
mov
call
pop
push
xlat
aaa
test
sarl
pop
stc
or
pop
insl
inc
push
or
xor
xor
push
pushf
add
shrl
mov
jl
loop
or
call
push
mov
push
mov
mov
push
popa
pop
and
cltd
ds
aad
test
sub
adcl
jno
sub
jle
rcll
cld
gs
pop
pop
mov
rcrl
fbstp
jb
in
mov
push
pop
sbb
pop
push
push
cmp
fstl
push
or
cmp
test
inc
rol
pusha
mov
adc
push
xchg
fcompl
cmpsb
add
imul
pop
add
rorl
in
in
pop
in
add
movsl
dec
in
dec
shrb
add
pop
pop
jo
cmp
fs
fidivrs
aam
push
pop
xor
xor
leave
aas
fildll
int
dec
mov
dec
add
push
add
filds
dec
scas
aam
fcoml
cmpb
sarl
mov
dec
fs
mov
mov
sub
ds
push
push
and
popa
lahf
lcall
jecxz
fnstsw
xor
fs
adc
jo
fwait
cmpsl
inc
inc
or
push
rcr
fildl
dec
xchg
daa
mov
or
sub
mov
cmc
inc
daa
xor
push
fdivrl
cmp
push
pusha
jge
sbbb
ljmp
and
leave
sub
fucomp
inc
in
push
dec
test
or
out
andb
ficoms
mov
sub
adc
cli
imul
adc
outsl
repz
mov
mov
icebp
aaa
adc
jno
inc
mov
push
int3
sahf
insl
fs
xchg
cmpsb
xor
sub
push
ret
roll
pop
or
clc
addb
sub
xchg
or
mov
adc
stos
cmpsl
dec
pop
xlat
sub
popf
cmp
dec
mov
or
add
lock
icebp
movsl
test
xchg
and
add
ljmp
pop
mov
or
pop
loope
push
pop
push
sbb
imul
and
sub
fucom
pop
xor
or
iret
or
movsl
xor
xlat
lds
pop
or
icebp
test
cld
or
push
push
sbb
add
bnd
add
push
dec
lcall
dec
adc
xorb
incl
mov
sbb
or
test
lock
icebp
loopne
jne
pop
cli
dec
sbb
mov
jp
xor
push
icebp
mov
popa
or
push
sbb
cmp
add
ja
mov
pop
sbb
adc
sbb
enter
adc
lcall
pushf
inc
adcb
jno
lcall
out
mov
inc
xlat
xchg
inc
call
mov
arpl
push
pop
je
push
aaa
push
sbb
out
shr
push
shl
xchg
and
fnstenv
test
jae
pop
lahf
fwait
dec
pop
test
sub
jno
test
push
adc
cwtl
dec
adc
pop
addr16
xchg
pop
adcb
call
or
fdivs
adc
int
pop
mov
movsl
ficompl
dec
cmpb
subl
xchg
cli
inc
cmpsl
lock
es
rorl
pop
pop
aaa
mov
add
pop
and
pop
add
mov
xchg
int3
push
jb
or
adcb
ljmp
inc
int
sub
inc
ror
xchg
out
out
icebp
adc
dec
or
inc
dec
push
pop
dec
lds
sbb
mov
cmp
xchg
dec
adc
push
ret
push
mov
stos
in
sbb
flds
xor
pop
arpl
mov
push
and
xchg
or
mov
fsubrl
xchg
sbb
push
mov
and
stos
jge
cltd
in
cmp
pop
test
into
jecxz
into
dec
push
repz
push
div
mov
fs
ficomps
cmp
popf
call
lea
popa
cld
mov
shll
inc
pop
and
dec
xchg
psubd
bound
xor
sbb
fadds
daa
and
fidivrs
xchg
sub
pop
stc
orl
cmp
pop
sub
sbb
inc
mov
sub
xor
lcall
jg
mov
js
and
sti
push
popa
push
adc
xorl
sbb
je
dec
adc
je
mov
popf
lahf
xor
imul
jnp
jae
adc
out
dec
push
cld
imul
add
imul
xor
leave
pop
stos
sbb
push
rcrl
add
push
adc
mov
enter
lahf
lock
pop
xchg
stos
je
sub
mov
mov
hlt
fwait
add
sub
dec
push
ja
frstor
out
ds
sbb
lahf
sbb
pop
popl
loop
aas
lret
sub
mov
push
push
gs
sbb
or
xchg
addl
scas
bswap
sub
test
fldl
jne
xchg
movsb
inc
mov
or
out
jno
cmpb
mov
and
xchg
mov
mov
adc
fimuls
ljmp
and
ds
mov
pop
push
add
dec
mov
sub
jg
add
aam
sub
pop
push
enter
scas
test
pop
or
cli
inc
adc
dec
adcb
fimull
fld
dec
push
scas
pop
std
jae
sbb
loope
cmp
mov
push
push
hlt
adc
lcall
xchg
movsl
push
ljmp
add
aas
aaa
movsb
xor
inc
mov
sub
std
stc
push
push
or
pop
sbb
dec
repz
and
add
push
hlt
call
jne
jne
ret
rolb
fbld
bound
adc
xchg
pusha
je
scas
rorl
je
and
xchg
das
addr16
xchg
push
out
sti
das
dec
pop
inc
push
inc
push
inc
jge
jl
mov
dec
test
inc
pop
loopne
inc
dec
pop
insl
sar
fs
push
mov
xchg
pop
add
mov
xchg
mov
scas
jmp
cmpsb
sub
inc
dec
xorb
sbb
mov
cmp
dec
lret
aas
cld
ja
dec
cmp
pop
out
call
and
xor
popa
aaa
popf
iret
and
mov
mov
call
mov
pop
and
push
lcall
adc
jno
sub
xchg
xchg
shl
ja
mov
add
scas
scas
mov
jmp
les
popa
pop
imul
sub
push
adcl
inc
ja
andl
std
adc
sbb
fbstp
jge
cwtl
pop
xor
sbb
sbb
int
pop
cmp
cld
popa
ret
sbb
add
outsb
pop
xchg
xor
sub
push
adc
add
add
cltd
sub
jns
loop
mov
dec
movsl
sub
fwait
mov
pop
inc
mov
loope
push
xor
mov
mov
loope
scas
jecxz
lds
hlt
xor
imul
jnp
data16
pop
clc
xor
cmp
and
mov
ljmp
xchg
out
ret
ljmp
dec
or
adc
cmp
popa
sarb
dec
mov
outsb
or
mov
in
movl
stc
test
pop
in
mov
mov
jne
jns
add
out
idivb
jb
mov
mov
stos
int
inc
popf
clc
and
mov
adc
out
and
testb
les
mov
sarl
mov
jecxz
push
lcall
clc
out
mov
sbb
out
divb
sbb
sub
jp
lret
push
cmp
pop
xchg
dec
pop
out
or
fs
xor
lret
mov
popf
les
mov
in
mov
pop
fcompl
push
and
jl
cli
xor
jno
test
sub
inc
push
add
jae
jno
movsl
pop
xor
sbb
cmp
dec
jmp
inc
dec
adcl
dec
pop
imul
jnp
inc
sbb
jle
nop
or
jno
add
push
mov
or
mov
dec
mov
xchg
xor
adc
jno
xor
adc
rorl
gs
sub
aas
fs
pop
idiv
sub
inc
scas
adc
clc
inc
mov
jmp
cmp
jo
ds
adc
test
pushf
ljmp
pop
lods
stos
fcompl
sbb
cltd
push
clc
mov
mov
and
mov
aaa
push
imul
add
xlat
jle
addr16
pusha
cmp
or
push
test
pop
lods
in
and
mov
and
push
jns
mov
in
mov
pushf
inc
inc
out
dec
mov
testl
push
sahf
sub
cmp
sbb
push
mov
jne
inc
lahf
dec
pop
mov
sbb
iret
or
imul
cmp
cmp
rorb
pop
fildl
shrb
add
enter
fcomps
jle
pop
fdivrs
sbb
leave
mov
push
testl
push
push
jecxz
mov
out
mov
in
add
pop
icebp
and
push
sub
cmp
mov
outsl
adc
fnstenv
sbb
leave
and
les
lcall
mov
dec
xchg
aaa
inc
subb
jl
enter
sbb
dec
push
popl
sub
in
mov
add
cmp
dec
add
insb
or
jmp
gs
inc
jl
scas
jnp
dec
enter
mov
test
and
cmp
mov
cmpsb
add
pop
jae
aaa
xchg
sub
fs
shlb
fwait
nop
rcrb
addr16
cwtl
rorb
popf
pop
xchg
jmp
das
mov
rolb
addr16
pusha
xchg
mov
cmpb
sti
xchg
clc
or
rol
ret
ret
fldpi
andb
dec
pop
xchg
cmp
or
test
aad
insl
jnp
push
jo
lcall
aaa
int
into
or
stos
push
imul
jge
dec
push
hlt
push
sbb
subl
jmp
call
push
push
cmp
stos
mov
and
call
mov
stos
cmp
cmp
loopne
rclb
mov
sub
psrad
mov
xor
cli
cmp
or
inc
lret
call
jb
cmp
cwtl
cmpl
add
sbb
add
popa
push
sub
or
lahf
rcrb
test
and
fists
cmp
fistps
cmpsb
push
jmp
stc
scas
rclb
insb
pop
push
cmp
push
ret
jns
add
or
xchg
mov
aam
lea
dec
pop
add
shrl
push
cmp
shr
movsb
in
mov
hlt
inc
movsb
inc
test
adc
ss
push
fucomip
repnz
lahf
cli
mov
dec
xlat
fmull
sbbb
cmp
ds
sbb
icebp
stc
std
adc
mov
nop
stc
lret
jo
or
mov
inc
mov
hlt
aam
push
mov
or
xchg
cli
xchg
pop
bound
pusha
aam
enter
xor
sub
lods
add
fstl
ds
sub
inc
mov
icebp
xor
mov
jl
mov
dec
add
call
imul
cs
nop
aad
dec
movsl
mov
dec
mov
push
dec
dec
mov
pop
enter
dec
xchg
mov
jmp
jge
add
rolb
bound
fistpll
jl
inc
movsl
mov
sub
push
mov
inc
sub
mov
fwait
out
adc
jge
pop
push
loop
push
sarb
cmp
je
adc
jne
jns
enter
adc
cmp
dec
stos
pop
xchg
mov
cld
inc
and
pop
loope
xor
ret
hlt
push
adc
fdivrp
mov
jl
loop
push
cmp
ficoml
xchg
inc
scas
push
js
popf
add
pop
adc
bound
mov
sbb
xchg
lods
inc
movsb
std
push
push
jecxz
xchg
jbe
cmpb
mov
and
cwtl
lds
fdivrs
repz
rcrl
mov
jge
add
push
test
inc
sti
stos
cs
jle
xlat
jns
jb
lea
adc
es
jmp
repz
int
into
nop
in
xchg
mov
dec
loope
lds
pop
outsl
bound
cld
pusha
clc
fnstcw
repnz
xchg
mov
inc
jo
xchg
cmpsl
push
cwtl
addl
nopl
mov
out
sub
mov
push
out
jp
pop
test
push
xor
mov
ficoms
push
mov
mov
xor
sbb
pop
dec
mov
je
xor
pop
and
aaa
or
clc
mov
inc
or
or
mov
shll
dec
inc
jb
test
out
into
push
or
mov
stos
rcr
lds
aam
push
or
in
out
mov
cmp
jmp
movsb
xchg
loop
cmpsb
or
and
xor
xchg
jmp
cmp
mov
outsb
ljmp
les
and
push
ljmp
loope
jecxz
inc
andl
pop
mov
nop
dec
inc
enter
scas
orl
xchg
enter
or
cmp
xchg
lock
test
cmc
leave
ret
ja
insb
aas
mov
pushf
scas
loop
loope
push
lretw
lahf
arpl
add
mov
xor
add
lret
loopne
dec
and
imul
inc
pop
cmc
mov
pop
aad
xchg
lds
pop
cmp
mov
xor
adc
add
mov
loop
insl
mov
add
mov
cmp
mov
add
out
adc
xchg
cmp
loop
jg
add
cmp
mov
add
pop
inc
cmpl
pop
add
movsl
xor
test
loope
or
gs
int3
mov
cmp
subb
push
jnp
lds
nop
xchg
test
std
push
mov
mov
nopl
jl
mov
push
xlat
jnp
xlat
addr16
and
test
scas
dec
mov
and
lods
mov
or
fwait
out
call
add
das
mov
mov
stos
sti
mov
dec
aaa
xchg
cmpsl
or
push
mov
lret
cltd
add
push
jae
jb
cmc
sahf
test
cli
adc
in
push
cmp
fadds
dec
mov
stos
orb
mov
leave
mov
mov
and
out
pop
gs
push
stos
loope
xchg
mov
shlb
sub
js
lods
lods
addr16
adc
dec
and
dec
in
aam
push
es
mov
stos
mov
out
xlat
jbe
out
dec
les
int3
cmp
mov
lds
dec
scas
sbb
lea
cwtl
add
lods
out
movsb
adc
xchg
and
dec
sub
dec
int
outsl
dec
cmp
addr16
into
lods
xchg
sub
int
cld
ret
mov
outsb
xlat
push
cmp
inc
ret
add
je
in
jp
pop
call
ljmp
jo
xchg
out
insb
add
das
imulb
inc
movl
scas
jecxz
fxch
dec
pop
scas
neg
push
or
mov
inc
loopne
das
adc
jg
loope
testb
imul
out
inc
mov
mov
mov
adc
xlat
and
dec
xchg
cmp
sub
inc
sub
dec
adc
bnd
or
dec
xchg
popf
or
pop
mov
cmpsl
mov
xor
sub
sub
jmp
fmull
ret
test
push
pop
or
and
push
inc
mov
sub
jno
push
and
and
xchg
fiaddl
inc
cmp
or
loop
imul
sub
nop
xchg
call
stos
inc
imul
lock
out
lcall
test
add
fwait
or
stc
int3
jno
xor
add
xor
ret
mov
xchg
inc
test
cmp
push
sbb
repnz
flds
imul
xor
adc
push
loop
cmpsb
mov
addr16
repz
mov
mov
jo
inc
ret
cmp
ret
mov
dec
mov
in
inc
dec
sbb
adc
mov
jns
cmp
in
mov
push
dec
adc
dec
push
xlat
push
or
out
call
js
cwtl
jg
rorb
jbe
push
jge
lcall
out
xor
sub
daa
in
add
mov
outsl
cmpb
adc
fstpl
sbb
fldenv
jmp
sti
push
fstpl
jo
jmp
xchg
stc
xchg
cmp
push
popf
insl
or
pushf
or
sbb
xor
pop
ds
jge
movsb
sub
addr16
fistps
inc
fwait
movsl
imul
fnsave
mov
cmp
cmp
push
cmpsb
push
push
mov
push
int
ds
imul
stos
add
mov
and
mov
dec
stc
cmp
outsl
lret
fdivrs
push
add
lahf
inc
das
xchg
or
pop
mov
push
xor
out
pop
sub
aas
ret
popf
or
shll
mov
lret
jbe
dec
xchg
push
push
mov
gs
js
movsl
pop
inc
lcall
pop
or
aaa
je
pop
das
or
scas
rcll
daa
out
mov
sub
es
mov
outsl
xor
mov
fstpt
jl
insb
mov
ficompl
push
pop
pop
pop
xchg
pop
xlat
iret
xlat
push
out
adc
mov
loop
in
jbe
mov
cmp
call
jge
lock
pop
fprem1
xor
or
jae
sub
scas
dec
jne
pop
nop
les
loopne
pop
push
pusha
inc
dec
sti
push
inc
sahf
xor
add
xchg
jmp
js
xchg
repz
mov
jp
jne
jge
popa
ret
jne
lds
mov
cmp
mov
mov
jecxz
pop
lds
jmp
hlt
jo
lea
mov
xlat
jo
stos
mov
cld
nop
jl
mov
fwait
arpl
or
pusha
cmpsb
push
cmp
mov
jecxz
mov
xchg
decl
popl
jae
ljmp
push
js
in
adc
mov
cli
popa
loop
mov
or
dec
push
leave
int
inc
xor
mov
mov
aas
dec
sbb
lods
mov
test
movl
ss
es
std
loopne
xchg
fcoms
xor
mov
lret
sub
and
leave
sub
mov
jmp
out
mov
push
rcrb
mov
push
xchg
mov
or
pop
pop
dec
xchg
adc
movsl
and
shl
xor
in
cmp
les
inc
mov
mov
rorl
sahf
mov
lods
mov
std
shlb
lods
pop
mov
stos
cwtl
lret
add
sahf
loope
cmp
out
pop
xchg
bound
scas
xchg
popw
xchg
sub
push
lcall
shrl
push
cmpsb
stc
mov
adc
iret
or
out
mov
sbb
sgdtl
in
inc
ds
outsb
imul
cmp
sbb
sub
orb
xchg
inc
testl
pop
clc
outsl
popf
sub
loopne
cmp
xor
adc
ret
out
or
mov
dec
mov
push
adc
leave
outsl
xor
jnp
int3
das
jmp
loop
scas
cs
pop
pop
dec
sub
mov
mov
les
and
mov
iret
or
int3
xchg
push
fcoml
push
lods
stos
aam
movsb
add
sub
fidivl
iret
daa
sbb
pushw
pushf
imulb
lahf
sbb
push
xchg
pusha
xchg
test
bound
inc
add
cmpl
mov
test
push
stos
pop
aas
icebp
lods
sarb
aad
push
or
out
adc
stc
mov
dec
pop
dec
or
cli
addr16
pop
pop
mov
push
adc
cmp
fwait
std
jle
fdivl
out
test
mov
mov
test
cmp
and
rorb
inc
cmc
push
test
mov
and
mov
jbe
xor
cmp
or
sbb
scas
cmc
and
push
pop
pop
push
and
inc
fsubl
fistps
or
pushf
cmpsb
jg
lock
xor
push
insl
out
lahf
icebp
adc
mov
xor
cmovle
push
outsl
movlps
outsl
mov
scas
mov
cmp
outsb
adc
aam
add
adc
das
in
movsb
inc
mov
dec
adc
cmp
dec
adc
roll
and
sarb
jne
jge
pop
popa
mov
inc
pop
in
imulb
daa
in
add
ljmp
insl
add
frstor
xor
pop
add
xor
rcll
jp
xor
cltd
mov
outsl
bound
or
inc
sbb
cmpb
outsl
or
call
das
cmpsb
rcrl
cwtl
sub
movsl
icebp
or
test
cltd
push
jae
fs
aam
mov
mov
push
test
xor
sbb
add
push
mov
sub
mov
test
or
cmpsb
loop
lods
push
mov
stos
push
leave
jmp
mov
cmpsl
int
out
sbb
jg
sbb
lcall
inc
jae
pop
movsl
cli
out
push
loope
out
adc
loope
push
movl
inc
push
je
jne
inc
jnp
xor
popf
adc
pusha
add
push
pop
push
jp
jecxz
push
sub
aas
loopne
adc
jmp
xchg
int3
enter
leave
mov
mov
les
inc
jns
scas
popa
or
xlat
addr16
testb
js
add
add
cmpsb
pop
lret
mov
push
out
jae
ljmp
xor
loopne
push
ja
aaa
enter
arpl
ffree
inc
push
lcall
dec
fwait
sbb
ljmp
xor
fnsave
cmpsb
mov
roll
jp
lock
fwait
gs
xchg
sub
mov
jb
push
mov
push
mov
mov
push
mov
mov
aam
sub
xchg
jp
arpl
aaa
dec
pop
mov
inc
sbb
lds
pop
pop
cmp
negb
and
ss
imul
fsubr
sarl
jg
lret
jg
adc
push
xorl
mov
ret
adc
fs
add
add
rorl
mov
in
test
sbb
cmp
mov
mov
and
adc
loop
or
sub
enter
dec
jmp
and
sub
add
add
mov
mov
xchg
xorb
daa
loopne
cmovl
icebp
dec
jge
jl
jae
test
mov
xor
xchg
add
push
mov
jle
out
les
xchg
outsb
jne
and
rclw
inc
sub
xlat
push
sbb
or
push
xchg
aaa
and
xor
add
and
fadds
mov
js
push
sar
sbb
mov
sbb
mov
push
nop
insb
sbb
ret
cmp
test
ret
setns
xorl
popa
in
adc
jg
or
dec
jl
loop
add
lods
andl
jbe
idiv
or
xchg
push
jp
ljmp
cmp
pushf
pop
xchg
or
sub
pop
mov
push
lods
cmp
jns
xlat
sbb
pop
js
adc
imul
push
xor
dec
negl
ret
cmp
fmuls
pop
xlat
call
hlt
ret
mov
je
push
push
mov
sub
xchg
or
jae
dec
xor
xchg
or
xchg
add
test
in
sbb
rorl
data16
inc
jl
stc
mov
mov
pop
xchg
mov
das
in
aaa
or
rcr
fistpl
cmpl
lock
incl
cmp
push
out
loopne
jo
lcall
xchg
sub
lret
jmp
hlt
scas
adc
or
mov
inc
fcmovbe
enter
xchg
iret
icebp
loopne
cmpsb
js
movsl
or
mov
andl
xchg
push
xor
je
push
push
mov
jmp
cmp
stos
cmp
xlat
add
cmpl
dec
push
mulb
mov
sarl
jp
add
pop
push
xchg
int
ss
mov
xor
adc
jbe
pop
shll
xor
or
jo
jo
push
add
jecxz,pn
or
jl
xchg
and
inc
pop
adc
test
sbb
xor
sti
mov
mov
add
in
neg
insb
push
push
adc
popa
push
leave
sub
push
repnz
jb
jmp
jb
pusha
jecxz
push
xor
xchg
cmp
cmp
xor
cmp
adc
mov
add
xor
outsl
cltd
enter
incl
or
rol
push
outsb
or
fnsave
dec
or
into
adc
sarb
sahf
xor
sub
shrl
pop
lret
imul
push
xchg
out
repz
mov
jne
pusha
push
int3
sbb
gs
add
in
dec
stos
clc
mov
fcoml
in
in
or
mov
add
std
and
mov
cmc
mov
mov
cld
ret
mov
loopne
xchg
inc
inc
movsb
mov
mov
cwtl
adcl
or
jge
ds
xor
ja
add
lahf
and
lret
jmp
shr
cmc
sbb
mov
sub
popa
jno
in
xor
mov
lret
mov
dec
cmpl
add
jne
imul
lods
mov
sub
push
out
hlt
jnp
fcom
shll
lea
pop
iret
sub
test
cli
mov
push
cwtl
arpl
movsl
and
shll
push
or
into
jp
mov
xor
add
leave
lcall
fists
imul
inc
pop
insb
xorl
pop
jecxz
or
pop
ret
mov
sub
stos
add
stos
xchg
shll
call
scas
mov
push
xchg
mov
pop
push
dec
sbb
and
add
stos
or
jne
in
sub
call
mov
jg
notl
jo
jge
mov
imul
cmp
loope
pop
je
pop
fwait
std
fwait
dec
xchg
int3
ja
sub
cmp
popf
dec
ja
pop
jecxz
sbb
sub
jl
cwtl
mov
fdivs
lret
push
inc
loope
loope
inc
jno
pop
adc
pop
sahf
ret
sarb
fisttpll
xchg
add
repnz
mov
call
jne
aaa
jp
decl
inc
lahf
outsb
ds
or
lret
inc
scas
mov
pop
and
cmpsb
mov
test
loope
xor
xchg
xchg
xlat
cs
jl
fildll
sub
mov
pinsrw
in
inc
ret
mov
leave
and
push
inc
pop
repz
jne
out
sbb
push
mov
pop
hlt
add
stc
iret
dec
add
cwtl
jmp
pop
mov
iret
cmp
jecxz
nop
gs
ja
sub
pop
pop
dec
ret
mov
dec
arpl
add
and
flds
std
stos
push
jnp
cmpsl
fbstp
dec
mov
cmp
and
cmp
push
pop
mov
sbb
ret
sub
sarl
cmpsb
mov
dec
lcall
enter
fbld
cmp
adc
push
jg
pop
or
inc
iret
add
imul
dec
sub
and
pop
pop
mov
cmp
outsl
dec
inc
pop
test
sti
xchg
outsl
test
cli
inc
cmpsl
xchg
cmp
lds
sbb
pop
sbbb
sub
arpl
or
cs
rcll
pop
push
sub
daa
jno
bound
xorl
cmp
lods
ret
push
xchg
ljmp
or
shlb
cmp
je
icebp
push
xor
repz
lcall
xor
pop
pop
mov
dec
popa
and
jmp
rcr
aam
rolb
cmpsb
fbstp
mov
popf
lret
daa
pop
jb
daa
or
inc
aas
mov
daa
fcomps
inc
xchg
aam
adc
push
pusha
xchg
push
mov
mov
pop
adc
out
add
pop
sub
or
push
leave
pushf
repnz
jg
sbb
mov
inc
inc
or
jl
xor
pop
jne
pop
adc
cmpsl
lret
add
xchg
jmp
lret
pop
out
jge
push
fimull
adc
inc
je
repz
out
push
popf
fcomps
sarb
or
jg
test
fstps
sbb
pop
and
mov
rcrl
popf
into
push
jmp
inc
cld
das
dec
mov
jae
adc
aaa
or
jnp
and
adc
xchg
or
mov
sbb
xchg
stc
sarb
adc
sub
or
mov
dec
inc
add
adc
lods
mov
xchg
daa
xchg
into
sub
pop
mov
in
mov
call
sbb
aam
test
int3
sub
cltd
cltd
lea
sbb
nop
iret
movsb
jae
lret
mov
loope
xchg
lods
inc
mov
inc
arpl
lds
sub
xchg
pop
push
push
mov
pop
push
lea
ljmp
repz
cmp
add
cmp
call
ret
jae
arpl
loope
cli
enter
ds
fldenv
mov
rorl
dec
mov
cwtl
push
cmpsl
cs
orb
cmp
pop
mov
sbb
push
nop
stos
inc
js
jge
add
in
and
stos
or
jecxz
mov
aad
mov
dec
mov
sub
rol
sbb
pop
clc
das
or
cmp
testb
das
addr16
xchg
inc
mov
add
rorb
es
arpl
push
orb
push
scas
idiv
pop
mov
cmp
out
cmp
xlat
pop
push
xor
sub
add
jmp
aas
fsubrl
pop
repz
cli
inc
aas
pop
add
mov
mov
mov
cmpl
sti
icebp
les
cwtl
mov
in
das
pop
mov
or
add
sub
mov
inc
mov
dec
xchg
repnz
fnsave
loope
gs
cmp
aam
sbb
fs
loope
inc
mov
ret
repz
arpl
out
lret
jb
pop
shll
in
shrb
in
fsubp
sbb
pop
inc
adc
xchg
stos
test
imul
pop
pop
sub
push
aaa
imul
out
adc
into
xchg
mov
arpl
dec
push
push
out
or
or
addl
inc
mov
popa
and
dec
and
daa
ljmp
fidivs
adc
bound
sarw
and
mov
iret
iret
add
mov
jecxz
lock
xor
xchg
test
stos
pusha
cld
jl
cmp
clc
sbb
jae
pop
aad
outsl
outsl
aaa
mov
cli
xor
mov
pop
sbb
cmp
sbb
dec
pop
jno
loope
dec
loop
cmp
lret
test
inc
adc
fdivr
mov
inc
pop
xor
push
jae
repz
or
xor
or
add
push
jno
mov
pop
mov
jae
sub
ret
fwait
mov
cmp
fnstenv
sub
cmp
jae
pop
and
pop
push
addr16
mov
xchg
out
arpl
and
cmc
cmp
jne
pop
sub
imul
lea
xor
push
mov
dec
lods
sbb
inc
scas
add
andb
dec
pop
popf
xchg
sbb
sbb
push
std
fsubl
lahf
pop
sub
push
cmp
push
inc
das
lock
cmp
xor
aam
jmp
push
fisttpll
push
call
or
mov
notb
mov
mov
cmpsb
mov
sbbb
imul
jmp
je
cmpb
xchg
mov
out
scas
xchg
fwait
sbb
or
pop
fidivrl
gs
roll
imul
in
sbb
sub
roll
sahf
dec
std
loop
push
dec
jo
fdivrp
into
ficompl
cwtl
sub
mov
stc
mov
jmp
jne
bound
xchg
out
lods
xor
in
mov
js
cmp
push
lods
mov
sub
outsb
shll
sub
leave
cmp
std
inc
or
and
adc
sub
roll
jne
jmp
pop
pop
sbb
push
inc
adc
sahf
cmp
mov
pop
daa
add
mov
sbb
cmpsb
mov
daa
nop
xchg
ret
mov
loopne
or
fs
pushf
dec
pop
bound
pop
out
or
dec
lret
jb
divl
lea
jge
lock
into
rcl
push
insl
or
fsts
nop
loop
je
ljmp
lods
sbb
lret
mov
mov
subb
lcall
pop
repz
hlt
mov
dec
xor
movsl
xor
jle
inc
stc
pushf
popa
sub
dec
xor
pusha
das
pusha
push
mov
jae
cmp
xor
xor
lds
xor
lods
roll
push
les
lret
sarl
dec
inc
rorb
jl
imul
sbb
or
dec
jl
inc
mov
inc
adc
out
push
dec
dec
std
or
test
or
repnz
nop
push
popf
insb
hlt
push
js
dec
je
jns
cmc
sbb
mov
sbb
call
cmp
pop
call
les
jnp
add
mov
ja
add
jno
push
mul
shll
fimuls
jo
sub
sub
dec
andnps
adc
aam
xchg
scas
or
dec
sbb
inc
daa
popa
inc
lea
sbb
mov
pushl
imulb
mov
out
pusha
pop
inc
loope
fldt
mov
mov
xchg
inc
sbb
mov
xchg
jbe
push
and
inc
pop
in
cmp
adc
pop
cmp
jmp
cmp
dec
aad
adc
push
adc
fprem
mov
mov
pop
push
nop
ss
adcl
scas
aam
lcall
cmp
mov
xor
jne
adc
pop
push
xchg
sbb
sub
and
mov
cs
in
add
mov
stc
rolb
sti
lock
or
repnz
fildl
jb
sbb
dec
call
cmp
push
fisttpll
mov
mov
or
xor
loopne
adc
mov
xchg
out
mov
movsb
andl
mov
inc
mov
daa
test
cmp
jmp
scas
int
inc
mul
ja
jmp
add
popa
xchg
adc
or
insl
pop
aas
mov
push
shrl
mov
sub
or
setp
xchg
pop
and
dec
clc
add
sarb
mov
push
push
add
sbb
push
std
xchg
enter
test
or
ret
imul
cltd
dec
inc
push
jae
pop
test
add
mov
sub
div
daa
push
repz
mov
jae
dec
dec
push
lret
jg
inc
xchg
ret
inc
enter
popa
sbb
shrl
je
xchg
shll
rcll
sbb
jmp
cmp
into
mov
std
lcall
mov
fisubrs
dec
inc
jns
and
repnz
inc
sbb
push
cmc
push
mov
inc
pop
adc
xchg
mov
out
cld
xor
or
xor
jnp
sbb
xchg
mov
mov
mov
lret
mov
fistps
ja
inc
push
pop
icebp
mov
int3
rcl
push
or
mov
out
inc
fisubrl
rol
sub
xchg
pop
mov
arpl
jge
mov
cli
xchg
cmp
fsubrs
into
jmp
je
dec
popf
ret
mov
adc
cmp
sub
inc
out
push
or
xchg
dec
or
push
outsl
lcall
pop
jg
mov
sbb
jg
xlat
and
jmp
es
xor
in
mov
cld
das
mov
hlt
call
sub
pop
cmp
xor
neg
add
inc
adc
dec
shll
or
cs
cmp
shrb
push
xchg
in
movsl
addr16
pop
sbb
ss
jae
sbb
inc
test
xchg
fcmovb
mov
push
das
pop
push
or
outsl
sbb
adc
pop
cmp
clc
xchg
aas
dec
cmp
stc
jmp
call
or
enter
mov
or
aaa
adc
dec
enter
into
scas
in
sbb
cltd
sbb
mov
and
fwait
ret
in
scas
push
lahf
cli
adc
fwait
push
divl
cld
pop
inc
shrb
jle
pop
arpl
adc
loope
xchg
add
cld
popf
xchg
movl
ret
iret
pop
jae
and
in
lods
notb
pop
jp
aaa
int3
push
movsl
addr16
mov
push
in
insb
div
mov
dec
or
xor
out
dec
jns
xchg
cmp
jg
push
loope
adc
faddl
mov
cmp
movsb
into
fwait
nop
sub
mov
andb
xchg
rorb
xorl
cmp
stc
fcmovu
enter
xchg
aad
aam
xchg
sbb
je
mov
cmp
pushf
sub
and
inc
sub
in
das
mov
fcmovb
dec
inc
rolb
dec
fildl
mov
movb
dec
ret
cmp
bound
mov
rcl
push
push
outsl
mov
popf
in
out
xchg
stos
in
sbb
lds
sub
cs
sub
jae
add
enter
inc
pop
sti
or
pop
pop
push
sbb
movsb
push
jge
inc
xchg
xchg
mov
in
inc
cs
dec
mov
call
sub
enter
out
xor
ja
push
bound
mov
cmp
xchg
xor
enter
in
bound
andb
aam
aas
or
adc
and
rorb
imulb
loop
add
inc
xchg
mov
int
out
jp
shlb
les
or
xchg
in
lcall
sub
pop
adc
dec
cwtl
add
sarb
jno
sub
push
ret
mov
jb
mov
addr16
push
data16
aaa
popf
in
mov
test
movsl
fisubs
js
inc
sarl
fwait
dec
mov
push
call
add
enter
sub
or
xchg
js
or
movl
add
or
add
and
mov
inc
push
xor
xor
xor
cmp
inc
inc
pop
jg
push
or
enter
dec
add
push
and
call
cli
sbb
les
sahf
into
mov
lea
ljmp
xchg
pop
push
xchg
pop
cmpsl
or
dec
dec
cmp
les
mov
jg
jbe
or
jmp
in
out
cmp
imul
pushf
call
jnp
cmc
pop
xchg
add
aam
mov
push
sbb
jb
jno
movsl
or
fwait
jbe
test
mov
mov
xchg
cmc
inc
test
filds
outsb
mov
inc
xchg
push
adc
icebp
jge
notl
xchg
adc
jnp
and
sub
ret
or
jnp
or
pop
data16
mov
mov
jae
orl
pop
sbb
cmpl
imul
xor
aad
or
or
mov
and
outsb
mov
cmpsb
rcll
push
xor
popa
mov
xchg
outsb
adc
sbb
fcoml
jae
sbb
arpl
ljmp
cmc
mov
mov
pop
aas
pop
sub
call
mov
js
xor
outsl
dec
subb
push
adc
scas
sahf
add
xchg
sub
das
add
nop
push
gs
ja
sbb
inc
popa
push
bound
jo
or
push
push
adc
push
add
inc
into
sbb
mov
add
add
mov
popf
sbb
xchg
aas
mov
add
xchg
cli
cmpl
mov
push
sbb
addr16
xor
lcall
shlb
xorb
inc
dec
mov
mov
dec
lcall
push
mov
jns
test
jl
in
jns
ja
mov
gs
xchg
js
pop
aam
dec
fistpll
cmp
jmp
cld
mov
mov
mov
inc
jns
jl
or
rcrl
outsb
adc
cmc
inc
dec
jp
or
add
mov
and
inc
adc
sbb
out
jbe
aam
in
aam
xchg
imul
fdivrl
jg
addr16
mov
inc
aaa
pop
mov
test
lods
lea
shll
and
or
jns,pt
movl
push
or
mov
stc
fwait
inc
fists
fwait
stc
inc
stos
popf
arpl
test
jg
xchg
mov
ror
push
pusha
or
mov
inc
dec
shll
sti
sub
imul
cmp
lret
roll
xor
xchg
dec
rorb
paddd
or
dec
xor
loopne,pt
jno
pop
mov
mov
test
sub
fnstsw
stc
shrb
xchg
rcr
shll
les
test
lret
bound
cmp
addl
cltd
ret
daa
push
push
out
fcomps
mov
jo,pt
les
cmp
or
pop
test
cmpsl
fnsave
scas
out
idivb
inc
push
subl
sub
ficoms
fistpll
lret
xor
mov
scas
sbb
inc
dec
insl
pop
lds
dec
pop
sub
add
pop
icebp
lods
call
dec
fnsave
jg
pop
jg
mov
lea
mov
add
das
push
sub
push
jmp
imulb
mov
js
fs
xor
pusha
add
lods
cmp
movsl
imul
sbb
push
loope
dec
loopne
and
cltd
xchg
inc
cli
testb
ds
daa
and
leave
jno
and
sub
dec
cmp
dec
pop
sbb
sbb
dec
popf
insb
dec
add
adc
das
ja
andl
or
mov
pop
sub
jecxz
imul
and
cmp
dec
jae
jns
fsubrl
adc
inc
cmp
push
dec
pop
pop
jo
push
fs
sub
icebp
mov
sub
movsb
or
data16
mov
and
stos
or
jg
or
and
adc
and
cmpsb
js
or
mov
outsb
inc
add
popa
adc
int
add
lock
inc
stos
sbb
sbb
pop
adc
and
dec
add
subl
dec
outsl
popa
adc
insb
push
popf
lahf
add
fnstsw
test
or
add
xchg
pop
mov
xchg
xchg
jmp
pop
pop
ret
or
sbb
jae
pop
out
mov
pop
cmpsl
iret
ror
aam
cmp
and
daa
jle
outsl
and
jae
jg
jo
shr
and
sub
lret
pop
call
sub
cmp
mov
mov
jmp
cmpsb
dec
push
mov
or
add
jge
pop
cmp
or
rclb
mov
ja
add
sbbb
push
xor
sub
cs
shld
outsl
mov
nop
repz
push
leave
cld
ss
stc
add
test
iret
or
push
mov
xorl
rolb
push
das
adc
pop
mov
or
les
sub
lods
or
inc
jb
xchg
adc
ds
jmp
aaa
jne
pop
dec
jbe
es
xor
sbb
or
or
shlb
or
mov
or
loope
cmp
dec
cmp
out
test
decb
cli
jle
cmc
loop
adc
xor
negl
push
push
adc
jle
sbb
orl
sub
and
lds
push
loope
test
xchg
add
dec
add
scas
sub
std
jge
fs
mov
dec
ja,pt
rorl
mov
push
test
mov
and
les
lods
xchg
cmp
xor
jl
cwtl
fmuls
push
adc
aad
sub
imul
dec
lret
loope
sub
test
cltd
inc
or
push
int3
xchg
xor
push
jo
mov
dec
and
fsubrp
dec
push
das
push
loopne
mov
sahf
aaa
jl
repnz
sub
add
mov
andb
xor
mov
ds
inc
dec
es
mov
lods
sub
sub
mov
cmpl
pop
popf
and
push
inc
insb
cmp
aas
insb
or
sub
push
push
xor
sbb
int3
aaa
sbb
jecxz
push
stc
pop
rclb
xchg
or
jl
mov
mov
inc
lcall
pusha
jle
sub
or
fcompl
fsubrs
adc
in
push
sub
jg
repz
xlat
mov
adc
jnp
mov
and
jae
xchg
cmpsb
pop
out
lea
xor
fdivrl
test
jecxz
pop
hlt
bound
jno
jb
ja
iret
idivb
out
movl
popa
xor
daa
std
cwtl
cwtl
xchg
adc
repz
enter
aad
sbb
xchg
aad
sahf
out
fdivrp
xor
lds
mov
jne
shlb
jge
adc
adc
sarl
mov
out
inc
mov
jle
add
ljmp
push
xchg
loopne
pop
add
pop
push
add
jbe
jnp
sbb
sbb
push
xorl
dec
shr
push
loope
dec
popf
or
mov
out
enter
dec
nop
cld
leave
popf
pop
push
rcr
je
mov
mov
xor
mov
std
loopne
xlat
jmp
sub
jbe
push
movsl
sbb
addr16
ds
nop
and
dec
jp
fwait
sbb
ftst
push
orl
loop
xor
and
je
mov
mov
leave
pop
and
mov
bound
sbb
cmp
jge
mov
push
cmp
insl
lret
test
adcl
jl
jg
mov
into
stc
add
jbe
cmp
fcomp
rorb
jmp
inc
sub
loope
adc
mov
lods
xor
jp
sbb
mov
sub
nop
dec
sbb
pop
leave
xchg
sarb
sarl
jle
or
mov
inc
popf
cltd
sbb
mov
xor
scas
mov
out
push
add
rolb
popf
sub
sub
testb
inc
fnstenv
adcl
mov
std
popa
dec
push
push
mov
adc
xor
cmp
sahf
sahf
xor
sarb
shll
mov
shrl
adc
cwtl
pop
gs
movsb
outsl
push
or
or
and
std
call
push
out
add
jo
xchg
pop
inc
leave
xor
xor
orl
loop
and
out
inc
and
fimull
popf
xor
push
std
push
sbb
mov
leave
inc
inc
movsb
mov
add
pop
inc
adc
les
les
cmc
inc
pop
xchg
aam
inc
push
cld
in
scas
popa
ret
mov
push
fs
das
jmp
mov
popa
icebp
adcb
jle
rclb
jae
mov
jb
cld
mov
mov
ss
push
sbb
jae
das
mov
and
lods
dec
adc
addr16
and
mov
shrl
sub
in
mov
mov
jg
aam
jg
inc
stos
ja
add
sbb
jnp
fcoml
lret
jb
cltd
aam
hlt
push
xor
jmp
sub
dec
or
test
les
mov
dec
popf
lock
test
or
sbb
adc
les
bound
mov
push
in
jle
and
jecxz
push
das
popf
inc
add
sbb
jg
inc
pop
mov
nop
cmp
shlb
or
jae
xchg
dec
mov
add
leave
xchg
add
fs
add
outsl
mov
mov
aaa
xor
int3
test
jo
jl
shlb
mov
shrb
adc
pop
and
popa
and
push
lcall
pop
mov
jnp
fldt
into
insl
ror
aam
adc
and
cmp
popa
insb
cmp
dec
fisubrl
ljmp
cmp
or
lea
arpl
push
jno
lea
xor
sub
push
push
std
cwtl
cld
daa
or
call
sub
test
je
ljmp
out
call
mov
sbb
push
inc
pushf
push
lods
or
sub
sub
es
adc
sbb
pop
imul
out
inc
xlat
mov
pop
xor
xchg
test
mov
inc
mov
mov
inc
and
hlt
push
lahf
cmpsl
push
adc
dec
push
and
dec
mov
cmp
cs
das
out
icebp
xor
std
pop
fadds
pop
mov
lcall
fsubl
in
fdivrl
pop
xchg
roll
popf
scas
notl
test
loop
jo
sub
cltd
adc
jnp
cmp
jo
mov
sbb
test
ljmp
add
xchg
mov
lret
jnp
and
cld
in
clc
fsin
cltd
jle
push
lret
jae
jmp
sbb
pop
xchg
sbb
push
and
dec
push
js
lret
aad
and
pop
das
add
shll
push
sti
adc
dec
cmp
movsb
sbb
mov
xstore-rng
cmpsl
push
pop
test
dec
imul
pusha
stc
adc
mov
ja
loopne
pop
sbbb
jmp
xor
mov
xor
cmp
push
int
sub
add
push
inc
jecxz
xchg
sbb
ds
fisubrl
push
inc
in
mov
jne
adc
inc
ss
xor
jmp
pop
xor
pusha
popf
faddl
lds
emms
into
sti
xor
lock
mov
push
fcmovbe
fimull
stos
lahf
aam
sub
stos
mov
test
aaa
sbb
cmp
mov
hlt
inc
jle
or
mov
js
adc
jle
in
sar
and
pop
cltd
pop
push
cmpsb
sbb
xor
xor
sbb
adc
pop
out
cmp
mov
xor
je
sbb
push
sbb
cmp
cs
fnstenv
cs
test
push
loope
mov
push
mov
movsl
or
adcl
ret
mov
adc
xor
mov
lret
and
jl
mov
cmp
out
cmp
and
inc
xor
mov
mov
push
call
dec
sarl
inc
mov
xchg
arpl
fdivs
imul
mov
loope
in
adc
in
sub
push
jmp
lods
in
sub
xor
mov
es
mov
jecxz
or
cs
cmpb
add
adc
call
shll
test
aaa
mov
sub
testl
push
mov
idiv
cmp
outsb
dec
sbb
dec
xor
ja
movsl
dec
enter
mov
fcmovnu
fisubrs
loop
fiadds
jmp
xor
xor
lea
inc
adc
icebp
pop
jb
push
leave
mov
push
aad
jp
out
push
or
cmp
pop
lret
lds
fwait
insb
cli
xchg
or
icebp
pop
add
push
xor
pop
pop
pop
or
imul
cmp
icebp
or
rclb
push
jae
fcomps
push
push
mov
jo
rcl
mov
cwtl
mov
ret
frstor
ja
add
jmp
or
gs
cmc
scas
cmp
mov
or
mov
imul
rol
pop
call
sbb
jecxz
pop
or
cmpsl
xchg
sarl
shll
stc
js
ret
hlt
scas
jae
enter
sbb
mov
daa
push
mov
xor
jnp
add
fistpl
xchg
jnp
and
xlat
out
out
cmp
push
ljmp
repnz
ret
adc
push
dec
xchg
sub
dec
mov
push
add
dec
inc
rcl
sub
les
lcall
lcall
fistl
jbe
flds
sub
pop
mov
into
call
pop
and
shlb
roll
sbb
dec
fcompl
fcoml
pop
mov
or
and
xchg
stos
ret
gs
aad
xor
fwait
sbb
and
loope
sbb
xor
mov
or
mov
jecxz
ret
aas
mov
pop
inc
jge
movsl
push
or
out
adc
std
dec
insb
pop
fwait
add
cmp
cmp
xchg
pop
stos
inc
jne
or
testb
int3
daa
add
into
push
or
mov
mov
insl
pop
bnd
pop
push
sbb
fnstcw
daa
int
mov
pop
cmp
nop
dec
sti
sub
adc
sub
clc
adc
or
jo
cld
sub
jae
xchg
jne
das
inc
push
or
pop
jne
leave
push
sub
adc
iret
mov
fsts
call
push
adc
add
pop
xor
aam
cmc
push
inc
mov
jp
cmc
push
mov
add
pusha
pop
add
sti
sbb
sbb
std
xor
or
scas
roll
inc
push
sbbl
and
and
cmc
push
ja
dec
ss
or
pushf
or
rorb
imul
pop
jg
sbb
dec
popa
ljmp
mov
push
jl
lahf
in
mov
and
lret
add
loopne
or
lds
fisubl
jnp
jp
das
jmp
mov
addb
daa
mov
mov
lcall
movsl
push
pop
jb
push
movsl
popf
arpl
add
mov
fsubrs
je
cmp
movsl
imul
sbb
test
int3
sbb
int3
jge
push
enter
aam
and
shrb
je
jb
sub
jnp
push
xchg
lcall
xchg
nop
dec
loope
mov
mov
jg
cld
and
mov
xchg
lods
jecxz
push
add
dec
scas
add
push
in
jae
fsubrs
movl
aam
insb
sbb
fldl
sub
ds
cmp
divl
cmc
mov
loop
loope
out
pop
push
rcll
dec
push
xor
xor
adc
sbb
jnp
cmp
jp
call
int
adc
btc
add
xor
push
inc
push
sahf
push
fisttpl
adc
pushf
repz
cmp
add
shlb
push
cmp
std
inc
mov
jno
push
mov
into
and
test
mov
mov
push
sbb
inc
pop
push
rclb
nop
popa
or
push
lcall
xchg
xorl
insl
mov
adc
cmp
rcrb
dec
lock
sbb
fimuls
mov
ret
pop
shll
test
sub
cmc
adc
xor
arpl
lret
cwtl
movsb
out
out
pop
mov
bound
xchg
and
push
and
test
mov
push
push
movsb
xor
jb
lret
and
popf
jle
pmaxsw
loope
outsl
inc
gs
pop
ja
inc
and
jle
sarl
xor
cmc
push
add
lret
push
fstpl
cmc
xchg
pop
sbb
das
sub
mov
mov
je
int3
cwtl
mov
ja
inc
divb
mov
pop
adc
lock
fxch
call
les
popa
pop
push
jle
hlt
adc
pop
ret
pop
in
mov
add
and
das
int
std
cmp
rcrb
test
mov
sub
out
sub
aam
ficoms
push
adc
rcr
gs
bound
mov
sahf
xor
or
jmp
push
xchg
lcall
icebp
rcll
fildll
mov
cwtl
push
fisttpl
loopne
and
xchg
int
xor
cmp
rclb
movsl
or
mov
jp
jle
arpl
loop
or
jg
xchg
dec
fldcw
enter
lret
out
je
mov
lods
loopne
xchg
push
jb
add
mov
stc
xor
pop
std
pop
mov
aam
xor
enter
mov
fisubl
cmpl
dec
xor
mov
push
adc
je
mov
jmp
jp
in
inc
movsl
leave
sub
sbb
pcmpgtb
bound
dec
sub
pop
pop
xchg
push
dec
movsl
jmp
add
mov
dec
bnd
cmp
push
repz
adc
incb
gs
or
pshufw
inc
inc
repnz
cmp
jne
and
adc
and
ss
add
je
cmp
pusha
add
cs
xor
scas
sbb
jae
jns
mov
inc
jne
sub
push
nop
adc
cmp
fimuls
daa
cmp
dec
lret
add
ficoms
or
lea
or
das
add
xor
ljmp
mov
cmpsb
lret
test
sbb
mov
xor
in
sub
add
push
inc
jns
jae
inc
mov
sub
mov
sbb
fs
lock
cltd
repz
mov
sti
xchg
mov
push
push
inc
xchg
cmp
gs
mov
scas
push
pop
nop
xchg
lcall
adc
out
sub
or
rcll
mov
xchg
push
adc
int
cmpsl
call
ret
test
cmp
mov
xchg
lock
cmpsl
stos
stos
lret
mov
adc
inc
loope
sub
test
into
xchg
add
out
or
jmp
imul
fcmovbe
add
cltd
xor
stos
push
pushf
dec
jb
fisubs
mov
push
push
push
xor
insb
inc
call
xchg
push
add
lret
pop
fnstenv
push
adc
xor
aam
outsb
push
dec
lods
clc
das
adc
rorb
pop
in
cmp
outsl
iret
xor
push
cmpl
lahf
jne
mov
lar
and
test
push
aas
jp
sti
aad
jecxz
push
cmpsb
sub
cmp
mov
and
pop
adc
adc
or
sbb
scas
sub
jmp
lds
mov
dec
std
mov
xchg
mov
addb
popa
pop
pop
dec
call
xor
outsb
inc
sti
fsubp
dec
push
push
jns
inc
adc
mov
sbb
pop
push
ja
dec
popa
push
inc
cwtl
sbb
jo
push
sub
and
dec
cmpsl
clc
aas
dec
mov
mov
jne
arpl
hlt
popf
shll
dec
sub
dec
inc
fmull
insb
xchg
jb
and
push
sbbb
mov
or
fs
subl
jecxz
adc
adc
pop
out
push
jbe
add
fwait
enter
push
daa
fisubs
jnp
inc
xchg
xchg
jbe
pop
xor
cwtl
mov
shll
xor
xor
sbb
je
ljmp
scas
clc
iret
sub
cld
outsb
frndint
rcrb
int3
inc
jmp
mov
test
das
or
xchg
mov
push
jae
outsl
mov
lret
mov
dec
pop
daa
adc
or
rcrb
mov
add
mov
push
ja
leave
and
aas
add
bound
mov
in
je
push
inc
push
shlb
jno
xchg
shll
inc
js
stc
lea
ja
push
push
mov
cltd
xlat
mov
jne
push
sbb
inc
push
and
jo
push
or
imul
mov
push
and
pslld
arpl
push
pop
xchg
inc
imul
ret
iret
xor
or
imul
nop
push
lahf
shll
adc
sub
push
jno
add
mov
add
mov
ret
aaa
sar
js
lret
pop
addr16
jbe
filds
cwtl
xlat
cmp
mov
sbb
sub
xchg
sub
jnp
adc
iret
cmp
fdivp
pop
js
test
jo
jmp
jl
fistps
xchg
push
mov
or
pop
das
mov
xchg
mov
addr16
mov
clc
mov
outsl
adc
fxam
inc
idivl
iret
hlt
xlat
push
inc
shl
orb
sti
pop
addr16
xchg
adc
int
sub
jge
push
xchg
dec
and
adc
mov
mov
nop
push
call
mov
jle
jne
int3
fistps
test
leave
jo
sbb
out
push
test
add
xor
int3
push
ds
daa
or
mov
mov
mov
jo
sub
nop
lds
add
dec
pop
inc
mov
loop
cmp
in
ret
pop
mov
or
mov
cli
call
cmp
cmpb
dec
popf
add
pop
stc
shll
or
fidivs
lods
jne
cmpsb
mov
sbb
mov
fisttpll
and
ds
dec
pop
xor
and
adc
fidivs
cmp
stc
fwait
es
scas
mov
loopne
or
cwtl
bound
pop
mov
sarl
les
stos
push
cmc
cld
in
push
fcmovnu
ss
out
call
sti
stos
dec
in
repz
in
jmp
aad
jne
imul
push
and
stc
fsubl
imul
movsl
fwait
jge
adc
es
or
or
int3
popf
and
pop
pop
or
cmc
push
std
sub
adc
dec
scas
int
dec
and
inc
inc
cs
outsb
sub
js
jle
mov
push
xor
pop
lahf
outsl
sbb
pop
push
dec
jle
repnz
pop
mov
sub
scas
fisubs
cld
int3
xor
mov
aad
push
push
cmp
push
ljmp
nop
dec
mov
icebp
adc
lods
add
loop
clc
int3
jle
and
xchg
lret
inc
cmp
jb
sub
inc
and
jmp
out
test
xor
test
xchg
out
icebp
mov
js
scas
mov
and
cmp
aad
insb
xchg
cmpsl
scas
insb
iret
or
clc
shl
push
and
xor
ret
movsb
and
adc
in
xor
sbb
mov
push
mov
test
cltd
es
loopne
pop
enter
adc
fsubp
sti
mov
ljmp
test
in
pop
mov
pop
in
mov
adc
stc
cmp
cmp
int3
stos
mov
inc
jno
cmp
mov
stos
and
push
push
pop
cli
add
in
xchg
das
jecxz
js
fstpt
cmp
cmp
jae
dec
clc
jne
imul
and
repz
add
insl
cld
and
arpl
xchg
daa
sbb
cli
pop
jl
push
mov
mov
jae
pop
sub
imul
out
adc
jge
call
lds
fisubl
xor
xor
stc
mov
sub
jge
jg
cs
movsb
test
clc
jnp
repz
xor
clc
popf
push
sub
aaa
pop
rorb
aad
pop
inc
iretw
fidivrs
imull
pop
in
pop
jne
dec
icebp
and
add
and
hlt
mov
popa
mov
js
ss
inc
and
pop
xchg
hlt
in
outsl
push
lcall
pusha
adc
mov
dec
inc
ficoms
movb
in
ljmp
sub
or
push
pop
rorb
sbb
sub
mov
outsb
and
cmp
xchg
aam
push
out
mov
add
fstp
jne
sbb
inc
fmull
out
idivl
icebp
fiaddl
lcall
dec
or
adc
call
push
bound
lret
je
mov
rclb
les
movb
std
scas
or
fimull
das
mov
xor
sub
mov
inc
mov
pushf
or
mov
ds
xor
dec
call
mov
dec
push
sub
movsb
add
push
sbb
and
push
pop
push
aaa
movsb
sbb
pop
std
add
or
cltd
das
push
cmp
push
mov
sbb
mov
ret
fwait
inc
sbb
test
pop
push
inc
les
adc
xchg
mov
fwait
mov
gs
dec
test
push
mov
xor
mov
inc
test
in
push
sbb
inc
and
xchg
daa
sub
test
push
push
and
sahf
mov
sub
inc
stos
fisubs
inc
pop
xor
dec
sub
int
clc
xchg
adc
test
shl
push
lcall
add
ja
sub
clc
das
dec
and
inc
aad
and
mov
add
mov
mov
das
inc
mov
push
mov
test
pop
fsubrl
sub
sub
out
jb
pop
xchg
jno
mov
sbbl
inc
fistl
leave
call
cmp
pop
and
js
in
xchg
imul
sti
js
insl
mov
icebp
mov
pop
sbb
mov
into
mov
ret
and
adc
adc
loopne
pop
dec
roll
das
or
repnz
push
adc
stc
ficoms
sub
aas
push
mov
lret
dec
les
test
and
leave
inc
and
cld
sub
inc
xlat
push
push
cmpsl
dec
mov
sbb
or
ret
scas
or
mov
inc
lock
and
sub
pop
jne
int3
out
in
aad
hlt
pop
js
add
fscale
out
lret
imul
hlt
aaa
or
inc
or
aam
xor
dec
xchg
push
cli
add
mov
or
adc
lock
aad
jns
cmp
mov
movsl
cmp
loopne
jb
jge
pop
adc
cs
lahf
push
aas
inc
aad
cmp
loop
sbb
lcall
push
repnz
test
popf
inc
adc
mov
loope
inc
add
pop
and
mov
pop
mov
mov
lock
sbb
repz
add
inc
outsb
std
sbb
adc
jbe
enter
test
clc
or
mov
mov
fstpl
les
aad
pop
repz
pop
in
or
pushf
out
in
call
fldenv
out
int3
mov
mov
or
push
sub
push
fwait
clc
add
in
jmp
xchg
stc
movsb
mov
or
push
pop
adc
lock
lods
pop
aas
fdivl
adc
daa
sub
in
jno
es
jle
push
hlt
lds
out
dec
or
sub
es
in
pop
xchg
dec
mov
xchg
adc
scas
sbb
mov
decb
jnp
pop
cld
pop
cmp
je
bound
jne
and
pop
pop
adc
fisubrs
mov
insl
and
xor
enter
and
push
add
xor
push
ljmp
mov
fmull
das
rol
fiadds
push
inc
in
call
clc
jae
add
sti
aas
or
lds
jns
sub
adc
mov
lret
mov
cs
std
ds
xchg
and
sbb
mov
cmp
jae
aaa
push
addb
out
and
pop
filds
or
mov
rorb
js
scas
shrb
repz
fs
pop
pop
jecxz
xor
scas
adc
aaa
into
rcll
lahf
adc
ss
mov
mov
shll
push
pop
and
pop
and
ja
mov
adc
pushf
lods
add
js
mov
mov
out
dec
bound
and
push
add
fcoms
loopne
sbb
pop
lcall
test
adc
adc
dec
jns
call
push
xlat
inc
das
movsl
test
fwait
cmpsl
fnstsw
push
jge
ret
out
push
fs
push
push
pop
mov
pop
adc
ss
fidivrs
mov
push
push
incl
sar
int
push
sub
and
inc
cmp
xchg
push
dec
sbb
adc
and
jg
mov
jae
sti
mov
jmp
in
mov
jb
mov
xchg
push
clc
arpl
div
into
dec
or
outsl
fwait
or
aad
sub
inc
shll
inc
or
jb
daa
pop
push
ret
daa
out
dec
incl
icebp
inc
xchg
stos
xor
testb
stos
movsl
xchg
icebp
mov
sbb
sub
psubd
cmp
nop
pop
sti
mov
cli
sbb
or
test
pop
mov
into
stc
push
les
add
pop
aaa
cmovg
ret
aad
inc
add
push
mov
push
inc
jnp
lcall
add
lds
frstor
les
adc
into
sti
in
pop
fldt
cmp
xor
loopne
cmp
into
out
fmuls
ficoml
repnz
sbb
cs
add
je
sub
mov
pop
lahf
or
inc
push
mov
mov
jns
in
rolb
add
pop
xor
push
mov
and
mov
inc
mov
fcom
jno
jp
sub
js
cmp
shlb
xor
jb,pt
es
sbb
fistps
lea
lods
stc
lret
xlat
loope
cmpl
punpckldq
mov
test
add
rorl
inc
lock
js
mov
loop
sub
in
push
jns
pop
lods
fs
add
or
mov
inc
pushl
jnp
mov
dec
rclb
add
ja
pop
mov
fs
sub
sbb
xor
scas
and
xchg
pop
inc
test
mov
and
fldt
cmpsl
stc
shll
pop
call
cwtl
mov
pop
jl
ja
xor
sbb
insb
mov
rclb
add
lcall
dec
stos
fcmovnu
cmp
cltd
inc
push
insb
and
or
xlat
mulb
or
xlat
je
mov
inc
scas
and
ja
sbb
sub
sbb
dec
mov
or
pusha
jp
outsb
jp
push
push
imul
loopne
sub
and
lods
out
test
jecxz
jnp
aam
out
ds
shll
inc
dec
rcrl
mov
or
jge
daa
mov
rclb
adc
sahf
not
lret
pushf
ljmp
pop
inc
in
iret
fildl
sti
movsl
out
icebp
imul
or
sbb
add
mov
cltd
movsl
icebp
push
xor
ja
outsl
xor
fistl
adcb
mov
pop
mov
jns
fistl
iret
inc
inc
xchg
aaa
jmp
mov
scas
adc
loope
pop
cld
lahf
sbbb
xchg
jb
push
push
insb
sub
shlb
sub
dec
mov
jnp
ja
mov
lret
add
into
test
fimuls
cmpsl
adc
fiaddl
adc
scas
jle
fnstenv
xchg
xchg
mov
push
mov
jbe
and
rcll
jmp
cmpsb
stos
pop
pop
dec
out
shl
mov
inc
cmp
mov
mov
test
addr16
jo
fcmovnbe
setge
xor
les
arpl
sbb
add
stos
addr16
push
mov
mov
jbe
xor
imul
xor
push
lds
aaa
inc
movsl
sub
or
push
mov
imul
mov
outsl
mov
mov
mov
mov
cmc
sbb
push
out
ror
arpl
addr16
clc
push
lret
nop
sub
lret
inc
mov
gs
dec
pop
dec
in
cs
sbb
xor
fstl
inc
jb
sub
or
dec
inc
dec
and
lret
add
push
xchg
pusha
or
test
repnz
push
xchg
cli
adc
adc
pop
xchg
cmc
jle
cmc
push
scas
xchg
addr16
cmp
arpl
fsubrs
add
jae
jo
xor
vpand
push
or
ja
cmp
cmp
int3
insl
mov
testb
outsb
jmp
or
pop
out
inc
rcrb
cmpsb
stc
and
push
push
f2xm1
inc
ja
xor
fnsave
or
add
push
xorb
xchg
add
sbbl
xor
out
cmp
jle
add
push
cmp
es
aam
xchg
dec
testl
iret
cli
xchg
shrl
xchg
cmp
pop
pop
ret
adc
jge
dec
ljmp
xlat
jns
rorl
xchg
cmpsb
push
mov
mov
fnsave
mov
push
std
or
cwtl
mov
add
mov
aad
xor
notb
sbb
xchg
repnz
scas
jge
and
push
push
outsl
sub
testl
push
andl
add
push
dec
pop
test
jns
test
lds
xchg
call
aad
cmp
std
mov
pop
outsb
fiadds
xlat
or
fisubrl
mov
rcll
inc
ret
add
xor
mov
xchg
dec
aaa
fiaddl
mov
jo
mov
push
js
or
inc
inc
repnz
push
push
mov
fisttps
js
and
add
scas
xor
xor
bound
popf
jmp
loopne
out
and
xchg
dec
out
or
std
xor
out
pop
dec
push
mov
mov
push
ds
lahf
adc
xor
enter
add
sahf
xor
stc
or
std
xor
add
stos
es
in
dec
and
fists
mov
sub
psubd
mov
lods
pop
lret
inc
out
popa
adc
into
xchg
movsb
push
loope
dec
jne
mov
push
call
into
inc
jmp
imul
call
jmp
push
jns
sti
add
es
enter
mov
sbb
ds
jg
gs
pusha
sbb
fiaddl
mov
decl
adcl
or
dec
pop
adc
gs
fwait
push
shll
jnp
cmp
scas
insb
stos
push
addr16
sub
push
dec
test
mov
repnz
cmp
out
fmul
mov
xchg
jo
add
movsl
pop
and
adc
jmp
roll
in
mov
mov
mov
jnp
jp
adc
aas
andl
lods
xchg
dec
pop
jp
pop
mov
scas
mov
fsub
mov
mov
loopne
ja
xchg
jbe
cmpsl
push
cmp
xchg
stc
daa
stos
addr16
mov
cli
xor
stos
call
jecxz,pt
std
push
or
push
cmp
pop
mov
push
iret
push
push
or
dec
pop
clc
mov
cmp
mov
mov
out
in
aad
addl
or
lret
and
or
cmpsb
or
adc
je
pop
mov
push
shr
mov
out
lcall
mov
shrl
imul
hlt
or
push
out
mov
mov
movsl
sti
push
inc
add
into
mov
stos
add
loope
push
dec
adc
stc
push
test
pop
jae
xchg
sub
lea
adc
lods
mov
iret
dec
fmul
add
jnp,pn
stos
add
mov
xor
leave
xlat
and
test
fiaddl
hlt
stos
add
subb
insb
sbb
pop
idiv
pop
hlt
jb
jecxz
inc
mov
stos
and
push
push
adc
ljmp
bound
mov
adc
and
xchg
bnd
and
lds
dec
mov
insb
sub
test
dec
mov
push
ljmp
mov
loope
lahf
or
mov
ret
push
jno
add
ds
pop
sbb
or
push
icebp
cmp
repnz
daa
mov
scas
fnstsw
mov
loopne
dec
and
test
popf
jle
xor
pop
add
adc
lock
stos
lahf
push
or
xchg
fstl
pop
and
cli
decl
xlat
cmp
adc
rcl
notb
dec
dec
lds
lret
fmul
xchg
and
scas
out
aaa
cmp
add
cmp
mov
inc
push
and
pop
loop
mov
data16
incl
test
outsb
pushl
mov
cmpsl
add
shrw
inc
dec
push
cmp
add
mov
sub
push
jmp
push
fadds
mov
pop
xor
test
adc
add
add
sub
mov
inc
mov
popf
cs
adc
lahf
stc
push
fdivr
xchg
or
and
jae
jb
jbe
loope
pop
mov
jecxz
mov
push
call
adc
sub
sbb
inc
push
sbb
stc
push
sub
mov
mov
add
repz
dec
in
pop
lcall
inc
hlt
mov
mov
adc
cmp
test
fucomp
pop
jo
cmp
call
mov
jb
pop
ja
vmwrite
jo
mov
mov
dec
mov
mov
repnz
mov
in
pop
leave
inc
fcoml
aad
sbb
mov
push
add
movsb
inc
mov
pop
xchg
xor
or
test
push
push
sahf
cmp
imul
fimuls
sub
pop
push
lds
sbb
adc
in
jl
cmp
xchg
cmp
add
ljmp
subb
or
andb
int3
outsw
sbb
mov
jg
dec
nop
not
leave
hlt
mov
ret
and
dec
mov
mov
test
xor
jl
sbb
pop
aam
sbb
out
into
cmpsl
mov
mov
xchg
movl
or
xor
jp
pop
jns
jmp
push
daa
adc
add
push
out
push
adc
lds
sbb
call
xchg
test
mov
in
push
lret
int
out
in
mov
push
loopne
dec
push
mov
test
popa
and
add
push
ds
setno
push
fcoml
cmp
and
pop
mov
ss
and
sub
je
add
loope
push
jne
shlb
je
jno
mov
int
enter
lret
sbbb
xchg
jne
xorb
das
out
sub
push
cld
je
jmp
add
sub
mov
test
aas
aad
jne
sub
pop
sbb
jge
dec
adc
das
pop
or
add
out
rorl
cwtl
mov
or
out
aam
hlt
mov
repz
mov
je
adc
cltd
mov
mov
pusha
cmpsl
adc
mov
pushf
in
pop
push
leave
add
sbb
push
jge
aad
ja
data16
addb
inc
sbb
and
mov
aas
mov
sbb
and
insb
mov
or
adc
push
mov
adc
shl
mov
mov
and
sbb
push
push
fcom
ss
or
push
les
dec
xchg
and
shl
movsb
inc
inc
jge
aad
outsl
push
shr
repz
int3
xlat
mov
adc
sbb
insb
dec
jecxz
push
jo
inc
add
xchg
push
inc
sbb
pop
ds
push
pusha
add
mov
orl
add
and
add
adc
fidivl
mov
iret
adc
mov
push
in
mov
push
repz
stc
push
pushf
movsb
jmp
mov
mov
sbb
jge
dec
jl
pop
pop
clc
adc
xchg
pushl
push
mov
test
push
inc
dec
push
ss
mov
mov
sub
inc
and
push
and
adc
push
rorb
sbb
test
mov
hlt
inc
test
repz
rclb
ds
imul
scas
dec
mov
sub
pop
cmp
xor
setl
aam
push
inc
fstpt
int
mov
cld
inc
add
pop
inc
cltd
imul
sub
mov
sub
inc
jns
push
jnp
inc
add
punpckhdq
pop
out
dec
hlt
lahf
int
lcall
shufps
aam
popa
dec
or
inc
icebp
inc
test
mov
mov
std
sahf
mov
mov
test
xchg
inc
lock
loop
aam
push
push
jg
and
or
test
cmp
cmp
and
cwtl
inc
mov
jae
or
xor
cmp
dec
pop
and
pop
shrd
push
push
clc
hlt
fmuls
jge
dec
in
addps
adc
mov
xchg
push
rclb
sahf
sub
adc
inc
shlb
and
push
xchg
nop
push
pop
or
hlt
pop
pop
or
dec
jo
add
rcrl
or
inc
push
xor
aad
sbbb
adc
nop
adc
jge
dec
cmp
inc
js
or
mov
test
das
dec
push
cld
or
lret
in
adc
xchg
and
cmp
fistl
imul
xor
int
jmp
mov
pushf
adc
xchg
sbb
sahf
jl
sti
push
cmp
push
mov
pop
xchg
push
cmp
dec
push
jns
or
sub
js
lea
inc
adc
mov
pop
lods
add
xchg
ss
and
jns
push
mov
ja
aaa
lock
xchg
stc
dec
push
jo
fisttps
jmp
pusha
and
add
push
movb
xchg
out
push
add
or
push
mov
jmp
testb
dec
pop
fwait
jnp
xchg
inc
dec
addl
pop
lods
or
data16
xor
idivl
xchg
repnz
mov
ret
sahf
xchg
adc
cmp
mov
xchg
push
popa
adc
and
and
pop
push
syscall
push
and
pop
or
push
jge
aad
and
lods
sbb
inc
push
xor
aad
dec
xor
pop
push
mov
or
stos
pop
out
xchg
push
dec
sbb
push
jmp
sahf
adc
xchg
lret
mov
out
mov
shl
xchg
push
lea
xchg
jbe
mov
enter
in
punpckhdq
and
or
inc
jge
aad
inc
and
sub
lods
or
inc
inc
xor
aad
outsl
xor
dec
push
mov
and
push
ret
jge
dec
push
hlt
pop
pop
sbb
pop
faddl
in
out
inc
pop
lods
sbb
inc
fidivs
pop
aad
mov
into
dec
push
mov
mov
cwtl
jge
dec
stos
hlt
cvtps2pd
sbb
das
mov
xchg
inc
dec
sbb
mov
jge
add
mov
add
adc
inc
and
or
and
xor
xor
and
pop
push
dec
add
or
cmp
sbb
imulb
imul
sbb
pinsrw
xchg
popa
dec
or
inc
repz
xchg
mov
mov
ds
arpl
cmp
jge
dec
and
pop
pop
jae
push
xchg
push
nop
iret
test
push
inc
xor
js
sbb
or
hlt
call
dec
xchg
push
add
mov
adc
or
xor
and
pop
or
inc
jge
aad
or
lods
or
inc
push
xor
aad
pop
in
dec
negb
mov
sbb
pinsrw
xchg
popa
dec
or
test
lods
mov
adc
mov
ret
sahf
xchg
adc
cmp
mov
xchg
push
popa
adc
and
and
pop
push
syscall
push
es
pop
or
pop
in
clc
arpl
aaa
pop
jae
es
aaa
or
popa
jge
aad
out
xchg
add
or
lods
repz
dec
loop
pop
pop
or
pop
lock
lahf
pop
ret
dec
or
push
xchg
ljmp
mov
lret
sahf
mov
jmp
xchg
push
mov
adc
cmp
and
das
push
pop
add
sbb
and
aad
cmp
lods
or
inc
push
xor
aad
push
xor
dec
inc
mov
and
dec
gs
mov
out
div
or
popa
jge
aad
shll
cltd
pop
lods
or
inc
mov
pop
aad
pushl
mov
pop
iret
push
xchg
mov
or
pop
pop
clc
sbb
pop
dec
cmp
xchg
push
dec
cmp
push
jnp
push
adc
xchg
cmp
outsl
mov
ja
sub
push
test
and
sbb
popa
mov
adc
pop
add
pop
pop
cli
xchg
jle
mov
out
fistpll
adc
xchg
add
mov
pop
push
sbb
cmp
dec
cmp
movsb
aad
stc
xor
cli
inc
jmp
test
mov
leave
lds
sbb
jge
dec
mov
outsl
pop
or
ja
and
fiaddl
and
and
cld
add
xor
add
add
or
rcl
adc
and
jb
das
pop
cs
push
jne
inc
arpl
sbb
add
pop
push
fs
js
shl
cmp
daa
outsb
addr16
scas
sub
mov
mov
xor
jmp
jecxz
lret
push
sbb
call
jecxz
lcall
fisttpll
inc
add
ja
aas
ja
xorl
mov
std
inc
test
and
cmp
jnp
push
mov
and
or
stos
or
mov
inc
test
dec
xchg
inc
jl,pn
push
out
adc
insb
fildl
dec
orb
push
movsb
pop
inc
and
sub
aam
add
xor
lds
mov
and
clc
rcll
or
jge
xchg
les
add
pop
mov
cmpsl
inc
shrb
cmp
jmp
cmp
fisttps
dec
cmpsb
or
popa
xchg
sbb
cmpsb
scas
fiadds
push
dec
inc
inc
xlat
or
add
dec
cmp
lock
jbe
test
adc
test
add
adc
es
and
cs
dec
jae
es
mov
mov
sbb
xorb
adc
add
push
out
cltd
rol
push
add
add
dec
dec
pusha
or
and
pushl
mov
call
mov
into
clc
xchg
push
push
stos
lods
xchg
dec
jnp
dec
sub
imul
mov
aam
sbb
bound
dec
dec
dec
stc
pop
sub
xchg
sbb
mov
sarb
dec
mov
ss
inc
data16
mov
sbb
or
pop
iret
outsb
jmp
and
xor
and
pop
cmc
add
adc
mov
xor
adc
push
jmp
call
adc
insl
jno
lods
xlat
cmpsl
pop
push
in
daa
sti
pop
sbb
jmp
cmp
or
movsb
mov
call
sub
fiaddl
fisttps
push
fidivrl
std
mov
daa
push
push
pusha
shl
dec
and
out
test
and
adc
les
jae
jo
jnp
xor
in
mov
pop
pop
pop
mov
add
pop
mov
xchg
push
and
adc
fnstenv
nop
push
arpl
sbb
inc
sub
sbb
pop
cld
insl
xchg
sbb
inc
addr16
mov
mov
out
push
cs
stc
shlb
stc
push
ljmp
imull
testl
mov
in
fwait
sub
mov
adc
leave
sub
insb
fs
inc
mov
mov
add
rclb
mov
hlt
adc
ds
fstpl
es
les
in
mov
inc
adc
xchg
xchg
in
outsl
push
cwtl
push
sti
jmp
test
pushl
inc
dec
std
push
mov
xchg
hlt
ss
pusha
je
cli
daa
ficompl
shll
sbb
mov
negl
pop
insb
mov
imul
mov
cmp
sbb
cwtl
and
aam
out
xor
cmp
std
sbb
xor
and
push
ret
push
mov
int
and
frstor
imul
addr16
mov
mov
fcomp
mov
mov
cmp
sbb
stc
sbb
scas
mov
adc
mov
mov
sbb
inc
addb
adc
lcall
add
jae
stos
clc
pop
pop
add
jnp
lods
clc
pop
pop
add
movb
insb
fmul
fidivs
js
add
xchg
mov
xchg
jbe
xor
mov
cli
xchg
ljmp
mov
movsl
adc
imulb
push
stc
cmc
stos
jnp
out
add
and
pop
dec
jle
pop
lcall
jl
aas
pop
jo
std
add
fwait
stos
lea
add
xor
call
push
bound
xor
lret
cmp
sub
pop
or
cmp
dec
xor
mov
add
mov
mov
pop
and
push
arpl
dec
inc
push
ret
cmp
testl
inc
pop
call
ja
sbb
in
inc
roll
loopne
add
mov
push
adc
cmp
arpl
std
pop
push
cmp
or
and
sbb
cmp
cs
inc
hlt
lods
fs
dec
popa
push
jle
arpl
movsb
xchg
insb
cli
in
mov
add
lret
push
inc
sarl
inc
or
push
dec
mov
mov
stos
es
mov
fmuls
inc
bound
fildll
lcall
jl
sbb
out
loopne
arpl
inc
ret
push
and
outsl
sbb
sub
cmc
push
xchg
jo
xchg
rolb
or
jae
pusha
push
inc
mov
add
push
mov
rcll
push
adc
xchg
lods
adc
cmp
xchg
mov
jbe
dec
add
and
aam
and
cli
xor
inc
xchg
sarl
jo
adc
or
pop
les
or
dec
popf
xor
push
jae
pushf
push
sub
mov
iret
and
das
push
inc
xor
rorb
push
je
push
pop
stos
lea
dec
fdiv
aas
pop
jp
add
jle
xor
xorl
xchg
xchg
push
daa
cwtl
hlt
inc
pushf
jno
addb
or
das
sahf
data16
xchg
aaa
mov
xchg
push
jb
mov
cmp
cmp
push
subl
cmpb
dec
fsubrp
xor
dec
jge
pusha
pop
mov
cmpsb
hlt
jp
add
pusha
lods
shll
ljmp
inc
cmpsb
push
inc
push
sub
sbb
and
jge
dec
xchg
xor
sbb
xor
push
or
xchg
or
cmp
mov
orl
incb
and
dec
push
pop
imul
dec
xchg
hlt
aaa
pop
clc
sbb
jae
cmp
mov
push
push
enter
les
loope
jb
jo
mov
adc
push
mov
aas
or
mov
xor
aad
fwait
xor
dec
cmp
xor
sti
rol
mov
sbb
or
xor
shlb
sub
pop
fmul
mov
push
push
push
stos
xchg
ss
pop
jge,pn
dec
push
hlt
leave
pop
and
or
fsub
rcll
add
mov
or
mov
inc
and
pop
or
ss
or
mov
inc
in
xor
mov
je
pop
and
xor
out
push
dec
fldenv
jmp
adc
and
enter
mov
and
arpl
sbb
arpl
or
dec
or
mov
jge
dec
out
hlt
imul
pop
cld
inc
mov
es
pop
xor
movsb
pop
or
mov
mov
mov
dec
pop
hlt
stc
pop
sarb
inc
call
imul
dec
pop
outsl
xchg
cmp
and
xor
or
adc
decb
jne
rolb
or
ficoms
mov
pop
and
mov
jg
add
mov
mov
mov
lods
jno
imul
lret
xchg
mov
mov
popf
cmp
jns
jb
jns
inc
jp
pop
sub
xor
stc
jns
pop
inc
in
xor
daa
inc
mov
es
sbb
pop
lret
sub
pop
pusha
xor
sbb
xor
xchg
inc
es
add
push
jns
arpl
cs
jae
pop
sbb
test
adc
insl
dec
lret
cmpsb
test
add
sbb
bound
bound
shll
jecxz
add
ret
xor
dec
sub
je
insl
sbb
rcrl
or
jmp
insl
outsw
imul
push
sti
mov
adc
loope
cmp
aam
jae
pop
into
insb
sbbl
dec
adc
dec
inc
lea
shl
cltd
inc
xlat
popf
sbb
movsb
scas
out
dec
adc
out
dec
test
mov
test
jae
push
inc
xor
popa
addr16
jle
lds
shr
push
mov
stc
adc
dec
push
movsl
rcr
sub
loope
sbb
mov
inc
js
addb
sbb
dec
arpl
int
xor
in
sub
pushf
inc
pop
jo
xor
jge
fsubs
jns
inc
fstpl
ds
jp
push
and
adc
and
aad
inc
inc
aad
hlt
xchg
pop
push
js
add
inc
adc
out
out
dec
ficoml
mov
lcall
mov
pop
sub
aaa
push
dec
adc
pop
popa
dec
jl
bound
or
adc
pop
dec
js
inc
cmp
mov
sub
mov
xor
pop
cltd
mov
std
push
ja
cltd
cmp
pop
dec
and
ja
push
fidivl
adc
sbb
mov
imul
push
pop
aaa
mov
and
push
jne
adc
jmp
leave
mov
lret
scas
push
mov
outsb
movsb
pop
fmull
leave
shlb
jg
mov
cmc
dec
outsb
pop
call
sbb
lds
int
leave
lcall
push
add
pop
inc
adc
int
jb
ja
mov
dec
sbb
int3
and
outsb
test
dec
fisttpl
sub
push
and
lcall
jno
fmuls
mov
popa
lret
jg
jo
xor
pop
lock
push
sbb
cmp
or
mov
xor
inc
into
adc
fsubrs
push
nop
and
sub
sub
nop
adc
sbb
mov
test
add
aaa
sub
loopne
push
sub
push
and
pop
lock
ficompl
fistpl
add
xor
dec
out
es
push
xor
dec
xor
pcmpeqw
or
mov
cmp
dec
shr
inc
sub
xor
adc
mov
or
xchg
add
push
push
dec
gs
jo
push
push
mov
add
jo
xor
push
adc
sub
std
mov
xor
sub
bound
test
divl
cwtl
loop
sub
or
adc
sub
adc
push
mov
mov
sub
jb
pop
push
cmp
insl
dec
xor
sub
cli
popa
xlat
xor
and
mov
sub
loope
lret
push
adc
sbb
stc
repnz
data16
jle
loope
or
mov
add
sub
fstl
stos
std
outsl
outsl
imul
dec
sub
cs
jae
and
add
and
or
nop
std
add
sbb
addr16
repz
xor
enter
xchg
mov
inc
test
sarb
popa
leave
movsb
push
and
xchg
cmpsb
mov
lea
incb
insl
push
out
aas
pop
sub
xor
dec
jo
mov
fs
dec
mov
sub
dec
insb
and
and
adc
ljmp
xor
addb
jp
pushf
push
sub
mov
push
inc
xor
xor
pop
cmpsb
sbb
and
loope
mov
mov
mov
nopl
pop
mov
mov
xor
sub
jl
mov
loop
mov
pop
inc
das
lods
pop
fs
scas
xchg
lret
inc
push
clc
in
into
jge
jle
jae
jnp
or
mov
call
inc
and
sbb
out
icebp
inc
iret
mov
dec
adc
dec
inc
punpckhdq
mov
scas
cs
dec
mov
or
adc
lcall
jl
bound
dec
xchg
ljmp
add
xchg
xchg
cmp
mov
ret
inc
jp
mov
mov
mov
inc
inc
push
addl
sub
sub
pop
push
and
ret
pop
out
push
sahf
je
push
adc
imul
icebp
push
cmovge
jnp
shlb
dec
aaa
mov
ror
es
popl
mov
out
mov
and
sub
xchg
outsl
lock
inc
in
jle
jns
dec
add
leave
jae
or
into
add
lret
test
push
push
mov
cmp
dec
pop
push
sub
adc
mov
popa
mov
dec
not
or
sbb
dec
ficomps
push
sbb
fwait
movsl
sub
dec
xor
push
or
imul
cmc
shrb
push
pop
pop
mov
inc
pop
popf
popa
cltd
and
nop
jecxz
rcr
shll
in
jb
je
jae
fildl
enter
stc
jl
jo
outsb
ret
ret
movsb
out
sub
cs
xchg
sbb
push
jno
lret
add
out
loopne
cmpsl
bound
cld
pop
push
jmp
adc
popf
mov
and
aaa
bound
ret
gs
sbb
nop
lods
sahf
and
mov
push
filds
fwait
cltd
cltd
inc
push
add
out
iret
movsb
and
movsl
shlb
push
push
xor
inc
pusha
cmp
outsb
out
mov
outsl
push
sub
jns
sub
nop
adcl
push
dec
shlb
jbe
add
dec
xchg
aaa
add
sub
mov
pushf
jno
je
test
jo
sub
pop
in
xor
dec
lock
ds
inc
dec
scas
addb
rcrb
xrelease
lret
lods
push
dec
add
jbe
jns
adc
cmc
push
inc
mov
inc
adc
movb
pop
jl
xchg
inc
or
sub
es
jg
adc
push
repz
push
cmp
js
lcall
subb
pop
adc
sbb
xor
iret
push
sbb
les
push
clc
and
and
push
call
stos
mov
es
insb
sbb
xchg
cld
xchg
cmp
cltd
add
pop
cs
lds
jge
in
into
pop
fists
lret
or
jnp
xor
push
jp
pusha
adc
cmp
pop
cmc
pop
pusha
jle
cmp
xchg
insl
pop
mov
inc
or
ja
aam
jmp
in
into
imul
idiv
sti
push
aad
incl
jp
clc
pop
hlt
xorb
imul
mov
mov
fwait
push
sub
popl
adc
jb
in
mov
inc
pop
pusha
outsl
ja
mov
ret
dec
out
push
jb
loopne
add
stc
jg
repz
mov
jmp
inc
mov
outsb
sbb
fdivrl
movsl
sbb
push
imul
int3
cmp
lods
lds
xchg
dec
je
pop
call
xchg
jno
divb
inc
out
mov
aaa
dec
push
jne
push
lds
loopne
pop
ljmp
push
inc
arpl
hlt
mov
jns
mov
arpl
inc
adc
mov
xor
dec
jnp
mov
test
into
filds
jno
ficompl
xchg
mov
sub
add
xor
mull
inc
inc
and
mov
fs
sbb
inc
or
addr16
adcl
movl
es
jnp
sbb
dec
push
aam
dec
xchg
add
sub
imul
jge
mov
adc
out
aam
jae
xchg
sub
dec
mov
inc
imul
iret
mov
push
push
mov
mov
dec
or
fisttps
xchg
xor
mov
mov
nop
andl
cmc
jo
lods
add
push
subb
lods
aaa
icebp
mov
adc
nop
or
pop
push
sbb
insb
xor
push
mov
push
ret
lds
jecxz
xor
fcoms
xchg
insb
or
cmp
sub
mov
daa
dec
js
test
insb
jge
iret
dec
inc
push
mov
int
je
out
fdivl
loop
adc
adc
ret
pop
jl
stos
cmp
leave
aam
scas
pushf
xchg
aaa
or
mov
dec
xchg
push
push
sub
sub
mov
mov
dec
sbb
leave
or
xor
arpl
dec
subl
jb
mov
push
or
sub
mov
push
xor
push
enter
shlb
adc
mov
adc
adc
sub
nop
sbb
fbstp
jl
and
xor
add
push
jmp
jne
push
xchg
xchg
pop
fcoml
xchg
dec
popa
in
cmp
pushf
jns
or
sbb
aas
bound
fstpt
or
std
mov
pop
or
add
dec
in
mov
push
mov
loop
lret
add
mov
ljmp
notl
mov
gs
and
test
sub
out
sbb
repnz
sbb
or
into
mov
mov
lea
pop
insl
call
sub
icebp
loop
add
outsb
push
push
test
inc
jae
jb
or
aam
mov
adc
jae
insl
cld
stc
push
popa
inc
jae
sub
popf
inc
pop
outsl
mov
cli
and
inc
fwait
jno
or
stc
lea
jl
or
or
fisubl
aam
dec
dec
dec
xchg
mov
xlat
mov
aas
mov
lods
inc
jp
pop
sub
inc
inc
addl
cwtl
xchg
adc
test
mov
lods
pusha
bound
dec
jb
sub
sub
lahf
add
fsts
sub
je
and
pusha
jecxz
lahf
xor
std
push
arpl
mov
adc
insb
loop
decb
bound
push
or
fstl
jno
xor
cmp
push
and
lret
cmp
xchg
js
sub
in
adcl
lret
pushf
fcoms
ficomps
push
pop
dec
insb
sbb
cld
or
cs
jmp
fmull
and
lock
insl
or
das
loope
clc
cltd
push
test
into
rorb
sbb
imul
js
cs
fildll
inc
mull
leave
pop
test
adc
xlat
aad
xor
aas
addr16
shr
pop
jge
sbb
sub
sbb
pop
inc
test
test
mov
adc
inc
inc
dec
mov
pushf
add
daa
inc
in
paddq
jg
pop
mov
or
xor
jae
adc
sub
ja
cmp
inc
outsb
jg
xchg
add
sub
repz
inc
inc
mov
mov
rcrl
popf
lods
mov
ret
sbb
push
bound
or
and
loop
xor
cwtl
into
es
inc
dec
mov
les
test
mov
test
out
je
out
rcrb
fwait
mov
inc
xor
sbbl
jl
out
push
push
aas
sahf
fistpl
pop
adc
rorb
pop
outsb
fdivl
gs
xchg
insb
xor
sbb
mov
mov
push
add
aam
inc
xor
or
lahf
filds
and
bound
lea
jb
cmp
sub
ret
insb
and
gs
mov
pop
add
push
xchg
xor
inc
xchg
push
movsl
prefetchw
cld
mov
sahf
lods
pusha
roll
arpl
and
add
jmp
popa
xchg
data16
and
cltd
and
std
lds
jecxz
xchg
jmp
test
push
adc
orb
arpl
sub
imul
and
jl
jge
jne
rcr
jp
je
imul
pusha
mov
and
xor
sub
popa
push
and
jg
arpl
sub
jecxz
or
jo
inc
ja
jge
insb
sbb
sbb
xor
mov
push
adc
int
or
sbb
scas
or
addr16
inc
mov
mov
add
dec
cmovns
inc
in
imulb
xor
dec
les
xchg
dec
movsl
pop
enter
sbb
sbb
add
pop
mov
popw
cwtl
sbb
lods
mov
mov
pop
ja
add
adc
subb
cmpsb
leave
xchg
test
jl
out
sti
pop
sub
push
push
xor
fsubrl
mov
mov
lock
fdivl
rol
mov
rcrb
lret
dec
mov
cmp
inc
int3
dec
test
mov
scas
mov
mov
outsb
jno
jmp
jne
sbb
mov
es
data16
cmpsb
adc
adc
and
call
ficompl
rcll
ret
pushf
test
inc
ret
and
pop
cmpsl
mov
pop
push
loopne
ja
dec
insb
inc
xchg
mov
dec
adc
push
pop
sbb
lret
bound
push
inc
sahf
movsl
rcr
call
inc
andl
rcrb
into
call
mov
pop
jo
xchg
adc
int
xor
aas
sbb
bound
clc
sbb
sahf
fstl
lret
call
sub
jle
sbb
mov
adc
mov
dec
or
negl
mov
lods
jne
lret
jnp
lods
cmp
lea
and
shlb
jl
jbe
or
arpl
sti
push
test
mov
push
mov
push
test
cmovne
xor
push
jnp
mov
jmp
add
pop
sbb
push
or
das
pop
inc
xor
pop
inc
jo
dec
out
pop
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
lret
out
pop
pop
add
mov
pop
push
lock
fldenv
pop
adc
test
stc
inc
dec
pop
adc
dec
stc
fs
pop
add
mov
pop
add
mov
pop
add
mov
pop
add
lret
stc
in
pop
add
mov
pop
add
dec
popa
sbb
jle
adc
adc
add
pop
adc
sub
pop
adc
int
pushf
jle
pop
adc
in
imul
dec
pop
adc
lods
imul
bound
sbb
dec
adc
pop
sub
inc
jg
fcomip
stos
dec
repz
pop
add
stos
imul
pop
pop
or
stos
mov
movsb
pop
pop
add
stos
stos
repz
add
lret
repz
pop
add
stos
jmp
add
pop
add
mov
in
and
pop
or
mov
pop
push
mov
pop
pop
add
stos
imul
pop
pop
add
stos
mov
movsb
pop
pop
add
stos
stos
repz
add
lret
repz
pop
add
stos
jmp
add
pop
add
mov
in
and
pop
or
mov
pop
or
dec
cld
fs
pop
add
movsl
imul
pop
pop
add
movsl
mov
movsb
pop
pop
add
movsl
stos
cld
les
add
lret
cld
in
pop
add
movsl
jmp
add
pop
add
dec
sub
cmp
sbb
push
insl
sub
dec
adc
or
mov
mov
and
mov
add
fs
sub
xor
inc
dec
movsl
dec
jo
add
and
pusha
adc
test
jno
imul
add
movsl
push
add
movsl
cmp
or
mov
add
pop
push
push
sahf
cmp
bound
dec
sbb
shlb
out
sbb
and
mov
and
and
xor
fnstenv
imul
test
stc
mov
rclb
mov
aaa
add
jno
inc
js
adc
push
imul
imul
jle
pop
xor
push
sub
push
mov
lahf
dec
adc
add
mov
add
push
inc
lods
mov
jp
mov
int3
dec
xlat
adc
dec
cld
popa
cmpsl
verw
movsl
cmp
pop
sti
add
movsl
aad
pop
ja
push
pushf
in
cmp
push
adc
popa
push
inc
cld
dec
push
xchg
cld
imul
add
aas
inc
mov
sarl
repz
sub
sub
mov
das
fldenv
cmp
ss
stc
jae
into
adc
out
stos
stc
dec
pop
cmp
push
es
out
iret
cwtl
and
adcb
lret
scas
fidivs
shlb
jnp
xor
ljmp
lret
and
ss
xchg
jl
mov
xor
aaa
ljmp
loope
pop
and
daa
out
pushf
stc
sbb
sti
or
jb
hlt
mov
shrl
fs
adc
or
inc
cmp
push
pop
imul
inc
pop
sahf
out
sbb
jmp
movsb
and
shll
xchg
iret
aaa
hlt
pusha
in
lock
aaa
dec
adc
mov
or
cmp
in
jnp
jle
inc
mov
mov
cld
test
mov
sub
push
push
les
outsl
data16
adc
out
imul
mov
imul
xor
lods
aad
xlat
gs
jno
inc
push
cmp
and
push
add
push
jmp
mov
fmuls
and
sbb
ljmp
out
repz
add
xor
jmp
adc
jmp
int3
dec
out
mov
mov
dec
jmp
cwtl
arpl
pusha
jecxz
fstl
mov
jbe
gs
cmp
push
jne
mov
mov
insb
in
sbb
pusha
es
cmp
sub
add
cmp
data16
sbb
xor
sub
push
adc
dec
or
xchg
je
jno
or
jle
inc
jnp
fidivl
mov
es
and
lock
mov
dec
lret
std
ljmp
cmp
incl
in
clc
aam
cld
jbe
mov
aas
and
mov
or
clc
outsb
inc
push
or
movsl
push
add
movsl
mov
pop
push
dec
mov
mov
add
adc
mov
outsb
popa
into
test
add
sub
pslld
mov
and
leave
or
fs
inc
lahf
push
push
scas
add
pop
xor
pusha
icebp
xchg
outsb
leave
lea
push
clc
pop
cmp
rclb
movsb
leave
rorl
fstpl
jp
push
iret
push
and
aam
push
add
movsl
mov
mov
std
jg
sub
sub
adc
adc
add
sub
mov
sub
pusha
sub
cmp
sub
dec
push
out
and
unpckhps
push
sti
push
dec
outsb
jne
pushf
sub
orb
call
inc
push
and
or
ds
sub
loopne
and
outsl
add
mov
mov
pop
sub
movb
mov
loop
mov
mov
mov
xchg
es
bound
jle
sbb
inc
rcrb
and
cltd
pop
iret
cmp
movsl
iret
inc
xchg
xor
cltd
inc
jbe
and
lock
inc
or
xchg
push
sub
jmp
mov
cmp
or
cmp
pop
loopne
ret
stc
adc
stos
jg
pop
adc
mov
repz
pop
sbb
jnp
pop
fildl
sub
adc
dec
bound
jle
pop
je
fs
cmp
push
cmp
cwtl
shl
shll
bound
sub
loopne
mull
iret
adc
xor
sbb
repz
jae
outsb
sbb
xor
pop
mov
cltd
lret
mov
lock
hlt
repz
add
mov
mov
jp
push
or
les
jnp
jbe
push
outsb
pop
dec
insl
push
movsl
inc
pop
test
inc
pop
divb
inc
inc
std
pop
jno
fdivr
add
or
cmp
mov
add
in
sahf
adc
inc
mov
and
pop
outsl
pop
jp
sbb
or
imul
das
mov
pop
inc
add
sti
arpl
ds
sub
and
adc
mov
leave
pop
rolb
mov
cmp
push
je
arpl
jle
and
test
add
add
mov
mov
add
paddq
sub
and
addl
inc
cmp
jecxz
pop
cmp
dec
fadds
sbb
adc
jbe
stos
pushf
jmp
pop
cld
out
stos
fs
xor
sarl
add
movsl
adc
movsb
into
dec
xor
cmp
out
ds
int3
push
invd
in
repnz
add
pop
push
stc
jl
or
dec
fmuls
xlat
stos
xor
iret
sub
iret
popw
or
xor
sbb
sti
leave
pop
sub
lret
jns,pt
das
mov
outsl
dec
stos
adc
mov
dec
data16
cs
jg
pop
dec
or
add
or
or
out
lock
adc
lds
push
shl
and
or
aad
fstl
pop
pop
sbb
inc
mov
rolw
adc
xchg
imul
iret
lret
adc
test
dec
xchg
jo
cld
adc
data16
in
pop
and
xor
push
fs
imul
cld
enter
js
add
cmp
adc
mov
dec
or
inc
mov
adc
dec
and
pop
rorb
aad
enter
mov
cmp
mov
and
and
imul
xorb
push
inc
or
mov
decb
pop
jns
pop
add
push
dec
jge
jo
adc
pop
orb
lock
and
dec
test
jecxz
aam
js
add
dec
and
bound
sub
xorl
push
inc
pop
xchg
insl
jmp
dec
push
ret
cld
cmp
popa
int
iret
cmp
push
or
push
popa
cli
inc
mov
cli
lock
ret
and
or
cmp
mov
rorb
mov
xchg
imul
in
lds
mov
sbb
pop
jmp
in
sub
call
arpl
or
adc
add
cmp
cltd
jns
dec
lcall
jno
mov
push
mov
sbb
pop
les
lock
mov
dec
je
pop
mov
push
push
sbb
pop
add
inc
and
push
fildl
leave
call
js
add
mov
fdiv
insl
push
or
jo
in
xor
jle
jecxz
jb
fstps
xchg
test
pop
jl
iret
mov
inc
mov
or
push
or
xor
daa
add
xor
cmp
mov
inc
pop
and
sbb
int
int
mov
and
adc
cltd
shrb
ret
imul
sub
push
fiaddl
rcr
lret
add
mov
out
hlt
xchg
sarb
popf
into
ljmp
or
or
adc
pop
loope
scas
lcall
add
leave
fsubrs
dec
xor
mov
add
sti
gs
in
jbe
inc
std
shrl
push
and
jnp
mov
mov
jne
dec
adc
inc
sub
in
jge
mov
xchg
mov
inc
add
inc
xchg
push
mov
push
daa
pop
xchg
ja
pop
adc
enter
mov
push
inc
je
fnstcw
mov
sbb
ds
test
xchg
into
jmp
enter
popf
xchg
inc
in
mov
cmp
lock
shlb
cs
sbb
ljmp
sahf
mov
xchg
das
aas
daa
push
shll
mov
psubq
imull
test
icebp
mov
add
lret
repz
addr16
mov
int3
xchg
in
push
pushf
mov
add
adc
sbb
fcompl
add
movb
xchg
jle
sbb
push
iret
inc
sbbl
ror
xchg
mov
mov
dec
sub
out
lock
es
mov
pop
ss
or
sub
add
je
add
or
aas
pop
xor
lahf
negb
cmp
pusha
add
xor
jmp
jecxz
test
sbb
in
cmc
mov
aaa
push
jecxz
dec
int3
xor
das
and
push
push
cmp
orl
outsl
push
lods
jmp
cmp
lds
push
push
inc
xchg
jp
lret
aam
mov
dec
mov
pop
add
iret
dec
sbb
pop
mov
adc
sbb
shll
adc
mulb
ret
add
std
xchg
lods
jp
mov
xor
inc
adc
add
sbb
imul
pusha
sub
ret
xchg
cltd
call
xchg
jge
adc
loopne
add
mov
jecxz
loopne
jecxz
and
and
dec
scas
sub
lcall
call
sbb
enter
fldl
dec
sub
daa
mov
out
add
push
ljmp
in
shll
mov
ret
sub
mov
push
mov
or
jg
adc
adc
jbe
inc
pop
inc
or
ret
mov
and
in
dec
setge
xor
lock
clc
lcall
test
js
lcall
fidivrs
out
dec
xchg
inc
pop
cli
push
sbb
insb
and
pusha
pop
rolb
out
push
inc
push
pop
push
inc
dec
jno
xchg
jmp
xchg
inc
data16
mov
cmp
nop
stc
sub
lcall
int
rcrl
mov
cmp
fcom
pushf
sub
or
adc
enter
or
in
mov
add
test
dec
sbb
ret
xchg
je
cmp
and
call
fsubs
add
das
popa
dec
jg
mov
xor
test
push
push
andb
cmpsl
movsl
and
std
mov
or
adc
data16
in
cli
xchg
out
inc
pop
sti
cwtl
inc
popf
or
jecxz
xchg
test
pop
jns
sub
stc
imul
or
pop
enter
je
lcall
or
dec
out
fdiv
test
push
fisubl
sub
pop
outsl
add
orl
dec
dec
xchg
xor
loope
add
cwtl
data16
or
into
cmp
shll
mov
lcall
add
or
inc
popl
popa
xchg
int3
roll
movsb
iret
mov
xchg
out
leave
add
or
inc
and
mov
fsubl
filds
dec
sti
pop
xor
xlat
push
iret
dec
roll
sbb
roll
pop
jmp
orl
mov
mov
jne
and
in
lahf
inc
das
loope
popf
std
test
sbb
clc
sub
andl
scas
cmpl
jmp
out
mov
mov
jle
pop
hlt
nop
adc
mov
shrb
leave
xchg
test
rclb
es
dec
xchg
jns
push
inc
pushf
jle
cld
sbb
sub
test
aas
aad
test
mov
popa
cmp
or
jnp
popf
stos
pushf
sub
daa
sub
in
insl
clc
daa
push
or
ficomps
add
loope
xchg
clc
xchg
out
mov
enter
xchg
subl
mov
xor
push
and
dec
dec
fs
dec
test
jp
sarl
icebp
sbb
add
sbb
pop
loopne
inc
and
lcall
iret
sub
cmp
dec
sahf
push
add
add
nop
addb
adc
test
out
aad
shrb
in
arpl
pop
mov
inc
sub
nop
inc
mov
xchg
push
sahf
cld
out
or
xor
mov
aad
out
inc
dec
lock
ss
aaa
pop
mov
lret
adc
pop
outsb
dec
and
ljmp
lods
mov
jp
dec
das
sbb
test
cmp
into
sbb
xlat
mov
bound
pop
xchg
dec
add
cmp
adc
adc
fisubs
add
dec
je
jbe
lods
cmp
inc
jmp
xor
push
loope
mov
xchg
pop
mov
pop
sub
in
gs
jb
ds
outsb
inc
sbb
leave
aaa
ljmp
insl
xchg
push
roll
jne
in
inc
test
add
push
cmpsb
mov
fldt
xchg
cmp
or
cmp
pop
orl
xlat
dec
push
pop
sbb
aad
push
popa
mov
cltd
arpl
loopne
pushf
or
sub
popa
adc
add
enter
mov
xchg
cltd
hlt
ret
mov
test
inc
nop
mov
jae
sarb
clc
jge
loopne
jp
aad
dec
and
ljmp
inc
xor
xchg
jl
test
mov
jge
adc
jmp
cwtl
fcmovnbe
mov
mov
sub
loopne
cmp
icebp
lret
shll
mov
hlt
popa
pop
ds
mov
or
adc
add
fcoms
lret
mov
pusha
push
cmc
ret
xor
sub
xchg
sbb
xor
lret
rcrb
xor
or
adc
mov
scas
out
aas
mov
sbb
mov
mov
into
push
aad
out
xor
dec
xchg
jbe
xchg
mov
inc
fs
dec
pop
sub
sub
movb
ret
sbb
mov
sbb
inc
pop
push
es
imul
or
out
pop
stc
dec
pop
adc
push
fldl
in
into
push
dec
add
fisubrs
dec
jecxz
mov
pop
fisubrs
outsl
jge
push
xchg
cld
pop
pop
jne
adc
aaa
dec
mov
xchg
mov
negb
mov
sbb
sahf
xchg
shrl
mov
or
ds
dec
loop
adc
push
and
xchg
pop
les
es
cs
movl
imulb
sub
leave
cwtl
fistl
xor
pop
mov
add
addb
icebp
push
arpl
jns
repz
std
pop
sub
sti
xchg
mov
out
in
out
sahf
ret
sbb
jp
dec
xchg
jno
test
fwait
push
add
push
push
repz
dec
cmpsl
movsl
clc
jl
std
setne
pushf
cmp
ja
cmp
add
in
pop
pop
into
movsb
or
test
cmp
pop
mov
cmp
aam
in
loope
inc
and
clc
ror
jecxz
pop
sbb
or
pop
sar
jg
out
shrl
mov
lds
pop
mov
idivb
ror
ja
dec
es
push
mov
push
rorl
xchg
sti
mov
cmp
mov
cmp
popa
jbe
add
dec
dec
cmp
jle
inc
sbb
leave
jle
jne
or
cmpsl
mov
cwtl
rcll
fnstcw
mov
test
jecxz
sbb
inc
out
adc
arpl
jl
pop
mov
int
pushf
in
adc
add
add
addl
cmp
and
push
xor
jge
dec
dec
push
dec
push
adc
repz
xchg
mov
loopne
ret
adc
mov
repnz
push
hlt
adc
fsubrs
inc
divb
and
xchg
push
lock
jle
xor
mov
mov
push
mov
mov
shrl
nop
andb
xchg
mov
add
js
xor
rcll
leave
and
mov
or
push
pop
movsb
dec
jl
mov
push
xor
addr16
in
sbbl
mov
mov
daa
lea
add
push
fs
pop
pop
sbb
js
sahf
mov
ds
mov
xlat
fdivs
xor
shrl
insb
clc
repz
fsubrs
mov
enter
mov
cld
insl
xchg
js
iret
sahf
inc
and
pop
nop
inc
inc
lret
ret
xchg
in
pop
or
cmp
push
dec
jp
arpl
lret
repz
inc
shlb
fidivrs
cmp
add
dec
fs
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
or
add
call
add
add
add
add
add
add
aam
add
add
add
roll
or
add
test
inc
add
add
add
add
pop
roll
adc
add
sub
inc
add
add
add
inc
add
add
add
rolb
sbb
add
mov
add
add
inc
add
add
add
inc
add
add
add
rolb
sbb
add
loopne
inc
add
add
rcl
inc
add
add
rcl
add
add
mov
inc
add
add
add
add
pushf
roll
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
push
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
repnz
inc
add
popf
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
aad
add
add
add
aad
add
mov
inc
add
inc
add
inc
add
aad
add
mov
inc
add
inc
add
addl
add
inc
add
add
add
xor
popa
add
add
clc
inc
add
push
add
inc
add
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
inc
add
dec
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
inc
add
inc
add
inc
add
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
inc
add
dec
add
dec
add
xor
add
xor
xor
add
xor
add
add
mov
inc
add
inc
add
inc
add
xor
add
xor
xor
add
xor
add
add
movsb
inc
add
push
add
inc
add
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
pushf
inc
add
dec
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
test
inc
add
add
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
add
inc
add
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
push
inc
add
dec
add
inc
add
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
pushf
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
inc
add
push
add
inc
add
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
pushf
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
inc
add
dec
add
inc
add
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
pushf
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
add
push
add
inc
add
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
pushf
inc
add
inc
add
aad
add
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
pushf
inc
add
push
add
aad
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
pushf
inc
add
dec
add
aad
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
pushf
inc
add
push
add
aad
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
pushf
inc
add
push
add
aad
add
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
pushf
inc
add
inc
add
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
pushf
inc
add
dec
add
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
pushf
inc
add
pop
add
push
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
pushf
inc
add
pop
add
pop
add
xor
add
xor
xor
add
sbb
adc
add
or
adc
or
add
inc
add
xlat
inc
add
push
add
xlat
inc
add
dec
add
xlat
inc
add
inc
add
xlat
inc
add
push
add
xlat
inc
add
push
add
xlat
inc
add
inc
add
inc
add
pop
dec
add
dec
add
dec
dec
add
dec
add
push
dec
add
push
dec
add
inc
add
inc
add
add
push
add
add
inc
add
inc
add
push
add
inc
add
add
fadds
inc
inc
push
add
inc
add
push
add
inc
add
inc
add
inc
add
inc
add
faddl
inc
dec
push
add
fildl
inc
dec
push
add
fildl
inc
dec
push
add
fildl
inc
dec
inc
add
fildl
dec
dec
inc
add
fildl
inc
dec
inc
add
fildl
pop
dec
dec
add
fildl
pop
dec
dec
add
dec
push
add
dec
add
dec
push
add
add
dec
add
inc
add
push
add
inc
add
inc
add
add
push
add
fildl
inc
dec
inc
add
fildl
inc
dec
dec
add
inc
add
inc
add
fildl
inc
dec
inc
add
fiaddl
inc
dec
dec
add
fiaddl
inc
dec
dec
add
fiaddl
inc
dec
pop
add
fiaddl
inc
dec
push
add
push
add
dec
inc
add
push
add
dec
push
add
inc
add
inc
add
inc
add
inc
add
add
dec
add
add
push
add
inc
add
add
fiaddl
inc
inc
inc
add
inc
add
add
flds
inc
inc
push
add
flds
inc
dec
dec
add
flds
dec
push
push
add
flds
dec
dec
push
add
push
add
dec
dec
add
push
inc
add
add
push
add
add
inc
add
add
dec
add
inc
add
dec
add
inc
add
inc
add
flds
inc
push
inc
add
flds
inc
push
inc
add
fadds
inc
push
inc
add
fadds
inc
push
inc
add
fadds
inc
push
dec
add
dec
add
dec
add
push
dec
add
push
inc
add
add
pop
add
add
push
add
inc
add
push
add
inc
add
pop
add
inc
add
push
add
inc
add
inc
add
inc
add
add
fadds
inc
dec
inc
add
inc
add
push
add
fadds
inc
dec
push
add
test
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
fldl
cld
faddl
hlt
faddl
call
faddl
loopne
inc
add
faddl
fcomp
inc
add
faddl
rcr
inc
add
faddl
enter
faddl
rcr
add
inc
add
faddl
pushf
faddl
xchg
faddl
aam
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
jg
test
add
xorb
add
add
lock
call
push
add
push
add
test
inc
add
add
add
incl
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
adc
sbb
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sub
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
jno
data16
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
bound
jne
ja
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
insl
add
outsb
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
