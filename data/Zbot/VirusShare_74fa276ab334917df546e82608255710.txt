pop
lcall
add
add
es
addr16
push
add
xchg
inc
add
or
xor
or
pusha
iret
fcompl
jb
jo
and
adc
mov
js
das
das
cld
mov
je
data16
cmp
lods
pop
enter
fnstcw
push
lods
xchg
or
imul
movl
lods
jmp
in
mov
add
jge
pop
push
jno
or
add
add
bound
inc
clc
add
jge
movntq
out
xor
lahf
push
pop
and
ljmp
movsl
fs
pop
fildl
fstps
adc
frstor
adc
pop
jb
enter
enter
jg
sbbb
xchg
add
and
sbbb
shll
and
sbbb
jb
enter
enter
hlt
shlb
jb
jmp
push
adc
xchg
enter
mov
int3
cmpsl
mov
mov
in
nop
dec
subb
and
pop
push
add
mov
dec
js
xchg
and
test
cmp
pop
lods
stos
in
and
dec
sahf
fnsave
xchg
lea
movsl
dec
inc
scas
push
loopne
jge
lods
adc
xor
jl
fucomi
pop
jl
es
lods
dec
jb
leave
lods
shlb
ret
cld
mov
sub
mov
mov
and
or
fwait
shlb
imul
cltd
mov
mov
jl
xchg
add
fists
dec
cld
and
mov
xorb
mov
xchg
xchg
dec
test
mov
enter
in
int3
sub
shl
mov
rol
add
xchg
mov
jbe
ds
push
cmp
dec
cmp
mov
add
sub
jnp
fs
lods
and
sub
and
imul
cwtl
mov
ficomps
add
add
nop
sub
int3
xlat
mov
xchg
adc
xchg
in
xchg
dec
fcmovnbe
add
out
fnstsw
lret
and
bound
mov
inc
or
push
fsubrl
sub
cmp
dec
ss
adc
mov
rolb
and
sub
xchg
pop
mov
xchg
nop
nop
xor
cwtl
pop
xor
and
xor
mov
xor
push
leave
fidivrl
xchg
sbb
sbb
mov
nop
addr16
int
cwtl
add
add
js
or
and
out
sti
and
lcall
inc
pop
mov
ret
fidivrs
rorb
lock
dec
pop
scas
insb
psubw
xor
adc
aad
idivw
jle
test
cmpsl
stc
mov
in
dec
add
dec
idiv
aas
fstl
daa
push
push
loope
push
push
xor
push
mov
lea
inc
leave
aaa
inc
rcrb
push
add
sbb
orb
xor
push
enter
adc
shrb
and
pushl
jg
inc
or
add
xor
fs
orl
pop
pop
ret
push
mov
add
insl
jge
ret
pop
and
repz
mov
hlt
lea
jge
aas
mov
je
rcl
pushl
jae
js
push
test
or
fisttpl
nop
or
cwtl
adc
and
movsb
sbb
and
dec
xor
lods
and
sub
rorb
xor
int
mov
in
inc
fmuls
mov
xchg
ror
push
add
hlt
in
in
out
push
add
pusha
mov
outsl
mov
push
lea
pop
movl
ficompl
outsl
add
nop
mov
mov
je
cwtl
adc
pop
push
loopne
nop
jne
adc
push
je
adc
push
mov
mov
in
or
add
or
ret
xchg
jg
jecxz
xchg
outsl
cmpl
popa
mov
mov
add
ret
cld
mov
push
test
insb
psubsw
loopne
push
sbb
mov
pusha
adc
jmp
push
dec
subb
jmp
mov
xchg
push
mov
outsb
add
sbb
push
mov
or
xchg
mov
repnz
inc
jg
dec
push
push
fisttps
dec
inc
pushf
push
flds
outsb
fidivl
pop
ret
push
mov
data16
fbld
insb
pop
and
sbb
and
pop
xchg
adc
out
and
mov
punpckhbw
or
mov
and
inc
jl
into
std
mov
or
jg
mov
shlb
gs
and
pop
mov
sub
out
pop
adc
fsubs
or
test
test
pop
inc
insl
pop
xor
lea
mov
or
pop
jne,pn
sti
mov
fs
or
je
nop
or
insb
cmp
cmp
mov
jnp
je
or
ret
pop
movsl
lds
fisttps
in
mov
insl
xor
pop
aam
fstps
fidivrl
pop
or
lods
call
sbb
out
xor
sub
data16
adc
outsl
or
or
mov
or
xchg
pop
or
sbb
mov
xchg
inc
or
add
das
fsts
push
adc
movsl
lret
xlat
lock
adc
fisttpl
mov
sti
jns
mov
adc
pop
or
loope
sbb
mov
pop
push
sbb
fnstcw
jp
cmp
je
jmp
jmp
pop
jne
fcomps
jbe
sbb
and
jmp
js
jmp
adc
ret
sar
add
adc
int3
jo
mov
pop
fnstsw
pop
test
jnp
pop
fistpl
xchg
dec
pop
cmp
ljmp
sbb
pop
cmp
add
es
lea
js
adc
js
inc
adc
imul
js
adc
sbb
imul
lods
mov
test
sti
adc
or
pop
cmp
jl
jnp
or
aas
jge
cmp
jg
lahf
mov
mov
add
sti
test
sbb
insb
sub
or
in
rcrl
rcrb
mov
loope
cmp
int3
ret
inc
push
movsb
sub
movzbl
push
or
jne
adc
or
cmp
in
dec
sbb
sbb
pop
mov
stos
jmp
mov
add
jmp
adc
add
ficomps
fisubs
inc
insb
mov
jl
or
or
or
jge
mov
mov
insb
sub
int
and
rolb
out
in
std
jp
push
je
adc
clc
lods
and
xchg
add
dec
out
aad
inc
and
cltd
mov
enter
and
xlat
add
iret
shlb
mov
mov
jo
lds
add
adc
pusha
xor
in
sub
ret
paddusb
int3
add
mov
sbb
mov
adc
sbb
fs
inc
and
daa
jmp
xchg
pop
add
jne
sbbb
push
xor
mov
or
inc
int3
and
jecxz
lods
mov
mov
xor
adc
imul
adc
scas
sarl
gs
pusha
insb
xchg
sbb
jl
add
fstpt
sbb
and
mov
pusha
mov
ds
pushl
xchg
mov
sbb
into
cmp
mov
jle
sub
adc
xor
and
outsb
inc
jge
test
lcall
pop
es
mov
outsl
mov
mov
xor
pop
dec
ret
sub
movsl
imul
ret
ficompl
in
or
cmp
adc
mov
add
jb
stos
add
rorb
cmp
psrlq
ljmp
sbb
xor
sub
mov
loope
cmp
lds
sub
jmp
jmp
push
dec
adc
lret
add
dec
pop
xchg
test
add
push
xor
xor
movb
inc
fldl
cmp
sbb
mov
adc
pop
jns
gs
stos
pop
push
pop
or
xchg
push
in
inc
inc
mov
mov
insl
or
mov
inc
mov
adc
jne
outsl
mov
add
sti
je
cmp
dec
dec
mov
xor
adc
jbe
insl
sub
clc
and
sbb
jne
add
pushf
push
scas
xchg
inc
inc
and
cwtl
cli
sbb
popf
jmp
pop
adc
add
loope
cmp
or
or
int
in
push
aam
fldl
and
dec
mov
or
es
sub
mov
shl
scas
test
dec
and
inc
ds
adcb
jl
sub
mov
mov
adc
xor
in
sub
xor
sub
imul
add
dec
test
sub
mov
sbb
mov
jp
add
and
adc
cltd
mov
movsb
lods
mov
outsb
insl
mov
movsb
cmp
fcoml
les
add
xor
or
or
sub
shl
imul
and
outsb
cmp
mov
enter
pop
orb
cmp
cmp
inc
mov
decl
add
mov
or
or
sbb
cltd
dec
or
push
js
xor
add
mov
jae
adc
xchg
int
aad
sbb
test
adc
ficompl
insb
dec
or
dec
aam
dec
adc
adc
pop
idivl
jno
pop
dec
sbb
add
adc
add
dec
adc
dec
addr16
inc
add
or
mov
and
cs
adc
adc
mov
icebp
sbb
scas
xor
mov
test
cmp
mov
dec
clc
scas
jmp
mov
and
jo
sti
lock
add
or
jnp
mov
mov
repz
adc
adc
fwait
sub
cmp
and
add
sbb
leave
and
pop
cwtl
ss
mov
pop
mov
enter
mov
test
xor
cmpsb
daa
dec
xor
mov
mov
jg
sbbl
mov
mov
mov
mov
mov
xor
mov
inc
inc
shr
jge
cmp
sub
imulb
xor
xlat
jmp
rorl
mov
push
mov
repnz
xor
sub
enter
cpuid
mov
and
mov
cs
or
repnz
repnz
je
or
add
sub
adc
add
lahf
std
push
push
dec
dec
ret
pop
pushf
ret
jmp
enter
jo
js
aas
aad
jl
outsb
test
je
lea
jmp
lea
jbe
incl
mov
add
test
jne
sub
ss
add
add
lods
mov
push
xor
test
neg
fildll
pop
xchg
je
add
jne
add
mov
std
fucomip
adc
or
or
lcall
sub
std
fwait
add
jne
adc
mov
mov
sti
cmp
or
jle
and
stc
popa
jl
jmp
sub
push
fistpll
push
sub
push
sbb
push
adc
aas
imul
jg
enter
mov
cltd
add
adc
mov
mov
jmp
and
sbb
cmpsb
rorb
jl
and
push
out
sbb
daa
ret
adc
outsl
xchg
mov
ds
jo
xor
mov
push
jns
dec
cmpb
jge
jmp
aaa
cmp
add
sub
or
inc
pop
cwtl
fsts
xor
test
pop
and
je
neg
adc
neg
pop
jg
jge
pop
push
mov
push
call
ljmp
je
push
push
push
push
add
fsin
add
movb
pop
aas
or
add
ss
push
call
mov
mov
mov
mov
add
xor
movl
pop
pusha
or
mov
pop
push
xchg
cmp
decl
sti
or
add
push
push
call
mov
adc
cmp
out
sbb
sbb
xchg
cwtl
sti
test
daa
push
mov
in
lds
insb
and
sbb
jo
or
mov
pop
push
push
push
adc
fld
xchg
or
add
push
push
mull
and
cmp
pop
repnz
push
sub
adc
out
fs
loop
cwtl
negl
mov
pop
ret
xor
aas
fcoms
aaa
sbb
dec
mov
andl
test
je
and
cmp
jg
or
sub
cmpb
dec
mov
dec
mov
loopne
push
pushl
jno
sbb
les
cmp
je
pop
andb
and
in
in
or
push
lock
xor
push
push
jecxz
cmp
lods
pop
adc
testb
icebp
jle
movzwl
sti
and
jg
jecxz
cmp
sub
pop
or
insb
sti
outsl
or
inc
inc
inc
inc
dec
jne
xor
xor
lods
add
add
insl
test
sbbl
xor
ljmp
xor
cmp
jne
mov
push
call
mov
mov
in
sub
push
xlat
mov
push
mov
xchg
movb
or
icebp
pop
adcb
xor
cmp
sub
fistpll
stos
sbb
jbe
add
add
rcl
jo
adc
jge
push
lea
push
push
sbb
mov
xor
pushl
fucomp
push
adc
mov
and
add
cmp
jle
mov
imul
leave
jbe
inc
clc
xor
in
lock
dec
in
mov
dec
movsb
decl
adc
sub
out
jl
dec
push
or
push
cmp
jbe
push
or
cmp
outsb
mov
push
fiaddl
and
cmp
sbb
adc
lock
shlb
xchg
or
mov
mov
ret
jbe
fldenv
rcr
lds
notb
addb
add
push
and
fcmovnb
decl
loop
or
sar
or
push
or
lods
std
or
fnstcw
mov
mov
fmul
add
add
xlat
add
add
gs
cmp
push
mov
in
pop
jl
pop
cwtl
push
inc
mov
mov
pop
mov
clc
out
mov
mov
inc
cmp
je
mov
cmp
fdivrl
shlb
push
push
push
sahf
push
js
jae
mov
dec
iret
cli
xor
outsl
pop
clc
cmp
pop
adc
push
jb
lea
push
lcall
add
cmp
jl
sub
int
jns
adc
int
sub
inc
pop
cltd
or
ret
test
add
mov
incl
stc
jle
out
dec
cmc
shll
jne
fstpl
inc
jmp
add
inc
mov
add
push
lea
in
mov
loop
jge
mov
lret
test
or
sbb
dec
fldl
sahf
jmp
and
mov
mov
stos
iret
sti
jg
jg
cs
fisubs
in
jecxz
pop
add
add
add
lods
cmp
dec
std
push
scas
sar
sbb
cmp
mov
mov
jge
pop
fildl
mov
cli
roll
fisubrs
push
jne
mov
push
or
test
lods
add
add
subl
xor
clc
sbb
cli
add
cmp
add
jg
jle
mov
daa
add
neg
and
insb
xor
and
add
dec
outsb
sbb
mov
roll
push
mov
or
sahf
mov
jle
call
inc
mov
jmp
mov
lahf
mov
lahf
add
mov
or
sbb
outsb
neg
mov
mov
adc
mov
sbb
repz
xchg
outsb
fdivs
mov
sbb
sbb
and
ja
orb
repz
sub
push
add
pop
mov
hlt
xchg
mov
imul
push
addl
pand
loopne
or
sbb
sbb
mov
rcrb
in
xchg
sarl
jmp
addr16
cmp
mov
mov
or
add
pop
cmpl
xlat
jnp
jno
push
inc
leave
jo
lea
pop
test
out
or
jno
je
push
sti
cli
imulb
push
mov
mov
insb
test
xchg
rolb
add
sbb
lcall
in
shrl
out
ficoms
or
loopne
sub
insb
nop
test
jle
mov
fistps
push
lcall
in
sbb
cmpsl
filds
je
jnp
pop
jb
call
jnp
in
jo
movsl
fwait
addr16
mov
test
jne
jb
in
rolb
jl
jbe
jle
nop
sbb
jo
mov
fadds
fildl
xor
add
rolb
add
push
mov
push
xor
rolb
sbb
and
aad
imul
dec
or
and
jne
xchg
push
je
jle
mov
cmc
push
mov
push
jae
xchg
xchg
xor
add
jnp
jge
ss
jmp
sub
mov
cmp
popf
out
loope
xor
xor
add
faddp
xchg
xchg
add
int
sti
pop
add
mov
decl
lds
jne
mov
mov
aam
or
push
sub
push
aaa
dec
fnstenv
insl
ret
popa
push
std
out
push
adc
in
cmp
ret
insl
mov
or
pop
das
cld
mov
or
push
or
push
mov
imull
lds
mov
sbb
sti
mov
repnz
push
push
fisubs
dec
mov
je
xor
add
mov
mov
jmp
aas
inc
dec
jne
cmp
push
jne
add
jne
gs
cmp
sti
repnz
push
adcl
push
mov
push
sbb
inc
sbb
sub
mov
sti
and
dec
jo
in
pop
or
adc
or
outsb
sub
cmovb
push
cwtl
cmp
add
jo
stos
fadds
cltd
inc
pop
faddp
mov
aaa
sub
inc
loope
pop
mov
ja
je
xor
int3
add
xchg
jg
pop
and
or
cld
movl
mov
adc
stc
jge
fmuls
xchg
xchg
fs
inc
outsl
test
and
int
inc
dec
cs
jmp
inc
jnp
add
pop
pop
adc
aas
cli
adc
daa
dec
mov
sti
jle
les
mov
insl
mov
or
add
adc
pop
jne
arpl
mov
je
jmp
and
and
scas
inc
sbb
sub
cmp
sbb
inc
in
sub
mov
into
xchg
sbb
ret
mov
mov
enter
clc
fld1
mov
sub
cmp
jp
pop
das
mov
test
push
mov
push
in
adc
push
inc
push
add
and
sbb
sub
mov
xor
mov
mov
xor
adcl
adc
xchg
add
in
mov
pop
push
mov
pop
test
dec
push
pop
jnp
dec
add
push
insb
leave
xchg
push
cmp
fs
push
xchg
adc
push
push
ret
pusha
ljmp
adc
cs
add
pop
jns
sub
add
out
int
fsubrs
sbb
add
mov
mov
sbb
sbb
sti
fisubs
sbb
push
and
insl
inc
cmp
mov
je
dec
push
adcl
mov
sub
nop
and
sub
into
insb
and
pop
dec
dec
insb
leave
nop
jge
out
inc
cmp
or
mov
inc
lea
add
mov
dec
dec
xor
xor
push
or
fistps
in
loop
stc
adc
decb
or
es
push
jmp
push
or
arpl
and
pop
imul
sbb
push
sbb
add
add
mov
fiadds
add
mov
jae
inc
andb
stos
dec
mov
es
je
cmpl
hlt
lea
sbb
inc
sbb
mov
pop
aaa
cmpb
repnz
adc
dec
mov
push
enter
sbb
lea
push
fs
sahf
fcomip
adc
arpl
pop
pop
jne
push
mov
xchg
fs
mov
mov
cld
sub
rcrl
cld
loopne
jo
popa
outsb
lea
loope
in
xchg
lcall
dec
bound
ja
or
iret
mov
add
hlt
mov
jno
inc
clc
jne
adc
or
insl
je
add
inc
inc
add
inc
or
mov
cmp
sbb
jo
xor
jmp
mov
lret
or
scas
aam
jb
adc
fnop
dec
pushf
movsl
mov
mov
push
cmovl
inc
jae
or
push
loope
inc
and
outsb
xchg
or
xchg
clc
mov
sbb
mov
std
es
jmp
pop
je
mov
mov
pop
inc
push
inc
jae
pop
cmp
push
pop
sti
add
ds
rolb
cmp
jle
xorps
loopne
inc
adc
push
sub
push
dec
mov
pusha
fimuls
ljmp
es
fiadds
rclb
adc
addl
in
xor
testb
adc
adc
outsb
or
addb
repz
push
dec
enter
jl
aad
mov
test
les
mov
sahf
inc
mov
nop
nop
outsb
push
push
push
add
push
mov
push
sub
jbe
inc
fadds
daa
and
push
xchg
mov
jae
imul
out
cmp
dec
or
cltd
sbb
or
std
or
and
sbb
sub
das
xor
adc
mov
addr16
popa
rolb
lods
inc
or
rcl
mov
test
adc
clc
pop
leave
shrb
bound
int3
rolb
inc
sub
ja
pop
dec
cmp
or
cld
add
shlb
mov
ljmp
lock
or
xchg
insl
int3
jmp
pop
sub
insl
xor
call
or
mov
aaa
les
int
fiadds
je
pop
stc
leave
jae
inc
rol
insl
xchg
sbb
enter
mov
rorl
clts
je
stos
and
decb
icebp
mov
sub
jl
mov
cmp
add
jg
shrb
fs
jl
inc
or
dec
pushf
lahf
push
mov
into
push
or
cwtl
sub
int3
inc
adc
in
movsb
rolb
cmpsl
shlb
cwtl
mov
pop
cmp
loop
mov
lods
add
je
pop
add
jbe
add
jnp
dec
add
pop
pop
cmp
mov
addr16
enter
push
add
adc
jnp
scas
sbb
loopne
cmp
adc
fwait
or
fcmovu
pop
xor
call
pop
inc
or
insl
dec
and
xchg
or
in
push
and
mov
sbb
fwait
xor
icebp
mov
sbb
scas
jmp
shlb
mov
push
sub
push
add
push
sarb
sbb
and
cmp
mov
sbb
dec
inc
mov
imul
test
push
adc
adc
fstpt
test
sbb
sub
inc
jae
arpl
je
sti
pop
mov
push
sbb
add
mov
adc
and
sbb
cmp
fidivl
pop
sbb
xor
mov
in
or
adc
sub
scas
sbb
cmp
xchg
adc
clc
sbb
ret
outsl
cmp
das
fcoms
jno
call
cmp
cmp
repnz
mov
xchg
scas
sbb
mov
jmpw
and
fildll
cwtl
push
call
pop
repz
inc
cmp
adc
and
cmp
aaa
fxch
xlat
sbb
jmp
push
xor
mov
or
xor
xchg
mov
pop
adc
ss
dec
shl
and
push
lea
push
sub
jge
add
jle
inc
pop
nop
lcall
inc
movsl
pusha
add
movb
lea
and
jp
aaa
fadds
sub
inc
cmpb
jne
data16
pop
fsubs
lret
scas
sub
xorl
mov
testb
sbb
xor
mov
push
push
sub
pop
mov
stos
add
enter
lea
ss
jle
into
repnz
test
js
xchg
cli
mov
cmpb
pop
loopne
jp,pt
pop
adc
inc
inc
push
clc
shll
mov
pushf
outsb
mov
leave
or
sbb
gs
sar
lcall
pop
fadds
mov
movsl
cli
pusha
xlat
shl
insl
pop
test
push
mov
je
pusha
outsb
loopne
pop
and
adc
in
dec
call
shl
arpl
movsl
or
adc
mov
push
push
jle
adc
pop
inc
xchg
pushf
jmp
push
cmp
imul
xchg
mov
mov
xchg
xchg
fwait
ss
xchg
adc
jb
jnp
mov
xchg
adc
pop
in
daa
pushf
pop
das
ja
push
add
add
lea
cmpb
in
jne
cmp
mov
ljmp
pop
testb
add
lea
inc
sbb
sbb
out
enter
icebp
bound
cwtl
movsl
push
mov
call
in
mov
xchg
xor
lahf
lods
xchg
mov
jb
sbb
scas
or
jne
subl
je,pt
imul
insb
and
test
je
push
sbb
loop
xor
sarb
pop
sub
in
lcall
cld
mov
pop
inc
bound
cmpsb
and
out
xchg
cmpsl
sub
scas
pop
push
mov
fstl
push
dec
mov
out
adc
rcrl
loopne
les
fsubp
sbb
mov
add
rcr
or
pop
mov
fsubp
fdivr
fxch
fstpl
mov
sbb
fldcw
sbb
and
xor
fadd
fdiv
and
adc
fmull
out
adc
jmp
adc
cwtl
ret
and
stc
sahf
in
ret
rcrl
adc
jns
inc
or
call
popf
in
imulb
ret
repnz
loopne
cltd
in
mov
loopne
fdivrp
or
in
xor
fnstenv
shlb
fcomp
jae
lret
jmp
sub
sub
test
mov
sub
imul
fstl
imul
insl
imul
push
sarb
push
movsl
ffree
lods
jecxz
lods
mov
pusha
insl
sub
fildl
fisubl
ret
or
pop
fadds
loopne
add
pop
or
ret
jbe
rorb
loop
imul
inc
push
ss
cmp
pop
xchg
jecxz
xchg
jo
jle
xor
add
add
cmp
pop
jl
mov
mov
xchg
clc
add
lea
or
xor
stc
fstpl
jle
in
mov
imul
mov
shlb
rcr
gs
jle
icebp
push
out
ss
add
test
jmp
out
sbb
pop
jae
dec
cmp
cmp
push
dec
out
dec
jge
pop
call
sub
pop
mov
jle
jb
add
push
jae
mov
sub
pop
adc
mov
pop
daa
jo
or
shl
aam
fadds
and
arpl
fstpl
insl
mov
loopne
inc
jo
fisubrs
lret
xchg
mov
in
mov
fldcw
lcall
push
cmp
imul
mov
sarb
sti
mov
jp
inc
fucomp
or
xchg
sub
inc
fldl
fistpll
or
hlt
push
aas
clc
mov
gs
ret
pop
jl
leave
adc
ljmp
jg
cmpl
dec
pop
jne
pop
pop
jmp
mov
or
add
pusha
pop
mov
pop
or
cs
adc
lea
shlb
dec
or
mov
in
adc
lds
nop
scas
or
or
inc
mov
dec
adc
add
xor
fmuls
hlt
cmp
cmp
or
mov
sbb
in
mov
outsl
lret
fcmovnu
jnp
sti
mov
or
cmp
les
int3
jg
in
test
rorl
sub
inc
inc
dec
insb
and
fnstcw
jle
movzbl
pavgb
pop
mov
push
mov
push
jl
mov
sbb
cmp
fs
xchg
cli
jecxz
mov
fmull
jl
mov
push
rol
push
xor
add
fsubrs
mov
jl
mov
mov
mov
lock
mov
sub
or
call
and
pop
push
push
pop
rclb
imul
xor
mov
sbb
adc
mov
mov
mov
xchg
push
push
push
adc
ret
fldt
addl
and
jmp
jge
repz
xor
aam
aaa
mov
les
mov
jg
sub
add
push
or
dec
cld
xchg
loope
or
pop
aaa
push
and
rcrl
mov
sbb
movswl
sbb
inc
cmp
inc
sbb
fstpl
jl
xorl
aam
ret
xchg
test
cmp
int
sub
addl
nop
lret
loopne
mov
std
sti
loopne
add
pop
jl
add
inc
imul
cmpsl
add
pop
outsb
and
popa
pop
inc
fadds
push
xchg
push
inc
sar
cmp
pop
rorl
push
test
incb
imul
dec
mov
cmp
push
jae
sbb
pop
add
push
mov
mov
dec
pop
stos
jge
sub
enter
push
lahf
jmp
fisubs
daa
aam
out
mov
movsb
dec
pop
mov
dec
pop
lds
call
pop
pop
jne
sbb
test
mov
cmp
or
xchg
cld
stos
insl
clc
pop
or
or
push
pop
faddl
negb
push
push
sub
adc
push
xchg
pop
mov
inc
xor
js
arpl
adc
rorl
jns
add
je
mov
je
push
jle
adc
sbb
test
inc
repz
adc
mov
jmp
or
add
stos
bound
add
and
sar
arpl
pop
pop
add
mov
adc
cmp
fldl
comiss
fmul
or
dec
pop
sarb
ss
mov
outsb
test
cmc
cmpsb
dec
adc
mov
test
push
xor
out
push
test
es
imul
add
push
in
arpl
pop
mov
sub
add
testl
jmp
sbb
add
inc
jo
pop
or
sbb
in
pushf
pop
pushl
ficompl
and
rorl
add
or
jns
mov
push
ljmp
jl
sub
rorl
jb
pop
test
iret
ret
adc
lea
push
add
out
jne
cmc
adc
push
std
add
pop
cmp
dec
mov
data16
dec
ljmp
repnz
sbb
cmp
jb
rcrl
mov
inc
sbb
cmp
or
or
adc
mull
and
je
adc
in
loope
and
test
or
outsb
sbb
or
push
lods
ret
cmp
add
add
jne
xorl
sbb
push
dec
push
ret
push
adc
add
dec
sub
nop
lds
cmp
mov
testl
call
call
push
call
call
push
stos
pop
pop
or
sbb
jnp
cmpsb
mov
shrb
sub
cwtl
mov
or
sub
jmp
outsl
stos
rorb
popa
incl
push
jl
call
shl
pop
loope
and
add
ljmp
pushf
mov
ret
pop
add
mov
inc
or
push
pop
xchg
or
pop
or
inc
adc
adc
fistpl
cmpb
cs
or
cs
int
add
cmp
rol
jecxz
mov
inc
xor
xorl
and
mov
inc
push
iret
add
sbb
sbb
adc
lret
jae
or
lods
adc
sarb
fidivrl
imul
add
testl
pop
shr
cmp
negl
adc
add
imul
mov
not
mov
je
add
jmp
sub
mov
leave
adc
inc
outsl
js
daa
rcrl
ja
sub
mov
test
push
ds
adc
shl
dec
loopne
sub
mov
outsb
imul
imul
jbe
cld
cmp
jae
mov
adc
xchg
xor
cmp
fwait
lods
mov
cmp
jne
pop
xor
adc
mov
movups
mov
and
adc
xchg
mov
fistps
sbb
xor
std
pop
pop
sub
ss
mov
push
mov
add
decb
mov
fcmove
xor
fcmove
mov
shr
rolb
push
adc
mov
mov
push
adc
sti
mov
lods
or
mov
adc
ljmp
inc
mov
sahf
xchg
sbb
cmp
pmaxsw
mov
in
sahf
pop
ret
push
jne
pop
mov
and
sbb
xchg
addr16
sbb
fildll
ss
mov
je
lcall
xchg
inc
add
dec
ror
jne
loop
orb
rorb
ret
mov
jmp
inc
pusha
push
jle
mov
cmp
insl
jbe
or
sbb
sbb
jb
pop
inc
mov
xor
jb
mov
lahf
test
ja
push
dec
mov
popf
cmpl
dec
in
sub
test
sub
into
xor
inc
dec
add
xlat
clc
xchg
push
push
xchg
sub
mov
ret
cmp
test
or
insl
je
fsub
adc
shr
stos
into
mov
andb
adc
jae
or
add
add
mov
and
call
sti
sbb
negb
or
mov
inc
or
int
aam
pop
jno
push
push
ret
jle
xchg
es
lods
mov
jne
ja
imul
xchg
mov
loop
int3
xchg
mov
je
int
jbe
flds
mov
scas
adc
testb
jecxz
or
call
add
cmp
ss
sub
fwait
push
cmp
add
mov
jbe
add
add
pop
pushl
pop
adc
inc
ljmp
pop
adc
notb
or
mov
push
adc
pop
push
pop
pop
or
xorb
lahf
add
paddd
rcpps
add
nop
repnz
add
jg
sub
les
addb
insl
sub
push
fisttpl
sub
xor
mov
loopne
jg
mov
cmp
je
adcl
push
mov
mov
add
add
adc
lret
sbb
femms
mov
xor
sbb
into
clc
adc
ret
dec
sub
ror
insb
or
add
push
loopne
add
cmp
jnp
test
in
push
jne
add
inc
mov
bound
push
out
out
add
jo
ss
mov
popa
mov
xor
jae
js
mov
xchg
xchg
incl
lret
xor
push
mov
out
add
adc
call
pop
cli
sub
or
orb
stos
stos
mov
push
bound
mov
mov
fsubrp
push
jl
sbb
outsb
rorl
push
mov
pop
mov
add
cmp
cmp
int
adc
sbb
test
shr
push
aas
sub
xor
test
add
add
or
pop
mov
sbb
scas
ljmp
jge
xor
sbbl
and
outsb
imul
sarb
push
es
inc
es
js
nop
and
sbb
adc
mov
and
adc
notb
mov
pcmpeqw
pop
gs
int
scas
mov
push
flds
mov
xor
inc
scas
cmp
fdivs
push
or
push
push
arpl
popa
mov
pop
jg
mov
push
cltd
push
adc
mov
add
or
andb
js
cmpsb
sub
ljmp
sbb
xor
stos
in
out
sbb
mov
lret
imul
sbb
jmp
push
rorl
ficoml
mov
and
scas
or
mov
push
sbb
and
xchg
cmpl
ljmp
dec
mov
sbb
ljmp
in
push
mov
pop
or
or
test
add
data16
test
add
rcll
mov
js
or
fwait
push
mov
pop
mov
pop
andl
dec
add
mov
push
bound
bnd
data16
or
inc
or
add
inc
les
mov
sbb
rcrl
dec
inc
push
add
pop
subl
int
sti
or
addr16
lcall
cmpsb
or
sub
pop
gs
inc
mov
orb
sbb
mov
pushf
pop
inc
add
stos
adc
mov
lods
mov
push
cmpsl
push
fildl
jp
cmp
insb
dec
jne
test
sbb
adc
inc
lods
or
push
push
lea
jno
fwait
rcr
xor
dec
adc
xor
jb
or
aam
iret
jae
sbb
mov
inc
jg
ds
nop
and
mov
jle
jle
push
fwait
push
ss
xchg
mov
cmp
arpl
rorb
inc
stos
cmp
mov
inc
test
jle
mov
sbb
pop
pop
mov
inc
lret
out
add
movsl
push
imul
cmp
jnp
jbe
fistps
andl
outsb
mov
pop
mov
push
xor
mov
lcall
jno
mov
inc
cltd
loope
cwtl
push
add
pop
or
sbbl
xor
jnp
pop
insb
mov
cmp
sbb
xorl
add
mov
xchg
xor
dec
xchg
jl
sub
mov
std
pop
mov
add
push
cmp
cmp
sub
and
sub
mov
mov
and
fdiv
in
xchg
push
mov
adc
and
lods
dec
cltd
pusha
or
mov
out
xor
inc
or
mov
fdivr
in
imul
or
fisubrl
mov
inc
xchg
add
adc
lods
cld
push
push
jmp
imul
pop
out
lds
pop
inc
xor
test
push
mov
popa
inc
aaa
pop
mov
pop
loopne
mov
jg
shlb
mov
leave
or
mov
inc
cmp
jne
or
jne
out
ret
xor
add
or
fnsave
xor
and
enter
mov
mov
push
adc
xchg
xchg
mov
leave
push
imul
sbb
pop
push
loope
stos
negb
gs
mov
clc
call
lret
lods
mov
bound
mov
subl
cmp
jl
mov
pop
mov
inc
add
or
pushf
emms
insb
sbb
in
or
scas
add
and
jns
fistpll
or
pop
pusha
ss
cmpsb
or
daa
loopne
roll
dec
rcrl
push
rdtsc
or
daa
addr16
rol
movb
test
jle
loop
or
lret
cmp
mul
shr
data16
add
test
int3
pop
or
add
pop
loop
adc
mov
mov
mov
clc
clc
cvttsd2si
leave
ret
sbb
in
jg
adc
add
cmp
pop
and
add
jg
shrl
mov
fld
flds
jae
fildll
pop
clc
in
or
jmp
dec
mov
xor
jnp
rorl
add
sub
pop
jle
in
fcomp
adc
test
push
and
add
xor
jmp
popa
stc
cli
jl
xchg
xchg
mov
add
jle
std
je
incb
xchg
dec
adc
push
rorl
lcall
aas
les
insl
pop
xchg
sbb
or
loopne
jno
xlat
test
dec
addr16
fldt
popf
push
pop
add
adc
shll
sti
xchg
cld
je
add
je
pop
imul
mov
add
sub
pop
sub
xchg
pop
mov
mov
xchg
popf
inc
add
sti
or
clc
add
ljmp
fcomi
push
push
sub
call
push
mov
mov
push
or
or
push
dec
sti
or
sub
sub
fdivl
and
and
mov
addr16
pop
dec
pop
hlt
int3
je
cmp
test
cld
sbb
push
pop
lret
push
or
or
mov
loope
enter
je
push
pusha
pop
int
fwait
inc
je
out
jge
pop
sub
jne
repnz
das
sbb
adc
and
fneni(8087
shlb
lea
aaa
or
out
jmp
adc
in
cltd
bnd
imulb
push
adc
dec
push
movups
mov
push
push
rorb
hlt
pop
aam
mov
inc
in
push
push
ret
movsl
leave
test
xchg
shrl
mov
int3
xor
pop
aaa
sub
push
ss
or
cli
cmp
add
jns
and
sti
and
lret
add
ss
pop
fs
jmp
push
out
push
xchg
cltd
cwtl
popf
push
cmp
icebp
jo
push
push
lea
shll
fldt
jns
test
test
imul
jb
shlb
push
sub
mov
jle
idivl
fcomp
test
push
sub
or
subb
jo
mov
jo
dec
xchg
jb
push
das
lret
sbb
adc
jne
mov
or
and
inc
add
mov
jae
push
push
push
xchg
lahf
jge
xor
jmp
push
or
mov
fstpl
jg
mov
lock
lret
mov
cld
clc
in
js
testb
jmp
and
mov
pop
ds
add
shrb
xor
push
sub
enter
or
dec
dec
push
leave
mov
sbb
sbb
sbbb
sbb
add
pop
sub
sbb
mov
sub
sbbl
cmove
jb
inc
add
sbb
sub
arpl
pop
jge
sub
push
push
add
sbb
push
jmp
lret
adc
or
pop
mov
stos
ljmp
xchg
xchg
xchg
xchg
cmp
inc
dec
xchg
xchg
xchg
xchg
dec
push
push
pop
xchg
xchg
xchg
xchg
pop
pusha
fs
lods
or
incl
inc
imul
inc
push
popa
je
dec
mov
xor
fs
insb
outsl
add
insb
insl
gs
popa
jae
and
add
jo
je
sti
fistps
dec
dec
push
push
push
cs
dec
dec
pop
jb
int
sti
pop
fildll
outsl
ja
dec
gs
arpl
add
std
gs
gs
push
push
jb
ss
daa
neg
jae
jae
outsl
outsl
insb
jae
jbe
inc
push
push
dec
dec
dec
or
jae
jo
push
push
je
fnsave
add
aas
jae
outsl
outsb
daa
inc
jbe
idiv
dec
dec
inc
push
dec
xor
jge
inc
insb
jo
mov
andl
insl
sbb
add
orl
ds
cmp
enter
cmp
and
fs
inc
and
pop
jmp
orl
aas
push
add
aas
cmp
xchg
orb
stos
or
pop
sti
decl
incl
xor
xor
xor
js
push
jae
jb
or
jl
popa
insb
insb
leave
push
jb
arpl
nop
jae
cmp
cmpb
inc
jo
lock
decl
scas
cltd
mov
mov
mov
scas
mov
lcall
xchg
nop
xchg
lcall
stos
movsl
mov
xchg
fwait
mov
movsl
fbstp
mov
mov
xchg
nop
lea
cltd
mov
test
mov
lahf
sti
dec
adc
scas
popf
mov
lcall
movsb
add
jle
jg
xchg
mov
pushf
lcall
addb
in
decl
mov
mov
mov
lcall
std
test
stos
mov
xchg
cmp
aaa
test
scas
xchg
jmp
xchg
int3
int
fildll
mov
popa
and
mov
mov
sti
jmp
mov
xchg
lcall
xchg
fldt
add
dec
int
lret
mov
movl
imul
mov
movl
jb
cmp
push
imul
out
and
rcll
mov
inc
imul
sub
lods
add
inc
push
dec
lods
inc
orb
dec
jae
inc
pop
add
addl
dec
outsl
fs
gs
popa
and
outsl
fldt
add
popa
jo
mov
inc
gs
jb
jns
inc
js
je
pushl
or
outsl
popa
fs
imul
inc
das
notb
adc
fs
aaa
sahf
imul
insb
insb
adc
inc
adc
outsb
shll
push
insb
jo
imul
insl
or
addr16
pop
in
scas
dec
jecxz
push
push
insb
jae
push
gs
movsb
fldenv
rol
cmp
imul
popf
ja
inc
inc
dec
adc
int3
insl
in
outsl
insl
jo
subl
dec
inc
aam
mov
adc
sti
push
jns
gs
es
adc
sub
or
fs
or
xor
fldt
sub
insl
jae
insb
cmp
adc
data16
push
jne
xor
fs
outsl
cmpl
pop
popa
bound
jle
and
xor
jb
and
pop
inc
dec
jo
ja
scas
insb
dec
mov
idivl
pop
pop
jne
lods
outsb
pop
dec
mov
cltd
push
add
out
inc
out
fucomp
dec
outsb
jbe
imul
xlat
outsb
pop
inc
or
add
inc
adc
adc
int
inc
pop
and
adc
jmp
xor
push
xor
es
js
dec
and
adc
jnp
pop
or
in
insb
jg
or
fwait
in
push
shl
and
sbb
pop
fwait
sbb
add
in
inc
dec
add
push
stc
rclb
lock
sidtl
add
xor
data16
jbe
or
or
or
push
and
pop
or
hlt
push
jbe
add
adc
push
pop
sahf
in
lods
mov
adc
push
xorb
pop
cld
push
fldt
arpl
gs
nop
sub
outsl
pop
divb
je,pn
js
add
ds
or
test
mov
outsb
popa
pop
cld
push
ds
cs
cmpsb
jmp
nop
or
je
rorb
mov
mov
add
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
add
add
add
add
add
add
orb
add
pusha
add
addb
add
sub
add
add
add
add
add
add
addb
add
sub
add
add
add
add
add
add
movsb
loopne
add
add
add
lods
jo
add
add
add
add
add
add
js
add
sub
add
add
add
add
add
icebp
add
adc
add
mov
add
add
add
add
add
add
and
add
add
adcb
push
add
add
add
or
add
cmp
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
lock
pop
incl
sbb
jmp
add
add
add
pusha
add
add
add
pop
add
add
add
dec
add
add
add
push
add
xor
add
pop
incl
cmp
cs
incl
daa
dec
testl
push
cmp
add
ds
push
xchg
add
add
add
inc
add
add
add
add
add
add
add
push
or
xor
jnp,pt
decl
inc
push
add
aas
imul
inc
imul
inc
imul
xor
incl
cs
incl
and
add
add
add
inc
add
add
add
sub
add
adc
add
add
add
add
pusha
sti
inc
andb
inc
sbbb
inc
jbe
pushl
insb
mov
sbb
decl
dec
jne
add
pop
incl
adc
scas
add
add
add
aas
add
add
add
add
add
add
add
add
add
pop
in
andl
pushl
mov
push
test
sbb
decl
inc
push
add
inc
ljmp
add
add
add
add
add
add
xor
add
add
add
add
adc
add
pop
add
mov
pushl
ror
xchg
scas
call
pushf
pushl
insb
mov
or
daa
dec
repnz
add
add
sub
add
xor
add
xor
add
sub
add
sub
add
sub
add
and
add
add
add
add
add
add
add
cmp
cmp
mov
jmp
loop
jle
mov
incl
nop
incl
cmp
and
pop
pop
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
outsb
decl
pushl
mov
jmp
fwait
scas
lcall
cmpsb
incl
pop
pushl
test
jl
jl
pop
pop
pop
jmp
wrmsr
add
add
add
or
add
adc
add
sbb
add
sbb
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
decl
ljmp
mov
push
mov
ja
mov
ljmp
nop
pushl
xchg
xchg
jl
jnp
push
push
pop
lock
pop
pop
aaa
add
add
add
or
add
adc
add
adc
add
adc
add
push
add
add
add
or
add
or
add
push
add
add
add
add
add
push
add
pop
loopne
cs
incl
cs
call
cmp
mov
in
dec
int3
int3
pushl
xchg
xchg
jns
jns
push
push
push
repz
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
insl
es
xchg
xchg
xlat
rcl
sar
hlt
hlt
repz
in
dec
int
pushl
xchg
xchg
js
js
dec
dec
dec
clc
and
and
add
add
add
add
add
add
add
add
add
add
add
add
out
into
int
hlt
hlt
repz
in
dec
int
pushl
xchg
xchg
ljmp
outsl
incl
inc
negl
adc
cmp
add
add
xchg
push
hlt
repz
in
dec
int
jmp
push
push
mov
xor
repz
add
test
cmp
ret
hlt
hlt
repz
into
into
ljmp
pop
dec
jnp
fdivrl
lret
incl
or
aas
jl
jnp
js
jns
lods
lods
lods
jle
insb
fisttpl
inc
jmp
cmpl
fdivrl
push
push
repz
add
add
add
jnp
data16
je
push
fld
in
mov
loop
cmp
fstpt
shll
jp
push
repnz
add
add
jnp
sub
lcall
push
fld
out
mov
loop
cmp
fdivrl
mov
sub
inc
subl
repnz
jb
push
iret
mov
in
mov
loop
cmp
fdivrl
mov
and
jae
or
inc
movsb
dec
and
inc
sbb
lret
outsl
ss
rcrl
mov
loop
cmp
fstpt
mov
push
pushl
or
inc
jl
push
or
enter
lock
dec
jmp
cmpl
jl
ljmp
es
or
add
add
add
push
or
imul
out
stos
js
jmp
cmpl
jl
jmp
es
pop
add
dec
xchg
lsl
push
dec
out
stos
js
call
cmpl
jp
lcall
and
in
pop
add
dec
xchg
cmp
mov
xor
out
inc
out
stos
js
jmp
test
fdivrs
lcall
and
in
add
add
add
popa
cs
mov
lock
js
jmp
cmpl
aad
xor
xchg
cmp
and
jmp
mov
and
jecxz
inc
out
stos
js
jmp
cmpl
je
incl
adc
sbb
add
add
dec
and
loopne
inc
push
stos
js
call
jp
decl
adc
pop
mov
jp
dec
and
fnstcw
loope
inc
call
sbb
add
mov
adc
inc
sbb
xchg
maskmovq
imull
or
add
add
add
add
add
add
add
add
incl
ud0
add
incl
add
incl
add
addb
incl
add
incl
add
pavgb
rolb
add
cld
add
ud0
pop
incl
pop
jmp
add
push
add
clc
add
cld
add
incb
aas
incl
pop
incl
pop
push
add
clc
add
cld
add
incb
incl
incl
decl
add
add
add
add
and
add
add
and
test
add
add
sbb
add
fdiv
add
and
icebp
add
das
repnz
add
add
cmp
add
or
add
inc
repnz
adc
add
dec
repnz
pop
repnz
insb
repnz
jl
add
mov
add
cwtl
repnz
add
add
cmpsb
repnz
add
add
scas
repnz
add
add
mov
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
popa
bound
add
je
outsb
jne
add
je
insl
gs
outsb
fs
gs
outsl
add
add
fs
insl
xor
test
push
cmp
mov
mov
push
inc
test
mov
sbb
mov
xor
adc
cmpb
test
xchg
jbe
outsl
mov
and
jp
mov
mul
jnp
lahf
cmp
ja
in
push
dec
xchg
popa
pop
push
inc
add
push
loopne
and
dec
mov
fmull
mov
popa
shrl
aas
icebp
sub
jns
adc
push
inc
imul
pop
pop
movsl
cmp
aad
call
sub
ret
jl
cmp
xchg
cld
prefetchnta
loope
dec
jl,pt
mov
pop
jbe
out
mov
cmp
insl
cmp
nop
mov
inc
pop
nop
push
xor
mov
ja
fimull
ljmp
scas
subb
cmp
nop
fldpi
sbb
push
aad
outsb
fs
insl
xor
fs
insl
push
push
push
push
push
push
push
pop
push
dec
push
push
push
push
push
pop
push
push
dec
push
push
dec
push
push
pop
push
push
push
push
push
push
push
push
pop
push
push
push
push
dec
push
push
push
push
push
push
push
push
pop
push
push
dec
outsb
fs
insl
mov
cmp
js
mov
sti
popa
add
imul
fdivl
jo
fildll
fsub
push
jns
mov
bound
stc
mov
scas
fmuls
inc
lds
fidivrs
addr16
cmpsl
sbb
icebp
add
xor
or
add
adc
sbb
mov
lret
xchg
sahf
xchg
fucomp
lahf
mov
jnp
xchg
and
shll
ja
xor
pop
insl
loop
ss
push
xor
jle
imul
pop
mov
scas
adc
stos
jno
push
mov
xor
insb
mov
add
pop
loope
filds
into
aad
or
aad
or
gs
inc
pop
sub
call
push
imul
ret
pop
cmpl
jno
in
repz
les
orb
jmp
dec
popa
inc
push
sub
pushf
inc
adc
mov
mov
adc
imul
out
or
fucomp
imul
xchg
push
into
adc
lds
lea
dec
mov
mov
add
loopne
jno
imul
lock
addr16
mov
jno
mov
imul
cmp
sub
cmp
jge
or
jae
push
ljmp
inc
fiaddl
stos
repz
dec
ret
nopl
fsub
pop
sti
das
nop
js
sbb
pop
mov
aam
push
inc
aam
jmp
xor
andl
push
pop
mov
jle
mov
sub
jno
popf
mov
jmp
xchg
out
std
push
adc
in
pushf
int
hlt
je
mov
dec
lods
pop
and
data16
fsubr
pop
xchg
push
jb
mov
in
sub
seta
add
sub
nop
xchg
pop
and
pop
test
add
imul
cmp
ret
push
xor
cmpsb
mov
or
jbe
sbb
jmp
outsl
pusha
test
in
xlat
push
out
in
cmp
jnp,pt
sub
push
pop
add
lcall
mov
sbb
and
imul
inc
adc
adc
fldl
aad
mov
add
cmp
inc
push
or
jmp
jae
and
inc
je
stos
mov
push
repnz
sbb
in
adc
and
pop
loope
xchg
test
sbb
aam
or
xchg
lahf
inc
inc
cs
ljmp
inc
scas
dec
in
dec
int
lods
inc
sub
aas
ret
mov
mov
xchg
jg
call
leave
roll
pop
cmp
imul
sub
mov
mov
int
pop
cli
shll
inc
ljmp
rorb
mov
mov
dec
stos
inc
imul
mov
daa
js
push
adc
scas
mov
jbe
xchg
sbb
daa
je
rcl
clc
fldcw
jg
mov
or
dec
xchg
shrb
cmp
mov
add
daa
add
test
dec
inc
outsb
adc
push
lea
pop
adc
in
ss
test
out
imul
rclb
inc
or
dec
dec
inc
lods
push
or
clc
repz
mov
call
fcoms
sbb
hlt
mov
div
scas
scas
mov
rorb
sar
shl
out
mov
sbb
xchg
or
xor
and
bound
enter
ljmp
addr16
sub
push
push
lods
out
dec
xlat
mov
jecxz
push
push
pop
mov
push
inc
fbld
mov
and
inc
jne
in
pop
iret
mov
mov
inc
adc
lock
adc
adc
imull
pop
mov
jl
ljmp
inc
lods
xchg
repz
aas
mov
and
daa
out
push
xor
lcall
jo
cmpsb
jbe
lahf
and
fdivs
dec
cld
inc
pushf
mov
leave
fistps
ss
jmp
mov
adc
cmp
cmp
icebp
mov
out
lock
iret
push
jae
jecxz
out
pop
imul
jecxz
pusha
gs
lods
mov
movsb
loope
sbb
add
xor
adc
roll
jnp
pop
jno
mov
xchg
fcomp
popa
pop
jns
scas
stos
sbb
repnz
outsb
repnz
insb
mov
js
js
xchg
jg
jo
mov
cld
mov
push
mov
lret
push
aas
adc
setb
movsb
testb
cld
rcll
jge
cmp
mov
je
insl
iret
fs
pop
or
mov
rorb
dec
shll
add
and
add
push
mov
mov
fcomps
xchg
dec
mov
xchg
mov
add
arpl
cmc
push
cmp
jge
xchg
shll
mov
sub
push
or
mov
ds
sti
or
add
xchg
push
repz
daa
mov
scas
fimuls
jo
push
or
stc
xor
mov
in
push
or
cld
mov
dec
das
pop
int
out
pop
out
shlb
sbb
mov
loop
pop
pop
jge
lds
cmp
imul
in
rolb
jecxz
or
and
mov
in
and
aam
shr
push
scas
data16
or
clc
les
lods
pop
cmp
pop
insb
xorl
pop
fcmovu
test
xchg
dec
cmpsb
sbb
mov
out
mov
jae
psrlq
and
cmp
mov
jecxz
lods
cmp
mov
jne
push
sbb
mov
cmc
xchg
movsb
pushf
sbb
int3
inc
xor
lods
push
mov
mov
into
xchg
pop
fsubs
fucom
gs
fcomip
in
and
mov
cmp
ret
test
pushf
rcrb
lods
scas
mov
xchg
iret
mov
dec
mov
fldl
push
into
inc
sbb
add
xchg
scas
pop
and
cmpsb
arpl
push
dec
jne
push
ljmp
adc
fistpl
in
jmp
and
test
test
and
imul
dec
sbb
lock
pushw
enter
inc
test
push
dec
cmp
nop
jl
push
lods
int
pushl
cmp
or
mov
lea
xchg
leave
mov
cmp
dec
adc
or
das
push
test
outsb
ucomiss
test
rcll
push
insl
ss
loop
pusha
xchg
cmp
je
test
mov
out
out
pop
sub
sub
data16
fsts
push
addr16
pusha
adc
and
frstor
and
fnstenv
cmp
cmp
pushf
jecxz
lds
cmp
inc
inc
clc
loope
loope
daa
cmp
xor
xchg
xchg
jnp
add
push
mov
cmp
sbb
mov
sbb
or
dec
push
imulb
and
mov
mov
jle
mov
xchg
sbb
pop
mov
or
loop
gs
ja
test
add
dec
xchg
fs
push
cld
lret
movsb
or
jecxz
xchg
insl
popa
xchg
cli
mov
mov
scas
scas
mov
pop
sbb
shl
scas
jb
jb
out
clc
movsb
movsl
or
cli
cmp
or
push
into
adc
jp
test
test
cmp
mov
mov
push
add
jae
mov
add
shrb
mov
scas
jne
add
dec
adcl
aaa
cmp
aad
fisubrl
loop
in
jmp
adc
mov
dec
out
mov
rcl
sub
aam
lea
ljmp
filds
and
push
rcl
hlt
xor
lock
xchg
jno
mov
adc
mov
fsubrl
lock
cmp
imul
inc
lret
arpl
jne
adcb
mov
xor
outsb
cmp
aaa
repz
sub
pop
es
fs
mov
testb
jmp
xchg
insl
adc
cltd
daa
cmp
imull
jb
jp
jmp
js
test
test
xchg
dec
in
and
xchg
cmp
inc
out
xor
scas
negl
dec
mov
push
or
rol
pop
push
xor
rcrl
ror
rolb
pop
mov
sar
lods
jl
adc
daa
and
cmp
lock
popa
imul
dec
cmp
cmp
cmpsb
push
lcall
jno
ret
aas
incb
movsb
popf
lahf
xchg
popa
adc
mov
mov
lods
mov
inc
sbb
in
lret
repnz
and
movsl
dec
mov
pop
push
xchg
jo
test
jecxz
sahf
test
lret
jae
out
pop
mov
jge
sbb
addl
xor
pop
adc
aad
mov
jb
je
push
jmp
call
push
out
sub
sbbl
and
jne
dec
outsb
fs
insl
fimull
ficoml
jg
roll
dec
mov
int3
lret
push
xor
roll
pop
sbb
cmp
cmp
inc
pop
roll
in
pop
add
aam
mov
cs
cli
addb
leave
mov
fwait
aas
jae
push
out
dec
sub
inc
jmp
xor
add
cmp
xor
and
sub
mov
ljmp
out
fisubrl
mov
loope
cwtl
inc
sbb
or
rclb
call
jo
loope
das
mov
and
fwait
inc
lock
add
pop
mov
xchg
aas
pop
xor
sbb
out
xor
xchg
iret
cmp
push
sbbl
sub
pop
loopne
dec
ja
lock
sbb
out
xchg
xor
faddp
jmp
fidivs
cmp
mov
jl,pt
pop
jne
jmp
push
xor
into
movsl
add
fisttpl
add
in
push
mov
xor
mov
fstpl
mov
aam
clc
es
testb
rcll
mov
fwait
inc
add
cmp
cmpsb
jns
out
and
sub
add
push
mov
cmpsl
sub
icebp
or
cmp
addr16
mov
add
mov
testl
sub
loope
aaa
lret
pop
cmpsb
cmp
or
addl
sarl
lret
jno
stc
cmp
jl
dec
xor
dec
insb
iret
fs
add
mov
jne
xor
lods
mov
add
xchg
mov
int
and
lods
mov
push
or
xchg
aas
jmp
pusha
mov
or
xor
adc
aaa
mov
lds
adc
rol
lahf
push
xor
push
and
mov
jnp
xchg
outsb
pop
stc
add
mov
jo
xor
mov
neg
daa
pop
and
cmpsl
push
dec
out
jb
rclb
jg
enter
push
dec
loope
add
push
inc
inc
mov
pop
stos
or
pop
jmp
in
das
sub
sbb
cs
inc
subl
and
cld
icebp
leave
pop
add
jae
das
stc
in
movsb
or
jge
cmp
test
inc
push
xor
ret
lcall
pop
sub
sub
int3
das
rol
movsl
mov
fistpl
in
dec
inc
mov
fcmovbe
das
dec
push
pop
pop
sahf
js
mov
std
add
je
jo
sbb
or
stc
cwtl
fdivr
inc
movsw
dec
sbb
jecxz
mov
js
pop
loopne
arpl
pop
sbb
adc
inc
xor
inc
sub
rorb
test
sub
mov
stos
xchg
int
cmp
in
jne
pop
and
cmc
idiv
ret
pop
pop
dec
lds
mov
imul
nop
int
imul
hlt
sbb
or
sub
adc
xchg
mov
jnp
inc
adc
pop
and
bound
push
inc
pusha
fimull
mov
fists
out
xchg
push
je
mov
sub
add
xor
jae
add
inc
add
and
mov
ret
dec
into
jmp
mov
jmp
repnz
in
push
and
mov
outsb
push
imul
push
pop
lock
pop
push
fidivrl
hlt
test
inc
xchg
cs
xor
addr16
movsb
mov
loop
ret
push
jecxz
add
adc
cmpb
mov
std
push
test
lret
lods
jb
mov
gs
js
sub
mov
mov
ja
imul
pop
cmp
sbb
ret
lret
push
and
xlat
or
adc
dec
sbb
stos
int
jmp
rcrl
dec
out
fimuls
dec
cmpl
pop
movsl
mov
sbb
movsb
and
loopne,pt
jecxz
xchg
sahf
and
sarb
mov
in
stc
xchg
dec
cmpsb
rcr
outsl
pop
and
pop
mov
inc
outsl
hlt
popf
stos
mov
call
fs
fistpl
and
imul
adcb
inc
out
jae
sub
xchg
out
in
and
mov
cmp
mov
fimull
push
dec
outsl
pop
xchg
dec
jmp
xchg
push
rorb
data16
inc
fsubrl
xchg
and
mov
ljmp
test
fidivrl
add
inc
sahf
sub
push
cld
fs
xchg
xor
mov
jo
inc
dec
cmp
add
rolb
clc
pop
pop
sbb
leave
or
mov
mov
shlb
in
fcoms
jbe,pn
inc
pop
add
push
or
out
cmc
movsl
adc
cmp
fisubs
pop
xor
cmpb
pop
insb
mov
nop
jmp
dec
xchg
jb
mov
mov
jmp
leave
jbe
sbb
sbb
pop
scas
bound
mov
leave
cli
mov
push
aas
mov
loopne
int
xor
jp
mov
dec
pop
popa
cld
dec
in
or
and
loopne
pop
or
pop
mov
pop
test
push
xchg
nop
adc
pop
nop
mov
xchg
cmp
adc
nop
cmp
shll
mov
repz
cmp
bound
xchg
and
shll
cmp
push
push
mov
fnsave
hlt
mov
jmp
jl
dec
sbb
fidivs
xchg
push
push
mov
dec
xchg
lcall
mov
dec
add
xchg
pcmpeqd
xchg
or
ret
add
mov
pextrw
add
cs
pop
jg
popa
adc
out
mov
adc
xchg
hlt
xor
arpl
out
xchg
fdecstp
adc
fnstsw
or
mov
cli
call
mov
xchg
mov
notb
mov
dec
fiadds
andl
cmp
lahf
xor
mov
adc
jb
ss
or
jno
mov
repz
jmp
mov
cs
jmp
sub
outsl
mov
inc
adc
lahf
jno
aam
inc
mov
cmpl
aad
movsb
adc
cmpsl
sub
stos
add
mov
or
aas
xchg
inc
cmp
bound
push
nop
and
push
mov
loopne
icebp
fisubs
jb
mov
aad
push
xor
xor
lar
mov
pop
lcall
sub
fnstenv
fcmovnbe
and
jno
pop
adc
dec
clc
popf
pop
lods
scas
inc
fstl
mov
xor
arpl
out
idivl
movsl
call
mov
add
mov
or
scas
movsb
mov
sbb
or
sub
cltd
ret
mov
adc
adc
pop
xchg
xchg
and
outsl
insb
std
outsl
fnstenv
loop
arpl
push
sbb
adc
cmc
mov
inc
cmp
sbb
aam
and
xchg
sbb
mov
popf
pop
jae
in
loop
movsb
into
sub
sbb
sbb
or
rorb
outsl
pop
jne
mov
adc
push
xlat
js
fmuls
mov
push
cmp
arpl
jmp
push
popa
cmp
push
int
and
out
stos
out
sbb
inc
jecxz
fdivl
mov
mov
jnp
popa
imul
fmull
fbld
fistl
sbb
push
xor
ljmp
sub
push
adc
outsl
std
imul
cmpsl
cltd
mov
sbb
dec
les
clc
in
imul
and
xchg
ljmp
into
cmpsl
rol
adc
cmpsl
jmp
repz
mov
jl
lds
jne
push
and
jmp
mov
sarb
pop
jno
xchg
or
dec
icebp
lahf
std
cmpsl
jnp
fimuls
and
sbb
stos
sbb
dec
jns
outsb
rcl
jno
push
pop
xchg
dec
out
jnp
aad
int3
repnz
inc
popa
pop
jb
cmp
mov
mov
pop
mov
xchg
lcall
xchg
addl
inc
test
sbb
repz
mov
push
inc
jg
add
sbb
cmp
ret
lods
push
popf
or
jbe
dec
pop
push
int
jmp
rol
adc
pop
shlb
inc
xor
push
mov
sbb
mov
lret
jmp
test
sahf
gs
cmp
mov
push
cmp
mov
addb
sti
sub
and
fadd
stos
jno
mov
dec
jne
movsb
lahf
jge
mov
mov
cmp
movl
jbe
inc
pop
pop
outsl
dec
pop
push
popf
sub
and
pop
fistpl
sbb
dec
subl
fildl
adc
mov
mov
sbb
stc
data16
decl
inc
stc
or
gs
xlat
subps
inc
movsb
pop
pop
imull
das
jl
mov
sbb
mov
repz
rolb
sub
mov
sub
dec
pushaw
roll
mov
sub
movsb
fst
add
dec
out
xor
cli
mov
cmp
and
outsb
stos
xchg
adc
mov
icebp
ror
loopew
lcall
fsubrs
xchg
pushf
lahf
loop
cmpl
mov
inc
fucom
push
sub
lock
mov
sub
jns
imul
sub
jno
mov
js
cmp
mov
jo
and
sbb
push
inc
inc
sbb
jmp
jl
and
adc
repnz
loope
jns
mov
fstl
icebp
mov
negb
mov
shrl
sub
add
or
dec
xor
int3
sbb
jmp
pop
mov
or
push
push
inc
fsubrl
roll
push
mov
adc
inc
sbb
and
and
pop
mov
stos
pop
cli
outsb
ret
stos
mov
xor
sar
mov
pop
shl
jmp
dec
jl
dec
ret
cli
pop
js
stos
mov
cmp
js
lret
ja
or
popa
and
adc
fsubl
out
je
popf
negb
cld
es
add
push
add
shlb
ss
pop
cltd
lods
add
inc
xchg
xchg
pop
adc
jg
adc
icebp
loop
push
dec
pushf
out
adc
aaa
mov
arpl
lahf
mov
popf
je
add
adcb
out
jmp
test
xchg
cwtl
out
mov
js
sub
mov
xchg
lods
xchg
ficoml
lea
inc
hlt
mov
cmp
jae
sbb
pop
adc
xor
mov
and
sbb
mov
push
repnz
dec
jno
sub
cmp
outsb
dec
push
leave
xchg
sub
xchg
lahf
or
mov
push
push
mov
dec
mov
add
divl
bound
push
mov
sarb
testl
cltd
aaa
cli
adc
and
test
imull
shlb
and
jle
sbb
pop
xor
lcall
insl
lods
push
mov
pop
test
sub
mov
dec
in
fiadds
bound
or
dec
mov
sbb
stc
jge
jno
inc
icebp
sbb
jecxz
and
imulb
sub
xlat
popa
cmp
mov
vpmacssdd
fidivrs
into
pop
movsl
arpl
stos
lods
jmp
je,pt
xchg
xor
dec
cld
out
movsl
inc
cmpsl
sub
loop
sarb
test
jl
xor
push
push
out
lds
fisttps
sub
adc
sub
mov
jae
push
es
je
adc
mov
ja
adc
inc
mov
mov
xchg
sarl
xchg
push
mov
mov
jecxz
test
adc
mov
lcall
nop
and
and
mov
out
imul
adc
jg
loop
push
stos
lods
clc
xchg
xor
pop
mov
adc
dec
mov
in
push
cmp
ds
sub
xchg
and
movsl
mov
lds
daa
jns
sarb
mov
push
jbe
scas
jb
lea
or
test
data16
push
xor
or
testl
or
sbb
arpl
ljmp
push
adc
jmp
cmpsl
inc
cmpsl
inc
pop
xor
mov
repnz
xor
mov
lock
add
add
loopne
jg
push
rcl
shrb
mov
sub
shlb
nop
imulb
test
inc
loope
mov
loopne
or
xchg
dec
mov
jne
mov
lods
adc
jo
in
push
xchg
cwtl
mov
imul
test
aad
push
cmc
negb
inc
cmp
ljmp
cli
xchg
dec
aaa
lds
and
xor
adcl
xchg
and
in
pop
test
movsb
iret
scas
jmp
cmp
jne
lret
out
cmp
mov
add
leave
mov
sub
lea
vcvtsi2ssl
inc
or
imul
in
mov
cmc
dec
push
aam
push
out
xor
loopne
int
sub
in
je
subb
hlt
addr16
xor
xor
push
mov
addr16
xor
inc
mov
aam
jae
push
dec
cmp
or
adc
mov
adc
dec
in
fldl
adc
cmp
in
add
out
cmc
mov
movsl
and
cs
mov
pop
loop
xchg
dec
sbbl
aas
cmpsb
ret
jb
jb
sbbl
loop
outsb
shrb
icebp
das
xchg
lea
adc
add
in
lock
stc
xchg
cmp
dec
je
cmp
out
or
cli
cli
add
xor
loopne
cmp
push
add
cmp
mov
stc
lcall
inc
std
bswap
std
or
push
push
cli
sub
cmp
dec
push
pusha
xor
mov
negl
les
fdivl
out
aad
repnz
mov
cmpsb
psubq
lret
int
call
jle
into
ret
or
cmp
cmp
les
ret
sub
pop
cmpsl
and
loope
xchg
and
aas
xchg
add
pop
sub
ljmp
daa
into
enter
loopne
shrb
aas
mov
cli
mov
inc
flds
out
add
les
les
cmpsb
ja
cmp
mov
out
and
jno
mov
xchg
outsl
xor
les
data16
inc
scas
sbbl
pop
loop
mov
pop
daa
inc
iret
and
add
lods
rcr
xor
lock
pop
test
fs
imul
aad
lret
cli
inc
mov
jp
fldl
pop
dec
aas
lret
xchg
add
mov
imul
adc
pusha
setp
add
cmp
adc
je
test
jle
lahf
sub
cmp
mov
popa
lret
cs
inc
or
nop
push
arpl
mov
cwtl
pop
mov
scas
inc
mov
xchg
out
stos
mov
dec
pop
xchg
pop
stos
in
pop
jb
ds
enter
xchg
imul
and
and
icebp
sbbb
pushf
or
ljmp
lock
je
xchg
je
jl
mov
or
fcoml
pop
lods
xor
push
cmp
ret
push
jne
int3
cld
sub
or
mov
stos
repnz
adc
sub
out
loope
sbb
pop
sub
jle
pusha
dec
cmp
push
outsl
sbb
in
mov
sub
xor
shlb
inc
mov
lret
pushf
mov
loope
jmp
cmp
and
push
scas
lock
cltd
mov
enter
add
fwait
push
test
fcompl
sbb
adc
shll
stos
and
nop
lcall
sbb
push
loope
xchg
or
push
cmp
out
push
clc
mov
stos
ds
xchg
iret
cmc
sbb
adc
das
mov
sbb
lcall
jge
cli
or
mov
xor
jl
mov
cmp
or
fldl
out
mov
test
xchg
xlat
cmp
dec
mov
mov
xchg
ljmp
orb
lods
or
pop
jecxz
int
repz
neg
jl
inc
imull
outsb
test
out
xchg
jb
jbe
add
int
push
arpl
xchg
fwait
jnp
ds
cmp
cmpsl
movsb
and
mov
iret
mov
lret
dec
lds
jle
push
aam
ljmp
and
cmp
mov
pop
adc
divb
mov
imul
mov
dec
sarb
leave
mov
cwtl
xorb
imul
jp
lea
mov
add
mov
es
push
daa
in
mov
push
inc
sub
rclb
insl
adc
pmaxub
pushf
ret
adc
push
pop
fsubrs
dec
add
cld
or
pushf
add
repz
icebp
lret
and
pop
movsb
outsb
lods
jmp
cs
mov
adc
test
stos
mov
movhps
sub
mov
stos
inc
adc
mov
leave
bnd
sub
fldl
pop
nop
push
jmp
adc
adc
mov
cmp
ret
arpl
jbe
shlb
sub
push
sahf
mov
xchg
loop
mov
cld
adc
lods
test
mov
test
pop
adc
jns
cmp
jl
dec
loop
test
mov
movsl
hlt
adc
push
lahf
jle
test
lret
ret
les
inc
adc
inc
pop
call
das
xor
sbb
xor
add
pop
cwtl
lret
jmp
jo
push
test
or
pop
mov
lock
fsub
mov
outsl
pop
ljmp
daa
and
hlt
out
pop
ret
sub
ret
js
adc
pop
lods
cmpsb
jb
xor
pusha
mov
mov
mov
adc
faddl
adc
aas
cmp
sbb
cmpsl
in
jp
push
push
xorl
ds
mov
outsb
add
test
add
cmp
ret
mov
movb
push
fstl
shlb
rcr
imul
jecxz
or
xor
xchg
cld
aas
push
xchg
push
mov
sbb
lret
rcrb
test
mov
scas
adc
into
fidivs
mov
pop
repnz
inc
jb
imul
out
mov
imul
ja
push
push
insb
adc
sub
dec
xor
mov
lcall
xchg
sub
xchg
add
xchg
sti
pop
pop
test
out
gs
roll
imul
lcall
cli
mov
or
push
mov
sub
or
shll
cmp
das
inc
xlat
inc
sbb
movsb
jb
test
mov
add
and
or
pop
sbb
stos
add
pop
jae
test
repz
lret
sbb
cmp
scas
scas
inc
fcmovne
es
leave
adc
ja
mov
out
pop
mov
bound
lock
add
fisubrs
jae
test
aad
je
aam
pop
or
jecxz
cmp
mov
mov
sub
cwtd
mov
int3
mov
insb
iret
stos
mov
or
lret
rclb
ss
push
cmp
hlt
sub
xor
xchg
fwait
lds
mov
scas
js
push
pop
cwtl
int
movsb
loope
pop
jmp
shrl
nop
inc
mov
lret
adc
loop
pop
iret
out
fdivrs
lret
pop
and
or
in
jns
insl
cmpsl
out
lcall
divl
sbb
cli
fs
mov
orb
mov
lcall
jae
push
cmc
add
cmpsl
dec
sbb
loop
mov
imul
leave
not
jle
test
lret
cmp
aaa
shll
cwtl
mov
adc
daa
decl
mov
into
in
int
cmp
fwait
mov
and
iret
add
mov
push
adc
nop
fadds
xor
dec
mov
or
inc
dec
lcall
imul
inc
cltd
add
in
pushf
adc
xorb
scas
imul
mov
js
out
out
add
or
ljmp
sbb
loope
outsl
pop
add
pop
mov
mov
enter
or
jae
xor
add
dec
lahf
fwait
mov
inc
sub
scas
aad
and
jb
push
or
lahf
xchg
mov
or
pop
in
adcl
movsb
mov
popa
addr16
insb
sbb
and
sarb
xchg
mov
mov
scas
xchg
aam
cltd
movsb
subl
push
iret
push
ljmp
jbe
data16
out
int3
call
fst
stos
out
add
inc
ja
adc
jnp
fnstsw
mov
jno
xchg
sbb
nop
ss
xchg
ret
xchg
mov
nop
jno
dec
dec
add
mov
mov
aad
push
mov
push
jae
inc
and
shll
cld
xor
push
mov
rcr
and
dec
xor
adc
mov
jb
add
fstpt
add
or
sbb
jno
mov
xor
push
mov
stc
pop
mov
lock
push
xchg
jecxz
or
test
stos
pop
out
xchg
mov
icebp
cld
xor
adc
enter
dec
mov
sbb
sbb
outsl
stos
xor
mov
test
and
pop
aaa
test
dec
cltd
mov
cltd
fstl
jle
das
cld
pop
pop
or
test
cmpsb
push
ss
lods
mov
adc
dec
inc
jnp
inc
movsl
mov
repnz
dec
jnp
sub
orl
clc
nop
popf
and
jg
xlat
testb
pop
sbb
jge
pop
xchg
mov
lock
idivl
cmp
mov
lcall
dec
push
pop
add
add
sbb
outsl
out
xor
popa
lds
xor
decb
mov
xchg
xor
cmp
out
ret
dec
out
and
ds
es
repnz
xor
and
sbb
mov
jae
xor
mov
loopne
imul
call
and
jl
mov
jg
adcb
or
mov
mov
xchg
bound
ret
mov
ds
ficoml
and
test
sti
test
les
lock
icebp
cli
or
sahf
inc
xorb
dec
dec
mov
mulb
int3
int3
or
cli
jns
lds
imul
mov
add
in
sub
inc
push
jnp
arpl
push
ljmp
and
jge
dec
sbb
insl
fnsave
push
mov
scas
int3
repnz
jge
mov
mov
sbb
stc
xor
fdiv
mov
mov
sbb
out
jb
scas
roll
jae
cmp
cmp
fistl
in
loope
in
xor
or
push
mov
adcb
daa
sbb
and
jp
mov
xchg
jne
fnstsw
mov
or
scas
rcll
adc
out
cmc
push
add
jb
jbe
mov
testb
fdivrl
fidivrs
mov
cmp
mov
lcall
mov
push
dec
xchg
pusha
fwait
and
idivl
repz
out
ret
adc
inc
sub
js
addr16
sub
jbe
adc
or
ss
pop
int3
sub
mov
jno
hlt
cmp
mov
dec
rep
pop
out
loopne
int
movsb
jbe
ss
mov
or
xor
imull
mov
push
aam
sub
cmp
stos
lret
not
mov
lock
pop
addb
push
sbb
cmp
imul
scas
mov
fstps
mov
test
pop
or
add
test
push
pop
scas
mov
lea
inc
sub
xor
cmpsl
pop
popa
mov
dec
add
cwtl
mov
stos
fidivrl
fldl
cmp
ljmp
hlt
mov
fcomps
jae
sub
xor
fs
movsb
jle
dec
sahf
getsec
dec
stc
mov
cld
scas
scas
outsl
or
stos
sub
repz
fisubl
xor
inc
mov
lret
lret
jmp
ds
or
lahf
xor
or
cmpsb
rcr
push
idivl
inc
movsl
sahf
and
jecxz
adc
jo
adc
jb
out
sbb
sbb
aam
fs
negb
arpl
sub
insl
xchg
aas
fmull
push
push
xor
mov
jmp
shlb
int3
dec
pusha
cmpsb
lret
loope
or
gs
loope
aas
cwtl
xchg
popa
jno
je
mov
mov
jo
cmp
stos
and
lret
push
and
push
jmp
mov
lods
in
lahf
inc
mov
jl
push
push
cmp
or
and
sarl
fmuls
lahf
lock
sti
pop
mov
push
xlat
cmc
insb
sub
jbe
push
testl
and
lods
dec
jns
dec
push
lods
mov
sbb
add
mov
add
sbb
and
mov
rcr
lock
mov
dec
adc
sub
inc
adcl
jne
or
movaps
cld
test
imul
sbb
adc
sbb
jecxz
int
xchg
cmp
or
scas
adc
clc
sbb
testb
aaa
neg
rcll
push
popa
sub
call
pushf
xchg
add
push
pop
sar
mov
sti
push
out
imul
pop
lods
loope
xchg
xor
cmp
mov
sub
or
xor
inc
out
or
lahf
fldcw
stos
sarw
imul
sbb
sahf
push
xlat
mov
adc
leave
inc
inc
aam
sahf
jb
or
dec
ret
repz
test
pop
jl
inc
mov
add
pop
or
push
jge
push
jmp
jmp
cmp
inc
insl
push
or
inc
mov
inc
pop
outsl
xor
and
cmp
sbb
cmpsb
jg
adc
cmpsb
pop
clc
leave
dec
pop
shr
dec
test
fists
lret
add
fwait
ss
mov
insl
test
and
push
in
adc
hlt
mov
nop
movl
frstor
popf
xor
outsb
or
push
leave
in
and
loopne
out
in
test
popa
test
jmp
ljmp
inc
push
shl
jnp
hlt
insb
sbb
mov
pusha
mov
sub
aaa
lock
je,pn
ret
jp
mov
adc
adcb
or
adc
shlb
repz
dec
dec
xorl
shl
aam
mov
pop
stos
pop
xor
sbb
iret
xchg
mov
adc
add
dec
xchg
inc
fstpt
call
pop
push
xchg
sarl
or
push
out
jno
sub
mov
mov
mov
fcomi
push
outsl
repnz
xor
rcrb
das
push
sub
jnp
lock
mul
fmul
sbbl
pop
sbb
out
jmp
ljmp
xor
mov
movl
out
lcall
mov
rcrb
add
mov
push
inc
sub
jo
xchg
sarb
mov
stos
shl
loop
in
cli
outsb
sub
daa
cli
cmp
and
lock
cmp
sbb
outsl
in
pop
pop
scas
pop
sub
test
int
xor
mov
es
inc
dec
push
inc
lods
push
sbb
xlat
mov
leave
insl
addr16
push
test
jp
leave
mov
fidivs
push
imul
loope
pop
sbb
mov
sbb
ja
fwait
cmp
sbb
addr16
test
adc
in
or
aad
pop
jp
insl
out
pop
adc
aaa
loop
cmp
js
loop
push
push
addl
cmpsl
sbb
or
inc
dec
jmp
sub
imul
adc
and
mov
mov
pop
jnp
cwtl
xlat
push
xor
mov
dec
loopne
push
or
dec
inc
sub
cmpsl
fdivrl
pop
cmpsl
test
in
faddl
sar
adc
lods
or
fwait
aam
gs
dec
sbb
inc
fnsave
sbb
mov
out
iret
repnz
jae
pop
and
fwait
fs
int3
jne
out
cmp
out
and
mov
gs
pop
inc
cmpsb
jp
cwtl
lds
jmp
stos
test
int3
test
xchg
pop
adc
shlb
arpl
hlt
pushl
or
in
outsb
lahf
push
test
or
fdivl
add
jns
cmp
addl
or
imul
cmc
pop
pop
pop
sar
cld
imul
rorl
mov
lcall
jne
sub
sar
mov
cmpb
repnz
lret
jge
xchg
xlat
inc
adc
mov
lds
xchg
push
fists
enter
mov
mov
or
mov
pushf
adc
cmp
rcl
jnp
pop
clc
pop
movsl
or
dec
cld
and
movsb
loop
lcall
and
outsb
sbb
stos
xchg
fwait
adc
mov
push
mov
sarb
xlat
imul
scas
nop
or
popa
pop
mov
add
test
fdivrl
cmp
mov
imul
jl
pop
sub
xor
aam
cmp
dec
and
jnp
lods
dec
jnp
inc
lea
adc
or
movsb
fistpll
dec
imul
repz
push
adcl
rorb
les
lods
or
xchg
dec
fdiv
add
aaa
mov
and
loop
inc
lret
cmp
mov
add
stos
sbb
inc
fidivs
test
aaa
test
call
aas
add
xchg
xor
repnz
inc
cld
jb
inc
inc
mov
dec
mov
or
sbb
addr16
fcmovb
iret
adc
iret
mov
pop
mov
mov
and
pushf
test
jecxz
lods
xor
ljmp
inc
jmp
lock
mov
loop
fs
fmull
leave
jae
roll
mov
cmp
loopne
and
dec
pushf
mov
mov
outsb
xor
inc
mov
push
in
insb
sbb
or
out
and
js
cmp
push
sub
clc
xor
shlb
inc
pop
push
ret
vandnps
idivb
aad
je
jns
or
push
pop
notb
inc
testl
enter
icebp
inc
push
cltd
fs
sbb
pop
sbb
jne
in
ret
push
js
lcall
push
call
sbb
mov
adcl
ret
and
mov
inc
mov
loop
dec
mov
add
jl
xchg
sub
dec
mov
inc
int3
xchg
adc
xor
sub
sbb
shll
sti
pop
xor
fs
adc
call
add
divb
pop
movl
lret
pop
cmp
adc
push
mov
xor
out
and
stc
fdiv
mov
test
xchg
pop
notb
and
cltd
inc
ljmp
test
lahf
adc
testl
inc
mov
in
imul
pop
push
bound
lods
adc
cmp
stos
sbb
int3
jle
cmp
data16
icebp
xchg
xor
das
xchg
xchg
insb
xchg
adc
xor
fwait
dec
xorb
lea
push
test
arpl
pusha
popa
mov
enter
adc
sbb
push
fildll
and
dec
xchg
outsb
scas
stc
popf
dec
sub
cmp
mov
cmp
outsl
ja
mov
popf
jp
in
pop
dec
mov
insb
fsubl
jb
jne
sbb
pop
sub
hlt
fstpl
cwtl
out
enter
sub
jl
adc
push
or
push
insl
mov
mov
jmp
sbb
dec
mov
andb
push
pop
lock
inc
or
pop
cmp
js
pop
sbb
daa
repz
sub
pop
lock
cltd
imull
ljmp
xor
sahf
add
xchg
inc
mov
jne
xor
cmc
push
in
xchg
jl
lds
mov
das
lret
sub
ret
mov
stos
cmpsl
jg
or
das
sbb
je
sbb
outsl
test
dec
cmp
mov
inc
loopne
fwait
jmp
sahf
cwtl
imul
aas
dec
ds
call
popl
pop
pop
mov
mov
and
jne
sbb
mulb
jno
loope
mov
push
std
push
push
push
daa
dec
sbb
es
stos
call
push
or
test
adc
adcb
sub
and
push
xchg
neg
movsl
icebp
test
dec
rclb
int
inc
push
fcoms
ret
fsubrs
push
mov
sub
sti
cwtl
or
out
in
shlb
jge
test
out
outsl
icebp
lds
mov
int3
cmpsb
xor
aad
jp
sub
movsl
jp
js
popf
mov
pop
in
mov
mov
int3
xor
mov
push
enter
adc
inc
shll
pop
pushf
mov
push
outsb
adc
insl
pop
lods
add
jecxz
addr16
rclb
movsb
mov
lcall
mov
xchg
int
xor
xlat
stos
shrb
cmp
mov
mov
xor
dec
iret
inc
inc
test
mov
cld
aam
xchg
jmp
mov
or
or
mov
xchg
outsl
aaa
in
jbe
push
or
mov
in
lcall
mov
cs
jmp
out
out
xor
sahf
sbb
addb
ret
mov
mov
in
xchg
add
jmp
outsl
mov
mov
cmp
in
add
xchg
movsb
repnz
jmp
push
test
mov
push
cmpsl
add
xchg
jl
cs
into
aaa
inc
fnstsw
pushf
mov
jecxz
pop
movsl
xor
mov
or
data16
fisttpl
test
pop
mov
push
pop
jp
mov
pop
test
xchg
imul
out
jo
mov
scas
xchg
inc
or
mov
mov
jle
jge
in
bound
pop
maxps
push
push
mov
or
push
dec
adc
out
sub
pop
adc
pop
mov
dec
and
fcompl
jecxz
and
xlat
stc
jb
or
adc
fst
mov
mov
imul
mov
mov
loop
ja
leave
aam
mov
adc
jmp
and
mov
pushl
shlb
cmp
nop
or
mov
add
and
mov
dec
imul
lods
inc
or
xor
jns
pop
int3
push
shlb
fldl
lahf
mov
push
pop
fwait
aad
push
mov
add
icebp
pusha
fidivl
sbb
cltd
mov
gs
mov
addr16
cltd
mov
in
dec
je
push
lods
xchg
sbb
fldenv
add
inc
into
clc
rcr
push
push
jnp
popl
xchg
push
fisubrl
and
loop
mov
outsl
mov
mov
out
xor
daa
shlb
mov
daa
inc
adc
jne
fwait
repz
mov
fbld
mov
mov
ljmp
dec
cmp
fs
jne
adc
add
repz
push
and
mov
repnz
clc
jp
out
in
lcall
push
push
pmulhw
jbe
and
sbb
repnz
jne
add
cmp
jno
mov
ret
sbb
mov
les
fsubs
inc
mov
ljmp
pushf
es
add
enter
sbb
jno
dec
cmpsb
xor
outsb
xor
out
add
sub
add
dec
enter
stc
les
lds
in
test
nop
das
mov
lds
mov
add
ds
out
jae
jge
adc
std
inc
shrl
inc
ja
mov
push
jb
fmulp
dec
mov
cmp
push
mov
jecxz
aas
stc
popf
hlt
cmp
push
sti
in
cli
mov
sub
cmpb
push
lcall
lcall
sahf
or
add
adcb
popa
popa
xchg
cwtl
lret
inc
clc
and
lea
lds
push
dec
outsl
fdivrl
cmp
cmp
push
jae
out
imul
or
mov
mov
xor
mov
lret
mov
add
iret
es
shr
xchg
xorl
jmp
mov
lea
adc
cmp
inc
mov
and
xor
dec
sub
xchg
icebp
mov
xchg
inc
jo
aas
cmp
inc
mov
imul
xchg
push
jecxz
push
fidivs
mov
or
in
xor
jmp
mov
pop
dec
adc
cmpsb
mov
subl
cwtl
cli
inc
notb
jge
mov
in
cwtl
mov
sti
loop
daa
sti
jbe
pop
ss
hlt
fildll
mov
xchg
adc
mov
and
mov
rolb
fwait
lds
loop
pop
mov
jecxz
faddl
xor
adc
mov
daa
outsl
cmp
cmc
fwait
lcall
dec
sbb
and
pop
pushf
pop
out
push
sub
and
push
inc
insb
mov
mov
pop
mov
dec
xlat
xchg
int
out
adc
adc
add
adc
mov
imul
xor
pop
push
jb
cmp
sub
cs
push
lods
xchg
cmp
mov
rol
sahf
imul
leave
sub
lret
in
popa
mov
fldenv
and
xor
or
jecxz
scas
mov
mov
jbe
leave
inc
mov
mov
pop
push
loope
push
or
inc
loope
adc
pop
mov
push
and
hlt
sbb
and
or
sbb
mov
std
negl
adc
arpl
xor
bound
inc
inc
sub
clc
jo
out
stos
roll
mov
out
and
xorb
fwait
lret
mov
out
test
scas
sub
mov
cmp
add
mov
push
mov
outsl
inc
decb
push
outsl
mov
arpl
jge
jp
mov
aaa
xchg
rorl
fisttpll
stos
pusha
in
cld
aas
andb
xlat
mov
fistpl
or
inc
mov
xor
dec
addl
cmpsl
fnsave
pop
add
into
sub
fdivl
xor
inc
out
sub
shlb
dec
add
jge
call
xor
xchg
sbb
push
xor
sub
shll
out
add
call
xor
push
adc
sub
enter
outsl
cmpsl
gs
mov
push
sub
push
lods
ljmp
dec
mov
sub
or
outsl
mov
dec
movsl
push
clc
icebp
inc
lcall
push
ja
aaa
leave
cmpsb
or
pop
fistps
jle
test
inc
mov
cmpsl
inc
not
shll
mov
and
push
cmp
xchg
jmp
add
fcomps
pusha
imul
mov
fld1
out
aad
out
xchg
mov
dec
mov
jp
adc
push
lcall
addr16
outsb
test
mov
bnd
out
inc
sti
push
xchg
mov
mov
fs
outsb
ret
cli
fisttps
add
push
mov
mov
mov
add
sub
pop
in
jecxz
xor
push
inc
arpl
scas
fldl
pusha
cli
sbb
cmp
lods
jmp
stos
pop
add
push
mov
xchg
jge
movsb
inc
popf
mov
pop
xlat
sub
cmpsl
and
xchg
fs
in
lods
inc
movsl
mov
shrb
shll
stos
and
mov
xor
mov
jbe
push
lock
lcall
jge
lret
xor
mov
push
outsb
push
call
test
push
inc
hlt
adc
arpl
int
imul
dec
push
inc
fistps
ret
pop
ret
mov
in
cmpsb
cmpsl
repnz
xchg
lret
test
cld
test
mov
and
mov
pop
or
dec
jae
inc
xlat
or
cmp
cmp
jge
jb
dec
cwtl
lea
loopne
icebp
std
cs
adc
inc
cmp
adc
push
adc
jno
adc
mov
aam
in
or
and
mov
ret
mov
jno
fimull
mov
in
mov
mov
int3
outsb
cmpsl
hlt
ret
or
je
into
out
lods
scas
xchg
cld
mov
xor
pushf
cmpsb
push
mov
je
pop
lcall
push
popf
cmc
push
call
loope
adc
pop
lods
mov
scas
lahf
es
je
aas
sub
cmpsb
push
dec
jmp
xchg
das
cmc
aaa
push
lea
xorb
jecxz
dec
jmp
add
pop
mov
mov
adc
and
bound
jno
and
jle
shrb
inc
xchg
xchg
xor
mov
push
or
in
rcll
xchg
mov
or
xorl
xchg
shrb
pop
pop
mov
mov
inc
insb
dec
fcomip
mov
jmp
jns
jnp
mov
aam
out
push
xchg
mov
xor
adc
insl
lods
sarb
add
int3
pop
xchg
mov
imul
mov
mov
pop
xor
clc
add
daa
imul
stos
icebp
loopne
sarl
imul
xchg
dec
aad
sub
mov
or
lods
aaa
pop
pop
sub
call
fldcw
push
jae
add
push
das
jg
or
arpl
fwait
cmp
dec
add
jne
enter
cmpsl
in
inc
lods
cmpb
inc
pushw
xlat
pop
mov
outsb
inc
subb
jg
ret
enter
clc
ffree
xchg
sahf
test
pop
adc
push
pop
icebp
fsubrs
xchg
push
xchg
inc
imul
or
dec
lods
test
pop
mov
fcomip
xchg
sub
mov
lcall
mov
jne
scas
addb
pop
jb
gs
rorl
jg
jl
dec
add
cs
adc
shl
push
mov
jp
repnz
jp
adc
add
and
mov
rclb
and
or
mov
jb
ret
repz
push
daa
dec
mov
fs
fsub
sbb
outsb
movsl
push
cld
inc
pop
rclb
fimull
in
fimull
adc
inc
hlt
enter
movhps
lret
mov
dec
mov
mov
xor
mov
sbb
inc
push
jbe
dec
sub
sbb
mov
xlat
shl
mov
mov
fstp
sub
mov
cmp
dec
xor
in
dec
imul
stos
test
les
inc
cwtl
ret
int3
rclb
loop
outsb
push
jge
mov
stos
sbb
ja
scas
xchg
in
push
ret
fs
cmpsb
bound
mov
xor
addl
fnstcw
lret
jb
pop
jge
cmp
push
lods
add
mov
inc
xor
xchg
cmc
fwait
test
xchg
ret
jmp
xor
xchg
ret
pop
nop
sbb
movsb
add
out
lret
mov
bound
inc
mov
stos
in
lds
xchg
inc
dec
or
xchg
cmp
pop
inc
rolb
push
daa
dec
push
out
xor
imul
jp
cmp
lock
jg
cltd
mov
cltd
lret
imul
les
jl
popl
cli
cmp
adc
out
and
stos
popa
fcoms
mov
inc
inc
es
fimull
jae
jg
and
out
push
aad
pushf
rep
inc
and
or
add
push
xor
sub
sub
jle
mov
and
mov
jmp
sbb
xchg
mov
push
fstps
mov
add
inc
sub
scas
hlt
xor
leave
mull
arpl
roll
stc
dec
dec
jb
into
jge
xchg
je
mov
outsl
or
inc
iret
scas
loope
pop
subb
add
xor
ficoms
xchg
cld
push
adc
aam
pop
jg
cmpsl
jecxz
fidivrs
xchg
mulw
cli
cmp
mov
mov
or
stos
stos
push
pop
mov
loop
sarl
xchg
dec
cltd
xchg
outsb
mov
icebp
mov
push
outsl
gs
data16
in
xor
or
cwtl
push
pop
imul
cmpsb
movsb
bound
cmp
jle
mov
pop
call
mov
and
movsl
sub
les
jbe
cmp
mov
xor
aas
in
fmul
pop
dec
cmp
int3
sub
xchg
insl
dec
ljmp
aas
sbb
mov
into
xor
cmp
adc
repz
or
mov
mov
aad
mov
cmp
orl
push
lea
sbb
pop
mov
gs
je
adc
mov
mov
pop
and
or
dec
arpl
mov
leave
pop
inc
push
adc
sub
lds
push
mov
les
xor
dec
les
imul
loop
test
sub
mov
sarl
loope
out
mov
iret
xchg
aas
mov
rclb
cmp
jmp
mov
add
dec
xor
insl
xor
push
ret
daa
std
cmp
nop
inc
push
sahf
je
jne
fbstp
mov
mov
add
jge
jmp
jno
mov
in
fcoml
loopne
mov
lock
rclb
push
jmp
lcall
pushf
mov
icebp
push
in
adc
hlt
cmp
iret
cli
and
insl
inc
push
and
jl
xchg
in
jg
lock
outsb
les
subl
ja
mov
cli
add
xchg
add
insb
fwait
and
mov
sbb
push
and
inc
jns
xchg
xchg
loope
jnp
sbb
je
mov
shrb
testb
jno
mov
test
xchg
fidivl
xlat
mov
fcomi
xchg
lahf
mov
sub
and
lods
xchg
loop
mov
push
cmp
jge
dec
int
cmp
daa
jns
out
ljmp
mov
xorb
ss
mov
popf
ljmp
dec
adc
sti
mov
adc
and
dec
pop
push
sub
in
xchg
iret
pop
xchg
xchg
dec
push
dec
fwait
sbb
fstps
rcr
add
dec
mov
out
js
aad
data16
ljmp
cli
push
outsl
jle
lret
test
sti
inc
ret
rclb
loope
shll
stos
scas
fdivrl
jbe
add
nop
pop
std
jo
.byte
.byte
.byte
pop
lcall
add
add
es
addr16
push
add
xchg
inc
add
or
xor
or
pusha
iret
fcompl
jb
jo
and
adc
mov
js
das
das
cld
mov
je
data16
cmp
lods
pop
enter
fnstcw
push
lods
xchg
or
imul
movl
lods
jmp
in
mov
add
jge
pop
push
jno
or
add
add
bound
inc
clc
add
jge
movntq
out
xor
lahf
push
pop
and
ljmp
movsl
fs
pop
fildl
fstps
adc
frstor
adc
pop
jb
enter
enter
jg
sbbb
xchg
add
and
sbbb
shll
and
sbbb
jb
enter
enter
hlt
shlb
jb
jmp
push
adc
xchg
enter
mov
int3
cmpsl
mov
mov
in
nop
dec
subb
and
pop
push
add
mov
dec
js
xchg
and
test
cmp
pop
lods
stos
in
and
dec
sahf
fnsave
xchg
lea
movsl
dec
inc
scas
push
loopne
jge
lods
adc
xor
jl
fucomi
pop
jl
es
lods
dec
jb
leave
lods
shlb
ret
cld
mov
sub
mov
mov
and
or
fwait
shlb
imul
cltd
mov
mov
jl
xchg
add
fists
dec
cld
and
mov
xorb
mov
xchg
xchg
dec
test
mov
enter
in
int3
sub
shl
mov
rol
add
xchg
mov
jbe
ds
push
cmp
dec
cmp
mov
add
sub
jnp
fs
lods
and
sub
and
imul
cwtl
mov
ficomps
add
add
nop
sub
int3
xlat
mov
xchg
adc
xchg
in
xchg
dec
fcmovnbe
add
out
fnstsw
lret
and
bound
mov
inc
or
push
fsubrl
sub
cmp
dec
ss
adc
mov
rolb
and
sub
xchg
pop
mov
xchg
nop
nop
xor
cwtl
pop
xor
and
xor
mov
xor
push
leave
fidivrl
xchg
sbb
sbb
mov
nop
addr16
int
cwtl
add
add
js
or
and
out
sti
and
lcall
inc
pop
mov
ret
fidivrs
rorb
lock
dec
pop
scas
insb
psubw
xor
adc
aad
idivw
jle
test
cmpsl
stc
mov
in
dec
add
dec
idiv
aas
fstl
daa
push
push
loope
push
push
xor
push
mov
lea
inc
leave
aaa
inc
rcrb
push
add
sbb
orb
xor
push
enter
adc
shrb
and
pushl
jg
inc
or
add
xor
fs
orl
pop
pop
ret
push
mov
add
insl
jge
ret
pop
and
repz
mov
hlt
lea
jge
aas
mov
je
rcl
pushl
jae
js
push
test
or
fisttpl
nop
or
cwtl
adc
and
movsb
sbb
and
dec
xor
lods
and
sub
rorb
xor
int
mov
in
inc
fmuls
mov
xchg
ror
push
add
hlt
in
in
out
push
add
pusha
mov
outsl
mov
push
lea
pop
movl
ficompl
outsl
add
nop
mov
mov
je
cwtl
adc
pop
push
loopne
nop
jne
adc
push
je
adc
push
mov
mov
in
or
add
or
ret
xchg
jg
jecxz
xchg
outsl
cmpl
popa
mov
mov
add
ret
cld
mov
push
test
insb
psubsw
loopne
push
sbb
mov
pusha
adc
jmp
push
dec
subb
jmp
mov
xchg
push
mov
outsb
add
sbb
push
mov
or
xchg
mov
repnz
inc
jg
dec
push
push
fisttps
dec
inc
pushf
push
flds
outsb
fidivl
pop
ret
push
mov
data16
fbld
insb
pop
and
sbb
and
pop
xchg
adc
out
and
mov
punpckhbw
or
mov
and
inc
jl
into
std
mov
or
jg
mov
shlb
gs
and
pop
mov
sub
out
pop
adc
fsubs
or
test
test
pop
inc
insl
pop
xor
lea
mov
or
pop
jne,pn
sti
mov
fs
or
je
nop
or
insb
cmp
cmp
mov
jnp
je
or
ret
pop
movsl
lds
fisttps
in
mov
insl
xor
pop
aam
fstps
fidivrl
pop
or
lods
call
sbb
out
xor
sub
data16
adc
outsl
or
or
mov
or
xchg
pop
or
sbb
mov
xchg
inc
or
add
das
fsts
push
adc
movsl
lret
xlat
lock
adc
fisttpl
mov
sti
jns
mov
adc
pop
or
loope
sbb
mov
pop
push
sbb
fnstcw
jp
cmp
je
jmp
jmp
pop
jne
fcomps
jbe
sbb
and
jmp
js
jmp
adc
ret
sar
add
adc
int3
jo
mov
pop
fnstsw
pop
test
jnp
pop
fistpl
xchg
dec
pop
cmp
ljmp
sbb
pop
cmp
add
es
lea
js
adc
js
inc
adc
imul
js
adc
sbb
imul
lods
mov
test
sti
adc
or
pop
cmp
jl
jnp
or
aas
jge
cmp
jg
lahf
mov
mov
add
sti
test
sbb
insb
sub
or
in
rcrl
rcrb
mov
loope
cmp
int3
ret
inc
push
movsb
sub
movzbl
push
or
jne
adc
or
cmp
in
dec
sbb
sbb
pop
mov
stos
jmp
mov
add
jmp
adc
add
ficomps
fisubs
inc
insb
mov
jl
or
or
or
jge
mov
mov
insb
sub
int
and
rolb
out
in
std
jp
push
je
adc
clc
lods
and
xchg
add
dec
out
aad
inc
and
cltd
mov
enter
and
xlat
add
iret
shlb
mov
mov
jo
lds
add
adc
pusha
xor
in
sub
ret
paddusb
int3
add
mov
sbb
mov
adc
sbb
fs
inc
and
daa
jmp
xchg
pop
add
jne
sbbb
push
xor
mov
or
inc
int3
and
jecxz
lods
mov
mov
xor
adc
imul
adc
scas
sarl
gs
pusha
insb
xchg
sbb
jl
add
fstpt
sbb
and
mov
pusha
mov
ds
pushl
xchg
mov
sbb
into
cmp
mov
jle
sub
adc
xor
and
outsb
inc
jge
test
lcall
pop
es
mov
outsl
mov
mov
xor
pop
dec
ret
sub
movsl
imul
ret
ficompl
in
or
cmp
adc
mov
add
jb
stos
add
rorb
cmp
psrlq
ljmp
sbb
xor
sub
mov
loope
cmp
lds
sub
jmp
jmp
push
dec
adc
lret
add
dec
pop
xchg
test
add
push
xor
xor
movb
inc
fldl
cmp
sbb
mov
adc
pop
jns
gs
stos
pop
push
pop
or
xchg
push
in
inc
inc
mov
mov
insl
or
mov
inc
mov
adc
jne
outsl
mov
add
sti
je
cmp
dec
dec
mov
xor
adc
jbe
insl
sub
clc
and
sbb
jne
add
pushf
push
scas
xchg
inc
inc
and
cwtl
cli
sbb
popf
jmp
pop
adc
add
loope
cmp
or
or
int
in
push
aam
fldl
and
dec
mov
or
es
sub
mov
shl
scas
test
dec
and
inc
ds
adcb
jl
sub
mov
mov
adc
xor
in
sub
xor
sub
imul
add
dec
test
sub
mov
sbb
mov
jp
add
and
adc
cltd
mov
movsb
lods
mov
outsb
insl
mov
movsb
cmp
fcoml
les
add
xor
or
or
sub
shl
imul
and
outsb
cmp
mov
enter
pop
orb
cmp
cmp
inc
mov
decl
add
mov
or
or
sbb
cltd
dec
or
push
js
xor
add
mov
jae
adc
xchg
int
aad
sbb
test
adc
ficompl
insb
dec
or
dec
aam
dec
adc
adc
pop
idivl
jno
pop
dec
sbb
add
adc
add
dec
adc
dec
addr16
inc
add
or
mov
and
cs
adc
adc
mov
icebp
sbb
scas
xor
mov
test
cmp
mov
dec
clc
scas
jmp
mov
and
jo
sti
lock
add
or
jnp
mov
mov
repz
adc
adc
fwait
sub
cmp
and
add
sbb
leave
and
pop
cwtl
ss
mov
pop
mov
enter
mov
test
xor
cmpsb
daa
dec
xor
mov
mov
jg
sbbl
mov
mov
mov
mov
mov
xor
mov
inc
inc
shr
jge
cmp
sub
imulb
xor
xlat
jmp
rorl
mov
push
mov
repnz
xor
sub
enter
cpuid
mov
and
mov
cs
or
repnz
repnz
je
or
add
sub
adc
add
lahf
std
push
push
dec
dec
ret
pop
pushf
ret
jmp
enter
jo
js
aas
aad
jl
outsb
test
je
lea
jmp
lea
jbe
incl
mov
add
test
jne
sub
ss
add
add
lods
mov
push
xor
test
neg
fildll
pop
xchg
je
add
jne
add
mov
std
fucomip
adc
or
or
lcall
sub
std
fwait
add
jne
adc
mov
mov
sti
cmp
or
jle
and
stc
popa
jl
jmp
sub
push
fistpll
push
sub
push
sbb
push
adc
aas
imul
jg
enter
mov
cltd
add
adc
mov
mov
jmp
and
sbb
cmpsb
rorb
jl
and
push
out
sbb
daa
ret
adc
outsl
xchg
mov
ds
jo
xor
mov
push
jns
dec
cmpb
jge
jmp
aaa
cmp
add
sub
or
inc
pop
cwtl
fsts
xor
test
pop
and
je
neg
adc
neg
pop
jg
jge
pop
push
mov
push
call
ljmp
je
push
push
push
push
add
fsin
add
movb
pop
aas
or
add
ss
push
call
mov
mov
mov
mov
add
xor
movl
pop
pusha
or
mov
pop
push
xchg
cmp
decl
sti
or
add
push
push
call
mov
adc
cmp
out
sbb
sbb
xchg
cwtl
sti
test
daa
push
mov
in
lds
insb
and
sbb
jo
or
mov
pop
push
push
push
adc
fld
xchg
or
add
push
push
mull
and
cmp
pop
repnz
push
sub
adc
out
fs
loop
cwtl
negl
mov
pop
ret
xor
aas
fcoms
aaa
sbb
dec
mov
andl
test
je
and
cmp
jg
or
sub
cmpb
dec
mov
dec
mov
loopne
push
pushl
jno
sbb
les
cmp
je
pop
andb
and
in
in
or
push
lock
xor
push
push
jecxz
cmp
lods
pop
adc
testb
icebp
jle
movzwl
sti
and
jg
jecxz
cmp
sub
pop
or
insb
sti
outsl
or
inc
inc
inc
inc
dec
jne
xor
xor
lods
add
add
insl
test
sbbl
xor
ljmp
xor
cmp
jne
mov
push
call
mov
mov
in
sub
push
xlat
mov
push
mov
xchg
movb
or
icebp
pop
adcb
xor
cmp
sub
fistpll
stos
sbb
jbe
add
add
rcl
jo
adc
jge
push
lea
push
push
sbb
mov
xor
pushl
fucomp
push
adc
mov
and
add
cmp
jle
mov
imul
leave
jbe
inc
clc
xor
in
lock
dec
in
mov
dec
movsb
decl
adc
sub
out
jl
dec
push
or
push
cmp
jbe
push
or
cmp
outsb
mov
push
fiaddl
and
cmp
sbb
adc
lock
shlb
xchg
or
mov
mov
ret
jbe
fldenv
rcr
lds
notb
addb
add
push
and
fcmovnb
decl
loop
or
sar
or
push
or
lods
std
or
fnstcw
mov
mov
fmul
add
add
xlat
add
add
gs
cmp
push
mov
in
pop
jl
pop
cwtl
push
inc
mov
mov
pop
mov
clc
out
mov
mov
inc
cmp
je
mov
cmp
fdivrl
shlb
push
push
push
sahf
push
js
jae
mov
dec
iret
cli
xor
outsl
pop
clc
cmp
pop
adc
push
jb
lea
push
lcall
add
cmp
jl
sub
int
jns
adc
int
sub
inc
pop
cltd
or
ret
test
add
mov
incl
stc
jle
out
dec
cmc
shll
jne
fstpl
inc
jmp
add
inc
mov
add
push
lea
in
mov
loop
jge
mov
lret
test
or
sbb
dec
fldl
sahf
jmp
and
mov
mov
stos
iret
sti
jg
jg
cs
fisubs
in
jecxz
pop
add
add
add
lods
cmp
dec
std
push
scas
sar
sbb
cmp
mov
mov
jge
pop
fildl
mov
cli
roll
fisubrs
push
jne
mov
push
or
test
lods
add
add
subl
xor
clc
sbb
cli
add
cmp
add
jg
jle
mov
daa
add
neg
and
insb
xor
and
add
dec
outsb
sbb
mov
roll
push
mov
or
sahf
mov
jle
call
inc
mov
jmp
mov
lahf
mov
lahf
add
mov
or
sbb
outsb
neg
mov
mov
adc
mov
sbb
repz
xchg
outsb
fdivs
mov
sbb
sbb
and
ja
orb
repz
sub
push
add
pop
mov
hlt
xchg
mov
imul
push
addl
pand
loopne
or
sbb
sbb
mov
rcrb
in
xchg
sarl
jmp
addr16
cmp
mov
mov
or
add
pop
cmpl
xlat
jnp
jno
push
inc
leave
jo
lea
pop
test
out
or
jno
je
push
sti
cli
imulb
push
mov
mov
insb
test
xchg
rolb
add
sbb
lcall
in
shrl
out
ficoms
or
loopne
sub
insb
nop
test
jle
mov
fistps
push
lcall
in
sbb
cmpsl
filds
je
jnp
pop
jb
call
jnp
in
jo
movsl
fwait
addr16
mov
test
jne
jb
in
rolb
jl
jbe
jle
nop
sbb
jo
mov
fadds
fildl
xor
add
rolb
add
push
mov
push
xor
rolb
sbb
and
aad
imul
dec
or
and
jne
xchg
push
je
jle
mov
cmc
push
mov
push
jae
xchg
xchg
xor
add
jnp
jge
ss
jmp
sub
mov
cmp
popf
out
loope
xor
xor
add
faddp
xchg
xchg
add
int
sti
pop
add
mov
decl
lds
jne
mov
mov
aam
or
push
sub
push
aaa
dec
fnstenv
insl
ret
popa
push
std
out
push
adc
in
cmp
ret
insl
mov
or
pop
das
cld
mov
or
push
or
push
mov
imull
lds
mov
sbb
sti
mov
repnz
push
push
fisubs
dec
mov
je
xor
add
mov
mov
jmp
aas
inc
dec
jne
cmp
push
jne
add
jne
gs
cmp
sti
repnz
push
adcl
push
mov
push
sbb
inc
sbb
sub
mov
sti
and
dec
jo
in
pop
or
adc
or
outsb
sub
cmovb
push
cwtl
cmp
add
jo
stos
fadds
cltd
inc
pop
faddp
mov
aaa
sub
inc
loope
pop
mov
ja
je
xor
int3
add
xchg
jg
pop
and
or
cld
movl
mov
adc
stc
jge
fmuls
xchg
xchg
fs
inc
outsl
test
and
int
inc
dec
cs
jmp
inc
jnp
add
pop
pop
adc
aas
cli
adc
daa
dec
mov
sti
jle
les
mov
insl
mov
or
add
adc
pop
jne
arpl
mov
je
jmp
and
and
scas
inc
sbb
sub
cmp
sbb
inc
in
sub
mov
into
xchg
sbb
ret
mov
mov
enter
clc
fld1
mov
sub
cmp
jp
pop
das
mov
test
push
mov
push
in
adc
push
inc
push
add
and
sbb
sub
mov
xor
mov
mov
xor
adcl
adc
xchg
add
in
mov
pop
push
mov
pop
test
dec
push
pop
jnp
dec
add
push
insb
leave
xchg
push
cmp
fs
push
xchg
adc
push
push
ret
pusha
ljmp
adc
cs
add
pop
jns
sub
add
out
int
fsubrs
sbb
add
mov
mov
sbb
sbb
sti
fisubs
sbb
push
and
insl
inc
cmp
mov
je
dec
push
adcl
mov
sub
nop
and
sub
into
insb
and
pop
dec
dec
insb
leave
nop
jge
out
inc
cmp
or
mov
inc
lea
add
mov
dec
dec
xor
xor
push
or
fistps
in
loop
stc
adc
decb
or
es
push
jmp
push
or
arpl
and
pop
imul
sbb
push
sbb
add
add
mov
fiadds
add
mov
jae
inc
andb
stos
dec
mov
es
je
cmpl
hlt
lea
sbb
inc
sbb
mov
pop
aaa
cmpb
repnz
adc
dec
mov
push
enter
sbb
lea
push
fs
sahf
fcomip
adc
arpl
pop
pop
jne
push
mov
xchg
fs
mov
mov
cld
sub
rcrl
cld
loopne
jo
popa
outsb
lea
loope
in
xchg
lcall
dec
bound
ja
or
iret
mov
add
hlt
mov
jno
inc
clc
jne
adc
or
insl
je
add
inc
inc
add
inc
or
mov
cmp
sbb
jo
xor
jmp
mov
lret
or
scas
aam
jb
adc
fnop
dec
pushf
movsl
mov
mov
push
cmovl
inc
jae
or
push
loope
inc
and
outsb
xchg
or
xchg
clc
mov
sbb
mov
std
es
jmp
pop
je
mov
mov
pop
inc
push
inc
jae
pop
cmp
push
pop
sti
add
ds
rolb
cmp
jle
xorps
loopne
inc
adc
push
sub
push
dec
mov
pusha
fimuls
ljmp
es
fiadds
rclb
adc
addl
in
xor
testb
adc
adc
outsb
or
addb
repz
push
dec
enter
jl
aad
mov
test
les
mov
sahf
inc
mov
nop
nop
outsb
push
push
push
add
push
mov
push
sub
jbe
inc
fadds
daa
and
push
xchg
mov
jae
imul
out
cmp
dec
or
cltd
sbb
or
std
or
and
sbb
sub
das
xor
adc
mov
addr16
popa
rolb
lods
inc
or
rcl
mov
test
adc
clc
pop
leave
shrb
bound
int3
rolb
inc
sub
ja
pop
dec
cmp
or
cld
add
shlb
mov
ljmp
lock
or
xchg
insl
int3
jmp
pop
sub
insl
xor
call
or
mov
aaa
les
int
fiadds
je
pop
stc
leave
jae
inc
rol
insl
xchg
sbb
enter
mov
rorl
clts
je
stos
and
decb
icebp
mov
sub
jl
mov
cmp
add
jg
shrb
fs
jl
inc
or
dec
pushf
lahf
push
mov
into
push
or
cwtl
sub
int3
inc
adc
in
movsb
rolb
cmpsl
shlb
cwtl
mov
pop
cmp
loop
mov
lods
add
je
pop
add
jbe
add
jnp
dec
add
pop
pop
cmp
mov
addr16
enter
push
add
adc
jnp
scas
sbb
loopne
cmp
adc
fwait
or
fcmovu
pop
xor
call
pop
inc
or
insl
dec
and
xchg
or
in
push
and
mov
sbb
fwait
xor
icebp
mov
sbb
scas
jmp
shlb
mov
push
sub
push
add
push
sarb
sbb
and
cmp
mov
sbb
dec
inc
mov
imul
test
push
adc
adc
fstpt
test
sbb
sub
inc
jae
arpl
je
sti
pop
mov
push
sbb
add
mov
adc
and
sbb
cmp
fidivl
pop
sbb
xor
mov
in
or
adc
sub
scas
sbb
cmp
xchg
adc
clc
sbb
ret
outsl
cmp
das
fcoms
jno
call
cmp
cmp
repnz
mov
xchg
scas
sbb
mov
jmpw
and
fildll
cwtl
push
call
pop
repz
inc
cmp
adc
and
cmp
aaa
fxch
xlat
sbb
jmp
push
xor
mov
or
xor
xchg
mov
pop
adc
ss
dec
shl
and
push
lea
push
sub
jge
add
jle
inc
pop
nop
lcall
inc
movsl
pusha
add
movb
lea
and
jp
aaa
fadds
sub
inc
cmpb
jne
data16
pop
fsubs
lret
scas
sub
xorl
mov
testb
sbb
xor
mov
push
push
sub
pop
mov
stos
add
enter
lea
ss
jle
into
repnz
test
js
xchg
cli
mov
cmpb
pop
loopne
jp,pt
pop
adc
inc
inc
push
clc
shll
mov
pushf
outsb
mov
leave
or
sbb
gs
sar
lcall
pop
fadds
mov
movsl
cli
pusha
xlat
shl
insl
pop
test
push
mov
je
pusha
outsb
loopne
pop
and
adc
in
dec
call
shl
arpl
movsl
or
adc
mov
push
push
jle
adc
pop
inc
xchg
pushf
jmp
push
cmp
imul
xchg
mov
mov
xchg
xchg
fwait
ss
xchg
adc
jb
jnp
mov
xchg
adc
pop
in
daa
pushf
pop
das
ja
push
add
add
lea
cmpb
in
jne
cmp
mov
ljmp
pop
testb
add
lea
inc
sbb
sbb
out
enter
icebp
bound
cwtl
movsl
push
mov
call
in
mov
xchg
xor
lahf
lods
xchg
mov
jb
sbb
scas
or
jne
subl
je,pt
imul
insb
and
test
je
push
sbb
loop
xor
sarb
pop
sub
in
lcall
cld
mov
pop
inc
bound
cmpsb
and
out
xchg
cmpsl
sub
scas
pop
push
mov
fstl
push
dec
mov
out
adc
rcrl
loopne
les
fsubp
sbb
mov
add
rcr
or
pop
mov
fsubp
fdivr
fxch
fstpl
mov
sbb
fldcw
sbb
and
xor
fadd
fdiv
and
adc
fmull
out
adc
jmp
adc
cwtl
ret
and
stc
sahf
in
ret
rcrl
adc
jns
inc
or
call
popf
in
imulb
ret
repnz
loopne
cltd
in
mov
loopne
fdivrp
or
in
xor
fnstenv
shlb
fcomp
jae
lret
jmp
sub
sub
test
mov
sub
imul
fstl
imul
insl
imul
push
sarb
push
movsl
ffree
lods
jecxz
lods
mov
pusha
insl
sub
fildl
fisubl
ret
or
pop
fadds
loopne
add
pop
or
ret
jbe
rorb
loop
imul
inc
push
ss
cmp
pop
xchg
jecxz
xchg
jo
jle
xor
add
add
cmp
pop
jl
mov
mov
xchg
clc
add
lea
or
xor
stc
fstpl
jle
in
mov
imul
mov
shlb
rcr
gs
jle
icebp
push
out
ss
add
test
jmp
out
sbb
pop
jae
dec
cmp
cmp
push
dec
out
dec
jge
pop
call
sub
pop
mov
jle
jb
add
push
jae
mov
sub
pop
adc
mov
pop
daa
jo
or
shl
aam
fadds
and
arpl
fstpl
insl
mov
loopne
inc
jo
fisubrs
lret
xchg
mov
in
mov
fldcw
lcall
push
cmp
imul
mov
sarb
sti
mov
jp
inc
fucomp
or
xchg
sub
inc
fldl
fistpll
or
hlt
push
aas
clc
mov
gs
ret
pop
jl
leave
adc
ljmp
jg
cmpl
dec
pop
jne
pop
pop
jmp
mov
or
add
pusha
pop
mov
pop
or
cs
adc
lea
shlb
dec
or
mov
in
adc
lds
nop
scas
or
or
inc
mov
dec
adc
add
xor
fmuls
hlt
cmp
cmp
or
mov
sbb
in
mov
outsl
lret
fcmovnu
jnp
sti
mov
or
cmp
les
int3
jg
in
test
rorl
sub
inc
inc
dec
insb
and
fnstcw
jle
movzbl
pavgb
pop
mov
push
mov
push
jl
mov
sbb
cmp
fs
xchg
cli
jecxz
mov
fmull
jl
mov
push
rol
push
xor
add
fsubrs
mov
jl
mov
mov
mov
lock
mov
sub
or
call
and
pop
push
push
pop
rclb
imul
xor
mov
sbb
adc
mov
mov
mov
xchg
push
push
push
adc
ret
fldt
addl
and
jmp
jge
repz
xor
aam
aaa
mov
les
mov
jg
sub
add
push
or
dec
cld
xchg
loope
or
pop
aaa
push
and
rcrl
mov
sbb
movswl
sbb
inc
cmp
inc
sbb
fstpl
jl
xorl
aam
ret
xchg
test
cmp
int
sub
addl
nop
lret
loopne
mov
std
sti
loopne
add
pop
jl
add
inc
imul
cmpsl
add
pop
outsb
and
popa
pop
inc
fadds
push
xchg
push
inc
sar
cmp
pop
rorl
push
test
incb
imul
dec
mov
cmp
push
jae
sbb
pop
add
push
mov
mov
dec
pop
stos
jge
sub
enter
push
lahf
jmp
fisubs
daa
aam
out
mov
movsb
dec
pop
mov
dec
pop
lds
call
pop
pop
jne
sbb
test
mov
cmp
or
xchg
cld
stos
insl
clc
pop
or
or
push
pop
faddl
negb
push
push
sub
adc
push
xchg
pop
mov
inc
xor
js
arpl
adc
rorl
jns
add
je
mov
je
push
jle
adc
sbb
test
inc
repz
adc
mov
jmp
or
add
stos
bound
add
and
sar
arpl
pop
pop
add
mov
adc
cmp
fldl
comiss
fmul
or
dec
pop
sarb
ss
mov
outsb
test
cmc
cmpsb
dec
adc
mov
test
push
xor
out
push
test
es
imul
add
push
in
arpl
pop
mov
sub
add
testl
jmp
sbb
add
inc
jo
pop
or
sbb
in
pushf
pop
pushl
ficompl
and
rorl
add
or
jns
mov
push
ljmp
jl
sub
rorl
jb
pop
test
iret
ret
adc
lea
push
add
out
jne
cmc
adc
push
std
add
pop
cmp
dec
mov
data16
dec
ljmp
repnz
sbb
cmp
jb
rcrl
mov
inc
sbb
cmp
or
or
adc
mull
and
je
adc
in
loope
and
test
or
outsb
sbb
or
push
lods
ret
cmp
add
add
jne
xorl
sbb
push
dec
push
ret
push
adc
add
dec
sub
nop
lds
cmp
mov
testl
call
call
push
call
call
push
stos
pop
pop
or
sbb
jnp
cmpsb
mov
shrb
sub
cwtl
mov
or
sub
jmp
outsl
stos
rorb
popa
incl
push
jl
call
shl
pop
loope
and
add
ljmp
pushf
mov
ret
pop
add
mov
inc
or
push
pop
xchg
or
pop
or
inc
adc
adc
fistpl
cmpb
cs
or
cs
int
add
cmp
rol
jecxz
mov
inc
xor
xorl
and
mov
inc
push
iret
add
sbb
sbb
adc
lret
jae
or
lods
adc
sarb
fidivrl
imul
add
testl
pop
shr
cmp
negl
adc
add
imul
mov
not
mov
je
add
jmp
sub
mov
leave
adc
inc
outsl
js
daa
rcrl
ja
sub
mov
test
push
ds
adc
shl
dec
loopne
sub
mov
outsb
imul
imul
jbe
cld
cmp
jae
mov
adc
xchg
xor
cmp
fwait
lods
mov
cmp
jne
pop
xor
adc
mov
movups
mov
and
adc
xchg
mov
fistps
sbb
xor
std
pop
pop
sub
ss
mov
push
mov
add
decb
mov
fcmove
xor
fcmove
mov
shr
rolb
push
adc
mov
mov
push
adc
sti
mov
lods
or
mov
adc
ljmp
inc
mov
sahf
xchg
sbb
cmp
pmaxsw
mov
in
sahf
pop
ret
push
jne
pop
mov
and
sbb
xchg
addr16
sbb
fildll
ss
mov
je
lcall
xchg
inc
add
dec
ror
jne
loop
orb
rorb
ret
mov
jmp
inc
pusha
push
jle
mov
cmp
insl
jbe
or
sbb
sbb
jb
pop
inc
mov
xor
jb
mov
lahf
test
ja
push
dec
mov
popf
cmpl
dec
in
sub
test
sub
into
xor
inc
dec
add
xlat
clc
xchg
push
push
xchg
sub
mov
ret
cmp
test
or
insl
je
fsub
adc
shr
stos
into
mov
andb
adc
jae
or
add
add
mov
and
call
sti
sbb
negb
or
mov
inc
or
int
aam
pop
jno
push
push
ret
jle
xchg
es
lods
mov
jne
ja
imul
xchg
mov
loop
int3
xchg
mov
je
int
jbe
flds
mov
scas
adc
testb
jecxz
or
call
add
cmp
ss
sub
fwait
push
cmp
add
mov
jbe
add
add
pop
pushl
pop
adc
inc
ljmp
pop
adc
notb
or
mov
push
adc
pop
push
pop
pop
or
xorb
lahf
add
paddd
rcpps
add
nop
repnz
add
jg
sub
les
addb
insl
sub
push
fisttpl
sub
xor
mov
loopne
jg
mov
cmp
je
adcl
push
mov
mov
add
add
adc
lret
sbb
femms
mov
xor
sbb
into
clc
adc
ret
dec
sub
ror
insb
or
add
push
loopne
add
cmp
jnp
test
in
push
jne
add
inc
mov
bound
push
out
out
add
jo
ss
mov
popa
mov
xor
jae
js
mov
xchg
xchg
incl
lret
xor
push
mov
out
add
adc
call
pop
cli
sub
or
orb
stos
stos
mov
push
bound
mov
mov
fsubrp
push
jl
sbb
outsb
rorl
push
mov
pop
mov
add
cmp
cmp
int
adc
sbb
test
shr
push
aas
sub
xor
test
add
add
or
pop
mov
sbb
scas
ljmp
jge
xor
sbbl
and
outsb
imul
sarb
push
es
inc
es
js
nop
and
sbb
adc
mov
and
adc
notb
mov
pcmpeqw
pop
gs
int
scas
mov
push
flds
mov
xor
inc
scas
cmp
fdivs
push
or
push
push
arpl
popa
mov
pop
jg
mov
push
cltd
push
adc
mov
add
or
andb
js
cmpsb
sub
ljmp
sbb
xor
stos
in
out
sbb
mov
lret
imul
sbb
jmp
push
rorl
ficoml
mov
and
scas
or
mov
push
sbb
and
xchg
cmpl
ljmp
dec
mov
sbb
ljmp
in
push
mov
pop
or
or
test
add
data16
test
add
rcll
mov
js
or
fwait
push
mov
pop
mov
pop
andl
dec
add
mov
push
bound
bnd
data16
or
inc
or
add
inc
les
mov
sbb
rcrl
dec
inc
push
add
pop
subl
int
sti
or
addr16
lcall
cmpsb
or
sub
pop
gs
inc
mov
orb
sbb
mov
pushf
pop
inc
add
stos
adc
mov
lods
mov
push
cmpsl
push
fildl
jp
cmp
insb
dec
jne
test
sbb
adc
inc
lods
or
push
push
lea
jno
fwait
rcr
xor
dec
adc
xor
jb
or
aam
iret
jae
sbb
mov
inc
jg
ds
nop
and
mov
jle
jle
push
fwait
push
ss
xchg
mov
cmp
arpl
rorb
inc
stos
cmp
mov
inc
test
jle
mov
sbb
pop
pop
mov
inc
lret
out
add
movsl
push
imul
cmp
jnp
jbe
fistps
andl
outsb
mov
pop
mov
push
xor
mov
lcall
jno
mov
inc
cltd
loope
cwtl
push
add
pop
or
sbbl
xor
jnp
pop
insb
mov
cmp
sbb
xorl
add
mov
xchg
xor
dec
xchg
jl
sub
mov
std
pop
mov
add
push
cmp
cmp
sub
and
sub
mov
mov
and
fdiv
in
xchg
push
mov
adc
and
lods
dec
cltd
pusha
or
mov
out
xor
inc
or
mov
fdivr
in
imul
or
fisubrl
mov
inc
xchg
add
adc
lods
cld
push
push
jmp
imul
pop
out
lds
pop
inc
xor
test
push
mov
popa
inc
aaa
pop
mov
pop
loopne
mov
jg
shlb
mov
leave
or
mov
inc
cmp
jne
or
jne
out
ret
xor
add
or
fnsave
xor
and
enter
mov
mov
push
adc
xchg
xchg
mov
leave
push
imul
sbb
pop
push
loope
stos
negb
gs
mov
clc
call
lret
lods
mov
bound
mov
subl
cmp
jl
mov
pop
mov
inc
add
or
pushf
emms
insb
sbb
in
or
scas
add
and
jns
fistpll
or
pop
pusha
ss
cmpsb
or
daa
loopne
roll
dec
rcrl
push
rdtsc
or
daa
addr16
rol
movb
test
jle
loop
or
lret
cmp
mul
shr
data16
add
test
int3
pop
or
add
pop
loop
adc
mov
mov
mov
clc
clc
cvttsd2si
leave
ret
sbb
in
jg
adc
add
cmp
pop
and
add
jg
shrl
mov
fld
flds
jae
fildll
pop
clc
in
or
jmp
dec
mov
xor
jnp
rorl
add
sub
pop
jle
in
fcomp
adc
test
push
and
add
xor
jmp
popa
stc
cli
jl
xchg
xchg
mov
add
jle
std
je
incb
xchg
dec
adc
push
rorl
lcall
aas
les
insl
pop
xchg
sbb
or
loopne
jno
xlat
test
dec
addr16
fldt
popf
push
pop
add
adc
shll
sti
xchg
cld
je
add
je
pop
imul
mov
add
sub
pop
sub
xchg
pop
mov
mov
xchg
popf
inc
add
sti
or
clc
add
ljmp
fcomi
push
push
sub
call
push
mov
mov
push
or
or
push
dec
sti
or
sub
sub
fdivl
and
and
mov
addr16
pop
dec
pop
hlt
int3
je
cmp
test
cld
sbb
push
pop
lret
push
or
or
mov
loope
enter
je
push
pusha
pop
int
fwait
inc
je
out
jge
pop
sub
jne
repnz
das
sbb
adc
and
fneni(8087
shlb
lea
aaa
or
out
jmp
adc
in
cltd
bnd
imulb
push
adc
dec
push
movups
mov
push
push
rorb
hlt
pop
aam
mov
inc
in
push
push
ret
movsl
leave
test
xchg
shrl
mov
int3
xor
pop
aaa
sub
push
ss
or
cli
cmp
add
jns
and
sti
and
lret
add
ss
pop
fs
jmp
push
out
push
xchg
cltd
cwtl
popf
push
cmp
icebp
jo
push
push
lea
shll
fldt
jns
test
test
imul
jb
shlb
push
sub
mov
jle
idivl
fcomp
test
push
sub
or
subb
jo
mov
jo
dec
xchg
jb
push
das
lret
sbb
adc
jne
mov
or
and
inc
add
mov
jae
push
push
push
xchg
lahf
jge
xor
jmp
push
or
mov
fstpl
jg
mov
lock
lret
mov
cld
clc
in
js
testb
jmp
and
mov
pop
ds
add
shrb
xor
push
sub
enter
or
dec
dec
push
leave
mov
sbb
sbb
sbbb
sbb
add
pop
sub
sbb
mov
sub
sbbl
cmove
jb
inc
add
sbb
sub
arpl
pop
jge
sub
push
push
add
sbb
push
jmp
lret
adc
or
pop
mov
stos
ljmp
xchg
xchg
xchg
xchg
cmp
inc
dec
xchg
xchg
xchg
xchg
dec
push
push
pop
xchg
xchg
xchg
xchg
pop
pusha
fs
lods
or
incl
inc
imul
inc
push
popa
je
dec
mov
xor
fs
insb
outsl
add
insb
insl
gs
popa
jae
and
add
jo
je
sti
fistps
dec
dec
push
push
push
cs
dec
dec
pop
jb
int
sti
pop
fildll
outsl
ja
dec
gs
arpl
add
std
gs
gs
push
push
jb
ss
daa
neg
jae
jae
outsl
outsl
insb
jae
jbe
inc
push
push
dec
dec
dec
or
jae
jo
push
push
je
fnsave
add
aas
jae
outsl
outsb
daa
inc
jbe
idiv
dec
dec
inc
push
dec
xor
jge
inc
insb
jo
mov
andl
insl
sbb
add
orl
ds
cmp
enter
cmp
and
fs
inc
and
pop
jmp
orl
aas
push
add
aas
cmp
xchg
orb
stos
or
pop
sti
decl
incl
xor
xor
xor
js
push
jae
jb
or
jl
popa
insb
insb
leave
push
jb
arpl
nop
jae
cmp
cmpb
inc
jo
lock
decl
scas
cltd
mov
mov
mov
scas
mov
lcall
xchg
nop
xchg
lcall
stos
movsl
mov
xchg
fwait
mov
movsl
fbstp
mov
mov
xchg
nop
lea
cltd
mov
test
mov
lahf
sti
dec
adc
scas
popf
mov
lcall
movsb
add
jle
jg
xchg
mov
pushf
lcall
addb
in
decl
mov
mov
mov
lcall
std
test
stos
mov
xchg
cmp
aaa
test
scas
xchg
jmp
xchg
int3
int
fildll
mov
popa
and
mov
mov
sti
jmp
mov
xchg
lcall
xchg
fldt
add
dec
int
lret
mov
movl
imul
mov
movl
jb
cmp
push
imul
out
and
rcll
mov
inc
imul
sub
lods
add
inc
push
dec
lods
inc
orb
dec
jae
inc
pop
add
addl
dec
outsl
fs
gs
popa
and
outsl
fldt
add
popa
jo
mov
inc
gs
jb
jns
inc
js
je
pushl
or
outsl
popa
fs
imul
inc
das
notb
adc
fs
aaa
sahf
imul
insb
insb
adc
inc
adc
outsb
shll
push
insb
jo
imul
insl
or
addr16
pop
in
scas
dec
jecxz
push
push
insb
jae
push
gs
movsb
fldenv
rol
cmp
imul
popf
ja
inc
inc
dec
adc
int3
insl
in
outsl
insl
jo
subl
dec
inc
aam
mov
adc
sti
push
jns
gs
es
adc
sub
or
fs
or
xor
fldt
sub
insl
jae
insb
cmp
adc
data16
push
jne
xor
fs
outsl
cmpl
pop
popa
bound
jle
and
xor
jb
and
pop
inc
dec
jo
ja
scas
insb
dec
mov
idivl
pop
pop
jne
lods
outsb
pop
dec
mov
cltd
push
add
out
inc
out
fucomp
dec
outsb
jbe
imul
xlat
outsb
pop
inc
or
add
inc
adc
adc
int
inc
pop
and
adc
jmp
xor
push
xor
es
js
dec
and
adc
jnp
pop
or
in
insb
jg
or
fwait
in
push
shl
and
sbb
pop
fwait
sbb
add
in
inc
dec
add
push
stc
rclb
lock
sidtl
add
xor
data16
jbe
or
or
or
push
and
pop
or
hlt
push
jbe
add
adc
push
pop
sahf
in
lods
mov
adc
push
xorb
pop
cld
push
fldt
arpl
gs
nop
sub
outsl
pop
divb
je,pn
js
add
ds
or
test
mov
outsb
popa
pop
cld
push
ds
cs
cmpsb
jmp
nop
or
je
rorb
mov
mov
add
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
sub
add
add
add
add
add
add
orb
add
pusha
add
addb
add
sub
add
add
add
add
add
add
addb
add
sub
add
add
add
add
add
add
movsb
loopne
add
add
add
lods
jo
add
add
add
add
add
add
js
add
sub
add
add
add
add
add
icebp
add
adc
add
mov
add
add
add
add
add
add
and
add
add
adcb
push
add
add
add
or
add
cmp
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
lock
pop
incl
sbb
jmp
add
add
add
pusha
add
add
add
pop
add
add
add
dec
add
add
add
push
add
xor
add
pop
incl
cmp
cs
incl
daa
dec
testl
push
cmp
add
ds
push
xchg
add
add
add
inc
add
add
add
add
add
add
add
push
or
xor
jnp,pt
decl
inc
push
add
aas
imul
inc
imul
inc
imul
xor
incl
cs
incl
and
add
add
add
inc
add
add
add
sub
add
adc
add
add
add
add
pusha
sti
inc
andb
inc
sbbb
inc
jbe
pushl
insb
mov
sbb
decl
dec
jne
add
pop
incl
adc
scas
add
add
add
aas
add
add
add
add
add
add
add
add
add
pop
in
andl
pushl
mov
push
test
sbb
decl
inc
push
add
inc
ljmp
add
add
add
add
add
add
xor
add
add
add
add
adc
add
pop
add
mov
pushl
ror
xchg
scas
call
pushf
pushl
insb
mov
or
daa
dec
repnz
add
add
sub
add
xor
add
xor
add
sub
add
sub
add
sub
add
and
add
add
add
add
add
add
add
cmp
cmp
mov
jmp
loop
jle
mov
incl
nop
incl
cmp
and
pop
pop
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
outsb
decl
pushl
mov
jmp
fwait
scas
lcall
cmpsb
incl
pop
pushl
test
jl
jl
pop
pop
pop
jmp
wrmsr
add
add
add
or
add
adc
add
sbb
add
sbb
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
decl
ljmp
mov
push
mov
ja
mov
ljmp
nop
pushl
xchg
xchg
jl
jnp
push
push
pop
lock
pop
pop
aaa
add
add
add
or
add
adc
add
adc
add
adc
add
push
add
add
add
or
add
or
add
push
add
add
add
add
add
push
add
pop
loopne
cs
incl
cs
call
cmp
mov
in
dec
int3
int3
pushl
xchg
xchg
jns
jns
push
push
push
repz
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
insl
es
xchg
xchg
xlat
rcl
sar
hlt
hlt
repz
in
dec
int
pushl
xchg
xchg
js
js
dec
dec
dec
clc
and
and
add
add
add
add
add
add
add
add
add
add
add
add
out
into
int
hlt
hlt
repz
in
dec
int
pushl
xchg
xchg
ljmp
outsl
incl
inc
negl
adc
cmp
add
add
xchg
push
hlt
repz
in
dec
int
jmp
push
push
mov
xor
repz
add
test
cmp
ret
hlt
hlt
repz
into
into
ljmp
pop
dec
jnp
fdivrl
lret
incl
or
aas
jl
jnp
js
jns
lods
lods
lods
jle
insb
fisttpl
inc
jmp
cmpl
fdivrl
push
push
repz
add
add
add
jnp
data16
je
push
fld
in
mov
loop
cmp
fstpt
shll
jp
push
repnz
add
add
jnp
sub
lcall
push
fld
out
mov
loop
cmp
fdivrl
mov
sub
inc
subl
repnz
jb
push
iret
mov
in
mov
loop
cmp
fdivrl
mov
and
jae
or
inc
movsb
dec
and
inc
sbb
lret
outsl
ss
rcrl
mov
loop
cmp
fstpt
mov
push
pushl
or
inc
jl
push
or
enter
lock
dec
jmp
cmpl
jl
ljmp
es
or
add
add
add
push
or
imul
out
stos
js
jmp
cmpl
jl
jmp
es
pop
add
dec
xchg
lsl
push
dec
out
stos
js
call
cmpl
jp
lcall
and
in
pop
add
dec
xchg
cmp
mov
xor
out
inc
out
stos
js
jmp
test
fdivrs
lcall
and
in
add
add
add
popa
cs
mov
lock
js
jmp
cmpl
aad
xor
xchg
cmp
and
jmp
mov
and
jecxz
inc
out
stos
js
jmp
cmpl
je
incl
adc
sbb
add
add
dec
and
loopne
inc
push
stos
js
call
jp
decl
adc
pop
mov
jp
dec
and
fnstcw
loope
inc
call
sbb
add
mov
adc
inc
sbb
xchg
maskmovq
imull
or
add
add
add
add
add
add
add
add
incl
ud0
add
incl
add
incl
add
addb
incl
add
incl
add
pavgb
rolb
add
cld
add
ud0
pop
incl
pop
jmp
add
push
add
clc
add
cld
add
incb
aas
incl
pop
incl
pop
push
add
clc
add
cld
add
incb
incl
incl
decl
add
add
add
add
and
add
add
and
test
add
add
sbb
add
fdiv
add
and
icebp
add
das
repnz
add
add
cmp
add
or
add
inc
repnz
adc
add
dec
repnz
pop
repnz
insb
repnz
jl
add
mov
add
cwtl
repnz
add
add
cmpsb
repnz
add
add
scas
repnz
add
add
mov
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
popa
bound
add
je
outsb
jne
add
je
insl
gs
outsb
fs
gs
outsl
add
