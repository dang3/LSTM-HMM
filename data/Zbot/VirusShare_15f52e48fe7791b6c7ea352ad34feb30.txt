push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
xor
mov
pop
pop
pusha
call
add
add
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
jmp
ret
push
pop
mov
add
mov
mov
shl
xor
call
sub
push
mov
mov
cmpb
je
add
lea
inc
movzbl
sbb
ja
mov
sbb
jae
nop
mov
cmp
ja
lea
jle
pop
call
popf
push
pushl
decl
jmp
add
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
push
pop
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
add
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
pop
and
add
and
add
and
add
and
add
add
ljmp
add
add
mov
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
add
add
add
fisubl
add
jb
add
and
add
and
add
add
ret
add
add
push
and
add
add
pop
and
add
add
add
add
cmp
add
and
add
and
add
add
add
add
add
add
adc
add
push
and
add
and
add
add
hlt
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jb
add
movsb
and
add
add
fsubs
add
les
add
mov
add
clc
and
add
add
ljmp
add
add
mov
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
add
add
add
fisubl
add
jb
add
and
add
and
add
add
ret
add
add
push
and
add
add
pop
and
add
add
add
add
cmp
add
and
add
and
add
add
add
add
add
add
inc
add
outsb
arpl
dec
outsl
add
dec
add
outsb
fs
gs
jne
arpl
add
add
insb
gs
jae
dec
jne
gs
add
add
inc
popa
fs
jb
je
push
je
add
gs
jb
arpl
jae
gs
jo
add
popa
je
dec
popa
imul
add
popa
jo
imul
push
gs
outsl
jbe
inc
imul
jns
add
pop
add
jo
imul
insb
gs
add
outsb
fs
insb
outsl
jae
add
inc
gs
je
dec
popa
outsb
fs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
loop
inc
gs
js
je
outsl
fs
push
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
popa
je
inc
imul
jns
add
icebp
add
imul
jb
je
arpl
aad
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
adc
gs
je
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
inc
gs
imul
js
push
add
in
push
inc
gs
popa
jo
jne
add
mov
inc
imul
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
fadds
dec
outsl
popa
fs
insl
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
mov
inc
gs
jb
jns
outsb
jne
sbb
ja
jo
imul
or
je
jne
jae
jb
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
imul
jb
gs
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
push
push
dec
push
dec
inc
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
pusha
xorb
push
clc
insl
mov
mov
xor
outsl
inc
pop
cld
repz
xchg
bound
mov
imul
fwait
lcall
movsl
cmpsb
or
insl
repnz
push
std
js
popa
sbbl
scas
sbb
jnp
out
into
sub
push
pop
dec
out
sti
es
mov
cld
dec
bound
push
vpperm
sub
loopne
pop
xchg
loop
mov
push
pop
cmp
ja
xchg
push
add
adc
in
sub
dec
out
sub
jg
daa
lock
je
mov
cmp
push
repnz
ss
sub
sub
mov
xchg
dec
mov
cmp
sub
jp
rorl
cmp
mov
aaa
jl
fisubl
sarb
outsb
and
cmp
or
fucomp
int
sahf
sbb
int
lea
stos
dec
dec
dec
test
mov
xchg
scas
imul
mov
loopne
push
pop
sbbl
mov
rcrl
mov
xchg
insl
sub
inc
fildl
jle
jl
test
hlt
sbb
fnstenv
cmp
int3
and
pop
into
leave
mov
inc
sbb
aad
out
jns
sbb
lods
lea
mov
arpl
rcll
leave
xchg
in
mov
push
rclb
xchg
sbbb
push
test
ja
lock
fnsave
aad
or
cltd
mov
into
fsubs
adc
sbb
push
icebp
or
mov
ret
movsl
pop
dec
sub
mov
pushf
push
push
ficoms
arpl
dec
add
in
mov
cli
dec
mov
xor
movsl
mov
filds
dec
cs
addr16
idivl
add
add
add
add
xor
add
decl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
fs
add
add
in
imul
add
lahf
add
and
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
add
incl
fwait
fwait
lcall
mov
rorl
lahf
lahf
or
cltd
cltd
add
add
add
stos
lods
stos
add
lahf
lahf
sub
cmpsl
cmpsl
movsb
jne
stos
stos
mov
mov
mov
test
popf
das
nop
nop
adc
add
add
movsl
pushf
pop
fwait
mov
movsb
xchg
cmpsl
lods
lods
les
mov
lret
out
rcl
shr
iret
rcl
fmul
lret
mov
test
pop
lcall
add
rol
add
mov
lcall
lods
cmpsb
out
mov
cli
mov
iret
int
jecxz
jecxz
in
in
in
ljmp
stc
mov
mov
mov
cltd
fwait
add
std
add
int3
int3
add
movsb
mov
xchg
rcrb
stos
std
mov
jmp
out
clc
div
cld
cld
std
cld
sti
push
repnz
loop
loope
sarl
addr16
xchg
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
nop
xchg
nop
pop
sahf
popf
lahf
and
stos
stos
scas
sahf
sahf
lahf
icebp
lcall
pushl
sarb
fdivrp
in
jmp
repz
sti
cli
sti
sti
sti
stc
jmp
out
dec
lret
scas
mov
mov
mov
add
stos
lods
stos
add
nop
daa
mov
cmpsl
cmpsl
pop
cmpsl
cmpsl
cmpsl
jo
test
mov
std
mov
mov
cmpsb
movsl
cmpsl
jmp
mov
std
into
iret
cli
xlat
clc
out
in
ljmp
icebp
jmp
jmp
loope
dec
shl
cld
lods
mov
mov
addl
cmp
scas
scas
popf
mov
mov
mov
mov
mov
inc
mov
pushl
cmpsb
test
std
into
into
ret
test
repnz
loopne
loop
in
fcmove
lock
mov
mov
mov
add
add
push
push
push
push
push
pop
arpl
dec
dec
dec
adc
cmp
xor
xor
cmp
cmp
add
add
add
add
addl
cltd
subl
cmc
sarb
std
test
test
lods
mov
mov
mov
mov
dec
leave
dec
lret
lret
repz
enter
into
lret
repnz
iret
neg
mov
mov
int
popf
mov
mov
add
outsb
and
data16
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
dec
pop
push
pop
pop
cmp
push
sbb
dec
or
ja
xchg
cwtl
xchg
inc
movsb
cmpsb
movsb
mov
mov
cld
enter
mov
mov
test
cmpsb
cmpsl
jmp
lods
movsl
inc
mov
mov
mov
mov
lock
movsb
cltd
movsl
lcall
xchg
xchg
cld
xchg
xchg
xchg
rolb
add
add
xchg
nop
ret
test
jnp
jnp
jne
jbe
imul
je
jb
jl
jge
jne
jne
data16
popa
bound
xchg
xchg
xchg
dec
stos
test
mov
mov
ret
mov
mov
mov
sahf
ret
cmpsl
roll
iret
int
inc
les
mov
mov
negb
xchg
fwait
call
lea
add
add
test
mov
nop
cld
mov
mov
mov
stc
mov
xchg
mov
jl
imul
mov
mov
out
mov
mov
xchg
int
call
sar
cmp
scas
lcall
jbe
adc
pushl
mov
mov
mov
int3
lret
sti
mov
clc
scas
movsb
lods
stc
movsb
xchg
movsl
std
test
cmpsb
jmp
xchg
fwait
clc
xchg
xchg
xchg
movb
add
shlb
mov
call
fwait
pushf
lcall
cltd
fwait
sti
nop
out
xchg
pop
jg
push
push
insb
push
addl
xchg
movsb
movsb
cmc
leavew
ret
and
loope
and
sar
fsts
pushl
les
rcl
int
sar
leave
enter
mov
cmpsb
mov
movsl
jmp
mov
add
add
iret
mov
scas
fldt
xchg
nop
decl
xchg
xchg
lcall
popf
popf
lcall
xchg
xchg
cld
mov
push
push
dec
push
xchg
pop
pop
pop
cmpsl
jno
jb
test
lcall
iret
ljmp
mov
pushl
mov
sar
loop
loop
in
out
jmp
lock
icebp
call
xlat
fdivr
sarb
lcall
nop
xchg
ficomps
add
add
mov
fldt
xchg
xchg
call
cltd
lcall
xchg
xchg
decl
mov
icebp
cmpl
rorb
mov
out
movsb
lea
stos
cmpsl
xchg
ljmp
mov
inc
mov
iret
fdivrp
icebp
repnz
cli
sti
sti
std
cld
sti
sti
cli
sti
out
out
out
call
fcom
mov
lods
lods
lock
lcall
add
add
xlat
enter
ret
scas
cmpsl
mov
lcall
mov
cltd
call
xchg
xchg
xchg
mov
clc
popf
test
test
ja
stc
mov
jno
std
mov
jae
dec
jg
inc
fwait
jl
mov
enter
fcom
jmp
in
push
div
sti
cld
cld
cld
sti
cld
clc
stc
stc
jmp
loopne
inc
mov
mov
mov
mov
lcall
lret
shll
lods
test
movsl
jmp
cmpsb
movsl
lcall
mov
mov
mov
push
inc
jb
inc
arpl
inc
pop
adc
lret
push
add
fsubl
jmp
push
or
fildl
dec
les
ljmp
std
std
cld
sti
sti
push
clc
idiv
ljmp
ljmp
mov
stos
test
lcall
mov
scas
fldt
stos
stos
ljmp
lods
scas
jmp
cmpsl
stos
inc
test
inc
je
dec
pop
or
rcrl
call
push
add
iret
pop
add
rcrb
frstor
jmp
insb
add
in
jo
push
ja
push
jle
call
test
faddp
cmpsb
jmp
aad
jmp
fdivr
bnd
push
in
jmp
cld
rcl
shl
lret
test
mov
lods
and
mov
scas
pop
mov
lods
fldt
mov
pushl
mov
ljmp
lods
stos
inc
stos
popf
dec
orl
fcomps
call
pop
add
popa
add
fisubl
jmp
imul
push
ja
sti
jnp
sti
addb
sti
orb
clc
mov
push
popf
dec
call
mov
xchg
ffreep
scas
dec
mov
mov
stos
test
mov
rol
add
add
add
scas
scas
fldt
mov
mov
mov
mov
mov
scas
inc
mov
call
pop
fsubs
fstps
fsubs
fisubl
jmp
imul
push
ja
cld
jns
std
jge
std
addb
cld
test
sti
mov
cld
nop
sbb
cld
xchg
and
std
lcall
in
mov
inc
mov
stos
stos
xchg
lcall
mov
cmpsb
movsb
fldt
mov
mov
mov
mov
inc
mov
call
xchg
imul
arpl
frstor
fbld
jmp
insl
add
icebp
jae
stc
jp
std
jle
incb
adc
lcall
cs
std
lcall
popf
das
std
pushf
das
push
mov
cmpsl
clc
test
xchg
xchg
inc
push
push
push
add
add
add
sbbl
pushf
mov
mov
ret
mov
mov
inc
mov
jge
shll
fldenv
frstor
jmp
imul
push
jp
cld
addb
std
addb
std
addl
std
xchg
and
ljmp
dec
sti
test
cld
test
dec
std
stos
dec
cli
rolb
mov
scas
rcrb
addr16
dec
addr16
pop
pop
imul
xchg
mov
ret
ret
mov
mov
inc
sarb
aam
das
jmp
push
jmp
add
hlt
jns
cld
jg
incb
add
sti
mov
std
test
std
mov
data16
std
mov
insb
std
shrb
shrb
int
jmp
shlb
popf
popf
lahf
pop
cltd
cltd
cltd
or
add
add
dec
pop
pop
pop
pop
fcoms
mov
inc
ret
ret
inc
mov
mov
mov
mov
flds
or
ljmp
stc
jl
incb
add
std
addl
std
xchg
sub
mov
test
std
leave
cmp
int
std
rorb
call
xchg
sti
fistl
std
mov
mov
mov
lea
add
add
add
popa
inc
jge
jge
scas
mov
fld
iret
in
lret
int3
shl
int
int
rol
mov
mov
call
shlb
out
or
lock
stc
jnp
std
addl
std
xchg
incb
cmp
dec
mov
cld
xlat
pushf
std
popf
std
fcompl
std
loope
fbld
fcmove
lods
mov
mov
xchg
sbb
std
incl
jp
jno
sahf
pushf
pushf
inc
lret
lret
lret
fs
in
in
rcl
lret
out
lret
lret
into
mov
dec
jmp
or
cmc
je
sti
jl
incb
add
std
test
decb
push
fldt
jecxz
std
in
std
call
mov
std
loopne
jmp
shll
ljmp
lea
incl
stos
stos
stos
add
loope
or
icebp
lock
icebp
repz
lock
jmp
lock
in
jmp
fsub
loopne
fcomp
fld
fld
mov
xlat
mov
jmp
js
sti
addb
cld
jg
cld
addl
incl
and
std
mov
cld
out
sti
out
std
jmp
mov
cld
call
stos
ljmp
icebp
cmpsl
cmpsb
movsl
pushf
mov
addb
add
add
incl
std
incl
cld
decb
cmc
div
sbb
out
lock
jnp
mov
aad
outsl
std
in
jo
clc
jbe
jl
sti
jl
incb
add
sahf
xor
dec
xchg
jmp
mov
cli
loope
push
fsubrl
jmp
fnstenv
jecxz
mov
ret
mov
cmpsb
xchg
mov
addb
add
add
aad
or
lret
int
int
mov
sti
out
adc
cmc
imul
clc
jo
push
jae
push
jl
hlt
mov
std
out
mov
mov
jmp
stos
cli
jmp
movsb
clc
loope
sahf
hlt
fmulp
cmpsb
in
lret
mov
ror
mov
iret
lret
mov
aam
mov
iret
into
mov
pushf
stos
test
xchg
sbb
add
add
pop
lret
inc
enter
lret
scas
xchg
neg
addl
fnstcw
cld
jnp
neg
mov
loope
push
jmp
stos
and
mov
lods
rol
mov
test
sarl
jns
ret
mov
dec
mov
mov
mov
add
add
add
rol
int3
sarl
into
mov
lods
repz
ffree
stos
cmpsl
mov
scas
cmpsl
movsl
mov
test
mov
scas
ja
mov
push
scas
lods
mov
sub
rclb
lret
mov
int3
int3
int
stos
stos
stos
add
add
add
std
std
add
mov
mov
mov
mov
pushf
scas
lods
test
lods
scas
movsl
push
mov
test
lods
test
lahf
and
mov
stos
or
stos
lods
add
addl
std
std
incl
lods
stos
stos
add
mov
mov
mov
adc
lods
stos
setp
mov
add
incb
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
incl
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
std
incl
addl
incb
incb
fwait
stos
stos
adc
mov
mov
push
mov
stos
sbb
push
add
add
add
mov
popf
jnp
scas
lods
aam
mov
loopne
loop
in
in
int3
lret
int
cmpsl
test
add
jg
addl
stos
lods
lods
xor
movsb
cmpsl
loop
stos
stos
dec
leave
std
out
out
repnz
loopne
scas
mov
add
adc
inc
cmovno
or
inc
inc
add
nop
nop
sbb
mov
mov
mov
mov
mov
mov
mov
cli
rcl
int
fyl2xp1
enter
movsb
mov
mov
addl
jb
js
jns
mov
mov
mov
mov
cmpsb
pushl
mov
cmc
mov
cltd
movsl
xchg
xchg
xchg
int3
mov
lcall
xchg
nop
xchg
cmc
mov
jle
test
mov
cld
pop
fisubrl
dec
leave
sar
ror
std
mov
pushf
movsb
std
lcall
dec
mov
mov
call
nop
xchg
sti
mov
outsb
rcrl
fwait
cmp
mov
inc
mov
push
hlt
cmc
jmp
loopne
mov
mov
popf
cwtl
sahf
test
mov
cmpsb
out
cmpsl
cmpsb
jmp
xchg
cmp
les
cld
int
push
fdivl
fsts
lods
in
out
push
icebp
out
in
jecxz
mov
cltd
scas
scas
cmpsl
sub
lods
out
mov
pushl
xchg
jp
aad
ud0
popa
add
in
add
divb
cli
test
push
lcall
jecxz
fwait
sti
sarl
daa
lods
stos
stos
add
mov
mov
inc
cmpsb
mov
fsubrs
loop
add
icebp
jbe
cld
addb
cld
mov
inc
out
mov
sti
mov
lahf
xchg
adc
pop
push
inc
nop
xchg
nop
fidivrs
mov
mov
in
jb
sti
addb
cld
mov
std
mov
inc
jp
dec
jle
repz
std
ret
mov
add
add
ja
js
mov
mov
rcl
aad
lret
int
ror
mov
ss
idivl
std
addb
std
xchg
es
std
rclb
sti
in
push
fldt
lret
lahf
lahf
popf
das
add
add
jg
jg
enter
ljmp
cmp
lds
cli
idivl
cli
orl
std
cmc
stos
sti
lock
out
in
mov
mov
mov
mov
add
fdivl
mov
shll
dec
ljmp
jns
rol
cmpsb
cmpsl
int3
shrb
int3
int3
mov
xor
add
add
std
std
add
mov
mov
mov
cmpsb
pop
mov
scas
mov
push
lods
stos
lods
or
lods
stos
push
std
incl
std
add
add
add
add
add
ret
add
incl
add
incb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
rolb
hlt
pop
clc
sbb
inc
jo
shrl
xor
das
jne
pop
lods
insl
nop
popa
rcr
sbb
js
sbb
mov
ret
idivl
out
sbb
push
add
jae
movsl
jne
imul
push
jne
xchg
out
push
jecxz
repz
aaa
pop
sbbb
cmp
shl
push
ljmp
dec
mov
dec
push
jae
repz
or
mov
mov
add
mov
bound
xor
push
mov
pop
jl
loop
inc
mulb
inc
jmp
dec
adc
mov
xlat
das
clc
loope,pn
xor
mov
dec
pop
jb
add
repz
add
cld
rcrl
add
push
iret
lret
fimuls
sub
and
scas
cmpsb
adc
pop
test
movsl
cmp
fsubs
aad
xchg
imul
repnz
leave
lret
xchg
cmpsb
je
mov
sti
fdivrl
lret
mov
lds
scas
dec
xchg
jno
inc
cld
icebp
fcmovu
cs
aad
outsl
cmp
cltd
and
fstp
int3
adc
mov
mov
xchg
lods
stos
sub
pop
xor
adc
push
int
inc
movsb
jp
push
pop
and
lahf
add
sbb
or
mov
mov
and
imul
stc
cmp
mov
movsl
jp
loope
mov
cmp
add
pop
int3
and
push
negl
int
xchg
xor
push
shl
daa
leave
xchg
std
loope
mov
stos
mov
push
mov
popf
outsl
cwtl
push
push
lods
xchg
or
and
jecxz
jmp
js
cmp
inc
movsb
xlat
call
inc
push
insl
pop
and
or
cmp
jmp
gs
jmp
lcall
add
pop
mov
ljmp
add
nop
fldcw
jns
lea
enter
movsl
add
mov
mov
and
or
sub
and
pop
ret
push
pop
add
cwtl
sub
jb
dec
inc
ud0
or
je
xor
imul
cmpsb
or
cli
cmpsb
rcr
adc
sbb
sub
add
inc
push
pop
aad
test
add
scas
cmc
jae
lea
ljmp
movsb
adc
cli
dec
push
scas
fdivr
das
mov
sbb
add
xchg
xlat
and
lods
repnz
js
inc
fimuls
adc
or
inc
push
in
insb
jb
jp
sub
adc
xor
addr16
cld
data16
dec
dec
inc
inc
scas
push
cmp
int
sbb
lret
popf
repz
pushf
mov
sbb
adc
fnstsw
addr16
addl
test
jp
adc
fistps
pop
andb
and
loop
inc
sahf
cmp
out
mov
cmpsb
hlt
pusha
xlat
ret
sbb
daa
mov
cmp
push
or
push
movsb
adc
dec
shll
mov
cmpsl
push
ret
aaa
mov
or
cli
ficomps
bound
xchg
mov
mov
fisttpl
je
xor
and
sub
es
cmp
pop
mov
data16
jnp
pop
sub
jl
fisubs
push
aas
mov
jp
loopne
xor
insl
push
xor
test
lret
pusha
les
xchg
sub
shll
imul
int3
fstpt
mov
mov
sti
dec
mov
enter
mov
stc
mov
push
push
dec
fimull
les
jp
adc
pop
push
rolb
mov
cmpsl
adc
daa
fbld
int
shrb
into
movsl
test
cmp
vprotw
mov
mov
fidivrl
subb
and
xlat
pop
aaa
adc
iret
inc
fidivl
insl
jmp
xor
incl
mulb
pop
ljmp
inc
push
inc
push
push
pusha
sahf
pop
stos
stos
popa
mov
xor
mov
ds
call
ljmp
push
cld
jg
inc
push
mov
mov
sbb
mov
out
cmp
out
dec
jno
shll
aad
test
push
orb
flds
jle
sti
popa
jo
es
sahf
cld
mov
mov
jle
mov
adc
and
cmp
xchg
xchg
ds
push
adc
arpl
fwait
inc
loope
stos
repz
or
cli
aam
lcall
inc
and
fisubrs
es
inc
adc
push
cmc
sbb
fstp
lods
sub
pop
fidivs
mov
jnp
jbe
mov
xchg
in
jnp
jo
and
out
movsb
lret
cmp
adc
jl
arpl
lods
daa
mov
push
std
int
sahf
mov
jg
cmpsb
dec
jle
push
lss
mov
popf
mov
out
pushf
sbb
js
jge
cmp
les
sub
xor
mov
test
test
inc
sub
xchg
pop
inc
sub
fidivl
mov
jae
cmp
mov
pusha
sub
push
ljmp
and
xchg
dec
test
mov
cmp
ja
jle
mov
jle
inc
mov
cmp
xchg
sub
xlat
xor
xor
lds
ret
mov
rorb
inc
cmp
gs
repnz
xchg
push
pop
outsb
int3
arpl
nop
sbbb
pop
cmp
arpl
jno
mov
std
xchg
add
shlb
jno
movsl
sub
xor
rcr
sub
and
cmp
test
ret
imul
sub
testb
data16
pop
pusha
idivl
mov
mov
cmpsl
add
or
prefetch
or
insb
jg
xor
mov
repz
xlat
dec
out
hlt
adc
push
inc
xlat
ja
xchg
cs
fidivs
adc
ds
xchg
mov
ret
or
xchg
fcompl
arpl
adc
inc
pop
icebp
jae
sbbl
daa
cmp
int
sbb
test
sub
cmp
outsb
mov
outsl
or
cmpsl
in
addr16
ss
dec
sar
inc
rorb
xlat
adc
subb
sub
jg
xor
inc
fcmovnbe
push
sub
stc
and
adcb
cli
imul
lret
push
jg
mov
cmp
fidivl
hlt
ret
pop
es
clc
pop
inc
loope
jns
push
lods
push
fwait
call
push
mov
mov
fdivl
push
xchg
pop
lock
mov
pop
subl
lret
mov
jg
push
scas
xor
xchg
jb
mov
adc
jae
lock
test
loopne
xchg
pushf
hlt
mov
movsl
mov
mov
jnp
mov
aam
mov
mov
lds
mov
loope
imul
adcl
push
lock
movsl
inc
into
popa
xor
push
mov
shll
inc
push
loope
add
icebp
adc
movsl
sbb
add
mov
and
test
cmc
shrb
xor
mov
jp
sub
mov
push
movsl
int3
xlat
inc
fimuls
out
sub
pop
sub
pop
inc
dec
loope
jl
sbb
iret
mov
sbb
push
cmp
test
ret
leave
sti
xchg
sti
fsubp
ja
sbb
xchg
arpl
iret
mov
rcll
cmp
pop
adc
or
sub
pop
addr16
sub
mov
xchg
sub
or
mov
push
pusha
out
sub
into
inc
push
arpl
mov
out
add
xor
push
jmp
test
pop
pushf
cmpsb
and
pop
cmp
stos
test
lret
aas
mov
dec
leave
lock
loop
pop
fwait
add
jne
test
test
inc
fnstenv
ror
pop
or
lods
inc
sub
dec
dec
loop
jbe
movsb
pusha
sub
push
inc
fidivs
jb
cld
arpl
sbb
pop
test
bound
xchg
sub
stos
imul
loopne
lds
shlb
pop
adc
aam
jno
pop
cmc
and
sbb
nop
daa
jp
lods
inc
lcall
stos
inc
ret
cs
lahf
addr16
xor
sarl
test
jecxz
fnstcw
dec
jecxz
mov
aaa
jle
arpl
xchg
lahf
repnz
xor
jp
or
lahf
aas
lds
popa
add
inc
fmul
cmpsb
or
fucomp
ds
jns
jge
std
or
xchg
jle
lea
sbb
stos
inc
mov
or
cmpsl
addr16
dec
mov
mov
fildl
int3
insb
pop
sahf
fwait
in
loopne
fistpll
dec
loopne
add
jno
or
push
xchg
int3
arpl
pop
icebp
and
fwait
xor
mov
mov
loopne
jge
aas
xchg
shlb
push
addr16
xchg
movsb
jae
scas
fs
rclb
hlt
mov
sbb
pop
scas
mov
jmp
popf
sbb
jecxz
add
clc
mov
adc
ret
jg
jb
in
das
inc
add
xchg
jmp
or
aad
sahf
stc
pinsrw
xor
fstl
cmp
ja
push
popf
movl
aas
sub
cli
in
in
lcall
jg
shrl
mov
inc
fstpt
xor
test
xchg
mov
push
stc
jbe
cmp
fcompl
gs
cmp
dec
loop
adc
int3
mov
xchg
sub
mov
aam
leave
fnsave
loopne
ss
mov
fbstp
std
out
rclb
inc
pop
sahf
xor
pop
adc
hlt
xor
mov
lcall
pop
sub
dec
mov
inc
xor
mov
push
pop
lock
loop
and
mov
test
js
testb
sbb
mov
sbb
xchg
sub
xor
jecxz
roll
test
loop
rcl
addr16
hlt
int3
arpl
cwtl
cmp
int
sub
js
lods
inc
xchg
cltd
sbb
popa
sub
jbe
or
clc
dec
mov
jae
sbb
mov
push
popf
push
mov
xchg
mov
push
pop
hlt
orb
ficompl
or
and
ja
repz
jecxz
xor
inc
flds
push
xchg
gs
aas
cmc
mov
dec
out
push
xchg
sub
and
cld
sbb
and
scas
adc
and
sbb
pop
xor
mov
cmp
cmpsb
cmp
pop
imulb
cld
jns
cwtl
push
sahf
xor
std
jo
cmp
cmp
and
arpl
xor
xchg
push
push
cli
xchg
dec
mov
mov
imul
iret
jnp
xchg
insl
gs
push
add
outsb
jno
les
sbb
cmp
iret
pop
dec
mov
cltd
lock
stos
inc
dec
pushf
hlt
mov
outsb
mov
test
repz
push
movsl
test
aaa
into
aaa
cmpsb
scas
inc
sbb
pop
lock
cmp
jl
stos
pop
repnz
into
in
test
les
icebp
loope
cmp
sahf
out
xchg
hlt
mov
out
popf
xor
pop
xor
js
xsha256
cmpsb
xchg
cltd
nop
daa
or
cmc
mov
loop
sahf
pop
clc
popl
pop
out
xor
adc
inc
lcall
push
imul
pusha
jbe
sahf
addr16
insl
add
mov
mov
mov
fs
and
xchg
scas
push
in
addl
mov
pop
and
gs
jns
and
cmc
adc
dec
fidivl
and
mov
fdivl
ds
inc
pop
repnz
jl
mov
rorl
ret
imul
cmp
sub
insl
fcmovnu
jbe
mov
addl
movsl
cmp
and
xchg
insb
pop
mov
push
popa
clc
scas
inc
fidivl
inc
testl
bound
popa
pop
or
es
cld
nop
jg
add
pop
xchg
push
inc
fldenv
push
je
mov
jmp
and
jne
pop
mov
cmp
testl
repz
cwtl
das
mov
push
lds
daa
loopne
pop
cmp
mov
repz
stc
adc
sub
arpl
filds
sarb
roll
xor
pop
jbe
mov
xchg
or
xchg
sub
sub
xchg
mov
pop
hlt
add
mov
lret
sub
push
xchg
inc
fadd
js
popf
imul
loopne
pop
lds
and
pop
scas
pushf
xor
lock
daa
xor
cmpsl
ds
addr16
rcrb
pop
mov
cltd
insl
jge
mov
add
sti
xchg
arpl
ret
pop
xchg
adc
cltd
push
sbb
pop
cmp
sbb
xor
lds
clc
insl
ds
mov
mov
jg
xchg
sbbb
xchg
nop
daa
add
pusha
divl
mov
xor
jnp
sub
lods
inc
or
rcr
push
pop
lock
int
fnsave
xchg
arpl
dec
lahf
test
inc
inc
pop
sbb
lds
fnsave
mov
scas
pop
repz
ss
inc
loope
enter
add
xlat
icebp
mov
mov
sub
or
sbb
jb
jg
push
cmpsl
rcrb
sarl
rol
cmp
mov
dec
clc
mov
ljmp
fnstcw
or
adc
movsl
xor
mov
les
iret
push
xlat
cmp
enter
sbb
push
ljmp
dec
jecxz
popa
ss
push
sub
jg
sbb
js
push
out
adc
arpl
xor
movsb
enter
vpcmpeqb
fcoms
test
jbe
cld
lods
ljmp
mov
loop
out
inc
dec
in
ud0
dec
mov
xor
pop
xor
les
leave
xchg
cs
cmp
jp
outsb
sub
push
out
cmp
mov
cli
xor
jno
icebp
sub
push
getsec
rcrb
sahf
mov
ss
call
jbe
fadds
popf
enter
jno
stc
fsts
xor
out
cmc
mov
sub
and
inc
add
jg
js
mov
call
stos
orl
icebp
inc
sbb
jbe
dec
loop
xchg
aam
xor
scas
push
mov
xor
xlat
outsb
outsb
cmp
xchg
nop
mov
div
cmp
jno
sbb
lret
mov
dec
push
mov
dec
pop
pop
out
dec
outsl
es
imul
pop
xor
push
push
mov
pop
push
cmpsb
test
inc
xchg
mov
cmp
aad
outsb
pop
add
add
pop
pop
in
mov
lods
stos
stos
hlt
mov
int3
inc
fscale
push
lods
das
pop
fs
push
push
xor
inc
call
push
in
call
mov
adc
imul
pop
ret
aam
mov
fbstp
xchg
ja
push
sti
and
insl
or
xchg
jnp
insl
mov
clc
mov
leave
ficomps
lret
mov
leave
out
cmpsl
jle,pt
inc
fsubs
xchg
sub
dec
into
xorl
mov
test
adc
jge
push
iret
stos
inc
fdivl
inc
std
lods
inc
das
gs
mov
push
ljmp
inc
fidivl
lret
gs
movsb
pop
sahf
es
or
adcb
out
xchg
push
mov
cmpb
bound
adc
jge
xchg
sti
daa
out
mov
push
or
inc
mov
pusha
idivl
sub
repz
add
scas
jae
rol
ljmp
orl
iret
xor
test
jne
pop
adcb
mov
and
shlb
pop
mov
punpcklwd
push
xchg
pop
mov
or
xchg
sub
stos
jp
and
inc
mov
mov
sarb
and
and
xchg
xchg
repnz
jl
jecxz
sbb
ret
iret
or
into
mov
stos
push
mov
adc
mov
mov
sbb
jb
lret
lahf
and
dec
mov
xor
pop
cmc
or
jl,pn
sahf
out
stc
adc
jecxz
pop
fisubs
inc
stos
int
push
in
mov
inc
mov
pop
shll
out
pushf
xchg
jle
rcll
mov
mov
lods
push
adc
ficompl
icebp
inc
adc
bound
rcr
outsl
out
and
cmp
inc
test
push
or
movsb
jbe
fidivl
cmp
lods
fistpl
mov
push
fdivrs
out
xchg
es
mov
lret
aaa
filds
loop
loop
add
inc
cmp
cmp
mov
xor
enter
xor
jp
repz
mov
fcmovne
or
xchg
ja
shrb
adc
ret
add
int3
xor
outsl
movsl
jne
mov
mov
jge
adc
aaa
fwait
xor
stos
inc
mov
lds
call
ret
subb
and
mov
jecxz
push
push
add
pop
test
lret
aad
adcb
test
sub
xor
insl
pop
enter
shrl
test
and
test
push
mov
pop
mov
insl
jno
out
xchg
xchg
iret
sbb
rorb
rcrl
sub
xor
dec
fildll
inc
fadd
mov
cli
mov
ficoms
test
xor
lds
loop
add
push
call
fiaddl
and
daa
cs
cmpsb
cmp
pop
inc
cli
xchg
xor
incb
cmpsl
outsl
push
mov
icebp
cmpsb
pop
mov
test
jo
pusha
lods
aad
nop
inc
mov
push
jmp
scas
call
dec
mov
outsl
push
js
jne
jns
stos
inc
fistpl
add
push
mov
shr
scas
inc
push
or
pop
ds
int3
arpl
dec
out
test
sub
adc
sahf
and
rcr
cmp
rolb
mov
insl
fdivl
ja
in
incb
cwtl
lock
xor
out
insl
xchg
sub
addr16
xchg
sub
sub
cli
mov
in
inc
stc
shrl
mov
add
inc
jge
xor
and
xchg
rcrl
sbb
stc
xchg
mov
pop
pandn
jns
xor
addb
sbbb
lahf
fdivl
sbb
fwait
or
aaa
into
and
in
pop
dec
dec
loope
sahf
int
adc
cwtl
pop
sti
sbbl
sub
mov
out
jp
movsb
insb
cmp
xchg
stos
enter
jle
xchg
fnsave
es
test
js
jae,pt
cmp
cli
insb
sahf
popa
jno
push
mov
xchg
call
shrb
adc
or
jecxz
push
leave
or
ret
inc
fldenv
les
cmc
test
std
ja
enter
push
out
das
pop
jmp
dec
mov
jp
aad
pop
leave
arpl
leave
push
stos
mov
xlat
mov
es
xor
push
pop
lock
icebp
inc
daa
adc
xchg
insb
ret
pop
pusha
add
jae
push
in
xor
xchg
push
mov
and
or
mov
mov
or
sarl
rcll
inc
lods
jge
and
and
mov
cmp
movsb
inc
jecxz
js
pop
add
insb
jmp
cwtl
das
jl
in
dec
jne
push
popf
test
jo
std
inc
push
andl
xor
push
sbb
lods
js
ret
inc
int
add
arpl
xchg
sti
mov
les
add
mov
je
adc
in
test
or
and
jp
sti
inc
pushf
xor
sti
xchg
test
lret
cld
push
xor
pop
in
pop
mov
add
scas
pop
ja
pusha
iret
sbbl
adc
ss
insl
nop
fwait
aaa
into
es
es
inc
inc
fidivrl
scas
inc
sahf
cltd
inc
xlat
and
mov
xlat
inc
sub
pop
clc
cmpsl
sub
aam
dec
loopne
jo
aas
bound
ds
dec
shrl
inc
xlat
jmp
or
pushf
push
ds
outsl
mov
xor
push
xchg
sub
rolb
xor
enter
push
mov
andb
outsb
add
je
mov
sbb
testb
inc
sub
push
scas
lcall
add
pusha
lahf
push
aaa
into
rclb
adc
mov
into
xor
test
mov
fcmovu
jno
inc
push
lods
push
sti
movsb
cmp
je
in
icebp
ret
sbb
std
add
lods
push
mov
push
int
mov
dec
dec
and
mov
adc
fisttps
pop
add
xchg
xchg
jp
ret
aas
mov
add
sbb
fimull
test
mov
fsubl
loopne
repnz
push
adc
jbe
mov
xchg
data16
mov
ja
pop
and
cmpb
mov
xchg
sub
push
enter
add
std
mov
aad
push
mov
pushf
push
sub
inc
push
int3
cmp
push
jle
inc
fcmovnbe
lahf
stc
nop
and
xor
roll
pop
loop
shl
std
xchg
jp
aas
push
fwait
inc
fmul
jbe
hlt
gs
sub
lcall
cmp
es
mov
sahf
jnp
pop
imul
xor
and
int3
xchg
xor
jno
sub
enter
jg
cltd
cld
stc
out
and
push
mov
inc
xchg
xlat
cwtl
das
or
scas
inc
xor
into
gs
addr16
das
out
adc
xor
xchg
sub
mov
inc
or
dec
xchg
mov
lock
aad
adc
loop
cmp
push
cld
xchg
mov
sbb
das
adc
push
movsl
xor
sbb
pop
pop
les
jnp
shrl
pop
out
rcrb
xabort
jecxz
int3
jg
sub
pop
sahf
cli
jmp
inc
fsubs
aaa
into
test
jmp
dec
test
jae
pop
mov
imul
pop
pop
mov
and
add
js
jmp
call
add
mov
loopne
fwait
or
rclb
daa
mov
fidivs
add
call
or
xchg
jge
enter
add
dec
mov
and
int3
arpl
stos
mov
hlt
lret
popa
clc
lock
and
mov
mov
icebp
shll
fsts
stos
inc
mov
out
iret
shrl
cmp
and
mov
subb
sbb
stos
test
mov
xchg
dec
loop
xchg
rcrl
add
push
add
lods
xor
push
inc
flds
xor
inc
add
jno
aad
jmp
sub
mov
jl
icebp
insl
pop
popa
clc
dec
test
dec
in
sbb
mov
xor
push
lods
jmp
lods
inc
xchg
iret
sbbb
xchg
sub
loop
call
leave
rcrl
sub
insb
rcrb
xor
call
sbb
mov
clc
pop
mov
xor
outsl
or
pop
bound
xchg
xchg
jle
repz
std
popa
clc
jnp,pn
shll
add
mov
dec
jl
dec
sti
cmpsl
ds
mov
mov
push
data16
inc
pop
stc
dec
mov
ss
cmpsb
jl
inc
pop
in
fldcw
adc
mov
cltd
loopne
lret
test
dec
or
xchg
push
in
mov
push
push
repz
test
lea
sahf
fs
inc
push
pop
bound
cmp
jbe
repnz
lds
sbb
jecxz,pt
xorb
or
leave
pusha
xor
in
sub
addr16
ss
fcoml
jns
popf
inc
out
subl
nop
xchg
inc
clc
sub
sahf
push
in
insl
sbb
in
sub
nop
pop
or
rorb
add
cli
sub
push
out
imul
pushf
mov
ljmp
fsubrs
or
push
movsl
jge
sti
arpl
and
push
ja
movsl
pop
mov
fnstenv
cmpl
jne
aad
cwtl
jg
rcl
dec
jmp
lods
lds
mov
pop
push
std
stos
inc
fistpll
jg
fmull
pusha
mov
jge
and
insl
push
daa
add
adcb
pop
push
aam
xchg
pop
imul
jl
mov
dec
popf
add
es
xchg
outsl
push
fs
xor
jl
jle
sub
or
pusha
imull
dec
jl
sbb
out
pop
cmp
cld
mov
pop
jl
sbb
cld
pop
test
ss
add
pop
repnz
sub
pop
lcall
cmp
aas
cld
xchg
jno
scas
push
xchg
and
dec
ret
cmpsl
pop
rorb
fdivrs
mov
sbb
ret
or
aaa
pop
lea
cltd
loopne
lret
bound
lods
cwtl
cmp
mov
add
pop
aam
lahf
enter
daa
fistps
rclb
push
cmp
imul
testl
out
xchg
mov
loop
add
fdiv
mov
shlb
add
add
pop
pop
jge
subl
inc
divl
mov
rorl
mov
fcmovu
popf
push
sub
pop
lret
lock
or
mov
add
jbe
cwtl
xchg
adc
insl
movsb
cmp
movsl
and
push
or
pop
out
jnp
xor
add
adc
xchg
divl
sub
imul
xchg
jge
mov
enter
out
cwtl
sub
sub
paddw
hlt
sbb
pop
inc
iret
dec
lret
cld
outsb
push
cmpsl
dec
mov
push
mov
adc
pop
mov
es
jns
jle
xor
cmp
inc
sbb
shlb
jne
out
cmp
lods
je
xor
lcall
je
insb
cmpsb
lods
pop
mull
call
mov
mov
push
sarl
call
cmpb
or
push
in
ljmp
dec
loop
imul
xchg
sub
jns
xchg
shll
cmc
jmp
cmp
mov
xlat
jmp
leave
pop
add
loop
cmp
and
lahf
ss
shrl
sbb
mov
adc
and
pop
call
xor
ffree
pop
bts
dec
sub
mov
pop
popf
xchg
jne
xor
dec
pop
xchg
adc
mov
cmp
loop
lock
mov
cmp
cld
addl
out
sub
pop
sub
sahf
lret
sbb
lcall
push
dec
loop
jge
xor
ja
adc
dec
mov
xchg
push
out
and
out
push
aaa
mov
dec
jno
xor
shrb
dec
jno
inc
fidivs
xchg
sarl
xor
push
aas
out
sbb
lcall
mov
enter
lret
ret
jmp
mov
pop
aad
stos
add
std
repnz
mov
out
adc
and
lea
jg
mov
or
sahf
xor
cmp
rcrl
cmp
out
lret
sbb
jns
insb
push
mov
pop
adc
out
notl
adc
push
pop
pop
adc
inc
fcompl
imul
jnp
push
pop
fnstenv
jb
jge
mov
xor
jno
or
daa
adcb
dec
in
pop
gs
add
pop
sub
ja
add
pop
jge
into
xor
jmp
mov
pop
repnz
es
mov
test
mov
ja
adc
test
jg
push
and
ficoml
mull
mov
mov
inc
imul
inc
dec
fisttps
aam
loope
out
rcrl
in
rcll
mov
pusha
sahf
aam
jecxz
mov
test
cmp
sub
mov
inc
aas
mov
mov
loope
ja
lock
cmp
mov
adc
gs
repz
jbe
xorb
loopne
ret
test
les
cmp
push
sub
mov
mov
sbb
outsl
push
mov
jb
stc
xor
cs
xor
iret
sub
les
cmc
mov
das
mov
and
mov
adc
cmc
popa
add
xor
pop
loopne
in
sbb
xchg
adc
jnp
sbb
xchg
sub
neg
mov
mov
xor
mov
lods
sbb
mov
xchg
mov
dec
mov
add
dec
sarl
dec
test
in
das
push
xchg
mov
inc
push
push
or
aam
in
add
out
orb
sbb
insb
fdivrs
sbb
cs
in
jo
xor
and
dec
inc
lds
add
or
inc
fisttpll
mov
sbb
orb
lock
adc
inc
mov
xlat
mov
cmp
mov
insb
and
test
adc
jb
push
xor
mov
fcoms
nop
and
adc
or
popa
push
mov
or
loope
xor
cmpsl
pop
mov
je
xchg
pop
js
inc
out
jne
cmp
cltd
loopne
jnp
cmc
out
fdivs
dec
cmp
adc
dec
xchg
lret
mov
xorl
sub
mov
nop
cmp
jle
xor
mov
xorl
mov
flds
xchg
sub
push
pop
cmpsl
xchg
mov
fcoml
cmp
mov
and
mov
add
jge
cmp
sahf
inc
mov
adc
ljmp
push
ret
jecxz
xchg
push
add
jae,pn
pop
movsl
dec
int3
shr
push
cmp
cli
ja
sbb
aas
test
ljmp
mov
adc
xor
mov
or
pop
sbb
shll
inc
mov
push
mov
push
pop
adc
push
cmp
out
lahf
adc
into
sbbb
adc
cmpsb
inc
scas
jbe
icebp
push
jle
pop
mov
je
outsb
andb
push
in
pop
ss
xor
push
jge
hlt
xchg
sbb
push
in
add
jg
lahf
mov
addr16
data16
jmp
imul
adc
inc
xchg
mov
and
jge
cmp
fs
icebp
mov
jp
adc
pop
inc
add
jge
push
mov
jge
jmp
dec
ret
xlat
ss
in
lcall
push
xor
inc
xlat
lret
push
repnz
in
adc
loope
xorb
in
int3
lds
mov
call
push
mov
dec
loope
mov
jns
cltd
cwtl
cmp
leave
mov
sarb
faddl
jmp
jge
add
ds
sahf
rcrb
dec
sbb
movsb
sahf
fstpt
fs
mov
inc
test
sub
cmp
push
ja
dec
pop
cmp
addr16
fadd
call
cmp
adc
push
sub
rcll
xchg
sub
xor
or
dec
sub
mov
and
add
fmull
push
aaa
jge
pop
andl
or
cmpsb
pusha
iret
data16
or
adc
and
mov
mov
mov
xchg
sarb
jle
loope
pop
xlat
test
pop
int3
fstps
or
lahf
mov
fbld
aam
xchg
int3
arpl
fcomps
and
shrb
inc
outsb
xchg
or
jge
sahf
mov
xchg
push
sbb
out
jle
mov
jle
fsubl
mov
arpl
je
cmp
add
xchg
test
cmp
sub
in
sti
outsb
mov
loope
xor
mov
aaa
or
imul
icebp
aas
and
dec
fmuls
mov
test
test
jbe
xchg
call
lret
fnstenv
es
loopne
outsb
add
add
push
ljmp
pop
mov
outsl
cltd
pop
aam
ja
mov
fiadds
adc
mov
sub
rcrb
inc
jb
mov
cmpl
dec
sub
dec
xchg
or
nop
daa
pop
sub
divl
mov
pop
sbb
cmp
xchg
es
std
dec
push
xlat
ret
push
push
adc
jecxz
mov
out
jge
mov
sub
pop
repz
dec
sub
insl
dec
inc
fldl
pushf
clc
popf
decl
fwait
loop
ljmp
hlt
mov
es
ds
mov
punpcklbw
ds
xlat
gs
mov
movsl
jg
sbb
or
xchg
add
mov
mov
xlat
mov
mov
xchg
lock
movlps
xor
jle
ja
loop
jmp
push
test
inc
faddl
enter
jbe
or
jae
and
daa
or
cmp
imul
lea
out
test
sbb
insb
inc
test
xor
fs
ret
mov
sbb
mov
xchg
add
fildll
xchg
mov
jmp
jg
sbb
outsl
mov
into
loope
cmp
or
imul
in
inc
ljmp
ss
mov
xchg
clc
push
add
xchg
pop
sarl
sub
scas
jbe
cmp
cmpl
negb
dec
ret
jmp
call
icebp
cli
or
fsubrs
cmp
out
scas
gs
mov
rcll
shlb
call
sbb
pop
sahf
popf
rcrl
popf
pop
mov
shrl
pop
sub
out
cwtl
xchg
lds
clc
sub
int3
jecxz
mov
std
pop
adc
in
stos
test
int3
arpl
sbb
mov
pusha
adc
push
mov
push
lret
nop
or
outsb
xor
cli
sbb
pusha
call
add
mov
pop
jae
ja
mov
adc
in
cmp
push
lods
inc
addb
mov
mov
jae
pop
sbb
xchg
mov
fcmovb
out
das
mov
push
xor
mov
js
ljmp
test
mov
mov
pop
ret
or
jbe
sub
xor
lahf
ss
insb
mov
and
cmp
call
insb
pushf
outsl
ljmp
push
jmp
test
lock
call
cmp
test
nop
mov
sbb
stos
mov
pop
aam
popa
sub
loopne
pop
cmp
outsb
addr16
aad
push
cmp
lods
lret
sbb
sub
mov
call
dec
repnz
xchg
sub
or
popf
mov
outsb
sahf
and
in
andl
xchg
test
mov
notl
and
pop
in
dec
cld
xchg
pop
lret
in
insb
or
pusha
idivl
sub
stos
or
lcall
jecxz
push
pop
div
lcall
dec
insl
mov
xchg
mov
stc
insb
add
iret
arpl
cmp
xchg
adc
add
push
jbe
ljmp
insl
sbbb
cltd
popa
pop
sarl
sbb
loope
in
mov
mov
sub
and
jb
push
inc
scas
test
push
cmp
aas
cmp
loopne
sti
lret
xchg
mov
cmp
je
lea
bndstx
jg
aaa
nop
pop
or
push
shll
pop
bound
in
inc
insl
test
dec
outsl
xchg
cmc
sahf
inc
xor
addb
sbb
inc
cs
or
and
clc
jo
xor
mov
jge
pop
jbe
adc
dec
pusha
mov
in
test
and
out
pop
inc
imul
cld
push
or
imul
dec
inc
cmpb
jne
movsl
test
inc
jl
insl
xchg
jle
shrb
dec
adc
loope
nop
adc
sub
mov
popf
cs
out
mov
pusha
int
mov
xchg
loop
push
movsl
fstp
xorb
mov
mov
mov
ds
lahf
fists
loope
jecxz
sbb
xchg
xor
cmp
mov
fisubs
jg
jg
fildl
cs
pop
add
and
mov
inc
idivb
xor
dec
leave
mov
testb
into
shrb
jge
dec
icebp
cmp
jle
es
add
nop
cmp
jmp
mov
sub
loop
jg
adc
arpl
xor
dec
inc
lock
test
sub
das
and
mov
adc
aad
jecxz
test
out
xchg
fimuls
and
pop
push
sbb
mov
movsl
pushf
sub
mov
fisttpl
or
daa
in
xchg
xor
pop
repnz
xchg
sti
dec
loopne
hlt
jnp
mov
arpl
movntps
inc
addb
inc
or
aad
xchg
push
pop
arpl
add
lret
lods
lods
jmp
and
and
push
lds
mov
mov
movsl
push
movsb
cmp
aaa
adc
shlb
or
negl
pop
outsb
jmp
out
push
sbb
push
and
mov
inc
xchg
cmpsl
pop
gs
mov
dec
idiv
mov
test
cmp
test
cwtl
push
mov
mov
js
or
loope
mov
cmp
dec
lahf
add
mov
aam
mov
dec
gs
inc
stos
mov
pop
jge
nop
into
pusha
aam
jmp
sbb
push
mov
cmp
lcall
test
xor
push
ret
adc
cmp
call
sub
rcl
aam
gs
mov
xchg
lahf
mov
insb
loop
test
mov
push
pop
lods
cmp
outsb
add
jae
inc
mov
mov
shlb
add
sbb
pushf
out
popf
adc
dec
xchg
cmc
mov
dec
std
pushf
out
adc
lods
scas
mov
movsb
lods
mov
fidivl
cli
mov
add
repz
stos
aad
cld
scas
aam
dec
jge
sbb
ret
inc
push
pop
imul
cwtl
inc
jg
jnp
or
cmp
iret
xchg
push
pop
jne
cmp
push
cld
jae
inc
shlb
inc
pop
mov
cmp
jp
mov
test
jg
repz
xchg
test
inc
xchg
lds
sarl
add
lds
xor
rclb
cmp
dec
mov
pop
xchg
sbb
jl
mov
inc
or
fcomi
ret
lcall
xor
cmp
ss
scas
mov
das
xor
cmc
call
jb
mov
xor
loope
ljmp
or
mov
mov
fcoml
push
rcrl
aaa
outsb
lods
or
dec
xor
push
xchg
fucomp
jbe
push
xlat
or
or
push
in
or
sub
stc
scas
out
rclb
cltd
ljmp
mov
mov
mov
jl
jle
xchg
mov
js
dec
jbe
mov
aas
jmp
addr16
adc
mov
or
add
mov
aaa
jbe
xchg
loope
std
fst
je
aam
sahf
icebp
fisubrl
sti
mov
mov
add
outsb
sub
data16
shrl
fstpl
enter
pop
jnp
mov
je
ret
repz
xchg
mulb
cltd
sub
fcompl
sub
pop
or
imul
jmp
ja
inc
push
mov
mov
push
xor
pop
hlt
sub
and
out
push
inc
fs
and
push
dec
add
xlat
stc
or
fmul
arpl
or
xchg
cmp
leave
jae
push
mov
lcall
loopne
popf
enter
stos
icebp
and
mov
rol
icebp
mov
adc
jmp
into
ds
clc
outsl
out
push
jl
loop
mov
pop
or
or
arpl
inc
pop
les
push
lds
add
mov
mov
inc
inc
jne
sbb
push
in
shr
loopne
iret
push
mov
xlat
mov
sbb
shr
mov
and
mov
add
xor
repz
push
lret
inc
das
icebp
push
adcb
inc
mov
nop
pop
enter
pop
mov
jb
arpl
addb
and
dec
loop
sbbl
mov
dec
mov
shll
mov
mov
xchg
xchg
pop
mov
outsl
imul
adc
imul
scas
sub
adc
pop
and
scas
shr
gs
in
aaa
inc
or
xchg
sahf
inc
push
add
lods
xchg
es
xchg
jp
dec
das
adc
out
les
testb
mov
cs
movsb
jmp
inc
mov
outsb
aaa
pop
mov
andb
mov
das
xchg
fs
shrl
cmp
sbb
and
jno
push
movsb
repnz
xor
sbb
mov
ds
les
dec
loop
inc
test
cmp
or
pop
jmp
mov
push
mov
lahf
add
mov
and
nop
lcall
jecxz
push
mov
jne
into
cmpsb
repz
jmp
adc
jb
xor
loope
add
mov
clc
aaa
cmc
lret
movsb
fsubrs
shlb
std
lret
pop
dec
ficompl
mov
push
mov
mov
mov
arpl
jle
mov
and
mov
pushf
out
test
cmp
and
cmp
mov
stos
pusha
neg
add
lcall
and
andb
push
aad
pop
hlt
out
out
xor
adc
cmp
push
test
frstor
or
lea
pop
mov
les
add
repnz
out
orb
sbb
dec
pop
xor
fld
rdtsc
pop
test
jg
jg
call
dec
stc
test
sub
dec
test
insb
lret
iret
int
mov
frstor
xrelease
int3
out
pop
jmp
sbb
sahf
pop
add
mov
ret
mov
repz
stc
insb
cli
rcll
out
adc
shrl
sbbl
mov
xchg
mov
mov
sub
mov
jecxz
dec
xchg
rol
mov
fdivp
sbb
nop
dec
adc
jmp
sbb
sarl
bound
shll
hlt
cmc
mov
sbb
bound
dec
out
lea
arpl
cld
mov
lods
add
jo
test
pop
mov
jl
je
and
xchg
jge
enter
nop
sbb
jmp
sbb
pop
int3
imul
sbb
movsl
ja
xsha256
cmpsb
xchg
cwtl
mov
subl
ret
in
lcall
pop
and
jle
mov
std
fsubs
outsl
xchg
andl
mov
inc
leave
pop
push
mov
jle
adcb
inc
pop
in
fadds
cmp
iret
ljmp
push
je
dec
dec
fadds
or
jle
pusha
mov
mov
inc
ljmp
pushf
daa
xor
push
jo
out
cmpsb
mov
aam
hlt
stos
test
in
cmc
mov
es
mov
hlt
bound
push
mov
out
xchg
out
into
mov
add
ljmp
inc
xchg
in
gs
pop
push
push
dec
xlat
inc
mov
jbe
sub
push
movsl
add
sub
out
cmp
adc
arpl
jmpw
outsl
cli
pop
stos
fadd
xchg
divl
sub
sbb
repnz
dec
dec
mul
cmpl
mov
sub
xchg
frstor
shl
mov
add
subl
add
iret
js
lds
sbb
pop
repz
jg
jns
ljmp
iret
and
shrb
sbb
sti
fwait
cmpsl
stos
inc
sbb
inc
push
jl
mov
jae
call
nop
sub
adcb
adc
hlt
jo
dec
stos
xchg
adc
enter
inc
mov
mov
xchg
in
push
mov
fmull
push
aam
fnstenv
es
insl
or
mov
push
push
imul
push
mov
sbb
pusha
divl
lahf
lods
mov
dec
loope
adc
xchg
push
int3
enter
shr
imul
pop
pop
cmp
mov
dec
sub
pusha
ljmp
mov
pushf
mov
add
out
jne
hlt
pop
fistl
icebp
lds
sub
add
test
aas
dec
cli
and
push
nop
mov
jo
sti
mov
filds
push
fistpll
and
cs
loope
std
out
sub
sub
test
pop
ja
inc
flds
cmpsb
lock
arpl
test
insb
mov
dec
ds
sub
aaa
lret
fwait
call
or
mov
andl
dec
ror
ds
jae
cmc
xchg
mov
or
cltd
lods
mov
adc
shrl
cld
dec
lea
shlb
fcmovne
clc
mov
xor
cli
mov
mov
cmp
sbb
insl
loopne
fdivp
jnp
aas
cmpsb
lock
mov
inc
mov
adc
push
jne
dec
clc
repnz
cmp
aad
add
leave
jae
and
ljmp
jae
lahf
bound
mov
mov
int
test
and
jo
test
inc
pusha
mov
cs
add
mov
cmp
sub
sub
cli
inc
sub
stc
pusha
mov
sahf
push
mov
insb
mov
jmp
pop
xor
fwait
jecxz
jns
xchg
add
sub
ret
aam
cltd
ja
push
repz
push
jmp
pop
rcrb
lahf
das
loopne
adc
mov
cmp
jge
xchg
repz
or
and
cwtl
push
jmp
cmp
aam
inc
out
pop
sti
movl
call
add
not
nopl
cmc
mov
and
pushl
stos
movsb
sbb
outsl
sahf
test
jle
push
das
rcll
pop
jb
leave
adc
sahf
fidivs
ds
xor
cld
mov
lods
add
jl
mov
les
rsm
and
repz
test
loop
cmp
les
sbb
stc
push
out
pop
adc
xchg
add
jno
sarl
dec
test
dec
popf
sub
xor
int
push
mov
aad
insb
adc
sbb
jl
loop
and
sub
adc
int
daa
jnp
dec
stos
leave
aam
mov
adc
std
jno
mov
jbe
cmp
sar
adc
test
loopne
pop
push
xchg
dec
movsb
push
jg
cltd
pusha
inc
pop
xchg
pop
repz
clc
and
ds
shrb
mov
rcrb
jno
jle
jb
sbb
lret
fyl2x
sbb
mov
into
lret
adcl
push
fistl
or
ja
dec
xchg
pop
movsl
out
push
cmpsb
out
mov
cmp
cs
pop
fcompl
das
dec
jns
in
outsb
sahf
xor
adc
mov
pop
jge
subb
in
and
or
arpl
daa
mov
or
pop
repz
and
mov
or
inc
iret
lods
les
or
cli
jp
pop
scas
pop
pushf
popa
not
std
xlat
test
idivb
mov
xor
cmp
arpl
shrb
or
ljmp
pop
loop
jae
pop
int
mov
push
mov
jecxz
or
sbb
out
push
xor
cli
push
jmp
adc
outsb
xchg
adc
push
mov
inc
shr
xor
test
push
and
popa
push
clc
bound
xchg
imul
mov
mov
sub
jge
inc
loope
pop
inc
pusha
dec
mov
stos
inc
rcrl
adc
sub
jno
gs
push
mov
fwait
xor
aam
fimuls
push
jbe
imull
int3
xor
int3
jbe
dec
and
inc
rorl
out
test
call
jl
xor
push
in
repnz
notl
loopne
dec
loopne
add
inc
add
test
mov
scas
jp
mov
in
dec
cmp
je
xchg
testl
int
outsl
push
inc
cltd
push
mov
inc
pop
sub
dec
loop
and
or
add
dec
push
push
xor
insb
add
mov
mov
lcall
test
pop
repnz
ljmp
scas
mov
lods
xor
push
xor
jbe
xor
push
inc
clc
cmp
loopne
test
jb
inc
ja
test
mov
mov
pushf
gs
movsl
pop
rorb
lcall
sub
jne
dec
sbb
mov
add
push
test
mov
imul
mov
data16
scas
in
jns
je
or
pop
push
lock
cmpsl
adc
mov
xchg
test
dec
mov
dec
inc
sub
push
aas
std
ss
mov
jbe
push
gs
push
in
jg
or
adc
xchg
lods
push
movsl
fnsave
mov
and
sarl
or
ret
test
xchg
mov
inc
cmp
js
xchg
cwtl
mov
stos
call
or
inc
aad
xor
iret
mov
cmc
test
mov
jl
mov
mov
xor
mov
inc
add
pop
fimuls
and
jbe
xor
dec
lods
sub
aaa
push
sub
mov
cwtl
inc
xor
sub
sbb
les
out
rcrl
pop
leave
sub
inc
and
push
cli
sbb
aam
mov
pop
sbb
mov
sbb
sub
push
cmpsl
xor
xor
adc
out
mov
fstp
inc
push
xor
test
sarb
iret
jg
in
dec
cmp
outsb
add
shlb
outsb
jg
cmpsb
and
and
sbb
cmc
ja
outsb
pop
icebp
pop
insl
cli
rcrl
mov
cmc
inc
sub
imull
incb
mov
das
test
pop
mov
dec
pop
in
mov
jb
jne
jecxz
je
or
push
mov
fimuls
mov
cmp
jle
orb
mov
cmpsb
or
push
mov
push
fistps
adcb
push
rcrl
push
pop
lods
inc
imul
mov
dec
test
pusha
ret
fstps
mov
clc
push
stc
dec
outsl
ret
outsl
xchg
pop
fidivs
xchg
pop
test
pop
jae
jb
jbe
in
aaa
push
push
add
mov
imull
mov
xchg
arpl
ret
cwtl
pushw
frstor
pop
sahf
into
shrl
popa
push
cltd
clc
frstor
adc
outsl
push
xchg
pop
cltd
xor
mov
in
and
mov
jge
push
cmp
xor
add
jns
adc
adc
fcmovu
imul
or
inc
daa
sub
xor
xchg
cs
aam
loope
adc
fbld
les
mov
andl
xor
in
loopne
movsl
ret
je
jne
xor
in
rcr
xchg
add
repnz
pop
cmpsb
pop
out
xchg
pop
mov
or
jbe
pop
cmpl
into
mov
cmp
or
pushf
in
jae
mov
jecxz
mov
loopne
popf
and
fstpt
xchg
inc
xor
in
add
xor
or
mov
pandn
fwait
mov
arpl
scas
jbe
loopne
rcll
jp
and
fisubs
cmp
and
inc
push
or
std
push
lret
cwtl
das
cld
jnp
and
mov
out
andb
lods
xchg
inc
cmp
sbb
xlat
inc
cmp
addr16
loope
jmp
sub
mov
stos
inc
jecxz
aaa
loop
inc
movsb
xchg
js
and
push
fcoml
sub
push
stc
push
add
ljmp
lock
repnz
pop
cli
xor
into
lock
fnstcw
test
pushf
or
not
imul
sbb
adc
ss
pop
in
pop
xor
jns
mov
lcall
dec
loopne
mov
daa
insb
out
js
xor
mov
lods
iret
jp
add
jae
jmp
sub
fsubs
adc
cli
dec
loope
inc
orb
pop
sub
call
mov
in
test
stos
xchg
sub
fnstsw
mov
jne
cmp
repz
pop
xor
imul
add
data16
inc
loop
pop
clc
and
or
cmp
push
gs
loope
cmp
mov
leave
mov
inc
jecxz
mov
adc
data16
xor
test
insb
pminub
mov
imul
inc
aam
lock
arpl
int
daa
mov
daa
mov
out
jae
popa
movsb
mov
call
outsl
sahf
icebp
or
shl
adc
je
add
cs
push
test
adc
mov
mov
sub
int3
sub
pop
sti
jle
iret
push
push
nop
xor
in
in
push
cmp
sar
add
fisubrl
mov
cmp
cmpsl
aas
and
or
inc
and
aam
addr16
lods
xchg
das
mov
adc
pop
out
mov
mov
inc
shlb
mov
stos
inc
dec
cltd
lock
dec
ljmp
pop
or
jecxz
xchg
cmpsb
lds
aas
sbb
outsb
out
ret
pop
insl
cmc
xor
xlat
mov
pop
scas
cmp
mov
ss
je
fmull
adcl
and
enter
lcall
cwtl
test
ss
jne
mov
shll
data16
dec
inc
or
inc
mov
push
stc
and
mov
icebp
adc
fnstsw
and
xlat
cmp
pop
mov
ss
mov
idivb
dec
mov
mov
jns
or
cmp
inc
bound
cmpl
cmp
test
add
lods
add
dec
fwait
outsb
mov
insl
popf
stc
aam
mov
cltd
sub
push
lock
pop
movsb
inc
fs
xchg
sub
stos
xchg
test
cmpsl
or
cmpsl
jle
adc
mov
pushf
mov
xlat
mov
test
repz
das
rcrb
sub
out
mov
xchg
xchg
cs
jp
cmp
jl
movsb
dec
pop
pop
sarb
and
sub
push
fdivs
and
jae
or
xchg
jmp
sbb
mov
stos
jbe
movsb
and
cmpb
je
xchg
xor
rcrl
into
out
push
cmc
stos
sbb
sarl
je
xor
or
cwtl
out
xchg
sub
jbe
nop
sahf
sbb
mov
loopne
adc
pop
cmpb
mov
cmp
jmp
into
push
inc
mov
inc
inc
pop
xchg
sti
xchg
push
dec
scas
mov
dec
fnstcw
scas
adc
cmc
sbb
adc
pop
sub
pop
cmp
leave
xlat
jmp
xor
xchg
or
lock
dec
fs
xchg
sub
es
fists
sub
push
jmp
das
scas
sub
dec
mov
jbe
xor
aad
inc
stc
pop
fwait
jmp
sbb
push
popa
jmp
push
adc
xchg
sub
mov
xchg
pop
pusha
sti
push
or
mov
subb
roll
mov
sub
pop
aaa
ljmp
sbb
not
mov
jo
loopne
cmc
inc
pop
jne
ret
jb
cmc
sbb
loopne
and
push
in
inc
sub
das
mov
imul
mov
aaa
fwait
mov
int
mov
movsl
mov
xchg
mov
sbb
popf
jge
iret
adc
push
xor
scas
popa
jno
sbb
jp
movsb
mov
jg
dec
in
int3
pop
push
mov
push
pop
push
mov
fsubl
inc
push
imul
lahf
in
push
ror
out
xchg
add
xor
call
cmp
loope
mov
sub
rcl
jle
jge
xchg
cmpsb
out
add
adc
jo
rolb
sbb
sqrtps
les
mov
xchg
sub
dec
dec
loop
sub
pop
or
lods
jge
sub
xchg
sahf
cmp
jle
mov
sbb
mov
cmp
insb
or
adc
xlat
in
not
iret
push
xlat
sub
jb
xorb
and
cmp
pop
pop
clc
iret
or
movsl
sub
fcomps
and
dec
cli
fistps
push
sub
rcl
stos
jle
pop
mov
jns
mov
adc
fidivs
iret
in
mov
mov
jbe
sar
xchg
or
xchg
stos
xchg
imul
je
nop
cwtl
cmc
lea
pop
xor
imul
lods
sbb
fstpl
test
out
push
and
or
add
aad
lods
mov
out
lods
inc
and
sbb
out
or
and
dec
stos
fnstcw
cmpb
xchg
int
jbe
jle
lock
movsl
lret
cld
pop
jmp
dec
int
push
and
sbb
imul
xchg
iret
or
arpl
cmp
test
gs
movsl
cmpsb
ds
xchg
sbbb
pop
not
push
jo
out
cli
ja
cmp
cwtl
sbbb
mov
or
into
pop
sbb
outsb
pop
shl
adc
push
mov
jne
idivb
rcll
push
and
insb
jg
jmp
add
pop
and
push
daa
adc
or
fsub
aaa
xchg
xchg
test
les
cs
inc
mov
push
pop
adc
imul
out
loope
xlat
andl
mov
inc
les
test
push
dec
es
fisubs
popf
ret
stos
mov
push
mov
adc
das
movsl
ljmp
mov
sahf
adc
jmp
jl
arpl
fists
xchg
sbb
sub
mov
fbstp
cltd
push
xor
ja
divl
jg
aas
sbbl
es
jge
or
movsb
aam
pop
cli
pushf
xor
mov
inc
out
push
movsb
cmp
fsubs
fdiv
movsl
mov
jns
fidivl
sub
iret
mov
xor
sti
rcll
adc
sub
xor
insb
sti
dec
jecxz
push
ja
xor
call
add
shlb
jns
cs
fcmovb
dec
sub
jl
rol
and
mov
ret
xor
scas
loop
test
lret
ljmp
sub
fimuls
mov
cs
push
pop
cld
pop
xchg
inc
mov
push
enter
adcb
xchg
in
fcomp
lret
popa
repz
test
xchg
sub
sbb
jb
lds
stos
mulb
sub
xor
cmc
add
test
sbb
pop
lahf
mov
dec
pop
enter
xor
loop
ljmp
xor
mov
movsb
subb
lea
lretw
jnp
mov
push
push
daa
lods
out
jmp
jns
push
pop
adc
pop
mov
xor
pop
imul
loopne
xchg
mov
or
mov
sub
sbb
mov
dec
cmpsl
movsb
pushf
lahf
pop
sbb
std
lods
jecxz
push
adc
hlt
aas
push
and
test
movsb
or
subl
mov
mull
jo
shld
out
push
popf
mov
xor
shll
dec
pop
les
pop
scas
dec
sbb
jno
xor
dec
in
cmp
ss
insl
test
ljmp
xor
jnp
shl
lcall
jp
outsb
leave
dec
push
push
mov
js
mov
movsl
pop
leave
pusha
cmp
xchg
js
repnz
mov
call
jns
fwait
dec
fildll
aam
aam
int3
cmc
xchg
ficompl
jns
lds
divl
mov
sub
xchg
lcall
repnz
nop
sub
sub
mov
addl
jno
rcr
scas
adc
adc
push
add
dec
mov
jae
sub
push
lea
xchg
adc
push
cmp
stc
nop
jbe
mov
adc
sbb
mov
ret
sub
inc
dec
mov
inc
and
mov
sarl
sub
aam
dec
fucomip
fwait
adc
addb
inc
xor
fildll
lret
shl
cmc
or
test
pop
negb
pop
sub
lods
add
adc
and
popl
push
scas
inc
les
cmp
jmp
mov
jb
cld
mov
mov
and
daa
mov
gs
out
cmp
stos
pop
shll
arpl
lahf
mov
mov
pop
fdivr
clc
mov
add
dec
mov
or
sbb
dec
stos
aam
in
loopne
xor
mov
dec
xor
andb
imul
jno
imul
jbe
das
pop
mov
lret
sbb
sbb
scas
jo
test
cli
ret
inc
mov
pop
inc
stos
cmp
test
mov
into
lods
rcrl
lcall
cmpsl
ds
dec
inc
push
mov
cmp
jle
sbb
and
pop
push
in
scas
mov
stc
test
shlb
les
xlat
sub
in
int
xchg
pop
out
int3
dec
pusha
lret
pop
lock
inc
ja
inc
xor
sub
fstl
sub
mov
mov
out
adc
iret
int3
movsb
mov
popf
arpl
lods
inc
addr16
inc
es
scas
test
jp
add
inc
sbb
jl
imull
mov
jg
mov
add
or
sbb
mov
adc
sub
and
adcb
rcrb
push
mov
fwait
push
cmpsb
xchg
xor
dec
dec
cmpsb
jnp
pusha
xor
dec
in
dec
or
fprem1
cmp
test
mov
test
ja
lock
ret
adc
jnp
and
jno
push
xlat
xor
fmull
popa
popf
push
push
mov
mov
sub
fwait
fs
or
scas
add
sub
adc
vpaddb
mov
xor
bound
push
mov
mov
fisubrl
ds
push
in
aaa
adc
mov
push
push
cmp
or
pop
es
test
lahf
xor
cmpsl
cmp
jmp
shrb
jmp
inc
lods
jb
xchg
jno
dec
andb
ret
inc
mov
imul
out
xor
stc
adc
outsb
or
xor
cmp
adc
xchg
neg
in
pop
fcoms
dec
jno
xchg
jo
test
rolb
gs
fists
scas
dec
pop
movsb
movsl
addr16
sub
xchg
jecxz
int
pop
cmp
jecxz
lods
loopne
xchg
pop
or
jae
loopne
loope
pop
rol
sbb
xchg
mov
push
mov
dec
rcrl
xchg
insb
mov
movsl
scas
and
movsb
jle
aaa
lock
jg
xor
cmc
imul
pop
leave
pop
popa
addr16
jne
pop
repz
add
ljmp
ja
dec
and
outsl
push
hlt
ret
loop
popa
sbbb
fbld
cli
xchg
jb
jg
std
je
pop
mov
dec
clc
cmp
or
xlat
cmc
orb
lret
sub
cmpsb
lock
mov
mov
cmp
clc
xchg
adc
ss
loop
je
mov
frstor
xlat
add
sub
adcb
or
fisubl
jmp
leave
push
mov
xchg
loopne
cli
xchg
aas
or
cmp
lea
xlat
test
and
jne
add
pop
inc
mov
cwtl
jp
dec
nop
lret
adc
add
jmp
sbb
and
out
push
or
mov
sti
outsl
mov
or
cmp
stos
or
sbb
mov
xor
popa
inc
fstl
test
push
sub
and
cltd
cmpsl
inc
fwait
pop
stos
xchg
push
js
out
lock
andb
iret
push
cmp
aaa
insl
out
jecxz
imul
lcall
xor
xlat
xor
int3
insl
mov
outsl
dec
sub
test
xchg
xor
xchg
imul
out
dec
pop
push
outsb
rcl
outsl
jp
lods
pusha
xor
mov
enter
lahf
addr16
and
sub
sbb
outsb
sub
add
push
xchg
xor
dec
xor
and
mov
fadd
pop
test
cmp
roll
pop
outsb
cmp
mov
dec
add
cli
or
out
std
pop
xchg
cli
add
roll
pop
mov
jno
xchg
push
mov
pop
push
lods
pop
xorl
test
stos
pop
cli
inc
les
mov
ljmp
cmc
ja
daa
pop
mov
int
jnp
cmpsl
lock
mov
push
cli
daa
stos
sti
sub
cmp
mov
incl
dec
lock
mov
xchg
lahf
or
sahf
lods
adc
loop
jo
fdivrl
or
push
in
jns
iret
mov
xchg
lea
sbb
icebp
inc
popf
mov
fisubl
cmp
jae
jg
sbb
mov
or
lock
add
ds
pushf
xchg
xchg
iret
pop
repz
jp
inc
mov
jbe
cmc
inc
popa
and
out
dec
push
out
jge
xchg
xchg
push
repz
insl
pop
int
je
in
add
sbb
cmc
adc
add
insl
adc
fistpll
dec
mov
ret
mov
mov
adc
xchg
add
lock
sahf
ja
sbb
cmpsb
cmpsl
add
sbb
or
inc
mov
mov
fdivs
aas
lret
arpl
xchg
jle
push
pop
out
jbe
pop
movsl
inc
sbb
cmp
cmp
mov
mov
test
imul
cmp
scas
mov
xor
jae
aad
mov
repz
jl
xchg
stc
xor
sub
dec
mov
push
int3
inc
dec
jns
je
lea
push
jge
mov
divb
pushf
enter
pop
mov
rolb
addr16
leave
mov
add
push
pop
movsb
jge
repnz
push
pop
lock
clc
fisttps
pop
sbb
call
inc
and
mov
push
inc
fmuls
pop
jge
test
cmp
int
in
adc
mov
sub
loop
fildl
rcrb
and
mov
mov
rolb
cmp
subb
mov
cmp
bound
sub
mov
jg
out
aam
sub
jmp
mov
adc
push
lea
pop
cwtl
das
je
sti
mov
inc
xorb
outsl
add
mov
clc
push
or
mov
or
ficompl
mov
subb
pusha
stc
cmp
mov
inc
pop
cmpb
push
inc
fldenv
outsb
movl
dec
adc
test
inc
std
jg
add
jecxz
mov
jmp
or
pop
or
out
and
and
and
cmpsb
call
jae
xchg
ret
sub
jl
mov
sbb
popf
sbb
into
mov
inc
push
adc
add
mov
fcompl
or
sbb
popf
cmpsl
fisubl
mov
icebp
cmp
out
test
jmp
jg
adc
sub
cmp
pop
xchg
call
aad
or
icebp
jo
dec
xor
loop
adc
cld
dec
stc
adc
enter
pop
mov
jp
inc
xor
cmp
cmp
inc
call
push
cmpsb
das
jg
cs
test
into
mov
cmc
dec
or
cmp
pop
inc
dec
push
adc
mov
sub
adc
into
inc
ret
push
scas
add
jnp
imul
int
dec
jle
add
jb
sahf
pop
fisubrl
unpckhps
xchg
jmp
stc
stos
xchg
fcompl
inc
iret
or
js
adcb
add
mov
in
lcall
mov
out
adcl
sbb
xchg
adcb
imul
leave
mov
cmc
call
dec
negl
mov
test
je
lea
fisttps
mov
dec
fstpt
mov
imul
jle
fistps
cmp
js
inc
mov
in
test
push
rcr
repz
add
xorl
push
dec
rcr
pop
cmpsl
jns
lods
ja
xorl
push
add
lea
sub
mov
popf
sbb
xor
mov
push
lahf
es
xchg
dec
stos
dec
lock
dec
inc
fsubr
jg
inc
sub
insl
push
pop
push
fyl2x
in
jle
inc
adc
pushf
mov
jbe
outsb
test
sbb
lea
jno
pusha
mov
pop
cmpsl
add
push
push
adc
mov
fiaddl
cmpsl
repnz
sub
jle
cltd
out
ja
sbb
popa
jnp
jge
test
adc
mov
dec
fsqrt
orb
pop
and
push
call
or
ljmp
test
call
mov
add
out
mov
enter
pop
lods
dec
fnstsw
push
adc
lock
xorps
adc
test
push
movsl
mov
loop
hlt
pop
hlt
loope
gs
jecxz
xchg
xor
jb
sub
xchg
repnz
mov
push
int
mov
fs
adc
mov
ljmp
pop
pop
hlt
dec
push
fnstenv
test
xchg
push
dec
mov
movsb
mov
mov
jmp
pop
adc
jne
and
and
cmpsb
add
and
pop
xchg
jne
loope
jno
xchg
cmp
sbb
dec
shlb
push
push
fsts
mov
inc
in
lret
into
sbb
adc
faddl
mov
in
js
cld
mov
fcompl
cmp
testl
sti
addr16
pop
test
xor
push
fistl
mov
jno
push
mov
cmp
sub
and
xchg
popf
xor
mov
inc
mov
mov
dec
pop
mov
les
sub
lea
cmp
lea
mov
and
test
mov
hlt
in
xor
inc
push
repz
dec
stc
xor
mov
adc
pop
mov
or
sbbb
dec
in
orb
das
or
sub
inc
mov
jmp
inc
popf
loopne
add
add
hlt
mov
xchg
pop
ret
pop
pop
pop
xchg
add
xchg
inc
arpl
aad
dec
daa
or
jle
shlb
cmp
mov
ds
mov
hlt
out
in
jcxz
mov
movsb
aaa
mov
push
mov
xchg
fs
dec
jecxz
fists
popa
out
das
add
mov
jg
mov
jmp
lock
fidivrs
add
hlt
xor
sarl
cmp
mov
nop
int
in
sbb
jle
pushf
xchg
cmpsb
sti
lea
arpl
sub
inc
sbb
mov
pop
out
cli
iret
xchg
stc
jmp
xor
inc
sub
xchg
std
stos
xlat
rolb
into
inc
sbb
lock
es
fadds
ss
ja
jmp
mov
push
push
or
ljmp
cltd
xor
mov
lret
and
mov
inc
call
cmp
push
push
jbe
inc
aas
sbb
out
or
cmp
mov
cmp
xor
adc
push
inc
mov
imul
mov
sbb
sub
pop
jle
test
cmp
arpl
inc
test
dec
mov
fwait
aas
xchg
rcrl
negb
pop
lret
shl
mov
jge
sub
fistpll
xchg
ja
jbe
repz
push
shl
jge
clc
repz
push
insb
xchg
adc
mov
or
xchg
sbb
mov
or
mov
xor
mov
inc
xchg
pop
cmc
rcrb
xchg
in
xchg
aad
cmp
add
add
movsl
lods
add
movsb
mov
rclb
int3
inc
cmp
sbb
sbb
mov
fxch
xor
jnp
scas
nop
jo
insl
xchg
lods
lret
insl
subb
dec
and
push
or
push
pop
aas
andb
push
fiaddl
mov
rep
push
sbb
std
aam
roll
in
mov
daa
push
loopne
out
and
or
mov
sub
cmp
outsb
data16
xchg
je
shll
push
add
shll
out
pop
cmp
mov
jecxz
and
pop
or
push
jmp
inc
sbb
pop
mov
pushf
xor
jle
mov
xchg
sub
mov
mov
mov
cmp
pop
dec
pushf
xor
insl
rcrb
inc
pop
mov
loopne
fadds
ljmp
fnstenv
cmp
sub
fwait
daa
adc
outsl
dec
fldcw
sbb
aas
inc
pusha
cmc
js
daa
addl
push
cli
cmp
test
repnz
je
paddsw
pop
and
scas
je
nop
push
sti
push
push
in
mov
mov
add
push
out
insl
inc
sarb
sbb
test
pushf
jle
add
cmp
fistl
push
mov
fiaddl
arpl
fs
out
cmp
imul
pop
repnz
inc
jns
pop
es
push
and
mov
inc
pop
xor
jns
fwait
adc
mov
pop
jae
jae
inc
xor
xchg
add
negl
into
and
mov
test
icebp
mov
data16
push
xchg
pop
lods
push
sbb
inc
cmp
dec
mov
pop
xlat
cmp
ret
xor
pop
lock
lret
or
mov
fld
sub
fsubr
and
add
jbe
int
push
aas
repnz
pop
aas
mov
mov
loopne
sbb
fdivrl
pop
push
add
test
push
mov
cmp
dec
mov
sub
pop
pusha
xor
pushf
cs
inc
push
jmp
inc
pop
ljmp
popa
push
and
or
cmpsl
repnz
inc
in
stc
push
xor
bound
pop
push
pop
daa
leave
adc
cmp
popf
cmp
xor
mov
cwtl
fsubs
cmpsl
xchg
mov
sbbb
mov
mov
add
cmp
sbb
cmp
adc
les
out
and
sahf
clc
mov
xchg
je
pop
divb
in
cmc
ret
lret
ljmp
lea
sub
jbe
out
les
addr16
mov
cmp
or
loopne
popa
jg
lock
out
xchg
ficoms
pop
aad
std
cmp
ds
mov
in
imul
mov
and
adc
inc
lods
push
xchg
mov
out
inc
mov
fidivrs
sahf
sahf
std
stos
test
mov
int3
jl
push
aaa
adc
push
push
ljmp
inc
mov
adc
xor
xchg
jae
xchg
cs
mov
xor
sub
stos
push
cmc
lahf
inc
jmp
pop
xlat
mov
icebp
push
idivl
jg
ljmp
sub
rdtsc
mov
xchg
clc
fisttpl
jp
jns
push
mov
jbe
scas
xchg
mov
stos
dec
data16
cltd
mov
mov
xor
dec
inc
ret
movb
mov
jo
stos
fistl
lods
xchg
push
in
push
fcoml
add
fdivp
stc
sub
mov
in
insl
in
orl
jno
mov
mov
and
in
std
xchg
mov
sbb
jg
mov
pop
stos
cmp
push
outsb
lret
cmpsb
cmp
in
inc
dec
lods
mov
ret
aaa
stos
lar
xor
dec
loopne
cmp
xlat
lcall
dec
cmp
jl
mov
aad
lcall
sahf
cmc
js
mov
test
dec
insl
push
hlt
mov
ja
les
iret
mov
xchg
lock
add
mov
pop
or
ss
mov
nop
jle
push
push
jne
dec
loope
xor
mov
in
repz
insb
adc
lods
sub
test
sub
jbe
xchg
in
movsl
inc
adc
ds
repnz
xor
cltd
dec
mov
xchg
scas
or
mov
into
or
dec
mov
clc
jns
movsl
bound
movsl
rolb
jb
test
pop
and
test
jno
jmp
jno
jo
test
lret
inc
push
packuswb
mov
and
xchg
inc
lds
call
mov
mov
std
fildll
sti
ds
call
jbe
xor
insl
mov
or
inc
ficoml
bound
push
jge
adc
cmp
repnz
inc
cmp
add
in
subb
outsb
mov
movsb
faddl
mov
aas
pop
add
cmpsb
jecxz
or
leave
cld
mov
int3
mov
arpl
aam
adc
std
into
sahf
stos
call
jne
fiadds
loopne
jne
push
jb
enter
xchg
sub
jmp
shr
xchg
push
imul
test
fimull
stos
jmp
xchg
jle
cmp
mov
out
sub
in
pop
imul
int3
dec
push
or
data16
and
mov
nop
dec
incl
or
pop
movsb
hlt
int3
mov
in
mov
imulb
mov
push
je
mov
gs
in
mov
and
pop
cmp
pop
jl
daa
dec
jae
fcmove
outsl
ljmp
imul
jo
dec
adc
dec
aaa
mov
xchg
aas
gs
ds
jecxz
in
lret
arpl
fsubrs
sti
stc
hlt
lahf
in
xchg
dec
dec
jle
push
lods
push
shl
mov
xor
pusha
xchg
dec
ss
rol
movsl
adc
and
and
dec
clc
out
jbe
pusha
adc
mov
fdivs
fucomip
rcl
sbb
sbb
and
jnp
xchg
push
leave
and
pusha
xchg
xor
loope
xchg
mov
scas
cwtl
pop
pop
dec
int
jbe
pushf
pop
aad
pop
mov
in
lds
out
sbb
dec
movsb
inc
pop
sub
int
push
mov
rcrl
jno
push
and
nop
imul
mov
insb
lahf
jb
data16
cltd
sti
stc
clc
lret
bound
insb
add
nop
cmc
mov
adc
test
jge
cld
cmp
push
out
mov
mov
dec
sar
mov
std
cwtl
xchg
pop
shl
push
in
or
das
rol
aad
in
adc
jp
lods
adcl
sub
push
pop
jg
or
bound
test
jns
mov
xor
and
sub
daa
cmpl
repnz
sub
and
test
mov
sub
lahf
lods
mov
push
stos
jge
xchg
sbb
idiv
outsl
sbb
dec
mov
fsubrs
fucomp
pop
push
dec
fs
fwait
push
rcll
and
lcall
in
ror
mov
lea
fiadds
adc
and
push
mov
sbb
xor
push
data16
mov
call
xor
xor
cmp
icebp
mov
fisttpll
xchg
push
adc
out
xchg
out
cmp
aad
mov
adcl
jp
adc
mov
pushf
dec
adc
sub
xchg
faddp
adc
aas
cmp
push
cmc
mov
shll
push
xor
pop
stos
mov
enter
xor
xor
dec
push
xlat
jge
xchg
andb
idivl
or
sbb
pop
shl
jp
sti
ja
jg
sbb
pop
or
or
jo
adc
mov
add
pop
mov
call
pusha
lds
mov
jae
sub
pop
lods
aas
loope
pop
popf
pop
sahf
shrb
dec
xor
aam
or
scas
inc
mov
mov
push
dec
dec
lods
shl
into
xchg
and
test
popf
fldt
test
lock
cmp
arpl
into
mov
mov
stc
sbb
dec
pop
mov
pushf
imul
mov
xor
fisttpl
ss
shrl
imul
inc
add
aam
sub
xchg
sub
push
xor
jnp
dec
out
mov
imul
cmp
inc
adc
xchg
dec
fsubr
xchg
adc
xchg
push
or
adc
jno
xchg
mov
cmpsl
push
dec
adc
pop
pop
fnstsw
fdivs
push
aaa
dec
mov
cmp
inc
push
mov
shl
call
in
cmp
mov
sbb
hlt
data16
insl
xor
xchg
sub
cmpsb
mov
mov
mov
inc
xlat
fsts
or
inc
or
cli
insb
cmp
push
clc
mov
jno
add
adc
xor
bound
imul
pushf
sub
cs
inc
push
int
xor
int3
arpl
iret
setle
lret
and
adc
cmp
xchg
outsb
and
push
xor
sbb
adc
inc
and
ret
rclb
xor
lret
icebp
jge
lea
aad
fnsave
sub
pop
rclb
mov
dec
jp
daa
mov
out
mov
jnp
jge
or
mov
rcl
cltd
call
push
js
inc
mov
fwait
int3
jo
addr16
rclb
mov
mov
test
ss
jmp
cvtdq2ps
lcall
dec
sub
pop
and
movb
rclb
add
shll
sbb
sbb
mov
mov
in
lods
inc
repz
and
sub
inc
push
pop
bound
mov
scas
fnstsw
fdivrs
ficoml
fists
cmpsb
mov
out
cltd
push
scas
loope
mov
imul
sbb
inc
lahf
push
lahf
ss
xchg
lods
ljmp
es
adc
add
xor
loopne
stos
mov
inc
inc
sub
push
adc
mov
push
cmp
xor
push
stc
je
inc
subb
repz
push
in
pop
jmp
cmc
aam
mov
push
out
lods
clc
imul
dec
cwtl
icebp
inc
hlt
adc
shll
ds
fsubrs
mov
mov
inc
mov
mov
sub
out
xchg
inc
int
xor
and
cwtl
xor
dec
mov
cmpb
inc
test
cmp
test
add
ss
adc
icebp
movsl
pop
adc
adc
hlt
lahf
dec
stos
mov
shl
ds
mov
in
addr16
bound
jle
sub
add
add
rclb
jbe
xor
push
add
aas
popf
xor
notb
daa
ds
call
pop
mov
movsb
popa
dec
rolb
fwait
inc
jp
adc
out
popf
and
mov
lret
add
fildll
es
and
ljmp
mov
mov
gs
pop
out
push
mov
lea
repz
mov
xor
mov
xchg
mov
mov
int
sub
or
out
jae
mov
inc
add
pop
fcomi
aaa
stos
ret
cmp
mov
xor
sbb
pop
and
int
mov
push
adc
mov
add
xchg
xor
push
inc
push
xchg
mov
mov
xchg
fs
je
mov
aad
mov
mov
lock
add
mov
add
sti
ss
sti
or
or
into
xchg
sub
into
pop
pop
xchg
pop
and
push
sub
dec
mov
hlt
and
adc
mov
popf
ljmp
inc
test
or
in
out
cmc
add
xor
ror
enter
sbb
xchg
sub
repz
xorb
rorb
push
push
stc
jl
mov
es
sub
test
sbb
mov
int
mov
mov
imull
or
fcmovb
dec
and
pop
cltd
insb
add
dec
imul
shll
xchg
jae
dec
out
pop
adc
fisubl
imul
mov
notl
cmp
sub
mov
mov
ss
dec
pop
daa
rcl
out
sbb
ficompl
shrb
sbb
mov
mov
mov
ret
lods
mov
or
mov
mov
lods
fsubrl
cld
lret
js
pop
pushf
js
xchg
sarb
loopne
stc
mull
in
test
pop
stc
cld
xor
lock
xchg
jne
add
xor
adc
das
je
popa
cwtl
xchg
push
mov
push
out
icebp
aad
or
pop
std
jge
repz
cs
pop
add
xor
cmp
outsb
push
mov
mov
lahf
and
dec
sbb
inc
jb
inc
xchg
jp
test
mov
mov
pop
fnstenv
pop
fldl
into
pop
inc
cmpsl
xlat
repz
xchg
insb
nop
jl
nop
test
mov
fsubr
add
push
add
pop
rclb
cmpb
xchg
mov
jbe
cmp
push
lods
or
scas
orb
dec
dec
arpl
inc
mov
sub
jp
push
mov
orl
xchg
mov
cmpsl
push
sahf
xlat
pop
add
loope
push
test
mov
cmpsl
xchg
pop
sbb
and
mov
stos
aaa
add
test
outsl
xchg
cs
repnz
sub
xchg
mov
xlat
leave
movsl
sub
shlb
dec
loope
inc
xchg
add
mov
xor
mov
or
incb
loopne
adc
decl
or
sub
aas
fsub
popa
xchg
inc
inc
lods
cmp
movsl
cmp
rol
popa
rcl
and
xchg
sahf
xor
stos
xchg
mov
push
push
adc
imul
test
and
stos
enter
cmpsl
mov
cmpsb
or
mov
movsb
dec
int3
lcall
mov
cmc
cmp
sub
aaa
dec
mov
int3
adc
jmp
jo
xor
mov
cwtl
sbb
inc
or
cwtl
or
mov
scas
mov
popf
shlb
or
andb
ret
insb
pop
jae
or
sub
dec
push
dec
rcrl
mov
dec
call
mov
adc
xchg
nop
bound
mov
pop
loopne
sbb
sub
popf
inc
xor
lods
cs
fcmovb
jp
stc
sti
dec
movsb
mov
pop
sub
xor
cmp
adc
movsb
cmp
aam
dec
nopl
repz
or
sarb
add
int3
arpl
jns
das
stos
scas
mov
or
fsubrl
ss
lcall
dec
jmp
sub
jg
xor
popa
test
dec
sahf
outsl
imulb
ljmp
in
mov
sbb
lea
xchg
cmpsl
imulb
ss
scas
mov
add
mov
jmp
xchg
sarb
and
fdivrs
mov
cmp
mov
inc
mov
fdivrl
push
mov
fsubs
mov
push
xor
data16
jg
test
xor
addr16
popa
jl
pop
push
out
icebp
lret
popf
xchg
push
add
cmp
jbe
pop
push
outsb
lds
movq
xlat
ss
push
in
jbe
adc
xor
mov
mov
push
mov
test
xchg
mov
lret
popa
repnz
or
add
out
sub
in
jno
mov
cmpsl
inc
fnstenv
data16
lret
or
mov
xor
in
jnp
mov
add
repz
cltd
mov
ret
sub
mov
pop
dec
mull
ja
in
imul
dec
lock
cs
in
cli
dec
pop
aaa
divb
xor
repz
push
shl
pop
test
cmp
dec
mov
in
jmp
xchg
das
pop
mov
out
sub
or
jno
add
add
fdivrp
scas
nopl
adc
mov
lcall
mov
pop
imul
rol
je
loope
add
scas
cmp
loopne
xchg
dec
loop
and
js
ds
subl
xchg
fistpl
popf
notl
or
jns
sbb
mov
push
pop
testb
inc
popa
fadds
loop
mov
add
sbb
ds
dec
cmp
pop
popl
shlb
das
cmp
fnstenv
inc
in
mov
xchg
iret
push
popl
and
sbb
lahf
and
adc
sbb
scas
fnstsw
rol
lods
mov
jecxz
repnz
xchg
sub
out
movsb
add
xchg
push
xchg
adc
jnp
into
xchg
mov
das
or
mov
test
adc
sub
cwtl
mov
cmp
jnp
push
out
jl
and
scas
call
fbstp
mov
testb
jae
pop
and
xor
jo
stos
inc
stc
jno
loope
pop
dec
out
ljmp
rcrl
push
les
lea
test
mov
fs
mov
mov
fisubl
push
add
sub
scas
xchg
std
xchg
enter
push
hlt
insl
cmpb
sbb
cwtl
xor
fwait
mov
cmpsb
inc
jp
sbb
jg
and
push
push
mov
lret
repz
loopne
push
dec
filds
pop
test
in
push
jmp
mov
or
test
fdivrs
imul
sbb
dec
in
add
fnsave
push
mov
pusha
adc
sbb
cmp
mov
mov
push
jb
shrb
mov
mov
adc
lret
mov
out
movsb
cmpsl
out
aad
pop
scas
es
addl
cld
push
mov
loope
jb
shrb
inc
test
and
sbb
cmp
xchg
test
jnp
pop
jbe
push
aad
gs
or
xor
cmp
std
icebp
cmpsb
cmp
lods
add
out
ja
ds
daa
xchg
push
adc
pop
mov
and
scas
push
or
jecxz
pop
inc
xlat
or
xchg
push
jne
in
xor
xor
mov
repnz
in
inc
xlat
outsl
add
xor
je
cmp
cmp
jmp
jp
mov
cmpsb
popa
sbb
pop
int
adc
cmp
mov
or
jmp
or
shl
sbb
rorl
stos
in
push
repz
lds
jnp
cmpsl
iret
cwtl
add
dec
std
negl
outsl
out
dec
mov
push
fnsave
cld
inc
jnp
cltd
daa
mov
push
jo
xor
xchg
outsl
pushf
ret
xchg
fbstp
fadds
pop
or
pop
mov
xor
xor
adc
addr16
into
gs
push
shll
in
decb
mov
clc
loope,pt
pop
popa
fidivrs
push
mov
cmp
rol
mov
sub
mov
pushf
dec
mov
jnp
lahf
lods
lahf
xchg
push
cli
sbb
cli
lea
adc
in
test
xor
mov
int
xchg
mov
pop
pop
repnz
pop
adc
cld
and
xor
dec
sti
push
stc
xchg
push
fcoms
in
rclb
add
jl
les
or
aaa
es
adc
mov
fadd
rorl
mov
or
xor
push
push
jmp
xchg
pop
jo
mov
loope
or
push
jmp
jns
jo
pushf
mov
jno,pt
xchg
test
xor
jmp
sbb
ds
pop
pop
and
inc
lret
pop
push
or
repz
pop
dec
sbb
iret
data16
loop
cmc
addr16
rorb
and
mov
mov
lds
fldcw
scas
stos
jg
gs
xor
mov
sar
xchg
out
ljmp
xchg
lock
repnz
mov
lret
fs
ret
xor
sahf
imul
adc
bound
cmpsb
addr16
push
movsl
aas
sbb
jbe
xchg
mov
loop
xchg
mov
and
stc
xor
cmp
add
jns
pushf
icebp
and
jb
pusha
test
xchg
pop
inc
stos
jl
rcrl
and
fwait
loopne
out
inc
movsl
push
xchg
lods
hlt
pop
push
mov
sub
sbbl
xlat
adc
xchg
dec
out
push
mov
das
xchg
jmp
out
cmp
out
cltd
ljmp
adc
jbe
arpl
jbe
aaa
pop
repnz
jns
mov
xchg
add
repnz
dec
jnp
je
insb
cmp
mov
ret
fsubs
nop
ja
jmp
jl
sti
lods
xor
jb
sub
adc
push
push
insb
xor
mov
inc
sbb
movsl
jns
les
inc
or
jb
mov
inc
movsl
mov
fmuls
sub
mov
dec
jmp
fiadds
addr16
fbstp
xor
sub
lods
aas
cmp
and
loopne
shl
aam
insl
mov
cmp
lock
inc
cmpxchg
xor
ret
mov
loop
dec
adc
ja
repnz
shl
sti
in
cs
aaa
jb
pushf
xchg
rcrb
inc
and
data16
cwtl
pop
int
aaa
pop
xchg
and
cmp
xchg
icebp
adc
out
adc
push
mov
xchg
xchg
shr
pushf
cmp
cltd
jo
scas
mov
out
inc
notl
inc
or
js
fnsave
xor
mov
push
inc
ret
dec
xor
adc
fmul
aam
ljmp
sub
icebp
dec
xor
and
js
push
stos
xchg
mov
jle
push
add
inc
xlat
mov
dec
pop
cmc
jl
xor
ret
fisttpll
nop
mov
in
ret
mov
cmp
or
push
enter
vphaddbw
addl
scas
testl
movsb
loope
mov
scas
xchg
stos
insb
pop
jne
mov
mov
mov
loop
in
xor
jns
bound
insl
out
stos
enter
cmc
test
int
jmp
mov
cmp
jle
stos
mov
movsl
add
rcr
in
jo
test
gs
xor
inc
int3
jnp
mov
mov
ja
inc
stos
or
push
sbb
cmp
adc
pop
std
dec
mov
jg
in
cmp
inc
inc
or
std
les
jle
fdivrs
inc
push
jecxz
push
cmp
jge
adc
adc
clc
es
or
and
pop
inc
test
fld
and
pop
test
stos
or
sbb
popa
pop
xor
fldlg2
orl
pop
jo
in
lea
inc
aaa
loopne
inc
sub
mov
dec
mov
cmp
pusha
outsl
subl
out
outsb
mov
sbb
sbb
sub
push
xchg
fwait
lods
leave
mov
cmp
or
bound
mov
lahf
jmp
data16
ret
bswap
xor
push
je
gs
mov
inc
or
aad
inc
pop
cli
add
sbb
pop
stc
cmp
and
nop
sub
dec
pop
xchg
pusha
stc
popf
inc
arpl
vaddpd
or
pop
mov
sbb
aad
in
push
dec
xchg
adc
shrl
sub
jbe
push
xchg
or
push
mov
sub
bound
xchg
push
mov
push
xchg
and
std
ss
popf
test
movsl
push
jne
jge
add
fs
and
push
cld
inc
add
push
sbb
xchg
sbb
push
insb
dec
ja
push
test
xchg
stos
inc
cwtl
mov
andb
addr16
stos
or
pop
or
rcrb
lret
pusha
lods
pop
rorl
pop
inc
popa
loopne
in
rorl
mov
fldcw
sub
xchg
div
cltd
and
xor
es
repz
test
nop
sub
push
jmp
cmpsb
mov
sbb
fucomip
les
sub
xchg
lahf
cld
dec
ret
sbb
cld
xchg
mov
push
sbb
or
adc
pop
sub
cmp
push
jae
xchg
lcall
pop
sub
jg
pop
lea
pop
jno
mov
in
mov
and
xchg
jecxz
test
jg
pop
push
fwait
and
incl
sti
adc
xchg
lods
and
call
push
or
mov
fisttpll
dec
imul
jmp
mov
in
test
stc
arpl
out
sbb
push
hlt
data16
xchg
lcall
imul
fistpll
xchg
stos
ja
and
jbe
inc
test
mov
outsl
out
adc
add
insl
push
dec
xor
es
insb
fnsave
pop
decl
xor
adc
sahf
mov
push
add
jp
fisttps
adc
sbb
fsubr
rcrl
adc
push
cs
aas
je
pop
rcr
push
arpl
and
subl
call
lods
popa
push
mov
scas
out
pop
sub
repnz
movsb
mov
pop
aad
jecxz
popf
out
aad
mov
dec
loope
popa
mov
inc
ds
push
pop
mov
dec
jb
repnz
inc
pop
clc
out
js
xor
jmp
jecxz
pop
cmp
pop
jae
xor
mov
mov
adc
xlat
mov
in
sahf
add
leave
xchg
cli
cmc
dec
or
mov
mov
ja
insb
call
fdivrl
adc
pushf
mov
jl
dec
jecxz,pn
ret
lods
cli
rcl
aad
adc
repz
dec
repz
fyl2x
popf
xchg
add
pop
inc
sub
aam
orb
mov
jg
mov
pop
dec
bswap
ss
outsl
rcll
mov
mov
cld
sbb
dec
pop
sar
fs
mov
js
sahf
out
sbb
das
ljmp
xor
shll
dec
loop
push
cld
mov
scas
gs
or
into
mov
add
lock
xchg
mov
lcall
ja
jl
sbbl
imul
add
add
push
jnp
and
xor
xor
cwtl
and
adc
mov
cmp
add
aaa
fstl
xlat
push
mov
adc
dec
mov
scas
fsubrs
mov
jl
aas
jbe
jno
repz
sbb
ret
mov
mov
lahf
idiv
cltd
sarb
adc
movsl
bound
nop
ror
faddp
mov
mov
shll
push
testl
mov
pop
cmpb
push
mov
push
sub
adc
cmp
out
mov
xchg
xchg
push
mov
mov
js
cmp
pop
ja
pop
aad
inc
jl
fistpl
or
push
clc
call
xor
lods
mov
insb
add
scas
fucomp
sub
and
cwtl
xlat
out
mov
lret
mov
adc
fstpt
sbb
mov
aad
add
stc
fs
mov
push
cmp
rcrl
push
lds
fwait
cs
daa
icebp
sbb
or
loope
fwait
jb
andb
fdivrp
or
pop
push
mov
popa
ja
xchg
sub
push
insl
add
mov
mov
pop
or
sbbl
mov
ret
popa
movsb
test
mov
kortestw
mov
lahf
in
loop
test
fwait
arpl
int3
lret
mov
jge
inc
cltd
xchg
mov
mov
or
call
aam
mov
pop
loop
inc
es
xor
inc
sbb
data16
ljmp
xchg
outsl
mov
scas
xchg
lock
xlat
mov
inc
data16
imul
jmp
out
ljmp
fs
mov
mov
in
stc
ds
or
dec
xchg
cmpb
mov
pop
ljmp
es
mov
xor
shl
jnp
adc
jge
jp
dec
dec
mov
push
test
cmp
mov
aad
shl
cli
or
pop
xor
push
jne
outsb
test
adc
decl
outsb
sub
pop
popa
mov
dec
out
into
enter
mov
test
xchg
popa
add
inc
sub
subb
jno
cmc
scas
mov
enter
fsubrp
or
ljmp
jne
ret
ja
jo
and
xlat
sbb
cs
ret
dec
shrb
loop
stos
mov
aad
or
shlb
hlt
push
fnstcw
push
mov
dec
cmp
stc
insl
shrl
push
push
xchg
xor
inc
xchg
and
mov
lea
rorb
cmp
xchg
and
daa
ret
loope
dec
in
dec
adc
sub
pop
orb
xchg
xor
mov
sbb
mov
dec
push
jbe
aad
inc
adc
xor
adc
sbb
cld
xchg
pop
stos
std
int3
mov
cmp
xor
jnp
setp
ja
push
nop
ja
mull
rorb
jmp
sbb
xchg
dec
xchg
jne
les
inc
mov
loopne
lods
mov
jl
stc
cwtl
jge
fnsave
lds
dec
movsl
jmp
loop
shlb
push
fistpl
xorl
jno
adc
mov
xchg
jns
push
pop
movsb
xor
loopne
cmpb
shrb
lgs
loopne
popf
lret
cmp
adc
lret
sub
aaa
fdivs
dec
loopne
stos
vmovq
push
cmp
lcall
add
jg
push
sbb
ja
repnz
cli
sbb
mov
je
push
mov
xor
enter
push
aas
push
sahf
push
add
fisubrs
xchg
inc
jo
movsb
test
movsb
sbb
xchg
pop
sbb
mov
mov
pushf
movsb
and
lds
mov
cmpsb
sbb
adc
inc
loopne
dec
xchg
mov
adc
dec
rol
xchg
mov
pop
rclb
shl
outsb
int
in
push
cmpsb
mov
adc
pop
mov
inc
pop
mov
sbb
sbb
scas
dec
jb
mov
dec
outsb
aas
mov
mov
call
gs
jnp
in
and
inc
fwait
mov
dec
mov
mov
jl
and
dec
outsb
mov
fisubs
jge
lret
xchg
inc
jns
mov
adc
in
mov
ja
xchg
sbb
pop
jp
mov
pop
int3
leave
js
jae
add
xor
dec
jo
std
xchg
test
sahf
and
xor
mov
iret
jno
sub
dec
dec
cmp
xchg
xor
mov
dec
in
xlat
dec
or
and
jmp
shrl
xor
adc
mov
sti
pop
gs
into
sbb
cmp
outsl
push
clc
rclb
idivb
movups
jp
jmp
into
push
sub
xchg
dec
dec
fs
jns
and
sbb
fadd
xor
fcmove
loop
push
sub
aas
shll
cmc
leave
int
push
movsb
cmp
adc
out
fcoml
dec
and
shrb
in
dec
push
fdivl
ret
repz
ljmp
por
shlb
add
mov
inc
push
sbbl
fidivrs
rcrl
jo
out
sti
xchg
cmp
inc
adc
mov
cmpsb
and
cli
mov
xor
rolb
jb
icebp
dec
aaa
or
mov
stc
cmp
je
pop
xor
and
sti
or
ja
rcl
test
xchg
repz
cmp
testb
mov
in
pushl
mov
and
fcoml
add
test
pop
mov
inc
scas
pop
test
sbb
jg
das
mov
pop
dec
cmc
leave
ljmp
pop
mov
std
lods
dec
mov
sbbl
fs
mov
pop
data16
push
add
sbb
adc
daa
out
loop
int3
adc
fcoml
nop
adc
jo
pop
imulb
ds
push
push
or
push
stos
fld
push
stos
dec
iret
fxch
leave
test
and
mov
sub
fbstp
adc
xchg
xlat
sbb
ss
dec
dec
gs
lods
lret
and
fdivr
nop
push
outsb
or
ljmp
out
test
inc
out
repz
sti
nop
pop
cmpsb
cmp
repz
fbld
mov
xchg
fldl
outsl
and
daa
adc
jmp
test
adc
sbbl
adc
jl
adcb
mov
out
push
inc
in
mov
ficompl
mov
lock
ror
push
pop
pop
in
popf
aas
das
add
sti
xor
fwait
jp
add
push
addb
jns
enter
and
jge
cmp
data16
dec
and
rcrb
stos
adc
jae
xor
nop
and
cld
pop
fsubl
push
lds
jne
pop
adc
loope
jl
mov
adc
scas
inc
jecxz
orl
xchg
sarb
add
add
jne
cltd
xor
std
pop
add
clc
xchg
or
xchg
hlt
pop
in
pop
std
mov
loopne
inc
in
sbb
push
les
mov
daa
inc
xchg
jmp
cmp
jge
pop
push
push
xor
into
fidivl
outsb
xchg
sub
cs
fcoml
dec
and
add
movsl
sti
lret
or
jnp
mov
pop
outsb
sub
dec
shrb
pop
aaa
jae
mov
fisubrl
int
jns
ret
stos
insl
jb
mov
xchg
in
and
or
loop
sti
lahf
mov
js
dec
stos
subb
mov
cmpsb
or
fsubrs
cmp
imulb
and
inc
orl
jno
out
push
sbb
lods
leave
leave
cmpsb
sbb
add
or
xor
adc
adc
mov
xor
cmp
js
pop
mov
pop
insb
jle
lret
cmp
push
jmp
cwtl
cwtl
mov
lret
dec
cmpsl
in
addb
adc
addr16
push
out
test
rcrl
mov
test
fcomps
ljmp
jbe
sbb
std
bound
in
jbe
fdivl
sbb
or
fists
inc
fistpll
dec
adc
in
stos
add
pop
fdivl
and
lahf
aad
mov
call
fcmovnu
mov
xlat
pusha
mulb
xlat
jle
mov
daa
outsl
les
xor
test
out
scas
icebp
dec
push
fsubl
aaa
mov
mov
loope
fldcw
mulb
push
mov
sbb
mov
jbe
pop
pushf
jbe
inc
and
dec
and
inc
je
lds
and
or
sbb
leave
push
test
inc
es
sub
fbstp
or
nop
mov
imul
sbb
rol
fmuls
pop
push
sbb
jge
mov
pop
pop
fdivr
cmp
arpl
xor
dec
inc
fcompl
repz
sub
dec
ror
push
xor
cmpsb
cmp
cmpsl
sahf
cmp
or
jbe
out
push
aas
daa
fsubs
int
pusha
mov
fdivrl
mov
nop
xchg
mov
ds
ja
lds
jmp
sub
or
push
pop
mov
in
stos
jp
and
push
pop
js
cmp
inc
call
or
mov
sub
dec
testb
cmp
xchg
arpl
jne
scas
mov
inc
gs
fs
jmp
test
ret
ror
xchg
add
cli
pushf
into
jbe
push
nop
or
js
dec
bound
mov
cmp
sbb
push
push
dec
out
cmp
movsl
popa
daa
outsb
add
add
rol
sub
xor
mov
dec
pusha
imul
adc
outsl
xchg
testb
xor
xor
dec
rclb
and
sti
xor
xchg
loope
test
mov
into
xlat
cli
stos
lea
mov
fucomp
cmp
and
outsb
popa
inc
pop
mov
and
pop
push
pop
fdivrs
or
mull
mov
inc
test
adc
push
dec
mov
loopne
fs
inc
popa
into
ss
pop
daa
fisttps
push
adc
out
js
cmpsl
call
xchg
popa
mov
mov
inc
in
xor
cmp
xchg
mov
and
jecxz
les
push
mov
pop
iret
movsb
inc
lock
enter
stc
mov
xchg
and
sbb
push
les
pop
pop
jmp
or
mov
ljmp
clc
mov
xchg
aas
int3
inc
xorb
lock
mov
mov
jmp
or
lods
scas
nop
mov
mov
jecxz
stc
shlb
shrl
cmpsb
enter
adc
test
cmpsb
pushl
mov
outsb
or
std
jmp
dec
inc
adc
subb
add
pop
incb
xor
mov
lea
inc
mov
inc
aad
aad
outsl
sbb
mov
and
aaa
roll
jmp
jae
cmp
out
xchg
sub
pop
dec
repz
or
cmp
pop
les
pop
fdivrp
in
lds
int3
outsl
into
arpl
add
lods
jo
fs
sbb
xchg
adc
push
xchg
sub
out
xor
adc
lods
jne
push
inc
jns
mov
xchg
dec
inc
jmp
push
fdivl
mov
or
imul
fidivl
push
jmp
jp
cli
jne
iret
jnp
shll
icebp
inc
push
inc
std
mov
in
mov
test
sub
das
addr16
divb
adc
rclb
or
push
scas
push
pop
imul
pop
or
xchg
sti
aaa
mov
xor
cwtl
test
into
or
pop
jecxz
sbb
xchg
lahf
pop
js
js
jp
ss
fwait
les
mov
push
mov
rcrb
add
int
mov
jecxz
and
fildl
pushf
ja
inc
xchg
test
jecxz
fndisi(8087
add
push
rcrb
jp
jg
pop
mov
jge
mov
pop
and
inc
or
jge
xor
enter
jge
sub
fmuls
test
adc
adc
add
lds
mov
mov
stos
inc
arpl
shll
xor
std
dec
iret
outsb
lahf
mov
psraw
fdivrl
aas
ja
repnz
lock
push
mov
sub
leave
xchg
xor
mov
test
movsb
lret
cli
lret
dec
cmp
je
out
sbb
outsl
icebp
in
das
xchg
adcb
dec
adc
cmp
ret
or
scas
subl
clc
aas
std
xchg
leave
cmc
fsubl
ljmp
push
inc
sbb
rcrl
mov
sti
gs
mov
cwtl
rolb
pushf
jno
adc
pop
es
shll
push
loop
add
xchg
cmpb
ss
nopl
xchg
sub
roll
pop
jge
loop
mov
sarl
pop
in
add
lret
push
mov
cmc
fwait
sar
jbe
jle
arpl
push
scas
icebp
pop
or
iret
out
cli
bswap
das
and
sahf
mov
xchg
add
rcll
xlat
daa
jae
test
ret
int3
ja
stos
mov
pop
xor
mov
dec
cmp
loope
mov
iret
dec
lock
hlt
xchg
mov
ret
insl
lret
mov
repz
addr16
pop
add
ret
inc
repz
in
scas
jp
xchg
mov
adc
test
dec
cmp
out
cmpsb
sbb
pop
cmp
enter
cmp
mov
cmc
insl
add
test
ja
dec
cmc
mov
ffreep
xchg
fcompl
xchg
pushl
xchg
push
push
popa
pop
jo
movsl
mov
fucom
mov
pop
bt
inc
enter
mov
loopne
and
or
fwait
push
add
push
sub
push
inc
and
pmuludq
pusha
xor
push
push
out
pop
fstps
xchg
ret
test
bound
sbb
into
jo
pop
sbb
jbe
and
in
lea
push
sbb
jge
filds
jg
fcoml
adc
xchg
addr16
xorb
sbb
test
shll
adcb
or
cld
add
push
cmc
rol
cmp
out
xor
loop
dec
adc
mov
inc
xor
das
xchg
mov
nop
outsb
aas
mov
jno
test
in
add
and
fimull
or
loopne
in
sbb
inc
xchg
inc
addl
faddp
adc
dec
mulb
xor
sti
popa
clc
lock
mov
popf
cld
stos
into
sbb
rorb
data16
fiadds
push
rorb
into
iret
into
sbb
push
out
cmc
adc
jbe
ss
sarl
push
in
or
sbbb
cltd
and
cmp
in
loope
mov
pop
int3
lret
cmp
xlat
incb
sbb
jle
js
cmp
dec
pop
jl
nop
outsl
jp
mov
dec
and
test
cwtl
loope
ja
mov
lret
pop
shlb
push
sub
xchg
cli
decb
fsub
sbbl
jp
mov
pop
push
sub
lds
mov
jno
int3
pop
loope
jnp
jge
cld
stos
ret
sahf
cltd
xor
mov
inc
divl
out
xchg
and
sub
mov
dec
mov
pop
adc
mov
or
cmpsl
shl
lea
subl
aas
lods
ret
jo
pop
cmp
pop
add
arpl
or
and
neg
cld
out
bound
lret
dec
jge
mov
mov
es
cmp
test
push
pop
push
xchg
jle
mov
mov
sti
mov
movups
cld
jge
xchg
mov
sbb
mov
fimull
or
rorl
add
mov
pop
sbb
add
arpl
sub
pusha
adc
adc
xchg
lock
xor
fldl
mov
push
xor
jnp
neg
fcompl
push
mov
int3
pop
mov
js
sahf
arpl
cld
jg
jb
cwtl
and
stos
pop
mov
fnsave
aam
fldcw
pop
rorb
pusha
iret
stc
test
mov
lods
and
pop
insl
addb
mov
rorb
aad
adc
push
outsl
pushf
dec
add
pop
sarb
jns
dec
das
dec
dec
in
lret
lret
shrb
sub
mov
cmpb
sub
dec
push
sub
mov
xchg
cli
jb
sub
inc
je
add
sbb
insl
shlb
jnp
pop
test
lock
mov
xchg
test
in
jno
mov
insb
outsb
add
inc
dec
pop
nop
hlt
out
aad
jg
out
xchg
clc
cmpb
cmp
pop
jp
aaa
xchg
pop
icebp
sahf
aad
fimull
es
arpl
jbe
mov
jl
shll
add
in
sub
scas
sbb
aas
lock
ljmp
push
stos
xchg
dec
sbb
mov
in
mov
addr16
fmul
adc
mov
stos
add
xor
aaa
sbb
mov
push
push
pusha
ljmp
pushf
fs
push
scas
imul
lret
sti
int3
arpl
ret
lds
outsb
xchg
push
lock
adc
testb
inc
fs
loope
jp
lods
jo
and
movsb
adcb
mov
test
jnp
rcr
scas
stc
mov
push
in
ja
incb
fistl
mov
sbb
je
aad
and
pop
out
into
pop
pushf
or
test
and
and
filds
pop
ja
pop
hlt
mov
fwait
dec
mov
push
pushf
icebp
test
or
pop
pop
cli
pusha
add
clc
out
jns
adcl
jg
mov
cmp
pushf
daa
arpl
mov
call
sbb
mov
icebp
js
imul
cltd
adc
adc
mov
loop
cli
in
cltd
mov
out
jb
sbb
enter
movsl
ret
jp
sub
sbb
pushf
sub
fcompl
cmp
cld
sub
adc
test
and
std
cmp
pop
andb
mov
add
out
notb
int
sbb
mov
int3
xchg
sbb
bound
inc
inc
das
cmp
popa
clc
xchg
pop
gs
ds
outsl
and
fists
push
push
insl
addl
xchg
and
mov
mov
mov
mov
outsl
xchg
sbbl
adc
pop
enter
incb
mov
xchg
rol
pushf
pop
inc
and
mov
inc
xchg
pushl
in
pop
push
sbb
jp
push
xchg
ljmp
jne
xor
test
test
aaa
into
aas
add
xchg
lret
aam
mov
pop
sub
xlat
repz
sbb
sbb
cs
mov
xchg
mov
and
push
jne
popa
jge
jg
scas
adc
subb
or
add
ja
inc
jge
in
sbb
dec
dec
and
xlat
push
insl
or
push
stc
inc
jge
lret
jp
jp
xchg
test
mov
pop
mov
and
xchg
data16
in
in
pop
mov
mov
inc
xchg
xor
sbb
cld
push
mov
mov
or
cmp
nop
and
jmp
or
push
lret
mov
jmp
outsl
out
rcll
fdivl
cmp
pop
popf
push
jne
je
aad
and
aam
das
push
insb
sarb
dec
or
divl
leave
jge
sub
icebp
sub
movsb
adc
mov
push
inc
shl
movsb
dec
loopne
sbb
test
jle
enter
mov
mov
mov
aad
xchg
inc
adc
mov
out
dec
leave
mov
add
data16
xchg
pop
inc
jl
jbe
sahf
xor
cmpb
loope
aas
mov
xchg
sub
pop
xor
cmp
inc
clc
dec
push
push
fisubl
push
int
andl
popa
js
xchg
icebp
lods
inc
das
aad
cmpsl
push
push
xchg
jb
push
mov
xor
stos
mov
in
divl
aaa
lods
and
hlt
push
addr16
lret
cli
arpl
andl
add
xor
sahf
cli
sbb
or
push
mov
jns
xlat
lahf
mov
ret
xor
insb
mov
push
imul
sahf
pop
sub
adcb
push
cmpsl
out
pop
fisubs
ret
mov
popa
out
pop
dec
andb
dec
sub
jge
jb
sbb
dec
add
mov
imul
icebp
mov
xchg
jb
mov
mov
js
int
outsl
decl
mov
push
push
mov
sarb
mov
cwtl
pop
mov
and
push
movsb
push
or
push
test
mov
js
jp
pop
mov
fwait
test
xor
pop
push
aad
xchg
xchg
cmp
dec
sub
scas
push
mov
adc
push
mov
cmpsb
cmp
sbb
adc
jbe
add
and
movsl
jns
cmpsl
sbb
sbb
inc
rorb
add
bound
pushf
test
push
jl
xchg
pop
push
sbb
push
sbb
fists
clc
iret
fsubs
push
xorb
lret
push
xchg
insb
les
lds
push
mov
or
inc
cld
out
pop
in
stos
inc
lahf
fstps
mov
cmp
inc
jp
xchg
jb
adc
inc
sbb
or
sbb
pop
adc
push
repnz
cli
adc
add
adc
data16
test
push
mov
adc
push
mov
dec
adc
sbb
xor
imul
cmc
jl
movsb
inc
inc
popa
and
dec
cs
lahf
and
cmp
pop
notb
mov
push
ja
imul
add
movsb
sub
mov
push
push
pop
jbe
jp
shll
testb
les
rclb
mov
jns
test
sbb
sub
xchg
lret
mov
mov
push
lcall
jg
xchg
popa
mov
push
sbb
xchg
mov
push
xorl
dec
mov
xchg
add
fcmovnu
imul
pop
jge
cmc
jae
sti
idivl
in
xchg
out
xchg
dec
mov
jg
push
push
lret
out
fwait
lret
in
scas
cmp
repz
pop
xor
ds
outsb
cmp
daa
loop
in
test
add
mov
ljmp
mov
add
inc
xchg
pop
xchg
movl
inc
fimull
jge
frstor
out
and
ret
repz
rcrb
lcall
ja
lods
adc
out
adc
cmp
xor
shlb
cmpsb
in
jae
lock
pushf
add
inc
and
or
cld
scas
fisubl
popl
and
inc
mov
xchg
int
fidivl
jl
es
stc
je
pop
scas
mov
out
jmp
pop
push
jecxz
push
les
jp
out
test
mov
inc
lahf
xor
add
mov
pop
mull
xor
or
outsl
dec
int
pop
mov
sub
call
jae
jmp
dec
out
stc
jnp
pop
ja
xorl
mov
stos
and
mov
inc
data16
cs
imul
divl
sti
rcll
call
mov
imul
js
xor
mov
mov
movb
cli
pop
stos
xchg
mov
stos
mov
dec
and
je
nop
jmp
mov
or
cmpl
das
cmp
in
cmp
loopne
push
dec
imul
cs
test
mov
or
mov
sbb
aam
jl
test
sbb
sarb
mov
testl
outsb
pop
or
mov
mov
int3
adc
ja
or
in
inc
sub
mov
cmc
aaa
inc
xlat
imul
add
out
jp
mov
xor
mov
or
out
mov
pop
lcall
hlt
mov
or
push
fwait
mov
int3
ja
stos
mov
iret
pushw
mov
inc
push
cmp
xchg
aas
ss
cwtl
loope
loopne
jns
jo
dec
repnz
out
scas
inc
xchg
in
push
or
inc
notb
scas
inc
and
push
push
jmp
sub
xchg
jb
adc
and
std
addr16
pop
sahf
mov
xor
push
lea
push
ljmp
call
or
insl
add
jecxz
dec
orb
out
adc
out
xlat
js
mov
clc
xor
aad
mov
lret
sbb
insb
lret
cmp
int3
add
sub
adc
add
sbb
fsubrs
addr16
mov
cmp
mov
addb
ja
in
mov
pushf
add
js
sbb
scas
in
subb
loope
inc
xorl
dec
pop
or
or
dec
es
jg
sarl
push
or
xor
add
xor
dec
push
xlat
mov
mov
out
movsb
es
adc
push
push
iret
outsb
movsb
imul
push
rorl
es
inc
pop
fnstenv
and
int
mov
cli
mov
pop
in
aas
add
sbb
push
sub
shll
jmp
outsl
fsts
dec
lea
fisubl
fnstsw
push
mov
mov
orl
sbb
add
loope
movsb
iret
ss
sub
mov
cmc
adc
fmull
add
stos
pusha
bound
cwtl
xchg
mov
add
inc
adc
xchg
fadds
fildl
xchg
or
mov
add
mov
adc
and
jb
movaps
gs
pop
mov
ret
nop
das
sub
mov
lahf
in
ds
push
push
inc
mov
sbb
sahf
bound
mov
lds
jno
dec
xchg
mov
out
mov
push
in
faddl
testb
xchg
or
jg
or
xchg
nop
test
mov
out
out
sbb
mov
aaa
dec
stos
mov
push
and
jns
call
inc
push
loopne
sbb
add
fdivrl
cwtl
jg
jb
out
xchg
pop
insb
popa
out
shr
sub
adcl
jp
mov
outsb
add
out
inc
cmp
and
addr16
xor
push
add
dec
ret
shl
sub
pop
je
fucomip
adcl
ljmp
call
ret
pop
sarb
sub
jle
movsl
imul
das
push
adc
aad
xor
push
add
mov
pop
stos
inc
sti
xor
add
add
xchg
rcrl
dec
mov
in
gs
push
cmc
mov
and
push
adc
rcll
adc
sar
shlb
dec
lahf
pop
pop
in
cmp
adc
popf
shrb
mov
dec
pusha
icebp
cmp
popa
insl
adc
inc
mov
jg
lock
lock
and
dec
mov
pop
ret
lods
cld
mov
xchg
in
adc
mov
sbb
add
shll
mov
int3
sub
lock
push
push
mov
adc
loope
notl
add
repz
jne
fisubl
insb
mov
mov
xor
popf
xor
pop
icebp
mov
sub
aas
cli
aaa
adc
mov
in
inc
xchg
ljmp
push
push
loopne
sub
fbstp
mov
sti
lea
decb
cmp
jbe
mov
cltd
dec
std
enter
lret
push
lds
mov
incl
fstl
lret
out
push
rorb
lock
inc
shlb
sbbl
add
popf
in
test
sbb
adcb
loopne
sub
or
std
mov
mov
xchg
outsb
push
cli
ret
shrl
add
sub
repz
lea
sti
add
out
xchg
sub
fidivs
xor
inc
dec
fldl
pop
fwait
dec
je
jb
stc
lods
xchg
xor
addr16
inc
and
fbstp
sub
arpl
lea
push
pop
out
mov
rep
movsl
and
or
and
and
or
push
icebp
jp
mov
stc
inc
mov
sub
adc
mov
repnz
and
push
mov
mov
ret
hlt
js
jg
icebp
fsts
sub
ljmp
push
and
pop
lcall
fbstp
mov
dec
xchg
lret
pusha
add
sbb
xchg
outsb
xorl
and
inc
adc
inc
jmp
and
shrb
inc
imul
hlt
sub
iret
in
or
adc
mov
pop
fnstenv
push
testl
nop
cmc
xchg
dec
mov
dec
dec
in
add
subb
push
sub
push
fistpll
shll
fwait
data16
addr16
mov
leave
fldcw
mov
ret
jp
ss
in
inc
xchg
out
pop
xadd
and
mov
dec
imul
ljmp
notb
pop
pop
cmc
mov
mov
adc
add
ljmp
dec
or
loop
push
fcmovbe
sbb
fsubrs
xchg
mov
push
xor
pop
lock
mov
lret
mov
mov
fnsave
xor
sub
push
stos
mov
fidivrs
xor
push
inc
add
rcll
outsl
testl
sbb
inc
nop
loop
loopne
lcall
dec
jp
pushf
xchg
mov
dec
fcomp
push
aas
push
dec
sub
popa
arpl
push
jae
mov
sbb
mov
add
mov
je
sub
es
or
push
in
daa
xchg
lcall
sub
pushf
aas
outsb
lret
ret
scas
mov
shrb
leave
sub
enter
dec
lods
or
xlat
in
daa
xchg
add
mov
xor
dec
mov
mov
push
sahf
sbb
std
jne
jae
popf
dec
mov
in
clc
enter
in
addr16
sarl
stos
or
mov
fcompl
mov
sarl
add
insl
add
cmc
inc
mov
mov
push
inc
data16
push
mov
shr
std
popf
stc
xor
mov
inc
insl
rcrl
pop
cmp
aam
iret
inc
nop
dec
in
or
insb
add
push
push
scas
jo
mov
mov
lret
dec
out
jbe
call
adc
fisubrl
xlat
push
sbb
adc
jae
add
out
mov
out
push
cmp
pop
pop
inc
sub
mov
cmpsb
mov
add
pop
xor
mov
roll
inc
jbe
shl
push
push
lods
push
push
cmp
and
jmp
insl
popa
adc
mov
add
push
jnp
scas
lods
ja
add
int3
mov
sbb
lock
dec
sub
mov
add
push
fimuls
scas
cmp
jbe
hlt
ds
sbb
loop
and
cltd
push
mov
xchg
jmp
clc
jae
xchg
mov
dec
out
cli
dec
fnstcw
iret
jb
add
cltd
dec
sbbb
std
mov
movsb
sub
fdivrs
dec
adc
add
jg
sbb
inc
ret
rolb
popf
add
mov
iret
xchg
pop
pop
sub
scas
stc
test
rorb
paddq
inc
mov
in
cmp
aad
sub
mov
outsl
xor
xchg
daa
xchg
sub
push
add
testb
sub
stc
inc
cwtl
mov
test
loop
sarb
push
fmull
js
push
sbb
outsb
and
rcll
cmc
cmp
push
insb
sti
or
mov
fstl
addl
leave
arpl
rorl
xchg
movsl
push
call
ret
mov
xchg
leave
mov
movsl
cmp
cmp
test
sub
or
mov
rcrl
push
dec
xchg
arpl
pop
mov
cmova
jp
and
ljmp
jle
std
sub
or
or
in
adc
in
subb
adcb
pop
and
stc
iret
inc
jbe
std
push
stc
cmp
repnz
subl
push
mov
or
fdiv
dec
xor
push
jae
imul
fisubrl
push
add
test
aad
movl
in
shrb
push
xchg
sbb
jmp
and
cli
lret
fstpt
idiv
mov
imul
pop
lret
test
push
dec
cmp
lret
pop
aaa
loopne
inc
mov
out
add
xchg
xor
in
cmpsb
sbb
ret
mov
adc
jnp
lds
fwait
jae
mov
cli
push
jnp
and
mov
push
dec
std
imul
mov
std
cltd
cmp
in
xor
mov
ljmp
xchg
inc
inc
sub
inc
enter
inc
lods
push
insl
aam
pop
cmp
dec
popa
lcall
add
or
fisttpll
fucomip
dec
lods
xchg
pop
jmp
ss
mov
dec
jge
hlt
inc
stos
mov
adc
lahf
jae
out
push
faddl
xor
pop
and
cwtl
sub
mov
push
lcall
sbb
out
mov
imul
aad
jge
inc
jne
add
dec
and
imul
inc
call
jb
lret
push
adc
cmp
inc
loopne
fisubs
adc
xor
cli
outsb
xchg
cmp
mov
push
lcall
fldenv
leave
and
arpl
add
and
jo
arpl
pop
rcrl
in
jno
inc
fcoml
daa
fcom
iret
add
pop
cmc
and
xor
test
inc
outsb
sub
mov
ljmp
test
adc
fsubl
jecxz
xchg
cmpsl
pop
shll
mov
cld
test
mov
test
sbb
cmc
xchg
gs
xchg
xchg
mov
add
mov
mov
push
mov
out
popa
stc
lahf
mov
mov
aas
push
mov
int3
push
bnd
inc
inc
xchg
push
mov
adc
mov
sarb
adc
inc
test
test
xor
lock
cmpsb
fcoml
push
bound
in
push
ja
push
jmp
mov
dec
pop
dec
out
inc
xlat
mov
repnz
xor
hlt
mov
xlat
add
out
pop
out
sbbb
push
les
add
mov
idivb
sbb
cmp
ja
ja
xchg
cs
scas
cmp
rorl
hlt
mov
fs
outsb
and
cltd
and
cld
data16
mov
dec
pop
xor
sbb
xlat
aas
mov
cs
or
push
jae
call
xlat
pop
addr16
sarl
repz
push
hlt
call
out
mov
cld
pop
jae
mov
jmp
cmp
divb
in
sbb
jbe
sbb
in
jae
into
mov
sti
mov
insb
jno
loope
out
repz
les
mov
lahf
in
mov
out
jmp
data16
iret
pop
icebp
lahf
mov
notl
daa
mov
sbb
or
adc
push
orb
mov
into
clc
aam
mov
mov
and
stc
data16
fadds
sti
inc
push
and
inc
andl
add
ds
jnp
sub
into
adc
mov
cmp
fiaddl
test
jle
mov
fildl
fnstsw
jle
fiadds
cmp
in
or
cmp
add
add
decl
xor
repz
mov
lret
je
dec
out
dec
cmp
fwait
pop
cmp
scas
pop
call
add
out
push
es
negl
imul
insl
loop
popa
xchg
in
jae
out
adc
mov
sub
mov
rcl
fsts
popw
lret
stos
mov
adc
inc
pop
mov
into
jl
mov
inc
sbb
lcall
lcall
adc
es
arpl
gs
mov
into
ss
push
in
xor
dec
inc
adc
or
mov
xchg
sub
fnsave
movsl
sub
aas
cli
push
inc
mov
pop
push
div
mov
pop
mov
cli
shll
divl
cmp
or
fucom
dec
mov
lods
push
roll
mov
subb
lea
mov
mov
lds
mov
fisttps
sarb
cwtl
das
xchg
lahf
inc
in
cmc
push
std
test
and
xchg
ret
or
cmp
adc
sbbl
test
push
push
inc
adc
jg
lods
push
mov
aaa
in
daa
mov
and
mov
call
inc
daa
xchg
cmc
lret
push
dec
push
jno
iret
es
or
sub
and
mov
or
mov
adc
nop
jmp
repz
pop
mov
add
cmpsb
pop
gs
scas
inc
inc
push
out
sub
ficomps
aad
jl
sub
mov
add
cmp
scas
mov
push
xchg
cli
add
in
and
jge
in
mov
mov
cmp
dec
add
xor
lock
jae
fwait
sti
mov
fisubrs
xchg
xchg
xor
subb
pop
addr16
adc
push
mov
fwait
es
test
mov
insb
popa
xor
in
movsl
sarl
mov
or
push
fcomps
push
repz
loopne
test
icebp
inc
out
negb
mov
dec
mov
test
daa
inc
inc
pop
test
sub
adc
xor
sahf
in
sbb
scas
sbbl
loop
jne
jl
aas
dec
mov
stc
out
xchg
push
fucompp
mov
sbb
and
imul
jecxz
fwait
mov
fdivrl
lods
js
push
pop
fnsave
xor
out
arpl
lahf
es
jg
iret
cs
ss
or
bnd
inc
push
pusha
lods
push
sbb
andb
fstps
sbb
adc
ja
inc
sub
mov
sub
inc
or
ret
fildl
adc
clc
jo
and
xchg
jbe
fdivrs
xchg
sbb
mov
push
adc
popf
movsb
xor
dec
insb
jl
sahf
imul
call
jle
rolb
ja
sub
sbb
ja
cltd
dec
rcrb
imul
sbb
mov
pop
ja
jl
lock
in
jns
addr16
push
cmp
ja
stc
fdivs
jg
jbe
cmp
push
in
in
rorb
pop
lret
gs
scas
mov
inc
ss
je
cmp
mov
sbb
xorb
imul
push
pop
aaa
adc
int3
imul
adc
push
ja
dec
mov
add
mov
xlat
andb
std
jge
xor
arpl
call
pop
sub
std
push
mov
cmp
pop
aas
or
repz
mov
mov
test
shrb
js
jb
in
pop
stc
inc
mov
sbb
fidivl
cmpl
imul
fisubs
orb
lds
sbb
add
xchg
xchg
ret
sbb
and
jns
subb
sub
movsl
pop
in
sbb
rcl
imul
lea
sub
fwait
mov
jns
xchg
cmp
subl
rorl
xchg
andl
dec
stc
fsubrs
shl
mov
cmp
popf
scas
repz
popl
xchg
mov
cmpsl
ret
imul
fsubs
inc
ds
or
data16
ljmp
pshufw
lods
cmp
jp
inc
fdivl
stc
cmp
mov
insb
js
xchg
lahf
sub
rcrl
xor
pop
nop
jnp
mov
and
xor
add
push
scas
std
xchg
fs
cmp
inc
sub
adc
ret
jb
jnp
ret
test
mov
movsb
mov
jmp
mov
cli
cmp
adc
mov
popw
stos
pop
sub
push
ss
imul
lret
mov
shrl
movsl
pop
insb
jnp
les
sbb
sbb
mov
sub
aad
dec
insb
mov
adc
inc
inc
mov
insl
sub
imul
stos
push
jl
nop
jmp
mov
btc
in
push
dec
movsb
stos
cmp
jmp
dec
dec
mov
aam
ret
push
ret
lods
iret
mov
sub
sahf
jb
cmp
roll
scas
cmc
js
jl
mov
mov
rol
xchg
push
jecxz
dec
loop
mov
arpl
aam
pop
push
pop
xchg
ljmp
in
daa
push
dec
mov
xchg
nop
mov
gs
pop
pop
add
cmp
jne
es
adc
aad
sbb
pop
xchg
testl
adc
jns
hlt
movsb
aam
sbb
pop
mov
push
in
xor
iret
fwait
and
popf
test
jmp
xor
stc
xchg
sub
cltd
xor
dec
loope
push
jl
xor
dec
in
lods
in
push
outsl
add
xchg
sbbl
adc
lea
faddl
push
stos
fldenv
ds
scas
xchg
xor
mov
les
dec
push
jle
mov
outsl
xchg
add
repnz
enter
mov
lret
cmp
imul
setbe
out
pusha
mov
add
xchg
in
pop
mov
pushf
sbb
out
pushf
sbb
lret
pop
insl
jmp
mov
lea
sbb
out
stc
pop
xor
nop
mov
loope
and
xchg
dec
test
outsb
add
or
xorl
or
in
mov
adc
ss
in
out
mov
loopne
dec
pop
cmp
fdivrs
cmp
fadds
loopne
push
insl
or
xchg
jge
fimull
sarb
jg
mov
mov
ljmp
mov
fwait
repnz
leave
and
inc
adc
push
and
lods
inc
jecxz
cwtl
test
iret
or
xchg
sub
xor
jbe
xchg
test
sti
sub
jne
jbe
and
jb
hlt
inc
mov
aas
mov
mov
lods
jle
aas
push
dec
mov
add
adc
ret
dec
sahf
inc
sbb
sub
jecxz
rol
mov
stc
dec
popa
ficomps
mov
inc
out
daa
sbb
sbb
mov
dec
add
and
dec
xor
pop
imul
mov
data16
jae
lret
js
xchg
jecxz
dec
sbb
cmp
cmp
fisubrl
dec
aam
jp
repz
ja
lock
cli
push
adc
jg
shll
dec
movsb
call
call
or
stc
adcl
test
cmp
jne
shl
and
out
imul
icebp
mov
push
jg
jp
add
cmp
cmp
and
cmp
sti
jns
sub
dec
mov
rcrb
inc
sbb
out
ret
bound
sub
iret
dec
inc
enter
gs
sub
or
sbb
xor
jl
enter
sbb
adcb
pusha
push
push
jbe
inc
or
xchg
es
out
stc
adc
or
shr
xchg
xchg
mov
mov
dec
nop
fmull
sbb
lret
xor
sub
les
js
push
push
lret
fnsave
jb
jnp
popa
enter
push
push
int3
rorl
in
fbld
jae
sti
subb
stos
inc
pop
pop
inc
cli
xchg
pop
cld
pop
sbb
lea
jecxz
dec
out
shlb
lock
cmp
pushf
inc
push
mov
aas
xchg
and
pop
cmpsl
pop
loop
lcall
sbb
ds
jb
sahf
scas
jb
xor
in
js
out
mov
nop
push
ss
scas
add
xchg
dec
fbstp
jae
add
mov
in
das
mov
and
push
push
je
push
adc
and
adc
mov
lods
sbb
into
je
pop
fwait
push
inc
sub
xchg
fldl
and
std
dec
sub
push
mov
das
pop
dec
and
sub
lahf
scas
mov
mov
ret
mov
notl
push
mov
mov
cmp
js
into
popa
test
aad
xchg
fwait
repz
aam
test
or
pop
jg
ficoml
outsl
jnp
insl
ja
adc
inc
pop
add
and
jge
or
test
jnp
pop
mov
test
stc
outsl
loop
mov
ret
and
jge
mov
push
dec
cmp
scas
rcl
fucomip
cmp
xchg
cmp
stos
cmp
scas
dec
pop
xchg
mov
iret
jns
mov
or
repz
mov
sahf
dec
js
jne
sub
and
es
mov
add
push
test
test
inc
add
pop
pop
movsb
cmpl
adc
xchg
jle
inc
push
jmp
lea
push
out
aam
jmp
jb
repnz
push
mov
mov
fsubrs
into
add
push
and
nop
stc
shl
and
pusha
int3
or
adc
pop
dec
int3
arpl
push
in
sbb
stos
adc
mov
out
int3
pop
rorb
jno
mov
add
sbb
lods
and
out
out
daa
xor
int
inc
jbe
subb
and
dec
dec
fsubl
pop
das
mov
fdivl
aad
sets
insb
dec
and
ficomps
mov
out
sbb
les
out
mov
cmpsb
bound
inc
push
pop
call
and
push
loopne
fisubl
testl
push
push
cwtl
ss
sti
test
mov
iret
les
ficomps
stos
xchg
inc
ret
jnp
movsb
dec
push
sbb
pusha
dec
xor
mov
inc
xorl
loope
clc
fwait
les
in
out
mov
xchg
pop
mov
call
jecxz
xchg
adc
std
push
test
dec
mov
iret
xchg
sub
dec
sahf
and
cltd
cmc
shlb
aaa
or
pop
jl
push
fs
stos
aam
ja
jne
loop
xor
xchg
sub
pop
mov
fisubs
pop
mov
jp
mov
or
dec
xchg
pusha
dec
dec
rol
repz
and
add
dec
mov
inc
fistl
int
jl
daa
arpl
lock
add
lahf
pop
lcall
fnsave
lret
mov
cld
rcl
sub
repnz
addb
mov
xchg
out
mov
add
cwtl
ds
outsl
stc
sbb
repnz
ja
pop
lock
sub
mov
jp
jae
lods
fwait
rol
dec
add
nopl
adc
and
push
mov
jp
mov
repz
in
mov
insb
mov
nop
inc
pop
ret
xchg
fs
and
pop
xchg
push
push
mov
jno
js
mov
push
mov
add
repz
push
add
gs
and
das
adc
shlb
sub
lods
mov
out
lods
mov
in
xor
in
sti
push
mov
outsb
add
or
mov
pop
scas
and
sbb
pop
out
inc
std
lds
bound
dec
jp
sub
and
pop
add
insl
arpl
jecxz
mov
and
sti
jbe
and
adc
mov
sub
add
sahf
mov
jnp
or
mov
and
setne
mov
into
mov
outsb
mov
loopne
insl
hlt
push
add
out
loopne
cmpsb
or
lret
mov
fadds
into
xchg
inc
fwait
mov
pop
and
sbb
rep
adc
mov
sbb
cmp
addr16
rcrl
mov
mov
mov
cmp
dec
lret
jg
mov
jno
sub
and
mov
dec
aas
adc
aam
add
xlat
xchg
fs
jmp
shll
ss
dec
mov
xchg
shlb
test
stc
mov
pop
out
jo
pop
vpaddd
sbb
jle
push
push
stos
push
jmp
rcrb
jne
xlat
loopne
ret
int3
cmpsl
orb
jle
nop
insb
pop
lods
mov
dec
push
mov
xor
pop
gs
ljmp
cs
add
adc
cld
mov
xor
mov
xor
les
xor
mov
or
in
sbb
jb
mov
mov
push
add
inc
mov
adc
and
fsubrs
int3
js
cmp
jmp
mov
xchg
or
fwait
pop
xor
cld
mov
ljmp
and
dec
mov
loopne
xlat
mov
sbbl
out
ja
sub
xor
js
push
mov
enter
mov
push
jmp
fcomps
mov
mov
lods
jecxz
mov
fstp
imul
pop
jmp
inc
cmp
pop
cmp
aas
cmpsb
addr16
jae
int3
enter
sub
insl
xor
out
mov
shl
dec
mov
adc
sbb
inc
pusha
or
pop
xor
or
test
sbb
ret
mov
pop
lea
adc
jb
mov
add
stos
xchg
repz
mov
jmp
les
lahf
hlt
sub
dec
out
test
outsb
add
jle
xorl
cmp
lret
shlb
dec
outsb
addr16
les
call
or
xor
movsl
or
out
scas
inc
xchg
imul
jg
loopne
jnp
or
adc
icebp
mov
cmp
sub
dec
rcl
jns
test
shll
out
nop
adc
nop
leave
xchg
add
cltd
jno
cwtl
or
dec
mov
aas
xchg
push
fimuls
push
in
ja
or
sub
mov
iret
adc
inc
pop
xchg
jbe
popa
mov
or
sar
jae
fcompl
mov
cmp
pop
lea
pop
stc
push
mov
cmp
notb
int
rcrl
stos
not
iret
xlat
mov
add
sarb
and
sub
and
push
dec
push
mov
int3
sbbl
das
pop
or
in
ret
nop
xchg
cmpsl
mov
movsl
pop
or
pop
ficoml
bound
add
add
pushf
scas
mov
jmp
cwtl
sbb
adc
dec
aad
addr16
frstor
dec
arpl
sbb
leave
jg
push
das
jmp
pop
leave
js
mov
in
or
mov
outsl
jno
int
rorb
icebp
pushf
aad
or
stos
sbb
adc
imul
pop
ds
std
jl
cmp
add
mov
test
jl
mov
mov
adc
adc
xchg
mov
test
sbb
fxch
gs
mov
aam
out
push
icebp
xor
xchg
add
mov
mov
lods
mov
mov
xor
fbstp
dec
or
pop
mov
aas
iret
mov
cs
xor
pop
or
add
insb
push
andl
xchg
push
inc
fisubrs
ja
mov
push
xchg
add
fdivr
xchg
lret
sbb
loope
mov
out
cwtl
pusha
pop
cmp
xchg
inc
and
mov
fnsave
jo
or
in
aas
inc
mov
xchg
loop
add
xor
adc
mov
call
imul
test
pusha
ss
movsb
in
lds
aam
xor
pop
sub
inc
inc
aas
test
fisubl
add
sbb
call
sub
popf
mov
sbb
mov
lcall
aas
and
pop
sub
jbe
fisubs
adc
inc
je
daa
popa
int
addr16
pop
adc
lods
mov
sbb
mov
movsb
das
clc
push
push
cwtl
pop
xor
xchg
sub
dec
xor
test
shll
gs
mov
inc
sbb
iret
fcmovnu
push
arpl
call
sbb
je
les
outsb
sbb
xchg
sub
ret
mov
hlt
lods
mov
dec
jnp
adc
sub
or
mov
or
push
ja
pop
pop
repnz
lea
ret
or
push
or
sub
sub
xchg
mov
addr16
cwtl
dec
mov
hlt
inc
ljmp
loope
out
xor
fstp
mov
xor
int3
popa
dec
mov
xor
jmp
jecxz
out
hlt
out
cs
add
xchg
adc
pop
xorb
cmpsl
push
jmp
mov
jl
leave
ss
add
add
adc
jno
jg
aaa
jbe
iret
mov
adc
xchg
ficoms
hlt
dec
sub
pop
sub
loopne
sahf
mov
mov
dec
push
push
test
lods
or
mov
jecxz
push
push
notb
add
das
dec
and
push
mov
dec
lret
inc
or
xchg
inc
or
mov
jb
and
jl
sbb
jbe
push
mov
sub
psrad
sti
pop
cmp
xchg
dec
add
adc
xchg
rcrl
dec
dec
loopne
hlt
outsb
nop
daa
pop
or
jp
push
mov
mov
fidivs
int3
add
xchg
pop
and
call
shlb
jb
push
bound
xchg
xor
inc
dec
mov
ficoms
arpl
sub
ljmp
fldenv
sbbl
push
jne
aaa
aas
shll
imul
repnz
clc
or
jnp
bound
add
and
or
std
or
outsb
and
shl
movsl
faddl
jne
xchg
adc
test
push
fldenv
ljmp
je
idivb
jecxz
sti
jbe
gs
ss
mov
mov
ror
das
test
call
xor
inc
fdivs
xlat
lock
pusha
lret
jge
jbe
or
or
in
mov
cs
mov
push
or
stos
sub
test
add
sbb
jecxz
mov
pop
shll
or
clc
mov
sub
xor
dec
cltd
dec
cmp
sahf
and
pop
mov
inc
fadd
and
mov
push
and
nop
fldt
sbb
test
push
hlt
mov
fildl
or
or
mov
cwtl
mov
lea
andb
push
or
vmptrld
movsl
mov
cld
push
xor
sub
pop
lock
and
adc
clc
clc
insl
sub
cmp
stc
ljmp
add
mov
pushf
addb
dec
jae
xor
not
dec
add
mov
cmp
pushf
lret
mov
stos
sub
sbb
jne
lahf
lahf
dec
push
mov
add
scas
fbld
mov
lea
or
popf
or
fnsave
int3
repnz
arpl
rcl
xchg
sub
pop
xlat
aas
pop
repz
pop
dec
loop
call
test
mov
mov
inc
or
shl
xchg
rolb
sub
aam
pop
push
dec
insl
sbb
je
cmp
sbbl
inc
push
add
mov
adc
and
sbb
fiaddl
jo
mov
lret
xchg
lods
jg
insl
mov
fwait
loop
icebp
in
out
cmp
fsubs
add
fiaddl
es
jg
pop
arpl
jmp
aaa
dec
mov
push
cmp
hlt
imul
or
les
inc
es
frstor
xchg
push
aaa
int
pop
out
subb
add
out
stc
push
pop
inc
fsubrp
xchg
hlt
dec
dec
or
adc
jge
in
push
std
pop
stos
movsl
sbb
mov
inc
out
adc
fidivrs
add
jge
xor
rolb
int3
add
insb
push
lock
in
std
jmp
flds
push
sarl
mov
in
sti
mov
int3
mov
jns
jbe
jl
push
mov
mov
rolb
scas
adc
aaa
push
and
sbb
pop
push
imul
popa
leave
pusha
xchg
xor
dec
insb
rclb
fsubrl
add
or
nop
and
movsl
fwait
push
mov
xor
push
adc
sbbl
fists
hlt
pop
or
mov
push
stos
popf
pop
pop
xchg
lahf
mov
rolb
inc
push
push
inc
fdivl
push
daa
clc
or
fwait
aad
mov
push
sbb
pop
loope
jge
cmp
cmpsl
mov
xchg
out
push
repz
inc
sbb
js
mov
push
mov
icebp
pop
mov
jg
faddl
sbb
mov
pusha
mov
nopl
incl
negl
mov
test
sti
negl
mov
or
pop
fs
pop
add
add
mov
ja
sub
rolb
dec
pusha
mov
fimuls
shl
sub
and
ret
ljmp
dec
add
cmp
in
shll
lods
es
push
data16
andl
xor
or
jle
cmp
mov
cmp
paddq
stos
inc
pop
or
mov
sub
loopne
push
lcall
push
sub
out
orl
je
cmpsl
movsl
aaa
sbb
and
jle
jae
mov
pop
sbb
cmp
sub
and
jb
cmp
ret
movsb
pop
and
add
popa
push
sbb
mov
jmp
ret
repz
sarb
shll
les
inc
or
ljmp
mov
mov
leave
xor
mov
ss
lahf
push
pop
mov
cmp
jecxz
test
adc
int
cmp
adc
mov
sarl
sti
xchg
jnp
sbb
xchg
pushf
aaa
into
int
xor
cmp
cmp
stos
cmpsb
popf
sbb
mov
xor
je
inc
sub
fcom
mov
ja
sub
jecxz
in
fsubs
lcall
or
mov
dec
lea
repnz
xchg
call
and
dec
and
dec
cld
adc
lcall
shl
test
into
scas
insb
dec
dec
lds
add
scas
shll
insb
jb
movsb
dec
lcall
jns
sub
push
iret
xchg
sbb
mov
cmpl
fldt
adc
cmp
add
jg
rcr
pushf
js
cmc
sub
test
add
cld
dec
pop
test
push
aad
xor
cmpsl
dec
ds
insb
inc
lods
add
adc
dec
push
lcall
pop
or
and
xor
aam
sbbb
xor
fildll
mov
jbe
lcall
in
inc
daa
sub
ret
xor
nop
sub
adc
push
mov
prefetchnta
jns
adc
or
lods
int3
jmp
jb
addr16
or
call
and
js
test
sti
out
add
pop
out
jne
pusha
cld
pop
pop
sbb
and
repz
lock
adc
mov
sbb
adc
add
ficomps
inc
and
lcall
or
xor
adc
pop
push
jge
faddp
xor
fwait
sbb
xchg
mov
enter
jb
fisubl
insl
mov
sub
fmull
inc
xlat
test
add
jl
popf
sub
mov
mov
aad
jns
pusha
popf
lods
xchg
ret
stos
lcall
jg
xor
adc
dec
cltd
push
xchg
bound
mov
and
cwtl
divl
nop
mov
cltd
fimull
cwtl
sub
xchg
insb
scas
outsb
insl
stos
fmul
and
jb
leave
jbe
xor
ljmp
pop
fwait
ret
jb
jl
hlt
insl
test
cs
mov
repnz
imul
cmp
imul
mov
sarb
push
sbb
jae
scas
movsb
outsl
test
pop
test
pop
jge
or
cli
movsb
imul
pop
jno
inc
fwait
push
or
cld
rolb
jae
movsl
cwtl
bnd
or
js
pop
jb
sbb
inc
pop
push
mov
outsl
cmpsb
mov
mov
inc
pop
insl
xchg
or
xchg
scas
jne
in
pop
scas
test
pop
lds
add
lcall
and
daa
jp
mov
lcall
loope
aaa
out
lret
gs
push
and
arpl
inc
lods
jge
push
sbbb
lds
inc
inc
sbb
cmp
mov
add
mov
jne
ret
mov
xchg
push
mov
add
ljmp
stos
cmp
push
push
mov
or
mov
sub
pushf
push
je
pushf
push
push
mov
mov
sub
cmpb
in
mov
les
idiv
lock
in
sbb
outsl
jle
lret
xchg
push
iret
orb
mov
push
sub
stc
add
inc
inc
repz
adc
jns,pn
pushf
jl
adc
lods
fcomi
jns
sahf
cmp
adc
push
repz
mov
pop
and
mov
movsl
sti
sbb
loope
xor
add
add
sub
cli
pop
xor
xchg
fdivr
inc
xor
xchg
push
out
sub
sub
out
adc
jae
popf
movsb
out
push
and
xchg
inc
and
fwait
pop
mov
jno
push
data16
inc
jecxz
or
jbe
adc
rolb
cmpsb
lea
push
cli
xchg
scas
iret
and
je
ds
ljmp
mov
jne
mov
std
es
xchg
and
enter
pop
xor
fsubrl
or
pop
xchg
or
mov
jge
pop
sbb
xchg
add
mov
push
cld
lods
xlat
loopne
repz
and
mov
js
call
iret
or
clc
test
add
test
lcall
cwtl
push
std
add
mov
in
pop
ret
addb
add
outsl
sbb
sti
adc
shll
icebp
and
into
test
aaa
and
inc
pop
in
mov
shrb
pop
mov
mov
mov
mov
mov
js
lret
jbe
mov
sbb
jmp
sbb
jg
or
adc
push
gs
adc
test
cmpl
jo
inc
cmpsb
pop
es
lret
or
ljmp
es
cltd
rcll
out
push
xor
sbb
ret
popa
mov
and
jns
add
sub
ds
push
repz
cmp
addr16
push
add
push
jl
fs
outsb
movsb
mov
dec
pusha
or
in
xchg
mov
arpl
pop
mov
cltd
outsb
lret
mov
xchg
jg
xchg
push
cmc
ss
hlt
sub
xchg
sub
data16
rorl
lcall
push
inc
je
iret
pop
sahf
mov
cmp
add
scas
jmp
push
add
iret
repnz
lret
dec
aas
xchg
cmp
dec
pusha
pop
int
inc
sbb
jg
or
inc
insb
iret
shll
push
sbb
imul
lods
mov
lock
out
rcll
xchg
das
test
mov
pop
mov
sbb
mov
lcall
jne
rolb
fidivl
int3
xchg
inc
shl
int3
fidivrs
ds
sbb
cmp
jp
pop
arpl
and
jnp
sbb
push
addl
add
dec
add
xchg
in
test
push
push
int
push
sbb
xor
xor
daa
mov
xchg
xor
adc
ja
pop
dec
mov
cmp
or
loopne
mov
int3
add
ret
outsl
hlt
sbb
stos
dec
addr16
dec
and
mov
data16
pop
iret
fnstcw
in
test
push
inc
fidivrl
mov
hlt
cmc
pop
imul
jae
sub
lret
div
out
imul
and
mov
pop
cld
push
mov
mov
int3
arpl
test
push
push
push
sub
cmpsl
in
mov
dec
add
test
imul
ljmp
mov
pop
repz
xor
and
adcb
inc
jmp
jb
in
mov
enter
dec
call
sbb
les
xor
cmpb
xchg
lock
xor
enter
mov
mov
mov
insb
mov
fwait
outsl
rolb
cmp
insb
jge
mov
les
xor
mov
xor
in
and
xor
and
fs
xor
sbb
push
mov
xchg
pop
rolb
mov
outsl
jnp
fcmovb
sbb
mov
ss
out
ror
jge
fbstp
xchg
mov
push
mov
mov
loope
mov
repnz
mov
test
out
jmp
and
mov
mov
inc
clc
repnz
mov
cwtl
cld
jns
cmpsb
popa
leave
enter
fstp
xor
pop
arpl
mul
mov
stos
sbb
pop
cltd
sub
sbb
lahf
testb
or
jge
cld
bound
mov
xchg
outsb
cmp
cmpsb
cmc
push
out
test
es
fwait
loopne
ds
xchg
mov
adc
test
ljmp
movsl
cld
cmpsl
pop
or
mov
or
mov
test
jmp
arpl
nop
xchg
lret
cmp
aad
fwait
push
push
pop
inc
cli
pop
mov
jg
addr16
in
cmp
out
xchg
sub
push
fwait
push
sbb
lds
fdivl
inc
inc
insl
sub
cmp
daa
and
sub
jo
cmp
cmp
out
insl
xor
inc
fcmovnu
sub
push
push
pop
push
sbb
seta
mov
pop
icebp
movsl
mov
add
add
rcl
xor
subl
rclb
inc
inc
push
data16
xchg
ja
jb
mov
and
inc
leave
stos
stc
jge
stc
rorb
mov
xor
add
jle
jmp
dec
lahf
in
adc
cmp
jg
dec
sbb
adc
outsl
push
popa
in
lcall
test
notl
jne
cli
jle
and
cmc
dec
push
dec
xor
xchg
adcl
xor
out
inc
outsl
jge
pop
jae
cmpsl
popf
shlb
pop
lahf
lods
mov
cmpsl
jo
mov
sub
adc
pop
testb
mov
cmpsl
aaa
sub
icebp
dec
jg
fstl
test
sbb
xor
and
mov
cli
push
pop
sbb
jp
clc
dec
cmpsl
addr16
cltd
mov
cmc
in
pusha
jecxz
test
push
push
xor
lcall
in
push
mov
sar
subb
repz
aaa
jmp
and
notb
cli
xorb
nop
std
adc
inc
pop
gs
ja
andl
in
mov
scas
scas
ficoml
orb
and
or
gs
jg
das
popa
jnp
xor
pushf
data16
bound
pusha
push
or
lcall
cwtl
sub
add
cmp
cs
in
cmp
or
enter
sub
das
mov
sub
les
pop
xor
pop
hlt
pop
stos
lock
pop
mov
stos
out
lahf
pop
orl
xlat
sub
inc
sbb
lea
xlat
mov
mov
push
aaa
les
mov
addb
mov
and
in
add
js
rcrb
in
sub
ret
les
outsl
mull
lods
cs
ljmp
cwtl
jnp
cmp
mov
mov
push
xchg
push
cmp
cmp
movsb
outsl
and
clc
mov
lods
stos
shl
mov
aam
out
ljmp
pop
ror
insl
inc
lds
xor
lahf
xor
ja
jo
movsl
es
inc
daa
sti
fisttps
pushf
pop
fwait
js
hlt
shll
xchg
loope
xchg
cs
mov
inc
xlat
fstpt
loope
pusha
fdivr
dec
add
daa
ljmp
ss
sub
pop
mov
mov
pop
ds
test
dec
lahf
or
and
mov
repnz
hlt
inc
mov
js
push
lds
cmp
add
adc
mov
pushf
pop
adc
sbb
sahf
jae
mov
sbb
cld
mov
push
inc
sbb
jno
xchg
add
push
out
fdivs
scas
mov
cli
pop
negl
ror
and
mov
sahf
daa
iret
fs
in
lods
cmp
jmp
pop
sarl
mov
mov
and
dec
mov
cmp
mov
fwait
jbe
jle
or
out
jge
pushf
arpl
xor
cmp
push
xchg
xchg
test
and
bound
lds
notb
into
loope
enter
push
dec
in
push
jle
inc
loopne
ja
es
movsl
fs
loope
lds
sub
fnstenv
loope
mov
push
cld
dec
insl
jg
out
dec
mov
add
jne
jnp
stos
xchg
mov
flds
cltd
or
icebp
mov
mov
ljmp
pushf
rorl
ljmp
xchg
dec
xchg
sbb
xor
xor
lds
daa
mov
mov
adc
add
fs
sti
push
mov
xor
jno
movsl
push
jae
push
fsubl
test
lret
lret
lods
cmp
mov
xor
jne
pop
cmp
arpl
cmp
popa
push
inc
insl
sub
pushf
jae
dec
ret
jle
add
xchg
dec
dec
jmp
scas
mov
adc
les
call
pop
add
popl
mov
dec
sub
push
repz
and
or
mov
sbb
sub
pop
test
mov
scas
pop
or
push
imul
sub
stos
mov
mov
fimull
repnz
ja
ret
xlat
test
repnz
mov
jbe
test
int
cmp
test
lret
xlat
leave
xchg
jb
mov
jne
xchg
test
ljmp
mov
xchg
dec
in
inc
dec
add
rep
leave
fiadds
mov
aam
and
mov
xchg
adc
leave
or
hlt
mov
push
gs
mov
mov
adc
sbb
sbbl
int3
mov
testb
push
loop
mov
mov
sbb
sahf
movq
xorl
inc
fldl
scas
mov
enter
mov
mov
sti
and
inc
rcl
sbb
inc
jl
add
mov
pop
xchg
cli
jecxz
push
jg
cmp
pop
ds
xor
fnstcw
inc
loope
pop
push
frstor
ss
arpl
cmp
test
jo
filds
xchg
add
dec
scas
mov
inc
and
clc
push
inc
movsl
cmp
outsb
jle
mov
flds
ja
sub
jns
push
cmc
in
pusha
mov
rcrb
pop
push
inc
mov
lods
jge
daa
xor
enter
sub
xchg
outsb
xor
sti
adc
inc
mov
mov
dec
mov
mov
ss
cmovbe
mov
nop
adc
enter
insb
iret
mov
jae
or
lcall
lahf
bound
pop
pop
hlt
pop
push
adc
inc
test
shll
ret
shll
call
inc
inc
pop
in
push
test
mov
pop
ret
pop
ffree
int3
pop
inc
dec
push
lods
add
mov
fwait
ret
sbb
inc
jbe
fildl
lds
les
pushf
mov
dec
pop
sbb
repnz
mov
jno
dec
sub
and
push
sub
repnz
inc
rcr
jmp
adc
mov
mov
test
in
mov
sbb
xchg
fcoms
mov
je
iret
mov
sbb
pop
sahf
sbb
cbtw
mov
inc
aad
icebp
pop
out
lret
push
or
push
jmp
out
or
mov
out
or
jns
stos
fucomip
xchg
aam
xorl
scas
inc
leave
mov
push
push
lahf
mov
iret
inc
pusha
rcl
push
xchg
push
jl
shrl
sbb
scas
enter
and
and
test
push
subb
ja
mov
or
sbb
push
or
cmp
pop
sub
test
out
cmp
xchg
jp
dec
out
sbb
jo
adc
aaa
dec
mov
adc
ja
mov
pop
adc
cmp
adc
in
insl
pop
lret
pop
loopne
adc
ds
mov
dec
repz
sub
decb
aas
cmc
int3
rorb
bnd
fwait
imul
test
sub
in
ret
sbb
sub
iret
loop
sub
dec
add
jle
test
jge
insl
mov
mov
bndstx
repz
push
notb
adc
data16
pusha
ss
adc
das
repz
lar
cltd
in
cli
pop
cmp
ss
dec
add
cmpb
mulb
and
sbb
push
insb
repz
push
mov
pushf
daa
leave
scas
call
ret
icebp
mov
push
mov
fadds
cmp
mov
adc
in
inc
iret
sbb
xor
jns
imul
loopne
in
subl
pop
addr16
xlat
jne
jno
mov
or
mov
push
aaa
mov
push
and
ja
daa
cmp
adc
push
push
movl
sub
call
mov
loopne
faddl
cltd
stos
cmp
pop
mov
cmp
dec
insb
push
or
sbb
jecxz
pop
xor
and
aaa
test
dec
add
lods
pop
mov
push
dec
fdivrs
mov
andl
xor
test
xor
ffreep
pop
adc
add
sbbl
sbb
lret
cmpsl
mov
in
jecxz
stc
cmp
sub
inc
fcomps
xchg
or
push
popf
lock
jne
pushf
push
xchg
fildll
xchg
mov
adc
fs
fdiv
dec
shll
cmpsl
daa
fwait
xlat
leave
pop
sarl
out
mov
adc
sbb
mov
push
test
and
cmp
inc
shll
xchg
and
mov
pop
imul
sub
jne
pop
push
or
mov
inc
aam
xchg
stos
lock
mov
sbb
dec
and
sbb
orb
and
imul
subb
and
pop
mov
adc
outsl
push
lods
cli
pusha
push
inc
shll
jge
jne
inc
out
add
push
push
cmpps
jge
push
hlt
add
pushw
int3
xchg
add
xchg
push
shrl
add
xor
in
xchg
ja
std
xor
aas
cli
xchg
outsl
jbe
in
int3
cltd
sub
jmp
mov
clc
fidivl
adc
sbbb
mov
push
mov
je
out
mov
aaa
sti
pop
lahf
mov
push
xchg
jmp
mov
pop
lcall
cli
xchg
sbb
gs
cmp
cld
repnz
mov
iret
mov
pop
gs
push
jno
ja
xchg
xor
scas
aas
lret
jmp
sub
sbb
sbbb
pop
in
add
std
adc
cld
mov
mov
ret
insb
xor
lock
adc
pop
adc
out
das
leave
pop
daa
je
push
ljmp
imul
push
mov
ja
pop
test
add
lods
out
mov
in
or
testb
mov
sbb
out
aam
les
xchg
pop
fbstp
into
repz
scas
repnz
je
and
jle
inc
jae
xlat
mov
and
shlb
sub
popa
cli
adc
int
add
lret
test
sub
lods
icebp
dec
cmp
mov
mov
stc
rcrb
xchg
sub
daa
pop
jmp
fsubs
mov
lods
or
sub
add
inc
fldcw
xlat
sbb
test
and
jp
out
enter
imul
std
jo
ljmp
inc
imul
or
cli
jne
mov
ret
mov
mov
jbe
xchg
fmuls
or
gs
push
mov
xchg
sub
and
or
xor
out
jnp
mov
pushf
aas
xor
lcall
lds
lret
imul
adc
add
sahf
push
mov
add
cmc
xchg
sub
hlt
ret
xchg
add
jl
pop
not
int
repz
lods
loopne
test
mov
cmp
les
add
xor
out
xchg
pusha
inc
loope
mov
push
mov
mov
push
rol
jge
cmpsb
stos
es
call
and
xor
insl
sahf
jp
dec
in
cmp
and
ss
call
std
sbb
es
cmp
loop
pop
xchg
pop
inc
fbstp
int3
push
icebp
and
mov
notb
sub
addr16
pusha
clc
xchg
mov
mov
cmp
icebp
pop
or
insl
push
lds
outsb
in
cmp
out
push
jle
mov
jge
jp
pop
mov
scas
inc
mov
pushf
dec
mov
xchg
cmpsb
dec
jecxz
shl
sub
cli
fiaddl
enter
jle
jl
sub
repz
out
pop
loopne
in
test
gs
add
daa
lahf
xchg
cmpb
pusha
push
movsb
jns
sub
inc
cmp
push
pop
loop
in
xchg
imul
xor
ret
rcl
inc
insl
xchg
ret
dec
and
mov
sub
xchg
jmp
repnz
xorl
outsl
adcl
dec
and
and
mov
mov
rorl
add
std
dec
inc
out
imul
or
lcall
push
in
sbb
divb
imul
xor
scas
mov
cld
popl
mov
add
and
cmpsb
push
sbb
iret
cvtps2pd
xchg
add
jmp
fcmovu
je
inc
loop
jle
jle
gs
lds
bound
mov
and
in
mov
loope
inc
xor
incb
insl
mov
insl
roll
popf
loope
lret
xchg
push
mov
shrl
fldt
into
lds
in
arpl
ret
std
and
mov
cmp
mov
mov
adc
xor
push
pop
xchg
pop
xchg
push
stos
ret
cmc
xchg
mov
ss
in
pushf
push
repz
lcall
pop
cmp
cmpsb
dec
dec
adc
inc
jecxz
ljmp
stos
inc
sbb
fwait
paddq
loop
push
add
push
push
mov
inc
loopne
mov
xchg
xor
adc
jmp
dec
cli
mov
jle
dec
mov
or
pop
ficoms
gs
xchg
outsb
in
mov
push
jns
insb
es
adc
test
repz
push
orb
jl
jo
sbb
test
jns
xchg
or
xor
mov
adc
mov
test
call
aaa
jmp
jg
das
adc
ss
push
in
mov
mov
lea
outsl
jne
mov
test
sub
mov
mov
or
aad
sbb
or
mov
xor
movsl
clc
out
push
add
daa
shl
repnz
in
test
les
pop
or
dec
xchg
cmpsb
and
imul
mov
fldt
or
rcl
jle
mov
add
addr16
push
icebp
mov
xchg
adc
fldcw
popa
push
cmp
add
call
rclb
mov
fstpl
test
sti
repz
sbb
jo
jae
aam
and
leave
movsb
cmp
lahf
sbb
in
das
and
int3
pop
rcll
adc
adc
or
sub
and
js
mov
or
shll
pop
fucomi
inc
dec
popl
dec
imul
movsl
inc
stos
sbb
or
adc
cmpsb
arpl
nop
das
testb
jbe
pushf
push
testl
mov
lds
or
mov
xor
jnp
add
xchg
js
add
sbb
rorl
popa
sahf
pushf
sub
push
push
sahf
out
sub
popf
and
shll
cld
ret
and
jg
xlat
rorb
bnd
ret
xor
push
jns
jp
out
xchg
push
cltd
adc
mov
xlat
fcompl
sub
jns
fnstenv
movsl
inc
fstpt
ja
std
lahf
clc
test
sti
push
or
jg
je
stc
movl
shll
dec
push
out
out
mov
nop
call
in
pop
imul
pop
mov
push
jmp
movsl
test
pop
mov
lret
in
sub
aaa
ret
add
sub
pop
dec
lods
int3
and
pop
sub
or
cwtl
fldenv
ret
sahf
ficomps
pop
nop
mov
mov
mov
js
lret
mov
mov
mov
xchg
rcr
gs
in
inc
inc
insb
lret
mov
add
add
jne
js
mov
hlt
jecxz
xchg
adc
or
dec
cli
add
mov
cmp
pusha
repnz
out
jnp,pn
lret
mov
ret
sub
cmpsb
mov
arpl
mov
mov
add
mov
lret
jp
shlb
jp
mov
les
imulb
cmp
ds
pop
int3
leave
jo
repnz
sbb
sbbb
loop
imul
jno
xchg
pop
jecxz
dec
call
stos
xchg
test
iret
dec
lock
inc
dec
sarb
push
ret
dec
loope
xchg
mov
mov
mov
data16
pop
mov
mov
cmp
sub
jle
xorb
test
jmp
fcoms
mov
push
fmul
pop
xchg
out
pop
add
sbb
or
daa
lea
aam
and
daa
inc
and
ljmp
mov
leave
or
dec
out
mov
rcrb
dec
push
xchg
das
adc
fbld
hlt
jbe
test
inc
ss
hlt
pop
lock
xchg
sub
testb
cwtl
shll
inc
cmp
xlat
ret
and
ss
pop
cltd
sahf
push
lcall
xor
xor
fistpll
xorps
out
mov
mov
aaa
or
pop
or
mov
fisttps
inc
fstl
lcall
xor
sbbl
add
subl
testl
ss
icebp
mov
cld
sarl
pop
mov
loop
rcrl
outsl
lret
dec
push
fs
leave
add
sti
add
cli
stos
sbb
ja
sub
dec
aam
push
dec
jo
inc
and
sbb
clc
inc
int
push
pop
stos
ljmp
xor
cwtl
lods
push
lea
jne
aas
mov
mov
fnstcw
dec
shlb
fcomp
jbe
icebp
or
xchg
xor
mov
cltd
push
jg
pushf
mov
or
push
fisttpll
xor
out
aad
sub
pop
jbe
dec
call
fdivr
movsl
or
mov
out
pop
sub
push
lock
out
sbb
pop
fsubs
out
sbb
xchg
push
fstpt
jmp
xchg
leave
jge
push
nop
sbb
mov
and
inc
mov
shlb
xchg
idivb
fnstsw
iret
xor
sbb
xchg
insl
jae
dec
repz
xchg
jno
outsl
cmp
imul
popa
pop
pop
enter
in
inc
insl
mov
js
pop
int3
xchg
mov
imul
mov
dec
xor
mov
or
les
inc
mov
invd
ret
xchg
push
pop
stos
test
xor
ss
inc
cmp
push
mov
std
test
fs
inc
fdivrl
inc
cwtl
jb
mov
fldt
fnstsw
repz
push
mov
repz
mov
mov
jns
outsl
cmpsl
bound
shrb
fcomps
jnp
mov
daa
pop
les
mov
jne
mov
scas
adc
inc
sbb
push
mov
mov
xor
mov
fnstsw
xchg
mov
stc
or
pop
test
iret
push
test
jecxz
adc
jmp
xchg
sbb
add
scas
mov
xchg
nop
ds
aaa
pop
inc
in
push
test
sbb
push
mov
dec
xlat
pop
push
gs
inc
lahf
xor
scas
xor
loope
stos
insl
xchg
dec
inc
dec
insl
ljmp
call
call
or
cmp
inc
scas
ret
xchg
insl
sti
ret
scas
adc
mov
lret
cli
cld
lcall
push
mov
int
push
or
mov
icebp
aaa
sbb
adc
lret
xor
dec
pop
loop
cmp
gs
push
scas
jmp
mov
push
pop
ds
cmp
jge
pop
sahf
mov
or
in
aam
repz
aas
mov
ss
inc
mov
xchg
pop
mov
push
push
fnsave
lcall
lcall
ret
adc
jnp
das
adc
ss
xchg
outsl
sbb
ds
fmuls
mov
neg
add
pop
inc
push
or
sub
or
in
hlt
cmp
sbb
scas
jp
fistps
cmc
test
test
fldl
out
sub
das
cmp
outsl
push
pop
add
gs
sti
cmp
cmp
cltd
mov
and
movsl
in
lret
std
loop
cmp
fmull
fstpl
adc
hlt
lcall
mov
jbe
and
push
add
loop
stc
out
mov
or
mov
clc
stos
movsl
scas
inc
add
stc
or
ss
sbb
mov
cmc
push
mov
xor
jb
mov
jns
in
in
cmpsl
inc
pop
mov
inc
xor
jge
jg
push
popa
or
pop
cmp
sbb
sbb
int
mov
pop
mov
andl
mov
shlb
stos
mov
pop
dec
sub
jp
sbb
cwtl
sub
jmp
test
cltd
std
dec
sti
push
lea
adc
sbb
fxch
mov
imul
push
rcr
daa
shlb
cmp
sub
xchg
xchg
addb
pop
les
inc
cmpsb
shll
cs
int
icebp
mov
xchg
scas
or
jae
mov
adc
jl
inc
push
out
jl
adc
aam
inc
rclb
mov
mov
jne
pop
icebp
movsl
adc
jg
and
roll
movsl
data16
push
cmp
jp
jp
insb
jno
std
inc
pop
inc
ret
pop
lret
leave
xlat
xchg
loopne
dec
clc
push
inc
cmp
jae
push
pop
pop
and
xchg
or
stc
hlt
mov
data16
cwtl
cli
sbb
daa
and
test
add
inc
jno
or
scas
xchg
sub
add
cli
movsb
std
or
push
enter
jg
mov
ja
gs
bound
xchg
sbb
adc
cmp
mov
mov
xor
xchg
imul
daa
clc
dec
pop
mov
xchg
pop
imul
loope
mov
test
fnstsw
sahf
ja
shlb
push
test
xor
imul
mov
mov
mov
lret
or
jns
out
shll
in
fucomi
mov
loop
push
es
mov
das
mov
mov
mov
dec
test
mov
xchg
and
aad
imul
loop
rcll
shr
pop
mov
xchg
jno
fdivrl
aaa
inc
mov
inc
into
jnp
push
leave
jo
add
and
xor
inc
push
mov
scas
or
push
shll
xor
add
push
scas
adc
adc
ja
stos
inc
imul
mov
repnz
dec
jg
arpl
loop
dec
fists
aas
test
push
pop
fbstp
fdivrl
sbb
inc
std
mov
loop
pop
idiv
xchg
scas
fisttpll
jge
aaa
es
scas
es
dec
lcall
push
sub
decl
mov
shrl
fcmovnbe
out
or
inc
sub
sarb
pop
dec
pop
stos
repnz
xchg
aaa
into
cli
mov
leave
pop
xchg
push
popa
mov
loope
and
dec
inc
sbb
jns
repnz
dec
fldt
es
scas
hlt
add
xchg
rcll
das
mov
mov
shl
sub
fbld
inc
cwtl
push
dec
add
pop
enter
sub
lds
dec
cmp
int3
inc
imul
popf
pop
jmp
mov
movb
leave
mull
xchg
jo
xchg
in
loope
cmpsl
push
jne
or
add
repnz
mov
xchg
dec
roll
imul
pop
leave
rclb
les
jmp
mov
pop
dec
lea
mov
push
xchg
aad
mov
pop
xlat
jle
iret
jbe
sub
jno
loope
mov
idivl
pop
cmpsl
popa
push
nop
sbb
fnstsw
lret
ss
push
mov
sub
xchg
adc
xchg
adc
sub
push
jae
dec
inc
enter
int
cmp
fs
outsl
or
cld
xchg
jno
dec
xlat
lods
fwait
test
inc
sbb
jbe
dec
fnstcw
mov
bound
cmc
ret
sub
inc
movsl
sub
adc
pushf
daa
mov
cmpsl
out
movsl
nop
cltd
adc
int3
stos
cmp
stc
push
mov
clc
mov
mov
xor
adc
dec
in
sub
dec
insb
scas
div
mov
movsb
adc
es
je
sub
sub
pop
inc
ja
cltd
inc
cli
addr16
lods
xor
push
xchg
bound
xchg
mov
aas
fcoml
outsb
dec
add
jmp
sub
ss
nop
dec
mov
dec
pop
fdivs
mov
movsl
jae
out
mov
cld
stc
pop
cltd
xor
insb
cmp
popf
pop
inc
sahf
add
inc
fsubrs
jne
call
jmp
push
in
daa
add
nop
mov
je
or
pop
jo
cmp
dec
bound
pop
scas
xor
aam
pushf
fs
xchg
mov
sub
mov
adc
sbb
pop
and
jp
sub
jmp
jno
sahf
out
cmp
je
xchg
xchg
jns
clc
sti
jbe
sub
mov
or
sub
sub
sarb
cmp
repz
loopne
out
les
jmp
mov
adc
adc
mov
ss
push
push
push
out
hlt
push
fisubs
jno
outsb
jg
mov
cmpsl
jns
pop
aam
mov
repz
repz
mov
jns
iret
js
add
int3
mov
cld
push
test
nop
pop
jns
in
aad
jecxz
add
int
push
or
shr
push
pop
cmpsb
xchg
add
add
fsubrl
jl
pop
scas
ret
push
jo
dec
test
les
test
aad
aaa
pop
mov
mov
movb
pop
ss
inc
xchg
sub
xorb
divl
adc
popf
es
adc
out
stos
dec
and
and
stc
nop
adc
data16
imul
and
cltd
fnstenv
mov
roll
and
hlt
dec
or
pop
gs
cld
xchg
ljmp
mov
lds
popa
clc
daa
ret
arpl
xchg
gs
jg
push
mull
pop
xchg
or
es
ss
and
dec
mov
cmp
outsl
daa
ret
xor
movsb
lock
jl
cmp
mov
xchg
dec
jg
jmp
shl
sti
data16
lcall
push
loopne
mov
int3
add
aad
sub
mov
in
mov
xor
cmp
mov
test
jg
cwtl
stos
cmp
int
or
aad
mov
pop
sub
sti
cwtl
in
dec
in
stos
cmp
mov
leave
mov
pop
je
jle
pop
test
sbb
sub
fstps
ljmp
sbb
cmp
adc
sbb
gs
jg
jns
push
mov
push
cs
out
xor
fstpt
push
call
xchg
aaa
pop
xchg
test
xchg
cmpb
sbb
sahf
xrelease
ja
lds
push
mov
jb
push
out
cli
mov
cs
fiaddl
ds
inc
sti
ror
push
add
dec
loopne
imul
stos
movsl
rcrl
popa
lret
mov
and
adc
mov
dec
mov
jge
dec
dec
dec
fucom
test
sub
fcomps
mov
mov
repz
shl
mov
fistpll
stos
mov
lret
fistpl
jg
in
aaa
or
lods
mov
jmp
ljmp
inc
dec
mov
or
push
hlt
and
mov
cmp
sub
inc
test
pop
call
insb
cmp
add
in
dec
mov
ret
mov
jg
scas
mov
mov
imul
gs
sbb
paddd
cmpsl
cmp
dec
and
pop
sub
xor
mov
mov
pop
aad
nop
daa
mov
adc
imul
lds
out
xchg
fnstsw
in
sub
aad
or
testl
movb
aam
loope
and
adc
pusha
dec
cmc
add
stos
dec
cwtl
pop
jbe
mov
lock
hlt
int3
clc
xchg
ja
inc
sbb
dec
adc
dec
cmp
cld
adc
int3
out
insb
ret
pop
dec
lods
movsl
mov
pop
lret
xor
jnp
fdivr
fs
daa
cmp
push
sbb
jns
shrl
xor
sbb
adc
mov
push
lods
mov
pop
jne
out
jns
pop
sub
xchg
pop
sahf
jp
rcl
lods
sub
clc
sbb
sub
imul
mov
add
shlb
push
dec
mov
xchg
pop
and
out
push
and
mov
jge
pop
jne
pop
push
addr16
cmp
cmpb
inc
xor
pop
ds
in
cmp
jo
std
cs
gs
dec
aaa
jbe
or
test
fwait
int
and
outsb
add
mov
loop
shl
inc
imulb
jle
sbb
into
arpl
fdivs
ljmp
call
push
inc
dec
pop
jp
xchg
in
subl
push
call
push
fisttpll
xor
jae
sub
fidivrl
inc
cmp
jb
lods
and
roll
mov
repz
stos
arpl
pop
rol
dec
mov
call
lret
and
adc
mov
jmp
aaa
pop
inc
push
mov
inc
sub
pushl
adc
xchg
xchg
and
lret
outsl
adc
hlt
js
mov
mov
xor
shlb
xchg
jae
out
push
jmp
mov
dec
xchg
add
jg
icebp
lods
sahf
mov
fwait
pop
add
or
adc
fstpt
mov
outsb
add
add
xchg
xchg
dec
sbb
cmp
gs
hlt
arpl
in
data16
push
inc
cmp
lahf
stos
sbb
sbb
std
popf
adc
lret
adc
mov
jbe
or
cmc
lret
add
lcall
push
mov
insl
jmp
add
mov
cmp
add
and
pop
loope
lret
cltd
mov
lret
out
fisubrs
mov
push
adc
sbbl
dec
call
push
dec
and
iret
fs
sti
cmpsb
mov
inc
fdivr
loope
push
js
mov
push
xchg
nop
pop
or
movsl
xor
enter
or
clc
mov
rcrb
rcll
sub
pushf
cmpb
and
cld
mov
loopne
mov
cmp
jnp
jbe
adc
es
mov
push
mov
loopne
mov
insb
leave
or
mov
fs
jmp
mov
lret
jmp
push
adc
cmp
jmp
inc
dec
repz
sti
and
sbb
cmp
sub
and
pushf
inc
jle
test
in
push
cltd
mov
pushf
pop
icebp
dec
adc
in
adc
mov
orl
push
push
sub
add
xchg
jae
xchg
mov
ss
das
mov
xchg
scas
push
mov
and
testb
xlat
mov
cltd
cmpsl
outsb
mov
and
cli
jnp
inc
loopne
addl
lcall
push
mov
out
pop
les
int
pop
adc
cmp
out
or
cmp
les
ror
add
aaa
add
nop
lods
outsl
rclb
in
jns
sbb
lds
lds
inc
imul
sub
fisubrl
enter
fsubs
loop
mov
dec
icebp
fsubr
and
shrl
push
xchg
and
lahf
pusha
jae
dec
ret
jns
pop
cmp
dec
imul
das
nop
and
xchg
nop
push
mov
xchg
enter
mov
rclb
dec
fisubrl
sub
ret
jne
or
orl
inc
imul
repz
aam
adc
xchg
mov
jmp
xlat
cwtl
sbb
mov
enter
fwait
jns
dec
call
int
in
subb
pop
mov
add
push
add
pop
jae
daa
test
clc
mov
testb
das
pop
sbb
lahf
and
in
fcompl
incl
xor
or
ss
cmpsb
ja
jno
icebp
xor
shrl
loop
jae
adc
jge
sub
and
bound
fimull
mov
pmulhuw
push
adc
mov
in
clc
jl
xor
xchg
pop
cmp
repnz
stos
mov
mov
or
sbb
mov
push
xlat
and
mov
dec
xchg
cmpb
sub
ljmp
sbb
or
add
and
xchg
push
xchg
cmp
sti
ds
cld
cmpsb
mov
repnz
jo
xor
cs
insb
pop
jmp
xor
fnstsw
mov
jo
sbb
mov
sti
icebp
cmp
push
ja
sub
sub
xchg
push
jbe
cmpsl
clc
popa
icebp
iret
rcll
or
test
or
je
pop
adc
push
and
into
fdiv
clc
fcoms
sub
sub
mov
icebp
mov
aad
and
jl
cmpb
test
stos
js
lcall
jbe
hlt
pop
scas
sbb
push
lock
sbb
or
stc
sar
inc
ds
ds
push
shll
pop
dec
aam
mov
dec
lea
sbb
mov
fs
push
jge
and
std
shlb
adc
in
mov
inc
mov
in
pop
pop
lret
xchg
adc
cmp
arpl
pop
and
dec
je
jmp
shll
sub
xor
movsb
jmp
jge
cmc
adc
shr
adc
push
jne
xor
popa
aas
jb
add
iret
lods
mov
or
dec
dec
sbb
pushl
mov
mov
and
cwtl
pop
xchg
and
jns
out
xor
jg
lcall
in
sub
hlt
lods
flds
sbb
mov
mov
xchg
and
push
lock
pushl
xor
outsb
cmp
inc
xchg
mov
movsb
int3
jp
testb
loope
popa
xchg
sub
push
in
lcall
in
inc
jmp
adc
shlb
repnz
mov
stc
out
xchg
daa
fwait
ja
movsl
int
sub
mov
scas
inc
js
leave
movsl
mov
sub
push
and
push
or
fidivs
jae
inc
and
push
in
dec
cmpsl
jge
out
stos
dec
mov
dec
inc
das
sar
cmp
xchg
add
sub
mov
push
fldenv
fstl
mov
push
mov
pusha
and
jo
dec
xchg
leave
movsl
fsubrp
imul
loop
rcrl
fldcw
inc
cmp
sub
adc
add
and
mov
pop
je
sub
fwait
enter
push
pop
movsl
in
mov
stc
cwtl
mov
mov
add
jns
imul
push
add
shrb
loope
jnp
xlat
sahf
movsl
inc
mov
xor
xchg
stc
push
fwait
stc
jno
outsb
stos
mov
adc
mov
xchg
loop
mov
out
fistl
mov
adc
xlat
push
rcr
lret
jae
mov
imul
cmpsl
sbbb
xchg
jnp
stos
lahf
mov
pushf
mov
sti
fdivrl
sahf
std
lret
jo
lods
jl
jns
mov
out
test
lret
pop
loope
nop
enter
cmp
jl
jo
jg
mov
xchg
add
add
jmp
insb
out
add
dec
sub
pusha
xchg
data16
shll
andb
cmp
std
lods
in
inc
or
dec
dec
xchg
psadbw
dec
dec
mov
sarb
cmp
scas
mov
testb
mov
sub
das
bswap
add
xchg
pop
add
sbbl
adc
lock
cmp
pop
insl
es
lock
cmp
movsb
cmp
lcall
lds
mov
rcl
xor
sub
es
cmp
pusha
subb
das
dec
mov
mov
dec
enter
push
cmpsl
mov
fisubrs
cmp
aas
mov
sub
push
rcrl
aas
dec
cmp
movsl
mov
and
xchg
mov
or
fldenv
cmp
mov
mov
loope
inc
leave
bound
sub
push
cmp
iret
dec
add
fisttps
insl
rolb
fisubl
js
jecxz
jb
add
in
insl
xor
imul
cmp
jno
stos
mov
loopne
les
pop
sti
jbe
mov
jmp
jnp
xchg
mov
lods
push
test
pop
leave
pusha
mov
cwtl
das
lea
add
mov
dec
bound
adc
leave
xor
cmp
push
cmp
pop
sub
xchg
jbe
adc
dec
cmp
fdiv
xchg
mov
sti
jno
sub
push
mov
jns
das
mov
adc
mov
cmc
icebp
fidivl
int3
xchg
push
push
pop
std
or
adc
cmpl
add
fnsave
jp
sub
dec
int
shll
icebp
es
or
adc
pop
inc
and
test
jecxz
lcall
aam
cli
mov
sub
cmp
loope
inc
pop
bnd
popl
and
adc
and
push
pop
aad
nop
jne
ja
out
and
invd
dec
and
mov
push
ds
pop
xchg
imul
cmpb
mov
cmpsb
outsl
inc
add
int
ficomps
lds
lea
inc
clc
mov
sbb
push
dec
aad
pop
popa
dec
aam
pop
lock
aad
and
pop
pop
and
sbb
jle
jbe
jns
xchg
outsl
arpl
rol
mov
mov
adc
xchg
xor
dec
aad
out
sbb
xchg
cmp
adc
in
std
inc
xor
arpl
ljmp
aas
testb
fdivrl
subl
pop
lods
test
cld
mov
inc
test
rcrl
mov
mov
in
imul
and
popf
add
xor
xchg
mov
sub
ljmp
cmp
and
pop
scas
in
mov
outsl
fwait
sub
lret
fdivl
mov
imul
mov
and
fcoms
test
adc
dec
pop
ds
cmpsb
les
scas
or
cmp
test
lds
movsl
cltd
cmpsl
fwait
pop
jl
shld
or
inc
popf
cs
incb
ljmp
mov
lock
sbb
ds
mov
adc
sub
mov
andl
frndint
inc
sti
jo
adc
inc
cs
arpl
mov
std
xchg
lea
out
push
in
push
cmp
lds
cmp
in
sub
push
cmpsl
ret
dec
faddl
xchg
lcall
ljmp
es
insb
icebp
inc
lods
xchg
mov
xor
sub
and
dec
sbb
addb
sbb
dec
dec
mov
push
jae
in
das
imul
mov
cmp
es
je
shld
jnp
and
push
mov
aad
cmp
mov
aad
push
addb
loop
mov
dec
adc
imul
mov
cmp
and
cmp
lods
mov
pop
mov
lds
ret
fiadds
lods
xadd
xor
xchg
mov
vmovss
or
inc
mov
iret
data16
mov
int3
cld
jae
or
imul
sub
insl
movsl
mov
or
pop
jmp
popf
inc
sbb
mov
pop
mov
ret
outsb
add
jno
inc
add
je
sahf
pusha
stos
scas
inc
mov
add
mov
pusha
jnp
mov
jecxz
out
imul
sbbl
cltd
jb
pop
rcr
daa
test
popa
jle
add
add
outsb
scas
add
jne
int3
pop
stos
stos
scas
mov
inc
dec
adc
jp
mov
dec
add
test
and
xor
inc
fisttpl
subl
dec
push
int
pop
repz
aaa
or
fwait
adc
ss
xchg
int3
jne
jg
roll
mov
push
in
sbb
cmp
xchg
push
sarl
add
xchg
mov
adc
add
js
outsl
cli
xchg
lret
cld
jle
jbe
stos
xor
adc
dec
int
jl
pop
mov
push
fdiv
and
scas
lods
stos
xlat
sahf
dec
loopne
lret
cmp
out
scas
popa
mov
xchg
adc
clc
adc
and
pop
lret
loopne
loope
pop
mov
repz
jne
loope
roll
add
mov
and
aad
sub
and
jns
lods
fisubrs
call
jno
dec
loop
scas
stos
loopne
jp
movsb
mov
and
adc
movsb
ja
aaa
lea
cmp
orl
xchg
shlb
cld
gs
push
popf
and
dec
pop
xor
adc
or
rolb
jg
addl
mov
mov
and
loopne
aas
inc
add
es
imul
mov
xchg
repz
and
jg
fdivs
es
test
xor
and
mov
jle
jmp
sbbb
cmp
insb
dec
add
add
out
stc
pop
and
sahf
lds
scas
mov
andl
cli
jne
data16
push
and
adcl
shrl
fimull
test
popf
pop
mov
lahf
sbb
insl
xor
and
jl
xchg
ficoms
pop
push
insb
cmp
jl
sti
es
pop
aad
xchg
jle
cmpsl
cmp
out
lcall
or
dec
test
jmp
or
cs
addr16
pop
dec
xor
mov
mov
int
rorb
repnz
fistpl
insb
inc
pop
cli
rcr
and
mov
test
push
insl
rcll
adc
sbb
mov
jns
ds
js
sbb
mov
add
loopne
jnp
ret
and
push
out
xchg
rcrl
rolb
rorb
mov
mov
into
dec
and
aam
jne
xchg
movups
aad
ds
call
les
movsl
dec
fs
inc
insb
jmp
jle
int
iret
orl
adc
inc
push
jne
data16
push
shrl
je
lods
outsl
adc
iret
out
inc
push
and
std
je,pt
lcall
lcall
push
inc
mul
call
shll
test
add
adc
aam
mov
sbb
lahf
mov
mov
push
xchg
data16
sbb
in
jle
loop
xor
push
cmp
loopne
push
xchg
fadds
stc
fs
push
xchg
jle
dec
and
popa
xchg
inc
or
push
cmc
nop
pop
pop
fbld
outsb
testb
lods
mov
leave
cmc
js
dec
loop
jge
shll
popf
mov
popf
lods
xchg
mov
fcmovb
pop
sub
pop
aas
data16
enter
lock
push
cmpsl
jae
test
arpl
and
aas
fwait
xor
imul
inc
mov
cltd
enter
ret
jne
lds
in
xchg
sti
ret
scas
call
or
test
int
and
sbb
lret
sti
fadd
sbb
sub
sbb
cld
xchg
xchg
xchg
pop
js
sbb
stos
pop
std
and
inc
sbb
out
mov
in
mov
mov
push
xlat
and
ret
fmul
mov
dec
andb
insl
outsl
inc
xlat
inc
dec
popf
lcall
jo
xchg
and
ret
inc
ret
sbb
pop
mov
adc
inc
mov
jle
je
fisttpll
pusha
lods
mov
lahf
push
lea
adcl
aaa
mov
std
std
xor
mov
xlat
mov
inc
movsl
outsb
add
mov
mov
jmp
dec
cs
jmp
dec
push
lods
or
push
mov
xchg
rcrl
xor
pop
scas
je
lock
inc
in
rcrb
mov
mov
inc
clc
fldt
test
test
push
push
lods
dec
pshufw
cmc
inc
and
cmpsl
mov
sbb
cmpsb
lock
cmp
mov
sub
jle
gs
addl
xchg
add
or
sbbl
repz
pop
stos
jnp
jbe
or
loope
push
mov
mov
hlt
negl
jnp
pand
fstl
cmp
xor
xchg
pop
jmp
mov
jmp
cmp
jnp
xlat
pushf
inc
cmp
sarb
push
add
outsb
sbb
ja
pop
jge
pop
aaa
por
mov
mov
push
cmp
add
mov
xchg
push
inc
dec
xor
aas
jnp
mov
lahf
aad
sbb
mov
and
sbb
push
pop
cmpsb
or
movsb
insb
dec
or
mov
les
sbb
repz
cmp
insb
sub
gs
push
add
xor
jbe
popf
sarb
add
dec
fisubl
js
cmp
push
push
clc
ds
pop
jno
xlat
cwtl
jle,pt
clc
leave
fldcw
lds
test
loope
rorl
es
icebp
xor
out
stc
cmp
cwtl
test
call
jae
insl
xchg
push
mov
aam
enter
fimuls
mov
pop
push
loopne
pop
clc
test
xor
dec
add
mov
dec
jnp
adc
loop
in
arpl
push
nop
jno
ret
rcr
imul
xchg
add
movsb
leave
idivb
lret
movsl
andl
dec
enter
test
push
mov
es
out
repnz
ss
pusha
pusha
inc
sbb
sbb
outsl
inc
and
stos
jns
in
jg
sbb
loope
push
xchg
add
push
dec
pop
pop
fisttpll
jnp
fsubl
enter
pop
std
inc
jae
imul
dec
popa
jg
loop
inc
dec
sbb
imul
aam
mov
fs
xor
jge
shr
sbb
mov
imul
inc
jle
les
vphadduwd
jmp
into
std
mov
mov
jo
adc
mov
mov
pop
or
scas
add
call
mov
pop
mov
fyl2x
mov
and
das
icebp
pop
out
imul
mov
mov
out
out
sub
cs
xchg
addr16
adc
pop
fcomp
and
and
into
sub
dec
mov
inc
in
mov
mov
sbb
push
add
data16
cmpsl
pop
cmpsb
daa
pop
mov
test
pop
ds
dec
testb
push
xchg
cmpsb
jp
mov
jnp
sub
sbb
imul
fwait
rcll
jmp
int
fsubs
cmp
push
cmpsb
jl
repz
mov
orb
aaa
enter
sub
imul
sub
adc
mov
jo
insb
mov
out
sub
xchg
cmp
sarb
dec
and
pusha
popf
mov
lea
test
sub
inc
loope
xchg
sahf
cmp
cmp
ds
jbe
dec
out
sub
lods
movsl
pop
add
xchg
pusha
push
cwtl
or
or
nop
mov
dec
xorl
mov
pandn
cmp
adc
sub
inc
loope
xor
stos
dec
cld
fbstp
or
pusha
xor
mov
lahf
call
add
ja
sub
pop
aad
adc
ds
xchg
pushf
adcb
scas
and
or
pop
mov
inc
fcmovbe
inc
mov
repz
mov
je
lods
cmpsl
jecxz
or
sub
pop
adc
sbb
push
sbb
mov
insb
shlb
out
mov
push
inc
push
xchg
or
inc
sub
cwtl
fadds
xor
push
push
in
xchg
mov
cmp
je
cwtl
cmp
outsb
pop
testl
inc
sub
mov
xor
mov
das
mov
push
data16
inc
stc
fidivrs
into
push
jns,pt
mov
cs
jb
adc
mov
jmp
in
push
fists
movsl
inc
lods
mov
adc
int3
jne
xor
mov
push
cmp
aad
aas
mov
in
jae
les
lds
xchg
lahf
xor
leave
xchg
mov
leave
bound
in
add
push
pushf
dec
es
xchg
jbe
lods
aad
sbb
inc
addr16
sahf
and
add
lret
in
adc
iret
loop
push
add
push
std
xchg
lods
gs
jno
out
fxtract
fnstsw
sahf
mov
leave
mov
repnz
push
or
cld
cmp
test
sarb
add
inc
dec
mov
adcl
mov
loop
push
cs
lods
les
add
cmpsl
push
mov
mov
cmp
cmp
lods
cmp
and
push
scas
mov
ss
mov
dec
call
iret
push
fildl
or
jmp
jne
mov
fbld
lahf
mov
adc
fcompl
imul
pop
popa
xsave
push
inc
adc
out
lcall
mov
push
sub
push
fwait
sti
xor
dec
jne
cmc
shlw
cmpsl
pop
ret
jle
test
add
inc
adcb
mov
enter
call
mull
dec
sbb
clc
enter
xchg
jbe
loope
pushf
cmp
adc
out
jbe
and
pop
jl
call
iret
xchg
addr16
mov
lahf
cmpsl
xchg
jno
add
lcall
in
jns
stos
and
inc
push
pop
fbld
mov
std
shlb
inc
fidivrl
sbb
push
icebp
addr16
int3
mov
lret
lret
in
shld
jmp
imul
out
test
xchg
shll
xchg
jno
inc
cs
cli
fsubrl
pop
iret
mov
lods
push
iret
or
add
or
dec
push
push
mov
pop
scas
imul
xchg
out
sti
pop
mov
dec
mov
sub
cmp
cmp
pop
cld
jl
cmp
es
pushf
and
xchg
sub
jne
push
dec
sbb
out
sbb
mov
xor
pop
imul
add
cmp
aaa
cmc
mov
faddl
pop
adc
jb
xchg
sub
xlat
xchg
xor
xchg
mov
mov
dec
mov
mov
int3
push
inc
jne
sbb
or
or
cmp
inc
es
lds
mov
add
mov
sbb
jg
mov
push
sahf
pop
clc
dec
mov
inc
sbb
lcall
insb
jg
ljmp
push
jb
or
stc
orl
nop
insb
jnp
push
sub
mov
arpl
ret
pop
aaa
and
dec
mov
lock
mov
xchg
lahf
lret
lret
xchg
push
mov
imul
lock
xchg
xchg
jbe
lds
out
push
bound
mov
fwait
push
out
popfw
and
stc
out
mov
mov
mov
add
push
cmp
jmp
dec
and
lods
or
mov
adc
dec
stc
rcr
fldcw
xor
ss
jl
mov
insl
inc
mov
inc
sub
pop
rol
xchg
sub
push
subl
push
xchg
cmp
push
jo
rolb
cmc
mov
imul
lret
adc
rorb
stc
sub
movsb
dec
fstl
pop
fldt
push
fs
iret
dec
push
sbb
movsb
sbbb
daa
data16
insb
jp
hlt
pop
sbb
mov
aam
push
pusha
jnp
stos
and
inc
inc
mov
nop
sub
mov
scas
ficompl
rcr
xor
jo
out
shl
and
clc
cmpsl
cwtl
jmp
std
add
es
cmp
pop
dec
in
cmp
mov
push
mov
imul
xchg
cs
inc
fiadds
add
add
xor
mov
pop
mov
jecxz
xor
shr
sti
xor
fldl
jge
cs
cs
add
cs
sub
cmp
subb
pop
std
int3
cmp
aas
roll
mov
inc
fidivl
xlat
popa
xor
jp
fistpl
mov
bound
icebp
sub
lret
popf
add
pop
push
or
jle
pop
lds
sbb
push
mov
pop
jmp
mov
int
jne
inc
xor
iret
and
push
push
push
cmp
shrl
scas
leave
je
dec
push
sbb
scas
sub
loope
inc
fdivs
std
icebp
xor
and
test
imul
inc
ljmp
ret
idiv
mov
lcall
dec
fildl
mov
push
loopne
outsb
fistl
xor
push
or
or
lret
cld
mov
aaa
or
push
cwtl
sbb
sarl
and
push
jne
insb
pop
and
dec
popf
mov
xchg
mov
loopne
pop
arpl
push
es
jmp
je
mov
jmp
add
shr
test
mov
cmp
xlat
xchg
pusha
sub
xlat
insb
inc
mov
stos
push
xchg
mov
push
js
dec
orb
xchg
fyl2x
xchg
push
movsl
into
outsb
adc
mov
mov
push
xlat
shlb
mov
pop
add
mov
jns
testb
popa
ret
sti
dec
and
in
aaa
or
push
inc
js
dec
sub
push
inc
das
lcall
stc
sub
mov
std
adc
pop
mov
inc
or
xor
adc
outsb
adc
or
pushf
js
cs
push
sub
dec
ja
loop
outsl
jl
mov
nop
push
popl
mov
mov
jp
lods
test
dec
mov
es
or
jecxz
bound
inc
test
cmovbe
sti
mov
divb
pushf
add
into
push
stc
cmp
adc
dec
adc
push
or
mov
mov
mov
lock
sbb
sbb
dec
mov
cmp
rorl
pop
jle
out
pop
mov
test
pop
inc
sbb
lods
dec
test
outsb
xor
pop
repnz
lcall
into
data16
sarb
out
test
cmp
icebp
out
cmc
int3
aas
dec
add
repz
sbbb
push
loope
test
sarl
add
mov
xchg
and
cmpl
sbb
cmp
xor
xor
stos
mov
mov
pop
mov
add
ficomps
dec
cmp
rcl
sub
jp
xor
daa
lods
outsl
and
out
xchg
lret
or
cmp
cmp
les
mov
cmp
xchg
sbb
push
loop
int
jne
push
xor
aas
negl
sub
repnz
lock
xchg
adc
test
mov
xchg
xchg
vphaddbw
pop
aam
pushf
scas
into
xor
test
scas
adc
xchg
jl
xchg
mov
inc
sti
shrb
ss
mov
mov
mov
cmp
sub
stos
dec
pop
cmpsl
nop
mov
fldt
out
rcl
and
stos
aaa
ret
and
cmpsl
lds
stc
xchg
cld
ficomps
icebp
test
dec
aam
cmc
mov
icebp
shlb
sub
mov
jbe
outsl
call
sti
out
xchg
push
jae
loope
icebp
movsl
pushl
pop
jg
shll
iret
mov
les
testb
bound
sbb
repnz
add
iret
roll
enter
arpl
je
push
inc
mov
or
aad
aad
jecxz
cmc
jg
bound
lcall
xchg
jbe
leave
sahf
addb
arpl
jb
or
cmp
loop
sarb
push
ret
sub
add
notb
scas
das
jbe
shrb
popa
xchg
repz
sti
test
adc
xchg
or
lret
outsb
fsts
stos
xchg
divb
fbld
dec
push
leave
dec
cmpsb
or
scas
sub
in
mov
add
sub
lods
jle
nop
mov
stc
into
sub
insb
add
cmpsb
lods
fcoml
cmp
imul
push
inc
and
leave
push
pop
push
dec
test
push
xlat
jnp
jne
clc
lcall
jnp
lea
enter
std
and
sub
push
jle
or
adc
inc
xlat
xchg
pop
sbbl
add
mov
popa
lahf
ss
mov
call
aaa
sbb
pop
cmp
mov
xchg
dec
psubb
adcb
and
cmpsb
jae
inc
faddp
sub
sub
push
mov
jne
je
xchg
and
push
jmp
push
test
loop,pt
repz
out
cmpsb
add
mov
cmp
inc
in
std
inc
fsubrs
jle
lahf
xor
pop
test
out
lea
jbe
mov
mov
push
stos
cmp
cld
test
sbb
inc
in
ja
aam
test
lods
jecxz
js
test
stos
dec
iret
pushf
shll
out
push
xlat
inc
shl
mov
jne
add
push
push
xor
imul
add
push
sub
scas
xchg
add
lods
jo
pop
inc
in
cmp
lret
scas
mov
lock
adc
pop
jmp
int
xchg
push
jb
lea
pop
sub
jecxz
fwait
cmp
push
push
cmp
sub
pop
and
inc
fadds
inc
and
mov
dec
cs
push
adc
loopne
and
popf
or
xor
mov
add
mov
or
push
movsl
push
nop
imul
pop
outsb
cli
cmp
rcrb
scas
and
rcrl
sub
dec
sbb
ret
insb
es
cmp
adc
add
xchg
mov
int
fcmovnu
movsb
xor
pop
jp
pop
inc
ljmp
adc
xor
push
sti
inc
mov
ljmp
mov
mov
sbb
adc
lahf
outsb
mov
push
rclb
or
mov
xor
fadd
sti
xchg
aam
xor
jne
adc
ja
es
sub
or
jecxz
call
cs
std
pop
push
xchg
lea
mov
mov
mov
mov
setne
mov
jp
inc
sti
subl
mov
cltd
add
adc
sub
and
mov
pop
push
sub
aaa
inc
stc
nop
ss
loop
xchg
clc
test
or
xchg
dec
jecxz
icebp
iret
int
test
into
ret
fcmove
inc
test
mov
je
lds
mov
clc
add
cli
jae
and
pop
push
mov
xor
in
aaa
jo
cli
cltd
inc
cs
mov
push
ljmp
jno
push
popf
jp
sti
aam
pop
cs
add
inc
les
test
loope
inc
pushf
lods
mov
or
icebp
push
cltd
je
cwtl
leave
pminub
xchg
nop
mov
in
lock
movsl
std
inc
and
movsb
gs
xor
push
xchg
aam
lret
cmp
negb
push
push
lcall
and
adc
xchg
mov
or
xlat
jnp
sub
jmp
cmp
push
inc
pop
cs
repnz
push
pop
xor
insb
mov
pop
test
or
add
js
mov
mov
sbb
adc
pop
lods
xchg
lahf
cli
mov
ss
cmpsl
sbb
push
or
push
nop
std
and
mov
aam
stc
push
sub
in
shl
inc
mov
cmp
cwtl
call
and
rcl
iret
pop
add
dec
mov
jne
mov
and
addr16
sbb
jmp
mov
repz
aad
rolb
ret
add
pop
jno
mov
cs
lea
mov
addl
inc
xchg
sarl
xchg
dec
movq
pop
cmp
bound
jns
fidivl
lods
fcmovnb
pop
movl
xchg
testl
fbld
xchg
mov
xor
lea
push
inc
cmc
enter
sub
rorl
pusha
pop
sub
test
adc
adc
sti
test
inc
fsubrl
int
mov
cwtl
lahf
stos
add
pusha
js
lods
fldcw
mov
xchg
test
lcall
push
call
jl
or
nop
in
push
lock
cmc
jl
jb
mov
pop
pop
inc
arpl
fildll
js
mov
pusha
ja
pop
dec
xchg
std
sbb
lret
mov
nop
clc
pop
lock
aaa
xor
jg
mov
sub
test
xchg
lods
mov
fwait
xor
hlt
mov
fldt
aam
add
test
leave
loope
xchg
loop
lea
pop
mov
shrl
mov
aad
dec
cmpsb
ja
daa
inc
and
xchg
add
inc
pop
mov
fstpt
mov
aam
push
xlat
outsb
cmpl
pop
int
cmc
int3
cmp
fbstp
rorl
in
into
std
inc
add
insb
fistpll
fistl
adc
xchg
cmp
je
shl
jno
into
movsb
aas
leave
add
sbb
jge
movsl
inc
ret
push
ljmp
shll
push
pop
sbb
mov
add
and
push
add
jbe
jl
xor
push
inc
fstps
dec
jecxz
call
cmp
pop
ret
or
stc
fisttpl
pop
outsb
pop
insb
adcl
or
push
data16
out
mov
inc
lahf
sahf
xchg
pusha
repz
xor
les
push
ret
cs
mov
out
jns
mov
jmp
cmovbe
into
sti
cltd
insl
or
sbb
mov
push
mov
imul
imul
pushf
add
insl
jmp
inc
fstps
ret
cmp
stos
or
daa
push
inc
jl
aad
push
movsl
mov
pop
add
sbb
jb
cmp
aad
cmp
fisttpll
sub
sahf
cmp
jecxz
push
scas
imul
stos
inc
jnp
mov
add
dec
pop
or
rcll
jns
pop
and
pop
jb
loope
cli
adc
and
unpckhps
out
xor
jne
loop
aad
cmpsl
repnz
jp
divb
sbb
add
xor
daa
outsl
sbb
sub
jle
inc
pop
sub
adc
dec
fcomip
jne
sbb
pop
sub
loop
sbb
sub
push
sub
pusha
dec
cmp
or
je
mov
loope
pop
call
mov
movsb
xchg
xlat
ss
sub
cmp
lea
gs
pop
jge
jle
dec
mov
inc
lret
push
adc
and
imul
or
outsb
aas
mov
pop
faddl
scas
jmp
jno
push
mov
out
data16
jge
add
stos
and
loope
inc
sti
xlat
lea
xor
and
out
jne
fwait
mov
test
push
pop
gs
jle
jge
jge
and
fmuls
fisttpll
daa
dec
incl
push
cmp
sub
cmp
dec
mov
idivl
mov
pop
icebp
cmc
or
aam
sbb
rorl
inc
das
cmp
cli
std
movsb
dec
push
sbb
sahf
xor
ss
mov
test
mov
test
xor
and
inc
sbb
pop
cmp
ret
pop
les
ja
out
cmp
dec
leave
les
sti
outsb
push
cwtl
jnp
xchg
xchg
pop
pop
sbb
mov
cmp
lds
nop
ret
pop
ret
push
and
or
stos
push
sub
je
sbb
xchg
inc
sbb
in
mov
cs
xor
out
jno
loope
adc
into
inc
push
pop
nop
push
lret
jb
sbb
fwait
push
cmp
mov
ret
inc
inc
pop
loopne
test
mov
add
sub
sub
mov
insb
inc
and
xor
scas
push
xchg
sbb
int3
mov
insb
jle
xchg
sbbb
jmp
int3
arpl
dec
ljmp
in
push
in
sub
data16
mov
mov
les
or
mov
xchg
cmc
sub
hlt
or
movsb
lea
jl
dec
lds
divl
pop
js
ret
cmp
lds
or
or
adc
xor
insb
mov
push
jecxz
je
xchg
ror
decl
je
cld
cmp
sbb
lods
ficomps
jl
sub
stos
pushf
mov
cmp
sbb
jl
aas
orb
and
gs
int
push
jp
mov
jb
fwait
add
and
xchg
push
cmp
mov
or
dec
mov
add
cmpsl
bound
imul
mov
mov
fmulp
popa
or
inc
cltd
jae
fldcw
inc
loopne
neg
ss
jge
push
sbb
xor
add
cmpsl
fistps
and
fwait
and
mov
daa
mov
stc
or
mov
ja
pop
rorb
jge
ret
mov
dec
push
or
inc
outsl
nop
notb
shll
inc
ffreep
out
cmp
push
dec
je
jl
stos
das
fwait
sub
xchg
pusha
aaa
jnp
daa
insl
xchg
mov
pop
mull
ljmp
pop
ret
sub
xor
mov
mov
xchg
lods
mov
test
adc
js
test
mov
fistl
pop
arpl
push
cmp
arpl
sub
imul
lock
fsubr
nop
mov
js
push
sbb
or
add
cmp
fadds
pushf
sahf
fsubs
push
cmp
aam
push
imul
fstp
xchg
sub
jl
call
and
dec
jle
into
mov
lea
stc
iret
jae
xchg
movsl
lock
insb
add
and
inc
test
outsb
push
fisubrs
push
mov
ja,pn
inc
shl
pop
pop
js
push
insl
rorl
mov
add
dec
cld
dec
mov
imul
lds
icebp
test
xor
mov
std
loopne
ficoml
xor
out
push
push
aam
cmp
mov
pop
lock
pop
add
into
sub
lods
mov
or
popf
cld
cltd
inc
fmulp
push
and
cs
dec
aam
push
jle
outsl
nop
push
lods
mov
push
jp
mov
fistl
push
or
lds
loop
mov
push
dec
decb
jne
jns
inc
push
aaa
sti
loopne
xchg
sbb
xlat
jne
inc
pop
ja
xor
call
sar
add
pusha
insl
mov
inc
andl
sbb
xchg
adc
adc
fildll
adc
hlt
enter
sub
sbbl
cmp
xchg
push
sub
scas
imul
in
jb
add
xchg
push
inc
int3
dec
pop
testb
jge
in
test
xchg
add
in
in
pop
xchg
scas
mov
cmc
mov
test
sbb
movsb
data16
movhps
mov
xor
jb
andb
sub
shrb
mov
lock
outsl
mov
iret
sarb
lea
mov
ret
jg
xchg
mov
lahf
data16
sbb
push
stc
idivl
push
jbe
cmp
insl
add
ret
and
or
mov
ret
xchg
inc
fstpl
cmp
sbbb
addr16
lods
inc
ret
jecxz
prefetch
ja
test
sub
pop
loope
or
cmp
push
sub
fidivl
xchg
iret
data16
test
or
sti
ret
es
test
or
movsl
shll
push
movsb
jo
xchg
inc
sbb
test
or
pop
std
ret
jp
ja
sbbb
inc
pusha
or
cmp
mov
dec
adc
mov
in
movsb
cmp
add
cli
das
inc
dec
and
call
xor
push
hlt
or
insb
inc
out
ja
jne
adc
insb
inc
dec
mov
aaa
fldl
movsb
sbb
fwait
sahf
adc
icebp
lret
mov
scas
xchg
mov
adc
movsb
xor
pop
cmpsb
dec
cmp
mov
aam
rclb
sub
lods
aas
xchg
jno
cmpsb
pop
pushf
mov
in
icebp
jnp
cli
cmp
add
pop
andl
arpl
loope
add
xor
push
mov
lret
out
sbb
add
outsl
jno
inc
dec
sbbl
pop
out
dec
cmpsb
sub
sbb
clc
das
lock
pusha
pcmpgtd
lods
dec
and
cmp
leave
pusha
lods
or
mov
outsl
nop
lret
ss
nop
dec
aam
sub
adc
or
mov
sbb
rcrl
inc
pusha
popa
sbb
inc
stos
stos
fnstsw
bound
fdivrs
das
push
shrl
jns
and
lcall
cmp
bound
pop
pop
xor
mov
pop
dec
mov
pop
fidivl
add
shrl
mov
adc
scas
adc
leave
test
xchg
xor
insl
rcl
sbb
mov
push
push
pop
jo
lea
jne
xor
fadds
mov
inc
push
sahf
stc
pop
jae
add
rol
cmp
dec
fnstenv
subb
outsl
mov
mov
int
inc
fstl
sbb
ss
imul
imul
out
lea
lret
loope
push
testb
xchg
and
xorb
cs
push
lods
enter
dec
in
xrelease
inc
imul
mov
mov
xchg
cld
xchg
ret
leave
jo
cltd
arpl
push
jae
cmp
in
fistpl
cs
aad
movsb
cmp
jp
mov
xor
xchg
sub
and
push
xor
aad
mov
xchg
daa
sbb
cli
mov
mov
xchg
fwait
lods
push
lcall
cmpsl
sbb
push
ljmp
mov
mov
pcmpgtd
fstps
push
mov
mov
mov
fucom
mov
mov
in
out
adc
mov
call
sbb
pop
call
stos
hlt
in
pop
loop
sbb
test
ss
scas
cmp
mov
inc
incl
and
addl
and
dec
pusha
push
lods
inc
xchg
push
or
sub
bound
or
mov
mov
aas
cmc
std
xchg
pop
shr
cli
ret
mov
enter
adc
add
daa
lcall
insl
orb
or
rolb
inc
jb
jge
and
xor
mov
xchg
jno
xlat
sub
jle
push
mov
aas
pop
mov
sbb
adc
cmpsb
lea
pop
icebp
test
adc
in
pop
mov
lea
mov
adc
and
pop
pop
mov
addl
repz
xchg
lods
dec
mov
jge
cs
xchg
adc
push
xchg
jns
arpl
mov
test
fmull
loop
ret
mov
repz
pop
stc
dec
cmp
lock
pop
xor
insb
arpl
cmpsb
and
aaa
into
xor
mov
and
and
ja
pop
bound
mov
xchg
ret
mov
lods
std
sbbb
cmp
and
push
mov
bsf
xchg
mov
xchg
jo
filds
add
fucomi
in
mov
mov
jmp
ds
cmp
dec
and
pop
or
mov
sti
jne
cltd
push
push
lret
aad
loop
cmpb
fstpt
es
inc
insl
xor
pop
or
sub
mov
stc
es
lods
sub
adc
aam
jns
mov
in
and
es
dec
in
pop
aam
mov
inc
call
gs
das
or
out
push
jmp
mov
jno
mov
xchg
mov
rorl
bound
insl
clc
int3
arpl
xor
sub
outsb
mov
into
jb
or
std
arpl
cs
push
mov
push
push
or
fwait
mov
mov
fadds
mov
arpl
leave
pop
adc
lret
push
fsubrl
adc
mov
std
ss
repnz
mov
mov
inc
test
mov
cmp
leave
push
flds
adc
mov
lret
mov
or
loopne
mov
vmovaps
enter
movsl
jge
mov
dec
mov
cmpsl
out
xchg
hlt
mov
cmp
sarb
popa
mov
mov
roll
or
out
mov
mov
cwtl
int3
movsl
or
cli
test
inc
mov
jp
aam
sbb
into
clc
pop
xchg
xlat
sub
je
ss
outsl
xchg
pop
scas
nop
int
cmp
cmp
dec
pusha
lods
xor
add
int
dec
rorl
push
pop
xor
cmpsb
pop
mov
lret
lret
jp
mov
jno
pop
sub
enter
sbb
push
jae
cmpsl
jno
cmpsl
push
imul
cmp
pop
dec
inc
lahf
sub
int
inc
std
notl
in
mov
insb
mov
lahf
out
cld
rol
cmp
xchg
aaa
mov
jg
cld
out
mov
shll
sub
or
es
jmp
mov
int
mov
cld
xchg
data16
or
cmp
sbb
repnz
dec
push
fadds
pusha
mov
ja
ss
sub
out
jns
add
mov
mov
into
fidivrl
int
in
into
in
popl
inc
lcall
and
adc
cltd
test
and
cmpsb
xchg
das
or
jge
cli
cwtl
and
jae
pop
mov
fs
mov
loop
pop
test
lock
inc
push
push
xchg
add
clc
jae
out
jno
out
in
inc
push
dec
add
pop
call
pushf
das
lock
popf
mov
push
xchg
jmp
xchg
jnp
xor
or
pop
sahf
inc
into
loop
or
ljmp
movsb
mov
movsl
out
inc
popf
cmpsb
les
and
inc
out
adc
xor
aad
add
test
jecxz
into
pop
sahf
cmc
push
pusha
nop
adcb
xchg
inc
loope
inc
arpl
mov
push
fsubrs
scas
mov
mul
sub
sbb
cld
cmp
insl
jmp
fbstp
jl
loope
sub
lcall
dec
xlat
xor
jnp
lcall
loope
mov
pop
repnz
sti
add
iret
data16
jg
insb
mov
shlb
sub
fs
or
rcrb
andl
mov
jns
out
xor
or
sbb
loopne
in
std
movsl
ret
xor
pop
test
sahf
mov
clc
in
test
push
imul
jb
xor
es
add
adcb
imull
lretw
and
pushf
stos
push
sub
jbe
sub
fdiv
add
add
and
jae
lods
cmp
adc
add
lea
add
popf
push
jg
jbe
sub
loop
and
push
pop
mov
xchg
data16
outsl
sub
mov
data16
rcll
xor
push
jmp
or
and
mov
sub
shll
pop
or
adc
jnp
sahf
ds
jp
sbb
mov
xchg
sub
push
in
dec
push
mov
push
divb
pop
stos
mov
cld
xchg
jmp
cltd
xchg
jno
cltd
insb
movsb
andl
nop
mov
push
lcall
cmpsb
cld
data16
lret
pushf
clc
sahf
xchg
xchg
fnstcw
add
sub
fnstenv
mov
in
or
pop
or
aam
int3
add
sbb
or
xchg
adc
sbb
mov
cli
jbe
push
call
inc
movsb
inc
mov
jmp
stos
mov
outsl
seta
dec
adc
jp
cmp
or
insb
ret
push
or
mov
pushf
cmpsb
dec
popf
cmp
enter
push
or
lea
pusha
cmc
inc
adc
cmp
pushf
div
push
je
jo
movsl
mov
add
pop
sub
out
jecxz
arpl
jl
arpl
sub
lcall
gs
repz
push
jnp
adc
adc
mov
jle
js
stos
outsb
xchg
mov
aad
adcb
jae
mov
push
outsl
jne
shll
and
repnz
ret
pop
pop
jg
nop
cmpsb
idivb
test
xchg
mov
out
lock
fnsave
adc
insl
aad
imul
mov
repnz
fdiv
nop
adc
sbb
out
sahf
into
cmp
mov
push
call
ljmp
cmc
movsl
js
jl
pop
popa
ret
jecxz
hlt
andb
scas
xchg
add
jae
test
loop
es
inc
mov
clc
cmp
insl
addb
imul
jecxz
aas
cmpsb
sbb
mov
push
xlat
mov
mov
dec
imul
scas
outsb
mov
out
sbb
dec
inc
or
mov
and
hlt
mov
lret
jae
adc
pop
fbstp
dec
mov
push
out
adc
adc
ss
insb
cmpsl
or
inc
inc
jbe
or
mov
mov
adc
jo
mov
insb
and
mov
aaa
jge
lods
xor
test
nop
lds
jbe
add
or
cmc
mov
xor
mov
out
adc
sbb
sti
arpl
adc
push
mov
fldt
mov
pop
jnp
pop
lcall
pop
icebp
pop
lahf
push
mov
push
inc
mov
push
inc
flds
pop
loope
xor
inc
xchg
leave
fists
scas
push
inc
shll
sub
push
lock
out
iret
pop
test
test
xorb
mov
and
popf
out
nop
push
jecxz
pop
stc
ret
das
outsl
mov
pop
ljmp
push
inc
negl
dec
jge
mov
mov
or
mov
cmp
mov
xlat
insl
leave
pop
sbb
cmp
fwait
cmp
das
and
scas
faddl
lods
mov
xchg
sub
pop
shlw
adc
inc
cmp
outsl
enter
lret
jle
lods
stos
inc
lods
sub
test
cmp
loop
aam
roll
int3
sub
pop
ficompl
shl
push
insl
adc
scas
xor
aas
xchg
jnp
pop
cwtl
adc
push
roll
loope
js
pop
adc
push
lods
cmp
push
stos
fs
subl
in
xchg
push
jge
xchg
stos
or
jae
inc
stos
add
mov
out
ja
inc
fldcw
ds
inc
cltd
pop
jecxz
orb
cs
rolb
fcmovnu
scas
inc
cs
int
inc
push
pop
mov
jne
inc
push
inc
jbe
cmpsb
cmp
xor
jp
sub
xchg
pop
lds
jns
push
jle
inc
pusha
and
mov
xchg
mov
cmc
or
or
imul
shrl
arpl
dec
mov
lds
add
jg
pushf
push
out
pop
int3
arpl
repnz
xchg
adc
adc
int3
ds
pop
dec
push
and
or
rcl
sub
in
pushf
or
test
push
jl
shlb
pop
push
pop
push
mov
lods
ss
or
test
in
addr16
loop
sbb
aam
jnp
aas
shrl
into
xchg
adc
xchg
inc
inc
scas
inc
je
cwtl
xor
out
int
mov
loopne
jecxz
cltd
mov
clc
stos
pop
dec
mov
adc
inc
out
push
popa
int
push
bound
adc
imul
ss
mov
and
dec
xchg
ret
mov
cmpsl
jb
jge
adc
cmc
ss
push
fidivrs
shl
push
xchg
test
push
fwait
ss
fsubr
out
pop
imull
dec
xor
jno
cmp
lret
fcoms
popa
fdivs
pop
sub
xchg
int
adc
mov
lods
mov
das
stos
test
or
jecxz
pop
in
pop
sbb
cmc
mov
idivb
mov
je
movsl
mov
jae
sub
mov
insl
mov
outsb
out
or
movsl
push
les
mov
testl
mov
in
gs
pop
ds
push
xchg
xchg
jmp
cmp
mov
nop
add
outsb
test
pop
hlt
push
jg
jb
add
nop
icebp
ficomps
fisubl
enter
ss
imul
mov
fucomp
ljmp
jno
fbstp
inc
sub
call
iret
shrl
add
lea
loopne
lock
mov
xorl
inc
out
insl
lea
adc
inc
dec
or
push
xor
push
lcall
cmpsb
in
mov
ss
and
sbb
mov
and
sbb
iret
fldt
enter
in
bound
jo
mov
js
call
lcall
mov
int3
mov
xchg
insl
jmp
inc
fiaddl
xchg
mov
dec
fnstcw
push
push
and
mov
gs
mov
stos
dec
fsubrl
ljmp
mov
and
sub
push
push
push
sbb
push
into
stos
push
sub
in
stc
inc
call
push
in
xchg
fwait
arpl
repnz
lret
lahf
sbb
int
add
push
ja
outsb
push
lock
stos
fldt
add
jle
push
daa
and
mov
inc
sti
jbe
shl
shrl
fnsave
neg
test
cld
aas
mov
adc
jae
mov
jecxz
mov
push
or
pop
or
push
or
cmpl
stos
cmp
movsb
xchg
fcmovb
cmp
loop
xor
sub
or
sbb
and
insl
inc
push
jmp
pop
push
push
ljmp
cmp
int3
mov
xchg
lret
mov
sub
les
add
sub
ss
fiadds
jge
mov
fs
mov
jb
push
movsb
jl
es
jo
cltd
arpl
cltd
pop
lret
loopne
mov
mov
sbb
rolb
ss
jb
or
enter
int
leave
scas
push
sub
lods
pop
ja
into
fiadds
data16
pop
and
cmp
test
fsubrp
cmp
pop
jmp
movsb
sub
xorl
ljmp
lock
repnz
stos
fists
push
pop
jae
loope
push
aas
out
xchg
or
dec
lahf
clc
orl
push
inc
xlat
cmp
cwtl
imul
and
cmc
and
arpl
push
hlt
mov
fwait
xor
movl
sub
scas
push
faddl
inc
or
imul
stos
lret
mov
in
pop
rcr
add
testl
add
not
imull
pusha
je
idivb
or
mov
pop
mov
push
mov
sub
pop
lea
cli
xchg
aad
xor
subl
jnp
pusha
push
jne
ret
out
jmp
test
xchg
loop
pop
jg
negl
mov
add
sub
xor
test
push
and
aam
mov
jae
stos
pop
icebp
jbe
push
shl
jp
out
pop
jae
sbb
stos
loopne
push
js
jl
rol
popa
add
add
adc
jmp
in
mov
jp
cli
popa
jns
add
test
or
cmp
lcall
push
in
cmp
jmp
cmp
out
in
xchg
imul
popf
mov
sbb
sub
pop
scas
out
dec
ja
lea
jns
and
push
sub
dec
push
add
cmp
sub
cltd
fadds
sti
in
loope
fisttps
daa
ljmp
pop
xchg
cli
in
pop
out
push
lcall
dec
cmp
cmpsb
insl
imul
test
call
jnp
sbb
mov
and
addr16
lret
mov
fsub
xor
arpl
shl
outsl
inc
sbb
jbe
js
test
hlt
mov
mov
lret
lock
test
push
and
stos
push
push
iret
pop
inc
sbb
xchg
push
inc
or
sub
hlt
pop
cmp
add
gs
xchg
xchg
sbb
es
lods
fs
inc
push
addb
cmp
push
jne
in
into
test
xchg
sbb
cs
lret
xor
push
shr
clc
mov
xor
out
fadds
jle
std
xchg
out
inc
push
jl
pop
push
push
pop
push
ret
pop
dec
jg
sahf
fs
js
or
mov
jns
push
xchg
dec
add
fcmovu
sub
mov
or
sub
inc
data16
in
mov
lahf
sub
leave
in
es
push
jmp
in
and
test
repz
push
push
ljmp
outsb
scas
and
out
fsubrp
sub
xor
insb
out
ja
push
in
je
jnp
push
xchg
inc
lods
stos
repz
insb
push
sbbl
call
aas
ds
ja
inc
fs
push
push
push
mov
aaa
popa
lret
jmp
mov
jmp
lea
repz
lds
outsl
cs
mov
lcall
pop
xchg
push
test
test
jb
leave
daa
cmc
push
dec
adc
pushf
inc
and
pop
pop
cs
mov
mov
and
les
fdivl
stc
push
mov
nop
adc
xchg
xor
fbld
xchg
mov
mov
pop
push
js
lcall
mov
xchg
mov
in
xchg
jg
test
and
push
cmp
into
adc
cmpsb
fsubrs
push
pop
xor
bound
out
popf
or
mov
idiv
lret
fcmovb
nop
pause
lods
adc
hlt
movsb
divl
lds
out
push
insb
mov
fnstenv
dec
lcall
adc
mov
in
mov
fidivl
inc
arpl
adc
imul
push
inc
pop
mov
ljmp
xor
xor
jecxz
int
out
add
setg
push
jo
jl
popf
mov
lea
and
mov
and
repnz
pop
fiaddl
push
mov
fs
or
jnp
jmp
cwtl
pop
fcoms
or
and
mov
jmp
adcb
push
out
jecxz
int
mov
and
cli
push
aaa
ljmp
add
and
sbb
pop
mov
into
mov
mov
and
inc
fcomip
into
mov
test
sti
xchg
add
in
mov
fiaddl
fs
add
scas
test
mov
jle
clc
outsl
into
cwtl
fisubrl
cli
mov
addr16
mov
cmc
mov
pop
pushw
pop
icebp
scas
xchg
mov
ret
sar
and
mov
leave
aam
addl
bound
cltd
cmp
loopne
out
cmp
pop
ss
inc
push
push
std
mov
lcall
cwtl
das
insb
pop
dec
mov
mov
in
cmp
insl
xor
mov
sub
cmp
lret
fisttpll
call
jo
xchg
mov
pusha
pop
idivl
popf
xor
jg
xchg
es
mov
setae
mov
jge
jp
add
inc
jae
nop
test
leave
sub
push
aaa
rclb
lock
int3
fcoms
out
jecxz
and
adc
push
mov
sub
push
sub
mov
mov
insl
aaa
fs
xlat
pop
cmp
outsb
shrb
negl
jle
push
cwtl
fsub
push
push
push
mov
mov
mov
int3
mov
std
aam
popa
push
std
pop
inc
add
pushf
inc
es
pop
add
adc
outsb
sbb
mov
int
das
out
pop
jns
mov
add
test
mov
sub
inc
or
inc
mov
fists
in
fcompl
repnz
jns
rcl
pop
scas
clc
lcall
mov
and
sub
mov
pop
in
xchg
sbb
cli
dec
repnz
shlb
nop
dec
mov
pop
xor
insl
mov
loopne
add
pop
mov
icebp
orb
push
mov
ss
push
push
xchg
mov
jnp
in
mov
push
jnp
dec
imul
mov
jle
inc
inc
inc
push
gs
test
or
insb
loope
dec
sahf
pop
test
pop
cwtl
das
add
test
adc
je
clc
xor
outsb
push
and
add
sbb
xlat
lods
add
das
outsb
repz
mov
mov
fcmove
mov
test
repz
stos
sbb
pop
into
repnz
or
lods
mov
adc
lret
or
mov
cwtl
in
push
and
sahf
jecxz
cwtl
imul
pop
repnz
mov
jp
push
les
mov
sbb
out
add
sub
jl
cmp
xor
clc
fmul
add
push
movsb
mov
int
in
rclb
imul
out
sahf
xor
mov
in
or
out
mov
cmp
sub
sarl
add
cmp
mov
notb
repnz
and
popa
aam
sahf
add
es
je
incl
jg
sbb
and
add
dec
xor
mov
inc
push
and
inc
fsubrl
movsl
inc
testb
das
dec
add
jbe
pushf
pop
cld
sbb
jle
mov
or
clc
and
mov
mov
dec
jecxz
sbb
pop
xor
out
cmp
push
xchg
add
aaa
clc
mov
imul
ljmp
mov
ss
push
out
test
lret
data16
test
imul
sbb
sahf
dec
cmpsl
xchg
mov
das
leave
popl
jnp
shrl
jb
cltd
mov
sbb
out
pop
lock
and
rcrb
mov
or
adc
fadds
insl
ja
push
andl
mov
je
adc
hlt
dec
pop
mov
ds
rorl
in
and
mov
ret
sub
movsb
stos
sbb
rcll
add
inc
or
xor
or
xor
sbb
rclb
shll
rcrb
daa
dec
xchg
stc
push
cmp
leave
jae
dec
pop
setne
and
std
jecxz
nop
xor
decl
mov
xchg
cmpsb
cmc
pop
mov
fs
push
dec
in
test
or
mov
xor
jbe
hlt
mov
pushf
mov
xchg
push
push
movsl
and
adc
push
inc
cli
adc
dec
mov
test
push
mov
or
inc
inc
or
adc
dec
push
lcall
push
popf
pop
inc
pusha
xchg
daa
call
and
lods
xchg
add
mov
or
fs
xchg
adc
gs
mov
in
cmpsb
push
mov
ss
inc
xchg
popa
dec
push
xchg
aad
xor
xchg
repnz
pop
inc
pop
sbb
mov
nop
and
xchg
xchg
adc
jmp
out
loopne
xchg
orb
insl
inc
adc
movsb
pop
js
add
cwtl
loop
and
mov
das
std
mov
cs
mov
add
dec
jno
testb
cmp
in
xchg
divl
pop
movd
jno
mov
data16
xchg
xchg
mov
aam
inc
idivb
or
xchg
ret
je
xchg
call
or
push
pop
gs
dec
and
sbb
cli
in
jbe
int
and
adc
das
inc
push
mov
test
inc
ds
sbb
dec
or
mov
ret
les
mov
pop
push
fwait
jae
testl
cmp
jp
mov
inc
xchg
es
fs
lds
mov
stc
lcall
sbb
xor
fsubrs
mov
jno
push
pop
popf
shll
adc
mul
cs
pushf
sub
and
lea
ret
lret
jo
shr
enter
inc
or
mov
fwait
mov
aad
push
in
pop
jg
push
inc
pop
xor
pop
int3
or
dec
lods
add
in
push
sub
pop
xchg
mov
and
dec
xor
call
inc
sbb
ret
ss
adc
push
pop
into
js
fs
in
jmp
jo
imul
mov
mov
inc
adc
xor
scas
jecxz
sahf
shlb
loopne
call
daa
nop
cld
rolb
fwait
mov
dec
stc
adc
rolb
lods
push
adc
sub
xchg
sbb
add
stos
iret
push
pushf
lahf
sbbb
pop
pop
dec
ret
jnp
divb
add
fidivrs
andl
jmp
sbb
pop
cmp
popf
jmp
lahf
pop
mov
mov
data16
xor
jl
jg
cmp
push
popf
je
gs
add
icebp
mov
shll
add
pop
or
aaa
adc
pop
mov
jecxz
mov
lock
xchg
fdivrl
fbld
es
xor
enter
pop
xchg
sbb
jb
pop
jp
out
fucom
pop
cmp
pop
fwait
xor
call
dec
daa
mov
adc
hlt
cmp
xchg
cmp
xor
js
sbb
jmp
out
mov
in
or
mov
add
cwtl
push
mov
dec
rol
xchg
mov
les
hlt
ljmp
fdivr
sahf
push
pop
mov
cmp
jmp
leave
and
sub
add
inc
add
test
lahf
ss
pushf
repnz
rclb
movsb
pop
cmp
xchg
mov
addl
cmp
out
mov
push
xchg
jno
xlat
lahf
adc
inc
dec
add
dec
xor
in
mov
fdivl
mov
aad
arpl
ljmp
mov
add
ss
imul
and
and
xor
xor
mov
adc
jno
das
das
pusha
dec
cmpsb
icebp
push
push
pop
or
dec
mov
push
cmp
cmp
or
sub
and
bndstx
call
js
rclb
test
xchg
loope
or
mov
dec
cltd
xor
mov
jns
push
mov
mov
les
push
sub
mov
mov
shrb
and
xchg
stos
in
jnp
cmpsb
add
fstl
cmp
inc
inc
xor
mov
jp
mov
fnstcw
mov
pop
aas
std
ds
xor
daa
outsb
icebp
add
cmp
push
call
cmpsl
xor
jne
imul
lret
sbbb
push
shlb
inc
jecxz
loopne
insb
jg
inc
mov
test
ret
notl
add
std
repnz
push
cmc
mov
aas
mov
lcall
ss
and
icebp
cmp
repnz
push
and
push
outsl
pushf
pusha
dec
jmp
add
enter
push
shr
sbb
push
arpl
and
mov
mov
in
scas
add
lcall
inc
and
xchg
je
sti
jbe
and
push
fsubp
pop
sti
loope
adc
out
fisubrl
adc
cmpsl
mov
sub
push
jae
mov
dec
sub
js
fiadds
cwtl
mov
fistpll
fs
dec
dec
adc
cmp
dec
cmp
push
fbld
out
cmc
pop
mov
movsl
popw
rorb
pop
cmc
ljmp
xlat
dec
leave
test
jle
stc
mull
mov
xor
inc
nop
aaa
jp
dec
jmp
mov
ja
mov
ret
adc
xchg
sub
cmpsb
dec
lcall
fldl
or
push
cwtl
stos
jp
sahf
xor
ds
xchg
adc
xchg
aad
jp
pop
mov
pushf
pop
jp
or
orb
mov
push
dec
pop
push
lret
icebp
lahf
ss
out
add
mov
fwait
insb
data16
out
cmp
xor
xor
mov
scas
mov
shll
lahf
in
loopne
in
cli
cld
jg
sbb
ljmp
jge
jecxz
out
jmp
test
sbb
dec
insb
cmp
les
sbbb
ss
dec
outsb
nop
add
pusha
movsl
xchg
push
add
inc
push
stos
add
ljmp
adc
hlt
pop
pop
jg
and
mov
pop
sbb
adc
jl
push
mov
cmpsl
ds
jbe
je
push
xor
push
or
ret
popa
cmc
cmp
lcall
fdivrl
lods
std
add
cmp
dec
pop
lods
fdiv
push
add
xor
js
adc
pop
pop
mov
push
clc
test
push
adc
dec
int
add
push
mov
mov
sbb
jbe
repz
dec
jnp
imul
ret
jns
stos
or
scas
mov
xor
insb
mov
and
jbe
jae
mov
fimuls
fistpl
sbb
cs
bnd
les
fadd
call
leave
cmp
stos
add
gs
adc
cmp
xor
cmc
mov
mov
sub
cltd
sbb
into
pop
xchg
hlt
pushf
xchg
jns
jnp
popa
mov
mov
fidivl
into
mov
jne
fsubrp
mov
stc
adc
adc
inc
mov
jge
loope
daa
dec
cmp
jmp
xchg
out
addb
xchg
pop
add
sbb
repnz
fisubs
sub
lea
aam
into
dec
mov
popf
and
or
mov
cmp
mov
andb
cmp
and
add
scas
nop
mov
dec
dec
outsl
and
inc
mulb
inc
cmp
adc
lahf
popl
fisubl
push
dec
push
jg
cmc
mov
adc
xchg
scas
lock
cmp
cmp
in
lock
nop
adc
sbb
pop
inc
fmull
mov
sub
or
int
and
popf
insb
in
mov
pop
loop
leave
xor
inc
dec
loop
out
push
jo
push
push
push
pop
imul
dec
inc
push
hlt
cs
sub
ja
stos
inc
mov
out
lea
add
repz
mov
out
int3
and
jecxz
cmc
add
imul
xor
mov
sbb
mov
rcrb
mov
mov
mov
stos
rclb
sbb
lret
mov
push
lods
sbb
fnstsw
shrb
pop
xor
sbb
stos
adc
mov
or
inc
pop
adc
or
das
ja
jg
sub
jno
mov
add
out
ljmp
mov
rorl
loop
out
jl
push
sub
aaa
sbb
popa
add
pop
aad
mov
mov
orl
xor
pop
andb
in
adcb
fs
std
xchg
lcall
mov
not
scas
loop
cmp
adc
rcr
mov
ret
sbb
mov
in
jp
pop
test
adc
call
jns
scas
inc
mov
add
scas
pop
int
xchg
push
sub
pusha
add
mov
jbe
scas
scas
xlat
dec
add
rcrb
add
adc
enter
push
aad
xor
test
adc
ja
sbb
das
inc
popa
aaa
cld
mov
inc
xchg
cli
sbb
inc
repnz
les
push
pushf
and
xchg
es
push
roll
mov
push
xchg
sub
add
daa
cs
inc
fcmovb
stos
inc
xor
push
lods
ss
lret
mov
cmpsl
xor
cltd
sarb
icebp
fsubl
adc
adc
xor
xchg
scas
ret
ret
mov
test
xlat
scas
adc
or
lcall
adc
push
rcrl
xchg
xchg
push
adc
fucom
dec
jmp
jge
ja
sti
xchg
clc
adc
insb
add
adc
lea
mov
arpl
test
or
cmp
iret
sub
fdivs
fs
jl
inc
cli
inc
je
add
addl
xor
stos
inc
pop
push
ljmp
cmpsl
or
loope
lds
mov
fdivrs
loop
xor
roll
insl
in
jns
in
imul
nop
push
xlat
pop
ljmp
mov
xchg
je
sbb
mov
add
rcrb
in
push
fpatan
sbbl
push
inc
test
rcl
and
outsb
xor
call
xchg
pop
sub
adc
add
pop
adc
in
cltd
jp
dec
xchg
add
rcrl
jae
push
imul
jae
fucomp
or
xchg
mov
andb
sbb
adc
cmp
call
mov
jae
adc
jns
sub
sti
movsl
fcmovnb
fwait
mov
lds
or
fnsave
outsl
push
rclb
call
in
mov
pcmpeqd
xchg
adc
xor
sbb
arpl
call
sarb
leave
cmpb
mov
cmp
xlat
mov
inc
jne
data16
mov
mov
leave
mov
push
push
pop
jbe
lock
aas
push
test
jae
mov
adc
mov
fidivl
out
jge
scas
cmp
stos
mov
mov
xchg
lret
sub
popa
add
or
push
push
in
je
faddl
xchg
or
jns
jbe
inc
aam
dec
aad
sbb
call
push
lods
sbb
popa
call
pusha
pop
jae
mov
ret
mov
inc
push
dec
shll
jmp
incl
lret
adc
or
fbld
xchg
sub
sub
cwtl
jmp
aas
cmp
and
cwtl
push
hlt
mov
sub
mov
jle
or
aaa
popa
es
add
rorl
mov
in
jo
and
inc
stc
pop
push
inc
dec
and
sub
loop
jl
sahf
gs
push
jp
and
sub
mov
loopne
or
jle
mov
jle
sub
stos
xor
ret
shll
jmp
add
lock
out
pop
scas
cmpsb
sbb
sbb
xor
test
xor
arpl
sbb
pshufw
inc
int3
dec
lods
sub
ss
lods
mov
lcall
lods
outsl
xor
jo
mov
out
stos
pushf
mov
repnz
adc
mov
mov
dec
fdiv
sbb
rclb
pusha
mov
sub
daa
mov
ret
mov
shl
in
mov
push
shrl
push
jge
lea
lock
lret
test
movsl
adc
sub
inc
aam
lods
sbb
mov
inc
adc
ret
mov
xor
mov
jne
pop
mov
shrl
out
mov
ds
push
jne
push
mov
xor
movsl
loopne
push
cmpsb
add
fdivrp
xlat
jnp
mov
mov
mov
pop
lcall
nop
xchg
jl
mov
mov
xor
sbb
divl
jns
xchg
inc
or
mov
dec
loop
aam
rcr
cmc
in
push
mov
inc
sbb
and
repz
icebp
push
pop
cwtl
pop
jb
inc
fcmovnb
es
pushf
andl
fists
jle
into
sbb
sub
prefetch
or
sbb
test
jbe
nop
mov
movsb
sub
inc
push
adc
xor
repnz
cmp
out
insl
lds
gs
cmp
idivb
xchg
notrack
push
cmp
inc
adcl
lahf
sar
ror
and
insb
adc
push
call
jno
jg
cwtl
into
mov
and
cmp
pop
sbb
jo
test
mov
clc
dec
out
loop
aad
div
or
in
inc
xchg
push
push
cwtl
xchg
cli
cmp
mov
gs
test
mov
stos
and
sbb
std
cmovns
out
or
mov
fidivl
imul
push
rolb
mov
or
mov
stc
rorb
jp
jmp
stos
mov
imul
enter
dec
jmp
insl
loopne
xlat
pop
jne
dec
jg
adcb
sub
or
lea
push
insb
sbbb
push
or
push
jae
mov
xchg
addr16
adc
xchg
xchg
push
mov
ret
fisttps
sbb
xchg
push
ret
pop
pusha
fcmovnu
inc
push
push
loope
cmp
insl
xor
lods
mov
outsb
test
stc
repnz
or
rcll
sbb
nop
lcall
cli
stc
fwait
lods
ficoml
jb
sub
lds
mov
jecxz
mov
test
int3
jg
dec
scas
popa
add
iret
jecxz
pop
int3
arpl
push
mov
lods
fadds
mov
int
adc
aam
pop
divb
lock
jl
aaa
into
ja
add
rcll
dec
fildll
dec
dec
dec
inc
and
es
xor
insl
arpl
cmp
jnp
jecxz
jmp
insb
jle
xchg
ret
scas
test
xor
xchg
xchg
or
mov
fldenv
outsl
fidivrl
jne
mov
or
or
mov
add
mov
notb
dec
push
sbb
fs
jp
bound
inc
xchg
lea
aam
push
insb
mov
jmp
mov
xchg
push
sti
enter
sbb
pop
sbb
inc
push
xchg
std
adc
bound
mov
xor
neg
inc
lods
dec
rcl
rorb
fidivl
stc
arpl
sub
pop
adc
enter
xor
fsts
pop
push
clc
repnz
mov
aad
inc
push
jbe
mov
jle
repz
aaa
and
out
lea
aaa
imul
and
incb
mov
fnsave
ret
sub
cltd
mov
rolb
mov
cld
xor
mov
mov
scas
ljmp
pushf
lea
adc
ljmp
lahf
xchg
lods
rorb
push
jnp
push
das
in
in
jle
push
mov
js
aam
int3
ds
loop
mov
aas
sub
inc
les
ljmp
inc
addr16
or
mov
movsl
mov
sub
in
xor
icebp
out
call
cltd
dec
dec
xchg
mov
sub
pop
sahf
mov
lods
out
mov
ljmp
xlat
add
cmp
pop
lcall
push
and
movsb
add
pusha
test
xchg
aas
daa
loopne
xchg
aad
or
cmp
inc
mov
icebp
mov
lods
rcll
jb
jbe
cmp
xchg
push
pop
fsts
mov
int3
fmull
repz
fstp
out
cmpsb
dec
loope
pop
push
out
adc
fisubs
xor
inc
test
jno
xchg
push
mov
jecxz
bound
mov
dec
mov
cs
call
jge
lods
inc
stos
out
push
inc
jmp
pusha
imul
pop
adc
jnp
mov
cwtl
pop
mov
or
outsb
es
faddl
test
mov
push
sbb
imull
lret
and
in
inc
pusha
ja
mov
cmp
movsb
mov
scas
xor
clc
cmp
sub
jl
mov
inc
enter
jo
fsubrs
cmp
cmp
les
les
sbb
jne
dec
out
jp
pop
adc
jle
ds
cmp
je
mov
fmul
xor
mov
cmp
fsubr
sbb
and
pusha
push
in
push
pop
sbb
xchg
xchg
ljmp
cltd
mov
adc
outsl
cmpsl
sub
repz
shrl
jb
hlt
jg
test
fnstcw
jb
sbbb
sbb
scas
dec
add
ja
ja
pop
pop
mov
clc
push
jg
cltd
jo
outsb
popf
xor
cld
and
push
sub
dec
aaa
add
movsl
cmp
clc
fwait
je
dec
jb
cmp
adc
pop
jae
fnsave
addb
xchg
test
jno
jp
pop
repnz
xlat
xchg
push
mov
dec
mov
dec
leave
mov
mov
sahf
sbb
mov
sub
lds
aas
dec
lcall
jb
es
mov
add
or
push
outsl
hlt
pusha
inc
mov
xor
movsb
jb
das
in
cltd
cmp
push
lock
test
jb
icebp
cmp
ret
cmc
mov
mov
push
jbe
pop
ss
faddp
pop
adc
std
or
repnz
mov
inc
lret
imul
xlat
and
movsl
mov
jmp
push
rcrl
xchg
mov
lcall
inc
adc
fidivl
test
cmp
mov
outsb
leave
jne
popa
aam
mov
addr16
pop
xchg
and
das
xchg
mov
mov
subb
mov
xchg
lods
push
test
cltd
mov
adc
sub
xchg
push
cli
fildll
mov
dec
mov
or
popa
sbb
dec
pop
arpl
dec
arpl
lret
cmp
mov
movsb
xor
inc
adc
xor
sub
mov
push
and
mov
xor
inc
mov
sti
ljmp
iret
push
fidivrs
gs
popf
mov
cmp
mov
inc
lods
out
test
sbb
cmp
movsl
adc
pushf
repz
int3
adc
aas
push
cmp
hlt
imul
cmp
sbb
fisubl
pop
lods
push
mov
in
xchg
imul
mov
sbb
mov
inc
xor
xor
mov
mov
sub
mov
mov
and
test
push
insl
inc
ljmp
ljmp
dec
in
testl
jg
int3
insl
loopne
fcoml
mov
gs
cwtl
mov
pop
cmp
faddl
dec
loope
push
in
pop
pushf
fisubrs
push
ror
sub
mov
rorl
movsb
inc
jns
inc
jo
inc
lcall
cltd
and
pop
adc
pop
stos
stos
test
dec
mov
pushf
push
pop
dec
pop
pop
inc
addr16
sahf
mov
dec
or
pop
fisubrs
loope
xor
jns
ja
pushl
sbb
jle
leave
pop
xor
out
cmc
aas
xchg
mov
push
int
pop
movsl
jnp
mov
sub
lcall
xlat
pushf
dec
andb
int
addr16
cwtl
test
or
xor
inc
ss
jl
cmp
sbb
hlt
out
cmp
adc
and
xchg
xchg
in
sub
mov
jb
sbb
fimull
cmp
inc
and
cmp
cmp
pop
jo
fsubr
xchg
subb
mov
movsl
mov
pop
fdivrp
xchg
adc
add
cmp
pop
insl
fs
sbb
jne
mov
mov
add
int
in
test
cmp
pop
arpl
stos
cmc
add
pop
push
and
xchg
imul
cmc
mov
out
rcr
mov
out
fcomp
jl
cli
lcall
loopne
je
lahf
xor
loopne
bnd
shrl
insb
ret
jns
mov
sbb
shrl
push
mov
stos
jne
mov
movsb
push
stc
je
push
push
or
xlat
mov
test
push
jo
mov
adc
pop
mov
dec
andl
movsl
lds
jno
jecxz
adc
das
push
xchg
ss
lahf
push
pop
mov
sub
pop
testl
xchg
and
mov
jg
mov
js
ja
enter
inc
dec
mov
sbb
push
jo
push
jbe
xchg
fsubr
mov
rolb
push
cmp
test
movsl
ret
insb
sbb
mov
test
outsl
loop
inc
sarb
push
and
je
cli
repnz
test
inc
jns
test
push
add
sti
mov
fiaddl
popf
dec
cli
ljmp
fdivl
xchg
addr16
xor
fcoml
push
adc
add
xchg
jns
ret
jge
daa
sbb
imul
mov
mov
inc
pusha
mov
mov
mov
push
inc
popf
insl
loopne
in
fiadds
or
movsl
iret
xchg
dec
mov
add
and
loop
clc
adc
scas
mov
add
fbld
cmp
sub
clc
lret
xchg
imul
jno
out
lds
dec
fistpll
mov
les
xchg
imul
addr16
jae
dec
arpl
call
xchg
icebp
popa
jecxz
inc
push
sbb
pop
pop
jns
rcrl
jb
js
add
jl
jge
into
repz
mov
add
gs
push
push
adc
xchg
in
jbe
push
xchg
imul
cmp
imul
push
enter
out
pop
jbe
mov
ret
bound
adc
bound
cld
add
sub
and
mov
inc
and
xchg
add
pop
cmpl
jg
arpl
movsl
add
outsl
out
je
lods
dec
cltd
xchg
mov
ret
sub
mov
sbb
add
add
js
xchg
call
mov
push
idivl
rcll
pop
hlt
add
jnp
mov
mov
stc
test
xor
sbb
push
sbb
or
fdivrs
in
pop
cs
stos
mov
or
nopl
out
jl
dec
mov
cmp
mov
add
pop
adc
in
outsl
aas
out
push
sbb
sub
mov
mov
jb
mov
inc
test
lret
je
sub
jb
push
ljmp
pushf
xor
mov
fsubrs
push
sub
movsb
inc
loopne
das
outsb
push
and
icebp
test
repz
cld
pushf
and
and
popa
xchg
push
jecxz
or
icebp
movsl
mov
das
sub
or
adc
out
pop
sub
out
jbe
jne
rol
mov
inc
inc
mov
pop
ficomps
sub
push
out
movsl
cmp
cli
ret
das
add
in
xor
push
test
mov
lods
lods
sahf
jne
mov
leave
popf
fildl
outsl
pop
sub
fistl
imul
jge
lret
and
leave
pusha
mov
imul
out
outsl
adc
push
and
in
sarl
mov
inc
push
in
cmp
rcl
mov
push
mov
outsl
test
push
orl
je
mov
mov
push
adc
ret
mov
push
mov
cwtl
inc
popa
lea
bound
xchg
test
push
mov
pop
mov
add
pop
sbb
mov
fistl
cltd
test
jle
jmp
jmp
and
fcompl
or
adc
jbe
rcrl
push
xor
fdivl
pusha
sti
xchg
dec
sti
xchg
jge
int
leave
lahf
sbb
cmpsl
in
push
jb
mov
test
je
popa
cmpsb
call
pop
fdivrl
xchg
scas
cmpsl
adc
fsts
mov
xor
pop
xor
dec
rol
shll
fmuls
mov
xor
push
mov
rcll
fldcw
mov
push
out
cmp
jae
xchg
test
sbb
icebp
mov
leave
shl
imulb
iret
and
mov
test
addr16
dec
ja
call
mov
test
fwait
cwtl
cmp
in
add
outsl
cmpsb
xor
jl
adc
cs
loopne
sbb
mov
add
mov
mov
ss
mov
mov
adc
stos
add
pop
popa
shlb
int
lds
fildll
js
sbb
jae
rolb
cmp
push
push
sbb
xchg
push
xchg
add
rclb
divl
subb
add
mov
add
mov
mov
inc
inc
adc
sub
pop
fwait
xchg
int
pusha
or
mov
mov
adc
adc
mov
or
sub
dec
in
pop
fsubrs
xor
jae
xor
ja
lds
cwtl
shrl
inc
mov
xchg
inc
sbb
rcll
push
test
or
xchg
test
fdivrl
gs
fwait
dec
add
hlt
lcall
mov
repz
mov
out
cmc
dec
das
xchg
rcl
inc
xor
je
popa
dec
dec
ret
add
rcr
pextrw
std
push
fstp
shll
sub
pop
inc
and
jmp
into
xor
xchg
add
xchg
test
mov
shrl
cld
popf
cmp
ret
xchg
pop
dec
xchg
aam
call
dec
mov
inc
jnp
xchg
sub
xor
bound
mov
es
test
mov
iret
dec
dec
jle
sub
iret
adc
ss
lahf
lcall
aam
stos
add
decb
inc
pop
iret
mov
add
xor
test
cwtl
das
das
and
dec
adc
inc
jmp
fwait
lret
sti
mov
aaa
pop
icebp
cli
jge
ret
daa
out
jp
and
mov
xor
xchg
xchg
repz
mov
inc
inc
mov
in
in
int3
dec
jge
lods
sub
outsb
aad
not
ret
cmp
fbld
mov
pop
loopne
nop
mov
push
dec
mov
cmp
in
push
sbb
and
dec
test
lahf
xorl
sbb
cltd
pop
jle
xchg
fsubs
cmp
jbe
dec
xor
jbe
sub
dec
pop
pop
mov
fwait
jle
stc
sub
iret
sbb
add
push
inc
dec
cmc
pop
icebp
jmp
jns
dec
mov
das
cmp
sbb
clc
iret
scas
dec
movsl
in
cmpsb
inc
mov
flds
push
aaa
jmp
pop
cmp
xor
mov
aas
std
in
pop
mov
scas
mov
or
mov
pop
adc
xor
jne
or
les
sbb
pop
mov
pushf
or
shlb
imul
xchg
gs
mov
cmpsb
test
clc
and
ficompl
cltd
test
inc
push
lock
addr16
adc
lahf
sbbl
xor
lods
xchg
pushf
jne
ret
repz
mov
cs
notb
test
pop
ss
jge
in
inc
mov
es
cmp
adc
jmp
stc
cmp
push
dec
mov
mov
mov
mov
stos
cld
rcrl
pop
xor
jno
in
xor
ds
mov
and
xor
adc
xchg
mov
lea
fdivrl
loope
dec
pop
pushf
xor
sbb
push
insl
sahf
xchg
out
lds
shl
sbb
shrb
mov
aam
fldcw
inc
cmp
pop
neg
xor
std
cmpsl
cli
in
ret
add
pop
lcall
cwtl
rcll
add
or
sbb
rcl
xchg
xor
adc
pop
mov
inc
icebp
call
cwtl
movsl
faddl
sti
mov
lock
cmp
xor
roll
js
push
push
subl
push
and
pop
xor
xchg
pop
mov
lret
clc
lret
mov
aad
or
or
dec
sub
icebp
fs
es
push
xchg
out
jle
jle
add
sar
xchg
mov
lahf
xchg
iret
arpl
out
xlat
stos
xchg
lret
inc
ss
insl
pop
xchg
mov
mov
iret
ficompl
outsl
clc
and
stos
fcmovne
cmc
push
jbe
fs
stos
mov
inc
mov
xchg
inc
cmp
bound
loopne
loop
mov
aas
add
xchg
rcrl
lds
mov
fidivrl
arpl
dec
xlat
fdiv
hlt
xchg
sub
pop
mov
dec
push
inc
ret
mov
in
push
or
mov
outsl
push
aas
movsl
add
fistpl
ficoms
sub
add
es
sti
mov
add
adc
ljmp
inc
jne
or
mov
or
adc
mov
adc
out
scas
add
push
mov
mov
mov
inc
dec
mov
rcrl
inc
mov
aaa
mov
dec
in
mov
sbb
lret
out
sbbl
ljmp
in
movsb
aas
pop
test
sti
mov
lds
sub
stc
stos
fsub
jo
xchg
stc
leave
mov
sub
inc
adc
lret
popf
pop
push
lret
rcr
notl
adc
lods
pop
sbb
dec
pop
stos
or
pop
scas
push
stos
push
jp
jecxz
pop
sub
cmp
jl
pushf
test
lret
loop
push
lret
sti
jne
popl
movsb
push
leave
inc
out
insl
and
divl
jne
pop
sbb
call
cmp
pop
andb
mov
repnz
and
aad
adc
xsha1
cmpsb
lret
cmp
lds
push
popf
adc
dec
jecxz
xor
push
repnz
pop
cmp
xchg
dec
xchg
lret
bound
sub
xor
jmp
cld
lahf
shrl
add
pop
adc
mov
xchg
je
lahf
decl
xchg
or
das
mov
xchg
mov
sbb
into
cmp
aad
fwait
adc
popa
daa
mov
leave
aas
inc
sub
mov
cs
mov
inc
out
test
rorb
das
or
push
fnsave
test
pushl
jnp
sahf
outsl
out
sbb
xchg
js
pop
cs
repz
repz
sbb
clc
aad
push
fisubs
aas
pop
cmp
mov
into
adc
lcall
jnp
lods
mov
lods
adc
popf
and
scas
or
lahf
lods
xchg
scas
or
xor
in
shrl
loop
dec
sarb
or
and
mov
test
lret
rol
fsubl
sbb
sbb
mov
test
fwait
iret
pop
icebp
and
push
loopne
repz
xor
cmp
mov
loopne
std
cmp
test
sbb
push
leave
movsb
out
test
add
notb
add
push
adc
pop
add
sub
adc
jno
pop
movsb
push
fildl
mov
rol
in
addr16
push
xor
push
cmp
fists
xchg
pop
cmc
lock
notb
daa
adc
call
loopne
push
adc
dec
sub
dec
push
dec
lret
mov
cs
pusha
test
aaa
stos
in
call
movsl
sbb
int3
push
mov
mov
sub
scas
and
mov
xchg
mov
aad
into
sub
mov
inc
imul
sub
pop
push
pushf
sbb
hlt
lods
mov
jecxz
addb
mov
xlat
out
and
and
inc
adc
push
or
or
aam
out
aas
or
scas
out
jle
sbb
inc
mov
or
or
dec
pusha
pop
fs
lods
aad
and
mov
bound
in
mov
lret
jae
call
int
sbb
push
and
xor
pop
stos
pop
loopne
push
test
dec
mov
xchg
enter
dec
inc
push
mul
add
into
push
xor
pop
shlb
mov
rcrb
pop
inc
pop
out
rcll
mov
mov
mov
mov
cmpsl
lahf
jmp
rol
cmp
out
sbb
xor
sbb
aaa
sbb
jbe
mov
stc
xchg
push
inc
and
inc
mov
mov
jo
dec
mov
jbe
enter
sub
nop
pop
bnd
shll
or
inc
sub
mov
fxch
stc
or
inc
ss
cmp
aaa
push
jb
ljmp
jo
or
cmp
mov
fdivrl
std
mov
leave
sbb
outsl
mov
lahf
sarb
mov
mov
into
mov
and
sbb
hlt
mov
mov
loop
push
jne
pop
out
das
ret
fildll
push
mov
cmpsb
adc
pop
repnz
jmp
lods
pop
cli
jns
add
jecxz
outsb
jge
lahf
shlb
cmp
lret
fistpl
mov
daa
inc
incl
push
leave
sbb
cmc
test
xchg
insb
jle
xor
mov
mov
cmp
ret
loop
sub
cmp
pop
sti
pusha
pop
sub
xchg
jmp
aam
sahf
clc
push
in
fsubrs
mov
push
addb
jno
aas
mov
sub
dec
mov
call
mov
loop
ja
data16
fwait
pop
lret
bound
xchg
jo
or
add
jmp
fdivrl
es
int3
and
or
insl
aaa
xchg
pop
xchg
mov
cwtl
mov
pop
push
mov
xchg
sub
inc
push
aas
int3
sub
aad
lods
xchg
jnp
jle
xor
cmc
mov
jbe
cmp
cmp
ja
xchg
push
cmp
mov
xchg
jo
jge
loopne
ficoml
imul
mov
mov
pusha
lret
pop
fdivs
bound
inc
adc
push
or
sub
cmp
lcall
mov
xchg
test
mov
ret
pop
mov
sbb
lds
dec
sub
inc
fsubl
dec
fiadds
mov
mov
cmpsb
subl
int3
mov
mov
push
inc
xor
adc
in
in
lret
rcrb
mov
add
in
test
xor
jmp
hlt
fsub
sub
or
mov
fs
xchg
add
scas
inc
arpl
or
mov
pop
lret
iret
movsb
adc
out
sti
mov
dec
xchg
dec
aaa
pop
nop
aaa
test
cmpsl
out
add
shrl
add
addl
ret
ficoms
adc
or
lret
dec
adc
add
out
jo
aam
push
and
test
cltd
push
gs
mov
fistl
add
cltd
inc
push
addr16
or
fbstp
outsl
fwait
sbb
frstor
and
rcrl
ss
sti
pop
xor
insb
fdivs
pop
or
pop
jbe
insb
gs
add
xchg
scas
or
cmp
ljmp
or
dec
lret
shlb
xor
xchg
scas
and
jbe
imul
repnz
hlt
mov
loop
xchg
ret
mov
cmc
pop
lds
mov
jo
push
pushf
push
outsb
stc
je
mov
xor
cmp
push
inc
push
test
inc
lock
into
mov
ja
jmp
pop
cmpsl
out
push
inc
ret
repnz
mov
ja
xor
inc
and
nop
daa
dec
fimuls
dec
mov
and
jg
movsl
push
fildl
add
xchg
pushf
out
out
sarl
jnp
and
push
lret
push
js
xchg
jle
mov
mov
sahf
push
test
pop
xor
sbb
test
notl
gs
pcmpgtd
std
inc
outsl
arpl
xchg
jns
inc
lods
popf
fsubs
pop
lock
push
add
decb
leave
ficoms
hlt
or
je
mov
sub
test
push
insl
imul
imul
fildl
xor
loop
fsubr
pop
sub
movsb
outsl
xchg
sti
pop
lds
inc
arpl
cltd
mov
repz
inc
add
adc
cmp
pushf
mov
outsl
imul
mov
iret
mov
pop
sahf
daa
arpl
lcall
mov
scas
aam
sub
in
mov
in
sarl
and
ds
jo
mov
sarl
lret
adc
imul
gs
jmp
sti
add
xor
xor
cmp
in
sbb
fnstsw
or
sub
fidivs
jge
mov
pop
cmp
inc
pop
sub
sahf
mov
nop
call
rorl
imul
out
call
push
sahf
mov
fucomp
jg
mov
pop
mov
or
insb
add
leave
stos
inc
sub
ffree
leave
mov
cld
ds
dec
lock
jp
out
lods
inc
dec
in
jle
inc
push
xchg
sub
xlat
push
shrl
mull
fidivl
jp
jae
jne
add
jg
sbb
fsubrs
and
push
and
mov
cmp
cmpsb
fadds
imul
out
pop
scas
fcoms
cli
pop
iret
mov
adc
sbb
mov
and
add
push
sbbb
add
sub
xor
sub
jle
mulb
and
and
orl
inc
and
push
test
jg
ja
jle
sub
enter
jecxz
cltd
lock
cmp
or
outsb
push
adc
enter
clc
cmc
mov
ror
lods
sti
lds
fucomi
push
mov
mov
mov
hlt
test
inc
add
inc
push
sub
fidivl
fcom
inc
test
mov
xor
pop
arpl
iret
test
xlat
pop
in
add
sub
pop
pop
jmp
inc
cltd
fcompp
ds
cmpsl
outsl
cli
addr16
push
call
sbb
inc
mov
fbstp
or
test
lods
jo
cltd
mov
jne
arpl
cmp
mov
ljmp
loopne
sub
scas
push
shr
jge
aad
push
jae
sti
and
adc
pop
cmp
mov
sbb
sub
repz
sbb
pop
imul
mov
loopne
js
jns
out
icebp
inc
loope
stos
xchg
loope
out
adc
lods
xchg
cwtl
sti
in
adc
repz
mov
adc
test
jae
fadd
mov
pop
aaa
shl
xchg
mov
xor
mov
fadds
daa
add
andl
cmpsb
popa
lods
ret
popa
add
pop
gs
or
stos
mov
adc
sub
pop
cmc
pop
xor
push
or
shr
or
cwtl
mov
sahf
mov
int3
aaa
leave
fldenv
pop
adc
pop
frstor
test
pusha
mov
sbb
jb
ja
ret
shll
inc
mov
push
in
sub
fidivl
pop
pop
cmpsb
inc
sbb
sub
pushf
xor
push
xor
ss
sub
cmp
push
les
sbb
inc
cli
push
les
iret
jmp
push
nop
cli
push
scas
jb
mov
out
cmp
popf
sub
out
push
inc
mov
out
adc
js
mov
mov
into
and
sbb
shr
cmpsl
dec
insb
inc
add
in
pop
je
mov
fcompl
add
mov
loop
push
stc
das
xlat
push
mov
movsb
xchg
and
fstpl
xchg
hlt
xchg
inc
mov
cld
outsl
mov
lret
cmp
push
cmc
add
sub
mov
inc
cmpsb
dec
popa
mov
aad
sub
sub
test
push
jno
and
add
and
js
add
xor
sbb
movsl
xor
addb
cltd
pop
xor
nop
daa
xor
sti
push
int3
movsl
ss
jle
fucomp
in
lahf
jl
jne
mov
xchg
insl
mov
pop
outsb
jo
cwtl
sub
add
cmpsl
push
mov
adc
add
add
mov
dec
jmp
in
loope
mov
mov
bound
mov
rclb
or
pushf
mov
in
add
mov
jne
xor
imul
push
xor
push
xchg
gs
inc
pop
xchg
dec
cs
pop
sbb
and
sti
test
je
and
lret
push
gs
or
fldl
lods
push
mov
mov
inc
arpl
mov
mov
mov
ficoml
xor
inc
sarb
lods
mov
filds
push
es
push
xchg
fmull
lods
ljmp
es
push
sbb
jmp
add
cwtl
pop
jo
ds
dec
inc
in
cmp
call
xor
popa
sbb
pop
repz
sub
cli
pop
dec
loop
jno
sbbl
pop
jae
mov
jge
out
dec
sbb
mov
fsubr
shlb
imull
cmp
cli
jg
pushf
movsb
ljmp
xor
xlat
adc
dec
or
data16
push
xor
out
test
cli
test
jle
mov
pop
xchg
pop
jge
push
mov
jnp
xchg
in
mov
mov
mov
pop
fwait
arpl
popa
daa
hlt
loop
pop
jmp
ss
inc
pushf
push
sbb
adc
and
pop
out
ja
gs
pusha
gs
jb
mov
mov
and
jecxz
mov
inc
call
pop
int3
daa
cwtl
jmp
into
lcall
dec
das
pop
mov
vpaddsw
mov
xchg
or
xor
subb
sbb
adc
bound
stos
fisubs
inc
inc
fcmove
out
sarl
stos
test
pop
mov
mov
jle
in
push
sbb
cmp
loopne
mov
sbb
pop
xor
sub
xorb
sbb
stc
icebp
psrld
xor
pushf
push
dec
sbb
in
and
subb
gs
add
inc
insb
or
ja
push
dec
mov
subl
mov
lahf
icebp
xor
push
in
sbb
or
mov
fdivrl
dec
add
es
inc
or
in
mov
push
stos
push
filds
sbb
cmp
cs
jno
rclb
inc
pushf
cmpl
sbb
mulb
aas
aad
sub
pop
std
mov
sbb
sarb
push
inc
and
ficoms
das
dec
xor
xchg
pop
cmpsl
add
arpl
and
mov
push
sub
add
cmp
and
int3
fcmovu
movsb
cmp
adc
cmp
xor
xor
lahf
pop
lret
pop
xchg
sahf
cmp
ss
adc
loopne
mov
lcall
incl
int3
lcall
stc
jecxz
repnz
push
and
dec
dec
sub
adc
roll
aas
enter
or
orl
or
sub
jmp
or
mov
out
inc
lret
rcl
adc
xchg
xor
mov
xor
xchg
dec
testb
insl
pop
je
adc
cmp
or
xchg
mov
jg
je
dec
dec
jb
popa
enter
mov
pusha
sahf
sub
incb
pop
lock
mov
ja
push
fsub
dec
adc
push
inc
fdivp
xchg
xchg
divl
cmc
gs
fmull
arpl
fbstp
aad
pop
ja
roll
lods
mov
mov
xchg
mov
sarb
pop
mov
ss
into
sbb
cli
or
xchg
adc
lret
filds
xor
mov
inc
sbb
in
hlt
mov
ss
xor
dec
mov
ds
ja
dec
movsb
adc
mov
mov
fldt
and
stos
push
dec
je
xor
out
xchg
dec
fisttpll
fucomi
in
ficomps
jbe
stos
dec
sub
cmp
xchg
push
mov
testb
call
xchg
repnz
in
arpl
mov
inc
iret
scas
aas
cltd
filds
mov
mov
aas
pop
inc
rcl
gs
add
test
repz
nop
jne
ret
push
test
push
and
mov
cmp
enter
js
xchg
dec
stos
push
lret
cli
gs
lret
xor
fiaddl
lret
mov
fbstp
mov
and
push
jg
mov
and
sub
cmpsl
vmovhlps
or
mov
in
mov
sbb
jl
arpl
dec
push
xor
pop
and
pop
push
push
ljmp
jb
inc
mov
mov
push
out
aas
adc
jbe
push
movb
add
test
jae
stos
mov
jae
jg
dec
lods
mov
stos
inc
fdivs
sti
int3
and
jbe
sahf
imul
push
test
cmp
mov
jmp
inc
bound
scas
mov
push
jl
out
cmp
push
jo
pusha
in
das
sarl
jnp
xorl
loop
loopne
mov
sub
lret
pop
xlat
fbstp
in
jp
fdivl
dec
mov
sub
addr16
push
aad
xchg
mov
lods
adc
aam
add
mov
int
pop
out
shrl
sub
pop
bnd
xchg
repz
imul
int3
mov
sbb
xchg
in
pushf
mov
sub
jl
shrl
xor
rclb
inc
pop
jns
in
dec
cmpsl
outsl
lret
sub
and
adc
sbb
mov
movsb
jecxz
into
andl
sbb
push
push
xorb
sbb
dec
inc
idivl
shrl
imul
ss
icebp
enter
ss
stc
dec
dec
movsb
and
ja
push
int3
jo
loop
xchg
aam
repz
outsl
mov
leave
ja
and
inc
rorb
js
fsubrs
jne
add
lods
mov
mov
or
jmp
ret
repnz
ja
push
cli
jns
sahf
add
test
xchg
in
cltd
or
adc
add
xor
xor
mov
lcall
int3
test
scas
pop
popl
popa
mov
adc
pop
push
rcl
or
loope
jae
out
movsl
lds
jo
andb
add
sti
in
loopne
mov
mov
adc
sbb
jae
mov
popa
dec
aaa
inc
pop
xchg
jno
add
push
xor
stos
sahf
xor
test
pop
in
dec
dec
dec
add
ret
sbb
loopne
stc
loope
pushf
dec
imul
lea
ja
xchg
xor
imul
aaa
adc
cmp
inc
push
dec
adc
cmpl
test
cmp
mov
std
lods
outsb
shrb
pusha
ret
xor
loope
imul
or
jno
jecxz
pop
or
push
gs
mov
pop
adc
lods
not
icebp
insb
inc
pop
aaa
popf
sub
inc
inc
sti
test
outsb
add
mov
mov
leave
inc
and
dec
iret
pop
jns
lahf
cmp
push
sbb
sub
aad
jg
sbb
xchg
mov
iret
out
lock
and
fdivl
outsl
shll
and
pop
lods
push
gs
add
mov
cwtl
in
lock
js
or
add
cmp
adc
aas
xchg
mov
or
sub
and
push
cwtl
std
daa
adcl
mov
test
ret
xor
inc
popa
jmp
out
mov
cld
push
xor
xchg
and
adc
or
cmp
xchg
test
out
cwtl
lret
xlat
leave
packsswb
sbb
jl
cmp
and
add
mov
shll
or
inc
sti
popf
repz
mov
frstor
es
or
pop
stos
idivl
mov
popa
mov
add
cmp
sbb
cmpsb
shll
aaa
mov
cmp
adc
shl
push
aas
dec
test
lcall
inc
pop
bnd
leave
fldt
sub
push
js
or
mov
pop
mov
pushf
scas
mov
fistl
adc
test
jno
inc
jmp
aas
push
packssdw
sti
bound
or
pop
cmp
xchg
mov
pop
loope
movsb
dec
push
repz
mov
test
dec
add
gs
sub
aad
nop
lahf
inc
sti
sbb
sub
inc
in
xchg
icebp
or
inc
add
js
lcall
das
xlat
orl
inc
cmp
dec
loope
call
adc
jbe
fsts
andl
shll
sbb
out
jmp
dec
sbb
cmp
push
cwtl
rorl
mov
add
inc
xchg
shll
inc
mov
add
sti
lods
pop
sub
dec
loopne
jmp
outsb
dec
mov
sub
movsb
les
jns
dec
out
lcall
rol
gs
jg
or
mov
mov
sahf
xlat
fisttpll
cmp
sarl
mov
fdivr
xchg
or
mov
sub
add
add
imull
dec
in
push
add
rorb
xchg
mov
ljmp
and
ds
mov
rcrb
ljmp
jno
push
cli
movsb
shrb
jge
sub
mov
addr16
jb
mov
fdivl
mov
ret
lcall
jns
inc
stos
leave
ja
out
mov
or
iret
imul
pop
adc
lock
jae
mov
lods
mov
stc
rolb
hlt
and
xchg
sub
pop
data16
in
xor
or
test
loope
jmp
aaa
int
adc
dec
out
aad
in
jmp
cltd
stos
fisttps
inc
xor
test
ja
aas
loop
data16
mov
cmpsl
pop
sbb
leave
sub
jb
mov
int
into
mov
or
loope
aaa
repz
and
andl
push
xor
shl
jb
repnz
lea
jl
inc
fs
movsb
dec
loop
lock
test
pop
cs
jl
repnz
fcompl
dec
cltd
or
or
and
push
loopne
lret
ret
fsubrl
mov
fs
jae
and
and
loope
fimull
mov
lret
leave
pop
mov
jmp
xor
add
push
or
jno
mov
inc
popa
sbb
jle
sub
pusha
mov
popa
push
jns
loope
adc
or
stos
xlat
dec
lock
mov
mov
movhlps
push
ss
xor
hlt
popa
pop
jnp
or
fwait
insb
mov
cmpsb
pop
inc
fisttpll
andl
mov
jb
rcll
adc
add
mov
xor
clc
xchg
sbb
mov
xor
mov
cltd
and
add
loope
jp
jns
insb
add
lcall
jle
aam
pop
push
rcl
dec
daa
leave
loope
daa
mov
ss
shll
xchg
mov
fiadds
cld
inc
test
xchg
inc
and
inc
repnz
cmpsb
jg
cmp
dec
mov
dec
push
js
or
inc
inc
repnz
or
stos
push
fdivl
lret
bound
mov
jmp
mov
sub
push
inc
addr16
cltd
pop
and
into
daa
addr16
gs
xor
push
push
jno
movsl
cmp
xchg
jmp
sbb
ja
dec
leave
pusha
jl
int
cmpsl
and
ret
hlt
scas
pusha
divl
jle
mov
icebp
pop
ret
mov
fisubs
dec
outsb
add
mov
cmpsb
push
pop
inc
clc
push
lock
sbb
sbb
jno
ret
sub
push
adc
popw
loope
in
pop
lret
cmp
mov
stos
clc
mov
jg
jns
lcall
pop
cmc
aas
arpl
push
repnz
and
shrb
sbb
sti
cmp
lcall
bndstx
addl
mov
imul
jnp
xchg
movsl
pop
dec
mov
sub
jns
xchg
mov
jg
xchg
les
adc
subl
push
jmp
and
ljmp
jmp
mov
adc
mov
push
mov
std
add
push
push
xchg
js
sub
enter
in
imulb
repnz
mov
dec
jmp
dec
dec
pop
js
or
and
inc
lods
out
clc
nop
cltd
inc
int3
pop
push
sahf
sub
fwait
xchg
stos
shrb
int3
cmp
pop
gs
or
xor
adc
faddl
mov
dec
pop
enter
into
loope
gs
push
bound
xchg
jg
test
fcmovnu
addl
sbb
dec
stos
jne
push
xlat
sbb
or
stos
or
xchg
add
int
pop
cmp
popa
jo
xchg
mov
call
jb
xorb
cmc
push
aam
pop
mov
jg
inc
or
rorl
movsb
mov
jmp
mov
aas
xchg
mov
rolb
pop
cmp
fs
sbb
jmp
sbb
movsb
cltd
sarl
adc
push
inc
in
lret
push
nop
or
push
mov
addr16
sbb
incl
and
loope
fstps
in
lods
cmp
inc
xchg
rol
xor
ret
jp
mov
mov
adcl
or
rcr
jnp
jns
add
nop
daa
divl
stos
das
shll
add
pop
adc
gs
cmp
ficoms
jl
adc
ret
jge
shrl
dec
fdivrl
outsl
mov
movsl
mov
iret
pop
add
ljmp
jno
dec
mov
cwtl
sub
in
push
pop
cmp
add
sbb
in
inc
movsb
lcall
out
mov
push
fmulp
cwtl
aam
fdivl
push
cmc
pusha
mov
push
pop
inc
xlat
xor
das
ret
test
dec
mov
mov
cmpsb
pop
sub
and
sti
ret
push
or
add
insl
sub
cmpsb
jg
lahf
jne
test
pop
inc
push
f2xm1
mov
cmpsl
cmp
ljmp
ljmp
movsl
inc
adc
push
outsb
mov
shll
push
add
push
mov
loop
flds
mov
sub
out
cmpsb
mov
jp
adc
in
addr16
xor
sub
mov
cmc
gs
sub
or
aas
jbe
lahf
cs
aas
shlb
sbb
sbb
push
pop
sbb
out
out
insb
js
ret
push
xor
mov
leave
sbb
push
adc
mov
sbb
cmc
sahf
aas
dec
cmpsl
jl
push
int
movsl
test
xlat
pusha
and
sbb
jns
cs
mov
pop
insb
sar
mov
add
mov
and
and
inc
mov
sub
sub
aaa
xor
jle
rol
aaa
lret
push
fs
mov
lea
ret
js,pn
in
bnd
pop
lret
mov
and
inc
inc
cwtl
dec
data16
xchg
jbe
or
jecxz
es
sbb
cmpsb
enter
adcb
test
sub
popa
or
ljmp
inc
or
xorb
cmovne
add
inc
cmp
jl
jbe
imul
add
jo
adc
adc
lcall
into
sub
push
add
mov
adc
mov
add
incb
inc
sub
sbb
jbe
xlat
sub
ss
cmpl
stc
and
and
dec
xchg
xlat
sub
xor
movsl
mov
fdivrl
pusha
ss
jle
shlb
adcl
pop
xor
aas
or
stos
xchg
enter
push
lods
mov
mov
lock
sbb
stc
orb
dec
loopne
xor
hlt
daa
fists
call
jle
outsl
push
xchg
adc
push
mov
cmpsl
dec
repz
mov
shl
adc
mov
rcll
xor
cmp
inc
cld
popa
arpl
pop
push
decb
mov
push
jmp
or
and
pop
jb
loop
cmpsl
mov
add
and
ret
hlt
pop
xrelease
sub
cmpsb
jae
jno
mov
push
adc
dec
shlb
or
ljmp
adcb
push
sahf
cmc
sub
lahf
sub
aam
dec
dec
and
stc
mov
fistpl
into
mov
insl
mov
xor
addr16
sub
pusha
dec
xor
push
sbb
pop
fstl
pop
jmp
filds
xchg
shrl
roll
inc
rcrl
dec
repz
or
hlt
jns
dec
adc
inc
jo
cmp
xorb
inc
rcrl
dec
push
movsb
adcb
stc
jbe
jnp
mov
insb
pop
xor
aaa
pushf
xor
rol
jb
mov
xchg
nop
aad
or
xchg
movsb
push
in
mov
or
dec
aaa
dec
arpl
arpl
int
in
adc
out
or
mov
push
out
lds
sbbb
dec
sbb
mov
xchg
ja
out
xchg
push
sbb
lret
adc
int3
pusha
sahf
jns
mov
jge
xchg
add
enter
jecxz
pop
jmp
mov
hlt
icebp
insb
mov
ret
pop
sarb
cwtl
aam
aam
nop
notb
jmp
shl
mov
ds
scas
fs
daa
arpl
pop
hlt
fsubl
testl
adc
std
mov
adc
or
sub
push
mov
fbld
xor
pop
xchg
aad
jmp
stc
cmp
cmpb
loope
xchg
sub
or
insl
xor
addr16
pushf
repz
push
scas
inc
out
push
movsl
pushf
mov
dec
jns
sub
int
es
push
subl
fcoml
dec
dec
push
push
pop
aaa
lret
leave
xor
dec
fidivrl
enter
scas
pop
out
mov
subl
insl
cli
sub
sub
stos
or
sarl
sbb
jmp
mov
mov
mov
sbb
roll
or
insb
das
cmp
stos
loopne
fisubs
rolb
in
cmp
movsb
push
decl
call
shrl
push
adc
fmul
clc
push
jne
jbe
mov
ljmp
sub
fwait
shrl
mov
jle
mov
and
push
leave
mov
or
loop
js
pusha
add
xchg
pop
dec
mov
inc
push
xor
inc
push
cmp
jae
cltd
mov
or
rcrl
adc
fldcw
repnz
push
call
adcb
add
xchg
dec
popl
adc
ljmp
jno
push
mov
xlat
sub
cmp
lret
testb
je
mov
movsl
mov
fstpt
shl
pop
adc
fsubs
ficomps
aam
lods
adc
test
stos
jmp
mov
add
loop
jge
pop
or
stos
push
sub
out
lret
popf
lods
cld
adc
and
loopne
aas
inc
push
dec
cld
push
push
mov
movsb
sub
jge
or
outsl
mov
rclb
pop
lds
lret
bound
popa
fsubrl
jne
adc
jnp
cmpsl
jecxz
xor
aad
stos
test
mov
jae
hlt
inc
xlat
sbb
inc
adc
jnp
xchg
daa
xchg
je
outsb
push
mov
ret
cmp
push
mov
push
cmp
xor
sbb
adc
cmp
es
mov
and
imul
pop
call
test
rorl
mov
dec
enter
jge
int
pop
sbb
xchg
cs
lds
sbb
push
inc
div
nop
stos
sub
in
dec
mov
fisttpll
lods
scas
scas
xchg
add
movsb
mov
ss
cli
roll
pop
pop
lock
ja
in
jb
jbe
push
pop
push
pop
or
xchg
pop
adc
sti
and
xchg
loope
out
inc
xchg
mov
sahf
add
lock
pop
dec
mov
mov
loope
xchg
les
ja
iret
test
outsb
or
or
xor
fwait
sbb
mov
cmp
mov
mov
mov
int3
or
jp
cmp
in
lahf
arpl
sbb
jae
mov
adc
mov
xchg
xor
mov
loopne
ret
pop
xlat
insl
sub
sahf
clc
fucomip
imul
lock
sub
stos
repnz
and
mov
mov
xlat
lcall
mov
inc
sub
shll
jmp
arpl
shr
xor
push
sub
daa
pop
js
je
inc
sub
jmp
mov
mov
or
lock
inc
aad
inc
pop
bound
push
in
loopne
in
adc
lret
ds
inc
jno
and
lcall
cmp
pop
movsl
aaa
jb
cmpps
shll
into
pop
jne
mov
cmp
mov
adc
inc
fidivs
inc
mov
push
rcr
pusha
mov
ja
cmp
popa
and
mov
inc
push
and
xchg
xchg
mov
fidivl
xor
jo
mov
lahf
sub
jmp
les
mov
sbb
test
mov
movsb
repz
inc
call
mov
mov
aam
adcb
or
repz
pop
stos
sub
cmp
sub
fldcw
jne
mov
adc
cmp
add
xchg
lahf
rorb
sub
cmp
mov
or
xchg
inc
daa
fmuls
xor
ds
xchg
mov
jbe
repz
aas
ret
sbb
mov
test
push
mov
arpl
jmp
mov
jnp
cmp
sub
dec
cltd
cmp
push
pop
aaa
mov
sub
adc
dec
sub
mulb
cmpsl
ds
xchg
mov
js
sbb
lods
aas
push
aas
imul
and
sahf
cli
xor
cmpb
dec
fists
cli
mov
std
xchg
xor
test
xor
adc
jg
lods
and
push
pop
popa
cmp
cmc
lea
fstpt
add
cmp
xchg
sub
repnz
shrb
jnp
mov
or
pushf
cmc
sbb
into
or
jnp
add
ljmp
mov
faddl
roll
inc
fidivl
jmp
cwtl
mov
ret
or
push
mov
pop
imul
inc
sub
arpl
mov
leave
xor
mov
cld
ror
push
fisubrl
inc
mov
fwait
sti
into
and
jne
insb
stos
or
cmpsb
ljmp
jbe
jle
mov
xchg
das
mov
ror
pop
pushf
lds
mov
mov
add
push
push
lock
mov
xchg
cwtl
stos
cmpsl
mov
inc
mov
and
sbb
mov
mov
in
pop
adc
out
incb
adc
in
cltd
dec
in
in
pop
push
adc
jae
push
rcrl
cmp
hlt
xchg
fstps
and
mov
negl
cmp
sarb
shll
mov
xchg
push
or
jmp
ds
dec
pmuludq
push
ret
cs
mov
push
lods
pop
mov
mov
scas
inc
sub
in
cmp
int
sbb
out
jb
ljmp
jge
add
sbb
ret
sub
sub
ds
sub
imulb
scas
push
pushf
test
mov
mov
les
and
ljmp
adc
or
loopne
pop
adc
nop
cmp
push
mov
push
lret
jae
cmp
mov
dec
jl
sub
adc
leave
mov
bound
cmp
add
push
fstpl
test
jmp
mov
orl
or
pop
xor
es
mov
mov
shrl
jl
mov
dec
aad
je
daa
cmp
sbb
test
gs
jo
sahf
and
sub
scas
push
and
scas
mov
and
aad
aam
pop
inc
push
sar
mov
jl
test
adc
sbb
jae
mov
pop
jp
clc
aas
les
xor
add
in
sub
inc
fwait
std
inc
ss
insl
push
dec
f2xm1
cmpsb
push
push
pop
fisttpll
scas
mov
xor
xor
das
xchg
push
jmp
addr16
lock
imul
jo
jecxz
ds
dec
adc
loop
push
rcrb
cmpl
mov
addr16
or
xor
insl
jb
sahf
sbb
mov
or
push
sub
sub
ljmp
jno
test
in
cmp
mov
jmp
sub
test
dec
imul
dec
std
arpl
in
pop
int3
dec
ret
mov
andps
and
push
cmpsl
out
scas
jae
mov
mov
xchg
dec
in
push
jnp
dec
pop
and
stc
test
cltd
xor
movsb
cmp
movsl
xor
push
repnz
inc
xor
popl
push
fistl
mov
pop
push
mov
and
enter
dec
nop
mov
jae
in
or
sub
nop
fbstp
or
dec
push
jno
jne
ss
test
out
sbbl
pop
stos
add
fildll
in
out
loopne
push
insb
popf
inc
leave
sti
pushf
and
inc
and
pop
inc
ret
push
loope
sbb
and
dec
pusha
sub
imul
aad
fadd
iret
mov
rcrl
push
mov
or
inc
stc
xor
pop
cmp
xor
cmp
orl
add
lret
inc
pop
scas
dec
scas
and
and
mov
mov
enter
int
mov
jecxz
xor
xor
shll
cltd
stos
push
xchg
inc
test
test
fnsave
pushf
movsl
inc
sbb
rcrl
cs
xchg
push
adcl
js
push
aas
cmpsl
test
push
rcrl
cli
jno
mov
pop
out
jmp
mov
fwait
jl
lock
repz
and
adc
pop
mov
xchg
in
std
push
pop
xor
inc
push
mov
xchg
fnstsw
sahf
mov
in
xchg
mov
xor
jmp
push
push
jno
scas
call
pop
add
cmpsl
cmp
mov
xchg
lds
das
insb
lea
scas
js
mov
mov
iret
out
pop
adc
and
aas
dec
sbb
mov
pop
enter
outsb
jnp
cmpsl
pop
stos
pop
js
pop
and
push
gs
mov
cmp
stos
in
sub
add
push
clc
cmp
sub
mov
dec
pop
dec
fwait
inc
pop
xchg
aad
movsb
rorb
es
imul
imul
dec
test
mov
arpl
cwtl
faddp
inc
cs
add
int
push
aaa
xchg
push
sub
mov
rcll
gs
aas
fucomip
xchg
enter
sahf
int3
icebp
mov
cmp
push
pop
jo
jne
mov
out
add
lds
jl
adc
cld
shrb
sahf
pop
add
and
or
xchg
jbe
dec
mov
push
ds
mov
or
aaa
lds
mov
movsb
es
push
in
mov
int
sbb
stc
and
int
adc
jecxz
insl
mov
sub
in
fmull
sub
jg
jle
xchg
movsl
cmp
fdivs
bound
fwait
outsb
add
mov
mov
lret
rol
sbb
fwait
xchg
pop
pop
in
iret
xor
push
sbb
mov
out
push
jmp
jbe
daa
in
loopne
inc
lock
fisubrl
mov
or
jle
cltd
and
fwait
and
add
mov
loope
std
mov
incl
repz
sbb
aam
inc
jp
jg
arpl
dec
aas
sbb
mov
loope
in
xor
sbbl
pop
cli
jmp
and
je
push
and
pop
mov
lods
cmpsb
xor
outsl
outsb
repz
pop
xchg
mov
ret
sahf
enter
pop
jg
sbb
fidivrs
xchg
adc
ficomps
or
cmpsb
mov
sub
xchg
cmpb
fwait
mov
into
insl
jge
lcall
mov
mov
cmc
adc
int3
xchg
mov
mov
jge
mov
insl
jp
shrl
adc
pop
test
pop
insb
pop
cmp
push
shll
outsl
push
xchg
sbb
cli
rorl
adc
lea
scas
clc
fwait
cmpsl
push
std
and
pop
icebp
enter
fsubrl
mov
lea
mov
test
sbb
loope
shll
inc
mov
adc
sbbb
jge
mov
mov
aam
inc
pop
in
or
jmp
mov
scas
cmpsl
xor
add
roll
jae
mov
fcmovne
insl
add
popa
loope
repnz
imul
mov
push
andb
sbb
push
stos
movsb
out
pop
sbb
xlat
xor
mov
xor
inc
pushf
jge
xlat
clc
dec
mov
xchg
mov
mov
cmpsb
add
push
dec
add
mov
sti
dec
ficoms
sub
pop
loope
dec
or
cltd
push
out
in
cmp
adc
lods
xorb
xchg
flds
icebp
or
bound
push
lods
std
lea
mov
subl
aas
add
and
sub
lock
ja
or
pop
or
push
push
cmpsb
leave
test
js
push
jb
ret
xchg
fidivrl
sbb
inc
dec
or
pop
repnz
push
mov
pop
scas
fistpl
xor
sbb
adc
inc
stos
lret
loop
mov
aam
enter
inc
mov
sbbb
push
adc
mov
adc
int3
xor
xor
and
xchg
push
xor
push
mov
mov
xchg
mov
lahf
adc
fldt
repnz
or
aam
inc
jns
xchg
sub
stos
jle
pop
fisubrl
sub
pop
or
cmp
mov
pusha
and
adc
in
xorl
sub
sbb
mov
pop
push
pop
inc
mov
sub
mov
in
clc
sbb
jae
or
xorb
push
add
nop
pop
xor
ljmp
arpl
cli
aam
pop
das
in
int
sbb
mov
xor
fucomip
outsl
cmp
jp
pop
in
std
inc
fadds
inc
in
push
in
filds
mov
and
cltd
arpl
add
or
imul
pop
xchg
cld
loopne
test
shlb
subb
fcmovnbe
jo
fnstsw
test
insl
dec
mov
jg
aaa
jae
pop
inc
or
cmp
xchg
xchg
mov
sub
sbb
out
jno
jne
or
cmpl
and
mov
push
popa
or
mov
add
rolb
adc
lea
sub
sub
inc
cmp
icebp
andb
inc
sub
pop
and
dec
and
mov
dec
xchg
adc
push
sbb
pop
adc
push
push
xor
aas
pop
je
or
push
cmp
mov
mov
push
push
std
xchg
sub
jbe
dec
pop
testl
push
or
or
mov
clc
mov
filds
mov
jno
adc
mov
lret
enter
xor
or
push
loope
icebp
jp
adc
js
out
mov
sub
pop
arpl
js
pop
mov
add
lock
insb
daa
xchg
sub
mov
mov
pop
stos
mov
in
or
mov
jne
mov
stos
mov
clc
mov
inc
mov
xor
dec
scas
inc
scas
xchg
test
int
mov
adc
imul
jle
jae
ss
test
and
subb
mov
pop
cmc
adc
rcr
negb
inc
gs
sbb
mov
leave
sahf
mov
imul
test
add
inc
add
jg
daa
mov
scas
sti
daa
out
inc
pop
mov
jb
mov
push
stc
dec
add
ret
lret
cli
in
mov
mov
jg
scas
push
icebp
mov
fmulp
in
push
pushf
in
movsb
cmp
ds
inc
mov
fiadds
aaa
inc
mov
mov
rcl
fs
mov
push
enter
xchg
jnp
negb
cmp
and
pop
ds
jmp
pop
rorb
addb
insl
aad
aam
insb
test
push
icebp
sub
aaa
insb
ss
or
inc
orl
movsl
push
xchg
clc
into
xchg
hlt
mov
aam
cli
and
mov
push
push
js
movsb
fidivs
das
das
inc
jnp
pop
add
ds
mov
sahf
in
imul
xchg
xor
push
ss
loop
aam
cmp
icebp
or
arpl
loope
adc
or
cmp
test
loopne
or
rolb
mov
adc
adcl
and
and
adc
cmp
imul
cmpsl
mov
out
shl
ret
popa
fdivrl
popa
arpl
push
gs
lcall
icebp
shll
les
adc
mov
les
fimuls
iret
in
pop
int
aad
addr16
cwtl
leave
jl
sub
stos
scas
xchg
in
jno
insl
push
movsb
movb
xor
push
jnp
xor
sti
sbb
lcall
mov
mov
popa
aam
xchg
cwtl
mov
or
mov
push
dec
fldt
hlt
jae
push
xchg
insb
mov
cs
and
inc
imul
adc
lds
fistl
cmp
xor
fldt
in
scas
ret
adc
cmpsl
out
mov
push
repz
mov
stc
rorl
mov
pusha
jle
xchg
push
test
or
adc
cwtl
mov
sub
push
mov
hlt
test
mov
adc
and
loope
inc
fadds
cs
std
scas
mov
jle
adc
or
jle
mov
push
add
mov
gs
std
pop
and
dec
cli
cmp
insb
mov
imul
or
lods
or
in
lods
andb
sub
fdivrs
bound
into
push
aad
mov
lcall
in
cli
push
call
adc
cmp
pop
dec
dec
pop
movsl
mov
fisttpl
stos
xor
jmp
sbb
adc
jmp
or
jae
js
arpl
push
leave
jns
xchg
mov
xchg
push
idivb
test
mov
cs
mov
fsubrs
adc
stos
loopne
out
sbb
ss
jge
movsb
cmp
push
or
loop
inc
nop
dec
imul
ss
sbb
pop
adcb
dec
movsb
mov
movsl
js
sub
fbstp
leave
jle
mov
and
dec
iret
imul
mov
pop
push
stos
jg
inc
sahf
pop
push
push
add
mov
xchg
mov
or
sub
pop
lds
or
mov
pusha
push
mov
repz
cmp
andb
das
cmp
cwtl
nop
or
mov
mov
dec
ss
cltd
adc
ds
jle
add
or
push
je
mov
mov
jb
jbe
stc
mov
int3
xchg
mov
mov
les
aas
outsl
adc
xchg
ljmp
add
pop
inc
cwtl
sub
int3
fidivs
cmpsl
insb
adc
add
pop
test
or
or
cltd
xor
mov
test
outsb
hlt
mov
das
dec
pop
mov
push
mov
lock
mov
int
pop
cmp
fbld
outsl
shl
outsl
push
mov
icebp
mov
push
jge
pop
jb
sub
add
jp
add
mov
orl
jecxz
clc
jae
mov
sbb
enter
cmp
dec
loope
gs
inc
sub
stos
add
push
inc
push
jge
mov
cltd
dec
xor
xchg
inc
mov
and
jmp
aad
mov
mov
or
pop
xor
push
idivb
frstor
orl
sub
orl
testl
jecxz
sub
cmp
push
cmpsb
repnz
in
xchg
inc
xchg
imul
jae
test
ss
lea
ds
jl
xchg
imull
push
mov
je
jl
aad
cmp
incb
mov
test
lcall
fldenv
dec
femms
adc
ss
sub
xchg
cld
cmpsl
inc
mov
pop
loop
into
into
pop
xlat
nop
sbb
mov
inc
cwtl
mov
push
xor
and
and
hlt
sub
repnz
movsb
lods
mov
sub
dec
dec
pop
mov
ss
mov
lret
mull
fnstcw
ficomps
scas
call
fnstsw
xor
mov
repnz
bound
jb
aam
jmp
cmp
adc
imul
stos
addr16
scas
ret
cmp
pop
sub
in
clc
dec
out
repnz
jo
mov
push
shl
rorl
es
das
pop
xchg
call
cwtl
push
push
mov
dec
arpl
push
pop
and
cs
aaa
cld
or
and
in
fadd
pushf
rcrl
mov
jno
cmp
call
int
fwait
int
inc
sbb
shl
dec
or
jmp
xlat
outsl
nop
icebp
pushf
jmp
push
adc
mov
dec
xor
adc
add
inc
shrd
inc
gs
insb
nop
inc
add
into
mov
jmp
outsb
mov
lret
out
inc
and
xor
addr16
arpl
jmp
shll
or
mov
mov
ljmp
jns
mov
fdivl
mov
mov
push
mov
scas
xchg
adc
jp
dec
in
inc
enter
xchg
sub
xor
pop
pop
daa
lret
mov
ficompl
mov
sbb
push
xor
mov
aad
mov
pusha
andb
cli
xchg
xchg
sub
rorb
into
leave
mov
xchg
clc
incl
arpl
sub
iret
repz
cwtl
add
pop
ret
push
shll
pop
gs
cmp
aad
mov
movsl
inc
fdiv
fwait
mov
inc
test
jnp
std
jo
pop
fnstsw
sbb
outsb
loope
pop
popf
jo
cmp
enter
jae
xchg
sbb
shlb
push
sbb
sbb
les
sbb
ss
jge
scas
in
das
in
sbb
dec
mov
pop
ret
and
mov
cmpxchg
dec
adc
mov
repnz
jl
lcall
mov
in
das
pop
push
ja
stos
cmpsl
lcall
cwtl
push
adc
xor
fisubl
mov
scas
repnz
mov
push
xchg
or
and
ja
push
shrl
jmp
pop
sarl
pop
or
cmp
test
sar
push
icebp
ljmp
xchg
cli
xchg
add
outsl
and
aam
cmc
sbb
daa
and
ret
pop
outsl
dec
js
mov
loop
aam
hlt
cmp
adc
decl
adcb
xor
lds
jp
sub
mov
stos
jl
inc
adc
pop
cmpsl
add
add
dec
dec
push
fisttps
and
fdivr
inc
sahf
movsb
inc
repnz
add
sbb
mov
dec
inc
fdivrs
cmp
push
fdivs
mov
out
sub
push
cmp
scas
imul
pop
inc
aas
push
xchg
push
rol
addr16
das
out
or
dec
cmc
ljmp
lds
cmp
test
insb
mov
scas
sbb
inc
lods
shlb
scas
mov
sub
mov
xor
sub
js
ret
mov
test
pop
cld
push
lods
ret
gs
push
inc
pop
push
or
shlb
gs
pop
movsb
stc
xchg
outsb
shrl
adc
sbb
aaa
push
lret
inc
dec
out
pop
test
xchg
testb
cmc
inc
mov
test
inc
fs
leave
sub
aaa
cmp
out
inc
and
cmp
cli
fnsave
mov
lods
xor
fisubrs
push
stc
ret
sar
fldcw
iret
dec
lcall
pop
jno
sub
test
xor
xchg
pop
aad
inc
mov
jl
xor
cmpl
mov
and
pop
mov
outsl
std
jmp
jmp
outsb
add
fists
sub
jmp
sub
mov
nop
out
loopne
insb
rorl
dec
lds
xchg
dec
aad
rorl
daa
jbe
or
lret
adc
lock
shlb
mov
int
xchg
js
dec
mov
cwtl
or
dec
arpl
es
pushf
mov
fsts
in
push
add
dec
out
sub
fnstenv
decb
das
push
arpl
inc
sbb
imul
mov
mov
jle
outsl
nop
jl
jle
mov
mov
push
jge
fwait
push
outsl
pop
dec
dec
pop
nop
cmc
jo
xor
dec
addr16
cmp
and
xorb
add
jbe
adc
or
outsl
in
sbb
pop
push
mov
ret
movsl
and
xchg
fstpt
sub
outsl
ret
incl
insb
jmp
jne
xor
cmp
mov
and
jno
pop
sub
fidivs
stc
test
push
push
popf
jnp
ljmp
add
int3
sub
fdivs
rcl
mov
inc
jnp
test
aaa
mov
ds
xchg
add
cltd
inc
decb
in
cmp
into
je
mov
fwait
cld
mov
imulb
and
frstor
adc
xor
pop
nop
dec
inc
push
cld
adcb
or
jg
cli
enter
test
je
add
rcrl
into
fsubl
in
in
pop
mov
loope
xchg
xchg
negl
mov
and
cmp
fsubrl
cmp
popl
rorl
les
adc
mov
inc
les
and
in
xchg
inc
inc
xor
in
stc
inc
mov
jo,pt
lcall
insb
add
cltd
xor
in
icebp
mov
cmc
pop
fbstp
xchg
xchg
inc
rol
std
mov
cmc
mov
rorb
dec
dec
mov
add
pop
adc
outsl
push
pop
insl
cmp
data16
push
test
sbb
aaa
add
push
push
add
dec
icebp
cmpsb
or
xchg
cli
xchg
or
mov
cwtl
xchg
fstpl
lahf
sarl
or
add
mov
stos
adc
xchg
xor
lret
loope
mov
int3
ds
adcl
aaa
pop
icebp
push
daa
fadds
out
pop
and
test
cmp
fnclex
pop
jp
out
xchg
sub
push
mov
ss
in
and
xchg
cmp
les
in
rorl
lds
fsubr
ss
lods
mov
dec
mov
fucomp
inc
push
inc
lock
call
mov
outsl
push
lock
inc
dec
fsubl
adc
faddl
mov
lea
imul
jns
xor
out
out
fimull
push
daa
icebp
enter
mov
mov
sbb
test
scas
rcrl
ss
data16
call
mov
inc
dec
and
pop
test
or
ret
cmp
enter
dec
push
inc
stos
dec
sub
fildl
mov
icebp
sbb
push
in
pusha
dec
push
mov
dec
xor
fbld
mov
sahf
sub
test
pop
sahf
dec
push
xchg
cmp
mov
push
pop
push
inc
fstpt
mov
ljmp
scas
push
dec
add
insl
inc
adc
insb
movsb
bound
push
ljmp
inc
push
inc
frstor
and
lea
pxor
push
test
adc
inc
das
push
shl
mov
or
mov
or
pop
xchg
adc
lock
dec
jge
jle
jp
fwait
sbb
pusha
mov
jo
dec
out
je
sub
push
sbb
mov
push
fildll
sbb
sbb
xor
xchg
cmp
sbb
mov
test
inc
lods
jg
dec
and
jl
jle
ret
stos
inc
hlt
mov
inc
ret
out
add
cwtl
lods
lret
mov
inc
outsb
pop
ret
push
sbb
push
pop
movb
dec
push
hlt
scas
je
sbb
loope
bound
push
sbb
pop
mov
shrb
ljmp
je
mov
sti
lock
fs
lds
ja
jo
dec
rcl
sub
dec
popf
call
jae
mov
lods
xchg
push
mov
arpl
cmp
fistpl
sti
dec
int
jge
inc
pop
and
js
lret
sti
inc
xlat
sub
mov
cmp
mov
jno
or
pop
jg
fsubl
aad
mov
jecxz
fmull
pop
mov
aad
xor
or
pop
mov
inc
int3
mov
in
xor
push
lods
dec
jecxz
add
mov
jno
je
cmpsl
sbb
ja
inc
adc
jg
fwait
xor
inc
mov
icebp
mov
mov
dec
xor
lret
bound
ds
aad
push
scas
jbe
andb
outsl
push
lods
sub
mov
xor
sbb
call
pop
ret
jbe
xor
xor
out
jecxz
aas
mov
sbb
inc
ljmp
pop
shlb
pushl
xchg
cs
cs
ljmp
dec
xchg
shlb
lret
xchg
jo
jmp
sbb
jecxz
cmpsl
cmc
sbb
and
jge
fwait
enter
lock
shr
dec
popa
pop
rep
lea
cmpsl
mov
xlat
add
sbbl
pop
push
push
iret
pop
shlb
inc
ret
mov
dec
dec
mov
mov
movsb
mov
xor
dec
and
xchg
xchg
in
mov
in
loop
cmpsb
xchg
rorl
mov
pop
jnp
pop
insb
mov
inc
add
mov
orl
cmp
mov
dec
pop
ds
test
lods
xchg
sbb
lahf
and
das
repnz
loope
clc
loop
icebp
nop
cmpb
pop
fwait
test
jge
mov
in
loope
loopne
lret
add
into
cmp
out
cmpsl
sub
push
int
gs
sbb
int
mov
push
scas
sbb
adc
or
jno
xchg
dec
push
mov
add
inc
jae
jne
jle
vunpckhps
and
int3
xor
shrl
int3
idivb
test
lods
cmp
cmpb
and
pusha
adc
scas
add
mov
adc
pop
data16
mov
sub
or
aad
cld
movsl
adc
repnz
xchg
loope
dec
cmpsl
scas
pop
notl
dec
nop
sbb
hlt
jns
outsb
xchg
loop
adc
popf
xor
or
cmp
push
fsubr
pop
inc
mov
inc
je
hlt
repz
dec
les
jns
dec
test
arpl
bound
out
lea
pop
cwtl
sbb
inc
jbe
mov
outsl
pop
push
inc
xor
xchg
mov
jb
push
xor
or
aam
cmpsl
nop
xchg
sbb
out
orb
xchg
inc
aas
adc
loope
push
jmp
cmp
jno
dec
sahf
aad
cli
xchg
stc
nop
pop
repz
sbb
dec
jns
imul
movsl
loope,pt
jle
push
movsl
aaa
ja
imul
push
sbb
nop
push
in
dec
mov
or
jg
xorb
outsl
adc
mov
inc
shlb
jae
inc
out
add
xchg
in
sahf
pushf
inc
fimuls
ss
pop
fcomps
pop
jl
adc
insb
jae
lret
test
in
pop
ficompl
imul
mov
sbb
xorb
pop
clc
dec
ss
setp
xlat
movsl
jl
sbb
imul
sbb
fidivs
outsl
xchg
mov
mov
mov
dec
es
mov
rcr
jl
subl
adcl
inc
das
or
add
mov
iret
sub
stos
mov
dec
xchg
add
cmp
shlb
insl
push
jmp
call
popa
add
popa
cmp
ret
mov
and
cwtl
and
adcb
push
stos
cmc
notb
andb
and
mov
dec
cmp
mov
push
push
or
loop
mov
cli
xlat
addr16
and
fimull
inc
push
pushf
ret
inc
testb
xor
sub
das
pop
fcmovne
shll
inc
xchg
sub
xchg
cmp
mov
mov
xchg
mov
jg
adc
rcrl
ss
ss
cmp
push
sbbl
rcrl
add
aaa
jbe
jns
fstl
inc
dec
inc
adc
push
sbb
sbb
pop
mov
loopne
ficoms
out
xchg
mov
rorb
xorb
mov
in
add
insl
test
cmp
pusha
in
adc
jbe
stos
shl
jmp
xor
or
sbb
mov
fbstp
cmc
pop
cmpsl
sub
icebp
xchg
sub
enter
sar
jge
sub
push
mov
popf
xchg
mov
and
and
cmc
dec
pop
lret
lods
xlat
rolb
mov
fildl
es
into
movsb
cmp
fistl
sahf
test
cs
inc
mov
sar
std
push
stc
cwtl
push
popf
dec
xor
jle
push
mov
loopne
mov
imul
dec
rolb
xchg
sub
rolb
jg
mov
mov
xchg
adc
lret
sub
jp
sbb
jns
testb
pushf
mov
sahf
jl
daa
sahf
les
lods
mov
mov
xchg
into
inc
ret
pop
cmp
cmc
pop
jl
cmp
xor
clc
or
adc
xchg
outsb
mov
out
push
xchg
xlat
rolb
push
jo
jmp
addl
jp
out
sti
lcall
mov
cmpsl
notl
fstpt
fbstp
in
mov
pop
push
push
lods
aas
ret
sub
sub
push
int3
fwait
push
lds
cs
push
rclb
fcmovnbe
movsb
pop
dec
mov
add
mov
jle
test
inc
push
or
pop
xor
push
dec
pushf
jae
and
incb
das
push
pop
loope
mov
rcll
sahf
shrb
icebp
cmp
mov
push
sar
into
fdivrs
add
stos
ret
or
cltd
xchg
imul
pop
cwtl
scas
call
insl
and
notb
sbbb
push
xlat
mov
push
pop
add
xchg
and
pop
sub
rol
sbb
push
push
movsb
repnz
xorb
dec
add
sbbb
push
sub
mov
mov
cwtl
stos
leave
int
xchg
cmp
mov
insb
scas
int3
mov
jmp
std
adc
out
insl
fnstenv
pusha
or
add
js
iret
or
xorb
xchg
nop
test
mov
mov
arpl
je
cwtl
pop
jmp
mov
and
js
xlat
das
es
lret
sti
aad
adc
jb
adc
jmp
xchg
loope
xchg
jl
cmp
jp
or
mov
add
stc
mov
rorb
flds
pop
bound
aaa
sub
lahf
rcrb
xor
stos
dec
jg
push
jmp
int3
rorb
dec
sbb
and
inc
push
in
mov
imul
push
jae
andb
iret
cmc
mov
out
mov
inc
xor
push
sbb
gs
mov
repz
test
fs
dec
lret
mov
loop
pop
dec
pop
rcrl
xor
mov
hlt
movsb
cmp
and
mov
adc
adc
pop
push
ret
inc
std
xchg
ja
popa
pop
cmp
mov
andl
or
test
lret
dec
jmp
sub
push
push
xchg
mov
pop
repz
movsb
loope
add
ja
in
jo
mov
xchg
fiadds
je
push
into
mov
push
loop
in
popa
sbb
or
stos
sbb
mov
int
xorl
scas
xchg
cmp
call
add
jbe
and
mov
into
push
mov
jnp
mov
out
mov
das
aad
loopne
mov
dec
mov
jnp
push
push
or
fldpi
mov
insl
xor
cmp
js
clc
xor
inc
loopne
and
in
xlat
rcrl
adc
outsl
inc
or
push
cmp
shrb
iret
push
rorl
lea
das
xchg
mov
dec
mov
mov
cs
cmpsb
pusha
rclb
std
aaa
sbbb
cmpsl
in
out
xchg
cli
test
cltd
rcrb
dec
inc
jl
mov
dec
jno
clc
mov
adc
lcall
pop
in
loope
dec
pop
mov
dec
loope
or
pop
mov
jle
int3
pop
xor
jl
ret
outsb
test
or
inc
cmpb
data16
xchg
mov
ret
inc
jmp
lds
xchg
mov
cmp
mov
cmpsl
maxps
addl
mov
neg
sahf
jp
sar
cwtl
out
cwtl
sub
scas
out
push
inc
mov
jne
push
shll
xor
jnp
xor
jp
jbe
ficoms
int3
mov
and
cmc
xor
out
push
adc
sub
inc
pusha
mov
repz
mov
mov
add
test
jge
xor
inc
fnstcw
or
incb
mov
fnstcw
imul
inc
pop
std
xchg
mov
mov
mov
and
push
aad
push
pop
mov
aaa
push
xor
lret
adc
mov
arpl
push
outsl
shll
cli
push
fisubrl
sarb
test
fsubrs
mov
ret
repnz
cmp
pusha
jb
sbb
add
sbb
popf
jg
xor
dec
loopne
push
lahf
cld
mov
hlt
lcall
push
call
lcall
inc
push
ja
in
aaa
or
lods
xor
sub
enter
xchg
fs
mov
mov
adc
cmp
mov
xchg
xor
mov
mov
sub
out
pop
dec
lret
adc
inc
mov
gs
arpl
iret
mov
pop
adc
int3
popa
movsl
push
xchg
jl
test
adcl
add
mov
push
jecxz
dec
dec
pusha
cmpsb
pop
movsl
pop
ds
cmp
and
push
notb
mov
pop
pushf
mov
cmpsl
ds
das
data16
inc
cmp
jle
enter
adc
adc
sahf
cmp
push
xor
inc
das
lret
pop
mov
test
stos
pop
xchg
and
arpl
sbb
lods
orl
jge
cmp
orl
push
dec
add
and
dec
insb
sbb
lret
loop
fnsave
mov
push
call
repz
lds
popf
stc
pop
hlt
and
movsl
icebp
pushl
imul
xor
subb
mov
mov
into
and
bound
mov
inc
mov
clc
iret
jl
xor
aas
outsb
and
push
js
jp
fidivs
ret
and
fs
pop
inc
push
jae
xchg
outsb
pop
insb
jecxz
repz
pop
pop
subl
and
push
jo
cmp
jae
xchg
pop
mov
push
and
add
jno
dec
mov
jbe
push
pushf
imul
out
and
pop
adc
js
pop
negb
popf
cmp
sub
cwtl
test
inc
cmp
mov
stos
inc
aad
sti
ret
loop
les
icebp
mov
adc
cmp
fwait
loopne
pop
push
jo
cmc
sbb
mov
push
nop
outsl
xorb
and
rcrl
adc
lret
mov
xlat
rcll
jmp
popa
enter
faddl
in
sbb
repnz
push
orl
or
fmull
popf
ret
pop
sbb
mov
lcall
pop
std
push
adc
xchg
and
or
mov
jmp
mov
jb
dec
sub
out
mov
xor
lods
int
pushl
mov
xchg
iret
aas
add
xchg
mov
pop
cs
inc
add
xor
adc
push
cltd
add
hlt
xor
xchg
adc
push
loope
aaa
mov
inc
mov
fwait
dec
pop
mov
xchg
add
xchg
pop
out
test
pop
mov
mov
sub
cld
sub
xchg
add
cld
xchg
shlb
pop
push
repz
jo
and
int3
int3
xchg
movsb
push
mov
andl
fisttpll
mov
iret
icebp
pop
pop
inc
into
dec
mov
outsb
ss
fnsave
out
test
fistpl
cmpsl
cmpsb
imulb
ja
jmp
sbb
pop
fwait
adc
rclb
mov
jnp
and
or
xor
xchg
mov
cmc
pop
mov
ret
ret
push
out
aas
movb
out
pushf
xor
movsl
lock
andb
xchg
loopne
inc
xchg
push
jo
cltd
dec
or
pop
cmp
jecxz
rclb
shlb
push
xor
mov
je
adc
xor
iret
inc
repz
sub
lcall
push
into
jmp
push
mov
js
ret
aad
cld
mov
in
shl
or
repz
les
sub
inc
mov
xchg
pop
lcall
adc
dec
dec
mov
sbb
pop
shrb
jecxz
xor
in
jl
add
loopne
mov
sbb
push
mov
outsb
jecxz
add
xor
sahf
fldt
cmpb
sahf
scas
pop
out
aam
fwait
cld
movsb
xor
or
fmuls
sub
add
clc
es
sarl
ret
in
push
fiaddl
or
aad
xor
xchg
std
inc
fucomip
rorb
rcl
cld
dec
lods
inc
orb
jle
fs
repz
hlt
stos
xchg
and
adc
inc
xchg
adc
test
hlt
mov
pop
xchg
lcall
dec
hlt
dec
out
imul
and
dec
push
jg
xchg
into
or
cs
inc
and
cmp
in
push
andb
fisubrl
add
dec
arpl
mov
fistl
imul
jmp
movsb
mov
inc
clc
in
jns
mov
int
and
fs
push
and
iret
data16
loopne
insl
sub
and
cltd
sbb
dec
scas
jmp
fwait
jmp
push
popf
mov
dec
add
ds
js
adcl
leave
adc
xor
dec
pop
sbb
jns
leave
pop
lahf
stos
aas
pusha
jl
rcr
fstps
jne,pn
push
cmpsb
imul
cwtl
jb
mov
mov
dec
mov
push
sbb
std
rclb
xor
sbb
scas
xor
iret
sub
and
cmp
push
pop
mov
fcmovne
js
jmp
aaa
pop
jmp
jns
and
and
std
lods
dec
xor
jecxz
ds
stos
icebp
sbbb
fiaddl
xlat
pop
sar
mov
add
pop
dec
adc
ret
outsb
or
out
add
sarb
fdivl
shlb
push
pop
loopne
lods
cmc
dec
pusha
inc
cli
adc
inc
xor
push
outsl
loopne
jo
test
jp
into
enter
xchg
push
sahf
adcb
imul
inc
cmp
lret
sti
cwtl
add
sbb
ds
pop
dec
enter
shlb
fistpll
and
add
in
addr16
sbb
fisubrs
cs
push
mov
jnp
mov
jbe
jmp
mov
aam
fwait
das
test
sbb
minps
je
xchg
sub
mov
mov
shld
mov
leave
mov
mull
fxch
mov
push
add
cli
loope
mov
mov
popf
in
pop
mov
push
sbb
in
sub
push
sub
sbb
sbb
imul
xor
mov
je
pop
jno
xlat
mov
les
daa
pop
out
repnz
push
xor
cli
xor
sub
jnp
jg
in
xchg
outsl
les
mov
xor
dec
push
popa
jns
std
pop
stc
pop
mov
mov
cmc
pusha
and
add
pop
test
loop
push
xchg
call
xor
pop
mov
adc
int
cld
enterw
jecxz
jae
nop
int
jae
imul
addr16
mov
lret
sbb
mov
cmp
bound
loopne
outsb
test
xor
fdivr
jb
jne
movsb
cwtl
lret
fsts
push
xacquire
mov
daa
cli
iret
pushf
arpl
push
cld
gs
sub
repz
ja
orb
push
xor
popa
sub
ljmp
pop
jl
imul
outsb
push
stos
xchg
sub
aam
popf
ret
pop
jae
lea
repnz
push
sbb
testb
mov
fsts
cmp
into
outsb
push
lret
into
iret
jg
sahf
clc
loop
inc
cltd
mov
scas
and
es
and
pusha
dec
pop
and
pop
and
insb
or
adc
mov
addl
stc
dec
dec
push
in
push
outsb
cmpb
inc
popf
pop
push
fstl
sbb
mov
test
repnz
xchg
adc
idivb
scas
push
inc
mov
sbb
arpl
dec
mov
push
rcr
mov
or
xchg
mov
add
mov
xchg
fadds
sub
pop
ret
insl
sbb
mov
pop
pop
push
sbb
ds
aam
adc
out
lahf
xor
push
sbb
popa
and
add
or
dec
sahf
mov
lahf
jmp
rolb
sub
call
sbb
sbb
jns
mov
xor
push
mov
int
adc
arpl
mov
cltd
or
ljmp
jb
jmp
mov
outsl
push
pop
enter
ret
xlat
out
hlt
outsl
dec
in
icebp
sbb
stos
lds
mov
dec
popa
jg
push
stos
ret
inc
ljmp
xor
loopne
jle
pop
fsub
jns
mov
mov
and
in
mov
imul
pop
lds
inc
cmpsb
dec
out
cmp
outsb
stos
sbb
negl
sahf
xchg
dec
js
insb
scas
xchg
and
enter
push
xchg
mov
inc
repnz
in
in
stos
cmp
lods
push
mov
and
imul
xor
pop
push
sahf
inc
xor
xchg
fwait
stc
mov
ss
push
lods
adc
jmp
mov
and
int
inc
mov
out
mov
das
push
dec
push
repnz
mov
and
rol
adc
outsl
hlt
fcomip
and
jb
call
mov
fsts
ss
in
or
mov
outsb
int
mov
daa
addr16
adc
mov
mov
mov
mov
int
mov
cmpsl
inc
sub
out
adc
pushf
and
pop
inc
in
decb
orb
sbbl
xor
call
subb
rcrb
sub
mov
dec
xlat
fstl
xor
hlt
push
inc
into
cmpsl
jae
out
inc
push
sahf
sub
fdiv
inc
jbe
clc
mov
cmpsb
inc
aas
xchg
sbb
mov
add
pop
in
jle
push
je
mov
popf
insb
sbb
mov
cmp
pop
sahf
in
sarl
pop
lcall
adc
icebp
add
mov
jecxz
cmpsl
sub
pop
pusha
or
sbb
rol
mov
iret
cmp
cmp
fs
inc
stos
aas
cmpsl
fisubl
imul
mov
cmp
mov
xchg
mov
jg
jge
adc
or
mov
loopne
insb
cmc
lcall
test
out
and
mov
and
xchg
push
cmp
sub
dec
cwtl
xlat
sbb
repnz
mov
sub
push
sbb
stos
lock
add
inc
pop
pop
movsb
out
jno
mov
fdivrl
loopne
jnp
decb
repz
or
lea
pop
fstpl
xchg
and
push
xor
iret
xchg
imul
fadd
sbb
lods
mov
out
push
cmp
pop
xchg
mov
ss
and
in
lods
push
jbe
mov
rcrl
movsl
insl
dec
xchg
call
jl
xor
leave
xchg
sub
aas
xor
add
pusha
andb
mov
push
cltd
lahf
loope
sarl
add
in
cltd
lods
mov
popa
clc
push
or
lret
jge
cmpb
adc
out
popa
fisubs
xchg
push
cli
scas
mov
test
inc
sbb
data16
push
jb
jg
mov
xor
or
das
jnp
dec
or
pusha
xlat
push
out
ja
mov
xchg
push
loopne
or
movsl
leave
scas
and
fsts
cmp
out
aaa
dec
adc
jo
mov
mov
cmp
cmp
in
movsb
pop
lret
ret
push
fstps
test
shrl
fimull
mov
test
mov
mov
mov
adc
or
adc
xor
xor
movsb
and
dec
push
lahf
add
cs
pushf
pop
pop
insb
sub
sbb
ror
fxtract
push
jmp
fistps
push
data16
data16
xchg
in
test
xchg
je
jno
sub
fsubrs
iret
mov
notb
jbe
cmpsl
aad
lcall
pushf
jmp
movsl
xchg
mov
sub
push
add
les
cmp
mov
adc
sbb
lahf
shlb
jmp
int
arpl
popf
sub
inc
jae
ja
scas
inc
cmpsb
jge
adc
dec
int3
arpl
repnz
in
aad
je
js
loopne
lret
dec
pop
push
sbb
xchg
pop
lea
test
incb
jmp
add
sub
xchg
dec
ror
fidivl
sti
xchg
dec
ficompl
mov
pop
or
mov
fstpl
add
jae,pt
and
and
add
imul
rorb
gs
jle
aas
loop
lahf
test
dec
dec
dec
leave
add
or
and
shrl
jg
sahf
daa
and
fnstenv
inc
or
xchg
or
les
mov
lret
inc
mov
xchg
fstp
cmp
push
cmp
fmull
shll
js
push
loopne,pt
out
aad
mov
push
pop
dec
pop
cmp
push
xchg
mov
mov
les
ret
movsl
pusha
jo
cmp
push
jl
inc
cmc
fwait
repnz
mov
mov
pop
sbb
insb
sahf
icebp
fisubrs
data16
dec
mov
imul
xchg
jbe
dec
and
sbb
add
jmp
int3
cmpl
adc
or
ja
pop
lcall
test
xchg
push
jbe
xchg
push
lret
push
mov
xorl
sub
jo
mov
cld
mov
movsb
mov
pop
clc
sub
repz
sub
adc
adc
mov
lock
fwait
shl
loop
aad
adc
insb
lgdtl
mov
mov
sub
sub
stos
jp
cmp
imulb
dec
pop
sub
nop
or
sub
sub
add
mov
sbb
fidivrs
pop
shrl
xor
insb
decb
fucomi
lods
outsb
xchg
fdivrs
sub
mov
sub
sub
rolb
xor
leave
mov
push
pop
xchg
scas
cmp
jg
lds
xor
mov
and
xor
xchg
jmp
pop
and
add
inc
or
cmpsl
mov
shlb
lahf
mulb
mov
lds
mov
and
adc
int
mov
add
stos
xchg
out
pop
in
add
daa
cmc
repnz
add
pop
cmp
xchg
mov
jns
inc
out
dec
mov
cli
sub
rcrb
test
push
jmp
lea
lret
push
cmpsl
adc
inc
sti
jb,pn
pop
test
xchg
push
inc
in
sub
fsubrp
inc
xor
add
jle
subl
add
aad
mov
or
xor
pop
cld
aad
jmp
push
in
stc
stc
jbe
mov
sarb
mov
jmp
cli
popa
aaa
scas
push
loop
push
pop
pop
pop
cmpl
loop
das
pop
dec
cmp
mov
mov
cltd
jnp
mov
and
clc
adc
inc
lds
cmp
lods
sub
out
dec
ja
rorl
popf
sub
pusha
push
and
xorl
mov
repz
inc
cld
dec
fwait
mov
shlb
sarb
jl
and
mov
stos
pop
addl
je
mov
test
aas
nop
sub
sub
sti
xchg
lds
sbb
xchg
inc
test
mov
sub
filds
loopne
ja
out
mov
cltd
scas
mov
pusha
jmp
sbb
andb
jns
js
out
lods
dec
js
aas
lahf
xlat
daa
inc
or
mov
mov
push
add
outsl
pop
in
scas
sbb
mov
out
nop
outsl
or
cmp
popf
dec
inc
js
pop
insl
and
mov
rcl
int
scas
out
pop
testb
hlt
dec
dec
iret
push
xor
cltd
insb
rcll
subb
add
adc
and
cld
adc
sub
movl
daa
das
xchg
add
mov
lret
pop
jns
jae
stc
dec
popfw
xchg
imul
repnz
jbe
in
cmpsl
mov
int3
imul
outsl
loop
movsl
cmp
nop
ja
xchg
sub
lahf
mov
adc
lock
movsb
xchg
scas
adc
mov
inc
and
or
dec
test
sub
jns
dec
sbb
loopne
cmp
push
mov
xchg
sub
push
daa
incb
jecxz
cwtl
out
pop
icebp
loope
mov
mov
sbb
popf
dec
xchg
jp
xlat
and
or
fsubr
movsb
jno
lea
adc
cmpsb
sbbb
cld
push
out
fldenv
iret
addl
xchg
call
cmp
mov
loopne
add
inc
cmp
mov
mov
mov
inc
jo
cltd
nop
and
xchg
inc
push
sti
mov
jns
outsl
fbstp
std
loope
cmp
imul
mov
push
cs
fstps
imull
sti
pop
das
stos
cli
icebp
insb
enter
aaa
inc
neg
jle
movsl
stos
pop
mov
jbe
das
mov
mov
add
scas
mov
cmp
ret
xchg
push
adc
inc
cmp
sub
fs
pop
mov
dec
sub
syscall
pushf
shrb
ds
jbe
adc
dec
inc
pushf
fwait
xchg
out
push
jbe
mov
jp
outsb
mov
mov
cmpsl
xchg
jmp
cmp
out
mov
cmpsb
repnz
adc
adc
das
dec
enter
jmp
mov
test
sub
aas
insl
xor
push
pop
cli
xchg
mov
repnz
stos
mov
fxtract
xor
xor
or
mov
insb
outsb
cmp
xchg
pop
mov
add
cmp
xchg
mov
add
sub
sub
fdivl
mov
cli
xchg
je
in
pop
jbe
sbb
lods
test
push
mov
or
rcr
dec
pop
push
push
inc
fdivrs
pop
pop
insl
jge
jno
cmpl
mov
push
or
lret
mov
into
inc
xchg
add
in
cmp
movsb
push
mov
ret
mov
jecxz
pushf
inc
sti
inc
xor
push
xchg
jbe
inc
cmp
das
data16
jp
cmp
mov
push
xor
fdivrl
cmp
sti
in
adc
dec
cltd
xor
rorl
jp
in
cmp
adcb
mov
mov
pop
aam
sbb
cmp
gs
lret
inc
dec
mov
cmpb
mov
xor
outsb
jl
pop
idivb
loope
out
repz
ret
ja
mov
mov
pop
xor
mov
out
loope
adc
and
mov
je
ds
and
mov
leave
shl
cli
inc
cli
xchg
dec
cld
adc
outsl
sbb
imul
ja
lea
xor
push
rorb
pop
dec
fists
nop
data16
shll
shrb
push
pop
dec
and
and
int3
ret
jbe
jecxz
jle
pushf
fnstenv
in
xchg
popf
inc
neg
jns
sbb
cltd
sbb
mov
mov
cld
mov
jge
cmpsl
test
lods
jnp
in
dec
xor
jnp
insb
sub
dec
shrb
pop
and
inc
jae
aas
push
xchg
int3
daa
jecxz
inc
dec
add
inc
andb
into
repnz
jl
mov
sbbb
popl
int
loopne
dec
aas
fadds
fbstp
hlt
mov
pop
cmpsl
lock
inc
jnp
dec
dec
jmp
fisubrl
dec
pop
jbe
popa
inc
scas
lahf
test
mov
mov
dec
jp
dec
insb
insl
cmpsb
sbb
mov
cmp
sub
lret
inc
fmuls
add
adc
fidivrl
and
fnstenv
pusha
or
inc
xor
sub
push
ss
push
in
mov
lds
cmc
pop
test
and
arpl
cmp
sub
jge
mov
bound
popf
xchg
pop
mov
dec
repnz
sub
bnd
and
insb
inc
add
scas
scas
filds
sub
in
xor
fcomip
or
cmp
lcall
xor
sbb
xchg
and
in
pop
or
stos
dec
push
mov
insb
pop
lcall
aas
fcomps
xor
pop
icebp
mov
push
jp
nop
cmp
loop
mov
icebp
cmpsb
sbb
loopne
andb
lock
shl
cmp
je
popa
and
push
or
sahf
dec
fldt
xor
outsl
les
push
mov
popf
xor
in
ljmp
stos
pop
rorl
and
xchg
jae
icebp
jns
and
nop
fmuls
cli
sbb
inc
cmp
incl
and
int
inc
and
mov
push
xchg
cmp
mov
jb
dec
pop
xchg
xor
out
push
jbe
lods
inc
pop
push
inc
mov
mov
mov
or
mov
jle
lods
sbb
push
sar
and
mov
adc
ret
or
insb
into
nop
fstpl
fstl
xor
push
xchg
cmp
sub
icebp
mov
addr16
dec
adc
ss
xor
test
jmp
inc
js
cs
cmpsb
fwait
dec
jo
pushf
push
loopne
cmpb
stos
pop
pop
ja
sbb
cmp
imul
imul
jle
lahf
mov
mov
clc
or
jp
ja
stc
and
jge
dec
or
divl
add
or
addr16
cmp
sbb
xor
scas
add
aaa
into
dec
mov
lock
pop
push
and
ljmp
push
shll
das
scas
or
lahf
loope
fwait
call
adc
push
push
repnz
cmpsl
sub
jno
enter
clc
enter
fdivs
data16
xor
sbb
and
lcall
out
rcl
add
jo
mov
or
loop
test
jecxz
sbb
and
adc
xchg
pop
mov
jo
jmp
mov
push
rclb
xor
and
mov
jle
mov
xor
cmp
inc
sahf
out
int3
xor
mov
inc
inc
movsb
or
and
test
lahf
fnstenv
and
addr16
mov
pushl
das
and
daa
out
lcall
ja
sti
cs
push
cmp
ja
jbe
pop
push
add
push
je
fistpll
movd
adc
ret
call
mov
leave
cmp
push
jae
fidivrs
shll
lret
ja
push
or
push
add
jns
ret
jmp
xchg
test
subl
lcall
xor
mov
push
int3
and
pop
andnps
inc
mov
xor
push
aam
push
push
imul
pop
sbb
ret
xor
inc
incl
addr16
lods
pusha
push
push
fldl
mov
mov
add
jge
out
pushf
xlat
push
pusha
adc
jge,pt
jo
xor
into
jae
dec
xchg
stos
xor
mov
mov
mov
mov
or
loopne
int
test
loopne
mov
cmp
xchg
call
lahf
jbe
lret
outsl
and
and
cwtl
das
jmp
addr16
insb
sbb
leave
mulb
test
xchg
scas
xor
pop
aad
fcmovnbe
inc
dec
or
in
push
shrl
or
push
cwtl
ret
dec
popf
das
sbb
sbb
out
cmp
push
sti
les
jo
ret
je
mov
dec
fistpll
or
incl
or
lcall
psubusw
and
inc
mov
sub
fisubrs
int3
dec
dec
push
pop
mov
add
xor
loopne
fnstsw
int
inc
mov
in
dec
inc
data16
js
cmp
enter
and
out
ds
call
je
push
mov
pop
dec
cmp
test
divl
dec
xchg
in
cli
mov
mov
sub
xchg
xlat
sbb
mov
lods
test
sbbl
mov
rcrb
mov
test
push
cwtl
mov
xor
push
jmp
shrl
jns
inc
cltd
dec
imul
repnz
repnz
stos
cmpsb
add
ret
push
mov
loopne
or
mov
inc
or
xor
sahf
ret
js
push
push
in
fwait
sti
xchg
cmp
ds
inc
jecxz
test
mov
in
mov
sbb
xchg
insb
xchg
pop
push
clc
xchg
ret
and
inc
jmp
jge
outsl
xor
loop
imul
push
or
shll
mov
push
xor
sub
mov
inc
and
mov
enter
mov
xchg
xor
mov
ret
or
loop
and
aam
popa
xor
cmc
pop
jne
jo
jg
and
leave
mov
inc
xor
je
xor
push
adc
pop
das
dec
fsubl
gs
xchg
sahf
loop
sbb
xorl
rcrb
add
in
stc
mov
enter
stos
pop
mov
mov
in
push
mov
sub
aam
lret
pop
mov
mov
or
adc
xchg
fildll
test
sub
rclb
andl
int
jns
add
inc
frstor
inc
mov
mov
imul
mov
cwtl
inc
and
xchg
mov
inc
push
js
mov
out
mov
jl
xor
imul
jnp
or
out
test
sbb
xlat
fs
insb
popl
and
lret
mov
jecxz
test
add
mov
jnp
adc
mov
push
es
mov
mov
shr
out
insb
daa
outsl
lds
fnstcw
adc
pop
stos
xor
rcrb
data16
test
mov
imul
call
cmp
imul
add
fs
cmp
lods
movsl
sahf
sub
adc
cmpsl
sbb
xor
lret
insb
add
andb
test
jno
sub
shrl
mov
jbe
scas
into
enter
out
sub
mov
or
cmp
add
shrb
jecxz
adc
jbe
push
dec
add
jg
int3
mov
mov
fistl
xor
jmp
jle
jmp
stc
lods
cs
dec
fwait
scas
incl
je
xor
icebp
dec
loope
enter
jl
adc
call
or
adc
int3
mov
stc
inc
mov
xor
jle
jbe
das
fmul
add
ljmp
iret
pop
out
cmpsl
xchg
fidivs
sub
out
imul
add
sub
arpl
mov
es
inc
or
and
push
pop
aaa
nop
mov
lret
or
jle
dec
xchg
fdivs
dec
dec
pop
adc
test
xchg
inc
scas
pop
mov
loope
xor
or
push
dec
push
fnstsw
push
xlat
push
div
dec
dec
mov
les
pop
dec
iret
seta
loopne
sti
and
addl
mov
xchg
add
sub
sbb
frstpm(287
mov
pop
push
in
cmp
push
pop
pop
je
cmp
mov
es
push
lret
test
add
and
int
out
cmc
adc
int3
pop
aas
mov
or
in
insl
stc
mov
pop
add
adc
aad
adc
jb
mov
lds
mulb
dec
imul
and
jg
std
cmp
call
mov
into
sahf
es
mov
cmpsl
cmp
fsub
xchg
fucomip
sbb
mov
in
sahf
push
les
cltd
movsb
sti
fistpl
dec
fiaddl
out
repz
push
dec
data16
cmp
js
dec
jecxz
mov
aad
jne
arpl
jns
addl
adc
ret
iret
sbb
gs
lock
xchg
out
test
jne
lahf
lds
ret
xchg
lret
or
mov
in
push
scas
cmpb
push
daa
push
xor
out
gs
incl
hlt
std
inc
scas
rcl
pop
mov
jmp
or
mov
aad
dec
xchg
das
jp
dec
and
cmp
out
ljmp
imul
gs
inc
in
pop
inc
inc
push
stos
add
scas
dec
inc
push
jmp
lret
hlt
push
dec
int3
jo
push
and
and
xchg
bound
lea
and
jnp
scas
mov
inc
sbb
pop
fwait
das
or
repz
out
sbb
and
lods
jo
shll
imul
sub
mov
fcoml
xor
cmp
subl
push
stos
xchg
xlat
add
jl
ret
in
lcall
pop
jne
ret
ret
iret
fst
mov
rcrl
and
dec
cmpsl
aas
xchg
xlat
xor
shrl
mov
jns
sbb
xor
orl
icebp
loop
inc
cmp
jmp
movsb
and
sub
cmp
movsb
jp
fsubrp
insb
adc
test
sarl
jno
adc
shrl
dec
add
dec
fisttps
bnd
push
pushf
cwtl
je
sbb
ffree
loopne
lret
in
fistl
push
push
ss
inc
bound
jp
lea
rcll
jno
inc
in
ljmp
gs
push
fidivrs
mov
dec
js
into
gs
mov
lock
mov
into
sbb
fcomps
loop
and
movsl
xchg
mov
xor
adc
inc
addr16
lods
push
popf
or
sti
cltd
jns
lret
add
addb
imul
loopne
adc
xor
js
insl
push
hlt
mov
push
or
sbb
push
mov
inc
fadds
divb
nop
adc
mov
das
mov
mov
test
and
fsubl
adc
ss
cmp
mov
out
xor
insl
adc
test
push
cmp
das
adc
lds
call
add
xchg
xor
in
stos
fcomps
test
jae
jmp
mov
xchg
xchg
dec
sti
adc
fildll
fsubrs
lds
xchg
xor
ss
rol
sbb
dec
cmp
pop
pop
push
aas
rol
jecxz
insl
lcall
cmp
mov
jecxz
enter
lock
pop
rcr
xlat
outsb
pop
cs
leave
sub
push
mov
fnclex
out
pusha
std
out
mov
push
and
cmp
push
push
fnstenv
xchg
mov
mov
outsb
inc
std
mov
in
pushf
push
mov
jle
dec
and
out
inc
std
xchg
add
aaa
add
cld
sub
fbstp
hlt
xchg
lahf
xor
mov
jl
xchg
repz
push
rolb
mov
pop
rorb
scas
cmc
pop
cmpl
lods
lret
subl
lret
popf
push
jmp
push
call
repnz
and
cmp
repz
lret
dec
sub
cli
xchg
scas
cltd
xor
iret
adc
add
mov
cmp
out
lret
fimuls
mov
imul
mov
leave
jnp
and
mov
push
pop
in
in
push
mov
rolb
lea
jmp
jmp
sbb
inc
push
lahf
in
mov
rorb
mov
scas
stos
out
add
in
pop
xchg
push
movsb
rol
mov
std
xchg
test
outsl
mov
inc
mov
mov
mov
or
xchg
mov
fcoml
leave
ljmp
shll
fmuls
xchg
popa
adc
xchg
dec
sahf
andb
int
les
pop
fidivrs
sahf
bswap
and
cmp
and
inc
sub
mov
pop
inc
aad
loope
in
out
mov
push
out
cmp
adc
inc
lret
push
je
mov
xchg
int
xor
in
cld
and
incl
mov
fstpt
pop
push
arpl
add
mov
push
ja
mov
mov
fildll
inc
mov
shr
add
shl
shl
push
mov
inc
lret
jo
setnp
popa
push
xchg
adc
pop
cmp
xchg
mov
sbb
xor
hlt
mov
ja
sbb
xchg
cmpsl
add
sbb
xchg
xor
xor
or
mov
pop
jne
xchg
pop
je
sbb
push
xor
les
mov
loop
loope
fbld
add
test
xor
or
push
movsl
es
aam
mull
mov
push
sbbb
in
aas
cli
in
sbb
cli
cmpsl
int3
cmp
add
int
pop
xorl
mov
xchg
pop
adc
scas
inc
mov
push
jmp
or
addr16
lcall
adc
mov
cmp
rcrl
lret
inc
popa
faddl
lods
push
outsl
loopne
inc
cmp
scas
les
inc
fisubrl
in
cld
lock
das
dec
dec
pop
cmp
andb
mov
outsl
sbbl
lahf
loopne
xchg
or
fidivrs
or
xchg
andb
aad
mov
pop
scas
orl
inc
jmp
aad
out
jb
loope
xchg
aas
pop
std
imul
scas
jb
mov
addr16
pop
out
ret
add
lds
push
test
mov
scas
inc
popf
stos
xchg
dec
mov
or
test
sub
xchg
cmp
jmp
out
inc
cmp
mov
dec
mulb
fdiv
ja
pop
mov
sbb
push
jmp
pop
adc
add
aam
loopne
jg
sbb
arpl
pop
leave
jo
cli
jns
xchg
ret
push
mov
out
repz
lods
and
jne
popf
and
inc
daa
or
repz
and
dec
ret
inc
jb
aad
cltd
xchg
les
cli
pop
mull
divb
ljmp
insb
mov
pop
ja
imul
lock
cmpsl
cmp
add
js
je
imul
push
ja
movsl
add
mov
enter
inc
adc
loopne
mov
filds
jmp
orb
cmp
cmpsb
push
in
cli
sar
negl
add
ficoms
out
das
cmp
mov
cmpsb
push
jg
aas
adc
sbb
xchg
mov
inc
mov
sbbl
out
iret
shl
movsb
xor
fnstcw
adc
and
or
shll
aas
push
sbbb
cmp
lret
mov
addr16
or
popa
jmp
jns
das
adc
hlt
sbbl
jae
push
mov
aad
lret
push
or
jo
in
jl
insl
add
leave
mov
pop
xor
mov
adc
out
aas
add
inc
test
mov
stos
lea
lea
xchg
adc
fcmovu
pop
fbstp
mov
pop
sub
dec
mov
insb
jbe
sahf
dec
sub
mov
lret
sti
xchg
daa
sti
mov
or
jge
inc
ret
bnd
dec
shrb
in
fsts
movl
int
jg
jae
sbb
fistpl
sahf
sub
add
xor
sub
inc
xor
test
jg
cltd
mov
sub
fidivrs
in
cmc
push
filds
lea
shll
arpl
in
push
test
mov
dec
lods
pop
inc
test
mov
pop
dec
jecxz
lods
fucomi
roll
and
cmp
xor
and
jl
or
push
mov
sti
push
fs
pop
sbb
std
adc
imul
outsl
pop
ret
fisttpl
andb
mov
push
cmpsl
outsl
mov
xor
dec
mov
fs
sub
sbbl
into
pop
imul
lock
shlb
sub
or
and
rorl
fnstsw
pop
and
sub
mov
and
cmp
add
mov
mov
adc
cmp
xorl
sbb
inc
push
mov
push
cmp
jmp
sbbl
aam
pop
and
dec
ljmp
daa
mov
jge
int
mov
mov
and
stos
test
push
mov
push
jnp
fiadds
cwtl
lar
inc
sbb
jl
lock
push
faddl
mov
test
mov
mov
fisubl
call
aas
hlt
jmp
frstor
cwtl
lds
dec
push
jmp
adc
dec
movsl
push
in
jg
dec
lea
xchg
jg
xor
xchg
inc
and
xchg
sbb
push
in
dec
fldcw
dec
in
cltd
faddl
mov
iret
adc
adc
mov
cmpsl
push
mov
and
jbe
ds
and
add
cmpsl
sub
jg
cmp
dec
add
pop
dec
cwtl
das
andb
ljmp
call
mov
mov
mov
pop
daa
cli
add
rcrb
gs
pop
pushf
sbb
jbe
mov
or
dec
push
sbb
inc
sbb
mov
mov
iret
pop
repz
mov
fwait
mov
or
or
out
xor
and
test
rorl
or
sbb
mov
fs
adc
fdiv
and
cmp
push
stc
fidivl
jnp
xchg
and
mov
dec
sub
mov
out
and
mov
leave
mov
push
sbbl
loope
roll
fmul
sub
push
lcall
xlat
sub
xchg
lods
je
pop
xor
sbb
roll
addl
push
adc
sahf
lods
cmp
outsl
inc
cmp
testb
cmp
je
movsl
imul
sub
pop
cmp
pop
subb
mov
addr16
ss
cmp
leave
pop
testl
sbb
jbe
jmp
lods
xchg
movsb
sbb
and
cmpsl
ret
decb
add
in
and
add
test
lea
xlat
hlt
and
ds
insl
fstl
or
aaa
int
push
adcl
in
sti
jbe
cld
daa
push
mov
ljmp
cmp
and
lods
in
pop
dec
sbb
rorb
aad
mov
js
js
add
and
pop
mov
inc
and
sbbb
sbb
scas
adc
or
inc
ret
fwait
sbb
fld
fdiv
idiv
push
jo
lods
adc
ds
inc
jp
and
push
adc
mov
or
jbe
sbb
lods
cmp
mov
popf
lods
sub
mov
repnz
lcall
aas
sar
popa
xlat
sti
lea
adcb
jg
sarb
xchg
add
push
daa
jmp
sti
adcl
movsl
jb
sub
pop
pop
cmp
addr16
cli
popf
test
nop
jmp
aaa
mul
jl
mov
dec
and
xchg
inc
imul
or
sub
cmc
cmp
xchg
fists
add
fldenv
adc
int
shll
arpl
inc
sbb
mov
xchg
xchg
out
cld
ljmp
arpl
push
out
add
xchg
sbb
scas
insb
addr16
xchg
push
mov
movsl
stc
movsl
xor
mov
mov
daa
and
addr16
ja
jmp
adcb
das
pusha
add
adc
cltd
sbb
mov
push
mov
lods
cmp
pusha
xor
adcl
mov
cmp
not
in
sub
in
clc
shr
sub
jno
inc
inc
cwtl
cmpl
fwait
push
push
push
jge
fs
mov
ret
or
loopne
xchg
out
popa
xor
adc
push
inc
sbb
add
jbe
enter
adcl
inc
mov
fnstenv
cli
mov
sub
ljmp
sub
or
test
pop
mov
int
pop
xchg
arpl
fnsave
gs
jb
adc
push
bound
cmpsl
iret
mov
outsl
fwait
sub
or
push
test
lds
adc
sbb
hlt
out
bswap
inc
sub
jg
dec
sbb
leave
pop
and
jne
xchg
mov
jmp
and
push
js
incb
jmp
cmp
mov
notl
cmp
in
stos
sub
and
mov
jmp
cmp
push
adc
stos
jp
push
lods
out
fistl
imul
clc
jmp
sahf
xor
leave
mov
addr16
leave
inc
and
or
sub
rorb
pop
adc
push
jo
adc
xchg
decb
fsubrs
aam
inc
add
cmpsb
popf
aas
push
shlb
inc
pop
mov
fisubrl
mov
dec
dec
add
cmp
mov
xchg
aaa
stos
sti
cmp
mov
xchg
sub
hlt
out
mov
pop
and
or
mov
inc
ss
insl
add
inc
mov
mov
lahf
pop
jne
mov
shl
in
repnz
loop
jle
in
lock
push
shrb
loope
cmp
ds
cltd
and
dec
dec
dec
jle
test
jle
or
rorb
jo
sub
mov
cmp
popa
push
inc
scas
sbb
rcr
push
or
aad
xchg
mov
or
mov
cmp
mov
loopne
imul
outsb
xchg
rcll
cmp
rorb
jnp
jecxz
in
mov
pop
loop
rcll
jnp
lahf
pusha
pop
jbe
adc
cmp
cmpsl
xlat
or
sbb
jge
aam
test
lret
loope
xchg
cmpsb
aas
shrl
enter
lret
adc
adc
stc
test
add
daa
add
xchg
arpl
movb
sub
jb
test
popf
mov
push
sub
lcall
sbb
das
sbb
inc
out
movsb
pop
mov
jle
cmpsb
and
mov
in
cmp
push
mov
jp
or
inc
bound
adc
ret
xor
jmp
mov
out
cmpsl
push
mov
push
movsl
cmp
and
cmp
jbe
adc
xchg
sub
int3
cwtl
dec
cmp
mov
mov
rcrb
aas
ficomps
mov
jns
pop
shrb
cli
inc
mov
cmp
cmp
in
addl
or
pop
std
pop
testb
pop
imul
jle
pop
shlb
test
pushf
xor
cmpsb
xor
imul
xlat
jmp
dec
popa
cs
in
adc
xlat
sub
pushf
cli
sbb
jb
addb
movsl
mov
jge
cli
rolb
jno
mov
adc
ljmp
lods
and
pushf
or
pop
mov
dec
lahf
scas
icebp
cmp
rclb
mov
fucomip
xchg
mov
call
mov
ficoml
aad
addr16
or
xor
push
popf
popa
jl
rclb
hlt
adc
add
xor
xchg
fs
mov
outsl
dec
mov
mov
mov
jbe
push
stos
xchg
test
jne
bound
push
test
cs
inc
mov
js
ljmp
sarb
xchg
mov
js
pusha
popa
xor
lret
fistl
in
push
popf
in
xchg
shrb
jbe
jno
notb
ja
fistl
repnz
dec
xchg
frstor
iret
inc
shll
dec
loop
inc
shlb
dec
fstpl
jle
std
xchg
in
jmp
push
xchg
xor
sbb
fidivrl
pop
lret
pop
shl
mov
cld
or
out
push
and
rorb
xor
pop
andb
sbb
adc
pop
jne
nop
dec
xchg
dec
aad
aas
pop
push
cmp
and
lcall
sbb
std
aam
mov
cli
jp
repnz
cmp
pop
and
stos
fnstsw
rorl
stos
popa
jp
mov
outsb
out
pop
fimuls
data16
ret
pushf
cmp
test
lret
push
mov
int
lea
add
dec
movsl
shll
pop
pop
jbe
xchg
ja
sti
aad
lret
mov
das
mov
adc
dec
repnz
or
lret
lock
jae
sbb
xchg
mov
xchg
push
and
sbb
add
mov
std
mov
push
leave
inc
outsl
test
mov
imul
xchg
pop
cmp
addb
mov
xor
mov
jns
inc
stos
inc
mov
mov
jge
and
in
sbb
idivl
shlb
pop
mov
scas
adc
sbb
gs
cmp
nop
lods
outsb
ss
pop
test
push
jae
xacquire
sarb
pop
push
nop
imul
test
push
mov
popa
mov
fbld
xchg
jb
cld
lret
jae
xchg
gs
sub
jmp
mov
and
movb
and
daa
imul
adc
lock
ds
ja
cwtl
fwait
mov
stc
les
mov
mov
cmc
movsb
xchg
in
lds
mov
out
cltd
pop
leave
nop
cmp
mov
sub
je
jp
out
pop
rorl
in
add
dec
push
movsl
jns
adc
imul
add
lds
xor
mov
test
adcl
out
push
xchg
mov
sahf
inc
push
jl
jmp
fbstp
and
pop
adc
out
push
lods
and
pop
sahf
mov
mov
adc
ss
loop
dec
test
movsl
icebp
xorl
fcoms
cmpsl
andb
out
lcall
push
loope
bound
into
push
in
mov
shlb
dec
pop
call
out
popa
jg
xor
pop
out
movsl
dec
sub
or
aad
shll
adc
or
jecxz
jb
inc
add
or
stos
xchg
scas
test
mulb
sub
lret
repz
jmp
xchg
cmp
pop
mov
bound
pop
out
push
and
arpl
nop
inc
add
out
and
iret
loop
push
or
rcrb
sbb
adcl
adc
mov
psrad
lahf
pop
pop
mov
outsb
aas
add
orb
pop
sahf
loop
iret
scas
repnz
pop
stc
xchg
fwait
fwait
daa
sub
ror
inc
stc
mov
pop
adc
jo
pop
xchg
lahf
cmpsb
negb
cwtl
mov
jnp
mov
pop
test
xchg
jp
or
ljmp
mov
cli
fidivs
mov
mov
aam
shl
scas
inc
loopne
loope
add
fs
jmp
stos
std
push
mov
cmp
cltd
je
mov
test
jb
repnz
mov
jp
cs
stos
pop
mov
lret
sub
xor
adc
push
sbb
jnp
add
dec
aad
xchg
das
cmp
mov
or
es
rcll
dec
cmpl
lods
jns
fldenv
push
lds
xor
jo
xlat
inc
cmp
idiv
pop
push
sbb
add
xlat
scas
and
jno
mov
cmpb
push
sbb
jno
add
imul
pusha
ljmp
test
xor
mov
out
fistps
cmc
mov
popf
stc
das
adcl
cwtl
nop
repz
mov
mov
adc
insl
mov
daa
xorw
mov
pop
int3
pop
mov
fsubp
mov
subl
jno
popa
mov
cltd
dec
aam
into
mov
pop
mov
pop
jo
paddsw
popf
and
lock
mov
xor
mov
sub
push
cmp
jl
pop
out
jno
cmp
mov
ss
mov
cltd
jne
stos
add
push
sbb
push
pop
sbb
pop
inc
rcr
jae
xchg
mov
or
outsl
add
sti
and
sub
pop
cltd
jge
mov
sti
sahf
pop
cmpsb
jmp
mov
mov
mov
mov
pop
imul
repz
mov
mov
mov
ret
sbb
fnstenv
fidivrl
pop
rcl
and
and
xor
popa
cwtl
cmpsb
fbstp
loopne
jmp
mov
jns
mov
js
int3
out
sub
xor
push
jmp
inc
sti
ret
shll
inc
imul
repnz
jmp
push
testb
aad
pop
mov
mov
xchg
sbb
arpl
or
sub
jl
decb
aas
and
pop
pushf
jae
xor
sbb
sbb
vpaddusb
scas
arpl
in
mov
rcrb
xchg
ds
rolb
or
pop
sbb
push
and
sbb
push
pop
out
test
daa
mov
inc
jmp
fistl
mov
xor
mov
mov
jne
jmp
orb
sti
mov
out
dec
mov
pop
lcall
cltd
sub
dec
push
cmpsl
push
push
rcr
testl
jns
sub
aaa
and
mul
test
es
sub
pop
scas
shrl
mov
add
out
shrb
movsb
out
mov
sbb
add
sbb
mov
icebp
mov
out
js
inc
push
dec
pusha
mov
xor
mov
push
test
xchg
sbb
adc
pop
notb
sbb
lods
inc
jmp
or
and
jg
inc
mov
imul
add
mov
lods
jae
adc
dec
movsl
cmp
hlt
loop
and
into
jno
inc
xor
cmp
outsl
daa
push
movsl
jl
push
add
int
lcall
outsb
push
aad
test
jae
sti
xchg
stos
cs
jecxz
dec
inc
add
ds
lods
sub
lcall
imul
imul
push
xchg
iret
lea
mov
jnp
int
repz
mov
xchg
pop
adc
adc
sub
pop
popf
mov
pop
sub
leave
sub
pop
xchg
cmp
jecxz
push
adc
push
sbb
inc
test
inc
rcrb
cmpsl
aas
dec
repz
enter
test
and
dec
pusha
mov
arpl
call
and
jp
lods
inc
sbb
lret
or
call
lret
xchg
pop
fdivrs
sbb
jecxz
mov
out
out
imul
sbb
xor
arpl
cmp
imul
pop
imul
fcomi
jecxz
addr16
icebp
jmp
ffreep
mov
in
push
test
jbe
sub
mov
orl
sub
test
pop
xor
push
scas
xchg
insb
loopne
mov
ret
pop
jb
mov
pop
repz
dec
xlat
adcl
pop
xor
repz
jg
lock
rcrl
int
ret
out
inc
cmp
cwtl
andl
ljmp
insb
lret
sub
test
test
das
xor
dec
sub
cmp
in
inc
cmp
int
mov
sub
lret
dec
adc
dec
lahf
mov
addr16
ss
fistl
xchg
fisubl
aad
imulb
jge
cmpsl
mov
push
inc
add
adc
lods
loop,pt
cmpl
std
xchg
icebp
mov
cmp
adc
fisubs
dec
ficompl
push
mov
mov
adc
sti
dec
push
sbbl
daa
jge
and
mov
or
stos
inc
cmpsb
jno
dec
sub
leave
int
adc
add
rorb
test
dec
or
xchg
and
test
pop
mov
cltd
xchg
jl
and
fisttpll
mov
dec
xchg
pop
shrl
pop
jge
icebp
lods
and
cmc
mov
les
and
push
xor
in
push
les
or
ds
add
nop
xlat
and
pcmpgtd
pop
lock
shrb
mov
jge
mov
push
shl
xchg
stos
ret
cmp
jg
and
jo
or
rep
push
or
movsb
and
push
jbe
jl
xchg
and
aam
dec
pop
pop
subb
mov
pop
pushf
outsl
add
addr16
pop
mov
jne
cs
jb
sub
sahf
xchg
mov
xor
lods
and
and
adc
xchg
pop
sbb
ret
test
fadds
push
xchg
out
lret
aaa
cld
inc
inc
popa
into
xor
sti
add
dec
sets
popf
add
rcrb
aaa
sbb
jne
mov
inc
call
aam
scas
and
xor
inc
in
ret
dec
mov
outsb
inc
mov
cs
out
je
push
jle
xlat
mov
cmc
sbb
jmp
fs
mov
arpl
cli
xchg
add
jb
fsubr
outsl
dec
idivl
repz
push
ljmp
pop
pop
out
cmp
fildll
in
cmp
lock
dec
pushf
xlat
or
nop
std
repz
mov
add
mov
mov
aad
jg
or
sub
icebp
push
mov
mov
push
lret
sti
enter
pusha
cltd
notl
pop
inc
pusha
push
sub
jecxz
stos
fldcw
or
andl
sti
add
xchg
insb
ds
test
das
add
jecxz
cmp
mull
xchg
cmp
js
adc
mov
adc
gs
addr16
lock
cmpsl
movd
mov
test
lret
or
mov
loope
jecxz
js
xlat
mov
or
lret
xchg
push
test
in
xchg
xor
mov
push
jmp
lea
test
dec
pop
xchg
dec
mov
push
daa
sub
fs
mov
xchg
mov
loop
fs
mov
xchg
shll
test
jo
xor
and
ja
dec
add
lods
inc
stos
icebp
dec
in
lahf
xor
shrb
cmpsl
xchg
insl
lock
dec
mov
sub
sub
test
mov
rep
push
stos
cmpsb
cmp
push
mov
push
lods
out
repnz
ss
xor
and
xchg
outsb
xchg
and
dec
iret
fiadds
fldt
std
aad
cvttps2pi
cmp
sub
adc
adc
outsl
sbb
xor
mov
loope
daa
sbb
fisubrs
outsb
test
filds
in
mov
sub
inc
xchg
std
push
mov
xchg
pop
push
repz
push
adc
iret
out
jne
or
stos
mov
xor
arpl
xor
mov
movsl
or
inc
outsl
sub
mov
pusha
jns
mov
loop
ja
lret
inc
loope
mov
and
dec
add
sbb
scas
mov
loop
mov
mov
lods
orl
xor
shlb
add
leave
or
ja
pop
insb
lock
pop
int3
xchg
push
mov
mov
mov
leave
sbb
mov
sbb
sub
imul
bound
bnd
leave
inc
add
pop
push
add
push
imul
fcoms
xchg
push
test
into
icebp
dec
and
adc
out
insb
repz
mov
mov
repz
xchg
jo
ljmp
jno
mulb
cmpb
stos
out
pop
fdivrl
or
or
xchg
push
cmp
popf
dec
nop
icebp
dec
out
and
lds
shlb
pop
mov
scas
xorl
or
orl
mov
sti
out
xchg
or
push
repz
adc
insl
call
inc
xchg
loopne
push
stos
mov
xor
pop
dec
js
ffree
in
mov
pop
lahf
mov
sub
iret
sahf
imul
aam
je
lcall
bound
push
jno
xchg
add
xor
mov
sbb
ret
mov
cli
insb
add
adc
enter
mov
or
bound
sub
push
fldl
push
jmp
iret
cwtl
scas
fs
fistpll
dec
rcll
xor
push
add
repnz
xor
lods
jl
push
xor
loop
push
sub
in
pushf
sub
sbb
xchg
dec
enter
adc
dec
fucomi
push
std
pushl
lret
outsb
pop
adc
int
mul
push
fdiv
and
hlt
leave
into
popw
repnz
mov
out
jg
mov
and
sbb
inc
cli
xchg
xchg
and
adc
pop
scas
add
movsl
nop
push
mov
mov
sub
jnp
add
add
mov
xor
xchg
pusha
xchg
outsb
mov
fdiv
jle
scas
xchg
mov
mov
xchg
sub
pop
outsl
cmp
mov
dec
pop
or
or
adc
cmp
test
repnz
fistpll
adc
xchg
xor
mov
aam
rorb
pop
jnp
dec
out
add
sbb
jb
sub
out
mov
and
shll
add
test
loopne
lods
cmp
out
add
pop
lods
cmp
scas
push
movb
repnz
xor
push
xchg
mov
cld
xchg
je
mov
ror
dec
pop
adc
imul
arpl
push
fdivl
in
outsb
inc
cltd
and
jo
xchg
or
inc
pop
aas
cmp
cltd
ficoml
in
push
sbb
mov
dec
dec
jecxz
gs
push
jns
push
es
inc
xlat
add
icebp
xchg
lods
in
fbstp
iret
ljmpw
or
test
aad
mov
fs
dec
hlt
xor
out
lock
adc
test
in
lods
adc
lock
stos
inc
pop
aam
dec
adc
pop
pop
push
jae
lcall
adc
pop
je
jne
jbe
in
daa
xchg
scas
push
aam
dec
jno
jno
xchg
aam
loopne
fnstcw
pop
push
test
push
jle
in
scas
jbe
cmp
mov
push
mov
adc
sbb
jle
fmull
pop
insb
scas
mov
xchg
addr16
sbb
repnz
fisubrl
sahf
sti
or
push
in
dec
push
cmc
adc
ss
pop
out
mov
xor
out
jo
mov
ficoms
sbb
imul
cld
mov
les
enter
out
aaa
outsb
lahf
mov
lock
fsts
xchg
movsb
aas
or
rorl
lds
mov
shl
addr16
cmp
cmp
add
mov
movsl
mov
push
jge
dec
mov
stos
inc
and
push
inc
inc
or
jb
aaa
mov
cs
mov
sbb
push
int
ds
jmp
gs
inc
mov
inc
mov
xor
cmpsb
mov
ljmp
jno
mov
cmpsb
sbb
popa
jle
dec
stos
mov
jmp
cmpsb
jp
ds
ss
pushl
in
adc
mov
pushf
sarb
movsb
les
js
jle
jge
insl
shrb
pushl
xor
iret
inc
out
push
insl
xchg
gs
enter
popf
insb
mov
ljmp
jmp
mov
lret
aam
aaa
and
dec
dec
and
popa
lods
dec
xchg
imul
leave
mov
inc
push
sbb
insb
clc
inc
pop
mov
out
jns
cmp
adc
jns
and
xchg
adc
nop
or
cmpsl
push
lock
cmp
cli
or
nop
add
mov
aam
mov
dec
pop
pop
adc
sub
movsb
cmp
gs
out
mov
lret
dec
add
pop
shll
jno
in
sub
js
ja
fwait
jg
insl
data16
sarl
mov
or
aaa
push
les
stos
mov
xchg
scas
imul
aam
mov
push
cmc
pop
xor
arpl
mov
dec
jp
test
xlat
or
jp
xor
sub
mov
mov
test
out
sub
jmp
inc
pop
and
jb
out
sub
call
shlb
mov
ftst
cwtl
stc
sbb
gs
sar
mov
pop
xor
iret
xorb
dec
inc
pushf
cmp
pop
cmp
lcall
mov
xchg
shlb
in
or
push
jbe
mov
pushf
fwait
lock
rorb
jne
mov
mov
jne
or
sub
arpl
js
mov
stos
cltd
cmp
pop
stc
divl
jmp
movsl
xchg
inc
mov
sarl
inc
aad
cwtl
mov
mov
jnp
mov
push
dec
jne
xor
mov
push
mov
mov
inc
into
hlt
or
jne
dec
cltd
mov
sub
mov
inc
sub
enter
mov
les
pop
or
or
insb
xor
and
jnp
inc
aad
push
dec
repnz
addr16
cwtl
into
clc
xchg
addr16
scas
cmp
fs
xor
and
mov
push
pop
les
sub
out
sub
data16
test
xchg
jge
adc
ret
cmpl
daa
jge
mov
lds
inc
lea
dec
jnp
pop
mov
sub
and
outsb
pop
inc
dec
push
jne
lahf
jp
enter
out
arpl
and
inc
jbe
stos
mov
insl
nop
jg
cmp
int3
stos
inc
fildl
enter
xor
push
scas
xchg
xor
jmp
loop
cmpl
lods
fnsave
inc
inc
repz
subb
and
sbb
ret
lret
das
adcl
or
cmp
repnz
testl
mov
mov
inc
push
pop
lret
aam
push
mov
fdivrl
ret
pop
movsb
fbstp
mov
push
cmp
xor
and
int3
cwtl
mov
fcom
xchg
rorb
popf
fidivrl
add
fadds
add
push
daa
mov
ret
mov
call
aad
push
outsl
pop
cmpsb
cltd
repz
push
aas
aas
fucomp
popa
and
push
subl
cmp
mov
xchg
pop
iret
addb
fbstp
test
ss
out
push
push
ljmp
jb
jp
pusha
inc
outsb
xchg
pop
sub
into
andl
jmp
xchg
les
dec
dec
aad
test
ss
test
aas
adc
add
dec
lret
arpl
adc
enter
or
jo
mov
xchg
pop
shrl
jae
fmul
xchg
push
gs
add
mov
cmp
or
ljmp
scas
push
lods
mov
mov
or
int3
sub
cmpsl
mov
xor
data16
mov
lret
loop
ds
adc
imul
das
ret
lcall
mov
imul
dec
cli
clc
test
mov
gs
jecxz
mov
mov
push
lods
out
fstps
popa
or
lods
lock
aam
xchg
adc
mov
mov
fsts
aam
jecxz
mov
cmp
pop
out
outsl
cltd
imul
sbb
push
dec
lcall
mov
addr16
enter
add
and
lock
xchg
or
andl
cmp
pop
imul
mov
cmp
pop
lods
cli
xchg
pop
jns
xchg
scas
sbb
push
add
mov
je
rcrl
xor
push
dec
mov
call
mov
popa
xchg
mov
ljmp
inc
sbb
sti
clc
addb
jae
inc
or
std
or
jns
xchg
lcall
sbb
xchg
lahf
sub
jb
stc
cmpsb
lods
push
sti
adc
xor
jmp
sbb
or
out
popa
stos
je
popa
lret
aas
rcl
cmp
popl
xchg
and
jge
das
push
push
call
mov
nop
cwtl
push
inc
shl
scas
add
dec
dec
adc
notl
stc
ljmp
mov
negb
jp
ret
clc
add
stos
push
push
add
dec
push
aam
data16
mov
push
cmp
mov
jp
nop
negb
mov
xor
mov
jno
mov
andl
shr
icebp
insb
aad
mov
out
or
xor
cli
das
mov
pop
xor
xchg
inc
xor
lock
daa
sbb
std
mov
pop
jmp
mov
jmp
sbb
fldenv
decl
dec
fs
out
je
push
pop
call
adcl
push
in
shrl
loope
popa
xlat
mov
in
pop
sub
fsubrp
adc
push
xchg
shlb
mov
shlb
fsubs
daa
mov
clc
cmp
clc
popf
ss
mov
call
mov
mov
psllw
xchg
mov
cltd
jo
popf
or
xlat
leave
icebp
sub
inc
arpl
js
xor
ds
pop
or
mov
sub
dec
scas
sbb
mov
mov
shlb
iret
push
cmp
pop
fs
test
jg
xchg
xor
lods
and
fxch
ret
push
jmp
and
mov
dec
ja
shr
negl
lahf
push
sbb
cmpsl
rclb
add
loopne
rolb
and
push
mov
pushf
imul
mov
mov
arpl
mov
xlat
scas
icebp
into
enter
mov
pushw
das
call
and
push
pop
loope,pt
repnz
addb
hlt
and
addb
adc
dec
sbb
xor
adc
adc
std
pusha
imull
xchg
or
jnp
stos
mov
es
adc
dec
sub
inc
cmp
scas
xchg
fnsave
fsubl
and
popa
jns
sub
cwtl
clc
jnp
mov
pop
xor
bound
negb
dec
and
std
adcb
or
cmc
mov
mov
jno
bound
test
call
mov
push
xor
xor
lods
loopne
xor
adc
ss
jmp
loop
aas
cmp
icebp
test
mov
popf
jns
mov
sbb
nop
cmc
ja
aad
sbb
or
jno
in
mov
fstl
dec
jns
mov
push
mov
nop
dec
pop
ret
test
mov
das
push
push
mov
ret
xor
mov
push
sarl
sbb
xor
hlt
dec
es
inc
outsl
push
mov
xchg
pop
lods
inc
enter
mov
dec
lock
push
aas
fstpt
repz
cld
fmul
arpl
cmp
test
int3
arpl
mov
ljmp
rcrb
inc
add
js
adc
data16
popa
clc
popa
into
insb
sarl
push
jg
adc
mov
or
dec
cmp
in
adc
lcall
flds
push
shll
pop
imul
movsl
mov
pusha
xchg
jb
xor
cmp
xchg
sub
lds
je,pn
std
xchg
xor
movsl
cmp
push
stos
adcl
mov
cvttps2pi
test
fidivl
sub
add
scas
inc
dec
mov
das
fstl
out
jg
and
xorl
imul
movsl
in
out
or
int3
sub
pop
cs
push
push
mov
cmpsl
lahf
sub
sub
ljmp
aam
mov
or
fbld
shlb
mov
push
aaa
popf
dec
mov
push
imul
adc
sub
jbe
jne
cmpsl
xor
xor
push
add
fcmovnu
pushl
ja
or
aad
add
pop
stos
add
mov
xchg
das
push
and
repnz
mov
pop
mov
out
push
jl
cs
inc
add
bswap
stos
lret
fsubr
push
mov
mov
test
mov
cmpsb
scas
xchg
cmpl
xchg
xor
pop
loop
jnp
imul
adcb
aad
xor
dec
stos
dec
or
ds
inc
es
sbb
adc
lret
or
jae
xchg
jl
popa
popf
fcomps
and
lods
fisttpl
xor
sbb
mov
or
add
je
sbb
shlb
add
cs
in
test
add
icebp
pusha
push
popa
jge
jbe
je
test
push
test
and
or
inc
push
cmp
rcr
mov
push
ss
inc
pop
ja
mov
mov
test
lods
xchg
push
or
leave
pusha
cltd
adc
leave
push
xchg
mov
insl
push
out
mov
push
mov
outsb
sub
jnp
imul
xorb
push
pusha
xchg
add
jp
xchg
nop
mov
sub
js
cli
test
inc
test
jne
adc
aam
xchg
mov
or
call
and
comiss
jmp
out
mov
ret
aaa
add
in
inc
push
cmp
dec
dec
inc
inc
lods
test
das
or
movsb
or
mov
jne
movsl
pusha
mov
xchg
bound
nop
jo
or
adc
insl
lahf
add
or
in
xor
scas
int3
ret
ja,pn
push
pushf
sbb
pop
aas
xchg
or
and
inc
fs
cs
push
inc
fsubrp
xchg
fistl
pcmpgtd
lods
sbb
add
jnp
push
movsl
jno
daa
dec
cltd
cmpsl
jnp
adcl
cmp
add
cld
pushf
call
loop
lahf
negl
xorl
pop
cmp
loope
pop
mov
xor
mov
sbb
sub
xchg
add
and
xchg
mov
adc
movsl
or
mov
dec
push
xor
es
dec
lds
test
xchg
xchg
jp
inc
mov
stos
mov
jnp
and
inc
hlt
in
sbb
sbb
sarl
sub
ficoms
mov
xor
andb
mov
mov
bound
pop
adcb
sbb
fsubrs
sub
cmc
jecxz
cmp
mov
repnz
imul
pop
sti
inc
repnz
push
inc
or
mov
das
fwait
pop
pop
mov
out
push
or
inc
cmpsl
cs
xchg
faddp
lea
leave
hlt
imul
xor
pop
in
clc
sbb
jnp
push
mov
inc
fsubr
cli
xchg
xor
or
leave
pop
xlat
push
in
ret
hlt
aam
enter
push
cmpl
scas
addr16
push
mov
js
push
insl
dec
sbb
add
popa
divb
cmp
mov
dec
pop
push
xchg
loopne
mov
enter
popa
scas
dec
push
xor
sub
jg
cmp
or
mov
push
adc
test
mov
scas
adc
imul
pop
fucom
sbb
mov
sub
mov
movsb
sbb
jbe
jo
test
stos
mov
sub
jmp
in
hlt
sub
test
sbb
mov
dec
stos
mov
lock
dec
add
es
pushl
mov
and
push
lcall
cmc
mov
shlb
orl
repnz
lds
xchg
cmpsl
inc
loop
lahf
pop
int
ror
gs
lea
adc
lret
mov
test
mov
ret
fmul
or
push
cmp
int
mov
movb
mov
add
adc
and
xor
mov
mov
inc
bound
clc
repnz
out
aaa
popf
ret
hlt
mov
adc
cltd
xor
jne
int
push
stc
jb
or
mov
xor
sbb
hlt
mov
insl
ja
xor
jns
xchg
mov
dec
sbb
jg
push
jmp
cli
and
popf
hlt
cltd
cli
mov
mov
rorl
add
insl
add
adc
bnd
enter
xchg
sbb
xlat
ljmp
mov
jb
xchg
mov
repz
stc
nop
loop
fwait
cmp
outsb
vpsrad
adc
fdivl
popl
pushf
jecxz
adc
mov
inc
out
shrl
inc
les
xchg
mov
adc
lcall
push
cmp
hlt
push
lea
sbb
xor
xor
sbb
adc
pusha
idivl
loopne
push
cmc
dec
mov
cld
cltd
lea
push
stos
xchg
push
ret
pop
negl
test
divl
add
insl
inc
mov
mov
cltd
sbb
cmp
pop
cli
sub
inc
ficomps
dec
jg
imul
sub
mov
pusha
popa
clc
xchg
xchg
xchg
mov
jg
pusha
or
pop
test
sub
imul
fnstcw
icebp
test
xor
iret
xchg
jecxz
shrl
repz
xchg
pop
and
rorl
jae
mov
mov
mull
xchg
sbb
mov
and
test
outsl
sahf
dec
or
inc
push
out
pop
popl
xor
cli
jne
pop
jns
sbbb
lcall
dec
iret
sub
cmp
add
insb
push
pop
sahf
test
and
arpl
inc
fldcw
into
cmp
xor
mov
dec
mov
push
adc
cmp
lcall
lods
cmp
mov
add
push
cld
xchg
lret
mov
xor
js
clc
ds
xchg
jae
jo
jle
jge
sbb
rclb
lret
dec
loope
mov
mov
mov
pop
sub
divb
popf
and
das
mov
mov
push
add
inc
xchg
out
out
xorl
sbb
scas
sub
mov
insl
rorb
test
dec
sbb
icebp
das
icebp
mov
gs
sub
add
je
mov
notl
repnz
aam
adc
mov
push
iret
out
mov
lret
xlat
popa
stos
aad
sbb
sahf
push
js
and
cltd
enter
jns
stos
cmc
mov
int
push
mov
pop
idiv
pop
cld
scas
pop
loope
ret
sarl
in
xchg
push
test
dec
mov
leave
sub
faddl
bswap
and
and
cmpsl
push
xchg
aad
lds
test
pop
mov
cli
outsb
lds
testl
dec
cs
xchg
or
push
adc
pop
push
scas
pop
call
xor
pop
pop
mov
mov
ds
push
cmp
loopne
insb
push
pop
sarb
test
dec
ret
ret
js
rcrl
cmp
cmp
js
inc
cmp
sbb
js
xchg
and
ret
jle
into
pop
adc
fucomip
add
inc
lods
mov
mov
movsb
fadds
stos
repz
ljmp
mov
push
or
outsb
js,pn
add
imul
addr16
ljmp
mov
jne
in
xor
cs
pop
or
dec
pop
inc
lcall
ds
push
add
inc
ljmpw
out
popa
jl
lret
data16
js
daa
and
mov
pop
jo
enter
insb
xor
xchg
insb
incl
mov
add
inc
sub
cltd
mov
fs
in
jle
in
dec
loopne
inc
or
ja
pop
test
hlt
pop
inc
std
push
shrl
pop
jne
aaa
xorb
bound
mov
mov
insb
inc
das
mov
xor
js
fcoms
mov
fdivrl
dec
mov
or
notl
xor
stc
scas
inc
mov
fidivl
or
inc
fbstp
lcall
dec
ret
mov
pusha
jns
bound
cmp
mov
xchg
iret
pop
in
out
xchg
sub
bound
outsb
cmc
adc
xor
xor
cmp
call
popf
aam
je
xor
sbb
out
cmp
or
mov
jno
xchg
pop
pop
mov
cmp
subb
pop
cmp
inc
in
negl
cwtl
or
lea
fisubs
lahf
jg
rcr
insl
inc
mov
xchg
aas
sub
insl
sbb
cmp
sti
dec
mov
mov
int
mov
add
jmp
out
repnz
negb
push
popf
dec
dec
mov
imul
sub
fbstp
dec
xchg
dec
idivb
fidivrs
pop
aas
push
or
fcmovne
push
push
mov
cmp
adc
scas
xor
dec
loop
xor
adc
push
out
cmp
mov
pop
inc
mov
push
stc
shlb
leave
ja
dec
hlt
stos
adc
add
test
lock
stos
inc
paddb
out
dec
inc
mov
fstl
add
xor
lock
scas
out
enter
push
jns
scas
imul
lods
mov
test
mov
xchg
xor
test
hlt
movsl
fisubrs
pop
adc
mov
cmp
cmpsb
jp
xchg
test
test
sahf
inc
xor
pop
add
and
inc
es
push
call
fwait
xlat
jb
or
add
mov
push
and
clc
test
stos
sbb
test
mov
cmpsl
out
lea
jbe
sub
hlt
adc
mov
inc
addr16
jae
jmp
loop
jne
roll
sarl
cmpsl
push
mov
jne
mov
jmp
adc
xchg
ljmp
popa
ficoml
pop
jnp
pop
ljmp
divb
add
icebp
nop
imul
imul
add
adc
sti
loopne
fisubl
jp
shrb
lahf
xor
cmp
mov
adc
or
push
mov
sub
popf
fldenv
lret
fmuls
mov
lock
inc
shl
adc
adc
xlat
jb
mov
jle
ss
sbb
mov
loopne
inc
adc
cmp
lods
jo
jo
push
sub
pop
cmp
inc
mov
cmpsl
and
pop
movsl
ljmp
adc
cmpsb
js
mov
jg
add
push
cld
popa
cli
rcr
addr16
and
mov
mov
sub
out
push
gs
cmp
into
cmp
pusha
test
shlb
adcl
mov
add
push
lods
or
jp
cld
mov
adc
mov
insl
loopne
in
mov
pop
jae
ret
jno
mov
insl
push
cmp
fwait
xchg
insl
mov
and
cmp
jae
inc
dec
dec
pop
fs
push
ficoml
or
sarl
mov
scas
inc
bound
mov
cmp
jae
repnz
xchg
mov
sbb
paddusw
mov
movsl
out
cmp
pop
jbe
nop
sbb
aad
xor
aas
mov
inc
aas
rcr
aad
adc
fstpt
adc
mov
jbe
clc
dec
scas
ss
sub
imul
out
push
lret
mov
mov
add
idiv
fistpll
mov
lock
push
test
out
push
adc
or
movsl
bound
jecxz
pop
or
sub
cmpsl
push
sarl
push
cli
or
jp
scas
adc
aad
fs
dec
mov
mov
js
in
lea
faddl
sarb
test
mov
lret
ljmp
jge
jbe
dec
pop
outsb
clc
fwait
xlat
or
and
popa
jae
push
daa
lahf
xor
mov
mov
cltd
lods
shr
addb
and
adc
idivl
arpl
lods
push
inc
mov
pop
sub
adc
sti
xchg
cs
movsl
scas
sbb
lahf
sti
lea
push
or
or
pushf
xor
jle
xchg
lds
dec
divl
xchg
mov
sbb
ret
push
jl
or
daa
mov
xchg
ljmp
or
jo
dec
dec
pop
dec
mov
pop
aaa
rcr
mov
cmp
mov
test
pop
in
and
xchg
fsts
xchg
xchg
stos
jno
push
outsl
mov
and
insb
ljmp
cmc
mov
mov
and
push
loop
push
mov
ret
loopne
sbb
repnz
out
js
adc
xorl
and
cmp
bound
ret
mov
xchg
out
and
cmp
xchg
sub
xchg
sub
enter
inc
mov
loopne
pop
int3
jo
lret
arpl
inc
fstl
das
sti
repz
lret
mov
jmp
mov
rol
mov
mov
inc
add
sbb
jbe
xchg
push
insl
xchg
or
rclb
push
jbe
movb
dec
rcr
mov
dec
pushf
and
aas
imul
or
movsl
sahf
mov
inc
into
xor
cltd
inc
leave
xchg
jmp
loop
fdivs
jno
leave
scas
das
cmpxchg
sbb
mov
cmp
mov
sbb
xchg
roll
sbb
mov
cmp
popf
xchg
mov
inc
mov
inc
jmp
je
sbbb
aam
data16
hlt
fs
jno
add
rcrl
cmpsb
pop
imul
inc
mov
xchg
sbb
inc
notl
push
shl
pushl
ljmp
cmp
icebp
or
mov
loope
out
and
lods
cmp
mov
imul
jge
gs
xchg
fcmovne
gs
cmp
push
test
dec
sbbb
mov
jp
add
les
xchg
cld
mov
or
stc
cmp
adc
out
adc
sbb
adc
pop
push
loop
inc
call
cmpsb
out
bound
shrb
cwtl
adc
mov
jb
pop
clc
or
cli
add
add
shrl
push
aaa
mov
pop
out
insl
or
repnz
outsb
and
jb
pop
scas
pushl
enter
mov
push
dec
jmp
call
sbb
das
xor
cltd
xchg
insl
push
adc
push
lret
test
outsl
cli
cmc
call
inc
stc
popf
es
and
jmp
lret
mov
adc
aas
pushf
xor
and
mov
mov
push
inc
adc
lods
inc
data16
js
push
out
inc
dec
lahf
inc
pop
or
add
adc
cli
mov
in
inc
ljmp
ljmp
pop
sbb
fistpl
jo
lahf
stos
jnp
int3
mov
jmp
rol
push
push
cs
mov
fdivrs
add
mov
pop
insb
pop
loop
aad
push
push
inc
inc
ret
arpl
sub
ret
dec
lea
out
inc
inc
lds
jns
dec
push
mov
jno
enter
das
orl
xchg
xchg
cmpsl
adc
mov
xor
push
cmpsl
ret
aaa
mov
xchg
in
mov
push
xchg
adc
pop
ljmp
push
jmp
mov
cld
xlat
test
int
out
popa
inc
pushf
cli
xor
adc
incl
mov
or
xchg
mov
fidivs
push
jmp
jg
mov
loop
adc
xchg
outsl
adc
sub
add
inc
imul
fimuls
lea
mov
popa
dec
test
add
mulb
jb
push
cmp
leave
push
mov
xchg
xchg
dec
je
xorl
mov
ljmp
fldl
mov
movsb
shrb
xchg
mov
shl
push
outsl
mov
mov
push
dec
ds
push
inc
fadds
sbb
or
xchg
pop
or
sbb
lcall
nop
push
scas
and
cmp
sbb
dec
mov
mov
xchg
mov
les
jb
std
push
inc
dec
cmc
out
and
pop
xchg
sbb
rol
ja
std
test
jnp
xchg
std
test
out
or
cmc
push
xor
shlb
outsb
shr
dec
pop
xor
xor
or
sahf
mov
scas
mov
mov
push
push
xchg
and
push
jnp
test
data16
mov
enter
sub
mov
ja
pushf
in
mov
or
imul
orb
jne
scas
call
lock
cli
aas
insl
mov
xlat
sbb
jmp
push
pop
mov
inc
and
fnsave
rclb
jle
cli
popa
hlt
xchg
mov
or
cmp
jecxz
mov
iret
enter
cmp
push
or
rorb
das
rcrl
mov
stos
push
gs
mov
in
call
push
sub
enter
popa
push
in
dec
push
outsl
je
call
repz
jns
insl
lds
jl
mov
jg
mov
push
jecxz
xchg
popl
xchg
mov
sti
push
mov
mov
xchg
sub
pop
cli
test
sti
sbb
mov
icebp
pop
iret
int3
clc
inc
mov
push
bound
stos
movsb
inc
lods
aaa
push
add
scas
sub
cmpl
adc
cmp
icebp
inc
jne
jle
call
xchg
mov
push
ljmp
mov
dec
ljmp
in
xorb
das
movsb
jno
inc
shll
inc
lea
cmp
cmp
idivl
int3
mov
addr16
add
mov
les
xor
imul
int
jle
pop
movsb
mov
mov
adc
movsb
dec
les
loope
push
mulb
ljmp
jno
iret
insb
clc
enter
inc
jb
inc
testb
jbe
fs
xchg
push
mov
cmp
ds
dec
and
shlb
das
xor
mov
enter
mov
and
cli
add
fstps
bound
and
test
or
arpl
sarb
adc
pop
mov
jnp
repz
js
and
icebp
pop
xchg
xor
data16
pop
xchg
jmp
bound
lret
jae
xor
nop
iret
mov
mov
jbe
stos
or
inc
lcall
push
adc
adc
addr16
push
xchg
andb
fs
fsubr
mov
ret
and
push
lret
pop
inc
shlb
xchg
sub
sub
mov
repnz
sbbl
inc
cld
inc
daa
xchg
push
popf
add
pop
in
cmp
jcxz
jl
rclb
mov
ds
scas
clc
xchg
pop
cmp
scas
cmc
sbb
add
or
push
and
adc
push
das
mov
test
andl
ss
sub
fcompl
pusha
or
jb
rclb
aas
dec
in
out
push
push
inc
push
pop
arpl
aaa
imul
dec
sar
pop
sub
mov
push
popa
les
sbb
fisubrl
pop
cmp
push
mov
inc
pop
cmp
sub
inc
jns
jl
andb
add
mov
mov
mov
js
cmp
mov
push
mov
adc
cmp
insb
pop
imulb
or
test
ret
outsb
outsl
rol
lcall
loope
mov
sub
lock
ljmp
ljmp
adc
xchg
sbb
push
and
into
loopne
xchg
ss
std
lock
mov
dec
push
jo
ljmp
loope
cltd
push
pushf
scas
xlat
cmp
adc
out
roll
rorl
out
dec
pop
in
dec
ret
sub
pop
and
push
subb
pop
sub
mov
adc
or
icebp
enter
dec
jecxz
popf
pop
loope
clc
in
sub
cmp
mov
adcl
stc
mov
in
int3
shll
dec
and
cmpsb
sub
test
stc
and
pop
push
adcl
xchg
es
mov
inc
aas
xor
push
inc
push
in
adc
call
movsl
fildll
ret
jno
fnstenv
jne
mov
orb
in
scas
jb
pop
cmc
test
pop
push
lret
cmp
mov
data16
cld
or
adc
mov
push
das
gs
cwtl
push
jg
jb
cltd
repnz
push
xor
lcall
or
jp
cmp
fs
js
inc
xor
aad
adc
sbb
mov
stos
addr16
cmpsb
inc
xor
mov
xchg
std
cld
lcall
in
xchg
xor
cmp
in
out
sahf
imul
jg
push
subb
push
jnp
ljmp
mov
lret
jb
fildll
insl
xor
into
add
cmc
icebp
push
les
add
insb
sub
inc
movsb
repnz
sub
add
std
jno
jmpw
std
inc
or
push
add
lds
jne
ljmp
pushf
or
cli
pop
jp
mov
inc
push
popa
movsb
mov
pop
xlat
aad
add
mov
cltd
outsb
out
xor
dec
fisttps
adc
add
data16
punpckldq
je
dec
sub
xchg
sti
pop
adc
es
sbb
fsubrs
lret
sub
test
ret
fs
pop
cmc
insl
aas
cwtl
sbb
xchg
sub
jae
rcll
jp
pop
les
cmp
repnz
jl
aad
aaa
sbb
into
jle
je
arpl
xchg
adc
adcw
insb
jl
inc
add
add
mov
or
cltd
fs
inc
decl
dec
rcll
ret
popa
les
lock
in
jnp
mov
mov
xchg
dec
fnstcw
sub
inc
pop
or
sub
dec
dec
mov
and
ffree
dec
mov
imul
inc
es
cld
scas
inc
leave
xchg
andl
call
ds
jo
inc
lret
inc
in
repz
inc
repz
sub
insl
lcall
adc
and
xor
or
mov
or
push
pushf
test
push
shrl
imul
push
dec
adc
out
clc
popf
es
fisttps
stos
jle
push
xchg
pop
fiaddl
mov
sbb
sub
in
arpl
xor
int
int
jnp
lds
aad
clc
and
cwtl
andl
add
mov
movd
mov
mov
adcl
in
sahf
out
pushf
or
push
mov
add
or
neg
jae
push
idivl
mov
dec
je
neg
sbb
cmp
cmp
aas
xor
mov
jg
dec
lock
inc
xchg
ret
filds
dec
hlt
and
iret
inc
repz
jo
push
sbb
pop
shlb
push
movsb
test
cwtl
jns,pt
ret
xchg
repz
pop
adc
sbb
mov
and
xor
push
ds
not
movsb
fimuls
push
decb
push
xchg
jae
rcll
sbb
adc
loop
popa
mov
pop
leave
test
push
mov
pop
push
inc
or
inc
es
adc
fisubl
jne
push
test
inc
js
mov
loopne
aas
lahf
mov
test
pop
aaa
push
out
arpl
dec
sahf
mov
lahf
movsb
mov
jp
cmp
fwait
jne
push
and
lods
xchg
inc
jo
scas
mov
mov
stos
ja
xchg
jge
adc
push
dec
or
test
adc
or
nop
cmpsb
cmp
stc
sub
or
dec
ss
inc
push
aam
stc
cmc
inc
xor
adc
call
in
nop
push
lret
jbe
mov
sahf
xsha1
cmpsb
iret
sub
stc
pop
fsubrl
in
mov
inc
pop
push
mov
jne
sarb
xchg
sub
mov
jmp
jmp
and
stc
ret
call
dec
pop
mov
dec
aad
mov
mov
fidivrs
cmp
pushf
push
sbbl
and
mov
insl
iret
pop
es
jmp
insl
dec
inc
in
out
fnstenv
push
mov
mov
popa
jne
iret
jo
popf
popa
dec
lds
rclb
jl
cmc
inc
shl
repz
adc
pop
dec
dec
outsb
adc
jp
mov
jo
add
jae
int
leave
xchg
or
cmp
aam
add
sbb
mov
xchg
jmp
sub
pop
sbb
mov
xlat
rorb
add
shrb
push
mov
jle
push
mov
and
ret
gs
inc
push
lods
push
jno
dec
and
pushf
pop
mov
cld
lahf
test
mov
xchg
daa
outsl
or
movsb
aas
stos
jae
into
push
in
pusha
outsb
xchg
sbb
fnstcw
lret
incl
sub
mov
inc
pop
stc
rcrb
daa
jle
adc
ret
jns
cld
xchg
iret
ss
sahf
dec
dec
rcrb
add
or
mov
sahf
push
push
enter
negl
sti
push
xchg
lods
xchg
lret
mov
mov
mov
mov
push
pop
sbb
mov
jo
bound
rol
push
out
or
mov
sub
pop
and
pop
fwait
mov
mov
cld
sub
xchg
pop
cmc
add
dec
adc
imul
push
or
pop
cmp
cmpsl
in
adc
insb
and
xor
xor
cmp
dec
int
pop
cmp
mov
stos
mov
sbb
icebp
xor
xchg
mov
and
mov
inc
cli
push
jge
nop
daa
pop
sahf
ds
mov
popf
stc
cmp
loope
popa
fidivl
mov
aam
lods
xchg
repz
pop
pusha
adc
mov
orb
pop
push
and
push
mov
jp
jge
pop
rcrb
dec
cli
movsl
jl
out
push
add
enter
int3
dec
adc
mov
es
mov
xor
popf
jo
cmp
ss
in
cmp
subl
pop
mov
fwait
xchg
adc
dec
inc
inc
js
adc
loop
fstl
fwait
pop
sub
es
mov
mov
lea
out
lods
inc
int3
sahf
sbb
cmpsb
sub
sub
lods
es
ficomps
add
aad
xchg
icebp
inc
xor
adc
popa
lds
les
call
stc
stos
outsl
inc
xchg
ret
push
jne
jne
dec
xor
mov
push
push
ljmp
clc
mov
out
and
and
xchg
pusha
jae
cltd
popa
adc
lret
das
pop
lcall
pop
mov
aam
repz
je
or
jp
in
stos
movsb
push
ret
inc
fs
mov
addr16
or
cmp
xchg
lcall
mov
push
in
ret
xor
in
std
dec
jbe
xor
test
lcall
dec
push
movsb
xor
adc
lock
bound
je
and
sbb
pop
addr16
cmpsb
push
notl
pusha
test
and
cmp
in
sbb
mov
xchg
stos
inc
pusha
pop
jnp
inc
fnstenv
sub
lcall
mov
repnz
das
jo
push
call
pop
cmp
jae
xchg
loopne
repz
aas
sbb
fldln2
pop
loope
nop
push
add
xchg
fstpt
fidivs
das
pop
push
loopne
sbb
pop
and
sbb
jbe
arpl
stc
cmp
in
sbb
movsb
push
dec
out
test
fs
testb
mov
inc
daa
daa
inc
pop
and
jge
xchg
or
loop
jl
mov
lcall
or
stos
inc
xor
mov
adc
cld
out
add
je
and
push
pop
mov
push
cli
jne
adc
stc
dec
inc
hlt
orl
sbb
divl
lret
dec
sub
mov
stos
mov
jne
inc
mov
cmp
ss
xchg
cmp
aam
sbb
gs
xchg
mov
scas
loop
or
add
xchg
in
mov
add
mov
out
test
xchg
test
mov
mov
add
out
sub
iret
dec
dec
cmc
gs
mov
stos
arpl
loope
cmp
mov
cld
jne
sbb
mov
mov
std
cs
mov
sbb
mov
jge
and
pop
mov
in
mov
test
fsubrs
out
jle
pusha
cwtl
out
add
inc
popf
in
cli
rcrl
ds
test
jne
jle
adc
mov
fdivl
dec
mov
popa
jg
mov
ret
int3
mov
lret
mov
cmpsl
iret
andb
sbb
arpl
adc
je
out
sahf
clc
add
cmpsl
mov
pop
scas
mov
xchg
loopne
or
xor
push
xchg
mov
orb
fisubrl
bound
aas
call
leave
int
pop
lahf
idivl
ljmp
push
push
cmp
adc
mov
cmp
mov
cltd
and
push
add
nop
test
std
pop
cli
pop
mov
and
je
cmp
push
mov
insb
add
bound
pop
dec
jmp
inc
rclb
aam
cmpl
fs
out
sbb
ret
stos
ljmp
push
paddw
add
loop
pminub
cmpsb
add
inc
xchg
insl
adcl
cmpsb
jno
sub
pop
pushf
sub
inc
in
fs
in
sti
push
iret
xorb
jae
pand
adc
mov
cltd
scas
daa
dec
jecxz
dec
and
dec
cltd
sbb
cmp
subb
sbb
xor
jne
cmp
loopne
negl
mov
cs
ficomps
sar
test
pushf
fistl
cs
insb
movsl
popf
scas
xchg
repz
inc
arpl
cmp
sahf
mov
fs
mov
out
pop
xor
pop
cmp
cwtl
in
jle
mov
es
mov
lcall
lcall
adc
shrb
add
fdivrl
out
pusha
add
and
adc
mov
xchg
xchg
in
mov
mov
or
shll
and
sub
loop
popf
inc
mov
bnd
add
mov
cs
xor
imul
adc
sub
xlat
pop
lods
mov
out
loopne
addl
nop
sub
mov
icebp
xchg
pop
inc
dec
das
repnz
sbb
dec
xchg
add
outsb
and
sar
mov
pop
adc
mov
mov
out
lret
xchg
je
pop
jb
sub
pop
pop
outsb
mov
sbb
pop
pusha
xchg
adc
mov
test
jge
xor
in
mov
rorl
pop
imul
outsl
cmpsb
cmp
inc
cmpsl
icebp
data16
pop
aaa
or
cmpsb
insl
mov
scas
pop
mov
notb
insl
inc
in
or
mov
popf
iret
nop
iret
sub
and
fwait
pop
loope
mov
insb
negb
pop
icebp
mov
rcll
jnp
add
shrl
xor
mov
xor
movsl
pop
cmp
stc
inc
aaa
jl
push
addr16
in
and
adc
or
dec
inc
push
test
sub
sbbl
pusha
push
push
aad
sti
pop
pop
lods
pop
lret
dec
ss
mov
jecxz
push
sbb
xchg
scas
imul
fdivrp
pop
push
add
in
loop
in
popl
rorb
mov
scas
pop
sti
aam
rcll
test
in
adc
dec
scas
test
loopne
fidivs
ret
push
mov
sbb
lcall
jge
stos
aaa
sahf
sub
xchg
mov
cmp
mov
jl
mov
pop
mov
jle
das
adc
mov
shlw
inc
jne
jns
data16
lahf
or
dec
fcompl
mov
mov
sarl
roll
inc
pop
xchg
push
cwtl
dec
or
xchg
inc
cmpsb
sub
dec
push
or
or
xor
imul
mov
test
ret
sbbl
aaa
rcll
push
pop
jmp
mov
outsl
xor
or
rcll
xchg
inc
lahf
inc
push
mov
cwtl
dec
mov
sub
push
push
mov
mov
lret
sub
stos
pop
not
ret
clc
inc
popa
jns
adc
push
sub
push
pop
pop
mov
jnp
push
fcoml
std
lret
sbb
movsb
out
mov
xchg
add
lods
cwtl
rcll
or
adc
movsb
bound
shrl
dec
paddsw
lret
push
je
fmuls
gs
pop
sub
push
sub
in
stos
dec
mov
fstpt
xchg
ds
push
lret
test
jbe
push
and
mov
out
xchg
outsl
mov
dec
rcrb
xchg
cmp
cli
push
ss
adcb
sbb
xchg
mov
jecxz
inc
push
in
loope
pop
call
shlb
daa
mov
sub
arpl
cmp
data16
pop
jecxz
subb
cmp
ret
xor
lcall
mov
jns
adcb
jmp
daa
leave
adc
fwait
xor
icebp
lret
hlt
ds
sbb
adc
sbb
pop
in
cli
or
jne,pt
pop
out
xchg
jns
sarl
jae
adc
jg
addr16
test
in
in
iret
icebp
inc
je
out
test
mov
fisubrs
mov
mov
loope
clc
or
dec
stos
movb
mov
add
jae
jb
popf
lods
push
inc
jno
fdivrl
shlb
sub
and
stos
add
mov
mov
sbb
int
mov
sbb
into
pop
jbe
adc
sub
pop
jg
je
fldt
out
mov
ds
insl
repz
fwait
in
lcall
ficompl
std
xor
mov
jne
outsl
daa
addl
mov
push
es
jo
xor
and
jno
jmp
in
hlt
sub
sbb
gs
push
lods
loopne
cmp
cmp
js
push
in
fs
out
rcll
mov
addr16
pop
push
cmp
movsl
into
dec
jle
mov
pop
outsb
jl
mov
mov
outsl
scas
pop
pop
dec
mov
or
push
mov
pop
loopne
outsl
ss
aad
nop
rcrb
xor
testb
cmpsl
ret
fnsave
mov
inc
add
jnp
jp
popl
ja
push
pop
idivl
jno
cmp
push
xor
sbb
or
jns
movsl
icebp
sbb
popf
and
add
xor
shrb
inc
arpl
mov
adc
rorb
mov
scas
dec
add
mov
out
push
mov
jbe
xchg
ss
lcall
mov
push
jl
push
aaa
push
fildl
add
mov
mov
or
cltd
xor
adc
mov
inc
push
fwait
sarb
push
pop
mov
mov
notb
je
outsb
push
data16
or
movsl
push
setl
cmp
or
lods
add
out
ss
cwtl
xchg
clc
pop
daa
pop
jmp
cmp
hlt
mov
jg
inc
shll
scas
ljmp
roll
pop
sti
cmp
push
sub
out
pop
out
negb
gs
call
push
dec
inc
loopne
dec
mov
divl
lea
jns
xor
push
xchg
data16
lods
inc
scas
inc
fidivs
addl
jae
cltd
lock
fs
inc
push
or
dec
es
ja
js
cmp
or
inc
into
push
and
pop
xchg
stc
pop
imul
mov
push
shll
mov
xchg
ljmp
sahf
inc
and
iret
cmp
dec
dec
addr16
cmovns
out
dec
daa
std
rcll
push
mov
lds
dec
mov
lahf
in
rcl
push
rep
jnp
ficoms
cmc
ficoml
ss
xchg
lret
into
sub
movsl
cmp
sub
inc
loope
mov
mov
xor
mov
loopne
bound
negl
test
cmp
add
and
cmc
dec
jmp
xor
xchg
add
fwait
cmpsl
mov
pop
fiadds
xor
xchg
push
stos
iret
mov
mov
cmp
das
cwtl
xchg
add
mov
mov
xchg
sub
cmp
neg
je
cld
shrl
or
jb
fwait
push
cwtl
arpl
arpl
mov
fs
mov
sahf
scas
mov
sub
cs
push
leave
ret
daa
pop
fdivl
popaw
clc
or
mov
fdivp
daa
fs
xchg
push
adc
dec
sbb
btc
dec
pop
cmp
imul
mov
addr16
pop
and
leave
dec
mov
testl
mov
cmp
mov
rorb
add
dec
pushf
shrl
pop
loop
mov
mov
add
or
ljmp
push
mov
xchg
pop
mov
imul
mov
pop
jecxz
adc
mov
int
inc
jmp
add
pop
lods
cmp
cmp
mov
inc
ficomps
pop
out
mov
jbe
and
sti
fwait
and
jnp
imul
xchg
pop
sub
sbb
xlat
jg
popf
sahf
fcom
sahf
popa
jb
lods
mov
test
add
pusha
test
and
pop
icebp
lods
jmp
pop
lcall
lods
pop
mov
test
jns
ret
ds
mov
sbb
aad
or
pop
cmp
mov
push
mov
faddp
dec
push
sbb
lea
movups
scas
xchg
adc
cmpb
into
jb
or
pop
sbb
mov
pavgb
dec
jae
mov
add
es
lock
add
cltd
jno
aad
add
shr
push
mov
mov
push
scas
pop
js
cmp
test
ja
call
es
lea
adc
inc
sub
scas
inc
inc
xchg
mov
gs
pop
mov
jne
and
and
pop
pop
lahf
sbb
dec
gs
mov
clc
divb
fistpl
dec
andnps
js
sub
inc
lods
in
je
push
fsubrp
inc
pusha
jno
jecxz
push
fldcw
stc
jl
xchg
mov
pop
notl
imul
pop
call
pusha
popa
sahf
xor
in
jns
cltd
xchg
push
mov
iret
das
xchg
dec
add
ret
add
ss
adc
or
loopne
fnstsw
fldcw
sbb
and
std
icebp
out
cmp
ret
scas
xorb
sub
sub
mov
add
xor
sub
fisubl
mov
and
std
adc
pop
cmp
imul
mov
stos
cmp
inc
pushf
aas
loop
fldenv
repnz
push
xlat
dec
rep
add
sbbb
mov
outsl
sarl
test
shll
scas
xchg
sub
and
lds
enter
lret
jnp
cmp
mov
adc
outsl
jnp
addr16
test
mov
loop
push
cmp
loop
mov
xchg
sub
arpl
cmp
adc
cmpsl
sbb
mov
xchg
clc
ja
jp
sbb
daa
es
sbb
mov
xchg
push
mov
fildl
adc
stos
cmp
icebp
cmp
cmpsb
icebp
movsl
es
or
je
aaa
mov
dec
push
jns
pop
das
sahf
inc
mov
inc
mov
loope,pt
xchg
dec
and
sti
jecxz
test
loop
pushf
push
mov
mov
mov
jbe
push
pushf
cwtl
jmp
cltd
mov
lea
ret
sub
call
xchg
sub
test
enter
in
mov
mov
mov
out
mov
cwtl
add
jl
iret
sti
jb
popl
nop
loope
sub
shrl
outsl
jecxz
mov
test
sub
xchg
jns
jmp
in
addr16
loop
rol
jmp
sub
xor
jmp
loopne
pop
inc
int3
xlat
add
dec
sbb
add
push
repz
ja
mov
jge
cmpsb
cmp
adc
les
inc
cli
xchg
pop
fidivrl
mov
push
mov
mov
adc
xor
pop
mov
adc
aad
mov
rcrb
cld
xchg
repz
rcrl
add
mov
cmpsb
jns
in
push
inc
ret
daa
dec
aaa
je
inc
pop
pop
cmp
int
outsb
js
dec
popa
sbb
jb
jmp
mov
leave
fisubl
sbb
or
lds
or
scas
add
xchg
loope
add
push
adc
call
aas
imul
jnp
ret
sub
hlt
mov
movsb
jmp
dec
pop
imul
movsb
push
lahf
sbb
es
and
stos
mov
jge
dec
cmp
or
xchg
test
mov
fidivl
xchg
and
sub
dec
push
lods
test
mov
xchg
push
mov
test
lret
sub
gs
scas
out
outsb
pop
cmp
sbb
xlat
jge
enter
cmc
jns,pn
aas
xor
movsl
sbb
fwait
ss
push
cmp
stos
addb
es
push
inc
mov
mov
mov
xor
test
movsl
add
jle
stc
or
mov
xchg
popa
scas
dec
xchg
call
or
popf
shll
mov
adc
mov
shlb
jae
push
mov
push
stos
sti
aaa
pop
aaa
and
pop
add
pop
ret
xchg
out
and
mov
mov
pushf
adc
dec
mov
dec
and
lcall
nop
pushf
mov
sbb
push
fisttpl
sub
cmp
mov
xchg
cmc
inc
bound
push
jo
cmp
pop
cmpsb
out
mov
sbb
sub
adc
loopne
mov
cmc
stos
xchg
addr16
fmul
jno
movsb
std
jg
and
scas
push
repnz
mov
stc
xor
lea
pushf
test
stc
test
fldenv
jbe
iret
sbb
mov
jl
leave
jb
mov
popa
loope
xchg
xor
rcrb
sahf
pop
mov
stos
pop
inc
popa
push
stos
jnp
xchg
mov
ret
test
movsb
cmp
aad
sbb
mov
int3
mov
dec
push
sarb
in
jecxz
sbb
push
or
xchg
pop
lock
popa
cmp
sub
outsb
xlat
sub
mov
cs
dec
push
loopne
mov
jmp
jb
mov
int3
xor
xchg
pop
sub
xor
add
mov
push
and
xchg
ds
dec
int3
xchg
out
das
push
lahf
jo
cli
and
lods
or
mov
lret
push
jae
es
dec
sub
outsb
jae
sbb
xor
fs
sub
xor
and
movsb
jle
or
std
les
cli
popl
cmp
xor
inc
and
push
std
jb
pop
scas
mov
rorl
mov
mov
notb
cwtl
scas
mov
cwtl
xor
push
sahf
pushl
adc
push
jmp
sub
and
rcrb
pinsrw
jecxz
aaa
outsb
sbb
jge
insb
js
push
cmp
jne
ret
pop
adcb
shrb
push
or
mov
xchg
sbb
sbb
sar
adc
inc
fcompl
mov
cli
add
xor
cmpsb
xor
add
jmp
xchg
jge
outsb
pop
das
and
adc
push
je
out
jae
sbbl
gs
cmp
ds
sub
icebp
negb
loope
cli
mov
inc
hlt
sbb
xchg
sub
cmpsb
cmp
or
add
test
mov
scas
icebp
adc
ss
cmp
mov
test
cmp
xchg
lret
xlat
or
lods
jo
inc
adc
nop
push
ds
mov
stos
or
sbb
adc
ja
stc
cmp
cmp
je
jo
mov
sahf
sar
xorb
inc
lret
ljmp
inc
mov
fistpll
out
dec
inc
lods
mov
sbb
div
fs
sahf
icebp
mov
dec
jb
xor
ucomiss
shll
mov
adc
sahf
sbbl
add
adc
negl
aam
inc
fs
inc
frstor
adc
jb
xchg
outsb
shrb
repz
daa
loopne
loope
js
cmp
pop
sahf
adc
mov
mov
cmp
ficompl
fbld
clc
insb
jnp
sbb
mov
mov
push
mov
loopne
push
mov
cmp
xlat
ret
ficomps
cmc
sbb
adc
and
and
out
push
aad
cld
push
ljmp
cmp
imul
push
aas
cmpsl
sub
inc
popa
adcb
jle
aad
incl
or
addr16
push
xor
test
sub
iret
push
cs
xchg
shrl
iret
xlat
xor
sub
fst
mov
insb
fnstsw
xor
aaa
jnp
xor
faddl
lret
enter
push
call
ret
jns
pop
shlb
or
jo
divb
jo
cmp
mov
int3
lock
push
and
push
xchg
ja
or
rolb
iret
mov
pop
adc
xchg
pop
pop
xchg
ficoms
in
sbb
inc
in
mov
sbb
xor
xlat
push
bound
push
inc
pusha
jns
scas
cmp
out
jp
pop
repnz
jne
mov
push
push
pop
mov
xor
into
lods
dec
jp
mov
lods
and
pop
imul
scas
sub
push
movsb
frstor
enter
mov
cmp
or
loop
stc
js
iret
popf
cmp
ror
loope
nop
cmp
roll
test
push
xchg
in
and
pop
hlt
inc
inc
dec
in
mov
ss
add
mov
wrmsr
mov
ja
add
xchg
ljmp
jmp
test
and
pusha
loope
dec
icebp
pusha
sbbb
in
mov
js
push
lret
sub
in
mov
scas
pushf
nop
xchg
push
mov
icebp
adc
lret
mov
pop
sub
fidivrl
or
leave
in
pop
mov
mov
popf
test
inc
lcall
lock
or
test
std
xchg
das
in
sbb
push
lds
jns
add
add
and
dec
adc
adcl
pusha
lret
or
inc
pop
lahf
mov
sarb
lret
pop
push
adc
out
test
sbb
jnp
jnp
cmp
js
xor
dec
bound
adc
aad
popa
or
cmp
cmc
cmp
aad
push
insl
popa
dec
fdiv
jl
add
pop
and
dec
fdivs
out
subb
sbb
mov
xchg
jns
iret
ret
outsb
test
scas
rcrl
inc
fcoml
mov
fcomps
xchg
sub
sbb
shlb
dec
push
loope
test
sub
push
gs
jb
aaa
mov
les
test
mov
in
lret
cwtl
add
xor
sub
insl
rcr
js
push
jno
rcrb
xchg
lahf
stos
mov
sub
xlat
push
clc
data16
sarb
jno
adc
es
popl
hlt
mov
daa
xlat
in
mov
mov
je
fstpl
adc
stos
or
xchg
fmul
xchg
jnp
mov
xchg
push
jne
add
and
mov
data16
sbb
jmp
lret
test
mov
pop
in
add
jo
and
push
imul
ret
xchg
inc
sub
call
xchg
lds
dec
xor
cmp
xor
mov
popa
stos
fadd
hlt
sbb
add
push
je
lea
xchg
popf
sti
inc
jge
or
adcl
sub
sahf
mov
dec
call
enter
test
icebp
call
adc
or
aad
mov
test
inc
jnp
fildll
sbb
jb
loop
notb
or
xor
int3
adc
mov
mov
xchg
cmpsb
mov
fs
lods
xchg
push
fidivrs
push
test
arpl
imul
mov
mov
and
out
or
mov
jl
add
xor
sub
mov
imul
jae
cli
arpl
push
into
sbb
push
shll
les
popa
repnz
lods
fwait
xor
sbb
cmp
xor
out
jge
cli
popa
clc
sub
mov
inc
aaa
push
ja
push
mov
mov
cmpb
pop
sahf
add
and
movsl
mov
sete
mov
jb
push
rcl
add
lcall
lods
and
xlat
aas
push
call
sub
sarl
dec
ss
std
and
push
fdivrs
pop
and
push
xor
inc
enter
pop
pop
mov
cmpsb
in
test
mov
xchg
pop
imul
mov
imul
adc
add
jmp
aaa
add
pop
outsl
or
add
xchg
lahf
push
pop
push
stc
dec
shrl
fs
enter
enter
movsl
cmp
xchg
aaa
stos
into
sub
pop
icebp
mov
push
movsl
inc
stos
cpuid
shlb
jge
dec
test
dec
xor
fs
aaa
testl
jp
repz
sbb
pop
pop
cmp
add
shll
out
imul
test
bswap
mov
mov
icebp
iret
sbb
ret
pop
fstpl
mov
jmp
js
stos
or
sub
ljmp
inc
loopne
mov
loopne
fisubl
pushf
push
in
int
adc
xchg
jge
push
out
xor
insb
jmp
sbb
mov
mov
into
inc
sub
in
std
addr16
repnz
mov
and
cmpsb
cmp
sbb
outsb
insl
add
lock
loop
mov
pop
xchg
cmc
or
out
mov
ds
jmp
adc
sbb
xor
arpl
sbb
add
gs
and
arpl
lret
mov
imul
add
push
sarb
ret
fucomp
mulb
adc
movsb
mov
ja
aam
mov
mov
inc
ret
mov
and
mov
xor
lret
mov
imul
push
int
cmp
out
dec
pop
sub
mov
iret
mov
push
xchg
push
pusha
pop
rclb
das
mov
jne
inc
gs
pop
inc
int
mov
pop
jle
and
and
lods
ja
inc
shrl
fidivl
mov
cwtl
loope
aam
xorl
sub
cltd
xchg
je
push
push
or
hlt
sbb
xor
xor
das
arpl
push
sbb
ss
jecxz
mov
and
andl
jecxz
jl
scas
popa
test
mov
pop
mov
pop
pop
or
pop
pop
or
dec
sub
cmp
das
cmpl
or
or
repz
ret
lcall
xchg
and
push
inc
pop
ljmp
xor
mov
cmp
push
jo
enter
cmpsl
in
pushf
popa
ljmp
xchg
sbb
jmp
std
xchg
arpl
out
xlat
sub
lods
cmp
sbb
dec
idiv
pushf
cmpsb
sbb
xor
pop
ret
sti
push
repz
es
fbld
jno
popa
lret
or
fistl
jmp
pop
pop
jo
fbstp
cmpsb
add
addr16
inc
clc
sar
out
xchg
enter
or
lods
fcmovb
and
or
int3
mov
out
dec
dec
push
imul
inc
add
xabort
hlt
out
xchg
xchg
sbb
xchg
dec
mov
dec
arpl
or
test
xchg
ds
mov
or
shll
pop
jmp
call
pusha
cmpsb
jl
and
mov
int3
lret
jecxz
jo
cld
and
adc
into
gs
les
inc
cld
rorl
adc
nop
push
xor
mov
lahf
stc
jp
je
aam
std
inc
test
pusha
test
negl
imul
fwait
mull
leave
xchg
adc
jnp
xor
dec
xchg
shll
pop
adc
xchg
xor
jge
lods
aaa
fnstenv
stos
data16
flds
mov
mov
lods
gs
jns
loopnew
movsl
stos
jns
pusha
jge
in
add
imul
xor
movsb
ret
fstl
test
outsb
xchg
mov
mov
ret
iret
jbe
fsubl
lea
lods
dec
scas
aad
loopne
js
movsl
inc
jo
jae
jecxz
sti
push
lods
xchg
in
adc
dec
and
aas
divb
and
pop
cmp
dec
push
imul
dec
pop
and
aaa
hlt
sbb
jg
pop
jl
sub
jnp
shl
xor
dec
popa
fcmovnu
jbe
xchg
test
push
addr16
std
faddl
mov
jmp
sbb
mov
push
ljmp
ljmp
ds
loop
xor
repnz
push
mov
fiadds
lret
xor
outsl
in
xor
stc
dec
cltd
out
ret
xchg
jle
cltd
sub
dec
dec
gs
mov
cli
or
nop
loop
sub
cmp
icebp
movsl
sub
mov
into
out
and
inc
cmpsb
push
in
add
test
std
jecxz
dec
inc
aad
dec
test
push
sub
sub
inc
cmpsb
jg
cwtl
mov
ficomps
loopne
dec
adc
aad
jge
push
out
mov
push
push
ss
pop
mov
mov
fiaddl
mov
cmp
inc
pop
jl
mov
jg
lods
and
xchg
push
test
mov
mov
lret
cmp
adc
sub
insl
rclb
hlt
fwait
cmp
jle
mov
pop
div
outsb
jle
ret
xor
je
inc
push
sbb
mov
cltd
push
fwait
sbbb
test
js
fistpll
clc
test
push
xchg
fnstcw
push
push
lret
and
je
jge
push
jne
adc
fldenv
push
cmpsb
adc
es
scas
aaa
mov
outsb
stos
pop
dec
push
or
dec
pusha
fsubrl
mov
stos
mov
and
mov
fsin
inc
pop
sub
data16
jg
rcrb
push
push
pop
xor
push
adc
repz
xor
test
cmp
ljmp
bound
adc
lock
dec
inc
xchg
pop
ja
test
lret
mov
nop
ja
jbe
mov
insl
jl
inc
inc
cltd
jns
fidivs
adc
cmp
xlat
inc
jmp
fisubrl
mov
std
imul
sbb
lods
xchg
dec
and
fcomip
jle
mov
lahf
sub
into
push
lods
add
fdivl
testl
xchg
decl
mov
cmpb
sti
cli
pop
ffreep
scas
jb
arpl
mov
or
jge
imul
iret
cmp
dec
stos
loop
push
rolb
inc
dec
test
insl
fcmovbe
xor
and
imul
test
pop
fsubrs
leave
pusha
fstpt
loope
pusha
fsubs
and
cmp
aam
insb
ja
aad
daa
pop
mov
dec
cmp
lcall
outsb
imul
pop
and
out
jb
mov
sub
pop
cltd
jge
inc
dec
dec
or
adc
out
and
dec
jae
jg
stos
dec
outsb
mov
push
pop
jge
mov
cmpl
mov
dec
cmc
cmpsl
inc
push
fsts
aad
ja
test
push
mov
sub
pop
xor
lds
ret
lahf
and
scas
stos
in
outsb
add
out
outsl
divb
es
aaa
out
cmp
lret
in
and
xchg
inc
pop
mov
add
test
dec
pushf
clc
fcomi
or
and
int3
push
dec
dec
xchg
test
pusha
sub
and
mov
push
adc
jnp
out
mov
fildll
enter
mov
add
leave
mov
or
cmpsl
shrl
imul
jp
aam
pop
repnz
mov
add
push
addr16
mov
jo
and
sbb
lret
dec
pop
enter
popf
mov
mov
mov
cld
inc
mov
notb
movsb
insb
dec
pop
sahf
jno
fwait
xor
mov
lret
bound
inc
jmp
nop
arpl
pop
and
cmp
jns
movsl
cmpsl
xlat
out
jmp
sti
cmpsb
jo
pop
xor
jp
mov
shl
pop
jns
sarl
lret
iret
or
push
mov
add
push
shr
sbb
push
lock
push
loop
jne
in
subl
out
test
sub
push
xchg
fiadds
push
mov
cmpsb
in
nop
mov
xor
sub
lret
mov
xchg
xlat
adc
sbb
lock
push
ds
sbb
mov
mov
int3
xchg
jns
orb
lret
sub
sbb
or
xchg
xlat
insb
ffreep
lret
push
out
push
sbb
cwtl
into
jne
mov
jl
adcb
jl
fsts
mov
cwtl
mov
jge
movsb
and
xchg
jbe
cmp
xor
aas
in
push
test
dec
xchg
and
mov
ja
jmp
dec
mov
dec
in
es
sahf
repnz
jle
sbb
popa
cmp
inc
cmp
push
pop
ficompl
addr16
insb
adc
jne
push
subb
aam
cmpl
sbb
and
int
pushf
lret
test
arpl
pusha
ljmp
stc
cld
dec
pop
sub
decl
mov
mov
push
jns
in
inc
out
push
scas
and
add
mov
jmp
in
sub
test
xlat
test
sahf
lods
fcompl
dec
dec
jbe
imul
mov
adc
mov
stos
test
mov
or
inc
adcl
roll
add
pop
loopne
pop
mov
mov
outsl
sub
in
sbb
arpl
jne
or
inc
std
lds
and
mov
popf
movsl
mov
dec
xchg
adc
movsl
mov
mov
sub
mov
adc
mov
mov
add
pop
mov
inc
push
or
cs
cmp
jle
xor
adc
stos
inc
aaa
clc
sbb
inc
pop
movsb
jg
sub
push
mov
and
aad
push
and
xchg
loop
int
repz
decb
lods
int
js
std
push
rcl
jb
mov
inc
fimull
lods
popa
clc
sbb
sub
sahf
cmc
sub
sbb
cmp
mov
pop
pop
push
shrl
cltd
mov
fstpl
pop
aad
sub
mov
xor
sub
sar
or
and
hlt
push
pop
lods
mov
pushf
or
loope
fsubs
imul
imul
cmc
push
outsl
mov
dec
pop
mov
fiaddl
inc
xchg
call
out
out
mov
or
ret
cltd
sub
loop
or
push
outsb
fstl
leave
or
das
outsb
adc
fmuls
std
mov
push
xchg
out
ds
stc
sarl
imul
mov
out
xor
sti
jp
mov
mov
push
jne
loopne
negl
sub
sub
xor
inc
ret
pop
loopne
push
adc
out
pop
ja
or
ret
push
push
jp
popa
jbe
jbe
jns
mov
pop
xchg
test
loope
inc
popf
adc
add
pop
sti
fbstp
jnp
test
iret
cmp
les
enter
sbb
push
jae
ss
cmp
lcall
sbb
dec
lods
je
aas
jl
iret
gs
jae
arpl
test
sub
inc
das
inc
jne
cmp
lds
mov
out
mov
pop
cmp
sbb
outsb
bound
call
int
sub
int
add
xchg
out
mov
xchg
out
dec
jmp
rol
and
repz
lahf
push
mov
cmp
mov
in
je
pop
adc
or
cmp
clc
jae
jg
subl
dec
or
mov
lea
jp
xor
add
and
push
xor
jns
mov
xor
dec
ds
mov
sub
cmp
into
popf
xorb
push
movsw
sbb
adc
mov
int
xchg
add
cmp
mov
lcall
iret
xchg
push
xchg
das
rcrl
mov
ret
data16
insb
xchg
adc
inc
mov
ret
ret
sub
xor
loop
mov
push
xor
jbe
lods
jmp
mov
push
ret
xor
push
pop
iret
push
xor
out
mov
mov
sbb
fstpl
hlt
outsb
and
insb
arpl
pop
aas
pop
in
pop
mov
dec
add
mov
fbstp
sbb
mov
loopne
xchg
xchg
lods
xchg
fisttpl
adc
iret
cmp
jbe
xchg
outsb
scas
xor
cmp
into
cli
nop
dec
mov
jae
xchg
in
test
xor
lret
cli
xchg
and
adc
jp
inc
pop
xchg
gs
mov
out
mov
inc
repnz
dec
pop
enter
fadds
cld
stc
in
pminub
das
jne
popf
jle
pop
add
sub
adc
inc
mov
addr16
sbb
movsb
push
cmp
mov
insb
cmpb
fiaddl
imul
pop
lea
xlat
in
int
ret
popa
lret
es
or
sub
and
cli
je
xchg
mov
mov
push
jae
nop
cmp
in
cmpsb
sbb
stos
cmc
and
mov
testl
test
pop
inc
enter
ljmp
sub
std
pushf
loop
lret
lret
lods
inc
ss
mov
xchg
lcall
leave
leave
or
adc
movsl
sbb
icebp
movswl
popa
pusha
mov
mull
ret
out
adc
push
xor
test
push
pop
cmpsl
inc
pop
mov
xchg
ja
adcb
pop
or
mov
xchg
xchg
jmp
inc
out
insb
jmp
push
inc
push
xor
inc
clc
int
or
into
addr16
rcl
outsb
or
xlat
mov
push
mov
add
xchg
neg
and
mov
cmp
inc
mov
roll
fstpt
das
loope
js
leave
and
jecxz
mov
fstps
adc
arpl
push
mov
pop
push
and
mov
ret
lods
es
mov
daa
imul
outsb
in
ficoml
inc
push
dec
fwait
fs
out
mov
fdivp
cvtpi2ps
sub
and
xchg
lret
adc
jno
gs
arpl
sbb
and
stos
call
cmp
mov
xlat
xchg
mov
adc
jle
add
dec
mov
and
xchg
push
cmp
pop
daa
sbbb
loopne
popf
add
in
insb
mov
ret
scas
cmp
not
fdivp
pop
sub
fbstp
lret
pop
mov
sub
add
jns
and
clc
mov
mov
in
nop
repnz
das
outsb
adcl
out
imul
outsl
sbb
rolb
mov
add
mov
dec
jbe
out
test
nop
out
lods
andl
push
fstp
lahf
cmp
xor
sbb
test
mov
jp
pusha
fidivl
adc
je
or
xchg
jnp
js
push
jp
push
cmpsl
movsl
jnp
outsl
jo
pop
pop
push
mov
mov
and
mov
and
add
pop
cmp
push
cs
loopne
add
or
imul
sbb
and
push
sub
sbb
and
mov
inc
jb
adc
test
mov
fwait
sbb
in
sbb
fld
sub
mov
pusha
pop
pop
icebp
inc
push
xor
mov
insl
push
push
xchg
mov
jne
js
xchg
push
loope
mov
jmp
ljmp
push
mov
jecxz
test
pop
dec
or
out
dec
enter
xchg
add
mov
mov
push
jbe
dec
jg
jnp
sub
loope
sbb
mov
cmpsb
or
mov
popf
xchg
mov
dec
pop
int
dec
dec
push
popa
sahf
sub
inc
ljmp
shll
sub
mov
ror
mov
pop
or
push
loopne
push
movsb
sub
xchg
cld
rorl
inc
sbb
mov
jecxz
aad
fimuls
mov
xor
or
push
cld
sbb
test
cmpsb
mov
sbb
inc
pop
popa
adc
call
and
popf
pop
push
das
add
adcb
dec
dec
mov
and
mov
and
in
jg
adc
cli
mov
rcl
mov
inc
into
or
pop
test
nop
ljmp
loopne
outsl
push
out
lret
sub
dec
fldcw
sbbl
fstl
fildl
sub
and
stos
fs
inc
xchg
dec
cmpsb
jne
into
daa
fwait
jb
add
bound
in
addr16
pop
jne
jbe
pop
dec
and
jae
stos
inc
mov
lret
sahf
loopne
dec
ds
cld
cmp
pop
xchg
xchg
clc
sahf
pop
lds
iret
ss
call
lea
push
popf
push
push
sbb
mov
mov
jne
jmp
ja
xrelease
sar
ret
mov
adc
jl
sub
out
lret
mov
iret
data16
pop
icebp
in
test
rcll
notb
or
leave
sub
lret
sub
push
jecxz
lods
inc
adc
cmpsb
mov
inc
fidivrs
rcr
jecxz
adcl
enter
jle
xchg
cmp
fdivrl
mov
mov
loope
fnstcw
cs
or
repz
fcoml
movsb
cmp
jg
xor
ret
sbbb
cmp
scas
mov
jg
stc
xor
fdivr
daa
mov
pop
stos
fwait
jmp
mov
fisubs
or
adc
lods
jae
scas
pop
stos
sub
fcmovne
out
push
fdivs
out
adc
cld
mov
mov
fadds
and
pop
sbb
inc
dec
jle
push
js
les
in
or
mov
stos
inc
mov
ret
ficoml
mov
ret
repz
pop
gs
loope
jge
add
cmp
imul
pop
adc
mov
fisttps
mov
movsl
adc
and
adc
inc
mov
jbe
push
rclb
cmc
pop
xor
fistps
xchg
outsl
jl
and
jge
mov
dec
fsubl
cli
adc
cmpsl
fs
add
sub
fsubrl
sar
pop
scas
add
loopne
sbb
mov
loop
push
or
or
movsb
sti
movsl
xor
mov
lret
push
lods
cld
xchg
xor
sbb
cmp
lahf
mov
xorb
mov
test
inc
test
jns
dec
cwtl
lods
dec
loope
mov
mov
dec
sub
cmc
dec
das
xchg
cmp
movsb
cmp
fisubrs
jge
sti
in
test
rclb
pop
dec
jnp
popf
aas
repnz
movsl
xor
sti
sbb
pusha
xor
cmp
rcll
jle
and
in
out
and
pop
xchg
sub
adc
and
mov
inc
sub
mov
add
in
ret
mov
ficomps
lret
bound
jl
ljmp
jae
sub
adc
cli
xchg
pop
mov
xchg
mov
mov
push
xlat
jo
inc
dec
mov
xchg
int
lds
je
mov
in
movsl
and
lahf
dec
into
pop
lods
or
in
aam
rol
xchg
insb
sbb
inc
lock
mov
out
mov
xor
nop
sbb
loop
cld
and
out
fsubs
lds
mov
lret
call
test
nop
pop
aaa
xchg
add
inc
jae
xchg
mov
adcb
fnsave
mov
mov
push
inc
and
sahf
push
xor
pop
gs
sbb
pop
enter
add
inc
leave
das
xor
xlat
and
sbb
xor
sbb
stos
and
add
pop
mov
test
dec
push
mov
hlt
jnp
dec
loope
jge
jns
push
imul
xlat
aas
adc
mov
into
pop
xor
xlat
push
cmpsl
subb
int
xchg
ja
and
sub
adc
cmp
out
fwait
and
xchg
popa
mov
push
and
mov
lahf
sbb
lea
mov
cmp
xor
add
ret
bound
les
ja
dec
adc
mov
pusha
jg
iret
jbe
stos
es
adc
dec
es
cltd
push
outsl
sub
adc
mov
push
xchg
and
out
nop
xor
nop
ljmp
ljmp
pop
lods
mov
jl
xor
jno
or
xor
cmpb
insb
mov
pop
outsl
daa
inc
xchg
test
rorb
cmp
rcll
aaa
adc
jp
popa
mov
adc
lods
js
shlb
jns
out
jo
mov
pop
imul
jns
push
jb
xor
or
ret
pop
ja
popa
sbb
enter
add
jne
ds
push
xchg
test
or
cli
cmp
cmp
xchg
lcall
xchg
loope
or
mov
push
pop
loop
jne
sub
xchg
xor
ljmp
jl
adc
xchg
test
jmp
or
xor
mov
push
gs
in
outsb
mov
gs
popa
shll
xor
dec
in
cmc
inc
push
mov
leave
jo
shl
or
adc
push
popa
cmp
jmp
cli
xchg
push
aad
inc
iret
dec
mov
fsubrs
push
sbb
mov
or
push
loopne
sarb
inc
das
push
test
mov
xchg
lea
pop
ds
lcall
add
lahf
cli
es
and
cmpsl
push
sbb
pop
xbegin
pop
push
call
cmp
add
xchg
add
movsb
jecxz
mov
icebp
mov
fstps
mov
sbb
mov
sbb
movsb
mov
jnp
int
adc
popl
movsl
add
testl
dec
fucomi
loopne
in
leave
sub
or
jo
sub
pop
das
testl
dec
dec
call
fstpt
mov
pop
outsl
add
mov
push
inc
flds
and
push
jge
int3
pop
out
std
jecxz
jbe
xchg
inc
dec
push
ja
in
lods
mov
lods
cmp
xchg
scas
sbb
es
popa
xor
pop
loope
imul
xchg
jl
out
cmpsl
push
loop
xchg
jno
dec
sub
movsb
ror
mov
inc
clc
cltd
in
sub
shlb
xchg
fwait
push
mov
cmp
rcrl
mov
inc
je
js
pop
mov
or
and
mov
pop
and
popa
jnp
jnp
pushl
jl
fimull
sbb
addr16
dec
pop
andb
das
testl
daa
fcmovu
popf
pop
lret
shlb
outsl
daa
or
pop
aaa
scas
pop
dec
xchg
fstpl
push
xchg
aas
pop
cmp
hlt
daa
cmp
faddl
in
int3
dec
loopne
push
push
fdivrl
adc
test
add
test
mov
and
mov
in
push
into
mov
mov
mov
ret
ror
or
iret
xchg
data16
je
leave
mov
fstpt
loopne
mov
ss
mov
iret
movlps
out
cmp
mov
int
fadds
mov
nop
push
sub
jg
cmp
in
pop
inc
cmpsb
add
in
shll
jns
sub
test
test
stos
mov
outsl
nop
cmpb
inc
sub
sti
xchg
or
xor
loop
sub
pop
pop
mov
out
js
sbb
mov
xlat
mov
mov
inc
mov
std
leave
mov
push
mov
mov
mov
fisubl
sarb
adc
or
icebp
shr
jbe
imul
xchg
cmp
repz
shlb
mov
pop
ret
cli
dec
pop
jno
fmul
js
icebp
push
mov
xchg
hlt
dec
popf
mov
ds
pusha
pop
and
xchg
or
test
pushl
mov
fidivl
dec
dec
cmc
xchg
insb
inc
pop
lret
xchg
jbe
mov
ljmp
popf
mov
cwtl
xor
aas
ja
add
inc
out
popf
cmp
ret
loope
lahf
popf
outsl
inc
pop
sub
test
push
and
outsb
addr16
cmp
divl
cli
or
push
xlat
mov
test
mov
decb
gs
inc
and
loope
jmp
imul
movl
imul
sbb
add
push
pop
xchg
sbb
and
xchg
sub
cmp
arpl
ret
pop
cmp
in
push
mov
test
imul
pop
scas
sbb
push
jno
push
mov
test
push
add
adc
mov
sub
sar
jp
dec
dec
xor
cmpsb
ror
rol
bound
and
pop
in
mov
or
popf
add
dec
loope
out
lahf
fisubrs
leave
xor
add
and
pop
xor
inc
push
out
cmpsl
shll
jmp
jecxz,pn
push
lcall
in
xor
in
push
fldt
ljmp
ficompl
or
gs
sti
ljmp
cmc
mov
jle
aaa
pop
sub
jmp
jp
push
add
movaps
jge
inc
jg
jp
xlat
sub
mov
into
fs
stos
std
lret
leave
xor
mov
jg
xchg
addr16
popf
je
jne
jnp
cld
push
adc
cwtl
push
jnp
test
mov
cmc
sub
lea
les
aas
xor
aad
cmp
and
or
cmpb
std
pop
mov
dec
pop
and
adc
adcb
xchg
fwait
or
and
test
push
sub
pop
cmc
jns
sti
cmpsl
sbb
gs
inc
das
mov
mov
cmp
xchg
mov
sbb
add
cmp
sar
pushf
je
sarb
fdivs
mov
adc
mov
mov
jge
xchg
mov
push
push
je
fidivrs
ja
in
mov
lcall
out
repnz
add
popf
pop
hlt
jmp
dec
fcomps
movb
stos
xchg
test
cmc
and
cmp
dec
lcall
push
movsb
push
nop
cmpsb
mov
negb
xchg
insl
cmpsl
mov
mov
cld
xchg
call
cltd
enter
xor
pushf
rolb
in
lds
inc
pop
out
push
das
stos
xchg
rclb
push
and
sbb
xchg
mov
cltd
jne
sub
stc
loope
repnz
cmp
and
add
mov
shlb
mov
sub
int
je
sti
or
mov
adc
adc
pop
push
xchg
ja
and
or
nop
inc
push
pop
xchg
sub
clc
shrl
imul
lock
xchg
bound
call
int
loopne
das
fs
fistl
hlt
or
inc
sub
jns
cmc
mov
xchg
add
test
and
add
pop
inc
push
mov
cmpsb
mov
outsb
mov
notl
mov
hlt
fldl
and
shll
pop
outsb
lcall
pop
popaw
mov
xor
ljmp
push
and
ret
stos
mov
add
cmp
adc
sbb
mov
jp
je
inc
jmp
jns
cmp
pusha
mov
ret
mov
rcll
mov
pop
loop
dec
push
cld
mov
stc
aam
nop
add
mov
subl
mov
aad
js
inc
das
dec
xor
add
fs
data16
adc
cltd
je
xchg
cmpsl
imul
push
fadds
xor
or
inc
adc
mov
pusha
or
pop
xor
js
repz
jp
rorl
lret
pop
nop
lea
and
inc
push
mov
xchg
stc
sbb
sub
ret
cltd
cmp
cmc
ds
mov
pop
mov
shl
in
cmp
jle
pop
xchg
jmp
push
rcrl
jne
test
and
xchg
rcl
repnz
cmp
push
movsl
cmp
inc
pop
repnz
sbb
pop
mov
ret
loope
or
mov
repz
mov
pop
inc
push
clc
leave
fistl
or
mov
dec
cmp
shll
fmull
sbb
dec
insb
sbb
lcall
lahf
mov
aaa
xchg
lret
jae
push
popf
lahf
lea
out
ss
push
loop
inc
push
inc
sub
adc
nop
popf
jb
rcrb
lahf
fsubs
mov
lcall
int3
scas
test
jb
sbb
mov
mov
push
dec
sbbl
sar
push
mov
ja
ficompl
jge
daa
mov
or
jne
stc
nop
adc
or
cmpsl
rcrb
cltd
insl
insb
and
dec
into
mov
in
movsb
ret
insl
lea
add
mov
cmpsl
and
pusha
mov
mull
jne
out
push
mov
rcrl
inc
cmp
mov
into
jp
jle
adc
mov
inc
in
pop
mov
mov
ret
jle
cmp
stos
inc
add
je
decl
ljmp
in
shrl
dec
pusha
xorl
dec
icebp
or
aaa
mov
imul
scas
adc
or
insl
nop
mov
insb
xlat
pop
push
mov
insb
sbb
jno
aad
rol
adc
or
shlb
test
add
lahf
fidivrs
jecxz
push
in
fistpl
aaa
into
inc
fdivp
aas
mov
subl
xchg
lea
or
sahf
xchg
sub
orb
roll
lcall
mov
cwtl
jle
lret
mov
xorb
aam
cmpsb
or
pushl
shrl
movsl
sti
fwait
shlb
hlt
mov
inc
jnp
mov
push
int3
ret
dec
imul
xlat
in
jo
add
and
aam
in
sbb
loope
and
hlt
jp
jg
lcall
pop
sbb
mulb
outsb
mov
sub
jmp
add
jecxz
xchg
mov
lock
shlb
sub
nop
jmp
mov
out
xchg
mov
adc
mov
mov
inc
pusha
js
subb
lds
jle
pop
mov
rclb
icebp
mov
fwait
sti
cmp
maxps
outsb
mov
cmp
jle
mov
push
or
push
push
xor
adc
shll
insl
xchg
int
lret
neg
shll
mov
inc
mov
jo
scas
mov
int3
rolb
cmpsb
cmp
pop
pop
xor
push
xchg
in
cmp
loop
rorl
fdivrl
push
mov
leave
inc
sarb
and
fldl
mov
cli
mov
mov
dec
lds
jnp
cmp
mov
mov
out
hlt
inc
push
and
lret
cmp
adc
mov
fisubl
dec
fs
jbe
mov
mov
insb
dec
nop
jmp
lea
cli
xchg
outsb
std
adc
xchg
push
mov
push
inc
pop
out
xor
push
mov
mov
add
xchg
movsb
mov
les
pop
negb
sarb
adcb
fcomi
sbb
repz
mov
or
mov
les
sub
pop
mov
inc
aas
push
or
les
mov
push
mov
add
test
jl
inc
mov
sbb
fwait
or
stc
lcall
nop
cs
pop
xlat
in
imul
ss
pop
in
sysret
roll
lds
pusha
scas
cmp
sbb
out
arpl
shr
aas
add
dec
push
xor
sbb
imul
xor
dec
sub
inc
xchg
call
out
and
push
jne
inc
or
jnp
adc
cmp
jae
xchg
test
pop
out
lret
addr16
aaa
jb
ds
sbb
lret
dec
fucomip
xchg
xor
out
adc
or
push
pop
daa
or
or
lea
aaa
pop
push
clc
and
je
pop
xor
pop
inc
sub
mov
data16
cmp
cld
subb
xor
mov
mov
cmp
adc
lea
addr16
stos
cwtl
mov
test
mov
xlat
les
addr16
cmc
lods
jge
and
shrl
pusha
add
aaa
xchg
jecxz
sbb
stc
iret
xor
xchg
push
sub
and
std
js
and
pop
lret
bound
daa
pop
dec
and
hlt
jns
and
lcall
stc
mov
aad
daa
rcll
lret
mov
push
push
jmp
xchg
push
not
nop
ss
dec
dec
nop
lea
rorl
jns
and
xchg
cmp
movlps
movsl
sub
mov
pop
cmc
sbb
jl
push
mov
pop
mov
adc
pop
mov
mov
mov
add
xchg
xor
mov
adc
loope
sub
sbb
jno
daa
jp
cmc
mov
sbb
mov
xchg
stc
xchg
jp
mov
add
outsl
jbe
sub
push
pop
fimuls
push
cld
pop
leave
cmpsl
push
sti
and
out
test
xchg
stos
hlt
inc
xlat
push
cltd
mov
cwtl
std
jl
fistpll
pop
mov
pusha
push
adc
lret
add
in
in
xchg
inc
pop
adc
stos
in
sti
lret
cli
mov
outsl
jbe
roll
fistl
cmpsb
lds
shlb
imul
dec
movsb
dec
out
lahf
ss
push
outsb
inc
loopne
or
das
xchg
sbb
dec
cltd
or
sub
lahf
mov
jae
or
cmpsl
xchg
xor
aam
stc
inc
iret
inc
ljmp
shlb
mov
dec
mov
sbb
or
fs
loop
dec
scas
inc
insb
xor
int3
scas
add
xchg
jae
js
mov
std
and
je
xor
inc
loopne
or
pusha
lahf
and
std
out
and
add
aad
mov
lcall
es
fnstenv
push
lods
inc
movsl
mov
lods
mov
push
addr16
push
lahf
mov
cmpsb
icebp
pop
pusha
add
xor
xchg
mov
scas
jnp
loope
push
cmpsb
sub
aaa
xor
pop
das
pop
sbb
fs
fisubrl
xor
jbe
repz
pop
adc
jge
out
xchg
outsb
aam
loope
pushf
leave
or
sar
xor
adc
adc
je
ss
pop
aam
inc
jno
mov
sahf
sbb
pop
push
mov
mov
das
fstpl
lcall
jge
ret
mov
fcoms
inc
pop
dec
lods
jo
jmp
pop
in
outsb
fisubrs
adc
pusha
sub
ret
pushf
xor
xchg
ds
add
repnz
ss
or
loop
jne
dec
addr16
cltd
or
enter
pop
stos
push
lock
adc
jle
cltd
loop
into
pop
or
jns
sub
imul
cmp
gs
jmp
mov
lea
orw
mov
stc
popf
add
and
inc
inc
movsb
cld
sub
cmp
into
idivl
arpl
loop,pt
pop
scas
adc
add
and
push
inc
push
lret
push
inc
int
sbb
fnsetpm(287
mul
xor
xchg
aad
jne
adc
subl
mov
push
or
or
add
adc
fiaddl
pop
jo
push
mov
mov
lods
push
adc
in
push
aaa
push
xlat
xor
nop
scas
xor
push
incb
movsl
inc
cs
jge
pop
sub
push
jge
adc
lea
pop
mov
push
adc
cmpb
jmp
mov
data16
mov
mov
mov
popf
ja
add
mov
loopne
jo
icebp
add
lea
pushf
dec
inc
std
std
sbb
mov
data16
loope
outsl
jnp
add
outsl
and
push
jecxz
adc
dec
sbb
notb
lret
shld
lock
push
mov
int3
add
dec
dec
arpl
sbb
inc
int3
imul
push
daa
push
jb
jno
dec
push
es
int3
rcr
mov
lea
pop
add
jae
jne
mov
mov
loope
jo
sbb
cmp
in
xchg
fistpll
push
out
aad
and
inc
out
jle
dec
data16
pop
xor
fidivrs
jb
sub
push
inc
pop
jmp
mov
fdivrs
arpl
adc
aaa
or
mov
sti
sub
imul
movsl
dec
popf
jns
out
stos
jb
xor
stos
ss
adc
dec
xor
dec
adc
sbb
push
dec
imul
xor
sti
jae
adc
cwtl
sahf
cli
sub
inc
mov
pusha
leave
shr
push
stos
xchg
popa
aas
mov
and
mov
pusha
jns
test
lods
ljmp
sarb
lcallw
cmpl
or
jle
and
adc
loopw
or
sub
inc
mov
lcall
jecxz
push
cmc
jmp
dec
pop
mov
sbb
enter
orb
mov
push
rolb
xor
test
mov
into
ss
push
loopne
mov
addb
mov
ffree
das
cli
scas
jnp
loope
les
mov
fwait
mov
xrelease
sbb
pop
lahf
shll
adc
pop
mov
xor
mov
add
inc
mov
sahf
iret
int3
inc
lret
push
fmul
ficompl
jmp
out
mov
imul
stos
jmp
repnz
jae
cmp
jne
ret
lds
popa
fsubs
push
scas
add
idivb
clc
test
rcll
or
jmp
cli
cld
cmp
mov
call
scas
adc
xchg
into
cmp
scas
jmp
jmp
push
xchg
lahf
and
pop
pop
mov
loop
shlb
adc
xchg
sub
mov
cmpsb
js
shrl
push
dec
adc
mov
dec
call
ret
fwait
pop
dec
sarb
inc
das
mov
shrl
sub
cwtl
mov
inc
loop
cli
pop
pop
jl
xor
mov
inc
icebp
mov
std
xchg
arpl
dec
sahf
or
xchg
mov
mov
jg
xor
ss
xchg
xchg
rcrb
sub
cs
fwait
cmpsl
movsb
sub
pusha
lea
inc
bound
ljmp
jbe
test
fnstcw
sub
pop
nop
sub
cmc
mov
arpl
lahf
mov
dec
sbb
dec
imul
ds
push
flds
push
cmpsb
push
sar
imul
lds
in
sbb
cmp
subb
push
dec
lock
insl
dec
jecxz
es
dec
fdivs
dec
or
lret
bound
adc
pop
xchg
icebp
cmp
mov
sub
popf
repz
xor
add
int3
add
push
mov
sti
enter
jmp
icebp
mov
and
jbe
push
mov
iret
mov
pop
pop
jno
inc
jb
pushf
and
jle
xlat
mov
mov
insl
sub
bound
xchg
inc
stc
nop
pop
mov
daa
call
inc
xor
int
cmp
push
scas
fstl
movups
arpl
mov
hlt
call
cmp
icebp
insb
pop
andb
mov
lock
pop
jno
inc
cmp
jne
arpl
xchg
dec
icebp
loop
add
mov
pop
andps
pop
movsl
int3
stos
incb
xlat
outsb
cmp
mov
mov
cmpsl
xor
lock
loopne
sbb
decl
int
test
push
icebp
insb
test
xlat
shl
xadd
data16
in
cmc
mov
leave
enter
adc
cmp
sbbb
pop
bound
roll
cmp
cmpsb
mov
roll
sbb
inc
popf
jo
aam
fildl
add
into
sahf
mov
sti
jl
sub
mov
xchg
add
or
jns
mov
dec
pop
jp
lcall
jbe
int
xor
push
out
inc
add
add
out
jb
bound
pop
and
mov
mov
pop
xchg
mov
nop
or
sub
sti
fwait
xor
xor
imul
shrb
sbbl
in
mov
int
and
mov
hlt
sub
pusha
fwait
sti
jne
and
jbe
idivl
addr16
popf
cwtl
push
cwtl
cwtl
mov
cmpsl
outsb
leave
inc
fucomp
stos
in
iret
pop
mov
push
insb
mov
shlb
pop
jb
aas
push
insl
xchg
aad
iret
push
idiv
popf
loope
scas
and
jmp
inc
fists
xor
mov
jo
and
jo
sbb
push
mov
mov
outsb
clc
sahf
lahf
cli
ds
fnsave
bnd
aas
mov
lods
jns
fildll
sub
mov
je
jo
push
shl
mov
in
mov
cwtl
cmp
leave
jae
and
inc
pop
repz
push
in
lcall
test
iret
and
clc
insb
movsb
push
sbb
xchg
sub
shlb
stc
test
xor
add
mov
loop
hlt
imull
cwtl
xchg
pop
clc
in
fstpt
popa
pop
jno
sub
pushf
cld
push
decl
mov
jp
test
xor
pop
inc
adc
inc
fisttps
mov
lock
sbb
les
xchg
cmp
adc
inc
sahf
dec
xor
pop
bound
fbstp
fcomps
inc
movsb
jnp
pushf
lods
or
and
fwait
cmpsb
jns
pop
out
jg
iret
add
adc
lock
ds
mov
inc
and
out
mov
mov
push
aam
dec
int3
pop
ret
mov
gs
push
sar
xor
xor
fstpl
inc
xchg
loope
jge
adcl
fwait
xor
icebp
inc
inc
lods
sub
icebp
dec
cmp
imul
addl
imul
and
mov
xchg
adc
out
push
pop
popf
call
repnz
mov
xchg
xor
xchg
hlt
cmp
test
sub
movsb
lea
add
ja
xor
fcoms
adc
pop
ss
jbe
test
out
xchg
dec
pushf
data16
sbb
sti
sbb
adc
in
outsb
cmpl
scas
mov
or
xor
push
inc
jecxz
pop
adc
test
mov
push
jbe
cmpsb
sbb
test
sbbb
pop
lock
jp
adc
stos
mov
or
cwtl
stos
jb
popa
int
lods
repz
scas
sub
popa
and
popa
jl
xchg
scas
out
mov
pop
popf
push
insb
sarl
adc
rcr
xor
pop
jle
fsubl
mov
jg
adc
dec
mov
add
scas
shlb
add
js
rol
push
sub
int
stos
dec
xor
mov
xchg
adc
xor
mov
xchg
pop
cmp
outsl
aaa
int3
je
adc
movb
scas
sbb
imul
rol
ret
fxch
scas
pop
lock
movsb
cmp
inc
ja
mov
adc
aaa
arpl
imul
fwait
xchg
call
or
mov
inc
test
mov
mov
aas
fs
cwtl
mov
adc
sbb
push
jne
push
mov
outsl
ret
dec
stos
sub
lds
div
add
and
pop
and
xorb
clc
sahf
pop
xchg
push
lds
jmp
pusha
outsb
sti
popl
push
mov
mov
in
sbb
rclb
jae
fisubs
or
test
push
lret
push
or
test
addr16
cmpsl
in
daa
push
leave
adcl
das
fbld
cmp
jbe
testb
int3
and
rcrb
xor
cmp
jge
dec
fstpt
inc
gs
sbb
icebp
push
jmp
addr16
mov
mov
dec
popf
ret
cli
mov
xchg
in
pop
and
scas
cmpsb
jge
jle
mov
push
lods
dec
sti
jns
sub
lcall
and
stos
push
rcrl
scas
add
mov
stos
mov
adcb
lds
das
repnz
daa
mov
sbb
popa
cmp
push
pop
sub
sbb
sub
scas
jne
jns
jl
add
pop
fsubl
push
outsl
fmul
sbb
insb
sbb
xor
xor
push
js
xor
sbb
mov
pop
inc
popf
mov
push
lock
adc
add
and
jb
test
repnz
cmpsl
scas
js
dec
lds
les
or
rcl
lret
bound
xchg
ret
dec
add
sub
int3
or
out
stos
xchg
jge
push
lods
fnsave
js
mov
add
in
add
jle
daa
mov
in
push
xor
mov
cmp
roll
xlat
mov
movsb
pop
ja
sbb
inc
fmull
adc
sbb
jmp
stos
in
inc
pusha
popl
mov
mov
andb
pop
lods
jnp
add
cmp
cld
sbb
xchg
push
sbb
push
outsb
stos
in
xchg
pop
adc
cmp
mov
xchg
push
inc
mov
mov
sub
gs
cmpsl
dec
hlt
jnp
add
inc
sub
sbb
fwait
scas
pop
int3
mov
cmc
and
xchg
mov
jne
cld
into
or
pop
les
sub
mov
iret
or
call
arpl
and
decb
insl
jg
lahf
jb
mov
lock
and
fisubrs
jnp
and
push
adc
mov
test
in
pop
and
push
testb
xchg
and
adc
insl
cmpsl
xchg
xor
ja
cmp
daa
imul
stos
mov
repnz
fistl
jp
add
dec
mov
stos
cld
inc
iret
push
into
ja
xchg
loop
mov
es
cmp
pop
cmp
mov
sub
push
sahf
push
in
or
in
dec
and
jo
imul
test
pop
les
cmp
inc
inc
movsb
xchg
sub
loopne
pop
into
push
xor
xchg
sub
call
xor
fdivl
ffreep
pop
push
mov
dec
outsl
mov
pop
fbld
cli
xor
pop
out
rcll
push
push
xor
dec
pop
jne
sbb
pushf
mov
test
xor
fdiv
pop
or
xor
sbb
inc
outsl
imul
fcoms
shlb
push
push
daa
jge
arpl
mov
fs
jbe
cmp
sahf
mov
ds
mov
add
sub
arpl
jp
test
jnp
inc
mov
dec
xchg
add
adc
ja
jge
test
outsb
inc
jecxz
mov
imul
movsb
xchg
inc
sbb
and
jnp
sbb
xchg
jmp
ficoms
jbe
push
insb
testl
repz
aas
adc
add
imul
mov
sar
je
pop
adc
xchg
fwait
xor
repz
add
scas
aam
ret
roll
mov
add
mov
mov
mov
fidivs
orb
jo
adc
xor
sbb
pop
and
gs
pop
mov
cmc
insl
jge
push
cmp
arpl
cmp
popa
sarb
loopne
pop
mov
int
cmp
or
adc
mov
push
fimuls
out
andl
repz
or
xchg
test
in
test
pop
pop
das
cmp
pop
pop
add
fs
or
test
mov
or
andb
je
cmpsb
dec
mov
sahf
add
push
test
popa
jl
stos
mov
fmuls
inc
inc
push
dec
xor
xchg
cs
pop
mov
inc
mov
lods
xor
xchg
mov
pop
and
negb
cmpsb
or
cwtl
sub
sbb
mov
pop
out
push
push
movsl
cmp
aad
popa
aas
ds
jl
mov
out
pop
call
imul
cwtl
stos
mov
add
scas
rclb
jl
in
dec
dec
and
rorb
and
aaa
add
arpl
int
xchg
mov
pop
fldt
cmp
jae
push
sub
loope
jne
inc
and
inc
pop
icebp
dec
xor
and
js
push
test
cmp
scas
pop
in
xor
inc
pop
js
stc
push
dec
mov
lret
fidivrl
clc
pop
mov
add
aaa
cmp
mov
xlat
mov
aad
mov
inc
xor
sti
cmp
xchg
and
sub
leave
aaa
mov
xchg
pop
adc
adc
jp
dec
xchg
or
mov
std
and
cmp
mov
xchg
shrb
imul
jecxz
sub
in
fsubrs
and
je
sbb
push
in
xor
cmp
hlt
addr16
cld
dec
movsl
mov
out
mov
jne
jo
or
jle
inc
test
shlb
iret
and
pop
aam
cmp
cmc
lcall
loop
dec
shl
jp
mov
mov
or
cltd
xchg
data16
push
imul
fwait
les
gs
out
mov
cmc
inc
add
lock
aad
pop
mov
adc
icebp
and
add
std
mov
test
pop
fwait
inc
in
clc
mov
push
lahf
pop
sbb
cld
iret
push
mov
clc
jg
das
sub
push
rclb
jg
sub
dec
inc
pushf
imul
jecxz
mov
adc
push
pusha
shrl
ljmp
fs
and
add
push
jge
jp
inc
testb
add
jne
and
fnstcw
mov
mov
popf
cld
add
loope
fisubs
fsub
add
lahf
lods
sti
rcrl
mov
pcmpeqw
adc
jg
add
in
jne
addb
mov
aam
pop
and
pop
cmc
pop
les
xrelease
clc
push
push
pop
add
rcrl
lret
pop
mov
les
addr16
shlb
in
push
sub
or
mov
jecxz
orl
repnz
aas
cmp
je
insb
mov
test
cli
xchg
ja
adc
jno
pushl
mov
cmpsb
jmp
jnp
lcall
scas
sub
inc
int
sbb
mov
xor
cli
push
adc
test
ljmp
xor
repz
fnstenv
in
loope
cmp
jge
inc
dec
inc
jecxz
jmp
js
cmp
cmp
cld
add
jg
sbb
dec
push
adc
nop
aad
int
mov
insb
adc
test
sbb
or
cmp
sub
cmc
cwtl
cmc
jae
xorb
cmpsb
imul
mov
pop
in
xor
dec
iret
rorb
dec
mov
push
test
sub
lea
adc
loope
lahf
fwait
loop
cwtl
inc
out
popf
xor
aas
dec
jl
cmp
adc
add
ficoms
sarl
lock
stc
adc
dec
aaa
int3
aam
jae
mov
test
xchg
std
jmp
inc
or
mov
sbb
or
dec
nop
enter
mov
jge
pop
cmp
sahf
lock
int
push
sarl
or
push
xlat
jmp
jg
mov
xchg
xor
aad
inc
inc
stc
push
xor
nop
mov
adc
jno
and
mov
pop
lret
or
clc
and
daa
std
push
aaa
mov
mov
scas
inc
mov
pop
mov
cmpsb
mov
adc
xor
lret
movsl
push
ds
lods
inc
and
add
movsb
pop
hlt
mov
dec
scas
repnz
out
mov
divl
iret
fsts
push
dec
and
sub
je
adc
mov
sti
pop
mov
jae
daa
jae
repnz
or
jnp
add
rorb
add
cmp
bound
pusha
push
push
ds
push
test
stos
jne
adc
mov
gs
jecxz
dec
sub
lret
jne
add
and
outsl
jbe
inc
and
jle
aas
xchg
mov
data16
pop
cmpsl
or
ret
mov
loope
push
add
mov
and
sti
outsb
inc
pop
cmp
mov
sub
xchg
into
fsubr
ret
jnp
sub
jle
or
lret
lcall
cmpsb
imul
int3
pop
push
adc
mov
xor
mov
push
mov
aas
xor
test
in
in
inc
and
add
or
mov
inc
adc
inc
xor
insb
int3
pushf
sbb
xchg
push
shrb
test
fcomip
mov
cs
sbb
scas
add
mov
pop
pop
scas
add
or
lret
nop
mov
mov
icebp
movsl
xchg
xchg
sbb
test
mov
cmp
je
pusha
push
loopne
test
mov
jmp
push
xchg
push
and
cmpsl
pop
les
jp
test
jge
out
movsb
cmp
mov
filds
pop
fisttpl
push
pop
and
inc
inc
fs
orl
sahf
lret
imul
incl
adc
dec
push
fistpll
faddl
cmp
jbe
daa
inc
pop
and
stc
ret
lea
jno
xchg
imul
mov
jns
mov
xchg
in
inc
inc
sar
push
sbb
adcl
mov
xchg
testl
pop
cmp
jecxz
fists
pop
cmp
sarl
adc
xor
push
adc
loop
test
bound
sbb
mov
pop
loop
cmp
imul
jne
cltd
daa
add
add
ret
stos
and
push
push
mov
into
add
push
out
aaa
dec
adc
in
je
add
mov
or
frstor
test
adc
negl
push
jnp
adc
pop
movsl
xor
adc
movd
add
mov
leave
xlat
add
xchg
jle
cmp
xor
sub
mov
or
mov
movd
push
fwait
lahf
sub
loopne
ret
cld
xchg
fwait
imul
pmulhuw
xchg
ret
ficomps
or
jne
pop
test
inc
stc
movsb
jecxz
arpl
fbld
std
fldenv
and
and
mov
ds
mov
les
call
inc
push
sbb
in
mov
imul
in
pop
xchg
pop
push
clc
sub
pop
sbb
mov
pop
push
fmull
jmp
cmpsb
jbe
out
popf
push
fldl
idivl
or
outsb
das
sub
pop
stos
inc
or
sbb
data16
std
mov
movsl
jbe
xor
xchg
adc
sahf
adc
push
enter
sbb
inc
inc
pushl
movsb
inc
cmpsb
add
mov
fists
xchg
mov
aam
mov
xor
xchg
test
inc
add
mov
or
add
mull
cmpsb
cmp
xlat
scas
mov
roll
mov
pop
loopne
mov
movsl
movsl
xor
divl
mov
inc
push
jne
jg
sbb
cmpsl
ds
mov
add
loopne
mov
in
push
repz
jmp
adc
sbb
pushf
push
add
or
or
addr16
inc
fmulp
mov
jne
cmpsb
lea
inc
jo
gs
bound
cmpb
xor
in
or
cmp
testb
fucomi
icebp
ret
das
imull
outsb
cmp
insl
rolb
shr
lret
pop
loopne
aam
cmpsl
out
add
mov
mov
mov
lret
std
test
xchg
jp
call
in
fwait
push
sub
daa
test
bound
inc
aad
jecxz
lds
mov
fs
adc
cli
aaa
pop
in
sbb
aas
fwait
pop
cmp
fsubl
cmp
jmp
ret
add
pop
cmc
xor
inc
lods
aas
sub
cli
iret
xor
xchg
aam
sbb
mov
and
push
jmp
pop
sti
push
sbb
jle
int
dec
jnp
jg
and
push
jae
aas
fwait
pop
mulb
lcall
or
cmp
sbb
add
loope
imul
shrl
aad
pop
lcall
popa
jl
pop
sub
loop
ds
add
inc
dec
loop
adc
jmp
out
jmp
pop
in
sbb
xor
js
add
xchg
xor
add
push
lahf
mov
inc
fdivr
mov
popf
mov
fdivr
aas
bound
xlat
aaa
in
jno
sbbl
int
int
jbe
lods
cmpsl
sbb
dec
or
adc
mov
and
add
ss
rcl
rcr
push
mov
mov
push
gs
shll
sahf
adc
and
mov
movsb
adc
dec
lods
pop
push
push
je
in
adc
fisttpll
nop
cld
popf
xchg
mov
shlb
pop
rcrb
aas
sub
hlt
lds
es
push
loope
js
adc
icebp
movsl
pushl
ja
jb
lods
fsubrl
jge
mov
shr
ds
mov
loop
jo
push
cmp
xchg
fisubrl
inc
add
test
xlat
pop
andb
dec
rclb
and
mov
test
pop
mov
fstpt
push
insl
pop
or
clc
frstor
sub
pop
xchg
adc
dec
push
aas
jecxz
cmpsl
rol
inc
fdivs
fstl
rorl
inc
imul
push
mov
fs
and
cld
sbb
imul
xchg
loop
jmp
dec
pop
jae
ja
lds
and
shr
jle
jbe
outsl
xchg
and
loope
in
jl
and
sub
outsb
pop
mov
cltd
popa
out
sbb
cmpb
mov
jb
mov
push
das
inc
in
addr16
xchg
shl
fistl
ds
data16
sbb
or
mov
push
lret
jb
jcxz
arpl
adc
insb
jle
sbb
out
add
sub
jle
pop
stos
jle
psrad
and
cmp
add
adc
call
xor
mov
push
xor
jne
pop
push
fistpl
inc
int3
dec
js
push
das
lahf
stos
mov
push
lock
inc
push
push
sti
push
jae
aas
cmp
sub
movsl
ret
bound
stc
xor
sbbl
nop
cmp
enter
dec
out
mov
jns
cmp
rcl
sub
dec
addr16
aam
sbb
jno
rorl
imul
fcoms
adc
jge
test
int3
ljmp
push
mov
mov
test
notl
jp
add
inc
push
or
sub
stos
call
ljmp
cmpsb
xchg
pop
xor
inc
sbb
scas
ficomps
jno
test
pop
aas
inc
pop
stc
repnz
daa
test
cmp
in
cwtl
mov
jecxz
stos
mov
and
sub
subl
ja
gs
fidivl
mov
adc
faddl
shlb
jo
ret
cwtl
mov
test
stos
pop
mov
jp
adc
movsb
jne
shll
adc
dec
cli
fwait
mov
inc
jmp
mov
or
test
hlt
xchg
or
push
cmpsb
push
sahf
ja
cli
test
icebp
repnz
bound
outsb
outsl
fcompl
nop
imulb
mov
mov
popf
jb
into
std
repz
sub
and
movsl
cli
add
sub
inc
cltd
mov
fucomp
mov
inc
les
stos
pop
in
test
or
mov
pop
jo
daa
mov
fldt
sbb
add
data16
inc
sbb
rorl
jmp
repz
mov
js
dec
and
fsubrp
divb
sub
pop
push
mov
ljmp
pop
add
mov
sbb
xor
jmp
sbb
ja
subl
cmp
orl
popf
ds
rclb
inc
popa
rorl
into
das
push
js
ljmp
icebp
push
out
lea
add
repz
jae
rcrl
dec
push
sub
pop
add
pushf
insl
ds
pop
outsb
adc
cmp
dec
into
pop
cld
or
enter
xchg
sbb
jge
lock
shll
dec
add
mov
or
lods
dec
jp
int
sub
and
cli
xchg
xchg
jo
or
push
jl
adc
dec
cmpl
sbbl
scas
adc
adc
mov
shl
sbb
shl
bound
xlat
sub
mov
fcoml
call
mov
mov
push
push
push
pushf
mov
into
or
dec
push
push
inc
fiadds
mov
pushf
call
and
push
push
push
adcb
sarb
andl
xchg
cmp
lea
cmp
xlat
xor
ljmp
push
mov
add
subb
enter
lahf
loope
mov
pop
dec
cmp
jne
test
test
lahf
arpl
or
je
xor
in
cmpsb
cmpsb
fsubl
pop
test
outsb
mov
or
jp
cmc
mov
das
adc
aas
xchg
jp
lret
lock
lods
lds
mov
xchg
and
jns
xor
ljmp
jno
sbb
loopne
loope
pop
adc
inc
fsubl
ret
jl
std
xchg
scas
and
js
push
int3
xor
cmp
mov
movsl
cmp
mov
sbb
adc
daa
cs
mov
cmp
decb
sub
iret
sbbb
decl
out
xchg
daa
ljmp
push
testb
imul
ss
jge
mov
add
cli
inc
nop
add
ss
cwtl
mov
clc
icebp
jecxz
gs
adc
add
jnp
cmp
aas
imul
inc
lret
outsb
adc
fsubrs
loop
test
dec
add
hlt
rcrl
mov
xchg
xchg
jp
arpl
into
lcall
inc
lock
inc
cld
jo
push
jl
out
jge
and
ja
mov
mov
stos
pop
dec
cmp
movsl
inc
fistps
out
sbb
mov
fistpl
or
mov
out
cwtl
or
mov
push
imull
inc
mov
aam
sbb
orb
int
lcall
in
inc
lock
roll
push
rcll
psrld
clc
adc
inc
pop
pop
sub
inc
xchg
ja
int
jmp
mov
sbb
insl
out
push
outsl
push
popa
pop
je
xor
push
outsb
andl
movsb
pop
out
dec
push
mov
jno
jge
inc
mov
xor
icebp
pop
mov
jae
shl
pop
fisubl
iret
adc
sbb
pop
iret
aad
test
mov
imul
popa
loop
xchg
and
xor
shrl
int3
push
lret
adc
lret
cltd
mov
jbe
out
mov
rol
mov
iret
fildl
out
dec
fdivl
jp
leave
andb
aad
lcall
xor
add
sub
bound
inc
outsb
xlat
sub
jg
dec
sub
add
add
andb
and
lcall
and
xchg
jb
push
cmp
inc
ds
outsl
shll
negl
xorl
adc
decl
sub
add
test
inc
lret
xchg
fnstenv
faddl
xchg
fcoms
xchg
sub
mov
loop
mov
ja
lds
int3
das
sahf
movsl
push
jo
rcll
add
cmpl
notb
cmp
jbe
pop
aaa
stos
dec
adc
pop
xor
inc
jae
xor
mov
je
and
inc
mov
mov
pop
sbb
outsb
loope
lcall
test
stc
popf
test
out
jmp
cmc
mov
mov
dec
mov
sbb
add
nop
pop
shr
subl
or
dec
adc
push
xchg
xor
aad
daa
cli
mov
or
cltd
add
inc
add
mov
pop
stc
sub
cltd
add
enter
dec
jmp
cmpsb
daa
cli
inc
cmpsl
aaa
bound
mov
lods
ja
jae
in
fstps
cmp
daa
outsb
inc
aam
clc
subl
scas
dec
push
hlt
mov
push
add
mov
ret
insl
repz
test
ficomps
xchg
or
jge
fidivs
pusha
xor
inc
frstor
mov
xor
mov
sbb
and
sub
mov
xchg
movsb
ljmp
mov
cmpsl
pop
adcb
adc
and
popf
js
push
pusha
addr16
mov
test
xor
aaa
dec
inc
inc
hlt
cmpl
or
mov
fisubl
push
cmpsl
js,pt
in
aad
les
fwait
into
ficoml
dec
push
or
sub
nop
andb
lock
mov
sub
lahf
jmp
lods
sbb
ss
movsl
dec
insb
out
xchg
in
pop
inc
imul
or
xor
jb
pushf
mov
clc
jecxz
cs
push
jmp
repnz
in
xorb
std
adc
clc
sarb
sub
rcl
std
gs
inc
stc
sbb
add
xor
jns
sbb
push
fnstenv
and
cmpl
mov
mov
sbb
push
sub
sub
fdivr
movsb
xchg
repnz
pop
test
inc
xchg
push
ja
xor
dec
je
fdiv
jbe
add
fucomp
cs
mov
mov
sbb
lcall
inc
test
mov
add
movsl
stos
inc
sbbl
pop
es
inc
cmp
inc
xchg
lods
inc
xor
push
mov
push
lret
fiaddl
inc
xor
jae
popa
pop
rcrb
cmpsb
mov
jmp
faddl
adc
ss
mov
mov
aad
aam
int
fs
mov
push
pop
sahf
enter
lahf
jmp
ja
push
mov
push
out
scas
les
adc
cmpsb
push
push
mov
out
aam
mov
dec
in
imul
and
pop
fstl
jo
pop
sbb
sbb
into
enter
mov
aam
pop
lods
decl
jmp
pop
das
sub
insl
or
pop
hlt
mov
push
mov
call
jg
dec
mov
mov
sbb
and
mov
ljmp
jo
or
test
arpl
out
push
pop
adc
je
lods
out
aad
sbb
push
push
pop
pusha
test
or
in
dec
or
movsb
out
sub
push
or
dec
xchg
lret
cmp
mov
inc
xor
push
pop
pop
xchg
aam
incl
sub
push
adc
xchg
cmc
cs
mov
fs
mov
cmp
inc
xchg
adc
xchg
sub
xor
mov
push
cltd
and
outsb
les
sub
sub
sbb
inc
ljmp
xchg
mov
mov
fs
in
popa
sub
xlat
sub
stc
cmp
imulb
cmp
pop
outsb
adc
cltd
jae
xchg
gs
and
sub
in
arpl
das
aad
das
mov
sbb
mov
jle
in
inc
xchg
clc
aaa
mov
xor
pushf
out
test
jns
mov
fs
and
xor
xor
enter
enter
adc
jge
inc
mov
or
sbbl
push
sub
sbb
sub
ss
mov
inc
and
mov
scas
push
scas
sbbl
jmp
push
ss
or
test
dec
push
lods
push
sbb
fwait
lahf
leave
adcb
inc
dec
xor
and
nop
xchg
lock
jmp
scas
pop
popf
ss
push
call
xchg
cmc
adc
cltd
xchg
add
movsb
jp
xchg
mov
int3
imul
popa
mov
push
jmp
test
popa
int3
jnp
pop
sbb
pop
loopne
jg
push
push
leave
cmpsb
fstpt
loope
shrl
mov
jno
adc
es
mov
mov
shlb
sbb
or
pop
mov
pop
pop
adc
imul
mov
jo
mov
lea
dec
pop
xor
andl
push
mov
out
shll
dec
in
and
pushf
pop
insb
add
cmp
iret
pop
cli
or
stos
movl
mov
pushf
inc
cmp
pop
pop
or
jg
arpl
xchg
gs
iret
sti
push
jbe
fdivs
inc
adc
mov
pop
xor
scas
inc
mov
add
nop
daa
js
sbb
iret
cmc
mov
sbb
lea
jo
inc
outsb
inc
xchg
js
or
lock
insb
loop
sbb
scas
push
stc
sbb
je
hlt
xchg
in
dec
cli
xlat
aaa
into
cs
rcll
push
in
jo
jle
inc
and
popa
stc
push
jmp
jmp
sub
jno
cwtl
in
xchg
mov
in
adc
inc
sub
pop
in
inc
cmp
je
adc
out
xchg
testb
ja
test
lahf
scas
and
jmp
adc
mov
fists
outsl
mov
and
mov
mov
add
cwtl
mov
js
sub
scas
jae
into
push
pop
cmp
inc
ljmp
mov
and
mov
fwait
dec
movsl
pop
xor
inc
adcl
sbb
inc
mov
in
push
or
gs
pop
xor
stc
cmp
jp
inc
and
push
fdivrs
dec
arpl
je,pn
movsb
cld
inc
test
pop
jne
xor
daa
lods
xchg
scas
fisttpll
xor
imul
mov
popa
imull
aaa
mov
cmpsb
loop
mov
rorb
xlat
movsbl
out
dec
repz
gs
pop
std
push
pusha
mov
ds
in
pop
xlat
mov
or
mov
cs
pop
pop
in
fstps
mov
not
pop
iret
adc
cwtl
lret
lret
shlb
sahf
outsb
fnstenv
mov
sti
or
hlt
jo
sub
sbb
or
ljmp
dec
add
cmp
movsl
mov
es
inc
inc
aad
sbb
mov
xor
jmp
cmpl
xor
adc
xchg
test
push
leave
adc
pop
cltd
inc
ret
or
sbb
orl
inc
int3
cmp
xlat
mov
aaa
rclb
lret
fucomp
inc
xchg
divl
xlat
and
dec
ja
into
loop
outsb
or
jno
lahf
push
repnz
dec
mov
push
out
mov
bnd
sbb
push
popf
push
rorl
addr16
mov
addr16
les
sub
lret
bound
adc
xchg
mov
or
cli
mov
in
into
imul
imul
mov
and
sub
pop
test
mulb
xchg
repnz
lods
insl
shrb
mov
or
adc
repnz
xchg
testb
dec
ds
ror
outsl
jnp
and
mov
aas
in
fstpt
lret
mov
iret
push
jo
hlt
incl
jge
filds
xor
lods
pusha
xchg
jae
inc
cltd
sbb
adc
dec
sub
loop
adc
jb
cli
cmp
arpl
leave
or
iret
pop
cmpsb
into
enter
inc
xchg
mov
push
fildll
cli
or
test
int
shrb
les
repz
adc
sub
clc
ja
clc
rcrb
cwtl
sbb
test
out
jbe
aaa
aad
imul
rclb
aas
idiv
pop
fdivp
aaa
xor
mulb
push
xchg
push
dec
xchg
mov
adc
xor
mov
mov
int3
fdivrl
mov
add
adc
arpl
push
mov
pop
jo
outsl
xor
mov
mov
and
or
cmp
jl
aas
es
pop
add
add
push
call
das
addr16
clc
push
sbb
insb
sbb
test
sbb
adc
pop
cmc
out
subb
insl
cmc
mov
mov
repnz
shrb
pop
inc
or
in
popf
xchg
out
mov
sbb
mov
or
lock
dec
dec
or
jp
adc
out
mov
cmp
adc
out
adc
push
in
cmp
adc
stos
jl
mov
lds
insb
js
push
xlat
cltd
cltd
hlt
int
jnp
dec
pop
adc
shrb
mov
movsb
inc
jbe
xchg
push
inc
pop
sub
pop
lahf
int3
das
in
std
add
adc
hlt
mov
xlat
pop
add
movsb
pop
outsb
or
enter
cmp
mov
mov
push
insl
aam
sbb
repnz
mov
adc
test
or
adc
test
mov
inc
sar
mov
push
movsl
mov
aam
icebp
or
aad
pop
push
mov
dec
mov
adc
mov
cmpsl
iret
xlat
xchg
sub
xor
push
pop
nop
add
jmp
and
mov
dec
in
test
jbe,pt
out
ficomps
add
mov
adcl
sub
or
xchg
inc
scas
cmc
sbb
xor
sti
mov
fadd
ja
cmp
push
mov
int3
scas
imul
mov
push
jbe
xchg
push
out
enter
and
jne
testl
xchg
sub
fidivl
ret
add
pop
popa
pop
addr16
ja
sti
test
cmp
test
add
cmpsb
pop
je
cmp
cmp
inc
fs
aaa
pop
sahf
push
jge
addr16
lret
cs
xor
inc
fsubs
and
pop
imul
lds
je
clc
pop
jecxz
mov
jg
je
xchg
mov
xchg
xlat
jbe
jp
stc
stos
int3
cwtl
arpl
sub
lock
negl
dec
sub
scas
or
pop
lock
xchg
mov
fwait
ja
mov
fstpt
dec
adc
and
leave
xor
jnp
sti
or
pop
pushf
push
lcall
cwtl
das
mov
dec
inc
xchg
xchg
pusha
mov
mov
hlt
mov
pop
mov
sbb
or
test
or
cltd
xchg
push
or
xor
fnsave
fsubs
pop
mov
dec
es
add
jp
imulb
das
sahf
and
aaa
rcrl
and
xor
xlat
int
and
inc
negb
cmp
xchg
popf
pop
daa
jg
or
adc
xchg
in
jecxz
fildl
mov
cs
inc
test
dec
xchg
dec
in
or
insl
and
add
mov
filds
jp
mov
leave
jo
mov
add
arpl
je
and
cmp
pop
les
push
addr16
fisubrl
movl
popa
pop
addr16
cwtl
das
repz
push
xchg
mov
lods
jb
pop
lea
xchg
mov
sub
bound
insl
clc
rcrl
xchg
xchg
aam
cld
icebp
xor
sub
xor
fwait
shrl
mov
pop
scas
inc
cmp
inc
fadds
loop
push
jg
jl
push
jo
jg
inc
fcoms
pop
fbld
cwtl
xor
fiaddl
shrl
fimull
daa
rcll
mov
inc
xchg
sub
les
in
shrl
jae
mov
out
inc
xchg
sub
in
push
out
sbb
imul
das
sub
icebp
dec
mov
dec
rcr
add
cvtpi2ps
lods
loope
leave
and
loope
mov
daa
jecxz
sbb
pop
adc
mov
jo
mov
add
and
rorl
mov
sbb
add
jp
cmpsl
sub
sahf
dec
test
rolb
std
je
adc
xchg
adc
xchg
sbb
stos
cmpsl
arpl
cli
pop
leave
push
int3
lahf
push
ror
lahf
xor
mov
aas
push
cld
pushf
test
dec
or
jae
xchg
fisubrl
ret
outsl
fadd
mov
add
sub
test
or
cmp
mov
or
dec
notl
mov
sahf
mov
xlat
sti
cmp
adc
out
cltd
dec
jge
mov
ds
out
sub
sub
insl
xlat
in
leave
mov
loopne
pop
pop
mov
shr
and
fldcw
sahf
sub
xchg
jo
repnz
pushf
push
call
inc
vphaddbw
insb
in
mov
or
aam
sar
jl
out
jnp
shlb
mov
pop
jo
and
xor
jg
add
or
adc
or
or
lahf
jb
out
jb
test
shlb
lods
adc
test
mov
je
adc
add
pop
push
xchg
pop
fbstp
pop
cmpsl
fistl
fnstenv
sbb
sbb
sub
xchg
add
sar
jo
lahf
push
and
loope
ds
cltd
push
push
mov
xchg
add
sbb
sbb
cs
cmp
imul
rol
into
adc
cmpsb
xor
aas
push
es
sub
mov
lds
and
xchg
lock
sbb
loop
je
lcall
mov
mov
ja
lret
push
cmp
movsl
icebp
aam
out
push
push
dec
xchg
adc
or
int
je
pop
into
xchg
int
popf
push
imul
in
xchg
or
inc
sbb
adc
bound
mov
jne
andb
outsb
mov
sub
fcmove
test
popa
and
mov
ds
adc
pop
mov
in
jbe
sarl
mov
mov
or
bnd
and
repnz
lret
and
leave
mov
or
outsb
or
mov
popa
jns
les
lret
shlb
cmp
test
mov
cmp
enter
adc
lcall
sub
xchg
sbb
xor
mov
dec
cs
subb
sbb
xchg
sarl
add
in
mov
inc
callw
test
fcmovnu
lock
push
xchg
adcl
stos
jne
ja
xchg
mov
inc
call
inc
mov
sub
and
push
push
dec
aaa
test
jne
subb
rorl
arpl
jo
mov
test
push
fldz
popf
or
and
mov
mov
in
or
inc
andl
pusha
mov
push
mov
cmp
test
cli
les
cmpsb
push
xchg
or
pop
lret
data16
daa
out
add
scas
mov
rolb
cmpsl
pop
mov
outsl
or
pop
push
or
cmp
and
fsubrs
in
pop
mov
nop
xchg
sub
dec
adc
int
sub
push
pop
repnz
adc
and
cmp
outsb
push
in
loope
outsb
aas
xchg
push
inc
sbb
xchg
jecxz
push
inc
pop
idivl
ljmp
adc
push
xlat
addr16
mov
sub
subl
mov
xchg
mov
in
push
leave
in
sub
dec
dec
jns
xor
jp
es
cmp
jno
sub
push
mov
push
sub
rorl
cltd
lret
xchg
lock
notb
adc
cs
mov
testl
mov
lods
sub
fistpl
fisttpl
xchg
cmpsl
cs
fwait
dec
aad
ja
les
sbb
jmp
mov
pop
xor
icebp
push
lods
out
mov
mov
test
mov
movsb
loop
fwait
push
xchg
jl
mov
cmpsb
daa
dec
push
cwtl
andb
xor
je
shrl
cmc
cmp
subb
scas
lods
insl
outsb
adc
enter
nop
mov
mov
push
imul
ss
loope
or
fisubs
popl
movsb
jbe
push
mov
push
js
inc
xchg
mov
mov
sub
in
pop
stc
dec
dec
out
mov
outsl
cmc
cmp
and
inc
xchg
pmaddwd
sbb
jae
aad
sbb
pop
or
mov
dec
inc
in
fistpll
adc
call
jecxz,pn
sub
cmc
xor
call
cli
adc
aad
push
adc
or
sbb
xlat
test
aam
push
fsubrs
mov
ja
rcrl
cmpsb
adcl
mov
ss
jge
outsb
cmp
and
xor
aam
fnstsw
movsb
dec
push
dec
xor
pop
jno
push
out
inc
jbe
cmp
in
cld
add
lea
and
lcall
ss
xor
push
insb
add
dec
push
aas
psraw
popa
leave
nop
push
mov
mov
mov
lea
sbb
sbb
aam
mov
aad
mov
popa
mov
cs
subb
arpl
and
dec
and
in
stos
in
inc
int3
test
hlt
movsb
out
xchg
adc
xchg
cmpxchg
mov
pop
mov
and
popf
and
sbbl
nop
push
repnz
aam
addr16
inc
lea
inc
dec
das
push
bound
mov
aam
loopne
push
lods
add
xor
iret
jbe
adcb
ja
imulb
inc
inc
jecxz
push
js
mov
jp
fisttps
test
fisttpll
and
push
or
ljmp
cmp
add
adc
push
dec
je
divb
fcomi
or
adc
filds
sti
jae
xor
shll
xchg
jo
push
pop
mov
push
pop
or
dec
cmp
fsubrs
dec
fisubrl
addb
jge
add
or
and
test
imul
cwtl
mov
inc
mov
mov
ret
sbb
and
pop
or
and
add
xchg
addl
mov
adc
aam
mov
dec
cmp
sub
cmp
aaa
mov
fsubrp
inc
out
mov
dec
popa
adc
nop
addr16
xchg
jae
xchg
in
jmp
cmp
in
ljmp
shll
mov
mov
pop
hlt
insb
cmpsb
ficoms
iret
push
jnp
lock
das
xchg
sbb
xor
jl
xchg
aas
mov
out
or
outsb
add
ret
insb
mov
sahf
sbb
daa
dec
or
incl
cmc
ret
scas
notl
sahf
adc
inc
lret
adc
or
hlt
std
xchg
out
inc
gs
mov
jl
push
ds
cmp
out
insl
dec
insl
mov
mov
mov
jbe
sbb
xchg
jmp
cmc
divl
sbb
adc
mov
push
xor
call
incl
lods
mov
sbb
push
sub
ret
dec
push
and
cmpsl
insb
test
and
sub
mov
int
sbb
mov
xchg
in
jp
andb
imul
addr16
and
stos
or
mov
cmp
hlt
pop
mov
push
mov
ret
push
addl
xor
xchg
rclb
jl
fldcw
push
mov
or
int
out
out
sub
out
cmp
outsl
sub
je
lock
mov
sub
sub
jge
adc
ss
fidivs
dec
adc
cmpsl
cmp
mov
xchg
filds
lret
xchg
mov
mov
pushw
add
mov
jp
in
jmp
xchg
sbb
push
mov
jl
cli
push
xchg
loope
fs
mov
jb
xor
in
mov
mov
mov
dec
sahf
fnstenv
mov
inc
inc
or
daa
popa
imul
push
insl
jbe
scas
inc
adc
dec
pop
xchg
mov
adc
stos
xchg
cltd
movsl
and
mov
shrb
inc
sub
in
sbb
cmc
mov
mov
leave
fldt
lods
ss
push
enter
mov
pusha
jmp
mov
or
cs
sub
push
sbb
xor
push
in
jp
inc
in
stos
xchg
jnp
fwait
lods
mov
mov
and
sbb
xchg
mov
movsl
cltd
test
insb
adc
lahf
ss
test
and
ss
call
dec
mov
mov
xlat
cmp
nop
rcll
testl
ja
inc
stos
mov
mov
cwtl
xor
sbb
mov
es
das
fnsave
xor
divl
jp
bound
push
xor
xchg
nop
hlt
scas
sbb
sbb
mov
jg
and
mov
lods
andw
pop
push
push
fcomp
and
cli
xor
movsl
push
insb
pop
xchg
jno
roll
movsb
fucomip
bndstx
stos
fsubrp
in
movsb
test
or
mov
adc
lods
xchg
in
adcb
mov
shll
mov
inc
mov
xor
outsb
adc
jp
sub
fnstcw
sti
dec
loopne
adc
or
ljmp
jl
mov
loopne
movsl
cmp
add
jl
nopl
or
jge
mov
pop
dec
mov
or
xlat
cmpsb
sub
xlat
clc
jp
jl
rolb
cmp
pop
outsb
lretw
ret
push
pop
daa
jecxz
jno
cmpsb
loop
jae
lock
fadds
fnstcw
xchg
daa
adc
inc
mov
sarl
sahf
inc
lock
inc
push
pusha
cs
ljmp
jmp
xchg
test
movsb
mov
pop
mov
out
lret
sub
adc
movsb
lds
mov
scas
or
in
pop
push
sbb
push
movsb
in
mov
adcb
clc
sub
mov
xchg
xor
incb
aaa
jbe
push
call
sub
sub
daa
dec
dec
cmp
dec
adc
pop
mov
dec
aad
xchg
notb
icebp
js
lods
xchg
cld
stos
jbe
pop
jbe
int
jbe
hlt
cmpsl
inc
push
push
andb
xchg
lock
test
enter
add
repnz
mov
and
sbb
add
repnz
in
pop
cmp
stc
nop
push
insl
rcrl
std
mov
push
inc
movsl
test
lods
push
adc
jb,pt
jmp
popf
mov
fwait
lahf
ss
adcl
inc
movb
pop
cmc
jl
dec
add
jns
sti
add
inc
out
int3
sbb
or
mov
call
and
mov
adc
pop
divl
lret
std
setae
xor
push
jae
gs
cli
cmp
ds
sbb
or
lea
and
mov
mov
and
clc
inc
adc
stos
testl
or
and
nop
jo
clc
shrb
inc
bound
sub
xchg
sub
pop
out
ds
loop
sbb
xchg
mov
jns
test
pop
imul
xchg
xchg
mov
insb
xor
sbb
mov
adc
ror
addr16
sub
mov
mov
arpl
dec
aad
jge
subl
daa
sti
test
clc
stos
push
iret
mov
mov
cmp
std
or
clc
mov
fildll
xchg
sbb
or
dec
add
push
xor
fistpl
push
sub
pop
inc
push
xchg
pop
mov
shl
mov
sbb
mov
out
scas
cmp
pop
loopne
pop
jbe
lret
arpl
sub
shr
adc
xchg
out
jns
mov
cmp
pop
add
xlat
or
iret
lods
push
mov
push
out
cltd
push
mov
in
rolb
arpl
repz
add
out
or
cmp
and
mov
mov
adc
aas
cmpsb
loope
pop
testl
pop
cmpsb
xorb
jmp
push
cld
xchg
inc
in
pop
cmc
mov
notb
je
hlt
roll
inc
dec
fcompl
call
jmp
call
cmc
in
xchg
lods
jae
jl
in
pop
aad
push
pushf
bound
arpl
imul
inc
stos
jge
addr16
sbb
movsl
push
dec
les
subb
cmc
in
fmul
lret
mov
or
dec
sbb
mov
xor
mov
mov
jg
aas
lea
xchg
lcall
sbb
pop
outsb
pop
push
popa
int
mov
int
push
test
or
add
aam
pop
or
cmp
jo
sbb
out
mov
ja
and
cwtl
shll
sti
es
mov
pop
mov
fbld
rclb
hlt
lahf
mov
js
lahf
and
xchg
xor
pushf
cmpsb
cmp
aad
repnz
fstl
dec
loope
dec
mov
jecxz
stc
ret
pop
stc
jo
mov
cmp
shll
in
jl
test
jle
jle
out
xchg
daa
jl
xchg
or
inc
or
xchg
fwait
aam
and
test
sbb
inc
fsubs
mov
sub
dec
fcomip
jno
pop
icebp
dec
xchg
xchg
xor
sar
popl
cmp
fsubs
dec
dec
das
mov
int3
jecxz
js
or
leave
push
test
dec
mov
push
int3
mov
inc
es
data16
mov
xchg
popf
stos
ret
push
out
mov
in
push
rcl
mov
add
sarb
cmp
int3
pop
pop
jo
je
push
in
mov
fisubrs
and
cwtl
jbe
sarb
push
imul
rclb
mov
clc
pop
cmc
sub
and
popa
jl
lret
idivb
aad
outsl
insb
adc
out
pop
mov
iret
cwtl
mov
repnz
adc
cmp
inc
jb
ja
repz
test
dec
xor
pop
push
sbb
lods
adc
cmp
popa
jno
mov
xchg
cmp
inc
loop
cmc
ljmp
pop
in
pop
std
sbb
adc
addr16
xor
fs
ret
rorb
insb
sbb
pushf
int
push
addr16
inc
add
push
or
clc
and
inc
sti
ds
sbb
push
mov
push
xor
daa
repnz
push
inc
hlt
sbb
mov
daa
imul
mov
pushf
push
leave
lcall
mov
sub
mov
xor
rol
jb
arpl
daa
jle
pop
mov
mov
int
stos
add
jp
xor
enter
lcall
loopne
pop
adc
mulb
and
xor
xor
jmp
cmp
or
add
mov
jne
out
jecxz
or
hlt
mov
or
mov
sbb
outsb
sub
push
repz
pop
push
imul
mov
cwtl
andb
xor
add
lock
fbstp
pushl
xor
in
add
sub
mov
in
sbb
pop
filds
xchg
je
lcall
xchg
adc
insl
add
adc
fwait
xor
in
mov
add
cmp
push
testb
iret
inc
pop
and
stc
sbb
outsb
xor
push
pop
pushf
mov
mov
flds
adc
out
jge,pn
stos
lds
int3
out
out
jbe
cmp
rcr
mov
push
je
inc
es
repz
test
cwtl
xchg
jnp
loop
dec
sarb
into
xor
adc
pushf
xchg
pop
pop
sarb
popf
lods
sub
jno
test
sti
and
add
in
fists
and
lea
xor
in
ret
mov
add
dec
movsb
pop
cmp
mov
pop
push
aad
mov
in
enter
or
out
sub
outsb
mov
movb
outsl
mov
pop
andb
dec
arpl
or
xor
jmp
imul
mov
xchg
mov
arpl
js
xor
loop
pop
adcb
call
xor
push
dec
jns
cltd
inc
mov
pop
xchg
add
lods
sub
fstl
dec
mov
pusha
ja
push
out
shl
jle
pop
jbe
xchg
mov
adc
rorl
dec
movsl
sbb
dec
pop
sub
inc
push
outsl
mov
cmpsl
ret
subl
in
ret
imul
icebp
roll
outsb
adc
in
and
test
fldenv
xchg
sbb
movsl
cmp
mov
es
cmovbe
fiadds
push
mov
rcr
pop
mov
cli
add
push
sti
stos
mov
fisttpll
xchg
cld
sbb
and
push
mov
dec
mov
fcmove
add
stos
mov
push
sti
fwait
in
popf
pop
xchg
ret
js
add
stos
inc
sahf
push
sbb
adc
jg
xchg
cwtl
das
mov
pop
mov
scas
out
mov
mov
iret
mov
popa
jne
clc
xchg
mov
jg
inc
push
inc
adc
out
cli
add
pop
insl
pop
inc
fcoml
subb
or
pop
ljmp
movsb
pop
in
fiaddl
int
jne
mov
fsubrs
cmp
lods
aaa
daa
mov
ret
fstpl
mov
bnd
pusha
scas
sub
and
or
cli
pushl
lods
add
aas
mov
mov
mov
cld
gs
or
iret
pop
ja
shrb
in
test
cmp
fwait
and
pop
jge
mov
fs
jle
xor
sub
aas
iret
pop
lds
xchg
insb
sarl
jg
dec
inc
mov
push
mov
roll
sbb
mov
nop
sub
jge
mov
fstps
jae
xchg
mov
and
xlat
xlat
or
sbb
iret
stos
jne
bound
out
frstor
jle
or
lds
call
fxch
and
inc
pop
sbb
push
jb
cs
pop
pop
loop
daa
int
test
js
or
pusha
adcb
mov
and
mov
dec
aad
cmc
repz
xlat
cmpsl
repnz
push
pop
mov
xor
push
dec
sahf
push
cmc
mov
mov
test
cmp
mov
in
aad
lahf
ja
sbb
jge
inc
mov
nop
insl
mov
hlt
pop
mov
fstps
in
sbb
out
cld
jb
or
scas
jp
mov
adc
cmp
std
fisubrl
movzbl
jnp
icebp
and
cmp
mov
fistpl
mov
mov
pushf
xor
and
lock
repz
cld
outsl
xor
mov
sub
sub
xchg
dec
adc
jge
out
hlt
mov
inc
pushf
xchg
fildl
push
cmp
pop
dec
pop
out
rorb
sahf
out
xchg
sub
push
mov
data16
and
pop
fdivl
xor
testl
jno
scas
mov
fildll
push
popf
push
in
or
mov
mov
pop
mov
adc
loope
insl
adc
jbe
adc
lcall
cld
add
test
xor
add
push
ljmp
mov
ss
push
mov
jg
fsubrs
lods
inc
pop
int
lahf
addr16
lret
or
scas
xchg
in
es
dec
daa
ret
mov
push
jo
lea
or
mov
iret
mov
lret
idiv
ret
sbb
mov
cld
jns
xchg
stos
sbb
fdivp
pop
mov
dec
cld
jae
and
pop
scas
daa
push
fmulp
xchg
push
out
and
int
js
mov
xchg
dec
adc
cmp
adc
cmpb
inc
enter
outsb
movsl
push
inc
cmpsb
or
or
jp
and
or
arpl
mov
mov
ffreep
push
push
int
sarl
xor
mov
movsl
ret
pop
xlat
mov
sub
clc
and
pop
xor
cli
aas
mov
jmp
shrl
sbb
add
push
and
sbb
rorb
jne
add
cs
pushf
jl
xchg
adc
cwtl
arpl
movsl
addr16
insl
pop
in
subl
lds
movsl
testb
lahf
stos
lods
inc
pop
jnp
shll
aad
or
shl
out
jge
or
lds
or
mov
testl
dec
cmp
lea
inc
icebp
fmulp
arpl
dec
mov
and
xchg
jg
add
adc
cmp
push
xor
rcr
mov
mov
jge
jae
mov
test
shrl
daa
mov
fbstp
push
shrb
jns
inc
icebp
das
in
inc
sbb
leave
in
add
mov
insl
rclb
in
scas
add
test
xor
inc
add
fsubr
dec
sub
inc
jecxz
and
pop
xchg
in
addl
pop
das
femms
mov
icebp
outsl
arpl
enter
inc
std
cltd
out
and
fldenv
push
jecxz
dec
xlat
mov
xchg
jae
lods
imul
daa
jmp
test
mov
scas
inc
pop
rol
xor
xchg
int
outsb
aas
push
ret
pop
pop
mov
push
sarl
repz
sbb
in
fildl
nop
subl
xchg
cwtl
sbb
leave
mov
pusha
and
aad
sbbb
jge
jno
xor
pop
imul
loop
sbb
mov
xchg
jbe
pop
mov
add
xor
mov
testb
fsubrl
sarl
std
mov
mov
pextrw
jp
insb
adc
sbb
sub
push
movsb
popa
lods
sbbb
sbb
mov
jg
pop
test
cld
lods
cmc
pop
pop
idivl
ja
jp
pop
mov
mov
psrlq
push
push
fwait
cmp
cwtl
mov
bound
jecxz
push
sbb
sbb
dec
dec
xchg
mov
enter
scas
add
test
in
jns
xchg
iret
push
dec
xchg
add
mov
mov
pushl
jecxz
mov
push
xor
ret
adc
push
mov
iret
xor
jmp
mov
shll
push
and
cld
test
push
inc
rcrl
xchg
xchg
loopne
mov
mov
xor
paddsb
fcmovb
fdivl
xor
std
int3
dec
inc
mov
in
sarb
fldcw
push
clc
push
cmpsb
and
lcall
sbb
popf
idivl
cmova
call
test
mov
popf
int3
gs
inc
in
test
orb
fdivr
enter
loop
cmp
sub
mov
mov
movsb
jns
inc
std
test
sti
xchg
and
mov
jge
lahf
imul
lds
out
xor
mov
sbbl
xchg
stos
mov
popa
clc
push
loopne
dec
sub
lds
push
aam
and
sbb
sub
aaa
xchg
sub
fidivl
dec
aas
dec
mov
stos
fs
inc
aam
mov
inc
ficoms
cmp
cmc
add
inc
mov
push
ljmp
jno
lahf
hlt
pop
dec
and
add
scas
fdivl
jno
sub
pop
das
inc
mov
lock
not
les
mov
fnsave
fistps
cli
pushf
pop
fisttps
in
orl
ficoml
mov
imul
sbbb
pavgb
xor
or
imul
pusha
fwait
and
dec
mov
cld
jecxz
pop
ljmp
sub
cltd
or
stos
jnp
sbbb
mov
pop
fstps
stc
mov
or
sub
int
in
inc
outsb
mov
and
jp
cmp
xor
xchg
jge
movb
negl
mov
cmp
mov
addr16
sbb
cs
movsb
and
sbbl
or
mov
mov
lret
aas
je
cmp
mov
inc
mov
add
inc
cmpl
scas
insl
pop
repz
orl
and
scas
push
inc
inc
sub
mov
push
imull
pop
hlt
jl
add
mov
dec
lods
or
xchg
cmp
xchg
addr16
fisttpl
std
out
inc
insl
adc
sub
lds
push
mov
mov
jo
addr16
cltd
sbb
loope
mov
lret
mov
aad
fsts
push
inc
leave
mov
shr
sbb
push
movd
sub
jo
jg
rcl
or
push
enter
mov
jns
jg
sub
add
add
in
mov
lret
push
cmp
es
movsl
cmp
iret
sub
repnz
mov
fldcw
loope
jo
or
sahf
pop
icebp
iret
daa
inc
into
pop
push
clc
mov
ljmp
sub
out
repnz
mov
or
mov
cmpsl
data16
dec
std
aam
loope
sub
inc
cmp
icebp
lret
popa
xor
mov
movb
push
je
pop
mov
es
inc
jecxz
jle
xor
sbb
loop
into
push
addr16
ficoms
dec
fbld
repz
mov
rolb
ljmp
xchg
dec
xor
lcall
in
out
sbbl
sbb
mov
mov
inc
nop
sub
push
lcall
movsb
loopne
call
mov
add
sbb
into
pop
xor
and
pop
mov
data16
push
cmp
add
jae
xor
inc
push
ss
cmp
xchg
data16
inc
jne
je
arpl
in
cmp
rorb
mov
jl
sub
mov
pop
push
mov
lret
dec
leave
rol
fldt
inc
sarb
scas
pop
test
xlat
xchg
insl
jge
cmpsl
and
add
sti
xchg
rol
inc
and
push
push
scas
add
mov
jne
movsl
insb
xlat
mov
jae
shl
lods
pop
sbb
or
stos
std
and
push
mov
sbb
xor
lret
push
nop
sub
jl
cmp
xchg
clc
add
loopne
lret
mov
push
icebp
mov
in
xor
pop
fidivrs
stos
add
repnz
sbb
inc
xlat
jecxz
mov
inc
mull
aad
mov
ljmp
imul
ret
repz
mov
push
cmpsb
movsl
mov
mov
out
pop
jbe
adc
mov
inc
push
jne
jb
repz
test
std
jmp
sub
lret
mov
sti
movsl
stos
sbbl
testb
xchg
sub
insl
stc
pop
scas
xor
pop
add
cmp
mov
add
icebp
ss
and
add
sub
and
adc
ss
cmpsb
or
mov
insb
cli
pop
push
push
nop
sub
add
xchg
inc
testb
cmp
aad
shlb
rcrl
mov
push
sub
adc
hlt
sbb
stos
mov
push
pushf
push
adc
adc
imul
rcr
adc
mov
hlt
jecxz
jbe
mov
ljmp
dec
or
in
jne
pop
sti
cwtl
jne
inc
shrb
rclb
xchg
imul
arpl
inc
in
pop
cmc
in
mov
inc
sub
outsl
pop
push
sti
jg
cmpsb
shlb
xchg
fdivs
rolb
js
ss
xchg
decl
jmp
cmp
lahf
dec
data16
add
out
or
sbb
test
dec
fisttpll
cmp
fwait
in
repnz
cltd
imul
jp
or
dec
sub
rclb
leave
push
loop
shll
push
mov
cwtl
push
out
movsb
and
fs
cmc
or
xchg
jmp
xor
xor
shr
jbe
stos
jbe
les
int
insb
cmp
xor
shll
and
jecxz
popa
mov
xor
ja
or
jnp
push
lods
sub
testb
push
add
adc
mov
xchg
xor
pop
scas
add
xor
sti
std
xchg
mov
scas
out
pop
loopne
aam
lods
xchg
mov
mov
iret
xchg
jo
or
mov
std
cmp
fdivrs
sti
cmp
jae
faddl
data16
cltd
test
pushl
fisubrs
jns
dec
ds
mov
push
aaa
enter
int3
jmp
adc
es
popa
adc
int3
xchg
pushf
jno
add
jns
cli
pushf
mov
out
and
ljmp
scas
fidivrl
pop
movsl
cli
cmp
push
stos
cmp
aaa
movsb
mov
lcall
stos
je
mov
dec
fucom
pop
pop
dec
mov
fstpt
daa
mov
sub
jnp
mov
and
xor
inc
pop
in
xchg
dec
push
push
cmp
stos
cmp
mov
sbb
shrb
lret
push
push
int3
dec
dec
outsl
cli
push
xchg
daa
iret
or
rorb
outsb
push
andl
iret
or
rorb
jbe
mov
pop
dec
add
mov
in
out
faddl
pushf
and
rorb
shrb
cmp
or
into
pop
insl
stos
pop
cmp
lods
mov
scas
outsb
movsl
push
lahf
mov
mov
xchg
rorb
jne
out
xor
push
mov
cs
mov
daa
lret
sub
insb
pop
sub
or
cmpl
loopne
mov
dec
pop
and
or
dec
inc
mov
aas
push
or
arpl
jae
add
and
das
mov
lock
cmpsb
jns
popa
adc
cmp
fildll
mov
in
and
scas
mov
insb
orl
xchg
jb
fbld
scas
call
out
push
pop
push
and
outsl
out
ret
push
jmp
add
push
je
xchg
lea
imul
sub
jbe
jp
inc
filds
add
xchg
sub
call
lret
stos
inc
fisttpll
push
div
inc
loop
jbe
stc
mov
and
jg
xlat
mov
pop
into
adc
cmp
pop
rorb
mov
cmp
mov
fxch
dec
aaa
jo
data16
std
pop
push
clc
push
nop
cmp
enter
mov
push
jo
push
lahf
jecxz
lods
lods
inc
adc
add
adc
jo
lock
lods
jl
xchg
cmp
fbstp
mov
test
fisttpl
aad
xor
and
push
jmp
mov
push
pop
popf
or
and
cld
xchg
loopne
dec
into
jbe
sbb
jno
out
push
mov
xchg
mov
test
sbb
mov
push
flds
addr16
out
ret
and
pusha
xor
jmp
outsl
in
test
add
das
sarl
lds
rcrb
out
dec
gs
jge
and
enter
bound
fwait
mov
fs
sub
pop
nop
jmp
into
mov
add
hlt
jg
cmp
cmp
or
ret
imul
push
ljmp
jno
leave
insb
sbb
lods
mov
xchg
hlt
mov
sub
pop
sub
and
and
xchg
icebp
xor
or
aaa
mov
in
add
jge
mov
dec
bt
addl
ds
inc
fstps
out
pop
jo
inc
sahf
clc
out
pop
fs
sub
adc
cmpsl
cmp
loope
push
jo
push
scas
aad
into
mov
lds
setg
or
cmc
mov
cmp
je
mov
jmp
cmp
shll
loopne
pusha
jns
push
shlb
mov
lret
push
xor
sti
ds
push
mov
ret
xchg
int3
dec
loopne
fwait
scas
inc
or
add
sbb
and
sbbb
icebp
not
imul
inc
fsts
and
sub
pop
popf
mov
or
nop
data16
add
and
test
mov
cmpsb
xchg
cltd
xor
ja
mulb
sub
andl
hlt
xor
out
gs
mov
test
or
sbb
jno
mov
ds
out
mov
sbb
test
popf
sub
adc
ss
sbb
mov
jo
lods
xchg
mov
add
dec
sbb
mov
and
in
sub
xchg
popf
aaa
fnsave
jae
cld
outsb
pusha
negl
insl
add
aam
scas
lea
lahf
inc
adc
test
popf
xchg
sub
dec
or
into
int
mov
aam
push
mov
jle
xor
dec
fwait
out
lock
loop
loop
jecxz
mov
in
or
bound
jmp
scas
jb
push
orl
dec
leave
push
jg
mov
xchg
clc
xchg
rcl
lods
ffree
xor
pop
and
addr16
or
mov
fistpll
xchg
test
adc
ret
dec
insl
xor
or
mov
jae
mov
xchg
sbb
inc
mov
adc
loopne
add
push
mov
in
iret
add
and
sarb
add
xchg
out
test
movsb
addr16
add
sbb
xlat
push
ja
and
sbb
test
das
loope
and
or
mov
shr
ja
pop
add
push
adc
pusha
xchg
mov
cmp
fisttpll
add
inc
pusha
push
mov
push
or
orl
dec
add
push
jge
lcall
scas
addr16
adc
sbb
cltd
test
push
or
mov
rcrl
cmc
add
repnz
and
outsb
or
imul
fsubr
arpl
repnz
jmp
xor
std
incl
sar
or
add
gs
je
dec
imul
test
rorb
or
jne
cmpsb
sbb
xor
cmpsb
cld
into
adc
test
dec
cltd
lock
adc
addb
in
or
adc
xchg
mov
pop
imul
xchg
imul
dec
aad
or
and
imul
aaa
xor
in
push
jae
push
andl
data16
lcall
dec
cmove
cmpsl
jne
push
jb
pop
das
jnp
stos
scas
call
dec
das
sahf
mov
outsb
push
out
jb
sbb
adc
xor
scas
lods
gs
lock
popa
xor
or
lea
ret
enter
cmpb
mov
scas
mov
adc
clc
inc
sub
push
and
loop
sub
push
repnz
mov
jp
xchg
js
bound
fadds
dec
add
mov
push
push
fcoms
jle
stos
xchg
and
outsb
neg
inc
fdivrs
stos
sub
xor
bound
push
test
les
inc
int3
ret
hlt
movsb
cmp
and
mov
add
push
lahf
repz
mov
movsb
fs
xlat
xor
sarb
mull
xor
std
add
jecxz
or
mov
push
pop
pusha
dec
dec
rcr
insb
sub
mov
and
xor
push
add
addl
and
mov
repnz
int
js
fldenv
mov
sbb
test
shlb
loop
cmpsb
adc
pop
pop
mov
mov
inc
jbe
dec
mov
das
add
iret
adc
mov
dec
daa
rorl
fdiv
fucomp
and
test
lods
xchg
movsb
jbe
loop
inc
dec
pusha
lods
sbb
sbb
dec
pop
jb
sub
xchg
imul
test
mov
push
cmp
enter
xor
add
jg
xchg
pushl
push
xchg
lds
dec
dec
mov
mov
popf
mov
pusha
sub
arpl
ret
fdivr
xchg
loope
stos
jle
inc
sub
lods
out
aam
and
jle
sub
int
xchg
and
cmp
adc
and
inc
lods
inc
inc
or
arpl
sub
repnz
rorb
dec
xchg
inc
stos
jecxz
loopne
movsl
icebp
push
popa
mov
inc
pop
ds
pop
lret
stos
mov
bound
stos
sarl
xor
fisubrs
lahf
mov
pop
and
lcall
test
mov
xor
or
or
mov
inc
sbb
es
xchg
or
aaa
pop
push
add
mov
pusha
push
push
mov
sar
push
lea
fdivrl
mov
push
add
loopne
dec
stos
dec
stos
aas
in
addr16
mov
inc
jne
dec
mov
xchg
dec
popa
sahf
mov
pop
jmp
and
fchs
negl
adc
adc
hlt
add
jae
mov
ljmp
mov
scas
inc
adc
pop
jo
int
cwtd
mov
cltd
push
out
mov
xchg
cs
loop
imul
sbb
shl
sub
cmpsb
call
es
lds
push
jmp
stos
fdivrs
decl
scas
test
shrb
jg
fs
pop
cmp
cmp
pop
pop
out
xor
mov
inc
orl
adc
in
je
andb
loop
sbb
pop
fmulp
orl
mulb
inc
lds
mull
add
in
mov
cmpsb
jns
stos
inc
sbb
mov
lds
scas
xchg
mov
pop
or
loope
loopne
movsl
mov
sbb
movsb
pusha
xor
daa
lret
out
xorb
mov
push
test
ljmp
mov
pop
jb
scas
sub
in
jp
adc
negl
xchg
sbb
fmull
std
cmp
push
int
repz
xchg
cltd
test
dec
call
pop
lcall
mov
sbb
testl
xchg
dec
lods
sbb
xchg
dec
int
sbb
fsubl
les
rcr
adc
cli
dec
scas
and
stos
cld
adc
lret
repnz
mov
mov
push
pop
imul
fldl
adc
adc
mov
xor
hlt
popa
ljmp
sahf
inc
test
and
loopne
loopne
push
push
inc
int
cmc
lods
push
push
ljmp
xor
mov
adc
xor
out
xlat
repz
orl
sbb
fdivl
xor
test
movl
xchg
push
jl
arpl
sbb
inc
ret
imul
push
push
loop
inc
push
cmp
xlat
lret
add
mov
stos
pop
lock
jl
ljmp
inc
fstpl
xor
test
lods
mov
cmpl
sub
mov
es
das
dec
or
imul
in
imull
sarb
push
aaa
push
aad
jg
sbb
mov
aad
mov
sbb
nop
bndstx
push
gs
je
dec
pop
and
adc
xor
adc
ljmp
sbb
jge
or
mov
xchg
ljmp
lea
dec
adc
pop
add
xor
push
stc
xchg
sub
lret
fcmovbe
fs
int
dec
daa
sub
sbbl
leave
scas
lock
mov
ficomps
shrb
fisubs
dec
insl
or
sti
or
lock
loope
inc
shrl
add
js
mov
test
or
mov
jno
cmp
inc
xchg
lret
xlat
ret
fs
int
mov
cwtl
jecxz
add
aam
inc
lods
push
mov
mov
jnp
mov
xchg
sbb
cmc
mov
dec
es
mov
push
mov
or
cmp
dec
test
and
cmp
divb
lahf
loope
xchg
subb
xchg
mov
jne
sbb
pushf
mov
cmp
fs
cwtl
push
call
mov
enter
xlat
xchg
xor
mov
sub
mov
jae
mov
shrb
icebp
xor
in
insb
fcomip
mov
hlt
mov
dec
add
test
push
shlb
jne
test
mov
test
ds
loopne
push
xchg
xor
cmp
les
lret
hlt
addr16
pop
jns
dec
cmp
loope
cmp
pushf
ljmp
mov
sbb
pop
mov
adcb
fisubrl
pop
cltd
cmp
mov
cmpsl
insl
adc
pop
lea
stos
dec
fstl
test
iret
aad
mov
in
movsb
mov
je
pusha
xchg
dec
scas
test
or
mov
loop
mov
test
in
and
ret
dec
inc
cmp
adc
cmpsb
ja
pusha
daa
mov
push
cmpsl
out
and
hlt
das
inc
sub
push
adc
lods
sarl
clc
jne
adc
dec
xchg
xchg
or
inc
ljmp
popf
sbb
enter
or
dec
xlat
or
out
lock
std
fnstenv
in
xchg
popa
fdivrl
adc
add
dec
or
fcmovne
fdivrl
lret
cmpb
mov
mov
pop
stos
mov
and
pop
mov
xor
and
mov
pop
mov
insl
rol
jno
bound
stos
dec
fsubr
cwtl
add
sub
xchg
leave
fwait
add
cmp
test
or
xor
fsubrp
jbe
xchg
call
cmpsb
cmpsl
je
cmpsl
inc
adc
mov
mov
pop
add
lcall
mov
mov
or
movsb
cmc
ds
jge
mov
mov
test
je
pop
mov
cld
xor
mov
jb
mov
lock
rcl
cltd
push
xlat
mov
insl
and
out
imul
ja
imul
filds
xor
and
xlat
inc
add
add
shrl
and
lcall
fs
sub
pop
scas
push
mov
int3
es
fsubrp
xchg
inc
adc
sbb
data16
lea
ja
ljmp
adc
fcmovne
jbe
subl
iret
mov
add
sub
sbb
test
jns
xor
inc
xchg
es
push
push
fs
xchg
mov
add
cmp
cmpsl
lret
push
adc
mov
dec
movsl
cmp
ja
mov
movsl
cmp
shlb
xor
movsl
ficoml
xchg
and
xor
test
pop
sub
lret
pusha
push
cmc
mov
imul
loopne
sub
fidivrs
je
jo
sub
and
cltd
dec
cbtw
push
or
push
mov
mov
je
ret
in
aas
add
iret
mov
push
push
cltd
adc
mov
repz
inc
pop
fsubrs
mov
in
clc
pop
add
mov
jmp
push
jp
cmc
insb
sub
jmp
dec
mov
and
imul
and
mov
cld
adc
adc
xor
push
out
into
insl
cmp
jp
ljmp
sarl
lds
mov
jb
test
sbb
shl
ret
ret
cmp
inc
ljmp
pop
mov
scas
add
scas
inc
mov
sbb
aaa
push
aam
sbb
pop
cmp
sbb
push
pushf
shlb
shrl
leave
jge
jae
sub
and
lcall
stc
es
out
or
jae
push
dec
xor
lods
jb
repz
and
jns
mov
xor
fwait
xchg
push
mov
shr
push
add
mov
subb
adc
sbb
movsb
cmp
pop
pop
scas
add
push
xor
aam
subl
dec
std
jo
adc
lcall
stc
and
shll
js
gs
subl
ds
push
pop
jle
mov
mov
decl
enter
mov
mov
sub
mov
or
int3
add
xor
xchg
push
je
jo
into
lahf
add
aad
inc
bound
jo
es
insb
mov
push
int
arpl
loop
add
mov
loop
inc
movsl
incb
subl
imul
adc
rcl
push
mov
xchg
test
aam
cmp
arpl
add
xor
outsl
adc
inc
shrb
or
stc
sbb
ja
jmp
mov
pop
pop
sub
jae
pushf
cmp
jae
icebp
mov
dec
xchg
bound
or
cmpsl
mov
dec
call
cmp
inc
and
xchg
sub
push
sub
jne
or
sbb
push
fdiv
outsl
cmp
pusha
pop
test
push
inc
loop
arpl
pop
loopne
mov
and
push
lret
clc
sbb
incb
fwait
jmp
dec
xor
pop
fwait
ret
fisubrl
pop
nop
mov
rol
add
or
lea
mov
pop
sub
mov
stos
adcl
fwait
xor
jns
inc
pusha
rolb
dec
out
xchg
pop
push
shl
jl
gs
jnp,pn
ja
std
nop
xchg
je
cld
iret
sbb
adc
sbb
movsb
push
xor
mov
inc
sub
shl
add
pusha
das
xlat
pop
sahf
enter
pop
pop
push
or
jns
inc
xor
frstor
int
adc
inc
and
mov
ss
mov
mov
push
stos
and
pop
xchg
xor
mov
aad
sub
stos
lds
lea
repz
popf
sti
adc
paddusw
dec
loope
imul
mov
call
fcoms
dec
repz
or
ljmp
push
add
pop
inc
or
lcall
fs
push
das
pop
rol
push
ret
mov
add
push
outsl
repnz
jg
jl
imul
inc
ds
cmpsb
jecxz
lcall
push
mov
fsubl
ret
adc
mov
data16
xchg
das
push
push
cmp
xor
sti
lea
sub
iret
out
aas
out
adc
jp
lret
mov
int3
mov
data16
cwtl
and
sub
or
fs
repnz
ret
mov
cwtl
lods
pop
jl
xor
jo
and
in
std
movsb
outsl
cwtl
stos
stos
jl
pop
scas
or
call
mov
add
test
lret
mov
shrb
and
inc
add
mov
sbb
mov
mov
addb
sub
imul
shlb
imul
scas
push
fistpl
jns
aam
mov
mov
sti
xor
fsts
fbld
fdiv
sti
mov
lods
imul
out
xchg
xchg
mov
and
lock
aaa
or
xor
repnz
jecxz
cwtl
jne
push
lods
notb
das
dec
negl
mov
adc
and
cmp
pusha
call
mov
in
pop
cmc
add
movsb
xor
dec
ret
push
call
cmp
hlt
lret
inc
pop
push
test
cmp
sub
out
add
pop
je
push
dec
loopne
in
shl
sbb
addr16
adc
push
inc
int3
fdivs
xlat
pop
sahf
add
xchg
fdivrl
pop
popf
inc
repz
aad
push
add
pop
sub
test
shl
push
gs
push
sbb
push
stc
xchg
notl
insb
js
loope
adc
or
iret
or
cltd
xchg
lods
mov
mov
xor
nop
cmp
dec
inc
bound
cmp
dec
stos
cwtl
sarb
push
leave
fildl
lods
nop
add
dec
bound
psrad
mov
dec
gs
outsl
or
pop
movsb
sbb
jne
in
or
sbb
jge
cmp
dec
stc
inc
shl
pop
adc
mov
jae
test
clc
and
in
andl
les
ja
lods
mov
shll
or
loopne
fnsave
and
fcmovnb
sub
xchg
mov
and
mov
into
xor
ret
jns
inc
fwait
into
jecxz
dec
xor
insb
lds
jbe
movsb
mov
rclb
icebp
es
dec
gs
mov
adc
subl
sbbl
push
popf
call
dec
popf
mov
negb
aaa
mov
nop
dec
push
pop
mov
and
push
jo
or
and
push
inc
mov
xor
iret
jne
mov
cmp
adc
jbe
cmpl
cmpxchg
push
in
sbb
leave
mov
dec
mov
pop
cmp
xchg
mov
insb
inc
jbe
mov
js
enterw
into
cltd
mov
bound
adc
pop
das
push
fists
lea
bound
add
fildll
inc
sub
dec
int
dec
mov
sbb
lods
jg
cld
dec
loope
pusha
loop
sbb
imul
pop
push
mov
leave
inc
cmp
rcrl
pop
mov
mov
sub
xchg
ja
fucomp
popa
fstpt
cld
test
inc
mov
xchg
dec
scas
incl
mov
cmp
rcrl
cwtl
popa
push
mov
push
jp
add
sub
push
lcall
add
fucom
or
sbb
cmp
lods
adc
sahf
negl
cwtl
pusha
out
xor
adc
cmp
push
cli
pushf
sbb
push
jno
push
jne
push
pop
loopne,pt
ja
je
dec
aaa
sub
fcomip
push
jg
and
das
xor
push
das
test
fdivl
out
stc
adc
push
mov
xor
daa
out
in
shl
push
jae
sub
pushf
arpl
or
sbb
mov
jmp
or
fwait
cltd
je
cwtl
xchg
or
aaa
adc
lds
insl
sub
aaa
push
fisubs
pop
ljmp
cmc
mov
jge
jp
shlb
jl
jg
or
aaa
sti
aas
in
add
jae
repz
gs
push
std
clc
mov
dec
dec
aas
leave
movsl
inc
shl
cmp
lret
add
cli
cwtl
jno
fidivrl
icebp
or
scas
push
sbb
or
pop
ljmp
push
lods
insl
sahf
inc
xor
int3
pushl
and
fidivrs
test
out
mov
ret
push
inc
dec
push
repnz
inc
push
pop
adc
movsb
fmull
clc
jl
push
pop
xchg
mov
pop
out
in
fisttpl
pop
repnz
loopne
es
or
aaa
push
cmpsb
stos
sub
faddl
nop
mov
fimuls
or
push
mov
lcall
clc
cld
dec
push
dec
cmpsl
cmp
sub
insl
sahf
push
jne
jg
aas
rcl
mov
dec
mov
ficompl
add
aas
shll
pusha
notl
orl
lahf
sub
mov
xor
std
jg
push
add
and
mov
xor
insb
push
scas
pop
fwait
ret
and
fsincos
pushf
daa
or
mov
jle
fcompl
pop
cmp
int
cmpsl
xchg
add
cs
testl
and
movsl
dec
les
cld
in
cmpsl
sub
fisttpl
push
push
mov
dec
jne
adcl
adc
outsl
cwtl
mov
adc
aaa
dec
cmc
sti
pusha
outsl
les
je
mov
xchg
movl
arpl
sar
sbb
rol
push
dec
icebp
nop
push
sub
ja
mov
jp
inc
mov
jno
inc
inc
push
jg
into
and
add
ret
xor
bound
or
movsb
push
mov
push
adc
ret
fnstsw
push
inc
dec
and
add
fildl
iret
jno
jmp
hlt
outsb
cmpsb
lock
cmp
xchg
xor
xor
inc
mov
jnp
popf
push
lret
sub
aaa
fsubr
xchg
and
aas
pusha
sarb
mov
inc
push
sub
loopne
je
xor
dec
add
lods
sbbl
add
and
out
insl
cmpsb
sti
aaa
sub
test
fidivrs
sbb
subb
cmp
loope
xchg
sti
push
cmp
insl
jecxz
pop
sbb
pop
test
xchg
sub
mov
mov
pop
hlt
xchg
jge
or
mov
and
shlb
movsl
fdivrs
imul
pushf
mov
cmp
and
push
or
cmp
pop
sarl
push
js
cmc
ds
mov
pushf
xor
shll
pop
lret
lds
adc
jge
ja
sbb
mov
lods
inc
loop
inc
pushf
popa
sti
push
mov
imull
inc
loopne
cli
int
aaa
push
cmpsb
cmp
pushl
test
lock
clc
testb
or
cmp
fwait
jg
leave
sahf
dec
cmc
xchg
loop
adc
in
xor
loopne
cmp
push
std
sbb
shll
sti
mov
hlt
mov
cld
dec
scas
xchg
jg
clc
enter
mov
mov
xor
sti
mov
cmp
adc
sahf
and
cwtl
lock
pop
inc
lret
mov
popf
sbb
push
or
adc
roll
scas
cvtdq2ps
dec
or
aas
sbb
mov
leave
std
nop
out
pop
dec
icebp
and
xchg
add
cltd
and
lret
or
ja
js
fmull
push
mov
fimuls
cmp
mov
test
xchg
sahf
or
jl
mov
push
shrl
negb
mov
jns
out
lds
xchg
adc
xchg
jecxz
ja
psubsw
test
icebp
jo
jecxz
and
sti
inc
or
clc
enter
leave
addr16
mov
xchg
sub
mov
jecxz
xor
jb
js
into
xor
inc
mov
lea
ret
pop
adc
jo
pop
fimuls
push
shrl
add
xor
mov
popa
cmp
push
sahf
lcall
push
das
mov
mov
mov
mov
and
popf
mov
cmp
jp
rcll
lret
and
push
in
mov
cltd
push
adcb
xchg
enter
in
add
xchg
add
cli
rclb
inc
in
rcr
pop
pop
cmp
iret
pop
es
pop
inc
int3
xchg
xor
fdivrl
icebp
push
xor
mov
mov
bound
xor
push
gs
mov
shrb
insb
mov
into
or
sbb
cmpsl
mov
aas
cmp
imul
shl
mov
push
xchg
add
jmp
add
sbb
xchg
mov
pop
jl
cmp
in
xchg
sti
rcr
mov
xchg
cmp
arpl
xor
adc
or
mov
mov
pop
jo
jecxz
repnz
push
and
mov
dec
push
inc
in
cmp
scas
addl
jmp
inc
inc
sbb
xor
rol
jnp
pusha
loope
ret
data16
jp
mov
add
in
jo
push
add
mov
mov
test
mov
push
sub
lock
fldenv
mulb
or
call
sub
aad
inc
pop
lods
dec
or
shll
out
mov
mov
cmp
shrl
add
mov
xchg
sbb
lret
fidivl
daa
lcall
cmp
aad
fs
mov
xchg
fs
xor
mov
in
lret
xchg
inc
or
ret
cmc
out
xchg
pusha
sbb
shll
mov
mov
ds
jmp
loop
xchg
imul
mov
jp
sbb
xchg
sbb
call
inc
push
popf
stc
fisubrs
fisttpl
test
push
jmp
sub
mov
aad
or
das
bound
adc
push
sbb
int3
mov
mov
pop
jo
mov
sub
cs
aaa
lcall
mov
test
xchg
and
fiaddl
call
stos
mov
xchg
add
jne
cs
fs
jg
xor
fsubs
test
mov
cmpsb
int
clc
cltd
and
mov
add
lods
in
shrl
xchg
sarb
add
pop
shlb
les
add
sub
repnz
jg
dec
mov
cmp
fsts
pop
pusha
orb
not
xchg
loope
enter
daa
push
and
sub
xor
sbb
in
jb
cmc
jl
pop
ret
pop
mov
enter
dec
mov
sub
daa
arpl
js
xchg
sub
ss
lock
into
movsl
decl
adc
cmpsb
add
jns
fmull
cli
dec
cmp
es
test
dec
sbb
push
and
and
cld
xchg
fistl
sub
cmp
je
lock
jne
ret
mov
js
lods
xchg
sahf
dec
mov
popf
das
or
cmp
xor
int3
push
mov
mov
push
movsb
les
inc
push
in
pop
pop
repz
mov
sbb
leave
jp
je
insl
clc
pop
and
push
mov
push
sbbb
xlat
mov
xchg
pop
aas
dec
stos
dec
mov
nop
dec
mov
mov
insb
add
fwait
or
sbb
int
add
ret
mov
inc
or
clc
sub
sbb
inc
inc
adc
js
inc
dec
or
xchg
push
into
test
loopne
push
push
inc
mov
popa
push
adc
xchg
mov
ss
mov
mov
push
ja
inc
outsl
mov
sub
fwait
xor
pop
and
test
sbb
insl
jne
jp
mov
adc
enter
fdiv
xor
jne
add
xor
jo
push
das
iret
outsb
add
aas
mov
movsl
xchg
pop
mov
lret
int
sub
fwait
movsl
mov
mov
push
sbb
iret
in
dec
adc
lds
or
es
call
divb
xor
cmp
mov
ret
loope
mov
outsb
add
push
in
ja
ss
shlb
pusha
mov
or
jmp
or
sub
fyl2xp1
inc
inc
movsb
lods
dec
pop
shrl
inc
insb
dec
lcall
pop
push
pushf
dec
arpl
pop
jno
xor
jle
in
inc
add
or
mov
mov
cli
loope
mov
push
sti
rolb
push
mov
sbb
xchg
test
mov
nop
sub
loop
div
push
js
ss
cli
sahf
sbb
repnz
shl
cmp
xchg
sti
sub
sarb
adc
add
decb
and
nop
jecxz
inc
sbb
cmp
repz
stos
insl
clc
ja
cmpsb
dec
ss
mov
pop
jno
outsl
cltd
stos
je
cmp
mov
int
pop
and
lret
xchg
clc
lds
loope
je
jecxz
inc
push
inc
mov
jbe
inc
mov
fildl
gs
iret
add
iret
sbb
jle
inc
pushf
push
cmpb
insl
into
push
jnp
cmpsb
jl
pop
enter
es
sti
xchg
or
dec
nop
call
xor
lods
xchg
jg
adc
dec
imul
push
faddl
subl
xor
leave
loop
push
scas
mov
fiaddl
push
cli
xchg
clc
mov
popa
or
adc
loopne
dec
idivb
jl
stos
inc
pop
jge
test
popf
mov
push
cld
push
cmp
aam
sub
fdivrl
ds
xor
push
std
sbb
inc
and
add
xor
scas
sub
cmpsb
or
or
inc
int
xchg
xor
leave
clc
xchg
cmp
mov
mov
pop
pop
loopne
and
jns
or
or
repz
loopne
negl
jns
jno
insb
jle
shrl
mov
sbb
popa
filds
mov
lret
in
inc
sbb
push
adc
pop
lods
lret
stc
mov
jecxz
iret
or
push
mov
popa
lahf
call
inc
xchg
xchg
sub
add
daa
inc
pop
mov
cli
lods
mov
hlt
xchg
inc
into
fwait
or
jno
icebp
pusha
mov
scas
cmp
icebp
jno
cmc
je
mov
stc
enter
and
xchg
cwtl
inc
cmp
xor
pop
dec
lods
daa
notl
mov
jg
adc
fs
sub
insl
idivl
lods
subb
sbb
inc
lahf
test
sbb
movsb
rcrb
inc
dec
ljmp
std
inc
push
data16
adc
xchg
push
mov
fs
xchg
mov
ljmp
pusha
stc
js
aaa
mov
jae
mov
or
cmpsb
jge
xor
sub
add
movsb
cmp
mov
adc
sti
mov
test
movsb
aas
adc
lcall
push
sub
xchg
sbb
xchg
sbb
testl
nop
push
add
inc
inc
out
rep
iret
out
movsl
cli
xchg
mov
pushf
out
jne
aas
lret
xchg
aaa
push
bound
aas
test
mov
add
mov
fidivl
aaa
sub
dec
pop
xchg
mov
cmpsb
fucomi
fimull
sahf
lods
daa
xchg
xchg
push
dec
movsb
jmp
push
mov
test
je
add
ja
lea
les
jne
push
sbb
test
insb
stos
cmp
cltd
lahf
stos
jbe
adc
jnp
add
pop
or
and
hlt
stos
call
rcrb
adc
cs
ds
sbb
add
gs
sbb
ret
sbb
dec
loopne
loopne
mov
sar
sub
stos
sub
jmp
jmp
xor
test
cmp
ja
inc
or
mov
nop
mov
inc
imulb
adc
add
push
mov
lahf
xchg
or
cmpsb
lods
add
aam
add
out
mov
push
sub
xchg
std
pop
leave
push
mov
arpl
jae
pushf
mov
xor
push
popf
iret
xor
aad
push
jmp
inc
enter
call
js
cwtl
sbb
jecxz
aas
bound
hlt
aas
mov
pop
call
mov
aaa
rclb
or
jne
sub
sti
lods
push
or
pop
adc
and
xor
adc
pusha
fs
sub
jae
jns
push
mov
les
cli
inc
lret
bound
or
lret
inc
ss
sbb
mov
mov
jb
sbb
and
inc
fnstenv
pusha
mov
enter
xchg
fs
nop
jne
xlat
cmp
fisubs
inc
dec
repz
mov
cmp
sub
popf
fnsave
mov
jmp
xor
out
xchg
data16
es
pop
cld
mov
xchg
pop
mov
jmp
cmp
mov
jl
fs
pop
int
sbb
xor
repnz
cmc
idivl
push
and
test
adc
jo
adc
andb
fdiv
inc
mov
xchg
mov
push
or
xchg
xchg
jg
ja
and
add
push
or
or
mov
popa
test
or
repz
jge
gs
cs
mov
aad
cli
nop
cmp
iret
inc
frstor
dec
and
jmp
jae
mov
xchg
adc
rolb
fsubrp
or
inc
jns
gs
pop
pop
ss
sub
push
or
iret
stc
sub
lret
xchg
jns
movsl
insb
jmp
stc
nop
dec
fdivl
insl
pop
xor
test
pop
xor
xchg
adc
pop
jnp
xor
mov
lret
jp
int
aaa
cld
jge
push
sti
jmp
clc
or
shrl
jp
push
fstpl
add
inc
xor
xchg
dec
rcr
mov
push
leave
push
sti
add
xlat
cmp
dec
pop
fistpl
pop
jle
xchg
cs
outsl
cmp
adc
mov
mov
mov
xchg
push
jle
mov
pushf
inc
add
inc
push
cltd
jl
lahf
in
cmp
push
push
fdiv
mov
and
out
test
ja
or
iret
cmp
add
jbe
insb
xor
aad
mov
mov
ljmp
push
nop
mov
int3
mov
push
push
xchg
ja
out
mov
mov
lret
outsb
jecxz
push
jbe
cmp
test
ja
mov
pop
adcl
mov
stos
jp
fildll
sbb
xor
ja
in
inc
inc
out
dec
adcl
addr16
sbb
shll
setbe
enter
or
sbb
sbb
or
or
or
mov
xchg
adc
pop
sbb
addl
ja
call
jbe
or
dec
lcall
imul
ljmp
mov
jge
inc
jg
mov
or
or
arpl
daa
xor
rol
pop
add
inc
mov
dec
ds
cmp
scas
clc
push
lcall
cmpsb
pop
pusha
call
mov
cmp
inc
pop
push
outsb
popa
mov
cli
jge
mov
enter
mov
int3
jns
or
mov
mov
lret
in
xor
es
fsubl
xor
fnstenv
test
inc
rcrl
xor
pop
repz
add
jbe
add
push
call
ficoms
and
jae
sbb
jge
lock
xor
or
rcll
mov
insl
addr16
cmpsb
rclb
sbb
lock
dec
xchg
mov
jmp
pop
in
das
mov
clc
cs
incl
sub
pop
mov
or
in
hlt
dec
test
sub
sub
sub
shlb
push
push
add
push
sub
or
addr16
lods
cmp
in
jns
xchg
jne
out
rorb
dec
sbb
out
test
jne
sub
rcll
add
lret
int3
mov
addr16
cs
mov
adc
pop
xchg
data16
into
fwait
or
add
int3
sub
push
ror
push
jg
add
ds
in
push
push
das
mov
fbstp
lods
inc
fdivl
scas
fwait
sub
mov
cs
push
js
jp
rcrb
inc
jp
lods
inc
pop
jbe
fnsave
jp
call
jne
and
inc
test
dec
cmp
ret
pop
inc
lret
sbb
jbe
aad
dec
mov
mov
lahf
popa
sbb
pop
sub
jo
mov
out
sar
ss
push
dec
add
mov
cmp
mov
pop
cmp
or
lds
test
popl
fcompl
ja
xor
adc
mov
fcomps
je
imul
jno
sub
cwtl
mov
aad
stos
out
adc
arpl
add
adc
clc
jmp
mov
push
repnz
add
xor
sub
sub
jnp
orb
mov
mov
mov
lahf
dec
mov
rol
lret
fnsave
xchg
popf
push
xchg
lcall
je
lea
xchg
xchg
add
xlat
imul
jl
xchg
add
lds
ljmp
repz
mov
push
push
and
outsb
lahf
mov
cmp
xchg
aaa
inc
dec
fdivrs
rcll
xchg
les
fcoml
shrl
push
insb
or
push
pop
xor
mov
ret
cmp
mov
ss
adc
push
sub
xchg
and
sub
aam
mulb
push
pop
data16
mov
cmpsl
dec
sub
inc
mov
stos
cmpsb
cmp
cmpsl
add
iret
xor
cli
fsubrs
adc
fwait
mov
mov
jecxz
or
outsl
out
sub
xchg
lods
repnz
cltd
test
fimuls
les
ss
aaa
sbb
nop
inc
out
aas
aad
or
retw
jns
in
jmp
add
jl
mov
mov
inc
add
push
pusha
cmp
inc
cmp
les
negb
lret
in
pop
and
xchg
repz
in
incb
clc
cmp
pop
aaa
and
sbb
outsl
stos
aaa
into
fcoml
jl
cmp
movsl
hlt
adc
les
or
ficomps
icebp
adc
jg
fs
mov
in
testl
dec
imulb
inc
xchg
notb
enter
flds
imul
dec
push
sbb
daa
push
push
adc
sub
cs
imul
sbb
xchg
jno
xchg
xor
adc
pop
jge
fldt
fidivs
mov
push
add
pop
out
rorb
adc
mov
test
adc
pop
cmc
pop
xor
add
mov
fistpl
xor
in
orb
sbb
jg
sub
jnp
roll
pop
fisubl
or
add
adc
movsl
adc
cmpsb
inc
jno
je
outsb
js
and
sub
dec
dec
loopne
fwait
outsb
fisubl
ds
imul
jmp
push
das
out
std
sar
xchg
das
hlt
test
lds
leave
negl
push
call
subl
rcl
mov
and
subb
ljmp
xchg
mov
pushf
sbb
push
lds
lea
add
push
xchg
jp
mov
pop
add
ja
sub
xchg
sbb
dec
dec
rorb
adc
push
lea
xchg
xor
and
pop
dec
sub
jmp
pop
xor
les
push
lret
aam
out
in
mull
inc
test
lds
inc
leave
xchg
test
sub
cmpsb
mov
jno
ja
cld
test
mov
lret
cmp
aam
push
aas
test
repnz
mov
shr
insb
or
or
push
dec
pushf
lret
out
test
pop
push
mov
addr16
hlt
push
sub
lods
popf
mov
push
xlat
stos
push
shll
scas
ss
xor
push
outsl
in
xor
ret
adc
mov
mov
push
shrb
int3
inc
fcomip
movsl
xorb
jns
sti
lods
jns
and
xlat
repz
push
push
inc
data16
repz
negb
stos
mov
jb
sbbl
jge
mov
and
enter
xchg
jle
sbb
loope
cmp
mov
adcl
cmp
subl
sbb
aad
fdiv
xor
out
xchg
sbb
xchg
pop
cmp
movsb
mov
sub
dec
mov
xlat
out
xlat
and
lock
xor
mov
lods
mov
and
aad
mov
je
push
push
mov
pop
testb
mov
les
movsl
push
sahf
cwtl
mov
jae
ret
movsb
mov
mov
outsb
add
and
adc
stos
clc
movsb
xor
xor
dec
orb
test
call
dec
pop
cwtl
or
loope
mov
gs
insl
add
pop
sub
mov
jne
test
mov
pop
inc
data16
add
sub
push
jnp
mov
sbb
pop
jg
in
mov
dec
loopne
push
adc
inc
mov
push
lret
out
pop
xchg
cmp
flds
in
sub
aam
cld
loope
pop
pop
mov
push
push
jnp
inc
xor
insl
push
sbb
pop
xchg
mov
je
or
cltd
cmp
pop
adc
in
mull
movsb
cmp
mov
fiaddl
test
adc
ja
sub
or
pop
xchg
and
loop
adc
cmp
loop
sar
inc
hlt
add
ja
in
jns
movsb
out
loope
xchg
mov
push
aad
test
cmovge
add
xor
aam
inc
cwtl
ja
and
jmp
dec
pop
imul
fsubs
sahf
jns
inc
mov
inc
je
mov
push
or
into
cmp
into
movsl
sahf
xor
clc
cmp
imul
or
push
fisttps
xchg
jne
cmpsl
jae
adc
cld
arpl
addr16
test
jno
dec
jge
xor
jle
mov
addl
mov
dec
lea
inc
or
scas
out
roll
adc
ss
jecxz
int3
mov
sub
xchg
mov
jns
lods
call
pop
add
out
mov
xchg
sub
ljmp
clc
iret
in
mov
mulb
fwait
sti
outsl
orl
movsb
and
sbb
cmp
push
pop
add
cmp
test
ljmp
add
cld
fcmovb
sub
cmpb
stos
inc
adc
adc
mov
scas
pop
add
hlt
mov
dec
mov
lods
lds
jb,pn
iret
jl
rorl
inc
ss
fs
das
in
mov
adc
shlb
insb
xchg
sub
in
and
pop
aaa
addr16
or
and
pop
jle
adc
repz
fcomip
inc
pop
hlt
fisubl
mov
inc
mov
inc
rcll
call
sub
clc
push
cmpsb
sub
sbb
jbe
sbb
cmp
sti
mov
out
test
push
mov
mov
add
mov
xor
xchg
lret
test
xchg
sub
pop
mov
xchg
imul
sub
adc
loope
lcall
push
mov
popl
jnp
test
lods
adc
jnp
aad
jge
mov
mov
push
lock
jle
dec
mov
jp
sub
repz
or
mov
pop
push
sahf
push
sub
cmpsl
push
xlat
adc
ret
pop
dec
xor
fidivs
fs
fisubs
push
dec
lock
hlt
mov
xlat
add
push
inc
sbb
and
imul
in
gs
in
lahf
push
outsl
adc
adc
push
mov
dec
lret
or
gs
pop
fisttps
sub
fsts
lret
push
mov
add
pop
cmp
dec
push
outsb
mov
aam
mov
movb
xchg
mov
stos
out
imul
les
pop
jb
mov
jnp
adcl
out
inc
outsl
jb
mov
add
and
xor
ljmp
add
orps
or
mov
or
lret
mov
stc
xchg
sub
dec
dec
push
std
cmp
stos
call
push
push
stc
adc
lret
mov
popf
fdivl
or
jne
pushf
cli
mov
adc
push
jno
lds
sbb
cmpb
dec
arpl
out
test
pop
outsl
mov
loopne
mov
push
jmp
repnz
orb
scas
pop
add
inc
sbb
inc
inc
mov
addr16
sbb
outsl
in
and
std
cmovg
lea
dec
add
inc
mov
loop
jmp
or
movsb
imul
mov
cli
cmpsl
negl
fchs
dec
ds
sbb
and
adc
roll
out
inc
into
bound
cmp
in
fs
out
inc
sbb
clc
inc
aad
or
dec
pop
jmp
int3
lret
push
movsl
xchg
xchg
mov
sbb
daa
xchg
cs
add
shll
add
dec
push
adc
or
cmp
jmp
aas
push
les
jns
cmp
mov
insl
jb
dec
push
andb
enter
cli
mov
std
sbb
insb
push
mov
in
daa
addb
xorb
jnp
aad
jae
cmpb
or
mov
mov
dec
pop
or
test
sub
pop
add
xchg
fldt
cmc
mov
mov
into
jge
cmp
lods
ljmp
pushf
cmc
sub
dec
js
dec
bound
mov
push
jg
push
subl
inc
push
mov
pop
lret
jb
xor
jns
inc
fwait
cmpsl
je
add
cmpb
dec
bound
adcl
push
fwait
mov
xor
mov
add
divb
sti
add
dec
cmpsb
mov
lret
cli
stc
pop
lds
and
jp
fistl
xor
loope
dec
in
inc
loope
loopne
hlt
push
and
adcb
push
mov
xchg
pop
in
cld
psrad
loopne
in
and
xchg
mov
fadds
mov
das
loope
adc
test
adc
arpl
xchg
ret
dec
sub
pop
outsb
xchg
push
imul
jp
shrb
xchg
test
in
loopne
push
cld
mov
dec
xor
mov
xchg
addl
pop
dec
fdivrp
push
inc
xor
gs
or
dec
mov
sbb
jp
scas
stos
stc
pop
in
adc
ja
push
mov
mov
les
push
sahf
fwait
stc
pop
jecxz
mov
lret
sub
jno
rcrb
xchg
adc
push
jne
mov
in
sbb
mov
push
dec
popa
dec
loop,pt
push
jnp
mov
mov
popf
xor
sahf
imul
popf
inc
inc
pop
divb
adc
and
jno
mov
sti
push
and
stc
adc
lret
out
aam
push
ror
getsec
push
xor
push
rcrl
pusha
add
mov
xchg
rcr
and
cmp
or
loop
mov
xchg
pop
movsb
jmp
sbb
dec
inc
xchg
mov
aad
sub
aad
sub
mov
daa
lret
test
adc
int
clc
daa
fstcw
iret
or
lahf
lods
jno
sub
cmp
push
mov
pushf
mov
sbb
std
cmpsb
outsb
sarl
push
outsl
xor
sbb
push
xchg
mov
add
fwait
xchg
cmp
mov
insl
and
test
loop
test
dec
jp
gs
jne
jmp
add
insl
pop
addb
daa
mov
pop
std
or
es
lods
push
jb
gs
inc
outsl
add
in
loopne
pop
adc
mov
xor
test
mov
scas
in
mov
addr16
xlat
outsb
out
dec
in
add
imul
aam
inc
repz
movsb
les
aam
outsb
inc
scas
bound
lret
push
mov
or
jmp
iret
jno
movntps
mov
mov
mov
aam
xchg
mov
push
out
mov
repz
mov
add
out
inc
push
sub
mov
ret
add
das
inc
sbb
adc
subb
jp
ret
cmp
push
lcall
sahf
and
cmp
adc
ljmp
dec
aad
insb
pop
fs
mov
subb
dec
aam
inc
cmp
loop
push
movsl
jns
xchg
dec
in
push
ret
mov
loop
push
test
int3
xor
popa
enter
inc
lds
fnsave
maxps
out
mov
fldenv
inc
add
push
pop
loope
pop
or
and
out
mov
adc
add
ffree
inc
xchg
sub
int3
orl
pop
xlat
sub
cmp
daa
lcall
xchg
mov
push
mov
pop
cmp
push
add
test
push
inc
jae
mov
pusha
inc
jecxz
lret
int
and
sbb
push
push
inc
cmp
jns
repz
adc
in
sub
sahf
stos
clc
mov
cmp
and
jo
dec
pop
andb
scas
aam
pushf
xor
adc
inc
repz
push
and
insl
iret
add
icebp
mov
shrb
sti
sti
inc
shrb
adc
lds
push
push
loope
push
out
ds
sbb
jns
daa
dec
andl
lea
sahf
daa
inc
lods
cmpsb
adc
cld
sbb
lahf
pop
and
pop
mov
in
sbbl
jae
jns
xchg
insl
pop
and
loope
repz
push
dec
imulb
lods
jmp
nop
cmp
cmp
fwait
mov
and
cld
subl
mov
xor
call
sub
in
orl
testb
cmp
notl
ds
xchg
xor
pusha
clc
push
sti
mov
mov
jno
out
sti
jecxz
cmpsl
out
mov
arpl
adc
les
cmp
imul
add
and
sub
mov
adc
cmpsb
shl
jnp
inc
fnsave
mov
xchg
ljmp
sbb
mov
clc
mov
sar
mov
xchg
inc
inc
test
dec
xlat
cmc
nop
push
fsubs
divb
adc
daa
xchg
lahf
in
sahf
cmc
bsr
push
stos
data16
pushf
xchg
mov
adc
int3
mov
push
and
aad
std
inc
mov
not
addl
cmpsb
cmpl
dec
daa
adc
mov
addr16
imul
mov
imul
rcrb
and
adc
mov
data16
cmp
cmp
cmp
jns
hlt
mov
das
and
int3
in
mov
data16
cwtl
push
dec
push
push
lock
lret
inc
add
pop
mov
mov
xor
call
out
cld
repz
pop
cmp
sbb
mov
fistpl
sbb
push
sub
inc
orb
mov
imul
test
ret
jecxz
jecxz
and
imull
pop
sub
addr16
pop
arpl
popa
out
mov
sub
jae
mov
pop
cld
fists
stos
fcompl
fnstenv
sub
ret
cld
clc
jno
insb
ret
mov
pusha
xchg
add
daa
fldt
lds
dec
add
jne
out
adc
rclb
cmpl
or
mov
pop
mov
sub
lret
scas
xorb
aam
mov
push
out
dec
in
out
test
loopne
lods
ljmp
mov
mov
js
movsb
repnz
push
lahf
das
call
es
sub
out
push
inc
adcb
cltd
mov
and
in
test
fdivrs
out
push
push
call
aam
outsl
or
daa
imul
lea
test
jbe
clc
lds
imul
test
lds
mov
jns
xor
loope
rcrb
sub
jg
lret
fidivs
fbld
outsl
add
fstpt
sahf
jae
mov
cmpsb
fmuls
stos
fucomp
xchg
mov
out
test
imul
lods
sarl
pop
pop
mov
sub
sub
dec
pop
mov
jno
jns
xor
or
orb
adc
repz
dec
lods
push
jno
cmp
mov
mov
mov
fmuls
scas
pop
neg
cmp
adc
push
popf
push
iret
into
pop
jae
mov
inc
dec
inc
cmc
lahf
sub
imul
imul
outsl
imul
fisttps
cli
inc
jg
cmpsb
sbb
sbb
insl
inc
dec
jle
shl
loopnew
dec
add
mov
and
mov
filds
inc
nop
sbb
xchg
xchg
mov
dec
pop
aad
sbb
xchg
dec
idivl
ljmp
rolb
sub
add
cmp
add
and
cwtl
stos
pop
sbbl
pusha
pop
or
int3
mov
push
inc
dec
dec
or
insl
adc
cmp
cmpsl
and
xchg
push
enter
jb
lret
xchg
addr16
push
lret
xchg
and
fdivs
fs
or
test
inc
mov
es
xor
inc
jno
sub
pusha
pop
stc
sub
jns
jle
push
icebp
out
mov
inc
mov
push
mov
mov
out
inc
dec
push
adc
sti
pop
sbb
cld
jp
push
cmp
jge
rcll
xchg
pop
sbb
fwait
addr16
mov
jle
sbb
pop
clc
pop
ret
fnsave
repz
es
repz
jmp
ds
push
leave
clc
xchg
cmove
jbe
sbb
into
scas
movsb
arpl
jo
jg
fsubrp
cmp
cmc
mov
jb
outsl
daa
lods
push
push
out
sbb
cwtl
add
xchg
and
pusha
dec
test
aas
jb
jb
rcll
pop
outsb
push
add
mov
cmpsb
loope
sbbl
add
sub
movsb
push
in
in
cmp
jbe
lret
sbb
stos
jle
sahf
scas
lret
mov
test
cmpb
pop
pop
fistl
stos
push
dec
testb
sub
and
mov
addr16
lcall
push
push
mov
dec
add
mov
adc
in
jbe
or
sub
push
std
pop
movsb
outsl
add
pusha
mov
or
mov
push
test
or
dec
fdivl
mov
sbb
pop
mov
mov
sbb
dec
xchg
jb
scas
movsb
divb
shlb
test
xchg
push
ret
push
les
orl
sar
pmaxsw
xor
dec
add
adc
mov
fsubrs
push
pusha
cmpb
pop
push
es
lcall
cmp
mov
orb
cmpsb
mov
sub
mov
xchg
cmpsl
insl
jge
mov
fisubs
mov
mov
fdivrl
inc
fs
lret
xchg
pusha
sbb
enter
les
inc
or
loopne
xchg
adc
cmp
push
adc
jnp
cmp
test
ret
sahf
push
mov
test
pusha
lcall
xor
js
ja
fsubrl
pmaxub
push
cmp
hlt
rol
cmp
enter
xlat
repz
push
nop
pop
pop
rolb
pop
lock
xchg
adc
xor
jp
cwtl
ljmp
pop
xchg
in
sti
fwait
inc
loop
mov
mov
mov
dec
push
movsl
lock
jg
xchg
xchg
andb
stos
mov
push
loopne
stos
ficompl
lea
movsb
sbb
mov
or
adc
mov
sub
int3
fistpll
stos
inc
fdivrl
or
xchg
sbb
inc
es
pusha
mov
mov
adc
loop
clc
sub
leave
loope
mov
lods
inc
xor
inc
vandnpd
test
rorl
je
xchg
test
adc
mov
ret
pop
rcr
or
fisttpll
dec
minps
or
cmp
pop
insb
adc
jae
fidivs
push
in
gs
mov
sbb
test
cmc
cmp
imull
xchg
jl
sti
or
mov
xor
rcll
mov
fldl
clc
adc
pushf
sbb
int3
xchg
jb
inc
inc
mov
inc
fs
daa
xchg
pop
inc
inc
cmp
jle
push
cmp
mov
pop
ja
call
loopne
je
push
movsb
mov
leave
xchg
sti
es
cmpsb
xor
loopne
popa
push
lock
call
scas
insl
mov
dec
stos
push
aaa
mov
and
or
outsl
push
pusha
int
mov
or
xchg
push
cmp
mov
push
xor
pop
enter
add
cmpl
pop
xorl
loop
xor
sbb
push
jp
mov
lods
das
xor
jbe
cmp
je
lret
sub
fldt
clc
out
cld
stc
lds
cmp
sbbl
or
ja
aaa
mov
andb
cmpsl
hlt
mov
push
add
popf
mov
or
push
repz
pop
add
jmp
mov
rorl
scas
pop
bsf
or
rcl
or
nop
or
add
in
gs
inc
mov
xchg
sub
in
cmp
dec
pop
imul
pop
insl
push
movsl
adc
jb
cmc
movsb
mul
sub
dec
test
aad
outsb
pop
movl
stos
out
jecxz
mov
repz
mov
hlt
xchg
std
xchg
arpl
iret
sbb
scas
mov
mov
test
mov
stos
lds
test
or
lock
push
cmpsb
xor
sbb
push
loop
popa
out
mov
or
dec
xchg
adc
test
mov
aad
mov
movsl
xor
leave
es
cmc
hlt
dec
inc
fdivrl
fldcw
aam
add
rep
testl
jmp
xorl
and
test
roll
movsl
lods
xor
arpl
jne
xor
lods
push
daa
push
cli
sbb
sub
mov
dec
scas
shlb
cli
stos
xchg
and
hlt
inc
js
les
cmpps
dec
sti
ja
pop
lods
push
dec
pop
adc
mov
jecxz
int
sbb
dec
jp,pn
psrlq
and
sbb
mov
push
outsl
mov
xor
xchg
inc
jle
pop
ds
es
push
push
sbb
popa
nop
std
adc
push
mov
stc
push
rorl
test
jnp
mov
movsl
sbb
xchg
mov
into
fstpl
jmp
stos
cmp
shlb
sti
pop
mul
or
insb
cmp
sbb
mov
fwait
test
or
push
lds
pop
insl
imul
pop
in
mov
pop
inc
loopne
das
lcall
or
sub
mov
int3
mov
in
add
mov
jo
ret
adc
ret
cmp
addl
dec
or
test
sarl
inc
imul
push
fistpll
repz
mov
test
jmp
arpl
sbb
nop
aas
leave
out
aas
fstl
push
cmp
lds
xchg
insb
sub
xorb
rol
ficoml
sbb
mov
sub
inc
cmpsl
in
sub
xchg
mov
push
mov
xchg
and
in
loop
mov
pop
push
push
gs
idivl
cmc
push
sub
cli
scas
push
icebp
sbb
rcll
cli
pop
dec
mov
lret
int
xor
or
add
sbb
jb
je
es
xor
es
sahf
xor
sbb
mov
cmpl
pop
mov
adc
dec
fs
das
dec
in
sbb
ret
jmp
mov
cmpsl
lret
inc
push
lock
push
xor
xchg
mov
stos
aam
ffree
leave
loope
xlat
lock
ds
loopne
inc
pushf
xor
xlat
and
and
insl
aam
mov
or
lret
rorl
cli
mov
out
or
out
movsb
insb
jns
pop
push
lds
lahf
in
pop
sbb
add
xchg
mov
dec
pusha
imul
mov
jno
xchg
xor
xchg
dec
inc
mov
in
fistpl
inc
clc
popf
inc
out
sbb
sbb
sbb
mov
xchg
negl
popa
sbb
cmp
or
xchg
pushf
popa
xor
fcmovnb
iret
or
cli
lea
inc
in
xchg
mov
repz
add
and
pusha
sub
or
jnp
push
mov
sbb
cmp
push
fsubrl
mov
xor
cld
dec
push
cmc
pop
mov
rorb
sub
xchg
test
outsb
sub
push
test
loopne
xor
mov
aam
sbb
ja
pop
mov
data16
push
cmp
xlat
outsb
adc
fwait
in
ret
ds
and
inc
js
xchg
lahf
cwtl
fcmovu
jecxz
cmp
sub
cwtl
xchg
sbb
je
and
sti
xchg
and
lods
and
popa
dec
cmpsb
inc
lahf
sub
out
sub
pop
xlat
pop
or
pushf
add
sbb
push
cltd
mov
adc
andb
pushf
addr16
cmp
add
cmpsb
lds
cmp
sub
aad
inc
dec
add
movsb
pop
sub
lret
lods
mov
cmp
sub
sub
jp
dec
inc
test
mov
push
out
xor
fs
std
sti
arpl
lcall
int
andl
loop
inc
stos
add
les
repz
sbb
sub
stc
in
in
fidivrs
jae
ror
daa
jecxz
pop
push
fcoms
stc
outsl
and
js
mov
ljmp
mov
pop
mov
iret
mov
popa
add
push
and
movsb
jmp
push
cwtl
sbb
and
cli
insl
sub
add
in
xor
jg
pop
popf
fcoms
shrl
stc
inc
jecxz
pop
push
jmp
lea
jb
rolb
adc
bound
add
aaa
dec
dec
out
mov
arpl
pop
jmp
scas
out
in
pop
inc
push
popf
mov
jle
aad
nop
dec
ss
pop
sub
xchg
fsubs
sub
je
pop
xchg
fistps
jmp
push
rcrl
sub
out
daa
ret
push
clc
cmpsb
mov
mov
sub
inc
sbb
add
out
push
je
cmp
std
xchg
or
add
insl
iret
push
jg
out
jbe
jbe
subl
add
std
and
mov
dec
sbb
pop
lret
int3
data16
lahf
add
sbb
jmp
fsubl
dec
push
repnz
in
test
and
fidivrs
adc
insl
sub
aas
std
aad
std
xchg
jbe
sub
push
pop
dec
cmp
pop
arpl
xchg
push
dec
lahf
or
and
ficoml
pop
push
ret
lods
insb
test
mov
js
sti
cmp
aam
mov
pop
mov
shld
cmp
adc
sub
xchg
sub
lea
cwtl
subl
push
scas
popf
and
pop
sub
ds
test
or
xchg
int3
popf
mov
xchg
mov
insl
sub
stos
xchg
push
xchg
addr16
mov
leave
pop
inc
mov
xchg
inc
repnz
aas
call
jmp
icebp
mov
rorl
pop
mov
lcall
fisttps
std
mov
cmc
pushf
and
daa
lcall
sbb
push
ret
shll
jecxz
cmc
dec
out
hlt
adc
pop
mov
clc
fistpl
fisubl
sub
xor
add
adc
je
add
dec
cli
xchg
int3
xor
mov
scas
lds
addb
jge
lock
lahf
loope
scas
sbb
fwait
jb
addr16
mov
es
mov
movsb
jb
out
cmp
inc
test
mov
jmp
aam
jno
or
adc
sub
push
jmp
dec
jmp
pop
in
cmp
das
push
imul
xchg
push
leave
int
loop
fimuls
cmp
add
fsubr
sbb
mov
into
jae
imul
cmp
adc
jae
xor
adc
and
lds
jecxz
sti
lea
cmp
lahf
shll
mov
jo
shll
arpl
pop
and
outsl
add
jp
leave
jns
insl
test
enter
xor
int3
popf
push
out
fidivl
fstl
loope
cmp
dec
rclb
inc
stos
mov
lds
clc
outsb
or
ret
or
xchg
dec
sar
push
and
fiaddl
push
in
fsubrs
pop
popa
lods
pop
js
cmc
mov
adc
pop
fdivrs
stos
mov
adc
xor
fdivr
popf
jl
or
movsb
jmp
push
leave
mov
xlat
jl
cmp
ss
inc
xchg
ljmp
sbb
push
cld
int3
incl
mov
xor
daa
in
and
lret
call
daa
hlt
or
mov
xor
aad
rcrl
rcrb
xlat
in
xor
xor
cmp
mov
push
sub
mov
loope
iret
xchg
xchg
ret
push
test
push
rcr
cmp
dec
leave
mov
pop
pop
mov
mov
pslld
out
repnz
xchg
push
sbb
xchg
push
mov
in
das
pop
push
jne
int3
mov
insb
into
sub
ss
and
mov
pushf
push
ljmp
inc
mov
outsb
lock
add
fadd
cmpsb
cmp
or
aaa
stos
ret
xor
mov
or
scas
push
adc
sub
pop
icebp
dec
dec
inc
pusha
pop
cmp
and
mov
adc
sub
push
or
push
aad
sbb
add
in
out
enter
testl
aam
mov
pop
imul
shlb
sbb
sub
ss
jp
or
in
pusha
inc
adc
orl
pop
lds
cld
shl
xor
xchg
inc
adc
sub
jge
mov
shl
mov
mov
lcall
call
mov
sbb
add
push
lock
loop
stc
or
push
dec
loope
lret
mov
outsl
lods
cmpsl
fisttps
lds
mov
dec
xor
std
jo
in
movsb
add
xchg
outsb
pop
mov
push
popl
cwtl
pop
cmc
iret
and
mov
add
addr16
orl
out
or
mov
push
jecxz
jne
lds
mov
adc
mov
sbb
dec
sbb
cmp
jo
xchg
roll
out
imul
mov
cmpsl
aad
push
dec
in
xchg
outsl
test
bnd
rclb
jno
mov
adc
add
mov
lret
fsts
test
ret
pushl
gs
push
push
icebp
pop
shlb
push
rorb
pop
jae
sbb
lods
xchg
dec
or
adc
jl
mov
std
xlat
stc
mov
std
arpl
push
push
push
pop
cmpsb
ss
in
mov
arpl
jns
cli
jns
imull
pusha
mov
mov
std
and
xlat
ljmp
scas
and
cmpl
fadd
sub
inc
scas
mov
mov
int3
insl
jbe
imul
fdiv
mov
xor
push
stos
push
test
push
mov
or
mov
and
push
adc
add
in
xchg
mov
mov
mov
sarb
mov
jb,pt
iret
push
pop
xchg
lds
incl
sahf
lods
jmp
lea
arpl
daa
and
mov
jae
sti
sub
lahf
mov
les
and
ss
adc
fidivrs
push
mov
enter
or
adc
xchg
sbb
repz
bound
ret
imul
xchg
mov
sbb
incl
insb
adc
into
test
ja
push
xchg
mov
jb
popa
lods
xlat
sbb
out
scas
inc
std
rclb
int3
xchg
stc
mov
cwtl
cmp
out
cltd
cmp
imul
push
mov
add
out
cli
mov
cmp
cltd
jns
repz
in
cwtl
inc
cmp
xor
cmpsb
les
fs
sub
mov
push
mov
cmp
in
les
pop
leave
jecxz
dec
ret
jle
js
into
movsl
loopne
cmpsl
rcrl
cmc
cwtl
fcmovb
les
mov
ja
push
push
add
loop
sbb
inc
inc
ja
or
inc
pushf
mov
xlat
cmpb
divl
mov
or
test
mov
lea
popa
xchg
mov
inc
pop
out
clc
jnp
mov
dec
sbb
jmp
sub
inc
negl
pushf
repz
push
jp
pop
inc
lret
push
cmp
or
dec
das
mov
adc
fldln2
sub
scas
cmp
je
sbb
push
mov
pop
cmp
outsl
adcb
in
pop
int
lods
jno
or
fsub
inc
scas
nop
dec
xor
ljmp
mov
in
and
pop
adcb
sub
dec
js
inc
frstor
cmpsb
std
aad
mov
loopne
jns
dec
inc
jnp
loope
in
push
sub
mov
mov
jbe
jecxz
fwait
adc
xorb
nop
pop
xor
lret
out
jg
jmp
pop
cwtl
mov
dec
mov
repnz
popa
xor
sbb
pushfw
test
add
je
sti
jbe
jno
lahf
xor
data16
pusha
sbb
pusha
jne
xor
out
inc
outsw
xchg
outsl
inc
inc
sub
lock
jecxz
xor
adc
and
xor
pop
fimuls
lahf
std
repnz
ds
xchg
cmpsl
aam
imul
lahf
push
or
xor
in
pop
cmp
mov
jns
in
testl
cmp
jg
js
lea
out
test
adc
int3
popf
fmulp
cmc
inc
in
test
stos
lds
push
mov
push
cmp
test
sbb
mov
cld
clc
pop
repz
jecxz
lcall
lea
sbb
out
jge
loopne
xor
rol
pop
aam
mov
out
jo
mov
xchg
stos
pop
or
enter
repnz
lock
pop
push
mov
test
adc
add
cmpsb
xor
pop
sarl
and
lcall
divb
out
cwtl
mov
push
jge
sysexit
in
outsl
test
push
sbb
iret
popa
jns
jle
push
and
shl
pop
push
aaa
dec
fcmovnb
adc
adc
daa
xchg
cltd
outsb
dec
dec
dec
movsb
xor
fimull
fdiv
or
leave
loope
lret
jns
xchg
imul
mov
mov
sbb
mov
subl
adc
dec
dec
inc
xor
or
in
lods
dec
cwtl
push
sti
pop
xchg
or
adc
loope
fwait
sub
pushf
jb
mov
xchg
pop
mov
adc
les
pop
loop
push
cmp
mov
mov
xchg
inc
pop
cmpsl
cmp
mov
mov
mov
movsl
inc
ljmp
inc
cmpsb
mov
in
xlat
ss
jg
jmp
int3
cld
adc
push
jne
cs
push
inc
jmp
and
fmull
inc
stos
ret
fnstsw
mov
mov
cmp
imul
sar
or
popa
jns
lahf
cld
adc
loope
mov
addr16
fistps
lcall
mov
out
jns
sbb
xor
movsl
fmulp
movsb
dec
sbb
dec
jg
jle
in
dec
lock
pop
test
ja
pop
mov
icebp
jp
rdtsc
pop
test
jle
mov
dec
cltd
mov
push
xchg
sub
and
cwtl
andl
lret
mov
push
push
and
js
sub
xor
mov
lea
and
or
cmp
and
mov
cmp
and
jmp
movsl
cli
test
xor
sub
out
sbb
int3
xlat
das
or
cmc
clc
adc
pop
cmp
mov
sbbb
addr16
and
cwtl
xchg
push
mov
and
sbb
sbb
dec
or
mov
sbb
mov
out
xchg
jg
adc
dec
jmp
rcll
rcrb
scas
jbe
and
imul
das
xor
inc
ljmp
lock
jge
cmp
mov
push
je
mov
scas
ljmp
jno
cmp
jecxz
cmp
inc
enter
jbe
cltd
je
push
lods
xchg
mov
and
mov
xor
cmpsb
aam
mov
shrl
jns
sub
fcompl
das
repnz
jns
shlb
insb
hlt
sti
sarl
fbstp
jl
les
xchg
dec
pop
add
xor
cmpsb
mov
add
notl
inc
mov
xchg
pop
ret
xlat
xor
mov
pop
hlt
mov
call
pop
xor
inc
push
test
cmpsb
in
in
or
das
mov
mov
rcrb
mov
out
xor
push
xor
xchg
push
or
xchg
mov
insl
jmp
dec
mov
rol
test
dec
jno
cltd
and
lea
out
lea
das
add
neg
lret
fbld
mov
lcall
add
jle
and
push
stc
test
jp
inc
mov
add
in
inc
xchg
mov
sub
xor
mov
push
gs
ss
aam
jnp
in
nop
popf
out
sbb
popf
jmp
dec
xchg
sub
loop
arpl
cld
ret
xlat
inc
lods
add
lods
sbbl
out
repz
iret
fstpl
mov
fs
das
add
movsl
test
pop
jmp
sub
fmuls
mov
stc
scas
inc
jbe
jecxz
inc
xchg
int
leave
pop
and
push
sbbb
or
cmp
and
cmp
aaa
fistl
mov
ds
lods
lea
js
ja
mov
pop
loop
std
cs
xorl
in
shrb
js
js
push
movsb
repnz
and
pop
adc
adc
pop
mov
pop
jno
sbb
sbb
stos
cmp
and
sbb
inc
pop
js
in
shll
loopne
pusha
mov
xchg
lcall
jge
xchg
cs
push
das
enter
xor
sub
dec
cli
mov
fimuls
gs
inc
ret
mov
in
xor
push
dec
pop
mov
dec
xchg
rclb
pop
jp
stos
mov
bound
imul
popf
jge
out
je
out
and
push
pop
jb
add
xchg
test
mov
enter
cld
mov
js
adc
cmp
loop
movsb
aaa
lahf
mov
mov
dec
jecxz
push
inc
xor
aad
pusha
xor
jge
or
inc
dec
scas
lcall
mov
ficomps
ret
xor
mov
adc
incb
notl
addl
pop
jb
popa
xor
inc
lret
adc
lock
mov
mov
xchg
insl
and
fistpll
test
xchg
ja
xchg
xor
iret
sbb
push
subl
insb
adc
sbb
inc
js
bound
pop
in
js
fs
sub
cs
jge
or
mov
int3
xor
pushf
mov
insb
mov
pushf
xchg
ds
push
cs
cmp
and
push
xchg
out
lcall
fdivrp
pop
ret
xchg
xor
int3
pop
jo
mov
sbb
fldenv
pusha
pop
push
pop
hlt
jmp
inc
dec
xlat
sti
call
aad
dec
push
xlat
jo
int3
and
shrl
mov
mov
js
pop
lods
ljmp
xchg
mov
push
xchg
mov
inc
jno
clc
mov
xchg
stos
ss
ret
lret
and
popa
sub
inc
in
in
rcl
sbb
xchg
nop
dec
and
xor
xor
push
inc
icebp
pop
scas
mov
push
cli
and
push
xchg
stos
mov
das
mov
in
mov
nop
ljmp
jne
clc
scas
sti
lods
inc
sub
push
dec
pop
dec
mov
xchg
add
or
lds
xchg
in
rcr
mov
mov
pop
pushf
push
rorb
sbb
sbb
dec
sahf
or
jnp
sub
or
mov
sahf
insl
clc
jmp
shlb
mov
push
push
jae
loopne
js
dec
inc
arpl
add
sarb
in
dec
loopne
jbe
aaa
push
ljmp
lock
jo
jp
ss
lgs
xchg
pop
fsubr
mov
adc
sub
add
stos
jno
lret
int
sbb
mov
lret
fwait
scas
mov
arpl
andl
or
std
lret
loop
stos
fsts
movsl
jbe
mov
out
stc
cs
push
pop
mov
sbb
fcomip
repz
mov
push
dec
push
xchg
mov
gs
fiadds
addb
cmpsl
mov
mov
scas
mulb
sbb
inc
clc
sub
out
decb
push
fidivs
int
std
movsb
push
negb
pop
stos
push
push
mov
or
movsb
cmpsl
in
push
inc
std
and
inc
scas
test
in
inc
clc
xchg
inc
cltd
push
mov
pop
and
incb
jno
mov
ds
sub
pop
pusha
aaa
pushf
cwtl
mov
jns
xchg
jl
out
ljmp
add
pop
dec
cmp
pushf
mov
imul
jmp
jnp
adc
mov
fcmove
jbe
scas
int3
cmp
adc
gs
add
inc
mov
testl
icebp
loopne
xor
sub
xor
lret
cli
push
js
pusha
mov
out
jmp
inc
push
xor
jecxz
int
sub
lret
or
sub
adc
shr
stos
addr16
repz
mov
in
adc
shll
adc
add
insl
push
push
idivb
movsl
iret
lds
xor
fwait
dec
and
inc
in
iret
pop
fucomp
jns
and
loop
dec
xchg
xchg
mov
sbb
mov
or
notrack
clc
mov
push
pushf
enter
inc
out
pop
add
and
xchg
lcall
aad
std
rcll
dec
pop
inc
cmp
jae
scas
shrb
notb
mov
enter
ficompl
mov
sub
mov
jg
pop
out
mov
insb
mov
shr
pop
insb
jle
xor
icebp
cld
mov
stos
popf
or
xchg
jbe
inc
xorb
int3
mov
movhps
movsb
lods
xor
je
jl
sub
fwait
das
aam
std
mov
das
dec
jns
aas
fcmovnbe
pop
fisttpll
or
mov
stos
xchg
push
jl
cltd
mov
outsb
xchg
push
js
mov
mov
int3
and
mov
mov
and
fisttps
imul
iret
sbb
or
pop
jmp
nop
into
cltd
and
and
data16
test
jb
aaa
dec
cwtl
in
pushf
adc
inc
aam
mov
out
orl
inc
sbb
scas
sub
insl
cld
pop
out
mov
pop
mov
push
in
divl
push
mov
mov
imul
das
bound
mov
lahf
cmp
inc
xor
mov
imul
cli
roll
xlat
in
cs
pusha
sahf
addr16
add
xor
stos
mov
push
or
jg
call
sbb
inc
mov
in
fcoms
jne
jae
mov
cli
or
ficompl
test
dec
jne
stc
and
inc
mov
mov
pop
pusha
mov
mov
cmp
and
xchg
mov
inc
pop
pop
cld
jle,pn
pusha
sbb
mov
xchg
imul
jae
xor
ja
rcrb
into
cwtl
xchg
add
insl
ret
repnz
push
call
adc
cmpsb
cmp
in
cmp
sarb
pop
pop
lock
jle
mov
sbb
aaa
push
jo
rcll
push
mov
dec
jp
sbbl
xor
push
or
insb
test
inc
faddl
xor
and
outsl
xchg
dec
xor
dec
mov
fdivl
lahf
inc
or
hlt
push
loop
push
cmp
fdivrs
cmp
mov
or
xor
push
inc
stos
fcmove
mov
flds
bound
out
push
mov
jmp
sub
leave
int
mov
int
sbb
std
and
xchg
sub
and
cmc
lods
js
and
js
and
dec
add
fildll
adc
sbb
in
fwait
sbb
xchg
int3
xchg
stc
sub
movsl
pop
fisttps
sub
ret
jnp
or
addl
inc
push
loope,pt
or
mov
std
int
arpl
pop
push
or
movsl
dec
and
repnz
dec
sub
sbb
lahf
jbe
jle
pushf
jg
std
rclb
xor
in
mov
add
fxch
pushl
xchg
pop
out
test
sub
rol
jmp
pop
je
xor
stos
jns
pop
sub
adc
aaa
outsb
test
mov
jns
imul
jnp
arpl
push
sbb
jb
mov
xor
push
movl
rcrl
int3
pop
adc
push
inc
vpsubsw
fwait
test
movl
sbb
add
mov
adc
ss
xchg
cltd
aam
popf
xor
jmp
cli
push
dec
rcl
test
jo
jae
es
and
insl
xorl
push
xchg
mov
jg,pn
dec
cmpsb
fwait
pusha
mov
dec
test
add
pop
xor
add
orl
pop
out
push
push
mov
and
dec
fisubs
and
mov
sti
scas
mov
in
jmp
int3
mov
ficoms
mov
subb
and
stos
movsl
out
or
xorb
xchg
lds
mov
test
shrb
mov
test
hlt
lret
dec
jp
les
push
mov
into
in
out
sbb
cmp
test
loopne
pop
ret
negb
push
jmp
loop
mov
pop
adc
xor
cmc
or
popa
jae
inc
scas
jle
and
push
dec
shrl
jle
sub
lods
arpl
or
dec
jp
push
add
repnz
jmp
stos
repnz
or
mov
lock
pop
rcrb
gs
test
adc
test
fcomp
xchg
pop
inc
fdivrl
mov
mov
mov
cld
push
lock
push
lcall
out
cmp
xchg
dec
pop
xchg
stos
loopne
repz
mov
dec
int
dec
mov
and
in
data16
sub
ds
aad
push
add
push
jl
mov
inc
hlt
jge
gs
movsb
aaa
mov
sbb
and
push
push
cmovge
cmc
sti
pop
push
pop
pop
mov
push
lret
shlb
add
fdiv
dec
fisubs
fsubrl
add
jo
xor
xor
clc
or
mov
xor
and
ljmp
push
rcrb
sub
fsubr
test
rol
cmova
addr16
aad
sub
out
cld
mov
arpl
hlt
aam
mov
aas
sbb
dec
aam
fucomip
scas
mov
pop
lods
cmp
xor
push
xchg
cmpsl
inc
hlt
scas
add
std
mov
repz
mov
fisubl
xchg
or
cld
cltd
cmc
fstl
aaa
or
jecxz
orl
push
insl
cmp
fucomi
int
xor
insl
push
daa
outsl
fbstp
imul
stos
aaa
fildll
je
jo
jge
pusha
mov
insl
add
or
dec
clc
dec
aam
in
mov
roll
adc
mov
mov
cmpsb
push
adc
pop
dec
jl
dec
xchg
leave
dec
repz
and
sbb
iret
jg
pop
out
inc
inc
pop
scas
jae
jbe
mov
jge
pop
popf
mov
xor
aad
pop
fsubl
mov
xor
add
pop
xor
or
hlt
fucomi
sahf
repz
movsl
test
sbb
mov
movsb
fldenv
pop
jnp
mov
js
sub
push
sub
mov
inc
jge
sarb
sbb
mov
add
dec
test
mov
mov
leave
imul
pop
ja
push
loope
scas
mov
pop
mov
adc
stc
or
pop
or
dec
and
mov
bound
pop
inc
push
inc
mov
mov
lret
mov
jns
iret
fcmovnbe
adc
mov
lretw
xor
or
push
push
fmul
in
inc
dec
lods
fisubrs
int3
or
dec
mov
hlt
xchg
test
adc
in
sub
out
jle
imul
clc
dec
js
fmul
popa
andl
roll
fwait
or
lret
cmpsl
out
ja
jecxz
add
push
popa
aaa
punpckhdq
xchg
adc
fsubrl
jmp
std
inc
fisubrl
add
repnz
cwtl
iret
aad
testl
ret
mov
mov
push
test
dec
jo
and
cmpsb
dec
lods
jmp
sub
jno
scas
ret
lret
cld
sub
sub
or
xor
adc
add
cmpl
in
jb
cltd
fadds
pushf
rcr
jle
mov
repnz
push
inc
shrb
rcrb
int
cmp
pop
inc
scas
loope
les
int3
mov
lcall
clc
adc
jb
enter
jno
mov
nop
xchg
stc
and
leave
scas
dec
push
mov
push
mull
mov
dec
in
gs
mov
mov
das
nop
and
mov
js
cwtl
test
cltd
mov
pop
cs
mov
enter
sbb
lds
pop
insl
and
mov
in
mov
sbb
mov
enter
leave
sbb
mov
mov
fcmove
shrw
aas
outsb
push
mov
push
sub
clc
add
push
repz
cmpsl
ret
mov
pop
jmp
jo
insb
jle
push
idivb
lret
xchg
mov
cmc
fsubrs
sub
inc
jmp
pop
jp
test
or
int3
cld
pop
jle
xchg
js
sahf
cmpsb
jo
cmp
jp
shlb
sub
adc
repz
pop
jecxz
dec
adc
mov
mov
push
jae
fisttpll
mov
mov
inc
incl
imul
stc
aam
bnd
ffree
arpl
into
pop
mov
stc
data16
sub
sub
jmp
loopne
fstp
in
push
dec
orb
popf
std
lods
cmpsb
sbbl
dec
jle
adc
pop
addl
ror
outsl
stos
sbb
sub
ja
xor
pop
cmp
add
cmp
or
es
inc
pop
pop
xor
push
jb
fcomps
jnp
or
fiaddl
sub
and
inc
outsl
cli
mov
cmpsl
mov
add
out
sub
in
inc
xor
cmp
imul
adc
cmc
mov
adc
xlat
pusha
bound
enter
je
test
sbb
mov
xor
pop
mov
pop
ljmp
jl
test
fs
inc
stos
lock
ja
and
stos
bound
or
jo
adc
notb
test
iret
int
cmpsb
inc
xchg
jb
jmp
dec
jp
pop
and
add
insb
jmp
jno
inc
and
mov
bound
popa
mov
xchg
inc
enter
push
sbb
jae
and
add
mov
mov
mov
sub
mov
inc
dec
ja
jnp
sbb
sbb
aas
jnp
xor
test
cld
int
and
mov
jae
aas
and
out
test
dec
in
js
and
rolb
dec
jp
js
daa
outsl
es
imul
rcrl
repz
lods
cmp
or
jne
push
inc
lock
sbb
xor
popa
ret
push
jle
mov
sbb
mov
test
imul
das
ljmp
out
adcl
add
mov
fcomip
push
jo
or
cmpl
mov
divl
stc
pop
mov
stc
popf
js
xchg
xchg
sbb
push
inc
ja
sti
mov
sbb
lahf
idivl
mov
inc
pop
nop
lods
inc
movsb
push
inc
loopne
dec
adc
inc
jmp
cmp
lret
xor
xchg
in
mov
insl
in
fs
lods
mov
inc
pusha
ret
es
adc
lea
mov
lock
jl
fucom
mov
mov
shr
mov
push
les
add
cmpsl
xchg
pushf
cld
push
mov
sbb
sbb
jmp
lods
or
or
pop
mov
in
mov
rolb
fiadds
clc
shl
push
and
and
sti
xor
pop
imul
mov
sub
outsl
sub
or
dec
notl
push
std
cmpsb
add
push
imul
sub
fs
out
out
xor
xchg
in
negl
adc
lret
aaa
add
sbb
sbb
sub
ret
sub
sahf
inc
mov
push
fcmovnb
stc
cltd
push
dec
adc
add
icebp
sbb
cmpsl
cli
pushf
popf
mov
decb
pop
movd
and
jmp
lahf
sub
add
ljmp
sub
inc
gs
lea
add
or
cwtl
mov
mov
add
sub
and
repz
sbb
adc
push
xlat
mov
push
outsb
sub
inc
shr
je
xor
and
sub
jae
inc
out
mov
xchg
jl
mov
scas
or
fwait
je
adc
lret
mov
push
cltd
mov
and
ljmp
jmp
dec
dec
test
mov
push
mov
lret
lret
xor
pop
in
mov
cltd
out
sti
xchg
ss
popf
in
enter
fucomip
scas
pop
das
push
jmp
std
fdivs
std
cmc
adc
dec
jmp
mov
pop
mov
jge
loop
sub
das
cld
or
arpl
popf
ds
mov
movsb
das
bound
sub
xchg
fildll
shlb
add
xor
cmpsl
sbb
addr16
push
jns
sub
adc
xor
sbb
push
adc
dec
stc
aaa
mov
xchg
mov
sti
and
hlt
push
or
add
mov
mov
loop
push
sahf
int3
rcrb
stc
imul
xchg
in
outsb
sub
leave
fimull
mov
stos
push
inc
xchg
scas
in
lret
orb
sarb
pop
mov
push
mov
sbb
popf
dec
xchg
js
inc
jo
and
cmp
aaa
xor
adc
movsb
mov
xchg
mov
fdivl
cmpsb
hlt
stos
xchg
inc
add
mov
push
mov
hlt
pop
inc
stos
daa
ljmp
jle
mov
sbb
sbb
xor
rcl
sub
adc
mov
call
push
xor
jge
push
lods
push
xor
icebp
jp
pushf
xor
lea
inc
popf
scas
in
stc
cld
xchg
divl
jle
subl
icebp
sbb
movsl
add
lret
popf
sbbl
jne
lret
xlat
mov
ret
clc
sub
subl
stos
dec
mov
fdiv
lods
pop
jbe
push
jb
add
mov
fisubrl
lret
and
cmp
adc
gs
sub
scas
pop
push
addr16
add
into
xor
add
stc
dec
cmpsb
icebp
cmp
out
jbe
jo
and
pusha
lods
lds
cmpsb
mov
xor
pop
jmp
lods
stc
jge
cmp
add
lret
sti
in
mov
in
and
jecxz
bound
xchg
daa
mov
subl
cmp
mov
in
inc
cmp
mov
pop
mov
adc
int
addl
adc
jle
sub
fists
cld
lcall
mov
sub
or
mov
and
pushl
fidivs
mov
dec
pop
jo
push
mov
xlat
adc
pusha
gs
xor
frstor
cmp
xor
sti
jp
sbb
ljmp
popa
xor
ror
cmp
jg
add
xor
jle
mov
int
lahf
ja
arpl
push
fwait
jbe
std
mov
push
cmpsl
mov
loop
hlt
dec
fidivs
xchg
data16
and
and
bound
sub
push
aaa
pop
push
repz
mov
dec
test
push
cwtl
decb
ret
lea
imul
insb
incl
out
jge
shrb
sbb
pop
lock
mov
cli
adc
enter
hlt
test
js
jp
cmp
dec
xor
dec
and
pop
cmp
icebp
push
mov
or
outsl
inc
lea
lahf
subl
into
sub
cmc
push
mov
notb
rorl
and
or
mov
inc
iret
fldl
cmpsl
sbb
and
adc
pop
sub
mov
decl
mov
or
out
jg
mov
mov
xorb
lret
mov
mov
popa
xor
pop
inc
push
call
inc
aas
inc
pop
imul
call
les
insb
inc
cltd
mov
in
pop
xor
das
gs
lods
inc
jo
lock
movsl
or
jnp
aam
sub
pop
mov
dec
movsb
push
push
sbbl
aas
ja
pop
lret
jae
arpl
mov
mov
ret
cld
mov
mov
lods
add
nop
cmp
add
mov
lock
pusha
sub
fwait
pop
enter
add
notl
test
jl
popa
aam
aad
stos
sub
out
imul
jmp
add
aas
pop
lahf
jl
push
sbb
pop
fwait
repnz
jp
adc
jo
add
orl
push
mov
stc
ss
divb
icebp
push
dec
hlt
inc
popf
mov
clc
inc
cs
add
rcrl
out
fnstenv
mov
push
adc
mov
pusha
outsl
movhps
xchg
push
mov
pop
adc
loopne
and
sub
push
movsb
rcr
test
ja
in
incb
stos
inc
loope
gs
dec
int3
insb
cmp
sbb
test
mov
adc
js
test
adc
push
sti
mov
or
dec
adc
pop
leave
jo
xchg
loop
rcl
and
jle
lods
imul
cmpsl
and
inc
cmp
out
mov
push
or
loopne
push
scas
jnp
lock
mov
call
cmp
out
jbe
shl
fsubrs
test
xlat
loope
test
shll
fcmove
fisubs
xor
mov
or
add
int3
enter
or
pop
lret
addl
inc
pusha
adc
icebp
mov
shrl
cmp
data16
ftst
mov
pop
lcall
outsl
iret
mov
insl
mov
sbb
inc
cli
shl
lcall
test
adc
dec
ljmp
dec
enter
aaa
xchg
jmp
xchg
jnp
pop
daa
cmp
or
sbb
add
popa
xor
insl
inc
imul
mov
aam
icebp
xchg
stos
xchg
fwait
aad
hlt
push
jmp
popf
int
pushf
jg
push
jbe
int3
add
js
and
out
leave
dec
mov
mov
and
pop
sarb
pop
in
mov
cltd
mov
sahf
xor
xchg
add
inc
sbb
mov
testl
les
mov
ret
mov
jge
fidivl
fidivl
cwtl
add
aad
mov
dec
testb
popa
fdivrp
xchg
push
call
push
das
xor
call
rorl
lret
mov
shlb
pop
sub
xchg
add
sub
mov
cmc
hlt
push
xlat
out
jl
xchg
or
mov
push
lret
lock
fnstsw
push
mov
push
dec
loop
jbe
ljmp
mov
and
sbb
fidivl
xchg
jne
push
push
sbb
das
imul
leave
pop
mov
shll
leave
sti
imul
adc
lods
mov
stos
sub
aad
mov
and
addb
and
pop
dec
mov
pop
cmp
mov
leave
in
sub
nop
sbb
out
out
dec
data16
cltd
movsb
dec
pop
sub
mov
fprem
mov
mov
nop
mov
rcrl
jns
lods
jne
lcall
pushf
test
adc
cmp
dec
pop
mov
pop
pop
loope
xor
jle
cmp
pop
fsts
adc
enter
mov
dec
pop
fbstp
sti
xchg
shl
xchg
sarb
leave
pusha
mov
dec
negb
std
test
hlt
mov
fdiv
adc
aaa
inc
sbb
lret
loope
jg
testb
xlat
adc
or
push
sti
sbb
xchg
jne
xchg
cs
pop
xacquire
jns
pop
pusha
enter
fnsetpm(287
sub
ret
pop
sub
push
dec
dec
mov
loope
sbb
and
xchg
cmp
jl
outsb
or
mov
dec
push
mov
xchg
or
and
cmpsl
sbb
stos
xchg
dec
in
or
mov
mov
inc
shlb
or
and
cmc
stos
dec
out
sub
or
jbe
push
repz
adc
jno
in
dec
test
clc
sbb
xor
stos
pop
jle
push
aam
dec
or
movsb
sbb
mov
lret
push
pop
jmp
pop
stos
push
mov
fwait
inc
xorl
ljmp
xchg
and
popf
mov
insl
cwtl
sahf
shl
add
lcall
adcb
inc
pop
aas
inc
xor
aam
adc
jnp
lahf
pop
icebp
enter
cwtl
push
xor
or
adc
mov
cmpb
insb
jno
dec
xchg
xor
sub
cmp
pop
dec
cltd
lods
xor
adc
fs
push
and
xchg
jle
stos
inc
jmp
xlat
je
cmpsl
sub
into
push
and
inc
call
in
jbe
enter
add
daa
clc
and
mov
mov
rcrl
fistpl
aas
pusha
negl
mov
cmpsl
sbb
sub
push
jbe
sub
pop
cwtl
mov
hlt
lret
add
ret
std
ret
pop
add
mov
mov
and
lahf
arpl
push
xor
fldt
outsb
jp
test
cs
sub
pop
sbb
cmp
in
insb
in
mov
mov
out
and
insl
push
in
or
imul
push
xor
jae
into
push
test
ja
fsubl
cwtl
sbbb
or
and
mov
add
jno
gs
xchg
out
enter
dec
ret
scas
inc
cmc
and
into
test
jne
insl
add
adc
xchg
mov
add
cmpsl
decb
repnz
loopne
pop
jl,pt
sahf
scas
push
cmp
fsub
adc
sbb
dec
dec
ss
cmp
mov
push
or
fisttps
dec
dec
or
mov
add
aad
or
adcb
dec
dec
fnsave
xor
movsb
movsb
mov
xlat
ljmp
divb
jge
fcomip
push
adc
or
xor
hlt
xchg
int
sub
push
push
lock
xor
fs
cmpsb
adc
cltd
clc
lods
sub
add
mov
xchg
add
xchg
push
jg
data16
mov
popa
mov
adc
aaa
sbb
jecxz
inc
gs
mov
popf
adc
movsl
xchg
jmp
loope
jl
mov
and
mov
add
jl
pop
inc
cld
lcall
stc
xchg
enter
test
test
cmp
pop
fcoms
xchg
pop
and
repz
sbb
and
test
xor
jns
pop
test
je
not
outsb
push
jge
sub
jae
test
aaa
stos
fistpll
fdivrl
jae
int3
lahf
jmp
gs
and
xor
xchg
pop
push
adc
or
adc
test
cmc
adc
and
lea
and
cmc
mov
mov
iret
gs
mov
jo
add
xchg
sti
lcall
sub
push
pop
ret
pop
fs
int3
mov
cmpl
test
push
xchg
adc
push
lret
lret
rclb
adc
mov
jae
out
movsb
mov
lds
jmp
bnd
fnstcw
and
leave
mov
xor
mov
test
fisttpl
into
insl
out
in
pop
push
sahf
sub
lcall
dec
jo
clc
bound
fwait
fwait
pop
push
dec
dec
xor
scas
loope
ret
mov
movsl
out
or
out
push
clc
sahf
sbb
call
adc
and
push
call
or
xor
xchg
mov
subl
mov
mov
push
bound
inc
iret
mov
dec
push
mov
dec
push
leave
daa
mov
or
pusha
flds
cmp
subb
ljmp
movsl
icebp
lret
mov
inc
je
add
shrb
pop
mov
add
aaa
aas
enter
cmc
mov
mov
in
subb
inc
push
pop
jp
add
insl
gs
iret
lret
push
sbb
push
outsb
sub
push
enter
pop
dec
insl
xor
lahf
std
test
xor
pop
mov
aad
xchg
add
nop
arpl
addl
push
xchg
inc
mov
arpl
pushf
cli
xlat
cmp
out
loope
mov
call
push
xchg
out
mov
jge
jecxz
xchg
pop
sub
dec
push
jns
ljmp
inc
jecxz
rcrl
subb
popf
or
int3
lahf
or
mov
fs
pop
jbe
dec
mov
out
fnstcw
dec
dec
leave
int
roll
mov
xchg
stc
popf
sahf
cmc
cmp
cwtl
jmp
xchg
adc
inc
dec
push
mov
jg
jmp
or
das
mov
jle
pusha
jl
shll
pop
or
sub
push
sub
or
jnp
scas
daa
xchg
add
lods
mov
push
mov
push
cmc
mov
xchg
data16
mov
fsubr
shrb
repnz
mov
push
push
and
and
dec
mov
std
cmpsb
cmp
mov
ror
xchg
xor
xor
incl
mov
mov
out
push
lock
mov
bound
mov
xchg
sub
stos
ds
push
mov
sbb
mov
call
fldenv
mov
popa
or
inc
dec
shlb
or
inc
insl
inc
pop
cmpsb
cmpb
mov
ret
mov
xchg
mov
push
lods
push
repnz
and
inc
add
push
inc
push
dec
mov
adc
xor
inc
sub
or
testl
out
adc
lods
aas
es
call
inc
popf
push
dec
leave
jb
fcmove
arpl
cmp
add
push
movsl
test
out
test
xor
js
or
lods
mov
cmp
outsl
or
mov
pop
ficompl
mov
test
inc
ret
dec
sbb
in
lods
scas
pop
sub
add
dec
int
xor
xchg
mov
ret
xchg
sub
lds
or
lods
adc
push
stos
out
lods
scas
xor
mov
jb
fs
fcmovnbe
cld
jmp
cs
pop
fstpt
mov
xchg
test
mov
adc
or
sbb
cmp
xor
loope
andb
jmp
arpl
in
aas
aad
add
or
adc
xor
adc
popf
test
xor
insb
pushl
fmull
push
jae
mov
lds
or
push
cmp
jb
out
fsubr
loop
iret
repz
sbb
and
xchg
test
or
outsb
int3
sub
inc
push
test
js
mov
push
addl
je
pop
lock
xor
mov
in
movsb
cmp
icebp
ret
pop
ret
pop
push
ja
loopne
cmp
fmulp
movl
xlat
rcrb
xchg
xor
jmp
push
jb
bswap
aas
or
xchg
mov
mov
cmc
jecxz
pop
pushf
mov
mov
in
shll
inc
lcall
pop
mov
sub
sub
scas
push
mov
xor
inc
mov
pop
stos
mov
int
fsubrl
mov
std
mov
pop
xor
shll
in
adc
mov
rorl
mov
arpl
fwait
sbb
mov
imul
movsb
cmp
or
shll
dec
stos
cmpsb
movb
fdivl
adcl
adc
cmp
js
repnz
push
pushf
push
lahf
sbb
das
pop
push
lods
lock
xor
lahf
lods
sub
dec
push
jne
insl
aam
push
mov
addl
lods
cs
push
pushf
out
mull
dec
data16
int3
mov
pop
mov
cmp
xchg
sti
ljmp
jne
and
adc
ja
je
jae
fisubrl
adc
add
scas
jle
loope
inc
and
nop
jbe
mov
mov
int3
mov
fdivs
rol
xchg
add
ret
stos
jle
cwtl
f2xm1
cmp
mov
mov
pushf
or
dec
pusha
adc
and
icebp
mov
push
sub
dec
es
mov
mov
roll
dec
pop
mov
jg
stos
mov
cmpsl
sti
inc
test
sbb
dec
fmull
push
xor
jbe
sbb
xchg
mov
into
mov
lahf
sbb
test
iret
jns
sub
fildl
mov
je
dec
inc
data16
je
mov
cmpb
mov
ljmp
jno
mov
cmpsl
pop
stc
inc
out
and
sub
cmp
sbb
sub
test
jne
int
pop
jae
inc
pop
fstps
jae
push
out
pop
cmp
inc
stos
iret
lahf
sarb
bound
clc
xor
leave
enter
dec
sbb
arpl
mov
lods
clc
dec
aas
into
cltd
and
mov
and
loop,pt
jge
cld
push
data16
dec
cmp
pop
push
push
sbb
aas
in
mov
inc
adc
or
icebp
sti
push
push
stos
jl
in
dec
xlat
scas
stos
fcomps
sub
push
scas
mov
add
in
arpl
movsl
add
pop
outsb
add
push
rorl
xor
or
xchg
mov
rcrb
mull
mov
mov
mov
inc
sbb
rclb
xor
daa
sbb
stos
adc
push
ss
in
mov
push
jmp
cltd
cmp
or
ficoms
data16
repz
push
cmpsl
ret
mov
int3
dec
shrb
aaa
int
mov
test
push
repz
push
call
xor
inc
fcmovne
lret
or
and
adc
mov
xchg
test
push
pop
jnp
jecxz
inc
inc
sub
sub
xchg
out
mov
stos
std
fidivrs
and
adc
xchg
add
adc
push
insb
test
iret
in
les
jecxz
add
das
cmp
pop
mov
lahf
mov
sub
movsb
push
roll
cmp
sbb
lods
jo
shll
push
sti
push
es
dec
out
inc
arpl
pop
xchg
aad
pop
ds
xor
aam
fdivrl
dec
stc
imul
xchg
scas
pop
test
jmp
or
mov
sub
shll
sub
jns
lahf
inc
lahf
add
shrl
mov
jbe
ss
imul
clc
pop
cmp
xchg
lods
dec
lea
fnstenv
pop
pop
jl
sarb
cmp
or
dec
loopne
test
adc
scas
add
jb
jmp
into
add
leave
xor
mov
ja
stos
test
xchg
jle
sbb
xor
inc
scas
sub
pop
ret
fists
das
pop
lds
xchg
cmp
pusha
test
ret
data16
mov
clc
out
imul
cli
push
jnp
imul
fnstenv
jle
and
adc
mov
adc
loop
stos
cld
movsb
cld
mov
stos
jl
add
test
in
or
jae
cmp
imulb
stos
mov
enter
mov
movb
dec
movsl
xchg
jnp
sti
fwait
inc
in
mov
or
call
adc
xor
and
stc
add
mov
in
std
aas
in
jg
dec
xor
insl
mov
outsl
cmp
and
jg
jge
test
sbb
push
dec
dec
push
call
icebp
xchg
jg
adc
add
rclb
and
outsl
loope
xchg
adc
les
ds
push
loop
int
pop
pop
xor
sub
mov
push
sahf
rcrb
push
sub
pushf
cmc
jge
arpl
sahf
jl
dec
cmpsl
rclb
jecxz
out
arpl
mov
push
xchg
aad
cmp
mov
inc
adc
test
jge
mov
loopne
stc
dec
cmp
cwtl
rorl
loop
sub
sbbb
mov
mov
pop
mov
lret
pop
sarl
icebp
and
push
adc
lret
sub
dec
leave
mulb
in
sahf
mov
sbb
call
cmpsb
mov
loopne
pop
push
mov
cmp
xor
mov
bound
fidivrs
dec
or
mov
adc
test
mov
sub
sahf
cmc
bound
xor
notl
xchg
leave
loopne
mov
mov
mov
andl
xchg
cmp
add
sbb
les
loope
and
insb
cwtl
andl
imul
scas
cmp
add
in
dec
inc
or
jp
mov
adc
inc
jo
lret
push
sub
ror
cmc
xor
cwtl
test
loope
add
pop
cmc
xchg
sub
jge
mov
sub
jo
dec
out
imull
insl
inc
or
ret
and
dec
pop
jg
insb
inc
je
lahf
insb
push
push
lods
js
cli
sbb
lock
mov
xor
jbe
adcb
test
or
mov
iret
jbe
fsubl
leave
arpl
mov
dec
cli
in
fisttps
clc
xor
cli
out
xchg
sub
xor
ret
xor
insl
push
popa
jg
pop
decb
pop
rorb
lcall
outsb
stos
popa
push
inc
insl
jnp
xor
les
repz
jns
insl
sub
adc
lret
lret
adc
push
sbb
cmpsl
bound
outsl
mov
and
mov
mov
fbld
loop
cld
inc
sti
add
push
jbe
xchg
push
adc
adc
mov
movsb
lret
pop
jb
push
orb
fldenv
mov
adc
call
je
or
jmp
int3
mov
mov
je
mov
rol
jle
fdivrs
push
sub
xor
push
repz
or
mov
dec
stos
ss
jmp
xor
cmp
xlat
imul
pop
in
dec
pop
sub
bound
fnstenv
stos
aad
push
inc
fs
cmpsl
call
adc
dec
cmp
inc
arpl
xor
ret
cltd
add
sub
push
rcrb
shr
and
stos
inc
iret
and
out
loopne
mov
loop
add
pop
or
adc
pop
rolb
push
lcall
push
jmp
push
or
jge
test
cli
lahf
add
pop
dec
loop
test
mov
push
lahf
pop
pusha
push
xchg
mov
or
and
push
dec
movsl
nop
data16
jecxz
xlat
lds
in
and
inc
loope
push
in
dec
cmp
jle
je
pushf
popf
jmp
pop
pushf
jmp
mov
int3
cmp
cmp
xor
dec
jecxz
mov
push
ljmp
shll
bound
xchg
daa
dec
push
dec
jge
int3
daa
outsb
stos
inc
mov
adc
mov
xor
popf
jle
jl
iret
push
push
out
xchg
sbb
fwait
repz
aad
js
mov
or
insl
add
std
cwtl
mov
sbb
add
xorb
scas
adc
popf
xor
pop
mov
cmpsl
mov
test
jg
shr
mov
sub
aas
lock
test
and
xor
lds
xchg
ja
int
jb
adc
je
jns
dec
cmp
and
in
js
notb
test
mov
dec
gs
or
pushf
xor
cmpsb
test
gs
sbbb
fdivl
mov
dec
adc
mov
xchg
xchg
push
mov
sbb
insb
adc
add
sbb
jecxz
pop
out
push
or
mov
gs
xor
in
or
cmp
adc
outsb
insb
inc
lahf
sub
repz
das
adc
dec
jns
rcrl
adc
sub
xchg
enter
cmc
adc
jecxz
mov
fs
pop
push
mov
fwait
xchg
pusha
push
out
jno
pop
loop
pop
mov
in
jle
data16
sub
ret
pop
dec
into
sbb
lret
mov
je
xor
clc
mov
lds
aaa
rol
into
scas
scas
dec
test
shr
lds
xchg
nop
repz
mov
sub
push
out
lods
pop
add
out
stos
pop
mov
sti
xor
jmp
cs
hlt
fstpl
mov
adc
outsb
push
lahf
cmp
sarb
xor
push
mov
adc
fldcw
push
jae
adc
and
and
push
jmp
fisubrs
mov
lds
jg
sbb
sti
pop
addr16
out
fdivs
test
mov
jle
or
cld
cmpl
mov
nop
xor
or
pop
pop
lret
loope
push
mov
jl
aam
enter
shlb
cwtl
test
aaa
xchg
test
pop
jne
xchg
insb
add
cmpsl
xor
sbb
in
xor
push
sbb
sub
and
testb
pop
pusha
mov
in
sub
pusha
mov
fsubp
jge
jl
and
test
push
inc
aad
js
and
cmc
repz
push
sar
jno
icebp
mov
scas
mov
loopne
mov
cli
fnstenv
adc
idivl
into
add
inc
fcompl
int3
pop
sar
repnz
cmpsb
sbbb
loope
add
hlt
mov
push
or
mov
adc
sbb
call
mov
into
push
xlat
popf
xor
push
push
into
daa
test
lret
shl
test
adc
aad
movsb
fidivs
sbb
and
xor
lea
sub
sbb
shll
pop
stos
mov
dec
sbb
sahf
cmp
rorb
loope,pt
cmp
test
inc
sbb
cmp
fwait
mov
test
aam
push
data16
cltd
inc
sub
cmp
pop
adcl
xchg
xor
push
or
pop
inc
mov
movsb
cmp
mov
ret
jnp
cmp
adc
xchg
jecxz
mov
adc
fiadds
push
je
xchg
sub
xchg
adc
cli
pop
and
cld
mov
inc
jp
fdivrs
push
outsl
jmp
test
mov
cs
push
push
sti
shrb
sbb
sti
imul
and
add
sub
lahf
mov
xchg
out
cwtl
pop
cmp
push
inc
lcall
out
mov
jmp
orl
push
leave
es
xchg
adc
push
aaa
push
imul
test
ret
push
jno
mov
pop
imull
in
push
push
enter
in
add
adc
dec
popa
jns
xchg
add
dec
inc
dec
xchg
lds
jg
cmp
jmp
fsubs
mov
xlat
push
scas
test
mov
add
shl
jp
and
lahf
dec
mov
loop
fmull
sub
shrl
push
sbb
subb
fimuls
mov
notl
repnz
push
pop
cmp
js
or
xor
pop
cs
ljmp
lods
fisttpll
movsl
or
cs
mov
adcb
stos
inc
shlw
call
sub
scas
cmp
je
push
mov
fdivrl
pushf
inc
or
ret
push
xor
lods
mov
xor
jno
rcll
mov
pop
mov
sbbb
sub
pop
sahf
fsubrl
jl
push
mov
shrb
pop
out
dec
sarl
or
sub
sub
jg
xchg
nop
loope
cmp
xor
pop
cli
repz
pop
or
sbb
dec
mov
outsb
movsl
leave
mov
adc
xlat
dec
lods
test
dec
sbb
push
lods
lds
mov
jl
les
incl
xor
xlat
pop
inc
popa
fldcw
pop
add
mov
ja
shll
mov
jg
inc
add
out
inc
ficompl
scas
inc
ss
in
mov
int3
dec
int3
pop
add
bound
jmp
inc
or
jge
loopne
pop
imul
adc
mov
mov
adc
adcl
xorl
jecxz
xchg
mov
lds
cmp
push
ret
and
aad
insl
dec
jecxz
movsl
les
fdivl
sarb
bound
out
xchg
inc
adc
js
lea
add
stos
mov
and
pop
sti
loopne
aaa
mov
int
imul
ja
push
in
rcrb
shrl
arpl
mov
pop
mov
sub
sbb
mov
jno
and
popa
sbb
dec
notl
insl
jmp
jl
cmp
xchg
stos
leave
adc
xlat
cltd
and
dec
mov
add
adc
dec
loop
sub
xor
icebp
imul
in
dec
xchg
loop
jl
pushf
push
or
sarb
out
add
pop
xor
add
lret
push
mov
dec
pop
imul
xchg
inc
xor
jmp
mov
pushaw
mov
shll
cmp
and
dec
or
insb
xchg
adc
and
inc
mov
jno
or
int3
xor
movsb
lret
lods
inc
pop
pop
cli
xchg
shrl
xchg
out
aaa
and
outsb
and
mov
je
mov
in
xor
add
push
push
nop
arpl
mov
add
mov
sbb
lods
mov
pop
mov
mov
jl
push
fcomps
xor
fidivs
js
shrb
fadds
jmp
add
mov
sub
mov
loopne
sub
cmp
cmp
into
cmp
pop
popf
pop
lret
icebp
adc
adcl
adc
sbb
aas
in
mov
pusha
fsubrs
in
or
cli
ja
in
cmpl
add
lret
cld
cmp
cmp
les
std
stc
mov
leave
mov
dec
in
push
aam
adc
mov
jo
pushf
mov
push
aas
inc
fsubs
subb
fnstcw
push
pop
sbb
push
js
dec
addr16
das
xchg
xchg
dec
sbb
mov
mov
adc
jb
and
push
dec
mov
negl
loopne
push
sub
out
std
xor
loopne
sub
pop
test
sub
cmp
push
movsb
mov
pusha
out
test
lret
js
dec
dec
mov
lods
cmp
mov
or
js
loop
cwtd
pop
je
push
fbstp
mov
jb
xchg
sub
ret
sahf
testl
mov
lahf
sub
pop
sub
add
ret
std
dec
insl
aad
xchg
sbb
sub
cmp
sbb
enter
ja
jb
int3
xchg
mov
dec
dec
in
in
mov
pop
pop
add
stos
mov
sub
mov
inc
sbb
dec
bound
xchg
dec
loop
add
ds
bound
xchg
sub
out
jbe
or
out
jb
cmp
cmpsb
out
mov
data16
test
pop
mov
dec
loop
sbb
add
imul
lock
cmpsb
dec
scas
inc
in
nop
repnz
ss
pop
push
push
int3
inc
adc
jecxz
mov
fmull
fisubrl
jnp
lea
ja
ret
cltd
inc
and
fdivs
jl
sub
pop
les
adc
xchg
cwtl
pusha
gs
int3
xchg
ret
cmp
mov
in
cmp
jae
cmpl
push
ss
call
jb
jb
ficoms
imul
mov
fs
arpl
inc
push
mov
pop
dec
repz
shufps
jnp
mov
loopne
hlt
and
popa
mov
sbb
add
hlt
mov
or
sub
out
out
and
loopne
or
adc
xchg
frstor
sti
dec
repnz
imul
lods
jns
fistps
cmp
xchg
sub
mov
repnz
test
inc
in
or
jns
stc
icebp
cmp
lds
xor
or
cmp
pop
fbstp
out
add
jo
add
std
or
mov
mov
fst
push
in
lret
test
mov
fs
dec
cmp
pop
and
roll
data16
movsl
in
ja
or
mov
add
daa
std
mov
xchg
lock
ret
xchg
push
mov
popa
jae
mov
dec
mov
push
inc
sbb
adc
lret
or
xchg
cmp
pop
sbb
xor
insl
inc
mov
ret
das
adc
movsb
fbld
sub
pop
xor
testl
cmp
sahf
mov
call
fnstsw
bound
push
push
aad
enter
insb
mov
js
mov
add
jp
mov
sub
scas
push
sub
repz
sarl
nop
xor
inc
xchg
aas
xchg
and
and
cmp
jg
sbb
stos
jb
and
gs
push
fdiv
inc
xor
ficomps
add
jnp
gs
cmc
add
mov
rcll
fsubrs
jge
dec
enter
outsl
jmp
xchg
arpl
pop
cmp
and
dec
jge
push
and
inc
xchg
xorl
mov
jne
jmp
dec
cmp
pop
dec
jno
pop
inc
dec
in
ljmp
lcall
loopne
in
push
jp
out
adc
int
and
pop
aaa
clc
add
mov
les
or
enter
mov
jmp
sub
cmp
mov
mov
aam
sub
dec
sbb
pushf
inc
mov
ljmp
addr16
pop
shlb
cwtl
in
or
mov
adc
popl
in
test
mov
ds
push
inc
mov
fcmovne
xchg
add
xor
lods
mov
cmpl
out
inc
dec
fidivrs
addr16
movsb
test
icebp
or
pop
xor
in
xchg
jge
push
sarw
int
inc
rcr
outsl
sbb
jno
pop
adc
icebp
js
mov
popa
jge
js
in
pop
mov
pop
out
cmp
test
clc
imul
arpl
cmp
mov
cwtl
mov
mov
movsl
aad
pushf
sub
cmpl
push
call
lret
sub
pop
xor
stos
cs
andl
xor
montmul
cmpsb
inc
fstl
fcomi
sub
jg
pop
cld
push
mov
jnp
adc
jbe
loope
inc
fsubs
adc
divl
loop
or
mov
jge
adc
test
push
and
push
hlt
or
stos
test
ret
in
ss
dec
xchg
xchg
test
sub
popf
test
sub
jle
test
dec
ret
loop
cli
mov
xor
lods
sbbl
sub
fbstp
enter
pop
std
xchg
cmpsl
hlt
push
call
mov
pop
pop
add
xor
fldenv
lods
add
daa
jbe
fisubrs
lea
jmp
jbe
jp
mov
adc
sub
xor
mov
adc
sub
adc
adc
sub
call
test
aas
hlt
pop
mov
cmp
sahf
fisubl
rorb
scas
jne
lcall
mov
or
or
ds
lret
insb
fsubs
lahf
and
dec
sub
imul
cld
out
int
sbb
dec
mov
out
incl
lret
sub
stos
inc
shl
inc
frstor
repz
das
xchg
fld
sub
pop
cmpsb
push
loope
daa
pop
pop
dec
xchg
scas
int3
ss
repnz
outsb
mov
ret
shrb
iret
mov
mov
pop
xchg
cmp
js
out
pushf
and
popa
mov
arpl
push
fisttps
lock
push
jl,pn
pop
ds
shll
outsb
incl
loop
mov
and
adc
pop
xchg
imul
mov
stc
test
xchg
and
mov
ds
insl
pop
lret
pusha
sbb
je
push
mov
inc
mov
int3
pushf
pop
les
sbb
push
add
insb
add
stos
lret
sub
mov
sub
out
icebp
movsb
inc
flds
push
mov
clc
fsubs
ss
mov
jbe
andb
call
adc
xchg
cmc
fisubs
xchg
inc
sti
push
sti
mov
ljmp
test
jecxz
dec
mov
stos
mov
movsl
cmpsl
ret
stos
inc
xor
xor
xchg
mov
xchg
rolb
xchg
push
lahf
mov
lds
sub
test
jne
inc
test
mov
push
cmp
pop
repz
pop
jmp
xchg
aad
mov
mov
mov
adc
pop
data16
lods
push
and
pop
hlt
jmp
or
mov
mov
insb
outsl
mov
or
or
sub
movsl
add
mov
rol
inc
fwait
xor
cmpb
dec
pop
add
femms
test
mov
cmp
mov
mov
or
push
xor
jno
inc
or
lahf
out
add
js
adc
lods
mov
pop
movsl
cmpsl
cmpsb
cmp
add
add
test
mov
and
xchg
dec
push
dec
notl
leave
mov
cltd
jae
leave
cmpsb
test
mov
or
push
mov
daa
mov
popa
loopne
cld
xlat
xorl
lea
ljmp
lods
sub
fistpl
jnp
sbbl
xchg
jbe
mov
rcrb
lds
fistpl
adc
fs
jmp
loop
mov
adc
xor
aas
jecxz
arpl
lret
ret
jecxz
ja
aad
in
push
dec
xchg
sub
lods
lock
sub
pop
push
ja
das
mov
cli
lds
or
mov
xor
hlt
adc
lods
dec
sbb
test
jge
js
dec
mov
cmc
rol
call
dec
add
mov
daa
inc
mov
mov
push
sbb
push
push
dec
sub
fistps
fdivs
cmp
shlb
fcomps
in
test
imul
test
add
dec
xchg
lods
stos
xchg
nop
std
push
push
lret
bound
fnsave
loop
loope
jb
shlb
loopne
xor
lea
mov
mov
mov
jb
into
mov
rsqrtps
or
outsl
or
test
jbe
cmp
cs
popf
idiv
inc
cld
jl
leave
sub
mov
jmp
sub
inc
xchg
mov
gs
xchg
ret
mov
imul
dec
add
jp
sub
sub
stos
inc
add
xchg
mov
fisubrl
push
in
cltd
jle
inc
lret
lret
push
or
inc
push
pusha
jbe
sub
xchg
lods
push
mov
test
inc
cmc
or
add
cld
jg
test
sbbl
mov
cmp
sbb
push
outsl
xor
jo
adc
mov
adc
stos
ss
lahf
loop
add
outsb
lret
outsb
jle
insb
jno
faddl
push
fsub
pop
fmulp
ja
arpl
jnp
or
loopne
aaa
or
pop
cmp
test
test
dec
aas
sar
jns
es
subb
mulb
push
jl
lret
xor
mov
add
mov
mov
lret
cmp
out
movb
mul
loope
arpl
xor
mov
xchg
lret
cmp
daa
insl
lods
outsl
daa
test
pop
mulb
addl
dec
push
xchg
addl
or
xchg
pop
test
mov
ja
and
xlat
ds
addr16
outsb
test
movsb
inc
jns
inc
stos
push
popa
add
adcl
nop
push
mov
xor
fwait
stos
test
rclb
push
cmpsb
xor
aad
sbb
adc
pop
xor
or
mov
sub
mov
pop
insb
sbb
mov
push
cmp
jnp
cmp
in
push
push
nop
aaa
or
dec
or
imul
daa
popf
sub
cmp
add
pop
xor
loop
lock
cli
mov
add
inc
xlat
sbbl
shll
sub
js
ss
jnp
test
lret
jmp
pop
adc
test
jl
outsl
add
mov
out
and
sub
cmp
push
cmpsl
outsb
addr16
pushf
arpl
outsl
adc
test
mov
or
test
cmp
fisttpll
xchg
aaa
or
jns
add
les
xor
or
out
fsubs
jb
movsl
add
lods
mov
push
and
call
lcall
fwait
sti
lcall
pop
sub
scas
add
adc
pushf
aaa
mov
imul
jnp
and
daa
add
scas
mov
nop
in
xchg
insb
xchg
testl
addr16
fldl
inc
xchg
push
stos
push
imul
push
cld
inc
fisubs
push
pop
fmuls
mov
cmp
mov
cmp
mov
int3
clc
xchg
xchg
mov
jmp
ss
xlat
insl
or
mov
ja
sbbl
lods
xor
xchg
add
inc
jecxz
push
xlat
jmp
push
cmp
inc
sub
fcmovnb
jne
aaa
jo
jmp
mov
ret
fnstsw
jns
imul
test
scas
test
ljmp
rcrl
mov
das
push
jo
movsb
mov
scas
incl
dec
popa
cwtl
xchg
sub
test
in
mov
fists
int3
stos
leave
shl
iret
lret
push
inc
and
push
call
xor
dec
loope
adc
aaa
inc
repnz
sub
loopne
push
push
mov
loope
pushf
xchg
sub
dec
in
mov
or
push
sub
add
sub
adc
aaa
inc
cmp
js
fwait
and
sbb
jae
shll
dec
int3
inc
vhsubpd
cmp
push
sahf
fsubs
mov
imul
lock
shlb
jecxz
or
test
das
mov
insl
hlt
adc
jge
jmp
mov
pop
sub
add
mov
scas
loope
outsl
adc
test
sahf
jecxz
sub
jl
imul
data16
mov
jecxz
pushf
dec
mov
shl
mov
add
jnp
pusha
jle
fdivrl
xchg
imul
cmp
xor
dec
sbb
dec
mov
xchg
adc
pushf
ds
addr16
arpl
gs
jg
nopl
aaa
push
xchg
inc
inc
fists
and
les
pop
aam
pusha
cmp
add
jp
lods
sbb
adc
pop
sbbb
add
sub
dec
pop
sub
mov
insb
out
sbb
sbb
es
cmp
dec
rolb
add
insb
inc
xchg
incl
sbb
aas
xchg
sub
cmovno
inc
adc
lods
mov
pop
ret
lods
xorl
or
je
gs
shrb
sub
add
xor
gs
inc
pop
jl
add
inc
sub
std
xchg
hlt
xchg
ss
ret
stos
shll
mov
ds
and
inc
pop
sbb
sbb
xor
and
mov
mov
stos
mov
push
push
movl
pop
lret
and
data16
sti
adc
cwtl
add
mov
xchg
mov
push
fldenv
sbb
andl
sbb
rolb
outsl
stc
cmpsl
andb
sbb
cltd
incb
sub
fdiv
push
jle
mov
inc
xchg
ds
or
clc
sbb
pop
sahf
xchg
mov
iret
maxps
mov
inc
adc
repz
insb
and
push
jle
loop
pop
push
cmc
inc
xlat
and
inc
pop
cmc
ja
mov
arpl
clc
outsl
outsb
sub
in
notb
stos
shll
xchg
cmp
xor
xchg
dec
in
adc
xchg
inc
sbb
push
xchg
nop
or
ljmp
test
sti
ss
sbb
rcll
mov
xchg
xor
filds
outsb
jl
push
popf
stc
add
adc
iret
nop
orl
pusha
sbb
shll
mov
adc
rorb
out
stos
inc
push
adc
mov
xor
cmpsb
add
mov
jle
dec
imul
inc
int3
push
mov
push
imul
push
cmpsb
popa
subl
fstps
or
test
movsb
daa
data16
xor
inc
outsb
lds
arpl
ret
adc
and
sbb
in
jnp
xor
adc
je
xchg
xor
mov
mov
and
xchg
scas
dec
or
add
sbb
int
jbe
inc
jecxz
mov
cmc
push
and
movsb
repnz
cld
out
jo
xor
add
outsl
add
and
fldt
enter
scas
fdivl
pop
fmul
data16
mov
je
std
mov
mov
insl
pop
add
xor
cmp
or
sbb
and
cld
push
inc
das
or
fucom
jl
inc
mov
scas
push
sub
add
mov
or
ret
jmp
mov
adc
daa
mov
sub
outsl
or
and
inc
mov
push
leave
aam
pop
jle
test
pusha
ficoml
cmp
mov
addr16
xchg
xlat
sub
sub
pop
jmp
cmp
cmpsb
rcrb
push
xor
mov
xchg
mov
shl
jne
cmpsb
fmul
dec
and
shl
popa
aam
dec
pop
shlb
sub
push
jecxz
pop
jno
arpl
inc
pop
scas
jae
test
mov
xor
fwait
jb
sub
scas
push
ret
aaa
std
fisubl
test
dec
adc
xor
mov
mov
inc
clc
jae
and
inc
pop
dec
jg
push
mov
dec
push
pop
add
mov
shlb
mov
insl
inc
mov
and
dec
loopne
sub
mov
cmp
loope
cmp
xchg
sti
jae
pop
mov
dec
inc
dec
addr16
into
mov
push
xchg
adc
mov
and
mov
loope
js
enter
add
mov
fisubl
cmc
inc
fisubs
lret
or
jl
xchg
call
pop
sti
jbe
in
lcall
dec
or
xlat
stc
inc
add
out
cwtl
mov
add
push
cmp
inc
fisubs
ret
gs
repz
jmp
adc
adc
and
sbb
jnp
imul
jg
xchg
cs
jl
hlt
mov
test
sti
mov
insl
mov
cmpsl
mov
ret
push
mov
xchg
ffreep
mov
mov
push
sti
sub
test
cmp
and
and
mov
bnd
lods
mov
movsl
push
xchg
sbb
cld
and
mov
test
push
testl
mov
fisubrs
add
add
adc
daa
jecxz
xor
leave
add
shll
lret
icebp
stos
jg
jle
int3
js
aas
xchg
dec
and
or
loop
jo
mov
lret
dec
jns
dec
sub
call
cmp
sbb
fimull
movsl
sti
fwait
mov
sub
enter
sbb
xchg
fwait
pop
mov
sub
adc
dec
notb
leave
cmp
outsb
negb
mov
aas
add
in
cmp
jb
mov
pop
push
jbe
fidivrl
aam
sub
or
push
jp
stos
fstps
cs
lahf
push
clc
push
out
jo
enter
lret
out
loopne
in
adc
add
js
cmp
adc
ffreep
fbstp
mov
jge
rclb
sub
pushf
xor
lds
fidivl
push
push
mov
sub
cmp
mov
int
cmp
dec
mov
xchg
xlat
fsubr
pop
cwtl
sub
adc
push
mov
dec
aam
cmc
in
es
mov
cmp
out
shrl
sti
ss
mov
mov
dec
xor
pushl
jo
adc
pop
and
mov
inc
push
rcrb
add
sbb
lods
add
mov
test
sbb
call
adcb
and
dec
pop
arpl
lcall
lea
mov
lock
lods
mov
leave
movsl
in
adc
popa
inc
xor
add
jg
flds
notb
aaa
push
lods
adc
lods
jl
sub
arpl
shrb
pop
cmpsb
mov
xchg
jg
lds
mov
push
push
lods
std
loopne
out
inc
loop
mov
sti
es
test
mov
mov
test
sbb
mov
loope
mov
loope
pop
sahf
and
xchg
sbb
and
cmc
dec
gs
arpl
insb
cli
xchg
cmpsb
movsl
cmp
lock
fistpll
pop
call
cmpsl
xor
sub
xor
mov
out
fs
jecxz
xor
mov
xchg
mov
loop
sub
dec
sub
repz
push
fsubrl
xchg
sub
mov
xchg
bound
out
xor
loopne
jo
jae
push
out
test
sti
mov
bswap
jecxz
out
push
leave
push
mov
fidivl
mov
mov
jle
cmp
push
shl
lahf
and
inc
sarl
into
mov
outsb
lock
insl
jmp
fsubr
lock
pop
cmp
mov
or
icebp
cmp
jo
dec
pushf
add
dec
mov
pop
inc
dec
xchg
leave
bound
mov
jmp
push
jns
inc
test
mov
mov
insb
push
daa
jne
adc
lcall
out
in
mov
inc
or
outsb
lea
fisttpl
xor
aas
cld
scas
inc
push
lcall
jno
outsb
sub
repz
leave
insl
mov
lahf
ljmp
jno
add
repz
lock
xchg
ljmp
and
call
or
jmp
xchg
dec
xchg
mov
in
or
addb
imul
jne
inc
xchg
sbb
pop
mov
jb
mov
cmp
dec
stos
notb
inc
enter
pop
fwait
jae
cmp
js
andl
pop
lods
shrb
mov
xor
movsl
jns
push
cmpsb
cmp
mov
lret
in
fisubs
adc
xor
push
and
dec
and
cltd
xor
push
add
inc
jo
mov
aad
jbe
ds
js
fisubs
push
mov
mov
lahf
decb
jge
rcrb
aad
das
scas
fdiv
mov
push
jns
push
leave
jo
push
mov
push
test
inc
sub
mov
js
dec
fnsave
repnz
dec
lods
jmp
fdivl
mov
sub
pusha
lret
stos
ljmp
push
ja
test
mov
cmp
fidivs
pop
scas
inc
jl
or
popf
lret
jb
pop
mov
add
daa
dec
loopne
mov
nop
test
dec
dec
cs
lret
add
clc
imul
popa
bound
fstpl
test
jns
mov
push
mov
or
push
xlat
in
out
fstpt
loop
inc
mov
cld
lds
aad
cmpsl
or
int
aam
cs
in
mov
in
in
dec
aas
dec
xchg
hlt
mov
xlat
xchg
sub
push
or
or
repnz
stc
adc
add
ror
test
cs
fbstp
in
lods
pop
jo
out
add
xchg
cld
sbbb
add
sub
imul
vphaddbw
insb
mov
cld
ja
pop
xor
pop
push
fisubl
mov
cmpsl
outsl
out
hlt
adc
sub
inc
sbb
pop
outsl
stc
mov
ficomps
mov
pop
add
or
adc
scas
xchg
xor
imul
sub
mov
jmp
popf
xchg
scas
imul
xchg
cmp
mov
loopne
jno
aaa
clc
imul
or
and
stos
cmp
sar
sti
xchg
mov
cld
es
addr16
movb
and
femms
fnsave
jle
cmpsl
mov
data16
into
fs
mov
push
subb
jo
jns
lahf
ret
xchg
testl
inc
lahf
push
sub
cmp
out
dec
faddp
popa
sub
rcll
cmc
test
std
xchg
mov
ja
jae
dec
jae
fmuls
xchg
jae
jne
sahf
sbb
hlt
xor
pop
xor
xchg
adc
lds
dec
fsubs
push
ljmp
call
jg
imul
sbb
scas
jp
das
insb
xchg
fdivrl
mov
arpl
sbb
icebp
lock
in
stos
fadds
xchg
das
pushf
mov
leave
pushf
lcall
or
jns
fimuls
cwtl
or
movsw
sub
mov
xor
std
fs
dec
call
leave
xchg
xor
or
pop
cmp
call
scas
fsubrs
loope
cmp
in
icebp
xchg
fwait
orb
test
sbb
cmpl
mov
in
outsb
cmc
aad
nop
lahf
dec
sahf
lds
push
or
cmp
jmp
jb
xlat
push
imull
cli
std
xchg
adc
add
mov
mov
mov
cmc
xchg
jnp
add
inc
jecxz
int3
sahf
add
mov
sti
mov
fiaddl
mov
sbb
dec
in
mov
nop
stos
lds
nop
push
in
lret
bound
sub
sahf
mov
stos
in
cmp
ss
lcall
add
std
add
lods
mov
adc
push
test
sahf
mov
das
and
jp
jbe
repnz
pop
scas
xchg
adc
xchg
adc
mov
je
lcall
and
pop
fadds
xor
inc
mov
fisttpl
sub
fs
mov
insl
pop
dec
fidivs
sbb
jle
cmp
aas
out
adc
gs
ret
pop
aaa
or
loop
out
fistpll
aam
jae
aam
sub
and
push
cltd
stos
cmc
or
repz
jge
loopne
mov
push
insl
shll
push
mov
dec
jecxz
les
rclb
cmpsb
rolb
clc
movl
int3
and
mov
lcall
in
push
pop
repnz
aas
imul
scas
pop
scas
loopne
daa
ss
lods
inc
add
adc
jb
jp
push
sub
or
xchg
call
loope
and
icebp
xor
jle
jle
test
pop
mov
mov
push
adc
fsubrl
icebp
pop
outsl
cmp
in
ret
loop
js
push
sub
fbld
dec
movsl
ja
xor
stos
call
mov
bnd
push
leave
cmp
or
xlat
in
and
dec
xor
jbe
cs
repnz
ds
push
bound
sub
call
loop
pushf
sub
xchg
push
mov
xchg
or
push
or
rcrl
and
sub
leave
push
je
mov
jmp
and
jle
jnp
outsl
imul
mov
mov
jns
mov
or
pop
add
add
addr16
jne
mov
orl
xchg
mov
das
dec
mov
jbe
lods
call
stos
mov
data16
inc
mov
cld
out
stos
daa
dec
lret
inc
pop
pop
je
lock
add
out
sbb
jg
into
enter
lea
stos
jo
xchg
test
inc
or
cmp
ret
mov
and
shrl
lock
int
rcrl
inc
jge
das
dec
arpl
stos
sub
jb
loop
jmp
jecxz
mov
add
add
out
or
pop
scas
cmc
std
inc
push
lods
mov
rclb
add
sbb
pop
xor
push
lods
mov
loopne
out
scas
mov
jne
adcb
imul
add
lds
js
shr
ja
mov
repz
pusha
sbb
xchg
xchg
add
in
push
and
adc
aas
xchg
sub
insl
lea
loope
push
sub
add
test
push
sbbl
mov
and
fst
aas
clc
or
dec
scas
ja
mov
mov
push
cs
xchg
cwtl
xchg
out
jns
sub
inc
mov
inc
out
adc
mov
das
movsb
fisttpl
leave
mov
push
add
outsb
mov
test
adc
leave
dec
xor
jge
pop
hlt
inc
and
dec
rorb
movsb
jl
inc
das
sub
aad
scas
cmc
jmp
pushf
scas
movsb
les
mov
iret
push
mov
adc
mov
mov
or
shrb
mov
mov
test
sbb
push
data16
es
subl
stc
lea
sub
shlb
loop
enter
jle
add
xlat
and
mov
int3
arpl
mov
into
fnstsw
das
lods
push
jne
mov
cmp
push
inc
rorb
fsubs
xor
sbb
or
jg
lock
in
sbbl
add
outsb
and
in
xchg
xor
outsl
jl
pushf
adc
notb
add
roll
lret
loope
jmp
icebp
iret
inc
jbe
ss
int
adc
jg
xchg
aas
cmpsl
cmpsb
jo
bound
andl
xor
lods
call
jb
les
push
push
clc
nop
and
pop
mov
pop
and
dec
push
add
push
call
hlt
fnstenv
push
mov
dec
push
cwtl
jae
sbb
dec
aam
adc
in
xrelease
jns
and
gs
lods
push
xchg
cmovae
je
jge
repnz
push
jge
dec
pop
dec
inc
das
aas
rcll
sbb
pop
dec
shlb
cld
mov
rol
cltd
and
bound
shll
adc
lea
mov
in
add
cltd
hlt
pop
jb
cltd
xor
jo
ret
sbb
push
jecxz
dec
sahf
add
xor
iret
punpcklbw
xchg
lods
in
jno
cmp
xchg
jmp
dec
sbbl
jmp
loope
cmpsb
mov
inc
jae
pop
sahf
adc
dec
dec
pop
adc
les
cmp
repnz
xchg
sti
shrl
call
or
cmp
lahf
adc
mov
cmp
enter
clc
das
repz
lods
pop
mov
fisubl
popf
push
mov
outsl
scas
sub
subb
std
cmpsl
cmp
inc
cli
dec
push
xlat
ret
xchg
jnp
je
loopne
xchg
cmpsb
mov
inc
out
sub
dec
sbb
iret
outsw
push
in
std
cli
shrl
stos
ret
cmp
sbb
call
sub
popf
or
add
out
mov
ret
xor
mov
or
fsubrs
xor
mov
stc
ljmp
xor
je
adc
xor
data16
adc
loope
mov
mov
pop
push
mov
hlt
jle
cmp
pop
pop
push
jne
jg
push
enter
xchg
cmpsb
push
ljmp
xchg
mov
dec
xor
and
jge
int
dec
inc
cmp
xchg
cmp
popf
lahf
out
xor
sub
dec
and
xchg
jecxz
aaa
sbb
decb
cmc
mov
out
xchg
fldenv
sbb
data16
xchg
jno
push
jecxz
pop
repz
sub
cmp
pop
mov
nop
sarb
xor
cltd
inc
scas
inc
scas
mov
mov
ja
cmpsb
stos
shr
sub
cmp
adc
sbbb
add
divl
in
mov
pop
fldenv
xchg
mov
dec
mov
std
out
mov
push
mov
aam
cbtw
loopne
repnz
int3
dec
cwtl
cs
lods
mov
dec
sub
aas
out
sub
cmp
dec
xchg
pop
xchg
call
loope
mov
xchg
cmovl
pop
lahf
jecxz
inc
jl
lcall
popa
xor
out
mov
aam
dec
push
mov
or
out
sbb
jg
int3
jg
add
data16
movsl
mov
add
sbb
cmp
push
call
testb
mov
push
rcr
push
adc
ret
mov
pop
iret
rcrb
lods
movsl
sti
mov
lret
adc
mov
dec
xchg
xor
imul
call
mov
loop
mov
sub
add
insb
cmp
push
clc
or
mov
sub
dec
fildll
aaa
cld
pop
ds
xchg
jge
inc
and
mov
loop
add
inc
pop
icebp
fwait
push
out
or
pushl
std
scas
subb
icebp
jno
ljmp
jp
in
or
inc
jmp
leave
push
and
dec
pop
mov
mov
jg
test
das
and
dec
lret
fwait
xor
jo
and
nop
mov
cmp
xor
fndisi(8087
adc
loopne
add
mov
push
or
aam
sbbl
pop
jecxz
fs
sub
lock
xor
add
pushf
mov
out
das
dec
mov
jae
ljmp
cmpsl
or
imul
test
sub
out
pop
jmp
dec
adc
adc
in
movsb
idiv
xchg
push
mov
adc
jb
jne
cmpsl
adc
sbb
mov
mov
test
add
loopne
lahf
stos
orb
aad
in
cmp
icebp
pop
outsb
inc
mov
xor
mov
sub
fs
jecxz
call
scas
out
repz
mov
jge
fwait
sbb
je
ret
data16
push
in
pop
add
inc
adc
popf
xor
sub
pop
test
mov
clc
push
testb
push
movsl
pop
mov
jo
mov
mov
ret
loopne
xchg
les
ret
inc
mov
mov
test
cmpsl
lods
jae
push
jo
jp
adcl
lret
rcr
mov
stos
in
sbb
aad
or
sbb
xchg
sbb
dec
jl
mov
sbbl
or
sub
aas
push
jle
test
dec
jns
stc
nop
daa
jecxz
test
mov
test
or
add
xor
pop
cmp
arpl
outsl
pop
call
jae
ljmp
std
stos
imul
lret
scas
and
fmuls
cli
push
inc
lock
xchg
pusha
pop
push
inc
mov
push
test
sar
shr
andb
or
mov
dec
cwtl
xchg
ret
aam
clc
sub
das
sti
xchg
and
adc
shr
mov
dec
cs
mov
xor
cmp
mov
sbb
jl
mov
lret
or
mov
sbb
insb
mov
cmp
jg
andl
icebp
sbb
jne
adc
shll
shll
cwtl
push
cs
pusha
lea
jle
jmp
push
jbe
inc
cli
mov
mov
sarl
sarb
int
movsb
stos
push
ljmp
leave
cmp
dec
je
or
sbb
nop
xor
mov
sub
adc
mov
or
leave
mov
jae
std
xchg
out
sarb
std
cmp
cmpsb
fidivl
sub
mov
add
and
xchg
pop
jmp
mov
xchg
xchg
push
lretw
bound
in
mov
pop
cmc
fstl
insl
inc
push
test
loop
xor
xchg
fs
add
dec
gs
pushf
xor
ss
cmpsl
jge
mov
pop
cmp
dec
adc
or
jp
cmp
xor
mov
cmp
jo
sbb
inc
fistl
in
jmp
ret
xchg
lea
mov
cmp
sahf
xor
leave
stc
nop
mov
xchg
jecxz
mov
daa
push
sbb
pusha
inc
xor
xor
nop
jne
cmc
icebp
sbb
push
flds
jno
aaa
imul
aaa
outsb
insl
mov
sbb
cld
int3
mov
cmp
pop
push
xlat
iret
xchg
out
ret
adc
xor
add
test
lret
jp
daa
mov
dec
mov
int3
xor
enter
loope
dec
in
arpl
xchg
or
into
xlat
or
mov
or
xchg
push
cmp
mov
rsm
mov
sbb
mov
jnp
sahf
call
test
inc
pop
flds
inc
lock
out
lods
into
add
or
dec
mov
jg
cmp
jnp
lret
movsb
cs
enter
subl
aas
fsubs
insb
rcr
jmp
xchg
test
popa
lret
sbb
insb
jnp
test
repnz
push
cltd
in
shr
pop
sub
and
push
cmp
cs
mov
add
mov
in
cmc
mov
xor
clc
dec
adc
out
cli
psllq
inc
jmp
sub
cmpsl
in
xor
and
jb
test
jl
mov
push
sbb
lock
xchg
in
gs
inc
call
jno
pop
sub
dec
inc
adc
inc
xchg
cmovno
sbb
jle
cmp
cmc
lret
xor
pushf
cli
test
adc
cmpsl
push
jb
add
xor
out
repz
pop
push
out
out
ficoms
jg
mov
stos
mov
jae
push
clc
aad
push
daa
mov
pop
das
dec
cld
sar
pop
add
inc
sbb
fbstp
xchg
fstpt
mov
xor
imull
lds
repz
cld
xchg
sub
mov
or
int
into
jne
mov
fmull
and
icebp
nop
mov
xchg
mov
into
jg
cwtl
das
enter
xchg
dec
xor
sub
xchg
sbb
mov
xchg
popf
inc
xlat
push
call
cmp
dec
ss
inc
fcmove
nop
daa
std
inc
in
pushl
scas
inc
or
movsb
ljmp
xchg
mov
inc
sbb
sbb
sbb
mov
mov
sahf
clc
out
cmp
or
jno
dec
xor
pop
xor
ret
js
pop
es
or
or
cmp
ljmp
jno
test
ss
out
mov
ja
xchg
mov
dec
testb
notl
arpl
jmp
or
stc
inc
jmp
pop
and
addb
add
ss
mov
push
stc
les
sub
xchg
insl
push
or
or
test
push
sbb
mov
adc
lods
subl
or
orl
jmp
xchg
and
ljmp
xor
movsb
adc
enter
mov
rorb
pop
add
xlat
push
xchg
inc
shl
xor
popa
sub
inc
mov
ss
punpcklwd
idivb
push
out
adc
stc
adc
inc
mov
ljmp
mov
mov
fidivl
pop
cmp
inc
mov
mov
lock
mov
das
fidivs
inc
ja
dec
movsb
pop
stc
fs
lods
sub
jle
mov
xchg
add
das
and
xor
ret
mov
ss
pop
pop
mov
dec
push
fwait
test
test
mov
fsubrl
cmp
mov
mov
and
or
mov
int
int
das
jecxz
fwait
test
pushf
sbb
lret
and
or
pop
imul
je
pop
add
mov
fisttpl
dec
sarl
pop
mov
inc
aam
aam
imul
push
stos
jne
pushf
mov
cmpsb
je
leave
pusha
cmp
cs
dec
lea
imul
sbb
cwtl
das
pop
sahf
xor
daa
jo
sub
out
cli
pop
jno
mov
scas
inc
idivl
inc
xchg
cmp
sbb
cmpsl
adc
cli
dec
cmp
sbb
int
out
test
out
adc
jo
dec
mov
sahf
xor
cld
enter
insl
push
mov
jns
sub
adc
cmp
outsl
and
out
jns
test
sbb
test
out
jl
sub
add
andb
pop
movsb
lods
pop
insb
adcb
in
mov
insb
add
in
mov
xchg
jecxz
pusha
sbb
int3
xor
into
scas
mov
gs
push
mov
or
or
fstp
aad
scas
mov
sahf
pop
decb
sbb
int3
sub
sub
pop
movsb
xchg
or
fisubrs
cmp
in
mov
push
in
mov
pop
mov
jnp
dec
sub
dec
push
sub
jg
fcompl
mov
push
andl
jp
push
in
sub
and
mov
into
sub
arpl
cmp
push
sbbl
mov
in
jl
dec
pop
loope
jae
iret
or
adc
enter
mov
sar
std
mov
mov
pop
xchg
push
cmp
into
cmpsb
pop
movsl
adc
push
push
fisubs
je
dec
lret
cmp
push
mov
clc
mov
mov
mov
pop
adc
jns
insb
mov
roll
adc
xor
gs
scas
popa
icebp
ja
cmp
sub
sub
push
jb
mov
repz
fimull
and
mov
dec
out
nop
and
jno
or
ret
cmp
movsb
mov
fdivs
push
adc
ficompl
lods
int
sbb
push
jo
push
cmp
repz
mov
bound
xorb
sbb
xchg
cmpsb
mov
xor
pop
hlt
imul
mov
mov
cli
xchg
push
ret
adc
cltd
jbe
ds
push
popf
cmp
or
sahf
xor
add
dec
cmp
int3
fsubl
push
jae
ds
pop
jl
jge
pop
push
pop
out
repnz
add
pop
std
adc
fcom
pop
sbb
lods
cmp
pop
shll
shll
pop
jo
mov
andl
jns
mulb
lret
scas
je
or
mov
dec
sub
stos
dec
dec
sub
ret
pop
insb
lret
test
adc
xor
movsb
sub
js
lds
sbb
or
jle
jb
mov
roll
mull
inc
pushf
mov
push
test
divl
add
lahf
jns
jbe
mov
mov
pushf
cltd
push
jl
pop
lods
mov
nop
push
push
pushf
repz
sti
stc
mov
push
scas
xlat
ficoml
mov
jno
test
clc
cmp
mov
sbb
mov
movsl
std
daa
mov
test
xchg
pop
push
and
icebp
fldenv
ss
push
cli
adcb
call
jbe
dec
sbb
push
adc
nop
pop
popa
mov
or
js
sub
daa
stos
push
test
cltd
inc
scas
inc
in
std
sbb
cmp
inc
mov
test
mov
pop
and
pop
push
dec
mov
add
pop
cmp
pusha
mov
lret
adc
inc
or
cmp
movsb
scas
test
mov
push
push
test
cmp
xchg
idivl
mov
sbb
ds
and
inc
jl
outsb
scas
push
inc
push
shl
xchg
push
orl
push
inc
adc
dec
fnstsw
outsb
insl
add
cmp
adc
dec
je
rolb
out
jl
and
ror
cli
xchg
add
test
jae
mov
xor
arpl
dec
fistpl
outsb
jno
cmc
pushf
xor
leave
dec
xor
lret
enter
in
sahf
and
mov
dec
and
scas
dec
dec
mov
cmp
wbinvd
mov
pop
sub
fstpl
jp
add
cwtl
push
imul
sbb
fptan
scas
inc
push
sbbl
sub
add
cltd
out
je
push
scas
test
jae
and
and
into
shlb
stos
in
sbb
adc
mov
addr16
jle
jae
cwtl
sub
pop
clc
sub
mov
dec
jns
jge
sub
jbe
ret
push
mov
orb
adc
xchg
fiadds
cs
cmp
std
sbb
xchg
sub
dec
rcrl
sub
adc
mov
mov
stc
aaa
movsl
jp
or
pop
sahf
std
rclb
xchg
loope
and
cmovb
ret
into
arpl
int3
adc
mov
ja
cwtl
aam
jecxz
dec
in
jl
inc
push
imul
xor
cmp
andb
fcomp
loope
adc
loop
movsl
or
mov
add
lock
sub
dec
in
je
mov
xor
inc
popa
popf
insb
out
out
cld
sbb
cs
fsubp
stc
mov
jbe
rol
mov
pop
cmpsb
xor
fwait
push
fdivrl
dec
push
sub
aam
rcrl
notb
arpl
cmp
popa
sbbl
cltd
or
push
xor
ja
xchg
mov
jg
jae
and
andb
stc
or
lahf
jecxz
mov
jno
mov
test
sub
dec
add
enter
sub
es
xor
push
jo
mov
lods
in
mov
iret
out
imul
push
cmp
out
lahf
and
cwtl
subl
lock
and
cmp
push
lods
push
ds
xchg
xlat
addr16
stc
mov
dec
andb
jmp
in
jecxz
and
shll
mov
fxtract
add
test
mov
jbe
cmp
roll
std
xor
cwtl
push
push
pop
xchg
dec
movsb
cmc
std
out
enter
pop
inc
mov
das
insl
test
imul
stc
mov
orl
sub
push
cmc
int3
mov
test
sub
inc
jp
dec
arpl
xchg
roll
inc
out
or
vpunpcklqdq
mov
lods
in
enter
ja
arpl
outsl
test
xor
int
pop
inc
jns
fisubrs
dec
jb
dec
out
aaa
push
lret
hlt
jns
gs
leave
add
insb
outsb
lahf
popf
in
sbbl
xchg
daa
pop
push
or
movups
mov
sub
mov
mov
mov
inc
cmpsb
mov
das
sbb
in
mov
fsubl
push
fcmove
pcmpgtb
jmp
or
and
stc
xchg
fwait
movsb
out
jbe
aam
mov
sub
lret
sahf
ss
int3
cmc
mov
hlt
jns
testw
inc
into
inc
fcomps
lret
fidivrs
pop
data16
fstps
mov
xchg
gs
in
mov
push
xchg
lret
cld
mov
repnz
xchg
add
and
arpl
xchg
sysenter
mov
shrb
out
mov
das
mov
es
in
aaa
mov
jne
xchg
push
jno
xchg
out
xchg
fdivrp
xor
jbe
xchg
sahf
pop
pop
dec
mov
adc
adc
lods
inc
pop
leave
push
inc
into
cmc
lret
or
stos
fcomps
and
or
out
or
enter
sar
jp
cmp
xor
int3
pusha
lods
push
filds
xor
sub
inc
imul
mov
jle
bound
mov
loope
cs
mov
mov
xchg
movsb
sbb
fdivs
dec
xchg
orb
or
mov
sti
push
cmpl
push
xchg
jmp
aaa
pop
js
stos
mov
jp
xchg
xchg
add
test
pop
test
pop
jle
or
das
sub
mov
ret
test
inc
cs
fildll
adc
cmp
cmc
mov
pop
enter
xor
mov
cmp
test
dec
mov
outsb
add
adc
das
popf
adc
lods
sarb
dec
dec
adc
insb
cwtl
jmp
fsub
les
scas
xchg
shr
sbb
sbb
sub
aam
sub
sub
pop
jge
lods
mov
cmp
add
dec
or
pop
sub
aas
mov
jne
jbe
mov
xlat
xchg
xchg
and
lds
pop
aas
add
inc
test
fs
stos
dec
jecxz
out
mov
cmpsb
sahf
and
nop
rcll
in
and
dec
das
rcl
cmp
cmp
iret
test
dec
mov
shlb
mov
xchg
ja
test
jns
xchg
in
jmp
sbb
test
lcall
xor
arpl
xor
les
or
sti
push
scas
or
add
sub
pop
mov
cmp
adc
mov
aam
add
sahf
pop
xchg
push
jns
out
mov
out
sbb
in
fidivrs
push
inc
jmp
or
call
or
out
inc
test
mov
scas
adc
inc
xchg
pop
sub
pop
jg
pop
daa
jbe
push
test
cs
je
sbb
mov
nop
and
in
les
cwtl
fists
adc
mov
mov
xor
pop
adc
or
mull
adc
adcb
je
mov
pushf
sub
pop
stos
mov
add
push
ficoml
mov
ljmp
mov
ljmp
fisubrs
aaa
jns
push
ret
gs
mov
pop
xor
push
imul
xchg
popf
xor
popa
in
jnp
mov
fcmovnbe
xchg
jp
lret
in
mov
or
inc
popa
hlt
jnp
cmp
pop
add
fs
mov
rolb
cs
sbb
push
movsl
dec
inc
mov
pop
sbb
adc
ret
lcall
sbbl
lea
in
je
lods
std
push
je
push
pop
xor
ret
mov
insb
loop
nop
pop
lret
cli
push
js
push
push
das
or
call
cmpsb
notb
in
xchg
mov
call
sub
outsl
daa
stos
cmc
sbb
setne
mov
ss
cmp
out
movsb
dec
daa
test
pop
pop
repnz
push
sub
sbb
test
dec
cmp
loopne
dec
push
sub
and
inc
out
or
mov
lock
cli
mov
xchg
and
and
test
cltd
mov
jecxz
or
mov
dec
nop
mov
addr16
and
jmp
dec
loop
sub
out
and
add
mov
gs
das
pop
xchg
or
cmpsb
iret
jo
xor
dec
std
insl
notl
out
xchg
scas
mov
fbstp
fwait
and
inc
lret
inc
xlat
xchg
ds
pushf
addl
lock
outsb
gs
pop
in
sbb
ja
in
sti
ljmp
xchg
sbb
rcrb
mov
cmp
mov
mov
jns
sbb
aad
sub
popa
andl
out
mov
push
insb
out
imulb
popa
push
in
fldl
push
or
push
push
add
addr16
outsl
sbb
jle
add
jecxz
xor
mov
or
inc
in
mov
sbb
cmp
jmp
addl
mov
cltd
xchg
mov
mov
repz
adc
mov
sahf
sbb
bnd
int
cmp
leave
imul
jo
add
xorb
jle
jge
or
push
xchg
cmp
int3
dec
cmp
cmpsb
imul
push
add
cmp
aaa
ja
out
jno
aas
cmpsl
or
or
adc
push
mov
add
xor
xchg
imul
test
ret
movsl
popf
xor
jge
sub
rolb
adc
xor
je
dec
sahf
push
inc
inc
dec
js
fbstp
dec
loopne
fisttps
sub
scas
sbb
in
sbb
push
pop
idivl
pop
imul
xlat
std
lret
addr16
xchg
pop
aaa
leave
cmpsb
jmp
dec
inc
leave
mov
mov
mov
dec
inc
inc
jl
scas
je
sar
mov
fnsave
xchg
jns
test
adc
in
ja
push
test
adc
mov
mov
test
jle
mov
push
es
pop
jno
ds
jnp
pop
lods
sbb
or
insl
jnp
or
mov
sub
aad
push
test
test
das
lea
mov
test
jge
imul
jecxz
mov
js
xor
mov
add
inc
and
paddsw
xor
fildl
aas
lock
add
ljmp
cwtl
xor
lcall
add
dec
sbb
aas
arpl
xchg
aad
adc
hlt
inc
pop
cs
sub
pop
jge
xor
sub
pop
pop
xsha256
cmpsb
nop
imul
into
fsubrl
inc
dec
pushf
jge
sub
push
lock
stos
loop
test
cmpsb
lods
cmpsb
insl
pop
out
jbe
repz
pop
mov
and
xchg
icebp
icebp
adc
scas
shrb
scas
adc
dec
xor
les
lret
jb
jno
push
sbb
pop
dec
jne
popf
mov
push
cmpb
ljmp
mov
lds
inc
and
jae
and
test
adc
orb
jmp
xchg
mov
out
mov
pop
and
flds
xor
and
out
sub
ffree
call
fcomps
rorb
stos
push
addb
psubw
and
add
adc
mov
push
lods
dec
adc
ds
dec
xor
insb
cmp
push
mov
mov
mov
jmp
imul
xor
sbb
xlat
jge
testl
or
xchg
bound
fadd
imul
lds
test
out
xor
arpl
imull
push
sahf
and
call
sub
mov
or
mov
cli
xor
push
frstor
inc
movaps
push
dec
rorb
pushf
push
mov
fdivrl
jge
mov
and
push
lods
mov
pop
mov
and
jle
jo
or
mov
in
mov
mov
or
jge
ss
jne
adc
xor
ret
fistpll
fldt
call
subl
ja
jnp
lods
adcb
ficoms
push
dec
subl
fs
mov
fldt
ret
cmp
xchg
sub
rolb
xor
in
in
lret
sahf
add
sti
mov
fldenv
dec
pop
xor
cwtl
movsl
jg
ljmp
imul
movsl
mov
pop
aad
insb
punpckhwd
push
scas
cwtl
outsb
std
mov
iret
cld
sbb
mov
fstpl
dec
dec
dec
lea
fdivrl
out
mov
mov
mov
insl
sbb
add
inc
call
enter
dec
loope
test
mov
cmpsb
adc
ljmp
jg
xor
adc
mov
xchg
ret
das
inc
jl
int
jmp
test
sysret
movsb
movsb
mov
jge
sub
notb
dec
fcoms
aaa
mov
xor
sbbb
pop
lret
push
xchg
in
or
mov
out
add
shlb
out
addl
jg
sbbl
outsl
xorl
not
mov
inc
fcomps
push
pop
imul
cmp
jae
or
insl
push
stos
push
mov
sarb
dec
xor
enter
dec
call
neg
xchg
stos
enter
and
pop
cltd
or
add
jg
negb
data16
mov
enter
pop
gs
and
cmp
push
mov
dec
mov
jb
dec
dec
lock
int3
push
lcall
push
mov
sbb
jo
shlb
xchg
sub
mov
or
mov
sub
mov
inc
out
inc
inc
xchg
jns
hlt
cs
repnz
daa
adc
rcll
xchg
ljmp
fadds
adc
dec
jge
stos
lcall
push
decb
lcall
and
and
push
fisubs
int3
pop
cmp
pop
call
loope
sbb
fcmovu
repz
or
loopne
xor
push
sahf
mov
sahf
jecxz
fstpt
mov
mov
mov
jmp
cmpsl
mov
pop
add
mov
hlt
inc
push
cmp
loopne
jns
in
jno
fstpt
xor
push
insl
xor
lods
popl
adc
cmp
fistpll
gs
loop
fcompl
inc
push
xchg
sti
xor
sbb
ds
rclb
jl
jl
mov
add
jecxz
and
add
jns
enter
in
add
mov
js
aad
cmp
push
mov
push
test
dec
nop
xor
mov
dec
fbld
dec
stc
inc
sbb
aas
ret
cmc
stos
pop
dec
icebp
ss
call
ret
movsbl
fstps
jno
out
pop
fidivs
rorb
jmp
test
cmpl
xchg
fmull
mov
or
repnz
xchg
sbb
mov
insl
rcrl
inc
dec
fmuls
xchg
inc
outsl
pop
aaa
mov
rcrl
pusha
dec
fisttpl
scas
aam
test
pop
jg
push
jno
aad
orb
pop
imul
push
imul
adcb
aas
scas
xchg
sub
rorb
mov
pop
mov
pop
fcompl
xchg
test
mov
notl
dec
fwait
dec
hlt
inc
sbb
dec
and
mov
js
inc
test
xor
push
jbe
popf
lods
xchg
adcl
and
js
in
clc
pop
push
decl
and
pop
lds
push
pop
sbb
xor
cmp
push
imul
scas
bnd
mov
sbbb
push
nop
jno
dec
test
xchg
or
jp
or
pop
dec
repz
in
les
push
xorl
iret
sti
into
cmp
adc
outsb
xchg
movsl
nopl
mov
out
xchg
sub
lret
cmp
mov
mov
aaa
cwtl
push
into
shll
scas
push
mov
lcall
mov
icebp
jo
out
fwait
shl
pop
repz
add
sbbl
ss
push
mov
lahf
mov
sar
xor
aad
mov
scas
xchg
subl
xlat
insl
inc
subl
pop
or
leave
dec
pop
imul
ret
push
fcompl
gs
das
imul
pushf
pop
mov
mov
int
jmp
aaa
mov
sub
arpl
loope
pop
insb
in
mov
mov
push
mov
sub
insl
cmp
mov
adc
sbb
int
popl
int3
push
in
mov
lds
scas
lret
iret
andl
adc
fisttpl
jecxz
cld
jbe
out
jle
rcrl
sub
in
test
and
lds
jmp
fcoml
test
inc
out
pop
stos
clc
movsb
pop
jle
push
into
mov
fsubrl
ret
adc
mov
ja
dec
xor
and
cmpsb
out
mov
test
std
je
mov
lret
mov
ret
shl
mov
and
daa
sub
stos
inc
repnz
aad
mov
mov
xchg
dec
jmp
cmpsb
insl
outsb
and
fs
add
pop
cli
and
faddp
das
addr16
ret
arpl
dec
xchg
dec
dec
ljmp
inc
data16
lret
paddd
ret
and
dec
dec
out
int3
xchg
lock
mov
cwtl
enter
fisubl
dec
das
push
fsubl
dec
adc
into
pop
xor
adc
cmp
fidivs
push
cli
movsl
xor
aad
dec
xchg
and
mov
addr16
add
lret
cmpsl
in
loope
dec
dec
out
jnp
lock
jge
aam
repz
lret
jnp
push
jmp
or
scas
cld
cli
pop
repnz
pop
adc
dec
xchg
push
stos
lds
and
test
and
daa
inc
inc
mov
cwtl
sbb
out
mov
loopne
js
nop
sbb
into
pop
movsb
aaa
inc
or
fidivrl
nop
sbbl
add
jb
or
shrl
pop
adc
xchg
out
and
mov
jecxz
mov
leave
xor
shrd
mov
add
loope
sub
mov
pop
xchg
mov
add
lret
stos
fs
iret
push
out
ficoml
add
xchg
push
fwait
jne
mov
fsubrs
adc
lahf
mov
mov
sub
es
sub
xlat
mov
push
dec
mov
mov
test
inc
dec
sbb
pop
mov
push
cmp
mov
mov
iret
sbb
notb
pop
out
mov
nop
sbb
jns
repz
add
incb
sar
add
jns
das
fildl
scas
mov
mov
mov
shrl
xor
inc
sahf
hlt
fdivrl
mov
sub
sub
faddp
outsb
cwtl
fcompl
mov
push
fbstp
mov
mov
data16
stc
test
push
out
test
adc
push
dec
pushl
mov
fwait
hlt
mov
mov
dec
jecxz
mov
pop
push
pop
and
notl
xor
pop
notb
out
jnp
fs
int
adcl
push
out
mov
pop
cmp
cmc
psubsb
cmp
jo
inc
lods
imul
push
add
mov
sbb
test
sbb
mov
mov
outsl
test
xchg
xchg
into
mov
aam
jmp
rorl
mov
xor
shll
push
xor
test
movl
xchg
fwait
cmpsl
pop
pop
pop
lcall
cmp
mov
lahf
fldenv
clc
push
sbb
sub
mov
push
aad
cmp
cwtl
adc
stc
loopne
pop
pop
ja
sub
mov
dec
enter
cmpsl
lahf
int3
xor
xchg
bound
js
in
test
add
enter
out
mov
test
jle
jo
xor
add
subl
in
cmp
push
mov
xchg
mov
or
in
dec
sub
outsb
int3
gs
lock
push
js
movsl
cmp
pop
fs
iret
or
push
mov
cs
addr16
ret
and
or
pop
jnp
ficompl
pop
sub
add
mov
cld
lods
imul
rorl
cmp
rcrl
dec
sub
lds
call
push
arpl
xchg
aaa
std
adc
data16
lock
push
xor
das
ret
mov
mov
xchg
fists
in
cmp
sti
mov
jo
sbb
mov
add
js
mov
jecxz
jb
fiadds
lcall
xlat
imul
sub
pop
and
and
fnsave
push
lods
mov
cwtl
xor
push
cwtl
int
jg
mov
sbb
cli
push
stos
je
jb
mov
movsb
lods
jg
aad
mov
imul
jns
xor
popa
jecxz
xchg
mov
xchg
xor
pop
stos
adc
iret
call
into
shll
mov
addr16
aad
pop
dec
xlat
int3
add
jno
and
xchg
stos
lds
jecxz
xchg
lcall
mov
stos
es
dec
insl
mov
add
cld
xchg
and
inc
fcompl
icebp
dec
insl
cmp
lcall
shll
fistpll
push
outsl
jnp
inc
sbb
std
xor
and
mov
shrl
dec
loope
loope
arpl
aam
inc
mov
sub
outsl
push
mov
inc
adc
adc
or
aam
jecxz
fwait
ss
icebp
adc
outsl
inc
mov
cmpsb
lahf
mov
mov
mov
int
das
js
sbb
mov
ss
scas
or
sbb
xor
mov
fcomps
or
mov
ret
sbb
rcrb
mov
xchg
adc
jmp
or
pop
nop
daa
nop
dec
or
addr16
mov
ja
nop
fcoml
popl
movsb
mov
cld
lret
nop
xor
jne
mov
std
pushf
ret
cwtl
mov
shll
ficoml
and
jns
and
mov
xor
cltd
push
push
imul
mov
es
xchg
inc
imul
xchg
mov
mov
mov
dec
out
fnstcw
adc
pop
add
testl
mov
stc
gs
inc
out
mov
arpl
sbb
push
cmpsl
shll
adc
fdiv
or
or
les
rolb
or
push
inc
inc
jbe
std
addr16
push
jb
sub
bound
mov
lods
rolb
mov
xchg
jb
dec
outsl
sbb
scas
rorl
and
mov
loop
sub
rorl
das
sbb
add
dec
in
jb
pop
movsb
or
cmp
mov
and
mov
pop
loop
repnz
mov
inc
fildl
mov
cld
xchg
pushf
in
inc
fistpl
subl
pop
imul
repz
xchg
xchg
fs
fisttpl
xchg
stos
inc
fwait
sub
xchg
push
xchg
sbb
mov
ja
ds
addr16
push
lret
or
push
js
jl
jecxz
shlb
je
loope
daa
and
xchg
int
xchg
cli
call
sbb
les
pop
lret
mov
or
repz
sbbb
sarb
cmp
ja
inc
xor
icebp
adc
out
inc
jecxz
pop
mov
mov
or
jae
xchg
mov
clc
xchg
hlt
mov
or
das
adcl
xchg
push
das
dec
clc
cltd
cmpsb
sbb
push
mov
add
lds
dec
mov
or
mov
lahf
imul
ret
add
xlat
mov
loope
cmpsb
mov
and
xchg
aam
xor
addr16
xlat
outsb
jbe
pop
xor
repnz
out
xchg
xchg
adc
add
push
repnz
sahf
scas
mov
pop
ljmp
xor
mov
sbb
xchg
stos
sbb
sbb
mov
jmp
push
mov
cmp
pop
shlb
fcomi
js
inc
mov
xor
sbb
insb
inc
inc
lcall
out
ss
jnp
je
call
push
mov
mov
je
daa
xchg
aad
rolb
scas
mov
jle
outsb
sub
pop
ret
adc
jne
arpl
insb
mov
into
ss
jp
and
mov
mov
adc
mov
call
scas
rolb
mov
push
mov
xor
out
inc
loopne
mov
jb
icebp
scas
lods
mov
repnz
inc
lret
xor
pop
js
xchg
cmp
das
or
push
ds
jbe
and
jns
mov
insb
das
sub
mov
popa
or
push
jp
sbb
jo
sub
es
lods
movsl
add
sbb
inc
fisttpll
notb
add
mov
xchg
shr
mov
mov
adc
arpl
das
mov
adc
gs
mov
leave
movsl
fs
fimull
addb
ja
inc
lock
loop
test
add
xchg
bound
call
mov
xor
int
jmp
cmpsl
movsb
mov
addb
mov
mov
repnz
repz
sub
mov
out
ret
jae
daa
gs
or
fdivp
lods
inc
and
lods
inc
xor
add
movsl
xor
push
inc
xchg
xor
in
shr
adc
and
imul
mov
or
jp
loopne
or
ljmp
mov
push
push
jecxz,pn
pusha
js
jmp
int3
add
cmp
scas
and
mov
leave
outsl
xor
dec
cmc
add
inc
push
lahf
adc
loop,pt
dec
cmp
ljmp
vcmpps
cmp
shl
inc
adcl
mov
arpl
scas
sahf
cmp
lods
lret
enter
cmp
cld
xlat
fmuls
xchg
repz
fs
adc
jo
cmp
push
push
or
call
test
shlb
add
push
fsqrt
and
adc
sub
add
dec
add
rcr
lahf
call
pop
jecxz
fwait
in
mov
mov
shlb
fsubl
popl
sub
adc
mov
xchg
cmc
push
push
daa
mov
fnstcw
fwait
mov
ss
dec
repnz
and
push
lcall
push
xchg
movhlps
xchg
pop
xchg
sbb
or
push
lock
in
jg
pushl
loope
pop
repz
jge
sbb
stc
mov
jmp
and
cmp
stos
jnp
pop
clc
push
out
lods
and
and
and
cmp
in
adc
mov
jnp
adc
test
pop
jle
cmpsb
in
loope
mov
jne
imulb
sbb
int3
mov
dec
ja
xchg
aam
push
ljmp
outsb
ret
push
mov
loopne
test
inc
lods
add
xor
cmpsb
mov
add
or
pop
cmp
adc
inc
push
dec
test
cmc
push
lahf
nop
mov
dec
jbe
andb
dec
in
sbb
pop
dec
xchg
out
popa
std
out
pop
sbb
lock
out
or
cmp
xchg
sub
pop
loope
xchg
aaa
loopne
push
test
scas
jp
imul
jmp
sub
fdiv
or
and
out
and
cmpsl
jo
add
dec
cmp
iret
dec
pop
jo
gs
in
iret
xchg
incl
es
fistps
mov
cmp
jg
adc
mov
jnp
lret
int3
cmp
std
in
mov
mov
movsl
les
in
inc
mov
cmp
stos
xor
in
pop
cld
insl
jge
lret
imul
int3
mov
mov
sti
lods
cmpl
sbb
imul
pop
lret
movsb
adcl
pop
js
shll
mov
jbe
popf
mov
push
inc
mov
lods
js
mov
jae
dec
lods
mov
mov
dec
mov
push
cmp
cmc
in
jle
xchg
sar
data16
and
mov
xor
or
mov
mov
jb
sti
xchg
ficoml
add
test
xchg
cmpl
dec
lock
lock
cmpsl
adc
jb
dec
fidivs
mov
sub
pop
jle
ss
hlt
push
leave
fisubs
inc
mov
push
btc
push
inc
adc
mov
les
mov
xlat
xchg
and
repz
push
stos
mov
jb
dec
xchg
sbb
hlt
cli
xchg
xorl
or
mov
in
sub
adc
jle
cmp
cs
cmpsb
dec
and
sub
mov
cli
ror
nop
sbb
sub
jecxz
enter
loop
lds
stc
mov
leave
test
jns
daa
mov
mov
mov
das
cmpsl
movsl
out
enter
out
pmaxsw
shlb
dec
pusha
push
popa
fisubs
test
sub
sbb
sbb
out
arpl
cmp
shll
sbb
cmp
aas
sbb
out
xchg
ret
in
mov
test
jmp
pop
into
in
add
lods
and
pusha
cmp
mov
xor
mov
pop
cmp
lds
jg
or
mov
mov
sti
mov
cmp
aad
pop
clc
mov
adcb
aad
testl
dec
push
mov
mov
daa
into
inc
or
sarb
jecxz
cld
in
aam
pop
mov
fsubrl
mov
xchg
mov
cmp
xor
mov
call
add
repnz
hlt
adc
lds
inc
mov
pop
scas
loopne
insl
adc
push
repz
cli
and
push
outsb
lds
sub
dec
jle
cld
xchg
add
push
out
xor
sbb
jecxz
cmp
push
mov
dec
mov
cmp
das
in
xor
xorb
xchg
lods
or
mov
inc
out
fcom
ljmp
call
pushf
aas
loop
imul
ljmp
test
or
jae
xchg
add
add
rcr
xchg
stc
lds
inc
and
mov
and
aam
lahf
adc
jle
icebp
imull
addb
fmuls
jnp
or
insl
fsubrs
mov
xor
jle
les
push
je
dec
movsl
ss
ss
xchg
imul
adc
pop
push
sub
inc
mov
lret
in
mov
cld
les
sbb
sbb
icebp
mov
jae
pop
mov
icebp
xchg
or
xor
bound
push
push
sub
pop
scas
loope
fsubrp
inc
mov
inc
cmp
add
imul
push
mov
je
out
xchg
push
pop
aam
xchg
inc
incl
lods
or
mov
dec
sub
cmp
pop
mov
sub
fdivrl
std
addr16
call
lock
cs
pop
insl
add
negl
push
lods
mov
mov
and
or
leave
cmp
push
jb
stc
jge
cmpsb
es
sub
push
mov
pop
jp
aad
lahf
push
or
in
pop
aam
clc
push
movsb
pop
and
sahf
div
inc
adc
sub
icebp
aad
fwait
das
stc
pop
xchg
add
mov
jo
addr16
add
stc
shr
mov
and
pop
sahf
dec
shl
jl
and
int3
lret
xchg
insl
testl
inc
jle
xchg
dec
insb
sub
mov
icebp
push
pop
ds
das
adc
negl
jmp
daa
fmuls
cltd
test
and
decl
inc
mov
push
dec
dec
pop
insl
jp
jne
cmpb
or
scas
mov
ret
mov
jle
pop
push
or
test
inc
enter
mov
push
rcll
lahf
jecxz
add
in
add
mov
repnz
lods
cmp
pop
testb
movsb
mov
mov
int
loope
jp
ret
mov
ss
sub
cltd
pop
sti
xchg
mov
adc
cmp
fs
mov
sub
mov
outsw
ret
rcrb
test
lods
mov
ljmp
addr16
and
push
xor
shrb
xor
jl
ljmp
insl
mov
xor
add
mov
adc
jl
and
popa
dec
stos
inc
jp
mov
cltd
adc
inc
out
mov
inc
push
push
icebp
inc
and
and
push
add
sti
popf
inc
scas
sarb
jmp
add
ja
adc
sub
inc
subb
insb
inc
add
das
faddl
data16
sub
insb
lods
and
or
adc
test
xchg
out
add
scas
in
xchg
mov
jb
es
icebp
push
sub
scas
sbb
leave
imul
hlt
ret
aad
mov
cmpb
inc
movsb
push
and
and
into
inc
dec
lock
lods
mov
nop
fcmovne
int
lcall
dec
mov
and
je
rcrl
lcall
dec
inc
or
bound
into
push
mov
push
lret
adc
cmc
iret
sbbb
icebp
aam
mov
subl
mov
xchg
sub
fdivs
popa
hlt
adc
dec
inc
mov
dec
iret
out
xchg
dec
fisttpl
cwtl
iret
subb
adc
nop
or
mov
and
add
mov
dec
adc
jecxz
fcmove
pop
leave
std
mov
stos
into
in
incl
add
les
mov
imul
add
decb
jecxz
push
cmp
sub
inc
sub
int3
xorl
loop
pop
outsb
cmp
cmp
rolb
shrb
and
pop
dec
sub
mov
xchg
and
jo
push
mov
sbb
xorb
cli
or
xchg
adcl
test
pop
fwait
fs
int
adc
xchg
jbe
lds
js
sbb
adc
jp
mov
adc
xchg
inc
cmp
jne
fld
das
lcall
das
or
negl
dec
and
lret
in
int3
arpl
xchg
pop
insb
fwait
fs
sbb
or
xchg
sub
fsubs
cmp
xchg
jmp
test
add
fdiv
dec
xchg
adc
lods
rcrl
inc
push
lea
in
sti
inc
inc
subl
lret
fiaddl
cld
mov
xor
leave
xor
xor
in
js
shll
cmpsb
loop
inc
js
cmpsb
mov
push
mov
sbb
outsl
cli
xor
pop
and
fbstp
push
in
xor
ret
add
mov
loopne
insb
lcall
push
mov
and
and
gs
insb
push
xchg
xor
cmp
ret
adc
jo
mov
adc
fidivrs
push
pop
mov
dec
outsb
dec
push
mov
push
dec
into
mov
push
add
mov
bound
ret
mov
jp
iret
fstpl
stos
mov
int3
psllw
daa
into
lret
fwait
andl
and
push
mov
arpl
loopne
or
loop
mulb
stc
imul
cmp
mov
add
cmp
pop
ljmp
mov
mov
lret
stos
sbb
out
and
imul
mov
xlat
xlat
sub
es
inc
fbstp
call
jnp
pop
out
lock
je
mov
scas
jecxz
mov
rcr
mov
popa
xor
ret
mov
nop
sbb
sbb
fs
aaa
bound
jge
jo
fwait
adc
or
outsb
js
push
hlt
inc
loopne
out
dec
aas
push
adc
jle
jae
and
fisubrl
adc
movsb
push
test
aad
jmp
in
popf
stc
rolb
lea
aad
xchg
shl
jno
incl
mov
popf
add
mov
xchg
arpl
lods
subl
push
cwtl
and
insl
mov
xchg
fcoms
and
inc
test
popl
and
rolb
add
aam
es
lahf
adc
mov
lods
adc
ret
divl
lret
pop
mov
repnz
inc
cwtl
andl
leave
and
insb
shr
push
push
pop
ret
xor
add
sbb
int3
push
sub
daa
pop
xor
xor
in
push
rcl
es
jge
mov
enter
cmp
lds
xchg
rcll
and
push
cli
movsl
out
mov
lcall
in
sbb
jp
loop
fisttps
inc
out
in
std
addb
inc
pop
and
pop
in
jne
jbe
push
xchg
push
mov
int
xchg
testl
pop
xor
data16
jae
push
out
pop
ret
adc
scas
mov
ss
jl
sub
aad
push
mov
mov
fs
mov
loope
push
loopne
sbb
xor
ffreep
loope
loopne
insl
out
mov
cmp
sub
mov
inc
notb
mov
push
mov
daa
push
ss
inc
sub
in
sti
lret
xlat
pop
xchg
add
pop
jl
mov
mov
push
sub
jge
sbb
adc
aas
int
mov
adc
push
pop
cmp
in
subl
sub
repz
aaa
mov
pop
inc
arpl
xor
xchg
cld
jnp
sub
lea
inc
push
leave
movsl
and
in
xor
mov
mov
lods
mov
mov
sarl
sahf
jnp
adc
aaa
out
xchg
je
mov
sti
outsl
pushl
ret
mov
and
adc
mov
lds
out
sbb
in
xlat
cld
push
cmp
fnsave
sub
pop
pop
imul
mov
jne
xchg
imul
repnz
lock
shrb
inc
daa
inc
stos
or
sahf
xor
mov
div
and
add
sub
adc
mov
clc
pop
sbb
xchg
sub
loope
mov
hlt
cmp
stc
add
cltd
xor
pop
pop
fmul
lods
mov
sub
pop
cwtl
mov
aad
pop
mov
testl
xor
jg
jmp
mov
cmpsl
in
add
sbb
sbb
popf
lock
or
outsb
hlt
fisttpll
test
fucomip
and
icebp
adc
cs
mov
mov
inc
es
sbb
aaa
cli
mov
mov
sbbl
pop
inc
daa
ds
cmp
cmp
or
add
lock
mulb
les
out
sahf
mov
test
repz
out
push
adc
push
sub
stos
ja
iret
jno
sub
jbe
push
mov
mov
mov
pop
aas
insb
aaa
and
cld
inc
repnz
mov
xor
and
inc
or
in
sub
rclb
lret
popa
push
adc
sub
ja
cmpsl
and
jb
mov
sarb
dec
mov
xlat
dec
mov
je
testl
test
or
pop
pusha
push
sub
cmp
jg
pop
pop
push
fwait
int
int
jecxz
xchg
cli
jo
and
push
out
lea
out
cld
cs
ljmp
rcr
jbe
clc
push
imul
pusha
xor
sbb
jle
cmp
mov
mov
insb
mov
mov
xchg
lret
xchg
test
fstpl
mov
mov
pusha
insb
cltd
xor
xchg
mov
dec
out
movsl
adc
adc
dec
inc
xlat
push
xchg
pop
jne
dec
lds
push
into
xchg
xor
adc
or
push
sbb
mov
jge
xchg
mov
push
dec
into
jmp
cmp
sub
rolb
jge
aam
scas
out
adc
fildl
in
mov
cmp
add
cs
arpl
or
xchg
cli
add
jo
push
cmp
lret
mov
das
sub
pop
scas
mov
sub
cltd
or
cmp
or
xchg
pxor
int
jns
dec
mov
jno
mov
mov
sbb
adc
aaa
addr16
pushf
jmp
jge
and
cmp
push
icebp
rclb
movsl
adc
jmp
fwait
push
push
ja
pop
gs
int
outsb
dec
ficompl
std
push
cmc
push
bnd
and
mov
les
and
add
clc
ljmp
xchg
inc
aas
jbe
pop
addr16
push
and
lods
mov
ljmp
popa
push
ficoml
jl
adc
pusha
adc
mov
jmp
in
andnps
jb
test
jge
aaa
fsubs
cmc
mov
xor
mov
leave
jo
rcrl
aad
daa
imul
ficoms
mov
mov
in
push
mov
sbb
dec
repnz
push
mov
popf
and
data16
mulb
cli
xchg
mov
rcrl
sub
sbb
inc
ds
mov
in
xor
cmp
icebp
out
negl
scas
jns
sbb
fidivl
lods
loop
mov
mov
js
jo
xchg
shrb
adc
test
icebp
xchg
cmp
dec
es
cltd
pop
fidivrl
fsubs
push
dec
or
popf
sahf
daa
mov
test
mov
test
or
adc
ret
and
jb
fs
push
movsl
xor
jne
into
pop
push
out
push
push
lcall
in
scas
movsb
int3
xchg
cltd
test
aam
sbb
pop
mov
cmpl
and
mov
add
aam
hlt
inc
adc
out
rorb
sub
rcl
pusha
push
push
sbb
or
sub
xor
add
xor
lcall
fcmovnb
sbb
int3
fisubs
pop
mov
pop
fnstcw
lcall
push
add
inc
jno
and
mov
mov
sbb
fisubrl
xor
add
scas
mov
outsl
mov
xchg
idivb
pop
inc
mov
dec
jg,pn
pushf
jns
or
out
cli
mov
push
jle
jl
mov
rcr
aaa
dec
xor
mov
movsb
and
sbb
mov
push
push
sahf
sub
aad
sbb
add
jecxz
pop
daa
inc
popf
outsb
xchg
sub
ljmp
testb
mov
jl
scas
out
rcl
mov
inc
repz
mov
xchg
mov
imul
push
and
xchg
mov
mov
loopne
popa
mov
bound
mov
add
or
dec
mov
and
fistl
jo
loopne
jge
cmpsb
sbb
xlat
xor
add
mov
push
and
cld
jno
jecxz
and
mov
call
and
out
mov
mov
popf
das
push
or
les
out
test
mov
lret
bnd
insb
mov
data16
sarb
int3
int3
movsb
pop
cmp
outsb
jecxz
psubusw
cld
out
xchg
or
push
jmp
push
and
rcl
lret
in
cltd
scas
enter
lcall
enter
sbb
test
in
lds
insb
stos
loopne
fmull
subl
fdivs
mov
enter
fisttpl
imul
call
xor
ds
sarb
dec
out
scas
mov
rolb
sbb
lock
pop
lcall
push
mov
push
sbb
test
mov
mov
aad
xor
shll
or
bound
dec
push
inc
jmp
mov
movsl
xor
add
sub
jns
inc
fimuls
lret
hlt
dec
pusha
call
aad
push
fwait
pop
loop
xor
movsl
inc
mov
scas
nop
dec
dec
fnstcw
cmpb
xchg
jae
ss
mov
stc
ret
repz
dec
ljmp
and
ret
and
xor
sbb
imul
sahf
pusha
mov
loop
cmpsb
in
inc
pop
push
mov
lret
dec
fucomi
mov
mov
cmp
mov
fldenv
filds
lahf
mov
jp
test
mov
mov
or
lahf
jb
loop
sub
mov
aaa
lds
fnstenv
out
cld
jl
push
pushf
pop
or
ss
jmp
mov
add
stos
adc
xchg
sub
lea
in
pop
je
int3
lret
out
or
js
int
and
jb
lahf
mov
push
lret
jge
sub
adc
or
sub
adc
out
clc
xor
or
fucomip
ljmp
cld
or
add
in
movsl
sbb
scas
pop
jl
mov
push
das
fidivl
daa
in
or
adc
test
sub
xor
clc
insl
jmp
inc
frstor
mov
sarl
arpl
cmc
gs
es
mov
in
mov
es
call
jmp
push
sbb
cmp
and
adc
dec
loop
movsl
or
ss
outsl
sti
pop
sub
dec
test
cwtl
cmc
negl
sub
and
stc
nop
daa
ljmp
adc
ss
dec
sti
pop
jbe
dec
xchg
divb
sbb
cli
mov
sti
sbb
adcb
pop
scas
stc
hlt
jae
sbb
pusha
push
sti
jl
in
lods
mov
imul
pop
sbb
mov
clc
and
psubb
arpl
mov
into
es
push
lods
lret
inc
ljmp
jae
scas
out
xchg
push
cli
pushf
fdivrl
add
xchg
xchg
and
les
lret
bound
sbbl
or
push
ljmp
jno
addr16
xchg
or
in
sbb
cltd
xor
pop
not
cld
fidivs
stc
jge
sub
xchg
test
sub
and
cli
xchg
in
in
aad
pop
nopl
jne
xchg
test
add
das
movb
cmp
mov
add
dec
rclb
hlt
rcl
repz
cmc
mov
dec
out
jl
loop
or
cmp
imul
mov
mov
mov
or
je
adc
jmp
shrb
push
out
in
insl
add
and
imul
pop
loopne
lea
jnp
hlt
lods
xor
push
sahf
pop
icebp
into
or
pop
cmp
js
and
jge
inc
or
lock
mov
inc
or
or
test
jne
xlat
in
pop
sahf
sbb
inc
fsubl
sub
enter
mov
jnp
out
inc
adc
add
in
fnsave
enter
cltd
xchg
sub
pop
cmpsb
add
add
push
mov
and
data16
jg
aas
pushf
mov
jg
mov
pop
sahf
xor
xchg
sub
pop
mov
nop
cltd
xor
lret
jcxz
push
call
cmp
lods
inc
xor
mov
std
sbb
pop
icebp
ss
adc
leave
sbb
jno
sbb
imul
pop
mov
pop
out
es
ss
dec
loop
out
dec
in
lock
fsubs
sub
xor
out
popa
clc
sbb
or
push
xor
icebp
sub
enter
outsb
sub
shrl
repz
sub
stc
repz
lock
clc
aas
sub
and
and
stos
inc
das
adc
scas
inc
testl
sarb
shl
popf
daa
mov
xor
and
and
mov
adc
xchg
out
xchg
add
test
adc
pop
repz
xor
sbb
mov
sbb
add
aaa
into
andb
mov
rol
movsl
cmp
inc
daa
jnp
push
lods
xor
xor
xor
imulb
lahf
ss
mov
add
push
adc
cmp
mov
mov
pusha
sbb
xchg
dec
mov
bnd
cmp
sbb
push
movsl
mov
scas
repz
in
test
xchg
gs
lret
sti
push
pop
sahf
mov
pushf
xor
lds
or
ja
cld
xchg
data16
xlat
outsb
fnstenv
jle
sbb
mov
mov
andb
mov
int
mov
stc
pop
test
sub
sti
pusha
lcall
out
xchg
sub
xor
imul
fidivl
jo
andb
outsl
push
test
addb
mov
pop
icebp
bound
dec
xchg
mov
push
call
aas
xor
insl
popa
push
ljmp
gs
mov
int3
arpl
xor
pop
in
test
inc
jno
leave
pusha
xchg
cmpsl
pop
cmc
aad
push
call
jb
mov
movsl
cmpsb
inc
fst
jae
fsubl
jp
sbb
cmpsb
push
in
je
js
inc
es
mov
insb
add
fbstp
inc
scas
inc
ja
jmp
fst
push
jmp
sub
stos
and
ficoml
sbb
cwtl
in
test
xchg
test
les
add
push
testb
xchg
mov
cwtl
xchg
push
into
mov
push
mov
fs
cltd
pop
push
popf
mov
rclb
sti
xchg
lcall
add
sbbl
lcall
pop
mov
imul
lcall
sahf
imul
enter
out
les
sub
xchg
pop
mov
aas
loop
sbbl
pop
pop
shlb
rorb
add
insl
sub
sbbl
push
repz
xchg
dec
in
jne
and
scas
inc
imul
das
sbb
adc
aad
nop
push
out
lds
mov
loope
movsb
push
mov
or
in
xchg
xchg
mov
mov
xchg
xlat
mov
sti
adc
pop
cmp
mov
jo
iret
aas
std
xchg
xor
ret
cs
pop
mov
dec
stos
xchg
aas
shll
movsl
pusha
pop
jo
popa
clc
testb
negb
cmp
mov
das
notb
aad
pop
pop
fnsave
dec
out
xchg
pop
scas
shll
out
fs
std
xchg
nop
mov
lods
inc
mov
arpl
xchg
mov
jae
shrb
mov
xchg
push
call
push
mov
adc
mov
fsubp
cmp
fisubrs
aad
loop
sbb
mov
inc
ret
pop
jne
jp
and
shlb
dec
out
jge
shrb
cmpsb
outsl
push
xlat
call
sub
testb
es
pop
scas
int
inc
fdivl
jecxz
xchg
xlat
outsb
and
dec
in
dec
leave
pusha
xor
push
sub
fnstenv
lock
aam
sbb
and
outsl
push
ja
scas
inc
sbb
mov
jo
leave
pusha
push
xchg
rcrl
jmp
insb
loop
pop
nop
jecxz
ss
sub
in
call
mov
fimull
or
pop
scas
mov
pop
jbe
aad
pop
pop
cmp
negb
lea
sbb
je
mov
push
rol
idivl
xor
iret
stos
inc
std
push
mov
sub
jmp
add
inc
mov
movsl
cmp
or
ja
mov
lret
or
xor
pop
scas
inc
mov
daa
cmp
fisttpl
lods
pop
je
push
out
addl
mov
aad
inc
fadds
movsl
xor
out
test
nop
lds
sbb
mov
lret
outsl
push
imul
and
xchg
arpl
movb
js
fwait
xor
sbb
inc
push
inc
dec
loop
loopne
sub
leave
sbb
and
aas
push
push
jb
aaa
sbb
jnp
jmp
movsb
cmp
add
pop
hlt
dec
pop
stc
nop
mov
lret
bound
pop
cli
adc
out
sbb
clc
cs
inc
into
push
out
aam
int
push
mov
lret
loopne
data16
imul
pop
stos
dec
insl
leave
cmp
inc
push
out
pop
loopne
aas
cmpsb
xor
adc
cmp
cwtl
add
inc
push
xchg
repz
es
mov
push
jmp
pop
daa
les
push
mov
cmp
pop
mov
inc
dec
mov
dec
push
jno
outsb
inc
mov
push
sbb
xchg
jmp
sub
pop
inc
imul
arpl
inc
cmpsb
data16
mov
mov
jnp
ret
aas
orb
or
mov
mov
arpl
test
std
mov
loope
lret
fwait
mov
dec
or
shlb
mov
mov
sbb
popf
and
out
test
nop
mov
push
and
sub
pop
insl
orb
and
js
or
cmp
pop
into
dec
test
ret
jb
das
push
lds
push
pop
add
or
test
and
adc
jne
mov
xchg
or
enter
mov
inc
mov
cmp
fnstcw
jbe
fistl
scas
imul
test
jnp
nop
imul
test
mov
imul
mov
cmpsb
mov
fmuls
cmpsl
pop
cmp
in
out
mov
mov
hlt
jns
es
roll
jecxz
inc
pop
lock
mov
xor
mov
and
mov
iret
das
cmp
pop
mov
pop
lret
in
push
mov
jbe
push
les
pushf
jmp
ss
mov
add
iret
dec
clc
and
out
out
and
in
leave
cmp
inc
shlb
fsub
cmp
adc
cmp
add
jb
icebp
xchg
xchg
out
std
inc
xchg
ret
adc
rcrb
ja
mov
arpl
jle
jne
call
or
scas
or
es
stc
sbb
shll
fisubrs
dec
mov
xor
dec
loop
push
in
xor
cmc
in
orb
pop
lods
mov
lcall
inc
int
into
or
rcr
inc
mov
or
sub
inc
jae
jb
lahf
xor
ljmp
out
pushl
push
cmp
lds
xlat
insl
in
lods
arpl
scas
pop
sub
gs
xor
test
pop
in
imul
cmp
mov
iret
push
cmpsb
or
scas
mov
ret
out
and
stos
xchg
mov
mov
push
mov
addb
movsb
addr16
aad
mov
push
leave
andb
int3
lcall
shrl
out
sub
adc
push
add
or
fwait
jne
mov
mov
fsubp
xchg
pop
mov
push
in
cmc
xlat
in
aad
inc
lcall
outsl
add
pop
lret
int3
mov
mov
xchg
ja
lahf
test
and
inc
mov
mov
sub
or
movsb
and
mov
or
hlt
mov
mov
adc
cmp
enter
xchg
pushf
mov
cmc
adc
jg
push
xor
fisttpl
and
and
mov
repz
int3
cmp
xor
sbb
xor
shrl
push
test
push
mov
gs
xchg
jae
sub
cltd
je
movsb
fs
jnp
push
mov
cli
adc
lcall
jnp
xchg
xchg
lret
cwtl
imul
dec
mov
fsts
sbb
dec
xlat
cmp
dec
dec
mov
fdivp
dec
sarb
pop
mov
aad
push
je
adc
add
cmp
pop
pop
jbe
mov
jp
cmp
dec
fstcw
push
inc
rolb
or
inc
xchg
mov
dec
rcll
pop
adc
repnz
cmp
mov
repz
mov
and
mov
popf
js
xchg
inc
or
filds
mov
mov
cld
xchg
movsb
pusha
sub
pushf
xor
mov
mov
int3
inc
cmp
repnz
push
popl
pop
jmp
shll
loop
mov
jmp
test
dec
loopne
pushf
add
stos
xchg
jne
loopne
pop
push
leave
xchg
dec
push
lods
jle
cmp
mov
setge
push
popf
add
std
es
or
and
arpl
lods
jp
sahf
mov
sub
outsb
mov
cmp
je
out
or
dec
mov
repz
and
push
negl
or
cmc
lcall
cli
cli
and
loop
mov
adc
jle
std
js
ret
lea
sti
jne
in
push
dec
rcrb
sub
cltd
fistpl
adc
push
and
lcall
icebp
insl
mov
push
popa
clc
xorl
cltd
cmc
subl
mov
jo
ljmp
or
stos
or
das
push
test
jl
lcall
mov
fs
xor
je
cmp
fisttpl
dec
mov
sbb
pushf
aas
xchg
pop
add
js
lods
xor
mov
xor
pop
icebp
dec
cmpsb
mov
sbb
call
lret
sub
lods
add
pop
adc
nop
push
jne
jbe
movsb
ret
inc
push
mov
mov
dec
scas
nop
cmc
xchg
shll
dec
jecxz
adc
adc
mov
stos
xor
lahf
jne
cmp
aaa
add
aas
mov
mov
mov
ja
pop
add
mov
jne
outsb
sahf
repz
arpl
jae
sbb
dec
jecxz
xchg
inc
mov
add
int3
cmp
stos
cmp
xchg
mov
or
push
push
mov
fstps
ret
cmp
or
loope
cmpsb
and
cmc
lea
in
mov
mov
data16
rolb
or
cmp
jl
mov
xor
popa
cld
dec
aad
and
sarb
sub
rorl
pop
or
sub
add
lret
loope
jmp
stc
repz
mov
fiaddl
stc
lock
ret
mov
or
lds
xor
sahf
enter
fnsave
pop
pop
mov
arpl
jp
test
dec
sub
sarb
cld
sub
aas
iret
dec
popf
push
loop
sbbl
aaa
nop
mov
lret
mov
cli
sbb
and
sbb
lock
cltd
jmp
sbb
dec
cli
in
lods
fidivl
dec
in
and
les
out
mov
scas
pop
or
sets
push
or
lcall
pop
lret
or
mov
out
std
ret
dec
testl
add
arpl
ss
xchg
sbb
mov
aas
jge
sub
dec
pop
hlt
and
popa
mov
ret
mov
or
cli
test
and
notb
popf
cmpb
movsb
insl
xorl
pop
lcall
ss
sarl
or
adc
lods
xchg
movsb
pop
sahf
aad
pop
shl
repnz
jp
movsb
inc
into
add
xor
or
nop
and
and
aam
mov
mov
test
ret
insb
or
add
lock
xchg
or
or
add
imul
mov
out
insb
sar
xchg
lds
push
lds
dec
ror
testb
push
outsb
dec
stos
adc
cs
xchg
xchg
dec
jnp
sbb
mov
pop
add
clc
xchg
jle
fnstcw
pop
inc
ret
aas
lock
push
das
in
pop
fbld
mov
test
and
jl
in
outsb
inc
mov
mov
inc
pushf
negl
add
imul
mov
repz
jb
cmpsl
push
hlt
nop
mov
push
pop
int3
inc
push
inc
xlat
xchg
push
inc
les
mov
push
or
out
addr16
jmp
adc
add
sub
mov
outsb
cwtl
popa
popf
sahf
xor
addb
or
test
adc
push
in
jae
or
add
push
mov
aas
lods
cmpb
cmpsb
fidivrs
jne
xchg
addr16
add
xor
sbb
xchg
push
std
add
in
or
test
int3
pop
movsl
ficoml
mov
int
mov
les
xlat
lea
xor
in
fs
push
push
or
scas
mov
xor
xchg
jle
imul
mov
cltd
xchg
jne
inc
sbb
adc
pop
or
jmp
das
pusha
out
inc
insl
fiadds
inc
sti
popa
push
enter
dec
lds
push
ss
shld
and
jle
adc
mov
nop
icebp
dec
loop
mov
push
clc
mov
mov
ficoml
mov
adc
mov
pushf
mull
dec
movsl
mov
and
mov
ficompl
push
in
push
dec
xor
push
xor
adc
out
pop
xchg
mov
adc
fnstenv
popa
push
iret
push
icebp
in
out
inc
xor
je
addb
mov
sbb
sarl
leave
add
sahf
int
push
icebp
or
enter
jb
pop
sbb
jo
lea
push
push
push
cmp
mov
sarb
push
cmp
add
or
repz
insb
cltd
popf
mov
cs
lea
lds
push
inc
out
xor
dec
fldl
shl
sub
push
xchg
sub
rorl
xchg
pop
ret
cmp
repz
insb
adc
in
pop
enter
stos
les
std
stc
xchg
sub
mov
ljmp
sub
sub
adc
inc
stos
inc
ds
add
movsb
sbb
xchg
sub
ret
fldenv
lret
pushl
mov
fnstcw
cmc
add
and
addr16
loope
xor
ret
lahf
xchg
rcll
sbb
imul
inc
int3
xchg
push
out
adc
cmp
sub
stos
inc
add
pop
add
arpl
imul
mov
inc
mov
stc
testb
push
mov
pushf
xor
push
clc
inc
movsb
xor
xchg
loope
jb
add
stc
add
cmp
mulb
aad
jecxz
pushf
mov
movsb
add
add
sbbl
cmp
aas
mov
push
adc
mov
sbb
lret
movsl
jae
pop
inc
shrb
sub
ja
mov
mov
jl
xchg
push
xchg
in
sbbl
adc
iret
push
fistpl
mov
pop
push
dec
arpl
xchg
inc
jp
inc
or
das
cmp
jge
xchg
leave
pusha
neg
gs
mov
push
js
xchg
mov
sahf
icebp
cmp
xchg
jb
cmp
lods
jae
pop
cwtl
bound
and
and
mov
add
xchg
in
test
xchg
jl
mov
out
arpl
sub
imul
bound
lods
mov
lock
aad
aaa
jge
and
pop
ret
ret
inc
inc
cmpsl
ds
push
mov
pop
mov
psrad
ja
push
jno
out
test
fdivs
add
jecxz
out
ficoml
mov
mov
mov
shrb
ja
pushf
mov
rclb
test
and
or
push
or
sahf
pusha
push
or
sub
stos
inc
in
test
loop
ret
cld
dec
sub
out
int
pop
rclb
adcb
imul
mov
push
pop
into
js
fmuls
das
xlat
xorl
sti
data16
sub
sbb
jnp
lea
stc
cli
arpl
cli
push
pop
insl
push
in
daa
subl
or
pop
repnz
mov
sarl
fstl
xchg
nop
mov
rorl
add
mov
add
cwtl
stos
xchg
sbb
fs
fbstp
mov
jb
fdivl
jns
mov
subb
hlt
cwtl
adc
ds
push
cmp
pushf
push
jecxz
mov
repz
mov
or
jae
shr
out
cmpsl
insb
sbb
mov
and
ja
xchg
dec
out
push
insl
xor
jbe
xchg
aaa
jge
mov
push
dec
push
sarb
idivl
push
pop
jo
aas
repz
fisubs
andb
or
outsb
xchg
cltd
xchg
pop
pop
sbb
pop
sbb
inc
pop
xchg
mov
bound
out
cmp
dec
mov
pop
hlt
pop
sbb
xchg
lcall
mov
push
mov
jno
jne
cmpsl
pop
and
xchg
nop
push
pushf
lea
jbe
fistps
add
fisubl
push
fsubrl
mov
cs
fadds
jns
mov
pop
xor
int
push
jg
push
or
fiadds
mov
in
fisttps
add
insl
pop
out
xchg
xor
std
cld
xor
push
sbb
pushf
in
fisttps
scas
push
cwtl
sub
pop
sar
sarl
mov
sub
repnz
and
ret
mov
adc
nop
andb
add
mov
mov
enter
pop
inc
add
mov
lcall
inc
mov
lea
jmp
cwtl
das
lahf
push
cltd
vpcmov
xorl
shll
add
fldt
mov
loop
aad
popa
out
sbb
xlat
int
out
lds
into
or
inc
lds
fs
push
dec
sbb
into
popf
pop
push
adc
jmp
push
movd
arpl
jae
out
push
or
aas
jecxz
jg
loope
add
loope
pop
and
inc
inc
adc
inc
pop
jl
dec
sub
stos
insb
adc
jno
maskmovq
and
xchg
cmpsb
mov
adc
iret
lahf
call
push
ficoms
mov
push
jb
mov
and
jb
and
sub
cld
push
pop
ds
push
add
xchg
xchg
xor
jno
sarl
pop
push
mov
repnz
fimuls
pusha
sub
xchg
loopne
lcall
jae
adc
jl
in
pop
fisttpll
sbbl
mov
ds
mov
movsl
sbb
mov
pop
mov
repz
daa
cmpsl
loopne
cmc
sub
popa
sbb
xlat
dec
xorb
dec
in
sub
dec
outsl
push
push
dec
xchg
and
sbb
push
jo
loope
push
jge,pt
mov
jp
mov
mov
push
pop
sub
pop
je
inc
inc
xor
scas
inc
gs
insb
mov
mov
imull
in
inc
shrl
jge
out
mov
repz
lods
xlat
xor
nop
adc
adc
xchg
out
push
out
call
push
and
stos
imul
xchg
cmp
movsl
cmp
lods
mov
add
dec
adc
hlt
mov
mov
cmp
mov
push
test
fsin
jl
lahf
xchg
pop
jae
lea
fs
lahf
or
pop
shll
ret
pop
lret
cld
lret
push
lret
xlat
mov
repnz
js
rolb
in
in
xchg
call
mov
and
push
adc
sub
push
out
lret
dec
fcoml
dec
fistps
movb
push
adc
ds
xor
add
push
add
cld
push
dec
sbb
repz
inc
lds
fidivs
pushl
mov
fists
push
adc
add
mov
push
push
fldenv
sti
test
pop
sti
mov
pusha
mov
jmp
pop
lock
lret
mov
nop
cmc
mov
loope
lods
mov
ljmp
inc
or
and
push
gs
push
cmp
lahf
loope
or
lret
push
shrl
dec
cmp
les
insl
mov
pop
mul
sbb
pop
mov
xchg
sbb
and
jmp
sti
push
popf
enter
dec
jmp
mov
push
jmp
fwait
xchg
outsl
cmp
adc
das
push
test
jb
xchg
xor
adcb
inc
cmp
aaa
dec
dec
cmp
cmp
addr16
imul
dec
inc
mov
sub
cltd
movsl
bound
mov
xchg
dec
lea
pop
out
loop
lcall
jb
insw
and
cmpsb
and
fsub
push
mov
mov
add
subb
pop
mov
mov
lods
idiv
pop
int
cmpsb
mov
mov
loopne
adc
addr16
negl
icebp
ja
ljmp
inc
mov
rcrl
repnz
mov
scas
ljmp
movsb
iret
addb
sarl
mov
dec
push
pop
or
out
sbb
inc
cmpsb
jbe
mov
cltd
addr16
cld
es
push
pop
or
pop
clc
inc
cmp
add
lods
test
xor
ljmp
je
into
push
outsl
inc
fwait
xchg
push
cmp
lcall
adc
mov
sub
imul
in
insl
mov
mulb
xor
sti
sub
dec
add
outsl
mov
or
and
push
jae
in
test
xchg
fdivrl
sbb
dec
aam
xchg
add
adc
clc
xor
add
js
int
add
jo
xchg
aam
sub
dec
mov
inc
sub
scas
jno
adc
and
pop
data16
dec
cmp
aas
push
jno
cmp
insb
jns
pushf
ds
or
dec
repz
push
mov
in
mov
mov
leave
mov
add
add
lret
aam
push
cmp
lahf
jg
ds
rclb
mov
push
dec
add
repz
inc
test
pop
sbb
in
lods
aaa
sahf
xor
fisubl
call
mov
mov
dec
or
insl
cmpsl
push
aad
in
dec
movsl
push
dec
hlt
adc
ret
adcl
adc
adc
cmp
jns
jmp
or
add
mov
and
mov
and
aam
dec
iret
add
lds
std
adc
cli
mov
in
int3
xor
mov
adc
fdivr
divl
shrd
pop
xor
dec
jne
fcoms
mov
test
cmpsl
jge
or
push
sbb
insb
and
js
inc
inc
lods
icebp
mov
cmpsl
outsb
inc
xchg
adc
test
push
xchg
sbb
pop
inc
cwtl
das
pop
cmp
jge
out
push
pop
xor
shll
mov
hlt
mov
icebp
pop
or
add
xor
or
inc
lods
fidivs
into
int
in
in
dec
mov
aam
clc
in
pop
in
cwtl
je
int
mov
enter
cld
imul
sbb
push
and
js
pusha
ljmp
pop
rcl
push
addb
add
cmp
popf
adc
test
in
mov
adc
loopne
ret
js
mov
stc
cmp
mov
sbb
movsb
xor
movsl
jnp
bound
inc
enter
push
ds
andb
daa
inc
in
mov
cs
sub
call
es
arpl
push
idiv
inc
mov
xor
das
cmc
mov
aad
mov
pop
int3
fmull
xor
hlt
xchg
pop
int3
and
cli
imul
aam
pop
das
fisubrl
and
cs
outsl
push
std
bound
add
je
fwait
inc
repz
mov
push
or
sub
jg
and
pop
repz
lods
cmp
and
mov
call
cs
aaa
shlb
push
pop
jl
pop
inc
flds
dec
gs
pop
xor
pop
popf
cmpb
xchg
insl
nop
sub
jb
xchg
movsb
popf
in
and
push
pop
fbstp
fwait
mov
ljmp
repnz
mov
icebp
sub
in
mov
add
add
push
mov
inc
inc
add
cmp
in
push
mov
ljmp
push
cmp
roll
fbstp
cmp
mov
movsb
pop
mov
push
cmp
lahf
cmp
filds
pop
cmp
xchg
lock
test
std
jmp
loopne
fmuls
cmp
pop
add
ret
sbb
lea
xchg
aad
lea
aaa
addr16
jle
inc
cld
jle
cs
xor
mov
push
jmp
or
jo
cmc
fsubrs
pop
testl
loop
adc
int3
add
xor
xor
push
push
push
jmp
jo
jo
ficoml
mov
pop
dec
lods
inc
cmpl
lret
mov
pop
mov
jge
dec
push
popf
cmp
gs
les
test
enter
arpl
fmuls
leave
xchg
jmp
sbb
adc
insl
out
lahf
push
lcall
gs
push
cmpb
and
or
jmp
push
icebp
dec
sbb
shll
fstp
jbe
add
xorb
std
xchg
bound
test
es
std
in
cmp
dec
push
aas
mov
jno
push
inc
mov
loopne
jp
add
xor
loope
gs
stc
nop
xchg
pop
out
fstpt
sbb
or
mov
adc
fcompl
mov
cmpsb
adc
xchg
insb
outsb
add
jmp
dec
mov
xorb
sub
mov
xor
stos
inc
fdivl
mov
push
cmp
push
mov
push
movsb
pushf
xchg
mov
dec
push
in
cmp
shlb
repz
xor
sarb
xor
loop
pop
test
scas
test
sti
push
pusha
stc
add
sbb
shrb
inc
clc
lods
dec
jecxz
jo
cmp
int3
rcrl
xor
or
test
mov
mov
sbbb
jg
mov
or
cmp
jnp
mov
ret
ret
mov
test
adc
ret
icebp
mov
into
jne
jno
inc
call
outsl
daa
dec
pop
jmp
insl
stos
and
push
js
push
cwtl
call
out
insb
outsl
sbb
adc
out
jno
scas
out
push
add
xchg
add
dec
test
push
in
cmpsl
jmp
loop
dec
jb
push
ror
rclb
or
arpl
push
cwtl
mov
xchg
call
insb
jmp
cmc
es
fsubp
clc
icebp
jge
sub
or
pop
mov
push
adc
jmp
lret
xchg
imul
push
aad
dec
push
and
push
mov
xchg
cwtl
orl
inc
pop
push
dec
repz
sbb
jno
xlat
cld
mov
jne
jg
out
mov
cmp
sarl
rolb
lock
loopne
fldpi
bound
cld
adc
std
je
ljmp
add
enter
decb
sbb
sarb
daa
orb
push
xchg
sub
aaa
les
inc
jle
push
add
mov
test
comiss
adc
pop
sti
clc
sti
mov
dec
ss
jp
pop
insb
inc
sub
xchg
push
rcl
int3
loope
cmp
insb
cmc
pop
or
inc
cli
test
dec
leave
loopw
sbb
dec
mov
aas
push
or
add
xchg
lret
jo
dec
xchg
lds
inc
sbb
push
int
mov
mov
mov
adc
push
in
pop
jne
add
cmp
stos
test
xor
lcall
jns
mov
out
push
or
jge
lods
inc
dec
push
xor
out
loopne
xlat
outsb
mov
inc
dec
loopne
xchg
push
out
add
cmpsb
test
mov
mov
jecxz
out
lret
aad
mov
pop
jmp
push
mov
and
sbb
xchg
stos
clc
jns
cli
push
jmp
push
test
xlat
outsb
cli
testl
aam
mov
mov
mov
adc
aad
lods
mov
mov
fmulp
adc
adc
out
fwait
mov
jno
dec
or
push
movsl
out
outsl
dec
or
pop
xchg
sub
mov
sub
shl
pop
test
jge
fisubl
jnp
js
stos
addr16
out
aam
es
cmpsb
leave
lea
outsl
out
push
nop
inc
cli
aam
pop
stos
out
in
mov
mov
cmp
dec
or
or
sub
shlb
loopne
rolb
dec
adc
add
xchg
sahf
sbb
outsb
cmc
je
addr16
mov
outsl
sti
fcmovbe
js
in
jmp
inc
add
mov
mov
into
out
lds
or
ljmp
gs
lret
enter
arpl
lea
jae
xor
pop
push
mov
fiaddl
xchg
adc
pop
inc
inc
jns
fists
mov
xor
sub
sub
es
cmp
repz
aad
mov
or
fisubl
daa
lods
out
xchg
cmp
pop
dec
jo
fmuls
mov
cmp
nop
cmp
pop
psrlq
cmp
or
pop
daa
stos
push
add
sbb
adc
mov
pop
sti
xchg
cmp
xchg
fcmove
aad
mov
inc
popl
lds
mov
pusha
cli
mov
jne
outsb
pop
std
mov
nop
xchg
cmp
sbb
mov
ljmp
push
decb
mov
or
cmp
stos
xor
push
ss
xor
mov
dec
in
xchg
cmp
cli
mov
push
les
orb
add
hlt
out
dec
pop
loop
push
jo
es
xchg
data16
lret
ret
in
add
sub
xor
add
rcll
dec
sub
movsl
sub
in
xchg
nop
lods
xor
enter
sub
mov
dec
aas
adc
stos
imul
cmp
imul
cmp
inc
test
jge
cld
inc
jle
push
in
ret
xchg
cmp
xor
mov
mov
mov
push
roll
aad
push
dec
or
jg
nop
lods
push
jge
dec
mov
mov
xchg
dec
push
fstps
sbb
mov
inc
lods
add
mov
sbb
xchg
fwait
insl
jmp
add
xchg
add
scas
cs
pop
aam
fidivrl
or
mov
dec
les
lea
rcll
ficoms
fdiv
cli
push
mov
mov
fstpt
xchg
lret
or
loopne
jg
push
pop
stc
shrb
lea
cmpb
xlat
xchg
fdivrs
or
into
mov
aad
add
sub
pop
ror
add
pop
fcoms
xlat
adc
jnp
icebp
adc
xchg
imul
mov
test
not
cwtl
lcall
or
int
leave
mov
sar
push
cmp
jae
es
jo
add
pop
sub
shl
xchg
insl
push
in
orl
fs
or
mov
call
jae
imul
jo
add
dec
or
insb
les
idivb
add
lcall
cmc
popf
std
iret
mov
loopne
aaa
addr16
cltd
add
dec
or
mov
fdivrl
cmpsl
dec
or
scas
sbb
push
jp
mov
mov
pop
adc
stc
sbb
leave
mov
inc
fdivrl
adc
cltd
jge
dec
pop
inc
fs
pop
xchg
pushf
adcb
jns
cmpsl
iret
xchg
inc
fdivrl
sbb
subl
sbb
cld
pop
adc
push
ret
stc
sbb
push
add
inc
fdivrl
add
scas
cmp
add
gs
xchg
xchg
or
mov
pop
or
sbbl
adc
test
cmpsl
xor
iret
mov
pop
cld
lock
aas
lcall
adc
push
xor
sub
les
loope
cld
nop
aaa
mov
scas
xchg
mov
mov
jge
in
std
pop
scas
cld
pop
cli
or
pop
stc
inc
cmpsl
cmp
lcall
jge
jecxz
std
pop
and
fdivrl
cmp
pop
stc
inc
movsl
cmp
sbb
mov
adc
fs
xchg
xchg
mov
xor
mov
mov
stc
mov
test
dec
xchg
push
and
push
addb
xor
fcompl
cmp
and
popf
inc
push
xor
pop
mov
jmp
stc
or
jno
dec
jle
movsl
int3
xchg
repz
scas
sbb
inc
or
popa
lods
add
push
jno
lret
push
and
pusha
push
negb
jae
in
lock
and
inc
lods
lret
xchg
pop
add
rcrb
inc
popa
out
imul
imul
aas
jp
es
cs
adc
sbb
inc
bound
jb
jb
loop
pop
cmp
es
test
xchg
xchg
sbb
inc
gs
clc
bound
cmp
and
xchg
sbb
inc
push
push
jb
mov
jbe
cmp
and
xchg
mov
add
sbb
inc
add
testb
cmp
scas
inc
or
sarb
push
adc
fcomi
push
dec
fidivs
xor
mov
xor
push
lods
das
jp
cmpsl
sub
jno
jg,pt
movsb
sub
imul
push
jle
lcall
movsl
daa
out
pop
ror
or
jns
std
pop
add
push
adc
and
sarl
aaa
xor
js
jns
add
fisubrs
in
or
jae
daa
cmpsl
pop
gs
scas
out
repnz
mov
add
and
daa
mov
cmp
xor
icebp
or
push
sub
pop
fsubl
and
rol
das
and
adc
add
or
fidivl
push
and
ret
and
nop
sbb
adc
call
and
test
mov
sbb
int
add
ret
jmp
push
mov
push
mov
xor
lahf
push
sub
jp
lea
add
addr16
mov
jge
cmp
or
inc
loope
rcrl
or
andb
lcall
adc
mov
mov
aaa
mov
decl
mov
cmc
lcall
les
imul
in
je
lods
sbb
into
mov
cld
pop
inc
lods
fnstcw
cltd
test
sub
inc
test
repz
mov
call
clc
add
shll
aaa
pop
inc
adc
repz
fistps
push
lock
push
ret
pop
ret
inc
cmp
das
aam
insl
xor
jle
jle
jno
adc
ja
add
mov
lea
jo
jmp
cmp
pushf
aas
mov
cmpsb
sub
fsubl
ss
mov
stc
arpl
fsubrl
jge
out
mov
xor
mov
cs
mov
mov
jp
mov
testb
inc
popf
imul
jno
ljmp
add
push
stc
test
test
mov
scas
test
push
daa
repz
push
test
fadds
mov
ds
jg
sub
xchg
lret
popf
push
cli
jo
mov
push
repz
push
add
les
mov
mov
sub
xchg
cmp
jmp
stc
out
pushf
jecxz
cmp
mov
sub
mov
push
cmpsl
sub
mov
pop
cmpsb
sub
jne
dec
loope
push
mov
in
cmp
fld
stc
push
roll
cmp
stc
jl
into
dec
in
jne
sahf
sahf
inc
or
insb
inc
sbbb
xchg
sarb
notb
dec
adc
shll
sbb
mov
mov
xchg
cwtl
or
frstor
xor
jmp
enter
adc
data16
xorl
pop
sbb
push
test
subl
into
mov
and
sbb
lcall
sarl
jl
cmp
ret
add
jns
or
or
adcl
inc
pop
mov
mov
inc
push
in
dec
push
arpl
out
imul
inc
adc
lods
sub
xlat
movsb
xor
mov
ljmp
pusha
mulb
mov
pop
icebp
xchg
sti
xchg
or
and
and
jbe
les
fwait
inc
mov
mov
jp
cld
arpl
jl
repz
jb
loope
mov
repnz
test
mov
sub
pop
fs
out
outsl
dec
ficompl
dec
pushf
push
test
adc
call
or
out
adc
inc
es
fucomp
outsb
scas
pushf
push
add
mov
mov
adc
mov
mov
stc
pop
and
adc
xorl
sbb
outsb
adc
nop
xchg
mov
into
jg
mov
xchg
aas
xchg
stos
adc
cmp
sub
mov
out
xchg
fsubrs
movsl
or
fisubl
mov
pusha
lods
cli
adc
mov
adc
inc
jecxz
adc
xor
xor
ljmp
jmp
int
and
roll
insl
out
mulb
xor
push
decb
mov
mov
mov
cmpsl
das
test
mov
ds
mov
jmp
aad
movsb
xor
or
cmp
fnsave
repnz
subl
aas
cmp
pop
fbld
dec
scas
or
mov
dec
test
mov
push
leave
and
pop
add
adc
inc
or
sub
bound
dec
adc
out
arpl
xor
pop
jno
test
mov
les
out
mov
insb
in
cs
xor
leave
cs
push
add
sahf
cmp
pop
xor
stos
lds
test
xor
in
jne
pop
push
out
mov
push
fnop
ja
mov
push
mov
sahf
mov
xchg
cmp
xlat
sub
out
xor
lea
fs
lock
cmc
gs
jmp
in
mov
xchg
test
mov
push
lret
in
in
adc
je
inc
data16
jno
movsl
sub
lock
jae
cltd
call
xchg
inc
sti
mov
ss
jecxz
jg
adc
js
sbb
stos
and
and
icebp
fidivrs
cltd
add
cli
pop
dec
push
and
pop
cwtl
pop
add
pop
lea
dec
das
test
pop
pop
mov
pop
mov
mov
jne
push
ja
cmc
pop
imul
test
mov
in
xor
stc
pop
ja
ret
imul
pop
roll
pop
mov
nop
push
cmp
xchg
pop
dec
out
lret
xlat
outsb
cld
mov
push
aad
add
mov
fmuls
jl
xchg
pop
sub
std
fiadds
adc
aaa
mov
test
push
dec
mov
cmp
sbb
pop
pop
repnz
cmp
imul
add
sbb
in
bnd
xchg
xor
push
add
sub
lcall
daa
mov
mov
mov
mov
fimuls
aam
xchg
pusha
popa
loopne
mov
mov
outsl
jmp
inc
mov
into
in
sbb
jnp
outsl
adc
jo
mov
xchg
mov
movsl
dec
mov
adcb
roll
cs
pop
jb
pop
stc
jl
pop
cli
stc
fs
imul
adc
lods
mov
lods
inc
or
rorl
cmp
jg
ficompl
shll
in
outsl
cmp
sub
mov
cmp
daa
sbb
xor
and
or
scas
xor
sub
mov
jno
or
shrl
cmp
stos
sbbb
pop
xor
and
push
mull
cmpsl
in
test
pop
push
std
jg
dec
adc
xchg
cmp
test
fists
push
jge
inc
push
xchg
outsl
jmp
ret
adcl
inc
dec
pop
lahf
inc
dec
lahf
and
outsl
sbb
lock
ss
movsb
insl
out
mov
add
lea
or
sub
test
and
aam
cs
xchg
aaa
imul
mov
pop
hlt
sarl
cwtl
xlat
sbb
xchg
dec
mov
push
lahf
inc
loopne
mov
or
push
fcomps
push
prefetch
fwait
hlt
pop
orb
repnz
mov
stos
xor
and
test
ds
jb
mov
mov
xor
sub
jle
leave
mov
gs
mov
push
sub
pop
cmc
or
mov
fcomps
xchg
cmp
test
cmp
dec
arpl
or
cmc
lods
ret
ja
xor
out
lods
hlt
into
orb
push
rorl
es
jbe
pop
lret
xor
jp
push
fiadds
add
psrlw
ja
sub
or
cmpb
pop
test
mov
mov
push
stc
cld
xchg
adc
pop
mov
and
clc
dec
or
movb
enter
rcll
dec
or
or
xor
pop
and
cmp
outsb
fadds
jle
fidivrs
bound
mov
add
arpl
mov
adc
imul
outsl
imul
xchg
jns
mov
stos
popf
push
testl
pop
mov
mov
stos
jns
xor
iret
addr16
jno
jno
mov
addr16
push
cmp
es
cli
stos
xchg
sbb
cld
pop
sti
call
push
push
sub
out
lret
pop
pushf
cmp
scas
aaa
mov
jns
cmp
jp
ret
xchg
jecxz
ret
xchg
mov
in
sbb
lods
dec
cmp
mov
in
mov
xchg
cld
pop
pop
lcall
lock
dec
dec
lds
inc
bound
xor
mov
ja
nop
test
mov
mov
dec
adc
rolb
leave
lods
mov
mov
rclb
jl
mov
xlat
popf
jae
lea
mov
adc
mov
lods
aas
mov
xchg
cmp
jno
jmp
add
jnp
arpl
mov
gs
sarl
or
nop
insl
sub
test
jl
dec
stos
call
in
jb
stos
test
jmp
aas
lcall
xchg
inc
jmp
sub
rcr
push
add
enter
xor
clc
add
gs
mov
bound
or
lahf
push
lods
sub
inc
roll
dec
or
les
inc
dec
loop
fists
pop
jp
inc
or
aad
repnz
je
mov
rcl
and
sarl
aaa
sarb
xor
sub
mov
fsts
xor
dec
mov
mov
mov
mov
mov
mov
cmpsl
push
push
jmp
jmp
lds
sbb
orl
inc
rorb
int
orl
mov
cmp
sub
aam
roll
pop
cli
cmpsb
xor
sub
push
xor
movsl
adc
dec
fidivrl
push
ret
dec
out
outsb
fnstcw
aam
push
push
add
nop
or
lods
sub
mov
mov
shr
packsswb
aas
jp
lock
pusha
adc
or
fadds
lret
lods
and
rol
add
dec
add
adc
dec
mov
subb
orl
iret
xchg
mov
dec
push
lret
mov
xor
sbb
dec
mov
in
pop
or
cmp
add
imull
cmp
outsl
jmp
jge
cmpsl
insl
imul
js
call
insb
xor
jg
push
and
xchg
jae
xor
lods
dec
jecxz
xchg
mov
mov
fildl
add
repnz
xlat
push
test
add
adc
jle
ljmp
aad
jmp
sub
add
sub
cmp
mov
mov
dec
or
cmc
lret
mov
in
ret
nop
pop
push
add
push
add
xchg
cmp
jecxz
mov
lods
das
jg
fildll
rorb
rorl
data16
in
mov
add
fbstp
sarb
mov
pop
add
lcall
mov
xchg
cwtl
dec
ffreep
xchg
xchg
jmp
jae
lods
daa
mov
mov
cwtl
adc
dec
lds
imul
popf
cmpsl
sub
adc
jae
inc
and
and
sub
out
mov
xor
fdiv
mov
or
mov
jnp
inc
and
push
add
pop
cli
les
test
push
aad
notl
popa
dec
lock
xchg
mov
ja
lods
rep
xchg
icebp
push
aas
mov
jp
and
xor
or
dec
ds
aam
and
add
leave
std
xlat
lret
in
aad
mov
mov
add
mov
mov
fistps
lods
jae
leave
xchg
into
bound
mov
sbb
sbb
push
jno
rclb
subb
popa
inc
iret
xchg
les
rclb
cld
cmp
das
mov
sub
dec
mov
ret
stc
mov
psrlq
scas
xor
inc
sti
pop
mov
jae
negb
adc
leave
sbb
fwait
inc
push
inc
or
call
std
push
shr
lods
das
add
adc
jo
popa
in
mov
mov
mov
jg
pop
rclb
or
xor
pop
testb
loop
sub
hlt
daa
inc
sub
pop
aam
xchg
and
pop
add
xor
aaa
add
pop
movsb
jl
pop
inc
mov
xchg
scas
xor
mov
mov
leave
loope
rcrb
movsl
scas
pop
mov
add
mov
lods
mov
xor
mov
popa
repnz
jl
push
ret
movsl
or
mov
ficompl
mov
pop
mov
jg
rolb
hlt
push
xlat
orb
push
inc
add
dec
mov
movsl
adcl
roll
insl
push
add
cmp
pop
pop
add
cmp
jb,pn
mov
lods
movsb
sub
lods
or
aas
mov
scas
adc
mov
mov
jmp
fwait
or
cmpb
loope
sub
pop
mov
mov
lahf
add
mov
shl
jae
stos
lods
sub
sbb
scas
inc
cmp
jnp
cmp
arpl
ljmp
aas
pop
notl
sbbl
mov
mov
frstor
cmp
loope
aad
cmp
pop
mov
jmp
incb
subb
insb
aad
sub
jnp
xor
mov
lds
rorb
mov
mov
fildl
outsl
add
xchg
mov
dec
adc
punpckhbw
pop
pop
nop
ds
mov
mov
into
sub
ljmp
std
test
into
rclb
mov
popf
pop
add
lret
jge
jnp
add
push
insl
jmp
cs
dec
cmp
int3
fwait
nop
ds
sbb
sbb
decb
mov
into
push
out
popa
in
jo
mov
mov
mov
div
popa
lock
les
pop
adc
leave
xchg
test
lock
mov
cmpsb
dec
or
sbb
push
pop
xchg
inc
lret
cmp
adc
int
jo
xlat
lahf
ds
add
icebp
or
mov
test
out
adc
roll
test
mov
push
push
pop
dec
outsl
je
mov
mov
xchg
sub
movl
lods
xor
push
mov
in
test
mov
cmp
ljmp
mov
sbb
mov
clc
aad
inc
adc
pop
lds
jge
push
fnsave
test
or
les
inc
adc
les
imul
jmp
mov
test
rolb
pop
cmc
cmc
jno
fisubs
mov
and
dec
xor
or
sarb
pop
fdivrl
sub
iret
mov
mov
mov
pop
cmp
movsl
in
sbb
inc
rorl
and
cmp
pop
clc
jbe
mov
outsb
insl
sahf
add
insl
xor
lock
add
xchg
cmp
xchg
cmp
fstpt
or
adc
iret
xchg
and
mov
rcrl
lods
out
frstor
add
and
leave
loop
pop
push
div
fs
in
cld
cmp
xchg
cmp
mov
jnp
ss
jl
pop
jns
arpl
lods
inc
xchg
cltd
inc
ss
mov
outsb
and
leave
jnp
xchg
call
std
int3
popl
jg
dec
xchg
add
mov
outsb
repnz
cmpsl
pop
add
pop
add
mov
sahf
pavgb
leave
insl
repnz
lds
movsl
adc
mov
sub
ss
or
lock
xor
cli
or
jne
push
dec
cmc
cmp
mov
icebp
jnp
pop
loopne,pt
outsl
test
jge
add
jnp
dec
data16
xchg
stc
adc
mov
inc
punpckhbw
adcb
sbb
test
cmp
sub
icebp
pop
or
bswap
pop
mov
push
push
cld
xchg
imull
xchg
dec
test
shll
sbb
xchg
ds
scas
shll
sbb
pop
mov
sbb
xor
dec
jae
rol
adc
out
adc
ljmp
std
lcall
cmpb
push
fs
jle
jg
mov
push
rorb
int
mov
jae
lods
daa
js
xchg
inc
pop
sti
lcall
or
iret
fs
rcll
push
shrb
fbstp
icebp
test
insl
sbb
jno
xor
and
mov
jnp
movsb
ss
out
push
test
negl
lods
ds
shl
jge
add
aad
stos
sub
add
push
stc
out
pop
pop
push
pop
std
push
enter
jno
inc
jno
sub
cmpsb
xor
mov
mov
inc
mov
jae
xor
pop
js
ds
or
fnstenv
in
fcompl
dec
in
arpl
xchg
mov
add
mov
jnp
stc
lahf
inc
mov
mov
fisttps
pop
sub
iret
dec
ljmp
mov
shl
cmp
dec
testb
jae
push
repnz
mov
rcr
inc
inc
or
or
jle
push
pop
add
shrl
aaa
mov
stos
lods
call
icebp
sbb
pop
dec
mov
sbb
mov
xorb
and
into
mov
into
mov
jl
rolb
out
popa
ret
cmp
xlat
ficomps
push
xor
add
mov
mov
test
mov
push
lret
stc
jnp
stc
sbb
addr16
xor
enter
sub
xchg
mov
out
cld
jmp
xor
sbb
lods
cmp
das
popf
test
aaa
jl
lret
push
and
icebp
std
aas
or
leave
out
sub
pminub
push
push
or
ljmp
push
add
cmp
xor
mov
out
out
xlat
jle
clc
js
mov
stos
jecxz
mov
test
mov
les
lea
inc
or
cli
adc
xchg
test
popa
jmp
rcrb
ret
and
clc
cmc
adc
dec
jge
popa
mov
mov
inc
adc
aam
ja
push
pushf
xor
sbb
es
dec
adc
inc
dec
ud2
pop
mov
sub
lahf
inc
arpl
mov
jbe
add
cmpsb
cltd
inc
dec
dec
ds
rcrb
addl
into
lea
popf
ja
mov
sti
pop
into
mov
jecxz
mov
ds
and
mov
test
nopl
mov
mov
cltd
cmp
test
ret
adc
fisubs
xor
add
xchg
add
test
pop
call
arpl
mov
jb
jne
jle
cmpsb
xchg
fdivrs
mov
push
xchg
jle
xadd
adc
pop
push
adc
add
and
imul
fistl
cmp
jl
jne
cmpb
mov
and
push
fisubrl
or
add
push
mov
pop
shll
dec
pusha
dec
loope
ljmp
and
pop
repnz
sbb
shl
enter
push
call
int
sarb
lret
xchg
mov
cmp
std
lcall
rcll
ret
xchg
test
sarb
jno
xlat
out
and
dec
pop
cmp
xor
fmul
mulb
xor
test
xor
rcr
js
lcall
cmp
dec
sub
jmp
idivb
fcmovnb
aaa
mov
xchg
or
mov
jmp
jmp
cmc
out
addr16
cli
push
add
lret
pop
mov
xchg
les
clc
mov
aas
call
cli
stos
xor
cmp
arpl
loope
or
fstpl
sub
inc
sbb
mov
cmp
push
lds
xlat
leave
mov
pop
je
jbe
and
cmp
lcall
mov
scas
loope
fistps
xor
fmull
fcmovnbe
outsl
jmp
add
ret
repz
sti
pop
or
scas
sub
lret
pop
call
push
rolb
sbb
sub
xor
fmulp
push
add
stc
mov
adc
mov
jg
lods
leave
mov
and
pop
insb
mov
scas
insb
je
push
mov
add
test
pop
sbb
dec
cli
popa
sbb
jle
arpl
lods
jae
dec
and
dec
bswap
jae
mov
add
jmp
jno
in
jae
popa
and
enter
rclb
or
daa
inc
sarl
aaa
iret
xchg
es
dec
adc
xor
xlat
jnp
push
gs
or
arpl
push
pop
mov
mov
stos
jns
imul
das
mov
test
push
jo
popa
jmp
data16
xchg
fiaddl
ljmp
mov
and
jmp
icebp
cmc
cmp
push
mov
mov
jge
ja
popf
cmp
jo
dec
mov
pop
sti
add
pop
xor
sbb
les
mov
mov
rcll
xchg
sbb
insl
adc
ret
push
jp
add
cltd
cmp
mov
mov
and
fsubrp
insl
aas
cli
pop
rorb
adcb
addb
xlat
outsb
adc
push
aad
xchg
cmp
pop
test
cli
pop
cmp
xor
test
mov
loop
mov
mov
hlt
inc
mov
mov
mov
mov
iret
roll
mov
xchg
add
xchg
cmp
lcall
jno
pop
cld
adc
mov
xchg
addl
ja
shll
enter
mov
xor
subb
mov
int3
xor
iret
adc
dec
push
aaa
xchg
ret
sub
rcll
push
push
mov
pop
xchg
jbe
aaa
dec
dec
or
sub
pop
std
dec
jns
call
pop
xchg
push
mov
mov
inc
xlat
inc
xlat
pop
add
leave
pop
add
sti
sarb
cs
vmwrite
and
dec
adc
aad
lret
int3
nop
xchg
iret
mov
fxch
pop
jmp
or
bound
adc
outsb
adc
xor
jns
jmp
adc
clc
xchg
cmp
repnz
cmp
sub
pop
sbb
orb
movb
inc
jb
xchg
inc
jg
xor
mov
mov
adc
and
cmpsl
ds
jb
xchg
sub
or
inc
cmp
in
adc
xchg
sub
pop
pop
enter
nop
mov
or
dec
adc
sbb
pop
fucomip
xchg
or
jno
inc
loope
fcomps
test
lret
inc
cmpsl
imul
enter
iret
cmpsb
sub
xchg
dec
sahf
dec
or
xchg
cmc
mov
hlt
adc
stos
dec
adc
and
rorb
sbb
jg
iret
lahf
ss
jmp
push
pop
femms
lret
mov
mov
pop
div
out
sti
cwtl
in
adc
test
mov
mov
lods
mov
dec
mov
push
mov
sbb
push
sarl
inc
cli
push
shll
mov
or
mov
mov
movsb
mov
dec
or
loopne
dec
cli
and
sar
loop
sbb
lcall
repnz
orb
int
cwtl
push
jecxz
pop
cld
incb
mov
sbb
xlat
mov
outsb
add
mov
mov
jb
sbb
mov
push
fidivrl
repz
mov
ja
cs
inc
cmp
repnz
or
negl
pop
in
jnp
cli
pop
mov
in
push
stos
mov
ss
movsb
sub
sub
ret
pop
add
sub
jne
scas
xchg
cmc
add
shlb
or
fcomp
js
dec
add
xchg
mov
and
movsb
sub
jae
xchg
aaa
inc
arpl
lea
xchg
inc
push
inc
dec
mov
cltd
push
dec
pop
scas
adcb
cmp
cmp
scas
xor
jp
fiaddl
fdivs
fs
jb
ja
sbb
mov
push
jno
enter
mov
repz
inc
xor
and
mov
push
jbe
or
inc
lret
xchg
xor
sbb
pop
add
lret
xchg
dec
outsl
repz
and
push
clc
leave
sub
pop
int3
and
adcl
inc
aam
xlat
in
mov
dec
add
idivb
scas
jno
faddl
sbb
repz
sub
inc
movsl
cmp
jge
mov
pop
or
test
loope
les
mov
scas
cwtl
inc
pop
xchg
push
xor
daa
icebp
pop
mov
stos
test
jb
in
sti
lahf
orl
ret
adc
inc
adc
pop
stos
fldcw
mov
mov
in
movsb
jo
sbb
ret
lahf
ss
pop
and
dec
imul
fwait
mov
cli
xchg
out
or
sbb
xchg
popa
aaa
into
xchg
mov
push
in
push
in
in
fsubrs
add
testb
lods
adc
xor
das
dec
xor
out
push
in
addl
mov
sub
sub
jl
inc
fnstsw
enter
fs
int
out
and
sbbb
inc
add
jne
mov
mov
call
fdivl
cmp
insb
cmp
xchg
outsb
lea
sbb
adc
ss
xor
dec
data16
jmp
xchg
insl
mov
mov
nop
daa
or
adc
pop
xorb
mov
int3
arpl
aam
addl
daa
or
stos
jns
mov
std
lret
inc
push
pop
push
sbb
in
mov
les
lcall
and
inc
push
fdivl
mov
cli
xchg
in
or
adc
push
sbb
xchg
pusha
aaa
into
xchg
mov
push
in
push
in
jecxz
fsubrs
add
or
pop
testb
stos
adc
fsubrl
xor
cs
xor
out
push
in
addl
or
daa
imull
mov
jnp
inc
fnstsw
enter
fs
int3
out
out
and
sbbb
inc
add
je
mov
mov
out
xlat
sbb
fdivl
cmp
imul
xchg
insl
mov
mov
scas
mov
loope
int
xor
jmp
xchg
insl
mov
fxtract
mov
fsts
test
pop
jg
mov
int3
arpl
shr
addl
ja
and
lret
cld
lret
sti
sbb
arpl
dec
jo
jl
outsb
sbbl
hlt
rcrl
inc
adc
push
inc
addr16
xlat
cwtl
fdivl
mov
cli
xchg
in
or
cmp
pop
fwait
xor
mov
push
jecxz
push
in
loop
fsubrs
add
push
testb
stos
adc
fldt
xor
sub
dec
push
out
push
in
addl
or
imulb
mov
jp
inc
fnstsw
enter
fs
lret
out
out
and
sbbb
inc
add
jae
mov
mov
xlat
pop
out
jae
cmp
push
cli
xchg
insb
mov
lea
scas
mov
loopne
int
xor
jmp
test
insl
mov
jb
mov
hlt
mov
fcoms
test
pop
jle
scas
jle
arpl
shr
addl
or
test
es
sti
leave
inc
sbb
pop
dec
sbb
dec
outsl
in
mov
ret
repz
inc
adc
xlat
xchg
data16
mov
cli
xchg
jmp
jge
cmp
sbb
pop
aaa
into
mov
push
loop
push
in
loope
fsubrs
add
push
testb
test
mov
xor
sub
into
gs
push
out
dec
in
addl
or
and
inc
stos
inc
jns
inc
fnstsw
enter
fs
lret
jge
in
sbbb
inc
add
jb
mov
mov
in
xlat
push
out
jae
cmp
imul
jl
mov
fstpl
int
xor
jmp
test
insl
mov
jb
mov
hlt
mov
xlat
nop
daa
or
adc
pop
jge
scas
jge
arpl
shr
addl
and
lahf
push
jne
and
enter
enter
sbb
pop
dec
sbb
dec
outsb
in
mov
roll
repnz
and
inc
gs
xlat
xchg
fdivl
mov
cmc
call
or
cmp
sbb
mov
into
mov
push
in
loopne
fsubrs
add
push
testb
test
stos
fldenv
xor
sub
into
gs
dec
in
addl
or
and
sub
js
inc
fnsave
enter
fs
leave
in
out
push
jmp
sbb
mov
mov
ret
in
xlat
adc
aaa
pop
cmc
push
mov
mov
scas
mov
fidivs
int
xor
jmp
adc
mov
jb
mov
hlt
mov
nop
daa
or
adc
pop
jl
lods
jl
arpl
iret
ljmp
and
lahf
push
je
and
test
fcomi
sbb
pop
dec
sbb
dec
insl
out
lahf
push
sbb
lahf
ss
adc
mov
inc
fs
fcoms
mov
mul
mov
xchg
call
or
mov
pop
pushf
xor
scas
mov
in
fiadds
fnstenv
pushl
xor
mov
test
lods
fldenv
xor
sub
int
sub
call
jle
outsl
push
rcrl
lea
repnz
mov
js
inc
fdivl
leave
pusha
lret
xchg
arpl
in
out
push
jmp
add
outsb
xchg
and
shl
fcoms
aaa
pop
imulb
stc
nop
push
mov
scas
mov
fdivl
push
bound
push
ljmp
jno
mov
cmc
mov
aam
es
sub
stos
pop
daa
lods
inc
pop
jl
enter
bound
jmp
add
push
jae
and
stos
inc
clc
les
sbb
pusha
dec
push
arpl
inc
insb
out
sahf
push
add
ss
adc
inc
push
mov
fsts
pusha
mul
mov
xchg
out
jg
cmp
sbb
mov
into
mov
push
in
faddl
fidivl
std
jae
das
push
clc
popl
cmpsl
push
lods
fsubs
xor
sub
int
sub
jge
jmp
jl
jo
rcrb
mov
and
inc
ja
inc
fdivl
lret
xchg
arpl
jg
out
sbb
aas
push
popf
jo
lahf
ss
xchg
and
ret
push
mov
loope
jb
ss
mull
stc
nop
data16
mov
fistpl
or
mov
ljmp
jno
mov
testb
sub
pop
and
xor
lods
js
bound
lret
jmp
push
push
push
or
movsb
jo
mov
test
lret
adc
cli
inc
imul
popf
sbbw
push
popf
out
mov
and
push
bound
xchg
pop
fdivl
mov
clc
in
cli
xchg
in
adcb
add
sahf
xor
mov
in
fidivl
cld
jae
cs
clc
popl
cmpsb
push
lods
xlat
mov
xor
sub
int
sub
jmp
jnp
jo
iret
pushf
or
and
daa
mov
jbe
inc
fdivl
lret
xchg
arpl
ljmp
sbb
push
popf
outsl
cmp
mov
mov
loopne
jb
xor
stc
nop
xchg
mov
ficompl
or
mov
ljmp
jno
scas
aam
lea
rorl
stos
pop
and
inc
push
jp
leave
stos
ja
bound
lret
cld
push
outsl
push
push
sbb
lea
outsl
es
test
fcomi
pop
lret
adc
inc
push
jg
sbbl
out
mov
and
push
cmp
pop
fdivl
mov
clc
in
cli
xchg
jecxz
adcb
add
mov
pop
sahf
xor
xchg
push
in
fsin
fidivl
sti
jae
sub
dec
xchg
sub
mov
xor
sub
int
daa
dec
push
jmp
jp
jo
into
fwait
or
and
daa
mov
jne
inc
fdivl
lret
xchg
arpl
ret
jmp
sbbl
outsb
cmp
mov
mov
jb
xor
mull
stc
nop
xchg
mov
fstps
or
push
ljmp
jno
scas
shl
lea
daa
adc
pop
and
leave
stos
jbe
bound
leave
jmp
push
dec
sbb
lahf
dec
jo
and
outsb
es
cmc
rolb
lret
adc
inc
imul
sbb
mov
ss
or
ficoml
mov
clc
jecxz
cli
xchg
loop
adcb
add
mov
push
sahf
xor
xchg
push
in
fdivr
fidivl
cli
jae
sub
clc
popl
movsb
push
lods
aad
scas
inc
shl
xor
daa
hlt
int
es
push
jmp
jns
jo
int
or
and
daa
mov
je
inc
fdivl
lret
xchg
arpl
ret
jg
in
sbb
cmp
popf
insl
aaa
lahf
imul
inc
fsts
jb
xor
fs
nop
arpl
pop
scas
mov
pushf
xor
xlat
xor
push
pop
sub
pop
jg
outsl
mov
jno
lods
shl
lea
add
adc
push
and
leave
test
lret
sti
enter
sbb
push
dec
sbb
lahf
dec
outsl
lea
insl
es
hlt
mov
lret
adc
inc
push
sbbl
in
mov
ss
or
ficoml
mov
clc
loop
cli
xchg
loope
adcb
add
mov
push
sahf
xor
test
push
in
xlat
cld
fidivl
stc
jae
sub
popl
mov
scas
inc
shl
xor
es
and
inc
jmp
js
jo
int3
cltd
or
pop
in
daa
mov
jae
inc
fsubrl
lret
nop
arpl
shl
jg
jecxz
sbb
ss
ss
mov
fsts
fstp
jb
xor
arpl
stc
nop
bound
scas
mov
pushf
xor
xor
push
pop
sub
pop
jle
outsl
mov
jno
lods
shl
lea
into
add
lods
inc
push
ja
leave
test
lret
bound
jmp
push
dec
sbb
lahf
dec
outsb
lea
insb
es
repz
lret
adc
inc
addr16
sbb
lahf
ss
and
push
cmp
fimull
mov
clc
loope
cli
xchg
loopne
adcb
add
mov
push
sahf
xor
test
push
in
sti
fidivl
clc
jae
sub
popl
mov
scas
inc
shl
xor
and
inc
push
jmp
ja
jo
lret
cwtl
or
push
jmp
mov
jb
inc
fsubrl
lret
arpl
shl
jg
loop
sbb
push
popf
imul
mov
mov
jb
xor
bound
stc
nop
popa
cmpl
adcb
mov
pushf
xor
aad
int3
push
sub
ljmp
jno
stos
shl
lea
int
jmp
adc
push
and
leave
cmpsb
jae
arpl
ljmp
sbb
mov
sahf
imul
pushf
mov
inc
fsubr
adc
popa
inc
pcmpgtb
inc
gs
sbb
mov
aaa
out
and
push
cmp
lea
je
scas
popa
clc
fildll
adcb
add
mov
push
sahf
xor
andl
in
aad
fidivl
divl
dec
clc
jg
xchg
sub
lods
rcrl
xor
and
into
and
jmp
jbe
jo
leave
xchg
or
sbb
sub
jo
inc
lret
mov
in
jg
loope
sbb
cmp
popf
imul
mov
mov
fcmovnu
jae
das
pusha
mull
cli
xchg
pusha
cmpl
mov
pushf
xor
aam
int
sub
jmp
jnp
outsl
lods
js
or
int3
nop
daa
and
push
pop
scas
inc
push
jae
leave
movsb
jb
movsb
lds
test
xor
outsl
push
dec
sbb
mov
pushf
push
mov
out
mov
lret
push
gs
aas
arpl
jg
pusha
sbbl
mov
popf
out
mov
mov
cmp
fimull
lods
popa
clc
push
xor
sbb
adcl
andl
aad
fnstenv
divl
sub
mov
xchg
sub
lods
iret
popf
mov
iret
lock
and
iret
and
call
jbe
outsl
push
xchg
or
sbb
sub
sbb
inc
outsb
cmp
fisubrs
leave
pusha
rorl
jle
loope
sbb
ss
cmp
and
mov
fcmovnu
je
sub
sti
xchg
pusha
jg
adc
sbbl
xor
aaa
into
add
es
in
push
jns
outsb
stos
js
or
lret
xchg
sub
pop
adc
push
push
mov
push
jno
leave
mov
ret
push
out
in
xor
outsl
push
inc
pop
or
lcall
inc
in
mov
lret
or
call
sbb
mov
cmp
push
and
pop
aaa
pop
inc
fimull
stos
popa
clc
fldt
jg
lcall
mov
push
popf
xor
push
cmp
andb
out
aam
fnstenv
divb
sub
mov
sub
adc
dec
into
out
xor
and
iret
data16
call
jne
outsl
push
xchg
or
sbb
sub
sbb
stos
inc
insl
cmp
insb
mov
pusha
rorb
jle
loopne
sbb
xor
mov
mov
mov
fcmovu
je
sub
negb
sti
xchg
pop
jle
adc
sbbb
mov
fwait
xor
shll
into
add
mov
in
push
js
outsb
stos
ja
or
lret
cld
push
adc
dec
sbb
xor
mov
ret
repz
in
xor
outsl
push
inc
push
or
cltd
push
stos
inc
in
mov
lret
or
std
cmp
pop
test
nop
mov
popf
in
mov
mov
ss
inc
fimull
test
std
xchg
fdivr
jg
sub
dec
popf
xor
push
cmp
andl
fnstenv
cmc
jne
daa
dec
testl
int
mov
int
xor
pop
out
iret
and
call
je
outsl
push
lds
lea
call
stos
inc
insb
cmp
imul
cld
mov
filds
pushf
xor
mov
mov
inc
fmuls
je
sub
pop
sub
xchg
pop
jge
adc
jg
mov
rcrb
into
add
push
push
and
in
push
ja
outsb
test
lret
cld
leave
xchg
sub
sbb
mov
dec
outsl
xor
mov
rcll
ret
hlt
adc
inc
adc
lea
addr16
cwtl
mov
inc
fsubrp
or
popa
or
cmp
call
sbb
mov
cmp
add
mov
xor
push
fbstp
test
clc
fldcw
jg
sub
sbb
orb
andb
out
shl
fnstenv
hlt
jne
es
testl
int3
lcall
push
out
iret
data16
call
jae
outsl
push
les
and
out
rcrb
stos
inc
imul
fisubrs
leave
pusha
mov
jle
fiadds
pushf
xor
mov
mov
inc
fmuls
fcomp
je
sub
pop
sub
xchg
pop
jl
adc
jle
mov
iret
fwait
xor
shll
into
add
mov
in
push
jbe
outsb
test
jae
cmpsl
leave
cmc
mov
enter
sbb
stos
dec
sbb
leave
lahf
outsb
into
mov
shr
repz
inc
adc
mov
xchg
sub
xchg
mov
inc
fsubrp
or
popa
cmp
pop
call
sbb
scas
mov
mov
xor
inc
fiaddl
cmpsl
popa
clc
fsubrs
jg
sub
sbb
jg
cmp
jg
mov
out
shl
fnstenv
repz
and
inc
xchg
sub
adc
dec
lret
in
xor
sbb
aas
push
call
jb
outsl
push
ret
xchg
or
push
out
rclb
stos
inc
push
inc
fisubrs
leave
pusha
mov
fsubp
jle
fldl
pushf
arpl
mov
mov
mov
inc
fadds
xlat
fnsave
pop
negb
sti
xchg
pop
jnp
adc
jge
mov
into
fwait
xor
shlb
into
add
mov
in
push
jne
outsb
cmpsl
je
or
xchg
scas
and
aam
jae
lret
sbb
enter
add
notb
mov
xchg
push
xor
outsb
or
jno
cmp
add
in
mov
xchg
lods
sbb
cwtl
mov
jbe
sahf
jge
cmp
push
hlt
jge
jl
and
pop
or
mov
flds
mov
popa
lock
mov
movb
cld
imul
ficomps
dec
add
mov
add
call
cmp
js
add
xchg
sbb
mulb
cmovno
lcall
movsl
mov
lret
fs
dec
pop
cmp
addr16
mov
out
into
mov
mov
or
mov
inc
add
les
mov
nop
jecxz
mov
das
cmp
hlt
rclb
xor
sub
es
dec
push
jecxz
jg
xchg
push
fidivrl
pusha
mov
lock
fcmovb
sub
cmp
pop
test
into
scas
ret
popa
rcll
add
and
cli
mov
xchg
dec
mov
loope
inc
cltd
adcb
push
arpl
movsl
in
dec
aaa
in
bswap
sub
inc
scas
xchg
and
xor
aad
mov
dec
pop
add
cmp
pop
dec
paddusw
in
push
stos
sub
inc
mov
cltd
je
dec
subb
dec
cld
aad
cmp
cmc
out
jp
aas
mov
xchg
pushf
xlat
les
addr16
dec
sbb
cmp
int3
dec
rolb
push
xchg
loop
lcall
inc
arpl
sbb
or
das
cmp
aaa
sub
cmp
dec
test
xor
jp
push
push
jb
cvtpi2ps
xchg
cmp
dec
cs
aaa
mov
divl
add
add
add
and
add
add
add
add
add
adc
add
add
add
add
add
add
add
xchg
out
dec
imul
lahf
xchg
add
sahf
sub
add
int
repnz
push
mov
inc
inc
dec
xor
xchg
jg
mov
fnstenv
outsb
sub
ret
fnstenv
pop
jl
dec
stos
sub
or
fisttpll
imul
push
arpl
shlb
cltd
imul
pop
cmp
mov
jo
push
xchg
outsl
cs
xor
sbb
movsl
pop
test
fwait
cwtl
rol
xchg
mov
mov
mov
imul
or
inc
sbb
or
pop
hlt
xor
rclb
adc
notb
movsl
lret
jae
pop
cs
stos
sbb
aaa
leave
stos
pop
mov
imul
pusha
mov
mov
xchg
dec
or
mov
mov
cli
cmp
dec
leave
shll
rol
movsl
dec
jecxz
imul
sbb
scas
inc
je
and
cmpsb
push
mov
sbb
dec
inc
push
addl
stos
subb
mov
pushf
fs
insl
lcall
pop
sub
xchg
shll
popl
mov
xchg
pop
lods
test
push
andb
out
mov
mov
pusha
jge
sahf
js
push
repnz
repnz
jl
arpl
iret
nop
std
repnz
pop
cwtl
shlb
imul
call
stos
adc
dec
inc
in
pop
rcll
lods
add
bound
jge
lcall
popf
xchg
insl
in
lahf
popa
sarl
sahf
pusha
movsb
fcom
add
mov
xor
in
int
pop
xor
mov
outsl
loopne
push
cmp
jne
mov
mov
int3
add
xor
or
and
or
ss
jg
mov
cmp
int
or
mov
rcll
outsl
inc
jecxz
adc
in
outsb
sub
xchg
aad
pop
mov
movsb
pusha
sbb
in
hlt
xchg
jne
sub
pop
hlt
xorb
jge
hlt
push
shrb
xchg
jg
pusha
or
jp
jg
mov
mov
mov
add
pushf
mov
jge
mov
sbb
sub
fsubs
enter
fwait
in
lcall
in
push
dec
out
jge
cmpsl
shrb
push
test
xchg
ret
xchg
jno
cmp
inc
add
call
imul
adc
dec
ss
pop
inc
add
fs
jg
jg
dec
cmpb
mov
shrl
fsubrs
xchg
push
adc
mov
xor
fmull
repz
inc
mov
cmpsb
out
dec
xor
cmp
xor
shlb
imul
lock
aam
movsb
and
shlb
adc
ficompl
and
cmpsl
in
sub
and
ljmp
inc
loopne
add
xchg
push
jg
stos
orb
lahf
adcb
sub
mov
xchg
or
pop
mov
es
push
dec
aad
mov
inc
pusha
mov
lock
mov
shlb
push
sahf
arpl
bound
lcall
fisubs
mov
loopne
xchg
cld
xchg
icebp
jg
push
loop
mov
outsb
cmp
shll
pop
imul
xchg
mov
fimuls
jbe
push
add
mov
cli
xchg
xlat
stos
jp
jnp
xchg
test
dec
mov
jnp
or
shll
cs
idivl
out
pop
sbb
jo
xchg
push
aad
je
pop
movsl
push
add
imul
int
mov
cli
out
dec
or
rorb
div
cmc
push
mov
add
mov
aas
sub
in
xlat
inc
cwtl
mov
and
sub
and
or
xchg
loop
fistpl
add
mov
fdivp
shl
xor
dec
and
mov
inc
rclb
pop
loop
icebp
mov
in
orb
adc
int3
xchg
lods
jns
into
adc
xor
je
into
scas
push
xor
dec
adc
ljmp
xchg
mov
mov
inc
mov
adc
in
or
sub
out
aam
lea
inc
cs
sarb
incb
mov
lods
cld
add
jmp
xchg
sti
cld
add
imull
or
xchg
insb
div
clc
push
fstpl
outsb
and
pop
push
stc
sbb
pop
inc
mov
sahf
in
adc
imul
lock
add
xchg
bnd
inc
mov
and
and
and
add
test
lock
lahf
mov
and
mov
addr16
pop
cltd
push
add
ret
push
cmp
cwtl
outsb
idivl
in
mov
sub
pop
orb
cmp
insb
enter
push
lret
iret
sbb
xchg
negl
jne
cmp
mov
arpl
fldenv
sti
xchg
addr16
push
scas
fisubl
cmpsl
icebp
jns
andl
push
andl
ss
cmp
cmp
push
sbb
mov
scas
or
cmpsl
dec
pop
cli
mov
mov
xor
stc
push
mov
add
fstpt
std
xchg
imul
ret
xchg
insl
cmp
jg
cwtl
inc
push
mov
lods
pop
mov
mov
dec
mov
mov
scas
test
add
xor
fwait
sub
in
ret
dec
sub
or
jae
mov
lret
jle
jo
sub
rorb
daa
dec
test
xchg
inc
movsb
dec
jle
call
subl
jne
stos
rcll
mov
mov
repnz
mov
push
out
mov
int3
call
and
test
aaa
add
inc
mov
add
xchg
ljmp
xchg
in
xor
cmp
push
js
sub
xchg
dec
outsl
cli
xchg
int3
mov
mov
pop
xchg
leave
pop
hlt
out
mov
pop
fcomps
push
push
les
jns
or
jl
repnz
cmp
xor
rcll
adc
jmp
fwait
pop
ja
out
std
xchg
clc
dec
inc
ret
inc
inc
and
jae
aaa
call
jne
aaa
out
enter
aam
in
lret
jns
xor
xchg
add
or
testl
cmpl
mov
addr16
repz
and
out
pop
mov
dec
