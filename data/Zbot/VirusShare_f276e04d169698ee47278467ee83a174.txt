sbb
add
nop
dec
push
jno
jnp
adc
fcoml
lret
fdivp
sbb
add
call
inc
mov
lds
xlat
adc
dec
fwait
rcll
dec
test
bound
outsl
pop
sub
mov
mov
loope
je
mov
lret
cli
mov
sbb
aas
sbb
loopne
sub
xlat
out
pop
dec
xchg
mov
ja
push
xchg
das
daa
jmp
shll
leave
repnz
je
enter
lock
cmp
fwait
jge
and
pop
fwait
cmp
mov
test
pusha
mov
pop
adc
adc
sbb
mov
mov
lock
clc
xor
and
imul
sub
arpl
lret
xchg
push
xor
inc
xchg
data16
sub
jl
in
movsl
pop
fidivrs
push
push
and
lahf
push
push
leave
mov
mov
adc
mov
cmp
push
test
pop
inc
fnstsw
push
add
xchg
and
pop
sbb
mov
mov
adc
enter
adc
xchg
test
mov
ljmp
adc
dec
popf
in
out
popa
sub
outsb
adc
int3
add
pop
inc
out
add
mov
xchg
test
test
addr16
mov
jb
loopne
cs
shr
lcall
les
push
roll
mov
mov
or
xchg
pop
mov
mov
sbbb
add
dec
int
cwtl
subb
sub
loope
sub
add
ret
in
inc
add
iret
inc
mov
push
sbb
mov
daa
add
pop
subl
in
mov
fisttps
mov
pop
adc
mov
fbld
jl
pop
dec
dec
xor
xor
ret
ret
mov
bnd
cmp
imul
sbb
and
cld
pop
jg
push
mov
add
out
repnz
je
mov
dec
jbe
and
enter
mov
cmp
ja
push
xchg
mov
sub
fwait
dec
mov
sbb
clc
adc
subl
and
or
and
mov
mov
outsl
inc
dec
inc
fildl
jnp
or
adc
in
xchg
inc
jecxz
rcr
push
dec
bswap
dec
cmc
orb
and
xor
jp
or
adc
inc
shlb
mov
jb
sbb
pop
add
sub
aam
pop
push
or
in
lret
scas
jae
inc
popa
adc
lock
stos
add
aas
jnp
ret
popa
cld
push
je
and
push
lahf
xor
jb
nop
sarl
shr
lahf
jae
and
push
adc
cmp
add
push
sbb
hlt
or
inc
aam
iret
inc
ja
inc
hlt
mov
or
jnp
aad
popa
imul
xchg
mov
test
inc
mov
mov
add
arpl
mov
imul
pusha
dec
mov
mov
xor
jge
cmpsb
or
xchg
aad
mov
ret
shr
fcoms
stc
repz
in
push
push
leave
push
push
inc
xorl
add
mov
mov
pushf
lret
popa
sub
add
inc
or
jnp
into
in
jbe
push
push
stc
loop
outsl
xchg
or
cmpl
orb
mov
add
xchg
mov
mov
mov
bndstx
notb
imul
sahf
add
xchg
pop
movsl
adc
hlt
and
int3
clc
sti
mov
mov
daa
inc
dec
dec
popa
lret
dec
test
mov
dec
mov
sub
js
cmpsl
mov
das
loop
push
or
fdivl
cli
or
scas
and
cli
insl
mov
insl
fisubl
shrb
xchg
sub
in
mov
or
andb
push
out
into
in
cmpsl
fwait
arpl
ret
mov
arpl
or
test
add
and
les
mov
ja
mov
adc
mov
pop
push
lock
push
add
inc
sbbb
lahf
push
xor
pop
xchg
push
popf
dec
pop
nop
movsb
dec
jl
clc
fcompl
pop
sub
pushf
mov
mov
mov
cltd
mov
arpl
jmp
xor
mov
add
int
stos
aad
ja
rep
mov
adc
pop
nop
outsl
cmc
jns
ja
dec
in
mov
rcr
into
inc
and
test
xor
lock
mov
in
push
sbb
lock
dec
xor
movsb
push
mov
ja
push
pop
xchg
mov
jle
xchg
mov
mov
daa
xchg
and
pop
fstpt
enter
adc
inc
sub
mov
adc
pop
aaa
cltd
sbb
loope
pop
dec
and
cmpsb
lret
aaa
dec
gs
outsl
sub
push
pop
lods
test
mov
xor
notl
or
sub
jbe
push
jp
lahf
push
and
cmp
ds
mov
stc
sahf
loope
add
js
or
sbb
and
dec
mov
aaa
mov
mov
sbb
adc
pop
inc
jns
sub
and
xchg
cmp
jne
xorb
mov
mov
filds
fldl
loope
insb
xchg
adc
insl
mov
syscall
adc
push
sub
aas
dec
sahf
lods
iret
dec
dec
leave
scas
cmpsl
pop
aad
add
imul
mov
sbb
cmp
xor
dec
jbe
daa
out
sub
out
das
bound
cmp
sub
mov
or
inc
push
adc
mov
xchg
call
popf
xchg
repz
cli
cmp
xor
insl
push
fimuls
cwtl
xchg
in
jbe
mov
jmp
mov
testb
int3
andb
mov
add
jmp
xor
test
arpl
or
fucomip
arpl
push
adc
jl
jle
xchg
incb
push
fmuls
xor
lret
mov
sub
xchg
sbb
movsb
jae
mov
jbe
stos
add
xor
lret
mov
add
cmpb
mov
loopne
aas
cmpsb
das
pop
jne
jl
jle
mov
jae
jne
and
mov
jle
popf
dec
mov
cmp
jno
rcrb
mov
jmp
clc
out
dec
mov
xor
xchg
cmpsb
fistpll
nop
sti
jae
out
outsl
and
lea
sbb
xor
fsubrl
imul
add
lret
cmp
add
xor
sbb
jae
js
sbb
push
pop
lret
sub
xchg
dec
pop
push
aas
fiadds
cmpsb
ljmp
jmp
clc
es
movsb
and
lret
xor
nop
xchg
push
mov
lods
fcmovu
test
shl
pop
gs
mov
es
bound
stc
movsb
test
add
loopne
mov
lret
jmp
mov
sti
lods
jecxz
xchg
pop
or
sarl
cmc
add
push
loop
mov
out
mov
scas
inc
movsb
ds
scas
sub
sub
or
aaa
jne
sub
enter
sti
fwait
in
add
mov
inc
cmpsb
popa
jg
and
or
dec
push
clc
aad
xchg
jns
mov
inc
nop
fsubrl
inc
cmp
repnz
std
xchg
jbe
dec
dec
fiadds
out
mov
out
stos
mov
pop
iret
xchg
cmp
sub
sbb
mov
mov
dec
enter
mov
sbbl
mov
mov
inc
mov
xor
cmp
fmul
push
dec
sbb
push
int
mov
adc
mov
loope
jo
pop
xchg
adc
push
icebp
jecxz
lcall
pusha
fdivrl
push
decl
loopne
and
xor
mov
cltd
xor
shll
cmp
cmp
lea
in
sub
scas
and
mov
sub
mov
packssdw
les
jb
sbb
mov
jns
xor
addb
jg
jecxz
push
stos
adc
push
adc
pushf
lret
repz
dec
js
dec
xchg
cltd
or
pop
test
cmpsl
jo
mov
cmpsl
data16
les
or
lock
jl
xchg
xchg
xor
in
movsl
xrelease
push
popa
int3
mov
int3
lea
scas
in
or
gs
mov
adc
dec
insl
lcall
and
lret
fcmovnb
scas
gs
movsl
out
int
pushl
fmull
mov
add
xchg
jae
pop
push
out
aam
cmp
test
fmul
xchg
sbb
into
or
mov
sbb
and
in
xor
bound
scas
adcl
inc
gs
pushf
dec
fcom
mov
mov
aad
push
xor
sti
lahf
mov
lea
bound
out
fs
sub
adc
fisubrs
iret
imul
cmp
jno
test
xchg
xchg
mov
mov
mov
mov
fisubrl
popf
mov
mov
icebp
or
mov
test
scas
fs
sub
fisttpll
mov
das
int3
lcall
sub
mov
sbbl
mul
jno
jp
bound
mov
add
mov
fwait
jl
jmp
push
xorl
cs
cmp
mov
data16
repnz
sub
in
ljmp
mov
xchg
aam
sbb
call
jle
movsl
ss
imul
mov
push
cmp
pop
or
leave
push
out
pushf
je
cmp
clc
cmp
call
adc
push
sbb
xchg
fistpl
xor
jp
dec
jecxz
gs
lret
inc
lret
lods
sub
push
sbb
sahf
add
outsl
pop
das
pop
jo
jmp
pop
enter
inc
xchg
leave
lret
push
fsts
jae
xchg
pop
xchg
jno
mov
nop
iret
mov
ds
inc
xchg
push
ja
out
arpl
push
mov
jmp
loope
ljmp
and
jp
cld
cmp
xor
xcrypt-cfb
cmpsl
fs
adc
inc
add
subb
sub
movsl
cmpsb
mov
xorl
add
sbb
inc
adc
jmp
arpl
aas
lock
add
ficoml
push
out
cmp
rcr
jns
xchg
ds
cmp
sbb
cwtl
xchg
sbb
push
es
cmp
mov
xchg
insl
cmove
popa
mov
pop
sbb
jno
xor
into
or
mov
iret
sub
arpl
pop
fistl
sub
xchg
mov
sub
dec
mov
xor
adc
fadd
push
lods
cld
jnp
out
jnp
lods
sub
ffree
mov
jb
sub
js
shl
lods
cmpsb
outsl
hlt
push
rcrb
ror
dec
pop
pushw
inc
cmc
das
mov
and
popa
push
fdivrl
addr16
das
inc
pop
lea
fdivs
arpl
cs
test
int3
stos
fistpll
dec
inc
sub
mov
popa
push
fbstp
mov
pop
sbb
subl
add
imul
mov
adc
daa
movsl
sub
mov
aad
xchg
imul
faddl
shll
aam
gs
scas
sahf
fwait
xchg
adc
pop
popf
ficoms
pop
lret
in
enter
stc
in
mov
mov
dec
mov
mov
iret
xchg
mov
pop
push
mov
cmp
or
stc
mul
movl
ror
or
xchg
jno
fstps
jns
shll
sbb
out
sub
ljmp
sub
insl
pop
sbbl
bound
test
xchg
mov
cmp
inc
push
jbe
outsl
push
mov
into
mov
pop
dec
jg
push
adc
xor
mov
aas
dec
test
and
iret
mov
inc
daa
cmp
xlat
setae
cli
ret
cltd
lods
push
jne
or
cld
and
or
add
stc
andl
xor
xor
mov
nop
mov
jnp
add
xor
aam
pop
ss
cmc
das
imulb
outsl
add
adc
add
mull
aad
je
xchg
inc
aas
xor
sbb
or
pop
sub
adc
shlb
jno
pop
call
jge
push
lcall
mov
leave
push
adc
sbb
mov
push
les
cmpsb
mov
jne
bound
out
clc
insb
pusha
cltd
pop
ss
fdivr
dec
aam
pop
das
arpl
imul
imul
aad
push
jge
jnp
sbb
mov
pop
bound
les
cmpsb
xchg
movsb
rolb
fdivl
xor
jne
ds
call
rorb
gs
push
xchg
arpl
dec
add
pop
inc
into
ljmp
es
xchg
ja
shll
sti
push
or
dec
mov
int
insb
mov
movsb
pop
mov
mov
scas
stos
mov
jle
jmp
jb
testl
mov
mov
mov
mov
pop
sub
mov
dec
sbb
aas
aaa
add
dec
int3
jp
dec
popf
adc
cmp
pop
push
sub
enter
sahf
mov
sub
scas
mov
sbb
out
mov
cmc
pop
fucom
push
inc
dec
push
jbe
roll
add
rol
xchg
insl
int3
pop
jnp
cmp
in
scas
jne
push
pop
adc
fs
rcrl
in
jecxz
ss
arpl
mov
fs
cwtl
fdivl
lods
and
lea
repnz
js
fwait
jmp
fsubrp
mov
pop
movsl
mov
push
addb
add
stos
les
sbb
xor
push
insb
mov
aaa
scas
or
cwtl
stc
test
fs
sub
pop
insb
mov
mov
adc
jo
fdivr
test
jno
jnp
negl
pop
cli
stos
adc
pop
decb
pop
jns
out
sbb
dec
imul
mov
jg
test
test
sti
pop
movsl
mov
mov
dec
push
or
xchg
mull
movsb
nop
dec
mov
pop
dec
sbb
stos
pop
mov
scas
push
mov
nop
int3
cltd
and
test
jge
sbb
or
je
cmp
mov
push
shlb
xor
rdpmc
push
mov
xor
shlb
mov
xchg
call
ret
sti
dec
pop
push
add
sbb
and
aaa
sar
std
or
lcall
xor
pop
cltd
push
into
inc
lods
cli
and
add
ret
jae
arpl
sbb
es
add
lods
mov
hlt
or
xchg
dec
pop
insl
cmp
push
xchg
xor
movsb
inc
enter
popf
adc
mov
dec
xchg
xor
or
pop
push
cmp
mov
jo
movsl
sbb
rcr
add
adcl
lret
xor
xrstors
popf
mov
mov
lods
call
push
imul
jb
adc
jle
mov
cmp
fucomip
pop
flds
mov
pop
mov
imul
mov
xchg
xchg
aad
mov
xor
shl
ljmp
push
aam
out
in
sbb
lods
and
adc
ljmp
outsw
push
dec
mov
jge
imul
scas
fwait
push
xorb
jg
inc
mov
lods
mov
dec
cmpsl
cmc
lret
pop
lret
xor
bswap
loop
jo
dec
adc
jns
mov
jns
jmp
into
push
cmp
ss
mov
pop
mov
sarb
jb
dec
and
lahf
cmp
andl
es
inc
imul
xor
clc
mov
dec
xchg
cltd
jle
push
in
push
cmpsl
mov
mov
out
outsl
je
mov
xchg
and
in
dec
push
add
mov
fsubr
and
xor
and
xchg
pop
fadds
insb
jae
and
cmp
push
sbb
xor
mov
dec
in
xlat
das
push
inc
call
dec
stc
inc
jg
lods
mov
xchg
mov
cld
loopne
mov
daa
and
rcrl
cmpsl
sar
fwait
add
stc
cmpsl
cmp
ds
pop
aam
in
cmc
rclb
icebp
inc
insl
xchg
cmp
push
leave
shll
push
ljmp
imul
cli
push
xchg
pop
push
add
test
cmp
mov
xchg
sti
mov
data16
insb
repz
fwait
aaa
sub
mov
insl
jg
xchg
pop
add
fsubrl
clc
dec
jg
fisttpl
add
add
int
cs
imul
push
and
push
loopne
arpl
cltd
je
insb
mov
cld
pop
push
test
dec
fsubs
fbld
inc
push
stc
lcall
or
mov
mov
sub
push
dec
stos
xchg
cltd
jmp
add
add
add
jo
clc
ret
insb
cmp
jecxz
mov
push
leave
xchg
sub
aad
shrl
orl
mov
sti
jns
fidivs
jae
add
shrl
sbb
push
or
dec
fidivrs
lods
dec
dec
mov
lret
jle
jecxz
les
ss
lcall
sub
outsb
cli
and
xor
xchg
dec
jge
mov
adc
out
adc
cli
test
divl
inc
adc
mov
add
repz
cmpsl
mov
fdivl
pop
cmc
data16
mov
aas
nop
loopne
stos
daa
xor
jns
add
pop
outsl
out
pop
pop
xor
aas
mov
mov
sub
aad
jb
mov
pop
or
cmpsb
or
push
jp
xor
nop
cs
push
dec
or
jno
dec
adc
mov
dec
cmc
hlt
mov
and
pop
ret
fsubs
and
pop
sbb
inc
sbb
xchg
push
push
pop
inc
push
arpl
jns
xchg
outsb
call
sbb
add
cmpsb
test
adc
push
sbb
dec
std
not
outsb
mov
xchg
shr
or
mov
pop
std
dec
rcll
movsl
ret
sbbb
mov
jecxz
ret
and
daa
xor
pop
popf
shrb
fwait
mov
jae
cltd
pushf
xchg
pushf
rorl
cwtl
pop
mov
sub
out
sahf
mov
mov
sbb
std
mov
mov
mov
cld
das
jp
inc
xchg
hlt
mov
fisttps
fs
pop
testb
xor
mov
in
sub
es
cld
mulb
mov
jns
divl
outsl
hlt
addr16
push
idivb
aad
fidivs
xorb
pop
leavew
lods
cmp
into
nop
bound
test
and
xor
cli
shl
sub
or
test
pop
ss
arpl
adc
shlb
lds
cld
stos
sub
mov
in
ja
jecxz
mov
inc
test
dec
out
inc
aas
mov
fimuls
xchg
xlat
jg
xor
das
rcr
pop
xlat
adc
dec
adc
xchg
cmpsl
imulb
inc
sbb
cmp
xchg
dec
jne
outsl
sub
push
fdivrl
adcb
scas
aaa
mov
scas
mov
test
push
ret
push
cltd
data16
and
adc
lahf
stc
dec
sub
push
jmp
dec
add
push
lcall
inc
outsb
mov
or
push
int
gs
dec
push
lret
hlt
cmp
divb
jns
xor
je
sub
xor
outsb
or
pop
js
xor
xchg
jecxz
xor
insl
mov
pop
or
or
mov
fistps
mov
push
xchg
add
mov
shrl
dec
jp,pt
sarb
push
imul
test
rclb
jmp
mov
pop
insb
icebp
lret
js
rcll
adc
je
addr16
adc
mov
jbe
mov
subl
sub
adc
pop
mov
das
or
loope
jno
sbb
adc
in
jge
imul
push
inc
aam
dec
and
lods
cmpsl
ja
sbb
mov
scas
cmp
jg
mov
and
sbb
pushf
pmuludq
jmp
in
les
dec
jmp
sub
pop
imulb
test
xchg
lahf
pop
sbb
clc
in
adc
dec
pop
jnp
sub
xchg
in
out
sbb
ret
cmp
gs
sbb
push
filds
loop
cmp
adc
cld
xchg
pop
xor
minps
push
adc
adc
inc
mov
popa
in
inc
dec
adc
mov
call
or
sbb
repz
hlt
imul
lahf
lahf
sub
jbe
lahf
push
add
aaa
jp
sub
fmuls
flds
mov
imull
and
call
out
out
adc
cltd
mov
or
test
sbb
adc
clc
add
or
or
scas
sub
repnz
xchg
xchg
jp
fidivrl
push
fistpl
or
sbb
sub
add
dec
sub
shlb
icebp
add
add
pop
dec
mov
add
leave
pop
test
xor
jge
bound
lds
xlat
push
inc
cmp
inc
lret
jle
test
mov
pushf
mov
scas
fmull
inc
lret
mov
jl
fsubl
lods
pop
push
loope
in
sti
fnclex
adc
lahf
cmp
sub
insb
fwait
dec
push
call
push
mov
xchg
push
jmp
xchg
rep
dec
xchg
pop
lock
mov
jl
inc
dec
jle
jl
jge
mov
in
out
mov
inc
add
xlat
ljmp
mov
mov
icebp
adc
pop
adc
adc
in
cmpsl
inc
cld
xchg
fucomip
jne
cmpsb
ljmp
in
addr16
sbb
adc
ret
fsincos
aaa
jno
cmp
xor
cwtl
dec
clc
loope
adc
fdivrp
ja
or
or
mov
pop
jle
cwtl
dec
call
jb
mov
xor
mov
and
jl
xor
test
adc
test
cmpsl
js
xor
ret
jle
mov
and
push
enter
stos
mov
sbbb
sub
stos
fiadds
inc
xchg
mov
mov
cmp
jl
or
rcrb
cmpsl
cmp
jmp
pop
xchg
sbb
mov
inc
loopne
loopne
call
lret
outsl
push
mov
xchg
popf
imul
cmp
sbb
or
cld
sub
and
lret
loop
test
enter
xor
push
mov
rcrb
test
ret
xor
imul
inc
add
ret
repz
adc
mov
push
pop
xchg
pop
fidivl
loopne
out
movb
dec
out
bound
sbb
pop
clc
fdivrl
test
jns
push
mov
jnp
imul
outsl
mov
xchg
xor
lods
lds
cmpsl
cmp
out
inc
arpl
sub
dec
inc
loope
cld
jmp
fldln2
fistps
cmpsl
inc
mov
call
push
pusha
das
xor
jb
movsb
mov
enter
sub
test
mov
sbb
xchg
dec
inc
rcrb
adc
lcall
push
mov
sbb
pop
push
testb
mov
or
addr16
or
cmp
mov
je
icebp
iret
idivl
cmp
fidivrl
fs
jno
add
shrl
cwtl
jb
pop
and
lea
cmpl
jmp
mov
mov
out
mov
aad
stos
adc
nop
dec
sbb
sbb
add
push
mov
jno
repnz
push
dec
push
adc
sub
outsl
pop
push
nop
shlb
fstpt
stos
xchg
stos
and
jg
adc
imul
add
adc
ss
jb
xchg
sti
stos
xchg
fst
cmc
out
fs
pop
mov
test
mov
les
mov
add
stos
fimuls
xor
jmp
repnz
leave
push
jnp
aaa
jnp
dec
rolb
insb
dec
shlb
or
sbb
cmp
int
out
cmpsb
out
mov
daa
pop
pop
mov
pop
pop
xchg
mov
jo
loopne
fnstsw
xchg
or
movsl
adc
in
mov
or
sbb
lock
in
jge
dec
test
daa
cs
inc
jg
inc
scas
push
popf
movsb
jl
mov
and
mov
fimull
inc
cmp
add
pop
mov
out
push
jle
jge
int3
and
adc
xor
sbbb
mov
and
mov
cwtl
loope
cmp
ret
bound
mov
aaa
xor
inc
scas
ljmp
loopne
cld
jnp
dec
add
aam
clc
xchg
cli
jmp
xchg
push
dec
pop
pop
dec
push
push
shll
js
or
mov
out
shl
ficompl
mov
cmp
add
mov
loopne
mov
mov
out
mov
adc
leave
push
sbb
sbb
into
lcall
js
jo
aas
pop
add
jne
je
jb
cs
mov
dec
pop
push
mov
pop
xlat
lahf
sbb
or
push
inc
aaa
scas
mov
adc
enter
shll
or
outsb
jb
adc
cmp
fnsave
and
testl
cmpsl
jne
dec
mov
add
hlt
cmp
lds
jbe
rcl
cmp
lds
xor
sbb
push
or
leave
repz
movsb
pmaddwd
out
in
lret
mov
mov
movsl
mov
push
inc
lcall
dec
adc
nop
jmp
xor
insb
add
jnp
push
jns
mov
sub
cmpsb
lcall
inc
or
xchg
add
or
ss
sbb
or
xchg
and
loopne
stc
cmp
fisttps
and
arpl
test
xchg
xchg
loop
dec
popa
popf
sti
sub
sbb
stc
sbb
and
repz
and
jle
rep
mov
sbb
dec
cs
push
sub
fcoml
add
add
cmp
sub
sub
sub
stos
ss
in
cli
movsl
daa
out
mov
jmp
aaa
xor
sub
mov
jnp
out
pop
pop
jno
push
shlb
push
enter
mov
push
movsb
sbb
jno
mov
pop
call
dec
ret
std
cmp
sbb
push
test
es
adc
iret
ds
pop
fdivr
push
subl
in
es
mov
mov
and
mov
repz
fisttpll
sbb
push
bound
out
push
jp
add
popa
push
int
sub
in
sub
daa
fwait
or
adc
inc
mov
ficomps
jmp
outsl
je
negb
adc
add
flds
out
xchg
push
imul
into
lcall
iret
das
mov
sub
adc
data16
and
inc
jns
ds
cs
outsb
sub
jl
out
fdivrl
dec
cmpsb
jecxz
adc
cmp
fwait
hlt
jno
or
scas
pop
dec
push
xchg
bound
call
pop
inc
jmp
out
inc
push
dec
add
js
dec
flds
test
add
xor
pop
add
mov
clc
adc
popf
mov
shll
jl
decb
stos
jne
fdiv
cltd
cmp
gs
cmp
jmp
repz
xchg
rcrb
mov
push
sub
iret
aam
sarl
jno
mov
jecxz
out
popa
ret
lods
in
insb
dec
out
enter
jae
orl
cmp
cmpsb
and
das
inc
sti
jmp
xchg
adc
xor
cmpsl
int
jne
test
push
dec
mov
cltd
push
mov
cld
or
and
dec
loope
test
add
push
mov
jne
dec
mov
pop
ret
mov
mov
dec
or
inc
xor
pusha
pop
repz
push
in
test
lret
mov
sbb
pop
in
add
push
rclb
xchg
scas
out
xor
fsubl
cwtl
test
mov
in
xchg
aaa
pushl
lea
subl
cwtl
pop
jno
xchg
mov
test
lock
sbb
sub
out
enterw
movsl
add
dec
rcll
cmp
les
mov
cltd
sub
ret
in
fwait
add
jne
adc
outsb
aad
imul
inc
lahf
fstpt
pop
xor
clc
decb
sub
xor
push
dec
cwtl
inc
cld
pushl
xlat
test
sbb
cmpsb
mov
mov
cmp
pusha
pop
shlb
mov
subb
and
push
xor
cmc
fistpll
mov
xchg
jno
fildll
mov
ja
add
mov
stc
lods
dec
xchg
mov
push
scas
or
out
dec
cli
out
std
scas
dec
or
popf
mov
rolb
in
mov
filds
scas
std
xchg
or
inc
cli
cmp
aaa
cmp
dec
push
rorl
je
sub
inc
mov
inc
cltd
cmp
out
xlat
incl
stc
lcall
out
mov
popf
add
outsb
std
cmpsb
shlb
pop
and
or
fildl
dec
push
sub
decb
jbe
jmp
mov
mov
fisttpll
sbb
scas
inc
inc
lods
mov
mov
or
les
adc
stos
cmp
lods
rorl
push
pop
or
xchg
jl
outsb
and
push
ss
add
sub
xor
xchg
fsubrs
add
rolb
adc
or
loope
adc
mov
rcrl
icebp
xor
pushf
push
jg
bts
movb
jae
sbb
mov
mov
jecxz
clc
push
adc
ljmp
mov
xchg
icebp
pop
aam
movsb
rcll
sti
mulb
jp
movsl
xor
lds
xchg
pop
stos
popf
xchg
nop
xchg
mov
in
imul
mov
repnz
cld
ss
sbb
js
sti
movsl
mov
adc
or
pop
movsb
push
or
jmp
out
test
shl
aam
lds
jge
adc
mov
fmulp
mov
loop
dec
mov
pop
sub
dec
or
cmp
pop
test
shll
int
sbb
cli
out
cmp
cli
jnp
sti
xchg
inc
ds
jecxz
and
xchg
popf
jecxz
mov
insl
dec
ds
lret
adc
imul
out
std
jmp
cmp
movsb
cmp
add
sti
jns
lret
xor
pop
lds
test
scas
sub
add
sbb
xchg
mov
inc
mov
pusha
fucomp
cmp
mov
mov
cmp
jns
adc
out
lock
pop
repz
push
mov
fiadds
sbb
cld
lret
push
mov
xchg
arpl
in
pop
fwait
cmpsb
jns
es
sti
jle
scas
ret
pop
icebp
jno
mov
and
xor
jmp
stos
mov
out
sub
cmpsl
pop
fimuls
lds
lret
cmp
pushf
hlt
mov
jo
fcomps
stos
pop
cld
push
insb
push
dec
xor
out
push
outsl
out
mov
mov
andl
adc
rep
dec
ftst
ret
insl
pop
sub
and
lret
push
jbe
add
data16
xchg
and
or
cli
mov
push
shrb
icebp
push
adc
and
test
inc
lret
mov
aad
dec
cmpsb
jecxz
dec
xor
std
sbb
daa
add
push
out
imul
icebp
sti
insb
or
ss
xor
jo
pop
push
out
js
es
inc
jge
movsb
call
push
scas
cld
sbb
jbe
mov
movsl
dec
add
push
mov
mov
push
rcl
in
scas
sti
aas
inc
dec
jmp
dec
and
je
into
jmp
test
stos
lods
in
xchg
in
and
shlb
xchg
mov
icebp
jmp
in
ljmp
pop
pop
xchg
and
mov
mov
inc
lret
jo
adcb
movl
pop
pop
or
mov
dec
insl
xor
lock
xchg
shlb
jbe
mov
repz
push
jns
insb
aaa
ret
decb
inc
mov
jg
xor
sub
mov
push
es
jno
outsl
or
dec
fwait
nop
andb
pop
add
push
inc
leave
sbb
mov
ficoms
xchg
sarl
cs
jge
pop
adc
sbb
inc
or
jbe
cmc
xlat
sbb
les
push
cld
fmull
cld
decb
or
cmp
cs
mov
jle
out
pop
inc
cmc
int3
jns
jne
add
dec
mov
mov
jl
iret
rolb
sub
cmp
push
and
sub
lods
lds
push
add
orl
pop
jno
pusha
mov
ret
in
add
stos
xchg
adc
negl
sub
push
es
iret
ds
push
ljmp
aaa
or
leave
int
and
in
jmp
imul
sbb
and
pop
push
loopne
pop
and
mov
mov
mov
add
out
sahf
xchg
cmp
jp
xchg
mov
imul
test
stos
into
dec
adcl
and
test
leave
xor
insl
cmpsb
je
pusha
xor
test
cs
sarl
test
in
push
push
fsubs
sub
lock
lods
xor
xor
cmpsl
mov
lret
jg
push
add
insl
movzbl
jns
scas
mov
out
shrb
out
jbe
ja
sbb
arpl
mov
jb
popf
and
and
divl
loope
add
mov
cmp
lret
sti
cld
in
push
mov
pop
divb
imul
in
aad
or
xchg
sbb
cmp
ret
pop
sub
enter
push
push
cmp
push
mov
loop
lods
js
enter
sub
inc
scas
js
loopne
test
mov
ss
xchg
arpl
pushl
and
sbb
lret
cmpsl
mov
inc
xor
jae
or
sub
mov
jns
adc
mov
rcrl
jl
fiadds
bound
pop
xor
js
dec
in
sbb
loopne
push
nop
adc
dec
adc
mov
xor
jns
aas
movsb
bound
adc
gs
ret
idiv
hlt
cmp
jbe
iret
or
cmpl
xor
addr16
inc
popa
mov
lret
call
ljmp
test
shll
rorb
mov
sbb
or
jo
push
xchg
leave
sbb
sbb
fimull
insb
repz
xchg
and
sbb
xchg
enter
out
or
or
sbb
jge
adc
sbb
lock
push
xchg
stos
lods
repnz
test
dec
cs
jns
scas
sub
pop
out
dec
loopne
inc
in
iret
jne
pop
je
loop
push
mov
jmp
mov
stc
in
sbbl
cmp
push
aas
push
and
sbb
ret
aas
mov
mov
xor
ds
addl
mov
sbb
mov
mov
jne
popf
ss
pushf
ret
sub
and
sti
mov
sbbl
iret
imul
ret
dec
stc
dec
inc
jle
imul
mov
test
sub
lret
pop
addl
mov
cli
lahf
adc
addr16
cwtl
jae
popa
dec
jae
imul
jl
dec
jle
sbb
fwait
mov
and
xor
stos
or
in
sub
sbbb
or
adc
push
sub
popw
addl
xor
pushf
cwtl
call
sbb
hlt
je
ljmp
fs
lahf
ss
lcall
pop
pop
mov
sahf
jae
je
push
push
jno
and
and
push
das
loopne
adcb
mov
mov
movsb
ja
push
dec
mov
jne
bound
inc
das
stc
mov
repnz
rol
sarb
int
rcll
pop
jns
sbb
jb
movsb
push
int3
leave
mov
inc
xor
xchg
std
xchg
adc
inc
fidivrs
test
mov
stc
jns
dec
aas
sbb
mov
sti
aas
xchg
xor
loope
adcb
sbb
lock
or
mov
add
xor
push
test
push
popw
mov
sub
add
andl
aas
lds
divb
inc
inc
sub
iret
mov
xchg
mov
frstor
sub
aad
scas
and
jl
out
pop
ss
xlat
out
jno
loope
mov
xchg
push
insl
push
jnp
push
aad
cmpsb
nop
jp
xorb
pop
loope
popf
into
inc
cltd
cmp
adc
inc
dec
mov
adc
lods
in
push
jo
addr16
push
std
in
inc
outsb
xor
xor
hlt
out
cltd
xchg
sbb
mov
test
movsb
jecxz
jge
cmp
int3
fistl
cmp
daa
mov
push
inc
pop
inc
aaa
pop
mov
mov
jle
dec
inc
xchg
loop
in
rcr
fildll
adc
sbb
negl
xchg
inc
mov
mov
fisubrs
lret
mov
out
rcl
daa
sbb
or
xchg
outsl
cmp
aaa
mov
jp
inc
outsl
fstpt
loop
test
sbb
fucomi
in
fisubs
lcall
testl
dec
data16
movsl
mov
jge
stc
jecxz
add
mov
outsb
jne
pop
repnz
cmp
in
add
sbb
lahf
jno
pop
dec
xchg
mov
xor
and
mov
push
call
rcl
xor
sbb
pushf
popf
or
aas
stos
loopne
and
add
fisttps
xor
push
dec
sub
rcrl
add
lret
loopne
loope
fwait
sub
dec
inc
inc
adc
in
xchg
insl
orl
lea
test
subb
lahf
lods
sub
test
cmp
inc
out
int3
jg
inc
rcrb
enter
mov
add
dec
ds
adc
mov
push
jg
and
dec
inc
aam
lods
je
mov
xchg
popf
shlb
sar
mov
es
adc
mov
loope
pop
sbb
mov
mov
sub
sbb
push
and
push
out
pop
adc
das
cmp
js
or
mov
jg
addl
fimull
ds
popf
outsl
mov
mov
fadd
inc
lret
dec
push
test
push
sub
mov
pop
ret
and
inc
stos
pop
sbb
cmp
fsub
rol
out
sbbb
shll
stc
js
sub
fldt
fcmovb
push
pop
repz
adc
or
add
movsl
out
out
outsl
cltd
xor
mov
ss
popa
daa
int3
fsubrp
mov
out
scas
clc
push
and
icebp
cld
addr16
mov
xlat
ficompl
dec
sbbb
stc
inc
in
and
fistpl
fmull
push
fwait
xchg
push
and
insl
xchg
and
addr16
or
inc
sbbl
or
xorb
xor
pop
filds
test
gs
sbb
mov
cwtl
mov
push
loope
xchg
mov
sub
mov
pusha
aas
popa
cmpb
jl
pop
inc
mov
mov
pop
addr16
je
xlat
xor
jbe
jbe
sub
mov
mov
jb
mov
push
jp
dec
mov
xor
scas
sub
push
cmpsl
mov
cmpsb
and
ss
ds
movsb
pop
mov
data16
shl
pop
cmc
les
je
enter
xlat
or
addr16
mov
xor
cmp
mov
xor
mov
iret
xchg
lods
sub
cmp
cmpsl
or
std
sbb
jns
aas
arpl
mov
inc
cmp
and
push
mov
pusha
pop
xorl
dec
or
out
adc
pushf
jae
cmp
ret
cmp
sbb
cmp
cwtl
xlat
jl
adc
mov
add
mov
divb
pop
fiadds
sub
jbe
jmp
in
cmp
xor
sar
mov
imul
cmp
push
ror
xor
movntq
cmp
push
xchg
push
fidivrs
je
mov
fsubs
rorb
mov
aas
push
xor
cmpsb
and
test
push
push
call
sbbb
cmp
adc
mov
or
sbb
mov
mov
pop
or
shlb
out
js
mov
pop
cmp
loopne
jecxz
fists
sbb
add
outsl
sbb
test
mov
xor
mov
and
repz
xchg
mov
or
div
add
iret
push
push
dec
xchg
in
xlat
or
and
pop
enter
lock
xchg
insl
fnsetpm(287
lret
sbb
ss
jmp
dec
adc
cmpb
mov
inc
lds
data16
sub
dec
xchg
pusha
add
out
and
iret
mov
stos
and
daa
jg
pop
push
mov
fchs
add
les
push
push
mov
dec
cmp
clc
jle
je
cwtl
cmpsb
xchg
inc
popf
sbb
dec
mov
jmp
arpl
scas
or
imul
add
addl
stc
xor
stos
mov
call
fsubrs
lds
fiadds
cmp
dec
xor
xor
das
jmp
dec
and
int
sbb
adc
pop
fdivrl
xchg
ds
into
das
pop
jmp
nop
call
pop
pop
mov
rorb
mov
xor
loope
push
das
or
cmpsl
jne
mov
mov
push
or
sbb
daa
mov
mov
dec
sbb
cmp
div
repnz
xchg
stos
and
scas
fs
outsb
mov
jl
mov
leave
pop
mov
xchg
ja
adc
xor
sub
mov
xor
cld
ds
and
es
jle
in
mov
mov
jg
js
es
mov
pop
lods
test
dec
ljmp
int
lods
xchg
fwait
lcall
sbb
ret
cmc
add
andb
lahf
mov
cli
test
test
movsb
pop
lods
dec
sbb
int
cwtl
subl
sub
xlat
pop
mov
rcrb
mov
mov
out
das
divl
lock
pop
in
lret
out
mov
in
pop
loop
enter
into
sub
pop
iret
loopne
cld
out
fildl
cmp
js
xchg
lods
pop
out
mov
push
add
xlat
jmp
aam
xchg
cmp
push
dec
ja
andb
fsubrl
test
sub
fistpl
mov
pusha
jmp
rcl
js
xchg
mov
and
popl
push
adc
outsl
stos
arpl
mov
adc
pop
out
incb
je
fwait
adc
inc
aam
mov
xchg
iret
out
fisubrl
nop
add
bound
and
fmulp
or
divl
mov
je
or
mov
enter
push
xchg
mov
and
mov
inc
push
pop
sub
mov
ds
lcall
jl
cs
mov
push
stos
or
jp
lods
cli
or
scas
xor
dec
sub
pusha
enter
mov
stos
loope
jb
loop
inc
cmp
iret
xor
cmpl
push
pushf
fcoml
test
xor
jl
and
xlat
repnz
mov
rcr
dec
pop
inc
clc
cmp
lahf
cld
pop
mov
dec
js
adc
or
aas
xlat
movsb
addr16
and
mov
sti
cmc
push
xchg
or
and
inc
inc
rcll
lods
push
push
cltd
push
adc
out
xchg
lods
adc
or
mov
shll
shr
mov
jecxz
cmc
mov
shlb
sbb
pop
add
inc
gs
daa
jg
pop
cmp
xor
sub
lret
mov
mov
das
std
adc
mov
mov
mov
cwtl
jle
loopne
mov
repz
sbb
stos
push
lods
outsb
pop
cld
pop
mov
repz
xor
mov
lock
mov
add
cmp
ss
test
int3
push
dec
sar
add
cld
adc
push
sti
mov
test
out
ret
sub
jb
push
inc
sahf
das
or
insb
cmp
mov
bound
add
test
shrb
cmp
vpunpckhdq
mov
shrb
mov
orb
jle
cmp
jle
jge
xchg
loope
je
jge
call
jmp
or
cmp
jl
ret
cwtl
push
push
test
mov
mov
lock
insl
add
std
ja
xchg
xor
pop
test
mov
inc
jnp
fidivl
mov
xor
je
add
into
iret
dec
lock
xlat
cwtl
stos
push
xchg
or
push
inc
gs
mov
in
gs
push
mov
xor
out
mov
mov
xchg
xlat
adc
loope
mov
and
neg
push
lea
scas
dec
lret
push
add
and
test
mov
addr16
xor
stos
nop
lret
and
lods
das
ja
dec
and
outsb
jns
jo
repnz
fwait
mov
ds
cmp
ja
jecxz
fisttpl
sar
mulb
movsb
xchg
inc
test
xorl
sub
push
jo
jae
lret
test
push
stc
pop
fisubrl
inc
rclb
jno
mov
movsl
sbbb
sbb
add
pop
inc
sbb
dec
mov
mov
test
xchg
arpl
jp
popf
rclb
aad
out
add
mov
mov
arpl
push
es
mov
sbb
sub
data16
in
popl
outsl
adc
fildl
stos
bound
mov
push
ss
and
ja
sbb
and
pushf
mov
addr16
adc
test
push
mov
push
dec
test
lret
sub
and
dec
xchg
jmp
mov
mov
aad
jecxz
stos
stc
add
call
mov
adc
jp
cwtl
sbb
popf
outsl
or
pusha
mov
bound
lret
notb
jnp
pop
and
loop
iret
add
outsl
add
cs
or
sbb
cmpsb
add
lret
mov
lods
shll
scas
pop
lods
arpl
mov
repz
fmul
cmpb
xchg
push
mov
mov
sub
or
scas
hlt
in
jp
and
bound
push
and
lahf
enter
movsb
and
repz
pop
mov
sub
sbb
and
fdivl
cmp
int
push
and
ja
push
sbb
add
testl
jp
fisubs
mov
sbb
idivb
int
arpl
lock
mov
jae
xor
mov
leave
fistpll
mov
pop
mov
or
sahf
pop
jo
xchg
mov
sub
mov
fucomip
xchg
leave
cmp
xchg
stos
xchg
movzbl
fnstcw
fcoml
adc
rcll
pusha
fldenv
inc
outsl
and
sbb
sti
mov
sahf
cmpsb
popf
pusha
inc
cltd
mov
add
xchg
aaa
or
mul
pop
and
mov
fstpt
push
inc
daa
add
mov
pop
push
test
ret
xor
pop
and
mov
mov
lea
fdivrs
xor
cmc
lea
sbb
and
and
add
pushf
xchg
adc
push
or
xor
fcmovu
push
jno
fs
inc
not
notl
xor
pop
lahf
fdivl
sahf
adc
sbb
mov
lea
fsts
inc
rcll
cmc
push
pop
adc
cmp
mov
test
push
mov
data16
repnz
mov
xchg
imul
mov
mov
inc
inc
js
xchg
ret
cmpl
fidivl
xchg
adc
xchg
divl
and
into
jmp
fistps
inc
lret
inc
sbb
xchg
pushf
adc
dec
in
scas
insb
jl
xor
sahf
mov
pop
sub
xor
loopne
xchg
jmp
loope
sub
pusha
ret
jo
lret
mov
adc
push
imul
out
sbb
mov
sub
icebp
stos
lcall
push
mov
jmp
inc
shrl
push
pop
imul
mov
inc
aam
jno
or
add
xor
lods
push
fldt
cmp
data16
mov
sub
cmp
pop
and
add
mov
add
xlat
and
test
dec
sbb
insb
in
adc
sub
mov
imul
in
sahf
cmp
mov
out
jle
mov
dec
out
mov
gs
ja
xchg
dec
sub
cld
fs
push
mov
popa
in
out
mov
mov
mov
movsb
rorb
jp
jae
cld
mov
test
xchg
or
dec
es
fisttpl
xor
pop
add
jle
mov
fyl2x
cwtl
add
lcall
test
mov
and
mov
mov
lock
insb
mov
mov
test
movsb
jno
lods
cmp
mov
mov
mov
test
in
ja
flds
inc
int3
addr16
fistps
xor
xchg
insb
bound
pop
insb
mov
stc
ret
adc
xchg
sti
fcomps
sbb
sbb
fisubl
xchg
in
cli
inc
rorl
rclb
iret
push
push
adc
loop
incl
push
pop
cmp
push
adc
push
cmp
sub
daa
inc
je
aas
aad
dec
and
arpl
push
mov
ret
lea
push
xchg
stos
push
adc
pop
push
sbb
mov
aam
nop
adc
cmc
bts
cmc
mov
jae
xchg
fnstenv
int3
jle
mov
pop
mov
and
gs
jns
add
push
inc
add
popf
pop
inc
sbb
sbb
mov
inc
cmpsb
cmpb
cmp
mov
jo
sbbl
lret
push
mov
pop
imul
test
or
gs
xorl
dec
mov
andnps
pop
xor
in
or
bound
mov
nop
push
mov
adc
pop
or
xlat
ja
jno
mov
rorl
in
mov
mov
xchg
xchg
gs
mov
cmc
push
mov
test
fisubrs
mov
mov
dec
shl
push
mov
adc
pop
mov
adc
sbb
jne
stc
cmp
fs
cltd
mov
lods
or
sbb
mov
fcomi
out
and
inc
and
jmp
sbb
or
sbb
adc
nop
stc
addl
icebp
xor
leave
mov
push
pop
mov
lds
mov
loopne
push
es
rcl
pop
cli
mov
sbb
enter
sti
inc
sbb
pop
push
fwait
fwait
aas
xchg
pop
out
mov
and
cmpsl
and
pusha
clc
dec
fnsave
fwait
loopne
push
into
xlat
sbb
lea
sub
and
sub
inc
leave
test
dec
negb
push
ja
adc
das
ret
mov
xchg
iret
and
popf
pop
xlat
xchg
or
xchg
in
ljmp
add
lcall
mov
mov
test
sub
das
lahf
mov
mov
xor
lock
push
outsb
scas
jle
jne
dec
test
in
lret
call
add
inc
roll
inc
and
rorl
or
test
arpl
push
mull
jl
stos
scas
stos
push
adc
mov
stos
sub
mov
cltd
push
fcomps
ljmp
in
outsb
xchg
push
xlat
cli
ret
mov
inc
imul
adc
pop
stos
cli
mov
jnp
sarl
iret
ret
cmpsl
push
jne
and
adc
lods
shlb
addb
fwait
test
pop
loope
sti
dec
inc
push
dec
cmp
loope
mov
jnp
jo
int
and
out
push
stc
mov
add
mov
rorl
or
mov
or
pop
xor
xchg
and
loopne
cld
xchg
dec
adc
int3
stos
add
sbb
shlb
outsb
jl
inc
push
leave
ficompl
sub
xor
fiaddl
call
dec
fsubr
ficoms
sbb
sbb
jp
or
fcompl
orb
fsubrp
mov
push
je
rorb
mov
push
inc
ss
rol
or
ljmp
stc
xchg
cmpsl
pushf
jnp
cs
popa
int3
mov
faddl
loop
inc
mov
arpl
jae
xor
mov
movsb
jne
test
jns
out
aad
sarb
out
mov
vmread
into
and
out
fbld
pusha
push
push
out
sbb
iret
cmpsb
adc
test
fstps
xor
cli
mov
dec
mov
loop
outsb
pop
aad
pop
cmp
negl
jl
icebp
dec
jns
add
ljmp
fdiv
xchg
pop
lcall
mov
fwait
mov
xchg
xor
and
or
xchg
loope
mov
pop
mov
int3
add
dec
or
pop
push
in
pop
movsl
sbb
movsb
push
or
lcall
cmp
jne
icebp
mov
sub
mov
sub
dec
xor
sahf
sbb
test
sub
lret
stos
dec
insl
out
pop
popa
xchg
outsl
xor
js
fwait
leave
mov
lock
lcall
push
xchg
scas
push
push
push
pop
enter
fmuls
pusha
sub
mov
or
and
sub
scas
mov
fistpll
cld
das
cld
rorb
mov
mov
xor
icebp
lods
insb
in
xchg
icebp
sbb
fmull
jp
sbbb
pop
fwait
mov
dec
fwait
jg
jmp
pop
and
jo
popa
xchg
and
ror
add
insb
pop
cmc
mov
pop
ss
lret
jne
aaa
clc
mov
cmp
dec
clc
test
in
xchg
xchg
xor
iret
mov
out
lods
stc
arpl
or
in
gs
in
push
imul
push
cmp
xor
mov
push
cmc
cltd
ffreep
push
xchg
ficoml
test
clc
dec
jne
add
repnz
xchg
cmp
lcall
sbb
ss
popa
xor
popf
fsubrs
or
push
cmp
sbb
enter
es
push
fistl
pop
cmp
fstpt
bound
pop
sub
out
xchg
and
xchg
sbbb
aad
mov
adc
mov
andb
mov
mov
mov
and
mov
pushf
out
std
xor
movsl
fisubrs
push
icebp
mov
enter
mov
iret
std
cmpb
sbb
subb
push
scas
clc
pop
movsb
roll
fisubrl
les
rorb
repnz
aad
ds
cmpsl
pop
cmpsl
mov
insb
sti
fs
cmp
pop
lds
bound
dec
mov
rcrb
popa
mov
pop
mov
pop
ficoml
sbb
sbb
cmpsb
mov
and
lea
adc
xchg
ret
jg
pop
push
fwait
jbe
lds
or
jge
adc
push
inc
int3
clc
subl
cmp
orl
ficoml
add
pop
iret
push
xor
cmc
enter
mov
mov
sub
mov
or
insl
js
mov
pop
pop
lock
jl
adc
call
aas
push
or
cwtl
or
fwait
cmp
mov
mov
push
pop
or
lret
das
fwait
lock
lret
and
in
adc
xor
in
cmp
clc
out
dec
add
sub
imul
test
bsf
pusha
sub
sub
fmull
scas
dec
push
xchg
in
incl
xchg
jp
add
aaa
iret
mov
rcll
test
pop
in
std
aam
pop
ds
pop
pop
add
mov
adc
inc
imul
dec
inc
aaa
mov
xor
and
pusha
mov
pop
cmp
pop
pop
push
gs
push
pop
add
out
mov
shll
jbe
stos
sbb
leave
and
sbb
ret
jp
icebp
or
jae,pt
in
vphaddbw
dec
xchg
fnstenv
mov
pop
inc
fbstp
jbe
ror
or
mov
mov
push
popa
lcall
imul
xchg
xchg
fwait
pusha
js
hlt
loop
lret
es
push
jae
incl
sbb
js
jmp
stos
imul
cltd
call
vsqrtsd
push
adc
ds
jg
iret
push
xor
xchg
test
pop
bound
aas
cmp
mov
js
jo
sub
mov
and
rcll
jecxz
div
addr16
leave
xor
scas
mov
and
insb
adc
jg
jle
mov
mov
fs
xlat
sti
dec
mov
test
mov
in
xchg
jp
jmp
scas
xchg
ret
shll
dec
cltd
and
sub
jge
fdiv
push
cmp
xor
or
in
hlt
jo
push
nop
dec
movsl
jne
or
jecxz
das
ljmp
mov
add
js
push
daa
insl
mov
je
popa
adc
shl
insb
cwtl
mov
push
adc
push
stos
cmp
mov
mov
xor
inc
cmp
sub
dec
or
xchg
add
dec
push
cld
insb
xchg
mov
clc
mov
inc
cmc
and
ja
mov
inc
ret
sbb
loopne
mov
xchg
pop
xor
mov
ds
aam
nop
shl
add
dec
jmp
bound
fxch
dec
int3
iret
cmp
imul
xor
hlt
push
dec
fisubl
out
cli
popf
popf
loop
aaa
sbb
test
sub
cli
inc
dec
mov
inc
mov
repz
dec
add
stos
jl
shlb
and
jbe
xchg
mov
mov
xor
iret
sub
mov
dec
push
frstor
lods
and
pop
imul
icebp
xchg
mov
addr16
stos
out
jg
add
lea
adcl
out
test
mov
xor
lret
popf
call
mov
pop
pop
mov
xchg
dec
or
out
fnstsw
mov
fistpl
enter
push
lods
xlat
add
xchg
jns
lock
rcr
out
test
sub
aam
std
xchg
ficomps
inc
cltd
es
mov
jmp
shrl
in
idiv
xor
sub
jnp
pavgb
inc
pop
or
lret
add
mov
faddl
and
cmp
js
and
mov
popl
adc
mov
out
div
outsb
imul
aad
push
jecxz
fidivrl
mov
push
in
mov
push
ja
sti
pop
pusha
inc
test
pop
rcrb
xor
jae
cmpsl
andb
pop
sub
and
pop
ljmp
mov
sbb
jbe
xchg
aaa
arpl
mov
pop
scas
sbb
mov
bound
xchg
cmp
ljmp
mov
cmpsb
mov
adcb
or
jnp
sbbl
push
cltd
pushf
mov
repz
mov
jnp
xor
push
subl
jae
jo
stc
clc
jns
xor
xor
adc
dec
lret
push
std
cmp
jl
pop
ret
into
adc
xchg
lret
push
xor
fimull
cwtl
xchg
vmaxps
cmpsl
or
cs
test
mov
std
test
ret
sub
aad
int
outsb
dec
xchg
sub
loop
clc
cmpsl
jbe
add
mov
mov
je
mov
and
inc
push
and
lret
push
lods
inc
fsubrl
bound
mov
enter
inc
rcll
mov
jmp
inc
imul
push
pusha
push
jge
shr
inc
cwtl
mov
mov
lods
pushf
add
fimuls
in
xor
jp
incl
dec
clc
jno
add
dec
dec
or
sbb
sbb
mov
jecxz
mov
cld
bound
cmpsl
scas
insb
push
adc
dec
scas
sbb
popa
filds
xor
lcall
repz
test
mov
je
pop
test
mov
pushf
add
fldl
repz
les
into
push
cs
fs
lahf
out
adc
jp
pop
push
pop
add
xchg
push
test
xchg
pop
shl
inc
scas
into
mov
cmp
cmp
out
out
jno
out
and
inc
or
enter
shll
mov
sti
add
aas
lret
push
dec
ja
lret
fsubs
mov
sti
in
ja
inc
les
jno
add
sbb
lea
das
add
push
icebp
stc
pop
dec
sbb
inc
mov
sar
in
test
mov
in
test
add
test
adcb
xor
pop
mov
xor
icebp
test
add
xor
sbb
sub
pop
inc
adc
jo
jo
decb
xor
mov
insl
cwtl
inc
xchg
test
cmpsb
mov
insl
dec
mov
scas
leave
shll
cs
je
pop
xor
outsl
ret
xor
repz
ljmp
jns
adc
fiaddl
popf
test
and
cmp
mov
int3
out
ja
jae
shll
sub
roll
sub
sub
mov
aas
testl
out
lods
fwait
jns
shrl
fidivs
in
enter
cmpsb
imulb
aaa
into
add
jnp
jne
insl
mov
cmp
push
pop
xchg
mov
pop
and
dec
iret
enter
or
iret
jg
lret
mov
out
repz
or
jns
mov
scas
ds
mov
fstps
bound
popa
hlt
out
rcll
adc
adc
leave
fisubs
sbb
and
push
cmc
inc
pushf
pop
aas
sahf
push
push
xchg
lret
cli
loopne
test
inc
inc
nop
scas
pop
push
xchg
int3
add
and
fcoml
rorb
mov
ljmp
lret
call
xchg
sarb
enter
scas
jp
sub
inc
adc
andb
out
cmp
fwait
xchg
cmc
leave
sbb
cmp
aaa
stos
push
mov
fcoml
scas
mov
dec
mov
sti
xchg
push
out
not
sub
or
adc
lods
and
lcall
int3
mov
stos
movsb
out
test
and
fistl
dec
gs
cmpsb
in
dec
xchg
jne
and
mov
xchg
pop
js
loopne
pop
xor
or
lock
jae
enter
xchg
cwtl
pop
dec
adc
aam
push
sub
fimuls
icebp
mov
inc
inc
mov
sub
mov
or
in
sbb
test
lods
inc
jno
test
aad
cwtl
sbb
stc
cmp
adc
clc
jg
lret
mov
imul
pop
out
jl
xchg
addl
and
outsb
sbb
dec
mov
mov
shll
ds
mov
loop
push
xchg
and
and
push
mov
sub
icebp
mov
mov
out
stos
ret
out
push
les
hlt
xor
mov
lods
outsl
jbe
ret
mov
lock
clc
loopne
mov
xchg
mov
insl
mov
iret
daa
jo
xchg
es
xchg
jecxz
test
or
xorl
mov
add
mov
mov
adc
pop
or
or
adc
test
xchg
in
add
lods
cmc
test
pop
inc
pop
pop
test
cwtl
mov
rcrl
subl
sub
mov
jno
push
movsl
lahf
pusha
xor
aad
and
insl
cld
lret
gs
xchg
dec
mov
enter
or
enter
xor
filds
rolb
dec
jp
jnp
cmp
add
or
insl
push
push
aaa
cmp
or
push
lods
mov
xor
int
jno
push
daa
mov
ret
in
insb
sub
adc
inc
int3
int3
pop
mov
xchg
push
out
xchg
fs
inc
loop
xor
jmp
lahf
or
inc
test
lret
jb
rorb
imul
out
aad
adc
jb
fwait
dec
out
push
jnp
jle
shrb
pop
inc
add
cmp
or
add
xor
cs
into
xor
das
nop
pop
mov
jg
push
mov
jg
popf
ljmp
pop
or
mov
mov
mov
mov
iret
lock
jp
in
mov
fmul
cli
adc
jae
mov
inc
int
shlb
xor
loopne
test
lahf
mov
in
aam
hlt
push
cmp
mov
inc
mov
lds
jmp
shr
sub
cmp
jb
sbb
inc
and
mov
and
movsb
adc
call
mov
xchg
hlt
xor
pop
inc
dec
sahf
mov
test
dec
or
inc
jno
add
dec
das
aam
push
inc
jb
pop
or
iret
jle
xchg
mov
sbb
jl
adc
pop
ds
orb
push
lock
addl
mov
pop
popa
loopne
sbb
repz
push
ret
or
xlat
loope
cmp
and
sbb
int
adc
fisubrl
inc
mov
jns
sub
lea
mov
repnz
testl
add
cmpsl
mov
and
adc
xor
add
mov
jmp
insl
sub
mov
ficoml
repnz
loopne
jmp
push
pushw
mov
icebp
mov
jecxz
cmp
xlat
jmp
iret
sti
inc
scas
aaa
or
fistps
and
rcll
jae
pop
lock
dec
leave
sbb
pop
into
push
loope
xor
insb
mov
ds
jp
aad
xchg
inc
pop
sub
dec
mov
mov
mov
in
add
lock
stos
nop
mov
pop
add
jnp
stos
jne
pop
js
ret
cmpsb
popf
lock
call
dec
mov
int
int
jb
mov
mov
in
scas
ficomps
mov
pushl
cvtps2pd
pop
and
in
je
push
push
lahf
add
and
push
xor
cmp
jnp
movsb
cld
insl
test
fwait
ja
lods
xchg
mov
jne
loopne
aad
fdivrl
rolb
scas
add
lcall
and
int
inc
in
jl
cwtl
or
rorl
inc
xlat
sbb
out
stos
imulb
psrlw
adc
inc
dec
xor
sub
or
psubd
rcl
cmp
cmpb
stc
lods
mov
push
aad
xor
cs
repz
push
incb
xchg
lahf
popa
pop
dec
jns
push
movsb
std
mov
sub
sbb
lock
into
or
and
pop
insb
cltd
ds
xchg
pop
jmp
dec
cmpl
mov
int3
xchg
cmp
pop
test
add
adc
cmp
cmp
cmc
in
daa
into
cwtl
pop
mov
mov
push
addr16
out
bsf
jp
in
sbb
mov
jl
in
or
roll
stos
int
test
and
push
adc
ds
inc
xchg
or
xor
aas
sar
sbb
test
xor
dec
nop
sbb
lds
jns
and
pushf
mov
out
dec
imul
mov
inc
jg
fwait
outsb
ret
insl
jb
sub
sahf
cmp
jecxz
roll
push
mov
jl
add
push
xchg
pop
and
jp
popa
cld
push
bound
mov
mov
loopne
orb
fisubl
jecxz
pop
and
mov
sbbb
roll
mov
pop
bound
je
arpl
int3
mov
mov
repz
jb
cmp
or
aad
mov
sub
pop
imul
jb
repz
daa
lods
xor
iret
loop
mov
mov
cmp
cmp
and
sbb
cwtl
ljmp
ret
jbe
lret
pminub
rorb
andl
adc
fsubrs
insl
cwtl
xor
in
jp
mov
rorl
mov
push
iret
pop
pop
lea
pop
jmp
adc
jge
imul
mov
xor
mov
aas
out
xchg
pop
or
and
xchg
xchg
sub
shrb
pushf
xorb
cld
sbb
cmpsb
mov
add
test
ljmp
es
xchg
les
cs
xchg
xor
wrmsr
inc
dec
push
dec
xchg
lcall
sub
mov
dec
sahf
fists
mov
mov
push
pop
test
stc
shlb
lea
sbb
lret
dec
adc
loopne
xchg
popf
push
pop
hlt
lret
push
pop
into
inc
fyl2xp1
cmp
ret
leave
int
add
jo
cmpb
xchg
xor
fistpll
subb
mov
xor
in
incb
into
scas
stc
es
dec
rcll
sahf
pop
sahf
push
call
aad
dec
cs
pushf
inc
popa
addl
inc
mov
nop
jae
lods
mov
push
call
pop
or
mov
pusha
sub
lcall
outsl
pop
aas
adc
test
sub
adc
inc
insb
pop
ret
ds
sbb
xchg
xchg
jge
mov
dec
inc
popw
cmp
fwait
punpckhbw
mov
imul
xchg
and
ljmp
test
stos
repnz
fbstp
pop
push
push
mov
jg
jbe
cli
arpl
ss
jg
xchg
push
add
fisttpl
add
xchg
mov
lea
push
add
jp
aad
and
mov
pop
mov
mov
pop
xchg
mov
jo
jno
cmp
cmp
fldl
lock
shll
pop
cmp
mov
insl
sub
push
addr16
ficomps
push
mov
test
adc
int
std
call
pop
pop
shr
sahf
push
ror
mov
out
jecxz
lahf
adc
mov
call
das
adc
pusha
push
hlt
sbb
xlat
xchg
sub
into
cbtw
fcoms
shrl
xchg
push
xchg
bound
mov
sbb
cmp
xchg
mov
pop
jns
outsb
dec
ljmp
mov
sahf
in
lds
sarl
loopne,pt
xchg
fdivrl
jecxz
xchg
iret
aam
cmp
jl
mov
test
frndint
mov
mov
push
mov
mov
call
mov
ja
sbb
out
loopne
mov
test
in
adc
or
in
mov
and
mov
loopne
cmp
lds
mov
inc
pop
cmp
mov
add
add
inc
jl
inc
ret
in
cmp
jle
adcl
ds
and
aas
xlat
lock
test
enter
cld
fdivs
iret
shll
scas
imul
mov
cli
into
das
mov
jb
subl
pop
shlb
lea
das
loop
xchg
push
inc
pop
leave
lods
jno
inc
les
sahf
pop
icebp
cld
in
push
sbb
lcall
ljmp
or
roll
enter
sub
or
push
shlb
and
rclb
mov
pop
pusha
ss
add
pushf
mov
or
cmp
xor
jae
add
push
or
mov
fisubrl
add
and
mul
std
int3
loope
sbb
add
inc
les
js
shl
cmp
mov
call
int
leave
and
lahf
popa
stos
push
jbe
or
movsb
jae
pusha
adc
xchg
xchg
jb
pop
push
stos
imul
mov
mov
cmp
aaa
jg
nop
jnp
xor
ret
and
movsb
rcll
inc
push
push
push
sbb
and
jmp
repnz
mov
int3
loop
mov
push
repnz
out
xor
icebp
jb
idivl
stos
xchg
lea
in
fsubrl
sti
add
inc
lea
iret
movsb
push
inc
flds
sub
cmp
ds
ret
sbb
pop
jg
dec
fmull
in
xlat
adc
jmp
inc
mov
into
mov
and
and
mov
cmpsb
xor
jl
movsl
xlat
pop
xchg
xor
lahf
adc
push
and
dec
xor
pushf
mov
xchg
into
inc
adc
and
into
lahf
test
cld
mov
jecxz
xor
add
stos
xchg
xchg
pop
ljmp
out
jne
push
inc
fdiv
push
iret
pop
push
or
icebp
lods
mov
pop
orl
and
scas
jmp
inc
addb
push
sbb
insb
sbb
xchg
sbb
mov
jle
bnd
inc
ss
lods
lret
push
stos
dec
stos
scas
shrl
or
push
mov
fwait
or
lds
fsqrt
les
xor
inc
pop
sbb
and
and
sahf
mov
mov
loop
sbb
pop
dec
int3
dec
das
lret
ljmp
insl
out
mov
xor
call
xor
lcall
mov
cmp
jg
mov
adc
mov
push
js
stos
out
lock
mov
int
bound
insb
sub
pop
shll
ret
sbb
cli
adc
les
nop
outsl
imul
pop
sbb
cmp
stos
loop
jp
loope
add
fists
inc
repz
mov
test
and
and
pop
cmp
or
je
pop
and
fidivrl
push
repnz
test
std
sub
adc
lea
jnp
cwtl
sbb
popf
leave
lea
pop
dec
es
cmc
call
jmp
xchg
jge
rclb
and
das
dec
mov
mov
les
add
cltd
adc
jl
mov
stos
pop
inc
pop
sub
icebp
in
mov
ds
pop
adc
lahf
xor
dec
push
fcomps
stc
insl
loop
daa
gs
hlt
shlb
jl
adc
mov
adc
lock
inc
or
cltd
mov
stos
inc
add
enter
pop
push
pop
mov
and
into
int
inc
lcall
fdivs
sarl
and
or
icebp
mov
adc
jl
push
and
ljmp
mov
cmp
imul
aad
dec
ss
loop
pop
xor
ja
stos
and
test
fisubl
arpl
pop
int
xchg
fs
or
movsb
inc
and
sbb
jmp
lret
cmp
xchg
add
pop
in
and
arpl
and
insl
lock
or
and
iret
and
lods
ja
push
aad
jae
pop
scas
cli
jno
dec
ds
mov
jle
test
pop
sahf
mov
loop
sbb
daa
jp
cmp
cmpb
lahf
adc
sbb
dec
or
pop
pop
cmp
sbb
mov
mov
ljmp
jb
jmp
ja
sub
inc
outsb
imul
pop
imul
xor
rorb
lods
cmp
xchg
repz
mov
pop
push
jge
jbe
mov
xchg
test
clc
mov
and
popa
dec
repnz
jb
pusha
xor
and
call
inc
jns
and
or
fsubs
insb
aad
jecxz
dec
xor
xor
loopne
cmpb
ljmp
dec
xchg
mov
xchg
in
fisttpll
lahf
pop
psubw
popf
test
filds
sub
pop
and
or
mov
fcomi
lret
jb
rcl
dec
fsubl
mov
fwait
xor
ja
addr16
mov
cmp
cmp
imul
mov
int3
loopne
mov
ret
les
pop
aas
dec
out
imul
add
stc
bound
leave
test
cmp
or
pop
ljmp
shr
xor
outsl
rorb
int
cmc
ficoml
sbb
inc
js
stos
mov
aad
jbe
cs
add
pop
pop
in
outsl
lcall
in
push
adc
mulb
out
push
mov
jmp
jo
mov
mov
imul
in
inc
sahf
es
in
push
or
mov
cli
adc
lock
mov
xchg
lcall
jo
out
or
stc
mov
or
gs
lret
sarb
mov
in
add
insb
setge
sub
aad
and
pushf
mov
push
ljmp
xor
mov
rcl
pusha
lret
jge
adc
jns
add
mov
outsl
add
cmp
clc
jl
fwait
push
pop
xorb
mov
or
jns
mov
jno
mov
mov
clts
jno
push
out
int3
and
mov
pop
pop
fcomp
pop
and
mov
xor
cwtl
rclb
add
pop
ficomps
jp
push
xchg
sub
jnp
dec
adc
jp
out
in
loopne
cmp
lret
shlb
pop
int
stos
mov
inc
jbe
jmp
in
imul
add
adc
out
scas
inc
xchg
lods
stos
or
jnp
jl
push
xor
jne
dec
insb
jg
push
aaa
es
jecxz
dec
inc
jbe
or
add
add
add
es
mov
mov
xchg
test
mov
leave
adc
sarl
aad
insb
lods
add
aaa
adc
inc
andl
mov
push
test
adc
cmc
in
sbb
fsubrs
pusha
sbb
and
cltd
sub
icebp
outsb
push
xor
fcomip
xor
cmp
int
fsubs
stos
sahf
call
pop
pusha
lods
cltd
xor
call
dec
mov
sbb
insb
adc
xor
fisubs
jae
nop
dec
pop
clc
push
mov
jecxz
test
xor
jo
adc
cmpsb
out
jbe
jl
imul
pop
fldt
xchg
iret
and
sub
and
push
popa
shll
jno
shll
pop
adc
xchg
mov
mov
sub
sub
scas
ss
shl
outsl
jmp
sub
sbb
pop
lret
mov
cmpsl
push
fisubs
sbb
scas
call
lea
imul
inc
adc
mov
gs
fwait
rolb
or
xor
pop
popf
neg
push
add
xchg
or
pop
jmp
cmp
movsl
outsl
fists
jo
ja
cmp
inc
lret
int3
mov
xor
sub
out
or
mov
push
iret
jecxz
lds
sbb
fisubl
arpl
xchg
rorb
movsb
clc
pop
in
mov
fnstsw
das
cmp
inc
inc
fisubrs
or
cmc
sbb
and
lods
jnp
pop
scas
jg
cltd
or
sub
ficoml
sub
aas
jg
sub
adc
imul
loope
inc
dec
pop
sbb
mov
outsb
fs
mov
fmul
fistpll
lds
pop
lret
jo
cltd
daa
dec
outsb
pushf
mov
mov
fwait
mov
xchg
inc
fsubrs
xor
iret
ret
shll
pop
mov
xchg
xor
dec
in
lahf
mov
aas
sub
pop
imul
mov
xor
and
imul
and
ret
xchg
rol
inc
push
adc
cmpsl
cmpsl
jo
xchg
mov
push
ret
push
mov
mov
pop
sub
pop
cmp
mov
sbb
ljmp
mov
mov
sbb
push
or
shll
mov
xchg
in
mov
xor
imul
roll
ds
xchg
inc
pop
addl
pusha
and
add
and
cmp
push
imul
js
inc
subb
fistpl
lahf
xchg
rorb
or
dec
xchg
cmp
shll
jno
add
mov
sub
pop
mov
scas
add
es
movsl
jmp
xchg
sbb
ror
fwait
cmp
inc
xor
dec
stos
adc
les
xlat
call
ror
add
lahf
pop
loope
inc
jb
shl
out
mov
cwtl
add
inc
sub
aam
imul
xchg
xor
xchg
repnz
and
inc
inc
out
adc
xchg
mov
sbb
inc
scas
push
clc
ret
xchg
pop
fwait
sbb
fld
and
cmp
lea
loopne
ljmp
dec
mov
xor
cmp
fnstsw
shll
cmp
mov
jo
outsl
cmp
sub
in
push
test
int3
sub
cmp
push
pushf
xor
fimuls
add
shrb
add
or
sbb
pop
out
pop
or
dec
les
mov
pop
out
jne
fwait
sti
mov
mov
push
js
pop
xchg
loopne
cs
pop
hlt
mull
cmpsb
movsb
mov
jb
push
jl
call
pop
aad
cmp
push
out
add
jmp
cwtl
scas
or
shll
aas
dec
int3
negl
push
cld
sub
pop
dec
hlt
inc
adc
movl
icebp
dec
mov
call
lock
mov
jne
jno
imul
inc
je
sub
je
xchg
adc
bound
xchg
ds
pop
and
dec
inc
inc
xor
clc
cmp
call
push
pushf
sub
mov
sbb
pusha
jmp
pop
or
cmp
mov
and
pop
sbb
jge
sub
push
stos
mov
test
ds
pop
out
call
dec
jecxz
notb
je
lret
xchg
sbb
add
cmp
cmp
lret
xchg
cli
mov
gs
je
cmp
xor
cmp
inc
pop
sub
adc
hlt
inc
lods
stc
dec
push
mov
jmp
add
outsl
xchg
daa
sbb
mov
mov
subl
and
pop
xor
jle
xchg
cld
push
test
or
fdivl
or
mov
pop
mov
xor
push
cmp
ds
push
popf
ja
negl
or
in
mov
aad
adc
scas
loope
sub
xchg
cmp
pop
stos
gs
mov
dec
outsl
popf
xchg
or
mov
aas
mov
sbb
push
scas
fildl
movsl
push
outsb
je
push
popa
test
pusha
xor
les
sbb
xchg
jno
adcb
xor
or
inc
sub
aas
push
xchg
sub
fstps
lea
xlat
sbb
popf
cld
aas
dec
jecxz
daa
push
adc
test
aam
mov
inc
int3
or
cmp
cmp
sub
lods
scas
pushf
pushf
fwait
pop
and
fisttpll
bound
idivb
test
mov
out
jge
add
jo
hlt
mov
jp
dec
leave
lcall
test
sbb
xchg
sub
push
sbb
adc
test
adcb
or
lcall
xor
jb
mov
mov
jmp
dec
cld
stc
inc
jno
pop
mov
fmulp
daa
das
pusha
jecxz
outsl
add
inc
mov
cmp
into
sub
mov
xchg
nop
and
inc
mov
push
or
ret
inc
aaa
stos
mov
mov
add
sub
inc
add
gs
and
sub
loopne
mov
pop
lock
mov
int
adc
sbb
pop
nop
fisttpll
push
sbb
jg
dec
sub
andl
xchg
scas
or
hlt
testb
push
jns
adc
repz
inc
mov
fisubs
mov
or
jne
push
mov
addr16
cmc
sbb
xchg
mov
adc
jns
ja
xor
mov
sahf
fisubl
inc
xor
imul
notl
outsb
dec
push
insb
mov
mov
or
test
lret
movb
iret
mov
dec
adc
adcb
mov
xor
add
sarb
sub
shrl
inc
fs
imul
or
xadd
cmp
outsb
sub
mov
insb
loop
mov
in
sub
or
cmp
in
cltd
scas
jge
addr16
movsb
mov
das
mov
mov
lret
std
mov
sbb
iret
les
out
imul
call
xor
rorb
cmp
leave
out
dec
jae
mov
mulb
mov
inc
int3
sarb
dec
cltd
sub
adc
mov
out
aaa
xchg
or
sbb
mov
repnz
mov
inc
cli
std
fcmovbe
and
cmpsl
and
into
push
mov
out
sarl
jns
jno
stos
stos
lock
xchg
scas
in
xchg
jge
ljmp
out
cwtl
imul
jmp
push
add
adc
lods
mov
xchg
and
js
cmp
mov
in
push
popl
push
dec
mov
inc
fstpl
push
popf
push
mov
sahf
hlt
or
dec
out
jge
dec
push
in
test
jle
and
jb
push
fmull
jno
fldt
insb
jle
je
sub
aas
xor
lods
mov
inc
hlt
ss
pop
mov
and
jns
mov
sub
jne
push
sbb
loopne
ljmp
das
lcall
pop
push
loope
std
loope
and
nop
adc
jno
jmp
pop
add
mov
loop
stc
pop
fstpt
lcall
sbb
pusha
mov
push
cmp
int3
lods
fwait
fs
lret
inc
in
ss
or
mov
cmpsb
xchg
in
xorl
mov
push
cmc
insb
mov
sbb
aam
cwtl
or
and
mov
mov
shll
jecxz
lods
rolb
add
inc
sub
cmp
rcrb
pop
pop
js
daa
fcomi
and
mov
adc
or
jns
mov
sub
je
bound
outsl
and
aaa
mov
mov
xchg
movq
lea
dec
mov
jl
scas
insb
enter
inc
cld
and
aaa
out
jg
mov
push
in
push
cmp
test
and
in
mov
inc
lahf
mov
lret
mov
test
and
push
gs
dec
js
pop
fidivs
rorl
out
or
xor
xchg
adc
jecxz
ds
xchg
push
xor
out
clc
lock
in
dec
jb
mov
insb
pop
xor
int
in
pushf
out
addr16
and
lcall
mov
arpl
push
fisttpl
xor
xor
in
enter
xchg
fstps
push
stc
xchg
xor
mov
or
aad
test
and
lock
mov
arpl
outsb
movsb
mov
push
cmpsb
movsl
and
enter
lock
aam
clc
in
mov
jno
and
pop
jno
aaa
jno
lahf
mov
fcoml
jecxz,pt
and
xor
pop
mov
cmp
mov
cwtl
push
or
out
popa
sbb
rorb
jmp
adc
lock
sti
cmp
pop
mov
imul
xor
and
pop
test
aam
mov
outsl
aas
xchg
lahf
insl
cmc
es
sbb
sub
out
rorb
decb
enter
pop
sarb
icebp
push
dec
pop
std
xor
or
push
ror
xor
inc
lods
lods
cmp
aaa
cmp
in
sbb
insl
or
sbb
adc
jno
cwtl
inc
add
add
cli
dec
adc
jecxz
inc
enter
adc
push
popa
insb
dec
mov
xchg
repnz
jp
mov
lock
dec
aam
cltd
push
and
rcr
fisubl
sbb
or
mov
ljmp
pushf
dec
push
or
and
or
idiv
mulb
inc
call
jge
ds
loopne
inc
xchg
push
mov
ret
pop
adc
push
cltd
sar
je
push
cli
ljmp
sub
into
sbb
sbb
fnstenv
or
daa
test
xlat
addl
and
mov
negb
inc
dec
pop
push
mov
cld
jbe
insl
dec
sti
jle
dec
lea
mov
xor
outsl
mov
pushf
push
cmp
mov
pop
sub
push
or
loopne
stos
jp
pop
iret
pushl
jle
insb
xchg
dec
mov
dec
pop
add
adc
fmuls
or
dec
push
inc
push
jge
jns
outsl
or
imull
cmp
pop
jmp
mov
sbb
leave
mov
sbb
testb
insb
inc
sub
leave
ja
xchg
xchg
mov
pextrw
lcall
mov
adc
sbb
jl
cmpb
popa
mov
stos
outsl
stos
xchg
repz
dec
std
sub
mov
scas
jle
loopne
xor
imul
cld
lret
sbb
mov
and
mov
push
stc
cmp
dec
mov
scas
dec
jmp
out
mov
sbb
mov
cltd
sahf
add
fidivrl
das
sbb
loope,pt
jb
jecxz
call
rolb
stc
gs
out
popf
into
jecxz
out
ja
imul
aas
stos
leave
sbb
stos
xchg
inc
adc
pop
and
outsb
cmpsl
scas
dec
outsl
es
rclb
fxtract
mov
es
xchg
cmc
aad
sbb
jo
jmp
jle
dec
dec
les
sub
add
daa
jg
call
les
sub
mov
dec
daa
js
mov
std
roll
pushf
fldcw
out
inc
push
sbb
in
je
inc
pop
xor
or
cmovg
cmp
sub
push
push
xor
nop
arpl
jb
outsb
sbb
adc
push
fmull
das
sub
ja
push
scas
xchg
pop
and
lcall
xor
sti
test
insl
inc
repnz
inc
mov
sahf
lea
sub
mov
and
mov
xchg
mov
and
mov
mov
jp
cmp
fwait
and
xor
cwtl
mov
xchg
stc
lret
mov
bswap
fmul
add
sbb
sbb
mov
jl
rorb
mov
adc
dec
inc
add
or
pop
xor
inc
inc
inc
and
xchg
pop
clc
mov
xchg
inc
mov
mov
in
ret
jmp
sbb
inc
jb
push
jo
adc
into
add
pop
repnz
sbb
inc
lock
scas
sub
mov
js
fisttps
jbe
into
jmp
push
rcrb
movsb
xor
out
mov
popa
adc
iret
and
lret
xchg
repz
clc
inc
loopne
add
mov
fwait
mov
xor
jno
sbb
lret
fidivrl
mov
sbb
adc
ror
pop
xor
mov
fld
ficompl
sbb
insb
stc
dec
cmp
fisttpll
cltd
mov
xor
mov
mov
pop
lods
imulb
cmpsb
mov
cmp
push
js
enter
outsl
stc
cld
inc
in
jb
fdivl
and
lcall
or
fdivp
stos
dec
cmpsb
lods
or
loop
int
je
xchg
mov
and
jae
sub
rorl
inc
sub
out
cmp
cs
jns
cld
rolb
into
repz
rcrl
and
xor
mov
mov
enter
lds
sbb
lret
leave
das
dec
xor
push
and
popa
cmpb
cmp
cmp
aad
loop
rclb
and
pop
or
sbb
ret
daa
mov
notb
push
inc
pop
testl
sbb
push
jne
add
subl
sbb
or
mov
mov
pop
mov
pop
scas
loopne
push
jb
icebp
cmp
mov
imul
jmp
sub
mov
ret
mov
push
imul
jo
sub
jg
dec
xlat
xor
cmp
fsts
or
cld
fcoml
mov
mov
jg
jge
mov
int
clc
mov
loope
aam
fs
jge
inc
sahf
aas
retw
mov
sbb
push
sub
mov
xchg
fadds
nop
and
movsb
ret
dec
xlat
int
lcall
aas
push
xor
push
cwtl
pop
jg
pop
test
pushf
inc
and
pushf
scas
loopne
ret
nop
sub
js
inc
jns
rolb
gs
pusha
xor
rcll
adc
cmp
scas
decb
sbb
mov
into
or
mov
mov
ja
dec
jecxz
or
pop
fisubl
xchg
sbb
shll
or
sbb
mov
pop
push
outsb
outsl
mov
sbb
pop
inc
jmp
test
adc
adc
std
adc
stos
lds
dec
pop
push
std
mov
and
ficoml
cpuid
pop
repz
fisubrs
mov
aaa
jecxz
mov
arpl
mov
int
mov
roll
inc
xchg
orl
mov
add
pop
lret
jp
pop
out
test
dec
or
popa
mov
in
out
insl
adc
cmp
xor
out
dec
mov
or
push
les
mov
or
sbb
jo
icebp
or
loope
jl
sub
push
loope
lock
xchg
fcmovnbe
pop
loope
out
inc
stc
xchg
dec
push
cli
addr16
cmp
stos
les
xchg
push
inc
push
jns
jnp
lds
loope
fbld
sub
mov
inc
fmuls
ss
push
out
and
iret
pop
mov
fmul
fcomps
mov
adc
jbe
lahf
add
aas
xor
int
push
xchg
aaa
clc
push
aam
push
cmp
pop
xchg
imul
push
mov
add
mov
rcrl
in
roll
fbld
jge
pop
mov
outsl
adc
out
scas
mov
mov
dec
pop
add
sub
add
pop
aam
pop
fnstcw
push
aas
aad
stc
scas
fsubs
xchg
sbb
dec
inc
jae
pop
ret
and
jbe
add
or
sbb
push
pusha
sbb
iret
and
lods
push
xor
cmc
stc
jae,pn
arpl
leave
cmpsb
ja
ja
jp
pop
incl
out
xchg
mov
fsubrl
and
sahf
sub
sbb
movsb
xchg
dec
shl
sbb
movsl
stos
xchg
or
adc
frstor
pop
aad
sub
mov
daa
mov
call
pushl
jmp
and
es
jns
xchg
test
cmp
or
test
xchg
or
shlb
je
out
pop
and
pextrw
mov
subl
popa
jg
mov
insb
mov
loope
pop
ja
inc
mov
jg
jge
push
dec
jge
fs
stos
fistpl
or
xor
movsl
fstps
out
out
and
xchg
jecxz
jg
add
xor
imul
inc
sub
sarb
pop
es
xor
daa
push
dec
and
addl
and
scas
jp
push
loope
or
mov
xchg
mov
jmp
mov
and
out
std
jbe
push
or
push
xor
mov
imul
pop
inc
orl
imul
pop
cmp
adc
ffreep
jns,pn
add
sti
mov
pop
mov
and
lret
cmp
sbb
lods
pop
pop
cmpsl
xchg
mov
adc
xor
mov
xchg
mov
cltd
sub
out
mov
mov
sub
mov
lret
cld
orb
jecxz
jecxz
push
ljmp
ds
shr
inc
push
stc
mov
inc
adc
jno
adc
pop
adc
fwait
lds
je
cli
div
jg
neg
xor
imul
aam
ficompl
jl
outsl
jl
adc
pop
das
jle
insl
jmp
ss
xor
clc
stos
push
inc
rcrb
mov
adc
insb
das
addr16
roll
adc
stc
lea
sarl
and
stc
pushf
mov
or
aad
mov
inc
push
test
xor
dec
call
fstpl
sub
je,pn
mov
or
mov
mov
cmc
int3
int
cmpsb
insl
dec
pop
mov
ja
xchg
pusha
add
dec
jle
andl
xchg
inc
inc
leave
inc
dec
add
cmp
lods
test
sbb
ds
jg
rolb
sub
nop
xor
mov
sub
js
mov
fucom
jnp
fimuls
xor
pop
incl
addr16
repz
jno
jbe
imul
adc
das
sbb
les
jecxz
jle
mov
mov
push
mov
mov
faddp
pop
jp
das
std
fcoml
mov
imul
add
mov
push
dec
mov
push
test
add
pop
in
mov
ljmp
cmp
pop
or
sub
test
mov
test
sbb
and
fmuls
iret
aas
test
fcomip
or
cmp
pop
sub
sub
or
push
xlat
sbb
out
popl
mov
movsl
sub
mov
jmp
ret
push
xchg
cld
mov
mov
divb
jbe
ss
mov
jl
cmp
scas
inc
es
pop
sbb
in
sahf
mov
dec
mov
xorl
idivb
jbe,pt
adc
mov
imul
lahf
sbb
das
je
out
mov
and
mov
imul
in
leave
into
xchg
sbb
inc
cmp
jbe
scas
mov
ffree
lock
sahf
movaps
jecxz
fwait
jnp
mov
arpl
cmp
test
jbe
or
sahf
mov
mov
fldt
pop
adc
das
loope
aas
pop
inc
pop
cmpsl
cwtl
pop
shlb
clc
and
ror
adc
lcall
pusha
loop
lods
add
fwait
into
insb
or
jae
jp
fimuls
das
scas
repnz
aaa
mov
es
leave
sub
fstpl
push
outsl
aas
add
pop
in
cmp
pop
ss
cmpsb
movsl
imul
addr16
dec
fs
arpl
fbld
inc
mov
fdivl
in
cmp
mov
pop
push
adc
sbb
arpl
into
xchg
adc
dec
cmpsb
outsb
sbb
ss
pushf
xor
push
lahf
mov
shr
scas
mov
out
push
jno
pop
iret
and
xchg
sub
lods
add
gs
inc
cmc
sub
lret
adc
or
lds
mull
js
jo
xchg
in
cmp
push
ds
xchg
push
fs
mov
mov
rolb
mov
in
andl
ljmp
dec
leave
ja
sub
sbb
xor
jnp
mov
or
push
rorb
popa
cltd
outsb
outsl
lods
xchg
dec
fdivrs
jnp
dec
xor
je
clc
mov
lahf
popa
in
and
das
or
fldz
shl
into
and
popf
pop
lds
stos
pop
pop
jl
pop
xchg
test
imul
mov
leave
pop
xchg
mov
sub
xor
loope
sbb
sbb
aas
xor
cld
data16
jle,pn
inc
daa
adc
mov
subb
fstpt
jl
and
push
jg
test
rolb
lock
pop
and
jle
movsl
stos
out
jns
sub
aas
loop
cmpsl
pop
sub
sub
repz
xlat
lcall
rcll
cmp
outsl
loopne
sub
inc
call
push
outsl
push
outsl
pop
stos
jg
push
movsl
jns
xor
movsb
mov
push
inc
push
je
test
mov
shrb
pop
and
rdpmc
negl
shlb
aad
outsl
add
sub
xor
filds
ss
sub
add
mov
xorb
jo
sbb
push
adc
je
pop
cmp
mov
fmulp
hlt
fwait
xor
inc
jns
outsl
js
xchg
adc
or
rcr
pop
mov
xor
cmp
and
xchg
pushf
cmp
sub
dec
mov
dec
jae
sarl
jl
cwtl
bound
lret
jne
pop
xor
cmp
mov
insl
movntq
and
out
mov
cmp
out
dec
jns
fs
mov
dec
sub
push
popf
xchg
mov
adc
xchg
or
ljmp
mov
jne
in
mov
sbb
inc
xor
jge
jb
cmpsl
xor
loopne
inc
outsb
add
sub
stos
in
cmpsb
dec
cmc
je
in
fnstenv
sub
xchg
imul
arpl
mov
jmp
cld
mov
lahf
dec
xor
push
mov
dec
stos
and
mov
repnz
lock
dec
dec
push
inc
cmp
sbb
lods
in
sbb
mov
leave
insl
cltd
int
flds
outsb
mov
insb
or
xchg
adcl
pop
cmp
imulb
xchg
sbb
sbbl
cmp
inc
push
negl
mov
and
and
sbb
push
cmp
ret
sub
fadd
aam
jecxz
div
cmp
clc
and
or
inc
aam
cld
mov
jo
aas
mov
inc
cmp
cmovp
leave
imul
mov
ds
xchg
scas
cmc
clc
in
xchg
pop
jp
push
mov
cmpb
push
cmp
jl
adc
gs
scas
test
cmpsb
mov
mov
nop
lds
fsts
cli
call
or
fldenv
movsb
or
inc
sub
or
xchg
outsl
push
fcoms
sub
mov
lods
hlt
dec
enter
loopne
xor
es
out
out
test
call
iret
jmp
push
jo
rcrl
fcmovu
lods
jno
inc
faddl
adc
inc
inc
jae
pop
xor
test
cmpsl
and
dec
fisubrl
iret
cmp
jae
pop
in
xor
bound
sbb
int
pop
clc
add
inc
pop
xor
xchg
sub
dec
shll
xchg
push
and
cmpsb
push
xor
adc
push
inc
cmp
lret
sub
jle
mov
sarl
or
pmaxub
ret
cld
adc
sbb
in
push
repnz
sti
and
lret
in
dec
aad
imul
fistpl
mov
aad
jg
leave
enter
lret
imul
int3
mov
lock
xchg
gs
das
pop
mov
xor
jbe
repz
stos
outsb
imul
lret
xlat
orb
call
push
mov
jnp
out
dec
mov
jecxz
arpl
xor
mov
fcomps
iret
inc
aas
ljmp
adc
and
lods
push
add
or
push
sub
inc
dec
sub
dec
xor
fstps
popa
pushf
loopne
push
push
xor
inc
xor
int3
jae
pop
js
dec
ret
inc
sbb
lcall
push
or
mov
mov
lods
scas
mul
and
fcoms
popa
cmp
sarb
cmp
push
insb
inc
adc
ret
in
dec
in
aas
jo
push
out
mov
ljmp
cwtl
hlt
fcmove
out
sub
out
mov
add
push
xor
mov
adc
cld
int3
lret
xor
cltd
and
incl
cwtl
cmpsl
dec
mov
jecxz
mov
cmpsl
cs
ret
or
xor
adcl
push
repz
cwtl
lds
mov
pop
stc
dec
jecxz
cld
rol
sbb
xlat
out
push
mov
sti
cltd
push
sbb
cwtl
rep
fwait
mov
cmc
sti
add
int
popf
loop
inc
xchg
adc
fbstp
push
shll
fsubs
shlb
cmpsl
mov
insb
jo
xor
out
sbb
cmpb
flds
mov
sti
popa
inc
pop
jae
aaa
call
aam
jmp
sub
fxch
movsl
jnp
shl
cmc
mov
clc
inc
xchg
addb
xchg
push
push
lea
lds
pop
mov
xorl
pop
push
sub
rorb
lods
xchg
xchg
popf
adc
adc
inc
xchg
dec
jmp
dec
adc
cmpsl
xchg
adc
das
and
sub
pop
pop
test
mov
push
stos
jge
call
adc
jo
insl
mov
mov
cmp
mov
cwtl
xchg
pop
inc
and
mov
and
cld
fldcw
daa
outsl
mov
imul
fyl2x
ficomps
push
test
stos
inc
push
sbb
xchg
inc
xor
pop
xor
test
movsl
xor
or
mull
cmc
xor
in
out
fadd
scas
icebp
xchg
sahf
jb
mov
clc
dec
pop
orl
test
push
xlat
adc
loop
sub
hlt
fs
lea
jo
scas
or
and
xchg
arpl
mov
shl
inc
jae
jae
mov
shlb
or
jmp
in
pop
and
rcll
scas
bound
jmp
cmp
sahf
int3
flds
dec
inc
sti
daa
mov
in
daa
fs
push
cld
repnz
fldenv
and
in
aam
push
imul
dec
in
push
lds
cmc
mov
inc
rcll
dec
fidivl
int
leave
ret
push
nop
inc
mov
std
push
loop
shrb
aad
test
push
aas
sbb
test
mov
sub
xchg
dec
mov
aaa
xor
outsl
fdivrp
ss
jp
outsb
jg
in
add
push
sub
mov
out
insl
sub
lods
scas
in
lcall
fisubl
jb
insl
jle
cmp
inc
xchg
test
call
addr16
jle
in
sub
mov
push
mov
sub
out
fimuls
mov
jnp
add
int
xchg
aam
dec
imul
jnp
jge
enter
xor
fidivrs
lret
test
jo
jns
and
fwait
loope
jle
sub
iret
imul
mov
aas
test
jae
cmp
les
cpuid
adc
xchg
inc
repz
jle
bound
je
cli
aad
jnp
adc
test
lea
andl
shll
repz
in
mov
pop
mov
push
pop
call
iret
inc
jo
pop
subl
dec
xchg
or
sbb
pop
mov
loope
rcr
mov
mov
test
push
js
stos
add
cmpsl
filds
mov
sub
test
mov
mov
std
aas
lds
leave
bound
out
sub
sbb
outsl
dec
pop
add
mov
movsl
push
inc
xor
notb
jns
jmp
mov
rcll
lret
pushf
dec
fisttpll
es
mov
mov
mov
xor
cwtl
pop
or
or
cld
lods
stc
cmpb
dec
lods
xchg
mov
mov
jnp
xor
out
clc
scas
jge
std
rcrb
sbb
mov
xor
scas
or
mov
mov
les
cmpsl
cld
mov
mov
popa
xchg
mov
xchg
stc
mov
xchg
xor
movsl
loopne
addb
adc
xchg
lret
xlat
shlb
fwait
stos
icebp
inc
adc
loop
std
inc
enter
lahf
jne
mov
dec
mov
jmp
add
mov
mov
inc
xor
mov
mov
loopne
fnstcw
mov
cmp
and
adc
repnz
scas
rcl
sbb
xchg
dec
decl
icebp
mov
jecxz
jae
cwtl
cld
sbb
sub
add
push
test
pop
call
xchg
dec
cli
and
in
cmpsl
xchg
adc
shrb
dec
sub
add
pushf
cmp
sub
popf
fmull
repnz
jne
lret
repnz
xchg
xor
pop
mov
cmpsb
outsb
adc
shl
stos
jle
jns
mov
movsb
pushf
stos
and
lcall
mov
dec
xor
inc
sti
mov
xlat
cmp
pop
push
movsl
fwait
mov
cmp
rcrl
jecxz
hlt
fistl
inc
gs
jbe
out
out
test
clc
lods
mov
adc
mov
insb
mov
inc
mov
int3
lret
stos
ljmp
xchg
outsl
pusha
repz
popf
dec
dec
inc
and
sti
jmp
fucomi
ret
pop
ss
icebp
jnp
jne
sub
movsl
aas
ja
ror
rol
lods
pusha
jnp
cld
popa
dec
iret
fidivrl
jp
int
jb
fs
lds
popa
loope
push
leave
dec
sar
jmp
cmp
lods
rolb
jl
cmpsl
sti
in
adc
mov
xchg
add
fs
push
repnz
fisttpll
inc
rol
adc
sub
pop
cmpsl
repnz
jbe
lret
add
lds
jno
clc
sar
stos
push
jbe
push
out
ja
fstpt
add
out
sbb
out
shrl
jo
daa
aam
mov
sahf
aas
aaa
dec
pop
pop
add
jg
jge
inc
jbe
mov
scas
outsb
int
subl
xchg
ss
pushf
hlt
pop
in
filds
mov
aad
and
and
xchg
lret
lret
rcrl
fcmovb
sbb
pop
inc
xchg
cmp
jg
in
sbb
add
fmull
cmp
stc
push
sub
jns
xor
inc
stos
fs
ret
nop
inc
mov
insb
sbb
loope
cmp
call
inc
pop
push
mov
cmpl
fidivrl
insl
scas
fsubrp
sbb
aas
jb
fidivs
lret
or
mov
sub
inc
adc
cs
xchg
repz
subb
hlt
inc
fnstenv
aas
xchg
cwtl
push
mov
loop
and
pop
jnp
enter
out
mov
mov
icebp
mov
ret
xchg
aaa
fmulp
pop
out
loopne
aas
xchg
js
lret
push
xcrypt-cbc
cmpsl
adc
fisubs
js
fmull
push
mov
fidivl
aaa
cli
out
popf
rclb
or
sbbb
xchg
sub
cwtl
shll
sbb
test
mov
addl
mov
dec
aad
scas
orb
pop
jnp
mov
sti
push
shr
outsl
mov
lcall
xchg
dec
pop
cmp
js
rcrl
sbb
movsb
scas
notb
cmpsl
inc
jns
push
scas
xchg
int
jp
repz
sbbl
dec
mov
mov
sub
ret
xchg
inc
mov
mov
mov
push
fwait
movsl
push
xor
add
cmp
sti
mov
mov
adc
std
mov
stos
in
adc
dec
mov
daa
xchg
popa
or
mov
js
jmp
xor
je
pushf
fs
int
adc
cmp
xor
cmpsl
mov
mov
pop
pop
xchg
mov
push
xchg
std
or
insl
dec
mov
fwait
out
iret
cwtl
mov
orl
xor
add
jmp
leave
push
scas
sbb
or
subl
cmp
pop
mov
hlt
mov
testl
push
inc
aam
into
sar
stos
mov
outsb
ja
out
mov
sarb
add
mov
cld
sbb
xchg
jmp
sbb
mov
mov
or
mov
mov
clc
cmc
mov
insl
repz
mov
mov
lcall
decl
aaa
cmp
sbb
mov
pop
adc
adc
cmpsl
shlb
icebp
mov
test
ljmp
or
sbb
sbb
pusha
out
gs
testl
incl
lret
es
rolb
jno
js
cmp
and
roll
inc
pop
fmuls
inc
add
sbb
jae
out
lods
cmp
inc
push
int
add
stos
andl
clc
out
xor
sbb
jns
fdivr
loop
dec
push
out
push
pop
xchg
repnz
push
fwait
loope
ljmp
cmc
out
sti
movsl
cmpl
or
fcomp
add
loope
scas
inc
add
pop
pop
inc
sub
mov
ljmp
pop
adc
mov
ljmp
es
outsb
arpl
fsubrl
mov
xchg
jo
stos
movsl
add
pop
pop
or
ss
pusha
or
mov
pop
shld
inc
xor
mov
mov
shlb
hlt
aad
or
fiaddl
cmp
lods
lods
pop
fdivrs
ffree
popa
mov
inc
dec
mov
lock
stc
sub
pop
rclb
mov
data16
call
sub
out
ljmp
adc
icebp
pop
add
or
repz
fdivl
aas
pop
adc
pushf
mov
dec
mov
cmp
pop
xor
lock
xor
in
jg
mov
int
push
mov
das
sbb
pop
call
enter
inc
lds
jo
nop
inc
aas
in
test
push
pshufw
pusha
test
sbb
jnp
push
xlat
or
es
or
in
outsl
sub
cmp
dec
xor
push
stos
xchg
in
adc
aad
hlt
add
scas
inc
aad
add
fwait
adc
cmpsl
scas
dec
insl
lods
loope
pop
jbe
cli
mov
lea
loopne
popf
or
nop
lret
inc
ret
push
pop
or
cmp
cmp
sbb
shl
imul
sub
lea
or
mov
sub
daa
int
and
out
xchg
push
pushf
shll
xchg
sub
cmp
filds
repz
inc
ss
jle
sbb
inc
iret
iret
mov
mov
mov
fimuls
cltd
repz
aas
add
sub
xchg
lods
movl
imul
mov
lret
xor
xor
data16
push
lods
jge
out
insb
lods
jmp
mov
sahf
dec
push
les
mov
sub
rorl
cmp
enter
int
push
lods
stc
loop
push
ret
negb
push
sub
fiaddl
mov
push
pop
fnstcw
mov
jo
aam
jne
mov
in
mov
into
repnz
xchg
pop
ss
ror
and
mov
jns
sbb
mov
arpl
outsl
sub
lret
fnsave
sbb
mov
daa
xor
cmp
dec
jge
cmp
in
mov
mov
cmc
mov
mov
dec
cmp
mov
push
or
jl
rorb
dec
in
in
cs
outsl
push
pop
mov
sub
xor
lds
sub
rcll
lods
sub
adc
pop
daa
inc
into
or
in
or
add
stos
fcompp
scas
push
pop
ljmp
icebp
movsl
iret
cs
and
mov
sub
mov
data16
jae
outsb
push
push
in
test
pop
mov
cmp
xchg
scas
mov
xchg
in
lea
mov
mov
out
cltd
sub
pop
and
push
jl
stos
pop
fidivs
jo
ret
mov
inc
out
aad
dec
and
pusha
inc
mov
hlt
outsl
mov
jp
adc
leave
stos
and
jne
lods
sbb
subl
jg
mov
fs
sub
imull
inc
xchg
mov
je
jp
or
js
cwtl
adc
repz
iret
and
xor
xchg
fwait
shr
jae
xchg
cmp
pop
cmp
stos
push
add
mov
les
add
insb
lahf
cli
stc
jg
sub
in
dec
xor
xchg
sbb
mov
out
popf
push
dec
andb
sbb
mov
das
in
lahf
andb
mov
xchg
rcl
mov
cmc
mov
dec
and
pop
nop
test
fdivrl
pop
jl
out
cmpsb
addr16
jl
scas
cmp
mov
xor
jg
inc
xorb
int
bound
lods
or
push
or
push
mov
mov
adc
mov
fldenv
mov
inc
imul
cmpsb
loopne
popf
dec
jle
test
loopne
push
inc
fsubl
xchg
xlat
cli
or
adc
push
fs
lods
dec
jne
out
cmp
cmp
cmp
cs
xor
sub
and
nop
cli
ror
jl
shll
mov
add
std
jns
movsl
and
cmp
xchg
mov
test
fldcw
fucomi
sarb
inc
adc
aaa
cmp
cwtl
cmp
call
dec
mov
sbb
insl
sub
sub
mov
gs
std
adc
in
leave
out
outsl
sarb
aaa
ss
lock
cwtl
inc
push
xor
or
mov
fadds
xlat
lret
in
out
mov
push
cli
xor
mov
mov
dec
test
fdivrl
sete
cmp
idivb
outsb
lds
mov
push
xchg
test
add
fs
in
push
imul
pop
mov
and
imul
sbb
inc
nop
inc
in
in
adc
dec
jl
xor
cltd
push
mov
lock
dec
dec
xchg
in
cmp
xor
test
imul
jne
mov
add
sub
dec
in
mov
lods
cmp
sarb
pop
pop
jle
lcall
xchg
jl
loope
aaa
jne
hlt
int
mov
mov
test
fldenv
adc
test
clc
mov
popa
pop
jg
ds
jno
push
mov
dec
leave
les
aam
pushf
inc
sti
daa
xor
sub
movsl
nop
mov
pop
std
push
das
cmp
jno
or
push
jle
fst
cmpsl
jmp
xchg
adc
imul
outsl
cmp
fmuls
xchg
les
loopne
adc
push
out
cli
sub
adc
hlt
lret
in
xor
cmpsl
lret
imul
subb
push
add
add
aam
xchg
inc
hlt
hlt
outsl
test
test
add
sub
leave
mov
inc
into
jbe
xor
inc
cmp
dec
ret
loope
or
inc
xchg
lds
push
pop
sar
rcrl
jmp
and
neg
cld
lcall
fldl
mov
imul
sub
mov
pop
insl
jno
js
cli
pop
xchg
dec
and
or
cmpl
pusha
mov
sub
mov
mov
fs
xchg
cmp
mov
mov
in
push
xor
fsubrs
lret
in
cmp
push
mov
jge
add
adc
inc
inc
out
mov
out
cmp
insl
push
adc
idivb
in
jbe
loop
mov
jecxz
inc
inc
mov
sub
stc
dec
pop
scas
sub
add
adcl
popf
mov
push
push
sub
mov
xchg
test
mov
mov
cmp
mov
fsts
lret
mov
in
mov
rcll
mov
mov
inc
daa
sbb
or
push
pop
inc
cmpsb
inc
jl
dec
subl
inc
mov
xchg
repz
adc
add
jne
add
les
jge
loop
xor
ja
pop
in
or
pushf
aam
xlat
push
faddl
xlat
cmp
add
add
int3
outsl
jg
int3
xchg
lret
lcall
lock
cli
xchg
enter
pop
mov
nop
movsl
pop
and
shrl
jae
movsb
mov
aam
lea
mov
mov
dec
jg
out
movsl
dec
jo
and
aam
push
mov
pop
lret
pop
inc
adc
aad
fistpll
inc
stos
mulb
inc
pop
shl
push
or
sbb
and
sarb
adc
shr
dec
ret
jns
jecxz
hlt
loopne
jo
and
pop
pop
arpl
mov
aaa
or
cmpsb
jp
xor
jg
sbb
sbb
adc
cs
sbb
sahf
je
ljmp
shr
inc
outsb
icebp
insb
xor
movsb
and
sahf
jne
adc
call
dec
xor
jne
push
gs
sti
mov
add
mov
test
jp
pop
push
fstpl
xor
and
daa
jb
aaa
mov
negb
xchg
jo
stc
jle
sbb
lods
pop
ja
add
inc
incb
dec
push
xor
ret
jno
sub
xchg
clc
icebp
mov
shll
daa
xchg
cmp
fdiv
jecxz
adc
sbb
mull
pop
out
or
mov
aam
icebp
pop
fisubrl
mov
push
mov
xchg
jecxz
mov
outsb
dec
cmc
js
daa
mov
mov
xorl
gs
sarl
jo
inc
mov
push
mov
lret
popa
pop
add
push
lret
cmpl
pop
jmp
jl
inc
test
mov
inc
xlat
sti
js
popf
lods
jb
dec
fdivrl
sahf
outsl
popf
and
daa
pop
call
mov
mov
iret
push
pop
push
pop
dec
int3
pop
hlt
mov
add
cmp
mov
movsl
and
fisttpl
popf
cmpsl
lods
movsb
sbb
mov
cmp
jnp
bound
xor
xor
xchg
sub
inc
aaa
xor
and
mov
test
mov
xor
cltd
je
add
pop
jl
call
cwtl
dec
push
push
sbb
sbb
fadds
mov
or
push
inc
or
sbb
js
xor
jmp
scas
or
and
jg
ds
mov
aaa
rorb
mov
jp
adc
add
cltd
rcrb
mov
push
stos
sbb
add
fs
roll
clc
fisttps
jb
jmp
testb
out
pushf
fs
outsl
lds
xchg
adc
cwtl
xor
in
or
fdivs
push
loope
jo
adcl
inc
jmp
mov
xchg
and
nop
push
aas
push
dec
lock
xor
cmp
stos
in
pop
sbb
scas
lock
sbb
out
nop
in
and
push
dec
mov
sub
ljmp
add
fs
xchg
pop
adcl
add
sub
cli
rorb
js
pop
lds
sti
push
clc
pop
int3
test
cmc
pop
xchg
cmc
push
sub
daa
test
sbb
xor
ficoms
add
lret
hlt
call
sbb
loope
add
sbb
ljmp
adc
xchg
mov
aad
aaa
enter
jo
push
jle
dec
and
inc
je
das
xor
in
cmp
add
jae
mov
mov
mov
repnz
dec
test
xor
lcall
into
push
add
outsl
sub
or
repz
int
fcomps
jns
leave
jns
push
mov
adc
cmp
lds
in
push
adc
cmp
scas
dec
jl
xor
xchg
xor
lock
in
inc
into
ljmp
repnz
aam
sti
inc
xchg
adc
mov
push
adc
sbb
inc
inc
mov
std
loopne
inc
or
and
mov
sub
sbb
sahf
hlt
sbb
adc
mov
fimull
fwait
jecxz
sbb
push
mov
add
push
add
arpl
pop
push
xchg
push
popf
jmp
inc
imul
setg
rorb
lcall
adc
test
xorb
mov
idivl
push
outsb
outsb
cmc
mov
mov
lret
test
mov
push
cmc
in
lock
lret
push
mov
push
push
sbb
xor
dec
outsl
outsl
mov
fucomip
fnsave
das
sbb
jbe
mov
out
outsb
adc
cli
mov
fstpt
movups
mov
pushf
xor
test
mov
jb
out
sbb
pop
out
loope
pop
out
call
dec
lock
arpl
push
adc
pop
pop
out
xlat
pop
mov
and
mov
or
add
adc
adc
push
test
mov
jb
push
dec
pop
sub
push
fnsave
jnp
clc
pop
lods
movsb
cld
addr16
icebp
adc
cmpsb
aam
stc
mov
mov
ret
mov
lods
repnz
idivb
inc
aad
andl
and
rorl
mov
std
inc
shr
xor
xor
outsb
out
jge
jmp
aaa
sub
aas
sarb
int3
mov
push
repz
pop
jge
in
and
fnsave
jo
sahf
xchg
sahf
lods
lret
into
lock
push
push
fbld
mov
mov
stc
or
jl
mov
adc
mov
imul
adc
sub
ficompl
dec
fstpt
mov
scas
std
mov
arpl
adc
mov
mov
inc
add
or
iret
loope
sbbb
push
add
dec
inc
push
lahf
and
xor
pop
adc
inc
fcmovb
std
pop
aas
jb
mov
rol
adc
sbb
iret
ljmp
bound
mov
xchg
setne
sub
sub
sti
xchg
clc
outsl
push
mov
ret
push
pop
movsb
pop
add
or
xchg
mov
mov
addr16
cmpsl
std
or
test
js
jle
cmp
dec
push
ds
ds
add
mov
orl
dec
add
and
mov
lahf
xchg
stos
lahf
out
cmp
aas
les
leave
scas
adc
out
dec
mov
jns
loopne
sbb
sti
sahf
dec
sbb
pop
test
in
jg
lods
xchg
test
shll
cmpl
sub
mov
xlat
dec
inc
mov
mov
ret
inc
daa
adc
or
mov
pop
or
cmpsb
push
roll
mov
push
xchg
repz
pop
xchg
adc
pop
cmp
int3
addr16
stos
and
pop
imul
in
stos
ffree
mov
dec
cld
aaa
mov
fstl
out
jns
popl
stos
das
inc
mov
rsqrtps
nop
in
and
jge
inc
cmp
gs
jp
incl
xor
in
lahf
dec
leave
cmp
adc
push
adc
dec
adc
out
ret
jb
push
mov
mov
adc
adc
repnz
cmp
cmp
xchg
mov
addr16
repz
cmpsb
cld
pushf
xchg
jae
inc
mov
push
and
push
dec
repnz
cmp
outsl
daa
jo
push
insb
and
mov
mov
add
pop
clc
fmul
add
jns
lods
jecxz
or
xlat
cmp
shll
fistpll
sbb
cmc
xchg
stos
rcrl
push
std
stos
les
aas
in
jg
jo
arpl
pop
add
jns
pop
jns
or
test
stc
xchg
lock
or
lock
loop
push
popf
daa
inc
cli
mov
mov
mov
out
push
aas
push
orb
js
add
adc
add
adc
outsb
into
xchg
cmp
sbb
dec
cmp
mov
jecxz
push
inc
fs
dec
outsb
aam
lock
stos
inc
cmpsl
lret
lahf
stc
or
dec
aam
lahf
push
mov
dec
fisttps
and
call
pop
loopne
xchg
push
stos
test
rcrl
inc
outsl
pop
fsub
xor
int3
popa
adc
gs
sub
lods
inc
rolb
aaa
dec
add
mov
sarb
xor
mov
stos
aam
js
stos
repnz
lock
pusha
in
xchg
add
sti
icebp
lea
pop
push
iret
mov
stos
out
cmpsl
inc
cmp
lock
pop
adc
jbe
or
push
adc
shlb
jl
stos
nop
fsub
xor
mov
test
push
insb
sub
sahf
shl
leave
int3
mov
sbb
mov
test
lds
inc
cmpl
decl
mov
lods
push
icebp
jmp
adc
pop
mov
out
sti
cmpsl
jbe
in
iret
jnp
push
movsb
or
cmc
dec
movsb
adc
cmc
sbbl
mov
push
xchg
pop
jle
fisubl
outsl
lcall
loope
lea
push
lds
cmpl
lods
cmpsl
iret
and
jnp
shll
out
pop
add
out
outsb
aam
cmpsb
mov
mov
dec
fiadds
sbb
mov
in
ja
jp
adcl
hlt
fwait
hlt
push
jg
scas
lahf
roll
and
or
pop
pop
sbb
inc
call
lds
out
mov
aad
test
inc
adc
outsl
inc
xchg
insb
subb
bound
pop
jns
mov
ja
add
mov
xlat
loop
push
aaa
xchg
jnp
insb
pop
subb
and
pop
or
dec
inc
fldcw
jo
jnp
push
xchg
sub
arpl
in
jo
dec
fbstp
lret
insb
jbe
outsl
cli
adc
scas
or
imul
mov
mov
or
out
ljmp
test
ljmp
cmpsl
ja
xchg
dec
sti
xor
push
jmp
xlat
enter
daa
iret
inc
jg
xchg
mov
add
loopne
mov
xor
insb
xchg
push
mov
rclb
out
and
mov
fistps
xchg
add
rclb
xchg
dec
lahf
pop
lcall
iret
je
lcall
out
test
cmp
ja
stos
scas
ds
or
xlat
xchg
clc
push
mov
daa
int
int3
push
ja
fs
std
sbb
mov
insb
sbb
scas
jecxz
mov
xlat
or
xchg
jbe
js
fdivp
pop
add
mov
addr16
inc
fdivl
mov
pop
ret
pop
mov
inc
je
lea
out
fmul
inc
insb
jmp
push
inc
jb
add
jg
int3
pop
push
movsl
cs
call
add
jg
je
push
cmp
pushf
out
dec
sub
enter
rcr
out
add
int3
fisttpl
inc
in
xchg
push
mov
iret
xchg
sub
push
add
das
xchg
icebp
adc
mov
aam
inc
scas
mov
aad
mov
push
rclb
lahf
add
popa
jne
xchg
data16
ja
fs
test
data16
fcmove
and
cmp
imul
xchg
sub
ret
jge
mov
test
imull
adc
rol
out
mov
xor
jl
or
mov
mov
test
and
dec
data16
jle
adc
and
mov
push
mov
test
or
mov
lods
pop
pop
imul
xor
xchg
sbb
paddsw
jnp
mov
pop
cld
push
xchg
das
lods
lahf
pop
sub
xchg
int3
xchg
mov
mov
sbb
movq
icebp
subb
dec
and
adc
stc
and
int
cmc
cltd
addb
jge
mov
mov
imul
pusha
pop
push
mov
xchg
push
out
adc
xchg
xchg
add
in
loopne
xchg
sub
mov
es
js
test
outsl
cld
xor
jnp
cmp
push
or
or
mov
fwait
xchg
pop
adc
push
adcl
out
and
or
test
push
cs
pop
lods
shll
adc
ss
mov
idivb
std
ret
or
jl
jne
imul
pop
sarb
cmp
dec
xor
sub
lret
or
or
int
add
jge
es
in
les
negb
test
pushf
mov
jp
jg
lret
movsb
dec
addr16
xchg
xor
repz
push
imul
mov
xchg
outsb
push
hlt
mov
mov
mov
daa
push
stos
dec
xchg
push
bound
dec
clc
ljmp
imul
dec
pminsw
xchg
lods
jne
out
adc
jne
xor
xchg
xchg
pop
jb
int
sbb
pop
cmp
in
lret
pop
cmpb
xchg
mov
add
mov
sub
out
add
loop
xor
cltd
pusha
fdivp
out
push
cmp
xchg
outsb
push
popf
inc
xor
pop
inc
out
sarb
and
les
push
outsl
or
std
iret
xor
je
cmp
and
mov
add
adc
les
xchg
lret
jmp
inc
div
mov
notb
dec
push
popf
or
mulb
out
fldl
dec
nop
jmp
in
cmp
lock
aas
rcl
mov
das
add
xchg
rorb
nop
bound
shll
xchg
jnp
loop
test
pop
test
repz
xchg
ljmp
mov
call
scas
in
icebp
out
and
xchg
xchg
jmp
cwtl
repnz
decl
pusha
fbld
jno
xor
clc
ljmp
dec
icebp
and
out
mov
jnp
pop
xor
hlt
inc
cmpsl
mov
add
stos
add
cmp
cmp
jbe
mov
pushl
dec
out
or
or
lds
aas
pusha
loopne
jne
stc
test
xchg
and
aas
sub
push
aas
mov
sub
ss
stc
push
insb
xchg
sbb
cmc
pop
add
add
inc
out
test
repz
test
dec
jmp
stos
pop
inc
adc
xchg
cwtl
mov
mov
loop
dec
add
orl
adc
push
mov
loope
dec
adc
test
jecxz
sti
repnz
stos
cwtl
mov
xor
fldt
adc
shll
lods
add
sbbb
loopne
and
mov
cmp
enter
push
lret
mov
icebp
lods
inc
clc
ret
mov
jmp
enter
test
jg
ucomiss
cmpsb
mov
jne
ret
movsb
mov
adc
mov
es
adc
push
flds
push
jo
jb
stc
pop
rcrb
mov
xchg
out
sbbl
xchg
das
fistpl
sub
push
int
repnz
fsubrl
mov
nop
push
mov
mov
jecxz
les
mov
in
adc
andb
jo
push
movsb
sbb
enter
mov
out
pop
mov
mov
call
aas
inc
push
insl
scas
add
pop
mov
and
addr16
lret
pusha
adc
nop
ficomps
mov
pop
popf
push
mov
fcomip
negb
xchg
or
fistpll
aaa
jg
jle
pop
jp
and
sub
in
repnz
push
or
dec
ficoms
bnd
js
insl
mov
mov
mov
stc
xor
inc
rclb
lahf
xchg
pop
faddp
cs
adcl
cmp
mov
loope
iret
inc
cmpb
sbb
clc
mov
add
or
pop
mov
jo
rcl
and
daa
mov
fcmove
add
sbb
in
dec
js
xchg
adc
sbb
sub
mov
mov
out
loopne,pn
addb
out
cltd
sti
jecxz
jne
mov
sbb
repz
lea
push
jno
add
xchg
repz
pusha
mov
out
cmc
fadds
test
test
add
push
adc
mov
mov
add
jmp
push
rorl
dec
scas
imul
outsl
imul
loopne
movsl
and
ja
cmc
inc
outsb
inc
add
cwtl
in
int3
jo
push
xor
xor
lret
sub
or
jne
xchg
in
cmp
andl
inc
or
and
mov
into
scas
xchg
and
xchg
pushf
in
ret
inc
cmpsl
ds
sbb
loope
dec
popa
hlt
mov
fwait
mov
inc
mov
outsb
sti
xchg
out
imul
or
fistl
out
ljmp
xchg
imul
cmc
je
addr16
add
fisubl
mov
das
mov
sti
sub
rol
add
outsl
ret
jp
xchg
cs
stos
jg
ljmp
cmc
xchg
test
jmp
cmpb
test
sarl
movups
cmp
shll
sbb
lods
repz
insl
popf
cmp
jb
aam
jo
imul
jmp
sub
add
xor
sbb
ficomps
lods
jle
cld
aad
in
addr16
outsb
arpl
in
mov
addl
stc
out
pop
mov
adc
fcmovnu
cmpsl
and
jae
int3
jl
sahf
xchg
orl
dec
pop
loopew
xchg
fistpl
pop
jl
out
mov
cwtl
xor
icebp
xor
mov
add
or
pushf
mov
push
aas
jns
push
imul
inc
nop
push
pop
je
cmp
jecxz
in
fs
jle
mov
mov
sbb
loope
add
mulb
mov
dec
fcoml
nop
roll
test
pop
mov
adc
sbb
aas
lret
stos
xchg
sbb
test
test
je
xchg
test
lea
add
sub
leave
mov
outsl
pop
xor
mov
or
inc
jb
push
lds
adc
sbb
sub
rclb
data16
adc
xor
imul
pop
xor
js
insb
pop
cmp
inc
popa
insl
test
push
and
jle
cmp
push
mov
sub
inc
rorl
in
mov
into
and
leave
pop
dec
ljmp
or
xchg
incl
fstpt
in
add
mov
pop
int3
insb
orl
dec
mov
in
popa
call
popf
nop
ficoml
sub
cmp
and
iret
pop
jae
jne
mov
in
xchg
inc
sub
mov
mov
mov
mov
pop
xchg
loope
pop
stc
lods
push
int3
mov
data16
test
insb
jg
faddl
aam
jo
jmp
mov
sbb
cmpsl
bound
mov
pushf
push
popa
sti
push
ret
xchg
and
pop
jbe
stos
js
xorb
mov
pushf
pop
dec
stos
dec
jb
aas
rcrl
fucomi
jmp
fisubrl
xchg
push
in
imulb
out
movsl
jmp
ja
mov
and
inc
hlt
fnsave
add
xchg
mov
xchg
std
ja
out
mov
mov
dec
das
push
aad
pop
mov
or
xchg
mov
jb
xchg
sub
outsl
cmp
out
mov
and
inc
scas
es
inc
or
push
jmp
stc
push
nop
pop
jae
leave
cmp
in
add
mov
push
mov
and
xor
push
test
ffree
jo,pn
jl
push
sbb
repz
cltd
mov
push
jecxz
push
sbb
dec
add
lret
int3
insl
stc
sar
out
add
xchg
push
push
mov
jmp
adc
pop
hlt
stos
sub
jge
xor
inc
cmp
jl
movsb
jns
imul
adc
jg
pop
iret
mov
adc
fldt
test
inc
dec
lahf
xor
or
test
enter
aam
mov
cmp
push
test
push
int3
xor
lcall
add
pop
cmpxchg
mov
mov
adc
and
popa
dec
scas
lea
mov
shrb
mov
xchg
or
xchg
aad
mov
adc
xor
mov
mov
hlt
rcrb
loope
xor
fcomps
cs
std
loop
xorb
and
shrb
jbe
lahf
xchg
jge
loope
icebp
pop
pushf
xchg
dec
xor
leave
out
repz
cwtl
je
cmpb
or
pop
or
xchg
sarl
mov
sub
inc
into
dec
mov
jo
cltd
fnstcw
sub
loopw
inc
inc
xor
notl
mov
cmp
nop
push
leave
mov
xchg
ret
ljmp
mov
jmp
push
aam
pop
out
mov
wrmsr
sbb
scas
rsqrtps
fisttpl
xchg
cmpb
xlat
test
aas
and
lcall
repz
add
insb
jns
sub
popa
ds
push
mov
outsl
shlb
test
mov
in
fbld
roll
sbb
rorl
ficoms
call
cmpsb
jae
push
stos
pusha
dec
adc
lds
or
imul
ret
pop
movsb
jp
xlat
mov
xchg
xchg
and
pop
decb
ljmp
stc
xor
cli
push
push
rep
add
xor
push
xor
leave
mov
mov
xchg
xchg
cmp
jle
movsl
ja
jbe
insb
dec
pop
arpl
mov
inc
pop
sbb
cli
add
adc
cmp
nop
ja
jp
pop
fisubl
sub
lods
adc
test
push
daa
arpl
pop
lds
xor
daa
xchg
push
pop
arpl
cmp
repz
clc
xor
pop
mov
test
and
lahf
inc
jg
pop
xchg
pop
jge
popf
xchg
add
xchg
call
jecxz
sbb
and
lea
insb
push
sub
enter
cmc
xlat
lret
test
das
pusha
sub
dec
mov
push
add
mov
jp
pop
lret
pop
repz
movsl
mov
dec
roll
xor
ficoms
cmp
in
inc
jo
pop
cli
push
or
fldcw
loop
into
mov
outsb
ss
sub
fnclex
scas
in
cmp
inc
stos
mov
shr
mov
arpl
pusha
sbb
dec
leave
jle
fs
pop
mov
out
inc
mov
xor
imull
jae
push
shlb
add
sahf
shld
imul
xchg
data16
push
xchg
rorl
xor
pop
cmp
aam
test
stos
push
aas
pop
mov
or
xchg
in
data16
fisttpll
add
cmpsb
push
stos
test
pop
lea
daa
xor
sbb
xorl
adc
lahf
mov
pop
cmpsl
out
jb
jl
xor
xchg
call
jbe
xchg
inc
test
bound
data16
arpl
or
inc
cs
and
mov
jae
fwait
jb
mov
mov
cmpsb
std
cmp
lcall
bound
std
mov
inc
popa
bound
dec
shrl
pop
jmp
inc
out
jno
ljmp
sarb
jbe
pushf
sbb
xchg
mov
mov
jns
es
mov
adc
pop
push
and
xchg
adc
push
cld
jnp
mov
sbb
xchg
aad
adc
movb
repz
mov
push
mov
jl
xchg
mov
push
or
pop
dec
dec
rorl
and
call
mov
pusha
out
fs
divl
add
je
xchg
mov
pop
aas
xchg
in
fst
push
mov
aam
les
xchg
scas
pop
mov
das
push
sbb
cmp
mov
bound
xor
scas
jbe
imul
cmp
inc
in
mov
loopne
mov
mov
loopne,pt
pop
mov
push
fisubrl
arpl
sub
orb
scas
cmpsl
or
xchg
mov
jp
lcall
sbb
jmp
scas
in
pop
sbb
mov
cmp
dec
push
leave
inc
dec
idivb
stc
inc
outsb
shlb
xor
pusha
push
in
std
nop
mov
lea
rolb
cltd
xlat
adc
jae
in
filds
lahf
or
lret
aaa
shrl
aas
jle
dec
sub
out
mov
mov
repz
push
sbb
int
insl
or
ret
mov
les
outsb
sub
jns
mov
xor
xchg
cmp
arpl
arpl
repz
repz
dec
mov
mov
mov
daa
les
pushf
jg
mov
pminsw
lods
rcr
pop
jbe
fwait
sbb
cltd
xor
mov
inc
cmp
xchg
pushf
nop
lcall
cmp
out
cs
cwtl
jo
lods
or
dec
ret
into
push
sti
xor
mov
fs
imul
loopne
push
testb
pop
pop
pusha
cmpsl
sarl
insb
nop
jmp
loope
jbe
loop
push
call
pop
popl
das
push
ljmp
repz
test
cmp
scas
rorb
mov
scas
into
push
lahf
decb
jge
movsl
sbbl
inc
ret
sub
test
sete
push
clc
sub
loopne
jge
cmp
hlt
js
cmc
inc
pushf
push
jo
in
xor
or
scas
fidivrl
jmp
stc
in
add
gs
mov
xlat
mov
mov
inc
push
hlt
adcl
inc
inc
loopne
mov
dec
loop
mov
inc
mov
xchg
sarb
icebp
out
inc
stos
sbb
mov
jmp
out
jmp
sub
dec
cmp
push
test
out
mov
or
jmp
ja
aad
pop
arpl
jo
enter
jb
adc
cmc
in
add
mov
mov
add
in
repz
fnsave
xorb
pusha
or
xor
push
cmp
movsl
jo
in
cmpsb
sub
ret
adc
or
or
or
xor
repz
cltd
xor
loopne
in
adc
test
push
or
iret
xchg
or
and
xchg
addr16
lahf
repz
hlt
arpl
movsb
push
and
push
addr16
cmp
les
mov
jmp
daa
in
int
mov
push
adc
fs
add
cmp
mov
add
cmc
mov
ljmp
push
adc
mov
aas
in
xchg
sbb
lcall
nop
mov
pusha
rclb
ret
sbb
int3
int
aad
cmp
fwait
stos
imul
popa
push
scas
gs
popf
mov
lds
jb
loopne
or
add
lret
mov
xor
icebp
sahf
xor
and
mov
and
or
sbb
ljmp
jle
enter
popf
xchg
xor
xchg
xor
pshufw
mov
jb
cmc
sub
pop
mov
cmp
sub
mov
lods
fldcw
inc
rclb
lock
mov
aad
loope
arpl
jecxz
jge
sub
out
mov
cwtl
lods
cli
fcoml
testl
inc
add
and
lock
popa
cmp
loop
xor
cld
dec
out
sti
cmp
mov
clc
push
adc
xchg
push
push
adc
and
mov
ja
into
sarl
mov
imulb
fsqrt
jno
cmp
sti
mov
scas
sub
jo
aad
mov
fnsave
data16
xchg
sub
push
add
cmp
pop
push
push
shlb
or
ret
cmpsb
and
mov
xor
test
lods
push
repnz
insl
insl
jl
je
aad
aas
cmpsl
imul
divb
xor
shlw
ds
ss
ret
fs
inc
mov
test
xor
sbb
clc
ret
xor
aad
lret
adc
aad
lock
pop
push
lret
test
dec
loop
leave
pop
mov
mov
pop
mov
xor
testl
dec
repnz
ret
jb
insb
push
adc
pop
inc
push
lods
imul
jne
xchg
ret
ds
add
int
sbb
sbb
jl
xor
add
and
cmp
mov
mov
scas
adc
popf
insb
adc
inc
cmp
and
sar
jecxz
aaa
scas
xor
push
rclb
jmp
mov
leave
mov
in
xchg
cli
xchg
jb
jns
stc
xor
ret
add
push
test
push
adc
dec
push
pop
push
data16
jb
aas
stos
or
int
testl
dec
adc
jmp
scas
pop
popa
nop
in
outsb
inc
push
push
adc
outsl
and
fwait
and
pop
fildl
dec
cli
cmp
and
pushf
hlt
dec
xor
out
mov
mov
cmpsb
adc
jecxz
xchg
jnp
popf
mov
test
ret
jo
js
inc
test
cmpsl
mov
xor
mov
push
or
push
test
pop
and
cwtl
jl
rclb
jb
mov
sbb
in
xchg
lods
jecxz
movsl
ds
fdivrs
ds
js
test
cmc
cmpsb
sub
sarb
pop
mov
mul
call
ds
push
pop
cmp
sub
mov
pop
inc
cmp
sahf
insl
jbe
sub
sub
pop
mov
inc
cmp
mov
out
mov
sbbb
push
jnp
push
lods
divb
jg
dec
dec
cmp
push
push
fcomi
or
push
mov
push
ja
ds
cwtl
xchg
test
cmp
push
dec
adc
sub
sbb
notl
xchg
aam
dec
aas
cmp
out
push
subl
mov
sahf
jl
fstpl
ja
ror
lds
in
jg
idivb
or
sub
xchg
xchg
insl
or
mov
aaa
mov
push
sbb
in
pop
jl
inc
push
cli
fs
daa
orl
adc
cmp
xchg
xor
out
push
dec
cmpl
lret
pop
popf
aad
jmp
jge
dec
sbb
shrl
pop
xor
add
and
cwtl
je
loop
jb
ret
loope
mov
cmovae
stc
es
pusha
lret
mov
fsubrl
mov
cmpsl
add
push
jno
inc
jle
lcall
in
sti
push
fwait
push
push
ret
lock
sub
inc
inc
mov
fucomp
rorb
pop
in
test
je
xchg
pop
ss
and
inc
sbb
cld
aad
out
dec
adc
shrb
sarl
ds
ficoms
sub
xchg
mov
bound
out
aaa
mov
add
andb
sub
sbb
sub
xor
adc
adc
repnz
outsl
or
in
inc
xchg
push
lret
cwtl
stos
mov
jle
in
push
add
filds
push
addl
cmp
stos
stos
in
lret
aas
jp
popa
stos
inc
mov
sub
and
gs
pushf
and
mov
iret
push
xor
adc
add
mov
lret
js
lcall
pop
mov
pop
adcl
outsl
push
leave
movsl
sub
mov
daa
sahf
adc
cmp
cmp
or
ja
pop
dec
cmp
mov
icebp
pop
xor
xor
faddl
push
popf
cs
push
fdivrp
cltd
dec
jne
movsb
jno
pushf
add
push
dec
pop
or
and
sahf
fildll
shll
fidivl
int
sbb
jns
push
ror
outsl
aad
out
adc
or
sub
mov
pop
popa
sbb
shrb
ret
aad
dec
fbld
sar
shlb
loop
sbbl
into
cmp
addb
pop
mov
imul
int3
mov
cld
mov
jae
mov
out
iret
int3
adc
sahf
cltd
push
inc
mov
fisttpl
add
jnp
lea
sbb
repz
addr16
shll
stc
pop
mov
imul
movsl
mov
push
std
jle
out
sub
fisubrl
shlb
inc
add
mov
in
push
ret
and
mov
xorb
jb
xor
mov
xor
jg
mov
adc
mov
mov
mov
movsl
jae
lret
call
or
cltd
mov
or
mov
jae
adc
mov
xor
rep
nop
lea
shr
cmpsl
rcrb
xor
adc
out
add
xor
sub
mov
adc
data16
sti
andl
dec
subb
push
lret
movsb
cmp
jecxz
fs
and
mov
cmovae
lcall
movsb
inc
call
xchg
pop
insl
ret
jns
sub
lret
nop
xchg
cmp
mov
mov
cmpsl
jbe
daa
lret
jae
push
subl
inc
and
or
cmpsb
and
lret
or
xchg
push
shll
mov
sbb
sti
out
pop
mov
jns
decl
jne
mov
jno
imulb
inc
arpl
cwtl
leave
cld
rcrl
jl
and
icebp
stos
shlb
mov
scas
mov
inc
mov
sub
inc
cmpb
clc
les
sbb
into
sub
ja
and
dec
inc
adc
lret
cmp
jne
aam
jecxz
mov
or
andb
pop
mov
add
enter
std
test
cmc
lcall
cmp
add
pop
dec
xchg
stc
mov
mov
pop
mov
fisubrs
ficoms
push
test
xor
push
cmp
js
or
xor
pop
and
add
xorb
daa
xchg
in
call
enter
test
addr16
cmp
xchg
sub
push
scas
push
sti
xor
mov
repz
mov
add
int3
cmp
and
push
jmp
sbb
dec
cli
test
cwtl
cmp
call
mov
pop
fs
cmp
pop
fnsave
lret
enter
std
jle
fidivrs
lahf
dec
insl
shl
sahf
and
sub
sbb
sbb
or
sub
pop
pusha
loope
xor
pop
or
mov
jb
lret
mov
adc
push
mov
aad
cmp
rol
inc
xor
cli
aas
fdivs
add
lods
mov
roll
jg
xchg
movsl
fwait
push
scas
ja
sub
js
add
and
xchg
sub
rcrb
lods
imul
adc
pop
aam
int3
mov
stos
fidivl
cmpsb
sub
xor
popa
push
mov
sahf
xchg
ljmp
subl
dec
mov
push
subb
xor
js
pop
xor
test
cmpb
popf
outsl
shlb
mov
add
fldt
ja
es
sbb
push
xor
pop
inc
sbb
loopne
xchg
jl
inc
or
into
movsl
das
rsqrtps
pop
mov
call
push
add
enter
int3
cmpsl
adc
popa
pop
stc
jle
cmpsl
sub
push
inc
dec
test
test
xor
movsb
dec
dec
ss
and
adc
xchg
test
jg
mov
fwait
or
fisubl
sbb
movb
in
insl
in
hlt
int
test
cli
xlat
inc
sbb
push
mov
push
jo
and
aam
daa
lods
aas
mov
cmc
mov
sti
xor
mov
jecxz
fdivr
lcall
or
popa
sub
mov
icebp
iret
mov
mov
and
adc
out
inc
into
pop
inc
stos
cmp
enter
out
add
je
int
ja
sahf
pushf
fdivr
test
pop
sete
enter
lcall
mov
fs
insl
add
std
outsb
es
mov
cltd
adcb
inc
aaa
shr
or
ret
cmpsb
adc
jbe
in
dec
daa
fsubrl
sub
push
mov
or
dec
jae
xchg
pop
xchg
mov
ret
dec
in
lret
xor
ljmp
sbb
cwtl
sbb
mov
push
ljmp
ja
test
xchg
sub
pop
repz
pop
push
gs
jmp
in
sti
jl
push
cmp
in
xchg
pop
mov
loope
mov
mov
push
and
int
je
cld
pusha
arpl
jmp
pusha
sub
fwait
mov
mov
mov
icebp
jl
std
pop
out
lret
or
sbb
jp
ficomps
mov
nop
add
inc
lods
sbb
sbb
push
fiadds
cld
pushf
push
lods
fldz
fsubl
cltd
pop
jmp
mov
pop
mov
push
mov
push
push
pop
xchg
mov
loope
lahf
fnstcw
dec
out
inc
lea
sbb
sub
xchg
push
jb
pushl
jle
xor
cmc
mov
rcrl
jns
stos
jle
pusha
pop
push
cwtl
add
iret
sbb
add
sub
xchg
inc
cmp
gs
mov
pop
xlat
in
mov
xchg
stc
and
jns
cmp
aas
leave
es
aas
lea
xchg
stos
mov
fucomip
test
dec
imul
orb
or
sahf
dec
ret
or
in
sub
adc
in
cmp
mov
cmpsb
mov
lds
dec
and
mov
mov
xchg
jbe
in
push
movsl
add
in
test
int
xchg
jp
stc
pop
ja
pop
or
loope
out
cmc
jne
shr
ret
xor
mov
out
movsb
jae
push
insb
inc
fnstsw
xchg
sbb
jle
sub
sbb
popa
ljmp
fwait
cmpsb
in
mov
inc
std
adc
into
sahf
adc
in
xor
adc
stos
push
inc
rcll
insb
sub
inc
jl
push
xor
and
pop
aas
pusha
cltd
adc
stos
cwtl
jmp
jae
addr16
je
pop
dec
xchg
pop
push
push
jl
mov
sub
push
mov
loopne
loopne
dec
jle
aam
imul
jo
sub
in
cmpsb
jmp
icebp
pop
sub
cmp
inc
or
or
sahf
lock
ljmp
bound
sbb
int3
pop
mov
or
in
out
aad
out
jbe
mov
test
sub
sti
xor
lret
testl
xchg
imul
sahf
add
inc
lea
add
rcrl
aam
dec
adc
aas
jge
pop
clc
pop
inc
das
fucomip
mov
call
aam
imul
shr
pop
cmp
and
mov
xchg
ficoml
inc
add
pop
xchg
mov
fidivrs
add
sub
mov
dec
mov
ss
ja
xchg
ljmp
cmp
sbb
pop
int
cmp
adc
add
xor
repz
negb
mov
xor
xor
jmp
hlt
xor
adc
and
or
fwait
sub
mov
stc
aam
inc
and
fstl
testl
push
ret
xchg
xor
cmp
pop
jno
xlat
lret
or
es
jmp
xlat
xchg
arpl
xchg
inc
cs
add
adc
sub
lcall
pop
jmp
daa
xlat
addr16
outsb
icebp
pop
xchg
jb
mov
imul
call
mov
mov
add
mov
jnp
sahf
test
xorl
cmp
xchg
outsl
cmp
test
xchg
and
sub
rcrl
ss
pop
fnstenv
shlb
loopne
lods
add
pop
push
das
cmpsl
enter
shrl
adcl
mov
minps
xchg
call
data16
push
jne
mov
lcall
inc
mov
daa
mov
ljmp
xchg
cld
jno
push
xchg
push
loop
or
xor
sbb
mov
stc
cld
pavgb
lret
sahf
mov
lret
jp
xchg
mov
cs
out
les
jmp
add
fwait
mov
dec
pop
aaa
fimuls
cmp
add
adc
in
inc
pop
test
and
clc
rcrl
stc
mov
adc
jecxz
pop
outsl
and
inc
into
inc
cmp
into
cmpl
jecxz
out
call
test
je
out
xchg
adc
mov
add
rcll
add
and
mov
sub
scas
xor
sub
mov
sub
imul
xchg
aas
sub
bswap
mov
scas
jo
cmpsl
adc
sahf
or
jo
xchg
popf
xchg
stc
in
xchg
cmpsb
xor
loopne
stos
lret
pop
sub
sub
pop
push
xchg
mov
cs
notl
inc
sub
xor
cmpsl
call
and
je
fiadds
inc
sti
xchg
jne
iret
mov
adc
mov
repz
xchg
add
out
lahf
test
push
cwtl
lret
push
mov
push
dec
fists
test
cmpsb
aad
data16
iret
pop
popf
mov
cmc
movsl
or
dec
call
lods
inc
xchg
and
repnz
adc
sarl
jecxz
lods
push
mov
iret
fucomp
mov
test
mov
sbb
push
popf
adc
jno
jno
and
xchg
je
incb
sbb
dec
and
mov
fbld
push
jnp
inc
andl
test
pop
mov
out
pop
mov
subb
shrl
ret
xor
pop
pusha
or
mov
aam
dec
push
dec
cmpsl
imul
jmp
popf
enter
fistpll
popa
les
mov
push
jle
or
push
mov
add
shl
lods
or
sub
jp
in
sbb
dec
inc
mov
orl
dec
es
cmpsl
scas
ja
mov
sub
shll
jns
mov
or
std
inc
cwtl
mov
aas
push
pop
aaa
imul
mov
in
leave
orl
mov
insl
mov
push
mov
cmc
stc
stc
test
imul
add
fstl
in
pop
cli
stc
fwait
jp
push
sahf
xor
jp
jp
mov
inc
repnz
xor
push
imul
adc
mov
mov
in
mov
ljmp
jno
pop
mov
andb
arpl
addl
mov
adc
mov
aaa
aaa
out
and
mov
and
push
idiv
sub
lea
pop
sub
les
in
nop
push
cmp
lods
je
mov
out
ja
ja,pn
pop
movsl
add
xor
xchg
mov
xchg
push
push
enter
shrl
cmpsb
pop
aas
cli
jmp
jl
ljmp
mov
mov
add
mov
mov
sbb
adc
lcall
ljmp
mov
stos
shll
cltd
pop
fsubrs
sbb
mov
js
push
sub
xchg
ss
out
xchg
stc
shrl
imul
enter
fisubs
or
or
mov
xor
iret
inc
in
and
into
mov
dec
fldcw
iret
aam
mov
push
pop
xor
aas
dec
jecxz
xor
scas
and
in
cli
test
sahf
push
and
rclb
or
ret
lea
inc
mov
dec
cli
and
sbb
dec
test
pop
xor
xchg
cmp
popa
std
cmp
and
outsb
test
ds
push
cmc
dec
jl
imul
fisubrl
fdivl
jp
adc
cld
aas
scas
sbb
cmpsb
or
lods
pop
sub
push
fcmovb
jecxz
or
jle
and
repz
out
rorb
faddl
sub
lock
in
in
mov
inc
scas
movsb
mov
pop
push
fsubs
xchg
or
stos
cld
xchg
loopne
mov
dec
stos
mov
jae
mov
scas
inc
fwait
jbe
and
add
inc
call
jmp
jo
xchg
push
sub
pop
xchg
clc
loope
push
ljmp
int3
stos
daa
push
xchg
fidivl
leave
ftst
test
mov
aas
rorl
popa
decb
test
jne
in
inc
xchg
sti
inc
push
dec
sbb
js
push
pop
bound
cmc
cli
cmpsl
push
lds
mov
push
mov
ret
jge
fwait
jecxz
xorl
jg
daa
test
test
pushf
xchg
sbb
xor
inc
mov
ljmp
cs
cmp
lahf
fwait
cmp
cmpl
mov
mov
lcall
test
cmp
ficompl
std
pop
stos
pop
adc
cltd
mov
dec
sti
mov
or
lcall
loop
ret
dec
cmp
sub
sbb
loopne
or
add
cltd
in
jecxz
cmp
dec
test
push
das
jne
or
mov
es
enter
in
pushf
mov
cmp
inc
bound
int3
into
inc
sbb
jno
flds
inc
mov
xchg
push
in
jbe
orl
inc
add
mov
movsl
cltd
cmpsb
pusha
mov
leave
imul
add
mov
cmp
loopne
ljmp
adc
adc
loope
aas
push
shlb
aad
inc
rcrb
jl
mov
cmc
out
jl
scas
loop
dec
scas
xchg
aaa
test
pop
cmp
mov
sbb
fs
mov
push
lock
add
pop
xchg
int3
add
or
adcb
xchg
sbb
cmp
int
arpl
jne
cmc
fiadds
add
jmp
jae
bound
jno
sbb
and
adc
push
ret
inc
addl
in
or
test
jge
xchg
sbb
xor
inc
and
jno
addr16
sbb
je
adc
add
add
sarb
lret
add
sbb
xchg
and
cmc
jl
push
mov
mov
dec
push
hlt
addb
mov
ljmp
fwait
jl
and
mov
test
bound
cmp
inc
lock
jp
int3
jge,pt
out
cmp
imul
fisttpl
fistps
xlat
sbb
pop
pusha
push
pop
inc
test
cmp
scas
inc
mov
pop
or
jecxz
in
cmpsb
add
jmp
daa
rcll
cmp
pop
ffree
mov
mov
lret
push
lcall
xchg
sbb
test
mov
xchg
mov
add
dec
sub
add
push
pop
icebp
jns
int
je
pushf
push
pop
aam
or
mov
dec
outsl
lock
cs
pop
es
addr16
inc
sub
fsubl
push
cltd
jp
adcb
mov
mov
call
lods
ds
inc
pop
adcl
dec
sub
sub
ret
stc
into
mov
add
mov
xchg
add
and
xchg
inc
adc
cmp
imul
mov
mov
mov
cmc
in
je
sub
jl
sub
inc
repz
adc
fwait
lds
in
pushf
ret
sub
nop
lds
fiadds
jb
sub
arpl
repnz
pop
ficompl
mov
mov
sbb
cmpsl
and
pop
daa
mov
inc
inc
iret
pop
ret
fistps
mov
ja
jp
push
enter
inc
inc
loopne
jmp
test
pop
and
sti
or
lahf
jl
hlt
lock
mov
pop
sub
cmp
leave
and
fwait
inc
push
roll
mov
ljmp
pop
cltd
pop
add
cld
dec
jmp
push
icebp
imul
jle
mov
ds
jl
pop
xor
test
mov
decb
xlat
adc
add
leave
ja
push
sbb
inc
std
mov
es
imul
movsl
mov
movsl
fisttps
and
sbb
pop
push
xlat
pushf
lods
scas
jns
adc
fisttpll
pop
cmp
jmp
mov
xchg
and
add
imul
aas
pop
not
cmp
scas
mov
add
or
xlat
xchg
cmpsl
mov
stos
mov
rcll
add
xor
jge
aam
bound
pop
jl
dec
pop
popf
xchg
std
adc
loop
mov
movsl
shrb
pop
shll
bswap
sahf
push
mov
push
imul
pusha
and
and
hlt
push
xor
stc
cmp
push
push
popf
cli
cmc
mov
cmp
out
adc
jle
sbbl
popa
or
shrl
jne
and
loop
push
into
sbbl
ljmp
mov
iret
test
divb
cs
test
push
icebp
dec
mov
lret
pop
adc
cld
dec
xchg
jle
pop
stos
andnps
adc
call
push
add
popa
cld
push
sub
pop
xchg
inc
adc
cmp
pop
in
dec
mov
sub
xchg
outsl
mov
jecxz
push
ja
adc
out
cmp
or
cmp
hlt
fs
jg
push
scas
pop
xor
sub
rcll
xor
xchg
fs
in
sub
inc
dec
xor
repnz
lcall
fisubl
sub
repz
push
jnp
push
je
insl
lcall
mov
loop
sub
lods
js
out
push
mov
push
movsl
and
clc
xor
xor
mov
scas
mov
cmc
dec
into
push
ljmp
ficompl
jge
es
sahf
push
pop
ret
leave
fimuls
mov
push
les
inc
push
cmc
sub
test
movb
push
inc
push
jp
jg
jae
shlb
shlb
mov
or
ficoms
ficomps
fwait
jecxz
mov
les
lret
clc
repnz
fdivl
outsb
lea
cmp
xor
inc
leave
mov
push
push
dec
imul
jnp
push
add
bound
sub
cmp
mov
and
imul
fdivrl
das
jmp
jge
mov
dec
xchg
aas
or
jne
xchg
and
and
push
mov
cmp
cmp
cmpsb
in
lcall
xchg
push
cs
ret
call
mov
dec
dec
push
mov
sub
or
fcmovne
add
addr16
mov
adc
push
dec
sub
sub
enter
daa
jge
xor
sbb
in
jg
sub
adc
sbb
dec
fs
mov
inc
js
push
adc
sbb
pop
jbe,pt
push
lret
and
dec
dec
push
or
shl
les
jl
inc
adc
aas
in
push
sub
xchg
jp
popl
mov
mov
loope
xor
fcmovu
popa
add
mov
sti
dec
pop
in
iret
fidivrs
data16
hlt
mov
pop
mov
xor
push
outsb
dec
fidivrl
mov
inc
mov
test
data16
or
cwtl
int3
arpl
xor
sbb
and
adcb
cs
cmp
push
xchg
stos
sbb
xchg
mov
inc
xor
mov
push
pop
hlt
lret
sub
mov
fsubrl
push
insl
dec
push
xor
shll
xchg
cmp
dec
sbb
adc
xor
cmc
insl
repnz
xchg
aam
call
fiaddl
cmpsl
push
xor
jmp
inc
movsb
into
jae
jb
ljmp
jno
clc
arpl
push
call
push
jle
mov
jle
or
adc
jae
jmp
in
movsl
int3
cltd
cs
cs
je
popa
push
jp
and
imul
mov
stos
mov
mov
imul
insb
pop
pop
jne
sub
cmp
fdivr
jmp
push
jae
mov
aas
jecxz
add
dec
cli
pop
pushl
int3
mov
movsl
sarl
lcall
sub
push
xor
or
pop
adc
push
push
push
cmp
adc
push
xchg
add
decl
stos
mov
push
push
sbb
push
notrack
int3
mov
cmpsb
mov
mov
jl
xor
inc
das
mov
sbb
jae
daa
lock
mov
jbe
pushf
iret
insb
jecxz
lea
adc
test
mov
mov
jnp
add
test
adc
insb
insb
shrl
rolb
adc
insl
add
xor
pop
mov
dec
jae
and
adc
testl
jl
jecxz
adc
test
push
push
mov
cwtl
sub
lods
inc
cmp
jo
cmpsb
loopne
pop
mov
gs
test
testb
testb
fidivs
lods
stc
mov
stos
shlb
orb
or
and
jns
mulb
mov
sti
call
mov
daa
gs
sub
push
mov
sub
push
jnp
cmp
sbb
rcr
xchg
push
mov
mov
imul
or
pusha
push
popf
mov
push
add
mov
cmp
icebp
sub
jae
rcrl
je
mov
pusha
xor
mov
xchg
push
jne
test
xor
cmp
adc
imul
int3
fdivrs
js
in
test
nop
jmp
push
sbb
fwait
outsl
adc
fs
mov
fnstcw
mov
inc
ja
notl
iret
mov
ret
bound
push
std
adc
fwait
mov
fsubr
mov
lret
sub
adc
or
jbe
repz
scas
inc
imul
adc
jns
out
jge
add
leave
fisubrl
fistpll
data16
test
mov
ja
dec
fdivs
mov
int
xor
cmpsb
rcrb
lods
popa
loop
inc
notl
jns
std
adc
xor
lds
jo
mov
sti
aad
push
cmp
xchg
cwtl
sbbb
jo
cld
fsubr
pop
cmp
filds
aam
js
jl
testl
fwait
xchg
in
cli
mov
cmpsl
inc
lcall
std
bound
push
mov
decl
test
lods
pop
xor
jns
mov
aas
mov
and
in
inc
rorl
popf
or
fnstsw
xor
mov
lcall
jno
mov
int
sahf
or
div
imul
inc
push
repz
add
fwait
sbb
mov
cli
lcall
pushf
fcmovnb
mov
in
mov
stos
mov
mov
mov
jns
pop
pop
inc
arpl
or
add
cs
ret
xlat
pop
pop
cwtl
fldt
inc
pop
and
or
call
or
pop
push
jge
decb
test
shrb
xchg
add
in
jp
inc
dec
mov
pop
add
mov
imul
mov
pop
addb
or
push
les
mov
mov
jbe
mov
imul
ss
sub
mov
les
mov
xchg
or
jae
roll
sbb
jno
or
test
test
push
pop
stos
dec
push
inc
loopne
or
mov
or
push
mov
add
sahf
jnp
sbb
mov
into
std
pushl
mov
clc
adc
mov
lods
jnp
cmp
cmovge
fidivrs
mov
popl
adc
mov
xchg
cld
adc
lret
sub
sbb
inc
sub
mov
cltd
inc
dec
out
cwtl
xchg
inc
push
lods
cwtl
es
in
add
loopne
jns
insl
cmp
adcb
sbb
xor
mov
mov
stos
or
mov
xchg
pushf
xchg
jb,pn
cmp
xor
insl
scas
es
mov
and
jns
mov
sub
mov
scas
jmp
outsb
cmpsl
mov
in
iret
xchg
pop
cltd
cmpb
in
cmp
aad
in
lret
push
xor
lret
sbb
push
pop
or
or
mov
cmp
push
mov
xchg
mov
adc
iret
dec
mov
insl
testl
and
pop
dec
inc
cmp
shlb
test
sbb
cmp
scas
xor
notb
pop
mov
add
mov
dec
hlt
fistps
xor
shl
inc
pop
xchg
cmp
repz
xlat
dec
fistl
or
mov
cmp
add
xlat
pop
movsb
mov
add
inc
pop
xor
scas
mov
in
ret
xchg
fdecstp
mov
sahf
mov
inc
jbe
ds
lock
fidivl
inc
cltd
repz
add
mov
inc
mov
dec
mov
sub
je
sbb
out
jbe
out
lret
adc
andb
outsb
mov
sar
dec
fsts
jno
add
fsubp
adc
in
aam
cmp
jecxz
arpl
sub
cmc
xchg
dec
adc
pop
mov
ss
and
out
dec
inc
xchg
jne
jnp
mov
fdivs
inc
rcl
sbb
mov
cmpsl
js
addr16
mov
xchg
call
loopne
sbb
cld
data16
pushf
int
repnz
test
mov
pop
icebp
sbb
dec
outsb
mov
add
xor
nop
cwtl
xchg
push
das
adc
data16
adc
in
punpcklbw
stc
stos
and
mov
rorb
pop
xor
pop
dec
xor
push
icebp
bound
jl
in
jns
out
stos
push
aad
divb
push
or
aas
sub
jge
pop
stos
in
out
test
pop
inc
inc
jp
mov
sarl
addr16
sbb
sub
or
insb
inc
lods
xor
incl
roll
mov
jmp
in
fisttpl
xchg
int
sub
dec
xor
in
mov
mov
rorb
pop
xor
fnstenv
cmp
lret
repnz
xchg
insl
lock
stos
test
jns
lcall
dec
fidivl
loopne
sbb
jae
inc
fimuls
xor
jg
bound
jns
fisubs
lcall
pop
and
mov
dec
in
shlb
fcoml
push
push
shlb
mov
inc
mov
imul
int3
mov
push
jb
add
mov
add
aam
ljmp
sbb
ret
movsb
and
dec
jp
mov
dec
inc
sub
imul
and
adc
xchg
ss
ret
insl
addr16
xchg
clc
insl
sub
sbb
in
mov
mov
push
and
mov
dec
jns
push
mov
jno
loope
stos
sbb
cmc
ja
push
cltd
xor
loopne
js
mov
outsb
jmp
mov
popa
cmp
cmp
pop
jecxz
add
std
outsb
cmpsb
mov
call
jmp
pop
jmp
xor
adc
mov
pushf
test
rcrl
push
cmp
scas
sbb
and
lods
into
mov
test
push
cmp
cmp
rcll
mov
mov
mul
imul
and
adc
int3
stos
das
xchg
sbbb
mov
mov
and
rorb
hlt
jae
add
dec
movhps
and
push
roll
sbb
mov
movsl
push
adc
cmp
dec
imul
pop
fidivs
cmp
xchg
fs
stc
jo
cmc
push
pop
outsb
dec
and
popf
sub
push
or
jp
adc
adc
pop
xor
rclb
and
pusha
ret
sbb
movsb
sahf
push
clc
test
push
xchg
test
cmpb
sub
mov
add
or
ja
mov
js
xlat
sub
cltd
cmp
test
mov
lock
xor
add
mov
fildl
mov
xor
ret
aam
hlt
les
add
lret
sbb
xor
in
mov
stos
jle
xor
mov
fidivs
scas
inc
mov
mov
dec
inc
lret
push
mov
mov
mov
out
push
pop
jno
jl
add
fcmovnbe
icebp
xor
pushf
cltd
or
in
aaa
and
inc
pop
and
test
enter
inc
and
stc
insl
sbb
ss
cmp
lods
pusha
pop
xchg
lods
arpl
pop
loopne
mov
cmpsl
adc
xlat
leave
adc
and
mov
jmp
xor
cmp
int
cmp
mov
out
je
mov
adc
push
loopne
movsl
fists
fdiv
xchg
jne
stos
mov
outsb
lahf
push
sbb
xor
ror
xchg
mov
icebp
mov
adcl
popa
out
xchg
out
push
cli
shl
xor
mov
jle
dec
xchg
xchg
dec
out
pop
push
lods
aas
ficompl
shll
fs
sub
xchg
in
inc
mov
adc
xchg
arpl
ja
mov
cwtl
idivl
adc
pop
cwtl
inc
adc
jl
roll
cld
bound
push
ficoms
pop
xor
mov
dec
xchg
ds
insl
mov
rcrl
xor
gs
sub
sub
adc
scas
lock
push
out
in
sbb
dec
xlat
dec
jno
sbb
jns
loop
lcall
fwait
mov
test
sub
fs
push
push
jl
adc
xchg
cmp
or
mov
testl
sbb
mov
js
aam
xchg
cmp
mov
popa
nop
sub
loop
enter
lahf
leave
jg
push
fisttpl
mov
mov
scas
gs
lea
dec
les
xlat
lds
dec
or
dec
and
arpl
mov
mov
imul
jg
mov
sub
push
data16
in
loope
pusha
mov
push
repnz
pop
push
pusha
cmp
sub
mov
or
popa
test
adc
mov
cs
xchg
mov
out
out
push
pop
outsb
inc
daa
xor
and
inc
pop
test
lea
xchg
push
lret
pop
loope
and
and
ret
inc
mov
mov
jmp
repz
xor
rol
daa
jle
aaa
sbb
rcrl
mov
mov
lcall
out
adcl
adc
xorb
cmp
fs
mov
bound
rcl
call
fldenv
mov
jbe
pop
movsb
outsl
push
xchg
gs
jns
and
subl
inc
andl
pop
stos
imul
dec
rep
dec
push
sub
leave
mov
rcl
fiaddl
mov
dec
adc
into
dec
mov
lret
mov
adc
cli
fs
or
pop
inc
popf
sub
aad
push
sbb
je
call
rcrb
and
mov
inc
jae
lret
lods
mov
jae
daa
in
adcl
jl
js
or
shlb
and
lods
rolb
mov
cmp
push
in
mov
xor
scas
mov
and
push
movsl
ss
push
jb
push
fidivl
dec
hlt
push
testl
roll
jecxz
test
xor
push
aas
sahf
xchg
ret
pushfw
push
push
dec
xor
popa
test
enter
pop
push
cmp
cmpsl
shll
pop
pop
add
mov
jnp
inc
adc
fbstp
je
jle
inc
gs
out
inc
repnz
push
mov
xchg
jecxz
sbb
stos
lret
das
pop
lods
pop
test
jae
loop
scas
mov
std
jmp
push
mov
aaa
fsubrl
sarb
rclb
inc
ds
xchg
add
mov
lcall
sbb
daa
mov
xor
pop
daa
pop
sub
loopne
rorb
sahf
repz
cwtl
outsb
call
jle
popa
dec
xor
or
das
fistpll
mov
jbe
shll
in
push
ficompl
cmpsl
fistpl
pop
sub
jb
enter
fdivr
inc
scas
faddl
cli
and
cmp
push
inc
or
sub
fs
cs
aad
sbb
lods
fisubs
scas
or
fdivr
mov
cmp
loop
push
or
sub
mov
in
mov
fsubp
mov
sar
adc
packssdw
mov
out
jo
repz
fucom
imull
cmpl
iret
xor
popa
sbb
nop
dec
sub
sub
xor
xor
shrl
loope
xor
loope
clc
mov
shrb
aam
mov
mov
fsubs
xchg
shlb
sbb
dec
sbb
and
pushf
jg
or
dec
adc
adc
cld
lret
dec
andl
dec
pop
clc
push
jmp
jle
inc
rcrb
in
mov
shufps
add
cltd
fwait
xchg
jne
jnp
inc
jge
add
push
in
xchg
inc
pusha
icebp
stos
lret
and
repz
sbbl
pusha
or
rcr
add
psrlw
xlat
jne
pop
int3
stos
addr16
xchg
outsl
jmp
sub
shrl
cli
mov
push
dec
aad
test
push
int
adc
mov
xchg
mov
dec
push
push
add
cmp
scas
imul
decb
lret
fstpt
lcall
adc
mov
mov
in
scas
mov
fimuls
jo
movsb
inc
jns
cmp
loopne
fdiv
in
popf
fisttpl
in
sub
or
test
cmpsl
fsts
mov
in
aaa
add
mov
test
pop
mov
fimuls
xor
outsl
xchg
adc
out
add
add
movsb
lahf
xor
xor
fsubrs
les
ret
stc
jbe
or
fbstp
dec
inc
stc
cmp
mov
cs
lret
xchg
mov
add
inc
mov
sarb
loope
jle
pop
push
adc
inc
std
aaa
cmc
pop
inc
fdivr
cli
dec
push
out
mov
iret
stc
dec
lods
scas
jb
xor
mov
and
aad
mov
ret
and
push
mov
sbb
and
shrb
testl
xchg
inc
addb
push
xchg
inc
sbb
inc
das
inc
cs
es
dec
ror
cmp
popl
inc
nop
adc
fs
pop
fwait
pop
enter
pop
ljmp
add
mov
push
shll
add
and
xchg
inc
mov
test
push
jg
pop
aas
inc
jle
and
pop
bnd
cmc
stos
imul
data16
mov
movsl
and
mov
dec
outsl
leave
dec
clc
fwait
icebp
pushf
dec
jno
shl
out
int3
fiadds
pusha
pop
ss
inc
cwtl
mov
push
cmpsl
outsb
dec
rolb
lds
test
push
xchg
xchg
imul
jle
daa
sub
xchg
mov
sbb
aad
pop
daa
cmp
sbb
pop
xlat
mov
rorl
sbb
sbb
adc
ja,pn
mov
pop
xlat
fildl
mov
ljmp
mov
sbb
clc
popf
xor
arpl
jbe
sub
xor
int
in
jp
sub
clc
or
mov
adc
and
pop
fndisi(8087
mov
push
pop
fsubrs
sti
fcmovbe
jg
push
xor
movd
lret
fdivs
mov
mov
pop
jecxz
mov
ret
test
dec
jnp
dec
push
shl
lock
push
xor
pop
outsb
popf
dec
xchg
mov
jg
loop
iret
pop
loope
mov
dec
cmp
lods
pop
scas
add
xchg
fcmovnu
jbe
lea
rcll
lcall
loopne
je
scas
push
pop
jl
hlt
inc
adc
jge
mov
mov
pop
jmp
popf
sub
aaa
pop
dec
int
pop
ja
sbb
test
cmp
and
cmp
rorw
mov
cs
pushf
cltd
lock
xchg
cld
pop
mov
sbb
xor
mov
mov
fcomps
dec
push
jne
inc
mov
pusha
and
cld
addr16
jg
in
pop
imul
cmp
adc
sti
push
std
xor
out
scas
mov
nop
jnp
xor
and
jo
fildl
dec
ds
dec
icebp
in
bnd
int
call
fadds
inc
icebp
lcall
cmpl
loopne
xchg
adc
mov
push
imul
das
xor
frndint
mov
cmp
mov
add
popf
iret
jns
fcmovu
call
loop
roll
dec
add
push
jge
insl
imul
sub
rclb
mul
fistpll
pop
mov
dec
fldenv
push
xchg
stc
imul
lock
or
cmpsb
jg
out
mov
lahf
inc
lods
cmp
mov
jmp
test
push
dec
sub
sbbl
cmc
sub
mov
daa
mov
lret
inc
fnsave
int
mov
or
pusha
lods
test
cmp
jle
inc
icebp
repz
shlb
in
shl
lea
leave
sub
rcrl
add
int3
fwait
in
add
or
inc
mov
xchg
pop
stos
shll
les
push
int
inc
cmp
popl
dec
and
inc
insl
in
sub
stc
pusha
fwait
ror
and
inc
loopne
mov
push
xchg
int3
dec
enter
stc
xor
mov
or
sbb
subl
in
scas
mov
sub
or
xchg
cmp
and
add
push
lret
mov
test
int
ret
jmp
repnz
lock
ja
mov
jnp
cmp
out
mov
data16
xor
inc
lret
push
mov
outsl
pop
bound
popa
cmp
lods
sbb
mov
add
lea
shrb
mov
imul
out
push
push
in
xchg
mov
jl
mov
rorl
push
gs
scas
push
add
cmp
sbb
ds
je
dec
mov
cltd
mov
and
adc
xor
mov
hlt
ret
bound
ficomps
pop
cmp
das
in
xchg
inc
mov
pop
pop
and
xchg
mov
xor
sub
sti
nop
cmp
imull
xor
imul
dec
sub
or
aas
or
call
cwtl
lods
fists
sbb
push
rcrb
pushf
and
mov
ret
pop
mov
lcall
repz
cs
add
icebp
dec
inc
loop
iret
inc
hlt
push
repz
std
div
out
subb
jne
ds
mov
int
ror
sbb
jo
xor
push
mov
repnz
cltd
mov
mov
push
mov
mov
cmpsl
arpl
xchg
sbb
nop
fisubl
xchg
mov
in
sub
andl
test
mov
push
xchg
mov
xchg
inc
dec
dec
mov
mov
jb
movsl
orb
and
loope
dec
cli
loopne
fnstenv
pop
push
jo
lock
fcoml
xchg
pushf
push
incl
pop
jmp
xchg
and
mov
xchg
lea
dec
adc
arpl
enter
stc
push
movb
xchg
cwtl
fcmove
movsb
cmpl
mov
rcrb
cli
test
hlt
lret
pop
adc
add
loope
pushf
popa
add
sub
and
and
sbb
sahf
inc
jno
dec
bswap
insb
mov
mov
mov
andb
mov
jae
xor
loopne
inc
in
repnz
mov
adc
sti
push
pushf
add
aad
lock
sar
pop
sbb
and
ret
sahf
outsb
mov
lahf
aad
dec
test
adc
ss
sbb
dec
sahf
xchg
loope
xor
jno
xor
pop
xchg
fstl
ficomps
cmpsl
jae
sbb
mov
xorl
adcl
jno
sahf
addr16
xchg
inc
pop
movsb
or
mov
leave
pop
hlt
stc
mov
push
mov
mov
pop
sbb
cmp
outsb
sub
sbb
icebp
push
cmpsb
std
pop
aas
fnstsw
fidivl
cli
inc
repnz
inc
inc
aas
push
stos
mov
pop
jbe
pop
iret
fs
hlt
mov
fsubr
ja
cltd
push
movsl
bound
pop
xor
jmp
xor
sahf
fmuls
dec
ja
imul
push
add
xor
out
fcmovnu
into
xchg
jnp
sbb
das
or
mov
sub
loopne
mov
repnz
gs
xchg
mov
mov
push
movsl
popf
loopne
and
shl
imulb
test
xor
imul
shll
aad
sbb
fadds
inc
mov
or
adc
pushf
cmp
add
test
loope
pop
scas
imul
sbb
out
sub
imul
mov
test
fstps
int
mov
mov
jmp
cwtl
pop
pop
lods
mov
sahf
dec
adc
xor
mov
out
inc
pop
ja
fsubrl
mov
test
lret
jecxz
testb
gs
lods
leave
iret
je
inc
lret
out
jl
jge
jmp
mov
mov
shld
pop
movsl
adc
scas
mov
sub
lea
in
sbb
jno
in
pop
jge
and
mull
mov
testb
test
icebp
inc
jecxz
imul
mov
push
sahf
jg
mov
xchg
pop
xor
leave
adc
or
jns,pt
sub
xor
jno
xor
cs
jae
push
xchg
or
mov
adc
xor
mov
movsb
cld
sbb
call
scas
cmp
outsb
xor
jne
imul
xchg
mov
aam
inc
sub
mov
sarb
mov
jg
fisttpll
dec
fs
gs
loopne
mov
jae
adc
mov
mov
es
pop
inc
jo
mov
sub
or
pusha
lret
and
jae
add
add
mov
scas
aaa
bound
out
mull
int
clc
mov
insb
test
sbb
lret
imul
pusha
pop
lods
cld
inc
arpl
insb
addl
adc
xchg
test
mov
xchg
sbb
bound
and
cmp
mov
mov
mov
fidivs
sti
sti
ljmp
mov
push
and
arpl
add
andl
out
sub
in
xchg
jle
cmc
sbb
and
and
clc
or
push
rcl
dec
sbb
push
in
bound
jle
movsl
push
arpl
or
push
sub
cmp
repnz
mov
adcl
in
int3
adc
popa
nop
daa
sbb
orb
leave
aaa
cmp
add
sub
pop
mov
rol
movsb
or
push
mov
push
mov
cli
sbb
and
adc
xchg
cld
mov
dec
popf
cmpsb
sbb
pop
xchg
movsb
rcrb
sbb
jge
mov
scas
icebp
lds
out
pop
cs
pop
test
push
pop
and
jp
lcall
cmp
mov
adc
jle
mov
mov
adc
xchg
and
pop
add
mov
sti
movb
call
inc
fists
insb
push
push
xchg
dec
mov
stc
inc
nop
call
std
pop
icebp
sub
inc
jno
jecxz
jp
idivl
inc
add
cmp
mov
sub
shl
inc
dec
fs
daa
je
pop
imul
mov
xchg
mov
jno
or
jmp
push
lock
pop
lods
push
xor
roll
jp
xlat
inc
fs
jne
subl
mov
push
rcrl
push
and
scas
arpl
jno
inc
sbb
jnp
xchg
xchg
jp
cs
lock
enter
mov
mov
push
dec
in
std
into
jg
adcl
sarl
imul
adc
inc
or
pop
stc
inc
mov
mov
push
adc
dec
cwtl
cmc
rcrb
push
pushf
es
lods
sub
jnp
out
subb
pop
mov
jo
ds
jbe
div
cltd
jl
jle
arpl
out
adc
repnz
cltd
aaa
stos
cmp
or
stos
std
push
xor
insb
and
lods
ljmp
adc
xchg
add
mov
ret
pop
xor
sti
int
ret
lea
fcomi
inc
adc
push
jbe
fidivrl
push
repz
mov
xchg
std
lods
push
mov
in
pop
mov
sbb
clc
or
mov
jns
cli
sub
out
ret
fidivrs
xor
sub
xchg
jne
test
dec
gs
mov
call
test
scas
sub
adc
in
xchg
or
mov
and
gs
pop
mov
push
fsubrl
addr16
mov
mov
pop
mov
aas
jae
mov
lock
mov
iret
movsb
jo
pop
inc
mov
add
xor
out
push
ja
dec
mov
shlb
fdivr
in
cld
fincstp
push
cwtl
clc
scas
das
stc
xchg
js
clc
push
sbb
ljmp
mov
mov
mov
xor
cmp
xchg
xchg
aam
cmp
adc
inc
add
js
cmpsb
adc
sbb
add
sbb
popf
call
adc
popf
xor
add
mov
sub
jmp
sti
sbb
lahf
push
repz
inc
push
jmp
loop
add
jg
sahf
jnp
das
mov
les
push
push
cmpsl
iret
jne
mov
popa
mov
mov
dec
push
lea
mov
imul
mov
add
ljmp
push
pop
xor
mov
pop
pusha
into
xlat
adc
fld
rcl
jne
inc
push
orb
inc
mov
jge
repnz
push
mov
frstor
insb
xchg
scas
mov
sti
xor
jmp
iret
loop
das
mov
inc
fisubrs
addl
adc
mov
push
pop
mov
jmp
incb
std
xchg
push
lods
loope
pop
rcrb
movb
mov
add
mov
clc
mov
test
rcl
lret
cmp
fdivs
es
in
cmpsb
mov
xor
add
or
pop
mov
push
jbe
addr16
in
jne
pop
dec
movsl
movsl
dec
addr16
fwait
add
in
in
cmp
mov
dec
ss
add
push
outsb
mov
mov
or
jb
lods
aaa
inc
xchg
or
int
jno
pop
dec
adc
cwtl
imulb
mov
add
insb
lock
jecxz
lea
std
pushf
mov
sbb
xchg
xchg
dec
fs
inc
and
pop
lds
push
cmp
cltd
pusha
jae
negb
xchg
xor
cmp
lea
jmp
cmp
mov
and
in
outsb
or
vshufps
mov
icebp
mul
add
dec
cli
dec
and
stos
add
cmp
sbb
cwtl
pop
std
addb
mov
dec
jl
cmpsb
sub
jne
xchg
icebp
cld
or
hlt
loopne
dec
sarb
mov
xchg
sub
inc
sbb
rorb
mov
mov
dec
mov
xchg
leave
mov
xchg
cmp
and
cmpb
repnz
mov
lds
add
outsb
add
hlt
jle
add
lahf
popf
in
dec
adc
and
adc
stc
mov
cmc
jb
jg
mov
sbb
lea
fucomp
sbb
sbb
imul
cmpsl
jge
mov
cmp
pop
in
mov
jae
mov
push
sub
mov
jle
push
je
out
mov
adcl
xchg
push
jno
add
add
sbb
les
mov
pop
sbb
sbb
pop
mov
xchg
popf
xor
cs
stos
test
push
lret
xlat
mov
jnp
push
pop
sbb
mov
or
mov
lea
fcmovb
pop
sub
int
adc
jge
inc
pusha
shr
dec
dec
push
dec
cli
in
or
push
push
pop
out
stos
fcmovnb
sub
and
test
cmpsl
int
clc
jmp
clc
or
xor
out
cld
pop
je
pmullw
jecxz
pop
mov
into
inc
ljmp
pusha
mov
xchg
push
sub
scas
xchg
fidivrs
jne
sbb
pop
mov
lahf
iret
pop
pop
inc
adc
int3
jp
in
or
popf
cld
pop
aad
mov
dec
jg
xor
sub
pop
out
stos
or
dec
fdiv
ja
scas
cmpsl
jo
loopne,pn
call
mov
fwait
in
test
mov
adc
mov
mov
leave
sub
xor
iret
int3
pop
mov
push
adc
adc
xchg
clc
add
cmpsb
jecxz
cmp
and
fnstsw
sbb
push
and
sub
and
ficompl
jo
int3
push
arpl
adc
repnz
aam
xchg
xchg
enter
push
add
jge
mov
inc
es
outsb
dec
cmp
movl
mov
hlt
jnp
fistl
fwait
mov
cmp
push
push
je
cmpsb
in
xchg
insb
fwait
mov
wrmsr
jo
int3
xchg
enter
pop
loope
push
outsb
add
imul
pop
ljmp
dec
ficomps
xor
clc
cmp
mov
sub
cmp
test
pop
std
mov
pop
nop
pop
test
scas
cmp
call
rcrl
inc
sub
inc
mov
adc
xor
std
pop
lea
inc
sahf
shll
lock
iret
call
add
out
loope
cmp
xchg
ficoms
outsl
or
les
push
xor
xor
popa
add
cmp
dec
sti
arpl
pop
or
shlb
fcom
pusha
cli
sbb
js
mov
shrl
and
mov
and
push
mov
outsl
mov
pop
mov
add
xor
idivl
iret
iret
lret
aas
movsb
movsb
mov
pop
fwait
loopne
cli
push
jo
scas
int3
add
out
movsb
shlb
xor
push
mov
std
sbb
mov
ljmp
or
cld
int
js
outsb
ds
aad
or
mov
popf
popa
mov
ss
pushf
pop
aam
jle
xor
jb
jae
je
lret
outsl
in
fwait
cmc
jge
sahf
mov
jne
cmp
push
push
pop
cmpsb
jbe
dec
xchg
ja
pop
jbe
add
mov
fstps
mov
shlb
testb
in
adc
xchg
test
cs
jnp
adc
mov
pop
push
stc
icebp
sub
adc
jge
sar
enter
mov
dec
add
mov
dec
ljmp
notb
inc
lret
lcall
popf
adc
enter
or
fsubl
mov
ret
push
cltd
xor
mov
mov
mov
push
xchg
cwtl
and
sbb
xchg
push
arpl
test
push
jns
fst
lds
bound
mov
arpl
addr16
add
mov
adc
mov
sahf
or
push
mov
jae
pushf
aaa
rcrb
lock
popf
push
jo
xorb
daa
ret
ret
adc
into
adc
and
or
arpl
data16
xchg
pop
sbb
mov
das
fmuls
scas
add
leave
dec
orl
cltd
push
mov
clc
shlb
adc
aad
pushf
inc
imul
mov
pusha
jno
rcrl
rol
stos
mov
mov
outsb
jbe
imull
or
sbb
and
mov
sbb
sub
ss
insl
mov
and
jb
push
dec
in
xchg
fcmovu
sbb
jns
pusha
hlt
xchg
test
add
out
jne
mov
push
sbbb
btr
mov
ja
popf
mov
test
adc
lret
aam
fmulp
loope
scas
js
and
aam
sbb
in
leave
xor
loopne
notb
lcall
pop
pop
jl
jb
test
jnp
ret
and
loopne
es
cltd
lcall
fcmovnb
lods
lds
pop
push
scas
sub
mov
xor
sub
adc
hlt
in
das
xor
mov
in
sub
add
dec
add
adc
pop
lea
fistpl
pop
inc
and
shl
ret
outsb
push
xchg
imul
or
mov
ss
imull
fildl
rclb
push
jp,pt
out
push
stc
pushf
ret
lret
push
insl
lods
int3
ret
nop
imul
movsl
sbbb
loop
lea
cmp
and
or
sahf
dec
cmp
sub
or
dec
dec
jae
jp
leave
sbb
lret
jae
pushl
push
adc
jne
push
jne
inc
lcall
push
jno
lds
jl
pop
cmp
mov
push
dec
mov
xchg
push
xor
pop
sbb
in
jne
pop
out
fnstcw
rcr
ret
cmp
shl
loope
nop
dec
std
push
loop
movsl
mov
ret
sbb
sahf
into
loop
das
test
mov
lret
lcall
xchg
add
fnstsw
mov
pop
imul
pop
xchg
cli
xchg
lea
jl
into
inc
sahf
sbb
inc
or
out
int
pop
mov
pop
add
frstor
jge
lods
cmp
sub
arpl
data16
lock
loope
in
inc
lret
movb
xchg
inc
add
mov
enter
mov
pop
es
mov
nop
and
lret
mov
shrd
and
push
cmp
mov
cmp
jno
xorb
cs
mulb
pop
loop
inc
or
sbbb
and
or
mov
outsl
or
xchg
mov
sub
and
sbbb
push
mov
pop
aas
push
movsl
into
and
cmp
cltd
sub
sub
lods
push
fidivrs
jno
sbb
cmp
imul
dec
test
mul
les
add
and
stos
lods
fnstenv
ljmp
rcr
cwtl
push
pop
hlt
jmp
popa
or
xchg
enter
jecxz
std
fisttpl
mov
ja
sub
lret
int
jp
in
sub
scas
pavgw
jle
sbb
xor
int3
test
pop
dec
stos
and
rcll
push
ret
push
mov
into
adc
filds
aaa
push
and
scas
jbe
in
daa
mov
or
push
into
push
mov
dec
test
mov
xor
push
adc
lock
xchg
ret
stos
xor
movsb
in
inc
pop
mov
bound
mov
lea
pop
arpl
adc
mov
fwait
add
popa
sbb
les
enter
pop
inc
fdivl
adc
or
jg
fwait
lcall
ja
push
jg
outsb
mov
mov
out
xlat
xor
clc
adc
pop
movsb
pop
fcmovnbe
adc
xchg
xchg
cmp
fstps
jmp
mov
push
xchg
jnp
push
xchg
push
in
out
mov
dec
inc
fs
jbe
jmp
mov
dec
mov
xor
and
pushf
fs
pop
cmp
aam
sti
sbb
shrl
fbld
add
jg
sbb
dec
inc
adc
outsb
push
add
sahf
mov
fstps
test
cmp
lret
inc
sub
xor
jo
mov
sar
lret
pop
arpl
cmp
push
push
out
push
out
dec
sbb
push
jecxz
sub
jns
push
shrl
rorb
mov
sub
adc
or
jecxz
pop
iret
add
mov
shrl
lret
push
xchg
fistl
popf
ljmp
xchg
pop
faddl
xorl
sti
dec
mov
and
lock
jge
sbb
sbb
dec
testb
out
mov
dec
into
cwtl
sahf
out
push
pop
xchg
leave
mov
sahf
lods
imul
scas
fstl
popa
pmulhuw
sub
lock
lret
aad
in
int
add
sbb
mov
push
xchg
jns
mov
or
fstps
mov
das
sbbl
out
lds
sbb
inc
mov
pop
sti
sub
jp
je
cs
lods
in
outsb
dec
sub
jge
or
sahf
pop
mov
cltd
aas
mov
add
dec
out
dec
mov
pop
sbb
addl
add
lea
repnz
imul
mov
test
xor
lods
jl
aaa
xor
adcb
xor
sbb
and
cmpsl
inc
in
cmc
push
adc
insl
sub
divl
or
sub
dec
push
in
imul
jae
mov
sti
mov
and
out
mov
mov
call
push
enter
popf
es
inc
add
int3
in
rcl
jle
ret
adc
inc
dec
lea
pop
dec
pop
inc
cmp
dec
aam
call
daa
into
lahf
dec
mov
push
std
xor
mov
aad
mov
jno
cmpsb
inc
mov
in
dec
dec
mov
rcll
xchg
and
jns
mov
xchg
sub
mov
cmp
cmc
clc
push
dec
add
mov
popl
popa
xchg
int3
outsb
or
pop
scas
hlt
jnp
mov
jne
fcompl
fsubp
test
sub
shr
pop
xchg
xor
mov
xchg
insl
movsl
out
aad
inc
cmp
dec
fcompl
repnz
lods
mov
enter
push
repz
add
jl
out
sbb
mov
mov
lods
hlt
jmp
xchg
stc
jge
pop
sub
mov
sub
sti
and
ds
jnp
or
pop
shll
pop
pop
pushl
cli
std
in
int3
xchg
add
jno
sarl
mov
or
ficomps
xcrypt-cbc
cmpsl
adc
jne
mov
cmp
shll
gs
mov
mov
outsb
sar
pop
push
shrl
repz
lcall
jmp
jmp
or
loopne
je
push
das
sbb
and
inc
fists
iret
hlt
mov
shll
cli
jb
je
xchg
sbb
aam
stos
dec
and
test
pop
stos
cwtl
jp
adc
xor
or
dec
ds
out
xchg
adc
xor
lods
or
shrb
js
orl
dec
fstps
lahf
das
pop
xchg
sub
in
add
or
insb
aad
outsl
inc
icebp
jbe
jns
push
sub
pop
pop
loope
mov
movsb
adc
aad
push
ja
and
pop
sbb
dec
sbb
test
mov
mov
pop
adc
fwait
lcall
jo
outsl
cmpsb
sqrtps
ja
cmpsb
imul
mov
mov
movsl
cwtl
mov
hlt
sbb
pop
and
xchg
pop
js
lock
in
jl
pushf
push
adc
mov
sub
jge
int
stos
shlb
int3
repnz
mov
movsl
mov
clc
xor
repz
arpl
mov
int
pop
cmp
mov
mov
mov
jecxz
sbb
outsb
cmpl
xchg
push
xchg
ret
mov
fsubrs
cld
int
in
pop
cwtl
adc
outsb
mov
test
repnz
jg
in
push
cmpsb
pop
rolb
ljmp
sub
fsubrs
cmp
fs
iret
mov
dec
das
cld
scas
dec
test
add
rorb
out
movsl
pop
jp
stos
cwtl
xchg
jl
adc
ss
repnz
cld
stos
push
iret
subl
cmp
stos
movsb
pop
fwait
notw
mov
or
xchg
cmc
push
rcl
lock
call
in
daa
or
in
mov
popf
arpl
pop
dec
cmc
mov
jle
dec
js
sub
pop
cwtl
int
xchg
jno
dec
rorl
or
and
incl
int
mov
rorb
xchg
xor
repz
sub
test
adc
mov
mov
stos
xchg
lahf
dec
mov
push
jecxz
add
out
pop
mov
subb
inc
inc
sub
stc
scas
jp
jle
xchg
mov
cmp
stos
sahf
xchg
cmp
in
and
jl
mov
mov
cmpsl
jnp
inc
nop
jg
cmpsl
cwtl
in
shll
fisubrl
mov
or
outsl
push
testl
pop
ds
cwtl
pop
push
cmp
jns
mov
adc
mov
mov
out
push
cmp
mov
cmp
sbb
push
ja
push
es
aad
xor
out
mov
mov
cltd
fsubrl
aam
lds
cmpsl
rol
inc
pushf
mov
push
mov
aaa
xor
mov
mov
push
shll
je
out
pusha
scas
fisttpl
jmp
mov
jmp
lods
aad
pusha
cmc
call
inc
mov
das
shrl
mov
adc
push
dec
xchg
mov
cmp
clc
pop
push
xor
ds
movsl
push
popf
popl
add
insl
jl
iret
mov
push
out
pop
inc
adc
xchg
scas
in
insl
ja
push
jb
xchg
dec
push
inc
sbb
jmp
or
sbb
icebp
nop
leave
idivb
sub
adc
arpl
lahf
aaa
fdivrs
jle
mov
xor
cmp
mov
xorl
xchg
pop
xchg
lret
arpl
scas
mov
js
aaa
mov
inc
and
push
mov
jge
pop
jne
mov
aaa
daa
movsl
cwtl
lods
imul
ret
mov
sbb
adc
push
movb
mov
jmp
push
add
cmp
inc
ret
push
jo
insl
decb
xchg
clc
dec
pop
and
in
imul
dec
xor
ficompl
xor
lds
pop
sbb
xor
ljmp
jge
inc
loop
jbe
call
lods
add
loopne
fwait
mov
fistps
std
mov
push
adc
pop
gs
cmp
and
mov
fdivl
xchg
jge
xchg
sbb
ficoms
aas
imul
push
ljmp
push
stos
ror
mov
fs
iret
iret
xchg
daa
fs
idiv
fsubrs
sub
dec
movsb
scas
mov
lahf
testb
int3
faddp
stos
imul
cmpsl
mov
fs
dec
andl
outsl
in
shr
mov
push
ja
mov
cmp
jb
sbb
push
aaa
and
ljmp
mov
push
xlat
sbbl
repz
dec
or
test
dec
aas
gs
sti
sub
pop
ljmp
shr
jle
cwtl
stos
mov
pusha
pop
in
pushf
mov
cmpsl
daa
scas
fcoml
jl
or
scas
test
mov
dec
jge
lret
adc
sbb
mov
add
inc
fnsave
xchg
mov
push
test
imul
push
mov
andb
xor
lock
movsb
divb
mov
hlt
je
pop
stos
popf
mov
pop
stos
inc
pop
xchg
dec
push
mov
ljmp
int
das
xchg
into
and
jmp
test
jns
cmp
mov
jbe
or
mov
add
and
fdivl
sahf
fbstp
and
test
test
fidivrl
mov
lods
js
mov
scas
mul
addb
rolb
sbb
insb
mov
sub
call
into
mov
jb
mov
cli
pop
aas
les
cwtl
cmp
jno
outsb
and
add
les
aaa
stc
movsb
xchg
cmp
rorb
cmp
lahf
jecxz
adc
test
call
xchg
xchg
clc
xchg
mov
xor
stos
shr
xor
jge
out
push
jecxz
mov
inc
fistps
ret
adc
test
xor
cmc
xchg
ja
ret
sbb
add
in
and
fimuls
add
dec
fsubl
lret
rcrl
out
sbb
out
js
push
cs
imul
ret
mov
gs
ss
push
push
jge
mov
cmp
mov
xchg
and
divl
push
lods
and
dec
and
loope
xor
and
add
pop
jmp
lret
inc
repnz
jecxz
fistps
cmp
lahf
punpckldq
imul
cmpsb
imul
adc
ja
repz
fldenv
push
pop
push
adc
sbb
hlt
pop
lea
pop
mov
inc
and
cs
pop
outsb
add
fsubrl
stc
sub
jnp
sbb
push
ds
je
pushf
hlt
push
adc
xchg
les
mov
scas
or
outsb
jg
js
mov
test
mov
xchg
movsb
mov
push
movsb
les
cwtl
adc
or
sarl
jae
mov
cwtl
pusha
orl
mov
sbb
mov
cmpsl
xor
jae
in
lods
jo
in
push
add
cwtl
and
push
push
mov
sbb
and
pop
mov
push
push
cli
pop
frstor
lahf
repz
test
add
fistpll
sub
shlb
xchg
aad
mov
xchg
mov
dec
pop
push
std
mov
sbb
jno
sub
pusha
mov
fsubrs
mov
mov
push
std
das
pop
adc
clc
iret
lods
lret
pop
fmuls
xorl
cld
sarl
push
scas
mov
andb
fcomip
dec
stos
aaa
xor
push
sbb
and
mov
inc
insl
xchg
dec
mov
idiv
lret
scas
mov
outsl
lea
sahf
sbb
add
sub
cmp
push
insb
idivb
in
iret
movsl
sub
inc
lcall
sbb
inc
add
push
lods
ds
jnp
imul
xchg
sbb
jecxz
cmp
xor
xlat
push
xor
movsl
out
cmp
sarl
dec
push
or
mov
ret
loop
pushf
sbb
mov
add
rorb
push
out
notb
fbstp
xchg
inc
and
addl
xor
sbb
inc
dec
or
sahf
lock
test
das
inc
clts
fstpt
ficomps
jg
pop
in
adc
jp
mov
insl
mov
enter
jno
aaa
test
rcll
decl
mov
mov
std
popa
or
cmp
sub
testb
lods
and
repz
incl
test
cwtl
icebp
mov
scas
clc
pop
push
mov
xchg
nop
cmp
das
hlt
jne
and
cmp
ja
pop
jno
cwtl
xor
xor
lea
xchg
sbb
push
pop
xor
cmpb
std
arpl
aam
push
sub
mov
rolb
hlt
lock
int
cltd
mov
pop
fnstcw
lcall
mov
pop
add
mov
ljmp
mov
pop
int3
push
pop
jge
fistpl
test
dec
mov
adc
add
xor
fwait
int
mov
push
mov
mov
xchg
inc
lahf
popa
inc
inc
dec
inc
in
shl
cmp
dec
popa
cli
fistl
or
xchg
push
call
dec
repnz
ror
push
xor
pop
sbb
in
mov
xor
and
xlat
adc
stos
rcrb
lahf
iret
testb
nop
pop
cmc
stc
sub
popa
push
sub
addr16
in
mov
push
repz
bound
pop
mov
jl
mov
or
les
sub
hlt
fsubr
sub
rcrl
jns
mov
aam
sub
cmpsb
aaa
ret
cld
sub
mov
dec
xor
jo
sub
adc
dec
jo
cmp
adc
lods
mov
imul
jns
int
dec
psrlq
mov
cld
jmp
xor
psllq
stos
xchg
and
mov
push
or
insb
lods
sub
xlat
fisubs
pop
and
adc
hlt
int3
rol
out
into
stos
mov
mov
pop
mov
mov
mov
or
push
dec
lea
adc
push
clc
outsb
test
repz
jo
loope
faddl
adc
sbb
shrb
in
shrl
or
push
lcall
shl
mov
data16
movsb
mov
jns
mov
and
loope
push
mov
pop
push
mov
mov
das
pop
mov
ds
fimull
xchg
sti
xor
dec
xor
aad
addr16
rorb
daa
mov
mov
push
jne
fisttpll
cld
xchg
jmp
std
inc
mov
mov
adc
add
cld
jbe
dec
pop
pushf
rcl
mov
jmp
xor
sbb
inc
jno
test
adc
aaa
lods
shl
lds
ds
pushf
push
mov
fs
dec
pop
cmp
mov
add
sub
shl
inc
pop
lcall
icebp
dec
add
mov
lods
sub
inc
dec
repz
imul
ss
mov
int
dec
dec
jge
inc
cmpl
add
scas
pop
pop
fwait
lds
pusha
test
sbb
jae
dec
and
push
call
ret
in
or
or
mov
rolb
call
cmp
lret
gs
mov
sub
psubq
les
and
in
pop
sbb
adc
cmpsl
aaa
sub
sbb
cltd
es
add
jecxz
xor
cmpsl
jmp
mov
loopne
pop
add
xchg
jg
cvttps2pi
sub
lods
lahf
xchg
out
jne
out
pop
daa
mov
mov
and
in
jns
sbb
mov
push
dec
mov
or
mov
popf
push
jle
inc
add
push
adc
xor
ret
xchg
popf
push
xchg
sub
out
rcr
push
adc
mov
movsl
ret
lds
mov
rorl
xchg
hlt
xor
sub
rcrb
xor
push
shll
mov
xchg
lea
jp
xor
popa
xchg
pop
popa
repz
pusha
jae
mov
sub
mulb
lret
fdivrl
popf
jno
mov
sub
jns
push
mov
cmp
mov
out
iret
fwait
mov
out
or
pop
dec
mov
inc
insb
xchg
insl
aas
pop
outsl
mov
leave
pushf
xchg
lods
paddq
out
hlt
mov
mov
xchg
mov
jecxz
sub
mov
sbb
push
sbb
in
pushf
leave
imul
test
insl
fwait
ret
popl
sbb
cmp
jne
in
in
xchg
andb
dec
ror
clc
jno
adc
and
imul
mov
push
mov
loopne
es
fidivrl
lret
rorl
sub
loop
in
out
xor
rcll
test
test
mov
fisubs
sbb
andl
add
cmp
sub
pop
pop
dec
and
xchg
dec
xchg
out
cmp
sahf
stos
out
pusha
lret
push
packuswb
xor
lea
fs
rolb
ja
test
cmp
mov
mov
inc
clc
ljmp
cmp
adc
push
mov
dec
sbb
aam
mov
push
and
loopne
xchg
sub
dec
and
in
dec
mov
dec
inc
pop
xorb
jge
xor
mov
ljmp
cmpsb
or
mov
mov
inc
jno
rolb
lret
xchg
daa
imul
stos
jmp
mov
lods
dec
outsb
out
scas
test
mov
ltr
mov
adc
orb
jne
jnp
insl
repz
push
add
mov
jg
cs
inc
cltd
lods
nop
or
mov
roll
push
mov
mov
sbb
mov
sub
add
je
pop
add
pop
icebp
inc
mov
movsb
icebp
dec
jno
popf
or
repnz
enter
out
pop
cmp
dec
jo
test
aad
in
pop
loope
xor
cmp
xorl
and
aam
test
and
popa
out
add
or
dec
divb
dec
rorl
jae
inc
inc
imul
lahf
adc
ret
mov
and
xchg
mov
sbb
test
sbb
lods
test
inc
or
mov
aad
lods
jae
jo
loopne
and
mov
ficoml
das
pop
inc
adc
push
xor
xchg
cltd
loope
cmpsl
xchg
lcall
add
mov
cmp
test
sbb
bnd
popf
inc
push
sar
mov
sahf
inc
je
add
xor
jge
sbb
push
jge
test
mov
mov
test
fildll
mov
loope
int
arpl
cwtl
ficoms
test
lea
aam
and
pop
dec
or
xor
lods
push
jl
sbb
pop
fistps
dec
mov
and
mov
jecxz
push
jno
je
adc
nop
inc
jb
test
mov
push
dec
sub
adc
lods
lods
inc
movsb
popa
jne
in
das
mov
and
jl
loopne
sahf
inc
mov
xlat
shlb
pushf
jno
mov
lds
loope
and
sub
mov
push
cmp
fisttpl
mov
sub
jbe,pn
cmp
cmpb
xchg
adc
fsts
in
cmp
jl
sbb
and
xchg
fnsave
push
inc
stc
dec
xchg
mov
sbb
push
fadd
add
inc
push
loop
or
mov
int3
xor
dec
sub
int3
cmp
jle
sub
xor
inc
mov
adc
or
sbb
adc
mov
mov
push
and
jbe
int
fstpt
in
int
mov
dec
mov
aam
push
push
adcl
test
lahf
xchg
iret
fcomp
xchg
mulb
push
dec
rcrb
dec
out
mov
add
or
xchg
mov
xor
and
pushf
dec
jge
hlt
stos
repz
ss
pusha
xor
jl
pmaxsw
lcall
sbb
xchg
push
idiv
mov
in
xchg
frstor
and
xor
xor
inc
push
inc
lahf
add
sbbb
ljmp
jmp
rcrl
imul
mov
bound
cmpsb
fmul
jmp
push
ljmp
mov
divl
xchg
pop
xchg
fidivs
ret
scas
pushf
in
push
or
in
pop
and
imul
lahf
cmp
cmpsb
mov
subl
and
jb
notb
or
mov
ljmp
icebp
mov
arpl
cmp
test
test
inc
xchg
pop
cmp
dec
out
idivb
sti
ret
ljmp
push
adc
jno
scas
push
pop
inc
cmc
sub
loope
dec
pop
inc
cs
repnz
sub
fbld
jb
mov
jmp
fwait
addr16
aam
div
mov
cmp
stos
cmp
xchg
ja
ja
sbb
pushf
stos
jle
xlat
push
jp
pop
pushl
xchg
arpl
cli
mov
aas
insb
jo
adc
mov
cmp
loop
cmp
xorb
xchg
mov
jae
pop
dec
inc
insl
repnz
aas
jp
call
cld
out
loope
stos
inc
xor
sbb
cltd
jns
in
jg
inc
stos
fisttpl
fstpt
mov
add
mov
ret
mov
push
sti
iret
pop
cmpsb
aaa
cmc
fimuls
and
sub
stos
ret
leave
pusha
loopne
mov
sbb
jmp
sbb
push
cmpsl
test
sub
fists
aas
cld
inc
outsl
loop
test
andb
dec
sbb
lret
imulb
inc
in
in
mov
ror
shrb
push
cmpl
int
mov
int
mov
jne
xchg
andl
das
out
mov
mov
push
outsb
mov
cmp
sub
cmpsb
inc
push
xorl
mov
cmc
sahf
mov
out
and
xor
lock
jo
dec
fcomps
mov
aaa
mov
jg
add
testl
adc
rorb
push
jl
sti
sub
push
jg
add
ds
cmp
or
sbb
hlt
mov
aam
push
dec
sbb
or
outsb
clc
and
jo
pop
rolb
std
idiv
or
mov
push
cld
push
or
or
sbb
lcall
aas
xlat
cmp
lds
repnz
add
dec
xor
add
jmp
xchg
gs
or
mov
xor
push
andl
sar
outsl
pop
pop
sti
mov
out
icebp
push
jne
jbe
out
or
mov
lret
fwait
mov
add
dec
add
jge
neg
push
xor
adc
bound
ret
and
lea
or
xchg
push
mov
cmp
data16
aas
fbstp
addb
adc
sti
xchg
sbb
xor
subl
lock
pop
cmc
pop
xchg
or
mov
pop
and
dec
bt
xchg
push
cld
jo
add
adc
enter
pusha
test
push
stc
sahf
jle
jb
mov
in
sub
fcompl
cs
test
mov
shrd
sbb
loopne
sti
mov
lock
cs
mov
mov
adc
leave
daa
jo
pop
inc
xchg
inc
movsb
dec
ds
int
outsb
ficompl
es
sub
repz
cs
lcall
iret
rorb
mov
xor
mov
into
mov
and
test
mov
gs
dec
movsl
test
mov
rorl
add
mov
pop
rorb
add
or
cmp
pop
out
testl
mov
rcrl
stc
xchg
lock
sti
adc
xchg
stos
push
lahf
and
inc
xlat
mov
pop
or
scas
rolb
into
jge
loope
lret
xchg
cwtl
loop
aad
pop
fisttps
push
adc
mov
pop
aaa
addb
loopne
adc
ss
mov
out
dec
adc
push
mov
repnz
and
fiadds
mov
pushl
clc
out
adc
push
push
jae
aaa
insl
jmp
mov
jmp
cli
jne
inc
push
dec
adc
mov
xor
popa
adc
xchg
cmp
aaa
fimull
jne
add
push
jg
movsl
pop
addr16
out
pop
sub
mov
mov
icebp
fcoms
fisttpl
je
dec
sub
mov
or
pop
mov
adc
outsb
push
jne
ret
sahf
fidivs
lock
and
sbb
mov
cmp
sub
jb
popf
inc
nop
ds
out
dec
add
sub
mov
adcb
cmp
pop
mov
repnz
xor
lock
cs
xor
out
fs
xor
dec
cmp
xor
les
in
push
lahf
mov
inc
inc
jmp
pusha
dec
sbb
les
daa
mul
lods
outsl
mov
add
pop
outsl
sub
cmc
testb
inc
add
mov
adc
cmp
mov
mov
jbe
es
dec
push
xchg
clc
or
adc
lods
adc
cmpsb
cmpsl
or
jbe
aaa
sbb
xchg
aaa
test
cs
sub
loope
out
dec
adc
mov
dec
cs
js
js
adc
fwait
xchg
jl
add
test
push
scas
fldcw
movsl
in
push
sbb
rorb
push
ret
loopne
out
in
fadds
hlt
pop
aaa
imul
cltd
push
add
sub
aaa
cli
mov
mov
sbb
jne
pop
add
in
enter
loop
icebp
daa
or
push
cmpsb
push
shl
iret
jmp
jae
or
pop
mov
sbb
fxch
cmp
movaps
movb
pop
push
das
xchg
fdivrs
sti
int3
jmp
arpl
in
or
push
mov
xor
push
ljmp
test
out
fdivrp
xor
jecxz
sbb
sbb
movsl
nop
pop
in
xchg
inc
dec
js
xlat
and
push
call
ret
shrl
inc
pop
mov
mov
stos
add
fimuls
dec
std
lret
mov
push
loope
sbb
cmpsb
int3
dec
jne
push
xchg
dec
push
xor
mov
icebp
das
dec
testb
sbb
sahf
scas
dec
sub
dec
add
cmp
push
pushf
ret
pop
aad
or
mov
popa
lds
jge
dec
daa
and
ss
and
lcall
add
stos
xchg
mov
rcll
repnz
sub
rcr
out
mov
fs
cltd
insb
add
push
sub
jno
push
movsl
gs
mov
es
lea
ret
cmp
orl
bound
mov
and
out
sub
inc
arpl
jmp
push
ja
in
xor
mov
popa
vpunpckhbw
xchg
jne
dec
and
inc
mov
dec
fbstp
mov
inc
jmp
stos
adc
js
cld
test
dec
adc
mov
inc
fdivrl
or
stc
mov
and
push
push
cmp
cwtl
mov
in
push
adc
xchg
cmc
mov
enter
cwtl
cmp
imul
xor
xchg
pusha
lahf
hlt
ret
lods
and
test
sbb
lcall
push
xlat
or
jl
popf
push
sbb
add
cli
lret
fidivl
inc
mov
xchg
add
repz
aam
data16
xor
sub
aas
cltd
cmpsl
into
lea
cltd
stos
pop
iret
mov
add
inc
cmp
aas
cmp
or
xchg
mov
pushf
cmp
sahf
pop
stc
xchg
imul
shll
dec
pushl
jno
mov
and
addr16
xor
repnz
subb
mov
std
int3
push
xchg
aaa
cmp
or
jmp
mov
or
ret
rcl
dec
cli
lahf
inc
out
outsb
push
add
test
jmp
out
mov
pop
push
xchg
test
dec
scas
orb
ljmp
popa
mov
dec
dec
bound
xor
js
daa
push
sbb
scas
pop
adc
cmp
jae
mov
push
mov
lods
repnz
aas
cmc
jle
fdivrp
pop
in
aad
cmp
incl
stos
mov
sbb
outsl
xchg
push
or
subb
out
dec
ret
cmpsb
sbb
push
xor
mov
cmp
sbb
jmp
adcb
mov
pop
iret
filds
fwait
mov
scas
xor
xchg
std
sub
out
sbb
lock
stc
mov
jno
aas
inc
movsb
repnz
inc
mov
cmp
pop
mov
repz
in
pop
scas
outsl
cltd
mov
mov
adc
imul
adc
int
out
test
xchg
cmp
cmp
pop
mov
jo
mov
mov
and
fwait
xor
jne
insl
xchg
dec
jmp
pop
sub
mov
xor
push
add
test
mov
jecxz
mov
ljmp
jle
int
cmp
pop
repnz
pop
out
mov
ds
into
push
outsl
loopne
loop
out
jae
dec
cli
fwait
repnz
xchg
out
jo
pop
adc
sub
fs
lahf
sahf
pop
lcall
mov
fiadds
imul
pusha
fsubl
out
rcrb
pop
jno
jo
push
imul
sarl
push
bound
dec
imul
rclb
cli
cld
hlt
xchg
pop
xchg
mov
or
rcrl
adc
loope
enter
pop
add
add
out
lcall
in
repz
jp
mov
sti
mov
jae
cmp
and
data16
dec
idivb
jmp
push
subl
loopne
adc
daa
adc
es
push
or
iret
adc
sbb
movsl
lret
jmp
jmp
nop
sub
add
xor
dec
or
movsl
mov
stos
mov
mov
xchg
lods
xor
xchg
push
adc
push
push
lock
inc
andl
das
push
jmp
or
sub
sbb
loope
test
lods
sbb
nop
sub
add
mov
or
inc
enter
stos
loope
in
mov
mov
dec
and
jp,pt
inc
xchg
stos
jl
fcompl
scas
stc
rcrb
clc
andl
push
sub
push
packuswb
fcomps
lea
fnstsw
scas
bound
or
xor
pushf
pusha
shlb
rcl
fdivl
insb
adc
xchg
inc
ja
ror
or
insb
adc
test
out
out
sub
inc
jnp
push
push
adc
add
adc
mov
push
in
pop
xor
cs
push
mov
or
stos
aaa
push
add
movsl
push
subl
dec
mov
es
lock
mov
push
dec
stos
mov
xchg
push
jg
fidivs
inc
mov
cmp
ret
jmp
and
sti
shll
outsl
mov
adc
scas
filds
jp
jge
or
mov
sub
mov
or
inc
pushf
sub
inc
sub
push
repz
mov
adc
or
cmp
cmpsb
fildll
lods
iret
negl
cltd
mov
sub
popf
or
jo
jecxz
xor
loopne
imul
lahf
sbb
push
out
daa
mov
clc
pop
xchg
mov
incb
jge
or
cmc
push
mov
xor
in
cmp
pop
jmp
or
mov
dec
iret
dec
xor
mov
mov
stos
pop
mov
mov
pusha
push
xchg
mov
jmp
pusha
addl
mov
into
mov
rclb
clc
xchg
push
jb
scas
add
xchg
and
pop
and
adc
or
xor
add
hlt
dec
mov
jo
fimuls
xchg
out
scas
jae
push
add
in
insl
mov
sbb
pop
xlat
push
pop
movsb
push
sbb
ja
or
fistpl
movsl
add
xor
stos
xchg
int3
dec
jo
js
jmp
push
nop
sub
cmp
popa
and
fstps
xor
cmp
jmp
mov
stos
xchg
pop
scas
ret
popf
jns
push
cmp
push
xor
ficompl
loopne
pop
lock
and
cltd
out
gs
jo
sbb
call
add
hlt
sbb
rcrl
sahf
add
jge
out
test
jecxz
mov
addr16
sti
jnp
jae
shrl
outsb
test
hlt
dec
pop
mov
jp
cmp
dec
daa
inc
mov
fcmovu
repz
jns
iret
inc
ret
icebp
jl
in
sub
imul
in
or
adc
mov
scas
mov
pop
subl
popf
cmp
push
out
and
xor
mov
xor
adc
in
sbb
loopne
popf
mov
testl
jle
xchg
jl
xchg
rol
mov
push
scas
popa
aas
mov
sub
repnz
faddl
add
leave
stos
movsl
add
cli
or
add
dec
out
jp
push
mov
sub
and
xchg
movsl
push
imul
repz
fdiv
jge
or
inc
call
test
fildll
cmp
ljmp
push
sbb
js
outsl
scas
movsb
cmp
cwtl
sbb
inc
std
sarl
push
or
movsb
inc
cmp
add
mov
notl
cld
out
push
sarl
xor
sub
lret
dec
lods
add
mov
add
mov
adc
push
pushf
stos
out
and
jae
inc
sbb
cmp
int3
mov
sub
or
idivl
inc
into
xchg
jb
xor
nop
jae
cmpsb
jmp
lea
push
data16
js
out
out
xchg
cmc
sub
mov
inc
ds
cmpb
cli
cmp
mov
xor
icebp
mov
in
mov
cmp
aas
jecxz
inc
sub
or
outsl
mov
mov
jge
and
ret
sub
movsb
lahf
inc
in
sbb
out
inc
sub
and
in
or
out
fwait
es
sub
leave
ja
xlat
test
push
add
jne
mov
inc
lods
hlt
sbbl
fimuls
push
imul
add
int3
xchg
jmp
scas
cmp
jns
aas
stos
iret
mov
xor
cmp
subb
sahf
imul
sbb
inc
mov
push
std
inc
dec
scas
mov
cwtl
movhps
fucomi
or
push
loop
push
cmpsb
jbe
sbb
inc
push
xor
fiaddl
push
pop
imul
call
cmp
iret
mov
loopne
gs
fnstcw
jle
xchg
lahf
xor
push
lcall
fdivrs
pop
lods
dec
mov
bound
ds
jge
dec
loope
loope
out
xor
mov
xchg
subl
rcr
mov
xchg
xlat
movsl
or
int
add
pushf
ljmp
push
mov
jp
dec
mov
push
xchg
sbb
pop
sub
dec
mov
shll
jo
fcomps
pop
and
lds
adc
popa
pop
adc
lock
loope
add
das
cmp
lock
sbb
jecxz
loope
pop
mov
nop
or
rorb
dec
loopne
add
fcompl
pop
arpl
mov
and
in
mov
mov
mov
sub
inc
push
cwtl
roll
setae
hlt
jle
cmp
sahf
xchg
xchg
mov
push
imul
outsl
cmp
test
cmp
xchg
inc
mov
je
add
out
jnp
push
test
and
pop
pop
lods
enter
inc
push
push
aam
adc
xor
jecxz
mov
js
mov
cli
mov
or
cmp
in
pop
inc
and
cmpsb
cs
jge
xchg
jns
out
mov
test
jb
mov
mov
adc
rcrb
mulb
push
cmp
call
dec
icebp
dec
xchg
sbb
or
sub
mov
push
or
cmpsl
jle
add
daa
or
test
mulb
addr16
or
lds
outsb
push
dec
adc
add
cmp
xor
pop
jge
mov
jne
and
xor
mov
lock
push
xchg
push
cmp
ds
adc
ja
aad
pop
std
lret
ficompl
push
gs
and
insl
push
test
jmp
add
or
pushf
sub
mov
sbb
stos
bound
ret
clc
stos
fs
push
cmp
in
cmpsb
mov
ret
or
arpl
inc
popa
pop
repz
dec
scas
and
sbbb
jp
pop
aaa
sti
mov
xchg
pop
jnp
insb
mov
nop
out
mov
aas
notl
in
les
dec
out
std
dec
add
in
daa
or
sub
dec
cmp
pop
sbb
and
stc
add
mov
aas
and
add
xor
push
dec
in
push
mov
mov
adc
push
cltd
movsl
jns
rclb
cmpsb
insl
sub
jb
lret
dec
rorl
scas
sub
xchg
push
stos
int3
cltd
inc
pop
int3
xchg
not
in
pop
scas
adc
in
mov
sti
in
xor
inc
lods
add
loopne
or
aam
fcmovu
inc
pushf
in
cmp
in
xchg
xchg
xchg
loop
enter
icebp
xor
movsb
cmp
mov
lock
iret
sub
cmpsb
inc
shlb
shlb
sub
aad
int
and
sub
bound
mov
lea
aam
pop
lea
repnz
jle
sbb
push
cmpsb
jns
xchg
cmp
or
js
sub
mov
lods
inc
jae
scas
dec
fsub
xchg
fldl
loopne
lods
dec
lret
mov
jns
push
pop
rcl
inc
push
cmc
xorb
mov
push
dec
jo
or
and
pop
add
inc
add
ljmp
test
ret
sbb
fmul
mov
cmp
nop
fstps
inc
popf
shl
dec
ror
rcll
stos
cmp
andb
jl
add
das
jp
adc
push
cwtl
xor
lret
js
push
cmp
mov
in
leave
xchg
push
add
stos
push
outsb
lods
rorb
clc
dec
inc
push
ljmp
inc
sub
stc
je
cltd
cmpsl
or
stc
xor
imul
adc
xlat
rcr
pusha
pop
adc
mov
xchg
and
inc
inc
sti
fisttps
jo
cmp
les
ds
mov
sub
mov
stc
fldcw
jae
test
mov
roll
ljmp
loop
test
jp
inc
pop
and
aas
out
outsl
push
mov
mov
push
aam
or
adc
icebp
hlt
mov
scas
push
arpl
fnstcw
pop
mov
in
insb
clc
cwtl
in
cli
fisttpll
ror
lret
add
stc
jae
mov
clc
sahf
je
iret
dec
or
push
cmpsl
inc
fcmovb
sahf
inc
dec
sub
cmp
or
enter
in
lret
sub
mov
add
test
push
dec
inc
push
aad
scas
in
mov
dec
enter
gs
mov
shrb
lcall
inc
xchg
mov
mov
idivb
bound
xchg
loopne
push
push
cmp
pop
mov
pop
int
jl
or
xchg
add
sbb
xchg
or
xchg
clc
mov
enter
out
cli
cmp
or
mov
sti
repnz
lods
popa
cmc
jle
in
or
lret
cwtl
lea
add
cmp
jo
add
ficoml
mov
jns
sahf
iret
fstl
cmp
js
mov
push
jle
add
fwait
in
or
lods
jbe
int3
dec
mov
das
lea
dec
inc
jle
mulb
jbe
add
push
ds
mov
sub
sub
adc
jg
inc
ds
leave
push
pop
xchg
add
inc
xchg
push
cld
js
pop
lds
aam
test
inc
movsl
jl
adc
call
or
aas
add
push
xor
lret
xchg
push
push
mov
push
mov
adc
lret
pop
pop
fucom
inc
sbb
lock
dec
insb
rcrl
mov
mov
cld
jae
mov
sub
pop
jbe
sub
dec
adc
in
negb
inc
pusha
cmp
int3
pop
dec
sbb
in
mov
bnd
mov
movsb
and
dec
scas
les
aaa
nop
jge
cmp
lods
ljmp
lea
adc
mov
ret
jl
push
pop
inc
outsl
scas
sbb
hlt
adc
aad
mov
out
mov
pop
and
addr16
pop
fdiv
insl
push
addr16
jnp
add
fildl
adc
stos
mov
shll
sbb
push
loope
jb
mov
xor
inc
lods
sahf
das
fdivs
sub
and
jae
add
mov
pop
push
test
ficompl
ret
push
mov
jp
cmp
mov
inc
aam
sbb
cmp
dec
scas
push
xor
jg
int
and
inc
xchg
cwtl
and
sbb
inc
mov
insb
insl
pop
inc
adc
movsl
mov
xchg
data16
pop
sbb
lods
xor
ds
mov
cli
mov
xor
enter
cmp
cs
push
divb
pop
xor
jle
xorb
cld
mov
mov
push
sbb
xor
mov
sqrtps
inc
lret
enter
cmp
mov
or
and
ret
incl
std
into
imul
mov
xor
sarb
int
xchg
push
add
pushf
int
fdivl
imul
sahf
cld
push
pop
adc
xchg
int3
scas
arpl
jne
lods
ret
cli
sarb
cld
add
mov
loopnew
lcall
pop
inc
stc
and
clc
dec
xor
mov
fists
imul
fistpll
and
out
movsl
sub
push
fwait
dec
jl
adc
fs
jnp
cmp
jns
scas
or
and
inc
lods
out
shrl
add
mov
push
mov
or
sbb
or
in
fadd
aad
mov
loope
mov
jle
in
add
xchg
lods
sub
loope
gs
loop
jle
adc
fwait
das
xchg
pop
lahf
imul
mov
cltd
xor
daa
mov
nop
cltd
call
int3
fnstenv
mov
dec
push
sub
popf
and
pusha
mov
ret
in
mov
mov
and
mov
in
insb
inc
ja
fbld
and
sub
jo
repnz
pop
xor
insb
push
fstpl
das
pop
lret
mov
dec
ret
push
arpl
jl
pop
lcall
dec
xchg
jo
jecxz
push
pop
ss
fidivrs
mov
insl
ds
rcrl
fbld
das
add
outsb
push
aaa
scas
stos
mov
imull
mov
xor
loop
jmp
mov
iret
popa
inc
adc
inc
and
push
add
cmp
inc
movsb
lcall
lds
jae
push
popa
add
in
push
pop
jns
aaa
jmp
mov
int3
sbb
or
sbb
cwtl
xchg
or
mov
add
subb
cmpsl
push
adc
pop
inc
mov
dec
aam
inc
addl
loope
lahf
xorl
fistl
imulb
mov
stc
inc
mov
dec
pop
sbb
mov
in
icebp
mov
pop
in
mov
dec
push
mov
shl
stos
push
sub
jecxz
push
add
xchg
dec
js
jmp
ret
push
jns
out
jbe
out
hlt
mov
push
movsl
imul
cs
jnp
pop
xlat
or
push
inc
dec
sub
ja
or
popa
inc
icebp
pushf
mov
shl
cmpsb
into
xor
push
movsl
xor
mov
test
arpl
add
mov
jne
rep
pushf
jb
out
out
das
aaa
gs
cmp
inc
add
sub
js
mov
xchg
sbb
add
xor
and
bound
jbe
add
out
xchg
push
pop
dec
dec
orl
xchg
pop
insl
mov
aas
mov
jg
out
adc
andl
ficoml
ja
jnp
jns
cmpsl
jne
jae
out
xor
xorl
notl
push
les
mov
pop
sub
testl
test
sar
lret
sbb
stos
adc
mov
call
jae
insl
inc
and
lds
popf
inc
push
add
adc
out
nop
andl
cli
cld
mov
lock
std
pop
clc
ljmp
imul
dec
cmpsl
mov
ljmp
jb
insb
xchg
in
stos
sbb
cmp
fsubs
or
xchg
ja
mov
shlb
xchg
iret
add
fucomp
jmp
pop
push
xor
or
fidivs
enter
pop
xchg
dec
jno
push
jb
fmull
scas
mov
fwait
loopne
mov
push
pop
push
push
mul
test
ljmp
out
push
or
mov
repnz
and
fucomi
scas
cltd
add
jecxz
out
jnp
adc
ja
ljmp
sbb
dec
sub
shlb
push
ret
std
ret
xlat
jge
xor
xor
sub
add
add
mov
jge
outsl
lds
std
rcrb
add
repz
repz
insl
xchg
jae
jno
inc
cmc
shrl
sub
mov
adc
rcrb
lock
cs
cmp
subl
push
pop
fstpl
rcr
jle
icebp
add
mov
outsl
fsubrs
mov
cmp
pop
mov
jnp
jg
add
sbbl
pop
idiv
adc
ja
popf
fiadds
xchg
shll
and
add
sbb
fnstcw
fcom
xor
adc
in
mov
mov
push
ret
pop
imul
es
int
insl
sub
test
add
mov
aaa
mov
xchg
shlb
ret
mov
std
xor
icebp
mov
mov
xchg
js
xchg
lods
mov
rorl
mov
xchg
les
decl
cmc
mov
bound
pminub
push
shll
lods
movsb
xchg
and
sahf
sub
jno
sub
cld
push
out
sti
lea
xor
sub
adc
sub
jnp
ljmp
xchg
movb
push
enter
mov
fbstp
lsl
pop
sub
ja
hlt
sbb
sar
lahf
icebp
ds
push
cmp
add
lds
jl
dec
in
mov
push
jbe
loope
sbb
out
sti
sbb
push
shlb
in
mov
scas
sub
cmp
mov
xchg
shlb
push
loopne
rol
pop
dec
dec
or
aaa
xchg
xchg
sbb
sbb
addb
dec
mov
lcall
cs
adc
jecxz
imull
xchg
inc
sbb
jne
lgs
mov
xchg
dec
test
movsl
sbb
aam
les
pusha
cmp
idivl
cmp
test
jno
add
hlt
stc
and
bound
mov
ficompl
jno
fs
sub
sarb
jmp
adc
dec
jns
cmpsw
negb
sbb
sarb
ret
adc
jmp
jecxz
loope
inc
repnz
cmp
cmpb
jge
out
adc
jnp
aaa
jnp
les
loopne
lds
jecxz
hlt
push
adc
jecxz
pop
cltd
out
cmc
push
or
or
xor
inc
pop
stc
sahf
pop
push
sahf
roll
cmc
mov
in
push
stos
adc
push
sti
mov
pusha
or
fisttpll
lret
cmpl
pop
js
xor
xchg
outsl
popa
push
inc
test
nop
pop
or
dec
cmpb
pushf
xor
cwtl
arpl
xorb
push
add
lret
sub
leave
xchg
mov
inc
xor
adc
loop
sub
out
dec
cmp
mov
add
icebp
rorb
add
repnz
outsb
std
mov
sbb
leave
or
jb
add
mov
jp
fsubrs
and
and
imul
add
mov
mov
fcoml
das
and
mov
inc
mov
jg
mov
or
inc
dec
ljmp
cmp
sbb
imul
test
icebp
pop
fisttpl
loope
add
push
push
aam
and
sub
arpl
psllw
or
sbb
push
shll
repz
dec
inc
add
adc
inc
add
mov
push
aaa
mov
add
jmp
adc
enter
js
adcb
adc
inc
fisubs
shlb
daa
roll
sahf
int
pop
mov
enter
stc
inc
or
cmc
push
hlt
lea
test
stos
jge
insb
mov
jns
xchg
jae
cmp
das
cmc
cmp
mov
fs
repnz
xchg
fstpl
out
orl
int3
sub
in
jle
xchg
in
aad
or
ret
loopne
push
xchg
jno
iret
pop
adc
nop
sbb
xor
and
pop
sub
push
aas
dec
sarl
addr16
xor
adc
mov
xor
gs
sbb
push
aam
hlt
fidivrs
fcmovbe
mov
lea
adc
pop
mov
mov
jbe
out
ret
dec
in
xchg
fucomip
push
fistpl
adc
out
mov
mov
jecxz
loopne
in
xchg
out
pop
inc
mov
pop
fidivrs
ss
or
test
add
out
iret
or
jmp
xlat
push
pop
addb
inc
xor
add
xchg
jmp
aam
mov
pusha
repnz
adc
and
nop
mov
xor
mov
sbb
add
insl
mov
nop
clc
ret
cltd
push
mov
inc
jle
cmp
mov
xchg
rcr
cltd
cmpsl
cmp
repz
or
ja
in
dec
cmpsb
cli
xchg
repnz
mov
inc
out
fwait
iret
insl
adc
sub
lahf
sbb
pusha
in
push
add
xor
cmc
les
dec
and
and
testb
pop
les
fwait
rolb
mov
insl
adc
push
sub
sub
lock
and
lds
repz
adc
aad
xor
ja
mov
push
jmp
out
and
cmp
add
push
ljmp
insl
in
cwtl
jmp
loopne
cmc
into
sahf
stos
dec
jecxz
push
out
btr
mov
frstor
push
add
cwtl
mov
js
dec
mov
cmp
sahf
fisubrs
adc
sub
lds
imul
popa
mov
ljmp
out
scas
mov
cmp
stos
ljmp
or
fwait
fs
jb
fs
mov
mov
imul
fbld
cmp
int
test
dec
out
xchg
cmp
xor
fcmovb
test
adc
lock
cmp
into
mov
in
push
popa
xchg
xchg
cmp
subl
jnp
cmpsb
dec
into
cmp
push
das
clc
push
mov
sbb
lret
cmpsb
mov
test
mov
gs
faddp
out
jle
push
decl
test
add
jne
enter
adc
mov
push
icebp
add
lret
les
fdivrl
dec
imul
push
push
fadds
cld
cmpsb
mov
adc
sbb
push
dec
xchg
and
inc
fisubrs
pop
sub
sub
imul
scas
push
pop
sub
stc
fiaddl
push
mov
stos
fisubs
sub
outsl
stc
mov
sbb
ljmp
mov
arpl
lock
xor
pushf
mov
xchg
pop
outsb
jnp
xor
and
jge
outsl
fcoml
leave
inc
jg
adc
in
outsb
lahf
aam
sub
dec
jae
ljmp
adc
pop
push
xor
mov
cmp
insb
cmpsb
test
xlat
xchg
mov
call
cmc
es
inc
pop
xchg
mov
sti
jo
inc
jae
jg
enter
and
lods
stos
fstl
arpl
insb
cli
cmp
in
and
mov
xchg
aad
push
jp
repnz
shrb
clc
xchg
in
jns
cmc
std
xorb
lret
bound
ficomps
dec
pop
and
pop
push
mov
mov
pop
adc
insb
rol
push
rclb
xchg
push
in
js
push
push
arpl
test
imul
pop
pop
test
inc
jle
pop
lret
mov
jno
stos
idivb
or
or
mov
outsb
arpl
add
pop
push
mov
pop
xor
movsb
dec
fsub
and
mov
test
int3
insl
mov
jle
mov
hlt
pop
rol
xchg
mov
sti
decb
pop
mov
je
dec
cld
imul
int
popf
push
jge
mov
xor
jbe
hlt
les
mov
scas
cmpsb
iret
and
pop
repz
mov
mov
fisubrl
jbe
pop
addr16
sti
push
inc
pop
jmp
mul
pusha
fnstsw
push
mov
gs
neg
lods
adc
inc
stc
dec
or
fiaddl
xor
mov
pop
imul
jge
shl
jecxz
jg
mov
xchg
xlat
add
lahf
inc
lcall
xchg
lret
and
out
jns
insb
lret
cmpsl
add
inc
push
hlt
adc
adc
ds
je
in
xor
nopl
out
hlt
cmp
jle
push
mov
popa
addr16
movsl
addr16
mov
ss
scas
mov
or
add
test
inc
into
pop
rcrb
daa
out
push
nop
mov
out
and
mov
xchg
sti
pusha
rorl
dec
sbb
rol
mov
rclb
adc
and
pop
daa
popa
push
mov
sub
mov
and
and
cmc
clc
cmp
mov
ds
inc
add
jge
adc
insl
fsubrs
les
and
mov
sub
mov
jmp
sarb
daa
daa
xchg
inc
lret
xchg
inc
add
or
push
sub
ss
cmpsb
or
sbb
sbb
add
imul
call
mov
mov
and
lcall
in
sti
sub
sbb
cs
mov
mov
mov
pop
popa
mov
arpl
mov
bound
jae
test
pushf
ja
pop
dec
push
loop
push
jno
pop
xchg
jb
mov
scas
adc
aaa
adc
je
out
inc
sub
mov
cmc
in
clc
jns
mov
dec
pop
stos
clc
jle
inc
lret
mov
cmpsb
pop
add
add
jecxz
sti
mov
adc
int3
in
mov
sub
jle
push
and
mov
cmp
loope
incb
mov
inc
ret
sbb
dec
and
fsubl
rcll
out
es
imul
sub
std
and
cld
pusha
nop
lahf
inc
pop
pop
mov
or
fld1
lcall
mov
adc
ret
jno
pop
iret
or
insb
xchg
add
rcrl
mov
das
loope
fcoms
adc
sti
je
jp
imul
rcl
jno
cmpl
ja
shr
sahf
push
mov
enter
cs
mov
into
xchg
aad
push
mov
xchg
aas
movsl
sbb
mov
mov
jl
std
xor
test
xor
mov
push
sub
push
adc
call
iret
cltd
adc
cli
ss
aad
daa
imul
loopne
xor
jae
gs
sub
and
mul
sbb
mov
ret
mov
enter
pop
rcrl
mov
mov
test
jecxz
lods
scas
aad
insl
lods
dec
xchg
lcall
addr16
into
push
popa
push
jns
out
mov
repnz
sbb
notb
sbb
mov
and
stos
scas
cmp
mov
push
inc
dec
in
add
xchg
cltd
divl
mov
mov
sti
sahf
jo
stos
mov
dec
adc
adc
loope
cltd
mov
sbb
test
mov
lods
cmp
mov
aaa
ljmp
inc
adc
mov
push
sahf
outsb
scas
push
loopne
xchg
fldenv
xor
dec
imul
sahf
adc
dec
mov
das
dec
fld
and
notl
xor
daa
or
jecxz
jge
dec
stos
pop
mov
shll
xchg
xor
jo
mov
jb
xor
mov
cbtw
ret
adc
push
addr16
mov
pop
iret
pop
pop
add
inc
inc
scas
mov
repz
or
mov
les
xor
aaa
mov
out
ret
lahf
xchg
pop
jbe
inc
cmpsl
lret
in
cltd
sbb
jno
ficompl
push
jbe
lods
cmc
xorb
inc
xchg
sub
dec
mov
mov
popa
loope
pop
in
mull
lahf
cs
adc
mov
xchg
bts
mov
stc
push
lds
dec
cmp
mov
dec
mov
mov
jp
push
test
negb
inc
lds
fwait
loope
iret
stos
pop
or
es
rolb
push
icebp
add
xchg
cli
mov
out
rclb
mov
sahf
cmp
pop
popf
addb
mov
imul
mov
cmp
out
fisttps
jle
inc
fwait
test
dec
fisubrl
daa
addr16
and
inc
hlt
pop
enter
fs
xchg
fisttpll
jno
mov
imul
xchg
sarl
push
roll
adc
jp
cmpb
stos
in
push
enter
xor
mov
ja
jae
xor
sub
movsl
inc
dec
jl
pop
into
rol
xchg
fisubs
pop
ss
or
imul
sub
jle
inc
mov
fucom
adc
xor
xchg
idiv
aad
mov
lcall
aas
mov
pop
jbe
xor
add
sbb
jge
jge
mov
adc
pop
adc
dec
push
inc
push
pop
fidivrs
rorb
pop
insl
dec
nop
pop
bound
and
cmc
insl
adc
xor
dec
xchg
mov
ss
adc
sbb
adc
adc
pop
loop
jge
pop
xor
push
aaa
lock
icebp
push
push
rorb
in
in
pop
pmaddwd
ficoms
cmp
rcll
bound
or
es
adc
jg
fmuls
aam
ret
lock
jmp
out
in
sub
clc
mov
fnstenv
aas
sub
push
and
addr16
into
mov
out
pop
loopne
popa
int
pop
xor
cld
and
jno
cmp
aam
pusha
mov
inc
xor
xor
cmovs
test
xorb
into
adc
dec
mov
cmp
ss
loopne
filds
add
xor
loopne
sub
jle
sbb
call
cld
pop
cmpsb
pop
push
cmc
cmp
add
push
or
adc
pop
imul
or
push
dec
out
icebp
popl
dec
dec
mov
mov
xor
cmc
and
pop
and
sub
orb
xor
mov
sbb
mov
xor
adc
stos
loop
pop
and
sub
pop
xor
das
cmp
aas
xor
mov
pushf
lret
and
inc
lock
inc
mov
jecxz
js
mov
cmp
dec
push
ret
movsb
add
jae
mov
lods
nop
mov
aad
rcll
movsl
jb
movsb
lahf
cwtl
xchg
lahf
gs
cmpb
rcll
stos
int
mov
xor
cmp
call
ffreep
mov
gs
loopne
jp
or
jno
and
js
pusha
cmc
xchg
imul
in
xor
je
fisubs
xor
loop
mov
pop
mov
sar
ret
loope,pn
nop
adc
sub
push
jl
dec
mov
sbb
pop
movsl
pop
xchg
enter
cmpsb
movsb
arpl
jbe
push
imul
mov
sarl
adc
xor
or
aaa
mov
shl
aas
ljmp
xchg
clc
add
adc
je
iret
mov
cmpsl
incl
xor
std
aaa
push
dec
cmpl
mov
mov
jae
xor
test
mov
sub
out
rclb
in
roll
mov
sti
mov
cmp
xor
inc
mov
xchg
xchg
and
setne
inc
out
xor
push
xchg
mov
mov
icebp
add
pushf
mov
add
jne
adc
jnp
ljmp
andl
sets
push
add
lcall
adc
sub
mov
cwtl
mov
push
out
inc
cmp
mov
push
xrelease
adc
neg
inc
jge
sub
movsb
adc
adc
loope
aas
ljmp
lods
es
dec
test
aad
jns
movsl
dec
aad
pop
rol
hlt
js
call
jno
mov
mov
aam
idivb
jnp
test
or
mov
cwtl
jge
mov
loopne
adc
xchg
lcall
add
push
outsl
ficompl
adc
or
icebp
fs
ret
call
jl
mov
inc
push
xlat
add
enter
and
test
inc
aaa
stos
movsb
iret
cltd
and
arpl
mov
mov
or
call
pop
push
pop
sbb
add
and
std
mov
sbb
push
xchg
cmp
xchg
or
dec
fwait
dec
sbbb
jne
add
fisttpll
push
imul
mov
dec
pusha
and
leave
fucom
arpl
cmpsl
pop
cmp
push
mov
xor
sub
fldln2
aas
nop
in
pop
pop
enter
xchg
rcr
rcrl
popf
enter
jl
add
xchg
pop
ret
fmul
mov
mov
mov
jno
mov
pop
test
mov
pop
xchg
push
call
sub
lea
shr
mov
test
dec
xchg
mov
in
in
mov
sbb
outsb
adc
push
cmp
and
movsb
mov
mov
lds
sub
xchg
test
rorb
repz
stos
adc
jbe
int3
push
dec
jg
push
sub
rorb
dec
dec
lret
sbb
pop
out
stos
lret
mov
cmp
push
sti
cmpsl
push
sti
stos
pop
adc
es
cs
xor
ret
movsl
xchg
pusha
rcll
addr16
cmpsl
addr16
dec
popf
push
rol
xchg
cmp
aas
gs
jmp
cmpsl
std
xor
mov
inc
outsl
popa
fmull
dec
pxor
mov
daa
cmp
and
xor
js
cmp
xor
inc
andl
add
clc
cltd
push
mov
insl
ja
ss
fmuls
enter
lret
arpl
xchg
adc
jle
mov
pop
cmpsl
loopne
push
fs
leave
jb
cli
lea
push
lret
pop
repnz
mov
dec
aad
inc
movsb
xchg
call
loopne
push
fcmovnb
add
dec
dec
out
mov
dec
or
pop
mov
cmpl
and
pop
and
sub
pop
xchg
xchg
negb
imul
out
mov
incb
les
sbb
pop
sbb
aas
mov
sbbl
pop
and
pop
mov
mov
ja
push
int3
push
loop
add
mov
pop
or
int
mov
sbb
clc
jmp
enter
imul
ds
xchg
scas
cmpsl
popf
mov
mov
test
xlat
mov
adc
clc
cli
xchg
fsts
repz
and
sti
xchg
jns
mov
dec
daa
mov
dec
mov
dec
xor
mov
gs
pop
iret
imul
out
sub
aas
dec
pop
add
stos
ss
push
or
ljmp
mov
sbb
xchg
fcomps
movq
fs
lock
std
inc
cmp
ja
je
shlb
sub
daa
fwait
adc
jmp
mov
cmp
pop
cwtl
sub
or
rorb
and
xchg
and
jl
and
outsl
data16
clc
adcl
xchg
pop
popf
dec
mov
imul
lock
adc
aaa
push
dec
cltd
xor
cmp
repz
add
xchg
xor
pushf
xchg
mov
mov
ud0
jns
push
pop
aam
jp
jmp
repz
int3
cld
loope
in
xor
push
dec
imul
or
adc
jo
mov
pop
ficoms
push
int3
jb
lods
sbb
dec
repz
and
ret
xor
or
aas
dec
ljmp
and
pop
dec
cmpl
cmpb
mov
ds
adc
loope
jne
into
xor
dec
dec
pop
data16
cmpsb
and
shrl
mov
mov
jbe
push
lret
fdivp
mov
aad
pop
pop
jb
nop
repz
cli
mov
ja
inc
cmp
push
ss
or
mov
inc
lock
mov
repnz
or
ret
and
add
testl
xchg
jae
mov
adc
sub
in
pop
faddp
ficoml
dec
add
jae
out
in
stc
jnp
shl
aad
jb
mov
shr
iret
sub
enter
jle
jo
mov
insb
mov
fs
inc
pop
in
fsubrs
data16
mov
lret
fiaddl
or
jg
or
das
and
pusha
mov
sbb
xor
inc
adc
loop
push
mov
mov
lcall
pushf
gs
sub
loop
shr
mov
imul
pop
xlat
imul
nop
or
xor
sbbl
xchg
outsl
pop
pop
stos
mov
movzbl
mov
inc
mov
mov
push
jecxz
mov
xchg
pusha
sub
aaa
push
ds
or
inc
movsl
dec
shll
xlat
js
imul
fldt
ret
mov
pop
xchg
icebp
scas
dec
test
movsl
gs
ficomps
pop
push
add
pop
movsl
or
mov
inc
jo
mov
je
repz
fsubs
push
xchg
das
push
out
mov
in
cli
or
lea
ss
jns
cmp
cmp
sarb
cmp
push
sub
outsl
or
mov
sbb
sub
sbb
in
pop
rcr
mov
cmc
push
and
test
jno
and
test
jb
fimull
ret
push
pop
shll
leave
xor
xchg
sub
fdivs
aam
sbb
xchg
dec
xor
fsubrl
test
push
inc
dec
lahf
adc
rol
jmp
cltd
lds
pop
push
ficoml
icebp
cmp
addr16
cmp
js
cltd
subb
jns
in
stos
add
xadd
into
into
dec
mov
movsb
add
or
add
es
push
jge
out
rorb
ds
outsl
jb
lock
mov
vpsrad
ret
in
js,pt
cld
gs
or
fistpll
push
xor
mov
xchg
addb
cmpsl
jae
popf
xlat
xlat
jg
mov
jmp
jb
xchg
int3
test
frstor
xor
cmc
fbstp
push
or
inc
gs
test
pop
aad
push
sbb
pop
mov
jbe
mov
scas
add
mov
cmpb
fs
or
scas
iret
inc
jle
popa
shr
jne
hlt
lods
outsb
mov
inc
into
mov
mov
sub
dec
mov
and
fcmovnb
sbb
pop
arpl
sti
sbb
add
push
dec
enter
cmp
and
pop
jno
jp
jns
xor
movsb
or
popa
or
dec
pop
leave
cvttps2pi
mov
adc
xor
shr
shrb
adc
call
dec
ret
loop
nop
jle
fdiv
lock
and
movsb
in
cmp
mov
jnp
test
pushl
les
jnp
ret
push
xchg
daa
outsb
mov
imul
test
bound
fwait
inc
xor
xchg
lds
push
mov
xchg
cld
jge
and
inc
imul
and
outsb
mov
pop
lahf
jp
scas
inc
sti
xchg
ljmp
pop
pop
mov
and
sub
out
adc
inc
pop
lea
or
xlat
cltd
sub
push
les
iret
sub
mov
jmp
pop
add
push
xchg
fcmovbe
add
cltd
mov
jecxz
call
adc
ljmp
or
int3
outsl
mov
push
test
enter
scas
in
popl
dec
xchg
jl
mov
inc
stc
adc
xor
lss
push
fwait
xor
andb
stc
test
test
mov
and
sub
push
mov
in
das
cmpsb
cmp
sub
push
adc
mov
push
push
pop
jl
sub
neg
pushf
sti
or
adc
or
or
add
xchg
xor
jbe
cwtl
imul
inc
loopne
stc
mov
mov
cmpsb
arpl
adc
adc
push
je
sbb
ljmp
mov
dec
shll
add
lods
xchg
repz
movsl
sbb
das
movl
push
adc
imul
lods
dec
repz
xor
push
stos
and
fistpll
in
pop
adc
ss
imul
push
movsb
mov
outsl
xor
cmpsl
mov
pop
jge
cmpsb
xor
cmc
jo
dec
xchg
pop
adc
ficoms
jp
pop
jmp
cli
cmc
dec
outsb
loope
aam
ficoms
add
inc
xor
jbe
out
cmp
fnstcw
lret
int
sub
roll
lds
xchg
mov
leave
std
xchg
mov
add
push
cld
mov
adc
or
outsb
adc
pop
std
popa
js
mov
push
pop
fisubrs
push
jl
cmp
dec
aam
push
sbb
cmc
call
fsubr
mov
jecxz
dec
push
mov
xor
push
xor
loopne
shlb
ds
jp
and
pusha
ss
stos
js
es
and
push
imul
xor
orb
mov
jl
push
test
lds
adc
xchg
scas
ss
add
ficomps
int
mov
inc
divl
sub
ficoml
push
mov
stos
or
fists
jno
daa
mov
cwtl
sbb
xchg
dec
aas
mov
push
decl
mov
in
mov
leave
dec
shlb
sarb
jl
test
inc
pushf
movsl
and
add
lds
test
ret
cli
sbb
cli
fsubr
das
xchg
test
insb
cmpsb
adc
mov
adc
test
cmp
jae
outsb
insb
mov
leave
dec
sub
iret
push
push
push
xchg
loop
jle
jecxz
cmp
lcall
jo
sbb
sbb
fnstenv
sti
pop
ret
cmpsl
jne
mov
mov
jns
stc
add
in
and
xchg
xor
lock
mov
push
cmp
push
mov
lock
mov
jge
adc
xchg
iret
pop
iret
jecxz
movsl
push
push
push
mov
and
adc
popa
xor
imul
push
bound
pop
lods
cmp
xchg
call
fs
cmp
or
sub
iret
inc
fimuls
mov
pusha
dec
xchg
je
push
mov
cld
test
inc
popa
aam
mov
pop
das
fcomps
mov
mov
loopne
sbb
dec
pop
add
xchg
mov
out
scas
lret
testl
sti
into
repnz
sarb
cmc
xor
rcl
testb
cmc
mov
outsb
lret
xlat
cmp
and
fwait
sub
cmpsl
lret
inc
mov
daa
xchg
aad
jae
pop
pop
sub
xor
dec
xorb
es
and
inc
cmp
add
nop
mov
cmp
jg
dec
rcrb
in
lods
into
cmp
mov
or
cmc
jl
mov
fxch
nop
int
mov
jns
outsb
cmp
xor
fdivrs
xor
fwait
stos
bound
mov
cld
cli
gs
enter
out
mov
adcb
xor
stos
mov
pop
sub
int
scas
pop
addr16
shll
push
xchg
fwait
jg
jge
jmp
lahf
xchg
pushf
movsl
push
lock
stc
idivl
or
int
jns
mov
sub
fnstcw
dec
lret
out
mov
sub
xchg
jnp
clc
test
fistpl
jmp
xchg
pop
dec
dec
jecxz
add
sti
stos
or
mov
inc
fimuls
into
rol
push
mov
fcoml
pop
int
push
cmpb
cs
les
call
leave
stc
in
out
into
dec
inc
fildll
xchg
sar
sbb
dec
fdivr
mov
stos
pop
sbbb
ret
test
imulb
lds
mov
jb
outsb
add
pop
js
movb
jge
or
inc
enter
insl
paddusw
cmp
lds
lcall
cmp
and
dec
int
xor
push
test
je
lods
les
neg
pop
push
addr16
fcoms
mov
xlat
in
dec
jge
in
fwait
adc
lods
dec
vpaddd
jl
cli
inc
ss
pop
push
imul
loopne
add
rolb
imul
pop
push
dec
es
xchg
xchg
cmp
jle
xlat
sbb
mov
mov
xlat
orb
movsb
mov
pop
mov
jae
jle
lret
stos
xor
mov
dec
pop
nop
cmp
dec
out
push
mov
cwtl
scas
jne
je
xchg
hlt
jne
sti
inc
pop
mov
lods
rorl
add
sahf
push
in
cmp
mov
sbb
push
repnz
pop
leave
sub
adc
insb
jae
dec
lock
dec
fmull
or
int
int
stos
pop
xor
or
or
and
ljmp
or
push
test
pop
stc
or
mov
icebp
pop
add
jne
xchg
mov
aam
roll
rclb
outsb
insb
in
leave
jne
jbe
xor
movsl
adc
bound
adc
aaa
mov
jg
daa
pop
xlat
jl
jbe
mov
mov
mov
call
stc
in
sbb
jo
jae
dec
sbb
inc
dec
inc
adc
cmc
aaa
jl
jo
or
mov
inc
iret
fcomp
mov
adc
add
lahf
xchg
adc
je
add
out
add
cmp
les
popf
push
and
pop
mov
rorl
adcb
mov
iret
daa
das
fstps
sub
adc
jle
subl
cli
fadd
sahf
pushf
sahf
adc
inc
outsb
push
jp
mov
sarl
add
adc
cmc
or
fimull
repnz
mov
addl
pop
pop
mov
cmpsb
ret
ljmp
pushf
xchg
dec
mov
mov
pop
rol
mov
js,pn
jp
add
fldenv
dec
dec
clc
aas
adc
fstl
pop
push
sbb
adc
mov
fwait
std
jg
data16
ret
pop
xor
mov
and
sub
push
aas
xchg
pop
insl
lret
test
andb
int3
jmp
xchg
inc
xor
addb
push
ret
mov
pushf
adc
ljmp
add
push
jo
cmp
mov
push
or
push
hlt
sbb
imul
rolb
es
jno
or
lock
cs
mov
adc
dec
mov
out
mov
stos
mov
add
jmp
jae
repz
test
sub
inc
adc
xlat
mov
mov
inc
in
stos
repz
mov
cld
leave
cmp
and
inc
mov
and
pop
paddq
out
cmp
scas
sbb
add
sbb
add
jl
das
aas
out
add
sub
xchg
lds
xor
je
jo
cmc
stos
adc
fimull
loop
arpl
lret
mov
nop
dec
lods
arpl
push
cmp
inc
mov
idivl
mov
mov
dec
enter
cmp
mov
fdivrl
fcoml
movsl
xchg
jecxz
mov
fiaddl
xchg
add
sub
add
loopne
into
dec
sahf
push
int
je
dec
sbb
cmpsb
adc
lea
sub
jl
into
movsb
shlb
mov
xchg
test
mov
ret
add
test
adcl
mov
pop
loopne
fwait
mov
xchg
test
les
jge
scas
je
cmp
sbb
adc
mov
xor
dec
mov
adc
aas
or
das
fpatan
inc
out
jmp
mov
idivb
sti
rorl
mov
jnp
pushf
push
or
pop
repnz
test
pop
add
xor
push
push
inc
out
fs
testl
je
push
or
xchg
test
mov
jnp
inc
lcall
sahf
movsl
into
mov
fmuls
add
xlat
dec
cmp
outsl
xor
shll
ja
and
movsb
sbb
in
xor
jl
ljmp
nop
and
and
fs
pop
sarb
or
mov
mov
int
mov
lahf
out
ja
lds
lcall
xchg
mov
lock
test
idiv
pop
jmp
in
sbb
loopne
xchg
roll
push
ljmp
test
xlat
in
push
out
leave
shlb
adc
xor
outsb
mov
enter
add
mov
flds
cmp
lret
fsts
loopne
outsl
mov
push
cmp
scas
mov
pop
mov
negb
sbb
pop
mov
xorl
add
jle
ds
aam
xor
sahf
test
push
xchg
popa
arpl
jbe
and
dec
loopne
mov
fidivl
xor
and
inc
sti
notb
je
mov
icebp
call
std
push
jne
stc
in
mov
jle
push
cmp
enter
stos
xorb
xor
sti
add
and
ljmp
push
dec
jb
ljmp
icebp
lea
xchg
adc
int
and
add
xchg
imul
mov
enter
cld
and
das
adc
or
cmp
nop
lcall
sub
dec
mov
inc
lret
pop
loop
push
mov
cltd
lret
fwait
decl
cs
xchg
aam
cltd
fwait
push
gs
mov
mov
inc
dec
mov
fcmovb
cmp
cmpsl
sahf
jmp
sbb
jb
jns
pop
lcall
mov
xor
jbe
push
shl
loopne
push
push
mov
pop
pop
inc
sbb
and
imul
sub
pop
push
js
sub
jne
int3
xor
ds
mov
push
cmp
in
adc
fld
mov
cmp
sbb
dec
cmpsb
outsb
shlb
pusha
out
cwtl
imul
add
add
xor
sbb
push
cs
stc
and
xor
mov
push
push
mov
loop
xchg
pushf
lds
outsb
insl
bound
dec
and
push
xor
in
gs
dec
fnstenv
add
enter
sbb
xchg
out
mov
inc
cltd
inc
fiaddl
and
cmc
sahf
fwait
data16
and
push
dec
shlb
lcall
or
cmp
dec
inc
rcll
mov
mov
repz
addr16
xor
aaa
jnp,pt
das
fildl
movsb
int3
add
pop
mov
movsl
inc
xor
jge
movsb
cltd
dec
bound
ret
dec
and
xchg
or
je
push
out
imul
adc
sbb
mov
ret
dec
fwait
les
mov
xchg
sub
push
push
repz
adcl
adc
movsb
mov
and
cmp
outsl
jb
xor
ss
push
js
xor
jnp
loope
pop
incl
iret
add
das
imul
xor
sbb
ljmp
loope
jge
loope
xor
bound
jl
sub
pop
sbb
pop
jne
xchg
and
fbld
inc
or
dec
sub
or
xor
mov
add
scas
cmp
aad
mov
mov
insl
icebp
lahf
jl
pop
les
mov
jmp
fistpll
leave
je
or
cmovnp
pop
gs
jnp
js
pop
push
inc
aam
jbe
pushf
jle
or
out
shlb
xor
inc
test
data16
and
loopne
cli
ficoms
inc
or
add
jns
shll
stos
dec
cmp
js
mov
test
adc
dec
ds
inc
mov
rolb
call
imul
scas
xchg
sub
mov
push
sub
orb
push
insb
push
iret
xor
dec
mov
cmp
xor
add
adcl
loopne
int
jae
push
jnp
ljmp
mov
and
mov
stos
arpl
jmp
push
loopne
jg
nop
lahf
push
stos
aam
xchg
mov
xor
je
pop
popl
loopne
push
and
cmp
pop
push
andps
and
cmp
enter
jg
push
or
test
orb
popf
loop
fwait
inc
test
pop
jnp
jo
cmpsl
jle
orb
aad
dec
or
icebp
push
jecxz
xchg
dec
std
ds
mov
xchg
arpl
cmova
test
pop
jecxz
lret
mov
imul
xchg
adc
enter
dec
lret
addl
mov
lods
outsb
lea
nop
xchg
sbb
aas
dec
lds
pop
dec
test
neg
shl
rorl
dec
cwtl
pop
add
sbb
or
arpl
push
mov
popa
xchg
subb
and
nop
pop
dec
xchg
lret
lea
popf
aas
pop
pop
cmp
hlt
sub
mov
gs
ja
popa
push
inc
out
pop
xor
iret
sbb
adc
push
mov
stos
dec
xchg
add
pop
cmp
ja
push
sbb
and
mov
xlat
in
dec
pop
push
stos
aad
push
mov
push
pop
mov
dec
scas
sahf
adc
push
dec
popa
and
inc
and
xlat
cmp
pop
jp
sub
add
inc
jbe
shll
inc
out
lea
mov
jmp
dec
ja
aas
or
jo
aaa
dec
jne
mov
int
sub
iret
sbb
mov
jecxz
movsl
mov
sbb
fwait
xchg
xor
call
ljmp
and
or
inc
jge
add
xchg
stos
cmpsb
into
jo
adc
mov
push
or
sbb
leave
lods
cmp
ja
jl
add
or
or
dec
inc
sahf
aas
push
xchg
mov
inc
insb
bound
jnp
pop
fs
mov
dec
push
cld
sysret
movsb
test
sbb
push
cs
dec
mov
xchg
js
sub
mov
aad
add
cmp
stc
jecxz
lcall
jp
xor
cli
mov
cltd
std
or
int3
shrl
lds
cwtl
cmc
xorb
out
xlat
mov
mov
insb
test
add
push
push
pop
cmp
jp
inc
imul
out
pop
fldl
call
insl
lret
mov
jno
push
sbb
xchg
outsl
mov
cmp
pusha
mov
adc
cmpsb
es
loope
cmp
dec
pop
and
adc
adc
out
aaa
jg
jae
pop
fcompl
sbb
in
xor
clc
add
add
inc
inc
adc
ret
inc
nop
sub
ror
data16
mov
fnstcw
test
sub
notb
xchg
lahf
xor
pop
dec
push
outsl
or
cld
mov
popa
outsb
stos
jp
sti
fdivrl
add
test
xchg
sub
jecxz
mov
inc
inc
push
insb
stc
xchg
lcall
fucomip
lea
ss
je
xor
mov
sti
mov
rcrl
out
imul
test
xchg
cmp
int3
rsqrtps
mov
popf
push
rol
out
dec
lret
pop
xchg
sub
hlt
add
dec
xchg
jg
js
push
pusha
cmp
push
push
xchg
lods
push
repz
mov
pop
add
push
scas
adc
shr
inc
rorl
and
push
sub
mov
add
jns
popf
mov
cld
arpl
call
add
jbe
cld
pop
lods
popf
sub
outsb
testb
cltd
dec
sbb
inc
in
js
mov
test
icebp
push
jno
mov
neg
pop
mov
xorl
cmp
popf
jae
nop
dec
jl
xchg
or
sub
into
lret
mov
add
jmp
cmc
inc
mov
repnz
xlat
adc
push
cmp
pop
addb
arpl
cmpb
out
add
leave
aam
lret
mov
fstpt
pop
repz
mov
insl
btc
sub
scas
xchg
dec
pop
sub
and
in
mov
pop
push
xchg
dec
adc
xchg
ja
mov
or
xor
ja
std
das
lea
mov
rcrl
cwtl
ljmp
xchg
push
pop
leave
mov
sub
sbb
dec
rorl
ljmp
loop
sbb
adc
cmpsb
fnstsw
xchg
adc
daa
pop
jp
sarb
push
aas
sbb
ja,pn
cmpsl
xacquire
je
sub
outsb
push
sti
sub
pop
ljmp
or
mov
push
add
into
testb
dec
push
adc
and
push
test
mov
popf
xchg
in
cmp
stc
flds
inc
inc
fldt
mov
in
inc
dec
lods
lds
scas
and
pushf
shlb
add
dec
popa
jg
pop
mov
hlt
adc
mov
add
in
jl
movsl
mov
xchg
das
sar
sub
fdivrs
fs
mov
je
into
cmp
xor
adcl
lds
sbbb
mov
pop
aaa
repz
mov
int
in
scas
inc
aam
test
inc
daa
ror
fsubl
mov
mov
sbb
cmpl
cmp
ljmp
inc
dec
inc
push
xchg
test
and
imul
arpl
push
jp
movsb
mov
fdivrl
iret
mov
adc
cmp
push
jp
sbb
and
inc
mov
nop
or
adc
add
push
inc
sar
mov
inc
jg
and
xlat
jge
lds
sub
int
lret
sub
aam
jno
pop
dec
jns
into
mov
cmp
inc
xchg
orl
insl
fs
test
test
cmp
jp
je
ror
inc
xchg
lret
and
in
das
scas
push
scas
jno
sub
in
adc
add
mov
fs
mov
xchg
loop
insb
push
sub
sbb
stc
fs
movsb
mov
push
in
add
xchg
lret
mov
addr16
loope
psubq
mov
adc
or
jecxz
sub
out
mov
enter
xchg
push
std
jmp
test
aas
dec
or
negl
data16
in
imul
fwait
ljmp
insb
sbb
insb
xchg
and
gs
fcoml
aas
jo
jg
ja
jge
insb
pushf
inc
or
int3
pop
mov
sbb
cli
ds
xor
pop
sub
out
int
or
mov
icebp
dec
dec
pop
ljmp
ret
pop
inc
dec
or
inc
mov
pop
pop
mov
sub
imul
lcall
or
xor
and
sbb
xchg
sub
push
cmc
scas
fisubs
loop
popf
mov
ljmp
lods
int3
mov
ret
imul
notb
mov
sbbb
pop
and
and
roll
mov
les
or
ja
imul
fs
cs
sub
push
inc
adc
inc
lods
std
shl
rcrl
sarb
and
jne
lea
lret
addr16
cli
popa
ret
insl
adc
in
adc
pop
push
inc
xchg
outsb
repnz
xchg
lret
icebp
and
cmp
aad
push
inc
stc
mov
iret
addl
subl
mov
movsb
mov
mov
cli
test
jae
cld
fdivrp
lret
cmp
stos
dec
cs
or
loope
jno
inc
mov
leave
pop
jge
jl
sbb
jg
dec
addr16
and
insl
iret
dec
jl
fs
sub
jmp
xor
fs
scas
les
fbld
mov
lret
mov
jecxz
pusha
jne
jb
ss
sbbl
cmp
fbstp
fistl
cwtl
ds
xchg
aas
xor
jge
ss
insb
out
imul
lds
or
cmpsl
fs
cmc
xchg
inc
lds
xchg
pop
loopne
sbb
sbb
aas
pop
push
fmul
push
push
divb
mov
xchg
rol
pop
jl
jno
jne
mov
mov
in
push
das
shr
insb
inc
adc
mov
pop
sub
inc
sahf
sahf
jmp
jae
xchg
dec
pop
or
shll
pop
mov
or
pop
clc
mov
movsl
movsl
mov
negb
cld
add
repz
iret
or
test
mov
pop
enter
cmp
inc
movsb
gs
dec
in
jmp
jne
insl
jno
inc
scas
cmp
mov
flds
pop
cmp
pop
leave
lods
sub
cmp
push
push
pop
bnd
push
leave
popf
pop
push
bnd
and
data16
xchg
test
lret
sbb
jmp
aam
testl
mov
or
or
mov
push
pop
sbb
js
cmpsb
adc
add
sbb
pop
rcr
test
jmp
fstps
dec
inc
clc
test
leave
mov
mov
sbb
inc
inc
lret
push
cwtl
adc
sub
sub
xchg
mov
lahf
imul
push
es
jg
outsb
push
push
jo
fsts
notb
fcmovu
jae
sbb
and
mov
fsts
nop
cmp
adc
lret
pop
leave
icebp
cltd
addr16
mov
test
sub
adc
sahf
pop
fistl
inc
popl
xor
add
movb
jle
int3
pop
outsb
sarl
shr
xchg
daa
inc
xchg
int
jp
out
dec
or
cmc
pushf
sarb
stos
pop
loope
enter
aaa
push
push
pop
pusha
adc
loop
dec
fimuls
mov
int
outsb
cmp
and
xchg
and
push
cmpsl
loop
xchg
or
daa
xor
push
pop
imul
xor
mov
lret
sbb
jae
jne
cmp
lret
sbb
mov
mov
mov
jmp
bound
es
inc
mov
test
rorl
sbb
scas
mov
push
mov
xlat
ret
addr16
mov
dec
cmp
int3
insb
dec
dec
sub
out
jp
mov
notl
push
add
cwtl
sub
nop
sbb
sbb
jae
scas
mov
insb
inc
or
pushf
cmp
xchg
cmp
xchg
mov
dec
add
lret
iret
dec
push
das
xor
into
and
das
jmp
mov
loope
cmp
dec
nop
xor
dec
test
rorl
imul
aaa
mov
jle
and
inc
aam
inc
js
into
mov
or
out
cld
in
pop
addl
mov
in
decb
mov
dec
pop
dec
arpl
fstpt
or
adc
pop
pop
std
fiaddl
scas
gs
mov
push
addl
gs
hlt
xchg
or
out
mov
pop
lea
push
icebp
mov
jl
je
in
inc
aaa
cmpsb
jns
imull
shrb
mov
jb
sarl
fstl
ror
dec
out
scas
testb
mov
jl
jae
repnz
stc
fcompl
cld
adc
mov
fs
out
insb
dec
mov
mov
adc
popf
jo
dec
aad
shll
in
je
sbb
mov
mov
test
sahf
sbb
lcall
pop
jle
adc
hlt
test
addl
jecxz
hlt
sbb
jg
dec
testb
inc
sub
cmp
call
sub
rorl
xor
adc
jle
lcall
cld
pop
bound
mov
cld
or
fildl
fst
xchg
sbb
lock
add
cmp
mov
pop
inc
mov
loop
out
out
leave
orl
insb
pop
std
int3
mov
mov
or
and
mov
popa
xor
cmpsl
scas
stc
pop
inc
jle
dec
das
pop
push
stc
pop
jge
movsl
das
pusha
or
jo
icebp
les
pop
pop
shll
repz
fisttps
jae
enter
push
fcoms
addb
add
push
xchg
cmpsl
out
out
dec
mov
xlat
inc
cltd
mov
aad
xchg
pop
addb
sbb
mov
test
icebp
mov
lock
sti
adc
xorb
fmull
fisttpl
rol
dec
mov
add
jecxz
ds
icebp
cmp
dec
mov
inc
or
ss
jbe
aas
movsb
add
outsb
mov
jmp
call
cmpb
repz
outsb
or
dec
cmp
rorb
in
jge
xchg
idivl
jecxz
iret
cltd
xor
fwait
nop
cmp
jae
xchg
inc
push
xchg
scas
cmpsb
cmp
xor
ja
lret
cmpsb
testl
out
adc
inc
flds
xchg
xchg
nop
scas
loop
lcall
ljmp
fsubl
ss
addb
int
cmp
ja
pop
jbe
push
in
arpl
out
out
mov
jae
sbb
mov
dec
pusha
clc
adc
cld
and
out
push
bound
mov
xor
imull
and
dec
mov
mov
mov
repz
jle
fwait
ret
push
icebp
mov
outsl
pop
or
mov
shlb
aas
push
loope
shl
push
test
je
adc
mov
rcrl
sbb
push
lret
loope
enter
mov
jo
mov
mov
test
mov
lret
lock
aas
roll
movsl
movsl
fcompp
push
push
aam
outsb
lahf
inc
enter
add
lahf
adc
dec
jns
outsl
jns
fistpl
imul
dec
sbb
jne
mov
or
and
movsl
push
sar
cmpsl
sub
mov
jns
popa
leave
or
insl
mov
or
lea
lret
xor
popl
into
iret
mov
inc
js
mov
add
push
push
pop
stos
adc
cmp
sti
xlat
int3
ja
mov
pop
add
clc
sub
xorl
jle
inc
icebp
movsb
inc
dec
push
fnstenv
cwtl
test
int
popf
sbb
mov
xchg
cmpsb
pop
push
and
rcl
sbb
sti
cmpsb
mov
fimuls
insb
sub
lret
push
int3
xor
icebp
mov
scas
sbb
shll
adc
gs
xchg
mov
fwait
jns
sahf
ret
xchg
lret
hlt
mov
sbb
cmpsb
test
dec
and
sarb
lock
aas
mov
push
mov
pusha
movsb
dec
negb
fidivl
pushf
sbb
inc
push
xchg
aaa
push
push
cmpsl
pop
mov
ljmp
mov
jmp
enter
sub
call
fldcw
jb
add
call
and
in
xlat
add
mov
or
in
test
repz
pop
fisttps
fwait
or
mov
mov
push
inc
negb
ljmp
jb
adc
cmpsb
mov
xorl
mov
mov
xor
sub
pop
adc
cltd
jne
mov
jo
inc
int3
jnp
and
nop
sarl
je
mov
jae
or
fstps
lcall
inc
in
add
into
inc
mov
jbe
shl
sti
cmp
pop
leave
mov
fsub
cmp
push
xchg
add
dec
mov
js
pop
cmp
sub
lods
mov
push
out
pop
loopne
and
inc
add
sti
test
loop
dec
nop
xor
cltd
mov
adc
and
ss
adc
addr16
fisubrs
roll
adc
xor
cmp
call
aaa
cwtl
imul
ljmp
adc
mov
cwtl
xor
cmc
push
xchg
shrl
push
mov
mov
add
mov
cli
cmpsb
xchg
test
imul
adc
movsb
lret
inc
stc
leave
xchg
xor
enter
pop
inc
sbb
testl
lea
adc
out
and
fwait
repnz
addr16
push
dec
pop
das
arpl
mov
imul
xor
adc
fdiv
pop
jae
mov
mov
inc
mov
jge
inc
cmp
mov
and
fs
or
dec
fimuls
push
ret
jb
popa
mov
lods
movsb
dec
add
cmp
call
stos
out
out
push
sub
cmpsl
xor
stc
xchg
dec
icebp
aas
fsubl
inc
dec
and
lock
push
inc
or
ja
je
dec
cwtl
iret
jb
xor
loopne
mov
add
fisubl
ficompl
nop
add
les
sub
push
cmp
inc
or
lcall
or
mov
stos
add
inc
ja
mov
push
cmp
xor
jnp
data16
pushf
lret
das
repnz
and
push
jno
fdivs
les
lods
mov
xor
mov
cmpb
inc
or
xchg
testb
adc
xor
cmp
lods
push
dec
lods
mov
nop
xor
mov
xchg
push
and
jl
inc
sbb
outsl
mov
loopne
adc
sub
push
das
sub
arpl
jne
ret
lods
fwait
sahf
mov
nop
sub
ret
ljmp
sub
es
sbb
mov
inc
jmp
mov
nop
clc
dec
pop
sbb
dec
cli
pop
add
sbb
les
ds
int3
cmp
in
adc
out
mov
add
cmp
cmp
std
inc
cmp
rcl
jecxz
loop
dec
test
lods
xchg
jg
mov
jl
lds
aad
dec
jge
jecxz
and
and
cwtl
test
adc
mov
push
out
xchg
mov
and
mov
xor
cld
rclb
adc
cmp
sub
dec
cmp
inc
mov
ds
jne
or
sub
lock
daa
or
fdivrl
ret
mov
les
fxsave
xor
jge
sbb
stos
out
lods
fiadds
and
out
mov
xor
mov
xchg
sbb
push
sbb
pushf
loope
and
fucom
or
pop
fs
out
ret
add
jle
hlt
adc
sti
scas
filds
icebp
movsl
sahf
adc
punpckhwd
jns
sub
ret
mov
mov
enter
stos
pop
dec
mov
adc
aam
gs
imul
sub
jl
add
cltd
sbb
add
pop
sahf
dec
fidivs
gs
push
push
sub
es
out
mov
stos
adc
jmp
enter
inc
in
jmp
or
add
fistps
mov
mov
into
cld
out
loope
xor
sahf
iret
leave
aas
xor
repz
daa
icebp
outsb
hlt
cmp
push
fisubl
enter
scas
js
cmp
jge
pushf
push
outsb
jle
sbb
xlat
stos
jb
xor
lock
lahf
or
jmp
into
les
outsb
jg
adc
sbb
push
push
xchg
push
sbbb
jg
xchg
lods
or
out
mov
sub
pop
popa
push
imul
xchg
cmc
adc
pusha
enter
xchg
mov
push
lret
into
aad
lret
add
mov
dec
dec
adc
imul
sahf
out
test
jp
pop
sahf
int3
lods
into
or
mov
pmaxsw
xchg
popf
adc
cmp
in
jbe
iret
cld
shl
and
out
test
das
inc
jno
rcll
inc
xor
sub
repz
cwtl
push
dec
jnp
in
or
jg
mov
or
pop
adc
icebp
movsl
mov
iret
add
mov
jecxz
mov
mov
movsb
arpl
insl
mov
sbbb
jns
aas
mov
mov
cli
cmp
and
cmp
push
mov
jle
xlat
jmp
bound
or
cmp
push
cmp
sub
clc
mov
dec
and
mov
lret
pop
in
cmp
adc
mov
stos
icebp
mov
adc
outsb
sti
pop
mov
inc
mov
rolb
or
mov
jge
jae
jbe
xchg
data16
push
aas
sub
push
jne
ss
imul
daa
out
jmp
pusha
xchg
sahf
pop
ljmp
mov
shlb
clc
and
push
xchg
push
inc
andl
iret
test
dec
das
icebp
repnz
lcall
lret
mov
sub
fs
int
arpl
ss
xchg
or
cmp
rcrb
arpl
hlt
gs
xor
xor
movsl
push
lahf
in
dec
shll
rolb
movsb
dec
push
inc
cld
push
es
lahf
scas
js
pusha
ljmp
mov
movsb
mov
inc
loop
test
cmpsl
testb
mov
test
dec
nop
mov
adc
cmp
jae
shll
push
lock
xchg
and
pop
fs
push
ds
call
pop
mov
dec
adc
stos
pop
cmpsl
xor
lods
and
fistpll
pop
push
dec
xchg
jns
aam
sbb
jbe
ss
and
xor
testl
sbb
push
and
sbb
mov
push
inc
clc
push
xchg
sbb
fistpl
pusha
or
loopne
push
shll
rorl
xor
rol
mov
mov
jnp
dec
in
outsb
mov
andl
or
mov
imul
pop
mov
xchg
jg
repz
adc
mov
adc
mov
aaa
std
mov
sub
popf
insb
pushf
ret
dec
jecxz
pop
jns
xor
imul
shl
cmp
ja
cmp
xchg
in
ret
sbb
pop
stos
stos
sbb
out
stos
push
jmp
lods
loop
data16
xchg
sbb
sbb
jns
cmp
dec
or
push
push
jb
cmp
fnstcw
inc
adc
lret
cmp
push
outsl
xchg
mov
xchg
jle
or
fcmovnu
test
in
mov
and
fsubrl
mov
jae
push
ds
out
sub
frstor
fldt
lcall
into
pop
adc
cmpsb
and
shll
hlt
jp
inc
cmc
or
pop
jns
loope
pop
cmp
movsb
lea
lret
jg
inc
mov
and
xlat
or
inc
inc
jg
or
pop
jnp
add
jp
mov
jg
inc
js
xchg
lret
inc
add
roll
ja
sub
and
cs
je
rcl
out
lods
clc
in
jp
mov
lcall
lcall
pop
fiaddl
sbb
jle
cmpsl
cmc
incl
jo
mov
jg
push
cltd
icebp
and
push
jnp
and
inc
mov
subl
shrl
fdivrs
adc
je
inc
inc
in
pop
loop
dec
push
jnp,pt
test
fwait
into
fildl
cs
jnp
rorb
stos
mov
jp
popf
mov
push
ds
aas
cmc
fmuls
or
or
inc
pop
lret
push
sbb
xor
sbb
lcall
push
dec
call
jns
setle
mov
mov
pop
mov
mov
push
and
dec
leave
jp,pt
lods
mov
mov
add
lret
in
ror
aas
cli
out
clc
int3
leave
pop
std
sub
pop
scas
push
jns
pop
test
popa
jp
roll
mov
push
inc
jae
xor
push
or
mov
xchg
inc
push
clc
out
push
data16
push
in
divb
jne
loope
testb
xchg
stc
jb
sbb
loopne
sti
test
adc
rclb
fisubrl
or
xchg
or
push
int3
push
dec
sub
adc
cltd
inc
int
cwtl
fdivr
mov
mov
test
ljmp
ljmp
cmp
adc
push
out
xchg
inc
enter
cmp
insl
cmp
jb
cmp
repnz
in
into
int3
push
fdivrp
cmpsb
std
rcrb
shl
mov
ds
scas
dec
leave
dec
stc
and
in
mov
and
andb
inc
sar
movsl
dec
push
ret
or
pushf
inc
icebp
push
cmp
xchg
sar
sub
jb
xchg
push
add
cmp
pop
add
fnstenv
enter
mov
insb
int3
pop
mov
movsl
mov
pop
and
push
push
leave
mov
into
sbb
insl
mov
dec
lods
inc
ljmp
popf
xlat
fsubrl
clc
outsb
cld
mov
sti
and
push
vmovapd
cmc
dec
les
or
scas
clc
frstor
cmc
jl
cmp
xchg
shr
pop
outsl
sbb
loope
into
sub
push
jbe
cmpsb
pop
push
mov
stc
dec
test
cmp
and
and
mov
dec
cs
mov
sub
sub
pop
lahf
jo
sub
push
ret
inc
pop
loop
adc
test
jge
mov
popf
inc
cmp
int
mov
stos
mov
inc
scas
dec
xchg
ss
and
fsubr
cwtl
pusha
sbb
jo
push
push
cmp
and
jo
adc
gs
or
int3
sbb
adc
ret
movsl
test
inc
adc
or
cmp
repnz
xchg
or
push
aad
inc
ret
dec
and
aaa
push
xchg
jge
mov
mov
and
adc
cmp
fldl
fdivl
sti
cmpsl
dec
and
call
lods
push
xchg
jle
test
mov
jl
dec
fs
mov
lcall
fidivrl
into
fwait
dec
push
push
add
cltd
mov
fstp
fwait
icebp
xchg
adc
mov
mov
lock
jns
jl
mov
or
daa
js
cmp
je
cmpsb
mov
mov
clc
pop
push
and
call
test
cmpsl
testb
lods
cli
leave
jo
xchg
pop
push
loop
dec
inc
adc
shrl
incb
push
cmp
andb
adc
and
adc
cmp
push
adc
push
adc
push
jo
cwtl
or
sarb
jno
pop
pop
mov
stos
jae
sub
jge
into
lea
mov
loop
fstp
cmp
scas
mov
sbb
push
xor
xchg
arpl
std
mov
add
jns
enter
cmpsb
xchg
es
fsubrl
adc
cmp
adc
shll
mov
jp
dec
rolb
inc
fadds
ficompl
xchg
mov
mov
fdivl
frstor
cmp
std
ja,pn
cmpsb
adc
testb
push
nop
jecxz
cwtl
dec
adc
mov
pop
dec
in
mov
cmp
mov
xchg
xor
popa
shrb
and
insb
arpl
xchg
or
mov
insb
cmp
pop
imul
or
sub
push
push
loopne
pop
xor
lods
pushf
call
xchg
add
test
loope
add
add
push
jb
stc
inc
orb
mov
inc
js
imul
roll
divb
push
data16
mov
jp
cmp
mov
addl
fstps
xor
pop
adc
dec
cmp
je
addb
movsb
in
mov
cwtl
popf
xlat
cli
movsl
imul
push
scas
pusha
adc
popf
inc
insl
aaa
mov
jbe
sbb
jmp
pusha
and
xchg
das
push
push
leave
xlat
xchg
cmp
fstpt
pop
inc
and
sub
fdivs
ret
jmp
push
xchg
jno
mov
iret
cmp
jne
icebp
sbb
scas
gs
push
nop
dec
cli
sarl
and
inc
repz
dec
push
adc
dec
mov
gs
mov
out
add
clc
mov
addr16
fisubrl
movsb
movsl
mov
outsl
jecxz
cmpsl
clc
or
jg
jno
gs
pand
or
insl
cmpsl
xor
lods
scas
pop
hlt
jo
rol
outsb
push
push
ljmp
mov
mov
roll
push
cwtl
xor
add
xchg
or
jle
subb
push
jns
mov
iret
scas
jae
pop
scas
aaa
jg
xchg
or
add
xor
push
mov
cmp
mov
movsb
js
pop
cmp
mov
into
dec
lock
jmp
jnp
out
inc
fwait
or
movsl
lret
ss
push
daa
xchg
test
lods
or
test
add
pop
stos
iret
dec
adc
add
cwtl
fistps
imul
repz
sbb
lods
clc
pop
mov
jnp
fsubs
roll
or
inc
in
mov
pop
sub
cmp
pusha
shll
cmpsl
stc
loop
test
xor
clc
in
dec
adc
jno
test
lods
mov
dec
lds
nop
lahf
cli
lods
jle
in
push
stos
xchg
and
push
mov
es
mov
div
mov
mov
jae
out
xor
fnstsw
sbb
adc
mov
mov
xchg
dec
outsl
cwtl
cmp
addr16
lods
test
push
add
add
int3
add
cli
addb
jo
pop
repz
lcall
cmp
call
sbb
aas
lcall
ret
mov
lcall
scas
jbe
sub
in
arpl
gs
scas
pop
in
scas
aas
xor
jne
pop
xor
je
mov
mov
cld
bound
fs
rcl
cmp
mov
outsb
push
int3
dec
cmp
rcl
inc
shll
mov
jmp
bound
mov
jl
loope,pt
sbb
lds
xchg
mov
push
xlat
cld
repz
popf
loop
sbb
dec
enter
adc
mov
mov
andl
mov
jne
adc
leave
popa
lods
shl
in
int3
js
stos
push
lret
pop
mov
xchg
test
dec
pop
sti
sbb
loope
aas
mov
push
push
mov
repnz
daa
lds
adc
mov
pop
out
and
dec
lret
mov
adc
push
icebp
jae
xchg
and
pop
cmc
cmc
dec
mov
icebp
sbb
fwait
xchg
mov
mov
cli
repnz
data16
test
stc
out
add
mov
fists
popf
call
cmpl
lcall
mov
hlt
and
inc
xchg
cli
push
jne
add
xchg
outsl
lret
fs
hlt
cmp
mov
call
push
ficoml
pusha
push
xchg
sub
pop
mov
sbb
push
xchg
mov
dec
xchg
fiaddl
out
xchg
push
sbb
adc
sar
xchg
sbb
lahf
loop
lea
mov
leave
adc
mov
xchg
rorl
jg
adc
and
xchg
stos
aaa
xor
mov
mov
sbb
je
cmc
mov
sti
or
ja
add
andb
jge
ret
test
sbb
pop
pushf
sbb
add
jns
mov
into
pop
jo
dec
je
stos
out
cmp
inc
leave
pop
pop
jbe
cmpsb
fisubrl
iret
xchg
push
ds
outsl
leave
pop
pop
push
divl
pop
sbb
inc
ror
in
test
test
cmp
mov
xchg
dec
lahf
out
js
int3
leave
bound
sbb
ret
add
cld
push
jo
ret
jp
dec
lahf
dec
in
jno
cmp
mov
inc
xor
cmpsb
jno
rcr
pop
inc
fnstenv
in
leave
iret
notl
aaa
rcr
adc
and
icebp
mov
into
mov
mov
cli
lcall
popa
enter
sbb
adc
jae
jnp
fidivl
jmp
mov
movsl
clc
mov
insb
adc
inc
cwtl
dec
out
push
lock
pop
sahf
add
xor
push
shrb
or
push
in
or
push
popf
lcall
pop
cld
xchg
lret
iret
push
jno
loope
or
add
cmp
pop
cwtl
repz
test
out
jge
sbb
out
inc
addr16
pop
mov
fisubrs
outsl
loope
adc
mov
ror
movsl
imul
sbb
adc
addr16
mov
fimull
call
ja
mov
stos
lahf
in
dec
idivb
iret
cmp
push
outsb
sbb
ja
ficompl
pop
ljmp
add
dec
xchg
movsb
dec
loope
addr16
push
sbb
ret
xor
jbe
enter
push
rcrb
stos
ljmp
inc
and
clc
mov
adc
mov
das
inc
in
sub
push
popf
or
pop
xor
outsb
xchg
gs
jae
xor
sti
add
adc
push
pop
jp
cmp
addb
push
add
cmpsl
dec
add
pop
dec
aas
mov
nop
cwtl
xor
int3
and
dec
xor
sti
mov
push
sbb
adc
xor
loop
cltd
jmp
lods
sub
mov
mov
push
lods
pop
push
stos
es
or
loope
outsb
or
ret
testb
or
pop
jl
mov
xlat
cmp
xchg
ficoms
sub
jno
and
ja
and
outsb
adc
adcl
xchg
hlt
sub
lcall
pop
xchg
dec
rclb
xchg
gs
out
jnp
sarb
jge
imul
gs
cmp
jle
or
je
addr16
cmp
xor
dec
ds
mov
mov
xor
sbb
leave
stos
leave
lods
mov
ret
jle
mov
or
mov
xor
cmp
push
aam
sbb
popa
test
push
pop
lds
aas
xchg
adc
out
div
inc
repz
cmp
mov
clc
pop
dec
loop
jle
pusha
xor
dec
mov
or
xorb
cli
jge
insl
adc
int
in
add
inc
andb
dec
push
xchg
outsb
sti
ficoml
lcall
out
cmp
mov
push
fcompl
sbbl
test
inc
cld
cwtl
jo
repz
imul
mov
mov
jecxz
xchg
popa
cmp
test
jne
sahf
sar
test
xor
pop
insl
ficoms
push
pusha
sub
push
sub
sub
es
mov
into
inc
lret
fisubrs
sbb
push
and
in
mov
in
push
int3
cmp
lret
cs
jp
cmpsl
popf
mov
rcrb
cmp
mov
cmp
inc
rolb
mov
in
ret
cs
nop
ljmp
lods
jno
and
js
mov
mov
std
pop
pop
mov
aam
cs
xchg
call
or
push
jmp
es
arpl
jl
out
mov
sub
and
aaa
les
daa
faddp
push
pop
ja
cmp
mov
aaa
xchg
mov
add
test
pop
push
fidivl
les
aaa
movsb
aas
sbb
pop
xchg
scas
mov
inc
loop
stos
mov
dec
inc
push
jbe
mov
cmpsb
xchg
in
or
pop
and
vpunpckhbw
adc
dec
and
cli
popf
push
leave
add
or
into
mov
xor
pop
cli
jne
jno
jae
js
adc
sti
mov
addr16
shlb
out
or
pushf
jg
sahf
and
out
dec
fs
push
add
sub
sub
push
xlat
imul
mov
jns
sub
cmpsl
push
mov
dec
mul
aam
out
test
sbb
push
lods
lods
cmp
push
add
pop
jb
jnp
xlat
loopne
in
mov
pop
or
dec
mov
jle
sub
xchg
int3
inc
decl
out
andl
mov
jns
xchg
adc
mov
jecxz
sti
fadds
mov
insb
loope
sbb
fcoms
mov
repnz
pop
push
shrb
inc
fists
mov
imul
sti
and
or
adc
jg
xor
ds
jle
test
or
cmp
clc
lcall
xor
cmp
pop
sbb
dec
add
inc
fidivrl
es
cmp
pop
jnp,pt
cmp
scas
jb
in
daa
cvtps2pd
xchg
mov
inc
shll
lock
and
mov
dec
cld
or
dec
dec
push
test
cwtl
jmp
pushf
int
cs
push
out
mov
vorps
inc
js
call
dec
mov
push
js
xchg
sbb
dec
bound
loop
xor
cbtw
clc
stc
and
and
out
mov
ja
stos
jp
mov
cmp
insb
shrb
inc
jmp
inc
mov
fs
lret
mov
pop
mov
xchg
mov
xchg
dec
movsb
out
xor
or
inc
pop
add
jmp
insl
stos
sbb
xchg
test
xchg
insl
sbb
sub
mov
sar
xor
test
lret
pushl
les
out
test
xor
cmp
lret
jge
xchg
in
scas
add
aam
movsl
out
out
cmpsl
bound
and
push
push
add
push
test
inc
sub
add
push
lcall
mov
sub
stc
pop
sbb
lds
shr
push
push
ficompl
jmp
or
int
sbb
addl
cmp
ljmp
fidivrs
push
add
loopne
rcrb
pop
jb
mull
fidivl
ss
xchg
lods
adc
ds
pop
je
mov
add
insl
lea
cmp
daa
cbtw
push
das
mov
in
pop
icebp
shll
inc
xor
imul
jge
jecxz
call
sbb
jmp
add
scas
mov
cmp
xor
cmc
cmp
call
or
fildll
dec
sub
ds
and
jb
mov
push
out
jle
outsb
xor
adc
lea
cltd
mov
jns
into
xchg
dec
bound
imul
dec
dec
pop
ljmp
cmpsb
das
inc
jb
out
test
mov
jbe
push
sbb
mov
pop
sbb
inc
stos
enter
aaa
jb
ss
push
cmp
add
sub
and
je
adc
mov
outsl
enter
push
adc
mov
sub
insb
cmp
subl
out
sbb
mov
hlt
pop
rcrb
cmp
xor
jae
mov
cld
add
mov
dec
push
dec
push
adc
rcrl
mov
nop
mov
adc
inc
mov
pusha
dec
jb
dec
jle
adc
mov
inc
in
jne
out
pop
or
in
mov
movsl
mov
movsb
int
lret
xor
lods
cmc
mov
jle
pop
xor
dec
push
sub
dec
aam
inc
repnz
pop
enter
cmp
sub
decb
adc
pusha
sub
pop
nop
push
pop
or
xchg
push
adc
sbb
or
adc
mov
sarl
movsl
fcompp
filds
jns
in
repz
push
push
xor
das
cmpl
push
add
insb
cmp
out
dec
mov
add
dec
das
jg
push
test
pop
je
ja
js
jnp
cmp
inc
push
sub
and
pop
xchg
js
and
movsb
testb
fidivs
out
mov
fadd
lds
push
cmp
negb
pop
into
add
mov
in
sbb
xchg
sub
and
xor
and
fldt
push
dec
cmpsl
push
js
xor
cmc
mov
shlb
adc
cs
roll
and
inc
sbb
xor
inc
orl
mov
out
pop
insb
icebp
shlb
jl
sarb
jg
add
mov
inc
xorb
jmp
or
pop
loop
jbe
inc
fsub
add
nop
in
add
pop
adcb
je
sbb
jns
or
push
popa
ret
out
lods
mov
inc
cs
cli
mov
mov
push
loop
aam
neg
or
test
jmp
mov
mov
sti
test
pop
inc
lahf
xchg
add
push
shlb
or
lock
mov
cmpsl
mov
je
jo
ss
rcr
push
pop
popa
cmp
dec
loopne
repz
fcom
cld
jle
insl
sub
fiadds
mov
inc
test
mov
in
jecxz
sub
lret
popaw
out
push
rcl
cmc
mov
pusha
fstps
mov
cld
xchg
sbb
ss
mov
insb
jnp
cmp
and
push
jno
roll
add
loop
inc
je
les
out
icebp
aaa
dec
ret
or
aam
call
inc
xchg
sub
push
jns
xor
shll
push
gs
cwtl
adcl
adc
test
dec
negb
mov
inc
imul
das
inc
xchg
pop
and
add
int
cld
or
out
daa
test
mov
sar
mov
sub
daa
add
mov
rorb
in
add
mov
push
movsl
out
dec
inc
inc
pop
cli
and
jnp
cmp
mov
in
mov
pop
fisttps
daa
lods
push
mov
out
loopne
loopne
mov
cmp
adc
sub
mov
inc
sarl
pushf
add
notb
les
jecxz
mov
jle
fcmovnu
xor
pop
ja
mov
aaa
pop
dec
rclb
in
mov
pop
push
out
jbe
jl
fwait
outsl
push
sub
jmp
in
sahf
sub
orl
push
out
ja
aaa
imul
jmp
inc
hlt
cmp
xchg
into
lods
imul
rorl
and
fcomps
ss
dec
jmp
push
out
xchg
xchg
or
jo
adc
sub
ret
mov
jl
xor
add
lea
test
ret
imul
loope
sbb
or
in
xor
sti
daa
dec
pop
call
mov
cwtl
add
xor
mov
and
push
test
pusha
push
jae
xchg
inc
pop
mov
mov
jnp
add
gs
stc
cmpl
jge
loopne
jle
les
sbb
cltd
push
dec
cmp
pop
sub
cmp
jb
cmp
ret
js
mov
and
push
out
xchg
xlat
jmp
or
jno
notl
insl
cltd
hlt
movsl
rcll
push
icebp
iret
enter
lahf
cmp
aad
adc
popa
lahf
pusha
fidivl
outsb
xchg
jecxz
cmp
or
adc
add
xchg
dec
jecxz
adc
cmp
loope
push
cwtl
add
xor
mov
cmpsb
icebp
jg
push
iret
mov
push
sti
lret
ja
push
xor
in
add
popl
insb
cmp
test
ficoml
imul
movsl
jne
lods
sti
call
add
pusha
lcall
fwait
sbb
subb
add
imul
pusha
adc
or
loope
in
mov
and
je
scas
jp
cmp
xor
repnz
lods
ds
push
jp
lods
testl
test
mov
dec
mov
fldenv
adc
stos
movsl
adc
movhps
imul
repz
add
ss
mov
or
out
xchg
jecxz
ljmp
and
into
push
dec
sbb
movsl
inc
mov
push
ficomps
mov
insb
ljmp
jle
sub
dec
cmp
pusha
js
dec
int3
add
and
imul
cmpsl
inc
enter
loopne
cmpsl
lret
roll
jb
fildl
dec
push
test
sbb
mov
stos
cmp
ds
scas
scas
cli
outsl
jmp
shrl
and
adc
loopne
inc
add
sbb
xchg
push
mov
out
jns
stos
mov
inc
daa
sbb
pop
and
sahf
pushf
popf
repz
jno
dec
or
das
iret
scas
and
cmp
dec
enter
js
cmp
fs
push
jl
and
cld
xlat
push
push
xchg
push
mov
jns
xor
xchg
mov
jmp
jbe
rcrb
pop
out
stos
in
sahf
hlt
pushf
popa
out
fiaddl
push
inc
lea
fisubs
sub
push
movsl
jge
xor
aam
arpl
orl
dec
xor
shlb
dec
test
xchg
movsl
into
lret
testb
fs
push
mov
mov
sar
dec
scas
and
mov
jp
dec
aad
movsl
sub
inc
xchg
xor
push
out
sbb
sbb
outsl
mov
das
or
sub
js
mov
cmp
cmp
mov
mov
pop
xlat
daa
adc
sbb
lds
loop
push
adc
or
outsb
or
adc
cmpsb
cmp
gs
xor
ss
addr16
xor
dec
or
jbe
xchg
shrl
sbb
outsb
icebp
push
aad
push
rolb
pop
int3
fstpl
dec
mov
scas
push
outsb
jecxz
in
cwtl
pop
fmuls
popf
lock
adc
icebp
sbb
mov
popa
hlt
mov
mov
xlat
add
repnz
xor
shrl
xor
aaa
mov
mov
sbb
xlat
push
sbb
lret
loopne
dec
iret
pop
add
aam
icebp
jno
push
cmpsb
pop
inc
sub
or
cld
clc
mov
pop
movsb
add
dec
inc
mov
out
push
push
jp
inc
sahf
jne
push
push
rol
cmp
cmpsl
pusha
sub
test
xor
shrb
xchg
add
stos
and
push
mul
push
xchg
and
rcrb
popf
popf
xor
or
aas
inc
mov
lock
jle
dec
dec
hlt
sbb
mov
imul
or
sbb
cmpsl
push
push
iret
les
hlt
aam
in
cs
lret
test
test
test
sub
test
sbb
xor
push
sbb
mul
push
inc
lock
add
mov
cmp
push
mov
imul
ret
dec
sbb
bound
rclb
mov
les
and
push
cltd
fldcw
out
sbb
cmp
jne
test
js
mull
lret
pop
mov
leave
sbb
xchg
imul
aas
sub
push
pop
or
adc
sbb
mov
cmpsb
icebp
add
push
mov
lret
insb
xor
jne
popa
or
dec
bound
dec
idiv
mov
inc
jge
gs
inc
xchg
leave
xor
dec
mov
sbb
lcall
jp
lret
adc
push
cwtl
mov
iret
faddp
js
and
mov
push
or
test
in
jmp
sbb
int
cwtl
xchg
push
rcr
dec
xchg
sub
mov
wbinvd
jle
inc
push
add
push
call
dec
insl
or
mov
movsl
xor
inc
lahf
lock
cmp
testb
hlt
pop
pop
push
in
mov
inc
pop
incl
mov
pop
inc
aas
mov
mov
jle
xchg
fbld
jno
int
add
sub
dec
mov
cmp
pop
xor
lahf
out
fs
in
orl
sbb
call
insb
scas
xchg
ja
movsl
mov
jnp
sbb
fisttps
nop
fisttpl
xchg
das
xchg
sahf
mov
dec
aad
pop
cs
xchg
fcmove
pop
cmp
jne
jb
pop
push
inc
jno
fistpl
pop
addr16
mov
loope
out
aad
mov
cli
scas
orb
xchg
scas
adcb
into
test
fmulp
lret
cmpsl
dec
jmp
adc
pop
mov
lahf
pop
aad
push
iret
in
imul
or
inc
jmp
sarb
sbb
in
lret
aaa
lock
cli
add
cmpsb
test
jl
cli
in
loope
ja
bound
fmul
push
pushf
dec
std
je
pop
xchg
mov
cwtl
adc
push
adc
or
cmp
add
jo
idivl
call
jnp
sub
mov
cmp
push
jne
jg
idivb
pop
std
repnz
mov
insl
cmpsl
mov
and
cmc
stc
or
sub
movb
push
fwait
mov
inc
sbb
jge
sub
mov
mov
adc
mov
out
sub
scas
or
repz
inc
out
enter
add
inc
aas
xchg
shll
xchg
jno
dec
out
pop
lretw
outsb
pop
adc
leave
fnsave
outsb
mov
loope
pop
jle
and
movsl
ret
jb
sub
lret
les
out
jp
mov
mov
push
push
mov
xor
into
lock
lahf
fwait
push
jl
add
dec
adc
add
xlat
out
inc
inc
aad
jl
cmpw
loop
sbb
popa
ficoml
dec
mov
and
mov
mov
add
jno
ret
add
data16
xchg
lret
clc
leave
adc
adc
shlb
xchg
es
mov
lahf
hlt
pop
pusha
repnz
lds
aam
clc
mov
mov
xchg
inc
xor
loop
repz
idivl
xchg
xchg
dec
mov
lcall
sbb
jp
test
xchg
adc
dec
mov
test
popf
mov
sub
xchg
ja
mov
cmp
jo
mov
cmp
inc
clc
pushf
fmul
xchg
add
ret
adc
mov
icebp
js
lock
stos
xchg
push
gs
aad
aam
sbb
jle
jb
or
xor
or
fwait
adc
push
mov
and
push
addr16
jmp
fcompl
sub
pop
xor
dec
push
jg
mov
lret
js
repz
pop
push
xchg
flds
nop
mov
inc
lcall
cmpsb
adc
in
or
pop
push
cmpl
out
test
sub
lods
adc
dec
cmp
in
push
popf
jae
fisubrs
shl
int3
rep
aam
mov
cmp
outsl
pop
out
dec
jns
and
mov
sahf
idivl
shl
jne
jae
cs
sahf
mov
add
lahf
sarl
and
cld
add
test
or
pop
mov
lods
loope
xchg
loop
sub
adc
sahf
sbbb
xor
addps
mov
addl
mov
je
cltd
push
ror
pushf
push
xor
lods
fnstcw
adc
je
cmp
scas
into
or
add
or
out
sub
stos
leave
add
ret
lods
lret
or
add
jle
cmpsb
fldt
fcoms
add
outsl
cltd
sub
sub
jge
nop
adc
movsl
vpunpcklqdq
rclb
in
mov
test
ja
sub
out
fsubl
rcl
notl
jne
pop
stc
lods
int3
inc
mov
mov
add
call
cmp
fs
push
sti
add
out
inc
sbb
aad
jb
call
test
insb
add
les
jmp
inc
push
add
sub
cltd
inc
repz
ret
push
aam
out
inc
fs
loope
sub
push
mov
mov
mov
mov
cmp
jge
imul
test
sub
lock
frstor
lock
add
je
pusha
jp
roll
mov
jl
push
repnz
jns
and
inc
hlt
sub
shrl
jno
ja
mov
xchg
sub
test
push
les
xor
push
movsb
cltd
rcll
or
jp
fidivl
shlb
inc
les
mov
pop
push
imul
xor
sub
adc
pop
push
sbb
sub
xchg
or
filds
clc
or
xchg
jp
mov
rcll
sbb
pop
xchg
fists
mov
jmp
push
push
stos
jnp
xchg
push
push
int3
cmp
lret
dec
mov
cltd
push
add
xchg
xor
lret
push
int3
xchg
inc
les
mov
fistl
mov
jle
out
ret
xchg
les
cmp
rcrb
sub
clc
pop
repz
pop
xchg
mov
xor
jbe
les
or
into
cmp
push
mov
test
sbb
xor
ss
daa
out
test
std
jno
xor
dec
jp
inc
xor
mov
aad
pop
mov
pop
xlat
mov
sub
and
push
add
xchg
xorl
mov
lahf
inc
rorl
mov
sahf
jns
or
cmpb
outsl
int3
sahf
mov
mov
lods
sbb
enter
daa
pop
mov
fiadds
push
or
shll
dec
jb
xor
xchg
in
mov
cs
mov
lea
inc
pop
add
dec
or
jae
mov
filds
popa
shll
xchg
pop
push
add
sti
mov
mov
mov
jbe
xchg
jne
mov
jecxz
mov
jl
inc
jo
scas
mov
push
imul
and
leave
sub
adc
stos
xor
loope
push
loopne
ror
pop
xchg
fistpl
pop
pop
add
jno
ror
jno
lods
shrl
mov
std
add
mov
das
sti
sbb
sbb
mov
andl
andl
cmp
xchg
and
aad
mov
cmc
xchg
push
push
add
jmp
xchg
dec
pop
mov
pop
dec
adc
lods
clc
roll
scas
mov
in
push
scas
clc
mov
sbb
fldenv
stos
sub
test
push
stc
push
popa
addl
xor
jp
mov
adc
scas
std
jl
fidivrs
out
adc
add
push
jge
dec
sbb
out
pop
mov
push
push
sbb
pop
addr16
mov
gs
jb
je
mov
aam
fcomp
rcr
test
push
sahf
mov
jl
add
bswap
lock
lret
sbb
mov
cmpsl
add
cmc
into
jno
repnz
dec
add
mov
jo
adc
push
jl
add
push
sub
jge
push
adc
mov
fs
fmulp
sub
rol
fwait
gs
fwait
out
js
adc
jp
xchg
int
mov
push
mov
xchg
cmp
outsb
mov
shrl
mov
nop
or
imul
dec
and
xchg
mov
ja
imul
in
dec
cmp
lcall
insl
push
mov
push
or
popa
mov
je
mov
dec
dec
insb
xchg
sahf
cmpsl
insl
call
dec
rolb
lea
jle
jne
pop
cmp
loope
dec
pop
lds
mov
jg
int
movsl
pushf
dec
cwtl
lods
mov
ficoml
xchg
mov
repnz
push
xor
xchg
stos
dec
out
inc
pushf
and
cmpsl
outsb
repz
cmpsb
iret
test
push
in
ja
xor
mov
bound
cmp
pop
mov
fidivs
cmc
jo
push
and
add
fwait
leave
xor
sub
ret
mov
clc
add
shr
outsb
aas
clc
xchg
je
popf
insb
aas
movl
push
pop
cmc
loope
cs
outsb
cmp
mov
mov
arpl
push
or
add
pop
fdivl
movsb
cs
mov
and
into
adc
mov
pop
mov
mov
push
cmpsl
sub
push
inc
pop
mov
adcb
xor
dec
xor
hlt
imul
out
dec
pop
adc
mov
xor
dec
into
aam
pop
cwtl
leave
inc
pop
loopne
subb
mov
jecxz
and
inc
mov
stos
pop
cwtl
insb
mov
sub
sub
jecxz
ds
dec
push
jmp
lcall
pusha
fidivrl
out
push
inc
xchg
jns
int
imul
pop
test
jno
pop
rcrl
das
xchg
adc
add
les
inc
scas
mov
rol
sub
adc
icebp
or
shll
sub
or
pop
jns
dec
push
cmp
addl
push
push
xor
popa
lods
shrb
push
cld
sub
mov
xor
sti
pop
loop
jle
jae
add
scas
jnp
push
gs
aad
add
sbb
call
fs
jg
mov
lret
xor
jp
or
jge
jge
stos
cltd
jo
daa
xchg
push
gs
push
scas
xchg
pop
enter
leave
dec
inc
add
and
xchg
push
ja
loopne
mov
push
mov
xchg
mov
dec
jmp
pop
push
mov
out
rcr
pop
or
test
divl
mov
jecxz
push
test
mov
mov
and
inc
gs
stos
fbstp
imul
push
repz
jo
cmp
sbb
xor
xchg
insb
sbbl
test
icebp
pop
incl
mov
jo
lds
cwtl
insl
ret
lods
stos
sbb
jne
cwtl
fiadds
ret
mov
pop
mov
pop
inc
subl
push
add
loopne
icebp
push
push
icebp
fwait
sbb
mov
outsl
dec
jmp
adc
push
cmpsb
dec
push
pop
sub
ret
aad
out
or
push
cmp
fs
sub
gs
cmp
pop
imul
and
sbbl
lcall
rcrl
jbe
pushf
xchg
jmp
or
adc
clc
in
sbb
dec
mov
pop
xchg
inc
push
call
arpl
addl
fucom
aam
sahf
push
jno
xchg
imul
pop
enter
push
xor
mov
sarb
stos
sbb
inc
test
push
int3
add
jne
sbb
call
dec
xor
adcl
lcall
dec
jo
fs
cltd
stos
shll
xchg
es
pop
in
dec
repnz
pop
pop
lock
lahf
push
adc
out
int
cmpsl
popa
mov
ss
insb
cmp
int
movsb
pushf
sub
shrb
inc
push
jle
shrl
mov
ja
jecxz
cmc
scas
pop
ja
cmp
outsb
cmp
pop
loop
sub
and
fiaddl
clc
mov
mov
cmpsw
jl
aas
xlat
adc
lock
adc
push
pushf
out
insb
cmpsl
sub
imul
lock
push
jecxz
scas
push
roll
or
push
xchg
pop
mov
push
and
pop
cmp
fnop
popf
addr16
mov
push
cmp
xchg
mov
add
cmp
sahf
or
adc
xchg
dec
stos
mov
or
movsl
pop
cmp
fwait
mov
cmp
cs
lret
int
or
inc
mov
adc
fidivl
loopne
out
or
cli
pop
pop
dec
cli
cld
dec
cltd
in
adcl
addb
jnp
xor
fs
movsb
movb
jnp
into
adc
mov
mov
pop
dec
or
and
or
mov
push
and
xorl
inc
jg
dec
test
out
push
adcb
push
jge
fstps
cmp
repnz
popf
fadd
pop
rorb
je
imul
ja
pop
clc
mov
pop
push
push
cmp
fldenv
pop
inc
add
in
mov
fists
cmp
mov
loopne
rorl
xor
sub
push
cwtl
lea
and
xchg
into
cltd
nop
jl
stos
ljmp
fcoms
int3
popf
ss
cmp
movsl
enter
or
inc
js
movsl
mov
mov
mov
push
iret
imul
cmpsb
inc
and
mov
jne
out
cld
js
inc
cltd
in
iret
xorb
clc
or
push
movsl
out
dec
mov
adc
add
test
lods
gs
daa
std
sbb
cltd
cmp
and
xchg
adc
ljmp
mov
stos
scas
ret
sti
les
in
dec
loopne
or
rorl
stos
sbb
adc
cmp
andl
add
repnz
mov
or
js
and
or
jle
in
mov
leave
imul
push
cmpsb
xor
pop
or
sub
aas
jo
and
cwtl
repz
nop
xchg
jp
cs
push
mov
cmc
outsl
push
mov
ja
push
lea
test
pop
lea
jb
push
data16
adc
testl
sub
mov
imul
sbb
push
mov
or
push
adc
cs
mov
jb
bound
pop
xchg
push
mov
testl
movsb
push
jl
adc
and
xor
fcmove
pop
cmp
sbb
mov
clc
xchg
mov
pop
iret
sbbb
ss
adc
mov
pop
lods
xchg
fildl
mov
cmp
scas
mov
lret
add
jp
pushf
fiadds
xchg
movsb
ljmp
dec
or
jo
iret
pop
mov
repz
inc
fldcw
movsl
inc
xchg
add
iret
nop
mov
xchg
fadds
xchg
into
hlt
mov
inc
cmp
lret
or
pop
je
ret
sub
dec
imul
int
and
mov
jb
es
outsb
std
pushf
rclb
add
js
dec
lods
ss
cmp
xor
cmp
sbb
fstpt
in
pop
icebp
aam
adc
sub
and
sub
dec
in
adc
push
mov
jae
and
out
pop
movsl
push
xchg
jae
testl
and
dec
data16
imulb
loopne
dec
jp
cli
roll
dec
mov
repz
push
daa
pop
aas
add
add
out
int3
faddl
xlat
mov
leave
jl
rorl
mov
insb
ret
push
movsb
fisubl
icebp
xchg
data16
xchg
ljmp
aas
push
add
lcall
dec
pop
in
lods
push
dec
lcall
lret
xor
dec
shl
jne
loope
cmpsb
ss
sbb
popf
xchg
push
xor
outsb
mov
pop
call
out
test
sub
push
jp
pusha
jae
mov
in
xchg
aas
bound
jbe
adc
sbb
punpckhwd
int3
icebp
xlat
test
cmp
imul
leave
pop
mov
aam
jno
mov
out
xchg
mov
dec
add
stos
in
xor
sbb
scas
push
pop
sar
mov
cmp
adc
pop
adc
inc
loop
jmp
mov
pop
inc
jnp
js
lea
xor
jle
add
ficomps
test
aas
dec
jp
pop
sub
stc
call
fadds
jbe
loope
push
push
cmp
sbb
repz
loop
sar
inc
lock
pop
cmp
sbb
cmp
test
notl
xlat
mov
sub
adc
adc
loope
daa
insl
fwait
jl
rcr
int3
push
je
adc
mov
imul
insl
xor
cmpsl
aam
inc
in
and
rcl
pop
and
into
inc
xchg
mov
fcoms
repz
lahf
into
out
mov
lret
das
xchg
imul
fs
and
or
mov
inc
enter
push
push
cmpsb
or
mov
loop
xchg
mov
push
out
lret
mov
add
imul
dec
pop
sbb
lret
add
and
dec
dec
stos
xchg
jle
xchg
int
adc
mov
fidivrs
bound
jl
lret
rcll
popa
test
push
imull
outsb
mov
and
gs
mov
cmc
arpl
mov
and
stc
imul
out
lea
outsl
movsl
push
jmp
lcall
rcrl
sub
clc
push
push
cmp
mov
xor
arpl
int
cs
stc
enter
add
outsl
popa
mov
mov
cwtl
mov
outsl
jge
mov
xchg
mov
push
in
xchg
cmp
mov
push
fwait
lods
dec
sti
pop
daa
popa
push
xchg
push
in
inc
ss
lock
sub
loopne
pop
mov
mov
adc
jl
sbb
out
imul
mov
lock
xchg
fistps
cmp
fstl
int3
out
sbb
fwait
xchg
cmpsb
loop
xchg
jbe
mov
mov
lret
push
cmp
mov
inc
or
out
cmpsl
clc
das
push
pushf
lret
xchg
xchg
int3
inc
in
adc
into
sti
popf
pop
pop
inc
mov
cltd
xchg
fisubl
mov
scas
cmp
mov
psllq
out
xchg
inc
aam
movsb
insb
aas
lcall
xchg
int
loopne
sti
jl
ds
idiv
mov
cmp
dec
test
test
cwtl
dec
orb
sahf
fisttps
shll
leave
es
sbb
push
mov
or
jne
push
cwtl
lahf
ss
pop
js
mov
inc
dec
xchg
clc
arpl
call
inc
rcll
repz
movsb
popf
mov
mov
int3
cmp
adcl
mov
leave
insl
adc
sahf
mov
std
cltd
sub
call
rorl
out
mov
dec
cmp
lea
xchg
lret
test
push
mov
add
dec
lods
sbb
loope
xchg
adc
sub
dec
fisubs
repz
mulb
fsts
popa
cld
iret
es
mov
popa
push
loop
xlat
stc
push
cmp
jns
push
sbb
outsl
sbb
sub
ret
loope
mov
mov
pop
leave
int
ficompl
mov
aam
inc
arpl
aaa
push
jae
inc
add
sarb
aam
cmp
xor
aam
popa
ss
push
scas
clc
mov
out
push
lret
idiv
adc
jae
xlat
jp
xor
in
push
and
cmpl
jbe
mov
inc
roll
xchg
clc
xchg
stos
dec
inc
mov
ja
fdivs
fldcw
stos
and
dec
movsb
int
adc
pusha
mov
push
jmp
jb
and
or
or
or
test
sahf
push
xchg
xor
xor
sbb
mov
mov
xchg
mov
fisttpl
adc
mov
xchg
out
jg
int3
inc
inc
mov
cmp
cmp
mov
icebp
int3
sub
mov
out
insl
and
test
scas
mov
mov
xchg
sub
in
xor
into
outsb
mov
jbe
icebp
or
push
sub
fs
cmp
push
insl
xlat
xchg
dec
dec
mov
mov
movsb
pusha
repnz
cs
mov
dec
inc
stos
dec
aad
ret
xchg
test
lret
into
enter
nop
pushf
cmp
andb
shr
push
pop
inc
pusha
mov
jge
mov
aaa
repnz
fldenv
in
or
mov
xlat
and
data16
and
imul
arpl
aam
repnz
pop
jecxz
mov
repz
pop
jns
xchg
rcrl
pushf
xchg
fwait
jl
adc
test
int
js
push
test
in
stc
mov
enter
jecxz
dec
xlat
aas
xor
mov
sub
outsb
push
aaa
insl
imull
movsl
sahf
add
or
inc
hlt
add
sahf
ja
test
movsl
js
stos
cmp
in
imulb
rol
sub
das
or
lods
fwait
pop
and
mov
lods
repnz
mov
pop
lahf
push
notl
data16
mov
fldenv
jp
push
mov
mov
dec
in
mov
sar
out
cmp
jle
or
popf
lock
loopne
aam
ret
xor
rcrl
xor
inc
dec
push
and
js
js
cmp
inc
mov
add
push
clc
hlt
lcall
jg
js
or
push
adc
int
inc
cmp
jae
cmpsb
pop
jnp
dec
and
or
dec
mov
mov
out
int
js
adc
push
rcr
dec
pusha
lods
cld
adc
sti
or
sbb
cld
test
inc
lock
les
add
mov
xor
mov
int
je
dec
xchg
loope
adc
jns
add
pushf
aad
sbb
sti
ss
inc
and
dec
cs
in
cmc
shlb
fistps
gs
dec
push
repnz
sub
subl
test
repz
xchg
xchg
inc
pop
lret
movl
inc
fldcw
add
outsl
xor
scas
addb
cmp
das
pop
loop
cmc
jne
test
and
in
scas
aaa
into
sub
fwait
shrl
jge
pop
popf
hlt
pop
sbb
inc
mov
movsl
pop
mov
dec
ret
pop
pop
fistl
jbe
lea
sbb
inc
sbb
cmp
insl
int3
rolb
lret
sub
test
mov
mov
mov
popa
jmp
push
jns
fcoml
cmpsl
dec
inc
push
aas
xor
cwtl
pop
clc
and
scas
lds
ds
mov
cmp
mov
xor
subb
add
das
mov
lods
popa
addr16
sub
or
es
adc
imul
dec
sub
xchg
mov
faddl
popf
xor
mov
es
inc
sub
mov
xchg
imul
arpl
sbb
roll
and
mov
fs
ficomps
jp
lods
test
lods
or
roll
icebp
in
sbb
in
jl
add
imul
and
loop
cmp
gs
add
add
cmp
and
dec
pusha
cwtl
jae
jecxz
lods
inc
mov
scas
mov
mov
and
insb
ret
adc
icebp
add
std
inc
jbe
cmp
aam
mov
jo
sbb
mov
mov
movsb
sbb
aas
cmp
movlps
pop
mov
adc
sbb
push
leave
in
inc
rcrl
dec
mov
dec
xor
pop
cmp
pop
mov
push
outsb
aas
push
mov
sbb
adc
es
jl
ret
mov
aad
push
push
dec
or
and
ss
movsb
sti
push
imul
sti
test
ret
aad
mov
dec
sbb
jmp
jmp
push
push
sbb
cmp
mov
add
jge
inc
dec
cmp
js
into
mov
inc
xchg
arpl
mov
iretw
or
es
mov
fldl
jle
mov
int
and
inc
cmovg
lods
mov
adc
jecxz
pop
rep
pop
bound
inc
aaa
ljmp
push
es
es
pusha
push
in
lds
mov
hlt
bound
mov
pop
testb
dec
incb
jbe
and
lock
call
dec
rcrl
lahf
loopne
add
in
sbb
pop
push
inc
and
pusha
insb
out
jnp
jns
into
lods
mov
jb
orl
xchg
mov
mov
xor
sub
js
jns
or
lcall
xor
pop
push
scas
mov
adc
add
pop
pushf
ds
movsl
pushw
pop
stos
cmp
fs
mov
jnp
int
mov
dec
xchg
clc
cmpsb
sub
ficoml
cmp
jnp
and
dec
push
ret
mov
cmp
leave
lods
adc
xor
push
and
cwtl
pop
gs
inc
adc
lds
xchg
fnstenv
loopne
imul
leave
rcrb
and
mov
ds
lods
or
dec
je
xchg
push
pushf
xchg
and
data16
test
jg
lock
ds
push
out
inc
push
push
test
ja
mov
pop
jae
pop
or
pop
add
mov
mov
test
xor
push
xor
pop
mov
push
dec
mov
repnz
or
in
loop
jo
enter
divl
dec
out
mov
or
fldenv
cmpsb
push
pop
pusha
xchg
nop
lds
dec
xchg
mov
adc
adc
out
dec
jle
dec
mov
mov
lods
nop
inc
popa
aas
jo
hlt
jmp
inc
mov
sub
cld
inc
and
xchg
sahf
rol
fisubrl
hlt
pop
jae
ret
mov
mov
jnp
stos
out
sbb
clc
sbb
lods
pop
sub
jns
inc
mov
add
fsubrl
mov
aaa
data16
mov
cmp
push
pop
inc
repz
pop
fildll
out
ljmp
lods
or
cld
mov
jae
pop
mov
push
sub
cmp
jle
mov
sbb
inc
mov
and
cs
push
mov
mov
xchg
ja
pop
test
lret
mov
js
addl
fwait
aad
mov
pop
shll
or
adc
cmp
es
cmp
into
pop
inc
adc
inc
or
seta
pop
mov
lods
movsb
or
es
dec
insl
in
xlat
mov
pop
xchg
xchg
and
pop
cmc
sbb
push
rorb
sub
data16
lods
xchg
nop
fstl
dec
hlt
inc
pop
xchg
fmuls
stos
jp
movsl
stos
popa
sub
cmpsb
push
fstl
cltd
adc
or
pop
mov
cld
push
fcmovbe
push
xchg
bound
add
ss
mov
jl
inc
push
push
sbb
clc
gs
cmp
adc
pop
inc
xchg
xchg
ret
int3
sbb
insb
mov
jbe
jp
jns
movsl
add
lds
xchg
iret
mov
outsl
ja
adc
leave
adc
aad
scas
jge
pushf
ficoml
arpl
mov
loope
jl
lcall
mov
loope
sbb
data16
idiv
push
jbe
iret
and
pop
add
cmpsb
mov
in
xchg
test
stos
mov
ret
aad
mov
push
fsubs
jp
lods
lret
sub
ss
mov
push
or
push
iret
pop
push
mov
mov
pop
and
es
test
leave
pop
pop
inc
movsl
pop
rorb
mov
push
push
mov
jle
or
daa
movsl
adc
das
loopne
push
addl
insl
and
sub
cmp
xor
shr
sub
xchg
andb
ret
jae
jne
je
das
mov
test
pop
mov
gs
dec
add
jl
dec
cli
adc
shlb
push
adc
setno
mov
daa
into
dec
or
mov
clc
and
pusha
push
mov
data16
popa
mov
cmp
stos
in
int3
ret
imul
jne
rcrl
mov
push
sbb
add
jo
fildll
leave
push
and
push
out
outsb
cld
cmc
mov
bound
xchg
jns
cwtl
xor
xor
and
xchg
movsl
out
insb
test
test
inc
sub
inc
mov
punpckldq
dec
cmp
icebp
sub
loop
jl
push
enter
data16
or
cwtl
dec
imul
pop
adc
or
out
arpl
xchg
mov
dec
cltd
adc
and
pop
and
sbb
fnstsw
stos
push
inc
jns
xor
lretw
lret
add
cmp
cs
int
sbb
mov
rcll
inc
sbb
sub
mov
in
adc
inc
and
jecxz
stos
imull
cmc
pop
and
lret
stos
jl
test
sbb
jo
jb
leave
sbb
or
loopne
bound
push
inc
mulb
mov
sub
rclb
add
and
add
xchg
vsqrtsd
xor
cmp
lds
popf
jge
icebp
mov
es
loope
movsb
lods
sbb
dec
xor
fimull
sbb
jne
mov
sarl
inc
cld
out
adc
lahf
add
jns
cmp
cmpsl
loopne
inc
imul
sbb
sbb
or
rcrb
movsb
jnp
das
xchg
test
sbb
xlat
cmp
leave
js
pop
iret
xchg
cmpsb
fwait
mul
xchg
add
sbb
das
adc
movsl
jno
inc
mov
ds
inc
popf
push
lea
stos
loop
int
insb
test
imul
jle
inc
sahf
mov
movsb
cmp
iret
sub
scas
pop
sbb
dec
mov
sub
out
dec
adc
inc
adcb
push
out
cmp
mov
xorb
sub
ficomps
pop
pop
inc
cmp
inc
ficompl
push
lret
clc
push
or
outsb
add
add
sbb
push
insl
push
das
jmp
mov
inc
inc
out
js
test
vmovdqu
aaa
out
sarb
or
arpl
sahf
mov
jmp
push
sub
xor
xchg
and
and
cmp
cmpsl
mov
lcall
add
sub
xorl
mov
repnz
sbb
lea
cmc
cli
idivl
cmp
pop
test
bound
stos
pusha
push
pusha
mov
lea
sub
jns
aaa
or
std
insb
insb
aam
call
jno
scas
mov
xchg
rcll
mov
mov
inc
pop
aas
cmpsl
adc
inc
jp
lret
sbb
out
mov
or
stos
mov
addl
sbb
xchg
push
inc
into
sbbl
aaa
sbbb
addl
inc
int
pop
mov
mov
and
mov
xchg
and
shrl
sbbb
in
fisttps
jle
xchg
mov
popf
cmpb
in
cmpsb
inc
push
arpl
jle
lock
mov
in
loope
mov
ss
cmpb
addr16
push
mov
mov
and
xor
xor
repnz
mov
sub
push
or
repz
mov
add
push
mov
or
pop
push
pop
push
sbb
xlat
mov
outsb
jp
inc
jl
xorb
push
bound
rclb
or
repnz
mov
xchg
mov
and
loope
cmpsb
aad
pop
cmp
xor
popf
jl
jle
mulb
xchg
aas
inc
movsb
inc
cwtl
lock
mov
and
inc
es
popa
cmp
mov
mov
leave
pop
clc
shll
mov
aam
or
xchg
push
pop
loopne
xor
shrb
adc
nop
ret
pop
pop
test
std
xor
mov
mov
mov
adc
test
out
es
aas
cmp
jns
push
shlb
xchg
aas
in
test
mov
or
in
inc
dec
mov
aam
jbe
cmp
int3
mov
or
and
and
fisubl
je
sarb
das
dec
jae
int3
imul
mov
jmp
hlt
outsb
stos
push
sbb
jle
mov
xor
or
cmpsb
ret
test
aaa
fldl
inc
into
sbb
scas
dec
scas
mov
add
cmp
repnz
and
add
push
xchg
popa
push
mov
sbb
sahf
nop
mov
cltd
shl
or
inc
sbb
jge
outsl
sub
push
mov
das
xor
faddl
and
call
adc
mov
and
movsl
mov
or
cmpl
shll
loopne
enter
mov
adc
outsl
mov
clc
sbb
lods
or
cmp
pop
mov
daa
mov
adc
ret
sbb
sbbl
jo
push
lods
addr16
pop
dec
xor
jl
cmp
pusha
sbb
mov
in
mov
xor
repz
mov
dec
jl
ret
and
ret
sbb
adc
cmp
into
int3
stos
cmp
test
jns
adc
mov
push
loopne
dec
test
add
aam
subl
xor
movsl
data16
pop
mov
mov
mov
cwtl
and
fiadds
loopne
xchg
and
hlt
add
fwait
in
and
xor
jbe
or
mov
lods
sub
jns
xchg
repnz
add
repz
mov
inc
aas
push
sbb
mov
xchg
xchg
ds
out
or
xor
fbstp
dec
pop
loopne
test
aad
inc
add
sbb
add
popf
les
mov
adc
jne
in
mov
mov
ljmp
inc
int
xchg
aaa
xchg
add
bound
iret
xor
push
cmc
or
dec
sbb
pop
mov
bswap
rorl
inc
inc
xorb
shlb
lret
dec
int3
movsb
insb
jnp
aas
clc
fs
sbb
popf
shrb
cli
sti
adc
dec
mov
jno
inc
or
gs
xchg
mov
cmpsb
dec
lcall
cs
insl
jp
shrl
push
call
cmp
inc
out
mov
xlat
push
mov
adc
aas
and
push
or
orb
adc
fldt
loopne
gs
or
push
pop
pushf
push
in
or
mov
add
push
push
jno
xor
sub
loope,pn
dec
orb
push
xchg
cmpsb
cmc
testl
cmpsb
clc
adc
push
je
clc
nop
fnstcw
xchg
pop
mov
xor
dec
lret
ds
decb
daa
mov
out
sti
push
sbb
push
leave
sbb
inc
fxch
popf
fcmovnb
xchg
pop
push
out
ror
cmc
dec
xchg
mov
sbb
mov
mov
pop
andb
test
fiadds
fnstenv
and
call
mov
in
pop
imul
mov
scas
dec
mov
mov
int
push
push
xchg
xor
xlat
cwtl
outsl
pop
outsb
sub
fimuls
add
daa
fldenv
inc
mov
sti
adc
or
stos
mov
push
clc
fsubrl
sub
xchg
aad
push
ljmp
imul
mov
sbb
fldt
add
jl
aad
or
dec
pop
push
inc
dec
sbb
mov
call
fxch
daa
shll
or
inc
lods
test
test
push
shl
cmp
mov
xchg
fcoms
mov
mov
dec
adc
aad
or
hlt
nop
mov
adc
mov
jae
or
inc
mov
fimull
int3
push
pop
sbb
insb
aaa
call
mov
cmpb
adcl
das
flds
out
mov
cmp
into
lock
adc
push
enter
arpl
push
jmp
loope
mov
pop
je
cmc
mov
mov
fcmovbe
scas
dec
jmp
inc
mov
insb
in
sub
xchg
es
push
pop
jns
dec
xor
ljmp
cmp
xchg
call
sbb
inc
xchg
sub
mov
push
adc
inc
inc
xchg
loopne
jl
in
dec
sub
fistps
dec
or
aaa
ss
mov
push
jne
jne
fdivl
or
xlat
cmp
inc
daa
stos
flds
fwait
push
mov
add
add
push
mov
adc
adc
mov
mov
mov
icebp
sbb
jb
xor
lods
lret
jle
xor
into
push
aad
fabs
jb
insl
cmp
test
movsb
add
or
xchg
pop
xlat
xor
jno
dec
mov
inc
xor
xchg
in
mov
mov
cmp
ja
imul
repz
push
dec
outsl
test
imul
sub
or
inc
dec
fcmovne
sbb
inc
daa
pop
pop
ja
and
arpl
xchg
or
imulb
push
and
cmp
movsl
jae
dec
sub
cmc
adc
js
addb
sbb
mov
addb
and
rcr
cltd
test
sub
insl
lcall
and
jg
lock
cmp
adc
cmp
nop
inc
sbb
cmpsb
mov
dec
push
mov
fwait
test
out
es
mov
lret
insb
imul
dec
push
lcall
test
scas
addl
adc
sahf
cmpsl
mov
loope
and
dec
mov
xchg
jae
pop
test
arpl
movsbl
mov
sbb
xchg
pop
add
popf
jecxz
inc
pop
stos
out
add
add
ret
pop
or
add
loop
fstps
or
xor
sub
fsubp
ret
or
pop
mov
add
adc
mov
bound
cmp
fmuls
xor
repz
inc
cmc
sub
add
xor
loop
into
mov
lahf
xor
pop
gs
push
icebp
adc
xchg
scas
lods
icebp
pop
sbb
inc
insl
xchg
cmpsl
jae
and
insb
fdiv
pop
mov
aam
lret
insb
pop
mov
mov
pop
mov
mov
sbb
ret
subb
mov
xlat
imul
outsl
aad
jno
mov
imul
inc
jns
test
inc
jno
cmpsb
lods
je
idivl
inc
push
test
mov
addr16
pushf
faddl
and
push
or
mov
into
hlt
mov
jmp
not
aas
cwtl
shl
stos
clc
cld
iret
lret
push
aad
repz
imul
push
mov
popf
mov
mov
xchg
popf
ret
vmovaps
xor
sub
add
lcall
pusha
movsb
add
xchg
ret
jle
push
adc
out
stc
dec
call
aaa
ss
das
pop
mov
mov
inc
fs
pusha
cmp
sahf
mov
xchg
in
xor
jp
adcl
pop
repz
int
packsswb
pop
out
or
imul
arpl
lods
das
ret
imul
daa
push
aaa
loopne
in
and
cmp
mov
popf
xchg
or
pop
daa
dec
lret
mov
in
lock
data16
sub
add
addr16
mov
es
push
cmp
or
add
cmpsb
inc
add
xchg
ret
and
xorps
lock
lahf
outsl
xchg
pop
scas
mov
cmp
xchg
push
pop
fbstp
lcall
test
push
cmp
inc
cmp
xor
mov
outsb
inc
cli
mov
inc
fidivrs
or
xchg
push
out
xor
mov
pop
mov
out
adc
mov
xor
movsb
adc
pushf
inc
ror
repnz
dec
fldenv
ds
lea
sbb
cmpsb
data16
test
in
mov
popf
aad
xchg
xor
xchg
push
add
sbb
inc
pop
cmpsl
or
adcb
popf
push
mov
sub
push
xor
mov
pop
lods
test
sub
in
jnp
inc
lcall
jg
xorb
fwait
iret
in
je
or
and
sub
clc
mov
pop
rorb
je
sarl
incb
xchg
popa
mov
add
pop
dec
push
adc
adcl
out
scas
dec
fidivl
shll
lret
xor
add
xlat
dec
xor
cmp
or
sbb
xlat
sbbl
add
add
sbb
lcall
movsl
jp
imul
xchg
dec
test
adc
and
push
out
in
aas
shrl
jo
mov
mov
dec
inc
mov
cmp
sahf
mov
popa
adc
popa
popa
adc
cmp
lods
jae
jle
and
mov
inc
scas
sub
jo
dec
jo
pop
pushf
xor
or
aam
sub
fwait
and
fistps
xchg
cli
mov
add
jb
push
in
xor
jb
mov
push
stc
pop
icebp
aas
imul
sbb
shll
fidivrs
shll
mov
or
or
mov
inc
iret
sub
jge
ljmp
andl
cmpsb
sub
mov
add
ja
daa
iret
lahf
or
cli
in
js
mov
int3
notl
pop
and
xchg
lods
arpl
push
xor
lcall
cmp
jl
lds
sarl
lock
jl
sarl
aam
add
mov
mov
mov
adc
es
lret
in
mov
pusha
cli
xchg
inc
and
add
mov
add
add
add
push
je
mov
sbb
outsb
pop
in
dec
pop
and
add
xchg
jo
scas
jg
cli
imull
adc
xchg
rcr
fcompl
test
es
dec
mov
xor
mov
inc
fdivrs
lret
sub
push
lret
push
mov
lahf
lea
dec
testl
xor
enter
adc
scas
sahf
cmp
dec
popa
rcll
icebp
dec
jp
xor
fmuls
inc
in
out
jle
push
push
movsl
pushl
stos
movsl
sarl
sahf
in
mov
daa
or
cmp
xchg
stos
ret
dec
sbb
pop
movsb
sahf
sahf
push
mov
mov
repnz
dec
lds
enter
loope
mov
mov
xchg
sbb
or
push
mov
sbb
mov
nop
loopne
insb
xor
mov
sbb
jl
sub
jne
outsl
jns
sub
push
movsl
lahf
pop
xchg
test
aaa
lcall
inc
roll
call
dec
lret
call
mov
sahf
loopne
stc
push
in
inc
pop
adc
insb
int3
rol
mov
xchg
cmp
enter
push
jmp
inc
ds
push
out
imul
pushf
test
test
push
fisttpl
and
xor
xchg
cmp
xor
cmp
xor
aas
inc
dec
loop
push
fs
shrb
push
xor
enter
lret
loopne
mov
jp
call
addl
lods
cmp
icebp
xchg
dec
xor
in
xchg
repz
notl
sete
sbb
arpl
sub
movsl
cmc
clc
bsr
loope
mov
push
shll
add
inc
lds
out
les
mov
inc
jg
mov
sbb
mov
sbb
shll
cmp
scas
xchg
jb
xchg
sbb
sbb
xorb
mov
jns
jne
or
xchg
and
outsb
jmp
mov
xor
dec
push
cmpsb
pop
movsl
nop
xchg
je
cmpsb
inc
xchg
fidivrl
loope
faddl
fscale
jle
sti
nop
lods
mov
cwtl
push
mov
jecxz
subl
sub
movsb
hlt
xor
add
fbld
ja
test
ss
jecxz
insb
xor
fisubrs
ss
push
shrl
fucomi
push
pop
mov
mov
fldl
cld
pop
in
rclb
pop
movsl
cltd
mov
adc
dec
gs
call
mov
push
in
aam
cmpsb
jns
mov
mov
ljmp
push
mov
lret
dec
aam
in
xchg
in
push
out
ss
adc
jecxz
ss
mov
dec
roll
stos
adc
addr16
dec
xchg
ds
scas
and
lock
lcall
insl
test
jns
jnp
repz
push
pop
sbb
push
or
pushf
push
push
fucomip
and
clc
jg
stc
cli
pop
lahf
pushf
mov
int3
cli
icebp
sbb
xor
push
adc
ja
jnp
inc
insl
adc
out
sbb
xor
inc
or
add
adc
orl
loopne
or
outsl
xchg
mov
stc
test
sarl
cmpsl
jbe
aas
popa
xor
mov
mov
or
jecxz
inc
out
xor
cmp
out
add
repnz
jne
insb
jge
mov
adc
cli
push
fdivl
stc
insb
mov
adc
push
iret
jbe
xchg
mov
data16
fwait
mov
repnz
xchg
xchg
stos
rorl
cmp
ret
xor
cmp
or
lds
sbbb
xor
std
lea
cmpsl
and
pop
jmp
jmp
inc
mov
mov
loop
push
jno
cltd
cli
jl
sbb
adc
stos
sbb
jl
lcall
popf
imul
cli
push
or
cmpsb
pusha
daa
ljmp
inc
jb
dec
push
adc
daa
outsl
sti
ljmp
leave
mov
leave
xor
mov
shlb
out
and
jae
add
enter
data16
rorl
mov
jno
fadds
les
loopne
movl
das
push
insl
sbb
xchg
sub
sub
xchg
xchg
pop
push
outsl
scas
out
stos
lock
mov
gs
cmp
iret
stos
jmp
inc
andl
sbb
std
ss
addr16
push
mov
mov
pop
push
popf
ret
lods
sarl
cmpsb
adc
ret
fs
mov
out
decl
je
mov
mov
sbb
loopne
push
movsb
sti
xor
mov
enter
mov
imul
sub
arpl
int
and
or
mov
idivl
jnp
repnz
mov
xchg
ret
pop
in
and
test
and
lods
fstl
mov
inc
nop
adc
outsb
call
mov
xchg
fisttpll
adc
outsl
shlb
lret
dec
mov
push
lcall
shll
cli
pop
add
sbb
sahf
stc
loop
pop
iret
mov
xchg
push
lahf
incb
sbb
push
push
adc
push
cmp
xor
je
fbstp
cmpsl
jo
mov
dec
clc
test
push
mov
cmp
xlat
pop
insb
xor
mov
movsb
loop
sub
dec
popf
ss
dec
dec
les
pop
je
inc
cltd
cmc
and
testb
cli
test
inc
fdivrl
jg
das
rcrb
cmp
sar
in
addb
mov
fdivrp
cmc
dec
mov
adc
inc
scas
add
cmpsb
push
cld
jle
sahf
das
adc
lret
xor
cmp
jns
push
stc
push
stos
or
dec
xor
xor
imul
mov
fadds
cmp
jnp
imul
xor
add
cmpsl
mov
clc
jp
stos
je
ds
aam
nop
and
insb
or
xchg
dec
in
jge
fimull
mov
fmul
imul
lahf
test
lret
mov
mov
sti
in
sbb
call
insb
pop
add
outsl
movsl
aas
xor
add
mov
lret
xchg
inc
jno
add
data16
inc
push
cmp
xor
in
mov
push
adc
cmpsl
adc
mov
mov
xchg
aam
aad
inc
push
cmpsb
mov
push
stc
decb
in
mov
push
bound
test
scas
arpl
inc
sbb
imul
sub
push
or
inc
xchg
cmp
fidivl
sti
xor
jns
sbb
and
adc
push
lds
out
mov
cmp
fdivrs
xchg
mov
mov
and
imul
jecxz
lret
movsl
pop
aas
jnp
jmp
cltd
mov
jo
fdivrs
and
popa
mov
push
out
push
lods
push
imul
jp
sti
into
adc
push
cmp
mov
adc
in
call
sub
cmp
adc
dec
mov
or
or
jle
aam
lcall
lock
adc
mov
or
adc
cld
and
outsl
lds
in
and
push
inc
scas
pop
sahf
rclb
insl
stos
clc
addr16
adc
xchg
popa
int
data16
or
mov
push
lcall
fistpll
call
sub
ja
outsb
lret
stos
cmp
xor
in
mov
aaa
mov
xchg
enter
ljmp
adc
fcoms
es
cmp
cmp
mov
add
lds
or
and
jnp
sbb
add
ffreep
lret
push
loope
enter
mov
inc
loope
pop
jmp
jle
pop
xchg
ficomps
enter
stc
in
leave
ret
jle
mov
fnstenv
shll
pop
aam
fldenv
daa
dec
and
lret
add
testb
iret
clc
jge
iret
call
mov
mov
xor
ret
mov
add
pop
mov
dec
push
cld
test
jb
bound
fdivs
arpl
jae
sbb
push
xchg
leave
out
test
push
jp
dec
scas
in
mov
cmc
jecxz
push
dec
mov
sbb
cwtl
mov
mov
sub
aaa
mov
ljmp
test
out
out
mov
mov
sub
mov
add
jne
icebp
popa
movsl
not
es
jns
jl
ret
push
xor
lahf
sub
fnstsw
sbb
shll
into
pop
vfrczsd
loope
adc
xchg
ret
xchg
dec
jmp
fs
jns
adc
add
rcrl
xchg
daa
fdivrs
clc
cmovl
shlb
stos
ja
push
xor
xor
pop
mov
lods
fwait
sar
cmp
int
sbb
jno
mov
hlt
jle
push
mov
stos
sub
and
stc
dec
and
push
mov
mov
sub
mov
roll
jbe
mov
int3
rorl
or
pop
out
iret
sbb
jne
and
mov
push
test
jecxz,pn
push
sub
lds
mov
jmp
pop
add
stos
ret
inc
inc
lods
out
mov
fstpt
adc
sbb
fldl
inc
int3
pusha
dec
jnp
sbb
xchg
jo
sbb
and
jnp
int
icebp
gs
jbe
add
test
push
jl
mov
cmp
loopne
mov
mov
xor
adc
mov
jmp
xchg
xchg
pop
xlat
pushf
push
pusha
pop
aaa
ret
je
dec
dec
roll
and
push
fcompl
scas
sbb
mov
add
cmpb
inc
push
mov
stos
data16
xchg
imul
into
xchg
push
cwtl
adc
xor
loope
and
or
push
mov
mov
xor
mov
imul
js
testb
out
test
fwait
sub
cmp
mov
push
test
xor
jge
push
mov
cmc
outsb
mov
sti
sbb
mov
ret
loop
out
adc
or
adcl
movsb
pop
add
push
sub
adc
dec
adc
arpl
jl
and
pushf
inc
sti
jmp
push
xchg
ret
std
movsl
ljmp
mov
dec
and
hlt
xchg
ficoms
sub
cmc
repz
das
xor
xchg
int
lahf
sub
shll
dec
mov
xchg
or
psraw
cltd
fidivrl
pop
fcmovne
insb
adc
dec
dec
mov
movsl
pusha
movsl
je
gs
aam
repz
rcl
sub
adc
mov
inc
negl
inc
push
outsl
data16
out
daa
jne
mov
outsb
jge
inc
sbb
sbb
inc
jg
mov
movsb
lock
scas
loope
xor
sub
repnz
out
cmp
imul
add
lods
pop
xorl
push
jecxz
xor
lcall
push
lea
and
shrb
scas
pushf
je
inc
sbb
outsb
lds
mov
lcall
sti
jb
inc
xor
adcl
insb
mov
in
enter
jmp
pop
movsb
adc
xchg
scas
push
ds
stos
cmp
jle
push
lahf
push
xchg
add
fisttpll
sub
pop
mov
jl
jne
sbb
adc
test
rcr
xchg
lods
jge
sbb
adc
xor
sahf
jl
gs
cwtl
repnz
xor
sar
mov
mov
ljmp
imul
mov
sbb
rorl
fdivs
mov
sub
in
inc
sub
cmpsb
xor
or
out
cltd
popa
jg
lret
inc
sbb
popa
scas
push
pop
test
fadd
cld
jecxz
sub
repnz
mov
mov
mov
push
push
sub
arpl
ret
cmpsl
cmp
pop
sub
gs
loop
mov
rcl
push
sbb
mov
add
bound
inc
inc
into
mov
rorl
push
out
js
add
and
data16
pusha
lds
cmp
enter
mov
imul
fisttpl
jne
inc
xchg
xlat
mov
ficompl
mov
out
mov
mov
xchg
mov
mov
sarb
xchg
pushf
ret
mov
jg
out
adc
xor
fbld
inc
in
sti
adc
mov
aam
xchg
clc
dec
and
xchg
mov
inc
cltd
jmp
mov
dec
repz
hlt
out
cmp
or
je
dec
add
jle
dec
sub
dec
ficomps
lcall
push
sbb
outsb
out
add
inc
loope
mov
lock
inc
add
adc
push
ficomps
sub
nop
ljmp
dec
movsb
outsb
test
cld
stos
lcall
pop
loopne
test
cmc
out
and
pop
xor
mov
pop
push
outsl
and
jno
sti
popf
cmp
jbe
pop
popf
cmp
xlat
pop
xchg
inc
ss
repnz
mov
pop
es
jbe
lret
adc
daa
push
dec
mov
negl
js
xor
ja
push
sbb
mov
xchg
pop
pusha
jp
aas
and
scas
adc
aad
mov
cmpsb
cmp
lods
xchg
jl
int3
imul
or
sub
or
mov
scas
push
xor
loop
and
or
pushf
push
iret
add
sub
push
lea
clc
nop
add
add
nop
dec
sub
faddl
adc
aaa
lcall
mov
aaa
popa
mov
xor
lret
pushfw
lcall
loop
push
aaa
movsb
sti
xor
es
ret
mov
jmp
out
lods
push
insb
cs
or
cli
pop
mov
icebp
mov
xchg
rorl
push
mov
movsl
dec
inc
lcall
jbe
stos
pop
outsb
loopne
push
and
sbb
clc
mov
addr16
dec
mov
add
mov
or
fucomp
aas
xchg
rcll
sbb
mov
mov
mov
lcall
pop
xor
cmpl
mov
jns
bound
loope
cmpsl
rol
aam
or
pop
dec
test
jge
enter
adc
sub
lock
mov
rclb
mov
stos
jnp
imul
mov
cltd
test
lods
subb
mov
fstps
lret
clc
push
add
fneni(8087
dec
mov
sub
subb
imul
aam
insb
mov
pop
inc
lret
mov
or
lret
fs
pusha
into
mov
fdiv
dec
xchg
xor
sbb
xchg
stos
or
add
pop
add
push
nop
mov
test
cmp
cltd
hlt
ror
dec
vandnps
jae
scas
fstl
adc
ret
mov
adc
icebp
inc
or
sbb
jle
sbb
rcrl
jl
sbb
add
test
fs
mov
sbb
jg
inc
imul
add
mov
adc
fcmovbe
fs
cmpsb
jne
int
sub
add
repnz
or
scas
mov
sub
sbb
mov
jl
push
hlt
test
pop
sub
sbb
stc
ret
subb
xchg
jl
inc
lret
sub
adc
test
or
push
xlat
inc
test
das
jl
sti
xchg
lods
pop
cld
cld
pop
mov
mov
enter
cltd
out
test
and
xor
adc
sbb
push
into
inc
outsb
push
dec
mov
xor
lea
push
outsl
loope
sti
jb
jg
xor
mov
out
add
fcompl
repz
aaa
or
xrelease
dec
imul
push
sbbl
shll
lock
sbb
cltd
and
dec
btc
and
fisttpll
js
int3
mov
les
jp
inc
lods
mov
mov
dec
push
test
ja
je
movsb
adc
mov
xor
push
push
xchg
test
and
adc
xor
cmp
mov
daa
je
mov
repz
or
and
js
mov
mov
or
aam
push
lret
jae
jl
lea
push
xor
mov
les
out
scas
xorl
inc
mov
pop
fsubl
in
jne
push
adc
xor
sbb
inc
dec
cmp
dec
or
jecxz
xchg
scas
or
dec
lea
mov
and
and
mov
pop
lret
and
sarl
mov
mov
int
int
fisttpl
and
pusha
or
pop
inc
cld
xchg
std
and
inc
push
dec
pop
lods
cs
mov
ja
orb
mov
jne
loop
mov
in
xchg
push
xor
jg
sub
rorb
fs
cmp
sahf
cli
fs
hlt
or
loopne
movsb
stos
mov
gs
pop
jl
and
int
stos
xor
in
dec
mov
fidivrs
xchg
lahf
loop
cmp
mov
cmp
inc
sub
inc
sbb
adc
hlt
jnp
inc
mov
and
call
loopne
scas
xor
sub
jecxz
mov
inc
push
xor
jecxz
dec
xor
mov
lcall
loopne
outsl
test
push
cltd
out
scas
inc
pop
cmp
push
fs
mov
fidivrl
xor
cmpsb
inc
fldcw
js
inc
pop
adc
stc
mov
enter
jb
lcall
or
orb
cwtl
mov
lret
sarl
sahf
aam
mov
je
pop
push
push
jb
pop
cli
int
ds
jbe
mov
push
xchg
test
mov
jge
mov
scas
cld
outsl
mov
add
xor
popf
jae
sarb
add
ss
mov
sub
stc
sbb
dec
add
pop
or
shll
lahf
mov
dec
mov
or
insl
andb
nop
cmp
cmpsl
mov
pop
xchg
daa
push
push
lods
sahf
xchg
add
inc
jge
fldcw
arpl
mov
in
frstor
enter
and
and
mov
mov
adc
push
call
jnp
movsl
cld
out
int3
xchg
sub
scas
pushf
sbb
and
sbb
mov
and
iret
call
aas
loope
aam
or
sub
cmc
add
cld
or
cmp
je
in
scas
mov
pushf
out
dec
out
out
repnz
aam
or
loopne
mov
mov
aam
or
arpl
shlb
data16
aam
mov
rolb
xchg
xor
jae
jne
in
sub
lret
lret
aaa
jnp
xchg
adc
push
sub
jmp
rcr
cmp
and
mov
adc
jle
orb
xchg
cmp
sub
push
ds
notb
popa
push
imul
jl
jae
clc
leave
push
subb
adc
lods
test
mov
cmp
xchg
testb
and
xorl
insl
add
sbb
xor
sarl
pusha
and
and
push
fldcw
add
jnp
imul
shrb
imull
sbbb
out
pop
rcll
adc
scas
decl
gs
mov
mov
leave
pop
test
mov
cmp
outsb
mov
adc
cmp
sub
adc
nop
leave
jo
jne
mov
mov
cli
arpl
add
pop
pop
inc
aaa
scas
aaa
stos
pushl
and
and
or
inc
sub
out
xchg
push
mov
repnz
fidivl
stos
insb
pusha
xchg
sub
inc
dec
mov
int3
fisubrs
sbb
mov
dec
scas
insb
repz
hlt
or
test
cs
pop
stc
inc
or
lods
jne
frstor
add
mov
sti
testb
out
push
fstps
mov
dec
dec
gs
out
loope
add
xchg
testb
sbb
adc
or
adc
cmp
daa
scas
xchg
cmpps
clc
jae
out
and
xor
lcall
fistpl
ret
addr16
cmp
in
cmp
call
push
mov
gs
addb
or
movsb
inc
cmp
sub
flds
dec
ss
cmp
int3
xor
push
fwait
jns
sbb
sbb
adc
in
repz
mov
call
mov
mov
xchg
orl
inc
aas
xchg
mov
push
jg
loopne
outsb
push
inc
std
xchg
scas
sbb
mov
inc
inc
pusha
jp
fsubp
sbb
psllq
nop
out
or
test
hlt
push
pop
push
cmp
and
call
adc
orl
mov
clc
add
cmp
push
add
push
and
mov
jnp
xchg
shl
leave
pushf
loop
sbbb
and
int3
shlb
or
lods
aam
ja
leave
test
xchg
mov
sbb
xchg
dec
stos
push
je
and
pushw
fildl
sub
pop
push
repz
pop
cmpb
ss
xchg
in
adc
jp
les
in
ja
xchg
adc
mov
rcll
adc
push
divl
xchg
adc
pop
fsub
in
jge
fcmove
imul
aas
out
int3
cmp
xchg
ja
in
jg
das
ja
insb
int
ja
jnp
insb
pop
lock
or
or
ljmp
rcrb
inc
push
popf
sarl
mov
sbb
pop
leave
xor
xchg
mov
xor
cmp
andl
cwtl
jmp
orb
mov
mov
and
sub
jns
jno
mov
sub
les
push
es
push
or
pop
jp
dec
mov
out
jns
mov
pop
shrl
lods
gs
lret
inc
fstl
xorb
or
roll
gs
gs
aam
add
shll
lods
outsl
mov
imul
enter
icebp
or
xchg
xor
push
stc
test
outsb
xchg
repnz
fsubs
push
mov
scas
xchg
jl
popf
imul
mov
sbb
jle
xor
out
xor
into
push
mov
add
cmp
mov
inc
fistl
push
je
flds
stos
adc
insb
icebp
mov
std
and
fisttpl
cmp
fdivr
jg
jb
test
sub
out
repnz
sub
lods
repnz
and
shll
outsl
mov
fidivs
pushf
fldl
cld
out
lods
sbb
outsl
adc
cltd
mov
sbb
outsb
jmp
ja
inc
inc
mov
repnz
movsl
stos
rorb
aad
push
call
ficoml
push
xchg
pushf
sahf
push
repz
aad
jb
push
shlb
xchg
jge
mov
rcl
jle
je
or
xor
cmpsl
push
dec
shlb
andb
cmc
mov
xchg
and
jnp
bound
or
dec
imul
cld
adc
dec
jg
dec
dec
pop
popf
jb
flds
xor
lret
loopne
divl
dec
lret
gs
cltd
iret
lods
mov
cmc
cltd
xchg
in
lea
xchg
pusha
and
cmpsl
loopne
pushl
or
mov
push
mov
inc
mov
ror
bndstx
mov
mov
int3
add
sbb
adc
mov
jecxz
leave
gs
pop
leave
push
xor
sub
stos
lock
push
data16
enter
pop
jmp
push
cmc
and
add
imul
xor
cmc
enter
pop
and
sbb
sarl
fs
in
or
xchg
orl
ror
nop
popa
or
mov
xor
out
push
mov
scas
es
lret
push
arpl
inc
loopne
mov
add
adc
aam
xchg
mov
dec
lea
ret
lcall
push
call
pop
out
add
pop
mov
xchg
fimuls
fdivp
outsl
or
fs
repz
sub
idivl
adc
sbb
rcrb
dec
cmp
int
inc
out
sub
arpl
dec
fadds
fdivr
mov
mov
aad
mov
ds
mov
jbe
sbb
divb
lock
movsl
or
test
xor
push
enter
xchg
fidivrl
add
xchg
cmp
lahf
cmp
or
sub
push
sti
adcb
push
xchg
cli
pop
pop
in
mov
adc
in
mov
mov
jmp
xchg
adc
movsb
loope
in
pop
sahf
mov
xchg
push
dec
push
pop
iret
js
xchg
repz
xchg
imul
fucomi
sahf
lea
push
mov
mov
in
dec
xchg
sub
sub
aaa
in
in
xor
mov
or
adc
fcmovnu
pop
sub
fnstsw
mov
arpl
pop
aam
sti
xchg
pop
test
aaa
adc
data16
push
cwtl
pop
mov
shl
aaa
out
xor
stos
int3
addr16
loope
jns
pop
and
lods
lret
sahf
shr
ror
jecxz
clc
push
je
jb
mov
push
mov
dec
mov
lods
jne
sbb
enter
push
lahf
clc
mov
pushf
repz
ja
test
dec
push
inc
addb
pop
fstl
xor
jo
jae
icebp
daa
je
test
jle
mov
rorb
sub
cld
gs
inc
fcoms
cmpsb
aaa
inc
fisubs
movsl
xchg
fwait
mov
inc
jg
sbb
jp
dec
aas
aam
stos
sbb
dec
repnz
mov
in
push
mov
adc
leave
arpl
movsb
mov
jno
pushf
jmp
add
xchg
lret
clc
adc
nop
mov
imul
sub
lods
xor
dec
add
mov
prefetch
or
test
cwtl
int
es
sbb
ljmp
sub
push
aam
push
jns
aaa
scas
xor
push
dec
pop
in
push
jecxz
xchg
test
js
mov
dec
push
pop
jnp
mov
mov
add
mov
test
xchg
lret
loope
xlat
xchg
inc
push
sbb
adc
fimull
repz
cld
mov
pop
aad
adc
adc
ret
dec
or
and
xchg
and
ljmp
add
xor
cs
dec
or
add
push
push
outsl
push
shl
or
pop
sub
adc
push
push
mov
leave
das
push
push
sahf
mov
into
sbb
loope
scas
or
das
ljmp
test
mov
xchg
aas
jmp
loope
pusha
stc
push
enter
rolb
push
xchg
clc
ret
sbb
aad
cs
inc
pushf
stc
sahf
push
jmp
adc
neg
js
sbb
sub
and
mov
out
jmp
test
xchg
loop
mov
iret
lret
inc
rcrl
bound
ret
push
mull
faddl
jo
stos
cmp
xor
in
loope
xchg
jno
xchg
pop
fcompl
xchg
jnp
mov
sub
xor
dec
inc
pop
cltd
loop
mov
leave
mov
inc
fcmovb
inc
imul
sbb
and
test
daa
daa
and
nop
mov
ds
push
dec
into
shll
fistpll
adcb
or
and
dec
into
mov
je
shll
adc
repz
frstor
cwtl
adc
test
sub
xchg
mov
cld
loope
fldenv
fmull
pop
cld
or
cmp
sbb
stos
push
add
push
xor
iret
push
sarl
push
inc
gs
iret
mov
jle
sbb
sub
into
xchg
addr16
dec
fdivl
mov
orb
inc
jg
out
mov
jg
je
fwait
pop
sub
mov
mov
jg
pop
sbb
lock
rol
pop
lock
testl
pop
cmp
loopne
call
cwtl
pop
clc
mov
mov
iret
pop
sti
mov
dec
jecxz
call
push
and
sub
mov
sub
out
aas
ljmp
pop
push
push
outsl
mulb
mov
push
ret
push
add
leave
pop
xorb
fisttpl
xchg
or
cld
js
stos
lods
ret
jae
push
loop
mov
icebp
pop
lahf
xor
inc
jg
adc
jno
sub
faddl
adc
in
hlt
xor
rcll
insb
xchg
jmp
and
dec
movsb
les
jp
mov
xor
insl
lods
mov
sbb
and
cmp
and
fstps
or
xchg
hlt
jecxz
fcoms
int3
in
xchg
popf
inc
cmp
arpl
jne
add
loop
pusha
dec
adc
cmp
in
ja
sti
adc
out
js
sti
jmp
iret
pop
inc
das
lds
popf
push
mov
mov
push
loop
and
cwtl
xor
push
or
mov
mov
lods
mov
test
lods
les
pop
adc
jns
cmp
fcomps
pop
bound
lds
and
mov
out
in
sbb
bound
jne
cmp
out
dec
js
gs
xchg
jecxz
jne
add
cmc
pop
outsl
in
inc
or
pop
fnstenv
out
dec
test
pop
push
int
enter
ret
xorl
xchg
inc
addb
jno
add
xchg
cwtl
jecxz
and
dec
adc
cmp
ljmp
push
dec
xchg
outsb
popf
sbb
sbb
sbb
inc
jo
mov
mov
mov
aaa
add
sbb
push
sbb
add
mov
jg
push
rcl
inc
jl
dec
stc
fisubs
fldl
sub
pop
add
je
enter
rol
cmp
stos
int
lret
mov
push
push
ret
jge
jl
xchg
pusha
dec
xchg
jge
inc
jecxz
in
int3
ret
pop
adc
add
add
sub
arpl
mov
ss
xlat
xchg
aaa
mov
scas
testb
movsb
xor
and
int
loop
test
fisubrs
cmpsb
adc
dec
out
xchg
cmpsb
add
inc
and
pushf
dec
cmp
out
fadds
push
stc
lea
cmp
jmp
pop
push
scas
dec
outsl
subb
jbe
sub
jle
fldl
or
sbb
jecxz
loope
jp
pop
cltd
movsl
insl
add
xchg
mov
cmp
decl
jae
cmp
xchg
imul
pop
test
adc
cmp
out
mov
xchg
bound
cltd
subb
imul
lock
push
call
xchg
add
repnz
imul
push
into
inc
dec
jae
xor
or
ret
in
dec
incb
sub
adc
sarb
push
push
stc
xchg
jns
fcmovb
daa
mov
mov
or
mov
pop
movsl
fsubl
or
push
lds
into
inc
aas
sub
push
in
out
push
xchg
pusha
jle
ss
xchg
mov
push
lcall
in
sub
push
pop
fstps
lcall
sub
into
mov
lret
jg
mov
call
mov
pushf
mov
push
pop
sub
mov
adc
pop
sbb
scas
das
xor
xchg
pop
cmc
and
leave
push
inc
xchg
pop
add
mov
xchg
and
mov
jecxz
sub
cmpl
mov
loopne
lahf
int3
roll
or
ljmp
icebp
mov
movsl
nop
mov
pop
and
movsb
test
and
fwait
je
and
xchg
gs
xchg
xor
mov
inc
scas
xchg
mov
jo
sbb
ljmp
sbb
rol
mov
adc
fwait
lods
cmpsb
adc
or
cmpsl
call
aaa
das
arpl
sub
fistps
adcb
lcall
push
pop
mov
lods
cmpsl
shlb
mov
cmp
out
mov
adcb
push
cmpsl
outsl
test
sub
lods
fsubs
rcl
sub
mov
push
lret
sub
mov
adc
xor
and
mul
cld
add
lret
jle
pop
mov
jbe
jbe
lcall
sbb
gs
adc
dec
scas
dec
cmp
pop
pusha
lods
mov
call
aaa
test
ds
orl
dec
sub
add
mov
mov
cwtl
pop
or
test
enter
and
jp
insb
mov
sub
mov
cmpsl
daa
xchg
cmp
fcoms
add
adc
jmp
mov
fisttpl
daa
xor
or
jp
enter
cmp
mov
or
imul
jle
int3
lcall
in
and
jg
sbb
or
icebp
cwtl
inc
sub
xlat
cltd
jo
je
repz
fisttpll
xor
add
cmp
add
and
mov
adc
adc
imul
movsb
lcall
dec
clc
xor
xchg
mov
sub
mov
dec
push
jle
mov
inc
adc
ficomps
jbe
mov
xchg
xor
mov
pop
dec
test
imul
add
jae
mov
cmp
aas
mov
sub
in
sbb
mov
inc
sbb
mov
mov
lods
out
mov
mov
arpl
nop
push
mov
push
cs
and
repz
mov
sti
icebp
jb
xchg
cmp
sbb
cmpsl
jo
das
gs
mov
dec
in
jg
ret
mov
sub
xor
je
mov
shl
ret
aam
and
inc
cmpsb
decl
mov
scas
aas
cmp
dec
adc
rorb
in
shlb
jg
inc
adc
popf
test
mov
fiadds
mov
xchg
or
mov
dec
loopne
les
push
mov
push
pop
or
lcall
je
pushf
loopne
ljmp
xor
mov
test
imul
loope
sbb
lods
mov
mov
adc
push
sub
das
xlat
push
mov
inc
movsl
mov
dec
sub
cmpsl
insb
mov
outsl
call
jnp
rolb
lret
push
sub
pop
scas
jne
scas
jg
pop
dec
add
cwtl
sti
cmpsb
cwtl
mov
ds
jnp
mov
out
lcall
fdivrs
adc
shl
mov
orb
inc
mov
jae
and
pop
xchg
and
aas
adc
xchg
push
jb
shll
sub
std
adc
or
dec
push
testl
adc
dec
xchg
adc
xor
mov
push
fdivrl
mov
and
in
cmp
mov
jae
fisttpll
nop
popa
cmp
xor
loop
adc
data16
loop
sub
push
std
mov
push
sbb
cmpsl
test
shlb
mov
movsl
es
or
lock
int3
and
or
jp
xchg
mov
push
mov
dec
mov
jns
push
dec
xchg
imul
insb
mov
xchg
cltd
and
push
das
mov
stc
ret
cwtl
mov
jne
hlt
aam
insb
push
ret
push
lods
xchg
mov
rclb
fs
int
dec
movsl
pop
xchg
das
stos
in
bound
in
push
das
fs
cwtl
hlt
lea
mov
push
jge
aad
movsl
aam
pop
test
ja
mov
pop
clc
sahf
lcall
mov
cmc
insl
adc
push
ficoms
mov
jb
lods
xchg
jmp
int3
mov
sbb
cs
sbb
lahf
aam
or
lods
adcb
lds
adc
push
jns
icebp
cmpxchg8b
add
popa
cs
jl
stos
rclb
mov
adcl
jmp
jns
add
mov
into
cwtl
dec
sbb
and
and
mov
fiadds
pushf
shrb
add
add
inc
arpl
mov
jns
popa
add
or
push
dec
xchg
fadds
jge
jne
sbb
jecxz
jns
mov
fidivs
xchg
aaa
cwtl
or
adc
xchg
sbb
lahf
adc
jecxz
mov
outsl
pop
sti
frstor
mov
jge
fs
enter
pop
lret
icebp
mov
cmp
mov
jmp
sub
les
ret
mov
hlt
pusha
and
add
inc
xlat
and
mov
addr16
sbb
dec
pop
mov
scas
scas
or
das
test
mov
mov
cld
les
or
lret
outsl
sub
lods
addr16
leave
imul
repz
pusha
clc
mov
xchg
aas
push
xchg
jb
les
jne
call
notl
sbb
rcrb
jecxz
cmovns
jb
divb
xlat
cmpsl
and
mulb
pop
or
ss
aas
push
ja
stos
xor
sub
and
sub
or
sub
ss
lret
add
sub
jb
xor
xchg
dec
mov
push
repz
sub
pop
imul
rcl
cs
or
add
sbb
fdiv
xlat
fsts
test
das
ja
xchg
or
divl
icebp
adc
out
mov
fistpll
movsl
test
xchg
mov
cmpsb
jmp
and
ja
jae
inc
cs
scas
mov
scas
test
xor
outsb
xor
mov
mov
dec
adc
je
push
lock
jbe
add
cmp
arpl
mov
std
add
imul
pop
enter
jecxz
mov
pop
inc
subb
loopne
xor
jne
mov
sub
fcmovnu
hlt
adc
imul
bound
add
sub
adc
push
dec
xchg
xor
idivb
cltd
jnp
inc
rorl
popa
jbe
pop
xchg
cmpsl
fwait
xchg
pop
pushf
cmp
push
mov
fbstp
cs
cli
jecxz
cmp
lods
cld
out
adc
mov
jp
xlat
add
outsb
cmpsb
das
lcall
adc
mov
mov
mov
xchg
jp
enter
loopne
dec
sbb
push
fwait
push
decb
sub
mov
loopne
mov
shrb
xor
mov
in
mov
mov
push
aam
js
lock
sbb
in
mov
and
popa
mov
shrl
sbb
adc
inc
dec
jg
lahf
mov
adcl
shl
sbb
jg
int3
cmpsl
mov
idivl
jae
enter
or
stos
shl
arpl
jl
inc
inc
mov
add
cld
pop
jecxz
fldl
lret
cld
adc
and
test
inc
imul
dec
add
adc
psrld
dec
cmp
push
pop
ficoml
add
cmpsb
fwait
dec
rorb
rorl
clc
inc
mov
xchg
std
push
lret
jnp
pop
inc
lret
jmp
lret
inc
insb
sti
mov
ficompl
cmc
repz
and
jns
xchg
jno
adc
push
sub
hlt
shrb
jae
pusha
pop
push
jge
in
inc
leave
int3
icebp
cmp
sti
mov
ss
shlb
pop
rcl
ret
xor
cmp
rorl
sbb
sbb
sar
inc
and
or
mov
fsts
inc
std
aad
retw
nop
ret
rcrb
je
sub
ljmp
sub
stos
inc
and
mov
nop
ljmp
lea
push
push
and
push
mov
clc
xor
mov
je
repnz
icebp
push
sarl
mov
test
cs
stos
and
inc
mov
mov
xor
sbb
leave
out
out
rolb
jecxz
or
popf
mov
scas
aas
cmp
bound
mov
adc
outsl
inc
xor
add
out
mov
sti
inc
mov
cmpsl
xorb
mov
stos
cmp
xor
jb
pusha
pop
xchg
or
push
mov
lock
lods
or
adc
rorb
mov
mov
ja
imul
push
lret
add
xchg
xchg
jbe
push
scas
sahf
lds
ljmp
push
loope
cs
negl
mov
push
pushl
rcll
jp
mov
and
mov
push
jle
xchg
sbb
or
jmp
fnstsw
dec
data16
and
pop
mov
outsb
or
and
icebp
inc
jnp
push
and
ret
daa
mov
int
cs
mov
adc
adc
jae
jno
xchg
or
and
mov
jmp
out
jbe
dec
xor
outsl
arpl
pop
adc
fs
mov
jmp
inc
das
mov
rclb
adc
loop
test
jb
jbe
pusha
push
or
dec
mov
out
in
aas
adc
add
ds
enter
and
js
das
mov
hlt
cmp
pop
push
popa
xchg
mov
es
test
popl
xchg
xchg
lcall
and
cli
mov
or
xchg
pop
call
pusha
mov
fistl
pop
test
add
shll
xchg
sbb
xchg
jnp
rcll
imul
rcrb
loop
pop
mov
sti
adc
and
adc
cmp
jo
push
push
jns
in
fldenv
push
insl
xor
aad
mov
cld
rcr
imul
int
lods
cmp
inc
js
mov
cmp
push
lods
mov
shll
dec
adc
push
ds
pop
and
ds
aas
add
sub
mov
add
and
loopne
and
pop
mov
xlat
pop
cmp
scas
int
je
and
jmp
jb
push
jecxz
sbb
xlat
pop
inc
cmp
mov
mov
int3
cmpsl
pop
mov
push
mov
mov
pop
adc
icebp
sbb
movl
std
jl
and
sub
aam
adc
adc
push
cmp
mov
xor
adc
sbb
cli
jno
push
sbb
or
rcr
mov
scas
xchg
cmc
lahf
cwtl
mov
cmpb
pop
add
aaa
mov
jle
fs
aas
sbb
leave
int
adcb
mov
sub
push
xchg
loop
loope
jb
xchg
jge
cmc
xchg
or
int
push
bound
test
mov
sbb
dec
jno
not
jnp
push
fdivs
dec
pop
enter
push
pushf
xchg
cld
cli
lods
sbb
mov
sub
daa
mov
cltd
divb
aaa
nop
push
addb
mov
bound
cmpsl
int
xor
out
inc
nop
xor
lretw
fdivs
mov
sahf
push
jp
lock
mov
xlat
and
loopne
sahf
and
add
sbb
roll
sub
jns
jno
and
aaa
mov
xchg
popa
xchg
add
nop
popf
dec
push
jl
shl
inc
sti
adc
cmc
sbb
sti
cwtl
ljmp
nop
loopne
push
lea
cmpsb
out
adc
icebp
ljmp
clc
clc
sbb
xor
jmp
pushl
lcall
sbb
and
ljmp
pop
inc
idivb
hlt
mov
enter
popf
inc
mov
or
sub
fisttpll
or
push
jns
inc
xchg
inc
fs
and
daa
add
fwait
dec
repz
cmp
popa
cmp
cmp
int
sbb
or
mov
out
and
sub
inc
jo
test
mov
cmp
cmc
push
stos
in
movsl
shll
jmp
pusha
je
fisttpl
mov
mov
loope
push
clc
aad
and
aaa
pop
xchg
xor
or
ja
fwait
adc
sarl
outsb
pop
pop
in
out
sbbl
or
push
les
rcrl
pop
int
adc
mov
mov
xchg
jb
adc
das
es
out
call
inc
inc
shll
imul
and
stos
inc
aad
fdivr
pop
pop
adc
out
xchg
shlb
xor
repnz
cmp
or
nop
lds
mov
mov
mov
in
sbb
cmp
add
out
cmp
addr16
fistpl
into
mov
sub
inc
dec
adc
mov
call
fxch
orl
mov
sbb
aam
dec
and
and
and
mov
push
pop
arpl
sub
scas
rol
cmp
ss
leave
jge
cmp
jo
popf
lahf
ficoml
testl
test
or
clc
and
xchg
data16
lret
es
inc
stc
and
movsb
fcomps
in
sbb
popa
call
mov
clc
cmpsl
es
add
lea
sub
rcrl
cmp
std
lods
outsb
aaa
push
and
sbb
ja
js
sub
dec
dec
ds
xchg
cmp
jg
cld
or
mov
pop
jp
jb
repnz
jmp
cmp
mov
inc
test
fidivs
mov
push
xchg
ret
push
push
and
aas
aad
pop
stos
shr
jmp
clc
pop
stc
sbb
mov
stc
push
int
cmc
rorl
mov
in
add
outsb
sbb
push
cmc
in
mov
out
in
cmp
mov
test
cwtl
mov
jecxz
daa
inc
aam
sub
and
in
icebp
add
int
push
sub
sub
mov
iret
lret
push
xchg
ds
jg
sbb
mov
leave
addr16
aas
out
in
mov
rorb
jmp
xchg
and
ljmp
out
jne
fwait
cmp
sub
and
rcrb
repnz
aad
adc
mov
int3
stos
cmpsl
mov
mov
movsb
inc
and
or
loopne
xlat
mov
or
negb
mov
push
cmpsb
add
pushf
test
scas
lods
xor
cmp
jae
pop
rclb
cli
dec
cmp
aad
xchg
push
inc
push
fildll
aad
sbb
stos
xor
cmp
and
pusha
xchg
mov
call
jl
push
sub
sub
in
mov
imul
dec
in
push
aam
fstp
dec
sub
mov
pop
lahf
mov
mov
push
xchg
add
sub
rcll
xchg
and
out
jae
xchg
jae
ljmp
fcmovb
test
xor
mov
mov
subb
insb
push
cmpsl
and
inc
cmp
aaa
push
pop
fstpt
rclb
pop
and
sub
jecxz
adc
repz
mov
mov
and
ficompl
imul
mov
shl
jne
push
fcoml
sbb
popa
xchg
sub
scas
icebp
cmpsl
insb
bswap
inc
popa
jno
xor
push
inc
push
je,pt
push
int3
or
mov
push
shll
in
sub
cmp
mov
sub
js
outsl
nop
shll
pop
sbbl
or
in
repz
dec
and
jg
sbb
lcall
adc
sbb
push
imul
loop
test
lret
sbb
xor
shll
inc
jb
push
add
jp
shll
push
or
dec
inc
sub
jge
push
fildl
mov
jae
subl
in
lcall
adc
lret
mov
inc
shrl
inc
cmpl
add
daa
pop
sbb
jl
and
xchg
inc
mov
mov
mov
rorb
jb
sub
add
mov
or
adc
or
std
outsb
fsub
jp
sbb
sbb
pop
je
pushf
sub
mov
or
push
sahf
lock
xor
stos
push
leave
xchg
xor
xchg
popf
outsl
sarb
inc
sti
in
mov
imul
popa
xor
cmp
fsubrs
fnstenv
clc
add
inc
icebp
imull
pusha
out
into
cmpsb
in
push
insl
into
bound
fimull
mov
push
cwtl
dec
sti
mov
repz
testb
arpl
jg
ror
imulb
add
cmp
scas
fsubrs
dec
movsb
mov
push
or
pop
std
mov
xchg
add
fs
mov
jo
or
out
sub
in
jne
push
push
aaa
roll
add
cmp
jge
test
mov
xchg
lock
xchg
or
pop
sub
mov
leave
bound
movsl
stos
out
fcmovbe
roll
cmp
loop
psubsw
subl
jmp
pusha
call
fcmovnu
fdivrp
xchg
idiv
xor
xchg
jno
push
lods
jge
sbb
fs
jo
push
into
jle
sbb
movsb
mov
out
pop
dec
xchg
rdtsc
dec
jecxz
xchg
fs
sbb
jg
xor
lret
insb
stos
hlt
cltd
rcr
shrb
fstpt
in
inc
xor
mov
negl
cmp
mov
push
imul
loope
hlt
movsb
mov
sar
xor
push
push
divl
xor
sub
jl
or
sbb
into
andb
pop
into
in
mov
js,pt
cmp
inc
push
adc
ret
mov
mov
mov
mov
xchg
inc
inc
testb
dec
jl
push
mov
test
dec
cmp
xchg
mov
dec
into
jmp
adc
test
xchg
xor
and
test
dec
add
mov
or
icebp
sub
push
push
mov
shlb
out
out
pop
jbe
stos
call
clc
push
adc
inc
sbb
in
jl
dec
push
lret
dec
loope
add
clc
sub
pushf
xchg
repnz
jp
dec
jmp
push
dec
xchg
xchg
sbb
xchg
xchg
clc
mov
jo
cmp
ror
or
movsb
and
ljmp
popa
sub
rcrb
mov
shlb
jbe
jnp
add
hlt
adc
add
push
imul
jp
les
fnstsw
xchg
jnp
sbb
test
outsb
xchg
inc
dec
fnstcw
jbe
dec
nop
adc
push
mov
mov
addr16
iret
std
jo
lret
mov
clc
pop
fimull
cmp
jge
dec
loope
insb
into
sbb
aad
or
jne
sub
mov
jnp
out
test
adc
iret
cmp
adc
inc
adc
inc
push
cmovnp
xor
sti
cmp
pop
adcb
loope
ljmp
outsl
aaa
fldcw
dec
add
or
ljmp
pop
xchg
or
cltd
xchg
pop
cmp
mov
frstor
je
jns
imul
into
imul
data16
push
mov
lret
add
inc
clc
pop
shlb
xchg
inc
xor
mov
or
push
int3
push
xor
xor
dec
or
aam
jmp
icebp
and
sti
inc
ret
ret
lret
pop
out
and
cmpsl
test
sbb
inc
dec
add
push
jbe
xorl
popf
mov
mov
jae
cld
mov
sub
cmp
mov
fs
fs
push
cmpsl
or
or
ja
clc
pusha
jnp
mov
push
jnp
jge
sub
lret
mov
inc
filds
mov
xor
shrb
sti
pop
in
nop
ja
and
push
dec
add
test
stos
jne
das
stos
bound
pop
cmp
add
inc
iret
cmc
out
sub
or
lcall
fwait
adc
or
push
jp
and
cmp
pushf
cmpsb
dec
lret
bound
jne
jmp
inc
dec
mov
mov
pop
and
xchg
add
cmpsb
jmp
sahf
mov
sub
jo
xchg
dec
in
push
call
out
push
das
popa
lea
dec
mov
imul
fwait
xor
cmp
xchg
in
insl
sbb
test
jmp
ret
jecxz
fidivl
mov
adc
stos
addr16
add
pushf
lods
lahf
jecxz
push
xchg
mov
jmp
inc
push
mov
dec
sbb
push
mov
negb
sbbl
xor
pop
dec
jmp
push
xchg
mov
testb
dec
imul
incl
popf
push
mov
loopne
dec
pushf
int
call
movsl
out
test
jnp
call
jmp
xchg
mov
daa
push
lcall
and
mov
outsl
loope
imul
push
mov
jns
test
jp
inc
test
in
in
push
pop
sub
mov
jmp
push
adc
lret
push
stos
loopne
jg
popa
rcrb
inc
ja
jno
sbb
je
or
xor
add
mov
or
or
icebp
in
popf
inc
inc
test
repz
xchg
pop
add
nop
pop
adc
pop
pop
jge
ror
push
sub
out
cmp
lcall
pop
out
xchg
dec
xchg
add
add
rcll
cmp
insl
sbbb
imul
into
push
lahf
inc
or
in
fwait
lret
dec
filds
xor
push
sub
icebp
sbb
push
fstps
test
xor
jbe
inc
dec
movsb
mov
mov
mov
jbe
adc
sbb
mov
cmp
mov
adc
xchg
mov
sti
pop
nop
test
xchg
mov
jp
xor
movsl
enter
fs
xor
adc
dec
sbb
ficoml
pushw
jg
adc
cltd
and
shlb
pushf
dec
insb
dec
out
xchg
or
iret
mov
push
add
mov
jb
data16
imul
imulb
inc
push
xor
bound
int3
jns
add
int
dec
ds
test
inc
bound
sbb
sub
inc
push
cld
cmpsb
pop
leave
cmpsl
mov
je
movsl
out
add
loope
dec
test
adc
xor
mov
stos
pop
rcr
lock
sub
repnz
int3
std
or
out
out
jno
mov
ret
mov
icebp
ss
lahf
pop
das
fdivl
adc
jo
xor
subb
jnp
or
fisttpl
rclb
ds
xchg
in
cltd
cltd
out
xchg
mov
mov
add
xlat
pop
bound
xor
add
and
es
xor
arpl
lods
jns
fwait
push
push
or
repz
movsl
rclb
out
mov
lret
into
mov
mov
inc
sahf
fdivrs
imull
sub
mov
clc
pop
fstl
mov
rolb
cmpsl
xchg
sti
xchg
pop
xor
roll
push
jno
pop
xor
jb
mov
std
xorl
insb
orl
and
xor
adc
dec
test
sbb
xchg
cmp
sub
mov
sbb
inc
push
enter
sbb
xchg
dec
xor
mov
or
adc
imul
es
test
cmp
test
addr16
cmpsb
test
jecxz
xchg
clc
and
xchg
add
sahf
repz
mov
sarl
in
pop
sarl
pop
pop
lahf
fimull
les
aad
shl
lret
sbb
or
mov
adc
jns
cwtl
loope
out
loopne
fdivrl
fidivrs
or
dec
adc
lods
adcb
jb
out
aad
xchg
cmp
jno
insb
sub
pop
xlat
add
ss
cld
add
cmp
push
loope
cmp
mov
loopne
fs
mov
sub
jmp
mov
and
xchg
inc
sbb
pop
and
xor
aaa
pop
sub
mov
inc
cmpsb
cmc
add
push
lcallw
inc
leave
in
mov
or
outsl
dec
test
cmp
adc
sbb
inc
xor
pop
movsb
pop
cwtl
jno
and
xchg
aam
mov
emms
out
push
xor
jb
call
or
sbb
cmp
pop
ljmp
pop
mov
rclb
call
cltd
cmpsb
sub
icebp
xor
and
jo
adc
cld
and
enter
js
std
jo
push
jae
jbe
into
sbb
adcl
add
push
push
and
mov
push
and
cld
dec
rcll
dec
cmp
jno
xchg
sbb
adc
aas
xchg
jge
inc
outsl
add
mov
add
lret
int3
out
adc
hlt
push
adc
mov
leave
aaa
fists
idivb
inc
jecxz
stc
lea
div
add
cmp
enter
pop
and
shl
dec
jl
leave
es
pop
xor
sbb
mov
rorl
or
in
xchg
or
out
add
iret
sbb
adc
mov
aam
ficoms
je
out
add
inc
jle
test
test
bound
ss
repz
cmp
pop
and
loop
push
jl
je
clc
jno
imul
sbb
cli
adc
je
lcall
lahf
shl
lret
push
in
outsb
jo
xchg
mov
jns
mov
mov
xchg
ljmp
sbbl
in
jns
inc
mov
fst
sar
mov
testb
rorl
jo
jo
push
adc
mov
push
out
fisubrs
call
sub
adc
ds
cmp
xlat
add
fucom
push
dec
addr16
lods
mov
imull
add
jl
mov
mov
notb
push
cmp
sbb
inc
adc
sub
push
mov
sub
xchg
jmp
or
shl
push
shufps
sti
andl
cmp
push
pop
sbb
mov
mov
and
or
push
mov
aas
jmp
jno
sarb
mov
in
dec
sub
push
js
arpl
mov
push
cmp
aaa
pop
push
loopne
inc
cmp
push
lods
adc
or
mov
pop
aad
pop
mov
mov
inc
movsb
cmp
inc
fiadds
xor
loop
adc
std
jp
jnp
and
adc
out
sub
shrb
nop
mov
push
inc
sub
pop
stc
cmp
or
jl
in
push
sbb
icebp
jl
inc
imul
and
fdivrs
data16
stos
shlb
insb
lcall
lds
movl
push
adc
addr16
mov
test
mov
pusha
jne
pop
aaa
sahf
call
test
lret
cli
roll
jecxz
mov
imul
cwtl
push
push
out
icebp
cld
inc
or
popf
jl
and
jae
sbb
xchg
rorb
and
cli
pop
jl
ljmp
movsb
inc
cltd
test
jb
ret
ret
stc
or
pop
sub
lret
fs
adc
mov
mov
dec
add
addr16
or
in
dec
mov
add
cli
dec
enter
mov
pop
stc
sahf
lcall
mov
outsb
insl
jg
jb
sub
lret
shlb
xlat
addr16
xchg
jecxz
xor
mov
addr16
inc
fidivrl
icebp
testb
add
adc
and
sub
ret
jo
pop
xor
sbb
mov
lret
inc
clc
push
test
aam
sub
pop
mov
jmp
fwait
insb
sbb
shr
jmp
mov
mov
push
push
xor
mov
hlt
mov
push
cs
push
xlat
mov
and
fnop
jbe
andl
movsl
push
and
test
addr16
pop
pop
push
les
pop
pop
fistl
loopne
icebp
sbb
jecxz
ja
insl
mov
or
mov
and
pop
sbb
pop
mov
outsl
push
and
jno
mov
pop
sysret
pop
mov
fs
dec
pusha
pop
cmpl
or
mov
xchg
stos
popf
mov
cmp
dec
aad
roll
push
sub
dec
fnstenv
pop
sub
fcom
or
mov
sbb
add
test
jo
sub
and
push
or
xorl
xchg
mov
sti
mov
movsl
ret
or
mov
fildl
stc
sbb
into
pop
add
ret
out
mov
insl
cmp
stos
pop
push
xor
push
test
imul
repz
push
lret
inc
jb
push
jno
sbb
test
sti
fcomps
push
clc
inc
arpl
sbb
jbe
lods
fdivs
cmp
adc
adc
sub
xor
pushl
adc
sub
mov
notb
or
sbb
lea
das
jecxz
xor
ja
xchg
repnz
hlt
adc
lods
jecxz
aam
dec
les
lock
jl
xchg
mov
xlat
pop
sarl
fbld
mov
push
fsubrl
push
xor
rolb
aam
test
mov
sahf
ja
xorl
xlat
adc
pop
movsl
cmp
ret
jecxz
fstpl
lods
push
inc
and
xchg
add
mov
aaa
and
or
push
lock
sbb
sub
sti
fidivl
dec
cli
add
mov
push
sub
or
arpl
stos
push
cli
cs
mov
xor
aam
pop
jnp
sbb
xchg
sbb
sbb
mov
js
mov
in
xchg
inc
insb
adc
lock
xchg
mov
or
mov
xchg
push
lcall
imul
ds
add
out
pop
filds
outsb
mov
and
and
leave
imul
jmp
divb
mov
push
jl
dec
sub
jmp
inc
shrb
fcmovb
add
mov
or
rcl
sub
xor
inc
xchg
sub
jmp
pop
jge
loopne
sub
or
aaa
ret
cltd
cmp
cwtl
push
xor
mov
sarl
fs
mov
lods
mov
jecxz
pop
int
xchg
xlat
cmpb
and
fldpi
in
adc
inc
aaa
push
xor
jmp
cmp
adc
push
addr16
adc
lret
mov
movsl
jmp
fwait
inc
push
jg
xchg
lods
fs
pop
out
fs
mov
ss
sbb
bound
cmp
mov
xchg
adc
adc
jo
mov
data16
lcall
stos
and
sub
rcrb
sub
insl
pusha
push
popf
mov
mov
dec
addw
push
mov
scas
scas
mov
hlt
shrb
sub
pop
divb
and
xchg
scas
into
xor
es
push
adc
adc
aad
inc
maskmovq
push
jmp
push
adc
imul
jne
cmp
loopne
sti
add
fadds
ret
dec
sbb
addl
xchg
loop
sub
cmp
pop
lock
inc
and
push
mov
jl
jne
sbb
hlt
cmp
lret
xor
cs
push
pop
frstor
cld
out
mov
repnz
gs
adc
dec
mov
inc
test
add
int3
sbb
dec
fidivrl
add
loopne
cmp
add
stos
cltd
clc
adc
cli
lahf
pop
ret
add
pop
pop
scas
in
mov
ret
xchg
fisubrs
mov
mov
std
lds
jmp
inc
jg
add
pop
cmpsb
pusha
inc
push
push
int
insl
out
xchg
and
push
popf
cltd
imul
lcall
fnstsw
jns
lock
mov
pop
test
mov
add
and
xlat
imul
stos
sbb
je
addr16
out
or
lock
sbb
push
lret
xchg
sub
adc
jbe
lret
xchg
in
pop
sub
mov
mov
cmp
mov
inc
and
orl
jne
lret
dec
ja
fstl
out
adc
leave
hlt
leave
mov
cmp
ret
add
into
jl
stos
andl
and
mov
jp
mov
adc
cmp
loopne
aas
mov
push
pop
pop
fs
or
vmwrite
stos
popa
clc
scas
lret
lods
sub
pop
jb
aad
jmp
xchg
aas
jne
cmp
mov
dec
in
in
xor
aaa
or
xchg
or
loopne
push
or
leave
add
mov
int3
test
dec
inc
jne
mov
inc
loope
xor
or
sub
and
xor
or
clc
insl
notb
jge
hlt
clc
cmc
dec
and
inc
cmc
pop
push
push
repz
imul
in
hlt
hlt
sbb
sbb
push
or
xorl
pusha
jg
fwait
inc
mov
cltd
bound
mov
mov
pop
sbb
dec
jp
and
cmp
push
sbb
mov
les
jo
in
leave
and
loopne
inc
pushf
or
xchg
and
dec
into
inc
dec
insb
mov
adc
test
add
hlt
sub
cmpsb
out
out
jbe
aam
or
and
push
push
jge
dec
insb
fs
repnz
xchg
cmp
scas
jmp
data16
mov
int3
lods
outsl
in
fwait
mov
and
inc
mov
xor
test
xchg
jns
pop
or
push
xor
push
sbb
jns
iret
or
orl
xor
add
mov
jne
adc
pop
pop
or
push
cmp
cwtl
or
jb
xchg
ror
mov
push
aas
xor
int3
ss
shll
push
incl
fs
mov
out
cmp
push
push
in
sbb
or
or
jmp
lods
inc
xchg
test
xor
std
add
mov
lods
cmp
fidivrs
bound
mov
shll
sbb
pop
fmuls
inc
lock
lods
xor
popa
lods
mov
sbb
popf
test
pop
push
mov
jns
or
aas
pop
pop
dec
pop
pushf
imul
jle
mov
repz
or
xor
icebp
mov
mov
es
into
jl
movsl
int
push
or
inc
push
rcrb
fldt
xchg
sahf
test
xlat
std
jecxz
sub
lret
shlb
pop
addr16
nop
loope
adc
stos
mov
insb
mov
imul
je
repz
inc
jge
cli
push
cmp
in
dec
pop
outsb
loope
adc
jmp
lock
xchg
inc
cmp
lea
fdivs
imul
mov
int3
out
popf
stc
inc
mov
xor
sahf
imul
imul
scas
sbb
mov
dec
xrelease
mov
fmuls
int3
or
jno
mov
push
repnz
cmp
xor
fdivl
push
cli
push
lds
jo
jle
or
movsl
lret
test
xchg
mov
repnz
std
mov
scas
push
mov
std
subb
out
insb
push
ljmp
adc
dec
addr16
fmul
wrmsr
inc
inc
rol
mov
ret
repnz
dec
mov
sbb
cmc
pop
mov
lds
cltd
jmp
fsubrp
push
mov
mov
push
or
js
inc
mov
ljmp
lods
adc
ja
arpl
xchg
push
iret
dec
outsl
xor
dec
pop
ljmp
loop
sub
mov
sbb
sahf
push
je
adc
inc
cs
add
andl
adc
xchg
xchg
adcb
mov
ret
imul
mov
pusha
ret
fistl
ljmp
aas
out
mov
jb
xlat
mov
fisubs
cmp
dec
mov
pusha
unpckhps
cli
push
out
insb
lahf
arpl
mov
jge
fstl
push
cmp
cmp
aas
in
xchg
xor
push
clc
mov
enter
jbe
push
sbb
or
cmp
jb
add
and
test
imul
daa
mov
js
sbb
nop
pusha
jne
aas
xor
and
ret
dec
mov
scas
xchg
cli
xor
insb
mov
adc
test
ss
aam
push
mov
in
pop
fidivl
in
mov
inc
loopne
cmp
stos
test
xor
mov
mov
or
cli
xchg
sbb
inc
ds
roll
xchg
and
lret
or
add
icebp
inc
cltd
insb
cmp
push
shrl
mov
xchg
mov
push
mov
fbld
or
in
mov
loop
pusha
out
jecxz
and
and
rcll
addr16
mov
mov
adc
rolb
fdivl
movsl
mov
add
roll
rcll
sub
insl
push
lods
cmpsb
jmp
aad
jae
loope
and
mov
or
inc
dec
aad
into
pop
xchg
fidivs
mov
inc
xchg
mov
cli
pop
lods
insb
push
out
pushf
jne
mov
or
fwait
cmp
loope
fisttpll
sub
sarl
les
repnz
test
push
push
push
inc
stc
lcall
mov
fisttpl
int
pusha
jb
inc
movsl
leave
mov
nop
inc
cmp
lretw
dec
imul
dec
mov
push
jno
mov
lods
dec
push
dec
test
mov
mov
fcoms
hlt
or
jmp
mov
mov
xor
mov
adc
cmp
mov
push
loope
or
lcall
adc
push
jmp
xchg
hlt
mov
cmpsl
push
dec
dec
in
aam
lds
fs
fcomp
das
lds
clc
outsl
and
les
and
stos
dec
fdiv
jle
nop
ffree
pop
mov
dec
imul
ds
pop
iret
jg
pop
mov
xor
and
sbb
daa
movsb
pushf
fisubrl
arpl
mov
mov
movb
adc
or
sub
cmpsb
inc
mov
ds
dec
nop
xlat
loopne
out
jecxz
scas
xlat
in
cmp
cmp
test
xor
sbb
arpl
pushl
mov
xor
xchg
mov
or
ss
ss
mov
lret
sti
call
and
addb
pop
mov
in
out
testl
push
loop
push
mov
inc
and
mov
mov
fnstcw
dec
mov
jno
xor
sbb
push
mov
in
jmp
jp
loop
add
xchg
rcll
imul
pop
mov
pop
cwtl
xchg
hlt
add
sub
push
mov
sub
ficoml
test
fs
lret
add
or
add
mov
out
out
stos
sub
or
mov
lods
fistpll
cltd
jae
mov
pop
stc
dec
mov
iret
and
fsts
jno
sti
fnstsw
mov
sub
outsl
cltd
mov
adc
inc
ret
out
mov
popf
popa
jp
or
aas
dec
and
mov
or
cmpsb
in
pop
or
imul
jle
push
repnz
adc
jbe
push
jge
or
push
xchg
and
or
fdivrp
jp
insb
test
dec
and
fistpl
fistl
stc
mov
shlb
xchg
cmpb
mov
add
or
mov
bound
xor
jne
inc
sub
jo
test
cmpsb
add
mov
in
inc
jl
test
jp
cwtl
push
mov
sub
outsl
shrl
sti
jge
push
sub
cmp
fiaddl
sti
xor
jae
xchg
add
movsl
popl
mov
mov
or
xchg
sbb
cmpl
push
cmp
cmc
add
out
test
ja
mov
pop
or
lods
pop
movsb
mov
xchg
insb
stos
mov
icebp
cmpsb
packsswb
in
sbb
xchg
inc
inc
leave
jl
xchg
popa
dec
pop
mov
jo
ja
mov
int
out
adcb
xchg
dec
aas
push
push
ret
rclb
aam
shrb
push
rorl
stos
inc
je
mov
enter
inc
scas
push
dec
enter
add
adc
push
int3
lcall
jmp
js
lds
cmpsb
xor
jg
aaa
dec
mov
mov
daa
data16
aam
loopne
push
es
data16
pushl
dec
jae
xchg
into
test
jl
jbe
sahf
jl
mov
ss
sub
pop
in
into
cli
gs
call
sub
jno
jno
adc
arpl
sbb
mov
push
pop
addb
icebp
data16
inc
enter
mov
and
icebp
pop
int3
mov
pusha
sub
ja
jb
daa
shl
pop
mov
shrb
in
push
or
xor
push
fdivr
popa
dec
les
fildl
clc
cmc
mov
leave
mov
call
xchg
mov
push
jns
push
push
dec
test
push
rcl
pusha
mov
cmpsl
mov
lds
jnp
dec
cld
fwait
pop
and
push
mov
subl
loopne
fstpl
pop
bswap
inc
sbb
xchg
xchg
dec
cld
push
fnstsw
dec
cmp
add
xor
cmp
pop
jo
repnz
int
cmp
cmp
mov
divb
mov
sub
sub
movsb
andb
mov
mov
mov
push
inc
sbb
sbb
insl
ffree
aas
cmp
add
xchg
mov
mov
xor
outsb
dec
mov
addl
imul
jecxz
les
cltd
test
mov
cmp
dec
enter
push
scas
popf
negb
outsl
push
jp
xchg
std
xor
in
pop
push
mov
xlat
cli
cltd
xchg
fildl
lods
mov
jae
test
mov
rclb
adcl
fstpt
pusha
add
dec
andl
cmp
mov
pop
xor
dec
fsubrs
push
push
sub
test
out
das
pop
lcall
pop
movlps
adc
out
ja
mov
arpl
mov
lock
jne
inc
or
mov
ss
mov
or
add
out
inc
sarb
pop
lcall
mov
loope
or
dec
js,pn
dec
insl
int
sarl
or
mov
sub
mov
das
jnp
mov
or
cmc
and
xchg
push
dec
mov
inc
sbb
sub
repz
xchg
sub
or
fcmovne
sti
pusha
pushl
lock
sub
lods
aaa
jle
add
xor
sarb
sub
sbb
adc
or
push
cmp
and
int3
or
push
mov
xchg
cmpsb
mov
pop
xlat
loop
inc
mul
jns
data16
jb
ss
addr16
dec
mov
mov
and
mov
dec
push
cwtl
repnz
imul
push
and
lret
clc
jmp
xchg
iret
sbb
jg
cmp
xchg
ffreep
loopne
testl
xor
mov
shll
and
or
out
xchg
test
mov
paddq
rorb
adcb
mov
decb
jecxz
sbb
cvtpi2ps
pop
xchg
je
orl
push
adc
cwtl
in
out
push
cmc
mov
push
popf
rcrl
dec
adc
xchg
shrl
add
dec
iret
aaa
aaa
ficomps
cmpsl
cmp
ret
ss
outsl
gs
mov
stc
aad
stc
popf
adc
jno
fs
or
cmp
fs
lods
cld
adc
push
mov
lock
stos
ss
fistpll
es
or
aam
nop
cmp
cli
mov
xchg
add
arpl
sbb
push
aam
add
mov
xor
jmp
sbb
cli
movsl
mov
nop
fstpt
push
dec
test
xchg
shrb
mov
sahf
mov
push
push
roll
movsb
push
cmovno
cmc
sbb
jns
insl
aas
add
daa
xchg
loopne
ss
xor
sbb
xor
mov
pop
aas
and
dec
fdivl
lds
cmp
ja
shlb
sahf
cmp
mov
or
loope
ljmp
fwait
push
mov
lods
pop
or
ja
nop
cltd
push
add
lods
test
sarl
xor
fsubs
lahf
fucom
add
mov
mov
adc
loop
and
xchg
xchg
jmp
loope
sbb
xchg
inc
pushf
push
xor
ja
popf
xor
aad
int
into
testb
scas
mov
xchg
mov
jg
data16
fmuls
jecxz
jnp
sub
jmp
mov
in
xchg
or
sub
xchg
imul
out
push
testb
ja
jg
mov
andl
xchg
mov
rorl
pop
pop
xchg
stos
sahf
cltd
or
bnd
cltd
mov
mov
dec
mov
mov
iret
clc
loopne
rcl
fs
pop
lret
fimull
mov
xchg
mov
cmpsb
out
popf
ret
ljmp
inc
and
and
push
sarb
add
in
iret
loopne
rcll
rorl
nop
loope
sub
test
shlb
js
jne
mov
lret
sahf
ljmp
stos
out
jno
test
or
xchg
loop
add
pop
sbb
add
mov
xor
daa
fidivrs
and
imul
loope
stos
jg
xchg
test
mov
xor
cmc
sub
jecxz
sub
scas
push
das
fs
jge
push
stc
in
inc
adc
test
mov
pushf
lods
or
sub
roll
cmp
xor
dec
cwtl
or
les
shl
jo
or
call
mov
add
in
inc
mov
mov
gs
mov
push
mov
outsl
sub
ss
jmp
sub
jg
xor
insb
daa
aaa
jecxz
out
into
mov
subl
orl
lahf
movsl
mov
or
jle
sbbb
out
jb
xor
cmp
gs
mov
sbb
lahf
sub
fidivs
add
and
mov
daa
fnstcw
pop
sub
push
cwtl
addr16
dec
enter
das
jno
sbb
or
pop
add
jecxz
aas
movsb
sub
xor
dec
xchg
dec
inc
push
push
test
or
cmp
insl
ret
push
gs
shrb
inc
pusha
cmp
sbb
push
jo
sbb
and
mov
inc
dec
jmp
iret
xchg
pop
iret
test
mov
in
pop
sahf
shrl
fdivl
into
xchg
mov
mov
cs
clc
daa
xor
hlt
test
stc
pop
jecxz
cmc
xchg
cltd
inc
push
in
jbe
push
fs
imul
sbb
push
pop
loopne
or
lds
mov
jae
repnz
cld
sbb
sub
mov
inc
es
push
mov
lods
popf
mov
ret
enter
in
subb
adc
mov
and
ret
decl
mov
fidivl
imul
lcall
cwtl
iret
xchg
jmp
js
mov
dec
das
pop
sbb
mov
rcl
mov
cmpl
lea
cmp
pop
mov
xor
inc
cmp
test
mov
fs
mov
mov
pusha
fiaddl
pop
push
pushf
ja
cmpsl
lds
fisttps
scas
jp
negb
ficomps
xchg
add
enter
sbb
into
roll
leave
xchg
in
pop
and
mov
and
pop
inc
mov
insl
gs
push
xor
data16
loope
or
sbb
xor
jl
and
nop
pop
stc
jg
sbb
xor
mov
ljmp
mov
mov
dec
fcoml
xchg
lea
inc
lds
shl
movsb
xor
mov
pop
dec
pop
cld
ds
incl
pushw
pop
dec
in
ds
insb
sbb
inc
sub
adc
mov
adc
fcompl
scas
push
pop
inc
pushf
icebp
ljmp
xchg
xor
xchg
mov
mov
aas
pop
outsl
cmpsl
add
mov
push
and
push
aam
pop
faddl
push
in
stos
int
push
sub
sti
mov
sti
aam
into
pop
lcall
pop
stos
mov
dec
movsl
out
aam
and
movsl
mov
test
in
fcmove
xor
cmp
cmp
roll
push
int
xchg
inc
push
ficompl
cmp
xor
pop
flds
insb
push
ret
scas
xchg
loope
mov
stos
insl
pop
inc
lahf
push
adc
mov
aaa
movsl
mov
pusha
inc
lea
inc
mov
lcall
sti
and
out
mov
jno
stos
scas
and
mov
push
fs
sbb
mov
divl
fcomps
jns
pop
dec
fistl
sbb
jl
dec
lods
popf
pop
loop
push
jb
cmp
mov
icebp
and
jl
or
pop
sahf
push
cmpsl
xlat
lcall
cmp
stos
pop
rorl
jae
mov
xchg
dec
cmpsl
inc
out
je
xchg
ss
fldenv
mov
push
cmpl
sbb
fldt
or
xchg
cs
mov
jmp
sub
push
xor
inc
fisubs
mov
shrl
loope
fildl
ds
aaa
ja
sub
aaa
sarb
jmp
add
gs
jp
ret
stc
dec
movb
or
add
insl
push
and
lock
cmpsl
leave
xchg
cmpsl
test
cmp
mov
adc
cmpsb
outsl
inc
stos
adc
test
xor
pop
jecxz
sub
dec
repz
lods
int3
push
mov
xchg
pop
pop
stos
addr16
imul
sahf
mov
arpl
pop
insb
dec
cld
shll
testb
fld
mov
cmpb
mov
in
mov
jb
jg
shll
push
test
or
adc
adc
mov
iret
gs
ds
cmc
fisubrl
mov
mov
out
inc
scas
jmp
jno
xchg
and
jno
xor
jecxz
rorl
stos
popa
sbb
jp
lcall
aas
pop
call
xor
das
leave
scas
mov
out
xor
push
ljmp
push
test
add
inc
mov
jo
cmpsl
push
aam
and
push
mov
mov
popf
out
subb
pop
xchg
and
js
pop
push
mov
jl
sub
mov
inc
loope
lcall
nop
leave
testl
xchg
stos
out
xchg
adc
xchg
rorb
sub
mov
cs
imul
rolb
adc
pop
ficoml
testl
stos
cltd
inc
cltd
mov
add
mov
enter
mov
sbb
jp
mov
loopne
dec
cwtl
push
ljmp
rorl
jl
mov
pop
out
inc
inc
and
fdiv
subl
pusha
sbb
dec
jnp
xor
push
mov
mov
adc
loope
jle
loopne
in
imul
aas
pop
and
imul
fisubs
cmp
sub
out
scas
fwait
cmc
xchg
fbld
mov
cmp
push
inc
rcrb
xchg
hlt
out
mov
push
je
popf
mov
cmp
mov
xor
scas
inc
dec
inc
xor
addb
pop
rcl
jnp
inc
pop
dec
adc
or
fsub
stos
rclb
aam
test
ret
outsl
fneni(8087
pop
shr
mov
addr16
xchg
add
adc
jecxz
shrb
mov
jmp
add
out
ja
iret
mov
and
test
or
aad
push
imul
out
cld
sbb
popa
cmp
jae
fdivl
std
mov
and
cmpsb
cmpsb
rolb
mov
mov
imul
imulb
jge
popa
sti
push
sbb
and
cmp
pop
addl
xchg
int3
sub
add
or
xchg
jg
push
mov
pop
out
pop
jmp
or
cmp
xor
pusha
inc
cmpsl
sbb
and
shr
cmp
xlat
ds
or
popa
xor
lahf
sbb
mov
and
mov
xor
into
mov
aad
xlat
scas
mov
cmp
out
xchg
sbb
mov
and
cmpsb
lock
xchg
movsb
xchg
incb
cmpsb
loope
push
ss
leave
mov
xor
jmp
xchg
xlat
inc
cmp
sti
out
testl
push
dec
sbb
mov
repz
and
popa
bound
xor
test
jb
lods
lret
loope
pop
dec
das
outsl
sbb
in
insl
adc
jb
xor
jbe
shll
out
add
xchg
mov
mov
xchg
sbb
xchg
imul
pop
mulb
dec
mov
out
das
sbb
adc
lret
fxch
mov
in
lock
fsubrl
sti
sbb
push
pop
cmpsb
adc
mov
stos
clc
aas
aaa
and
adc
and
rcrl
out
sbb
inc
lret
sahf
push
push
arpl
pop
mov
icebp
stos
mov
push
into
mov
jb
add
fistps
mov
jbe
add
fbstp
std
clc
inc
outsb
pop
in
gs
js
dec
and
sti
mov
xchg
add
jmp
dec
les
push
movsb
rcr
clc
pop
fcoml
sbb
pop
jl
daa
mov
iret
and
imul
cmc
lret
lret
inc
decl
andb
sarl
and
addr16
pop
inc
enter
jns
and
jecxz
cwtl
je
lcall
in
clc
or
nop
cmp
push
faddp
mov
fisubrs
sub
testb
ljmp
push
test
push
cwtl
jne
lcall
test
xchg
or
scas
inc
mov
out
mov
cwtl
bound
es
xor
bound
jbe
fnstcw
pop
xor
mov
mov
rolb
jecxz
jl
js
xor
xor
sub
or
add
mov
arpl
in
push
inc
or
sub
loope
and
shl
rorb
sbb
fcmovbe
jmp
cld
add
lds
mov
imul
movsl
rcrb
sti
pop
ret
out
inc
jno
and
inc
mov
xchg
jg
dec
xchg
mov
mov
add
les
mov
dec
or
adc
jns
mov
mov
mov
push
popf
jno
pop
xlat
push
leave
mov
int3
or
je
sbb
in
add
fstpt
add
pushf
or
adc
mov
iret
jge
mov
xor
in
mov
scas
pop
sbb
push
movsb
pop
in
or
mov
ljmp
cmpsl
daa
negl
int3
mov
rclb
mov
xor
jne
xchg
mov
mov
ja
xchg
rcrb
sub
dec
mov
lea
in
shrb
jg
aam
sbb
pop
cmc
jecxz
mov
rorb
jmp
lods
mov
xchg
xor
in
mov
cmp
lret
popf
int
pop
stc
nop
out
xchg
and
dec
prefetchw
or
lcall
lcall
pop
push
pop
ss
std
cli
out
cmpsb
cltd
lds
jg
pop
jp
pop
inc
xor
and
mov
adc
add
pop
jmp
ds
mov
push
and
bound
pop
inc
add
pop
ss
scas
mov
mov
in
jbe
sbbb
jae
xor
pop
mov
xlat
jno
lea
and
fs
push
adc
in
addr16
mov
xchg
cli
or
mov
dec
test
add
and
lds
add
pop
cmp
push
popl
sub
xor
andl
andl
fwait
jae
adc
and
jg
scas
div
or
xor
jmp
mov
adc
mov
adc
sub
into
push
xchg
test
fsubl
dec
stc
movsl
mov
xchg
cmp
pop
fcom
aas
nop
cltd
mov
fstps
mov
out
icebp
mov
xchg
fsub
cmp
add
xchg
icebp
add
add
aam
in
filds
and
stc
and
jo
push
incl
push
mov
insl
in
cmp
inc
lahf
sbb
popf
clc
out
fucom
scas
jo
adc
mov
stos
rorb
lahf
sbb
mov
mov
adc
insl
pop
sub
movsb
scas
in
outsl
jp
lret
dec
push
push
test
dec
mov
lock
cmp
out
out
push
jle
std
repnz
out
or
into
and
lds
mov
rcrb
mov
div
add
sub
jge
popa
js
jecxz
out
jmp
or
nop
jg
push
sub
cli
flds
addb
push
mov
pop
inc
mov
jp
jg
insl
in
sahf
push
in
lods
or
mov
jno
into
stos
mov
pushf
in
out
jne
cmp
pop
repz
xor
adc
sub
adcl
mov
cs
or
mov
jb
out
mov
mov
fsts
jo
pop
shrb
out
into
jae
adc
cmp
sbb
sub
jmp
enter
fadd
xlat
fimuls
cmp
push
cmp
lret
mul
push
shll
cmpsl
or
jno
xchg
mov
movsb
dec
mov
dec
cmp
pop
push
xchg
dec
int
pop
adc
aad
pushf
and
pop
pushf
dec
xor
and
push
inc
mov
xchg
int3
adc
jg
inc
jbe
adc
insb
lds
push
pop
leave
icebp
mov
and
ret
xchg
ficomps
jle
rcll
add
inc
cmc
pushf
stos
insl
mov
stos
pop
mov
cmp
rcrb
fistpl
and
add
cltd
hlt
das
sub
mov
outsl
mov
int
sub
jl
xchg
notb
mov
test
mov
scas
daa
dec
add
add
dec
jecxz
and
aam
push
cmpsl
pop
mov
outsl
pop
push
jb
popa
shrb
mov
xchg
jmp
and
outsl
mov
mov
lds
enter
ret
push
sbb
jns
dec
into
jno
or
cmp
fdivrl
out
xlat
add
xchg
push
add
dec
mov
fwait
add
movsb
mov
jo
push
and
and
dec
and
jo
scas
mov
dec
xor
cwtl
inc
movsb
popf
adc
mov
shl
mov
jns
in
ret
clc
movsl
xchg
orl
xor
mov
pop
ret
sbb
fwait
and
cmp
jmp
push
adc
jb
aam
fcmovb
pop
shlb
mov
mov
scas
push
das
in
mov
lds
sub
jno
pusha
push
jo
inc
popa
in
aas
dec
add
xchg
stc
mov
push
or
fiadds
adc
cmp
sub
andb
mov
inc
js
pop
jl
out
out
iret
jle
dec
mov
jg
mov
shr
pushf
fistpll
repz
mov
xor
or
mov
lret
lcall
cs
hlt
cltd
dec
dec
jg
pop
fistl
add
push
les
popa
cmp
lret
int3
cld
dec
int3
ret
push
xchg
mov
loope
icebp
dec
xchg
fldt
xor
sub
or
cld
xor
push
fs
stc
xor
add
shr
scas
jo
mov
scas
xchg
xor
sub
enter
mov
ficomps
loopne
push
jle
xor
mov
xchg
mov
inc
outsl
call
mov
mov
aaa
inc
pop
stc
inc
je
add
subb
and
cltd
je
cmp
arpl
nop
mov
subl
pop
jg
loope
sbb
out
jno
cmp
jp
sahf
fcoml
ds
mov
insb
je
and
adc
rcrl
shl
or
es
sub
push
stos
fnstsw
xor
and
add
xchg
es
lcall
es
rcll
test
iret
push
cmp
dec
xor
repnz
pop
insb
xchg
sub
pop
cwtl
mov
add
inc
psrlw
ljmp
fidivrs
stc
inc
pop
cmp
scas
mov
movsb
dec
inc
mov
imul
dec
jg
sbb
sbbb
sbbl
sahf
rcrb
in
jmp
adc
sbb
scas
mov
gs
mov
sub
es
dec
or
jnp
cwtl
or
int3
rclb
dec
inc
cmc
lds
lea
xor
rorl
hlt
jmp
xchg
push
test
pop
addr16
mov
cmpl
adc
std
cwtl
adcb
rol
sbbb
push
into
add
mov
dec
sarb
fsubl
rcl
pop
push
jmp
mov
pop
test
ja
jge
mov
mov
jmp
into
jg
in
dec
test
pop
dec
pop
xchg
and
loopne
or
cli
ss
xchg
or
nop
and
sbb
adc
fsts
clc
inc
push
test
pop
into
out
sbb
mov
cmpsl
clc
add
sbb
aam
je
repnz
les
cmp
xchg
or
pusha
call
mov
pop
in
and
cwtl
cmp
cld
mov
cltd
dec
mov
mov
mov
nop
outsb
and
fldcw
push
loope
and
mov
push
popa
addr16
push
cltd
inc
add
int
addb
into
negl
xor
jle
insb
jno
out
xlat
xchg
cs
pop
mov
pop
out
pop
mov
leave
ret
daa
sub
testb
xor
xchg
mov
fsubrp
daa
adc
in
mov
sbb
mov
fistpl
jb
decb
xor
sbb
lds
xchg
mov
lock
in
cmp
mov
int
sub
cmp
das
add
std
jecxz
xor
mov
push
lret
sti
jae
jno
mov
mov
cmc
push
sbb
cs
orps
out
adc
test
jo
mov
and
xchg
push
dec
sahf
or
out
leave
sbb
cmp
pop
and
push
mov
aaa
mov
mov
push
adc
jne
subb
loop
out
push
cltd
pop
jnp
loopne
add
fidivl
movsb
push
push
or
mov
inc
idiv
daa
cmp
xchg
inc
cmc
loopne
dec
pop
lods
adc
movsl
mov
mov
push
lcall
jnp
add
inc
pusha
push
or
bound
js
push
or
ret
imul
jnp
cmpsb
popf
inc
cmp
js
mov
cmc
jb
jae
cmp
cmpsl
fistl
xchg
sub
push
aas
es
pop
mov
test
cmp
sub
mov
xchg
cwtl
cmp
sub
in
stos
sub
enter
imul
add
xchg
outsb
sub
mov
push
jecxz
repnz
call
mov
js
xchg
jge
add
and
jns
jp
outsb
test
fnsave
in
leave
jle
mov
shll
stos
pop
cmp
add
mov
std
push
insb
pop
aam
jbe
dec
sub
movsl
mov
jnp
loop
xlat
xor
mov
jno
adc
xchg
ret
fsubl
sbb
mov
cwtl
pusha
pushf
add
cmpsl
pop
dec
sarl
out
iret
in
stos
data16
or
pop
and
inc
loop
and
jle
adc
sbb
sbb
roll
andl
push
cmp
jmp
mov
inc
fisttpl
add
test
xchg
xor
addb
ja
cmc
mov
test
xor
dec
cmp
out
je
pushl
dec
inc
sbb
int3
idivb
mov
jecxz
lahf
xchg
jecxz
xchg
add
and
imul
js
mov
and
xor
setp
and
fsubs
xchg
sbb
inc
loope
or
cmp
movsl
xchg
movaps
mov
popf
mov
cld
jmpw
testl
mov
addl
adc
jl
rol
and
icebp
cmpl
loopne
cmpsb
js
insl
test
ss
sbb
jnp
push
cmpsl
jmp
data16
adc
gs
outsb
pusha
adcl
jl
repnz
lods
mov
and
data16
jb
cmp
xor
pop
jecxz
shll
dec
pop
ret
or
ret
lahf
cli
and
dec
inc
lock
fsubl
arpl
xchg
dec
rolb
xchg
outsb
std
mov
or
loopne
cmp
rorb
push
lahf
push
xlat
leave
jo
jbe
sub
cmp
cmp
mov
stos
cld
dec
mov
shlb
aaa
mov
add
iret
andb
nop
aam
shll
in
and
fcompl
lret
xchg
dec
jne
incb
add
mov
repz
jmp
mov
repz
xor
rclb
sub
ret
stc
and
mov
mov
mov
sbb
adc
mov
mov
lea
lcall
pop
lock
mov
daa
inc
xchg
adcl
sub
jnp
mov
int
sub
dec
add
leave
hlt
das
push
mov
inc
push
fmul
cmp
pop
cmp
fmul
std
aas
dec
push
and
lahf
test
test
xor
clc
movsb
stos
out
lea
push
scas
sub
xchg
sub
sahf
xor
icebp
xchg
ret
or
inc
addl
adc
jecxz
sti
push
repz
and
sub
and
lcall
data16
lds
fidivs
jo
cmc
outsl
neg
mov
shll
out
push
icebp
mov
or
movsb
pop
lea
jge
sub
test
xchg
dec
fldl
sahf
cli
dec
lock
mov
cltd
or
push
arpl
dec
imull
fsubl
es
rorb
or
pop
rolb
out
dec
paddd
cmp
mov
imul
adc
sub
xchg
aam
push
adc
jg
push
cld
or
mov
lods
fwait
mov
push
adc
cmp
jne
stos
sub
sbb
cmpsl
xchg
les
enter
push
inc
xlat
mov
mov
cmpl
inc
and
ds
int
xchg
subl
sub
or
int3
enter
movhps
jb
push
pop
push
mov
sbb
icebp
mov
mov
sbb
out
adc
sbb
sbbb
ja
and
icebp
addr16
mov
cs
pop
sbb
hlt
push
mov
jno
mov
dec
mov
xor
imul
xchg
je
fwait
xchg
scas
imul
leave
jnp
fbld
or
or
dec
jae
jle
xchg
dec
ret
push
cmp
jle
ljmp
inc
dec
pushf
cmp
fcmovnu
push
xor
test
out
outsb
dec
xchg
lock
bound
clc
jo
mov
orb
pushl
add
mov
jl
sbb
out
imul
mov
mov
sbb
inc
movsl
popf
pushf
icebp
sub
mov
outsl
adc
call
push
mov
jno
dec
xchg
shll
push
mov
push
fs
xor
or
mov
rcrb
pop
mov
cmp
cmova
hlt
cmp
imul
jl
mov
sbb
adc
cmp
stc
jecxz
subb
sub
scas
repz
mov
inc
sbb
or
jo
repnz
in
aam
sub
negb
rorb
icebp
pop
bnd
mov
push
loopne
sbb
sbb
pop
sahf
mov
inc
xor
movsb
add
xlat
cs
mov
loope
call
sub
arpl
or
and
test
cmp
push
mov
inc
sahf
ss
cmc
int
andb
addl
rsm
pop
cmp
push
mov
andl
inc
insb
fldt
out
stc
pusha
repz
ds
push
dec
inc
lods
mov
aam
int3
testb
jb
sub
nop
int3
es
es
stos
jno
stos
adc
push
sbb
scas
sub
push
cmc
jmp
mov
push
xchg
inc
push
call
sub
sahf
dec
xchg
jae
mov
add
lods
xchg
push
or
pusha
cli
stos
xlat
jg
push
and
cwtl
xor
jl
out
lea
movsl
xchg
xchg
mov
adc
dec
and
repz
or
pusha
fiaddl
mov
lods
mov
mov
fdecstp
dec
popa
cltd
cmp
cmpsl
shll
inc
mov
sarb
or
divb
arpl
test
pop
arpl
mul
push
iret
jmp
cs
std
sbb
jp
or
and
sbb
mov
pushf
push
and
mov
popa
pop
clc
dec
mov
lock
sbb
les
or
cmc
inc
add
dec
and
aaa
orl
inc
mov
mov
ret
mov
in
data16
jb
or
cmpl
and
mov
pop
fs
inc
add
adc
out
or
imul
addr16
jmp
clc
lods
test
mov
xor
sbb
mov
testl
in
mov
repnz
loope
xor
enter
pusha
stos
lret
push
add
jecxz
inc
xlat
jecxz
mov
sbb
bound
fucomi
mov
cli
fs
xchg
cmpl
push
insl
in
int
nop
sahf
lea
or
dec
out
mov
outsb
pop
test
xor
push
mov
loopne
je
or
dec
mov
push
push
std
mov
adcb
or
or
ret
inc
inc
add
scas
test
add
or
pop
lea
jnp
out
es
push
fcoms
push
dec
mov
bound
or
mov
ljmp
call
mov
and
mov
sub
mov
imul
stos
mov
popf
xchg
sub
cmp
lret
add
lcall
dec
xchg
push
insb
sti
insl
mov
pop
sbb
dec
xor
cmpsl
mov
shll
and
xchg
into
mov
add
test
mov
xlat
ja
arpl
inc
or
bound
lea
add
je
imul
xor
icebp
pushf
repz
popf
loope
sbb
mov
push
je
mov
dec
and
push
and
cli
aaa
std
ja
pop
mov
ljmp
push
or
mov
mov
stc
adc
cmpsl
cli
inc
adc
or
push
test
push
lahf
out
and
std
mov
pop
sub
or
push
or
jb
es
push
fcompl
or
pop
mov
fstl
cmp
fwait
push
sub
addr16
icebp
mov
pop
adc
imul
mov
bound
movsl
test
int
imul
hlt
jne
es
mov
add
insl
fwait
jb
lea
jbe
xchg
test
in
out
inc
mov
sbb
xchg
push
sub
mov
pop
les
mov
xor
pop
adc
lahf
xchg
xor
dec
cmc
iret
pop
xchg
scas
int3
mov
pop
mov
dec
aas
js
out
jg
xchg
pop
sbb
mov
jle
bound
mov
cmpsl
ret
andl
pop
push
inc
or
push
rorb
in
mov
sub
jmp
and
loopne
dec
sbb
mov
cmp
imul
push
stc
cmpb
and
test
xor
repz
jne
adc
mov
out
sub
sahf
inc
sub
jo
add
sbb
aas
je
push
in
shrb
std
lret
arpl
outsb
and
es
das
lcall
push
pop
adc
imul
adc
ja
aas
inc
push
aam
popf
xlat
jl
mov
inc
adc
das
fsubl
dec
sub
fdiv
xchg
out
push
imul
lret
mov
arpl
ret
loopne
test
mov
call
lcall
lods
jmp
mov
push
movsl
mov
cwtl
pushf
inc
pop
scas
cli
sahf
push
stos
dec
push
xchg
dec
insl
jno
loop
sub
or
orb
xchg
xor
push
mov
shlb
hlt
shrb
dec
es
xor
psrld
mov
inc
int3
or
stos
popa
dec
mov
pop
jno
aad
ret
push
push
push
insb
adc
imulb
iret
inc
mov
stc
imul
scas
adc
imul
or
lcall
lret
push
xchg
cmp
cmp
pop
fistpl
dec
dec
push
out
push
adcb
jo
pop
in
lds
ja
jl
pop
scas
or
xor
dec
cli
call
test
out
push
push
loop
scas
daa
xor
push
in
pop
sti
push
insb
sub
in
aas
dec
xor
and
fsubrp
add
adc
cld
dec
fnstenv
les
int3
mov
cmpl
in
or
push
xchg
add
scas
mov
mov
push
push
cmp
or
aas
push
jnp
inc
dec
test
mov
je
loopne
gs
sub
pop
or
dec
add
aaa
jno
das
lcall
cmpsl
rclb
mov
add
test
xor
ljmp
int
inc
xchg
leave
adc
je
ljmp
mov
and
pop
cmp
dec
aam
sub
scas
repz
mov
pushf
cs
or
test
dec
movb
sbb
sbb
and
loope
pop
ret
pop
dec
xorl
mov
in
lods
lock
add
adc
push
adc
shl
jmp
add
or
jmp
ljmp
pop
out
xor
addr16
cmp
sarl
js
ret
pop
aaa
repz
xchg
adc
adc
inc
inc
add
in
aas
repz
push
stos
loop
push
out
mov
sub
inc
xor
inc
fs
mov
jmp
hlt
dec
cli
push
ja
push
push
xlat
sub
adc
inc
lret
pop
jns
pop
out
mov
int
loop
in
and
xor
mov
dec
or
scas
push
outsb
push
lods
ja
aam
orl
nop
nop
push
movl
pusha
outsl
adc
lcall
jnp
add
shrl
mov
loopne
push
xor
add
rcrl
jl
dec
pop
daa
rorb
sbb
and
insl
incb
in
arpl
jle
adc
insb
es
lret
pusha
aaa
imul
mov
ds
jo
repz
test
lret
cld
push
fldl
xor
mov
jp
popf
xor
lods
adc
or
jo
add
pop
jno
xchg
lahf
adc
xlat
lods
aaa
scas
mov
jb
fisubrs
fdiv
push
std
dec
cwtl
dec
scas
cmc
xor
cltd
push
aam
loop
test
ds
pop
nop
jmp
xchg
add
movsb
sbb
xchg
test
mov
scas
dec
stc
cmp
pop
andl
mov
int3
incl
inc
pushf
adc
test
dec
gs
add
call
mov
bound
mov
push
xlat
orb
pushf
xchg
mov
cwtl
ljmp
add
fucomp
outsl
mov
pop
xchg
aaa
pop
xchg
popf
lods
xchg
cmc
inc
mov
and
cmp
iret
add
sub
xor
cli
out
xchg
and
ret
ror
cmp
mov
gs
rcl
leave
loope
mov
push
mov
jb
testl
lret
sbb
sbb
jns
fsubp
dec
mov
jbe
mov
ret
in
cld
xchg
adc
daa
lods
das
xlat
lea
pop
fs
.byte
sbb
add
nop
dec
push
jno
jnp
adc
fcoml
lret
fdivp
sbb
add
call
inc
mov
lds
xlat
adc
dec
fwait
rcll
dec
test
bound
outsl
pop
sub
mov
mov
loope
je
mov
lret
cli
mov
sbb
aas
sbb
loopne
sub
xlat
out
pop
dec
xchg
mov
ja
push
xchg
das
daa
jmp
shll
leave
repnz
je
enter
lock
cmp
fwait
jge
and
pop
fwait
cmp
mov
test
pusha
mov
pop
adc
adc
sbb
mov
mov
lock
clc
xor
and
imul
sub
arpl
lret
xchg
push
xor
inc
xchg
data16
sub
jl
in
movsl
pop
fidivrs
push
push
and
lahf
push
push
leave
mov
mov
adc
mov
cmp
push
test
pop
inc
fnstsw
push
add
xchg
and
pop
sbb
mov
mov
adc
enter
adc
xchg
test
mov
ljmp
adc
dec
popf
in
out
popa
sub
outsb
adc
int3
add
pop
inc
out
add
mov
xchg
test
test
addr16
mov
jb
loopne
cs
shr
lcall
les
push
roll
mov
mov
or
xchg
pop
mov
mov
sbbb
add
dec
int
cwtl
subb
sub
loope
sub
add
ret
in
inc
add
iret
inc
mov
push
sbb
mov
daa
add
pop
subl
in
mov
fisttps
mov
pop
adc
mov
fbld
jl
pop
dec
dec
xor
xor
ret
ret
mov
bnd
cmp
imul
sbb
and
cld
pop
jg
push
mov
add
out
repnz
je
mov
dec
jbe
and
enter
mov
cmp
ja
push
xchg
mov
sub
fwait
dec
mov
sbb
clc
adc
subl
and
or
and
mov
mov
outsl
inc
dec
inc
fildl
jnp
or
adc
in
xchg
inc
jecxz
rcr
push
dec
bswap
dec
cmc
orb
and
xor
jp
or
adc
inc
shlb
mov
jb
sbb
pop
add
sub
aam
pop
push
or
in
lret
scas
jae
inc
popa
adc
lock
stos
add
aas
jnp
ret
popa
cld
push
je
and
push
lahf
xor
jb
nop
sarl
shr
lahf
jae
and
push
adc
cmp
add
push
sbb
hlt
or
inc
aam
iret
inc
ja
inc
hlt
mov
or
jnp
aad
popa
imul
xchg
mov
test
inc
mov
mov
add
arpl
mov
imul
pusha
dec
mov
mov
xor
jge
cmpsb
or
xchg
aad
mov
ret
shr
fcoms
stc
repz
in
push
push
leave
push
push
inc
xorl
add
mov
mov
pushf
lret
popa
sub
add
inc
or
jnp
into
in
jbe
push
push
stc
loop
outsl
xchg
or
cmpl
orb
mov
add
xchg
mov
mov
mov
bndstx
notb
imul
sahf
add
xchg
pop
movsl
adc
hlt
and
int3
clc
sti
mov
mov
daa
inc
dec
dec
popa
lret
dec
test
mov
dec
mov
sub
js
cmpsl
mov
das
loop
push
or
fdivl
cli
or
scas
and
cli
insl
mov
insl
fisubl
shrb
xchg
sub
in
mov
or
andb
push
out
into
in
cmpsl
fwait
arpl
ret
mov
arpl
or
test
add
and
les
mov
ja
mov
adc
mov
pop
push
lock
push
add
inc
sbbb
lahf
push
xor
pop
xchg
push
popf
dec
pop
nop
movsb
dec
jl
clc
fcompl
pop
sub
pushf
mov
mov
mov
cltd
mov
arpl
jmp
xor
mov
add
int
stos
aad
ja
rep
mov
adc
pop
nop
outsl
cmc
jns
ja
dec
in
mov
rcr
into
inc
and
test
xor
lock
mov
in
push
sbb
lock
dec
xor
movsb
push
mov
ja
push
pop
xchg
mov
jle
xchg
mov
mov
daa
xchg
and
pop
fstpt
enter
adc
inc
sub
mov
adc
pop
aaa
cltd
sbb
loope
pop
dec
and
cmpsb
lret
aaa
dec
gs
outsl
sub
push
pop
lods
test
mov
xor
notl
or
sub
jbe
push
jp
lahf
push
and
cmp
ds
mov
stc
sahf
loope
add
js
or
sbb
and
dec
mov
aaa
mov
mov
sbb
adc
pop
inc
jns
sub
and
xchg
cmp
jne
xorb
mov
mov
filds
fldl
loope
insb
xchg
adc
insl
mov
syscall
adc
push
sub
aas
dec
sahf
lods
iret
dec
dec
leave
scas
cmpsl
pop
aad
add
imul
mov
sbb
cmp
xor
dec
jbe
daa
out
sub
out
das
bound
cmp
sub
mov
or
inc
push
adc
mov
xchg
call
popf
xchg
repz
cli
cmp
xor
insl
push
fimuls
cwtl
xchg
in
jbe
mov
jmp
mov
testb
int3
andb
mov
add
jmp
xor
test
arpl
or
fucomip
arpl
push
adc
jl
jle
xchg
incb
push
fmuls
xor
lret
mov
sub
xchg
sbb
movsb
jae
mov
jbe
stos
add
xor
lret
mov
add
cmpb
mov
loopne
aas
cmpsb
das
pop
jne
jl
jle
mov
jae
jne
and
mov
jle
popf
dec
mov
cmp
jno
rcrb
mov
jmp
clc
out
dec
mov
xor
xchg
cmpsb
fistpll
nop
sti
jae
out
outsl
and
lea
sbb
xor
fsubrl
imul
add
lret
cmp
add
xor
sbb
jae
js
sbb
push
pop
lret
sub
xchg
dec
pop
push
aas
fiadds
cmpsb
ljmp
jmp
clc
es
movsb
and
lret
xor
nop
xchg
push
mov
lods
fcmovu
test
shl
pop
gs
mov
es
bound
stc
movsb
test
add
loopne
mov
lret
jmp
mov
sti
lods
jecxz
xchg
pop
or
sarl
cmc
add
push
loop
mov
out
mov
scas
inc
movsb
ds
scas
sub
sub
or
aaa
jne
sub
enter
sti
fwait
in
add
mov
inc
cmpsb
popa
jg
and
or
dec
push
clc
aad
xchg
jns
mov
inc
nop
fsubrl
inc
cmp
repnz
std
xchg
jbe
dec
dec
fiadds
out
mov
out
stos
mov
pop
iret
xchg
cmp
sub
sbb
mov
mov
dec
enter
mov
sbbl
mov
mov
inc
mov
xor
cmp
fmul
push
dec
sbb
push
int
mov
adc
mov
loope
jo
pop
xchg
adc
push
icebp
jecxz
lcall
pusha
fdivrl
push
decl
loopne
and
xor
mov
cltd
xor
shll
cmp
cmp
lea
in
sub
scas
and
mov
sub
mov
packssdw
les
jb
sbb
mov
jns
xor
addb
jg
jecxz
push
stos
adc
push
adc
pushf
lret
repz
dec
js
dec
xchg
cltd
or
pop
test
cmpsl
jo
mov
cmpsl
data16
les
or
lock
jl
xchg
xchg
xor
in
movsl
xrelease
push
popa
int3
mov
int3
lea
scas
in
or
gs
mov
adc
dec
insl
lcall
and
lret
fcmovnb
scas
gs
movsl
out
int
pushl
fmull
mov
add
xchg
jae
pop
push
out
aam
cmp
test
fmul
xchg
sbb
into
or
mov
sbb
and
in
xor
bound
scas
adcl
inc
gs
pushf
dec
fcom
mov
mov
aad
push
xor
sti
lahf
mov
lea
bound
out
fs
sub
adc
fisubrs
iret
imul
cmp
jno
test
xchg
xchg
mov
mov
mov
mov
fisubrl
popf
mov
mov
icebp
or
mov
test
scas
fs
sub
fisttpll
mov
das
int3
lcall
sub
mov
sbbl
mul
jno
jp
bound
mov
add
mov
fwait
jl
jmp
push
xorl
cs
cmp
mov
data16
repnz
sub
in
ljmp
mov
xchg
aam
sbb
call
jle
movsl
ss
imul
mov
push
cmp
pop
or
leave
push
out
pushf
je
cmp
clc
cmp
call
adc
push
sbb
xchg
fistpl
xor
jp
dec
jecxz
gs
lret
inc
lret
lods
sub
push
sbb
sahf
add
outsl
pop
das
pop
jo
jmp
pop
enter
inc
xchg
leave
lret
push
fsts
jae
xchg
pop
xchg
jno
mov
nop
iret
mov
ds
inc
xchg
push
ja
out
arpl
push
mov
jmp
loope
ljmp
and
jp
cld
cmp
xor
xcrypt-cfb
cmpsl
fs
adc
inc
add
subb
sub
movsl
cmpsb
mov
xorl
add
sbb
inc
adc
jmp
arpl
aas
lock
add
ficoml
push
out
cmp
rcr
jns
xchg
ds
cmp
sbb
cwtl
xchg
sbb
push
es
cmp
mov
xchg
insl
cmove
popa
mov
pop
sbb
jno
xor
into
or
mov
iret
sub
arpl
pop
fistl
sub
xchg
mov
sub
dec
mov
xor
adc
fadd
push
lods
cld
jnp
out
jnp
lods
sub
ffree
mov
jb
sub
js
shl
lods
cmpsb
outsl
hlt
push
rcrb
ror
dec
pop
pushw
inc
cmc
das
mov
and
popa
push
fdivrl
addr16
das
inc
pop
lea
fdivs
arpl
cs
test
int3
stos
fistpll
dec
inc
sub
mov
popa
push
fbstp
mov
pop
sbb
subl
add
imul
mov
adc
daa
movsl
sub
mov
aad
xchg
imul
faddl
shll
aam
gs
scas
sahf
fwait
xchg
adc
pop
popf
ficoms
pop
lret
in
enter
stc
in
mov
mov
dec
mov
mov
iret
xchg
mov
pop
push
mov
cmp
or
stc
mul
movl
ror
or
xchg
jno
fstps
jns
shll
sbb
out
sub
ljmp
sub
insl
pop
sbbl
bound
test
xchg
mov
cmp
inc
push
jbe
outsl
push
mov
into
mov
pop
dec
jg
push
adc
xor
mov
aas
dec
test
and
iret
mov
inc
daa
cmp
xlat
setae
cli
ret
cltd
lods
push
jne
or
cld
and
or
add
stc
andl
xor
xor
mov
nop
mov
jnp
add
xor
aam
pop
ss
cmc
das
imulb
outsl
add
adc
add
mull
aad
je
xchg
inc
aas
xor
sbb
or
pop
sub
adc
shlb
jno
pop
call
jge
push
lcall
mov
leave
push
adc
sbb
mov
push
les
cmpsb
mov
jne
bound
out
clc
insb
pusha
cltd
pop
ss
fdivr
dec
aam
pop
das
arpl
imul
imul
aad
push
jge
jnp
sbb
mov
pop
bound
les
cmpsb
xchg
movsb
rolb
fdivl
xor
jne
ds
call
rorb
gs
push
xchg
arpl
dec
add
pop
inc
into
ljmp
es
xchg
ja
shll
sti
push
or
dec
mov
int
insb
mov
movsb
pop
mov
mov
scas
stos
mov
jle
jmp
jb
testl
mov
mov
mov
mov
pop
sub
mov
dec
sbb
aas
aaa
add
dec
int3
jp
dec
popf
adc
cmp
pop
push
sub
enter
sahf
mov
sub
scas
mov
sbb
out
mov
cmc
pop
fucom
push
inc
dec
push
jbe
roll
add
rol
xchg
insl
int3
pop
jnp
cmp
in
scas
jne
push
pop
adc
fs
rcrl
in
jecxz
ss
arpl
mov
fs
cwtl
fdivl
lods
and
lea
repnz
js
fwait
jmp
fsubrp
mov
pop
movsl
mov
push
addb
add
stos
les
sbb
xor
push
insb
mov
aaa
scas
or
cwtl
stc
test
fs
sub
pop
insb
mov
mov
adc
jo
fdivr
test
jno
jnp
negl
pop
cli
stos
adc
pop
decb
pop
jns
out
sbb
dec
imul
mov
jg
test
test
sti
pop
movsl
mov
mov
dec
push
or
xchg
mull
movsb
nop
dec
mov
pop
dec
sbb
stos
pop
mov
scas
push
mov
nop
int3
cltd
and
test
jge
sbb
or
je
cmp
mov
push
shlb
xor
rdpmc
push
mov
xor
shlb
mov
xchg
call
ret
sti
dec
pop
push
add
sbb
and
aaa
sar
std
or
lcall
xor
pop
cltd
push
into
inc
lods
cli
and
add
ret
jae
arpl
sbb
es
add
lods
mov
hlt
or
xchg
dec
pop
insl
cmp
push
xchg
xor
movsb
inc
enter
popf
adc
mov
dec
xchg
xor
or
pop
push
cmp
mov
jo
movsl
sbb
rcr
add
adcl
lret
xor
xrstors
popf
mov
mov
lods
call
push
imul
jb
adc
jle
mov
cmp
fucomip
pop
flds
mov
pop
mov
imul
mov
xchg
xchg
aad
mov
xor
shl
ljmp
push
aam
out
in
sbb
lods
and
adc
ljmp
outsw
push
dec
mov
jge
imul
scas
fwait
push
xorb
jg
inc
mov
lods
mov
dec
cmpsl
cmc
lret
pop
lret
xor
bswap
loop
jo
dec
adc
jns
mov
jns
jmp
into
push
cmp
ss
mov
pop
mov
sarb
jb
dec
and
lahf
cmp
andl
es
inc
imul
xor
clc
mov
dec
xchg
cltd
jle
push
in
push
cmpsl
mov
mov
out
outsl
je
mov
xchg
and
in
dec
push
add
mov
fsubr
and
xor
and
xchg
pop
fadds
insb
jae
and
cmp
push
sbb
xor
mov
dec
in
xlat
das
push
inc
call
dec
stc
inc
jg
lods
mov
xchg
mov
cld
loopne
mov
daa
and
rcrl
cmpsl
sar
fwait
add
stc
cmpsl
cmp
ds
pop
aam
in
cmc
rclb
icebp
inc
insl
xchg
cmp
push
leave
shll
push
ljmp
imul
cli
push
xchg
pop
push
add
test
cmp
mov
xchg
sti
mov
data16
insb
repz
fwait
aaa
sub
mov
insl
jg
xchg
pop
add
fsubrl
clc
dec
jg
fisttpl
add
add
int
cs
imul
push
and
push
loopne
arpl
cltd
je
insb
mov
cld
pop
push
test
dec
fsubs
fbld
inc
push
stc
lcall
or
mov
mov
sub
push
dec
stos
xchg
cltd
jmp
add
add
add
jo
clc
ret
insb
cmp
jecxz
mov
push
leave
xchg
sub
aad
shrl
orl
mov
sti
jns
fidivs
jae
add
shrl
sbb
push
or
dec
fidivrs
lods
dec
dec
mov
lret
jle
jecxz
les
ss
lcall
sub
outsb
cli
and
xor
xchg
dec
jge
mov
adc
out
adc
cli
test
divl
inc
adc
mov
add
repz
cmpsl
mov
fdivl
pop
cmc
data16
mov
aas
nop
loopne
stos
daa
xor
jns
add
pop
outsl
out
pop
pop
xor
aas
mov
mov
sub
aad
jb
mov
pop
or
cmpsb
or
push
jp
xor
nop
cs
push
dec
or
jno
dec
adc
mov
dec
cmc
hlt
mov
and
pop
ret
fsubs
and
pop
sbb
inc
sbb
xchg
push
push
pop
inc
push
arpl
jns
xchg
outsb
call
sbb
add
cmpsb
test
adc
push
sbb
dec
std
not
outsb
mov
xchg
shr
or
mov
pop
std
dec
rcll
movsl
ret
sbbb
mov
jecxz
ret
and
daa
xor
pop
popf
shrb
fwait
mov
jae
cltd
pushf
xchg
pushf
rorl
cwtl
pop
mov
sub
out
sahf
mov
mov
sbb
std
mov
mov
mov
cld
das
jp
inc
xchg
hlt
mov
fisttps
fs
pop
testb
xor
mov
in
sub
es
cld
mulb
mov
jns
divl
outsl
hlt
addr16
push
idivb
aad
fidivs
xorb
pop
leavew
lods
cmp
into
nop
bound
test
and
xor
cli
shl
sub
or
test
pop
ss
arpl
adc
shlb
lds
cld
stos
sub
mov
in
ja
jecxz
mov
inc
test
dec
out
inc
aas
mov
fimuls
xchg
xlat
jg
xor
das
rcr
pop
xlat
adc
dec
adc
xchg
cmpsl
imulb
inc
sbb
cmp
xchg
dec
jne
outsl
sub
push
fdivrl
adcb
scas
aaa
mov
scas
mov
test
push
ret
push
cltd
data16
and
adc
lahf
stc
dec
sub
push
jmp
dec
add
push
lcall
inc
outsb
mov
or
push
int
gs
dec
push
lret
hlt
cmp
divb
jns
xor
je
sub
xor
outsb
or
pop
js
xor
xchg
jecxz
xor
insl
mov
pop
or
or
mov
fistps
mov
push
xchg
add
mov
shrl
dec
jp,pt
sarb
push
imul
test
rclb
jmp
mov
pop
insb
icebp
lret
js
rcll
adc
je
addr16
adc
mov
jbe
mov
subl
sub
adc
pop
mov
das
or
loope
jno
sbb
adc
in
jge
imul
push
inc
aam
dec
and
lods
cmpsl
ja
sbb
mov
scas
cmp
jg
mov
and
sbb
pushf
pmuludq
jmp
in
les
dec
jmp
sub
pop
imulb
test
xchg
lahf
pop
sbb
clc
in
adc
dec
pop
jnp
sub
xchg
in
out
sbb
ret
cmp
gs
sbb
push
filds
loop
cmp
adc
cld
xchg
pop
xor
minps
push
adc
adc
inc
mov
popa
in
inc
dec
adc
mov
call
or
sbb
repz
hlt
imul
lahf
lahf
sub
jbe
lahf
push
add
aaa
jp
sub
fmuls
flds
mov
imull
and
call
out
out
adc
cltd
mov
or
test
sbb
adc
clc
add
or
or
scas
sub
repnz
xchg
xchg
jp
fidivrl
push
fistpl
or
sbb
sub
add
dec
sub
shlb
icebp
add
add
pop
dec
mov
add
leave
pop
test
xor
jge
bound
lds
xlat
push
inc
cmp
inc
lret
jle
test
mov
pushf
mov
scas
fmull
inc
lret
mov
jl
fsubl
lods
pop
push
loope
in
sti
fnclex
adc
lahf
cmp
sub
insb
fwait
dec
push
call
push
mov
xchg
push
jmp
xchg
rep
dec
xchg
pop
lock
mov
jl
inc
dec
jle
jl
jge
mov
in
out
mov
inc
add
xlat
ljmp
mov
mov
icebp
adc
pop
adc
adc
in
cmpsl
inc
cld
xchg
fucomip
jne
cmpsb
ljmp
in
addr16
sbb
adc
ret
fsincos
aaa
jno
cmp
xor
cwtl
dec
clc
loope
adc
fdivrp
ja
or
or
mov
pop
jle
cwtl
dec
call
jb
mov
xor
mov
and
jl
xor
test
adc
test
cmpsl
js
xor
ret
jle
mov
and
push
enter
stos
mov
sbbb
sub
stos
fiadds
inc
xchg
mov
mov
cmp
jl
or
rcrb
cmpsl
cmp
jmp
pop
xchg
sbb
mov
inc
loopne
loopne
call
lret
outsl
push
mov
xchg
popf
imul
cmp
sbb
or
cld
sub
and
lret
loop
test
enter
xor
push
mov
rcrb
test
ret
xor
imul
inc
add
ret
repz
adc
mov
push
pop
xchg
pop
fidivl
loopne
out
movb
dec
out
bound
sbb
pop
clc
fdivrl
test
jns
push
mov
jnp
imul
outsl
mov
xchg
xor
lods
lds
cmpsl
cmp
out
inc
arpl
sub
dec
inc
loope
cld
jmp
fldln2
fistps
cmpsl
inc
mov
call
push
pusha
das
xor
jb
movsb
mov
enter
sub
test
mov
sbb
xchg
dec
inc
rcrb
adc
lcall
push
mov
sbb
pop
push
testb
mov
or
addr16
or
cmp
mov
je
icebp
iret
idivl
cmp
fidivrl
fs
jno
add
shrl
cwtl
jb
pop
and
lea
cmpl
jmp
mov
mov
out
mov
aad
stos
adc
nop
dec
sbb
sbb
add
push
mov
jno
repnz
push
dec
push
adc
sub
outsl
pop
push
nop
shlb
fstpt
stos
xchg
stos
and
jg
adc
imul
add
adc
ss
jb
xchg
sti
stos
xchg
fst
cmc
out
fs
pop
mov
test
mov
les
mov
add
stos
fimuls
xor
jmp
repnz
leave
push
jnp
aaa
jnp
dec
rolb
insb
dec
shlb
or
sbb
cmp
int
out
cmpsb
out
mov
daa
pop
pop
mov
pop
pop
xchg
mov
jo
loopne
fnstsw
xchg
or
movsl
adc
in
mov
or
sbb
lock
in
jge
dec
test
daa
cs
inc
jg
inc
scas
push
popf
movsb
jl
mov
and
mov
fimull
inc
cmp
add
pop
mov
out
push
jle
jge
int3
and
adc
xor
sbbb
mov
and
mov
cwtl
loope
cmp
ret
bound
mov
aaa
xor
inc
scas
ljmp
loopne
cld
jnp
dec
add
aam
clc
xchg
cli
jmp
xchg
push
dec
pop
pop
dec
push
push
shll
js
or
mov
out
shl
ficompl
mov
cmp
add
mov
loopne
mov
mov
out
mov
adc
leave
push
sbb
sbb
into
lcall
js
jo
aas
pop
add
jne
je
jb
cs
mov
dec
pop
push
mov
pop
xlat
lahf
sbb
or
push
inc
aaa
scas
mov
adc
enter
shll
or
outsb
jb
adc
cmp
fnsave
and
testl
cmpsl
jne
dec
mov
add
hlt
cmp
lds
jbe
rcl
cmp
lds
xor
sbb
push
or
leave
repz
movsb
pmaddwd
out
in
lret
mov
mov
movsl
mov
push
inc
lcall
dec
adc
nop
jmp
xor
insb
add
jnp
push
jns
mov
sub
cmpsb
lcall
inc
or
xchg
add
or
ss
sbb
or
xchg
and
loopne
stc
cmp
fisttps
and
arpl
test
xchg
xchg
loop
dec
popa
popf
sti
sub
sbb
stc
sbb
and
repz
and
jle
rep
mov
sbb
dec
cs
push
sub
fcoml
add
add
cmp
sub
sub
sub
stos
ss
in
cli
movsl
daa
out
mov
jmp
aaa
xor
sub
mov
jnp
out
pop
pop
jno
push
shlb
push
enter
mov
push
movsb
sbb
jno
mov
pop
call
dec
ret
std
cmp
sbb
push
test
es
adc
iret
ds
pop
fdivr
push
subl
in
es
mov
mov
and
mov
repz
fisttpll
sbb
push
bound
out
push
jp
add
popa
push
int
sub
in
sub
daa
fwait
or
adc
inc
mov
ficomps
jmp
outsl
je
negb
adc
add
flds
out
xchg
push
imul
into
lcall
iret
das
mov
sub
adc
data16
and
inc
jns
ds
cs
outsb
sub
jl
out
fdivrl
dec
cmpsb
jecxz
adc
cmp
fwait
hlt
jno
or
scas
pop
dec
push
xchg
bound
call
pop
inc
jmp
out
inc
push
dec
add
js
dec
flds
test
add
xor
pop
add
mov
clc
adc
popf
mov
shll
jl
decb
stos
jne
fdiv
cltd
cmp
gs
cmp
jmp
repz
xchg
rcrb
mov
push
sub
iret
aam
sarl
jno
mov
jecxz
out
popa
ret
lods
in
insb
dec
out
enter
jae
orl
cmp
cmpsb
and
das
inc
sti
jmp
xchg
adc
xor
cmpsl
int
jne
test
push
dec
mov
cltd
push
mov
cld
or
and
dec
loope
test
add
push
mov
jne
dec
mov
pop
ret
mov
mov
dec
or
inc
xor
pusha
pop
repz
push
in
test
lret
mov
sbb
pop
in
add
push
rclb
xchg
scas
out
xor
fsubl
cwtl
test
mov
in
xchg
aaa
pushl
lea
subl
cwtl
pop
jno
xchg
mov
test
lock
sbb
sub
out
enterw
movsl
add
dec
rcll
cmp
les
mov
cltd
sub
ret
in
fwait
add
jne
adc
outsb
aad
imul
inc
lahf
fstpt
pop
xor
clc
decb
sub
xor
push
dec
cwtl
inc
cld
pushl
xlat
test
sbb
cmpsb
mov
mov
cmp
pusha
pop
shlb
mov
subb
and
push
xor
cmc
fistpll
mov
xchg
jno
fildll
mov
ja
add
mov
stc
lods
dec
xchg
mov
push
scas
or
out
dec
cli
out
std
scas
dec
or
popf
mov
rolb
in
mov
filds
scas
std
xchg
or
inc
cli
cmp
aaa
cmp
dec
push
rorl
je
sub
inc
mov
inc
cltd
cmp
out
xlat
incl
stc
lcall
out
mov
popf
add
outsb
std
cmpsb
shlb
pop
and
or
fildl
dec
push
sub
decb
jbe
jmp
mov
mov
fisttpll
sbb
scas
inc
inc
lods
mov
mov
or
les
adc
stos
cmp
lods
rorl
push
pop
or
xchg
jl
outsb
and
push
ss
add
sub
xor
xchg
fsubrs
add
rolb
adc
or
loope
adc
mov
rcrl
icebp
xor
pushf
push
jg
bts
movb
jae
sbb
mov
mov
jecxz
clc
push
adc
ljmp
mov
xchg
icebp
pop
aam
movsb
rcll
sti
mulb
jp
movsl
xor
lds
xchg
pop
stos
popf
xchg
nop
xchg
mov
in
imul
mov
repnz
cld
ss
sbb
js
sti
movsl
mov
adc
or
pop
movsb
push
or
jmp
out
test
shl
aam
lds
jge
adc
mov
fmulp
mov
loop
dec
mov
pop
sub
dec
or
cmp
pop
test
shll
int
sbb
cli
out
cmp
cli
jnp
sti
xchg
inc
ds
jecxz
and
xchg
popf
jecxz
mov
insl
dec
ds
lret
adc
imul
out
std
jmp
cmp
movsb
cmp
add
sti
jns
lret
xor
pop
lds
test
scas
sub
add
sbb
xchg
mov
inc
mov
pusha
fucomp
cmp
mov
mov
cmp
jns
adc
out
lock
pop
repz
push
mov
fiadds
sbb
cld
lret
push
mov
xchg
arpl
in
pop
fwait
cmpsb
jns
es
sti
jle
scas
ret
pop
icebp
jno
mov
and
xor
jmp
stos
mov
out
sub
cmpsl
pop
fimuls
lds
lret
cmp
pushf
hlt
mov
jo
fcomps
stos
pop
cld
push
insb
push
dec
xor
out
push
outsl
out
mov
mov
andl
adc
rep
dec
ftst
ret
insl
pop
sub
and
lret
push
jbe
add
data16
xchg
and
or
cli
mov
push
shrb
icebp
push
adc
and
test
inc
lret
mov
aad
dec
cmpsb
jecxz
dec
xor
std
sbb
daa
add
push
out
imul
icebp
sti
insb
or
ss
xor
jo
pop
push
out
js
es
inc
jge
movsb
call
push
scas
cld
sbb
jbe
mov
movsl
dec
add
push
mov
mov
push
rcl
in
scas
sti
aas
inc
dec
jmp
dec
and
je
into
jmp
test
stos
lods
in
xchg
in
and
shlb
xchg
mov
icebp
jmp
in
ljmp
pop
pop
xchg
and
mov
mov
inc
lret
jo
adcb
movl
pop
pop
or
mov
dec
insl
xor
lock
xchg
shlb
jbe
mov
repz
push
jns
insb
aaa
ret
decb
inc
mov
jg
xor
sub
mov
push
es
jno
outsl
or
dec
fwait
nop
andb
pop
add
push
inc
leave
sbb
mov
ficoms
xchg
sarl
cs
jge
pop
adc
sbb
inc
or
jbe
cmc
xlat
sbb
les
push
cld
fmull
cld
decb
or
cmp
cs
mov
jle
out
pop
inc
cmc
int3
jns
jne
add
dec
mov
mov
jl
iret
rolb
sub
cmp
push
and
sub
lods
lds
push
add
orl
pop
jno
pusha
mov
ret
in
add
stos
xchg
adc
negl
sub
push
es
iret
ds
push
ljmp
aaa
or
leave
int
and
in
jmp
imul
sbb
and
pop
push
loopne
pop
and
mov
mov
mov
add
out
sahf
xchg
cmp
jp
xchg
mov
imul
test
stos
into
dec
adcl
and
test
leave
xor
insl
cmpsb
je
pusha
xor
test
cs
sarl
test
in
push
push
fsubs
sub
lock
lods
xor
xor
cmpsl
mov
lret
jg
push
add
insl
movzbl
jns
scas
mov
out
shrb
out
jbe
ja
sbb
arpl
mov
jb
popf
and
and
divl
loope
add
mov
cmp
lret
sti
cld
in
push
mov
pop
divb
imul
in
aad
or
xchg
sbb
cmp
ret
pop
sub
enter
push
push
cmp
push
mov
loop
lods
js
enter
sub
inc
scas
js
loopne
test
mov
ss
xchg
arpl
pushl
and
sbb
lret
cmpsl
mov
inc
xor
jae
or
sub
mov
jns
adc
mov
rcrl
jl
fiadds
bound
pop
xor
js
dec
in
sbb
loopne
push
nop
adc
dec
adc
mov
xor
jns
aas
movsb
bound
adc
gs
ret
idiv
hlt
cmp
jbe
iret
or
cmpl
xor
addr16
inc
popa
mov
lret
call
ljmp
test
shll
rorb
mov
sbb
or
jo
push
xchg
leave
sbb
sbb
fimull
insb
repz
xchg
and
sbb
xchg
enter
out
or
or
sbb
jge
adc
sbb
lock
push
xchg
stos
lods
repnz
test
dec
cs
jns
scas
sub
pop
out
dec
loopne
inc
in
iret
jne
pop
je
loop
push
mov
jmp
mov
stc
in
sbbl
cmp
push
aas
push
and
sbb
ret
aas
mov
mov
xor
ds
addl
mov
sbb
mov
mov
jne
popf
ss
pushf
ret
sub
and
sti
mov
sbbl
iret
imul
ret
dec
stc
dec
inc
jle
imul
mov
test
sub
lret
pop
addl
mov
cli
lahf
adc
addr16
cwtl
jae
popa
dec
jae
imul
jl
dec
jle
sbb
fwait
mov
and
xor
stos
or
in
sub
sbbb
or
adc
push
sub
popw
addl
xor
pushf
cwtl
call
sbb
hlt
je
ljmp
fs
lahf
ss
lcall
pop
pop
mov
sahf
jae
je
push
push
jno
and
and
push
das
loopne
adcb
mov
mov
movsb
ja
push
dec
mov
jne
bound
inc
das
stc
mov
repnz
rol
sarb
int
rcll
pop
jns
sbb
jb
movsb
push
int3
leave
mov
inc
xor
xchg
std
xchg
adc
inc
fidivrs
test
mov
stc
jns
dec
aas
sbb
mov
sti
aas
xchg
xor
loope
adcb
sbb
lock
or
mov
add
xor
push
test
push
popw
mov
sub
add
andl
aas
lds
divb
inc
inc
sub
iret
mov
xchg
mov
frstor
sub
aad
scas
and
jl
out
pop
ss
xlat
out
jno
loope
mov
xchg
push
insl
push
jnp
push
aad
cmpsb
nop
jp
xorb
pop
loope
popf
into
inc
cltd
cmp
adc
inc
dec
mov
adc
lods
in
push
jo
addr16
push
std
in
inc
outsb
xor
xor
hlt
out
cltd
xchg
sbb
mov
test
movsb
jecxz
jge
cmp
int3
fistl
cmp
daa
mov
push
inc
pop
inc
aaa
pop
mov
mov
jle
dec
inc
xchg
loop
in
rcr
fildll
adc
sbb
negl
xchg
inc
mov
mov
fisubrs
lret
mov
out
rcl
daa
sbb
or
xchg
outsl
cmp
aaa
mov
jp
inc
outsl
fstpt
loop
test
sbb
fucomi
in
fisubs
lcall
testl
dec
data16
movsl
mov
jge
stc
jecxz
add
mov
outsb
jne
pop
repnz
cmp
in
add
sbb
lahf
jno
pop
dec
xchg
mov
xor
and
mov
push
call
rcl
xor
sbb
pushf
popf
or
aas
stos
loopne
and
add
fisttps
xor
push
dec
sub
rcrl
add
lret
loopne
loope
fwait
sub
dec
inc
inc
adc
in
xchg
insl
orl
lea
test
subb
lahf
lods
sub
test
cmp
inc
out
int3
jg
inc
rcrb
enter
mov
add
dec
ds
adc
mov
push
jg
and
dec
inc
aam
lods
je
mov
xchg
popf
shlb
sar
mov
es
adc
mov
loope
pop
sbb
mov
mov
sub
sbb
push
and
push
out
pop
adc
das
cmp
js
or
mov
jg
addl
fimull
ds
popf
outsl
mov
mov
fadd
inc
lret
dec
push
test
push
sub
mov
pop
ret
and
inc
stos
pop
sbb
cmp
fsub
rol
out
sbbb
shll
stc
js
sub
fldt
fcmovb
push
pop
repz
adc
or
add
movsl
out
out
outsl
cltd
xor
mov
ss
popa
daa
int3
fsubrp
mov
out
scas
clc
push
and
icebp
cld
addr16
mov
xlat
ficompl
dec
sbbb
stc
inc
in
and
fistpl
fmull
push
fwait
xchg
push
and
insl
xchg
and
addr16
or
inc
sbbl
or
xorb
xor
pop
filds
test
gs
sbb
mov
cwtl
mov
push
loope
xchg
mov
sub
mov
pusha
aas
popa
cmpb
jl
pop
inc
mov
mov
pop
addr16
je
xlat
xor
jbe
jbe
sub
mov
mov
jb
mov
push
jp
dec
mov
xor
scas
sub
push
cmpsl
mov
cmpsb
and
ss
ds
movsb
pop
mov
data16
shl
pop
cmc
les
je
enter
xlat
or
addr16
mov
xor
cmp
mov
xor
mov
iret
xchg
lods
sub
cmp
cmpsl
or
std
sbb
jns
aas
arpl
mov
inc
cmp
and
push
mov
pusha
pop
xorl
dec
or
out
adc
pushf
jae
cmp
ret
cmp
sbb
cmp
cwtl
xlat
jl
adc
mov
add
mov
divb
pop
fiadds
sub
jbe
jmp
in
cmp
xor
sar
mov
imul
cmp
push
ror
xor
movntq
cmp
push
xchg
push
fidivrs
je
mov
fsubs
rorb
mov
aas
push
xor
cmpsb
and
test
push
push
call
sbbb
cmp
adc
mov
or
sbb
mov
mov
pop
or
shlb
out
js
mov
pop
cmp
loopne
jecxz
fists
sbb
add
outsl
sbb
test
mov
xor
mov
and
repz
xchg
mov
or
div
add
iret
push
push
dec
xchg
in
xlat
or
and
pop
enter
lock
xchg
insl
fnsetpm(287
lret
sbb
ss
jmp
dec
adc
cmpb
mov
inc
lds
data16
sub
dec
xchg
pusha
add
out
and
iret
mov
stos
and
daa
jg
pop
push
mov
fchs
add
les
push
push
mov
dec
cmp
clc
jle
je
cwtl
cmpsb
xchg
inc
popf
sbb
dec
mov
jmp
arpl
scas
or
imul
add
addl
stc
xor
stos
mov
call
fsubrs
lds
fiadds
cmp
dec
xor
xor
das
jmp
dec
and
int
sbb
adc
pop
fdivrl
xchg
ds
into
das
pop
jmp
nop
call
pop
pop
mov
rorb
mov
xor
loope
push
das
or
cmpsl
jne
mov
mov
push
or
sbb
daa
mov
mov
dec
sbb
cmp
div
repnz
xchg
stos
and
scas
fs
outsb
mov
jl
mov
leave
pop
mov
xchg
ja
adc
xor
sub
mov
xor
cld
ds
and
es
jle
in
mov
mov
jg
js
es
mov
pop
lods
test
dec
ljmp
int
lods
xchg
fwait
lcall
sbb
ret
cmc
add
andb
lahf
mov
cli
test
test
movsb
pop
lods
dec
sbb
int
cwtl
subl
sub
xlat
pop
mov
rcrb
mov
mov
out
das
divl
lock
pop
in
lret
out
mov
in
pop
loop
enter
into
sub
pop
iret
loopne
cld
out
fildl
cmp
js
xchg
lods
pop
out
mov
push
add
xlat
jmp
aam
xchg
cmp
push
dec
ja
andb
fsubrl
test
sub
fistpl
mov
pusha
jmp
rcl
js
xchg
mov
and
popl
push
adc
outsl
stos
arpl
mov
adc
pop
out
incb
je
fwait
adc
inc
aam
mov
xchg
iret
out
fisubrl
nop
add
bound
and
fmulp
or
divl
mov
je
or
mov
enter
push
xchg
mov
and
mov
inc
push
pop
sub
mov
ds
lcall
jl
cs
mov
push
stos
or
jp
lods
cli
or
scas
xor
dec
sub
pusha
enter
mov
stos
loope
jb
loop
inc
cmp
iret
xor
cmpl
push
pushf
fcoml
test
xor
jl
and
xlat
repnz
mov
rcr
dec
pop
inc
clc
cmp
lahf
cld
pop
mov
dec
js
adc
or
aas
xlat
movsb
addr16
and
mov
sti
cmc
push
xchg
or
and
inc
inc
rcll
lods
push
push
cltd
push
adc
out
xchg
lods
adc
or
mov
shll
shr
mov
jecxz
cmc
mov
shlb
sbb
pop
add
inc
gs
daa
jg
pop
cmp
xor
sub
lret
mov
mov
das
std
adc
mov
mov
mov
cwtl
jle
loopne
mov
repz
sbb
stos
push
lods
outsb
pop
cld
pop
mov
repz
xor
mov
lock
mov
add
cmp
ss
test
int3
push
dec
sar
add
cld
adc
push
sti
mov
test
out
ret
sub
jb
push
inc
sahf
das
or
insb
cmp
mov
bound
add
test
shrb
cmp
vpunpckhdq
mov
shrb
mov
orb
jle
cmp
jle
jge
xchg
loope
je
jge
call
jmp
or
cmp
jl
ret
cwtl
push
push
test
mov
mov
lock
insl
add
std
ja
xchg
xor
pop
test
mov
inc
jnp
fidivl
mov
xor
je
add
into
iret
dec
lock
xlat
cwtl
stos
push
xchg
or
push
inc
gs
mov
in
gs
push
mov
xor
out
mov
mov
xchg
xlat
adc
loope
mov
and
neg
push
lea
scas
dec
lret
push
add
and
test
mov
addr16
xor
stos
nop
lret
and
lods
das
ja
dec
and
outsb
jns
jo
repnz
fwait
mov
ds
cmp
ja
jecxz
fisttpl
sar
mulb
movsb
xchg
inc
test
xorl
sub
push
jo
jae
lret
test
push
stc
pop
fisubrl
inc
rclb
jno
mov
movsl
sbbb
sbb
add
pop
inc
sbb
dec
mov
mov
test
xchg
arpl
jp
popf
rclb
aad
out
add
mov
mov
arpl
push
es
mov
sbb
sub
data16
in
popl
outsl
adc
fildl
stos
bound
mov
push
ss
and
ja
sbb
and
pushf
mov
addr16
adc
test
push
mov
push
dec
test
lret
sub
and
dec
xchg
jmp
mov
mov
aad
jecxz
stos
stc
add
call
mov
adc
jp
cwtl
sbb
popf
outsl
or
pusha
mov
bound
lret
notb
jnp
pop
and
loop
iret
add
outsl
add
cs
or
sbb
cmpsb
add
lret
mov
lods
shll
scas
pop
lods
arpl
mov
repz
fmul
cmpb
xchg
push
mov
mov
sub
or
scas
hlt
in
jp
and
bound
push
and
lahf
enter
movsb
and
repz
pop
mov
sub
sbb
and
fdivl
cmp
int
push
and
ja
push
sbb
add
testl
jp
fisubs
mov
sbb
idivb
int
arpl
lock
mov
jae
xor
mov
leave
fistpll
mov
pop
mov
or
sahf
pop
jo
xchg
mov
sub
mov
fucomip
xchg
leave
cmp
xchg
stos
xchg
movzbl
fnstcw
fcoml
adc
rcll
pusha
fldenv
inc
outsl
and
sbb
sti
mov
sahf
cmpsb
popf
pusha
inc
cltd
mov
add
xchg
aaa
or
mul
pop
and
mov
fstpt
push
inc
daa
add
mov
pop
push
test
ret
xor
pop
and
mov
mov
lea
fdivrs
xor
cmc
lea
sbb
and
and
add
pushf
xchg
adc
push
or
xor
fcmovu
push
jno
fs
inc
not
notl
xor
pop
lahf
fdivl
sahf
adc
sbb
mov
lea
fsts
inc
rcll
cmc
push
pop
adc
cmp
mov
test
push
mov
data16
repnz
mov
xchg
imul
mov
mov
inc
inc
js
xchg
ret
cmpl
fidivl
xchg
adc
xchg
divl
and
into
jmp
fistps
inc
lret
inc
sbb
xchg
pushf
adc
dec
in
scas
insb
jl
xor
sahf
mov
pop
sub
xor
loopne
xchg
jmp
loope
sub
pusha
ret
jo
lret
mov
adc
push
imul
out
sbb
mov
sub
icebp
stos
lcall
push
mov
jmp
inc
shrl
push
pop
imul
mov
inc
aam
jno
or
add
xor
lods
push
fldt
cmp
data16
mov
sub
cmp
pop
and
add
mov
add
xlat
and
test
dec
sbb
insb
in
adc
sub
mov
imul
in
sahf
cmp
mov
out
jle
mov
dec
out
mov
gs
ja
xchg
dec
sub
cld
fs
push
mov
popa
in
out
mov
mov
mov
movsb
rorb
jp
jae
cld
mov
test
xchg
or
dec
es
fisttpl
xor
pop
add
jle
mov
fyl2x
cwtl
add
lcall
test
mov
and
mov
mov
lock
insb
mov
mov
test
movsb
jno
lods
cmp
mov
mov
mov
test
in
ja
flds
inc
int3
addr16
fistps
xor
xchg
insb
bound
pop
insb
mov
stc
ret
adc
xchg
sti
fcomps
sbb
sbb
fisubl
xchg
in
cli
inc
rorl
rclb
iret
push
push
adc
loop
incl
push
pop
cmp
push
adc
push
cmp
sub
daa
inc
je
aas
aad
dec
and
arpl
push
mov
ret
lea
push
xchg
stos
push
adc
pop
push
sbb
mov
aam
nop
adc
cmc
bts
cmc
mov
jae
xchg
fnstenv
int3
jle
mov
pop
mov
and
gs
jns
add
push
inc
add
popf
pop
inc
sbb
sbb
mov
inc
cmpsb
cmpb
cmp
mov
jo
sbbl
lret
push
mov
pop
imul
test
or
gs
xorl
dec
mov
andnps
pop
xor
in
or
bound
mov
nop
push
mov
adc
pop
or
xlat
ja
jno
mov
rorl
in
mov
mov
xchg
xchg
gs
mov
cmc
push
mov
test
fisubrs
mov
mov
dec
shl
push
mov
adc
pop
mov
adc
sbb
jne
stc
cmp
fs
cltd
mov
lods
or
sbb
mov
fcomi
out
and
inc
and
jmp
sbb
or
sbb
adc
nop
stc
addl
icebp
xor
leave
mov
push
pop
mov
lds
mov
loopne
push
es
rcl
pop
cli
mov
sbb
enter
sti
inc
sbb
pop
push
fwait
fwait
aas
xchg
pop
out
mov
and
cmpsl
and
pusha
clc
dec
fnsave
fwait
loopne
push
into
xlat
sbb
lea
sub
and
sub
inc
leave
test
dec
negb
push
ja
adc
das
ret
mov
xchg
iret
and
popf
pop
xlat
xchg
or
xchg
in
ljmp
add
lcall
mov
mov
test
sub
das
lahf
mov
mov
xor
lock
push
outsb
scas
jle
jne
dec
test
in
lret
call
add
inc
roll
inc
and
rorl
or
test
arpl
push
mull
jl
stos
scas
stos
push
adc
mov
stos
sub
mov
cltd
push
fcomps
ljmp
in
outsb
xchg
push
xlat
cli
ret
mov
inc
imul
adc
pop
stos
cli
mov
jnp
sarl
iret
ret
cmpsl
push
jne
and
adc
lods
shlb
addb
fwait
test
pop
loope
sti
dec
inc
push
dec
cmp
loope
mov
jnp
jo
int
and
out
push
stc
mov
add
mov
rorl
or
mov
or
pop
xor
xchg
and
loopne
cld
xchg
dec
adc
int3
stos
add
sbb
shlb
outsb
jl
inc
push
leave
ficompl
sub
xor
fiaddl
call
dec
fsubr
ficoms
sbb
sbb
jp
or
fcompl
orb
fsubrp
mov
push
je
rorb
mov
push
inc
ss
rol
or
ljmp
stc
xchg
cmpsl
pushf
jnp
cs
popa
int3
mov
faddl
loop
inc
mov
arpl
jae
xor
mov
movsb
jne
test
jns
out
aad
sarb
out
mov
vmread
into
and
out
fbld
pusha
push
push
out
sbb
iret
cmpsb
adc
test
fstps
xor
cli
mov
dec
mov
loop
outsb
pop
aad
pop
cmp
negl
jl
icebp
dec
jns
add
ljmp
fdiv
xchg
pop
lcall
mov
fwait
mov
xchg
xor
and
or
xchg
loope
mov
pop
mov
int3
add
dec
or
pop
push
in
pop
movsl
sbb
movsb
push
or
lcall
cmp
jne
icebp
mov
sub
mov
sub
dec
xor
sahf
sbb
test
sub
lret
stos
dec
insl
out
pop
popa
xchg
outsl
xor
js
fwait
leave
mov
lock
lcall
push
xchg
scas
push
push
push
pop
enter
fmuls
pusha
sub
mov
or
and
sub
scas
mov
fistpll
cld
das
cld
rorb
mov
mov
xor
icebp
lods
insb
in
xchg
icebp
sbb
fmull
jp
sbbb
pop
fwait
mov
dec
fwait
jg
jmp
pop
and
jo
popa
xchg
and
ror
add
insb
pop
cmc
mov
pop
ss
lret
jne
aaa
clc
mov
cmp
dec
clc
test
in
xchg
xchg
xor
iret
mov
out
lods
stc
arpl
or
in
gs
in
push
imul
push
cmp
xor
mov
push
cmc
cltd
ffreep
push
xchg
ficoml
test
clc
dec
jne
add
repnz
xchg
cmp
lcall
sbb
ss
popa
xor
popf
fsubrs
or
push
cmp
sbb
enter
es
push
fistl
pop
cmp
fstpt
bound
pop
sub
out
xchg
and
xchg
sbbb
aad
mov
adc
mov
andb
mov
mov
mov
and
mov
pushf
out
std
xor
movsl
fisubrs
push
icebp
mov
enter
mov
iret
std
cmpb
sbb
subb
push
scas
clc
pop
movsb
roll
fisubrl
les
rorb
repnz
aad
ds
cmpsl
pop
cmpsl
mov
insb
sti
fs
cmp
pop
lds
bound
dec
mov
rcrb
popa
mov
pop
mov
pop
ficoml
sbb
sbb
cmpsb
mov
and
lea
adc
xchg
ret
jg
pop
push
fwait
jbe
lds
or
jge
adc
push
inc
int3
clc
subl
cmp
orl
ficoml
add
pop
iret
push
xor
cmc
enter
mov
mov
sub
mov
or
insl
js
mov
pop
pop
lock
jl
adc
call
aas
push
or
cwtl
or
fwait
cmp
mov
mov
push
pop
or
lret
das
fwait
lock
lret
and
in
adc
xor
in
cmp
clc
out
dec
add
sub
imul
test
bsf
pusha
sub
sub
fmull
scas
dec
push
xchg
in
incl
xchg
jp
add
aaa
iret
mov
rcll
test
pop
in
std
aam
pop
ds
pop
pop
add
mov
adc
inc
imul
dec
inc
aaa
mov
xor
and
pusha
mov
pop
cmp
pop
pop
push
gs
push
pop
add
out
mov
shll
jbe
stos
sbb
leave
and
sbb
ret
jp
icebp
or
jae,pt
in
vphaddbw
dec
xchg
fnstenv
mov
pop
inc
fbstp
jbe
ror
or
mov
mov
push
popa
lcall
imul
xchg
xchg
fwait
pusha
js
hlt
loop
lret
es
push
jae
incl
sbb
js
jmp
stos
imul
cltd
call
vsqrtsd
push
adc
ds
jg
iret
push
xor
xchg
test
pop
bound
aas
cmp
mov
js
jo
sub
mov
and
rcll
jecxz
div
addr16
leave
xor
scas
mov
and
insb
adc
jg
jle
mov
mov
fs
xlat
sti
dec
mov
test
mov
in
xchg
jp
jmp
scas
xchg
ret
shll
dec
cltd
and
sub
jge
fdiv
push
cmp
xor
or
in
hlt
jo
push
nop
dec
movsl
jne
or
jecxz
das
ljmp
mov
add
js
push
daa
insl
mov
je
popa
adc
shl
insb
cwtl
mov
push
adc
push
stos
cmp
mov
mov
xor
inc
cmp
sub
dec
or
xchg
add
dec
push
cld
insb
xchg
mov
clc
mov
inc
cmc
and
ja
mov
inc
ret
sbb
loopne
mov
xchg
pop
xor
mov
ds
aam
nop
shl
add
dec
jmp
bound
fxch
dec
int3
iret
cmp
imul
xor
hlt
push
dec
fisubl
out
cli
popf
popf
loop
aaa
sbb
test
sub
cli
inc
dec
mov
inc
mov
repz
dec
add
stos
jl
shlb
and
jbe
xchg
mov
mov
xor
iret
sub
mov
dec
push
frstor
lods
and
pop
imul
icebp
xchg
mov
addr16
stos
out
jg
add
lea
adcl
out
test
mov
xor
lret
popf
call
mov
pop
pop
mov
xchg
dec
or
out
fnstsw
mov
fistpl
enter
push
lods
xlat
add
xchg
jns
lock
rcr
out
test
sub
aam
std
xchg
ficomps
inc
cltd
es
mov
jmp
shrl
in
idiv
xor
sub
jnp
pavgb
inc
pop
or
lret
add
mov
faddl
and
cmp
js
and
mov
popl
adc
mov
out
div
outsb
imul
aad
push
jecxz
fidivrl
mov
push
in
mov
push
ja
sti
pop
pusha
inc
test
pop
rcrb
xor
jae
cmpsl
andb
pop
sub
and
pop
ljmp
mov
sbb
jbe
xchg
aaa
arpl
mov
pop
scas
sbb
mov
bound
xchg
cmp
ljmp
mov
cmpsb
mov
adcb
or
jnp
sbbl
push
cltd
pushf
mov
repz
mov
jnp
xor
push
subl
jae
jo
stc
clc
jns
xor
xor
adc
dec
lret
push
std
cmp
jl
pop
ret
into
adc
xchg
lret
push
xor
fimull
cwtl
xchg
vmaxps
cmpsl
or
cs
test
mov
std
test
ret
sub
aad
int
outsb
dec
xchg
sub
loop
clc
cmpsl
jbe
add
mov
mov
je
mov
and
inc
push
and
lret
push
lods
inc
fsubrl
bound
mov
enter
inc
rcll
mov
jmp
inc
imul
push
pusha
push
jge
shr
inc
cwtl
mov
mov
lods
pushf
add
fimuls
in
xor
jp
incl
dec
clc
jno
add
dec
dec
or
sbb
sbb
mov
jecxz
mov
cld
bound
cmpsl
scas
insb
push
adc
dec
scas
sbb
popa
filds
xor
lcall
repz
test
mov
je
pop
test
mov
pushf
add
fldl
repz
les
into
push
cs
fs
lahf
out
adc
jp
pop
push
pop
add
xchg
push
test
xchg
pop
shl
inc
scas
into
mov
cmp
cmp
out
out
jno
out
and
inc
or
enter
shll
mov
sti
add
aas
lret
push
dec
ja
lret
fsubs
mov
sti
in
ja
inc
les
jno
add
sbb
lea
das
add
push
icebp
stc
pop
dec
sbb
inc
mov
sar
in
test
mov
in
test
add
test
adcb
xor
pop
mov
xor
icebp
test
add
xor
sbb
sub
pop
inc
adc
jo
jo
decb
xor
mov
insl
cwtl
inc
xchg
test
cmpsb
mov
insl
dec
mov
scas
leave
shll
cs
je
pop
xor
outsl
ret
xor
repz
ljmp
jns
adc
fiaddl
popf
test
and
cmp
mov
int3
out
ja
jae
shll
sub
roll
sub
sub
mov
aas
testl
out
lods
fwait
jns
shrl
fidivs
in
enter
cmpsb
imulb
aaa
into
add
jnp
jne
insl
mov
cmp
push
pop
xchg
mov
pop
and
dec
iret
enter
or
iret
jg
lret
mov
out
repz
or
jns
mov
scas
ds
mov
fstps
bound
popa
hlt
out
rcll
adc
adc
leave
fisubs
sbb
and
push
cmc
inc
pushf
pop
aas
sahf
push
push
xchg
lret
cli
loopne
test
inc
inc
nop
scas
pop
push
xchg
int3
add
and
fcoml
rorb
mov
ljmp
lret
call
xchg
sarb
enter
scas
jp
sub
inc
adc
andb
out
cmp
fwait
xchg
cmc
leave
sbb
cmp
aaa
stos
push
mov
fcoml
scas
mov
dec
mov
sti
xchg
push
out
not
sub
or
adc
lods
and
lcall
int3
mov
stos
movsb
out
test
and
fistl
dec
gs
cmpsb
in
dec
xchg
jne
and
mov
xchg
pop
js
loopne
pop
xor
or
lock
jae
enter
xchg
cwtl
pop
dec
adc
aam
push
sub
fimuls
icebp
mov
inc
inc
mov
sub
mov
or
in
sbb
test
lods
inc
jno
test
aad
cwtl
sbb
stc
cmp
adc
clc
jg
lret
mov
imul
pop
out
jl
xchg
addl
and
outsb
sbb
dec
mov
mov
shll
ds
mov
loop
push
xchg
and
and
push
mov
sub
icebp
mov
mov
out
stos
ret
out
push
les
hlt
xor
mov
lods
outsl
jbe
ret
mov
lock
clc
loopne
mov
xchg
mov
insl
mov
iret
daa
jo
xchg
es
xchg
jecxz
test
or
xorl
mov
add
mov
mov
adc
pop
or
or
adc
test
xchg
in
add
lods
cmc
test
pop
inc
pop
pop
test
cwtl
mov
rcrl
subl
sub
mov
jno
push
movsl
lahf
pusha
xor
aad
and
insl
cld
lret
gs
xchg
dec
mov
enter
or
enter
xor
filds
rolb
dec
jp
jnp
cmp
add
or
insl
push
push
aaa
cmp
or
push
lods
mov
xor
int
jno
push
daa
mov
ret
in
insb
sub
adc
inc
int3
int3
pop
mov
xchg
push
out
xchg
fs
inc
loop
xor
jmp
lahf
or
inc
test
lret
jb
rorb
imul
out
aad
adc
jb
fwait
dec
out
push
jnp
jle
shrb
pop
inc
add
cmp
or
add
xor
cs
into
xor
das
nop
pop
mov
jg
push
mov
jg
popf
ljmp
pop
or
mov
mov
mov
mov
iret
lock
jp
in
mov
fmul
cli
adc
jae
mov
inc
int
shlb
xor
loopne
test
lahf
mov
in
aam
hlt
push
cmp
mov
inc
mov
lds
jmp
shr
sub
cmp
jb
sbb
inc
and
mov
and
movsb
adc
call
mov
xchg
hlt
xor
pop
inc
dec
sahf
mov
test
dec
or
inc
jno
add
dec
das
aam
push
inc
jb
pop
or
iret
jle
xchg
mov
sbb
jl
adc
pop
ds
orb
push
lock
addl
mov
pop
popa
loopne
sbb
repz
push
ret
or
xlat
loope
cmp
and
sbb
int
adc
fisubrl
inc
mov
jns
sub
lea
mov
repnz
testl
add
cmpsl
mov
and
adc
xor
add
mov
jmp
insl
sub
mov
ficoml
repnz
loopne
jmp
push
pushw
mov
icebp
mov
jecxz
cmp
xlat
jmp
iret
sti
inc
scas
aaa
or
fistps
and
rcll
jae
pop
lock
dec
leave
sbb
pop
into
push
loope
xor
insb
mov
ds
jp
aad
xchg
inc
pop
sub
dec
mov
mov
mov
in
add
lock
stos
nop
mov
pop
add
jnp
stos
jne
pop
js
ret
cmpsb
popf
lock
call
dec
mov
int
int
jb
mov
mov
in
scas
ficomps
mov
pushl
cvtps2pd
pop
and
in
je
push
push
lahf
add
and
push
xor
cmp
jnp
movsb
cld
insl
test
fwait
ja
lods
xchg
mov
jne
loopne
aad
fdivrl
rolb
scas
add
lcall
and
int
inc
in
jl
cwtl
or
rorl
inc
xlat
sbb
out
stos
imulb
psrlw
adc
inc
dec
xor
sub
or
psubd
rcl
cmp
cmpb
stc
lods
mov
push
aad
xor
cs
repz
push
incb
xchg
lahf
popa
pop
dec
jns
push
movsb
std
mov
sub
sbb
lock
into
or
and
pop
insb
cltd
ds
xchg
pop
jmp
dec
cmpl
mov
int3
xchg
cmp
pop
test
add
adc
cmp
cmp
cmc
in
daa
into
cwtl
pop
mov
mov
push
addr16
out
bsf
jp
in
sbb
mov
jl
in
or
roll
stos
int
test
and
push
adc
ds
inc
xchg
or
xor
aas
sar
sbb
test
xor
dec
nop
sbb
lds
jns
and
pushf
mov
out
dec
imul
mov
inc
jg
fwait
outsb
ret
insl
jb
sub
sahf
cmp
jecxz
roll
push
mov
jl
add
push
xchg
pop
and
jp
popa
cld
push
bound
mov
mov
loopne
orb
fisubl
jecxz
pop
and
mov
sbbb
roll
mov
pop
bound
je
arpl
int3
mov
mov
repz
jb
cmp
or
aad
mov
sub
pop
imul
jb
repz
daa
lods
xor
iret
loop
mov
mov
cmp
cmp
and
sbb
cwtl
ljmp
ret
jbe
lret
pminub
rorb
andl
adc
fsubrs
insl
cwtl
xor
in
jp
mov
rorl
mov
push
iret
pop
pop
lea
pop
jmp
adc
jge
imul
mov
xor
mov
aas
out
xchg
pop
or
and
xchg
xchg
sub
shrb
pushf
xorb
cld
sbb
cmpsb
mov
add
test
ljmp
es
xchg
les
cs
xchg
xor
wrmsr
inc
dec
push
dec
xchg
lcall
sub
mov
dec
sahf
fists
mov
mov
push
pop
test
stc
shlb
lea
sbb
lret
dec
adc
loopne
xchg
popf
push
pop
hlt
lret
push
pop
into
inc
fyl2xp1
cmp
ret
leave
int
add
jo
cmpb
xchg
xor
fistpll
subb
mov
xor
in
incb
into
scas
stc
es
dec
rcll
sahf
pop
sahf
push
call
aad
dec
cs
pushf
inc
popa
addl
inc
mov
nop
jae
lods
mov
push
call
pop
or
mov
pusha
sub
lcall
outsl
pop
aas
adc
test
sub
adc
inc
insb
pop
ret
ds
sbb
xchg
xchg
jge
mov
dec
inc
popw
cmp
fwait
punpckhbw
mov
imul
xchg
and
ljmp
test
stos
repnz
fbstp
pop
push
push
mov
jg
jbe
cli
arpl
ss
jg
xchg
push
add
fisttpl
add
xchg
mov
lea
push
add
jp
aad
and
mov
pop
mov
mov
pop
xchg
mov
jo
jno
cmp
cmp
fldl
lock
shll
pop
cmp
mov
insl
sub
push
addr16
ficomps
push
mov
test
adc
int
std
call
pop
pop
shr
sahf
push
ror
mov
out
jecxz
lahf
adc
mov
call
das
adc
pusha
push
hlt
sbb
xlat
xchg
sub
into
cbtw
fcoms
shrl
xchg
push
xchg
bound
mov
sbb
cmp
xchg
mov
pop
jns
outsb
dec
ljmp
mov
sahf
in
lds
sarl
loopne,pt
xchg
fdivrl
jecxz
xchg
iret
aam
cmp
jl
mov
test
frndint
mov
mov
push
mov
mov
call
mov
ja
sbb
out
loopne
mov
test
in
adc
or
in
mov
and
mov
loopne
cmp
lds
mov
inc
pop
cmp
mov
add
add
inc
jl
inc
ret
in
cmp
jle
adcl
ds
and
aas
xlat
lock
test
enter
cld
fdivs
iret
shll
scas
imul
mov
cli
into
das
mov
jb
subl
pop
shlb
lea
das
loop
xchg
push
inc
pop
leave
lods
jno
inc
les
sahf
pop
icebp
cld
in
push
sbb
lcall
ljmp
or
roll
enter
sub
or
push
shlb
and
rclb
mov
pop
pusha
ss
add
pushf
mov
or
cmp
xor
jae
add
push
or
mov
fisubrl
add
and
mul
std
int3
loope
sbb
add
inc
les
js
shl
cmp
mov
call
int
leave
and
lahf
popa
stos
push
jbe
or
movsb
jae
pusha
adc
xchg
xchg
jb
pop
push
stos
imul
mov
mov
cmp
aaa
jg
nop
jnp
xor
ret
and
movsb
rcll
inc
push
push
push
sbb
and
jmp
repnz
mov
int3
loop
mov
push
repnz
out
xor
icebp
jb
idivl
stos
xchg
lea
in
fsubrl
sti
add
inc
lea
iret
movsb
push
inc
flds
sub
cmp
ds
ret
sbb
pop
jg
dec
fmull
in
xlat
adc
jmp
inc
mov
into
mov
and
and
mov
cmpsb
xor
jl
movsl
xlat
pop
xchg
xor
lahf
adc
push
and
dec
xor
pushf
mov
xchg
into
inc
adc
and
into
lahf
test
cld
mov
jecxz
xor
add
stos
xchg
xchg
pop
ljmp
out
jne
push
inc
fdiv
push
iret
pop
push
or
icebp
lods
mov
pop
orl
and
scas
jmp
inc
addb
push
sbb
insb
sbb
xchg
sbb
mov
jle
bnd
inc
ss
lods
lret
push
stos
dec
stos
scas
shrl
or
push
mov
fwait
or
lds
fsqrt
les
xor
inc
pop
sbb
and
and
sahf
mov
mov
loop
sbb
pop
dec
int3
dec
das
lret
ljmp
insl
out
mov
xor
call
xor
lcall
mov
cmp
jg
mov
adc
mov
push
js
stos
out
lock
mov
int
bound
insb
sub
pop
shll
ret
sbb
cli
adc
les
nop
outsl
imul
pop
sbb
cmp
stos
loop
jp
loope
add
fists
inc
repz
mov
test
and
and
pop
cmp
or
je
pop
and
fidivrl
push
repnz
test
std
sub
adc
lea
jnp
cwtl
sbb
popf
leave
lea
pop
dec
es
cmc
call
jmp
xchg
jge
rclb
and
das
dec
mov
mov
les
add
cltd
adc
jl
mov
stos
pop
inc
pop
sub
icebp
in
mov
ds
pop
adc
lahf
xor
dec
push
fcomps
stc
insl
loop
daa
gs
hlt
shlb
jl
adc
mov
adc
lock
inc
or
cltd
mov
stos
inc
add
enter
pop
push
pop
mov
and
into
int
inc
lcall
fdivs
sarl
and
or
icebp
mov
adc
jl
push
and
ljmp
mov
cmp
imul
aad
dec
ss
loop
pop
xor
ja
stos
and
test
fisubl
arpl
pop
int
xchg
fs
or
movsb
inc
and
sbb
jmp
lret
cmp
xchg
add
pop
in
and
arpl
and
insl
lock
or
and
iret
and
lods
ja
push
aad
jae
pop
scas
cli
jno
dec
ds
mov
jle
test
pop
sahf
mov
loop
sbb
daa
jp
cmp
cmpb
lahf
adc
sbb
dec
or
pop
pop
cmp
sbb
mov
mov
ljmp
jb
jmp
ja
sub
inc
outsb
imul
pop
imul
xor
rorb
lods
cmp
xchg
repz
mov
pop
push
jge
jbe
mov
xchg
test
clc
mov
and
popa
dec
repnz
jb
pusha
xor
and
call
inc
jns
and
or
fsubs
insb
aad
jecxz
dec
xor
xor
loopne
cmpb
ljmp
dec
xchg
mov
xchg
in
fisttpll
lahf
pop
psubw
popf
test
filds
sub
pop
and
or
mov
fcomi
lret
jb
rcl
dec
fsubl
mov
fwait
xor
ja
addr16
mov
cmp
cmp
imul
mov
int3
loopne
mov
ret
les
pop
aas
dec
out
imul
add
stc
bound
leave
test
cmp
or
pop
ljmp
shr
xor
outsl
rorb
int
cmc
ficoml
sbb
inc
js
stos
mov
aad
jbe
cs
add
pop
pop
in
outsl
lcall
in
push
adc
mulb
out
push
mov
jmp
jo
mov
mov
imul
in
inc
sahf
es
in
push
or
mov
cli
adc
lock
mov
xchg
lcall
jo
out
or
stc
mov
or
gs
lret
sarb
mov
in
add
insb
setge
sub
aad
and
pushf
mov
push
ljmp
xor
mov
rcl
pusha
lret
jge
adc
jns
add
mov
outsl
add
cmp
clc
jl
fwait
push
pop
xorb
mov
or
jns
mov
jno
mov
mov
clts
jno
push
out
int3
and
mov
pop
pop
fcomp
pop
and
mov
xor
cwtl
rclb
add
pop
ficomps
jp
push
xchg
sub
jnp
dec
adc
jp
out
in
loopne
cmp
lret
shlb
pop
int
stos
mov
inc
jbe
jmp
in
imul
add
adc
out
scas
inc
xchg
lods
stos
or
jnp
jl
push
xor
jne
dec
insb
jg
push
aaa
es
jecxz
dec
inc
jbe
or
add
add
add
es
mov
mov
xchg
test
mov
leave
adc
sarl
aad
insb
lods
add
aaa
adc
inc
andl
mov
push
test
adc
cmc
in
sbb
fsubrs
pusha
sbb
and
cltd
sub
icebp
outsb
push
xor
fcomip
xor
cmp
int
fsubs
stos
sahf
call
pop
pusha
lods
cltd
xor
call
dec
mov
sbb
insb
adc
xor
fisubs
jae
nop
dec
pop
clc
push
mov
jecxz
test
xor
jo
adc
cmpsb
out
jbe
jl
imul
pop
fldt
xchg
iret
and
sub
and
push
popa
shll
jno
shll
pop
adc
xchg
mov
mov
sub
sub
scas
ss
shl
outsl
jmp
sub
sbb
pop
lret
mov
cmpsl
push
fisubs
sbb
scas
call
lea
imul
inc
adc
mov
gs
fwait
rolb
or
xor
pop
popf
neg
push
add
xchg
or
pop
jmp
cmp
movsl
outsl
fists
jo
ja
cmp
inc
lret
int3
mov
xor
sub
out
or
mov
push
iret
jecxz
lds
sbb
fisubl
arpl
xchg
rorb
movsb
clc
pop
in
mov
fnstsw
das
cmp
inc
inc
fisubrs
or
cmc
sbb
and
lods
jnp
pop
scas
jg
cltd
or
sub
ficoml
sub
aas
jg
sub
adc
imul
loope
inc
dec
pop
sbb
mov
outsb
fs
mov
fmul
fistpll
lds
pop
lret
jo
cltd
daa
dec
outsb
pushf
mov
mov
fwait
mov
xchg
inc
fsubrs
xor
iret
ret
shll
pop
mov
xchg
xor
dec
in
lahf
mov
aas
sub
pop
imul
mov
xor
and
imul
and
ret
xchg
rol
inc
push
adc
cmpsl
cmpsl
jo
xchg
mov
push
ret
push
mov
mov
pop
sub
pop
cmp
mov
sbb
ljmp
mov
mov
sbb
push
or
shll
mov
xchg
in
mov
xor
imul
roll
ds
xchg
inc
pop
addl
pusha
and
add
and
cmp
push
imul
js
inc
subb
fistpl
lahf
xchg
rorb
or
dec
xchg
cmp
shll
jno
add
mov
sub
pop
mov
scas
add
es
movsl
jmp
xchg
sbb
ror
fwait
cmp
inc
xor
dec
stos
adc
les
xlat
call
ror
add
lahf
pop
loope
inc
jb
shl
out
mov
cwtl
add
inc
sub
aam
imul
xchg
xor
xchg
repnz
and
inc
inc
out
adc
xchg
mov
sbb
inc
scas
push
clc
ret
xchg
pop
fwait
sbb
fld
and
cmp
lea
loopne
ljmp
dec
mov
xor
cmp
fnstsw
shll
cmp
mov
jo
outsl
cmp
sub
in
push
test
int3
sub
cmp
push
pushf
xor
fimuls
add
shrb
add
or
sbb
pop
out
pop
or
dec
les
mov
pop
out
jne
fwait
sti
mov
mov
push
js
pop
xchg
loopne
cs
pop
hlt
mull
cmpsb
movsb
mov
jb
push
jl
call
pop
aad
cmp
push
out
add
jmp
cwtl
scas
or
shll
aas
dec
int3
negl
push
cld
sub
pop
dec
hlt
inc
adc
movl
icebp
dec
mov
call
lock
mov
jne
jno
imul
inc
je
sub
je
xchg
adc
bound
xchg
ds
pop
and
dec
inc
inc
xor
clc
cmp
call
push
pushf
sub
mov
sbb
pusha
jmp
pop
or
cmp
mov
and
pop
sbb
jge
sub
push
stos
mov
test
ds
pop
out
call
dec
jecxz
notb
je
lret
xchg
sbb
add
cmp
cmp
lret
xchg
cli
mov
gs
je
cmp
xor
cmp
inc
pop
sub
adc
hlt
inc
lods
stc
dec
push
mov
jmp
add
outsl
xchg
daa
sbb
mov
mov
subl
and
pop
xor
jle
xchg
cld
push
test
or
fdivl
or
mov
pop
mov
xor
push
cmp
ds
push
popf
ja
negl
or
in
mov
aad
adc
scas
loope
sub
xchg
cmp
pop
stos
gs
mov
dec
outsl
popf
xchg
or
mov
aas
mov
sbb
push
scas
fildl
movsl
push
outsb
je
push
popa
test
pusha
xor
les
sbb
xchg
jno
adcb
xor
or
inc
sub
aas
push
xchg
sub
fstps
lea
xlat
sbb
popf
cld
aas
dec
jecxz
daa
push
adc
test
aam
mov
inc
int3
or
cmp
cmp
sub
lods
scas
pushf
pushf
fwait
pop
and
fisttpll
bound
idivb
test
mov
out
jge
add
jo
hlt
mov
jp
dec
leave
lcall
test
sbb
xchg
sub
push
sbb
adc
test
adcb
or
lcall
xor
jb
mov
mov
jmp
dec
cld
stc
inc
jno
pop
mov
fmulp
daa
das
pusha
jecxz
outsl
add
inc
mov
cmp
into
sub
mov
xchg
nop
and
inc
mov
push
or
ret
inc
aaa
stos
mov
mov
add
sub
inc
add
gs
and
sub
loopne
mov
pop
lock
mov
int
adc
sbb
pop
nop
fisttpll
push
sbb
jg
dec
sub
andl
xchg
scas
or
hlt
testb
push
jns
adc
repz
inc
mov
fisubs
mov
or
jne
push
mov
addr16
cmc
sbb
xchg
mov
adc
jns
ja
xor
mov
sahf
fisubl
inc
xor
imul
notl
outsb
dec
push
insb
mov
mov
or
test
lret
movb
iret
mov
dec
adc
adcb
mov
xor
add
sarb
sub
shrl
inc
fs
imul
or
xadd
cmp
outsb
sub
mov
insb
loop
mov
in
sub
or
cmp
in
cltd
scas
jge
addr16
movsb
mov
das
mov
mov
lret
std
mov
sbb
iret
les
out
imul
call
xor
rorb
cmp
leave
out
dec
jae
mov
mulb
mov
inc
int3
sarb
dec
cltd
sub
adc
mov
out
aaa
xchg
or
sbb
mov
repnz
mov
inc
cli
std
fcmovbe
and
cmpsl
and
into
push
mov
out
sarl
jns
jno
stos
stos
lock
xchg
scas
in
xchg
jge
ljmp
out
cwtl
imul
jmp
push
add
adc
lods
mov
xchg
and
js
cmp
mov
in
push
popl
push
dec
mov
inc
fstpl
push
popf
push
mov
sahf
hlt
or
dec
out
jge
dec
push
in
test
jle
and
jb
push
fmull
jno
fldt
insb
jle
je
sub
aas
xor
lods
mov
inc
hlt
ss
pop
mov
and
jns
mov
sub
jne
push
sbb
loopne
ljmp
das
lcall
pop
push
loope
std
loope
and
nop
adc
jno
jmp
pop
add
mov
loop
stc
pop
fstpt
lcall
sbb
pusha
mov
push
cmp
int3
lods
fwait
fs
lret
inc
in
ss
or
mov
cmpsb
xchg
in
xorl
mov
push
cmc
insb
mov
sbb
aam
cwtl
or
and
mov
mov
shll
jecxz
lods
rolb
add
inc
sub
cmp
rcrb
pop
pop
js
daa
fcomi
and
mov
adc
or
jns
mov
sub
je
bound
outsl
and
aaa
mov
mov
xchg
movq
lea
dec
mov
jl
scas
insb
enter
inc
cld
and
aaa
out
jg
mov
push
in
push
cmp
test
and
in
mov
inc
lahf
mov
lret
mov
test
and
push
gs
dec
js
pop
fidivs
rorl
out
or
xor
xchg
adc
jecxz
ds
xchg
push
xor
out
clc
lock
in
dec
jb
mov
insb
pop
xor
int
in
pushf
out
addr16
and
lcall
mov
arpl
push
fisttpl
xor
xor
in
enter
xchg
fstps
push
stc
xchg
xor
mov
or
aad
test
and
lock
mov
arpl
outsb
movsb
mov
push
cmpsb
movsl
and
enter
lock
aam
clc
in
mov
jno
and
pop
jno
aaa
jno
lahf
mov
fcoml
jecxz,pt
and
xor
pop
mov
cmp
mov
cwtl
push
or
out
popa
sbb
rorb
jmp
adc
lock
sti
cmp
pop
mov
imul
xor
and
pop
test
aam
mov
outsl
aas
xchg
lahf
insl
cmc
es
sbb
sub
out
rorb
decb
enter
pop
sarb
icebp
push
dec
pop
std
xor
or
push
ror
xor
inc
lods
lods
cmp
aaa
cmp
in
sbb
insl
or
sbb
adc
jno
cwtl
inc
add
add
cli
dec
adc
jecxz
inc
enter
adc
push
popa
insb
dec
mov
xchg
repnz
jp
mov
lock
dec
aam
cltd
push
and
rcr
fisubl
sbb
or
mov
ljmp
pushf
dec
push
or
and
or
idiv
mulb
inc
call
jge
ds
loopne
inc
xchg
push
mov
ret
pop
adc
push
cltd
sar
je
push
cli
ljmp
sub
into
sbb
sbb
fnstenv
or
daa
test
xlat
addl
and
mov
negb
inc
dec
pop
push
mov
cld
jbe
insl
dec
sti
jle
dec
lea
mov
xor
outsl
mov
pushf
push
cmp
mov
pop
sub
push
or
loopne
stos
jp
pop
iret
pushl
jle
insb
xchg
dec
mov
dec
pop
add
adc
fmuls
or
dec
push
inc
push
jge
jns
outsl
or
imull
cmp
pop
jmp
mov
sbb
leave
mov
sbb
testb
insb
inc
sub
leave
ja
xchg
xchg
mov
pextrw
lcall
mov
adc
sbb
jl
cmpb
popa
mov
stos
outsl
stos
xchg
repz
dec
std
sub
mov
scas
jle
loopne
xor
imul
cld
lret
sbb
mov
and
mov
push
stc
cmp
dec
mov
scas
dec
jmp
out
mov
sbb
mov
cltd
sahf
add
fidivrl
das
sbb
loope,pt
jb
jecxz
call
rolb
stc
gs
out
popf
into
jecxz
out
ja
imul
aas
stos
leave
sbb
stos
xchg
inc
adc
pop
and
outsb
cmpsl
scas
dec
outsl
es
rclb
fxtract
mov
es
xchg
cmc
aad
sbb
jo
jmp
jle
dec
dec
les
sub
add
daa
jg
call
les
sub
mov
dec
daa
js
mov
std
roll
pushf
fldcw
out
inc
push
sbb
in
je
inc
pop
xor
or
cmovg
cmp
sub
push
push
xor
nop
arpl
jb
outsb
sbb
adc
push
fmull
das
sub
ja
push
scas
xchg
pop
and
lcall
xor
sti
test
insl
inc
repnz
inc
mov
sahf
lea
sub
mov
and
mov
xchg
mov
and
mov
mov
jp
cmp
fwait
and
xor
cwtl
mov
xchg
stc
lret
mov
bswap
fmul
add
sbb
sbb
mov
jl
rorb
mov
adc
dec
inc
add
or
pop
xor
inc
inc
inc
and
xchg
pop
clc
mov
xchg
inc
mov
mov
in
ret
jmp
sbb
inc
jb
push
jo
adc
into
add
pop
repnz
sbb
inc
lock
scas
sub
mov
js
fisttps
jbe
into
jmp
push
rcrb
movsb
xor
out
mov
popa
adc
iret
and
lret
xchg
repz
clc
inc
loopne
add
mov
fwait
mov
xor
jno
sbb
lret
fidivrl
mov
sbb
adc
ror
pop
xor
mov
fld
ficompl
sbb
insb
stc
dec
cmp
fisttpll
cltd
mov
xor
mov
mov
pop
lods
imulb
cmpsb
mov
cmp
push
js
enter
outsl
stc
cld
inc
in
jb
fdivl
and
lcall
or
fdivp
stos
dec
cmpsb
lods
or
loop
int
je
xchg
mov
and
jae
sub
rorl
inc
sub
out
cmp
cs
jns
cld
rolb
into
repz
rcrl
and
xor
mov
mov
enter
lds
sbb
lret
leave
das
dec
xor
push
and
popa
cmpb
cmp
cmp
aad
loop
rclb
and
pop
or
sbb
ret
daa
mov
notb
push
inc
pop
testl
sbb
push
jne
add
subl
sbb
or
mov
mov
pop
mov
pop
scas
loopne
push
jb
icebp
cmp
mov
imul
jmp
sub
mov
ret
mov
push
imul
jo
sub
jg
dec
xlat
xor
cmp
fsts
or
cld
fcoml
mov
mov
jg
jge
mov
int
clc
mov
loope
aam
fs
jge
inc
sahf
aas
retw
mov
sbb
push
sub
mov
xchg
fadds
nop
and
movsb
ret
dec
xlat
int
lcall
aas
push
xor
push
cwtl
pop
jg
pop
test
pushf
inc
and
pushf
scas
loopne
ret
nop
sub
js
inc
jns
rolb
gs
pusha
xor
rcll
adc
cmp
scas
decb
sbb
mov
into
or
mov
mov
ja
dec
jecxz
or
pop
fisubl
xchg
sbb
shll
or
sbb
mov
pop
push
outsb
outsl
mov
sbb
pop
inc
jmp
test
adc
adc
std
adc
stos
lds
dec
pop
push
std
mov
and
ficoml
cpuid
pop
repz
fisubrs
mov
aaa
jecxz
mov
arpl
mov
int
mov
roll
inc
xchg
orl
mov
add
pop
lret
jp
pop
out
test
dec
or
popa
mov
in
out
insl
adc
cmp
xor
out
dec
mov
or
push
les
mov
or
sbb
jo
icebp
or
loope
jl
sub
push
loope
lock
xchg
fcmovnbe
pop
loope
out
inc
stc
xchg
dec
push
cli
addr16
cmp
stos
les
xchg
push
inc
push
jns
jnp
lds
loope
fbld
sub
mov
inc
fmuls
ss
push
out
and
iret
pop
mov
fmul
fcomps
mov
adc
jbe
lahf
add
aas
xor
int
push
xchg
aaa
clc
push
aam
push
cmp
pop
xchg
imul
push
mov
add
mov
rcrl
in
roll
fbld
jge
pop
mov
outsl
adc
out
scas
mov
mov
dec
pop
add
sub
add
pop
aam
pop
fnstcw
push
aas
aad
stc
scas
fsubs
xchg
sbb
dec
inc
jae
pop
ret
and
jbe
add
or
sbb
push
pusha
sbb
iret
and
lods
push
xor
cmc
stc
jae,pn
arpl
leave
cmpsb
ja
ja
jp
pop
incl
out
xchg
mov
fsubrl
and
sahf
sub
sbb
movsb
xchg
dec
shl
sbb
movsl
stos
xchg
or
adc
frstor
pop
aad
sub
mov
daa
mov
call
pushl
jmp
and
es
jns
xchg
test
cmp
or
test
xchg
or
shlb
je
out
pop
and
pextrw
mov
subl
popa
jg
mov
insb
mov
loope
pop
ja
inc
mov
jg
jge
push
dec
jge
fs
stos
fistpl
or
xor
movsl
fstps
out
out
and
xchg
jecxz
jg
add
xor
imul
inc
sub
sarb
pop
es
xor
daa
push
dec
and
addl
and
scas
jp
push
loope
or
mov
xchg
mov
jmp
mov
and
out
std
jbe
push
or
push
xor
mov
imul
pop
inc
orl
imul
pop
cmp
adc
ffreep
jns,pn
add
sti
mov
pop
mov
and
lret
cmp
sbb
lods
pop
pop
cmpsl
xchg
mov
adc
xor
mov
xchg
mov
cltd
sub
out
mov
mov
sub
mov
lret
cld
orb
jecxz
jecxz
push
ljmp
ds
shr
inc
push
stc
mov
inc
adc
jno
adc
pop
adc
fwait
lds
je
cli
div
jg
neg
xor
imul
aam
ficompl
jl
outsl
jl
adc
pop
das
jle
insl
jmp
ss
xor
clc
stos
push
inc
rcrb
mov
adc
insb
das
addr16
roll
adc
stc
lea
sarl
and
stc
pushf
mov
or
aad
mov
inc
push
test
xor
dec
call
fstpl
sub
je,pn
mov
or
mov
mov
cmc
int3
int
cmpsb
insl
dec
pop
mov
ja
xchg
pusha
add
dec
jle
andl
xchg
inc
inc
leave
inc
dec
add
cmp
lods
test
sbb
ds
jg
rolb
sub
nop
xor
mov
sub
js
mov
fucom
jnp
fimuls
xor
pop
incl
addr16
repz
jno
jbe
imul
adc
das
sbb
les
jecxz
jle
mov
mov
push
mov
mov
faddp
pop
jp
das
std
fcoml
mov
imul
add
mov
push
dec
mov
push
test
add
pop
in
mov
ljmp
cmp
pop
or
sub
test
mov
test
sbb
and
fmuls
iret
aas
test
fcomip
or
cmp
pop
sub
sub
or
push
xlat
sbb
out
popl
mov
movsl
sub
mov
jmp
ret
push
xchg
cld
mov
mov
divb
jbe
ss
mov
jl
cmp
scas
inc
es
pop
sbb
in
sahf
mov
dec
mov
xorl
idivb
jbe,pt
adc
mov
imul
lahf
sbb
das
je
out
mov
and
mov
imul
in
leave
into
xchg
sbb
inc
cmp
jbe
scas
mov
ffree
lock
sahf
movaps
jecxz
fwait
jnp
mov
arpl
cmp
test
jbe
or
sahf
mov
mov
fldt
pop
adc
das
loope
aas
pop
inc
pop
cmpsl
cwtl
pop
shlb
clc
and
ror
adc
lcall
pusha
loop
lods
add
fwait
into
insb
or
jae
jp
fimuls
das
scas
repnz
aaa
mov
es
leave
sub
fstpl
push
outsl
aas
add
pop
in
cmp
pop
ss
cmpsb
movsl
imul
addr16
dec
fs
arpl
fbld
inc
mov
fdivl
in
cmp
mov
pop
push
adc
sbb
arpl
into
xchg
adc
dec
cmpsb
outsb
sbb
ss
pushf
xor
push
lahf
mov
shr
scas
mov
out
push
jno
pop
iret
and
xchg
sub
lods
add
gs
inc
cmc
sub
lret
adc
or
lds
mull
js
jo
xchg
in
cmp
push
ds
xchg
push
fs
mov
mov
rolb
mov
in
andl
ljmp
dec
leave
ja
sub
sbb
xor
jnp
mov
or
push
rorb
popa
cltd
outsb
outsl
lods
xchg
dec
fdivrs
jnp
dec
xor
je
clc
mov
lahf
popa
in
and
das
or
fldz
shl
into
and
popf
pop
lds
stos
pop
pop
jl
pop
xchg
test
imul
mov
leave
pop
xchg
mov
sub
xor
loope
sbb
sbb
aas
xor
cld
data16
jle,pn
inc
daa
adc
mov
subb
fstpt
jl
and
push
jg
test
rolb
lock
pop
and
jle
movsl
stos
out
jns
sub
aas
loop
cmpsl
pop
sub
sub
repz
xlat
lcall
rcll
cmp
outsl
loopne
sub
inc
call
push
outsl
push
outsl
pop
stos
jg
push
movsl
jns
xor
movsb
mov
push
inc
push
je
test
mov
shrb
pop
and
rdpmc
negl
shlb
aad
outsl
add
sub
xor
filds
ss
sub
add
mov
xorb
jo
sbb
push
adc
je
pop
cmp
mov
fmulp
hlt
fwait
xor
inc
jns
outsl
js
xchg
adc
or
rcr
pop
mov
xor
cmp
and
xchg
pushf
cmp
sub
dec
mov
dec
jae
sarl
jl
cwtl
bound
lret
jne
pop
xor
cmp
mov
insl
movntq
and
out
mov
cmp
out
dec
jns
fs
mov
dec
sub
push
popf
xchg
mov
adc
xchg
or
ljmp
mov
jne
in
mov
sbb
inc
xor
jge
jb
cmpsl
xor
loopne
inc
outsb
add
sub
stos
in
cmpsb
dec
cmc
je
in
fnstenv
sub
xchg
imul
arpl
mov
jmp
cld
mov
lahf
dec
xor
push
mov
dec
stos
and
mov
repnz
lock
dec
dec
push
inc
cmp
sbb
lods
in
sbb
mov
leave
insl
cltd
int
flds
outsb
mov
insb
or
xchg
adcl
pop
cmp
imulb
xchg
sbb
sbbl
cmp
inc
push
negl
mov
and
and
sbb
push
cmp
ret
sub
fadd
aam
jecxz
div
cmp
clc
and
or
inc
aam
cld
mov
jo
aas
mov
inc
cmp
cmovp
leave
imul
mov
ds
xchg
scas
cmc
clc
in
xchg
pop
jp
push
mov
cmpb
push
cmp
jl
adc
gs
scas
test
cmpsb
mov
mov
nop
lds
fsts
cli
call
or
fldenv
movsb
or
inc
sub
or
xchg
outsl
push
fcoms
sub
mov
lods
hlt
dec
enter
loopne
xor
es
out
out
test
call
iret
jmp
push
jo
rcrl
fcmovu
lods
jno
inc
faddl
adc
inc
inc
jae
pop
xor
test
cmpsl
and
dec
fisubrl
iret
cmp
jae
pop
in
xor
bound
sbb
int
pop
clc
add
inc
pop
xor
xchg
sub
dec
shll
xchg
push
and
cmpsb
push
xor
adc
push
inc
cmp
lret
sub
jle
mov
sarl
or
pmaxub
ret
cld
adc
sbb
in
push
repnz
sti
and
lret
in
dec
aad
imul
fistpl
mov
aad
jg
leave
enter
lret
imul
int3
mov
lock
xchg
gs
das
pop
mov
xor
jbe
repz
stos
outsb
imul
lret
xlat
orb
call
push
mov
jnp
out
dec
mov
jecxz
arpl
xor
mov
fcomps
iret
inc
aas
ljmp
adc
and
lods
push
add
or
push
sub
inc
dec
sub
dec
xor
fstps
popa
pushf
loopne
push
push
xor
inc
xor
int3
jae
pop
js
dec
ret
inc
sbb
lcall
push
or
mov
mov
lods
scas
mul
and
fcoms
popa
cmp
sarb
cmp
push
insb
inc
adc
ret
in
dec
in
aas
jo
push
out
mov
ljmp
cwtl
hlt
fcmove
out
sub
out
mov
add
push
xor
mov
adc
cld
int3
lret
xor
cltd
and
incl
cwtl
cmpsl
dec
mov
jecxz
mov
cmpsl
cs
ret
or
xor
adcl
push
repz
cwtl
lds
mov
pop
stc
dec
jecxz
cld
rol
sbb
xlat
out
push
mov
sti
cltd
push
sbb
cwtl
rep
fwait
mov
cmc
sti
add
int
popf
loop
inc
xchg
adc
fbstp
push
shll
fsubs
shlb
cmpsl
mov
insb
jo
xor
out
sbb
cmpb
flds
mov
sti
popa
inc
pop
jae
aaa
call
aam
jmp
sub
fxch
movsl
jnp
shl
cmc
mov
clc
inc
xchg
addb
xchg
push
push
lea
lds
pop
mov
xorl
pop
push
sub
rorb
lods
xchg
xchg
popf
adc
adc
inc
xchg
dec
jmp
dec
adc
cmpsl
xchg
adc
das
and
sub
pop
pop
test
mov
push
stos
jge
call
adc
jo
insl
mov
mov
cmp
mov
cwtl
xchg
pop
inc
and
mov
and
cld
fldcw
daa
outsl
mov
imul
fyl2x
ficomps
push
test
stos
inc
push
sbb
xchg
inc
xor
pop
xor
test
movsl
xor
or
mull
cmc
xor
in
out
fadd
scas
icebp
xchg
sahf
jb
mov
clc
dec
pop
orl
test
push
xlat
adc
loop
sub
hlt
fs
lea
jo
scas
or
and
xchg
arpl
mov
shl
inc
jae
jae
mov
shlb
or
jmp
in
pop
and
rcll
scas
bound
jmp
cmp
sahf
int3
flds
dec
inc
sti
daa
mov
in
daa
fs
push
cld
repnz
fldenv
and
in
aam
push
imul
dec
in
push
lds
cmc
mov
inc
rcll
dec
fidivl
int
leave
ret
push
nop
inc
mov
std
push
loop
shrb
aad
test
push
aas
sbb
test
mov
sub
xchg
dec
mov
aaa
xor
outsl
fdivrp
ss
jp
outsb
jg
in
add
push
sub
mov
out
insl
sub
lods
scas
in
lcall
fisubl
jb
insl
jle
cmp
inc
xchg
test
call
addr16
jle
in
sub
mov
push
mov
sub
out
fimuls
mov
jnp
add
int
xchg
aam
dec
imul
jnp
jge
enter
xor
fidivrs
lret
test
jo
jns
and
fwait
loope
jle
sub
iret
imul
mov
aas
test
jae
cmp
les
cpuid
adc
xchg
inc
repz
jle
bound
je
cli
aad
jnp
adc
test
lea
andl
shll
repz
in
mov
pop
mov
push
pop
call
iret
inc
jo
pop
subl
dec
xchg
or
sbb
pop
mov
loope
rcr
mov
mov
test
push
js
stos
add
cmpsl
filds
mov
sub
test
mov
mov
std
aas
lds
leave
bound
out
sub
sbb
outsl
dec
pop
add
mov
movsl
push
inc
xor
notb
jns
jmp
mov
rcll
lret
pushf
dec
fisttpll
es
mov
mov
mov
xor
cwtl
pop
or
or
cld
lods
stc
cmpb
dec
lods
xchg
mov
mov
jnp
xor
out
clc
scas
jge
std
rcrb
sbb
mov
xor
scas
or
mov
mov
les
cmpsl
cld
mov
mov
popa
xchg
mov
xchg
stc
mov
xchg
xor
movsl
loopne
addb
adc
xchg
lret
xlat
shlb
fwait
stos
icebp
inc
adc
loop
std
inc
enter
lahf
jne
mov
dec
mov
jmp
add
mov
mov
inc
xor
mov
mov
loopne
fnstcw
mov
cmp
and
adc
repnz
scas
rcl
sbb
xchg
dec
decl
icebp
mov
jecxz
jae
cwtl
cld
sbb
sub
add
push
test
pop
call
xchg
dec
cli
and
in
cmpsl
xchg
adc
shrb
dec
sub
add
pushf
cmp
sub
popf
fmull
repnz
jne
lret
repnz
xchg
xor
pop
mov
cmpsb
outsb
adc
shl
stos
jle
jns
mov
movsb
pushf
stos
and
lcall
mov
dec
xor
inc
sti
mov
xlat
cmp
pop
push
movsl
fwait
mov
cmp
rcrl
jecxz
hlt
fistl
inc
gs
jbe
out
out
test
clc
lods
mov
adc
mov
insb
mov
inc
mov
int3
lret
stos
ljmp
xchg
outsl
pusha
repz
popf
dec
dec
inc
and
sti
jmp
fucomi
ret
pop
ss
icebp
jnp
jne
sub
movsl
aas
ja
ror
rol
lods
pusha
jnp
cld
popa
dec
iret
fidivrl
jp
int
jb
fs
lds
popa
loope
push
leave
dec
sar
jmp
cmp
lods
rolb
jl
cmpsl
sti
in
adc
mov
xchg
add
fs
push
repnz
fisttpll
inc
rol
adc
sub
pop
cmpsl
repnz
jbe
lret
add
lds
jno
clc
sar
stos
push
jbe
push
out
ja
fstpt
add
out
sbb
out
shrl
jo
daa
aam
mov
sahf
aas
aaa
dec
pop
pop
add
jg
jge
inc
jbe
mov
scas
outsb
int
subl
xchg
ss
pushf
hlt
pop
in
filds
mov
aad
and
and
xchg
lret
lret
rcrl
fcmovb
sbb
pop
inc
xchg
cmp
jg
in
sbb
add
fmull
cmp
stc
push
sub
jns
xor
inc
stos
fs
ret
nop
inc
mov
insb
sbb
loope
cmp
call
inc
pop
push
mov
cmpl
fidivrl
insl
scas
fsubrp
sbb
aas
jb
fidivs
lret
or
mov
sub
inc
adc
cs
xchg
repz
subb
hlt
inc
fnstenv
aas
xchg
cwtl
push
mov
loop
and
pop
jnp
enter
out
mov
mov
icebp
mov
ret
xchg
aaa
fmulp
pop
out
loopne
aas
xchg
js
lret
push
xcrypt-cbc
cmpsl
adc
fisubs
js
fmull
push
mov
fidivl
aaa
cli
out
popf
rclb
or
sbbb
xchg
sub
cwtl
shll
sbb
test
mov
addl
mov
dec
aad
scas
orb
pop
jnp
mov
sti
push
shr
outsl
mov
lcall
xchg
dec
pop
cmp
js
rcrl
sbb
movsb
scas
notb
cmpsl
inc
jns
push
scas
xchg
int
jp
repz
sbbl
dec
mov
mov
sub
ret
xchg
inc
mov
mov
mov
push
fwait
movsl
push
xor
add
cmp
sti
mov
mov
adc
std
mov
stos
in
adc
dec
mov
daa
xchg
popa
or
mov
js
jmp
xor
je
pushf
fs
int
adc
cmp
xor
cmpsl
mov
mov
pop
pop
xchg
mov
push
xchg
std
or
insl
dec
mov
fwait
out
iret
cwtl
mov
orl
xor
add
jmp
leave
push
scas
sbb
or
subl
cmp
pop
mov
hlt
mov
testl
push
inc
aam
into
sar
stos
mov
outsb
ja
out
mov
sarb
add
mov
cld
sbb
xchg
jmp
sbb
mov
mov
or
mov
mov
clc
cmc
mov
insl
repz
mov
mov
lcall
decl
aaa
cmp
sbb
mov
pop
adc
adc
cmpsl
shlb
icebp
mov
test
ljmp
or
sbb
sbb
pusha
out
gs
testl
incl
lret
es
rolb
jno
js
cmp
and
roll
inc
pop
fmuls
inc
add
sbb
jae
out
lods
cmp
inc
push
int
add
stos
andl
clc
out
xor
sbb
jns
fdivr
loop
dec
push
out
push
pop
xchg
repnz
push
fwait
loope
ljmp
cmc
out
sti
movsl
cmpl
or
fcomp
add
loope
scas
inc
add
pop
pop
inc
sub
mov
ljmp
pop
adc
mov
ljmp
es
outsb
arpl
fsubrl
mov
xchg
jo
stos
movsl
add
pop
pop
or
ss
pusha
or
mov
pop
shld
inc
xor
mov
mov
shlb
hlt
aad
or
fiaddl
cmp
lods
lods
pop
fdivrs
ffree
popa
mov
inc
dec
mov
lock
stc
sub
pop
rclb
mov
data16
call
sub
out
ljmp
adc
icebp
pop
add
or
repz
fdivl
aas
pop
adc
pushf
mov
dec
mov
cmp
pop
xor
lock
xor
in
jg
mov
int
push
mov
das
sbb
pop
call
enter
inc
lds
jo
nop
inc
aas
in
test
push
pshufw
pusha
test
sbb
jnp
push
xlat
or
es
or
in
outsl
sub
cmp
dec
xor
push
stos
xchg
in
adc
aad
hlt
add
scas
inc
aad
add
fwait
adc
cmpsl
scas
dec
insl
lods
loope
pop
jbe
cli
mov
lea
loopne
popf
or
nop
lret
inc
ret
push
pop
or
cmp
cmp
sbb
shl
imul
sub
lea
or
mov
sub
daa
int
and
out
xchg
push
pushf
shll
xchg
sub
cmp
filds
repz
inc
ss
jle
sbb
inc
iret
iret
mov
mov
mov
fimuls
cltd
repz
aas
add
sub
xchg
lods
movl
imul
mov
lret
xor
xor
data16
push
lods
jge
out
insb
lods
jmp
mov
sahf
dec
push
les
mov
sub
rorl
cmp
enter
int
push
lods
stc
loop
push
ret
negb
push
sub
fiaddl
mov
push
pop
fnstcw
mov
jo
aam
jne
mov
in
mov
into
repnz
xchg
pop
ss
ror
and
mov
jns
sbb
mov
arpl
outsl
sub
lret
fnsave
sbb
mov
daa
xor
cmp
dec
jge
cmp
in
mov
mov
cmc
mov
mov
dec
cmp
mov
push
or
jl
rorb
dec
in
in
cs
outsl
push
pop
mov
sub
xor
lds
sub
rcll
lods
sub
adc
pop
daa
inc
into
or
in
or
add
stos
fcompp
scas
push
pop
ljmp
icebp
movsl
iret
cs
and
mov
sub
mov
data16
jae
outsb
push
push
in
test
pop
mov
cmp
xchg
scas
mov
xchg
in
lea
mov
mov
out
cltd
sub
pop
and
push
jl
stos
pop
fidivs
jo
ret
mov
inc
out
aad
dec
and
pusha
inc
mov
hlt
outsl
mov
jp
adc
leave
stos
and
jne
lods
sbb
subl
jg
mov
fs
sub
imull
inc
xchg
mov
je
jp
or
js
cwtl
adc
repz
iret
and
xor
xchg
fwait
shr
jae
xchg
cmp
pop
cmp
stos
push
add
mov
les
add
insb
lahf
cli
stc
jg
sub
in
dec
xor
xchg
sbb
mov
out
popf
push
dec
andb
sbb
mov
das
in
lahf
andb
mov
xchg
rcl
mov
cmc
mov
dec
and
pop
nop
test
fdivrl
pop
jl
out
cmpsb
addr16
jl
scas
cmp
mov
xor
jg
inc
xorb
int
bound
lods
or
push
or
push
mov
mov
adc
mov
fldenv
mov
inc
imul
cmpsb
loopne
popf
dec
jle
test
loopne
push
inc
fsubl
xchg
xlat
cli
or
adc
push
fs
lods
dec
jne
out
cmp
cmp
cmp
cs
xor
sub
and
nop
cli
ror
jl
shll
mov
add
std
jns
movsl
and
cmp
xchg
mov
test
fldcw
fucomi
sarb
inc
adc
aaa
cmp
cwtl
cmp
call
dec
mov
sbb
insl
sub
sub
mov
gs
std
adc
in
leave
out
outsl
sarb
aaa
ss
lock
cwtl
inc
push
xor
or
mov
fadds
xlat
lret
in
out
mov
push
cli
xor
mov
mov
dec
test
fdivrl
sete
cmp
idivb
outsb
lds
mov
push
xchg
test
add
fs
in
push
imul
pop
mov
and
imul
sbb
inc
nop
inc
in
in
adc
dec
jl
xor
cltd
push
mov
lock
dec
dec
xchg
in
cmp
xor
test
imul
jne
mov
add
sub
dec
in
mov
lods
cmp
sarb
pop
pop
jle
lcall
xchg
jl
loope
aaa
jne
hlt
int
mov
mov
test
fldenv
adc
test
clc
mov
popa
pop
jg
ds
jno
push
mov
dec
leave
les
aam
pushf
inc
sti
daa
xor
sub
movsl
nop
mov
pop
std
push
das
cmp
jno
or
push
jle
fst
cmpsl
jmp
xchg
adc
imul
outsl
cmp
fmuls
xchg
les
loopne
adc
push
out
cli
sub
adc
hlt
lret
in
xor
cmpsl
lret
imul
subb
push
add
add
aam
xchg
inc
hlt
hlt
outsl
test
test
add
sub
leave
mov
inc
into
jbe
xor
inc
cmp
dec
ret
loope
or
inc
xchg
lds
push
pop
sar
rcrl
jmp
and
neg
cld
lcall
fldl
mov
imul
sub
mov
pop
insl
jno
js
cli
pop
xchg
dec
and
or
cmpl
pusha
mov
sub
mov
mov
fs
xchg
cmp
mov
mov
in
push
xor
fsubrs
lret
in
cmp
push
mov
jge
add
adc
inc
inc
out
mov
out
cmp
insl
push
adc
idivb
in
jbe
loop
mov
jecxz
inc
inc
mov
sub
stc
dec
pop
scas
sub
add
adcl
popf
mov
push
push
sub
mov
xchg
test
mov
mov
cmp
mov
fsts
lret
mov
in
mov
rcll
mov
mov
inc
daa
sbb
or
push
pop
inc
cmpsb
inc
jl
dec
subl
inc
mov
xchg
repz
adc
add
jne
add
les
jge
loop
xor
ja
pop
in
or
pushf
aam
xlat
push
faddl
xlat
cmp
add
add
int3
outsl
jg
int3
xchg
lret
lcall
lock
cli
xchg
enter
pop
mov
nop
movsl
pop
and
shrl
jae
movsb
mov
aam
lea
mov
mov
dec
jg
out
movsl
dec
jo
and
aam
push
mov
pop
lret
pop
inc
adc
aad
fistpll
inc
stos
mulb
inc
pop
shl
push
or
sbb
and
sarb
adc
shr
dec
ret
jns
jecxz
hlt
loopne
jo
and
pop
pop
arpl
mov
aaa
or
cmpsb
jp
xor
jg
sbb
sbb
adc
cs
sbb
sahf
je
ljmp
shr
inc
outsb
icebp
insb
xor
movsb
and
sahf
jne
adc
call
dec
xor
jne
push
gs
sti
mov
add
mov
test
jp
pop
push
fstpl
xor
and
daa
jb
aaa
mov
negb
xchg
jo
stc
jle
sbb
lods
pop
ja
add
inc
incb
dec
push
xor
ret
jno
sub
xchg
clc
icebp
mov
shll
daa
xchg
cmp
fdiv
jecxz
adc
sbb
mull
pop
out
or
mov
aam
icebp
pop
fisubrl
mov
push
mov
xchg
jecxz
mov
outsb
dec
cmc
js
daa
mov
mov
xorl
gs
sarl
jo
inc
mov
push
mov
lret
popa
pop
add
push
lret
cmpl
pop
jmp
jl
inc
test
mov
inc
xlat
sti
js
popf
lods
jb
dec
fdivrl
sahf
outsl
popf
and
daa
pop
call
mov
mov
iret
push
pop
push
pop
dec
int3
pop
hlt
mov
add
cmp
mov
movsl
and
fisttpl
popf
cmpsl
lods
movsb
sbb
mov
cmp
jnp
bound
xor
xor
xchg
sub
inc
aaa
xor
and
mov
test
mov
xor
cltd
je
add
pop
jl
call
cwtl
dec
push
push
sbb
sbb
fadds
mov
or
push
inc
or
sbb
js
xor
jmp
scas
or
and
jg
ds
mov
aaa
rorb
mov
jp
adc
add
cltd
rcrb
mov
push
stos
sbb
add
fs
roll
clc
fisttps
jb
jmp
testb
out
pushf
fs
outsl
lds
xchg
adc
cwtl
xor
in
or
fdivs
push
loope
jo
adcl
inc
jmp
mov
xchg
and
nop
push
aas
push
dec
lock
xor
cmp
stos
in
pop
sbb
scas
lock
sbb
out
nop
in
and
push
dec
mov
sub
ljmp
add
fs
xchg
pop
adcl
add
sub
cli
rorb
js
pop
lds
sti
push
clc
pop
int3
test
cmc
pop
xchg
cmc
push
sub
daa
test
sbb
xor
ficoms
add
lret
hlt
call
sbb
loope
add
sbb
ljmp
adc
xchg
mov
aad
aaa
enter
jo
push
jle
dec
and
inc
je
das
xor
in
cmp
add
jae
mov
mov
mov
repnz
dec
test
xor
lcall
into
push
add
outsl
sub
or
repz
int
fcomps
jns
leave
jns
push
mov
adc
cmp
lds
in
push
adc
cmp
scas
dec
jl
xor
xchg
xor
lock
in
inc
into
ljmp
repnz
aam
sti
inc
xchg
adc
mov
push
adc
sbb
inc
inc
mov
std
loopne
inc
or
and
mov
sub
sbb
sahf
hlt
sbb
adc
mov
fimull
fwait
jecxz
sbb
push
mov
add
push
add
arpl
pop
push
xchg
push
popf
jmp
inc
imul
setg
rorb
lcall
adc
test
xorb
mov
idivl
push
outsb
outsb
cmc
mov
mov
lret
test
mov
push
cmc
in
lock
lret
push
mov
push
push
sbb
xor
dec
outsl
outsl
mov
fucomip
fnsave
das
sbb
jbe
mov
out
outsb
adc
cli
mov
fstpt
movups
mov
pushf
xor
test
mov
jb
out
sbb
pop
out
loope
pop
out
call
dec
lock
arpl
push
adc
pop
pop
out
xlat
pop
mov
and
mov
or
add
adc
adc
push
test
mov
jb
push
dec
pop
sub
push
fnsave
jnp
clc
pop
lods
movsb
cld
addr16
icebp
adc
cmpsb
aam
stc
mov
mov
ret
mov
lods
repnz
idivb
inc
aad
andl
and
rorl
mov
std
inc
shr
xor
xor
outsb
out
jge
jmp
aaa
sub
aas
sarb
int3
mov
push
repz
pop
jge
in
and
fnsave
jo
sahf
xchg
sahf
lods
lret
into
lock
push
push
fbld
mov
mov
stc
or
jl
mov
adc
mov
imul
adc
sub
ficompl
dec
fstpt
mov
scas
std
mov
arpl
adc
mov
mov
inc
add
or
iret
loope
sbbb
push
add
dec
inc
push
lahf
and
xor
pop
adc
inc
fcmovb
std
pop
aas
jb
mov
rol
adc
sbb
iret
ljmp
bound
mov
xchg
setne
sub
sub
sti
xchg
clc
outsl
push
mov
ret
push
pop
movsb
pop
add
or
xchg
mov
mov
addr16
cmpsl
std
or
test
js
jle
cmp
dec
push
ds
ds
add
mov
orl
dec
add
and
mov
lahf
xchg
stos
lahf
out
cmp
aas
les
leave
scas
adc
out
dec
mov
jns
loopne
sbb
sti
sahf
dec
sbb
pop
test
in
jg
lods
xchg
test
shll
cmpl
sub
mov
xlat
dec
inc
mov
mov
ret
inc
daa
adc
or
mov
pop
or
cmpsb
push
roll
mov
push
xchg
repz
pop
xchg
adc
pop
cmp
int3
addr16
stos
and
pop
imul
in
stos
ffree
mov
dec
cld
aaa
mov
fstl
out
jns
popl
stos
das
inc
mov
rsqrtps
nop
in
and
jge
inc
cmp
gs
jp
incl
xor
in
lahf
dec
leave
cmp
adc
push
adc
dec
adc
out
ret
jb
push
mov
mov
adc
adc
repnz
cmp
cmp
xchg
mov
addr16
repz
cmpsb
cld
pushf
xchg
jae
inc
mov
push
and
push
dec
repnz
cmp
outsl
daa
jo
push
insb
and
mov
mov
add
pop
clc
fmul
add
jns
lods
jecxz
or
xlat
cmp
shll
fistpll
sbb
cmc
xchg
stos
rcrl
push
std
stos
les
aas
in
jg
jo
arpl
pop
add
jns
pop
jns
or
test
stc
xchg
lock
or
lock
loop
push
popf
daa
inc
cli
mov
mov
mov
out
push
aas
push
orb
js
add
adc
add
adc
outsb
into
xchg
cmp
sbb
dec
cmp
mov
jecxz
push
inc
fs
dec
outsb
aam
lock
stos
inc
cmpsl
lret
lahf
stc
or
dec
aam
lahf
push
mov
dec
fisttps
and
call
pop
loopne
xchg
push
stos
test
rcrl
inc
outsl
pop
fsub
xor
int3
popa
adc
gs
sub
lods
inc
rolb
aaa
dec
add
mov
sarb
xor
mov
stos
aam
js
stos
repnz
lock
pusha
in
xchg
add
sti
icebp
lea
pop
push
iret
mov
stos
out
cmpsl
inc
cmp
lock
pop
adc
jbe
or
push
adc
shlb
jl
stos
nop
fsub
xor
mov
test
push
insb
sub
sahf
shl
leave
int3
mov
sbb
mov
test
lds
inc
cmpl
decl
mov
lods
push
icebp
jmp
adc
pop
mov
out
sti
cmpsl
jbe
in
iret
jnp
push
movsb
or
cmc
dec
movsb
adc
cmc
sbbl
mov
push
xchg
pop
jle
fisubl
outsl
lcall
loope
lea
push
lds
cmpl
lods
cmpsl
iret
and
jnp
shll
out
pop
add
out
outsb
aam
cmpsb
mov
mov
dec
fiadds
sbb
mov
in
ja
jp
adcl
hlt
fwait
hlt
push
jg
scas
lahf
roll
and
or
pop
pop
sbb
inc
call
lds
out
mov
aad
test
inc
adc
outsl
inc
xchg
insb
subb
bound
pop
jns
mov
ja
add
mov
xlat
loop
push
aaa
xchg
jnp
insb
pop
subb
and
pop
or
dec
inc
fldcw
jo
jnp
push
xchg
sub
arpl
in
jo
dec
fbstp
lret
insb
jbe
outsl
cli
adc
scas
or
imul
mov
mov
or
out
ljmp
test
ljmp
cmpsl
ja
xchg
dec
sti
xor
push
jmp
xlat
enter
daa
iret
inc
jg
xchg
mov
add
loopne
mov
xor
insb
xchg
push
mov
rclb
out
and
mov
fistps
xchg
add
rclb
xchg
dec
lahf
pop
lcall
iret
je
lcall
out
test
cmp
ja
stos
scas
ds
or
xlat
xchg
clc
push
mov
daa
int
int3
push
ja
fs
std
sbb
mov
insb
sbb
scas
jecxz
mov
xlat
or
xchg
jbe
js
fdivp
pop
add
mov
addr16
inc
fdivl
mov
pop
ret
pop
mov
inc
je
lea
out
fmul
inc
insb
jmp
push
inc
jb
add
jg
int3
pop
push
movsl
cs
call
add
jg
je
push
cmp
pushf
out
dec
sub
enter
rcr
out
add
int3
fisttpl
inc
in
xchg
push
mov
iret
xchg
sub
push
add
das
xchg
icebp
adc
mov
aam
inc
scas
mov
aad
mov
push
rclb
lahf
add
popa
jne
xchg
data16
ja
fs
test
data16
fcmove
and
cmp
imul
xchg
sub
ret
jge
mov
test
imull
adc
rol
out
mov
xor
jl
or
mov
mov
test
and
dec
data16
jle
adc
and
mov
push
mov
test
or
mov
lods
pop
pop
imul
xor
xchg
sbb
paddsw
jnp
mov
pop
cld
push
xchg
das
lods
lahf
pop
sub
xchg
int3
xchg
mov
mov
sbb
movq
icebp
subb
dec
and
adc
stc
and
int
cmc
cltd
addb
jge
mov
mov
imul
pusha
pop
push
mov
xchg
push
out
adc
xchg
xchg
add
in
loopne
xchg
sub
mov
es
js
test
outsl
cld
xor
jnp
cmp
push
or
or
mov
fwait
xchg
pop
adc
push
adcl
out
and
or
test
push
cs
pop
lods
shll
adc
ss
mov
idivb
std
ret
or
jl
jne
imul
pop
sarb
cmp
dec
xor
sub
lret
or
or
int
add
jge
es
in
les
negb
test
pushf
mov
jp
jg
lret
movsb
dec
addr16
xchg
xor
repz
push
imul
mov
xchg
outsb
push
hlt
mov
mov
mov
daa
push
stos
dec
xchg
push
bound
dec
clc
ljmp
imul
dec
pminsw
xchg
lods
jne
out
adc
jne
xor
xchg
xchg
pop
jb
int
sbb
pop
cmp
in
lret
pop
cmpb
xchg
mov
add
mov
sub
out
add
loop
xor
cltd
pusha
fdivp
out
push
cmp
xchg
outsb
push
popf
inc
xor
pop
inc
out
sarb
and
les
push
outsl
or
std
iret
xor
je
cmp
and
mov
add
adc
les
xchg
lret
jmp
inc
div
mov
notb
dec
push
popf
or
mulb
out
fldl
dec
nop
jmp
in
cmp
lock
aas
rcl
mov
das
add
xchg
rorb
nop
bound
shll
xchg
jnp
loop
test
pop
test
repz
xchg
ljmp
mov
call
scas
in
icebp
out
and
xchg
xchg
jmp
cwtl
repnz
decl
pusha
fbld
jno
xor
clc
ljmp
dec
icebp
and
out
mov
jnp
pop
xor
hlt
inc
cmpsl
mov
add
stos
add
cmp
cmp
jbe
mov
pushl
dec
out
or
or
lds
aas
pusha
loopne
jne
stc
test
xchg
and
aas
sub
push
aas
mov
sub
ss
stc
push
insb
xchg
sbb
cmc
pop
add
add
inc
out
test
repz
test
dec
jmp
stos
pop
inc
adc
xchg
cwtl
mov
mov
loop
dec
add
orl
adc
push
mov
loope
dec
adc
test
jecxz
sti
repnz
stos
cwtl
mov
xor
fldt
adc
shll
lods
add
sbbb
loopne
and
mov
cmp
enter
push
lret
mov
icebp
lods
inc
clc
ret
mov
jmp
enter
test
jg
ucomiss
cmpsb
mov
jne
ret
movsb
mov
adc
mov
es
adc
push
flds
push
jo
jb
stc
pop
rcrb
mov
xchg
out
sbbl
xchg
das
fistpl
sub
push
int
repnz
fsubrl
mov
nop
push
mov
mov
jecxz
les
mov
in
adc
andb
jo
push
movsb
sbb
enter
mov
out
pop
mov
mov
call
aas
inc
push
insl
scas
add
pop
mov
and
addr16
lret
pusha
adc
nop
ficomps
mov
pop
popf
push
mov
fcomip
negb
xchg
or
fistpll
aaa
jg
jle
pop
jp
and
sub
in
repnz
push
or
dec
ficoms
bnd
js
insl
mov
mov
mov
stc
xor
inc
rclb
lahf
xchg
pop
faddp
cs
adcl
cmp
mov
loope
iret
inc
cmpb
sbb
clc
mov
add
or
pop
mov
jo
rcl
and
daa
mov
fcmove
add
sbb
in
dec
js
xchg
adc
sbb
sub
mov
mov
out
loopne,pn
addb
out
cltd
sti
jecxz
jne
mov
sbb
repz
lea
push
jno
add
xchg
repz
pusha
mov
out
cmc
fadds
test
test
add
push
adc
mov
mov
add
jmp
push
rorl
dec
scas
imul
outsl
imul
loopne
movsl
and
ja
cmc
inc
outsb
inc
add
cwtl
in
int3
jo
push
xor
xor
lret
sub
or
jne
xchg
in
cmp
andl
inc
or
and
mov
into
scas
xchg
and
xchg
pushf
in
ret
inc
cmpsl
ds
sbb
loope
dec
popa
hlt
mov
fwait
mov
inc
mov
outsb
sti
xchg
out
imul
or
fistl
out
ljmp
xchg
imul
cmc
je
addr16
add
fisubl
mov
das
mov
sti
sub
rol
add
outsl
ret
jp
xchg
cs
stos
jg
ljmp
cmc
xchg
test
jmp
cmpb
test
sarl
movups
cmp
shll
sbb
lods
repz
insl
popf
cmp
jb
aam
jo
imul
jmp
sub
add
xor
sbb
ficomps
lods
jle
cld
aad
in
addr16
outsb
arpl
in
mov
addl
stc
out
pop
mov
adc
fcmovnu
cmpsl
and
jae
int3
jl
sahf
xchg
orl
dec
pop
loopew
xchg
fistpl
pop
jl
out
mov
cwtl
xor
icebp
xor
mov
add
or
pushf
mov
push
aas
jns
push
imul
inc
nop
push
pop
je
cmp
jecxz
in
fs
jle
mov
mov
sbb
loope
add
mulb
mov
dec
fcoml
nop
roll
test
pop
mov
adc
sbb
aas
lret
stos
xchg
sbb
test
test
je
xchg
test
lea
add
sub
leave
mov
outsl
pop
xor
mov
or
inc
jb
push
lds
adc
sbb
sub
rclb
data16
adc
xor
imul
pop
xor
js
insb
pop
cmp
inc
popa
insl
test
push
and
jle
cmp
push
mov
sub
inc
rorl
in
mov
into
and
leave
pop
dec
ljmp
or
xchg
incl
fstpt
in
add
mov
pop
int3
insb
orl
dec
mov
in
popa
call
popf
nop
ficoml
sub
cmp
and
iret
pop
jae
jne
mov
in
xchg
inc
sub
mov
mov
mov
mov
pop
xchg
loope
pop
stc
lods
push
int3
mov
data16
test
insb
jg
faddl
aam
jo
jmp
mov
sbb
cmpsl
bound
mov
pushf
push
popa
sti
push
ret
xchg
and
pop
jbe
stos
js
xorb
mov
pushf
pop
dec
stos
dec
jb
aas
rcrl
fucomi
jmp
fisubrl
xchg
push
in
imulb
out
movsl
jmp
ja
mov
and
inc
hlt
fnsave
add
xchg
mov
xchg
std
ja
out
mov
mov
dec
das
push
aad
pop
mov
or
xchg
mov
jb
xchg
sub
outsl
cmp
out
mov
and
inc
scas
es
inc
or
push
jmp
stc
push
nop
pop
jae
leave
cmp
in
add
mov
push
mov
and
xor
push
test
ffree
jo,pn
jl
push
sbb
repz
cltd
mov
push
jecxz
push
sbb
dec
add
lret
int3
insl
stc
sar
out
add
xchg
push
push
mov
jmp
adc
pop
hlt
stos
sub
jge
xor
inc
cmp
jl
movsb
jns
imul
adc
jg
pop
iret
mov
adc
fldt
test
inc
dec
lahf
xor
or
test
enter
aam
mov
cmp
push
test
push
int3
xor
lcall
add
pop
cmpxchg
mov
mov
adc
and
popa
dec
scas
lea
mov
shrb
mov
xchg
or
xchg
aad
mov
adc
xor
mov
mov
hlt
rcrb
loope
xor
fcomps
cs
std
loop
xorb
and
shrb
jbe
lahf
xchg
jge
loope
icebp
pop
pushf
xchg
dec
xor
leave
out
repz
cwtl
je
cmpb
or
pop
or
xchg
sarl
mov
sub
inc
into
dec
mov
jo
cltd
fnstcw
sub
loopw
inc
inc
xor
notl
mov
cmp
nop
push
leave
mov
xchg
ret
ljmp
mov
jmp
push
aam
pop
out
mov
wrmsr
sbb
scas
rsqrtps
fisttpl
xchg
cmpb
xlat
test
aas
and
lcall
repz
add
insb
jns
sub
popa
ds
push
mov
outsl
shlb
test
mov
in
fbld
roll
sbb
rorl
ficoms
call
cmpsb
jae
push
stos
pusha
dec
adc
lds
or
imul
ret
pop
movsb
jp
xlat
mov
xchg
xchg
and
pop
decb
ljmp
stc
xor
cli
push
push
rep
add
xor
push
xor
leave
mov
mov
xchg
xchg
cmp
jle
movsl
ja
jbe
insb
dec
pop
arpl
mov
inc
pop
sbb
cli
add
adc
cmp
nop
ja
jp
pop
fisubl
sub
lods
adc
test
push
daa
arpl
pop
lds
xor
daa
xchg
push
pop
arpl
cmp
repz
clc
xor
pop
mov
test
and
lahf
inc
jg
pop
xchg
pop
jge
popf
xchg
add
xchg
call
jecxz
sbb
and
lea
insb
push
sub
enter
cmc
xlat
lret
test
das
pusha
sub
dec
mov
push
add
mov
jp
pop
lret
pop
repz
movsl
mov
dec
roll
xor
ficoms
cmp
in
inc
jo
pop
cli
push
or
fldcw
loop
into
mov
outsb
ss
sub
fnclex
scas
in
cmp
inc
stos
mov
shr
mov
arpl
pusha
sbb
dec
leave
jle
fs
pop
mov
out
inc
mov
xor
imull
jae
push
shlb
add
sahf
shld
imul
xchg
data16
push
xchg
rorl
xor
pop
cmp
aam
test
stos
push
aas
pop
mov
or
xchg
in
data16
fisttpll
add
cmpsb
push
stos
test
pop
lea
daa
xor
sbb
xorl
adc
lahf
mov
pop
cmpsl
out
jb
jl
xor
xchg
call
jbe
xchg
inc
test
bound
data16
arpl
or
inc
cs
and
mov
jae
fwait
jb
mov
mov
cmpsb
std
cmp
lcall
bound
std
mov
inc
popa
bound
dec
shrl
pop
jmp
inc
out
jno
ljmp
sarb
jbe
pushf
sbb
xchg
mov
mov
jns
es
mov
adc
pop
push
and
xchg
adc
push
cld
jnp
mov
sbb
xchg
aad
adc
movb
repz
mov
push
mov
jl
xchg
mov
push
or
pop
dec
dec
rorl
and
call
mov
pusha
out
fs
divl
add
je
xchg
mov
pop
aas
xchg
in
fst
push
mov
aam
les
xchg
scas
pop
mov
das
push
sbb
cmp
mov
bound
xor
scas
jbe
imul
cmp
inc
in
mov
loopne
mov
mov
loopne,pt
pop
mov
push
fisubrl
arpl
sub
orb
scas
cmpsl
or
xchg
mov
jp
lcall
sbb
jmp
scas
in
pop
sbb
mov
cmp
dec
push
leave
inc
dec
idivb
stc
inc
outsb
shlb
xor
pusha
push
in
std
nop
mov
lea
rolb
cltd
xlat
adc
jae
in
filds
lahf
or
lret
aaa
shrl
aas
jle
dec
sub
out
mov
mov
repz
push
sbb
int
insl
or
ret
mov
les
outsb
sub
jns
mov
xor
xchg
cmp
arpl
arpl
repz
repz
dec
mov
mov
mov
daa
les
pushf
jg
mov
pminsw
lods
rcr
pop
jbe
fwait
sbb
cltd
xor
mov
inc
cmp
xchg
pushf
nop
lcall
cmp
out
cs
cwtl
jo
lods
or
dec
ret
into
push
sti
xor
mov
fs
imul
loopne
push
testb
pop
pop
pusha
cmpsl
sarl
insb
nop
jmp
loope
jbe
loop
push
call
pop
popl
das
push
ljmp
repz
test
cmp
scas
rorb
mov
scas
into
push
lahf
decb
jge
movsl
sbbl
inc
ret
sub
test
sete
push
clc
sub
loopne
jge
cmp
hlt
js
cmc
inc
pushf
push
jo
in
xor
or
scas
fidivrl
jmp
stc
in
add
gs
mov
xlat
mov
mov
inc
push
hlt
adcl
inc
inc
loopne
mov
dec
loop
mov
inc
mov
xchg
sarb
icebp
out
inc
stos
sbb
mov
jmp
out
jmp
sub
dec
cmp
push
test
out
mov
or
jmp
ja
aad
pop
arpl
jo
enter
jb
adc
cmc
in
add
mov
mov
add
in
repz
fnsave
xorb
pusha
or
xor
push
cmp
movsl
jo
in
cmpsb
sub
ret
adc
or
or
or
xor
repz
cltd
xor
loopne
in
adc
test
push
or
iret
xchg
or
and
xchg
addr16
lahf
repz
hlt
arpl
movsb
push
and
push
addr16
cmp
les
mov
jmp
daa
in
int
mov
push
adc
fs
add
cmp
mov
add
cmc
mov
ljmp
push
adc
mov
aas
in
xchg
sbb
lcall
nop
mov
pusha
rclb
ret
sbb
int3
int
aad
cmp
fwait
stos
imul
popa
push
scas
gs
popf
mov
lds
jb
loopne
or
add
lret
mov
xor
icebp
sahf
xor
and
mov
and
or
sbb
ljmp
jle
enter
popf
xchg
xor
xchg
xor
pshufw
mov
jb
cmc
sub
pop
mov
cmp
sub
mov
lods
fldcw
inc
rclb
lock
mov
aad
loope
arpl
jecxz
jge
sub
out
mov
cwtl
lods
cli
fcoml
testl
inc
add
and
lock
popa
cmp
loop
xor
cld
dec
out
sti
cmp
mov
clc
push
adc
xchg
push
push
adc
and
mov
ja
into
sarl
mov
imulb
fsqrt
jno
cmp
sti
mov
scas
sub
jo
aad
mov
fnsave
data16
xchg
sub
push
add
cmp
pop
push
push
shlb
or
ret
cmpsb
and
mov
xor
test
lods
push
repnz
insl
insl
jl
je
aad
aas
cmpsl
imul
divb
xor
shlw
ds
ss
ret
fs
inc
mov
test
xor
sbb
clc
ret
xor
aad
lret
adc
aad
lock
pop
push
lret
test
dec
loop
leave
pop
mov
mov
pop
mov
xor
testl
dec
repnz
ret
jb
insb
push
adc
pop
inc
push
lods
imul
jne
xchg
ret
ds
add
int
sbb
sbb
jl
xor
add
and
cmp
mov
mov
scas
adc
popf
insb
adc
inc
cmp
and
sar
jecxz
aaa
scas
xor
push
rclb
jmp
mov
leave
mov
in
xchg
cli
xchg
jb
jns
stc
xor
ret
add
push
test
push
adc
dec
push
pop
push
data16
jb
aas
stos
or
int
testl
dec
adc
jmp
scas
pop
popa
nop
in
outsb
inc
push
push
adc
outsl
and
fwait
and
pop
fildl
dec
cli
cmp
and
pushf
hlt
dec
xor
out
mov
mov
cmpsb
adc
jecxz
xchg
jnp
popf
mov
test
ret
jo
js
inc
test
cmpsl
mov
xor
mov
push
or
push
test
pop
and
cwtl
jl
rclb
jb
mov
sbb
in
xchg
lods
jecxz
movsl
ds
fdivrs
ds
js
test
cmc
cmpsb
sub
sarb
pop
mov
mul
call
ds
push
pop
cmp
sub
mov
pop
inc
cmp
sahf
insl
jbe
sub
sub
pop
mov
inc
cmp
mov
out
mov
sbbb
push
jnp
push
lods
divb
jg
dec
dec
cmp
push
push
fcomi
or
push
mov
push
ja
ds
cwtl
xchg
test
cmp
push
dec
adc
sub
sbb
notl
xchg
aam
dec
aas
cmp
out
push
subl
mov
sahf
jl
fstpl
ja
ror
lds
in
jg
idivb
or
sub
xchg
xchg
insl
or
mov
aaa
mov
push
sbb
in
pop
jl
inc
push
cli
fs
daa
orl
adc
cmp
xchg
xor
out
push
dec
cmpl
lret
pop
popf
aad
jmp
jge
dec
sbb
shrl
pop
xor
add
and
cwtl
je
loop
jb
ret
loope
mov
cmovae
stc
es
pusha
lret
mov
fsubrl
mov
cmpsl
add
push
jno
inc
jle
lcall
in
sti
push
fwait
push
push
ret
lock
sub
inc
inc
mov
fucomp
rorb
pop
in
test
je
xchg
pop
ss
and
inc
sbb
cld
aad
out
dec
adc
shrb
sarl
ds
ficoms
sub
xchg
mov
bound
out
aaa
mov
add
andb
sub
sbb
sub
xor
adc
adc
repnz
outsl
or
in
inc
xchg
push
lret
cwtl
stos
mov
jle
in
push
add
filds
push
addl
cmp
stos
stos
in
lret
aas
jp
popa
stos
inc
mov
sub
and
gs
pushf
and
mov
iret
push
xor
adc
add
mov
lret
js
lcall
pop
mov
pop
adcl
outsl
push
leave
movsl
sub
mov
daa
sahf
adc
cmp
cmp
or
ja
pop
dec
cmp
mov
icebp
pop
xor
xor
faddl
push
popf
cs
push
fdivrp
cltd
dec
jne
movsb
jno
pushf
add
push
dec
pop
or
and
sahf
fildll
shll
fidivl
int
sbb
jns
push
ror
outsl
aad
out
adc
or
sub
mov
pop
popa
sbb
shrb
ret
aad
dec
fbld
sar
shlb
loop
sbbl
into
cmp
addb
pop
mov
imul
int3
mov
cld
mov
jae
mov
out
iret
int3
adc
sahf
cltd
push
inc
mov
fisttpl
add
jnp
lea
sbb
repz
addr16
shll
stc
pop
mov
imul
movsl
mov
push
std
jle
out
sub
fisubrl
shlb
inc
add
mov
in
push
ret
and
mov
xorb
jb
xor
mov
xor
jg
mov
adc
mov
mov
mov
movsl
jae
lret
call
or
cltd
mov
or
mov
jae
adc
mov
xor
rep
nop
lea
shr
cmpsl
rcrb
xor
adc
out
add
xor
sub
mov
adc
data16
sti
andl
dec
subb
push
lret
movsb
cmp
jecxz
fs
and
mov
cmovae
lcall
movsb
inc
call
xchg
pop
insl
ret
jns
sub
lret
nop
xchg
cmp
mov
mov
cmpsl
jbe
daa
lret
jae
push
subl
inc
and
or
cmpsb
and
lret
or
xchg
push
shll
mov
sbb
sti
out
pop
mov
jns
decl
jne
mov
jno
imulb
inc
arpl
cwtl
leave
cld
rcrl
jl
and
icebp
stos
shlb
mov
scas
mov
inc
mov
sub
inc
cmpb
clc
les
sbb
into
sub
ja
and
dec
inc
adc
lret
cmp
jne
aam
jecxz
mov
or
andb
pop
mov
add
enter
std
test
cmc
lcall
cmp
add
pop
dec
xchg
stc
mov
mov
pop
mov
fisubrs
ficoms
push
test
xor
push
cmp
js
or
xor
pop
and
add
xorb
daa
xchg
in
call
enter
test
addr16
cmp
xchg
sub
push
scas
push
sti
xor
mov
repz
mov
add
int3
cmp
and
push
jmp
sbb
dec
cli
test
cwtl
cmp
call
mov
pop
fs
cmp
pop
fnsave
lret
enter
std
jle
fidivrs
lahf
dec
insl
shl
sahf
and
sub
sbb
sbb
or
sub
pop
pusha
loope
xor
pop
or
mov
jb
lret
mov
adc
push
mov
aad
cmp
rol
inc
xor
cli
aas
fdivs
add
lods
mov
roll
jg
xchg
movsl
fwait
push
scas
ja
sub
js
add
and
xchg
sub
rcrb
lods
imul
adc
pop
aam
int3
mov
stos
fidivl
cmpsb
sub
xor
popa
push
mov
sahf
xchg
ljmp
subl
dec
mov
push
subb
xor
js
pop
xor
test
cmpb
popf
outsl
shlb
mov
add
fldt
ja
es
sbb
push
xor
pop
inc
sbb
loopne
xchg
jl
inc
or
into
movsl
das
rsqrtps
pop
mov
call
push
add
enter
int3
cmpsl
adc
popa
pop
stc
jle
cmpsl
sub
push
inc
dec
test
test
xor
movsb
dec
dec
ss
and
adc
xchg
test
jg
mov
fwait
or
fisubl
sbb
movb
in
insl
in
hlt
int
test
cli
xlat
inc
sbb
push
mov
push
jo
and
aam
daa
lods
aas
mov
cmc
mov
sti
xor
mov
jecxz
fdivr
lcall
or
popa
sub
mov
icebp
iret
mov
mov
and
adc
out
inc
into
pop
inc
stos
cmp
enter
out
add
je
int
ja
sahf
pushf
fdivr
test
pop
sete
enter
lcall
mov
fs
insl
add
std
outsb
es
mov
cltd
adcb
inc
aaa
shr
or
ret
cmpsb
adc
jbe
in
dec
daa
fsubrl
sub
push
mov
or
dec
jae
xchg
pop
xchg
mov
ret
dec
in
lret
xor
ljmp
sbb
cwtl
sbb
mov
push
ljmp
ja
test
xchg
sub
pop
repz
pop
push
gs
jmp
in
sti
jl
push
cmp
in
xchg
pop
mov
loope
mov
mov
push
and
int
je
cld
pusha
arpl
jmp
pusha
sub
fwait
mov
mov
mov
icebp
jl
std
pop
out
lret
or
sbb
jp
ficomps
mov
nop
add
inc
lods
sbb
sbb
push
fiadds
cld
pushf
push
lods
fldz
fsubl
cltd
pop
jmp
mov
pop
mov
push
mov
push
push
pop
xchg
mov
loope
lahf
fnstcw
dec
out
inc
lea
sbb
sub
xchg
push
jb
pushl
jle
xor
cmc
mov
rcrl
jns
stos
jle
pusha
pop
push
cwtl
add
iret
sbb
add
sub
xchg
inc
cmp
gs
mov
pop
xlat
in
mov
xchg
stc
and
jns
cmp
aas
leave
es
aas
lea
xchg
stos
mov
fucomip
test
dec
imul
orb
or
sahf
dec
ret
or
in
sub
adc
in
cmp
mov
cmpsb
mov
lds
dec
and
mov
mov
xchg
jbe
in
push
movsl
add
in
test
int
xchg
jp
stc
pop
ja
pop
or
loope
out
cmc
jne
shr
ret
xor
mov
out
movsb
jae
push
insb
inc
fnstsw
xchg
sbb
jle
sub
sbb
popa
ljmp
fwait
cmpsb
in
mov
inc
std
adc
into
sahf
adc
in
xor
adc
stos
push
inc
rcll
insb
sub
inc
jl
push
xor
and
pop
aas
pusha
cltd
adc
stos
cwtl
jmp
jae
addr16
je
pop
dec
xchg
pop
push
push
jl
mov
sub
push
mov
loopne
loopne
dec
jle
aam
imul
jo
sub
in
cmpsb
jmp
icebp
pop
sub
cmp
inc
or
or
sahf
lock
ljmp
bound
sbb
int3
pop
mov
or
in
out
aad
out
jbe
mov
test
sub
sti
xor
lret
testl
xchg
imul
sahf
add
inc
lea
add
rcrl
aam
dec
adc
aas
jge
pop
clc
pop
inc
das
fucomip
mov
call
aam
imul
shr
pop
cmp
and
mov
xchg
ficoml
inc
add
pop
xchg
mov
fidivrs
add
sub
mov
dec
mov
ss
ja
xchg
ljmp
cmp
sbb
pop
int
cmp
adc
add
xor
repz
negb
mov
xor
xor
jmp
hlt
xor
adc
and
or
fwait
sub
mov
stc
aam
inc
and
fstl
testl
push
ret
xchg
xor
cmp
pop
jno
xlat
lret
or
es
jmp
xlat
xchg
arpl
xchg
inc
cs
add
adc
sub
lcall
pop
jmp
daa
xlat
addr16
outsb
icebp
pop
xchg
jb
mov
imul
call
mov
mov
add
mov
jnp
sahf
test
xorl
cmp
xchg
outsl
cmp
test
xchg
and
sub
rcrl
ss
pop
fnstenv
shlb
loopne
lods
add
pop
push
das
cmpsl
enter
shrl
adcl
mov
minps
xchg
call
data16
push
jne
mov
lcall
inc
mov
daa
mov
ljmp
xchg
cld
jno
push
xchg
push
loop
or
xor
sbb
mov
stc
cld
pavgb
lret
sahf
mov
lret
jp
xchg
mov
cs
out
les
jmp
add
fwait
mov
dec
pop
aaa
fimuls
cmp
add
adc
in
inc
pop
test
and
clc
rcrl
stc
mov
adc
jecxz
pop
outsl
and
inc
into
inc
cmp
into
cmpl
jecxz
out
call
test
je
out
xchg
adc
mov
add
rcll
add
and
mov
sub
scas
xor
sub
mov
sub
imul
xchg
aas
sub
bswap
mov
scas
jo
cmpsl
adc
sahf
or
jo
xchg
popf
xchg
stc
in
xchg
cmpsb
xor
loopne
stos
lret
pop
sub
sub
pop
push
xchg
mov
cs
notl
inc
sub
xor
cmpsl
call
and
je
fiadds
inc
sti
xchg
jne
iret
mov
adc
mov
repz
xchg
add
out
lahf
test
push
cwtl
lret
push
mov
push
dec
fists
test
cmpsb
aad
data16
iret
pop
popf
mov
cmc
movsl
or
dec
call
lods
inc
xchg
and
repnz
adc
sarl
jecxz
lods
push
mov
iret
fucomp
mov
test
mov
sbb
push
popf
adc
jno
jno
and
xchg
je
incb
sbb
dec
and
mov
fbld
push
jnp
inc
andl
test
pop
mov
out
pop
mov
subb
shrl
ret
xor
pop
pusha
or
mov
aam
dec
push
dec
cmpsl
imul
jmp
popf
enter
fistpll
popa
les
mov
push
jle
or
push
mov
add
shl
lods
or
sub
jp
in
sbb
dec
inc
mov
orl
dec
es
cmpsl
scas
ja
mov
sub
shll
jns
mov
or
std
inc
cwtl
mov
aas
push
pop
aaa
imul
mov
in
leave
orl
mov
insl
mov
push
mov
cmc
stc
stc
test
imul
add
fstl
in
pop
cli
stc
fwait
jp
push
sahf
xor
jp
jp
mov
inc
repnz
xor
push
imul
adc
mov
mov
in
mov
ljmp
jno
pop
mov
andb
arpl
addl
mov
adc
mov
aaa
aaa
out
and
mov
and
push
idiv
sub
lea
pop
sub
les
in
nop
push
cmp
lods
je
mov
out
ja
ja,pn
pop
movsl
add
xor
xchg
mov
xchg
push
push
enter
shrl
cmpsb
pop
aas
cli
jmp
jl
ljmp
mov
mov
add
mov
mov
sbb
adc
lcall
ljmp
mov
stos
shll
cltd
pop
fsubrs
sbb
mov
js
push
sub
xchg
ss
out
xchg
stc
shrl
imul
enter
fisubs
or
or
mov
xor
iret
inc
in
and
into
mov
dec
fldcw
iret
aam
mov
push
pop
xor
aas
dec
jecxz
xor
scas
and
in
cli
test
sahf
push
and
rclb
or
ret
lea
inc
mov
dec
cli
and
sbb
dec
test
pop
xor
xchg
cmp
popa
std
cmp
and
outsb
test
ds
push
cmc
dec
jl
imul
fisubrl
fdivl
jp
adc
cld
aas
scas
sbb
cmpsb
or
lods
pop
sub
push
fcmovb
jecxz
or
jle
and
repz
out
rorb
faddl
sub
lock
in
in
mov
inc
scas
movsb
mov
pop
push
fsubs
xchg
or
stos
cld
xchg
loopne
mov
dec
stos
mov
jae
mov
scas
inc
fwait
jbe
and
add
inc
call
jmp
jo
xchg
push
sub
pop
xchg
clc
loope
push
ljmp
int3
stos
daa
push
xchg
fidivl
leave
ftst
test
mov
aas
rorl
popa
decb
test
jne
in
inc
xchg
sti
inc
push
dec
sbb
js
push
pop
bound
cmc
cli
cmpsl
push
lds
mov
push
mov
ret
jge
fwait
jecxz
xorl
jg
daa
test
test
pushf
xchg
sbb
xor
inc
mov
ljmp
cs
cmp
lahf
fwait
cmp
cmpl
mov
mov
lcall
test
cmp
ficompl
std
pop
stos
pop
adc
cltd
mov
dec
sti
mov
or
lcall
loop
ret
dec
cmp
sub
sbb
loopne
or
add
cltd
in
jecxz
cmp
dec
test
push
das
jne
or
mov
es
enter
in
pushf
mov
cmp
inc
bound
int3
into
inc
sbb
jno
flds
inc
mov
xchg
push
in
jbe
orl
inc
add
mov
movsl
cltd
cmpsb
pusha
mov
leave
imul
add
mov
cmp
loopne
ljmp
adc
adc
loope
aas
push
shlb
aad
inc
rcrb
jl
mov
cmc
out
jl
scas
loop
dec
scas
xchg
aaa
test
pop
cmp
mov
sbb
fs
mov
push
lock
add
pop
xchg
int3
add
or
adcb
xchg
sbb
cmp
int
arpl
jne
cmc
fiadds
add
jmp
jae
bound
jno
sbb
and
adc
push
ret
inc
addl
in
or
test
jge
xchg
sbb
xor
inc
and
jno
addr16
sbb
je
adc
add
add
sarb
lret
add
sbb
xchg
and
cmc
jl
push
mov
mov
dec
push
hlt
addb
mov
ljmp
fwait
jl
and
mov
test
bound
cmp
inc
lock
jp
int3
jge,pt
out
cmp
imul
fisttpl
fistps
xlat
sbb
pop
pusha
push
pop
inc
test
cmp
scas
inc
mov
pop
or
jecxz
in
cmpsb
add
jmp
daa
rcll
cmp
pop
ffree
mov
mov
lret
push
lcall
xchg
sbb
test
mov
xchg
mov
add
dec
sub
add
push
pop
icebp
jns
int
je
pushf
push
pop
aam
or
mov
dec
outsl
lock
cs
pop
es
addr16
inc
sub
fsubl
push
cltd
jp
adcb
mov
mov
call
lods
ds
inc
pop
adcl
dec
sub
sub
ret
stc
into
mov
add
mov
xchg
add
and
xchg
inc
adc
cmp
imul
mov
mov
mov
cmc
in
je
sub
jl
sub
inc
repz
adc
fwait
lds
in
pushf
ret
sub
nop
lds
fiadds
jb
sub
arpl
repnz
pop
ficompl
mov
mov
sbb
cmpsl
and
pop
daa
mov
inc
inc
iret
pop
ret
fistps
mov
ja
jp
push
enter
inc
inc
loopne
jmp
test
pop
and
sti
or
lahf
jl
hlt
lock
mov
pop
sub
cmp
leave
and
fwait
inc
push
roll
mov
ljmp
pop
cltd
pop
add
cld
dec
jmp
push
icebp
imul
jle
mov
ds
jl
pop
xor
test
mov
decb
xlat
adc
add
leave
ja
push
sbb
inc
std
mov
es
imul
movsl
mov
movsl
fisttps
and
sbb
pop
push
xlat
pushf
lods
scas
jns
adc
fisttpll
pop
cmp
jmp
mov
xchg
and
add
imul
aas
pop
not
cmp
scas
mov
add
or
xlat
xchg
cmpsl
mov
stos
mov
rcll
add
xor
jge
aam
bound
pop
jl
dec
pop
popf
xchg
std
adc
loop
mov
movsl
shrb
pop
shll
bswap
sahf
push
mov
push
imul
pusha
and
and
hlt
push
xor
stc
cmp
push
push
popf
cli
cmc
mov
cmp
out
adc
jle
sbbl
popa
or
shrl
jne
and
loop
push
into
sbbl
ljmp
mov
iret
test
divb
cs
test
push
icebp
dec
mov
lret
pop
adc
cld
dec
xchg
jle
pop
stos
andnps
adc
call
push
add
popa
cld
push
sub
pop
xchg
inc
adc
cmp
pop
in
dec
mov
sub
xchg
outsl
mov
jecxz
push
ja
adc
out
cmp
or
cmp
hlt
fs
jg
push
scas
pop
xor
sub
rcll
xor
xchg
fs
in
sub
inc
dec
xor
repnz
lcall
fisubl
sub
repz
push
jnp
push
je
insl
lcall
mov
loop
sub
lods
js
out
push
mov
push
movsl
and
clc
xor
xor
mov
scas
mov
cmc
dec
into
push
ljmp
ficompl
jge
es
sahf
push
pop
ret
leave
fimuls
mov
push
les
inc
push
cmc
sub
test
movb
push
inc
push
jp
jg
jae
shlb
shlb
mov
or
ficoms
ficomps
fwait
jecxz
mov
les
lret
clc
repnz
fdivl
outsb
lea
cmp
xor
inc
leave
mov
push
push
dec
imul
jnp
push
add
bound
sub
cmp
mov
and
imul
fdivrl
das
jmp
jge
mov
dec
xchg
aas
or
jne
xchg
and
and
push
mov
cmp
cmp
cmpsb
in
lcall
xchg
push
cs
ret
call
mov
dec
dec
push
mov
sub
or
fcmovne
add
addr16
mov
adc
push
dec
sub
sub
enter
daa
jge
xor
sbb
in
jg
sub
adc
sbb
dec
fs
mov
inc
js
push
adc
sbb
pop
jbe,pt
push
lret
and
dec
dec
push
or
shl
les
jl
inc
adc
aas
in
push
sub
xchg
jp
popl
mov
mov
loope
xor
fcmovu
popa
add
mov
sti
dec
pop
in
iret
fidivrs
data16
hlt
mov
pop
mov
xor
push
outsb
dec
fidivrl
mov
inc
mov
test
data16
or
cwtl
int3
arpl
xor
sbb
and
adcb
cs
cmp
push
xchg
stos
sbb
xchg
mov
inc
xor
mov
push
pop
hlt
lret
sub
mov
fsubrl
push
insl
dec
push
xor
shll
xchg
cmp
dec
sbb
adc
xor
cmc
insl
repnz
xchg
aam
call
fiaddl
cmpsl
push
xor
jmp
inc
movsb
into
jae
jb
ljmp
jno
clc
arpl
push
call
push
jle
mov
jle
or
adc
jae
jmp
in
movsl
int3
cltd
cs
cs
je
popa
push
jp
and
imul
mov
stos
mov
mov
imul
insb
pop
pop
jne
sub
cmp
fdivr
jmp
push
jae
mov
aas
jecxz
add
dec
cli
pop
pushl
int3
mov
movsl
sarl
lcall
sub
push
xor
or
pop
adc
push
push
push
cmp
adc
push
xchg
add
decl
stos
mov
push
push
sbb
push
notrack
int3
mov
cmpsb
mov
mov
jl
xor
inc
das
mov
sbb
jae
daa
lock
mov
jbe
pushf
iret
insb
jecxz
lea
adc
test
mov
mov
jnp
add
test
adc
insb
insb
shrl
rolb
adc
insl
add
xor
pop
mov
dec
jae
and
adc
testl
jl
jecxz
adc
test
push
push
mov
cwtl
sub
lods
inc
cmp
jo
cmpsb
loopne
pop
mov
gs
test
testb
testb
fidivs
lods
stc
mov
stos
shlb
orb
or
and
jns
mulb
mov
sti
call
mov
daa
gs
sub
push
mov
sub
push
jnp
cmp
sbb
rcr
xchg
push
mov
mov
imul
or
pusha
push
popf
mov
push
add
mov
cmp
icebp
sub
jae
rcrl
je
mov
pusha
xor
mov
xchg
push
jne
test
xor
cmp
adc
imul
int3
fdivrs
js
in
test
nop
jmp
push
sbb
fwait
outsl
adc
fs
mov
fnstcw
mov
inc
ja
notl
iret
mov
ret
bound
push
std
adc
fwait
mov
fsubr
mov
lret
sub
adc
or
jbe
repz
scas
inc
imul
adc
jns
out
jge
add
leave
fisubrl
fistpll
data16
test
mov
ja
dec
fdivs
mov
int
xor
cmpsb
rcrb
lods
popa
loop
inc
notl
jns
std
adc
xor
lds
jo
mov
sti
aad
push
cmp
xchg
cwtl
sbbb
jo
cld
fsubr
pop
cmp
filds
aam
js
jl
testl
fwait
xchg
in
cli
mov
cmpsl
inc
lcall
std
bound
push
mov
decl
test
lods
pop
xor
jns
mov
aas
mov
and
in
inc
rorl
popf
or
fnstsw
xor
mov
lcall
jno
mov
int
sahf
or
div
imul
inc
push
repz
add
fwait
sbb
mov
cli
lcall
pushf
fcmovnb
mov
in
mov
stos
mov
mov
mov
jns
pop
pop
inc
arpl
or
add
cs
ret
xlat
pop
pop
cwtl
fldt
inc
pop
and
or
call
or
pop
push
jge
decb
test
shrb
xchg
add
in
jp
inc
dec
mov
pop
add
mov
imul
mov
pop
addb
or
push
les
mov
mov
jbe
mov
imul
ss
sub
mov
les
mov
xchg
or
jae
roll
sbb
jno
or
test
test
push
pop
stos
dec
push
inc
loopne
or
mov
or
push
mov
add
sahf
jnp
sbb
mov
into
std
pushl
mov
clc
adc
mov
lods
jnp
cmp
cmovge
fidivrs
mov
popl
adc
mov
xchg
cld
adc
lret
sub
sbb
inc
sub
mov
cltd
inc
dec
out
cwtl
xchg
inc
push
lods
cwtl
es
in
add
loopne
jns
insl
cmp
adcb
sbb
xor
mov
mov
stos
or
mov
xchg
pushf
xchg
jb,pn
cmp
xor
insl
scas
es
mov
and
jns
mov
sub
mov
scas
jmp
outsb
cmpsl
mov
in
iret
xchg
pop
cltd
cmpb
in
cmp
aad
in
lret
push
xor
lret
sbb
push
pop
or
or
mov
cmp
push
mov
xchg
mov
adc
iret
dec
mov
insl
testl
and
pop
dec
inc
cmp
shlb
test
sbb
cmp
scas
xor
notb
pop
mov
add
mov
dec
hlt
fistps
xor
shl
inc
pop
xchg
cmp
repz
xlat
dec
fistl
or
mov
cmp
add
xlat
pop
movsb
mov
add
inc
pop
xor
scas
mov
in
ret
xchg
fdecstp
mov
sahf
mov
inc
jbe
ds
lock
fidivl
inc
cltd
repz
add
mov
inc
mov
dec
mov
sub
je
sbb
out
jbe
out
lret
adc
andb
outsb
mov
sar
dec
fsts
jno
add
fsubp
adc
in
aam
cmp
jecxz
arpl
sub
cmc
xchg
dec
adc
pop
mov
ss
and
out
dec
inc
xchg
jne
jnp
mov
fdivs
inc
rcl
sbb
mov
cmpsl
js
addr16
mov
xchg
call
loopne
sbb
cld
data16
pushf
int
repnz
test
mov
pop
icebp
sbb
dec
outsb
mov
add
xor
nop
cwtl
xchg
push
das
adc
data16
adc
in
punpcklbw
stc
stos
and
mov
rorb
pop
xor
pop
dec
xor
push
icebp
bound
jl
in
jns
out
stos
push
aad
divb
push
or
aas
sub
jge
pop
stos
in
out
test
pop
inc
inc
jp
mov
sarl
addr16
sbb
sub
or
insb
inc
lods
xor
incl
roll
mov
jmp
in
fisttpl
xchg
int
sub
dec
xor
in
mov
mov
rorb
pop
xor
fnstenv
cmp
lret
repnz
xchg
insl
lock
stos
test
jns
lcall
dec
fidivl
loopne
sbb
jae
inc
fimuls
xor
jg
bound
jns
fisubs
lcall
pop
and
mov
dec
in
shlb
fcoml
push
push
shlb
mov
inc
mov
imul
int3
mov
push
jb
add
mov
add
aam
ljmp
sbb
ret
movsb
and
dec
jp
mov
dec
inc
sub
imul
and
adc
xchg
ss
ret
insl
addr16
xchg
clc
insl
sub
sbb
in
mov
mov
push
and
mov
dec
jns
push
mov
jno
loope
stos
sbb
cmc
ja
push
cltd
xor
loopne
js
mov
outsb
jmp
mov
popa
cmp
cmp
pop
jecxz
add
std
outsb
cmpsb
mov
call
jmp
pop
jmp
xor
adc
mov
pushf
test
rcrl
push
cmp
scas
sbb
and
lods
into
mov
test
push
cmp
cmp
rcll
mov
mov
mul
imul
and
adc
int3
stos
das
xchg
sbbb
mov
mov
and
rorb
hlt
jae
add
dec
movhps
and
push
roll
sbb
mov
movsl
push
adc
cmp
dec
imul
pop
fidivs
cmp
xchg
fs
stc
jo
cmc
push
pop
outsb
dec
and
popf
sub
push
or
jp
adc
adc
pop
xor
rclb
and
pusha
ret
sbb
movsb
sahf
push
clc
test
push
xchg
test
cmpb
sub
mov
add
or
ja
mov
js
xlat
sub
cltd
cmp
test
mov
lock
xor
add
mov
fildl
mov
xor
ret
aam
hlt
les
add
lret
sbb
xor
in
mov
stos
jle
xor
mov
fidivs
scas
inc
mov
mov
dec
inc
lret
push
mov
mov
mov
out
push
pop
jno
jl
add
fcmovnbe
icebp
xor
pushf
cltd
or
in
aaa
and
inc
pop
and
test
enter
inc
and
stc
insl
sbb
ss
cmp
lods
pusha
pop
xchg
lods
arpl
pop
loopne
mov
cmpsl
adc
xlat
leave
adc
and
mov
jmp
xor
cmp
int
cmp
mov
out
je
mov
adc
push
loopne
movsl
fists
fdiv
xchg
jne
stos
mov
outsb
lahf
push
sbb
xor
ror
xchg
mov
icebp
mov
adcl
popa
out
xchg
out
push
cli
shl
xor
mov
jle
dec
xchg
xchg
dec
out
pop
push
lods
aas
ficompl
shll
fs
sub
xchg
in
inc
mov
adc
xchg
arpl
ja
mov
cwtl
idivl
adc
pop
cwtl
inc
adc
jl
roll
cld
bound
push
ficoms
pop
xor
mov
dec
xchg
ds
insl
mov
rcrl
xor
gs
sub
sub
adc
scas
lock
push
out
in
sbb
dec
xlat
dec
jno
sbb
jns
loop
lcall
fwait
mov
test
sub
fs
push
push
jl
adc
xchg
cmp
or
mov
testl
sbb
mov
js
aam
xchg
cmp
mov
popa
nop
sub
loop
enter
lahf
leave
jg
push
fisttpl
mov
mov
scas
gs
lea
dec
les
xlat
lds
dec
or
dec
and
arpl
mov
mov
imul
jg
mov
sub
push
data16
in
loope
pusha
mov
push
repnz
pop
push
pusha
cmp
sub
mov
or
popa
test
adc
mov
cs
xchg
mov
out
out
push
pop
outsb
inc
daa
xor
and
inc
pop
test
lea
xchg
push
lret
pop
loope
and
and
ret
inc
mov
mov
jmp
repz
xor
rol
daa
jle
aaa
sbb
rcrl
mov
mov
lcall
out
adcl
adc
xorb
cmp
fs
mov
bound
rcl
call
fldenv
mov
jbe
pop
movsb
outsl
push
xchg
gs
jns
and
subl
inc
andl
pop
stos
imul
dec
rep
dec
push
sub
leave
mov
rcl
fiaddl
mov
dec
adc
into
dec
mov
lret
mov
adc
cli
fs
or
pop
inc
popf
sub
aad
push
sbb
je
call
rcrb
and
mov
inc
jae
lret
lods
mov
jae
daa
in
adcl
jl
js
or
shlb
and
lods
rolb
mov
cmp
push
in
mov
xor
scas
mov
and
push
movsl
ss
push
jb
push
fidivl
dec
hlt
push
testl
roll
jecxz
test
xor
push
aas
sahf
xchg
ret
pushfw
push
push
dec
xor
popa
test
enter
pop
push
cmp
cmpsl
shll
pop
pop
add
mov
jnp
inc
adc
fbstp
je
jle
inc
gs
out
inc
repnz
push
mov
xchg
jecxz
sbb
stos
lret
das
pop
lods
pop
test
jae
loop
scas
mov
std
jmp
push
mov
aaa
fsubrl
sarb
rclb
inc
ds
xchg
add
mov
lcall
sbb
daa
mov
xor
pop
daa
pop
sub
loopne
rorb
sahf
repz
cwtl
outsb
call
jle
popa
dec
xor
or
das
fistpll
mov
jbe
shll
in
push
ficompl
cmpsl
fistpl
pop
sub
jb
enter
fdivr
inc
scas
faddl
cli
and
cmp
push
inc
or
sub
fs
cs
aad
sbb
lods
fisubs
scas
or
fdivr
mov
cmp
loop
push
or
sub
mov
in
mov
fsubp
mov
sar
adc
packssdw
mov
out
jo
repz
fucom
imull
cmpl
iret
xor
popa
sbb
nop
dec
sub
sub
xor
xor
shrl
loope
xor
loope
clc
mov
shrb
aam
mov
mov
fsubs
xchg
shlb
sbb
dec
sbb
and
pushf
jg
or
dec
adc
adc
cld
lret
dec
andl
dec
pop
clc
push
jmp
jle
inc
rcrb
in
mov
shufps
add
cltd
fwait
xchg
jne
jnp
inc
jge
add
push
in
xchg
inc
pusha
icebp
stos
lret
and
repz
sbbl
pusha
or
rcr
add
psrlw
xlat
jne
pop
int3
stos
addr16
xchg
outsl
jmp
sub
shrl
cli
mov
push
dec
aad
test
push
int
adc
mov
xchg
mov
dec
push
push
add
cmp
scas
imul
decb
lret
fstpt
lcall
adc
mov
mov
in
scas
mov
fimuls
jo
movsb
inc
jns
cmp
loopne
fdiv
in
popf
fisttpl
in
sub
or
test
cmpsl
fsts
mov
in
aaa
add
mov
test
pop
mov
fimuls
xor
outsl
xchg
adc
out
add
add
movsb
lahf
xor
xor
fsubrs
les
ret
stc
jbe
or
fbstp
dec
inc
stc
cmp
mov
cs
lret
xchg
mov
add
inc
mov
sarb
loope
jle
pop
push
adc
inc
std
aaa
cmc
pop
inc
fdivr
cli
dec
push
out
mov
iret
stc
dec
lods
scas
jb
xor
mov
and
aad
mov
ret
and
push
mov
sbb
and
shrb
testl
xchg
inc
addb
push
xchg
inc
sbb
inc
das
inc
cs
es
dec
ror
cmp
popl
inc
nop
adc
fs
pop
fwait
pop
enter
pop
ljmp
add
mov
push
shll
add
and
xchg
inc
mov
test
push
jg
pop
aas
inc
jle
and
pop
bnd
cmc
stos
imul
data16
mov
movsl
and
mov
dec
outsl
leave
dec
clc
fwait
icebp
pushf
dec
jno
shl
out
int3
fiadds
pusha
pop
ss
inc
cwtl
mov
push
cmpsl
outsb
dec
rolb
lds
test
push
xchg
xchg
imul
jle
daa
sub
xchg
mov
sbb
aad
pop
daa
cmp
sbb
pop
xlat
mov
rorl
sbb
sbb
adc
ja,pn
mov
pop
xlat
fildl
mov
ljmp
mov
sbb
clc
popf
xor
arpl
jbe
sub
xor
int
in
jp
sub
clc
or
mov
adc
and
pop
fndisi(8087
mov
push
pop
fsubrs
sti
fcmovbe
jg
push
xor
movd
lret
fdivs
mov
mov
pop
jecxz
mov
ret
test
dec
jnp
dec
push
shl
lock
push
xor
pop
outsb
popf
dec
xchg
mov
jg
loop
iret
pop
loope
mov
dec
cmp
lods
pop
scas
add
xchg
fcmovnu
jbe
lea
rcll
lcall
loopne
je
scas
push
pop
jl
hlt
inc
adc
jge
mov
mov
pop
jmp
popf
sub
aaa
pop
dec
int
pop
ja
sbb
test
cmp
and
cmp
rorw
mov
cs
pushf
cltd
lock
xchg
cld
pop
mov
sbb
xor
mov
mov
fcomps
dec
push
jne
inc
mov
pusha
and
cld
addr16
jg
in
pop
imul
cmp
adc
sti
push
std
xor
out
scas
mov
nop
jnp
xor
and
jo
fildl
dec
ds
dec
icebp
in
bnd
int
call
fadds
inc
icebp
lcall
cmpl
loopne
xchg
adc
mov
push
imul
das
xor
frndint
mov
cmp
mov
add
popf
iret
jns
fcmovu
call
loop
roll
dec
add
push
jge
insl
imul
sub
rclb
mul
fistpll
pop
mov
dec
fldenv
push
xchg
stc
imul
lock
or
cmpsb
jg
out
mov
lahf
inc
lods
cmp
mov
jmp
test
push
dec
sub
sbbl
cmc
sub
mov
daa
mov
lret
inc
fnsave
int
mov
or
pusha
lods
test
cmp
jle
inc
icebp
repz
shlb
in
shl
lea
leave
sub
rcrl
add
int3
fwait
in
add
or
inc
mov
xchg
pop
stos
shll
les
push
int
inc
cmp
popl
dec
and
inc
insl
in
sub
stc
pusha
fwait
ror
and
inc
loopne
mov
push
xchg
int3
dec
enter
stc
xor
mov
or
sbb
subl
in
scas
mov
sub
or
xchg
cmp
and
add
push
lret
mov
test
int
ret
jmp
repnz
lock
ja
mov
jnp
cmp
out
mov
data16
xor
inc
lret
push
mov
outsl
pop
bound
popa
cmp
lods
sbb
mov
add
lea
shrb
mov
imul
out
push
push
in
xchg
mov
jl
mov
rorl
push
gs
scas
push
add
cmp
sbb
ds
je
dec
mov
cltd
mov
and
adc
xor
mov
hlt
ret
bound
ficomps
pop
cmp
das
in
xchg
inc
mov
pop
pop
and
xchg
mov
xor
sub
sti
nop
cmp
imull
xor
imul
dec
sub
or
aas
or
call
cwtl
lods
fists
sbb
push
rcrb
pushf
and
mov
ret
pop
mov
lcall
repz
cs
add
icebp
dec
inc
loop
iret
inc
hlt
push
repz
std
div
out
subb
jne
ds
mov
int
ror
sbb
jo
xor
push
mov
repnz
cltd
mov
mov
push
mov
mov
cmpsl
arpl
xchg
sbb
nop
fisubl
xchg
mov
in
sub
andl
test
mov
push
xchg
mov
xchg
inc
dec
dec
mov
mov
jb
movsl
orb
and
loope
dec
cli
loopne
fnstenv
pop
push
jo
lock
fcoml
xchg
pushf
push
incl
pop
jmp
xchg
and
mov
xchg
lea
dec
adc
arpl
enter
stc
push
movb
xchg
cwtl
fcmove
movsb
cmpl
mov
rcrb
cli
test
hlt
lret
pop
adc
add
loope
pushf
popa
add
sub
and
and
sbb
sahf
inc
jno
dec
bswap
insb
mov
mov
mov
andb
mov
jae
xor
loopne
inc
in
repnz
mov
adc
sti
push
pushf
add
aad
lock
sar
pop
sbb
and
ret
sahf
outsb
mov
lahf
aad
dec
test
adc
ss
sbb
dec
sahf
xchg
loope
xor
jno
xor
pop
xchg
fstl
ficomps
cmpsl
jae
sbb
mov
xorl
adcl
jno
sahf
addr16
xchg
inc
pop
movsb
or
mov
leave
pop
hlt
stc
mov
push
mov
mov
pop
sbb
cmp
outsb
sub
sbb
icebp
push
cmpsb
std
pop
aas
fnstsw
fidivl
cli
inc
repnz
inc
inc
aas
push
stos
mov
pop
jbe
pop
iret
fs
hlt
mov
fsubr
ja
cltd
push
movsl
bound
pop
xor
jmp
xor
sahf
fmuls
dec
ja
imul
push
add
xor
out
fcmovnu
into
xchg
jnp
sbb
das
or
mov
sub
loopne
mov
repnz
gs
xchg
mov
mov
push
movsl
popf
loopne
and
shl
imulb
test
xor
imul
shll
aad
sbb
fadds
inc
mov
or
adc
pushf
cmp
add
test
loope
pop
scas
imul
sbb
out
sub
imul
mov
test
fstps
int
mov
mov
jmp
cwtl
pop
pop
lods
mov
sahf
dec
adc
xor
mov
out
inc
pop
ja
fsubrl
mov
test
lret
jecxz
testb
gs
lods
leave
iret
je
inc
lret
out
jl
jge
jmp
mov
mov
shld
pop
movsl
adc
scas
mov
sub
lea
in
sbb
jno
in
pop
jge
and
mull
mov
testb
test
icebp
inc
jecxz
imul
mov
push
sahf
jg
mov
xchg
pop
xor
leave
adc
or
jns,pt
sub
xor
jno
xor
cs
jae
push
xchg
or
mov
adc
xor
mov
movsb
cld
sbb
call
scas
cmp
outsb
xor
jne
imul
xchg
mov
aam
inc
sub
mov
sarb
mov
jg
fisttpll
dec
fs
gs
loopne
mov
jae
adc
mov
mov
es
pop
inc
jo
mov
sub
or
pusha
lret
and
jae
add
add
mov
scas
aaa
bound
out
mull
int
clc
mov
insb
test
sbb
lret
imul
pusha
pop
lods
cld
inc
arpl
insb
addl
adc
xchg
test
mov
xchg
sbb
bound
and
cmp
mov
mov
mov
fidivs
sti
sti
ljmp
mov
push
and
arpl
add
andl
out
sub
in
xchg
jle
cmc
sbb
and
and
clc
or
push
rcl
dec
sbb
push
in
bound
jle
movsl
push
arpl
or
push
sub
cmp
repnz
mov
adcl
in
int3
adc
popa
nop
daa
sbb
orb
leave
aaa
cmp
add
sub
pop
mov
rol
movsb
or
push
mov
push
mov
cli
sbb
and
adc
xchg
cld
mov
dec
popf
cmpsb
sbb
pop
xchg
movsb
rcrb
sbb
jge
mov
scas
icebp
lds
out
pop
cs
pop
test
push
pop
and
jp
lcall
cmp
mov
adc
jle
mov
mov
adc
xchg
and
pop
add
mov
sti
movb
call
inc
fists
insb
push
push
xchg
dec
mov
stc
inc
nop
call
std
pop
icebp
sub
inc
jno
jecxz
jp
idivl
inc
add
cmp
mov
sub
shl
inc
dec
fs
daa
je
pop
imul
mov
xchg
mov
jno
or
jmp
push
lock
pop
lods
push
xor
roll
jp
xlat
inc
fs
jne
subl
mov
push
rcrl
push
and
scas
arpl
jno
inc
sbb
jnp
xchg
xchg
jp
cs
lock
enter
mov
mov
push
dec
in
std
into
jg
adcl
sarl
imul
adc
inc
or
pop
stc
inc
mov
mov
push
adc
dec
cwtl
cmc
rcrb
push
pushf
es
lods
sub
jnp
out
subb
pop
mov
jo
ds
jbe
div
cltd
jl
jle
arpl
out
adc
repnz
cltd
aaa
stos
cmp
or
stos
std
push
xor
insb
and
lods
ljmp
adc
xchg
add
mov
ret
pop
xor
sti
int
ret
lea
fcomi
inc
adc
push
jbe
fidivrl
push
repz
mov
xchg
std
lods
push
mov
in
pop
mov
sbb
clc
or
mov
jns
cli
sub
out
ret
fidivrs
xor
sub
xchg
jne
test
dec
gs
mov
call
test
scas
sub
adc
in
xchg
or
mov
and
gs
pop
mov
push
fsubrl
addr16
mov
mov
pop
mov
aas
jae
mov
lock
mov
iret
movsb
jo
pop
inc
mov
add
xor
out
push
ja
dec
mov
shlb
fdivr
in
cld
fincstp
push
cwtl
clc
scas
das
stc
xchg
js
clc
push
sbb
ljmp
mov
mov
mov
xor
cmp
xchg
xchg
aam
cmp
adc
inc
add
js
cmpsb
adc
sbb
add
sbb
popf
call
adc
popf
xor
add
mov
sub
jmp
sti
sbb
lahf
push
repz
inc
push
jmp
loop
add
jg
sahf
jnp
das
mov
les
push
push
cmpsl
iret
jne
mov
popa
mov
mov
dec
push
lea
mov
imul
mov
add
ljmp
push
pop
xor
mov
pop
pusha
into
xlat
adc
fld
rcl
jne
inc
push
orb
inc
mov
jge
repnz
push
mov
frstor
insb
xchg
scas
mov
sti
xor
jmp
iret
loop
das
mov
inc
fisubrs
addl
adc
mov
push
pop
mov
jmp
incb
std
xchg
push
lods
loope
pop
rcrb
movb
mov
add
mov
clc
mov
test
rcl
lret
cmp
fdivs
es
in
cmpsb
mov
xor
add
or
pop
mov
push
jbe
addr16
in
jne
pop
dec
movsl
movsl
dec
addr16
fwait
add
in
in
cmp
mov
dec
ss
add
push
outsb
mov
mov
or
jb
lods
aaa
inc
xchg
or
int
jno
pop
dec
adc
cwtl
imulb
mov
add
insb
lock
jecxz
lea
std
pushf
mov
sbb
xchg
xchg
dec
fs
inc
and
pop
lds
push
cmp
cltd
pusha
jae
negb
xchg
xor
cmp
lea
jmp
cmp
mov
and
in
outsb
or
vshufps
mov
icebp
mul
add
dec
cli
dec
and
stos
add
cmp
sbb
cwtl
pop
std
addb
mov
dec
jl
cmpsb
sub
jne
xchg
icebp
cld
or
hlt
loopne
dec
sarb
mov
xchg
sub
inc
sbb
rorb
mov
mov
dec
mov
xchg
leave
mov
xchg
cmp
and
cmpb
repnz
mov
lds
add
outsb
add
hlt
jle
add
lahf
popf
in
dec
adc
and
adc
stc
mov
cmc
jb
jg
mov
sbb
lea
fucomp
sbb
sbb
imul
cmpsl
jge
mov
cmp
pop
in
mov
jae
mov
push
sub
mov
jle
push
je
out
mov
adcl
xchg
push
jno
add
add
sbb
les
mov
pop
sbb
sbb
pop
mov
xchg
popf
xor
cs
stos
test
push
lret
xlat
mov
jnp
push
pop
sbb
mov
or
mov
lea
fcmovb
pop
sub
int
adc
jge
inc
pusha
shr
dec
dec
push
dec
cli
in
or
push
push
pop
out
stos
fcmovnb
sub
and
test
cmpsl
int
clc
jmp
clc
or
xor
out
cld
pop
je
pmullw
jecxz
pop
mov
into
inc
ljmp
pusha
mov
xchg
push
sub
scas
xchg
fidivrs
jne
sbb
pop
mov
lahf
iret
pop
pop
inc
adc
int3
jp
in
or
popf
cld
pop
aad
mov
dec
jg
xor
sub
pop
out
stos
or
dec
fdiv
ja
scas
cmpsl
jo
loopne,pn
call
mov
fwait
in
test
mov
adc
mov
mov
leave
sub
xor
iret
int3
pop
mov
push
adc
adc
xchg
clc
add
cmpsb
jecxz
cmp
and
fnstsw
sbb
push
and
sub
and
ficompl
jo
int3
push
arpl
adc
repnz
aam
xchg
xchg
enter
push
add
jge
mov
inc
es
outsb
dec
cmp
movl
mov
hlt
jnp
fistl
fwait
mov
cmp
push
push
je
cmpsb
in
xchg
insb
fwait
mov
wrmsr
jo
int3
xchg
enter
pop
loope
push
outsb
add
imul
pop
ljmp
dec
ficomps
xor
clc
cmp
mov
sub
cmp
test
pop
std
mov
pop
nop
pop
test
scas
cmp
call
rcrl
inc
sub
inc
mov
adc
xor
std
pop
lea
inc
sahf
shll
lock
iret
call
add
out
loope
cmp
xchg
ficoms
outsl
or
les
push
xor
xor
popa
add
cmp
dec
sti
arpl
pop
or
shlb
fcom
pusha
cli
sbb
js
mov
shrl
and
mov
and
push
mov
outsl
mov
pop
mov
add
xor
idivl
iret
iret
lret
aas
movsb
movsb
mov
pop
fwait
loopne
cli
push
jo
scas
int3
add
out
movsb
shlb
xor
push
mov
std
sbb
mov
ljmp
or
cld
int
js
outsb
ds
aad
or
mov
popf
popa
mov
ss
pushf
pop
aam
jle
xor
jb
jae
je
lret
outsl
in
fwait
cmc
jge
sahf
mov
jne
cmp
push
push
pop
cmpsb
jbe
dec
xchg
ja
pop
jbe
add
mov
fstps
mov
shlb
testb
in
adc
xchg
test
cs
jnp
adc
mov
pop
push
stc
icebp
sub
adc
jge
sar
enter
mov
dec
add
mov
dec
ljmp
notb
inc
lret
lcall
popf
adc
enter
or
fsubl
mov
ret
push
cltd
xor
mov
mov
mov
push
xchg
cwtl
and
sbb
xchg
push
arpl
test
push
jns
fst
lds
bound
mov
arpl
addr16
add
mov
adc
mov
sahf
or
push
mov
jae
pushf
aaa
rcrb
lock
popf
push
jo
xorb
daa
ret
ret
adc
into
adc
and
or
arpl
data16
xchg
pop
sbb
mov
das
fmuls
scas
add
leave
dec
orl
cltd
push
mov
clc
shlb
adc
aad
pushf
inc
imul
mov
pusha
jno
rcrl
rol
stos
mov
mov
outsb
jbe
imull
or
sbb
and
mov
sbb
sub
ss
insl
mov
and
jb
push
dec
in
xchg
fcmovu
sbb
jns
pusha
hlt
xchg
test
add
out
jne
mov
push
sbbb
btr
mov
ja
popf
mov
test
adc
lret
aam
fmulp
loope
scas
js
and
aam
sbb
in
leave
xor
loopne
notb
lcall
pop
pop
jl
jb
test
jnp
ret
and
loopne
es
cltd
lcall
fcmovnb
lods
lds
pop
push
scas
sub
mov
xor
sub
adc
hlt
in
das
xor
mov
in
sub
add
dec
add
adc
pop
lea
fistpl
pop
inc
and
shl
ret
outsb
push
xchg
imul
or
mov
ss
imull
fildl
rclb
push
jp,pt
out
push
stc
pushf
ret
lret
push
insl
lods
int3
ret
nop
imul
movsl
sbbb
loop
lea
cmp
and
or
sahf
dec
cmp
sub
or
dec
dec
jae
jp
leave
sbb
lret
jae
pushl
push
adc
jne
push
jne
inc
lcall
push
jno
lds
jl
pop
cmp
mov
push
dec
mov
xchg
push
xor
pop
sbb
in
jne
pop
out
fnstcw
rcr
ret
cmp
shl
loope
nop
dec
std
push
loop
movsl
mov
ret
sbb
sahf
into
loop
das
test
mov
lret
lcall
xchg
add
fnstsw
mov
pop
imul
pop
xchg
cli
xchg
lea
jl
into
inc
sahf
sbb
inc
or
out
int
pop
mov
pop
add
frstor
jge
lods
cmp
sub
arpl
data16
lock
loope
in
inc
lret
movb
xchg
inc
add
mov
enter
mov
pop
es
mov
nop
and
lret
mov
shrd
and
push
cmp
mov
cmp
jno
xorb
cs
mulb
pop
loop
inc
or
sbbb
and
or
mov
outsl
or
xchg
mov
sub
and
sbbb
push
mov
pop
aas
push
movsl
into
and
cmp
cltd
sub
sub
lods
push
fidivrs
jno
sbb
cmp
imul
dec
test
mul
les
add
and
stos
lods
fnstenv
ljmp
rcr
cwtl
push
pop
hlt
jmp
popa
or
xchg
enter
jecxz
std
fisttpl
mov
ja
sub
lret
int
jp
in
sub
scas
pavgw
jle
sbb
xor
int3
test
pop
dec
stos
and
rcll
push
ret
push
mov
into
adc
filds
aaa
push
and
scas
jbe
in
daa
mov
or
push
into
push
mov
dec
test
mov
xor
push
adc
lock
xchg
ret
stos
xor
movsb
in
inc
pop
mov
bound
mov
lea
pop
arpl
adc
mov
fwait
add
popa
sbb
les
enter
pop
inc
fdivl
adc
or
jg
fwait
lcall
ja
push
jg
outsb
mov
mov
out
xlat
xor
clc
adc
pop
movsb
pop
fcmovnbe
adc
xchg
xchg
cmp
fstps
jmp
mov
push
xchg
jnp
push
xchg
push
in
out
mov
dec
inc
fs
jbe
jmp
mov
dec
mov
xor
and
pushf
fs
pop
cmp
aam
sti
sbb
shrl
fbld
add
jg
sbb
dec
inc
adc
outsb
push
add
sahf
mov
fstps
test
cmp
lret
inc
sub
xor
jo
mov
sar
lret
pop
arpl
cmp
push
push
out
push
out
dec
sbb
push
jecxz
sub
jns
push
shrl
rorb
mov
sub
adc
or
jecxz
pop
iret
add
mov
shrl
lret
push
xchg
fistl
popf
ljmp
xchg
pop
faddl
xorl
sti
dec
mov
and
lock
jge
sbb
sbb
dec
testb
out
mov
dec
into
cwtl
sahf
out
push
pop
xchg
leave
mov
sahf
lods
imul
scas
fstl
popa
pmulhuw
sub
lock
lret
aad
in
int
add
sbb
mov
push
xchg
jns
mov
or
fstps
mov
das
sbbl
out
lds
sbb
inc
mov
pop
sti
sub
jp
je
cs
lods
in
outsb
dec
sub
jge
or
sahf
pop
mov
cltd
aas
mov
add
dec
out
dec
mov
pop
sbb
addl
add
lea
repnz
imul
mov
test
xor
lods
jl
aaa
xor
adcb
xor
sbb
and
cmpsl
inc
in
cmc
push
adc
insl
sub
divl
or
sub
dec
push
in
imul
jae
mov
sti
mov
and
out
mov
mov
call
push
enter
popf
es
inc
add
int3
in
rcl
jle
ret
adc
inc
dec
lea
pop
dec
pop
inc
cmp
dec
aam
call
daa
into
lahf
dec
mov
push
std
xor
mov
aad
mov
jno
cmpsb
inc
mov
in
dec
dec
mov
rcll
xchg
and
jns
mov
xchg
sub
mov
cmp
cmc
clc
push
dec
add
mov
popl
popa
xchg
int3
outsb
or
pop
scas
hlt
jnp
mov
jne
fcompl
fsubp
test
sub
shr
pop
xchg
xor
mov
xchg
insl
movsl
out
aad
inc
cmp
dec
fcompl
repnz
lods
mov
enter
push
repz
add
jl
out
sbb
mov
mov
lods
hlt
jmp
xchg
stc
jge
pop
sub
mov
sub
sti
and
ds
jnp
or
pop
shll
pop
pop
pushl
cli
std
in
int3
xchg
add
jno
sarl
mov
or
ficomps
xcrypt-cbc
cmpsl
adc
jne
mov
cmp
shll
gs
mov
mov
outsb
sar
pop
push
shrl
repz
lcall
jmp
jmp
or
loopne
je
push
das
sbb
and
inc
fists
iret
hlt
mov
shll
cli
jb
je
xchg
sbb
aam
stos
dec
and
test
pop
stos
cwtl
jp
adc
xor
or
dec
ds
out
xchg
adc
xor
lods
or
shrb
js
orl
dec
fstps
lahf
das
pop
xchg
sub
in
add
or
insb
aad
outsl
inc
icebp
jbe
jns
push
sub
pop
pop
loope
mov
movsb
adc
aad
push
ja
and
pop
sbb
dec
sbb
test
mov
mov
pop
adc
fwait
lcall
jo
outsl
cmpsb
sqrtps
ja
cmpsb
imul
mov
mov
movsl
cwtl
mov
hlt
sbb
pop
and
xchg
pop
js
lock
in
jl
pushf
push
adc
mov
sub
jge
int
stos
shlb
int3
repnz
mov
movsl
mov
clc
xor
repz
arpl
mov
int
pop
cmp
mov
mov
mov
jecxz
sbb
outsb
cmpl
xchg
push
xchg
ret
mov
fsubrs
cld
int
in
pop
cwtl
adc
outsb
mov
test
repnz
jg
in
push
cmpsb
pop
rolb
ljmp
sub
fsubrs
cmp
fs
iret
mov
dec
das
cld
scas
dec
test
add
rorb
out
movsl
pop
jp
stos
cwtl
xchg
jl
adc
ss
repnz
cld
stos
push
iret
subl
cmp
stos
movsb
pop
fwait
notw
mov
or
xchg
cmc
push
rcl
lock
call
in
daa
or
in
mov
popf
arpl
pop
dec
cmc
mov
jle
dec
js
sub
pop
cwtl
int
xchg
jno
dec
rorl
or
and
incl
int
mov
rorb
xchg
xor
repz
sub
test
adc
mov
mov
stos
xchg
lahf
dec
mov
push
jecxz
add
out
pop
mov
subb
inc
inc
sub
stc
scas
jp
jle
xchg
mov
cmp
stos
sahf
xchg
cmp
in
and
jl
mov
mov
cmpsl
jnp
inc
nop
jg
cmpsl
cwtl
in
shll
fisubrl
mov
or
outsl
push
testl
pop
ds
cwtl
pop
push
cmp
jns
mov
adc
mov
mov
out
push
cmp
mov
cmp
sbb
push
ja
push
es
aad
xor
out
mov
mov
cltd
fsubrl
aam
lds
cmpsl
rol
inc
pushf
mov
push
mov
aaa
xor
mov
mov
push
shll
je
out
pusha
scas
fisttpl
jmp
mov
jmp
lods
aad
pusha
cmc
call
inc
mov
das
shrl
mov
adc
push
dec
xchg
mov
cmp
clc
pop
push
xor
ds
movsl
push
popf
popl
add
insl
jl
iret
mov
push
out
pop
inc
adc
xchg
scas
in
insl
ja
push
jb
xchg
dec
push
inc
sbb
jmp
or
sbb
icebp
nop
leave
idivb
sub
adc
arpl
lahf
aaa
fdivrs
jle
mov
xor
cmp
mov
xorl
xchg
pop
xchg
lret
arpl
scas
mov
js
aaa
mov
inc
and
push
mov
jge
pop
jne
mov
aaa
daa
movsl
cwtl
lods
imul
ret
mov
sbb
adc
push
movb
mov
jmp
push
add
cmp
inc
ret
push
jo
insl
decb
xchg
clc
dec
pop
and
in
imul
dec
xor
ficompl
xor
lds
pop
sbb
xor
ljmp
jge
inc
loop
jbe
call
lods
add
loopne
fwait
mov
fistps
std
mov
push
adc
pop
gs
cmp
and
mov
fdivl
xchg
jge
xchg
sbb
ficoms
aas
imul
push
ljmp
push
stos
ror
mov
fs
iret
iret
xchg
daa
fs
idiv
fsubrs
sub
dec
movsb
scas
mov
lahf
testb
int3
faddp
stos
imul
cmpsl
mov
fs
dec
andl
outsl
in
shr
mov
push
ja
mov
cmp
jb
sbb
push
aaa
and
ljmp
mov
push
xlat
sbbl
repz
dec
or
test
dec
aas
gs
sti
sub
pop
ljmp
shr
jle
cwtl
stos
mov
pusha
pop
in
pushf
mov
cmpsl
daa
scas
fcoml
jl
or
scas
test
mov
dec
jge
lret
adc
sbb
mov
add
inc
fnsave
xchg
mov
push
test
imul
push
mov
andb
xor
lock
movsb
divb
mov
hlt
je
pop
stos
popf
mov
pop
stos
inc
pop
xchg
dec
push
mov
ljmp
int
das
xchg
into
and
jmp
test
jns
cmp
mov
jbe
or
mov
add
and
fdivl
sahf
fbstp
and
test
test
fidivrl
mov
lods
js
mov
scas
mul
addb
rolb
sbb
insb
mov
sub
call
into
mov
jb
mov
cli
pop
aas
les
cwtl
cmp
jno
outsb
and
add
les
aaa
stc
movsb
xchg
cmp
rorb
cmp
lahf
jecxz
adc
test
call
xchg
xchg
clc
xchg
mov
xor
stos
shr
xor
jge
out
push
jecxz
mov
inc
fistps
ret
adc
test
xor
cmc
xchg
ja
ret
sbb
add
in
and
fimuls
add
dec
fsubl
lret
rcrl
out
sbb
out
js
push
cs
imul
ret
mov
gs
ss
push
push
jge
mov
cmp
mov
xchg
and
divl
push
lods
and
dec
and
loope
xor
and
add
pop
jmp
lret
inc
repnz
jecxz
fistps
cmp
lahf
punpckldq
imul
cmpsb
imul
adc
ja
repz
fldenv
push
pop
push
adc
sbb
hlt
pop
lea
pop
mov
inc
and
cs
pop
outsb
add
fsubrl
stc
sub
jnp
sbb
push
ds
je
pushf
hlt
push
adc
xchg
les
mov
scas
or
outsb
jg
js
mov
test
mov
xchg
movsb
mov
push
movsb
les
cwtl
adc
or
sarl
jae
mov
cwtl
pusha
orl
mov
sbb
mov
cmpsl
xor
jae
in
lods
jo
in
push
add
cwtl
and
push
push
mov
sbb
and
pop
mov
push
push
cli
pop
frstor
lahf
repz
test
add
fistpll
sub
shlb
xchg
aad
mov
xchg
mov
dec
pop
push
std
mov
sbb
jno
sub
pusha
mov
fsubrs
mov
mov
push
std
das
pop
adc
clc
iret
lods
lret
pop
fmuls
xorl
cld
sarl
push
scas
mov
andb
fcomip
dec
stos
aaa
xor
push
sbb
and
mov
inc
insl
xchg
dec
mov
idiv
lret
scas
mov
outsl
lea
sahf
sbb
add
sub
cmp
push
insb
idivb
in
iret
movsl
sub
inc
lcall
sbb
inc
add
push
lods
ds
jnp
imul
xchg
sbb
jecxz
cmp
xor
xlat
push
xor
movsl
out
cmp
sarl
dec
push
or
mov
ret
loop
pushf
sbb
mov
add
rorb
push
out
notb
fbstp
xchg
inc
and
addl
xor
sbb
inc
dec
or
sahf
lock
test
das
inc
clts
fstpt
ficomps
jg
pop
in
adc
jp
mov
insl
mov
enter
jno
aaa
test
rcll
decl
mov
mov
std
popa
or
cmp
sub
testb
lods
and
repz
incl
test
cwtl
icebp
mov
scas
clc
pop
push
mov
xchg
nop
cmp
das
hlt
jne
and
cmp
ja
pop
jno
cwtl
xor
xor
lea
xchg
sbb
push
pop
xor
cmpb
std
arpl
aam
push
sub
mov
rolb
hlt
lock
int
cltd
mov
pop
fnstcw
lcall
mov
pop
add
mov
ljmp
mov
pop
int3
push
pop
jge
fistpl
test
dec
mov
adc
add
xor
fwait
int
mov
push
mov
mov
xchg
inc
lahf
popa
inc
inc
dec
inc
in
shl
cmp
dec
popa
cli
fistl
or
xchg
push
call
dec
repnz
ror
push
xor
pop
sbb
in
mov
xor
and
xlat
adc
stos
rcrb
lahf
iret
testb
nop
pop
cmc
stc
sub
popa
push
sub
addr16
in
mov
push
repz
bound
pop
mov
jl
mov
or
les
sub
hlt
fsubr
sub
rcrl
jns
mov
aam
sub
cmpsb
aaa
ret
cld
sub
mov
dec
xor
jo
sub
adc
dec
jo
cmp
adc
lods
mov
imul
jns
int
dec
psrlq
mov
cld
jmp
xor
psllq
stos
xchg
and
mov
push
or
insb
lods
sub
xlat
fisubs
pop
and
adc
hlt
int3
rol
out
into
stos
mov
mov
pop
mov
mov
mov
or
push
dec
lea
adc
push
clc
outsb
test
repz
jo
loope
faddl
adc
sbb
shrb
in
shrl
or
push
lcall
shl
mov
data16
movsb
mov
jns
mov
and
loope
push
mov
pop
push
mov
mov
das
pop
mov
ds
fimull
xchg
sti
xor
dec
xor
aad
addr16
rorb
daa
mov
mov
push
jne
fisttpll
cld
xchg
jmp
std
inc
mov
mov
adc
add
cld
jbe
dec
pop
pushf
rcl
mov
jmp
xor
sbb
inc
jno
test
adc
aaa
lods
shl
lds
ds
pushf
push
mov
fs
dec
pop
cmp
mov
add
sub
shl
inc
pop
lcall
icebp
dec
add
mov
lods
sub
inc
dec
repz
imul
ss
mov
int
dec
dec
jge
inc
cmpl
add
scas
pop
pop
fwait
lds
pusha
test
sbb
jae
dec
and
push
call
ret
in
or
or
mov
rolb
call
cmp
lret
gs
mov
sub
psubq
les
and
in
pop
sbb
adc
cmpsl
aaa
sub
sbb
cltd
es
add
jecxz
xor
cmpsl
jmp
mov
loopne
pop
add
xchg
jg
cvttps2pi
sub
lods
lahf
xchg
out
jne
out
pop
daa
mov
mov
and
in
jns
sbb
mov
push
dec
mov
or
mov
popf
push
jle
inc
add
push
adc
xor
ret
xchg
popf
push
xchg
sub
out
rcr
push
adc
mov
movsl
ret
lds
mov
rorl
xchg
hlt
xor
sub
rcrb
xor
push
shll
mov
xchg
lea
jp
xor
popa
xchg
pop
popa
repz
pusha
jae
mov
sub
mulb
lret
fdivrl
popf
jno
mov
sub
jns
push
mov
cmp
mov
out
iret
fwait
mov
out
or
pop
dec
mov
inc
insb
xchg
insl
aas
pop
outsl
mov
leave
pushf
xchg
lods
paddq
out
hlt
mov
mov
xchg
mov
jecxz
sub
mov
sbb
push
sbb
in
pushf
leave
imul
test
insl
fwait
ret
popl
sbb
cmp
jne
in
in
xchg
andb
dec
ror
clc
jno
adc
and
imul
mov
push
mov
loopne
es
fidivrl
lret
rorl
sub
loop
in
out
xor
rcll
test
test
mov
fisubs
sbb
andl
add
cmp
sub
pop
pop
dec
and
xchg
dec
xchg
out
cmp
sahf
stos
out
pusha
lret
push
packuswb
xor
lea
fs
rolb
ja
test
cmp
mov
mov
inc
clc
ljmp
cmp
adc
push
mov
dec
sbb
aam
mov
push
and
loopne
xchg
sub
dec
and
in
dec
mov
dec
inc
pop
xorb
jge
xor
mov
ljmp
cmpsb
or
mov
mov
inc
jno
rolb
lret
xchg
daa
imul
stos
jmp
mov
lods
dec
outsb
out
scas
test
mov
ltr
mov
adc
orb
jne
jnp
insl
repz
push
add
mov
jg
cs
inc
cltd
lods
nop
or
mov
roll
push
mov
mov
sbb
mov
sub
add
je
pop
add
pop
icebp
inc
mov
movsb
icebp
dec
jno
popf
or
repnz
enter
out
pop
cmp
dec
jo
test
aad
in
pop
loope
xor
cmp
xorl
and
aam
test
and
popa
out
add
or
dec
divb
dec
rorl
jae
inc
inc
imul
lahf
adc
ret
mov
and
xchg
mov
sbb
test
sbb
lods
test
inc
or
mov
aad
lods
jae
jo
loopne
and
mov
ficoml
das
pop
inc
adc
push
xor
xchg
cltd
loope
cmpsl
xchg
lcall
add
mov
cmp
test
sbb
bnd
popf
inc
push
sar
mov
sahf
inc
je
add
xor
jge
sbb
push
jge
test
mov
mov
test
fildll
mov
loope
int
arpl
cwtl
ficoms
test
lea
aam
and
pop
dec
or
xor
lods
push
jl
sbb
pop
fistps
dec
mov
and
mov
jecxz
push
jno
je
adc
nop
inc
jb
test
mov
push
dec
sub
adc
lods
lods
inc
movsb
popa
jne
in
das
mov
and
jl
loopne
sahf
inc
mov
xlat
shlb
pushf
jno
mov
lds
loope
and
sub
mov
push
cmp
fisttpl
mov
sub
jbe,pn
cmp
cmpb
xchg
adc
fsts
in
cmp
jl
sbb
and
xchg
fnsave
push
inc
stc
dec
xchg
mov
sbb
push
fadd
add
inc
push
loop
or
mov
int3
xor
dec
sub
int3
cmp
jle
sub
xor
inc
mov
adc
or
sbb
adc
mov
mov
push
and
jbe
int
fstpt
in
int
mov
dec
mov
aam
push
push
adcl
test
lahf
xchg
iret
fcomp
xchg
mulb
push
dec
rcrb
dec
out
mov
add
or
xchg
mov
xor
and
pushf
dec
jge
hlt
stos
repz
ss
pusha
xor
jl
pmaxsw
lcall
sbb
xchg
push
idiv
mov
in
xchg
frstor
and
xor
xor
inc
push
inc
lahf
add
sbbb
ljmp
jmp
rcrl
imul
mov
bound
cmpsb
fmul
jmp
push
ljmp
mov
divl
xchg
pop
xchg
fidivs
ret
scas
pushf
in
push
or
in
pop
and
imul
lahf
cmp
cmpsb
mov
subl
and
jb
notb
or
mov
ljmp
icebp
mov
arpl
cmp
test
test
inc
xchg
pop
cmp
dec
out
idivb
sti
ret
ljmp
push
adc
jno
scas
push
pop
inc
cmc
sub
loope
dec
pop
inc
cs
repnz
sub
fbld
jb
mov
jmp
fwait
addr16
aam
div
mov
cmp
stos
cmp
xchg
ja
ja
sbb
pushf
stos
jle
xlat
push
jp
pop
pushl
xchg
arpl
cli
mov
aas
insb
jo
adc
mov
cmp
loop
cmp
xorb
xchg
mov
jae
pop
dec
inc
insl
repnz
aas
jp
call
cld
out
loope
stos
inc
xor
sbb
cltd
jns
in
jg
inc
stos
fisttpl
fstpt
mov
add
mov
ret
mov
push
sti
iret
pop
cmpsb
aaa
cmc
fimuls
and
sub
stos
ret
leave
pusha
loopne
mov
sbb
jmp
sbb
push
cmpsl
test
sub
fists
aas
cld
inc
outsl
loop
test
andb
dec
sbb
lret
imulb
inc
in
in
mov
ror
shrb
push
cmpl
int
mov
int
mov
jne
xchg
andl
das
out
mov
mov
push
outsb
mov
cmp
sub
cmpsb
inc
push
xorl
mov
cmc
sahf
mov
out
and
xor
lock
jo
dec
fcomps
mov
aaa
mov
jg
add
testl
adc
rorb
push
jl
sti
sub
push
jg
add
ds
cmp
or
sbb
hlt
mov
aam
push
dec
sbb
or
outsb
clc
and
jo
pop
rolb
std
idiv
or
mov
push
cld
push
or
or
sbb
lcall
aas
xlat
cmp
lds
repnz
add
dec
xor
add
jmp
xchg
gs
or
mov
xor
push
andl
sar
outsl
pop
pop
sti
mov
out
icebp
push
jne
jbe
out
or
mov
lret
fwait
mov
add
dec
add
jge
neg
push
xor
adc
bound
ret
and
lea
or
xchg
push
mov
cmp
data16
aas
fbstp
addb
adc
sti
xchg
sbb
xor
subl
lock
pop
cmc
pop
xchg
or
mov
pop
and
dec
bt
xchg
push
cld
jo
add
adc
enter
pusha
test
push
stc
sahf
jle
jb
mov
in
sub
fcompl
cs
test
mov
shrd
sbb
loopne
sti
mov
lock
cs
mov
mov
adc
leave
daa
jo
pop
inc
xchg
inc
movsb
dec
ds
int
outsb
ficompl
es
sub
repz
cs
lcall
iret
rorb
mov
xor
mov
into
mov
and
test
mov
gs
dec
movsl
test
mov
rorl
add
mov
pop
rorb
add
or
cmp
pop
out
testl
mov
rcrl
stc
xchg
lock
sti
adc
xchg
stos
push
lahf
and
inc
xlat
mov
pop
or
scas
rolb
into
jge
loope
lret
xchg
cwtl
loop
aad
pop
fisttps
push
adc
mov
pop
aaa
addb
loopne
adc
ss
mov
out
dec
adc
push
mov
repnz
and
fiadds
mov
pushl
clc
out
adc
push
push
jae
aaa
insl
jmp
mov
jmp
cli
jne
inc
push
dec
adc
mov
xor
popa
adc
xchg
cmp
aaa
fimull
jne
add
push
jg
movsl
pop
addr16
out
pop
sub
mov
mov
icebp
fcoms
fisttpl
je
dec
sub
mov
or
pop
mov
adc
outsb
push
jne
ret
sahf
fidivs
lock
and
sbb
mov
cmp
sub
jb
popf
inc
nop
ds
out
dec
add
sub
mov
adcb
cmp
pop
mov
repnz
xor
lock
cs
xor
out
fs
xor
dec
cmp
xor
les
in
push
lahf
mov
inc
inc
jmp
pusha
dec
sbb
les
daa
mul
lods
outsl
mov
add
pop
outsl
sub
cmc
testb
inc
add
mov
adc
cmp
mov
mov
jbe
es
dec
push
xchg
clc
or
adc
lods
adc
cmpsb
cmpsl
or
jbe
aaa
sbb
xchg
aaa
test
cs
sub
loope
out
dec
adc
mov
dec
cs
js
js
adc
fwait
xchg
jl
add
test
push
scas
fldcw
movsl
in
push
sbb
rorb
push
ret
loopne
out
in
fadds
hlt
pop
aaa
imul
cltd
push
add
sub
aaa
cli
mov
mov
sbb
jne
pop
add
in
enter
loop
icebp
daa
or
push
cmpsb
push
shl
iret
jmp
jae
or
pop
mov
sbb
fxch
cmp
movaps
movb
pop
push
das
xchg
fdivrs
sti
int3
jmp
arpl
in
or
push
mov
xor
push
ljmp
test
out
fdivrp
xor
jecxz
sbb
sbb
movsl
nop
pop
in
xchg
inc
dec
js
xlat
and
push
call
ret
shrl
inc
pop
mov
mov
stos
add
fimuls
dec
std
lret
mov
push
loope
sbb
cmpsb
int3
dec
jne
push
xchg
dec
push
xor
mov
icebp
das
dec
testb
sbb
sahf
scas
dec
sub
dec
add
cmp
push
pushf
ret
pop
aad
or
mov
popa
lds
jge
dec
daa
and
ss
and
lcall
add
stos
xchg
mov
rcll
repnz
sub
rcr
out
mov
fs
cltd
insb
add
push
sub
jno
push
movsl
gs
mov
es
lea
ret
cmp
orl
bound
mov
and
out
sub
inc
arpl
jmp
push
ja
in
xor
mov
popa
vpunpckhbw
xchg
jne
dec
and
inc
mov
dec
fbstp
mov
inc
jmp
stos
adc
js
cld
test
dec
adc
mov
inc
fdivrl
or
stc
mov
and
push
push
cmp
cwtl
mov
in
push
adc
xchg
cmc
mov
enter
cwtl
cmp
imul
xor
xchg
pusha
lahf
hlt
ret
lods
and
test
sbb
lcall
push
xlat
or
jl
popf
push
sbb
add
cli
lret
fidivl
inc
mov
xchg
add
repz
aam
data16
xor
sub
aas
cltd
cmpsl
into
lea
cltd
stos
pop
iret
mov
add
inc
cmp
aas
cmp
or
xchg
mov
pushf
cmp
sahf
pop
stc
xchg
imul
shll
dec
pushl
jno
mov
and
addr16
xor
repnz
subb
mov
std
int3
push
xchg
aaa
cmp
or
jmp
mov
or
ret
rcl
dec
cli
lahf
inc
out
outsb
push
add
test
jmp
out
mov
pop
push
xchg
test
dec
scas
orb
ljmp
popa
mov
dec
dec
bound
xor
js
daa
push
sbb
scas
pop
adc
cmp
jae
mov
push
mov
lods
repnz
aas
cmc
jle
fdivrp
pop
in
aad
cmp
incl
stos
mov
sbb
outsl
xchg
push
or
subb
out
dec
ret
cmpsb
sbb
push
xor
mov
cmp
sbb
jmp
adcb
mov
pop
iret
filds
fwait
mov
scas
xor
xchg
std
sub
out
sbb
lock
stc
mov
jno
aas
inc
movsb
repnz
inc
mov
cmp
pop
mov
repz
in
pop
scas
outsl
cltd
mov
mov
adc
imul
adc
int
out
test
xchg
cmp
cmp
pop
mov
jo
mov
mov
and
fwait
xor
jne
insl
xchg
dec
jmp
pop
sub
mov
xor
push
add
test
mov
jecxz
mov
ljmp
jle
int
cmp
pop
repnz
pop
out
mov
ds
into
push
outsl
loopne
loop
out
jae
dec
cli
fwait
repnz
xchg
out
jo
pop
adc
sub
fs
lahf
sahf
pop
lcall
mov
fiadds
imul
pusha
fsubl
out
rcrb
pop
jno
jo
push
imul
sarl
push
bound
dec
imul
rclb
cli
cld
hlt
xchg
pop
xchg
mov
or
rcrl
adc
loope
enter
pop
add
add
out
lcall
in
repz
jp
mov
sti
mov
jae
cmp
and
data16
dec
idivb
jmp
push
subl
loopne
adc
daa
adc
es
push
or
iret
adc
sbb
movsl
lret
jmp
jmp
nop
sub
add
xor
dec
or
movsl
mov
stos
mov
mov
xchg
lods
xor
xchg
push
adc
push
push
lock
inc
andl
das
push
jmp
or
sub
sbb
loope
test
lods
sbb
nop
sub
add
mov
or
inc
enter
stos
loope
in
mov
mov
dec
and
jp,pt
inc
xchg
stos
jl
fcompl
scas
stc
rcrb
clc
andl
push
sub
push
packuswb
fcomps
lea
fnstsw
scas
bound
or
xor
pushf
pusha
shlb
rcl
fdivl
insb
adc
xchg
inc
ja
ror
or
insb
adc
test
out
out
sub
inc
jnp
push
push
adc
add
adc
mov
push
in
pop
xor
cs
push
mov
or
stos
aaa
push
add
movsl
push
subl
dec
mov
es
lock
mov
push
dec
stos
mov
xchg
push
jg
fidivs
inc
mov
cmp
ret
jmp
and
sti
shll
outsl
mov
adc
scas
filds
jp
jge
or
mov
sub
mov
or
inc
pushf
sub
inc
sub
push
repz
mov
adc
or
cmp
cmpsb
fildll
lods
iret
negl
cltd
mov
sub
popf
or
jo
jecxz
xor
loopne
imul
lahf
sbb
push
out
daa
mov
clc
pop
xchg
mov
incb
jge
or
cmc
push
mov
xor
in
cmp
pop
jmp
or
mov
dec
iret
dec
xor
mov
mov
stos
pop
mov
mov
pusha
push
xchg
mov
jmp
pusha
addl
mov
into
mov
rclb
clc
xchg
push
jb
scas
add
xchg
and
pop
and
adc
or
xor
add
hlt
dec
mov
jo
fimuls
xchg
out
scas
jae
push
add
in
insl
mov
sbb
pop
xlat
push
pop
movsb
push
sbb
ja
or
fistpl
movsl
add
xor
stos
xchg
int3
dec
jo
js
jmp
push
nop
sub
cmp
popa
and
fstps
xor
cmp
jmp
mov
stos
xchg
pop
scas
ret
popf
jns
push
cmp
push
xor
ficompl
loopne
pop
lock
and
cltd
out
gs
jo
sbb
call
add
hlt
sbb
rcrl
sahf
add
jge
out
test
jecxz
mov
addr16
sti
jnp
jae
shrl
outsb
test
hlt
dec
pop
mov
jp
cmp
dec
daa
inc
mov
fcmovu
repz
jns
iret
inc
ret
icebp
jl
in
sub
imul
in
or
adc
mov
scas
mov
pop
subl
popf
cmp
push
out
and
xor
mov
xor
adc
in
sbb
loopne
popf
mov
testl
jle
xchg
jl
xchg
rol
mov
push
scas
popa
aas
mov
sub
repnz
faddl
add
leave
stos
movsl
add
cli
or
add
dec
out
jp
push
mov
sub
and
xchg
movsl
push
imul
repz
fdiv
jge
or
inc
call
test
fildll
cmp
ljmp
push
sbb
js
outsl
scas
movsb
cmp
cwtl
sbb
inc
std
sarl
push
or
movsb
inc
cmp
add
mov
notl
cld
out
push
sarl
xor
sub
lret
dec
lods
add
mov
add
mov
adc
push
pushf
stos
out
and
jae
inc
sbb
cmp
int3
mov
sub
or
idivl
inc
into
xchg
jb
xor
nop
jae
cmpsb
jmp
lea
push
data16
js
out
out
xchg
cmc
sub
mov
inc
ds
cmpb
cli
cmp
mov
xor
icebp
mov
in
mov
cmp
aas
jecxz
inc
sub
or
outsl
mov
mov
jge
and
ret
sub
movsb
lahf
inc
in
sbb
out
inc
sub
and
in
or
out
fwait
es
sub
leave
ja
xlat
test
push
add
jne
mov
inc
lods
hlt
sbbl
fimuls
push
imul
add
int3
xchg
jmp
scas
cmp
jns
aas
stos
iret
mov
xor
cmp
subb
sahf
imul
sbb
inc
mov
push
std
inc
dec
scas
mov
cwtl
movhps
fucomi
or
push
loop
push
cmpsb
jbe
sbb
inc
push
xor
fiaddl
push
pop
imul
call
cmp
iret
mov
loopne
gs
fnstcw
jle
xchg
lahf
xor
push
lcall
fdivrs
pop
lods
dec
mov
bound
ds
jge
dec
loope
loope
out
xor
mov
xchg
subl
rcr
mov
xchg
xlat
movsl
or
int
add
pushf
ljmp
push
mov
jp
dec
mov
push
xchg
sbb
pop
sub
dec
mov
shll
jo
fcomps
pop
and
lds
adc
popa
pop
adc
lock
loope
add
das
cmp
lock
sbb
jecxz
loope
pop
mov
nop
or
rorb
dec
loopne
add
fcompl
pop
arpl
mov
and
in
mov
mov
mov
sub
inc
push
cwtl
roll
setae
hlt
jle
cmp
sahf
xchg
xchg
mov
push
imul
outsl
cmp
test
cmp
xchg
inc
mov
je
add
out
jnp
push
test
and
pop
pop
lods
enter
inc
push
push
aam
adc
xor
jecxz
mov
js
mov
cli
mov
or
cmp
in
pop
inc
and
cmpsb
cs
jge
xchg
jns
out
mov
test
jb
mov
mov
adc
rcrb
mulb
push
cmp
call
dec
icebp
dec
xchg
sbb
or
sub
mov
push
or
cmpsl
jle
add
daa
or
test
mulb
addr16
or
lds
outsb
push
dec
adc
add
cmp
xor
pop
jge
mov
jne
and
xor
mov
lock
push
xchg
push
cmp
ds
adc
ja
aad
pop
std
lret
ficompl
push
gs
and
insl
push
test
jmp
add
or
pushf
sub
mov
sbb
stos
bound
ret
clc
stos
fs
push
cmp
in
cmpsb
mov
ret
or
arpl
inc
popa
pop
repz
dec
scas
and
sbbb
jp
pop
aaa
sti
mov
xchg
pop
jnp
insb
mov
nop
out
mov
aas
notl
in
les
dec
out
std
dec
add
in
daa
or
sub
dec
cmp
pop
sbb
and
stc
add
mov
aas
and
add
xor
push
dec
in
push
mov
mov
adc
push
cltd
movsl
jns
rclb
cmpsb
insl
sub
jb
lret
dec
rorl
scas
sub
xchg
push
stos
int3
cltd
inc
pop
int3
xchg
not
in
pop
scas
adc
in
mov
sti
in
xor
inc
lods
add
loopne
or
aam
fcmovu
inc
pushf
in
cmp
in
xchg
xchg
xchg
loop
enter
icebp
xor
movsb
cmp
mov
lock
iret
sub
cmpsb
inc
shlb
shlb
sub
aad
int
and
sub
bound
mov
lea
aam
pop
lea
repnz
jle
sbb
push
cmpsb
jns
xchg
cmp
or
js
sub
mov
lods
inc
jae
scas
dec
fsub
xchg
fldl
loopne
lods
dec
lret
mov
jns
push
pop
rcl
inc
push
cmc
xorb
mov
push
dec
jo
or
and
pop
add
inc
add
ljmp
test
ret
sbb
fmul
mov
cmp
nop
fstps
inc
popf
shl
dec
ror
rcll
stos
cmp
andb
jl
add
das
jp
adc
push
cwtl
xor
lret
js
push
cmp
mov
in
leave
xchg
push
add
stos
push
outsb
lods
rorb
clc
dec
inc
push
ljmp
inc
sub
stc
je
cltd
cmpsl
or
stc
xor
imul
adc
xlat
rcr
pusha
pop
adc
mov
xchg
and
inc
inc
sti
fisttps
jo
cmp
les
ds
mov
sub
mov
stc
fldcw
jae
test
mov
roll
ljmp
loop
test
jp
inc
pop
and
aas
out
outsl
push
mov
mov
push
aam
or
adc
icebp
hlt
mov
scas
push
arpl
fnstcw
pop
mov
in
insb
clc
cwtl
in
cli
fisttpll
ror
lret
add
stc
jae
mov
clc
sahf
je
iret
dec
or
push
cmpsl
inc
fcmovb
sahf
inc
dec
sub
cmp
or
enter
in
lret
sub
mov
add
test
push
dec
inc
push
aad
scas
in
mov
dec
enter
gs
mov
shrb
lcall
inc
xchg
mov
mov
idivb
bound
xchg
loopne
push
push
cmp
pop
mov
pop
int
jl
or
xchg
add
sbb
xchg
or
xchg
clc
mov
enter
out
cli
cmp
or
mov
sti
repnz
lods
popa
cmc
jle
in
or
lret
cwtl
lea
add
cmp
jo
add
ficoml
mov
jns
sahf
iret
fstl
cmp
js
mov
push
jle
add
fwait
in
or
lods
jbe
int3
dec
mov
das
lea
dec
inc
jle
mulb
jbe
add
push
ds
mov
sub
sub
adc
jg
inc
ds
leave
push
pop
xchg
add
inc
xchg
push
cld
js
pop
lds
aam
test
inc
movsl
jl
adc
call
or
aas
add
push
xor
lret
xchg
push
push
mov
push
mov
adc
lret
pop
pop
fucom
inc
sbb
lock
dec
insb
rcrl
mov
mov
cld
jae
mov
sub
pop
jbe
sub
dec
adc
in
negb
inc
pusha
cmp
int3
pop
dec
sbb
in
mov
bnd
mov
movsb
and
dec
scas
les
aaa
nop
jge
cmp
lods
ljmp
lea
adc
mov
ret
jl
push
pop
inc
outsl
scas
sbb
hlt
adc
aad
mov
out
mov
pop
and
addr16
pop
fdiv
insl
push
addr16
jnp
add
fildl
adc
stos
mov
shll
sbb
push
loope
jb
mov
xor
inc
lods
sahf
das
fdivs
sub
and
jae
add
mov
pop
push
test
ficompl
ret
push
mov
jp
cmp
mov
inc
aam
sbb
cmp
dec
scas
push
xor
jg
int
and
inc
xchg
cwtl
and
sbb
inc
mov
insb
insl
pop
inc
adc
movsl
mov
xchg
data16
pop
sbb
lods
xor
ds
mov
cli
mov
xor
enter
cmp
cs
push
divb
pop
xor
jle
xorb
cld
mov
mov
push
sbb
xor
mov
sqrtps
inc
lret
enter
cmp
mov
or
and
ret
incl
std
into
imul
mov
xor
sarb
int
xchg
push
add
pushf
int
fdivl
imul
sahf
cld
push
pop
adc
xchg
int3
scas
arpl
jne
lods
ret
cli
sarb
cld
add
mov
loopnew
lcall
pop
inc
stc
and
clc
dec
xor
mov
fists
imul
fistpll
and
out
movsl
sub
push
fwait
dec
jl
adc
fs
jnp
cmp
jns
scas
or
and
inc
lods
out
shrl
add
mov
push
mov
or
sbb
or
in
fadd
aad
mov
loope
mov
jle
in
add
xchg
lods
sub
loope
gs
loop
jle
adc
fwait
das
xchg
pop
lahf
imul
mov
cltd
xor
daa
mov
nop
cltd
call
int3
fnstenv
mov
dec
push
sub
popf
and
pusha
mov
ret
in
mov
mov
and
mov
in
insb
inc
ja
fbld
and
sub
jo
repnz
pop
xor
insb
push
fstpl
das
pop
lret
mov
dec
ret
push
arpl
jl
pop
lcall
dec
xchg
jo
jecxz
push
pop
ss
fidivrs
mov
insl
ds
rcrl
fbld
das
add
outsb
push
aaa
scas
stos
mov
imull
mov
xor
loop
jmp
mov
iret
popa
inc
adc
inc
and
push
add
cmp
inc
movsb
lcall
lds
jae
push
popa
add
in
push
pop
jns
aaa
jmp
mov
int3
sbb
or
sbb
cwtl
xchg
or
mov
add
subb
cmpsl
push
adc
pop
inc
mov
dec
aam
inc
addl
loope
lahf
xorl
fistl
imulb
mov
stc
inc
mov
dec
pop
sbb
mov
in
icebp
mov
pop
in
mov
dec
push
mov
shl
stos
push
sub
jecxz
push
add
xchg
dec
js
jmp
ret
push
jns
out
jbe
out
hlt
mov
push
movsl
imul
cs
jnp
pop
xlat
or
push
inc
dec
sub
ja
or
popa
inc
icebp
pushf
mov
shl
cmpsb
into
xor
push
movsl
xor
mov
test
arpl
add
mov
jne
rep
pushf
jb
out
out
das
aaa
gs
cmp
inc
add
sub
js
mov
xchg
sbb
add
xor
and
bound
jbe
add
out
xchg
push
pop
dec
dec
orl
xchg
pop
insl
mov
aas
mov
jg
out
adc
andl
ficoml
ja
jnp
jns
cmpsl
jne
jae
out
xor
xorl
notl
push
les
mov
pop
sub
testl
test
sar
lret
sbb
stos
adc
mov
call
jae
insl
inc
and
lds
popf
inc
push
add
adc
out
nop
andl
cli
cld
mov
lock
std
pop
clc
ljmp
imul
dec
cmpsl
mov
ljmp
jb
insb
xchg
in
stos
sbb
cmp
fsubs
or
xchg
ja
mov
shlb
xchg
iret
add
fucomp
jmp
pop
push
xor
or
fidivs
enter
pop
xchg
dec
jno
push
jb
fmull
scas
mov
fwait
loopne
mov
push
pop
push
push
mul
test
ljmp
out
push
or
mov
repnz
and
fucomi
scas
cltd
add
jecxz
out
jnp
adc
ja
ljmp
sbb
dec
sub
shlb
push
ret
std
ret
xlat
jge
xor
xor
sub
add
add
mov
jge
outsl
lds
std
rcrb
add
repz
repz
insl
xchg
jae
jno
inc
cmc
shrl
sub
mov
adc
rcrb
lock
cs
cmp
subl
push
pop
fstpl
rcr
jle
icebp
add
mov
outsl
fsubrs
mov
cmp
pop
mov
jnp
jg
add
sbbl
pop
idiv
adc
ja
popf
fiadds
xchg
shll
and
add
sbb
fnstcw
fcom
xor
adc
in
mov
mov
push
ret
pop
imul
es
int
insl
sub
test
add
mov
aaa
mov
xchg
shlb
ret
mov
std
xor
icebp
mov
mov
xchg
js
xchg
lods
mov
rorl
mov
xchg
les
decl
cmc
mov
bound
pminub
push
shll
lods
movsb
xchg
and
sahf
sub
jno
sub
cld
push
out
sti
lea
xor
sub
adc
sub
jnp
ljmp
xchg
movb
push
enter
mov
fbstp
lsl
pop
sub
ja
hlt
sbb
sar
lahf
icebp
ds
push
cmp
add
lds
jl
dec
in
mov
push
jbe
loope
sbb
out
sti
sbb
push
shlb
in
mov
scas
sub
cmp
mov
xchg
shlb
push
loopne
rol
pop
dec
dec
or
aaa
xchg
xchg
sbb
sbb
addb
dec
mov
lcall
cs
adc
jecxz
imull
xchg
inc
sbb
jne
lgs
mov
xchg
dec
test
movsl
sbb
aam
les
pusha
cmp
idivl
cmp
test
jno
add
hlt
stc
and
bound
mov
ficompl
jno
fs
sub
sarb
jmp
adc
dec
jns
cmpsw
negb
sbb
sarb
ret
adc
jmp
jecxz
loope
inc
repnz
cmp
cmpb
jge
out
adc
jnp
aaa
jnp
les
loopne
lds
jecxz
hlt
push
adc
jecxz
pop
cltd
out
cmc
push
or
or
xor
inc
pop
stc
sahf
pop
push
sahf
roll
cmc
mov
in
push
stos
adc
push
sti
mov
pusha
or
fisttpll
lret
cmpl
pop
js
xor
xchg
outsl
popa
push
inc
test
nop
pop
or
dec
cmpb
pushf
xor
cwtl
arpl
xorb
push
add
lret
sub
leave
xchg
mov
inc
xor
adc
loop
sub
out
dec
cmp
mov
add
icebp
rorb
add
repnz
outsb
std
mov
sbb
leave
or
jb
add
mov
jp
fsubrs
and
and
imul
add
mov
mov
fcoml
das
and
mov
inc
mov
jg
mov
or
inc
dec
ljmp
cmp
sbb
imul
test
icebp
pop
fisttpl
loope
add
push
push
aam
and
sub
arpl
psllw
or
sbb
push
shll
repz
dec
inc
add
adc
inc
add
mov
push
aaa
mov
add
jmp
adc
enter
js
adcb
adc
inc
fisubs
shlb
daa
roll
sahf
int
pop
mov
enter
stc
inc
or
cmc
push
hlt
lea
test
stos
jge
insb
mov
jns
xchg
jae
cmp
das
cmc
cmp
mov
fs
repnz
xchg
fstpl
out
orl
int3
sub
in
jle
xchg
in
aad
or
ret
loopne
push
xchg
jno
iret
pop
adc
nop
sbb
xor
and
pop
sub
push
aas
dec
sarl
addr16
xor
adc
mov
xor
gs
sbb
push
aam
hlt
fidivrs
fcmovbe
mov
lea
adc
pop
mov
mov
jbe
out
ret
dec
in
xchg
fucomip
push
fistpl
adc
out
mov
mov
jecxz
loopne
in
xchg
out
pop
inc
mov
pop
fidivrs
ss
or
test
add
out
iret
or
jmp
xlat
push
pop
addb
inc
xor
add
xchg
jmp
aam
mov
pusha
repnz
adc
and
nop
mov
xor
mov
sbb
add
insl
mov
nop
clc
ret
cltd
push
mov
inc
jle
cmp
mov
xchg
rcr
cltd
cmpsl
cmp
repz
or
ja
in
dec
cmpsb
cli
xchg
repnz
mov
inc
out
fwait
iret
insl
adc
sub
lahf
sbb
pusha
in
push
add
xor
cmc
les
dec
and
and
testb
pop
les
fwait
rolb
mov
insl
adc
push
sub
sub
lock
and
lds
repz
adc
aad
xor
ja
mov
push
jmp
out
and
cmp
add
push
ljmp
insl
in
cwtl
jmp
loopne
cmc
into
sahf
stos
dec
jecxz
push
out
btr
mov
frstor
push
add
cwtl
mov
js
dec
mov
cmp
sahf
fisubrs
adc
sub
lds
imul
popa
mov
ljmp
out
scas
mov
cmp
stos
ljmp
or
fwait
fs
jb
fs
mov
mov
imul
fbld
cmp
int
test
dec
out
xchg
cmp
xor
fcmovb
test
adc
lock
cmp
into
mov
in
push
popa
xchg
xchg
cmp
subl
jnp
cmpsb
dec
into
cmp
push
das
clc
push
mov
sbb
lret
cmpsb
mov
test
mov
gs
faddp
out
jle
push
decl
test
add
jne
enter
adc
mov
push
icebp
add
lret
les
fdivrl
dec
imul
push
push
fadds
cld
cmpsb
mov
adc
sbb
push
dec
xchg
and
inc
fisubrs
pop
sub
sub
imul
scas
push
pop
sub
stc
fiaddl
push
mov
stos
fisubs
sub
outsl
stc
mov
sbb
ljmp
mov
arpl
lock
xor
pushf
mov
xchg
pop
outsb
jnp
xor
and
jge
outsl
fcoml
leave
inc
jg
adc
in
outsb
lahf
aam
sub
dec
jae
ljmp
adc
pop
push
xor
mov
cmp
insb
cmpsb
test
xlat
xchg
mov
call
cmc
es
inc
pop
xchg
mov
sti
jo
inc
jae
jg
enter
and
lods
stos
fstl
arpl
insb
cli
cmp
in
and
mov
xchg
aad
push
jp
repnz
shrb
clc
xchg
in
jns
cmc
std
xorb
lret
bound
ficomps
dec
pop
and
pop
push
mov
mov
pop
adc
insb
rol
push
rclb
xchg
push
in
js
push
push
arpl
test
imul
pop
pop
test
inc
jle
pop
lret
mov
jno
stos
idivb
or
or
mov
outsb
arpl
add
pop
push
mov
pop
xor
movsb
dec
fsub
and
mov
test
int3
insl
mov
jle
mov
hlt
pop
rol
xchg
mov
sti
decb
pop
mov
je
dec
cld
imul
int
popf
push
jge
mov
xor
jbe
hlt
les
mov
scas
cmpsb
iret
and
pop
repz
mov
mov
fisubrl
jbe
pop
addr16
sti
push
inc
pop
jmp
mul
pusha
fnstsw
push
mov
gs
neg
lods
adc
inc
stc
dec
or
fiaddl
xor
mov
pop
imul
jge
shl
jecxz
jg
mov
xchg
xlat
add
lahf
inc
lcall
xchg
lret
and
out
jns
insb
lret
cmpsl
add
inc
push
hlt
adc
adc
ds
je
in
xor
nopl
out
hlt
cmp
jle
push
mov
popa
addr16
movsl
addr16
mov
ss
scas
mov
or
add
test
inc
into
pop
rcrb
daa
out
push
nop
mov
out
and
mov
xchg
sti
pusha
rorl
dec
sbb
rol
mov
rclb
adc
and
pop
daa
popa
push
mov
sub
mov
and
and
cmc
clc
cmp
mov
ds
inc
add
jge
adc
insl
fsubrs
les
and
mov
sub
mov
jmp
sarb
daa
daa
xchg
inc
lret
xchg
inc
add
or
push
sub
ss
cmpsb
or
sbb
sbb
add
imul
call
mov
mov
and
lcall
in
sti
sub
sbb
cs
mov
mov
mov
pop
popa
mov
arpl
mov
bound
jae
test
pushf
ja
pop
dec
push
loop
push
jno
pop
xchg
jb
mov
scas
adc
aaa
adc
je
out
inc
sub
mov
cmc
in
clc
jns
mov
dec
pop
stos
clc
jle
inc
lret
mov
cmpsb
pop
add
add
jecxz
sti
mov
adc
int3
in
mov
sub
jle
push
and
mov
cmp
loope
incb
mov
inc
ret
sbb
dec
and
fsubl
rcll
out
es
imul
sub
std
and
cld
pusha
nop
lahf
inc
pop
pop
mov
or
fld1
lcall
mov
adc
ret
jno
pop
iret
or
insb
xchg
add
rcrl
mov
das
loope
fcoms
adc
sti
je
jp
imul
rcl
jno
cmpl
ja
shr
sahf
push
mov
enter
cs
mov
into
xchg
aad
push
mov
xchg
aas
movsl
sbb
mov
mov
jl
std
xor
test
xor
mov
push
sub
push
adc
call
iret
cltd
adc
cli
ss
aad
daa
imul
loopne
xor
jae
gs
sub
and
mul
sbb
mov
ret
mov
enter
pop
rcrl
mov
mov
test
jecxz
lods
scas
aad
insl
lods
dec
xchg
lcall
addr16
into
push
popa
push
jns
out
mov
repnz
sbb
notb
sbb
mov
and
stos
scas
cmp
mov
push
inc
dec
in
add
xchg
cltd
divl
mov
mov
sti
sahf
jo
stos
mov
dec
adc
adc
loope
cltd
mov
sbb
test
mov
lods
cmp
mov
aaa
ljmp
inc
adc
mov
push
sahf
outsb
scas
push
loopne
xchg
fldenv
xor
dec
imul
sahf
adc
dec
mov
das
dec
fld
and
notl
xor
daa
or
jecxz
jge
dec
stos
pop
mov
shll
xchg
xor
jo
mov
jb
xor
mov
cbtw
ret
adc
push
addr16
mov
pop
iret
pop
pop
add
inc
inc
scas
mov
repz
or
mov
les
xor
aaa
mov
out
ret
lahf
xchg
pop
jbe
inc
cmpsl
lret
in
cltd
sbb
jno
ficompl
push
jbe
lods
cmc
xorb
inc
xchg
sub
dec
mov
mov
popa
loope
pop
in
mull
lahf
cs
adc
mov
xchg
bts
mov
stc
push
lds
dec
cmp
mov
dec
mov
mov
jp
push
test
negb
inc
lds
fwait
loope
iret
stos
pop
or
es
rolb
push
icebp
add
xchg
cli
mov
out
rclb
mov
sahf
cmp
pop
popf
addb
mov
imul
mov
cmp
out
fisttps
jle
inc
fwait
test
dec
fisubrl
daa
addr16
and
inc
hlt
pop
enter
fs
xchg
fisttpll
jno
mov
imul
xchg
sarl
push
roll
adc
jp
cmpb
stos
in
push
enter
xor
mov
ja
jae
xor
sub
movsl
inc
dec
jl
pop
into
rol
xchg
fisubs
pop
ss
or
imul
sub
jle
inc
mov
fucom
adc
xor
xchg
idiv
aad
mov
lcall
aas
mov
pop
jbe
xor
add
sbb
jge
jge
mov
adc
pop
adc
dec
push
inc
push
pop
fidivrs
rorb
pop
insl
dec
nop
pop
bound
and
cmc
insl
adc
xor
dec
xchg
mov
ss
adc
sbb
adc
adc
pop
loop
jge
pop
xor
push
aaa
lock
icebp
push
push
rorb
in
in
pop
pmaddwd
ficoms
cmp
rcll
bound
or
es
adc
jg
fmuls
aam
ret
lock
jmp
out
in
sub
clc
mov
fnstenv
aas
sub
push
and
addr16
into
mov
out
pop
loopne
popa
int
pop
xor
cld
and
jno
cmp
aam
pusha
mov
inc
xor
xor
cmovs
test
xorb
into
adc
dec
mov
cmp
ss
loopne
filds
add
xor
loopne
sub
jle
sbb
call
cld
pop
cmpsb
pop
push
cmc
cmp
add
push
or
adc
pop
imul
or
push
dec
out
icebp
popl
dec
dec
mov
mov
xor
cmc
and
pop
and
sub
orb
xor
mov
sbb
mov
xor
adc
stos
loop
pop
and
sub
pop
xor
das
cmp
aas
xor
mov
pushf
lret
and
inc
lock
inc
mov
jecxz
js
mov
cmp
dec
push
ret
movsb
add
jae
mov
lods
nop
mov
aad
rcll
movsl
jb
movsb
lahf
cwtl
xchg
lahf
gs
cmpb
rcll
stos
int
mov
xor
cmp
call
ffreep
mov
gs
loopne
jp
or
jno
and
js
pusha
cmc
xchg
imul
in
xor
je
fisubs
xor
loop
mov
pop
mov
sar
ret
loope,pn
nop
adc
sub
push
jl
dec
mov
sbb
pop
movsl
pop
xchg
enter
cmpsb
movsb
arpl
jbe
push
imul
mov
sarl
adc
xor
or
aaa
mov
shl
aas
ljmp
xchg
clc
add
adc
je
iret
mov
cmpsl
incl
xor
std
aaa
push
dec
cmpl
mov
mov
jae
xor
test
mov
sub
out
rclb
in
roll
mov
sti
mov
cmp
xor
inc
mov
xchg
xchg
and
setne
inc
out
xor
push
xchg
mov
mov
icebp
add
pushf
mov
add
jne
adc
jnp
ljmp
andl
sets
push
add
lcall
adc
sub
mov
cwtl
mov
push
out
inc
cmp
mov
push
xrelease
adc
neg
inc
jge
sub
movsb
adc
adc
loope
aas
ljmp
lods
es
dec
test
aad
jns
movsl
dec
aad
pop
rol
hlt
js
call
jno
mov
mov
aam
idivb
jnp
test
or
mov
cwtl
jge
mov
loopne
adc
xchg
lcall
add
push
outsl
ficompl
adc
or
icebp
fs
ret
call
jl
mov
inc
push
xlat
add
enter
and
test
inc
aaa
stos
movsb
iret
cltd
and
arpl
mov
mov
or
call
pop
push
pop
sbb
add
and
std
mov
sbb
push
xchg
cmp
xchg
or
dec
fwait
dec
sbbb
jne
add
fisttpll
push
imul
mov
dec
pusha
and
leave
fucom
arpl
cmpsl
pop
cmp
push
mov
xor
sub
fldln2
aas
nop
in
pop
pop
enter
xchg
rcr
rcrl
popf
enter
jl
add
xchg
pop
ret
fmul
mov
mov
mov
jno
mov
pop
test
mov
pop
xchg
push
call
sub
lea
shr
mov
test
dec
xchg
mov
in
in
mov
sbb
outsb
adc
push
cmp
and
movsb
mov
mov
lds
sub
xchg
test
rorb
repz
stos
adc
jbe
int3
push
dec
jg
push
sub
rorb
dec
dec
lret
sbb
pop
out
stos
lret
mov
cmp
push
sti
cmpsl
push
sti
stos
pop
adc
es
cs
xor
ret
movsl
xchg
pusha
rcll
addr16
cmpsl
addr16
dec
popf
push
rol
xchg
cmp
aas
gs
jmp
cmpsl
std
xor
mov
inc
outsl
popa
fmull
dec
pxor
mov
daa
cmp
and
xor
js
cmp
xor
inc
andl
add
clc
cltd
push
mov
insl
ja
ss
fmuls
enter
lret
arpl
xchg
adc
jle
mov
pop
cmpsl
loopne
push
fs
leave
jb
cli
lea
push
lret
pop
repnz
mov
dec
aad
inc
movsb
xchg
call
loopne
push
fcmovnb
add
dec
dec
out
mov
dec
or
pop
mov
cmpl
and
pop
and
sub
pop
xchg
xchg
negb
imul
out
mov
incb
les
sbb
pop
sbb
aas
mov
sbbl
pop
and
pop
mov
mov
ja
push
int3
push
loop
add
mov
pop
or
int
mov
sbb
clc
jmp
enter
imul
ds
xchg
scas
cmpsl
popf
mov
mov
test
xlat
mov
adc
clc
cli
xchg
fsts
repz
and
sti
xchg
jns
mov
dec
daa
mov
dec
mov
dec
xor
mov
gs
pop
iret
imul
out
sub
aas
dec
pop
add
stos
ss
push
or
ljmp
mov
sbb
xchg
fcomps
movq
fs
lock
std
inc
cmp
ja
je
shlb
sub
daa
fwait
adc
jmp
mov
cmp
pop
cwtl
sub
or
rorb
and
xchg
and
jl
and
outsl
data16
clc
adcl
xchg
pop
popf
dec
mov
imul
lock
adc
aaa
push
dec
cltd
xor
cmp
repz
add
xchg
xor
pushf
xchg
mov
mov
ud0
jns
push
pop
aam
jp
jmp
repz
int3
cld
loope
in
xor
push
dec
imul
or
adc
jo
mov
pop
ficoms
push
int3
jb
lods
sbb
dec
repz
and
ret
xor
or
aas
dec
ljmp
and
pop
dec
cmpl
cmpb
mov
ds
adc
loope
jne
into
xor
dec
dec
pop
data16
cmpsb
and
shrl
mov
mov
jbe
push
lret
fdivp
mov
aad
pop
pop
jb
nop
repz
cli
mov
ja
inc
cmp
push
ss
or
mov
inc
lock
mov
repnz
or
ret
and
add
testl
xchg
jae
mov
adc
sub
in
pop
faddp
ficoml
dec
add
jae
out
in
stc
jnp
shl
aad
jb
mov
shr
iret
sub
enter
jle
jo
mov
insb
mov
fs
inc
pop
in
fsubrs
data16
mov
lret
fiaddl
or
jg
or
das
and
pusha
mov
sbb
xor
inc
adc
loop
push
mov
mov
lcall
pushf
gs
sub
loop
shr
mov
imul
pop
xlat
imul
nop
or
xor
sbbl
xchg
outsl
pop
pop
stos
mov
movzbl
mov
inc
mov
mov
push
jecxz
mov
xchg
pusha
sub
aaa
push
ds
or
inc
movsl
dec
shll
xlat
js
imul
fldt
ret
mov
pop
xchg
icebp
scas
dec
test
movsl
gs
ficomps
pop
push
add
pop
movsl
or
mov
inc
jo
mov
je
repz
fsubs
push
xchg
das
push
out
mov
in
cli
or
lea
ss
jns
cmp
cmp
sarb
cmp
push
sub
outsl
or
mov
sbb
sub
sbb
in
pop
rcr
mov
cmc
push
and
test
jno
and
test
jb
fimull
ret
push
pop
shll
leave
xor
xchg
sub
fdivs
aam
sbb
xchg
dec
xor
fsubrl
test
push
inc
dec
lahf
adc
rol
jmp
cltd
lds
pop
push
ficoml
icebp
cmp
addr16
cmp
js
cltd
subb
jns
in
stos
add
xadd
into
into
dec
mov
movsb
add
or
add
es
push
jge
out
rorb
ds
outsl
jb
lock
mov
vpsrad
ret
in
js,pt
cld
gs
or
fistpll
push
xor
mov
xchg
addb
cmpsl
jae
popf
xlat
xlat
jg
mov
jmp
jb
xchg
int3
test
frstor
xor
cmc
fbstp
push
or
inc
gs
test
pop
aad
push
sbb
pop
mov
jbe
mov
scas
add
mov
cmpb
fs
or
scas
iret
inc
jle
popa
shr
jne
hlt
lods
outsb
mov
inc
into
mov
mov
sub
dec
mov
and
fcmovnb
sbb
pop
arpl
sti
sbb
add
push
dec
enter
cmp
and
pop
jno
jp
jns
xor
movsb
or
popa
or
dec
pop
leave
cvttps2pi
mov
adc
xor
shr
shrb
adc
call
dec
ret
loop
nop
jle
fdiv
lock
and
movsb
in
cmp
mov
jnp
test
pushl
les
jnp
ret
push
xchg
daa
outsb
mov
imul
test
bound
fwait
inc
xor
xchg
lds
push
mov
xchg
cld
jge
and
inc
imul
and
outsb
mov
pop
lahf
jp
scas
inc
sti
xchg
ljmp
pop
pop
mov
and
sub
out
adc
inc
pop
lea
or
xlat
cltd
sub
push
les
iret
sub
mov
jmp
pop
add
push
xchg
fcmovbe
add
cltd
mov
jecxz
call
adc
ljmp
or
int3
outsl
mov
push
test
enter
scas
in
popl
dec
xchg
jl
mov
inc
stc
adc
xor
lss
push
fwait
xor
andb
stc
test
test
mov
and
sub
push
mov
in
das
cmpsb
cmp
sub
push
adc
mov
push
push
pop
jl
sub
neg
pushf
sti
or
adc
or
or
add
xchg
xor
jbe
cwtl
imul
inc
loopne
stc
mov
mov
cmpsb
arpl
adc
adc
push
je
sbb
ljmp
mov
dec
shll
add
lods
xchg
repz
movsl
sbb
das
movl
push
adc
imul
lods
dec
repz
xor
push
stos
and
fistpll
in
pop
adc
ss
imul
push
movsb
mov
outsl
xor
cmpsl
mov
pop
jge
cmpsb
xor
cmc
jo
dec
xchg
pop
adc
ficoms
jp
pop
jmp
cli
cmc
dec
outsb
loope
aam
ficoms
add
inc
xor
jbe
out
cmp
fnstcw
lret
int
sub
roll
lds
xchg
mov
leave
std
xchg
mov
add
push
cld
mov
adc
or
outsb
adc
pop
std
popa
js
mov
push
pop
fisubrs
push
jl
cmp
dec
aam
push
sbb
cmc
call
fsubr
mov
jecxz
dec
push
mov
xor
push
xor
loopne
shlb
ds
jp
and
pusha
ss
stos
js
es
and
push
imul
xor
orb
mov
jl
push
test
lds
adc
xchg
scas
ss
add
ficomps
int
mov
inc
divl
sub
ficoml
push
mov
stos
or
fists
jno
daa
mov
cwtl
sbb
xchg
dec
aas
mov
push
decl
mov
in
mov
leave
dec
shlb
sarb
jl
test
inc
pushf
movsl
and
add
lds
test
ret
cli
sbb
cli
fsubr
das
xchg
test
insb
cmpsb
adc
mov
adc
test
cmp
jae
outsb
insb
mov
leave
dec
sub
iret
push
push
push
xchg
loop
jle
jecxz
cmp
lcall
jo
sbb
sbb
fnstenv
sti
pop
ret
cmpsl
jne
mov
mov
jns
stc
add
in
and
xchg
xor
lock
mov
push
cmp
push
mov
lock
mov
jge
adc
xchg
iret
pop
iret
jecxz
movsl
push
push
push
mov
and
adc
popa
xor
imul
push
bound
pop
lods
cmp
xchg
call
fs
cmp
or
sub
iret
inc
fimuls
mov
pusha
dec
xchg
je
push
mov
cld
test
inc
popa
aam
mov
pop
das
fcomps
mov
mov
loopne
sbb
dec
pop
add
xchg
mov
out
scas
lret
testl
sti
into
repnz
sarb
cmc
xor
rcl
testb
cmc
mov
outsb
lret
xlat
cmp
and
fwait
sub
cmpsl
lret
inc
mov
daa
xchg
aad
jae
pop
pop
sub
xor
dec
xorb
es
and
inc
cmp
add
nop
mov
cmp
jg
dec
rcrb
in
lods
into
cmp
mov
or
cmc
jl
mov
fxch
nop
int
mov
jns
outsb
cmp
xor
fdivrs
xor
fwait
stos
bound
mov
cld
cli
gs
enter
out
mov
adcb
xor
stos
mov
pop
sub
int
scas
pop
addr16
shll
push
xchg
fwait
jg
jge
jmp
lahf
xchg
pushf
movsl
push
lock
stc
idivl
or
int
jns
mov
sub
fnstcw
dec
lret
out
mov
sub
xchg
jnp
clc
test
fistpl
jmp
xchg
pop
dec
dec
jecxz
add
sti
stos
or
mov
inc
fimuls
into
rol
push
mov
fcoml
pop
int
push
cmpb
cs
les
call
leave
stc
in
out
into
dec
inc
fildll
xchg
sar
sbb
dec
fdivr
mov
stos
pop
sbbb
ret
test
imulb
lds
mov
jb
outsb
add
pop
js
movb
jge
or
inc
enter
insl
paddusw
cmp
lds
lcall
cmp
and
dec
int
xor
push
test
je
lods
les
neg
pop
push
addr16
fcoms
mov
xlat
in
dec
jge
in
fwait
adc
lods
dec
vpaddd
jl
cli
inc
ss
pop
push
imul
loopne
add
rolb
imul
pop
push
dec
es
xchg
xchg
cmp
jle
xlat
sbb
mov
mov
xlat
orb
movsb
mov
pop
mov
jae
jle
lret
stos
xor
mov
dec
pop
nop
cmp
dec
out
push
mov
cwtl
scas
jne
je
xchg
hlt
jne
sti
inc
pop
mov
lods
rorl
add
sahf
push
in
cmp
mov
sbb
push
repnz
pop
leave
sub
adc
insb
jae
dec
lock
dec
fmull
or
int
int
stos
pop
xor
or
or
and
ljmp
or
push
test
pop
stc
or
mov
icebp
pop
add
jne
xchg
mov
aam
roll
rclb
outsb
insb
in
leave
jne
jbe
xor
movsl
adc
bound
adc
aaa
mov
jg
daa
pop
xlat
jl
jbe
mov
mov
mov
call
stc
in
sbb
jo
jae
dec
sbb
inc
dec
inc
adc
cmc
aaa
jl
jo
or
mov
inc
iret
fcomp
mov
adc
add
lahf
xchg
adc
je
add
out
add
cmp
les
popf
push
and
pop
mov
rorl
adcb
mov
iret
daa
das
fstps
sub
adc
jle
subl
cli
fadd
sahf
pushf
sahf
adc
inc
outsb
push
jp
mov
sarl
add
adc
cmc
or
fimull
repnz
mov
addl
pop
pop
mov
cmpsb
ret
ljmp
pushf
xchg
dec
mov
mov
pop
rol
mov
js,pn
jp
add
fldenv
dec
dec
clc
aas
adc
fstl
pop
push
sbb
adc
mov
fwait
std
jg
data16
ret
pop
xor
mov
and
sub
push
aas
xchg
pop
insl
lret
test
andb
int3
jmp
xchg
inc
xor
addb
push
ret
mov
pushf
adc
ljmp
add
push
jo
cmp
mov
push
or
push
hlt
sbb
imul
rolb
es
jno
or
lock
cs
mov
adc
dec
mov
out
mov
stos
mov
add
jmp
jae
repz
test
sub
inc
adc
xlat
mov
mov
inc
in
stos
repz
mov
cld
leave
cmp
and
inc
mov
and
pop
paddq
out
cmp
scas
sbb
add
sbb
add
jl
das
aas
out
add
sub
xchg
lds
xor
je
jo
cmc
stos
adc
fimull
loop
arpl
lret
mov
nop
dec
lods
arpl
push
cmp
inc
mov
idivl
mov
mov
dec
enter
cmp
mov
fdivrl
fcoml
movsl
xchg
jecxz
mov
fiaddl
xchg
add
sub
add
loopne
into
dec
sahf
push
int
je
dec
sbb
cmpsb
adc
lea
sub
jl
into
movsb
shlb
mov
xchg
test
mov
ret
add
test
adcl
mov
pop
loopne
fwait
mov
xchg
test
les
jge
scas
je
cmp
sbb
adc
mov
xor
dec
mov
adc
aas
or
das
fpatan
inc
out
jmp
mov
idivb
sti
rorl
mov
jnp
pushf
push
or
pop
repnz
test
pop
add
xor
push
push
inc
out
fs
testl
je
push
or
xchg
test
mov
jnp
inc
lcall
sahf
movsl
into
mov
fmuls
add
xlat
dec
cmp
outsl
xor
shll
ja
and
movsb
sbb
in
xor
jl
ljmp
nop
and
and
fs
pop
sarb
or
mov
mov
int
mov
lahf
out
ja
lds
lcall
xchg
mov
lock
test
idiv
pop
jmp
in
sbb
loopne
xchg
roll
push
ljmp
test
xlat
in
push
out
leave
shlb
adc
xor
outsb
mov
enter
add
mov
flds
cmp
lret
fsts
loopne
outsl
mov
push
cmp
scas
mov
pop
mov
negb
sbb
pop
mov
xorl
add
jle
ds
aam
xor
sahf
test
push
xchg
popa
arpl
jbe
and
dec
loopne
mov
fidivl
xor
and
inc
sti
notb
je
mov
icebp
call
std
push
jne
stc
in
mov
jle
push
cmp
enter
stos
xorb
xor
sti
add
and
ljmp
push
dec
jb
ljmp
icebp
lea
xchg
adc
int
and
add
xchg
imul
mov
enter
cld
and
das
adc
or
cmp
nop
lcall
sub
dec
mov
inc
lret
pop
loop
push
mov
cltd
lret
fwait
decl
cs
xchg
aam
cltd
fwait
push
gs
mov
mov
inc
dec
mov
fcmovb
cmp
cmpsl
sahf
jmp
sbb
jb
jns
pop
lcall
mov
xor
jbe
push
shl
loopne
push
push
mov
pop
pop
inc
sbb
and
imul
sub
pop
push
js
sub
jne
int3
xor
ds
mov
push
cmp
in
adc
fld
mov
cmp
sbb
dec
cmpsb
outsb
shlb
pusha
out
cwtl
imul
add
add
xor
sbb
push
cs
stc
and
xor
mov
push
push
mov
loop
xchg
pushf
lds
outsb
insl
bound
dec
and
push
xor
in
gs
dec
fnstenv
add
enter
sbb
xchg
out
mov
inc
cltd
inc
fiaddl
and
cmc
sahf
fwait
data16
and
push
dec
shlb
lcall
or
cmp
dec
inc
rcll
mov
mov
repz
addr16
xor
aaa
jnp,pt
das
fildl
movsb
int3
add
pop
mov
movsl
inc
xor
jge
movsb
cltd
dec
bound
ret
dec
and
xchg
or
je
push
out
imul
adc
sbb
mov
ret
dec
fwait
les
mov
xchg
sub
push
push
repz
adcl
adc
movsb
mov
and
cmp
outsl
jb
xor
ss
push
js
xor
jnp
loope
pop
incl
iret
add
das
imul
xor
sbb
ljmp
loope
jge
loope
xor
bound
jl
sub
pop
sbb
pop
jne
xchg
and
fbld
inc
or
dec
sub
or
xor
mov
add
scas
cmp
aad
mov
mov
insl
icebp
lahf
jl
pop
les
mov
jmp
fistpll
leave
je
or
cmovnp
pop
gs
jnp
js
pop
push
inc
aam
jbe
pushf
jle
or
out
shlb
xor
inc
test
data16
and
loopne
cli
ficoms
inc
or
add
jns
shll
stos
dec
cmp
js
mov
test
adc
dec
ds
inc
mov
rolb
call
imul
scas
xchg
sub
mov
push
sub
orb
push
insb
push
iret
xor
dec
mov
cmp
xor
add
adcl
loopne
int
jae
push
jnp
ljmp
mov
and
mov
stos
arpl
jmp
push
loopne
jg
nop
lahf
push
stos
aam
xchg
mov
xor
je
pop
popl
loopne
push
and
cmp
pop
push
andps
and
cmp
enter
jg
push
or
test
orb
popf
loop
fwait
inc
test
pop
jnp
jo
cmpsl
jle
orb
aad
dec
or
icebp
push
jecxz
xchg
dec
std
ds
mov
xchg
arpl
cmova
test
pop
jecxz
lret
mov
imul
xchg
adc
enter
dec
lret
addl
mov
lods
outsb
lea
nop
xchg
sbb
aas
dec
lds
pop
dec
test
neg
shl
rorl
dec
cwtl
pop
add
sbb
or
arpl
push
mov
popa
xchg
subb
and
nop
pop
dec
xchg
lret
lea
popf
aas
pop
pop
cmp
hlt
sub
mov
gs
ja
popa
push
inc
out
pop
xor
iret
sbb
adc
push
mov
stos
dec
xchg
add
pop
cmp
ja
push
sbb
and
mov
xlat
in
dec
pop
push
stos
aad
push
mov
push
pop
mov
dec
scas
sahf
adc
push
dec
popa
and
inc
and
xlat
cmp
pop
jp
sub
add
inc
jbe
shll
inc
out
lea
mov
jmp
dec
ja
aas
or
jo
aaa
dec
jne
mov
int
sub
iret
sbb
mov
jecxz
movsl
mov
sbb
fwait
xchg
xor
call
ljmp
and
or
inc
jge
add
xchg
stos
cmpsb
into
jo
adc
mov
push
or
sbb
leave
lods
cmp
ja
jl
add
or
or
dec
inc
sahf
aas
push
xchg
mov
inc
insb
bound
jnp
pop
fs
mov
dec
push
cld
sysret
movsb
test
sbb
push
cs
dec
mov
xchg
js
sub
mov
aad
add
cmp
stc
jecxz
lcall
jp
xor
cli
mov
cltd
std
or
int3
shrl
lds
cwtl
cmc
xorb
out
xlat
mov
mov
insb
test
add
push
push
pop
cmp
jp
inc
imul
out
pop
fldl
call
insl
lret
mov
jno
push
sbb
xchg
outsl
mov
cmp
pusha
mov
adc
cmpsb
es
loope
cmp
dec
pop
and
adc
adc
out
aaa
jg
jae
pop
fcompl
sbb
in
xor
clc
add
add
inc
inc
adc
ret
inc
nop
sub
ror
data16
mov
fnstcw
test
sub
notb
xchg
lahf
xor
pop
dec
push
outsl
or
cld
mov
popa
outsb
stos
jp
sti
fdivrl
add
test
xchg
sub
jecxz
mov
inc
inc
push
insb
stc
xchg
lcall
fucomip
lea
ss
je
xor
mov
sti
mov
rcrl
out
imul
test
xchg
cmp
int3
rsqrtps
mov
popf
push
rol
out
dec
lret
pop
xchg
sub
hlt
add
dec
xchg
jg
js
push
pusha
cmp
push
push
xchg
lods
push
repz
mov
pop
add
push
scas
adc
shr
inc
rorl
and
push
sub
mov
add
jns
popf
mov
cld
arpl
call
add
jbe
cld
pop
lods
popf
sub
outsb
testb
cltd
dec
sbb
inc
in
js
mov
test
icebp
push
jno
mov
neg
pop
mov
xorl
cmp
popf
jae
nop
dec
jl
xchg
or
sub
into
lret
mov
add
jmp
cmc
inc
mov
repnz
xlat
adc
push
cmp
pop
addb
arpl
cmpb
out
add
leave
aam
lret
mov
fstpt
pop
repz
mov
insl
btc
sub
scas
xchg
dec
pop
sub
and
in
mov
pop
push
xchg
dec
adc
xchg
ja
mov
or
xor
ja
std
das
lea
mov
rcrl
cwtl
ljmp
xchg
push
pop
leave
mov
sub
sbb
dec
rorl
ljmp
loop
sbb
adc
cmpsb
fnstsw
xchg
adc
daa
pop
jp
sarb
push
aas
sbb
ja,pn
cmpsl
xacquire
je
sub
outsb
push
sti
sub
pop
ljmp
or
mov
push
add
into
testb
dec
push
adc
and
push
test
mov
popf
xchg
in
cmp
stc
flds
inc
inc
fldt
mov
in
inc
dec
lods
lds
scas
and
pushf
shlb
add
dec
popa
jg
pop
mov
hlt
adc
mov
add
in
jl
movsl
mov
xchg
das
sar
sub
fdivrs
fs
mov
je
into
cmp
xor
adcl
lds
sbbb
mov
pop
aaa
repz
mov
int
in
scas
inc
aam
test
inc
daa
ror
fsubl
mov
mov
sbb
cmpl
cmp
ljmp
inc
dec
inc
push
xchg
test
and
imul
arpl
push
jp
movsb
mov
fdivrl
iret
mov
adc
cmp
push
jp
sbb
and
inc
mov
nop
or
adc
add
push
inc
sar
mov
inc
jg
and
xlat
jge
lds
sub
int
lret
sub
aam
jno
pop
dec
jns
into
mov
cmp
inc
xchg
orl
insl
fs
test
test
cmp
jp
je
ror
inc
xchg
lret
and
in
das
scas
push
scas
jno
sub
in
adc
add
mov
fs
mov
xchg
loop
insb
push
sub
sbb
stc
fs
movsb
mov
push
in
add
xchg
lret
mov
addr16
loope
psubq
mov
adc
or
jecxz
sub
out
mov
enter
xchg
push
std
jmp
test
aas
dec
or
negl
data16
in
imul
fwait
ljmp
insb
sbb
insb
xchg
and
gs
fcoml
aas
jo
jg
ja
jge
insb
pushf
inc
or
int3
pop
mov
sbb
cli
ds
xor
pop
sub
out
int
or
mov
icebp
dec
dec
pop
ljmp
ret
pop
inc
dec
or
inc
mov
pop
pop
mov
sub
imul
lcall
or
xor
and
sbb
xchg
sub
push
cmc
scas
fisubs
loop
popf
mov
ljmp
lods
int3
mov
ret
imul
notb
mov
sbbb
pop
and
and
roll
mov
les
or
ja
imul
fs
cs
sub
push
inc
adc
inc
lods
std
shl
rcrl
sarb
and
jne
lea
lret
addr16
cli
popa
ret
insl
adc
in
adc
pop
push
inc
xchg
outsb
repnz
xchg
lret
icebp
and
cmp
aad
push
inc
stc
mov
iret
addl
subl
mov
movsb
mov
mov
cli
test
jae
cld
fdivrp
lret
cmp
stos
dec
cs
or
loope
jno
inc
mov
leave
pop
jge
jl
sbb
jg
dec
addr16
and
insl
iret
dec
jl
fs
sub
jmp
xor
fs
scas
les
fbld
mov
lret
mov
jecxz
pusha
jne
jb
ss
sbbl
cmp
fbstp
fistl
cwtl
ds
xchg
aas
xor
jge
ss
insb
out
imul
lds
or
cmpsl
fs
cmc
xchg
inc
lds
xchg
pop
loopne
sbb
sbb
aas
pop
push
fmul
push
push
divb
mov
xchg
rol
pop
jl
jno
jne
mov
mov
in
push
das
shr
insb
inc
adc
mov
pop
sub
inc
sahf
sahf
jmp
jae
xchg
dec
pop
or
shll
pop
mov
or
pop
clc
mov
movsl
movsl
mov
negb
cld
add
repz
iret
or
test
mov
pop
enter
cmp
inc
movsb
gs
dec
in
jmp
jne
insl
jno
inc
scas
cmp
mov
flds
pop
cmp
pop
leave
lods
sub
cmp
push
push
pop
bnd
push
leave
popf
pop
push
bnd
and
data16
xchg
test
lret
sbb
jmp
aam
testl
mov
or
or
mov
push
pop
sbb
js
cmpsb
adc
add
sbb
pop
rcr
test
jmp
fstps
dec
inc
clc
test
leave
mov
mov
sbb
inc
inc
lret
push
cwtl
adc
sub
sub
xchg
mov
lahf
imul
push
es
jg
outsb
push
push
jo
fsts
notb
fcmovu
jae
sbb
and
mov
fsts
nop
cmp
adc
lret
pop
leave
icebp
cltd
addr16
mov
test
sub
adc
sahf
pop
fistl
inc
popl
xor
add
movb
jle
int3
pop
outsb
sarl
shr
xchg
daa
inc
xchg
int
jp
out
dec
or
cmc
pushf
sarb
stos
pop
loope
enter
aaa
push
push
pop
pusha
adc
loop
dec
fimuls
mov
int
outsb
cmp
and
xchg
and
push
cmpsl
loop
xchg
or
daa
xor
push
pop
imul
xor
mov
lret
sbb
jae
jne
cmp
lret
sbb
mov
mov
mov
jmp
bound
es
inc
mov
test
rorl
sbb
scas
mov
push
mov
xlat
ret
addr16
mov
dec
cmp
int3
insb
dec
dec
sub
out
jp
mov
notl
push
add
cwtl
sub
nop
sbb
sbb
jae
scas
mov
insb
inc
or
pushf
cmp
xchg
cmp
xchg
mov
dec
add
lret
iret
dec
push
das
xor
into
and
das
jmp
mov
loope
cmp
dec
nop
xor
dec
test
rorl
imul
aaa
mov
jle
and
inc
aam
inc
js
into
mov
or
out
cld
in
pop
addl
mov
in
decb
mov
dec
pop
dec
arpl
fstpt
or
adc
pop
pop
std
fiaddl
scas
gs
mov
push
addl
gs
hlt
xchg
or
out
mov
pop
lea
push
icebp
mov
jl
je
in
inc
aaa
cmpsb
jns
imull
shrb
mov
jb
sarl
fstl
ror
dec
out
scas
testb
mov
jl
jae
repnz
stc
fcompl
cld
adc
mov
fs
out
insb
dec
mov
mov
adc
popf
jo
dec
aad
shll
in
je
sbb
mov
mov
test
sahf
sbb
lcall
pop
jle
adc
hlt
test
addl
jecxz
hlt
sbb
jg
dec
testb
inc
sub
cmp
call
sub
rorl
xor
adc
jle
lcall
cld
pop
bound
mov
cld
or
fildl
fst
xchg
sbb
lock
add
cmp
mov
pop
inc
mov
loop
out
out
leave
orl
insb
pop
std
int3
mov
mov
or
and
mov
popa
xor
cmpsl
scas
stc
pop
inc
jle
dec
das
pop
push
stc
pop
jge
movsl
das
pusha
or
jo
icebp
les
pop
pop
shll
repz
fisttps
jae
enter
push
fcoms
addb
add
push
xchg
cmpsl
out
out
dec
mov
xlat
inc
cltd
mov
aad
xchg
pop
addb
sbb
mov
test
icebp
mov
lock
sti
adc
xorb
fmull
fisttpl
rol
dec
mov
add
jecxz
ds
icebp
cmp
dec
mov
inc
or
ss
jbe
aas
movsb
add
outsb
mov
jmp
call
cmpb
repz
outsb
or
dec
cmp
rorb
in
jge
xchg
idivl
jecxz
iret
cltd
xor
fwait
nop
cmp
jae
xchg
inc
push
xchg
scas
cmpsb
cmp
xor
ja
lret
cmpsb
testl
out
adc
inc
flds
xchg
xchg
nop
scas
loop
lcall
ljmp
fsubl
ss
addb
int
cmp
ja
pop
jbe
push
in
arpl
out
out
mov
jae
sbb
mov
dec
pusha
clc
adc
cld
and
out
push
bound
mov
xor
imull
and
dec
mov
mov
mov
repz
jle
fwait
ret
push
icebp
mov
outsl
pop
or
mov
shlb
aas
push
loope
shl
push
test
je
adc
mov
rcrl
sbb
push
lret
loope
enter
mov
jo
mov
mov
test
mov
lret
lock
aas
roll
movsl
movsl
fcompp
push
push
aam
outsb
lahf
inc
enter
add
lahf
adc
dec
jns
outsl
jns
fistpl
imul
dec
sbb
jne
mov
or
and
movsl
push
sar
cmpsl
sub
mov
jns
popa
leave
or
insl
mov
or
lea
lret
xor
popl
into
iret
mov
inc
js
mov
add
push
push
pop
stos
adc
cmp
sti
xlat
int3
ja
mov
pop
add
clc
sub
xorl
jle
inc
icebp
movsb
inc
dec
push
fnstenv
cwtl
test
int
popf
sbb
mov
xchg
cmpsb
pop
push
and
rcl
sbb
sti
cmpsb
mov
fimuls
insb
sub
lret
push
int3
xor
icebp
mov
scas
sbb
shll
adc
gs
xchg
mov
fwait
jns
sahf
ret
xchg
lret
hlt
mov
sbb
cmpsb
test
dec
and
sarb
lock
aas
mov
push
mov
pusha
movsb
dec
negb
fidivl
pushf
sbb
inc
push
xchg
aaa
push
push
cmpsl
pop
mov
ljmp
mov
jmp
enter
sub
call
fldcw
jb
add
call
and
in
xlat
add
mov
or
in
test
repz
pop
fisttps
fwait
or
mov
mov
push
inc
negb
ljmp
jb
adc
cmpsb
mov
xorl
mov
mov
xor
sub
pop
adc
cltd
jne
mov
jo
inc
int3
jnp
and
nop
sarl
je
mov
jae
or
fstps
lcall
inc
in
add
into
inc
mov
jbe
shl
sti
cmp
pop
leave
mov
fsub
cmp
push
xchg
add
dec
mov
js
pop
cmp
sub
lods
mov
push
out
pop
loopne
and
inc
add
sti
test
loop
dec
nop
xor
cltd
mov
adc
and
ss
adc
addr16
fisubrs
roll
adc
xor
cmp
call
aaa
cwtl
imul
ljmp
adc
mov
cwtl
xor
cmc
push
xchg
shrl
push
mov
mov
add
mov
cli
cmpsb
xchg
test
imul
adc
movsb
lret
inc
stc
leave
xchg
xor
enter
pop
inc
sbb
testl
lea
adc
out
and
fwait
repnz
addr16
push
dec
pop
das
arpl
mov
imul
xor
adc
fdiv
pop
jae
mov
mov
inc
mov
jge
inc
cmp
mov
and
fs
or
dec
fimuls
push
ret
jb
popa
mov
lods
movsb
dec
add
cmp
call
stos
out
out
push
sub
cmpsl
xor
stc
xchg
dec
icebp
aas
fsubl
inc
dec
and
lock
push
inc
or
ja
je
dec
cwtl
iret
jb
xor
loopne
mov
add
fisubl
ficompl
nop
add
les
sub
push
cmp
inc
or
lcall
or
mov
stos
add
inc
ja
mov
push
cmp
xor
jnp
data16
pushf
lret
das
repnz
and
push
jno
fdivs
les
lods
mov
xor
mov
cmpb
inc
or
xchg
testb
adc
xor
cmp
lods
push
dec
lods
mov
nop
xor
mov
xchg
push
and
jl
inc
sbb
outsl
mov
loopne
adc
sub
push
das
sub
arpl
jne
ret
lods
fwait
sahf
mov
nop
sub
ret
ljmp
sub
es
sbb
mov
inc
jmp
mov
nop
clc
dec
pop
sbb
dec
cli
pop
add
sbb
les
ds
int3
cmp
in
adc
out
mov
add
cmp
cmp
std
inc
cmp
rcl
jecxz
loop
dec
test
lods
xchg
jg
mov
jl
lds
aad
dec
jge
jecxz
and
and
cwtl
test
adc
mov
push
out
xchg
mov
and
mov
xor
cld
rclb
adc
cmp
sub
dec
cmp
inc
mov
ds
jne
or
sub
lock
daa
or
fdivrl
ret
mov
les
fxsave
xor
jge
sbb
stos
out
lods
fiadds
and
out
mov
xor
mov
xchg
sbb
push
sbb
pushf
loope
and
fucom
or
pop
fs
out
ret
add
jle
hlt
adc
sti
scas
filds
icebp
movsl
sahf
adc
punpckhwd
jns
sub
ret
mov
mov
enter
stos
pop
dec
mov
adc
aam
gs
imul
sub
jl
add
cltd
sbb
add
pop
sahf
dec
fidivs
gs
push
push
sub
es
out
mov
stos
adc
jmp
enter
inc
in
jmp
or
add
fistps
mov
mov
into
cld
out
loope
xor
sahf
iret
leave
aas
xor
repz
daa
icebp
outsb
hlt
cmp
push
fisubl
enter
scas
js
cmp
jge
pushf
push
outsb
jle
sbb
xlat
stos
jb
xor
lock
lahf
or
jmp
into
les
outsb
jg
adc
sbb
push
push
xchg
push
sbbb
jg
xchg
lods
or
out
mov
sub
pop
popa
push
imul
xchg
cmc
adc
pusha
enter
xchg
mov
push
lret
into
aad
lret
add
mov
dec
dec
adc
imul
sahf
out
test
jp
pop
sahf
int3
lods
into
or
mov
pmaxsw
xchg
popf
adc
cmp
in
jbe
iret
cld
shl
and
out
test
das
inc
jno
rcll
inc
xor
sub
repz
cwtl
push
dec
jnp
in
or
jg
mov
or
pop
adc
icebp
movsl
mov
iret
add
mov
jecxz
mov
mov
movsb
arpl
insl
mov
sbbb
jns
aas
mov
mov
cli
cmp
and
cmp
push
mov
jle
xlat
jmp
bound
or
cmp
push
cmp
sub
clc
mov
dec
and
mov
lret
pop
in
cmp
adc
mov
stos
icebp
mov
adc
outsb
sti
pop
mov
inc
mov
rolb
or
mov
jge
jae
jbe
xchg
data16
push
aas
sub
push
jne
ss
imul
daa
out
jmp
pusha
xchg
sahf
pop
ljmp
mov
shlb
clc
and
push
xchg
push
inc
andl
iret
test
dec
das
icebp
repnz
lcall
lret
mov
sub
fs
int
arpl
ss
xchg
or
cmp
rcrb
arpl
hlt
gs
xor
xor
movsl
push
lahf
in
dec
shll
rolb
movsb
dec
push
inc
cld
push
es
lahf
scas
js
pusha
ljmp
mov
movsb
mov
inc
loop
test
cmpsl
testb
mov
test
dec
nop
mov
adc
cmp
jae
shll
push
lock
xchg
and
pop
fs
push
ds
call
pop
mov
dec
adc
stos
pop
cmpsl
xor
lods
and
fistpll
pop
push
dec
xchg
jns
aam
sbb
jbe
ss
and
xor
testl
sbb
push
and
sbb
mov
push
inc
clc
push
xchg
sbb
fistpl
pusha
or
loopne
push
shll
rorl
xor
rol
mov
mov
jnp
dec
in
outsb
mov
andl
or
mov
imul
pop
mov
xchg
jg
repz
adc
mov
adc
mov
aaa
std
mov
sub
popf
insb
pushf
ret
dec
jecxz
pop
jns
xor
imul
shl
cmp
ja
cmp
xchg
in
ret
sbb
pop
stos
stos
sbb
out
stos
push
jmp
lods
loop
data16
xchg
sbb
sbb
jns
cmp
dec
or
push
push
jb
cmp
fnstcw
inc
adc
lret
cmp
push
outsl
xchg
mov
xchg
jle
or
fcmovnu
test
in
mov
and
fsubrl
mov
jae
push
ds
out
sub
frstor
fldt
lcall
into
pop
adc
cmpsb
and
shll
hlt
jp
inc
cmc
or
pop
jns
loope
pop
cmp
movsb
lea
lret
jg
inc
mov
and
xlat
or
inc
inc
jg
or
pop
jnp
add
jp
mov
jg
inc
js
xchg
lret
inc
add
roll
ja
sub
and
cs
je
rcl
out
lods
clc
in
jp
mov
lcall
lcall
pop
fiaddl
sbb
jle
cmpsl
cmc
incl
jo
mov
jg
push
cltd
icebp
and
push
jnp
and
inc
mov
subl
shrl
fdivrs
adc
je
inc
inc
in
pop
loop
dec
push
jnp,pt
test
fwait
into
fildl
cs
jnp
rorb
stos
mov
jp
popf
mov
push
ds
aas
cmc
fmuls
or
or
inc
pop
lret
push
sbb
xor
sbb
lcall
push
dec
call
jns
setle
mov
mov
pop
mov
mov
push
and
dec
leave
jp,pt
lods
mov
mov
add
lret
in
ror
aas
cli
out
clc
int3
leave
pop
std
sub
pop
scas
push
jns
pop
test
popa
jp
roll
mov
push
inc
jae
xor
push
or
mov
xchg
inc
push
clc
out
push
data16
push
in
divb
jne
loope
testb
xchg
stc
jb
sbb
loopne
sti
test
adc
rclb
fisubrl
or
xchg
or
push
int3
push
dec
sub
adc
cltd
inc
int
cwtl
fdivr
mov
mov
test
ljmp
ljmp
cmp
adc
push
out
xchg
inc
enter
cmp
insl
cmp
jb
cmp
repnz
in
into
int3
push
fdivrp
cmpsb
std
rcrb
shl
mov
ds
scas
dec
leave
dec
stc
and
in
mov
and
andb
inc
sar
movsl
dec
push
ret
or
pushf
inc
icebp
push
cmp
xchg
sar
sub
jb
xchg
push
add
cmp
pop
add
fnstenv
enter
mov
insb
int3
pop
mov
movsl
mov
pop
and
push
push
leave
mov
into
sbb
insl
mov
dec
lods
inc
ljmp
popf
xlat
fsubrl
clc
outsb
cld
mov
sti
and
push
vmovapd
cmc
dec
les
or
scas
clc
frstor
cmc
jl
cmp
xchg
shr
pop
outsl
sbb
loope
into
sub
push
jbe
cmpsb
pop
push
mov
stc
dec
test
cmp
and
and
mov
dec
cs
mov
sub
sub
pop
lahf
jo
sub
push
ret
inc
pop
loop
adc
test
jge
mov
popf
inc
cmp
int
mov
stos
mov
inc
scas
dec
xchg
ss
and
fsubr
cwtl
pusha
sbb
jo
push
push
cmp
and
jo
adc
gs
or
int3
sbb
adc
ret
movsl
test
inc
adc
or
cmp
repnz
xchg
or
push
aad
inc
ret
dec
and
aaa
push
xchg
jge
mov
mov
and
adc
cmp
fldl
fdivl
sti
cmpsl
dec
and
call
lods
push
xchg
jle
test
mov
jl
dec
fs
mov
lcall
fidivrl
into
fwait
dec
push
push
add
cltd
mov
fstp
fwait
icebp
xchg
adc
mov
mov
lock
jns
jl
mov
or
daa
js
cmp
je
cmpsb
mov
mov
clc
pop
push
and
call
test
cmpsl
testb
lods
cli
leave
jo
xchg
pop
push
loop
dec
inc
adc
shrl
incb
push
cmp
andb
adc
and
adc
cmp
push
adc
push
adc
push
jo
cwtl
or
sarb
jno
pop
pop
mov
stos
jae
sub
jge
into
lea
mov
loop
fstp
cmp
scas
mov
sbb
push
xor
xchg
arpl
std
mov
add
jns
enter
cmpsb
xchg
es
fsubrl
adc
cmp
adc
shll
mov
jp
dec
rolb
inc
fadds
ficompl
xchg
mov
mov
fdivl
frstor
cmp
std
ja,pn
cmpsb
adc
testb
push
nop
jecxz
cwtl
dec
adc
mov
pop
dec
in
mov
cmp
mov
xchg
xor
popa
shrb
and
insb
arpl
xchg
or
mov
insb
cmp
pop
imul
or
sub
push
push
loopne
pop
xor
lods
pushf
call
xchg
add
test
loope
add
add
push
jb
stc
inc
orb
mov
inc
js
imul
roll
divb
push
data16
mov
jp
cmp
mov
addl
fstps
xor
pop
adc
dec
cmp
je
addb
movsb
in
mov
cwtl
popf
xlat
cli
movsl
imul
push
scas
pusha
adc
popf
inc
insl
aaa
mov
jbe
sbb
jmp
pusha
and
xchg
das
push
push
leave
xlat
xchg
cmp
fstpt
pop
inc
and
sub
fdivs
ret
jmp
push
xchg
jno
mov
iret
cmp
jne
icebp
sbb
scas
gs
push
nop
dec
cli
sarl
and
inc
repz
dec
push
adc
dec
mov
gs
mov
out
add
clc
mov
addr16
fisubrl
movsb
movsl
mov
outsl
jecxz
cmpsl
clc
or
jg
jno
gs
pand
or
insl
cmpsl
xor
lods
scas
pop
hlt
jo
rol
outsb
push
push
ljmp
mov
mov
roll
push
cwtl
xor
add
xchg
or
jle
subb
push
jns
mov
iret
scas
jae
pop
scas
aaa
jg
xchg
or
add
xor
push
mov
cmp
mov
movsb
js
pop
cmp
mov
into
dec
lock
jmp
jnp
out
inc
fwait
or
movsl
lret
ss
push
daa
xchg
test
lods
or
test
add
pop
stos
iret
dec
adc
add
cwtl
fistps
imul
repz
sbb
lods
clc
pop
mov
jnp
fsubs
roll
or
inc
in
mov
pop
sub
cmp
pusha
shll
cmpsl
stc
loop
test
xor
clc
in
dec
adc
jno
test
lods
mov
dec
lds
nop
lahf
cli
lods
jle
in
push
stos
xchg
and
push
mov
es
mov
div
mov
mov
jae
out
xor
fnstsw
sbb
adc
mov
mov
xchg
dec
outsl
cwtl
cmp
addr16
lods
test
push
add
add
int3
add
cli
addb
jo
pop
repz
lcall
cmp
call
sbb
aas
lcall
ret
mov
lcall
scas
jbe
sub
in
arpl
gs
scas
pop
in
scas
aas
xor
jne
pop
xor
je
mov
mov
cld
bound
fs
rcl
cmp
mov
outsb
push
int3
dec
cmp
rcl
inc
shll
mov
jmp
bound
mov
jl
loope,pt
sbb
lds
xchg
mov
push
xlat
cld
repz
popf
loop
sbb
dec
enter
adc
mov
mov
andl
mov
jne
adc
leave
popa
lods
shl
in
int3
js
stos
push
lret
pop
mov
xchg
test
dec
pop
sti
sbb
loope
aas
mov
push
push
mov
repnz
daa
lds
adc
mov
pop
out
and
dec
lret
mov
adc
push
icebp
jae
xchg
and
pop
cmc
cmc
dec
mov
icebp
sbb
fwait
xchg
mov
mov
cli
repnz
data16
test
stc
out
add
mov
fists
popf
call
cmpl
lcall
mov
hlt
and
inc
xchg
cli
push
jne
add
xchg
outsl
lret
fs
hlt
cmp
mov
call
push
ficoml
pusha
push
xchg
sub
pop
mov
sbb
push
xchg
mov
dec
xchg
fiaddl
out
xchg
push
sbb
adc
sar
xchg
sbb
lahf
loop
lea
mov
leave
adc
mov
xchg
rorl
jg
adc
and
xchg
stos
aaa
xor
mov
mov
sbb
je
cmc
mov
sti
or
ja
add
andb
jge
ret
test
sbb
pop
pushf
sbb
add
jns
mov
into
pop
jo
dec
je
stos
out
cmp
inc
leave
pop
pop
jbe
cmpsb
fisubrl
iret
xchg
push
ds
outsl
leave
pop
pop
push
divl
pop
sbb
inc
ror
in
test
test
cmp
mov
xchg
dec
lahf
out
js
int3
leave
bound
sbb
ret
add
cld
push
jo
ret
jp
dec
lahf
dec
in
jno
cmp
mov
inc
xor
cmpsb
jno
rcr
pop
inc
fnstenv
in
leave
iret
notl
aaa
rcr
adc
and
icebp
mov
into
mov
mov
cli
lcall
popa
enter
sbb
adc
jae
jnp
fidivl
jmp
mov
movsl
clc
mov
insb
adc
inc
cwtl
dec
out
push
lock
pop
sahf
add
xor
push
shrb
or
push
in
or
push
popf
lcall
pop
cld
xchg
lret
iret
push
jno
loope
or
add
cmp
pop
cwtl
repz
test
out
jge
sbb
out
inc
addr16
pop
mov
fisubrs
outsl
loope
adc
mov
ror
movsl
imul
sbb
adc
addr16
mov
fimull
call
ja
mov
stos
lahf
in
dec
idivb
iret
cmp
push
outsb
sbb
ja
ficompl
pop
ljmp
add
dec
xchg
movsb
dec
loope
addr16
push
sbb
ret
xor
jbe
enter
push
rcrb
stos
ljmp
inc
and
clc
mov
adc
mov
das
inc
in
sub
push
popf
or
pop
xor
outsb
xchg
gs
jae
xor
sti
add
adc
push
pop
jp
cmp
addb
push
add
cmpsl
dec
add
pop
dec
aas
mov
nop
cwtl
xor
int3
and
dec
xor
sti
mov
push
sbb
adc
xor
loop
cltd
jmp
lods
sub
mov
mov
push
lods
pop
push
stos
es
or
loope
outsb
or
ret
testb
or
pop
jl
mov
xlat
cmp
xchg
ficoms
sub
jno
and
ja
and
outsb
adc
adcl
xchg
hlt
sub
lcall
pop
xchg
dec
rclb
xchg
gs
out
jnp
sarb
jge
imul
gs
cmp
jle
or
je
addr16
cmp
xor
dec
ds
mov
mov
xor
sbb
leave
stos
leave
lods
mov
ret
jle
mov
or
mov
xor
cmp
push
aam
sbb
popa
test
push
pop
lds
aas
xchg
adc
out
div
inc
repz
cmp
mov
clc
pop
dec
loop
jle
pusha
xor
dec
mov
or
xorb
cli
jge
insl
adc
int
in
add
inc
andb
dec
push
xchg
outsb
sti
ficoml
lcall
out
cmp
mov
push
fcompl
sbbl
test
inc
cld
cwtl
jo
repz
imul
mov
mov
jecxz
xchg
popa
cmp
test
jne
sahf
sar
test
xor
pop
insl
ficoms
push
pusha
sub
push
sub
sub
es
mov
into
inc
lret
fisubrs
sbb
push
and
in
mov
in
push
int3
cmp
lret
cs
jp
cmpsl
popf
mov
rcrb
cmp
mov
cmp
inc
rolb
mov
in
ret
cs
nop
ljmp
lods
jno
and
js
mov
mov
std
pop
pop
mov
aam
cs
xchg
call
or
push
jmp
es
arpl
jl
out
mov
sub
and
aaa
les
daa
faddp
push
pop
ja
cmp
mov
aaa
xchg
mov
add
test
pop
push
fidivl
les
aaa
movsb
aas
sbb
pop
xchg
scas
mov
inc
loop
stos
mov
dec
inc
push
jbe
mov
cmpsb
xchg
in
or
pop
and
vpunpckhbw
adc
dec
and
cli
popf
push
leave
add
or
into
mov
xor
pop
cli
jne
jno
jae
js
adc
sti
mov
addr16
shlb
out
or
pushf
jg
sahf
and
out
dec
fs
push
add
sub
sub
push
xlat
imul
mov
jns
sub
cmpsl
push
mov
dec
mul
aam
out
test
sbb
push
lods
lods
cmp
push
add
pop
jb
jnp
xlat
loopne
in
mov
pop
or
dec
mov
jle
sub
xchg
int3
inc
decl
out
andl
mov
jns
xchg
adc
mov
jecxz
sti
fadds
mov
insb
loope
sbb
fcoms
mov
repnz
pop
push
shrb
inc
fists
mov
imul
sti
and
or
adc
jg
xor
ds
jle
test
or
cmp
clc
lcall
xor
cmp
pop
sbb
dec
add
inc
fidivrl
es
cmp
pop
jnp,pt
cmp
scas
jb
in
daa
cvtps2pd
xchg
mov
inc
shll
lock
and
mov
dec
cld
or
dec
dec
push
test
cwtl
jmp
pushf
int
cs
push
out
mov
vorps
inc
js
call
dec
mov
push
js
xchg
sbb
dec
bound
loop
xor
cbtw
clc
stc
and
and
out
mov
ja
stos
jp
mov
cmp
insb
shrb
inc
jmp
inc
mov
fs
lret
mov
pop
mov
xchg
mov
xchg
dec
movsb
out
xor
or
inc
pop
add
jmp
insl
stos
sbb
xchg
test
xchg
insl
sbb
sub
mov
sar
xor
test
lret
pushl
les
out
test
xor
cmp
lret
jge
xchg
in
scas
add
aam
movsl
out
out
cmpsl
bound
and
push
push
add
push
test
inc
sub
add
push
lcall
mov
sub
stc
pop
sbb
lds
shr
push
push
ficompl
jmp
or
int
sbb
addl
cmp
ljmp
fidivrs
push
add
loopne
rcrb
pop
jb
mull
fidivl
ss
xchg
lods
adc
ds
pop
je
mov
add
insl
lea
cmp
daa
cbtw
push
das
mov
in
pop
icebp
shll
inc
xor
imul
jge
jecxz
call
sbb
jmp
add
scas
mov
cmp
xor
cmc
cmp
call
or
fildll
dec
sub
ds
and
jb
mov
push
out
jle
outsb
xor
adc
lea
cltd
mov
jns
into
xchg
dec
bound
imul
dec
dec
pop
ljmp
cmpsb
das
inc
jb
out
test
mov
jbe
push
sbb
mov
pop
sbb
inc
stos
enter
aaa
jb
ss
push
cmp
add
sub
and
je
adc
mov
outsl
enter
push
adc
mov
sub
insb
cmp
subl
out
sbb
mov
hlt
pop
rcrb
cmp
xor
jae
mov
cld
add
mov
dec
push
dec
push
adc
rcrl
mov
nop
mov
adc
inc
mov
pusha
dec
jb
dec
jle
adc
mov
inc
in
jne
out
pop
or
in
mov
movsl
mov
movsb
int
lret
xor
lods
cmc
mov
jle
pop
xor
dec
push
sub
dec
aam
inc
repnz
pop
enter
cmp
sub
decb
adc
pusha
sub
pop
nop
push
pop
or
xchg
push
adc
sbb
or
adc
mov
sarl
movsl
fcompp
filds
jns
in
repz
push
push
xor
das
cmpl
push
add
insb
cmp
out
dec
mov
add
dec
das
jg
push
test
pop
je
ja
js
jnp
cmp
inc
push
sub
and
pop
xchg
js
and
movsb
testb
fidivs
out
mov
fadd
lds
push
cmp
negb
pop
into
add
mov
in
sbb
xchg
sub
and
xor
and
fldt
push
dec
cmpsl
push
js
xor
cmc
mov
shlb
adc
cs
roll
and
inc
sbb
xor
inc
orl
mov
out
pop
insb
icebp
shlb
jl
sarb
jg
add
mov
inc
xorb
jmp
or
pop
loop
jbe
inc
fsub
add
nop
in
add
pop
adcb
je
sbb
jns
or
push
popa
ret
out
lods
mov
inc
cs
cli
mov
mov
push
loop
aam
neg
or
test
jmp
mov
mov
sti
test
pop
inc
lahf
xchg
add
push
shlb
or
lock
mov
cmpsl
mov
je
jo
ss
rcr
push
pop
popa
cmp
dec
loopne
repz
fcom
cld
jle
insl
sub
fiadds
mov
inc
test
mov
in
jecxz
sub
lret
popaw
out
push
rcl
cmc
mov
pusha
fstps
mov
cld
xchg
sbb
ss
mov
insb
jnp
cmp
and
push
jno
roll
add
loop
inc
je
les
out
icebp
aaa
dec
ret
or
aam
call
inc
xchg
sub
push
jns
xor
shll
push
gs
cwtl
adcl
adc
test
dec
negb
mov
inc
imul
das
inc
xchg
pop
and
add
int
cld
or
out
daa
test
mov
sar
mov
sub
daa
add
mov
rorb
in
add
mov
push
movsl
out
dec
inc
inc
pop
cli
and
jnp
cmp
mov
in
mov
pop
fisttps
daa
lods
push
mov
out
loopne
loopne
mov
cmp
adc
sub
mov
inc
sarl
pushf
add
notb
les
jecxz
mov
jle
fcmovnu
xor
pop
ja
mov
aaa
pop
dec
rclb
in
mov
pop
push
out
jbe
jl
fwait
outsl
push
sub
jmp
in
sahf
sub
orl
push
out
ja
aaa
imul
jmp
inc
hlt
cmp
xchg
into
lods
imul
rorl
and
fcomps
ss
dec
jmp
push
out
xchg
xchg
or
jo
adc
sub
ret
mov
jl
xor
add
lea
test
ret
imul
loope
sbb
or
in
xor
sti
daa
dec
pop
call
mov
cwtl
add
xor
mov
and
push
test
pusha
push
jae
xchg
inc
pop
mov
mov
jnp
add
gs
stc
cmpl
jge
loopne
jle
les
sbb
cltd
push
dec
cmp
pop
sub
cmp
jb
cmp
ret
js
mov
and
push
out
xchg
xlat
jmp
or
jno
notl
insl
cltd
hlt
movsl
rcll
push
icebp
iret
enter
lahf
cmp
aad
adc
popa
lahf
pusha
fidivl
outsb
xchg
jecxz
cmp
or
adc
add
xchg
dec
jecxz
adc
cmp
loope
push
cwtl
add
xor
mov
cmpsb
icebp
jg
push
iret
mov
push
sti
lret
ja
push
xor
in
add
popl
insb
cmp
test
ficoml
imul
movsl
jne
lods
sti
call
add
pusha
lcall
fwait
sbb
subb
add
imul
pusha
adc
or
loope
in
mov
and
je
scas
jp
cmp
xor
repnz
lods
ds
push
jp
lods
testl
test
mov
dec
mov
fldenv
adc
stos
movsl
adc
movhps
imul
repz
add
ss
mov
or
out
xchg
jecxz
ljmp
and
into
push
dec
sbb
movsl
inc
mov
push
ficomps
mov
insb
ljmp
jle
sub
dec
cmp
pusha
js
dec
int3
add
and
imul
cmpsl
inc
enter
loopne
cmpsl
lret
roll
jb
fildl
dec
push
test
sbb
mov
stos
cmp
ds
scas
scas
cli
outsl
jmp
shrl
and
adc
loopne
inc
add
sbb
xchg
push
mov
out
jns
stos
mov
inc
daa
sbb
pop
and
sahf
pushf
popf
repz
jno
dec
or
das
iret
scas
and
cmp
dec
enter
js
cmp
fs
push
jl
and
cld
xlat
push
push
xchg
push
mov
jns
xor
xchg
mov
jmp
jbe
rcrb
pop
out
stos
in
sahf
hlt
pushf
popa
out
fiaddl
push
inc
lea
fisubs
sub
push
movsl
jge
xor
aam
arpl
orl
dec
xor
shlb
dec
test
xchg
movsl
into
lret
testb
fs
push
mov
mov
sar
dec
scas
and
mov
jp
dec
aad
movsl
sub
inc
xchg
xor
push
out
sbb
sbb
outsl
mov
das
or
sub
js
mov
cmp
cmp
mov
mov
pop
xlat
daa
adc
sbb
lds
loop
push
adc
or
outsb
or
adc
cmpsb
cmp
gs
xor
ss
addr16
xor
dec
or
jbe
xchg
shrl
sbb
outsb
icebp
push
aad
push
rolb
pop
int3
fstpl
dec
mov
scas
push
outsb
jecxz
in
cwtl
pop
fmuls
popf
lock
adc
icebp
sbb
mov
popa
hlt
mov
mov
xlat
add
repnz
xor
shrl
xor
aaa
mov
mov
sbb
xlat
push
sbb
lret
loopne
dec
iret
pop
add
aam
icebp
jno
push
cmpsb
pop
inc
sub
or
cld
clc
mov
pop
movsb
add
dec
inc
mov
out
push
push
jp
inc
sahf
jne
push
push
rol
cmp
cmpsl
pusha
sub
test
xor
shrb
xchg
add
stos
and
push
mul
push
xchg
and
rcrb
popf
popf
xor
or
aas
inc
mov
lock
jle
dec
dec
hlt
sbb
mov
imul
or
sbb
cmpsl
push
push
iret
les
hlt
aam
in
cs
lret
test
test
test
sub
test
sbb
xor
push
sbb
mul
push
inc
lock
add
mov
cmp
push
mov
imul
ret
dec
sbb
bound
rclb
mov
les
and
push
cltd
fldcw
out
sbb
cmp
jne
test
js
mull
lret
pop
mov
leave
sbb
xchg
imul
aas
sub
push
pop
or
adc
sbb
mov
cmpsb
icebp
add
push
mov
lret
insb
xor
jne
popa
or
dec
bound
dec
idiv
mov
inc
jge
gs
inc
xchg
leave
xor
dec
mov
sbb
lcall
jp
lret
adc
push
cwtl
mov
iret
faddp
js
and
mov
push
or
test
in
jmp
sbb
int
cwtl
xchg
push
rcr
dec
xchg
sub
mov
wbinvd
jle
inc
push
add
push
call
dec
insl
or
mov
movsl
xor
inc
lahf
lock
cmp
testb
hlt
pop
pop
push
in
mov
inc
pop
incl
mov
pop
inc
aas
mov
mov
jle
xchg
fbld
jno
int
add
sub
dec
mov
cmp
pop
xor
lahf
out
fs
in
orl
sbb
call
insb
scas
xchg
ja
movsl
mov
jnp
sbb
fisttps
nop
fisttpl
xchg
das
xchg
sahf
mov
dec
aad
pop
cs
xchg
fcmove
pop
cmp
jne
jb
pop
push
inc
jno
fistpl
pop
addr16
mov
loope
out
aad
mov
cli
scas
orb
xchg
scas
adcb
into
test
fmulp
lret
cmpsl
dec
jmp
adc
pop
mov
lahf
pop
aad
push
iret
in
imul
or
inc
jmp
sarb
sbb
in
lret
aaa
lock
cli
add
cmpsb
test
jl
cli
in
loope
ja
bound
fmul
push
pushf
dec
std
je
pop
xchg
mov
cwtl
adc
push
adc
or
cmp
add
jo
idivl
call
jnp
sub
mov
cmp
push
jne
jg
idivb
pop
std
repnz
mov
insl
cmpsl
mov
and
cmc
stc
or
sub
movb
push
fwait
mov
inc
sbb
jge
sub
mov
mov
adc
mov
out
sub
scas
or
repz
inc
out
enter
add
inc
aas
xchg
shll
xchg
jno
dec
out
pop
lretw
outsb
pop
adc
leave
fnsave
outsb
mov
loope
pop
jle
and
movsl
ret
jb
sub
lret
les
out
jp
mov
mov
push
push
mov
xor
into
lock
lahf
fwait
push
jl
add
dec
adc
add
xlat
out
inc
inc
aad
jl
cmpw
loop
sbb
popa
ficoml
dec
mov
and
mov
mov
add
jno
ret
add
data16
xchg
lret
clc
leave
adc
adc
shlb
xchg
es
mov
lahf
hlt
pop
pusha
repnz
lds
aam
clc
mov
mov
xchg
inc
xor
loop
repz
idivl
xchg
xchg
dec
mov
lcall
sbb
jp
test
xchg
adc
dec
mov
test
popf
mov
sub
xchg
ja
mov
cmp
jo
mov
cmp
inc
clc
pushf
fmul
xchg
add
ret
adc
mov
icebp
js
lock
stos
xchg
push
gs
aad
aam
sbb
jle
jb
or
xor
or
fwait
adc
push
mov
and
push
addr16
jmp
fcompl
sub
pop
xor
dec
push
jg
mov
lret
js
repz
pop
push
xchg
flds
nop
mov
inc
lcall
cmpsb
adc
in
or
pop
push
cmpl
out
test
sub
lods
adc
dec
cmp
in
push
popf
jae
fisubrs
shl
int3
rep
aam
mov
cmp
outsl
pop
out
dec
jns
and
mov
sahf
idivl
shl
jne
jae
cs
sahf
mov
add
lahf
sarl
and
cld
add
test
or
pop
mov
lods
loope
xchg
loop
sub
adc
sahf
sbbb
xor
addps
mov
addl
mov
je
cltd
push
ror
pushf
push
xor
lods
fnstcw
adc
je
cmp
scas
into
or
add
or
out
sub
stos
leave
add
ret
lods
lret
or
add
jle
cmpsb
fldt
fcoms
add
outsl
cltd
sub
sub
jge
nop
adc
movsl
vpunpcklqdq
rclb
in
mov
test
ja
sub
out
fsubl
rcl
notl
jne
pop
stc
lods
int3
inc
mov
mov
add
call
cmp
fs
push
sti
add
out
inc
sbb
aad
jb
call
test
insb
add
les
jmp
inc
push
add
sub
cltd
inc
repz
ret
push
aam
out
inc
fs
loope
sub
push
mov
mov
mov
mov
cmp
jge
imul
test
sub
lock
frstor
lock
add
je
pusha
jp
roll
mov
jl
push
repnz
jns
and
inc
hlt
sub
shrl
jno
ja
mov
xchg
sub
test
push
les
xor
push
movsb
cltd
rcll
or
jp
fidivl
shlb
inc
les
mov
pop
push
imul
xor
sub
adc
pop
push
sbb
sub
xchg
or
filds
clc
or
xchg
jp
mov
rcll
sbb
pop
xchg
fists
mov
jmp
push
push
stos
jnp
xchg
push
push
int3
cmp
lret
dec
mov
cltd
push
add
xchg
xor
lret
push
int3
xchg
inc
les
mov
fistl
mov
jle
out
ret
xchg
les
cmp
rcrb
sub
clc
pop
repz
pop
xchg
mov
xor
jbe
les
or
into
cmp
push
mov
test
sbb
xor
ss
daa
out
test
std
jno
xor
dec
jp
inc
xor
mov
aad
pop
mov
pop
xlat
mov
sub
and
push
add
xchg
xorl
mov
lahf
inc
rorl
mov
sahf
jns
or
cmpb
outsl
int3
sahf
mov
mov
lods
sbb
enter
daa
pop
mov
fiadds
push
or
shll
dec
jb
xor
xchg
in
mov
cs
mov
lea
inc
pop
add
dec
or
jae
mov
filds
popa
shll
xchg
pop
push
add
sti
mov
mov
mov
jbe
xchg
jne
mov
jecxz
mov
jl
inc
jo
scas
mov
push
imul
and
leave
sub
adc
stos
xor
loope
push
loopne
ror
pop
xchg
fistpl
pop
pop
add
jno
ror
jno
lods
shrl
mov
std
add
mov
das
sti
sbb
sbb
mov
andl
andl
cmp
xchg
and
aad
mov
cmc
xchg
push
push
add
jmp
xchg
dec
pop
mov
pop
dec
adc
lods
clc
roll
scas
mov
in
push
scas
clc
mov
sbb
fldenv
stos
sub
test
push
stc
push
popa
addl
xor
jp
mov
adc
scas
std
jl
fidivrs
out
adc
add
push
jge
dec
sbb
out
pop
mov
push
push
sbb
pop
addr16
mov
gs
jb
je
mov
aam
fcomp
rcr
test
push
sahf
mov
jl
add
bswap
lock
lret
sbb
mov
cmpsl
add
cmc
into
jno
repnz
dec
add
mov
jo
adc
push
jl
add
push
sub
jge
push
adc
mov
fs
fmulp
sub
rol
fwait
gs
fwait
out
js
adc
jp
xchg
int
mov
push
mov
xchg
cmp
outsb
mov
shrl
mov
nop
or
imul
dec
and
xchg
mov
ja
imul
in
dec
cmp
lcall
insl
push
mov
push
or
popa
mov
je
mov
dec
dec
insb
xchg
sahf
cmpsl
insl
call
dec
rolb
lea
jle
jne
pop
cmp
loope
dec
pop
lds
mov
jg
int
movsl
pushf
dec
cwtl
lods
mov
ficoml
xchg
mov
repnz
push
xor
xchg
stos
dec
out
inc
pushf
and
cmpsl
outsb
repz
cmpsb
iret
test
push
in
ja
xor
mov
bound
cmp
pop
mov
fidivs
cmc
jo
push
and
add
fwait
leave
xor
sub
ret
mov
clc
add
shr
outsb
aas
clc
xchg
je
popf
insb
aas
movl
push
pop
cmc
loope
cs
outsb
cmp
mov
mov
arpl
push
or
add
pop
fdivl
movsb
cs
mov
and
into
adc
mov
pop
mov
mov
push
cmpsl
sub
push
inc
pop
mov
adcb
xor
dec
xor
hlt
imul
out
dec
pop
adc
mov
xor
dec
into
aam
pop
cwtl
leave
inc
pop
loopne
subb
mov
jecxz
and
inc
mov
stos
pop
cwtl
insb
mov
sub
sub
jecxz
ds
dec
push
jmp
lcall
pusha
fidivrl
out
push
inc
xchg
jns
int
imul
pop
test
jno
pop
rcrl
das
xchg
adc
add
les
inc
scas
mov
rol
sub
adc
icebp
or
shll
sub
or
pop
jns
dec
push
cmp
addl
push
push
xor
popa
lods
shrb
push
cld
sub
mov
xor
sti
pop
loop
jle
jae
add
scas
jnp
push
gs
aad
add
sbb
call
fs
jg
mov
lret
xor
jp
or
jge
jge
stos
cltd
jo
daa
xchg
push
gs
push
scas
xchg
pop
enter
leave
dec
inc
add
and
xchg
push
ja
loopne
mov
push
mov
xchg
mov
dec
jmp
pop
push
mov
out
rcr
pop
or
test
divl
mov
jecxz
push
test
mov
mov
and
inc
gs
stos
fbstp
imul
push
repz
jo
cmp
sbb
xor
xchg
insb
sbbl
test
icebp
pop
incl
mov
jo
lds
cwtl
insl
ret
lods
stos
sbb
jne
cwtl
fiadds
ret
mov
pop
mov
pop
inc
subl
push
add
loopne
icebp
push
push
icebp
fwait
sbb
mov
outsl
dec
jmp
adc
push
cmpsb
dec
push
pop
sub
ret
aad
out
or
push
cmp
fs
sub
gs
cmp
pop
imul
and
sbbl
lcall
rcrl
jbe
pushf
xchg
jmp
or
adc
clc
in
sbb
dec
mov
pop
xchg
inc
push
call
arpl
addl
fucom
aam
sahf
push
jno
xchg
imul
pop
enter
push
xor
mov
sarb
stos
sbb
inc
test
push
int3
add
jne
sbb
call
dec
xor
adcl
lcall
dec
jo
fs
cltd
stos
shll
xchg
es
pop
in
dec
repnz
pop
pop
lock
lahf
push
adc
out
int
cmpsl
popa
mov
ss
insb
cmp
int
movsb
pushf
sub
shrb
inc
push
jle
shrl
mov
ja
jecxz
cmc
scas
pop
ja
cmp
outsb
cmp
pop
loop
sub
and
fiaddl
clc
mov
mov
cmpsw
jl
aas
xlat
adc
lock
adc
push
pushf
out
insb
cmpsl
sub
imul
lock
push
jecxz
scas
push
roll
or
push
xchg
pop
mov
push
and
pop
cmp
fnop
popf
addr16
mov
push
cmp
xchg
mov
add
cmp
sahf
or
adc
xchg
dec
stos
mov
or
movsl
pop
cmp
fwait
mov
cmp
cs
lret
int
or
inc
mov
adc
fidivl
loopne
out
or
cli
pop
pop
dec
cli
cld
dec
cltd
in
adcl
addb
jnp
xor
fs
movsb
movb
jnp
into
adc
mov
mov
pop
dec
or
and
or
mov
push
and
xorl
inc
jg
dec
test
out
push
adcb
push
jge
fstps
cmp
repnz
popf
fadd
pop
rorb
je
imul
ja
pop
clc
mov
pop
push
push
cmp
fldenv
pop
inc
add
in
mov
fists
cmp
mov
loopne
rorl
xor
sub
push
cwtl
lea
and
xchg
into
cltd
nop
jl
stos
ljmp
fcoms
int3
popf
ss
cmp
movsl
enter
or
inc
js
movsl
mov
mov
mov
push
iret
imul
cmpsb
inc
and
mov
jne
out
cld
js
inc
cltd
in
iret
xorb
clc
or
push
movsl
out
dec
mov
adc
add
test
lods
gs
daa
std
sbb
cltd
cmp
and
xchg
adc
ljmp
mov
stos
scas
ret
sti
les
in
dec
loopne
or
rorl
stos
sbb
adc
cmp
andl
add
repnz
mov
or
js
and
or
jle
in
mov
leave
imul
push
cmpsb
xor
pop
or
sub
aas
jo
and
cwtl
repz
nop
xchg
jp
cs
push
mov
cmc
outsl
push
mov
ja
push
lea
test
pop
lea
jb
push
data16
adc
testl
sub
mov
imul
sbb
push
mov
or
push
adc
cs
mov
jb
bound
pop
xchg
push
mov
testl
movsb
push
jl
adc
and
xor
fcmove
pop
cmp
sbb
mov
clc
xchg
mov
pop
iret
sbbb
ss
adc
mov
pop
lods
xchg
fildl
mov
cmp
scas
mov
lret
add
jp
pushf
fiadds
xchg
movsb
ljmp
dec
or
jo
iret
pop
mov
repz
inc
fldcw
movsl
inc
xchg
add
iret
nop
mov
xchg
fadds
xchg
into
hlt
mov
inc
cmp
lret
or
pop
je
ret
sub
dec
imul
int
and
mov
jb
es
outsb
std
pushf
rclb
add
js
dec
lods
ss
cmp
xor
cmp
sbb
fstpt
in
pop
icebp
aam
adc
sub
and
sub
dec
in
adc
push
mov
jae
and
out
pop
movsl
push
xchg
jae
testl
and
dec
data16
imulb
loopne
dec
jp
cli
roll
dec
mov
repz
push
daa
pop
aas
add
add
out
int3
faddl
xlat
mov
leave
jl
rorl
mov
insb
ret
push
movsb
fisubl
icebp
xchg
data16
xchg
ljmp
aas
push
add
lcall
dec
pop
in
lods
push
dec
lcall
lret
xor
dec
shl
jne
loope
cmpsb
ss
sbb
popf
xchg
push
xor
outsb
mov
pop
call
out
test
sub
push
jp
pusha
jae
mov
in
xchg
aas
bound
jbe
adc
sbb
punpckhwd
int3
icebp
xlat
test
cmp
imul
leave
pop
mov
aam
jno
mov
out
xchg
mov
dec
add
stos
in
xor
sbb
scas
push
pop
sar
mov
cmp
adc
pop
adc
inc
loop
jmp
mov
pop
inc
jnp
js
lea
xor
jle
add
ficomps
test
aas
dec
jp
pop
sub
stc
call
fadds
jbe
loope
push
push
cmp
sbb
repz
loop
sar
inc
lock
pop
cmp
sbb
cmp
test
notl
xlat
mov
sub
adc
adc
loope
daa
insl
fwait
jl
rcr
int3
push
je
adc
mov
imul
insl
xor
cmpsl
aam
inc
in
and
rcl
pop
and
into
inc
xchg
mov
fcoms
repz
lahf
into
out
mov
lret
das
xchg
imul
fs
and
or
mov
inc
enter
push
push
cmpsb
or
mov
loop
xchg
mov
push
out
lret
mov
add
imul
dec
pop
sbb
lret
add
and
dec
dec
stos
xchg
jle
xchg
int
adc
mov
fidivrs
bound
jl
lret
rcll
popa
test
push
imull
outsb
mov
and
gs
mov
cmc
arpl
mov
and
stc
imul
out
lea
outsl
movsl
push
jmp
lcall
rcrl
sub
clc
push
push
cmp
mov
xor
arpl
int
cs
stc
enter
add
outsl
popa
mov
mov
cwtl
mov
outsl
jge
mov
xchg
mov
push
in
xchg
cmp
mov
push
fwait
lods
dec
sti
pop
daa
popa
push
xchg
push
in
inc
ss
lock
sub
loopne
pop
mov
mov
adc
jl
sbb
out
imul
mov
lock
xchg
fistps
cmp
fstl
int3
out
sbb
fwait
xchg
cmpsb
loop
xchg
jbe
mov
mov
lret
push
cmp
mov
inc
or
out
cmpsl
clc
das
push
pushf
lret
xchg
xchg
int3
inc
in
adc
into
sti
popf
pop
pop
inc
mov
cltd
xchg
fisubl
mov
scas
cmp
mov
psllq
out
xchg
inc
aam
movsb
insb
aas
lcall
xchg
int
loopne
sti
jl
ds
idiv
mov
cmp
dec
test
test
cwtl
dec
orb
sahf
fisttps
shll
leave
es
sbb
push
mov
or
jne
push
cwtl
lahf
ss
pop
js
mov
inc
dec
xchg
clc
arpl
call
inc
rcll
repz
movsb
popf
mov
mov
int3
cmp
adcl
mov
leave
insl
adc
sahf
mov
std
cltd
sub
call
rorl
out
mov
dec
cmp
lea
xchg
lret
test
push
mov
add
dec
lods
sbb
loope
xchg
adc
sub
dec
fisubs
repz
mulb
fsts
popa
cld
iret
es
mov
popa
push
loop
xlat
stc
push
cmp
jns
push
sbb
outsl
sbb
sub
ret
loope
mov
mov
pop
leave
int
ficompl
mov
aam
inc
arpl
aaa
push
jae
inc
add
sarb
aam
cmp
xor
aam
popa
ss
push
scas
clc
mov
out
push
lret
idiv
adc
jae
xlat
jp
xor
in
push
and
cmpl
jbe
mov
inc
roll
xchg
clc
xchg
stos
dec
inc
mov
ja
fdivs
fldcw
stos
and
dec
movsb
int
adc
pusha
mov
push
jmp
jb
and
or
or
or
test
sahf
push
xchg
xor
xor
sbb
mov
mov
xchg
mov
fisttpl
adc
mov
xchg
out
jg
int3
inc
inc
mov
cmp
cmp
mov
icebp
int3
sub
mov
out
insl
and
test
scas
mov
mov
xchg
sub
in
xor
into
outsb
mov
jbe
icebp
or
push
sub
fs
cmp
push
insl
xlat
xchg
dec
dec
mov
mov
movsb
pusha
repnz
cs
mov
dec
inc
stos
dec
aad
ret
xchg
test
lret
into
enter
nop
pushf
cmp
andb
shr
push
pop
inc
pusha
mov
jge
mov
aaa
repnz
fldenv
in
or
mov
xlat
and
data16
and
imul
arpl
aam
repnz
pop
jecxz
mov
repz
pop
jns
xchg
rcrl
pushf
xchg
fwait
jl
adc
test
int
js
push
test
in
stc
mov
enter
jecxz
dec
xlat
aas
xor
mov
sub
outsb
push
aaa
insl
imull
movsl
sahf
add
or
inc
hlt
add
sahf
ja
test
movsl
js
stos
cmp
in
imulb
rol
sub
das
or
lods
fwait
pop
and
mov
lods
repnz
mov
pop
lahf
push
notl
data16
mov
fldenv
jp
push
mov
mov
dec
in
mov
sar
out
cmp
jle
or
popf
lock
loopne
aam
ret
xor
rcrl
xor
inc
dec
push
and
js
js
cmp
inc
mov
add
push
clc
hlt
lcall
jg
js
or
push
adc
int
inc
cmp
jae
cmpsb
pop
jnp
dec
and
or
dec
mov
mov
out
int
js
adc
push
rcr
dec
pusha
lods
cld
adc
sti
or
sbb
cld
test
inc
lock
les
add
mov
xor
mov
int
je
dec
xchg
loope
adc
jns
add
pushf
aad
sbb
sti
ss
inc
and
dec
cs
in
cmc
shlb
fistps
gs
dec
push
repnz
sub
subl
test
repz
xchg
xchg
inc
pop
lret
movl
inc
fldcw
add
outsl
xor
scas
addb
cmp
das
pop
loop
cmc
jne
test
and
in
scas
aaa
into
sub
fwait
shrl
jge
pop
popf
hlt
pop
sbb
inc
mov
movsl
pop
mov
dec
ret
pop
pop
fistl
jbe
lea
sbb
inc
sbb
cmp
insl
int3
rolb
lret
sub
test
mov
mov
mov
popa
jmp
push
jns
fcoml
cmpsl
dec
inc
push
aas
xor
cwtl
pop
clc
and
scas
lds
ds
mov
cmp
mov
xor
subb
add
das
mov
lods
popa
addr16
sub
or
es
adc
imul
dec
sub
xchg
mov
faddl
popf
xor
mov
es
inc
sub
mov
xchg
imul
arpl
sbb
roll
and
mov
fs
ficomps
jp
lods
test
lods
or
roll
icebp
in
sbb
in
jl
add
imul
and
loop
cmp
gs
add
add
cmp
and
dec
pusha
cwtl
jae
jecxz
lods
inc
mov
scas
mov
mov
and
insb
ret
adc
icebp
add
std
inc
jbe
cmp
aam
mov
jo
sbb
mov
mov
movsb
sbb
aas
cmp
movlps
pop
mov
adc
sbb
push
leave
in
inc
rcrl
dec
mov
dec
xor
pop
cmp
pop
mov
push
outsb
aas
push
mov
sbb
adc
es
jl
ret
mov
aad
push
push
dec
or
and
ss
movsb
sti
push
imul
sti
test
ret
aad
mov
dec
sbb
jmp
jmp
push
push
sbb
cmp
mov
add
jge
inc
dec
cmp
js
into
mov
inc
xchg
arpl
mov
iretw
or
es
mov
fldl
jle
mov
int
and
inc
cmovg
lods
mov
adc
jecxz
pop
rep
pop
bound
inc
aaa
ljmp
push
es
es
pusha
push
in
lds
mov
hlt
bound
mov
pop
testb
dec
incb
jbe
and
lock
call
dec
rcrl
lahf
loopne
add
in
sbb
pop
push
inc
and
pusha
insb
out
jnp
jns
into
lods
mov
jb
orl
xchg
mov
mov
xor
sub
js
jns
or
lcall
xor
pop
push
scas
mov
adc
add
pop
pushf
ds
movsl
pushw
pop
stos
cmp
fs
mov
jnp
int
mov
dec
xchg
clc
cmpsb
sub
ficoml
cmp
jnp
and
dec
push
ret
mov
cmp
leave
lods
adc
xor
push
and
cwtl
pop
gs
inc
adc
lds
xchg
fnstenv
loopne
imul
leave
rcrb
and
mov
ds
lods
or
dec
je
xchg
push
pushf
xchg
and
data16
test
jg
lock
ds
push
out
inc
push
push
test
ja
mov
pop
jae
pop
or
pop
add
mov
mov
test
xor
push
xor
pop
mov
push
dec
mov
repnz
or
in
loop
jo
enter
divl
dec
out
mov
or
fldenv
cmpsb
push
pop
pusha
xchg
nop
lds
dec
xchg
mov
adc
adc
out
dec
jle
dec
mov
mov
lods
nop
inc
popa
aas
jo
hlt
jmp
inc
mov
sub
cld
inc
and
xchg
sahf
rol
fisubrl
hlt
pop
jae
ret
mov
mov
jnp
stos
out
sbb
clc
sbb
lods
pop
sub
jns
inc
mov
add
fsubrl
mov
aaa
data16
mov
cmp
push
pop
inc
repz
pop
fildll
out
ljmp
lods
or
cld
mov
jae
pop
mov
push
sub
cmp
jle
mov
sbb
inc
mov
and
cs
push
mov
mov
xchg
ja
pop
test
lret
mov
js
addl
fwait
aad
mov
pop
shll
or
adc
cmp
es
cmp
into
pop
inc
adc
inc
or
seta
pop
mov
lods
movsb
or
es
dec
insl
in
xlat
mov
pop
xchg
xchg
and
pop
cmc
sbb
push
rorb
sub
data16
lods
xchg
nop
fstl
dec
hlt
inc
pop
xchg
fmuls
stos
jp
movsl
stos
popa
sub
cmpsb
push
fstl
cltd
adc
or
pop
mov
cld
push
fcmovbe
push
xchg
bound
add
ss
mov
jl
inc
push
push
sbb
clc
gs
cmp
adc
pop
inc
xchg
xchg
ret
int3
sbb
insb
mov
jbe
jp
jns
movsl
add
lds
xchg
iret
mov
outsl
ja
adc
leave
adc
aad
scas
jge
pushf
ficoml
arpl
mov
loope
jl
lcall
mov
loope
sbb
data16
idiv
push
jbe
iret
and
pop
add
cmpsb
mov
in
xchg
test
stos
mov
ret
aad
mov
push
fsubs
jp
lods
lret
sub
ss
mov
push
or
push
iret
pop
push
mov
mov
pop
and
es
test
leave
pop
pop
inc
movsl
pop
rorb
mov
push
push
mov
jle
or
daa
movsl
adc
das
loopne
push
addl
insl
and
sub
cmp
xor
shr
sub
xchg
andb
ret
jae
jne
je
das
mov
test
pop
mov
gs
dec
add
jl
dec
cli
adc
shlb
push
adc
setno
mov
daa
into
dec
or
mov
clc
and
pusha
push
mov
data16
popa
mov
cmp
stos
in
int3
ret
imul
jne
rcrl
mov
push
sbb
add
jo
fildll
leave
push
and
push
out
outsb
cld
cmc
mov
bound
xchg
jns
cwtl
xor
xor
and
xchg
movsl
out
insb
test
test
inc
sub
inc
mov
punpckldq
dec
cmp
icebp
sub
loop
jl
push
enter
data16
or
cwtl
dec
imul
pop
adc
or
out
arpl
xchg
mov
dec
cltd
adc
and
pop
and
sbb
fnstsw
stos
push
inc
jns
xor
lretw
lret
add
cmp
cs
int
sbb
mov
rcll
inc
sbb
sub
mov
in
adc
inc
and
jecxz
stos
imull
cmc
pop
and
lret
stos
jl
test
sbb
jo
jb
leave
sbb
or
loopne
bound
push
inc
mulb
mov
sub
rclb
add
and
add
xchg
vsqrtsd
xor
cmp
lds
popf
jge
icebp
mov
es
loope
movsb
lods
sbb
dec
xor
fimull
sbb
jne
mov
sarl
inc
cld
out
adc
lahf
add
jns
cmp
cmpsl
loopne
inc
imul
sbb
sbb
or
rcrb
movsb
jnp
das
xchg
test
sbb
xlat
cmp
leave
js
pop
iret
xchg
cmpsb
fwait
mul
xchg
add
sbb
das
adc
movsl
jno
inc
mov
ds
inc
popf
push
lea
stos
loop
int
insb
test
imul
jle
inc
sahf
mov
movsb
cmp
iret
sub
scas
pop
sbb
dec
mov
sub
out
dec
adc
inc
adcb
push
out
cmp
mov
xorb
sub
ficomps
pop
pop
inc
cmp
inc
ficompl
push
lret
clc
push
or
outsb
add
add
sbb
push
insl
push
das
jmp
mov
inc
inc
out
js
test
vmovdqu
aaa
out
sarb
or
arpl
sahf
mov
jmp
push
sub
xor
xchg
and
and
cmp
cmpsl
mov
lcall
add
sub
xorl
mov
repnz
sbb
lea
cmc
cli
idivl
cmp
pop
test
bound
stos
pusha
push
pusha
mov
lea
sub
jns
aaa
or
std
insb
insb
aam
call
jno
scas
mov
xchg
rcll
mov
mov
inc
pop
aas
cmpsl
adc
inc
jp
lret
sbb
out
mov
or
stos
mov
addl
sbb
xchg
push
inc
into
sbbl
aaa
sbbb
addl
inc
int
pop
mov
mov
and
mov
xchg
and
shrl
sbbb
in
fisttps
jle
xchg
mov
popf
cmpb
in
cmpsb
inc
push
arpl
jle
lock
mov
in
loope
mov
ss
cmpb
addr16
push
mov
mov
and
xor
xor
repnz
mov
sub
push
or
repz
mov
add
push
mov
or
pop
push
pop
push
sbb
xlat
mov
outsb
jp
inc
jl
xorb
push
bound
rclb
or
repnz
mov
xchg
mov
and
loope
cmpsb
aad
pop
cmp
xor
popf
jl
jle
mulb
xchg
aas
inc
movsb
inc
cwtl
lock
mov
and
inc
es
popa
cmp
mov
mov
leave
pop
clc
shll
mov
aam
or
xchg
push
pop
loopne
xor
shrb
adc
nop
ret
pop
pop
test
std
xor
mov
mov
mov
adc
test
out
es
aas
cmp
jns
push
shlb
xchg
aas
in
test
mov
or
in
inc
dec
mov
aam
jbe
cmp
int3
mov
or
and
and
fisubl
je
sarb
das
dec
jae
int3
imul
mov
jmp
hlt
outsb
stos
push
sbb
jle
mov
xor
or
cmpsb
ret
test
aaa
fldl
inc
into
sbb
scas
dec
scas
mov
add
cmp
repnz
and
add
push
xchg
popa
push
mov
sbb
sahf
nop
mov
cltd
shl
or
inc
sbb
jge
outsl
sub
push
mov
das
xor
faddl
and
call
adc
mov
and
movsl
mov
or
cmpl
shll
loopne
enter
mov
adc
outsl
mov
clc
sbb
lods
or
cmp
pop
mov
daa
mov
adc
ret
sbb
sbbl
jo
push
lods
addr16
pop
dec
xor
jl
cmp
pusha
sbb
mov
in
mov
xor
repz
mov
dec
jl
ret
and
ret
sbb
adc
cmp
into
int3
stos
cmp
test
jns
adc
mov
push
loopne
dec
test
add
aam
subl
xor
movsl
data16
pop
mov
mov
mov
cwtl
and
fiadds
loopne
xchg
and
hlt
add
fwait
in
and
xor
jbe
or
mov
lods
sub
jns
xchg
repnz
add
repz
mov
inc
aas
push
sbb
mov
xchg
xchg
ds
out
or
xor
fbstp
dec
pop
loopne
test
aad
inc
add
sbb
add
popf
les
mov
adc
jne
in
mov
mov
ljmp
inc
int
xchg
aaa
xchg
add
bound
iret
xor
push
cmc
or
dec
sbb
pop
mov
bswap
rorl
inc
inc
xorb
shlb
lret
dec
int3
movsb
insb
jnp
aas
clc
fs
sbb
popf
shrb
cli
sti
adc
dec
mov
jno
inc
or
gs
xchg
mov
cmpsb
dec
lcall
cs
insl
jp
shrl
push
call
cmp
inc
out
mov
xlat
push
mov
adc
aas
and
push
or
orb
adc
fldt
loopne
gs
or
push
pop
pushf
push
in
or
mov
add
push
push
jno
xor
sub
loope,pn
dec
orb
push
xchg
cmpsb
cmc
testl
cmpsb
clc
adc
push
je
clc
nop
fnstcw
xchg
pop
mov
xor
dec
lret
ds
decb
daa
mov
out
sti
push
sbb
push
leave
sbb
inc
fxch
popf
fcmovnb
xchg
pop
push
out
ror
cmc
dec
xchg
mov
sbb
mov
mov
pop
andb
test
fiadds
fnstenv
and
call
mov
in
pop
imul
mov
scas
dec
mov
mov
int
push
push
xchg
xor
xlat
cwtl
outsl
pop
outsb
sub
fimuls
add
daa
fldenv
inc
mov
sti
adc
or
stos
mov
push
clc
fsubrl
sub
xchg
aad
push
ljmp
imul
mov
sbb
fldt
add
jl
aad
or
dec
pop
push
inc
dec
sbb
mov
call
fxch
daa
shll
or
inc
lods
test
test
push
shl
cmp
mov
xchg
fcoms
mov
mov
dec
adc
aad
or
hlt
nop
mov
adc
mov
jae
or
inc
mov
fimull
int3
push
pop
sbb
insb
aaa
call
mov
cmpb
adcl
das
flds
out
mov
cmp
into
lock
adc
push
enter
arpl
push
jmp
loope
mov
pop
je
cmc
mov
mov
fcmovbe
scas
dec
jmp
inc
mov
insb
in
sub
xchg
es
push
pop
jns
dec
xor
ljmp
cmp
xchg
call
sbb
inc
xchg
sub
mov
push
adc
inc
inc
xchg
loopne
jl
in
dec
sub
fistps
dec
or
aaa
ss
mov
push
jne
jne
fdivl
or
xlat
cmp
inc
daa
stos
flds
fwait
push
mov
add
add
push
mov
adc
adc
mov
mov
mov
icebp
sbb
jb
xor
lods
lret
jle
xor
into
push
aad
fabs
jb
insl
cmp
test
movsb
add
or
xchg
pop
xlat
xor
jno
dec
mov
inc
xor
xchg
in
mov
mov
cmp
ja
imul
repz
push
dec
outsl
test
imul
sub
or
inc
dec
fcmovne
sbb
inc
daa
pop
pop
ja
and
arpl
xchg
or
imulb
push
and
cmp
movsl
jae
dec
sub
cmc
adc
js
addb
sbb
mov
addb
and
rcr
cltd
test
sub
insl
lcall
and
jg
lock
cmp
adc
cmp
nop
inc
sbb
cmpsb
mov
dec
push
mov
fwait
test
out
es
mov
lret
insb
imul
dec
push
lcall
test
scas
addl
adc
sahf
cmpsl
mov
loope
and
dec
mov
xchg
jae
pop
test
arpl
movsbl
mov
sbb
xchg
pop
add
popf
jecxz
inc
pop
stos
out
add
add
ret
pop
or
add
loop
fstps
or
xor
sub
fsubp
ret
or
pop
mov
add
adc
mov
bound
cmp
fmuls
xor
repz
inc
cmc
sub
add
xor
loop
into
mov
lahf
xor
pop
gs
push
icebp
adc
xchg
scas
lods
icebp
pop
sbb
inc
insl
xchg
cmpsl
jae
and
insb
fdiv
pop
mov
aam
lret
insb
pop
mov
mov
pop
mov
mov
sbb
ret
subb
mov
xlat
imul
outsl
aad
jno
mov
imul
inc
jns
test
inc
jno
cmpsb
lods
je
idivl
inc
push
test
mov
addr16
pushf
faddl
and
push
or
mov
into
hlt
mov
jmp
not
aas
cwtl
shl
stos
clc
cld
iret
lret
push
aad
repz
imul
push
mov
popf
mov
mov
xchg
popf
ret
vmovaps
xor
sub
add
lcall
pusha
movsb
add
xchg
ret
jle
push
adc
out
stc
dec
call
aaa
ss
das
pop
mov
mov
inc
fs
pusha
cmp
sahf
mov
xchg
in
xor
jp
adcl
pop
repz
int
packsswb
pop
out
or
imul
arpl
lods
das
ret
imul
daa
push
aaa
loopne
in
and
cmp
mov
popf
xchg
or
pop
daa
dec
lret
mov
in
lock
data16
sub
add
addr16
mov
es
push
cmp
or
add
cmpsb
inc
add
xchg
ret
and
xorps
lock
lahf
outsl
xchg
pop
scas
mov
cmp
xchg
push
pop
fbstp
lcall
test
push
cmp
inc
cmp
xor
mov
outsb
inc
cli
mov
inc
fidivrs
or
xchg
push
out
xor
mov
pop
mov
out
adc
mov
xor
movsb
adc
pushf
inc
ror
repnz
dec
fldenv
ds
lea
sbb
cmpsb
data16
test
in
mov
popf
aad
xchg
xor
xchg
push
add
sbb
inc
pop
cmpsl
or
adcb
popf
push
mov
sub
push
xor
mov
pop
lods
test
sub
in
jnp
inc
lcall
jg
xorb
fwait
iret
in
je
or
and
sub
clc
mov
pop
rorb
je
sarl
incb
xchg
popa
mov
add
pop
dec
push
adc
adcl
out
scas
dec
fidivl
shll
lret
xor
add
xlat
dec
xor
cmp
or
sbb
xlat
sbbl
add
add
sbb
lcall
movsl
jp
imul
xchg
dec
test
adc
and
push
out
in
aas
shrl
jo
mov
mov
dec
inc
mov
cmp
sahf
mov
popa
adc
popa
popa
adc
cmp
lods
jae
jle
and
mov
inc
scas
sub
jo
dec
jo
pop
pushf
xor
or
aam
sub
fwait
and
fistps
xchg
cli
mov
add
jb
push
in
xor
jb
mov
push
stc
pop
icebp
aas
imul
sbb
shll
fidivrs
shll
mov
or
or
mov
inc
iret
sub
jge
ljmp
andl
cmpsb
sub
mov
add
ja
daa
iret
lahf
or
cli
in
js
mov
int3
notl
pop
and
xchg
lods
arpl
push
xor
lcall
cmp
jl
lds
sarl
lock
jl
sarl
aam
add
mov
mov
mov
adc
es
lret
in
mov
pusha
cli
xchg
inc
and
add
mov
add
add
add
push
je
mov
sbb
outsb
pop
in
dec
pop
and
add
xchg
jo
scas
jg
cli
imull
adc
xchg
rcr
fcompl
test
es
dec
mov
xor
mov
inc
fdivrs
lret
sub
push
lret
push
mov
lahf
lea
dec
testl
xor
enter
adc
scas
sahf
cmp
dec
popa
rcll
icebp
dec
jp
xor
fmuls
inc
in
out
jle
push
push
movsl
pushl
stos
movsl
sarl
sahf
in
mov
daa
or
cmp
xchg
stos
ret
dec
sbb
pop
movsb
sahf
sahf
push
mov
mov
repnz
dec
lds
enter
loope
mov
mov
xchg
sbb
or
push
mov
sbb
mov
nop
loopne
insb
xor
mov
sbb
jl
sub
jne
outsl
jns
sub
push
movsl
lahf
pop
xchg
test
aaa
lcall
inc
roll
call
dec
lret
call
mov
sahf
loopne
stc
push
in
inc
pop
adc
insb
int3
rol
mov
xchg
cmp
enter
push
jmp
inc
ds
push
out
imul
pushf
test
test
push
fisttpl
and
xor
xchg
cmp
xor
cmp
xor
aas
inc
dec
loop
push
fs
shrb
push
xor
enter
lret
loopne
mov
jp
call
addl
lods
cmp
icebp
xchg
dec
xor
in
xchg
repz
notl
sete
sbb
arpl
sub
movsl
cmc
clc
bsr
loope
mov
push
shll
add
inc
lds
out
les
mov
inc
jg
mov
sbb
mov
sbb
shll
cmp
scas
xchg
jb
xchg
sbb
sbb
xorb
mov
jns
jne
or
xchg
and
outsb
jmp
mov
xor
dec
push
cmpsb
pop
movsl
nop
xchg
je
cmpsb
inc
xchg
fidivrl
loope
faddl
fscale
jle
sti
nop
lods
mov
cwtl
push
mov
jecxz
subl
sub
movsb
hlt
xor
add
fbld
ja
test
ss
jecxz
insb
xor
fisubrs
ss
push
shrl
fucomi
push
pop
mov
mov
fldl
cld
pop
in
rclb
pop
movsl
cltd
mov
adc
dec
gs
call
mov
push
in
aam
cmpsb
jns
mov
mov
ljmp
push
mov
lret
dec
aam
in
xchg
in
push
out
ss
adc
jecxz
ss
mov
dec
roll
stos
adc
addr16
dec
xchg
ds
scas
and
lock
lcall
insl
test
jns
jnp
repz
push
pop
sbb
push
or
pushf
push
push
fucomip
and
clc
jg
stc
cli
pop
lahf
pushf
mov
int3
cli
icebp
sbb
xor
push
adc
ja
jnp
inc
insl
adc
out
sbb
xor
inc
or
add
adc
orl
loopne
or
outsl
xchg
mov
stc
test
sarl
cmpsl
jbe
aas
popa
xor
mov
mov
or
jecxz
inc
out
xor
cmp
out
add
repnz
jne
insb
jge
mov
adc
cli
push
fdivl
stc
insb
mov
adc
push
iret
jbe
xchg
mov
data16
fwait
mov
repnz
xchg
xchg
stos
rorl
cmp
ret
xor
cmp
or
lds
sbbb
xor
std
lea
cmpsl
and
pop
jmp
jmp
inc
mov
mov
loop
push
jno
cltd
cli
jl
sbb
adc
stos
sbb
jl
lcall
popf
imul
cli
push
or
cmpsb
pusha
daa
ljmp
inc
jb
dec
push
adc
daa
outsl
sti
ljmp
leave
mov
leave
xor
mov
shlb
out
and
jae
add
enter
data16
rorl
mov
jno
fadds
les
loopne
movl
das
push
insl
sbb
xchg
sub
sub
xchg
xchg
pop
push
outsl
scas
out
stos
lock
mov
gs
cmp
iret
stos
jmp
inc
andl
sbb
std
ss
addr16
push
mov
mov
pop
push
popf
ret
lods
sarl
cmpsb
adc
ret
fs
mov
out
decl
je
mov
mov
sbb
loopne
push
movsb
sti
xor
mov
enter
mov
imul
sub
arpl
int
and
or
mov
idivl
jnp
repnz
mov
xchg
ret
pop
in
and
test
and
lods
fstl
mov
inc
nop
adc
outsb
call
mov
xchg
fisttpll
adc
outsl
shlb
lret
dec
mov
push
lcall
shll
cli
pop
add
sbb
sahf
stc
loop
pop
iret
mov
xchg
push
lahf
incb
sbb
push
push
adc
push
cmp
xor
je
fbstp
cmpsl
jo
mov
dec
clc
test
push
mov
cmp
xlat
pop
insb
xor
mov
movsb
loop
sub
dec
popf
ss
dec
dec
les
pop
je
inc
cltd
cmc
and
testb
cli
test
inc
fdivrl
jg
das
rcrb
cmp
sar
in
addb
mov
fdivrp
cmc
dec
mov
adc
inc
scas
add
cmpsb
push
cld
jle
sahf
das
adc
lret
xor
cmp
jns
push
stc
push
stos
or
dec
xor
xor
imul
mov
fadds
cmp
jnp
imul
xor
add
cmpsl
mov
clc
jp
stos
je
ds
aam
nop
and
insb
or
xchg
dec
in
jge
fimull
mov
fmul
imul
lahf
test
lret
mov
mov
sti
in
sbb
call
insb
pop
add
outsl
movsl
aas
xor
add
mov
lret
xchg
inc
jno
add
data16
inc
push
cmp
xor
in
mov
push
adc
cmpsl
adc
mov
mov
xchg
aam
aad
inc
push
cmpsb
mov
push
stc
decb
in
mov
push
bound
test
scas
arpl
inc
sbb
imul
sub
push
or
inc
xchg
cmp
fidivl
sti
xor
jns
sbb
and
adc
push
lds
out
mov
cmp
fdivrs
xchg
mov
mov
and
imul
jecxz
lret
movsl
pop
aas
jnp
jmp
cltd
mov
jo
fdivrs
and
popa
mov
push
out
push
lods
push
imul
jp
sti
into
adc
push
cmp
mov
adc
in
call
sub
cmp
adc
dec
mov
or
or
jle
aam
lcall
lock
adc
mov
or
adc
cld
and
outsl
lds
in
and
push
inc
scas
pop
sahf
rclb
insl
stos
clc
addr16
adc
xchg
popa
int
data16
or
mov
push
lcall
fistpll
call
sub
ja
outsb
lret
stos
cmp
xor
in
mov
aaa
mov
xchg
enter
ljmp
adc
fcoms
es
cmp
cmp
mov
add
lds
or
and
jnp
sbb
add
ffreep
lret
push
loope
enter
mov
inc
loope
pop
jmp
jle
pop
xchg
ficomps
enter
stc
in
leave
ret
jle
mov
fnstenv
shll
pop
aam
fldenv
daa
dec
and
lret
add
testb
iret
clc
jge
iret
call
mov
mov
xor
ret
mov
add
pop
mov
dec
push
cld
test
jb
bound
fdivs
arpl
jae
sbb
push
xchg
leave
out
test
push
jp
dec
scas
in
mov
cmc
jecxz
push
dec
mov
sbb
cwtl
mov
mov
sub
aaa
mov
ljmp
test
out
out
mov
mov
sub
mov
add
jne
icebp
popa
movsl
not
es
jns
jl
ret
push
xor
lahf
sub
fnstsw
sbb
shll
into
pop
vfrczsd
loope
adc
xchg
ret
xchg
dec
jmp
fs
jns
adc
add
rcrl
xchg
daa
fdivrs
clc
cmovl
shlb
stos
ja
push
xor
xor
pop
mov
lods
fwait
sar
cmp
int
sbb
jno
mov
hlt
jle
push
mov
stos
sub
and
stc
dec
and
push
mov
mov
sub
mov
roll
jbe
mov
int3
rorl
or
pop
out
iret
sbb
jne
and
mov
push
test
jecxz,pn
push
sub
lds
mov
jmp
pop
add
stos
ret
inc
inc
lods
out
mov
fstpt
adc
sbb
fldl
inc
int3
pusha
dec
jnp
sbb
xchg
jo
sbb
and
jnp
int
icebp
gs
jbe
add
test
push
jl
mov
cmp
loopne
mov
mov
xor
adc
mov
jmp
xchg
xchg
pop
xlat
pushf
push
pusha
pop
aaa
ret
je
dec
dec
roll
and
push
fcompl
scas
sbb
mov
add
cmpb
inc
push
mov
stos
data16
xchg
imul
into
xchg
push
cwtl
adc
xor
loope
and
or
push
mov
mov
xor
mov
imul
js
testb
out
test
fwait
sub
cmp
mov
push
test
xor
jge
push
mov
cmc
outsb
mov
sti
sbb
mov
ret
loop
out
adc
or
adcl
movsb
pop
add
push
sub
adc
dec
adc
arpl
jl
and
pushf
inc
sti
jmp
push
xchg
ret
std
movsl
ljmp
mov
dec
and
hlt
xchg
ficoms
sub
cmc
repz
das
xor
xchg
int
lahf
sub
shll
dec
mov
xchg
or
psraw
cltd
fidivrl
pop
fcmovne
insb
adc
dec
dec
mov
movsl
pusha
movsl
je
gs
aam
repz
rcl
sub
adc
mov
inc
negl
inc
push
outsl
data16
out
daa
jne
mov
outsb
jge
inc
sbb
sbb
inc
jg
mov
movsb
lock
scas
loope
xor
sub
repnz
out
cmp
imul
add
lods
pop
xorl
push
jecxz
xor
lcall
push
lea
and
shrb
scas
pushf
je
inc
sbb
outsb
lds
mov
lcall
sti
jb
inc
xor
adcl
insb
mov
in
enter
jmp
pop
movsb
adc
xchg
scas
push
ds
stos
cmp
jle
push
lahf
push
xchg
add
fisttpll
sub
pop
mov
jl
jne
sbb
adc
test
rcr
xchg
lods
jge
sbb
adc
xor
sahf
jl
gs
cwtl
repnz
xor
sar
mov
mov
ljmp
imul
mov
sbb
rorl
fdivs
mov
sub
in
inc
sub
cmpsb
xor
or
out
cltd
popa
jg
lret
inc
sbb
popa
scas
push
pop
test
fadd
cld
jecxz
sub
repnz
mov
mov
mov
push
push
sub
arpl
ret
cmpsl
cmp
pop
sub
gs
loop
mov
rcl
push
sbb
mov
add
bound
inc
inc
into
mov
rorl
push
out
js
add
and
data16
pusha
lds
cmp
enter
mov
imul
fisttpl
jne
inc
xchg
xlat
mov
ficompl
mov
out
mov
mov
xchg
mov
mov
sarb
xchg
pushf
ret
mov
jg
out
adc
xor
fbld
inc
in
sti
adc
mov
aam
xchg
clc
dec
and
xchg
mov
inc
cltd
jmp
mov
dec
repz
hlt
out
cmp
or
je
dec
add
jle
dec
sub
dec
ficomps
lcall
push
sbb
outsb
out
add
inc
loope
mov
lock
inc
add
adc
push
ficomps
sub
nop
ljmp
dec
movsb
outsb
test
cld
stos
lcall
pop
loopne
test
cmc
out
and
pop
xor
mov
pop
push
outsl
and
jno
sti
popf
cmp
jbe
pop
popf
cmp
xlat
pop
xchg
inc
ss
repnz
mov
pop
es
jbe
lret
adc
daa
push
dec
mov
negl
js
xor
ja
push
sbb
mov
xchg
pop
pusha
jp
aas
and
scas
adc
aad
mov
cmpsb
cmp
lods
xchg
jl
int3
imul
or
sub
or
mov
scas
push
xor
loop
and
or
pushf
push
iret
add
sub
push
lea
clc
nop
add
add
nop
dec
sub
faddl
adc
aaa
lcall
mov
aaa
popa
mov
xor
lret
pushfw
lcall
loop
push
aaa
movsb
sti
xor
es
ret
mov
jmp
out
lods
push
insb
cs
or
cli
pop
mov
icebp
mov
xchg
rorl
push
mov
movsl
dec
inc
lcall
jbe
stos
pop
outsb
loopne
push
and
sbb
clc
mov
addr16
dec
mov
add
mov
or
fucomp
aas
xchg
rcll
sbb
mov
mov
mov
lcall
pop
xor
cmpl
mov
jns
bound
loope
cmpsl
rol
aam
or
pop
dec
test
jge
enter
adc
sub
lock
mov
rclb
mov
stos
jnp
imul
mov
cltd
test
lods
subb
mov
fstps
lret
clc
push
add
fneni(8087
dec
mov
sub
subb
imul
aam
insb
mov
pop
inc
lret
mov
or
lret
fs
pusha
into
mov
fdiv
dec
xchg
xor
sbb
xchg
stos
or
add
pop
add
push
nop
mov
test
cmp
cltd
hlt
ror
dec
vandnps
jae
scas
fstl
adc
ret
mov
adc
icebp
inc
or
sbb
jle
sbb
rcrl
jl
sbb
add
test
fs
mov
sbb
jg
inc
imul
add
mov
adc
fcmovbe
fs
cmpsb
jne
int
sub
add
repnz
or
scas
mov
sub
sbb
mov
jl
push
hlt
test
pop
sub
sbb
stc
ret
subb
xchg
jl
inc
lret
sub
adc
test
or
push
xlat
inc
test
das
jl
sti
xchg
lods
pop
cld
cld
pop
mov
mov
enter
cltd
out
test
and
xor
adc
sbb
push
into
inc
outsb
push
dec
mov
xor
lea
push
outsl
loope
sti
jb
jg
xor
mov
out
add
fcompl
repz
aaa
or
xrelease
dec
imul
push
sbbl
shll
lock
sbb
cltd
and
dec
btc
and
fisttpll
js
int3
mov
les
jp
inc
lods
mov
mov
dec
push
test
ja
je
movsb
adc
mov
xor
push
push
xchg
test
and
adc
xor
cmp
mov
daa
je
mov
repz
or
and
js
mov
mov
or
aam
push
lret
jae
jl
lea
push
xor
mov
les
out
scas
xorl
inc
mov
pop
fsubl
in
jne
push
adc
xor
sbb
inc
dec
cmp
dec
or
jecxz
xchg
scas
or
dec
lea
mov
and
and
mov
pop
lret
and
sarl
mov
mov
int
int
fisttpl
and
pusha
or
pop
inc
cld
xchg
std
and
inc
push
dec
pop
lods
cs
mov
ja
orb
mov
jne
loop
mov
in
xchg
push
xor
jg
sub
rorb
fs
cmp
sahf
cli
fs
hlt
or
loopne
movsb
stos
mov
gs
pop
jl
and
int
stos
xor
in
dec
mov
fidivrs
xchg
lahf
loop
cmp
mov
cmp
inc
sub
inc
sbb
adc
hlt
jnp
inc
mov
and
call
loopne
scas
xor
sub
jecxz
mov
inc
push
xor
jecxz
dec
xor
mov
lcall
loopne
outsl
test
push
cltd
out
scas
inc
pop
cmp
push
fs
mov
fidivrl
xor
cmpsb
inc
fldcw
js
inc
pop
adc
stc
mov
enter
jb
lcall
or
orb
cwtl
mov
lret
sarl
sahf
aam
mov
je
pop
push
push
jb
pop
cli
int
ds
jbe
mov
push
xchg
test
mov
jge
mov
scas
cld
outsl
mov
add
xor
popf
jae
sarb
add
ss
mov
sub
stc
sbb
dec
add
pop
or
shll
lahf
mov
dec
mov
or
insl
andb
nop
cmp
cmpsl
mov
pop
xchg
daa
push
push
lods
sahf
xchg
add
inc
jge
fldcw
arpl
mov
in
frstor
enter
and
and
mov
mov
adc
push
call
jnp
movsl
cld
out
int3
xchg
sub
scas
pushf
sbb
and
sbb
mov
and
iret
call
aas
loope
aam
or
sub
cmc
add
cld
or
cmp
je
in
scas
mov
pushf
out
dec
out
out
repnz
aam
or
loopne
mov
mov
aam
or
arpl
shlb
data16
aam
mov
rolb
xchg
xor
jae
jne
in
sub
lret
lret
aaa
jnp
xchg
adc
push
sub
jmp
rcr
cmp
and
mov
adc
jle
orb
xchg
cmp
sub
push
ds
notb
popa
push
imul
jl
jae
clc
leave
push
subb
adc
lods
test
mov
cmp
xchg
testb
and
xorl
insl
add
sbb
xor
sarl
pusha
and
and
push
fldcw
add
jnp
imul
shrb
imull
sbbb
out
pop
rcll
adc
scas
decl
gs
mov
mov
leave
pop
test
mov
cmp
outsb
mov
adc
cmp
sub
adc
nop
leave
jo
jne
mov
mov
cli
arpl
add
pop
pop
inc
aaa
scas
aaa
stos
pushl
and
and
or
inc
sub
out
xchg
push
mov
repnz
fidivl
stos
insb
pusha
xchg
sub
inc
dec
mov
int3
fisubrs
sbb
mov
dec
scas
insb
repz
hlt
or
test
cs
pop
stc
inc
or
lods
jne
frstor
add
mov
sti
testb
out
push
fstps
mov
dec
dec
gs
out
loope
add
xchg
testb
sbb
adc
or
adc
cmp
daa
scas
xchg
cmpps
clc
jae
out
and
xor
lcall
fistpl
ret
addr16
cmp
in
cmp
call
push
mov
gs
addb
or
movsb
inc
cmp
sub
flds
dec
ss
cmp
int3
xor
push
fwait
jns
sbb
sbb
adc
in
repz
mov
call
mov
mov
xchg
orl
inc
aas
xchg
mov
push
jg
loopne
outsb
push
inc
std
xchg
scas
sbb
mov
inc
inc
pusha
jp
fsubp
sbb
psllq
nop
out
or
test
hlt
push
pop
push
cmp
and
call
adc
orl
mov
clc
add
cmp
push
add
push
and
mov
jnp
xchg
shl
leave
pushf
loop
sbbb
and
int3
shlb
or
lods
aam
ja
leave
test
xchg
mov
sbb
xchg
dec
stos
push
je
and
pushw
fildl
sub
pop
push
repz
pop
cmpb
ss
xchg
in
adc
jp
les
in
ja
xchg
adc
mov
rcll
adc
push
divl
xchg
adc
pop
fsub
in
jge
fcmove
imul
aas
out
int3
cmp
xchg
ja
in
jg
das
ja
insb
int
ja
jnp
insb
pop
lock
or
or
ljmp
rcrb
inc
push
popf
sarl
mov
sbb
pop
leave
xor
xchg
mov
xor
cmp
andl
cwtl
jmp
orb
mov
mov
and
sub
jns
jno
mov
sub
les
push
es
push
or
pop
jp
dec
mov
out
jns
mov
pop
shrl
lods
gs
lret
inc
fstl
xorb
or
roll
gs
gs
aam
add
shll
lods
outsl
mov
imul
enter
icebp
or
xchg
xor
push
stc
test
outsb
xchg
repnz
fsubs
push
mov
scas
xchg
jl
popf
imul
mov
sbb
jle
xor
out
xor
into
push
mov
add
cmp
mov
inc
fistl
push
je
flds
stos
adc
insb
icebp
mov
std
and
fisttpl
cmp
fdivr
jg
jb
test
sub
out
repnz
sub
lods
repnz
and
shll
outsl
mov
fidivs
pushf
fldl
cld
out
lods
sbb
outsl
adc
cltd
mov
sbb
outsb
jmp
ja
inc
inc
mov
repnz
movsl
stos
rorb
aad
push
call
ficoml
push
xchg
pushf
sahf
push
repz
aad
jb
push
shlb
xchg
jge
mov
rcl
jle
je
or
xor
cmpsl
push
dec
shlb
andb
cmc
mov
xchg
and
jnp
bound
or
dec
imul
cld
adc
dec
jg
dec
dec
pop
popf
jb
flds
xor
lret
loopne
divl
dec
lret
gs
cltd
iret
lods
mov
cmc
cltd
xchg
in
lea
xchg
pusha
and
cmpsl
loopne
pushl
or
mov
push
mov
inc
mov
ror
bndstx
mov
mov
int3
add
sbb
adc
mov
jecxz
leave
gs
pop
leave
push
xor
sub
stos
lock
push
data16
enter
pop
jmp
push
cmc
and
add
imul
xor
cmc
enter
pop
and
sbb
sarl
fs
in
or
xchg
orl
ror
nop
popa
or
mov
xor
out
push
mov
scas
es
lret
push
arpl
inc
loopne
mov
add
adc
aam
xchg
mov
dec
lea
ret
lcall
push
call
pop
out
add
pop
mov
xchg
fimuls
fdivp
outsl
or
fs
repz
sub
idivl
adc
sbb
rcrb
dec
cmp
int
inc
out
sub
arpl
dec
fadds
fdivr
mov
mov
aad
mov
ds
mov
jbe
sbb
divb
lock
movsl
or
test
xor
push
enter
xchg
fidivrl
add
xchg
cmp
lahf
cmp
or
sub
push
sti
adcb
push
xchg
cli
pop
pop
in
mov
adc
in
mov
mov
jmp
xchg
adc
movsb
loope
in
pop
sahf
mov
xchg
push
dec
push
pop
iret
js
xchg
repz
xchg
imul
fucomi
sahf
lea
push
mov
mov
in
dec
xchg
sub
sub
aaa
in
in
xor
mov
or
adc
fcmovnu
pop
sub
fnstsw
mov
arpl
pop
aam
sti
xchg
pop
test
aaa
adc
data16
push
cwtl
pop
mov
shl
aaa
out
xor
stos
int3
addr16
loope
jns
pop
and
lods
lret
sahf
shr
ror
jecxz
clc
push
je
jb
mov
push
mov
dec
mov
lods
jne
sbb
enter
push
lahf
clc
mov
pushf
repz
ja
test
dec
push
inc
addb
pop
fstl
xor
jo
jae
icebp
daa
je
test
jle
mov
rorb
sub
cld
gs
inc
fcoms
cmpsb
aaa
inc
fisubs
movsl
xchg
fwait
mov
inc
jg
sbb
jp
dec
aas
aam
stos
sbb
dec
repnz
mov
in
push
mov
adc
leave
arpl
movsb
mov
jno
pushf
jmp
add
xchg
lret
clc
adc
nop
mov
imul
sub
lods
xor
dec
add
mov
prefetch
or
test
cwtl
int
es
sbb
ljmp
sub
push
aam
push
jns
aaa
scas
xor
push
dec
pop
in
push
jecxz
xchg
test
js
mov
dec
push
pop
jnp
mov
mov
add
mov
test
xchg
lret
loope
xlat
xchg
inc
push
sbb
adc
fimull
repz
cld
mov
pop
aad
adc
adc
ret
dec
or
and
xchg
and
ljmp
add
xor
cs
dec
or
add
push
push
outsl
push
shl
or
pop
sub
adc
push
push
mov
leave
das
push
push
sahf
mov
into
sbb
loope
scas
or
das
ljmp
test
mov
xchg
aas
jmp
loope
pusha
stc
push
enter
rolb
push
xchg
clc
ret
sbb
aad
cs
inc
pushf
stc
sahf
push
jmp
adc
neg
js
sbb
sub
and
mov
out
jmp
test
xchg
loop
mov
iret
lret
inc
rcrl
bound
ret
push
mull
faddl
jo
stos
cmp
xor
in
loope
xchg
jno
xchg
pop
fcompl
xchg
jnp
mov
sub
xor
dec
inc
pop
cltd
loop
mov
leave
mov
inc
fcmovb
inc
imul
sbb
and
test
daa
daa
and
nop
mov
ds
push
dec
into
shll
fistpll
adcb
or
and
dec
into
mov
je
shll
adc
repz
frstor
cwtl
adc
test
sub
xchg
mov
cld
loope
fldenv
fmull
pop
cld
or
cmp
sbb
stos
push
add
push
xor
iret
push
sarl
push
inc
gs
iret
mov
jle
sbb
sub
into
xchg
addr16
dec
fdivl
mov
orb
inc
jg
out
mov
jg
je
fwait
pop
sub
mov
mov
jg
pop
sbb
lock
rol
pop
lock
testl
pop
cmp
loopne
call
cwtl
pop
clc
mov
mov
iret
pop
sti
mov
dec
jecxz
call
push
and
sub
mov
sub
out
aas
ljmp
pop
push
push
outsl
mulb
mov
push
ret
push
add
leave
pop
xorb
fisttpl
xchg
or
cld
js
stos
lods
ret
jae
push
loop
mov
icebp
pop
lahf
xor
inc
jg
adc
jno
sub
faddl
adc
in
hlt
xor
rcll
insb
xchg
jmp
and
dec
movsb
les
jp
mov
xor
insl
lods
mov
sbb
and
cmp
and
fstps
or
xchg
hlt
jecxz
fcoms
int3
in
xchg
popf
inc
cmp
arpl
jne
add
loop
pusha
dec
adc
cmp
in
ja
sti
adc
out
js
sti
jmp
iret
pop
inc
das
lds
popf
push
mov
mov
push
loop
and
cwtl
xor
push
or
mov
mov
lods
mov
test
lods
les
pop
adc
jns
cmp
fcomps
pop
bound
lds
and
mov
out
in
sbb
bound
jne
cmp
out
dec
js
gs
xchg
jecxz
jne
add
cmc
pop
outsl
in
inc
or
pop
fnstenv
out
dec
test
pop
push
int
enter
ret
xorl
xchg
inc
addb
jno
add
xchg
cwtl
jecxz
and
dec
adc
cmp
ljmp
push
dec
xchg
outsb
popf
sbb
sbb
sbb
inc
jo
mov
mov
mov
aaa
add
sbb
push
sbb
add
mov
jg
push
rcl
inc
jl
dec
stc
fisubs
fldl
sub
pop
add
je
enter
rol
cmp
stos
int
lret
mov
push
push
ret
jge
jl
xchg
pusha
dec
xchg
jge
inc
jecxz
in
int3
ret
pop
adc
add
add
sub
arpl
mov
ss
xlat
xchg
aaa
mov
scas
testb
movsb
xor
and
int
loop
test
fisubrs
cmpsb
adc
dec
out
xchg
cmpsb
add
inc
and
pushf
dec
cmp
out
fadds
push
stc
lea
cmp
jmp
pop
push
scas
dec
outsl
subb
jbe
sub
jle
fldl
or
sbb
jecxz
loope
jp
pop
cltd
movsl
insl
add
xchg
mov
cmp
decl
jae
cmp
xchg
imul
pop
test
adc
cmp
out
mov
xchg
bound
cltd
subb
imul
lock
push
call
xchg
add
repnz
imul
push
into
inc
dec
jae
xor
or
ret
in
dec
incb
sub
adc
sarb
push
push
stc
xchg
jns
fcmovb
daa
mov
mov
or
mov
pop
movsl
fsubl
or
push
lds
into
inc
aas
sub
push
in
out
push
xchg
pusha
jle
ss
xchg
mov
push
lcall
in
sub
push
pop
fstps
lcall
sub
into
mov
lret
jg
mov
call
mov
pushf
mov
push
pop
sub
mov
adc
pop
sbb
scas
das
xor
xchg
pop
cmc
and
leave
push
inc
xchg
pop
add
mov
xchg
and
mov
jecxz
sub
cmpl
mov
loopne
lahf
int3
roll
or
ljmp
icebp
mov
movsl
nop
mov
pop
and
movsb
test
and
fwait
je
and
xchg
gs
xchg
xor
mov
inc
scas
xchg
mov
jo
sbb
ljmp
sbb
rol
mov
adc
fwait
lods
cmpsb
adc
or
cmpsl
call
aaa
das
arpl
sub
fistps
adcb
lcall
push
pop
mov
lods
cmpsl
shlb
mov
cmp
out
mov
adcb
push
cmpsl
outsl
test
sub
lods
fsubs
rcl
sub
mov
push
lret
sub
mov
adc
xor
and
mul
cld
add
lret
jle
pop
mov
jbe
jbe
lcall
sbb
gs
adc
dec
scas
dec
cmp
pop
pusha
lods
mov
call
aaa
test
ds
orl
dec
sub
add
mov
mov
cwtl
pop
or
test
enter
and
jp
insb
mov
sub
mov
cmpsl
daa
xchg
cmp
fcoms
add
adc
jmp
mov
fisttpl
daa
xor
or
jp
enter
cmp
mov
or
imul
jle
int3
lcall
in
and
jg
sbb
or
icebp
cwtl
inc
sub
xlat
cltd
jo
je
repz
fisttpll
xor
add
cmp
add
and
mov
adc
adc
imul
movsb
lcall
dec
clc
xor
xchg
mov
sub
mov
dec
push
jle
mov
inc
adc
ficomps
jbe
mov
xchg
xor
mov
pop
dec
test
imul
add
jae
mov
cmp
aas
mov
sub
in
sbb
mov
inc
sbb
mov
mov
lods
out
mov
mov
arpl
nop
push
mov
push
cs
and
repz
mov
sti
icebp
jb
xchg
cmp
sbb
cmpsl
jo
das
gs
mov
dec
in
jg
ret
mov
sub
xor
je
mov
shl
ret
aam
and
inc
cmpsb
decl
mov
scas
aas
cmp
dec
adc
rorb
in
shlb
jg
inc
adc
popf
test
mov
fiadds
mov
xchg
or
mov
dec
loopne
les
push
mov
push
pop
or
lcall
je
pushf
loopne
ljmp
xor
mov
test
imul
loope
sbb
lods
mov
mov
adc
push
sub
das
xlat
push
mov
inc
movsl
mov
dec
sub
cmpsl
insb
mov
outsl
call
jnp
rolb
lret
push
sub
pop
scas
jne
scas
jg
pop
dec
add
cwtl
sti
cmpsb
cwtl
mov
ds
jnp
mov
out
lcall
fdivrs
adc
shl
mov
orb
inc
mov
jae
and
pop
xchg
and
aas
adc
xchg
push
jb
shll
sub
std
adc
or
dec
push
testl
adc
dec
xchg
adc
xor
mov
push
fdivrl
mov
and
in
cmp
mov
jae
fisttpll
nop
popa
cmp
xor
loop
adc
data16
loop
sub
push
std
mov
push
sbb
cmpsl
test
shlb
mov
movsl
es
or
lock
int3
and
or
jp
xchg
mov
push
mov
dec
mov
jns
push
dec
xchg
imul
insb
mov
xchg
cltd
and
push
das
mov
stc
ret
cwtl
mov
jne
hlt
aam
insb
push
ret
push
lods
xchg
mov
rclb
fs
int
dec
movsl
pop
xchg
das
stos
in
bound
in
push
das
fs
cwtl
hlt
lea
mov
push
jge
aad
movsl
aam
pop
test
ja
mov
pop
clc
sahf
lcall
mov
cmc
insl
adc
push
ficoms
mov
jb
lods
xchg
jmp
int3
mov
sbb
cs
sbb
lahf
aam
or
lods
adcb
lds
adc
push
jns
icebp
cmpxchg8b
add
popa
cs
jl
stos
rclb
mov
adcl
jmp
jns
add
mov
into
cwtl
dec
sbb
and
and
mov
fiadds
pushf
shrb
add
add
inc
arpl
mov
jns
popa
add
or
push
dec
xchg
fadds
jge
jne
sbb
jecxz
jns
mov
fidivs
xchg
aaa
cwtl
or
adc
xchg
sbb
lahf
adc
jecxz
mov
outsl
pop
sti
frstor
mov
jge
fs
enter
pop
lret
icebp
mov
cmp
mov
jmp
sub
les
ret
mov
hlt
pusha
and
add
inc
xlat
and
mov
addr16
sbb
dec
pop
mov
scas
scas
or
das
test
mov
mov
cld
les
or
lret
outsl
sub
lods
addr16
leave
imul
repz
pusha
clc
mov
xchg
aas
push
xchg
jb
les
jne
call
notl
sbb
rcrb
jecxz
cmovns
jb
divb
xlat
cmpsl
and
mulb
pop
or
ss
aas
push
ja
stos
xor
sub
and
sub
or
sub
ss
lret
add
sub
jb
xor
xchg
dec
mov
push
repz
sub
pop
imul
rcl
cs
or
add
sbb
fdiv
xlat
fsts
test
das
ja
xchg
or
divl
icebp
adc
out
mov
fistpll
movsl
test
xchg
mov
cmpsb
jmp
and
ja
jae
inc
cs
scas
mov
scas
test
xor
outsb
xor
mov
mov
dec
adc
je
push
lock
jbe
add
cmp
arpl
mov
std
add
imul
pop
enter
jecxz
mov
pop
inc
subb
loopne
xor
jne
mov
sub
fcmovnu
hlt
adc
imul
bound
add
sub
adc
push
dec
xchg
xor
idivb
cltd
jnp
inc
rorl
popa
jbe
pop
xchg
cmpsl
fwait
xchg
pop
pushf
cmp
push
mov
fbstp
cs
cli
jecxz
cmp
lods
cld
out
adc
mov
jp
xlat
add
outsb
cmpsb
das
lcall
adc
mov
mov
mov
xchg
jp
enter
loopne
dec
sbb
push
fwait
push
decb
sub
mov
loopne
mov
shrb
xor
mov
in
mov
mov
push
aam
js
lock
sbb
in
mov
and
popa
mov
shrl
sbb
adc
inc
dec
jg
lahf
mov
adcl
shl
sbb
jg
int3
cmpsl
mov
idivl
jae
enter
or
stos
shl
arpl
jl
inc
inc
mov
add
cld
pop
jecxz
fldl
lret
cld
adc
and
test
inc
imul
dec
add
adc
psrld
dec
cmp
push
pop
ficoml
add
cmpsb
fwait
dec
rorb
rorl
clc
inc
mov
xchg
std
push
lret
jnp
pop
inc
lret
jmp
lret
inc
insb
sti
mov
ficompl
cmc
repz
and
jns
xchg
jno
adc
push
sub
hlt
shrb
jae
pusha
pop
push
jge
in
inc
leave
int3
icebp
cmp
sti
mov
ss
shlb
pop
rcl
ret
xor
cmp
rorl
sbb
sbb
sar
inc
and
or
mov
fsts
inc
std
aad
retw
nop
ret
rcrb
je
sub
ljmp
sub
stos
inc
and
mov
nop
ljmp
lea
push
push
and
push
mov
clc
xor
mov
je
repnz
icebp
push
sarl
mov
test
cs
stos
and
inc
mov
mov
xor
sbb
leave
out
out
rolb
jecxz
or
popf
mov
scas
aas
cmp
bound
mov
adc
outsl
inc
xor
add
out
mov
sti
inc
mov
cmpsl
xorb
mov
stos
cmp
xor
jb
pusha
pop
xchg
or
push
mov
lock
lods
or
adc
rorb
mov
mov
ja
imul
push
lret
add
xchg
xchg
jbe
push
scas
sahf
lds
ljmp
push
loope
cs
negl
mov
push
pushl
rcll
jp
mov
and
mov
push
jle
xchg
sbb
or
jmp
fnstsw
dec
data16
and
pop
mov
outsb
or
and
icebp
inc
jnp
push
and
ret
daa
mov
int
cs
mov
adc
adc
jae
jno
xchg
or
and
mov
jmp
out
jbe
dec
xor
outsl
arpl
pop
adc
fs
mov
jmp
inc
das
mov
rclb
adc
loop
test
jb
jbe
pusha
push
or
dec
mov
out
in
aas
adc
add
ds
enter
and
js
das
mov
hlt
cmp
pop
push
popa
xchg
mov
es
test
popl
xchg
xchg
lcall
and
cli
mov
or
xchg
pop
call
pusha
mov
fistl
pop
test
add
shll
xchg
sbb
xchg
jnp
rcll
imul
rcrb
loop
pop
mov
sti
adc
and
adc
cmp
jo
push
push
jns
in
fldenv
push
insl
xor
aad
mov
cld
rcr
imul
int
lods
cmp
inc
js
mov
cmp
push
lods
mov
shll
dec
adc
push
ds
pop
and
ds
aas
add
sub
mov
add
and
loopne
and
pop
mov
xlat
pop
cmp
scas
int
je
and
jmp
jb
push
jecxz
sbb
xlat
pop
inc
cmp
mov
mov
int3
cmpsl
pop
mov
push
mov
mov
pop
adc
icebp
sbb
movl
std
jl
and
sub
aam
adc
adc
push
cmp
mov
xor
adc
sbb
cli
jno
push
sbb
or
rcr
mov
scas
xchg
cmc
lahf
cwtl
mov
cmpb
pop
add
aaa
mov
jle
fs
aas
sbb
leave
int
adcb
mov
sub
push
xchg
loop
loope
jb
xchg
jge
cmc
xchg
or
int
push
bound
test
mov
sbb
dec
jno
not
jnp
push
fdivs
dec
pop
enter
push
pushf
xchg
cld
cli
lods
sbb
mov
sub
daa
mov
cltd
divb
aaa
nop
push
addb
mov
bound
cmpsl
int
xor
out
inc
nop
xor
lretw
fdivs
mov
sahf
push
jp
lock
mov
xlat
and
loopne
sahf
and
add
sbb
roll
sub
jns
jno
and
aaa
mov
xchg
popa
xchg
add
nop
popf
dec
push
jl
shl
inc
sti
adc
cmc
sbb
sti
cwtl
ljmp
nop
loopne
push
lea
cmpsb
out
adc
icebp
ljmp
clc
clc
sbb
xor
jmp
pushl
lcall
sbb
and
ljmp
pop
inc
idivb
hlt
mov
enter
popf
inc
mov
or
sub
fisttpll
or
push
jns
inc
xchg
inc
fs
and
daa
add
fwait
dec
repz
cmp
popa
cmp
cmp
int
sbb
or
mov
out
and
sub
inc
jo
test
mov
cmp
cmc
push
stos
in
movsl
shll
jmp
pusha
je
fisttpl
mov
mov
loope
push
clc
aad
and
aaa
pop
xchg
xor
or
ja
fwait
adc
sarl
outsb
pop
pop
in
out
sbbl
or
push
les
rcrl
pop
int
adc
mov
mov
xchg
jb
adc
das
es
out
call
inc
inc
shll
imul
and
stos
inc
aad
fdivr
pop
pop
adc
out
xchg
shlb
xor
repnz
cmp
or
nop
lds
mov
mov
mov
in
sbb
cmp
add
out
cmp
addr16
fistpl
into
mov
sub
inc
dec
adc
mov
call
fxch
orl
mov
sbb
aam
dec
and
and
and
mov
push
pop
arpl
sub
scas
rol
cmp
ss
leave
jge
cmp
jo
popf
lahf
ficoml
testl
test
or
clc
and
xchg
data16
lret
es
inc
stc
and
movsb
fcomps
in
sbb
popa
call
mov
clc
cmpsl
es
add
lea
sub
rcrl
cmp
std
lods
outsb
aaa
push
and
sbb
ja
js
sub
dec
dec
ds
xchg
cmp
jg
cld
or
mov
pop
jp
jb
repnz
jmp
cmp
mov
inc
test
fidivs
mov
push
xchg
ret
push
push
and
aas
aad
pop
stos
shr
jmp
clc
pop
stc
sbb
mov
stc
push
int
cmc
rorl
mov
in
add
outsb
sbb
push
cmc
in
mov
out
in
cmp
mov
test
cwtl
mov
jecxz
daa
inc
aam
sub
and
in
icebp
add
int
push
sub
sub
mov
iret
lret
push
xchg
ds
jg
sbb
mov
leave
addr16
aas
out
in
mov
rorb
jmp
xchg
and
ljmp
out
jne
fwait
cmp
sub
and
rcrb
repnz
aad
adc
mov
int3
stos
cmpsl
mov
mov
movsb
inc
and
or
loopne
xlat
mov
or
negb
mov
push
cmpsb
add
pushf
test
scas
lods
xor
cmp
jae
pop
rclb
cli
dec
cmp
aad
xchg
push
inc
push
fildll
aad
sbb
stos
xor
cmp
and
pusha
xchg
mov
call
jl
push
sub
sub
in
mov
imul
dec
in
push
aam
fstp
dec
sub
mov
pop
lahf
mov
mov
push
xchg
add
sub
rcll
xchg
and
out
jae
xchg
jae
ljmp
fcmovb
test
xor
mov
mov
subb
insb
push
cmpsl
and
inc
cmp
aaa
push
pop
fstpt
rclb
pop
and
sub
jecxz
adc
repz
mov
mov
and
ficompl
imul
mov
shl
jne
push
fcoml
sbb
popa
xchg
sub
scas
icebp
cmpsl
insb
bswap
inc
popa
jno
xor
push
inc
push
je,pt
push
int3
or
mov
push
shll
in
sub
cmp
mov
sub
js
outsl
nop
shll
pop
sbbl
or
in
repz
dec
and
jg
sbb
lcall
adc
sbb
push
imul
loop
test
lret
sbb
xor
shll
inc
jb
push
add
jp
shll
push
or
dec
inc
sub
jge
push
fildl
mov
jae
subl
in
lcall
adc
lret
mov
inc
shrl
inc
cmpl
add
daa
pop
sbb
jl
and
xchg
inc
mov
mov
mov
rorb
jb
sub
add
mov
or
adc
or
std
outsb
fsub
jp
sbb
sbb
pop
je
pushf
sub
mov
or
push
sahf
lock
xor
stos
push
leave
xchg
xor
xchg
popf
outsl
sarb
inc
sti
in
mov
imul
popa
xor
cmp
fsubrs
fnstenv
clc
add
inc
icebp
imull
pusha
out
into
cmpsb
in
push
insl
into
bound
fimull
mov
push
cwtl
dec
sti
mov
repz
testb
arpl
jg
ror
imulb
add
cmp
scas
fsubrs
dec
movsb
mov
push
or
pop
std
mov
xchg
add
fs
mov
jo
or
out
sub
in
jne
push
push
aaa
roll
add
cmp
jge
test
mov
xchg
lock
xchg
or
pop
sub
mov
leave
bound
movsl
stos
out
fcmovbe
roll
cmp
loop
psubsw
subl
jmp
pusha
call
fcmovnu
fdivrp
xchg
idiv
xor
xchg
jno
push
lods
jge
sbb
fs
jo
push
into
jle
sbb
movsb
mov
out
pop
dec
xchg
rdtsc
dec
jecxz
xchg
fs
sbb
jg
xor
lret
insb
stos
hlt
cltd
rcr
shrb
fstpt
in
inc
xor
mov
negl
cmp
mov
push
imul
loope
hlt
movsb
mov
sar
xor
push
push
divl
xor
sub
jl
or
sbb
into
andb
pop
into
in
mov
js,pt
cmp
inc
push
adc
ret
mov
mov
mov
mov
xchg
inc
inc
testb
dec
jl
push
mov
test
dec
cmp
xchg
mov
dec
into
jmp
adc
test
xchg
xor
and
test
dec
add
mov
or
icebp
sub
push
push
mov
shlb
out
out
pop
jbe
stos
call
clc
push
adc
inc
sbb
in
jl
dec
push
lret
dec
loope
add
clc
sub
pushf
xchg
repnz
jp
dec
jmp
push
dec
xchg
xchg
sbb
xchg
xchg
clc
mov
jo
cmp
ror
or
movsb
and
ljmp
popa
sub
rcrb
mov
shlb
jbe
jnp
add
hlt
adc
add
push
imul
jp
les
fnstsw
xchg
jnp
sbb
test
outsb
xchg
inc
dec
fnstcw
jbe
dec
nop
adc
push
mov
mov
addr16
iret
std
jo
lret
mov
clc
pop
fimull
cmp
jge
dec
loope
insb
into
sbb
aad
or
jne
sub
mov
jnp
out
test
adc
iret
cmp
adc
inc
adc
inc
push
cmovnp
xor
sti
cmp
pop
adcb
loope
ljmp
outsl
aaa
fldcw
dec
add
or
ljmp
pop
xchg
or
cltd
xchg
pop
cmp
mov
frstor
je
jns
imul
into
imul
data16
push
mov
lret
add
inc
clc
pop
shlb
xchg
inc
xor
mov
or
push
int3
push
xor
xor
dec
or
aam
jmp
icebp
and
sti
inc
ret
ret
lret
pop
out
and
cmpsl
test
sbb
inc
dec
add
push
jbe
xorl
popf
mov
mov
jae
cld
mov
sub
cmp
mov
fs
fs
push
cmpsl
or
or
ja
clc
pusha
jnp
mov
push
jnp
jge
sub
lret
mov
inc
filds
mov
xor
shrb
sti
pop
in
nop
ja
and
push
dec
add
test
stos
jne
das
stos
bound
pop
cmp
add
inc
iret
cmc
out
sub
or
lcall
fwait
adc
or
push
jp
and
cmp
pushf
cmpsb
dec
lret
bound
jne
jmp
inc
dec
mov
mov
pop
and
xchg
add
cmpsb
jmp
sahf
mov
sub
jo
xchg
dec
in
push
call
out
push
das
popa
lea
dec
mov
imul
fwait
xor
cmp
xchg
in
insl
sbb
test
jmp
ret
jecxz
fidivl
mov
adc
stos
addr16
add
pushf
lods
lahf
jecxz
push
xchg
mov
jmp
inc
push
mov
dec
sbb
push
mov
negb
sbbl
xor
pop
dec
jmp
push
xchg
mov
testb
dec
imul
incl
popf
push
mov
loopne
dec
pushf
int
call
movsl
out
test
jnp
call
jmp
xchg
mov
daa
push
lcall
and
mov
outsl
loope
imul
push
mov
jns
test
jp
inc
test
in
in
push
pop
sub
mov
jmp
push
adc
lret
push
stos
loopne
jg
popa
rcrb
inc
ja
jno
sbb
je
or
xor
add
mov
or
or
icebp
in
popf
inc
inc
test
repz
xchg
pop
add
nop
pop
adc
pop
pop
jge
ror
push
sub
out
cmp
lcall
pop
out
xchg
dec
xchg
add
add
rcll
cmp
insl
sbbb
imul
into
push
lahf
inc
or
in
fwait
lret
dec
filds
xor
push
sub
icebp
sbb
push
fstps
test
xor
jbe
inc
dec
movsb
mov
mov
mov
jbe
adc
sbb
mov
cmp
mov
adc
xchg
mov
sti
pop
nop
test
xchg
mov
jp
xor
movsl
enter
fs
xor
adc
dec
sbb
ficoml
pushw
jg
adc
cltd
and
shlb
pushf
dec
insb
dec
out
xchg
or
iret
mov
push
add
mov
jb
data16
imul
imulb
inc
push
xor
bound
int3
jns
add
int
dec
ds
test
inc
bound
sbb
sub
inc
push
cld
cmpsb
pop
leave
cmpsl
mov
je
movsl
out
add
loope
dec
test
adc
xor
mov
stos
pop
rcr
lock
sub
repnz
int3
std
or
out
out
jno
mov
ret
mov
icebp
ss
lahf
pop
das
fdivl
adc
jo
xor
subb
jnp
or
fisttpl
rclb
ds
xchg
in
cltd
cltd
out
xchg
mov
mov
add
xlat
pop
bound
xor
add
and
es
xor
arpl
lods
jns
fwait
push
push
or
repz
movsl
rclb
out
mov
lret
into
mov
mov
inc
sahf
fdivrs
imull
sub
mov
clc
pop
fstl
mov
rolb
cmpsl
xchg
sti
xchg
pop
xor
roll
push
jno
pop
xor
jb
mov
std
xorl
insb
orl
and
xor
adc
dec
test
sbb
xchg
cmp
sub
mov
sbb
inc
push
enter
sbb
xchg
dec
xor
mov
or
adc
imul
es
test
cmp
test
addr16
cmpsb
test
jecxz
xchg
clc
and
xchg
add
sahf
repz
mov
sarl
in
pop
sarl
pop
pop
lahf
fimull
les
aad
shl
lret
sbb
or
mov
adc
jns
cwtl
loope
out
loopne
fdivrl
fidivrs
or
dec
adc
lods
adcb
jb
out
aad
xchg
cmp
jno
insb
sub
pop
xlat
add
ss
cld
add
cmp
push
loope
cmp
mov
loopne
fs
mov
sub
jmp
mov
and
xchg
inc
sbb
pop
and
xor
aaa
pop
sub
mov
inc
cmpsb
cmc
add
push
lcallw
inc
leave
in
mov
or
outsl
dec
test
cmp
adc
sbb
inc
xor
pop
movsb
pop
cwtl
jno
and
xchg
aam
mov
emms
out
push
xor
jb
call
or
sbb
cmp
pop
ljmp
pop
mov
rclb
call
cltd
cmpsb
sub
icebp
xor
and
jo
adc
cld
and
enter
js
std
jo
push
jae
jbe
into
sbb
adcl
add
push
push
and
mov
push
and
cld
dec
rcll
dec
cmp
jno
xchg
sbb
adc
aas
xchg
jge
inc
outsl
add
mov
add
lret
int3
out
adc
hlt
push
adc
mov
leave
aaa
fists
idivb
inc
jecxz
stc
lea
div
add
cmp
enter
pop
and
shl
dec
jl
leave
es
pop
xor
sbb
mov
rorl
or
in
xchg
or
out
add
iret
sbb
adc
mov
aam
ficoms
je
out
add
inc
jle
test
test
bound
ss
repz
cmp
pop
and
loop
push
jl
je
clc
jno
imul
sbb
cli
adc
je
lcall
lahf
shl
lret
push
in
outsb
jo
xchg
mov
jns
mov
mov
xchg
ljmp
sbbl
in
jns
inc
mov
fst
sar
mov
testb
rorl
jo
jo
push
adc
mov
push
out
fisubrs
call
sub
adc
ds
cmp
xlat
add
fucom
push
dec
addr16
lods
mov
imull
add
jl
mov
mov
notb
push
cmp
sbb
inc
adc
sub
push
mov
sub
xchg
jmp
or
shl
push
shufps
sti
andl
cmp
push
pop
sbb
mov
mov
and
or
push
mov
aas
jmp
jno
sarb
mov
in
dec
sub
push
js
arpl
mov
push
cmp
aaa
pop
push
loopne
inc
cmp
push
lods
adc
or
mov
pop
aad
pop
mov
mov
inc
movsb
cmp
inc
fiadds
xor
loop
adc
std
jp
jnp
and
adc
out
sub
shrb
nop
mov
push
inc
sub
pop
stc
cmp
or
jl
in
push
sbb
icebp
jl
inc
imul
and
fdivrs
data16
stos
shlb
insb
lcall
lds
movl
push
adc
addr16
mov
test
mov
pusha
jne
pop
aaa
sahf
call
test
lret
cli
roll
jecxz
mov
imul
cwtl
push
push
out
icebp
cld
inc
or
popf
jl
and
jae
sbb
xchg
rorb
and
cli
pop
jl
ljmp
movsb
inc
cltd
test
jb
ret
ret
stc
or
pop
sub
lret
fs
adc
mov
mov
dec
add
addr16
or
in
dec
mov
add
cli
dec
enter
mov
pop
stc
sahf
lcall
mov
outsb
insl
jg
jb
sub
lret
shlb
xlat
addr16
xchg
jecxz
xor
mov
addr16
inc
fidivrl
icebp
testb
add
adc
and
sub
ret
jo
pop
xor
sbb
mov
lret
inc
clc
push
test
aam
sub
pop
mov
jmp
fwait
insb
sbb
shr
jmp
mov
mov
push
push
xor
mov
hlt
mov
push
cs
push
xlat
mov
and
fnop
jbe
andl
movsl
push
and
test
addr16
pop
pop
push
les
pop
pop
fistl
loopne
icebp
sbb
jecxz
ja
insl
mov
or
mov
and
pop
sbb
pop
mov
outsl
push
and
jno
mov
pop
sysret
pop
mov
fs
dec
pusha
pop
cmpl
or
mov
xchg
stos
popf
mov
cmp
dec
aad
roll
push
sub
dec
fnstenv
pop
sub
fcom
or
mov
sbb
add
test
jo
sub
and
push
or
xorl
xchg
mov
sti
mov
movsl
ret
or
mov
fildl
stc
sbb
into
pop
add
ret
out
mov
insl
cmp
stos
pop
push
xor
push
test
imul
repz
push
lret
inc
jb
push
jno
sbb
test
sti
fcomps
push
clc
inc
arpl
sbb
jbe
lods
fdivs
cmp
adc
adc
sub
xor
pushl
adc
sub
mov
notb
or
sbb
lea
das
jecxz
xor
ja
xchg
repnz
hlt
adc
lods
jecxz
aam
dec
les
lock
jl
xchg
mov
xlat
pop
sarl
fbld
mov
push
fsubrl
push
xor
rolb
aam
test
mov
sahf
ja
xorl
xlat
adc
pop
movsl
cmp
ret
jecxz
fstpl
lods
push
inc
and
xchg
add
mov
aaa
and
or
push
lock
sbb
sub
sti
fidivl
dec
cli
add
mov
push
sub
or
arpl
stos
push
cli
cs
mov
xor
aam
pop
jnp
sbb
xchg
sbb
sbb
mov
js
mov
in
xchg
inc
insb
adc
lock
xchg
mov
or
mov
xchg
push
lcall
imul
ds
add
out
pop
filds
outsb
mov
and
and
leave
imul
jmp
divb
mov
push
jl
dec
sub
jmp
inc
shrb
fcmovb
add
mov
or
rcl
sub
xor
inc
xchg
sub
jmp
pop
jge
loopne
sub
or
aaa
ret
cltd
cmp
cwtl
push
xor
mov
sarl
fs
mov
lods
mov
jecxz
pop
int
xchg
xlat
cmpb
and
fldpi
in
adc
inc
aaa
push
xor
jmp
cmp
adc
push
addr16
adc
lret
mov
movsl
jmp
fwait
inc
push
jg
xchg
lods
fs
pop
out
fs
mov
ss
sbb
bound
cmp
mov
xchg
adc
adc
jo
mov
data16
lcall
stos
and
sub
rcrb
sub
insl
pusha
push
popf
mov
mov
dec
addw
push
mov
scas
scas
mov
hlt
shrb
sub
pop
divb
and
xchg
scas
into
xor
es
push
adc
adc
aad
inc
maskmovq
push
jmp
push
adc
imul
jne
cmp
loopne
sti
add
fadds
ret
dec
sbb
addl
xchg
loop
sub
cmp
pop
lock
inc
and
push
mov
jl
jne
sbb
hlt
cmp
lret
xor
cs
push
pop
frstor
cld
out
mov
repnz
gs
adc
dec
mov
inc
test
add
int3
sbb
dec
fidivrl
add
loopne
cmp
add
stos
cltd
clc
adc
cli
lahf
pop
ret
add
pop
pop
scas
in
mov
ret
xchg
fisubrs
mov
mov
std
lds
jmp
inc
jg
add
pop
cmpsb
pusha
inc
push
push
int
insl
out
xchg
and
push
popf
cltd
imul
lcall
fnstsw
jns
lock
mov
pop
test
mov
add
and
xlat
imul
stos
sbb
je
addr16
out
or
lock
sbb
push
lret
xchg
sub
adc
jbe
lret
xchg
in
pop
sub
mov
mov
cmp
mov
inc
and
orl
jne
lret
dec
ja
fstl
out
adc
leave
hlt
leave
mov
cmp
ret
add
into
jl
stos
andl
and
mov
jp
mov
adc
cmp
loopne
aas
mov
push
pop
pop
fs
or
vmwrite
stos
popa
clc
scas
lret
lods
sub
pop
jb
aad
jmp
xchg
aas
jne
cmp
mov
dec
in
in
xor
aaa
or
xchg
or
loopne
push
or
leave
add
mov
int3
test
dec
inc
jne
mov
inc
loope
xor
or
sub
and
xor
or
clc
insl
notb
jge
hlt
clc
cmc
dec
and
inc
cmc
pop
push
push
repz
imul
in
hlt
hlt
sbb
sbb
push
or
xorl
pusha
jg
fwait
inc
mov
cltd
bound
mov
mov
pop
sbb
dec
jp
and
cmp
push
sbb
mov
les
jo
in
leave
and
loopne
inc
pushf
or
xchg
and
dec
into
inc
dec
insb
mov
adc
test
add
hlt
sub
cmpsb
out
out
jbe
aam
or
and
push
push
jge
dec
insb
fs
repnz
xchg
cmp
scas
jmp
data16
mov
int3
lods
outsl
in
fwait
mov
and
inc
mov
xor
test
xchg
jns
pop
or
push
xor
push
sbb
jns
iret
or
orl
xor
add
mov
jne
adc
pop
pop
or
push
cmp
cwtl
or
jb
xchg
ror
mov
push
aas
xor
int3
ss
shll
push
incl
fs
mov
out
cmp
push
push
in
sbb
or
or
jmp
lods
inc
xchg
test
xor
std
add
mov
lods
cmp
fidivrs
bound
mov
shll
sbb
pop
fmuls
inc
lock
lods
xor
popa
lods
mov
sbb
popf
test
pop
push
mov
jns
or
aas
pop
pop
dec
pop
pushf
imul
jle
mov
repz
or
xor
icebp
mov
mov
es
into
jl
movsl
int
push
or
inc
push
rcrb
fldt
xchg
sahf
test
xlat
std
jecxz
sub
lret
shlb
pop
addr16
nop
loope
adc
stos
mov
insb
mov
imul
je
repz
inc
jge
cli
push
cmp
in
dec
pop
outsb
loope
adc
jmp
lock
xchg
inc
cmp
lea
fdivs
imul
mov
int3
out
popf
stc
inc
mov
xor
sahf
imul
imul
scas
sbb
mov
dec
xrelease
mov
fmuls
int3
or
jno
mov
push
repnz
cmp
xor
fdivl
push
cli
push
lds
jo
jle
or
movsl
lret
test
xchg
mov
repnz
std
mov
scas
push
mov
std
subb
out
insb
push
ljmp
adc
dec
addr16
fmul
wrmsr
inc
inc
rol
mov
ret
repnz
dec
mov
sbb
cmc
pop
mov
lds
cltd
jmp
fsubrp
push
mov
mov
push
or
js
inc
mov
ljmp
lods
adc
ja
arpl
xchg
push
iret
dec
outsl
xor
dec
pop
ljmp
loop
sub
mov
sbb
sahf
push
je
adc
inc
cs
add
andl
adc
xchg
xchg
adcb
mov
ret
imul
mov
pusha
ret
fistl
ljmp
aas
out
mov
jb
xlat
mov
fisubs
cmp
dec
mov
pusha
unpckhps
cli
push
out
insb
lahf
arpl
mov
jge
fstl
push
cmp
cmp
aas
in
xchg
xor
push
clc
mov
enter
jbe
push
sbb
or
cmp
jb
add
and
test
imul
daa
mov
js
sbb
nop
pusha
jne
aas
xor
and
ret
dec
mov
scas
xchg
cli
xor
insb
mov
adc
test
ss
aam
push
mov
in
pop
fidivl
in
mov
inc
loopne
cmp
stos
test
xor
mov
mov
or
cli
xchg
sbb
inc
ds
roll
xchg
and
lret
or
add
icebp
inc
cltd
insb
cmp
push
shrl
mov
xchg
mov
push
mov
fbld
or
in
mov
loop
pusha
out
jecxz
and
and
rcll
addr16
mov
mov
adc
rolb
fdivl
movsl
mov
add
roll
rcll
sub
insl
push
lods
cmpsb
jmp
aad
jae
loope
and
mov
or
inc
dec
aad
into
pop
xchg
fidivs
mov
inc
xchg
mov
cli
pop
lods
insb
push
out
pushf
jne
mov
or
fwait
cmp
loope
fisttpll
sub
sarl
les
repnz
test
push
push
push
inc
stc
lcall
mov
fisttpl
int
pusha
jb
inc
movsl
leave
mov
nop
inc
cmp
lretw
dec
imul
dec
mov
push
jno
mov
lods
dec
push
dec
test
mov
mov
fcoms
hlt
or
jmp
mov
mov
xor
mov
adc
cmp
mov
push
loope
or
lcall
adc
push
jmp
xchg
hlt
mov
cmpsl
push
dec
dec
in
aam
lds
fs
fcomp
das
lds
clc
outsl
and
les
and
stos
dec
fdiv
jle
nop
ffree
pop
mov
dec
imul
ds
pop
iret
jg
pop
mov
xor
and
sbb
daa
movsb
pushf
fisubrl
arpl
mov
mov
movb
adc
or
sub
cmpsb
inc
mov
ds
dec
nop
xlat
loopne
out
jecxz
scas
xlat
in
cmp
cmp
test
xor
sbb
arpl
pushl
mov
xor
xchg
mov
or
ss
ss
mov
lret
sti
call
and
addb
pop
mov
in
out
testl
push
loop
push
mov
inc
and
mov
mov
fnstcw
dec
mov
jno
xor
sbb
push
mov
in
jmp
jp
loop
add
xchg
rcll
imul
pop
mov
pop
cwtl
xchg
hlt
add
sub
push
mov
sub
ficoml
test
fs
lret
add
or
add
mov
out
out
stos
sub
or
mov
lods
fistpll
cltd
jae
mov
pop
stc
dec
mov
iret
and
fsts
jno
sti
fnstsw
mov
sub
outsl
cltd
mov
adc
inc
ret
out
mov
popf
popa
jp
or
aas
dec
and
mov
or
cmpsb
in
pop
or
imul
jle
push
repnz
adc
jbe
push
jge
or
push
xchg
and
or
fdivrp
jp
insb
test
dec
and
fistpl
fistl
stc
mov
shlb
xchg
cmpb
mov
add
or
mov
bound
xor
jne
inc
sub
jo
test
cmpsb
add
mov
in
inc
jl
test
jp
cwtl
push
mov
sub
outsl
shrl
sti
jge
push
sub
cmp
fiaddl
sti
xor
jae
xchg
add
movsl
popl
mov
mov
or
xchg
sbb
cmpl
push
cmp
cmc
add
out
test
ja
mov
pop
or
lods
pop
movsb
mov
xchg
insb
stos
mov
icebp
cmpsb
packsswb
in
sbb
xchg
inc
inc
leave
jl
xchg
popa
dec
pop
mov
jo
ja
mov
int
out
adcb
xchg
dec
aas
push
push
ret
rclb
aam
shrb
push
rorl
stos
inc
je
mov
enter
inc
scas
push
dec
enter
add
adc
push
int3
lcall
jmp
js
lds
cmpsb
xor
jg
aaa
dec
mov
mov
daa
data16
aam
loopne
push
es
data16
pushl
dec
jae
xchg
into
test
jl
jbe
sahf
jl
mov
ss
sub
pop
in
into
cli
gs
call
sub
jno
jno
adc
arpl
sbb
mov
push
pop
addb
icebp
data16
inc
enter
mov
and
icebp
pop
int3
mov
pusha
sub
ja
jb
daa
shl
pop
mov
shrb
in
push
or
xor
push
fdivr
popa
dec
les
fildl
clc
cmc
mov
leave
mov
call
xchg
mov
push
jns
push
push
dec
test
push
rcl
pusha
mov
cmpsl
mov
lds
jnp
dec
cld
fwait
pop
and
push
mov
subl
loopne
fstpl
pop
bswap
inc
sbb
xchg
xchg
dec
cld
push
fnstsw
dec
cmp
add
xor
cmp
pop
jo
repnz
int
cmp
cmp
mov
divb
mov
sub
sub
movsb
andb
mov
mov
mov
push
inc
sbb
sbb
insl
ffree
aas
cmp
add
xchg
mov
mov
xor
outsb
dec
mov
addl
imul
jecxz
les
cltd
test
mov
cmp
dec
enter
push
scas
popf
negb
outsl
push
jp
xchg
std
xor
in
pop
push
mov
xlat
cli
cltd
xchg
fildl
lods
mov
jae
test
mov
rclb
adcl
fstpt
pusha
add
dec
andl
cmp
mov
pop
xor
dec
fsubrs
push
push
sub
test
out
das
pop
lcall
pop
movlps
adc
out
ja
mov
arpl
mov
lock
jne
inc
or
mov
ss
mov
or
add
out
inc
sarb
pop
lcall
mov
loope
or
dec
js,pn
dec
insl
int
sarl
or
mov
sub
mov
das
jnp
mov
or
cmc
and
xchg
push
dec
mov
inc
sbb
sub
repz
xchg
sub
or
fcmovne
sti
pusha
pushl
lock
sub
lods
aaa
jle
add
xor
sarb
sub
sbb
adc
or
push
cmp
and
int3
or
push
mov
xchg
cmpsb
mov
pop
xlat
loop
inc
mul
jns
data16
jb
ss
addr16
dec
mov
mov
and
mov
dec
push
cwtl
repnz
imul
push
and
lret
clc
jmp
xchg
iret
sbb
jg
cmp
xchg
ffreep
loopne
testl
xor
mov
shll
and
or
out
xchg
test
mov
paddq
rorb
adcb
mov
decb
jecxz
sbb
cvtpi2ps
pop
xchg
je
orl
push
adc
cwtl
in
out
push
cmc
mov
push
popf
rcrl
dec
adc
xchg
shrl
add
dec
iret
aaa
aaa
ficomps
cmpsl
cmp
ret
ss
outsl
gs
mov
stc
aad
stc
popf
adc
jno
fs
or
cmp
fs
lods
cld
adc
push
mov
lock
stos
ss
fistpll
es
or
aam
nop
cmp
cli
mov
xchg
add
arpl
sbb
push
aam
add
mov
xor
jmp
sbb
cli
movsl
mov
nop
fstpt
push
dec
test
xchg
shrb
mov
sahf
mov
push
push
roll
movsb
push
cmovno
cmc
sbb
jns
insl
aas
add
daa
xchg
loopne
ss
xor
sbb
xor
mov
pop
aas
and
dec
fdivl
lds
cmp
ja
shlb
sahf
cmp
mov
or
loope
ljmp
fwait
push
mov
lods
pop
or
ja
nop
cltd
push
add
lods
test
sarl
xor
fsubs
lahf
fucom
add
mov
mov
adc
loop
and
xchg
xchg
jmp
loope
sbb
xchg
inc
pushf
push
xor
ja
popf
xor
aad
int
into
testb
scas
mov
xchg
mov
jg
data16
fmuls
jecxz
jnp
sub
jmp
mov
in
xchg
or
sub
xchg
imul
out
push
testb
ja
jg
mov
andl
xchg
mov
rorl
pop
pop
xchg
stos
sahf
cltd
or
bnd
cltd
mov
mov
dec
mov
mov
iret
clc
loopne
rcl
fs
pop
lret
fimull
mov
xchg
mov
cmpsb
out
popf
ret
ljmp
inc
and
and
push
sarb
add
in
iret
loopne
rcll
rorl
nop
loope
sub
test
shlb
js
jne
mov
lret
sahf
ljmp
stos
out
jno
test
or
xchg
loop
add
pop
sbb
add
mov
xor
daa
fidivrs
and
imul
loope
stos
jg
xchg
test
mov
xor
cmc
sub
jecxz
sub
scas
push
das
fs
jge
push
stc
in
inc
adc
test
mov
pushf
lods
or
sub
roll
cmp
xor
dec
cwtl
or
les
shl
jo
or
call
mov
add
in
inc
mov
mov
gs
mov
push
mov
outsl
sub
ss
jmp
sub
jg
xor
insb
daa
aaa
jecxz
out
into
mov
subl
orl
lahf
movsl
mov
or
jle
sbbb
out
jb
xor
cmp
gs
mov
sbb
lahf
sub
fidivs
add
and
mov
daa
fnstcw
pop
sub
push
cwtl
addr16
dec
enter
das
jno
sbb
or
pop
add
jecxz
aas
movsb
sub
xor
dec
xchg
dec
inc
push
push
test
or
cmp
insl
ret
push
gs
shrb
inc
pusha
cmp
sbb
push
jo
sbb
and
mov
inc
dec
jmp
iret
xchg
pop
iret
test
mov
in
pop
sahf
shrl
fdivl
into
xchg
mov
mov
cs
clc
daa
xor
hlt
test
stc
pop
jecxz
cmc
xchg
cltd
inc
push
in
jbe
push
fs
imul
sbb
push
pop
loopne
or
lds
mov
jae
repnz
cld
sbb
sub
mov
inc
es
push
mov
lods
popf
mov
ret
enter
in
subb
adc
mov
and
ret
decl
mov
fidivl
imul
lcall
cwtl
iret
xchg
jmp
js
mov
dec
das
pop
sbb
mov
rcl
mov
cmpl
lea
cmp
pop
mov
xor
inc
cmp
test
mov
fs
mov
mov
pusha
fiaddl
pop
push
pushf
ja
cmpsl
lds
fisttps
scas
jp
negb
ficomps
xchg
add
enter
sbb
into
roll
leave
xchg
in
pop
and
mov
and
pop
inc
mov
insl
gs
push
xor
data16
loope
or
sbb
xor
jl
and
nop
pop
stc
jg
sbb
xor
mov
ljmp
mov
mov
dec
fcoml
xchg
lea
inc
lds
shl
movsb
xor
mov
pop
dec
pop
cld
ds
incl
pushw
pop
dec
in
ds
insb
sbb
inc
sub
adc
mov
adc
fcompl
scas
push
pop
inc
pushf
icebp
ljmp
xchg
xor
xchg
mov
mov
aas
pop
outsl
cmpsl
add
mov
push
and
push
aam
pop
faddl
push
in
stos
int
push
sub
sti
mov
sti
aam
into
pop
lcall
pop
stos
mov
dec
movsl
out
aam
and
movsl
mov
test
in
fcmove
xor
cmp
cmp
roll
push
int
xchg
inc
push
ficompl
cmp
xor
pop
flds
insb
push
ret
scas
xchg
loope
mov
stos
insl
pop
inc
lahf
push
adc
mov
aaa
movsl
mov
pusha
inc
lea
inc
mov
lcall
sti
and
out
mov
jno
stos
scas
and
mov
push
fs
sbb
mov
divl
fcomps
jns
pop
dec
fistl
sbb
jl
dec
lods
popf
pop
loop
push
jb
cmp
mov
icebp
and
jl
or
pop
sahf
push
cmpsl
xlat
lcall
cmp
stos
pop
rorl
jae
mov
xchg
dec
cmpsl
inc
out
je
xchg
ss
fldenv
mov
push
cmpl
sbb
fldt
or
xchg
cs
mov
jmp
sub
push
xor
inc
fisubs
mov
shrl
loope
fildl
ds
aaa
ja
sub
aaa
sarb
jmp
add
gs
jp
ret
stc
dec
movb
or
add
insl
push
and
lock
cmpsl
leave
xchg
cmpsl
test
cmp
mov
adc
cmpsb
outsl
inc
stos
adc
test
xor
pop
jecxz
sub
dec
repz
lods
int3
push
mov
xchg
pop
pop
stos
addr16
imul
sahf
mov
arpl
pop
insb
dec
cld
shll
testb
fld
mov
cmpb
mov
in
mov
jb
jg
shll
push
test
or
adc
adc
mov
iret
gs
ds
cmc
fisubrl
mov
mov
out
inc
scas
jmp
jno
xchg
and
jno
xor
jecxz
rorl
stos
popa
sbb
jp
lcall
aas
pop
call
xor
das
leave
scas
mov
out
xor
push
ljmp
push
test
add
inc
mov
jo
cmpsl
push
aam
and
push
mov
mov
popf
out
subb
pop
xchg
and
js
pop
push
mov
jl
sub
mov
inc
loope
lcall
nop
leave
testl
xchg
stos
out
xchg
adc
xchg
rorb
sub
mov
cs
imul
rolb
adc
pop
ficoml
testl
stos
cltd
inc
cltd
mov
add
mov
enter
mov
sbb
jp
mov
loopne
dec
cwtl
push
ljmp
rorl
jl
mov
pop
out
inc
inc
and
fdiv
subl
pusha
sbb
dec
jnp
xor
push
mov
mov
adc
loope
jle
loopne
in
imul
aas
pop
and
imul
fisubs
cmp
sub
out
scas
fwait
cmc
xchg
fbld
mov
cmp
push
inc
rcrb
xchg
hlt
out
mov
push
je
popf
mov
cmp
mov
xor
scas
inc
dec
inc
xor
addb
pop
rcl
jnp
inc
pop
dec
adc
or
fsub
stos
rclb
aam
test
ret
outsl
fneni(8087
pop
shr
mov
addr16
xchg
add
adc
jecxz
shrb
mov
jmp
add
out
ja
iret
mov
and
test
or
aad
push
imul
out
cld
sbb
popa
cmp
jae
fdivl
std
mov
and
cmpsb
cmpsb
rolb
mov
mov
imul
imulb
jge
popa
sti
push
sbb
and
cmp
pop
addl
xchg
int3
sub
add
or
xchg
jg
push
mov
pop
out
pop
jmp
or
cmp
xor
pusha
inc
cmpsl
sbb
and
shr
cmp
xlat
ds
or
popa
xor
lahf
sbb
mov
and
mov
xor
into
mov
aad
xlat
scas
mov
cmp
out
xchg
sbb
mov
and
cmpsb
lock
xchg
movsb
xchg
incb
cmpsb
loope
push
ss
leave
mov
xor
jmp
xchg
xlat
inc
cmp
sti
out
testl
push
dec
sbb
mov
repz
and
popa
bound
xor
test
jb
lods
lret
loope
pop
dec
das
outsl
sbb
in
insl
adc
jb
xor
jbe
shll
out
add
xchg
mov
mov
xchg
sbb
xchg
imul
pop
mulb
dec
mov
out
das
sbb
adc
lret
fxch
mov
in
lock
fsubrl
sti
sbb
push
pop
cmpsb
adc
mov
stos
clc
aas
aaa
and
adc
and
rcrl
out
sbb
inc
lret
sahf
push
push
arpl
pop
mov
icebp
stos
mov
push
into
mov
jb
add
fistps
mov
jbe
add
fbstp
std
clc
inc
outsb
pop
in
gs
js
dec
and
sti
mov
xchg
add
jmp
dec
les
push
movsb
rcr
clc
pop
fcoml
sbb
pop
jl
daa
mov
iret
and
imul
cmc
lret
lret
inc
decl
andb
sarl
and
addr16
pop
inc
enter
jns
and
jecxz
cwtl
je
lcall
in
clc
or
nop
cmp
push
faddp
mov
fisubrs
sub
testb
ljmp
push
test
push
cwtl
jne
lcall
test
xchg
or
scas
inc
mov
out
mov
cwtl
bound
es
xor
bound
jbe
fnstcw
pop
xor
mov
mov
rolb
jecxz
jl
js
xor
xor
sub
or
add
mov
arpl
in
push
inc
or
sub
loope
and
shl
rorb
sbb
fcmovbe
jmp
cld
add
lds
mov
imul
movsl
rcrb
sti
pop
ret
out
inc
jno
and
inc
mov
xchg
jg
dec
xchg
mov
mov
add
les
mov
dec
or
adc
jns
mov
mov
mov
push
popf
jno
pop
xlat
push
leave
mov
int3
or
je
sbb
in
add
fstpt
add
pushf
or
adc
mov
iret
jge
mov
xor
in
mov
scas
pop
sbb
push
movsb
pop
in
or
mov
ljmp
cmpsl
daa
negl
int3
mov
rclb
mov
xor
jne
xchg
mov
mov
ja
xchg
rcrb
sub
dec
mov
lea
in
shrb
jg
aam
sbb
pop
cmc
jecxz
mov
rorb
jmp
lods
mov
xchg
xor
in
mov
cmp
lret
popf
int
pop
stc
nop
out
xchg
and
dec
prefetchw
or
lcall
lcall
pop
push
pop
ss
std
cli
out
cmpsb
cltd
lds
jg
pop
jp
pop
inc
xor
and
mov
adc
add
pop
jmp
ds
mov
push
and
bound
pop
inc
add
pop
ss
scas
mov
mov
in
jbe
sbbb
jae
xor
pop
mov
xlat
jno
lea
and
fs
push
adc
in
addr16
mov
xchg
cli
or
mov
dec
test
add
and
lds
add
pop
cmp
push
popl
sub
xor
andl
andl
fwait
jae
adc
and
jg
scas
div
or
xor
jmp
mov
adc
mov
adc
sub
into
push
xchg
test
fsubl
dec
stc
movsl
mov
xchg
cmp
pop
fcom
aas
nop
cltd
mov
fstps
mov
out
icebp
mov
xchg
fsub
cmp
add
xchg
icebp
add
add
aam
in
filds
and
stc
and
jo
push
incl
push
mov
insl
in
cmp
inc
lahf
sbb
popf
clc
out
fucom
scas
jo
adc
mov
stos
rorb
lahf
sbb
mov
mov
adc
insl
pop
sub
movsb
scas
in
outsl
jp
lret
dec
push
push
test
dec
mov
lock
cmp
out
out
push
jle
std
repnz
out
or
into
and
lds
mov
rcrb
mov
div
add
sub
jge
popa
js
jecxz
out
jmp
or
nop
jg
push
sub
cli
flds
addb
push
mov
pop
inc
mov
jp
jg
insl
in
sahf
push
in
lods
or
mov
jno
into
stos
mov
pushf
in
out
jne
cmp
pop
repz
xor
adc
sub
adcl
mov
cs
or
mov
jb
out
mov
mov
fsts
jo
pop
shrb
out
into
jae
adc
cmp
sbb
sub
jmp
enter
fadd
xlat
fimuls
cmp
push
cmp
lret
mul
push
shll
cmpsl
or
jno
xchg
mov
movsb
dec
mov
dec
cmp
pop
push
xchg
dec
int
pop
adc
aad
pushf
and
pop
pushf
dec
xor
and
push
inc
mov
xchg
int3
adc
jg
inc
jbe
adc
insb
lds
push
pop
leave
icebp
mov
and
ret
xchg
ficomps
jle
rcll
add
inc
cmc
pushf
stos
insl
mov
stos
pop
mov
cmp
rcrb
fistpl
and
add
cltd
hlt
das
sub
mov
outsl
mov
int
sub
jl
xchg
notb
mov
test
mov
scas
daa
dec
add
add
dec
jecxz
and
aam
push
cmpsl
pop
mov
outsl
pop
push
jb
popa
shrb
mov
xchg
jmp
and
outsl
mov
mov
lds
enter
ret
push
sbb
jns
dec
into
jno
or
cmp
fdivrl
out
xlat
add
xchg
push
add
dec
mov
fwait
add
movsb
mov
jo
push
and
and
dec
and
jo
scas
mov
dec
xor
cwtl
inc
movsb
popf
adc
mov
shl
mov
jns
in
ret
clc
movsl
xchg
orl
xor
mov
pop
ret
sbb
fwait
and
cmp
jmp
push
adc
jb
aam
fcmovb
pop
shlb
mov
mov
scas
push
das
in
mov
lds
sub
jno
pusha
push
jo
inc
popa
in
aas
dec
add
xchg
stc
mov
push
or
fiadds
adc
cmp
sub
andb
mov
inc
js
pop
jl
out
out
iret
jle
dec
mov
jg
mov
shr
pushf
fistpll
repz
mov
xor
or
mov
lret
lcall
cs
hlt
cltd
dec
dec
jg
pop
fistl
add
push
les
popa
cmp
lret
int3
cld
dec
int3
ret
push
xchg
mov
loope
icebp
dec
xchg
fldt
xor
sub
or
cld
xor
push
fs
stc
xor
add
shr
scas
jo
mov
scas
xchg
xor
sub
enter
mov
ficomps
loopne
push
jle
xor
mov
xchg
mov
inc
outsl
call
mov
mov
aaa
inc
pop
stc
inc
je
add
subb
and
cltd
je
cmp
arpl
nop
mov
subl
pop
jg
loope
sbb
out
jno
cmp
jp
sahf
fcoml
ds
mov
insb
je
and
adc
rcrl
shl
or
es
sub
push
stos
fnstsw
xor
and
add
xchg
es
lcall
es
rcll
test
iret
push
cmp
dec
xor
repnz
pop
insb
xchg
sub
pop
cwtl
mov
add
inc
psrlw
ljmp
fidivrs
stc
inc
pop
cmp
scas
mov
movsb
dec
inc
mov
imul
dec
jg
sbb
sbbb
sbbl
sahf
rcrb
in
jmp
adc
sbb
scas
mov
gs
mov
sub
es
dec
or
jnp
cwtl
or
int3
rclb
dec
inc
cmc
lds
lea
xor
rorl
hlt
jmp
xchg
push
test
pop
addr16
mov
cmpl
adc
std
cwtl
adcb
rol
sbbb
push
into
add
mov
dec
sarb
fsubl
rcl
pop
push
jmp
mov
pop
test
ja
jge
mov
mov
jmp
into
jg
in
dec
test
pop
dec
pop
xchg
and
loopne
or
cli
ss
xchg
or
nop
and
sbb
adc
fsts
clc
inc
push
test
pop
into
out
sbb
mov
cmpsl
clc
add
sbb
aam
je
repnz
les
cmp
xchg
or
pusha
call
mov
pop
in
and
cwtl
cmp
cld
mov
cltd
dec
mov
mov
mov
nop
outsb
and
fldcw
push
loope
and
mov
push
popa
addr16
push
cltd
inc
add
int
addb
into
negl
xor
jle
insb
jno
out
xlat
xchg
cs
pop
mov
pop
out
pop
mov
leave
ret
daa
sub
testb
xor
xchg
mov
fsubrp
daa
adc
in
mov
sbb
mov
fistpl
jb
decb
xor
sbb
lds
xchg
mov
lock
in
cmp
mov
int
sub
cmp
das
add
std
jecxz
xor
mov
push
lret
sti
jae
jno
mov
mov
cmc
push
sbb
cs
orps
out
adc
test
jo
mov
and
xchg
push
dec
sahf
or
out
leave
sbb
cmp
pop
and
push
mov
aaa
mov
mov
push
adc
jne
subb
loop
out
push
cltd
pop
jnp
loopne
add
fidivl
movsb
push
push
or
mov
inc
idiv
daa
cmp
xchg
inc
cmc
loopne
dec
pop
lods
adc
movsl
mov
mov
push
lcall
jnp
add
inc
pusha
push
or
bound
js
push
or
ret
imul
jnp
cmpsb
popf
inc
cmp
js
mov
cmc
jb
jae
cmp
cmpsl
fistl
xchg
sub
push
aas
es
pop
mov
test
cmp
sub
mov
xchg
cwtl
cmp
sub
in
stos
sub
enter
imul
add
xchg
outsb
sub
mov
push
jecxz
repnz
call
mov
js
xchg
jge
add
and
jns
jp
outsb
test
fnsave
in
leave
jle
mov
shll
stos
pop
cmp
add
mov
std
push
insb
pop
aam
jbe
dec
sub
movsl
mov
jnp
loop
xlat
xor
mov
jno
adc
xchg
ret
fsubl
sbb
mov
cwtl
pusha
pushf
add
cmpsl
pop
dec
sarl
out
iret
in
stos
data16
or
pop
and
inc
loop
and
jle
adc
sbb
sbb
roll
andl
push
cmp
jmp
mov
inc
fisttpl
add
test
xchg
xor
addb
ja
cmc
mov
test
xor
dec
cmp
out
je
pushl
dec
inc
sbb
int3
idivb
mov
jecxz
lahf
xchg
jecxz
xchg
add
and
imul
js
mov
and
xor
setp
and
fsubs
xchg
sbb
inc
loope
or
cmp
movsl
xchg
movaps
mov
popf
mov
cld
jmpw
testl
mov
addl
adc
jl
rol
and
icebp
cmpl
loopne
cmpsb
js
insl
test
ss
sbb
jnp
push
cmpsl
jmp
data16
adc
gs
outsb
pusha
adcl
jl
repnz
lods
mov
and
data16
jb
cmp
xor
pop
jecxz
shll
dec
pop
ret
or
ret
lahf
cli
and
dec
inc
lock
fsubl
arpl
xchg
dec
rolb
xchg
outsb
std
mov
or
loopne
cmp
rorb
push
lahf
push
xlat
leave
jo
jbe
sub
cmp
cmp
mov
stos
cld
dec
mov
shlb
aaa
mov
add
iret
andb
nop
aam
shll
in
and
fcompl
lret
xchg
dec
jne
incb
add
mov
repz
jmp
mov
repz
xor
rclb
sub
ret
stc
and
mov
mov
mov
sbb
adc
mov
mov
lea
lcall
pop
lock
mov
daa
inc
xchg
adcl
sub
jnp
mov
int
sub
dec
add
leave
hlt
das
push
mov
inc
push
fmul
cmp
pop
cmp
fmul
std
aas
dec
push
and
lahf
test
test
xor
clc
movsb
stos
out
lea
push
scas
sub
xchg
sub
sahf
xor
icebp
xchg
ret
or
inc
addl
adc
jecxz
sti
push
repz
and
sub
and
lcall
data16
lds
fidivs
jo
cmc
outsl
neg
mov
shll
out
push
icebp
mov
or
movsb
pop
lea
jge
sub
test
xchg
dec
fldl
sahf
cli
dec
lock
mov
cltd
or
push
arpl
dec
imull
fsubl
es
rorb
or
pop
rolb
out
dec
paddd
cmp
mov
imul
adc
sub
xchg
aam
push
adc
jg
push
cld
or
mov
lods
fwait
mov
push
adc
cmp
jne
stos
sub
sbb
cmpsl
xchg
les
enter
push
inc
xlat
mov
mov
cmpl
inc
and
ds
int
xchg
subl
sub
or
int3
enter
movhps
jb
push
pop
push
mov
sbb
icebp
mov
mov
sbb
out
adc
sbb
sbbb
ja
and
icebp
addr16
mov
cs
pop
sbb
hlt
push
mov
jno
mov
dec
mov
xor
imul
xchg
je
fwait
xchg
scas
imul
leave
jnp
fbld
or
or
dec
jae
jle
xchg
dec
ret
push
cmp
jle
ljmp
inc
dec
pushf
cmp
fcmovnu
push
xor
test
out
outsb
dec
xchg
lock
bound
clc
jo
mov
orb
pushl
add
mov
jl
sbb
out
imul
mov
mov
sbb
inc
movsl
popf
pushf
icebp
sub
mov
outsl
adc
call
push
mov
jno
dec
xchg
shll
push
mov
push
fs
xor
or
mov
rcrb
pop
mov
cmp
cmova
hlt
cmp
imul
jl
mov
sbb
adc
cmp
stc
jecxz
subb
sub
scas
repz
mov
inc
sbb
or
jo
repnz
in
aam
sub
negb
rorb
icebp
pop
bnd
mov
push
loopne
sbb
sbb
pop
sahf
mov
inc
xor
movsb
add
xlat
cs
mov
loope
call
sub
arpl
or
and
test
cmp
push
mov
inc
sahf
ss
cmc
int
andb
addl
rsm
pop
cmp
push
mov
andl
inc
insb
fldt
out
stc
pusha
repz
ds
push
dec
inc
lods
mov
aam
int3
testb
jb
sub
nop
int3
es
es
stos
jno
stos
adc
push
sbb
scas
sub
push
cmc
jmp
mov
push
xchg
inc
push
call
sub
sahf
dec
xchg
jae
mov
add
lods
xchg
push
or
pusha
cli
stos
xlat
jg
push
and
cwtl
xor
jl
out
lea
movsl
xchg
xchg
mov
adc
dec
and
repz
or
pusha
fiaddl
mov
lods
mov
mov
fdecstp
dec
popa
cltd
cmp
cmpsl
shll
inc
mov
sarb
or
divb
arpl
test
pop
arpl
mul
push
iret
jmp
cs
std
sbb
jp
or
and
sbb
mov
pushf
push
and
mov
popa
pop
clc
dec
mov
lock
sbb
les
or
cmc
inc
add
dec
and
aaa
orl
inc
mov
mov
ret
mov
in
data16
jb
or
cmpl
and
mov
pop
fs
inc
add
adc
out
or
imul
addr16
jmp
clc
lods
test
mov
xor
sbb
mov
testl
in
mov
repnz
loope
xor
enter
pusha
stos
lret
push
add
jecxz
inc
xlat
jecxz
mov
sbb
bound
fucomi
mov
cli
fs
xchg
cmpl
push
insl
in
int
nop
sahf
lea
or
dec
out
mov
outsb
pop
test
xor
push
mov
loopne
je
or
dec
mov
push
push
std
mov
adcb
or
or
ret
inc
inc
add
scas
test
add
or
pop
lea
jnp
out
es
push
fcoms
push
dec
mov
bound
or
mov
ljmp
call
mov
and
mov
sub
mov
imul
stos
mov
popf
xchg
sub
cmp
lret
add
lcall
dec
xchg
push
insb
sti
insl
mov
pop
sbb
dec
xor
cmpsl
mov
shll
and
xchg
into
mov
add
test
mov
xlat
ja
arpl
inc
or
bound
lea
add
je
imul
xor
icebp
pushf
repz
popf
loope
sbb
mov
push
je
mov
dec
and
push
and
cli
aaa
std
ja
pop
mov
ljmp
push
or
mov
mov
stc
adc
cmpsl
cli
inc
adc
or
push
test
push
lahf
out
and
std
mov
pop
sub
or
push
or
jb
es
push
fcompl
or
pop
mov
fstl
cmp
fwait
push
sub
addr16
icebp
mov
pop
adc
imul
mov
bound
movsl
test
int
imul
hlt
jne
es
mov
add
insl
fwait
jb
lea
jbe
xchg
test
in
out
inc
mov
sbb
xchg
push
sub
mov
pop
les
mov
xor
pop
adc
lahf
xchg
xor
dec
cmc
iret
pop
xchg
scas
int3
mov
pop
mov
dec
aas
js
out
jg
xchg
pop
sbb
mov
jle
bound
mov
cmpsl
ret
andl
pop
push
inc
or
push
rorb
in
mov
sub
jmp
and
loopne
dec
sbb
mov
cmp
imul
push
stc
cmpb
and
test
xor
repz
jne
adc
mov
out
sub
sahf
inc
sub
jo
add
sbb
aas
je
push
in
shrb
std
lret
arpl
outsb
and
es
das
lcall
push
pop
adc
imul
adc
ja
aas
inc
push
aam
popf
xlat
jl
mov
inc
adc
das
fsubl
dec
sub
fdiv
xchg
out
push
imul
lret
mov
arpl
ret
loopne
test
mov
call
lcall
lods
jmp
mov
push
movsl
mov
cwtl
pushf
inc
pop
scas
cli
sahf
push
stos
dec
push
xchg
dec
insl
jno
loop
sub
or
orb
xchg
xor
push
mov
shlb
hlt
shrb
dec
es
xor
psrld
mov
inc
int3
or
stos
popa
dec
mov
pop
jno
aad
ret
push
push
push
insb
adc
imulb
iret
inc
mov
stc
imul
scas
adc
imul
or
lcall
lret
push
xchg
cmp
cmp
pop
fistpl
dec
dec
push
out
push
adcb
jo
pop
in
lds
ja
jl
pop
scas
or
xor
dec
cli
call
test
out
push
push
loop
scas
daa
xor
push
in
pop
sti
push
insb
sub
in
aas
dec
xor
and
fsubrp
add
adc
cld
dec
fnstenv
les
int3
mov
cmpl
in
or
push
xchg
add
scas
mov
mov
push
push
cmp
or
aas
push
jnp
inc
dec
test
mov
je
loopne
gs
sub
pop
or
dec
add
aaa
jno
das
lcall
cmpsl
rclb
mov
add
test
xor
ljmp
int
inc
xchg
leave
adc
je
ljmp
mov
and
pop
cmp
dec
aam
sub
scas
repz
mov
pushf
cs
or
test
dec
movb
sbb
sbb
and
loope
pop
ret
pop
dec
xorl
mov
in
lods
lock
add
adc
push
adc
shl
jmp
add
or
jmp
ljmp
pop
out
xor
addr16
cmp
sarl
js
ret
pop
aaa
repz
xchg
adc
adc
inc
inc
add
in
aas
repz
push
stos
loop
push
out
mov
sub
inc
xor
inc
fs
mov
jmp
hlt
dec
cli
push
ja
push
push
xlat
sub
adc
inc
lret
pop
jns
pop
out
mov
int
loop
in
and
xor
mov
dec
or
scas
push
outsb
push
lods
ja
aam
orl
nop
nop
push
movl
pusha
outsl
adc
lcall
jnp
add
shrl
mov
loopne
push
xor
add
rcrl
jl
dec
pop
daa
rorb
sbb
and
insl
incb
in
arpl
jle
adc
insb
es
lret
pusha
aaa
imul
mov
ds
jo
repz
test
lret
cld
push
fldl
xor
mov
jp
popf
xor
lods
adc
or
jo
add
pop
jno
xchg
lahf
adc
xlat
lods
aaa
scas
mov
jb
fisubrs
fdiv
push
std
dec
cwtl
dec
scas
cmc
xor
cltd
push
aam
loop
test
ds
pop
nop
jmp
xchg
add
movsb
sbb
xchg
test
mov
scas
dec
stc
cmp
pop
andl
mov
int3
incl
inc
pushf
adc
test
dec
gs
add
call
mov
bound
mov
push
xlat
orb
pushf
xchg
mov
cwtl
ljmp
add
fucomp
outsl
mov
pop
xchg
aaa
pop
xchg
popf
lods
xchg
cmc
inc
mov
and
cmp
iret
add
sub
xor
cli
out
xchg
and
ret
ror
cmp
mov
gs
rcl
leave
loope
mov
push
mov
jb
testl
lret
sbb
sbb
jns
fsubp
dec
mov
jbe
mov
ret
in
cld
xchg
adc
daa
lods
das
xlat
lea
pop
arpl
addr16
adc
xchg
cltd
xor
or
lret
fldl
add
lea
into
push
ds
add
ss
insl
mov
aaa
or
sahf
rorb
test
mov
loopne
mov
add
imul
or
mov
mov
les
cltd
cmp
add
sub
sbb
cmc
aad
push
adc
pushl
xor
pop
mov
test
sbb
int
out
jo
add
fldl
mull
insl
cwtl
mov
mov
nop
inc
popf
add
loop
shlb
pop
pop
xchg
jnp
sub
fnstsw
jns
lcall
test
cmp
iret
pushf
or
mov
ja
jle
arpl
dec
insl
icebp
sahf
arpl
call
insb
and
movb
ss
in
add
mov
test
test
insb
sarb
adc
ret
rclb
enter
dec
and
out
cltd
xchg
and
or
fwait
sarl
cltd
rorl
into
cmc
sub
push
in
jl
or
fisubrl
or
in
call
testb
repz
jge
push
cs
sub
jns
dec
jp
data16
bswap
das
add
inc
sbb
hlt
xor
cmp
sarl
dec
pop
push
je
push
loopne
mov
cmpsl
std
adc
ret
mov
ds
lea
push
imull
push
push
mov
inc
mov
dec
outsl
outsl
push
sahf
adc
int
xchg
sbb
mov
mov
test
adc
push
push
jo
cltd
xchg
sub
mov
adc
inc
cmpsb
xchg
push
les
in
xchg
andb
or
pop
pop
and
or
cmp
test
jge
insl
mov
aad
out
fwait
gs
icebp
xchg
dec
mov
out
push
in
sbb
sub
cmp
jp
xchg
shlb
leave
iret
lds
add
xor
adc
mov
mov
loopne
jp
sbb
pop
push
out
clc
les
lds
iret
mov
aam
stos
xchg
imul
xor
mov
push
xchg
cli
mov
mov
and
sub
sbb
mov
inc
jne
mov
addr16
leave
inc
ret
sbb
cmp
mov
call
and
es
cld
iret
mov
mov
ja
add
push
jno
hlt
cmp
arpl
loop
leave
jecxz
in
mov
fiadds
cmp
and
rep
push
xor
ret
adc
xchg
xor
cmp
pop
lcall
push
inc
mov
inc
fs
xchg
rorb
and
push
cmp
or
inc
jg
pop
jbe
popa
push
test
mov
popf
pushf
jb
fwait
loopne
xor
adc
sahf
adc
andb
xchg
je
cmp
lea
cs
mov
lcall
cmp
lret
fcompl
pusha
gs
cld
or
lods
push
xlat
fimuls
xchg
jp
setnp
arpl
loop
imul
jb
add
or
es
jne
or
push
sbb
repz
repnz
jnp
imul
ds
test
das
pop
aad
jo
orb
push
mull
xor
pop
sub
push
jb
jbe
repz
inc
movsb
xchg
lret
aad
mov
lahf
cmp
xchg
mov
sbb
repz
adc
out
cmc
mov
pop
fadds
jle
push
xchg
dec
rcl
testb
ljmp
loop
shll
xor
jno
push
adc
jl
and
jmp
aas
and
fldcw
scas
and
or
sub
jle
pusha
mull
add
add
pop
mov
push
sbb
jecxz
dec
mov
push
sub
ljmp
adc
adc
cmp
inc
push
pop
orl
mov
mov
xor
scas
pop
push
scas
inc
push
test
filds
in
imulb
scas
divb
dec
lea
popa
sti
cmc
dec
xor
inc
in
sarl
ffree
sub
les
lock
sub
pop
xchg
pop
mov
out
mov
mov
xchg
mov
repnz
in
push
mov
push
and
lock
jl
xor
inc
sbb
and
dec
mov
bound
in
xchg
test
adc
test
mov
dec
test
mov
lods
sbb
mov
adc
call
shlb
lods
fiaddl
or
mov
inc
dec
cmp
pop
xchg
leave
push
xor
inc
data16
adc
popf
inc
pop
jge
popf
aas
cli
cmp
jg
jno
insl
fnstsw
add
mov
cmp
mov
mov
dec
frstor
ss
adc
insb
pop
dec
les
or
icebp
mov
jno
out
push
addr16
and
fsubl
test
xor
cmp
shll
sub
cmp
cmp
movsl
adc
and
push
push
aam
frstor
lods
addr16
stc
lret
dec
inc
pusha
es
pop
push
stos
nop
add
stc
or
or
iret
mov
in
and
fstl
jmp
lret
andl
xor
mov
call
or
cmp
out
xchg
mov
mov
mov
cmp
scas
xor
iret
adc
imul
sub
clc
adcl
aam
dec
sub
cmp
dec
pop
inc
shlb
mov
sub
xor
adc
mov
aad
jmp
cmp
mov
push
rcrb
and
mov
test
std
ret
xor
fmul
mov
enter
jnp
negb
lods
ficomps
popf
in
push
call
xor
pop
hlt
jns
stos
push
scas
fstpt
cmpb
and
add
int3
mul
pop
cs
outsl
push
push
push
push
fwait
xor
cmpsl
sub
cli
xchg
and
mov
sbb
jnp
cmp
shll
xor
repz
cmp
xchg
mov
jnp
adc
mov
dec
fisttpl
mov
sbb
dec
pushf
aad
outsl
fildl
jmp
and
cmp
sbb
enter
and
xor
test
xchg
xchg
pop
shll
movsl
push
cmp
pop
add
decl
push
call
jno
ja
cltd
push
cld
xor
je
mov
nop
setns
ret
pop
pop
cmp
addr16
iret
mov
out
push
std
arpl
and
and
out
adc
mov
mov
jne
aam
shlb
sbb
repnz
idiv
mov
mov
lock
or
and
test
gs
mov
sub
mov
lcall
and
daa
fldl
das
xlat
leave
push
jns
push
pop
cmpsb
aam
xor
rcrb
pop
jnp
push
push
mov
ja
lods
outsl
rorb
dec
scas
test
sqrtps
push
and
adc
cwtl
or
dec
cli
sbb
fcmovnu
test
adc
jns
xchg
lock
scas
out
jge
push
jg
hlt
pop
scas
pop
into
ret
into
adc
xchg
push
or
div
and
fmul
add
aad
aam
xchg
cmp
cs
mov
lret
lahf
pusha
mov
pop
cmpsb
jns
or
outsl
jge
rcrb
jo
jae
shlb
loope
sbb
popa
mov
andl
aad
xor
arpl
sbb
add
cmpsl
xchg
sub
dec
in
sahf
int3
sbb
arpl
fadds
stc
cwtl
aas
push
cs
dec
aaa
std
pop
add
addr16
clc
mov
pop
mov
pop
pop
adc
lahf
mov
xor
out
and
and
rol
sbb
sub
pop
lahf
adc
in
aad
ret
orb
sbb
pop
popf
sbb
jl
dec
mov
jmp
push
lahf
enter
adc
bnd
and
push
jae
scas
xchg
cmc
add
jp
xor
xchg
aam
and
dec
jecxz
pop
jb
xchg
or
into
gs
push
mov
enter
fwait
mov
cmpsb
fcomp
jno
jp
lods
sbb
scas
lcall
imul
inc
ja
or
aad
pop
nop
adc
inc
push
inc
je
pop
sub
fsubrl
test
shlb
add
sbb
fbld
cmp
xchg
dec
je
and
mov
mov
xor
adc
movsl
add
and
mov
and
mov
pop
aas
xor
and
cld
arpl
ss
nop
out
outsl
cli
pop
ror
lret
out
jg
mov
mov
std
cmp
ret
int
mov
mov
iret
outsl
jp
rcl
sub
cmp
jbe
jmp
daa
stos
add
pop
cmp
arpl
in
enter
xor
mov
adc
fldenv
jg
pop
es
sti
sahf
aam
sub
andl
add
inc
test
lahf
and
cltd
add
int3
cld
call
fcom
in
cmp
and
fcomps
movsl
movsb
jb
mov
int
xor
cmpsb
sti
mov
dec
xchg
stos
jg
inc
jbe
leave
mov
shlb
inc
xchg
xor
dec
pop
pop
or
mov
mov
stos
push
ret
movl
sbb
inc
jno
bound
jp
mov
xchg
outsl
add
mov
or
jg
js
fisubrs
adcb
mov
cmpl
sbb
sbb
add
sti
add
dec
mov
insb
lods
inc
es
stos
test
adcb
xchg
inc
mov
sarl
push
cltd
mov
hlt
cld
test
fistpl
or
sub
nop
mov
imul
das
mov
out
pop
cmp
dec
push
sahf
pop
sbb
xchg
mov
fiadds
inc
jb
cmp
outsl
mov
push
adc
or
xchg
test
imul
mov
pop
ret
pop
mov
push
and
lret
adc
mov
inc
fsubs
mov
mov
test
ljmp
jno
push
pop
jne
pop
popf
jg
sbb
add
jo
pop
sbb
movsb
mov
jmp
pusha
gs
jns
fst
lret
rcrb
inc
es
rolb
bound
out
daa
out
sahf
inc
xchg
fdivrl
fwait
aam
mov
lret
lock
dec
aas
push
hlt
sub
stos
sbb
adc
xchg
rorb
call
mov
fs
xchg
movsl
sbb
mov
jae
lds
mov
ds
pushf
fdivs
ljmp
in
arpl
cs
cmp
pop
popa
xlat
add
mov
sub
rcrl
and
push
jecxz
test
cli
inc
stos
dec
sbb
and
pop
add
jmp
stos
jl
loope
clc
mov
push
jo
imul
adc
adc
xorb
flds
adc
add
push
mov
dec
sub
dec
push
xchg
mov
fmull
ret
jo
mov
aaa
loop
add
xor
fdivs
lea
repz
jg
fmuls
mov
repz
mov
ljmp
sbb
mov
es
popf
lock
loopne
es
xchg
sbb
fnstsw
dec
adc
testb
aad
imul
repnz
mov
mov
test
psllw
outsb
jge
in
add
incl
iret
mov
movsb
or
fwait
pusha
fcmovne
mov
adc
out
push
mov
cmp
movsl
mov
lods
add
sbb
mov
in
pop
imul
rorb
cs
jne
fwait
stos
add
pop
bound
lahf
ljmp
std
lahf
test
and
ljmp
and
jl
ljmp
xor
mov
xor
sbb
xor
stc
andb
lds
mov
pop
in
int3
cmp
aas
mov
sub
std
cmpsb
jle
mov
pushf
or
cmc
xor
dec
adc
loop
addr16
xlat
sbb
outsl
pop
inc
out
push
loopne
inc
mov
aas
enter
push
fcom
in
xchg
push
jecxz
lods
addr16
or
xchg
rorl
adc
push
xchg
jo
ret
call
movsl
popf
cltd
testl
or
shrl
aas
sbb
lcall
into
in
jne
jmp
cmp
mov
add
aas
jne
mov
cmp
xchg
jo
mov
stos
movsb
rcr
fstp
dec
mov
push
push
add
aam
ja
inc
push
add
xchg
push
insb
call
push
loope
cmp
stc
scas
mov
add
ficoml
push
lods
fadds
mov
xchg
icebp
shll
icebp
sub
ret
fimull
add
loop
jge
push
jo
mov
dec
iret
roll
shlb
mov
fldl
and
jo
ret
fcmovbe
lcall
sub
imul
mov
sbb
cmp
jp
and
stos
push
in
jge
ret
fidivs
mov
add
mov
sbb
push
dec
fsubl
cmp
bt
xchg
and
add
les
cmp
mov
mov
sti
fdivrs
dec
ret
xchg
scas
aad
stc
ficoms
in
das
and
insl
sbb
loopne
xor
aam
jecxz
adc
mov
mov
xchg
stos
mov
movsb
out
jnp
fstl
or
sbb
or
je
adcl
jno
xchg
push
mov
add
xchg
fildll
cmpsb
aas
push
dec
xchg
icebp
sarb
dec
stos
inc
mov
lret
lahf
or
mov
push
adc
xchg
mov
out
shl
leave
cmp
jl
icebp
stc
pop
or
test
sbb
mov
dec
sub
add
xor
mov
pop
cmc
loope
adc
push
xor
cmpsl
stc
mov
dec
jge
jae
int
repz
lea
add
in
movsb
mov
mov
insb
jp
loop
jns
mov
adc
aam
das
es
sahf
sub
cmp
inc
xchg
cs
mov
movsl
inc
pushf
fldenv
jp
arpl
dec
push
xchg
arpl
mov
and
insl
out
leave
xchg
xchg
ds
iret
testb
mov
pushf
cmp
jne
sub
mov
rcrb
cltd
xor
or
and
sbb
loopne
fisubrl
pop
cli
imul
mov
xchg
mov
scas
xchg
xchg
jae
push
and
or
cmp
or
adc
pop
pop
cmp
cwtl
inc
push
in
jno
out
and
jecxz
fisubrl
pop
push
mull
ror
sbb
loopne
add
xchg
loopne
push
xor
mov
or
stc
mov
fcomps
inc
fdivrp
xor
repnz
imul
fld
add
sub
test
cwtl
push
ret
ja
mov
aam
insl
mov
and
scas
clc
insb
pop
sbb
repz
pop
push
adc
xchg
adc
jo
mov
sub
inc
test
inc
into
jb
mov
sub
xlat
ret
sbb
int
jb
call
add
cmp
sahf
das
adc
mov
cmc
inc
jmp
fadds
push
mov
std
ljmp
or
icebp
out
ds
lahf
mull
sahf
mov
fbstp
add
prefetchwt1
adc
jmp
ljmp
jae
movsb
aad
xchg
jle
daa
mov
lahf
xor
and
sbb
scas
shrb
leave
push
xchg
dec
insl
jle
or
cmp
push
fsubl
pop
xor
pop
inc
movsl
fs
mov
cld
or
cmp
stos
pop
insl
cmp
rcrb
pushf
in
pop
ficoml
sar
sbb
stos
test
lock
mov
out
fldt
push
cmpsb
dec
adcb
sti
ljmp
stos
fstpt
mov
or
inc
xor
inc
lds
das
add
and
ficoml
divb
fstps
or
pop
jmp
ds
xor
fisttpll
outsb
dec
andb
inc
dec
fs
adc
pop
ds
fwait
ja
dec
daa
or
insb
sbb
mov
lret
xorl
in
sub
add
mov
adc
dec
push
ficomps
adc
gs
and
xor
adc
fsubl
mov
out
inc
das
xchg
clc
add
adc
test
in
push
aad
add
dec
pop
popa
jb
xchg
test
or
or
js
inc
icebp
mov
inc
addr16
pop
mov
lret
push
mov
andl
push
cwtl
lods
in
imul
pop
outsb
imul
xor
xor
pop
pop
mov
mov
dec
leave
mov
add
arpl
jp
xchg
add
add
clc
adc
jb
push
add
ja
pop
add
rcr
in
push
xor
adc
lock
scas
push
cmc
mov
sub
les
xchg
cmc
sub
push
mov
cmp
or
mov
jmp
mov
xchg
jle
cmp
into
sub
pop
or
dec
add
push
adc
xchg
mov
push
mov
and
sarl
movsl
int
or
lahf
imul
and
mov
sub
mov
push
sbb
pushf
fs
in
xor
dec
and
addr16
sbb
imul
test
ja
pop
sub
loopne
or
sbb
aam
fwait
lret
and
push
lods
js
fimull
cmp
cs
in
add
loope
mov
dec
test
xchg
movsl
or
or
xchg
xor
ljmp
or
push
fwait
xor
mov
jne
mov
push
sbb
pop
or
ds
pusha
mov
sub
add
add
negl
faddl
add
sbb
popf
outsb
pop
adc
inc
fists
xor
fwait
and
pop
xor
xor
cwtl
cltd
push
fs
fmull
movsl
push
or
xor
jae
add
mov
shrl
mov
ds
xor
and
or
xor
out
adc
lock
jmp
outsb
dec
xchg
mov
push
or
mov
inc
test
test
inc
jp
stos
sbb
insb
dec
inc
jb
push
ja
int
insl
test
lret
pop
pop
jge
dec
inc
sbb
mov
push
inc
xchg
cwtl
ja
test
dec
popf
pop
in
and
mov
cmp
mov
fdivl
inc
adc
sbbb
mov
mov
sub
and
out
jb
sub
fdiv
jns
jge
fcoml
push
addr16
ja
sub
dec
xchg
xchg
lea
mov
push
xorl
or
outsl
push
jecxz
in
stos
in
mov
push
fnsave
jecxz
jne
and
sub
stc
ficoms
into
mov
or
das
pop
fcomi
das
dec
out
xor
mov
inc
loop
ror
leave
mov
cmp
fmull
lods
xchg
pop
mov
jmp
stos
iret
outsl
test
xchg
sti
jno
fwait
imul
sbb
adc
sub
mov
push
es
test
xchg
mov
rcrb
pop
std
jle
sbb
nop
push
jge
adc
mov
xor
shl
adc
outsl
lcall
xor
addps
or
cli
ds
dec
fldl
pusha
imull
fnstsw
std
stos
sbb
push
jns
sbb
bound
insb
pop
out
push
push
adc
dec
push
mov
leave
mov
subl
xorl
sahf
push
pop
hlt
push
pop
push
out
std
cs
push
arpl
cmc
icebp
outsb
cwtl
cmp
loopne
push
jae
idivl
leave
imul
xchg
push
push
mov
mov
jp
sub
lock
cmpsl
jbe
push
dec
imul
mov
cmc
aas
fmull
test
adc
in
push
push
cld
jae
pop
aas
jno
mov
shl
adc
std
ja
pop
pop
dec
arpl
inc
das
or
push
mov
test
mov
adc
pusha
fs
mov
cmp
push
test
push
out
adc
fistpll
inc
adc
lods
dec
repnz
jns
and
cli
cmpb
hlt
stos
pop
adc
mov
stos
cmc
clc
push
lret
pushaw
xor
push
push
mov
roll
cli
lds
mov
lea
mov
inc
sbbl
and
imul
and
and
subb
sub
stos
jns
adc
inc
fldl
push
test
dec
test
pop
in
in
cltd
dec
sub
mov
daa
inc
data16
leave
and
push
call
ret
jle
push
push
test
add
bound
jae
imul
aam
push
jb
xor
sets
pop
mov
inc
mov
lahf
das
out
frstor
xor
dec
jno
lahf
xchg
jae
shlb
fimull
and
xchg
pop
out
inc
out
scas
fdivrl
mov
sar
rclb
jmp
fistpl
rorl
xchg
mov
push
mov
add
andl
push
push
push
call
jl
lods
xor
sub
int3
lea
push
mov
lds
insl
mov
inc
mov
adc
lret
cmpb
mov
cmp
ja
push
pop
lcall
dec
xchg
mov
imul
cmp
mov
shl
ds
fistpll
aaa
mov
xchg
call
sahf
aad
sub
je
pop
mov
mov
fildl
stc
jno
sbb
mov
fcomps
or
popa
ret
and
mov
iret
ror
or
out
jg
aaa
repnz
or
ffreep
in
mov
sub
stos
pop
fnstsw
subl
jl
xchg
std
filds
or
dec
les
outsl
mov
pop
aaa
cmpsb
insb
mov
repz
aas
push
push
mov
movsl
call
sbb
cmp
pop
dec
pop
jg
dec
sub
scas
lock
or
adc
xor
sbb
push
arpl
mov
loope
dec
cmp
inc
inc
cmp
sub
popa
out
push
mov
fistpll
iret
xlat
jne
or
fisubrl
cltd
add
mov
xchg
mov
flds
cmpb
pop
mov
add
sbb
jmp
filds
push
test
je
sbb
xchg
xchg
aad
pop
lret
aad
sbb
mov
lds
test
cmp
insl
loopne
mul
xlat
sbb
add
inc
mov
int3
and
adc
mov
dec
push
je
imul
popf
dec
sbb
or
pop
fdiv
popf
xchg
pop
cmp
pop
push
pop
or
mov
clc
mov
bound
lds
push
xchg
pop
out
test
mov
sahf
out
jbe
testb
jg
outsl
ret
scas
jl
push
adc
pop
cmp
das
sbbb
mov
mov
push
ljmp
cmp
xchg
fxam
cmpsb
imull
mov
loopne
cwtl
ss
stos
jle
pop
inc
cmp
adc
xor
aad
imul
xor
sub
sbb
pop
fmuls
jg
les
ja
sbb
sahf
mov
jo
aaa
or
xchg
xor
lcall
lret
cmp
mov
addr16
imul
lret
fsubs
inc
imul
andb
arpl
stc
cmpsl
pop
fistpll
cmp
sub
mov
lret
and
fldl
lods
xlat
jecxz
add
cs
sbb
mov
pop
pushf
xchg
in
arpl
sub
mov
cmpsb
das
inc
inc
jl
pop
sub
pop
fcmovbe
hlt
subl
xor
jp
in
jl
stos
ja
pop
mov
test
pushf
movsb
addr16
mov
fistps
andl
cli
sub
cmp
mov
lods
imul
ds
inc
pop
adc
add
ds
test
cwtl
or
das
jmp
jns
mov
jno
or
sbb
xchg
push
mov
mov
popa
lret
mov
or
lock
and
sahf
test
stc
cs
shr
xor
sub
add
xchg
imul
mov
mov
mov
jle
roll
sahf
stos
sbb
mov
inc
ret
lret
xchg
loopne
stc
and
and
adc
xor
sbb
and
pop
push
es
jo
jmp
jg
cmpsl
enter
cs
adc
lds
icebp
xor
and
jns
pop
fucom
outsl
scas
jno
mov
mov
es
shl
inc
outsl
sub
gs
pushf
mov
or
repz
sarl
movsl
sub
fcoms
sbb
dec
stos
jne
dec
sub
hlt
js
mov
mov
js
xchg
jns
and
lods
lret
xchg
mov
mov
jp
fstps
add
push
inc
mov
sbb
mov
cmp
xchg
jo
jne
fiaddl
sarl
imul
lock
ljmp
imul
nop
adc
inc
adc
loop
push
jg
cmpsb
mov
outsl
lds
cltd
push
arpl
idivl
leave
mov
pop
sub
hlt
stos
and
aam
or
xchg
in
push
dec
pushf
nop
add
add
or
jne
and
outsl
lahf
or
mov
in
mov
hlt
or
stos
jg
lods
imul
jns
mov
mov
repz
xchg
xchg
add
dec
fwait
push
inc
bound
outsb
pop
jge
ret
inc
sti
test
and
cmp
addl
sub
hlt
mov
lahf
sub
xchg
adc
mov
or
mov
mov
sbb
sti
out
xor
inc
fwait
push
jbe
jg
xchg
into
xor
jmp
test
ss
dec
add
xchg
jbe
pop
int
jge
sub
cmp
adc
mov
cmp
xor
ss
and
xor
mov
lods
mov
mul
pop
jno
mov
dec
movl
jno
adc
bound
mov
xor
loop
and
lret
insb
and
stos
dec
inc
or
or
jge
jno
cli
lds
and
mov
mov
insb
pop
jg
ret
xchg
add
inc
and
jle
imul
imul
xchg
or
mov
data16
sub
and
mov
es
cmp
les
movsb
sar
mov
lods
sub
ret
or
add
inc
jae
pop
xor
lods
out
dec
xchg
inc
sub
push
int
mov
jle
sbb
jg
pop
insb
xor
mov
and
jge
mov
movsl
or
or
inc
pop
ret
fisttpl
mov
pop
cmp
loop
es
cmp
sub
add
push
xchg
cmpsb
test
lea
cwtl
adc
aam
stos
xor
inc
cmp
inc
xlat
push
test
aam
std
test
roll
jmp
sbb
ljmp
jle
gs
xor
sbb
insb
or
jecxz
sahf
es
xchg
stos
popa
or
pop
subl
and
sub
ja
jb
sbb
dec
sub
jmp
adc
mov
inc
mov
out
mov
and
pop
sbb
xchg
add
jmp
dec
insl
and
mov
pop
dec
pcmpgtb
imul
daa
fdiv
or
arpl
sub
imull
stc
pop
leave
or
mov
mov
nop
test
cmc
cmp
jns
jnp
dec
lret
inc
or
das
cld
dec
lcall
lock
in
jge
xchg
mov
loop
int3
or
xchg
dec
jbe
fcmovnbe
jge
xchg
hlt
push
pop
xor
pop
jo
fldcw
dec
adcl
roll
aam
add
xchg
popa
sbb
dec
test
cwtl
ja
dec
out
push
push
pusha
fisttps
mov
dec
std
pushf
push
mov
cmp
xor
iret
fildl
int
lcall
add
pushf
xchg
in
test
mov
sti
lret
push
rcl
xor
sbb
push
or
test
dec
dec
and
test
or
xchg
add
sbb
or
inc
mov
cmp
xchg
mov
test
cmp
sub
sub
lods
mov
adc
jecxz
xor
mov
and
mov
pop
mov
adcb
mov
mov
cmp
pop
mov
test
mov
hlt
add
dec
push
jb
pop
inc
stos
aam
aaa
fidivs
mov
call
xchg
mov
int3
sahf
dec
and
lea
push
jmp
inc
add
loopnew
jecxz
add
cmp
fwait
sub
out
ds
adc
outsl
and
jmp
ret
out
ror
cmp
mov
jge
pop
xchg
mov
jb
mov
mov
sub
pop
lea
or
lcall
sbb
mov
pop
sbb
jns
and
pop
or
and
mov
xor
std
in
popa
out
fiadds
les
adc
orl
fmull
xlat
sub
aad
stos
push
sti
pop
into
cli
clc
push
js
mov
xchg
adc
inc
roll
imul
outsl
loope
push
mov
cli
js
roll
jo
dec
cltd
fidivl
mov
jb
loop
das
clc
scas
sub
jg
xchg
lret
mov
and
mov
insl
daa
iret
inc
sahf
sbb
aaa
loop
fidivl
dec
fstpt
fistps
xor
shl
js
inc
mov
loopne
dec
pop
test
sbb
mov
decl
lods
xchg
mov
jne
sahf
lahf
sub
mov
fstps
cwtl
pushf
mul
mov
test
sbb
stos
xchg
arpl
add
push
lret
ljmp
dec
js
xorl
sbb
mov
sub
adcl
dec
jl
inc
xor
es
xor
push
xchg
cmp
jbe
enter
sahf
mull
fsubrs
shll
push
jg
adc
lods
pop
mov
ss
jmp
scas
fcmovne
and
inc
bound
js
int
xor
xchg
mov
cmp
cmpsl
lret
pushf
adc
test
repz
inc
cmp
jge
mov
mov
add
pushf
or
icebp
sbb
xchg
cmp
stos
xlat
adc
mov
jns
pop
lds
sub
lods
imul
decl
mov
jne
mov
cmp
iret
flds
in
fwait
shll
or
sub
xchg
xchg
mov
and
rolb
sbb
mov
roll
imull
bound
sbb
pop
sub
mov
hlt
daa
dec
fisttpl
lahf
sbb
leave
sti
loopne
push
xchg
pusha
pop
xlat
js
call
jns
insl
pushf
cmpsl
je
mov
imul
and
add
or
in
pop
pop
out
inc
dec
cmp
mov
inc
adc
iret
cmp
push
sahf
xor
pop
mov
adc
fildl
repz
pop
dec
rol
jmp
xchg
adcl
pushf
in
cmpsl
rorl
pop
or
pop
xchg
mov
imul
jae
call
imull
shlb
jp
mov
scas
lock
test
fsubr
imul
cmp
fistl
leave
stc
and
rcrb
lret
rcr
or
mov
pop
xchg
xor
arpl
cmp
fcmovnb
stos
jp
arpl
push
adc
arpl
mov
sbb
aas
loop
sub
stc
jns
xor
stos
mov
dec
push
mov
mov
cmp
jno
mov
cmpsb
and
in
mov
push
sbb
ds
xchg
in
mov
cmp
int
sahf
jno
cmc
jo
add
dec
adc
add
sar
xchg
clc
lods
sub
cltd
mov
pop
outsl
pop
pop
in
or
pusha
cmp
dec
cmp
mov
mov
xor
cltd
push
jmp
repz
bound
fwait
dec
jbe
lahf
cmp
xor
mov
and
mov
sub
sbbl
aas
dec
add
movsb
jns
out
jbe
sbb
popf
jl
sbb
sub
jmp
sub
scas
fwait
cltd
in
cmp
xor
les
cmp
jl
outsb
push
push
ljmp
test
jne
or
jg
jmp
mov
std
inc
cmpsl
fs
shrl
mulb
push
or
sub
call
and
repnz
scas
enter
pop
nop
and
sub
xchg
add
stos
lock
jnp
push
cmp
inc
and
jb
clc
outsl
or
sub
sbb
inc
jecxz
jle
push
dec
pop
push
int3
insb
or
and
cmpsl
cs
pop
mov
sub
sub
movsl
out
sbb
inc
add
mov
mov
mov
hlt
cmp
enter
cmpl
das
mov
mov
pop
sbb
cmp
push
inc
ror
shlb
add
mov
cli
sarl
xchg
dec
movsl
sub
gs
mov
mov
dec
add
dec
push
test
movsl
popa
cli
aad
shll
sbb
inc
adc
and
lahf
fcomps
sub
pop
aam
in
cltd
bnd
xchg
orl
lret
gs
add
inc
scas
sub
leave
adc
fwait
mov
sub
into
mov
cmp
inc
hlt
outsl
pop
leave
cmp
push
movsl
inc
push
loopne
imul
xchg
mov
or
loopne
push
dec
xchg
cltd
insb
cli
test
inc
or
fiadds
push
shrl
popa
jne
mov
ds
sbb
pop
add
push
pop
cltd
jp
imul
mov
cmpsl
jmp
push
sub
daa
data16
pop
imul
mov
mov
pop
xchg
pushf
dec
bound
aam
adc
jnp
mov
sbb
aas
pop
dec
clc
cli
cmp
adc
out
adc
dec
adc
test
push
cmpsl
mov
sub
fmuls
pop
fidivs
push
mov
pop
inc
push
sbbb
dec
lds
pop
je
inc
es
into
loopne
repz
shrb
jae
pop
pop
pop
ret
clc
stc
sub
xchg
clc
mov
pop
inc
mov
pop
jge
or
hlt
fstps
xor
dec
or
xchg
mov
cmp
leave
and
cmp
mul
or
mov
fisttpll
sahf
sti
int
xchg
jmp
and
popf
popf
jns
jae
adc
fchs
xchg
xlat
jns
mov
jle
push
sbb
add
loop
and
jle
in
std
xchg
pop
inc
and
sub
out
fadd
sbb
pop
outsb
addr16
daa
sbb
icebp
pushf
xchg
popf
call
ret
pop
mov
mov
pusha
sub
shlb
sbb
inc
dec
jnp
inc
adc
sbb
xchg
sbb
inc
cwtl
cmp
insb
dec
popf
jns
push
imul
and
ret
ret
pop
mov
xlat
jl
and
mov
push
adc
add
int
and
stos
fs
or
inc
arpl
mov
xchg
scas
insl
mov
mov
stos
pop
in
lea
out
leave
and
mov
mov
jns
and
in
push
adcl
jmp
xor
fdivr
adc
xor
sarb
inc
sbbb
pop
outsb
jle
mov
jmp
stc
rorl
enter
add
stos
xor
shlb
scas
loope
cli
inc
stos
inc
lods
jnp
and
or
je
std
sbb
xchg
andl
add
mov
dec
enter
aam
es
mov
lea
insl
shlb
lcall
adc
mov
scas
fs
push
mov
ror
dec
push
aad
cs
xchg
cmp
jge
aas
xchg
repnz
jno
push
xor
test
negl
push
dec
mov
push
mov
rclb
gs
add
or
andl
mov
test
cmp
cmp
cmpsb
sub
sti
inc
decb
negb
pop
fwait
add
stos
jo
mov
insb
sub
inc
lcallw
push
fdivr
aaa
mov
mov
enter
and
loopne
xor
enter
add
sbb
jo
xchg
testl
sti
das
mov
pop
ja
shlb
pop
cmp
mov
pop
call
push
in
push
and
cmpsl
push
sub
fsubs
jl
iret
fstpt
sub
mov
and
insb
hlt
sbb
pop
sbbb
dec
stc
add
aaa
sub
or
lret
insl
imul
push
std
jb
sub
dec
cmp
add
or
mov
cli
xor
loop
pusha
xchg
sub
cmp
mov
mov
push
dec
add
jp
mov
mull
add
icebp
add
mov
sub
add
push
test
nop
mov
mov
or
fists
dec
dec
add
or
xlat
lock
lods
ljmp
inc
movsb
mov
xor
xchg
inc
mov
push
push
add
fbstp
stos
insl
dec
test
mov
xchg
aam
aad
mov
bound
xor
xor
jle
adc
jp
cmp
dec
bound
lods
dec
sub
push
xor
aas
xchg
dec
xchg
lds
aas
and
dec
shrl
aad
lcall
mov
jno
js
mov
fnstsw
or
je
jecxz
cli
or
pushf
and
dec
sub
sbb
into
adc
int
clc
jae
ficoms
xchg
nop
push
pop
test
mov
inc
mov
xlat
push
sub
fbstp
push
mov
mov
test
clc
lds
insb
push
out
xor
cmpsl
lock
stc
repnz
stos
pop
jb
shll
inc
cwtl
mov
ss
xchg
push
je
cwtl
shr
hlt
sbb
shlb
cmp
sub
inc
imulb
addr16
mov
pop
dec
add
or
enter
adc
in
and
int3
mov
cmp
adc
or
jecxz
jp
or
add
push
cmp
je
fiadds
sub
lods
ljmp
inc
fisttpll
js
ds
dec
cmc
sub
lcall
mov
rolb
jb
sub
mov
push
pop
hlt
insl
lods
inc
xor
stc
dec
std
ss
xchg
jl
dec
cmpsl
gs
inc
adc
push
sub
lret
scas
dec
sub
and
sti
push
out
cmpsb
xor
push
stos
xchg
loopne
add
es
pop
jp
jne
int3
imul
loopne
sbb
mov
mov
lods
std
data16
movsb
or
loopne
stc
cmp
xor
cmc
adc
push
pxor
das
sbb
sahf
pop
cltd
imull
lea
adc
dec
dec
mov
mov
les
repz
divl
pop
mov
lock
ljmp
mov
data16
in
inc
call
push
dec
dec
test
stos
stos
fs
jecxz
ljmp
or
inc
mov
std
add
pusha
cmc
inc
jno
cmp
add
addl
in
sub
shll
mov
in
inc
insl
pop
pusha
scas
lock
ror
ret
and
or
inc
movsb
xchg
push
lods
fbld
adc
jl
in
mov
mov
aas
data16
hlt
fucomp
or
in
mov
pop
je
sbb
adcl
shr
add
add
inc
xchg
push
xor
jno
mov
mov
inc
xchg
aaa
and
sti
bswap
mov
inc
inc
fwait
or
aad
push
aad
add
pushf
lea
mov
call
mov
mov
pop
mov
aad
cmc
jle
stos
popf
dec
push
xchg
jae
jg
inc
out
lods
pop
sar
xor
inc
std
js
mov
test
mov
cs
inc
lods
or
sub
inc
dec
inc
mov
int
push
jns
ret
and
inc
adc
jg
adc
add
xchg
sti
lds
push
out
pop
popa
sbb
stos
xchg
inc
les
xchg
jae
sbb
adc
and
mov
mov
push
mov
pushf
aas
mov
mov
mov
enter
popa
cmp
jl
inc
ret
inc
push
sbb
pop
push
dec
mov
pop
inc
mov
popf
or
movsb
push
mov
jbe
xchg
or
jnp
mov
mov
push
out
fsubl
mov
imull
mov
mov
sub
fstl
in
pop
sub
add
out
jne
mov
xchg
imul
jle
outsl
movsl
scas
lods
mov
clc
push
xor
shl
add
mov
mov
daa
mov
ficomps
cwtl
or
push
dec
push
mov
mov
push
lods
cld
or
aas
cmpsl
out
pushf
stos
rcr
in
and
jns
push
andl
sub
or
call
cmpsb
or
xchg
fisttpll
popa
cmp
pop
pop
push
rclb
mov
sarl
inc
popf
repnz
or
imul
rcr
jae
xor
jno
scas
outsl
pop
inc
or
ficoms
andl
push
mov
fiadds
dec
rdtsc
popf
and
fsts
imul
sbb
sbb
and
pop
cmp
xchg
cmpsb
pop
in
ljmp
jmp
mov
mov
dec
loopne
pushf
in
jecxz
push
mov
stos
sbb
inc
scas
dec
sahf
xchg
lds
rorl
lcall
lods
aad
daa
popa
lea
cmpsl
cmp
and
mov
dec
or
cltd
mov
jbe
cmp
orb
mov
pushf
scas
xlat
push
dec
mov
dec
xor
dec
xor
aad
mov
push
cltd
jnp
iret
pop
movsl
sub
loop
int3
in
mov
xor
pop
sub
jns
mov
int
mov
add
stos
popa
push
in
dec
jne
dec
sub
pop
add
sub
push
out
mov
or
into
push
xor
inc
pop
push
cmpsl
push
adc
je
test
dec
mov
mov
mov
cli
push
jle
or
insl
dec
test
cmp
add
movsb
sbb
pop
or
popf
sub
mov
fmuls
mov
in
xchg
sbb
xor
cli
stos
test
push
addr16
xchg
inc
xchg
arpl
jb
dec
mov
pushf
sahf
cmc
fcomps
fldt
into
pop
roll
mov
cmp
arpl
and
leave
outsb
stos
mov
mov
loope
jb
dec
pop
aaa
xor
mov
mov
cld
jmp
cltd
cmpsb
and
clc
outsb
xor
iret
pushf
mov
sarl
and
imul
cmc
xchg
fcomp
push
fisubs
sbb
fcoml
pop
test
shrb
mov
sbbl
fstpt
lods
xchg
pop
mov
add
jmp
inc
push
pushf
int3
mov
repnz
test
fcoml
test
mov
cmp
repz
push
jne
cmp
inc
scas
insb
rorl
adc
loopne
ret
mov
sbb
xchg
hlt
cmp
xchg
push
push
jmp
or
push
out
rclb
sbb
sahf
mov
mov
mov
or
xor
std
rorl
shrb
pop
lea
jnp
add
mov
jbe
ret
test
xor
aaa
xchg
in
iret
inc
jne
cmp
cli
pop
ljmp
mov
mov
stos
or
cwtl
xchg
push
addl
mov
ja
jge
jg
sub
in
into
loopne
popa
out
ret
gs
div
xchg
push
mov
jg
inc
push
jge
lods
test
fisttpll
mov
cmc
lock
mov
dec
or
cli
xchg
add
js
js
icebp
xor
out
push
mov
adc
cmpl
ds
cmp
add
pop
dec
jb
pop
ret
cltd
scas
aas
mov
pop
lret
jp
jp
mov
ss
mov
jl
jecxz
mov
outsl
jae
imul
push
add
imull
push
jl
or
inc
pop
xchg
pop
ret
mov
dec
or
fsubr
lret
pop
lods
fsubl
and
dec
push
ja
xor
test
out
sub
pop
pop
and
xor
xor
fisubl
cmp
mov
mov
mov
cmp
mov
or
dec
sbb
jo
mov
jp
pop
std
imul
dec
xchg
mov
into
andb
mov
inc
mov
xor
adc
adcl
mov
pop
push
xchg
xchg
data16
in
mov
push
ror
xchg
mov
mov
xor
mov
mov
daa
xchg
je
pop
xchg
dec
sub
repnz
stos
inc
decl
arpl
lds
cli
rcl
out
mov
mov
ljmp
xchg
dec
pop
push
outsl
stos
sbb
and
sbb
ret
pop
jne
out
filds
ljmp
jg
dec
sbb
lahf
call
push
adc
in
repz
xorl
cmp
adc
jl
scas
pop
xchg
out
addr16
fs
xor
sbb
sbb
sahf
xchg
jne
push
jns
movsb
lock
adc
cs
mov
mov
sti
mov
test
lea
fistpll
and
mov
push
inc
jl
jno
fistps
pop
pop
aam
jno
test
and
mov
cmp
xchg
std
and
ja
ds
sarl
mov
jecxz
mov
mov
leave
aam
sbbb
adc
cwtl
sbb
dec
outsl
add
cmp
pushf
in
pop
push
je
aam
cmp
sbb
mov
imul
or
mov
and
dec
and
or
aas
addl
jbe
inc
icebp
jmp
push
add
xchg
dec
in
lret
adc
rcrb
ret
mov
pushf
in
inc
or
mov
sub
call
cld
mov
jecxz
out
mov
dec
add
lcall
test
cmp
imul
mov
jl
imul
rolb
fs
es
add
mov
sub
push
shrb
iret
cli
dec
cmpsl
fistpl
aad
js
sbb
outsl
dec
push
test
mov
xchg
aam
xchg
inc
int
ret
push
cmpsb
ss
repz
xchg
paddw
arpl
push
push
xchg
jp
inc
jge
sub
icebp
clc
fbstp
aad
das
xor
aam
test
or
sbb
scas
sub
mov
rorb
and
cli
jne
inc
add
sub
movl
and
ja
es
and
aas
gs
into
in
pop
addr16
push
addr16
in
ljmp
or
inc
ficoms
push
sbb
pop
adc
inc
sbb
jnp
sub
xchg
or
jmp
pop
inc
xor
icebp
stos
sub
inc
jecxz
test
jne
fdivs
sub
xchg
cwtl
xor
andl
jge
jl
mov
les
sbb
xchg
ret
daa
fsubrp
loopne
inc
push
cmp
cld
push
xor
xchg
dec
stc
add
jo
aas
or
push
inc
subb
aaa
test
pop
cltd
mov
bound
int
hlt
out
sahf
push
mov
mov
push
cli
xchg
ret
test
test
pop
or
mov
jb
sub
data16
imul
push
test
aad
inc
pop
and
das
popa
arpl
pusha
add
loopne
cmp
lods
inc
loop
pop
lahf
loopne
push
stc
js
or
nop
idivb
scas
mov
mov
repnz
jns
and
insb
sbb
xor
push
stc
sub
test
in
xchg
pop
ficompl
lods
push
sub
mov
sub
pop
jne
addr16
pop
cmpl
test
mov
mov
xor
push
mov
or
mov
mov
jmp
icebp
iret
stos
and
xor
pop
es
mov
cmpsb
clc
addr16
jg
push
jnp
rcrb
aam
aaa
lock
or
jp
lods
push
out
daa
fwait
mov
jo
add
fistps
rorl
dec
lods
std
and
cli
in
add
cmp
xchg
inc
leave
in
maxps
mov
cmc
jns
popa
inc
mov
xchg
dec
inc
sub
out
test
sahf
imul
out
leave
sbb
dec
pushf
cltd
push
mov
loope
out
or
push
mov
std
pop
imul
xchg
and
add
shr
repz
or
call
mov
add
xchg
mov
orl
mov
lahf
cmpsb
xchg
lock
xchg
inc
jge
out
mov
mov
out
enter
xchg
inc
imul
lds
aaa
xchg
add
cmp
rorb
mov
in
imul
repnz
sub
ficomps
inc
add
lock
sahf
fwait
enter
push
lcall
xchg
push
int
or
lods
rcll
mov
or
xor
mov
aad
xchg
scas
daa
jmp
hlt
clc
jne
test
sbb
inc
outsl
hlt
imul
push
fidivl
insb
decl
je
scas
xchg
cmp
sahf
movsb
adc
add
lret
pavgb
pop
outsb
or
outsb
push
pop
ss
xor
rcrb
ljmp
hlt
cmp
adc
push
jb
pop
test
lahf
iret
sub
sbbl
add
dec
mov
mov
jae
add
in
or
repnz
in
scas
dec
inc
sub
add
jo
out
mov
and
cmp
mov
mov
sti
call
das
sub
loopne
fs
scas
or
push
xor
and
inc
rcrl
rcr
addb
mov
stc
add
mov
mov
dec
jle
sub
xchg
std
test
call
icebp
cmpsb
sbb
mov
insl
add
inc
inc
adc
int
lods
fmulp
add
push
mov
cmc
push
inc
mov
push
outsl
lahf
es
lret
std
push
into
xchg
jb
addb
ja
adc
in
mov
outsl
xchg
mov
ljmp
adc
ja
mov
fwait
dec
sahf
add
in
mull
test
xchg
mov
pusha
mov
jge
aaa
jbe
mov
mov
mov
push
roll
loopne
inc
rorl
jo
int3
add
mov
or
fnstsw
sub
icebp
in
inc
das
lret
pusha
xor
sbb
jo
movsb
popa
call
push
loope
ss
cmp
arpl
in
aaa
test
inc
shr
imul
cwtl
lods
jle
or
dec
inc
adc
xlat
fmull
jo
hlt
rcll
or
mov
pop
dec
cwtl
jns
jne
idivl
js
and
xchg
ret
inc
dec
into
xchg
sub
int3
mov
xchg
xor
testb
loope
lods
cmc
sub
mov
xchg
or
je
pop
fmull
jle
dec
adc
or
pop
xchg
fmul
loop
jl
dec
or
adc
xchg
or
dec
in
jb
es
lea
lret
gs
sbb
shll
repz
mov
rolb
cmp
das
mov
scas
xchg
daa
pop
mov
push
and
in
into
push
xchg
cmc
mov
mov
sub
cmp
push
mov
cmp
mov
es
sarl
sbb
mov
leave
dec
jmp
add
mov
jae
cld
pushf
and
aad
cmpsl
pop
cltd
cmp
push
daa
mov
xchg
sbbl
in
test
inc
mov
fldcw
push
push
sub
inc
lods
sbb
cs
pushf
pop
arpl
repnz
sbb
frstor
movsb
adc
jo
pop
scas
inc
rclb
out
lret
mov
data16
cli
rclb
daa
icebp
or
mov
xchg
inc
cltd
add
popa
xchg
bound
cmp
ret
adc
bnd
mov
pop
sbbl
mov
fcmovne
test
test
ljmp
rorl
sub
fidivs
mov
mov
mov
push
in
les
mov
in
fadds
add
je
adc
mov
clc
divl
or
push
cmp
mov
inc
dec
push
pop
insb
lods
mov
add
or
in
adc
pop
adc
or
push
xor
mov
pop
inc
xor
hlt
add
inc
les
es
lock
sbb
fcoml
jp
ret
stos
push
jge
stos
adc
iret
dec
and
sbb
movsb
idivb
mov
imul
jl
push
dec
je
inc
lock
movsb
pop
lahf
pop
lret
ja
inc
orl
sub
outsl
das
cmp
out
xor
fucom
sub
fcom
xchg
mov
or
jmp
lret
sbb
inc
inc
imul
cwtl
mov
xchg
or
out
push
fs
es
inc
sub
jne
std
add
bt
push
sbb
sub
or
sahf
xchg
sub
or
pop
loopne
add
push
outsl
mov
popa
push
pushf
push
mov
mov
cmpsl
sbb
insl
inc
icebp
pop
xor
sub
pop
repnz
inc
cld
inc
xlat
jns
xor
repnz
cld
idiv
pushf
fistpl
mov
sbb
mov
jge
cmp
or
leave
and
xchg
adc
movsl
inc
insb
mov
movsl
inc
das
maxps
cmp
add
addr16
push
xor
fwait
pusha
pop
loopne
cmpb
xchg
push
insb
mov
pop
lret
xor
push
mov
jge
xor
xor
aam
ret
ror
test
out
rcll
mov
cmp
mov
mov
scas
cmp
adc
test
aad
adc
out
cld
stos
test
rcrl
dec
xchg
add
orb
mov
dec
data16
fistpl
inc
cmp
mov
movsl
daa
inc
xor
jo
in
std
in
leave
jmp
sub
scas
insb
push
sub
mov
lahf
cmpsb
push
cmp
inc
dec
loope
and
hlt
inc
lret
lods
lcall
adc
adc
nop
xor
notb
cmp
lret
nop
xchg
popl
pop
mov
inc
roll
pushf
mov
ret
cmp
sbb
xlat
jp
xor
loope
push
push
inc
pusha
cld
or
adc
push
cwtl
push
es
fldt
push
ss
stos
xchg
push
lahf
aas
pop
push
movsb
xor
int
imul
and
in
clc
fsubl
push
inc
jno
shl
lcall
mov
imul
inc
mull
pop
pop
jnp
push
fs
push
pusha
jp
shlb
xchg
mov
aam
push
xchg
inc
xchg
pop
xchg
sub
push
jns
cli
xchg
dec
pop
shl
ds
xchg
cmp
adcl
xchg
sarl
scas
test
pop
add
pop
pop
rcll
and
sbb
mov
leave
mov
std
sti
filds
fdivr
dec
les
lcall
add
shlb
testl
ret
jne
mov
addr16
sub
cwtl
ss
call
push
push
andb
clc
out
imul
dec
cmp
ss
icebp
jnp
pop
dec
clc
add
sti
out
push
es
cmp
add
adc
in
iret
pminsw
lods
shrb
xlat
inc
inc
and
pop
insl
lds
outsl
cmp
inc
pop
dec
pop
ja
cmpb
sub
jge
in
scas
adc
pop
cltd
lcall
pop
pop
out
and
into
divl
les
cmp
cmpsl
sub
pusha
out
sub
xchg
lods
mov
rcrb
ret
test
jl
xor
and
jae
jl
mov
sub
mov
cmpsl
mov
xor
mov
ss
adcb
push
sub
jbe
ret
sub
faddl
loope
lea
mov
lock
fsts
xchg
stos
mov
out
sbbl
xchg
imul
fldt
jle
maxps
jns
loope
stos
addb
cmpsb
xchg
popf
push
movsl
idivb
cli
insb
and
xor
jae
xchg
pushl
stos
jne
cmp
inc
and
data16
testl
xchg
xor
imull
aad
ret
adc
xchg
push
add
sbb
fisttps
jp
push
js
mov
push
insl
dec
scas
mov
mov
movsl
xchg
mov
outsb
inc
jb
and
xor
scas
fidivl
xor
cmp
loope
ret
xchg
mov
lret
mov
sub
adcb
shlb
push
ret
mov
imul
insl
mov
cmp
xchg
sbb
xor
scas
hlt
dec
push
dec
and
sahf
lds
cmpsb
or
test
add
dec
inc
insb
cmp
xor
cmp
sbb
push
dec
push
pop
mov
aad
test
shufps
inc
pop
ja
push
insb
xor
jp
int
mov
and
xor
enter
int3
jnp
loop
add
pop
cmpsb
jns
mov
call
cmpsl
mov
call
imul
adc
dec
xchg
sarb
ss
sbb
stc
stos
sbb
fisubrs
mov
sbb
les
int
cmpsl
pop
pop
fsubrs
sbb
mov
test
std
xchg
out
cmpb
fdivrs
testb
inc
jnp
adc
pop
es
fstps
sarb
mov
cwtl
call
out
push
cmp
xchg
pushf
mov
imul
mov
jge
jns
xchg
xchg
and
jl
testb
sbb
push
fucom
cmp
mov
mov
sbb
rol
into
xor
lods
scas
cmp
addr16
mov
fldl
sbb
or
or
jmp
pushf
shl
mov
xchg
sarl
out
dec
add
dec
adc
xchg
add
lods
in
icebp
xor
rsm
add
mov
jecxz
or
xor
call
fldl
clc
jecxz
dec
add
decl
cmp
add
sbb
sbb
orb
rcll
jge
jnp
repz
jle
repz
mov
mov
in
lods
fnstenv
das
int3
js
addr16
and
add
push
jo
sub
int3
hlt
movsb
aaa
insl
orl
out
inc
mov
popl
lcall
pop
or
out
lds
xor
xchg
mov
mov
jg
or
bound
rolb
bound
cltd
mov
adc
jo
into
je
xchg
mov
loope
ficomps
add
sbb
outsb
movb
add
das
adc
pop
push
pop
mov
daa
xor
mov
mov
cmp
push
mov
into
cmpsb
testb
jo
mov
xor
insl
insl
push
shlb
ds
xor
lcall
pop
insl
sub
adc
inc
out
dec
cmp
cmc
arpl
or
cmpsl
mov
sub
mov
popf
imul
sbb
enter
mov
mov
or
hlt
cwtl
rclb
mov
repz
push
inc
jnp
out
push
aad
lods
fnstcw
bound
and
rolb
pop
mov
divb
xor
mov
ret
pusha
sub
sub
inc
jge
addr16
test
daa
fldenv
push
subl
setb
popl
lea
dec
jmp
or
inc
sub
dec
clc
sub
pop
shl
add
pop
mov
fwait
cli
push
lahf
roll
xchg
mov
gs
inc
aam
ret
push
adc
inc
pop
es
mov
in
or
jbe
insl
xchg
out
div
xchg
pop
xchg
jmp
sarl
subb
xchg
push
xchg
add
fldln2
lock
leave
fists
and
dec
test
std
icebp
in
lods
xchg
pop
aad
mov
pop
xor
clc
xlat
mov
fcoml
mov
jp
subl
lock
cld
das
js
sbb
and
xchg
cmpsl
stc
lcall
cli
hlt
enter
nop
mov
in
test
out
pop
sub
in
mov
xchg
lods
pop
sbb
jp
or
cmc
jecxz
lret
mov
jg
test
cmp
jmp
in
fistps
sbb
js
ret
mov
sbb
jecxz
xchg
fwait
xor
and
add
sub
lret
jns
mov
pop
sub
ret
pop
leave
sbb
and
xor
in
mov
outsb
inc
sahf
cmp
pushf
stos
mov
mov
movsb
push
inc
adc
sar
mov
sbb
shrb
ljmp
add
mov
call
or
call
fstp
addl
push
add
loopne
mul
idivb
jbe
or
add
lods
stos
into
xchg
loopne
pop
sub
nop
aam
cli
xchg
mov
repnz
push
pop
mov
and
aam
test
xchg
sub
sub
adc
mov
xor
test
cmp
out
ret
ljmp
xchg
icebp
ficompl
xchg
inc
cmp
and
shll
imul
sbb
insb
sarb
pop
out
cmp
xlat
imul
cmp
fidivl
or
inc
popf
dec
sti
jecxz
or
or
imul
push
mov
in
dec
push
adc
movb
add
lds
outsb
scas
outsb
movsl
pop
orl
xchg
fildll
sbb
jb
xchg
nop
cmp
aas
hlt
mov
aas
out
jle
call
xchg
pop
xor
cmp
stos
xchg
mov
xchg
dec
es
pop
xchg
and
xchg
mov
in
lcall
adc
or
mov
and
push
push
call
pop
inc
fiadds
decb
jb
sub
lods
aam
pop
mov
cmovl
push
mov
add
pop
pop
push
xchg
jne
scas
ret
mov
push
hlt
jbe
inc
mov
push
test
inc
push
movsb
cmp
cmp
sahf
cmp
addl
add
push
jg
std
adcl
repz
scas
hlt
mov
pushf
xor
insl
ucomiss
mov
insl
cltd
jmp
inc
adc
xchg
xlat
call
adc
ret
jne
adc
mov
mull
fsubs
xchg
test
xor
inc
icebp
loop
and
inc
sbb
sbb
add
ds
shll
pop
rorb
push
loopne
dec
hlt
mov
fldt
test
and
mov
aam
movsb
push
xor
xchg
sti
mov
xchg
test
dec
mov
jmp
aad
stos
dec
ficoms
lods
cli
xor
xor
push
lods
push
mov
cmp
mov
aad
bound
test
mov
inc
lock
push
mov
icebp
shl
dec
rcrb
inc
mov
push
mov
and
push
xor
push
mov
stos
outsb
test
xor
adcb
ja
lahf
dec
xchg
stos
sbb
enter
mov
daa
popa
jae
pushf
inc
jae
mov
in
xlat
cwtl
repnz
outsl
stos
shrd
bound
cmp
push
sbb
out
dec
es
push
inc
and
int
mov
adc
adc
jle
cmp
cmp
lock
xchg
cmpsb
adc
add
mov
and
cli
loope
es
stos
mov
sbb
adc
lea
fs
mov
mov
sbb
repz
test
test
sbb
xlat
or
inc
pop
out
addr16
cwtl
mov
sbb
nop
incl
sbb
cld
push
roll
or
daa
adc
xor
lock
out
adc
cmp
test
pop
pushf
push
adc
mov
aam
rcrb
push
int
cwtl
push
mov
sahf
mov
andb
mov
xchg
movsb
adc
add
sub
aas
mov
sub
or
nop
sub
aam
fwait
inc
outsl
notb
xchg
lods
inc
mov
dec
adc
add
and
dec
dec
cmp
sti
and
cmc
aaa
adc
fnstenv
in
cmp
sti
lret
lcall
fwait
pop
in
call
push
iret
jmp
push
and
test
repz
push
pusha
jge
cmp
in
aam
sbb
daa
pop
dec
cmpsb
insb
ljmp
inc
sub
xchg
call
in
scas
ljmp
or
shl
ss
int
test
clc
cmc
les
xchg
push
mov
fwait
movl
gs
fadds
inc
mov
ljmp
sbb
mov
aad
mov
jb
pop
sbb
adc
fucomi
stos
cs
jmp
ret
std
lret
outsl
cmp
popa
dec
xchg
sbb
mov
addl
push
sub
in
sub
daa
dec
ret
push
adc
outsb
mov
mov
es
gs
sahf
sbb
xlat
xchg
adc
mov
or
pushl
and
nop
std
push
add
add
cmpsb
adc
jb
inc
mov
mov
ja
jb
mov
cmpsb
rcll
inc
xchg
xor
cmp
or
sbb
div
mov
daa
sbb
movsb
sbb
adc
xchg
arpl
mov
push
pusha
push
and
insb
icebp
into
pop
and
mov
movsl
xchg
clc
nop
xchg
xchg
mov
sub
clc
or
fldl
sbb
ret
out
orl
mov
inc
lods
cli
pusha
fs
out
push
xorl
add
sbb
ret
shl
adc
addr16
aaa
cltd
and
push
aaa
scas
sbb
std
jge
test
fwait
pop
arpl
in
xor
ss
push
pop
popa
push
cmpsl
mov
outsb
aam
cli
das
shll
sbb
dec
shl
fcmovb
inc
in
hlt
dec
dec
sbb
daa
cltd
cltd
jns
les
xor
popa
negl
jmp
clc
cltd
xor
movsl
mov
pop
mov
inc
stc
adc
scas
mov
aam
dec
popa
in
jmp
adc
pop
push
sbb
nop
leave
sub
mov
mov
rcrl
sbb
pop
cmp
push
sbb
das
imul
rorl
fildll
mov
add
lret
jge
bound
or
es
shrb
in
cmpsb
adc
pop
sub
cld
cwtl
lahf
xchg
lods
popf
mov
clc
testb
bound
push
and
mov
out
call
test
test
or
daa
cmp
add
ret
xchg
adc
flds
jge
fcmove
mov
fcomip
out
aam
lods
pop
push
jbe
add
loopne
push
dec
sbb
sbb
cs
lret
scas
pop
call
mov
mov
int3
add
ja
enter
pop
jg
fiadds
sub
int3
pop
sub
dec
adc
dec
aas
pop
cli
mov
fdivrs
test
add
mov
xor
insb
ret
dec
mov
xchg
pop
cs
and
mov
ret
mov
mov
imul
sub
mov
stos
sbb
stc
int
les
inc
dec
lret
mov
push
jb
ja
loopne
lret
jo
lea
push
notl
jns
xlat
mov
leave
orl
rcrb
rclb
dec
and
xchg
lret
rolb
ljmp
mov
dec
sahf
xor
sub
lods
jge
ret
ud2
int3
mov
inc
ret
mov
rcrl
call
push
insl
test
jmp
dec
ret
cmp
rcrl
insb
rcl
mov
popa
ja
std
jo
mov
mov
mov
pop
sti
sub
ds
pop
mov
ficompl
aaa
jp
or
mov
or
cmc
cmp
lock
lret
shl
ret
lret
cld
pop
stc
mov
mov
inc
mov
test
jb
or
cmp
pop
clc
orl
fisubl
rcrl
insb
ljmp
and
xor
xchg
out
sub
and
sahf
push
das
lahf
je
dec
jmp
cltd
gs
in
xchg
pop
cmp
xchg
decb
dec
stc
mov
fdivs
dec
adc
adc
sub
daa
addr16
ds
xor
mov
aaa
insb
push
mov
xchg
icebp
stos
mov
ss
xchg
sbb
ljmp
push
push
push
mov
je
mov
cmc
push
sbb
or
add
and
xchg
filds
adc
test
and
pop
xchg
jecxz
mov
add
popa
movsl
fdivrp
push
insl
mov
test
loop
xchg
das
and
dec
aad
inc
xchg
or
lock
mulb
inc
pop
fmuls
scas
cmpsl
cmp
mov
mov
cmp
inc
adcl
inc
push
fimuls
push
js
add
int3
std
pop
jecxz
les
sub
mov
pop
inc
sub
jo
push
mov
mov
mov
cmp
ss
sbb
aas
mov
add
fldt
mov
repz
subl
dec
pop
push
cld
jb
repnz
pushf
int3
push
loope
repz
and
add
xor
dec
lods
nop
dec
shlb
sbb
push
sarl
insl
in
fbstp
cld
mov
mov
jge
adc
cli
inc
sti
dec
push
inc
or
mov
out
and
shrb
jge
aaa
jnp
sub
jae
jl
mov
mov
lock
jo
mov
repz
fcmovbe
adc
xchg
dec
mov
test
outsb
mov
std
inc
out
cmp
sub
fidivrs
shll
pop
lods
jns
f2xm1
imul
mov
pop
adc
and
pop
popf
daa
mov
sbb
jmp
mov
lods
jno
rcrb
cs
sub
imul
and
cmc
sub
jl
and
xchg
xchg
push
sub
adc
icebp
xor
mov
mov
and
stc
outsb
or
les
jne
andl
rcrw
nop
jecxz
mov
loope
out
outsb
push
stos
aam
gs
packuswb
mov
stos
insl
mov
aas
and
test
popa
inc
pushf
fistps
xchg
push
dec
push
lahf
dec
shl
xor
cld
movl
cwtl
lret
push
in
popf
mov
sub
ljmp
pop
aam
cmp
cltd
sub
cmp
or
out
icebp
sub
xor
push
mov
fistpl
xor
jle
mov
and
mov
scas
int3
dec
in
add
mov
dec
pop
push
lds
mov
mov
xchg
std
inc
daa
cltd
add
jg
shrl
iret
adc
pushf
cli
sti
sbb
clc
add
sbb
cmp
cwtl
mov
insl
jne
cs
push
add
inc
in
testb
fsubrs
sti
jmp
mov
push
loop
ss
pop
data16
imul
aam
cmp
incl
xor
cmpsb
mov
push
and
or
lock
sbb
sub
inc
or
shl
xlat
enter
sub
outsb
adc
arpl
push
aam
out
jecxz
xorb
faddl
dec
nop
scas
fidivrl
lahf
repz
aam
jo
fwait
pushf
xchg
shlb
rcr
adc
jne
jb
imul
jp
jmp
inc
or
cltd
sbb
bound
pushfw
mov
jne
sub
repz
push
mov
cmp
lds
adc
mov
push
aam
inc
out
mov
adc
icebp
pop
bound
mov
lds
lods
mov
js
aam
push
or
pop
pop
jnp
loope
lea
and
add
add
data16
pushl
xor
inc
ficomps
xchg
xor
pop
xchg
fisubrl
dec
sbb
add
aam
cs
mov
shr
shr
dec
icebp
xchg
fucomi
add
fcoml
sub
xchg
mov
lods
add
ss
daa
cmp
push
mov
xchg
aam
pusha
and
add
jg
shrb
inc
push
inc
ret
shlb
add
sbb
in
push
mov
pop
sbb
out
mov
mov
test
mov
mov
fcompl
mov
adc
or
jbe
fwait
adc
fstp
and
fstps
sbb
add
cli
fucomi
and
jo
xchg
out
cmp
ja
push
outsb
and
mov
cmp
shrl
mov
rcr
rcll
cs
cmp
loope
sbb
xchg
cmp
bswap
xor
lods
cmp
test
scas
pavgb
jbe
cmp
jp
sbb
push
mov
or
xchg
dec
and
dec
and
jno
sub
fnstcw
fmull
cmp
ret
aad
dec
pop
or
mov
or
mov
daa
pop
ret
jl
movsl
jge
aas
movsl
push
xor
inc
adc
push
sbb
pop
mov
lods
test
inc
pop
mov
mov
adcl
jae
cmpsb
fdivr
in
les
sbb
loop
adc
in
out
mov
mov
sarl
mov
cmpsb
sub
loop
jb
in
nop
jno
ds
cmc
or
repnz
je
pop
test
xor
add
ds
and
inc
test
or
push
lock
cmpsl
out
aaa
pop
pop
and
cmpsb
mov
scas
inc
xchg
push
pop
or
mov
add
stos
arpl
mov
xchg
fwait
mov
loope
fldenv
jmp
mov
add
mov
and
or
sbb
nopl
xchg
xchg
dec
movl
dec
adc
cmc
xor
pusha
xchg
fnstsw
pop
jle
out
push
aad
mov
mov
sub
inc
or
add
jmp
adc
bound
mov
gs
hlt
lret
in
pop
movsl
imul
dec
hlt
mov
das
cld
jmp
fstpl
jne
test
xor
ffree
sarb
mov
bound
pop
cld
pop
push
rcll
jb
and
push
jb
inc
sbb
mov
push
mov
stos
into
das
stc
stos
repnz
pop
iret
lret
movsl
push
test
lahf
orb
adc
aam
pop
or
sbb
inc
pop
mov
cmp
loop
xchg
push
movsb
mov
adc
in
xor
fucomip
icebp
repz
xchg
mov
mov
mov
jge
imul
fisubrl
js
inc
cmp
add
and
cld
mov
dec
loope
push
cmp
fwait
jbe
dec
stos
sub
mov
dec
cld
and
push
nop
cmp
loopne
int
fistpl
mov
lock
or
inc
jno
inc
shlb
xor
jl
xchg
xchg
xchg
jle
jb
fs
in
dec
push
stc
fs
lret
pop
dec
test
rorb
ss
out
movsl
outsl
out
xor
pop
mov
fs
ja
test
xchg
in
mov
sbbl
mov
mov
and
repz
cmp
xlat
adc
mov
aam
sub
fistpll
xchg
inc
push
push
dec
js
inc
shll
mov
cwtl
scas
mov
lea
insb
call
testb
sub
push
jp
dec
cmp
add
xchg
lahf
notl
mov
xchg
xlat
adcl
ret
sub
outsb
xchg
daa
aas
jae
fcoml
and
scas
xchg
ljmp
mov
scas
xor
mov
pushf
and
xor
push
sar
loope
xchg
pop
roll
mov
push
orb
leave
shrl
jmp
add
jne
add
mov
pop
inc
pop
mov
dec
add
leave
fnstcw
push
jle
inc
pop
push
mov
lcall
inc
push
pop
mov
push
pop
cmc
into
scas
jnp
arpl
mov
push
inc
xlat
dec
xor
leave
adc
mov
ret
mov
out
inc
xlat
loopne
pop
cmp
inc
xchg
cmp
and
mov
mov
jecxz
jo
inc
dec
xor
das
test
loope
sbb
adcb
dec
inc
xchg
mov
insb
fs
xchg
mov
sysexit
insb
add
push
add
inc
test
jp
nop
xchg
in
mov
rorb
jo
dec
xor
xor
mov
icebp
jnp
xchg
loopne
in
push
stos
dec
movsl
xlat
mov
jae
stc
rclb
addl
mov
xlat
push
adc
dec
stc
loop
in
stos
test
jmp
push
dec
enter
psrlw
jbe
and
xchg
aaa
and
jns
mov
lcall
mov
push
movsb
ljmp
inc
pop
jge
insl
clc
sub
ja
pop
outsb
push
shlb
out
xchg
cmp
and
jbe
in
out
add
mov
mov
dec
lcall
mov
jg
mov
and
in
dec
cmp
push
push
test
jnp
cmpsl
push
or
jle
xchg
mov
dec
shl
pop
and
and
in
sbbl
mov
pop
mov
xchg
shl
push
and
inc
pop
scas
lea
in
sbb
pushf
pop
add
push
sub
adc
scas
and
popf
lds
les
and
into
mov
fld
pop
divl
aad
mov
sbb
jg
bound
push
mov
dec
mov
or
adc
adc
rclb
sti
jg
loope
adc
cmpsl
popa
sbb
insb
xor
fs
pop
mov
das
lcall
add
inc
fmuls
cmc
movsb
cmpsl
mov
push
lahf
jle
pop
mov
lods
std
xchg
pop
adc
inc
adc
dec
push
sub
and
jo
fildl
mov
js
jmp
clc
pushf
inc
sbb
mov
xor
adc
cld
cwtl
or
dec
push
packssdw
xchg
mov
clc
lods
pop
scas
loop
clc
cld
and
aad
xchg
pop
jnp
mov
mov
xor
xchg
pop
dec
push
and
adc
sbb
mov
pop
out
repnz
pop
sbb
imul
add
je
lcall
sub
pop
adc
mov
imul
ret
jle
inc
adc
add
mov
add
dec
cltd
pmuludq
je
pop
fisttpll
mov
inc
arpl
mov
push
lcall
xchg
out
add
mov
std
rolb
dec
pop
cmpsb
pushf
int3
sub
aaa
stos
fnsave
dec
sub
mov
add
sbb
in
fwait
fwait
cmpl
lods
inc
jbe
mov
jl
pusha
mov
inc
cmp
test
popf
dec
test
ljmp
dec
jmp
out
mov
inc
pop
lea
pop
leave
sub
sbb
packuswb
and
and
inc
ret
mov
dec
pushf
loop
stc
sbb
sbb
push
fsubrs
sub
mov
mov
in
int
jp
push
cmp
inc
push
mov
fdivs
in
hlt
nop
push
in
pop
jp
add
jo
mov
and
fld
push
cmp
push
in
mov
and
sbbl
xlat
fstp
mov
xlat
or
cmp
rcll
mov
jbe
insb
xor
mov
or
jg
fwait
aam
mov
lds
mov
shll
sahf
fdivl
jno
repnz
dec
cmp
loope
jg
add
mov
sbb
jge
lcall
imul
adc
mov
xor
mov
or
inc
xor
shl
inc
test
int
out
xor
mov
mov
add
cltd
repnz
mov
sbb
das
int
mov
orb
iret
sbb
adc
xchg
pop
pop
stos
repnz
adc
mov
flds
cmp
loopne
cmp
ud1
mov
insb
rep
jns
xor
in
int3
fmuls
add
sahf
in
jo
xchg
mov
dec
mov
jbe
pop
dec
scas
mov
jge
or
inc
push
fs
jno
sbb
loope
decl
incb
mov
mov
cmpsl
and
fisubs
in
popa
insl
or
jae
xchg
shl
cli
sub
dec
notl
loop
fisttpl
enter
icebp
pop
dec
bound
movsb
insl
cli
fucomp
lock
and
insb
mov
push
test
test
stos
cmp
ljmp
lods
push
clc
mov
or
je
mov
aas
xor
add
add
lea
xchg
adcl
dec
mov
orb
jmp
aaa
les
stc
push
data16
jo
mov
gs
lret
mov
sub
or
xor
xor
pop
and
mov
iret
fs
daa
add
fwait
pop
sbb
push
add
les
out
and
mov
dec
int3
lret
data16
js
sbb
xchg
andb
inc
mov
jbe
fsubr
jbe
pop
adc
cld
add
in
push
stc
xchg
movsb
js
or
gs
mov
and
repz
out
jg
scas
scas
test
roll
and
loope
xlat
lahf
sbb
aaa
loope
movl
mov
jp
mov
xor
pop
int3
out
jl
pop
adc
inc
jmp
fs
jno
icebp
out
loope
mov
dec
imul
mov
popa
dec
mov
xacquire
orl
add
fnstcw
push
add
mov
or
cltd
lret
jmp
cmc
xchg
xor
fcmovnu
cli
fwait
sub
nop
in
sub
popa
xorb
add
pusha
fistpl
pop
push
in
or
adc
mov
pop
les
icebp
xchg
icebp
int
add
add
mov
cmp
outsb
adc
movsl
das
je
mov
xchg
scas
inc
push
mov
sbb
fistl
movsb
outsl
push
inc
ret
lock
addr16
call
dec
push
loopne
mov
xchg
adc
shll
fcomp
jne
test
movsb
pop
hlt
mov
pop
pop
mov
daa
iret
adc
sti
push
push
or
xchg
mov
dec
sub
pop
xchg
call
sub
mov
fbstp
jae
push
inc
add
data16
ljmp
in
pop
scas
mov
call
rorb
in
ja
push
leave
xor
aas
cld
les
es
ds
fcoms
add
adc
mov
mull
pop
jb
jae
aad
in
fistl
fwait
add
lods
gs
f2xm1
daa
pop
and
fnstenv
mov
aam
aaa
aad
les
addr16
sarl
xor
test
xchg
cmpsl
imul
jp
xchg
push
test
adc
and
sbb
mov
cmp
mov
bound
and
add
sbb
adc
jle
dec
sarl
outsb
lock
add
mov
outsb
insl
push
lock
push
mov
jecxz
idiv
adc
loop
insb
mov
cmp
mov
cmpl
mov
bound
mov
mov
test
fimuls
cmp
int
cmp
movsb
sbb
in
arpl
in
out
repz
mov
lock
xchg
stc
sub
mov
fldl
mov
je
cwtl
popf
lds
add
inc
cmp
and
lret
jg
dec
mov
out
push
pusha
sub
xor
test
sti
jae
or
mov
in
pop
insb
es
outsl
or
xor
xchg
gs
fwait
icebp
push
and
shrl
push
push
sbb
sub
scas
fisttpl
out
adc
sub
xor
mov
pop
sub
push
and
insb
sub
data16
ret
jo
fimuls
mov
jmp
lret
cli
je
dec
incl
pushf
mov
jmp
sbb
xchg
mov
out
dec
frstor
jb
popa
pop
dec
fbld
push
fstps
xor
and
stos
mov
pop
bound
push
push
daa
stos
adc
jmp
inc
paddusb
aas
repnz
xor
popf
mov
inc
iret
js
ret
and
mov
mov
mov
xor
push
scas
pop
pop
add
push
pop
hlt
sub
mov
inc
jg
add
test
lds
imul
add
pop
cmp
sub
imul
sti
push
jg
push
arpl
push
add
popa
insb
stos
jge
mov
ficomps
cmp
fsubrs
js
lret
jp
repnz
jb
leave
data16
mov
mov
and
sbb
jns
movsb
mov
xor
pusha
cwtl
sar
aad
insl
adc
mov
ret
lret
mov
jg
jmp
sbb
xchg
test
imul
rclb
xchg
mov
test
sub
fdivrl
xchg
stos
mov
jb
dec
adc
jmp
clc
or
aad
xchg
jo
or
sub
imul
push
and
pop
mov
lock
loop
push
movl
lahf
and
fwait
jmp
mov
or
dec
mul
or
je
repnz
cmp
pop
leave
push
sbbb
mov
cmp
out
cld
in
imul
dec
add
data16
sbb
cltd
int3
push
pop
int3
mov
mov
and
sub
cli
xor
cmpsb
movsl
icebp
pop
es
sbb
lods
xor
jl
sub
test
test
adc
xchg
movsl
adc
pop
inc
or
xchg
sub
xchg
dec
lods
icebp
xchg
push
addr16
ret
sbb
loop
fimull
enter
sbb
mov
dec
push
inc
roll
dec
ja
in
ljmp
sbb
jnp
mov
mov
jb
jl
daa
mov
lods
xorl
lock
cld
into
sub
iret
clc
jle
sub
outsl
xor
mov
enter
sbb
cmp
ss
shrl
hlt
in
mov
lcall
cmpl
and
add
sbb
and
or
out
sbb
push
sub
jge
into
ss
and
leave
xchg
in
int
orl
mov
scas
pop
imul
inc
pop
push
adc
push
xor
das
mov
ret
pop
ret
push
movsb
sbb
and
mov
inc
push
xchg
dec
dec
out
xor
pop
push
aas
cmp
ljmp
cmp
fsubrl
daa
add
inc
aam
ret
in
dec
dec
xchg
mov
fidivrs
aaa
repnz
sbb
inc
push
and
sub
sub
in
cmp
fstpt
add
sub
mov
jns
dec
pop
push
arpl
hlt
addr16
pop
gs
cmpsb
imul
mov
cmpsl
lret
adc
pop
addb
adc
lods
test
jno
rol
cmp
testb
js
in
in
jge
cmpl
outsb
out
insb
outsb
xor
nop
add
sarl
jg
daa
xor
jmp
clc
xchg
xchg
mov
loope
add
ds
push
cmp
shlb
pop
xchg
pop
loopne
xor
lcall
sub
in
sbb
jle,pn
jae
xchg
push
add
inc
cmp
and
add
or
subl
xor
push
aad
jno
add
lds
into
ss
mov
cmp
pop
or
mov
repz
cltd
gs
sub
cmp
pop
push
out
xchg
out
lret
fiaddl
rorl
test
inc
pop
fcompl
adc
in
pusha
and
rol
cmp
cltd
push
out
sbb
xchg
jbe
push
mov
pop
repz
ficoms
cmpsb
push
inc
adc
rcrl
xchg
jle
into
push
inc
dec
sbb
aad
lret
and
idivb
sbb
push
lea
dec
xor
adc
cmp
data16
pop
lds
scas
imul
push
or
ret
dec
sbb
mov
mov
dec
dec
lods
mov
pop
push
cmp
adc
push
in
data16
jae
fcomi
and
cmp
pop
paddd
mov
xor
and
lcall
shrl
xor
mov
movsb
repz
fdivrp
and
jl
nop
mov
mov
mov
test
or
push
adc
lret
sub
mov
pushf
sub
nop
pop
lcall
repz
lea
ja
jae
scas
ja
inc
xchg
out
add
and
std
stos
sbb
mov
daa
pushf
adc
scas
call
rcll
or
ret
xlat
cmpb
lods
ja
cmp
jl
inc
jecxz
mov
dec
sub
call
push
clc
xor
inc
jne
jns
adc
lahf
iret
xchg
jo
repz
test
mov
xchg
clc
jg
insb
adc
fcomi
enter
cli
out
sbb
out
inc
cld
insb
movsl
and
aas
int
push
loope
push
call
cmpsb
dec
addl
jae
shl
sub
push
lcall
daa
arpl
mov
jecxz
orb
cmpsw
imul
jnp
pop
std
enter
pop
push
sbb
push
mov
push
mov
rcll
dec
daa
mov
xor
add
and
mov
arpl
aas
pop
dec
sbb
into
xlat
icebp
or
scas
out
jp
jo
dec
mov
mov
jno
test
or
adc
fcom
jbe
pop
mov
int
sub
mov
cmovo
fsts
aam
inc
lret
adc
push
dec
pop
cmp
cwtl
fsts
shlb
cmc
lods
cmpsb
cmp
rclb
add
mov
mov
inc
fldt
out
ja
mov
fxch
add
adc
les
movsb
and
sarl
mov
and
add
inc
sahf
ror
push
outsl
mov
hlt
ljmp
aam
lahf
pop
xchg
add
les
cmp
sub
and
sub
jae
mov
ret
insl
pop
daa
out
xchg
lahf
insb
je
in
lahf
rorb
cli
push
pusha
sub
push
pop
pop
cmp
add
push
es
adc
orl
cmpsl
xor
scas
in
outsl
adc
xchg
pusha
mov
inc
push
push
lock
out
add
mov
repnz
mov
cld
andl
cld
and
loopne
outsb
outsl
lea
jb
hlt
int
xchg
push
jb
in
out
jp
sub
jnp
mov
pop
test
out
mov
jns
or
cwtl
dec
pop
inc
mov
mov
jmp
push
repz
sbb
in
iret
rolb
push
iret
mov
dec
out
dec
cmp
adc
mov
cmp
repnz
add
mov
mov
mov
or
test
je
test
add
icebp
clc
mov
mov
push
int3
mov
cltd
add
mov
aad
mov
or
clc
add
xor
pop
leave
mov
and
adc
pushl
stos
inc
push
pop
inc
sub
int
outsl
les
sti
aam
ficoml
jbe
xchg
loope
dec
xchg
add
mov
push
mov
ljmp
mov
ret
mov
fwait
cwtl
mov
inc
xchg
icebp
subb
dec
inc
mov
loopne,pn
mov
pushf
mov
pop
les
call
icebp
push
mov
into
into
rorb
mov
dec
mov
aad
cld
xchg
int
pop
mov
or
cltd
sbb
pop
sbb
sbb
sbb
rorl
pop
ja
inc
das
push
pop
add
stos
pop
pushf
loop
rclb
arpl
jo
xor
sbb
add
test
lock
jl
test
sbb
ljmp
lret
movsb
shl
cwtl
fldcw
jmp
out
out
mov
adc
into
inc
into
inc
sub
jecxz
arpl
gs
test
jmp
aas
cmc
adc
push
push
call
inc
out
cmp
dec
mov
es
cmp
mov
adc
and
arpl
clc
xor
ret
lea
mov
test
loopne
rcr
and
pop
push
pop
cwtl
in
xlat
loop
test
mov
testl
pushl
int
or
pop
clc
repz
jne
adc
jl
xchg
xchg
outsb
lret
test
push
or
aaa
add
and
into
in
ror
loop
add
in
and
icebp
cltd
xchg
and
adc
stc
outsl
movsl
in
inc
cld
xchg
iret
sub
jbe
fsubrl
xchg
loopne
push
enter
nop
lods
sub
adc
mov
inc
mov
sbb
add
pop
inc
ret
xor
and
in
lods
and
sbb
dec
sahf
test
lcall
js
jae
test
mov
push
daa
rclb
shll
or
call
sub
xor
aam
pop
out
outsb
cmp
lret
or
pusha
and
pushf
or
arpl
dec
adc
adc
and
cltd
pcmpeqd
inc
fwait
push
add
outsb
movsl
push
cmpsl
fisubl
test
fisubs
xchg
push
lret
inc
icebp
aad
xor
ljmp
ficompl
xor
or
jl
daa
pop
adc
dec
mov
cld
pop
vaddpd
xlat
push
inc
inc
add
popa
mov
sahf
rcl
in
xlat
sub
mov
in
cmp
add
stos
and
dec
or
pop
daa
mov
in
mov
loope
jmp
adc
stc
sbb
dec
xor
inc
insl
xor
and
fldcw
testb
mov
xchg
mov
faddl
lahf
dec
sarb
sbb
adc
pop
dec
jnp
adc
mov
push
stos
mov
adc
push
push
sub
xor
je
push
ret
pop
xchg
les
lods
jl
jo
push
aam
push
inc
mov
enter
and
sub
fnstsw
stos
xor
pop
repnz
push
sti
notl
xchg
and
push
dec
test
cmp
iret
pop
out
aas
and
jb
adc
adc
push
movsl
fsubp
arpl
nop
cmp
inc
xor
repz
jno
mov
xor
and
mov
shrl
outsb
cmp
test
fcompl
repz
mov
sbb
addr16
ret
xor
push
lock
cmp
and
pop
dec
push
xor
add
jnp
lahf
es
adc
stos
popa
std
sbbb
add
imul
pop
ds
std
mov
sub
mov
ljmp
mov
mov
mov
lock
mov
add
xlat
in
lods
in
imul
jno
push
sbb
and
add
orb
push
out
filds
aam
mov
cltd
addr16
sub
outsb
mov
lock
adc
sbb
in
sbb
xor
test
sarb
lds
or
fdivp
cltd
in
loopne
addr16
enter
in
sbb
sub
pop
jmp
imul
bswap
xchg
sbb
cmp
xchg
lds
mov
pop
repz
push
aam
pop
jno
dec
jns
loopne
popf
scas
cmpsb
daa
out
push
sub
fstp
sti
jge
test
fidivl
sbb
push
leave
dec
xor
into
fcmovnb
sbb
std
lds
and
loopne
fildll
sbb
push
xlat
xor
lds
add
cli
xchg
cltd
movsl
dec
jbe
int
daa
test
cs
xchg
iret
adc
sub
shl
add
jnp
push
xchg
loop
jge
popf
loope
test
adc
shl
lods
push
fcompl
mov
enter
jbe
int3
mov
and
push
mov
xor
mov
push
and
inc
sbb
out
jge
lock
in
sbb
mov
es
inc
push
test
loop
push
aam
faddp
popa
adc
arpl
xor
sahf
fs
les
xchg
sbb
inc
rcll
popf
push
jae
sbb
push
xorb
scas
vpmaxub
mov
shr
fmuls
loop
into
mov
arpl
xorl
pop
mov
lret
inc
xor
ficoml
mov
jne
mov
int3
push
or
sahf
mov
lods
pop
or
jg
addl
cmp
push
jne
in
into
pop
push
or
add
out
pusha
ss
push
cld
jo
loope
in
in
test
out
imul
cmpsb
mov
xor
inc
fsubr
rclb
sbb
sbb
lock
and
rorl
jnp
cmpb
inc
sahf
movl
fisubrs
cmp
mov
hlt
inc
aas
xchg
mov
sub
iret
dec
dec
dec
lret
scas
outsb
lds
pusha
sub
push
addb
sbb
aad
ljmp
jo
adc
push
stc
and
pushf
push
jmp
mov
push
xchg
mov
nop
add
mov
movsl
inc
popl
enter
rorl
pop
and
fcmovnbe
jp
scas
lcall
adc
lods
out
mov
xor
mov
xchg
popf
cwtl
icebp
add
loope
adc
pop
lea
mov
push
mov
mov
inc
ja
int3
push
xlat
data16
shll
sub
jge
mov
add
jecxz
leave
fldt
sbb
stos
sub
xor
jg
jae
testb
sub
adc
ljmp
jne
in
or
jnp
pop
cmp
xor
mov
mov
push
mov
data16
stc
mov
shlb
jnp
push
mov
les
mov
lret
and
mov
cmp
out
mov
mov
xlat
inc
xor
imull
dec
jle
mov
pop
out
sti
aam
inc
shll
mov
ss
dec
jmp
pop
fstl
mov
mov
push
xchg
adc
push
jae
add
jge
xor
sbb
push
jnp
outsb
aam
push
shll
iret
imul
outsb
add
aaa
jge
jp
insb
popf
stos
pop
cwtl
dec
lods
mov
cli
arpl
sbb
jl
push
pop
xchg
xor
or
pop
insl
pop
cmpsb
dec
jo
addr16
cmp
fwait
add
mov
add
sahf
imul
aaa
pop
sahf
lahf
push
jecxz
xor
aaa
sub
push
inc
outsl
jl
pusha
inc
mov
ret
or
add
pushw
nop
or
out
push
jle
negb
cmpsl
and
idivl
les
or
add
cmp
pop
fwait
sub
fwait
inc
xor
das
jne
adc
jle
or
ljmp
andl
sub
popa
and
push
inc
pop
lods
adc
ds
movb
jge
push
ds
inc
fistps
mov
shll
push
mov
repz
sub
cltd
dec
shlb
aas
and
mov
mov
inc
or
sbb
fsubl
jp
xchg
in
js
loop
data16
xor
fdivrl
mov
push
out
or
ret
stos
cmp
mov
icebp
shrb
xchg
orl
in
jge
repz
sub
stos
das
fdivrl
imul
mov
add
add
js
scas
cmpsl
shrb
and
adc
pop
and
subl
lcall
bound
pop
addr16
insb
das
fistpll
imul
in
nop
pop
ljmp
sbb
fs
pop
stos
and
xchg
ljmp
out
dec
xchg
test
push
inc
dec
int
pop
dec
leave
jo
or
pushf
jg,pt
jp
mov
add
push
cltd
je
dec
cli
das
push
inc
pop
cltd
testb
stos
push
shll
in
insb
xchg
dec
stc
ret
fsubs
jle
pop
push
sbb
movsb
mov
pop
xchg
xchg
and
xchg
inc
icebp
adc
sbb
pop
call
in
mov
dec
adc
lock
addr16
jno
lret
xchg
fnstenv
stos
clc
mov
pop
mov
ret
in
fdivrl
lods
sahf
add
lea
pop
mov
lock
cmc
cmp
xor
inc
idiv
lods
push
scas
andb
fmul
decl
aam
ljmp
xlat
loop
dec
insb
xchg
pop
push
mov
ret
ret
push
imul
mov
rol
add
mov
pusha
or
inc
test
or
mov
fisubl
and
adc
in
and
and
lods
ret
xor
xchg
ja
jno
ds
add
lods
xor
fnstcw
sti
mov
dec
outsb
mov
sub
mov
test
cmp
mov
fldcw
mov
scas
loope
mov
arpl
sbb
cmpsb
addr16
xchg
repz
and
or
punpcklbw
jle
es
adc
aad
xchg
lcall
out
lds
in
movb
add
scas
sbb
xor
test
mov
mov
and
jae
dec
pop
mov
and
int3
adc
mov
jecxz
dec
into
mov
sub
enter
pop
je
mov
pop
popf
mov
mov
inc
push
inc
cmp
testb
scas
icebp
mov
xchg
inc
rorb
data16
ss
test
out
mov
push
push
add
sub
mov
popf
xor
dec
fsubrs
dec
cmp
mov
mov
sti
inc
not
xlat
push
shrb
out
fidivs
cmp
adc
mov
or
sub
repnz
loop
pop
jecxz
enter
filds
push
jbe
nop
add
mov
mov
inc
mov
mov
rorl
ffreep
dec
shlb
xchg
jmp
xchg
ret
xchg
pop
pop
push
sub
jnp
xchg
out
push
jbe
inc
dec
lock
xlat
jg
mov
adc
nop
inc
push
sub
xor
sbb
in
scas
xor
dec
pop
shrb
pop
popf
dec
dec
mov
mulb
xchg
ficomps
into
dec
xchg
xchg
mov
mov
sbb
cmp
inc
mov
add
xor
cmpsl
mov
and
add
arpl
xchg
push
aam
clc
jecxz
jmp
in
inc
sbb
rolb
add
in
mov
pop
jle
loopne
pop
xchg
clc
xchg
xor
xchg
pop
mov
sbb
sbb
pop
jmp
xchg
mov
xor
mov
cs
scas
ret
int3
push
and
shrl
mov
cmc
shll
xlat
mov
nop
xchg
xor
jne
mov
stos
dec
mov
stos
jae
dec
pop
cltd
xchg
lods
cmp
sbb
test
mov
mov
cmp
and
xchg
inc
in
ret
dec
pop
dec
xlat
xchg
mov
icebp
arpl
ljmp
lret
lcall
loop
jmp
fbstp
mov
sub
insl
jne
scas
in
pop
mov
push
fstpl
pop
or
repz
cmpsl
sub
push
clc
jmp
jns
sti
aas
fbstp
jno
pop
insb
shl
stos
add
notl
sti
cld
push
aas
xor
notb
xor
in
pop
fwait
idivl
lret
jl
push
repz
stos
mov
mov
xor
add
loop
and
sbb
adc
lea
add
mov
mov
es
sbb
fsubrl
lds
and
mov
pop
inc
andb
mov
test
dec
mov
jns
pop
xor
mov
or
mov
mov
sub
push
mov
cltd
dec
arpl
cmp
adc
sub
mov
stos
cwtl
out
rcr
not
fldt
stos
shr
xlat
add
mov
lret
pop
push
mov
adc
add
xchg
popf
call
aad
shrb
xchg
hlt
testl
sahf
sbb
xlat
inc
sarl
mov
jl
lods
mov
or
clc
xor
xor
push
cmp
cs
outsb
push
hlt
lock
clc
clc
xchg
mov
cltd
inc
outsb
repz
and
ret
mov
adcl
or
mov
inc
aam
test
mov
xchg
enter
sbb
sarb
pop
les
adc
jg
xchg
mov
xor
frstor
push
xor
lret
repnz
push
out
inc
es
xchg
mov
dec
or
jb
ss
aad
adc
jb
pop
jns
pushf
divb
ss
in
mov
repz
fcomps
lret
and
scas
mov
sar
aas
insb
xor
push
push
rcll
xchg
pop
insb
call
mov
sbb
add
pop
xchg
ficomps
loopne
mov
icebp
popa
lea
fcomps
and
pop
cmpsb
cmp
pushf
push
test
xor
loope
add
xor
xchg
add
dec
cmp
cmc
push
imulb
push
cmp
xchg
test
pop
cli
mov
mov
add
mov
or
dec
xchg
cwtl
jmp
fmuls
push
dec
mov
fmull
add
or
decl
lret
repz
xchg
mov
into
push
imul
into
sbb
sbb
push
sub
js
lods
push
mov
xchg
insb
pop
xchg
loop
jecxz
movsl
mov
pop
push
push
cmp
jo
fldl
div
push
pop
popf
je
stos
or
mov
into
add
in
roll
cmpsl
dec
cwtl
or
pop
push
rol
out
ss
xor
shr
test
mov
pop
pop
dec
xchg
cmp
outsb
cmp
and
sub
push
push
xor
pushf
lcall
call
mov
repnz
insl
add
outsl
clc
and
mov
jp
cltd
js
or
mov
or
push
fs
mov
cmpsl
push
arpl
push
sub
out
xchg
divl
inc
fdivs
mov
xchg
dec
fnstenv
mov
ret
jge
sti
pusha
jmp
pop
lcall
sub
jno
sub
mov
scas
jle
push
pop
jle
in
das
pusha
in
xchg
enter
push
js
push
daa
mov
xchg
filds
data16
iret
adc
inc
mov
sub
fadds
jo
mov
xchg
rolb
scas
jl
pop
mov
sub
scas
xor
clc
fwait
inc
stc
sub
inc
fwait
pop
xor
push
leave
xchg
dec
mov
imul
out
add
popa
pop
icebp
mov
hlt
pop
mov
in
fstpt
std
addb
push
aas
jecxz
mov
lock
xchg
pop
divl
mov
and
jnp
inc
mov
outsl
fsts
arpl
sahf
stc
fdivs
xor
bound
das
test
add
sub
dec
insb
ret
clc
push
jp
sub
dec
xchg
pop
sbb
lods
das
sub
mov
fstl
hlt
fdivl
and
xor
adc
in
dec
push
in
add
insl
loope,pt
xchg
add
aaa
outsl
rcrb
or
or
into
xor
inc
clc
add
lcall
adc
xchg
push
sbb
cmp
push
cmp
jbe
mov
mov
enter
clc
sbb
push
lcall
jb
movsb
mov
push
into
xchg
xchg
add
ss
xor
cmp
sbb
popf
loop
add
icebp
dec
mov
div
mov
lods
dec
xorl
stc
test
sarl
outsl
push
mov
jp
dec
xchg
inc
jmp
stos
mov
leave
scas
sub
and
sbb
shlb
add
stc
roll
test
xchg
shlb
cwtl
mov
add
aam
xchg
scas
cwtl
dec
stos
pop
int
lcall
and
out
stc
add
xlat
jle
lea
push
cld
popf
into
xchg
xlat
inc
inc
mov
fwait
jnp
push
push
mov
pop
das
popf
iret
mov
mov
call
sahf
jnp
push
loope
dec
lret
loop
xadd
decl
nop
into
mov
xchg
mov
stos
mov
cmp
dec
dec
mov
dec
and
or
fwait
inc
push
dec
rclb
push
out
add
mov
fwait
xor
add
mov
cmp
and
inc
clts
add
adc
outsb
push
or
sbb
xor
repnz
and
or
lea
add
fldl
pop
aaa
test
imul
cmp
push
pop
cwtl
jg
jnp
dec
les
cwtl
fcompl
xor
and
adc
lahf
filds
push
mov
fidivrl
pop
ss
xor
and
int3
xor
jl
loopne
push
mov
out
icebp
dec
sbb
add
push
mov
push
add
jnp
mov
pop
mov
xchg
pop
mov
cwtl
fidivs
aas
stos
sub
mov
loop
stos
dec
adc
add
sbb
jmp
in
nop
xor
divl
pop
sbb
stos
cli
mov
push
mov
fists
fidivrl
out
lock
sti
pusha
andl
bound
jg
inc
lods
hlt
push
fwait
dec
scas
adc
pop
cmp
pop
sbb
shll
sbb
jl
call
mov
and
dec
cli
xor
mov
ret
mov
or
cli
shlb
mov
pop
xor
test
out
mov
add
outsb
rcll
sar
cmpb
sub
pushf
jecxz
add
cmp
out
sub
filds
test
mov
leave
fldt
push
xor
xor
and
sub
fstps
jl
sub
inc
jo
rcll
xchg
mov
dec
icebp
mov
test
hlt
cltd
mov
mov
fisttpl
add
fs
push
mov
cmpsl
aaa
repz
lret
loop
stos
cmp
pop
adc
jae
popf
repnz
pop
xor
clc
mov
shr
subb
stc
mov
pop
push
sbbl
ret
mov
gs
inc
imull
mov
adc
pop
cltd
jb
pop
add
rcll
lods
adc
add
xchg
xchg
in
push
enter
cli
sahf
adc
push
adc
sbb
adc
into
roll
outsb
push
shrb
leave
std
sbb
adc
pop
jno
pop
fnstenv
xlat
push
out
test
and
fucomp
pop
jb
cmpb
lahf
jne
xchg
jecxz
inc
or
lods
pop
xorl
cmpsl
jl
inc
adcl
std
imul
adc
push
scas
enter
push
cmp
mov
jo
cmpsb
add
inc
cmp
out
and
and
iret
dec
push
dec
xlat
mov
sub
push
repnz
and
repnz
std
jbe
push
add
or
jp
push
mov
xor
loope
fsubs
das
lcall
push
push
xlat
ljmp
fdivrl
adc
arpl
jns
in
cmpsb
je
shr
mov
insb
out
sahf
popf
mov
sbb
mov
jp
mov
notl
add
cs
jbe
andb
ffreep
dec
enter
adc
in
lds
fmull
inc
xor
add
sub
fstpt
xchg
add
mulb
daa
add
mov
and
mov
das
leave
push
mov
jmp
rclb
xor
jns
jecxz
or
rcr
xchg
jge
mov
mov
cmp
xchg
lcall
es
mov
scas
mov
sti
aas
bound
mov
lods
sbb
enter
pop
lds
repz
dec
inc
xor
incl
in
jne
lahf
neg
pavgb
dec
pop
std
jmp
test
adc
xor
sub
inc
mov
add
setl
dec
sbbl
cmpsb
mov
ja
xchg
push
mov
lret
adc
jle
mov
mov
mov
cmc
lcall
sbb
mov
sbb
into
test
mov
scas
sti
lret
xchg
inc
outsl
jne
dec
push
js
pop
dec
cli
in
sarb
push
lods
mov
inc
call
push
std
orps
sbb
xor
and
pop
lods
inc
bound
lods
adc
pushl
aam
fwait
mov
and
and
mov
sbb
fisttpl
ret
in
adc
mov
aas
gs
xchg
push
mov
int3
in
jle
aam
or
jp
insl
cmp
xchg
stos
loop
sub
add
add
pop
pop
inc
inc
jle
repz
add
mov
out
or
arpl
or
pop
in
sub
xor
sti
inc
out
rcr
ret
inc
incb
shl
jp
jmp
sbb
pop
mov
insl
mov
out
lahf
jg
clc
mov
stc
lret
jp
pusha
cli
ljmp
or
sbb
fwait
push
add
sub
inc
jl
cli
xor
pop
jg
mov
push
jne
xlat
xchg
ljmp
ret
ficomps
jns
and
mov
adc
or
rclb
mov
adc
call
out
push
int
repz
pop
jmp
nop
movsb
stos
and
sub
into
pop
mov
and
rcrb
mov
pusha
int3
push
dec
jnp
mov
sub
add
or
insb
fcomps
and
dec
outsb
rolb
into
ja
push
sbb
leave
pop
outsb
lods
jb
scas
cli
bound
test
mov
shlb
rclb
jg
movsl
shll
dec
xchg
sbb
push
and
pushl
and
pop
sbb
aam
push
int
jae
addr16
add
inc
lock
cmp
mov
test
mov
adc
lds
movsb
xchg
mov
cmp
pop
push
jbe
mov
mov
fs
push
test
pop
sbb
pusha
inc
dec
js
cmp
adc
cmp
xchg
xor
in
cmpsl
rolb
aad
inc
adc
inc
jno
mov
and
outsl
xor
in
lret
sub
or
lods
cld
negl
xchg
and
push
and
mov
xchg
add
push
rcll
popf
movsl
pop
push
mov
lods
sub
cmc
test
clc
inc
fdivl
leave
out
rcr
dec
cmc
in
arpl
push
or
dec
or
lret
mov
mov
aas
push
jg
loope
stos
and
inc
push
aaa
cli
pop
jae
jl
xor
add
or
mov
out
and
mov
add
or
loope
mov
sbb
andb
add
cmp
mov
insl
sub
outsl
cmp
rclb
sahf
adc
cmp
insb
negl
movsl
mov
sarb
lret
mov
jg
jbe
push
lods
xor
sbb
loop
lret
inc
aad
mov
mov
les
aas
adc
inc
es
mov
jmp
dec
mov
push
shl
sti
scas
xchg
pushf
xor
cmp
mov
rcl
ret
lret
pop
mov
cmp
mov
sbb
mov
imul
pop
out
jno
shlb
add
xchg
cmpsb
jl
dec
lahf
xlat
push
fs
add
ret
dec
or
lret
mov
cmp
xchg
js
movsb
jecxz
dec
out
mov
lds
stc
push
aam
nop
stos
jo
mov
jmp
aas
xchg
idiv
pop
in
ja
mov
pop
cld
test
and
fldl
sbb
mov
and
leave
push
mov
mov
popa
mov
fmuls
jb
repz
mov
dec
out
scas
xlat
xchg
in
cmp
aas
jecxz
shlb
dec
out
xchg
pusha
stc
insb
icebp
pop
sahf
stos
cmpsb
cwtl
adc
fld
cld
dec
rolb
das
je
add
jmp
mov
mov
adc
pushf
int3
subb
movsl
cmc
fisttps
pop
adc
xor
or
jmp
cld
sbbl
jp
cmp
scas
cmp
adc
push
enter
fsts
addr16
rcr
jbe
sbb
popf
mov
mov
sub
or
dec
sbb
mov
popa
mov
dec
cli
jmp
cmpsl
xchg
add
dec
cmp
xchg
push
xor
mov
hlt
rorb
xchg
ds
inc
ja
test
into
aas
int3
push
sbb
dec
mov
aas
jne
dec
addr16
cmp
lea
push
test
ret
dec
or
out
xlat
push
mov
je
mov
ljmp
mov
decb
adc
aad
jg
fimull
faddl
pushf
stc
int3
jnp
xchg
icebp
lock
outsl
sar
xor
cmpsl
cmp
xchg
test
popf
adc
les
mov
stos
in
test
stos
sub
mov
loop
and
or
ds
fildll
pop
movsb
jo
mov
iret
aad
or
sbb
fcoml
xchg
jp
adc
fs
dec
or
stos
jle
mov
lea
mov
sti
push
push
jae
cltd
stos
fidivrs
hlt
sbb
in
inc
popf
or
subb
and
jbe
xor
sbb
sbb
jle
clc
xor
inc
test
div
rolb
fsubs
mov
xchg
mov
test
loope
or
jl
xchg
jmp
jecxz
enter
xor
dec
dec
bound
jne
xchg
gs
shll
lea
dec
hlt
xchg
xor
int3
inc
push
je
popf
cmp
mov
adc
adc
xchg
mov
mov
aad
sti
imul
insl
adc
stos
in
out
xor
mov
jp
outsb
xor
orb
insl
inc
or
inc
sbb
test
jb
pushf
scas
mov
jge
repz
clc
add
test
fidivl
ljmp
inc
xchg
jl
aad
xor
jl
dec
fsubl
in
and
loopne
xchg
cli
ljmp
add
adc
xor
stos
push
shrb
std
add
inc
and
cmp
imul
push
nop
daa
pop
inc
mov
stos
cs
mov
jle
rcr
lret
aaa
fwait
inc
sbb
pop
mov
add
lret
fdivl
mov
mov
xchg
aam
cltd
push
mov
outsb
jo
or
call
mov
dec
stos
lods
test
pop
dec
xor
scas
int3
clc
test
push
jmp
push
dec
jg
loop
aad
jecxz
lret
mov
lret
stos
push
lods
jno
popf
jb
pop
mov
std
and
sbbb
movsl
mov
push
xchg
daa
xchg
jmp
out
fldt
sub
dec
hlt
inc
rolb
mov
addb
or
ljmp
cli
cmpsl
jae
outsl
mov
orb
mov
dec
sub
xlat
jbe
mov
pop
or
repnz
out
pop
xor
xchg
imul
popf
addr16
xchg
std
inc
aam
or
xlat
in
pusha
mov
stc
xor
push
jg
mov
call
or
xlat
cli
and
stos
lods
mov
sbb
mov
sub
pop
push
mov
jbe
ljmp
pop
in
mov
push
negb
lods
jle
push
sti
dec
lods
out
lcall
jns
int
nop
mov
fadds
in
fistps
ficoms
jbe
iret
bound
xor
aas
cmpsb
xor
pop
lret
popf
pop
mov
and
push
and
cmpsb
mov
or
ljmp
sti
sub
push
add
lods
pop
fsubs
mov
lea
mov
add
sub
popf
data16
call
dec
xorb
cmp
loop
mov
dec
inc
dec
in
stos
loopne
push
fldl
dec
outsb
and
cmp
push
andl
push
popa
ret
test
dec
mov
in
lea
or
jo
pop
jecxz
loop
gs
sub
lds
xchg
xor
shlb
or
jge
pop
pushf
xor
mov
pop
roll
pop
and
flds
xor
cmpb
ljmp
scas
cmp
insl
dec
adc
hlt
loopne
xor
adc
inc
mov
out
out
movsl
lahf
mov
ss
test
jns
fwait
mov
sbb
mov
negb
sbbl
fildll
fildl
fdivp
js
jo,pt
fwait
clc
push
aam
mov
xor
les
jno
mov
cmpsb
sbb
js
push
lods
orl
movsb
ss
adc
inc
dec
xchg
or
mov
mov
test
push
push
sbb
mov
adc
vminss
add
push
jl
cld
push
add
xorb
fnstsw
pusha
mov
push
les
addr16
push
lahf
pop
jno
xchg
cmp
jl
add
mov
int3
addr16
sub
push
and
cmpsl
mov
jns
leave
xchg
add
lock
imul
jo
mov
fcompl
imul
mov
sarl
mov
lods
movsl
jp
cmpb
or
fistps
push
mov
leave
add
sub
push
jns
cmp
pop
jp
std
outsl
lock
xchg
cwtl
arpl
mov
dec
sbb
out
xor
idiv
mov
fimull
jns
adcl
pop
inc
lcall
mov
repnz
inc
push
repnz
sbb
fldenv
jle
pop
sub
cli
jae
sahf
or
mov
cmp
fcomps
jb
lock
stos
dec
mov
mov
outsb
mov
add
ljmp
mov
add
ret
imul
inc
sub
lock
outsl
stos
in
pop
dec
jnp
sbb
in
test
mov
adc
mov
pop
xlat
cwtl
divl
sbb
or
cmp
int3
cltd
popa
lock
insl
cmp
mov
aas
out
int3
jns
mov
rorb
cmp
mov
push
sbb
mov
das
pop
pop
enter
aas
cmp
mov
arpl
call
jns
fcmove
insl
xor
cmc
out
jb
clc
aas
fildll
sbb
out
jmp
rolb
and
roll
cmpsl
mov
sub
cmp
mov
mov
jo
mov
lods
cmp
jmp
push
pminub
xor
int3
lds
jecxz
mov
adc
adc
dec
lret
nop
dec
mov
in
lea
sti
loopne
jl
data16
lret
movb
jle
jne
shl
inc
pop
sahf
inc
push
push
aaa
xchg
shll
lcall
dec
xlat
aas
mov
gs
dec
in
je
push
mov
mov
jno
sbb
push
mov
fcomip
push
call
sbb
icebp
mov
add
mov
pop
jle
jge
push
stos
and
sub
mov
insb
fsubrl
inc
xor
xor
add
add
pop
cmp
mov
loop
sbb
scas
sti
fcmovb
jmp
jg
dec
dec
ljmp
pop
mov
jo
mov
aad
inc
xor
jle
cmp
mov
push
adc
imul
dec
jne
pop
mov
xor
sbb
pop
inc
mov
fst
pusha
xchg
addr16
icebp
xor
xor
adc
mov
lcall
pusha
push
xchg
mov
pop
adc
fcomip
dec
sti
push
into
testl
into
aad
xchg
mov
pop
loopne
mov
and
daa
icebp
sbb
in
enter
push
sbb
sbb
mov
shr
xor
inc
sub
int3
lds
mov
jnp
cmp
cltd
xor
lea
pop
jnp
repnz
xchg
cltd
hlt
add
sub
mov
repnz
out
or
scas
sbb
icebp
shr
or
jnp
add
jae
push
jle
loop
add
mov
inc
call
cmpsl
inc
cli
sub
jb
push
pusha
push
dec
out
inc
cmp
mov
rep
subb
mov
lahf
leave
and
stos
push
push
adc
cmp
push
xchg
mov
adc
test
dec
sbb
test
insb
inc
pushf
faddl
sti
mov
pop
or
mov
dec
stos
int
fildl
cld
mov
imul
push
dec
mov
clc
dec
je
das
sti
arpl
loop
sub
dec
negb
pop
bound
icebp
in
adc
cmp
push
in
out
mov
out
fwait
jnp
xor
xchg
xchg
or
loop
adc
sahf
imul
xor
sbb
dec
aas
mov
outsb
pop
pop
xchg
cmp
aas
add
mov
mov
sbb
mov
pushl
aas
dec
aam
sbbl
into
xlat
hlt
outsb
enter
pop
push
fisttps
xor
ret
jno
xor
xchg
push
mov
mov
jae
sub
pop
cwtl
mov
fsubrs
push
sbb
imul
enter
inc
xor
mov
sub
mov
cmp
sbb
sbb
int
sbb
pusha
imul
xor
adc
in
xchg
daa
mov
mov
rolb
aas
stos
pop
outsb
and
cmpb
fidivrs
add
push
into
or
jbe
mov
push
xor
dec
mov
or
cmp
pop
mov
ja
shr
push
leave
and
jbe
cmp
cs
dec
cltd
or
arpl
daa
jecxz
fs
int
mov
push
jo
add
xor
inc
cld
cmp
aaa
mov
clc
or
push
lret
sbb
cmp
sub
sub
jo,pn
add
mov
movsl
push
add
out
cmp
cmp
orl
push
adc
sbb
mov
mov
daa
cld
adc
xcrypt-ofb
cmpsl
outsl
mov
orl
addl
sti
sbb
fnstenv
dec
outsb
adc
cmp
push
ljmp
jns
sub
fcoml
leave
mov
mov
mov
sub
shll
dec
pop
mov
stc
mov
sub
repz
and
fwait
jecxz
sub
fsubrl
pop
inc
xchg
insl
push
jl
mov
mov
push
cld
pop
push
inc
leave
pop
jb
xor
or
ja
out
pop
ljmp
adc
aam
das
mov
dec
jmp
xor
inc
loopne
arpl
test
sbb
and
mov
pop
cmc
adc
xchg
xchg
sbb
inc
les
lcall
lahf
imul
xor
sbb
inc
adc
fistpll
inc
ret
gs
aas
mov
and
mov
out
mov
mov
sbb
ljmp
push
jnp
aam
cmp
inc
roll
jbe
mov
jp
dec
mov
mov
outsb
jbe
das
add
adc
fwait
mov
jo
inc
adc
cmp
sahf
push
lods
mov
outsb
adc
out
jo
insb
imul
adc
negb
pop
fs
addr16
push
loop
add
ret
stos
outsl
adc
xchg
sub
add
jno
fcomp
mov
xor
xchg
push
mov
mov
insb
pop
sbb
add
fs
jge
fcmovnbe
in
inc
lret
sbb
pusha
hlt
xchg
divb
fsubp
mov
stos
test
pop
sbb
push
mov
mov
ljmp
filds
fucomp
ror
imul
int
insb
xor
lds
or
sti
mov
loopne
insb
repnz
icebp
mov
bound
leave
out
dec
repnz
gs
sti
fisttps
dec
sbb
cwtl
hlt
and
scas
or
mov
xchg
xchg
out
les
pop
pop
cmp
mov
dec
xchg
and
scas
outsb
add
cltd
mov
jae
push
push
pusha
ja
push
dec
cs
and
adc
fwait
add
adc
inc
xor
shll
push
jns
loopne
int
imul
in
push
hlt
out
pop
in
mov
inc
dec
stc
pop
or
jnp
dec
push
add
cli
mov
outsb
and
fistps
inc
jle
test
sub
cld
loopne
fnstsw
push
sti
push
push
or
cli
ss
cmp
leave
sahf
and
mov
in
in
pop
cld
shrl
add
out
cli
test
cmp
fists
jb
cmp
push
repz
xchg
mov
aas
cwtl
in
jmp
pop
lahf
cwtl
jae
pop
fdivrs
rcll
bnd
ret
xor
sub
rcrb
sub
lcall
jmp
enter
jp
sub
cmpsb
jno
inc
lock
mov
mov
or
sub
mov
repz
mov
xchg
inc
add
lea
xchg
aam
cli
imul
xchg
jo
dec
imul
aad
mov
call
cmp
aad
xchg
iret
cmpsl
fistpll
push
ss
jl
mov
stc
jno
repz
mov
push
insl
mov
add
jmp
cmp
lods
push
pop
inc
and
push
pop
or
pop
in
rclb
xor
cmp
push
xchg
pop
xchg
filds
jbe
xor
sahf
jae
xor
mov
sub
mov
adcl
data16
cmpsl
xchg
mov
dec
insb
out
popf
repnz
aad
mov
jle
and
xor
lea
mov
push
mov
adc
pop
adc
fsubrs
mov
xchg
leave
call
mov
mov
ret
pop
js
lea
cli
mov
aas
lcall
adc
test
mov
mov
dec
test
xor
jge
leave
push
xchg
dec
adc
shrl
mov
dec
push
pop
add
int
inc
cmp
or
fwait
pop
scas
xor
jp
pop
xor
mov
scas
and
sti
movsb
xor
sbbb
in
pop
and
shl
in
dec
and
fcmove
insb
js
mov
aaa
push
clc
rclb
add
or
movsb
daa
das
jo
aad
lret
sarb
into
loop
mov
hlt
and
xor
mov
or
sahf
fxch
inc
gs
sbb
jns
jle
xchg
xchg
xlat
inc
jne
ss
rcl
mov
loope
jns
lock
jo
lods
sub
push
jns
mov
inc
ja
pop
pop
and
ljmp
push
or
push
movsb
jae
lret
jmp
jne
mov
mov
test
pop
push
and
adc
xchg
test
pop
mov
xlat
filds
inc
dec
hlt
mov
pop
jno
out
fstpt
adc
jecxz
mov
jno
mov
aam
das
sub
pop
lock
xchg
add
mov
xor
lahf
push
cmp
push
fisubrl
mov
leave
pop
cmpsl
xorb
xchg
pop
mov
fistpll
rcrb
or
enter
daa
inc
cmp
js,pt
imul
inc
dec
shlb
or
pop
pop
dec
aaa
cmovg
push
daa
push
lea
test
repz
inc
or
pushf
dec
add
sub
dec
iret
pop
cmc
xchg
mov
in
mov
inc
mov
push
xlat
cmc
aaa
dec
data16
call
dec
loope
divl
jmp
stos
data16
push
pop
addb
jp
mov
cld
loop
dec
fmull
inc
pop
cmp
imul
pop
sahf
xchg
push
jmp
clc
cltd
cmp
pop
in
movsb
add
push
sbb
scas
or
das
es
imul
xor
pop
mov
subb
cld
out
rcl
inc
inc
and
add
cmpsl
jbe
scas
sub
or
in
daa
les
inc
xor
data16
mov
jo
push
test
fs
inc
dec
add
push
sar
es
ss
pusha
mov
sbb
xor
or
dec
es
jnp
mov
adc
sub
das
rcrb
dec
cmp
xlat
es
punpckhdq
loopne
xchg
xchg
iret
or
in
jo
lods
fstpl
sti
ja
int3
mov
jne
add
and
popf
aas
lods
inc
fldenv
dec
into
aas
mov
xchg
xchg
push
xor
aas
jge
bnd
sahf
dec
push
cmpsl
xchg
rorb
mov
test
xchg
lods
or
negb
inc
mov
gs
sar
rcll
mov
sub
sub
sti
sbb
inc
rolb
imul
fmull
js
sti
jo
call
insb
pushf
pusha
mov
or
push
in
pop
dec
push
push
dec
test
adc
repnz
lea
add
xor
mov
xlat
insb
das
push
jg
iret
push
mov
or
dec
mov
dec
pop
dec
xlat
fcmovu
mov
add
stos
mov
mov
pop
sub
sbb
sbb
dec
mov
jb
push
test
out
or
aam
sbb
jb
jb
lds
and
lcall
inc
pusha
sbb
or
jo
stos
push
pop
fildl
cs
mov
shlb
rcrl
repnz
sbb
adc
jne
dec
mov
jns
or
add
and
cli
adc
cwtl
and
mov
or
lock
je
xor
xchg
pushf
mov
mov
cmpsl
xchg
cmp
xchg
insb
popa
call
fstps
dec
lods
rcrl
push
inc
mov
jns
sbb
sarl
pop
sub
bound
sbb
adc
sbb
fcmove
sbb
ljmp
stc
dec
clc
jecxz
pop
enter
in
out
es
stos
dec
push
mov
out
cli
inc
testl
jnp
mov
cmp
xchg
iretw
insl
fiaddl
jnp
ja
arpl
fwait
pop
enter
mov
jl
loop
lahf
or
pop
mov
sub
cwtl
jmp
cld
xchg
push
fistl
addb
mov
sub
cmp
sbb
jae
pop
loop
lahf
xchg
cmp
or
push
outsb
pop
aad
push
hlt
dec
push
popf
or
cmpb
repnz
lea
and
jmp
mov
shll
aam
jmpw
inc
repnz
and
and
fld
mov
push
and
dec
loopne
jmp
scas
jb
lret
lret
les
push
stos
pusha
aas
sbb
push
imul
jecxz
jle
inc
jg
movsl
scas
aaa
loopne
test
sbb
ret
jg
xchg
and
int
cmp
push
mov
add
push
mov
and
inc
fildll
inc
rolb
fstpl
lret
adc
loop
xor
ljmp
mov
xchg
jmp
sbb
push
xor
mov
outsb
cmp
mulb
fidivl
test
rorl
mov
mov
lods
dec
andb
stos
push
ret
or
sub
fucom
add
data16
pop
fsubl
in
icebp
rcrb
or
xlat
pop
pop
jle
les
pushf
je
sar
jge
fsubl
add
icebp
xor
mov
push
mov
ljmp
xor
xchg
xchg
scas
cld
jg,pt
mov
push
xor
adc
cli
add
repz
movsl
dec
mov
stos
test
mov
mov
jns
out
cmp
fmul
fldenv
insl
add
movsl
ds
cmp
xor
pop
push
mov
lods
push
xchg
mov
add
xchg
frndint
outsb
mov
jb
jbe
mov
dec
movsl
jae
pusha
and
xchg
push
in
jmp
rorl
adc
ret
fldcw
imul
fs
es
rcl
testl
rol
adc
add
dec
mov
daa
les
out
push
jo
mov
je
std
mov
sti
and
cmp
in
test
scas
lock
mov
popa
jmp
clc
and
fwait
cmp
jg
scas
xchg
mov
mov
inc
or
adc
frstor
sub
aaa
add
add
xchg
sti
jbe
add
cs
pop
rorb
mov
or
mov
add
subl
rclb
pushf
arpl
jb
inc
test
push
scas
and
int3
ret
mov
lcall
and
jg
rolb
mov
cld
add
popf
movntq
cs
xchg
adc
inc
out
cmc
push
loope
xchg
aaa
pop
dec
das
inc
xchg
mov
cmpsl
cltd
in
ja
or
fdivrs
dec
enter
imul
pushaw
pop
pop
xor
dec
jl
inc
mov
shlb
inc
cmpsb
sub
pop
es
je
mov
dec
sub
test
xchg
jle
pop
mov
stc
jb
lret
add
pop
rep
push
outsl
je
cmp
js
mov
mov
push
inc
jnp
pop
xor
js
inc
mov
sbb
rclb
je,pt
push
cmp
mov
or
fwait
xchg
mov
pushl
jne
les
sub
or
or
push
enter
mov
jg
adc
push
ljmp
aad
and
sub
pop
ret
cmpsl
into
ljmp
dec
fstpl
dec
mov
sbb
sub
jp
sbb
dec
out
cmp
adc
mov
cmp
xor
das
push
xchg
or
pop
jg
xor
insb
fbstp
pop
push
data16
mov
out
arpl
adc
mov
cwtl
gs
rorb
adc
jecxz
negl
pop
jge
aaa
xchg
icebp
jnp
cmp
add
cld
sbb
jl
dec
inc
in
sub
fcoml
or
hlt
cmp
jp
and
fisubrl
shr
xchg
mov
in
lcall
lock
and
js
cmp
mov
aam
jns
and
adc
xor
push
clc
sbb
pop
push
mov
pop
sbb
dec
insb
cmpsb
jno
sahf
outsb
pushf
out
test
xchg
cs
pop
and
sub
mov
test
mov
jmp
pop
and
aaa
or
adc
xlat
insb
loop
add
std
addr16
push
xchg
mov
xlat
mov
cmp
xchg
mov
add
inc
ja
shrl
lsl
adc
ror
sarl
insl
mov
outsl
clc
inc
dec
movsl
mov
lds
cmp
xchg
adcl
adc
jbe
adc
push
leave
mov
or
xchg
xchg
sub
int
mov
mov
mov
scas
subb
inc
mov
popf
pop
adc
ds
fwait
mov
add
std
vcmpss
das
jp
or
aas
jmp
cli
and
cltd
mov
cmp
jae
dec
shl
insb
xchg
add
leave
loopne
mov
jg
clc
jmp
es
pop
scas
or
cmpsb
inc
add
adc
cmpl
rcrl
je
xor
enter
repnz
or
jo
push
fdivrl
inc
inc
pushf
mov
pushf
test
adc
and
lret
in
add
les
mov
cmpsb
mov
cli
cmc
pop
jecxz
loopne
xor
sbb
jle
fdiv
or
mov
test
mov
dec
mov
inc
subl
xchg
cltd
sub
sti
cmp
and
jl
or
hlt
push
mov
les
in
inc
push
les
sub
daa
andb
pop
in
out
outsl
pop
xor
test
or
cmp
popa
cli
mov
mov
fdivrs
lods
add
inc
cmpsb
add
in
mov
mov
dec
mov
mov
dec
add
jle
mov
popa
xchg
push
pop
lret
xchg
add
mov
sub
addl
lahf
adc
and
mov
fmuls
mov
pop
daa
xchg
inc
jmp
inc
fs
push
jno
push
fisubrs
or
rclb
jge
jns
jnp
adcl
rcrl
mov
mov
bnd
jne
mov
nop
mov
sbb
mov
dec
xchg
pop
and
mov
outsb
pop
sub
and
jecxz
cmpsl
add
cmpsl
sub
subl
into
gs
jbe
xchg
xor
rcll
cmp
jbe
or
ret
mov
dec
or
cmpl
jl
push
sub
pushf
sbb
pushf
insb
mov
mov
jg
cmp
in
aaa
loopne
cmp
mov
push
stos
push
in
mov
mov
cli
xor
jae
mov
aam
xchg
test
mov
je
mov
jno
jg
pop
pop
rolb
cmp
push
lret
ja
sar
xchg
xor
outsb
or
in
shlb
jns
or
add
loop
enter
lret
dec
or
flds
inc
ja
push
xchg
sti
imul
inc
or
in
jnp
rcr
or
aam
push
xchg
inc
mov
orl
das
mov
mov
push
inc
sbb
data16
sub
sub
push
addr16
mov
push
stc
cmpsl
mov
add
out
out
xchg
roll
dec
rolb
sbb
mov
fwait
pop
out
inc
pop
mov
push
mov
xchg
xor
sbb
sub
pop
xchg
inc
jp
stos
ss
cld
adc
mov
fildl
push
mov
shlb
test
fcmovbe
cltd
pop
test
test
imul
mov
bound
add
and
inc
inc
adc
push
imul
enter
add
push
or
sub
subl
jbe
mov
pushf
or
jae
add
stos
std
fs
xchg
push
adc
psllw
and
push
pop
mov
add
cmp
adc
ret
dec
mov
inc
xchg
lcall
pop
js
inc
popa
and
cli
lret
insl
data16
adc
in
outsl
jb
repz
rorl
negb
div
and
mov
in
sub
jmp
add
imul
sbb
and
jo
sbb
xor
sti
or
lds
mov
add
lea
rcrb
mov
mov
inc
gs
in
sbb
repnz
push
jl
js
jne
shll
push
or
cltd
adc
fsubrl
push
add
out
add
shlb
jecxz,pt
cmp
fisubl
jg
flds
out
sbb
test
sub
push
or
xor
loopne
push
cmc
mov
cmc
cmp
loopne
sbb
imul
fwait
ss
jo
mov
sbb
inc
test
ud2
movsl
jns
imul
or
fcoms
fwait
and
cs
sbb
and
data16
jle
je
sub
push
pop
sti
or
lahf
lahf
scas
push
mov
ror
sbb
pop
mov
mov
call
adc
xchg
xor
inc
push
dec
mull
sub
fnstenv
sbb
call
in
inc
call
sbb
cmp
jp
and
sub
out
iret
shr
lret
lea
xor
push
test
call
dec
inc
ds
shll
out
jle
or
jge
add
lret
mov
icebp
movsl
arpl
and
das
fcomip
out
mov
or
jns
lea
mov
xchg
in
sbb
xchg
ljmp
mov
push
imul
loop
or
xchg
ret
fs
and
aam
aaa
repnz
incl
lahf
into
add
int
popf
icebp
fmull
pusha
lcall
out
fildll
push
sub
outsb
enter
call
adc
pop
clc
sbb
cmp
jle
sbb
scas
jecxz
sbb
mov
pusha
add
cmp
pop
es
mov
sbb
xlat
xor
adc
loop
mov
lcall
add
xchg
xor
call
fcompl
push
fistps
jp
hlt
inc
mov
sub
sbb
fistpl
insl
pop
sub
cltd
xlat
cmp
in
mov
sub
jle
ficomps
hlt
incb
inc
pop
push
stos
xor
xchg
push
sahf
jne
push
push
add
sarb
lret
or
adcl
repnz
xchg
mov
sbb
adc
out
rcrb
cmpsb
movsw
in
cld
jbe
jle
test
mov
mov
into
imul
lahf
adc
dec
outsl
jns
cmpsl
jmp
enter
lods
push
jmp
fmull
xchg
ret
cli
add
neg
mov
js
pop
movsb
adc
xor
mov
icebp
adc
jecxz
loope
pushl
mov
out
stos
or
add
mov
popf
pop
or
adc
mov
imul
add
pop
sbb
clc
xchg
enter
negl
cs
in
insl
iret
orl
sahf
mov
cmp
sub
int3
fidivrs
pop
rcrl
xor
push
sbbl
xchg
loop
xlat
inc
push
gs
adc
xchg
xchg
jg
jns
cmc
mov
test
scas
scas
pop
lea
sbbb
push
push
shlb
stos
push
push
pop
les
dec
data16
mov
cmp
loopne
icebp
xchg
xor
ret
sbb
rcll
push
lea
add
sbb
pop
ret
aaa
data16
and
jne
xor
stc
mov
sbb
stc
mov
jb
sbb
fcmovnbe
lret
int3
push
push
or
data16
out
in
adc
sbb
dec
lahf
ficoml
lea
clc
push
push
loop
clc
jmp
imul
shrl
loope
add
push
inc
es
sub
nop
inc
and
fstps
mov
push
fistps
lds
lods
scas
jbe
push
cltd
shlb
pop
xchg
insl
aaa
ret
lahf
clc
enter
adc
xor
cmp
addr16
lods
in
xlat
lds
push
and
adc
loop
xchg
fildl
aaa
jno
adc
cmp
jno
push
inc
fcmovnu
mov
mov
mov
add
scas
sub
shrl
sbb
sbb
mov
ret
lret
pop
int
fwait
xchg
and
inc
and
cmc
inc
dec
jb
push
roll
dec
jle
jo
notl
xor
jae
cmpsb
or
jecxz
mov
mov
jb
jmp
sbb
daa
jns
xor
fadds
jbe
int3
xchg
out
test
daa
lcall
call
adc
into
mov
adc
lret
popf
inc
fwait
mov
rcll
push
dec
mov
sub
divb
imul
lds
popf
mov
inc
enter
xchg
sub
mov
inc
push
leave
jmp
ljmp
cmp
push
pop
pop
mov
cs
vpsubq
in
push
cmpl
mov
inc
sbb
test
nop
rcrb
cmp
fsubs
pusha
mov
jne
ja
ja
and
lods
xchg
mov
and
in
fcmovnu
mov
xorl
jbe
push
lock
imul
adc
pop
das
mov
out
pop
jg
cs
pop
lds
mov
add
dec
into
cmp
cmp
aaa
inc
movsl
outsl
xor
xchg
rorb
cmp
lods
jle
call
sub
pop
loop
inc
jecxz
loop
jae
addl
mov
lahf
add
arpl
repz
mov
stos
pop
push
adc
xor
movsb
hlt
adc
je
pop
sti
js
gs
daa
insl
xchg
jecxz
loop
cmp
pop
mov
shll
fsubrs
pop
push
pop
push
xchg
xor
and
imul
mov
jge
sti
ss
dec
lret
or
pop
jmp
shld
cmpsl
loopne
xchg
ds
or
mov
test
or
in
test
sbb
inc
add
dec
jmp
jmp
testb
icebp
push
jl
popa
ds
shrb
push
out
mull
fistl
xchg
repz
out
outsb
adc
inc
aas
in
je
push
mov
inc
mov
mov
in
dec
stos
adc
cmp
dec
mov
pop
cmc
push
and
xor
into
aaa
mov
push
je
insb
sahf
js
push
mov
inc
mov
scas
jmp
sub
cmp
stos
pop
dec
mov
xchg
push
jge
jge
add
cs
xchg
cmp
sbb
ret
push
clc
add
das
popa
or
add
push
adc
in
dec
xchg
cmp
aam
iret
xchg
pop
jae
cmp
push
mov
sbb
aad
mov
or
xchg
ja
fstl
dec
xor
shrl
inc
ds
adc
les
mov
test
imul
adcb
jb
sub
push
inc
jmp
inc
loopne
or
leave
ret
lods
imull
mov
inc
xchg
les
test
test
pop
leave
lcall
ja
aad
xor
mov
cmp
popa
ret
insb
hlt
je
jmp
test
rcr
sub
or
out
les
push
xchg
cld
sbb
cmc
aas
adc
sbb
adc
sub
or
cwtl
loope
test
or
and
jmp
mov
ror
fistpl
push
xor
inc
or
cwtl
lock
xor
dec
cli
adc
lock
testb
nop
xor
inc
ja
cmp
push
int3
mov
lcall
loope
jmp
push
aaa
sti
imul
pop
mov
jmp
aas
iret
sahf
inc
aad
ret
pop
lods
add
movsb
xor
xor
out
fstpt
in
mov
test
ds
in
test
frstor
push
sahf
sbb
mov
mov
add
sbb
adc
js
dec
ja
cmp
call
or
cmp
out
push
mov
lock
mov
cmp
rorl
ficompl
icebp
adc
in
push
mov
dec
xchg
enter
cltd
fistps
sub
pop
cmc
hlt
dec
or
nop
in
lcall
cmp
repnz
push
arpl
sbb
inc
sbb
repz
stos
divl
push
pop
loopne
jmp
aaa
addb
js
or
inc
testb
in
jb
add
lcall
mov
mov
push
xor
addr16
dec
sti
subb
jg
inc
jmp
sub
jge
popa
enter
stos
sti
mov
fwait
je
mov
in
stos
lock
push
lods
sub
mov
xor
test
cld
rorb
int3
loopne
leave
dec
ss
and
push
mov
adc
jge
movsl
xor
lods
mov
xchg
sub
test
and
aam
and
push
cmp
popf
jb
push
rolb
jb
bound
std
and
rorb
dec
sbb
adc
iret
adc
cmp
inc
mov
clc
lcall
mov
jmp
call
or
sub
pushf
push
add
clc
sbb
add
xchg
push
pop
lahf
clc
ret
push
out
inc
mov
mov
test
xchg
mov
mov
push
aas
dec
mov
dec
and
push
push
mov
sub
pop
arpl
adc
in
jae
push
in
in
adc
call
and
add
push
sub
andl
dec
dec
andl
lret
cmp
add
mov
push
xor
add
cwtl
push
adcb
stc
lds
int
sbb
subl
jl
dec
in
cmp
adc
add
mov
and
lret
icebp
mov
cmc
lods
sbbb
pop
sub
fldcw
push
pop
push
jl
ja
mov
sbb
add
pop
cmp
hlt
inc
push
push
inc
aad
adc
push
or
test
pop
cmpsl
jne
mov
push
enter
xor
int
adc
and
int3
call
idivb
jp
xor
divb
push
outsl
mov
mov
cmp
add
enter
xchg
push
cmp
cmpsb
xchg
roll
cmpb
cwtl
xchg
sbb
fmul
rclb
inc
addr16
int
inc
pop
pop
lret
mov
lock
test
mov
aaa
pop
mov
mov
rcl
and
add
xchg
adc
adc
sbb
sbb
clc
dec
xchg
imul
xchg
xor
clc
xchg
jl
fnsave
mov
scas
outsl
sarb
and
pop
call
or
addb
mov
cs
sarl
aas
cmp
add
rcrb
add
push
dec
iret
sbb
cmpsl
mov
js
in
add
test
sbb
fwait
iret
stos
in
les
dec
sbb
push
ljmp
sbb
dec
push
mov
or
fwait
xlat
sbb
loopne
mov
push
mov
mov
les
jo
sub
mov
gs
xchg
mov
inc
xchg
test
test
mov
cmpb
iret
jbe
pushf
dec
lds
push
push
cmp
xorl
out
push
push
lahf
pop
cmpsl
test
add
decb
push
ljmp
push
dec
inc
cmpsl
push
xchg
xchg
rorl
test
sub
clc
cmp
fs
push
sbb
jae
mov
addr16
lret
mov
rclb
pop
sahf
inc
jg
pop
shll
sbb
mov
sub
cs
cltd
mov
xchg
jecxz
adc
ljmp
js
pop
std
addb
cwtl
inc
sub
xchg
push
push
faddl
and
jmp
negb
add
fimull
pop
test
add
dec
fstl
mov
in
mov
cmpsb
scas
fisubrl
inc
popf
lods
xor
out
cmp
xor
cli
mov
lcall
adc
ds
push
out
ret
sbb
jmp
mov
pop
mov
push
icebp
call
and
cltd
inc
je
shrb
fbld
in
loope
pop
jno
sar
cmp
add
ja
jp
pushf
fadd
push
sbb
push
cmp
inc
sbb
add
push
adc
cmp
jmp
mov
lods
cmp
jnp
fidivl
fiadds
adc
ja
inc
movsb
sbb
mov
push
rcll
mov
sub
and
cwtl
stc
out
testb
shlb
daa
xor
imul
nop
mov
mov
push
dec
dec
flds
sub
out
das
mov
sbb
pop
dec
cmpsl
cmp
xchg
or
cmc
lods
cs
dec
imul
in
out
fdivrs
xor
mov
mov
push
lds
clc
cmpsb
push
pop
or
mov
call
push
es
inc
stos
sti
data16
mov
push
sub
lret
bound
repz
jecxz
incl
sub
dec
pusha
lcall
inc
cmc
aas
inc
pop
hlt
dec
cld
in
sub
ret
cltd
or
push
jno
sbb
mov
sbb
call
jle
xchg
sbb
enter
popf
inc
push
inc
cmpsb
int3
jg
push
mov
aas
cmp
sub
inc
hlt
pop
adc
jnp
mov
out
mov
mov
sbb
or
test
ds
ret
bswap
xlat
xchg
mov
push
mov
lahf
dec
or
rcrl
insb
adc
movsl
mov
fdivl
jnp
add
jb
lret
jae
sub
xor
popa
dec
push
std
and
or
push
pop
fwait
ljmp
repz
inc
and
out
lahf
cmp
arpl
inc
test
dec
mov
insl
pop
sub
sbb
in
mov
mov
jo
loopne
cs
lods
or
sar
push
dec
pop
incb
sbb
out
xchg
jns
push
pushf
repz
sbb
addr16
imul
inc
out
pop
pop
lds
push
cld
adc
mov
cmp
inc
add
psubsw
pop
pop
loope
jge
dec
xchg
sti
inc
pop
std
aam
out
inc
add
pop
xor
gs
and
adc
and
add
jmp
insl
loop
movaps
sub
mov
mov
sbb
int3
mov
es
lret
in
jge
mov
stos
mov
mov
out
mov
inc
cli
or
movsb
pusha
xor
push
daa
out
ds
sbb
notb
lods
fisttpll
outsb
lret
mov
xlat
add
xchg
addr16
push
inc
rep
and
mov
mov
xor
outsb
lcall
stc
dec
lahf
mov
jg
loop
aad
repnz
cmp
fsubs
xchg
inc
sbb
and
sub
call
repz
cmc
imul
mov
sub
cmp
shrl
in
xor
cli
repz
mov
push
sti
inc
stos
sbb
ret
pop
lret
xor
and
enter
mov
or
or
mov
xor
ds
icebp
push
dec
dec
pop
insl
sub
pop
push
imul
mov
std
pop
sbb
insb
push
jmp
push
out
movsl
mov
mov
mov
sbb
xchg
mov
popf
lcall
sub
mov
mov
int3
repnz
je
and
ret
jne
fsubrs
insl
pop
dec
pop
and
dec
inc
lcall
mov
jmp
jnp
jnp
fsubrs
cmc
xchg
fs
cs
push
lea
ss
lahf
ret
or
cmp
cmp
out
and
push
notb
push
popa
xor
pop
and
outsl
addb
and
or
sti
cmp
xchg
xlat
cli
shrl
add
xchg
xchg
xchg
popa
imul
cmova
stos
and
fcoml
adc
nop
dec
or
inc
push
stc
cmp
cmp
sub
add
xor
jmp
pusha
jb
mov
clc
out
push
xor
stos
xchg
cwtl
inc
sar
jno
pop
frstor
or
arpl
mov
in
push
pop
mov
pop
pop
into
in
adc
mov
inc
inc
stos
pop
mov
in
mov
test
adc
mov
sbb
mov
inc
jae
mov
mov
aas
testl
stc
sub
jg
sbb
std
pop
adc
mov
and
add
xor
pusha
push
adc
mov
push
cmp
fnstsw
mov
int3
fistps
sub
xchg
rcl
icebp
movsb
scas
lret
gs
test
fsts
bound
int
xchg
inc
sub
cli
mov
addr16
test
aas
mov
pushf
inc
lock
sbb
pop
push
data16
ja
lods
sbb
pop
and
ljmp
enter
lahf
mov
cmp
popl
fidivrl
mov
lahf
cmp
enter
and
push
out
rorb
lock
cmpsb
dec
ljmp
cli
and
pop
inc
inc
pop
dec
add
stos
adc
jb
mov
dec
mov
jg
add
sbb
push
aaa
add
std
out
rorl
cltd
das
mov
fimuls
shlb
bound
jp
push
ds
clc
pop
fs
jecxz
insb
std
jno
dec
cmpsb
jo
jo
push
mov
inc
popa
or
push
jns
and
jnp
xchg
sahf
fwait
lea
scas
sbbl
add
nop
mov
xchg
enter
xchg
cwtl
lcall
add
inc
mov
add
cmpsl
mov
xchg
lds
dec
fidivrs
pop
ss
insl
js
repnz
or
add
rcrl
movsl
pop
push
xchg
cmp
test
xor
pop
pop
or
inc
pop
jns
sti
pop
lods
inc
dec
cld
ficompl
das
call
arpl
pop
push
pop
daa
xchg
lods
jno
test
cwtl
mov
cwtl
outsb
mov
aas
icebp
push
jbe
pop
aad
and
ret
mov
fsubrs
lds
push
fldt
stos
popf
scas
mov
mov
aad
push
repz
call
call
pop
adc
hlt
adc
mov
hlt
sbb
imulb
jle
cmpsb
or
int
fld
pusha
popa
cwtl
xchg
xchg
sarl
push
je
aas
scas
inc
mov
inc
test
in
in
clc
arpl
stc
inc
add
xchg
jns
call
cmp
lea
mov
lock
es
add
ret
push
popf
sub
dec
mov
mov
cmc
ja
in
divl
jo
mov
sub
cwtl
mov
sbb
inc
dec
data16
lods
inc
ljmp
in
adc
xor
or
pop
inc
mov
and
shlb
add
mov
adc
popa
and
mov
aaa
shl
rorb
pop
std
jmp
inc
mov
aad
std
mov
popf
adc
inc
mov
xchg
lcall
or
jg
out
ss
lds
data16
hlt
lea
push
mov
test
lahf
jecxz
out
mov
cmpsb
inc
or
mov
fildl
or
clc
adc
roll
cwtl
out
xor
dec
fisttpl
or
inc
ret
pop
pop
scas
in
xchg
out
mov
std
shrl
mov
sbb
mov
cmp
cmc
dec
and
aaa
jge
and
dec
jne
push
js
lcall
and
and
ret
shr
or
mov
push
inc
shrl
orl
xor
dec
lds
pop
xor
in
push
pop
pushf
and
push
xor
mov
and
mov
scas
jns
cld
xchg
adc
push
inc
repz
in
fwait
cmp
sub
inc
into
test
ljmp
mov
in
daa
pop
cmp
pop
lret
push
sub
out
repz
jp
pop
push
push
mov
and
into
call
cmp
dec
in
dec
sbb
mov
mov
out
insl
xchg
push
aaa
mov
mulb
mov
sbb
mov
mov
mov
nop
aad
mov
xchg
into
int3
mov
orb
add
sub
loop
in
jg
cltd
pop
push
loopne
call
xchg
or
in
les
pop
inc
stc
loop
gs
lcall
push
mov
xchg
pusha
pop
repz
mov
pop
loop
pop
adc
xchg
lahf
mov
jae
arpl
pop
cmp
cmpl
mov
push
es
scas
cmpsl
xlat
lods
in
or
push
sahf
push
ret
sbb
jg
jbe
mov
sub
jb
cmp
inc
xchg
xor
movsb
inc
xor
xchg
mov
pop
push
sub
xchg
ret
mov
sbb
dec
insl
imul
aam
fidivrl
out
mov
fwait
dec
jecxz
ss
int
xorl
mov
subl
inc
jns
xchg
add
jp
or
ljmp
lods
mov
rcr
out
movsb
das
insb
jbe
jnp
and
rolb
fldl
fcomps
mov
dec
test
mov
xchg
sarl
mov
and
cmp
cmpsl
mov
adc
nop
in
lea
mov
ljmp
out
adc
fsubs
subb
mov
sub
stos
pop
and
xchg
jcxz
inc
dec
lea
outsb
push
mov
inc
mov
mov
xchg
and
mov
cmp
cmp
inc
mov
fadd
in
int3
adc
sbb
repz
pop
inc
mov
mov
push
and
push
sti
push
push
es
xor
daa
js
mov
leave
outsb
addr16
fadds
out
inc
ret
cmp
sub
sti
loope
and
push
mov
sbbl
adc
sub
jge
xchg
cmp
iret
sub
popa
dec
sbb
add
add
mov
lcall
push
mov
adc
in
cmp
lcall
mov
cltd
dec
in
test
pop
ja
push
repnz
lea
enter
inc
add
out
and
bound
dec
sbb
xchg
mov
out
cmp
jb
cli
cmp
aam
icebp
push
dec
jmp
subl
jo
neg
jne
or
lret
ficomps
test
ds
mov
push
loope
hlt
repnz
push
inc
pop
mov
iret
sub
ljmp
mov
add
adc
gs
sub
movsl
dec
jg
or
xchg
ss
add
dec
mov
shlb
xlat
mov
jo
mov
mov
fcoml
in
lock
jb
xchg
shlb
fwait
outsl
and
out
js
or
mov
jp
fs
ljmp
adc
cs
outsl
test
andl
cltd
lods
mov
ja
jle
dec
repz
push
std
testb
outsb
jnp
dec
push
data16
orl
std
loope
mov
in
pop
mov
push
cld
ret
mov
mov
imul
inc
mov
in
mov
fstpl
cmp
ret
and
mov
das
jne
jno
push
jb
dec
sahf
cmp
or
in
cmp
lahf
xchg
pop
dec
push
push
into
rcr
imul
mov
jmp
outsb
rcrl
ss
jbe
mov
adc
sub
adc
fdivrs
inc
test
sbb
nop
orb
lea
jle
push
dec
call
ss
jo
out
mov
push
addr16
fdivp
or
es
sub
mov
mov
sahf
in
ss
cld
stc
add
mov
js
adc
mov
cmp
lahf
mov
push
xor
shlb
mov
lock
xchg
mov
lahf
popf
push
sbb
mov
cmpsl
mov
out
jnp
out
mov
adc
cmp
mov
and
and
mov
xchg
push
sbb
mov
mov
and
leave
test
mov
das
push
sbb
dec
repnz
lret
lret
in
cli
inc
pop
mov
sarl
cli
ljmp
test
imul
xor
xchg
xchg
push
lret
mov
cltd
xor
xchg
les
push
es
scas
aam
pop
mov
jmp
dec
ja
int3
lret
enter
stos
shl
stc
mov
in
dec
mov
pop
mov
lds
insl
xlat
pop
add
rcr
push
push
adcl
in
xor
jmp
lcall
sahf
repz
cmp
out
or
xor
lock
add
mov
int3
cmp
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
nop
push
nop
push
push
add
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
push
add
add
add
add
add
addb
add
add
add
add
addb
add
pop
add
orb
add
sub
orb
add
add
orb
add
cwtl
add
add
fadds
add
sbb
add
add
push
add
add
add
add
add
add
addb
add
and
add
dec
add
xor
add
jo
add
add
add
or
add
add
add
add
xor
add
or
add
add
add
add
or
add
add
add
fadds
xor
add
or
add
add
add
flds
xor
add
or
add
add
sub
add
xor
add
or
add
faddl
xor
add
or
add
add
cmp
add
call
add
add
add
addb
add
or
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
out
add
mov
add
incb
add
pop
add
xor
add
addb
addb
add
or
add
add
push
or
add
add
add
add
add
stc
add
test
add
add
add
add
xor
add
lock
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
or
add
add
lock
add
add
add
add
add
add
add
add
sub
add
add
addb
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
mov
add
add
add
add
add
cmp
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
add
add
addb
add
and
add
dec
add
add
jo
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
je
add
add
add
add
add
add
push
add
add
add
or
add
add
lods
adc
add
sub
add
add
add
adc
add
add
add
add
or
cmp
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lods
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jae
imul
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsl
add
imul
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
imul
insl
jo
cs
insb
add
fs
jo
cs
insb
add
gs
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
xor
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
inc
outsb
je
jns
add
gs
gs
outsl
outsb
outsb
arpl
outsb
push
add
inc
jae
jb
arpl
jo
push
add
add
gs
dec
inc
outsl
outsb
jbe
jb
inc
add
add
push
imul
outsl
arpl
add
jb
imul
inc
add
push
push
inc
inc
insb
gs
outsb
jne
