push
mov
sub
push
push
push
mov
mov
shl
mov
mov
and
movzwl
mov
xor
or
mov
cmp
jne
call
movzbl
mov
or
sub
mov
mov
add
mov
mov
xor
mov
add
movzwl
mov
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
or
imul
movzbl
mov
and
mov
mov
or
and
mov
movzbl
xor
div
movzbl
movzbl
sub
mov
cmp
jne
push
movzwl
push
movzbl
push
movzwl
push
call
mov
movzbl
imul
imul
mov
movzbl
movzwl
mov
movzwl
and
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
xor
imul
movzbl
mov
shr
movzbl
mov
and
sub
movzwl
mov
shl
movzwl
mov
mov
xor
div
movzbl
mov
or
sub
push
mov
xor
add
push
mov
xor
push
mov
and
push
mov
xor
add
push
push
call
movzbl
mov
test
je
mov
and
push
mov
sub
push
call
mov
xor
and
push
mov
and
add
push
mov
or
push
call
mov
and
or
movzbl
push
call
mov
movzbl
mov
shl
movzbl
mov
mov
xor
div
movzbl
mov
test
jne
push
push
call
movzbl
mov
xor
movzbl
mov
xor
movzbl
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
or
mov
imul
movzbl
mov
shl
mov
mov
or
or
mov
mov
shr
mov
mov
movzbl
mov
or
xor
movzbl
mov
mov
mov
sub
movzbl
cmpl
jne
push
movzbl
push
call
mov
mov
add
movzwl
mov
mov
movzwl
mov
xor
movzbl
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
add
sub
mov
mov
shl
movzwl
mov
xor
add
mov
mov
movzbl
mov
or
movzwl
mov
shl
movzbl
mov
xor
div
mov
mov
and
movzwl
mov
test
jne
call
mov
mov
or
movzwl
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzwl
mov
movzwl
mov
mov
mov
mov
mov
mov
imul
movzwl
movzbl
shl
mov
mov
or
sub
mov
mov
shl
mov
mov
shr
movzwl
mov
xor
mov
imul
movzwl
push
mov
and
push
mov
movzbl
xor
push
mov
movzbl
or
push
push
push
call
movzwl
mov
test
je
call
mov
imul
push
movzbl
push
mov
and
movzbl
sub
push
call
mov
shl
mov
call
mov
test
jne
movzbl
push
push
movzbl
push
push
call
mov
mov
mov
xor
div
mov
mov
movzbl
or
mov
mov
mov
xor
div
movzwl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
movzwl
mov
imul
mov
mov
or
mov
add
mov
mov
add
movzwl
mov
imul
add
mov
mov
and
mov
sub
mov
mov
and
imul
mov
mov
sub
mov
cmp
jne
push
pushl
movzbl
push
call
movzwl
movzbl
shl
mov
mov
mov
mov
mov
or
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
or
movzbl
mov
shr
mov
mov
shl
mov
mov
movzbl
mov
test
jne
call
mov
mov
sub
mov
mov
imul
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
add
movzbl
mov
shr
mov
mov
movzbl
mov
or
imul
mov
mov
add
mov
mov
sub
movzbl
mov
mov
mov
mov
imul
mov
sub
mov
cmp
jne
push
push
push
call
movzbl
mov
sub
mov
mov
mov
movzbl
add
mov
movzbl
and
sub
push
movzbl
xor
sub
push
mov
xor
add
push
movzbl
and
sub
push
mov
xor
sub
push
mov
xor
sub
push
call
movzbl
mov
test
je
mov
xor
mov
imul
push
pushl
push
call
mov
xor
div
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
sub
movzwl
mov
and
mov
cmp
jne
push
call
movzwl
mov
xor
mov
mov
mov
mov
xor
div
mov
movzwl
or
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
or
mov
imul
movzbl
mov
shr
mov
mov
xor
add
mov
xor
mov
mov
shl
mov
mov
movzbl
or
sub
mov
xor
mov
movzbl
and
mov
add
mov
mov
xor
mov
mov
mov
movzbl
mov
xor
div
mov
movzbl
sub
sub
mov
mov
mov
mov
test
je
movb
mov
xor
mov
movzbl
xor
mov
imul
mov
movzbl
and
or
mov
mov
movzbl
xor
sub
mov
movzbl
mov
mov
mov
movzbl
imul
mov
movzbl
imul
sub
mov
add
mov
movzbl
or
movzbl
imul
mov
movzbl
movzbl
and
sub
mov
add
mov
mov
imul
mov
mov
sub
mov
movzbl
shr
mov
jmp
mov
movzwl
xor
sub
mov
xor
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
or
mov
mov
shl
mov
mov
sub
mov
mov
xor
and
mov
mov
mov
add
mov
mov
mov
xor
mov
mov
mov
movzwl
xor
divl
mov
cmpw
jne
call
mov
mov
movzwl
or
and
mov
mov
mov
test
jne
pushl
call
mov
movzwl
or
and
mov
mov
xor
divl
mov
mov
mov
shr
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
movzbl
mov
movzwl
mov
shr
movzbl
mov
xor
add
push
mov
and
push
mov
or
add
push
mov
or
sub
push
mov
xor
add
push
mov
imul
push
call
movzwl
mov
test
je
mov
imul
push
mov
xor
mov
imul
push
mov
and
push
call
call
push
call
push
mov
or
mov
sub
push
push
call
push
call
mov
and
sub
movzbl
mov
mov
xor
div
movzwl
mov
movzbl
mov
shr
movzbl
mov
mov
xor
div
movzwl
mov
test
jne
push
push
push
call
movzwl
mov
and
mov
mov
sub
sub
mov
mov
sub
movzbl
mov
and
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
xor
ret
push
push
push
mov
mov
and
or
movzbl
mov
shr
movzwl
mov
or
mov
sub
mov
mov
and
sub
movzbl
mov
add
push
mov
sub
add
push
mov
add
sub
push
mov
add
sub
push
mov
xor
add
push
mov
or
sub
push
call
mov
test
je
mov
sub
push
call
push
mov
imul
push
mov
and
xor
push
call
call
mov
imul
push
call
mov
or
push
mov
add
push
call
mov
shl
movzbl
mov
add
movzwl
cmp
jne
push
push
push
push
call
movzbl
mov
mov
xor
div
mov
mov
add
mov
mov
movzbl
mov
sub
movzwl
mov
add
movzbl
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
mov
mov
sub
push
mov
add
push
push
push
mov
or
push
mov
add
push
call
mov
test
je
mov
and
push
push
mov
imul
push
call
push
mov
sub
push
push
push
mov
sub
push
call
mov
add
add
mov
mov
xor
mov
sub
movzbl
mov
and
add
mov
mov
test
jne
movzbl
push
push
push
call
mov
mov
xor
div
movzbl
movzbl
mov
push
movzbl
sub
push
mov
movzbl
or
push
mov
xor
add
push
mov
movzbl
imul
push
push
call
mov
test
je
push
call
call
mov
and
add
push
mov
and
movzbl
xor
push
call
movzbl
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
mov
and
sub
mov
mov
sub
movzbl
mov
imul
imul
movzbl
test
jne
push
push
call
mov
mov
or
mov
mov
imul
add
movzbl
mov
add
mov
movzbl
xor
div
movzbl
mov
imul
sub
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzbl
mov
movzwl
mov
shl
mov
mov
xor
sub
mov
movzwl
mov
xor
div
movzbl
movzwl
mov
movzwl
mov
mov
mov
movzwl
shl
mov
movzwl
or
mov
mov
test
jne
call
mov
mov
xor
mov
movzbl
and
movzbl
mov
sub
movzwl
mov
or
mov
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzbl
mov
or
movzwl
mov
add
mov
mov
sub
movzwl
mov
and
and
mov
mov
and
movzwl
xor
mov
mov
movzwl
mov
mov
movzwl
or
or
mov
mov
or
mov
mov
test
jne
push
push
push
call
movzbl
mov
movzwl
or
mov
add
mov
mov
mov
mov
and
xor
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
movzbl
mov
and
mov
add
movzbl
mov
test
jne
call
movzbl
mov
mov
mov
sub
movzbl
movzbl
add
mov
mov
mov
mov
or
add
movzbl
cmp
jne
call
movzbl
mov
shr
movzbl
movzbl
mov
movzbl
add
movzbl
add
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
or
sub
movzwl
mov
shr
movzwl
mov
add
mov
cmp
jne
push
call
mov
mov
or
mov
imul
movzwl
mov
movzwl
mov
or
mov
mov
shl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
imul
mov
mov
and
push
mov
add
sub
push
mov
or
add
push
mov
imul
push
mov
or
sub
push
mov
add
sub
push
call
movzwl
mov
test
je
mov
add
push
mov
imul
mov
sub
push
call
mov
movzbl
mov
imul
push
mov
and
sub
push
call
mov
xor
push
call
push
mov
or
sub
push
mov
or
imul
push
mov
or
sub
push
mov
xor
mov
add
push
call
mov
mov
mov
add
sub
mov
mov
and
movzbl
sub
mov
mov
xor
mov
mov
shl
mov
mov
test
jne
call
mov
mov
add
mov
mov
mov
movzwl
xor
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
shl
mov
mov
and
mov
mov
imul
mov
sub
mov
mov
add
mov
mov
movzbl
and
add
mov
mov
and
mov
mov
sub
movzwl
cmp
jne
movzbl
push
pushl
call
mov
mov
xor
mov
sub
mov
mov
shr
mov
mov
and
mov
mov
shr
mov
mov
and
imul
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
mov
movzwl
mov
add
mov
mov
mov
mov
and
mov
mov
imul
sub
push
mov
and
add
push
mov
or
add
push
mov
xor
add
push
mov
and
push
mov
xor
add
push
call
mov
test
je
call
mov
mov
movzbl
xor
mov
imul
mov
mov
xor
divl
mov
mov
shr
mov
movzbl
movzbl
or
mov
cmp
jne
movzbl
push
movzbl
push
movzbl
push
call
mov
mov
xor
movzbl
and
mov
movzbl
sub
mov
mov
shl
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
mov
movzbl
mov
and
or
mov
cmp
jne
call
movzbl
mov
movzbl
mov
movzwl
mov
and
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
and
movzbl
mov
shl
movzwl
mov
add
movzwl
mov
test
jne
call
movzbl
mov
movzbl
mov
shl
movzbl
mov
movzwl
mov
add
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
add
mov
mov
and
movzbl
mov
and
mov
mov
xor
div
mov
mov
xor
div
mov
mov
test
jne
push
push
call
movzbl
mov
xor
add
mov
mov
movzbl
mov
shr
mov
mov
mov
and
mov
add
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
shr
movzwl
mov
xor
div
movzbl
cmp
jne
push
push
push
call
mov
mov
xor
div
movzwl
mov
or
mov
mov
shr
mov
mov
imul
mov
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzwl
mov
and
mov
sub
movzbl
mov
shl
mov
mov
xor
mov
mov
add
movzwl
movzbl
or
movzwl
sub
movzbl
mov
mov
movzbl
mov
xor
div
movzwl
mov
movzwl
imul
imul
movzwl
mov
movzwl
cmp
jne
push
movzbl
push
movzbl
push
push
call
movzwl
movzbl
and
movzwl
movzbl
movzwl
mov
movzbl
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
mov
sub
mov
mov
xor
mov
mov
mov
mov
test
jne
movzwl
push
call
movzbl
mov
and
mov
mov
sub
sub
mov
movzwl
and
mov
mov
shr
mov
mov
add
mov
mov
test
jne
push
movzwl
push
push
push
call
mov
mov
sub
mov
mov
sub
mov
movzwl
and
push
movzwl
sub
add
push
mov
sub
add
push
movzwl
xor
push
movzwl
movzwl
or
sub
push
mov
movzwl
and
push
call
movzbl
mov
test
je
movzwl
add
push
call
push
movzwl
add
push
movzwl
or
movzwl
add
push
call
mov
movzwl
or
or
mov
movzwl
mov
mov
sub
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
add
add
movzbl
mov
imul
movzbl
mov
or
add
mov
mov
add
movzbl
mov
or
mov
mov
shr
mov
mov
and
mov
movzwl
shl
mov
mov
shr
mov
mov
and
and
mov
cmpw
jne
pushl
movzwl
push
push
movzwl
push
call
mov
mov
mov
mov
xor
div
mov
mov
or
movzbl
imul
mov
movzwl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
xor
div
mov
mov
imul
mov
mov
shr
mov
mov
shr
mov
mov
imul
imul
mov
test
jne
call
mov
mov
and
mov
mov
and
movzwl
add
mov
mov
shr
mov
movzwl
or
push
movzwl
or
push
push
push
mov
and
push
mov
xor
push
call
mov
mov
test
je
movzwl
and
push
call
mov
add
mov
movzwl
mov
cmp
jne
push
movzwl
push
movzwl
push
movzwl
push
call
mov
mov
xor
div
mov
movzwl
mov
mov
movzwl
add
mov
mov
and
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
mov
add
movzwl
mov
movzbl
mov
sub
mov
mov
mov
movzwl
xor
and
mov
mov
shr
movzwl
movzwl
sub
mov
mov
movzbl
mov
movzwl
xor
sub
movzwl
movzwl
mov
xor
div
movzbl
mov
add
movzbl
cmp
jne
push
movzwl
push
movzbl
push
call
mov
mov
movzbl
and
sub
movzbl
movzwl
or
movzwl
imul
mov
mov
or
mov
movzwl
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
sub
movzwl
mov
sub
movzwl
mov
shr
movzbl
mov
shr
mov
movzbl
shl
movzwl
mov
movzbl
movzbl
add
mov
mov
movzbl
mov
shr
movzbl
mov
add
mov
mov
add
movzbl
cmp
jne
pushl
push
push
call
mov
mov
add
add
movzbl
mov
add
movzwl
mov
movzbl
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shr
mov
mov
shr
mov
mov
movzbl
mov
sub
mov
mov
add
movzbl
mov
movzbl
mov
sub
movzbl
mov
shl
mov
mov
add
mov
cmp
jne
push
call
movzbl
mov
shl
mov
mov
add
sub
movzbl
mov
or
movzbl
mov
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzbl
mov
add
add
movzbl
cmp
jne
push
push
push
call
movzbl
mov
movzwl
mov
or
and
mov
mov
shr
mov
movzwl
shr
mov
mov
mov
xor
div
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
imul
mov
mov
and
add
push
mov
xor
sub
push
mov
and
sub
push
mov
imul
sub
push
mov
imul
add
push
mov
xor
add
push
call
mov
test
je
mov
sub
push
push
call
mov
or
push
call
mov
imul
add
push
mov
imul
mov
add
push
push
mov
and
imul
push
call
mov
xor
mov
add
push
call
mov
shr
movzwl
mov
and
sub
mov
xor
mov
mov
xor
sub
mov
xor
mov
mov
shl
mov
mov
or
mov
mov
mov
mov
or
add
mov
mov
or
movzwl
mov
imul
cmp
je
movw
mov
xor
and
mov
mov
mov
mov
mov
movzwl
xor
mov
mov
movzwl
sub
sub
mov
movzbl
mov
mov
movzwl
xor
divl
mov
movzwl
xor
sub
mov
add
mov
movzwl
sub
add
mov
add
mov
mov
mov
mov
xor
add
mov
sub
mov
mov
or
mov
jmp
mov
sub
movzwl
mov
sub
sub
mov
xor
mov
mov
and
mov
mov
mov
mov
mov
sub
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
movzbl
mov
movzbl
mov
movzbl
mov
shr
mov
mov
or
or
mov
mov
mov
movzwl
mov
mov
test
jne
push
call
mov
mov
sub
mov
movzwl
sub
movzbl
mov
shr
mov
mov
or
mov
mov
movzwl
and
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
add
movzwl
mov
and
movzwl
mov
shl
mov
mov
shr
mov
mov
shl
mov
mov
or
mov
mov
shr
mov
mov
sub
movzwl
cmpw
jne
push
push
movzwl
push
call
mov
mov
and
imul
mov
movzwl
movzwl
xor
movzbl
sub
mov
movzbl
and
movzbl
and
mov
mov
movzwl
movzbl
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzwl
mov
xor
mov
imul
movzbl
mov
movzwl
mov
mov
xor
div
movzbl
mov
movzwl
mov
xor
mov
add
movzwl
mov
add
mov
movzbl
shl
movzbl
mov
movzwl
mov
or
movzbl
and
mov
movzbl
xor
and
movzwl
mov
test
jne
call
movzwl
mov
sub
movzwl
mov
or
movzbl
add
movzwl
mov
xor
imul
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
sub
movzbl
mov
xor
sub
mov
mov
shl
mov
mov
mov
movzwl
xor
div
movzbl
mov
mov
movzbl
add
mov
cmpb
jne
push
call
movzbl
mov
add
mov
mov
and
xor
mov
mov
add
mov
movzbl
sub
mov
mov
shr
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
movzwl
mov
shl
movzbl
mov
xor
add
mov
mov
movzwl
mov
shr
movzbl
mov
and
mov
mov
sub
mov
mov
add
movzbl
mov
movzwl
movzwl
xor
div
movzwl
cmp
jne
push
push
call
movzwl
movzbl
xor
div
movzwl
movzwl
sub
mov
mov
and
movzbl
cmpl
jne
push
pushl
push
call
movzbl
mov
or
or
movzbl
mov
sub
sub
mov
mov
xor
mov
mov
imul
mov
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
movzbl
mov
shr
movzwl
mov
test
jne
push
push
push
call
movzwl
mov
or
movzwl
mov
shl
mov
mov
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
imul
mov
add
movzwl
mov
shl
mov
mov
shr
movzwl
mov
movzwl
mov
mov
mov
test
jne
push
call
movzwl
movzwl
mov
xor
div
movzwl
mov
movzwl
mov
shr
mov
mov
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
and
movzbl
mov
movzbl
mov
or
sub
movzbl
mov
shl
mov
mov
xor
mov
add
movzbl
cmp
jne
push
push
call
movzbl
mov
mov
xor
div
movzbl
mov
or
mov
movzwl
imul
sub
mov
mov
or
add
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
mov
movzbl
mov
imul
mov
mov
add
mov
cmp
jne
push
push
call
mov
mov
shr
mov
mov
imul
movzbl
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
shl
mov
mov
sub
movzwl
mov
add
mov
cmp
jne
push
push
push
push
call
mov
mov
and
sub
mov
mov
shr
mov
mov
shr
mov
movzwl
xor
div
movzwl
mov
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
and
movzbl
cmp
jne
call
movzwl
mov
sub
movzbl
mov
shl
mov
mov
or
movzbl
movzwl
sub
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
sub
movzbl
mov
sub
sub
push
mov
xor
sub
push
mov
add
sub
push
mov
or
sub
push
mov
and
push
mov
sub
sub
push
call
movzbl
mov
test
je
mov
xor
or
push
mov
and
sub
push
mov
xor
xor
push
push
call
mov
movzwl
push
mov
xor
push
call
mov
and
mov
imul
push
call
mov
movzwl
mov
mov
mov
mov
mov
test
jne
movzbl
push
push
push
movzwl
push
call
movzbl
mov
mov
mov
or
mov
imul
mov
mov
shl
mov
movzbl
and
movzbl
sub
movzwl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzwl
mov
movzwl
movl
mov
sub
mov
mov
imul
sub
mov
xor
mov
movzbl
movzwl
mov
mov
add
mov
mov
sub
mov
sub
mov
movzbl
and
movzwl
movzbl
sub
mov
add
movzwl
sub
mov
mov
movzwl
mov
imul
mov
sub
mov
mov
add
movzwl
mov
movzbl
or
mov
sub
mov
mov
and
movzbl
imul
movzbl
mov
movzbl
imul
mov
movzwl
movzbl
and
sub
cmp
je
movb
movzbl
mov
movzbl
shl
mov
mov
xor
add
mov
movzbl
mov
movzbl
movzwl
imul
add
mov
sub
mov
jmp
mov
add
mov
mov
and
mov
sub
mov
mov
mov
mov
add
movzbl
or
sub
mov
mov
movzwl
mov
xor
sub
mov
mov
mov
add
mov
movzbl
add
sub
mov
mov
imul
add
mov
mov
and
push
mov
movzbl
and
push
mov
sub
push
mov
movzbl
sub
sub
push
movzbl
or
add
push
mov
imul
push
call
mov
mov
test
je
mov
and
sub
push
mov
or
push
mov
imul
push
mov
imul
imul
push
call
mov
shr
mov
mov
mov
mov
movzbl
sub
sub
mov
mov
movzwl
mov
or
add
mov
mov
mov
add
mov
xor
sub
mov
mov
xor
mov
sub
mov
mov
or
push
mov
imul
push
mov
movzbl
xor
push
mov
movzbl
or
push
mov
movzbl
imul
push
push
call
mov
mov
test
je
mov
or
imul
push
push
push
call
push
mov
imul
push
mov
or
push
push
mov
add
push
call
movzbl
or
cmp
je
movb
movzbl
mov
xor
div
mov
movzbl
shl
mov
movzbl
mov
movzwl
movzbl
and
mov
mov
add
movzwl
movzbl
and
add
mov
movzbl
and
and
mov
mov
movzbl
sub
push
push
movzbl
and
push
movzbl
movzbl
xor
push
movzwl
movzbl
add
push
push
call
mov
mov
test
je
call
movzwl
movzbl
and
xor
push
movzbl
push
movzbl
xor
push
call
movzbl
or
push
movzwl
push
movzwl
push
movzbl
movzwl
xor
push
movzwl
push
call
mov
movzbl
add
mov
mov
xor
sub
mov
mov
movzwl
xor
sub
mov
movzbl
movzwl
movzbl
sub
cmp
je
mov
mov
movzwl
imul
mov
movzwl
shl
mov
movzwl
shl
mov
movzwl
imul
mov
mov
shl
mov
shr
or
mov
mov
movzwl
or
mov
movzwl
movzwl
add
mov
movzbl
xor
mov
add
mov
movzwl
movzwl
xor
add
mov
add
mov
mov
movzwl
and
mov
jmp
mov
mov
mov
cmp
jne
movw
movzwl
shr
mov
movzwl
shr
mov
movzbl
xor
divl
mov
mov
mov
movzwl
imul
push
push
push
push
call
mov
mov
add
mov
movzwl
movzwl
or
sub
mov
mov
sub
movzbl
add
sub
sub
mov
mov
movzwl
add
mov
movzwl
movzbl
add
add
mov
mov
movzwl
add
sub
sub
mov
movzwl
shl
mov
mov
add
mov
imul
add
mov
movzwl
and
mov
add
mov
movzwl
mov
movzwl
movzbl
add
mov
mov
mov
mov
add
mov
add
sub
mov
mov
sub
mov
movzwl
movzwl
imul
mov
sub
mov
mov
mov
add
mov
mov
movzbl
imul
add
mov
xor
mov
movzbl
sub
sub
push
movzwl
or
add
push
movzwl
movzbl
sub
add
push
movzwl
sub
add
push
call
mov
mov
shr
mov
movzwl
or
mov
sub
mov
mov
movzwl
or
imul
mov
movzbl
movzbl
or
sub
mov
add
mov
mov
movzbl
imul
sub
mov
sub
mov
mov
sub
mov
jmp
mov
mov
xor
div
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
movzwl
mov
shr
movzbl
mov
mov
xor
div
movzbl
mov
movzwl
mov
shr
movzwl
mov
movzwl
mov
or
movzbl
mov
test
jne
call
movzbl
mov
shl
movzwl
mov
mov
mov
and
movzbl
imul
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
mov
mov
or
mov
sub
mov
mov
shr
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
or
mov
mov
test
jne
movzwl
push
push
call
mov
mov
or
mov
sub
mov
mov
mov
movzbl
and
and
mov
mov
mov
movzwl
movzbl
add
sub
push
movzwl
and
add
push
movzbl
or
push
mov
xor
push
movzbl
add
add
push
movzbl
sub
push
call
mov
mov
test
je
movzbl
movzwl
or
push
movzbl
push
mov
sub
push
movzbl
and
add
push
call
call
mov
xor
div
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
xor
mov
imul
mov
mov
xor
sub
mov
xor
mov
mov
shl
mov
mov
add
add
mov
xor
mov
mov
mov
add
sub
mov
mov
mov
mov
shl
movzwl
mov
xor
add
mov
mov
imul
sub
cmp
je
mov
mov
mov
imul
mov
push
movzwl
movzbl
and
push
push
movzbl
movzwl
imul
add
push
movzwl
movzbl
or
sub
push
movzwl
movzbl
or
add
push
call
mov
mov
test
je
movzwl
xor
and
push
movzwl
movzbl
imul
push
call
movzwl
push
movzwl
movzbl
or
push
movzwl
or
sub
push
movzbl
sub
movzwl
add
push
call
movzbl
imul
push
movzbl
push
movzwl
and
push
movzbl
push
movzbl
xor
movzwl
add
push
movzwl
push
call
movzwl
movzbl
imul
movzbl
add
push
movzwl
push
call
movzwl
mov
movzbl
xor
push
call
movzbl
shl
mov
movzbl
add
mov
movzwl
or
sub
mov
mov
movzwl
or
sub
mov
movzbl
mov
mov
movzwl
movzbl
and
add
mov
add
mov
movzwl
imul
mov
sub
mov
mov
movzbl
and
sub
mov
add
mov
movzbl
mov
movzbl
xor
add
mov
sub
mov
mov
mov
jmp
mov
add
mov
movzbl
and
sub
mov
xor
mov
movzbl
mov
mov
mov
mov
mov
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
imul
mov
mov
and
mov
sub
movzwl
mov
shr
mov
mov
or
movzbl
and
mov
movzbl
imul
imul
mov
mov
mov
mov
shl
mov
mov
mov
mov
shr
mov
movzwl
add
mov
mov
test
jne
push
push
call
movzwl
movzwl
add
mov
mov
imul
mov
mov
add
movzwl
movzwl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzbl
mov
shl
mov
mov
shl
mov
mov
add
mov
cmp
jne
push
push
movzwl
push
push
call
movzwl
mov
and
mov
add
mov
movzwl
shl
mov
movzwl
xor
divl
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
add
sub
movzbl
mov
mov
shl
mov
movzwl
shr
mov
mov
mov
test
jne
movzwl
push
push
call
mov
mov
xor
mov
movzwl
or
mov
mov
and
push
mov
xor
push
mov
or
add
push
mov
imul
push
mov
imul
add
push
mov
or
sub
push
call
mov
test
je
push
mov
xor
mov
add
push
push
mov
imul
mov
sub
push
movzwl
xor
imul
push
movzwl
and
movzwl
xor
push
call
mov
add
mov
mov
movzwl
add
push
call
mov
xor
div
movzbl
mov
or
add
mov
mov
xor
or
mov
mov
test
jne
call
mov
mov
movzbl
xor
mov
mov
or
mov
movzbl
xor
and
movzbl
mov
shr
mov
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
movzwl
mov
imul
imul
mov
mov
and
movzbl
mov
sub
mov
mov
and
sub
mov
xor
mov
mov
shr
mov
mov
add
mov
mov
mov
mov
imul
mov
mov
add
add
mov
sub
mov
mov
mov
add
sub
mov
mov
or
cmp
je
mov
mov
movzbl
mov
movzwl
mov
movzbl
mov
movzwl
shr
mov
movzwl
xor
add
cmp
jge
movw
movzwl
mov
mov
and
mov
movzbl
shl
mov
mov
xor
mov
movzwl
sub
mov
movzbl
mov
mov
mov
mov
mov
add
mov
movzwl
sub
add
mov
add
mov
movzwl
sub
sub
mov
sub
mov
mov
add
mov
jmp
mov
mov
mov
mov
movzbl
sub
mov
movzbl
add
mov
mov
mov
movzbl
movzwl
xor
add
mov
movzbl
shl
mov
movzbl
movzbl
add
add
mov
movzbl
shl
mov
movzwl
add
mov
mov
add
movzbl
movzwl
add
add
add
mov
mov
mov
movzwl
movzbl
and
add
mov
movzbl
shl
mov
movzbl
mov
mov
add
mov
mov
mov
movzbl
imul
mov
movzbl
mov
add
mov
movzwl
or
imul
mov
movzbl
or
add
mov
add
mov
movzwl
imul
movzbl
add
mov
movzbl
movzbl
xor
sub
mov
movzbl
movzwl
or
mov
mov
cmp
jne
movb
mov
sub
movzbl
add
mov
mov
movzbl
and
push
movzbl
sub
add
push
movzbl
xor
sub
push
push
movzbl
and
push
mov
movzbl
add
add
push
call
mov
mov
test
je
mov
or
push
pushl
mov
add
push
call
pushl
movzbl
imul
push
mov
movzbl
or
push
call
movzbl
mov
xor
div
mov
movzbl
push
mov
and
movzbl
or
push
movzbl
push
movzbl
imul
mov
sub
push
call
mov
and
movzbl
imul
push
mov
movzbl
add
push
call
mov
shl
mov
mov
mov
mov
and
add
mov
mov
movzbl
add
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
add
mov
mov
xor
mov
movzbl
and
or
mov
movzwl
xor
divl
mov
movzbl
movzbl
or
sub
cmp
je
mov
mov
mov
or
mov
mov
or
and
mov
mov
shl
mov
mov
xor
sub
mov
sub
mov
mov
or
xor
mov
mov
add
mov
mov
add
add
mov
jmp
mov
mov
mov
xor
sub
mov
mov
mov
mov
movzwl
add
sub
mov
movzbl
mov
mov
movzwl
or
imul
mov
mov
movzwl
and
mov
add
mov
movzwl
shl
mov
mov
movzwl
xor
add
mov
add
mov
mov
movzwl
add
movzwl
sub
mov
mov
movzwl
add
sub
mov
sub
mov
mov
mov
movzbl
mov
jmp
mov
imul
add
mov
movzbl
sub
sub
mov
xor
mov
mov
xor
mov
mov
movzbl
xor
add
mov
mov
mov
mov
movzbl
mov
sub
mov
mov
imul
add
mov
xor
mov
movzbl
sub
mov
mov
mov
mov
mov
movzwl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzbl
mov
movzbl
mov
movzbl
mov
movzbl
mov
add
movzbl
mov
and
movzbl
mov
shl
movzbl
mov
mov
mov
movzbl
movzbl
sub
movzbl
cmp
jne
push
push
push
push
call
movzbl
mov
shr
movzbl
movzbl
shl
movzbl
movzbl
mov
mov
and
and
movzbl
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
ret
push
mov
sub
push
push
push
mov
mov
or
mov
add
movzbl
mov
imul
movzbl
mov
or
sub
movzwl
mov
xor
movzwl
mov
shr
movzwl
mov
and
mov
sub
mov
cmpw
jne
push
push
push
push
call
movzwl
mov
movzwl
mov
mov
mov
add
mov
mov
add
movzwl
mov
movzwl
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
add
movzwl
mov
imul
imul
movzwl
mov
movzbl
mov
or
add
mov
xor
mov
mov
add
movzwl
mov
xor
mov
mov
mov
mov
mov
xor
div
movzbl
mov
add
sub
mov
xor
mov
mov
imul
mov
add
movzwl
mov
and
mov
mov
mov
mov
and
movzbl
mov
sub
add
mov
mov
movzbl
mov
sub
add
cmp
je
movb
movzbl
shr
mov
mov
sub
mov
mov
mov
mov
mov
movzbl
movzbl
add
add
mov
movzbl
movzbl
xor
mov
movzbl
movzbl
or
mov
imul
mov
mov
movzbl
mov
movzwl
imul
mov
sub
mov
movzbl
movzbl
xor
mov
movzwl
or
movzbl
or
mov
mov
sub
mov
mov
add
mov
movzwl
sub
mov
movzbl
movzbl
add
add
push
movzbl
movzbl
xor
add
push
movzwl
movzbl
add
sub
push
movzbl
imul
add
push
movzwl
movzbl
imul
add
push
push
call
mov
mov
test
je
movzwl
movzbl
imul
push
call
mov
shl
mov
movzwl
or
movzbl
add
push
call
movzbl
movzwl
add
push
movzwl
sub
push
movzbl
movzbl
or
sub
push
movzbl
movzbl
imul
push
call
jmp
mov
imul
add
mov
xor
mov
mov
mov
mov
xor
add
mov
mov
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
shl
movzbl
mov
shl
movzbl
mov
or
sub
movzbl
mov
xor
movzwl
mov
shr
mov
cmp
jne
pushl
push
pushl
push
call
mov
mov
and
mov
mov
mov
mov
or
mov
mov
shr
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
add
movzwl
mov
movzbl
mov
sub
mov
mov
xor
sub
mov
xor
mov
mov
shr
mov
mov
movzwl
xor
sub
mov
xor
mov
mov
xor
add
mov
mov
mov
movzwl
mov
movzwl
sub
add
mov
movzwl
add
movzbl
mov
movzwl
imul
sub
cmp
je
movw
movzwl
imul
movzwl
add
mov
movzwl
shl
mov
mov
movzbl
mov
mov
mov
xor
mov
mov
add
mov
movzwl
movzwl
imul
add
mov
add
mov
movzwl
add
add
mov
sub
mov
mov
xor
mov
jmp
movzwl
shr
mov
mov
movzwl
imul
sub
mov
xor
mov
movzwl
sub
mov
mov
mov
mov
movzwl
add
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzbl
mov
sub
movzbl
mov
movzbl
mov
shr
mov
mov
movzbl
mov
mov
mov
movzwl
mov
xor
divl
movzbl
mov
shr
mov
cmpl
jne
push
push
call
movzbl
mov
sub
movzwl
mov
mov
mov
xor
sub
mov
mov
add
movzbl
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
and
mov
add
movzbl
mov
shr
mov
mov
sub
sub
mov
mov
and
mov
mov
movzwl
movzwl
xor
div
movzbl
mov
mov
mov
mov
or
add
mov
movzwl
sub
mov
mov
test
jne
call
movzbl
mov
or
mov
sub
mov
mov
and
and
mov
mov
add
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
movzwl
mov
shl
movzwl
mov
sub
movzwl
mov
movzwl
mov
test
jne
call
movzwl
mov
shr
mov
mov
add
movzwl
mov
or
mov
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
imul
sub
push
mov
and
sub
push
mov
imul
sub
push
mov
sub
add
push
mov
and
add
push
mov
or
add
push
call
movzbl
mov
test
je
push
mov
xor
imul
push
push
call
mov
movzbl
mov
sub
movzbl
mov
or
and
movzbl
mov
mov
mov
or
sub
mov
mov
mov
mov
or
movzbl
mov
movzbl
mov
sub
movzbl
mov
or
movzbl
mov
sub
sub
push
mov
xor
sub
push
mov
imul
add
push
mov
imul
add
push
mov
or
add
push
mov
add
sub
push
call
movzbl
mov
test
je
push
call
push
push
mov
xor
mov
add
push
call
mov
or
movzbl
cmp
jne
push
pushl
push
push
call
movzbl
mov
or
mov
imul
movzbl
mov
xor
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
sub
movzbl
mov
movzbl
mov
shr
movzwl
cmp
jne
push
call
movzbl
mov
shr
movzbl
mov
xor
add
movzbl
mov
xor
div
movzbl
mov
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
imul
imul
movzbl
mov
shr
mov
mov
add
movzbl
mov
movzbl
mov
shl
mov
cmp
jne
push
push
push
call
movzbl
mov
mov
mov
mov
and
movzwl
sub
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
imul
movzbl
mov
shr
movzbl
mov
or
mov
imul
mov
mov
mov
xor
div
movzbl
mov
xor
movzbl
add
movzbl
mov
movzbl
mov
shr
mov
mov
sub
movzbl
cmpl
jne
push
call
movzbl
mov
sub
movzbl
mov
mov
movzbl
xor
divl
mov
mov
shl
movzbl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
mov
mov
xor
div
movzbl
mov
imul
add
movzbl
mov
xor
push
mov
or
push
mov
xor
push
mov
add
push
mov
xor
push
mov
xor
push
call
movzbl
mov
test
je
mov
imul
push
call
push
call
mov
imul
push
push
call
push
mov
imul
imul
push
mov
xor
add
push
call
mov
xor
mov
sub
push
push
push
call
mov
xor
movzbl
mov
mov
mov
test
jne
push
push
call
movzbl
mov
imul
movzbl
mov
or
mov
add
mov
movzbl
mov
xor
div
movzbl
movzbl
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
pop
or
or
mov
dec
adc
mov
pop
mov
leave
leave
leave
cltd
das
fcmovu
fcmovu
xor
xor
xor
push
push
push
jae
cmp
test
inc
out
loop
xchg
test
push
xchg
mov
test
pop
jnp
sub
das
movsb
push
in
into
stos
push
pusha
push
push
push
push
lods
hlt
jg
xor
daa
in
mov
cmp
inc
inc
and
out
mov
jnp
jne
lcall
dec
adc
dec
push
xchg
jb
ja
stos
ficoms
ss
jl
mov
jge
cs
xlat
adcl
fistpl
outsl
arpl
ret
ret
add
add
dec
push
fstpl
mov
fmul
mov
sub
mov
mov
mov
sbb
rcl
dec
xor
or
lock
add
stc
int
or
push
jecxz
add
cmpsb
nop
pop
cmp
mov
dec
dec
dec
dec
adc
call
sub
icebp
loopne
out
out
out
popa
imul
outsb
cmp
rcll
adc
push
push
pop
lahf
xchg
sahf
ds
mov
inc
adc
adc
adc
adc
adc
pop
xlat
movsb
test
push
pop
cld
std
push
sti
sbb
mov
flds
jge
daa
sub
out
loope
je
mov
add
cmpsl
fwait
push
daa
and
jnp
jnp
mov
lcall
leave
imul
leave
cmp
jae
dec
cmp
xlat
fsubrs
pop
ficoms
mov
and
push
daa
xor
mov
sbb
cmp
stos
mov
fcmovnu
cmpsb
mov
push
xchg
mov
sbb
push
sbb
adc
add
fistps
sti
decl
sbb
xor
mov
outsl
dec
dec
shll
jecxz
xchg
xchg
jge
jge
dec
das
pop
push
cli
or
jg
mov
pop
sbb
sub
test
shll
adc
jb
ljmp
mov
sbb
jge
in
in
jne
jns
push
pop
loopne
stc
mov
stos
insl
stos
xchg
mov
pushf
pop
fs
push
pop
ljmp
xchg
push
xlat
pop
adc
mov
rclb
sarb
and
xchg
fs
pop
lea
enter
popa
cmpsl
cltd
shr
nop
sbb
test
mov
clc
jmp
jno
xor
jl
lahf
pop
addr16
add
pop
in
sub
xor
enter
jge
cld
adc
inc
and
and
loope
rol
ror
fincstp
daa
cmpb
lock
outsb
ficoml
lea
shlb
mov
aaa
lret
hlt
add
movsl
cmp
mov
pop
adc
dec
cld
pushl
xchg
ja
cld
shlb
les
or
inc
or
push
adc
inc
mov
cmp
stc
xorl
fnsave
pusha
dec
mov
mov
sti
add
jae
add
outsl
imul
adc
les
call
push
add
pop
xchg
sub
mov
push
in
add
mov
sub
jne
loope
leave
scas
in
inc
mov
jne
push
adc
mov
aam
jo
testl
xchg
fisubl
arpl
or
sub
stos
aad
sahf
lcall
add
push
out
scas
addr16
mov
or
mov
jne
in
lods
mov
addr16
ffreep
ja
adc
fcmovnbe
cltd
mov
mov
mov
pop
or
push
jecxz
sti
iret
or
lock
lahf
rclb
les
push
push
xorb
dec
imul
adc
pop
in
mov
dec
pop
mov
gs
addr16
sahf
popf
xchg
xchg
mov
jae
add
xor
sub
mov
inc
test
add
movsb
loop
test
inc
imul
fdiv
scas
sbb
and
lock
jg
loope
mov
or
fistps
and
icebp
mov
cld
xor
push
xchg
push
adc
jle
mov
xor
adc
add
leave
mov
xchg
sub
les
insb
in
jnp
dec
ret
mov
insb
xchg
data16
cs
stos
nop
loop
xor
mov
dec
test
mov
in
sub
pop
std
jge
outsb
aas
cmp
cmpsl
add
add
mov
and
ret
add
push
or
icebp
test
and
xor
adc
xor
jmp
lea
int
stos
test
cmp
sub
mov
add
adc
cmc
mov
adc
popf
cmp
cs
repz
rclb
push
sub
adc
mov
addr16
aam
sbb
fiadds
insb
outsb
xchg
imul
xor
push
aas
clc
aas
mov
jbe
ret
xlat
adc
or
leave
sub
jmp
daa
adc
adc
mov
mov
mull
sub
push
sub
pop
pop
pop
les
or
or
cmpb
iret
add
push
cltd
dec
pop
xor
push
sbb
or
mov
jnp
leave
mov
jae
xchg
sub
bound
sbbb
push
fcos
xchg
add
adcl
lock
lods
nop
cmp
cmp
notb
cmpsl
sbb
roll
rcll
inc
fs
inc
shr
add
stc
scas
ror
push
ror
add
sbb
in
jo
sahf
mov
mov
pushl
push
sbb
lret
jb
dec
push
xor
hlt
and
or
ret
add
sahf
mov
mov
xchg
iret
cwtl
fsubl
sbb
outsb
test
xchg
stos
jne
aam
xchg
je
xchg
clc
dec
mov
movsb
daa
jmp
lds
aas
adc
pop
inc
adc
gs
out
lock
ret
jbe
das
inc
xchg
pop
or
push
inc
setnp
lods
dec
mov
mov
pop
or
and
sub
stc
ss
inc
sbb
or
add
or
xchg
xor
aas
lock
pop
ret
daa
jne
rcrl
jo
outsb
inc
jecxz
js
lods
cld
xchg
jb
enter
popf
dec
mov
lock
insb
mov
sbbl
jo
cwtl
push
pop
jge
notl
mov
and
shr
and
aam
pop
push
cmp
jl
dec
out
insb
add
pop
mov
scas
icebp
mov
dec
mov
add
movsb
xchg
in
mov
cmpsb
cwtl
push
xchg
aaa
shll
pop
sub
mov
jae
sub
stc
por
neg
lea
push
add
lahf
fmull
mov
fs
jnp
es
ds
popf
xor
dec
add
add
inc
cs
push
jnp
jp
jae
sbb
jl
sbb
jo
clc
mov
push
in
cmovno
mov
pop
out
mov
xchg
mov
loope
imul
cs
por
adcb
cli
jl
sbb
icebp
mov
outsl
das
icebp
sti
sub
xor
cli
out
cli
push
sbb
in
incl
cld
insb
and
andl
outsb
pop
fiadds
add
cmc
mov
stc
ror
sub
icebp
ja
int3
sbb
imul
int3
jecxz
sub
or
mov
ljmp
stc
mov
in
pop
jmp
das
loopne
jl
inc
out
jecxz
dec
pop
cmc
mov
ficoms
mov
nop
add
popf
push
add
and
mov
callw
test
adc
lret
mov
inc
push
sbb
sub
outsb
mov
shrb
fwait
xchg
cltd
cs
mov
add
fcoms
sub
pop
pop
pop
mov
js
fnsetpm(287
pusha
xchg
sti
das
jle
movsl
push
cmp
nop
adc
lret
dec
mov
daa
enter
xchg
int
lea
push
xor
lret
les
mov
sbb
jl
decl
and
jb
aad
pusha
enter
jno
scas
shll
cmp
int3
repnz
mov
arpl
adc
nop
mov
mov
xor
inc
xchg
faddl
cmp
sbb
sub
and
stos
lret
push
es
adc
ja
bound
imul
cmp
jbe
dec
out
jp
in
add
pop
rcll
cmp
insb
repz
mov
mulb
shl
cltd
push
mov
cmp
mov
mov
mov
cld
test
mov
xchg
jne
push
dec
mov
pop
add
jecxz
inc
shr
mov
outsw
push
or
inc
jne
sub
mov
push
sbb
push
outsl
xchg
int
and
ret
xor
out
mov
pusha
pushf
pop
cmovle
movsb
jnp
mov
cmp
jns,pt
mov
sahf
out
mov
jb
aaa
mov
aad
repz
inc
xchg
clc
jbe
pop
cs
jge
cmp
or
xchg
push
mov
sahf
cmp
imul
inc
movsb
or
bound
inc
pop
mov
dec
out
movsl
cld
ss
clc
imul
mov
adc
fadds
out
fsub
test
sub
lds
das
das
je
loopne
push
mov
clc
mov
inc
mov
out
insb
jg
loope
cmp
out
cmp
adc
push
mov
and
testl
je
loope
rorl
jmp
push
imul
sbb
xor
cmp
pop
cltd
push
fistl
pop
int
popa
pop
test
dec
and
in
fcomip
push
cmpsb
icebp
fdivs
std
shlb
pop
pushf
unpcklps
xchg
insl
cmpsb
stos
xchg
lea
test
mov
mov
rcrb
orl
mov
lahf
and
and
xchg
icebp
cmc
rcrl
xchg
xor
jle
nop
xchg
sbb
in
xor
fisttpll
fisubl
iret
test
cltd
ljmp
mov
in
cmp
and
movsl
pop
lock
push
push
or
sbb
sub
or
pusha
addr16
shl
inc
push
xchg
ss
mov
test
push
ret
mov
sbb
xor
in
aaa
sahf
and
mov
cmp
pop
outsl
loopne
jp
shlb
xchg
rcrb
cltd
std
pop
cli
stos
aaa
lcall
jmp
and
loope
push
inc
les
outsb
mov
aam
in
insl
jl
mov
push
imul
inc
ds
cmp
pop
and
jb
mov
call
movsb
fneni(8087
xor
jbe
repnz
movsb
dec
lds
cld
shrl
or
jno
popf
inc
mov
or
xchg
xchg
mov
add
das
dec
inc
dec
out
mov
xchg
repz
fstps
dec
jl
or
stc
jg
mov
cmp
lods
jnp
jae
mov
and
clc
xchg
xlat
add
pop
js
int3
arpl
jl
insb
mov
mov
or
ja
or
or
rep
mov
arpl
adc
mov
lret
clc
call
loop
or
in
xor
loopne
mov
xorl
xchg
inc
data16
pop
out
xlat
sbb
jg
sahf
xchg
jle
inc
roll
jns
push
sub
add
adc
sbb
ds
mov
inc
ret
jmp
lahf
jl
xlat
dec
adc
nop
enter
subb
lcall
les
cld
test
movsb
mov
and
and
add
lock
sbb
ret
popl
pop
push
in
mov
cmp
or
sub
pop
ss
inc
int
sbb
dec
push
inc
sub
mov
dec
sti
pop
push
rcll
cmp
or
lods
sub
divb
shlb
into
lods
out
dec
mov
sahf
push
sub
es
lcall
cmpsl
push
pop
mov
sub
lock
dec
stos
sbb
xchg
in
stos
lcall
dec
xchg
and
mov
mov
fidivl
pop
gs
push
adc
test
subb
test
icebp
cmp
fsubl
push
mov
rcll
dec
daa
in
mov
rcll
add
inc
mov
js
sbb
aam
cld
pop
addr16
adc
loope
addl
loopne
and
push
xor
popa
dec
in
jnp
or
or
icebp
movsl
mov
fmuls
or
pop
fnstenv
inc
push
adc
fldenv
cli
mov
mov
aam
mov
sub
xchg
insb
push
sbb
mov
jmp
aam
add
cwtl
das
pushf
ljmp
fsubs
lds
inc
cmp
fwait
aam
cmp
es
popf
out
daa
cltd
mov
scas
sbb
or
fwait
fwait
insl
cltd
rcrb
loope
ficompl
cmp
into
ret
jne
cld
scas
outsb
les
loopne
clc
sahf
rol
leave
pop
cmc
bound
adc
aas
xor
call
int3
mov
and
mov
mov
test
pop
cmpsl
xchg
insl
negl
enter
nop
jbe
test
jl
jle
stos
mov
movsl
pop
jecxz
repz
or
data16
mov
in
jae
sub
cmpsb
out
pop
testb
jge
sar
scas
sub
fsubr
nop
inc
sysexit
push
pop
int
popf
aaa
repnz
cmp
ret
and
inc
lds
sub
adc
mov
ja
call
push
dec
daa
cmp
mov
cli
adc
jle
jecxz
stos
in
arpl
mov
movsb
shll
ja
mov
out
mov
icebp
mov
sub
lahf
iret
hlt
xor
sbb
ljmp
pop
mov
mov
mov
cmp
inc
sti
pop
add
loop
rorl
arpl
dec
ficoms
dec
mov
std
stos
stos
pop
aam
out
bound
inc
sub
dec
jl
xor
cmc
jo
push
add
mov
jge
mov
shll
mov
add
xchg
jne
sub
sbb
pusha
subb
into
insb
jbe
pop
xor
push
xchg
fistps
sub
pusha
hlt
xchg
popf
les
data16
insb
out
xchg
jnp
inc
movsl
mov
rclb
sub
out
popf
aam
or
add
pop
fdivrl
aad
cwtl
loopne
push
sbb
and
cs
inc
cmp
repz
jb
cmp
mov
rorl
adc
push
add
xor
shl
movsl
das
clc
rcrb
or
je
das
lods
cli
push
jb
insl
cmp
outsl
push
idivb
jecxz
inc
ds
sahf
xlat
int
stos
cmc
xor
sbb
ficoml
and
das
loope
xchg
inc
loope
fstpt
xchg
dec
es
adc
jno
es
sbb
jno
push
lahf
xor
and
xchg
adc
iret
mov
lock
sarb
dec
pop
hlt
aas
sbb
sahf
dec
das
daa
clc
mov
pop
int3
and
ljmp
dec
mov
mov
mov
push
sbb
mov
add
in
scas
pop
xchg
inc
popa
das
mov
pop
and
push
test
in
test
cmp
jno
xchg
xchg
xchg
lret
xchg
inc
sbb
cmpsb
xor
rcrb
jecxz
xchg
sub
lret
data16
nop
mov
inc
push
inc
fprem1
sbb
adc
xchg
xchg
scas
cmp
gs
mov
jle
push
xchg
jo
mov
sub
icebp
scas
cmp
lds
test
xor
add
and
das
lods
mov
popf
imul
fcoms
std
gs
out
xor
lds
gs
sub
inc
xor
inc
pop
pop
lock
xor
pop
pop
test
stos
mov
push
push
jnp
leave
out
lds
ret
or
pushf
in
sub
movl
pop
out
inc
xchg
cld
jl
mov
or
cld
add
popa
lret
les
cli
fidivrs
outsb
inc
dec
add
push
loopne
dec
push
sbb
in
xchg
hlt
add
jl
cli
sub
dec
test
push
mov
dec
lds
insb
mov
daa
ss
imul
and
cmp
fstpl
mull
or
cmpsl
jo
out
mov
mov
cmp
rcrl
pusha
cmpb
dec
push
xchg
jne
mov
push
adc
mov
sub
es
pcmpgtb
mov
pop
xchg
xor
in
cmp
adc
lock
xor
fs
sbb
test
xor
popf
rorb
orb
xor
and
movsl
mov
mov
cmp
out
sbb
movsb
xlat
xchg
xchg
adc
add
popa
rcr
xor
fistl
jo
idivb
mov
xchg
cmp
and
mov
cmp
jns
loopne
pusha
sub
mov
mov
std
push
ds
aas
dec
cs
sub
pushf
xchg
mov
xchg
sub
mov
addr16
cmp
fs
fstl
sarb
jmp
mov
add
jnp
bound
loop
mov
pop
cmp
add
adc
push
mov
shr
loopne
imul
lret
lea
sbb
mov
inc
or
cmc
mov
addr16
push
push
loop
andl
jb
xabort
dec
pusha
out
and
out
mov
push
jnp
jecxz
adc
int
cltd
adc
jmp
or
cltd
xor
adc
popa
fistl
nop
add
adc
inc
sub
clc
popf
xchg
cmp
fcom
push
add
std
repnz
cltd
mov
out
cmpsb
push
xor
mov
mov
jb
aam
icebp
lods
fwait
lds
js
gs
cmp
and
inc
fwait
sub
sub
push
pop
add
arpl
fcos
jno
out
outsb
ss
lea
pusha
inc
out
ret
in
inc
adcl
clc
fs
mov
push
sbb
jno
jp
roll
jns
lock
sahf
outsl
pop
mov
scas
shl
adc
gs
adc
inc
loope
pop
mov
repz
push
inc
cmpsl
enter
lods
std
ja
subl
jo
pop
rcll
in
jnp
jle
fcmovnb
sbb
lock
push
inc
sbb
test
lods
jp
and
out
add
sbb
ds
ss
das
arpl
js
imul
mov
or
lret
push
sbb
lret
push
xchg
es
imul
jl
sbb
jbe
xchg
sub
pop
call
cmpb
jmp
or
lcall
mov
fwait
test
and
adc
push
push
lock
add
xor
je,pn
xlat
xor
sub
dec
repz
fs
xchg
sub
pop
mov
sahf
mov
inc
push
mov
and
mov
mov
imul
mov
cmp
add
shl
mov
inc
inc
dec
adc
sarb
outsl
int
xchg
in
inc
cs
push
or
or
add
adc
dec
jl
jl
mov
imul
clc
add
sub
aas
cmpl
nop
pop
loop
dec
xchg
lahf
add
push
nop/reserved
and
xor
add
cmp
jg
mov
jge
lds
addb
cmc
lods
ret
nop
push
cmpsl
insl
ss
push
mov
sbb
out
mov
arpl
pop
sarl
jl
fstp
pop
mov
mov
jp
loop
pop
out
mov
push
cwtl
aam
push
popa
loop
add
insb
mov
aaa
lret
inc
sub
dec
lock
pop
mov
out
lahf
cmp
adc
cli
mov
xchg
jns
jmp
push
jne
cmp
pop
hlt
popf
jl
cmp
ficomps
aas
stc
cmp
inc
cmpsb
jo
in
pop
inc
imul
jne
roll
inc
xor
or
sub
sub
adc
mov
mov
repz
loopne
add
mov
pop
test
xchg
pop
lods
int
dec
mov
cmpsl
mov
sub
inc
adc
lahf
mov
dec
sahf
cs
ds
fdivs
dec
mov
push
repnz
and
xor
and
mov
ljmp
xchg
aaa
sbb
xchg
inc
xchg
in
jecxz
leave
push
pop
or
movsb
bound
stos
and
faddl
pop
rolb
outsb
in
sub
sbb
jbe
xor
jp
std
add
and
popl
adc
aam
sbb
cltd
es
mov
dec
jmp
test
insl
and
mov
mov
rcrb
jmp
xor
or
adc
jnp
push
adc
pop
xor
cmp
jb
mov
clc
cmpsb
scas
push
jns
push
jne
lret
and
xchg
lock
rol
add
shll
mov
les
mov
insb
xor
sbb
or
mov
repnz
adc
fs
rorb
lods
stc
sub
sbb
push
rcrb
scas
imul
or
mov
je
mov
push
loope
xlat
inc
cmc
das
push
adc
jne
stos
jl
mov
cmp
in
int
pop
adc
in
jge
jbe
or
push
les
pusha
jg
push
pop
xor
je
xchg
add
mov
sub
xchg
cli
jnp
lods
inc
xchg
xchg
dec
jmp
xor
sbb
adc
jae
adc
xor
jbe
repnz
call
out
xchg
subb
repz
stc
push
inc
cmc
cmpb
and
outsb
add
lods
sbb
sbb
jbe
sbb
push
cld
arpl
and
or
adcb
jo
inc
xor
adc
sbb
roll
sub
frstor
in
dec
xchg
shrb
and
call
jg
dec
aad
out
xor
repz
faddl
mov
xchg
js
lods
dec
cmp
mov
push
push
lods
cmp
nop
insl
test
cmp
insb
dec
mov
lock
jle
subb
mov
jl
roll
aaa
leave
mov
lret
lds
mov
adc
icebp
lret
sbb
sbb
imul
in
cmpsb
stos
xchg
xor
aaa
and
shll
enter
mov
fdivs
stos
pop
add
cld
es
enter
dec
pushf
and
add
shlb
std
xchg
fistps
shlb
bound
mov
xor
mov
adc
iret
fldenv
fld
es
xor
adc
dec
and
lds
cld
mov
or
pop
adc
fisttpl
js
mov
xchg
pop
push
jp
lcall
pop
adc
jmp
orl
in
test
mov
les
sub
inc
jno
out
sub
mov
test
adc
cwtl
add
cs
jge
lods
mov
mov
insl
pop
fwait
mov
shrb
xor
fnstsw
cmp
inc
inc
cwtl
repnz
lcall
lods
or
mov
mov
das
cmpsb
mov
gs
mov
outsl
std
jmp
push
cmp
inc
ficomps
push
scas
sbb
add
pop
pop
mov
xchg
jae
push
clc
xor
sub
jl
add
push
in
popa
ja
imul
push
jb
sub
clc
lcall
stos
inc
fidivl
mov
jg
sahf
cltd
push
xchg
out
sub
lods
ja
aam
call
lahf
fwait
xchg
sbb
push
dec
dec
sub
dec
dec
std
adc
mov
scas
hlt
jl
popl
outsl
inc
clc
out
mov
xor
push
and
int
or
or
popa
dec
cwtl
xlat
xchg
shlb
movsb
mov
pushf
sbb
and
loope
push
pop
adc
or
jecxz
sub
xchg
pop
sub
ss
js
sub
mov
int3
mov
pushf
adc
scas
or
fcoms
pop
movsb
jp
add
hlt
mov
ffreep
xchg
sub
gs
fldl
dec
push
cmp
je
pop
xchg
push
pushf
xor
and
push
push
cmpb
mov
je
xchg
lods
scas
inc
push
mov
dec
xor
iret
adc
in
lods
hlt
fstpt
and
add
adcb
add
testb
inc
fsubl
insb
push
sbbl
aaa
sti
jp
or
sbb
outsb
sub
into
in
lea
push
faddp
inc
dec
int
dec
fisttpl
xchg
and
mov
sbb
movsl
ljmp
add
xor
insl
icebp
icebp
out
cwtl
inc
cmp
cltd
sbb
push
jnp
enter
repz
inc
cwtl
insl
popf
jle
cmp
popf
cltd
fs
movsl
jns
imul
sub
pusha
sbb
sbb
sbb
ret
push
js
call
filds
xchg
mov
lds
subb
fs
dec
dec
push
and
push
in
mov
stos
sub
adc
or
outsb
mov
sub
lahf
or
jge
push
iret
js
inc
mov
pop
out
lods
mov
mul
cmp
add
xchg
jecxz
fdiv
inc
mov
cltd
test
mov
mov
into
js
mov
sbb
mov
pop
mov
in
cli
leave
sub
mov
pop
mov
pop
push
fidivl
sub
sbb
aas
js
stc
in
dec
push
in
bound
pop
mov
xor
mov
neg
mov
sti
lods
cli
push
dec
pop
fisttpl
add
cmp
xor
cmpsl
push
pushf
arpl
xor
xor
mov
or
push
adc
sbb
and
into
mov
cmp
push
cld
fsubrs
jae
popa
adc
sbb
paddsb
jae
sbb
movsb
pop
mov
call
jl
rep
sub
dec
add
or
add
dec
adc
mov
sbbb
push
lret
mov
xchg
lea
fisubl
in
repz
xor
push
dec
and
fiadds
popa
clc
aas
out
clc
sub
jmp
notb
xchg
insl
ficoml
iret
mov
xor
imul
es
fcmove
inc
adc
test
dec
ja
andl
inc
adc
clc
data16
addr16
adc
and
js
inc
jle
jb
xchg
aaa
andb
in
fidivrs
xchg
jmp
mov
xchg
js
outsl
in
movsl
aaa
js
adc
ret
cmc
ret
pop
test
ljmp
add
arpl
das
pop
inc
loope
cmp
loop
pushf
outsb
and
xor
mov
leave
dec
lods
les
lret
mov
enter
lock
js
cmp
xor
add
push
ret
int3
inc
test
inc
cld
mov
test
int
lahf
in
ja
mov
loope
mov
xor
imul
dec
scas
cli
out
bnd
xor
dec
xor
or
cs
xchg
sub
inc
push
pop
inc
mov
loop
push
cmp
leave
inc
jmp
jns
fwait
xchg
sti
push
sub
idivl
push
test
data16
push
push
iret
jecxz
popf
cld
mov
cmp
iret
jp
lock
inc
xor
out
pop
add
mov
nop
es
jns
ror
mov
js
rcrb
mov
test
in
mov
js
cli
lods
or
push
mov
pop
sbbl
sbb
bnd
jns
xchg
mov
rorl
or
xor
push
inc
add
or
jle
cltd
sbbb
ss
sub
cmpsl
outsb
xchg
jb
in
lret
jl
repz
adcb
mov
test
jmp
test
jne
test
lret
sbb
dec
xchg
mov
or
dec
lahf
mov
in
rcrb
jle
sub
mov
shl
stc
push
xchg
jae
jecxz
pushf
jle
add
cs
jl
pop
sbb
jns
call
dec
sbb
add
out
sub
dec
cwtl
pop
and
mov
inc
pop
pop
adc
and
inc
cmp
pushl
pop
pop
dec
sbb
fstl
dec
cmp
out
lret
ror
jns
jbe
cmp
iret
rcr
int
in
aam
push
fildl
cmp
cmp
adc
imul
sbb
xchg
fisttps
loop,pt
jns
push
aaa
out
push
cmp
fists
arpl
imull
ljmp
stc
imul
cmpsl
movsb
inc
in
xchg
add
cli
std
in
popa
ss
mov
cmp
dec
push
push
lea
xchg
scas
jp
cmp
mov
or
inc
mov
lods
stc
push
xchg
ja
repnz
jae
sbb
adc
jae
sbb
outsb
sti
sbb
movsl
out
mov
pop
and
and
adc
dec
xlat
or
and
in
or
push
sbb
inc
cmp
aas
daa
movsl
lds
mov
xor
leave
aad
inc
xchg
xchg
sbb
mov
shll
mov
scas
lcall
ret
das
inc
cmp
sub
pop
cmc
mov
pop
xor
cmpsb
cmpsb
sub
aaa
sub
sbbb
add
leave
inc
icebp
pop
cmp
scas
aad
sub
pop
insl
mov
cs
sub
inc
cmpsl
decl
test
rolb
push
add
fs
pop
call
inc
int3
xchg
shlb
add
mov
rclb
cmpsl
fnsave
mov
ss
xor
test
push
xor
lcall
mov
stc
bound
or
xor
cld
lret
mov
sub
push
pop
sbb
rclb
pop
fisttps
add
pushf
adc
xchg
popa
shll
insl
jno
outsl
sbb
mov
mov
stos
shlb
insb
lret
icebp
cs
out
rorl
mov
mov
jl
mov
ret
or
xorl
push
adc
pop
lcall
dec
jg
xchg
push
ljmp
push
xchg
jb
mov
mov
push
aas
add
cmpsl
xor
in
xor
rcrb
sbb
repnz
push
cmpsl
add
out
sub
sbb
outsb
mov
int
pop
sub
rep
stc
dec
cmp
xchg
fisubs
fdivs
pop
jl
xor
imul
pop
out
loope
rorb
or
xor
inc
lret
aad
or
fdivrs
jge
sub
popa
cmp
push
arpl
mov
aad
mov
daa
adc
mov
xor
add
addr16
aas
jbe
bound
sbb
and
into
xchg
bound
enter
mov
jae
ss
jg
loope
cmp
inc
sub
gs
mov
fistps
aam
jg
loop
daa
xchg
ret
mov
std
clc
sahf
pop
fs
add
sbb
loope
jmp
enter
sbb
add
pop
and
and
rol
xorl
mov
or
fcomip
ss
je
out
sbb
dec
in
push
sbb
in
xor
roll
out
rcr
and
sti
cld
lcall
out
jmp
add
jp
adc
jge
cmp
mov
mov
aaa
icebp
setb
mov
loopne
inc
in
iret
test
push
or
out
add
mov
inc
pushf
mov
cmp
xchg
or
mov
and
sub
cmpsb
aam
cmp
daa
jns
in
sub
cmc
outsl
test
call
mov
ret
xorl
pushf
jns
fwait
jne
cmp
cmp
and
les
and
xlat
add
adc
in
in
push
inc
jg
addr16
leave
push
pop
fwait
enter
dec
int
dec
jno
adc
mov
aas
loop
lods
inc
int3
subb
or
jno,pn
xchg
sbb
pop
call
pop
adc
adc
lahf
pop
or
push
in
bound
xchg
xchg
jae
das
mov
lret
mov
cmp
xor
xor
es
or
lret
jmp
xchg
stos
lods
cmpsl
cli
nop
mov
xchg
pop
add
pusha
test
enter
push
cwtl
sahf
fcmovu
dec
jecxz
jl
mov
sbb
dec
cmp
xchg
clc
cmpsl
mov
cmpsb
outsl
xor
inc
arpl
into
out
and
add
push
adc
xchg
sti
and
scas
or
aas
cltd
and
fcmovbe
sbb
dec
mov
es
mov
pusha
in
add
dec
outsl
jg
adc
xchg
jge
pop
cli
mov
push
in
dec
mov
stos
mov
stc
or
mov
add
or
xchg
push
popa
and
cmp
in
ret
ljmp
cmp
sahf
mov
pop
jg
mov
cmp
add
pop
add
fstpt
mov
adc
in
cli
aad
cmc
xor
xchg
sbb
add
xor
push
or
loopne
xor
push
dec
sti
mov
jno
je
loop
pusha
jg
repnz
fcmovb
pop
aaa
outsb
pop
out
out
scas
jl
xor
int
out
dec
adc
mov
repnz
mov
ret
inc
je
mov
shlb
rcl
sub
cltd
fs
xor
or
ja
sub
and
sub
mov
fdivrs
data16
xchg
test
aas
xchg
mov
jnp
clc
jmp
xchg
paddd
fmulp
dec
inc
lds
fisttpll
popa
sbb
enter
rolb
idivl
cmp
repz
dec
adc
mov
jne
jno
ficomps
adcb
jo
pop
jecxz
stos
mov
jbe
in
dec
push
mov
jp
cmpsb
mov
clc
sbb
xor
idivl
dec
outsb
inc
dec
scas
inc
xor
movsb
or
scas
jp
sbbb
orl
xor
dec
inc
repz
jae
mov
push
jle
into
pop
adc
xor
jb
es
xor
into
and
adc
test
mov
dec
push
dec
enter
adc
xchg
xchg
mov
das
sub
xchg
stos
in
das
cmpsb
inc
mov
movsl
das
lods
cmc
test
in
into
push
nop
movsb
insl
dec
stos
xlat
lret
adc
push
dec
xor
mov
sub
sub
push
mov
stos
sbb
jp
movsl
aaa
js
sbbb
movsb
jecxz
cltd
dec
cmp
sub
pop
pop
cmp
imul
inc
lock
outsl
test
mov
lret
cs
cltd
add
fldl2e
sub
out
je
mov
mov
aam
stc
sub
mov
xchg
pop
dec
xchg
fucomip
hlt
movb
inc
xchg
xor
or
dec
add
mov
fldenv
push
fdivrl
test
sbb
cli
adc
je
xchg
jno
pop
push
cmp
adc
mov
jg
pop
push
jecxz
sub
jbe
gs
push
aad
aam
push
jae
lock
out
out
pop
sahf
add
pop
sbb
jmp
sarl
into
cmp
push
sbb
mov
or
ret
ret
mov
add
sbb
adc
or
jmp
stos
and
xchg
inc
pop
mov
mov
outsl
mov
push
inc
jecxz
and
mov
scas
dec
inc
xor
mov
adc
inc
xor
mov
mov
shll
jbe
aaa
jecxz
lahf
in
int3
arpl
and
xor
aaa
fidivs
js
stc
aad
loop
leave
sti
jns
pop
into
mov
jb
jno
in
mov
xchg
add
loopne
inc
jmp
mov
shlb
and
lcall
mov
ffree
ficompl
jl
loopne
push
sub
mov
push
dec
stc
ja
outsb
inc
mov
xchg
lea
out
and
dec
jmp
fs
aad
shll
roll
mov
jmp
repz
xchg
mov
out
or
icebp
pop
shrb
andb
cmp
mov
mov
sbb
xchg
jno
pusha
pop
inc
mov
mov
adcl
or
adc
jb
das
dec
push
add
xor
mov
imul
leave
mov
je
movsl
fucomip
insb
std
and
test
out
or
sub
rcll
mov
push
sub
add
xchg
mov
mov
fdivp
jp
xchg
xor
outsl
in
fnsave
in
cs
adc
jge
mov
push
mov
cmc
pop
and
enter
loope
fprem1
jb
and
jg
push
dec
cmp
jo
mov
shrl
rcrl
repnz
pop
mov
mov
xor
shrb
push
mov
and
addb
out
xchg
inc
leave
mov
inc
xchg
pop
bound
ss
jle
jp
xchg
in
xchg
mov
push
or
push
sbb
loop
pushf
sbb
test
xchg
enter
fbld
fistpll
fcmovnb
jp
js
mov
sarb
je
or
pop
mov
xchg
call
xor
mov
xlat
adc
push
pop
cmp
dec
jge
dec
xchg
lds
jmp
movsb
or
in
les
daa
jo
in
ret
neg
fwait
jns
add
adc
jnp
ljmp
xchg
std
dec
aas
out
mov
sbb
bound
mov
sbb
jae
inc
xor
scas
leave
aad
sub
popl
jnp
sub
fcmovnb
jle
push
and
push
dec
jmp
sar
cmpl
test
pop
dec
sbb
fwait
pop
xchg
adc
sbb
lds
push
cld
sub
pop
rclb
and
shlb
cmp
leave
xchg
ja
icebp
rorl
inc
or
lods
cli
pop
jge
mov
dec
stos
xchg
dec
cmp
xchg
int
xchg
pop
xlat
pop
repnz
out
js
mov
jne
cltd
ss
mov
lods
push
ficoms
dec
pop
cwtl
iret
sbb
push
sbb
push
in
push
pop
sub
mov
jae
call
mov
std
loope
loopne
scas
jp
push
fdivrl
push
sub
mov
inc
mov
scas
sub
push
jg
cmpsl
fisttpl
adc
push
fimull
enter
ret
je
lret
lcall
mov
lock
mov
test
pop
leave
pop
xchg
enter
adc
sub
jae
ret
mov
aas
sub
add
arpl
je
popl
dec
fdivs
or
mov
sti
insb
sbb
sub
add
mov
sub
push
outsl
xor
push
or
jo
test
push
lods
aad
lock
push
add
jmp
mov
add
mov
adc
mov
test
cltd
aam
push
sub
das
xchg
icebp
xlat
enter
lods
sbb
insl
shlb
adcb
pop
push
xchg
fs
sub
arpl
pop
ljmp
or
xorl
add
jae
rcll
or
lea
dec
mov
fcom
js
sub
adc
inc
dec
call
outsl
xchg
add
pop
xchg
push
popf
xor
pop
push
icebp
adc
lock
or
fidivrs
call
jmp
jbe
mov
lds
das
xlat
jecxz
les
sbb
orb
mov
xchg
xlat
jmp
inc
pop
or
scas
xchg
repnz
in
loop
pop
out
dec
lcall
jae
pop
push
and
in
loope
pop
sahf
pushf
sahf
inc
fwait
cltd
mov
and
or
pushf
ret
lret
pop
ds
mov
adc
pop
push
inc
test
test
pop
dec
jge
push
push
push
repnz
fiadds
das
mov
ljmp
adc
je
push
sbb
mov
lods
jnp
outsb
or
loope
mov
xor
frstor
je
je
cld
clc
lcall
jne
enter
sti
add
dec
xchg
outsl
dec
and
xchg
and
cmpsb
inc
mov
cli
cli
inc
mov
stc
stc
bound
mov
dec
mov
sarb
mov
inc
mov
mov
inc
mov
mov
int3
and
mov
iret
and
mov
int3
sub
xor
fisubs
inc
adc
ret
cltd
sbb
cmpl
loop
xor
add
pop
popa
insl
stos
sbb
in
jae
pop
test
jnp
rcll
mov
push
sbb
ret
push
pop
add
push
sbb
inc
bnd
adc
das
inc
lock
push
cmpsl
sub
icebp
jl
adc
cld
jae
adc
lock
adc
hlt
ja
adc
icebp
je
or
sbb
jge
insb
or
dec
scas
stos
jb
push
xor
or
xor
or
aaa
aam
xchg
mov
adc
push
push
cmp
or
cmp
or
aas
aam
lahf
mov
aam
andl
popl
aam
test
aam
xchg
aam
mov
or
adc
xor
xlat
push
xor
xchg
dec
hlt
rcll
xor
dec
not
push
aas
sbb
cmp
fists
cmp
xchg
dec
cld
fsts
cmp
dec
fistl
daa
add
and
orl
mov
inc
aam
aas
xor
mov
lea
cmp
pushf
dec
add
cwtl
arpl
mov
sahf
push
push
push
xor
mov
out
repnz
lods
push
sub
dec
mov
adc
push
add
aam
test
xor
dec
mov
loop
bound
ja
cli
xor
dec
mov
cmpsb
das
js
jg
xchg
shrb
shrb
lds
push
push
test
test
lock
inc
pop
pop
push
lods
int
test
adc
mov
test
and
and
inc
data16
aaa
into
out
data16
sbb
aas
push
xchg
inc
ret
mov
mov
adc
test
sub
rorl
xor
enterw
les
outsl
xor
in
mov
sub
pop
lahf
aam
fistpll
loop
sti
mov
mov
pusha
mov
push
sbb
inc
jle,pt
xchg
scas
xor
sbb
pop
jns
jne
faddl
mov
sub
cmp
aas
jne
jne
dec
jl
int
push
dec
xchg
bnd
jns
jno
cmc
out
cld
inc
push
ja
aad
mov
xchg
adc
lahf
and
stos
in
sub
push
push
push
pop
inc
daa
rorw
insb
insl
flds
sub
and
push
into
mov
in
fcoml
push
cmpsl
loopne
push
ljmp
sub
xchg
out
jne
lahf
sahf
push
shll
fisubrs
mov
les
test
scas
xor
mov
dec
xor
lds
pop
rep
push
pop
rep
outsb
outsl
lds
pop
rep
insb
insl
lds
pop
rep
bound
pop
push
push
rep
pusha
popa
lds
push
rep
lds
push
rep
fs
push
rep
jp
in
insl
insb
rep
js
int3
mul
in
loopne
incb
imul
rorb
addr16
push
jno
jmp
add
stos
mov
out
popf
mov
ret
inc
arpl
test
pop
and
dec
insl
adc
dec
xchg
mov
xlat
pop
inc
cmp
xor
fistl
cmp
jecxz
cmp
in
cmp
out
mov
dec
jno
mov
cmp
xchg
icebp
sub
jb
jmp
jae
xchg
imul
push
test
push
ds
cmp
push
stos
push
push
jp
jge
adc
sub
inc
mov
sub
inc
mov
and
push
scas
pop
pop
and
loop
jge
mov
dec
xchg
ret
addr16
push
cwtl
fucomp
out
and
push
pushf
ret
hlt
cli
xor
mov
and
outsb
inc
push
in
sbb
loopne
xchg
push
mov
pusha
inc
stos
adc
cmp
fidivl
sub
and
rcll
imul
xor
jmp
add
cmpsl
repz
or
xchg
pop
sbb
int
sahf
dec
jnp
fdiv
inc
or
clc
iret
in
fs
push
clc
shl
arpl
mov
mov
xchg
mov
mov
mov
sub
push
lods
cmpsb
shl
sbb
aad
loop
out
mov
mov
or
lods
iret
aaa
push
push
scas
push
popa
pop
imul
iret
cmp
fidivrl
ds
sub
sub
mov
xor
or
lahf
stc
lea
jp
negl
jl
notl
jle
notl
into
leave
sbb
and
jl
xchg
sub
or
adc
aaa
out
mov
lret
adc
cmp
mov
ja
jo
push
cli
jae
sbb
test
lods
mov
in
mov
and
or
into
mov
push
inc
fs
push
pop
mov
icebp
jmp
sahf
push
xchg
mov
insl
mov
push
ret
test
pop
lods
jne
and
dec
fsubs
mov
fwait
movsl
jae
cmpsl
mov
test
mov
mov
jns
xchg
stos
xchg
mov
mov
jnp
outsl
push
test
stc
mov
aas
push
sub
stc
ss
daa
cmp
cmp
scas
loop
cmp
popf
mov
in
insb
jle
mov
mov
adc
bound
pop
lds
into
push
adc
cmc
pop
push
push
mov
clc
clc
and
or
divl
xchg
orb
add
ss
cmpsb
sbbb
mov
and
mov
mov
xor
std
lret
stos
popf
jbe
dec
and
icebp
and
repz
mov
and
test
jbe
jmp
test
add
in
fiaddl
test
out
fadds
test
loope
add
jecxz
add
mov
icebp
stos
jae
ss
mov
imull
mov
cmc
stos
jb
xor
stos
jb
cmp
mov
into
outsl
negl
jb
into
xchg
xlat
mov
pop
das
mov
out
in
xor
and
testb
loop
leave
and
testb
loopne
leave
es
testb
out
xor
sub
testb
in
xor
sub
testb
ljmp
jmp
das
testb
xchg
jo
adc
testb
xchg
jo
adc
testb
cwtl
popa
cld
std
push
out
js
popa
lcall
out
jbe
popa
lock
push
out
je
popa
repnz
out
jb
popa
hlt
cmc
push
out
jo
popa
div
push
out
outsb
cwtl
popa
call
insb
cwtl
popa
ljmp
popa
in
in
push
out
push
push
out
cbtw
popa
loopne
push
out
fs
popa
out
push
out
popa
cwtl
popa
pop
cmpsl
push
pop
cwtl
popa
fcmovnu
pop
cmpsl
sbb
cwtl
popa
fstp
pop
cmpsl
sbb
cwtl
popa
pop
cmpsl
sbb
cwtl
popa
rcl
pop
cmpsl
push
pop
cwtl
popa
rcl
pop
cmpsl
adc
cwtl
popa
aad
pop
cmpsl
adc
cwtl
popa
leave
enter
sets
lret
or
cwtl
popa
int
pop
cmpsl
or
cwtl
popa
iret
into
pop
cmpsl
or
cwtl
popa
rol
cmpsl
push
pop
cwtl
popa
cwtl
mov
dec
and
sti
push
cmpsl
pop
jp
popa
pushf
popf
outsb
xchg
imul
xchg
addr16
popa
nop
xchg
outsb
xchg
gs
popa
xchg
xchg
outsb
xchg
arpl
popa
xchg
xchg
outsb
xchg
popa
pusha
cwtl
popa
xchg
xchg
outsb
xchg
jg
clc
add
jmp
clc
add
jmp
xchg
jnp
clc
add
in
outsb
xchg
jns
clc
add
out
outsb
xchg
ja
clc
add
loope
xchg
jne
clc
add
jecxz
xchg
jae
clc
add
in
xchg
jno
clc
add
out
xchg
femms
cwtl
popa
clc
stc
outsb
xchg
or
sti
outsb
xchg
or
cwtl
popa
cld
std
outsb
xchg
or
cwtl
popa
ljmp
pop
push
cwtl
popa
lock
outsb
xchg
add
rep
xchg
add
cwtl
popa
hlt
cmc
outsb
xchg
add
cwtl
popa
div
outsb
xchg
pop
push
mov
xchg
sbb
lret
outsb
xchg
sbb
fcomi
jns
cmp
xchg
inc
push
adc
push
and
cltd
fwait
xchg
mov
sahf
cmpsl
cmp
cli
aam
jmp
incl
dec
into
in
and
adc
ja
inc
ja
std
shl
mov
sar
rcrl
lea
sti
push
pop
div
inc
cmp
cmp
jl
xchg
push
rcl
xchg
imul
jbe
fcoms
notb
cld
adc
cmp
lods
jns
ljmp
xchg
jp
stos
adc
shrl
stos
into
push
and
scas
shll
out
insb
add
cs
aaa
not
inc
dec
js
and
jg
pusha
das
cli
rol
xchg
dec
add
ljmp
stos
dec
fldenv
push
ret
sub
xchg
mov
ljmp
push
subb
cltd
sbb
xor
mov
iret
or
test
xchg
mov
mov
ja
push
popf
xchg
pop
mov
push
dec
test
xchg
mov
sub
cs
lcall
jno
adc
or
les
sbb
dec
push
inc
or
sti
call
pushf
lock
aad
aaa
cwtl
sarl
shll
inc
in
testb
and
jnp
jmp
int3
es
dec
cmpsl
sub
push
mov
jb
jmp
sbb
dec
jnp
dec
cs
mov
adc
ret
ret
lret
jp
aad
adc
es
jmp
sti
fistps
adc
enter
sub
jg
push
lcall
fidivl
jbe
je
sbb
ja
jns
mov
xlat
xchg
mov
sub
xor
push
nop
lods
sbb
mov
xlat
add
wrmsr
jg
lret
stc
inc
bound
jg
pusha
cmpsb
aaa
arpl
pop
dec
loope
into
xchg
pop
jne,pt
sbb
or
add
sar
adc
leave
push
push
add
subb
inc
test
shl
or
cli
fidivs
cli
loop
aas
rorb
push
xchg
test
ljmp
pop
cmp
pop
mov
mov
jle
outsl
xchg
sub
pushf
movsl
xchg
inc
repnz
aaa
or
std
aaa
mov
cltd
imul
pop
add
push
ret
repz
push
xchg
inc
mov
out
out
xabort
xchg
jle
adc
cmp
outsl
cli
aaa
je,pn
add
dec
sub
enter
rcr
out
or
adc
mov
xchg
popf
fmul
or
add
sbb
jmp
or
movsl
dec
daa
pop
ret
xchg
scas
ficomps
lods
sub
stc
daa
sahf
sarl
out
sub
shl
adc
jns
xchg
cmp
cmp
popa
out
nop
imul
call
or
dec
pop
shrl
mov
iret
leave
in
mov
jae
insl
addr16
aas
or
leave
aas
pop
and
add
lea
push
mov
jae
pop
outsl
imul
lods
mov
ds
pop
and
xor
icebp
dec
mov
sbb
jne
xlat
lods
mov
sahf
mov
xchg
out
or
enter
pusha
cmpsb
lret
push
clc
and
daa
sbb
jne
cwtl
push
shrb
popf
mov
inc
jecxz
sar
and
in
mov
mov
daa
inc
test
sub
inc
loop
xchg
addl
dec
cmpb
bound
js
aaa
mov
loopne
cmpsl
rclb
xor
fimuls
push
mov
xchg
in
push
addr16
aas
xchg
loopne
iret
fldcw
addb
sub
fxam
cs
jmp
data16
lret
sub
mov
mov
mov
xchg
dec
in
movb
pop
jg
test
js
mov
fiaddl
sbb
adc
mov
sbb
inc
js
jnp
and
aam
out
sbbl
int3
add
or
std
enter
mov
mov
xchg
sbb
aad
imul
sub
lea
js
mov
data16
ljmp
scas
rolb
inc
icebp
jne
jns
cli
arpl
inc
dec
xor
insl
lods
pop
pop
pop
test
and
dec
or
and
scas
pop
outsb
ljmp
pop
je
leave
aas
add
push
clc
xchg
sbb
idivl
cwtl
sbb
sbb
fwait
out
loope
psllq
sub
into
push
repz
addr16
sbb
insl
bound
fists
mov
jnp
push
xchg
push
cld
jmp
adc
sahf
lock
out
subps
out
cmp
cmpsl
pop
xorb
stos
aam
dec
je
lret
mov
push
xchg
add
test
jl
mov
inc
pop
sbb
and
movsb
imul
cltd
test
mov
fs
xor
fistpl
inc
jg
jnp
cmp
add
test
lods
popf
xchg
fs
mov
inc
lock
and
je
mov
adc
mov
mov
stos
repnz
sahf
mov
jbe
jae
pop
sbb
jge
jno
or
cmp
cltd
inc
add
sbb
push
inc
inc
push
xor
movsl
mov
ret
ss
lods
push
fsubrs
jle
stos
xor
xor
sub
ja
jmp
sub
ljmp
ljmp
or
aad
adc
push
xlat
xchg
mov
stos
push
js
mov
adc
into
sbb
enter
jbe
inc
xor
pushf
lods
cmp
in
lds
testl
and
add
jb
xor
cltd
add
dec
jl
pop
stos
cmp
xchg
pop
cwtl
outsl
push
mov
daa
jl
ds
scas
xchg
inc
ret
cli
or
es
insb
jl
and
hlt
std
movsb
fwait
cmp
jne
mov
movsb
sbb
add
test
fdivl
and
push
jg
cmp
jo
aad
test
push
cmp
jg
icebp
stc
rolb
pop
inc
pop
inc
das
sub
adc
xchg
lods
pop
push
mov
mov
inc
enter
cli
pop
mov
add
insl
cli
cmp
hlt
mov
dec
jbe
and
xchg
push
jno
lock
hlt
sbb
dec
mov
imul
out
mov
addr16
stos
inc
sub
filds
jmp
xchg
adc
dec
jbe
mov
cltd
sub
cltd
pop
push
decl
xorb
clc
out
pushf
sbb
outsl
aaa
lods
aam
and
mov
dec
pop
out
dec
pop
xchg
sti
into
mov
and
mov
out
mov
jmp
cmp
lcall
pop
in
mov
popf
cwtl
mov
push
jle
stc
xor
and
push
int
pop
ja
dec
lds
push
sub
ljmp
cmp
out
mov
lock
bound
adc
sbb
mov
dec
xchg
pop
mov
pop
imul
ret
addr16
divl
out
frstor
sub
fldcw
add
sbb
push
pop
aaa
push
dec
repnz
in
divl
sub
mov
xchg
cmp
xchg
jo
adc
mov
int3
sub
imul
mov
pop
mov
adc
mov
sti
pop
push
ret
pop
mov
xor
ss
jle
inc
out
jl
fisubs
cmc
inc
js
or
jle
mov
scas
inc
xchg
mov
inc
stos
jp
add
mov
addr16
mov
sbb
loope
into
sub
movsb
mov
mov
push
mov
pop
mov
lret
jg
xchg
cmp
xchg
and
je
loopne
pop
push
test
call
add
jle
xchg
pop
cmp
outsl
mov
data16
imul
lock
es
inc
lret
dec
out
jns,pn
aam
push
out
adc
and
cs
xchg
movsb
mov
fists
in
inc
cmp
adc
ja
jmp
sbb
inc
ficoml
lods
sti
aad
mov
icebp
sub
test
loop
and
aas
pop
outsb
push
add
bswap
xorb
leave
test
ds
lea
aas
lea
add
les
pop
call
imul
pop
mov
jo
adc
sti
lahf
shl
jmp
fbld
xlat
sbb
mov
dec
push
inc
jbe
es
xor
std
loope
pop
jg
pusha
mov
lret
ret
add
adc
jg
inc
push
push
push
sbb
pop
xchg
sbb
push
movsl
xchg
inc
ds
push
das
add
popf
xchg
and
xchg
mulb
outsl
loope
dec
pusha
cmp
jbe
jg
inc
sarb
fwait
jecxz
loop
inc
shrl
push
adc
scas
cmpsb
popa
das
popf
xchg
add
dec
cmpsl
or
push
mov
dec
jne
mov
mov
in
rcl
xor
mov
les
sub
movsl
sarb
push
jmp
cwtl
loop
xor
loope
adc
adc
xchg
into
push
out
sbb
xchg
fisubs
je
xor
push
and
xchg
out
adcb
cmpsb
lods
shlb
div
sub
stos
jb
sub
xchg
mov
cmpsb
call
add
add
cmpsb
in
in
push
jge
pop
popl
fsubl
ret
repz
add
shrb
stc
ljmp
outsb
pushf
das
adc
lods
sbb
fcomip
rep
xor
arpl
in
cli
or
xchg
push
movsl
xchg
jl
add
cmc
lret
xchg
and
xor
gs
push
push
dec
push
pop
sbbl
jge
das
mov
aam
xor
fucom
mov
ret
fcoml
inc
aas
mov
mov
aad
lds
push
sub
or
fnstenv
cli
and
jb
cmp
fadds
lods
xchg
sub
mov
mov
adc
push
aaa
push
pop
mov
repz
test
insl
or
mov
inc
mov
jns
jae
add
movsb
lods
push
sbb
inc
data16
xchg
sarb
xor
cmp
js
shrb
icebp
outsl
sbb
pop
aam
jo
pop
pop
maxps
das
mov
mov
iret
addr16
pop
pop
lods
pusha
sahf
jle
insb
out
rolb
xchg
jl
dec
inc
mov
mov
pop
out
les
stc
add
std
fs
cmp
scas
pop
sub
xor
sbb
aaa
movsl
hlt
and
test
push
out
fdiv
and
sbb
imul
iret
fnstcw
xchg
clc
int
loopne
subl
out
movsb
leave
push
mov
sbb
sahf
movsl
aas
lret
ror
xor
arpl
js
push
arpl
int3
xorb
neg
dec
cmpl
test
lods
xor
push
inc
mov
lret
je
repnz
sub
lds
xchg
xchg
xchg
pop
jne
lahf
jl
dec
adcl
xchg
andl
mov
dec
insb
in
xchg
scas
shr
dec
repz
jle
shll
je
das
pusha
inc
inc
mov
jle
mov
rcrb
jnp
movsl
and
cmc
mov
lds
cmp
push
jg
add
jg
mov
pop
and
adc
mov
and
adc
cmp
push
mov
jmp
jmp
loopne
mov
adc
rcr
xchg
adcb
jecxz
std
sub
dec
mulb
lds
mov
cmp
inc
sbb
fcomps
or
pop
stc
ja
rcrb
daa
cwtl
mov
xchg
mov
pusha
mov
out
cmp
push
push
jb
stos
sbb
lea
mov
add
add
and
pop
imul
or
dec
mov
pop
sti
insl
cmp
sub
xchg
test
roll
add
movsb
cwtl
mov
imul
loopne
test
xor
xor
push
rcll
xor
fiadds
popa
jmp
mov
lods
movsb
xor
out
js
fcmovu
inc
fdivrs
xchg
aaa
jns
jns
jbe
adc
or
out
xchg
insb
dec
xor
ss
shlb
jecxz
lret
push
lret
push
sti
mov
jns
sbb
add
jecxz
jg
lods
inc
gs
push
and
cmc
inc
push
lds
sbb
inc
fsubrp
mov
cs
push
enter
sub
mov
mov
or
imul
mull
jge
jne
loop
cmpsb
mov
dec
scas
adc
in
je
sahf
cs
xchg
in
sahf
sub
loopne
sub
and
push
jno
adc
adc
add
or
sahf
bound
push
iret
dec
fadd
js
adc
fsubl
ret
arpl
ds
cmpsl
daa
lods
test
cmpsl
xchg
loop
and
test
or
mov
rol
scas
inc
mov
fiadds
je
sub
add
push
inc
pop
repnz
pop
int3
mov
mov
pop
pop
clc
jo
cmpsl
out
cld
repz
mov
or
sub
idivb
aas
dec
je
xor
arpl
scas
lret
sbb
xorb
out
stc
iret
xchg
mov
xchg
stos
cmp
xchg
cmc
sbb
scas
hlt
xchg
sbb
sub
pop
xlat
cmp
mov
xchg
add
adc
rorl
or
fistps
lods
rcl
jl
lds
mov
mov
lods
sbb
sub
dec
lds
mov
mov
jp
hlt
xchg
dec
cmpsb
mov
es
and
test
push
out
out
aam
shrl
jecxz
pop
adc
inc
xchg
mov
mov
sub
repz
cld
movsl
cltd
sub
mov
sub
push
mov
adc
fadd
pushf
mov
mov
jg
jg
xor
jmp
mov
mov
sbb
ja
in
fdivrl
and
mov
in
jmp
rolb
loope
jnp
ror
fs
int3
pop
addl
or
mov
xchg
and
xchg
mov
movsb
aam
jne
mov
fisubrs
cmc
mov
fnsave
sbb
adc
or
add
cmp
ret
lret
sbb
sub
sbb
jnp
sub
xlat
test
lret
das
push
sub
ljmp
and
jae
int3
sub
jae
cvtps2pi
lock
ja
je
adc
test
je
js
sbb
flds
int3
movsb
pop
in
pop
into
push
push
popf
or
cmpsb
sbb
sub
jbe
scas
mov
cs
xchg
jmp
and
fidivl
or
lods
adcl
add
fnstcw
jb
adc
mov
inc
add
push
inc
sbb
add
std
lods
cmc
jb
cwtl
loope
popf
xchg
xchg
cmpsb
into
in
mov
adc
fwait
sti
and
cltd
lret
out
inc
rcl
push
adc
lret
dec
outsb
loop
lret
sub
inc
movsb
aam
push
std
in
push
xchg
and
xor
sti
scas
insb
movsl
lcall
in
or
push
pop
cmp
sbb
lea
icebp
call
mov
add
sub
push
and
int
sbb
or
cmpsl
popf
jg
test
sti
iret
arpl
test
in
sbb
push
pushf
pop
sub
insl
movlps
mov
lock
or
fcomip
or
dec
iret
or
or
adc
lret
pop
roll
in
mov
and
add
and
outsl
sarb
dec
fcmovb
add
call
xchg
pop
subb
outsl
repz
pop
xor
xchg
xlat
rorl
sub
mov
enter
lods
sub
mov
je
test
adc
jmp
cwtl
mov
loopne
xchg
inc
imul
push
aad
mov
pushf
sbb
push
inc
mov
fildl
aad
es
mov
cli
loop
outsb
jle
fdivs
xor
loope
daa
orb
stos
das
rcr
push
sbb
imul
aam
bound
in
adc
test
jbe
je
and
pop
je
sbb
arpl
fsubl
call
inc
pop
adc
sbb
adcb
sbb
cmpsb
fs
out
pop
mov
jmp
xor
and
jb
aas
in
dec
dec
int3
fsubrl
and
cld
or
cmpsl
lcall
add
pusha
add
and
mov
cs
mov
pusha
in
mov
nop
sbbl
leave
pop
push
lahf
outsb
outsl
jmp
xchg
ret
cmc
dec
shrl
fbstp
or
xchg
leave
sub
addr16
cmpsb
and
add
jns
xchg
push
jg
cli
push
push
in
adc
icebp
push
adc
dec
mov
in
adc
mov
subb
lds
xor
test
arpl
mov
ss
jge
jae
call
jmp
cld
and
jo
sub
pushl
aaa
dec
xchg
lods
xor
pop
dec
imul
inc
lods
sub
pop
sub
jns
jo
mov
lahf
cmc
sub
xor
test
roll
mov
into
mov
lcall
fists
lcall
inc
bound
jmp
fsubp
mov
adc
je
jo
push
rcrl
aam
rol
insb
xchg
mov
mov
sti
xor
mov
js
xor
lods
pop
and
push
sbb
lea
ret
mov
mov
mov
cmpsb
inc
rcl
pop
cltd
aas
loop
xchg
dec
add
shlb
bound
nop
mov
leave
inc
pop
sub
xorb
sbb
push
jecxz
push
mov
pop
and
aas
xchg
cld
in
and
add
adc
cli
pop
push
xchg
inc
cmp
bound
and
iret
dec
xchg
sbb
lods
daa
mov
push
adc
rclb
push
imul
adc
xlat
enter
push
int3
cmp
fmull
jns
or
mov
pop
add
mov
mov
push
mov
push
aad
mov
stc
int3
cmp
pop
mov
nop
pop
dec
repz
popf
sub
in
scas
mov
je
inc
pop
push
loope
push
push
mov
mov
mov
int3
inc
shrb
mov
pop
lds
repnz
in
jno
xchg
imul
in
pop
adc
aas
rcl
sub
aam
or
push
jmp
inc
inc
sbb
xor
fmuls
adc
mov
and
or
mov
mull
rcrb
cmp
inc
insb
hlt
jno
mov
and
enter
inc
aam
cmp
dec
mov
out
xchg
dec
imul
xchg
cs
xchg
mov
jmp
cmp
lret
xchg
loop
pop
cld
mov
gs
inc
add
int
ficomps
movsl
out
push
lret
mov
in
ds
leave
cltd
addr16
push
pop
add
and
ret
mov
mov
or
in
xor
sbb
repnz
push
mov
cmc
jecxz
sahf
rorb
lret
shlb
mov
add
test
jmp
int
cli
lret
icebp
or
jae
lcall
mov
sti
loope
lret
flds
pushf
int
sbb
cltd
jmp
std
xchg
push
out
pop
and
xchg
jge,pn
lock
mov
cld
std
inc
add
sbb
xor
xor
mov
jmp
test
sahf
cmp
mov
dec
popa
lret
push
stos
pop
popa
shlb
imul
rcll
cmc
bound
mov
mov
mov
xlat
sub
rcrb
mov
int
mov
pop
iret
cld
addb
das
push
cltd
rorl
xlat
test
or
std
fiaddl
xchg
aas
out
inc
xchg
inc
or
add
outsl
scas
clc
iret
pop
push
sahf
stos
mov
or
mulb
ret
add
lds
pop
fcompl
popa
stos
and
inc
pop
cmp
and
add
or
inc
rclw
enter
mov
mov
fdivrs
int3
sub
movsb
or
pop
data16
in
mov
into
mov
imul
mov
cmp
mov
sub
lods
popf
and
cmc
push
cltd
push
jmp
pusha
cmpsb
in
pop
xchg
enter
insb
and
into
cs
dec
mov
movsb
jb
mov
mov
cmp
push
or
iret
cli
mov
mov
push
movsl
lret
fsub
loop
out
xchg
lea
movsl
sarb
sub
rep
mov
popl
out
sub
add
add
divl
push
mov
lcall
and
popf
lock
cmc
push
adc
push
xchg
pop
in
sbb
fdivr
cmp
in
cs
arpl
jecxz
adc
mov
dec
fs
push
push
int
stos
cmp
mov
adcl
clc
or
push
adc
push
xor
addl
push
lret
pushf
sarb
push
lods
mov
les
fdiv
or
ds
or
xor
mov
test
sti
js
push
into
jnp
push
ret
add
lret
pop
pop
int
pop
lods
jne
or
mov
pop
dec
mov
insl
jne
lret
in
add
cmp
pop
xchg
pop
and
jnp
add
and
imul
mov
shr
xchg
mov
inc
inc
and
mov
jns
mov
sbb
jns
or
jecxz
dec
add
pop
mov
lea
xor
mov
dec
lret
lods
lcall
stos
lret
xchg
mov
dec
dec
cli
in
or
arpl
fisubrl
repz
inc
movsb
xchg
fildll
scas
flds
icebp
rclb
jbe
or
cwtl
xchg
lcall
sbb
and
lods
inc
pop
mov
mov
xlat
xchg
test
pop
jbe
out
cmp
scas
jne
xchg
pop
jne
ss
hlt
rclb
repnz
pop
inc
xchg
jnp
out
jns
push
pushf
add
push
sarl
stos
mov
adc
sbb
enter
lcall
or
pop
cwtl
push
gs
mov
inc
insl
jmp
inc
push
sti
lods
dec
pop
in
or
mov
les
fmuls
pop
cmp
cwtl
jecxz
pop
mov
test
add
movb
mov
cs
cmpl
or
mov
mov
data16
xchg
push
inc
cltd
jo
cmpsl
movsl
inc
lret
lods
iret
aam
rolb
adc
or
cmp
xor
rolb
lock
jb
add
jmp
insl
adc
adc
data16
adc
lods
xor
mov
in
repz
aaa
cmc
dec
push
test
mov
xor
cmp
stos
ret
xor
dec
js
lods
jecxz
test
mov
mov
scas
and
or
jl
and
sub
inc
inc
fcompl
jg
cmc
imul
add
or
push
xor
jae
jl
add
jo
push
lret
in
jle
int
push
mov
xchg
jmp
xor
dec
jne
outsl
std
out
rcrl
mov
adc
decb
mov
xchg
dec
or
sbb
out
add
pop
ds
test
enter
mov
jno
lea
push
cli
add
out
mov
dec
xchg
xchg
test
ficomps
lret
adc
adc
cmp
lret
xchg
scas
mov
adc
loopne
xor
mov
shll
mov
mov
rolb
hlt
lods
add
jnp
das
adcb
push
fwait
lcall
jae
fdivr
pusha
pop
dec
lahf
sub
cmpsb
mov
xchg
dec
push
push
add
cmp
dec
adc
and
pop
std
or
push
sti
das
insl
push
cld
enter
sub
mov
jne
pop
test
xchg
jae
mov
cmp
jae
jbe
pop
and
js
sbb
xlat
dec
cmp
out
dec
ja
dec
shl
je
mov
out
loopne
and
lods
je
aad
lret
shl
dec
pusha
dec
or
add
scas
lcall
xlat
and
xor
inc
outsl
mov
adc
ret
mov
aad
pop
out
out
fmuls
cmp
xorb
and
inc
mov
aaa
addr16
sbb
std
cwtl
sbb
pop
mov
out
cmc
movsl
mov
add
mov
dec
popf
roll
ret
loopne
pop
mov
adc
mov
mov
mov
push
push
mov
pop
push
sbb
outsb
sbb
inc
inc
and
fistps
inc
sub
xchg
lods
lret
flds
sub
aad
lds
cmp
pop
clc
mov
sbb
push
in
cmp
sbb
roll
sub
sbb
pop
jmp
test
inc
shl
and
int3
jbe
int
fisttps
int3
sahf
verr
lea
inc
add
sub
fwait
out
bound
outsl
int
js
mov
sahf
in
ret
jecxz,pn
cmpb
data16
pusha
push
jge
pusha
push
adc
in
jecxz
hlt
push
sbb
pop
mov
or
das
inc
inc
cmp
shlb
clc
js
mov
popf
jp
mov
int3
fnstcw
cmp
push
shlb
mov
and
mov
stos
mov
and
or
ret
mov
mov
in
out
rcrb
push
andl
push
and
ds
sub
jecxz
adc
lock
or
xchg
dec
adc
push
inc
or
arpl
mov
xchg
das
cmpsl
inc
jbe
nop
flds
xor
dec
and
jg
out
cld
adc
dec
cmpsl
mov
les
push
adc
jbe
and
add
in
push
sbb
cmp
das
mov
sub
mov
add
call
cmp
adc
ljmp
jmp
mov
push
popf
sub
push
add
fcoml
fnstcw
push
mov
sbb
aaa
or
test
jle
mov
leave
push
int3
cmp
shr
lea
pushl
popf
or
das
adc
cld
inc
adc
imul
rolb
and
pusha
into
lds
movsl
dec
fcoml
test
addb
inc
xchg
push
mov
adc
sti
sti
add
xchg
sbb
cmc
sbb
xchg
aad
cmp
pop
movsl
adc
clc
xchg
shl
and
and
xor
aam
cmc
fmuls
xlat
adc
or
cmpsb
jmp
mov
mov
scas
call
fstl
mov
out
popa
pop
cmpsl
xchg
fistpl
aam
and
sbb
push
mov
stos
mov
test
mov
or
xchg
in
loope
loop
or
fwait
jno
lcall
push
dec
les
inc
mov
jbe
imul
rcr
gs
xchg
out
or
popf
sub
inc
pusha
push
inc
xchg
sub
jp
fiadds
mov
xor
jg
jge
addb
lret
add
test
mov
pop
adc
ss
lods
int
sub
ss
pop
lahf
mov
orl
push
int
and
gs
xchg
adc
jno
push
jne
cmp
lds
jp
test
jle
jae
cld
sbb
push
mov
sbb
mov
cmp
cmp
mov
adc
mov
jp
cmp
lods
or
repz
inc
sub
pop
fisubrl
ljmp
push
test
mov
xlat
inc
jge
bound
push
lret
std
xchg
aam
or
test
mov
inc
xor
xchg
icebp
jnp
test
lds
cli
dec
insb
xchg
push
andb
mov
daa
popa
mov
ret
in
cmp
repnz
dec
in
xor
xor
insl
jecxz
scas
or
xchg
iret
push
xchg
test
mov
and
inc
dec
mov
inc
xor
or
insl
xchg
cmp
push
inc
sub
mov
jbe
inc
test
mov
sub
outsb
cld
inc
scas
and
roll
sti
or
mov
test
push
leave
ja
imulb
cmpsl
mov
dec
push
push
notb
ja
gs
cmp
shl
pusha
pop
jbe
or
push
jl
lahf
lret
aaa
std
adc
call
pushf
push
loop
xor
lcall
fcoml
sub
cmp
add
inc
mov
cmp
mov
and
inc
stos
scas
xchg
adc
cmp
mov
mov
pop
jmp
ljmp
xor
pop
or
dec
jle
sti
jns
inc
mov
jnp
add
fisubl
inc
mov
test
sahf
iret
scas
add
cmp
and
ja
aad
lret
stos
jno
or
in
push
or
lea
jae
addr16
xor
push
sbb
jno
outsb
mov
dec
in
add
jae
push
add
inc
adc
int3
sub
mov
jg
fimull
push
rorb
pop
addr16
sar
fisttps
scas
repz
sbb
in
mov
daa
xor
gs
pop
das
and
inc
add
cwtd
mov
xchg
push
and
or
cmp
push
int3
fs
div
adc
aaa
je
xchg
sub
subb
lods
stos
mov
and
cmpsb
lock
fsubr
mov
add
or
dec
jnp
clc
std
sub
subl
push
or
in
pusha
pop
out
pop
sbb
test
jb
xor
dec
jg
rorl
sbb
aas
scas
or
and
sub
cmp
jmp
pusha
push
popa
lcall
call
in
xchg
cwtl
repnz
call
cmc
adc
nop
aam
push
mov
xor
shrb
xor
pop
aaa
jo
out
sbb
out
out
lds
inc
rcrb
mov
push
pop
pop
lahf
xor
add
lret
xor
int
out
in
repnz
out
xlat
jbe
pop
stos
or
fcmovu
add
jl
jno
dec
addr16
nop
push
out
xor
cmpsl
xlat
sbb
fdiv
pop
jmp
xchg
ss
jnp
loopne
ds
das
fsts
movsl
ret
add
scas
add
jmp
das
mov
sar
or
ja
add
mov
mov
inc
mov
das
jb
or
test
scas
jmp
int3
xchg
icebp
inc
loope
sarb
jg
xor
or
fadds
mov
mov
mov
scas
imul
push
mov
stos
mov
fnstenv
in
out
int
fs
enter
mov
xchg
loop
xor
fisttps
out
or
mov
pop
cli
mov
int
movsb
in
mov
pop
rol
push
sub
xchg
push
mov
loop
repnz
pop
inc
movsl
add
das
jo
in
jle
mov
pop
cs
scas
add
xor
sbb
mov
int3
pop
jno
xor
in
xchg
push
cmc
cmp
stos
cs
or
out
fmull
mov
xor
test
sbb
pop
aaa
nop
shr
xchg
aam
dec
movsb
inc
xchg
aam
fwait
leave
loop
inc
inc
or
and
pop
inc
test
xlat
dec
dec
jb
xor
dec
flds
mov
rorl
push
mov
sbb
adc
push
addr16
jecxz
insl
pop
push
jns
and
in
scas
jnp
idivb
adc
adc
xchg
sbb
bound
pop
shrl
and
inc
mov
push
lock
int
adc
ss
fs
mov
push
fildl
xor
xchg
mov
xor
mov
fcomps
or
aad
mov
gs
cmpsl
ds
cltd
jae
jne
pop
push
iret
jl
sti
test
cmp
clc
orb
sub
inc
repz
and
inc
cwtl
insb
jno
into
arpl
mov
ja
out
iret
popa
push
or
lods
lret
push
leave
popf
ror
push
movsl
cwtl
sub
fimull
ficoml
in
mov
push
inc
fsubs
push
cli
imulb
sbb
scas
sbb
sub
out
inc
fnstcw
inc
sub
jecxz
mov
push
jo
push
push
test
pop
xchg
lods
subb
iret
sbb
adc
pop
cmc
arpl
dec
or
sbb
daa
jecxz
mov
cmc
inc
xchg
push
sub
sbb
addl
sti
inc
in
mov
icebp
divb
sti
cmp
dec
mov
inc
jge
jae
xor
sub
pop
stc
lret
mov
and
in
clc
add
int
cmp
jns
mov
or
nop
scas
jp
cmpsl
daa
inc
leave
push
mov
push
sub
inc
xchg
jne
mov
pop
pop
nop
dec
pop
js
pop
or
roll
xchg
jb
jne
das
and
mov
bound
adc
pop
stos
push
movsb
jo
leave
add
or
pop
hlt
add
loope
and
adc
inc
mov
pop
mov
shll
and
sbb
ljmp
adc
xor
mov
push
add
popf
scas
sub
clc
lret
dec
movb
movsl
sbb
fbstp
sbb
xchg
lahf
xor
mov
mov
mov
mov
leave
testl
nop
pop
dec
jb
dec
stos
js
lock
xchg
xchg
je
int3
loopne
test
push
add
aam
aaa
cmpsb
popa
adc
and
mov
out
rcll
cli
push
outsb
cmp
xchg
jle
mov
mov
adc
cmpsb
sub
push
mov
pop
lret
sti
pop
add
ss
sbb
loopne
aaa
mov
push
clc
cmp
jo
and
mov
and
mov
xor
shll
cmc
mov
stos
mov
push
outsb
fmulp
rcll
punpckhbw
leave
stos
in
sub
and
out
adc
mov
xchg
lods
sbb
jecxz
imul
dec
adc
sub
sbb
lret
jge
outsb
cltd
aad
daa
sbb
aam
sub
lock
cmpl
scas
je
jbe
push
mov
mov
pop
add
mov
push
jecxz
mov
push
rcll
adc
fs
pop
push
xor
je
jb
pop
insb
and
jp
adc
clc
jne
xchg
xchg
mov
adc
popa
movsl
dec
ret
adc
iret
cmp
and
mov
mov
out
stos
icebp
mov
enter
cmpsl
cwtl
jle
inc
inc
cmp
xor
xor
push
call
adc
arpl
xor
les
pop
pop
scas
cmp
cmp
dec
cmp
inc
xchg
jnp
mov
mov
lea
push
addb
push
jge
dec
push
mov
push
sbb
stos
in
cmp
popa
outsl
scas
push
inc
adc
cmc
movsb
mov
adc
ljmp
push
pop
andl
dec
dec
dec
cmp
loopne
arpl
pop
mov
clc
mov
stos
jp
imul
xchg
fisttpll
cmp
repz
in
sub
out
and
pop
mov
cmp
loop
xchg
sti
cs
sbb
testl
xor
sbb
add
sbb
mov
loopne
data16
mov
jnp
adc
xchg
stos
fnstsw
into
jb
xchg
push
addr16
popf
ret
dec
mov
xchg
jg
subl
ss
in
or
outsl
xor
orb
test
cmp
insl
cmovo
stos
imul
loop
lret
in
jae
add
roll
push
sub
or
cmpsb
mov
fs
fistps
pusha
aad
jbe
dec
sahf
xor
icebp
popf
cltd
push
xchg
adcl
out
adc
cmp
out
push
sti
cltd
pop
testb
mov
jg
repnz
push
fidivrs
jg
add
xlat
cmp
cmp
pusha
mov
add
sbb
add
subl
cmpb
divl
ss
mov
test
cmp
add
and
icebp
dec
inc
insl
push
fwait
jns
xor
xor
insl
les
test
lods
cld
lcall
mov
mov
push
outsb
nop
and
lds
aad
or
sbb
and
in
js
movsb
xor
pushf
lret
adc
lret
sub
pop
mov
out
xchg
insl
jae
mov
icebp
pop
or
xchg
mov
into
mov
in
dec
or
inc
js
test
imul
insl
imul
cmp
pop
jl
jle
xor
pop
js
dec
repnz
movsl
sub
cmp
push
mov
pop
lcall
mov
sub
gs
inc
or
cld
sub
stc
leave
sbb
dec
je
jb
or
add
mov
sbb
aas
xchg
loope
inc
dec
test
popa
popa
or
xor
cltd
push
test
mov
pusha
popf
lods
add
out
dec
mov
mov
hlt
jecxz
dec
insb
movhps
push
and
ljmp
jmp
sbb
pop
test
sahf
mov
sub
imul
mov
jmp
into
push
mov
fldcw
fstpl
jae
push
int3
sbb
data16
mov
mov
insb
dec
pop
cmp
cmpb
jle
mov
fs
les
hlt
bound
inc
add
pop
js
inc
jecxz
xchg
scas
pop
aad
sbb
xor
push
pop
dec
adc
dec
je
xor
or
sbb
into
add
cwtl
shll
int
scas
dec
xorl
and
imul
int
push
and
data16
push
das
sbb
pop
into
sub
push
push
dec
inc
mov
mov
jecxz
jb
movsl
arpl
xchg
imul
jnp
ds
and
out
out
adc
jl
ficompl
insb
inc
loop
divb
xchg
dec
and
sbb
mov
xor
dec
pushf
fcom
push
push
jmp
and
mov
push
in
pushf
jo
cld
sub
fs
xor
push
into
inc
mov
in
jns
stc
mov
xlat
adc
sbb
repnz
lret
inc
rcl
and
clc
bound
es
iret
mov
popa
pop
and
popa
stos
aas
dec
push
sub
xchg
pop
push
je
fs
pop
mov
int3
inc
outsb
cmp
sub
gs
lock
add
add
mov
and
mov
call
cltd
mov
out
or
fdivl
hlt
pop
sub
fcomi
jnp
insb
inc
push
adc
fdivs
add
or
js
es
hlt
cmpsb
aad
lret
sub
out
mov
add
nop
inc
xchg
xchg
iret
popa
add
push
and
or
mov
inc
imul
jp
or
shl
inc
cmp
lea
inc
push
mov
jg
pop
repz
mov
sub
lods
popf
adcb
pop
push
cwtl
inc
enter
lahf
lret
rcr
push
jmp
sub
pop
xchg
lea
cmpsb
jne
push
adc
ljmp
or
out
sbb
fsubrs
cmpsb
roll
sub
mov
mov
ds
leave
or
das
mov
sahf
cli
decl
es
pop
xchg
lock
das
stc
repnz
dec
mov
rcll
adc
and
xchg
fidivs
push
mov
xor
jbe
ror
outsb
loopne
mov
adc
xchg
sub
cmc
data16
jle
mov
cwtl
scas
mov
and
sbb
jg
aam
adc
loope
and
jp
cmp
mov
repz
nop
push
push
mov
addr16
push
cwtl
movsb
cmp
sbb
cmp
lret
jecxz
push
dec
jns
dec
subl
sub
ret
xchg
fs
mov
mov
lea
fstp
sub
dec
shr
sub
sub
push
test
into
cwtl
scas
mov
jle
icebp
push
cmp
mov
sub
xchg
cmp
imull
jae
cmpsb
or
ret
adc
lods
cwtl
aad
jns
and
push
sub
pop
or
inc
fwait
mov
mov
js
ret
inc
shl
pop
sub
push
or
clc
dec
and
mov
lret
fmul
js
mov
orb
dec
dec
scas
sbbl
sbb
arpl
xchg
idivl
clc
sbb
xchg
lods
ja
jne
push
cmpsb
and
stos
bound
lods
or
adc
stc
shrb
fiadds
scas
ljmp
add
push
xlat
jmp
xor
out
repnz
sub
xchg
je
cltd
rcrl
push
daa
sbb
jecxz
jecxz
pop
xchg
cltd
out
jns
add
pop
adc
aaa
push
adc
sbb
inc
sbb
pop
cmp
inc
add
ret
scas
add
in
jg
push
jmp
pop
dec
mov
insb
and
and
and
cltd
push
sub
xchg
sbb
sbbb
and
mov
pop
xchg
repnz
push
pusha
insl
out
dec
and
xchg
inc
push
into
dec
rcrb
pop
lahf
jmp
xor
sbb
fldcw
pop
aas
inc
aam
or
xchg
inc
pushf
adc
adc
or
aam
insl
xchg
sbb
call
in
jmp
jo
call
mov
lahf
xchg
mov
lds
or
mov
stos
cmpsb
or
and
sbb
push
jge
mov
fwait
jo
bound
jl
mov
dec
pop
lods
xchg
push
lret
inc
lcall
sbb
jg
gs
insb
repnz
mov
push
push
pop
or
sub
lods
repnz
movsl
loopne
mov
add
popf
fcomp
outsb
ret
loop
out
mov
js
mov
int
push
and
fldcw
outsl
cmpsl
push
loop
sbb
fistpll
and
mov
mov
loop
mov
sub
xchg
sbb
xchg
jmp
push
movsb
xchg
test
out
aad
sub
fdivs
insb
pop
add
fsubr
mov
jge
bound
cmp
jecxz
scas
pusha
xchg
addl
push
xlat
es
push
mov
jns
xor
pop
imul
jl
add
scas
push
or
aad
pop
and
lcall
mov
je
xchg
int
test
mov
xor
inc
sbb
scas
push
mov
xor
sahf
inc
push
bound
jne
fwait
xchg
aas
cmc
xor
or
repnz
dec
jno
addr16
jns
mov
pop
ja
es
roll
cmpsb
arpl
lahf
mov
fnstcw
adc
adc
pushf
xchg
stos
out
insl
lret
jno
sbb
js
fisttpl
repnz
add
and
or
arpl
fists
jo
mov
cltd
jmp
sti
pop
stc
stc
sbb
push
jl
mov
rol
negb
in
jl
inc
cmpsb
ljmp
aam
scas
jmp
rclb
sub
popa
mov
rclb
mov
mov
xor
xchg
orb
notb
fcmovnb
out
ffree
aaa
repnz
xchg
andl
les
inc
xchg
or
xchg
and
or
xor
lods
jle
in
lock
sbb
cli
out
or
pop
dec
or
hlt
or
scas
aas
in
addr16
add
aas
test
lret
fwait
dec
sbb
jge
pushf
lret
mov
call
or
xlat
mov
sbb
adc
rcl
ljmp
push
mov
out
pop
test
lahf
push
dec
push
mov
push
jnp
mov
xchg
push
sarb
mov
pop
faddp
lea
fwait
test
pop
js
leave
cmp
repz
xchg
mov
mov
mov
in
test
lds
inc
mov
hlt
or
roll
push
push
loop
mov
and
cld
shll
add
fs
adc
xchg
gs
dec
out
inc
shr
add
sbb
sbb
cmpsb
push
cltd
mov
push
xchg
mov
inc
iret
mov
jmp
rcr
lods
cmp
push
or
push
mov
sbb
jmp
sbb
insb
bound
push
mov
pause
or
rcl
or
pop
add
js
mov
cltd
inc
pop
aam
mov
push
ja
popf
subb
push
adc
pop
pop
sbb
gs
test
jb
lretw
orb
xlat
xor
inc
adc
fwait
pop
cmp
repz
pop
push
inc
xchg
xlat
gs
jle
xor
pusha
test
int
dec
cmp
mov
fdivrl
mov
jg
sbb
dec
ret
xlat
or
cmp
outsl
aam
test
jmp
fcmove
movsl
orl
add
adc
mov
divb
es
sbb
pop
sbb
cli
xlat
pop
lret
sbb
ja
fdivl
cmp
andb
mov
xor
ja
test
jl
xor
mov
pop
mul
iret
adc
mov
sbb
mov
lret
clc
test
dec
pusha
mov
in
int
sub
pusha
aam
push
add
push
xchg
dec
fsubrs
ljmp
xor
ja
iret
andb
outsl
jmp
dec
inc
jp
into
xorb
cmp
ficoms
fcompl
mov
pop
nop
addl
pushf
fistpl
jg
pop
inc
xor
mov
xchg
cwtl
or
shlb
out
mov
in
mov
cltd
push
leave
ds
push
mov
rorb
sub
cmp
jmp
push
pop
pop
sub
mov
push
mov
xchg
jge
and
std
sar
or
divl
and
sti
push
repz
push
mov
mov
in
daa
sbb
shlb
mov
or
loope
dec
add
lret
fildll
mov
pop
call
xchg
jb
or
insl
push
iret
test
cmp
in
or
mov
sbb
inc
ret
rcl
push
hlt
xor
and
xlat
adc
xorb
imul
repz
push
fs
mov
scas
or
jae
xchg
xorb
add
cmpsl
ss
xor
and
fnstcw
add
cld
popa
adc
gs
movsl
stos
push
sahf
rolb
incl
leave
sti
push
stc
fists
roll
jmp
push
jge
gs
sub
adc
jl
popf
inc
jmp
imul
xchg
add
dec
mov
xor
push
and
ret
ds
jmp
cld
outsl
inc
cmp
iret
sub
decl
es
mov
push
imul
pushf
xchg
xlat
xor
mov
ljmp
test
es
sub
mov
mov
pop
dec
mov
imul
push
int
mov
push
or
daa
cmp
in
rclb
pop
cmp
fsub
mov
push
pusha
ss
pop
pop
bound
mov
sub
dec
test
xlat
repnz
or
call
cmc
xor
outsb
mov
xchg
fwait
int
repz
movsl
jno
mov
leave
xchg
rcll
fists
mov
test
jp
cmpsl
xchg
cmpsb
fistpl
std
push
fwait
pop
mov
adcl
jo
and
std
and
in
sub
adc
imul
popf
push
adc
js
adc
cmp
nop
mov
fisubrl
cmc
sbb
testb
outsb
add
mov
jmp
mov
inc
mov
lcall
dec
push
mov
xchg
fs
cltd
inc
icebp
sbb
jb
out
data16
mov
cmp
push
cli
xlat
add
vunpckhps
fisttpll
repnz
or
xlat
jmp
mov
sub
mov
mov
pop
in
das
dec
pop
mov
or
test
xor
popf
fistpl
cmp
sub
push
push
dec
push
stos
data16
push
ret
dec
sahf
mov
jne
les
dec
shll
pop
cmpb
mov
lret
in
lods
scas
insl
ficompl
xor
fsts
scas
stos
cmp
imul
ljmp
push
mov
pop
xor
fcom
fimuls
ja
mov
loopne
sbb
icebp
sbb
jb
leave
adc
out
mov
inc
ficoml
xchg
cli
pop
inc
or
add
sbb
or
leave
cmp
jno
rclb
jg
mov
lea
or
out
clc
jmp
push
mov
out
and
push
shr
stc
mov
gs
call
push
jo
into
test
dec
pop
cmp
lahf
int3
cmpsb
in
mov
jbe
loop
mov
es
int
mov
jne
push
and
mov
cmp
xchg
inc
mov
movsb
mov
cmp
mov
cmp
aam
dec
push
ficoms
stos
lcall
xchg
mov
psllw
jo
daa
xor
shrb
cwtl
dec
cmp
adc
and
sub
push
shrb
push
loope
cld
push
jmp
repnz
pushf
xchg
ffree
fs
dec
jbe
adc
xchg
rcll
loop
addr16
pop
push
nop
push
mov
loope
push
test
pop
cltd
dec
pushl
repz
pusha
pusha
movsb
push
lods
fwait
pop
dec
in
sub
jle
inc
outsb
dec
gs
inc
lret
into
jo
hlt
sbb
fistpl
xchg
push
and
icebp
xor
mov
adc
mov
push
xlat
mov
decb
in
mov
jmp
or
aas
mov
mov
mov
testl
push
mov
repnz
push
faddl
sbb
mov
xchg
xor
aas
ja
mov
mov
pop
shrl
sbb
repnz
test
movsb
jbe
adc
cmp
rcl
cmp
repz
or
test
xchg
xchg
push
stc
mov
in
sar
xor
shl
xchg
mov
mov
mov
and
push
fsts
add
fsubp
adc
js
pop
push
dec
js
shr
xchg
lods
movsb
fistl
add
mov
mov
jbe
cmp
out
sbb
jge
outsl
loope
repz
sub
push
jg
jne
mov
mov
add
add
sbb
inc
mov
lret
pop
outsb
pusha
test
lock
cmp
popf
stc
mov
scas
aaa
push
test
aas
mov
imul
aaa
aaa
cmp
xchg
add
fcmovbe
sbb
pop
and
hlt
lret
xchg
in
shll
test
in
andl
sbb
ja
push
loopne
jb
stos
lds
push
iret
adc
xor
pop
jne
mov
in
adc
cmp
or
add
inc
js
push
cwtl
and
push
mov
pop
xor
nop
xchg
in
cmp
sub
jns
enter
imul
jge
sbb
call
idivb
sbb
fisubrs
cli
aas
push
lods
repnz
cmpsl
test
cmp
fisttps
loope
push
jg
xor
rorb
mov
roll
cmp
fidivrl
jp
dec
fwait
sub
jbe
jp
mov
cmp
jge
or
stc
int3
test
pop
cmpsb
push
adc
rorl
mov
pushf
push
and
xor
fwait
mov
in
fld
lret
xor
lret
xor
xchg
and
xor
dec
or
adc
cmc
ret
push
jg
lahf
test
mov
or
movsl
sbb
in
inc
cmp
push
mov
imul
loopne
das
das
daa
ss
add
and
mov
lret
sbb
in
xchg
int
mov
in
push
test
ficoms
ret
pop
sar
mov
xor
xchg
dec
cmpsl
dec
aam
aaa
push
aam
ret
loopne
push
pop
push
add
jmp
xchg
jp
out
sbb
push
mov
pop
cmpsb
xchg
pusha
pop
cli
gs
xor
push
mov
xlat
outsl
jnp
cld
pop
loope
inc
popf
es
pop
mov
call
subl
imul
mov
addr16
mov
sbb
pushf
mov
orl
fstpl
cmpb
scas
call
outsb
inc
fst
adc
xchg
and
xchg
xchg
pop
es
negb
ror
stos
les
xchg
mov
xchg
je
sub
pop
ret
mov
fcmovnu
test
xchg
in
jg
xchg
push
cld
stos
inc
mov
lret
es
mov
pop
or
pusha
add
adcl
or
repz
rcrl
imul
inc
in
pop
add
aaa
aad
mov
aad
add
fidivrs
push
dec
sti
leave
ljmp
add
pushf
adc
and
cs
pushf
in
push
popf
sbb
xor
pushf
ja
shr
push
and
and
adc
mov
fisubrs
cli
into
cltd
push
hlt
sahf
xchg
inc
xor
adc
ljmp
repz
fs
mov
es
stos
mov
add
sbb
data16
out
test
jecxz
mov
fucom
lods
xchg
adc
into
xchg
pop
fstpl
jne
xor
sbb
negl
imul
mov
pop
xor
and
mov
xlat
mov
pop
sub
aas
dec
push
cmpsb
dec
inc
test
push
or
pop
addr16
jp
pop
imul
addr16
push
mov
mov
mov
mov
gs
fwait
xchg
fimuls
xchg
repnz
sbb
stc
push
jecxz
push
idiv
test
add
cmp
mov
arpl
xor
dec
std
pop
xchg
sub
fsts
push
or
pop
mov
leave
test
test
xor
ficoms
das
and
lahf
das
jae
cmp
or
push
scas
push
push
pop
xor
push
cli
pop
mov
mov
arpl
pop
push
pop
cwtl
outsb
and
adcl
add
ret
icebp
xchg
mov
cmp
pop
outsb
pushf
rolb
xor
ret
dec
lahf
jns
pop
addl
iret
mov
push
out
stos
cmpsb
sub
orb
imulb
push
rclb
mov
adc
loop
fptan
popa
hlt
ljmp
insb
pop
push
sub
pop
dec
in
add
pop
loopne
pop
outsb
xchg
sbb
rcl
or
or
rcl
aam
andl
lods
hlt
or
addr16
cmpsl
je
adc
mov
arpl
jnp
bound
test
push
adc
push
mov
gs
fisttpll
fistl
sbb
out
sub
inc
mov
daa
notb
in
pop
xchg
jo
add
fcomp
rcr
dec
or
sbb
mov
push
or
dec
push
lcall
cmp
and
sti
popa
stos
call
test
xor
into
jo
inc
rcl
xchg
and
xlat
adc
pop
icebp
into
sub
movsb
in
push
popf
xabort
pop
imul
call
cmp
inc
ljmp
xor
xchg
mov
into
rcrb
mov
adc
les
fadd
lret
mov
mov
sbb
jae
inc
adcb
xchg
pusha
sub
mov
adc
lock
bnd
jo
in
pop
or
add
jge
bound
cwtl
mov
pop
mov
jg
dec
push
mov
mov
nop
push
pusha
les
in
popf
neg
cmp
lahf
mov
hlt
scas
js
add
or
pop
cmp
ret
int
xchg
or
xchg
pop
lock
inc
push
inc
adc
jmp
cmp
push
ds
add
and
jae
xchg
push
shrl
or
les
aas
out
gs
dec
out
mov
leave
lds
push
pop
cmp
cs
jno
mov
sbb
popf
dec
inc
inc
shrb
lahf
or
or
add
jno
xchg
mov
shll
cwtl
sti
imul
das
in
mov
je
adc
xchg
jmp
shlb
pop
aad
rdpmc
cmp
jle
sub
test
test
mov
inc
int
fwait
lahf
cmp
nop
es
sbb
out
iret
cmp
dec
xchg
test
pop
mov
jge
bound
divb
movsb
fbld
lds
add
adc
xchg
xor
aam
inc
add
push
fwait
or
dec
adcl
je
sbb
push
xchg
cmpsb
add
jne
das
push
sbb
mov
push
les
nop
iret
pushf
or
pop
fnstcw
inc
sbb
in
testl
cmpsl
xchg
loop
xor
and
and
aaa
lahf
lea
loopne
adc
ja
iret
ret
insl
push
add
in
data16
in
addl
and
je
dec
or
dec
js
xchg
push
repz
mov
inc
cld
xchg
add
fildll
adc
mov
lods
lcall
int
push
fistl
je
test
push
jecxz
adc
xchg
repnz
je
data16
jle
pop
out
adc
clc
sub
or
sub
or
enter
mov
jg,pt
cltd
movsb
jne
movsb
or
pop
ja
pextrw
mov
into
imul
adc
sbb
inc
addl
adc
out
inc
daa
xchg
mov
insl
jns
scas
mov
or
popa
sub
mov
or
jmp
loopne
int
add
add
mov
xor
sub
sbb
jns
cs
push
pop
inc
jnp
sbb
xor
std
sbb
dec
jg
stc
sbb
jbe
inc
push
or
lock
and
pop
jmp
subps
inc
ja
pop
mov
in
xchg
pop
add
lock
test
arpl
stc
nop
jns
xor
loop
repz
scas
add
mov
loop
mov
cmp
nop
rolb
xchg
push
lret
jae
push
das
or
mov
popf
test
gs
xlat
or
sub
je
imul
push
fsubrp
loop
cltd
ffree
sbb
push
subb
cmp
push
scas
imul
jg
icebp
loope
add
sbb
aad
outsl
mov
or
pop
adc
jle
test
push
test
add
fs
imul
inc
mov
push
mov
mov
fwait
sahf
ja
add
pop
xor
cmp
mov
faddp
push
and
pop
mov
inc
xchg
jmp
cmp
mov
xchg
gs
mov
das
insl
sarl
scas
jge
insb
stos
dec
popa
push
repnz
xor
jb
cmp
sub
pop
or
push
test
pop
pop
lods
or
sbb
jg
mov
pop
dec
or
pop
jp
ret
cltd
mov
sahf
add
sbb
decl
cmc
mov
add
xor
or
addr16
push
push
pop
pop
fcoms
leave
pop
in
and
andl
lods
dec
test
jmp
dec
leave
adc
data16
sahf
scas
inc
jmp
cmp
int
repz
cmpsl
jl
fiaddl
fcoml
sbb
js
enter
in
inc
xor
mov
mov
daa
addr16
and
sbb
sbb
pop
and
pop
rcll
pop
inc
jecxz
xor
in
outsl
pop
adc
mov
andl
push
out
stc
or
xlat
mov
push
xchg
stos
jbe
inc
jns
lock
test
sub
dec
mov
add
dec
mov
leave
sahf
fldl
pop
loope
jno
jae
push
sub
std
shll
data16
sub
les
jecxz
sbbb
sub
and
sbb
mov
mov
sbb
jne
rolb
jbe
lcall
mov
shrl
dec
lea
mov
jae
loope
sub
mov
and
dec
sub
mov
bound
out
add
fs
xor
push
push
enter
movsl
dec
in
sbb
mov
jnp
sub
enter
hlt
mov
jbe
xchg
decl
sahf
fwait
loope
jbe
mov
nop
sahf
cmpl
cli
jl
mov
xchg
mov
pop
push
inc
adc
adc
jnp
mov
gs
jg
stos
jb
pop
lds
jne
mov
jge
nop
iret
negb
mov
jbe
and
int3
mov
ljmp
div
sbb
push
loope
sbb
inc
notl
cld
or
scas
adc
pop
cs
sub
adc
into
jecxz
in
push
jmp
andl
mov
lret
mov
jg
out
dec
adcb
add
addb
or
and
call
dec
mov
mov
lds
outsb
sub
fisttpl
jns
xchg
adc
lahf
mov
lods
mov
dec
adc
add
cltd
xor
fs
test
dec
xchg
mov
and
jne
rolb
mov
lock
cmp
jns
ror
sbb
inc
fwait
push
imul
jns
mov
pusha
pushf
add
inc
or
stc
adcl
sti
les
add
push
jnp
je
push
sub
pop
and
test
adc
test
cli
jb
jmp
pop
in
outsl
std
movsb
mov
xorb
or
mov
mov
adc
and
movsl
dec
mov
push
cmp
shr
xor
movb
xchg
out
xchg
adc
push
dec
int
adc
pop
test
push
clc
in
das
mov
aas
xchg
jecxz
or
leave
icebp
aaa
testb
lahf
loop
cmp
aaa
loop
mov
lods
test
add
sbb
push
sbb
xchg
stc
insl
addr16
xor
loopne
rcr
movsb
imul
repnz
inc
stos
xor
pop
jno
bound
xor
mov
std
pusha
nop
push
dec
orw
movsl
push
enter
lock
sbb
and
shlb
shrl
mov
cmp
mov
xorl
fwait
xchg
stos
in
jp
aam
and
xchg
ja
ljmp
ficoml
mov
aaa
xchg
pop
jl
scas
arpl
mov
out
or
je
sub
icebp
mul
cwtl
imul
arpl
dec
insl
mov
inc
cmp
rclb
mov
push
insb
in
jl
cmpsl
mov
adc
jae
cli
int
enter
pop
jle
ficomps
dec
fmuls
call
jno
data16
out
adc
jbe
dec
sbb
sub
dec
imul
ja
aam
xchg
pop
shr
js
shl
or
inc
insl
in
test
nop
push
jo
js
push
test
mov
out
insb
loopne
add
adc
pop
add
out
lock
xlat
xor
icebp
push
jbe
mov
cmp
push
lods
sar
test
sbb
cmp
fs
cmp
test
mov
inc
adc
imul
pop
lcall
push
imul
or
xchg
enter
mov
sub
sti
dec
push
cwtl
jno
add
std
cld
scas
push
int3
icebp
mov
outsb
mov
add
sbb
dec
xchg
adc
scas
das
loop
push
adc
jae
mov
adc
leave
rorl
add
pusha
movsb
in
add
outsb
cmp
mov
les
in
out
jle
stos
je
push
and
or
sub
xchg
xlat
divl
pslld
mov
jns
testl
orb
test
and
xor
loopne
loop
movsb
xchg
jp
cld
out
inc
lret
rol
add
mov
test
push
orb
imul
mov
movsl
or
ds
das
push
pop
jo
scas
subb
cld
lods
mov
call
fdivrp
lahf
les
cmp
jb
ljmp
into
pop
push
loope
cltd
jl
cmpsl
xor
leave
or
mov
pop
adc
cs
mov
xorl
mov
xchg
outsb
mov
or
in
fs
push
dec
divb
icebp
inc
push
leave
test
lods
push
call
push
or
adc
repz
aad
cmp
icebp
and
dec
jnp
movl
ja
fimull
pop
ja
sub
lret
dec
mov
xchg
dec
push
sbb
in
ljmp
pop
jo
jle
push
pusha
int
mov
jg
scas
jbe
lods
scas
out
dec
dec
xor
test
xchg
mov
call
or
sti
lahf
mov
jp
jl
shll
or
call
pop
dec
lea
or
cmc
cmpl
mov
sti
dec
orb
movsb
lods
jno
mov
or
fisubl
ljmp
mov
inc
xchg
inc
xchg
in
push
mov
and
push
mov
sahf
mov
mull
jnp
movsb
outsb
and
dec
fnsave
movsb
fsubrp
clc
fnstcw
push
inc
notb
psubsw
sub
ds
cmc
push
idivl
or
jmp
adcb
dec
insl
cli
xchg
and
scas
fmull
icebp
out
xor
jg
in
pop
clc
or
xor
in
ret
xchg
adc
cmp
push
mov
out
aas
jl
and
test
push
jg
lds
mov
popf
stos
sub
cwtl
ret
inc
push
xor
mov
mov
lea
aaa
test
ficoms
cltd
movsl
mul
or
ss
inc
mov
push
mov
lea
push
ret
push
mov
dec
xor
fdivr
out
sub
repnz
xor
rcrl
popa
adc
rclb
xchg
dec
into
movhps
cmpsb
mov
xchg
push
pop
cld
mov
out
jne
mov
mov
xchg
pushf
mov
jecxz
decb
subl
pop
bt
or
inc
mov
fisubs
rclb
cwtl
adc
jo
mov
rolb
ja
jns
call
sub
ficoml
pop
mov
xchg
pop
pop
mov
cmpsl
test
ret
add
lds
cmp
jp
jbe,pt
cmp
mov
lea
and
mov
pmullw
emms
hlt
enter
movsb
fcoms
pop
mov
arpl
pop
leave
pop
test
lahf
dec
lods
dec
out
ret
lcall
insb
and
jbe
fbld
pushf
mov
cmp
jo
insl
or
lock
ljmp
insl
mov
mov
mov
push
enter
fcmovnb
scas
xchg
imul
xor
and
shlb
adc
adc
mov
pop
sbb
mov
popa
jne
inc
dec
pushf
push
and
cmpsb
jns
imul
push
and
push
out
test
loopne
xchg
aas
mov
lods
fs
ja
xor
stos
jge
and
js
mov
xchg
jbe
pop
dec
into
mov
add
out
sbb
aas
popf
ja
pop
lret
lock
mulb
jo
pop
jae
popf
xor
adc
sbb
xor
sbb
scas
jecxz
cmp
dec
mov
pop
fcmovne
sbb
inc
adc
enter
ret
repnz
sbb
jae
out
dec
inc
sub
ret
sub
movsb
fcompl
sbb
addl
std
cltd
iret
fsubl
pushf
or
add
push
fsubl
loopne
out
lods
ror
in
pop
dec
mov
mov
out
xchg
cmpsb
fists
adc
loop
out
fs
pop
cmc
mov
lea
js,pn
in
mov
sbb
fstpl
rcll
sub
push
mov
jmp
and
dec
stos
pop
outsb
push
push
repz
imul
cmp
imul
out
inc
aaa
js
sahf
inc
push
jl
sbb
add
stos
pop
add
and
subl
or
lds
jl
gs
push
icebp
mov
adc
cld
inc
dec
mov
jmp
and
mov
dec
xlat
mov
retw
cwtl
xchg
mov
sbb
inc
popa
loop
adc
fcmovnb
and
mov
clc
repnz
fildll
in
inc
out
jnp
dec
pop
rcr
ljmp
pop
dec
push
sbb
push
cmpb
sbb
decl
xchg
mov
add
shlb
in
push
xchg
add
lahf
aad
sub
mov
fwait
push
or
and
pop
mov
inc
sbb
push
pop
cmpb
sub
mov
mov
add
push
xor
ljmp
lahf
push
pop
jb
into
hlt
cli
pop
dec
adc
aaa
je
loop
jg
xchg
sbb
xchg
jns
mov
std
movsl
sbb
insb
lds
cmp
jle
inc
push
or
and
fdivrl
bound
int3
cmpsl
in
call
cmp
stos
lcall
jbe
lahf
mov
jl
sbb
aaa
inc
jae
inc
push
test
dec
push
inc
fisttps
jp
and
or
sub
mov
lods
mov
stc
movsb
xchg
fcmove
dec
pushf
iret
lret
add
test
sbbl
pop
sub
int
mov
ret
pop
ror
mov
or
pop
stos
mov
fs
dec
dec
inc
jge
in
cs
fcompl
or
xchg
xorl
stos
mov
add
je
jno
stos
jg
arpl
loopne
iret
pusha
rclb
in
inc
mov
cmpsb
aad
add
daa
sub
hlt
out
cwtl
fcmovbe
xchg
shlb
lods
mov
aas
or
mov
xchg
pop
lahf
movsl
test
lods
add
fidivrs
lahf
js
mov
test
icebp
jne
pop
shrl
sub
xchg
or
or
adc
scas
xor
xchg
les
decl
call
data16
cmp
mov
sbb
mov
fs
out
mov
ret
or
imul
jge
aam
sbb
lahf
jne
mulb
cmp
popf
dec
stos
mov
mov
push
dec
fstps
sahf
or
add
or
dec
mov
or
cltd
nop
test
loope
cmp
movsl
push
test
inc
imull
xchg
xchg
stos
jae
inc
subl
xchg
imull
add
jle
mov
inc
rcll
mov
and
xchg
cmpb
nop
push
or
lea
push
xorl
and
pop
add
xchg
push
fcoms
adc
mov
addb
jne
add
fwait
xchg
jmp
rorb
stos
sbb
mov
mov
jecxz
insb
xor
sub
ja
push
add
or
jle
stos
push
xchg
daa
pop
lods
dec
daa
das
shrb
rolb
sbb
popf
mov
lock
mov
daa
mov
jb
push
xchg
hlt
xchg
or
sub
and
inc
xor
xchg
cltd
repnz
ret
aad
add
pop
xchg
xor
mov
insl
shlb
dec
iret
xchg
movsb
xor
mov
xchg
jp
push
inc
loope
loop
inc
popf
mov
cmpsl
test
push
push
cmpsl
mov
rorb
xchg
and
outsl
pusha
cmp
scas
jns
xor
sub
cmp
mov
xchg
cmc
fsts
push
movsb
popa
sbb
mov
out
shl
mov
sahf
and
lret
out
adcl
icebp
lret
mov
mov
jae
sub
pusha
pusha
gs
mov
call
xor
fwait
mov
popf
lds
filds
outsl
mov
jne
mov
popf
mov
mov
iret
mov
mov
adc
insb
sbb
push
push
or
xor
gs
lds
dec
push
lods
std
sarb
push
es
jp
inc
inc
fsubp
enter
lods
cmpsl
cmc
or
mov
jmp
arpl
inc
cltd
sarb
mov
aaa
repz
jmp
adc
daa
mov
xchg
adc
cmp
mov
pop
in
xchg
out
push
je
aaa
enter
stos
lock
dec
mov
inc
and
lret
or
inc
cmp
adc
cmpsl
stos
or
repz
pop
push
fisttpll
sbb
imul
and
addr16
aad
xchg
scas
dec
lahf
pop
cmpl
dec
lods
subb
dec
cmp
jecxz
inc
bnd
push
mov
xchg
adc
arpl
push
add
stos
push
xchg
jae
and
push
mov
mov
or
mov
out
es
and
fisttpll
mov
pop
loop
mov
lcall
cmp
data16
mov
adc
add
popa
xchg
jb
push
pop
xchg
call
imul
xchg
jo
push
pop
andb
fisubrs
hlt
pop
pusha
test
test
cmp
test
aaa
xchg
clc
scas
xorl
movsb
movsl
sub
dec
and
outsb
orb
and
or
pop
cwtl
scas
lods
fistps
bt
mov
cmpsb
in
pop
pop
cmp
cmp
clc
add
shrb
or
jns
lods
adc
jno
push
and
push
addb
sub
jnp
and
rcrb
dec
mov
cwtl
sub
call
in
add
cmp
push
popf
xchg
test
in
cmp
push
push
and
jo
and
pop
out
sbb
adc
dec
mov
ret
mov
mov
js
xchg
inc
jle
stos
rorl
insl
aam
jecxz
ss
into
sbb
loope
dec
jne
push
ja
or
hlt
jmp
icebp
xchg
ljmp
aaa
sbb
js
xchg
adc
jecxz
or
jmp
loope
add
pop
xor
scas
repz
inc
adc
mov
pop
sub
inc
cmp
push
xchg
dec
and
or
cmpl
dec
insb
sbb
adc
pop
outsb
cmc
insl
pop
arpl
pop
leave
sub
pop
inc
js
dec
gs
je
xorl
jno
repz
mov
mov
jae
and
push
bound
sbb
mov
jmp
test
xor
aam
adc
jne
repz
fnstcw
or
jl
ja
mov
sub
sub
das
lods
xchg
iret
jo
cmpsb
insb
cmp
xor
stos
pop
pop
push
test
mov
testb
xchg
nop
and
pop
jp
imul
js
pop
pusha
data16
idivb
pop
les
push
mov
cwtl
jmp
lret
xor
mov
iret
cltd
xlat
push
ret
sbb
mov
sbb
dec
or
and
mov
pop
pop
push
add
xor
or
cltd
fs
adc
loop
mov
pop
dec
inc
pop
mov
mov
adc
inc
fwait
cmp
stos
add
lock
outsl
and
orl
sub
push
aaa
or
mov
cmp
xor
mov
fsubs
scas
lods
jg
aaa
sub
inc
sbb
lds
jo
sub
push
scas
frstor
test
cmp
test
jno
or
in
jnp
jne
scas
in
xchg
cmpsb
scas
aaa
sahf
int3
jle
fwait
xorb
push
mov
cltd
sti
mov
jae
lret
clc
aad
add
movsl
and
adc
js
push
and
ljmp
push
stos
std
test
xor
cli
mov
pop
push
sahf
cltd
pushf
push
scas
out
sbb
in
jl
pop
sbb
fdivrs
leave
fstps
sbb
jmp
add
mov
scas
cmp
or
inc
xchg
xchg
sbb
sub
cmp
inc
sbb
cmp
sbb
mov
or
pusha
mov
das
sub
lret
fisttpl
xchg
jbe
pop
mov
jecxz,pn
jmp
mov
bound
ficompl
pop
leave
add
dec
pop
mov
sub
sub
roll
test
push
dec
cmpsb
jo
arpl
mov
xchg
or
mov
shl
fldcw
xor
jns
in
adc
fwait
push
xor
lret
mov
mov
or
inc
lock
int
dec
push
push
js
jl
rol
jle
js
pop
dec
jg
insb
jle
sub
pop
jg
leave
cli
cli
movsb
sub
inc
js
mov
inc
enter
inc
cmp
inc
mov
push
cmpsl
adc
add
xchg
out
push
test
sbb
into
xchg
jmp
and
jmp
or
xor
lahf
cmp
cwtl
int3
fildl
fiadds
lds
push
cmp
call
aam
adc
jmp
push
xchg
fdiv
cmp
or
jae
pusha
dec
ljmp
stos
sub
dec
xchg
bound
cmp
popf
push
add
pop
push
iret
jne
push
jp
aaa
sti
sub
in
lock
stos
xor
xor
outsl
jmp
pop
push
sbb
cmp
xchg
cmc
inc
push
mov
or
lahf
push
pop
xlat
scas
insl
or
stos
nop
mov
cmp
pushf
dec
rcl
sbb
cmp
mov
sbb
and
stos
push
jnp
dec
cmp
into
ss
mov
data16
add
cwtl
fiaddl
jle
dec
in
xchg
frstor
popf
gs
stos
cmpsb
sbb
lods
mov
shlb
ss
hlt
jno
sub
pop
sub
ds
nop
test
push
rolb
ds
or
sti
lods
cli
and
xorl
and
adc
gs
jecxz
roll
pop
loope
xor
ss
int3
fstps
inc
je
add
mov
lcall
cmp
rclb
iret
cmc
insb
adc
roll
jne
pop
or
inc
fidivrl
push
fbstp
repz
outsb
jmp
imul
lret
or
push
pop
sarb
sbb
adc
gs
nop
xchg
mov
test
out
ret
stc
sbb
es
aaa
out
jge
cmp
test
pop
notb
in
mov
jg
mov
dec
test
pextrw
and
insb
cld
xor
mov
xor
fildl
in
and
dec
ret
imul
cli
mov
popf
mov
and
enter
add
or
push
fsts
add
arpl
adc
sub
pop
cmp
out
adc
jo
arpl
xchg
leave
nop
jnp
test
adc
xor
cmp
and
imul
mov
in
outsb
sbb
inc
jne
arpl
scas
ja
frstor
cli
mov
in
jp
push
inc
loopne
clc
and
addl
mov
add
and
cltd
cmp
inc
dec
push
nop
jp
ds
mov
popa
mov
adc
sbb
add
leave
in
movsl
mov
ljmp
add
xlat
mov
and
in
arpl
test
addr16
sub
mov
pop
out
xor
les
insl
mov
aaa
lahf
movsb
xor
in
dec
or
cld
inc
scas
xor
jbe
add
add
jnp
stc
sbb
jl
sti
dec
jno
pop
insb
pop
subl
or
mov
popf
or
pop
sbb
inc
push
mov
iret
ret
stos
and
inc
pop
dec
lea
mov
insb
fstl
mov
mov
inc
movsl
jne
xor
mov
imul
sub
in
jno
inc
nop
adc
dec
flds
outsl
cmp
lret
out
in
loopne
scas
cmp
je
lea
sbb
ret
movsb
adc
std
vpcmpeqd
fldenv
data16
or
sbb
jmp
xor
add
popa
movsl
add
and
mov
push
sbb
sbb
dec
fiadds
sbb
rorb
cli
mov
sbb
mov
shll
adc
idivl
add
pop
in
dec
or
sbb
dec
aam
call
sbb
arpl
push
je
loopne
movb
or
pop
sbb
loope
incl
dec
pusha
mov
xchg
pop
adc
ficomps
jg
sarb
ja
push
jo
xlat
mov
sbb
xchg
push
mov
sbb
pop
movsb
xchg
jae
mov
jecxz
leave
or
mov
ret
pop
and
mov
mov
sbb
push
xchg
add
mov
mov
out
and
enter
pop
int
stc
pop
push
icebp
adc
mov
cmp
icebp
fisubrs
sub
mov
and
sbb
pusha
mov
mov
lods
cmp
orb
jge
cmpsl
dec
ja
xor
lret
sti
mov
inc
mov
add
es
test
xlat
cmpl
sahf
cmp
lods
aas
or
das
das
std
add
cs
mov
push
mull
fdivp
and
mov
jecxz
in
mov
ret
popa
pop
pop
lret
cwtl
mov
scas
add
mov
enter
arpl
xor
jg
mov
jno,pt
shrd
int3
sbb
cmp
push
enter
fcoms
push
iret
add
les
aad
mov
pop
outsb
rorl
int
or
in
sarl
cmp
es
fbld
fmuls
add
add
test
xchg
jl
mov
loopne
or
mov
xchg
shrl
cltd
xchg
hlt
push
cmpsb
mov
inc
push
sub
mov
sub
scas
pop
pop
push
imul
lock
and
jge
push
cmpsl
and
pop
pop
ljmpw
jb
popa
icebp
mov
inc
lret
and
cmp
xor
call
ljmp
push
jp
cmc
mov
mov
out
daa
pop
icebp
sub
dec
adc
adc
mov
xorb
fstl
inc
outsb
cwtl
push
es
cwtl
cmp
inc
push
jnp
fbstp
popa
ret
arpl
jns
push
sahf
arpl
pop
in
or
cmp
insb
repnz
mov
or
jnp
mov
and
arpl
aad
dec
mov
mov
lahf
adc
fsubrl
xor
dec
aas
jecxz
fisubl
lahf
movb
loopne
std
mov
sub
imul
and
push
push
or
xchg
scas
cltd
outsl
mov
sar
lret
or
mov
iret
adc
adc
out
jmp
das
inc
movsb
dec
jo
sub
push
sub
test
add
aas
mov
and
test
adc
dec
popa
inc
push
out
hlt
rdpmc
jge
xchg
ds
stos
jl
mov
pminsw
test
lret
dec
push
and
dec
subl
sbb
cmc
mov
iret
cmpsl
cmpl
mov
orb
out
xor
cmp
out
adc
cmp
out
xor
dec
cmpsb
movsl
push
xchg
mov
ud2
roll
xchg
jno
js
xor
mov
pop
mov
imul
jns
sbb
jecxz
data16
les
inc
inc
xor
leave
sahf
inc
cmp
lahf
call
xor
or
mov
sub
xchg
enter
cltd
mov
sbb
mov
xchg
leave
or
mov
pop
aaa
xor
and
push
cld
or
mov
jl
push
movsl
inc
push
into
mov
cmp
rcr
add
pop
xor
out
xor
pop
sbb
mov
sti
dec
mov
in
call
pop
pop
cmp
mov
popf
int
fisttpll
cmp
out
faddl
je
dec
ret
jno
sub
sub
fcoml
decb
pop
jmp
es
push
rcrl
push
push
loop
sub
cmpsb
into
mov
cwtl
mov
out
mov
add
cmc
push
mov
cmp
mov
add
mov
lahf
imul
inc
mov
sub
adc
mov
xor
or
test
sub
lahf
dec
outsb
cwtl
movsb
pop
test
dec
mov
xchg
mov
dec
push
inc
roll
cli
bound
fstp
mov
inc
jp
cmp
dec
sahf
in
jnp
sub
cli
in
cmp
push
push
iret
adc
mov
loope
push
jbe
lods
and
xchg
rorl
inc
sub
jnp
or
xchg
add
mov
jnp
jnp
mov
pop
sbb
pop
adc
mov
dec
dec
pop
loopne
cmp
mov
ss
imul
imul
mov
inc
orl
jbe
clc
out
gs
cmp
and
xchg
psubq
outsl
add
xor
aad
jbe
ja
cmp
xchg
jnp
int3
cmp
call
cmc
or
loop
loopne
dec
subb
push
dec
mov
or
outsl
jecxz
popf
or
and
sbb
mov
adc
cmp
mov
into
in
mov
push
and
test
out
push
jmp
lahf
add
pop
xchg
dec
sahf
dec
fcomi
jmp
dec
addr16
arpl
push
xchg
sub
stos
add
add
dec
or
sbb
mov
push
std
ficoml
out
jbe
push
cltd
cmp
imul
int
dec
push
mov
out
pop
pusha
testl
pushl
aaa
arpl
add
fists
lret
xchg
jge
aaa
jns
scas
lock
sbb
aad
ret
sbb
jae
call
pop
outsl
pop
cmovb
push
jg
je
mov
fdiv
int3
mov
mov
data16
mov
add
movsw
mov
pop
dec
stos
push
jecxz
fstps
lret
shlb
ret
push
jae
fcmovnbe
add
jge
cmp
sarb
lods
das
fimuls
sbbb
mov
loop
push
mov
mov
out
in
jg
icebp
push
pop
xor
or
mov
fstl
fdivrs
pushf
loope
pushf
xchg
sbb
std
xchg
mov
ljmp
mov
mov
and
imul
inc
loopne
roll
and
jmp
aam
cmpsl
sbb
int3
push
cmp
ja
test
jmp
movsb
notb
insb
adc
outsl
xor
out
mov
fsts
and
repnz
hlt
in
ret
fdivrs
xor
loopne
js
mov
and
lea
pop
push
jmp
xor
in
or
inc
movsl
jecxz
xor
cmp
mov
pop
rorl
stos
sbb
into
pusha
out
xchg
inc
and
inc
imul
xchg
js
inc
cmc
mov
mov
xchg
pop
icebp
jl
cmp
lret
int
insb
div
icebp
or
mov
xor
or
daa
jp
sbb
pop
shll
cmp
mov
pop
ja
sub
mov
stos
in
and
mov
mov
movsl
fmull
mov
sub
mov
mov
test
push
and
xor
gs
xchg
fst
push
int3
mov
cmp
sub
daa
mov
movsb
std
and
pop
dec
pop
sub
je
pop
jge
daa
and
mov
out
movsl
lahf
dec
das
outsb
les
push
popf
and
cmc
jle
pop
push
mov
add
xchg
mov
inc
pop
fisubl
and
mov
add
mov
call
lods
cmp
std
xchg
mov
shl
jo
popa
xchg
xlat
cs
jg
ret
les
popf
testl
jnp
push
fucomp
cmp
sbb
leave
out
push
fsubp
lcall
sbb
in
mov
mov
cli
fmuls
inc
cli
hlt
stos
jp
mov
arpl
popa
lds
jl
ja
mov
jo
test
je
xor
or
mov
pushf
fidivl
pop
dec
mov
push
adc
imul
lcall
popa
aas
imul
push
mov
mov
push
addr16
in
xchg
popl
xchg
pop
repnz
out
out
inc
push
daa
adc
xchg
push
add
shl
jp
test
jmp
insb
mov
inc
decl
cs
scas
cmpsl
rcr
ljmp
mov
mov
mov
test
mov
xchg
mov
pop
xchg
xor
imul
jns
pushl
shlb
nop
je
jl
es
iret
fwait
jbe
rcll
hlt
cli
pushf
push
loope
adc
inc
xor
mov
or
js
adcl
sbb
movsb
pop
cwtl
inc
mov
cmp
push
out
or
in
aad
adc
inc
inc
notl
pushl
mov
out
jne
pusha
int3
jbe
clc
or
adc
xor
fdiv
dec
jl
xor
jo
aad
sti
aad
aam
fcompl
cli
in
sub
cld
dec
rorb
rcrl
xchg
movsb
icebp
jb
push
nop
incl
stc
or
sub
icebp
fucomip
sub
xchg
insb
adc
push
fnsave
outsl
dec
xchg
jmp
inc
push
in
push
push
fmull
cli
rclb
fdivrp
jbe
in
cltd
stos
fwait
ja
fdivrl
and
jg
lods
in
jl
push
xor
mov
sbb
js
sbb
xor
xor
pop
sbb
jge
mov
mov
mov
cmpsl
ja
cld
sbb
xor
cmp
imul
into
add
cmp
out
fbstp
pop
das
scas
enter
cmp
das
stc
xchg
cwtl
jbe
imul
stc
jmp
daa
enter
mov
or
inc
pop
pusha
ret
pop
mov
outsl
pop
int3
cmp
aam
mov
jge
or
cmp
jp
out
jg
pop
sub
out
jge
enter
faddl
pcmpgtd
sbb
or
or
lret
in
push
das
mov
inc
push
push
enter
push
adc
std
or
xchg
lods
xor
lret
pop
out
test
lods
pop
stc
test
mov
daa
jmp
mov
mov
pop
lea
push
cs
sub
push
cmp
movsl
adc
or
jmp
lahf
aad
inc
dec
pop
lds
jl
sahf
clc
sub
xor
push
inc
lock
add
loopne
sub
push
stc
or
sbb
push
icebp
ss
pushl
test
enter
mov
cmc
mov
and
jle
in
js
aaa
mov
dec
xchg
inc
cmpsl
imul
sub
into
cmp
pop
stc
xchg
int3
sub
cs
jbe
leave
rclb
shlb
pushf
jno
and
push
sub
fdivl
int3
incl
jno
mov
push
outsb
in
cwtl
fwait
push
jp
lds
addr16
in
sub
into
dec
in
fwait
dec
mov
jae
repz
arpl
mov
dec
iret
shll
jne
nop
add
ds
out
push
lret
pop
call
add
clc
mov
sbb
sub
mov
popl
shlb
das
je
jp
dec
loopne
sub
push
sarl
rcrb
cld
pop
jno
pop
sub
jp
push
aaa
sbb
pop
mov
push
fisttps
inc
inc
sub
dec
sbb
daa
leave
out
jecxz
es
and
les
daa
pop
cmp
push
adcl
and
into
in
fsubs
xchg
shlb
jmp
jecxz
push
jbe
sub
xchg
data16
pop
inc
stos
out
rcrl
das
lds
mov
daa
sbb
into
push
jle
pop
sbb
pop
into
test
loop
fdivrl
pop
daa
imul
cmc
jno
fmull
mov
xchg
movsb
cltd
push
jno
clc
leave
gs
add
pop
sbb
pop
and
inc
jae
cld
ljmp
lods
out
cmpsb
iret
out
pop
mov
lods
mov
in
or
lods
xchg
and
pusha
and
out
jmp
dec
sbb
adc
out
push
dec
adc
adc
outsb
movsl
jno
loopne
push
add
mov
movsb
push
xchg
jnp
sbb
cmpsl
iret
sbb
inc
push
lret
in
jge
cmp
sbbl
sbb
dec
gs
imul
mov
iret
mov
mov
adc
mov
loopne
and
mov
out
jge
enter
into
inc
add
aas
add
cli
pextrw
xchg
mov
pop
sub
xchg
jmp
sbbb
mov
aam
inc
fcom
jnp
xchg
iret
adc
inc
add
mov
xchg
add
xlat
lock
sub
lret
add
dec
jp
jnp
mov
iret
in
add
arpl
mov
add
adc
mov
je
push
mov
xchg
mov
pop
lds
or
cmp
fdivrs
test
xchg
mov
jb
leave
popf
iret
outsl
sub
push
scas
inc
jmp
pusha
dec
xchg
mov
pop
int3
lock
je
cmc
and
repz
ret
mov
push
sub
adc
and
orb
and
js
rolb
gs
cmp
xchg
std
or
fisttpl
push
loope
std
dec
lret
cmpsb
mov
gs
mov
xchg
mov
bnd
stc
push
movsl
xchg
and
cmp
fwait
mov
cmp
and
sahf
mov
pop
sbb
loope
mov
imul
testl
mov
mov
sar
jmp
aas
loop
push
mov
mov
cwtl
lock
ljmp
pop
or
and
mov
jg
movsl
das
insl
inc
ja
lods
mov
adc
sub
jb
push
adc
jno
inc
sub
stc
xor
inc
pusha
imul
insl
jmp
out
push
das
out
xor
dec
lcall
jmp
call
outsb
cmpsl
push
bound
cltd
mov
aas
jle
add
adc
adc
lea
jnp
push
and
push
mov
push
or
imul
xchg
add
in
fsubs
incb
jns
push
adc
rcrb
mov
dec
mov
shll
ljmp
mov
outsb
mov
test
dec
outsb
cmp
cmpsb
inc
pusha
jl
clc
sar
cmc
inc
inc
pop
mov
push
jno
movl
and
sti
lahf
jmp
lds
xchg
push
roll
sbb
and
jb
xchg
enter
shr
pop
xor
dec
add
lea
imul
aad
xchg
lea
dec
out
mov
cmp
sbb
jbe
shrb
dec
mov
jbe
or
fdiv
xchg
arpl
jae
or
mov
popa
clc
sbb
es
jae
lahf
sub
rcrl
xlat
mov
push
test
mov
pop
pop
pop
cmp
imul
out
std
dec
pop
repz
push
inc
mov
out
sub
test
shrl
sar
jle
inc
movsb
or
cltd
fsts
push
cmpsl
add
stos
insb
or
xlat
sbb
sbb
mov
cltd
sbb
cmp
repz
idivl
inc
jg
inc
add
faddl
lods
insb
pop
addb
pop
call
sub
js
nop
xor
mov
iret
xor
xchg
scas
mov
mov
cli
jp
das
pop
sahf
ds
xor
mov
xchg
inc
fs
xchg
xor
pop
lea
rcrb
rorb
mov
lods
aaa
mov
cld
add
ret
push
add
and
xchg
push
shl
sbb
inc
jmp
test
loope
jecxz
push
sbb
jo
inc
sub
shl
and
mov
xor
lock
cmp
arpl
in
test
xchg
orb
fwait
or
inc
loopne
fbstp
push
testb
psraw
insl
flds
sbb
cmpb
and
pop
lea
lods
and
inc
test
lret
ds
xor
or
mov
mov
stos
mov
ljmp
dec
jae
mov
jne
es
cmpsl
xor
leave
repnz
mov
cmpsb
nop
pop
lods
cltd
pop
xchg
cld
mov
jmp
lahf
loop
xlat
lcall
lea
lock
pop
adc
mov
testb
xor
push
sub
adc
pop
pop
stc
mov
lahf
inc
leave
mov
dec
sahf
xlat
inc
adc
cld
hlt
lds
add
je
cmovae
in
or
and
aad
jb
insb
inc
icebp
insl
lsl
leave
push
mov
in
dec
xor
adc
lods
fnstenv
push
test
pop
ficompl
mov
push
lock
push
pusha
jmp
jp
popa
subl
lcall
pop
push
jo
push
push
add
popa
cli
mov
cmp
jbe
pop
mov
or
rcrb
xor
xchg
insb
nop
enter
mov
fxch
sbb
mov
push
in
inc
shll
push
cmp
das
and
xlat
test
inc
push
xchg
sahf
xor
jne
xchg
in
les
std
push
enter
xchg
mov
jl
js
std
cmp
test
ja
or
mov
xlat
cmp
mov
repz
movsl
insb
repnz
out
push
and
lods
test
pop
int
or
or
sub
xchg
xor
std
pop
cmp
leave
aad
scas
fstpt
push
jmp
jno
andb
movsb
mov
add
fisubrl
add
mov
rorb
mov
mov
and
stos
test
dec
dec
fisubrs
inc
rorl
jb
jge
pop
sahf
insl
sub
jge
sub
repz
lret
bound
pop
inc
push
mov
imul
je
je
inc
and
fidivs
jl
gs
leave
mov
add
xor
adc
fs
enter
out
push
ret
push
pop
arpl
xchg
aas
jo
add
mov
or
xlat
mov
sub
jge
test
adc
pushf
xchg
mov
in
xchg
iret
mov
pop
inc
push
adcl
cmp
movsl
inc
cmpsl
mov
adc
sarl
leave
sbb
inc
out
pop
push
push
popa
jno
jnp
push
mov
ret
jl
sbb
pop
jbe
push
xor
rol
lods
vpshufhw
adc
xchg
mov
in
das
and
fistpl
movsl
cmp
xchg
in
pop
pop
aad
pop
clc
loopne
adc
fildl
mov
rorl
push
sub
stos
sti
bound
je
rcr
call
sbb
mov
out
dec
pop
and
rcll
cs
sub
imul
rcrb
and
xchg
xchg
inc
xor
jno
mov
test
add
sbb
repz
icebp
dec
sub
pop
and
cmp
adc
xorb
lock
jge
sbb
ljmp
xchg
mulb
insl
push
mov
iret
sbb
add
xor
and
cmp
cld
push
adc
mov
jp
adcb
ret
test
shl
inc
push
inc
sti
in
mov
movsb
mov
cmp
std
inc
sbb
jno
stc
inc
adc
and
scas
lret
pop
ja
or
cmp
dec
iret
push
mov
jmp
cwtl
lret
cmp
mov
mov
sbb
aaa
outsb
mov
nop
lret
xchg
and
push
xlat
lods
int
into
aad
xchg
insb
pop
add
test
into
push
cmp
cmp
pop
daa
jmp
test
pusha
fnsave
enter
rcrl
ja
pop
arpl
xlat
stos
sub
sbb
popa
and
or
sbb
js
stos
xor
lods
js
dec
add
daa
les
out
lods
in
gs
sbb
mov
scas
bound
push
lock
push
cld
movsl
pop
add
or
mov
mov
jp,pt
out
pop
aaa
sbb
fcomps
pop
jb
movsl
add
in
fistpll
mov
pop
clc
sbb
xchg
fildll
xor
jle
sbb
sbb
ds
push
cmpsb
sbb
out
rorl
jnp
sbb
je
orb
gs
fsubl
or
shrl
out
jg
das
cs
loope
cmp
sbb
insb
mov
mov
les
mov
mov
aam
pop
pushf
inc
in
push
fwait
xor
test
enter
sub
mov
loop
xor
pop
push
sti
mov
fs
xchg
pop
push
test
ret
fcomps
pop
rorl
mov
inc
cmp
test
xchg
out
push
mov
xor
stos
cmp
ja
or
in
mov
hlt
mov
xchg
push
stos
popl
push
xchg
rcrb
pop
adc
shrl
mov
sti
xlat
adc
push
pop
or
clc
outsb
sbb
cmpsb
adc
clc
into
cmp
icebp
and
sub
xor
sbb
aam
ret
cmpsb
fnstcw
mov
xchg
dec
ret
je
addl
inc
xor
aad
repz
sti
adc
add
mov
out
shlb
pop
jbe
rcrl
out
pushf
inc
mov
psrad
idivb
scas
imul
inc
mov
cmp
in
test
out
subl
sbb
or
dec
jns
lods
inc
ljmp
shll
cmpsl
jecxz
jae
cmp
mov
mov
icebp
or
adc
fbstp
ret
dec
ss
jmp
add
fcompp
add
ss
lahf
mov
sub
mov
mov
mov
test
and
and
lret
dec
sbb
jmp
arpl
nop
mov
fcomps
cmp
fstl
loop
icebp
inc
out
push
test
sbb
mov
or
fdivs
popf
mov
push
stos
inc
sub
arpl
push
push
es
jb
addb
outsl
cmp
incb
or
ss
sahf
mov
addr16
mov
jae
mov
enter
push
dec
jne
push
mov
xchg
adc
lret
shll
push
sahf
repnz
pop
iret
and
pop
pusha
out
test
dec
dec
pop
fidivrs
cmc
push
lds
cli
sub
jne
dec
cmp
sub
movb
xlat
pop
pusha
and
pop
in
sbb
fucomi
sbb
outsb
sbb
push
push
jns
call
hlt
mov
outsl
inc
dec
pop
daa
or
roll
ja
add
stos
test
mov
pop
fisubl
bnd
dec
adc
clc
cmc
sahf
in
rcrb
jmp
xor
pop
xor
pop
jne
xor
adc
mov
pop
jno
push
sbb
jge
out
xor
in
sahf
and
gs
ret
mov
mov
xlat
cltd
ficomps
fs
mov
scas
mov
data16
repz
inc
cs
imull
mov
je
scas
insl
ret
jmp
lods
out
dec
pop
test
push
inc
shlb
in
pop
adc
mov
shll
jecxz
xorb
addb
xor
aam
in
pop
fdivrl
mov
sti
lret
js
stos
fsubl
clc
rolb
mov
mov
das
pop
repz
cmc
add
push
dec
mov
xchg
ror
iret
andl
test
pusha
mov
lahf
enter
sub
xlat
push
mov
adc
or
pushf
call
sub
enter
xor
stc
pop
ror
xchg
cmpsb
fstpt
pop
mov
aad
push
in
pop
ja
xor
cs
dec
xor
cmp
pop
test
loop
lea
pusha
add
or
add
lods
mov
push
cld
xlat
imul
cmp
pop
add
in
bound
push
mov
ret
pop
fs
outsb
out
mov
cmp
imul
sbb
sub
jmp
hlt
sub
or
loopne
push
add
and
sarb
bound
xchg
dec
outsb
push
sbb
cld
ss
mov
inc
xchg
stos
xchg
lods
nop
gs
pop
mov
pop
insb
loope
out
mov
sub
btr
or
mov
mov
cmc
mov
xchg
sbb
pop
xchg
pop
es
jo
fnsave
aas
sti
test
pop
lods
push
lret
pusha
xor
mov
dec
push
addr16
cmpb
test
mov
jb
ror
aaa
cmp
xor
and
sub
lods
js
pusha
cmpsl
sbb
mov
pop
ret
les
mov
jne
pop
xchg
or
xchg
or
jmp
adc
sbb
pop
fwait
loope
adc
fwait
pop
xchg
adc
jmp
jmp
int
inc
daa
or
fbstp
jl
sub
repz
addl
xchg
jmp
outsb
in
jo
dec
call
int3
inc
stos
or
mov
mov
sbbl
adc
pop
shrb
outsl
dec
sahf
adc
shl
xchg
cmp
sbb
daa
sbb
cltd
or
or
loope
filds
dec
adc
or
mov
outsl
mov
sbb
mov
fnstenv
cs
cmp
ljmp
addl
out
movsb
repz
cmpsb
mov
aam
cmpl
scas
adc
mov
in
movups
enter
mov
shrb
js
or
cmp
xchg
test
and
pop
sar
xchg
push
daa
clc
cmpl
out
xchg
lock
and
test
mov
jo
xor
xchg
leave
in
outsb
lods
xchg
out
mov
rolb
sbb
inc
rcr
int
add
outsb
call
mov
add
imul
jecxz
xor
out
fcmove
and
hlt
inc
iret
or
cmp
movsl
lahf
clc
stos
add
addb
dec
clc
jmp
int3
movsl
stos
inc
addr16
push
sub
shll
add
push
je
and
int3
divb
fnsave
xchg
aas
scas
add
xchg
xchg
cmp
mov
mov
pop
stc
push
shlb
mov
sbbl
out
or
inc
nop
pop
pop
adc
jno
push
lds
fs
icebp
outsl
scas
pop
xchg
ljmp
cli
fstpt
push
mov
mov
pop
out
pop
in
fisubl
adc
call
adc
inc
imul
call
ret
pushf
jno
xchg
out
mov
mov
sbb
movsb
xchg
push
mov
loope
pop
mov
out
dec
in
pop
pop
dec
fldcw
sbb
std
pop
jg
int
xor
clc
add
cmp
inc
jae
pop
js
mov
dec
gs
aam
and
fisubrl
loop
mov
push
sub
inc
cmp
adc
push
das
int
sbb
insl
pop
ja
or
shr
jmp
jge
ud1
lock
shll
jp
fisubs
ret
int3
xchg
sbb
lods
sub
gs
cld
adc
jp
ja
mov
aad
cmp
insl
and
pop
xchg
subl
xchg
lods
dec
fcomps
dec
pop
in
fisubrl
sbb
jmp
xchg
pop
sbb
rorl
arpl
scas
cmp
push
mov
das
lods
cmp
dec
add
out
cli
fiadds
pop
clc
adc
push
scas
cmpsb
mov
inc
cmp
bound
mov
xorb
loope
mov
or
out
xor
sub
mov
ret
mov
inc
push
push
lcall
outsl
inc
test
sbb
lcall
push
mov
adc
mov
test
mov
and
or
shlb
inc
pusha
or
into
call
and
jge
add
jo
push
popf
test
data16
mov
xchg
xor
xchg
insl
arpl
lret
into
rorl
mov
mov
outsl
pop
pop
test
sub
mov
pop
test
loope
or
xchg
pop
stc
mov
imul
in
jns
aam
and
add
stos
jg
cwtl
push
call
jo
rorl
xchg
fwait
pop
pop
imul
inc
stc
lods
cmp
adc
xlat
add
andl
ficompl
ljmp
push
or
cwtl
imul
aaa
lret
testb
dec
test
iret
and
inc
adc
scas
imul
dec
cmp
xor
das
popa
jg
clc
add
stos
rcrb
nop
cmp
fldln2
fwait
lahf
rcl
int3
push
dec
sub
popf
sbb
insl
xor
xchg
scas
sub
stos
jmp
loopne
in
cmp
inc
dec
lcall
mov
mov
maxps
jmp
inc
dec
repnz
xor
mov
push
addr16
mov
jmp
mov
add
adcb
inc
add
mov
add
pop
mov
mov
movsb
push
mov
into
xchg
xchg
xlat
aam
jge
xchg
arpl
xchg
fcomps
sbb
stos
rcr
push
dec
inc
cmpxchg
leave
sub
ljmp
cmpsb
jle
lret
das
inc
xchg
pop
imul
inc
inc
mov
xor
iret
add
je
push
out
add
push
cwtl
fwait
xlat
pop
fistpl
sub
sub
negb
xor
iret
leave
pop
jmp
lds
and
enter
or
ret
aaa
push
sub
pop
mov
aas
ljmp
lcall
das
dec
ljmp
mov
or
daa
inc
mov
or
jbe
stos
pop
jmp
cltd
sti
cmp
mov
mov
xor
sbb
dec
add
push
clc
xor
stc
pop
popf
or
aam
sub
mov
and
call
das
stos
sub
jbe
bswap
test
loop
push
je
cs
and
cltd
jb
xor
fsubrs
push
bound
aas
iret
jae
icebp
dec
push
movsb
loopne
adc
lret
dec
test
sbb
xchg
test
fistpll
repz
adc
in
fs
lret
cmp
inc
prefetchw
or
aaa
call
sub
dec
sub
add
insl
push
arpl
dec
mov
inc
addr16
in
sbbb
adc
push
mov
push
or
xchg
lahf
add
into
bound
das
lret
enter
mov
xor
int
mov
add
pushf
fstl
pop
dec
call
xor
xchg
arpl
dec
lcall
gs
adc
in
gs
gs
jmp
inc
inc
ret
mov
and
sub
rclb
cmp
stc
xor
sub
in
movsb
adc
loope
mov
push
xchg
push
xchg
pushl
test
sbb
add
add
dec
sub
and
cs
xchg
clc
sub
adc
into
push
mov
int3
out
cmp
cli
addl
sbb
cwtl
xchg
fcompl
push
popf
movsl
jno
xor
call
push
scas
add
adc
addr16
in
and
into
pop
repz
push
or
les
mov
mov
imul
adc
push
pop
pop
stos
jo
or
xchg
ffreep
decl
fimull
jmp
out
mov
add
rolb
and
lock
push
xchg
jge
cltd
insb
cli
ret
enter
btr
out
jbe
lea
jle
mov
das
sarb
dec
xor
out
rorl
fsubrs
cmp
adc
loopne
out
sti
push
mov
add
fsubl
push
inc
leave
iret
inc
dec
test
nop
xor
add
and
push
adc
mov
les
lods
fldl
aas
adc
iret
jecxz
push
mov
cmp
outsl
pop
addr16
xchg
lahf
add
ja
add
insb
cmp
inc
mov
shlb
bound
rorb
xchg
cmp
movsl
sahf
cmp
mov
sti
addb
mov
cmpsl
mov
mov
popl
push
subb
sbb
or
xchg
ficompl
shl
lds
test
mov
idivb
mov
xor
mov
push
sbb
jle
cs
nop
or
sarb
insl
into
adcl
les
pusha
inc
mov
fisubl
mov
and
xlat
lods
xor
icebp
cmp
in
outsb
push
lahf
sub
xchg
fcomps
loop
test
into
dec
sub
orl
repnz
sbb
add
or
fisubrl
out
sbb
test
push
aad
adc
stos
bound
inc
xorb
add
test
into
or
xchg
jne
inc
push
cmpsb
aas
dec
fmull
in
test
sub
fninit
mov
add
xor
mov
mov
in
lahf
js
mov
pop
bound
getsec
out
xor
lahf
sti
mov
enter
mov
rcrb
push
push
jp
cmpsl
jp
nop
push
dec
cmpsb
outsb
jl
pop
fdivrs
cs
jecxz
lret
inc
movsl
jo
aas
jle
add
outsl
jmp
shr
jns
jno
div
adcb
jl
lock
les
mov
mov
jnp
dec
mov
xchg
xor
call
imul
filds
shl
pop
roll
in
xor
and
inc
jmp
in
clc
inc
fimuls
stc
adc
and
sub
ret
lods
inc
jp
in
pop
out
repnz
fs
shrl
js
mov
out
jle
dec
mov
into
movsb
jp
ficoms
dec
inc
mov
pop
cmp
xchg
inc
and
mov
loope
test
fcom
mov
xor
pop
int
ja
dec
mov
mov
mov
sub
sahf
add
lahf
pop
xor
jp
mov
mov
aam
fbld
mov
orb
jecxz
inc
lds
sub
dec
jo
cmp
mov
mov
out
pop
pop
fadds
jle
fistpll
cli
pop
psrld
sbb
mov
or
pop
pop
add
push
pop
cltd
imulb
mov
test
adc
and
daa
pop
fstl
imul
and
adc
jg
mov
dec
jg
dec
adc
in
push
mov
ds
cmp
inc
mov
cmpsb
call
mov
mov
xor
jg
stc
pop
fcmovbe
add
das
push
ret
int3
adc
mov
sbb
jnp
out
sbb
shll
jg
shrb
int
jle
insb
loop
rorl
jge
outsb
pusha
out
dec
add
add
mov
test
mov
mov
mov
fwait
gs
mov
mov
addl
pop
sahf
mov
addb
xchg
fucomp
testl
pop
test
pop
jg
cli
pop
mov
sub
bound
arpl
adc
stos
xor
cmpsb
pop
ret
mov
jmp
jecxz
and
cmp
shlb
cmpsl
clc
lahf
pop
jne
dec
push
fdivs
iret
cmc
jmp
xchg
jnp
mov
mov
sub
rorl
cmpsl
add
mov
scas
cs
xlat
dec
sbb
enter
or
sub
xor
dec
dec
gs
repz
cmc
lods
mov
jge
or
daa
jp
rorl
xchg
jo
cmp
repnz
adc
cmp
push
icebp
ss
jg
movsl
lock
adc
fwait
dec
jmp
fcoml
or
loopne
inc
in
enter
pop
lds
push
movsb
enter
adc
jno
xchg
and
mov
xlat
and
outsl
fwait
push
mov
data16
rcll
and
andb
outsb
xor
add
ljmp
mov
mov
test
push
cmp
cmpsl
lahf
jbe
inc
and
inc
mov
dec
out
and
js
loop
out
test
sub
jecxz
pushf
xchg
sub
fadd
mov
in
sbb
adc
push
hlt
mov
dec
mov
inc
jg
les
cmp
pop
mov
and
daa
add
je
mov
mov
addb
mov
leave
push
mov
lcall
push
pop
dec
leave
add
leave
scas
insl
ficomps
jle
popa
test
out
adc
int
mov
clc
adc
cmp
mov
dec
call
pop
jae
imul
cwtl
xchg
xlat
negb
push
mov
or
jg
mov
push
jle
pop
mov
add
jne
jno
mov
imul
stos
adc
fmull
inc
dec
or
lahf
mov
lret
fdivrs
jno
pushf
sub
dec
ja
mov
out
imul
sub
fnsave
lods
and
pop
shll
imul
pop
lods
mov
xchg
or
mov
mov
cmc
push
jecxz
int3
movsl
mov
sub
popa
xor
call
push
dec
or
dec
ljmp
repz
roll
imul
mov
cmpb
inc
int
fmull
mov
mull
cli
out
cmp
loopne
shl
cwtl
cmp
pop
pop
push
call
mov
out
scas
lods
xor
xchg
cli
mov
pop
xchg
mov
je
jle
pop
scas
int
out
mov
out
xchg
cmc
shll
mov
push
popl
out
daa
outsb
inc
and
cltd
and
mov
cmp
sub
cmc
and
lods
bound
push
xchg
inc
mov
pop
push
repz
cs
mov
pop
inc
push
pop
pop
fdivl
pop
inc
das
in
data16
popf
sbb
insb
sub
lcall
and
insl
std
xchg
ljmp
into
mov
sbb
jae
xor
inc
sarl
and
sti
jbe
cmp
insb
jecxz
adc
mov
lret
les
outsl
mov
testl
enter
xor
inc
les
push
dec
imul
inc
shll
push
in
jnp
dec
push
push
or
push
inc
lock
scas
jg
arpl
jge
mov
dec
dec
fwait
jge
xchg
mov
fcomip
in
das
mov
add
negb
in
lea
in
je
test
push
xchg
mov
adc
ljmp
hlt
jo
jle
mov
fisttpll
sti
jnp
sti
cltd
cli
adc
test
subl
jns
dec
mov
mov
in
in
jnp
mov
or
scas
push
out
xchg
aas
lock
loopne
mov
mov
in
adc
mov
pusha
loopne
shl
mov
stos
pop
inc
push
idivl
pop
rcrb
push
std
leave
mov
xchg
push
or
mov
fdivrl
xchg
inc
dec
jge
and
mov
sub
xchg
dec
pop
loope
sbb
dec
sti
adc
push
sbb
or
and
adc
xchg
pop
ficoms
dec
jmp
cltd
cs
dec
mov
and
push
fnstenv
mov
xchg
inc
mov
mov
imul
xor
push
ret
movsl
push
push
ds
xchg
sti
push
movsl
jne
int
rclb
or
aam
test
lret
push
stc
dec
arpl
movsl
imul
mov
xor
pop
neg
popf
adc
call
mov
jecxz
adc
in
cmp
sbb
sub
pop
mov
je
ud1
push
cmpsl
dec
push
xchg
mov
cmc
mov
adc
adcl
mov
outsl
cmp
jmp
loop
popa
or
and
add
jg
testl
fmulp
repnz
mov
push
jle
pop
lds
gs
cld
and
mov
push
cmpsb
das
outsl
inc
jae
xchg
mov
fistpl
rolb
leave
iret
pop
jmp
out
push
jge
jae
je
xchg
flds
notl
pop
and
inc
xchg
loopne
scas
mov
pop
jecxz
add
push
cmpsb
inc
push
inc
lahf
ror
sbb
or
sub
and
mov
fimull
add
inc
mov
aam
dec
scas
addr16
icebp
fistl
loopne
std
mov
jo
pushf
outsl
stc
push
clc
xor
sbbl
lods
imul
mov
sbb
rcrb
ret
lods
int3
xchg
or
jmp
sbb
sbb
lret
cmpsl
nop
cld
das
push
add
sbb
iret
jg
cs
andl
test
dec
insl
jle
xlat
xchg
jbe
repnz
mov
mov
loope
dec
cs
cmp
jp
scas
pusha
push
push
add
add
xor
inc
std
aam
cmp
jg
pop
lods
jecxz
rclb
daa
ja
idiv
divb
dec
mov
adc
gs
or
cmpsb
in
cli
cld
mov
inc
jne
dec
mov
adc
inc
repz
mov
shll
push
mov
xor
add
jmp
jmp
sub
adc
in
sbbb
mov
push
jge
mov
cwtl
repz
rorb
insb
fwait
sbb
dec
mov
out
xor
fcmovbe
cmp
add
adc
shll
sub
clc
js
inc
dec
adc
xor
push
add
jno
xchg
sbb
and
push
push
int
jecxz
push
into
mov
call
cmp
inc
pop
cwtl
int3
repz
adc
xor
jns
in
cmp
jg
enter
js
pop
or
in
cltd
cwtl
bound
pop
pop
pcmpeqd
or
inc
in
hlt
cli
les
pop
iret
or
xor
add
data16
jge
out
xchg
jg
xchg
ljmp
sbb
push
into
push
mov
insl
call
xor
cmp
cmpsb
in
jno
dec
hlt
ficoml
push
scas
fimull
mov
push
int3
mov
cmpsl
pop
mov
push
stc
sub
and
out
std
jnp
iret
jecxz
add
pandn
inc
mov
mov
lea
mov
xchg
and
or
mov
fstps
scas
outsl
fisubs
or
adc
lods
xor
dec
mov
and
xor
cmpsl
scas
jbe
cmp
jecxz
loopne
jmp
push
jno
sarl
add
test
sbb
mov
or
add
daa
gs
jae
adc
add
push
jns
add
cli
xchg
sbb
mov
mov
fisttpll
in
mov
es
jo
nop
pop
in
repz
sahf
pop
xchg
outsb
fcom
sti
test
mov
jne
hlt
sub
inc
imul
fimull
adc
xor
mov
xchg
xlat
add
ret
test
mov
jge
icebp
mov
sbb
js
aam
jne
mov
lahf
mov
or
test
mov
sub
stos
mov
dec
jno
mov
lret
xchg
mov
lret
movsb
mov
xchg
cmp
xchg
mov
hlt
lahf
xlat
adc
xchg
jbe
cmpsb
mov
mov
add
cmp
int3
stc
fmull
push
jecxz
mov
mov
jb
fdivrs
jge
push
jne
std
inc
iret
stc
aam
xor
push
push
movsl
pop
jns
sub
adc
daa
push
dec
pushf
cli
jp
mov
out
xor
add
xchg
faddp
pop
dec
inc
cwtl
movsl
mov
ret
adc
dec
outsb
shl
repz
aas
cmp
sub
inc
div
enter
jge
cmp
rcrl
je
lcall
mov
stc
das
test
adc
repnz
pop
rclb
fcoml
mov
rorl
jmp
add
mov
push
xchg
add
stos
mov
nop
int
hlt
sbb
fcmovne
leave
repnz
jns
insl
int
js
pop
rorb
mov
sub
cmp
roll
or
adc
xchg
arpl
push
sbb
fimuls
arpl
out
xor
push
xchg
fcomi
insb
movsb
inc
js
mov
ret
or
mov
cmpsb
imul
repz
divl
aaa
out
xor
and
sahf
cmpsb
adc
mov
decb
ficoml
sbb
or
adc
lahf
sbb
loop
push
pop
jb
inc
mov
or
ret
jl
pop
popa
jl
mov
inc
mulb
dec
sbb
mov
cmpsb
jge
inc
add
push
shlb
mulb
sti
push
ficompl
enter
in
cltd
push
mov
mov
inc
mov
movsb
rorb
jmp
jo
dec
stos
inc
and
xchg
shrb
pop
jbe
or
les
loopne
pusha
call
bound
pusha
es
push
enter
pop
cmp
jmp
enter
clc
jmp
dec
aad
movb
mov
dec
je
cmp
jmp
jb
and
mov
int
outsb
pop
mov
ja
cmp
push
fildll
dec
fs
xchg
dec
into
sub
stc
cmpsl
xorb
pop
add
ret
ss
sbb
pop
int3
and
loop
dec
das
icebp
cmp
dec
jae
daa
jb
jg
adc
cmp
inc
xor
in
sub
push
orl
roll
out
mov
push
imul
cmpsl
and
in
loopne
arpl
enter
insb
test
sahf
and
out
dec
inc
bnd
stc
mov
mov
dec
jecxz
iret
xor
mov
in
sar
dec
imul
jle
jb
and
sbb
int
and
push
pop
jnp
and
jbe
pop
inc
inc
stos
push
xor
pop
daa
repz
push
mov
mov
jmp
sbb
mov
hlt
sub
or
and
lea
imul
lea
roll
add
clc
pushf
pop
loop
inc
xchg
repz
or
push
mov
cmpsl
jb
sub
adc
fdivrs
aad
add
jb
cmpl
pusha
jmp
imul
mov
push
dec
sub
sti
push
push
insl
icebp
jecxz
cwtl
cmp
and
aam
loopne
xor
lea
in
cmp
iret
imul
cld
cs
adc
out
jg
mov
mov
inc
cwtl
mov
cld
int
or
jp
mov
hlt
add
ljmp
cld
add
jp
mov
dec
jo
pop
sub
ret
sub
es
mov
scas
sub
sbb
jge
mov
xor
jge
popf
mov
scas
imul
in
std
cmp
cmp
jp
add
jmp
push
rcl
sbb
pop
xchg
ret
xchg
lea
adc
loop
xchg
rorl
popa
sbb
movsl
daa
mov
push
sub
daa
dec
mov
fldcw
xor
mov
jmp
test
popf
and
jb
jmp
mov
mov
or
lret
hlt
push
clc
adc
inc
add
cmp
fildl
xor
or
loope
divl
cli
bsf
hlt
sbb
loop
in
dec
dec
cmp
dec
stos
lea
mov
add
xor
push
inc
mov
popa
mov
jbe
cmpsl
sub
xchg
pop
xchg
cmp
ss
sub
xor
mov
cmpsb
es
xchg
mov
fs
dec
les
ficoml
and
int
aas
call
pop
pusha
outsb
jle
lret
movsb
push
xor
pop
jg
fistpll
jmp
gs
pushf
cmp
dec
lcall
les
std
and
mov
mov
push
data16
enter
fnstsw
sub
mov
push
nop
push
call
fcompl
lret
mov
aaa
cmp
and
sbb
dec
dec
pusha
add
add
cmp
stos
aaa
mov
stc
mov
inc
push
imul
lods
fbstp
mov
push
in
aam
lcall
bound
cld
scas
dec
lahf
add
add
pop
mov
dec
pusha
or
xor
subb
imul
das
mov
mov
hlt
fucomi
jbe
loopne
inc
nop
loope
push
je
push
popf
out
lcall
sub
pop
mov
pusha
push
jae
shrl
popf
adcl
mov
jns
add
mov
lock
lods
or
int3
sub
scas
add
jl
loop
xchg
loop
mov
js
out
inc
mov
jbe
call
adc
push
int3
sbb
enter
jg
xchg
arpl
insb
jnp
jle
sti
dec
sub
jle
pop
cltd
cwtl
lods
or
cmp
and
push
fwait
mov
xchg
ret
inc
dec
bound
or
bound
repz
int3
add
jp
xchg
sub
cmp
xchg
push
cs
or
mov
pusha
mov
pop
mov
and
mov
in
pop
rorb
fists
les
stos
xor
sub
lcall
sbb
loope
add
imul
and
add
cld
in
lds
gs
shlb
pushf
stos
dec
dec
xlat
cmp
pop
xor
jae
pop
or
mov
call
fidivrl
out
xchg
test
or
pop
cmp
xchg
xor
cmp
cwtl
jmp
test
mov
jge
jae
loop
and
repnz
icebp
ja
mov
inc
cmp
pop
mov
push
adc
cmp
inc
sbb
stos
xor
sbb
icebp
mov
dec
mov
out
fdiv
or
add
call
inc
jnp
mov
mov
cmp
arpl
int3
add
fcmovnb
inc
pop
insl
xchg
pop
mov
idivb
ret
push
mov
sub
cwtl
test
or
addb
cli
inc
sub
aam
push
sub
outsl
adc
data16
movsl
ficompl
stos
stos
mov
jo
adc
scas
icebp
leave
fimuls
inc
pop
cmpsb
mov
inc
mov
or
pusha
mov
pop
mov
xchg
sbb
and
sahf
inc
cmp
pop
or
pop
clc
jae
lahf
into
adc
test
movsb
mov
adc
mov
sub
scas
push
andb
lret
xchg
xchg
in
xor
cmpsb
mov
movsb
imul
aad
pop
cltd
popf
movsb
into
push
xchg
hlt
push
adc
in
xchg
insb
or
mov
mov
push
inc
push
jns
or
outsl
pop
test
ret
out
or
cmp
or
fcompl
xor
loop
xor
sbb
in
testb
jbe
or
in
lods
fcompl
loop
outsb
or
sbb
call
test
daa
inc
ja
push
cli
pop
dec
mov
jnp
push
xchg
and
lahf
xor
fwait
xchg
stos
xor
loop
lcall
xor
movsb
icebp
and
dec
mov
lods
sar
pop
rolb
mov
adc
rolb
jg
lret
mov
test
or
in
jl
enter
push
sbb
pusha
xchg
fsqrt
imul
ret
dec
push
movsl
sub
lock
mov
filds
mov
cmpb
sarl
push
jge
adc
mov
cwtl
or
jmp
mov
mov
lret
mov
movsl
fistps
xchg
popf
cmc
cs
orb
or
cltd
pushf
mov
sti
sbb
jae
pop
dec
sahf
fstl
hlt
insl
add
inc
cs
push
lret
and
or
add
inc
lds
inc
sbb
push
sub
dec
loopne
out
ret
movsb
fsubl
arpl
xchg
pop
adc
negb
cmp
push
mov
sarb
out
mov
xor
stc
xchg
xlat
inc
adc
pusha
push
sub
test
xchg
filds
sub
stc
adc
into
ds
into
mov
cli
mov
inc
sbb
xchg
push
stc
out
push
cmpsl
mov
icebp
cld
daa
lahf
mov
imul
push
mov
jmp
shll
imul
jg
mov
and
mov
push
lcall
into
mov
or
push
dec
add
jl
jb
inc
push
insl
jae
loop
outsb
sub
repnz
and
loope
add
adc
push
add
jmp
fnstcw
out
das
jns
sbb
das
pusha
es
cmp
ss
mov
mov
jae
sti
jae
bound
dec
loop
les
adc
adc
lods
and
stos
fwait
rclb
and
lret
in
sbb
repnz
add
mov
lods
mov
lock
jp
fsub
push
or
addr16
mov
les
insl
out
push
popf
scas
jle
loop
in
add
stos
dec
sub
jbe
push
inc
jp
cwtl
and
mulb
fsub
jns
stos
incl
xor
jns
addr16
pop
icebp
adc
test
push
or
xchg
int3
mov
lcall
and
out
pop
ds
repz
lahf
outsb
mov
sbb
pop
push
out
dec
lds
add
clc
mov
or
dec
shlb
loope
test
cltd
push
repz
popa
sbb
jp
into
pop
xchg
scas
orl
sub
jg
sub
inc
shl
leave
shl
cmp
adc
or
inc
cmc
sbb
lds
shlb
add
cs
push
xlat
sarb
mov
push
xchg
js
popa
mov
popf
push
or
mov
or
ja
adc
mov
fmull
icebp
out
fsubs
xchg
jp
rcrl
ja
xor
sysret
cs
icebp
push
dec
dec
lods
mov
mov
loopne
stc
and
pop
jmp
int
xchg
or
je
sub
mov
imul
pop
pop
and
lret
adc
imulb
cmp
movsb
add
inc
xchg
and
push
aaa
mov
shlb
lret
mov
adc
test
scas
bound
in
mov
mov
sbb
pop
stc
inc
push
sbb
mov
adc
testl
rclb
je
jle
js
sarb
ds
movsb
mov
dec
sahf
jp
ret
clc
pushf
into
je
lret
rolb
fs
push
cli
out
iret
popa
insl
mov
aad
and
push
sbb
add
popf
fwait
jge
out
push
shlb
push
sub
adc
enter
sub
adc
repnz
mov
jae
repnz
mov
int3
lret
aad
fcmovnb
pop
jbe
pop
js
push
notb
int
pop
and
dec
pop
mov
lret
xor
sub
fnsave
or
pop
xchg
inc
out
sti
cmp
add
mov
push
xor
dec
jp
int3
scas
out
in
sub
fildll
add
and
inc
sub
scas
mov
mov
imul
add
push
jle
out
push
adc
dec
mov
xchg
cmp
push
fcmovu
shll
movsb
mov
xchg
mov
dec
shlb
clc
xchg
mov
enter
pop
jo
call
dec
scas
push
cli
and
mov
lcall
out
cmp
sub
sub
ds
outsl
xchg
out
mov
mov
rcr
outsb
mov
jmp
dec
outsl
push
pop
jge
shl
push
mov
test
push
sbb
test
xlat
out
xor
jmp
mov
cltd
or
mov
imul
inc
push
stos
fildl
push
call
das
adc
add
mov
sbb
test
mov
push
sti
imul
lock
stc
inc
lahf
sahf
push
sub
loopne
ds
aam
sbb
xor
dec
leave
fisttpl
pop
add
jmp
dec
out
push
fsub
xor
aad
lea
daa
dec
pop
inc
lds
rcll
ficoml
testl
or
mov
dec
and
jnp
dec
add
imul
push
add
hlt
outsb
roll
in
sbb
out
sub
testl
ds
int3
pop
fistpll
test
out
not
and
aas
xchg
adc
out
mov
push
lahf
or
jg
call
cltd
in
inc
jbe
jge
push
sub
jp
adc
pop
fs
shll
lret
xchg
lret
aas
test
psubusb
lea
adc
addr16
cli
fdivs
ss
lret
insb
xor
dec
push
gs
frstor
cmpsb
je
mov
xor
sti
pop
insb
or
pop
test
jmp
pop
movsl
ss
jecxz
fwait
aas
sub
aas
fisubrs
dec
stos
xchg
leave
pushf
inc
add
xchg
js
hlt
mov
addr16
jge
daa
cmpsl
popa
cmpsb
testb
jg
mov
add
mov
mov
stc
hlt
pop
sub
xor
ss
lods
cmp
popf
repz
jo
dec
cmp
xor
testl
lcall
pop
loopne
lods
pushf
jle
pop
jmp
sub
repz
inc
fstpl
ret
arpl
or
inc
and
push
sbb
lahf
push
jb
test
jo
adc
cld
shll
insl
mov
pop
outsl
outsb
out
inc
mov
fstp
sarl
mov
cs
cmp
lock
imul
cmp
cmp
mov
sbb
icebp
inc
sbb
or
gs
xlat
rcrl
pushf
rorb
sti
call
cld
stos
xorl
push
dec
aad
fdivrp
pop
das
aad
xor
sti
add
ror
jo
pop
inc
cmovge
push
dec
sbbb
xor
test
fmuls
popa
loope
xchg
pusha
dec
fimull
cwtl
int3
add
subl
loopne
push
fisubs
bound
dec
movsb
hlt
loopne
cli
mov
loopne
stos
aad
or
es
aam
in
or
pop
xor
mov
int
ret
insl
test
mov
ret
in
pop
cwtl
push
addl
loopne
or
rclb
mov
stos
fninit
jmp
sbb
pop
mov
ss
inc
add
sub
cli
push
and
lock
loop
testb
or
push
adc
sarb
xor
dec
jg
and
aas
mov
test
aaa
push
in
push
sub
outsl
sbb
pop
xlat
aas
arpl
jne
mov
jns
add
or
mov
out
outsl
sbb
push
pop
cmp
sbb
mov
movsb
loopne
add
stos
jle
fs
mov
testl
scas
aaa
pushf
gs
rcrl
pusha
loopne
mov
sbb
ss
cmc
mov
into
mov
jno
push
pushf
push
mov
sbb
sbb
dec
insb
jae
stos
push
dec
or
push
inc
out
xor
cmp
cmc
fucom
jmp
test
xchg
and
aam
xchg
scas
dec
dec
mov
push
mov
or
in
mov
inc
in
loopne
and
ret
push
cwtl
cmp
push
mov
jbe
mov
shll
sub
or
imul
or
or
stos
insb
jne
scas
sub
jl
call
fiaddl
cmpsl
js
sarl
add
lret
je
jl
sbb
jns
out
daa
lock
jle
in
ljmp
jno
insl
mov
xor
xor
xor
nop
loop
daa
mov
leave
lods
mov
mov
stos
rcll
cwtl
sbb
push
cmp
pop
mov
dec
mov
scas
or
xchg
call
xor
lods
test
and
hlt
jo
js
jne
jne
outsl
jg
mov
addr16
in
in
jmp
scas
jmp
stos
push
shr
jp
je
add
jnp
and
pop
rcll
pop
mov
and
jno
ret
sbb
xor
jne
push
mov
pop
sahf
decl
scas
xor
roll
lock
adc
cmovne
jo
cld
jmp
aam
mov
adc
movl
push
out
push
mov
mov
jne
std
repz
push
mov
cs
scas
jae
fs
jle
adc
cmpsb
cli
pushf
mov
enter
mov
xor
leave
push
mov
push
sub
call
ss
imul
inc
mov
xchg
and
xchg
pop
je
xchg
jmp
cmp
jl
jmp
inc
sub
dec
cmp
icebp
jns
jp
sbb
jb
jl
addr16
bnd
je
inc
or
mov
xchg
lcall
jae
fs
mov
scas
test
cli
in
test
or
sbb
or
movsb
out
or
jb
xlat
push
mov
loope
push
imul
pop
movsb
xor
inc
jp
pusha
loope
push
xor
adc
and
bound
dec
je
fmuls
ljmp
dec
or
hlt
dec
ja
dec
sarl
cmc
xor
cmpsb
mov
enter
fs
outsb
jae
out
pop
pop
in
pop
and
or
movsb
mov
xchg
pop
fs
rorl
push
sbb
data16
and
leave
sbb
mov
mov
xor
inc
or
mov
cmp
fistps
cs
inc
shrb
insb
inc
lahf
mov
push
movsb
mov
das
mov
mov
and
pop
out
in
rolb
jl
cli
or
push
cmp
mov
add
and
lret
lock
xchg
adc
jle
mov
jb
repnz
aam
inc
pop
fcomps
rclb
add
sti
jns
cwtl
add
cli
sub
push
add
inc
in
adc
enter
push
mov
subb
push
xchg
jg
mov
push
fiaddl
js
insb
jle
div
push
sbb
dec
fldcw
inc
out
stos
adc
or
imul
scas
lea
sub
push
sahf
out
inc
bound
or
jle
hlt
xor
jecxz
dec
mov
mov
fiadds
add
push
add
shll
repz
lcall
lods
xor
pop
nop
mov
xchg
jbe
movsb
cmc
mov
push
js
inc
push
add
std
push
cwtl
in
sbb
adc
popa
xchg
stos
dec
jge
call
shrb
ret
sbb
lods
inc
repz
jo
fidivl
popl
ja
pop
in
cltd
enter
fwait
xchg
iret
mov
push
imul
in
lods
pop
ret
test
cmp
aas
clc
sub
jecxz
lcall
push
jns
lret
gs
data16
lcall
mov
ficoms
cmp
lret
lock
aas
ds
rcrl
inc
dec
xor
movsb
stos
stc
insb
pop
movb
jmp
mov
add
hlt
js
and
inc
push
shll
xchg
out
mov
sbb
adc
clc
mov
sbbl
mov
mov
cld
int3
lret
push
mov
mov
lds
std
fdivs
xchg
xor
lock
data16
inc
fwait
mov
mov
jle
mov
loope
jmp
or
cmp
cmp
mov
xchg
mov
mov
test
mov
cmp
arpl
xor
cmp
sbb
out
inc
aaa
loop
lea
out
fidivrs
pop
sarl
jb
pop
mov
popf
int
sti
and
push
cwtl
mov
pop
clc
jbe
repnz
test
in
jae
js
pusha
mov
adc
mov
add
inc
adc
fs
push
sub
fldenv
xor
mov
scas
outsb
in
pushf
push
aaa
push
clc
cmpxchg
xchg
insl
icebp
sahf
push
outsl
add
mov
jmp
dec
les
sbb
pop
cltd
mov
xchg
jb
push
nop
xchg
leave
and
fcomps
xchg
daa
ds
js
andl
cmp
stos
test
cmpsb
pop
and
andl
subl
dec
adc
jne
icebp
addb
gs
fildll
push
xlat
push
adc
loope
sti
aas
arpl
out
inc
repz
nop
shrl
inc
sbb
ret
clc
push
cltd
cli
ljmp
rcll
ret
enter
push
sbb
cmp
fmull
aam
push
in
into
in
push
stos
dec
fldcw
jne
pop
out
jecxz
sti
js
jae
movsb
cs
dec
push
stc
dec
and
call
or
fdivrs
fisubl
pop
mov
outsb
xchg
iret
xchg
mov
dec
adc
inc
jmp
pop
mov
loop
ret
sbb
sub
inc
scas
adc
pop
adc
cmp
insl
add
mov
lcall
or
test
je
push
add
ss
mov
or
aam
jae
outsl
aam
inc
pop
sub
ret
xchg
xor
fdivrs
dec
sub
movb
xor
dec
ss
cmc
stos
js
sbb
jne
out
and
mov
dec
mov
jmp
inc
shl
fxch
sbbl
dec
or
mov
xchg
mov
cwtl
cmp
push
movsb
call
ss
dec
es
pop
xlat
inc
je
test
lods
mov
sbb
stos
insb
rcr
or
or
adc
ds
out
js
dec
loop
lret
mov
arpl
mov
cmp
andl
adcl
rclb
lea
mov
mov
movsb
mov
jno
stc
mov
into
ror
xor
adc
adc
xchg
popa
lds
movsl
in
out
inc
cmp
mov
jp
insb
lock
pop
and
xchg
push
testl
out
pop
mov
push
lods
mov
aaa
loope
mov
rcl
mov
and
adc
xorl
movsl
mov
lods
jae
loope
ljmp
test
cs
scas
scas
leave
mov
inc
xchg
in
inc
mov
ss
push
fbld
pop
enter
negl
adc
push
lcall
mov
imul
aad
insb
mov
push
cmp
mov
push
pop
add
js
mov
jo
push
popl
xor
sbb
sub
pop
cs
cmc
arpl
testl
outsl
push
test
bound
cmp
cld
jg
loopne
adc
push
shrl
loop
jne
jno
add
movsl
ja
push
nop
cmp
xor
mov
mov
fisttpll
lods
hlt
ljmp
cwtl
nop
movsb
xchg
cld
cs
sub
cmp
jecxz
mov
push
mov
addr16
and
pop
outsl
bound
out
fs
push
popf
das
pop
adc
mov
xor
ss
jbe
leave
dec
stos
jge
mov
movsl
sbbl
or
dec
lahf
xchg
popa
jae
xchg
or
mov
pop
cmp
and
cld
mov
aas
sbb
xchg
pop
xchg
push
jg
sub
stos
pop
xchg
inc
push
mov
cmp
fwait
sub
mov
mov
sti
test
outsl
fbstp
xor
pop
hlt
ljmp
rorl
movsb
call
inc
jp
jle
test
cli
ret
sub
int
pop
ds
mov
and
push
popa
pop
icebp
or
sbbb
pop
fwait
testb
addr16
nop
mov
xchg
into
inc
cmpsb
fstps
fistl
adc
mov
lret
scas
mov
into
and
push
inc
jl
mov
out
das
inc
hlt
jge
pop
sbb
inc
call
jne
bound
pop
js
loop
cmpl
xchg
jle
divl
stc
int
stc
movsl
lds
pop
sarb
jae
xchg
cwtl
out
mov
pop
adc
xor
shll
add
sub
cld
mov
mov
scas
adcb
or
dec
sub
xchg
inc
inc
rcr
inc
and
push
vmovaps
pushf
sbbb
int3
mov
sbb
pop
outsb
sahf
jns
add
bound
pusha
out
orl
xor
addl
push
sbb
and
dec
adc
test
lcall
pop
enter
ss
push
push
in
xchg
xlat
je
pop
or
xor
into
or
sub
sbb
pop
sarl
pop
lock
popf
xor
jge
das
add
jmp
cmpsl
testb
dec
lods
cmpb
popa
aad
int3
push
nop
lea
enter
popa
fs
bound
aam
popf
jg
sarb
shlb
jno
ret
lea
mov
mov
sahf
pop
sub
and
lods
ss
rorl
aas
testb
jl
cmp
xchg
dec
or
and
mov
fcompl
das
inc
les
mov
aaa
sub
out
daa
jb
arpl
xchg
and
mov
mov
je
xchg
mov
idivl
inc
pop
addl
pop
sub
sbb
pop
dec
sbb
jns
popf
sbb
test
push
dec
add
stos
into
jle
sarb
adc
insl
lahf
jmp
jb
push
stos
cmpsl
jle
xor
pop
adc
jge
dec
in
mov
gs
scas
sub
jmp
dec
dec
and
push
fistps
mov
mov
and
std
push
adc
ds
sbb
mov
fistpl
popf
push
pop
rcrl
adc
idivb
push
xchg
aas
inc
mov
cwtl
or
xchg
lret
adc
ss
call
add
adc
pusha
and
sbb
ljmp
repz
fiaddl
mov
pop
leave
jnp
andb
sub
lock
mov
rcrl
xchg
imul
pop
add
adc
jnp
and
or
jecxz
pusha
pop
sbb
in
xor
inc
sbb
sahf
iret
stc
arpl
clc
add
mov
sbb
lods
addr16
inc
jp
and
cmp
mov
call
xor
inc
mov
imul
pop
mov
fwait
jmp
daa
pop
movsb
mov
xor
sbb
mov
xor
mov
or
sbb
xor
dec
jmp
cli
cmpsl
cld
mov
in
rcl
push
cmp
push
dec
and
jge
lea
arpl
jge
leave
dec
cli
mov
aam
push
dec
and
in
dec
jle
out
xchg
gs
repz
sub
cmp
mov
jbe
mov
push
pop
mov
jl
pop
in
std
adc
movsl
jne,pt
mov
push
mov
pusha
push
push
adc
xchg
or
nop
mov
enter
repz
xor
jns
icebp
mov
mov
adc
in
sar
sbb
xor
les
pop
xchg
out
mov
dec
push
ljmp
mov
mov
and
push
sbb
loopne
data16
or
bnd
cs
in
or
jne
rolb
adc
and
jno
test
in
dec
mov
fs
xor
je
pop
loop
sub
lahf
movsl
shr
add
outsb
lock
cmpsl
mov
adc
ja
xchg
lods
fs
gs
and
cmp
adc
test
fidivs
and
sub
cmc
dec
pushw
sbb
mov
imul
push
pop
je
cmp
and
and
js
mov
push
and
lahf
push
fnstenv
mov
cmpsb
pop
jl
inc
sbb
mov
sbb
mov
sub
out
pop
xchg
filds
and
pusha
aaa
cwtl
mov
aam
into
and
inc
cwtl
inc
cmp
cmp
jmp
and
lock
dec
add
jge
mov
pushf
lcall
xlat
dec
outsb
pushf
loop
fadds
jg
stc
add
push
popf
dec
pop
andb
xchg
repz
mov
call
cmp
daa
mov
jecxz
faddl
std
dec
int
pop
nop
mov
arpl
mov
bswap
sbb
loope
mov
xor
xchg
in
in
mov
push
sbb
dec
js
out
pop
push
xchg
cmc
adc
outsb
cmpb
data16
mov
or
lock
mov
outsb
fsubrs
sub
pop
xor
out
daa
mov
aad
sub
bt
adc
sbb
adc
cmp
mov
bound
ljmp
ret
ja
outsb
pop
pop
adc
jne
or
fadd
not
xor
test
hlt
imul
pop
lea
outsl
je
or
mov
xor
sbb
dec
in
dec
and
push
aad
inc
and
inc
and
arpl
testl
add
push
rep
inc
es
and
pushf
pop
sbb
out
lds
jo
jno
out
inc
cmp
xchg
mov
rorb
fmull
or
in
dec
das
test
mov
ficoms
mov
mov
test
xor
aad
in
pop
insb
jmp
loope
mov
and
pop
ficompl
add
push
dec
aas
push
and
pop
aas
sbbl
xchg
inc
rolb
loop
mov
out
jle
cs
mov
daa
rcrl
push
xchg
sub
fwait
lock
fwait
arpl
push
bound
sbbl
cmp
add
imul
lock
imul
nop
insb
or
jmp
xchg
leave
xor
sub
outsl
push
sub
enter
mov
xor
in
sub
scas
mov
inc
ss
xor
lret
jns
lds
bound
dec
and
stos
xor
and
jae
insb
xor
adc
in
mov
xlat
icebp
in
shrb
xchg
cmp
bound
sbb
in
adcl
stos
pop
outsb
lock
sub
pop
sub
mov
mov
push
mov
mov
inc
inc
ds
push
imulb
aam
lods
sahf
ret
js
lds
icebp
lds
idiv
adc
dec
lret
insb
nop
popf
lahf
test
xlat
lret
outsl
pop
adc
mov
jbe
inc
scas
and
mov
or
jecxz
or
hlt
iret
and
push
ret
aad
ja
push
jg
pop
scas
fsubrs
stos
rclb
pushf
stos
pop
cmp
or
and
fisubl
ljmp
adc
fcomps
pushf
cltd
sbb
or
adc
xchg
lret
xchg
mov
scas
mov
inc
adc
sub
sbb
out
lock
das
mov
ljmp
sar
sbb
push
pop
sub
and
and
push
pop
std
xchg
pop
movsb
popa
shl
push
jp
lret
pop
mov
ljmp
jbe
xchg
mov
lock
and
es
in
mov
jbe
js
xchg
loopne
dec
fwait
enter
nop
in
fcomip
stc
add
fstpl
fsubrs
lahf
cmp
xchg
shrl
dec
orb
mov
inc
sbb
dec
push
in
dec
push
xchg
aaa
jnp
js
fiaddl
dec
cmpsb
cmp
enter
jecxz
or
hlt
arpl
bswap
aad
insb
push
test
cmp
imul
add
jbe
sbb
lcall
push
stos
adc
sub
dec
xor
jo
in
loopne
push
pop
cli
xchg
and
cmp
pop
into
fwait
into
scas
scas
clc
mov
xor
or
jge
jnp
adc
cmp
dec
aaa
push
mov
cmpsl
test
jmp
sub
jmp
mov
cmp
push
and
jmp
lahf
lret
pop
adc
mov
test
mov
push
mov
push
push
cmpsl
xor
lret
enter
lcall
pushf
repnz
sub
in
arpl
adc
push
sub
xchg
mov
adc
xlat
icebp
xor
pusha
mov
mov
in
pop
daa
jae
aaa
and
cmc
dec
cmp
sub
pop
cmp
je
dec
je
sbb
mov
push
fldl
cli
xlat
shrl
pop
pop
add
jo
aas
scas
cmpsb
cmp
mov
xor
jecxz
cs
lret
insb
aad
and
pop
outsl
aam
in
adc
int
je
or
cli
mov
lods
movsb
pushf
sub
sub
fists
xchg
scas
leave
ffreep
rcrb
push
pop
call
stos
mov
adc
rorb
ror
enter
lahf
dec
xor
adc
push
aas
in
jbe
rcrb
bound
pushf
in
jecxz
addr16
sbb
cmp
xchg
push
push
gs
sbb
push
lock
lds
mov
push
inc
xchg
mov
pop
pop
gs
push
jp
loopne
in
mov
inc
inc
mov
movsb
cltd
sbb
cmp
shrb
mov
xchg
lret
jno
fistl
fbstp
aad
sbb
and
lea
lahf
loope
iret
mov
push
lcall
clc
jp
push
pop
or
in
in
or
xlat
out
add
mov
test
or
mov
xchg
fistps
enter
push
mov
aad
mov
jno
adc
jno
sub
cwtl
inc
scas
lcall
sub
xlat
rol
pusha
push
data16
inc
cmp
cwtl
pop
push
ret
dec
scas
shr
mov
dec
inc
pop
lahf
imul
lcall
daa
jmp
das
mov
sub
dec
cmp
mov
nop
rorb
dec
das
test
in
or
mov
insb
and
push
call
ret
dec
xchg
inc
pop
and
xor
outsb
mov
jge
jcxz
fimull
xchg
dec
data16
sub
lret
xchg
dec
sbb
je
inc
push
pop
cwtl
xchg
or
pop
pop
test
and
xchg
sbb
jo
cltd
outsl
sub
sbb
pusha
cli
and
fwait
shll
inc
cmp
imul
pop
sbb
arpl
addr16
add
mov
dec
popf
xchg
or
dec
xor
popa
ljmp
adc
test
rclb
inc
mov
das
mov
xchg
pushf
shll
mov
mov
rcl
cld
jno
dec
daa
in
clc
sub
lret
inc
push
cltd
mov
movl
jnp
test
or
cmpsl
jecxz
and
xor
pop
aas
mov
sbb
loope
sub
jb
mov
sub
fcompl
inc
aaa
mov
inc
jle
xor
mov
lcall
pop
sub
mov
adc
stos
loop
cmp
jne
adc
sti
fcompl
gs
mov
js
adc
push
push
into
nop
jge
and
inc
mov
lret
xchg
in
mov
dec
mov
jp
sbb
movsb
jle
ret
jmp
bound
inc
mov
out
popa
shll
fsubl
sub
cmc
icebp
les
popa
or
clc
in
aad
mov
cmp
es
xchg
aas
fucom
xor
les
cmpb
push
popa
popa
shlb
mov
pop
xchg
push
and
push
popf
inc
jl
mov
rcll
insb
cmpsb
rclb
adc
xor
loopne
xchg
push
js
jl
pop
jmp
je
jo
jo
inc
sbb
shll
negb
pushf
push
or
stc
dec
inc
adc
shlb
jb
adc
xchg
push
mov
outsl
cs
jb
mov
mov
and
aaa
or
lret
js
loope
xor
dec
adc
enter
dec
loope
mov
jne
push
fcmove
sub
sub
pop
dec
leave
adc
fimuls
cld
jns
sbb
ljmp
in
fldcw
xchg
inc
insl
lds
fcoms
inc
add
test
lcall
lds
pop
mov
ja
mov
or
dec
xchg
aad
pop
mov
icebp
aad
xor
jecxz
or
sbb
push
ja
sub
pop
aam
xlat
lret
daa
xchg
push
jns
fildl
pop
aad
cmpsl
pop
outsl
push
sub
mov
push
mov
push
fsubp
int
in
es
and
mov
shlb
xchg
add
jecxz
inc
ret
sbb
repz
push
gs
mov
sbb
pop
xchg
push
outsb
jo
push
imul
arpl
xor
in
cmc
mov
in
lods
xchg
push
cmpsl
push
dec
in
jns
sub
cmc
and
int3
add
daa
jecxz
dec
stc
fdivs
and
inc
and
cmp
das
add
in
call
push
movl
pop
dec
mov
mov
cmc
stc
xor
lahf
cli
pusha
jmp
or
loope
xchg
xchg
inc
xor
int
insb
mov
hlt
into
cmp
cmp
mov
pop
inc
jp
push
pop
fcompl
xchg
mov
cmc
sbb
int
add
push
xchg
ja
or
mov
out
pusha
xchg
adc
xorb
cmp
and
xchg
je
adc
sub
cwtl
icebp
mov
and
sahf
jp
inc
adc
leave
mov
sub
std
das
fsubr
popf
fisubl
push
rcrl
jnp
push
add
xchg
sub
mov
mov
pop
outsb
adc
idivb
dec
addr16
dec
pop
adc
jge
test
arpl
and
aaa
loope
and
mov
cmp
enter
cwtl
das
push
mov
ds
add
xchg
stos
mov
into
mov
xchg
loope
outsl
aas
fcoms
adc
stos
xchg
int3
adc
repz
aam
scas
repnz
lds
adc
push
or
aad
lret
ficomps
imul
or
pop
mov
cmp
cltd
jmp
xlat
outsl
sub
stos
dec
and
loope
add
cli
mov
movsb
pop
and
sbb
sub
xchg
pop
sbb
lret
xchg
push
fistpll
xchg
je
les
test
sahf
mov
into
out
pop
insl
mulb
mov
out
enter
adc
int
daa
popf
jecxz
mov
in
std
jno
daa
mov
sub
xor
iret
stos
test
inc
pushf
jne
push
push
insb
inc
mov
xchg
lea
ret
jmp
dec
sbb
daa
jmp
cmpsb
mov
aas
fldt
in
inc
test
inc
lahf
mov
pushf
adc
pop
mov
cmp
cmpsb
or
xor
pop
xchg
pop
popf
cli
inc
iret
mov
mov
mov
adc
hlt
fs
je
push
sahf
andps
roll
inc
and
int
jg
mov
jp,pn
dec
popf
adc
ja
mov
jl
adc
pop
rcrb
mov
adc
nop
jns
add
test
mov
iret
inc
and
push
test
aam
push
test
sbb
ret
sbb
shr
sbb
enter
in
sbb
shrb
fidivrl
mov
sarb
push
nop
push
or
inc
fnstenv
int3
repz
sahf
xchg
insb
mov
adc
mov
push
sahf
fs
outsl
sbb
xchg
call
push
enter
xor
add
arpl
xor
ss
sbb
pop
mov
sub
int
pop
das
out
pop
pop
and
ret
test
cmpb
xlat
sub
daa
std
cmpsl
or
cltd
fucomp
insb
mov
adc
pop
and
add
or
add
add
inc
rcrl
lea
and
test
jb
outsl
lea
cmp
popf
mov
adc
ja
cmp
pop
jecxz
mov
sbb
fidivs
cwtl
inc
push
pop
fcompl
push
pop
clc
cmp
jne
jo
ds
aam
aaa
insl
iret
inc
mov
sub
xor
xchg
jp
mov
push
mov
adc
mov
cli
jge
mov
scas
rcrl
push
dec
and
sbb
add
push
call
mov
loopne
fdivr
push
sahf
rclb
cmp
cmpsl
dec
ud1
shrl
add
int
dec
mov
ror
lea
out
pop
bound
adcb
ret
stc
jmp
icebp
shrl
aad
add
xchg
and
test
push
cltd
fsubrl
sbb
decl
mov
dec
stos
leave
orl
scas
fstpt
inc
rol
push
call
test
cmpsb
push
pop
add
test
mov
adc
mov
lods
sbb
aas
repnz
fstps
jle
sbb
or
cmp
fs
es
xor
push
pop
cmp
lret
leave
push
sub
pop
fcmovbe
loopne
addr16
idiv
repz
jp
repnz
adc
mov
xor
push
data16
jle
daa
add
and
or
fdivl
push
pop
or
popf
add
lea
or
jp
dec
add
xchg
ja
mov
and
dec
jle
mov
shl
xor
dec
push
sub
xchg
xchg
dec
or
pop
scas
jl
sahf
mov
xchg
cmpsb
cmp
mov
xchg
sbb
notl
stos
pusha
stos
les
in
out
inc
imul
hlt
or
jne
cmpsl
sbb
sub
incb
aam
or
and
out
sub
jle
insl
mov
mov
mov
loopne
sbb
stos
pushf
fisubl
fsubr
sub
jno
dec
xor
mov
and
lock
cmc
insl
or
js,pn
adc
and
mov
inc
xchg
out
pop
push
inc
call
jg
ret
push
xchg
jge
fucomp
rcr
cmp
leave
cmc
adcb
or
jbe
dec
aas
mov
rolb
fdiv
pop
je
nop
sti
mov
int3
dec
subl
out
jge
inc
bnd
cmp
out
daa
push
cli
push
inc
aad
mov
pop
sbb
inc
sti
cmp
rcr
fwait
xchg
clc
imul
cltd
ret
mov
cltd
push
mov
popf
call
mov
sub
lea
pop
inc
or
and
out
mov
outsb
or
cmpsl
and
jno
push
cmp
mov
inc
inc
push
int
enter
mov
mov
out
inc
nop
enter
insb
mov
movsb
testb
out
xor
pause
xchg
push
pusha
fwait
jno
adc
xchg
mov
xchg
xchg
xchg
rolb
outsb
inc
rcll
sar
xchg
out
out
enter
dec
leave
out
cmp
pop
push
leave
fsubrs
sbb
pop
push
subl
outsb
cmp
cmp
data16
repz
mov
gs
xchg
mov
fs
std
test
or
arpl
add
leave
frndint
je
push
mov
sub
inc
bnd
add
andb
and
mov
ret
in
inc
adc
xor
sbb
mov
imull
sbb
ljmp
gs
jbe
xchg
icebp
pop
lcall
dec
mov
fs
sub
xor
out
or
dec
or
pop
add
push
fwait
daa
ss
repz
push
add
lret
das
ds
push
inc
push
pop
sbb
jo
inc
ja
incl
clc
push
lods
sub
jb
data16
emms
sbb
aam
sbb
sbb
inc
push
data16
imul
dec
aas
dec
mov
les
mov
sub
nop
inc
test
outsl
sub
cmp
in
iret
pop
and
cmpsl
arpl
pop
push
push
mov
les
xor
les
mov
dec
dec
lock
popa
out
xor
test
test
pusha
adc
fiaddl
enter
adc
jge
jo
pop
add
add
cmp
ljmp
pop
stos
rorl
jo
fsubs
cmp
xlat
sti
out
jp
push
ror
mov
dec
aad
mov
mov
pushf
rorl
mov
mov
test
push
rolb
push
adc
xchg
pop
testl
fsubl
loopne
xor
xchg
dec
mov
stc
cmp
inc
cmc
push
ss
adc
stos
rcr
ret
mov
lock
popf
jnp
and
das
mov
lea
scas
aam
nop
hlt
or
mov
ds
out
nop
jno
mov
hlt
xor
sub
sahf
ja
sbb
jae
inc
and
loopne
roll
imul
enter
pusha
gs
rorl
dec
inc
adc
aam
and
aaa
dec
cwtl
fdivrs
and
repz
lahf
dec
cmc
jnp
xor
ja
lcall
jb
and
out
int3
cmp
jecxz
jle
lock
push
mov
and
clc
loope
adc
cmp
pop
cmp
adc
mov
cmp
cmp
fwait
ds
push
mov
mov
in
pushf
dec
sub
rcrb
xchg
sahf
stc
out
jmp
aas
fldpi
mov
jbe
cltd
mov
and
sqrtps
push
bound
fisubrl
mov
fiadds
sti
cmp
out
in
xchg
out
sbb
sub
jle
cli
xchg
sub
imul
push
pop
icebp
and
stos
lock
mov
mov
push
mov
test
cmc
in
cmp
clc
nop
and
outsb
pop
enter
cmp
imul
xor
dec
or
shlb
test
jge
xchg
scas
add
test
mov
roll
imul
negl
mov
fimull
xor
and
sub
pop
sub
lods
cmp
add
in
mov
xor
jo
lret
pusha
leave
dec
or
push
shll
xchg
aad
xlat
cmp
out
dec
test
jnp
shll
icebp
adc
lcall
xchg
xchg
mov
out
dec
sub
stc
cmpsb
outsl
in
mov
pop
test
pop
mov
mov
dec
pop
andl
or
ret
lods
push
xor
jge
loop
pop
ja
inc
nop
pop
or
mov
sub
sub
in
xsha256
cmpsb
pop
mov
lea
lahf
es
out
movsb
mov
pop
scas
jnp
fs
push
into
mov
mov
ds
stos
xlat
pusha
push
cwtl
jle
movsl
jno
jl
push
lret
or
and
adc
dec
mov
pop
js
nop
jae
in
mov
mov
fsubrs
xchg
mov
xchg
aam
sbb
stc
in
push
add
test
xchg
pop
jne
xor
sbb
adc
dec
ja
stos
out
lret
sbb
int3
pop
cwtl
or
pop
daa
or
xlat
xchg
cmp
subb
or
leave
scas
icebp
mov
jno
popf
cs
mov
and
push
test
jg
cmc
mov
ljmp
lock
lea
mov
sub
or
scas
leave
or
repz
cmp
xchg
jae
lock
jle
scas
or
pushl
mov
xchg
pop
adc
pop
and
pop
or
add
ljmp
mov
mov
out
sub
and
fcompl
push
in
movsb
pop
ds
repz
xchg
fprem1
mov
aaa
movups
imul
cltd
dec
test
les
mov
stc
sub
add
and
mov
inc
mov
adc
pop
loope
push
mov
sbb
xchg
pop
add
out
inc
sub
lret
xor
cli
push
lcall
pop
inc
xor
inc
icebp
paddb
das
aas
mov
cmp
jp
jne
fisttpl
fisttpll
je
or
in
ja
mov
sub
add
cmc
in
cmp
scas
test
idivl
pop
dec
aad
iret
push
jb
mov
mov
jl
leave
iret
push
add
jge
mov
loopne
add
mov
fimuls
into
cmc
jnp
sbb
sbb
cmpsb
shrb
pop
les
test
mov
sbb
aad
mov
sub
xchg
mov
mov
mov
jl
mov
test
mov
and
sbb
pop
pop
mov
movsl
mov
push
xchg
arpl
inc
loope
lock
inc
xchg
addr16
or
jbe
fisttpll
lods
pop
pop
xor
pop
inc
ja
mov
call
and
xchg
test
xchg
andb
adc
stos
add
sbb
add
dec
aam
pop
jmp
insl
insl
leave
aas
and
movsl
pop
out
mov
aas
clc
mov
jmp
xchg
add
or
aad
loop
mov
popa
adc
sub
xlat
jnp
lock
jp
test
cmp
rcll
addr16
in
mov
jle
iret
sub
cmp
imul
jmp
in
or
lcall
cltd
push
xchg
push
or
push
adc
mov
adc
mov
inc
adc
data16
or
jo
leave
jns
repnz
add
sbb
jo
xor
add
out
repz
mov
rorl
ds
mov
and
dec
sbb
mov
outsl
mov
icebp
mov
fcomps
cli
ret
fwait
cltd
test
cmp
ret
fwait
in
jmp
inc
mov
mov
test
dec
icebp
ljmp
idivl
jge
add
popa
or
subb
cmp
xchg
repz
cli
je
push
fmulp
sub
inc
and
in
mov
mov
jnp
gs
gs
mov
add
ss
nop
push
push
inc
add
enter
in
imul
jmp
inc
cwtl
dec
pop
mov
jg
xchg
pop
pop
cld
inc
out
xchg
aam
idivb
jae
ret
or
test
gs
outsl
dec
mov
mov
mov
loope
push
inc
stc
nop
nop
sub
sar
and
or
add
in
iret
jnp
loopne
adc
movsl
push
cld
cmp
aaa
jmp
in
mov
jne
imul
push
adc
mov
aam
jecxz
pop
add
xor
jle
cs
pop
push
sub
xchg
and
add
inc
or
cld
movsl
pop
dec
bound
adc
js
adc
pop
mov
jp
push
out
loope
and
xchg
cltd
test
mov
cltd
adc
rcrl
icebp
in
pop
popf
jmp
and
ret
test
stos
dec
pop
xchg
push
dec
inc
cmp
and
mov
cmp
cs
sbb
pop
dec
jno
ror
das
mov
cmpsb
push
sbb
jmp
add
rcll
cli
jge
arpl
mov
push
jo
out
mov
or
pop
jb
imul
ja
xor
push
das
daa
in
or
in
aam
mov
fninit
fcmovnbe
xor
push
orb
outsl
push
outsb
sbb
pushf
in
jmp
dec
cmpsl
aaa
mov
cmpsb
cmp
pop
push
rorb
in
rcpps
and
xchg
jp
imul
sub
ja
js
bound
jno
scas
xchg
shlb
pop
stos
pusha
andb
ret
ret
jge
mov
ja
ds
sub
out
cmp
loopne
add
repnz
xor
jl
mov
push
out
mov
dec
push
jmp
lds
lods
xchg
scas
ror
cld
inc
insl
movsl
pop
pop
lcallw
and
faddp
pop
arpl
dec
adc
shl
xchg
add
push
mov
adc
push
sbb
addb
jbe
jnp
mov
jb
mov
add
out
push
adc
cmp
outsb
mov
inc
adc
aas
sub
sbb
adc
mov
or
lret
out
xchg
rorb
in
es
xor
xlat
add
mov
mov
inc
data16
sub
mulb
pop
mov
mov
into
pop
xchg
loope
adcb
sub
jmp
out
ret
test
or
ss
into
jne
jo
xor
mov
xchg
out
xchg
in
fidivrs
or
sub
mov
cmp
scas
dec
jg
inc
into
out
xchg
and
mov
add
pop
clc
or
jp
mov
pop
fistl
cld
ja
stc
add
pop
scas
xchg
pop
inc
lcall
xchg
push
int3
gs
int
push
push
sub
or
ljmp
pop
andl
pusha
cs
out
mov
or
not
loope
cld
test
mov
and
cmc
or
insb
arpl
xor
dec
int3
inc
cmpsl
movsb
popa
push
ljmp
pop
mov
fsubs
ja
pop
mov
pusha
ds
int3
push
dec
or
and
pop
xchg
xchg
mov
jp
iret
fidivl
mov
cmpsl
loope
in
mov
push
aam
cli
xor
xchg
jae
out
xchg
mov
and
mov
inc
or
data16
xor
lret
into
ja
dec
adc
js
ljmp
pop
sub
or
push
lret
xchg
cli
mov
xchg
xchg
cmp
mov
mov
dec
mov
jae
mov
push
loopne
adc
ss
das
jns
sbb
ljmp
jmp
jmp
add
jno
push
cmpsb
push
in
lea
fcoml
orb
jecxz
loop
ja
sub
cmp
push
pop
add
or
add
sarl
xor
sti
sub
inc
dec
subb
fimull
and
dec
in
cltd
es
leave
icebp
mov
arpl
xorb
mov
inc
fxch
loope
scas
aas
add
sbb
xchg
pop
adc
test
shlb
es
add
mov
xor
jnp
cmc
cmpsb
or
data16
lods
pop
cmp
jnp
sbbb
mov
push
repz
sub
iret
enter
push
push
mov
pop
xor
xor
ljmp
rorb
into
jo
pusha
xlat
xor
push
loopne
ss
xchg
aaa
shl
sub
pop
xor
cltd
xchg
push
mov
sbb
push
lcall
sbbl
sar
sahf
test
fdivrs
paddq
push
imul
out
sbb
data16
sbb
inc
xor
push
stc
jmp
jns
jle
xchg
pop
sbb
lahf
mov
icebp
jmp
sub
ret
lahf
lret
jecxz
out
orl
jb
subl
out
ds
pop
imul
push
insl
shrl
jb
xor
cmp
jg
lock
je
outsb
out
cmpsl
mov
in
mov
jge
mov
jns
push
sub
cmpsl
cmp
mov
push
push
adc
jno
jmp
push
jmp
mov
jecxz
jge
in
lock
pop
mov
sub
mov
sub
mov
pop
pop
pop
insl
pusha
xchg
pop
mov
jge
outsb
ret
test
popa
dec
insl
push
popa
add
cli
cmp
stos
push
mov
sahf
jge
pop
gs
addl
mov
fs
fcmovu
insb
xor
lahf
insl
jge
iret
scas
movsl
leave
stos
leave
jne
and
aas
sub
lcall
pop
mov
xor
dec
xchg
jne
call
jp,pn
add
adcb
into
outsl
dec
inc
pop
mov
pop
out
movsl
sub
orl
dec
mov
jno
lret
push
popf
jbe
xchg
and
mov
jo
leave
lret
ret
repnz
frstor
xchg
cmp
div
stc
lods
ret
add
push
cmpsl
cmpsl
inc
addb
test
push
cmpsl
mov
and
out
sub
subl
daa
in
push
sahf
sub
mov
mov
pushf
stos
pop
and
push
xor
ja
cmpsb
sub
mov
dec
mov
xchg
stos
ja
push
dec
cltd
ja
mov
sahf
jb
fmuls
xchg
cmp
mov
imul
and
xchg
pusha
and
or
xchg
xor
mov
cmc
lock
sarb
mov
xchg
loop
cmc
mov
roll
clc
cmc
push
dec
or
jmp
xor
xchg
jns
mov
bound
int3
push
shl
iret
mov
jns
xchg
or
out
shll
sarl
and
and
xor
mov
outsl
mov
inc
cmp
mov
flds
movsl
dec
or
dec
sbb
rorl
icebp
mov
je
push
jne
icebp
ja
push
jns
push
adc
stos
push
push
pop
mov
inc
cmpsb
xchg
ficoml
pop
mov
mov
pop
dec
stc
inc
sub
jbe
mov
mov
aas
loop
insl
data16
jbe
andl
push
lret
push
xor
gs
call
pop
sub
push
mov
mov
cmpsl
popf
jo
leave
dec
adc
xchg
add
xchg
xor
inc
iret
lea
jl
jl
jl
sbb
inc
rcr
ljmp
jnp
or
hlt
add
pop
inc
inc
xor
xchg
inc
push
sub
xchg
and
insb
inc
imulb
out
mov
xchg
adc
sbb
movsl
push
lret
adc
or
mov
pop
rcr
cltd
jge
dec
cmp
jle
or
mov
sub
movsl
xor
push
mov
sbb
pop
cmpsl
insl
mov
adc
xor
add
enter
cli
dec
push
fisubrl
cwtl
fidivl
outsl
mov
js
jns
pusha
inc
lcall
in
shrb
pop
mov
sbb
add
dec
sbb
jmp
andb
mov
and
enter
enter
push
jnp
sbb
cmpsb
dec
je
jle
mov
dec
push
jo
scas
popa
sbb
cmp
cli
xchg
xchg
jle
and
jne
xor
cwtl
jno
out
push
dec
cmpsl
das
or
mov
inc
xchg
xor
xor
mov
sahf
out
sbb
rorb
sub
jns
js
and
dec
mov
rorl
sti
mov
and
sub
xchg
mov
sahf
sbb
dec
movsb
xor
mov
push
insb
in
jp
push
dec
mov
adc
xlat
add
xor
idivb
sti
or
fsubrp
xlat
fcom
pop
loop
dec
stos
mov
jmp
repz
adc
add
sbb
xor
sub
cld
mov
jp
or
nop
pop
mov
push
into
mov
mulb
xlat
adc
push
les
adc
dec
scas
outsb
pop
cmp
mov
cmp
cmpsl
fistl
test
inc
mov
pop
imul
add
and
test
test
inc
jmp
mov
movsb
into
aam
push
sbb
adc
shufps
push
push
lea
pop
scas
or
out
and
dec
add
add
incl
sub
adc
sub
icebp
sbb
jnp
push
add
ss
icebp
xor
mov
std
ds
add
mov
cwtl
sbbb
scas
ljmp
dec
cmp
js
adc
jnp
cli
xchg
scas
push
out
push
cmc
insb
lret
push
mov
fsts
ss
lds
arpl
dec
mov
sbb
dec
push
addr16
jg
add
fstpt
cmp
and
mov
jle
popa
sbb
sub
sbb
scas
pop
aaa
in
push
mov
xorb
je
es
bound
repz
adc
sub
daa
scas
add
call
or
in
incb
jne
nop
loope
shlb
repnz
in
fwait
xor
movsl
lods
sbbl
inc
xchg
or
sbbb
inc
int3
cwtl
push
push
std
cmp
push
push
bound
push
js
aad
mov
dec
mov
cmp
adc
aad
fld1
lods
sbb
popf
or
cltd
and
fidivrl
lcall
xlat
adc
pop
hlt
lea
push
xchg
jno
clc
lock
and
dec
scas
mov
sbb
or
pop
cs
cmp
push
dec
ret
incl
xchg
push
lock
mov
leave
sub
enter
or
xor
in
test
mov
mov
das
mov
int3
aad
push
push
mov
cmp
adcl
push
cmp
sub
inc
aas
lock
mov
ljmp
cmp
test
xchg
sbb
mov
loopne
jge
int3
adcb
mov
xor
jg
lea
scas
jbe
mov
rcr
mov
sahf
adc
ret
testb
out
jmp
ret
and
sbb
test
inc
dec
and
mov
sub
and
push
mov
mul
es
test
lcall
sbb
xor
nop
out
ret
shrb
gs
dec
xlat
cmpsb
repnz
mov
cmpl
outsl
cmp
out
cmp
loop
inc
push
inc
stos
sub
and
inc
inc
imul
mov
fwait
inc
insb
push
lods
fs
xchg
dec
rorb
in
xchg
adcl
or
add
call
inc
push
arpl
fsts
rolb
imul
or
sub
lret
mov
ret
jne
js
mov
sbb
rcrb
or
test
cmp
add
aam
iret
cltd
pop
pop
dec
stos
insl
cmpsl
pcmpeqw
jnp
xchg
mov
ljmp
aas
adc
cli
mov
aad
mov
xchg
add
or
pcmpgtd
outsl
adc
int
je
pop
mov
cltd
hlt
loopne
mov
scas
jnp
in
das
mov
test
sub
or
push
xor
repnz
jecxz
push
push
dec
sbb
xchg
or
inc
xor
insl
xor
xlat
lahf
mov
and
cmp
mov
push
in
aam
sbb
add
js
xchg
hlt
or
outsb
stos
adc
adc
and
adc
frstor
add
jbe
jo
pop
les
cmp
dec
pop
bnd
sbb
pop
pushf
or
and
push
pop
mov
inc
inc
jp
push
jb
testl
sub
dec
add
xchg
ljmp
jecxz
movsl
js,pt
enter
lods
cwtl
push
pusha
gs
sub
loopne
sahf
out
jb
adc
adc
xchg
inc
ja
mov
sub
pop
xchg
out
xchg
pop
jb
call
jne
js
sbbl
and
sbb
fdivr
fs
inc
adc
idiv
inc
aas
fwait
arpl
adc
mov
add
insb
add
out
add
push
imul
outsl
int
xchg
out
dec
lret
or
jecxz
std
rclb
add
fucomp
imul
xchg
xor
push
cs
mov
dec
lock
ljmp
outsl
out
jge
bound
negl
jno
loopne
xor
popf
daa
adc
sbb
mov
ss
mov
jp
mov
mov
xor
lock
mov
mov
jbe
lahf
lods
mov
test
mov
lods
push
xor
test
adc
movsb
test
push
ljmp
cmc
into
es
ret
xchg
fwait
and
fisttps
lret
lods
mov
adc
filds
sub
xlat
cmp
imul
pop
xor
sub
dec
lds
pop
ljmp
out
sbb
xor
and
and
scas
and
and
enter
pop
adc
mov
cmpsb
dec
sahf
push
or
push
or
fdivp
pop
es
lods
lret
in
sub
or
insb
cmpsl
add
inc
test
xchg
push
pop
fistpll
mov
adcb
mov
mov
out
pop
push
out
popa
jmp
lods
cmpsb
into
mov
cmp
lods
aam
imul
leave
adc
scas
ds
push
push
sbbb
jge
xlat
sub
lock
fimuls
sub
jb
jnp
pop
or
jbe
push
iret
imul
movsb
or
cmp
mov
out
out
or
pop
cwtl
jo
adc
mulb
lret
imul
or
into
adc
mov
push
dec
xchg
cmp
inc
add
int
lods
jnp
mov
pop
int
xchg
jg
daa
push
jecxz
aaa
aas
and
cmc
arpl
repnz
adc
inc
loopne
ret
cmp
pusha
les
add
dec
aaa
cmp
loop
add
sbb
aas
cmp
add
sub
jle
pop
or
gs
add
mov
sub
cmp
repnz
cld
jmp
loopne
out
or
cmp
ss
mov
aad
in
cs
in
out
out
adc
ja
xchg
push
cmp
jmp
scas
sahf
jno
jae
mov
push
pop
movsl
lods
jle
arpl
lret
or
xorb
or
addr16
pop
negl
insb
sub
stc
lods
xchg
jecxz
pop
cs
add
lea
pop
mov
mov
aaa
jl
fxch
jne
int
fildll
sub
stos
lret
cmc
lods
and
add
cmp
ret
scas
in
cltd
xor
lea
or
orb
cmp
aas
mov
xor
mov
mov
sbb
xchg
mov
sbb
xchg
sbb
jle
mov
js
and
sbb
and
fs
das
ljmp
xchg
mov
rol
mov
mov
lret
fdivrl
xor
push
das
mov
mov
cs
pop
dec
popf
sbb
lahf
jl
loop
mov
push
daa
xchg
mov
outsl
cmp
cmp
mov
inc
outsl
jl
mov
and
andl
mov
pop
daa
enter
stos
jp
sbb
enter
rorb
movsb
jmpw
scas
add
jnp
jno
sub
pop
push
lods
dec
pushf
mov
hlt
inc
mov
ss
lods
sti
sub
jp
popa
scas
mov
addl
jno
repnz
mov
mov
xchg
jge
sub
lock
repnz
adc
ljmp
pusha
lods
xor
or
push
inc
pop
and
mov
sbb
pusha
add
lds
pushf
aas
add
jp
add
sarb
add
data16
loop
add
add
add
mov
add
movsb
add
mov
aas
add
lock
mov
add
xor
add
mov
add
scas
aas
add
insb
aas
add
inc
aas
add
jl
add
and
add
pop
aas
add
add
add
inc
cmp
add
cmp
add
cmp
add
adc
add
loop
add
sbb
add
inc
add
lcall
add
add
mov
add
add
and
add
cli
cmp
add
pusha
cmp
add
lcall
add
cmp
add
add
movsb
cmp
add
sarb
add
add
mov
cmp
add
cmp
add
cld
cmp
add
add
insb
cmp
add
add
add
cmpsb
cmp
add
cmp
add
add
aas
add
cmpsb
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
js
add
dec
cmp
add
add
mov
cmp
add
cmp
add
add
jmp
inc
add
inc
add
popa
mov
xchg
sbb
inc
sbb
or
and
rcl
jg
push
mov
xchg
cmp
mov
iret
inc
mov
mov
in
stos
repnz
jno
and
dec
xchg
popf
outsl
mov
mov
in
clc
scas
into
pop
imul
xor
inc
loope
out
in
xchg
subl
jnp
imul
xchg
mov
inc
sbb
arpl
leave
leave
mov
nop
and
push
mov
push
mov
fs
shll
dec
fsubrl
mov
aas
or
ss
fst
pop
xchg
addl
xchg
or
sarl
jmp
in
insb
mov
jo
cli
mov
dec
pop
push
push
and
popf
cld
add
mov
or
clc
cmp
add
dec
das
rcrl
xchg
testl
push
cs
dec
andl
sbb
call
mov
arpl
pop
test
nop
adc
scas
lods
les
jo
mov
jno
mov
sti
lahf
add
repnz
imul
inc
jo
outsl
shr
adc
lea
pop
aam
aas
dec
inc
pusha
lret
pop
in
jle
out
idiv
out
out
mov
dec
jae
lahf
pop
push
inc
dec
js
mov
movsl
inc
mov
dec
mov
aad
cwtl
mov
shl
cmp
loopne
sub
inc
add
pop
sub
cmpsb
fldenv
push
into
xor
ret
pop
ss
jg
stos
and
je
adc
and
add
into
insl
jno
shl
mov
jge
push
mov
adc
xchg
lods
imul
int3
fisubrl
and
mov
and
popf
aam
mov
or
mov
mov
xor
outsb
or
mov
out
shll
je
and
or
xor
push
xchg
mov
dec
sti
mov
fwait
add
pop
das
rcl
cmp
mov
and
mov
push
lock
or
movsb
sbb
adc
jecxz
gs
ljmp
dec
mov
repnz
inc
repnz
aaa
jmp
sub
mov
jge
scas
aad
sub
add
mov
pop
sbb
push
out
mov
cli
bound
and
add
lods
sub
test
ljmp
or
add
cmp
jnp
cmp
scas
sbb
xchg
inc
push
xchg
jmp
es
lret
sbb
jno
cmpb
sub
mov
pop
icebp
push
xor
cmpsl
in
cmp
xor
or
inc
xor
push
and
pop
nop
dec
call
imul
jp
ss
daa
int
das
inc
inc
jp
ret
dec
repnz
inc
ret
flds
lea
adc
std
mov
jle
push
icebp
mov
jbe
or
xchg
and
lods
mov
mov
and
rolb
addr16
lods
fisubrs
je
mov
xlat
and
cltd
stc
test
cmp
mov
lds
cmp
fcmovnu
sub
inc
mov
dec
sti
and
shlb
into
sbb
popf
sub
divb
nop
mov
mov
push
ret
fmuls
push
sub
cmp
xor
ds
je
push
lret
dec
inc
jg
adc
mov
movsb
dec
mov
leave
rcrb
movsb
sbb
sub
inc
mov
fstps
outsb
and
adc
loop
cmp
dec
std
mov
xchg
in
les
dec
add
stos
das
xor
jp
mov
dec
stc
les
mov
bound
test
lods
orl
sbb
loope
sbb
icebp
outsb
and
push
jo
inc
pop
loopne
mov
inc
lods
lret
push
jo
pusha
xor
es
popf
dec
xchg
push
xchg
dec
icebp
xor
sbb
push
je
xchg
mov
push
pop
cmp
loop
mov
out
pop
adc
aam
loopne
adc
rcll
mov
je
dec
data16
mov
bound
jp
cld
add
mov
ljmp
mov
sbb
and
fs
and
sbb
jmp
lret
lahf
cmp
cmpsb
sbb
pop
push
xor
xchg
xchg
mov
lahf
leave
push
les
loopne
add
and
mov
call
outsb
outsl
cmpsl
cmc
add
shrb
mov
push
add
sub
adc
fimuls
fidivrs
and
fbld
fnstcw
cmpb
inc
subb
push
dec
dec
add
mov
fsubrs
dec
mov
shll
adc
dec
dec
sbb
scas
pushf
test
adc
inc
fs
jb
imul
mov
dec
stc
jge
imulb
in
xrelease
cmp
mov
and
cmp
mov
lcall
test
xchg
loope
lcall
cmpsl
shrl
shll
aaa
popa
and
insb
sub
ficoml
out
leave
push
mov
mov
mov
xor
push
mov
mov
adcl
adc
xchg
xorb
jns
or
aad
divl
lret
aaa
stos
test
push
aam
mov
insl
out
jae
lock
test
sub
rcrl
sub
jno
aas
out
dec
cwtl
mov
stos
inc
cwtl
daa
mov
nop
rorl
test
mov
xchg
mov
in
sbb
jp
fs
push
imul
loopne
push
inc
rorl
inc
data16
mov
cmp
push
loop
stc
or
push
call
popf
adc
stos
add
jo
inc
xchg
sub
outsl
push
js
inc
mov
aad
pop
in
enter
adc
insb
incl
sbb
mov
or
int
push
mov
lahf
push
lock
push
mov
and
pop
mov
jb
fwait
orl
scas
call
mov
push
mov
mov
jmp
fdivrl
shll
shl
aam
mov
ret
xchg
mov
stos
les
clc
ja
lret
lock
bnd
fcmovu
icebp
lcall
xchg
int3
ret
mov
adc
fildl
scas
dec
sbb
jo
mov
push
mov
movsl
int3
mov
pop
xchg
les
ret
stc
in
sub
jmp
push
or
sub
popl
or
mov
movsl
jns
sub
pop
push
cmp
xchg
adc
mov
aas
leave
or
push
sub
xchg
addb
fistpl
mov
fxch
xchg
lock
sub
inc
outsb
dec
jns
push
mov
cmp
push
inc
les
mov
mov
xlat
push
test
movsl
pop
push
xchg
jg
cmp
clc
mov
ss
movsl
push
adc
mov
sarl
leave
vphaddubw
sbb
cli
xlat
and
jnp
inc
lods
imul
pop
call
mov
jns
enter
or
mov
add
bound
out
sbb
ret
or
mov
std
mov
out
cmc
out
int3
into
jl
test
mov
rcrb
cmp
sub
fs
aas
dec
cmp
mov
or
mov
push
imul
je
fcompl
push
cli
pop
lret
int3
mov
jge
cltd
xchg
dec
loopne
cwtl
mov
sbb
testl
and
insb
fldl
sub
pop
ja
or
es
mov
aaa
insl
ss
inc
sub
inc
xor
xor
repz
or
dec
scas
sbb
jp
push
inc
adc
stos
cmpsb
mov
lods
test
dec
sub
cwtl
cmpsb
add
leave
jge
push
xchg
sahf
pop
mov
pop
aas
dec
jb
adc
movsl
mov
movsb
out
pop
add
jae
inc
push
dec
xorb
jbe
sub
movsb
sahf
inc
fbld
xor
xchg
lock
add
push
add
xchg
aaa
iret
pop
daa
mov
dec
inc
mov
push
inc
hlt
jnp
sbb
nop
fsubrl
lahf
lods
dec
icebp
sbb
cmp
cltd
insl
and
mov
pop
repz
repz
rol
in
mov
in
cmp
pusha
fidivs
ljmp
xchg
frstor
or
int3
cwtl
fwait
and
xchg
jb
sub
dec
inc
xor
mov
inc
mov
aad
and
pop
xor
loope
cwtl
cmp
mov
int3
push
add
and
pop
jae
movsl
pop
fistps
imul
in
xor
sbb
jle
dec
fistl
and
and
fildl
adc
sti
jl
jmp
scas
loop
mov
bound
xlat
add
cmp
movsb
movsb
mov
pop
std
and
dec
leave
fs
jbe
fisttps
push
stos
les
subl
jno
mov
stos
stos
push
shrl
cli
jns
sub
mov
push
lcall
mov
sub
in
jp
fdiv
inc
fdivs
xchg
dec
xchg
push
repnz
jmp
jl
jg
cmpsb
and
or
pop
lahf
sub
cmp
push
lahf
dec
es
inc
cltd
add
pop
sbb
xchg
jmp
movsl
adc
sbb
jg
inc
xor
push
inc
insb
flds
push
jg
push
sti
sbb
jnp
test
shlb
aaa
jp
push
movsb
cltd
imul
data16
insl
pushf
or
lret
sub
mov
mov
enter
mov
popa
test
insb
call
cmp
xchg
test
cmpsb
inc
add
jle
fwait
enter
pop
sahf
xchg
jns
test
clc
pop
out
imul
xchg
loop
jne
mov
test
mov
sub
pop
pop
rol
push
fstps
jne
dec
jle
mov
int3
dec
lret
cmp
gs
jne
pop
add
fwait
or
mov
mov
push
fisttps
in
pop
pop
repnz
inc
push
jg
aad
pop
aam
jo
data16
out
shrl
dec
mov
pop
jbe
lret
jecxz
mov
adc
cmp
dec
outsb
or
add
xchg
inc
test
sti
add
cmp
xchg
inc
adc
popa
jl
xor
icebp
jp
mul
jge
scas
repz
jp
or
fnstcw
fmuls
fcomps
push
lock
clc
xchg
add
mov
lods
leave
push
outsl
push
bound
xchg
rolb
cmc
sbbb
andb
jp
mov
push
push
pusha
and
mov
jae
pop
sub
fisttpl
add
cwtl
jne
or
ds
in
dec
xchg
add
add
xor
popa
pop
mov
pop
in
std
dec
and
jno
xchg
sub
pop
lret
pop
sahf
out
sub
sub
rclb
out
jmp
ret
push
cmp
lret
rcll
popa
aad
jecxz
xor
sub
xchg
cmp
mov
xor
pop
insb
in
mov
dec
cmpsb
stos
cmpsb
mov
popa
xchg
xchg
and
add
clc
mov
jecxz
cwtl
fwait
scas
cmpsl
fmuls
mov
movsb
sbb
mov
cmp
enter
adc
dec
or
sbbb
outsb
mov
pop
mov
adc
shlb
jnp
inc
mov
jae
inc
xchg
push
hlt
clc
xchg
jno
out
aas
mov
negb
in
popa
mov
mov
pop
loop
arpl
jg
in
push
ss
daa
jo
clc
sub
xchg
scas
loopne
test
aaa
or
push
sarb
arpl
jl
cmp
mov
inc
adc
rep
mov
xlat
lret
lea
dec
push
sub
fwait
mov
jl
sub
mov
dec
and
popf
or
popf
jl
sub
mov
fists
hlt
cli
sahf
lcall
jmp
push
push
adc
imul
cmpsl
stc
mov
cmpl
stos
sub
sub
leave
stos
xchg
pop
enter
dec
add
push
mov
lock
arpl
mov
mov
popa
push
popf
scas
fcomps
call
push
ret
test
and
pop
mov
sub
pop
scas
push
into
ss
xor
cmpsb
stos
les
ss
xor
hlt
adc
mov
add
cmp
jae
sahf
mov
negl
sbb
add
aad
test
mov
and
bound
or
adc
dec
sbb
scas
mov
in
addr16
inc
jl
mov
lea
in
cli
and
push
pop
lcall
adc
gs
jne
sbb
lcall
pop
add
push
jnp
or
pushf
subl
lea
jns
mov
in
ds
fsubrs
sbb
xchg
dec
dec
jmp
iret
mov
jge
push
xor
cmpsb
jnp
cltd
mov
gs
out
loope
mov
inc
nop
scas
ss
cmp
ljmp
lods
push
pop
pop
lock
movsb
xchg
mov
add
test
cmp
aam
pushf
cld
xor
adc
xchg
jg
jns
mov
cltd
adc
mov
adc
insb
mov
fld
dec
out
sub
aad
lret
xor
pop
rcrl
adc
mov
jmp
cmp
jle
adc
je
push
lcall
leave
gs
test
cmp
xchg
int3
mov
add
into
jb
je
add
std
aaa
clc
mov
cltd
adc
pop
shl
es
push
lods
sbb
test
and
sti
add
jno
ljmp
or
lcall
cmp
add
adc
repz
mov
xor
insl
xchg
mov
sti
mov
add
lret
mov
sub
inc
outsl
jl
and
aam
lea
sub
cld
stos
fadd
jg
popf
adc
jp
in
shl
bnd
inc
aas
xor
cmc
cmp
rolb
push
shl
std
fldenv
ljmp
mov
in
xchg
mov
nop
sbb
xor
cs
in
bound
xchg
or
aas
test
pop
pop
insl
mov
xchg
adc
lret
gs
leave
add
rorb
xor
lret
js
insl
adc
out
xor
stos
mov
add
push
lds
push
dec
xchg
pop
iret
lcall
pop
sbb
lret
xorb
ljmp
out
repnz
push
and
mov
lahf
dec
mov
mov
data16
stos
arpl
out
or
sbb
sti
push
imul
xchg
rclb
aaa
xchg
int3
insb
xor
jle
cmp
rcrb
enter
fsubrs
mov
or
repnz
adc
mov
leave
jbe
lods
sbb
int
stc
mov
mov
mov
pop
dec
mov
in
and
test
int
stos
fsubs
std
jle
daa
mov
shrb
jmp
ret
shlb
adc
and
push
inc
lret
rcrb
xor
ja
inc
pop
add
add
xchg
or
jnp
test
mov
or
adc
and
pushf
inc
xor
cmp
xchg
movsl
and
mov
clc
imul
repz
in
loop
das
mov
mov
popa
push
xchg
std
jl
jl
mov
out
das
mov
adc
lret
cmpsb
jae
iret
insb
cmp
xlat
push
sahf
dec
nop
sbb
shrb
cmp
pop
cmc
setns
ljmp
imul
add
dec
cmp
sub
push
cld
out
xor
add
cltd
xorl
lcall
test
push
mov
divb
ss
jp
and
cli
and
imul
mov
cli
cmp
xor
mov
les
jl
mov
lock
jle
jbe
dec
dec
cs
pop
aad
mov
loope
add
xlat
sbb
xchg
inc
sub
and
inc
ss
cmp
call
lods
subl
push
shlb
or
cwtl
jnp
iret
xchg
loope
cmp
jg
outsl
loopne
push
and
repz
insb
xor
xchg
xchg
loopne
xchg
imul
shll
xchg
mov
std
and
fbld
out
fmuls
mov
loope
int3
test
push
inc
roll
push
stc
pop
cmp
cmp
je
jl
inc
mov
or
fmull
bound
xlat
push
mov
mov
push
jmp
movsb
cmp
mov
xchg
cmp
cltd
xchg
pop
mov
jo
neg
or
xchg
cmc
cwtl
sub
xchg
loop
push
insb
dec
aad
and
addr16
std
dec
fwait
test
fucomp
fcmovb
in
bound
das
sbb
jb
fcoms
repz
mov
add
sbb
push
sub
dec
lock
push
mov
scas
adc
cltd
mov
clc
cmc
cld
sahf
push
les
pop
fwait
dec
pushf
pop
and
pop
outsb
lcall
out
sub
mov
dec
arpl
adc
push
ret
or
int
scas
and
std
out
ds
xchg
add
mov
cmovge
stos
push
sub
pop
hlt
movsl
xor
and
mov
pop
nop
mov
mov
fcoml
mov
mov
dec
add
ljmp
inc
cmp
das
mov
inc
jl
aad
shr
sahf
rolb
loopne
in
mov
mov
jmp
cs
pushf
ljmp
and
sub
inc
js
jnp
ss
mov
pop
push
adc
pop
sub
scas
mov
mov
push
xchg
adc
xchg
and
add
rcrl
or
dec
cmp
ret
out
loope
fildl
clc
mov
mov
pop
mov
nop
aas
ss
smsw
dec
sbb
scas
pop
loopne
cld
push
enter
jl
add
dec
jp
inc
dec
loopne
and
mov
or
sbb
adc
add
daa
leave
ret
push
ret
in
and
pushf
cs
xor
sbb
pop
enter
push
scas
shll
and
pusha
pop
add
jp
sub
bound
push
jnp
mov
and
out
sarb
jns
and
in
out
or
and
mov
add
les
je
mov
push
clc
mov
jb
inc
and
clc
jp
add
fdivrs
xor
push
shl
jg
in
sbb
ror
xchg
lahf
mov
js
loope
test
insb
and
xchg
dec
mov
loope
and
fxch
ret
pop
push
sub
mov
lret
mov
dec
pop
ja
mov
dec
fmuls
push
in
pop
je
testb
xchg
adc
insb
movsl
xor
jecxz
xlat
push
lods
mov
xchg
test
mov
inc
lret
mov
mov
add
pop
cs
and
inc
xchg
cmp
mov
xchg
rcl
xor
mov
and
adc
xchg
out
mov
and
xchg
jb
xchg
adc
iret
mov
dec
insb
pop
cmpsl
jg
jnp
sbb
aaa
loope
insl
imul
mov
mov
dec
dec
cmpsb
out
dec
ds
xchg
pop
adc
xchg
add
adc
loopne
mov
stc
fwait
cmp
push
push
and
mov
leave
shrl
repz
lods
ror
and
mov
mov
out
sbb
mov
movsb
ljmp
inc
cmpsl
pop
aam
xchg
clc
cmp
rcll
mov
mov
inc
inc
jp
pop
xchg
ds
aam
repz
xor
aaa
jo
pop
outsl
movsb
push
or
in
stc
add
push
cmp
pop
mul
inc
inc
mov
lcall
in
lock
int3
fistpll
add
push
sub
cmpsb
lods
dec
xchg
cld
jmp
sub
std
mov
mov
mov
xchg
cld
popf
imul
xor
cmp
cwtl
ret
mov
and
daa
insb
es
rcll
fdivr
xor
push
movsl
xchg
enter
lods
in
inc
daa
pop
add
es
cmp
jmp
les
je
iret
push
scas
jl
push
sbb
mov
test
fisttps
jp
fsubp
adc
rorl
xchg
cmp
insb
jg
fildl
dec
mov
dec
nop
jmp
mov
mov
lock
addl
aad
dec
dec
cltd
push
inc
mov
mov
in
rcr
adc
pop
dec
and
stos
jecxz
push
jne
dec
mov
push
shlb
rcrb
enter
pop
inc
mov
sub
dec
inc
into
push
or
cs
mov
xlat
clc
push
cmp
repz
inc
xor
pop
pushf
ja
cmp
sub
add
cs
add
out
adc
and
xchg
dec
pusha
outsb
sbb
xchg
testb
xchg
or
jne
jecxz
iret
add
imul
repnz
jmp
aas
and
fiadds
mov
out
pop
pop
and
push
ds
cs
inc
movsl
sub
push
jmp
pop
addr16
adc
jle
push
dec
movsb
movsl
cmp
in
ja
pop
mov
data16
stc
pop
aas
jp
push
aas
icebp
sub
push
enter
pop
cmp
mov
pushf
clc
xor
add
std
aaa
dec
adc
les
fisubl
and
inc
sbb
add
inc
xlat
mov
adc
xchg
testb
sbb
xor
sub
pushf
mov
fiaddl
mov
pop
test
sbb
jnp
inc
jno
lret
repz
jg
repz
loopne
mov
add
jp
stos
mov
or
lahf
mov
ljmp
push
scas
sub
imul
jbe
les
xor
ljmp
ret
push
cmp
ret
mov
dec
fsubrl
out
notl
jnp
mov
and
idiv
jnp
imul
fbld
and
pop
push
mov
push
test
jp
pmovmskb
dec
add
jp
and
mov
cs
dec
pop
out
mov
scas
jnp
into
insl
jb
mov
push
in
lahf
mov
out
mov
cld
ljmp
mov
out
sub
ret
lret
push
push
stc
mov
leave
mov
push
push
loop
jne
fwait
orl
xor
test
adc
popa
adc
test
pop
sahf
inc
add
cmc
mov
lret
in
xchg
sub
jmp
les
mov
jns
mov
mov
xchg
and
daa
mov
add
cmpsl
adc
hlt
jg
and
cmp
negl
movsb
mov
sbb
jns
in
out
iret
mov
and
std
repz
aad
or
inc
insb
sti
jbe
pop
xchg
pop
mov
fadds
insl
mov
cltd
dec
stos
mov
and
xor
push
out
cmp
mov
rorb
neg
repz
outsl
stos
jmp
inc
mov
or
inc
inc
xchg
jne
movl
jp
add
arpl
or
repz
sbbl
rcll
cs
add
fadd
out
mov
mov
inc
cmp
dec
cmp
mov
push
jl
push
ja
enter
mov
cmpsl
nop
mov
add
leave
out
cwtl
push
jg
mov
test
jae
int3
pop
and
fucomi
loope
xor
int
popa
jne
ret
mov
sbb
addr16
xor
nop
add
fdivrs
scas
into
cmp
in
ja
sbb
cltd
mov
jo
pop
inc
pop
or
xchg
es
iret
lret
mov
sahf
aad
or
outsl
xchg
push
xor
push
ret
pop
repnz
xchg
outsl
fbld
adc
mov
ljmp
pop
arpl
cmp
mov
sub
push
add
add
addr16
push
sahf
mull
cmp
jl
xchg
jecxz
xchg
sbb
cmp
jge
sub
push
sub
adcb
cmp
push
insl
push
pop
dec
gs
scas
or
push
sub
sub
sar
and
sarl
sbbl
cmp
dec
lcall
aam
or
xor
icebp
add
adc
jae
fldt
pop
mov
pop
cmp
cmovs
mov
aam
or
xor
test
jge
lahf
repz
sti
cmpsl
call
mov
mov
or
sbb
pop
sbb
xor
lret
push
xchg
jbe
rcll
out
call
add
or
sbb
cmpsb
pusha
lods
add
cmc
sub
cs
xchg
rcrl
aad
into
cltd
jmp
pusha
sbb
or
inc
icebp
imul
add
notl
adc
mov
and
arpl
jmp
fcompl
xchg
mov
test
in
test
fdivl
mov
ja
les
or
aaa
lods
mov
pop
sbb
inc
test
dec
cli
mov
dec
inc
out
enter
mov
push
cmp
dec
into
push
cmpsl
idivb
scas
xchg
lock
imul
pop
jb
mov
xchg
cwtl
fsubrl
mov
sub
jnp
xor
cmpsb
pop
pop
fcoml
xlat
jb
and
repnz
data16
fidivrl
fmul
unpcklps
addr16
pop
icebp
adc
cli
das
movsb
jbe
lock
mov
xchg
cwtl
push
sub
pusha
loop
movsl
pop
daa
adc
or
das
fldl
leave
lret
cwtl
inc
cmpl
cwtl
mov
lea
jne
or
scas
jns
arpl
rcll
gs
bound
out
fs
fs
mov
rcl
sub
in
int
fsincos
adc
movsl
push
xchg
lock
out
mov
jge
add
jnp
mov
mov
into
pop
mov
push
lods
ja
ret
in
dec
adc
push
sbb
xor
das
sub
sub
inc
inc
dec
fisubrl
int
mov
ss
cmovge
xor
movb
mov
jle
cmc
sbb
fstpl
data16
cmc
push
outsl
daa
loopne
pop
or
and
add
sbb
test
mov
imul
lods
fcomps
mov
adc
hlt
push
arpl
fistl
ljmp
shrl
lds
stos
lret
in
mov
pop
and
rorl
gs
in
mov
lea
xlat
push
test
xor
cmpsb
inc
sbb
dec
xor
out
arpl
or
adc
movsl
sahf
mov
xchg
push
shr
enter
pop
inc
push
imul
cmp
push
mov
pushf
gs
aam
add
jns
mov
xor
sub
xchg
repnz
cs
ljmp
push
pop
mov
std
pop
sub
lret
xor
popa
aad
mov
push
loopne
or
push
shrl
jle
hlt
and
flds
lea
sub
nop
stos
mov
arpl
cwtl
xchg
push
xor
out
or
or
mov
pop
out
sqrtps
notl
mov
push
or
rcrb
push
xacquire
sub
les
mov
lea
push
jg
ret
popf
dec
out
mov
clc
das
pop
cmpsb
sbb
icebp
cmp
sbb
push
add
jg
cmp
fwait
push
pop
pop
xchg
pop
daa
mov
mov
lahf
or
out
pop
sbb
xchg
mov
jae
icebp
mov
cltd
inc
dec
add
call
jb
mov
scas
repnz
and
int
push
mov
push
test
mov
fcmovnu
movsl
ret
and
and
mov
xchg
inc
gs
xchg
sub
insb
push
ljmp
insl
push
inc
rorb
shrl
cmc
insb
ljmp
jno
or
mov
adc
lods
lret
ret
lret
inc
push
sub
aam
or
testl
bound
xchg
gs
xchg
sbb
mov
paddusw
xchg
negb
and
testb
pop
xlat
loope
dec
add
jae
cs
sub
cltd
push
push
push
dec
scas
xchg
decb
add
lds
jmp
jns
inc
cmp
fimuls
or
aam
push
lcall
int
adc
dec
or
mov
rorb
xchg
popf
fsubrl
or
sbb
sub
xchg
lods
dec
push
lods
int
int3
in
dec
push
mov
push
mull
pushf
daa
ret
inc
push
or
ret
nop
sti
lcall
ja
mov
ffree
mov
incl
rcll
cs
rcl
sarb
adc
or
cs
xor
scas
into
add
test
jo
rolb
in
and
adc
jb
lret
xchg
cwtl
jmp
stc
sub
dec
add
pop
ja
aaa
adc
mov
jbe
stos
or
sbb
add
jne
ljmp
jmp
ja
cs
lret
lods
arpl
xor
jmp
out
std
mov
lods
adc
xchg
orl
sbb
mov
mov
push
rcll
xlat
movsb
ja
fisubrs
mov
mov
adc
shlb
stos
cli
out
dec
and
movsl
loop
jns
arpl
mov
movsb
mov
jb
xchg
lcall
ss
rcll
mov
sbb
add
inc
lahf
cmp
push
fidivl
push
loopne
adc
mov
lret
outsl
and
cmpsl
and
fwait
insb
out
es
pop
hlt
jl
jle
push
add
movsl
lods
cli
loopne
fisubrs
xchg
mov
and
xor
stos
push
adc
insl
jecxz
dec
ret
push
lcall
nop
pop
movsl
mov
pop
rcl
jg
subb
notb
fmuls
push
int3
jmp
aas
sub
int3
jae
sbb
cli
dec
adc
out
in
mov
jecxz
sub
mov
cmp
xchg
andl
ds
and
jg
lcallw
das
repnz
xchg
repz
sub
cmp
jnp
sbb
aaa
gs
dec
lods
xor
ret
movzbl
mov
dec
test
dec
packssdw
les
cwtl
mov
xorb
dec
outsb
pop
sub
cmp
mov
stos
mov
inc
adc
es
jmp
or
js
cmp
fildl
cmp
pusha
in
pop
lock
cld
and
aaa
or
jbe
xor
addr16
pop
and
in
pop
sahf
add
push
mov
mov
lret
xchg
pop
sub
gs
fwait
in
sti
fmull
imul
or
std
js
test
mov
or
shl
mov
mov
cld
push
out
mov
push
rorb
decb
jge
fisubs
das
or
lods
push
scas
cmp
test
cli
sbbl
pop
gs
jb
add
xor
dec
mov
mov
std
mov
inc
ds
pusha
cwtl
pop
clc
jg
into
dec
mov
ljmp
xor
loop
pop
popa
adc
push
mov
ret
adc
mov
pop
nop
xchg
testl
xchg
inc
mov
push
push
ja
dec
jns
pusha
cmp
sub
cmpsl
ret
and
or
pop
pop
fcmove
int
lahf
ljmp
int3
push
ret
icebp
cmp
cmp
and
mov
dec
push
jb
adc
pop
xor
not
pop
push
push
hlt
movsb
add
lret
dec
jnp
psraw
pop
adc
inc
cmp
sbb
dec
pop
fisubs
mov
scas
in
jp
sbb
aas
cli
dec
push
mov
stos
test
cmpsb
fisubrs
pop
or
loop
in
push
movsb
cld
das
mov
adc
or
scas
or
and
mov
xchg
jmp
hlt
jmp
popf
dec
sti
push
loope
or
movsl
xor
into
mov
es
cli
sbb
shll
lock
in
push
popf
push
push
cwtl
pop
sub
loop
imul
mov
jne
xor
insl
scas
push
and
inc
xchg
jle
adc
std
or
inc
add
and
fisttpl
inc
leavew
in
repz
out
aad
fstl
hlt
in
scas
inc
cmp
cmp
push
mov
mov
jne
mov
fwait
jne
jp
addl
in
lret
cld
loopne,pt
stos
je
xchg
sub
cmp
push
test
pop
sbbb
jno
in
mov
pusha
rol
adc
or
or
inc
push
or
bnd
loopne
mov
lret
bound
out
dec
mov
psubusb
negb
fldcw
stos
fdivl
outsl
xor
in
out
sbb
insb
loope
scas
pop
shll
sub
add
mov
sub
mov
inc
jecxz
sub
leave
pop
jbe
into
jmp
push
repnz
je
fcomip
popf
dec
fisttps
jae
or
add
sti
enter
fldcw
loope
inc
push
jae
add
mov
insl
cwtl
push
mov
dec
mov
jb
adc
and
sub
repnz
cld
sub
test
test
mov
and
and
sub
add
scas
loope
cli
dec
inc
sbb
dec
fisubrl
arpl
repnz
sub
lods
stc
jp
cmc
jnp
pop
mov
shll
test
mov
jmp
cmp
fidivl
adc
mov
jle
mov
fs
adc
xor
sub
nop
sub
mov
mov
cwtl
mov
and
movsl
and
pop
push
das
ficoms
pop
jb
sbb
sub
stos
sub
daa
rol
push
inc
fistl
std
push
sbb
mov
pop
divl
cld
xor
pusha
sbb
mov
jg
out
pop
xor
push
ja
lcall
mov
lret
cmp
ficoms
pop
mov
jo
cltd
xlat
pop
pushl
aas
xchg
cmp
jbe
xor
jne
scas
sub
aaa
repz
in
or
popa
cmp
or
mov
pop
pop
sub
rol
insb
xchg
and
repnz
int
scas
mov
mov
jmp
adc
jl
cmp
pop
dec
sub
mov
push
adc
or
clc
aad
adc
dec
xchg
test
jg
out
fisubs
sti
jg
xor
push
or
jno
push
and
push
cld
xorb
aas
insl
sbb
aas
xchg
cmp
stc
adc
hlt
xor
js
xor
sub
rcrb
aad
add
sub
or
add
hlt
stos
jg
dec
pop
push
and
int3
push
jp
dec
ja
arpl
fs
mov
sahf
aam
xor
sbb
cs
sub
fsubl
xchg
stos
loope
movsl
push
xor
leave
in
cs
pop
inc
inc
movsb
adc
cmp
sbb
sub
pop
dec
push
and
sbb
imul
lcall
and
stos
dec
call
in
jno
pushl
sub
cmp
and
nop
out
roll
loope
lea
es
pop
push
mov
jmp
and
push
xchg
outsl
fidivrl
jge
pop
rcll
lret
cld
and
push
xchg
shl
jne
jb
scas
ds
in
ja
pop
int3
dec
push
filds
ror
clc
int
push
dec
fldpi
push
iret
insl
loope
ret
mov
stos
dec
nop
jl
nop
lods
adc
mov
mov
xchg
mov
push
in
inc
jmp
add
popf
or
divl
scas
and
cwtl
pop
push
xchg
add
ret
movsb
stos
pop
ja
dec
xor
jmp
xchg
aas
mov
cmp
xor
fmull
jmp
insb
cmp
mov
lret
sub
rorb
mov
mov
inc
imul
mov
out
pop
mov
push
mov
repnz
sbb
test
ja
dec
sarb
test
or
cs
ret
ljmp
push
xor
out
push
pop
sbb
push
lcall
add
cmp
ficoml
jle
cmp
call
dec
arpl
aas
push
dec
dec
mov
jmp
inc
pusha
icebp
movsb
push
or
lods
jo
test
adc
jnp
insb
sub
divps
mov
stc
dec
adc
cmp
rolb
jle
out
mov
and
sub
sub
fbstp
outsb
jne
pop
sbb
cmp
or
rcrb
adcb
mov
outsb
icebp
cltd
addr16
pop
je
mov
inc
add
mulb
js
sahf
fmull
xor
cmp
fildll
leave
mov
or
xchg
pop
imul
int
outsl
in
int
fwait
jo
pop
mov
sub
dec
sbb
fldt
sti
mov
sti
movsb
scas
xchg
sarb
inc
and
fwait
aad
and
cmp
out
jno
pop
dec
loope
mov
xor
cli
xor
into
mov
cmpl
jge
jl
cmpsb
hlt
dec
in
cmpsl
out
mov
cwtl
cmp
xor
cmpsb
add
push
pop
or
mov
mov
cmp
out
or
push
cs
cmp
add
in
addps
and
lods
loop
in
addl
testl
inc
mov
jo
negl
sahf
fadds
mov
ret
or
insb
jle
repnz
fwait
dec
sarb
pcmpeqb
clc
sbb
and
mov
jns
popf
cs
jbe
imul
xchg
dec
repnz
int3
mul
ljmp
mov
icebp
xor
shll
pusha
dec
into
outsb
inc
std
sahf
pop
ret
sarb
pushf
mov
cmpsb
jl
and
pop
pop
clc
sbb
lds
sub
jbe
sbb
out
ror
nop
rcrl
xlat
cld
cmp
mov
lods
mov
imul
scas
inc
shlb
mov
mov
ja
add
loope
test
rclb
adc
aam
dec
pusha
push
sti
xchg
mov
push
push
popa
add
push
roll
sub
adc
cmpsl
imul
imul
mov
loope
loop
outsb
xchg
iret
lahf
adc
mov
in
cmp
adc
insl
stc
mov
xchg
dec
add
or
inc
push
test
into
mov
outsb
pop
and
rorb
mov
outsl
cmp
repz
cmove
pop
lods
pop
in
jne
icebp
outsl
ret
lret
dec
mov
int3
call
pusha
leave
push
xchg
and
inc
or
sti
lcall
pop
sub
push
lcall
mov
insl
movb
fcompl
aam
xlat
pop
xlat
pusha
int
ss
data16
xchg
out
fcompp
addr16
cmc
test
fsubs
popf
add
xor
xor
das
xor
xchg
movsb
cmp
and
cmp
cmp
shll
stos
stc
cmp
stos
push
cmp
jmp
lahf
mov
test
mov
icebp
inc
xor
xor
in
xchg
pop
mov
push
outsb
inc
jns
dec
mov
fbld
fstl
push
cwtl
pop
adc
xchg
xor
jl
pop
fstl
icebp
or
pop
fstpl
push
in
nop
out
push
xor
cmc
xchg
add
inc
shlb
test
test
nop
jle
pop
pop
leave
imul
sti
pop
cwtl
movsb
lock
ja
sbb
jo
lock
sbb
sti
ror
push
cmp
mov
adc
jbe
pop
les
ds
mov
loope
adc
sahf
pop
and
mov
ret
push
mov
sub
rcl
lods
fiaddl
ror
pop
cmp
ret
mov
leave
sub
lock
add
jle
out
roll
shrl
adc
stos
imul
xor
std
lock
pop
imul
xor
and
or
loopne
add
stos
in
adc
aas
mov
push
sbb
and
xchg
inc
shl
fnstcw
clc
pop
imul
inc
movsb
mov
arpl
mov
rorb
jno
mov
mov
pop
ljmp
hlt
mov
idiv
scas
std
pop
mov
rcrl
aas
jae
int
repz
das
or
xor
enter
sub
testb
jno
lods
sbb
xor
sub
and
lock
xchg
cltd
jns
cmp
dec
jb
lret
pop
leave
sbb
sub
xchg
ret
enter
or
push
out
push
sbb
jge
adc
or
cmc
cmpsl
mov
sub
clc
sbb
pop
bsf
push
inc
out
shl
stos
sahf
xchg
mov
testb
jb
mov
in
and
push
cmp
sub
cs
in
int3
pop
lods
clc
push
jl
pusha
jb
sub
xor
adc
jbe
push
pusha
addr16
shl
iret
ja
fildll
sub
data16
mov
fcmovbe
or
pusha
jne
or
test
mov
mov
sub
mov
mov
stos
movsl
ja
push
rorl
jns
sarl
push
shll
sbb
or
push
std
fsts
outsb
fsts
out
negb
fnsave
add
jle
stos
neg
neg
subb
jecxz
and
dec
clc
jne
mov
push
mov
mov
fwait
out
sarl
lret
or
lock
sbb
dec
stos
dec
pop
inc
nop
rorl
xchg
pushf
or
sub
add
mov
or
test
scas
mov
mov
cmp
mov
loopne
xchg
sub
sti
aaa
and
lcall
mov
mov
inc
lds
xchg
daa
dec
mov
lods
ficompl
xchg
lods
pop
lcall
mov
xchg
mov
and
cwtl
mov
enter
das
xchg
jmp
cmpsl
lods
repz
sbb
fsts
rcl
inc
mov
lods
shl
scas
out
das
rclb
jne
dec
or
jae
cmp
lret
fdivl
mov
fiaddl
loopne
pop
push
cmp
ljmp
adc
enter
lcall
cmpsl
mov
pushf
adc
xor
fucomip
clc
insl
dec
dec
push
fmulp
cmpsl
inc
cli
push
sub
cltd
dec
rorb
daa
sbb
dec
cmc
sub
xor
pop
mov
adc
sub
cmp
out
push
nop
mov
shrl
subb
adc
mov
scas
repz
leave
pop
adc
fldt
push
lock
cltd
dec
dec
inc
stc
push
jne
daa
and
inc
xchg
int3
ret
xchg
sbb
sub
jo
xor
arpl
pop
movsl
testb
inc
hlt
jne
add
inc
jno
sub
and
insb
and
jp
int
lret
and
mov
jg
dec
push
gs
pop
dec
rolb
scas
cmpsb
out
xor
je
pop
das
or
inc
or
xchg
mov
fdivs
lahf
aas
pop
pop
pop
xor
dec
fcoml
jbe
jmp
sbbb
insl
mov
mov
or
cmc
stos
mov
mov
cmpsb
cltd
adc
inc
cmp
adcb
inc
pop
fdivrp
xchg
sub
into
add
mov
jb
push
sbb
out
clc
lret
sbb
testb
sub
and
test
cmp
clc
sahf
mov
push
adcb
lahf
xor
mov
sbb
aad
push
cmp
mov
insl
xor
out
rclb
jl
hlt
iret
push
or
xchg
mov
xor
cld
inc
ljmp
es
inc
dec
shll
or
dec
cmp
push
outsb
mov
mov
lods
fbld
loope
pop
mov
insb
adc
push
es
mov
scas
fmul
jo
int
cmp
xchg
fwait
push
rolb
test
cmp
int
jmp
and
pop
cmp
cltd
pop
nop
cmp
daa
jb
jmp
loope
xlat
mov
push
leave
adc
popf
and
or
sysexit
cmp
lods
jg
loop
js
push
mov
sbb
leave
and
push
daa
les
dec
mov
les
out
jnp
rorl
add
xchg
add
mov
rcr
subb
data16
cmc
dec
fnstcw
xchg
outsl
and
incb
iret
sbb
enter
jne
mov
cmc
ja
and
cmp
push
repnz
es
xchg
ljmp
mov
dec
faddl
sbbl
jge
push
mov
mov
sbb
mov
mov
sub
inc
push
fistl
ds
cmp
scas
testb
mov
push
pop
or
xor
and
jp
sub
xchg
mov
adc
data16
shrl
aas
dec
mov
inc
setne
sub
push
pop
cmp
popf
mov
cmpsb
adc
xchg
mov
testb
orb
push
push
ffreep
jecxz
bound
lret
cmp
adc
sbb
xor
fistl
cmp
xchg
mov
xor
pop
add
jge
mov
inc
pop
jae
gs
pop
je
ret
pop
inc
add
iret
lock
in
lret
mov
mov
loope
inc
fcoml
jno
dec
jns
sbb
ret
push
iret
decb
popa
fisubrl
mov
lret
mov
mov
stos
stos
sub
lret
or
sahf
dec
add
test
mov
inc
loopne
sbb
xchg
mov
call
cwtl
and
add
cmp
pop
inc
dec
ljmp
je
sub
mov
insl
stc
mov
test
in
cmp
xor
lock
rcll
jnp
es
mov
adc
movsb
fldcw
xchg
adc
icebp
stos
loope
and
stos
jno
jno
addl
sub
addr16
scas
cmp
mov
addl
sub
and
fildl
idivl
je
loop
or
xor
inc
cmpsb
cmp
push
cmp
xor
shlb
xchg
daa
incl
mov
and
add
out
jb
out
sub
add
mov
and
jecxz
push
lret
dec
xchg
add
and
jnp
in
popa
shlb
data16
jnp
sub
xchg
aas
mov
js
mov
sub
aam
jl
stc
pop
out
push
push
lea
gs
pop
daa
bnd
mov
pop
je
lahf
sbb
or
mov
mov
lds
xor
or
jg
xchg
hlt
repz
subb
push
mov
pop
aaa
cmp
mov
aam
pop
adc
inc
cld
lods
push
inc
or
sbb
es
movsl
xor
movsl
outsb
inc
decb
in
bound
mov
outsl
inc
mov
pop
inc
subb
pusha
and
adc
enter
jmp
sub
and
bound
xchg
fnstcw
in
in
mov
rclb
ljmp
lret
push
out
pushf
adc
pop
sbb
insl
in
and
cmc
loope
mov
add
imul
cmp
adc
sub
mull
sub
xchg
fisubl
mov
push
out
call
dec
xor
fidivrs
les
sub
inc
and
pop
aad
pop
mov
pop
xor
hlt
popw
repz
in
or
jb
add
insl
lea
or
mov
mov
jae
mov
aam
mov
sbb
ja
fsts
mov
ret
and
pop
cmp
shlb
jnp
xor
jo
cmp
add
and
imul
ud1
push
leave
nop
roll
or
rorb
pop
mov
inc
fwait
pop
cltd
mov
seta
addl
outsl
cmpsl
jne
and
adc
ret
repz
outsl
mov
int
roll
dec
cmc
imul
pop
ss
xchg
fildll
ret
enter
fs
cmp
xchg
fwait
jns
xor
lcall
rcll
dec
push
je
or
cmp
daa
lret
jg
sub
lret
jmp
dec
lret
jecxz
sbb
lds
jne
xor
jg
rclb
sar
into
push
arpl
gs
add
aas
nop
js
and
push
xchg
push
add
and
orb
push
loopne
cwtl
xchg
xor
mov
jne
imulb
ficomps
bound
inc
pop
cmp
dec
jo
or
mov
hlt
push
lea
in
xchg
test
repz
xchg
sti
leave
mov
mov
cwtl
lahf
pop
aam
fistpll
cs
out
clc
cmpb
ss
bound
adc
out
xchg
test
cld
and
out
aas
mov
cmpl
les
movsl
mov
push
jnp
sbb
jl
xchg
add
test
fwait
sub
cli
or
or
add
inc
sub
adc
dec
mov
push
pop
add
out
in
test
xchg
mov
sahf
mov
test
divb
pushl
or
cltd
les
lcall
inc
lock
scas
jmp
int
and
in
outsl
inc
stc
xor
dec
jae
lock
sti
or
test
xor
adc
lds
rolb
cmpsb
lahf
ljmp
outsl
mov
in
decl
faddl
xchg
mov
ljmp
repnz
ss
adc
adc
inc
and
into
mov
xchg
mov
iret
lahf
inc
jp
ror
and
xor
sbb
loope
stos
leave
xlat
int3
out
fldenv
mov
cld
mov
adc
ss
xor
dec
jle
sbb
stc
and
sbb
jo
inc
enter
xor
dec
test
pushf
add
arpl
jb
shlb
mov
cli
rcrl
xchg
pop
push
push
test
leave
imul
addr16
push
cmp
mov
or
das
add
lods
and
jge
jg
push
cmc
xor
adc
push
push
rcll
inc
and
push
xchg
xlat
rcr
or
clc
fwait
and
stos
fildl
jl
adc
scas
dec
pusha
ss
and
or
cld
inc
push
or
dec
test
cli
das
inc
repz
aaa
inc
imul
dec
loopne
enter
stos
lock
cmp
jl
pusha
xlat
mov
in
cld
and
mov
popf
in
cmpsb
ds
or
call
push
pop
cwtl
gs
xor
aam
andb
fsubl
adc
inc
mov
push
mov
sub
sub
push
les
pop
push
hlt
or
xchg
jp
fmul
into
in
das
fsts
je
test
push
xchg
push
add
pop
iret
jnp
cltd
mov
adc
popa
or
jg
push
pusha
mov
mov
stos
inc
imul
xchg
ljmp
stos
pop
jge
mov
cmp
push
push
mov
jbe
or
xlat
mov
push
lret
hlt
mov
xchg
das
addb
cmp
aaa
repnz
pop
int3
dec
dec
xor
xchg
dec
cmp
push
sbb
jae
outsl
mov
shlb
lret
mov
jne
sub
sub
xchg
daa
ret
xor
test
lods
mov
dec
lods
stc
mov
lret
test
js
or
cmp
pop
aad
ficoml
sub
sub
sub
sbb
loope
add
xchg
fnsaves
xchg
mov
jbe
leave
cmpsl
and
loop
jg
test
into
psllq
and
cmpsb
lahf
mov
pop
stos
inc
mov
fisttpll
out
insb
clc
dec
in
popl
rcrl
ds
xlat
add
imul
sbb
push
sbb
dec
xchg
mov
fsub
or
std
jns
push
leave
orl
and
mov
push
ret
or
pushf
pop
stc
sbb
jecxz
and
fisttpll
stos
stc
popf
sbb
xchg
cli
push
shll
lock
dec
mov
stos
test
jae
cmp
and
shll
movsb
sqrtps
lods
xchg
fsubs
xorb
mov
or
out
jb
dec
ds
arpl
aam
xor
enter
pop
pop
cmp
out
push
mov
sbb
and
in
data16
mov
adc
xor
les
pushl
lcall
mov
sbb
push
fistl
sbb
mov
mov
jae
xor
cmp
and
mov
test
mov
call
imull
stos
aas
sub
mov
cld
repnz
mov
xchg
xor
mov
dec
imul
cmovg
add
and
jne
je
pop
mov
clc
xor
dec
dec
push
pop
push
movsb
mov
cwtl
mov
mov
into
push
mov
inc
push
xchg
ret
xchg
jg
lds
outsb
les
dec
push
dec
push
stos
loope
imul
loopne
sti
xor
inc
icebp
xor
inc
sbb
push
push
hlt
push
loopne
int3
add
cld
mov
jns
mov
dec
daa
inc
mov
sub
mov
xchg
add
pop
mov
add
fsubrs
out
sahf
mov
xchg
jno
mov
jmp
or
std
rcrl
mov
imul
cmp
sub
mov
stc
sbb
lods
insb
nop
push
push
mov
push
sbb
ljmp
mov
ss
inc
push
sbb
in
call
mov
mov
inc
es
mov
je
xchg
fisubl
cmc
jnp
push
pop
subb
aaa
loope
stc
mov
or
jbe
cmp
pop
imul
std
adc
adc
fidivrl
mov
push
jb
xor
jns
hlt
mov
adc
inc
cmp
push
cmp
insb
scas
inc
mov
repnz
push
fsubl
mov
xchg
pop
sub
or
aad
ret
movsl
jp
fs
dec
popf
lret
jnp
ret
js
inc
ds
sbb
xchg
push
popa
dec
mov
pop
sahf
push
fs
sbb
xchg
push
fs
fwait
fs
std
or
mov
add
imul
js
out
adc
stos
mov
sub
or
inc
mov
dec
es
xor
dec
cmpsb
popa
ret
popa
mov
cmp
inc
and
cmpsb
cltd
jl
fincstp
mov
xchg
filds
int
pop
push
adc
mov
mov
jle
repz
fcoml
xchg
jb
lock
xchg
xorb
mov
push
add
in
pop
shlb
push
stos
dec
aad
in
sub
jns
out
in
xchg
aaa
mov
jno
mov
xor
push
mov
sbb
jne
stos
push
das
and
mov
or
mov
push
or
call
loop
jmp
out
mov
add
add
cmp
cmc
scas
fsubrl
sbb
rcll
dec
or
jnp
cmp
jae
in
ret
jg
int3
fildll
xor
dec
or
add
xchg
sahf
js
adc
rorb
pop
js
push
dec
dec
sti
jo
jne
cld
add
inc
enter
and
arpl
bound
and
or
and
out
mov
loop
lret
sar
pop
sbbl
jo
mov
add
test
lcall
iret
test
mov
cmp
arpl
xchg
inc
cmc
or
enter
and
adc
cmp
fildll
pop
xor
gs
push
out
jecxz
out
dec
xchg
ss
xor
xchg
jl
gs
xchg
fnstsw
out
push
push
scas
push
add
rolb
lret
xchg
orl
push
adc
push
and
mov
mov
xor
in
ljmp
testl
adc
lea
pop
mov
daa
das
mov
add
rcll
fwait
jecxz
aad
pop
ljmp
mov
mov
jg
adc
ljmp
paddusw
pop
fucomi
pop
adc
ss
cmp
or
fildll
dec
push
cmpsl
in
jnp
loop
sub
cmpsl
stos
mov
sahf
or
out
mov
leave
es
or
mov
andl
in
adc
idivb
cmp
insb
sbb
sub
imul
and
test
testl
push
jmp
adc
add
cs
cmp
mov
sbb
and
mov
jbe
lods
push
int3
jae
mov
lahf
xchg
pop
pop
xlat
mov
add
add
dec
nop
cmp
inc
sahf
mov
iret
insb
push
out
dec
mov
and
mov
sub
clc
push
rcrl
inc
cmpb
cmc
xchg
out
mov
xor
xorl
push
or
pop
pop
push
lods
jb
mov
fwait
leave
sti
dec
test
adc
inc
jmp
add
xor
insl
sub
ficompl
and
fsubrs
jne
pusha
inc
test
inc
int
in
sub
xor
and
lret
jno
loop
xchg
jmp
or
test
fsts
add
mov
es
xchg
jl
mov
js
xor
mov
push
fbld
lret
pop
iret
sbb
mov
dec
add
xchg
cmc
cli
aaa
ret
xor
hlt
xchg
xchg
push
pop
cmpsb
stos
dec
nop
in
xchg
mov
mov
fs
jb
xchg
mov
dec
add
pop
out
fsubl
pop
cmc
mov
xchg
xchg
mov
jl
xchg
popa
lret
pop
mov
add
aad
inc
adc
ja
dec
or
xchg
mov
jle
jmp
lods
xor
pop
add
push
mov
imul
leave
xchg
sub
adc
loope
xchg
ds
dec
sbb
cmpb
add
jl
cmp
push
mov
and
pop
cmc
or
dec
xorl
or
jno
fisttps
shr
icebp
insl
and
insb
cwtl
pop
movsl
add
mov
fstpt
add
stc
pusha
leave
pop
sahf
pop
inc
sub
scas
insb
cmp
or
or
addr16
cld
rclb
lods
jp
mov
repz
and
nop
nop
or
ret
outsl
scas
sbb
mov
aam
mov
rclb
sbb
pop
adc
and
mov
inc
pop
popl
enter
pusha
mov
in
cmpsl
dec
push
cmp
add
clc
xor
and
dec
in
mov
insb
addr16
xor
or
mov
mov
hlt
adc
sub
int
shlb
enter
outsl
cs
and
dec
mov
sbb
pop
inc
sub
and
jmp
inc
push
mov
fiadds
cltd
push
xchg
inc
pop
adc
cmpsl
fs
cmp
shlb
out
fxtract
pop
pop
mov
fisubs
sub
mov
adcb
out
dec
pop
lahf
sarl
hlt
add
xchg
xlat
leave
data16
add
cmp
aas
pop
pop
xor
shlb
xchg
adc
xlat
int3
push
test
cwtl
iret
and
shll
sbb
in
push
add
scas
int
push
push
les
add
insb
pusha
outsl
cmp
les
loope
jbe
sub
dec
in
loope
xor
push
inc
xchg
mov
mov
mov
inc
clc
popf
stos
fsubrs
jne
sbb
sahf
xor
cmpsl
mov
xor
lcall
lds
sub
int
sti
pop
unpcklps
out
lcall
sbb
ret
pop
in
dec
mov
jp
mov
pop
mov
mov
test
fisttps
cmc
loopne
cli
pop
dec
jmp
fisubl
xor
mov
mov
mulb
push
inc
adc
jne
cltd
lcall
icebp
leave
cltd
loope
shlb
fcmove
cs
cmpsb
and
sub
dec
mov
out
dec
imul
xor
add
adc
jp
sub
ds
push
subl
and
call
cmc
cld
aad
cs
frstor
scas
rorb
sbb
dec
jmp
insb
cmp
andb
mov
jns
adc
jbe
movsl
in
cmp
jl
sbb
lret
repz
push
inc
inc
jle
in
imul
shlb
into
mov
pop
bswap
sbb
pop
pcmpeqw
mov
and
xchg
cmc
pop
mov
orl
mov
int3
cmp
mov
mov
into
das
add
lock
arpl
xchg
inc
mov
loopne
lods
pusha
test
repnz
fucomp
ja
mov
out
pusha
gs
sub
xchg
mov
mov
add
mov
in
cmp
jbe
pushl
repnz
stc
mov
cmpsb
lcall
loop
fs
jbe
and
ja
mov
pop
pushfw
adc
rclb
add
and
adc
or
xor
pop
insl
pop
pop
cmc
test
adc
mov
xchg
iret
pop
push
sbb
stos
and
imul
bnd
jbe
inc
lods
cmp
subl
pushf
xor
and
push
cltd
xchg
inc
push
fwait
aam
pop
mov
leave
hlt
stc
add
sahf
lret
inc
dec
xchg
push
scas
clc
sub
ret
xchg
sbb
or
fdiv
popf
push
mov
inc
add
mov
push
xchg
or
mov
jp
and
imul
xor
insl
lods
clc
outsl
pop
loopne
cli
xor
mov
les
jl
jno
mov
cmc
loop
or
cmp
insb
adc
cs
or
mov
sbb
adc
dec
popa
sub
pushl
stos
xor
cmpsl
cmp
xchg
push
rclb
inc
insl
arpl
dec
adcb
int
lods
cmp
and
adc
or
lahf
ret
sub
daa
sbb
fs
shrb
sub
pop
aam
pop
xchg
popf
shrl
int
jae
adc
movsl
es
add
mov
push
out
mov
lods
stc
cmp
push
or
xor
mov
pop
ljmp
mov
repz
xchg
xchg
cwtl
xor
in
mov
cmc
loop
ds
loop
xchg
mov
lock
xchg
mov
cmpsb
mov
mov
cld
ds
rclb
sbb
data16
add
cmp
lret
add
hlt
dec
fadds
mov
mov
in
es
rcrl
pop
xor
cmc
xchg
sub
std
cmpsb
sbb
xorb
jo
sub
sbb
cld
dec
xor
pop
je
or
adc
push
xchg
addb
lret
ror
negl
xor
scas
adcb
cld
data16
cmp
sahf
jb
cmp
lret
fcoms
or
inc
mov
ss
ss
lods
into
cmpsb
rcrb
jb
in
cmp
outsl
inc
sbb
sahf
out
mov
sbb
movl
stc
gs
rol
enter
lahf
clc
pop
sub
mov
in
xchg
fidivs
jns
ret
cmp
aaa
sub
mov
ror
xor
std
mov
insl
adc
lret
sub
scas
or
in
shrl
xor
mov
lret
popa
mov
inc
add
xor
insb
and
sbb
xchg
outsl
jg
shll
jb
xchg
inc
mov
mov
call
mov
lock
xchg
and
dec
xlat
pop
mov
nop
pop
addb
adc
lret
lret
roll
ds
aam
adcb
iret
add
and
fstps
shll
lods
sub
jg
inc
out
outsl
mov
rorl
aaa
jg
push
pop
lods
aaa
jl
push
ss
std
fldcw
mov
jae
xchg
pop
loope
aam
jae
cltd
mov
ss
add
lea
push
ljmp
adc
mov
notl
and
repz
loopne
in
dec
hlt
flds
dec
pop
popf
add
bound
mov
fwait
lahf
add
mov
mov
hlt
loopne
mov
popa
scas
jmp
jl
xchg
mov
cmp
pop
jne
scas
mov
inc
mov
out
lea
cltd
dec
xor
mov
lcall
mov
cmp
mov
call
and
cld
imul
mov
push
clc
aad
mov
mov
cmp
or
mov
and
sub
cmpsb
repnz
jns
jge
and
nop
inc
daa
call
loope
pop
mov
stos
adc
movsb
mov
in
adc
push
push
dec
mov
xor
cs
mov
hlt
push
mov
pop
lock
dec
ret
cs
push
lahf
mov
pop
xchg
ret
cmpsb
pop
push
sbb
pop
jb
xor
fildl
adc
icebp
imul
pop
test
int
cmp
push
pop
cmp
jns
push
xlat
mov
cmpsb
ret
inc
ss
mov
enter
test
gs
add
adc
inc
dec
aaa
dec
inc
lahf
dec
xchg
adc
pop
sbb
inc
addr16
push
inc
sub
cli
andb
sarb
inc
mov
and
sub
mov
pop
mov
inc
pop
adc
jno
shrb
jle
mov
push
les
ret
aad
add
xor
test
test
dec
mov
out
push
sub
es
mov
mov
fsts
pop
fwait
insb
in
jg
mov
icebp
and
sbb
jo
jne
aad
aad
ss
adc
sbb
dec
push
test
loop
add
ror
jns
or
notl
adc
push
pop
jle
jmp
std
bound
dec
mov
je
cmpsb
xor
mov
push
pusha
shll
mov
fs
movsb
add
mov
mov
cwtl
mov
subb
lret
nop
and
push
jecxz
daa
repnz
js
bound
push
dec
repnz
xor
imulb
pcmpgtd
rorl
sub
cmp
in
dec
xchg
notl
cwtl
push
jle
mov
push
mov
rcll
js
addr16
inc
iret
in
test
adcl
test
push
or
int
js
in
mov
bound
aad
ljmp
or
adc
jae
hlt
mov
jecxz
inc
repz
dec
adc
lock
mov
in
mov
orb
movsl
push
lds
into
hlt
adc
leave
or
and
cmp
jge
mov
dec
fs
mov
jae
xor
xchg
push
or
mov
fwait
outsb
movsb
iret
pop
mov
nop
push
lods
mov
cmpsb
sbb
mov
jno
jp
or
movsb
mov
imul
push
mov
daa
js
aam
mov
dec
jbe
gs
cmp
jl
cmpsb
sahf
data16
das
dec
xchg
clc
sahf
cmp
and
push
shll
ror
in
add
mov
dec
sar
mov
test
idiv
adc
imul
les
mov
loop
mov
push
cwtl
gs
jbe
ficomps
adc
add
int
or
inc
pop
push
lahf
mov
or
mov
cmp
cmp
sbb
cmp
xor
mov
mov
sub
repz
cmp
jl
cmp
iret
enter
scas
jo
mov
in
mov
clc
lea
lret
push
es
adc
inc
fidivs
aaa
orb
fnstenv
movsb
or
sub
adc
dec
out
mov
adc
stos
in
mov
hlt
loop
mov
add
xchg
gs
add
mov
test
cmpsl
subb
push
call
cmpsb
jp
sbb
add
ficompl
into
adc
mov
hlt
push
lret
sbb
xor
lret
push
adcb
sub
sbb
mov
add
mov
loope
add
jns
movsl
cmp
mov
arpl
inc
sti
fisttps
mov
sbb
cld
js
outsl
jb
icebp
fst
xor
mov
lahf
idivb
inc
xchg
movsl
jbe
push
rcrb
and
mov
popa
les
call
icebp
or
sub
jp
sub
and
out
dec
pop
add
dec
sbb
repz
mov
or
fwait
mov
fcmovb
push
and
sub
hlt
pop
adcl
imul
or
pop
cmp
dec
cld
gs
out
or
inc
scas
sahf
leave
cmp
sbb
pop
mov
jmp
ja
fdivs
into
cmpsb
mov
sub
lcall
mov
push
push
xor
pushf
xchg
jmp
mov
inc
cmp
push
psrlq
sbb
fldenv
test
out
push
jo
test
or
mov
cmp
inc
aad
jle
pop
sub
pop
dec
frstor
hlt
mov
pop
sbb
mov
iret
add
inc
loop
cmc
xchg
sub
adc
inc
mov
repnz
inc
push
sarb
lods
data16
and
ss
jl
jno
mov
sub
cli
xchg
je
andb
and
and
pop
xchg
in
imul
popa
popl
test
out
inc
or
les
popl
orb
inc
lods
ret
pop
adc
sbb
or
mov
cmp
popa
fisttps
ror
sbb
andl
or
push
fisubrl
aaa
ret
and
xchg
jp
mov
addr16
movsl
out
and
pop
daa
subl
sbb
addr16
adc
mov
hlt
inc
push
outsl
mov
inc
add
cltd
imul
sub
lahf
cmp
insb
mov
sarb
sbb
mov
test
push
pop
or
popf
shrb
and
daa
pop
rcr
jle
test
xor
fimuls
xchg
mov
jp
mov
pusha
out
int3
add
fists
jecxz
ret
hlt
push
cwtl
dec
mov
shll
in
push
xor
add
sub
mov
xchg
scas
lods
arpl
pop
das
js
mov
fs
inc
daa
or
sub
es
stos
movsl
adc
mov
je
pop
mov
inc
push
mov
mov
add
sahf
in
imul
loope
stos
mov
push
pop
ss
mov
inc
xor
mov
push
dec
incl
sbb
adc
sti
sub
cmpsb
push
pop
push
sbb
sbb
cmp
mov
dec
fwait
std
or
rorl
add
test
dec
roll
loope
xor
dec
fidivl
outsl
or
rorb
jge
or
inc
test
xchg
jno
add
mov
push
sub
jno
mov
loop
jae
leave
add
mov
or
lods
pushf
xor
mov
out
push
push
pop
push
adc
xchg
ja
fdivl
mov
sbb
pop
sub
adc
adc
es
cmp
and
mov
dec
jg
jg
adcl
int3
enter
mov
clc
jbe
jbe
jb
mov
or
dec
push
mov
fstps
push
jo
pop
cwtl
aad
jae
test
ret
inc
imul
and
xchg
jp
test
je
aaa
rcr
cmpsb
cmp
or
dec
clc
mov
mov
gs
lcall
pusha
inc
jae
or
ljmp
bound
bound
jle
push
inc
ret
pop
push
push
adc
ss
mov
dec
xchg
inc
repz
popa
mov
mov
pop
insb
inc
call
mov
mov
in
outsl
gs
pushf
testb
repnz
and
gs
push
out
lcall
rorl
jp
andb
test
nop
mov
fimull
pop
sub
cmp
xchg
jae
xchg
fwait
or
adc
mov
mov
jl
dec
mov
roll
push
mov
fcoml
mov
adc
imul
pushf
scas
loope
gs
lods
jnp
dec
push
sarb
adc
addr16
sbb
rclb
mov
xchg
pop
aas
mov
pop
pop
mov
jae
mov
call
icebp
mov
pop
push
push
fs
dec
sbb
sub
scas
mov
mov
adc
movl
xchg
aam
inc
mov
imul
pop
call
push
fwait
inc
lahf
xchg
movsb
jae
ret
xchg
xor
fimuls
and
cwtl
loop
cmp
ficoml
jae
outsb
sahf
cltd
repz
jnp
sub
pushf
adc
pop
xorl
dec
lds
mov
sti
ds
cltd
cs
das
pusha
jp
sub
in
mov
mov
lds
popa
jnp
pop
ja
sub
scas
aam
jbe
popf
xlat
xchg
fsts
lret
pop
mov
xorl
gs
movsl
xor
push
or
xchg
dec
test
xor
mov
subl
in
push
test
mov
imul
inc
pop
inc
int
push
clc
outsb
mov
test
in
push
sub
ret
out
mov
pop
mov
dec
push
xchg
clc
sub
inc
shufps
ret
jno
mov
xor
test
dec
dec
add
mull
mov
aas
fisttpll
mov
bound
pop
movsl
jno
pop
icebp
jg
clc
dec
scas
mov
dec
push
sbb
mov
inc
test
push
mov
xchg
loope
inc
sub
into
dec
sub
add
ljmp
ret
pop
cmpsl
mov
sub
push
fwait
roll
iret
fists
je
mov
push
pop
movsl
mov
add
dec
push
sub
mov
jecxz
mov
sti
xor
cmp
es
lds
shl
call
das
aas
sub
das
cwtl
push
rcl
int3
sub
pop
and
gs
dec
sar
sbb
sti
lock
inc
dec
sahf
adc
adc
outsb
or
inc
or
push
clc
or
sub
inc
pop
callw
fnstsw
test
jp
pop
fcmovb
fdivrs
popf
popf
int3
xor
jg
outsl
fsubs
js
pop
dec
test
cli
mov
xorl
inc
insb
mov
cmp
xchg
jb
out
imul
sti
sbb
push
mov
adc
lods
pop
mov
dec
jmp
lods
in
push
jl
mov
sti
aad
xor
xchg
cmp
cwtl
cmp
lea
lds
push
xchg
pushf
stos
lock
xchg
int3
repnz
loope
xor
into
pop
mull
aaa
dec
stos
and
call
adc
or
mov
xchg
lods
add
push
jecxz
sub
mov
xchg
jp
mov
gs
push
push
mov
sub
jns
vcvtsd2si
sub
ret
imul
jne
and
mov
in
pop
xor
push
lock
ljmp
jge
lea
jnp
ss
into
xor
jne
lret
and
dec
lds
mov
and
inc
or
ret
xchg
test
fcomps
push
movsb
es
fimull
and
and
icebp
sub
loopne
in
lds
sbb
mov
push
and
mov
cmp
pop
add
cs
jecxz
sbb
inc
cld
loopne
inc
lock
cmp
lcall
jnp
jg
jne
mov
inc
or
push
mov
in
mov
int
sub
pop
das
jne
add
ja
scas
addr16
shlb
xchg
mov
mov
jns
mov
xlat
xchg
fldl
arpl
loope
mov
add
or
movsl
mov
inc
push
xor
nop
cmp
dec
sarl
hlt
adc
fisttpll
bound
pop
fs
in
inc
nop
adc
icebp
outsl
push
loop
push
xchg
ja
idivb
mov
sub
addl
push
dec
mov
add
adc
adc
pop
xor
cmp
out
or
pop
sbb
fwait
mov
sahf
daa
les
mov
inc
into
dec
imul
addb
jmp
push
loopne
and
repnz
mov
inc
les
mov
or
inc
inc
or
dec
mov
push
outsb
stos
or
pop
lea
adc
test
xchg
and
mov
xchg
xchg
out
or
int
cmp
mov
dec
dec
dec
out
shl
outsl
pop
mov
lock
gs
xlat
pop
push
push
add
jmp
cmpsb
adc
daa
icebp
sub
jmp
jo
add
and
bound
adc
cwtl
sub
mov
insl
xor
inc
add
out
mov
lea
and
sbb
lock
test
and
adc
xlat
add
into
lahf
cmp
dec
sbbb
and
testl
push
add
gs
sub
cwtl
orb
lds
xor
cmp
out
jl
test
adc
or
repz
and
int
push
jbe
lret
aaa
sarl
jbe
or
adc
adc
orl
loopne
push
xchg
cs
das
lahf
ja
pop
pop
enter
out
dec
cmp
push
xor
xor
int
sarl
pop
popa
ficompl
fdiv
push
sbb
xchg
lods
jge
sub
dec
push
mov
pop
pop
into
jecxz
flds
xor
sti
cmp
cmp
cld
add
std
xchg
imul
inc
or
insl
and
cmp
cmpsl
and
mov
test
loopne
rcll
inc
adc
cmp
insl
pop
cmovl
adcb
nop
inc
in
stos
sbb
cmpsl
fwait
stc
or
lret
adc
scas
in
cmpsb
jo
cmpsl
or
insb
pop
mov
and
xchg
push
push
sbb
daa
cmpsb
mov
mov
out
add
jl
aas
jg
sbb
test
or
scas
shlb
or
xchg
mov
adc
xor
int
loope
push
dec
push
aam
int3
jnp
pop
lcall
in
shll
mov
cwtl
test
dec
ljmp
cmpsl
lods
out
dec
cmp
pop
mov
aad
mov
adc
and
aaa
sub
arpl
in
mov
leave
mov
lcall
or
jnp
ljmp
jb
pop
shl
and
stos
pop
sub
xchg
lods
mov
cmp
into
movsl
sbb
ss
inc
nop
sub
push
js
and
aaa
iret
lret
xchg
ss
jge
mov
addr16
out
jo
scas
movsb
cmpsb
cwtl
in
or
mov
push
out
add
test
std
and
cmp
push
push
jl
and
je
mov
lods
loopne
pop
gs
cmpsb
fwait
xchg
dec
and
jmp
xlat
push
mov
aas
and
push
adc
sbb
mov
adc
lret
adc
jg
add
or
adc
lcallw
psllq
aad
nop
inc
jle
inc
or
jle
cmc
mov
fsts
mov
pop
sbb
jmp
lcall
iret
fmuls
fiadds
xor
adc
andl
jno
sahf
pushf
pusha
rolb
jmp
loopne
or
xor
or
scas
inc
popf
lcall
cmp
lds
push
scas
jmp
jp
mov
jecxz
adc
add
sbb
incl
repz
into
adc
add
ds
dec
test
sub
mov
jns
call
xlat
scas
xlat
mov
in
dec
jno
xchg
shl
sahf
add
xor
mov
cmc
mov
int
mov
in
sub
mov
rol
icebp
sti
and
jno
mov
push
jmp
xor
adc
faddp
jg
pop
or
sbb
adc
aas
push
mov
rclb
mov
add
loopne
pop
fcmovnbe
scas
jcxz
aad
sahf
cmp
sbb
stos
pop
mov
mov
arpl
addb
pop
mov
pusha
and
sub
sub
test
mov
cwtl
leave
cmp
add
jbe
jne
in
leave
ret
clc
cmp
fwait
or
xor
jne
mov
sbb
jnp
fwait
dec
mov
fs
xor
andb
ds
je
hlt
jae
add
cmc
sti
mov
movsl
test
pusha
mov
sbb
cmpsl
fdivs
mov
pushf
xchg
jg
sti
imul
sub
push
push
cmp
sbb
xchg
mov
in
in
mov
fdiv
cmp
mov
sub
jb
fisttpl
push
pop
data16
adc
and
loope
mov
and
jmp
dec
sbb
cmp
js
cmp
dec
ret
push
ficompl
in
lock
test
add
leave
mov
icebp
pop
ja
push
lret
lret
int
lret
add
cmp
rcl
sub
and
sbb
enter
push
loope
gs
jns
adc
out
jmp
or
and
cmp
repnz
rclb
jne
mov
push
sarl
fisubs
sti
sbb
iret
add
sub
adc
mov
xor
push
inc
dec
pop
mov
adc
sti
sub
add
mov
mov
push
push
or
pop
dec
xchg
jmp
sar
mov
lahf
enter
and
or
xor
jg
out
jae
mov
rolb
push
pop
mov
jae
xor
push
sbb
push
icebp
lahf
andl
aas
out
fimuls
and
push
fistpl
lock
push
mov
cmpsb
inc
rol
mov
repz
imul
jp
inc
nop
dec
popa
movsb
sub
loop
aad
enter
out
xchg
and
cmpsb
loopne
iret
add
shrl
xchg
and
sahf
test
xor
cmpsl
test
in
xchg
int
cmpsb
jb
enter
imul
aad
jae
sub
cwtl
adcb
xchg
lods
aas
jo
cmp
xor
les
xchg
lds
lret
andl
cmp
jbe
add
repz
sti
in
insb
jo
enter
popf
sub
lods
ljmp
insl
cmp
fs
mov
cmc
jecxz
ja
mov
in
pop
mov
jmp
push
push
jg
fcmovnb
stc
mov
jns
rolb
pop
repz
or
jb
push
in
lcall
loopne
filds
jle
add
cmp
clc
sbbb
bound
stc
aas
jle
pop
imul
sarb
loope
add
icebp
mov
mov
data16
roll
and
fndisi(8087
push
ffree
push
push
add
enter
daa
lds
outsb
repnz
inc
cmp
ja
adc
mov
jb
push
pop
push
add
test
jle
xchg
fildll
out
push
mov
dec
inc
cmp
mov
mov
sub
inc
mov
and
adc
popl
xor
mov
test
ljmp
add
movb
clc
jp
xchg
inc
jge
pop
in
sbb
push
outsl
jg
lods
dec
enter
adcl
iret
inc
sub
sbb
call
inc
gs
mov
loope
enter
mov
fnstsw
test
cmp
mov
lods
shl
xchg
xchg
aas
in
sub
fldenv
aaa
jns
push
push
test
mov
xorb
repz
test
sbb
mov
stos
aad
ljmp
sbb
ja
cmp
outsb
jb
inc
add
or
loopne
shrl
movsb
push
and
loop
push
fs
movsb
fs
push
mov
mov
mov
mov
stc
push
es
jmp
xchg
std
dec
test
adc
pushf
daa
jae
es
loope
cltd
in
pop
orl
mov
in
jl
jp
addr16
sub
jmp
pop
sti
scas
mov
sub
sub
xchg
and
neg
jb
test
jecxz
stc
into
pop
fnstsw
mov
lcall
aam
jbe
mov
sti
int
mov
sti
jle
add
ljmp
push
movsl
pusha
adc
mov
jecxz
or
divb
mov
jmp
popa
cmp
and
into
mov
lcall
insb
fldenv
aad
daa
arpl
jmp
jmp
push
fsubrl
es
pop
cmpl
rol
dec
jmp
and
outsl
rcrl
jmp
sub
pusha
mov
add
dec
test
pop
cmp
push
faddl
scas
popa
jg
addb
inc
iret
pusha
add
mov
cli
pop
adc
jo
pop
and
push
push
pop
jnp
xor
in
loopne
push
dec
adc
xchg
sbb
pop
or
cmp
call
std
inc
jmp
push
les
sbb
inc
stos
icebp
and
push
and
fwait
cld
andb
jb
or
test
ret
inc
or
jne
repnz
inc
dec
gs
xlat
scas
jl
push
sbb
mov
out
adc
fs
in
leave
cmp
add
inc
mov
mov
insb
add
mov
adc
push
ds
ljmp
adc
ret
mov
or
push
cltd
idiv
sbb
sarl
sub
mov
mov
loop
sbb
xor
dec
iret
fwait
nop
out
pushf
bound
xchg
test
out
jp
dec
jecxz
std
aad
clc
xchg
jp
mov
xor
dec
mov
xor
ret
add
and
pop
paddsw
fs
and
inc
jmp
or
imul
pop
adc
push
loop
add
mov
repz
lock
xor
pop
ret
scas
aas
mov
insb
adc
clc
out
jmp
js
sub
xor
lcall
popa
aaa
cmp
fwait
cmp
or
stos
inc
or
ret
lahf
xorb
cld
popa
popa
stos
xcrypt-cbc
cmpsl
adc
inc
jmp
mov
sub
fnsave
lds
int
cltd
dec
xchg
xchg
cmp
jecxz
in
enter
in
cmp
les
dec
pop
aas
inc
xor
xor
sub
jle
mov
movsb
data16
cmpsb
cwtl
xchg
cmpsl
dec
and
jb
fimull
inc
jecxz
mov
mov
mov
xor
push
jp
mov
xor
add
xor
mov
dec
jmp
outsl
stos
hlt
shrl
pop
mov
cwtl
dec
cmp
pop
sbb
add
mov
sahf
sbb
ljmp
push
std
xor
mov
mov
test
in
pop
lea
mov
jbe
jae
and
out
std
pop
icebp
cltd
pop
xor
int
repnz
in
mov
rcpps
add
and
sbb
inc
sti
xchg
adc
pop
stc
push
mov
stc
xchg
sub
in
pop
xor
mov
pop
jle
shlb
pop
push
jle
dec
mov
mov
pop
das
push
xchg
adcb
test
jae
loope
fimull
xchg
popa
mov
push
dec
ljmp
dec
mov
inc
rolb
dec
lds
daa
data16
loope
sub
and
sarb
pusha
mov
mov
cmpsb
mov
mov
call
ficoml
and
mov
mov
pop
stc
out
test
repz
shll
adc
lahf
gs
push
xchg
movsl
in
jno
dec
sahf
gs
lahf
das
arpl
add
mov
mov
xchg
daa
jbe
fstpl
imul
inc
arpl
rol
fbstp
addb
mov
leave
mov
pop
roll
jmp
pusha
mov
mov
test
add
ljmp
aas
add
sti
sub
scas
sub
sar
cmp
outsl
dec
sbb
xor
cld
dec
lds
mov
xchg
cmpsl
fs
mov
xchg
dec
out
clc
cmp
shlb
fwait
add
test
stos
dec
aaa
inc
cs
xchg
clc
jae
sbb
shlb
mov
pop
and
sbb
or
shr
ret
ljmp
mov
mov
sarl
jae
cmp
js
pusha
mov
int3
stos
dec
or
out
mov
pusha
cmovns
inc
nop
repnz
aas
dec
pushf
jle
pop
or
cmc
xor
and
mov
mov
and
cltd
in
fmulp
push
adc
fdivl
xchg
pop
push
inc
ljmp
jb
rorl
jmp
popf
lds
fsts
ficomps
add
inc
push
xor
inc
or
adc
lea
shrb
mov
xor
xor
or
sarl
or
pop
mov
pop
outsb
mov
hlt
scas
add
ret
fisttpl
scas
repnz
sub
sti
mov
daa
cmp
mov
or
cmpsl
mov
and
movsb
push
fidivl
mov
pop
stos
mov
or
ret
mov
imul
sbb
xchg
mov
testb
or
pop
mov
mov
test
mov
mov
mov
jne
mov
or
sbb
fs
or
push
push
outsb
cmp
mov
pop
ficoms
mov
cmp
ret
adc
pop
inc
test
test
xchg
cld
xor
push
xchg
cwtl
mov
jmp
sbb
das
lahf
and
mov
arpl
xlat
fildl
pop
and
lahf
cmc
jmp
jns
mov
arpl
sti
nop
neg
enter
ds
pop
xor
rol
rolb
sbb
pop
pop
movsl
jle
inc
dec
fadds
mov
add
and
mov
mov
push
xchg
sbb
mov
fsubr
sub
mov
mov
push
add
mov
test
call
andl
sbb
mov
ret
push
loop
sub
divb
insl
mov
xorb
in
cmp
xor
mov
cmp
mov
lret
xchg
popa
xchg
push
sti
jbe
xchg
push
out
adc
pop
into
into
xchg
adc
fsubl
in
test
in
add
pop
push
xchg
lret
test
mov
scas
popa
cmp
sbb
sub
inc
push
dec
stos
or
fnstenv
dec
movsl
cmp
add
mov
in
cmpsl
mov
jp
pushf
inc
adc
lds
cltd
je
outsb
mov
xor
inc
rol
cmc
movsl
cmc
inc
jno
fldl
in
insb
jno
add
mov
es
jp
mov
test
and
inc
in
dec
frstpm(287
in
repnz
jns
jecxz
into
stos
cmp
dec
sub
filds
repnz
in
orb
push
loopne
stos
and
daa
fisttps
lds
testl
shl
xor
sbb
insl
inc
or
xchg
idivb
or
xlat
fwait
push
loope
mov
jo
and
test
repz
adc
adc
lods
aad
push
outsl
call
leave
in
mov
add
rcrb
push
ret
cwtl
in
testb
mov
or
push
dec
outsl
aas
push
pop
mov
xchg
sub
jb
xchg
loope
addr16
cmp
xor
arpl
test
push
int3
mov
mov
jbe
mov
mov
scas
sub
sbb
mov
dec
cli
cmp
fwait
inc
and
push
lahf
mov
push
andl
and
xchg
sbb
cmp
bound
push
popf
leave
fisttps
mov
ja
lods
add
jns
sarl
stc
sahf
dec
ret
xchg
lret
divl
xor
inc
jl
add
mov
mov
adc
int
lds
fldt
ss
xor
dec
mov
push
data16
xorl
movsl
jne
scas
push
cwtl
or
cs
testb
mov
shrl
lds
std
shrb
shlb
dec
jae
mov
mov
and
xchg
shll
xor
jbe
cmp
js
inc
add
xlat
lea
insl
pop
jb
pop
sbb
out
inc
iret
in
sub
add
loope
mov
fwait
sub
mov
sub
mov
mov
jg
sbb
xor
decl
mov
pop
movsb
rol
iret
pop
mov
je
cmc
popf
icebp
and
mov
mov
lret
xchg
pop
mov
insb
add
mov
aam
pop
int3
shlb
fwait
js
cwtl
shl
stc
or
mov
jle
xchg
push
insb
sub
adc
aam
fisttpl
jno
fmul
jmp
fs
cmp
adc
and
jecxz
pop
ret
into
xchg
push
sub
faddl
daa
pop
iret
dec
push
rclb
and
in
daa
dec
shl
sub
arpl
mov
les
push
pusha
js
lods
dec
cmp
and
pop
push
sub
or
rcrb
call
mov
fisttps
popa
add
or
mov
js
mov
mov
mov
dec
xchg
cmp
xchg
jp
cmpsl
les
or
push
and
stos
pushf
int
mov
test
pop
sbb
int3
testb
daa
inc
xchg
or
in
cmpsb
lcall
xor
call
dec
push
call
xor
sti
lcall
inc
add
mov
xor
adc
repnz
scas
pop
aas
mov
sub
data16
jge
mov
test
mov
gs
mov
jne
pop
xor
out
and
adc
or
push
push
sub
mov
fistl
ljmp
mov
pusha
adc
mov
lods
fcmovnbe
jp
xor
push
mov
ret
gs
fwait
inc
push
arpl
shl
bound
pop
dec
push
cli
out
repz
xlat
js
arpl
mov
or
imull
stos
and
repz
mov
imul
adc
xchg
or
xchg
rclb
arpl
dec
push
scas
mov
or
loop
sub
xor
xchg
arpl
outsb
cld
mov
mov
stc
push
jmp
ficomps
add
les
outsb
push
adcb
cmp
js
mov
xor
mov
xor
push
and
fdivl
push
outsl
imul
mov
ss
in
cwtl
mov
lea
dec
mov
xchg
sub
scas
fmull
sub
mov
dec
pop
inc
enter
pushf
jmp
xor
cmp
inc
xchg
adc
call
sub
inc
testw
enter
push
insb
popa
out
mov
rcrl
mov
sub
andl
movsb
out
imul
add
sbb
cmp
jb
rcrl
adc
pop
push
xor
cmpsl
dec
mov
mov
dec
ret
mov
lret
add
jnp
sub
sbb
pop
sbb
xchg
ljmp
cmpsb
mov
xor
fs
lds
sbb
mov
add
out
mov
sbb
pop
mov
enter
sbb
daa
ds
lods
mov
shll
xchg
cli
std
fistl
daa
subb
sub
dec
cmp
pushf
sbb
cmpsl
imul
pop
popf
sbb
into
pop
lret
mov
jge
jp
int
fs
mov
xchg
sbb
hlt
mov
xchg
push
pop
mov
mov
repz
push
jb
inc
mov
xchg
push
roll
out
out
push
xchg
notl
dec
jge
xchg
adc
ret
aaa
mov
add
aam
sub
ss
jb
lock
ds
addr16
fistl
mov
pusha
sub
ss
push
push
movl
dec
xchg
call
or
aam
notb
cld
iret
pop
int3
addl
clc
jns
cld
pop
out
jns
sahf
add
test
dec
xchg
enter
mov
add
pop
sub
mov
xchg
push
mov
and
sbb
add
lret
std
adc
mov
cmp
xacquire
jae
sub
enter
fsts
dec
lea
in
mov
inc
mov
fidivl
loop
cld
pop
cmp
and
adc
es
lea
mov
mov
push
push
lds
rolb
cmp
fwait
xor
pop
jo
mov
sarb
pop
dec
add
out
inc
mov
gs
insb
outsl
mov
push
push
pop
ja
pop
push
fistpll
inc
lcall
fisttps
fdivrl
enter
pop
and
shrl
mov
lret
daa
sbb
mov
xchg
maxps
xor
sbb
test
in
mov
mov
xchg
lret
dec
cmc
scas
sbb
scas
jbe
aad
sub
add
test
pop
or
sbb
int
hlt
and
in
mov
shrb
jl
jle
into
jl
cli
es
cmpsl
or
xor
sub
mov
inc
dec
movsb
bound
dec
mov
test
or
cmp
dec
arpl
push
sub
mov
movsl
jnp
push
pslld
mov
imul
fsubrs
sub
in
sub
xor
repz
loop
or
jno,pn
sub
mov
sbb
jmp
adc
es
aad
sbbb
dec
jno
fistpll
and
pop
or
or
sbb
inc
xor
add
xchg
mov
packsswb
jns
jnp
sbb
adc
out
push
adc
sti
icebp
decb
and
frstor
sub
and
lods
stos
addr16
pop
arpl
movb
xor
mov
xor
or
pop
into
dec
movsl
int
cli
lcall
aaa
lcall
pushf
push
out
jg
nop
movsl
movsl
jge
jno
nop
xlat
dec
adc
sub
enter
shrl
pop
mov
or
stc
and
std
sub
or
out
imul
xchg
add
fidivl
fwait
mov
xor
push
xor
dec
jge
cwtl
nop
movsb
testb
jmp
cwtl
out
addr16
adc
insb
xchg
push
jmp
jl
jns
or
inc
clc
fcmovnu
jno
or
cmc
fucomi
sub
and
int
push
push
xlat
pop
adc
push
mov
xor
es
and
sub
adc
out
mov
mov
mov
fs
sbb
sti
add
sbb
rclb
jmp
lret
hlt
sbb
jmp
mov
xchg
dec
jo
and
out
fdivrs
fcompl
popa
ja
hlt
fistpl
sub
movsl
mov
mov
mov
and
popf
or
and
loop
ret
push
mov
testb
stos
rclb
insl
xor
or
jmp
or
add
inc
adc
stos
cmp
sbb
cs
loop
stc
call
jae
mov
jb
cmc
push
adc
sbbl
or
sbb
sub
mov
insl
sub
cs
and
inc
adc
cli
cmp
iret
lock
mov
sub
push
sbb
leave
scas
mov
cmp
pop
popf
imul
movsb
mov
inc
pop
pop
sarl
pop
pop
es
xor
mulb
push
xchg
into
stc
or
enter
js
inc
call
enter
fsubrl
bound
daa
mov
pop
mov
test
mov
push
daa
pop
and
daa
sub
mov
sub
lahf
push
cmp
jae
adc
scas
std
jecxz
adc
je
sbb
in
je
rcl
mov
or
testl
adc
jmp
and
mov
mov
xor
jno
scas
mov
int
sbb
or
adc
xlat
outsb
daa
imul
pop
push
lods
test
sub
jo
add
rcrl
lods
mov
pop
inc
popf
push
mov
and
cmp
mov
adc
sbb
and
stos
xchg
jcxz
aaa
and
xchg
mov
push
and
mov
cld
sbb
sub
stos
dec
stos
or
adc
jg
adc
sbb
aaa
sbb
adc
mov
dec
pop
jnp
pop
pop
movsb
pop
sbb
jg
add
dec
xor
repnz
outsl
int
addl
sub
push
add
cld
push
popa
in
cmpsl
or
pop
jo
ja
and
lods
je
popf
dec
in
dec
stc
inc
or
sti
jmp
movsl
leave
jno
or
in
pop
mov
xchg
push
rcl
sub
mov
jecxz
int3
sbb
sbb
es
and
pop
mov
into
xchg
mov
pop
call
and
sarb
jo
sub
add
lahf
pop
daa
icebp
sbb
minps
mov
inc
cmp
xchg
pop
pop
mov
lock
jns
lods
jle
dec
rol
and
pop
pusha
jmp
inc
hlt
add
lods
andl
mov
notb
fistpl
adc
dec
es
mov
or
pop
imul
jmp
rcr
xor
stos
push
in
or
cmp
mov
nop
mov
sub
cs
stc
adcb
or
test
ret
mull
add
push
mov
movsl
insl
and
push
xor
sbb
addl
pop
pop
lcall
adc
out
inc
dec
lahf
xor
ficoms
sbb
les
in
adc
dec
or
mov
iret
adc
sbb
scas
pop
data16
pop
in
mov
loope
push
mov
es
jl
push
mov
sbb
sarl
jnp
pop
cmp
jp
jne
add
jno
filds
pop
popf
or
scas
in
repz
push
fdivl
imul
inc
popa
aaa
fcomps
xlat
lahf
pop
inc
out
inc
mov
lret
dec
ljmp
and
add
jp
mov
lods
xchg
outsb
fs
push
cmp
pushf
fidivs
push
mov
xchg
inc
mov
xchg
sub
test
and
inc
mov
ja
shlb
sar
lods
insb
bound
mov
nop
and
add
sbb
pop
test
pop
mov
push
flds
test
mov
push
loope
testb
enter
add
cmp
inc
mov
inc
les
int3
es
dec
dec
mov
adc
adc
cmpsl
into
test
shlb
mov
aad
nop
sti
cmc
pop
ret
or
pop
sbb
pop
or
xchg
jbe
in
mov
mov
pop
fnstsw
dec
sbb
cmp
cmp
sarl
cmc
es
adc
push
outsb
jnp
cmp
sti
hlt
mov
stc
shrl
out
dec
mov
repz
xor
ja
shlb
mov
or
adc
daa
mov
negb
imul
mov
arpl
movsl
nop
cmpsb
xchg
push
pop
roll
inc
in
or
mov
mov
lret
imul
push
test
pop
mov
push
les
push
or
xchg
xchg
xchg
rep
mov
imul
out
mov
pop
mov
pushf
pop
shll
insl
xor
add
loopne
xor
inc
lea
or
xor
out
and
adc
dec
dec
fisttpl
outsl
sub
mov
jo
jg
sbb
dec
xlat
push
cmp
mov
mov
push
aam
cmpsb
cmp
test
fisubs
jmp
ds
xor
imul
xchg
sbb
cmp
test
test
push
sbb
dec
lahf
fwait
mov
je
add
ljmp
loope
fcmovnu
jo
sbb
jns
out
jno
jnp
mov
sahf
dec
inc
mov
icebp
cmpsb
mov
lock
adc
out
or
xchg
mov
cmp
cmpsb
scas
out
rcrl
add
sub
add
mov
xchg
add
pushf
cmpb
sbb
fimull
dec
pushf
ret
or
dec
in
iret
lea
ds
test
shl
push
and
dec
mov
push
add
imul
pusha
aad
dec
sub
outsb
sub
xor
aaa
mov
jae
addb
pop
and
xor
int3
scas
and
sbb
hlt
and
dec
imul
jmp
addb
ficompl
shl
dec
leave
adc
mov
repz
cli
cmp
fsubrs
add
fcompl
dec
inc
xchg
mul
mov
ja
add
pop
fdivr
mov
mov
js
sbb
xorb
xor
out
push
leave
popf
mov
fldcw
sbb
in
inc
jne
mov
fsubs
jmp
add
jge
dec
pop
add
jle
push
rolb
sbb
cmp
jmp
pop
out
and
mov
sub
mov
pop
out
jp
and
inc
mov
sbb
fwait
jecxz
int3
mov
outsl
inc
out
jp
sbb
lea
mov
pop
jno
fsubs
jle
jge
push
mov
xor
pop
mov
out
faddp
cmp
mov
out
cmp
push
adc
sti
dec
adc
movl
outsb
and
es
mov
pop
leave
xchg
movsl
mov
pop
test
lcall
movsb
insl
inc
mov
ret
fdivrs
inc
sbb
out
cmp
jp
push
adc
xchg
dec
sbb
outsb
pop
or
mov
xchg
push
aas
inc
bound
sub
cmp
shr
daa
imul
cmp
dec
adc
xchg
fidivrs
stc
xchg
aas
sti
cmp
int3
rep
xchg
adc
stc
add
inc
hlt
pop
jge
jo
ficomps
es
icebp
out
sbb
cmp
ds
xchg
jge
aam
or
mov
mov
rcl
rcrb
repz
jns
jmp
sub
fistpll
jb
sbb
inc
shld
aaa
loop
mov
test
test
cmpsb
pop
adc
idivb
out
jp
loopne
cvtps2pi
cmp
xor
outsb
out
loope
mov
imul
mov
mov
fisttps
mov
sbb
jecxz
and
sti
notl
out
shrb
or
roll
xchg
les
or
sbb
out
test
mov
push
or
jl
bound
jno
and
pop
mov
imul
ret
popf
stos
add
fs
mov
add
and
loope
adc
into
cld
or
fistl
je
and
leave
rcll
inc
xchg
test
push
mov
fnsave
and
push
aam
mov
out
jo
in
int3
repnz
inc
mov
sub
xchg
xor
add
repnz
in
jecxz
roll
and
adc
orl
pop
mov
dec
ljmp
lds
pusha
outsl
pop
mov
dec
pusha
fcompl
mov
mov
cmp
mov
mov
xchg
push
jne
gs
xchg
imul
pop
ror
shl
add
xlat
mulb
inc
push
jb
xor
sarl
addr16
pop
inc
or
les
pop
jle
mov
sbb
cmpsl
sbbb
pop
jl
int3
sub
push
xchg
and
enter
push
and
aaa
or
push
adc
or
sub
mov
mov
dec
push
lret
jbe
scas
js
sub
insl
cwtl
dec
inc
push
in
push
adc
sub
sbb
shll
imul
inc
js
sahf
fdivl
je
jno
push
out
in
push
and
mov
adc
add
daa
sub
aad
out
xor
les
mov
in
push
xchg
in
add
push
push
pop
std
stos
call
fmull
stos
add
les
inc
neg
and
lods
cltd
dec
xlat
add
inc
in
inc
mov
sbb
cmpsl
cld
mov
jno
andb
adc
dec
xchg
pop
arpl
xchg
push
pop
mov
xlat
sbb
loop
pop
xchg
repnz
jmp
xor
sub
inc
rolb
fwait
out
mov
jecxz
mov
movsl
push
pop
xor
add
mov
add
jns
in
xor
mov
cmc
pop
mov
sbb
pushf
lahf
xorl
fcomp
icebp
sbb
fisttpll
shlb
push
lods
cs
addr16
jp
pop
or
jne
loop
aad
inc
icebp
adc
mov
push
std
ret
stos
mov
dec
mov
movsb
add
jmp
dec
bound
xlat
jmp
ja
xchg
sbb
xchg
sbb
inc
mov
pop
fisubrs
xchg
sub
mov
mov
mov
rolb
call
push
or
xchg
clc
mov
inc
add
and
repz
jmp
xor
in
xorl
jnp
pushf
dec
mov
sbb
push
push
fisubs
pop
jnp
xor
cmp
jl
mov
pop
jecxz
adc
xchg
and
ljmp
fwait
cmpsb
push
and
movsl
mov
lock
iret
jp
fmuls
or
mov
pop
aad
mov
push
fxch
inc
dec
pop
lods
pop
push
and
mov
push
shrl
nop
push
iret
enter
loope
fs
pop
xchg
das
aas
jo
xchg
in
mov
nop
insb
and
cli
dec
leave
dec
roll
sbb
and
cmpsb
add
push
jge
add
sbb
lods
mov
mov
pand
test
dec
pop
cmc
push
xor
mov
cmp
sub
iret
gs
dec
sbb
fildl
mov
pop
into
adc
xlat
xchg
cmc
lahf
inc
lret
cmp
xlat
mov
jae
dec
add
sbb
dec
push
pop
add
stos
mov
inc
mov
adc
das
adc
xor
mov
xorb
or
sub
aaa
stos
popw
data16
bnd
xchg
mov
or
out
test
in
cwtl
call
mov
mov
aaa
fsub
add
jo
insl
int3
mov
aaa
test
sbb
fimull
add
cmp
enter
lea
xchg
test
pop
add
aad
lret
out
insl
dec
mov
inc
inc
push
in
shlb
dec
cltd
jp
sub
out
jo
outsb
hlt
arpl
hlt
push
and
std
aaa
push
enter
mov
xor
sub
push
dec
std
push
jge
and
jno
mov
dec
xor
inc
sub
cmc
fdivrs
pop
jl
push
mov
pop
dec
fsubrs
mov
leave
add
lahf
mov
daa
pop
out
in
sub
xor
adc
aas
adc
push
nop
push
les
pushf
stos
pushf
push
mov
mov
js
or
cli
xor
test
inc
mov
sbb
sbb
ljmp
mov
mov
ja
loope
sub
mov
push
insb
mov
xor
push
mov
xchg
inc
enter
and
sub
inc
xchg
xor
ss
sub
inc
jg
dec
mov
mov
and
clc
xchg
popa
aad
mov
and
int
shr
sub
sbb
push
lret
stc
jl
into
dec
stc
je
mov
pop
popw
out
xor
aad
pop
fucomip
repnz
mov
sbb
mov
mov
shlb
xchg
add
out
xor
rolb
sbb
mov
scas
sub
mull
push
iret
std
je
stos
cmp
cmpsl
mov
sub
pop
mov
daa
xchg
xchg
pop
lods
lahf
xlat
mov
ljmp
imul
cmp
inc
mov
cmp
or
mov
out
or
add
fidivrs
xor
lea
shl
rcll
mov
sahf
add
xor
sub
js
xchg
sub
arpl
mov
cld
fisubs
addb
lods
xchg
lahf
sbb
or
rcrl
push
loope
cmpsb
mov
push
xchg
jge
lods
adc
cmp
out
mov
xchg
add
push
jg
ret
or
out
clc
fwait
push
lea
cmp
jmp
xor
push
add
or
add
add
xorl
xlat
jg
out
jmp
mov
int
mov
ja
clc
out
xor
loope
movsl
adc
sbb
xchg
lret
jl
insb
jp
xchg
dec
daa
adc
mov
mov
mov
sti
repnz
das
aam
in
add
cmp
popf
push
in
push
sbb
rorl
jno
in
lret
enter
loope
xor
pop
loopne
les
sbb
cmp
xchg
pop
test
and
cmp
push
leave
dec
repz
imul
movsl
std
pop
xchg
mov
push
std
or
fdivs
sub
int3
jbe
or
xor
add
outsl
mov
sahf
push
ss
push
addr16
notl
jb
ret
jecxz
outsl
iret
push
test
push
enter
jecxz
push
mov
pop
or
mov
mov
or
imul
push
ss
std
imul
loopne
pop
gs
jl
and
addr16
bound
into
mov
or
insb
test
fwait
imul
or
xlat
push
push
paddsw
xor
enter
jae
jbe
cwtl
sbb
mov
and
xchg
and
imull
sub
push
rcrb
xchg
std
sbb
add
lret
push
dec
cli
mov
push
lods
test
jp
or
mov
lret
dec
mov
stos
pop
cmp
pop
cld
test
mov
hlt
inc
xor
sti
and
leave
testl
inc
imulb
mov
jecxz
out
jno
pop
jb
cmp
fucom
mov
cmpsl
ja
sub
mov
xchg
jg
out
leave
adc
sub
push
xor
jecxz
sub
or
push
stc
dec
inc
adcb
scas
and
mov
shll
pushaw
std
adc
cmpsl
fnstenv
mov
adc
mov
mov
daa
arpl
loop
movb
sub
cltd
mov
popf
mov
pusha
dec
adc
push
fmull
out
inc
pop
es
inc
popf
mov
and
xchg
lahf
xlat
out
xchg
addr16
pop
mov
lods
and
in
outsl
mov
push
push
push
popf
dec
xor
push
or
pop
pop
lret
jge
sub
push
dec
adc
xchg
xor
jle
push
andb
jb
mov
into
xor
jp
mov
test
push
pand
inc
xor
xlat
inc
out
mov
pushf
xchg
jne
repnz
adc
jbe
stos
loope
pop
ljmp
and
pop
test
rcrl
imul
jb
outsb
sbb
add
cld
movsl
jl
mov
mov
push
fs
mov
mov
fdiv
out
cmpsl
loopne
stc
imull
repnz
scas
test
arpl
aaa
xchg
dec
mull
adc
stos
xchg
lcall
test
rclb
in
or
test
push
sahf
call
pop
or
popa
xor
xchg
sub
add
dec
mov
mov
jp
mov
add
imul
outsl
cmpsb
jl
in
inc
roll
xorl
mov
xchg
aaa
adc
mov
aad
in
pop
rolb
pop
xchg
cmpsl
sub
nop
inc
icebp
xchg
push
hlt
into
adc
test
mov
cmc
and
lock
js
adc
pop
popa
sub
jnp
mov
aas
adc
mov
push
mov
push
xchg
cld
sub
cld
mov
mov
or
mov
pusha
inc
lret
stos
mov
cld
dec
push
repz
mov
pop
xor
jg
mov
mov
outsl
enterw
sbb
jg
nop
jne
xor
mov
outsb
scas
repnz
test
movsl
sub
jae
xchg
jae
mov
fidivrl
push
repnz
pop
add
mov
xor
or
arpl
mov
sbb
xlat
les
fcmovnbe
fldcw
ret
out
or
outsl
subl
dec
sbb
xor
sti
and
xchg
lret
test
jno
push
xchg
cmc
pop
pop
cmc
mov
lock
ljmp
mov
xchg
rcll
and
cmc
cmp
cmp
fidivl
pop
push
push
cmp
xchg
jl
std
nop
jnp
and
addr16
cld
loope
lods
inc
add
andb
adc
dec
ljmp
adcb
xor
cmpsb
cmc
xchg
repz
scas
mov
sbb
bound
and
pop
repnz
shll
jge
out
mov
jle
mov
leave
mov
and
mov
in
sbb
and
inc
adc
push
pop
outsb
jno
fmulp
adc
xor
cwtl
aaa
and
fnsave
mov
cmpsb
inc
adc
push
push
int3
into
out
shll
dec
mov
movsl
xchg
test
sar
mov
dec
cwtl
shll
push
pop
inc
mov
adc
cmp
es
jmp
sti
mov
int
aad
test
dec
sbb
nop
dec
fisttpl
mov
pop
cmpsl
lret
fcoml
stos
je
in
shll
mov
aaa
xor
add
mov
es
push
sub
daa
mov
push
inc
cmpsl
out
cld
fwait
sub
pop
aaa
scas
or
mov
sbb
mov
out
and
fwait
loopne
mov
aaa
xchg
jmp
scas
jnp
stc
rdtsc
jae
sub
jmp
adc
nop
ret
fsts
jno
mov
mov
xchg
call
popa
pop
xor
cmp
mov
hlt
ficoms
or
cmpl
xchg
xor
push
scas
pop
imul
lds
enter
and
and
repnz
loope
lods
stc
xor
jbe
push
test
jp
imul
sahf
inc
jns
xchg
add
fmuls
xchg
stc
leave
popf
dec
pop
pop
push
nop
incl
cmpsl
adc
push
sbb
pop
jne
jp
bound
das
ds
ret
cwtl
dec
popf
sub
lock
cmc
scas
cli
push
sub
xchg
fprem
sbb
and
pop
add
cltd
mov
mov
stos
cwtl
sbb
mov
cmc
stc
or
xor
lods
in
ret
mov
mov
xchg
sbb
adc
dec
repz
cmp
imul
aam
add
and
lret
mull
xor
push
repnz
adc
or
mov
cli
dec
mov
push
aad
pop
xchg
fwait
or
dec
inc
sarl
les
mov
push
jmp
jbe
push
fsubs
fcoms
inc
es
jae
scas
dec
mov
in
mov
jle
loop
and
pop
adc
mov
lods
adc
cs
jno
pop
sub
jbe
fnstsw
push
push
lcall
into
sahf
push
enter
fcomip
insl
jne
fucomi
pop
dec
add
lcall
push
push
insl
adcb
sbb
adc
add
xorb
mov
aam
mov
into
scas
pop
push
push
fdivs
int
idivb
push
out
das
pop
hlt
add
lahf
sub
sbb
push
xchg
paddq
jns
stos
movsb
inc
ljmp
cmp
pop
push
out
sbb
outsb
inc
xchg
add
daa
mov
ret
xor
jl
xchg
pop
mov
cmp
subb
cltd
push
imul
jns
add
fdivs
xchg
movsl
imul
lods
cmpsb
mov
jmp
repnz
pop
out
inc
ds
xchg
pop
daa
mov
daa
xchg
mov
fwait
sub
dec
inc
subl
stc
pop
inc
jecxz
sarb
incl
mov
ss
cmp
repnz
xchg
popa
ljmp
and
repz
test
jbe
add
xchg
fsubrl
out
in
fnstenv
jge
rcrl
call
bound
insb
dec
mov
jno
loope
ja
aam
or
ret
and
mov
or
add
pusha
pushf
mov
push
or
mov
fidivrl
rorb
mov
jae
pop
je
add
aas
sahf
movb
mov
inc
pop
mov
cmp
push
push
dec
stos
lods
aaa
stos
scas
xor
sti
sbb
lret
jnp
pop
xchg
popl
xlat
or
out
dec
jmp
sbb
adc
cmp
cwtl
pusha
jnp
iret
cwtl
shrb
shll
in
js
xlat
sub
sub
pop
cmp
lret
js
push
cltd
scas
in
outsb
push
mov
sahf
push
pushf
mov
in
inc
pop
imull
adc
pushf
orb
pop
add
xchg
mov
ss
into
jcxz
out
out
bound
aam
filds
sub
add
rcrb
sar
jp
mov
ljmpw
push
mov
out
cmpsb
sbb
mov
popa
das
test
pop
call
sub
in
and
aas
adc
stc
out
rorb
xchg
xor
add
pushf
lea
lds
test
aam
dec
adc
inc
int3
or
lret
and
outsb
xor
and
or
enter
cmpsl
mov
xlat
mov
and
sbb
outsb
mov
test
jae
fidivs
mov
cld
pushf
cmp
std
mov
out
loopne
or
cmp
jno
cmp
inc
test
test
xor
inc
jb
adcl
inc
sub
inc
fidivl
push
cmpb
je
movsl
sbb
orb
scas
xlat
outsb
sub
stos
inc
xchg
adc
cmp
les
mov
fnstenv
fsub
mov
push
loopne
loope
test
fistpl
movsl
fstpt
xchg
push
lods
dec
push
xorb
pop
cmp
cmc
xor
jne
lods
push
inc
adc
xor
pop
and
xchg
cmp
mov
addb
dec
cld
xor
stos
and
out
sub
lea
popa
lods
scas
fdivs
out
dec
push
int3
lret
iret
loope
mov
mov
mov
xor
popf
xchg
cli
mov
pop
or
mov
mov
insl
lcall
fucomp
cmp
mov
push
packsswb
xchg
int3
std
xchg
pusha
jbe
cmp
pop
loopne
outsl
push
sbb
pop
jmp
mov
push
lods
outsb
mov
dec
int
aas
pushf
sbb
sbb
pop
lods
or
push
adc
cmpsb
inc
push
dec
fsubp
mov
jge
mov
inc
sbbl
mov
ja
xchg
inc
xchg
cmpsb
bound
sbb
scas
or
lods
and
mov
ret
mov
rcll
stos
or
loopne
mov
fcmovnb
rorl
mov
aam
sbb
sub
ret
jae
cmpsb
add
sub
lods
or
inc
pop
arpl
add
jecxz
xchg
fildll
pushf
dec
es
lcall
pop
mov
cmp
movups
dec
std
cwtl
icebp
sbb
xlat
lock
dec
into
pop
mov
push
movsb
aaa
dec
xor
pop
int
pop
lret
mov
out
loop
iret
xor
lahf
hlt
negb
bound
ja
push
sub
push
mov
sbb
dec
loope
insl
xlat
ss
cmpsb
nop
cmp
push
push
mov
loopne
lahf
jb
pop
mov
test
test
cmp
fldt
je
inc
sbb
inc
nop
out
dec
aam
outsl
dec
mov
ja
or
pop
push
push
sarb
push
push
mov
les
stos
and
lcall
stos
rcrb
ja
pop
lea
movsl
xor
mov
pop
mov
jbe
ret
fistl
stc
pop
aad
pop
dec
xchg
in
jmp
adc
sti
jns
push
mulb
in
test
xchg
dec
fbld
cmpsb
cmp
enter
inc
int
out
pop
push
mov
loop
pop
imul
xchg
inc
inc
and
popf
std
jb
push
por
xor
or
sbb
xorps
jns
sahf
outsl
mov
sub
lods
jb
stos
cmpsl
mov
pop
mov
in
adcb
inc
or
dec
mov
xor
rorl
mov
mov
popa
push
aaa
push
jge
adc
das
loope
sub
dec
std
mov
test
imul
mov
cmp
fidivl
orl
imul
popaw
test
cwtl
mov
test
movsb
pusha
aam
fdivrs
call
or
aad
sbb
test
ljmp
add
insl
ret
push
dec
adc
out
data16
mov
cmp
pop
pop
push
mov
jmp
mov
lds
mov
test
xchg
jecxz
mov
out
js
lahf
mov
push
into
fisubs
nop
adcb
addr16
xorb
xchg
addb
insl
imul
mov
testb
jg
mov
mov
xor
jbe
out
sub
jno
dec
xor
leave
addl
and
inc
cltd
sbb
inc
popf
das
decb
fists
pop
cmpsl
adc
stos
and
or
or
xchg
jne
imul
jecxz
mov
out
outsb
mov
mov
mov
loopne
jg
fwait
sub
dec
repnz
les
lcall
sti
lea
test
mov
jb
pop
cwtl
ss
sbb
nop
icebp
nop
movsw
enter
cmp
ficomps
imul
in
sbb
xor
repz
xchg
bound
push
lret
push
mov
jl
dec
mov
aaa
xlat
and
fisubs
adc
ret
push
popl
icebp
sub
fistpl
in
pop
in
subl
mov
cmp
rcrb
pop
mov
fs
pushf
adc
stos
xor
arpl
in
mov
sbb
and
add
iret
xor
add
movsb
inc
adc
mov
push
add
cld
ret
mov
sbb
hlt
push
jecxz
sub
cmp
nop
or
add
and
icebp
mov
daa
outsl
cmp
mov
ja
outsb
xchg
cltd
out
mov
xchg
sbb
data16
cmp
arpl
imul
mov
rorl
sbb
loopne
testb
cmpsl
jl
in
mov
cli
call
sarb
mov
insl
xchg
fdivrs
mov
pop
pop
xchg
mov
jl
cmp
int
jmp
mov
jl
or
fwait
jg
mov
fwait
insb
xchg
jb
jbe
mov
lcall
jl
inc
pop
adc
push
lds
pop
xchg
sbb
mov
das
xchg
in
insl
int3
mov
xchg
fidivs
xor
pusha
cld
cltd
mov
je
outsb
js
mov
pop
ja,pn
sbb
jnp
jge
pusha
mov
dec
enter
or
pusha
sbb
test
jge
orl
push
insb
mov
cmp
cmp
mov
jnp
lock
cwtl
sti
jbe
imul
push
inc
cltd
fwait
out
lds
and
test
fisubrl
test
out
movsl
decb
pop
mov
push
add
push
mov
pop
lods
nop
sbb
mov
in
cmp
ljmp
outsl
adc
and
push
xchg
nop
and
xchg
fsubrs
sub
and
mov
aam
imul
adc
jne
clc
jp
stos
mul
pop
mov
jbe
cmp
jmp
jl
add
adc
int3
in
add
jg
lods
jnp
out
inc
sbb
aaa
fstps
xchg
inc
pop
fnstenv
jg
stos
dec
add
jo
or
cs
lea
jno
cs
cmp
in
cmc
inc
sub
jnp
jmp
push
aad
ja
mov
rcl
xor
dec
jns
push
mov
dec
push
inc
jl
ficoms
add
repz
xor
test
in
inc
test
adc
or
nop
cmpsl
inc
outsl
in
arpl
cwtl
into
int3
jge
jns
mov
sbbl
inc
subb
sti
mov
cmp
and
cmpb
xlat
daa
xchg
mov
mov
insb
sub
jge
cwtl
sub
add
dec
scas
dec
popa
jle
pop
outsb
push
fildll
ret
pop
jmp
outsl
pushf
rcrl
adc
call
fstps
scas
cmpl
inc
lret
cld
or
insl
mov
lds
bswap
add
inc
push
push
imul
in
pop
shrl
adc
inc
sbb
push
xchg
xchg
lds
add
lret
xchg
adc
dec
mov
aam
inc
dec
data16
out
nop
cmp
stos
popa
lods
fwait
sub
rorb
jmp
icebp
push
sti
scas
shll
sub
out
ret
jns
xor
dec
xchg
fcoms
aaa
loope
xor
clc
js
mov
gs
sahf
sbb
jle
test
xchg
cmpsl
xchg
aad
stos
pop
push
push
cmpsl
mov
stos
loope
mov
inc
jecxz
pop
sbb
fsubrl
mov
test
shll
mov
sbb
cmpsb
scas
shlb
int
jl
sbb
fisttps
mov
movsb
xor
imul
push
mov
push
rcrl
movsb
ja
outsb
add
out
dec
bts
daa
leave
shlb
dec
inc
xor
dec
cmpsl
lock
call
hlt
pop
cmc
shl
inc
xchg
jo
pop
fistpl
aas
std
in
xlat
stc
dec
mov
js
leave
add
sub
mov
nop
sbb
jb
adc
movsb
mov
fimull
repz
out
cs
movsb
fadds
mov
adc
pop
and
jle
add
add
inc
dec
jo
dec
popf
lods
into
sarb
into
jp
bsr
dec
pop
xchg
mov
pop
and
inc
or
inc
outsl
and
mov
inc
daa
mov
testb
test
sub
mov
popa
pop
jmp
xor
je
into
mov
mov
push
or
dec
call
push
push
lods
mov
adc
outsb
inc
mov
aaa
mov
sti
fnstenv
xor
xchg
xor
push
rcll
decb
mov
in
jnp
ret
and
jle
dec
hlt
mov
push
cmp
and
mov
sbb
sbb
jecxz
rclb
and
fs
mov
push
xchg
or
dec
testl
popa
mov
inc
fyl2x
sti
insl
std
cmp
pusha
add
jp
aad
test
dec
push
loop
imul
scas
mov
mov
dec
in
pushf
sbb
lods
les
cmp
sbbb
dec
mov
dec
adc
incb
and
data16
fucomip
arpl
dec
mov
mov
add
cmpsl
add
cmp
mov
ds
push
cld
dec
push
movsb
aad
xor
mov
test
and
add
js
dec
sub
add
loop
mov
imul
cmpsb
mov
adc
mov
xor
iret
aad
pop
dec
sub
cs
cmp
xchg
push
loop
data16
or
rcrl
push
imul
sbb
pop
xchg
push
fs
out
aam
jmp
andl
mov
lods
faddp
add
jo
pop
shrb
sbb
cltd
push
xor
std
outsb
js
pop
add
pop
lret
jmp
movsl
inc
xlat
xor
sbb
mov
sub
ds
jb
push
pop
adc
xchg
sbb
loope
arpl
add
incl
out
data16
in
popa
push
out
jnp,pt
add
adc
dec
cmp
adc
mov
outsl
insb
imull
push
jo
dec
je
adc
ret
push
mov
jecxz
outsb
outsl
stc
pop
push
mov
mov
push
data16
and
or
mov
mov
inc
mov
push
push
sahf
xor
jbe
iret
sbb
and
xlat
pop
mov
sbb
out
loop
push
int3
mov
scas
movsl
pop
push
lock
icebp
or
enter
mov
andl
sahf
or
testl
pop
push
cmpsl
in
jmp
cmp
jb
push
cs
pop
jns
sub
aad
stos
pop
mov
das
mov
stos
pushf
scas
push
pop
in
inc
lret
ret
ds
clc
pop
pop
popa
jo
jle
xor
je
add
or
stos
pushf
mov
xchg
pop
mov
scas
add
and
xchg
inc
leave
into
mov
add
push
adc
xor
out
jnp
and
and
adcb
in
sar
or
dec
das
push
xchg
inc
lret
push
push
jg
xor
jl
sahf
movsb
cmc
and
adc
repz
sahf
loop
jb
rorl
ret
test
cmp
lock
lret
adc
pop
xchg
mov
cmpsl
xchg
cld
xor
mov
int
fwait
mov
sub
test
roll
lret
cmp
cli
xor
adc
lcall
inc
cwtl
hlt
stc
rorl
sub
bound
xchg
inc
clc
neg
sub
and
xchg
hlt
sub
push
or
iret
cwtl
xchg
repz
stc
xchg
sahf
dec
mov
ljmp
lret
pop
cwtl
cltd
clc
std
in
dec
dec
jecxz
enter
and
jns
int
addb
jns
ja
loope
add
mov
shrl
sub
cmp
and
pop
jg
mov
mull
stc
call
js
movsl
cmp
sti
mov
jg
or
dec
mov
fdivs
inc
push
lcall
mov
cs
ja
call
xchg
roll
mov
scas
mov
mov
jl
push
dec
pop
lods
aas
push
pop
jb
push
xchg
and
dec
sub
imul
outsl
cmovge
adc
ljmp
dec
push
or
out
jge
push
imul
jb
int
jp
ret
mov
dec
mov
push
stos
adc
jo
dec
jle
loop
xor
outsl
out
or
push
mov
loopne
movsl
aas
push
out
pop
xor
cs
out
lds
adc
xor
mov
inc
sub
cli
decl
inc
or
dec
dec
xor
dec
dec
pusha
mov
push
xchg
and
cmp
push
jge
add
mov
lret
call
mov
or
xlat
fs
cmp
or
and
mov
pop
mov
fs
fwait
or
outsl
stc
pop
orb
sbb
dec
cmc
mov
mov
and
dec
js
sarl
aaa
into
push
mov
dec
sbb
jnp
in
paddusw
xchg
daa
adc
cmpsb
inc
hlt
xor
jo
ljmp
jl
push
mov
adcl
pushf
and
mov
pusha
fstps
xchg
pop
jp
mov
repz
pop
cwtl
fistpll
mov
arpl
xor
adc
pop
sbb
fs
enter
jle
push
shrb
mov
nop
rcr
dec
in
bound
add
into
lcall
mov
xor
sahf
xor
test
ds
dec
out
cmp
cmc
jmp
cmpsb
arpl
mov
aaa
lods
stos
test
push
mov
pop
jg
in
jmp
ret
mov
pmuludq
cmp
aas
jae
adc
gs
imul
lret
sub
call
std
cld
xchg
jp
inc
vprotq
aaa
cmpsl
cmp
dec
adc
xchg
and
push
adc
add
jl
and
sub
xchg
cmpsb
mov
data16
lods
pop
xlat
in
push
sti
imul
clc
in
and
mov
jb
fsubl
jge
cli
or
stos
iret
ds
cmp
add
aad
aad
mov
in
inc
movsl
lods
xchg
out
pop
xchg
xchg
mov
adcl
xor
pop
jmp
je
mov
xchg
aad
popf
es
ds
add
les
pop
sahf
adc
nop
cli
es
adc
js
jne
pop
lahf
addr16
sub
mov
jmp
xchg
test
or
push
mov
or
pop
ret
dec
and
les
pushf
enter
mov
adc
pop
stc
scas
ret
and
aaa
aam
ret
xchg
shlb
imul
dec
xchg
ds
adc
ja
push
repz
mov
cmc
aad
rcrb
push
loopne
lret
sbb
shll
ds
and
push
mov
daa
mov
adc
sub
add
cwtl
lock
test
ret
mov
inc
repz
outsb
pushf
call
push
out
js
jle
addr16
pop
xor
leave
cmp
ret
icebp
pushl
lret
pop
dec
mov
sub
and
repz
repz
cmc
inc
leave
fisttpll
fdivs
mov
mov
idivl
sub
subl
in
lret
repnz
aas
xor
leave
andb
cmpsl
ret
int3
sbb
cmpsb
js
insb
les
rorl
and
cmp
sti
xor
xlat
pop
jno
inc
xlat
fldl
inc
add
jmp
dec
sbb
push
sub
out
sahf
jle
icebp
aas
repnz
aas
out
stos
jne
outsl
xchg
add
popa
rcll
and
jp
es
pop
leave
add
push
cmpsl
insl
mov
sub
dec
inc
adc
xchg
test
je
popf
push
jbe
flds
push
push
jmp
adc
xchg
inc
push
xchg
push
pop
stos
call
lea
mov
fistpl
jae
push
cmp
cli
aas
pop
leave
add
push
repz
adc
jo
outsb
push
mov
test
push
xchg
pop
jo
pshufw
jo
jl
xchg
dec
dec
std
pop
stc
mov
mov
mov
lcall
cmp
xchg
mov
mov
enter
push
loope
cmp
adc
mov
neg
leave
daa
movsl
daa
inc
mov
pushf
mov
je
pop
dec
les
lock
push
out
add
xchg
lret
nop
push
xor
imul
push
sbb
lock
sbb
cmp
sbb
jb
jg
sbb
arpl
jl
pop
and
mov
jns
xchg
add
jmp
pop
outsl
and
sub
xchg
sbb
jge
addr16
in
xchg
and
cmp
loopne
int3
mov
sbbb
in
push
lret
inc
test
or
loopne
pop
mov
jmp
adc
in
out
nop
inc
mov
push
cmc
fildl
dec
aas
popf
add
push
xor
lock
movq
daa
mov
aam
fwait
mov
fidivrs
lea
in
adc
lea
test
cmp
and
jle
inc
or
sbb
cs
rclb
ja
ljmp
xchg
xchg
les
ret
test
xchg
adc
in
leave
lcall
lods
inc
rol
aam
inc
inc
cmp
scas
mov
and
fadds
mov
scas
shrb
sub
or
push
lret
adc
or
cmp
mov
or
stc
imul
dec
mov
mov
jne
mov
xor
popa
mov
sub
add
push
mov
movsb
adc
and
mov
adc
cmc
fs
in
sbb
addr16
int3
dec
mov
cmc
mov
push
mov
sub
and
insb
sbb
cld
bound
out
sub
jbe
aad
adcl
push
cltd
rcr
xor
xchg
cmc
clc
or
aaa
mulb
scas
aam
or
das
cld
fs
outsb
push
pop
fsubr
xor
jg
subb
add
push
xchg
in
sbbl
test
daa
popf
lods
clc
xchg
movb
scas
jg
add
ret
mov
xor
pop
stos
dec
pop
movsl
cmpsl
xchg
pop
insb
or
test
adcb
pushf
lret
lea
test
sub
mov
vpavgw
les
fidivl
sarb
xor
and
mov
push
push
fnstenv
mov
dec
push
and
popf
jne
dec
movsb
push
pop
mov
xchg
adc
mov
addb
into
mov
mov
jne
cltd
stc
daa
push
shlb
jno
cmpb
mov
pushf
pop
cmp
dec
pop
cmp
into
pop
scas
jg
inc
leave
out
mov
lods
dec
inc
xor
add
out
inc
or
jp
jle
push
mov
push
jo
mov
fistpl
xchg
add
cmp
insb
repnz
shlb
mov
jne
adc
jo
xchg
mov
xlat
sub
orb
xor
mov
mov
mov
adc
jno
sub
xchg
or
loopne
mov
mov
pop
icebp
or
sbb
mov
add
nop
in
cmpsl
enter
cmpsl
cmovs
repz
mov
xor
data16
imul
int
mov
add
mov
out
test
into
adc
xchg
push
sbb
fs
fsubp
dec
xlat
xor
adc
stos
ret
subb
sub
leave
sub
mulb
mov
cmp
jo
negb
mov
sbb
dec
mov
jle
jmp
sbb
xchg
cld
mov
mov
inc
cmpsl
add
and
jno
add
jne
push
xchg
xchg
xchg
fidivrs
fisubl
scas
sub
jp
fidivl
xchg
fiaddl
inc
repz
push
jo
mov
pop
jp
and
arpl
iret
shll
mov
push
stc
pop
clc
dec
add
mov
mov
clc
iret
push
cmpsl
inc
bound
push
nop
popa
mov
mov
mov
in
ljmp
jo
push
xchg
inc
xchg
cmp
mov
sahf
leave
xchg
fstpl
es
cwtl
fadd
adc
mov
aam
fwait
imul
test
lods
push
les
sub
cltd
ljmp
jne
cltd
pop
enter
xchg
fildl
push
pop
dec
push
shll
lret
xchg
jb
jno
movsb
push
push
and
xchg
xchg
decb
xor
jb
mov
das
and
test
fidivrs
xor
bound
mov
sub
rorl
cld
sahf
pop
aaa
cld
cmp
out
lods
mov
lds
loop
adc
mov
mov
daa
test
divb
sahf
cmc
pop
xor
arpl
lret
in
rorb
das
dec
adc
inc
mov
and
ret
or
push
pop
leave
ds
ss
dec
outsb
mov
repz
add
out
xor
dec
sub
jmp
xchg
cmp
sbb
dec
sti
imul
mov
in
jb
xchg
clc
outsl
fadd
sbb
cmp
arpl
sub
xchg
add
jmp
std
bound
pop
mov
sbb
ffree
xchg
pop
mov
in
ficoms
mov
dec
call
adc
into
push
pop
mov
aad
imul
dec
cmp
stos
dec
sti
push
insl
pusha
mov
dec
les
xchg
enter
jne
cmovae
mull
call
insb
mov
xor
sahf
jnp,pn
test
imul
xchg
sub
repnz
lret
popf
sub
sbb
dec
sbb
out
cwtl
xchg
arpl
loopne
xchg
dec
sub
xorb
cld
jp
lcall
cld
test
mov
mov
pop
inc
imul
ja
adc
fdivs
das
push
sub
clc
xorl
stos
sub
call
xor
mov
sbb
or
jmp
int
jg
jbe
cmpsl
cmpl
pop
add
jnp
inc
cwtl
out
fsubrl
and
dec
imul
sbb
cmpsl
add
fstps
pop
cmp
xchg
repz
pop
js
lods
cmp
repnz
out
loop
adc
xor
and
xchg
cld
mov
hlt
or
fidivrs
push
stc
fsubrs
xor
fxch
imul
orb
sbb
clc
dec
jno
into
or
mov
jp
or
int3
and
jnp
out
cmpsl
shlb
neg
jno
rorl
repz
hlt
mov
rdpmc
in
lcall
jmp
fsubl
jns
mov
sarb
sub
adc
filds
andl
mov
arpl
jne
sbb
scas
dec
insl
sahf
shrl
fs
iret
in
inc
jnp
ret
insl
mov
in
xorps
jp
sub
pop
dec
pop
xchg
inc
ss
rcrl
mov
in
fdivl
enter
push
cmpsb
xchg
bound
mov
imul
leave
jno
inc
test
lret
push
sbb
in
xor
repz
fdivr
pop
mov
push
jns
pop
arpl
mov
sbb
jbe
adc
cmp
jecxz
mov
mov
inc
or
out
ljmp
cs
mov
cvtdq2ps
test
inc
add
in
imul
inc
shr
sub
jbe
cltd
js
jg
pop
imul
call
pop
sarb
xor
dec
lds
mov
faddl
fcoms
and
xchg
int
outsl
xor
jbe
repz
or
and
sbb
cmp
insb
mov
cmp
push
mov
out
push
xchg
addr16
out
outsb
jmp
cwtl
ljmp
pushf
pushf
sbb
push
inc
push
hlt
mov
dec
push
lea
mov
test
cmpsb
enterw
dec
jg
leave
pop
stos
lcall
and
jbe
adc
cmp
mov
jge
adc
in
lahf
mov
cltd
adc
lods
lds
int
push
das
xor
sbb
xchg
add
jmp
insb
and
stos
xchg
lock
aaa
mov
cmp
leave
mov
negl
inc
sti
mov
in
call
imul
sub
adc
ja
add
arpl
adc
sahf
and
stos
roll
add
mov
and
dec
jmp
test
pop
stc
setno
mov
cli
jg
arpl
lret
out
lds
inc
test
test
sub
movsl
in
rcrb
adc
out
and
std
sub
add
dec
mov
push
sub
scas
ja
jbe
fs
test
roll
arpl
push
movsl
jno
out
lret
jnp
fnstcw
jo
sarl
mov
out
xchg
rcl
jne
mov
sbb
push
data16
shr
sbb
jmp
scas
mov
adc
push
mov
repz
pop
std
or
loop
fs
xor
xchg
push
xchg
sbb
fidivs
int
xor
imul
pop
hlt
or
jle
and
and
sub
adc
lock
mov
jbe
stos
push
inc
jge
mov
sbb
push
sub
inc
push
sub
sub
or
jmp
outsb
adc
xchg
mov
jg
sbb
leave
or
aad
sbb
ret
lods
sbb
or
mul
xor
xchg
pop
push
pop
add
dec
jns
je
scas
push
repz
xchg
arpl
mov
pop
test
cmp
pop
int3
aas
add
int
cmp
popf
cld
and
les
or
das
cmp
or
pop
in
movsb
out
lea
sub
out
fcmovu
inc
cltd
xor
cld
cmp
dec
jl
jg
repnz
dec
subb
test
adc
mov
or
mov
leave
enter
sbb
fs
dec
adc
jmp
stc
jo
dec
fsubs
adc
or
out
mov
out
add
sub
xor
adc
dec
inc
test
push
xor
hlt
out
mov
mov
out
adc
push
inc
lcall
lret
push
clc
ds
cmp
repz
push
int3
fidivl
loope
inc
cli
mov
jmp
in
pop
mov
dec
dec
pusha
repnz
mov
jo
addr16
cmp
rcl
push
add
repnz
aas
aas
mov
xlat
cmc
jb
sub
cmpsb
dec
mov
adc
enter
imul
sbbl
ret
inc
iret
int
stos
pop
jbe
in
jecxz
mov
mov
push
add
lret
mov
mov
adc
int3
mov
sbb
pop
mov
xor
fwait
mov
add
orl
icebp
out
test
xchg
les
add
cmp
out
add
dec
or
pop
mov
adcb
jae
es
xlat
sub
sbb
or
or
movsb
inc
push
mov
pop
imul
pop
sbb
sub
lret
lret
imul
clc
push
cmpl
orl
mov
push
mov
fmuls
pop
aaa
js
adc
mov
fsubs
dec
mov
sti
movsl
out
cmp
sbbl
icebp
jae
jb
sub
jnp
jne
and
ret
pop
jne
sub
andl
addr16
test
insb
mov
fsts
call
movsb
mov
js
mov
test
iret
loop
cmp
adc
adc
sti
arpl
xchg
push
xchg
out
cmp
ss
rcrl
int
add
out
movsl
movsl
fwait
je
divb
stc
aad
jnp
push
jae
mov
push
jns
or
test
ret
sti
cmp
loope
test
rolb
setns
ss
pop
ret
adc
rolb
mov
scas
or
add
repz
fisttpl
aas
adc
dec
ret
and
rolb
xchg
call
hlt
push
add
push
sbbb
mov
xchg
push
sar
or
mov
lcall
sub
jp
xchg
mov
mov
or
mov
xchg
pusha
sub
add
cmp
lret
xor
adc
enter
jno
pushf
xor
jl
cli
pop
fstl
jmp
xchg
jbe
lods
inc
cmp
test
sub
sarl
rcrl
pop
add
and
inc
subl
cmp
push
pop
inc
rcr
dec
push
xorl
fsub
hlt
neg
add
mov
fcmovnb
and
dec
popf
adc
mov
pushf
dec
loopne
test
fidivrl
or
ror
or
frstor
fchs
arpl
ds
xchg
lods
xchg
insb
mov
imul
rorb
stos
xchg
test
aas
jnp
or
add
fstpl
mov
cmp
mov
mov
rcll
lods
xchg
adc
sti
sbb
xchg
fs
dec
test
pop
mov
fs
fdiv
fadds
inc
nop
sub
sbb
scas
cmc
or
iret
lods
mov
call
mov
inc
loopne
into
clc
cmp
insb
ret
inc
adc
add
pop
scas
inc
or
rorl
pmulhw
mov
and
push
inc
rorl
stos
fadd
loopne
into
dec
arpl
repz
pop
nop
scas
mov
vpmacsdql
rcl
rclb
aaa
add
popa
lock
mul
push
mov
fisubrl
fdivs
xchg
dec
pop
jmp
cmp
xor
jge
xchg
mov
pop
das
movsb
mov
js
lcall
cmc
dec
out
or
cmp
int
adc
fs
clc
adcl
jecxz
call
or
hlt
mov
rorb
mov
jp
or
sub
movsl
xor
inc
sub
dec
js
push
xor
sub
pop
push
jns
bound
xor
enter
shll
push
inc
mov
repz
pmuludq
or
testb
push
cmc
pop
fildll
mov
push
inc
xchg
les
adc
fwait
add
aas
pop
xlat
push
repnz
orb
lcall
leave
mov
add
xchg
scas
pop
dec
lods
loop
push
je
sarl
mov
lods
or
in
cvtps2pi
shll
ljmp
sub
xor
mov
icebp
inc
sbb
pop
sbb
sbb
out
dec
mov
mov
mov
pop
std
insl
stos
std
mov
lds
sbb
insl
insl
push
pop
push
enter
sti
sahf
rcr
call
out
sbb
popa
in
xchg
xor
pop
pop
mov
popl
cli
dec
inc
dec
adc
pop
sub
adc
lea
fidivs
dec
movsb
out
lret
adc
push
std
xor
add
mov
xor
xor
pop
jb
xchg
jl
cmp
pop
cli
lods
xchg
scas
mov
cmp
jge
mov
inc
mov
outsb
inc
in
outsl
add
adc
sub
push
mov
dec
jbe
clc
aaa
dec
int3
insl
cli
jnp
xchg
test
xorl
gs
or
sub
or
adc
insl
cmp
or
inc
adc
sti
pop
aad
ret
adc
xlat
pop
fwait
jnp
or
jb
or
cmc
mov
cmp
xorl
adc
pop
or
repz
sub
imul
dec
sbb
sub
imul
stc
test
sub
add
and
pop
call
jae
adc
sbb
jo
ret
or
fmuls
cmp
add
std
cmpsl
inc
mov
imul
insl
nop
push
jl
mov
sbb
rcrl
and
ret
add
fimull
adc
scas
loop
ja
std
mov
out
stos
cltd
mov
push
xchg
xor
ficoml
and
xchg
add
xor
sti
dec
pop
ss
inc
mov
sbb
sub
data16
jb
mov
pop
push
sti
ljmp
stos
enter
fs
cld
push
mov
sub
add
jns
pop
push
jns
loop
mov
insl
add
mov
xchg
es
leave
push
add
ret
pop
adc
jge
mul
test
mov
popf
andb
mov
leave
pop
push
std
stos
mov
imul
dec
push
mov
ficompl
xchg
ljmp
sbb
lret
jns
scas
sbb
insl
inc
fcoml
aaa
sahf
mov
aas
out
stc
pop
or
aad
pop
mov
iret
mov
cmp
xchg
sbb
loope
mov
xchg
dec
push
xchg
jae
mov
mov
stc
test
sub
cmp
out
jle
xchg
repnz
into
clc
cmp
adc
xorl
sar
xchg
cmp
cmpsl
pop
and
pop
int
int3
xchg
nop
pop
in
ret
push
xchg
xor
fiadds
mov
sahf
insl
push
int
shlb
fildll
mov
rcll
cmp
enter
push
es
inc
adc
mov
pusha
nop
dec
movsb
push
mov
push
pop
xchg
repnz
lret
jg
dec
and
xor
ss
outsb
mov
xchg
xchg
fldenv
push
cs
adc
xchg
roll
push
xchg
cwtl
ss
xchg
and
jecxz
ret
in
and
jle
enter
popl
out
fs
sub
fimuls
stos
sbb
jne
pop
or
mov
sub
sub
mov
sti
negl
loopne
sub
xor
xchg
xchg
out
movsb
mov
call
mov
jle
lods
jns
fidivrs
push
jge
je
inc
push
popf
add
aaa
scas
fisttpll
add
cli
aam
inc
mov
lock
push
data16
lea
ss
push
iret
cmp
test
jmp
fsubs
or
lds
and
jnp
test
xorl
bound
stos
push
dec
stos
lods
dec
sbb
push
jb
scas
sub
mov
mov
jmp
pop
sahf
test
mov
out
dec
in
mov
adc
aad
test
loop
stos
sbb
push
push
jo
into
cmpsl
adc
sub
push
gs
into
scas
adc
gs
adc
xchg
lret
mov
or
movsl
das
xchg
shll
push
outsb
xor
jg
or
stos
imul
jmp
and
addb
ret
mov
imul
or
and
xor
repnz
bound
cli
mov
repz
xchg
stos
aad
int
or
and
jnp
jns
test
pop
xor
add
test
mov
add
fabs
mov
fmuls
clc
inc
loopne
push
cmp
insb
pop
inc
mov
add
jo
mov
pop
pop
xchg
sub
push
mov
inc
ret
xor
sub
test
push
loope
pop
aas
fistps
int
dec
dec
push
mov
je
push
sub
bound
mov
cli
fs
adc
out
and
sub
adcb
clc
add
mov
mov
into
sub
mull
mov
out
dec
ffree
test
popf
enter
ss
add
jae
rorb
jmp
sub
fcoml
cmp
bound
dec
jle
scas
xor
jo
iret
ret
sbb
dec
sbb
popa
lretw
dec
inc
push
fstps
call
mov
sub
call
rol
notl
cmp
movsl
ljmp
mov
jnp
loopne
cmc
mov
push
mov
shr
jecxz
push
mov
inc
into
mov
push
pop
mov
cmc
sbb
sbb
roll
mov
sbb
jno
arpl
sub
pop
mov
movsl
mov
jmp
mov
adc
fcoml
push
sub
sub
out
inc
xchg
pop
add
jge
scas
sub
pop
ret
mov
aam
movsb
insb
ljmp
cmpb
xor
loope
mov
xchg
lahf
push
and
sub
inc
mov
lods
dec
cli
bound
lods
sub
lock
icebp
fs
fcoml
and
cmp
mov
inc
fiadds
or
clc
sti
divl
and
mov
push
pop
inc
daa
sbb
addr16
sbb
aas
mov
int
cmpsl
dec
cli
or
push
into
sub
out
pop
sbbb
call
ret
inc
add
test
insl
dec
jle
add
adc
imul
inc
cmpsb
lods
data16
das
cmp
je
jnp
jmp
jne
jp
add
jge
movsb
or
cmpsb
xchg
lahf
adcl
int3
inc
mov
cmp
lods
xchg
nop
add
lahf
enter
adc
cld
jns
adc
es
mov
jle
or
leave
cs
jmp
xchg
popf
xchg
imul
mov
imul
mov
mov
mov
fsubs
enter
out
lods
cmp
in
out
je
gs
jecxz
sbb
psubd
xchg
xchg
xchg
movsl
mov
mov
icebp
cltd
ja
movb
push
popf
adc
loop
ret
mov
mov
popa
lea
xchg
or
loopne
or
inc
pop
cmp
sti
mov
les
scas
jecxz
cmp
xor
mov
xor
sti
cld
shlb
sbb
stc
dec
rcrl
push
cmpsb
jl
pop
lea
xorl
cmp
sarb
mov
pop
dec
mov
inc
cmp
data16
and
mov
mov
or
out
jg
xor
ds
rcrl
xor
jns
out
cwtl
aam
dec
inc
jbe
jmp
insl
sub
fs
pop
inc
nop
or
push
shlw
mov
push
mov
adc
jecxz
sti
rclb
clc
insl
ficompl
mov
xor
jge
test
ficompl
push
mov
aad
mov
pop
ja
enter
sbb
mov
in
pop
mov
pushf
sub
jecxz
push
int
jmp
outsl
nop
add
lds
xchg
jp
test
xor
cmp
or
aad
in
imul
xlat
jle
pop
mov
dec
lret
ret
mov
mov
in
xor
adc
push
mov
lcall
in
add
icebp
std
xor
or
scas
mov
pop
mov
lock
iret
daa
add
dec
push
mov
sbb
cs
inc
xor
mov
push
xor
sahf
adc
push
or
in
push
sub
jb
cli
mov
adc
into
mov
xor
repnz
jmp
adc
cmp
or
pop
enter
mov
pop
lds
mov
pop
lahf
push
mov
negb
push
sub
jnp
fisttpl
jmp
sbb
mov
loope
mov
jmp
shl
or
adc
sti
loop
addr16
inc
sbb
push
xchg
sub
or
xchg
cmc
movsl
repnz
hlt
or
xchg
insb
daa
mov
dec
cmp
das
loop
out
in
sub
outsl
pop
ret
mov
xor
push
add
push
shlb
cmpb
sub
fadds
mov
xchg
je
xorl
add
dec
incb
cmp
lcall
cmp
in
fdivrs
push
mov
jmp
pop
stos
sbb
stc
mov
mov
inc
cmp
jbe
push
push
inc
dec
inc
xchg
ds
sbb
mov
dec
lea
lock
bound
cmp
xlat
ret
sbb
add
pop
loope
mov
inc
sti
xlat
aas
sti
popa
or
outsl
inc
lods
push
sub
inc
and
jnp
das
leave
mov
inc
mov
push
hlt
xor
xchg
ficomps
push
mov
jno
push
push
sbb
inc
add
adc
fstpl
push
andb
mov
and
jle
mov
imul
mov
fwait
or
inc
mov
dec
les
into
inc
jns
jbe
sahf
mov
in
lods
enter
cmpsl
inc
ss
rolb
outsb
mov
mov
aas
add
sub
adc
in
push
call
mov
div
fadds
leave
mov
xlat
dec
jg
lcall
cmp
ljmp
mov
jl
pop
fcomi
in
fnstcw
pop
inc
sbb
inc
adc
mov
jl
in
sar
roll
or
push
into
dec
jp
jge
inc
clc
into
fsubs
inc
testl
jmp
and
addb
outsb
out
movsb
adc
shll
pop
xchg
sub
rolb
mov
les
fildll
out
int
dec
leave
ss
arpl
xchg
xor
cmp
and
pushf
lret
clc
add
leave
mov
fsts
dec
mov
cmp
dec
ja
scas
and
sub
mov
ljmp
out
clc
out
xchg
data16
xlat
xchg
mov
and
dec
push
sbb
jmp
lods
jbe
fisttps
inc
cld
mov
jle
xchg
mov
xor
add
push
adc
jg
cmp
mov
dec
push
inc
sbb
or
mov
mov
add
add
xchg
cmpb
xorb
dec
lcall
in
mov
xor
faddl
call
imul
out
and
cmp
sbb
mov
pop
add
jae
adc
lods
dec
xchg
ds
jecxz
lret
xor
pop
mov
xor
int
dec
dec
xchg
mov
or
into
mov
xchg
imul
dec
adc
add
ss
scas
mov
cmc
es
xlat
xchg
fisubrl
aam
sbb
jmp
shll
call
add
sbb
data16
sub
fs
iret
jae
inc
jmp
xchg
popf
add
loop
rclb
fcoml
lret
xor
push
ja
inc
and
pop
or
iret
adc
popa
popa
mov
enter
out
test
decl
dec
xchg
mov
inc
jg
in
jp
mov
mov
ret
ret
aad
aas
sub
or
pop
and
lods
jecxz
mov
inc
lahf
mov
xor
loopne
bswap
pop
cwtl
xchg
outsl
jp
push
dec
int
ret
int
push
inc
mov
xor
fbstp
mov
aas
sbb
and
in
mulb
add
out
push
jl
ret
cmp
pop
in
adc
push
push
arpl
in
lds
jecxz
outsb
hlt
sbb
or
adc
jmp
mov
pop
addr16
jb
cmp
clc
or
rcr
ss
aad
dec
adc
mov
mov
fldl
stos
and
sub
xchg
jae
push
sub
movl
scas
add
fldt
pop
repnz
push
roll
ret
fimuls
sub
sbb
push
jns
les
xchg
sbb
sub
mov
pushf
push
scas
dec
cmp
jmp
mov
mov
add
insl
and
fsts
out
adc
lret
ss
pop
outsb
in
add
jg
inc
test
mov
pushl
xlat
mov
and
inc
testb
sti
mov
sbb
in
icebp
mov
xor
jmp
mov
pop
adc
out
pop
std
das
in
lods
cli
icebp
mov
aad
sbb
mov
fistl
push
ret
loop
icebp
sbb
lods
sub
fimull
repz
lcall
mov
sarl
add
or
add
mov
lcall
or
inc
imul
xchg
pusha
shrl
xchg
dec
sub
fst
fcos
into
mov
loope
pushf
mov
cmc
stos
lea
ds
mov
push
repz
sub
popf
divl
gs
sub
cmc
mov
movl
mov
or
movsl
xchg
xorl
rolb
mov
jno
dec
pop
dec
out
xchg
loop
ret
scas
cmp
mov
cmp
mov
cwtl
xchg
push
dec
jnp
pop
fbld
fbld
adc
test
in
ds
cli
nop
das
gs
test
add
push
rcr
out
xlat
xchg
push
cmp
aam
cli
xor
psrlw
xchg
cmp
add
pop
mov
or
push
cmp
lret
loop
mov
test
out
je
lret
rorb
add
daa
xchg
and
pusha
dec
adc
popa
cmp
dec
stos
cmc
ds
shr
leave
imul
dec
xchg
adc
adc
dec
and
and
xchg
imul
stos
xchg
mov
imul
sbb
add
insb
xlat
cwtl
mov
shrl
loop
cmpsb
dec
mov
xchg
in
xor
div
push
sub
jmp
lods
out
inc
dec
leavew
icebp
ret
fstpt
das
dec
shr
cmp
mov
out
and
push
xor
adc
mov
daa
sarl
lea
in
jl
stc
xor
xchg
andl
enter
sub
xchg
mov
jmp
xchg
subl
test
sub
lcall
mov
cli
add
aaa
or
call
xchg
movsb
mov
int3
int
dec
int3
dec
sahf
mov
jb
ja
pusha
ror
mov
lds
xchg
scas
sti
sbb
pop
loopne
stc
or
movaps
leave
es
data16
out
cmp
push
fnstcw
pop
push
push
pop
mov
inc
aaa
gs
inc
mov
sbb
mov
inc
lds
mov
fs
mov
rep
cmpsb
adc
mov
shll
pop
icebp
mov
mov
and
cltd
sbb
test
xorl
add
ja
jl
fcoml
roll
lcall
hlt
fdivl
push
fcoms
fnsave
jns
es
sbb
lods
adc
icebp
and
in
arpl
aad
imulb
dec
xor
lcall
add
iret
negb
sub
out
adc
jb
dec
xor
imul
fstl
roll
mov
pusha
leave
and
out
xchg
aad
scas
jnp
test
add
nop
mov
test
dec
add
and
mov
sbb
mov
mov
lret
sahf
push
mov
cld
and
and
mov
test
movsl
cmc
lea
test
sahf
inc
cmc
iret
cmpsl
sub
jnp,pt
shr
in
xchg
inc
ret
mov
test
dec
add
xlat
fs
mov
push
fs
push
cwtl
fcomps
mov
gs
sub
cmpsl
xor
and
mov
jl
xor
jo
icebp
ret
scas
adc
int
fwait
pushf
inc
xor
inc
pop
or
xchg
cmp
jns
or
imul
in
sub
lock
out
ret
xor
ja
inc
inc
mov
adcl
testb
les
xchg
es
icebp
xor
lret
pop
out
cmp
or
into
inc
add
xor
stos
imul
sbb
std
rcrl
xor
enter
jns
pop
inc
arpl
cmp
mov
dec
mov
and
shll
int
fisubrs
sbb
insl
es
cmp
push
ds
arpl
pop
rorb
lock
ficoml
cmpsb
hlt
dec
out
jno
icebp
xchg
adc
sub
dec
clc
imul
js
mov
ficomps
xor
and
lock
cmp
cld
testl
jne
pop
dec
dec
imul
pusha
and
xchg
divw
js
or
adc
ds
cmp
mov
jmp
jbe
mov
movsl
inc
inc
imul
movsl
mov
cwtl
add
mov
add
ds
cmp
cmp
push
lcall
adcl
in
stc
jecxz
or
sub
je
jnp
push
ds
std
pop
test
mov
sub
daa
out
fadd
pusha
push
mov
or
pop
sarl
cmp
aam
out
adc
mov
and
cmp
lcall
int
rcrb
pop
cmp
mov
outsl
aaa
add
adc
xchg
das
lods
icebp
cmc
int
clc
movsb
mov
out
mov
mov
imul
mov
scas
adc
and
mov
push
push
sub
and
mov
repnz
call
imulb
loop
int
cs
gs
and
dec
idiv
xchg
stos
adc
hlt
and
sbb
pop
movsb
jb
dec
frstor
push
mov
adc
and
fisubl
orb
push
int
xchg
jl
mov
jmp
loope
call
lods
adcb
jbe
js
test
incl
hlt
sbb
jmp
pop
xchg
xchg
xor
into
push
push
sub
into
jle
int
stos
push
lea
mov
mov
inc
mov
in
jge
int
add
out
out
sub
add
dec
mov
jbe
sub
xchg
fnstenv
cmc
adc
inc
sub
mov
or
mov
mov
hlt
mov
hlt
cmpsl
jns
dec
push
loopne
cmp
push
adc
inc
fmuls
movsl
dec
sbb
cmovg
negb
daa
loop
shll
cmp
dec
inc
inc
popf
push
ret
jmp
call
dec
je
dec
int
out
sub
mov
popf
stos
outsb
push
xchg
inc
xor
sti
outsl
adc
push
jne
in
xlat
scas
push
sbb
mov
jbe
fsubs
pop
outsl
or
popa
adc
sub
test
cmc
arpl
repz
jg
in
pop
jge
loope
push
out
push
xchg
push
into
dec
jbe
fistl
sub
ja
sub
aad
lock
push
push
vmovups
mov
enter
mov
loope
js
cmp
and
push
xor
mov
pop
out
mov
sarb
pop
sub
cmp
out
stos
data16
sahf
xor
flds
or
adc
loopne
incl
iret
test
mov
pop
mov
cltd
push
jmp
je
pop
movsb
gs
push
mov
dec
in
icebp
or
cltd
andl
cltd
scas
mov
sub
mov
incl
mov
lahf
dec
aad
adc
jle
repnz
mov
popf
mov
xchg
in
gs
adc
inc
cmc
xor
mov
inc
add
imull
arpl
and
ds
div
mov
sbb
insb
int
push
clc
je
mov
pop
pop
push
lret
inc
xor
aas
cltd
fsubrs
mov
dec
mov
stc
mov
or
push
nop
and
adc
add
add
fs
add
jo
add
add
add
add
pop
add
pop
jo
add
add
in
add
add
add
add
sarb
add
data16
loop
add
add
add
mov
add
movsb
add
mov
aas
add
lock
mov
add
xor
add
mov
add
scas
aas
add
insb
aas
add
inc
aas
add
jl
add
and
add
pop
aas
add
add
add
inc
cmp
add
cmp
add
cmp
add
adc
add
loop
add
sbb
add
inc
add
lcall
add
add
mov
add
add
and
add
cli
cmp
add
pusha
cmp
add
lcall
add
cmp
add
add
movsb
cmp
add
sarb
add
add
mov
cmp
add
cmp
add
cld
cmp
add
add
insb
cmp
add
add
add
cmpsb
cmp
add
cmp
add
add
aas
add
cmpsb
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
js
add
dec
cmp
add
add
mov
cmp
add
cmp
add
add
sub
inc
insb
outsl
bound
inc
imul
push
add
inc
gs
je
imul
inc
add
xor
push
gs
outsl
outsb
jae
insb
gs
push
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
popa
jb
gs
inc
outsl
outsb
jae
insb
gs
imul
jp
add
add
je
outsl
arpl
gs
outsb
outsw
push
add
bound
inc
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
sub
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
push
jb
outsl
jb
je
inc
insb
popa
jae
add
fiaddl
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
cmp
fs
jb
arpl
jae
gs
outsl
jb
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
push
jns
je
insl
push
outsl
ja
jb
je
je
jae
add
inc
jne
jb
outsb
je
imul
jns
add
push
push
push
popa
je
dec
popa
insl
gs
add
add
je
outsl
imul
jbe
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
jb
imul
inc
add
xchg
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
imul
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
popl
inc
outsb
jne
push
imul
popa
je
inc
add
sub
inc
jb
popa
je
push
popa
imul
insl
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
outsb
je
outsl
insb
data16
add
jo
inc
imul
pop
ja
jae
jo
outsb
add
and
pop
insb
jae
popa
jb
push
pop
pop
jae
je
popa
jo
pop
je
jo
add
loop
pop
jae
jb
imul
pop
insl
imul
add
add
outsl
arpl
mov
pop
imul
addr16
insb
add
pop
imul
jb
outsb
je
add
add
imul
insl
bound
ja
add
pop
jae
popa
jb
push
add
js
je
add
add
insl
imul
push
add
gs
jae
push
gs
outsl
insb
add
add
arpl
insb
outsb
add
pop
pop
arpl
insl
outsl
fs
jl
jae
jb
push
add
je
arpl
jb
add
add
jne
imul
add
jae
je
jae
jb
popa
je
gs
add
push
add
jo
pop
insw
outsl
fs
dec
add
bound
jo
add
pop
jb
je
add
add
js
gs
pop
push
gs
add
aas
add
bound
outsl
insl
bound
push
outsb
arpl
add
jne
jo
jb
add
jbe
jo
imul
add
insl
je
insl
gs
or
pop
jae
ja
jb
outsb
je
add
scas
add
fs
jae
pop
imul
add
js
arpl
add
addb
imul
insl
add
bound
or
pop
pop
addr16
popa
imul
fildl
pop
gs
je
and
pop
push
imul
inc
push
push
cs
insb
add
dec
add
jo
imul
gs
js
add
pop
add
je
imul
js
inc
add
sub
push
jae
jb
popa
outsb
fs
gs
jb
outsb
je
arpl
jae
add
add
je
outsl
jb
addr16
jne
fs
imul
add
jns
fs
gs
outsb
je
mov
imul
jns
outsl
popa
jb
dec
popa
jns
jne
add
and
ja
gs
inc
js
add
push
outsb
push
imul
add
mov
jo
je
push
popa
addr16
add
call
dec
outsb
jne
fildl
push
popa
insb
imul
je
add
add
imul
arpl
outsb
add
pushf
add
push
jae
push
imul
arpl
add
jae
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
imul
jae
addr16
add
pop
add
push
imul
imul
add
fs
imul
add
push
jne
jb
push
je
imul
inc
jb
gs
inc
inc
insb
push
popa
jb
insl
add
add
popa
jb
outsl
dec
gs
inc
jne
push
add
push
add
je
popa
jae
dec
outsb
jo
je
outsb
outsw
add
push
push
inc
push
xor
cs
insb
add
add
je
imul
gs
lods
add
add
push
add
add
orb
addb
add
pusha
add
addb
add
add
add
add
add
add
adcb
add
loopne
add
clc
add
addb
add
add
add
adc
add
add
add
add
add
sub
add
inc
add
addb
add
add
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
add
add
addb
add
add
add
call
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sarb
add
loopne
add
xor
add
and
add
add
and
add
mov
add
add
mov
add
inc
mov
add
nop
mov
add
mov
add
add
roll
adc
add
add
jo
insl
add
add
and
insl
daa
cltd
gs
incl
insl
dec
jnp
out
cmp
fcoms
adc
cmp
mov
enter
sbb
sbb
xchg
in
sub
jle
orb
aad
cmp
lods
and
sbb
fsubs
mov
xor
pusha
jl
dec
lea
jle
inc
cmp
ja
jne
xor
sahf
cmpsb
imul
gs
mov
ds
mov
fisubrs
or
mov
and
sbbb
insb
dec
jne
adc
mov
in
test
out
and
jp
xchg
movups
push
jp
test
adc
dec
jb
xchg
das
adc
gs
adc
ja
add
xchg
jmp
push
dec
mov
cmpsb
push
jp
dec
leave
insl
aad
outsl
jae
inc
add
jmp
add
or
int
das
outsl
xchg
sub
in
push
das
outsl
repz
inc
add
imul
adc
imul
pop
test
cmpsb
jg
and
popa
jmp
inc
pop
test
inc
jmp
data16
test
mov
test
sub
and
loope
dec
lahf
test
shr
out
test
xchg
pop
inc
push
push
or
xor
inc
cs
aad
adc
mov
or
adc
or
icebp
mov
or
sarl
or
mov
out
iret
aad
mov
mov
or
bound
vpmacsww
xor
out
rcrb
xchg
scas
xor
iret
lock
popf
mov
xor
das
adc
push
outsb
xor
wrmsr
pop
popf
jno
xor
outsl
push
pop
popf
adc
xor
dec
jo
popf
xor
xor
scas
push
in
sti
sub
xlat
repz
aad
popa
fnstcw
repz
stc
mov
repz
inc
aad
cmpl
aad
loope
mov
repz
cmp
aas
sbb
xor
pop
sbb
mov
jg
fidivrl
jae
push
pop
sbb
mov
mov
jae
lahf
sbb
mov
lcall
mov
fistps
mov
jecxz
sbb
dec
mov
inc
inc
jl
das
nop
add
inc
pop
jge
nop
and
inc
mov
jecxz
pushf
mov
inc
cld
nop
andb
nop
mov
shl
mov
test
xchg
movsb
movsl
jge
notb
pop
movsb
notb
cmp
mov
jbe
arpl
jbe
add
sbb
movsb
jbe
and
sbb
ja
push
sbb
cmc
mov
cmp
outsb
dec
pusha
fcoml
push
nop
bound
inc
pushf
mov
mov
out
sub
cwtl
add
insl
sub
lahf
daa
insl
sub
mov
jns
inc
fbld
sub
incl
enter
std
pop
adc
sti
inc
iret
pop
adc
adc
xchg
xor
xchg
jae
fisttpll
scas
cmc
insl
jns
das
repz
inc
test
ja
push
push
es
mov
pop
inc
ss
mov
fdivrp
loop
sahf
js
repnz
sbb
out
adc
gs
test
add
nop
pop
lcall
adc
lcall
stos
adc
jle
data16
mov
mov
ficoml
pop
xchg
pusha
rol
lock
cs
cmpsl
cld
dec
push
int
in
push
or
sbb
imul
popa
ret
push
xor
scas
inc
mov
pushf
arpl
xchg
aas
mov
sbb
cmp
lds
or
pop
mov
test
mov
data16
out
mov
pop
sti
add
mov
sti
cmpsl
mov
cli
aas
cmp
lret
pop
in
push
pop
jg
pushl
in
inc
dec
jg
das
es
outsl
xchg
cmp
adc
int
rorb
mov
rorl
scas
out
dec
xchg
mov
push
fldcw
push
rorb
jge
jb
mov
testl
clc
fucomip
ds
dec
clc
ret
mov
mov
pop
divl
pop
fstpt
stc
pop
cwtl
inc
mov
enter
pop
xchg
shr
insb
popf
mov
repnz
jno
test
xchg
jge
xor
dec
icebp
mov
sbb
add
cmpsl
adc
and
out
ss
mov
pop
outsb
iret
insb
sub
xchg
loop
sbb
add
cmpl
out
mov
sbb
xchg
fdivrs
or
mov
mov
push
scas
out
scas
push
in
add
lods
js
add
cmp
jno
shll
flds
stos
inc
jge
leave
push
lock
ja
lret
aaa
mov
mov
fiadds
mov
jle
sbb
dec
lahf
jo
subl
mov
mov
add
mov
aam
pop
cmpsb
pop
inc
xor
out
dec
xchg
scas
and
shl
ja
cltd
scas
sbb
lret
fsts
je
add
jl
icebp
mov
or
or
test
xor
or
ds
dec
add
jge
or
mov
adc
cmpsb
int3
dec
sar
mov
push
mov
bound
pushf
shrb
or
mov
mov
sub
or
cmp
push
sub
push
inc
lcall
xchg
jecxz
xchg
xchg
into
xor
sub
xlat
xchg
sbb
jge
lret
fmulp
cmp
push
and
mov
loope
cmpsl
ret
aam
sbb
dec
lcall
dec
dec
xor
xor
sub
pop
pop
pusha
cltd
xor
pop
adc
mov
mov
lret
sbb
sub
mov
pop
data16
adc
jmp
call
adc
mov
movsl
add
lock
cs
loop
in
fiaddl
pop
sahf
sbb
stos
insl
imulb
jnp
or
inc
inc
pop
cmpsb
xor
xor
xlat
push
mov
cmpsl
sbb
or
and
xor
mov
pop
rolb
push
test
rcl
dec
orb
cmp
aam
and
cmpsl
es
jmp
repz
loope
das
push
test
lret
sbb
bound
aas
rorb
add
push
xor
sub
ror
cmp
sub
jns
test
mov
and
xor
imul
clc
pop
dec
repnz
rcrb
insl
testl
popa
insl
inc
push
lods
push
jg
mov
negl
inc
inc
pop
sbb
decl
push
adc
ficomps
adc
pop
outsl
cs
jnp
inc
dec
push
lret
sahf
push
cmp
cwtl
inc
addr16
adc
or
push
les
push
mov
mov
jne
js
in
inc
ja
dec
push
insb
out
sub
or
jle
repz
jg
divl
xchg
xchg
movsl
repz
je
addr16
sbb
or
cltd
push
mov
and
mov
pop
push
sub
adc
pop
testl
test
std
stc
jno
hlt
xlat
push
cmpsb
and
rcrl
jb
or
out
fcomps
insl
int3
shll
add
stos
mov
jae
cld
pop
fwait
xor
xchg
jns
or
scas
push
test
imul
icebp
in
xchg
xorl
and
jne
cltd
mov
jmp
out
lret
mov
lock
mov
mulb
fnstcw
add
enter
pop
fldl
sti
loop
mov
mov
rcll
pushf
je
icebp
dec
and
ljmp
pushf
outsl
ss
mov
xor
mov
inc
dec
mov
cmp
sub
loopne
jg
and
and
rclb
subl
scas
mov
stc
or
fistps
in
sti
leave
push
scas
push
loope
jg
mov
stc
rcrl
lret
add
in
xchg
xchg
add
mov
lods
js
ja
mov
sahf
pop
iret
shl
dec
xor
pop
push
jmp
mov
jnp
aaa
sbb
fdiv
and
mov
fs
sti
xchg
dec
adc
nop
cmpsb
inc
imul
xor
fildl
mov
and
imul
inc
es
aam
mov
adc
sti
test
data16
dec
pop
dec
hlt
mov
mov
add
movsl
mov
dec
dec
sub
movsl
xor
out
adc
int3
pop
out
test
mov
pop
testb
xchg
xor
inc
sub
cmp
fldt
xchg
mov
jns
mov
xchg
scas
mov
in
mov
and
std
mov
pusha
push
pop
lds
add
popf
ljmp
ljmp
push
jbe
adc
int
aam
js
imul
lock
call
clc
inc
ljmp
leave
test
dec
xchg
loop
mov
fs
movsl
pusha
stos
jp
inc
mov
sub
imul
push
outsb
shll
icebp
clc
scas
pop
xchg
cwtl
std
or
jmp
addr16
idiv
or
cmp
sub
pop
call
cmp
negl
add
pop
jecxz
cmpsb
xchg
movsb
aad
cmp
or
fxch
push
pop
aaa
mov
es
push
xor
inc
pusha
or
inc
inc
imul
push
movsb
outsb
shrd
rol
cmp
dec
sub
out
cmp
dec
jmp
scas
movsb
cld
enter
add
jle
jmp
pop
sbb
add
fsubl
xchg
divb
mov
pusha
cmpsb
pop
test
pop
push
lea
inc
cmpb
incb
push
je
push
xchg
push
fdivr
pop
pop
and
sbb
popa
fimuls
cwtl
ret
sub
ss
mov
in
mov
outsl
mov
mov
and
push
cmp
and
sub
mov
mov
inc
cs
fxch
nop
push
addb
movl
adc
fs
push
lods
loopne
fstpl
gs
ss
scas
mov
call
data16
testl
xchg
test
ljmp
xorb
sub
jmp
xor
ljmp
stc
adc
std
mov
mov
mov
out
rorl
pop
dec
jmp
fsubrl
jo
in
dec
sub
cs
jnp
push
and
pop
cld
pop
push
outsb
lahf
ds
hlt
push
dec
jb
push
and
int3
insl
pop
scas
push
xor
movsb
int
xchg
mov
sub
mov
mov
inc
dec
inc
sub
and
pop
push
cmp
movsb
jmp
enter
mov
int
xlat
rolb
shlb
xor
cld
pop
aas
add
loopne
aaa
or
xchg
xor
add
cwtl
cmp
sbb
cmc
or
gs
fwait
push
mov
xchg
dec
nop
lea
std
out
add
xor
mov
and
dec
sub
mov
cld
or
popa
arpl
add
inc
cmp
notb
jl
js
push
adc
mov
fwait
sbb
setne
xlat
mov
ret
pop
pusha
xor
or
jge
imul
pop
addr16
imul
loope
lds
inc
jnp
loope
hlt
sub
and
dec
mov
jo
nop
xchg
daa
aam
out
jae
scas
mov
mov
or
xchg
sbb
xchg
add
mov
add
pop
sarb
pop
inc
ret
mov
sahf
and
sub
pop
imul
or
and
in
pusha
inc
pop
sbb
mov
jbe
adc
outsb
enter
dec
mov
ja
xchg
out
stos
or
lcall
or
lods
out
xchg
movsl
int3
push
jb
lahf
fisttps
ret
ret
test
xor
cltd
scas
push
call
mov
repz
call
mov
out
jo
mov
adc
xchg
out
sbb
cmpw
mov
fadds
movsl
dec
out
mov
jmp
inc
sti
mov
pop
mov
dec
sub
jo
ret
mov
adcl
nop
pop
mov
adc
xchg
loop
jl
jecxz
cmp
push
and
inc
pop
xchg
adc
rorl
rcrb
loopne
out
jne
adc
fildll
dec
pop
out
push
mov
jecxz
sub
inc
ret
sub
ret
and
andb
scas
insb
pop
dec
mov
push
sti
shlb
or
mov
je
mov
xor
sbb
pusha
fcompl
lods
aas
cmp
icebp
cwtl
ja
test
sbb
rol
or
push
and
sarl
pop
cmp
fsubs
es
mov
jae
sbb
test
pop
xor
xlat
loopne
pop
jns
push
dec
pop
pop
out
test
je
in
dec
je
bound
out
icebp
mov
sub
aas
push
sbb
sbb
xor
fisttps
lock
add
jae
xlat
push
xor
jecxz
fldenv
sbb
xchg
in
pop
into
je
sub
and
jae
add
movsl
pop
xlat
andb
pop
shl
pushf
push
daa
fnstsw
push
movsb
call
pop
or
js
les
fcos
jno
jle
test
decb
pop
insb
xchg
popa
pusha
das
aad
mov
dec
pop
stc
push
pushf
cld
mov
cmp
sub
push
jns
cwtl
push
je
sub
lea
push
mov
inc
or
xchg
fstpt
pop
movsl
fstpt
xchg
sub
cmp
mov
fwait
dec
mov
popa
jns
sub
lahf
lock
fadd
jne
sbbl
cmc
dec
testl
or
int3
stc
mov
ret
mov
std
cld
sti
add
dec
jo
sub
pop
lds
inc
movsb
and
jle
dec
pop
sbb
jmp
jnp
push
test
xor
add
pop
jmp
xorb
movsl
push
sahf
xchg
sub
sub
add
mov
out
pop
das
add
dec
mov
or
mov
xor
dec
les
repz
cmpsl
daa
divb
dec
add
stc
lods
jg
repz
gs
jp
js
push
test
push
and
in
in
add
ljmp
cmp
loop
int
aaa
mov
mov
sbb
xor
jp
stos
movsb
or
idiv
mov
mov
scas
mov
stos
inc
xchg
insb
movsl
mov
rclb
fldenv
test
test
jnp
stc
add
xor
imul
in
or
inc
add
lret
icebp
outsb
cmp
mov
xor
xor
mov
lahf
dec
jmp
push
push
pop
mov
inc
das
in
jo
inc
test
sbb
cmpsl
ret
ja
cmp
or
adc
jmp
xor
loop
pop
pop
dec
std
jl
xor
pop
inc
add
pushf
leave
stc
inc
lods
stc
cltd
sub
rorb
mov
call
sub
cmp
sub
movsl
cld
fdivrs
and
push
inc
cmp
or
mov
jg
mov
movswl
out
jge
push
dec
mov
cld
es
leave
mov
mov
mov
cmc
popa
pop
mov
jns
inc
faddl
or
das
mov
test
out
xchg
loopne
pop
sahf
fmull
int3
popa
jae
dec
out
push
scas
push
sub
sbb
lods
xchg
lea
xor
sbb
bnd
cmp
jns
mov
adc
lock
lock
into
pop
cmpsb
test
mov
xchg
out
and
push
dec
mov
or
jb
repz
sbb
scas
clc
test
cmpsb
push
sbb
loopne
in
ret
outsl
xlat
pop
pop
cs
mov
mov
scas
push
jg
pop
movsl
fldt
jnp
ljmp
cmp
aad
daa
outsl
mov
sti
push
inc
or
sbb
cmpsl
sti
out
add
fidivrs
cmpl
in
or
jle
adc
mov
std
xor
push
jmp
sbb
stos
sti
mov
and
dec
inc
das
test
aad
sahf
stc
decl
aaa
std
xor
dec
in
push
scas
aas
scas
push
and
jle
jl
push
pop
addr16
jbe
sti
or
repnz
add
pop
fcoml
push
cwtl
push
js
mov
mov
jg
ud0
repz
and
in
xchg
jp
xchg
xchg
add
and
dec
pop
movsl
jecxz
dec
jmp
scas
movd
rorb
in
mov
mov
dec
divb
mov
ss
jle
jp
into
xor
mov
push
mov
stos
idivb
loop
and
dec
mov
mov
push
or
call
push
push
push
pop
movsb
push
mov
and
cmp
xor
mov
jge
inc
fsubs
das
xchg
sub
mov
test
jbe
repnz
push
push
lods
push
push
dec
leave
out
test
sub
xchg
fists
insl
test
mov
stos
hlt
adc
ja
add
outsl
dec
pop
xchg
mov
add
mov
cmp
pop
mov
jmp
lods
xchg
mov
outsl
xchg
mov
je
mov
addb
mov
and
hlt
mov
mov
ret
jge
xchg
xchg
pop
or
stc
andl
aas
sbb
push
cli
test
insl
and
lret
cld
lods
testl
push
adc
xchg
push
cs
and
nop
ret
mov
add
clc
mov
dec
iret
fsubr
xor
and
repz
jne
cli
lret
lret
clc
add
xchg
mov
pop
rcl
and
stos
js
dec
push
lods
hlt
je
stos
scas
sub
lahf
fildl
jmp
push
or
sub
dec
mov
hlt
sub
push
mov
add
push
outsl
fidivrl
mov
mov
loop
iret
leave
lcall
or
fmul
outsb
adc
xchg
aam
or
xor
mov
xchg
aam
mov
je
das
es
sub
cld
lahf
test
notl
xchg
cmp
or
cmpsb
cmpl
pop
call
mov
in
ljmp
cmp
mov
jbe
mov
and
mov
cmc
xchg
pop
mov
adc
dec
ror
scas
push
in
ds
pop
insl
jne
xchg
das
cmpl
mov
cmp
xchg
pop
xchg
fucomp
test
cmp
mov
xchg
jb
add
loopne
cli
bnd
mov
icebp
mov
fmul
xor
out
mov
pop
sub
inc
sub
and
adc
push
fstpl
out
jmp
mov
mov
mov
leave
out
xor
cli
ds
mov
pop
shlb
ds
add
and
push
sub
outsl
or
adc
mov
lcall
decb
gs
sahf
ds
jp
mov
int3
mov
sub
add
sbb
inc
in
jecxz
add
fwait
jp
cmp
and
and
push
rorb
out
sub
repnz
ficoms
mov
add
pop
cmpsl
mov
mov
adc
repnz
nop
clc
and
xor
mov
pop
jne
fildll
sbb
imul
sbb
add
sbb
pop
add
sub
pop
sub
insb
loop
xor
mov
mov
adc
cmpsb
jg
imul
push
or
pop
pop
nop
jo
push
and
stos
outsl
and
adc
scas
mov
out
xor
lods
pop
shl
jl
clc
call
fdivrs
dec
sbb
leave
jne
mov
fcmove
push
stos
pop
cltd
das
test
aad
sub
sbb
call
imul
fcompl
jecxz
mov
sub
stos
sbb
xchg
add
cmpsb
test
imul
movl
xor
jg
jno,pt
pusha
or
sbb
add
out
sti
iret
inc
insb
jne
cmp
insb
jb
and
or
scas
mov
push
std
lods
in
cmpsb
pop
je
and
stc
les
inc
cmc
xchg
icebp
pop
cmp
mov
aas
xchg
lods
in
add
mov
leave
aaa
adc
xor
aas
jnp
mov
mov
stos
mov
jb
dec
mov
sub
cmp
xor
lods
xchg
aam
or
dec
cmp
mov
icebp
lret
or
inc
cmp
push
push
icebp
lock
jmp
ss
mov
andb
xchg
push
mov
sub
mov
rcll
stos
mov
mov
dec
cmp
iret
and
lds
push
cli
ds
popa
pop
les
mov
mov
mov
push
sbb
loop
in
pop
or
aam
outsl
jne
pop
fsubl
sahf
fsubrl
scas
movsl
nop
jb
repnz
add
pusha
inc
push
inc
mov
cs
call
pop
cs
sbb
mov
in
add
jg
popa
mov
mov
nop
dec
cli
fndisi(8087
cmp
in
mov
adc
push
call
mov
pop
out
inc
lret
cli
out
in
sbb
shl
lahf
add
in
lret
jnp
sbb
cmp
inc
pushl
int
adcb
mov
mov
or
or
cmc
ret
fstl
ficomps
sub
int
mov
pushf
jb
test
push
das
lods
pop
and
xchg
and
sahf
lock
fistpl
push
call
xchg
imul
mov
repnz
rorl
mov
mov
inc
or
out
add
pop
insb
stos
shl
jecxz
test
mov
and
add
inc
add
add
add
add
add
inc
or
sbb
add
add
xchg
add
inc
add
add
add
add
pop
inc
subl
sub
add
sbb
add
addl
aas
xor
add
add
jno
add
add
jo
add
adc
xchg
add
mov
add
add
add
dec
add
push
add
pop
adc
imul
xor
add
add
pop
add
sbb
add
add
add
adc
jo
add
sub
add
add
add
jg
inc
add
add
add
add
add
add
pop
add
add
inc
inc
add
add
xor
push
add
pop
add
xchg
das
test
pop
add
add
add
add
add
add
dec
add
push
add
add
cmp
sub
add
add
add
add
add
add
sbb
add
add
cmp
adc
add
add
add
add
js
add
adc
sbb
add
add
add
add
inc
and
add
sbb
jbe
add
dec
add
or
punpcklwd
add
add
add
and
and
pop
sub
add
or
adc
add
push
add
add
add
dec
add
or
imul
dec
add
insb
add
add
add
push
add
push
add
add
add
arpl
dec
add
inc
add
add
je
jo
adc
aaa
add
inc
add
js
outsb
add
je
dec
add
aaa
add
inc
add
add
add
adc
xor
jae
push
jae
xor
add
pop
add
add
push
add
add
outsl
add
or
add
add
add
push
add
pop
add
cmp
inc
add
push
or
add
add
dec
add
dec
add
js
dec
add
inc
add
add
dec
add
or
xor
insl
add
outsl
add
js
jno
jno
add
dec
add
add
add
jne
push
add
add
add
add
add
imul
insb
add
add
jne
add
xor
outsl
add
add
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
js
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
push
add
jp
cmp
push
add
add
cmp
jp
pop
add
add
cmp
cmp
jbe
inc
add
dec
add
add
pop
add
add
push
add
inc
add
add
je
je
aaa
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
insb
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jns
xor
dec
add
xor
dec
add
add
add
add
push
add
jno
dec
add
add
cmp
dec
add
xor
jbe
inc
add
jbe
add
js
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
cmp
imul
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
and
add
pop
and
add
sub
add
.byte
.byte
