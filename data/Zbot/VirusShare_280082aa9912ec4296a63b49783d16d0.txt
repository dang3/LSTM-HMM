ljmp
mov
leave
hlt
cs
mov
mov
pusha
call
add
mov
push
in
stc
mov
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
in
sarl
adc
and
push
out
adc
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
out
xchg
pop
push
ljmp
mov
lea
and
repnz
cld
pop
cmc
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
jmp
adc
scas
and
mov
mov
arpl
rcrl
inc
mov
cmpsl
sti
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
popa
out
mov
rclb
adc
xchg
jo
dec
lock
and
xchg
pop
and
sub
mov
push
dec
xchg
jno
ret
mov
in
push
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
sub
push
pop
xor
cmp
je
sub
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
cmp
mov
repnz
pop
gs
push
pop
lods
xchg
jbe
mov
mov
jp
cmp
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
mov
cmp
loop
bound
and
mov
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
ds
ljmp
int
cli
adc
mov
and
jo
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
mov
xchg
add
mov
xchg
mov
push
cwtl
js
lcall
mov
sahf
and
and
add
idivl
sti
push
mov
sbb
jns
add
cli
jno
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
.byte
.byte
jbe
add
enter
stos
and
add
add
and
add
mov
add
aam
add
fisubs
add
cmp
add
lock
add
add
cmpsb
and
add
and
add
add
dec
and
add
add
shlb
add
sub
add
mov
add
add
add
push
and
add
add
test
add
repnz
add
add
add
add
xor
add
sbb
add
insb
and
add
and
add
add
push
and
add
add
add
add
fisubl
add
enter
lcall
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
add
enter
stos
and
add
add
and
add
mov
add
aam
add
fisubs
add
cmp
add
lock
add
add
cmpsb
and
add
and
add
add
dec
and
add
add
shlb
add
sub
add
mov
add
add
add
push
and
add
add
test
add
repnz
add
add
add
add
xor
add
sbb
add
insb
and
add
and
add
add
push
and
add
add
add
add
fisubl
add
enter
lcall
add
add
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
popa
jo
imul
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
insb
jae
jb
jo
inc
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
imul
jbe
jae
add
add
fs
imul
add
sbb
gs
outsl
outsb
jae
insb
gs
add
gs
roll
inc
gs
gs
inc
je
insl
add
icebp
add
imul
jb
je
arpl
add
aad
inc
gs
jb
jbe
push
jns
gs
add
add
fs
je
insl
inc
add
dec
add
insb
outsb
push
add
rolb
dec
gs
jo
gs
jb
jns
sbb
gs
outsl
outsb
jae
insb
gs
add
imul
insl
gs
insb
outsl
jae
add
inc
outsl
jo
inc
imul
gs
imul
bound
gs
add
fwait
add
je
jbe
outsb
je
add
add
gs
outsl
outsb
jae
insb
gs
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
outsb
fs
push
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jnp
jl
lods
lods
lods
add
cmpsb
test
mov
mov
mov
les
int3
int
rcl
in
rcl
shl
rcl
shl
int
int
enter
enter
mov
in
mov
mov
lods
lods
lods
lea
cltd
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
fcom
xlat
std
xlat
xlat
fdivr
xlat
fcomp
aad
dec
iret
sar
int3
int3
into
aam
rcl
sar
ret
ret
ret
std
mov
mov
scas
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
dec
lret
rcl
iret
aad
xlat
xlat
xlat
call
xlat
call
aam
dec
int3
int3
dec
into
into
call
aad
into
int3
into
mov
mov
mov
std
cmpsb
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
int
rcl
sar
fcom
xlat
fcom
call
aam
dec
int
dec
lret
int
into
inc
mov
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
aas
inc
sbb
sbb
sub
aaa
ss
cmp
and
adc
pop
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
inc
mov
call
aad
call
aad
dec
iret
iret
inc
leave
inc
mov
mov
mov
scas
lods
scas
jmp
pushf
cwtl
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jge
jge
jg
jno
jno
bound
mov
cmp
cmp
mov
outsl
outsb
outsl
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsl
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
leave
dec
leave
lret
enter
ret
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
cltd
cltd
cltd
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
jo
pop
pop
pop
or
jnp
fcoms
test
jl
jnp
jl
jnp
outsb
jo
out
addr16
push
ret
jle
jp
jns
arpl
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
sahf
mov
ficomps
jle
js
pop
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
xchg
jle
jno
jno
je
jae
jg
jge
addb
addr16
cmp
ss
and
jle
jge
fwait
lcall
test
lods
stos
sti
lods
stos
stos
lods
stos
lods
test
stos
std
movsb
mov
cltd
xchg
xchg
xchg
decl
jg
js
jns
jp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
lea
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
push
push
or
inc
inc
dec
insb
imul
xchg
leave
fwait
cltd
cltd
fistps
cltd
fwait
stc
nop
nop
xchg
std
mov
xchg
mov
mov
mov
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
cmpsl
lods
add
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
sahf
pushf
pushf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
xchg
in
test
push
jne
push
cmovp
or
inc
sub
daa
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
cmpsb
cmpsb
ljmp
test
pushl
sahf
scas
mov
mov
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
pushf
decl
mov
decl
xchg
xchg
xchg
xchg
popf
popf
sahf
movsl
movsb
mov
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
arpl
jae
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
mov
stos
stos
lods
mov
movsl
add
mov
add
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
cwtl
lcall
sahf
sahf
mov
std
mov
lcall
xchg
xchg
les
cltd
in
xchg
cwtl
out
lea
stc
xchg
xchg
std
xchg
jae
lcall
jmp
inc
jnp
mov
jp
mov
jb
mov
outsb
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
movsb
movsl
movsl
and
add
shll
xchg
xchg
jge
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
lcall
sahf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
cltd
sahf
stc
lahf
xchg
sahf
cld
popf
xchg
xchg
imul
cwtl
dec
jns
fwait
cmp
insb
popf
and
mov
adc
ljmp
adc
lods
adc
lods
adc
lods
adc
mov
imul
mov
imul
ds
lcall
scas
lods
lods
scas
movsb
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
mov
jmp
mov
decl
mov
decl
ja
cltd
jno
cltd
fs
xchg
push
jns
xchg
cmp
decl
push
pusha
call
or
pop
call
pop
jmp
adc
lods
sbb
pushl
pop
jo
mov
jo
mov
and
mov
and
sarl
inc
xchg
lods
mov
scas
lods
mov
sahf
sahf
mov
add
pop
pop
adc
scas
mov
shlb
lcall
mov
jmp
test
jmp
pushf
popf
call
pop
ja
mov
decl
sub
mov
incl
or
incl
push
decl
add
nop
add
xchg
add
fwait
add
sahf
add
cmpsb
or
mov
outsl
pushl
sub
mov
sub
inc
sub
jge
cs
movl
inc
mov
mov
movsb
mov
mov
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
addl
addl
incl
push
decl
add
nop
add
xchg
add
cltd
add
lahf
add
mov
adc
mov
ss
enter
lret
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
test
mov
mov
sahf
lcall
lods
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
call
add
popf
add
mov
add
lods
add
mov
jo
ret
dec
inc
mov
int3
inc
mov
rolb
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fimull
fmull
ficoml
call
test
std
mov
mov
mov
lahf
mov
add
dec
dec
adc
jl
sahf
mov
jmp
test
pushl
mov
pushl
mov
mov
mov
jmp
outsl
decl
call
adc
decl
or
add
xchg
add
xchg
add
sahf
add
mov
add
test
pop
fs
mov
inc
mov
aad
xchg
fcoms
fsts
fistl
fists
jmp
push
pushf
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsb
cmpsl
jne
sahf
lahf
or
xchg
xchg
cwtl
add
inc
adc
js
lahf
cltd
lahf
jmp
lahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
push
call
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
data16
mov
xor
fbld
fisubs
in
cmpsb
jmp
cmpsb
jmp
test
push
jmp
push
scas
dec
mov
mov
mov
lahf
lahf
add
inc
inc
adc
jp
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
das
outsl
lcall
sub
xchg
pop
call
add
lcall
jmp
add
mov
pushl
movq
roll
jmp
jo
jmp
outsl
lods
jmp
jo
call
je
jmp
scas
out
jbe
out
je
out
je
jmp
mov
mov
cmpsl
cmpsl
lcall
sahf
add
add
imul
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
cmp
mov
xor
cltd
sbb
call
add
lahf
add
movsb
add
test
add
mov
gs
mov
sbb
fistl
jmp
jbe
jmp
jle
jmp
mov
push
cmpl
xacquire
push
cmpl
inc
mov
stos
cmpsl
sahf
popf
pushf
daa
sahf
sahf
mov
add
add
add
pusha
add
aaa
cmp
pop
pop
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
lcall
cmp
movsb
inc
jle
movsl
inc
jle
movsl
aaa
ja
cltd
pop
arpl
xchg
add
popf
add
mov
add
lods
add
mov
gs
mov
add
shll
cmp
movsl
jmp
mov
push
mov
push
pop
push
xchg
ret
push
xchg
nop
ret
clc
xchg
push
out
nop
mov
inc
stos
stos
mov
sahf
popf
xor
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
inc
mov
mov
jle
lcall
cmp
mov
adc
cltd
add
mov
add
stos
add
mov
arpl
mov
add
leave
push
insb
fdivs
mov
out
mov
in
xchg
push
cltd
push
fwait
push
lcall
negl
lret
popf
into
cld
sahf
int
cli
lcall
fidivrs
cli
mov
mov
lahf
sahf
mov
add
add
add
xor
outsb
push
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
inc
mov
mov
mov
ljmp
dec
xchg
movsb
sub
cltd
pop
pop
lcall
add
stos
add
mov
popa
mov
add
leave
add
or
fiadds
out
lea
push
cmpsb
int3
push
movsb
int3
stc
test
cld
test
cld
cmpsl
sar
sti
cmpsl
iret
cld
test
sar
test
push
sahf
jmp
mov
int3
std
mov
mov
sahf
mov
xchg
add
lcall
xor
xor
or
inc
bound
pop
xlat
jae
jo
mov
sarl
mov
inc
leave
inc
rol
mov
test
mov
push
mov
scas
dec
xchg
mov
add
movsb
add
lods
add
mov
mov
add
int
insl
fadds
je
loopne
jnp
out
pop
test
negb
sar
cld
mov
sti
scas
aad
cld
scas
sar
std
mov
std
mov
cld
mov
cld
mov
mov
cld
mov
push
movsl
mov
call
lret
mov
mov
lahf
sahf
mov
or
add
add
xor
add
push
add
dec
dec
outsl
outsb
outsb
mov
xlat
fsubr
aad
xlat
not
rcl
std
lret
dec
lret
lret
leave
lret
leave
leave
inc
enter
lods
jmp
push
mov
lods
cmp
lcall
add
stos
add
mov
arpl
mov
add
roll
jo
add
add
ljmp
sti
lods
aad
cld
mov
fcos
cld
mov
fdivr
mov
fdivr
mov
xlat
std
mov
fcos
divl
call
lret
into
mov
mov
xchg
or
add
add
xor
add
pop
pop
pop
or
leave
movb
jecxz
out
call
test
in
leave
fsubp
fcmovu
fdiv
fdivr
xlat
std
int
sar
mov
push
test
test
add
pusha
pushl
add
ret
dec
add
add
fildl
jne
in
js
out
das
xchg
stc
mov
sti
mov
loope
inc
inc
loop
inc
fdivrp
std
loopne
std
enter
dec
fdivrp
dec
fdivrp
std
leave
loope
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
std
incl
std
add
std
incb
repz
or
in
in
pop
in
out
out
sub
out
out
dec
call
jmp
out
in
out
fucomp
ret
mov
xchg
cmpsl
cmp
mov
add
ljmp
add
mov
add
int3
add
xlat
add
fiadds
js
ljmp
cld
mov
loop
std
lret
jecxz
dec
in
std
int3
in
dec
in
dec
loop
dec
loopne
dec
in
call
in
call
in
call
in
cld
ret
fcos
in
mov
inc
out
cmpsl
cmpsl
cmpsl
mov
cwtl
cwtl
add
add
add
incl
std
std
add
div
add
hlt
icebp
add
hlt
repz
out
lock
pop
out
repnz
cmp
out
out
pop
loopne
loope
mov
xchg
sti
sahf
and
pop
jmp
add
mov
fs
add
movl
jo
flds
jbe
in
jns
in
movd
cmc
pop
test
sti
mov
cld
iret
in
std
iret
in
call
jmp
call
in
call
std
xlat
out
std
fucomi
fucomi
std
fucompp
cld
shl
push
jmp
aad
dec
leave
lret
rep
stos
test
and
xchg
cwtl
add
std
sti
add
std
stc
add
cli
stc
add
div
or
aam
xor
jae
negb
add
test
pop
ljmp
add
ret
add
leave
add
roll
jno
fldl
ja
out
js
out
sbb
cli
ret
fdivrp
cld
xlat
call
fucomi
std
fldl2t
fucomi
std
fsubr
std
fsubr
fucomi
std
fucomip
jmp
jmp
std
loopne
aam
push
ret
jmp
rcr
call
iret
iret
clc
stos
stos
lods
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
add
loopne
add
mov
cltd
repnz
and
mov
add
mov
popa
mov
add
into
add
aam
jae
fiadds
je
ljmp
cld
mov
cld
shl
fsubrp
fsubr
std
fucomi
std
fucomi
call
call
std
shl
cld
iret
loop
cli
shl
clc
into
test
aad
out
mov
jmp
rcr
fcomp
xlat
sti
mov
mov
fwait
lcall
lcall
add
xlat
add
sarb
popf
sub
sahf
add
ljmp
add
mov
add
roll
jo
xlat
add
add
call
ss
cld
xchg
cld
lret
sti
lret
cld
clc
mov
aam
repnz
iret
push
mov
int
jmp
mov
sar
ljmp
imul
cmc
fsubrp
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
ss
mov
add
mov
addr16
mov
add
int3
or
rorl
jne
fsts
js
loop
cmp
call
scas
lret
mov
out
leave
std
loope
cld
fidivs
neg
mov
leave
ljmp
iret
iret
xlat
shl
aad
out
loopne
in
in
test
in
lock
jmp
lret
lods
lods
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
mov
ret
ret
popf
stos
aam
dec
jg
sahf
sbb
cmpsb
sbb
lods
and
jns
mov
inc
xchg
ret
stc
leave
fs
mov
shll
enter
leave
lret
int3
rcl
int3
mov
iret
shll
aam
jg
fcmovu
jb
gs
in
out
jmp
xor
div
cmc
and
icebp
lock
or
mov
int3
add
add
add
mov
inc
mov
xchg
test
xchg
ljmp
mov
sarb
mov
ret
mov
cmpsl
enter
lret
mov
lret
ror
shlb
iret
rclb
rcl
dec
aam
xlat
inc
rcl
aam
fcmovnbe
daa
fcomp
fcompl
ficoms
fsubp
loope
loope
in
call
repnz
add
cld
cmc
add
std
sti
add
incb
incl
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
rcll
les
enter
int3
leave
daa
int
shlb
rcl
rcrl
rcl
rclb
rcl
rorb
rcr
push
rcr
fadds
fcmovnu
add
add
jecxz
add
in
ljmp
incb
mov
mov
add
ret
ret
or
rol
sub
mov
mov
push
rol
or
mov
add
int3
lret
add
aam
add
fcom
add
xlat
add
fcom
add
aad
add
xlat
loope
aad
add
loopne
add
add
in
add
icebp
icebp
add
std
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
mov
mov
mov
test
cmpsl
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
into
shr
rcl
aad
rcl
sar
into
ror
cli
lret
int3
lret
stc
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
iret
sar
aad
xlat
call
aad
iret
rcl
dec
int
dec
int3
lret
inc
mov
mov
lods
stos
stos
icebp
cwtl
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
jne
fs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
aam
lret
inc
mov
rol
pushl
stos
stos
lahf
sahf
sahf
xchg
xchg
cwtl
jmp
jo
xchg
pop
push
adc
xor
add
add
add
add
cmpl
addl
aam
push
mov
push
push
push
stos
push
imul
cmp
aaa
pop
jo
jno
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
fwait
add
popf
xchg
lcall
addb
jge
jl
jns
jns
jp
jp
jns
jp
jae
jae
push
push
push
cmp
aaa
pushf
pushf
pushf
mov
scas
scas
rep
lods
scas
sti
lods
lods
scas
std
test
sahf
sahf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsb
movsl
cltd
jb
jb
adc
adc
add
add
add
add
insl
outsl
outsb
pop
xchg
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsl
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
scas
std
mov
scas
mov
xlat
cmpsl
mov
jg
popa
popa
popa
or
scas
mov
cmpsb
lahf
mov
decl
nop
call
popf
sahf
sti
mov
cltd
lcall
push
push
jo
pop
pop
outsl
insb
insl
outsl
xchg
subb
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
pusha
or
mov
in
mov
nop
call
xchg
lcall
cwtl
lcall
sahf
popf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
sahf
dec
jl
movsl
inc
js
scas
xor
jb
scas
sbb
push
mov
imul
pop
mov
mov
scas
scas
jle
mov
add
add
add
pusha
pusha
pop
or
mov
call
lahf
popf
jmp
mov
cwtl
decl
addb
xchg
jae
cld
xchg
pop
test
xchg
dec
jp
cmp
xchg
sub
xchg
sbb
xchg
adc
lahf
punpcklbw
test
push
pushl
sbb
mov
and
rcrb
mov
lods
scas
xchg
popf
lahf
popf
adc
add
add
popa
pop
pusha
or
mov
stos
mov
mov
ljmp
test
cwtl
decl
push
mov
decl
adc
or
mov
call
add
cmpsl
or
mov
jb
mov
sub
jge
enter
lret
dec
pop
xchg
inc
test
imull
cmpsl
cmpsl
sbb
add
add
pusha
pop
popa
or
movsb
stos
in
mov
test
mov
mov
mov
mov
mov
mov
cmpsb
cwtl
mov
decl
orps
xchg
push
incl
add
add
xchg
add
sahf
add
movsl
add
mov
insb
inc
aaa
test
lret
inc
mov
iret
inc
mov
rolb
call
inc
nop
call
arpl
stc
mov
mov
movsb
mov
incl
add
add
pop
pop
pusha
or
lahf
mov
ljmp
mov
pushl
mov
stos
lcall
push
popa
call
pop
pop
decl
add
xchg
add
lahf
add
add
scas
add
mov
dec
nop
fsts
fcompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jge
jl
pushf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
sub
imul
and
xchg
adc
xchg
add
sahf
add
test
pusha
pushl
push
push
jmp
insb
stos
jmp
jo
jmp
jno
in
jb
call
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsl
insl
push
mov
xchg
pushl
mov
mov
mov
jne
lcall
cmp
pushf
sub
call
add
mov
add
mov
fs
or
xlat
dec
xchg
jmp
jns
jmp
mov
out
test
push
xchg
out
mov
mov
test
push
lcall
add
sub
push
push
dec
pop
addr16
loopne
mov
mov
sarb
mov
xchg
ljmp
sub
cltd
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
xchg
cwtl
enter
leave
sti
lcall
jecxz
vcmpss
popa
lahf
lahf
mov
add
xor
pop
pop
pop
push
fisttpl
mov
mov
ret
inc
ret
mov
test
ljmp
and
add
cmpsl
add
mov
arpl
mov
add
fsubs
cmp
mulb
clc
test
sar
sti
stos
sar
cld
lods
sar
stc
cmpsb
int3
jmp
mov
inc
rol
stos
test
popf
or
add
add
dec
dec
dec
aaa
je
jb
stos
test
int3
out
iret
int
lret
sti
lret
std
mov
mov
stos
bound
mov
add
mov
fs
add
into
add
fiaddl
xchg
push
xchg
mov
mov
mov
cld
mov
fdivr
sti
mov
ljmp
repz
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loope
loope
fistps
fcmovnu
xlat
xlat
out
shlb
cmpsl
jb,pn
cmpsb
or
scas
add
mov
add
aad
jb
in
jp
icebp
dec
mov
std
inc
loope
std
enter
enter
enter
lret
loopne
std
lock
lret
divb
pushf
popf
sbb
add
add
std
std
add
std
std
add
jmp
or
in
in
sbb
in
in
xor
loopne
jecxz
les
mov
mov
add
pushl
push
fldl
je
call
insl
mov
cld
ret
std
shl
call
in
call
out
shl
out
std
xlat
out
shl
push
fcos
fmul
sar
mov
mov
add
incl
std
std
add
cld
incb
aad
push
mov
pop
xchg
lahf
or
ljmp
add
ret
add
roll
outsl
fiadds
jne
in
and
cld
shl
std
fucompp
fsubr
fsubr
cld
xlat
jmp
cld
fsubr
std
aam
push
enter
iret
aad
mov
lahf
popf
das
add
add
into
int
or
arpl
ljmp
add
enter
aad
jb
loope
jns
in
das
xchg
stc
fwait
leave
sti
lret
loop
cli
lret
test
repz
xlat
icebp
ret
out
ret
sar
in
aad
in
ljmp
ljmp
stos
das
std
std
add
add
add
aad
mov
jb
push
data16
mov
insb
inc
pop
jb
int3
and
sub
fwait
clc
in
mov
out
jecxz
lret
mov
lret
ror
ffreep
sarl
in
ficompl
in
call
rorl
mov
add
stos
lods
stos
add
xchg
movsl
les
pop
mov
mov
nop
fidivrl
jle
rol
stos
mov
mov
les
aam
int
aad
int
ror
rorl
xlat
xlat
cmp
loopne
das
jecxz
fsubl
in
repnz
in
in
or
std
std
add
add
add
std
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
enter
aam
pop
rol
adc
rcl
or
loope
or
int3
int3
add
incb
std
std
add
add
add
into
int3
shufps
or
int
int
stos
stos
lods
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
cltd
add
ret
mov
xchg
enter
mov
sarl
scas
scas
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
aad
rcl
sar
iret
int
std
mov
stc
mov
cmpsl
test
gs
sbb
add
add
add
add
add
add
add
add
jae
jb
addr16
inc
inc
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int3
call
aam
dec
into
iret
inc
mov
ljmp
lahf
lahf
sti
mov
xor
add
xor
add
sbb
jae
jne
xchg
aad
jo
ret
popa
mov
data16
outsb
outsl
outsl
jb
pusha
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
cltd
lds
jno
es
and
pop
add
add
jb
je
popf
xchg
lcall
xchg
clc
xchg
or
addl
push
push
push
inc
mov
pushf
into
movsb
movsb
movsb
in
lahf
mov
xchg
decb
lcall
cmpsl
stos
cld
mov
mov
ret
xchg
aas
sub
sub
add
add
jg
adcb
movsl
cmpsl
cmpsl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
cwtl
cwtl
lcall
push
push
imul
jge
lea
xchg
notl
mov
pushl
push
mov
test
call
stos
stos
stos
add
add
add
mov
scas
test
cld
xchg
xchg
xchg
lcall
fwait
cltd
lcall
cltd
lcall
mov
loope
je
out
xchg
bound
std
pushf
inc
jbe
cmpsl
ss
lods
sub
jno
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
test
pop
scas
movsb
stos
test
sahf
sahf
lahf
jmp
movsb
movsb
call
push
js
nop
inc
je
mov
imul
sbb
call
or
mov
push
outsl
mov
and
inc
sub
les
test
rcrl
subl
je
push
movsb
fwait
lahf
test
test
cmpsb
ljmp
scas
mov
lahf
xchg
decl
or
mov
push
decl
add
mov
adc
shll
lret
call
inc
mov
aam
call
dec
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
cwtl
xchg
xchg
test
mov
lods
pushl
mov
ljmp
cmp
xchg
pop
decl
or
xchg
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
lcall
cmpsb
cmpsl
test
add
add
popa
popa
arpl
popf
lcall
mov
mov
mov
pushf
dec
jge
pushf
xor
cltd
and
xchg
or
lahf
add
lods
add
mov
dec
xor
jmp
outsb
lods
call
jnp
out
jge
push
jle
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
bound
jmp
add
pusha
pushl
pop
outsb
fisttpl
out
mov
push
xchg
xchg
enter
jmp
movsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
pop
jmp
pushl
add
aam
ja
in
outsb
lods
push
cmpsl
iret
clc
lods
iret
cli
lods
sar
sti
scas
sar
std
lods
sar
ljmp
fldenv
incb
xor
xor
scas
mov
mov
mov
aam
rcl
shr
lret
cli
mov
mov
jmp
add
add
aad
jno
out
xchg
stc
mov
mov
std
rcr
cld
ret
cld
ret
fcos
icebp
mov
ret
test
dec
addb
add
in
jmp
out
call
inc
loope
jecxz
fisubl
movsl
es
ljmp
add
lret
fldl
out
cmp
std
iret
in
shl
call
out
std
aad
call
in
hlt
fcos
aam
int
scas
scas
lods
popa
cmpb
std
std
incb
std
incl
int
shrl
lahf
sbb
lods
add
mov
add
loop
jp
repz
cmpsb
dec
loop
aad
cld
in
std
shl
sti
shl
cli
shl
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
push
rorb
cmp
lock
aam
call
ror
call
leave
rcl
jmp
fcmovnu
scas
push
fwait
cltd
lcall
add
add
pushf
lods
xchg
and
push
mov
ret
int3
lret
mov
fdivrs
adc
int3
outsl
fxch
rcrb
rcl
dec
in
fistpll
call
out
out
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
cs
mov
int3
sbb
bswap
int3
into
or
aad
push
std
incb
addb
add
add
add
roll
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
xor
mov
lods
addr16
xchg
stc
jg
lods
das
aaa
imul
push
push
stc
inc
pop
mov
push
adc
or
bound
out
pop
loop
out
jne
test
rcll
jbe
push
les
pop
pop
adc
dec
add
add
ds
jmp
adc
frstor
iret
xor
jge
outsb
mov
jecxz
mov
mov
mov
mov
pop
loop
jmp
mov
cmp
xor
fs
inc
das
scas
je
nop
aas
cmp
test
and
add
dec
or
and
movsl
mov
loope
faddl
adc
movsb
lods
and
imul
dec
or
and
pusha
xor
lret
xlat
cmc
sar
jo
out
ljmp
mov
mov
sbb
fdivp
fs
enter
xchg
test
in
add
std
dec
adc
aad
test
xor
cmpsb
mov
inc
scas
icebp
popa
aam
mov
adc
pop
outsb
je
popa
jp
lock
ljmp
loopne
imul
xor
push
shlw
outsl
jmp
xor
xchg
mov
fdivrs
lods
out
cltd
icebp
add
add
adc
popa
xchg
mov
and
jbe
fiaddl
in
push
mov
movsb
repnz
nop
mov
aas
imul
jle
jg
cs
or
cld
pop
dec
sub
xchg
cwtl
xchg
mov
or
jecxz
inc
mov
jne
xorb
in
push
xchg
popa
lcall
xchg
sub
xor
jo
rcl
addb
jmp
adc
add
dec
or
adc
clc
pop
imul
jge
jbe
add
mov
mov
shll
mov
out
pop
pushf
cmp
rol
mov
pop
movsl
in
mov
cld
push
xor
adc
movsb
arpl
into
and
sub
cmp
or
push
adc
mov
mov
jp
icebp
repnz
cmp
jecxz
inc
xor
scas
hlt
push
clc
daa
in
stc
cmp
mov
outsl
lds
ljmp
outsl
negb
lea
jmp
fimuls
inc
dec
adc
push
mov
push
fdivr
jb
into
mov
dec
in
in
jg
xchg
push
sub
push
sbb
dec
stc
mov
fs
add
outsb
enter
bound
xchg
test
jl
repz
les
mov
or
stos
fwait
add
in
xchg
ss
push
andb
addr16
dec
mov
out
adc
push
cld
das
cs
adc
mov
mov
dec
jbe
push
scas
in
dec
les
mulb
mov
jbe
or
fs
pop
inc
pop
push
and
or
dec
or
test
sahf
clc
arpl
and
subl
loope
fcmovnu
jg
and
inc
pop
lea
into
ret
test
sbb
push
cld
cmp
or
and
ret
rcrb
daa
pop
push
repz
push
mov
ds
push
lahf
push
xchg
dec
aad
pop
push
inc
pop
insb
loopne
aaa
xor
icebp
outsl
xchg
cmp
push
lock
jnp
test
xchg
out
sub
and
mov
and
inc
scas
push
sti
push
scas
cltd
jmp
jp
lcall
mov
push
xchg
add
jo
pop
in
xchg
mov
mov
mov
iret
push
cli
shl
pop
push
sti
inc
scas
fnstcw
xor
and
sub
repz
xchg
xor
rolb
call
inc
xor
mov
jno
push
xchg
xchg
adc
loopne
adc
pop
inc
notl
test
mov
mov
int3
es
in
sbbl
ret
cmp
iret
pusha
and
sub
sbb
mov
xor
sbb
nop
mov
sahf
cwtl
xchg
sub
mov
test
outsl
outsb
js
dec
cmp
jb
roll
adc
fs
cmp
push
and
xor
fs
sub
push
jb
in
subb
shll
sbb
shlb
push
das
jge
popa
and
aad
xchg
fs
or
xchg
leave
incl
hlt
testb
xlat
shl
jmp
add
mulb
test
out
mov
ja
test
cmp
push
pop
ja
pop
adc
out
iret
cmc
mov
sub
stos
pop
sub
mov
sbb
sbb
cmp
notb
fs
mov
push
aam
mov
push
add
mov
loop
or
push
hlt
out
sbb
push
out
mov
pop
jge
cwtl
pop
cmp
aad
cbtw
scas
rorl
in
out
scas
mov
in
data16
xchg
cmp
lahf
mov
sbb
int
pop
in
sbb
fsubs
xchg
lods
push
xchg
sub
std
sbb
sbb
xlat
jo
or
inc
inc
sbb
push
jbe
clc
adc
out
imul
or
adc
aas
push
ficomps
inc
sahf
enter
dec
jl
sub
pop
dec
mov
inc
cmpsb
daa
push
push
cmp
sbb
xlat
ss
inc
cmp
rorl
sub
incb
imulb
or
sbb
xor
sti
xchg
aas
in
enter
repnz
ss
addr16
jae
and
xchg
sub
dec
loop
cwtl
scas
inc
lret
add
int
inc
addb
cltd
shl
jle
mov
add
jbe
js
mov
ror
inc
fdivr
icebp
sbb
and
cmp
je
jle
mov
ret
hlt
out
or
sbb
jnp
cmp
jno
pop
cltd
xor
scas
mov
loopne
push
lods
adc
insl
xor
xor
gs
hlt
mov
mov
adc
inc
dec
das
movb
dec
in
mov
daa
jl
mov
not
rol
repz
sub
pushf
xor
add
mov
ficoml
inc
sub
dec
lret
bound
mov
outsl
daa
jl
fnstcw
aad
les
idivb
sub
jp
dec
fwait
xor
add
mov
lret
or
call
cmp
mov
mov
loopne
adcl
ss
xor
mov
mov
jb
fst
pop
or
nop
daa
xor
in
pop
push
lods
inc
test
cltd
scas
movsl
lret
xlat
iret
and
sub
cmp
sahf
std
hlt
push
shll
fcomi
cmp
push
jmp
push
and
cmp
ret
adc
push
cmp
mov
mov
push
mov
ficompl
mov
sbb
jmp
and
jle
xchg
subb
xchg
repz
or
icebp
or
cmp
xsha256
cmpsb
push
nop
sbb
cmpsb
loop
iret
adc
dec
loop
xor
in
sbb
dec
xchg
insl
mov
lahf
fsts
cmp
pop
adc
pop
inc
jg
gs
jecxz
cltd
shr
addl
cwtl
in
and
and
test
ds
leave
inc
mov
repz
gs
dec
add
xor
push
cltd
xor
test
rclb
aad
fidivs
dec
repz
mov
push
mov
mov
jg
xchg
adc
leave
inc
mov
cs
adcb
add
scas
inc
inc
push
shrb
lretw
popa
cltd
stos
repnz
mov
adc
cmp
pusha
and
mov
fs
and
dec
xchg
jl
jp
xchg
lahf
cmpsb
cmp
mov
sub
pop
or
pop
push
pop
iret
pusha
mov
test
lret
sti
xchg
cli
std
or
dec
dec
sub
jnp
cmp
cltd
cltd
dec
loopne
mov
push
or
push
decb
dec
mov
inc
fistpl
xor
sub
pop
lock
test
mov
fidivrl
es
sub
cltd
jmp
fcomp
mov
int3
arpl
mov
inc
xchg
sbbl
add
inc
xlat
cltd
dec
pop
hlt
cmp
popa
clc
cmpsb
sub
mov
adc
inc
adc
lea
or
shld
xor
mov
pop
adc
add
dec
loopne
and
arpl
dec
ljmp
cmp
xchg
mov
sub
sbb
aas
fwait
xchg
xor
push
shrl
inc
mov
push
insb
data16
arpl
pop
push
pop
push
cmpsl
xor
mov
jns
xlat
cld
push
aam
aad
or
stc
inc
enter
push
faddl
adc
xor
push
jmp
or
arpl
xchg
fucomi
orb
lea
dec
xchg
insl
cmp
jp
pop
cld
inc
dec
push
subl
pop
shlb
mov
sti
imul
fdivp
adc
add
lods
mov
sub
mov
dec
popf
push
mov
inc
mov
lcall
in
pop
or
fidivl
push
outsb
movsl
jns
aaa
sti
inc
scas
xor
mov
enterw
inc
add
inc
call
fidivl
cltd
xchg
xchg
aas
in
nop
add
lahf
sbb
adc
inc
mov
sbbl
inc
mov
sub
gs
xchg
or
pop
cmp
out
mov
add
pop
aas
fidivl
mov
popf
xor
xor
outsl
movsb
fs
clc
negl
jnp
sahf
mov
mov
xchg
xchg
mov
lar
sbb
inc
fstl
mov
jp
js
mov
popa
cltd
cwtl
das
or
lock
mov
stos
inc
rolb
mov
into
jl
jmp
ljmp
pop
xchg
xchg
aad
mov
jl
inc
dec
movsl
cmp
xlat
outsb
inc
aad
adc
sub
lahf
ss
shrl
lcall
push
inc
pop
pop
jb
outsl
dec
jnp
pop
push
outsb
mov
cmp
xor
pop
fnstenv
pop
testb
stos
fs
repz
rcrl
sbb
lds
pop
mov
fidivl
loopne
lcall
fstpt
cmp
xor
and
or
test
or
mov
jne
push
lods
into
xchg
rcrl
xor
filds
insl
cmp
pop
hlt
sbb
and
push
in
int
pushf
xor
pop
sahf
mov
add
mov
fldpi
sbb
adc
push
gs
insl
out
sbbl
cmp
das
cmc
mov
sbb
sub
pusha
imull
lret
and
jg
sbb
ret
mov
jecxz
jg
in
jbe
pop
sbb
xchg
xchg
fbstp
mov
imul
jecxz
ss
sbb
jno
sbb
push
scas
pusha
mov
loope
push
mov
out
cltd
mov
pop
test
pop
aad
test
push
mov
jo
arpl
cmc
cmp
jle
mov
xchg
stc
sete
mov
jl
sbb
xor
adc
dec
outsb
xchg
dec
xor
sbb
imul
lea
xchg
dec
pop
orb
push
cmc
xor
in
orl
cwtl
das
push
mov
insb
mov
pushl
cli
cmp
xchg
mov
adc
test
stos
pop
mov
ja
mov
lret
leave
sbb
sarb
mov
push
push
repnz
das
add
push
frstor
jbe
or
repz
cwtl
das
or
loopne
test
cmp
mov
sub
xchg
mov
aam
aam
push
sub
lcall
mov
sahf
xor
jp
xor
repz
mov
cs
push
out
adc
stc
insl
xor
test
sbb
imul
adc
sub
sub
sti
sub
icebp
pop
mov
cltd
out
dec
loopne
adc
jbe
mov
shll
cs
inc
sahf
push
shlb
stos
pop
negb
jbe
cltd
xor
mov
les
mov
loopne
popa
rorl
shrb
hlt
mov
pop
mov
mov
xchg
or
push
ffreep
jnp
loop
into
cmp
adc
adc
enter
or
inc
rorl
mov
loop
sbb
jge
lds
clc
and
push
xor
push
inc
into
pop
and
arpl
nop
daa
add
inc
fstps
mov
dec
pop
cld
push
push
cmpsl
pop
test
lret
jmp
adcb
in
xchg
sub
mov
std
or
xchg
mov
icebp
adc
push
cwtl
xor
out
mov
adc
stos
cs
jecxz
int3
lea
pusha
sub
push
push
xor
push
mov
and
out
mov
fstpl
add
bswap
pop
sahf
jb
mov
popf
add
pop
push
and
jns
cli
xchg
test
outsb
add
cs
in
test
nop
daa
div
pop
cmc
out
pop
xchg
cs
adc
jg
xor
adc
lock
ja
popf
adc
ja
leave
pusha
lock
js
or
pop
cmp
mov
cltd
cmp
add
loope
scas
adc
fidivs
dec
in
and
enter
scas
mov
xor
mov
rorb
adc
cmp
mov
xor
adc
nop
inc
ffree
dec
jmp
imul
shl
mov
add
jne
js
sub
mov
jns
scas
insb
mov
lea
outsb
inc
fistpl
push
mov
pop
fs
dec
pop
xchg
sub
add
mov
hlt
sbb
lods
or
xchg
and
lods
inc
jne
pop
mov
inc
xchg
sub
rcrl
mov
pop
fnstenv
sahf
clc
sarb
gs
popa
dec
mov
stc
loop
rcl
lcall
bound
lcall
inc
fnsave
mov
leave
and
ret
dec
mov
jg
imul
cmp
popf
xor
pop
sub
inc
scas
testl
dec
cld
jmp
lock
dec
rcrl
jns
dec
add
jp
loop
cmc
rcrl
sti
xchg
jns
cmpsb
insb
stos
xchg
sub
mov
pop
sti
aas
aaa
into
scas
xchg
add
xor
loopne
push
aam
js
orb
fstpt
lret
cltd
ret
pop
cs
out
mov
mov
cmp
nop
stos
inc
adc
ss
pusha
mov
daa
outsb
stos
xchg
sub
shrb
pop
lret
cmp
mov
add
addr16
and
xchg
push
insl
out
test
je
sbb
push
insl
add
pop
testb
adcb
fildll
out
dec
jecxz
pop
testl
pusha
sbb
mov
shrl
sarl
rolb
mov
lret
adc
pop
cld
push
jmp
and
adc
jae
xor
mov
mov
das
aad
fndisi(8087
push
rclb
cmp
inc
sub
rcll
mov
pop
jb
rorb
stos
insl
xor
inc
aam
inc
xlat
addr16
test
mov
lds
loop
mov
loopne
xor
fcom
imul
sub
push
fwait
into
pusha
inc
cld
shrb
arpl
xchg
mov
pop
add
jo
mov
faddl
popf
or
das
je
jne
dec
loopne
xchg
jmp
and
inc
xor
push
es
jmp
dec
js
mov
dec
pusha
fs
xor
in
cmp
scas
test
jno
gs
add
push
lods
lea
jp
inc
scas
dec
out
out
test
in
gs
cvtps2pd
fwait
xor
xor
add
mov
ret
loope
push
data16
cwtl
xchg
xchg
mov
fidivrl
loopne
inc
fdivs
repz
xchg
inc
fxch
xor
pop
sbb
xchg
sub
pop
or
mov
je
jg
loop
xor
add
xlat
jmp
in
cmpl
mov
ret
lret
sarl
adc
movb
sbbb
fbstp
mov
jg
lds
fwait
sti
adc
push
push
jmp
mov
and
out
ljmp
out
sub
sbb
inc
mov
out
cmp
pushf
data16
repz
les
popa
call
push
xchg
cltd
jne
call
shrl
daa
or
inc
in
stc
imul
das
popf
out
dec
sahf
xchg
shrb
les
rolb
pop
enter
push
inc
mov
mov
dec
enter
add
jl
adc
jmp
mov
sbb
mov
clc
dec
mov
or
subb
mov
leave
xchg
cwtl
movsb
xor
out
test
push
scas
outsl
push
jae
in
inc
nop
daa
jne
jno
push
fbld
mov
lea
sub
orb
mov
push
dec
loop
push
arpl
les
or
shlb
notb
in
push
fnstenv
xchg
inc
movsb
cmp
stc
fisubrl
xor
add
loope
addr16
adc
adc
adc
xchg
arpl
pop
out
popf
mov
mov
lds
adc
and
lods
push
push
jl
subl
aaa
ds
es
xor
inc
rcrb
jae
sub
adc
sub
cltd
pop
int
sub
jns
cwtl
in
push
dec
mov
subb
cld
scas
rorb
jg
dec
in
jl
push
ja
pop
sub
and
idivl
fidivl
xchg
movsb
cmc
loop
jo
mov
mov
xor
js
lret
sti
js
push
out
adc
stc
jge
sub
sbb
in
jl
dec
push
test
sub
and
add
sbb
sub
or
adc
pop
cli
and
hlt
mov
ret
jnp
or
scas
inc
jge
loope
std
insl
sti
xchg
xchg
pop
divb
jno
not
adc
fdivrl
xor
jge
sbb
fimull
fistl
sub
mov
cmp
mov
xlat
cmc
mov
adc
sbb
fmul
add
xchg
pop
and
mov
jg
push
mov
fisttpll
lret
pop
sub
pop
mov
pop
pusha
test
daa
push
cltd
xor
aas
push
cmpsl
daa
shrb
jne
mov
repz
mov
dec
push
popf
jle
push
cwtl
in
jns
je
and
jmp
push
mov
jno
pop
or
and
dec
stc
pop
or
sub
in
jnp
inc
mov
fwait
pushf
mov
dec
bound
push
das
ljmp
ret
ret
jmp
loop
jmp
mov
sbb
mov
imul
or
icebp
ljmp
push
dec
mov
sub
js
push
mov
test
push
idiv
movsl
add
pop
xor
jl
dec
mov
mov
ja
add
jecxz
inc
pop
mov
ficompl
test
dec
mov
pop
mov
mov
xor
jge
addr16
popa
mov
dec
loope
push
pop
dec
fists
ljmp
pushf
inc
fcmovne
rorl
push
xchg
inc
out
fnstcw
or
lret
add
roll
add
inc
sbb
outsl
pop
lret
mov
lods
and
jbe
or
int
adc
cs
cmp
addr16
fs
notl
mov
les
mov
dec
push
std
call
mov
xor
or
push
shlb
lods
or
sbb
cld
xor
mov
je
mov
out
js
lret
outsb
xchg
fbstp
insl
out
shl
jg
outsb
and
repnz
xor
and
xor
push
ds
in
je
cmp
jbe
cmpsb
fdivrl
cltd
loopne
lret
in
lret
pusha
inc
sub
insl
dec
aaa
fdivrl
dec
in
ficoml
lahf
add
jecxz
pop
jne
sub
sar
mov
es
test
mov
loopne
cmp
fcmovbe
xor
mov
mov
scas
pandn
lcall
subl
pop
sub
push
mov
sbb
daa
sbb
push
repnz
fistpl
pop
out
jbe
hlt
cmpsl
jp
mov
std
mov
orb
pop
js
icebp
xlat
popf
pusha
pop
jg
pop
add
gs
mov
rorb
inc
cltd
fidivl
push
mov
push
push
clc
add
outsl
dec
cmp
jp
jnp
add
inc
fldenv
pop
ja
out
dec
jae
pop
dec
jns
outsb
add
int
cwtl
movsb
add
sbb
and
aad
mov
inc
or
ljmp
pop
adc
inc
mov
mov
enter
adc
cmpsl
mov
sbb
xchg
jne
mov
cwtl
add
push
lcall
sub
push
mov
push
out
jbe
pop
out
push
xchg
iret
mov
outsl
xchg
inc
test
jae
not
jae
push
out
xchg
pop
cmp
jns
jge
loopne
add
into
jge
mov
add
fs
jecxz
in
sbb
clc
mov
jecxz
jns
xlat
fildl
or
pop
repnz
push
inc
add
xchg
sbb
push
pop
sarb
sahf
mov
cld
push
std
add
push
ss
inc
mov
cmpsb
dec
xchg
inc
push
mov
push
xchg
in
push
push
cmpb
nop
cmpsb
loop
mov
pop
cmc
mov
test
shrb
leave
test
dec
mov
leave
fwait
lods
pop
xor
aaa
jns
imul
jo
pop
cmc
mov
nop
mov
mov
fsubrp
fnstenv
add
pop
ljmp
pop
stos
mov
and
xchg
add
push
lock
jns
sahf
cs
cld
cs
xchg
pusha
sbb
adc
push
repnz
test
adc
mov
adc
dec
lcall
pusha
int3
jp
mov
imul
cmp
xchg
movsl
jb
call
std
fidivs
adc
mov
aas
fisubrs
out
and
nop
mov
test
das
and
clc
lret
pop
out
dec
fucomip
incb
add
fdivrl
or
testl
and
xchg
mov
aaa
outsb
xchg
nop
adc
out
xor
insb
insb
fcoml
lods
cmpsb
mov
mov
dec
or
push
and
cmp
pop
cmpl
sbb
pop
fnstenv
clc
mov
in
test
js
push
mov
jp
adc
xchg
stos
es
addr16
adc
dec
push
mov
nop
xor
sarb
pop
faddl
cltd
xor
pop
lds
xchg
mov
andl
in
popf
lds
jnp
rorb
shl
xchg
cmc
pop
rcrl
xor
les
mov
jnp
mov
leave
sub
int
inc
mov
repz
push
adc
jge
daa
mov
and
rorb
adc
adc
sub
sub
fidivs
lahf
push
daa
aaa
addr16
sbb
dec
in
push
ret
xchg
xor
inc
lea
cmp
stos
cmp
mov
dec
jecxz
daa
rcrl
or
addr16
cmp
inc
push
mov
mov
leave
jge
cs
pusha
in
adc
andl
sub
adc
mov
pop
ljmp
xchg
inc
fadd
js
adcl
into
sarl
scas
out
xchg
jmp
mov
mov
ja
in
cltd
jbe
lahf
insl
mov
jg
pop
xlat
xchg
iret
and
mov
inc
xlat
adc
test
cmp
xchg
push
pop
shll
dec
mov
lahf
adc
in
jp
cmc
mov
loopne
jns
adc
ja
push
inc
or
fnsave
jle
mov
repz
ds
cmpsb
movsl
out
xchg
lods
fdivs
sahf
xchg
cli
pop
cmc
repnz
cmp
mov
popa
lock
data16
stos
outsl
dec
jle
movsl
cmp
outsl
push
fwait
popa
sbb
jle
cmp
popf
xor
jle
jns
lcall
or
sub
jecxz
arpl
pop
imulb
sub
push
sbb
or
lods
inc
lcall
xchg
lods
stos
mov
fdivl
fcom
and
cs
aam
add
pop
cmc
jnp
jg
mov
je
xchg
dec
outsl
xor
stos
bound
out
jne
insb
pop
jnp
in
sbb
outsb
js
mov
jno
stc
notl
sub
sbb
add
mov
loop
out
sbb
dec
out
pop
iret
inc
mov
dec
mov
xchg
jle
stc
sbbb
xor
push
shrl
aaa
into
fbstp
sub
jo
and
fbstp
add
jg
adc
push
dec
sbb
mov
mov
jnp
push
xorb
sub
pusha
insb
xchg
stos
push
or
pop
jge
stos
and
rclb
dec
test
fcoms
insl
push
xchg
fisubrs
mov
out
jns
push
and
adc
repz
cmp
adc
es
ss
mov
or
jnp
aaa
and
inc
mov
fwait
inc
fcoms
popf
or
out
test
out
pop
push
jns
mov
cmp
jae
insb
mov
pusha
imull
xor
xor
imul
mov
movsl
mov
ljmp
in
xchg
cmpsb
xor
test
cmpsl
add
cmp
mov
push
and
lahf
pop
js
jo
negb
andb
xor
mov
daa
jg
insb
fimuls
scas
inc
inc
pushl
leave
dec
xchg
adcl
outsl
xchg
daa
cmpsl
pop
lds
jnp
mov
xchg
test
gs
lret
xor
cmpsb
cmp
xor
sbb
cmc
and
cli
and
dec
lret
push
gs
sub
xor
cmp
test
movsl
js
mov
shll
dec
call
cmp
cld
mov
adc
inc
aas
dec
test
push
jmp
fs
adc
xor
mov
push
xor
pop
and
lahf
push
adc
outsl
mov
lea
inc
adc
jnp
insl
cmp
mov
xor
adc
sbb
push
sbb
xchg
inc
cmp
sahf
daa
rcr
ds
pushf
out
push
fildl
ffree
add
dec
sub
std
cmp
addr16
cltd
gs
test
rcll
ljmp
in
push
in
mov
mov
add
out
and
add
pop
cmc
popa
pusha
jno
imul
mov
in
ss
out
int3
aam
add
add
nop
mov
ja
clc
xchg
into
mov
aas
and
cmc
mov
lret
daa
out
into
adc
sub
adc
es
pop
int
sbb
jmp
int
aam
or
mov
pop
bound
test
xchg
fwait
test
pop
mov
dec
imul
jnp
mov
lea
arpl
dec
and
mov
jae
outsb
mov
xchg
cmp
loop
cmpsb
and
add
cmc
pusha
sub
loopne
jns
or
js
fs
pop
lods
xchg
imul
mov
cltd
mov
mov
sahf
and
xor
jp
es
jne
mov
clc
das
in
movlhps
mov
add
add
mov
sub
jg
mov
add
into
xor
push
movsl
lods
xor
sub
sbb
inc
scas
lds
adc
mov
add
or
lret
dec
std
daa
out
jg
jno
mov
pop
inc
sbb
inc
and
push
mov
pusha
lods
in
movsb
cmp
iret
test
sub
in
test
and
xchg
in
es
cmpsl
sbbl
fisttpll
std
adc
in
lret
and
xchg
je
push
sbb
shlb
jp
icebp
popa
and
imull
mov
lahf
or
nop
ret
incl
push
loope
mov
lcall
pop
sahf
scas
int
mov
popf
lret
xchg
xchg
pop
jae
push
xchg
mov
sub
pop
mov
lcall
push
repz
push
jmp
inc
std
xor
and
nop
dec
push
adc
ret
cli
shrl
insb
push
clc
ja
fimuls
sbbl
testl
pop
hlt
faddp
mov
mov
arpl
andb
mov
rclb
add
jecxz
pop
inc
je
js
xlat
sub
or
and
jl
das
push
ljmp
add
pushf
dec
outsl
test
filds
test
ljmp
adc
pushl
jnp
jp
add
add
fwait
pop
cltd
push
movsl
add
jge
jge
pop
mov
outsl
les
jge,pt
clc
jmp
clc
sbb
out
push
jno
pop
repnz
mov
cmp
adc
sar
mov
and
and
inc
int
adc
les
lret
jo
mov
adc
pop
repnz
xor
ja
push
jg
dec
mov
dec
jno
dec
push
push
and
test
fcmovne
or
call
mov
jns
test
push
movsl
clc
mov
add
mov
cltd
inc
cmp
mov
add
stos
data16
aad
andb
push
pop
movsl
push
popf
jge
sbb
and
es
outsb
dec
cwtl
imul
sub
dec
dec
mov
inc
jmp
sahf
inc
in
sbb
pushf
xchg
push
in
xor
jmp
adc
mov
sbb
enter
int3
xchg
pop
scas
in
ret
mov
sub
lds
lret
xchg
add
jno
popf
jo
cmp
les
xor
imul
cltd
xor
jmp
sub
cmpsl
ds
adc
xchg
inc
pop
push
std
pop
pop
dec
mov
xor
mov
jnp
pop
rorl
and
mov
cmp
ret
xchg
cs
addl
cltd
or
imul
jle
sub
aad
fidivl
lods
xor
sbb
mov
arpl
push
mov
inc
test
add
mov
out
jge,pt
mov
lock
incl
movsl
jle
mov
jecxz,pn
rcrl
test
repz
out
xor
test
clc
flds
add
test
and
stc
shrb
xlat
mov
cmp
out
jne
or
test
sbb
ss
ds
dec
adc
mov
dec
loope
stc
add
push
mov
out
jae
shl
jnp
loop
xorb
push
insl
inc
cmc
jge
roll
pop
rcll
repnz
xchg
jle
mov
mov
lahf
push
lahf
ss
mov
mov
jnp
push
test
aad
cmp
adc
mov
scas
xchg
loopne
int3
shll
sbbl
out
std
xchg
adc
mov
jo
sbb
ret
cmpl
mov
in
test
push
jne
inc
enter
arpl
dec
into
jb
in
adc
andb
push
lcall
add
xor
mov
test
out
pop
mov
adc
cs
mov
add
rclb
and
faddl
insl
addr16
lock
repz
and
mov
fdivrs
jae
mov
and
jmp
fs
data16
sub
ja
lret
aaa
adc
cmpsl
mov
jecxz
rcl
pop
test
xlat
hlt
sub
fmuls
lods
hlt
push
adc
aam
int3
and
add
out
cmp
inc
scas
addl
mov
sbb
fsubrl
fcoms
adcl
aad
mov
mov
jl
push
addl
dec
jg
push
lret
adc
mov
out
sbb
jecxz
sub
mov
dec
mov
mov
dec
sbb
push
pop
cmp
xchg
xchg
push
scas
cmpsl
sbbb
pop
lock
xlat
fnstenv
add
xchg
sub
fwait
ret
or
arpl
loopne
sarl
idivb
fld
ja
ss
frstor
mov
inc
or
mov
mov
sub
and
mov
mov
xlat
popa
jns
loope
rcl
addr16
pop
int3
jb
mov
icebp
stc
jecxz
insl
adc
add
movsb
movsb
mov
sbb
push
out
lods
cmp
stos
leave
stc
nop
mov
mov
and
jnp
sbb
xchg
mov
xor
xor
aas
lea
iret
cmovl
pop
insb
xor
push
sbb
iret
data16
mov
mov
aad
lods
add
test
ror
sbb
lea
cmp
shld
dec
sarb
shr
or
fidivs
pop
pop
sbbl
jb
xlat
mov
outsl
es
pop
xchg
jne
je
aam
mov
mov
sbb
mov
adc
push
lods
scas
inc
fldt
push
cmpsb
std
xchg
jecxz
dec
in
cmp
mov
repz
dec
xchg
aad
inc
ret
push
leave
and
cmp
pop
insl
inc
fstps
pop
and
test
cli
adc
jmp
mov
into
out
xlat
pop
lock
and
pop
cmc
push
lds
jl
mov
ficomps
cwtl
sbb
mov
mov
test
insl
mov
cmp
mov
loope
repnz
test
test
lret
cld
rcll
fucom
xchg
insb
and
iret
repz
bound
cld
inc
xchg
push
arpl
dec
mov
jp
mov
int
lods
mov
lret
dec
enter
out
std
out
xor
or
ljmp
call
std
vpmullw
adc
mov
notb
test
jo
adc
loop
mov
imul
stos
lret
ret
lret
insl
in
outsb
pop
mov
jle
insl
add
push
addr16
popf
notl
iret
adc
lods
add
xor
xchg
aad
call
test
inc
or
lock
shll
inc
cmpsl
in
xor
or
jp
mov
add
mov
mov
pop
pop
dec
icebp
or
sahf
dec
repz
shlb
jp
ror
pop
fwait
xor
int3
pop
push
daa
mov
fbld
dec
fldcw
or
pop
ficoms
mulb
idivl
jl
pop
cmpsl
push
imul
mov
dec
cmpsb
pop
dec
sub
inc
pushf
aaa
out
bound
pop
in
xchg
out
mov
jmp
dec
and
jb
lods
mov
inc
xor
jae
or
cmp
idiv
xor
ret
roll
cltd
lods
movsl
ljmp
es
xor
stc
js
adc
jl
sbb
xlat
push
dec
add
inc
mov
mov
jmp
mov
or
sbb
dec
dec
pop
xchg
jae,pn
fisubl
leave
xor
or
cs
jne
pop
shr
sbb
or
insb
je
dec
jmp
lods
sbb
push
jb
jge
push
mov
clc
aad
aam
outsb
xchg
popf
rcl
pop
pop
bound
push
outsb
inc
movhps
jbe
or
test
dec
xor
cmpsb
xchg
icebp
jge
cs
ss
dec
cmpsl
mov
add
cmp
orl
pop
jl
jle
lret
cltd
add
xlat
or
repz
das
pop
mov
xor
add
pop
fcomps
adc
es
imul
inc
sbb
and
shr
ret
iret
xchg
jb
dec
in
ss
dec
push
movsl
dec
push
and
fiaddl
ret
outsb
xor
jp
sar
mov
sbb
fwait
mov
les
mov
xchg
orb
jno
out
sub
add
lods
and
lcall
pop
add
scas
mov
cltd
mov
or
dec
arpl
lock
shll
pop
push
pop
jecxz
cs
mov
xchg
testl
or
inc
subl
ss
xchg
jbe
arpl
sbb
sub
out
jg
cmp
setp
cld
dec
add
add
lods
push
adc
xchg
mov
mov
cmp
jmp
xlat
ljmp
jecxz
pop
lcall
iret
xchg
push
popf
out
xchg
daa
push
in
dec
cmp
test
inc
pop
inc
cmc
xor
mov
and
jae
sub
inc
mov
jbe
ficomps
or
mov
jne
lds
dec
cmp
or
sahf
cmc
xchg
pop
push
movsl
pop
out
cmp
dec
insl
fwait
insb
sub
jmp
cmp
imul
adc
lcall
adc
fucom
sub
fmull
fldt
stc
rcll
inc
mov
xchg
test
shl
rcll
loopne
push
push
rorb
rcrb
insb
in
negb
inc
add
cmp
push
mov
fists
or
mov
popf
sti
enter
add
movsb
and
fs
mov
pop
and
pop
push
ret
cmpsl
popf
cmpsl
fmuls
stos
and
jae
xchg
sub
pop
ficomps
or
out
mov
inc
sbb
loop
jl
pop
fwait
jmp
jno
mov
es
jl
inc
imul
je
pop
sub
insb
pusha
add
cmp
jl
hlt
sub
les
add
lcall
mov
call
jmp
std
sbb
add
ss
add
stos
xchg
jge
in
pop
loope
rclb
xor
jg
cmp
adc
or
fwait
push
insb
sarl
test
mov
test
popf
ficomps
sbb
stc
test
sbb
or
adcb
push
cmp
or
out
xchg
cmp
jno
pop
xchg
cmp
cmp
or
lock
sub
xor
bound
pop
push
fs
lock
mov
or
or
ljmp
jno
xor
imul
ret
pop
xor
shll
ret
adc
into
sarl
mov
mov
outsl
scas
movsl
xor
xor
pop
pusha
into
sbb
mov
mov
and
mov
adc
mov
ja
cmp
mov
cmp
bound
xorl
movsb
outsb
aaa
out
adc
mov
outsb
adc
jb
mov
sub
fdiv
push
pop
xchg
sub
add
xchg
pop
sub
sbb
add
or
test
adc
adc
insb
xor
or
and
jns
xorl
fidivs
pop
aad
lods
inc
cmp
into
pop
imul
mov
jp
cmpsl
fidivrl
fistl
mov
or
push
movsl
jl
call
jns
icebp
stos
cmc
je
jmp
loopne
icebp
aas
xchg
lods
push
lahf
repz
sub
les
stos
or
cs
push
repnz
test
pop
mov
cmp
scas
decl
test
adc
push
xor
dec
in
fcomp
add
lods
clc
sahf
addb
mov
pop
jmp
icebp
adc
aas
push
or
lret
mov
iret
push
inc
inc
sbb
and
pop
lods
mov
mov
out
ret
xor
shlb
aas
mov
test
out
into
adc
inc
fildl
lods
shlb
bound
xchg
cmc
fadds
cmp
sub
ret
in
ret
ret
das
adc
je
pop
dec
pushf
out
scas
lcall
add
sti
shlb
or
cmpsl
sub
xchg
jo
pop
loopne
add
mov
inc
mov
xor
fs
aas
jge
sub
sub
ds
es
push
cld
pop
jg
test
pop
xor
js
and
negl
mov
sub
cmp
insl
jns
mov
cmpsb
ret
xor
aaa
pop
and
call
jp
scas
mov
lods
iret
iret
xor
clc
stos
lods
inc
fcompl
fwait
sti
add
nop
addr16
jbe
push
out
sahf
in
and
push
call
mov
scas
push
arpl
test
xchg
adc
das
sbbl
test
and
sti
in
arpl
push
jmp
out
into
sahf
addr16
and
dec
in
dec
sub
jno
mulb
sbb
adc
jb
fidivl
or
dec
outsl
sti
and
nop
xchg
sub
ret
cltd
cmc
cld
movsl
cs
cld
xchg
or
dec
fnclex
mov
fnstenv
dec
cmp
dec
in
lds
mov
cmc
adc
fildll
sarl
bnd
leave
lcall
push
inc
cmpsb
mov
fsubrl
or
cmp
cmp
and
notl
push
dec
mov
std
xrelease
xchg
jmp
push
pop
out
mov
rcll
adc
sub
repz
mov
movsb
stc
or
lods
add
dec
mov
mulb
call
push
pop
push
or
arpl
jne
or
cmp
sbb
push
inc
fcomps
mov
dec
fsubr
inc
pop
call
or
out
sub
cmp
mov
dec
xlat
dec
daa
inc
jnp
in
xchg
imul
fiaddl
mov
add
mov
sub
jmp
fxch
and
cmpsl
jno
xor
adc
or
test
jp
leave
dec
pop
jg
or
stos
aas
repnz
mov
ficoml
cmp
popf
movsl
jmp
mov
add
cmp
sub
fbstp
xor
fcomp
shl
shrl
negb
and
mov
cmp
jnp
inc
in
ja
movsl
adc
sbb
iret
lahf
mov
lret
xlat
mov
imul
mov
shl
push
test
inc
xchg
lods
daa
cmp
into
imul
ret
popf
sub
cmp
pop
pop
dec
arpl
sbb
cmp
js
dec
mov
popf
or
inc
movsl
mov
jnp
mov
inc
sbb
sti
cmp
push
into
and
lods
outsb
sbb
popa
shrl
shll
test
fs
call
xlat
dec
repz
clc
fsubrs
insl
bound
mull
add
or
push
inc
lods
andb
out
inc
jbe
xchg
xor
mov
daa
add
inc
xchg
push
and
out
xchg
inc
fst
daa
xchg
data16
rcll
rolb
jmp
mov
lret
mov
enter
in
mov
mov
push
xor
push
aad
cmp
sub
jnp
push
mov
in
sub
mov
mov
test
or
das
mov
push
jg
jmp
in
aam
mov
sbb
xor
adc
inc
das
pop
cli
fwait
mov
int
mov
mov
push
out
roll
adc
mov
lahf
in
xchg
fiadds
add
add
xchg
or
mov
sbb
jle
in
js
mov
inc
fs
mov
lock
and
adc
mov
sbb
daa
cld
pop
aas
test
xchg
cmp
add
mov
out
sub
lahf
pop
cld
sub
or
fwait
pop
jne
faddl
insl
es
enter
or
inc
pusha
sbb
xchg
mov
scas
push
idivl
pop
ret
cmpsl
es
je
push
mov
movsb
cmp
pop
ret
pusha
jns
adc
cs
pop
add
and
arpl
push
mov
pop
movsl
mov
mov
cmp
clc
pusha
xchg
cmpsb
push
sub
pop
sub
lcall
dec
or
adc
jmp
aam
inc
int3
dec
cmpsb
push
daa
push
sub
jo
test
fcoms
arpl
or
jp
clc
push
movsb
fwait
movsb
push
and
fidivl
je
mov
mov
mov
xor
ss
adc
or
sub
insb
dec
dec
xor
stos
jecxz
out
or
push
in
sbb
js
push
lcall
icebp
mov
jmp
push
fdivrs
test
mov
stos
push
cmpsl
mov
xor
push
rorb
mov
aad
adc
outsl
ret
push
enter
dec
popa
sbb
cmp
dec
in
test
hlt
mov
cmp
jo
jne,pn
loopne
imul
mov
push
pop
fs
jle
iret
fucomp
lahf
out
inc
aas
pop
ja
xor
jmp
mov
xlat
test
and
pop
xor
xchg
jmp
dec
in
or
mov
cmp
out
ret
hlt
aas
jnp
xchg
int3
adc
lret
jb
xchg
enter
scas
inc
sahf
ja
sbb
sub
inc
jbe
sti
pop
xchg
xchg
inc
push
mov
jecxz
roll
scas
sti
xor
mov
fs
mov
push
jo
aas
xor
dec
xchg
xchg
sub
adc
mov
out
jmp
adc
pop
lea
andb
mov
adc
xchg
pop
setge
call
fwait
test
pop
std
mov
ficomps
mov
xchg
xchg
adc
loop
insb
mov
fildll
mov
insb
mov
insb
lods
pop
out
xchg
dec
outsl
push
mov
or
and
je
adc
sbb
shrb
dec
in
mov
cmp
mov
test
ja
int
loope
and
xchg
js
lret
dec
rcpps
imul
push
mov
jno
xor
adc
mov
mov
xor
outsl
pop
jns
dec
cmp
pop
pop
fcmove
pop
loope
out
ret
push
pop
addr16
push
add
sbb
mov
mov
cmc
lret
push
shl
jle
out
sbbl
adc
lcall
stc
je
or
out
filds
pop
sti
or
loopne
sub
ja
call
add
iret
add
test
lret
mov
jno
test
repz
sub
cmp
inc
stos
cli
or
mov
movl
push
push
fistps
pop
andb
icebp
jmp
jmp
shll
or
call
out
cs
pusha
xor
inc
cmpsb
es
sti
dec
test
sbb
push
dec
add
and
fldpi
cmpsl
mov
cs
ljmp
mov
fdivl
pop
push
xlat
adc
mov
in
fucomi
iret
and
lds
jmp
pop
pop
fbstp
ret
push
call
push
mov
loopne
mov
int
in
mov
dec
mov
dec
mov
fs
clc
and
pop
add
in
aam
sbb
fisubrs
pop
adc
rcrl
add
lods
repz
cmpsl
sbb
idivl
andb
xlat
faddp
movsl
ds
lds
pop
in
jne
or
xor
sub
bswap
adc
mov
jecxz
mov
push
aam
jg
ds
pop
sahf
cmp
add
add
push
daa
sub
mov
mov
mov
stc
pop
xlat
dec
sbb
js
mov
jl
cmp
or
mov
nop
stc
dec
inc
shr
jb
cli
or
imul
fs
push
pop
xchg
cmp
mov
pushf
cli
rcr
int3
dec
cmp
scas
sub
fdivrs
int
leave
mov
cmp
xchg
mov
mov
xor
jno
mov
lahf
rcrl
and
add
push
xor
inc
stos
je
mov
hlt
jno
lods
mov
andb
inc
mov
jg
add
mov
pop
adc
rolb
lods
cmp
pop
push
fldenv
call
xchg
inc
mov
xchg
pop
fsubrl
fsubrp
mov
mov
out
cmpsl
mov
rcrb
cltd
jo
sti
push
jp
mov
inc
outsb
outsb
sbb
xchg
xchg
inc
xlat
ret
mov
add
test
and
leave
xlat
outsb
mov
lret
sbb
or
jecxz
lret
sti
push
cmc
jle
seta
test
ret
lret
fistpll
mov
sub
insb
sub
cwtl
xor
cmp
push
jg
cmp
shrb
dec
lods
xchg
fwait
in
mov
mov
push
xor
cmp
lea
das
test
and
dec
mov
add
jno
xor
lods
dec
push
ja
aaa
dec
push
cwtl
xchg
mov
lds
ja
dec
test
idivb
xchg
popa
insl
out
sbb
out
sub
mov
sub
or
lea
dec
dec
daa
ljmp
mov
enter
cmp
js
dec
pushf
les
imul
into
or
mov
mov
leave
nop
dec
cs
xchg
or
outsl
outsl
and
mov
dec
cmp
jmp
enter
xor
jbe
cwtl
pop
mov
xlat
rcl
jae
jne
mov
test
mov
fs
cmpsb
or
sbbl
add
popf
mov
sahf
sahf
xor
push
pop
mov
inc
lcall
sub
xor
fldl
jne
or
test
jle
pop
adc
aam
in
jge
pushf
mov
mov
test
es
xor
adc
ret
push
lcall
in
stos
mov
adc
popf
pop
mov
or
fnsave
fimuls
fnstsw
roll
push
std
jmp
inc
mov
cltd
add
lret
and
cmp
dec
leave
das
scas
out
shrl
pop
add
jp
das
xchg
pop
popa
cli
fnstenv
jmp
clc
arpl
cmp
cs
xor
pop
xchg
or
rorl
cwtl
mov
pop
daa
out
filds
repz
and
pop
push
jb
fisttpl
lods
es
adc
and
test
aas
cmp
cmp
or
lcall
sub
mov
jns
pop
jae
sarb
call
or
sub
rcll
insl
xchg
cmp
scas
out
outsl
add
fstpl
xchg
dec
sub
clc
sbb
push
inc
adc
out
mov
lods
ljmp
out
popf
jnp
and
push
mov
mov
cltd
fdivp
adcb
test
pushf
icebp
mov
movsl
push
mov
pop
push
dec
ljmp
inc
cld
ss
mov
ret
push
testl
xor
ss
cwtl
imul
xlat
insl
xchg
test
dec
push
jno
xchg
stc
test
in
or
in
repz
fmuls
movsb
aaa
xchg
arpl
aam
pop
push
out
jge
mov
idivl
mov
jae
scas
sbb
cmp
pop
dec
fists
std
fldt
or
shrb
cwtl
cs
lock
repnz
xchg
cmp
shrb
test
in
mov
inc
rolb
xchg
mov
nop
dec
lods
and
into
nop
adc
subl
jle
cmpsb
scas
adc
xor
ror
inc
add
arpl
xchg
xor
aad
subl
ror
std
xchg
push
sbb
cmc
ret
mov
insl
dec
cltd
inc
sti
aas
shlb
loopne
ficompl
iret
test
faddl
cmpsl
sbb
mov
adc
cld
pop
push
xor
push
pop
scas
mov
loope
sbbl
addr16
lods
enter
je
pop
and
mov
sub
bound
xor
insb
cmp
dec
pop
ret
jbe
and
xorb
jl
cltd
fwait
aas
addr16
hlt
fwait
push
loop
in
aas
or
fcomps
adc
xchg
mov
ja
in
popf
adcl
push
xchg
mov
scas
mov
ljmp
ret
imul
out
movsl
int
sahf
dec
dec
imul
or
mov
add
mov
mov
xchg
fidivl
outsl
insb
xchg
lret
mov
add
jne
jo
or
mov
cmpsb
jae
sbb
mov
sub
ret
pop
sub
les
aam
inc
mov
clc
or
xchg
bound
dec
les
outsb
sbb
into
call
inc
in
aam
ret
insb
mov
adc
fidivl
add
rcrl
aaa
idivl
push
addr16
popa
mov
dec
lods
add
cmpsb
sub
bound
pop
sub
dec
cmp
or
sahf
movsl
gs
sarl
movsl
insb
xor
fists
jmp
fldl
mov
out
scas
jb
stos
mov
in
repnz
cmpsl
jns
ja
aam
mov
cmp
jge
dec
jecxz
cmp
lcall
sbb
push
cwtl
loop
mov
xor
sarb
mov
sbb
lock
xor
sbb
xchg
ja
dec
dec
popf
and
inc
inc
mov
enter
gs
xchg
aam
adc
sbb
or
popf
push
ja
inc
jle
or
ljmp
in
adc
or
and
inc
add
icebp
mov
mov
inc
enter
jae
lcall
xchg
inc
xlat
enter
ffreep
push
mov
jmp
lahf
xchg
sarl
add
out
adc
ficomps
loope
mov
in
push
adc
jno
adc
sbb
hlt
mov
popf
test
jbe
adc
add
orb
outsl
das
popf
pop
push
insl
ss
pinsrw
das
loop
imul
mov
xor
mov
dec
mov
sub
call
aaa
jbe
fstps
push
leave
jl
push
mov
sbb
addl
and
loope
add
lahf
je
lahf
push
push
and
mov
scas
xchg
jmp
mov
jbe
je
push
jne
inc
in
lea
pop
xor
pop
sbb
ja
add
sub
ljmp
push
cmp
icebp
or
pushf
ds
mov
lahf
loope
add
inc
inc
ja
cli
test
inc
inc
repz
mov
mov
movsl
sub
adc
cmc
cmp
es
xor
out
pop
cmp
mov
shrb
mov
mov
mov
jle
shr
popf
inc
adc
es
in
mov
sub
ss
aad
sub
insb
lret
xlat
xchg
mov
pop
add
mov
addr16
sbbl
xor
out
sub
ss
sbb
addl
loop
stc
popf
push
fnstenv
decb
lcall
js
aaa
add
push
int3
xchg
xor
hlt
cmpsb
gs
int3
lock
or
outsl
std
pop
adc
int
notb
out
cmc
fisubrs
mov
push
sub
push
cmp
test
and
outsl
sub
pop
mov
fstps
ljmp
jno
leave
dec
dec
movsl
clc
mov
je
mulb
ret
cmp
out
adc
pop
in
jno
out
outsl
xchg
imul
sbb
dec
popa
pop
je
das
gs
mov
sbbb
pop
add
dec
fwait
imul
cmp
lahf
pop
icebp
int
in
cld
imul
popf
dec
sbbl
xorb
cmp
inc
mov
sarb
in
orl
xchg
push
fwait
sbb
inc
std
sub
mov
push
pop
aas
rcl
lret
call
push
jl
subl
es
xor
outsl
sub
jns
jle
xchg
adc
cs
lret
cmp
add
incl
repnz
dec
scas
loope
xchg
repz
sbb
dec
shll
jno,pn
popl
add
inc
test
pushf
mov
idivb
or
test
xchg
imul
adc
inc
sbb
xchg
stc
pop
or
mov
adc
jg
pop
test
jmp
mov
adc
es
subb
mov
shll
sub
mov
and
mov
and
jmp
popa
popf
add
pop
xor
stc
or
xor
jo
jno
loop
lret
inc
fwait
repnz
mov
or
xorb
int3
daa
loopne
pop
imul
les
jl
daa
mov
or
jge
sbb
test
rcrb
adc
imul
jge
xchg
inc
movsb
dec
xchg
icebp
dec
add
cmp
fldl
inc
xor
sbb
pop
push
adc
mov
pop
call
in
data16
mov
or
lea
pop
sbb
fbstp
lahf
push
insl
dec
cmp
das
loop
mov
mov
subl
call
add
loopne
jo
outsl
lret
push
test
js
adc
pusha
fcmovne
or
jle
xchg
push
mov
xor
es
pop
sub
ljmp
call
test
jne
mov
add
jecxz
cmp
aad
loopne
sti
pop
mov
add
mov
out
fcmovbe
dec
flds
outsb
inc
ficomps
sbb
ret
mov
aas
xor
cld
pop
test
inc
stc
nop
xchg
out
and
mov
je
ret
push
and
push
out
sbb
jmp
dec
gs
pop
inc
push
aam
cmp
jns
outsb
sarl
notl
mov
sbb
enter
sbb
test
shll
xor
mov
jle
daa
out
cmp
fs
movsb
push
std
inc
fisttps
pop
pop
or
mov
push
loope
aas
mov
iret
gs
mov
sub
das
andb
rcrb
and
xchg
push
in
push
inc
sub
jecxz
lea
xor
cmpl
push
mov
inc
add
shll
mov
outsl
push
test
mov
pop
or
dec
stos
rcll
test
mov
mov
into
and
adc
adc
add
pop
bnd
iret
and
roll
and
push
cmp
inc
out
xchg
movsb
mov
movsb
mov
push
sbb
mov
cmpsl
jmp
fadds
lods
sarb
push
or
std
insb
lret
idivl
hlt
pop
push
kmovb
aaa
jg
inc
aam
mov
xlat
sub
mov
std
xchg
repnz
xor
mov
sbb
cmp
add
xchg
jmp
and
es
shl
inc
dec
add
enter
inc
fcomps
insb
sbb
fidivl
mov
mov
adc
imul
mov
or
insb
mov
sbb
out
mov
mov
pop
lret
adc
movsl
sbb
sti
idivl
adc
mov
cltd
and
add
test
inc
bound
cmpsl
and
rcrl
nop
fsubr
js
nop
push
movsl
test
lret
into
in
into
dec
lahf
out
aas
loop
stos
hlt
addr16
add
iret
xor
adcb
cld
mov
adc
cli
sub
mov
clc
repz
hlt
and
sbb
mov
std
mov
lret
repnz
rorl
pop
inc
dec
in
sahf
mov
addr16
outsb
lret
mov
fmuls
mov
in
sbb
sti
xchg
bound
js
dec
cmpsb
jle
insb
inc
data16
adc
sub
scas
sbb
andb
fidivl
leave
cmp
jnp
adc
mov
movsl
data16
mov
inc
cmp
popa
and
xchg
pop
xchg
mov
jnp
ss
inc
add
int3
xorl
gs
arpl
sbb
cmpl
into
mov
mov
mov
sub
cld
popf
rcrl
les
outsb
push
insb
jl
fstl
sub
mov
jne
jbe
jp
dec
cmp
je
lods
inc
mov
xchg
push
add
cmp
push
pop
jle
fsubl
leave
ret
adc
inc
jb
enter
leave
mov
add
xor
fstps
jb
mov
lea
mov
inc
dec
or
or
ret
mov
jp
lds
mov
repnz
pop
mov
lret
push
pop
cli
xchg
push
xchg
test
pop
ljmp
cmp
mov
rolb
pop
cs
sub
into
aaa
leave
jmp
clc
xchg
outsl
push
test
push
push
sbb
ja
jns
loop
push
inc
xor
gs
pop
add
iret
in
lret
jbe
dec
or
das
push
push
jb
or
dec
pop
shr
cmc
mov
loope
pop
jmp
aas
out
or
imul
test
aad
lret
adc
dec
jnp
jb
adc
shll
xorb
and
or
insl
add
xor
scas
push
sub
shll
test
xchg
adc
cmpsb
jmp
test
insb
cld
int
sti
jp
outsl
cmp
xchg
in
jo
mov
movsb
repnz
mov
or
in
sbb
insl
adc
xor
in
negb
sbb
inc
ret
stc
and
sub
outsb
fildl
lods
movsl
sub
xlat
push
jmp
mov
pop
mov
dec
pop
pusha
cmc
mov
push
cmp
cltd
jle
xlat
scas
xchg
sub
and
sub
inc
push
inc
lcall
and
push
adcl
lods
pop
pop
cmp
pop
jg
in
push
pushf
mov
adc
xchg
jnp
pop
shrb
fimull
movhps
mov
or
std
adc
dec
pop
das
cmp
test
xchg
es
mov
fdivs
adc
mov
mov
dec
popw
test
sub
inc
inc
stc
jl
sub
inc
orb
repz
and
push
jae
adc
lret
mov
outsb
addr16
fistl
mov
mov
mov
test
mull
dec
push
jecxz
push
hlt
xchg
xchg
dec
cmp
pop
out
push
ljmp
cmp
and
subb
xchg
adc
cmc
cmc
push
mov
push
pop
xor
ds
lret
pmulhw
mov
push
xchg
outsb
mov
sub
popf
out
sbb
out
sti
out
arpl
push
mov
call
pop
notb
mov
sub
lret
nop
daa
mov
imul
outsl
cmpsb
orb
cmp
xchg
pop
ja
xchg
jle
inc
ljmp
mov
xor
jp
lea
adc
imull
scas
adc
sub
shrl
dec
cmp
clc
sub
aad
sbb
pop
scas
sub
shll
in
das
outsb
popa
subl
xlat
pop
test
jp
lods
cwtl
dec
inc
std
push
push
js
cli
mov
out
ljmp
fldcw
sub
fisubl
mov
mov
sbb
insl
mov
ljmp
fcoml
popa
lods
add
mov
dec
shl
sti
test
ret
int
mov
xchg
rorb
mov
mov
adc
push
addr16
push
inc
lret
cld
push
out
test
pop
cld
dec
clc
or
pop
nop
mov
jmp
insl
or
enter
arpl
mov
pop
jo
and
in
nop
mov
andb
adc
mov
or
add
in
in
xchg
lret
call
inc
fidivs
xchg
xchg
popa
es
cmp
lea
sti
mul
dec
sub
movsb
cmp
push
hlt
ret
mov
xchg
arpl
push
insb
scas
cltd
ljmp
int
cmp
jns
imul
fmuls
xchg
jnp
mov
dec
pop
cmp
mov
dec
or
sub
dec
or
pusha
pop
dec
lcall
loope
out
pop
push
adc
pop
insb
xchg
sbb
push
lret
mov
mov
dec
xor
cwtl
adc
sahf
addl
pusha
pop
mov
add
sarb
cmpsb
les
out
vpsraw
insl
pop
loopne
nop
adc
lcall
leave
clc
in
cmp
add
test
jno
das
repnz
adc
push
or
xor
inc
add
popf
in
jnp
ljmp
mov
data16
insl
sti
pop
jnp
mov
insl
xlat
jb
mov
outsl
jmp
popf
sbbb
xchg
enter
jns
xchg
xchg
push
push
adc
mov
xchg
sub
lahf
xor
push
pop
push
sub
xlat
push
rcrb
sbb
div
inc
scas
dec
sbb
pop
dec
mov
pop
shrl
xchg
in
hlt
movsb
inc
fdivp
data16
mov
xor
fnstsw
pop
bound
frstor
jne
ror
inc
jg
iret
cmp
mov
mov
lock
scas
push
pop
push
outsl
or
enter
faddl
sub
inc
out
roll
loope
jle
insl
mov
xchg
movsl
or
mov
out
fdivl
add
pop
xchg
dec
in
pop
ds
subb
cmp
mov
test
xlat
fwait
cld
push
adc
fnstcw
stos
sub
enter
gs
jne
cltd
or
xor
push
adc
jno
repz
sahf
dec
mov
movsl
sbb
test
xchg
stos
aaa
sbb
dec
in
imul
mov
insl
cmp
jmp
inc
icebp
dec
call
cmc
out
sbb
dec
or
jae
mov
lock
jbe
xchg
out
mov
jge
dec
fistpl
inc
jmp
in
bound
pop
pop
xchg
mov
repz
sub
push
xor
xor
sub
rcll
cmp
adc
dec
inc
iret
mov
sub
adc
scas
enter
insl
loope
stc
shlb
cltd
jo
pop
mov
popl
pusha
push
fcmovnu
call
fistps
js
sbb
push
push
jl
xlat
and
sbb
mov
iret
outsl
adc
dec
shrb
pusha
notb
repz
inc
sbb
pusha
sahf
fs
inc
imull
les
lret
pop
ds
jnp
test
dec
loopne
sahf
subl
dec
leave
inc
jmp
icebp
mov
popa
lahf
fsts
mov
mov
fsts
add
lcall
adc
and
sub
loop
pop
push
fcmovnbe
mov
std
loop
nop
and
es
sub
push
push
into
insl
in
aaa
xor
and
mov
fwait
or
cltd
es
out
jg
je
sbbb
fstp
xor
push
xchg
ret
xchg
mov
jmp
movsl
ficoms
mov
mov
inc
rcll
adc
or
enter
mov
dec
repz
xor
mov
insb
rorb
cmpsl
xchg
out
inc
pop
add
bound
and
fwait
sub
push
out
popf
test
inc
test
cmp
push
ret
xor
pop
les
fdivl
cli
jo
dec
fcoml
inc
inc
mov
repnz
lret
adc
bound
xorl
jb
push
shrl
and
pop
popf
push
add
stos
int3
stc
mov
clc
mov
dec
xor
jmp
out
lods
ljmp
pushf
xor
cmc
mov
mov
stc
nop
stos
loop
loopne
pop
jo
rorl
mov
pop
sub
mov
jnp
jmp
incl
call
in
stos
push
mov
xor
mov
jmp
shlb
adc
dec
mov
mov
pop
lock
stos
push
pop
fcoml
scas
adc
push
push
push
dec
xchg
popa
cmpsb
call
mov
xor
lock
xchg
dec
mov
adc
roll
shrb
dec
out
add
add
ljmp
insb
dec
fcomps
arpl
push
cwtl
int3
xchg
std
decb
mov
pop
das
imul
cmpsb
inc
jle
fs
ret
sahf
pop
jecxz
dec
push
cld
fnstenv
sbb
sub
push
sub
mov
movsb
cli
push
push
lods
es
and
sub
jns
shll
push
test
or
adc
push
aas
push
adcl
mov
call
rcrb
xlat
mov
xchg
adc
inc
lret
add
addr16
dec
mov
aad
test
jae
jp
and
cltd
and
out
movsb
test
iret
lods
jns
jnp
mov
ret
scas
pop
sbb
mov
jo
rcrl
mov
mov
push
xor
and
cmp
jns
cmp
add
jp
subb
arpl
sub
lahf
mov
aas
clc
subl
sub
mov
in
sysret
xchg
out
test
rcl
dec
int
inc
pushl
xlat
fdivs
test
imul
push
pop
jo
adc
js
pop
cmp
mov
push
xchg
lods
jno
fildl
jmp
std
aad
nop
add
xor
and
push
lcall
sub
push
fistpl
imul
cmpsb
cmc
xchg
dec
and
aas
imul
scas
flds
adc
das
lods
test
adc
push
push
lods
mov
mov
sarb
fstl
pusha
movsb
fwait
arpl
mov
into
pop
mov
or
movsb
sub
push
add
insb
int
and
push
movsl
mov
push
jnp
mov
loop
in
mov
xor
outsl
push
repz
push
out
sbb
mov
cmpsb
dec
sti
cmp
xor
js
xor
xchg
jp
pop
mulb
popf
dec
icebp
cmp
sahf
bswap
sub
lea
mov
jae
ja
js
jne
out
sub
call
scas
xchg
push
push
rcrb
add
jmp
push
cmc
xor
jg
imul
loopne
xor
mulb
sub
rcrb
add
lret
adc
es
enter
xchg
xlat
mov
call
mov
adc
mov
aaa
clc
add
lret
push
std
sbb
xor
cmp
std
sarl
cltd
push
in
lret
lock
xchg
je
lods
xorb
mov
sbb
jmp
cli
xor
add
out
push
test
dec
ret
in
test
sub
loopne
cli
push
movsb
stos
add
gs
jmp
and
cmp
cmp
adc
cmp
push
add
in
loop
lahf
and
pop
cmp
pop
xchg
xor
jg
out
xchg
or
pop
cmp
jmp
xor
jns
rol
add
gs
sbb
or
imul
mov
mov
inc
arpl
inc
pop
sub
es
push
mov
add
mov
lods
xor
pop
sbbb
or
adc
push
mov
ret
repnz
cmp
xchg
cld
mov
mov
jae
loop
icebp
testl
scas
jp
dec
jno
roll
jno
xlat
frstor
mov
movsb
or
add
adc
popf
cmp
cltd
int3
cmp
jns
sub
not
mov
sub
mov
loope
clc
nop
and
push
inc
outsl
arpl
jns
in
arpl
in
xor
ret
stos
cmp
jge
add
ret
das
pop
push
out
lea
aam
ret
mov
into
add
aad
sbb
sahf
cmc
push
and
aad
es
sub
aad
sbb
cli
movsl
xor
inc
lock
push
pop
mov
fildll
push
or
arpl
pop
in
jge
mov
jle
adc
out
push
mov
sub
ss
pusha
jmp
scas
in
out
jmp
cmp
int
stos
out
pop
clc
ret
push
inc
and
testb
int
push
mov
outsl
fs
mov
push
lret
repz
in
and
out
pushf
lret
shr
mov
push
mov
jnp
sarl
mov
cmpsl
lods
inc
cmc
mov
rclb
sub
repnz
and
jno
test
pusha
cmp
into
sbb
xchg
out
imul
fidivl
iret
cld
fxch
xchg
mov
mov
pusha
cmp
mov
cmp
cld
xchg
xchg
les
add
jmp
adc
std
add
adc
mov
inc
xchg
xor
dec
xor
inc
aas
movsl
jnp
xlat
pop
fmull
rcr
fwait
into
jmp
cld
xchg
mov
or
jae
inc
and
mov
cli
cmp
mov
lcall
in
in
aam
les
xchg
mov
mov
adc
or
sbb
jns
push
shlb
xchg
popa
cltd
aad
xor
xchg
aas
mov
bound
mov
inc
and
scas
stos
adc
fiaddl
jle
fcoml
inc
ljmp
pop
lea
es
or
ret
pop
fldenv
jl
dec
movsl
mov
or
or
leave
push
dec
sub
gs
xchg
movsb
imulb
ss
test
arpl
loop
inc
push
movsl
js
in
pusha
pushf
push
sub
xchg
push
ret
mov
scas
movsl
dec
loope
in
movsb
mov
out
in
push
rcrb
or
xor
lahf
cmpl
aad
imul
inc
je
inc
addr16
push
lock
scas
es
jmp
pop
int
loop
and
mov
in
pop
mov
pop
shrb
sahf
add
or
loopne
addb
mov
cli
rorl
incl
aam
mov
cmp
cmp
add
aad
call
or
mov
cmpsl
aaa
mov
pop
push
je
mov
bound
push
fs
andb
ja
jo
dec
xchg
mov
adc
mov
cmpsb
xrelease
test
mov
das
movb
notl
sub
xchg
push
jmp
leave
jle
jmp
outsb
movsb
jmp
adc
out
add
es
cmpsl
lahf
iret
adc
mov
push
popf
out
lds
push
lahf
sbbb
push
adc
and
push
fnstsw
pop
lods
or
cmc
cmp
loopne
out
mov
pop
mov
fsubp
aaa
mov
ret
addb
ja
imul
rorl
cs
loop
inc
sahf
adcl
aaa
divb
mov
push
push
testl
negb
xchg
xor
outsl
cmp
cwtl
jle
loop
ret
push
sub
fisubl
or
push
mov
cmp
in
loopne
inc
data16
sbb
adc
jmp
rol
mov
pop
cwtl
mov
xor
push
push
jmp
leave
push
int3
cli
bnd
shrb
sub
and
fdivs
lcall
push
in
inc
incb
mov
jbe
dec
in
xchg
xor
sbb
or
xchg
mov
nop
sarb
add
rorb
in
loope
outsb
fs
popf
cmpsl
test
outsl
push
lret
push
sub
jae
xchg
sub
dec
sbb
cmp
jmp
push
out
adc
lea
cltd
cmpl
test
pop
add
xchg
mov
pushf
stos
inc
xor
mov
fnstenv
mov
dec
jns
push
xchg
fwait
in
adc
mov
jl,pn
int3
pop
bound
fdivl
leave
cmpsb
mov
aas
push
not
in
lods
jne
pop
movsb
lds
imul
adc
pop
adc
fdivrs
movsb
cmp
mov
sarl
ret
xor
in
lahf
jo
mov
adc
aam
inc
jge
mov
mov
push
in
shrb
lret
push
fs
add
mov
clc
or
pusha
jno
lret
daa
mov
push
scas
inc
pop
sti
or
movsl
xchg
js
mov
fs
xchg
xchg
into
mov
mov
gs
fwait
lret
push
dec
icebp
dec
jmp
dec
insb
cmp
insb
add
mov
mov
sahf
outsl
cmp
popa
mov
in
ror
push
shr
aaa
icebp
dec
mov
jo
xchg
xchg
daa
aam
lds
pop
sbb
xchg
ja
sbbb
xchg
add
mov
mov
pushf
jbe
repz
xor
or
jnp
push
sub
dec
inc
xchg
push
jae
repnz
pop
and
sti
mov
pop
data16
sbb
jp
mov
test
mov
lcall
jge
loopne
xchg
sahf
sbb
xchg
sbb
fcmove
dec
dec
in
jmp
insb
add
inc
sub
dec
mov
lcall
std
shl
and
adc
in
adc
and
stos
mov
push
or
dec
pop
push
int
jbe
mov
or
xchg
mov
cmp
mov
aaa
mov
shll
repnz
mov
jb
cmp
stos
inc
and
pop
rol
enter
gs
sahf
pop
dec
shlb
cmp
pop
lret
data16
mov
inc
fiadds
stc
nop
stc
lret
adcb
cmp
scas
mov
mov
pop
out
cs
jns
fbstp
mov
dec
ds
add
stos
xchg
push
ss
xchg
orb
ret
mov
les
dec
jno
mov
in
into
arpl
jno
push
and
lea
xchg
loop
mov
gs
mov
fidivs
xor
mov
sbb
xor
dec
jecxz
int3
jne
sbb
jns
int
push
push
and
das
jp
aaa
sbb
das
stos
sbb
jecxz
jl
iretw
test
cmp
pop
mov
cmpsb
cmp
push
push
push
sbb
jg
ss
xlat
mov
shlb
in
jnp
push
cltd
mov
insl
cltd
test
inc
add
ja
mov
cmp
mov
xchg
mov
outsl
mov
mov
jmp
xchg
pushl
pushf
or
nop
orps
das
xchg
dec
loopw
jne
jno
pop
testb
jno
insb
cs
out
shl
jmp
das
or
pop
test
fwait
jg
adc
jl
dec
and
out
jge
sbb
mov
fbstp
push
ss
sahf
out
sbb
in
xchg
sub
cwtl
cmc
xchg
adc
lahf
cmpb
gs
jge
cmp
or
inc
nop
shrb
loopne
jmp
addr16
fbld
cmpsl
jne
int
cmp
jne
sti
jbe
sbb
icebp
pop
sbb
mov
stos
scas
ja
into
rolb
push
mov
dec
fstpl
out
nop
daa
loope
das
or
stc
fnsave
sub
jbe
sti
xchg
iret
mov
clc
push
mov
shrl
data16
test
shlb
mov
adc
inc
lret
lds
add
xchg
inc
or
mov
lock
adc
stc
dec
mov
lret
int
xchg
stos
nop
ficoml
cmpl
push
mov
push
mov
scas
add
pushl
imul
xchg
stos
popa
add
xchg
arpl
sbb
inc
fildl
sub
mov
bound
push
jae
jmp
fistpl
inc
xchg
jnp
sub
adc
jl
dec
repz
cmp
push
test
jno
jl
push
mov
jne
repz
test
test
or
xchg
jb
popa
in
pop
test
fstps
mov
testb
aaa
loopne
aaa
adc
xchg
mov
es
and
clc
mov
adc
dec
cwtl
push
sub
imul
mov
decl
sbb
adc
pop
lea
rcl
test
mov
push
and
scas
imul
xor
sbb
add
jbe
jno
xchg
or
or
mov
push
push
and
les
mov
addl
and
jecxz
push
movsb
sbbl
sub
or
mov
pop
rep
call
fcmove
fnstsw
push
scas
inc
cmpb
fists
fdivrl
jbe
imul
fistps
mov
adc
mov
mov
dec
adc
scas
lret
jmp
push
xlat
ljmp
mov
sbb
dec
aad
pop
repnz
mov
bound
fwait
mov
xchg
popf
adc
div
jns
mov
andb
std
mov
cmp
and
mov
ret
test
icebp
sub
cli
jne
clc
pop
ds
loopne
cmpsb
popa
ror
push
mov
add
jae
loope
fxch
xchg
aas
mov
jp
xor
sbb
dec
xchg
and
xor
sbbb
cwtl
aad
sti
push
mov
es
aam
or
aad
mov
sub
and
lods
fnstsw
mov
jle
fdivs
test
inc
notl
mov
adc
negl
loopne
adc
cmc
mov
mov
out
mov
repz
or
aas
out
mov
sub
sub
mov
xchg
sbbb
inc
in
mov
mov
xor
test
xor
arpl
aam
stc
mov
mov
popl
aam
inc
dec
int
push
xor
mov
mov
jmp
popa
addl
lret
jns
jno
repz
out
in
xchg
jecxz
add
out
repz
adc
pop
addr16
push
mov
mov
call
or
mov
inc
xor
xchg
insl
sub
hlt
addr16
aaa
leave
cwtl
mov
mov
fsubl
call
cmp
lret
or
mov
jl
mov
pop
pop
fcoml
pop
repnz
aam
mov
push
inc
inc
mov
adc
pop
enter
insl
lahf
dec
stos
inc
mov
xchg
or
mov
xor
ficoms
xchg
loopne
call
mov
push
cmc
lret
push
push
cld
push
mov
xchg
mov
jecxz
repnz
das
stc
sbb
je
pop
cmp
xchg
sub
sbb
gs
daa
divl
imul
push
jmp
lret
push
pusha
lahf
outsl
pop
jbe
movsl
pop
mov
mov
loope
add
mov
xchg
insl
icebp
adc
repnz
jmp
mov
or
das
cmp
dec
adc
pop
cmp
in
fs
and
jp
adc
dec
jg
js
adc
fwait
xor
sbb
ficomps
push
mov
add
cld
jmp
cmp
pop
lea
sub
bound
jl
mov
int3
fisubrs
roll
repz
scas
and
fiaddl
adc
pop
adc
adc
push
adc
cld
pop
mov
sbb
mov
mov
mov
lea
or
int3
repz
mov
adc
or
xchg
les
mov
lds
mov
pushl
movsw
sbb
outsb
inc
or
jge
popa
scas
js
imul
popf
fisttpl
mov
aas
icebp
insb
popf
fmuls
sbb
fnstenv
lret
cltd
sub
jg
movsl
pusha
aaa
push
adc
fmul
test
int
fs
aaa
push
test
cmc
mov
mov
and
sbb
ret
jbe
es
push
test
jne
imul
sti
xchg
out
arpl
scas
xchg
mov
or
int
inc
mov
and
je
inc
pop
mov
nop
sub
inc
scas
popa
imulb
sub
andb
and
rcrl
bound
xchg
push
cs
test
stos
movsb
test
inc
push
and
int
aaa
negl
jbe
adc
adc
aad
and
mov
lcall
lcall
lret
xchg
adc
mov
dec
clc
mov
mov
or
ds
fwait
dec
xchg
pop
clc
lds
mov
clc
test
push
adc
sub
shlb
lods
jne
jb
cmp
shrb
insb
jecxz
jge
out
add
or
outsb
mov
fisttps
iret
in
cs
inc
pop
xchg
add
aad
pop
sbb
push
or
xchg
cli
orl
xor
mov
inc
sub
test
or
dec
jecxz
clc
xchg
stc
in
stos
push
cmovle
mov
sub
movsb
or
iret
sub
inc
mov
in
add
mov
inc
iret
push
mov
aas
imul
mov
mov
ja
shrl
jecxz
jmp
lret
sbb
les
rep
xorb
mov
outsl
rol
sbb
inc
mov
lock
addr16
push
test
cmp
or
inc
paddq
loopne
rcrl
stc
mov
mull
cwtl
andl
iret
daa
inc
int3
fistps
outsl
pop
add
call
lods
scas
push
into
sub
xchg
and
xchg
scas
sub
pop
pop
push
call
icebp
push
outsl
push
hlt
xchg
cmp
dec
adc
add
sbb
sbb
dec
sahf
xor
ljmp
ror
rcrb
cmp
inc
cmp
lret
push
addb
cmpsl
out
aas
sahf
push
aas
push
mov
or
cmp
stos
jle
push
cmp
aad
jo
sbb
or
adcl
pop
jmp
push
jp
movsl
jmp
mov
mov
sub
xchg
test
jmp
in
shl
cmp
push
aaa
pop
mov
andb
xor
jmp
cmpsb
ficoms
push
std
jo
dec
in
mov
cs
dec
xchg
hlt
mov
adc
fwait
dec
pop
rcrb
aas
cmp
push
gs
scas
adc
mov
jns
xor
adc
push
mov
add
stos
inc
enter
jmp
in
push
mov
pop
popa
idivl
pop
jle
mov
data16
inc
push
adc
outsl
xchg
sbb
inc
fidivs
fldenv
or
repnz
sub
int3
pop
addr16
push
pop
pop
cmp
jne
sub
sub
sar
int3
mov
xchg
loop
add
sbb
aam
cltd
out
test
scas
int3
arpl
mov
fstpl
out
test
out
cld
cmp
mov
std
cli
jmp
mov
insb
cmp
pop
mov
lret
mov
movsb
jp
lods
cmp
xchg
mov
jb
dec
xchg
call
lea
cmp
out
mov
in
out
sbb
popl
jne
out
or
inc
sub
popa
loope
xlat
rol
aas
and
lock
enter
or
call
or
stos
mov
cmc
push
and
test
mov
mov
or
jbe
and
adc
hlt
adc
push
and
or
ja
mov
mov
xlat
xor
mov
mull
adc
sbb
mov
lea
push
jne
xchg
fld
setl
push
mov
sub
jnp
fs
or
jbe
ret
mov
pop
or
pop
loope
pop
aam
mov
inc
cmpsb
lcall
mov
add
mov
push
jecxz
add
dec
movsl
dec
sub
fisubrl
aaa
fs
adc
and
decl
inc
loope
inc
cmc
mov
cwtl
jecxz
mov
mov
in
sbb
xchg
dec
or
sub
mov
addr16
out
mov
pop
imul
fstps
mov
popf
xor
cmpsb
aam
fdivrs
shrl
adc
pop
lret
in
mov
xchg
das
js
insb
mov
punpckhwd
dec
dec
data16
cmpsb
les
jo
add
adc
fwait
stos
je
mov
hlt
ljmp
mov
subl
sub
xchg
cli
lret
mov
shlb
pop
fbstp
jmp
iret
sbbb
lea
sub
in
repz
ja
adc
pop
int
test
sbb
shll
pop
add
pop
ds
or
fmul
xor
dec
inc
stos
inc
adcb
dec
cs
lods
aas
clc
jp
sbb
ret
ret
filds
mov
and
addr16
sub
xchg
sub
pop
inc
push
sbb
stc
jb
loopne
push
pop
mov
pusha
insb
cmp
xor
push
pop
popa
mov
xchg
in
mov
jb
push
js
sub
push
or
fcmovne
arpl
stc
xchg
xor
int
jmp
mov
lret
in
sub
xchg
out
pushf
xor
adc
and
sub
push
cli
or
and
jg
pop
addr16
sbb
ret
cmp
insb
sbb
insb
outsl
jmp
es
push
into
data16
sahf
pop
stc
popl
test
loopne
leave
push
call
test
outsb
push
fisubrs
loopne
xor
sbb
xlat
lea
bound
in
dec
dec
repnz
daa
sub
clc
or
leave
jb
aam
aam
or
mov
cmp
fisubrs
xchg
push
ret
pop
push
xor
loopne
dec
or
ret
inc
sbb
scas
adc
ss
sub
in
push
inc
dec
test
jecxz
imul
mov
imul
adc
mov
es
sti
shlb
inc
fistpl
fcoms
pusha
cmp
imul
daa
xor
adcb
inc
mov
arpl
and
dec
inc
sti
fwait
inc
cmp
adc
pop
cli
or
cmp
xchg
mov
jne
imul
das
mov
movsb
mov
or
or
cmpl
or
mov
jnp
popf
stos
mov
push
sti
sbb
das
fs
or
std
cs
movsb
pop
lahf
mov
fidivl
ja
jg
jne
sub
mov
pop
or
sti
cltd
cmpb
add
mov
in
and
insb
sarb
push
int
jmp
mov
bswap
arpl
and
sub
sub
imul
arpl
jo
imul
or
or
icebp
cmp
lods
pushf
ds
dec
stc
icebp
adc
cmp
sti
data16
lds
mov
sti
dec
loope
lret
xor
push
ss
aad
movl
daa
push
in
pop
call
inc
call
inc
xchg
out
cmp
popl
aad
lret
cwtl
loopne
push
bound
in
bswap
cmpsb
mov
pop
xor
add
aaa
mov
mov
cltd
insb
lret
lods
sar
roll
shl
andl
fdivp
lods
jle
adc
les
and
int3
mov
out
arpl
leave
and
test
and
sub
mov
sbb
mov
lret
pusha
inc
mov
pop
aam
jns
mov
mov
jns
adcb
aam
mov
dec
loop
push
sub
subl
popa
pop
dec
xchg
test
mov
ret
push
jecxz
ja
xchg
add
clc
inc
fadd
inc
scas
xchg
cld
mov
repnz
leave
cmp
push
push
jo
jno
cmp
mov
dec
out
mov
dec
push
aam
cmp
push
cmpsl
cltd
mov
das
push
push
lahf
loope
sub
daa
mov
push
jl
jnp
xchg
mov
push
icebp
fistpl
adc
cli
out
mov
jecxz
or
loopne
into
cltd
xchg
daa
dec
insb
mov
outsb
imul
adcl
mov
in
lds
xor
sub
xchg
fwait
into
gs
sbb
ret
pop
jne
or
pop
icebp
ds
pushf
and
pop
js
add
add
mov
dec
ljmp
push
or
fsubs
dec
pop
jnp
or
aam
xor
adc
out
repnz
dec
andl
xchg
das
loop
andb
es
xor
adc
mov
popa
jbe
aaa
into
fwait
xchg
sbb
push
mov
frstor
subl
or
clc
lds
sarl
data16
sbb
or
fistl
xchg
lret
add
icebp
mov
pop
test
sub
cmp
sub
push
xor
or
push
stc
pop
aaa
scas
push
cli
xor
out
int
xchg
shlb
jnp
aaa
push
jae
roll
push
pop
decl
mov
iret
lret
and
jae
cltd
xor
sbb
jl
mov
pop
fs
cli
fsub
mov
mov
dec
sti
xchg
jp
jbe
shrl
inc
fucomi
js
lcall
clc
xchg
lods
mov
test
shlb
fsubs
jb
and
push
aam
sti
mov
imul
push
inc
rclb
jmp
xorb
mov
inc
je
push
cmpsb
arpl
sbb
inc
fstl
loope
or
dec
int3
pop
jp
xchg
jno
pop
jae
or
rcrb
sub
xchg
jp
out
dec
in
xchg
stc
nop
lds
sub
sahf
pop
ljmp
push
test
lret
xor
adc
jmp
lahf
sbb
lods
push
repnz
insb
inc
inc
adc
cs
mov
xchg
sub
pop
rol
inc
jmp
out
xchg
adc
fnstsw
dec
bound
loop
and
iret
clc
jge
mov
xchg
dec
loop
dec
xchg
xchg
lcall
aaa
lock
xchg
imul
pop
mov
nop
aam
in
push
lret
lret
int3
pop
testb
mov
mov
es
xor
mov
fnsave
out
xchg
adc
dec
in
adc
in
out
test
ss
aaa
mov
fld
aam
outsb
push
out
enter
dec
xchg
ror
repnz
sbb
mull
loopne
and
hlt
cmp
fcoms
repnz
jge
pop
mov
xor
adc
dec
test
mov
dec
pop
mov
xor
xchg
or
mov
jge
out
pushf
cli
mov
rcr
xchg
inc
cmp
ljmp
movsl
lret
bound
mov
fs
mov
imul
jl
add
movsl
jp
ret
outsl
dec
movsl
js
pusha
outsb
hlt
popa
mov
mov
mov
int
xor
or
sub
stos
push
out
fldt
ja
cwtl
jno
sbb
or
shlb
fsts
bound
mov
data16
lods
ljmp
mov
fwait
sti
jbe
dec
rcr
bound
add
fdivl
jecxz
cmpsb
pusha
add
sub
andl
cmp
in
sub
pop
repz
cmp
mov
movlps
inc
je
push
mov
push
fisubrs
add
cwtl
loope
mov
imul
jmp
cld
jnp
nop
scas
mov
cmpsl
push
rcrl
and
jb
mov
std
movsb
bound
adc
sbbl
mov
mov
out
push
loopne
rclb
jae
jecxz
imul
pop
add
imul
mov
cli
std
push
xchg
inc
mov
dec
enter
xchg
xor
jae
and
fidivs
cmp
push
lret
mov
popf
sbbb
fidivrs
jle
cmpsb
pusha
fidivrl
push
mov
xlat
ljmp
push
xlat
mov
popf
xor
lds
cli
movsb
ds
cltd
mov
stc
bound
xlat
cmp
int
adc
mov
mov
sbb
or
test
jmp
and
daa
sub
push
jno
inc
pushf
mov
pop
lcall
in
stos
cmp
shll
jmp
mov
or
sbbl
cmpsl
dec
movsb
lds
mov
xchg
mov
js
lret
andb
adc
mov
pop
or
outsl
lcall
push
imul
cltd
je
mov
cmp
push
mov
mov
ficoms
loop
pop
imul
or
dec
mov
mov
lahf
outsl
sub
repz
and
mov
pop
pop
data16
fisubrs
xchg
mov
fcomi
pop
sarb
xor
pop
repnz
stc
jecxz
dec
mov
pop
ljmp
mov
inc
cwtl
jae
jnp
mov
mov
imul
xor
xchg
enter
push
mov
int
push
rcrb
and
test
cmpxchg
test
insl
out
hlt
xchg
mov
inc
ret
test
lcall
push
or
push
dec
nop
sub
ret
out
jns
mov
loopne
sbb
test
and
outsb
add
rorl
lea
ljmp
fists
loope
push
aaa
and
push
xchg
inc
pop
lret
iret
dec
filds
in
sub
cli
lea
push
and
add
std
or
lahf
jg
in
inc
das
xor
jno
add
das
test
sub
mov
mov
push
push
sub
mov
add
pop
ret
sbb
fs
pop
sub
mov
test
pop
movsb
jb
jp
ficoml
cmp
lock
clc
out
sbb
fcoml
aas
xchg
pusha
and
mov
and
rcl
hlt
pop
adc
rcrl
pop
inc
mov
cmp
iret
fistpll
pop
lret
sahf
imul
aaa
aas
aam
iret
outsb
loope
sub
aam
mov
cmp
pop
cmc
mov
jl
xlat
test
jb
movsb
ja
xchg
test
sbb
dec
mov
xchg
aad
insb
orb
or
push
jecxz
mov
jae
dec
push
lea
std
sbb
adc
and
out
mov
adc
sarl
add
xor
ss
pop
ficoml
lret
jecxz
cwtl
rclb
lds
arpl
ds
inc
test
pop
and
push
pop
xchg
cmp
and
stc
mov
cmpsb
inc
push
fldt
push
push
or
lods
mov
out
jecxz
movsb
cltd
xor
xrelease
aas
cmp
idiv
push
pop
pushf
out
out
pop
push
pusha
and
repnz
pop
lods
add
pop
push
loopne
pop
aam
int
jns
mov
dec
jo
push
or
pop
fdivs
arpl
mov
cmp
push
or
mov
cs
mov
out
or
scas
xor
popf
jbe
xchg
outsb
jp
sarb
clc
sahf
popa
stos
xchg
shll
push
jne
xchg
push
lahf
sarb
and
aas
xchg
pop
pop
xor
cmp
add
les
and
out
daa
mov
mov
nop
inc
cmpl
cmp
outsl
lds
movsl
cli
cmpsl
std
lret
das
lds
dec
dec
cs
stos
sarl
push
loop
mov
enter
addr16
movsb
popa
popa
push
xor
adc
jnp
cmp
or
or
adc
iret
xchg
push
gs
mov
cld
cmp
popa
test
sub
sahf
sbb
push
ret
and
popfw
cld
adcb
fstps
leave
enter
cmc
loop
xor
std
data16
out
adc
loopne
cli
hlt
cwtl
lock
mov
adcl
popf
je
lcall
dec
pop
sti
shlb
std
test
lret
cld
push
inc
scas
jns
jb
push
scas
inc
xorl
mov
ror
mov
cmp
jecxz
out
es
sbb
je
and
clc
and
rorb
setle
jge
fs
xchg
dec
xlat
cmp
stos
arpl
xchg
les
cmp
sub
dec
int
inc
icebp
add
cmc
add
pop
fsubrl
push
cmp
daa
scas
out
pop
into
iret
jns
inc
ljmp
std
bnd
pop
push
adc
mov
jbe
ljmp
out
dec
push
dec
xchg
lcall
mov
lahf
or
push
scas
subb
or
sti
imul
dec
lret
xchg
mov
aaa
aam
aas
mov
icebp
push
ficoms
mov
js
or
add
fcmove
sarb
ret
pop
xchg
pop
push
mov
mov
sbb
fwait
movsb
inc
lret
movsb
push
mov
pushf
cmp
out
fwait
jb
ret
xchg
jmp
inc
cltd
sbb
lret
sub
adc
adc
mov
jg
loope,pt
sbb
mov
xor
mov
in
mov
dec
fwait
and
insb
adc
scas
jo
add
inc
pop
adc
addl
dec
add
daa
int3
addr16
in
mov
aas
imul
in
cmovs
mov
data16
adcb
nop
push
lcall
lds
jnp
push
and
jmp
bound
fcompl
push
cwtl
push
jmp
adc
push
fdivrl
or
stos
cmpsl
sbb
sub
shrb
icebp
adc
fadd
cwtl
out
int3
test
repz
callw
cwtl
cltd
or
rcll
mov
and
test
xlat
adc
mov
in
rol
mov
pop
js
cmp
int3
fwait
shl
dec
or
adc
jmp
jno
cmp
pop
jl
mov
sub
insb
std
jo
jne
insl
cs
loopne
pop
shlb
in
cmpsb
jns
negb
push
adc
mov
sbb
pusha
outsb
aaa
sbb
jmp
fnstcw
push
test
in
pop
aas
movl
sub
lcall
daa
jbe
daa
lcall
or
fcoms
sub
pusha
mov
cwtl
movsb
inc
hlt
mov
dec
inc
out
rorb
xor
dec
xchg
mov
lret
add
mov
outsb
mov
fisubs
pop
inc
sub
dec
ljmp
mov
mov
bound
ss
ror
pop
repnz
jmp
add
jns
imul
test
add
pusha
jae
lcall
adc
fsubs
jp
cmc
shrb
aad
sub
push
das
lods
jo
stos
or
xchg
cmpsb
inc
lea
mov
xchg
into
pop
sbb
jmp
and
fiaddl
xchg
sub
jp
jecxz
sarl
adc
int3
jle
sub
rcrl
pop
dec
mov
in
mov
jge
pop
mov
fisubrl
dec
ret
int
aad
add
pop
mov
mov
mov
ja
fbld
mov
test
ret
inc
sbb
imul
mov
out
pop
and
mov
inc
adc
jp
mov
into
mov
sbb
jo
sarb
push
mov
mov
dec
das
mov
jge
bound
cmp
movsl
dec
ss
sbb
xchg
sub
test
addl
in
ja
lret
xor
out
test
lret
add
lds
enter
iret
sti
and
xchg
add
add
inc
call
es
xor
mov
xchg
aam
pop
hlt
jle
inc
fucom
bound
xchg
movsl
fsubrs
pusha
xor
and
cld
cmp
sub
dec
pop
mov
sarb
add
aas
outsb
stc
cwtl
fnsave
jmp
iret
cmpsb
jl
xchg
insl
pop
or
mov
test
pop
aas
loop
orb
insb
ret
xchg
sub
push
mov
cld
mov
fs
int3
and
mov
jl
pop
jbe
lahf
cs
pop
cs
loope
lds
rcrl
xor
mov
mov
adc
test
icebp
sarb
adc
inc
jo
xchg
dec
pop
mov
out
in
push
or
lods
loopne
lods
cmp
push
mov
aas
add
push
insb
pop
mov
sbb
jl
pop
push
cmp
out
cmp
out
or
out
sbb
pop
adc
cmp
lahf
dec
fsubs
bound
ds
push
insl
xchg
push
and
loope
xchg
inc
in
add
xchg
fbstp
sub
mov
fcmovnbe
aam
test
mov
lcall
xor
dec
mov
aam
imul
nop
xor
clc
cmpsl
push
fsts
stos
or
inc
fcmovnu
jge
mov
test
fdivrs
xlat
dec
pop
lock
cmp
iret
xchg
adc
aas
add
sbb
jne
hlt
iret
jno
stc
test
out
cwtl
das
cmpsb
push
mov
fwait
enter
add
xchg
sbb
shl
xchg
daa
sub
scas
stos
jno
lret
lret
jecxz
xor
cmp
mov
rcr
imul
movsl
nop
shll
dec
xchg
cmp
jge
es
jg
out
xor
ret
dec
sub
mov
push
aas
pop
out
inc
sbb
or
cmp
xor
mov
dec
ljmp
cmp
sub
inc
and
popa
cmp
mov
fldcw
rcrb
mov
ja
popf
dec
jb
pop
pop
inc
in
shll
daa
fs
add
pop
call
mov
pop
and
aad
pushf
push
xchg
mov
xlat
lea
arpl
sub
xchg
in
lods
cwtl
mov
mov
loope
add
inc
push
iret
mov
imul
push
out
xlat
mov
sub
xchg
dec
cltd
pop
mulb
sahf
int
je
arpl
inc
pushf
ret
imul
rcrl
jo
jp
mov
stos
repnz
fsub
frstor
rol
mov
lock
push
into
punpcklwd
das
sbb
mov
add
loopne
jne
insl
test
inc
sbb
insb
push
outsl
pop
iret
sbb
cmp
mov
scas
sub
std
jl
adc
adcb
pop
shll
fsubrp
fwait
js
jp
mov
shll
jmp
and
cwtl
aad
cwtl
sub
lods
test
aaa
push
dec
or
pop
mov
fwait
lods
add
outsl
rcrl
aas
cmp
pop
push
or
dec
inc
add
mov
test
into
or
in
mov
addb
mov
mov
xor
into
rcl
push
jmp
aam
jo
cmc
cmpsb
and
out
es
rcrl
push
rorl
inc
ret
ja
daa
xchg
daa
push
pop
push
loop
pop
rcrb
ss
mov
out
lcall
stos
addl
cld
inc
sub
push
addr16
dec
in
sti
xorb
sbb
fisttps
js
clc
cwtl
outsb
jle
inc
testl
adc
jne
test
xchg
sti
dec
dec
cmp
ljmp
outsl
data16
iret
fcomi
scas
push
out
lret
insb
loop
jne
loopne
out
push
clc
sarl
add
jno
jno
test
test
adc
push
inc
adc
adc
call
mov
sub
aas
arpl
jbe
in
test
lret
clc
mov
sbb
jle
repz
in
stos
inc
push
in
sti
xchg
xor
jmp
lahf
push
insl
add
aas
in
sub
or
inc
loopne
mov
aas
mov
xchg
pop
arpl
dec
mov
fstpl
xchg
dec
or
dec
pusha
sbb
cmpsb
lods
mov
adc
xor
bound
mov
add
push
push
test
mov
push
xchg
xor
add
and
adc
or
aad
add
inc
inc
sahf
mov
sbb
adc
jae
xchg
sub
cmc
mov
loopne
mov
xchg
sbbl
sbb
mov
sub
jle
jo
imul
mov
mulb
dec
mov
popa
or
jnp
lds
call
repnz
das
inc
cltd
je,pn
pop
mov
xchg
sub
mov
test
popf
add
fucom
mov
rcrb
or
sub
or
adc
inc
mov
cmp
dec
loope
stos
ret
insb
push
pop
sub
xchg
in
inc
fadd
ja
sbb
insl
scas
aaa
int
sub
xchg
pop
cmp
sub
mov
push
rcl
cmp
pop
push
pop
fisttpl
ja
ja
not
shl
popa
mov
in
xlat
mov
push
insl
and
hlt
adc
inc
jecxz
inc
faddl
stos
and
xchg
das
inc
jb
push
imul
cld
dec
inc
and
pop
int3
sub
xchg
insb
lret
pushf
mov
subb
cltd
sti
mov
or
and
jg
lods
rolb
adc
or
out
mov
popf
xor
mov
mov
xchg
and
xor
cmpsb
in
push
sub
orb
js
int3
push
aad
popl
pop
lods
nop
rcr
pop
scas
mov
mov
or
mov
xchg
call
sub
cmp
call
jg
filds
xchg
push
mov
add
imul
inc
adc
pop
adc
ret
mov
xchg
cmc
ficoml
mov
jns
inc
divl
jno
jmp
lock
sti
lods
js
das
or
cltd
lods
loopne
enter
repz
cmpb
icebp
mov
out
aaa
push
lcall
lock
stc
je
lahf
testl
sbb
and
mov
sbb
adc
int3
adc
cmpsl
out
addl
das
ljmp
jle
jb
outsb
out
cmp
clc
lahf
cmp
aaa
xchg
jge
aam
lock
mov
dec
pop
jno
inc
shrl
movsl
and
and
xchg
imul
adc
pop
scas
fmull
lods
daa
mov
jge
add
insb
js
xchg
lret
adc
leave
pop
mov
mov
pop
cmp
shlb
cmp
addl
xchg
inc
popf
xchg
xor
inc
rorl
sahf
sub
push
sub
dec
outsl
push
hlt
inc
test
data16
into
inc
xchg
daa
xchg
dec
mov
loop
inc
cli
gs
rcl
xchg
sarl
ret
je
das
cmpsb
xchg
push
adc
int3
and
xor
sbb
xchg
cmc
xlat
lahf
and
mov
add
les
cld
ret
mov
mov
pop
ss
mov
fldl
adc
fwait
mov
sub
cmpsb
jbe
xor
das
js
clc
sub
jmp
jge
cmpl
pop
out
stc
mov
dec
dec
leave
xor
gs
repnz
inc
mov
or
pop
mov
mov
add
jmp
cmp
and
mov
cmpsl
jg
xor
stos
add
scas
cmp
ret
or
xlat
iret
xchg
adc
mov
arpl
jmp
pop
imul
xchg
jle
test
sub
int
cmp
mov
and
push
and
imul
sbb
mov
out
sbb
loope
cmp
add
push
dec
jl
inc
push
pop
loopne
mov
subb
xchg
daa
daa
imul
dec
mov
repnz
mov
idivb
pop
aad
out
sti
imul
mov
out
cmp
imul
out
fisttpll
adc
fwait
fwait
xor
lea
mov
mov
cltd
xchg
push
js
mov
adc
xchg
das
pop
xlat
test
clc
push
pop
testb
int
arpl
adc
lods
test
jno
pop
inc
fs
imul
add
divl
xchg
lods
mov
roll
pop
push
out
arpl
movsl
call
cs
sbb
mov
je
loopw
out
aad
stos
ds
ja
xchg
push
or
sarl
or
push
xchg
mov
push
jecxz
jne
orl
push
pusha
int
out
movsl
pop
pushf
int
dec
pop
mov
cmp
xor
popf
pop
aad
in
insb
jge
push
inc
leave
pop
in
add
or
mov
punpcklbw
pop
xchg
fnstsw
adc
cmp
mov
outsb
pushf
xlat
mov
pop
lods
dec
pop
filds
sarl
les
std
xchg
push
xor
out
das
rcrl
int
inc
xchg
jbe
data16
pusha
repnz
and
pop
fimuls
andl
mov
dec
pop
mov
rcrb
cmp
xchg
std
xchg
mov
clc
imul
fnsave
jmp
cmp
mov
pop
jns
pushf
test
fwait
jg
xchg
lock
dec
lock
ljmp
pop
out
push
inc
jmp
js
into
cmp
add
xchg
mov
pop
sub
push
adc
cs
fldenv
mov
sbb
stos
inc
mov
addr16
xlat
pop
pushf
int
mov
pop
jmp
adc
mov
and
fdiv
jnp
arpl
int
mov
sbb
pop
popa
leave
push
pop
and
in
ficomps
je
dec
aas
test
addr16
cltd
mov
mov
mov
ret
arpl
jnp
out
enter
cmp
add
dec
mov
add
cmp
dec
or
in
cmp
mov
pop
je
cmp
cmp
add
je
out
dec
xlat
fidivrl
cmpsb
dec
sub
rcr
push
ret
mov
and
push
ss
shll
aad
push
stc
mov
les
xor
mov
scas
cs
outsb
sub
movsl
int
xchg
arpl
xchg
mov
jl
andl
push
push
lods
pop
lret
bound
out
jb
adc
out
test
xor
test
xchg
and
inc
mov
outsl
xchg
mov
movsb
and
bound
pop
jmp
add
push
cmp
mov
push
inc
fs
sub
iret
cmpsl
xorb
mov
subb
mov
sbb
mov
outsl
cli
xchg
dec
lret
and
cmp
fdivrs
scas
insl
cli
shl
imul
inc
cmp
or
jae
pop
push
pop
adc
andl
lret
cmp
dec
and
lock
aas
movsl
sbb
inc
mov
mov
stc
incb
mov
stos
xor
ljmp
push
sub
sbb
fildll
out
pop
rcll
nop
mov
and
rcr
xor
jne
test
test
inc
imul
call
add
cltd
das
pop
push
mov
xchg
stc
arpl
jae
jno
cs
adc
sub
xchg
lcall
lds
adc
cwtl
das
inc
push
shll
dec
and
ret
aaa
icebp
or
dec
sub
lret
int
mov
lret
add
mov
mov
sbb
pop
stos
test
clc
inc
dec
push
cwtl
inc
sub
or
test
adc
jmp
rsm
sbb
push
loope
fdivrp
pop
xor
xchg
fwait
lock
fdivrs
or
jns
fiaddl
xabort
sahf
cmp
sbb
into
dec
pop
outsb
jp
push
push
in
repz
lods
or
push
out
mov
icebp
mov
push
add
xor
jp
xlat
sub
lea
lret
cmc
nop
pop
fxam
rol
shlb
enter
xor
pop
out
mov
jmp
add
stos
xchg
stos
fmull
stc
hlt
add
sbb
iret
iret
fucomi
mov
pop
mov
sbb
inc
pop
mov
adc
es
out
lds
arpl
fwait
scas
imul
out
orb
andb
enter
cmp
outsb
nop
mov
mov
insb
divl
mov
mov
or
jns
or
cltd
dec
push
cli
dec
mov
mov
das
push
add
fsubs
lret
jecxz
mov
cld
outsl
and
mov
and
pop
inc
leave
rcl
fidivrs
push
sub
in
std
mov
push
push
add
sbb
sub
scas
xchg
incb
sbb
mov
insl
push
ljmp
jno
add
cmp
or
cli
pop
xchg
repz
dec
clc
popl
pop
psrld
in
cmpsb
repz
insl
add
or
or
push
dec
pop
mov
inc
push
xor
popf
sub
nop
fidivs
xchg
xor
or
xchg
movsl
dec
out
ret
dec
sbb
std
in
test
pop
pop
mov
lcall
pop
sti
stc
lods
adc
pop
xor
jmp
mov
imul
mov
xchg
sub
fcoms
sub
jno
jle
out
sub
push
sbb
xor
and
test
pop
cwtl
sbb
call
fisttps
stos
add
mov
rorl
stos
dec
fimull
pop
pop
outsl
sti
movsl
and
cmp
and
jae
inc
lcall
lret
jno
ljmp
lock
test
sub
pop
cld
cmpsl
add
jl
push
lods
xchg
sbbb
pop
sub
aam
ljmp
lahf
mov
jo
cwtl
aam
inc
ljmp
jmp
add
xor
cmc
mov
pop
lret
aam
pop
cmp
lods
lret
pop
dec
imul
mov
imul
sbb
mov
fbstp
adc
xchg
sub
or
push
cmp
rcr
cmp
mov
mov
mov
push
push
loop
jne
sbb
push
and
out
test
daa
stos
or
lahf
int3
mov
out
jp
test
dec
loop
fcompl
jnp
mov
int
push
mov
xchg
mov
pop
cmc
out
add
cmp
mov
push
inc
mov
pop
mov
out
outsb
in
pop
movsb
lret
fucomp
push
mov
leave
insl
sahf
push
lcall
lcall
popl
insl
inc
push
imul
int
xchg
add
push
push
loop
das
mov
ror
push
cmc
mov
push
std
xchg
loop
ret
mov
leave
cwtl
xor
shll
fldcw
or
ss
jbe
push
out
pop
in
mov
sbb
or
push
andb
push
mov
loopne
dec
dec
imul
orb
icebp
push
pop
inc
aad
sub
scas
fmuls
jb
pop
int3
xor
xchg
fs
shl
adc
dec
lret
sub
repz
into
jne
add
lods
sub
xchg
into
fmul
and
nop
push
jmp
incl
testb
ja
mov
jmp
or
jmp
aad
adc
dec
icebp
jb
shll
mov
push
xchg
stos
cmpps
rclb
jno
clc
mov
pop
stc
xchg
xchg
iret
data16
inc
sbb
mov
mov
push
and
push
cmp
push
int
test
into
aam
lahf
sub
xchg
pop
mov
outsl
rep
pop
adc
and
pop
inc
push
outsb
je
fidivl
lds
test
jmp
out
fldcw
push
testb
outsb
inc
push
xor
out
cmc
out
adc
dec
inc
mov
push
orl
outsb
into
ficoml
lods
and
or
jne
fdivs
or
pop
dec
fwait
pop
cltd
fwait
shll
dec
out
jp
mov
addb
or
jecxz
mov
dec
out
fidivs
test
es
pop
push
ja
add
rcr
stos
push
daa
and
int
lret
adc
adc
jp
dec
inc
xchg
jmp
mov
mov
push
iret
or
adc
xchg
jbe
in
or
add
fwait
shlb
mov
xor
aad
bound
and
clc
mov
jecxz
xor
push
mov
sbb
movsb
jecxz
enter
mov
ljmp
sub
aam
xor
cmp
loopne
data16
pop
dec
ss
test
arpl
mov
jmp
not
mov
insb
xchg
enter
mov
xchg
fsubr
shlb
aas
pop
sub
pusha
inc
loope
pop
iret
data16
jg
cs
rcl
je
and
repnz
and
push
lcall
popf
test
dec
pop
xlat
pop
xchg
jo
aas
jne
and
lea
mov
push
jge
shlb
mov
gs
jno
out
and
sbb
cmp
aad
inc
fdivr
xchg
push
inc
cmp
jno
xor
aad
in
pop
loopne
sbb
push
fmul
xchg
ret
pop
add
ja
sub
pusha
sbb
shl
lcall
scas
hlt
test
icebp
in
jno
sahf
or
out
jmp
mov
cmp
push
push
mov
adc
push
push
pop
shr
ret
xor
in
std
xor
xchg
cmp
popf
aaa
push
iret
sbb
cmp
fcoms
pop
or
fisttps
lods
stos
fcompl
pushf
in
add
lret
sahf
dec
mov
jmp
loopne
xchg
imul
jb
repnz
dec
mov
sub
pop
sbbb
jecxz
in
push
lds
verr
and
jp
daa
aad
inc
rorl
xchg
sahf
dec
xchg
repz
mov
jne
scas
xchg
call
jmp
daa
lcall
push
or
mov
mov
or
test
xor
scas
int3
or
rcrb
jge
push
imul
pop
aad
jmp
pop
sbb
outsl
cmp
loope
es
mov
dec
add
jl
cwtl
imul
mov
movups
imul
in
add
scas
mov
shll
pusha
shll
jp
adc
inc
dec
sbb
aas
cmpsb
nop
mov
lea
adc
cmpsb
pop
test
mov
rclb
mov
icebp
jns
loop
adc
mov
mov
sbb
movb
sub
in
outsb
cmp
push
insb
popf
lahf
pop
jmp
stc
mov
push
cmpb
pushf
pop
push
or
push
mov
or
push
ljmp
call
stc
cmp
test
pop
adcb
icebp
es
pop
aaa
and
imul
or
mov
pop
repnz
sub
inc
into
jns
add
jg
out
add
or
xor
mov
or
or
xor
jne
cmp
xchg
jb
sti
and
adc
add
ret
das
or
mov
rclb
and
stos
fisubs
stos
into
das
fdivr
int3
cs
push
shlb
add
lods
cs
and
add
mov
add
dec
cmpsb
mov
pop
push
push
or
add
jnp
add
aad
adc
iret
add
sbb
cmp
sbb
scas
pop
cmp
jmp
push
rcr
loope
xchg
out
js
insb
lea
rol
or
test
aad
push
outsl
mov
mov
ret
jle
mov
in
std
fsubl
pop
mov
ss
test
inc
or
mov
cmpsb
in
in
call
push
imul
mov
pop
xlat
or
jo
mov
jmp
or
in
out
pop
jbe
mov
addr16
out
push
hlt
mov
xchg
sti
jne
cmc
fcomps
js
sbbb
jge
push
movsl
sub
xorb
aam
shlb
clc
pop
fidivl
ja
cwtl
repz
dec
stos
inc
jg
push
push
or
jae
rolb
je
inc
jbe
cld
push
fs
push
aas
dec
cltd
out
js
mov
cmc
or
arpl
loop
andl
sti
out
xchg
ror
into
andl
jle
loope
inc
xlat
sbb
jl
add
ds
stc
out
adc
loopne
aad
sub
mov
jnp
pop
mov
ss
inc
test
rcrb
addr16
xchg
std
lods
mov
jg
shlb
into
fdivs
divb
test
arpl
xor
push
pushf
cwtl
mov
hlt
dec
in
mov
xchg
or
dec
inc
push
sbb
add
pop
insb
and
mov
mov
or
in
test
push
call
and
xchg
popa
orl
push
jno
adc
adc
adc
mov
mov
cli
jne
cmp
mov
cld
hlt
mov
mov
test
filds
and
scas
inc
jg
xchg
push
cli
push
push
xchg
sbbb
sahf
outsl
out
mov
push
addr16
iret
adc
or
sbb
call
cmp
outsl
sbb
xchg
scas
inc
xchg
daa
lds
pop
adc
and
aam
jle
faddl
in
inc
lds
dec
or
testb
mov
aaa
jae
mov
pop
lret
fisubl
lret
jne
sbb
mov
sbb
xlat
and
fs
clc
xor
cmpsl
cmp
pop
idivb
loopne
inc
mov
fisttpll
or
jecxz
push
mov
add
insl
mov
push
sub
hlt
xlat
out
cmp
jae
cs
jg
sub
aas
mov
mov
or
dec
data16
or
push
cld
outsl
pop
aaa
or
inc
cmp
jg
int
push
dec
or
lcall
dec
xor
fwait
aaa
fistl
add
push
enter
or
loopne
out
pop
sub
cmp
int
ret
fiaddl
sub
sub
inc
cmc
inc
sahf
lods
jbe
int3
mov
cmp
push
icebp
test
js
ss
sti
or
xor
js
mov
jb
cltd
pop
adc
loopne
call
lea
mov
cmpsb
jmp
push
jmp
or
sahf
pusha
sbb
lock
add
mov
insl
ja
pop
or
lea
stos
mov
por
push
mov
cmpsl
jnp
sbb
mov
dec
outsb
cmp
mov
xchg
jg
fwait
notl
int
xor
cmpsb
and
adc
mov
jnp
aaa
cmpsb
jno
test
cmc
inc
cmp
inc
fistps
ret
pop
mov
fistl
push
movsl
inc
cmpsl
and
inc
mov
sti
pop
movsb
testl
mov
cmc
fs
jb
cmp
jecxz
cmp
pop
enter
hlt
xchg
and
sbb
mov
lods
mov
shl
in
push
jl
mov
fs
jne
push
leave
into
idivl
jl
mov
mov
or
jge
loope
fldenv
push
xor
xchg
mov
xor
ret
cmpsl
ds
insl
add
jge
mov
test
stos
push
shrl
add
fucom
test
fistpl
rorb
aas
cmp
je
test
pusha
jbe
xchg
das
pop
mov
inc
push
adc
xchg
inc
lock
pop
imul
add
lret
mov
adc
fisttps
xchg
mov
test
jmp
push
out
daa
cmp
insl
mov
jnp
out
addr16
xor
orb
icebp
loope
jp
adc
pop
ret
mov
xchg
add
cmp
lahf
or
dec
jecxz
or
aam
mov
insb
cmpsl
inc
loop
push
inc
xlat
addl
scas
subb
mov
adc
inc
lcall
cmp
orl
in
sub
fs
xor
and
sub
in
cld
push
push
jo
add
push
lods
and
sub
ljmp
adc
fsts
aam
ds
jmp
pop
fildll
stos
sbb
repz
xchg
adc
mov
jecxz
hlt
cltd
xor
jae
imul
jge
mov
scas
mov
mov
cld
sbbb
sbb
push
fnstcw
mov
xor
sub
mov
pushf
pop
add
pop
repz
dec
xlat
push
das
or
popa
stos
sti
jbe
or
in
mov
je
movsl
sub
mov
movsl
out
or
in
sub
xchg
pop
adc
in
std
add
bound
and
adc
cwtl
sbb
push
jecxz
mov
xor
add
push
lahf
leave
pop
or
into
data16
out
push
sti
cltd
sub
mov
inc
cli
adc
mov
add
mov
ljmp
insb
pop
leave
xchg
jmp
outsl
push
fnsave
cmp
ds
sub
out
pusha
loop
lea
sbb
xorb
cs
mov
lds
fildll
pop
mov
pop
mov
lods
cmp
cmc
push
add
mov
cltd
jae
jg
mov
int3
out
or
in
fnstcw
aad
leave
pop
fmull
out
aam
pop
outsb
data16
inc
fwait
out
sub
push
or
in
sub
sub
les
insl
fimuls
cmp
mov
pop
pop
sar
dec
sub
or
jge
xchg
pop
push
mov
xor
xchg
sub
or
popa
mov
mov
jmp
int3
leave
jbe
cmp
dec
stos
mov
je
cli
fdivl
dec
xlat
cmc
js
cli
cmp
or
and
fdivrs
int
inc
fmuls
ror
push
in
dec
fistpll
inc
stc
mov
aad
add
aam
les
jp
add
daa
push
fdivrl
insb
mov
out
cwtl
pop
call
mov
movsl
popa
clc
aas
jno
shlb
loope
push
jecxz
dec
clc
mov
mov
and
dec
popa
lret
insl
add
imul
test
adc
ret
mov
push
push
lea
and
fsubrs
inc
stos
inc
jne
add
roll
cmp
jnp
jmp
mov
or
xor
inc
fsubl
leave
arpl
cmp
mov
lds
add
mov
jecxz
and
jmp
imul
jle
loopne
nop
out
test
rorl
loopne
test
or
mov
push
push
xor
xchg
xchg
insl
jp
xchg
pop
sub
je
jnp
lds
jmp
out
inc
mov
clc
in
out
lcall
aas
out
adc
aam
add
mov
imul
jp
das
mov
or
mov
and
push
xchg
test
cmp
jo
pop
mov
mov
dec
pop
stos
pushf
cli
call
nop
jl
xchg
nop
leave
push
ret
movsb
jb
push
and
lock
repz
loop
data16
cltd
pop
jne
in
div
jecxz
jae
pop
inc
in
imulb
cmp
aas
repnz
insl
xlat
xchg
sub
ds
clc
pusha
subb
vpsrlw
faddp
adc
ja
mov
adc
adcl
test
adc
loop
stc
xchg
lods
pop
sub
or
fdivrs
mov
loopne
push
imul
dec
in
clc
test
push
lahf
mov
push
dec
pushf
jl
jno
ficoml
mov
sbb
inc
lods
nop
lock
dec
into
lret
mov
xor
dec
fidivl
fwait
rolb
aad
movsl
jl
dec
test
and
xchg
jp
addl
sbb
shl
mov
xlat
add
adc
movsl
in
fwait
cmpsl
add
inc
mov
jae
cltd
sbb
xchg
popa
cli
jne
inc
ja
jb
jl
cmpsb
nopl
push
fstl
in
aad
xlat
mov
mov
test
fcomps
fdivrl
and
fcoml
mov
subb
mov
mov
leave
int
decb
lahf
push
add
loope
insl
mov
ljmp
jbe
or
shlb
xchg
adc
int
loopne
std
ret
movsl
cmpsl
lea
add
aam
xor
fisubrl
and
pop
out
sbb
mov
pop
icebp
fdivrp
add
jne
sbb
sbb
push
inc
nop
xchg
pop
nop
daa
test
cmp
add
ret
daa
aam
pushf
dec
dec
scas
scas
ret
dec
mov
inc
out
jae
mov
es
inc
roll
xchg
inc
hlt
add
shrb
add
mov
cmpsb
push
shrl
cmp
cmp
stc
leave
test
aad
scas
and
push
popa
cmp
fwait
add
roll
cmp
insb
scas
jmp
dec
mov
pop
xchg
loop
movsb
xchg
xchg
test
add
or
mov
cmp
mov
nop
push
shr
xorl
stc
scas
xchg
or
xor
scas
sahf
arpl
and
insb
push
call
push
xchg
sub
jl
inc
in
stos
cmp
lret
fcoms
mov
push
jle
add
sub
iret
mov
test
pop
out
mov
push
sub
scas
addr16
xor
cmp
repz
aam
and
mov
cltd
add
in
mov
mov
sbb
pusha
ret
mov
int3
mov
icebp
outsl
jns
pop
xchg
arpl
mov
repz
adc
ret
cltd
shl
jmp
out
cmp
or
sbb
jl
jp
fldcw
call
adc
jl
mov
push
xchg
jle
orl
adcl
lahf
lods
addb
jmp
dec
sub
js
jle
or
push
daa
dec
dec
jmp
je
pop
xorb
mov
or
mov
addb
inc
insb
popa
scas
inc
push
pushf
nop
dec
or
sahf
and
stos
ljmp
push
mov
add
stos
loopne
std
jecxz
adc
ret
cmp
inc
lds
dec
inc
loopne
add
pop
jne
inc
imul
loopne
adc
cmc
inc
mov
fld
andl
mov
jo
outsb
xchg
andl
jnp
out
leave
flds
or
xor
sahf
cmc
sub
movsb
cmp
xor
jl
cs
stc
leave
push
repnz
daa
pop
clc
insb
leave
add
xchg
dec
xor
xorl
fs
cwtl
in
aam
sbb
push
rclb
add
xor
ss
and
jno
cld
mov
inc
je
insb
push
in
std
xor
mov
and
sti
mov
ficoms
leave
push
jmp
jge
sbb
aam
pop
arpl
pop
jo
sti
sbb
inc
push
sbb
lret
rol
xchg
enter
je
clc
int
pop
imul
iret
scas
inc
shr
dec
jmp
loop
xor
in
push
repz
test
pop
pushf
mov
jecxz
pop
pop
pop
movsl
cmp
into
sarl
pusha
push
adc
xchg
jmp
xchg
fucomp
inc
mov
loope
fdivs
es
push
pop
mov
xor
and
xor
mov
xchg
lods
out
repz
ret
hlt
mov
xchg
xchg
ret
pop
mov
sbb
mov
and
in
pop
rcl
insl
pop
arpl
adc
loopne
sub
xor
arpl
lret
pop
or
mov
or
das
cmp
xor
fists
or
mov
daa
lea
inc
push
jns
cmpsb
rol
das
dec
adc
cmpsb
mov
ucomiss
mov
xor
adc
lea
cmp
pushf
push
leave
sbb
jbe
sbb
and
inc
and
push
sti
xchg
addl
mov
dec
mov
push
out
inc
mov
cwtl
mov
xor
xor
xor
mov
push
push
repz
rorl
in
aam
dec
xor
lea
mov
pop
and
ret
test
ror
sub
jp
cmp
imul
icebp
movsl
testl
pop
ds
or
add
lahf
dec
aaa
test
mov
incb
pop
xchg
xchg
enter
mov
xlat
pop
out
mov
push
sbb
test
faddl
repz
and
leave
ljmp
cmpsb
loop
fimuls
cli
inc
sbb
mov
lahf
ss
mov
sahf
aam
mov
dec
clc
inc
mov
sbb
sbb
xor
push
sub
push
pop
scas
or
lret
push
lret
movsb
mov
mov
lods
add
loop
add
sub
push
fisubs
fs
imulb
push
mov
js
adc
flds
into
mov
jmp
fisubs
pop
enter
jbe
inc
mov
insl
nop
mov
clc
fdivr
inc
xchg
xchg
push
xorb
jnp
xorl
or
add
sti
out
into
sub
cltd
xor
mov
dec
testl
add
xchg
push
jmp
ficoml
xchg
test
mulb
dec
xchg
xor
add
sub
mov
cltd
call
fdivrl
cmp
iret
fisubs
sahf
push
pushf
sbb
add
dec
pop
popf
add
fwait
jo
in
fdivrs
cmpl
test
inc
sbb
adc
clc
sarb
inc
pop
out
cmp
and
dec
rcl
cmp
mov
or
loope
inc
add
xchg
jle
mov
pop
fcomps
clc
push
ds
loop
popf
aad
cmp
xor
pop
jp
lds
or
out
xchg
sahf
cmp
daa
fs
loopne
mov
or
sbb
mul
xchg
and
mov
scas
and
and
cld
push
mov
xchg
cmp
push
notb
cmp
insl
das
xor
pop
pop
jmp
mov
call
mov
sbb
ret
inc
loop
cli
push
mov
js
loop
xor
outsb
add
mov
lret
into
or
cmove
inc
mov
jmp
stc
pop
pop
pusha
and
inc
cmp
movsl
out
xor
push
addr16
ret
dec
fxtract
into
fimuls
xlat
pop
pusha
cmp
push
notl
xor
pop
mov
sub
xor
hlt
xor
mov
add
pushl
sarb
mov
popf
cmp
fs
xchg
xchg
mov
cli
pop
fistps
cmpsl
das
mov
je
or
sahf
jo
sbb
xlat
push
cli
jae
movsl
outsl
sti
jbe
dec
mov
inc
mov
mov
popa
fcomip
lcall
popa
jmp
sarb
mov
inc
fsubr
imulb
movsl
or
rorl
cltd
and
inc
jmp
addr16
jle
jb
test
or
stos
and
xchg
cwtl
cmp
in
fiaddl
leave
dec
in
faddl
insb
sub
out
dec
mov
jb
push
inc
xchg
insb
out
jbe
pop
jg
inc
icebp
mov
mov
movb
dec
push
mov
cmpsl
icebp
pop
les
and
fsub
negl
adc
popf
sub
mov
xor
loope
es
cmp
stc
loopne
or
sti
add
cltd
xchg
jecxz
sahf
cmc
push
fmuls
or
insl
mov
add
sub
call
xchg
lret
push
push
imul
mov
sbb
cmp
lcall
cmpsl
pop
pop
mov
jns
emms
sub
pop
jae
xor
push
fildl
inc
loopne
loope
jmp
in
fmull
mov
fsub
mov
outsl
and
lods
pop
rorl
xchg
sub
enter
rorb
push
sub
fucomi
subb
loope
cmpsb
and
xor
push
mov
movsb
cmp
push
dec
ret
xchg
outsb
daa
lock
xchg
cmp
test
xor
push
mov
insl
xchg
mov
xor
movsl
xchg
dec
jmp
mov
mov
or
mov
aam
mov
out
dec
cmp
rorb
add
jge
cltd
pop
mov
nop
in
out
xor
outsb
in
cmp
mov
or
out
xchg
repz
lea
pop
cmpsl
fucomp
test
test
call
sub
jae
and
mov
cltd
sub
sbb
fdivrs
test
aad
dec
out
das
cli
shrl
je
mov
pop
jnp
jle
mov
xor
mov
xchg
jno
jns
jns
cmp
shll
sar
mov
ret
pop
fimuls
insl
or
mov
aad
mov
jge
repnz
std
lods
pop
dec
jp
jge
mov
ljmp
push
test
in
lret
out
das
sbb
arpl
jle
call
cmp
mov
outsb
outsl
push
es
or
testb
mov
xchg
arpl
or
cmp
jnp
mov
insl
repnz
mov
stc
test
xchg
and
pop
cmp
inc
in
mov
lods
sbb
pop
lods
js
xchg
add
jo
push
add
imul
pop
fidivl
xor
inc
loop
push
mov
mov
into
mov
lahf
loope
jmp
imul
jl
xorl
fmuls
mov
test
push
push
lock
jbe
outsb
add
xchg
dec
jae
inc
cmp
repz
arpl
lahf
jbe
lcall
inc
cmp
ds
pop
mov
and
arpl
pushf
sbb
stos
fs
add
mov
fsubrs
shrb
dec
sbb
popf
ret
pusha
div
jecxz
filds
xchg
push
pop
mov
xor
pushf
dec
out
jmp
insl
ja
dec
lahf
mul
sbb
nop
sbb
cmp
cltd
jmp
lea
sbb
popf
cmp
jle
xorb
push
scas
sbb
mov
xchg
out
aaa
int
inc
add
pushf
fsts
int3
xor
mov
pop
repz
xchg
jo
insl
aam
ds
pop
jne
add
fcomps
stos
daa
push
pop
lods
inc
insl
add
mov
and
add
pop
sbb
cmpsb
popa
cwtl
and
mov
mov
cwtl
push
aas
sbb
xor
push
sub
and
or
add
inc
js
adc
or
xor
lret
or
lds
test
or
fs
mov
popa
lret
insl
je
adc
mov
inc
jns
inc
loopne
in
lods
sbb
sbb
jbe
adc
pop
cmpsl
push
insl
push
and
cld
iret
aas
push
mov
lea
jmp
loop
dec
call
add
adc
and
lret
fwait
xor
rclb
push
mov
sbb
mov
sbb
add
jno
stos
jmp
adc
jp
mov
mov
or
lods
lahf
xchg
mov
movsb
fs
push
add
outsl
jg
inc
test
ret
lock
pop
mov
dec
out
add
bound
inc
scas
push
in
pop
jno
stos
sti
popf
xchg
mov
fldcw
mov
je
jns
mov
ja
sti
in
adc
insb
dec
shll
or
lret
xchg
jb
mov
inc
lods
mov
push
out
cmp
rcr
movsb
dec
arpl
pop
sbb
popl
repnz
loopne
and
mov
loopne
ror
fcoms
mov
pop
push
ja
pop
stc
adc
mov
sahf
sbb
jmp
jns
pop
mov
out
je
xchg
mov
and
in
cmp
xchg
add
cmc
ss
pop
repz
mov
push
stos
pushl
xor
mov
frstor
int
inc
lods
sub
scas
aas
imul
pop
adc
mov
stc
adc
inc
and
xchg
loopne
imul
cmpsb
push
pusha
add
push
jbe
test
sbb
mov
jmp
in
out
notl
in
sbb
and
add
pop
aaa
stos
push
sahf
push
sbb
adc
adc
imul
pop
jns
jb
push
push
fstp
push
fildl
dec
jmp
jo
lock
mov
mov
sub
cmpsb
pusha
jmp
push
daa
and
aam
mov
out
inc
cmpsl
adc
mov
sbb
test
sbb
push
jmp
mov
or
pusha
dec
add
add
or
test
mov
jl
or
test
insb
mov
inc
in
pop
mov
jg,pt
inc
push
bound
mov
jno
sti
mov
adc
mov
dec
jno
cmp
fadds
cmpb
mov
push
adc
dec
lea
hlt
lea
mov
lods
mov
mov
ror
inc
mov
jne
fsubrp
adc
mov
cmpsb
js,pt
add
lods
mov
push
cmp
aad
in
add
and
and
pop
stos
test
repz
push
lea
push
jnp
adc
flds
addb
mov
pop
push
adc
inc
aaa
sbb
jmp
imul
lods
scas
inc
ffreep
loope
cmp
into
fidivl
push
pop
fsubs
in
rcl
lret
pop
sub
dec
add
in
imul
shll
push
rorl
cmp
mov
loop
in
or
pop
in
es
pop
aam
loop
lcall
or
in
ja
addl
and
push
lret
jecxz
rclb
das
add
push
dec
inc
repnz
out
inc
sbb
mov
push
test
pop
or
add
mov
fidivrs
sub
inc
mov
adc
mov
stos
cli
pop
sti
sub
and
dec
add
jp
daa
cli
pop
xchg
fsubs
imul
fucom
adc
xchg
sbb
pop
sub
dec
and
jo
mov
int
in
aaa
outsl
jecxz
jle
js
or
lcall
imul
adc
movsb
cmp
adc
mov
mov
cmpsl
nop
and
mov
pop
iret
xchg
dec
out
mov
repnz
int3
xlat
inc
fdivrl
ds
popf
arpl
into
mov
and
cmp
ret
pop
leave
fnstcw
ficomps
insl
fsubs
push
fstl
mov
push
sub
neg
fmull
pop
clc
in
push
sub
push
pop
lock
pusha
idivl
add
mov
pop
jne
mov
cmp
xchg
dec
test
out
add
icebp
add
mov
ljmp
dec
pop
jb
leave
in
rorb
loope
test
push
push
call
mov
jns
into
xchg
adc
xorb
mov
jae
mov
lea
xor
repnz
lds
xchg
insb
ja
test
neg
and
lahf
mov
push
mov
fadd
pusha
orl
mov
sbb
mov
in
pop
sbb
call
cmp
sti
push
inc
inc
adc
stos
loopne
lahf
cmc
adc
and
push
ljmp
lock
leave
in
stos
lret
orl
inc
loop
lods
or
mov
mov
adc
scas
jg
xchg
rcrb
dec
sub
outsb
add
dec
push
adc
sbb
xor
or
rcrb
loope
stos
adc
loope
and
cmpsb
xchg
dec
out
adc
jbe
push
xchg
fnop
or
and
lcall
jb
cmp
xchg
xchg
dec
stos
push
pushf
jle
xchg
jno
add
mov
sbb
inc
data16
mov
cmp
add
pop
add
adc
cmp
inc
in
inc
cmp
lret
adc
shlb
into
and
repnz
aaa
jae
push
fists
movsb
pusha
ret
loop
adc
aas
ret
pop
loope
dec
test
inc
or
fdivrs
dec
fidivl
pop
pop
in
cmpsb
adc
imul
lahf
jbe
insb
add
aas
mov
cmp
aaa
xchg
and
mov
stc
fnsetpm(287
push
fsts
les
mov
addr16
or
sarb
das
mov
daa
xor
mov
sbb
jae
out
mov
sahf
icebp
pop
or
mov
enter
in
in
and
xlat
insl
push
dec
scas
xchg
mov
push
sub
loop
cmc
mov
ds
add
add
orb
ds
mov
inc
shll
fnstsw
filds
movsb
bound
xchg
fisttpll
sbb
and
in
xchg
inc
test
out
movsb
aaa
movsl
fabs
out
les
js
sub
mov
fidivrs
dec
insb
outsl
dec
dec
popa
cld
loop,pt
push
add
jno
push
pop
cmp
sti
subl
dec
cmp
das
mov
adc
sbb
mov
aam
stos
inc
and
pop
lock
inc
ja
jmp
ds
sbb
sbbl
loopne
jnp
sub
adc
into
call
push
pop
fs
call
mov
jg
js
inc
popf
add
test
jnp
ljmp
andb
or
jg
inc
rol
dec
mov
cmp
adc
sbb
pop
jl
xchg
mov
out
and
mov
clc
fmul
fxtract
adc
mull
sub
stos
mov
cmc
fnstcw
lret
fs
push
in
fldt
out
sti
in
out
and
cmp
insl
add
std
fildl
xchg
sub
stos
cmp
loope
sub
or
fbstp
cs
mov
lods
add
adc
inc
mov
mov
movsb
pop
mov
fstl
lds
ret
test
vpunpckhqdq
cmc
mov
movsl
sbb
and
inc
xor
scas
push
xchg
jno
rcll
cmp
out
insb
mov
aam
xor
jl
outsl
mov
outsl
xlat
pop
pop
lock
ret
pop
mov
clc
xchg
sub
pop
icebp
adc
mov
iret
loopne
mov
xorl
sub
sbb
fwait
push
sahf
mov
leave
ss
jp
cmp
sbb
rorl
jecxz
adc
ret
pop
xor
push
inc
and
pop
sahf
push
inc
fdivl
sbb
imul
js
and
divl
xor
mov
in
push
leave
lods
push
fildl
mov
enter
and
call
mov
pop
ds
or
jae
adc
pop
push
jg
push
xor
stos
inc
jnp
jmp
add
or
xchg
in
jle
sbb
movl
rcrl
pop
repnz
sub
outsb
lds
sub
inc
xchg
leave
dec
incb
jg
jno
jmp
jp
test
pop
ret
es
push
mov
aam
sahf
xor
testl
add
mov
fs
outsb
xchg
addr16
cltd
mov
lds
adc
addb
sbb
clc
jae
mov
loopne
js
jp
je
push
lret
push
loope
jp
adc
cld
inc
sbb
out
ds
and
movsl
dec
rclb
inc
cmp
xchg
mov
nop
xchg
add
and
dec
lods
sub
scas
jno
aam
push
inc
or
xchg
inc
sbb
pop
mov
xchg
add
sti
mov
mov
shll
enter
cmpsl
bound
mov
cmp
sbb
jmp
adc
mov
push
mulb
test
bound
lods
popa
rclb
jmp
test
outsl
repz
mov
push
es
cmp
mov
pop
in
adc
mov
push
ja
cmp
jnp
xchg
aad
cs
adc
mov
test
insb
shrl
insb
aam
sbb
or
hlt
in
xor
fbstp
cs
jae
sahf
fucomp
inc
add
mov
push
cmp
clc
aam
out
pop
outsl
or
jge
subb
adc
imul
xchg
xor
mov
sub
push
dec
or
in
add
pop
cs
test
daa
mov
inc
test
aam
in
lods
xor
ja
sub
dec
out
inc
jmp
mov
xchg
enter
or
push
mov
cltd
and
rcll
out
subb
sti
clc
jne
loope
xor
jo
xor
xchg
dec
ss
nop
pushf
std
inc
jnp
cmp
shll
sbb
imul
xchg
repz
scas
scas
inc
jb
adc
pop
sbb
ficompl
int
ret
repz
jmp
and
push
dec
jb
jp
adc
pop
pop
and
xchg
in
pushf
into
hlt
dec
loop
push
test
or
fdivrs
jecxz
dec
test
or
mov
out
fildll
mov
lahf
mov
rcr
in
xchg
dec
mov
sbb
xchg
add
xchg
push
fcmovb
inc
or
cmc
and
pcmpgtw
inc
scas
add
push
fwait
lea
and
js
pop
adc
lahf
adc
mov
mov
inc
jecxz
mov
lcall
fnstsw
sbb
mov
and
rcll
lret
fstl
cmp
negl
divb
mov
dec
pop
scas
add
mov
add
pop
sbb
push
adc
leave
xlat
sub
pop
mov
and
icebp
inc
fisubrl
out
xlat
jmp
mov
mov
popa
mov
ds
imul
add
shrb
push
rol
pop
out
push
gs
add
mov
mov
movsl
bsf
lods
inc
scas
and
adc
mov
scas
jecxz
cmpsl
sub
xchg
mov
push
call
sti
mov
sub
je
fwait
add
int
clc
cmp
and
or
mov
movsl
jbe
xlat
call
xchg
andb
in
pusha
divl
cmp
xchg
add
and
es
test
sub
sub
pop
cmpsl
sbb
repnz
inc
xor
insb
movsl
xchg
rorl
inc
sub
imul
lret
mov
push
sub
and
cmc
lds
int3
pop
xchg
push
fnstsw
test
sahf
push
call
mov
daa
mov
xchg
mov
pop
call
or
push
mov
sbb
out
aaa
jle
mov
sahf
iret
lret
adc
adc
stos
inc
pop
popf
push
out
outsl
mov
push
adc
mov
enter
inc
aaa
sarb
rcr
inc
lea
loop
sahf
daa
int
pusha
testl
add
ret
jae
call
rclb
je
movsl
popf
pushf
jge
dec
test
dec
xchg
push
lret
flds
and
idivl
hlt
dec
out
add
loope
repnz
pop
repz
dec
shl
movsb
pop
in
out
xor
andl
popf
insb
aaa
add
in
mov
loopne
pushf
cs
push
fdivl
adc
mov
insb
xchg
add
and
push
js
dec
sub
cmpsl
fnsave
cmp
ret
adcb
shll
movsl
mov
insl
cmp
or
push
in
inc
xor
fcomip
pop
lock
je
jbe
leave
cmpsl
cld
mov
xchg
je
rolb
dec
jbe
pop
icebp
jo
outsb
add
cmc
roll
inc
add
or
sbb
js
call
mov
mov
test
mov
adc
ret
sbb
arpl
sbb
sbb
mov
nop
mov
pop
mov
and
aam
add
mov
add
add
cmp
ret
jmp
mov
jl
dec
and
jp
and
dec
mov
pop
in
push
push
lods
mov
mov
shlb
mov
push
push
in
jmp
mov
mov
loope
outsl
je
sub
mov
je
sti
aad
cmc
outsl
adc
and
jl
add
xchg
mov
adc
jne
fisttpl
xorl
cmp
lods
mov
adc
ret
in
xorl
inc
fisubl
sbb
sub
lock
jle
mov
loope
jg
mov
lods
fldl
hlt
addr16
and
pop
add
aam
rcrb
jecxz
and
iret
sarb
incl
in
sti
and
push
test
xor
ja
inc
ljmp
sbb
pop
pushf
inc
sbb
inc
sbb
mov
js
call
mov
cmp
imul
aam
call
test
xchg
sbb
rclb
pop
aam
xchg
fsubl
add
scas
jbe
mov
sbb
cmp
dec
out
add
sbb
fisubrs
pop
addr16
call
aam
insl
sbb
pop
scas
or
jg
mov
shrb
adc
aam
and
mov
loop
js
add
out
lahf
mov
mov
test
jle
jo
aas
push
and
nop
adcl
lea
mov
xchg
pop
mov
push
icebp
repz
pusha
stc
xlat
mov
xchg
test
cmp
add
insl
jecxz
loopne
mov
cmp
dec
in
fs
xchg
daa
mov
out
pop
aam
and
scas
mov
ret
dec
jns
and
inc
jns
iret
bound
lret
jo
aaa
mov
sbb
pop
sti
lods
pusha
dec
in
jg
or
adc
push
mov
cli
cltd
sub
jo
dec
in
scas
fsubp
loop
and
in
pop
push
xor
xchg
or
mov
ret
pop
xor
std
popa
testl
scas
jle
cltd
inc
out
mov
adc
in
and
pop
rcrl
inc
imul
shl
lods
decl
jg
adc
in
push
add
cwtl
jmp
test
jp
test
aaa
or
sub
mov
out
ret
pop
repnz
xchg
mov
cmp
pop
scas
fidivl
or
dec
pusha
fisubrl
mov
add
outsb
pop
xorb
or
cmp
test
jmp
mov
andb
xchg
or
cmp
std
mov
nop
into
cli
cmp
paddusb
pop
mov
mov
popa
in
xlat
pop
xlat
jns
inc
adc
ss
mov
xchg
cmp
fidivl
pop
mov
cmp
lods
in
or
cltd
test
lahf
push
jb
xrstors
xlat
add
fisubrl
rcrb
mov
shll
imul
adc
sbb
lds
outsl
fs
push
xor
stos
cmp
ret
pushf
out
iret
rclb
adc
imul
repnz
jno
add
lods
add
lds
movsb
leave
or
cmp
push
aam
xor
out
sbb
pop
pushf
insl
add
lahf
jns
jge
cmpsb
in
fsubr
je
xlat
ss
je
scas
fstps
mov
and
fsubrs
cmpb
shll
adc
out
addr16
out
cmpsb
mov
push
xor
jmp
xor
out
call
mov
popf
or
lods
pop
add
cmp
enter
mov
insb
clc
fsts
sub
xchg
mov
popf
orb
xor
pop
lods
xor
jbe
pusha
ret
and
outsb
mov
mov
lds
push
cmp
dec
inc
arpl
pop
call
mov
cwtl
mov
sbb
or
mov
pop
int3
fisubrs
mov
sbb
inc
fwait
jg
inc
cs
and
gs
pop
test
xor
push
mov
lret
je
aad
iret
scas
aaa
sbb
jb
jne
jno
dec
xchg
inc
in
dec
icebp
stc
adc
xchg
scas
js
sbb
aaa
mov
bound
pop
mov
mov
ljmp
pop
out
addr16
test
xor
or
mov
ja
jecxz
fidivs
inc
cmpsl
mov
pop
std
imul
cmpb
scas
sub
loope
clc
add
daa
mov
mov
loope
pop
popa
les
leave
nop
out
and
addr16
and
cmp
bound
or
pop
out
out
dec
iret
jb
mov
cmp
repz
orl
mov
mov
scas
test
les
fistpll
mov
cmpsl
fs
movsl
andb
mov
cmp
sbb
inc
leave
es
push
leave
mov
jo
sub
out
xchg
cmp
jns
lret
repz
jo
push
mov
je
in
mov
lahf
les
pop
cs
jmp
xchg
in
adc
inc
mov
daa
mov
mov
dec
je
inc
mov
int3
mov
leave
test
sti
sub
movsb
mov
leave
add
ret
std
push
xchg
push
push
jne
sbb
aaa
int
popf
push
xor
pusha
or
dec
out
fwait
out
or
push
jb
sar
pop
cmpsb
call
mov
psubsw
scas
aad
pop
mov
jo
xor
xchg
arpl
mov
jns
enter
stos
cmpl
or
sub
pop
cwtl
daa
adc
shrb
in
and
hlt
test
loopne
add
pop
xor
scas
cmp
mov
mov
notl
cmp
or
inc
xchg
imul
fldcw
sub
fistpll
loopne
sbb
ljmp
sbb
dec
inc
mov
cwtl
movsb
arpl
push
lds
mov
or
in
cmp
xchg
es
sbb
cli
ss
pop
push
lret
and
in
mov
andb
hlt
push
xchg
mov
or
nop
lock
pop
or
int
es
mov
lret
popf
scas
outsb
lret
fs
pushf
mov
fcomip
jle
loopne
test
out
mov
in
dec
aad
sahf
cli
jne
fmull
or
das
popa
mul
pop
fisubrs
test
mov
jle
cwtl
outsl
insb
ja
fidivs
test
xor
fsubrl
imul
mov
and
mov
lea
mov
xor
movsl
rcl
xor
loope
sbb
or
fcmove
inc
rorl
jae
mov
fisubrs
nop
pop
dec
jecxz
sbb
mov
test
xor
mov
decb
ror
and
sub
addr16
cltd
in
out
xchg
cmpsb
and
les
adc
sub
call
dec
rclb
adc
scas
xchg
cmp
push
mov
mov
push
fcoml
push
mov
and
and
pop
or
xchg
sbb
add
dec
aad
pop
rcrl
pop
add
push
in
xchg
adc
xor
call
fcomps
das
mov
fidivl
cmp
xchg
jmp
popf
leave
mov
and
mov
fldt
or
pop
xchg
jmp
xchg
inc
xlat
out
in
ss
pop
shrb
enter
dec
jge
xchg
jns
dec
fildll
dec
lods
fnsave
inc
pop
or
in
push
or
cmpsb
dec
shr
pop
pop
shrl
pop
jo
insl
icebp
xchg
imul
ljmp
lods
dec
in
addl
pop
and
sub
sbb
int
mov
xchg
xor
je
inc
aad
scas
in
sbb
rolb
dec
pop
sbb
movsl
testl
jp
test
ret
mov
and
or
lcall
ret
mov
push
mov
pop
jnp
stc
lahf
mov
loope
dec
and
mov
dec
iret
outsl
outsl
add
push
cmp
dec
xchg
sub
aaa
loop
sub
rolb
ficompl
gs
cmc
ljmp
lea
insl
mov
stos
out
imul
adc
mov
fwait
xor
add
adc
jle
sub
push
jb
inc
sub
std
imul
or
inc
stos
mov
inc
ss
mov
push
or
cmc
xchg
iret
pop
sbb
cmp
jp
test
repnz
and
sbb
aam
mov
add
or
or
jle
pop
cmp
adc
pop
cwtl
pop
push
mov
js
dec
test
pop
iret
mov
outsl
add
mov
faddl
imul
mov
loopne
cmp
loop
mov
aam
xchg
dec
mov
mov
or
shll
push
repz
repnz
mov
lret
jl
dec
mov
or
scas
lcall
incl
inc
pop
daa
call
xchg
jmp
fisubl
sahf
arpl
popf
mov
and
aam
notl
out
xlat
les
loope
sahf
pop
or
xchg
jmp
leave
lahf
call
push
std
scas
dec
adc
aaa
inc
mov
sbbb
jl
movsb
pop
mov
test
mov
lock
in
stos
mov
lea
xor
pusha
dec
jmp
push
sbb
mov
arpl
in
adc
lea
xor
loopne
inc
dec
fcomi
cli
cli
cltd
test
into
xor
and
mov
sub
jecxz
ret
cs
fsub
add
and
pop
mov
inc
and
popf
into
ds
mov
push
loope
jge
scas
push
inc
pop
icebp
movsl
inc
jmp
jl
lret
sub
cwtl
imul
fildll
mov
mov
jp
ror
bound
mov
xchg
nop
les
test
lods
sbb
and
mov
cli
ja
dec
jecxz
je
add
dec
scas
push
nop
mov
lret
stos
cmp
mov
ja
pushf
pop
lret
or
dec
lods
xchg
jmp
xchg
jno
cmpsb
repnz
leave
pop
jb
mov
je
sub
adc
mov
xor
data16
adc
pushf
mov
mov
adc
mov
xlat
inc
push
or
dec
jb
jnp
insl
loopne
cmpsb
inc
ds
testb
pop
lret
into
cwtl
inc
aam
inc
mov
rcl
inc
es
inc
pop
das
jp
pushf
xchg
and
or
mov
sub
testl
testb
scas
adc
gs
and
imul
das
cmp
push
add
mov
call
jns
insl
jmp
mov
push
or
mov
lea
test
aam
dec
pop
push
mov
lods
jp
cltd
lock
bound
mov
jae
lds
push
in
pop
cmp
js
xchg
cwtl
cmc
adc
out
xchg
xchg
movsb
fldt
test
cmp
js
cmc
cmp
pop
mov
sub
lret
bound
xlat
jmp
cs
inc
in
addl
sub
and
ja
jae
test
subb
bound
ret
mov
adc
out
jmp
mov
les
test
mov
ds
outsl
cmp
adc
nop
push
mov
mov
add
les
mov
int3
mov
adc
ret
sbb
pusha
imull
inc
jle
pop
mov
rclb
test
int3
arpl
lcall
and
push
mov
cmpsb
cmp
fsubl
sbb
imul
fists
adc
insb
sub
cmp
sub
xor
inc
sahf
lcall
ljmp
sbb
sub
and
mov
sub
movsb
call
fadd
ljmp
jg
out
cmp
sbb
pusha
inc
stos
test
ja
lahf
mov
popa
push
stos
sbb
cmpsb
notl
out
push
sbb
mov
movsb
aad
pop
jo
push
fcoml
repnz
in
inc
fadds
mov
cld
sbb
xchg
add
mov
ss
clc
mov
cvttps2pi
call
jns
xor
iret
orb
push
mov
out
loopne
dec
cmp
cltd
hlt
repnz
mov
xchg
jle
out
aas
loop
push
and
push
mov
adc
push
xor
data16
xchg
into
mov
cmp
xor
das
mov
jb
stos
test
fxch
nop
std
imul
cmp
or
sub
es
adc
icebp
cmc
mov
das
jns
cmc
shll
jle
enter
mov
push
push
fsubs
cmpl
jo
dec
repnz
out
xor
hlt
sbb
cmp
je
xchg
sub
jmp
pop
leave
fs
aas
and
cwtl
xchg
negl
pop
sub
jecxz
scas
add
sti
mov
shrl
clc
mov
pop
out
das
lds
mov
pop
jo
in
mov
imul
pop
xchg
outsb
add
sub
push
mov
fldenv
or
lock
inc
orl
or
int
pop
cmp
and
mov
pop
xchg
lret
adc
push
ss
lock
mov
inc
lods
in
fidivrs
jecxz
into
lcall
mov
jae
pop
mov
fildll
mov
negl
lds
jl
out
cld
adc
stos
and
jl
mov
mov
fildll
mov
fbstp
jb
inc
jnp
test
jae
out
dec
mov
or
jne
shll
pusha
movsl
jge
sub
sbb
andl
loope
jo
sub
mov
adc
adc
rclb
mov
jae
out
or
cmp
test
jmp
gs
in
ja
icebp
mov
mov
aam
in
test
mov
sbb
or
sbb
int3
arpl
push
add
dec
mov
pop
in
xchg
std
movsb
aam
xorb
fistpl
arpl
jle
jae
aad
cld
pop
bound
push
xlat
movsb
jno
jle
fdiv
adc
fsubr
inc
xor
stc
pop
push
out
push
inc
jno
stc
adc
or
rorl
pop
out
adc
clc
ss
mov
and
xor
dec
mov
adc
xchg
add
test
es
cld
loopne
fcoml
pop
sbb
push
out
and
xor
pop
ja
xchg
in
xchg
mov
mov
add
inc
frstor
jge
adc
sub
testl
xchg
imul
pop
mov
xor
and
out
scas
sbb
add
cld
cmp
movsl
jmp
xchg
mov
into
mov
xchg
push
notb
sub
sbb
push
leave
loope
daa
pop
sbb
xorl
jne
or
es
insl
sub
mov
cmpsb
xchg
adc
adc
addr16
cmpsl
lret
out
orb
in
and
adc
push
popf
adc
or
inc
sub
push
sub
fmulp
dec
sbb
es
shll
sub
int
mov
xor
and
iret
cmp
push
mov
mov
xchg
insb
xor
popf
push
std
and
push
push
push
imul
sti
xor
aad
add
jl
or
popa
cmp
mov
stos
imul
xor
filds
xchg
and
push
je
mov
leave
adc
loope
je
icebp
data16
in
adc
adc
sahf
ss
out
push
mov
leave
stos
hlt
fstpt
les
xchg
ret
les
add
push
enter
push
jmp
jmp
jns
add
push
arpl
clc
and
xchg
add
fldcw
pusha
aaa
adc
lret
cwtl
and
jl
mov
mov
call
or
push
jmp
or
push
pusha
push
sub
je
push
adc
aam
mov
sbb
in
ret
inc
mov
jl
cmp
stos
mov
mov
and
push
push
lods
mov
test
fs
enter
cmc
test
xchg
sub
pop
lret
push
cltd
jbe
pop
push
cmp
xor
jns
pop
dec
inc
sub
cs
push
dec
xor
mov
cld
or
scas
inc
dec
shll
ds
loope
mov
jns
pusha
sarl
dec
fsubs
fbld
fdivp
or
popa
xchg
or
mov
ds
arpl
adc
loop
xchg
xor
mov
or
je
lods
stc
or
outsl
mov
jge
int3
pop
or
and
lods
rcll
cs
out
pop
shlb
out
dec
call
jno
lret
sub
mov
pop
dec
es
xchg
and
scas
pop
lock
int
mov
lret
adcl
jle
mov
hlt
loope
jmp
fidivs
decl
cmp
fisubl
pop
int3
arpl
std
xchg
mov
repz
sbb
pop
inc
pop
insl
stc
loop
roll
int3
inc
dec
mov
push
fcomps
dec
pop
adc
mov
insl
inc
lods
aaa
ss
jnp
es
push
push
mov
sub
sahf
test
pop
add
mov
mov
out
xorb
stos
daa
enter
js
push
in
loop
jbe
stos
adcl
orl
jg
call
cmpsl
xchg
into
cmp
arpl
mov
jo
adc
xchg
inc
in
and
sbb
push
jbe
sbb
mov
sahf
imul
pop
out
movsb
and
inc
xchg
das
dec
lods
leavew
inc
cwtl
int
hlt
add
outsb
mov
cmp
ret
mov
enter
in
test
cmpsl
mov
repnz
jmp
mov
enter
iret
data16
cmp
cmp
hlt
mov
in
cmp
xor
mov
les
mov
sbb
andb
cld
insl
add
enter
mov
push
jge
inc
cmp
pop
pop
nop
call
jecxz
pop
jno
sub
add
jns
adc
mov
mov
adc
fadd
dec
jmp
add
mov
push
fsts
and
xchg
cmpsl
xor
fs
or
mov
mov
rolb
add
push
pushf
jns
jmp
inc
sbb
aaa
pop
push
lcall
aad
clc
iret
or
adc
sub
mov
mov
sahf
push
cmp
add
mov
scas
andb
push
xor
pop
push
push
in
add
and
mov
sub
mov
mulb
xor
push
sbb
cltd
push
scas
jo
add
sti
push
mov
stos
in
mov
stc
push
clts
orl
pop
scas
jno
inc
cmpps
fldenv
pop
pop
in
pop
jg,pn
addr16
mov
int
mov
dec
or
fisttpll
popa
push
ljmp
repz
mov
popf
push
divl
jns
mov
add
mov
out
jae
ds
jg
push
sub
ds
imul
insl
aam
xorb
lea
or
lcall
jbe
das
xchg
movsl
jns
imul
mov
mov
or
xchg
ljmp
dec
hlt
mov
sub
sbb
out
subb
mov
xchg
leave
mov
fwait
sub
loopne
cltd
pop
or
lcall
bound
ret
loope
in
inc
fwait
cwtl
shrl
stc
loop
mov
mov
push
sbb
fidivrl
jl
cmp
jle
mov
xchg
push
add
mov
cmp
insb
or
mov
mov
outsl
jle
adc
leave
mov
and
fs
imul
int
or
dec
mov
and
mov
xchg
test
nop
stos
int3
and
mov
in
mov
xchg
mov
imul
ja
aas
scas
int
bnd
fisubrl
nop
mov
push
fsts
addr16
adc
out
sub
in
fwait
sub
pop
mov
xor
pop
test
mov
insb
jg
lods
and
mov
dec
xor
sarl
cmc
mov
mov
fisttpll
cmp
xor
jo
icebp
mov
mov
test
or
les
pop
pushf
aad
ljmp
gs
lods
popf
or
xor
push
sbb
lods
dec
inc
pop
imul
fimuls
sbb
and
lahf
push
stos
out
adc
popa
cwtl
test
ljmp
add
add
imul
mov
in
orl
and
out
xchg
popf
test
test
ja
sbb
sti
ret
ja
pop
addr16
test
clc
mov
cli
sbb
and
loop
pusha
dec
pop
cmp
sub
xor
push
sbb
xchg
ret
mov
xchg
adc
push
inc
mov
inc
loop
sbb
movsb
out
adc
movsl
sub
xlat
push
push
jg
lock
mov
cwtl
in
mov
pop
fdivrl
push
add
cmpsb
out
cld
cmpsb
imul
stc
popf
cmpsb
test
jo
lds
pop
mov
or
pop
loope
rcl
cld
inc
nop
cli
ss
push
push
push
fdivs
xchg
or
mov
adcb
mov
sbb
int3
test
adc
es
aad
push
mov
cmp
or
jg
popa
icebp
mov
in
add
repnz
inc
imull
cwtl
pop
jle
cmp
stos
mov
out
sti
mov
mov
ror
cltd
pushf
shrl
mov
mov
shlb
js
xor
adc
andb
in
shlb
cld
mov
or
xor
cld
sarb
mov
mov
pop
xorl
dec
xchg
push
test
cs
lret
lret
dec
fisubrs
pop
popf
addl
adc
sbb
add
out
inc
or
cmpsl
int
fisubl
scas
int
popa
mov
cltd
jg
or
adc
in
cmp
je
daa
clc
icebp
xchg
inc
dec
xchg
test
lret
cmpsb
push
jmp
xchg
and
push
mov
movd
pushf
popa
clc
into
sbb
pop
cli
push
ja
out
arpl
pop
pop
ljmp
or
push
mov
movsl
jl
mov
lahf
fwait
mov
int
fldcw
pop
cmp
push
pop
sub
sub
xor
cmp
test
leave
ret
das
leave
fsts
xor
pop
fs
mov
roll
lret
mov
pop
lret
jne
sbb
dec
loopne
sbb
inc
cmp
das
and
popl
ljmp
lea
fildl
lret
push
dec
movsb
and
cmp
vcvtsd2ss
xchg
decl
sub
fxch
xchg
outsb
add
imul
inc
dec
mov
jbe
imul
js
xchg
sub
lcall
sub
not
mov
pop
or
push
xchg
test
sub
ss
test
inc
push
or
lahf
out
into
sahf
shrb
jg
jb
jo
test
std
jo
movsl
xor
cli
ljmp
mov
sbb
es
pop
dec
xchg
cs
popf
xchg
mov
mov
adc
and
test
lret
roll
push
nop
xor
and
loopne
jo
inc
mov
mov
out
fdivrl
pop
lea
dec
cmpsl
idivl
dec
push
cmc
cmp
fildl
scas
mov
movsb
movsl
sti
cs
je
jno
divl
mov
dec
dec
adcb
fsubrs
pushf
cmp
pop
stc
adc
jmp
xor
mov
rorl
add
lock
sbb
clc
lcall
pop
lea
jg
loop
lret
cwtl
cld
inc
adc
fiaddl
popf
stc
cld
or
jecxz
or
sbb
mov
sbb
movsb
stos
iret
shl
repnz
dec
idivl
mov
out
rorl
cmp
xchg
or
pushf
xor
mov
bound
pop
icebp
mov
push
shll
dec
mov
lea
push
xchg
addr16
outsl
lods
scas
mov
mov
sbb
mov
cmp
push
pop
fists
sbb
cmp
jp
lods
addr16
in
xchg
addr16
leave
call
and
test
aas
mov
imul
mov
push
xchg
pop
push
adc
sahf
mov
lods
outsb
mov
scas
shll
imul
or
or
insb
jl
sbb
xor
les
das
nop
mov
loope
cs
popf
or
inc
sbb
fists
jo
aam
lods
inc
ss
inc
enter
adc
mov
dec
xchg
dec
popl
mov
out
lea
in
aaa
aas
rcrb
lcall
imul
out
adc
lds
pop
cmp
mov
mov
xor
mov
jle
push
ret
mov
xor
push
xchg
icebp
jo
mov
sbb
xor
sbb
into
rorl
and
negb
push
ret
neg
mov
sbb
sub
and
mov
in
pusha
xchg
cli
adc
mov
adc
sbb
jp
cmp
fidivrs
mov
push
xchg
test
and
mov
in
cmp
outsb
push
out
dec
jo
fnstsw
cmc
out
sbb
in
scas
in
jl
sub
lea
rcrb
stos
loope
pushf
hlt
movsl
in
iret
push
shlb
xchg
xchg
mov
sbb
mov
mov
ret
push
sbbb
and
push
popf
fadds
pop
push
in
leave
call
jne
mov
lcall
mov
in
gs
sahf
sub
iret
lods
test
pop
pusha
iret
cwtl
sbb
clc
push
ret
idivb
mov
add
ret
push
jg
xchg
and
daa
push
push
sbb
mov
aaa
in
jp
pop
inc
mov
jae
sub
mov
movsb
cmpsl
xlat
jge
lcall
pop
jg
inc
cli
into
gs
mov
cmpsb
jmp
fsub
subl
cmp
mov
push
ljmp
jno
mov
test
xchg
push
cli
mov
jmp
jmp
add
add
pop
fs
dec
mov
and
xchg
dec
int
jecxz
cmp
shlb
dec
in
mov
cli
loope
in
cmp
mov
outsl
push
or
inc
nop
push
sbb
rcl
shrl
push
adc
mov
out
pop
in
nop
stos
inc
push
inc
or
xor
mov
fdivrs
sbb
stos
and
push
pop
pop
mov
sub
loop
and
lods
addr16
xor
sahf
in
and
xor
scas
xchg
cmp
fnstsw
mov
fs
xchg
cmp
scas
mov
mov
imul
push
imul
out
jmp
sbb
bound
cmp
fsts
cli
or
mov
cld
dec
hlt
inc
mov
std
add
fcmove
fimuls
fsubrs
xchg
or
mov
sahf
scas
mov
rol
add
dec
jmp
mov
push
jo
mov
hlt
cmpsb
dec
push
out
mov
add
inc
lcall
dec
or
push
jge
cltd
fwait
stc
pop
jb
xchg
inc
mov
popa
mov
popf
inc
lret
mov
lea
lock
push
jmp
xor
pop
testb
nop
pop
xor
je
mov
jge
leave
scas
pop
shll
fdivrl
sub
mov
pop
negb
xchg
or
add
fstpt
push
cmpsl
loop
movsb
sub
ret
dec
fisubrl
lods
ja
test
xchg
int
addr16
push
jmp
shll
mov
pop
push
movsb
mov
aad
sbb
ret
lahf
imull
ja
movd
jbe
jnp
add
mov
inc
sub
stos
and
rcr
imul
aad
mov
jbe
and
test
mov
inc
xlat
push
rorb
inc
popa
sub
loop
or
in
cmp
cld
push
dec
out
es
sub
imul
push
dec
rorb
lahf
ret
pop
or
rclb
je
adc
test
stc
cmpsl
mov
and
int
push
inc
jp
sar
lcall
pop
cs
call
rorl
mov
popf
clc
dec
sbb
push
sub
enter
das
rorl
jge
fucomip
out
ljmp
cs
js
cltd
lock
idivb
push
in
pop
adc
mov
gs
adcl
inc
test
out
sub
insb
ret
cs
add
push
sbb
mov
cmp
mov
sbb
orl
in
push
jmp
dec
mov
adc
jmp
movl
pop
pop
enter
test
shll
call
sbb
mov
sarl
inc
in
test
or
sub
or
mov
lods
rorl
lcall
js
jl
mov
cli
xchg
lock
cmp
outsl
pop
ret
clc
pop
adc
imul
leave
divl
adc
test
fsubrp
ret
js
cmp
stos
sbb
mov
push
jmp
rclb
dec
push
lret
push
mov
inc
hlt
adc
dec
inc
sarb
rolb
in
dec
adc
add
adc
and
or
loope
jmp
cld
fwait
bound
call
pop
mov
pop
out
negl
testb
fwait
jmp
xchg
je
cmpsb
add
stos
jne
sub
cmpsb
lret
inc
sbb
lods
and
push
shl
cmp
pusha
call
push
lods
jp,pn
lods
xor
lods
outsl
cmp
addl
sbb
in
nop
ljmp
icebp
movsb
repnz
int
xor
jecxz
mov
mov
add
icebp
mov
out
pop
call
lret
pop
pop
mov
mov
iret
mov
or
dec
loope
clc
daa
mov
cmpl
test
aas
out
lcall
xorb
adc
mov
jmp
mov
stos
icebp
cmp
pop
ljmp
aam
int3
call
lahf
call
xlat
loopne
push
add
xchg
mov
jp
mov
jle
leave
scas
jge
shlb
xlat
xchg
frstor
subl
movsb
push
arpl
xor
push
sub
dec
mov
fisubrl
inc
xor
in
sahf
cmc
sarb
clc
scas
pop
testl
jbe
jno
cmp
inc
std
inc
nop
test
jb
cmpsl
inc
and
mov
enter
in
les
mov
adc
clc
add
outsl
daa
lea
mov
fs
jle
add
cmp
lret
lret
mov
popa
mov
jmp
mov
movsb
aam
jecxz
cmp
les
in
setns
pop
add
popa
pop
rol
jo
call
pushf
jmp
or
loope
mov
cmc
mov
stos
xchg
ret
out
mov
fdivrl
movsl
in
push
call
sub
adc
bnd
jbe
mov
xchg
adc
sti
in
inc
cs
lahf
jnp
lods
pop
sub
ss
movl
rolb
int3
pop
nop
ljmp
cmp
xchg
inc
jnp
fldl
repnz
adc
dec
sti
cwtl
sub
mov
jg
pop
cmp
cmpsl
push
mov
outsb
push
sbb
notb
cltd
jle
pop
enter
jg
mov
cwtl
jbe
notb
or
std
leave
mov
adc
jne
add
push
mov
data16
fs
outsb
movsb
mov
push
das
jge
mov
dec
or
or
pop
pop
popf
int
cmpsl
in
sti
call
sub
rorl
and
cli
movsl
outsl
stc
mov
addr16
outsl
push
cmpsb
loopne
and
lea
data16
cltd
bound
ja
in
stos
jmp
pop
es
leave
ret
or
and
xchg
push
jb
cmp
nop
rcrl
adc
rcrb
xchg
jne
imull
test
orl
xor
mov
xor
jae
hlt
cmp
pop
cmp
sub
push
in
rorb
sbb
jl
inc
push
mov
mov
add
lods
sub
pushf
fcmovb
adc
jp
mov
cmp
pop
xor
loop
push
incb
lods
or
or
fs
mov
or
adc
push
test
dec
or
mov
xchg
mov
movsl
and
sbb
cmp
je
shlb
xor
pop
sub
std
daa
cli
mov
gs
call
js
jae
in
ret
inc
push
iret
fidivs
and
push
aas
inc
out
aad
loopne
addr16
in
sbb
mov
mov
add
ljmp
adc
imul
loope
enter
aaa
stos
sbb
mov
ret
ret
pop
fstpt
ds
cld
mov
iret
sub
mov
daa
push
cmp
xlat
scas
sub
mov
sub
iret
jbe
mov
mov
addr16
or
cmpl
cld
subb
stos
inc
jbe
sub
push
shlb
jb
ss
inc
repnz
mov
fwait
cmp
xor
add
loop
cmp
adcb
jg
test
mov
xlat
adc
and
lret
add
jnp
inc
fidivs
mov
scas
or
adc
jmp
jo
mov
fsubrl
stos
jg
xchg
lock
bound
push
inc
sub
imul
nop
movsb
pop
push
inc
addr16
add
mov
or
pop
loope
subl
arpl
fs
dec
and
or
xchg
mov
and
xchg
add
ss
out
cmpsl
pusha
pushf
push
loopne
push
call
repnz
cmp
pop
add
xor
or
adc
outsb
jne
mov
xor
les
enter
mov
cwtl
gs
xor
xchg
insl
ljmp
push
xor
mov
jecxz
into
pop
jb
out
ret
dec
and
adc
xchg
add
hlt
imul
js
and
mov
lods
in
cltd
push
mov
mov
jne
add
jg
cwtl
ret
das
jle
sbb
enter
mov
jno
idivb
adc
mov
fisttpl
shufps
testb
test
lods
shll
mov
jge
xchg
or
mov
shl
std
shll
ss
out
out
stc
sbb
mov
in
mov
sti
sub
ljmp
sub
fstpl
add
xor
jo
iret
test
add
jnp
sbb
in
int
lods
mov
pop
mov
push
jg
xchg
dec
cmp
mov
rorl
mov
movsl
sbb
push
rclb
mov
xor
mov
cmp
lods
inc
fisttpl
cs
ljmp
ljmp
jno
sbb
call
xor
std
adc
cmp
mov
and
stc
cmp
imul
in
fmuls
mov
lods
ljmp
es
push
mov
inc
mov
adc
lret
test
jmp
negb
insl
aad
mov
mov
and
lcall
das
jl
fstl
inc
cld
xchg
cmp
decl
pop
fdivs
push
jnp
orl
xchg
out
ljmp
mov
push
push
mov
addb
and
jno
push
and
fs
sbb
sub
mov
add
sbb
mov
pop
inc
pcmpeqw
xor
test
push
mov
cld
les
inc
call
jecxz
das
push
mov
xchg
loopne
inc
push
fisttpl
sub
pop
mov
in
ret
xor
imul
testb
jne
pop
cmpsl
xchg
dec
xchg
stos
mov
insb
mov
mov
inc
fstps
jne
pusha
in
pusha
jp
add
adc
adc
jne
fwait
es
inc
stos
int
lds
jb
in
lods
nop
push
dec
stc
or
dec
dec
dec
jg
add
ljmp
jno
and
sbb
std
data16
out
enter
cmp
dec
in
jle
and
sbb
push
sarl
ret
lock
in
out
roll
mov
pushf
stc
popf
mov
xor
fnsave
push
jne
pop
push
cltd
scas
jo
add
pop
inc
inc
xchg
cwtl
mov
mov
cmpb
adc
cmc
les
lds
gs
aaa
es
pusha
sub
stos
fmuls
dec
iret
inc
movsl
jae
inc
lods
leave
mov
loop
push
fdivrl
sub
mov
popa
rcrl
aaa
jmp
lcall
cmp
outsb
add
xor
and
jnp
sti
iret
shrb
int
in
mov
ret
je
rorl
lock
fcoms
xor
loopne
repnz
sub
daa
cmpsb
jge
jbe
xchg
cmpsb
cld
add
dec
sbb
xchg
hlt
int3
nop
cmp
inc
aas
ret
and
or
das
add
cs
ss
repnz
pop
js
das
sub
mov
xor
cmovb
sub
xor
xchg
push
or
dec
in
sbb
cmp
sahf
sub
popf
mov
cmpsb
mov
or
jae
mov
stos
pop
cmp
pop
or
jno
jbe
add
out
jmp
jecxz
fisubs
jmp
xor
cld
fnstenv
xchg
divl
mov
mov
fidivrs
rclb
xchg
mov
mov
addl
repz
sahf
shll
int
push
adc
inc
push
lahf
lods
xchg
mov
mov
push
push
int3
clc
jecxz
into
fcom
int3
andl
lret
mov
mov
out
add
inc
xchg
in
out
loope
cwtl
stos
testl
cmp
jge
inc
mov
fwait
lods
cmp
shl
pop
xchg
ja
inc
mov
data16
xchg
or
es
int3
arpl
mov
cmpb
dec
add
or
test
mov
test
push
jg
loopne
je
fbstp
cwtl
lods
lea
sbb
push
lahf
rcl
insb
add
push
sahf
mov
mov
and
push
mov
iret
push
lret
adcb
or
push
es
js
stos
pop
xor
xchg
gs
sbb
xor
js
inc
push
cmp
push
sbb
shrl
aad
cmp
dec
add
fstpl
pop
outsl
jne
xchg
imul
xchg
push
pop
rcl
mov
xor
mov
faddp
sub
and
jo
add
sbb
or
xor
jp
adc
mov
xlat
icebp
lods
xchg
dec
loop
stos
cld
sub
dec
mov
daa
ljmp
push
in
mov
loop
lret
sbb
jg
aas
call
insb
outsl
aad
mov
popa
dec
dec
xchg
sbb
dec
iret
and
repnz
xor
mov
jne
adc
ljmp
mov
mov
jb
out
xlat
enter
jo
rol
das
adc
icebp
ror
ret
inc
jmp
xchg
out
or
xor
pop
jmp
mov
insl
and
add
cmp
jae
sub
inc
sbb
jg
mov
out
ja
cmc
sub
or
push
nop
push
sbb
xchg
call
cs
adc
sti
xchg
stc
mov
pop
fs
sub
pop
inc
test
lret
cmp
dec
popf
mov
cmp
mov
jne
mov
test
and
sbb
fdivl
pushf
in
in
xor
add
rol
mov
push
hlt
daa
fdivl
cwtl
decb
lods
xor
or
je
inc
cmpsb
pop
insb
sub
inc
push
loopne
mov
cs
daa
jae
faddl
xorl
addl
lcall
and
cld
mov
mov
xor
rcr
sub
cmp
add
lods
inc
dec
insb
mov
dec
scas
dec
scas
sti
inc
data16
push
pop
cmp
and
test
pop
std
sbb
push
pop
cmp
pop
mov
fcomps
nop
aad
mov
mov
push
popa
clc
subl
mov
jmp
sti
add
add
and
sahf
mov
fstl
into
ds
sub
movsb
stos
sahf
arpl
outsl
sbb
mov
test
pcmpgtw
dec
sbb
cmp
popf
cmp
cmp
in
test
jmp
out
pop
cwtl
xchg
jb
call
mov
cmp
stc
inc
test
push
out
xchg
int
inc
pop
jg
cmp
sub
jns
pop
rclb
rcrb
mov
xchg
jmp
rclb
std
push
sti
dec
pop
and
xchg
loope
add
jno
adc
scas
add
xchg
sbb
add
insb
mov
push
outsb
jecxz
les
lahf
inc
rorb
shll
js
jo
push
mov
fdivrs
cmp
mov
cmp
inc
mov
out
push
ror
insb
mov
xchg
xor
xor
adc
jmp
call
andl
and
rolb
fldenv
mov
xor
daa
aaa
enter
xlat
dec
sub
rol
jnp
enter
dec
pop
rclb
and
lahf
ss
leave
xor
mov
sahf
xor
std
jo
xor
xchg
mov
mov
popf
int
popf
les
shrb
jl
or
sbb
cmp
jmp
mov
push
enter
mov
js
jle
pop
movsb
push
dec
adc
data16
xor
xor
mov
push
test
dec
mov
outsb
inc
pop
loopne
arpl
out
aaa
pop
jae
pop
mov
jle
mov
mov
aam
nop
add
cmp
inc
push
scas
test
xor
push
rcll
hlt
mov
adc
addr16
cmp
rorb
jnp
push
lret
mov
jmp
iret
pop
dec
jbe
out
mov
push
shl
sbb
outsb
jae
mov
and
es
add
or
push
lcall
inc
jmp
lea
rorb
mov
aaa
ja
xchg
mov
je
fwait
test
xorl
adc
inc
stos
dec
aam
loope
cmp
jbe
mov
movsb
call
aas
test
dec
inc
jne
scas
and
adc
iret
fstps
jg
jnp
es
fwait
push
lock
sbb
sub
fcoml
push
popf
rcrb
xor
dec
int
leave
push
stos
enter
leave
movsl
aaa
imul
push
cli
stos
mov
int3
arpl
push
fcomps
jns
jne
add
fwait
xor
mov
sahf
mov
sti
xchg
jl
sbbl
pop
cmp
out
cld
leave
aad
or
pop
cwtl
das
mov
mov
jns
cmc
adc
adc
and
mov
fwait
mov
mov
pop
sahf
push
popf
mov
dec
and
shlb
in
ret
in
pop
lods
xchg
stos
jmp
mov
adc
and
mov
ds
test
mov
stos
out
and
aad
sub
cmp
bound
testl
jl
sub
shlb
pop
out
cwtl
lods
pop
jp
mov
pop
decb
push
lods
sbb
std
popf
lods
lret
dec
mov
dec
in
pusha
push
aam
js
cld
mov
mov
dec
fnstenv
push
push
dec
add
js
fisubrl
lret
and
fbld
incl
aam
lret
xchg
adc
lcall
jl
fsubs
aas
outsb
sub
mov
std
cmp
out
andb
jo
ds
push
int
pop
or
shrb
jb
pop
idivl
jns
lds
pop
xchg
fcmovne
clc
xor
pop
fs
inc
pop
jns
gs
negb
incb
add
dec
jge
subl
pop
mov
test
std
sub
pop
xchg
fisubrl
cmp
pop
pop
cmpl
pop
mov
inc
sub
in
push
insb
sbbb
or
xchg
lods
xchg
sbb
xor
fstpt
xchg
scas
cld
cmp
or
stc
jb
fdivp
loopne
fstpl
stc
dec
and
mov
mov
xchg
push
sbb
cmpsl
out
pop
movsb
cmp
inc
loope
mov
insb
sarl
sbb
sbb
insl
loopne
aad
call
shrb
jge
test
inc
cmp
out
test
ja
movsl
inc
inc
dec
fimull
in
hlt
dec
xchg
stos
iret
mov
repz
adc
push
jbe
push
dec
rcr
xlat
mov
lcall
xor
aas
mull
cmp
xor
ds
imul
in
pop
psrld
adc
mov
mov
xchg
stos
and
scas
add
cld
mov
notl
int
push
aaa
std
adc
jnp
pop
ror
xchg
sub
pushf
push
mov
test
dec
sub
nop
movl
cmp
repz
wbinvd
das
icebp
pop
cmp
pop
jecxz
or
mov
stos
ficompl
movb
mov
dec
rcrb
or
xor
push
repnz
push
mov
sahf
stc
or
xchg
addb
xlat
or
shll
mov
repz
fs
jmp
loope
sbbb
aam
mov
shlb
mov
adc
mov
ret
mov
dec
sub
push
and
lods
pop
sbb
into
xor
cwtl
jg
outsb
in
xchg
add
cmp
out
adc
sahf
xor
xlat
or
testl
pop
cmp
xor
scas
cs
les
push
mov
cmpsb
lahf
testl
sbb
xchg
xchg
and
adc
xor
mov
mov
add
icebp
mov
shlb
lret
lods
or
insb
sbb
imul
mov
xchg
sbb
jle
repnz
loop
xchg
cld
dec
add
dec
and
jmp
cmc
jno
fsubrs
movb
fs
xchg
fcoms
dec
data16
fsubrs
call
and
sub
stos
inc
nop
ret
fsubr
cld
repnz
mov
sub
aam
jo
icebp
mov
push
int
mov
dec
mov
cmpsl
xchg
xchg
orl
enter
push
ss
enter
aaa
test
popa
cmp
xor
cld
and
or
imulb
shll
mov
pop
sbb
popf
and
cld
mov
outsb
div
movsl
int
rcrl
add
stc
dec
shrb
in
inc
pop
test
addr16
out
or
js
aaa
sub
sysexit
push
xor
mov
test
mov
fstps
xor
mov
mov
fnstcw
xorb
xchg
or
pop
test
jl
and
mov
arpl
int3
fnsave
push
stos
xchg
add
je
insb
xchg
mov
sub
mov
fdivs
hlt
jne
push
test
icebp
mov
or
fimuls
fdivrs
push
xchg
xchg
sub
sti
insb
xor
mov
xor
fucomp
add
xlat
insl
test
inc
hlt
adc
xor
cmpsl
mov
shll
mov
fsubl
mov
jecxz
test
dec
in
mov
out
fimuls
repz
add
jecxz
fwait
shr
or
rcrl
xor
loopne
hlt
cmp
dec
shl
xchg
adc
pop
or
mov
and
leave
push
imul
add
jmp
or
fimull
xor
shr
jge
lcall
stos
loopne
xor
adc
fidivs
mov
mov
mov
daa
inc
fcompl
jl
inc
cltd
pop
push
xchg
int
enter
lds
mov
pop
xchg
adc
push
es
test
mov
sbb
cmp
cli
add
loope
loop
clc
jmp
cmp
cltd
dec
out
sbb
sub
and
mov
test
sbb
mov
mov
xchg
ret
xlat
rep
and
filds
cmpsl
les
andl
test
lods
mov
int
lahf
jg
repz
das
mov
jno
pusha
dec
add
clc
repz
out
xchg
mov
gs
add
lds
sarb
jecxz
xchg
andb
dec
in
push
pop
xchg
dec
aam
fldl
push
fstpl
adc
push
dec
aas
sbb
jge
lret
dec
or
jbe
dec
sbb
out
lcall
push
sub
data16
into
cwtl
mov
mov
mov
sbb
xor
sbb
push
pop
xchg
inc
sarb
push
adc
inc
inc
out
in
fdivl
data16
inc
cmp
outsl
insl
add
mov
xchg
ret
enter
fcomp
or
test
jp
jb
mov
cmp
jle
xchg
jge
int3
decl
jmp
out
jno
ds
rcl
pop
int3
lret
dec
orl
mov
cmp
jle
adc
jl
movsb
push
dec
push
xor
ss
dec
flds
add
sub
mov
mov
or
xchg
pushf
mov
and
int3
loope
fdiv
popa
inc
iret
data16
jns
pop
inc
mov
out
sbb
add
outsl
js
testb
or
inc
or
test
xlat
mov
cmp
shrb
rorb
popf
jge
xchg
pop
pop
fisubs
rorl
dec
fisubs
jo
in
inc
mov
or
hlt
sbb
pop
lret
add
lret
jns
lods
fsub
xor
mov
into
subl
dec
xor
imul
std
xchg
popf
push
mov
jbe
dec
test
push
imul
sub
out
cmc
imul
dec
or
rcrb
cmp
pop
stos
mov
pop
addr16
lods
in
mov
shrl
lcall
adc
xchg
stos
cli
xchg
fnsave
insb
jl
fs
xor
xchg
mov
in
or
adc
rolb
inc
sbb
lea
jno
sub
sbb
jmp
daa
jb
cmpsl
sbb
scas
ljmp
jl
inc
cmp
xor
inc
lcall
mov
push
fisubs
rol
stos
xor
fwait
push
jb
cmc
mov
int3
mov
aam
pop
nop
pop
inc
lock
mov
bound
pusha
sbb
popf
addb
xchg
in
js
mov
outsb
jmp
mov
gs
gs
fs
xchg
push
mov
cmc
in
idivl
adc
mov
pop
call
or
jae
jb
inc
inc
scas
mov
repz
imul
ds
pushf
mov
cmp
or
iret
pop
sarb
fwait
daa
cmp
outsb
movsl
stc
je
pop
in
push
push
pop
shll
imul
pop
mov
out
ret
repz
movsl
bound
lods
fldt
push
stos
je
loope
adc
popa
xchg
push
fstpt
movsb
adc
cmp
cltd
mov
adc
sub
push
stos
mov
pop
push
sub
mov
nop
adc
ret
and
or
ret
sahf
insw
sbb
jno
jbe
lahf
push
or
mov
and
movsl
xchg
dec
jae
bnd
inc
not
lds
xor
push
inc
adc
rolb
out
cmp
mov
dec
insl
add
in
and
mov
rcl
enter
and
imul
push
mov
insb
and
xchg
push
es
mov
dec
pop
and
sbb
popl
nop
or
imul
add
sahf
xor
popf
ljmp
mov
ljmp
pop
xor
out
add
adc
addl
sub
or
pop
push
sub
jnp
add
out
mov
in
das
in
mov
mov
push
lret
or
xor
sub
or
mov
sbb
pop
dec
dec
in
xchg
adc
adc
pop
push
dec
jae
mov
sub
mov
dec
xor
bound
xlat
cwtl
pop
mov
clc
pop
icebp
sub
add
scas
int
out
jbe
movsl
test
popf
xor
lds
mov
jle
and
or
mov
test
popa
inc
fdivrl
je
cli
cmpsb
sub
pop
or
xlat
xorl
insl
jge
push
or
imul
xchg
xchg
lods
jmp
repnz
push
fisubl
jg
or
mov
repnz
out
dec
es
movb
dec
and
cmp
jge
es
mov
lea
sbb
pop
mov
sbb
ljmp
push
xchg
adc
push
ja
xor
or
pop
xchg
movb
or
and
adc
and
movsl
sbb
mov
fists
mov
mov
rdtsc
jo
hlt
cmp
es
sti
jo
or
jne
iret
inc
mov
sbb
push
test
outsb
daa
mov
mov
leave
sub
enter
push
jno
insb
mov
cmp
scas
pop
sbb
adc
mov
in
iret
cmpsl
aaa
aad
mov
jo
or
cmpsl
add
outsl
mov
push
and
push
popa
stos
adc
xchg
pop
lret
out
iret
pop
add
adc
push
stos
jne
xchg
push
test
or
subb
mov
pop
lods
pop
nop
mov
jecxz
nop
fldl
mov
mov
jge
aas
insb
pop
stos
daa
dec
lea
stc
cmpsl
push
popa
clc
sub
aam
sub
pop
in
push
sbb
sbb
repz
or
iret
jb
add
mov
shrb
subb
pop
leave
lahf
sbb
in
cwtl
dec
dec
inc
push
testl
rolb
sub
in
lods
sub
sbb
bnd
push
sbb
mov
test
jmp
ss
jl
nop
jnp
sahf
faddl
lret
and
sub
xchg
daa
xchg
aaa
push
inc
cli
push
ja
push
pop
dec
loopne
paddsb
aas
and
cmpb
imul
xchg
mov
ret
mov
fbstp
jmp
add
out
je
movsl
push
leave
mov
xchg
das
lock
cmc
hlt
into
loop
add
or
cmp
aas
push
addl
pop
cmp
xor
aad
inc
daa
imul
mov
and
mov
stos
cld
out
pusha
mov
outsb
ret
mov
sbb
lahf
cmp
push
cld
sti
xchg
mov
xor
xchg
aam
adc
fsincos
fwait
push
mov
sub
cmc
out
ret
sbb
popf
dec
push
mov
mov
js
andl
cs
pop
js
cmp
aad
dec
push
in
xor
mov
push
dec
push
test
out
cld
in
cwtl
mov
pusha
cmpsb
xor
repnz
sbb
pop
cmp
mov
sbb
das
adc
dec
xchg
fs
lock
clc
dec
and
jge
or
push
jbe
mov
or
or
inc
mov
dec
scas
sub
inc
add
mov
mov
pop
jno
sbb
push
movsl
sbb
pop
xlat
stos
mov
add
lcall
mov
jle
or
jb
aas
sub
mov
mov
jno
push
cmpsl
dec
push
and
es
xor
lret
inc
or
inc
paddusb
outsl
push
adc
and
jl
out
pusha
jg
xlat
and
stos
jecxz
jno
cmp
shl
adc
stos
addr16
in
xlat
imul
push
jo
fisubrl
pop
and
add
scas
sub
arpl
sar
pop
fidivs
sub
and
dec
dec
push
and
les
inc
scas
ret
xchg
cmp
lret
and
pop
sti
inc
shrb
pop
mov
dec
loop
decl
jmp
and
enter
insb
dec
xor
mov
sub
daa
ljmp
push
add
test
imul
and
cmpsb
lock
xchg
fsubrl
arpl
sub
inc
mov
push
adc
and
dec
sub
repz
js
cmp
inc
test
mov
fstl
leave
mov
jb
add
and
inc
loope
call
mov
or
shrb
arpl
aas
jnp
push
mov
inc
xchg
dec
loope
in
cwtl
fisttps
xchg
and
jecxz
push
xor
gs
inc
push
fwait
bound
xchg
push
into
cld
lcall
jne
mov
mov
je
cmp
daa
sbb
iret
pop
cmpb
mov
ljmp
movsl
mov
mov
jecxz
das
lds
pop
dec
out
inc
adc
dec
mov
or
jl
daa
inc
xchg
aaa
jns
push
rorl
jae
push
xchg
mov
jmp
or
fldl
jle
inc
sub
and
int3
scas
mov
jno
sbb
es
dec
mov
mov
test
sbb
neg
pop
and
mov
fimuls
sub
sub
scas
jnp
inc
push
lret
jl
in
and
lods
jo
push
dec
rcr
sub
inc
or
jle
xchg
pop
jmp
out
sbb
std
loope
in
cmp
xchg
in
icebp
xchg
ljmp
cmp
shll
repz
jmp
mov
iret
pop
fwait
lods
jno
lret
or
insl
and
or
stos
mov
xor
inc
sbb
pop
aaa
xor
into
sub
xchg
and
jbe
mov
mov
subl
xchg
pop
pop
sbb
adc
ljmp
add
ret
jmp
mov
xor
mov
or
add
mov
jns
loopne
iret
int3
jb
repnz
or
or
inc
pusha
lods
in
sahf
and
xor
pop
push
mov
lret
mov
mov
rorb
inc
rorl
fsubrp
loop
ljmp
push
fsubs
ljmp
sub
push
inc
xchg
dec
cmp
cltd
sub
push
test
fwait
push
std
lods
jg
push
into
jmp
sub
jl
or
sahf
or
inc
jne
inc
and
jg
gs
pushf
cmpsb
das
cmp
sarl
rcl
ja
pop
cmpsl
dec
fdivs
dec
xchg
sub
mov
inc
scas
inc
imul
dec
push
movsl
flds
or
dec
in
ja
mov
pushf
pop
lahf
mov
push
push
inc
fisubl
push
arpl
jb
clc
ss
out
pop
outsl
nop
out
pop
mov
sub
fcoms
jae
pop
mov
psllq
push
shl
inc
add
bound
in
mov
lcall
sub
add
pop
lcall
and
pop
test
xchg
ret
es
into
push
adc
fidivs
push
mov
lahf
mov
clc
fisttpl
mov
or
mov
xchg
mov
or
pop
add
jecxz
xchg
or
mov
arpl
push
mov
arpl
arpl
jmp
out
mov
fldenv
push
ja
movsl
push
sti
sbb
idivb
cmp
and
dec
dec
cli
data16
and
sarb
sahf
into
popa
pop
out
inc
sahf
sub
xor
testb
xlat
pusha
sub
jno
pop
ret
inc
std
inc
cld
cs
add
cli
xchg
dec
mov
mov
sbb
fbld
add
es
cld
lcall
push
jno
pop
je
or
scas
add
and
clc
dec
or
adc
rcrl
pushf
xor
cmp
pop
or
nop
sub
sahf
cli
xor
and
inc
and
inc
ljmp
jno
mov
mov
mov
xchg
pop
adc
popa
in
pop
add
ds
or
mov
pop
xchg
sbb
push
adc
xor
and
mov
shll
imul
mov
imul
out
aad
rolb
and
mov
push
mulb
bound
add
lret
jbe
mov
cmpsl
sub
dec
add
int3
push
xchg
and
inc
repz
dec
insb
jle
imul
cs
repz
dec
pusha
orb
pop
xchg
loopne
ds
dec
and
mov
mov
xor
lret
data16
mov
test
adc
lret
mov
and
and
inc
lret
aad
ss
fbstp
repz
push
out
aam
rorl
mulb
mov
xlat
xchg
jg
dec
dec
movsl
mov
mov
jne
mov
xor
push
fsubl
enter
sbb
popa
and
ret
pusha
pop
lret
popa
clc
arpl
faddl
adc
loopne
push
sub
in
loop
andb
dec
or
addr16
mov
mov
pop
adc
mov
lds
xchg
inc
sub
rol
enter
xchg
sahf
and
cmpsl
inc
pop
sub
jae
mov
add
or
xor
in
cmp
out
cld
inc
int
pop
or
xchg
dec
lcall
test
cmpb
movsb
int
jle
or
pop
mov
pop
xor
cmpsw
sub
pop
lock
cmp
jae
sbb
dec
pop
jge
lret
pop
scas
pop
cmp
fs
nop
pop
cmp
enter
mov
pop
test
mov
add
movsl
or
xor
fsubs
sarb
mov
clc
repz
imul
stos
sbb
push
aaa
pop
data16
lods
jmp
std
stos
and
adc
inc
push
in
lea
loop
iret
cmp
mov
pop
lods
and
data16
adc
xchg
fwait
scas
inc
int3
sub
popa
or
xor
adc
lret
bound
and
adc
sarb
arpl
jmp
pushf
vminpd
add
nop
or
dec
inc
jge
push
cs
mov
and
dec
rcrl
mov
add
add
inc
xor
in
cld
adc
mov
xchg
pushf
cld
sarl
add
inc
fcoms
loope
dec
add
stos
es
fsubrl
in
mov
ret
xchg
hlt
jb
cmp
ss
jmp
pop
pop
adc
sbbb
mov
fadd
shrl
lret
mov
adc
aas
scas
mov
and
in
mov
test
add
addr16
rclb
out
cmc
push
cmp
sti
fwait
bnd
repz
push
and
out
mov
outsl
sub
icebp
mov
mov
sbb
jp
fidivs
adc
std
jno
cld
pop
and
cmp
dec
adc
mov
inc
fdivrs
out
inc
ret
mov
adc
pusha
mov
lret
jp
mov
ljmp
test
mov
or
rcll
mov
or
pushf
cmp
inc
out
add
sub
out
ljmp
in
stc
aas
outsb
mov
popf
adc
aad
xor
and
push
and
add
incb
je
sub
pop
imul
cmp
inc
sub
lds
leave
dec
pop
sti
lock
xchg
incb
mov
les
int
call
out
or
rolb
out
loopne
fsubl
xchg
jp
sbb
imul
jecxz
mov
movsl
dec
cltd
je
mov
xchg
ss
push
and
shrl
outsl
shl
ret
scas
jbe
cmp
jne
pusha
lret
xlat
mov
or
mov
push
imul
loopne
jns
push
fwait
cmp
ds
lock
inc
int
insb
fs
jns
push
iret
push
loopne
in
mov
std
inc
mov
dec
jmp
xchg
xchg
fwait
or
and
mov
fiaddl
bound
fsubs
and
sti
mov
push
dec
lahf
nop
jne
ret
movsb
fisubrs
or
xlat
jae
cmp
dec
mov
mov
in
test
imul
cmp
jg
push
repnz
mov
lret
out
mov
push
popf
push
mov
pop
jp
push
xchg
mov
xchg
mov
mov
xchg
call
push
inc
xor
mov
mov
lods
stos
xchg
das
rcrl
lcall
ret
test
leave
pop
push
add
std
les
cld
shl
inc
out
orl
xor
aaa
mov
out
out
xor
push
add
push
sub
cmp
push
inc
pop
cli
outsl
pop
pop
dec
loopne
or
addr16
cmp
fsts
lret
cmp
sbb
dec
test
lret
icebp
int3
in
add
xor
ljmp
repz
test
jp
xchg
xor
mov
pop
clc
mov
cld
iret
jge
add
push
adcl
jo
mov
mov
pop
cmp
jecxz
adc
test
add
cmp
shr
shl
add
mov
jo
dec
lods
mov
mov
add
es
out
jg
or
mov
jo
jnp
stos
mov
daa
adc
data16
jo
or
cmpsl
mov
mov
add
dec
popw
fnstsw
sbb
call
pop
aas
push
cld
cmp
decl
stos
sbb
sar
mov
loop
cli
out
out
xchg
nop
mov
push
jae
das
dec
jmp
xchg
mov
enter
fiaddl
repnz
sub
sbb
mov
pop
mov
pushf
arpl
in
pop
insb
jo
mov
es
sub
dec
stc
pop
xor
popf
inc
sub
xor
add
push
adc
or
add
mov
in
cmp
fnstenv
mov
sti
fistl
loopne
sbb
mov
dec
mov
push
call
in
sahf
sub
inc
push
scas
mov
push
jmp
xor
cmp
mov
into
loop
dec
cltd
mov
leave
and
hlt
ss
repnz
cmp
mov
repnz
div
sbb
pop
jge
mov
mov
jne
popl
push
inc
add
es
adcb
dec
mov
xor
ret
lret
fnstsw
sub
pop
lock
sahf
pusha
nop
xor
arpl
jnp
jge
mov
bound
mov
cli
inc
adc
push
jb
adc
fcoml
sbbl
aaa
pop
repnz
jmp
inc
push
dec
dec
popa
pop
xor
call
cmp
jp
push
and
xchg
xor
cmp
xor
xchg
cmp
mov
or
pop
mov
jb
jns
push
pushf
cli
push
and
sti
scas
pop
repnz
in
push
test
mov
dec
xchg
lock
jne
mov
push
movsl
or
aam
and
add
cltd
or
inc
add
outsl
push
outsb
mov
ljmp
enter
add
xchg
dec
adc
aad
adc
dec
mov
and
mov
dec
arpl
loopne
mov
pop
mov
mov
xor
or
jecxz
bound
ljmp
insl
cmp
insl
inc
negb
scas
mov
mov
mov
xchg
add
sahf
fsubrs
adc
scas
cwtl
das
loopne
jg
insb
inc
xor
jb
pop
insb
mov
shll
cwtl
jne
lret
rol
xlat
or
cs
shrl
pop
mov
add
xor
psubusw
bound
mov
mov
ret
mov
xchg
sbb
sti
dec
adc
out
ret
test
or
cmp
inc
pop
sbb
xchg
dec
pop
test
lods
and
and
lea
outsl
jns
pusha
pop
jno
mov
in
jecxz
fwait
xor
cmpl
roll
out
stos
mov
fcmovne
sub
jmp
daa
fcmovb
pusha
int
popf
dec
loopne
and
and
test
xchg
dec
pop
mov
xchg
scas
mov
or
adc
xchg
or
add
adc
leave
push
jmp
cmpsl
xchg
push
add
cmc
jns
repnz
testb
pop
cltd
xchg
jmp
stos
cld
pop
dec
cs
push
aas
outsb
inc
xlat
dec
and
xchg
add
sub
cld
roll
jno
xchg
in
mov
fidivrl
xchg
fnstenv
cmpsb
inc
mov
cmpsb
inc
fistpl
insl
add
rcll
add
mov
scas
push
mov
mov
mov
rcrl
insl
sarb
dec
jle
lock
into
daa
mov
cmp
ds
rcl
cmpsb
std
mov
test
sbb
jecxz
fistl
leave
lock
mov
mov
adc
fs
cmp
and
int3
or
dec
xchg
pop
test
nop
mov
inc
adc
jns
loop
cli
or
push
mov
movsb
rcrl
dec
jle
jl
in
xchg
and
sahf
clc
loopne
outsl
push
xor
std
and
sbb
inc
imul
adc
or
cli
jb
mov
jmp
aaa
test
cli
xchg
daa
xchg
mov
in
mov
inc
je
fsubr
je
xchg
sub
add
pop
das
push
dec
mov
jle
cld
scas
clc
cwtl
ret
ret
ret
dec
loope
jmp
aas
idivl
out
xchg
mov
push
sub
lcall
fcoml
dec
mov
stos
insl
jnp
cwtl
popa
int
inc
lods
inc
in
cmp
loopne
sbb
push
idivl
pop
pop
pop
xchg
call
addl
xchg
pop
lret
and
gs
xchg
mov
imul
pop
push
aam
mov
and
aaa
test
xor
xchg
lock
mov
lret
outsl
and
pop
push
dec
or
fdivrs
mov
jl
adc
andl
lret
pop
sbb
mov
jae
les
ficompl
sub
cs
inc
dec
jle
push
or
sbb
pushf
mov
out
call
sub
and
rcrb
das
mov
mov
inc
inc
adc
aas
scas
loope
scas
testb
test
push
stos
aaa
movsb
lahf
dec
scas
inc
in
imul
lret
mov
add
jl
iret
popa
pushf
cwtl
jecxz
stos
push
lret
enter
mov
aad
ljmp
aaa
sub
ds
or
popf
lods
mov
test
into
jo
ja
push
in
sbb
pushf
mov
cli
sub
lods
mov
imul
sbb
inc
ljmp
std
xchg
out
xchg
ds
fwait
scas
or
jle
shrl
scas
pop
sbb
jp
mov
cmp
cmpsb
push
aam
fisubrl
cmp
das
xchg
int3
fs
push
jae
sub
mov
popf
and
imul
lret
fwait
ja
fsubr
or
sbb
js
bswap
push
jb
pop
std
dec
dec
dec
incl
xor
sbb
push
lds
ficoml
dec
mov
mov
stos
pop
sub
ret
movl
sahf
rol
dec
sub
push
lods
jae
lods
cwtl
stos
xchg
sbb
xor
inc
pop
add
push
loopne
cmp
jbe
dec
stos
pusha
add
cmp
daa
and
cltd
or
pop
jae
lcall
pop
sbb
test
lock
sbb
jge
aad
push
call
add
in
xchg
sti
add
shrl
dec
sub
pop
in
ret
enter
or
popa
outsb
cmp
or
dec
pusha
jno
js
jle
or
cmp
sbb
imul
nop
pop
out
or
cmp
mov
lods
dec
pop
pushf
cmp
insl
loope
nop
pop
xchg
add
jbe
xchg
das
rclb
popa
aaa
inc
pop
jne
andb
mov
in
shrl
loopne
mov
jmp
pushf
pop
aas
int3
and
fwait
shll
andl
nop
inc
mov
mov
bound
mov
iret
xchg
mov
mov
scas
das
decl
cwtl
popf
dec
dec
dec
push
sub
dec
fmull
notb
dec
stos
icebp
outsb
jae
fidivs
mov
movsl
dec
pop
mov
mov
lret
mov
nop
les
popl
mov
sub
cwtl
aas
div
in
shlb
repz
push
pop
pop
lret
pop
loop
sub
xor
cmp
mov
xchg
lret
lds
xlat
test
or
jecxz
mov
add
mov
test
xchg
in
or
movsb
add
cs
mov
jnp
dec
push
adc
add
and
cmp
mov
mov
and
push
jl
xchg
out
mov
js
or
mov
sbb
pop
cmp
dec
mov
pushf
cmp
mov
inc
fs
push
jbe
mov
mov
adc
into
je
jg
mov
cmpsl
adc
sti
movsb
jl
mov
inc
sbb
stos
xchg
andl
imul
adc
loop
cmp
fsincos
lret
call
jo
mov
fucomp
jg
push
sysexit
movsl
dec
dec
lret
mov
add
stc
push
imul
or
insl
cli
cmp
sbb
push
call
mov
in
push
cltd
adc
push
pop
lea
outsl
test
sbb
mov
fdiv
mov
lods
stc
cltd
xor
or
into
xchg
mov
in
repz
pop
fwait
cs
xchg
cmp
pop
addr16
push
ljmp
outsb
inc
mov
mov
push
cmp
mov
hlt
dec
dec
mov
outsb
or
adc
mov
jmp
lds
sbb
das
sahf
xor
lahf
div
lcall
xlat
call
and
add
outsl
sahf
add
lea
and
or
xor
dec
dec
jl
fwait
jge
push
xor
mov
rorl
lods
dec
adc
imul
pop
ret
sbb
aaa
sbb
inc
sbb
mov
rcrl
push
roll
dec
xchg
cmp
and
test
imul
lock
sub
lahf
ss
mov
ljmp
mov
imul
cmp
jle
insb
das
adc
repnz
in
sub
movsl
inc
xlat
pusha
push
in
mov
out
lods
push
ret
fisttpl
dec
fnstsw
in
jp
into
and
adc
pop
adc
lea
aaa
mov
je
push
nop
or
cmp
cmp
mov
or
imul
lds
pop
inc
jle
and
inc
lods
pop
imul
stos
sub
jns
mov
out
adc
inc
insl
cmp
imul
pop
stos
stos
outsl
stos
lock
push
mov
fidivs
jle
dec
cmp
jno
add
outsl
dec
in
ret
out
add
lods
xor
xor
jl
mov
bound
lock
or
xor
xlat
xchg
xchg
add
lahf
cmp
insb
roll
lahf
xchg
jns
jno
push
sub
in
pop
clc
inc
push
xor
aam
movsb
pop
lods
cld
lret
fsts
pop
xor
mov
lret
fnsave
test
push
inc
inc
sbb
cmp
inc
lahf
jo
fdivs
bound
cli
pop
sbb
xor
testb
lahf
sti
adcb
add
in
xchg
pop
inc
adc
xorl
scas
push
pminub
ss
shlb
imull
mov
jno
and
cmp
int
mov
cwtl
mov
xor
rcll
and
push
xchg
adc
fstps
mov
bound
jae
pushl
lds
xchg
insb
adc
sahf
ja
or
cmp
xchg
add
mov
icebp
mov
xchg
mov
das
bound
cmp
loope
xor
xor
sti
sbb
stc
int
xchg
ljmp
es
repz
mov
cmp
or
push
and
test
lea
cmpsl
insb
cmp
adc
inc
and
cmp
mov
xor
xor
hlt
sahf
loop
mov
ja
or
movsb
stos
xor
jl
jle
xor
outsl
aaa
sbb
out
fwait
jb
pop
ret
sbb
xchg
mov
sbbl
cmpsb
mov
xchg
repnz
or
andl
cmc
mov
mov
ffreep
push
inc
dec
insl
sahf
call
jbe
jg
mov
repz
push
scas
call
push
dec
ljmp
pop
jmp
mov
pop
loop
add
in
fdivl
int3
or
stc
fimuls
sub
or
push
lret
sub
sub
dec
fildll
inc
mov
das
adc
testl
es
mov
fwait
jo
pop
inc
xor
dec
aam
adc
xor
sub
dec
pop
sbb
xor
mov
stc
xchg
pop
lods
int
sahf
cld
sbb
cmp
pusha
insb
sbb
shlb
inc
xlat
imul
scas
lea
xchg
inc
daa
fincstp
rcrb
jne
test
mov
cmp
cmpsl
inc
push
lret
cmpsl
ficompl
adc
leave
mov
sub
shl
mov
dec
jle
adcl
shl
mov
pop
cmp
shlb
mov
shl
lds
mov
das
add
add
add
and
jno
arpl
int3
insb
adc
insl
mov
xchg
dec
sbb
dec
pusha
xor
popa
daa
cmpsb
mov
out
mov
dec
adc
rcrl
outsb
add
cmp
pop
scas
ret
fnsave
cs
mov
push
mov
mov
cwtl
sub
addr16
add
sbb
push
out
xchg
fistpll
int
inc
scas
adc
xchg
push
jecxz
xchg
test
out
sbb
inc
and
xchg
lret
xor
cli
mov
adc
add
lock
arpl
mov
cld
adcl
or
push
hlt
push
pop
ss
es
gs
and
divb
sbb
hlt
aas
int
sbb
cmp
addr16
mov
sub
test
jae
add
enter
xchg
mov
push
sbb
fnstenv
mov
sub
sub
cmpsb
out
clc
sbb
ja
sbb
push
pop
sti
pop
ss
xor
push
mov
cmp
movsl
mov
pop
jle
cmp
pop
faddp
popa
rclb
dec
fdivrl
push
cltd
cmp
dec
jb
shll
gs
xchg
dec
pop
test
or
insl
mov
out
pop
adc
fsubrl
aam
leave
shlb
lock
outsb
test
sbb
mov
xchg
jecxz
out
aam
push
xlat
mov
sbb
fdiv
enter
xor
lret
push
jns
cli
nop
xor
sub
mov
test
sbb
into
pop
sti
das
or
jmp
and
mov
jmp
push
push
stc
inc
xor
xchg
pop
add
cli
mov
call
push
outsl
sbb
add
xor
int3
mov
pop
inc
xchg
mov
adc
call
lcall
pop
cmc
xchg
xchg
mov
push
out
fwait
pop
dec
add
pop
mov
fstpl
negl
jg
cs
popa
fildl
sbb
push
push
rcrl
imul
mul
sahf
push
pop
andl
outsb
dec
cld
stos
mov
out
xchg
jmp
jno
sbb
ret
ret
and
adc
jmp
dec
inc
dec
fldenv
decb
add
movsb
pop
xchg
inc
pop
cmp
push
insl
fsubp
fnstenv
int3
and
push
and
adc
mov
inc
inc
mov
xor
sub
jecxz
jp
mov
shll
push
mov
push
in
test
xchg
sahf
scas
or
cwtl
in
clc
dec
loopne
jne
nop
pop
jmp
mov
add
mov
fadds
bound
xor
stc
into
pop
lea
add
call
cmp
push
bound
and
jnp
sub
rcr
jo
dec
mov
push
jge
es
and
stc
inc
ds
out
ja
jecxz
adc
pop
sbb
popa
rcl
push
subl
cwtl
data16
ret
jle
mov
sub
xorb
int
pop
jg
push
xchg
add
jo
adc
movsb
xchg
xchg
cltd
popa
push
sub
fwait
dec
mov
mov
inc
popa
cmp
out
cli
leave
xor
xor
call
loopne
cmp
mov
outsl
sub
lret
stos
mov
cmpsl
inc
fmull
cmpsb
pop
outsl
pop
sti
sbbb
aad
mov
popa
mov
jle
leave
scas
or
push
lods
or
pop
jl
pop
icebp
jl
ljmp
xchg
or
rcl
stos
lahf
inc
xchg
aas
loop
repnz
aad
dec
imulb
rol
stos
mov
pop
jmp
xchg
jmp
fisubrs
imul
fidivrs
jge
iret
sub
cltd
add
push
sahf
mov
push
jno
xlat
repz
lea
sti
push
push
mov
mov
incl
and
xor
dec
in
fdivr
das
adc
sti
test
sbb
mov
scas
fidivrs
push
mov
out
pop
xchg
ficoml
jg
mov
jne
or
mov
or
cmpps
out
adc
sahf
rcrb
adc
sub
cmpsl
icebp
sbb
mov
mov
dec
and
mov
cltd
ret
leave
mov
and
fwait
mov
jbe
mov
addb
jne
dec
xchg
jg
pop
fnstsw
fwait
sbb
popf
xchg
mov
cmpsb
sub
sub
inc
lcall
test
fisubl
lcall
and
xchg
sbb
fisttps
fidivrl
add
das
mov
loopne
cmp
mov
repnz
lea
pop
cmp
xchg
in
leave
cmp
int
popf
int3
inc
cwtl
cld
pop
inc
and
jmp
mov
jp
dec
repnz
mov
xor
sahf
sub
add
pusha
bnd
jg
lcall
push
pop
cmp
addr16
pop
out
test
cmp
rcrb
cmp
scas
jno
stos
icebp
mov
mov
outsb
in
sub
lcall
or
xchg
mov
mov
jmp
cmp
sbb
mov
pop
int
sbb
mov
testb
in
daa
pop
iret
or
push
or
testl
shlb
fcmovb
add
mov
arpl
inc
fldcw
insb
loopne
pop
outsb
in
test
incb
scas
aam
push
jns
ret
sub
cltd
dec
in
sarb
out
push
xor
mov
sub
sub
ficoms
mov
sbb
out
aam
pop
jbe
cmc
jne
dec
sahf
mov
outsl
adc
scas
push
insl
pop
cli
pop
mov
ss
rorl
pop
mov
pop
lods
mov
in
int
xchg
jl
imul
xor
jmp
fsts
icebp
mov
fcmovnu
jmp
push
pop
mov
push
movb
and
out
or
sub
mov
sbb
sbb
aam
sub
and
aad
add
and
ds
mov
xchg
mov
iret
bnd
inc
pop
mov
mov
and
sarl
add
xor
scas
pop
push
push
pop
fcompl
cmp
push
pop
jl
sbb
test
test
les
adc
jg
mov
xchg
xchg
rclb
push
push
sbb
xchg
stos
mov
lds
pop
inc
jne
add
cmp
mov
je
mov
fcmovnbe
adcb
adc
push
int
lret
or
outsl
mov
inc
popf
xor
or
dec
push
sub
or
mov
stos
sarb
faddl
mov
test
mov
inc
xchg
cwtl
jb
cmp
cmp
fsubs
loop
mov
mov
pop
jle
faddl
dec
call
les
shll
hlt
flds
loop
ret
xchg
pop
sti
or
xchg
shrb
xchg
jbe
or
push
rolb
fisubrs
aas
or
dec
pop
lock
fldenv
movsl
jmp
push
sbb
mov
fs
push
out
pop
inc
std
push
subl
aas
test
jle
push
jecxz
sub
mov
clc
adc
or
cs
push
cmp
pushl
mov
push
mov
insl
xor
vhsubpd
je
jp
dec
sub
notb
mov
xchg
imul
lods
mov
mov
and
rcrb
ficoml
mov
outsb
add
arpl
sahf
push
repz
test
xor
push
les
jne
pusha
ret
jp
inc
pop
jp
outsb
add
mov
sub
ror
cmp
pop
setns
or
stos
cmp
push
mov
test
pop
ljmp
push
jae
or
loope
and
int3
mov
inc
les
push
sub
scas
insl
xor
mov
jmp
sub
cmp
ret
cli
mov
xchg
and
or
mov
sarb
cmp
sahf
push
sub
outsb
ficomps
mov
xor
lods
mov
fisttps
dec
imul
add
pushf
mov
sarb
test
test
xor
lock
enter
lret
fnstsw
cmp
inc
cltd
lldt
aaa
xchg
push
out
rcrl
cmp
es
pop
jns
mov
jo
push
jl
xchg
or
fcmovnbe
outsb
inc
dec
jg
xchg
int
and
lcall
int3
mov
fdivrs
pop
pusha
imul
jno
in
mov
mov
xor
es
pop
xchg
lods
repz
pop
and
cld
xchg
inc
out
int3
rcll
add
and
fwait
cli
pop
ret
cs
pop
jl
insl
test
mov
lods
push
mov
xlat
lods
popf
repz
cwtl
mov
mov
push
sbb
sbb
loop
push
ss
lcall
inc
shlb
or
push
push
jae
pop
clc
std
or
jno
add
aas
jl
dec
pop
jmp
pop
cmp
jb
lds
mov
js
stos
xor
or
push
imul
in
fistpl
xchg
pop
mov
rol
jns
pop
lods
or
loope
jo
mov
in
orb
sub
pop
cmp
enter
add
adc
fmuls
or
mov
ljmp
scas
mov
push
or
outsl
or
inc
mov
into
jmp
stc
mov
mov
jecxz
xchg
inc
mov
xor
push
movsl
outsb
imul
push
lock
mov
mov
jno
mov
mov
lock
gs
dec
lock
lods
imul
bound
ja
leave
dec
scas
cwtl
xor
adc
pop
add
or
pop
movhps
jnp
js
lea
add
aaa
insb
sub
add
test
cltd
add
pop
pop
repz
pop
lods
adc
arpl
ret
data16
and
mov
mov
sti
ret
clc
imul
jno
xchg
out
dec
loop
mov
lock
and
dec
mov
lods
jp
push
cmpsl
or
jae
jecxz
sbb
xchg
subb
insb
sub
mov
pushl
push
add
sub
aad
fisubs
xchg
les
int
xor
cli
ljmp
mov
in
test
inc
loop
lods
fidivs
push
shlb
cmp
sbb
add
and
aaa
inc
aam
cmp
xor
shlb
les
orb
mov
xor
cmp
inc
fdivrs
fwait
or
add
leave
or
push
add
cmp
xchg
mov
dec
xchg
dec
aas
xchg
ja
add
jno
aad
jne
mov
aas
fsubl
mov
mov
cmpsl
xchg
std
mov
push
push
incl
ljmp
insb
out
mov
xor
xchg
clc
in
cld
int
push
push
or
mov
cli
and
repnz
cmp
and
jp
dec
lods
enter
or
mov
push
repnz
jecxz
adc
cli
mov
and
daa
iret
adc
stos
adc
stc
sbb
and
dec
ds
js
pop
jno
adc
fbstp
mov
sbb
ds
jp
shlb
loop
movsl
idivb
pusha
cltd
push
jmp
xchg
movsb
int3
ret
adc
cmpsl
into
cmp
cmc
ja
or
cmpsb
xchg
sub
mov
jne
jne
inc
cmpsb
add
fimuls
loop
dec
int3
lods
xchg
xchg
inc
ret
int
jae
call
or
andb
lret
pop
sahf
mov
and
mov
rorl
les
cmc
or
or
mov
push
sub
xchg
arpl
push
in
testb
ret
hlt
movsb
scas
fstp
int
mov
fstpt
je
lret
bound
xchg
xchg
add
jbe
addb
mov
enter
rorl
call
sti
pop
mov
nop
test
lcall
add
lds
add
cld
data16
xchg
test
jbe
mov
enter
ljmp
pop
jns
push
ss
and
fldcw
call
testb
mov
adc
aam
das
inc
scas
loop,pt
popf
iret
ret
xchg
xchg
push
mov
jmp
loopne
adcb
inc
fiadds
pushf
inc
push
orb
push
xor
adc
andl
adc
or
into
subb
mov
jmp
addr16
xlat
testl
inc
lret
imul
test
push
dec
sbb
or
jnp
lahf
aaa
fldcw
jb
mov
cs
sub
mov
popl
cs
outsl
shrl
pop
mov
loop
adcl
sub
inc
arpl
iret
es
add
dec
dec
mov
jl
add
sti
lea
stos
rclb
into
lret
xor
int3
ficomps
frstor
add
mov
sbb
lcall
xchg
cwtl
das
xabort
xor
rcrl
add
sbb
test
lahf
out
outsb
scas
lea
fmuls
jmp
in
rorl
test
jne
arpl
inc
push
jl
lcall
push
and
es
xlat
cmc
je
std
xchg
jae
clc
push
sub
sbb
inc
loope
clc
arpl
xchg
inc
loopne
cmc
xchg
jmp
fdivl
inc
repnz
xor
pushf
or
ret
bound
cmp
or
dec
adc
pop
xchg
incl
test
mov
cmp
cwtl
icebp
notl
imul
sbb
jp
jmp
test
lret
stos
les
pop
mov
pop
data16
rcll
sub
adc
lahf
icebp
psrlw
xor
pop
adc
sbb
mov
cmp
scas
mov
pop
rcl
rolb
pop
aaa
or
jg
scas
inc
lcall
lcall
and
sbb
lahf
shrb
insl
pop
push
lock
mov
sub
scas
leave
sub
cmpsb
jb
fcomp
mov
mov
sbb
jle
sarl
mov
lret
push
mov
inc
out
test
loop
fnsave
nop
sub
popa
scas
cmp
sbb
cmc
and
cmpps
inc
sbb
mov
jp
ficoms
inc
xlat
pop
arpl
out
into
fdivrl
inc
loop
mov
gs
jp
shld
xor
mov
out
mov
xor
dec
in
jg
movsl
mov
pop
xchg
and
mov
mov
jb
xor
rolb
push
pushw
push
popl
scas
jmp
push
movsb
or
xchg
cmp
mov
loope
jp
idivb
push
mov
push
mov
das
ss
popa
lret
fs
enter
arpl
sbbl
push
mov
or
mov
and
jmp
mov
jp
xorb
loop
ds
pop
mov
test
lea
cmp
pop
int
nop
jmp
xlat
mov
sbb
iret
lcall
roll
mov
adc
push
dec
cli
xchg
xorb
xchg
cmp
insl
aaa
dec
les
adc
mov
xchg
movsb
push
mov
push
jg
mov
in
fdivrl
js
int3
mov
test
into
add
inc
fcmovnbe
xlat
dec
ficoml
pop
mov
or
in
pop
pop
dec
jge
pop
mov
cmp
cwtl
cld
or
out
cld
lcall
push
and
pop
ljmp
outsb
pop
cmpsb
adc
mov
jecxz
jb
lods
inc
mov
sbb
pushf
shll
fst
jno
or
pop
outsl
std
stos
mov
xor
lods
push
sbbl
push
mov
imul
lock
mov
lret
push
aad
cwtl
xor
loopne
sub
fs
std
sbb
sub
cmp
push
loop
cs
push
add
inc
add
mull
jno
sbb
into
mov
cwtl
push
popf
push
clc
pop
cmp
xchg
int3
jo
cmpsb
xchg
inc
fcomps
xchg
movsl
test
fcompl
ss
adc
mov
and
mov
inc
xor
pop
ret
push
imul
lahf
add
in
cs
sahf
lods
jns
jl,pn
xchg
jb
das
ret
fiadds
hlt
insl
mov
out
insb
add
cmp
jmp
stc
lcall
mov
loope
in
xchg
sub
inc
pop
sub
push
dec
jae
mov
mov
lret
pop
std
gs
inc
mov
mov
cmpsb
mov
dec
xor
pop
adcl
sub
adc
in
xchg
xor
rcr
stc
pop
dec
push
popf
repz
pushf
rolb
cld
sbb
dec
int
mov
addr16
cld
leave
cmpsb
iret
push
mov
sub
push
pop
rcrb
mov
jae
rcr
sbb
xor
outsl
insl
mov
add
decb
cwtl
inc
lock
fs
dec
cltd
cwtl
jno
push
ffreep
or
loope
lods
das
mov
int
call
cli
xor
scas
arpl
jl
push
mov
es
push
mov
push
popa
inc
inc
mov
aad
fcompl
loopne
cmpsl
lock
pop
adc
lcall
cmc
mov
mov
add
outsb
add
push
in
adc
and
dec
mov
sub
pop
mov
ret
cwtl
add
mov
fbstp
fnsave
out
add
insl
add
imul
push
push
call
inc
mov
pmulhw
nop
push
scas
jge
inc
add
imul
adc
sbb
push
pop
pop
lahf
pushw
xchg
cmpsl
sbb
daa
sub
daa
out
dec
fs
mov
xor
scas
xchg
loop
movsl
scas
ss
das
mov
push
rclb
sahf
cmp
jb
in
cmp
shlb
adc
cmp
jmp
mov
pusha
jge
cld
js
add
xor
pop
mov
stos
ret
adc
fildll
jne
mov
mulb
push
adc
ja
xchg
test
les
add
icebp
js
stos
lds
fwait
cs
mov
push
add
xchg
mov
leave
in
in
push
fcmove
lret
mov
movsb
int
inc
hlt
test
lds
sbb
arpl
test
push
push
mov
ja
xor
push
pop
sub
popf
sub
inc
jo
jno
sub
jge
les
or
aad
in
jle
inc
push
mov
movsb
cmp
inc
push
pop
pop
cmp
xchg
dec
fdivrs
rol
push
mov
xchg
adc
call
shrl
pop
dec
in
inc
jg
lahf
and
mov
popa
clc
adcl
jg
rol
jnp
hlt
sbb
int
xchg
mov
out
jb
ficompl
sbb
pop
sti
pop
mov
divb
or
popa
sbb
andl
stos
and
mov
sub
or
mov
mov
pop
inc
adc
lcall
aas
cmovo
in
movsb
jo
lcall
clc
sub
mov
mov
add
fistpll
push
pop
in
pop
dec
push
popf
jp
ljmp
jg
mov
mov
jge
xchg
mov
mov
in
cld
and
cmpsl
xor
and
mov
pushf
popf
jl
inc
jns
ss
lock
adc
push
ljmp
mov
pop
fnsave
xchg
mov
mov
scas
jno
movsb
sbb
aad
fdivs
and
js
and
jne
push
ja
adc
lea
lods
scas
inc
fstpt
cmpsl
bound
nop
adc
xchg
lock
add
xchg
xchg
enter
jmp
mov
call
fdivrl
or
movl
xchg
mov
push
mov
shrl
fisttpll
xor
addr16
pop
pop
or
lahf
test
je
mov
sbb
data16
dec
hlt
mov
xchg
std
mov
out
and
in
cmp
lret
in
pop
jb
sbb
push
inc
add
sbbb
lea
and
in
je
dec
cmpsl
movsb
call
dec
dec
hlt
sbb
jae
gs
lea
mov
dec
addr16
cmp
pop
stos
mov
loop
xchg
adc
push
inc
jnp
sub
push
cmp
jecxz
cwtl
aad
cld
xchg
inc
inc
lock
or
testl
notb
imul
mov
and
mov
imull
inc
lret
jbe
cld
pusha
push
sub
subb
mov
mov
mov
ja
cld
stos
push
stos
push
rol
xchg
mov
pop
test
roll
jne
dec
xchg
iret
mov
pop
sbb
and
mov
sub
or
push
mov
cltd
int3
scas
out
fcoms
cmp
cmpb
and
jne
mov
cld
mov
cmp
pop
repnz
sbb
mov
dec
scas
clc
pop
cvtpi2ps
add
xor
fs
or
jmp
sahf
fnsave
pavgb
outsb
lahf
lods
mov
shl
repnz
data16
pushf
inc
les
in
or
lret
jbe
adc
je
add
xchg
lods
pushf
sbb
sbb
inc
push
sub
scas
and
mov
jg
les
and
and
sub
out
imul
cmp
test
into
pop
sub
lcall
mov
push
inc
pop
mov
movsl
sub
dec
enter
test
sarl
xor
das
pop
jns
cmp
adc
stc
ds
push
and
and
popa
data16
xchg
popf
or
jmp
or
jle
fadd
test
test
sahf
mov
sub
pop
cwtl
lahf
sti
call
cmp
fnstsw
xor
icebp
or
inc
xor
sbbb
xor
dec
push
imul
repz
xor
mov
mov
rcl
bound
add
sub
mov
pushf
push
cmp
jp
xchg
xchg
into
lea
rolb
icebp
insl
in
lahf
stos
adc
or
cmpsl
push
inc
xchg
and
jae
jle
movsl
rep
add
cmp
rcrb
cltd
sti
popa
clc
out
xor
jns
int3
testl
cmp
jge
das
test
jne
pop
add
inc
sbb
jb
mov
mov
sub
inc
sbb
adc
xor
lret
jnp
dec
movsl
jle
adc
jecxz
insl
push
xorl
cmpsl
sub
jae
mov
stos
xor
push
cmp
rorb
imul
shll
andl
stos
cwtl
push
sbb
add
lcall
xchg
jmp
add
xchg
mov
rcr
add
add
or
lcall
lcall
out
or
test
adc
push
sbbl
or
xchg
mov
data16
dec
dec
pop
xor
insb
cltd
xor
add
sbbb
cmp
popa
cmp
fs
or
sbb
xor
cld
cmp
jno
cli
cmc
and
es
add
mov
jmp
je
mov
sti
pop
sbb
mov
ja
pop
pop
popf
inc
add
pop
repnz
sbb
nop
mov
ljmp
cmp
jge
fisttps
xchg
in
xor
rclb
je
in
jmp
int3
stc
ss
dec
add
xchg
sub
or
jmp
out
mov
dec
adc
xor
push
test
dec
outsb
mov
aad
test
inc
arpl
lds
push
add
or
loope
push
cmp
pop
add
adc
repnz
sbb
sbb
sbbl
xchg
dec
loope
ds
mov
jmp
lock
loope
push
add
out
push
pusha
push
dec
push
mov
popf
mov
loopne
gs
or
mov
sub
stos
add
sti
cmp
jb
punpckldq
push
jne
in
xchg
push
movsl
std
mov
push
jb
push
mov
sbb
or
test
sahf
sbb
inc
scas
into
sbb
mov
nop
sub
movsl
icebp
jae
inc
movsl
adc
inc
push
enter
aaa
stc
mov
push
dec
xchg
sbb
ljmp
psubq
pop
loopne
pusha
stc
shlb
jae
push
mov
mov
inc
xor
dec
jno
ficoml
push
adc
arpl
out
lock
es
cld
pop
mov
adc
or
dec
inc
and
ljmp
into
push
push
daa
decb
in
fwait
in
movsb
mov
jae
les
insb
mov
inc
lcall
hlt
mov
lret
daa
mov
xor
xchg
sub
out
push
sahf
les
cwtl
loop
or
mov
cmp
mov
leave
pop
rcrb
jb
xchg
jo
int
inc
fiaddl
scas
popa
or
adc
pop
aam
mov
mov
iret
insl
bnd
outsb
sub
and
addl
pop
or
adc
shrb
mov
dec
push
gs
xchg
dec
dec
insl
into
gs
outsb
jns
xor
in
adc
adc
mov
sub
pushf
cmp
sub
cmp
pop
insb
lcall
mov
les
loop
and
pushf
push
jno
dec
int
mov
aad
mov
pop
repz
mov
push
cli
mov
pop
sbb
ljmp
in
in
icebp
fnsave
shrb
or
dec
inc
dec
sub
pop
lds
rol
pushl
sbb
xchg
js
or
push
icebp
aam
xchg
bound
ja
or
lock
data16
cmpsb
cmp
pop
scas
fadds
rorb
daa
mov
jns
xor
mov
pop
insb
dec
daa
mov
push
mov
sbb
leave
rep
mov
movsl
leave
cmp
add
mov
cmp
cmp
or
test
jg
pushf
xor
xchg
int3
lret
fsts
cmp
into
imul
int3
popf
and
mov
xchg
int
frstor
mov
out
dec
cmp
jp
outsb
shl
call
adc
leave
pusha
dec
pushf
rorb
stos
and
xlat
out
popf
dec
pop
adc
aaa
rorl
mov
das
adc
xchg
add
pop
adc
pop
out
push
xor
cmp
jb
inc
pop
push
call
jecxz
outsl
daa
inc
aaa
adc
sub
out
stc
cmp
or
xlat
paddd
sbb
leave
fnstenv
and
mov
aaa
fisubrl
push
mov
out
ret
xchg
cmpsl
roll
std
pop
cmp
cwtl
decb
mov
or
pop
mov
lds
mov
cs
mov
xchg
mov
int3
ja
adc
xor
mov
inc
and
pop
mov
cmpsb
ficompl
test
sub
sbb
push
mov
fisubl
adc
in
es
xchg
loop
adc
or
out
andl
fldcw
jp
push
xchg
xor
arpl
or
lea
ds
leave
flds
das
push
push
inc
lret
sub
mov
mov
xor
xchg
push
jl
jge
mov
shll
fdivrp
out
arpl
rcl
or
pop
imul
mov
arpl
insb
sub
ret
jle
insl
adc
push
cmp
mov
daa
outsl
add
sbb
sbb
pop
mov
data16
and
push
outsl
push
fs
xor
xorl
mov
ud0
inc
mov
xchg
inc
lcall
rcll
ret
adc
and
orl
xchg
cltd
mov
cmp
popa
rolb
xchg
cmc
or
icebp
inc
pop
mov
sub
cld
mov
jg
cmp
gs
pmaxsw
insl
push
jg
lods
mov
icebp
or
std
jns
das
sbb
inc
dec
mov
out
add
loope
adc
lahf
in
lcall
scas
xchg
xorl
je
rcr
xchg
pop
pushf
inc
cmp
gs
xchg
mov
sub
add
out
and
gs
aam
arpl
cli
in
test
cmp
mov
cmpsb
adc
mov
sub
movsb
xchg
inc
push
mov
dec
ss
lds
aad
sbb
dec
pushf
sbb
jmp
repz
xor
mov
ja
push
xchg
dec
ret
cmpsb
repnz
movsb
es
outsl
mov
xchg
jbe
push
mov
add
repnz
fnstcw
pop
pop
xor
and
fiaddl
jbe
mov
sbb
sbb
scas
leave
cli
sbb
sub
inc
cltd
xor
icebp
jl
xchg
xchg
loop
mov
pusha
cmp
test
enter
xor
mov
xchg
sub
ret
in
inc
mov
loope
hlt
call
jecxz
ss
popa
out
dec
int
jnp
sub
lods
inc
xor
movsb
lahf
xchg
push
adc
mov
popf
cmp
push
dec
insb
jle
aas
pop
popf
xchg
jp
lahf
imul
insl
in
lahf
adc
ja
lahf
popa
neg
iret
jmp
test
xor
mov
cmp
lcall
mov
mov
fwait
add
lock
push
mov
or
sub
push
hlt
xchg
add
enter
inc
aad
xchg
sbb
sub
or
test
lcall
push
std
fnsave
jns
dec
aaa
push
mov
rcll
hlt
out
sub
arpl
jp
push
jno
leave
iret
xor
and
arpl
pop
xchg
js
mov
ja
iret
jnp
or
mov
int
push
pop
mov
mov
jo
xor
stos
push
aaa
push
mov
push
adc
aad
sub
ucomiss
sbb
sub
imul
xchg
mov
cmp
subb
mov
add
xchg
jae
fldt
shll
fcomi
cmp
add
cmp
xor
std
dec
addr16
adc
daa
xchg
jmp
push
mov
insb
add
jecxz
scas
scas
int
sbb
aad
push
mov
cmpsl
xchg
repz
sub
cmp
cld
bnd
jmp
out
pop
sahf
fildll
xor
xor
xchg
cmp
jb
add
sub
sub
sub
xchg
sti
inc
test
jl
jg
out
xor
sbb
mov
and
inc
rclb
negb
out
lcall
popa
imul
push
fnsave
push
fs
ret
and
or
sub
mov
imul
cmp
cmp
cmpsb
rorb
mov
clc
xchg
lea
fmuls
cmp
mov
loop
mov
add
cmc
flds
pop
push
ja
cwtl
push
fsts
call
or
jae
ljmp
adc
data16
lods
jg
aam
add
aas
aam
je
jb
aaa
movsl
fdivs
sarb
mov
inc
sub
mov
cmpb
aad
xchg
jb
out
mov
add
pop
push
add
jbe
sbb
outsl
loop
mov
aad
xchg
out
mov
push
jle
inc
in
addr16
arpl
int
scas
enter
jp
xlat
or
xchg
lods
jl
push
hlt
push
jle
jb
fists
mov
stc
or
lods
inc
xchg
ljmp
or
mov
mov
stos
adc
nop
cs
lds
adc
ss
mov
push
test
mov
nop
jo
adc
cmp
or
shlb
or
hlt
notl
jno
fmul
pop
xor
bound
add
or
call
pop
dec
jo
je
in
fldenv
inc
loope
push
inc
fdivs
hlt
nop
or
pusha
jl
and
adc
add
jbe
and
adc
aaa
xchg
sub
bnd
jp
adc
or
sub
adc
outsl
movsb
xor
subl
and
aam
addl
test
out
dec
push
frstor
cltd
repnz
dec
add
fimull
pop
push
in
cmpsb
lods
push
neg
pushf
jb
test
pop
mov
xlat
enter
cmp
dec
xchg
aad
call
pusha
mov
cmp
dec
xor
jbe
outsl
jmp
in
add
sub
push
cld
or
cmpsb
outsl
push
xlat
and
dec
movsl
xchg
mov
into
xor
jb
jb
and
jns
cmp
test
inc
cltd
insl
dec
pop
cwtl
push
shrb
into
movsl
jnp
pusha
icebp
xchg
sarl
push
pop
mov
xor
lds
test
inc
adc
ja
adc
popa
lds
push
jecxz
pop
sbb
std
inc
dec
mov
daa
adc
int3
pop
jecxz
scas
mov
mov
aam
sarl
sub
pop
lret
sub
std
dec
stos
cmp
adc
mov
mov
aad
ds
inc
lock
test
xchg
loope
and
je
popf
xorl
xchg
xor
lock
mov
ds
pop
loopne
mov
sbb
push
mov
mov
rcl
stc
adc
xor
xor
pop
sub
mov
jp,pt
mov
xchg
mov
ds
or
cmpsb
mov
jle
fidivrs
add
imul
push
popf
mov
xorb
jns
mov
inc
xor
in
fisubrs
add
add
popa
clc
cmp
adc
or
call
cmp
push
push
loope
popl
addr16
inc
fsubr
ja
sbb
sbbb
adc
pop
ja
jl
sahf
je
pop
mov
add
popa
mov
scas
adc
cmp
cli
mov
add
js
jmp
xor
in
mov
es
xchg
mov
mov
sbb
mov
jnp
and
ss
aam
subl
mov
out
lret
jns
bound
jnp
fidivl
aam
or
out
test
or
daa
mov
dec
cmpsl
call
mov
xchg
imul
xlat
mov
test
jnp
ret
call
mov
jecxz
loop
jge
dec
xor
movsb
mov
inc
cmp
fs
cltd
test
aas
lods
xchg
and
andb
cmp
test
orb
in
inc
fidivrs
pusha
xor
in
clc
imul
das
aam
xlat
je
sbb
lds
repnz
icebp
add
jb
loop
xor
ret
roll
out
in
fs
outsb
fists
xchg
push
lret
add
cmpsb
cltd
mov
jbe
jmp
sbb
out
inc
sti
mov
lea
movsl
push
mov
jl
fmul
push
xor
imul
pop
in
ret
call
out
jnp
in
insl
sub
pop
rcrb
loope
xor
cmp
inc
mov
sbb
sbb
out
or
adc
mov
out
enter
inc
in
lods
into
enter
test
lea
xor
lock
addr16
inc
xor
adc
subb
mov
ret
mov
call
cmp
xor
xor
lock
or
aaa
aam
cs
dec
push
or
ror
dec
push
mov
out
icebp
cmpsl
pop
aaa
mov
mov
lahf
movsl
dec
push
ret
stc
sbb
push
mov
jbe
lret
dec
cmp
std
xchg
negb
fdivrp
and
popa
rcll
cmp
push
dec
es
divb
add
lea
push
mov
rol
jecxz
jge
sbb
test
push
add
mov
jnp
sbb
mov
addr16
xchg
addb
cs
or
dec
imul
stos
cmp
lods
sub
pop
ret
not
mov
adc
lcall
int3
movsb
jae
lea
pshufw
sub
cltd
push
push
daa
mov
inc
retw
and
dec
dec
jmp
pop
lgs
cli
pushf
pop
mov
push
enter
sub
fidivrl
adc
aad
cmpb
or
in
inc
pushf
daa
lods
cmp
jle
mov
push
mov
adc
dec
cwtl
mov
data16
mov
into
mov
sbb
push
aad
dec
scas
dec
xorb
or
cmp
sub
out
leave
xor
mov
cmp
daa
std
inc
pop
pop
test
cs
inc
and
roll
fstl
dec
pushf
inc
push
call
imul
cld
outsb
cmp
fisttpl
add
and
xor
call
in
pop
inc
aaa
movsb
stc
adc
mov
cld
dec
mov
cmp
cmp
add
stos
jmp
shr
aas
stos
stc
mov
scas
mov
dec
imul
orb
push
stos
lcall
stc
ret
pop
lds
xchg
ret
lods
cmp
add
push
fnstcw
xor
xchg
lods
cltd
je
hlt
push
cmc
aad
xlat
sbb
mov
sub
jae
mov
pop
add
std
sub
mov
into
jne
shll
mov
das
mov
cmp
ficoms
rcr
and
mov
mov
int
aam
decl
mov
test
xchg
sub
aaa
dec
dec
movsl
xor
cmp
adc
add
inc
mov
mov
int
leave
repz
mov
mov
dec
pop
cmp
mov
push
or
popa
pop
cltd
mov
xchg
stos
mov
dec
cmpsl
sarl
lock
sbb
adc
push
in
and
sbb
popf
stc
bound
outsl
add
xchg
rclb
dec
movl
aaa
push
jbe
jp
pop
pop
mov
push
scas
mov
iret
xchg
test
xchg
repz
mov
xchg
cmc
js
scas
into
lcall
in
cmp
cmp
rol
repnz
outsb
add
dec
lret
mov
cld
sub
xchg
stos
push
enter
jecxz
fstpl
push
test
mov
mov
jp
shlb
jmp
imul
jg
iret
push
fwait
rorb
jmp
mov
ja
adc
push
repnz
les
or
mov
lods
sub
fcoms
daa
sbb
imul
ret
out
add
inc
mov
and
cmpsb
insl
fmuls
insl
loopne
inc
mov
enter
xchg
xor
or
test
push
outsl
lret
dec
dec
mov
push
test
jle
adcb
inc
es
jne
ss
or
mov
addr16
ja
mov
pop
or
dec
insb
popa
sub
incb
sarb
popf
popf
dec
hlt
ljmp
popf
cwtl
xchg
mov
mov
mov
data16
inc
xchg
mov
ret
inc
arpl
mov
in
push
sub
int3
pop
dec
sbb
out
addb
mov
push
int3
icebp
in
cli
popf
rclb
pop
and
jecxz
add
call
cmc
dec
mov
sbb
nop
adc
push
pop
icebp
ficoms
push
scas
aad
and
mov
out
enter
push
jne
out
or
mov
push
hlt
jbe
add
inc
push
in
mov
or
add
mov
bound
mov
inc
icebp
dec
movsl
cmp
sbb
pop
cmpsl
inc
mov
adc
inc
lcall
in
mov
xchg
imul
xchg
leave
hlt
sub
push
xchg
iret
mov
add
add
into
fs
loopne
xchg
fstl
pop
adc
les
fcoms
inc
nop
stos
xlat
push
mov
popa
loop
jp
fwait
ds
or
xor
sub
sarb
jecxz
inc
mov
push
adc
data16
bound
pop
jge
test
or
pop
and
cmp
jmp
mov
sbb
sub
test
pop
mov
or
sbb
in
je
xor
jns
push
xchg
sub
sbb
cli
add
push
inc
or
in
mov
js
pop
clc
lret
out
sbb
ja
notb
adc
dec
lock
je
add
xchg
clc
pop
inc
cltd
mov
lods
inc
scas
mov
fidivl
xor
sbb
fstpt
pop
ss
pop
stc
mov
adcb
insl
mov
out
xchg
jnp
mov
lahf
in
inc
xchg
gs
xor
out
enter
push
les
stos
out
pop
pop
dec
pop
nop
xorb
shlb
pop
incb
scas
sub
or
and
pop
mov
frstor
jb
push
in
pusha
and
pop
dec
xorl
into
in
icebp
dec
cltd
out
push
sbb
add
idivb
xchg
stos
idivl
sub
cli
push
cs
int
pushf
int3
js
lods
push
or
push
test
mov
mov
fidivl
clc
jl
jge
clc
repnz
cmp
ljmp
adc
jno
fidivs
pop
pop
ja
push
mov
cmpsb
stc
and
push
dec
xor
pop
loope
iret
cltd
sub
jmp
inc
push
cmp
or
push
push
dec
inc
mov
jbe
cld
aaa
jl
dec
mov
jmp
mov
mov
add
outsl
shlb
adc
std
jecxz
cs
cltd
out
mov
fisubl
ret
pop
push
push
xchg
test
jo
stc
jae
cwtl
cmp
insb
ror
clc
jae
jns
mov
lahf
mov
xlat
bound
mov
test
lods
lcall
or
push
lods
inc
xor
ja
insb
jne
pop
mov
sbb
ja
pop
test
scas
data16
das
mov
test
dec
dec
jecxz
stos
daa
outsl
mov
imul
mov
inc
outsl
mov
sahf
xor
jne
push
inc
stos
xchg
pop
lods
sti
scas
js
jns
xor
and
orb
scas
mov
jnp
dec
mov
in
in
insl
adc
xchg
push
out
icebp
sbb
movsb
movsl
iret
pop
cmp
inc
inc
mov
mov
orl
inc
pop
mov
and
inc
pop
test
sbb
xchg
dec
shll
outsl
ss
mov
xor
ljmp
xor
pop
std
push
inc
das
jge
in
sub
xchg
jae
test
jmp
lret
sti
stc
add
daa
inc
pop
pop
mov
jne
dec
seta
jb
mov
shrb
inc
mov
in
push
inc
in
popa
xchg
dec
push
xchg
mov
fnstcw
pushf
leave
lods
xchg
add
cwtl
pop
and
loop
leave
xchg
sub
jg
ljmp
or
add
push
rcrl
mov
dec
enter
lods
cmp
aad
mov
stc
icebp
mov
fmull
add
and
xchg
aaa
dec
sub
cmp
mov
and
cmp
aad
out
cmp
leave
fcomip
testl
dec
aas
push
dec
dec
iret
pusha
shr
mov
rcrb
mov
mov
mov
iret
std
xchg
std
add
fstpt
add
ds
sbb
dec
or
jb
jecxz
push
inc
or
in
pop
shll
push
fwait
pushf
xor
sub
mov
fstpl
add
cmpsl
inc
push
pop
movsl
mov
xlat
jns
sbb
sub
sbbb
imul
dec
xchg
mov
and
xchg
daa
mov
mov
inc
push
adc
add
dec
xor
testl
int
cld
xchg
ficompl
cmpsb
push
pop
stos
aad
dec
mov
cmp
pop
xchg
sub
stos
mov
ss
aam
pusha
pop
sub
int
cmp
pop
outsl
push
out
test
lret
outsb
add
ss
xor
push
push
je
add
sub
test
mov
cmp
fsubrs
push
movsl
sbb
sub
lea
lret
lret
adc
fstpt
adc
mov
xchg
outsl
leave
jb
out
add
dec
jecxz
mov
icebp
jno
sbb
arpl
jno
xchg
divl
scas
mov
jne
add
lods
cmp
mov
fstpt
fdiv
dec
cmp
sub
push
lahf
call
push
cld
jge
pop
push
mov
ljmp
mov
xchg
rcll
sbb
cmp
lods
add
fisubrs
notb
inc
jb
jne
xor
outsb
push
aaa
out
movsl
fnstsw
push
into
fiadds
mov
inc
xchg
sub
mov
sbb
out
aaa
lahf
cmp
push
jecxz
lcall
fldt
cmp
into
cmpsb
lds
ret
jmp
repz
jnp
sub
ss
pop
dec
pop
pop
mov
jmp
sbbl
xor
int
lods
imul
cmp
outsb
imul
push
pop
mov
inc
ds
xchg
test
add
sbb
pop
sub
sbbb
push
inc
dec
out
bound
outsl
adc
shll
push
mov
rcll
movsl
rcl
jns
jecxz
repnz
aas
aas
jle
fmuls
lods
pusha
fisttpl
lret
insb
push
movsl
pop
adc
inc
imul
dec
jl
mov
es
xor
pushf
xchg
lods
and
mov
mov
adc
push
fcomps
loope
cld
fsubrl
and
int
icebp
lret
pop
adc
cltd
sbb
sbb
or
dec
push
or
xchg
bound
shlb
outsb
insl
cld
sahf
test
xchg
and
sahf
pop
mov
cmp
dec
cmp
add
mov
addb
fs
ror
outsb
leave
fsubrl
aaa
fwait
std
dec
add
out
test
and
in
lds
pushf
negb
mov
xchg
nopl
inc
scas
repz
xchg
popa
xchg
push
out
sbb
ds
loopne
add
inc
sbb
movsb
adc
jg
jge
lds
dec
aad
jge
sub
aad
adcb
test
sarl
outsl
imull
pop
ret
leave
adc
test
mov
in
xlat
daa
adc
inc
lcall
outsb
mov
loope
pushf
test
or
adc
push
adcb
inc
cld
aaa
xchg
ds
outsl
mov
xchg
call
cmp
push
mov
mov
aad
inc
lret
out
icebp
mov
push
pop
mov
frstor
jge
xchg
dec
jl
xor
mov
push
and
ja
jg
cmp
push
outsb
int3
popl
imul
pop
xor
xchg
or
add
lahf
xor
popa
cmc
mov
es
out
xchg
fisubs
test
and
outsb
jae
pop
nop
xchg
popf
test
ja
in
outsb
lcall
sarl
stos
outsb
add
mov
mov
lods
jae
fstpl
popl
inc
and
ljmp
fdivl
push
icebp
sub
jmp
mov
jb
mov
jbe
dec
push
dec
stos
adc
fdivs
pop
shrb
das
push
and
jge
cmc
adc
jbe
add
stos
fcmovne
xchg
test
adc
and
out
inc
call
or
roll
lds
sub
negb
pop
xor
int3
sub
dec
pop
sahf
fsubl
jne
push
std
es
clc
repz
sub
xor
mov
shll
inc
popa
fwait
mov
mov
loope
sbbb
movsl
add
jge
repnz
not
rcll
bound
push
and
adcl
and
sti
xchg
in
mov
mov
sbb
test
ja
push
test
lea
ret
xchg
xchg
xchg
pop
leave
push
push
adc
and
push
xor
int3
loop
cmp
cmp
jecxz
arpl
xchg
lahf
dec
dec
popf
shlb
or
mov
pushf
bound
pushf
dec
pop
lock
cmp
jge
sbb
int
cs
pop
cmc
inc
jbe
ds
sbb
push
or
rcrl
mov
pushf
or
int
mov
stc
jbe
pop
insl
out
stc
adc
mov
int
jo
mov
ret
mov
push
and
fldt
out
jmp
hlt
aam
push
inc
mov
outsb
stos
inc
xor
adc
mov
jge
jmp
clc
sub
fwait
jbe
pop
xchg
jb
stc
fldcw
stc
jns
mov
xchg
mov
ficompl
cmp
popa
loope
lahf
ss
lds
sti
jbe
and
ret
jmp
loop
das
push
mov
jns
insb
inc
mov
aad
and
mov
add
outsb
aaa
push
out
push
in
xor
movsl
movsl
fstl
rorl
jp
inc
push
ret
push
xor
mov
aad
mov
jmp
sub
loopne
jmp
pop
mov
popf
mov
cmp
and
push
mov
jge
scas
jne
mov
int3
stos
cmp
insl
cwtl
ds
pop
sub
xchg
add
inc
aam
mov
xchg
shrb
xorb
dec
jmp
inc
andl
inc
arpl
xchg
push
push
popa
clc
enter
cwtl
data16
cwtl
mov
mov
mov
lret
movsb
or
daa
jno
jge
mov
mov
add
std
mov
call
cmc
ret
and
cmp
jae
iret
mov
addr16
leave
scas
ss
pop
inc
mov
cmp
int3
add
adc
in
push
inc
adc
fsubp
push
test
inc
emms
sub
xor
mov
mov
push
mov
fistpl
or
das
test
or
add
aaa
sub
and
clc
xor
inc
roll
loop
aam
adc
sbb
test
xchg
fwait
adc
ss
lea
rcr
mov
push
pop
sbb
and
cmp
mov
jg
push
add
es
outsb
iret
pop
iret
in
int
mov
insb
out
xor
dec
lea
sub
mov
jb
and
leave
jmp
or
add
cmp
and
mov
jl
test
fildl
js
cld
jnp
stos
ja
loopne
int3
push
jb
mov
cmp
iret
push
pop
fdivrl
fistpll
push
popa
add
xlat
sbbb
loop
adc
add
and
add
inc
mov
push
add
roll
pusha
data16
popa
sbb
enter
shr
add
enter
jnp
notl
stos
and
add
jns
sbb
or
and
into
outsb
rclb
sub
jle
mov
jmp
fisubl
jns
addb
out
leave
leave
lock
add
in
inc
cmp
xor
cwtl
mov
xchg
cmp
cmpsb
xor
iret
inc
xchg
inc
scas
adc
add
sub
shrb
out
ss
mov
add
mov
lret
xchg
jno
xchg
scas
mov
inc
sub
pop
popl
movsb
push
bound
jb
sbb
stos
popf
mov
arpl
int
pop
add
mov
aaa
cmp
pusha
pop
test
lret
cmp
cmp
pop
fs
mov
cmc
cltd
stos
mov
xor
ret
clc
jmp
cmp
xor
inc
and
mov
jecxz
scas
dec
xchg
test
jp
mov
ret
subl
push
cmp
out
add
inc
xchg
mov
jns
jmp
loope
fdivrl
and
jb
mov
mov
pop
leave
push
jae
push
jmp
or
daa
and
fs
and
lock
jmp
jo
pop
cmp
jne
lods
adc
add
sub
mov
or
cmp
adc
mov
pop
sub
mov
movsl
lods
mov
les
xchg
xor
add
or
jbe
fstpl
xchg
stos
adc
push
mov
sahf
push
div
shlb
sbb
sub
bound
fdivrs
sub
jns
mov
popa
and
xor
les
push
jae
jge
fdivrl
out
xchg
mov
cli
cmp
not
ljmp
pop
mulps
jmp
mov
adc
dec
int
mov
orl
or
dec
xchg
push
mov
cmp
or
mov
mov
fsub
push
jmp
rep
pop
cltd
mov
or
mov
or
or
mov
push
pusha
mov
mov
jge
aas
ret
cs
xchg
mov
push
loop
negb
add
xrelease
pop
adc
sbb
in
andl
jp
test
mov
and
mov
cwtl
ss
adc
shrb
xchg
xor
mov
fsubl
sbb
pop
mov
and
inc
notl
mov
jo
popa
aaa
and
and
add
push
pop
cmp
rep
jp
int3
in
xchg
out
xchg
js
stos
and
jbe
xchg
push
sub
ja
inc
test
inc
lret
pop
mov
push
ss
addr16
icebp
into
fwait
mov
sub
pop
sbb
jb
bnd
add
and
push
jne
pop
fistpl
cmp
push
out
add
subb
shrl
test
les
movsl
xchg
xchg
fildll
loop
push
mov
js
mov
ss
xchg
iret
hlt
pop
sbb
ret
sbb
inc
hlt
repnz
cmp
xchg
movsb
pop
add
ljmp
test
and
xor
repz
popa
repz
shrb
sahf
jp
adc
mov
jecxz
mov
pop
add
sbb
push
fnsave
lea
loopne
stc
call
mov
outsl
ret
mov
les
mov
sar
pop
aam
and
jge
sbb
sub
push
push
mov
fdivrl
or
xchg
inc
xor
push
bound
lock
fmuls
loop
dec
xorb
add
cld
outsl
sbb
cmpb
inc
xchg
sub
insl
push
loopne
push
fisttpll
clc
mov
lods
call
adc
pop
lods
int
test
mov
mov
loop
add
jle
dec
in
ret
icebp
sub
dec
aam
cmp
sub
jecxz
mov
cli
mov
pop
in
daa
cmp
ret
jge
stc
jle
fcoms
dec
jle
mov
jle
add
mov
popa
mov
popf
imul
sbb
xor
mov
mov
mov
cltd
nop
push
adc
movsl
add
das
cmp
or
cmp
mov
shll
mov
mov
push
add
xchg
push
mov
lds
in
dec
test
and
cmp
nop
imul
out
xchg
and
loopne
jle
ja
inc
and
inc
test
mov
sbb
outsb
push
cmp
jmp
test
xchg
mov
insb
faddp
aad
push
popf
or
dec
cmp
iret
movlps
lds
add
mov
dec
cmp
test
push
jnp
mov
shll
fucomp
jbe
imul
inc
leave
push
add
xchg
dec
stos
mov
add
orb
mov
into
lods
ljmp
or
iret
jbe
imul
and
sbb
lods
sub
push
mov
and
dec
in
in
out
inc
insb
cmpsl
fisttpll
mov
or
int
insl
adc
mov
repnz
sub
pusha
mulps
mov
and
iret
xchg
shrb
ljmp
xchg
xor
push
movsb
mov
pop
xchg
dec
dec
dec
rcrb
inc
outsl
fnstsw
pop
push
and
int
lods
les
sbb
int
and
repz
fdivp
lret
imul
dec
rolb
loopne
or
scas
jecxz
mov
out
lahf
and
iret
aaa
mov
mov
pop
hlt
data16
dec
push
pop
and
aas
cmpsl
popf
ret
movsb
xor
adc
jns
clc
decl
add
shl
cmp
jp
mov
cmp
xchg
imul
add
shll
push
out
nop
push
mov
add
jnp
mov
int3
mov
enter
lret
outsl
push
pop
adcb
cld
nop
push
and
lock
aad
bound
mov
inc
pop
repz
jb
push
dec
out
mov
fbld
test
imull
sub
cmpl
loopne
jb
testl
and
inc
cmpsb
std
hlt
push
test
daa
call
sbb
negb
fidivs
in
ss
fbstp
or
and
pusha
loopne
jge
jg
call
inc
xchg
call
dec
pop
pop
push
jns
jl
mov
or
mov
aam
mov
cmp
cld
jmp
inc
jmp
sbb
pop
xor
mov
loop
test
and
jbe
xchg
cmpb
bound
into
and
push
jne
cmpsl
cmpsb
push
fisubrl
inc
xlat
lock
jmp
pop
pop
pop
mov
ja
daa
in
push
outsb
test
push
movsb
outsb
mov
and
neg
mulb
cld
pop
push
loopne
pop
inc
inc
sbb
stos
xor
jns
dec
call
sub
cmpsb
cmp
xor
pop
jmp
ss
and
jno
add
ficomps
mov
lods
pop
outsl
mov
inc
mov
add
or
outsb
add
cmp
jmp
fidivrs
sub
gs
fidivrs
in
int
loopne
ret
inc
insb
xlat
shlb
sbb
mov
rcll
stc
xor
push
es
std
sahf
lods
and
adc
test
mov
in
push
xsha256
cmpsb
adc
ss
mov
pop
inc
xor
mov
inc
add
repz
repz
xchg
push
and
jge
negl
repnz
int
mov
cmp
mov
stos
mov
loop
and
cmpsb
xchg
add
mov
push
or
movsl
loope
sbb
push
das
xor
cld
insb
jnp
xchg
lods
lea
mov
test
sbbl
jb
mov
inc
xlat
dec
sarl
int
xchg
mov
repnz
jb
add
add
dec
pusha
push
xchg
sbb
mov
jb
fildl
or
fstl
pop
xor
dec
cmp
push
inc
jg
daa
mov
stos
stc
paddq
loope
ja
mov
mov
jecxz
xorb
jne
mov
movsl
push
adc
inc
dec
shll
out
cltd
xchg
imul
out
jle
testb
cmp
int
jp
push
nop
sub
pop
mov
sub
mov
in
test
rcrb
sbb
or
adcl
imul
dec
icebp
or
lret
add
gs
repnz
dec
cmpsl
pop
outsl
movb
cmp
sbb
pop
push
add
jl
icebp
jae
cmpsb
es
mov
gs
fdivp
icebp
cmp
insb
cmp
pop
jne
dec
imul
fbstp
xchg
divb
fdivs
je
xchg
pop
adc
repz
dec
fsubrs
push
in
add
and
xor
es
popf
push
sbbl
into
bound
ja
mov
lods
cwtl
es
inc
dec
data16
jns
lods
mov
push
pop
outsb
dec
xchg
cmp
mov
stos
mov
inc
push
pop
pop
repz
mov
push
or
aam
mov
js
dec
pop
fldl
pop
sub
xchg
xchg
cmp
xor
icebp
call
xor
jae
xor
push
inc
push
push
dec
shll
repnz
jl
inc
enter
mov
and
pop
stos
xchg
mov
dec
add
pop
lcall
sarb
hlt
lds
xor
pop
dec
outsl
fnstcw
rorl
or
xchg
push
pop
std
jge
ljmp
jge
xchg
sub
shl
dec
int3
fsubrp
lea
mov
sbb
out
std
mov
call
dec
ljmp
xor
loopne
push
adc
or
fwait
je
push
xchg
js
pop
lods
and
in
push
out
es
std
xor
pop
stc
cltd
std
aaa
mov
rorb
loop
cmp
lods
dec
insl
add
push
pop
jg
leave
mov
or
test
mov
icebp
mov
jno
ret
aam
mov
out
cmc
psubsb
pop
pop
repz
cmp
idivl
sub
cmp
in
push
mov
push
loopne
stos
insb
add
inc
xor
inc
inc
pop
push
mov
xchg
pushf
push
iret
pop
les
push
addr16
sub
xchg
hlt
push
hlt
push
cld
xchg
in
outsb
andl
push
lret
es
inc
cmp
xchg
lods
stos
outsb
mov
pop
icebp
push
popf
xchg
ss
repz
and
add
and
inc
xor
push
xchg
and
pop
out
test
sbb
inc
loope
movsl
adc
pop
xchg
inc
and
push
jp
mov
push
adc
sbbb
sub
mov
ds
mov
fs
lock
sub
pop
dec
jnp
or
daa
cmp
fmull
pop
scas
inc
test
cmpsl
out
fcomps
push
sub
cmp
popl
test
or
lret
mov
je
pop
addr16
lea
lcall
add
cmpsl
xchg
pop
inc
lret
icebp
out
dec
xor
icebp
jge
out
movsl
sbb
shrb
lds
scas
popa
jne
sub
nop
ss
ret
orb
or
xor
fincstp
ficoml
jns
pop
stos
loop
rorl
sub
ja
sti
icebp
pop
repnz
mov
cmp
clc
xchg
mov
vpshufd
cwtl
inc
fdivp
subl
adc
pop
push
push
int3
pop
je
inc
add
subl
and
iret
xlat
fs
mov
scas
jg
push
cmp
int3
or
xchg
mov
ficoml
mov
push
lock
mov
xchg
push
jbe
push
clc
jns
cmp
push
mov
push
and
sub
repz
ret
imul
loopne
push
lret
xchg
repnz
adc
xor
or
mov
cltd
fidivrl
clc
xor
imul
pop
out
pop
jmp
cltd
xchg
xor
add
xor
push
bound
xchg
sub
repz
mov
pushf
mov
negl
add
lea
fists
adcl
repnz
add
pop
inc
fimull
fidivrs
mov
icebp
or
and
sbb
cmp
xor
fistpl
cmp
sti
popa
sarl
adc
ret
sbb
int
imul
iret
dec
pop
movsl
push
ja
addl
push
jne
rcrb
xor
xor
out
shll
lods
mov
jg
lock
adcl
sbbb
adc
mov
add
or
enter
icebp
inc
sub
movsb
mov
das
test
ja
mov
fcmovne
lret
jae
cltd
mov
mov
jle
adc
mov
push
or
lret
fisubl
imul
insl
mov
fnstenv
xchg
add
fcoms
fnsave
and
cmp
test
inc
inc
fdivs
or
aad
add
shlb
test
mov
cli
jns
cmp
js
mov
xlat
inc
inc
enter
scas
sbb
lret
jbe
push
not
insb
sub
in
inc
lea
rorl
loop
mov
aam
pop
xor
ss
sub
push
mov
jmp
jnp
pop
cmc
mov
push
fsubrl
iret
and
roll
mov
lods
xchg
xor
incb
push
fisubl
mov
push
sti
test
icebp
add
inc
push
inc
jmp
xchg
je
push
lock
das
sub
rolb
pushf
pusha
les
lods
dec
in
xchg
cmp
inc
inc
pop
std
out
ret
roll
mov
es
jno
jl
add
and
iret
push
add
lock
add
out
outsl
jnp
cli
test
push
ljmp
imul
add
inc
aad
out
and
outsb
inc
or
mov
cmp
lods
jo
add
sub
mov
inc
lcall
inc
lock
inc
loopne
popf
lret
lods
pop
ret
add
adc
push
fs
out
popl
bound
or
fucomp
popf
dec
mov
dec
or
das
aad
es
es
dec
int3
aad
int3
cmp
notb
inc
or
mov
jl
cmp
cld
mov
test
sbb
jg
cltd
insb
xor
pop
std
orb
sbb
mov
cmc
jg
inc
in
adc
out
sub
push
jnp
repnz
mov
xor
loope
push
jno
ljmp
mov
fld
fnstcw
imul
ja
imul
push
xor
lcall
or
inc
and
pop
cmpsl
cltd
jge
adc
pop
cwtl
push
stc
nop
insl
popf
jae
into
mov
adc
inc
lahf
or
shrb
or
sbb
fwait
mov
jmp
xchg
sub
cltd
and
outsb
in
loopne
jnp
mov
mov
inc
xchg
aam
lds
mulb
mov
push
add
jmp
jl
mov
mov
and
insl
iret
or
int3
arpl
je
mov
arpl
enter
push
out
pop
scas
pop
fcmovne
cmp
sbb
mov
sbb
mov
iret
mov
fiaddl
ret
xor
and
test
xor
addr16
daa
test
or
mov
inc
pop
push
xchg
fstpt
lret
sahf
sub
jg
sub
lea
cltd
stos
xchg
cwtl
cltd
add
popf
xor
sub
and
scas
inc
aam
lcall
fwait
mov
cmc
and
ss
hlt
pop
aam
adc
pop
and
inc
data16
outsb
mov
cmp
mov
aad
jns
ret
lds
stc
repnz
inc
jle
outsb
add
cmp
add
addr16
call
jb
test
adc
insb
loopne
cmp
testb
jl
cmp
mov
xchg
inc
xchg
gs
rolb
jl
js
or
dec
les
pmaddwd
loopw
cmp
jb
sbb
mov
icebp
dec
push
cld
xor
jle
iret
cmpsb
mov
pop
inc
aaa
jne
iret
cmpsb
push
fildl
inc
movb
std
inc
sub
out
xlat
lds
pop
push
jle
punpcklwd
mov
push
inc
jle
xor
push
imul
in
jp
arpl
add
push
inc
roll
ljmp
out
test
or
sbb
inc
fisttps
mov
mov
or
xchg
les
pop
mov
push
fbld
pop
jbe
dec
xor
pop
js
movsl
jne
push
in
and
cmc
or
pop
xchg
push
pop
fldenv
incl
aas
adc
inc
pop
test
leave
in
repz
add
test
lcall
stc
and
dec
pop
push
lods
xorb
and
xor
inc
push
fildl
sub
or
mov
int
stos
ljmp
jmp
outsl
jmp
xor
nop
rorl
addl
pop
mov
lds
push
in
pop
mov
scas
call
and
jbe
sbb
xchg
das
and
push
add
mov
cs
mov
mov
iret
inc
jbe
pop
inc
stc
xor
daa
dec
in
imul
sbb
cmp
pop
imul
int
jns
cmp
mov
les
push
push
stos
je
orl
push
sub
dec
lods
cltd
pushf
outsl
in
into
aas
shrl
pop
fcoms
xchg
dec
pop
and
jge
xchg
scas
cli
int3
in
adc
js
das
cmpsl
jno
sar
cmp
outsl
clc
xchg
in
inc
stos
pop
pop
sbb
mov
fistpl
in
sub
dec
scas
sub
pop
and
inc
cltd
loopne
iret
push
aaa
xchg
in
stos
xorl
or
sahf
clc
inc
sbb
cmpsl
jnp
mov
or
sub
jge
arpl
pop
mov
into
cmp
or
or
mov
decb
scas
shrl
push
cli
push
stos
mov
popf
fadds
pop
cmpxchg
cmp
push
or
pop
sbb
addr16
repz
ds
and
fimuls
or
cmp
loop
dec
test
sub
xchg
pop
icebp
lock
fs
push
ss
adc
pop
xor
xor
out
adc
repnz
adc
insb
jg
cmp
adc
gs
aas
sub
cltd
dec
and
sub
daa
movsl
dec
jecxz
outsb
lds
pusha
xor
popf
addr16
out
mov
in
jo
adc
dec
scas
add
aaa
pusha
sbb
and
xchg
xchg
push
or
inc
and
or
and
cwtl
pop
mov
es
sbb
add
cmpsl
test
xchg
pop
jg
cwtl
loop
or
sub
or
sbb
shrb
mov
cmp
pop
cs
mov
fs
xchg
mov
add
cwtl
fdivrs
shll
dec
inc
mov
inc
cmp
test
andl
data16
into
stos
xchg
sarl
sbb
mov
xor
xchg
xchg
dec
pop
lahf
pop
cs
mov
repnz
mov
lds
jge
mov
mov
aas
dec
cmpsl
imul
ficoml
cmp
xor
andl
cmp
inc
and
xor
stos
lcall
adc
movsb
mov
dec
mov
sub
ret
add
bound
xchg
pop
imul
sub
mov
filds
lcall
cwtl
xor
mov
cmp
pusha
idivl
stc
inc
lods
sub
flds
sbb
lret
cvtpi2ps
sbb
inc
test
cmp
sub
shl
cmp
loop
sbb
int3
sbb
out
xchg
mov
lods
in
add
inc
outsl
push
lcall
jecxz
sub
mov
or
ds
sahf
loop
nop
dec
add
and
test
mov
push
enter
lcall
call
icebp
mov
rcll
mov
das
pop
repnz
jecxz
jge
cmp
mov
mov
jnp
dec
or
xchg
jle
test
pusha
bound
add
lods
xor
ja
jl
mov
fxch
pop
inc
pusha
pop
inc
nop
pop
je
stc
andb
sub
inc
dec
dec
out
enter
xchg
ret
test
fnstsw
aad
andb
push
push
aad
outsl
das
jnp
dec
xor
xchg
in
loope
shr
cmc
push
popf
std
ret
mov
icebp
fcomip
mov
push
mov
mov
test
xor
mov
stos
push
dec
loopne
cli
daa
rol
bound
adc
scas
and
mov
orb
repnz
mov
mov
mov
add
jle
bnd
aam
push
jns
sbb
std
les
inc
jae
xchg
les
idivb
jb
push
out
and
mov
fldcw
jnp
movsb
repnz
arpl
xchg
or
mov
les
adc
imul
xchg
mov
sbb
mov
jb
das
push
mov
push
stc
nop
jnp
sbb
into
push
xor
neg
xchg
jns
pop
add
dec
ja
sbb
into
mov
call
lock
popa
sbb
les
enter
dec
add
shll
xchg
lcall
mov
or
sbb
sahf
cmpsb
addb
call
sbb
cwtl
sbb
sbb
push
shrb
jb
cmc
push
lret
fiadds
lcall
jne
inc
inc
les
push
dec
iret
fsubl
je
loope
cmp
xchg
out
pop
daa
dec
nop
pushl
fadd
push
outsl
push
mov
push
insb
aaa
push
fwait
pop
jl
clc
or
or
mov
test
je
addr16
and
mov
imul
mov
and
sahf
push
in
into
xchg
out
sub
dec
cmpsl
mov
lock
popf
push
outsb
jg
ja
mov
mov
scas
jb
or
cmc
xchg
mov
mov
ds
mov
jecxz
lret
jp
pop
pop
pop
xor
mov
rorb
cmp
inc
je
jbe
repnz
fistpl
repz
sti
fsubrp
sub
sti
sahf
pop
in
xchg
call
popf
push
inc
lret
jae
ss
lahf
stos
nop
fidivl
sub
pop
jmp
stc
nop
repz
xchg
jns
repnz
in
int3
into
inc
cmp
jge
stos
aaa
faddl
mov
sbb
fldl2e
xlat
pop
mov
add
in
and
test
popa
inc
divb
test
scas
push
add
fisubs
inc
dec
push
aam
mov
sub
es
arpl
sub
inc
lods
mov
sti
std
hlt
imul
loopne
pop
jo
mov
outsl
lock
adcb
xor
xchg
out
dec
pop
test
dec
pop
sub
xchg
adc
xor
dec
jecxz
inc
push
push
xchg
stos
daa
adc
add
pop
jno
mov
rcrb
inc
mov
int
xor
dec
mov
pop
push
pop
push
mov
jge
sub
dec
lahf
ss
sbb
sbb
pop
clc
aas
dec
jmp
inc
pop
clc
cmp
cmp
sub
jns
adc
cmpsl
adc
iret
mov
inc
ljmp
out
popf
fldl
shlb
sbb
push
jb
hlt
and
push
inc
push
fidivs
push
push
sbb
push
xchg
cli
pusha
jmp
jl
mov
pop
popf
cmp
lock
and
sbb
xor
dec
jmp
mov
add
imul
inc
adc
push
cs
push
insl
jge
or
das
sub
and
mov
push
mov
push
inc
mov
ret
pop
xchg
pop
mov
jne
mov
rorb
movl
aaa
mov
es
jns
jne
cltd
adc
rolb
push
jo
inc
sti
aas
inc
ret
gs
out
inc
mov
pop
int
out
into
dec
pusha
sub
sbb
fsubrl
mov
popf
sub
cwtl
mov
adc
inc
nop
mov
es
cmp
or
mov
out
inc
and
loop
mov
cmp
adc
lock
in
mov
loop
inc
insl
hlt
lea
sarb
pop
mov
popa
sub
mov
xchg
cmp
icebp
xchg
mov
pop
stos
lds
push
cmpsb
scas
je
jno
mov
mov
and
mov
leave
jle
jl
sub
xchg
jecxz
jmp
sub
sti
sarb
sub
pusha
fdivrs
push
aad
or
lret
cmp
loope
fsubl
push
add
ja
mov
mov
testb
pop
icebp
mov
add
push
and
imul
aas
movsl
fwait
add
cmp
xlat
imul
fidivl
fwait
sub
repnz
shrb
jns
icebp
mov
xor
jge
shl
adcl
push
xchg
inc
adc
sbb
add
push
inc
leave
xor
dec
int
fmuls
push
jb
fdiv
int
out
test
fdivp
mov
cmp
mov
sbb
ret
push
mov
addr16
ljmp
imul
enter
jae
loopne
mov
lcall
and
adc
mov
pushf
call
add
rorl
xchg
int3
faddp
cs
dec
aaa
jmp
mov
xor
mov
or
push
jbe
dec
enter
mov
jecxz
sahf
movsb
stc
dec
pop
push
push
jno
mov
movb
enter
idivl
mov
int3
dec
adc
xchg
push
into
lods
add
xor
xchg
sub
insb
adc
jl
out
cmp
mov
sarb
leave
cmp
push
in
push
rorb
mov
xchg
add
cmp
imul
fstpt
popf
and
push
xor
mov
jns
pop
mov
imul
xor
inc
mov
popf
dec
sbb
cld
pusha
lods
data16
mov
roll
int
shll
push
repz
neg
push
push
dec
jl
and
ss
jno
pop
cmp
inc
xor
sub
dec
test
leave
sub
push
jbe
xchg
inc
rolb
fildll
shll
arpl
scas
pusha
or
push
loopne
xchg
xchg
xor
add
cwtl
xor
out
filds
mov
fisubs
addr16
and
push
cwtl
xor
std
jle
test
mov
cmp
dec
aad
cld
fisubrs
push
nop
insl
dec
xor
notl
sub
inc
inc
fildl
cmp
inc
xlat
jne
pusha
testl
mov
xor
daa
sbb
mov
dec
cli
rolb
sti
pop
adc
or
xchg
cmp
jg
in
fisubrs
jg
ljmp
mov
and
sbb
sbb
popf
sti
jbe
shrb
outsb
mov
test
clc
inc
imul
sbb
repnz
sub
or
xchg
pop
push
ret
inc
in
mov
pop
mov
test
cmc
movsl
mov
leave
cli
int3
or
xlat
mov
add
aaa
cwtl
test
pushf
xor
cmc
dec
add
addr16
push
es
fidivrl
or
sahf
clc
rcll
jp
insb
mov
sahf
xchg
mov
mov
push
popf
popf
pushf
daa
sbb
and
mov
mov
test
dec
jnp
add
jmp
cmpsl
xlat
mov
mov
jmp
adc
jl
mov
push
xchg
cmp
and
not
jno
xchg
cli
notb
sub
fists
cmp
outsb
inc
dec
sbb
aaa
mov
xor
adc
ljmp
call
sbb
sahf
or
shl
leave
add
inc
inc
imull
xor
aas
in
stc
or
cmp
int
fwait
js
dec
adc
or
mov
mov
mov
test
cmp
sbb
mov
cld
pop
ficompl
add
int
out
sbb
popl
sub
shll
pop
mov
mov
jecxz
not
outsl
add
out
sbbb
xchg
dec
cmpsb
mov
loope
fidivs
mov
sti
jo
das
cmp
xchg
jne
or
movsl
xchg
dec
jecxz
xchg
pushf
in
into
loopne
lcall
outsb
cmp
xchg
or
gs
sbb
xchg
test
fsubs
es
fmuls
stos
mov
pop
pop
stos
cltd
mov
xor
xchg
iret
xchg
mov
push
daa
jp
xor
cmp
xchg
or
imul
mov
lock
cmp
dec
rcrb
pop
in
aam
or
or
movsl
dec
negb
xor
and
int
insb
jbe
sbb
cmpsb
or
mov
dec
cs
decl
fiadds
enter
jle
pop
inc
mov
cmp
sbb
fsubl
dec
js
negb
add
mov
pop
mov
roll
cwtl
addr16
push
mov
enter
mov
stc
and
push
sbb
xchg
out
arpl
stos
das
loopne
fmul
jle
imul
jb
pushf
xor
int
mov
int
jge
cs
sub
shrb
imul
push
xor
jns
ficomps
pop
xchg
push
leave
lds
jle
out
jp
dec
jle
movsl
push
mov
dec
xchg
adc
cmp
jae
mov
loopne
popa
fwait
lods
repnz
iret
outsl
das
cmc
aaa
inc
jbe
inc
cmp
lret
push
or
rorb
int
mov
out
add
xor
mov
popa
iret
decb
xor
jne
add
mov
push
jg
pop
aas
push
stos
in
push
pushf
cmp
cs
dec
ljmp
xchg
das
pop
or
scas
out
sbb
scas
int3
fmulp
sub
cmp
enter
shl
inc
in
push
mov
inc
leave
testb
enter
jge
add
enter
mov
decb
nop
out
pop
fsubrp
cmc
xorb
scas
ret
mov
jle
or
xchg
fmul
popa
mov
and
ficomps
add
fmuls
pop
add
shlb
pop
cmp
stos
or
out
inc
lcall
adc
xor
call
xchg
xlat
sbb
dec
add
add
xchg
pop
bnd
mov
rcr
test
rcrl
cltd
stos
dec
out
andb
daa
fidivs
pop
push
sar
xor
mov
mov
stc
je
lods
sbb
push
outsb
push
lds
jecxz
in
or
xchg
dec
leave
in
mov
jmp
cmc
adc
cmp
fsubrs
inc
insb
jle
and
cli
jmp
xchg
dec
sahf
or
addb
aad
mov
mov
out
icebp
lahf
mov
push
push
push
mov
and
sbb
inc
dec
sbb
lret
lods
mov
xlat
mov
mov
aam
cld
das
cmpsb
cmp
or
push
pop
adc
in
sbb
das
pop
or
lds
jmp
mov
xchg
push
xchg
jnp
push
jmp
mov
ret
pop
cld
pop
and
xor
adc
push
bound
ds
bnd
dec
aam
or
cmc
jns
xor
rcrl
jo
pop
inc
cmp
pop
and
xchg
mov
dec
sub
jno
mov
lahf
push
jg
xor
mov
pop
mov
sub
xorl
pusha
mov
mov
insb
in
mov
adc
enter
loopne
lds
mov
imul
loop
adc
mov
mov
or
mov
pop
leave
pop
jmp
flds
push
add
mov
idiv
jge
and
xlat
lcall
orl
mov
jp
adc
and
xlat
push
dec
jle
cmpsb
add
push
mov
aaa
std
js
cmpsl
and
ds
loopne
jno
jmp
pop
sbb
jp
inc
xchg
sbb
mov
arpl
insb
loope
shll
andl
xor
or
jno
or
dec
dec
je
outsl
nop
dec
movsl
add
scas
xor
sarl
or
dec
movsb
movsb
rcrb
mov
je
fdivrl
call
in
cwtl
stos
sbb
pop
jne
scas
ret
dec
lcall
or
adc
cmc
les
sub
pop
jmp
pop
jbe
ret
sub
stos
push
divl
cmc
mov
and
mov
aas
pop
and
fbstp
cld
pop
inc
test
pusha
mov
in
das
mov
test
mov
hlt
xor
and
ret
jo
icebp
mov
sarb
xlat
insl
mov
test
adc
push
std
sbb
jge
bound
jnp
sub
lods
cltd
or
repnz
scas
and
add
in
sarb
inc
inc
xor
pushl
xchg
xor
and
pop
dec
push
dec
inc
jg
jg
sahf
out
cltd
call
pop
enter
add
and
lahf
push
jmp
pop
out
sahf
ficomps
push
hlt
adc
mov
xor
and
clc
imul
sub
dec
cmp
loop
adc
push
adc
mov
sub
jo
push
inc
xor
fwait
das
cmp
insl
push
insl
cmp
sahf
lods
jmp
cmp
lock
or
push
cs
jo
jno
icebp
lret
and
push
sbb
call
push
mov
jno
inc
jmp
sbb
int3
inc
dec
je
clc
xor
jle
cltd
mov
ja
jnp
push
mov
mov
xchg
nop
mov
stos
xchg
push
jns
cmpsl
stc
test
xor
push
jne
scas
add
mov
test
movsl
dec
sub
out
jbe
mov
iret
cmp
push
mov
add
and
push
inc
jbe
and
addr16
add
loopne
xchg
xor
xchg
ror
add
lock
out
sbb
rorl
or
xchg
mov
cmp
or
sbb
xor
jmp
mov
pop
icebp
jg
and
cld
jae
and
cmpsl
outsb
test
sarl
push
jp
out
loopne
mov
or
rol
cmp
add
je
nop
sbb
ret
fistpll
push
add
fs
inc
mov
dec
loop
test
arpl
sahf
dec
pushf
or
lahf
lds
bnd
push
fsub
inc
cltd
fdivl
mov
mov
jmp
movsb
hlt
cmp
lds
fcom
lcall
cmpsb
jecxz
cld
fmull
cmpsb
push
daa
lahf
rolb
ret
sub
sahf
ja
xchg
mov
pushf
lcall
dec
mov
mov
mov
lret
mov
fsts
out
jne
xor
repz
cmp
push
pop
scas
or
cmp
inc
xor
jmp
lret
pop
cwtl
js
mov
fsubr
pop
pop
cmc
jecxz
jge
cli
scas
lods
xchg
jl
xchg
mov
push
sbb
mov
push
and
test
scas
mov
jg
pop
fiadds
test
stos
jmp
mov
decl
add
jb
lahf
xchg
cmp
jns
popa
in
fwait
and
mov
inc
mov
push
inc
imul
rcll
dec
dec
lret
adc
cmp
mov
fmull
sahf
scas
inc
sbbl
iret
and
add
rcrb
xor
jecxz
add
mov
sub
dec
std
jmp
stc
mov
mov
sarl
outsl
pop
int
loop
cmp
mov
jmp
jl
mov
or
adc
shr
xor
pop
movsb
inc
dec
cwtl
das
orb
mov
push
jo
xor
sbb
and
pop
idivb
jge
inc
pusha
rcrl
mov
aas
xchg
pop
clc
pop
ljmp
sub
sub
dec
test
sahf
jl
sub
jge
and
push
pop
push
or
push
xor
sarl
inc
imul
dec
lods
mov
dec
cmp
out
cmp
jbe
jle
mov
sbb
in
sub
loope
pop
sub
inc
sbb
push
in
xchg
in
std
cs
fcom
int
int
aaa
xlat
in
mov
and
lret
add
stos
xor
clc
push
leave
inc
and
aas
mov
cltd
imul
mov
jge
bound
sarb
scas
in
pop
scas
mov
sbbb
add
clc
andb
adc
fistl
out
scas
fidivs
mov
in
ja
inc
pop
push
pushf
cli
testl
adc
and
adc
sarl
mov
fucomip
mov
push
xor
pop
fst
rcrb
mov
std
dec
jl
out
das
es
in
mov
jge
leave
rorl
pop
or
xchg
push
and
cmp
fdiv
inc
aam
add
out
lcall
and
jecxz
mov
rolb
fimull
aam
adc
pop
lret
dec
push
stos
lret
add
sub
out
ret
jne
into
xchg
jae
popa
test
dec
mov
stc
sbb
lock
clc
hlt
xchg
add
into
fsubp
cmp
ret
xor
jge
rclb
push
ret
xchg
inc
popa
adc
adc
ja
dec
mov
stc
mov
mov
es
push
adc
mov
and
movsb
dec
push
mov
ficompl
pop
popa
adc
out
jmp
mov
and
shll
mov
rcrb
jge
sub
test
xchg
sbb
inc
cmp
test
mov
lea
imul
fstpl
adc
mov
xchg
inc
shll
cmp
cmp
pop
lcall
dec
xchg
sahf
xchg
mov
mov
stc
adc
imul
pop
fsubs
or
nop
jb
notb
add
dec
dec
jno
icebp
dec
xchg
test
es
jp
rorl
add
outsl
and
mov
clc
mov
and
jecxz
gs
add
in
push
sub
sbb
loop
or
mov
dec
or
jl
jb
cwtl
sbb
add
stos
js
xchg
cmpl
sub
pop
fsubs
fbstp
jl
push
inc
pop
mov
jb
xchg
into
addr16
mov
xchg
xchg
sub
mov
xor
les
xchg
stc
lret
sub
mov
mov
mov
sub
lods
aas
aam
mov
mov
and
adc
mov
mov
push
dec
mov
outsl
adc
aad
addr16
and
add
imul
in
jl
sbb
pop
outsb
loope
and
push
imul
xchg
sub
and
pop
int3
mov
out
mov
inc
movsl
pushf
mov
test
push
sub
and
pop
sub
cmp
sub
xor
jmp
inc
pop
jge
and
xchg
and
call
leave
sbb
jecxz
push
sbb
sub
in
pop
mov
or
in
adc
lds
sbb
xor
dec
popa
cmpsl
sub
pop
enter
dec
fcoml
pop
loope
mov
push
repz
inc
pop
lock
mov
std
jo
int
xchg
mov
pop
cli
xor
adc
mov
scas
push
push
or
adc
clc
jecxz
mov
int
aaa
push
gs
dec
inc
adc
mov
inc
mov
dec
add
pop
test
call
dec
xchg
jg
mov
rorl
lahf
inc
out
fldl2t
cmpsl
xor
pop
rorl
mov
ret
push
fsub
cvtdq2pd
jge
shll
xchg
sub
test
dec
xor
mov
pop
add
out
inc
shll
pop
pop
dec
fwait
sub
out
xlat
add
outsb
and
push
cmc
adc
call
sbb
cmp
sbb
sahf
popf
out
add
mulb
out
mov
orl
cmpsb
jns
cltd
xor
mov
aaa
sbb
dec
jle
aad
mov
push
push
pop
sti
repz
icebp
sbb
mov
mov
cmp
popf
in
dec
dec
out
push
out
and
xchg
sbb
stos
call
or
sub
imul
cltd
pop
icebp
ljmp
dec
cmp
dec
pop
mov
pop
fsubl
pop
addr16
adc
push
cwtl
out
mov
adcb
pop
addr16
data16
sahf
fs
xchg
push
push
jbe
jbe
cmp
pop
je
mov
mov
push
das
mov
cmp
stos
add
gs
mov
inc
arpl
lods
inc
sub
int3
push
repz
fimuls
sub
add
dec
jg
call
jae
loop
cltd
adc
push
or
mov
lahf
std
mov
jle
cld
addb
lret
pushf
mov
and
push
inc
pop
loopne
xlat
repz
jmp
inc
mov
jbe
movsl
leave
xchg
cmp
sub
xchg
dec
and
outsb
sti
sbb
aad
into
mov
loopne
fcompl
shrb
cmpsl
pusha
and
pushf
scas
dec
pop
fildl
adc
jle
or
leave
loope
sahf
in
sbbb
jno
popf
lea
loope
test
pop
fisubrl
jnp
pop
in
std
movsb
or
mov
cmp
dec
dec
inc
mov
pop
lret
and
fbstp
je
dec
jle
sbb
cs
lods
or
xchg
sub
pop
jnp
scas
and
ds
add
fnstsw
inc
mov
pop
xor
fs
sub
fcoml
aam
push
stos
mov
fildll
in
loop
fidivrl
jb
adc
aaa
ret
and
mov
popa
lock
ja
divl
mov
xchg
ret
jnp
hlt
dec
cmp
dec
aas
push
mov
lcall
fstpt
into
fwait
push
push
dec
push
cmpsl
mov
and
repnz
lock
cmp
sub
pop
testl
push
cmp
fcomi
nop
pop
leave
xchg
aad
cmp
pusha
mov
ss
xor
or
mov
out
aad
popf
lods
icebp
adc
xor
push
test
sub
inc
in
xor
xor
leave
jns
sub
fucomip
push
std
mov
xchg
jnp
enter
adc
push
jne
sbb
xchg
popf
mov
pop
xor
inc
dec
std
jo
lock
roll
psubd
dec
cli
dec
cmp
lea
mov
jmp
mov
xchg
push
push
lods
mov
icebp
inc
loop
je
or
dec
add
lcall
arpl
mov
xchg
lods
mov
add
cmp
pop
jge
not
addb
es
fldt
rcrl
pop
inc
jl
cmp
lods
lds
mov
in
and
xor
xchg
andl
push
pop
sarl
or
mov
push
bound
push
aam
push
rclb
mov
lret
push
dec
or
jnp
sbb
mov
aad
sub
scas
ds
sbb
pusha
xor
pop
lods
aad
hlt
push
pusha
xchg
aam
and
fstps
repnz
fsubl
jb
clc
arpl
shlb
inc
cli
or
jnp
or
dec
and
call
cmp
fnstenv
shlb
and
add
es
add
adc
mov
adc
int
je
outsb
sarb
pop
mov
xor
push
les
mov
cmpsb
mov
outsl
inc
mov
inc
cwtl
push
cmp
inc
stc
mov
fisubl
test
outsb
ja
inc
ds
xor
pop
enter
or
cltd
bound
in
mov
repz
fldl
sqrtps
pop
and
sub
sarb
pop
jno
mov
fdivs
mov
ljmp
hlt
call
jnp
call
ret
cmp
in
cmpsl
int3
push
xchg
std
jo
cmp
popa
xor
push
fiaddl
aaa
push
insl
aaa
push
mov
movl
cmpsb
mov
bt
lahf
adc
rclb
xor
insl
dec
inc
jmp
or
dec
add
mov
pop
hlt
xchg
mov
rcrb
loopne
pop
cmpsl
decb
push
addr16
xor
test
sub
sbb
mov
and
test
insb
lahf
sub
ja
out
test
mov
pop
jl
add
test
int3
jnp
push
outsb
xor
ja
dec
int3
inc
inc
fdivrs
dec
add
adc
sti
test
notl
push
les
ret
test
stc
or
inc
rcr
stos
mov
mov
pop
lods
push
fdivl
inc
xlat
xor
and
cmp
sti
popf
inc
and
mov
pop
jae
add
scas
aad
test
pop
insl
push
and
repnz
lods
or
lock
add
pusha
mov
dec
aad
mov
test
out
int3
mov
or
pop
into
xchg
mov
jmp
xchg
cmp
nop
push
aad
cmc
aas
xlat
push
dec
repnz
and
and
js,pt
jbe
mov
aad
pushf
fldl
imul
lods
inc
mov
xlat
das
mov
jp
sbb
add
sbb
and
cmpsb
out
jo
pop
rcr
imul
or
idivb
fwait
fs
movsb
xchg
shrl
sbb
sti
mov
mov
fs
inc
lret
pusha
fucomi
ljmp
shll
loop
jns
imul
dec
cwtl
inc
rcl
test
mov
push
jbe
push
test
mov
adc
addr16
pop
loope
cmpb
dec
add
xchg
jp,pn
inc
fsubrs
mov
dec
outsb
mov
aad
pop
jp
data16
lret
dec
xchg
aam
mov
cmpb
xchg
jl
fdivrs
mov
in
xor
lret
push
stc
and
scas
arpl
push
inc
or
stos
xchg
notb
xor
fstps
or
pop
sbb
outsl
mov
fistpll
fldcw
lods
inc
add
lret
push
mov
das
fldt
subl
mov
inc
xor
daa
push
and
push
js
xchg
push
mov
mov
dec
pop
jbe
mov
mov
xor
sahf
and
and
adc
call
addr16
sbb
adc
arpl
cmp
idiv
or
fldl
shrb
sbb
adc
cmpl
mov
xchg
mov
add
mov
fisubl
leave
out
jb
cmpsl
sub
mov
cmp
popa
xlat
loopne
stos
adc
insb
mov
push
jmp
pop
xlat
mov
dec
jb
mov
ficoml
push
mov
mov
orb
lret
cld
jns
insb
jecxz
add
arpl
push
sarl
inc
add
pop
fcomip
pop
lea
mov
push
jp
mov
pop
adc
sub
test
outsb
clc
mov
mov
push
jnp
xlat
outsb
mov
pop
push
imul
lea
sub
mov
push
fwait
adc
xchg
adc
mov
and
out
iret
add
inc
or
arpl
loop
rorb
les
sahf
in
ljmp
pop
adc
jl
mov
loop
and
or
sub
pop
inc
mov
pop
data16
shlb
es
adcl
int
sub
lret
push
add
stc
push
sbb
mov
loopne
and
out
and
cmp
cld
rclb
stos
subl
cltd
mov
cli
sti
pop
sarb
lea
pop
mov
cmc
ds
lods
sbb
shlb
movsb
mov
push
cmpsb
clc
push
pop
mov
aam
outsb
incb
sahf
aas
pop
jbe
lahf
orb
mov
aam
inc
adc
mov
out
in
rcrl
jne
push
dec
mov
dec
push
push
cld
std
pop
ds
aad
sbb
jo
in
mov
inc
push
xchg
or
push
rolb
cmpl
call
sbb
or
and
hlt
inc
shlb
xchg
cmpsl
and
cmc
inc
cld
sub
mov
push
xchg
push
and
sbbl
push
xchg
and
mov
mov
imul
dec
popf
jg
lcall
xor
in
fmull
push
mov
dec
fisttps
call
lods
sbbl
test
mov
jns
add
jmp
insl
sbb
fimuls
push
mov
and
mov
adc
lcall
cwtl
das
adc
push
mov
pop
iret
into
gs
int3
in
cmp
mov
scas
call
je
test
jbe
je
and
cmp
in
push
icebp
sub
lock
cmp
lahf
add
and
lods
je
mov
aaa
mov
shlb
mov
hlt
aam
cmp
mov
inc
sub
shl
cli
add
popf
pop
es
loop
and
pop
out
xor
in
lret
fildl
popa
pusha
or
stos
push
xchg
push
or
pop
sbb
jl
pop
lret
dec
xchg
dec
cmp
pop
jmp
popa
imul
jl
aas
clc
icebp
nop
ret
pop
cli
and
addb
sti
mov
repz
outsb
dec
rol
mov
lcall
sbbl
inc
in
pop
sbb
in
cmc
adc
ds
aas
in
ror
fistpl
test
into
in
sbb
or
cmpsl
cmp
or
jle
push
js
sub
hlt
xor
inc
icebp
sub
pop
das
inc
and
ret
scas
iret
push
inc
jle
mov
aam
sub
pop
aam
sub
dec
das
jns
ja
ficoml
daa
inc
js
inc
cltd
dec
xchg
mov
jno
xchg
sub
scas
hlt
push
cmp
inc
pop
jp
push
sub
inc
pop
add
and
lret
jbe
lret
cwtl
stos
fsubp
test
push
loop
rcrl
mov
lock
in
mov
roll
in
sbb
in
mov
dec
and
enter
andb
imul
ds
add
inc
sbb
cmc
xchg
es
jp
aaa
out
dec
xchg
xchg
pop
sbb
add
pop
je
popf
or
adc
dec
out
call
xchg
dec
loopne
jns
push
test
addr16
call
cmp
jl
mov
or
pop
nop
mov
aam
test
push
jp
fsubl
fmul
lock
sti
movsb
adc
or
test
aas
imul
and
sbb
mov
faddp
rorl
sub
mov
push
mov
arpl
shll
test
lahf
dec
shlb
push
into
cmpsl
stos
and
sbb
adc
insb
pop
lret
mov
clc
hlt
push
sub
negb
sbb
sub
loopne
or
inc
pop
loopne
rcll
fimull
jne
mov
loop
push
cmc
xor
add
fmuls
int
mov
je
outsl
push
fsubr
push
and
xchg
test
into
cmp
out
scas
sbb
xchg
inc
out
stc
mov
lfs
sub
leave
ret
fsubrp
std
pmulhw
sub
dec
inc
inc
sub
push
push
sub
sub
minps
push
mov
jns
rorl
leave
dec
xor
cmp
aam
mov
mov
mov
jg
add
aad
cltd
test
sbb
test
cmpl
pusha
test
outsl
mov
xor
mov
dec
ss
in
mov
ss
xor
xchg
mov
mov
and
cltd
xchg
arpl
mov
ret
push
sahf
inc
inc
repz
fnsave
or
imul
nop
sbb
negb
daa
ret
mov
mul
cmp
out
movsl
dec
mov
mov
das
adc
inc
mov
loopne
hlt
inc
add
mov
push
xor
cmpps
sub
inc
xchg
mov
xchg
movsb
push
mov
adc
call
cmp
mov
mov
or
imul
lods
push
pop
test
mov
mov
mov
iret
inc
les
ljmp
daa
addr16
jg
cmp
adc
xchg
arpl
clc
call
int3
mov
xchg
push
cs
jp
cmp
pop
cmp
pushf
jle
xchg
and
cltd
sahf
lods
lret
pop
and
adcb
xchg
sub
and
mov
sbb
andl
lods
xchg
xchg
adc
aad
roll
imull
and
fcos
push
mov
and
jb
lret
loopne
cld
inc
cli
pushf
jmp
out
lds
ljmp
cmpsb
movsl
push
push
sub
xchg
add
push
loop
or
add
out
scas
push
inc
fildl
jnp
pop
push
pop
mov
out
imul
mov
out
adc
mov
jmp
bound
push
and
loope
ficoms
mov
es
not
enter
test
mov
sahf
pop
dec
out
lret
dec
imul
xor
sbb
push
mov
in
pop
inc
aam
and
loop
ja
dec
daa
inc
jg
decb
and
sub
pop
lods
mov
test
movsb
aaa
xchg
call
out
popf
cmc
mov
inc
in
jecxz
jl
jb
sahf
xor
xlat
mov
popf
sbb
cli
cwtl
ds
jmp
sbbl
stos
push
out
sbb
loop
cmc
fsubrs
mov
ret
cmpsb
mov
enter
out
inc
cmp
cwtl
add
sbb
popf
dec
lods
in
fildll
and
repz
jbe
push
inc
dec
mov
xor
dec
cmp
ja
test
cmp
ljmp
inc
and
dec
cld
sub
pop
sbb
or
icebp
push
sub
stc
xchg
xor
hlt
sbb
ret
sbb
xchg
dec
jecxz
cld
fnstsw
add
adc
and
mov
int
in
jae
imul
or
mov
mov
test
jg
mov
incb
push
test
and
inc
fwait
lods
cmp
test
inc
es
clc
fidivs
cwtl
das
testb
mov
mov
push
pop
int
xlat
shlb
add
hlt
push
loop
push
push
jae
fldl
inc
pop
repnz
sbbb
out
iret
or
cmp
pop
xor
out
mov
inc
ds
pop
jo
xchg
push
pop
cmp
xor
mov
mov
les
inc
mov
addl
insl
pop
or
lahf
int
inc
mov
jne
aaa
insl
insl
lahf
call
insl
add
lea
mov
adc
pop
inc
lods
addl
mov
in
enter
fistpll
enter
lock
nop
push
or
mov
mov
push
dec
in
adc
add
xor
cltd
xor
dec
adc
js
push
mov
aam
outsl
clc
enter
notb
ljmp
jnp
aaa
pop
fnsave
shrl
test
xor
mov
push
mov
and
cmp
xlat
adc
cs
out
enter
pop
inc
imul
pop
out
sub
inc
pmuludq
lods
and
inc
sub
js
dec
pop
shrb
xchg
pop
sbb
pop
cmp
test
ja
cmpsl
data16
push
dec
popf
sub
clc
lods
xor
pop
fdivs
pop
nop
imul
push
jg
rorl
inc
xchg
sbb
outsl
sbb
jl
pop
sub
iret
jnp
or
cmpsl
cwtl
sub
sub
mov
xchg
add
aaa
add
push
out
xor
jecxz
inc
fimuls
cwtl
fildl
lods
push
ficompl
insl
repz
out
sbb
jbe
in
sbb
mov
fisttpll
and
stc
popf
cmpsl
repz
aaa
adcb
rolb
test
stc
inc
cmpsb
and
ficoml
pushf
lea
imul
xorl
pop
in
hlt
or
jne
jl
jp
out
or
fldcw
jbe
xchg
mov
fldl
aaa
push
add
push
aaa
push
nop
loop
adc
and
sbb
xchg
pop
pop
outsl
jnp
sub
lock
fisubl
pop
pop
lcall
cwtl
pop
adc
add
xor
bound
loope
cmpsl
or
xor
adc
cld
push
xchg
lahf
stc
sbb
aam
sbb
lods
cmp
and
adc
jge
aam
pop
pop
pop
jae
xor
pop
xor
jb
popa
sub
push
mov
int3
mov
push
mov
pop
fidivl
inc
fdivrl
gs
fidivl
or
add
out
and
or
xchg
xchg
mov
cmc
push
sbb
sub
pop
cmp
arpl
push
mov
or
bound
lds
es
popf
cmp
sahf
ret
push
xor
ss
jae
insb
js
test
js
clc
mov
cmp
jl
adc
or
movsl
sub
and
mov
aaa
into
pop
out
insb
insl
lds
mov
push
scas
or
add
adc
xchg
jl
jmp
inc
sub
jb
lea
add
ret
stos
add
mov
shl
sbb
fdivs
ljmp
adc
mov
es
jbe
in
les
loope
pop
xchg
int3
in
jo
xor
in
shlb
shl
or
loope
cvtps2pd
fisubrs
js
mov
jo
scas
mov
test
pop
xor
out
cmpsl
pop
addb
mov
sahf
push
xlat
pop
and
fwait
loopne
ja
mov
scas
add
mov
xchg
mov
rorl
pop
inc
mov
jmp
jbe
and
dec
ret
pushf
pusha
xor
sub
cmc
inc
xchg
ret
mov
pop
mov
xchg
scas
data16
out
addr16
mov
mov
xor
jae
inc
adc
cltd
mov
or
pop
mov
sub
lds
imull
dec
lahf
popf
mov
mov
dec
xor
jle
mov
adcl
loopne
pushf
adc
iret
lods
push
lret
outsl
in
fwait
lret
pop
insl
push
xchg
stos
and
inc
xor
aaa
icebp
fnstcw
pop
push
xchg
push
dec
adc
subb
into
pusha
or
in
xchg
adc
add
js
push
add
push
mov
stos
and
inc
in
cwtl
mov
lea
loope
xlat
xchg
mov
or
lret
push
push
pop
pop
mov
enter
sub
jno
mov
sahf
push
mov
cmpsb
jmp
xchg
rorl
jns
loopne
dec
std
data16
stc
or
add
loope
adc
mov
mov
aaa
mov
arpl
xchg
mov
rcrb
insl
pop
das
inc
mov
pop
sub
pop
gs
repnz
inc
mov
sar
out
hlt
dec
outsl
mov
test
cmp
pusha
mov
fistps
leave
cs
and
pop
xor
jnp
dec
lods
inc
xchg
jmp
into
xorb
fwait
or
jo
cmp
mov
push
xchg
jnp
pop
stc
shrb
test
cltd
sub
repnz
das
ret
or
lock
mov
aam
sub
sbb
out
jne
repnz
stos
xchg
jbe
inc
lock
push
test
dec
fbstp
pop
push
out
and
loope
mov
jae
ss
scas
ss
cld
ja
jmp
inc
push
push
in
mov
sbb
jg
lret
cli
sbb
andl
mov
popf
data16
into
adc
cwtl
adcl
jmp
or
das
cmp
and
pop
rcll
in
fucomp
ficomps
repz
jecxz
jge
std
mov
xor
ds
jo
or
mov
jecxz
imul
fnstsw
push
cmpl
fnstsw
sub
ret
dec
dec
loopne
lahf
cmp
out
fiaddl
or
fisttpll
and
shrb
lods
stos
dec
jge
jg
inc
stc
mov
jg
sub
pop
insb
and
lret
xor
scas
mov
pop
fwait
test
jne
imul
in
stos
mov
jns
fsubrl
dec
jg
mov
dec
pop
push
xchg
jg
mov
cmpsb
and
fldcw
ss
cmc
pop
mov
push
pop
loope
add
sub
xchg
cmpsb
jae,pn
popa
push
pop
or
js
lods
dec
sub
add
jbe
add
negl
jb
or
fnstsw
jle
movb
lock
out
data16
loopne
and
enter
lods
xchg
inc
mov
xchg
fiaddl
xor
push
add
insl
add
pop
fnsave
les
pop
push
sbb
xchg
call
lcall
xor
ljmp
jmp
and
scas
mov
add
jne
jmp
aad
les
idivb
scas
iret
mov
hlt
mov
dec
push
jae
pop
fistps
cmp
mov
rcrb
and
icebp
mov
cmp
cmp
adc
pop
sahf
mov
ret
jp
jg
dec
mov
shrl
inc
decb
fistpl
roll
jmp
les
lea
dec
lock
dec
stc
rolb
xorl
cmp
sub
xchg
xchg
xchg
mov
jg
add
or
xchg
sbb
add
and
fsubl
mov
sbb
sub
in
test
repnz
ljmp
sbb
pop
sbb
jge
mov
leave
xor
push
outsl
push
push
inc
stos
cmp
mov
mov
fiaddl
xchg
mov
in
pop
out
pop
icebp
sub
push
cmp
add
rorb
mov
and
pushf
mov
xor
loopne
cmpsl
imul
cli
pushf
jo
sub
loopne
adc
les
outsb
add
sub
fdivrs
push
mov
push
mov
loope
xor
stos
addb
xor
or
loop
xchg
enter
add
adc
enter
ds
in
fcmovbe
or
pop
sbb
sub
push
scas
insb
ret
out
xchg
lret
sub
cli
cld
inc
dec
push
std
dec
int
pushf
sub
cwtl
enter
or
aaa
mov
aam
testb
aam
fdivs
sti
sub
vucomisd
mov
in
dec
enter
inc
push
dec
inc
mov
inc
mov
xor
rorl
test
inc
pop
mov
outsl
call
sbb
dec
xor
lds
mov
mov
xor
pop
cwtl
ja
pop
mov
mov
in
test
lds
push
or
jmp
or
je
orl
pop
std
push
cmp
data16
adcl
inc
stc
fildll
sbb
out
xchg
dec
fstl
insl
jns
xlat
outsb
inc
sub
stos
cmc
pushf
mov
or
mov
dec
stc
nop
inc
std
sbb
mov
rcrb
enter
sub
out
bound
jns
jmp
pusha
out
push
sbb
inc
int
adc
arpl
notl
cs
hlt
and
push
popa
mov
mov
fdivrp
iret
mov
jae
bound
fidivs
cmp
ficompl
xor
imul
jno
mov
out
inc
add
and
leave
rcrl
cwtl
les
jl
push
mov
adc
pusha
xor
adc
mov
jle
out
dec
lds
in
test
jle
arpl
push
mov
mov
outsl
pop
lret
bound
dec
jbe
dec
and
push
sbb
data16
in
inc
xchg
adc
fsubrl
lret
adc
xor
pusha
jl
loopne
xchg
xchg
insb
adc
ss
cmp
and
sub
fwait
jbe
rclb
or
fisubl
iret
aad
std
inc
imul
or
jno
insl
aam
and
pop
nop
mov
cmpsb
mov
notb
xchg
loope
in
imul
sbb
xchg
jb
dec
cwtl
fdivrs
push
ficoms
cmc
sub
sbb
lds
mov
stos
fldt
test
mov
fsubl
inc
adc
xchg
xor
shlb
pop
and
adc
test
movaps
mov
push
push
cltd
add
test
cmp
dec
mov
cwtl
cmp
dec
fwait
lret
jns
cmp
push
fisubl
mov
into
data16
insb
fwait
push
gs
loopne
lods
ret
leave
int
or
adc
jge
fnstsw
pop
sbb
or
ja
das
jnp
stc
insb
pop
adc
aam
stc
mov
loopne
notl
mov
xchg
lahf
incl
popf
loop
dec
dec
test
push
inc
movsb
shlb
loopne
add
mov
ret
hlt
cmp
mov
xor
ss
or
pop
mov
hlt
adc
and
icebp
les
daa
xor
jo
sbb
ret
das
adc
fnstenv
mov
add
iret
out
inc
mov
cmpsb
pushf
loopne
dec
lods
inc
pop
out
aas
push
xchg
sub
int3
or
and
mov
adc
nop
jg
pop
aaa
adc
out
sub
push
add
xor
leave
lods
mov
xchg
add
pop
das
lea
lret
fs
mov
movb
pop
lds
push
cmp
push
cmp
loope
in
lcall
xor
mov
dec
push
inc
cmp
jne
sub
or
mov
sti
pop
js
popf
clc
lcall
jb
insl
movsb
pop
arpl
adc
popa
mov
lods
jge,pn
imul
in
hlt
adc
xor
lods
movsl
into
mov
in
fnstcw
add
add
mov
jae
dec
add
call
movb
out
cmpsb
jl
daa
aaa
sub
cltd
lods
push
inc
pop
sub
inc
push
imul
cs
arpl
jb
mov
xor
inc
lods
mov
mov
fdivl
or
mov
mulb
pop
pushf
pop
mov
loopne
xor
dec
loopne
xchg
aad
add
icebp
ds
ljmp
xor
push
jmp
imul
and
mov
adc
add
or
arpl
sbb
jl
pop
add
xor
mov
lret
xchg
pop
adc
call
or
sub
lahf
cltd
lock
rcrl
aas
outsl
inc
rcrl
push
cmp
add
pop
lcall
sbb
out
fiaddl
jno
cmp
mov
dec
and
jp
push
popa
sti
push
jb
push
jno
xor
fdivrp
pusha
xlat
cltd
lods
test
addl
dec
rolb
ret
jg
mov
data16
push
inc
add
sub
fildll
or
xorb
scas
and
sub
std
ljmp
add
ss
dec
sbb
inc
lret
mov
call
push
mov
cltd
sbb
pop
frstor
sbb
inc
fsubrp
mov
add
ffree
loopne
mov
andl
inc
scas
mov
inc
insb
jg
push
jmp
push
inc
js
pavgw
push
sub
add
inc
mov
adc
in
cmp
loopne
lods
add
jp
mov
cmpsb
pushf
fldenv
into
xchg
fs
and
fwait
add
cmp
popf
dec
push
mov
insl
adc
fnsave
lods
inc
pusha
mov
fidivl
ret
push
popf
mov
xchg
scas
add
hlt
jb
out
mov
hlt
pop
jns
add
xchg
dec
and
ljmp
icebp
mov
mov
and
ss
pop
sub
pop
push
aas
mov
xchg
ror
and
mov
cmpsb
cmpsl
loopne
inc
xlat
mov
dec
lock
dec
mov
sar
push
sbb
adc
sahf
and
sub
pop
pop
jmp
dec
ja
ljmp
pop
rep
ret
lods
sbb
mov
js
imul
mov
sbb
sti
insb
add
lods
outsb
icebp
ror
and
movsb
jns
sbb
out
dec
cmp
push
in
fdivs
inc
dec
mov
xor
sub
mov
pop
lds
adc
jp
or
sub
mov
mov
shrl
cmp
add
rcl
xchg
pop
lock
pop
das
mov
sbb
outsl
adc
xchg
test
sahf
addl
xor
jne
mov
mov
add
repz
cmp
les
adc
lcall
or
sbb
dec
lcall
arpl
ljmp
sbb
aas
call
pop
mov
adc
adc
or
xchg
cmp
dec
jae
xchg
pop
int
dec
lahf
cmpsb
mov
push
xlat
or
sarl
lea
mov
notb
push
in
xchg
push
jns
push
addr16
insb
jno
cwtl
stos
nop
inc
sbb
js
stos
push
push
mov
jg
push
jno
jge
jns
or
jns
cmc
mov
dec
and
or
fdivr
or
jecxz
inc
cmp
loop
inc
in
jnp
jae
jge
ret
add
test
cld
stos
aas
mov
pop
add
and
mov
jle
shlb
xchg
jns
jnp
out
pop
aam
subl
movsl
shlb
cltd
push
fildll
dec
ret
lret
data16
jecxz
add
repnz
test
adc
mov
sahf
movsl
mov
call
push
lcall
jl
adc
adc
daa
mov
lods
ljmp
int3
inc
sub
xchg
call
add
pop
ljmp
ss
je
cwtl
das
cmc
test
repnz
mov
std
mov
popf
scas
test
notb
js
sub
dec
cmpsb
pop
add
cmovge
repnz
sub
mov
jno
int3
notl
add
inc
into
std
pop
xchg
sbb
jbe
aam
fimull
add
dec
adc
or
shlb
pop
mov
clc
imul
mov
test
nop
out
or
and
ljmp
ss
xchg
mov
fldpi
jle
mov
adc
aam
xor
aaa
and
add
xchg
cmpsl
sbb
stos
jb
out
js
mov
push
lahf
mov
scas
popf
hlt
into
fs
stos
fdivs
test
xorl
cmpsl
push
dec
mov
lcall
push
fcomi
idiv
and
insl
addl
sbb
shrb
push
aaa
jne
xor
pop
sub
cli
xchg
lods
xor
repz
sbbb
sahf
scas
in
out
or
pop
cmp
pushf
push
pop
pop
adc
add
xor
mov
dec
icebp
xor
ss
iret
xchg
fdivl
enter
call
insb
daa
and
fs
in
popf
addr16
or
jmp
xchg
fidivs
subb
and
sub
repnz
lret
das
std
add
jnp
lret
add
ljmp
jl
lds
pop
cmpsb
add
popf
sbb
jno
lahf
mov
xchg
inc
inc
dec
shl
loope
mov
push
xor
sbb
imul
fimull
mov
xchg
inc
xor
enter
mov
push
or
in
jbe
test
sub
pop
xchg
adc
inc
in
stos
in
jno
iret
push
fildl
mov
mov
inc
push
mov
jb
lods
fldt
push
push
clc
in
test
sbbl
lods
fs
lahf
daa
in
xor
ljmp
nop
test
fucomip
cmpsb
pop
stc
sbb
arpl
mov
lds
pop
dec
es
popa
and
mov
arpl
das
or
test
loopne
std
adc
inc
outsb
push
lock
push
xor
xchg
jno
loope
xlat
jns
nop
ja
jmp
outsb
xchg
add
sbb
mov
dec
lods
jmp
sub
popf
xor
dec
mov
mov
or
hlt
mov
js
hlt
inc
adc
divb
mov
enter
mov
jecxz
mov
add
mov
roll
notb
nop
pop
test
mov
or
jp
xchg
out
rorb
pop
sahf
stos
out
cli
in
imul
mull
in
cwtl
fwait
inc
sahf
inc
jmp
inc
fmul
push
repz
mov
into
stc
adc
pop
pop
outsb
mov
insb
add
mov
xchg
daa
repz
lahf
scas
ds
rcrb
or
out
jl
mov
mov
lods
mov
fsubr
fildll
pop
cltd
sbb
stos
mov
xor
push
ja
shrl
inc
fcmovb
pop
insb
imull
jmp
jbe
ret
hlt
rcll
inc
ja
cld
push
loopne
popa
jmp
out
mov
inc
pop
int3
popa
movsl
mov
outsl
sbb
aaa
push
iret
popa
mov
hlt
sti
pop
mov
mov
cwtl
cmp
jl
xor
sub
les
movsb
call
dec
sbb
mov
inc
out
outsb
popa
out
test
and
sub
xchg
btc
jo
mov
dec
cmp
neg
mov
xchg
jmp
xchg
test
test
jnp
fs
or
loope
lret
push
shl
jno
addr16
data16
cmp
pushf
xor
mov
xchg
xchg
sub
xor
xchg
std
gs
inc
pop
popf
scas
in
leave
ss
mov
cltd
aam
es
cmp
sti
fwait
xor
adc
fsubrp
sbb
jb
dec
ja
dec
pop
imul
xchg
bound
gs
push
mov
in
mov
leave
cs
push
jne
jne
cmc
lcall
out
xor
pop
shl
std
mov
push
dec
mov
rcrb
andb
test
sti
cmp
sbb
dec
or
imul
add
and
cmpsb
sub
pop
sbb
mov
in
out
popa
cld
mov
mov
insb
call
push
push
xchg
js,pt
xorl
or
sub
fadd
sbbl
fimuls
sub
pop
add
stc
sub
mov
or
fistpl
sbb
push
ljmp
sahf
or
inc
rorl
lods
test
adc
ds
fstl
dec
movsb
push
inc
and
fsubrs
push
pushf
fildll
push
mov
jb
mov
lret
xor
mov
nop
lret
inc
cltd
cmc
je
and
mov
cmp
ss
push
sub
xor
or
out
cmp
daa
das
loope
hlt
mulb
jle
aam
lods
and
or
jae
dec
push
mov
out
outsl
push
shrl
xchg
or
or
mov
cmp
sub
sub
inc
add
or
push
mov
xorb
ret
mov
iret
xchg
pop
clc
xchg
ja
loope
mov
push
cltd
aas
lret
jae
inc
out
popf
pop
sub
popl
jle
sub
pop
loope
ret
insb
test
rol
sbb
icebp
pop
and
testb
adc
mov
stos
fildl
out
aas
in
dec
cmp
push
test
mov
pop
loop
std
mov
jns
daa
sahf
movsl
push
add
fisubrl
pop
faddl
jg
and
cmp
adc
nop
shll
or
dec
mov
jo
adcl
gs
mov
mov
data16
and
repz
dec
and
pop
sbb
movsl
arpl
jae
adc
stos
in
jns
sbb
mov
mov
fs
push
fisttpl
shrb
mov
sar
xlat
cmc
mov
es
loop
aas
fsubrl
push
popa
shll
adc
xchg
push
pop
pop
insl
jns
inc
cli
add
sub
adc
adc
or
jmp
mov
aas
popa
pushf
xor
fucom
add
xor
fsubl
fbstp
fcmove
push
or
add
rclb
mov
jae
dec
test
loop
insb
dec
pop
xchg
push
add
dec
sbbl
imul
pop
fwait
shrl
mov
mov
nop
fsubrs
jnp
scas
pop
loopne
sbb
dec
cltd
insb
mov
jmp
stc
je
jne
pop
out
xlat
mov
sub
add
mov
mov
bound
mov
loope
xchg
psubsb
lahf
repnz
ret
jae
push
jne
rorl
pop
sbb
xor
popa
mov
xor
int3
cmp
adc
mov
jle
aas
mov
loope
xchg
pop
inc
inc
ret
cmp
push
adc
mov
test
scas
pusha
bsr
test
adc
push
xchg
jle
cmc
out
int3
call
cmp
push
inc
mov
shlb
ret
lcall
jle
mov
cmc
pushf
lods
push
push
pusha
push
jl
cmp
jb
cltd
xchg
pop
clc
outsl
js
inc
push
push
out
ret
bound
sarl
or
testb
jnp
mov
mov
push
dec
mov
lock
lods
hlt
xchg
cmpsl
ds
mov
xor
aaa
mov
adc
lock
jno
das
sub
sbb
inc
add
jg
inc
mov
push
inc
cld
push
shlb
stos
aad
pop
inc
stos
test
rolb
mov
call
dec
pop
inc
mov
inc
jp
dec
add
adc
sar
sahf
stos
sbb
dec
mov
mov
fs
mov
lret
movsb
mov
sub
lret
ficompl
imul
dec
pop
jo
inc
out
add
xchg
sub
loopne
fidivrs
ud2
sbb
imul
lock
jo
in
add
xor
std
aas
aad
mov
push
mov
aaa
push
xchg
ss
cmpsl
push
rcrb
fmul
jl
xchg
cs
es
insl
pushf
out
call
adc
lods
pop
push
cmp
mov
decb
imul
mov
cs
xchg
xchg
jmp
mov
int3
std
lret
in
pop
mov
add
push
fistpll
gs
push
mov
push
sbb
rcl
outsb
add
push
sbbb
or
cmp
cmpsb
jecxz
inc
pusha
ljmp
mov
aaa
add
xchg
xor
dec
in
loop
gs
hlt
in
in
dec
push
pusha
cli
pushf
leave
mov
ljmp
insl
nop
cmp
dec
outsl
push
std
push
push
adc
imull
pop
jg
data16
shrb
in
sti
and
ret
xlat
cmp
lcall
pop
jae
sub
je
inc
shlb
ss
dec
xchg
gs
xchg
adc
push
ret
fisubl
push
or
mov
inc
rcrb
mov
cli
dec
push
outsb
or
iret
mov
adc
or
mov
xor
fmul
xor
test
or
mov
jle
jle
jmp
rolb
das
dec
xor
enter
add
sbb
inc
push
addr16
gs
and
lcall
pushf
add
sbb
aaa
cltd
lock
push
inc
add
and
gs
int3
incl
stos
mov
in
out
pushw
xchg
xchg
mov
jb
call
imul
daa
inc
push
mov
or
sub
mov
inc
mov
push
ret
sbb
adc
imul
in
jle
sub
pop
insl
cmp
mov
pop
adc
adc
push
es
sbb
aad
xchg
jae
scas
lea
cltd
xor
ja
into
rcl
mov
add
pop
aaa
mov
fcmovne
fnstcw
sub
ja
cs
mov
mov
lret
movsb
arpl
sbb
push
adc
pop
imul
cmp
mov
adc
sbb
leave
ret
sti
push
push
rcll
xor
inc
adc
add
push
jno
jns,pt
imul
into
iret
ret
push
inc
push
xor
and
pop
fs
testb
stos
je
push
push
std
adcl
xchg
pop
pop
jnp
dec
xor
xor
pop
in
xor
insl
test
pop
cmpsl
cmp
sub
outsl
vpackssdw
mull
xchg
cmp
icebp
test
xor
ret
cmp
packssdw
bound
mov
addr16
mov
jbe
lock
mov
pushf
jmpw
lock
in
stos
rcrb
push
js
pop
ja
lods
cmp
and
cmpsb
inc
add
push
hlt
cmp
popa
jo
icebp
inc
lods
jbe
jg
dec
in
mov
call
repz
sub
adc
mov
sub
inc
js
ds
adc
xchg
add
and
notb
or
test
lods
inc
scas
scas
ffreep
pop
and
fadds
push
dec
or
enter
mov
mov
mov
adc
jb
mov
lcall
add
pop
lahf
pop
and
nop
pop
sti
and
sub
fwait
or
shrl
es
test
repnz
int
xchg
pusha
aam
dec
lods
out
push
out
and
xchg
jmp
add
cmpsb
es
jnp
jo
mov
mov
test
into
and
int
lods
inc
xchg
outsl
aad
push
movsl
mov
pop
rolb
lea
pushf
mulb
xchg
xor
daa
mov
idiv
jae
cmp
pop
cmp
imul
outsl
iret
testl
jne
insb
cmpsb
sbb
cmp
jecxz
cmp
out
xchg
pop
xor
pop
insb
mov
xchg
ja
cwtl
sahf
sub
mov
fisubrs
push
daa
gs
jle
sbb
cmp
shrb
scas
repz
mov
mov
jbe
push
setnp
lea
push
cwtl
loop
sub
andl
sub
jg
sbb
in
pop
cmpsl
fidivl
mov
punpckhbw
xchg
sub
cmp
repnz
out
inc
aad
sub
imul
orl
lods
xchg
pop
push
les
jbe
pop
jp
scas
mov
fldt
mov
jne
aad
call
mov
push
cmp
add
test
dec
arpl
jns
imul
pop
jae
nop
xor
cli
xor
jmp
mov
loopne
scas
aad
pop
adc
pop
ret
jnp
push
add
mov
in
gs
loopne
aas
loope
cmp
add
dec
xlat
stos
test
jb
jns
gs
fmull
jl
mov
xrelease
notl
and
push
cmpsb
iret
mov
mov
movsl
out
pop
xchg
aad
stc
aaa
pop
ficompl
jg
dec
add
ss
das
rcr
jbe
inc
pop
mov
dec
pop
scas
cmpl
or
cmp
inc
mov
pop
aad
repz
icebp
shll
adc
xchg
ja
pop
movsb
dec
rorl
add
or
or
popf
in
xchg
insl
and
pop
aad
jne
adcb
aas
data16
jmp
ja
xor
cmpsb
push
mov
cmp
and
mov
and
clc
repnz
sbb
mov
mov
cmp
in
inc
mov
in
xor
or
cmpsb
dec
ret
leave
mov
xchg
insl
das
lods
icebp
jo
icebp
hlt
push
and
in
dec
lds
js
sub
add
std
mov
icebp
jno
sbb
cltd
xchg
cmp
rcll
sbb
jns
lcall
cwtl
das
cltd
mov
push
adc
add
jge
fwait
xor
testb
or
ficoms
bound
mov
clc
cwtl
cmp
mov
adc
pop
jmp
int
adc
stc
imul
sbb
push
aam
das
fwait
adc
xchg
icebp
imul
lret
in
in
xor
sbb
in
int3
jb
inc
in
ret
in
faddl
sub
lods
jb
out
or
andl
in
jmp
mov
stos
mov
fscale
xchg
pop
pop
xor
fs
shlb
in
dec
cmp
xorb
cmp
insl
cmp
cltd
incb
jbe
movsl
test
aad
fbstp
sahf
sub
adc
push
fucomp
cmp
adc
pop
jp
das
cmp
das
and
dec
loope
test
call
and
lock
scas
inc
pushf
jo
into
nop
test
xor
jo
cmp
adc
mov
sub
xchg
ds
aas
push
dec
add
mov
leave
inc
pop
je
cmp
aam
jle
ds
push
out
pusha
test
push
sbb
movsb
enter
mov
adc
and
lcall
pop
lret
das
xchg
mov
and
in
and
push
je
jbe
je
shlb
scas
jnp
rcrl
rclb
mov
lahf
jbe
pop
sbbb
std
cmp
xor
icebp
in
add
push
movsb
stc
sbb
testl
adc
adcb
xor
and
lods
fdivs
mov
inc
mov
repnz
cmpsb
mov
lret
inc
inc
rcrl
add
fidivrl
push
mov
fisttpl
pop
and
insl
sub
xor
add
mov
mov
inc
data16
lcall
cmpsb
push
sub
push
in
repnz
inc
scas
pop
loop
idivl
and
mov
or
loopne
jne
dec
xlat
out
dec
out
mov
iret
or
mov
xchg
stos
push
imul
push
in
ds
sub
loop
or
mov
mov
imul
or
imul
mov
ss
jnp
inc
in
movsl
fbstp
cwtl
jecxz
lret
nop
sub
jns
mov
xor
aam
stos
insl
inc
pushf
push
out
mov
push
in
addr16
xchg
fbstp
ficomps
popf
nop
nop
arpl
lret
mov
cwtl
mov
out
and
mov
sbb
mov
lcall
mov
lock
repz
mov
je
rolb
testl
push
iret
mov
add
sbb
push
inc
mov
push
jl
pop
sub
and
lods
cmp
sahf
cmpsl
or
lds
sbb
push
push
cmp
push
jmp
lods
inc
mov
fxch
mov
outsb
hlt
push
inc
mov
sbb
loop
jmp
dec
shll
cmpl
lods
cli
jg
sub
inc
push
dec
mov
arpl
cmp
mov
shlb
cli
jp
jns
dec
cltd
cwtl
and
mov
in
mov
xor
stos
dec
cld
loop
jmp
mov
push
xchg
jge
push
cmp
push
sti
orb
or
or
inc
xchg
jne
sbb
sahf
outsl
lcall
divl
notl
lret
movsl
sub
pop
cmpsb
mov
pushf
mov
jbe
push
sti
mov
push
aaa
inc
mov
sub
daa
lods
adc
arpl
adc
mov
popa
mov
cltd
shrl
fists
scas
ffree
fwait
out
sarb
and
fwait
hlt
in
jbe
test
mov
cltd
aad
cwtl
outsl
jp
mov
xorl
std
mov
fists
rcrl
cmp
dec
mov
cltd
dec
mull
and
sti
cmp
outsb
fwait
xor
sub
cmc
loopne
sub
add
mov
mov
add
inc
sbb
inc
int
insb
das
mov
in
mov
lods
loop
rolb
xorl
enter
int
push
push
imul
sbb
xchg
dec
loop
in
shrb
shlb
clc
hlt
xchg
push
popf
loop
jmp
mov
aam
mov
stos
outsb
inc
or
mov
test
mov
jmp
mov
push
push
leave
pusha
cmp
push
hlt
push
pushf
xor
es
xchg
push
testb
shlb
cmc
pop
mov
and
into
aad
sbb
jmp
sub
xor
dec
pop
cs
shl
je
dec
or
lds
sub
cmpsl
jmp
add
mov
out
addl
lahf
mov
in
add
out
mov
lret
andb
stc
dec
push
test
popf
cmp
adc
fwait
adc
sahf
cli
clc
pop
mov
outsb
mov
ret
dec
cmp
andb
ss
or
xchg
push
push
pop
jl
jb
lods
mov
push
fbld
cmp
cli
cmpsl
outsl
cli
call
mov
dec
repz
push
lock
add
jl
mov
fldcw
pop
jae
movsb
jnp
les
sahf
adc
mov
gs
jb
xchg
pushf
jb
mov
mov
cmpps
pop
cltd
jecxz
dec
stc
push
out
mov
xchg
jmp
popf
cmp
dec
mov
loopne
mov
sub
sub
jns
and
adc
sub
xchg
xor
and
jne
push
cld
mov
mov
mov
pusha
and
outsb
inc
out
jecxz
fidivs
adc
in
sbb
pop
inc
ret
hlt
cmpsl
jecxz
jbe
rcll
xor
ret
jmp
mov
pop
out
stc
lods
popf
inc
mov
imul
lahf
xor
scas
mov
jge
fisubrs
push
lea
xor
das
push
add
popf
xor
push
mov
inc
std
cwtl
dec
test
sti
leave
ljmp
xor
jbe
push
lcall
popf
mov
stos
mov
aaa
pop
into
fdivs
lret
jae
rcrl
ljmp
jno
lcall
es
loope
push
cld
test
iret
icebp
mov
cs
popl
in
fcomp
sub
mov
sbb
pusha
dec
inc
fsubr
jns
insb
add
lcall
out
addr16
inc
es
stos
mov
imul
push
push
and
mov
cmp
push
roll
in
loop
xchg
and
jno
sti
and
jge
xor
sbbb
jo
test
mov
mov
add
xchg
les
ficoml
repz
cmpsl
aaa
and
mov
lahf
decb
in
push
int3
sub
aas
orl
add
out
adc
or
loopne
jg
xchg
mov
inc
sbb
js
cmp
jg
mov
out
sub
aaa
add
cmp
mov
rclb
les
jecxz
push
xchg
sub
jbe
scas
xchg
or
sub
inc
lret
dec
mov
je
sub
shlb
aad
pop
into
fdivrl
pop
scas
lret
sub
test
jle
jmp
cld
mov
or
sahf
scas
mov
push
loope
add
outsl
mov
sub
pop
shll
repnz
addl
and
sub
lahf
pusha
jge
sbb
mov
xor
int3
gs
in
fdiv
adc
sbb
ret
hlt
push
in
cmpsb
icebp
mov
add
jne
and
adc
ror
inc
cmp
cltd
cltd
aas
dec
lret
mov
pop
imul
mov
jle
add
sbb
cmpb
loopne
jg
xchg
sub
lds
in
mov
imul
stos
and
adc
lds
xor
cld
push
sbb
xlat
mov
aaa
inc
or
mov
shld
cmp
in
push
out
outsl
push
inc
jbe
cmpsl
cmpl
jl
xchg
mov
push
ss
push
iret
ret
jbe
push
sub
push
cld
lcall
clc
sbb
sbb
out
or
scas
cmp
jg
sbb
cltd
add
out
pop
xchg
popf
xor
jle
lds
inc
in
mov
and
xchg
mov
cmc
movsb
rcll
adc
int3
push
dec
fcompl
pop
call
sbb
and
fsubrs
cmpsl
mov
iret
and
stos
mov
stos
xor
or
mov
lods
stc
nop
fisttps
mov
sbb
rcr
clc
fs
xor
shl
adc
fmul
mov
mov
xlat
xlat
mov
bnd
loope
out
test
movsl
xlat
pop
das
jge
pop
adc
fsubrl
int3
xchg
or
adc
and
xchg
movsb
xor
cmovle
jmp
mov
sahf
sub
mov
push
add
test
jp
fnstenv
mov
shll
push
dec
sahf
sub
test
or
daa
ret
inc
lock
xor
cwtl
cli
xchg
data16
mov
push
in
test
dec
or
push
fldt
fadds
sub
pop
or
mov
dec
imul
inc
aam
xchg
outsb
mov
or
mov
les
loop
cmp
mov
pop
repnz
xlat
fnsave
lods
xchg
cmp
pop
xchg
jbe
sahf
or
lds
lret
xor
push
add
pop
mov
xor
jp
cwtl
jns
xchg
insl
jge
cmp
mov
pop
leave
outsl
popf
stc
mov
push
pushf
mov
arpl
add
xor
and
mov
sub
sbb
adc
sarl
jae
loop
cmp
popf
je
fldpi
ss
push
fwait
xor
test
iret
enterw
mov
mov
or
push
inc
push
scas
and
push
imul
test
mov
xchg
or
xor
push
stc
int
xor
stc
outsl
add
or
dec
lcall
mov
push
out
lret
push
inc
or
adc
aas
xor
mov
xchg
in
adc
into
testl
push
xchg
push
pop
push
mov
mov
mov
out
jo
fdivrl
pop
nop
int3
arpl
fwait
enter
jne
add
repz
adc
jbe
sub
jl
mov
ret
pop
push
pop
mov
pop
sti
mov
mov
jg
pop
gs
dec
push
or
xorb
push
out
imul
pop
cmp
lahf
jecxz
cmp
xchg
sti
push
stos
repnz
shll
sub
mov
shr
aas
loope
nop
mov
movsb
jnp
popa
rep
daa
or
inc
lds
lock
and
xor
loopne
in
push
cmpsl
fcmovnbe
pop
sub
shlb
pmaddwd
or
pop
xor
bound
pop
pop
jne
dec
jnp
lods
mov
in
mov
dec
scas
sbb
imul
sub
lods
pop
inc
pop
daa
sub
push
clc
push
xchg
pop
int3
sub
orb
push
mov
imul
push
mov
shrb
jbe
mov
sbb
lret
xlat
pushf
sub
addr16
mov
lcall
dec
popa
clc
jle
push
cltd
les
mov
xor
or
popa
mov
imul
dec
dec
pop
iret
es
lret
in
inc
cmp
add
jns
mov
adc
mov
cmp
xchg
sbb
mov
roll
ja
popf
sar
out
push
or
mov
xchg
xchg
adc
mov
push
jb
loopne
data16
out
popf
lahf
pop
dec
jmp
mov
stos
scas
jmp
call
or
mov
test
int3
push
push
xor
lods
adc
push
or
aaa
nop
out
mov
std
xchg
sbb
fidivs
pop
insl
push
sbb
frstor
push
sbb
fbstp
mov
adc
cld
stos
jae
out
in
pushf
sbb
shrl
pusha
into
or
mov
jne
cmp
mov
mov
hlt
test
cmp
in
pop
pop
test
jmp
add
add
jg
ss
mov
mov
sub
adc
fstpl
sbbb
or
imul
aas
aad
dec
push
cmpxchg
roll
les
mov
neg
lret
sti
incl
fstps
lock
mul
or
pop
mov
clc
jle
loop
movsl
dec
adc
lock
xor
shrb
add
inc
push
mov
sub
and
lcall
shrl
sbb
or
jno
adc
fucom
sahf
out
ja
mov
mov
or
inc
jle
jns
outsl
mov
out
or
inc
xchg
mov
ret
addr16
scas
add
pop
fwait
clc
aas
cld
xchg
pop
rcr
xlat
test
repnz
lock
cmp
sti
stos
pop
adc
xchg
outsb
cmp
aad
mov
jl
cli
xorl
rcl
cmp
jl
daa
insb
cmpsb
jge
and
jmp
mov
inc
popa
call
in
lods
pop
mov
fiadds
xchg
mov
mov
mov
scas
jne,pn
iret
xor
mov
pop
xchg
test
mov
push
add
jl
lods
int
clc
xor
outsb
lret
ret
pop
jo
aam
pop
ds
inc
arpl
sbb
sbb
mov
lret
mov
aam
jae
out
xchg
dec
xchg
add
mov
hlt
les
call
xor
jns
and
pop
cmp
cld
fwait
in
pop
push
inc
adc
xor
pop
ret
jbe
push
jp
sub
pushf
fnstsw
push
adc
stos
xor
mov
push
mov
xlat
test
pop
pushf
mov
sahf
xor
or
dec
pop
hlt
xchg
mov
or
aad
jg
outsl
test
lock
les
jmp
mov
pusha
pop
cmp
cmp
shrl
add
add
pop
add
sub
and
aam
sbb
imul
mov
lahf
decl
pop
and
push
xchg
xchg
inc
hlt
out
mov
dec
outsb
lret
push
mov
fnstcw
push
cmp
sub
sub
test
rclb
ret
mov
in
jns
mov
mov
das
add
rorw
push
xor
lea
adc
cwtl
daa
aas
loopne
add
push
inc
iret
sub
imul
add
cli
xchg
xchg
fmull
push
js
clc
dec
xchg
push
lcall
push
leave
lcall
les
sbb
aam
addr16
jae
fwait
mov
push
cs
xchg
sbb
pmulhuw
jecxz
insl
and
movsb
subl
fs
dec
loop
pushf
and
or
push
call
leave
dec
shlb
fnstsw
adc
xor
insl
pop
test
icebp
xchg
mov
das
xchg
ret
ja
jb
in
jecxz
stos
mov
dec
jb
fiaddl
mov
pop
xchg
add
and
gs
xchg
xor
and
push
adc
cmpsl
cmp
into
lret
test
add
xchg
repnz
xchg
and
xor
pop
fmuls
push
pop
xor
stos
sbb
and
xor
xchg
mov
mov
shll
add
loop
dec
xor
xchg
popa
ret
fistl
imul
sbb
shrb
outsb
mov
lods
add
xchg
mov
add
add
sub
dec
inc
fwait
lret
and
mov
lock
jmp
push
add
adc
adc
inc
xchg
add
movsb
or
mov
rcll
aas
test
add
sub
outsl
mov
popf
and
xchg
popl
lcall
cmpsb
imul
call
mov
sbb
push
cmp
push
xchg
or
cmpsl
fldenv
sbb
test
sahf
xor
inc
ds
leave
loope
outsb
mov
dec
xchg
mov
push
inc
sarl
mov
sti
dec
add
clc
inc
dec
cmp
mov
add
subb
les
sbb
sub
jnp,pt
mov
xorb
imul
mov
mov
test
lods
movsb
push
xlat
cmp
jg
test
inc
lods
pop
dec
xor
shlb
loopne
mov
js
sbb
pop
test
sbb
imul
test
cmc
dec
repnz
je
rep
mov
imul
cmpsl
shr
lahf
hlt
push
mov
adc
jno
je
mov
mov
es
cmp
sahf
mov
mov
jmp
out
movsb
popa
lods
pusha
sarb
leave
xchg
movlps
and
push
adc
add
outsb
iret
lahf
pop
xchg
imul
bound
fldl2t
aas
rcll
into
add
pop
xchg
arpl
hlt
les
frstor
mull
jo
in
mov
in
int3
sar
and
mov
fldt
lcall
in
jno
jno
or
adc
movsb
mov
addl
dec
lods
cld
inc
jmp
ret
push
push
add
mov
mov
addl
pop
jns
dec
pop
xor
repnz
jbe
xlat
addr16
cwtl
dec
pop
loopne
fnstcw
fistpl
dec
stos
insl
std
cmpsb
inc
je
jmp
sub
xchg
ja
dec
xchg
pop
loope
in
int
adc
aas
push
cltd
add
mov
pop
data16
mov
push
cli
in
xor
or
pop
xor
cmp
in
push
shlb
es
or
lret
stos
jns
mov
popa
mov
dec
idivb
lods
dec
ss
xchg
pusha
mov
vpsrld
clc
pop
cltd
lods
ljmp
xchg
in
mov
fbstp
push
adc
je
fiaddl
cwtl
aaa
into
leave
test
lods
test
inc
xor
out
loope
add
fisttpll
ret
mov
lret
inc
lret
adcl
push
sahf
jno
add
pusha
push
mov
sbb
loop
lret
shr
sbb
jmp
push
jmp
test
iret
out
cmp
fdiv
adc
stos
inc
pop
filds
adc
mov
adc
push
fidivs
or
stos
pop
mov
sub
cmp
insl
pop
shlb
addl
cmp
add
mov
cmp
cmp
iret
jo
jno
and
repnz
cmp
mov
imul
pusha
mov
xchg
sbb
inc
push
adc
mov
and
rorb
xchg
scas
in
dec
stos
cmp
cli
add
xchg
mov
and
push
cli
dec
mov
xor
inc
jmp
push
insl
dec
aam
cli
or
outsl
mov
test
cmp
and
rcr
je
int3
arpl
aad
stos
fbld
in
push
fdivrl
lret
push
push
jg
sub
enter
sub
or
and
das
sub
jo
daa
pop
ret
pop
dec
shlb
adc
mov
mov
fadds
nop
mov
xchg
imul
mov
inc
xor
scas
ja
or
inc
jmp
imul
xchg
xchg
and
add
adc
mov
test
mov
mov
fisubrl
xchg
test
sbb
push
mov
cwtl
xor
push
dec
fistps
data16
popa
mov
cli
or
test
movsl
pop
and
repnz
cmpsl
inc
push
and
jg
xor
push
mov
pop
adc
pop
loopne
iret
pop
mov
mov
push
mov
adc
stc
inc
sbb
outsl
sub
fwait
add
jns
lods
jmp
sub
ret
sbb
xor
xor
inc
mov
sub
data16
repz
lock
sub
xor
jmp
mov
sahf
mov
roll
arpl
in
fildll
repz
or
xchg
subl
or
fwait
test
add
ss
stos
push
push
dec
mov
insl
push
insb
lods
jg
test
test
fadd
arpl
fdivr
dec
pop
sub
lods
out
cmp
mov
decl
ljmp
xchg
mov
fadds
sub
sbb
or
xor
out
xchg
incb
movsb
sar
test
repnz
cltd
clc
mov
clc
jns
mov
lahf
scas
add
push
jle
test
mov
push
adc
mov
sbb
inc
fimull
xor
cmpsl
dec
pop
cmp
dec
pop
outsl
sbb
jae
shrl
jecxz
sbb
sahf
mov
stc
aam
and
jmp
mov
movsb
add
daa
mov
lods
xorl
jmp
fs
push
xchg
shrl
rorl
sbb
push
cmc
adc
sbbb
mov
sbb
shlb
dec
xchg
push
prefetch
xchg
sbb
mov
popa
ret
sub
aad
popa
xor
sbb
arpl
push
xor
xchg
sub
cli
scas
sbb
lahf
jg
jae
jmp
sbb
push
test
or
xchg
inc
sahf
cmp
sbb
push
add
sbb
outsb
ret
xchg
sbb
jge
aaa
adc
lock
cmpb
jae
mov
sahf
fdivrs
or
ret
sub
outsl
sahf
and
notl
adc
add
mov
es
ljmp
movsl
mov
mov
orl
xor
in
jnp
mov
mov
ja
es
cltd
flds
rorb
out
push
stos
mulb
mov
cmp
clc
pop
repz
lahf
lods
fnstcw
repnz
lret
add
sub
add
mov
arpl
scas
push
push
mov
sbb
xchg
in
inc
nop
and
xchg
pop
sub
stos
xchg
enter
dec
icebp
inc
shrb
mov
ljmp
xchg
ja
cld
sbb
test
xchg
pop
dec
push
int3
xor
loop
pop
and
inc
jmp
push
cs
xor
and
addl
nop
xchg
or
lret
and
jp
pavgw
xchg
icebp
xlat
sahf
stos
xchg
xchg
mov
sub
cmpsb
hlt
lret
push
cmp
enter
mov
mov
push
fsubr
cli
leave
jb
sbb
inc
cmp
mov
cmpsb
cld
icebp
pop
pop
out
mov
icebp
jb
into
outsb
icebp
dec
hlt
int3
pop
add
jmp
sbb
cli
mov
ss
pop
pushf
hlt
lret
loopne
cmp
inc
vpcmpgtw
movsb
push
jg
fdivp
andb
cmpsb
adc
js
mov
cmp
cs
lret
outsb
in
arpl
pusha
inc
cmc
push
filds
fstl
call
in
cli
pop
sbb
sti
pop
in
xlat
test
mov
inc
fstpl
dec
cli
jno
fucomip
inc
test
inc
fwait
roll
inc
jmpw
inc
mov
mov
repz
push
adc
out
mov
out
or
into
pop
lds
inc
pushl
mov
in
pusha
mov
dec
sti
sarl
jbe
les
sbb
lahf
inc
gs
sbb
mov
fnstenv
out
scas
sub
or
insl
sub
xor
pusha
aas
sub
leave
fsts
outsb
cmp
notb
leave
mov
sti
stos
cli
xchg
iret
data16
jns
divl
out
add
pop
icebp
test
jecxz
loope
aam
wrmsr
enter
adc
and
jne
filds
leave
test
push
jbe
ja
int
jmp
dec
lret
dec
or
sub
data16
stc
cmpsb
notb
jne
bound
mov
shlb
adc
push
sub
int3
gs
adc
jae
xchg
sub
hlt
sarb
subl
push
jb
loope
mov
mov
xchg
fbld
jle
xlat
icebp
out
je
dec
and
dec
inc
cmp
sbb
cmp
loop
mov
push
shll
fisttpll
cli
icebp
jmp
dec
mulb
sbb
sarb
fstpt
sub
cmp
mov
lock
call
inc
pusha
xchg
inc
cmp
das
lds
jle
fxch
jne
cmpps
pop
hlt
movsl
enter
lds
pop
outsb
pop
cmpsb
mov
jp
adc
mov
and
js
jae
or
mov
fs
imulb
sarl
mov
push
fcompl
or
add
cwtl
or
fnstcw
insb
sahf
sub
jle
mov
jns
cli
pop
push
adc
lcall
sbb
push
lock
dec
pop
mov
inc
fucom
and
mov
jge
ja
les
or
xchg
push
push
mov
xchg
cli
rcrb
mov
jecxz
cltd
xchg
or
cltd
sbb
leave
mulb
insl
add
and
testl
outsl
rclb
dec
mov
sahf
push
scas
inc
out
mov
jnp
sub
repz
push
inc
pop
out
xchg
call
pop
dec
adcl
add
mov
xchg
mov
setb
cmp
add
popa
in
pop
dec
mov
sub
push
in
inc
sub
inc
push
daa
cmp
and
fs
dec
mov
pusha
adc
fdivrl
data16
shlb
sub
push
popf
or
xchg
inc
insb
dec
rol
jnp
fidivrl
scas
dec
icebp
mov
fnstsw
xchg
nop
and
adc
mov
push
sahf
das
cli
das
insl
sub
mov
data16
lcall
stos
inc
push
jmp
clc
ljmp
pop
inc
push
and
sub
mul
dec
mov
aam
rcr
addr16
in
aam
jge
mov
andb
test
sub
xchg
lcall
or
mov
and
jno
stos
xchg
mov
scas
mov
popf
push
jmp
lock
mov
cld
mov
push
mov
addr16
je
mov
pop
xchg
adc
addl
popw
lea
mov
in
xor
lods
fldl
mov
push
fisttpll
and
inc
add
adc
daa
push
add
jbe
push
mov
inc
js
lea
xchg
decl
xor
push
es
push
jecxz
pop
push
sub
movsl
xchg
fwait
mov
xor
and
mov
dec
jns
bound
and
dec
dec
push
adcb
mov
mov
push
mov
jae
xor
and
mov
je
test
inc
mov
ja
test
pxor
mov
jb
mov
mov
mov
arpl
push
jnp
vpsrld
fnstenv
std
or
mov
fsubrp
pop
push
loop
adc
cwtl
idivl
push
sbb
jecxz
adc
mov
out
inc
arpl
inc
ret
daa
dec
xchg
aas
jae
push
jge
mov
add
pop
mov
in
subl
lret
mov
or
addl
xor
push
adcb
mov
fidivrl
shl
xchg
ljmp
filds
in
and
outsb
faddl
rcr
jbe
enter
inc
out
pop
out
mov
pop
fsubs
aam
mov
inc
fldenv
sub
mov
outsl
call
xchg
insl
jecxz
or
pop
adc
outsl
push
push
push
mov
orl
mov
xchg
pop
imul
dec
mov
xor
bound
call
test
dec
or
aad
leave
fstps
lds
add
inc
fcompp
add
leave
test
xor
xor
or
xchg
sub
cmp
stc
xchg
pop
nop
cmc
add
movsb
out
jle
mov
shrb
into
pop
repz
int3
arpl
ljmp
dec
fimuls
xchg
ja
sub
mov
dec
add
mov
fcmovu
movsl
das
cmpsl
iret
fcmovnu
push
xor
imul
dec
push
xchg
dec
jecxz
cmp
sbb
popf
cmc
mov
stos
sub
test
mov
mov
sbbl
stos
lock
add
or
in
dec
in
cltd
inc
mov
jg
fstl
adc
or
inc
push
ds
and
or
imul
iret
adc
adc
aas
add
push
scas
out
or
mov
leave
imul
or
push
ljmp
je
pusha
rorl
jl
xchg
mov
dec
sub
in
das
into
imul
dec
popa
clc
jge
xchg
clc
sbb
adc
fsts
stos
add
gs
lcall
xlat
xor
push
outsb
cmp
mov
lret
pop
sub
test
mov
imul
adc
sbb
xor
arpl
aaa
fldcw
push
cmp
lds
pop
repnz
lods
shrl
insb
repz
inc
mov
popf
push
push
out
cmp
xor
push
rol
test
aaa
dec
aam
lcall
sbb
repnz
ret
roll
dec
cltd
jp
sub
sarl
xor
push
sub
mov
test
in
sub
aam
lea
mov
and
jge
js
lds
dec
rol
je
mov
push
neg
nop
je
gs
out
pop
cmpsb
jecxz
clc
mov
stos
push
js
pop
lret
xlat
jp
daa
ret
mov
loop
cmp
cmp
cmc
mov
add
xor
pop
scas
cld
adc
popf
add
mov
adc
subb
add
test
dec
dec
ss
daa
gs
xchg
mov
xchg
add
rcl
xorl
xchg
add
and
mov
xor
sahf
clc
cwtl
xlat
clc
and
mov
lcall
mov
push
imul
mov
or
dec
or
lret
cwtl
pop
pop
or
mov
popf
mov
or
adc
add
jne
mov
add
loop
inc
dec
lcall
or
imul
mov
inc
and
int3
cmp
mov
jb
jge
push
cmp
dec
in
icebp
adc
incb
lcall
bound
lahf
ss
int
cmc
ret
mov
inc
iret
cmp
and
repnz
test
adc
loop
jae
cmp
mov
cmp
data16
js
ja
orb
sbb
jnp
stos
sar
dec
das
cltd
sub
mov
jge
push
mov
adc
inc
movsl
cli
cmp
jns
les
andb
push
aaa
pop
or
aam
inc
jmp
repnz
aam
sahf
or
cs
pop
scas
pop
scas
jp
jnp
es
das
fwait
jl
cli
or
int
jecxz
jns
cmpsl
enter
les
pop
mov
sbb
adc
cmp
lret
add
pusha
push
cmpl
add
pop
pushf
clc
stos
or
fwait
test
push
xor
int
jnp
dec
rorl
scas
scas
sub
mov
int3
cmp
push
test
sbb
cwtl
shrl
dec
push
dec
add
mov
pop
adc
jns
cmpsl
push
mov
fsubrl
fld1
push
sub
jo
adc
xchg
test
std
pop
lods
sahf
push
and
mov
mov
das
mov
and
sub
lods
jge
pop
xchg
loope
pop
andb
mov
pop
pop
xlat
ja
pushf
test
mov
lret
aam
outsb
pop
mov
jl
xor
add
sbb
je
loop
int3
lcall
out
loop
negb
cmp
pop
pop
xor
shrl
ret
movsl
ret
xor
push
or
xchg
cmpsl
sub
mov
mov
cwtl
lcall
leave
outsb
cwtl
jbe
into
xchg
scas
add
xchg
data16
jo
push
or
ja
dec
inc
stc
sbbb
xchg
dec
aaa
xor
iret
ja
hlt
push
loopne
push
and
mov
inc
bnd
dec
js
push
fucompp
cwtl
int3
pop
into
and
dec
sti
imul
mov
movsl
inc
std
sarb
out
sub
xchg
fcompl
or
aaa
cmpsl
mov
fs
adc
and
adc
dec
jg
and
xchg
adc
stos
lea
xchg
sub
lea
cld
mov
incb
scas
mov
jbe
iret
push
and
clc
les
in
and
mov
mov
fistps
pop
xor
es
pushl
jp
or
cmc
cmp
les
popf
adc
popf
cmpsl
inc
sahf
or
dec
push
and
pop
jle
int
pop
mov
push
out
and
ja
aaa
add
xor
int
and
ljmp
xchg
jbe
loop
xchg
aad
pop
pop
adc
add
aas
adc
lods
mov
jne
sub
or
outsl
nop
push
mov
imulb
cmp
adc
dec
pop
or
cmp
sub
dec
mov
fidivrs
cwtl
mulb
pop
mov
bound
fsubrs
jp
clc
out
scas
jbe
movl
xor
fmull
ss
cwtl
pop
inc
out
sub
int3
add
icebp
adc
movsl
sbb
je
insl
jp
out
inc
sub
lahf
divl
fisubl
aas
loopne
push
out
movl
inc
xchg
inc
inc
fsts
pusha
imull
pusha
xlat
adc
cld
push
stos
push
mov
ja
cmpsb
pop
xor
idivl
push
push
push
lcall
cwtl
fwait
int3
in
cwtl
jp
cld
dec
and
mov
xchg
pop
dec
pop
adc
pop
shlb
dec
and
das
iret
aad
repz
nopl
mov
fstl
dec
pop
adc
sbb
cs
pop
outsb
mov
mov
or
pop
imul
sbb
addl
and
jp
mov
mov
sbb
fidivrl
sbb
mov
test
ss
addr16
movsl
ret
incl
sub
arpl
incl
inc
xchg
scas
jb
adcb
sahf
cmc
adc
push
push
leave
mov
pop
out
push
into
xchg
aad
push
idiv
cltd
push
or
xorb
js
cmp
test
repz
cmc
loop
sahf
sub
mov
mov
push
jbe
je
and
push
pop
hlt
scas
leave
adc
jae
jnp
mov
jno
fisttpl
mov
dec
ds
rorb
aad
sbb
rorb
mov
imul
xchg
rcrb
pop
repnz
roll
pushf
pushf
imul
mov
push
jb
adc
jne
scas
mov
xchg
fcomps
or
mov
clc
push
mov
sar
push
push
in
add
arpl
insl
inc
fstpt
mov
fisttps
int3
cmpsl
xor
cmp
mov
cltd
mov
push
and
aas
sbb
mov
das
ret
sub
push
mov
xchg
sti
sub
xor
dec
popa
cmpl
stos
outsl
in
outsb
int3
loop
jnp
je
sbb
xchg
repz
shrb
lahf
movsl
xchg
mov
sbb
fnsave
mov
pusha
mov
or
adc
mov
push
sahf
mov
int3
jmp
aad
roll
mov
add
xchg
mov
ficompl
repnz
insb
fstpt
lahf
xor
clc
hlt
inc
mov
dec
iret
arpl
aad
es
mov
dec
lea
or
adc
mov
sub
imul
mov
push
adc
or
cmp
add
cltd
and
rolb
add
xor
imul
mov
lcall
jae
ss
in
inc
mov
out
xchg
jle
loopne
mov
push
mov
jns
push
nopl
andl
sti
push
sbb
shrb
mov
jl
ljmp
fs
push
out
mov
and
jmp
icebp
and
dec
mov
fdivs
add
lcallw
xlat
mov
jb
pop
xchg
xor
add
inc
adc
add
sub
dec
icebp
jno
pop
cltd
push
xchg
cmp
cmp
and
push
scas
out
xlat
or
hlt
pushf
or
push
push
movsb
push
imul
jl
enter
mov
aaa
loopne
xor
sbbl
js
popf
stos
sub
shr
mov
popf
cli
jp
mov
imul
pop
jae
add
sbb
clc
xchg
out
scas
push
into
das
mov
pop
xchg
daa
sahf
addr16
push
shrb
mov
notb
lods
adc
aaa
int
cli
out
fdivl
or
sub
inc
imul
call
or
jecxz
jae
xor
push
push
int3
pop
loopne
sbb
int
xchg
adc
enter
push
xor
dec
pop
ds
or
gs
add
clc
fsubl
inc
xchg
adc
and
adc
mov
dec
xor
mov
andl
aaa
testl
sbb
jne
pop
and
cmp
movsb
data16
and
lods
xchg
lds
data16
ds
dec
jecxz
sbb
lods
popf
pop
sub
je
test
push
or
add
push
pop
pushf
arpl
cmp
call
pop
mov
outsl
clc
mov
push
jle
and
pop
cmpsl
add
mov
jg
push
outsl
mov
sbb
ret
jns
fcoms
xor
jmp
dec
or
lahf
adc
push
ss
adc
jmp
sahf
dec
push
xchg
rcr
test
adc
mov
add
cmpl
stos
aad
pop
ljmp
iret
push
lcall
aas
or
iret
nop
mov
mov
aas
mov
lods
sbb
mov
je
call
mov
mov
add
mov
aaa
jecxz
inc
fimuls
inc
mov
lock
xchg
dec
add
icebp
shlb
lret
bound
nop
adc
ret
ret
push
mov
jne
call
aam
out
xchg
sbb
cmp
cmp
jns
mov
push
loopne
jnp
mov
rcl
ret
mov
inc
mov
addr16
dec
jl
cltd
iret
popa
aam
adc
sbb
cmpsb
iret
dec
subb
mov
aas
rorb
ret
out
mov
cmc
out
dec
loope
fdivrs
push
repz
mov
mov
out
mov
addr16
sbb
xor
pop
cmp
sarl
and
popf
sbb
or
sti
push
mov
xorl
sbb
push
movsl
or
add
ret
ret
stos
fcoms
xchg
sbb
cmc
enter
repnz
mov
jmp
sub
cmpsl
int
aaa
fs
mov
stos
xlat
addl
or
mov
int3
test
mov
add
sti
inc
je
jbe
and
jmp
mov
fyl2x
jl
xchg
mov
adc
jo
pushf
adcb
aaa
jae
imul
pop
mov
sbb
and
push
rcll
es
jbe
loopne
mov
addr16
lock
push
xor
jmp
push
bound
dec
and
sub
mov
sbb
data16
mov
push
insl
sbb
cli
pop
sbbl
hlt
mov
or
sar
xlat
movsl
shrl
je
out
aad
test
xchg
jae
mov
mov
jge
xor
pop
mov
loopne
ficompl
or
cld
pop
cmp
mov
int3
mov
je
push
mov
lock
cld
rol
imul
arpl
gs
mov
mov
lahf
mov
mov
cmp
mov
es
hlt
push
mov
jle
add
divb
mov
inc
fs
fsubs
jo
jne
insb
add
es
imul
cmpsl
inc
inc
imul
pushf
pop
flds
push
xor
jmp
cmpsb
sbb
or
xor
shlb
xchg
ficomps
mov
jbe
pop
popa
stc
mov
cmpsb
es
cmp
mov
imul
movsl
mov
mov
aaa
fildl
aam
cmp
pop
imul
fstps
mov
mov
dec
pusha
xchg
pop
mov
ret
mov
xchg
inc
pop
dec
in
jmp
in
jo
lock
stos
dec
jl
jmp
rcl
sub
xchg
pop
cltd
in
dec
lret
lahf
cmp
rorb
pusha
xor
insl
pop
sbb
or
mov
loopne
adc
push
jnp
jno
mov
pop
adc
cwtl
mov
and
jb
subl
lods
repnz
and
popf
movsb
jecxz
mov
mov
fdivrp
imul
and
ljmp
push
or
jbe
inc
enter
xchg
mov
sbbb
pop
in
imul
and
jl
cs
mov
test
mov
fnstsw
inc
mov
push
in
es
pop
insb
daa
test
cs
test
out
pop
nop
pop
rcll
cwtl
lods
sub
mov
cmp
push
out
inc
xchg
sbb
shl
mov
or
cmp
or
pop
dec
lahf
xchg
inc
mov
push
fsubr
jp
sbb
push
in
push
call
sub
xchg
les
stc
cltd
or
sub
insl
les
sub
sub
dec
loop
jle
fldenv
movsb
movsb
dec
lea
mov
cli
sbb
movsl
and
mov
jae
pop
sub
cs
push
mov
jmp
xor
mov
lods
subb
iret
mov
or
adc
push
inc
mov
and
adc
shrb
daa
mov
incb
mov
js
sbb
cmpsl
xchg
xchg
and
jge
call
mov
push
inc
xor
sbb
pop
lahf
push
cmp
cs
adcb
add
lods
int3
ret
sbb
sbb
cwtl
mov
mov
pop
mov
loopne
sub
fdivs
mov
aam
inc
pop
mov
in
and
sub
sbb
mov
idivl
loop
sbb
jnp
lods
mov
imul
xor
lds
mov
dec
mov
clc
addl
fnstenv
lods
jle
rcrb
ret
xor
inc
adc
mov
mov
mov
xchg
rcrl
jge
rclb
push
or
inc
push
adc
mov
aas
icebp
lods
jp
fbstp
adc
xchg
aad
mov
and
xchg
loop
test
stc
popa
mov
cmp
and
inc
std
fwait
int3
mov
ret
jmp
es
pop
mov
sbb
hlt
aad
cmp
test
adc
push
mov
jmp
xor
cmpsl
fldcw
pop
pushf
inc
push
mov
inc
pusha
pop
sub
cmpsl
out
adc
push
xor
or
push
loop
es
test
mov
pop
test
shrl
movsb
xor
lods
sub
std
sbb
sahf
push
cld
enter
cwtl
rorb
xor
xchg
loope
inc
push
jg
push
out
or
in
jno
ljmp
push
and
push
inc
push
leave
cwtl
pop
int
sbb
gs
pop
lahf
and
pop
repz
inc
enter
or
outsl
push
push
push
fisubl
std
jns
fs
stos
incb
mov
push
push
sub
adc
jmp
loopne
push
cmp
xor
out
out
jecxz
pop
lock
jmp
sub
pop
cmp
dec
data16
mov
pop
test
xor
cmp
pop
cltd
jnp
int
mov
icebp
push
mov
js
pop
mov
jae
xor
sbb
sub
pop
mov
adc
and
sub
sbb
xchg
es
loopne
enter
sbb
inc
inc
mov
fcmovb
out
out
inc
jb
mov
ljmp
sahf
mov
cmpsl
adc
mov
cli
out
mov
xor
mov
cmpsb
shrb
mov
imul
cltd
fidivl
pop
dec
dec
lods
popa
leave
adc
xor
loopne
mov
pusha
ficoml
sarb
cmpsb
cmp
xchg
dec
pop
sti
mov
es
jl
inc
test
sub
xchg
stos
imul
in
lods
lahf
mov
jo
mov
ret
jle
popa
cli
aam
sub
mov
ret
mov
mov
fildl
pop
icebp
add
clc
adc
sbb
dec
ljmp
popf
add
bound
sti
mov
lods
fwait
pop
shlb
inc
mov
xor
mov
xchg
test
das
ret
push
push
test
dec
in
das
lea
cmp
lahf
sbb
int
xor
xchg
das
xchg
xchg
jle
mov
stc
scas
into
push
and
inc
add
mov
jl
ss
inc
movsb
jle
mov
or
cmpl
sub
sbb
add
pop
add
and
mov
jecxz
xchg
add
mov
mov
imul
push
mov
das
xor
lcall
push
adc
adc
inc
movsb
jae,pn
fwait
outsb
fldl
jl
out
sarl
into
inc
aam
sbb
mov
add
out
push
movsl
mov
or
gs
sub
movsb
fbstp
mov
shrb
sbb
cld
lds
test
cmpsb
pop
jl
std
sti
cmpsl
out
inc
push
shr
xchg
mov
lret
jae
jge
push
fildl
fcoms
mov
leave
mov
add
mov
rcrw
sbb
in
insb
movb
repz
in
je
jb
adc
push
notl
shlb
push
aas
xor
aam
sub
inc
sbb
sbbl
push
dec
jle
mov
fdivrs
push
repnz
add
rcr
mov
imul
fisubs
adc
std
aas
int
insl
int3
loopne
es
lds
push
sub
cwtl
in
addb
cmp
jae
int3
and
sti
jae
cmp
or
mov
dec
add
aas
mov
jae
push
fmull
ds
xchg
test
mov
dec
std
jnp,pn
aaa
int
pop
ret
sbb
xchg
in
or
shlb
mulps
cmp
inc
push
addr16
lret
add
mov
ret
cmp
or
jno
add
cmc
and
inc
lods
iret
lods
and
push
movsb
es
cmp
mov
and
fisttpll
cs
ljmp
mov
imul
sbb
cmp
insb
sub
dec
pop
sub
out
je
xlat
daa
outsl
pop
adc
rcll
repnz
cld
xor
mov
pop
mov
int3
ss
mov
or
aaa
cmpsb
xchg
mov
inc
mov
ret
dec
out
jae
cltd
sub
sbb
call
ficoml
je
inc
mov
outsl
adcl
outsl
inc
jo
into
fcompl
fcoml
jg
inc
repnz
mov
pop
pop
scas
xchg
xchg
add
movsl
mov
add
lcall
scas
mov
ja
out
fdiv
imul
adc
mov
cmpsl
mov
fs
sbb
dec
jno
sub
shll
pop
and
mov
lock
and
outsb
jne
jmp
xor
or
dec
cmc
sbb
rorl
mov
movsb
and
dec
daa
ret
stc
je
sti
mov
or
mov
cmp
xor
mov
push
out
sbb
inc
sbb
aas
add
gs
loopne
push
icebp
movsl
fucomi
add
sti
aad
shl
test
mov
or
pop
dec
mov
ds
mov
mov
outsb
inc
push
cli
cmpsl
ret
fidivs
js
sbb
mov
pop
adc
dec
mov
repz
shl
mov
sarb
adc
andl
mov
push
out
in
icebp
mov
xor
mov
mov
xor
js
mov
pop
and
jne
jno
pop
loope
sbbl
fsubrs
outsb
pop
jbe
xlat
mov
rolb
mov
mov
jl
fs
inc
mov
xorb
scas
call
addl
test
lret
aam
jmp
adc
js
xchg
fmul
mov
jb
dec
scas
and
test
or
cmpsb
mov
sub
sbb
jne
mov
pop
mov
add
mov
mov
call
int
cmc
shlb
or
dec
dec
mov
sahf
sub
push
cld
lods
cmp
lret
popf
inc
cmp
ss
sbb
out
sbbb
jo
adc
scas
sbb
add
std
fcomps
shll
in
inc
mov
push
or
sti
or
pop
or
insb
mov
test
scas
adc
mov
gs
xchg
sbb
jne
imul
repz
push
sbb
lret
mov
add
ljmp
push
lret
sti
je
pop
fnstenv
test
and
lods
xlat
ljmp
lahf
jb
out
cli
push
jae
inc
xchg
xchg
cmp
lahf
lds
bound
inc
movsb
int
pop
andl
into
out
mov
mov
addr16
inc
pop
lret
push
xchg
cmpsb
fbld
adc
and
mull
push
leave
int
jecxz
test
fsubs
das
pop
bound
mov
mov
cwtl
das
xor
arpl
mov
mov
das
jl
pop
icebp
pushf
test
pop
pop
fucomip
xchg
icebp
insb
inc
lods
popf
xor
mov
loopne
sbb
inc
mov
inc
mov
clc
push
into
dec
add
out
cmpsl
and
and
insl
inc
iret
cmp
lcall
jnp
ss
or
stos
std
jge
movsb
test
push
inc
test
dec
mov
inc
jo
jmp
pop
inc
pop
pop
loopne
jp
sub
daa
inc
iret
ss
je
cli
mov
mov
xchg
lcall
jle
insb
cli
out
pop
or
aam
mov
fdivr
out
dec
xlat
ficoml
push
fistpl
adcb
xor
aaa
mov
push
jae
cwtl
outsb
inc
ss
mov
mov
pop
mov
mov
adc
mov
mov
call
push
pop
fnstcw
sti
mov
popf
daa
mov
cmpsb
mov
jl
mov
sbb
ljmp
mov
and
xor
into
data16
sbb
sub
xlat
nop
in
dec
clc
lock
sbbb
xor
arpl
dec
and
popa
push
testb
dec
call
jae
outsb
movsb
stc
pop
jl
ljmp
adc
dec
mov
jmp
imul
mov
decb
into
aad
push
fs
inc
ret
out
xchg
lahf
and
add
push
xor
mov
and
jo
push
sbb
xchg
popa
cld
add
je
fsub
cmp
push
mov
add
jbe
adc
dec
clc
jl
cmp
roll
mov
push
loop
inc
xchg
mov
dec
inc
ljmp
out
pushf
popa
cs
lret
jb
stc
ficoml
lret
cmpsb
push
push
or
shrl
sbb
lods
loop
gs
sub
or
cmpsb
ret
movsb
pop
addr16
aaa
and
mov
mov
and
stos
jne
mov
int
push
fcomps
int
hlt
xor
mov
xchg
loope
mov
sub
movsl
jmp
shrb
cltd
rcrb
jmp
outsl
adc
jno
fbld
xchg
add
test
mov
xor
mov
ficoms
nop
push
aad
aad
testb
pop
lds
aas
dec
or
inc
out
add
aad
mov
add
js
push
cmpsl
dec
daa
mov
xchg
insb
mov
add
inc
enter
fucomi
stos
dec
lret
cld
enter
mov
jl
js
cmp
jbe
fistl
lds
dec
jecxz
xchg
ss
sub
xor
jnp
and
or
int
movsb
dec
push
leave
pusha
aam
fwait
aaa
or
fidivrl
lcall
imul
mov
add
movsb
xor
mov
mov
and
fists
test
rol
inc
xchg
icebp
sti
aaa
pusha
push
cmp
ja
int
pop
into
add
test
mov
mov
test
jp
loop
loopne
lea
push
scas
pop
or
dec
jno
add
aam
roll
fstl
mov
lea
pop
dec
or
stos
fisubrl
sti
shll
lret
cmpb
mov
aam
outsl
jnp
mov
cmp
sbb
fnstsw
in
dec
mov
xor
sub
cmpsl
sbb
mov
adc
test
cmc
fisubrs
jbe
scas
lods
jnp
pop
int3
mull
cmc
mov
add
fildll
into
or
fstpl
lea
and
jns
xchg
mov
push
sbb
xchg
shlb
cltd
cmp
adc
jmp
es
lahf
cmp
fs
or
pop
lock
fiaddl
cmpsb
xchg
dec
data16
stc
push
popf
sub
in
outsl
popf
and
xchg
outsl
mov
call
mov
pop
mov
popa
and
loopne
jbe
add
jg
dec
jne
adc
jo
movsb
sarb
imul
test
stos
xchg
scas
lods
leave
cmpsb
jbe
mov
cmp
in
mov
shl
xchg
scas
push
adc
frstor
fs
sbb
push
imul
icebp
add
ljmp
lahf
sti
call
popf
xchg
scas
sahf
mov
dec
ljmp
mov
pop
pop
jl
mov
xchg
mov
pop
cltd
and
in
or
out
cwtl
ret
loop
adc
int3
shrb
ja
xchg
lea
sub
mov
stc
or
cmpsb
or
rcr
xchg
lret
clc
sub
sub
xor
test
cli
gs
sub
scas
lea
test
pusha
ljmp
pop
mov
jnp
mov
scas
lds
scas
inc
fyl2x
lea
pop
movsb
movb
jecxz
push
push
orb
lahf
out
push
aas
popf
inc
mov
jno
stos
and
cmc
push
cmp
mov
mov
inc
pop
in
xchg
inc
mov
sub
hlt
rcr
mov
stc
leave
jno
cmp
out
dec
dec
push
push
cld
in
push
cmp
mov
shll
pop
jl
enter
push
pop
push
mov
mov
rcrl
aas
push
scas
pop
xchg
bswap
push
add
in
popf
jae
pop
dec
out
push
test
sti
pop
xor
xchg
mov
sbb
jnp
mov
dec
test
adc
fdiv
or
jl
mov
jbe
popf
xor
and
into
in
push
imul
ds
out
xor
xchg
cmp
push
repnz
lcall
add
xlat
inc
mov
dec
lret
mov
popf
adc
fucomip
out
cmpsl
fmuls
xor
rcrb
xchg
cs
aas
pop
xchg
or
clc
scas
fadds
jb
mov
mov
outsl
xchg
fisttpll
pop
cmp
pop
cmp
sti
sub
mov
jbe
mov
hlt
insl
lods
pop
lods
jne
push
int3
insb
stos
jecxz
es
xchg
push
adc
pop
loopne
lock
push
stos
das
push
jne
bound
inc
xchg
dec
and
arpl
push
daa
push
inc
fdivrl
icebp
mov
inc
aas
jne
repnz
mov
insb
sub
add
out
push
mov
vhsubpd
scas
ljmp
sub
rol
sbb
cmp
inc
sub
dec
dec
test
insl
aam
push
dec
jecxz
jp
cli
cmc
mov
ds
mov
int
sub
scas
cmp
outsl
cmp
pusha
pop
cmp
loope
test
jns
push
int3
lahf
cmp
adc
mov
pushf
dec
pop
into
imul
mov
popf
mov
insb
clc
inc
jnp
idivl
nop
inc
pop
inc
dec
les
hlt
jle
jns
cwtl
push
push
mov
push
movsl
inc
sbb
pop
fwait
mov
xchg
sub
push
mov
fldenv
inc
ds
sti
pop
iret
shrl
mov
pop
ss
je
testb
out
xor
fsubrl
int
cmp
movsb
pop
and
vprotd
cmp
pop
sub
cmpsb
repnz
ss
dec
bound
out
rcrl
xor
cs
aaa
and
cltd
ret
loopne
loop
pop
inc
inc
gs
sub
andl
xchg
sbb
pop
inc
pop
inc
jle
imul
and
jecxz
lcall
dec
push
aaa
push
out
add
sarb
mov
jno
jns
sub
dec
xchg
pop
jp
inc
push
pop
lods
pop
jo
test
and
aad
cmp
dec
pop
xlat
mov
cmpsl
dec
sbb
sub
push
adc
sub
ss
imul
mov
inc
pushf
dec
outsb
mov
pop
in
mov
dec
dec
loopne
rolb
or
aad
les
lock
push
out
xchg
dec
pop
mov
sahf
sub
mov
lods
lret
mov
and
sti
leave
mov
xchg
gs
dec
jecxz
push
shl
xchg
add
inc
je
pusha
out
sbb
lahf
cmp
repz
cltd
or
loope
xor
jle
cmp
fcomp
mov
xchg
pusha
jp
ljmp
movsb
mov
jbe
fadds
fdivrp
inc
mov
dec
imul
xor
mov
int
popf
shr
sar
pop
out
sbb
or
out
mov
and
js
dec
aad
fcmovne
out
jge
jo
and
push
add
fidivrl
pop
popa
cmp
xor
insl
sarl
push
pop
mov
in
mov
outsb
pop
cltd
add
leave
dec
pop
mov
cwtl
in
cli
mov
cltd
mov
in
popf
add
mov
cmpsl
inc
out
addl
outsl
jno
add
inc
std
jbe
push
rcrl
mov
or
adc
stos
lcall
add
sbb
xor
fistpll
daa
daa
add
iret
negl
aaa
lret
fwait
cmpsl
cld
pop
pop
loopne
fidivs
sbb
test
outsl
inc
sub
push
pop
xchg
imul
and
sub
sbb
cltd
dec
sti
mov
sti
pop
rcrb
jge
jecxz
push
xchg
xchg
test
sbb
bound
stos
jo
cmp
or
lahf
push
pop
and
and
aad
xor
nop
into
lods
pop
scas
mov
bswap
jl
addr16
ss
mov
loopne
in
pushf
subb
enter
andl
mov
pop
cmp
arpl
test
dec
adc
ss
movlps
dec
push
mov
fsubs
xchg
rcl
xor
imul
mov
hlt
shlb
dec
jno
inc
xor
outsb
push
fidivl
adcb
fwait
or
jb
outsl
icebp
mov
push
shlb
xchg
loope
inc
cli
loop
aaa
mov
xor
js
xchg
push
pusha
out
fwait
bound
jmp
addr16
sbb
enter
pop
pop
insl
int
and
jae
test
fmuls
mov
or
push
outsb
xchg
and
stos
ljmp
or
js
mov
cld
lret
idivl
stos
or
mov
push
fs
mov
xchg
and
lret
dec
push
inc
xor
mov
in
in
xchg
and
lods
push
or
call
lcall
xchg
shrb
pop
nop
punpckhwd
lock
xor
xchg
dec
fistl
mov
jo
jmp
dec
mov
sub
or
add
lock
cmpsb
or
fstpt
das
push
shlb
daa
mov
cmp
pop
repnz
push
dec
fld
imul
jo
cwtl
pop
cmp
lret
pusha
cmpsl
pop
mov
xor
aad
loopne
imul
fsubl
fstps
cmp
adc
mov
xor
sub
stos
lods
pop
xor
mov
fs
xchg
push
add
lcall
dec
cld
push
jg
cmp
xchg
pop
fnstcw
in
inc
rcll
lret
mov
sub
das
adc
cwtl
test
push
aas
push
inc
lods
xor
inc
adc
cs
add
jb
enter
addr16
dec
out
insb
loopne
adc
scas
inc
jg
mov
imul
or
dec
add
out
stos
or
mov
in
adc
outsb
sbb
fcmovne
mov
push
or
paddq
sub
cs
dec
mov
jno
popf
push
mov
pushf
cli
stc
push
in
mov
adc
dec
pop
push
inc
pop
jge
mov
xor
xlat
pop
sub
in
dec
lcall
jmp
inc
inc
imul
iret
in
dec
adc
cmp
mov
lock
cmc
inc
jle
push
mov
test
jg
and
add
jecxz
sbb
ret
fisubs
outsb
adc
jg
dec
mov
sbb
pop
sub
pop
push
sub
pushf
mov
sub
outsl
pusha
xor
cli
lods
or
pop
jge
jo
push
xchg
push
ret
cmpsl
shll
sub
mov
mov
jno
sarb
jmp
fcmovb
xchg
xor
aad
fwait
cmpsl
push
movsl
add
aam
jbe
sahf
loopew
inc
pop
jbe
adc
aaa
aad
mov
lret
pop
insb
leave
xor
mov
adc
stc
jb
cmc
test
loop
mov
pop
outsl
pop
dec
push
mov
push
je
jbe
inc
mov
push
xor
fidivrs
xchg
lock
lock
cli
pusha
or
or
pop
sbb
in
xchg
cmc
or
jnp
xor
nop
push
mov
sub
sarb
inc
dec
add
fisubrs
rorb
mov
mov
lods
add
movsl
lea
fdivrs
pop
fsubl
jecxz
mov
xor
test
pop
mov
xor
mov
xor
sbb
cmc
movsl
nop
pop
hlt
ror
xchg
sarl
rcrl
dec
mov
and
aad
jmp
fucom
jo
push
fstps
fisttpll
mov
add
mov
jne
sub
dec
add
lret
or
and
push
in
fnstcw
xlat
loop
pop
push
jge
test
arpl
mov
clc
mov
sub
leave
dec
dec
into
sbb
xor
js
sub
repz
lret
sbb
into
jb
sub
dec
jmp
cmp
stos
iret
dec
cmp
inc
movsb
inc
and
rcl
insl
shll
sbb
mov
mov
mov
in
sbb
xchg
cmp
arpl
fisubrs
mov
into
aaa
push
outsl
fcmovnbe
mov
mov
int
inc
mov
mov
jne
cmc
dec
pop
pop
aad
xchg
and
sbb
lret
imul
aaa
push
sub
in
shl
fs
mov
aad
sbb
pop
ret
es
push
jp
xor
mov
lods
dec
call
inc
les
mov
cld
adc
or
and
push
mov
jbe
leave
fnstenv
sbb
into
pop
les
ds
inc
stos
jmp
gs
add
aad
int
decl
popf
cmp
cltd
xchg
cwtl
gs
stos
sbb
inc
pop
out
js
es
dec
fdivs
dec
cmovnp
mov
cmp
xchg
imul
addb
inc
mov
add
mov
jo
bound
pushf
mov
mov
pushl
iret
iret
adc
adc
ffreep
sub
pop
and
negl
jg
mov
lods
outsl
stc
pop
in
and
scas
in
push
mov
stos
je
sub
outsb
xchg
adc
sub
cmpsl
aas
cs
push
ret
mov
out
pop
fsts
push
or
out
and
inc
test
add
jp
call
pop
xor
xchg
push
mov
mov
dec
mov
test
icebp
xor
jne
sub
rorb
in
loopne
and
dec
dec
dec
insb
shlb
mov
xor
cmp
jecxz
pop
sbb
xor
test
data16
push
pop
sub
mov
int3
repnz
jmp
aam
pop
add
cwtl
inc
push
out
loopne
xor
test
or
xchg
fildl
inc
icebp
shll
shlb
push
jecxz
lahf
gs
push
add
mov
in
stos
in
inc
test
hlt
in
fidivrl
popf
mov
data16
push
pmaxsw
jne
rdpmc
xchg
scas
fs
shll
pusha
ja
and
adc
test
loope
in
jno
jge
sub
sbb
sub
mov
inc
daa
in
or
sub
xchg
jecxz
dec
pushf
cmp
shr
inc
pusha
dec
arpl
ror
push
movsb
popa
dec
nop
ljmp
inc
adc
fildll
sub
xor
push
gs
or
push
lea
movsb
push
dec
sub
je
bswap
in
icebp
daa
push
cmc
sbbb
jmp
aad
in
pop
repz
push
pusha
aad
push
dec
bound
mov
enter
movl
adc
dec
cmp
data16
outsb
fimull
jb
ja
cltd
pop
mov
sbb
call
imul
pop
xor
shlb
lds
mov
push
ret
jle
xor
or
pop
mov
nop
stos
inc
loope
lret
push
call
mov
outsl
int3
vaddps
and
cld
in
ret
test
dec
push
sbb
sbb
scas
dec
cmpsb
cmp
repz
aam
out
aad
sub
add
jae
sbb
ret
adc
cli
insl
or
cmp
movsb
imul
mov
add
cmp
cltd
xor
fistpll
jbe
in
ret
paddusb
jle
and
pop
push
call
pop
xor
js
sbb
jmp
mov
lds
adc
fdivs
in
pop
jmp
clc
out
xor
cltd
jecxz
inc
out
inc
sahf
es
fildll
in
cmpsl
mov
and
and
in
repnz
sub
mov
adc
mov
mov
add
xor
xchg
cmp
out
push
cmc
xchg
int
and
sub
xlat
mov
out
xor
int
adc
sbb
or
or
or
jo
mov
push
dec
flds
or
cs
fs
ss
add
ds
push
push
leave
stos
sub
push
dec
test
jp
and
add
mull
sub
pusha
dec
psubd
jo
pop
ja
popf
or
push
call
mov
les
dec
xchg
loop
je
mov
mov
push
jl
lcall
out
add
cmp
push
add
mov
add
in
aas
xchg
xor
movsb
ss
je
add
or
xor
adc
jnp
push
outsl
addb
movsl
jle
loopne
stc
rcl
imul
jno
scas
rorl
and
sbb
nop
and
flds
fbstp
or
arpl
fdivrl
dec
stos
mov
js
jg
sahf
push
xchg
mov
xchg
icebp
mov
xor
test
push
test
pop
mov
lret
pusha
pop
fidivl
imul
jge
mov
or
sbb
clc
cmp
xor
shlb
nop
sbb
fistl
xlat
and
scas
testl
mov
pop
xchg
adcl
lahf
pop
lahf
sbb
sbb
popa
test
push
dec
mov
arpl
mov
and
ret
push
adc
loopne
daa
jbe
in
cs
add
push
cltd
inc
fisttpll
xchg
or
iret
jae
sub
sub
in
test
mov
ja
in
xor
stos
repnz
sbb
mov
outsl
shlb
frstor
sub
sahf
xchg
push
mov
jg
xchg
mov
dec
fistl
mov
xor
clc
push
mov
xchg
push
decb
movd
in
out
inc
sub
add
fistps
push
push
lret
out
insl
push
cld
rcr
inc
add
mov
gs
les
mov
lahf
idivl
lret
cmp
les
bound
pop
adc
addr16
sub
or
sbb
pop
outsb
mov
xchg
and
les
lcall
lcall
pop
xor
loopne
pop
mov
add
jle
jp
jecxz
dec
push
jge
addr16
push
push
or
cmp
cmp
cld
insl
mov
or
xchg
shll
popf
js
jnp
mov
scas
add
dec
fisttpll
or
xchg
push
pop
xlat
mov
jp
mov
adc
xchg
xchg
ja
gs
es
dec
icebp
mov
das
addr16
test
jmp
cld
or
xor
int
call
loope
movsl
jmp
inc
lods
sahf
or
mov
es
pop
push
call
sbb
xchg
sub
fbstp
pop
or
scas
xchg
frstor
arpl
stc
popf
imul
mov
xchg
mov
mov
test
std
sub
mov
sbb
mov
inc
jg
jae
sahf
dec
inc
pusha
test
fisubs
mov
push
or
and
mov
pop
sub
and
js
popa
clc
popa
fwait
lcall
aaa
int3
loopne
fisubrl
xchg
leave
int
push
rcl
cmpsl
mov
call
fistpll
xchg
mov
clc
push
xchg
mov
mov
fsubs
nop
push
cmp
xor
loopne
lcall
dec
std
dec
scas
xor
cmpsb
cmp
inc
ret
fcmovnu
jnp
popf
loopne
out
pop
sahf
jno
or
inc
and
fstpt
movsb
push
jl
enter
mov
mov
pop
adc
stos
pop
dec
dec
aam
inc
mov
sbbb
jl
adc
adc
jle
sti
bound
xchg
popa
cmp
ljmp
sbb
push
sub
dec
test
lret
push
fwait
lods
ss
push
jmp
mov
fldenv
xchg
pop
add
in
or
lret
dec
pop
inc
push
lret
cmp
ror
mov
pop
or
repnz
sti
pop
adc
pop
lock
lahf
int3
push
repnz
xlat
mov
mov
out
stos
mov
xchg
push
jae
fidivs
cs
out
cmp
test
sbb
fcoml
fisubs
xchg
movsb
lds
sbb
jns
ret
data16
pop
cmc
rorl
pop
lock
jge
cmpb
cmp
sub
imulb
jmp
pushf
push
in
daa
xchg
dec
mov
imul
mov
pop
test
and
es
jp
and
mov
popa
jge
scas
sub
data16
jmp
add
mov
sub
lods
xor
adc
gs
push
lods
mov
jbe
lods
pop
xchg
movb
cmp
lods
loop
lea
std
roll
test
movsl
jne
aad
pop
add
xchg
sbb
out
negl
dec
icebp
mov
sbb
fs
dec
aaa
xor
call
and
mov
mov
ss
cs
push
pushf
lea
push
adc
scas
fistpll
adc
cmp
lret
pop
stos
jo,pn
pusha
lret
jecxz
mov
jl
mov
inc
enter
in
stos
jae
mov
out
out
sbb
pop
addr16
or
push
pop
pop
cltd
xor
adcb
mov
fildl
loopne
adcl
cmpsl
xor
popa
nop
mov
test
add
test
sbbl
scas
cmpsb
dec
mov
push
sub
inc
roll
add
xchg
dec
sbb
mov
sub
je
mov
xor
jb
pop
fistl
jle
xor
jns
jmp
and
sub
lds
xor
sbb
stc
fsubs
adc
loope
aam
rcrl
mov
dec
jbe
lock
jmp
aaa
ret
addr16
jne
jne
pushf
scas
scas
enter
push
adc
stc
mov
les
aam
push
push
adc
lds
arpl
dec
fidivs
push
cmp
push
idiv
out
jbe
xchg
movsl
out
incb
adcb
div
push
push
hlt
mov
cld
cmp
sbb
cmp
mov
cmpl
xor
mov
or
push
arpl
push
lock
scas
inc
push
xchg
mov
push
std
dec
repz
xchg
add
mov
decb
shr
push
aam
pop
fwait
iret
ja
test
dec
test
into
call
mov
adc
inc
fadds
add
addr16
or
popf
and
repz
mov
inc
or
imul
pop
push
nop
or
xchg
movsb
xor
mov
test
jge
sbb
sub
pushf
mov
loope
mov
test
fs
jns
std
jmp
sub
and
cltd
std
xchg
cltd
das
mov
pushf
daa
xchg
mov
mov
in
push
jnp
or
add
lods
pusha
mov
mov
std
imul
iret
xor
loope
pop
leave
cmp
push
sub
pop
pop
inc
popf
xchg
enter
push
cltd
nop
in
ljmp
inc
fdivl
xchg
mov
add
jnp
std
in
setp
pushf
mov
jecxz
es
dec
dec
arpl
jno
negb
or
pop
in
cmc
ss
jl
hlt
pop
push
insb
mov
push
push
dec
sub
pop
loop
and
xor
mov
pop
in
and
out
test
push
jae
and
jg
inc
mov
mov
add
repz
xchg
jge
cmp
mov
sub
outsl
push
repnz
xchg
leave
and
shrb
adc
push
repnz
xchg
insl
dec
adc
cmp
sub
jge
jne
lahf
mov
cld
xchg
popa
mov
ja
adc
mov
push
lea
and
jbe
jo
dec
ljmp
cmpsl
cmp
loop
cmp
push
pop
shll
jmp
fiaddl
mov
mov
incl
add
sub
stos
les
inc
in
mov
out
rcrl
or
push
inc
les
iret
adc
outsb
fidivrs
push
ds
ja
mov
jecxz
test
add
push
dec
push
mov
xchg
leave
jo
dec
ret
ret
pop
inc
outsl
inc
cmp
shrl
cli
cltd
cld
call
test
mov
mov
rolb
and
jnp
adcb
sub
adc
mov
push
pushf
pop
ds
rolb
push
test
push
jbe
pop
rol
jno
inc
imul
add
dec
adc
pop
je
xor
call
ja
adc
jbe
cmp
dec
mov
in
in
rcll
mov
test
and
push
fdivs
gs
mov
fsubl
sub
push
mov
pop
js
sub
js
jge
popf
xor
in
or
xchg
daa
mov
lcall
inc
or
pop
cmp
and
inc
mov
mov
xchg
lcall
test
ret
lret
aas
xor
shrb
dec
or
loop
jp
loop
stos
pop
lea
jbe
dec
test
push
sbb
xchg
sub
jbe
mov
ljmp
cmp
insl
and
inc
adcl
popa
pop
mov
xor
xchg
add
push
mov
mov
aas
push
xlat
sbb
in
mov
fmull
push
xchg
fnstsw
inc
pop
cmpb
mov
sahf
lcall
add
mov
js
jbe
lret
pushf
push
lock
daa
data16
xorps
fs
inc
fnstcw
clc
repnz
pusha
repz
sub
cwtl
imul
xor
or
cli
xchg
adc
notb
pop
lods
fnstsw
test
scas
fnstenv
shl
dec
cmpsl
negl
shll
sub
jae
cwtl
dec
jb
cmpsl
fstpl
push
cmc
ljmp
cmpsl
mov
or
fiadds
shr
mov
and
pushf
and
daa
loope
xchg
add
scas
or
clc
mov
lods
dec
sub
and
jae
fldl
or
rcrb
and
pop
fisubl
adc
mov
sahf
mov
pop
or
sbb
in
sbb
dec
inc
mov
shrb
and
pushf
dec
or
or
fstps
add
jl
iret
lods
add
xchg
lods
pmaddwd
dec
data16
add
xchg
sub
sub
jb
cmp
aaa
hlt
bnd
push
divl
int
cmpsb
shrb
mov
fcoms
adc
cmp
add
call
xchg
push
jb
les
add
cltd
or
inc
pop
sbb
mov
mov
or
sbb
shl
cmp
cmp
pop
scas
jle
data16
pop
jl
pop
cmp
dec
mov
stos
gs
push
add
mov
and
outsb
push
mov
or
sbb
call
test
fiadds
adc
pusha
mov
add
mov
push
push
pop
pusha
out
sub
pop
sahf
cmp
adc
hlt
push
jno
iret
call
imul
bound
and
inc
mov
xchg
in
inc
pop
mov
les
xchg
dec
shl
jnp
loope
call
pop
or
adc
iret
and
dec
pop
scas
pop
dec
pop
cmp
bound
stos
cmp
rclb
imul
lock
cmp
sub
jnp
int3
pop
jl
lock
popf
pop
addb
push
loop
pcmpgtd
push
pusha
insl
cmp
imul
mov
les
cmp
xchg
aam
jns
std
jne
lcall
scas
sub
sbb
lods
or
inc
cmp
jbe
mov
idivl
call
mov
rorb
jo
subl
pop
out
in
jg
mov
jo
mov
jle
mov
push
push
out
cmp
and
test
imul
sti
mov
pushf
push
sub
js
out
cmp
data16
hlt
mov
sbb
les
popf
popf
add
mov
fiadds
mov
repz
xchg
jbe
xlat
out
jg
aad
in
sub
mov
mov
das
test
imul
jbe
pop
rep
jae
decl
cmp
test
add
pusha
sbb
dec
xorl
cmp
mov
leave
lods
sbb
and
aad
jmp
das
out
mov
fdivr
mov
pop
sub
push
lock
xchg
mov
mulb
adc
test
push
dec
xchg
xor
fcoms
rcll
in
inc
mov
aaa
lock
inc
std
pop
mov
or
gs
in
add
mov
or
fucompp
addb
pop
imul
test
and
test
xor
leave
xchg
xchg
pop
mov
jge
imul
rolb
push
outsl
or
decl
push
fwait
lods
and
mov
pop
enter
mov
or
scas
mov
xchg
stos
ss
les
jmp
lret
pop
cmp
inc
xchg
scas
sub
iret
cmp
add
icebp
dec
push
mov
repnz
imul
repz
or
sub
push
or
aad
insb
sub
pop
outsl
ret
pop
cmpsl
add
insl
mov
xor
pop
call
sbb
arpl
pop
jp,pn
aad
movl
cmp
push
je
test
inc
xchg
femms
movsl
data16
sub
inc
sub
jne
sti
pushf
adc
push
xor
por
pop
out
or
pop
cmpb
xchg
pop
movsl
das
int3
lahf
fstpl
mov
aas
or
lcall
xlat
mov
dec
fiadds
push
dec
in
sub
mov
iret
adc
cmpsl
leave
cmp
nop
aaa
mov
mov
jbe
jae
lock
out
adc
ret
dec
insl
jge
in
mov
testb
sti
pop
mov
push
mov
int3
lods
pop
dec
mov
lods
clc
or
std
mov
in
aas
adc
jae
lea
andl
setp
cmpsb
dec
frstor
bound
aad
push
loope
lahf
lret
sti
mov
adc
ja
sbbl
mov
sbb
jg
mov
cli
mov
cwtl
int
lcall
dec
jmp
andl
adcb
mov
enter
jbe
mov
stos
fcoms
test
out
sbb
scas
insl
pop
lock
iret
loopne
pop
sti
add
inc
ret
fnstenv
hlt
or
mov
out
add
jae
aas
test
pop
pushf
jg
mov
and
icebp
mov
hlt
cmp
xchg
test
xrelease
inc
adc
sti
xchg
cli
mov
and
xchg
cwtl
sub
sbb
xchg
cmp
mov
push
mov
mov
mov
adc
jp
pop
push
lds
ds
out
in
inc
mov
cs
sti
lret
inc
cmp
or
call
mov
xchg
in
xchg
add
sbb
repz
repz
outsl
aad
jp
sbb
cmpsl
lods
jg
xchg
jns
mov
in
lcall
ljmp
and
mov
pop
mov
add
call
insl
leave
rclb
mov
mov
xor
lock
and
xor
cmp
cmp
add
mov
and
int
jns
dec
cmpsl
jl,pt
test
add
aaa
mov
filds
subb
cmp
mov
das
lds
rorb
aad
push
xor
hlt
add
pop
xor
ss
ret
iret
inc
dec
and
loopne
dec
push
push
cmpsl
ret
ss
movsb
cli
xchg
jge
nop
xor
and
loopne
jecxz
and
test
hlt
adc
cmp
ja
cmp
hlt
sub
in
decb
fistpl
xchg
or
imul
je
ljmp
jno
sbb
adc
call
or
mov
shlb
xchg
add
jo
loope
aad
xchg
push
dec
addr16
jg
fisubs
mov
inc
insb
push
inc
pusha
mov
cwtl
das
out
insl
push
sti
fdivs
xchg
mov
and
jno
sbb
inc
outsb
int3
push
add
add
into
add
add
repnz
pop
das
rcrl
add
loop
daa
and
or
inc
lcall
dec
inc
repnz
shrl
in
pop
push
movsl
out
push
pop
std
movl
int3
fists
add
push
sbb
fld
pop
or
out
jp
mov
iret
dec
mov
fnsave
xchg
jnp
add
xchg
fdivl
int3
test
into
cmp
inc
or
cs
xchg
add
fs
lret
push
cmc
add
cmc
jle
ss
mov
jno
pop
mov
pop
pop
subb
xor
sbb
mov
adcb
mov
fnstsw
pop
ds
mov
mov
rorb
out
es
inc
push
sbb
jb
and
fsubrl
insb
js
lcall
sub
pop
hlt
push
lret
ficompl
gs
add
out
ds
les
push
adc
pop
ja
aaa
shrb
dec
icebp
insb
xor
sahf
inc
mulb
xchg
sbb
sbb
and
jne
das
mov
xchg
push
xchg
insl
add
and
push
int
push
lods
sbb
sub
inc
cmp
loope
aas
inc
mov
in
notb
aam
loope
mov
mov
inc
jae
nop
and
pop
out
loope
add
dec
mov
in
xchg
inc
xlat
rcrl
mov
ds
xchg
jle
mov
imul
les
cmp
clc
insl
fnstenv
mov
dec
mov
fs
das
rorb
sbbb
push
pop
jns
sti
stos
jle
sbb
insb
sbb
test
mov
dec
fisubrs
mov
mov
push
add
inc
xchg
lock
jecxz
cltd
push
addb
out
xor
pushf
and
push
sbb
lea
fwait
jne
dec
imul
mov
jb
and
dec
adc
jo
mov
dec
xchg
lea
jle
pushf
push
loope
or
out
test
sub
cmp
inc
or
sub
jmp
add
sbb
dec
jecxz
cmp
xor
out
aas
dec
mov
mov
clc
pop
xor
xor
add
movsb
jmp
mov
jge
mov
xchg
scas
cs
mov
mov
and
dec
dec
iret
ja
xchg
hlt
xchg
das
pop
mov
jecxz
add
je
aad
xor
add
sbb
xchg
insl
xor
xchg
notb
movsl
cli
mov
sub
das
in
push
lods
push
cmpsb
lea
cmp
fimuls
arpl
or
mov
push
mov
jae
inc
pop
mov
ljmp
jno
ja
cmp
mov
inc
repnz
xor
mov
cmpl
jl
lret
pop
jge
pop
sub
pusha
and
cmp
xor
testb
xor
cli
pop
pushf
data16
enter
test
pop
push
loopne
cmp
xor
mov
inc
add
push
fstps
push
mov
push
pop
mov
lcall
jp
mov
std
jp
adc
lods
out
mov
fildl
sub
fcomip
mov
cmpb
or
jb
aad
testb
movsl
sbb
adc
add
mov
push
sub
mov
add
pop
outsl
push
in
scas
push
dec
loop
int3
pop
cli
jge
nop
les
cmp
scas
push
push
pushf
or
ljmp
imul
popf
mov
mov
stc
sahf
in
inc
sbb
mov
or
outsl
adcl
add
imul
in
arpl
stc
jmp
add
sbb
shl
test
jmp
andb
loopne
repnz
data16
lret
push
sbbb
push
sub
xor
push
fistpll
push
xlat
xor
fstpt
mov
add
xor
pop
dec
cmp
mov
in
std
aas
shll
inc
ficomps
inc
and
mov
les
jb
pop
insl
ja
sub
std
je
daa
mov
push
test
jle
sub
mov
xchg
sub
sub
sarb
and
lods
adc
ds
jne
push
dec
jne
sub
cld
outsl
sahf
repz
adc
or
fdivs
fisubs
jbe
cli
testl
adc
fwait
push
xchg
ret
mov
loopne
xchg
decb
inc
movsl
cmp
xchg
adc
mov
xor
sub
mov
add
sti
adc
dec
or
push
enter
mov
jo
jbe
pusha
push
and
xchg
jne
mov
jae
sbb
pop
xchg
sub
or
stc
jp
mov
adc
add
mov
cmp
sub
add
addb
cmp
sub
xchg
adc
ja
lret
and
test
xchg
xchg
inc
adc
fistpl
aas
xor
pop
jns
cmpsb
mov
gs
in
xchg
movsb
add
mov
arpl
imul
mov
dec
scas
dec
add
adc
mov
add
out
fwait
xor
in
mov
int
inc
cld
inc
popa
xor
xchg
arpl
pop
jns
xchg
sub
and
sub
xchg
adc
push
roll
fdivl
hlt
fmull
jns
sahf
push
push
adc
sbbb
out
fistpl
add
lcall
inc
pushf
sub
repz
pop
cmp
stc
pop
mov
adcb
push
inc
cmpsl
dec
push
sahf
mov
mov
sbb
mov
inc
mov
add
mov
mov
cmp
stc
cmp
fisubl
jno
std
aam
cmpsb
xchg
das
inc
test
popl
push
pop
lret
adc
jnp
leave
pusha
fwait
mov
test
aaa
out
out
je
leave
pop
xchg
mov
push
pop
repz
add
mov
rorb
and
push
fildl
in
add
xchg
roll
movsb
popa
dec
mov
add
imul
and
call
jmp
inc
pusha
push
bound
roll
inc
int
jbe
pop
or
jp
push
sub
pop
add
xchg
and
lahf
das
mov
fidivl
inc
fsubrp
js
jno
sti
mov
add
xchg
cmc
enter
movsb
ret
movsb
push
sbb
sub
cmp
or
mov
stos
jne
sbbl
loope
je
add
jo
das
cld
push
lret
pop
add
lret
imul
mov
cmp
insb
dec
in
push
dec
sbb
push
insb
push
sbb
xor
mov
mov
cwtl
xchg
or
iret
mov
push
cmpsb
in
mov
loop
test
fdivrl
popa
lret
and
sbb
ljmp
pop
shr
mov
xchg
inc
cmp
push
fwait
outsb
adc
dec
sbb
ror
cmc
mov
mov
pop
push
sub
mov
sub
ja
movsl
jle
add
inc
cwtl
pusha
jns
incl
fnstenv
dec
enter
je
lret
out
popa
inc
lea
sbb
mov
jb
pushf
pop
icebp
cwtl
popl
xchg
mov
mov
add
mov
filds
and
frstor
push
std
nop
xlat
addl
jae
jp
dec
inc
adc
pusha
xchg
sub
or
pop
sti
cmovno
hlt
add
xor
or
xchg
out
adc
push
cmp
in
mov
adc
inc
xlat
lock
lock
adc
inc
fadds
pop
mov
gs
fwait
dec
or
and
jmp
mov
ficoms
push
jmp
jns
pop
mov
mov
xor
arpl
paddq
pop
sub
xchg
adc
imul
rcll
lds
push
or
aam
sti
arpl
sub
push
sub
call
scas
test
dec
test
sbb
insl
shlb
pop
aaa
mov
ja
cmp
xlat
aam
adc
push
in
and
cmp
mulb
sti
xchg
into
jl
in
std
adc
cltd
inc
inc
mov
mov
jae
add
inc
push
mov
lret
lret
push
in
repnz
sar
movsb
cld
cmpsb
pop
enter
mov
insl
xor
push
iret
fyl2xp1
test
or
cmp
xorb
sarl
add
loopne
or
shlb
xchg
testb
call
cmp
jno
stos
in
std
xchg
insb
fisttps
ret
outsl
rcr
jl
and
dec
iret
add
xor
or
inc
fisubrs
adc
int
shll
in
mov
in
in
insb
mov
fs
xchg
sti
adc
inc
insb
fsubrl
int3
fs
xchg
jmp
jle
stc
aas
mov
or
jmp
sub
outsb
sub
sbb
cmp
sub
or
mov
or
sbb
mov
mov
jecxz
jge
shrl
xchg
mov
in
cmp
icebp
or
imul
fidivrl
mov
dec
enter
pop
sub
mov
or
rcrb
adc
rcrb
out
jbe
jo
sbb
fidivs
cmp
sbb
jb
sub
and
outsb
nopl
bound
and
shrl
pop
adc
testb
pop
fdivs
or
pop
stos
mov
add
pop
scas
es
sbb
xor
lods
js
mov
mov
int
ficompl
pop
sbb
mov
pop
loopne
fbld
pop
enter
xor
testb
add
movb
int3
cmp
pusha
popf
std
pop
push
lods
lret
push
jge
push
out
xorl
fs
fucom
aaa
jecxz
in
add
repz
push
lret
arpl
sbb
pop
or
mov
aad
das
out
popf
stc
inc
or
stc
mov
lds
outsl
or
pushf
cmp
sub
inc
push
pop
or
push
jo,pt
jnp
aam
fwait
imul
imul
popa
imul
dec
push
inc
mov
jns
jb
cli
sbb
scas
xchg
mov
stos
xor
lcall
and
pop
loopne
sbb
sbb
arpl
mov
jb
ja
insb
inc
mov
adc
cmp
jo
fildl
adc
jmp
sub
ljmp
lret
pop
mov
rorb
aas
jne
mov
aaa
mov
xchg
stos
pop
rclb
add
pop
xchg
jbe
int
push
lret
out
flds
xor
sbb
inc
pop
add
or
cs
ret
jae
sbb
cmp
push
cli
dec
iret
or
jno
push
scas
push
repnz
sub
arpl
and
arpl
cmp
icebp
jns
cmpsl
hlt
sub
cwtl
inc
out
pusha
mov
popf
pop
aad
daa
data16
pop
out
in
pop
sbb
pop
dec
icebp
adc
xchg
out
jecxz
and
and
lret
test
mov
insl
add
jnp
mov
fistpl
popa
stos
sub
popa
mov
daa
xor
hlt
cltd
rcll
sub
xchg
shrl
pop
sbb
push
lcall
arpl
in
push
test
push
rcrl
sahf
cmc
and
pushf
xor
xchg
fidivrs
push
loop
inc
fwait
repnz
leave
pushf
repnz
cs
adc
outsl
push
mov
xor
pop
movsl
cmc
adc
and
xlat
pop
aam
mov
push
lods
pop
fisttpl
cmp
popa
jne
sub
ror
filds
fimuls
mov
jg
adc
inc
test
jmp
add
xchg
in
and
jmp
mov
jecxz
mov
dec
das
sub
outsl
dec
aad
and
adc
pop
cmp
pop
cmp
or
pusha
push
push
inc
icebp
sbbl
pusha
inc
sub
add
and
test
test
cmp
xlat
jmp
stc
aam
dec
int
inc
mov
push
insl
sub
scas
scas
cmp
jno
xlat
movsl
xlat
push
mov
dec
mov
mov
pop
jle
mov
add
push
cmp
mov
jge
fiaddl
cmp
sarl
dec
and
lret
lods
jmp
fsubrp
cwtl
mov
fldenv
mov
outsl
mov
cmpsb
dec
test
add
fcomps
mov
outsb
dec
out
mov
pop
cltd
jns
outsl
inc
stos
inc
dec
pop
push
int3
shrl
sbb
mov
xor
sub
pop
std
inc
mov
mov
nop
mov
fimull
shr
push
add
jns
ja
pop
xor
mov
in
lock
sbb
clc
xor
enter
add
dec
loope
add
ja
pushf
mov
lods
dec
mov
aas
sahf
jmp
mov
jne,pn
iret
cmp
and
pop
ja
pushf
in
stc
cwtl
mov
std
repz
fdiv
fdivrs
incb
repz
dec
pop
adc
or
mov
imul
int
hlt
pop
daa
push
pop
insb
xchg
mov
push
cmpsl
pop
adc
popf
shrl
outsb
mov
jb
cs
or
mov
mov
lret
xchg
push
xor
rcrl
cs
movb
push
lods
sbb
repnz
fs
pop
aas
jp
jno
repz
inc
cmpsl
mov
enter
pop
pop
stos
xchg
adc
nop
pop
scas
test
out
xchg
inc
out
jmp
or
jne
mov
test
je
test
cltd
add
cld
xchg
dec
and
loop
insl
lahf
ss
push
movsb
js
in
dec
mov
andl
cmpsl
pop
jmp
and
jns
pop
enter
insb
jle
pop
xchg
int3
imul
pop
push
xchg
adc
andl
idivb
push
mov
mov
mov
pop
or
sub
inc
add
cmp
mov
mov
mov
ljmp
jae
loop
lahf
dec
rcll
jle
movsl
push
iret
fcoml
pop
testb
pop
sub
jge
mov
adc
cmp
inc
lcall
and
aas
js
jb
dec
push
mov
lahf
nop
stc
test
dec
int3
call
xchg
call
cs
outsb
ret
xor
mov
inc
data16
jg
xor
mov
shrb
cwtl
loope
inc
push
imul
xchg
inc
std
sbb
adc
push
push
or
push
add
xchg
inc
loope
jbe
cmp
arpl
inc
int
inc
popa
sub
xor
cmp
cltd
lock
and
hlt
mov
mov
pop
push
dec
push
sub
push
sub
cs
mov
adc
clc
push
sub
int
ret
adc
inc
push
sub
jae
test
bound
aaa
add
scas
mov
orl
out
cmpsl
pop
popf
jp
loope
xor
mov
ret
sbb
xor
inc
and
fwait
sub
add
jae
xor
seta
mov
cmpsl
dec
pop
cs
cmp
jp
arpl
outsl
mov
aad
icebp
xchg
pop
dec
or
addr16
xor
lret
in
imul
repnz
clc
adc
mov
movl
aam
cwtl
nop
scas
enter
and
scas
sarl
mov
mov
loope
push
das
adc
xchg
inc
jl
fdivrs
ja
popf
push
and
sbb
push
jo
or
jle
mov
mov
cltd
sahf
pop
cmp
pop
mov
inc
push
lahf
es
stos
fs
xor
xor
test
push
adc
jns
cmp
repz
push
cmpsl
dec
fidivrl
hlt
or
or
inc
sub
push
jl
or
dec
jge
insl
decl
push
in
je
adc
data16
inc
scas
insl
je
cmpsl
fiadds
sbbl
push
fcompl
inc
insb
stos
and
test
pop
mov
cmp
mov
fcomip
pusha
xchg
shrb
rol
repnz
fisubrs
loop
jbe
scas
subb
cmp
lret
adc
int3
es
loop
imul
stos
jnp
mov
shlb
shlb
or
cmpsl
sub
push
mov
mov
and
cmp
leave
mov
cmp
mov
aam
cmp
pushf
jg
in
das
pop
std
add
mov
jns
out
cltd
inc
and
jge
ja
pop
mov
mov
in
sbb
or
mov
dec
or
insl
cld
push
adc
not
lods
push
mov
inc
add
dec
stc
loope
ds
xchg
add
xor
sbb
sbb
ljmp
es
test
sahf
dec
nop
cld
xlat
xchg
jmp
cltd
dec
mov
mov
es
add
jmp
pop
fidivs
xchg
jnp
adc
mov
gs
das
loope
pop
and
sub
subb
das
jecxz
lret
enter
mov
mov
mov
pusha
xor
sarb
push
arpl
mov
mov
jl
push
das
sahf
int
sti
inc
aad
jl
pop
int3
push
add
mov
or
call
faddl
std
fs
mov
push
popl
jb
popa
xor
pop
mov
insb
psadbw
mov
push
out
push
push
clc
dec
stc
pop
xchg
mov
jbe
inc
scas
popa
xchg
fidivs
inc
mov
dec
mulb
aaa
push
push
scas
push
xchg
ljmp
xchg
mov
ret
cmp
xor
inc
scas
js
out
push
les
mov
xchg
and
jnp
mov
sbb
sbb
dec
ds
mov
lock
out
mov
outsl
mov
aaa
icebp
jae
aas
pop
aam
popf
clc
and
scas
mov
xchg
js
rcl
jle
jecxz
xor
fidivl
cmp
jne
imul
in
cld
cmp
ret
jae
outsl
xor
dec
dec
cmp
push
aaa
loop
test
stc
or
inc
mov
test
aas
inc
shlb
ja
out
enter
or
xor
jno
mov
dec
dec
cmp
cs
loope
out
iret
fcomi
aaa
jb
ja
xchg
insb
xchg
or
push
lcall
js
push
ret
outsl
xor
bound
xchg
in
into
sub
cwtl
sbb
clc
std
push
sub
inc
sti
and
or
lret
cmp
jg
dec
loope
dec
lods
outsl
mov
cs
pop
sbbb
inc
lods
loope
pop
push
std
or
mov
lret
imul
scas
inc
mov
ss
add
cmp
testl
or
enter
mov
xchg
pop
mov
sbb
test
nop
jge
add
jnp
cmc
cld
xchg
fdivrl
sbb
sbb
sub
cmpsl
cmpb
mov
cmpsb
sbb
xchg
clc
dec
push
daa
mov
mov
adc
rolb
sahf
inc
ret
add
jnp
sbb
jge
outsl
aas
arpl
sub
dec
jl
jecxz
xor
in
xlat
add
adc
push
mov
aas
in
cmpb
mov
mov
pop
cmp
hlt
mov
adc
bound
push
call
int3
xchg
repz
jecxz
push
fwait
add
mov
ficomps
push
jp
loope
push
pop
in
mov
arpl
dec
loope
orl
mov
xchg
mov
fwait
test
iret
xor
sahf
notl
mov
xchg
into
fwait
in
fisubrs
mov
lock
cmpsb
mov
push
adc
cmp
test
fdivs
inc
sbb
fwait
adc
adc
jo
cmpsb
jp,pn
or
cmp
std
cmovge
sbb
out
mov
jae
xor
nop
scas
cmp
mov
add
xor
and
je
xchg
xchg
pop
icebp
mov
js
pop
cmp
inc
js
out
adc
cmc
push
popa
mov
arpl
lods
pop
inc
jge
cmp
mov
push
inc
shlb
push
je
jl
jp
mov
inc
or
and
push
dec
mov
idiv
adc
shl
jns
popa
xor
jne
sub
jp
out
cs
jns
push
jne
add
or
mov
sti
pop
xchg
sub
pop
jb
andb
scas
inc
adc
jnp
xchg
outsb
xchg
pushf
cmp
call
lahf
imul
adc
xchg
sti
push
xchg
jno
aaa
test
loopne
ret
clc
jg
xchg
mov
sub
popf
mov
mov
cmp
pop
adcb
orb
andb
std
pop
jb
ficompl
mov
ja
js
xchg
orl
push
mov
imul
xor
loopne
mov
dec
in
hlt
push
adc
stos
mov
or
xchg
outsl
cmp
jno
xchg
push
xor
push
mov
je
xchg
shrb
iret
insl
orl
orl
aas
mov
add
cmpb
mov
je
push
in
jns
xchg
sub
or
loopne
sbb
jle
xor
jb
push
mov
shlb
mov
ficompl
xchg
pushf
cmpsl
nop
mov
mov
test
lds
adc
in
inc
mov
pop
jno
aaa
pop
loopne
push
cmp
xchg
add
repz
gs
lret
xor
jmp
icebp
and
inc
cli
js
sub
pop
pop
lret
dec
out
inc
sbb
and
inc
fdivl
lea
inc
dec
fldl
into
mov
jnp
sahf
ficomps
andb
repnz
and
cmpsl
loopne,pt
subl
testb
testb
sbb
xchg
cs
and
in
into
addl
sbbb
or
sbb
mov
out
cmp
push
mov
mov
gs
adc
test
cmp
aaa
into
inc
fs
into
xchg
mov
jmp
lods
xor
es
jge
mov
lods
jmp
add
pop
stos
test
in
dec
sbb
mov
xor
dec
xor
popf
xchg
mov
subb
xor
sub
mov
mov
ffree
lods
push
call
mov
std
sbbl
and
mov
mov
aas
icebp
in
addr16
cmp
iret
dec
pop
jl
test
popf
xor
push
xchg
sub
sbb
mov
jle
push
int
xchg
ljmp
adc
ja
inc
mov
jle
sbb
aam
push
push
xchg
mov
pop
mov
les
jp
jmp
sub
sahf
push
and
filds
xchg
mov
xchg
sub
mov
cmp
loop
mov
rol
in
inc
jp
aaa
xor
fs
dec
and
out
pop
mov
insl
outsb
arpl
push
aad
std
xor
pop
mulb
inc
or
mov
and
into
pop
dec
call
inc
lds
xorps
xchg
xlat
sub
mov
jo
sub
add
or
jae
xor
jnp
clc
lods
pop
je
leave
dec
xchg
sbb
adc
in
xor
ds
shll
mov
push
push
jb
cmp
icebp
or
aas
imul
aam
in
xor
movsl
or
sub
loop
mov
aam
movsb
jo
sub
mov
or
scas
mov
fstps
or
stos
mov
jp
mov
test
int3
inc
fadds
or
shlb
sub
outsl
pop
mov
aad
je
ja
jne
fldenv
inc
sbb
add
fs
cmpsb
push
mov
xlat
data16
clc
in
test
in
pop
ja
aad
or
mov
sub
stos
pop
or
lods
lds
push
pop
roll
outsl
daa
pop
pop
push
sbb
in
xor
aaa
insl
add
dec
fdivrs
les
call
out
xchg
cmp
fcoms
or
adc
inc
ds
nop
dec
scas
lds
jbe
mov
mov
jge
sub
test
stos
sub
scas
sahf
nop
daa
ror
push
loope
jp
arpl
les
insl
repz
scas
and
sub
sarl
xchg
imull
mov
add
or
rep
xchg
pop
pop
or
xchg
test
or
pop
icebp
xchg
pop
frstor
inc
out
push
pop
xor
daa
sti
rolb
cwtl
gs
in
cmp
out
and
xchg
clc
repnz
or
adc
int
cmpsb
iret
data16
mov
in
mov
js
and
jns
lahf
mov
xlat
xor
dec
inc
inc
jne
std
inc
shrb
and
mov
mov
pop
sub
xchg
mov
xor
loope
jge
fcomip
stos
mov
mov
fidivrs
pop
scas
inc
push
ret
das
int3
arpl
jecxz
lock
add
xor
adc
pusha
aaa
or
mov
fsubs
lea
or
insb
ds
add
cs
mov
test
scas
sbb
cmc
inc
cmp
mov
mov
sqrtps
sbb
lea
adc
sub
xchg
insb
jge
add
xor
lahf
rorl
insl
xchg
sahf
sbb
imul
mov
add
cmp
mov
movsl
mov
clc
mov
mov
pop
inc
dec
lcall
inc
int
xchg
loopne
mov
rcll
and
adc
test
mov
cld
cld
jmp
pop
mov
mov
aam
cmp
xor
out
xchg
add
xor
cs
lds
hlt
push
push
addr16
aad
outsl
sub
cs
ja
shlb
pop
dec
sarl
jp
iret
in
sbb
nop
xor
mov
lret
sbb
lods
ljmp
inc
mov
cmp
add
imull
pop
fsubr
adcb
mov
push
mov
int3
pop
aaa
or
xchg
xor
gs
inc
rcrl
cltd
jmp
or
scas
sbb
adc
pop
call
outsl
jne
mov
add
xor
mov
xlat
outsb
push
mov
aas
push
add
xchg
cs
xlat
repz
sbb
daa
dec
shlb
movsl
jno
ret
jnp
xor
cmpsl
or
xor
or
daa
adc
adcl
je
cmp
into
push
dec
scas
cmp
cld
xchg
push
sbb
sbb
dec
testb
cmp
testl
xchg
ljmp
jae
pop
xchg
mov
in
dec
cmpsb
fsts
mov
mov
lcall
repz
xor
sub
ss
push
mov
cltd
lock
and
xlat
cld
mov
test
fldt
xlat
nop
xchg
cmp
add
out
or
mov
dec
call
sub
fcompl
lods
pop
into
mov
push
mov
pop
fwait
dec
fcomp
xor
mov
mov
sarb
add
icebp
sub
cs
fistpll
sti
out
imul
inc
ljmp
cmc
sbb
shrb
jp
lea
mov
jns
xchg
aam
out
icebp
sbb
pop
in
cmp
mov
push
mov
xor
call
xchg
in
mov
mov
jg
cmp
loop
pop
insb
or
sub
xchg
mov
out
pop
mov
movsl
lret
mov
popf
or
xchg
lret
adc
jl
out
pop
mov
lock
scas
sahf
pop
and
xchg
sub
pop
outsl
sub
adc
add
cmpsl
clc
jae
pop
jp
sbb
mov
or
outsb
mov
rclb
xlat
lods
subl
insl
pop
pop
sbb
mov
xchg
push
adc
mov
and
push
sarb
mov
push
xchg
pop
mov
lods
mov
mov
jmp
dec
lods
mov
js
mov
inc
test
mov
ret
cmc
cmpsl
inc
mov
call
je
call
loopne
xor
loopne
xchg
mov
adc
jmp
pop
xchg
fcompl
cmp
xchg
inc
dec
daa
lcall
adc
leave
icebp
insb
cmpsl
sti
mov
push
pop
in
sahf
ss
leave
ret
loope
enter
push
add
sub
mov
push
cltd
cld
lds
push
insb
lret
fwait
sub
cmp
jg
jle
ljmp
ret
or
scas
and
pop
sub
mov
cmp
or
jle
fistl
in
stos
ja
push
in
out
je
loope
lea
inc
pop
sahf
dec
mov
fdivrs
dec
mov
adc
pushf
adc
xlat
mov
andb
xchg
scas
mov
fbstp
leave
xchg
loop
dec
add
sub
ret
pop
add
jmp
mov
pop
dec
repnz
lock
fstpl
out
jg
icebp
pop
mull
notl
cmp
inc
nop
call
dec
dec
add
push
jns
pushf
js
xor
inc
inc
dec
out
sub
cltd
pop
pop
sarl
fldcw
hlt
ds
mov
push
fs
pop
icebp
nop
mov
mov
aad
adc
jno
mov
xor
xlat
mov
ret
jmp
stos
xchg
lahf
cs
test
ret
and
xor
xor
push
subb
pop
or
jnp
lds
jo
ficoms
pop
push
inc
adc
sub
sbb
popa
outsb
sbb
cmpsl
mov
fldcw
mov
loopne
icebp
pop
xor
push
push
ret
lds
push
adc
push
les
test
loopne
adc
out
and
test
jge
mov
lret
and
lods
xchg
mov
push
dec
daa
idiv
imul
and
aad
push
push
xchg
scas
jns
inc
ffree
in
inc
es
call
xor
fmuls
ficoms
outsl
push
stos
adc
and
cmp
ss
xor
popf
pop
in
mov
ret
jl
cltd
das
dec
or
xchg
pop
or
test
inc
in
imul
sarl
mov
mov
inc
adc
ret
add
mov
icebp
cltd
cmc
cmpsb
push
movsl
xor
sbb
iret
mov
les
push
stos
sub
mov
iret
xlat
lock
sub
inc
out
xchg
push
dec
sbb
sbb
popa
loope
mov
jo
or
dec
inc
int3
lret
movsb
inc
inc
pop
dec
adc
mov
lahf
test
iret
in
pusha
negl
pop
jg
call
push
aad
lea
cmp
std
xchg
aaa
sub
out
push
movsb
cwtl
lods
mov
adc
mov
lahf
into
and
fsubrl
cmpsl
mov
rorl
out
cmpl
push
das
cmpsl
cld
cmpsl
js
fldenv
ja
je
test
loop
inc
push
or
jge
and
add
sarl
pop
jmp
sbb
popf
hlt
popa
push
in
sbb
and
repz
mov
push
add
mov
pushf
xchg
test
mov
xor
fsubrs
cmp
jbe
dec
or
clc
push
xchg
adc
dec
clc
stos
daa
mov
fldenv
mov
mov
mov
jmp
add
dec
pop
cmp
cmp
in
xor
imul
cmp
mov
pop
insl
lock
xlat
and
pop
or
xchg
pop
mov
rcrb
xchg
mov
adc
int
adc
ja
xor
and
xchg
cmp
int
mov
add
jae
stc
mov
mov
test
test
dec
mov
push
fwait
sbb
jecxz
add
in
dec
jg
lds
lcall
test
rolb
movsb
arpl
mov
nop
sbb
lock
sbb
dec
jmp
stos
es
mov
xchg
ficompl
in
sti
sbb
inc
xor
pop
fs
or
jae
ret
in
inc
and
adc
flds
mov
outsl
jbe
jmp
mov
insb
and
es
mov
xor
add
call
push
add
jmp
adc
jle
pop
lds
inc
outsb
out
push
lret
or
mov
ja
pop
inc
fcom
icebp
pusha
pop
sti
sub
push
cld
push
inc
rolb
sbb
ret
subl
iret
rcl
dec
and
hlt
sub
mov
ficoml
push
ds
sbb
lea
xchg
adc
rcrb
rorb
ret
cli
es
out
mov
testb
nop
js
xchg
mov
add
adc
in
pop
mov
mov
ljmp
mov
rcll
lcall
repnz
add
sub
xchg
xor
gs
mov
arpl
or
fmuls
sub
fwait
mov
xchg
cmp
xchg
fwait
pop
stos
pop
imul
mov
loope
fchs
out
sbb
adc
inc
jo
leave
test
xlat
arpl
push
push
add
jbe
cwtl
les
add
add
cltd
cmp
sbb
mov
in
adc
leavew
mov
cs
rcrb
gs
jl
pop
hlt
pop
pop
sub
inc
jnp
icebp
cmp
int3
sub
cmc
mov
test
mov
aad
mov
cmp
push
jne
inc
adc
mov
dec
push
bound
fs
pop
int
sub
stc
jge
jbe
dec
sub
dec
and
sbb
lea
dec
mov
jecxz
fs
push
lods
pop
mov
dec
bound
pop
enter
sbb
jge
sbb
add
push
push
sbb
sub
dec
movsb
push
and
mov
std
sub
movl
cmp
test
fs
jge
dec
jl
mov
jl
repz
pop
lahf
jbe
test
dec
popf
lds
sbb
dec
imul
adc
popa
or
push
jne
cmp
jecxz
inc
lcall
xor
sub
pop
orl
cmc
repnz
and
xchg
jg
in
leave
cli
mov
outsb
movsb
fildll
push
lret
cmpsl
jno
lret
lahf
jb
pop
adc
push
mov
loop
and
bound
lods
jg
push
xchg
push
sahf
out
ret
cmc
push
call
cmp
push
mov
ss
or
pop
jge
cltd
xor
fwait
cmp
mulb
mov
push
pop
add
test
out
call
enter
mov
mov
push
xchg
cmp
repnz
pop
clc
nop
or
fsubrl
mov
xchg
ljmp
nop
aam
push
aad
shl
jnp
in
mulb
aad
sbb
add
stc
outsb
out
lret
addr16
inc
cld
or
ja
sbb
test
sti
xchg
jmp
sbb
cmp
scas
fisubs
mov
int3
or
and
pusha
hlt
xorl
mov
and
movsl
dec
inc
loope
je
stos
out
xchg
add
and
imul
orb
insb
ss
cmp
test
mov
pop
loopne
dec
pop
mov
stos
and
ss
leave
push
dec
cmp
insl
shlb
xchg
imul
loopne
fs
sbb
notl
cs
daa
cmc
mov
lahf
cld
in
xor
inc
ss
jle
dec
push
in
ret
xlat
loope
mov
inc
mov
xchg
shr
cmp
push
xchg
dec
push
jle
out
adc
inc
or
sbb
mov
aad
insl
jnp
in
lods
dec
xchg
sub
and
mov
imul
fisttps
and
add
aad
dec
jmp
test
mov
mov
popa
xchg
aas
lock
pop
adc
leave
popa
aas
inc
pop
shlb
fistpll
andl
pop
fnstsw
sbb
fwait
sub
mov
or
jp
pop
xchg
cli
in
addl
or
xchg
test
dec
loopne
sti
push
mov
xchg
ret
cmp
jae
movl
xchg
mov
sti
mov
shlb
daa
dec
loopne
cmc
mov
cmp
imul
jg
mov
pop
mov
fistl
add
inc
ljmp
and
ds
in
nop
pop
mov
movsb
fcomip
mov
fstl
aad
enter
push
push
mov
cmc
iret
dec
movsb
dec
mov
aad
pop
xchg
xchg
jne
dec
mov
lea
lock
xchg
insb
xchg
mov
inc
mov
or
push
jno
push
in
add
imul
mov
dec
insb
inc
cli
pushf
xchg
or
and
ljmp
push
xor
fdivrp
cmpsb
mov
cmp
xor
and
mov
pop
fnsave
mov
enter
fmuls
fidivl
in
ljmp
add
in
inc
and
in
mov
mov
inc
fimuls
push
ljmp
pop
icebp
sbb
stos
aas
push
mov
xor
pop
inc
dec
imul
pop
inc
push
adc
add
mov
call
lcall
adc
test
mov
cmpb
xchg
dec
cmp
rorl
ret
and
dec
jno
cmc
in
jne
out
mov
jns
xchg
pusha
shrl
adc
popf
cli
mov
dec
scas
jns
mov
or
sbb
inc
dec
jb
pop
jg
add
mov
jle
mov
out
xchg
adc
push
push
lods
xchg
xor
push
pushf
xor
out
pusha
inc
aas
xchg
hlt
nop
xchg
scas
rcll
sub
sub
test
inc
dec
loope
mov
imul
cmpsl
test
inc
addb
pop
daa
mov
sub
xor
push
mov
lods
rcl
jnp
outsb
divb
push
test
dec
into
pop
push
add
jbe
mov
je
xchg
cmp
sbb
jb
jno
inc
pop
xor
jmp
les
xchg
mov
int3
ds
sub
xor
pop
inc
loopne
mov
or
sti
fidivs
jle
test
test
pop
addl
dec
movsl
mov
mov
push
jge
and
in
jmp
pop
xchg
inc
add
inc
fsubp
or
cltd
call
sub
lds
adc
ret
adc
xchg
sub
jo
ret
jno
xchg
mov
push
cmpsl
mov
shrl
adc
add
and
loopne
inc
out
adc
addr16
pushf
out
push
sahf
in
test
adc
adc
movsl
cmp
mov
aas
movsb
loopne
les
ss
add
ret
ffreep
cld
sbb
rorl
ja
xor
daa
adc
sti
pop
add
out
pop
push
dec
jecxz
pop
pusha
mov
lds
repz
xor
sub
cmp
or
jge
cmp
lret
pop
sub
jne
and
loop
inc
popf
add
jo
leave
pop
ljmp
in
test
xor
dec
pusha
int3
ljmp
mov
dec
ds
cwtl
pop
ds
dec
or
mov
xchg
test
ljmp
test
imul
lock
inc
int3
lock
js
sbb
dec
push
es
fcompl
pop
movsl
sti
das
cmp
mov
jo
pop
jne
clc
or
cmc
das
mov
cmp
adcb
xchg
icebp
jecxz
mov
fstl
inc
jmp
xchg
add
push
xor
out
call
sbb
fs
push
insl
adc
mov
fsubrl
shlb
add
xchg
mov
outsb
fdivl
out
add
xchg
sahf
cli
jns
cld
jg
nop
mov
outsl
daa
sub
mov
mov
movsb
xchg
and
mov
scas
lahf
push
popf
lea
js
push
jae
roll
jge
lods
mov
cmp
ret
fucomip
pop
popf
lods
nop
mov
jno
clc
xchg
sub
xlat
hlt
stos
repz
mov
es
push
add
xchg
sub
mov
jl
sbb
adcb
nop
fucomi
xchg
xchg
jo
inc
aam
pusha
in
mov
cmp
push
outsl
dec
gs
cmp
cmp
jno
mov
xor
cs
push
cltd
and
cmc
cmp
addl
inc
xor
mov
inc
jp
jge
and
sbb
adc
jp
push
adc
inc
in
mov
xchg
aaa
pop
out
fsubrl
addr16
push
xchg
dec
ret
scas
sti
and
cld
pop
and
mov
shrl
adc
ds
dec
shlb
or
popa
pop
inc
push
in
test
mov
stos
xchg
movb
cs
mov
mulb
jnp
pop
pop
int3
cld
xchg
imul
and
xchg
xor
out
sbb
sub
andl
hlt
movsl
push
add
ss
std
loop
inc
xchg
es
push
and
mov
inc
ret
mov
in
mov
add
mulb
fsubl
xorl
mov
dec
and
cld
test
jg
in
xchg
pop
test
stos
push
fsubs
or
fidivs
test
hlt
out
stos
add
test
fucom
sets
mov
push
ret
and
sbb
insl
xchg
dec
lcall
pusha
pop
addr16
out
pop
adc
cmp
cmc
cmp
jg
inc
in
sbb
adc
rcrb
add
cmp
icebp
cmp
adcl
test
xlat
cmpsb
in
xchg
inc
scas
dec
fs
std
mov
shrl
add
push
and
inc
cmp
pop
push
insl
adc
int3
inc
pop
mov
dec
test
mov
cmpsl
loop
loop
jo
outsb
call
ret
push
and
mov
insb
cmovb
pop
mov
repz
insl
add
scas
pusha
in
xor
aaa
test
daa
mov
dec
scas
cmp
sbb
xor
sub
mov
push
adcl
ja
pushf
rorb
sub
pop
mov
lods
mov
insl
sbb
push
dec
push
inc
sbb
shll
xchg
and
int3
inc
mov
mov
sbb
sbb
rcll
inc
loope
xlat
fwait
xor
xor
jecxz
in
lret
mov
loop
out
fisubl
xchg
lods
sbb
push
push
mov
mov
ds
fldt
pop
jecxz
inc
xlat
imul
pusha
dec
adc
clc
mov
stos
pop
lret
addr16
fs
mov
ljmp
imul
jle
sub
in
inc
xchg
or
inc
mov
data16
lock
add
pop
add
xor
pop
and
lret
inc
pop
jno
popa
adc
scas
mov
clc
mov
sbb
inc
cltd
aam
mov
jne
test
movhlps
dec
mov
pop
nop
add
inc
daa
shl
pop
xor
iret
fucomip
pop
rorb
dec
jae
gs
pop
mov
outsl
jmp
cltd
sub
mov
sub
or
iret
cmp
aaa
mov
and
loopne
xor
pop
mov
xor
in
lret
push
pop
lock
pop
jo
sub
js
stos
push
jbe
xor
cmp
xchg
xor
pop
loopne
idivb
jbe
loop
cli
and
hlt
cli
cmpsl
xor
and
data16
cwtl
sub
lods
ljmp
das
jge
out
lret
mov
mov
mov
repz
or
sti
push
jno
loope
inc
cltd
das
jbe
movsl
push
insl
xchg
mov
shrl
movsl
push
aad
int
or
sbb
jno
lret
rcrb
jo
push
pop
orb
fdiv
sti
xchg
mov
and
mov
std
loope
or
jne
insl
push
cmc
and
jo
mov
and
xor
and
outsl
iret
orb
and
sbb
lret
divb
imul
dec
or
out
cmp
sbb
pop
push
dec
add
dec
decb
testl
insl
dec
dec
and
cmc
xor
or
mov
and
in
inc
icebp
ret
sti
push
xor
mov
xchg
pop
xor
or
icebp
or
mov
dec
lret
xchg
mov
into
add
pop
inc
mov
imul
jmp
lods
adc
loope
add
out
loopne
rcrb
leave
imul
or
add
sub
in
andl
adc
cltd
test
mov
mov
das
adc
cmpsb
ss
ror
lahf
cwtl
jge
sub
jns
inc
in
arpl
int3
add
mov
push
mov
sti
stos
icebp
out
stos
xchg
lods
aaa
xchg
into
pop
pop
xor
cmpsb
jmp
out
mov
add
fcompl
sbb
ret
ljmp
notb
xchg
mov
xchg
lea
push
sub
pop
addr16
mov
cli
inc
pop
shll
xchg
cmc
pop
cs
je
xchg
mov
jg
lret
dec
loopne
or
xchg
jle
cmp
and
std
sub
cmpb
leave
mov
imul
int3
test
repz
add
fucomi
aas
add
dec
cmp
dec
mov
ret
ret
in
out
sub
sbb
out
push
jb
movsb
inc
sub
imul
mov
adc
mov
mov
push
mov
xchg
outsb
es
cmp
nop
pop
rcrl
test
into
push
movsb
mov
jl
iret
cwtl
xchg
incb
addr16
pop
shll
push
int3
cmp
icebp
pop
and
or
js
in
pop
iret
mov
subl
push
jl
andl
jbe
jb
aad
fsubrp
dec
repnz
pop
mov
js
adc
mov
mov
int3
shrb
test
push
dec
in
cld
cli
push
pop
mov
rorl
adc
push
dec
push
in
nop
fisubrl
add
stos
cli
into
adc
xchg
pop
lods
jl
cltd
pop
jmp
mov
push
dec
add
dec
leave
in
leave
dec
jo
jne
cmpsl
mov
int
pop
je
xor
add
inc
bnd
and
orb
out
shrb
adc
add
outsl
inc
cmp
shlb
sbb
jns
cld
fldt
je
xorb
fnsave
das
xchg
inc
dec
sbb
ss
subb
int
pop
add
popa
hlt
xchg
xor
int3
pusha
jl
bound
cmpl
fcomip
call
mov
mov
stc
mov
dec
inc
lods
ljmp
xchg
jnp
popf
xchg
fcompl
adc
cs
es
mov
cmpsb
mov
gs
in
je
cwtl
mov
and
out
loop
pop
add
je
jle
pop
mov
push
loop
scas
adc
js
mov
pop
fdivrs
in
jl
js
or
jns
shrb
jno
in
mov
test
hlt
xchg
xchg
add
in
xchg
push
xor
stc
push
xor
sub
outsb
test
xchg
xchg
cld
es
mov
faddl
adc
add
xchg
aaa
mov
scas
xor
fistl
and
push
push
mov
xchg
jp
insl
add
mov
clc
push
cmpb
sub
popa
into
movsb
jo
xchg
rolb
mov
sub
sti
inc
lods
sub
fidivl
sbb
and
sbb
ret
dec
jne
mov
pop
lea
or
daa
dec
pop
fs
cmp
inc
dec
sbb
imul
mov
lcall
push
clc
push
pop
idiv
push
mov
cmpsb
xchg
rorl
and
sub
adc
sub
lcall
inc
mov
out
cmp
ret
sbb
lds
inc
in
es
cmp
dec
mov
mov
ds
pop
out
mov
fmull
movb
in
insb
push
adc
jge
jge
enter
sti
or
adc
cmpsb
mov
sub
xchg
hlt
cmp
push
mov
fwait
repnz
loope
mov
dec
add
loop
inc
sbb
arpl
cmpsb
dec
mov
cmp
data16
jno
sub
test
aam
xor
dec
jecxz
push
adc
fistpl
incb
adc
cmpsb
iret
adcb
repz
repnz
mov
adc
adc
xchg
aaa
into
mov
out
xor
into
enter
mov
or
or
push
mov
cs
aaa
pop
ds
mov
dec
ss
sti
cmp
xchg
std
add
scas
cmp
xchg
inc
in
punpcklbw
sub
jno
out
dec
jg
sti
add
int
pop
mov
push
pushf
xchg
push
in
pop
insl
lret
adc
mov
jns
cld
xchg
loop
xchg
out
out
or
xor
push
ja
js
scas
lods
pop
adc
pop
test
mov
out
sub
pop
cmp
sub
pop
ficoml
inc
fucomi
fmull
popa
mov
arpl
daa
test
inc
inc
fnstenv
jmp
clc
nop
popf
out
sarb
test
inc
xor
enter
insl
jg
add
je
mov
aaa
mov
popf
loop
pop
or
xor
popa
shl
stc
mov
mov
xchg
push
sub
xchg
loopne
sahf
pop
add
nopl
mov
dec
fldl
add
mul
xchg
in
mov
in
clc
clc
cmpsb
imul
mov
loop
dec
lea
scas
out
scas
add
xchg
push
sbb
sub
dec
sub
notl
ds
pop
cmp
dec
push
sbb
or
stc
inc
adc
lret
add
out
sub
jae,pn
insl
into
ja
dec
and
sbbb
int
inc
mov
aas
daa
push
testb
xchg
rol
mov
mov
sbb
enter
dec
call
mov
sbb
jb
fs
es
call
cmp
cmc
cmpsl
cli
mov
ja
rol
loope
sub
sti
cld
lods
test
jecxz
repnz
cmp
jb
cwtl
sahf
cld
dec
pop
adc
mov
iret
push
jle
clc
inc
sub
add
fcmovnbe
movsb
mov
xor
mov
jnp
add
sub
lret
jb
cli
rcrl
call
xor
mov
js
or
xchg
outsb
ljmp
dec
push
sarb
mov
jle
jno
movsb
mov
inc
push
clc
push
adc
adc
popl
xchg
pop
xchg
mov
cwtl
pop
sub
xchg
das
cmp
inc
inc
sarb
test
ret
pop
or
addl
push
inc
fdivrs
push
into
iret
lret
shr
xor
sub
enter
mov
cmp
xchg
pop
add
inc
cmp
adc
fldt
cmp
and
sbbl
push
sbb
push
and
std
pop
pop
mov
mov
add
in
jne
dec
mov
sarl
adc
sub
push
cltd
jp
dec
pop
push
adc
cltd
insb
inc
mov
stc
adc
fdiv
mov
jmp
outsl
add
mov
fsubrp
cmp
xor
and
inc
fdiv
data16
test
push
xchg
mov
jle
push
sub
insl
jp
lret
gs
pop
jae
mov
inc
inc
fwait
scas
inc
int
subl
push
jmp
ss
inc
loope
cmp
jge
or
cmc
call
or
adc
fldcw
adc
adc
movsl
jo
cmp
aas
push
mov
arpl
incb
sbb
or
push
into
or
pop
jmp
xchg
mov
shlb
push
in
aam
xor
inc
lods
xor
dec
fisubrs
stos
loop
xor
xor
insb
jp
lret
stos
std
adc
ret
clc
stos
and
shrb
es
jg
das
adc
or
fisttpll
sbb
stos
inc
inc
pop
mov
xor
pop
adc
push
in
jae
xor
ds
sbbl
xor
adc
fwait
jae
ret
and
sbb
pop
inc
mov
mov
lock
mov
repnz
adc
repz
fistpl
in
rcrb
ss
fsubl
pop
imul
xlat
cmp
and
lret
push
mov
data16
std
test
cmp
jmp
add
push
add
dec
cmpsl
ret
or
fnsave
dec
ds
mov
aam
push
lret
jnp
shrd
test
pop
in
and
movb
and
mov
out
pop
outsb
and
das
xor
adc
ds
push
or
sbb
or
mov
cwtl
xor
popa
cmp
nop
sub
dec
inc
call
dec
mov
lahf
stos
mov
sub
mov
dec
jnp
out
jnp
adc
inc
inc
dec
lahf
idiv
mov
adc
or
push
inc
inc
movsb
add
bound
xor
imul
out
cld
mov
cmpsb
aaa
push
mov
rcll
mov
fldcw
jp
sbb
and
imul
enter
in
movsl
ds
frstor
dec
dec
iret
mov
xor
pusha
mov
push
lret
and
je
addb
adc
xor
arpl
mov
fstl
cmpsb
adc
js
bound
add
and
mov
pop
je
xchg
or
jbe
bound
and
mov
hlt
xchg
and
sub
xchg
mov
andb
xchg
scas
js
xchg
mov
sub
jle
mov
mov
dec
push
aam
xchg
aas
sbb
cmp
cmp
xchg
cwtl
jne
sbb
cmp
pop
or
mov
aam
jo
pop
xchg
in
xchg
clc
mov
pop
sbb
clc
mov
fs
addr16
aas
push
pop
xor
inc
int
mov
fs
jp
sahf
sub
aam
dec
loopne
xor
loope
sbb
adc
movsl
mov
ss
es
aam
sbb
scas
adc
je
cmpsl
mov
aad
divb
lea
cmpsl
call
or
cmp
in
fimull
mov
lret
iret
fistl
pop
cwtl
mov
imul
push
leave
lock
fstpt
in
lret
add
pop
sub
xchg
scas
cmp
test
inc
in
pop
dec
mov
loope
aas
loopne
or
dec
dec
jae
sbbl
ret
and
fidivs
aaa
and
cmpsb
std
mov
pop
jmp
xchg
xchg
aas
xor
pop
call
adc
jnp
mov
rcll
loopne
cmp
repz
adc
pusha
sbb
jl
jae
pop
adc
add
mov
rorl
mov
in
push
inc
sub
add
pop
dec
inc
dec
adcb
or
cmp
in
fsubs
mov
scas
cmp
pop
fwait
pop
fidivrs
shll
ljmp
xlat
xchg
fcom
xchg
popf
xchg
xor
push
cmpsb
mov
xor
jo
nop
shll
pop
test
mov
cmp
lret
jecxz
xor
mov
hlt
xor
pop
test
shlb
loop
stos
js
xchg
inc
jbe
addr16
mov
mov
mov
ljmp
add
icebp
sbb
inc
pop
cmp
push
mov
jl
push
out
mov
movsb
inc
or
push
jne
outsl
push
sub
sahf
mov
fnsave
adc
lret
in
push
sahf
adc
xchg
cltd
lea
mov
arpl
sub
addl
jmp
ficompl
call
pop
inc
scas
outsb
daa
ds
sub
adcl
jecxz
jg
pop
mov
ljmp
aam
jl
pop
inc
dec
sbb
addr16
pop
push
insb
aam
mov
les
fsubrl
cmpsl
and
out
test
xchg
stos
jns
fisubrs
std
push
sub
loope
cmp
scas
xchg
sub
jp
stc
outsl
jne
insb
push
gs
or
pop
aam
int3
jecxz
dec
daa
cmp
movsb
mov
js
xor
cmp
cli
out
int3
sub
sbb
int3
jp
roll
jmp
movsb
push
test
mov
sub
jle
ss
das
aaa
stc
xchg
push
push
push
enter
inc
mov
aad
lret
or
pop
scas
inc
and
dec
fnstenv
fimuls
shll
xchg
mov
leave
inc
jb
shl
xchg
fcomi
stos
xchg
mov
xor
cmp
stos
insl
or
jae
inc
cmpsl
out
ljmp
cmpsl
mov
rcr
mov
hlt
cmp
loopne
bound
mov
dec
pop
xor
jmp
mov
les
in
push
or
adc
out
mov
pop
pop
ljmp
in
cmp
jg
adc
mov
mov
add
and
xor
xchg
mov
inc
fidivrs
sbb
cmp
fcomip
xor
mov
mov
jb
mov
jb
pop
and
jecxz
xor
scas
mov
cli
adc
repz
icebp
dec
dec
andb
mov
fimuls
mov
mov
or
or
lock
jecxz
jp
mov
jne
mov
js
mov
jo
cmp
cmp
enter
dec
inc
mov
mulb
cwtl
xor
mov
aas
pushf
movsb
inc
push
nop
inc
leave
pop
xor
xor
std
popf
scas
sub
push
outsl
repz
lock
mov
ret
sub
mov
adc
ret
in
in
int3
mov
sub
mov
mov
mov
pop
mov
push
fxch
jecxz
cmp
mov
pop
xor
lahf
mov
push
test
out
jno
or
out
push
loop
mov
rcrl
xchg
arpl
inc
movsb
addr16
add
loop
lods
outsl
add
sub
push
movsb
enter
cmp
scas
mov
sub
std
lret
mov
jbe
insl
xor
sub
cld
add
xor
pop
xor
stc
std
lods
sub
dec
sub
xchg
jb
int
push
mov
lea
test
imul
in
cmpb
add
outsb
inc
sti
pop
outsl
jb
mov
lcall
popf
aad
out
mov
cmpsl
dec
jge
and
pop
sub
test
adc
das
cmp
xchg
outsb
repnz
mov
testl
dec
fdivs
jmp
or
cmp
cmpsl
pop
lret
leave
adc
sti
out
icebp
jbe
pop
pop
ret
dec
push
jge
fcomi
push
test
dec
xchg
inc
pop
enter
xchg
jmp
mov
and
pop
xor
sbb
adc
xchg
add
cmp
xchg
cmp
imul
mov
ret
pusha
ja
dec
lods
cmp
adc
mov
fwait
mov
shll
or
fs
cmp
mov
mov
enter
nop
adc
dec
fisubrs
es
or
mov
lea
cmpsb
je
pop
es
or
mov
mov
xchg
add
xor
pop
pop
jbe
add
cli
les
mov
and
fisttpl
sbb
movsb
negb
nop
imulb
inc
ss
fisubl
inc
and
cmp
mov
dec
call
and
in
pop
xor
mov
je
je
mov
pushf
inc
inc
pop
jle
jle
jecxz
and
sti
cmp
outsl
arpl
jb
lret
inc
lret
push
arpl
mov
push
shlb
cmpb
xchg
cmp
xchg
pop
cmpl
inc
lahf
daa
test
sbb
repz
add
sarl
push
dec
xlat
lds
loop
xchg
pop
call
sbb
push
outsl
xchg
cli
mov
cltd
add
dec
shl
sti
repz
and
jno
pop
lret
fdivs
and
in
mov
jno
aaa
jo
leave
jg
mov
in
test
icebp
orl
popf
push
arpl
jnp
adc
and
and
xchg
cltd
lock
cmp
sahf
adc
bnd
mov
jge
js
popa
jnp
lea
mov
or
les
enter
inc
test
mov
add
mov
jnp
testl
push
out
adc
or
or
imul
add
pop
sahf
gs
ret
cli
cmp
xor
dec
xlat
xchg
addr16
insb
out
jb
sub
and
mov
bound
hlt
jmp
call
add
cmpsb
xor
out
pop
inc
mov
mov
sbb
add
xchg
in
cltd
call
cmpsl
dec
push
mov
sub
scas
or
fdiv
fsts
into
gs
add
lock
mov
int3
shll
dec
int3
pop
icebp
adc
pop
inc
fsubs
jne
sbb
adc
adc
nop
mov
ss
rcll
daa
lcall
xchg
sub
sub
cltd
sub
jmp
xor
mov
flds
repz
or
in
and
cltd
incb
imul
mov
sbbl
sbb
test
inc
adc
inc
and
int
int
jae
popf
hlt
cmpsl
popf
inc
xlat
ljmp
pop
cmp
scas
in
mov
loope
aas
xchg
lcall
sub
pop
add
insb
inc
repz
dec
repnz
push
sbb
adc
lods
jae
ret
xchg
dec
ret
clc
cltd
das
scas
in
in
inc
jno
xor
addr16
leave
leave
push
dec
mov
in
push
popf
inc
scas
cmp
loope
inc
and
insl
sbb
jle
adc
push
je
loopne
xchg
sbb
push
push
cltd
daa
push
sbb
mov
les
cli
imul
jno
fisubrl
mov
daa
call
pop
sub
out
shl
push
stos
orb
test
or
hlt
lods
mov
out
mov
inc
push
shll
mov
cmp
pop
sbb
addr16
loopne
adc
xor
inc
std
ret
pop
cmp
scas
fisubrl
dec
adcl
arpl
mov
stos
orl
ds
loopne
push
adc
adc
and
insl
test
dec
scas
fildll
pop
xchg
in
adc
and
int
lret
mov
mov
pusha
mov
pop
sbb
pushf
mov
jg
and
in
iret
jnp
pushf
imul
cmp
push
pop
sahf
inc
cmpsl
mov
sar
aam
pushl
lcall
loope
iret
xchg
add
dec
in
ja
shl
push
jo
push
and
loopne
jnp
mov
clc
pop
aad
jg
jno
adc
in
loopne
les
xor
xorb
in
dec
gs
add
imul
mov
mov
inc
data16
fmul
fidivl
xchg
out
popa
sahf
jno
lcall
clc
sub
xchg
arpl
stos
pop
jp
jl
aaa
sub
or
mov
lcall
add
popa
pop
push
sub
sub
xchg
call
scas
bound
sbb
ret
ffree
jae
call
test
sbb
test
fdivr
stos
mov
scas
dec
xchg
popf
mov
or
sbbb
sub
loope
adc
xchg
outsb
clc
je
mov
mov
pop
movsb
mov
inc
arpl
mov
cmp
fsts
jb
repnz
ljmp
xor
arpl
pop
sub
gs
add
mov
lcall
daa
ret
cmpsb
mov
cmp
add
adc
pushf
jno
scas
mov
sub
add
insl
fdiv
dec
dec
test
sahf
arpl
in
int
cmp
push
cmp
sbb
loopne
push
add
sub
shrb
iret
shl
mov
dec
test
push
leave
cmpsb
shll
out
fisubs
movl
into
jne
ret
mov
ret
scas
out
hlt
mov
sub
lahf
imull
sub
xchg
sahf
ds
dec
mov
lea
jb
xchg
adc
mov
insb
jl
test
jecxz
adc
fiaddl
xor
cmpb
sub
fnsave
rclb
in
inc
push
adc
cmpsl
out
outsb
inc
xchg
rcrb
or
dec
xchg
jp
cmp
mov
cli
movsb
mov
repnz
js
imul
jg
or
inc
xchg
sub
clc
add
add
push
scas
out
jecxz
out
jns
daa
jmp
adcb
xor
push
sub
mov
mov
xchg
xor
xchg
xchg
xchg
or
mov
loope
outsb
xor
xor
push
sub
pop
add
movsb
das
je
inc
jmp
mov
jge
nop
inc
push
dec
dec
rolb
mov
into
xor
jb
sbb
xchg
or
into
out
pop
jne
mov
lea
cld
xor
shrl
and
sub
push
pushf
sub
pusha
mov
lcall
adc
add
pop
imulb
int3
pop
stos
jbe
jge
inc
and
insb
add
cmpsb
sbb
pop
cmpsl
add
fiadds
scas
ds
fidivrs
xor
pop
xchg
rcll
push
test
int
mov
dec
cmpsb
pop
andb
cmp
push
adc
shr
out
adc
aam
aam
cs
jge
shl
sbb
movsl
stos
ret
inc
jbe
pushf
mov
cmp
jno
repz
dec
pop
stc
out
inc
add
mov
jo
aad
push
dec
incb
mov
mov
lods
inc
std
xchg
jl
sub
cld
sahf
out
bound
or
das
cmp
in
adc
test
inc
dec
pusha
pop
adc
int
cmp
dec
imul
popa
push
jbe
dec
lretw
cmp
mov
sahf
mov
pop
mov
xor
rcl
jp
mov
push
in
add
ret
xchg
jge
clc
leave
rolb
mov
inc
add
stos
cmp
and
clc
mov
pop
mov
push
and
mov
pop
je
cli
lea
mov
lock
test
lret
or
jle
mov
add
push
out
fdivp
jns
push
jmp
push
xor
cld
outsl
pop
xchg
gs
jo
aad
mov
and
mov
sbb
in
subb
cld
insb
add
mov
sbb
pop
ret
mov
mov
insb
sti
pop
out
insb
or
movsl
pop
lret
cmp
cld
lcall
in
jnp
and
jno
sbb
sbb
inc
cmpsl
sbb
cmpsb
pop
pushf
adc
and
jecxz
imul
rorl
pop
xchg
mov
popf
adc
daa
jns
lcall
cmp
or
inc
push
shlb
pop
mov
scas
andl
or
psrlq
repz
jne
mov
into
push
inc
xchg
and
push
stos
js
push
repz
stos
jp
inc
inc
mov
mov
jmp
jecxz
xor
jmp
and
movsb
jge
pop
jmp
adc
fisttpll
enter
gs
sbb
or
imul
lahf
jmp
rorl
dec
mov
mov
sub
aad
lds
aaa
add
jle
shl
cmp
mov
gs
into
add
icebp
sar
dec
inc
and
notl
loopne
sub
mov
ficomps
dec
fisttpll
jecxz
mov
push
jecxz
xchg
addr16
addb
dec
out
inc
and
aam
pop
fwait
jne
aam
xchg
cmpsb
jnp
sti
pop
mov
daa
add
lret
adc
sub
movl
pinsrw
test
jg
mov
mov
lahf
into
xchg
adc
or
jns
cs
stos
mov
mov
mov
dec
rcll
cmp
pushf
jle
sub
add
mov
xchg
ret
fdivrs
dec
mov
test
ja
push
mov
mov
cmp
xlat
sub
hlt
repz
xlat
mov
sub
testl
ficoml
mov
icebp
movsl
inc
scas
jle
hlt
lock
inc
clc
push
jno
cmp
mov
mov
fs
loop
add
or
loop
fstpt
lret
mov
push
push
into
lret
test
scas
push
dec
push
popa
cld
insb
int
add
push
repz
out
mov
lret
xchg
clc
sbb
decl
mov
inc
and
std
std
push
in
enter
shrb
in
pop
xchg
scas
and
xor
pop
xchg
bound
sub
mov
inc
mov
fists
pxor
nop
inc
sub
test
xchg
ljmp
sahf
inc
push
data16
sbb
mov
subb
scas
add
inc
jno
dec
sub
roll
in
arpl
add
jne
popf
push
mov
jns
data16
fisubl
jl
add
ja
enter
mov
dec
dec
out
inc
mov
cli
or
popw
shrb
inc
pop
in
inc
lret
insl
dec
cmpsb
fsubl
into
and
sbb
add
stos
jg
insl
mov
mov
cmpsl
cmpsl
js
daa
daa
fcoms
xlat
je
and
push
outsb
shlb
sbb
lods
inc
cmp
bound
adc
mov
sub
dec
pop
xor
outsb
pop
cli
sbb
mov
jnp
push
lods
xchg
data16
xchg
xor
aas
xchg
dec
cs
movaps
daa
mov
jg
arpl
nop
cmp
gs
nop
and
inc
mov
clc
xchg
or
push
dec
xchg
xor
shlb
loopne
cwtl
or
and
aas
jae
mov
fdivl
call
sbbb
inc
inc
adc
sahf
and
mov
add
push
outsl
lock
inc
in
jns
loopne
xor
hlt
cmpsb
bound
xchg
fwait
aaa
add
jecxz
aaa
push
mov
ds
arpl
jp
cmp
bound
dec
outsl
cltd
stos
mov
es
xor
xchg
pop
nop
dec
dec
mov
xor
flds
push
jg
mov
or
imul
xlat
into
sbb
dec
aas
adc
repz
push
and
adc
mov
leave
adc
in
popa
andl
out
rorb
xor
pop
pop
or
adc
add
dec
cltd
inc
outsl
rcll
out
mov
xchg
add
dec
js
xchg
dec
jae
cwtl
fs
ret
or
jo
mov
bound
jbe
shr
orl
xchg
imul
lea
inc
or
sti
inc
pop
cmp
scas
dec
jo
shrb
jmp
lea
jae
outsb
add
inc
pop
mov
push
inc
jecxz
mov
call
int3
push
push
and
loope
xchg
adc
cs
shll
or
in
xchg
movsl
cmp
and
inc
out
and
inc
mov
notl
mov
movsb
out
bound
pop
and
nop
pop
movsl
sbb
inc
ror
repz
hlt
fs
mov
sahf
iret
imull
into
rcll
xchg
mov
mov
out
loopne
adc
xchg
mov
sbb
pop
sbb
dec
sub
fistl
or
sub
pop
mov
mov
ret
cmpsl
dec
inc
mov
pop
mov
xchg
idivb
mov
jmp
sti
cmp
subb
rcl
dec
mov
shrb
mov
jno
dec
mov
outsb
or
cmp
sub
jne
daa
mov
or
ljmp
jge
mov
es
adc
add
dec
std
mov
xor
push
mov
out
mov
xor
ds
jl
loop
mov
aam
dec
adcb
push
inc
inc
mov
jecxz
out
aam
inc
mov
test
fmul
frstor
pop
sbb
loopne
mov
call
dec
mov
aaa
mov
xchg
push
iret
push
les
cmp
mov
imul
stc
inc
mov
mov
fwait
push
mov
leave
ss
push
dec
sbb
stc
sbb
aad
xor
lret
addb
in
pop
jecxz
cmpsb
cmp
cmpsb
sbb
cmp
mov
jp
jg
jnp
dec
sbb
cmp
imul
xchg
or
test
ret
push
or
jle
mov
fmuls
push
loop
shlb
jmp
int
push
fs
mov
lds
cmpsb
push
int
sub
dec
pop
mov
cli
xchg
jge
fwait
in
pop
lcall
sub
mov
repnz
pop
push
jns
inc
ret
hlt
jl
jbe
sbb
xchg
xor
sub
and
fbld
and
negl
stc
rcrl
out
loope
mov
and
push
lock
bound
inc
repnz
pop
jbe
popf
sub
out
pop
fbld
or
adc
lss
pop
aas
mov
lcall
repz
cmp
jle
cmp
dec
outsb
push
mov
or
lahf
mov
sbb
adc
dec
rolb
mov
push
inc
out
or
inc
inc
mov
out
adc
dec
stos
inc
and
inc
stos
jb
filds
lahf
ljmp
adc
add
jns
push
jmp
lret
sbb
mov
pop
ss
stc
leave
pop
rolb
xor
push
shl
sub
jo
loop
mov
mov
mov
jle
cmp
inc
scas
xor
dec
xchg
xor
mov
movsb
cmp
push
pop
imul
inc
into
insl
xchg
pop
xlat
scas
ud1
cmp
inc
fsts
and
mov
pop
loopne
cmp
xchg
mov
push
popf
pop
jg
jno
push
dec
nop
out
repz
pop
lea
push
repnz
xchg
sub
gs
jo
movsl
mov
jle
xlat
ljmp
mov
push
jp
je
xchg
add
les
jp
push
outsb
sub
out
cmp
mov
sbb
mov
movsl
jns
pop
aad
fisubrl
ret
lds
dec
adc
pushf
or
test
js
mov
roll
shr
nop
pop
rolb
imul
inc
scas
mov
xor
js
fidivl
mov
pop
jmp
pop
sbb
mov
xor
iret
test
int
addr16
out
mov
xchg
cmp
push
lock
mov
rcrb
adc
test
adc
fmuls
test
push
inc
das
pop
cmc
fucomp
sti
mov
pop
xchg
test
dec
fsubrs
imul
cli
xchg
adc
add
or
std
cs
xchg
push
jns
mov
mov
ds
mov
sarl
andl
lods
jne
sub
xchg
test
sahf
mov
fisubrs
call
mov
jb
cmp
aam
push
or
cli
jne
add
jne
xor
inc
data16
popf
je
fisttps
add
mov
call
ret
jp
imull
testl
in
cmp
sbb
mov
and
inc
int
jmp
xor
adc
push
jecxz
or
add
inc
test
xchg
mov
jecxz
sbbb
sets
subb
mov
fistl
dec
or
add
pop
lds
jmp
jle
push
xchg
mov
jns
lahf
sub
xor
leave
pusha
clc
je
or
mov
jbe
repnz
and
adcl
cli
xchg
popa
pmullw
dec
loop
fidivl
or
jmp
enter
inc
roll
and
stos
dec
lret
iret
xchg
loop
sbb
into
mov
sub
pop
adc
jbe
ret
imul
add
fisubrs
mov
xor
bound
xchg
inc
int3
ss
sbb
pop
cmp
rcrb
shld
test
push
pop
fdivrs
clc
mov
scas
mov
inc
repz
call
mov
push
adc
inc
inc
pop
scas
js
sbb
inc
cltd
ss
inc
aaa
mov
add
gs
jp
dec
mov
sbb
mov
jle
xor
inc
jo
clc
iret
fldt
jns
sub
inc
sub
iret
lahf
xor
testb
cmp
pop
out
push
adc
sbbb
mov
aad
es
add
outsb
or
movsb
cltd
mov
lcall
out
mov
and
xlat
outsb
inc
rcl
push
hlt
data16
dec
sbb
dec
repz
out
cmpsl
int3
xor
repnz
sbb
adc
sub
rcrb
xchg
push
mov
call
cmp
adc
pusha
sbbb
jne
cmpps
sub
ss
sub
iret
dec
and
stos
xchg
mov
push
int3
adc
andl
add
mov
xor
gs
sub
mov
sbb
ret
pop
xchg
pushl
pop
sbb
mov
jmp
sub
xor
fwait
notb
subl
int3
in
lock
cltd
adc
movsb
lret
sbb
add
ljmp
pop
jecxz
lock
loopne
add
leave
pusha
loope
cltd
adc
imul
jne
mov
ljmp
test
or
pop
dec
ltr
xor
ficoml
push
jne
xchg
sbb
xchg
test
mov
pop
mov
repz
cmp
mov
jns
jle
es
push
xor
daa
dec
mov
imul
shrl
cmp
mov
mov
xor
int3
push
sub
sub
sbb
inc
or
lock
mov
pop
adc
and
dec
fdivr
shll
icebp
jmp
push
pop
jge
xor
ret
into
insb
mov
inc
fwait
mov
lret
xlat
push
mov
or
insb
push
cmpsb
mov
jb
cmp
roll
enter
lods
das
addr16
fimuls
inc
mov
ret
mov
aaa
xchg
jo
inc
xchg
pusha
cmc
jge
add
data16
mov
or
int3
shlb
lock
repz
in
sbb
xchg
enter
or
mov
sahf
es
push
inc
cmp
in
and
sub
pop
xchg
pop
add
adc
scas
fsubrl
out
push
out
or
add
bswap
adc
or
cwtl
mov
punpckhbw
mov
jo
mov
push
sti
mov
scas
out
push
outsl
cli
inc
imul
cmp
inc
pop
into
and
dec
data16
jp
xor
mov
push
lahf
shll
add
push
cli
xchg
mov
inc
insb
mov
sub
push
icebp
outsb
ss
ret
das
xor
jl
sbb
imul
jg
stc
scas
mov
popa
popa
stos
enter
mov
or
popa
jno
mov
sbb
sti
fimuls
push
sbb
xor
lods
xchg
das
or
mov
clc
push
mov
lods
roll
hlt
lahf
mov
mov
dec
in
inc
pop
imul
in
push
push
shl
jnp
inc
xchg
inc
pop
push
mov
movsl
inc
loope
pop
inc
adc
pop
push
addr16
sar
dec
mov
cmp
xchg
and
push
sbb
outsb
adc
push
sub
sub
sahf
mov
xchg
jge
lods
and
push
into
jae
jbe
inc
jecxz
push
fs
pushf
push
repz
mov
sbb
insb
lret
test
in
repz
das
loope
rcl
ret
sarl
adc
xor
fcomip
push
xor
je
mov
sbb
filds
adc
sub
cli
shl
push
aad
jb
xchg
mov
int
pushf
xor
out
outsb
sbb
fnstenv
sbb
sbb
jg
and
mov
or
mov
jmp
inc
cli
xchg
jne
movsl
inc
sbbb
mov
jle
insl
add
rorl
pop
lcall
lods
or
data16
jecxz
int
cli
and
mov
lods
push
sbb
hlt
insb
rcll
jae
add
mov
sbbb
mov
loopne
scas
pop
fcmovnbe
ja
dec
and
stos
pop
or
xchg
mov
cltd
out
dec
mov
inc
lret
mov
inc
sbb
dec
adc
mov
xor
sub
nop
sahf
pop
mov
pop
cmp
call
shrl
jns
data16
push
daa
icebp
push
pop
push
mov
pop
shrb
xor
push
xchg
mov
ret
add
orl
test
adc
mov
dec
sub
jl
cmp
popa
pop
mov
mov
jne
inc
xlat
mov
ljmp
testb
pop
std
cmp
adc
movsb
aas
cwtl
and
push
sbb
or
adc
mov
inc
jbe
or
pop
mov
fimuls
lods
push
in
inc
adc
mov
mov
faddp
pop
test
lret
cld
movb
pusha
mov
into
add
test
insl
fstpl
xchg
pushf
adc
into
sbb
or
fs
sti
scas
je
or
add
xchg
push
jmp
mov
sub
dec
mov
cwtl
push
loopne
mov
mov
sbb
jmp
inc
cmpsl
and
mov
adc
adc
mov
loopne
and
and
notb
inc
inc
movsb
insl
jne
mov
out
pop
pop
mov
add
and
data16
cmpsl
mov
push
sub
push
inc
or
sub
sbb
adc
roll
xor
xor
lods
inc
sahf
xor
dec
ja
cmc
inc
sub
ret
mov
push
jecxz
push
sti
call
test
adc
lcall
push
ljmp
call
rcll
xchg
sub
lret
fbstp
cmc
push
cmpb
mov
push
sbb
and
fcomps
out
in
popa
rclb
andl
stos
cmp
sbb
or
in
xchg
pop
divl
fsubl
push
push
pop
js
out
inc
sub
jne
movsl
mov
jo
inc
xchg
cmp
and
insb
mov
mov
ret
lcall
negl
mov
mov
cmp
jo
lods
in
test
mov
fldl
dec
pop
cli
xchg
mov
imul
fnstsw
adc
cmp
aad
adc
mov
mov
cmp
arpl
jle
lcall
test
sbb
cmp
dec
out
mov
xchg
xchg
shrb
mov
icebp
dec
hlt
or
jp
in
ss
push
jge
xor
sub
pusha
je
adc
push
mov
and
repnz
adc
pushf
mov
push
ljmp
lock
pop
mov
inc
inc
add
jg
dec
pop
mov
jge
lods
mov
inc
repz
mov
loope
mov
jge
dec
mov
cld
jp
xchg
lcall
pop
mov
jg
addr16
dec
loop
iret
enter
mov
xlat
pop
sbb
bnd
lock
fidivrl
in
push
jae
adc
std
addl
sbb
nop
mov
in
xchg
sbb
jl
mov
jle
jg
inc
mov
loope
xorl
jno
add
fidivl
pop
mov
sub
jecxz
shl
rcl
div
or
repnz
stos
stc
jno
mov
aam
xchg
hlt
es
aad
insb
sarl
xchg
mov
sub
add
insl
enter
pop
jbe
mov
push
dec
pop
xchg
mov
faddl
pop
idivb
sahf
rorl
div
ja
stos
pop
cmp
add
fdivrl
mov
push
xchg
shl
inc
mov
mov
push
out
and
pushf
imul
rcrb
imul
aam
lods
add
inc
jg
test
les
daa
adc
adc
add
jle
fwait
lock
int
in
and
add
flds
movsb
fisubrl
xchg
shll
add
cmp
mov
nop
and
jbe
test
pop
mov
std
jbe
stos
inc
mov
pop
rorb
rcr
pop
inc
pusha
xor
scas
jb
xchg
fstps
lret
lretw
sub
fdiv
push
or
xor
sub
add
test
xchg
sub
inc
test
pop
inc
std
adc
incl
or
repz
out
sti
push
out
cmp
aad
dec
pop
imulb
loop
popl
add
in
push
mov
push
pop
or
and
mov
sbb
mov
xchg
sti
pop
lcall
push
outsb
insb
cmp
mov
jb
jne
test
inc
mov
push
fstpt
ret
cmp
jmp
fwait
das
mov
add
inc
xchg
xor
jmp
mov
repnz
adc
push
lods
div
fwait
test
xchg
imull
lods
xor
cmpsl
mov
int
movsb
popf
cli
jg
ret
mov
fmul
add
sbb
rcrb
mov
cld
sub
sti
cmp
ret
ja
into
push
aaa
dec
xchg
mov
adc
sub
rclb
inc
inc
adc
xor
and
inc
push
out
mov
aas
loope
fidivl
outsl
jmp
sbb
mov
ret
mov
loop
push
dec
shlb
ret
push
mov
pusha
imull
or
mulb
adc
mov
dec
out
push
lahf
mov
mov
fisubrl
bound
pusha
sti
sub
push
xchg
push
int
push
inc
mov
jae
cld
dec
scas
lret
mov
dec
push
xor
enter
xchg
std
sbbb
xor
lahf
popa
test
jno
mov
add
in
sbb
xchg
mov
outsb
nop
push
cmpsl
stc
mov
mov
das
hlt
cmpsb
or
mov
mov
sub
int3
iret
out
sbb
gs
jbe
mov
hlt
imul
sbbb
lods
les
dec
jg
test
out
dec
cmc
lods
adc
ror
int
mov
out
pop
adc
aam
add
dec
xchg
mov
sbb
pop
cmp
push
sub
cmpsl
shlb
fsubr
add
xchg
mov
mov
lods
int3
adc
out
in
pop
mov
scas
test
cmp
fcomp
lahf
push
sub
mov
mov
popf
loop
pop
outsl
inc
xlat
mov
or
xchg
mov
add
xchg
pop
js
push
jmp
xchg
adc
push
lret
jno
in
mov
out
mov
xchg
popa
rclb
cmpl
push
int3
arpl
cli
mov
adc
cmpsl
call
pop
scas
and
pop
jl
sbb
sbb
mov
or
pusha
dec
xchg
shlb
andb
movsl
sbb
outsl
outsl
mov
ja
out
jns
out
adc
or
pusha
pop
int3
js
std
jnp
push
mov
addr16
aam
adc
popf
cmc
adcb
ret
js
test
pop
adc
jne
sbb
mov
xchg
gs
and
ftst
sbb
ret
aam
pushf
xchg
ret
shrb
mov
fistps
cmp
fcmovu
aaa
ds
imul
stos
in
inc
testb
daa
push
ja
dec
add
pusha
rorl
pop
and
repz
movsb
cmpsl
clc
or
xchg
cs
cmp
scas
cmp
mulb
imul
lret
lret
stc
jbe
cltd
xchg
mulb
cmp
sarb
or
into
fwait
aas
push
xchg
enter
ja
dec
test
mov
mov
jb
dec
pop
insl
sub
xchg
stc
std
mov
lea
xor
jl
jno
mov
mov
mov
cmc
outsl
fcomps
roll
addr16
inc
jge
mov
dec
int
out
push
or
cmp
fldcw
mov
pusha
fistpl
in
out
jb
out
cmp
loopne
mov
hlt
xchg
inc
std
push
fnstenv
xchg
repz
nop
pop
ljmp
push
cmp
fstl
les
adc
sbb
andl
rorb
cmpsb
fwait
lea
fnstcw
je
jo
pop
hlt
movsb
hlt
loope,pt
jnp
clc
jo
pop
push
and
cmpsb
dec
in
jp
ret
xchg
cmp
pop
std
insb
add
and
mov
cmp
int
and
out
sti
push
std
jp
push
push
cs
mov
inc
mov
jbe
aad
dec
pop
scas
dec
mov
mov
push
hlt
aaa
sub
or
cs
mov
mov
inc
push
out
repz
xor
cmp
pop
dec
sbbl
and
fwait
push
sbb
cmp
xchg
fstl
xchg
push
not
shrl
int
lcall
cwtl
incb
call
and
xor
fidivs
and
mov
stc
scas
call
and
hlt
mov
nop
jae
jo
cmp
xchg
push
dec
mov
aam
mov
inc
mov
cmpl
xor
leave
loop
lret
mov
add
mov
dec
sti
mov
pop
lcall
lock
or
bound
dec
inc
aad
cmc
mov
dec
jmp
or
xchg
adc
mov
mov
fsubrs
in
add
mov
loopne
sub
lahf
inc
mov
in
dec
in
bnd
in
add
out
cld
or
cs
mov
add
popf
inc
dec
dec
ja
in
inc
in
push
inc
lret
rolb
divb
and
xlat
je
cmc
push
outsl
add
jmp
mov
jnp
mov
inc
inc
fisubs
mov
addl
jo
popa
sub
mov
or
jg
icebp
mov
pop
sbb
fistpll
cmc
or
fwait
daa
hlt
pop
sahf
in
sub
inc
mov
pop
das
dec
icebp
xchg
aad
popf
scas
dec
dec
sub
adc
xor
ljmp
lret
and
out
push
mov
xor
mov
leave
cwtl
jb
mov
in
xchg
fidivs
scas
ss
cmp
mov
dec
xor
mov
and
mov
test
dec
add
mov
std
aam
insl
sub
insl
stos
daa
in
outsb
push
sbb
addb
push
fstpl
push
leave
adcl
int
lds
add
push
sub
fcomip
cli
push
push
lods
cs
int3
xor
int3
push
xchg
dec
inc
bound
test
fbstp
push
lea
mov
mov
adc
lret
cmpsb
fildll
imul
ljmp
push
out
bound
push
hlt
mov
test
or
jp
push
cmp
mov
dec
xchg
fstl
xor
lret
sbb
push
jb
icebp
xchg
adc
lea
xor
repnz
mov
or
or
add
and
dec
push
std
test
and
leave
outsb
jl
cmp
movntps
je
or
fiadds
adc
add
jb
adcl
xlat
dec
xchg
add
add
fistl
icebp
mov
mov
inc
inc
movl
leave
and
jg
xchg
jns
stos
push
xor
inc
adcb
xor
pushl
sbb
mov
in
subb
push
insl
mov
sbb
sub
in
and
divb
push
jge
push
sub
ljmp
ss
cmp
inc
pushf
xlat
gs
and
jae
pop
movsb
test
mov
pusha
jp
lea
push
jg
and
mov
push
cwtl
ja
adc
push
cmpsb
pop
cmpsb
add
cli
std
mov
aaa
int
dec
xchg
pop
mov
aad
xor
fcmovbe
imul
call
mov
popf
push
add
add
or
aaa
stos
xchg
mov
or
inc
pop
sahf
jno
js
ficomps
mov
xor
adc
mov
pop
mov
jmp
inc
sti
and
iret
out
add
cmpsb
in
lods
mov
add
cmp
pusha
inc
inc
bound
pop
mov
jb
or
and
mov
mov
idivb
cmpsl
test
dec
out
jge
into
gs
rorb
loope
in
das
out
aas
gs
lock
fstpt
aaa
sbb
loopne
and
addr16
cltd
xor
mov
push
gs
loopne
cwtl
jae
mov
popl
daa
arpl
fsubs
pusha
test
sar
xchg
mov
ret
mov
sub
leave
sbb
jge
cmp
adc
push
outsl
stos
ret
test
sub
and
rol
imul
mov
xlat
mov
mov
pop
push
add
movsl
mov
sbb
dec
xchg
xchg
or
mov
sahf
push
repz
or
inc
jb
jle
sti
mov
ficomps
movsb
jae
scas
mov
sbb
into
push
cli
cmp
leave
fcmovne
decb
add
pop
ja
xchg
mov
mov
lods
inc
jb
jns
stos
scas
fwait
in
push
fdivrl
jno
int3
sub
cmp
mov
loop
leave
sbb
shl
pop
insl
arpl
mov
pusha
imul
repz
lret
data16
push
ret
sar
sbb
xor
jns
sub
out
pop
add
push
lea
cltd
hlt
mov
lret
aad
sbb
popf
and
pop
dec
dec
sbb
jae
leave
adc
les
test
cs
loopne
mov
insb
test
jo
xorb
aaa
in
into
xor
sub
mov
das
lret
inc
jno
mov
movsl
es
adc
jge
sub
sub
int3
pop
push
push
xlat
enter
jmp
movsl
inc
inc
shrb
adc
inc
int
lock
pop
aas
add
aad
loop
cmp
in
mov
inc
leave
mov
notl
mov
mov
mov
ljmp
jns
pop
xor
lcall
adc
and
adc
cmp
cmpsb
dec
mov
lret
ret
sti
sti
test
shlb
outsb
call
sub
mov
loopne
loope
stc
jl
out
repz
mov
xor
out
sub
jnp
les
ja
es
in
mov
mov
add
insl
aad
sahf
xor
fisubl
cmpsl
call
arpl
out
push
stos
inc
pop
dec
sahf
lds
inc
in
inc
dec
mov
sbb
sbb
in
cmp
stos
adc
jbe
push
hlt
jno
dec
sub
and
ret
add
imull
push
add
pop
shlb
test
jnp
and
sti
fwait
sub
sahf
or
xor
mov
sbb
or
jo
into
test
inc
pop
testb
and
sub
loope
inc
jl
mov
pushl
cmp
hlt
xchg
orb
cmpsb
adc
into
mov
mov
out
in
popa
xchg
pop
and
dec
push
cmp
mov
in
pusha
test
cltd
xor
pop
out
xchg
and
pop
imul
dec
dec
mov
jne
std
add
lds
lret
cmpsb
mov
pop
xor
xlat
sub
dec
fucom
inc
push
dec
inc
das
xchg
gs
pusha
jae
ljmp
inc
cmc
ss
ljmp
cmpsl
addr16
mov
add
fcoml
out
mov
jmp
sbb
fstl
or
xorl
movsl
ljmp
mov
jne
stc
fsubs
pop
lret
scas
push
stos
pop
cld
movsl
cmp
mov
icebp
sbb
cwtl
lods
push
adc
divb
rclb
stos
ret
sbb
inc
cmpsb
stos
mov
mov
out
xchg
lret
or
pop
inc
ficoml
or
adc
int3
add
push
pop
xchg
xchg
sub
mov
and
jge
lahf
add
mov
fs
or
jns
loope
sbb
inc
int
insb
clc
mov
rol
pop
out
gs
pop
jmp
cmp
repnz
stos
sub
pop
or
mov
sbb
mov
pop
in
outsb
insb
std
pop
jle
jg
cmpsb
mov
int3
mov
cs
lods
pop
pop
ds
mov
movsb
imul
enter
push
fs
sub
rorb
push
lods
popa
testb
ss
imul
and
in
mov
jecxz
jbe
or
pop
movsb
jnp
sbb
add
or
out
lcall
int
les
bound
pop
cwtl
xchg
xchg
lcall
stc
and
cmp
cmp
adcl
fadds
inc
loop
xor
stos
push
fldt
add
xchg
mov
and
adc
ret
mov
in
movsl
ja
inc
dec
sbb
sub
testb
jecxz
pop
inc
lock
stos
push
sub
das
das
sti
or
aaa
outsb
adc
iret
push
mov
sub
pop
xchg
bound
xor
dec
sub
inc
in
stos
out
pop
pop
mov
loopne
in
sbb
pop
std
push
xor
ja
cld
or
aam
les
fidivrs
iret
cld
fcmovnb
lret
popa
mov
sub
insl
sbb
mov
or
nop
daa
sarb
loopne
pop
loope
jnp
ret
insb
mov
iret
lret
gs
jecxz
insb
sub
call
push
jnp
cmc
mov
setle
dec
int
jge
call
cmove
pop
ret
adc
loopne
sbb
into
enter
dec
jbe
mov
xchg
xor
out
cmp
mov
jle,pt
fcomps
pushf
sarb
add
movl
or
cld
and
insl
int
outsl
adc
int3
jae
mov
movsb
or
stos
fistl
sti
jmp
outsl
xor
jmp
mov
mov
mov
sbb
xchg
sbb
loope
mov
test
adc
fucomi
add
in
push
je
sub
test
fmul
int
jns
icebp
int
mov
fistl
xor
lcall
sti
dec
in
jmp
jmp
add
call
mull
out
dec
in
cmc
lret
negb
hlt
lea
xor
push
loopne
sub
stos
cmp
repz
cmpsb
aam
call
add
adc
push
popl
jbe
rol
mov
fstpt
ror
lret
movsl
cmp
sub
adc
mov
bound
push
push
pop
in
inc
xchg
std
push
sub
mov
inc
fldcw
inc
mov
add
lcall
or
cmpsb
lock
push
lock
sub
push
lods
xorb
icebp
and
push
addr16
into
push
in
jno,pt
pop
shl
inc
pop
sbb
push
dec
mov
mov
in
add
pop
movsl
mov
imul
mov
lahf
cmp
and
in
sbb
jg
push
xor
mov
push
push
add
shrb
loopne
jo
dec
pop
inc
cmp
call
aad
call
cmc
mov
mov
clc
adcl
out
stc
mov
pop
repz
ret
xor
adc
pop
in
nop
push
pop
sahf
xor
dec
and
add
mov
dec
adc
es
cmp
bound
in
inc
dec
or
push
or
inc
pop
movsb
into
in
repnz
mov
mov
pop
or
outsl
push
and
mov
inc
mov
jle
into
mov
hlt
je
les
repnz
cmp
or
hlt
cmp
out
xchg
jne
imul
adc
dec
fcomi
jge
cmp
pop
test
add
movsb
or
repz
les
xor
sahf
test
ljmp
insl
mov
sbb
loope
das
cmp
sub
mov
sub
fs
ror
mov
or
jmp
mov
pop
cmp
das
in
insl
push
mov
xchg
jno
ss
jp
arpl
cmp
js
adc
or
ja
inc
and
or
xchg
jge
sub
or
dec
jbe
inc
xorl
xchg
and
mov
add
pop
mov
dec
jecxz
dec
mov
inc
cmp
inc
test
nop
mov
sbb
jecxz
mov
xor
stc
xchg
jle
xchg
ja
cltd
repz
push
xchg
ljmp
test
iret
push
sub
fwait
sahf
jp
dec
inc
adcb
loopne
hlt
sbb
cmp
stos
movl
cmpsl
sbb
mov
insb
xchg
stos
pushf
push
push
sahf
mov
or
push
cwtl
scas
cmp
xor
rcrl
dec
and
xorl
xchg
daa
test
jb
jl
xchg
dec
out
xchg
dec
or
movsb
mov
jle
loop
and
inc
pusha
clc
arpl
push
rorb
and
out
jne
inc
jle
jle
mov
out
fldenv
imul
lret
icebp
pop
xor
jle
outsb
or
insl
fdivrs
sbb
mov
cltd
adc
imul
mov
fisubl
cmp
in
mov
inc
cltd
sbb
icebp
jbe
lods
add
jno
ljmp
inc
push
repnz
adc
push
cmp
subb
sub
adcl
adc
lea
jnp
mov
mov
xchg
stc
inc
pop
movsb
scas
dec
pop
icebp
repnz
mov
in
test
lcall
mov
ret
outsb
inc
in
scas
imul
ret
not
xor
cmp
cmc
sub
dec
push
push
mov
arpl
leave
jae
push
out
imul
popf
xchg
divb
adc
add
repnz
ja
mov
aad
rorl
jb
dec
xor
adc
cmp
or
sbb
hlt
and
ljmp
inc
fwait
mov
push
lods
ret
addr16
xor
in
pop
mov
pushf
jg
cmp
data16
popf
xor
pop
mov
cmp
iret
xchg
adc
ljmp
mov
jge
or
sbb
lret
add
mov
int3
adc
push
ss
adc
lock
pop
dec
mov
jno
out
mov
call
into
dec
sbb
fisttpll
aaa
cmpsl
dec
dec
imul
scas
push
ret
jno
push
mov
fsts
test
sub
in
lret
pusha
sbb
test
cmp
lcall
test
fs
push
mov
test
sub
or
inc
or
mov
loope
outsb
mov
sbb
pop
cmp
iret
pop
stc
fxam
mov
mov
inc
iret
faddl
add
int3
cli
pop
add
arpl
or
pop
and
jnp
fdivp
mov
jg
jnp
ja
cmp
cld
ja
fildl
add
push
inc
sub
xchg
xchg
pop
in
jmp
insb
xchg
repz
aas
sub
cmp
dec
xor
test
cmp
or
jnp
mov
or
push
pandn
lods
sbb
sub
icebp
test
mov
mov
data16
imul
push
hlt
or
mov
mov
bound
int
push
insl
sub
lret
jnp
pop
ja
lea
sarb
shlb
insl
pop
mov
cmp
xlat
movsb
addr16
xor
mov
in
cmp
push
inc
sahf
scas
jno
fcoml
push
call
fimull
arpl
and
movsl
ret
loopne
pop
sbb
mov
test
imul
addr16
sbb
inc
push
push
cmp
arpl
xor
clc
push
dec
rorl
shl
mov
and
add
arpl
iret
jnp
mov
or
addr16
mulb
nop
aas
mov
aaa
dec
adc
out
adc
push
int
test
or
movsl
hlt
mov
cmp
dec
aas
lds
incl
cmp
cltd
inc
pusha
inc
sbb
dec
pushf
pop
jnp
cmpsl
sti
add
mov
jb
mov
lret
jg
push
inc
lea
add
mov
fwait
mov
mov
in
test
imul
scas
xor
bound
test
push
ss
sarb
push
faddl
fcomps
push
xchg
pushf
and
sub
cmp
or
cli
inc
sub
lcall
jne
sbb
adc
test
lret
cmp
add
fxch
xor
lods
and
push
adc
fcmove
xchg
sbbb
or
cmp
mov
pop
add
mov
and
xlat
pop
pusha
roll
xchg
dec
inc
add
bound
imul
add
mov
push
and
arpl
jge
mov
aad
xor
call
pop
sub
push
inc
sbb
shlb
mov
push
push
jae
mov
dec
enter
xor
outsb
loope
pop
loopne
test
enter
xor
jmp
mov
adc
dec
jmp
inc
xchg
rolb
data16
lods
xchg
rclb
push
mov
push
cltd
call
into
pop
movsb
push
andl
pop
jns
repz
movsl
xor
pop
mov
adc
pop
pcmpeqd
mov
sbb
aas
jl
test
faddl
mov
jae
pop
push
test
js
or
sub
int
and
jns
cs
mov
aas
xchg
sbbl
scas
jns
das
jl
rcr
popf
mov
iret
push
fistpll
lods
inc
adc
mov
sarb
cs
sbb
gs
sub
cli
pop
xadd
xor
jmp
ret
dec
and
jl
clc
jae
movsb
xor
adc
hlt
pop
arpl
js
pushf
pop
fidivrs
movsl
gs
call
mov
inc
adc
dec
rcl
mov
pop
dec
mov
fucomi
daa
rcl
cmova
sub
ja
mov
jb
xlat
xchg
cmp
mov
ret
shrb
pop
das
xchg
jecxz
mov
std
push
cmc
sbb
ja
in
mov
mov
dec
shrb
bound
insl
mov
adc
dec
inc
mov
repz
fstpt
mov
test
jno
fs
fsubs
or
inc
add
xchg
xchg
pop
jae
gs
fcomps
fnstsw
stos
jns
push
mov
aas
fdivl
repnz
lret
addr16
adc
test
rcrb
add
inc
jmp
dec
cmp
sub
shll
mov
add
or
cs
inc
stos
xor
cmp
mov
jae
cmpsb
mov
dec
cmpsb
or
jne
int
adc
cmp
outsl
shrl
pop
xor
jp
mov
sbb
leave
cmp
scas
shl
or
jmp
nop
inc
dec
or
cld
inc
jle
outsb
sub
addl
negb
enter
jbe
lahf
adc
cmp
adc
rep
jg
jno
mov
add
xor
and
push
jl
add
adcl
es
sbb
leave
inc
in
xchg
mov
outsl
jnp
cltd
pusha
or
add
ret
call
leave
into
gs
testl
stc
inc
sub
call
mov
repz
shll
push
cltd
xorb
mov
cltd
repz
mov
or
or
shll
add
mov
or
cs
cmpsb
or
sbb
inc
cmpsl
mov
push
out
mov
push
pop
xor
or
pusha
adc
outsb
cmp
adc
xchg
xor
jno
xor
xor
jl
xlat
pop
add
xchg
mov
dec
cltd
xchg
push
cwtl
ds
popf
scas
stos
cltd
mov
nop
lahf
mull
std
add
sbb
mov
inc
pop
icebp
sub
loop
mov
dec
and
dec
fbld
adc
les
out
add
movsl
int3
cmp
xchg
jnp
loope
cmc
mov
in
inc
outsb
daa
mov
inc
xlat
xchg
add
cmp
loope
pop
xor
aam
dec
dec
fs
pop
test
ret
shlb
test
push
push
outsl
push
fsubr
dec
es
push
or
xchg
mov
in
pop
jp
add
lret
mov
or
inc
lret
outsl
stos
jmp
add
cmc
adc
pop
call
push
inc
rorb
dec
mov
hlt
cmc
ret
mov
addr16
pop
adc
les
mov
pop
adc
dec
rcll
int
lret
sti
movsl
dec
and
add
fisubs
into
and
repz
pop
xchg
mov
adc
push
bound
mov
int3
inc
mov
adc
jmp
ror
shll
mov
lods
inc
pushf
and
push
test
lock
and
jecxz
call
jecxz
sub
popa
mov
dec
cld
ja
inc
and
xchg
incl
out
fidivs
in
fisubl
adc
xchg
ja
popa
test
orl
jecxz
pusha
push
cmpsb
cltd
dec
mov
mov
push
xorl
negl
out
je
mov
dec
int
xor
sub
dec
aam
and
push
loope
lahf
jae
leave
aas
movsl
cmp
in
rcr
sarl
push
pop
or
add
push
cltd
xor
cs
mulb
icebp
push
nop
inc
sar
pop
daa
mov
cmpsl
in
xor
nop
push
icebp
clc
or
fadds
ss
xor
jecxz
add
arpl
and
sbb
mov
sbb
dec
dec
cli
pop
icebp
shll
mov
leave
pop
ret
repnz
cwtl
stos
idivb
aad
sbb
dec
push
jns
les
test
jo
jle
or
mov
fstpl
ds
repnz
rclb
or
mov
jp
lods
pusha
neg
int3
shrl
cmp
or
pop
push
xchg
sub
sub
rclb
sub
test
dec
mov
lret
pop
push
mov
jg
lods
rcll
bound
icebp
and
insb
insb
lds
pop
aaa
lahf
pop
dec
out
push
addb
xor
inc
clc
add
jmp
and
push
in
inc
stc
jmp
mov
lods
mov
out
jo
test
lea
fcomip
or
ret
jmp
pusha
pop
lea
jl
jle
add
mov
inc
xchg
cltd
pop
sarb
dec
pop
xchg
cmp
imul
lock
aam
stos
inc
cwtl
fs
mov
repz
fwait
jo
or
mov
pop
loop
and
add
out
lods
fisubs
shrb
push
incl
push
scas
enter
inc
xlat
dec
cmc
xchg
aas
push
cwtl
stos
xor
jne
scas
pusha
push
leave
jg
ret
ss
sbb
in
shrb
xchg
leave
hlt
out
test
cs
xchg
cltd
fidivs
dec
add
enter
sbb
ja
loopne
inc
in
repz
jns
jp
xor
aad
dec
les
cmp
xor
pop
xchg
loopne
sbb
hlt
mov
jo
push
ljmp
mov
inc
xchg
movsl
into
dec
mov
and
sbb
cmp
sub
es
out
shrl
fs
in
xor
aaa
mov
xchg
inc
orb
rclb
call
adc
xor
fisttps
test
sbb
mov
pop
push
pop
mov
dec
scas
push
aam
stc
inc
outsb
jp
pop
xor
mov
push
add
push
mov
sub
daa
lea
cwtl
cltd
jo
xor
rclb
adc
xor
inc
and
mov
and
and
lret
ficompl
inc
or
je
sbb
cld
aam
mov
sahf
mov
cwtl
imul
push
out
cmpsl
daa
ret
cmp
sbb
push
ret
lcall
push
mov
inc
xchg
xor
adc
jns
push
cmpsb
dec
cmpsl
inc
or
push
jle
push
push
out
in
popa
sbb
jb
nop
mov
inc
cmc
adc
and
imul
leave
push
sahf
lret
and
pop
and
cmp
iret
inc
out
addr16
or
jbe
fbstp
or
mulb
sbb
fimuls
mov
addr16
arpl
or
ljmp
pop
inc
xchg
jb
add
mov
dec
or
ss
mov
mov
pop
xchg
sbb
adc
mov
sbb
mov
mov
sbb
jmp
imul
cmp
push
outsl
cli
sub
sub
scas
dec
bound
xor
mov
stos
mov
or
test
mov
dec
lods
adc
aam
xchg
aad
cld
dec
scas
cli
cmp
rcrl
mov
pop
das
loope
adc
mov
les
notb
jns
sahf
jle
sbb
in
pop
add
or
sub
cli
into
xchg
adc
hlt
bound
popf
add
mov
out
pop
dec
jl
inc
sub
pop
cmp
insl
jecxz
rorl
in
fimuls
movsb
inc
addl
mov
adc
pushf
rorb
pop
mov
imulb
jo
jo
int3
jg
ljmp
mov
add
xor
sbbl
cs
pusha
adc
or
push
sbb
inc
inc
xchg
repnz
imul
aaa
into
pop
sbb
jl
push
or
sub
mov
lcall
scas
shlb
adc
mov
aam
mov
dec
iret
mov
push
dec
aam
mov
ljmp
es
pop
jmp
adc
rorl
push
stos
jmp
lea
add
aad
inc
fldcw
lret
sbb
shll
dec
mov
mov
xor
adc
jle
adc
lods
push
rcl
or
imul
sub
or
push
outsl
pop
loopne
bound
ljmp
push
mov
dec
shll
jae
mov
add
mov
pop
mov
and
xchg
in
icebp
adc
data16
das
inc
pop
inc
lcall
cwtl
sbb
adc
jnp
call
sub
cld
adc
jle
sbb
pop
fbld
int3
pop
xchg
fidivrl
and
pop
fistps
pop
lock
insb
push
loope
xlat
xlat
cmp
repnz
inc
fildll
iret
in
out
stos
mov
dec
in
stos
jge
and
stos
pop
cwtl
das
dec
mov
add
add
sbb
adc
lods
dec
jno
mov
or
clc
pop
inc
jbe
inc
cmp
out
pop
mov
xlat
mov
sub
addr16
es
daa
jb
rol
pop
adc
mov
jns
aaa
dec
and
mov
push
iret
loop
je
jecxz
lcall
sub
adc
inc
ljmp
push
insl
sub
rorb
sbb
sub
and
dec
into
jle
fsubl
jns
lea
sbb
lock
jmp
test
movsb
sbb
jne
bnd
sub
sub
lret
xchg
je
pushf
arpl
mov
xor
adc
aaa
clc
xchg
push
cwtl
jno
jge
or
dec
dec
shrl
dec
jp
daa
arpl
outsl
cmc
cmp
loope
test
fildl
sub
scas
ss
add
mov
push
push
mov
mulb
xchg
push
imul
insl
mov
and
sub
stos
mov
jg
xchg
xlat
jae
in
xor
stos
dec
cmp
jmp
lock
call
xlat
or
mov
add
scas
add
sbbb
test
cmp
xor
or
cmp
sbb
int3
icebp
inc
repnz
mov
lret
shlb
mov
std
xor
filds
pusha
out
out
lahf
mov
out
stos
ret
xor
fdivrl
stos
test
sub
jnp
aaa
jp
icebp
jnp
je
stos
orb
scas
lock
xchg
sub
idivl
lods
pop
roll
out
sbb
push
xchg
xlat
mov
jbe
aas
scas
leave
int
jo
sbb
dec
xlat
lock
clc
mov
mov
or
or
int3
adc
pop
adc
xchg
fisttpl
pushl
lahf
jo
pop
xchg
jne
and
ss
fbstp
aam
popf
shrl
adcb
pop
sbb
lret
xor
inc
repnz
mov
sub
mov
jp
push
lods
popa
arpl
mov
add
jb
mov
mov
mov
inc
sbb
cld
xor
test
xchg
mov
ljmp
xor
pop
jecxz
in
adcl
ficomps
or
or
sub
mov
or
push
sub
adc
test
ljmp
xchg
xor
xchg
push
push
ret
or
shlb
add
pop
in
xor
sub
mov
pop
in
pushw
out
insb
pop
jb
sub
lea
inc
bound
jo
lds
popf
and
fs
adc
cmp
jp
jnp
pop
fisttps
mov
inc
jnp
adc
incb
xchg
inc
mov
fs
loopne
xor
lcall
movsb
inc
add
xor
sub
sub
mov
roll
jl
setns
adc
mov
or
jl
fdivl
xchg
and
adc
ja
pushf
or
sbb
test
bound
rcll
iret
test
mov
inc
add
sbb
pop
jb
je
lretw
mov
into
stos
std
adc
into
fiaddl
cmp
or
jnp
popa
and
adc
xlat
ja
pop
outsb
int3
les
sub
cltd
mov
cli
dec
outsb
jo
es
loope
sub
inc
adc
enter
inc
jbe
mov
xor
add
cmp
push
inc
fimull
push
gs
pop
icebp
dec
add
xor
push
fwait
add
push
push
imul
push
cmpsl
mov
sbb
jp
sbb
jl
pop
mov
xchg
in
push
cs
lahf
ss
repnz
dec
adc
mov
inc
stos
xor
ss
pop
outsl
jmp
push
dec
fdivrs
and
sbb
addr16
clc
jb
shll
pop
mov
inc
in
aam
lea
mov
nop
pop
outsb
test
push
popa
push
call
cmc
dec
stos
scas
shl
les
movsb
cmp
cwtl
es
movsb
arpl
mov
mov
inc
call
inc
mov
pop
and
andl
dec
pop
ss
push
repz
adc
mov
out
inc
js
or
cmp
push
hlt
cmpb
std
call
inc
mov
sbb
mov
pop
movb
test
aad
add
cwtl
mov
xchg
mov
in
fs
adc
and
mul
adc
mov
aas
sub
ja
mov
pop
mov
jnp
enter
push
xor
ss
lret
xchg
int
dec
push
es
fdivs
sbb
call
add
sbbl
mov
pop
dec
add
mov
jo
push
jne
inc
fwait
or
dec
push
and
outsl
mov
dec
int
shlb
stos
loope
arpl
mov
test
jno
sub
cld
xchg
adcl
pop
enter
jae
out
push
fwait
xchg
out
insl
popa
inc
add
push
cwtl
das
test
cmpsb
out
sti
add
fwait
mov
jmp
loope
lret
jns
cmp
adc
push
das
and
fs
sbb
ret
or
jo
push
aaa
mov
cmpsb
rolb
pop
sbb
enter
imulb
pop
mov
je
or
mov
cmpl
bound
aad
in
add
dec
sub
rolb
mov
aam
push
mov
mov
out
or
sbb
push
cmpsl
sub
mov
pop
decb
ret
cmp
pop
inc
lcall
dec
push
out
popf
add
std
adc
les
lret
mov
ret
mov
pop
mov
icebp
aad
lahf
subl
pop
mov
or
inc
jp
mov
xor
pop
inc
jge
add
lcall
sbb
or
and
jb
push
ret
inc
dec
xor
loopne
push
repz
pop
sahf
sbb
movsl
adc
adc
mov
and
push
mov
into
sub
stos
sbb
lret
cmc
mov
dec
movsb
data16
sahf
jnp
sub
pusha
repz
jmp
es
push
in
fdivrs
push
popa
ret
xchg
gs
or
fistpll
gs
xchg
pushf
dec
xlat
test
stc
push
fnstcw
addl
je
stc
sarl
cmp
adc
nop
add
sub
into
sbb
mov
les
add
outsb
hlt
lock
mov
xchg
jae
jb
shrl
pop
rclb
out
inc
adc
in
jnp,pt
inc
mov
mov
int3
icebp
inc
fisubrs
int3
dec
pop
int3
or
in
mov
jo
imul
fbld
cmp
in
cld
dec
inc
aam
jne
sub
push
inc
int3
stc
jp
shll
ja
mov
xor
lds
int3
mov
sub
adc
push
push
sub
lds
jecxz
mov
adc
mov
dec
or
divl
in
aam
fwait
cmpsl
jo
ret
xchg
mov
ljmp
mov
push
mov
subl
rorb
jae
lea
shll
xchg
push
daa
lsl
or
jl
scas
xor
hlt
cmp
insl
push
xchg
insl
cmp
mov
out
and
sub
outsb
mov
xchg
sbb
dec
rol
shll
xor
lcall
scas
push
mov
push
lcall
push
es
fsts
mov
clc
mov
fidivrs
sub
dec
gs
jns
inc
add
cmp
testb
mov
push
push
out
mov
lock
in
lcall
mov
xchg
mov
pop
xor
xor
jne
dec
push
push
jno
shrb
pop
jl
cmpsl
scas
jb
or
shll
inc
arpl
aad
bound
xorl
sbbl
push
inc
push
pop
pop
out
outsl
push
scas
test
inc
int3
and
test
and
mov
and
shlb
inc
add
add
gs
lcall
shrl
enter
loopne
sub
pop
notb
xor
scas
loop
pop
add
xlat
push
add
data16
ficoml
in
std
inc
xor
inc
pop
sbb
fldenv
sti
loope
jmp
pushl
xchg
frstor
iret
pop
into
xchg
or
daa
adc
jb
inc
mov
into
or
jbe
or
outsl
dec
jecxz
in
add
mov
push
xor
or
movb
insl
xchg
pop
rclb
imul
cld
iret
mov
cld
btc
call
or
mov
mov
sbb
lcall
add
iret
aad
inc
cmc
push
repnz
outsl
add
addb
shlb
adc
cmp
mov
hlt
inc
sbb
cli
test
in
cmp
add
rorb
inc
mov
imul
and
pop
mov
pusha
ficomps
mov
aaa
sub
xor
add
popa
mov
and
push
movsl
out
push
mov
lock
push
scas
cmp
jmp
jbe,pt
xchg
jle
test
iret
mov
loopne
sub
lea
add
jnp
test
mov
insb
rolb
out
jb
ret
pop
xorl
mov
mov
pop
mov
sbb
inc
push
aaa
push
stos
out
flds
in
cwtl
add
adc
div
setbe
ror
inc
and
std
loop
das
jno
pop
popf
mov
imull
into
sbb
add
in
cld
lock
jbe
sbb
daa
jle
scas
and
lds
sbb
sahf
clc
cmp
xor
or
or
das
call
jb
sub
push
frstor
lds
sub
mov
aas
mov
adc
push
inc
lret
cmpl
mov
pop
cs
hlt
mov
fidivrl
adc
repnz
push
out
and
pushf
xor
repnz
or
pop
out
sub
mov
sub
fidivrs
icebp
loop
into
xchg
jle
out
add
mov
rcrl
push
jbe
adc
arpl
sbb
mov
push
movsl
mov
sbb
sti
adc
cmp
out
inc
and
ror
xorb
daa
repnz
jmp
pop
pushf
xchg
xchg
mov
sbb
call
fldenv
xchg
aaa
xorl
push
push
mov
rcrb
push
hlt
fs
push
xlat
xchg
cmpl
jb
das
add
jmp
arpl
xor
jne
fbstp
insl
sbb
nop
testb
lahf
lods
adcb
mov
xor
test
mov
jbe
push
and
cmp
push
out
xor
call
cmp
int
mov
mov
adc
sub
cmp
pop
cmp
sbb
in
push
je
jne
and
int
push
lret
lock
and
lret
cli
icebp
jnp
sub
xchg
and
sbbb
adcl
xchg
mov
aas
lret
and
mov
cli
daa
xor
fwait
out
arpl
std
mov
pop
inc
mov
gs
clc
hlt
or
push
cli
dec
xor
adc
and
aaa
stos
jae
sbbl
pop
sbb
pop
sbb
push
imul
sbb
or
adc
add
in
dec
pop
xor
xor
pop
dec
mov
pop
call
ljmp
std
inc
nop
pop
scas
shrl
push
insl
inc
inc
pushf
inc
jbe
out
test
popf
or
test
lds
js
movsb
out
daa
jo
rclb
pop
imul
cmc
xor
arpl
ret
test
cmc
repnz
leave
or
jnp
fwait
testl
test
ret
xor
lods
mov
testb
mov
mov
lret
cmp
pop
nopl
mov
sti
sbb
loope,pt
cmp
dec
aam
sbb
push
idivb
jo
cmpsb
sub
jge
or
cmc
orl
dec
jg
adc
or
jl
repnz
ret
push
leave
mov
fstpl
and
daa
mov
mov
push
movsb
rcrb
repz
insb
sbb
popl
daa
adc
push
and
repnz
xchg
movsb
jnp
rcl
xchg
sub
xor
outsb
adc
jae
outsb
sbb
fwait
adc
jno
jnp
repnz
imul
rcr
cmp
inc
mov
add
das
dec
rcr
jno
lods
clc
xchg
mov
sbb
jb
ret
mov
decb
mov
adc
xor
jmp
enter
adc
sub
movsb
orl
xchg
lock
mov
push
aad
lock
into
sbb
jo
imul
or
and
cmp
mov
cmp
mov
dec
adc
ficompl
jge
sarl
add
add
lahf
pop
and
xor
add
xor
pop
lret
es
mov
or
lods
ret
sbb
ret
rclb
push
and
pop
divb
in
add
inc
mov
lods
xchg
js
add
ret
sub
pop
fbld
pop
xor
adc
sarb
jno
push
jbe
iret
inc
fimuls
jbe
pop
or
daa
inc
test
push
add
jge
repz
out
inc
ret
adc
jae
dec
and
dec
inc
popa
dec
pusha
mov
lods
jmp
adc
sub
aad
das
testb
cmp
add
inc
or
scas
fimuls
cmp
and
and
push
cmc
mov
test
mov
out
cmp
mov
pushf
addr16
sbb
xor
popa
fs
adc
call
inc
flds
cmc
adc
jmp
sbbl
push
mov
fs
enter
mov
fbld
jecxz
push
pop
sub
ds
repz
icebp
sbb
inc
jp
mov
fistps
movsl
outsb
cmc
loope
insb
push
cmp
out
mov
pop
or
mov
shlb
mov
shll
rcrl
sub
mov
insb
inc
in
pushf
cmp
dec
add
pop
jns
shrl
mov
ss
mov
adc
mov
movsb
mov
pop
adc
sti
xchg
imul
jb
sbb
sbb
xchg
mov
stos
stos
cmp
data16
pop
dec
adc
xor
push
pop
adc
lret
aad
push
xchg
mov
dec
mov
stos
sbb
dec
lock
mov
pop
sarb
inc
in
dec
mov
pop
cmpsl
push
imul
xchg
mov
pop
push
adc
test
jecxz
popf
fmull
jae
pusha
je
dec
and
cmp
sbb
xor
cli
pop
ljmp
mov
mov
jg
ja
pop
adc
sbb
xchg
pop
mov
lods
xchg
add
pop
xor
repnz
test
mov
push
jbe
lock
mov
and
rcrb
push
andl
loop
in
pop
adc
mov
stos
data16
mov
jmp
imul
ret
xor
test
repnz
int
sub
jp
mov
adc
sahf
inc
int3
push
bound
and
xor
pop
je
fdivrl
mov
in
cli
xchg
out
cmp
std
andl
fistps
jmp
rorb
fsubs
mov
aam
and
adc
pop
mov
pop
pop
rorb
sbb
sahf
dec
pop
std
lret
lahf
jno
int
xchg
orb
je
and
nop
cmp
orl
movups
mov
shlb
push
imul
gs
fsubr
testb
outsb
sahf
out
inc
lcall
loopne
and
les
adc
shlb
mov
sub
test
xor
sbb
aad
cmp
fs
xchg
jmp
fucomi
cmp
inc
inc
xor
pop
dec
cltd
pop
adc
addr16
adc
fcmovne
or
roll
pop
fwait
dec
push
in
imul
aaa
jb
ret
push
or
xor
mov
xor
jg
xchg
mov
lcall
sbb
into
addr16
add
inc
sub
pop
dec
xchg
jmp
or
rorb
scas
fsts
xchg
loope
lds
call
push
add
int
pop
mov
jecxz
pop
fs
xchg
push
es
push
repz
cmpsl
test
fimuls
divl
sub
mov
stc
xor
js
cmp
clc
mov
or
push
jb
pushf
xor
outsl
xchg
push
out
or
push
divl
pop
mov
int3
pushf
xor
outsl
sbb
shrl
mov
icebp
dec
lods
jb
pushf
mov
or
cmp
mov
mov
movsl
adc
and
int3
enter
add
mov
pop
mov
or
rorl
sub
rcr
leave
jno
add
das
outsl
rclb
jg
fxch
test
sti
jecxz
pop
les
sub
pop
popa
and
stos
hlt
cwtl
cmp
adc
fdivrs
add
sbb
aas
aas
mov
stos
test
sub
aaa
xchg
xchg
cli
shl
jle
sbb
jmp
roll
in
dec
inc
fisttpll
aas
push
jge
jae
jg
sahf
lods
inc
sub
sub
xorl
cmpsl
sbb
sbb
inc
imul
mov
jno
fwait
mov
outsl
ret
aam
jmp
out
jne
and
xchg
add
pop
mov
stos
jne
movsl
adcb
sbb
pop
and
or
or
push
int
mov
xchg
rol
pop
pop
mov
in
out
imul
mov
push
jg
dec
sub
loopne
mov
push
add
jge
aad
stc
popf
dec
or
or
in
push
pop
sbb
call
sbb
and
arpl
xlat
jmp
dec
std
lret
mov
les
jae
ds
jo
clc
fucomp
inc
shrb
or
shrb
sbb
gs
xlat
shlb
mov
enter
nop
pop
cmp
push
jo
cmp
pop
fucomp
push
cmp
sbb
dec
xor
loop
pop
cmc
dec
add
mov
inc
jl
xchg
push
in
mov
sub
les
push
insb
lock
cltd
add
scas
push
call
adc
jo
sub
insl
orl
add
xchg
xchg
mov
push
pop
or
repnz
mov
fcomps
iret
enter
xor
mov
fcompl
adc
sbbl
int3
mov
popa
pop
cs
mov
add
in
shrl
rcl
cld
inc
bound
js
bound
cltd
mov
out
lods
and
push
in
jl
cwtl
dec
mov
push
movsl
cmp
es
into
dec
jbe
cs
pop
sub
add
xor
or
push
xor
mov
add
int3
mov
hlt
mov
xorl
xor
rcrl
or
push
xor
cmp
imul
and
xchg
push
mov
xchg
lock
sbb
add
mov
ja
loope
cmp
dec
or
shlb
push
inc
xchg
add
mov
mov
jg
inc
call
cmp
xor
lods
dec
push
mov
adc
fyl2x
push
hlt
jno
es
sahf
sub
iret
mov
dec
jecxz
and
imul
shrl
xchg
popf
jbe
shlb
mov
jmp
aaa
mov
mov
push
js
movsl
mov
clc
push
in
add
or
pop
call
or
jns
clc
inc
arpl
mov
xchg
call
fstps
stc
stos
push
insb
jns
rol
pop
add
mov
xchg
mov
fwait
add
mov
stos
pop
into
mov
test
rcll
mov
adcl
mov
push
movsb
mov
ret
int3
leave
sub
sbbl
dec
inc
sarb
cmpsb
inc
xor
pop
mov
loopne
xchg
adc
adc
lods
inc
inc
xor
jno
mov
rolb
jae
scas
and
scas
aas
push
loopne
mov
mov
pop
cld
xchg
ret
pop
negl
frstor
fs
xchg
inc
pusha
jge
call
push
popf
adc
int
or
xchg
outsl
sbb
add
dec
aaa
mov
mov
sar
xchg
add
std
mov
sbb
loopne
adc
mov
pushf
push
push
in
outsl
mov
fnstsw
add
je
sbb
std
mov
das
dec
push
rclb
je
jge
sahf
lcall
and
and
lods
rolb
mov
adc
rcrl
test
aad
pop
in
cmp
out
pushf
adc
push
add
and
fidivrs
pop
pushf
cwtl
mov
dec
leavew
jge
stos
lods
loop
cmpb
enter
pushf
push
mov
jae
sbb
push
pop
outsl
adc
sbbb
dec
leave
add
cs
cmp
inc
sbb
dec
pop
int
cltd
clc
xchg
outsl
cmp
mov
add
call
pop
jnp
stos
cmpsb
out
dec
adc
stos
cwtl
fwait
xor
call
mov
mov
std
mov
xor
sar
jge
inc
push
and
shll
dec
jae
jae
test
dec
outsb
aas
movsl
nop
lods
mov
push
sti
fsts
xor
sub
test
cmpsl
sub
add
dec
fs
dec
xchg
inc
scas
imulb
idivb
lret
fiaddl
ficomps
fidivl
enter
push
and
out
push
cli
jne
dec
hlt
mov
sbb
xor
pop
popf
fdivs
scas
call
fnsave
adc
mov
inc
push
cmpsb
add
icebp
inc
xor
shl
pop
loopne
fdivl
stos
fprem
aaa
pop
roll
je
add
xchg
jge
and
jg
dec
pop
add
xchg
sub
sub
jne
sbb
ja
mov
or
jo
mov
xor
add
dec
pop
push
imul
inc
fs
cmp
mov
push
scas
out
std
add
mov
jmp
les
xlat
ret
lahf
ret
xchg
mov
or
push
inc
pop
jae
movsb
and
mov
int
mov
ljmp
adc
outsl
andl
icebp
xchg
hlt
aam
dec
aaa
cmpsl
std
push
cltd
mov
jl
jmp
mov
mov
mov
xchg
inc
dec
lahf
cmpsl
cs
cld
stc
popa
sub
in
push
in
clc
or
adc
sbb
mov
in
adc
test
mov
jo
push
mov
pop
arpl
out
jge
or
mov
int3
lret
imul
cmpsb
sbb
mov
into
jne
loope
clc
fnsave
add
sub
inc
mov
xor
xchg
push
inc
sbb
roll
sub
mov
stos
fnstcw
mov
mov
push
fstpl
or
dec
lods
pop
mov
lret
mov
cs
dec
and
popf
pop
mov
mull
repnz
mov
cld
aam
mov
test
xor
cli
cmp
and
sbbl
mov
jns
clc
push
pop
sub
adc
pop
scas
mov
insl
or
dec
fstpt
loope
xor
cmp
mov
dec
rcl
or
bound
jmp
xchg
icebp
mov
imul
add
test
lock
mov
cmp
mov
mov
scas
push
xlat
ffree
pop
iret
call
bound
xor
adc
lods
push
into
and
dec
push
jnp
sarb
frstor
fists
pop
mov
cmp
pop
repnz
pop
jns
push
mov
sub
xorl
mov
mov
in
int3
dec
ss
nop
inc
and
jb
xchg
clc
sub
stos
xchg
test
out
pop
out
adc
leave
lcall
jbe
stc
es
sbb
ljmp
mov
dec
jge
dec
and
inc
adc
pop
sbbl
or
xchg
and
push
aam
xor
sti
cmpsb
insl
imul
stos
les
cs
xchg
mov
and
mov
sarb
lods
test
testb
mov
dec
testb
das
mov
adc
ljmp
das
cmp
fwait
dec
and
mov
roll
scas
ljmp
testb
cmpsl
std
lods
or
dec
dec
pop
inc
cmpsb
out
leave
dec
mov
push
inc
in
std
cmp
aad
mov
in
pop
popa
pop
cmp
and
push
hlt
jns
jecxz
pop
cmp
stos
shrl
pop
aad
mov
jns
lret
cmp
xor
sub
cld
push
cmp
pusha
mov
adc
inc
or
in
add
sbb
jb
mov
sbbb
cmpsb
push
fmul
sub
popf
cli
lods
inc
adc
cmc
leave
xor
push
in
sbb
iret
xchg
shr
call
mov
fisttpll
sub
mov
or
dec
dec
jmp
inc
dec
pushf
mov
xchg
add
cmp
and
inc
xlat
add
imul
fcmovnb
pop
push
lock
or
push
cmpsb
adc
nop
lret
mov
les
push
sti
test
and
dec
push
mov
fwait
loop
out
dec
pop
cmp
dec
icebp
jnp
sbb
push
pop
addr16
add
push
lock
lahf
add
dec
adc
xchg
cwtl
pop
fwait
loopne
adc
or
cli
push
pushf
sub
subl
jge
fisttps
jb
add
lret
pop
xor
cli
shll
fisubrs
mov
lcall
jns
das
xchg
sbb
mov
pop
add
inc
lcall
imul
xorl
cld
mov
dec
es
cmp
mov
push
insb
push
movd
inc
gs
add
inc
dec
jnp
int3
pop
mov
fbld
call
dec
les
sbb
sarb
out
pop
pushf
inc
fimuls
pop
dec
in
pop
sub
jns
popf
notb
dec
sub
test
sti
lock
cmp
pop
stos
xchg
ja
mov
sbb
mov
scas
ret
arpl
sarl
int
fildl
ljmp
jg
aaa
xor
aaa
pop
lret
dec
xchg
dec
loop
cmc
lcall
into
xor
adcl
mov
add
fisttps
mov
in
inc
xlat
lods
inc
or
insb
push
jle
imul
das
aam
ja
cmp
in
xchg
mov
inc
cli
aas
push
js
pop
jecxz
out
aad
daa
pop
jnp
or
fwait
push
or
inc
out
adc
cmp
mov
xorps
roll
xor
mov
lret
xchg
pop
in
dec
and
into
xchg
xor
cmp
push
stc
cmp
out
push
ret
inc
popf
ja
insl
add
test
mov
mov
and
and
cs
mov
push
or
sbb
mov
inc
mov
popf
cmpsb
aas
jg
mov
jnp
jl
push
lahf
sbb
jb
xor
in
sti
lds
inc
scas
pop
in
cli
call
add
and
fucomip
icebp
js
aam
divb
and
mov
sub
ja
lahf
push
call
push
out
outsl
loop
test
in
dec
fcompl
cmp
data16
adcb
pushf
and
push
pop
and
nop
insl
xchg
stos
push
push
out
pop
mov
insb
jl
aaa
sub
xor
andb
mov
push
inc
push
lret
int
sub
pop
std
xchg
xchg
popf
mov
je
pusha
xchg
daa
fldcw
movsl
cmp
imul
nop
mov
cmp
xor
sbb
push
in
push
lods
sbb
mov
loop
lcall
fwait
sbb
jecxz
jnp
aaa
int
xchg
or
bound
xor
dec
fsubrl
iret
ret
in
scas
cmp
test
mov
push
sbb
bound
jg
repnz
movsl
movsb
rcl
push
jecxz
dec
or
inc
in
ficoml
dec
sub
insl
and
add
mov
push
addr16
ljmp
mov
outsl
xchg
and
lds
inc
lods
aad
mov
dec
scas
les
dec
pop
cmpl
dec
loope
jnp
es
cmp
push
and
pop
test
dec
mov
test
out
cld
push
mov
popa
mov
mov
mov
dec
aad
jae
mov
dec
and
mov
xor
dec
push
pop
ja
xchg
repnz
jmp
aaa
in
aad
mov
fldcw
xor
hlt
push
sahf
jmp
fucomp
lods
xor
mov
hlt
lcall
inc
adc
imul
sti
xlat
movsb
jno
pusha
dec
mov
or
inc
push
dec
hlt
dec
xlat
add
pop
lcall
jne
fwait
shlb
xor
bound
test
or
sub
scas
sub
add
aaa
rclb
lcall
push
jns
add
imull
aam
sahf
add
add
jnp
leave
adc
inc
sub
xor
addr16
mov
inc
mov
repnz
pop
lea
mov
adc
cmp
mov
in
ljmp
cli
and
push
add
inc
lds
bound
cmpsl
ja
pop
cmp
cwtl
mov
dec
xor
sbb
cwtl
add
mov
outsl
sbbl
mov
add
sbb
cs
dec
cli
test
iret
sub
cmp
imul
sub
mov
aaa
out
pop
jl
mov
lret
scas
xchg
fisttpll
dec
mov
inc
cmp
jmp
mov
jo
xchg
cmpsl
xchg
sbb
fs
jne
jg
add
sub
nop
sub
xor
cmp
add
cmpl
gs
adc
push
and
mov
outsb
int3
dec
ss
aas
sti
xchg
mov
and
inc
dec
popa
iret
inc
push
shll
pop
insb
notb
xlat
test
push
fisubrs
das
add
out
out
adc
push
insb
mov
mov
out
mov
dec
ljmp
adc
jne
ds
mov
pop
add
push
sub
and
cmp
pop
ret
sbb
jmp
xchg
jbe
pop
call
adc
cmpsl
mov
popa
inc
lret
mov
or
fnsave
adc
lods
call
pop
push
jmp
mov
add
and
push
pusha
rcrl
add
fwait
sbb
ja
or
cmp
push
sub
mov
push
xor
sarb
js
scas
jb
add
cmp
lahf
lea
mov
pop
add
sub
push
add
inc
sub
inc
jmp
or
lods
jg
sub
loop
out
daa
jne
shlb
lea
leave
stc
mov
jne
stos
sub
xor
pop
push
mov
inc
push
stos
insb
test
test
divb
and
and
add
mov
dec
ds
sub
cmp
test
dec
adc
icebp
sbb
es
outsb
loope
int
xlat
insb
data16
dec
adc
pusha
cwtl
insl
sbb
pop
std
pushf
int
addr16
decb
and
ret
nop
mov
or
jle
mov
jp
mov
imul
test
psubq
pop
fdivs
jmp
lret
push
insl
sub
push
in
xorl
mov
packssdw
outsl
movsl
lods
jmp
sub
stc
into
cmc
sub
fdivl
fiaddl
push
testl
pop
out
js
cmc
inc
sahf
mov
push
mov
cmp
stos
pop
test
add
ljmp
sbb
mov
jg
inc
mov
add
and
push
fwait
lea
xor
cmp
mov
mov
sub
aas
imul
nop
ret
sub
test
mov
mov
cmpps
jno
pop
out
sbb
inc
mov
outsl
cmp
jbe
mov
test
sbb
or
test
xchg
dec
mov
ds
ja
rorl
pop
xor
popf
call
add
pushf
dec
push
pop
std
xor
jnp
sbb
ja
iret
aad
push
repz
jnp
jmp
fmull
dec
mov
std
imul
jns
fbstp
fs
jno
dec
xchg
frstor
mov
pop
bound
clc
dec
mov
shlb
popa
and
pop
cli
add
jo
addr16
mov
pushf
test
xor
scas
call
ljmp
mov
and
push
xor
aad
fwait
pop
dec
loopne
jnp
dec
inc
xor
pop
out
dec
call
in
loope
pop
addb
jl
ret
sub
xchg
add
add
fs
add
xor
jmp
dec
int
adc
loop
popf
int
xchg
dec
cltd
and
out
add
gs
xlat
inc
mov
pop
push
mov
shl
popf
jp
adc
push
push
pop
jae
jnp
movsb
mov
xor
dec
pop
mov
ret
in
aam
lahf
mov
jge
mov
cltd
dec
stos
in
loopne
mov
lret
into
lds
or
nop
iret
xor
repz
lods
test
enter
je
out
sahf
jne
dec
mov
sub
pop
fs
pushf
pop
sbb
gs
sti
xchg
pop
lds
fidivrl
push
jo
dec
pop
push
mov
lods
sbb
or
psrad
fcomps
pop
push
xor
mov
out
repz
add
xor
fiaddl
adc
andb
setno
lret
orb
mov
mov
push
add
loopne
mov
push
cmp
adc
inc
loop
pop
jne
pop
cmp
xchg
bound
dec
jecxz
jns
pop
push
out
xchg
cltd
mov
add
mov
mov
sbb
adc
scas
mov
test
and
sbb
inc
mov
sub
pop
mov
aam
ret
sarl
subb
jno
dec
sbb
jnp
jl
xor
sahf
or
or
out
addr16
scas
dec
inc
mov
mov
xor
pop
xorl
jle
fwait
push
xchg
inc
cmpsl
push
in
aaa
cmp
mov
int
subl
lods
in
mov
je
xchg
movsl
subl
cmp
fisubrl
repz
stos
in
mov
jmp
andl
scas
cli
sbb
repnz
stos
cltd
imul
int3
jne
dec
nop
in
gs
adc
xchg
loop
addr16
inc
movsl
lds
mov
mov
jne
push
mov
mov
jns
pusha
aaa
push
fwait
shrl
inc
sub
pop
pop
movsl
ret
aas
pop
bnd
movsb
add
int
add
push
xchg
gs
pshufw
rcll
jno
std
into
gs
xabort
mul
in
stos
out
xlat
mov
packuswb
pop
lods
rcl
jb
and
pop
bnd
ds
out
out
clc
pop
jne
mov
inc
pop
xor
pop
mov
mov
ret
outsb
sub
insb
cs
fcomps
xor
andb
je
adc
xor
fadds
lcall
cwtl
or
inc
out
test
pop
icebp
or
jle
pop
push
sub
movsb
mov
jmp
es
les
xchg
lods
rorb
inc
mov
outsl
pop
inc
pop
mov
pop
push
and
dec
and
pop
inc
inc
adc
pop
aaa
xchg
popf
ds
mov
jge
cld
push
xchg
mov
addr16
inc
nop
dec
mov
lahf
stos
test
push
fistpll
insb
mov
stos
pusha
sub
aaa
dec
inc
popa
dec
xchg
inc
lds
or
mov
pop
loop
cmp
push
push
mov
xorb
int
jl
or
mov
dec
sub
mov
pusha
cmp
sbb
cld
lea
push
rol
stos
jmp
das
lahf
ss
call
mov
lock
movsb
adcb
dec
mov
cmp
fnstenv
stos
push
popf
fdivl
inc
std
andb
xlat
dec
out
int
jo
mov
push
and
jae
lods
push
cmp
cmp
lcall
mov
loop
or
adc
fwait
xor
push
sqrtps
lret
mov
out
and
xchg
scas
scas
mov
insl
mov
sbb
or
cmpsl
add
pusha
pop
sahf
mov
jo
xlat
fsubrp
pop
cmp
xor
ss
mov
push
out
inc
movsb
std
xor
fnstsw
arpl
out
add
xchg
dec
sarb
jmp
movsl
in
movsb
lcall
mov
dec
mov
mov
rol
or
and
fs
jg
pop
fldl2t
out
fiaddl
stos
daa
scas
rcr
dec
fbld
cli
jecxz
mov
out
xchg
sub
dec
pop
xchg
adcb
mov
lcall
xchg
add
fwait
xor
out
inc
inc
push
adc
scas
pop
jg
jae
aas
sbb
and
jns
cmp
inc
mov
fmulp
or
mov
sbb
dec
ja
jmp
out
mov
push
fs
loopne
xchg
jle
fdiv
lds
cmp
jbe
dec
lock
loope
out
jle
test
xor
in
dec
pop
imul
stc
push
cltd
test
and
das
ret
push
adc
adc
cs
push
incl
pop
xchg
mov
popa
inc
arpl
les
mov
mov
dec
mov
pop
dec
popa
in
popf
aas
pop
repnz
inc
gs
and
inc
in
mov
inc
outsl
and
mov
mov
adc
lret
xlat
push
daa
sbb
mov
mov
sbb
cmpsb
lock
xchg
xchg
and
ljmp
aas
aas
push
repnz
movsb
cmpsb
arpl
pop
jae
sub
sbb
lds
aam
mov
xlat
out
rclb
test
test
mov
pop
dec
enter
lods
dec
lds
inc
daa
mov
adc
cmp
pop
iret
mov
mov
adc
xsha256
cmpsb
adc
clc
divl
sub
or
cltd
adc
and
jg
enter
lret
dec
dec
mov
pop
dec
add
mov
popa
in
in
inc
mov
mov
sti
dec
xor
jae
sti
mov
ljmp
sub
mov
sbb
and
lods
xlat
into
in
dec
decl
push
pop
rcl
sub
stos
aad
sbb
ds
cs
adcb
dec
adc
stos
inc
cmp
ljmp
or
dec
mov
jne
jb
or
scas
pop
out
fistps
adcb
je
and
or
sbb
mov
inc
pusha
pop
push
sahf
adc
movsb
jne
push
decb
jnp
adc
mov
cwtl
popa
popl
aad
mov
pop
insl
adc
ret
out
adc
lcall
out
jne
jmp
cmp
cmp
movsb
inc
popa
in
mov
mov
add
cli
fbld
popa
enter
push
arpl
add
push
sub
call
cmp
in
call
sub
icebp
rclb
lea
dec
xor
mov
pop
fdiv
fmul
in
jb
shrb
in
ja
fcmovbe
push
xor
push
arpl
repz
xlat
mov
idivl
pop
icebp
jne
scas
jb
xchg
gs
in
jg
add
sarb
iret
ja
into
mov
cwtl
push
mov
mov
cmp
mov
sub
xor
lods
inc
jle
pop
dec
push
xor
mov
pop
mov
mul
mov
cs
or
subl
sbb
add
les
mov
jne
xlat
fbstp
xchg
pop
and
jbe
push
mov
cli
push
inc
movsl
cmp
cli
clc
pop
test
int3
cli
push
lret
mov
xchg
loope
xchg
push
loop
addr16
roll
rcll
jne
js
hlt
sbb
push
sub
xchg
cs
pop
insl
loop
mov
pop
pushf
pop
mov
loop
adc
jb
cmp
dec
andb
inc
mov
fldt
mov
in
adc
pop
loop
pop
adc
ret
inc
pop
or
dec
adc
push
jno
push
cmp
push
fnsave
test
cmpsb
mov
into
xchg
ret
push
js
or
lock
dec
into
sub
aas
out
loopne
vmovlps
lret
es
test
xlat
jmp
fiadds
insl
insb
sub
fistl
popf
sub
push
push
add
dec
push
pushf
mov
sub
sbb
lods
lods
lock
xchg
in
ja
sarl
pop
mov
repnz
xor
sbb
aad
lcall
push
stos
fidivrs
inc
jmp
push
jo
mov
jecxz
iret
pop
rcrb
clc
inc
mov
jl
sbb
popf
xor
scas
mov
cmpl
ret
fs
repnz
dec
jns
out
jecxz
add
xchg
jae
xchg
imul
sbb
add
mov
mov
cmpsb
cmp
filds
mov
push
loopne
pop
sahf
ljmp
xor
ja
fs
pop
hlt
hlt
xchg
out
push
in
mov
cmc
stc
test
add
adc
mov
or
push
out
dec
jmp
add
mov
mov
sahf
and
pop
xchg
push
enter
aad
fidivs
imul
jmp
cld
repz
lahf
dec
aad
cwtl
stos
punpcklbw
loope
dec
insl
add
jp
jbe
mov
jne
push
mov
int3
arpl
movsb
insb
mov
pop
adc
popf
test
iret
sbb
cmp
adc
test
jae
dec
add
fcomps
in
sub
dec
mov
sbb
sarl
fldenv
or
push
mov
dec
pop
cmpsb
fnsave
bswap
xorb
scas
inc
gs
jp
xchg
cltd
ds
pop
aad
in
test
mov
dec
in
and
cmpsb
add
push
sbb
cmpsb
push
hlt
outsb
das
mov
dec
cmpsl
jp
repz
cli
mul
inc
sub
xchg
pushl
aaa
pop
jmp
adc
xchg
lock
nop
fnsave
lss
ret
dec
pop
pusha
std
imul
flds
push
cmp
das
mov
push
push
call
stos
das
outsl
push
in
push
sub
out
pop
fwait
lret
in
mov
ss
add
stos
xor
jecxz
ret
lea
cltd
and
scas
test
push
mov
dec
or
iret
pop
shl
mov
cmp
ds
sub
movsl
xchg
push
xchg
sub
subb
mov
scas
sub
jbe
mov
adc
sbb
jnp
and
sbb
xor
out
dec
lret
xor
mov
add
sub
sbb
or
test
xchg
outsb
mov
pusha
jmp
push
incb
test
cmp
mov
imul
jge
xor
mov
mov
out
jecxz
cltd
repnz
and
pop
mov
lret
jle
je
cmp
cmp
jmp
les
dec
outsb
sbb
mov
xchg
xor
xchg
mov
lods
iret
popa
dec
out
jp,pn
adc
aaa
enter
in
fstpt
cmc
or
into
std
mov
das
sbb
xlat
xor
and
scas
dec
add
pop
aaa
push
cmp
insl
mov
push
adc
adc
sbb
lcall
pushf
imul
adc
cli
es
push
aas
dec
xor
mov
jl
or
jl
shl
sti
xor
pop
jns
aad
cmpsl
roll
xlat
and
in
adc
mov
xchg
cld
jns
cmp
xchg
rcrl
repz
inc
mov
je
sub
mov
cmpsl
ds
and
inc
cltd
jmp
inc
out
mov
dec
mov
or
pusha
hlt
sub
pop
adc
add
and
leave
flds
js
lock
out
pusha
pop
lret
lahf
pop
add
dec
mov
scas
loope
mov
sbb
mov
bound
mov
sarb
jmp
popa
pop
negb
xorl
aam
aad
sbb
push
sub
mov
cmp
mov
push
mov
inc
push
cmp
add
inc
fstpt
mov
and
pop
inc
decb
in
or
cltd
insb
sub
mov
mov
ret
sarl
imul
xor
xor
jno
sahf
or
xlat
mov
and
inc
aas
filds
mov
cld
dec
subl
mov
mov
adc
push
fisubrs
pop
daa
clc
inc
movsb
std
enter
cltd
mov
pop
cmp
clc
push
jl
and
mov
mov
inc
faddp
push
push
ja
in
sti
ja
lcall
out
dec
pop
lret
out
xchg
popf
xor
insb
rcl
stc
pop
loop
mov
push
addr16
test
movsl
xchg
cs
out
std
repz
notb
and
sub
mov
cmp
or
cmp
cmp
ret
jns
cmp
lods
daa
leave
mov
pop
ss
fld
pop
or
filds
cmp
pandn
mov
stc
out
out
mov
enter
std
xchg
and
jnp
and
add
pop
imul
adc
pop
add
xor
mov
sbb
fsubrs
les
add
movmskps
test
pop
push
jp
pop
cmpsl
mov
mov
jne
mov
arpl
into
fsubrl
lds
push
mov
in
fidivl
imul
stos
mov
dec
and
cli
sbb
sub
push
jmp
xchg
mov
shrl
movsb
jne
sbb
ud2
mov
sub
ja
sub
out
adc
cmp
test
imul
je
adc
push
ss
mov
aaa
mov
inc
dec
aad
pop
or
lock
jnp
in
iret
dec
dec
bound
push
lock
pop
in
mov
xchg
jnp
xchg
popa
push
xor
push
or
adc
movsb
mov
adc
jnp
imul
mov
push
adc
push
jecxz
xchg
outsl
leave
test
dec
sbb
xchg
out
into
ret
mov
sub
sahf
pop
ja
out
dec
es
jmp
imul
mov
inc
mov
rcrl
int3
pusha
mov
mov
cli
and
dec
movsl
fidivrs
sub
sbb
and
dec
scas
xchg
pop
je
in
dec
aas
nop
or
xor
add
ss
pop
or
jbe
je
sub
lret
mov
jle
jecxz
pop
jnp
and
outsl
inc
fs
mov
fidivl
push
imul
es
xor
cmp
lods
mov
dec
int
out
sbb
and
xchg
cmc
jae
push
scas
rcrb
scas
outsb
mov
lock
push
insl
inc
xchg
jns
or
adc
pop
inc
fld
lret
lret
outsb
lret
jo
int
xchg
daa
or
xchg
cmp
xor
ja
test
cmpsl
push
pusha
xor
sarl
fnstenv
loopne
popa
push
ret
into
std
aam
add
push
repnz
jg
xchg
pop
and
push
addr16
dec
test
push
or
stc
cli
insl
shl
cli
popf
aaa
sbb
idivl
mov
dec
mov
or
mov
mov
out
popf
pop
cmp
bound
pop
aad
or
or
add
aaa
into
lods
aaa
js
in
lret
lret
cmp
and
in
dec
sbb
xadd
xchg
inc
cltd
mov
sti
out
testl
jle
icebp
pop
inc
iret
push
lret
jo
mov
pop
leave
arpl
cmpsl
sbb
adcb
jbe
jae
jbe
mov
popa
adc
mul
outsb
sub
cmp
test
pop
inc
mov
pop
loop
mov
inc
pop
adcl
hlt
inc
mov
pop
scas
movsl
sbb
daa
xchg
jb
or
pop
rcrl
aas
fsubr
aam
xor
xor
sub
aas
pop
dec
cwtl
enter
sbb
ds
mov
mov
sub
dec
xchg
sbb
fnstenv
dec
add
inc
test
enter
push
cmp
pop
mov
sti
pop
add
pop
shlb
inc
mov
inc
or
and
nop
pop
mov
addr16
out
xor
scas
scas
mov
mov
xchg
into
cs
mov
xor
inc
push
mov
mov
cmc
jnp
inc
push
out
xor
mov
sbb
movsl
push
ret
in
mov
pop
jecxz
add
pop
jbe
xchg
jecxz
jle
xchg
sub
pop
lret
cli
add
sub
repz
pop
mov
in
sub
mov
mov
cmpsl
mov
test
aad
adc
mov
jmp
and
cmp
imul
sbb
jl
inc
fsubl
mov
xchg
mov
mov
jmp
shlb
push
jg
mov
and
insl
sti
xor
addb
or
fldl
pop
or
in
sub
shll
jbe
cltd
aam
pop
sarb
xor
roll
dec
dec
mov
stc
push
push
outsl
lods
xchg
sbb
mov
popa
jbe
jmp
js
mov
cmpsl
testb
pop
dec
lahf
inc
inc
mov
mov
sbb
sub
or
in
clc
mov
outsb
bound
jae
mov
js
mov
dec
mov
xlat
bndstx
mov
push
push
xchg
mov
mov
jns
lret
mov
dec
addr16
or
cmp
pop
dec
imul
mov
sub
shlb
mov
dec
inc
xor
add
call
orl
nop
jmp
xchg
mov
pop
xor
jle
orl
mov
push
pop
lods
pusha
ds
pop
jne
lds
push
addb
movsb
fiadds
fisttpl
jae
mov
pop
imul
adc
push
jg
xor
fiadds
pop
lods
add
fsubl
jae
push
pop
sub
sub
test
adc
inc
add
test
jle
lcall
ss
mov
cmp
dec
add
inc
xor
mov
jl
in
dec
sub
pop
push
nop
fdivrs
xchg
mov
cmp
jns
cmp
mov
shlb
aad
push
cmc
dec
jns
outsl
subl
pop
push
pop
out
xor
cmp
inc
mov
cld
orb
fdivl
mov
inc
add
loope
push
inc
fcomi
sahf
jne
and
out
push
sub
xorl
popf
out
test
jbe
inc
dec
or
xchg
icebp
mov
pop
mov
sub
mov
aam
sbb
jge
push
fs
loopne
fcompl
in
xchg
lret
cld
cmc
gs
adc
jg
je
imul
arpl
mov
popf
cmp
push
cmc
dec
pop
or
stos
sbb
lock
inc
dec
shl
sub
lods
add
mulb
aas
insb
dec
jo
stos
pop
or
das
gs
sub
repnz
xchg
negl
xor
xchg
mov
scas
adc
sbb
pop
and
arpl
xchg
ljmp
insb
jo
nop
adc
lock
cs
add
and
and
pop
cmp
and
aaa
stos
sub
adc
mov
clc
iret
subl
dec
sub
imul
mov
imul
arpl
or
loopne
dec
stc
rcl
out
lock
daa
cli
or
bound
imul
hlt
xorl
xchg
push
jb
add
push
rcrb
hlt
mov
adc
ds
dec
mov
ficomps
out
in
or
adc
shrb
lcall
push
pop
ja
cltd
xlat
incb
in
test
dec
dec
adc
mov
into
out
notb
icebp
cs
nop
in
inc
stos
jno
aas
pop
data16
jne
push
das
inc
cmp
or
icebp
mov
mov
js
and
sub
xor
dec
mov
hlt
sub
lea
enter
hlt
das
and
outsb
sbb
sbb
cmpsl
fwait
repnz
pop
imul
popf
lods
inc
cmpsl
jle
stos
movlps
add
sub
lahf
sarl
mov
jmp
dec
mov
pop
dec
jg
clc
nop
mov
insb
add
imul
sbb
mov
stc
mov
test
movl
and
mov
mov
in
inc
popf
adc
mov
ret
pop
cld
pop
shrb
push
fisttpll
cli
add
xchg
lret
and
aas
pop
adc
xchg
cs
lea
inc
add
cmp
insb
rcl
mov
fsubs
mov
stc
or
pop
ficompl
xor
out
rolb
cmc
jne
mov
push
setno
sub
mov
jno
iret
pop
adc
mov
mov
mov
mov
outsb
dec
test
je
mov
pop
aaa
jbe
jno
jle
dec
xor
xor
pop
dec
xchg
inc
movl
add
add
or
sbb
mov
stos
loope
inc
clc
or
insb
push
iret
mov
outsl
add
shlb
pop
test
mov
addr16
xor
pop
std
mov
lret
add
decl
sahf
and
jmp
or
pop
mov
data16
mov
insl
aas
jp
ljmp
jae
lret
lret
adc
lds
xor
fdivr
or
js
xor
fldl2t
jl
lea
jns
scas
cmc
outsl
cmpsl
outsb
rolb
div
and
or
movsl
jnp
push
testl
test
js
int
push
call
sti
loop
test
jle
fucomp
push
sub
xchg
es
aad
xchg
lock
std
nop
push
and
lahf
test
es
sub
sbb
pop
cmp
addr16
repnz
jbe
sub
dec
adc
mov
cmc
in
ja
dec
and
stc
hlt
ja
cli
cmp
xchg
insb
and
xor
push
or
je
push
dec
dec
std
cmp
pop
and
cmc
lahf
fucomip
xchg
sub
cmpsb
out
scas
ficompl
sbb
jge
test
fwait
cs
clc
cld
lcall
in
nop
rcll
clc
sub
out
xchg
lahf
ret
cltd
test
and
jg
xlat
subb
xchg
jge
cld
sub
mov
and
fstl
rorb
mov
movsl
or
js
cmp
imul
dec
in
pusha
xchg
push
test
ret
pop
std
inc
rolb
sbb
fptan
sbb
dec
enter
movsb
push
out
repnz
sub
jecxz
js
sub
add
xchg
popa
adc
imul
push
cmpsl
fsubr
and
lret
lret
sahf
clc
int
enter
adc
pop
fidivs
pop
add
ret
mov
mov
pop
sub
cmp
mov
xchg
mov
mov
push
out
push
rcll
addl
and
xor
mov
mov
cld
hlt
scas
test
cmp
clc
lea
xor
aad
mov
adc
sbb
mov
les
sub
hlt
xlat
jge
dec
fadds
dec
out
cmp
mov
enter
mov
movsl
sub
or
test
jo
cs
out
fwait
mov
mov
sbb
cmp
cmpsb
ss
xchg
sbb
xor
mov
cmp
imul
push
fsubrs
sub
fiaddl
adc
or
pop
cs
push
sti
rolb
fstl
addr16
sub
bound
jnp
clc
loope
std
push
add
push
sahf
push
ret
or
jns
mov
fbld
aaa
mov
jne
and
xor
jno
popa
xchg
add
pop
scas
jns
jns
insb
xchg
dec
loope
xchg
mov
jmp
inc
subb
leave
jbe
push
inc
and
pop
dec
jmp
adc
xchg
int
scas
test
andl
adc
pop
out
aad
push
xchg
dec
cmp
aaa
fsubs
mov
sbb
fcomp
jno
lret
in
test
and
std
inc
inc
std
scas
lret
xchg
push
sbb
popa
xor
add
les
outsb
xor
sub
enter
sbbl
inc
les
add
jecxz
adc
mov
xchg
jge
inc
dec
in
lea
add
cmp
outsb
or
jle
mov
add
jp
divl
xchg
push
mov
lods
jae
xor
add
sahf
xchg
push
add
push
das
cli
lcall
adc
out
mov
add
mov
jae
in
push
inc
mov
add
mov
jns
jae
or
sbb
xor
sub
inc
xchg
dec
adc
test
xchg
testl
pop
in
ljmp
mov
or
test
scas
xor
mov
cs
cmp
push
in
lea
mov
jp
xchg
jns
jnp
mov
sbb
xchg
vmwrite
cs
pop
adcb
dec
bound
jb
fadds
jne
enter
or
mov
inc
ret
xchg
arpl
push
lods
xor
cmpsb
mov
xor
shl
jae
negb
rclb
pop
adc
stos
mov
pop
call
add
mov
scas
jg
pop
pop
rorb
cmp
into
enter
in
add
mov
in
or
mov
jns
imul
push
cltd
mov
xor
push
xchg
jno
and
aam
xchg
loope
push
pushf
jmp
inc
push
cmpb
mov
sbb
jae
cmp
push
cs
js
mov
outsb
cwtl
xor
adcb
test
mov
push
add
push
stos
loope
lcall
xor
mov
js
inc
pop
ret
push
aas
dec
fcomps
jnp
pop
shrb
test
hlt
xchg
xor
xor
mov
push
sub
cltd
pop
xor
clc
push
lds
test
push
and
xlat
or
in
aam
clc
or
fadds
mov
arpl
or
cmpsl
imul
stos
rorl
movsl
add
std
dec
shr
out
out
sub
and
mov
bound
mov
mov
andps
mov
movsl
xchg
inc
jg
ret
mov
movsl
mov
jg
pop
fmull
arpl
not
sub
mov
adc
inc
xchg
je
mov
sbb
shll
pop
adcl
fstps
jno
jl
rorb
out
lea
rep
insl
loopne
lahf
lods
cmp
pop
adcb
push
repz
movl
mov
outsb
in
mov
push
sbb
push
nop
push
xchg
mov
add
ret
popa
and
jbe
outsw
nop
and
push
push
mov
mov
xor
inc
addr16
push
pop
and
loop
mov
or
out
out
inc
jae
xchg
sub
fadds
leave
test
cmp
stos
add
or
cmpsl
cmp
push
shlb
mov
push
xchg
aaa
stos
or
aam
add
cwtl
or
add
rorl
and
xchg
test
dec
xchg
rclb
outsl
xbegin
stos
and
out
cmp
scas
push
hlt
dec
cwtl
repz
adc
xchg
cmp
aad
xor
pop
insb
vcmppd
ret
rol
xchg
ret
mov
clc
sbb
mov
insl
movsb
adc
rolb
xchg
adc
ss
jns
pop
mov
leave
ja
jb
shll
int3
stos
jecxz
int
jno
mov
rclb
mov
fisubs
cmp
xchg
pop
out
orl
cli
sbb
insl
jmp
pop
mov
or
ja
ljmp
mov
sub
or
sub
cs
fnsave
pop
xor
stc
mov
fiadds
shl
xchg
and
int3
in
arpl
jb
les
push
xchg
ja
add
leave
mov
cmpsl
cmp
and
push
inc
sub
jnp
mov
test
int3
lret
jecxz
push
adc
push
leave
sub
je
into
ror
in
pushl
push
cmp
test
shll
and
pop
mov
shl
xor
sub
cltd
imul
pop
sub
push
xlat
call
inc
imul
sbb
sbb
iret
pop
std
lods
js
and
jp
insb
adc
testl
int
cmp
mov
cmp
or
pushf
pushf
lods
test
push
or
jnp
popa
clc
jl
jmp
inc
or
out
xor
push
popa
or
inc
lods
pop
push
jl
sub
push
cmpsb
jno
sub
int3
cmp
mov
fstpl
jmp
lahf
jp
inc
ss
xor
lock
adc
lea
fs
inc
and
or
loope
push
jb
popf
push
jmp
xchg
mov
xor
or
pop
stos
addb
push
es
loopne
hlt
inc
jge
xchg
push
or
mov
sub
lds
jne
scas
movb
fidivl
iret
push
arpl
sub
std
aam
cmp
dec
adc
mov
pop
push
inc
push
loope
or
loopne
std
pop
push
mov
adc
lea
sets
insb
out
test
pop
ds
cmpsb
orl
sub
inc
ss
jno
xor
popf
and
or
lcall
cwtl
xchg
dec
mov
out
pop
dec
pop
inc
cmp
sbb
andl
in
aad
lds
add
inc
iret
lods
and
movsl
ret
filds
cmpsb
dec
adc
cmp
adc
pop
sarl
push
cmp
pop
leave
rcrl
addr16
push
scas
jnp
ja
fwait
sub
ljmp
cli
loopne
jo
xor
insl
sbb
adc
inc
xor
daa
sbb
mov
sub
mov
jp
in
jge
je
dec
sbb
lods
jl
stos
xchg
test
xor
addr16
or
fnstcw
push
lods
inc
test
lret
data16
push
fidivs
or
pushf
scas
test
mov
or
out
mov
sbb
mov
push
xor
popa
int
push
rcl
jg
dec
scas
push
nop
pushf
data16
ss
inc
sub
shrb
inc
pop
out
pop
and
test
insb
sbb
adc
jge
outsb
and
push
imul
pop
ficompl
icebp
orb
add
rcrl
xchg
xchg
add
shl
dec
div
adc
enter
mov
imul
cmpsb
icebp
inc
sub
mov
popa
cld
dec
jl
add
jno
fs
sub
in
mov
lds
sub
sub
pusha
aaa
fwait
das
cld
out
cmpsl
cltd
jmp
leave
dec
push
out
dec
push
mov
jae
xchg
push
and
sbb
mov
ja
iret
fnclex
cmpsl
add
popf
sub
int
icebp
popf
outsl
scas
mov
sbb
ret
mov
addr16
sbb
adc
popa
cmp
cld
pop
aas
mov
pop
icebp
inc
adc
adc
push
fs
fbld
pop
xchg
jne
cmp
cmp
in
xchg
push
out
or
hlt
or
cmc
sub
inc
out
dec
lods
loope
inc
inc
inc
inc
in
xorl
mov
inc
push
out
inc
rcrl
in
imul
ja
arpl
dec
std
xchg
jge
rcrl
mov
sbb
sbb
jle
adcl
adc
sbb
mov
call
repnz
arpl
js
push
mov
lea
mov
xor
cmpsb
ss
jmp
adc
pop
cmp
or
shl
es
mov
fdivl
lahf
ret
arpl
jbe
insl
shll
push
dec
dec
outsb
add
dec
adc
int3
arpl
jg
fidivs
xchg
xchg
inc
push
hlt
mov
imul
or
int3
daa
in
je
pop
orl
sahf
pop
movsl
mov
xor
dec
bound
imul
push
clc
dec
leave
mov
div
js
push
push
mov
push
out
mov
mov
adc
cmp
into
mov
mov
push
insl
and
movsb
js
add
mov
orl
inc
push
movsb
pop
ss
pop
out
mov
jo
pop
mov
xchg
mov
fbstp
test
sbb
popf
shrl
or
clc
add
xor
inc
push
push
jne
sub
je
pop
outsl
cmp
stos
jp
xor
cmc
fnstenv
lret
iret
xor
in
out
out
push
popa
adc
lods
add
xlat
sub
xchg
lcall
sti
out
cwtl
inc
xor
cmp
das
test
fstpt
repz
mov
mov
push
sahf
sub
xlat
mov
cld
sub
in
push
push
mov
pop
imul
pusha
clc
push
lods
aam
shlb
push
xchg
adc
xlat
in
pop
jne
test
mov
sub
pop
jg
lret
addr16
rcrb
mov
test
lods
inc
pop
scas
dec
mov
mov
outsl
outsb
rcrl
int
dec
cmp
mov
pop
int3
jns
std
jp
ljmp
jno
xchg
fdivl
test
xor
mov
cmp
sarl
movsb
jle
mov
invd
xor
or
inc
cmp
dec
fildll
data16
lret
add
cld
push
push
cmp
and
pop
add
outsb
lret
mov
frstor
inc
jl
packsswb
mov
dec
movsl
mov
daa
cli
jb
int
add
push
aaa
push
jo
not
sbb
fistpll
cli
stos
pop
stos
repnz
mov
lods
loop
xchg
and
lods
ljmp
pushf
sbb
lods
jmp
or
addr16
mov
xchg
fs
jns
push
jge
rcll
mov
inc
push
sub
shr
sbbb
mov
stos
sub
shl
leave
sbb
call
xlat
cmp
adc
and
mov
push
jno
scas
scas
jmp
fnstsw
jmp
pop
inc
lock
or
sub
pop
pop
mov
scas
fwait
iret
jbe
fsubs
cltd
fs
lcall
nop
and
mov
push
subl
sub
nop
out
jg
fwait
orb
mov
scas
ja
lods
sub
mov
sbb
idivb
dec
adc
mov
call
xor
push
xchg
movsl
or
xor
cmc
jmp
out
cmp
stos
lahf
pop
cmp
inc
gs
cli
ljmp
push
xchg
inc
add
jbe
jle
jmp
mov
ss
je
jbe
rcrb
leave
push
pusha
int3
pop
in
xor
xabort
jae
mov
addr16
les
or
jbe
imul
mov
dec
shlb
gs
fdivs
cmp
mov
roll
pop
dec
xchg
loope,pn
add
dec
pop
sub
in
sbb
mov
outsb
push
adc
xor
xor
movsl
jns
fsubs
dec
test
sbb
ss
or
ret
lds
and
stos
sahf
outsl
sbb
xor
addr16
cs
outsb
aaa
adc
sbb
adc
repnz
xor
leave
insl
into
enter
je
imul
out
je
xchg
push
add
adc
xchg
lods
lock
int
jo
and
int
out
sti
pushf
inc
inc
and
cmpsb
data16
push
or
loop
cmpsl
add
jp
jns
ret
jle
cmp
sub
push
shlb
fsubl
lods
out
fsub
inc
mov
aas
jnp
or
adc
and
pop
adc
or
dec
shrl
mov
inc
frstor
xchg
mov
or
push
jnp
fisubrs
ja
xor
es
xor
xor
xor
sbb
and
ret
xorb
outsl
ja
stos
inc
xchg
int3
rorb
popf
push
push
lods
dec
pop
cli
shr
xor
xchg
jmp
icebp
xchg
mov
mov
sub
adc
push
mov
pop
cmp
ja
out
xchg
cmpsb
push
cltd
sub
lock
imul
or
mov
mov
jmp
xchg
cmp
jb
cld
xchg
dec
pop
mov
adc
push
movsl
das
cmp
ret
mov
repz
test
rol
sub
adc
insl
sub
pop
dec
sahf
stos
cmpsb
loop
push
push
bound
push
scas
mov
lods
push
add
jmp
nop
sub
adc
push
stc
pop
and
pop
or
mov
shl
lret
xchg
out
ret
xchg
pop
lret
sahf
movl
mov
fimull
pop
hlt
pop
shrl
imul
xchg
sti
mov
xchg
dec
loop
mov
xor
add
dec
cli
test
fs
cmc
or
fwait
xor
cs
xchg
cmp
into
loope
push
cwtl
das
push
das
imul
jmp
cmp
and
leave
pop
movsl
jne
mov
mov
or
jne
cmp
or
ja
divps
fs
and
inc
loopne
cwtl
int
pusha
jb
mov
xor
lret
lret
leave
in
hlt
push
push
cmova
add
sbb
dec
fisubs
xchg
call
sbb
ret
loope
scas
add
dec
mov
push
mov
aad
jnp
xchg
shr
ret
and
mov
add
jb
mov
pop
sub
leave
pusha
test
out
mov
into
fcoml
mov
sub
pop
mov
stc
sbb
mov
ret
cld
push
lods
inc
adc
push
dec
xor
filds
mov
cwtl
stos
mov
shrb
or
xchg
xor
xor
adc
push
mov
inc
in
mov
push
or
roll
cmpsb
pop
adc
enter
add
ds
mov
int3
xchg
mov
mov
cli
lret
in
xor
dec
scas
lcall
xchg
push
ds
mov
mov
jns
push
xchg
xor
call
scas
pop
test
fdivs
dec
sahf
inc
pushf
ret
mov
jno
arpl
stos
sbb
icebp
stos
xchg
pop
in
testb
mov
add
mov
push
sub
imul
fists
in
mov
test
in
aas
aad
or
das
mov
adc
mov
popf
lods
leave
or
mov
jne
lret
and
sahf
jge
fsts
mov
test
shlb
in
imul
dec
lahf
out
cmpsl
cmp
jl
out
out
lods
ret
push
jns
into
fcmovnb
lcall
mov
std
cltd
or
adc
inc
mov
sub
adc
mov
std
repz
jns
jbe
inc
push
hlt
sbb
cli
inc
fsubrl
add
arpl
xchg
gs
push
cmp
xor
add
insb
jae
aaa
lret
xor
call
xor
popf
adc
inc
mov
pusha
notl
rol
xchg
jle
mov
aad
or
or
jbe
dec
pop
jecxz
hlt
adc
mov
pop
imul
sub
inc
insb
mov
add
nop
pop
and
loopne
mov
mov
movsb
les
out
inc
std
or
outsl
xor
nop
imul
aam
sahf
stos
gs
adc
cs
aad
jb
jmp
or
fs
xorb
jno
dec
mov
sahf
xchg
inc
out
cmp
iret
lea
out
nop
xlat
mov
imul
repnz
stos
inc
mov
mov
xchg
inc
mov
sub
fidivl
and
jae
ljmp
adc
fsts
xor
inc
out
xlat
test
pusha
div
daa
pop
adc
pushf
jle
into
testb
adc
jbe
rorb
dec
cmc
out
pop
sahf
push
hlt
push
pop
shlb
jmp
mov
test
scas
test
in
sub
xchg
pop
int
inc
jnp
fisubl
movsb
pushf
jp
dec
cli
dec
clc
je
mov
jmp
in
andl
lcall
outsl
clc
inc
cltd
bound
cwtl
dec
nop
pop
call
mov
pop
roll
sbb
pop
jno
sub
sbb
push
jno
sub
push
cmp
push
dec
dec
je
popf
pop
das
scas
aas
xorl
and
pop
testb
sti
sbb
add
aaa
pop
mov
xlat
into
fwait
ljmp
or
fistpll
ja
lods
adc
enter
jmp
fldenv
and
jp
test
aaa
faddl
pop
pop
out
add
mov
pop
movb
sahf
add
lea
mov
sbb
inc
jb
cmc
outsl
test
push
dec
add
push
xor
lock
pop
xchg
dec
xor
xchg
mov
dec
sar
adc
cmp
daa
add
stc
sbb
add
xor
stos
inc
xchg
adc
add
adc
test
movsb
loop
push
in
outsl
rcrl
in
pusha
and
fs
or
xor
jns
cmpsl
int
sbb
pop
sub
shll
jns
fucom
scas
out
sub
pusha
nop
cmp
mov
jno
rolb
loopne
xor
mov
push
cmp
fidivs
pusha
push
inc
sbb
rclb
mov
jo
int3
test
sbb
xor
cmp
enter
setbe
inc
and
out
popa
cmp
jmp
clc
fsubrl
push
jnp
js
mov
mov
les
sbb
fistpl
lret
pop
ret
jne
lods
and
lret
xchg
sub
shrb
outsb
jo
sbb
loope
xchg
repz
and
sti
mov
stos
ss
cmp
adc
sahf
pop
pushf
pop
or
cltd
outsb
iret
lds
lret
pop
and
jns
pop
jne
mov
and
pop
mov
fdivr
rcr
mov
xchg
lcall
scas
movsl
or
mov
clc
jp
jle
pop
outsb
mov
aam
in
lcall
or
mov
mov
mov
or
aaa
pop
aam
and
cwtl
xor
add
lods
aaa
adcb
test
and
jmp
and
mov
insb
ja
xor
inc
jmp
hlt
int
push
inc
xchg
push
test
popa
xlat
mov
in
mov
sarb
and
roll
inc
pop
pop
mov
adc
mov
or
mov
insl
rcl
adc
add
push
jecxz
push
inc
and
ljmp
mov
std
xor
aaa
shr
push
pop
outsb
inc
adc
mov
xor
out
mov
cmpsb
jge
dec
inc
int3
mov
imull
cmp
pop
stos
xlat
pop
cmp
pop
cmp
or
xchg
es
adc
ficompl
mov
jg
xor
push
inc
sbbb
xchg
shlb
repz
xchg
jg
imul
mov
aam
hlt
pop
jns
adc
adcl
pop
enter
leave
int
pop
pop
add
mov
push
shlb
lret
pop
fnsave
addr16
fistpl
pushf
xchg
pop
fwait
cmp
xchg
xchg
pusha
fidivrl
xor
andb
jl
fnstsw
mov
mov
mov
insl
jne
cmpsb
pause
mov
xchg
scas
test
bound
xor
stos
sbb
pop
cmc
cmp
popf
sbb
cmp
stos
into
pop
push
dec
add
jnp
mov
data16
sub
ds
js
pop
aam
and
pop
dec
dec
hlt
inc
cwtl
out
dec
mov
mov
xchg
adc
sbb
testl
mov
scas
loop
inc
push
clc
pusha
cs
push
stos
addl
mov
and
in
adc
test
mov
lret
inc
dec
cmc
mov
stos
imul
sbb
jl
dec
xor
push
mov
or
nop
push
rcrb
cwtl
sub
mov
stos
push
mov
cmp
movsb
mov
dec
aaa
lods
lret
mov
or
sbb
inc
fdivrs
popf
loop
and
movsl
cmp
in
xor
les
push
in
pop
mov
and
jmp
pop
xor
ss
aas
xchg
push
dec
mov
stc
stos
mov
fcompl
insl
js
inc
cmpsl
mov
jle
add
in
aaa
xor
add
lahf
lcall
ja
ja
jns
inc
fs
aas
mov
or
out
xor
gs
jl
add
shl
push
xor
outsl
lcall
inc
in
rorl
cli
inc
and
lds
ds
clc
or
addr16
cli
test
pop
xchg
data16
pop
mov
pop
mov
fisubl
mov
push
jg
sti
and
shlb
inc
add
jae
dec
inc
imul
lds
jle
mov
rcll
jl
and
mov
pop
jno
lret
addr16
sahf
mov
or
cmpsb
test
sarb
roll
pop
inc
popa
shlb
jne
xor
movsl
sub
ljmp
cmp
push
or
add
mov
pop
xchg
into
push
ret
mov
jp
adc
mov
xchg
sbb
ret
das
and
cmp
insb
or
pop
call
addr16
dec
ret
or
out
lds
sub
stc
push
or
ljmp
push
or
mov
lods
mov
mov
jae
xor
in
das
or
cmpsb
mov
mov
sub
ljmp
out
popf
movlhps
lret
sbb
xchg
mov
iret
loop
jo
mov
pop
mov
lds
clc
inc
incb
leave
int
mov
iret
data16
or
cmp
daa
mov
jl
inc
fld
jns
icebp
pop
out
mov
int3
imul
ds
mov
mov
pop
rol
int
js
and
pop
out
jmp
push
fdivs
fsubr
test
add
mov
or
repnz
fnstenv
ret
shrl
mov
xchg
daa
ss
je
fwait
pop
pop
push
lret
xchg
movsl
les
mov
mov
ret
xor
in
fisttpl
dec
add
mov
fcoml
test
mov
push
stos
rolb
xchg
pop
data16
jae
cmpsb
adc
cwtl
sahf
pop
push
sbb
inc
dec
jne
and
mov
xor
call
stc
push
ds
push
pop
cpuid
int
push
xor
insl
sub
lahf
repnz
ljmp
int3
mov
add
xchg
aas
aam
cmp
jp
pop
pushl
sbb
mov
out
sti
js
mov
push
mov
cmp
mov
fnstenv
inc
mov
mov
or
xchg
das
mov
push
push
imul
icebp
adc
ret
cmc
dec
in
pop
dec
jge
loope
inc
xchg
mov
and
and
jle
repz
cmc
sub
ret
or
xor
imul
imul
dec
lds
push
mov
cmp
mov
ljmp
psubsw
xchg
in
sbb
inc
push
or
stos
loop
pop
jg
les
mov
repnz
push
mov
pop
xchg
fidivs
add
inc
pop
js
sbb
push
adc
sbb
and
push
and
xchg
clc
inc
les
nop
popa
fyl2x
xchg
mov
inc
xlat
xlat
inc
xchg
inc
or
xchg
push
cwtl
lods
test
cmpsl
cmpsb
pop
test
or
les
sub
sbb
dec
xor
push
test
add
add
sub
inc
dec
imul
loop
jno
pop
insb
adc
push
mov
out
stc
fbstp
cmp
mov
push
arpl
add
imul
outsb
loope
nop
dec
adc
mov
mov
pop
jns
or
xchg
add
add
ja
cmc
sbb
jb
cmp
mov
mov
in
pop
dec
cwtl
sbb
xchg
orl
or
cltd
or
cmpsl
shr
mov
gs
adc
inc
lret
cmc
sub
mov
push
popf
notl
iret
or
inc
and
cld
sarl
mov
pop
mov
sarl
dec
add
sbb
inc
inc
cmpsl
dec
addr16
xchg
mov
sarb
push
enter
cld
inc
pop
sbb
and
cmp
in
push
aas
lock
mov
pop
mov
push
sub
mov
cbtw
mov
inc
xchg
jnp
inc
mov
xor
cli
xchg
je
lods
sbb
mov
xchg
fisubs
int3
jb
mov
jno
mov
jb
repnz
ret
mov
mov
push
lods
test
call
dec
sub
int3
shrl
cs
pop
cmp
dec
lds
aaa
fwait
test
jecxz
xor
mov
mov
fnstenv
dec
mov
sub
fistpll
orl
dec
jl,pt
xor
mov
aad
cmpsl
mov
jecxz
mov
cs
lret
push
mov
mov
ja
mov
insl
js
xchg
testb
jl
mov
ljmp
fdiv
sbb
pop
into
into
add
bound
jne,pt
cwtl
or
mov
jnp
cmp
cwtl
das
cmp
jbe
jno
sub
push
rorl
arpl
orl
push
test
mov
scas
xchg
mov
pop
add
or
ljmp
jmp
push
xchg
inc
xor
test
xchg
orl
inc
scas
xchg
pop
or
or
in
fwait
aaa
enter
imul
jbe
sub
test
mov
lock
jns
fwait
push
addr16
adc
adc
and
mov
adc
dec
and
mov
cld
out
jbe
int3
push
mov
sub
jecxz
jns
ss
or
call
loope
lahf
sub
test
repnz
push
xchg
call
adc
jb
push
jle
aam
push
xchg
imul
or
ret
push
popf
pop
mov
xchg
add
sahf
sarb
rol
lods
ja
jle
lods
outsl
sbb
std
aam
adc
sar
mov
inc
dec
inc
push
jge
mov
push
pop
jae
xor
popa
outsl
push
aas
out
sarl
push
scas
hlt
xchg
dec
push
jmp
es
scas
xor
mov
adc
repnz
jle
enter
rolb
in
dec
sarb
push
hlt
test
popf
stos
iret
stos
sub
out
and
fwait
rcrb
jns
xor
sub
mov
push
stc
movsl
aam
mov
xor
ficoml
mulb
imul
and
cmc
ds
incb
repz
out
ja
jbe
mov
sbbb
push
fiaddl
leave
and
cmc
add
mov
gs
daa
enter
iret
xorb
sbb
bound
adc
and
fcmovu
pop
int3
pop
jno
cmpsl
sbb
scas
xchg
lods
loopne
int
adc
ja
loop
adc
ret
mov
xchg
xor
cwtl
lods
ljmp
pushf
aam
add
push
pop
movsl
sbb
mov
outsb
fistl
insl
ds
cmc
movsb
sub
sbb
mov
mov
cli
dec
mov
sbb
lahf
and
sti
mov
icebp
fdiv
or
fmull
ror
or
faddl
sahf
out
addr16
cmp
dec
xor
mov
mov
jecxz
xchg
inc
cmp
stos
inc
jbe
and
gs
push
movsl
cmp
les
pop
cld
movsb
xor
fldt
out
dec
add
sbb
mov
popa
jmp
cmp
pop
out
flds
sahf
lret
mov
mov
push
inc
loope
mov
mov
pop
cs
mov
out
in
negb
mov
sbb
pop
dec
adc
insl
inc
mov
hlt
mov
jmp
or
push
sbb
andl
aaa
mov
out
sti
mov
dec
xchg
loopne
clc
fistpll
pop
insl
xor
xlat
sti
cmp
pop
inc
pusha
nop
leave
add
or
aam
xchg
xor
in
xchg
out
repnz
xor
cmp
sbb
loop
mov
out
mov
sub
jmp
inc
pop
xchg
jns
in
xchg
jge
inc
out
sbb
shll
mov
push
xor
nop
in
inc
mov
hlt
fcomp
sub
mov
std
pop
mov
test
mov
mov
jecxz
repz
pushf
xor
or
sar
pop
std
aaa
pop
mov
push
ret
or
leave
adc
lods
clc
dec
leave
mov
test
icebp
ret
and
cwtl
sbb
inc
push
sub
fiadds
pop
loopne
sub
inc
inc
cmp
mov
rclb
cmp
scas
and
sti
and
daa
push
popf
sub
outsl
in
mov
inc
cmpsb
lods
inc
pop
inc
addr16
xor
sbb
mov
in
les
mov
pop
jbe
jbe
testb
bound
sub
mov
and
pop
xchg
add
push
call
cmp
fbstp
xchg
divb
mov
mov
pop
inc
sub
bound
out
cmp
cmp
dec
mov
pop
jns
xor
aad
push
push
leave
jecxz
int
xchg
shrb
push
outsb
fists
xchg
divl
scas
enter
scas
mov
mov
imul
jp
jns
aam
lcall
in
push
lcall
xchg
cld
adc
incl
adc
push
or
xor
repnz
adc
cwtl
pop
ret
shrb
pusha
ss
pop
mov
scas
lret
jge
dec
mov
mov
lcall
movsl
icebp
mov
jp
add
ds
out
hlt
test
shrd
mov
icebp
nop
xchg
add
sub
aam
mov
fcmovu
jp
ss
popa
xor
cmpsl
imul
popa
nop
add
pop
jb
or
sbb
js
inc
adc
test
mov
mul
popa
cmp
leave
pushf
and
icebp
mov
fwait
dec
pop
movsl
pop
mov
xchg
enter
mov
rcrb
fnstenv
mov
pop
mov
loop
sar
add
cltd
push
xor
dec
mov
jnp
daa
mov
movsb
and
aam
roll
push
outsl
and
das
incl
add
inc
adc
sbb
scas
cmc
inc
enter
mov
test
mov
pop
push
xchg
mov
in
lret
cmp
rcrl
lret
push
out
sbbl
push
pop
pushf
imul
jne
mov
push
es
mov
mov
sbb
dec
pop
imul
out
nop
and
std
ja
fwait
test
pop
cmp
xor
or
cmp
icebp
nop
add
aad
shrl
pop
sti
push
xor
mov
and
xor
mov
cli
cwtl
and
add
cli
in
inc
and
push
sbb
inc
mov
mov
lret
mov
out
movsl
ljmp
and
inc
repz
mov
mov
cmp
xchg
loop
iret
jle
hlt
jno
test
add
or
repnz
sub
sub
repnz
xchg
leave
or
scas
sub
dec
sbb
ljmp
sbb
jmp
into
push
mov
cmp
inc
cs
mov
inc
fdivs
xlat
pop
aaa
pop
and
adc
test
mov
and
subl
mov
push
stos
loopne
mov
xor
add
cmp
push
cltd
loopne
pop
mov
mov
sub
lcall
and
shlb
add
incl
int
das
xchg
pop
or
and
push
lods
push
xor
imul
popf
out
addr16
sub
mov
ret
ds
mov
gs
cmp
dec
and
daa
inc
mov
pop
mov
push
leave
flds
cmp
mov
fwait
addr16
sub
popa
andl
mov
sbb
dec
stc
pusha
push
lea
push
push
lcall
add
push
nop
jl
mov
xchg
and
stc
test
cltd
dec
loop
xchg
addr16
aam
repnz
add
jecxz
add
aaa
jae
sub
add
inc
pusha
xchg
sbb
push
dec
xchg
mov
je
jg
mov
mov
into
and
xchg
pop
inc
dec
and
xor
xchg
stos
jne
push
xchg
adc
inc
sub
ljmp
jno
mov
int
out
es
add
fnstsw
movsl
and
pop
dec
pop
push
idivl
cmpsb
push
enter
xor
pushf
mov
push
jnp
arpl
and
lods
outsl
bound
inc
incb
int3
inc
adcl
outsl
out
fs
dec
mov
jp
xchg
push
rclb
jp
insb
mov
arpl
mov
int
insb
jle
mov
push
int3
mov
xchg
daa
imul
clc
movsb
popf
push
xchg
call
dec
xor
shlb
divl
subl
xor
sbb
je
ficoms
leave
aaa
repz
or
popa
enter
stos
sub
call
out
stos
les
inc
jle
jmp
adc
xchg
inc
mov
fadds
mov
leave
popa
dec
sbb
adc
popf
ret
mov
into
aaa
pop
lea
pop
mov
add
xchg
test
jbe
push
repz
rclb
adc
dec
push
jns
xorl
and
in
dec
imul
insb
cmp
mov
movsb
jnp
mov
mov
jp
sbb
dec
scas
fwait
aas
dec
pop
or
dec
mov
stos
push
in
lock
xchg
andb
mov
cmp
shr
push
mov
scas
sbb
push
adc
es
je
inc
xchg
adc
hlt
lea
in
data16
inc
push
movsb
stos
push
cmpsl
sbb
and
xorl
mov
jle
ja
mov
push
aam
stos
push
or
jbe
and
or
sbb
inc
loopne
cmp
mov
lea
hlt
mov
sbb
mov
xor
sbb
dec
jo
stos
rcrl
stc
jae
aas
ljmp
cmovns
push
in
or
rcrb
scas
frstor
sbb
pop
pop
mov
pusha
adc
fsubrs
mov
test
pop
sub
cmp
or
out
mov
inc
push
jl
test
pop
inc
in
xchg
fcmovnb
adc
insl
inc
icebp
enter
xchg
xchg
dec
lahf
enter
fsubl
lret
inc
scas
gs
clc
sarb
ljmp
and
nop
cmpsl
add
lods
popa
add
loop
rcll
repnz
fs
ja
push
daa
inc
test
fwait
cmp
or
data16
negl
fwait
pop
jbe
pop
cmc
jle
or
mov
and
dec
bound
inc
add
js
xor
and
dec
out
fs
xchg
mov
ds
aas
stc
adcl
movsb
xor
push
jmp
push
loopne
xchg
pop
out
fists
jmp
mov
cltd
fs
lret
sbb
adcb
imul
xchg
or
cwtl
jo
rcll
dec
lcall
mov
inc
adc
pop
xchg
mov
jge
out
xchg
imul
scas
ret
mov
test
cwtl
rorl
add
and
pop
stc
jge
fdivl
pop
add
popf
dec
icebp
xchg
pop
ret
push
lods
shlb
daa
push
jp
xchg
lea
push
or
iret
jne
sti
sbb
xchg
dec
or
sbb
pushf
insl
lret
mov
fwait
mov
fs
cltd
fisubrs
lret
and
and
pop
cld
lcall
cwtl
das
cwtl
sbb
je
fsub
mov
insl
and
pop
sti
shrl
jl
jo
xor
mov
xchg
sub
sbb
dec
into
imul
les
sub
mov
in
incb
add
pop
lahf
xchg
push
pop
lods
mov
jle
pusha
int
sub
aaa
mov
dec
fdivrs
jp
adc
rcll
push
adc
cpuid
out
inc
int
inc
test
repnz
push
jge
rorl
pop
cmp
std
xchg
addr16
lahf
jg
jge
mov
stc
nop
mov
or
xchg
lcall
bound
leave
insl
inc
out
inc
addr16
imull
xor
inc
jmp
mov
xchg
dec
repnz
jae
jae
arpl
mov
sbb
jmp
sbb
add
leave
xchg
mov
mov
adc
sub
cltd
call
xchg
andb
push
jno
xchg
mov
into
pusha
loopne
lret
lret
mulb
test
push
lods
mov
adc
push
dec
testb
jno
jecxz
dec
xor
scas
inc
jge
add
dec
mov
jmp
and
pop
imul
inc
pushf
jno
sub
add
leave
clc
and
xor
fcompl
sub
mov
cmc
movb
aam
aam
or
icebp
mov
mov
fcmovbe
push
xor
fwait
cmpsl
ds
std
test
lret
add
dec
lahf
add
cmp
lods
inc
xchg
and
stos
sbb
rclb
xchg
and
and
loopne
adc
add
and
xchg
call
orb
repnz
jmp
inc
clc
xor
out
xor
fisttps
and
into
out
ret
ficoms
sub
mov
xor
cmpsl
andb
ljmp
cmp
and
sub
stc
xchg
push
stos
push
lods
xchg
adc
imul
bound
sti
push
xor
shl
mov
inc
cld
mov
test
xor
inc
aaa
iret
jne
mov
js
pop
add
adc
add
es
push
mov
sub
add
outsb
les
jl
xchg
pop
orl
or
mov
js
adc
iret
add
cmp
sarb
cmp
test
adc
mov
xor
jg
push
mov
icebp
loop
fildll
push
sti
fwait
mov
out
in
int3
jle
scas
lods
xchg
xor
add
mov
cmp
sub
loope
push
mov
sub
nop
stos
adc
es
cmp
sbb
and
and
dec
mov
shll
mov
dec
sub
popa
sub
jno
mov
jmp
pop
test
add
fs
pop
and
sahf
push
mov
lock
mov
lea
bound
icebp
stos
cmpsb
data16
inc
inc
bound
in
aam
mov
xor
in
jl
xchg
xchg
or
dec
jns
fbstp
cmp
adc
mov
loopne
fistps
pop
and
xchg
jae
lret
sahf
pop
fnstcw
out
mov
mov
aas
in
call
add
adc
rclb
adc
movb
sbb
push
ficoml
scas
sub
scas
fidivrs
popf
and
sti
movsb
sub
aad
in
adc
rclb
add
adc
push
xchg
jne
adc
pop
or
mull
sub
in
roll
adc
arpl
mov
ds
jae
add
lds
stc
inc
pop
lds
xchg
in
jb
sub
push
negl
scas
mov
push
into
jl
out
popl
gs
jp
paddq
xchg
hlt
mov
sbb
sbb
dec
mov
sub
imul
adc
xorb
inc
mov
aas
dec
xor
lret
data16
sub
mov
pop
icebp
xlat
hlt
ret
mov
push
cs
jo
and
int
push
adc
xor
ja
ret
push
aad
test
lock
inc
fistl
fisubl
mov
push
xchg
scas
or
sbbb
add
mov
add
fwait
jl
popa
jns
inc
popf
les
pop
pop
jo
es
pop
std
lcall
icebp
mov
or
push
jle
pmulhw
mov
mov
mov
mov
outsl
pop
mov
inc
mov
mov
adc
subb
cwtl
push
mov
or
out
fnstenv
pop
push
xchg
sub
mov
xor
add
ret
cmp
movsb
pop
sub
icebp
sbb
daa
inc
mov
out
xchg
mov
aad
ljmp
andl
notb
mov
pushf
sbb
push
ret
cli
add
inc
sbb
lret
jle
inc
sub
and
cltd
dec
jbe
dec
mov
jg
pop
loop
adc
push
sub
inc
cld
mov
xchg
icebp
lret
fsubrl
fiadds
cltd
add
mov
mov
ret
repz
sahf
mov
lret
mov
out
inc
sti
fs
mov
dec
mov
dec
pop
and
adc
lock
call
mov
in
inc
pop
orb
outsb
sbb
add
jge
adc
mov
rorl
add
popa
inc
push
adc
daa
fadds
sbb
cli
shrl
push
pop
ret
sub
jecxz
imul
xor
mov
sub
mov
jmp
pinsrw
into
jbe
add
push
mov
inc
fucomi
jae
cmp
push
mov
add
xor
into
push
and
xchg
inc
xchg
orb
nop
out
das
cs
mov
sbb
test
sub
insl
ds
xor
xor
mov
mov
pop
cld
fbstp
dec
pop
pop
cmp
inc
push
es
mov
sbb
mov
xchg
push
mov
inc
jne
paddw
leave
pusha
sbb
mov
jp
fs
clc
pop
outsl
add
mov
sbbb
sahf
xor
jns
cmp
in
add
mov
shll
jecxz
movsb
inc
cmpl
xchg
jle
std
push
imul
mov
jp
decl
or
jmp
jae
dec
xor
rcrb
push
jne
cmpsl
andb
mov
xor
insb
aam
push
push
mov
xchg
and
jecxz
push
dec
push
xor
dec
xor
xchg
push
sub
inc
mov
mov
inc
lcall
push
ret
xchg
stos
cmp
xorl
add
push
fwait
mov
mov
icebp
dec
push
pop
je
ss
pushf
cmpsb
cmp
cmpsl
jns
scas
push
xor
lds
pop
sub
stos
jecxz
sbb
mov
add
xchg
rcrb
sti
and
andl
in
out
mov
inc
loopne
jl
sbb
test
lock
inc
cmp
jle
dec
mov
or
stos
xor
in
sbbl
inc
or
adc
and
ficoms
iret
cmpxchg
aaa
push
or
jge
xchg
pop
xchg
cs
inc
jl
daa
stos
cmp
icebp
fisubs
adc
mov
jecxz
out
repz
sub
nop
daa
imull
fwait
bound
xlat
stos
sub
cli
pop
int3
gs
or
sti
xor
mov
mov
mov
aas
aam
jno
pop
xor
sbb
xchg
push
mov
add
js
pop
imul
lea
stos
adc
sub
scas
aas
ds
int
cwtl
mov
mul
into
out
and
subb
cmp
leave
push
out
shlw
fisubs
rdmsr
pusha
jmp
loop
jp
xor
mov
out
aas
xchg
and
test
cs
addr16
mov
arpl
test
flds
jmp
das
call
add
cmpb
mov
xor
xchg
imul
popf
orb
adc
push
popf
jmp
or
int3
mov
xchg
inc
scas
adc
popa
mov
rcrl
adc
loopne
add
adc
sbb
jmp
int
adc
in
xor
pushf
mov
shl
mov
sub
inc
pop
mov
cli
sbb
sbb
loop
xor
cmp
cmpsl
data16
push
cwtl
enter
adc
mov
push
xor
outsl
add
sbb
das
testb
push
test
push
xor
jp
subb
inc
fsts
cmpsl
xor
jns
mov
rcrl
pusha
mov
movsl
xorb
inc
sbb
adc
jecxz
mov
pop
xchg
in
pop
std
gs
push
or
sbb
xlat
xchg
sub
insb
pushf
mov
jge
outsb
add
jo
mov
aam
pop
out
arpl
xchg
push
jbe
dec
mov
dec
out
fwait
cmpsl
and
inc
stos
fnstsw
icebp
lods
cmp
fsubs
push
sub
iret
cwtl
cmpsb
in
test
push
ljmp
dec
mov
jb
xor
mov
cmp
sbb
jno
stc
nop
pop
sub
jge
mov
jg
stos
add
insb
cld
xchg
sahf
test
fcompp
mov
in
ds
pop
xor
push
call
int3
fidivl
xor
mov
jg
shrl
out
pop
jnp
int
int
add
mov
pusha
in
dec
mov
int3
cmc
jecxz
and
cmp
aaa
mov
push
jmp
je
cmpb
cmp
mov
mov
xor
mov
sarb
ja
stc
and
inc
jo
ljmp
jl
cmpsb
xchg
sub
adc
fsubrl
jge
sbb
mov
xrelease
sub
mov
cs
adc
imul
pop
fldenv
push
cli
enter
leave
insb
adc
stc
adc
push
addr16
sub
andl
xor
gs
mov
xchg
push
je
test
inc
xchg
add
pop
bound
mov
out
jnp
push
cmp
mov
jle
stos
test
mov
add
sub
outsl
ret
jo
pop
pop
insb
xor
push
jmp
adc
fldenv
add
adc
inc
xor
in
rorl
pop
in
stos
inc
push
sbb
sbb
leave
pusha
test
cmp
cmp
loop
adc
js
mov
or
cmp
jp
push
lahf
lock
or
mov
jnp
pop
ret
mov
fsubrl
cmp
xchg
outsb
mov
pop
add
jnp
sub
jne
jp
lahf
lods
cwtl
clc
adcl
adc
jg
and
dec
movb
shl
jno
out
cld
and
notl
push
inc
loopne
scas
fbld
test
jo
jb
pop
lcall
adc
push
sbb
mov
lea
xchg
jg
push
or
pop
cli
push
je
xchg
mov
dec
fnstcw
lds
pop
imul
and
sbbl
jns
in
jbe
outsb
pop
xchg
adcl
call
lds
cmpsb
adc
pop
sbb
imul
ficoms
push
cmp
mov
dec
std
shl
sbb
mov
push
lret
add
rorl
rcrb
lahf
nop
mov
or
jae
jo
aas
clc
xchg
cltd
or
or
fildll
cmp
adc
lcall
adc
jnp
mov
nop
push
icebp
mov
push
or
cmc
js
xchg
jp
add
stos
push
push
mov
arpl
xor
enter
dec
lret
cmp
mov
xchg
xchg
or
cli
dec
adc
loopne
in
int
add
jg
mov
les
push
push
fimuls
repnz
rcll
in
lcall
push
sbb
add
mov
sbb
mov
sub
adc
jae
adc
mov
sbb
adc
cmp
sbb
dec
ja
das
movsl
sub
ret
mov
clc
jge
hlt
jle
dec
inc
dec
xchg
movsb
cmp
stos
mov
mov
ret
hlt
arpl
cmp
mov
test
jbe
popf
lock
inc
fsubrs
or
shrb
jmp
pusha
lcall
ret
jg
dec
std
into
fwait
pop
roll
insl
sbb
out
cld
cmc
jne
in
lods
add
fndisi(8087
jns
lcall
clc
and
sarb
xor
ror
in
or
mov
cmp
pop
stos
insb
loopne
rcll
mov
mov
testb
push
mov
dec
pop
addr16
xchg
sahf
sub
pushf
aas
pop
xlat
shl
cld
bound
out
icebp
and
popa
leave
xchg
imul
add
fstenv
cmp
mov
and
mov
jg
ret
aad
mov
push
outsl
pop
es
addb
or
std
int3
sbb
xor
sbb
test
mov
dec
lods
fwait
lcall
cwtl
subl
lret
mov
mov
push
jecxz
insl
push
mov
imul
sub
in
popf
lods
cs
lret
into
push
lock
mov
pop
or
or
test
fisubrs
xor
lock
ja
mov
mov
ds
pushf
ds
ja
jmp
adc
mov
mov
es
push
push
add
jg
xchg
mov
fbstp
cmp
add
test
sbb
mov
pop
push
rolb
sub
in
inc
fimuls
mov
push
xor
xchg
xor
outsl
xor
arpl
cli
push
mov
popf
dec
cs
hlt
jp
iret
movsb
jno
cmp
test
js
lea
shrl
pop
mov
enter
mov
imul
mov
pop
and
dec
mov
xor
sub
test
test
daa
cmc
shrb
lret
mov
lret
lock
mov
adc
mov
ss
inc
pusha
inc
adc
lods
or
mov
fbld
add
fwait
xor
mov
xlat
cld
sub
test
imul
xchg
insl
inc
testb
dec
dec
enter
test
mov
add
scas
inc
stos
popf
xchg
pop
pop
jns
pop
pop
outsl
repnz
pop
mov
xor
fisubrl
daa
lock
mov
sub
lret
push
mov
push
cmpsb
xor
or
icebp
rcrl
sub
popa
pop
ficompl
fistpll
int3
jns
adc
cmc
cli
sbb
push
mov
dec
xchg
in
data16
mov
fstps
mov
movsl
jmp
xchg
insb
xor
jle
out
xchg
dec
push
fcmovne
xor
sbb
decb
mov
inc
bound
loopne
popa
icebp
mov
inc
jo
sub
add
aad
fstl
pushf
xor
imul
push
add
cmp
sub
jecxz
inc
mov
xchg
mov
xorb
jmp
push
xchg
cmp
ss
dec
sti
pop
leave
ret
push
cmp
add
and
mov
insb
ss
push
push
or
addl
and
xor
pop
jecxz
mov
and
aad
repnz
sbb
mov
sub
pop
pop
mov
shl
repz
stc
or
cltd
incb
cld
xchg
xor
loopne
and
inc
xor
mov
jb
shrb
adc
lret
mov
sahf
in
inc
data16
adc
lods
data16
addb
or
fisttpl
imul
hlt
xchg
insb
inc
cli
xchg
js
popf
ss
sbb
scas
mov
ret
repz
repz
out
sti
dec
dec
jp
mov
leave
lods
inc
sti
dec
pop
addl
push
ljmp
pop
loope
cmp
in
push
cld
jmp
jg
gs
ja
mov
push
and
inc
mov
jmp
xchg
jp
aas
into
mov
aam
mov
pop
adc
test
cmp
jne
loopne
daa
jmp
out
popf
stc
push
mov
lock
ja
push
pop
int
cmp
bound
push
jno
inc
jle
fists
fnstenv
mov
aas
dec
mov
xor
jecxz
inc
xchg
and
xor
mov
test
popa
outsb
pop
mov
jae
push
rcrb
out
test
jg
jg
push
bound
das
test
cmp
call
adc
sbbl
daa
mov
pop
xchg
into
pop
dec
jno
lcall
cltd
mov
rcrb
cmpsl
int
pop
out
mov
es
rorl
out
jnp
lea
rcrb
into
mov
lret
sti
mov
mov
lock
mov
jno
stos
lods
aas
push
mov
dec
or
add
xor
outsb
cmp
sbb
jle
mov
push
lret
lret
adc
aam
inc
mov
cmp
jae
jbe
daa
cmpsl
lock
cmp
push
xchg
jmp
pop
cmp
in
gs
je
loopne
mov
fidivrl
push
pop
jmp
fdiv
pop
xor
int
jns
aas
cmp
imul
mov
lods
sbb
mov
jg
pop
fldt
mov
xchg
lret
pop
cld
stc
popf
xor
sub
leave
in
jmp
add
xor
pop
or
cmp
mov
sbb
test
mov
sbb
inc
pushf
sbb
mov
add
sub
ss
movsb
fs
cld
adc
in
mov
jecxz
adc
or
scas
jmp
paddusb
fs
xor
enter
add
mov
mov
jecxz
cmp
xchg
or
jecxz
add
mov
cli
cwtl
adc
sbb
lods
adcb
ret
sbb
mov
push
lock
lods
lods
sub
lea
cli
cmpsl
hlt
add
je
shrb
push
and
insb
shr
call
xor
cli
push
sbb
lods
inc
push
push
aaa
fs
lods
xor
xor
rcrl
rclw
subl
out
pop
mov
roll
pop
cmp
jnp
xchg
outsl
mov
fmuls
mov
adc
inc
mov
testl
rorb
mov
inc
repz
pop
and
dec
fildl
xchg
xchg
insb
sub
mov
jo
sbb
adc
popa
scas
leave
sbb
pushf
scas
push
cmp
fwait
xchg
push
insl
mov
add
pusha
add
mov
fisttps
cmp
sub
adc
xlat
sti
repnz
aam
test
inc
jp
fsubs
mov
or
ffreep
add
out
mov
loope
int
popf
jp
out
adc
fwait
and
int3
pop
pop
scas
lods
stos
add
nop
inc
int
dec
out
hlt
int
int3
sub
cmp
enter
nop
xchg
push
jnp
ja
sbb
inc
jbe
ja
push
test
xchg
mov
and
mov
sbb
dec
loope
testb
mov
lret
mov
pop
testb
push
pop
mov
add
xor
pop
iret
fnsave
inc
int3
pop
test
ret
dec
pop
das
cwtl
shr
iret
jl
mov
stos
int3
pop
xor
in
cwtl
mov
push
je
cmpsl
add
roll
mov
daa
and
fidivl
jl
adc
sbb
arpl
pop
xchg
clc
xor
mov
pop
sbb
inc
or
jno
add
fwait
inc
push
jb
xor
jae
sbb
aaa
sbb
out
lea
xor
incb
push
cmc
data16
je
cmpsb
pusha
xchg
mov
dec
mov
movsl
rcrl
cmc
or
arpl
roll
into
xchg
repz
dec
insl
and
iret
jecxz
dec
fdivl
insl
movsb
mov
jmp
add
and
push
xorb
aas
adc
or
aad
mov
jae
pop
fnstsw
jae
ds
jge
stc
loop
sbb
jne
cmpsl
test
sub
push
push
test
jp
rclb
mov
std
mov
in
jl
or
add
pusha
cmp
dec
mov
xor
xchg
sbbb
fnstsw
in
adc
or
idiv
push
xor
and
lods
in
das
mov
mov
stos
in
int
out
cld
mov
lods
xor
adcl
test
dec
dec
xlat
outsl
lret
ljmp
jl
jo
cmp
subb
push
xchg
cmp
jecxz
pop
cwtl
insb
sub
sub
mov
idivl
pop
popf
fsincos
xchg
or
sbb
cmpsl
push
movsl
mov
fsubs
pop
push
es
sbb
jecxz
sub
lahf
scas
mov
mov
or
inc
xchg
sub
jne
xchg
adc
mov
mov
cld
inc
je
aad
outsl
and
mov
out
in
pusha
rclb
jb
aam
mov
enter
cmp
and
inc
jge
mov
out
call
add
out
aas
bound
clc
or
sahf
ss
lret
scas
mov
push
aam
scas
movsb
xor
shlb
in
push
or
aaa
cmp
pop
sahf
cs
mov
pop
out
add
rcrb
lea
incl
sti
or
mov
pusha
in
roll
add
lods
xor
push
and
lret
adc
inc
loope
cli
sbb
and
xchg
mov
test
imul
add
push
pop
adc
dec
int
sbb
sub
and
ljmp
add
outsb
and
scas
mov
loopne
les
jns
cmp
mov
jmp
dec
xchg
psrld
iret
mov
outsl
inc
lahf
and
aas
jmp
lea
in
je
clc
and
jb
imul
adc
mov
push
jo
and
push
inc
decb
movsl
dec
mov
cmp
jmp
cltd
inc
call
nop
fistpl
mov
dec
sbb
bound
cmpsb
jmp
arpl
or
inc
xor
inc
daa
adc
cs
pop
xlat
or
leave
lock
das
loop
dec
in
jg
hlt
mov
imul
mov
mov
xor
xor
cli
lcall
and
stc
pushf
shr
jno
adc
hlt
sbb
mov
ret
inc
fstpt
push
or
clc
cmp
nop
mov
stc
pop
push
movsl
loope
cwtl
stos
std
add
arpl
xchg
push
call
or
cmc
leave
dec
mov
adc
or
lahf
mul
mov
mov
inc
in
je
cmp
push
inc
mov
xchg
or
icebp
popf
pop
sub
or
mov
je
jo
jo
jne
fistpl
insl
mov
dec
jecxz
addr16
push
dec
push
jnp
mov
insb
sbb
dec
dec
mov
adc
sub
fdivs
xchg
push
stos
jp
sbb
in
ret
out
nop
in
insb
xor
xor
insl
out
jns
xchg
xchg
mov
test
xor
std
sbb
movsb
aaa
cmp
iret
or
fcomps
pop
mov
cld
mov
jg
lahf
mov
shlb
inc
pop
out
pop
in
inc
scas
adc
fsubs
add
orl
sub
push
fistpll
add
cmc
mov
sbb
xchg
cmp
adc
into
mov
mov
sbb
sbb
xchg
insb
mov
popa
jbe
push
inc
in
test
test
mov
xchg
adc
shll
imul
xchg
jmp
add
je
dec
jecxz
xchg
lock
sub
mov
int
push
sbb
addr16
js
sti
sub
push
lea
adc
cltd
aam
stc
cmp
je
lock
ret
pop
loope
xorl
mov
insb
and
jecxz
ja
cwtl
dec
cmp
pusha
xlat
or
xchg
inc
mov
cli
lret
mov
xchg
mov
mov
sbb
add
inc
stos
cltd
sub
divl
fcmovnb
push
je
or
lcall
push
xor
mov
pop
lretw
inc
xor
adc
sbb
mov
add
mov
push
inc
inc
lds
aad
scas
rolb
add
cmc
mov
lods
pop
enter
stos
push
jns
jno
das
stos
xchg
scas
mov
mov
fstpt
push
mov
adc
outsb
adc
jge
pushf
stc
jl
sbb
push
xor
into
fnstenv
pop
sbb
adc
aam
pop
adc
xchg
jge
mov
out
inc
push
je
into
or
dec
orb
rolb
nop
pop
cltd
dec
mov
or
sti
in
cmp
pop
sub
or
sub
pop
movsl
lds
or
xor
iret
data16
push
ja
xchg
out
mov
cmpsl
nop
sub
dec
jle
jbe
mov
sub
lea
xor
xor
out
and
sub
mov
cwtl
outsb
scas
dec
rcll
aad
aaa
cld
je
pop
fwait
pop
outsb
loope
enter
rclb
xchg
mov
scas
and
xchg
xor
mov
out
daa
mov
mov
repz
push
mov
paddw
and
and
push
aas
inc
popa
std
daa
jnp
frstor
stos
xchg
test
pop
icebp
sub
js
adc
mov
push
push
adc
dec
imul
imul
sti
push
outsb
adc
fsubrs
and
insb
push
repnz
test
or
jge
mov
or
pusha
pop
fst
jnp
leave
jne
fiadds
sbbl
cmp
jl
fsubr
repz
loopne
adc
lretw
je
jne
adc
popa
into
push
xchg
orl
clc
cmp
sub
fidivs
mov
jmp
inc
push
gs
and
fs
fsubl
or
pop
mov
iret
jecxz
mov
pop
jb
push
aas
or
jns
and
cs
or
cltd
jnp
sbb
cmpsb
test
cmp
mov
loop
call
push
aaa
sub
sub
pop
cwtl
das
mov
ret
xor
lret
sub
sbb
aad
xlat
push
sub
movsl
aas
xchg
push
pop
jmp
push
or
dec
pop
jecxz
cli
aam
inc
fbstp
cmp
inc
inc
mov
pop
add
sbb
jmp
mov
ret
ficoms
fadds
mov
bound
inc
jns
mov
pop
int3
pushl
out
popf
jno
ljmp
add
add
mov
add
fistps
cmp
inc
cmpsb
jge
adc
lahf
ss
or
dec
rcll
jno
shll
or
mov
inc
xor
add
movsl
fsubl
inc
and
jae
mov
repnz
mov
stos
lret
inc
push
bound
dec
scas
mov
push
or
add
mov
push
ftst
pop
sar
imul
and
aam
repz
addr16
cli
mov
jle
dec
dec
adcb
aas
inc
call
add
or
out
cld
jae
pop
xchg
test
addl
dec
dec
add
pop
push
mov
scas
sub
fstpl
pop
ret
cwtl
mov
fsubl
ljmp
mov
cmp
jne
mov
lahf
aad
call
daa
into
jb
ror
xor
imul
mov
dec
fisubs
shll
xlat
push
lock
push
inc
or
adc
or
dec
js
sub
mov
in
leave
fcoms
mov
out
scas
sbb
mov
fdivs
jg
addr16
sub
pop
mov
dec
pusha
jb
cmpsb
and
xchg
and
out
jno
jae
es
jle
pop
add
add
int3
jns
mov
lods
adc
mov
insl
sbb
test
mov
loop
into
pushf
cli
fdivl
inc
push
or
test
test
fcomi
cmc
mov
cld
pop
movsb
xor
cmp
rol
add
lahf
cmpsl
dec
sub
mov
adc
inc
mov
jae
pop
mov
test
aad
aam
outsb
jbe
pop
mov
pop
xor
out
mov
push
lcall
push
es
or
stos
insl
popa
fsubr
push
or
test
pop
and
sbb
out
mov
rol
fnstcw
sub
mov
add
push
jp
mov
inc
dec
fldcw
or
inc
aaa
loope
fwait
sbb
adc
fbld
cwtd
xor
jp
shrl
or
stos
std
daa
xor
push
push
mov
jl
dec
loop
fisubs
mov
mov
or
xlat
inc
adcb
jbe
xchg
insl
sbb
mov
mulb
scas
mov
rcl
pop
fstps
inc
mov
and
scas
shrb
loope
aad
add
pop
cmp
lret
scas
ljmp
call
es
iret
test
jne
xlat
lods
shlb
int
sub
ja
adc
or
fs
jle
mov
enter
scas
andb
shll
mov
loop
xchg
pop
fnsave
or
loopne
pop
daa
repnz
jne
out
xor
adc
jae
pop
js
inc
imul
jge
dec
mov
aam
nop
pusha
aaa
mov
mov
push
sub
and
inc
pop
insl
repnz
cmp
mov
jno
cmpsl
outsb
xchg
pop
outsb
jl
repz
add
adc
xchg
mov
iret
adc
sahf
into
mov
mov
sbb
ja
rcrl
stos
int
nop
jb
pusha
divl
daa
inc
es
add
dec
ror
pusha
push
push
adc
jae
dec
push
lods
fidivl
jbe
cltd
dec
clc
aas
shrb
or
loope
out
adc
into
mov
subb
xchg
popa
ds
mov
jecxz
sub
pusha
fwait
mov
push
and
cmp
xsha1
cmpsb
push
pop
pusha
outsl
cmp
dec
xchg
pop
cmc
push
add
movsb
sbb
mov
sub
and
pusha
mov
sub
iret
shll
sub
push
mov
push
mov
jnp
push
scas
fsubrl
push
dec
inc
mov
out
cld
hlt
mov
out
insl
xchg
ja
shlb
inc
into
sub
out
les
loop
cmp
push
fistpll
add
enter
out
fs
addr16
mov
or
iret
sahf
xor
xor
adc
lret
rolb
rcr
xchg
sub
aaa
fadd
bound
loope
lods
fstl
inc
stc
xor
xor
push
out
push
xchg
adc
out
repnz
cli
lret
cmp
dec
popa
inc
sub
out
sub
dec
xchg
sub
and
mov
dec
sbb
jle
inc
pop
cli
or
stos
push
dec
pop
cmp
insl
into
aam
out
jecxz
hlt
xchg
xor
sbb
out
push
lods
mov
mov
adcb
mov
sbb
fists
inc
xchg
cmp
rorb
xor
pop
mov
lahf
and
sbb
push
iret
stc
arpl
fisubs
cmp
xor
pop
inc
adc
jb
jae
pop
scas
dec
lahf
push
cmp
cli
nop
pop
jp
fwait
jnp
push
xor
movsl
bound
in
sbbl
es
pop
cmc
lods
in
jmp
inc
jns
imul
imul
das
add
es
fdivr
cmp
sub
jnp
hlt
insb
das
jecxz
adc
stc
cmpsl
xor
or
and
pop
pop
mov
and
ror
cld
test
xchg
push
inc
sub
out
std
jecxz
xchg
add
hlt
int
mov
cmpsl
cmp
push
mov
mov
popl
in
out
lds
add
sub
scas
sub
fists
mov
mov
push
imul
dec
loopne
push
addr16
and
call
test
jge
jb
out
mov
adc
stos
xor
mov
pop
dec
popa
mov
or
cmp
mov
inc
or
sub
cmp
mov
mull
mov
push
adc
xchg
xor
cmc
pop
ljmp
testl
push
js
test
data16
into
leave
fs
in
imul
push
sbbl
xor
jge
jne
xor
dec
test
pop
inc
pop
inc
daa
inc
jnp
push
cmc
cmp
out
xchg
inc
mov
divl
xor
adc
inc
inc
mov
push
mov
xchg
andb
pushf
in
aaa
cmp
icebp
popa
xor
or
adc
push
jmp
and
adc
clc
and
push
stc
fwait
pop
dec
mov
cmc
stc
nop
daa
pop
adc
int3
call
jno
sub
cli
xor
and
mov
mov
pushf
dec
fs
fnsave
cmp
lahf
roll
dec
adc
pop
ds
xchg
cmp
neg
lret
push
sbb
jbe
movsb
cmp
xchg
test
or
cmpsl
test
sbb
aas
jle
or
scas
sub
loopne
insl
pop
repz
push
mov
xor
dec
xlat
lea
scas
and
call
bound
xchg
mov
push
push
jmp
inc
jnp
jne
jb
test
lods
in
scas
adc
notb
test
cs
xor
cmpsl
andl
gs
jmp
mov
jno
sub
push
call
negl
jo
add
popa
mov
cwtl
jno
cmp
xor
sub
mov
add
inc
fyl2x
sar
push
fisubl
or
dec
and
jae
xor
mov
mov
cmp
test
xchg
rorl
adc
and
or
or
fstpl
mov
xor
ljmp
push
stos
sub
mov
add
jmp
push
lods
bound
cmpl
daa
mov
dec
jge
mov
mov
and
sbb
cmp
jb
pop
mov
stc
and
cmpsl
ja
mov
ljmp
movsb
in
orl
adc
pop
cld
xchg
inc
into
lds
out
test
lcall
ficoms
mov
fnsave
pop
add
mov
roll
pushf
mov
sub
xor
dec
pop
dec
lock
inc
jp
sahf
in
fwait
leave
mov
stc
inc
mov
ja
mov
ret
imul
aam
scas
inc
adc
loope
dec
mov
add
sbb
lahf
je
jne
xchg
scas
jle
xor
aam
sbb
lods
xor
jnp
in
sbbb
repnz
push
ljmp
in
mov
sbb
std
mov
adc
mov
dec
aaa
movsl
ja
jae
shll
rclb
add
mov
lcall
sbb
sbbl
dec
xchg
into
aam
lahf
ret
pop
xchg
dec
in
jns
jno
ss
sahf
dec
insb
les
ljmp
cmpb
lea
mov
add
pop
dec
in
jle
movsl
mov
mov
adc
inc
addr16
call
pop
in
xor
das
das
pcmpgtw
fsubrp
jae
jne
in
adc
sub
mov
pushf
sarl
or
enter
pop
test
push
ja
in
daa
dec
fcos
mov
mov
xchg
jnp
adc
and
mov
outsb
jno
andl
shr
push
movsb
push
mov
and
mov
and
push
xchg
jns
adc
in
mov
sar
mov
je
adc
inc
mov
inc
cmpsl
addr16
fimull
sbb
mov
lcall
rcll
lcall
iret
jle
cmpsb
js
fidivs
addr16
add
or
stc
push
adc
or
ss
aam
fisubrs
cmp
xchg
repz
push
pop
mov
push
pop
jmp
fidivrs
icebp
xchg
jno
xchg
rcr
movsb
inc
fdivl
pop
icebp
lock
mov
or
xor
and
addl
stos
fdivrl
stos
jmp
arpl
mov
sarl
and
mov
ljmp
pop
dec
sbb
repz
addb
lock
je
repnz
sti
or
xor
bound
xor
imul
pop
daa
arpl
dec
stc
and
pushf
nop
xor
ret
or
bound
sbb
xchg
mov
cmp
inc
in
jp
cs
test
std
stos
xchg
in
leave
fistpl
dec
and
mov
sub
rorb
cmp
xchg
or
stos
cwtl
jp
clc
dec
dec
inc
lret
push
sbb
and
mov
sbbl
fdivrs
adcl
pop
and
push
data16
sbb
bound
loope
and
frstor
insb
popa
sti
mov
cmc
lcall
loopne
lcall
cmp
mov
mov
data16
jp
mov
js
lods
iret
add
push
enter
test
jne
outsl
push
mov
mov
or
pop
idivb
ljmp
ss
jge
in
scas
ds
xchg
cld
popf
into
in
sbb
and
inc
aam
aam
xchg
idivb
fiaddl
or
addr16
imul
dec
mov
inc
pop
lcall
ljmp
inc
hlt
mov
pop
inc
ficoml
sbb
or
xor
in
inc
and
scas
xchg
jo
pop
sub
enter
test
es
arpl
mov
jl
fnstcw
push
add
data16
aad
in
mov
lahf
pop
outsl
rcll
or
cmpsb
nop
add
xlat
adc
pop
jo
sub
mov
adc
pop
inc
or
adc
adc
mov
cmpsb
mov
fcomps
jp
fsubs
adc
gs
loop
xor
push
jp
push
test
add
popf
adc
lods
aaa
or
and
xor
frstor
inc
ret
fbstp
cltd
jae
fwait
xor
push
xor
cwtl
add
pop
cmpsb
xor
lock
enter
out
mov
das
push
cli
mov
push
adc
js
popf
cltd
rcrl
sub
push
push
test
pop
push
jmp
mov
inc
in
xchg
sub
int
not
jnp
cmc
jecxz
dec
or
jl
pop
mov
xchg
clc
mov
or
cld
ret
loopne
hlt
sbb
mov
inc
add
adc
xchg
sub
outsb
lret
imul
xor
test
stc
pop
roll
popa
mov
inc
sbb
test
sub
xor
pop
in
or
cmp
push
loop
leave
lcall
sarb
movsl
xlat
imul
fdiv
mov
or
inc
or
repz
mov
add
sbb
call
jge
stc
nop
sub
int3
xor
shrb
repnz
dec
lcall
mov
cltd
inc
fimull
jno
pop
movsb
xchg
sub
setno
jle
xchg
sub
adc
mov
mov
cli
xchg
xchg
pop
and
xchg
sti
jmp
ljmp
pop
adc
ds
mov
js
dec
mov
cmp
fbstp
ret
pop
imul
push
dec
enter
mov
fadds
pop
subss
xor
nop
mov
xchg
xor
jl
in
add
popa
sbb
jle
xchg
pop
popa
pop
cli
adc
aam
repnz
push
jns
test
das
test
outsb
fsubrs
adc
mov
fs
cld
inc
mov
out
and
jnp
aaa
pop
out
shrl
jo
or
pop
jnp
push
es
pop
pop
insb
lret
mov
fs
jno
ret
push
jl
ret
push
lods
cmp
movsl
mov
or
pushf
add
jns
push
mov
mov
push
ss
fwait
ds
ja
fsubl
jno
icebp
fidivrl
lret
cmpsb
test
and
mov
shlb
fwait
pop
sbb
cs
cmpsb
pop
push
dec
movl
pusha
shl
cmp
xlat
or
mov
lods
call
bound
stc
push
mov
or
pop
xchg
xor
dec
out
adc
adc
call
and
pop
jae
lea
int3
test
dec
popf
clc
cmp
cmp
repnz
stc
stos
fisubrl
les
mov
mov
mov
cltd
in
cmp
lahf
repnz
fldt
testb
out
call
sbb
into
je
dec
ret
data16
pop
imul
push
daa
add
cld
ret
xlat
inc
mov
js
outsl
ret
mov
sub
ret
repz
mov
fisubl
xor
pop
cmc
push
rcr
rcrl
int
or
push
test
xor
and
xlat
mov
rcl
fldenv
add
arpl
and
adc
lahf
addl
fstp
test
jg
inc
add
xor
cli
add
sbb
push
adc
push
inc
repz
inc
call
or
in
jle
mov
xor
mov
inc
dec
push
pushf
sub
rorb
loopne
xor
adc
pop
pop
mov
es
mov
jp
outsb
xor
mov
sub
addr16
icebp
sbb
jp
lahf
fwait
lock
xchg
cmpsb
test
cmp
in
nop
imul
jo
sub
loop
and
mov
and
mov
mov
es
maxps
jnp
pop
out
popl
iret
ja
jbe
out
fwait
mov
xchg
pop
mov
sahf
loope
sbb
fiaddl
scas
popf
mov
xchg
xor
jb
dec
push
sub
pop
push
dec
dec
mov
pusha
xor
in
push
mov
add
xlat
sbb
jmp
sbbl
lret
cld
sub
lock
in
int
xor
stos
xlat
sub
inc
push
and
js
sbb
ret
jns
call
jmp
xchg
ja
stc
lock
addl
mov
scas
cltd
add
add
lret
movsb
cmp
and
push
xchg
sbb
gs
mov
loope
add
sub
ret
sub
ljmp
movsb
push
cmpsb
cmp
shlb
sbb
loop
pushf
push
pop
mov
fwait
cmp
bound
sti
test
shlb
mov
xorl
lcall
sbb
jae
aas
andb
aas
insb
shlb
lret
mov
jae
jne
scas
fsubrs
and
sbb
test
jns
mov
popf
xchg
mov
test
out
pop
and
pop
ret
mov
out
movsb
dec
arpl
in
int
mulb
loop
int3
add
ds
insb
mov
notb
pop
pop
pop
mov
je
mov
clc
push
ja
test
outsl
xor
add
push
movsl
test
sbb
adc
sbb
int3
adc
xchg
cs
and
pop
repnz
jg
cmp
and
xchg
xor
imul
adc
xchg
xchg
mov
imul
loop
jl
pop
or
popf
cmp
xchg
js
mov
xchg
xor
and
fwait
pop
es
pop
mov
push
aas
into
or
cmp
ret
sarb
aaa
inc
and
int
imul
jnp
mov
push
adc
adc
bound
sahf
jno
hlt
decb
leave
dec
xchg
fistps
or
or
sub
fdivs
sub
inc
inc
mov
mov
and
and
fstps
loop
jae
out
mov
fnstenv
mov
frstor
test
aaa
aas
sub
arpl
dec
adcb
push
sub
xchg
mov
test
aam
std
add
pushf
cmpsl
loope
popf
xchg
shlb
add
push
test
inc
fs
or
xchg
adc
aas
bound
xchg
popf
sbb
js
push
cmp
jnp
xchg
call
pusha
andb
xor
jno
push
sbb
inc
orl
and
adc
les
popf
cmp
xchg
sub
dec
out
mov
in
mov
lea
jmp
sbb
lea
jp
mov
insl
enter
jno
aaa
or
fistps
test
aad
and
sti
lds
add
xor
xor
inc
inc
ret
mov
pop
pand
orl
xchg
pop
add
test
lock
nop
movntq
xchg
mov
mov
in
testl
pop
cmp
xchg
push
inc
lahf
sbb
stos
sub
fsubr
fsubrs
int
je
out
dec
call
aas
dec
xchg
dec
or
test
ret
lods
adc
dec
add
scas
shr
dec
inc
sti
into
popa
jno
ds
sbb
imul
add
sub
inc
sub
inc
pop
testb
jae
cli
in
sub
add
pusha
hlt
aad
ljmp
int3
aad
mov
repz
mov
jl
insb
les
and
lcall
and
test
push
ret
adcb
sub
pop
in
jb
in
arpl
pop
ds
jecxz
clc
dec
mov
sub
stc
push
lret
jb
stc
xorb
xchg
xor
mov
js
pop
sbb
xchg
into
xchg
push
dec
jl
mov
inc
xchg
ficoms
xchg
jmp
cmpsl
insb
mov
adc
jmp
inc
mov
aam
sub
sub
movsb
sti
stc
adc
insb
js
and
js
sub
jno
mov
inc
mov
dec
sbb
test
pop
jb
das
test
scas
ss
or
in
jmp
faddl
add
dec
sbb
pop
xchg
add
outsb
sti
cltd
inc
filds
xor
xchg
mov
std
and
loope
jb
mov
dec
mov
stos
jne
push
inc
dec
lods
jno
fldt
shlb
inc
xor
out
jns
fs
inc
push
rolb
sub
mov
push
mov
icebp
dec
dec
fcomi
jle
stc
adc
sub
mov
dec
popa
xor
iret
inc
cmp
xor
hlt
cs
insb
std
push
inc
xor
pop
jo
adc
inc
mov
ss
ret
or
mov
and
push
and
adc
xor
add
pop
pop
iret
lods
popl
int3
lea
sbb
pop
lock
sbb
aam
sub
lret
add
mov
mov
adc
fistpl
mov
int
mov
scas
and
mov
repnz
fwait
xchg
mov
gs
pop
or
xor
mov
rclb
xor
sbb
arpl
shll
dec
sbb
inc
repz
lea
push
xchg
mov
pop
jg
daa
jle
pushf
dec
sbb
xchg
cmp
outsb
je
cmp
repnz
push
cs
add
dec
test
mov
xlat
xchg
dec
into
movsl
std
iret
sub
pop
pop
xor
out
repnz
in
ret
fcomp
out
mov
ja
in
sub
add
arpl
dec
jl,pn
adc
sub
mov
daa
jge
gs
lret
aam
push
movsb
mov
out
aas
mov
outsb
test
cwtl
jae
dec
cmp
mov
push
pushf
jecxz
movsl
dec
loopne
divb
or
jnp
daa
lods
add
inc
or
jp
addr16
cmp
fldcw
mov
stos
jbe
xor
sub
arpl
and
xchg
lret
stos
xchg
test
pop
out
xchg
fdiv
pop
adc
push
aas
movsb
test
fsubr
ljmp
or
xchg
sub
in
test
or
pshufhw
ss
enter
pop
cli
hlt
lods
in
shlb
mov
pop
pop
aaa
je
adc
cwtl
arpl
call
sub
cmp
mov
fcoms
pop
mov
fcmovu
pop
movsl
or
jl
push
fisubrs
int
ds
out
flds
into
xchg
testl
xchg
and
test
fbld
repz
je
sub
adc
imul
ja
xchg
mov
sar
jae
jo
inc
pop
mov
xchg
xchg
movsl
mov
push
idiv
jns
lods
sbb
out
int
mov
sub
inc
add
fisttps
mov
cld
adc
inc
mov
loopne
sbb
cli
mov
ja
lret
cwtl
cmp
fdivr
ja
insb
int3
arpl
enter
cmp
jg
mov
int
outsb
dec
pushfw
test
cmc
mov
and
arpl
jg
jbe
mov
ret
jmp
lcall
ret
in
testl
push
jecxz
call
test
arpl
jecxz
mov
cmpsb
cmpsl
jns
jne
aam
das
sbb
adc
imul
pop
iret
mov
iret
loopne
testb
insb
aam
mov
xchg
fisttpl
in
outsb
cmp
jecxz
and
dec
lahf
jnp
xchg
push
mov
and
stc
popa
ret
adc
lcall
inc
popa
xchg
lods
fnstcw
mov
push
fcoml
outsb
cmp
inc
mov
cmp
push
shl
dec
pop
in
repnz
inc
mov
stos
mov
enter
shrl
dec
xor
mov
mov
sarl
fstpt
popf
lods
sbb
push
adc
mov
fdivs
lea
insb
scas
and
fildll
pop
repz
pop
out
gs
call
xor
mov
dec
aam
jle
mov
pop
push
pop
inc
retw
aaa
push
enter
stc
in
movsb
out
xchg
out
leave
fldt
std
sbb
das
stc
imul
adc
js
adc
mov
test
mov
dec
mulb
mov
pushf
and
mov
clc
pop
and
mov
cld
or
aas
or
sti
sub
rorb
add
inc
cmp
das
aad
push
jbe
divb
dec
setp
stos
mull
fists
mov
std
in
pop
jl
cs
cmp
gs
fdivrl
adc
in
lret
push
in
bound
cmpsb
xchg
push
shlb
loope
add
decl
in
not
loope
fwait
lock
cmp
adc
xchg
ret
loope
jmp
aad
loope
popf
add
adc
cmp
jne
icebp
loopne
mov
ja
push
adc
sti
and
and
dec
fisubrl
xor
mov
lds
push
and
inc
lea
adc
sbb
test
leave
push
popf
aam
sbbl
and
inc
fsubrs
or
imul
nop
je
dec
sub
cwtl
add
sub
cmpsb
sbb
add
cmp
dec
mov
jl
stos
out
nop
pop
repz
dec
mov
mov
jg
jnp
addr16
fldcw
add
popa
and
inc
shll
outsl
jnp
sbb
dec
lahf
mov
shrl
jmp
jmp
test
pop
gs
inc
inc
adc
push
fsubs
mov
lret
jb
dec
popaw
sbb
into
push
dec
in
and
or
loop
push
ss
and
mov
in
pop
ret
ret
outsl
jnp
sub
sub
es
fcoms
push
sub
aam
push
lret
fs
outsb
jle
lret
imul
xor
sub
fucomi
push
pop
inc
sub
fidivrs
mov
clc
sahf
inc
es
push
sbb
outsb
lds
or
mov
je
cmp
xchg
in
inc
fdivrl
and
xchg
stos
jmp
mov
inc
movsb
xchg
loopne
scas
mov
cmpsb
jno
fsubl
inc
das
mov
adc
cmp
mov
hlt
mov
mov
test
addb
leave
xor
cmp
xchg
mov
inc
fbld
rol
gs
ja
in
shl
mov
imul
sbb
insb
loopne
and
test
push
inc
lods
and
addr16
mov
and
int3
pop
out
ljmp
in
sub
aaa
fwait
or
xchg
add
push
inc
scas
sub
mov
mov
ret
jecxz
daa
cmp
mov
cwtl
xor
addb
shrb
repz
mov
xor
and
icebp
in
jb
mov
sbb
mov
push
out
lock
mov
cmp
mov
jne
pop
int
mov
shlb
add
dec
jmp
mov
fwait
pushf
xchg
aas
mov
xor
out
jb
push
in
stos
roll
aaa
inc
jb
add
xchg
scas
inc
push
and
sub
mov
xor
jnp
sbb
inc
fistl
cmp
in
cs
out
mov
push
sti
jae
mov
mov
and
cmpsb
jmp
mov
add
push
xchg
cli
fwait
push
mov
js
fdivl
mov
cwtl
pop
pop
call
pop
insl
mov
iret
mov
aas
jno
mov
mov
dec
stc
jg,pt
sbb
data16
cwtl
inc
mov
pusha
inc
sbb
mov
xchg
rorl
push
popf
inc
out
out
shr
and
sarl
and
ja
mov
inc
fcoms
outsl
push
fldcw
dec
fimuls
cli
fcompl
pop
jl
jl
arpl
mov
ret
sbbb
fwait
xchg
jnp
cli
das
push
pop
sub
pop
stos
inc
pop
adc
inc
inc
cmp
adc
sbbl
xchg
and
mov
mov
xchg
ret
addr16
mov
aas
insl
scas
mov
loopne
adc
adc
mov
mov
adc
out
pop
repnz
mov
jns
in
dec
in
push
push
push
mov
loopne
add
lea
xchg
mov
dec
lcall
push
dec
shlb
jo
jns
push
out
adc
enter
sub
cmp
sbb
and
add
int3
fwait
add
mov
sbb
jno
mov
aam
testl
add
nop
inc
popa
hlt
test
sub
stos
or
jnp
popf
in
and
addr16
sbb
icebp
adc
test
mov
lret
jmp
inc
xchg
mov
xorb
cmp
dec
subl
inc
test
not
ror
popf
in
mov
and
pusha
push
mov
out
lds
mov
push
jns
pop
xor
fistpll
inc
lahf
mov
xabort
xchg
inc
inc
cmpsl
aam
push
inc
pop
ret
push
xchg
adc
fsubrs
rol
sahf
stos
and
push
inc
in
or
rcrl
or
test
aad
aad
sub
adc
and
mov
je
mov
add
loope
outsb
sub
add
pop
dec
jp
pop
lock
lods
les
adc
adcb
cmp
cmpsl
ret
xor
scas
cmp
lods
lds
sbb
fstps
jmp
pushf
out
mov
cmp
cmpsb
sub
jne
sahf
andl
mov
cs
lcall
fidivl
mov
outsb
jmp
addr16
or
lea
bound
push
subb
xor
xor
enter
aam
push
and
andl
test
scas
bound
imul
dec
xor
mov
out
int
push
mov
mov
fs
test
adc
lret
sahf
cmp
sub
add
scas
jg
loopne
repz
aam
sub
pop
shlb
mov
dec
push
push
movsl
lock
xchg
add
into
xorl
adc
leave
ret
rol
insl
push
xchg
test
std
stos
scas
icebp
pop
xchg
rcrl
mov
mov
xchg
add
mov
pushf
repnz
arpl
aas
push
jae
jge
test
das
jb
inc
sbb
test
add
jbe
pushf
mov
ror
filds
sub
or
pop
pushf
cli
adc
jl
jge
xchg
mov
out
add
mov
iret
cmp
dec
sbb
pusha
inc
std
push
push
push
loope
mov
add
mov
mov
fisttpll
pop
ja
push
or
or
adc
and
and
mov
lret
fs
lock
xchg
scas
aaa
pop
add
aad
mov
stos
jns
xchg
and
sti
lock
xor
adc
lret
std
ficoms
mov
push
stos
mov
pop
pop
lods
inc
sbb
cmp
sub
jns
mov
popf
pop
adc
push
sub
jne
pop
jp
dec
aam
cmp
sub
dec
dec
stc
mov
jmp
or
nop
jns
test
cli
mov
fs
out
fistpl
addl
sbb
repz
dec
arpl
inc
movsl
cld
hlt
dec
jl,pn
sbb
jg
xchg
or
xor
pop
cli
incb
cld
adc
pop
dec
pop
or
push
vpaddd
mov
push
mov
repz
pop
negl
mov
stc
aam
sar
pop
inc
push
aas
shl
mov
dec
pop
bound
ds
arpl
dec
push
inc
push
imul
loopw
xor
fnstcw
xor
inc
cltd
xor
adc
cmp
in
fildl
xchg
adc
loope
dec
pushf
ret
out
std
jns
dec
outsb
xchg
aam
inc
mov
jnp
in
rcrb
inc
rorl
sbb
cld
push
mov
add
sub
sti
out
mov
notl
push
out
cli
or
add
mov
lods
jns
xchg
fidivl
jo
xchg
faddp
negl
push
lea
sahf
dec
pusha
int3
mov
daa
stc
test
ljmp
xor
push
jo
cwtl
mov
mov
fwait
gs
std
int
xchg
xor
lret
mov
popf
cmpsl
in
outsb
or
icebp
popa
dec
std
sar
mov
pop
cmp
aaa
push
loopne
ljmp
mov
inc
push
stos
fldl
int
inc
xor
frstor
xchg
std
mov
or
hlt
push
sbb
dec
sbb
mov
pop
popl
shrl
xchg
push
jg
in
jb
push
hlt
pop
xor
outsl
pushf
lds
xchg
lock
add
sub
aas
jecxz
fwait
jle
cwtl
mov
ret
pop
lcall
sbb
mov
scas
icebp
jecxz
jno
les
xchg
mov
xor
cwtl
mov
push
jo
mov
rcr
les
jne
insl
out
push
call
test
or
cltd
mov
push
pop
inc
stos
inc
fidivs
out
cmp
mov
pop
jl
add
lahf
idivl
cmp
mov
push
cmp
jns
inc
into
push
pop
add
into
mov
jne
xchg
scas
outsl
and
mov
adc
dec
fmulp
xchg
outsb
test
mov
jecxz
pop
inc
fs
lahf
lea
add
rclb
mov
sbb
pop
mov
sub
dec
adc
and
xchg
pop
popf
jnp
pop
clc
ja
cmp
aam
orb
arpl
outsl
jnp
sub
mov
jae
cmp
sub
negb
dec
pop
out
loop
inc
mov
out
xchg
mov
fisubl
int
bound
dec
sbb
rcr
adc
and
movl
xor
mov
inc
pushf
pop
adc
push
imul
daa
inc
mov
icebp
stc
dec
push
fxch
insb
sti
movsl
cmp
sbb
sbbb
ret
and
add
sbb
nop
fs
fs
movsl
xchg
sub
dec
js
cmp
adc
mov
adc
and
lods
sti
pmaxub
incl
xchg
pop
aad
jecxz
ret
jae
mov
or
stc
jno
aaa
into
lahf
xchg
jp
jl
lods
push
mov
xor
jns
out
ret
jge
insb
imul
scas
sub
dec
bound
hlt
cltd
adc
mov
push
test
push
jmp
mov
jp
outsb
jl
cmpsb
mov
xchg
frstor
push
xchg
rol
dec
add
aam
mov
lds
add
lods
ljmp
lock
lds
test
and
ljmp
xchg
pop
outsb
leave
loope
push
imul
sbb
ljmp
pushf
push
or
and
test
sar
test
popf
mov
sbbl
adc
xchg
fsubrs
outsl
into
outsb
dec
and
gs
cmp
nop
pop
aaa
cmp
inc
arpl
out
repnz
stos
or
fdivrs
cwtl
stos
movsl
cmpsb
cmp
jae
lds
jne
pop
repz
cwtl
das
push
dec
pushl
lret
lahf
aaa
jbe
repnz
fdivl
pop
sti
test
mov
pop
ret
jo
in
mov
and
inc
adc
ss
lods
outsb
fbstp
aam
cmpsl
ja
and
dec
cmpsl
adcb
rcrl
add
pop
icebp
in
mov
je
jmp
xchg
lods
jno
sub
cmpsb
dec
mov
das
xor
sub
shrb
ret
mov
xchg
pop
stos
dec
orl
mov
mov
push
mov
adc
pop
inc
xor
out
pop
lcall
rol
daa
test
xchg
cmpsl
and
scas
adc
pop
in
sti
test
aaa
outsb
scas
add
and
shl
mov
xor
and
in
mov
arpl
loope
mov
subb
scas
push
xlat
das
jnp
mov
mov
inc
inc
popa
inc
add
mov
jecxz
lods
dec
cwtl
mov
addb
adc
push
out
into
loope
nop
imul
repnz
roll
popf
test
imul
jns,pn
pop
jg
jecxz
mov
cmp
push
in
stos
mov
adc
push
mov
xchg
cld
mov
xchg
pop
mov
push
xchg
sub
pop
test
dec
fidivrl
mov
cld
shrb
xchg
cmp
mov
int3
rcrb
loope
xlat
vpmaddwd
enter
je
dec
cmpsl
and
int
enter
ret
pop
mov
ja
icebp
fwait
add
insl
decb
mov
lahf
imul
push
shlb
shll
mov
add
sbb
inc
loopne
xor
pop
xchg
jne
outsb
imul
pop
into
icebp
jne
fnsave
mov
jo
adcl
filds
imul
mov
into
and
and
push
add
or
fnstsw
jg
adc
sti
mov
add
leave
out
sahf
sbb
jecxz
sbb
mov
or
addr16
mov
rol
insl
cmp
add
insb
aaa
pop
cs
aam
mov
in
add
shrb
gs
leave
push
in
dec
sbb
sbb
stos
mov
jmp
jg
out
cmp
imul
rcrb
sbb
cs
cs
fldt
cmp
sbb
fs
popa
inc
repnz
jp
pop
pmaddwd
cmc
mov
mov
sub
dec
xchg
jmp
fwait
adc
mov
or
push
adc
mov
dec
fiaddl
adc
repz
shrb
jb
aam
sub
mov
arpl
pop
add
arpl
xchg
and
sbb
aad
dec
pop
mov
aad
out
jns
in
movsl
jmp
adc
lcall
push
inc
lods
cmp
adcl
fwait
xor
or
push
xchg
jge
into
push
mov
xchg
in
ja
in
cld
lret
test
inc
and
gs
orl
sbb
call
bound
mov
sub
xor
fildll
add
push
add
push
fisubl
sti
xchg
or
dec
aad
cmp
jge
data16
sbb
test
sti
mov
stc
bound
inc
dec
loop
xor
inc
lods
sub
test
or
pop
xor
shrb
call
dec
and
js
lds
int
outsl
or
mov
bound
mov
iret
sub
jge
pop
lcall
fcmovnbe
mov
out
mov
mov
adc
fwait
add
xchg
je
test
fsts
inc
add
xchg
out
dec
pop
xor
adc
dec
mov
sbb
mov
and
jle
mov
jl
and
jmp
in
mov
rcl
int3
mov
je
push
add
notl
inc
mov
jno
jne
or
xor
pop
mov
shll
lcall
xor
jecxz
lea
mov
lock
dec
pushf
xor
movsb
mov
pushf
inc
loop
adcb
in
jp
dec
mov
test
push
mov
aam
push
mov
arpl
pop
pop
cmc
jns
push
mov
add
clc
jecxz
imul
sub
xor
dec
mov
loopne
push
loop
mov
out
cmp
scas
stc
mov
loop
incb
and
xchg
add
adc
dec
ljmp
movsb
int
add
mov
sbb
cltd
jae
int3
outsl
or
testb
adc
shr
mov
loop
out
jbe
imul
inc
sbb
daa
stc
inc
cs
bound
add
inc
ljmp
jno
aad
xlat
repz
les
in
leave
xor
es
mov
or
mov
test
shlb
jle
xchg
daa
mov
sub
add
pop
les
xor
inc
lock
ljmp
and
ljmp
fldl
mov
xchg
aaa
clc
adc
inc
test
dec
mov
lds
cli
shl
fnstsw
pusha
jmp
loopne
std
pop
push
or
fildll
test
cmpsb
add
out
jl
hlt
adc
scas
xchg
add
mov
lcall
xor
cli
test
lret
cld
jge
lds
sbb
dec
jnp
jecxz
pushw
test
add
and
in
dec
jecxz
lret
rorb
lock
insb
icebp
call
test
aad
je
js
daa
cwtl
test
hlt
lret
xchg
push
dec
test
pop
sub
test
das
push
push
pop
lret
xlat
and
fs
jne
mov
dec
pop
gs
xchg
cmpsb
ds
fwait
cmp
mov
mov
dec
rol
mov
arpl
lea
iret
add
outsb
xor
mov
jle
add
loopne
aaa
mov
xor
aas
loop
fdivs
mov
ret
mov
inc
push
shlb
or
test
out
add
aas
push
sub
loop
mov
mov
lcall
sub
fcoms
lds
mov
loope
push
fcmovnb
add
cld
loopne
mov
loop
fistpl
xchg
jns
mov
out
cmp
cmovno
inc
mov
pop
bound
xchg
je
pop
inc
jp
jae
call
jge
fistpll
in
repz
cmpsb
fwait
pop
lahf
and
xchg
mov
push
scas
int3
or
scas
inc
pop
sub
inc
add
push
push
in
adc
cmp
mov
subb
aaa
fisttpl
lret
or
out
pop
lahf
xor
xchg
mov
push
sbb
and
test
pusha
paddusw
arpl
and
xchg
test
std
enter
adc
push
je
sub
cli
or
repz
fdivs
push
daa
arpl
xor
addr16
push
in
dec
or
push
inc
pusha
out
cltd
push
sbb
xchg
pop
dec
xor
ret
inc
lret
sbb
jmp
out
fists
scas
mov
dec
cmp
add
pop
fwait
loope
stc
fdivl
mov
sarb
loopne
rclb
fistps
shrb
into
loopne
sbb
enter
mov
jp
arpl
inc
and
fiadds
out
jno
mov
gs
push
jecxz
xorl
pop
inc
mov
aad
mov
bound
bound
negl
in
sarl
pop
mov
out
movsl
adc
leave
js
push
imul
or
shrl
dec
jnp
ljmp
pushf
xor
xchg
and
jl
push
mov
jg
shrb
mov
xor
jnp
cmpsb
aas
push
fdivs
and
sbb
cmpsl
mov
je
cmp
cld
mov
mov
in
mov
adc
jl
loopne
pop
iret
lret
negb
orl
inc
xlat
xor
sub
scas
fstpl
push
shlb
sub
or
fisubl
movsl
sbb
jno
in
in
aad
cmp
adc
jp
je
mov
pop
and
fs
ds
loope
jle
mov
mov
shl
rclb
dec
in
fbld
std
sub
adc
jns
cmp
or
mov
sub
add
jno
jmp
stos
pop
icebp
sbb
js
pop
mov
fldenv
mov
ljmp
sar
notb
adc
pushf
das
sub
dec
mov
mov
out
jg
aad
mov
popf
jp
outsl
cmc
loope
jb
mov
sub
sub
push
inc
dec
mov
mov
sbb
orb
sbb
cmc
or
jle
cwtl
pop
ss
cmp
push
fst
icebp
push
jae
sub
decl
pop
and
movsb
repnz
ds
pusha
arpl
mov
daa
add
scas
int
scas
or
mov
add
inc
lahf
cli
or
loope
cwtl
out
jmp
push
pop
xchg
or
movsl
pop
or
movsl
jo
aad
aad
push
add
mov
lret
movsb
pop
lret
lds
mov
mov
push
jo
adc
int3
mov
pop
insl
mov
outsb
add
jmp
lds
aam
pusha
subb
pop
jmp
outsl
jb
mov
dec
sub
clc
aam
cmp
xchg
mov
pop
mulb
adc
enter
out
jecxz
and
jns
jb
rcl
mov
cwtl
sarb
pop
aam
ss
mov
rorb
inc
jo
nop
mov
jg
jecxz
stos
fwait
xchg
jecxz
push
pop
jl
or
cmpb
dec
jb
jge
insb
jl
push
xchg
sub
jnp
scas
adc
int
fimull
das
scas
jl
fisubs
push
leave
rolb
pop
sub
and
cmc
dec
inc
pusha
std
pop
imul
or
test
and
mov
imul
in
mov
insl
jae
jbe
shr
cmp
mov
in
aam
mov
and
stc
adc
lods
shl
or
lret
pusha
sub
cmpsl
push
sbbb
sub
dec
push
repz
fidivrs
pop
xchg
fbstp
add
std
add
adc
or
dec
les
jno
adc
jne
cmp
decb
pop
stc
adc
clc
jecxz
sub
cmp
xchg
push
push
cltd
stos
inc
rorl
enter
fidivrl
mov
ficomps
es
jne
push
aam
int
mov
cmp
out
mov
shll
lcall
outsb
pop
mov
lret
cld
fisttps
mov
imul
fwait
sub
adc
fcmove
cmp
xchg
lret
pop
and
dec
jae
push
fistpl
push
aam
fdivs
cmc
loope
ljmp
jg
sahf
mov
outsb
jge
sbb
mov
negb
xor
jp
mov
push
fsubs
sbb
imull
aaa
outsb
push
sub
jo
jno
cld
test
loopne
mov
add
das
xor
in
or
adc
dec
cmp
jnp
jne
test
push
pop
xor
test
ss
add
lock
or
adc
out
jns
mov
hlt
jns
aad
sahf
mov
add
sbb
pop
int3
sub
aad
mov
addr16
mov
fdivrl
shl
push
mov
jmp
sub
jl
push
scas
cmp
adc
jmp
pop
outsb
push
ljmp
ljmp
and
and
lods
inc
and
lret
test
popf
aaa
sub
outsb
sbb
arpl
mov
mov
faddp
adc
mov
pop
insb
fstpl
mov
inc
pop
int3
out
fwait
xor
xchg
push
cmc
adc
mov
fwait
fs
mov
cmp
out
rcrb
mov
sub
and
sar
leave
cmp
pop
dec
cmp
push
lahf
inc
dec
mov
aaa
fldl2t
push
mov
xchg
ret
nop
pop
adc
dec
mov
push
cs
pop
pushf
icebp
sbb
inc
pushf
jo
aad
in
push
rorl
dec
adc
jne
inc
xor
insb
cld
and
hlt
je
enter
les
cmpsl
test
adc
jbe
or
imul
cs
pop
stos
fidivrl
imul
or
dec
push
pop
pushw
stos
int
sub
cmpsl
scas
push
push
xor
pop
in
jb
pop
pop
or
push
rclb
pop
push
pop
jnp
push
sbb
popf
dec
xor
fsubrl
out
shll
pop
fildll
xchg
pop
mov
hlt
cmp
and
pop
push
inc
add
fcomp
xchg
out
enter
inc
insb
mov
or
jg
les
or
jbe
es
or
cs
icebp
mov
pop
add
add
mov
popf
jge
call
cmpsl
lds
sbb
loop
jg
in
jno
fwait
sbb
cwtl
xchg
clc
cmp
mov
mov
frstor
push
pusha
add
sbb
lret
push
lods
lock
or
jp
es
daa
mull
or
dec
pop
inc
adc
repz
xor
call
mov
fdivs
mov
cmpsl
imul
lds
aam
mov
sub
mov
mov
das
mov
sub
shll
lahf
lods
mov
lret
sub
fcmovnbe
jb
jg
jecxz
shlb
repnz
and
adc
gs
push
in
inc
cli
inc
push
aaa
xchg
jae
into
dec
repnz
xchg
push
test
movsl
inc
repnz
mov
xchg
mov
dec
imul
sahf
adc
in
mov
push
scas
daa
mov
lea
neg
out
repnz
xor
imul
pop
testb
jmp
jp
or
add
scas
and
repz
lds
test
icebp
or
nop
xorl
repz
les
mov
pop
out
incb
fwait
sti
mov
xor
pop
mov
addl
sbb
mov
sub
shrb
mov
jno
and
call
jle
mov
xor
push
lods
mov
popa
clc
fstl
vpaddd
or
iret
fisttpl
rcrb
int3
inc
jno
fcompl
inc
adc
fidivrl
in
lcall
mov
fsubrs
adc
and
sarl
test
call
inc
jg
jmp
jae
fdiv
jnp
decb
popf
push
mov
dec
or
jl
inc
cmpsl
dec
mov
pop
loop
mov
js
mov
mov
int
push
sub
and
movsl
ljmp
montmul
cmpsb
add
in
test
jns
scas
push
adc
hlt
sarb
xor
pop
rcl
inc
mov
fists
pushf
sarl
int
mov
add
sahf
ja
shrb
mov
jecxz
sub
push
test
out
int3
push
mov
xchg
stos
jbe
inc
das
imul
xchg
push
push
outsl
dec
out
cld
jl
jb
dec
mov
mov
jg
cmp
mov
mov
loop
jl
jnp
sub
sahf
pushf
mov
mov
stc
jp
cmc
sbb
dec
les
jecxz
lahf
cli
cmp
mov
addr16
cmp
pop
mov
sbb
xchg
aam
inc
xchg
mov
fisttpll
testb
xchg
mov
push
or
mov
arpl
pushf
clc
and
data16
repnz
mov
mov
das
jns
enter
shlb
push
sbb
mov
pop
mov
push
ja
clc
enter
and
fisubrl
mov
cmpsb
jno
cmp
out
inc
adc
pop
jl
xchg
push
xor
push
xchg
ja
mov
ret
adc
push
bound
add
hlt
fwait
mov
sar
int3
jno
jnp
and
xchg
clc
push
pop
test
or
sbb
out
das
lahf
sub
shl
sbb
test
push
ljmp
call
int3
jmp
mov
or
std
or
sbb
xlat
sbb
dec
out
mov
xchg
dec
push
adc
mov
jmp
pop
dec
pop
and
mov
add
out
and
xchg
pop
std
sub
sub
mov
jge
pop
clc
mov
or
ret
cld
inc
xchg
es
mov
test
sub
xor
movsb
jmp
adc
sahf
and
pusha
in
scas
pop
nop
jge
mov
push
call
adc
movsl
push
mov
lods
push
or
outsb
xor
xchg
push
cmp
xor
cltd
dec
fistpl
cld
jno
das
cltd
popa
jg
push
xchg
dec
mov
outsb
mov
jbe
xchg
xchg
fists
cwtl
je
das
loopne
mov
push
and
inc
fsubrs
cmpsb
push
jp
sub
lea
out
mov
int3
ss
cmpsb
cmp
jae
or
jbe
adc
adcb
nop
das
jl
popa
pop
shll
pop
incl
stos
cli
pop
int
inc
dec
fiaddl
cmp
sbb
adc
pop
mov
pop
repz
and
jp
xchg
test
add
cmp
adc
mov
insl
insb
addr16
jae
ret
clc
sahf
loopne
push
out
sbb
jno
jge
sbbl
popa
aad
xchg
mov
mov
xchg
stc
int3
pop
imul
fdivs
add
in
iret
xor
mov
mov
xchg
inc
cmc
icebp
dec
in
sbb
in
sub
sub
and
into
ja
sbb
outsb
daa
mov
stos
push
jmp
and
jo
pop
and
mov
add
jo
test
pop
ljmp
mov
xchg
sbb
fldcw
push
es
icebp
dec
cmp
rcll
adc
insb
and
mov
mov
mov
sbbb
je
jmp
mov
xchg
les
mov
xchg
hlt
xchg
mov
aad
add
daa
loope
test
fstl
and
fcmovb
inc
sti
add
mov
and
cmp
cmpsb
out
leave
pusha
jg
cmpsb
inc
dec
test
outsl
sti
jge
xor
xlat
inc
push
or
jp
mov
repz
mov
cltd
mov
sar
insb
dec
lock
ja
lea
mov
mov
push
mov
pop
cmpsl
mov
ss
outsb
mov
mov
push
shrb
sbb
xor
mov
sub
mov
cmc
cmp
adc
out
rcr
into
psrad
pusha
in
out
pop
int
inc
xor
cltd
test
in
cli
loop
stos
xor
push
jb
pop
and
add
sbb
inc
in
and
pop
jmp
push
pop
mov
push
push
xor
rcrb
add
mov
pop
adc
jne
mov
pop
fstpt
jns
jns
mov
rclb
mov
inc
pop
cmpsl
jmp
stos
xchg
lea
jge
jno
testl
or
imul
sbb
iret
push
stos
mov
and
cs
sub
inc
in
iret
sub
mov
add
push
jmp
pop
imul
jne
lea
dec
test
cwtl
cwtl
daa
movzbl
pop
sub
cmpsb
lret
jb
xchg
popa
adcb
pop
loopne
mov
cltd
mov
add
cmp
inc
pusha
sbb
insl
jge
jg
push
rol
nop
sub
inc
fisubs
loope
dec
inc
jle
in
pop
and
dec
sub
pop
loop
inc
icebp
mov
lds
int
add
jno
jo
push
sbb
push
jp
fisttps
js
data16
mov
aam
cmpsl
mov
pop
cmpsb
mov
or
dec
jmp
cmpl
sub
push
adc
and
adc
fbstp
stc
mov
jg
xchg
call
nop
pop
jae
jg
mov
inc
pop
insl
sbb
imul
aaa
enter
push
adc
fmul
mov
mov
scas
shrb
popa
and
mov
mov
adc
push
mov
fcmove
pop
mov
fabs
push
or
push
mov
or
movb
dec
inc
cltd
sub
dec
popa
jl
mov
xlat
or
inc
aad
sub
out
addr16
cmp
mov
lea
jne
int3
je
xchg
lcall
mov
sub
out
sbb
mov
jge
xchg
dec
push
adc
pop
test
lret
repz
in
stos
cltd
add
lret
adc
insl
fnsave
out
xchg
mov
and
aas
mov
xchg
and
push
sar
add
fcompl
xchg
stos
into
dec
mov
sub
add
lds
xor
mov
jp
pop
xchg
test
mov
lret
fucomip
pop
movsb
lret
decl
and
xchg
jbe
xchg
cs
push
sbb
fwait
sub
mov
cmpsl
dec
js
pop
and
rcrl
movsb
fsubr
repz
and
lea
mov
push
in
lods
pop
iret
mov
cltd
out
dec
lds
shll
iret
sarl
inc
mov
mov
add
dec
jno
call
cltd
cmpsl
cmp
fistl
mov
xor
arpl
lock
and
and
pop
cwtl
dec
and
and
jp
hlt
jnp
mov
mov
mov
sub
subl
cmp
push
pusha
push
lea
lods
or
mov
inc
mov
ja
pop
js
jl
sbb
add
and
es
std
mov
insl
jb
mov
imul
adcl
push
out
push
fisubrl
jmp
or
push
lods
cmp
jl
lret
cmpsl
aad
dec
ror
push
push
pop
push
sbb
into
and
subb
push
nop
cld
testb
push
push
mov
mov
push
pop
imul
shl
hlt
outsl
add
inc
loopne
jne
cmp
inc
and
inc
std
or
inc
push
jns
aaa
loopne
mov
adc
arpl
test
imul
xor
xor
fdivl
stos
or
xor
imul
rcrl
xor
jge
push
xchg
mov
push
jle
movl
or
pop
mov
imul
stos
add
imulb
sbb
mov
test
es
jge
popa
xor
adc
negl
aas
outsb
bound
or
hlt
mov
fists
adc
jb
out
icebp
cmp
outsl
inc
mov
mov
push
mov
mov
xchg
sbb
in
ret
out
xchg
mov
jbe
sbb
mov
dec
lret
jne
cld
outsb
sbb
aas
sub
mov
or
xchg
pop
sub
shrl
stos
les
mov
mov
les
and
pop
out
sub
cmp
test
jo
lods
icebp
xor
nop
cmp
mov
data16
repnz
icebp
and
outsb
mov
ret
ss
movsl
outsl
adc
int
fildll
shrb
mov
pop
out
jnp
mov
outsl
fcomps
push
push
cmp
sub
mov
adc
push
loop
xor
sahf
outsb
fiaddl
pop
add
pushf
adcl
push
inc
imul
fistpll
jns
lret
pushf
lods
mov
and
or
pop
out
test
icebp
bound
xor
mov
jl
inc
push
mov
cwtl
ss
xchg
in
fsubrs
mov
pop
add
xor
divb
xchg
mov
mov
imul
fcoms
push
sub
dec
mov
fmuls
call
movsl
rcrl
jge
mov
leave
aam
jb
fiaddl
ljmp
mov
mov
popa
lahf
xor
inc
push
sbbl
lret
das
mov
dec
sbb
push
sbb
add
pop
jae
aas
shrl
adc
dec
xchg
icebp
mov
jo
ja
and
rcll
push
mov
rcll
push
xor
sbb
push
mov
push
mov
adc
lahf
mov
mov
cmp
add
mov
out
ljmp
subl
push
cmp
or
or
js
js
pop
push
or
xchg
dec
or
push
dec
push
scas
ror
pop
repz
add
bound
sbb
fsts
sub
dec
mov
nop
cmpsl
fimull
xchg
addl
inc
movsb
push
mov
clc
aad
movsb
movsl
cmp
mov
mov
push
and
adc
dec
pop
sub
rcrb
pop
lods
cmp
xchg
mov
mov
mulb
movsb
pop
aad
fsts
lcall
mov
xor
sbb
in
pop
out
sub
pop
loop
enter
test
std
inc
add
test
ja
adc
loopne
fcoml
mov
jo
cmpsl
dec
or
jbe
and
iret
inc
add
and
shlb
push
test
rcrl
mov
sub
dec
cmp
pusha
pop
push
rcl
rcrb
mov
cltd
std
jecxz
ret
pushf
dec
add
sti
aaa
sbb
inc
pop
push
pusha
sbb
mov
fsubr
clc
shlb
mov
shr
xor
test
pop
ja
ret
mov
push
sti
adc
xchg
jg
sahf
mov
out
jl
icebp
pop
enter
add
inc
into
stos
xchg
ss
add
mov
mov
jle
adc
pusha
add
les
test
cltd
mov
mov
out
jae
pop
mov
clc
pushf
xor
shlb
clc
insb
mov
inc
lea
int3
ficoms
sahf
xor
andb
mov
mov
cmp
arpl
test
pop
ret
cltd
lock
adc
sbb
loop
outsb
lahf
mov
jnp
insb
add
inc
pop
mov
pushf
xchg
pop
pop
test
in
push
mov
sbb
ret
lahf
pusha
pop
scas
and
cmpsl
jo
nop
and
es
push
cmpsl
mov
push
xlat
aaa
fistpll
pop
push
data16
adc
pusha
cli
mov
push
lcall
pop
fcomps
pop
mov
pop
lds
mull
subl
aam
dec
xchg
push
clc
xchg
loope
into
in
add
xchg
test
mov
repz
fistl
inc
insb
jl
mov
leave
mov
jnp
xor
into
xor
jp
push
pop
out
push
and
dec
imulb
movsl
aad
mov
inc
int3
into
repnz
adc
test
sahf
xor
mov
gs
mov
xlat
rclb
movsb
cmp
daa
repnz
jnp
loopne
lods
xchg
adc
sbb
sbb
jb
mov
add
or
cwtl
repnz
mov
adc
pop
xlat
cs
or
xchg
daa
ss
setae
dec
push
and
xor
adc
sub
aas
dec
in
cmc
stos
xchg
jne
mov
adc
or
fs
mov
mov
sbb
pop
notb
sbb
je
mov
add
lock
mov
sub
xchg
xlat
mov
dec
mov
in
cmc
push
ret
xor
aaa
lret
popw
mov
push
cmp
int3
js
dec
dec
and
jne,pt
jmp
fists
paddsw
insl
or
push
lcall
shll
or
aad
sub
sti
pop
jg
push
sti
jbe
and
dec
call
out
jae
inc
add
ja
int3
xor
mov
mov
xor
ret
fcoml
mov
ret
adc
mov
and
push
out
loope
pop
xchg
fwait
add
xor
repnz
inc
or
lods
add
dec
sub
and
jo
rcll
inc
arpl
cmp
lahf
cmp
rcrl
into
xchg
sbb
ds
push
or
or
lods
push
dec
ss
into
aad
sti
outsb
push
jmp
jmp
out
aam
jnp
std
and
mov
xor
inc
pop
and
push
sub
mov
dec
in
xchg
dec
loopne
sub
xchg
aad
addr16
jl
inc
fsubl
sahf
mov
mov
push
jecxz
insl
jg
icebp
xlat
outsb
jecxz
push
sub
shl
mov
jne
lds
xchg
sub
ss
fsubrl
outsb
jno
add
sub
dec
daa
mov
movsb
or
mov
push
mov
dec
das
ret
stos
aad
andb
jl
xchg
mov
xchg
sbb
notl
addb
addr16
lret
rolb
mov
inc
fdivs
arpl
sub
ljmp
adc
loopne
or
or
cmpsb
cmp
fisubrl
mov
mov
imul
add
out
loop
movsl
pop
out
sbb
aam
and
hlt
imul
or
mov
inc
rorb
cltd
push
outsl
push
mov
lea
ds
jo
jmp
xchg
add
int3
dec
adc
sub
mov
mov
jnp
inc
in
xchg
cmp
in
lcall
in
test
das
aam
mov
lret
aad
jno
jge
mov
push
or
lock
jo
inc
dec
scas
leave
adcb
aas
or
insb
test
sbb
fmul
movsb
repnz
lods
ja
clc
rcrb
mov
test
inc
add
jbe
cmpsl
xlat
repz
mov
and
dec
push
dec
jecxz
int3
leave
mov
add
cli
cwtl
lock
or
imul
movsb
pop
scas
mov
sarl
xor
jo
jo
jge
and
in
push
es
mov
fstpt
rcrb
adc
mov
mov
push
mov
cmp
jbe
and
inc
ror
ret
idivl
pop
ss
dec
add
sarb
dec
scas
push
ss
jb
aam
lret
roll
inc
mov
mov
adc
mov
insl
mov
cld
mov
push
adc
cli
xchg
out
mov
push
inc
popa
test
bound
ret
pusha
das
fcoml
stos
or
lock
push
test
test
xchg
aas
ret
mov
mov
repnz
dec
test
sub
cld
jge
and
mov
call
inc
mov
inc
aaa
adc
inc
cmp
mov
push
push
jbe
lock
out
mov
sbb
inc
ret
push
nop
sbb
dec
xchg
iret
es
fcmove
clc
push
xor
push
xchg
pop
or
outsl
cmp
push
mov
lret
jne
and
dec
xchg
popf
inc
xchg
aas
in
int
insl
inc
mov
mov
mov
mov
push
jmp
es
inc
sub
jno
jne
out
shrl
inc
mov
sarl
movsb
or
mov
ret
fwait
int
pop
mov
lock
mov
sub
jmp
adc
jo
lcall
inc
fiadds
dec
lret
int
pop
mov
and
fs
scas
mov
mov
sub
sub
test
mov
je
icebp
rol
lock
xlat
and
lea
sbb
push
or
cmpsl
add
push
xor
fidivrs
add
test
scas
arpl
aas
bound
enter
aas
decl
fisubs
into
sub
pop
pushf
jne
call
mov
adc
lds
cmp
sbb
scas
inc
xor
int3
arpl
ds
out
xor
andb
add
test
movsl
mov
xchg
sub
aaa
fwait
xor
lds
push
jmp
jl
pop
scas
fstps
push
jmp
add
pop
mov
les
test
pop
mov
push
push
jmp
mov
pop
jmp
aaa
sub
in
push
daa
ret
rcrl
mov
rcll
push
rolb
jg
add
and
lret
xchg
cmp
lea
test
fisttps
in
jmp
dec
mov
pop
inc
rorl
xor
jno
jns
xchg
inc
or
incb
and
popa
enter
xchg
pop
push
enter
mov
aad
add
loop
jns
and
jp
jge
adc
loop
adc
xor
dec
push
sbb
pop
inc
shrb
mov
xor
xchg
inc
jmp
and
push
test
and
ss
mov
push
fildll
das
mov
or
lcall
adc
cmp
xchg
in
xor
data16
out
jge
loopne
aad
inc
xor
xchg
pop
dec
loop
clc
pop
scas
cmpsw
xchg
iret
in
push
into
call
lea
ss
call
repnz
cld
ljmpw
push
xlat
xchg
xchg
mov
cmpsl
loopne
pop
hlt
adc
int3
lahf
mov
call
or
std
iret
notb
lret
mov
fiadds
dec
mov
sbb
pop
lcall
mov
push
mov
sbb
loope
sahf
movsl
mov
lods
popa
flds
push
dec
enter
loopne
cmp
int
testl
cli
out
add
pop
iret
gs
fiadds
icebp
sbb
jg
mov
push
inc
sbb
jg
lods
and
pop
push
mov
mov
sub
sbbl
test
push
aad
push
call
int3
xchg
ds
jne
add
pop
cmc
jp
cmpsl
mov
icebp
sahf
stos
lea
pop
sahf
or
out
push
or
push
cmp
add
setne
outsb
push
inc
lods
xlat
les
in
rcr
add
repnz
enter
aas
fcompl
jg
out
mov
aad
cmp
add
pop
xor
in
gs
mov
shld
push
sbb
cmpsl
adc
dec
xchg
mov
adc
push
sbb
mov
movsb
mov
adc
or
or
push
out
cld
fisttpl
out
sahf
push
and
xchg
into
adc
inc
mov
stc
out
mov
jne
inc
sub
mov
lahf
rol
hlt
stc
xor
in
adc
data16
jb
data16
mov
stc
rol
xchg
jo
jmp
push
or
and
test
js
fdivrs
imul
je
sbb
mov
loopne
cmp
lret
and
add
sub
and
or
fwait
add
cwtl
dec
sub
aam
lock
push
pop
divl
mov
in
mov
sub
hlt
sarl
xor
mov
inc
popa
pop
rcrb
fwait
lods
push
out
in
xor
pop
ret
jecxz
dec
sti
push
mov
cltd
inc
rol
fs
jne
mov
inc
or
out
add
mov
daa
imul
call
inc
pushf
dec
dec
dec
flds
pop
pusha
lret
pop
mov
mov
popa
add
sbb
add
fstpt
dec
dec
pop
push
ficomps
cmp
test
mov
mov
dec
pop
sbb
push
daa
or
fdivl
fcompl
out
xorps
js
aaa
and
aas
sub
mov
frstor
out
mov
loop
push
imul
inc
mov
mov
mov
ljmp
mov
into
aam
add
jb
xor
inc
push
js
jno
popa
jns
inc
mov
subb
mov
int
push
pop
imul
pop
dec
mov
and
sub
mov
pop
dec
xchg
jle
and
and
insb
lods
fdivrl
scas
push
pop
xchg
xchg
jge
push
cmp
shll
or
imul
sbb
shrl
inc
int3
fnsave
outsb
aas
scas
xchg
adc
jnp
test
push
out
in
push
repnz
ss
add
icebp
push
mov
adc
mov
xchg
cmp
cmc
in
scas
out
push
rorl
enter
adc
xchg
mov
testb
jecxz
pop
sub
xchg
add
pop
fsubrl
and
sahf
sbb
add
add
sbb
mov
or
mov
insl
sti
mov
int
jne
adc
cli
mov
add
faddp
xor
pusha
cmp
push
mov
pop
orl
fdivl
ds
into
lret
mov
pop
cmp
xchg
mov
jae
mov
inc
pop
jg
les
btc
imul
adc
int
dec
jecxz
inc
inc
adc
hlt
dec
pop
xorb
sahf
repz
imul
div
jno
sar
xchg
stc
mov
rorl
and
nop
add
inc
ret
cli
add
jecxz
jle
cwtl
das
es
mov
lds
dec
jns
xor
xchg
xchg
jae
fidivrl
push
ror
or
test
mov
xchg
push
les
test
loop
xor
jns
push
push
mov
xchg
xor
lcall
mov
jl
cs
lret
dec
jg
mov
pop
into
sub
jne
cmpsb
jge
xchg
pop
mov
or
je
test
ss
xchg
jne
or
and
cmp
bound
pop
out
push
xor
mov
fs
inc
jns
je
mov
out
lret
outsb
pop
loope
jbe
mov
add
dec
jg
push
cmp
cltd
ss
mov
xchg
mull
inc
scas
mov
enter
or
jae
dec
icebp
dec
fdivs
pop
adc
pop
mov
dec
and
adc
mov
xchg
sub
stc
cld
mov
xchg
pop
rorl
lahf
inc
mov
inc
das
push
xor
outsb
lds
dec
mov
ss
sbb
jp
inc
sbb
outsl
repnz
nop
out
ret
loop
mov
int
cmpsb
xchg
pop
xchg
js
leave
rol
mov
xchg
sub
mov
jne
lds
xchg
xor
and
lods
push
test
push
hlt
mov
test
cltd
xor
leave
xchg
mov
pop
call
hlt
out
test
cs
popa
inc
xor
push
mov
in
test
out
cmp
sub
pop
sub
jbe
cld
stos
in
mov
inc
lcall
mov
xor
and
insb
jle
decl
std
mov
and
mov
mov
out
arpl
jne
ja
push
repnz
popf
lods
push
rol
add
sub
xchg
arpl
add
cwtl
inc
popa
sub
cmpsl
inc
lahf
xchg
test
xor
cmp
jl
test
adc
je
cs
pop
pushf
vmovmskps
mov
adc
in
inc
mov
loope
popa
cmp
ja
xchg
add
cwtl
dec
dec
popa
arpl
xchg
imul
xchg
ljmp
aaa
sub
mov
insl
scas
repz
push
cmp
lcall
repnz
or
jne
add
lret
xchg
mov
or
in
cmp
ja
push
mov
stos
push
in
test
int3
das
xor
dec
loope
or
jl
lds
popf
je
into
repnz
lods
or
adc
mov
xor
adc
aas
xbegin
sbb
mov
std
pop
ljmp
iret
inc
xor
shl
arpl
or
adc
mov
incb
les
cmp
ja
sub
cmp
cltd
pop
mov
pop
jae
inc
sub
inc
aaa
xchg
or
sub
call
into
push
jmp
cli
and
lret
pop
mov
lret
cld
jae
cs
dec
and
add
and
in
test
cmpsl
subl
fcmovbe
push
rolb
add
idivb
inc
xchg
dec
dec
hlt
ljmp
inc
addb
out
dec
dec
jo
imul
mov
fwait
pop
mov
ret
sar
rcrl
adc
dec
dec
in
stc
in
sbbl
in
mov
inc
sub
hlt
mov
into
insb
in
lock
add
cltd
aas
mov
stos
sub
icebp
shll
sbbl
push
repnz
popa
sti
pop
and
cmp
adc
aas
mov
jl
test
idiv
test
sub
jl
push
leave
lods
mov
cld
imul
cld
rclb
jecxz
or
ds
nop
movnti
loope
jbe
insl
loope
dec
push
daa
ret
mov
data16
mov
xchg
pushf
clc
xchg
xchg
jno
push
shl
lahf
xor
shlb
call
push
loope
inc
cmp
sahf
popf
movsb
lods
and
adc
pop
mov
adc
and
in
ljmp
jbe
pusha
sbb
sbb
std
or
xchg
xchg
iret
cmpsb
aad
lret
sub
push
push
jne
xorb
enter
pop
sbb
cld
mov
idivl
ret
add
ja
in
cmp
and
mov
mov
push
in
add
ljmp
push
cmpsb
ss
aam
sbb
mov
mov
dec
inc
sahf
repz
sarl
xchg
adc
xchg
movsb
mov
orl
jbe
cmp
add
iret
xorb
sub
test
pusha
popf
fistps
mov
lds
test
adc
cld
hlt
fldt
faddp
jmp
xor
clc
or
faddl
adc
mov
sub
imul
adc
xor
aad
and
mov
xorb
bound
iret
xor
and
ror
xchg
sub
mov
test
mov
popf
out
xchg
jb
sahf
push
repnz
cmp
stc
and
mov
ja
clc
jnp
xor
andb
subb
in
jecxz
jecxz
and
scas
mov
sub
xchg
decl
xchg
add
or
popaw
sti
popf
addb
ss
jmp
and
pop
mov
int3
enter
jo
adc
sbbl
lods
nop
push
andb
mov
mov
jne
scas
xchg
jbe
adc
bt
xor
jmp
push
clc
loop
jge
in
cmc
inc
icebp
icebp
movsl
stos
xor
in
shll
cmp
sbb
and
lock
insl
inc
mov
mov
bound
or
mov
mov
mov
ja
movsb
or
xchg
xchg
jns
out
popa
cmp
in
xor
jmp
fwait
xor
lahf
jno
mov
push
ja
cld
cs
fadds
sbb
test
inc
sub
jge
inc
pslld
dec
bound
cmpsl
push
jae
outsl
xor
shl
aas
ret
cmp
sub
dec
mov
out
stos
mov
int3
push
gs
add
cmpsl
mov
ret
repnz
pushf
outsl
shl
cmp
adc
push
cmp
pop
frstor
mov
ja
jo
xor
fnstcw
bound
fsubl
xchg
xchg
pop
xor
bound
mov
xchg
ret
mov
xchg
inc
jl
iret
pop
aas
push
out
sub
jns
pushl
lds
rolb
hlt
xor
xchg
test
push
fimull
hlt
mov
insb
popa
xor
xlat
and
xlat
pop
cmp
mul
jno
xchg
inc
xchg
sub
sbb
lods
inc
sub
jbe
jb
sbb
test
cltd
aam
rcrb
sub
gs
jnp
sub
jo
ljmp
idivl
hlt
test
shrb
ret
pop
mov
inc
push
jp
hlt
loop
or
bndstx
nop
cmpxchg
repnz
jb
add
pop
sahf
sub
fwait
cmpsl
fsubl
sub
jns
cmpsl
mov
cwtl
inc
sbb
and
repz
sti
add
movsb
jecxz
in
sub
in
in
fcom
cmp
outsb
jl
stos
in
sbb
mov
shlb
mov
rorb
stc
test
dec
mov
jae
insl
push
push
mov
cmp
inc
pop
fidivrl
pop
andl
pop
jbe
cmp
andb
adc
int
and
dec
and
call
test
sub
stos
mov
fmull
sub
xor
mov
cmp
into
pop
push
and
inc
fs
movsl
xor
mov
adc
cltd
push
push
and
movsl
push
aad
ficoms
in
pop
fwait
and
out
int3
repnz
pusha
in
bound
movsb
mov
sarl
ds
iret
xchg
xor
mov
adc
subl
push
rcrl
xor
mov
ja
xchg
sbb
rcll
fdivr
mov
cmpsb
inc
pop
in
mov
or
sbb
in
lods
shl
test
pop
push
stc
jno
aaa
into
daa
inc
or
sbb
or
roll
jle
fldcw
fimull
pop
out
test
imul
in
push
out
rclb
or
push
cmp
ja
fidivrl
push
orb
mov
xchg
pop
lods
insb
lcall
jmp
or
pop
cmp
push
int3
adc
arpl
int
adc
dec
adc
inc
in
jmp
sbb
aas
push
or
pop
cmp
fsubr
in
enter
dec
sbb
dec
es
popl
pop
cltd
push
fwait
mov
xchg
mov
pop
in
cmp
mov
push
scas
pop
sub
out
imul
ja
shlb
cs
sub
pusha
xor
xchg
xor
cwtl
jne
fstl
lahf
dec
jmp
jmp
notl
sub
xor
push
push
adc
inc
popf
sub
sub
xor
fsubrl
popf
mov
push
push
inc
and
scas
mov
xchg
cmc
adc
sub
orl
sub
and
clc
sti
fwait
movsb
ljmp
xor
stos
out
subl
xor
pop
pusha
ljmp
mov
or
test
sbbl
pop
cmp
mov
xchg
dec
nop
push
push
out
lds
into
xor
out
adc
pop
loope
test
popf
fidivrs
inc
fadd
fistl
jo
adc
fists
or
xlat
add
in
xor
sub
pop
mov
decb
sub
jmp
repz
dec
movsl
addr16
lcall
cmpsb
inc
call
movb
ja
xor
inc
shlb
fs
push
pop
xchg
dec
loop
loopne
and
adc
push
xchg
mov
push
ljmp
cmp
pop
xor
dec
pop
push
sub
cmp
mov
leave
cmpsl
pop
adc
xor
lea
mov
or
cmpsl
cmpsl
jne
mov
out
gs
push
fwait
mov
stos
mov
movsb
decl
pushl
dec
and
daa
xchg
pop
jno
xor
inc
inc
xchg
flds
mov
adc
inc
pushf
xor
mov
pop
out
sbb
mov
mov
dec
hlt
mov
inc
ret
stos
pushf
out
mov
cmc
outsl
inc
and
addr16
dec
divb
dec
pop
and
int
jo
inc
xchg
sub
mov
fs
mov
cld
stos
cs
ja
dec
sahf
test
shll
mov
lock
sbb
mov
mov
test
pushl
fadds
push
sti
scas
add
dec
xor
sbb
fstpt
mov
insb
movsb
mull
fiaddl
sbbb
fsts
shlb
jno
cli
push
mov
cld
mov
cmp
cmp
mov
adc
shld
mov
xchg
mov
rorl
mov
mov
or
loopne
int
push
sar
addr16
xchg
aaa
pop
das
ss
in
mov
movsb
repnz
test
add
out
xchg
mov
pop
mov
fucom
mov
test
cld
cmc
pop
imul
notb
adc
mov
xor
push
xor
lahf
dec
inc
hlt
aad
rcrb
addr16
out
pop
sbb
test
repz
jns
cmp
cltd
pop
push
add
scas
mov
cwtl
stos
sub
xlat
scas
sbb
imul
xor
add
lds
sbb
sub
mov
push
adc
mov
dec
dec
pop
jecxz
dec
lahf
pop
adc
adc
jecxz
loop
shll
nop
out
nop
daa
and
xor
scas
loop
lock
shll
loop
cmpsb
inc
fs
mov
enter
sbb
jo,pt
jb
or
fcompl
int
orb
inc
aas
mov
push
mov
out
xchg
cmpsl
inc
fsubrl
addr16
jmp
mov
cmp
lret
shlb
out
mov
lock
push
enter
roll
dec
push
inc
jbe
xchg
dec
push
hlt
pusha
or
out
push
stos
test
sbb
icebp
xchg
xchg
mov
adc
jne
jmp
shrb
sub
dec
and
dec
jnp
xor
out
mov
and
fcompl
lret
arpl
pop
hlt
jnp
loope,pt
movsb
xchg
sbb
jno
aaa
hlt
sbb
mov
and
add
mov
push
in
in
mov
sbb
inc
push
mov
hlt
mov
sbb
in
mov
jnp
shl
loop
dec
imul
sbb
xlat
push
lret
cmp
les
rorl
pop
and
into
push
leave
test
pushl
pop
lcall
xchg
lret
jae
std
mov
inc
push
rorb
lock
add
sbb
and
stc
mov
lret
sub
xchg
mov
ret
ror
xchg
jl
js
ret
fistps
ficomps
sub
cmp
mov
stc
repz
test
fcmovb
xchg
in
aas
cs
or
jg
inc
mov
test
cmp
add
fildl
inc
push
sub
mov
nop
adc
roll
pop
jo
ds
outsl
js
int
in
shlb
adc
mov
mov
je
jge
sbb
and
test
in
inc
pop
pop
aad
sub
add
jbe
int
inc
movsl
aaa
push
push
in
orl
push
pusha
xor
push
bound
jo
jo
sbb
sub
lahf
cmpsl
ret
or
sbb
mov
ja
loop
xchg
xor
nop
push
lods
mov
sbb
rorl
adc
pusha
sub
stos
add
dec
mov
int
sub
fsubrs
imul
mov
mov
insb
and
or
in
fcomi
dec
pop
sub
test
outsl
adc
je
data16
fiadds
call
dec
loopne
hlt
mov
mov
jae
lock
pop
stc
roll
mov
movsb
pop
ficoml
aad
repnz
imul
jae
loopne
adc
sub
sbb
cltd
push
mov
test
insl
and
cwtl
and
sbb
test
iret
clc
or
notl
xor
aad
pop
add
stos
clc
cmpsb
lahf
dec
push
mov
cmpsb
mov
inc
pop
add
sbb
mov
lcall
out
jle
cmpsb
jns
nop
incb
mov
mov
in
jnp
sbb
xchg
pop
insb
or
out
jmp
cmpl
pop
loopne
xor
ljmp
dec
sbb
xchg
mov
inc
xor
stc
jnp
ret
pop
int
je
and
mov
adc
int
xchg
stc
fs
addr16
scas
loope
jp
lret
aas
lods
cmp
or
push
sbbl
pop
xsha1
cmpsb
dec
adc
imulb
sub
sub
movsb
dec
jne
cmp
dec
sub
mov
or
jb
dec
int3
xchg
mov
push
adc
mov
or
push
lods
cmpsl
mov
inc
loopne
in
pushf
jl
test
push
fdivr
inc
cli
pop
icebp
jecxz
jecxz
aam
test
push
movsb
cmp
hlt
into
cmpsb
mov
pop
add
cmpsb
and
adc
inc
xchg
push
xor
dec
or
push
fmulp
adc
pushf
xchg
das
loop
pop
cmc
sahf
or
pop
dec
and
sti
jg
mov
repnz
and
imul
testb
aad
out
push
inc
aad
rclb
mov
add
push
cmp
xor
push
xor
push
rclb
mov
jno
out
push
insl
movsl
jmp
dec
xchg
mov
jnp
shl
push
mov
jp
add
dec
test
sbb
push
sbb
jae
sub
mov
ss
addr16
add
lahf
jae
mov
cli
xchg
lea
mov
pop
mov
dec
mov
je
cmp
insl
mov
jb
lret
cmp
inc
in
inc
push
mov
in
xchg
xor
leave
popa
pop
fisttps
loope
jle
jle
cwtl
sbb
mov
subb
pop
lahf
adc
xor
repnz
push
adc
jge
push
xchg
mov
dec
push
add
inc
loope
or
movsb
hlt
ds
out
and
mov
mov
jne
and
arpl
pusha
sahf
cmc
jl
adc
mov
rcll
adc
fsubs
jns
cmc
insl
sbb
dec
out
sbb
pop
push
mov
out
test
bound
pop
enter
mov
xchg
lods
sbb
lcall
push
daa
cmpsb
inc
popf
push
xchg
aam
insl
mov
out
mov
hlt
mov
add
fcompl
jg
inc
lea
push
and
mov
test
inc
dec
mov
pop
fldt
inc
pushf
mov
xlat
enter
enter
fldenv
fidivrs
fimuls
cltd
mov
sub
in
push
mov
stos
jae
cmpsl
add
out
popa
fimuls
in
gs
and
rclb
xchg
xor
pushf
pop
pop
out
jne
or
repz
jg
sahf
adcl
dec
inc
movsb
adc
push
pop
jl
jno
sub
push
loope
lahf
ss
in
or
push
inc
push
loope
jp
jnp
inc
xlat
mov
rcrl
cmp
adc
es
fistl
aaa
pop
and
stos
inc
mov
cmp
shrb
pop
ds
mov
dec
sub
lods
pop
mov
pop
call
cmp
stos
test
mov
sbb
jp
xor
adc
imul
sub
in
repz
jmp
call
pop
rcrl
fmuls
popf
aaa
arpl
call
fstpl
push
call
pop
or
sub
loope
scas
aam
icebp
mov
lds
xchg
ja
mov
sbb
test
insl
xor
jmp
mov
add
je
sti
xchg
or
cmc
mov
or
cmp
test
dec
loopne
ret
loopne
or
adc
cmpsl
sbbb
pop
mov
pop
out
cmp
fsts
jns
test
lock
sbb
xchg
mov
mov
jne
aam
xor
sbb
insb
dec
call
ljmp
inc
fidivrs
insl
mov
lahf
xchg
mov
outsb
cmc
mov
jno
and
les
out
lret
lret
cmp
test
or
fisubrl
insl
sbb
lret
cmpl
outsb
movsb
push
jmp
mov
jno
repz
ret
jp
stc
xorl
xchg
pop
sbb
loope
sbbl
adc
ret
cmc
mov
mov
iret
callw
nop
sbb
cmc
mov
pop
scas
push
adc
mov
jno
shlb
ret
pop
lock
xchg
jns
or
dec
test
insl
cmpsb
aad
aam
hlt
mov
loope
push
adc
cmp
jl
lea
popf
pop
out
lret
push
sar
xchg
sub
xchg
scas
jl
mov
jns
loop
xchg
adc
ret
mov
mov
scas
dec
loope
cmp
shl
mov
xchg
fnsave
rcrl
es
push
popa
les
aaa
or
jns
test
mov
and
push
cltd
bound
xchg
mov
jmp
jno
inc
mov
mov
push
out
std
out
xchg
sti
outsb
add
orb
andb
inc
xlat
icebp
push
ljmp
fwait
xor
push
lods
jbe
pop
lock
aad
push
jmp
sbbl
push
icebp
mov
fists
or
adcb
xor
addr16
dec
fistps
fdivs
rcr
jo
rcrl
pop
es
push
jns
and
into
scas
inc
cld
lods
inc
cmc
push
and
dec
adc
cwtl
das
mov
shll
mov
push
loop
daa
mov
xor
stos
lcall
jmp
or
aas
add
jl
push
mov
ljmp
and
and
jp
jnp
mov
adc
aam
data16
sbb
inc
frstor
aas
fidivl
inc
lret
mov
pop
loop
pop
sbb
fidivs
cmp
jns
stc
jle
sub
jo
jmp
xor
bound
mov
push
icebp
in
dec
loopne
sub
sbbb
mov
fidivs
xor
sub
mov
or
arpl
call
mov
xor
xchg
arpl
sbb
jmp
pop
sahf
adc
sbb
cmp
out
test
xor
xchg
popa
or
pop
ljmp
mov
pop
dec
jecxz
mov
push
cltd
insb
pop
pop
divb
ljmp
jae
push
jmp
in
shlb
ds
outsl
or
cmp
sbb
adc
shlb
or
arpl
mov
shlb
ss
mull
mov
inc
mov
mov
arpl
js
aas
les
jecxz
in
adc
scas
inc
push
or
cmp
add
and
push
or
jno
lret
popa
clc
stc
loopne
inc
adc
or
push
inc
test
add
sub
cmpsb
pop
or
std
inc
enter
fisttps
xchg
pop
adc
cld
cmc
fstp
jb
sub
sahf
pusha
adc
inc
mov
ljmp
or
cmp
sbbl
data16
mov
fs
and
jns
insl
stc
in
sub
adc
sub
pop
hlt
insl
icebp
in
andl
lret
push
out
cmp
cwtl
imul
or
adc
cmp
jp
add
shr
gs
adc
mov
in
xorl
mov
shl
js
adc
pusha
jbe
out
cmp
aad
and
repz
xchg
mov
in
test
dec
mov
bound
lods
adc
sub
mov
scas
cs
jg
sub
es
sti
mov
sub
xchg
sub
fnsave
scas
inc
dec
cli
std
xchg
sub
cmp
or
shrb
and
stc
adc
pop
mov
pop
std
xchg
xor
pop
xchg
sub
bound
nop
jmp
out
test
or
scas
cmp
and
subl
jg
cld
fdiv
sub
dec
sbbb
dec
sahf
xor
fisubrs
clc
sub
pop
ss
mov
jge
dec
loop
cltd
inc
xlat
into
movsl
fnsave
pushf
xor
clc
inc
fsubrs
dec
insl
add
xchg
or
enter
int3
jmp
jge
and
push
in
jb
sbbb
cwtl
dec
in
in
sub
jmp
and
push
jmp
inc
jg
je
cmp
mov
fcompl
hlt
adc
ds
aaa
sti
xchg
cmpl
insl
push
aam
sahf
add
mov
pusha
sub
pop
xchg
cmpsl
mov
fld1
jg
into
cmp
sti
xor
gs
addr16
xchg
cltd
mov
mov
imul
data16
icebp
push
xor
arpl
sbb
lods
mov
xchg
gs
or
lcall
push
mov
jl
jo
cli
movsl
jno
add
lret
lcall
data16
dec
push
aam
inc
addr16
lcall
and
in
repz
or
xchg
push
cmp
test
mov
outsl
cmp
in
cmp
mov
lods
inc
pop
fisubs
fcomi
xor
cwtl
scas
sub
js
mov
rclb
arpl
xor
push
push
in
test
test
fistpl
out
xchg
out
sti
pop
dec
jl
jp
sbb
les
jge
pop
ljmp
imul
outsb
mov
stc
mov
jp
or
push
xor
pop
xor
inc
stos
test
jecxz
int3
mov
add
pop
pop
lock
es
hlt
push
push
rcrl
adc
repnz
arpl
sbb
jg
jge
pop
stos
scas
lock
enter
repnz
daa
adc
icebp
jl
jnp
add
out
test
es
add
fstpt
nop
daa
push
fwait
push
in
shlb
sbb
shll
int
inc
repnz
jle
pop
xchg
stc
ret
sbbb
fcmovbe
int
call
cmpsb
fwait
mov
mov
popf
jne
in
cmp
sub
js
flds
cmp
fwait
and
jae
sbb
inc
xchg
xchg
push
inc
shrl
pop
xlat
ds
pop
xor
test
cmp
jmp
filds
xlat
push
inc
andl
pop
int
bound
cmp
jmp
xchg
jns
pop
aas
adc
out
jge
sbb
adc
cmp
jne
shlb
arpl
jp
loop
push
aam
xlat
inc
fcompl
cmp
cmp
sti
pop
jne
cmp
sbb
addr16
loop
xchg
mov
sbb
sub
inc
inc
leave
sub
fidivl
scas
aas
loopne
inc
lret
adc
fidivl
negl
mov
hlt
ret
pop
jmp
mov
inc
fldt
lret
lahf
lea
in
jbe
pop
jno
test
inc
bound
subb
jmp
xor
or
xchg
pop
or
push
mov
mov
int3
mov
sti
adc
shlb
mov
or
pop
test
out
rclb
cltd
xchg
jbe
sub
scas
inc
mov
stos
mov
push
push
jmp
or
adcb
pop
js
adc
int
xchg
loopne
cmp
push
fdivs
in
dec
aam
mov
xor
ja
lahf
xchg
xchg
es
push
xrelease
jbe
fwait
xor
xchg
js
jb
lods
xor
mov
add
daa
mov
cmpb
ja
mov
js
test
sub
or
adc
sub
ds
pop
ret
pusha
js
jle
xor
out
pop
call
loope
pop
icebp
jmp
les
xchg
addr16
sarb
mov
jbe
adc
add
int
gs
loope
loope
push
mov
push
clc
mov
cli
sub
lock
jmp
lods
inc
inc
add
xchg
push
xchg
jp
sbb
out
xchg
aaa
mov
cwtl
imul
ss
fmull
arpl
xchg
mov
addb
mov
xchg
adc
cmp
adc
repz
call
cs
add
adc
fsubrs
stc
cmp
dec
pop
repnz
adc
xor
mov
lcall
jle
xor
fdivrs
xor
int3
sub
add
or
daa
ret
fidivs
jecxz
into
dec
into
push
cmpsb
pop
push
lods
cmp
fldl
xor
xchg
pop
xchg
mov
jne
lcall
subb
xor
int3
push
stos
sbb
scas
out
inc
std
dec
ret
in
mov
sysret
dec
shlb
cmp
xchg
inc
lods
jbe
sbb
or
negb
aam
jle
daa
xlat
add
cmpsb
xor
sbb
icebp
pop
adc
xchg
jne
mov
out
xchg
pop
loope
jle
sub
sub
fildll
lods
xor
pop
mov
arpl
push
dec
push
out
jmp
ja
lahf
in
and
push
push
adc
dec
cwtl
xor
cmp
leave
loope
push
rcr
mov
fidivs
jnp
jnp
aas
inc
test
sub
xor
cmc
pop
xchg
jb
sbb
inc
pop
movsb
popa
push
push
int3
pop
inc
mov
jb
cmp
stos
xchg
fs
daa
icebp
and
mov
push
jmp
fstp
pop
adc
sub
lods
fimuls
shl
dec
fnstcw
pop
int3
xchg
jge
ljmp
add
jbe
jnp
ss
jno
sbbl
xchg
sbb
and
insl
xlat
insb
push
aam
inc
xor
sbb
cltd
xor
jg
xor
scas
in
inc
cmc
jg
inc
inc
mov
int3
and
pushf
xchg
mov
into
gs
stos
jecxz
push
lods
out
lcall
xchg
and
mov
inc
frstor
push
push
adc
paddd
pushf
xor
ficoml
mov
fs
jno
sub
andl
xchg
insb
cmp
xchg
ja
jge
xor
mov
loopne
lods
jo
add
xorl
mov
in
fbstp
aam
int
adc
sub
mul
ja
cli
xor
out
aad
mov
les
shlb
push
loopne
mov
push
das
out
in
icebp
fcoms
mov
mov
cmp
test
jmp
mov
add
inc
cmpsl
cmpsb
xchg
in
lds
loop
out
mov
std
and
pop
shll
xchg
and
and
inc
mov
fs
test
mov
sbb
in
mov
insb
mov
pop
mov
or
jns
xor
dec
mov
push
fwait
push
in
addr16
jb
sub
hlt
jbe
mov
add
mov
pop
xor
les
fistpl
aaa
pop
mov
mov
xchg
mov
and
movsl
dec
scas
icebp
dec
cmp
pop
rorb
pop
in
sbb
inc
fcmovbe
das
sti
xor
into
test
mov
rcr
inc
les
cmp
xchg
cmpsl
pop
out
sub
sbb
mov
mov
lods
or
cmp
cmc
daa
rcrl
loop
int
call
or
dec
lcall
sub
pop
mov
pop
jge
dec
jp
popa
pusha
pusha
push
mov
ss
andl
xor
xchg
fwait
repz
push
mov
insl
fdivrs
cwtl
mov
push
cmpb
dec
pop
xchg
jl
icebp
pop
rol
adc
repnz
stos
push
pushw
loopne
pop
push
jmp
addr16
aaa
ficoml
inc
pop
ds
in
orb
iret
cmpb
enter
movsb
ds
ret
add
rorl
xor
sbb
xchg
nop
frstor
adc
andl
rclb
testb
sbb
das
movsl
movsb
jns
or
ja
aaa
xchg
jl
rcrl
out
mov
ss
pop
push
mov
arpl
cmc
xchg
into
leave
xchg
sub
sbb
and
jge
pop
shll
aaa
push
mov
push
dec
push
negl
cmpsl
sbb
and
pop
sahf
js
and
fisubrs
in
and
iret
xor
in
fdivrl
loope
pop
adc
mov
repz
mov
dec
mov
jmp
dec
mov
mov
fcmovnu
push
in
js
loop
jmp
jle
xor
sti
xor
mov
add
push
test
bound
push
out
xchg
xchg
xchg
outsb
mov
lahf
jne
lahf
outsl
sub
pushf
test
out
arpl
ljmp
mov
push
stos
add
insl
lahf
mov
dec
loop
in
mov
mov
decl
mov
jmp
lret
cmp
std
fbstp
mov
test
push
js
movsb
outsl
push
cmp
test
dec
shrl
cmp
rcr
in
mov
ret
icebp
mov
sbb
pushf
movsb
jle
repnz
in
xchg
cmpsl
sub
add
pop
scas
xor
pop
or
jg
outsl
inc
add
pop
pop
push
out
mov
in
and
divl
out
loop
test
push
and
stos
pop
jp
stc
sbb
jne
mov
and
lahf
nop
out
and
sbb
test
sub
aam
scas
mov
call
int3
xchg
fdivs
rcl
fbstp
and
hlt
scas
out
test
mov
or
jno
push
jmp
adc
mov
pop
sub
add
lods
inc
pop
negb
lods
adcb
or
das
jp
fs
sbb
int
xchg
xchg
xchg
jne
jne
push
cmp
inc
test
push
in
in
push
aad
xor
std
fdivrs
mov
hlt
add
lock
cmpsl
sbbb
adc
std
mov
sub
movups
xchg
add
cmp
mov
aad
mov
imulb
mov
fdivl
xchg
xor
addl
ja
or
inc
fs
mov
and
and
bound
inc
lea
lcall
ret
jg
addr16
jb
jns
pop
mov
jp
dec
mov
add
sahf
xor
aam
push
out
sbb
add
lret
popf
and
stos
gs
imul
pop
adc
sbbl
jle
mov
cli
ds
ds
jns
lods
data16
dec
adc
add
addb
js
xchg
and
jle
mov
dec
mov
enter
inc
lret
ljmp
xchg
stc
push
imul
mov
cli
sub
cmp
xchg
cmp
sub
push
jl
and
push
das
sbb
jbe
mov
pop
push
sti
xor
int
loop
inc
ljmp
jo
fldl
and
cmp
ja
mov
push
js
lret
sahf
fs
inc
sub
pop
inc
xchg
je,pn
inc
mov
push
out
push
int3
int3
cwtl
or
mov
repz
negb
fildl
std
inc
out
cmp
shll
cmp
jge
imulb
cwtl
jo
push
adc
sbb
dec
test
mov
and
sarb
dec
into
repz
cmp
dec
stos
and
fistpl
sbb
lret
fcmovnu
add
push
adc
icebp
test
pop
pushl
cmpsl
arpl
push
mov
cmpb
je
add
ja
std
and
insb
nop
fnsave
lea
sbb
dec
rorl
lahf
sti
and
mov
aad
ds
testb
rcrb
inc
xchg
hlt
and
xor
ljmp
jno
jnp
scas
jle
sub
rcll
mov
or
cli
xchg
imul
sbb
pop
mov
ret
out
cmp
mov
adc
mov
popa
mov
xchg
and
push
xchg
jl
mov
movsl
cmp
xchg
mov
insl
push
nop
mov
cmpsl
push
dec
mov
mov
fxch
sbb
push
cmp
movl
or
and
xchg
sub
jp
push
popl
push
or
pop
shl
sbb
dec
mov
fcoms
xorb
add
and
push
rep
inc
or
ret
loopne
lods
inc
add
fstl
xchg
lea
scas
dec
pop
fistpl
xchg
js
pusha
xor
sbb
loopne
movsb
jmp
cli
dec
push
add
shr
pop
add
inc
sbb
sbb
push
adc
inc
push
sidtl
push
pop
xor
out
lcall
xchg
adc
movsl
pop
mov
push
mov
and
ja
pop
hlt
setns
mov
and
mov
dec
sbb
sub
dec
and
or
or
cmpb
sti
and
sbb
inc
cmp
inc
lea
cld
pop
add
loope
in
and
ds
ljmp
push
fwait
adc
jnp
lock
jmp
movsl
pop
enter
ffree
pop
mov
ficoms
sbb
jno
aas
mov
mov
mov
es
jnp,pn
out
xor
sub
and
aam
cmp
scas
inc
clc
xchg
cmc
pop
das
mov
jmp
inc
lcall
pop
pushf
insl
add
jl
pop
aaa
sub
push
jle
mov
adc
mov
inc
mov
mov
adc
fwait
pop
cmpsb
and
pop
icebp
insb
inc
sub
in
mov
pusha
or
cld
xchg
xor
jne
and
jge
mov
add
and
inc
cwtl
jg
dec
les
push
xchg
subb
inc
insb
sub
and
dec
sub
fmuls
rorl
int
ss
xchg
mov
cmp
cli
jmp
loopne
cwtl
cmpsl
adc
sbb
xchg
ljmp
in
mov
lret
les
loopne
popa
mov
sub
and
popl
xor
jnp
fiaddl
jns
add
bound
mov
xchg
dec
sarb
call
fisttps
sbb
mov
lods
mov
loopne
test
sbb
out
out
in
mov
out
lret
aas
ror
cwtl
pop
loope
and
pop
push
mov
out
dec
gs
pusha
mov
dec
les
mov
pop
mov
icebp
xor
pop
adc
add
mov
push
fwait
orb
jbe
mov
sub
ds
jl
cmp
cs
mov
jno
adc
cld
andl
cld
xor
add
jl
dec
int
cmp
sbb
out
add
mov
xchg
pop
mov
push
mov
mov
lcall
pop
jle
pop
mov
cmp
xchg
mov
jle
ret
sbb
enter
xor
mov
add
add
jmp
sub
dec
jge
dec
f2xm1
sub
push
sbb
sbb
dec
mov
mov
stos
mov
rolb
and
lds
inc
dec
mov
jo
push
pop
inc
push
test
jg
pop
int
lahf
xchg
mov
cvttps2pi
lea
jg
sbb
ljmp
adc
nop
insb
mov
inc
ret
jp
in
dec
mov
cli
jno
ja
mov
orb
rclb
pop
int
mov
js
push
daa
in
xchg
jl
adc
bsr
adc
outsb
mov
push
shrw
das
icebp
sub
pop
in
cmc
xor
lock
inc
out
inc
or
jae
icebp
sub
jle
test
iret
pop
repz
xchg
aam
dec
mov
jecxz
push
into
push
push
xchg
shll
xor
dec
hlt
push
hlt
mov
es
pusha
call
fadds
outsb
mov
dec
mov
fwait
or
jno
xchg
jl
mov
mov
add
push
inc
mov
xor
mov
int
scas
push
addr16
xor
lds
leave
jl
mov
scas
lret
jl
dec
xchg
ret
imul
push
push
nop
xchg
outsb
push
sub
inc
sub
stos
jae
or
dec
loopne
jg
jle
lods
aaa
imul
sub
or
pop
out
loop
test
lahf
outsb
popf
sbb
pop
movsl
lret
nop
pop
repnz
rcl
arpl
adc
sbb
sbb
sti
je
xlat
push
add
or
mov
mov
pushf
fwait
and
fwait
cmp
push
push
pop
jg
icebp
dec
inc
sub
sbb
fbld
stc
pop
cltd
gs
lods
fidivs
addr16
cmp
int
outsb
insb
nop
jge
nop
mov
xchg
inc
popf
mov
aam
pop
mov
in
push
xor
mul
jl
cltd
stos
sbbb
outsl
mov
das
call
xchg
call
mov
lods
and
mov
push
or
xchg
sub
cltd
lds
pop
cwtl
push
mov
inc
sub
or
push
push
outsl
adc
mov
shll
pop
mov
test
sbb
add
pushf
bound
mov
ja
or
sub
push
add
cmpsl
call
or
scas
leave
loope
in
in
jne
mov
push
inc
mov
mov
pop
rorb
cmp
pushf
repnz
out
add
outsl
mov
and
xor
rorb
cmp
gs
stc
dec
iret
lret
push
cmpsl
sbbl
imul
cmpsb
sbb
cmp
jb
mov
fsubrl
fldcw
insb
lods
adc
jbe
lods
mov
mov
jl
xor
hlt
sahf
xchg
push
pop
sbb
movsl
mov
xchg
jle
hlt
push
sahf
in
cwtl
das
mov
fnstsw
repnz
sub
fnsave
pop
sbb
fmull
movups
xchg
stos
and
test
sub
jbe
and
xorb
xchg
sbb
jb
push
aam
cmp
inc
mov
mov
call
popf
dec
or
adc
fidivrs
mov
cmpsb
cmp
pop
rolb
outsb
xor
mov
ds
movsb
loop
mov
xor
push
enter
xchg
push
adc
inc
cmpb
out
push
lds
adc
sub
mov
daa
adc
pavgw
fildll
in
mov
iret
add
cmpsb
ds
and
lret
add
xchg
cmp
sbb
push
dec
jae
cmp
ljmp
push
std
pop
mov
adc
scas
les
xchg
xchg
ss
adc
inc
fsubr
je
es
jae
into
gs
adc
and
mov
inc
cli
insl
add
popa
mov
inc
sbb
sbb
out
inc
loop
add
cmp
mov
jae
es
movl
mov
ret
xor
xchg
rcrl
mov
shrl
mov
push
adc
mov
and
hlt
aaa
lods
subb
jge
mov
dec
loop
jmp
push
mov
fists
lret
ds
inc
push
lods
jbe
sbb
adc
sub
xor
mov
inc
and
dec
bound
lds
jmp
jp
dec
cmpsb
adc
shrb
push
sub
sbb
mov
adc
imul
cmp
hlt
sbb
and
push
popa
sti
xor
mov
enter
push
ljmp
xlat
mov
cmp
and
and
push
movsb
push
test
cld
mov
inc
movsl
scas
lea
ljmp
testb
and
movsl
add
lcall
andl
sbb
xor
jns
xor
sub
aad
push
or
jb
daa
in
test
cli
and
jge
in
sbb
dec
cmp
or
cs
jmp
sbb
and
negb
jecxz
dec
mov
adc
push
cmpsb
xor
pop
jne
int3
aaa
and
inc
jb
in
aad
cmpsl
gs
sbb
sub
jbe
and
repz
mov
lock
add
movsb
cli
mov
cmp
imul
cmp
cmp
sbb
mov
loopne
fs
xor
hlt
in
ret
xchg
mov
js
cmp
adc
xchg
sub
or
ficoms
cltd
dec
sar
ret
inc
icebp
stos
cmp
add
mov
jle
enter
pop
mov
stos
mov
cs
or
test
sub
int3
out
test
and
adc
sahf
add
inc
test
mov
push
lahf
xor
push
inc
cmp
mov
in
pusha
stos
pop
int3
jl
rcll
loopne
hlt
pop
aad
cmpsl
xor
repz
repnz
mov
push
sti
and
cmc
pop
scas
test
mov
stc
nop
ret
loopne
xlat
pop
movsb
in
sub
fildll
repnz
jmp
cmp
cmp
std
das
xchg
sub
and
push
je
lahf
cli
jb
xchg
cmp
outsb
xchg
dec
xchg
push
lods
dec
outsl
pop
iret
dec
inc
imul
pop
jl
insb
ss
test
push
rcrl
push
sub
int3
sbb
adc
lea
mov
sbb
lret
cmp
aad
push
into
cmp
shrb
fidivs
push
out
and
jae
jo
cld
outsl
xchg
mov
adc
xorl
and
xchg
mov
cmc
dec
test
icebp
sub
test
jne
cmp
dec
out
aaa
aam
test
aad
xchg
shrl
fildll
sarb
add
xor
imul
add
hlt
pop
push
imul
js
xor
inc
dec
xchg
mov
and
add
xor
lret
jle
jns
hlt
fisttpll
jb
mov
mov
sub
ret
mov
test
rorl
push
shrb
jne
sti
dec
xchg
pop
push
adc
outsb
jge
lcall
and
aaa
lea
mov
fdivl
in
pop
mov
push
es
in
jb
mov
fbld
jecxz
dec
jecxz
mov
mov
cmp
pop
sub
pop
add
jmp
pop
clc
push
psubusw
nop
cmp
add
fnsave
sbb
incl
arpl
fxch
push
call
or
dec
lods
loopne
fidivrs
fisubs
jecxz
pop
into
pop
mov
int3
out
jl
push
cmp
xor
jmp
inc
inc
add
test
mov
lret
pusha
mov
xor
sbb
sbb
pop
add
xor
lret
aam
mov
sbb
sahf
mov
push
adc
jo
add
scas
movl
mov
sub
fbstp
xchg
jp
sti
push
mov
addr16
scas
popa
push
jl
xor
sarb
lcall
insl
push
jle
sbb
test
movsb
cmp
lret
sti
and
pop
push
sbb
enter
ja
outsb
dec
out
lret
cld
shrb
sbb
mov
inc
outsl
cmp
mov
rcrl
mov
js
inc
or
jle
xchg
sub
nop
mov
and
add
xor
icebp
mov
mov
cmpsb
jecxz
jle
flds
lds
push
dec
jecxz
dec
mov
add
mov
mov
cs
testb
inc
adc
js
les
cltd
xor
lret
jns
in
push
out
dec
add
jo
push
mov
xchg
mov
ret
out
cmp
pop
in
inc
pop
inc
pop
icebp
jb
enter
js
lds
xchg
sub
adc
mov
insb
xor
mov
mov
loopne
xchg
pop
cmc
pop
xor
movsl
sub
xchg
mov
lcall
iret
mov
cmp
xchg
xor
sbb
push
xchg
test
and
daa
push
inc
fiaddl
jbe
push
test
pop
repz
leave
fidivs
pushf
lret
fdivr
xchg
push
lock
nop
and
sbb
je
cmp
hlt
mov
mov
aas
pop
inc
out
pop
outsl
push
lea
ja
push
scas
lea
jb
sub
add
mov
lods
dec
data16
jge
pop
lcall
sub
dec
lock
inc
ror
pop
add
xor
xchg
and
jno
out
xchg
sub
lret
scas
xchg
mov
push
movsl
dec
or
sub
xlat
pop
stos
inc
clc
dec
mov
lret
inc
sub
adc
xchg
inc
xor
pop
gs
jl
xchg
sub
mov
mov
cmp
daa
lea
cmp
addr16
rol
clc
loop
xchg
sbb
push
dec
push
jl
push
mov
das
xor
cli
test
xor
pop
int3
aas
loopne
hlt
mov
mov
cmovno
mov
int
fldl
stos
mov
ret
sti
cld
pop
out
xchg
insb
xchg
or
and
add
and
pop
js
push
mov
adc
hlt
mov
sbb
jp
dec
inc
push
in
pop
mov
fs
dec
inc
and
imul
or
xchg
push
insl
mov
inc
sti
dec
andl
shl
inc
in
xchg
mov
pop
cmp
push
mov
mov
push
fdivr
xor
fwait
addr16
repz
push
cmc
notb
sub
imul
dec
sbb
adc
ret
pop
into
lock
pop
mov
jmp
or
stc
pop
mov
ret
push
outsl
out
xor
insb
add
stos
push
jne
imul
add
mov
ret
push
scas
ret
xchg
mov
pop
aam
adc
add
cld
addr16
inc
pop
mov
sub
xchg
divl
pop
jnp
mov
shrl
push
fsubrl
push
cmp
jl
push
and
inc
leave
adc
mov
add
xor
rolb
pop
xchg
fwait
es
aas
xchg
inc
ret
and
and
xor
je
lahf
jecxz
xchg
cmp
xor
in
jg
aam
or
xlat
mov
sub
popa
jnp
mov
cmc
mov
xor
and
mov
xor
adc
test
and
inc
and
jnp
in
cmp
into
cltd
pop
es
fs
std
loop
lds
push
xor
into
mov
ljmp
mov
clc
pop
cmpsl
xor
sub
push
inc
mov
mov
repnz
or
in
lret
mov
push
aad
in
adc
rcrl
bound
and
xchg
shlb
not
in
test
insb
mov
mov
adc
scas
into
insl
mov
push
stos
fwait
lret
xor
popa
cld
es
in
mov
dec
fistpll
hlt
imulb
in
out
in
mov
fbld
adc
inc
fdivrs
out
mov
loopne
xchg
sub
xchg
in
test
lock
fisubl
xlat
sbb
daa
jp
push
insb
fmuls
mov
inc
nop
daa
xor
xchg
mov
ds
aas
xchg
sub
inc
and
mov
dec
sbb
cmp
gs
fidivs
data16
in
imul
fidivl
int3
mov
mov
in
pop
inc
cmpsb
cmp
mov
in
push
inc
stc
aaa
int3
mov
pop
mov
fnstenv
mov
repz
imull
je
push
add
outsb
repnz
mov
movsl
sbb
add
jp
or
push
or
jae
push
fs
out
es
or
dec
ds
aad
leave
and
cmpl
and
lea
push
push
mov
cmpsl
ds
jl
sbb
rorl
int
aas
pxor
and
into
ss
pop
cmp
insl
jmp
dec
xchg
pop
out
ret
test
add
addr16
shlb
js
inc
mov
scas
inc
push
in
or
cltd
aas
sti
mov
cmpsl
stc
jmp
push
icebp
jmp
xchg
cmp
mov
mov
mov
mov
add
cmp
jae
fildl
ret
pop
pop
adc
adc
mov
and
hlt
xor
loope
mov
hlt
pop
add
out
cmp
sbb
xchg
mov
lods
xchg
ds
repnz
lcall
shrb
ds
add
pop
cmp
dec
adc
das
xchg
aaa
dec
xchg
xor
es
call
je
or
das
imul
out
and
mov
stos
loop
mov
leave
xchg
aam
cmp
cmp
sub
inc
out
lock
or
pop
out
jno
push
inc
or
mov
adc
in
jo
inc
repnz
or
orl
dec
adc
sbb
ss
mov
rorb
cli
out
jb
data16
es
lret
push
sub
popf
pop
jle
cmp
sbb
fisubrs
aaa
cltd
mov
lods
pushf
inc
cmp
adcl
jae
and
xor
sbbb
das
mov
dec
add
or
fistps
sbb
dec
lds
cmc
popf
pop
add
in
inc
xchg
dec
add
cld
xchg
pop
fldl
xor
mov
and
fidivrs
out
adc
or
pop
inc
or
xchg
mov
out
jg
mov
mov
icebp
or
into
scas
out
scas
xchg
mov
stos
xor
mov
mov
pop
mov
fbld
orl
cmp
xchg
pop
dec
dec
or
ret
stos
sub
mov
xchg
inc
stos
loope
push
xchg
mov
nop
push
shlb
movsl
mov
jb
push
push
call
repnz
aas
shl
jae
daa
and
xchg
ja
mov
mov
adcl
js
push
ss
out
xchg
sub
outsb
jmp
stc
popf
ja,pt
out
cmpsb
outsb
adcl
cmp
je
xor
mov
pop
out
mov
mov
adcl
cld
mov
les
fst
andl
mov
push
addr16
cmp
mov
xchg
mov
mov
pop
int3
xchg
mov
xchg
cmp
xchg
pop
cmpl
mov
jge
mov
test
clc
ja
push
std
fdivrs
mov
ret
roll
pop
add
stos
outsl
test
stc
jae
loop
in
cmpsb
mov
test
sti
push
das
lret
mov
bound
mov
ja
pop
idivl
outsb
ljmp
xchg
aas
cmp
popa
neg
and
xchg
jno
push
pop
jo
xchg
jge
out
jmp
imul
es
xor
sub
and
sbb
push
loop
push
jb
insb
jmp
jecxz
les
xor
in
imul
shl
jle
mov
in
adcb
adc
jge
pop
xor
out
push
loop
test
xchg
aas
je
insl
jmp
loop
les
xor
es
xchg
mov
pop
fadd
outsb
cmc
sbb
stos
xor
std
fs
sub
imul
movsb
sub
xor
clc
or
jmp
cli
ss
push
scas
pop
add
movsl
gs
lcall
fstl
or
bound
fdivrs
je
outsl
pop
xor
mov
and
push
cld
xorl
mov
aaa
popf
loope
dec
adc
into
pop
add
or
pushf
pop
orl
lahf
in
in
orb
loope
out
xchg
aaa
cmp
das
fiaddl
mov
push
fs
shrl
fadds
loop
add
daa
mov
inc
pop
ljmp
in
loope
inc
das
xor
jmp
add
push
fdivrl
mov
enter
cmp
cld
dec
xor
xchg
sbb
aam
xor
push
push
clc
sub
pop
add
inc
xchg
cmp
and
sbb
cmp
fs
xor
cmpsl
sub
rcl
out
inc
mov
cld
orl
dec
adc
leave
jo
cmpsb
aas
daa
test
fwait
xor
sub
pop
pop
ret
mov
loopne
sar
or
push
in
jnp
roll
movsl
xchg
pusha
sub
jg
mov
or
lret
gs
sbb
cmp
dec
sbb
test
cmp
in
or
lret
hlt
jns
jmp
cmp
dec
adc
add
popf
stos
xor
push
sbb
jecxz
pop
mov
cmc
stc
imul
arpl
jge
cmpsb
ret
rorb
fidivrl
xchg
pop
cli
mov
test
hlt
jge
push
cmp
shrl
inc
or
bound
mov
pop
std
into
daa
out
outsb
sbb
inc
inc
adc
out
sti
pop
inc
add
in
mov
jg
cmp
jo
sahf
adc
xchg
jg
cmp
hlt
jge
pop
idivw
push
jle
mov
xchg
adc
jl
into
cmp
jmp
push
leave
popf
clc
aad
out
ret
repz
push
leave
sbb
cltd
push
repnz
dec
in
push
mov
jbe
popa
in
and
loope
and
inc
icebp
mov
xchg
xchg
lods
xor
sub
jo
mov
adc
jecxz
je
add
rorl
sub
iret
insl
fdivl
mov
cmpsl
ds
clc
jl
mov
in
fcmovnb
lahf
lock
aaa
mov
std
or
sbb
inc
adc
xchg
out
push
add
daa
outsl
ljmp
and
push
outsb
call
add
sub
jns
scas
xor
lret
pop
mov
fstl
sbb
jl
add
shr
jne
cmp
repz
sbb
jne
mov
mov
leave
mov
dec
or
adc
fnstcw
pusha
out
push
cmpl
iret
mov
movsb
inc
fst
jne
test
mov
faddl
mov
addr16
pop
mov
push
mov
xchg
outsl
test
leave
push
mov
cmc
jl
cmp
call
js
pop
test
mov
addr16
sbb
jle
cli
jle
sarl
dec
adc
outsb
hlt
pop
pop
mov
inc
lea
fwait
push
xchg
xlat
jnp
pop
push
cld
outsl
out
scas
xor
jge
xchg
popl
in
sub
sarl
scas
xor
fistpll
xorb
jb
xchg
stos
insb
sub
jnp
xchg
aas
or
cs
push
fidivl
lahf
inc
adc
dec
pop
xchg
mov
sbb
lret
inc
cmp
inc
cmp
mov
daa
xchg
inc
mov
mov
fstps
ret
dec
adc
push
aas
mov
xchg
in
sub
adc
mov
movsl
sahf
cmp
push
xchg
sub
inc
mov
jbe
fldl
ret
and
in
mov
and
add
xchg
push
jmp
stc
notb
mov
jbe
js
out
inc
imul
pop
call
cli
stc
fs
inc
or
aaa
popa
jmp
out
mov
ljmp
mov
test
insb
sbb
test
ja
cwtl
aaa
xchg
and
shl
loopne
push
outsl
jmp
inc
jbe
xacquire
cmp
je
and
stos
add
mov
inc
xchg
adc
std
and
inc
inc
sbb
mov
push
mov
cmp
hlt
clc
das
outsl
in
aam
push
lret
decl
add
out
pop
aam
std
pushf
cmp
xchg
test
test
sub
push
stos
daa
fidivl
fcmovbe
add
cs
lcall
js
cmp
mov
enter
arpl
fldenv
in
dec
add
pushf
cmp
lret
cli
pop
mov
sbb
sbb
fnstcw
push
lds
fdivrs
lret
xchg
fistps
pop
lcall
adc
xchg
push
push
push
push
std
jl
sub
lock
xor
into
mov
pop
mov
sub
cwtl
imul
lret
test
add
and
xor
test
dec
adc
mov
pop
mov
scas
jle
rcll
loope
imul
jo
mov
push
rol
xchg
sbb
test
out
inc
popf
cmp
mov
mov
shlb
sub
pextrw
movsl
xor
fistpl
cmp
add
outsb
hlt
push
pop
adc
int3
xchg
sbb
xchg
rcll
inc
out
add
bound
repz
cmp
jbe
std
ja
cmpsb
and
gs
and
xor
jns
mov
sbbl
aad
xchg
pop
mov
rorl
ja
adc
addb
int3
mov
in
jne
popf
xchg
or
xchg
xor
push
loopne
ss
jns
inc
or
shlb
mov
pop
add
scas
orl
cmc
out
push
or
stos
shlb
pop
mov
out
les
cli
cmp
subl
pop
hlt
adcb
mov
gs
fdivrs
jl
out
lock
sti
rcrl
out
xchg
sbb
cmp
mov
lea
pop
sub
repz
mov
out
ss
adc
mov
out
jmp
outsl
sub
pop
and
mov
lods
adc
cmp
push
cmpsb
sub
push
or
jae
push
stc
jg
dec
push
subl
pop
xlat
mov
dec
mov
xchg
dec
fidivl
adc
cmp
xchg
and
mov
jle
adcl
push
outsb
add
std
test
lods
das
jne
xlat
jns
popa
aas
mov
jl
pop
add
mov
mov
push
test
mov
rorb
jecxz
mov
xor
cmp
inc
roll
fists
adc
mov
repnz
inc
stos
adc
cmp
sub
pop
adc
dec
dec
or
clc
xchg
push
les
icebp
fs
cmp
lock
lret
bound
ja,pn
pusha
inc
test
imul
mov
or
flds
mov
rolb
mov
clc
fdivrl
push
add
push
sbb
pushf
xchg
aam
test
ret
and
xchg
in
mov
lret
out
int
sbb
aad
push
lret
mov
jae
test
mov
mov
outsb
aam
xchg
scas
jnp
lret
mov
lahf
add
loope
dec
inc
or
sub
push
lret
faddl
stos
addl
cmp
fwait
cmp
and
mov
mov
and
or
mov
push
mov
jae
mov
adc
jnp
test
pop
decb
sub
sbb
inc
outsl
out
bnd
inc
sbb
xchg
and
repz
mov
xor
fiadds
call
stc
out
jne
lods
lock
in
push
lret
mov
push
clc
shll
pop
aas
repnz
xchg
out
sti
pop
mov
mov
mov
add
jo
push
push
sbb
or
aas
loopne
push
fwait
sub
mov
iret
clc
and
mov
jge
pop
lcall
push
sahf
mov
push
fimuls
sti
ljmp
les
cmp
and
lret
cmp
lcall
or
popf
xchg
cmp
mov
mov
test
lret
inc
mov
rolb
mov
mov
enter
pop
int3
and
stos
adc
rcll
pop
fs
add
subb
mov
mov
mov
cmc
lret
push
xchg
sbb
int3
les
mov
sbb
filds
mov
xchg
inc
leave
iret
mov
xlat
fnstcw
popa
xor
lods
fisubs
fdivl
xchg
adc
call
and
cmp
pop
dec
mov
das
lea
xchg
cmp
jp
cmp
mov
rcrl
in
jl
mov
arpl
lods
add
pusha
icebp
fs
push
pop
cld
das
cmp
push
xor
out
mov
sbb
cmp
pop
es
cs
cmp
insb
adc
movl
push
sti
fistl
cmp
rcrl
out
jne
dec
mov
leave
leave
mov
cltd
inc
pusha
ret
mov
lods
orl
neg
jge
call
pusha
repnz
dec
cmpsb
xor
dec
jl
andl
jge
test
push
lea
call
mov
fnstsw
out
push
cwtl
push
mov
ret
enter
sbb
in
or
test
arpl
cmp
mov
iret
xchg
lahf
movsb
dec
adc
jbe
ss
sub
xor
test
push
dec
subl
je
xor
test
cwtl
inc
push
and
rolb
inc
dec
mov
or
cwtl
lea
gs
sub
push
add
add
sbb
in
cmp
sbb
call
cli
push
into
insl
inc
xor
add
and
dec
cmp
mov
and
xor
les
out
jb
outsb
inc
or
lods
jnp
jo
or
or
pop
negb
jl
in
dec
mov
add
fnstsw
push
adc
stos
xchg
adc
bound
push
and
ds
test
dec
adc
dec
dec
mov
xorb
mov
es
aad
pushf
mov
jecxz
ljmp
and
xor
out
faddp
es
jb
pushf
inc
inc
push
into
mov
cltd
inc
or
filds
enter
mov
stos
sub
inc
orl
mov
nop
pop
inc
fldl
aas
orl
sti
fs
dec
push
add
jns
mov
shlb
fcmovb
mov
int
mov
sbb
pop
sbb
xor
cwtl
ja
sub
fcmovnbe
movsl
xchg
or
ds
repz
mov
stos
cwtl
inc
or
inc
or
adc
or
inc
xchg
cmp
xor
pop
loopne
xchg
cmp
cmp
or
ret
xor
jnp
adc
ljmp
inc
sbb
flds
mov
dec
inc
and
lds
pop
add
fs
in
adc
push
cld
lcall
shrb
sti
gs
xchg
jno
rorb
jnp
fcoml
negl
xor
mov
adc
mov
xchg
repz
mov
mov
dec
or
push
mov
fwait
repz
out
pop
xchg
div
popa
sub
or
or
lret
mov
push
adc
jno
test
xchg
dec
sub
and
xchg
fnstcw
dec
xchg
mov
cld
and
in
mov
aas
cltd
pop
or
hlt
adc
fstpt
dec
ret
xchg
loop
and
mov
cmpsl
roll
loope
testl
lock
cmp
loope
sbb
adc
mov
loopne
aas
mov
xor
movsb
adc
mov
sub
cmp
insb
inc
inc
out
inc
lcall
fisttpll
out
add
fistpll
pop
or
movsb
sti
add
mov
cs
test
loope
std
pop
add
sbb
shl
pop
cld
fsubl
lods
mov
popf
inc
stos
movsb
pop
pushl
movsl
aas
mov
mov
stos
xor
mov
jb
jo
push
add
push
jns
xchg
aas
shll
lcall
roll
jmp
dec
fistps
cmp
jl
dec
sarb
es
sbb
push
dec
adc
ror
iret
out
ss
notb
adc
fwait
dec
js
mov
adc
mov
movsl
xor
xchg
icebp
arpl
scas
sub
sbb
pop
test
inc
imul
dec
or
imul
psrad
adc
push
call
mull
verr
js
popa
cmc
cmp
push
mov
icebp
mov
xor
fnstcw
cmpsb
stos
cli
faddl
add
push
stc
pop
push
add
xchg
insb
hlt
mov
out
jbe
fsubrp
jbe
outsl
push
ret
jg
jmp
and
ficoms
ret
sbb
push
clc
cmp
test
sub
jecxz
add
aaa
test
lods
and
jp
mov
pop
add
push
gs
pop
cltd
inc
mov
cmp
ds
push
add
test
adc
mull
add
pop
sbb
adc
add
push
out
ss
add
scas
pop
mov
pusha
mov
stos
add
das
lock
and
nop
fs
sbb
out
and
into
std
xlat
jp
sbb
mov
mov
mov
orl
leave
xchg
stc
enter
in
push
rcr
test
jbe
inc
xchg
jp
xchg
rorl
int
mov
ret
and
mov
push
ret
xchg
adc
shr
dec
iret
lea
sarb
mov
pop
stos
sub
lods
out
or
pop
mov
mov
mov
fidivrl
mov
ds
dec
rclb
lods
or
mov
jmp
fisubrl
jg
or
cld
mov
mov
cld
jle
pop
mov
add
scas
xor
lcall
into
fbstp
repnz
mov
out
mov
inc
and
ret
xchg
xchg
cmp
push
xlat
js
in
iret
nop
jns
fs
js
ja
enter
push
and
jbe
fiadds
sbb
jl
push
dec
inc
adc
and
bswap
pop
cmp
sbb
fistps
mov
ds
or
mov
int3
push
sahf
cmp
pop
jg
mov
mov
push
push
call
cmc
test
ret
shrl
lea
jp
scas
inc
loope
jl
mov
gs
inc
rcll
in
sbb
test
mov
stos
pop
fadd
jecxz
adc
inc
push
cli
insb
xlat
jge
jp
test
jecxz
add
pop
sti
outsb
jmp
xchg
jecxz
mov
add
or
inc
nop
cmp
mov
and
call
imull
cmpsl
fstps
ret
xchg
lret
add
pop
xchg
sub
mov
lcall
sub
lcall
mov
movsb
mov
lods
xchg
cmp
jne
jb
test
popa
dec
adc
icebp
in
jo
clc
push
std
xor
and
inc
cmp
push
cld
fsubrl
sti
mov
and
dec
add
sub
popf
imul
dec
dec
adc
cmp
stc
js
arpl
shll
movsl
popf
pop
mov
mov
pushf
cmp
stos
into
mov
xlat
cli
xchg
pop
data16
nop
cwtl
sub
leave
sbb
sbb
jo
pop
pmullw
cmp
lea
sub
mov
mov
fdivrs
xchg
push
call
imul
push
cmp
sub
cmp
sbb
js
xor
cmp
mov
lock
mov
mov
ds
inc
mov
ljmp
sub
int
mov
inc
xor
lcall
out
leave
int3
loopne
aas
sbb
das
stos
mov
fiaddl
adc
inc
xchg
inc
push
imul
dec
adc
aas
in
fcomi
lret
mov
stos
lahf
cmp
cmp
jecxz
aas
pushf
daa
sti
aam
jg
mov
aam
mov
mov
fdiv
dec
push
add
shlb
pminub
jmp
stc
ljmp
dec
insb
hlt
xor
and
mov
nop
inc
shrl
inc
xchg
sub
xchg
lods
mov
shll
dec
mov
sbb
fnstsw
jno
xchg
xchg
sbbl
mov
movsl
lods
lea
push
roll
iret
xchg
mov
or
pusha
loopne
scas
shll
movsl
adc
push
jo
inc
or
aam
in
add
gs
push
orl
jb
mov
adc
mov
mov
repz
dec
or
push
lcall
jg
jb
imul
fcomps
mov
scas
push
add
sbb
pop
cld
add
pop
mov
xor
lret
push
xchg
nop
inc
or
xor
movsl
xor
mov
nop
pop
push
xor
dec
mov
mov
add
inc
sbb
push
insb
mov
negl
sbb
stos
outsl
xchg
inc
dec
mov
mov
xchg
rcll
mov
and
jg
jmp
xor
and
les
push
xchg
pop
andl
movsb
fisttpll
shlb
and
data16
fimuls
pusha
ljmp
stc
fs
cmc
pusha
jmp
sbb
jb
mov
in
pop
xor
jmp
xchg
cmp
push
clc
mov
lods
pusha
arpl
in
outsb
test
insl
out
mov
fnstsw
jp
test
test
imul
or
push
popf
xchg
fs
fistl
fadds
std
pusha
mov
lock
stc
push
pop
les
mov
inc
call
cld
sub
jnp
int3
xchg
imul
or
push
jb
ljmp
jle
lahf
inc
mov
mov
dec
pushl
cld
mov
sub
mov
rolb
outsb
int3
nop
inc
push
jbe
andl
rolb
push
subl
sub
repz
pushf
cmp
jno
je
in
in
add
out
es
dec
nop
aaa
add
sarb
push
jge
leave
lock
sahf
push
sbb
xchg
xchg
ljmp
push
sub
scas
xchg
idivl
fidivs
push
add
push
inc
pop
jb
call
add
push
test
outsb
std
fsts
jg
clc
or
lcall
into
xchg
ljmp
lret
test
and
ja
mov
enter
enter
sbb
pop
jae
int
mov
mov
push
insl
lock
rcll
mov
test
scas
push
lds
dec
dec
adc
movsb
jno
jb
mov
mov
xchg
andb
aad
adc
fs
test
jno
push
loop
mov
ret
push
jb
xlat
push
andl
mov
clc
out
mov
push
inc
neg
ja
popf
arpl
cmc
insb
out
cmpb
scas
filds
in
mov
pop
outsl
icebp
out
pushl
popa
inc
loop
daa
ja
xchg
inc
pushf
push
mov
pusha
notb
rorb
and
inc
cmpb
enter
insl
sbb
subb
das
cmpb
jno
popf
inc
out
dec
adc
jo
pmullw
ret
add
jp
push
push
push
sub
push
push
inc
mov
pop
add
ret
jmpw
pop
add
lock
lock
int
call
incb
int3
or
pop
add
pop
and
cmpsl
icebp
or
sub
scas
sub
push
add
incb
lret
cltd
hlt
bound
xor
jecxz
cmpsl
mov
fnstenv
stos
xor
or
mov
add
xchg
jge
insb
sbb
sarb
dec
ret
push
cltd
inc
fdivrl
push
rcll
or
sub
aas
les
dec
ja
ret
cmp
ja
push
sub
jns
xchg
xchg
jb
add
mov
cs
out
es
lea
ss
push
cld
jge
add
arpl
push
mov
rcrl
mov
and
jb
xchg
lock
data16
int
adc
shrb
faddl
loop
mov
jmp
sbb
shr
imul
mov
jmp
test
clc
insl
ljmp
or
xchg
mov
and
adc
lock
and
gs
shrl
fildl
lret
inc
or
xor
xchg
lret
sbb
sbb
adc
scas
enter
mov
popa
adc
ss
inc
es
add
add
inc
push
mov
popf
sub
or
call
add
mov
push
xchg
lods
sub
cmp
cmpsb
pop
std
dec
shlb
xchg
fidivrs
mov
loope,pt
inc
adc
adc
cmpsb
jg
xchg
inc
xchg
gs
jne
xor
push
pop
push
gs
test
mov
mov
loope
test
lods
inc
or
stos
mov
orl
filds
sub
mov
aas
pop
lcall
lret
js
xor
fists
xor
scas
dec
adc
aaa
cwtl
inc
and
aaa
push
mov
leave
orb
pop
add
sub
add
ljmp
cmp
sbb
mov
lret
movsb
jnp
sbb
cmp
xchg
test
arpl
icebp
pop
ret
es
push
jnp
jo
icebp
pusha
ja
loope
mov
mov
inc
adc
in
outsb
dec
dec
test
xchg
mov
pop
in
mov
adc
shrb
add
and
ret
mov
lock
sbb
loope
ds
stc
cmp
cmpsl
pusha
xchg
and
je
xchg
cmp
rcl
enter
sub
pop
clc
fidivrs
pusha
lcall
outsb
mov
fldcw
cmp
sbb
pop
lcall
sub
fiaddl
shrl
mov
iret
rorl
push
repnz
mov
mov
rolb
or
jnp
subb
pop
xchg
inc
mov
mov
mov
mov
pop
into
sar
in
jae
add
jb
jns
mov
inc
pop
lds
sbb
cmp
aaa
popf
xchg
cs
xor
lds
xchg
mov
mov
dec
cmpsb
fadds
cmp
and
lahf
jge
movsb
ret
repz
sub
cmp
inc
nop
sub
mov
cmp
sub
jl
dec
jecxz
fsubrs
mov
addl
dec
or
cld
pop
xlat
push
out
imul
mov
cmp
iret
testl
mov
push
cmp
mov
mov
mov
das
lods
setg
into
ficoml
mov
shll
mov
jne
xchg
aas
and
or
outsl
and
rclb
and
ss
xchg
rcrl
pop
add
push
decb
fcoml
mov
or
push
pop
mov
or
cmpsl
ss
push
xchg
test
pop
mov
sar
xor
sub
ret
add
pop
insl
mov
mov
mov
or
pushf
inc
push
gs
les
jbe
mov
pop
icebp
pop
sar
bound
adc
xchg
cmp
jp
ret
adc
pop
dec
dec
adc
mov
jge
stos
leave
mov
pop
and
add
push
enter
mov
out
outsb
test
mov
dec
sbb
or
pop
sub
pop
xchg
xchg
and
pop
jg
pop
cld
pushf
fs
cmp
shll
sar
push
jmp
mov
push
add
push
call
cmp
fsubl
push
add
pop
es
in
addr16
cmp
mov
push
push
cmp
add
mov
jbe
sub
mov
xor
insb
jmp
jmp
and
loop
sub
test
es
shlb
jmp
add
pop
adc
aad
sbb
dec
cmpsl
cmp
cmp
mov
cmpsb
lods
sub
mov
mov
dec
inc
dec
push
or
sbb
cli
xor
test
popf
mov
bound
aad
xlat
push
mov
mov
fbld
push
cmp
jne
xchg
cmp
rorl
adc
out
imul
sub
sbb
cmp
rcrb
inc
push
add
push
movsl
cmp
iret
mov
add
repz
pop
ficoms
jae
pop
in
inc
cli
xchg
xor
jbe
and
pop
popl
int3
mov
push
dec
mov
pusha
xchg
jecxz
ret
adc
ss
stos
jl
out
fldl
leave
mov
popa
in
int3
pop
loope
add
in
outsl
rclb
std
adc
jne
ja
sarl
out
jb
arpl
fstps
movsb
les
jmpw
cld
pop
add
and
mov
inc
xchg
xchg
dec
in
push
lret
bound
insl
call
mov
cmpsb
arpl
cltd
mov
jl
stc
mov
shl
push
xor
mov
mov
fs
pop
int
icebp
jle
mov
jbe
mov
outsl
or
call
adcl
icebp
or
sahf
xor
imul
xor
inc
mov
cwtl
inc
and
leave
mov
popl
jae
xor
mov
stc
pop
and
cmp
push
shlb
add
jg
in
push
fdivrl
mov
rolb
fbld
out
addr16
xchg
inc
mov
mov
arpl
hlt
pop
leave
pusha
fs
sbb
xchg
xchg
icebp
pop
in
sbb
add
aam
and
push
ret
cmp
daa
jno
push
hlt
jae
jmp
notl
cmpsl
and
inc
out
jne
or
and
stos
dec
adc
ds
add
out
lods
stos
icebp
adc
sbb
arpl
iret
sub
pop
lock
int3
mov
int3
adc
push
xor
jbe
inc
sub
inc
inc
dec
push
int3
pop
popf
xchg
test
push
sahf
shrl
test
jg
test
mov
rcll
cmp
int
movsb
pop
sar
xor
jmp
cmp
enter
rcrl
scas
int3
jl
xor
dec
repz
adc
dec
mov
les
xchg
cli
pop
mov
loop
sub
andl
or
pushf
inc
pop
inc
or
jecxz
jns
jne
inc
push
mull
nop
cmp
in
mov
mov
sub
adc
mov
xchg
psrlq
scas
xor
xchg
je
cli
psrlq
aaa
fwait
in
jno
sub
call
jl
or
adc
sub
mov
push
jmp
or
je
call
sti
xchg
nop
cmp
xchg
sbb
mov
loopne
ret
push
in
xchg
dec
loopne
test
or
test
mov
xchg
sub
dec
mov
subl
into
gs
rcrl
in
andl
fbstp
dec
or
push
fwait
sub
test
inc
fstpl
lret
sti
aas
fs
jo
pop
out
dec
xchg
sbbb
outsb
jbe
mov
ret
hlt
aaa
mov
dec
inc
mov
jae
push
cli
xchg
bsf
xchg
xor
scas
popa
femms
movsl
inc
xorb
mov
sub
xchg
aam
jmp
mov
loope
es
pop
push
imul
stos
pop
xchg
mov
scas
inc
lods
movsl
cmp
pop
int
push
inc
pop
xor
andb
or
xlat
sbb
mov
sub
fstpl
fs
out
pushf
pop
lock
sbbl
out
ja
and
cmp
mov
push
call
or
jne
out
push
cmp
xchg
mov
lea
shlb
fildll
ret
push
out
xchg
dec
loopne
cmpsl
jne
flds
xchg
sub
test
dec
mov
subb
cmp
iret
sarw
scas
hlt
in
test
rcr
jbe
dec
or
push
lcall
cmpsl
in
inc
ficomps
ds
outsl
sbb
dec
nop
sbbl
insl
jbe
lahf
jecxz
cmp
ss
dec
inc
mov
je
shrl
fdivr
xchg
push
mov
sbb
aas
xorl
ret
xchg
rcll
add
dec
loope
and
imul
stos
pop
xchg
mov
scas
inc
std
stos
movsl
cmp
push
into
gs
inc
pop
xor
andl
mov
pop
sub
dec
negl
ficomps
mov
pop
lock
push
test
inc
in
ja
pop
bound
sub
mov
push
out
mov
lds
fbstp
out
push
mov
out
xchg
sbb
mov
fisubrs
ret
pop
out
test
dec
loopne
cmpsb
jbe
fadds
xchg
sub
aad
sbb
dec
mov
jg
mov
sarb
pop
lods
repz
test
inc
or
js
std
xchg
push
cltd
sub
lret
mov
jmp
fistps
cmp
stc
cmp
pop
out
dec
popl
sahf
loop
cmp
xchg
sub
xor
mov
inc
mov
jne
shrw
xchg
or
sbb
cmpb
mov
sub
nop
rclb
add
je
push
add
add
ja
sub
lret
cld
stos
movsl
cmp
sbb
ret
pop
das
jno
test
les
mov
aad
sub
inc
negb
fistps
mov
pop
lock
or
ja
push
popa
mov
sub
mov
pop
out
mov
les
loopne
cmp
shrl
pop
xchg
lea
out
xchg
sbb
fisttps
cmp
xor
sub
push
push
pop
lock
dec
loopne
movsl
ja
xlat
andl
sub
test
dec
mov
jle
mov
push
lods
repnz
xchg
fbstp
inc
or
xchg
push
cwtl
sub
leave
je
mov
ljmp
clc
cmp
insl
sbb
dec
mov
or
adc
rcrl
mov
inc
xchg
jbe
shrl
xchg
or
out
xchg
sub
push
movsl
cmp
pop
sub
rcll
add
jne
push
add
xor
push
xchg
mov
mov
sti
test
shlb
cld
ret
pop
jo,pn
test
ret
or
hlt
mov
sub
inc
cmc
sbb
loopne
inc
cmp
js
addr16
jmp
pop
lock
sbb
sbb
ds
sub
mov
pop
in
mov
ret
push
loope
cmp
shrl
pop
call
imul
cmp
xor
sub
push
push
pop
lock
loopne
movsb
ja
andl
sub
test
dec
mov
jge
mov
push
lods
icebp
out
xchg
into
fbstp
inc
or
xchg
push
xchg
sub
enter
movsl
jmp
cmp
clc
cmp
insb
sbb
dec
lea
or
adc
rcrl
mov
inc
xchg
jbe
shrl
fscale
xchg
or
sbb
cmp
pop
sub
rclb
add
jne
push
add
xor
push
xchg
mov
mov
cli
test
shlb
cld
ret
pop
outsl
out
test
ret
repz
sub
inc
cmc
sbb
loopne
inc
cmp
js
addr16
ljmp
sbb
sbb
ds
sub
mov
pop
in
mov
ret
add
shrl
pop
call
imul
shrb
ret
pop
lock
loopne
mov
addr16
mov
xchg
sub
aam
sbb
dec
mov
jl
mov
push
lods
lock
xchg
into
fbstp
inc
or
xchg
push
xchg
sub
je
mov
call
cmp
clc
cmp
imul
out
dec
mov
or
adc
rcrl
mov
inc
test
jbe
shrl
fdivr
xchg
or
sbb
cmp
pop
sub
iret
push
out
add
jne
push
add
xor
push
xchg
mov
mov
stc
test
shlb
cld
ret
pop
outsb
out
test
rorl
mov
sub
inc
cmc
sbb
loopne
inc
cmp
js
addr16
jmp
or
push
sbb
ds
sub
mov
pop
jecxz
mov
ret
add
js
in
push
mov
out
xchg
sbb
movsb
mov
ret
pop
lock
ja
aam
addr16
mov
xchg
sub
aam
sbb
dec
mov
jnp
mov
push
lods
out
out
xchg
into
fbstp
inc
or
xchg
push
xchg
sub
je
mov
out
loopne
cmp
clc
cmp
push
pop
out
dec
mov
or
adc
rcrl
mov
inc
test
jbe
shrl
xlat
std
xchg
or
sbb
cmp
pop
sub
into
push
out
pushl
jbe
push
add
xor
xchg
sub
mov
clc
test
cmp
sbb
push
sub
dec
loope
add
movsb
icebp
mov
sub
inc
hlt
sbb
loope
inc
cmp
ja
push
lock
or
push
sbb
movsl
cmp
cmp
ret
pop
loop
mov
ret
jns
jecxz
push
mov
out
xchg
push
mov
mov
shrl
sub
or
cs
loopne
mov
addr16
mov
xchg
sub
add
mov
imul
in
lock
int
jbe
inc
push
movsl
jno
xchg
push
xchg
sub
ret
jae
mov
in
loope
cmp
divl
push
lock
mov
push
pushf
lock
adc
mov
shrb
aam
xchg
push
mov
sbb
pop
or
cmpsb
cmp
cmp
stos
pop
sub
out
cld
scas
dec
loop
sbb
push
xor
sub
push
mov
xchg
mov
cmc
cmpsl
cmpsb
cmp
dec
cli
les
push
xchg
push
movsl
out
mov
sub
mov
bound
xchg
inc
cmp
jne
imul
movl
js
sbb
cmp
insl
scas
les
mov
xor
shrb
push
add
cmpsw
pop
mov
xchg
movsl
mov
fisubrl
or
jge
dec
loope
sahf
jns
sarb
ljmp
roll
dec
ja
movsb
cmp
shrl
ja
pop
test
lret
loopne
std
ds
outsl
push
call
shll
mov
les
shl
xor
add
pop
icebp
inc
xchg
setp
movsl
cmp
mov
ret
pop
pop
lgs
loope
mov
shrl
sar
xchg
add
es
cmpsl
cmp
shrb
lret
sti
lods
dec
jecxz
sbb
cmovle
push
xor
sub
test
mov
cmc
movsl
cmpsb
cmp
dec
clc
les
push
mov
out
sahf
add
inc
lock
mov
bound
inc
cmp
jae
push
out
pop
icebp
lds
mov
cmp
js
sbb
lea
xchg
sub
loopne
mov
mov
imul
xor
xchg
mov
test
movsl
mov
ds
fsubrs
or
jge
dec
loope
sahf
jp
sarb
lods
icebp
cwtl
das
and
xchg
ja
movsb
cmp
imul
ret
jmp
mov
adc
dec
nop
vmovdqa
jecxz
ret
repz
add
pop
icebp
inc
xchg
sets
cmpsb
cmp
in
sub
mov
aas
and
mov
shrl
roll
xchg
add
icebp
mov
and
adc
test
lds
stos
dec
jecxz
sbb
dec
std
push
das
outsl
xchg
mov
ret
hlt
mov
aam
inc
test
sub
mov
mov
add
aas
out
push
mov
popa
dec
in
inc
cmp
jno
imul
xchg
pop
icebp
ret
push
mov
cmp
js
push
pop
test
mov
xchg
sub
fisttps
in
xor
shrb
push
add
bound
push
movsl
mov
aas
sub
sub
pop
dec
pop
hlt
jl
dec
loope
popf
jnp
iret
jp
ljmp
int
sbb
jne
movsl
cmp
xchg
aad
enter
movsl
jmp
loope
stc
cmp
test
sbb
xchg
dec
mov
mov
loopne
in
mov
imul
adc
inc
test
adc
mov
cs
or
jp
pop
aam
roll
cwtl
add
pop
mov
add
test
jne
aam
push
das
movb
dec
in
sbb
dec
cli
imul
insl
cwtl
das
lahf
dec
mov
jg
mov
repnz
aad
inc
repz
repz
mov
add
cmp
pop
dec
in
cmp
insb
add
pop
repnz
ss
adc
pop
test
cs
pop
fldl
in
xor
shrl
push
add
pusha
movsb
and
mov
aas
daa
aam
les
es
loop
fwait
jnp
int
imul
and
xchg
incb
dec
jae
cmpsb
cmp
jb
pop
movsb
out
mov
loop
clc
cmp
test
sbb
cwtl
dec
mov
mov
fimuls
movsbl
add
pop
repz
orl
xchg
cmpsl
or
lds
mov
cmp
scas
pop
aad
mov
add
loop
pop
mov
add
test
movsb
push
xor
xchg
pop
repnz
jp
dec
stc
insb
add
imul
jle
mov
lock
test
rcll
aad
inc
repnz
pop
and
repz
mov
add
cmp
and
mov
aad
scas
insb
add
mov
add
adc
push
test
das
gs
mov
mov
fcmovbe
imul
lcall
and
mov
aas
and
inc
pop
hlt
js
dec
jecxz
cltd
jnp
lret
ja
add
lret
mov
std
aas
mov
jno
cmpsl
ds
xchg
aad
les
pop
mov
idivl
adc
dec
mov
mov
fmull
or
imul
minps
inc
orl
ds
mov
xor
daa
lds
mov
jp
pop
insl
int
cwtl
scas
hlt
mov
pop
and
xor
aad
push
xor
test
pop
repz
movsl
dec
out
adc
insl
add
imul
dec
out
popf
test
insl
inc
lock
pop
and
mov
mov
test
or
enter
mov
mov
aas
imul
hlt
mov
fidivrs
adc
xchg
cltd
xor
enter
mov
mov
out
sub
aad
or
fwait
jg
repz
and
scas
repnz
xlat
and
das
movb
pop
cmc
jbe
dec
in
xchg
jl
leave
jne
add
leave
mov
sti
cmp
test
dec
nop
insl
ret
pop
mov
ret
in
cmc
adc
inc
mov
mov
fimull
or
insb
add
pop
cmc
jg,pt
and
shrb
xor
and
mov
jnp
pop
xlat
outsb
mov
add
ficomps
adc
mov
ret
repz
jl
inc
cmc
insl
add
push
mov
jp
mov
inc
int
xlat
outsb
inc
out
pop
and
mov
adc
lds
xor
cmp
and
mov
aas
imul
and
fnstsw
rcpps
xor
enter
mov
mov
out
sub
aad
or
fwait
jle
repz
mov
scas
icebp
inc
xlat
and
das
movb
pop
cmc
jne
dec
in
xchg
jl
enter
cmpsb
jmp
mov
cli
cmp
dec
outsb
sbb
insl
shrl
mov
ret
hlt
xor
add
mov
or
insb
add
pop
cmc
cmp
pop
jl
nop
shrl
xor
and
pop
push
add
in
test
lret
sti
stos
cmc
mov
sbb
mov
das
outsl
aas
mov
rcrl
mov
jl
inc
hlt
insl
add
addr16
mov
test
outsb
aas
in
pop
pop
popa
cmc
mov
mov
stos
in
add
aaa
in
mov
mov
aas
push
mov
mov
fdivrl
push
push
stos
inc
test
cltd
xor
enter
mov
mov
out
sub
aad
or
jge
repz
and
lods
lock
xlat
and
das
movb
pop
cmc
je
dec
in
xchg
jl
jae
add
mov
stc
cmp
aas
dec
mov
insl
shrb
lahf
loope
mov
shl
repz
test
inc
xchg
mov
and
or
insb
add
cmc
cmp
mov
scas
pop
jl
shrb
xor
and
pop
push
add
push
ss
jnp
push
xlat
outsb
mov
add
fcompl
and
outsb
aas
lahf
dec
xor
add
hlt
icebp
mov
jl
inc
rep
add
lcallw
and
mov
inc
lret
or
outsb
ds
pop
push
pusha
cmc
mov
mov
stos
in
add
ss
mov
mov
aas
stos
outsb
add
mov
fstpt
or
cs
xor
enter
mov
mov
out
sub
aad
pop
dec
add
jl
repz
and
lods
out
inc
xlat
and
das
incl
cmc
jb
dec
in
xchg
jl
lds
add
mov
clc
cmp
inc
dec
mov
insl
mov
fcomip
mov
shl
repnz
test
inc
test
mov
and
pop
mov
insb
add
pop
idivb
jnp
and
into
test
add
pop
push
add
jnp
push
fsubrs
movl
fistpl
and
sub
dec
xor
jg
pop
hlt
out
mov
jl
inc
repnz
add
xchg
inc
mov
ja
mov
inc
lret
outsb
cmp
enter
cmc
mov
mov
stos
loop
add
ret
leave
xor
and
xchg
outsb
add
mov
fidivrl
dec
stos
inc
subl
mov
jge
aam
insl
push
dec
add
jp
hlt
mov
and
stos
in
inc
xlat
push
int
aas
pop
cmc
jo
dec
out
xchg
jl
ret
jno
add
in
xor
lds
dec
imul
insl
mov
mov
mov
adc
inc
xorb
mov
and
add
es
add
pusha
idivl
jns
and
int3
test
scas
pushf
xor
pop
pop
push
add
jl
push
fnstenv
lds
lcall
and
sub
xlat
fwait
dec
xor
jge
pop
cmc
in
sahf
push
call
inc
lock
push
and
xor
mov
inc
enter
cmp
leave
pusha
sbb
mov
jle
scas
adc
loopne
add
lret
and
test
inc
fsubs
push
fadds
lea
fdivrs
or
inc
jg
fwait
xor
leave
pusha
sarb
push
mov
out
and
inc
add
mov
and
test
lret
xor
cld
cmp
push
out
jge
shrl
mov
ret
mov
cmc
xor
stos
inc
dec
mov
outsb
mov
fcomi
mov
adc
inc
xorb
mov
and
xchg
rorb
add
insl
add
pop
popa
clc
cmp
and
lret
cld
lods
popf
xor
sbb
mov
jge
push
fnstenv
les
cmc
movsl
testl
sub
fcomps
mov
push
call
aas
out
outsl
push
and
xor
mov
push
out
stos
inc
movb
jo
out
pusha
sbb
mov
scas
adc
pushf
mov
fbld
mov
test
inc
fsubs
jo
xlat
sbbl
clc
mov
or
jle
fwait
xor
lret
jl
push
scas
bnd
outsb
add
popf
ja
cmc
mov
and
leave
jbe
stos
cmpsl
ljmp
cli
cmp
imull
push
out
mov
shrb
dec
cld
lock
cs
mov
es
sbb
sub
inc
xor
dec
add
sbb
dec
out
pop
in
mov
jg
popf
mov
inc
bound
insb
incb
cmpsl
cmc
loope
mov
out
dec
subl
dec
mov
outsl
mov
mov
push
sbb
int
in
mov
std
aad
mov
dec
nop
mov
jns
pop
push
adc
in
leave
test
mov
cmc
sub
push
dec
sub
sbb
jmp
mov
jg
hlt
xchg
ret
cltd
mov
jnp
mov
scas
lods
jae
pop
xor
cld
xchg
jl
aam
push
out
sahf
scas
out
shlb
mov
pop
ds
cmpsb
cwtl
pushl
bound
test
loope
fsubr
lock
cmpsb
es
loope
adc
cmp
cmp
mov
cmpsb
inc
mov
fcoms
popa
ret
jbe
ds
xchg
jg
add
aad
xor
and
pop
adc
mov
sbb
or
cs
fimull
or
mov
je
arpl
repnz
dec
leave
rorl
ja
mov
mov
add
andb
into
lock
lcall
jge
inc
rolb
in
and
sbb
jno
push
mov
dec
cmp
push
mov
out
xchg
inc
jge
mov
mov
push
bound
cmp
lret
mov
cmpb
out
push
rcrb
adc
and
inc
es
dec
imul
pop
stos
jno
int3
decl
fcmovu
imul
in
push
inc
xor
xor
push
xchg
call
in
je
or
fisubl
mov
popf
pop
ret
push
jl
iret
mov
dec
add
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
sub
shll
sub
adc
jb
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
inc
cmp
fadds
xchg
pop
xchg
addr16
jmp
jb
es
pusha
pusha
push
cld
pop
imul
enter
inc
mov
mov
mov
xor
fsubl
mov
das
.byte
pop
jg
.byte
.byte
