nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
pop
pop
pusha
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
pop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
jmp
ret
clc
sbb
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
cmpb
je
add
lea
inc
movzbl
sbb
ja
mov
cmp
jae
nop
mov
cmp
ja
lea
jle
popf
push
pushl
decl
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
mov
test
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
xor
add
xor
add
add
aam
add
or
add
push
xor
add
xor
add
add
sbb
add
repnz
add
xor
add
add
clc
xor
add
xor
add
add
call
xor
add
add
add
add
call
xor
add
xor
add
add
push
xor
add
xor
add
add
into
xor
add
xor
add
add
add
add
cs
add
xor
add
add
add
add
add
add
add
adc
add
sub
add
add
add
push
add
add
add
add
xor
add
add
mov
add
add
add
add
add
nop
xor
add
add
add
add
jl
add
movsb
xor
add
xor
add
xor
add
add
aam
add
or
add
push
xor
add
xor
add
add
sbb
add
repnz
add
xor
add
add
clc
xor
add
xor
add
add
call
xor
add
add
add
add
call
xor
add
xor
add
add
push
xor
add
xor
add
add
into
xor
add
xor
add
add
add
add
cs
add
xor
add
add
add
add
add
add
add
sti
add
inc
popa
fs
jb
je
push
je
add
gs
jb
arpl
jae
gs
jo
add
add
gs
outsl
jbe
inc
imul
jns
add
loop
inc
gs
js
je
outsl
fs
push
add
inc
imul
jne
arpl
add
popa
je
inc
imul
jns
add
out
inc
gs
imul
bound
gs
add
xchg
add
je
imul
je
add
add
add
je
imul
bound
gs
add
or
dec
jae
popa
insb
imul
addr16
add
popa
jo
imul
inc
gs
jb
jbe
push
jns
gs
add
add
outsb
fs
insb
outsl
jae
add
add
imul
jb
je
arpl
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
enter
jae
gs
popa
insb
jne
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
dec
popa
jo
imul
insb
add
inc
gs
je
imul
inc
add
adc
gs
je
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
rolb
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
jnp
push
gs
outsl
arpl
add
jnp
inc
gs
imul
outsb
addr16
add
sbb
ja
jo
imul
pop
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
js
push
add
fadds
dec
outsl
popa
fs
insl
popa
addr16
add
jno
push
gs
jne
jae
jb
in
push
inc
gs
popa
jo
jne
add
mov
inc
imul
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
push
inc
inc
push
inc
pop
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
cmp
and
jl
inc
cli
jmp
fstl
dec
js
or
mov
inc
push
mov
pop
sub
inc
repnz
rclb
inc
es
cmp
jmp
mov
cmpb
test
add
push
sbb
daa
add
inc
xor
sbb
inc
hlt
test
push
inc
pop
mov
xchg
xchg
hlt
or
pop
pop
push
xchg
adc
out
xor
andb
aaa
lods
push
and
add
xchg
cmp
out
and
jl
mov
fistpll
jge
mov
iret
inc
mov
sahf
outsb
mov
push
test
aam
aaa
enter
arpl
cmpb
sub
lods
mov
dec
inc
loope
push
mov
ds
lods
sbb
inc
inc
cmp
sbb
dec
and
lds
stc
push
xor
icebp
cmp
and
test
dec
mov
or
pushf
mov
xchg
jns
incl
iret
dec
daa
loope
mov
mov
adc
not
sub
dec
xchg
mov
mov
sti
jecxz
ret
or
mov
test
inc
jmp
pop
mov
dec
mov
xchg
jle
ja
addr16
cmp
sub
sahf
test
test
cmp
je
cli
mov
ljmp
push
cmc
shll
jno
push
sub
xchg
nop
popa
in
sbb
xor
push
push
mov
cmp
mov
mov
pop
ror
stos
cs
enter
xchg
arpl
cmp
cli
jb
pop
mov
mov
cli
js
lds
dec
dec
test
fmul
xlat
je
sbbb
sbb
mov
in
lock
dec
mov
roll
or
add
cmpsb
fcomps
ljmp
push
ret
adc
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
ss
push
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
std
std
add
std
incb
cltd
lcall
sahf
sahf
lahf
or
sarb
mov
mov
lcall
add
add
add
add
add
mov
sub
cmpsl
test
jne
test
mov
mov
mov
scas
mov
jne
test
push
lahf
mov
nop
adc
add
add
movsl
sahf
pop
cltd
movsl
mov
xchg
cmpsb
scas
scas
les
mov
leave
out
rcl
shr
rcl
rcr
leave
lret
mov
test
pop
fwait
xchg
xchg
and
add
add
mov
mov
push
lahf
popf
mov
mov
mov
mov
into
int3
jmp
in
out
in
in
call
ljmp
enter
stos
stos
outsb
mov
fwait
cltd
add
std
add
into
int3
add
movsb
movsl
movsl
fs
cwtl
xchg
rcrb
stos
std
mov
fcom
call
cmc
cmc
std
cld
std
std
std
push
icebp
icebp
loopne
loop
rol
shll
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
xchg
pop
sahf
lahf
lahf
and
stos
lods
scas
pushf
popf
sahf
icebp
fwait
cltd
lcall
mov
inc
sarl
jmp
in
icebp
repz
cld
cld
cld
sti
sti
cli
jmp
in
dec
int
out
lods
mov
mov
lahf
mov
add
cltd
fwait
seto
mov
pop
cmpsl
test
jo
test
movsl
mov
mov
std
mov
mov
cmpsb
cmpsb
cmpsl
jmp
mov
std
lret
cli
clc
in
in
ljmp
repz
repz
call
int
cld
scas
mov
fistpl
add
add
mov
cmp
scas
lods
popf
mov
mov
mov
mov
mov
les
mov
ljmp
mov
ret
test
fxch
repnz
fdecstp
loopne
loope
in
lock
mov
lock
add
push
push
push
pop
popa
pop
dec
dec
dec
adc
xor
adc
xor
or
add
add
add
add
mov
subl
ret
mov
mov
std
cmpsl
mov
stos
pushl
lods
mov
shll
leave
leave
sti
mov
repz
leave
out
lret
int3
leave
repnz
iret
neg
mov
mov
popf
mov
lds
add
add
outsl
and
addr16
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
pop
pop
pop
cmp
sbb
dec
or
jbe
xchg
xchg
xchg
inc
mov
mov
leave
cld
enter
mov
ljmp
cmpsb
cmpsb
ljmp
mov
inc
mov
inc
mov
mov
out
ret
lds
cmc
lods
popf
stos
cld
cmpsl
pushf
movsl
lcall
mov
rolb
add
add
mov
addb
jae
jae
insb
insl
imul
je
int
jge
lods
ja
je
addr16
bound
test
test
lock
sarl
mov
mov
mov
call
leave
xchg
dec
int3
mov
mov
mov
mov
notb
xchg
xchg
call
lea
add
add
test
cmpsb
sahf
fsts
mov
cli
mov
stc
mov
mov
mov
jl
insl
insl
imul
xchg
mov
lods
lods
out
mov
mov
xchg
ror
push
jmp
lcall
fwait
jmp
push
jmp
lds
inc
lds
sti
clc
scas
mov
mov
jmp
cwtl
clc
xchg
xchg
xchg
movb
add
shll
xchg
mov
mov
lcall
xchg
lcall
xchg
out
mov
pop
jg
dec
push
insb
push
insb
xchg
test
in
mov
daa
shl
lcall
in
repz
mov
xchg
mov
dec
into
lret
ror
rcl
iret
inc
mov
movsb
sahf
mov
jmp
mov
add
add
rol
mov
fmul
scas
fldt
xchg
xchg
decl
xchg
xchg
lcall
lahf
sahf
lcall
xchg
xchg
cld
mov
imul
pop
pop
cmpsl
jno
jb
addb
lock
call
mov
mov
jmp
in
in
in
jmp
icebp
repnz
call
xlat
inc
rol
stos
stos
lods
lcall
xchg
ficomps
add
add
sarb
stos
test
xchg
call
lcall
mov
mov
mov
xchg
cmpl
rorb
mov
mov
fwait
cmp
stos
mov
pushl
mov
int
loopne
fdivrp
hlt
hlt
repz
cli
cld
cli
cld
std
std
cli
cld
cli
out
out
out
fcom
pushl
test
popf
mov
xchg
xchg
dec
add
add
sarb
fldt
lahf
lcall
mov
cltd
lcall
xchg
xchg
xchg
mov
clc
popf
mov
cmc
mov
pop
stc
mov
nop
ds
mov
pushf
xor
inc
scas
jge
mov
mov
call
div
std
cld
std
std
stc
clc
idiv
fdivrp
mov
hlt
mov
mov
movsl
mov
lcall
les
fldt
mov
movsl
ljmp
pushf
sahf
jmp
scas
movsb
ljmp
xchg
push
inc
xchg
cmp
inc
mov
dec
mov
call
xchg
add
fistpl
add
in
or
fldt
xchg
iret
leave
mov
call
idiv
cld
cld
std
std
push
div
ljmp
ljmp
scas
jbe
test
lcall
mov
scas
fldt
stos
stos
pushl
lods
scas
jmp
test
lcall
lea
call
xchg
add
rorb
call
xchg
add
fistpl
add
jmp
add
repz
push
mov
xor
fcmovnbe
cmpsb
jmp
fmulp
in
jmp
out
in
in
out
xlat
cld
rcl
shl
leave
leave
test
mov
stos
and
mov
mov
mov
lods
mov
mov
mov
ljmp
stos
lods
inc
mov
dec
movsb
inc
call
xchg
pop
call
xchg
add
aad
add
pushf
add
fstps
add
in
mov
push
mov
add
cld
ret
cld
ret
test
dec
jmp
roll
scas
inc
mov
mov
test
test
mov
scas
adc
rol
mov
movsl
pop
mov
lods
fldt
mov
mov
mov
scas
ljmp
mov
pop
fcomps
add
ficompl
add
loopne
add
jmp
mov
cli
mov
add
inc
add
cld
les
cld
adc
std
int
dec
and
cld
shrb
std
aam
out
aam
inc
ret
test
lcall
mov
cmpsl
mov
mov
mov
sar
mov
mov
ret
call
mov
call
xchg
or
fcompl
add
out
add
lock
clc
mov
add
inc
add
cld
ud0
shrl
shrl
shlb
std
fdivs
aad
push
xlat
jne
mov
test
xchg
xchg
popl
push
push
add
add
add
xchg
mov
xchg
lcall
mov
rol
mov
mov
inc
mov
jle
rcrl
add
fisubs
add
jmp
add
cmc
mov
add
cld
les
cld
ret
add
fmull
fmuls
cld
fmuls
fisttpll
fisttpll
cld
jecxz
fmul
stos
sti
mov
scas
rcrb
push
add
pusha
pop
pop
imul
mov
rol
rol
mov
mov
inc
mov
xchg
call
movsb
das
fistpl
add
call
mov
add
inc
add
cld
les
cld
sbb
std
xlat
dec
cld
fildll
jecxz
jmp
imul
jmp
push
std
in
mov
mov
mov
fwait
or
add
add
dec
pop
pop
pop
pop
fmuls
mov
inc
rol
ret
mov
mov
mov
ret
cmpsb
call
test
jmp
movsl
or
ljmp
cld
rolb
inc
add
dec
add
cld
enter
shrb
std
loope
in
xchg
std
ljmp
std
lock
push
mov
std
hlt
test
cld
notb
std
mov
mov
mov
sahf
adc
add
add
add
add
pusha
inc
jl
jl
scas
mov
fxch
shr
int3
lret
shl
int
int3
cld
mov
mov
inc
mov
mov
fldt
or
icebp
mov
push
mov
add
std
leave
add
std
enter
enter
fnstcw
repnz
icebp
pushf
cmc
lahf
std
stc
sahf
stc
mov
push
sahf
call
shrl
loopne
mov
cwtl
sbb
std
add
add
add
jae
pushf
sahf
pushf
inc
lret
fs
jecxz
loop
in
loopne
loopne
aam
fcmovu
leave
leave
leave
out
int3
int3
int
int3
ret
fldcw
or
hlt
mov
cld
ret
std
movl
dec
add
dec
pop
ficoms
push
lods
std
hlt
mov
divl
std
cld
mov
clc
mov
mov
mov
test
mov
std
std
add
add
add
fisttps
icebp
repnz
hlt
repz
in
icebp
inc
in
out
pop
call
xchg
xlat
ret
mov
lods
pop
ljmp
cld
rolb
std
ret
inc
add
dec
add
std
iret
and
in
std
cmc
ret
test
std
cld
mov
test
sti
stos
jmp
mov
cmpsl
pushf
mov
addb
add
add
incb
std
add
std
decb
cmc
div
sbb
lock
jnp
lret
sarl
adc
divl
add
std
mov
add
std
lds
aam
std
jmp
idivl
sti
cmc
mov
cmc
icebp
scas
jmp
jecxz
in
mov
fsubp
cmpsl
sti
loopne
mov
ret
mov
cmpsl
xchg
mov
add
add
add
aad
or
int3
into
push
into
mov
sti
call
stos
add
stc
mov
push
mov
in
mov
hlt
ret
in
into
inc
std
ljmp
cli
call
fstps
in
aam
in
shlb
rcl
aam
ror
mov
pushf
test
xchg
xchg
sbb
add
add
fcmovnu
pop
leave
ret
mov
mov
mov
inc
fldcw
xor
shll
inc
repnz
push
jmp
lds
int
mov
rol
ret
mov
ret
mov
mov
les
mov
dec
mov
mov
mov
mov
mov
addl
add
ret
mov
nop
rol
mov
leave
mov
mov
fnstsw
mov
mov
mov
movsl
mov
cmpsl
lea
mov
push
mov
mov
sub
rol
fcmovne
push
leave
mov
add
addb
add
incl
mov
test
mov
mov
mov
mov
lods
pushf
scas
scas
movsl
jns
lods
movsl
push
scas
mov
inc
lods
stos
mov
and
shrl
xchg
xchg
xchg
pop
lods
lods
lods
add
std
add
incb
jmp
add
add
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
jmp
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
rolb
hlt
pop
sub
cvtps2pd
aas
push
push
xchg
in
ror
lret
pop
stos
push
or
xor
sbb
stc
mov
mov
imul
mov
push
popa
aam
ret
cmpsl
xor
rorl
loopne
fdivl
lods
das
jle
in
push
idivl
dec
sahf
ss
gs
cltd
notb
mov
mov
sub
adc
dec
movsl
mov
in
lret
sbb
pop
and
and
scas
jmp
repnz
nop
sbb
pop
jge
divb
jnp
mov
mov
or
pop
push
out
les
aaa
add
les
jnp
lock
ss
or
mov
jne
negb
adc
jne
test
les
or
push
pop
cmp
les
or
mov
clc
pop
inc
mov
mov
adcl
fcmovnu
stos
cmp
mov
fsubl
xchg
add
or
call
inc
mov
pop
int3
sti
addl
lret
mov
movsl
jle
ficoml
mov
jae
lods
stc
imul
adc
sub
or
leave
push
or
das
arpl
fsubrl
and
cmpsb
inc
fimuls
xchg
insb
mov
push
cmp
sbb
cvtdq2ps
lahf
ja
cs
mov
lods
push
pop
lahf
pop
loop
jg
xchg
xchg
and
pop
sbb
nop
lea
sub
mov
jns
push
xlat
jecxz
popf
pop
fiadds
inc
sbb
andb
cld
push
repnz
movsl
cmp
inc
xlat
inc
lcall
pop
lcall
pusha
mov
jle
es
ret
and
mov
add
nop
inc
sti
hlt
xor
mov
ficomps
movsl
sub
cmp
xchg
cmp
outsb
lock
inc
movsb
xor
xchg
push
add
sub
xchg
sub
jmp
cmp
fwait
mov
addr16
test
int
fdivrl
pop
xor
and
jb
push
jmp
dec
dec
lahf
mov
add
fsubrl
mov
dec
pusha
bound
rclb
aaa
scas
cs
jecxz
sbb
inc
fs
mov
lods
aam
push
inc
mov
fldl
cmpsb
not
fs
movsb
mov
inc
aas
or
xchg
inc
je
mull
mov
pop
add
divb
pop
jl
pop
or
nop
pushf
icebp
push
mov
out
cmp
jne
mov
add
stos
xchg
add
call
push
mov
cmpsb
ret
sbb
enter
push
ret
pushf
mulb
adc
fidivs
or
push
push
aam
cmc
dec
or
pop
popl
clc
jnp
insb
mov
fidivs
xchg
mov
add
cmp
stos
fidivrs
sbb
mov
arpl
cli
pop
xlat
mov
lret
dec
notl
in
sti
arpl
pushf
cmp
cmpsl
stos
sub
dec
sbb
push
xchg
pop
lcall
pop
jle
jmp
stos
dec
les
aaa
jae
es
jo
out
pop
in
mov
jmp
jno
pop
shr
and
sbb
xor
shll
roll
adc
dec
les
sbb
ret
rcl
pop
dec
stos
push
scas
dec
sahf
and
xchg
das
push
out
mov
mov
rclb
push
xor
push
sub
fisttps
add
sbb
gs
pop
cli
mov
ret
xchg
xchg
popf
or
pop
repz
shrb
adc
jnp
xor
and
push
ret
jne
aas
inc
je
cwtl
outsb
jge
mulb
and
shll
push
sarl
pop
inc
or
mov
insl
cmp
add
je
jg
sub
mov
fs
orl
mov
test
push
mov
xor
mov
mov
andl
mov
mov
or
or
int3
out
pop
daa
scas
iret
icebp
negl
adc
pop
dec
leave
or
mov
dec
cmp
and
aas
cwtl
adc
lods
push
xchg
mov
mov
mov
and
test
adc
xor
push
push
test
or
fwait
mov
lods
xor
push
cmpsl
sub
mov
mov
mov
lcall
movsl
jno
icebp
push
das
bound
loop
push
sbb
mov
fdivrs
cld
lcall
hlt
cmp
pop
imul
fisttpll
mov
xor
fadd
xchg
mov
push
jno
psllw
inc
shr
pop
jecxz
loopne
sub
sbb
mov
mov
js
jae
xchg
in
mov
push
adc
insb
popa
inc
sbb
lret
inc
ljmp
jmp
push
adc
out
gs
ja
imul
adc
dec
xchg
dec
mov
push
fdivrl
roll
add
xor
sbb
mov
enter
lahf
subb
jae
jge
rcrb
fidivl
call
jnp
xor
pop
jmp
dec
jnp
dec
push
es
in
les
mov
add
jmp
inc
lahf
mov
cmp
lret
ja
xor
test
mov
add
les
cmove
lods
fs
loope
test
dec
pop
adcl
aaa
xchg
mov
or
xchg
sub
hlt
daa
cli
xchg
cwtl
jns
sbb
and
mov
cmp
mov
das
or
aam
dec
and
jle
shrb
jl
nop
xchg
dec
loop
jno
cmpsb
sub
ficomps
addl
test
dec
add
pop
mov
sbb
lea
shrl
add
mov
outsl
test
mov
fadd
inc
fdivr
stc
adc
sub
pusha
testl
jle
sahf
popf
push
out
mov
outsl
fbld
stc
imul
pop
lock
mov
mov
mov
jne
fbld
call
repnz
lock
mov
data16
loop
jno
ret
push
lahf
into
jmp
xor
fisttpll
mov
test
jmp
xchg
mull
loopne
dec
das
xchg
sub
insb
xchg
sahf
xorb
lock
push
inc
sub
xchg
pop
lock
jnp
movsb
lods
mov
push
call
or
loope
pop
mov
mov
jmp
ret
xchg
xor
movsl
cmp
push
montmul
cmpsb
xchg
pop
fwait
cmpsl
sub
js
stc
dec
loop
adc
xchg
inc
dec
imul
xchg
sahf
xchg
shlb
cmp
pop
pop
repnz
in
call
mov
cld
xlat
test
pop
and
repz
je
push
xchg
add
add
inc
mov
jne
aas
xchg
inc
push
fwait
loope
std
adc
fnstenv
xor
xchg
sub
jo
pop
inc
cmc
mov
mov
xchg
add
xchg
aad
sahf
push
test
faddl
jne
add
movsb
repnz
add
xchg
test
mov
xorl
aam
sub
mov
mov
pop
cmc
shrb
jnp
lods
dec
lock
in
addl
push
movsl
int
or
pop
je
mov
jno
inc
xchg
push
cld
dec
in
sbb
popf
aaa
movsb
cmp
mov
pop
mov
fucom
ja
fidivs
xor
xchg
bound
sbb
mov
sbb
push
pop
cmp
daa
pop
out
pop
mov
out
loope
jbe
mov
lahf
div
imul
es
jmp
lods
inc
mov
aad
outsb
lret
bound
nop
mov
add
pushf
xor
mov
aas
sub
push
cmp
xchg
imul
dec
adc
mov
adc
andl
xchg
mov
test
lods
pop
in
orl
loop
push
fbstp
shl
and
jecxz
into
testl
or
pop
cmc
or
mov
sub
jo
dec
sbb
cs
mov
dec
and
inc
jmp
adc
bound
push
push
jne
arpl
test
jns
jg
movsb
sbb
lea
insb
jns
pop
lock
push
je
jno
sbbb
adc
lcall
addr16
mov
jns
jne
mov
nop
mov
pop
fbstp
pop
sbb
push
mov
loope
cmc
lahf
adc
xor
push
jnp
dec
xchg
pop
pop
pop
test
sbb
das
fbstp
dec
in
jge
and
push
ffree
pop
or
lcall
sub
out
dec
pusha
data16
lcall
mov
jg
cli
jo
dec
in
xchg
adc
add
call
scas
xchg
xchg
jbe
ret
mov
popf
daa
addr16
mov
inc
lcall
and
pop
insl
jnp
pop
add
sahf
cmp
popf
xor
fcmovnbe
insb
sti
adc
test
outsl
push
sbb
pop
mov
insb
add
int3
pop
mov
and
rcrb
jno
sar
push
ljmp
dec
loopne
push
leave
pusha
js
pop
repnz
cmp
ljmp
jb
mov
insl
add
push
test
inc
sub
cmp
push
or
lea
or
addr16
aam
das
mov
test
leave
inc
fisttpll
mov
xor
cltd
ss
inc
add
sti
jae
jecxz
inc
sbb
incb
sbbl
sub
outsb
les
seto
fsubs
clc
xchg
jno
mov
jne
sub
js
dec
fwait
xor
sub
outsl
pop
or
dec
outsb
dec
loope
in
aaa
and
mov
cmc
or
jmp
xchg
jge
sbb
ljmp
into
scas
inc
rcrb
loope
lcall
test
loop
push
sbb
mov
or
xchg
sub
sub
cwtl
pushf
movsb
sbb
das
addb
mov
jg
inc
pop
loop
jne
adc
push
sbb
repnz
mov
idiv
mov
cmpsl
lea
dec
fistps
test
fwait
inc
sub
xor
mov
arpl
gs
or
xchg
inc
gs
sahf
push
jmp
out
and
shrl
cs
adc
rcrb
jne
jnp
or
dec
hlt
mov
cmp
xor
sbbl
push
mov
sbbb
inc
ficomps
xchg
in
sub
imul
cwtl
std
addr16
push
nop
xor
pusha
mov
push
and
mov
xor
push
jl
dec
cmpsb
fdivl
push
pusha
pop
push
sub
outsb
sbb
add
es
xchg
mov
sbb
test
mov
inc
rcrl
dec
fisttps
and
jge
insl
or
sub
and
test
fidivs
push
push
mov
dec
cmp
jb
xchg
sub
jp
jecxz
fs
repz
in
repz
push
testb
cltd
xchg
or
ret
lea
cmp
lds
mov
loope
add
pop
fs
push
clc
lock
ja
push
ret
mov
std
rcrl
negl
sub
pushf
fidivl
mov
xchg
insb
cld
xchg
jb
xchg
sub
and
mov
dec
icebp
imul
pop
mov
outsb
sarl
insl
jge
fwait
testb
and
xchg
lar
and
inc
or
adc
dec
mov
in
sbbl
add
dec
jl
mov
jb
pop
and
mov
fsubrl
enter
dec
and
cmp
pop
xchg
sub
add
arpl
pop
cltd
test
lods
cmc
cmp
popf
outsl
push
jno
mov
imul
sbb
or
scas
shlb
inc
cwtl
ja
mov
popf
xor
pop
gs
test
push
call
push
xor
icebp
dec
cwtl
stos
inc
or
insb
add
sub
insb
popf
pushf
mov
mov
imul
insl
arpl
rclb
aaa
jne
sbb
lret
cli
mov
or
sbb
pop
lea
mov
scas
lret
bound
movsl
cmp
inc
std
xchg
xor
pop
sahf
adc
mov
es
mov
push
insb
aas
and
inc
call
push
call
cs
repnz
loopne
es
test
cmp
mov
add
mov
pop
in
movsb
cmp
stos
inc
ret
jg
xorb
fbld
push
fidivs
and
insb
add
or
push
sub
dec
dec
jmp
cmp
icebp
mov
push
jmp
fnstsw
hlt
bound
adc
movsl
adc
mov
lods
sbb
outsb
scas
cmp
fs
add
cmp
int
pop
mov
rcrl
mov
xchg
add
divb
adc
or
aam
pop
sub
mov
or
inc
push
ss
bound
rclb
movsb
je,pt
jbe
int
ljmp
jmp
push
mov
mov
push
fnsave
jae
xor
push
mov
inc
int3
in
std
cmp
push
fwait
xor
inc
leave
pusha
jle
push
ljmp
add
mov
cli
xchg
scas
sbbl
mov
and
xor
mov
inc
or
mov
lds
add
popa
insb
mov
cld
lock
fnstenv
test
mov
jne
call
and
add
push
cmp
xchg
dec
iret
mov
push
imul
mov
and
mov
dec
fidivs
and
sub
mov
pop
shrl
ret
sub
cmp
push
out
dec
xchg
arpl
shrl
jbe
push
jo
arpl
jge
mov
add
pop
pop
and
movsl
xchg
in
xor
push
mov
ret
call
imul
xchg
push
in
sti
jo
cmc
xor
jl
add
cmc
mov
repz
int3
ret
fiadds
test
insb
add
stos
mov
pop
jb
or
stos
jns
js
int3
pop
cmc
mov
stos
inc
push
aam
mov
orb
inc
es
cmp
roll
dec
pop
hlt
cmp
pop
fnstcw
mov
xchg
sub
outsl
fstl
jbe
xchg
sub
xchg
mov
adc
fidivl
call
mov
testb
outsl
xchg
pop
mov
movsb
mov
and
movb
cmp
lret
pop
mov
popa
pop
mov
insb
and
nop
daa
push
cs
jge
pop
dec
sahf
sahf
xor
popf
dec
mov
pusha
outsb
out
push
push
lret
into
add
mov
das
jbe
rcrl
ret
xor
imul
insl
sbb
lock
es
add
pop
mov
leave
ja
mov
dec
pop
repz
in
push
mov
cs
or
ss
push
out
ret
ss
mov
cmp
mov
push
mov
cli
rcrl
dec
movsl
xchg
xchg
jl
or
lahf
mov
adc
je
mov
mov
ja
push
jmp
es
or
rolb
dec
push
icebp
ja
les
cmp
repz
filds
sub
or
scas
inc
arpl
shrb
lds
push
out
mov
fildll
adc
sbb
dec
pushw
rol
sbb
mov
sbb
xor
icebp
sbb
xor
sbb
aas
lock
jo
lret
out
ljmp
push
call
jnp
or
sarl
je
mov
add
int
pop
mov
or
or
sbb
cmovle
cs
sub
mov
test
cmpsb
jae
xchg
sbb
pop
dec
inc
test
out
jle
daa
int
and
push
push
stc
lods
fstpl
cmp
add
dec
test
hlt
mov
push
int
cltd
jno
lods
xchg
addr16
jbe
nop
push
dec
mov
pop
inc
cmpsl
cmp
insb
fistpll
inc
or
dec
cmp
in
test
scas
popa
mov
pop
adc
rcrl
pop
or
adc
mov
push
movb
lods
jle
mov
shll
addr16
pushf
popa
test
shrl
sbb
jg
std
es
xor
jbe
fdivrl
dec
jb
cmp
js
call
or
sahf
ret
shrb
mov
xchg
sub
xor
and
daa
mov
jnp
orb
jbe
mul
test
aam
lock
mov
maskmovq
notl
adc
add
lock
rcrb
lret
mov
mov
mov
mov
dec
mov
ret
mov
sbb
mov
fnstsw
and
add
loop
mov
aas
mov
jmp
mov
mov
fsubrs
dec
push
jmp
cmc
testb
dec
pop
out
insb
dec
sbb
sbb
dec
cmp
scas
imul
call
mov
into
xchg
sub
je
stc
movsl
repz
rol
sub
in
mov
leave
jno
mov
mov
enter
mov
les
in
sub
sub
push
jmp
outsl
mov
aad
popf
shlb
sbb
test
rcrl
daa
mov
dec
rcll
add
lea
and
inc
jg
fwait
outsl
pop
int
dec
lds
adc
or
or
cld
xchg
flds
gs
mov
aad
jbe
out
test
or
outsb
mov
jo
xor
cmp
icebp
insl
inc
fcomps
testl
into
dec
add
leave
iret
sub
sbb
push
ljmp
push
in
or
pop
xchg
sub
sub
mov
dec
push
ljmp
fnstenv
ds
mov
sti
xchg
xchg
and
dec
xchg
inc
scas
inc
ss
ret
pop
inc
mov
pop
sub
mov
jl
dec
insb
add
pop
sub
scas
inc
cmp
pop
gs
xchg
push
mov
test
es
sub
das
jbe
outsl
push
fstpl
mov
ja
or
pop
jg
sub
push
ljmp
or
sub
dec
mov
data16
scas
inc
mov
leave
iret
data16
adc
sbb
or
sbb
pop
mov
insb
call
push
mov
push
sub
xor
jnp
cmpsl
loop,pt
gs
es
mov
inc
aaa
into
aaa
in
pop
hlt
fucomp
out
xchg
adc
jno
pop
hlt
or
cmp
imul
sahf
adc
mov
scas
xor
xchg
xchg
enter
pop
movl
or
dec
or
mov
ret
pop
xchg
into
adc
mov
pop
dec
loopne
lds
mov
inc
mov
pusha
mov
sbb
popa
jne
xor
push
dec
in
ds
mov
pushf
lea
sti
jns
jmp
add
or
aaa
arpl
lret
pop
cmc
ret
aas
and
sbb
inc
lds
repz
lret
jg
mov
and
shl
or
and
or
ja
imul
cwtl
inc
stos
cld
pop
fidivl
sbb
mov
cmp
dec
jecxz
pop
int
or
mov
mov
rcr
fcmovnbe
imul
inc
fadd
or
rcrb
ret
fnstsw
cmp
ds
scas
aas
or
shrl
sub
je
mov
jle
push
mov
mov
pusha
idivl
cmc
mov
sbb
and
inc
gs
js
cmc
mov
adc
and
inc
xchg
push
mov
xchg
sub
mov
pop
xchg
adcb
inc
pop
icebp
pop
cmp
test
mov
xor
sbb
dec
loopne
cmp
rorb
scas
inc
mov
inc
fisubl
xor
ffreep
dec
in
add
enter
cmpsl
stos
mov
fisttpl
xor
decb
mov
mov
frstor
int
xor
test
and
sbb
sbb
xchg
outsl
loope
rol
nop
insb
add
call
mov
popa
fildll
rclb
shrb
xor
into
popl
push
mov
mov
inc
daa
sbb
xchg
xchg
ss
mov
sub
jne
pop
icebp
inc
xchg
sti
xchg
enter
xor
imul
scas
icebp
cli
xchg
mov
fnstsw
sbb
repnz
mov
inc
lcall
cmp
and
pusha
sbb
cmpl
mov
inc
push
ljmp
adc
cmp
push
in
rcrb
popl
add
xor
and
xor
push
lock
pop
sahf
mov
fnstsw
in
xor
mov
add
aaa
mov
adc
pop
or
cltd
popl
sahf
daa
mov
jne
pusha
and
scas
jno
add
cld
and
adc
mov
adc
cmp
pop
divb
pop
insl
lahf
pop
pop
testb
and
out
ds
loope
imul
into
sbb
ret
pop
sub
pushf
pop
repnz
xor
ret
push
lret
bound
cmp
das
dec
loope
adc
sbb
imul
push
or
je
xchg
mov
push
lahf
les
dec
divb
bswap
cmp
aas
outsb
sbb
xchg
fidivs
pushf
jne
into
call
push
popf
fsts
adc
std
int3
subl
mov
mov
arpl
push
sahf
cmp
int
lock
lock
jmp
add
xor
arpl
pop
das
outsl
push
popa
jle
sbb
rcrl
inc
mov
jle
xchg
cmpsb
jno
push
gs
xchg
xchg
jecxz
mov
repz
loop
lds
fsubrs
movsl
in
sbb
cld
xchg
ror
mov
sub
mov
xor
icebp
mov
cmp
fisubs
int3
clc
mov
jge
movsl
aam
loope
mov
mov
cmpsl
pushl
mov
xchg
and
push
mov
es
push
inc
fnstsw
dec
out
in
inc
push
call
int3
sbb
mov
ret
fsubrp
loopne
mov
inc
fdivrs
fistpll
iret
in
mov
ret
add
mov
push
pop
inc
fimuls
stos
pop
repz
imul
repnz
mov
push
aas
leave
pusha
idivl
fldt
sbb
fmuls
pushf
xor
push
in
pop
sbb
fnstenv
cld
xchg
fs
pop
xchg
jne
push
loop
rcl
add
vmread
or
mov
ret
pop
out
scas
inc
jmp
lahf
mov
cwtl
jae
aad
jne
push
sti
xchg
mov
jns
in
out
loope
ret
and
daa
mov
cltd
add
xor
shrl
cmp
stos
inc
repnz
sub
ficoml
inc
loop
out
xchg
add
das
jle
mov
fstpl
xchg
stc
pop
mov
les
push
add
mov
enter
sahf
movsb
pop
test
std
xor
cs
sbbl
outsl
xchg
sub
or
cmp
mov
sbb
push
adc
test
loopne
xchg
leave
insl
mov
adc
inc
mov
scas
add
shll
sub
test
scas
ja
lret
xor
dec
pushf
xchg
or
mov
mov
dec
jecxz
rorl
ljmp
jmp
lods
jns
ficomps
out
fildll
xor
sar
sub
cmp
mov
mov
ret
test
inc
cmp
ja
pop
test
cld
cli
pop
lret
fisubrl
outsb
fsubs
nop
jns
in
aad
lahf
mov
fisubs
mov
stos
fisttpll
mov
mov
add
mov
jg
pop
rolb
sub
push
jb
cmp
push
cmp
clc
daa
ds
jo
adc
inc
xor
push
adc
mov
or
aaa
fwait
xchg
test
push
cmp
insl
mov
jb
pop
dec
pop
jp
jg
lcall
cmc
std
and
and
daa
jns
rorb
cmp
push
jmp
lods
add
sti
cmp
enter
movsb
movsb
mov
sub
cmp
out
xchg
xchg
xchg
and
cmp
add
adc
adc
push
xchg
outsb
mov
movsl
in
les
shll
les
fs
pusha
fisttps
push
movsl
in
sbb
mov
mov
shrl
xor
stos
xchg
mov
mov
add
ret
mov
sbb
inc
mov
ret
sbb
mov
push
add
jo
jb
dec
dec
push
mov
push
pop
in
push
nop
xchg
xor
out
pop
je
push
dec
cmp
push
mov
jbe
pop
add
xor
out
push
rorb
push
iret
les
mov
std
xlat
outsb
jge
push
inc
call
rcrl
mov
pop
rclb
out
jmp
nop
dec
aad
add
mov
int3
cmp
repz
add
xlat
mov
sbbb
jo
fwait
sub
sub
cmp
pusha
cmpsl
dec
ret
stc
popa
or
pushf
adc
cmp
add
mov
shl
pop
xchg
sub
pop
xchg
xchg
sub
jnp
push
lods
xor
daa
into
pushf
xor
scas
shrl
lock
pop
xchg
insb
popf
push
lea
inc
out
adcb
fbld
lret
pop
push
out
in
aaa
or
or
call
sbb
push
std
xor
icebp
jecxz
call
lock
push
mov
mov
outsl
push
sbb
outsb
ficoms
fcoml
cmp
xor
jge
pop
cmp
out
and
mov
xchg
pop
icebp
int3
arpl
jge
mov
inc
popf
xor
popa
data16
inc
jl
jns
popa
pop
icebp
imul
and
cmpsl
push
pusha
sahf
inc
div
cmp
shrl
jnp
add
popa
clc
sub
push
jmp
dec
mov
xor
cltd
jbe
fnstenv
fimuls
ds
sub
call
icebp
xsave
dec
sbb
jl
sub
js
push
mov
dec
subb
inc
mov
insl
add
mov
mov
shrl
jo
out
std
mov
sbb
push
mov
mov
data16
cmp
and
sub
dec
int3
arpl
pushf
push
push
push
imul
jmp
test
and
jno
repnz
push
add
in
lea
mov
cmpb
mov
dec
test
insb
add
xchg
sub
cmc
repnz
mov
sti
arpl
rcrl
scas
jne
mull
mov
in
pushf
push
sub
push
add
cwtl
mov
xor
or
xchg
cmp
mov
cltd
dec
dec
cmc
mov
add
push
imul
jo
scas
jo
mov
shll
cmp
xchg
sbb
jle
pop
add
push
rolb
jb
xor
dec
popf
loop
jae
cmp
pop
psraw
adc
mov
shrl
dec
rcll
and
jmp
outsl
sub
mov
add
ffree
pop
mov
out
fcomps
frstpm(287
popa
lods
lret
or
inc
rcr
xor
ret
cmp
xor
adc
sti
xchg
add
clc
sbb
sub
mov
pushf
mov
imul
rclb
repnz
xchg
dec
pop
mov
loope
inc
sbb
sarl
dec
adc
adcb
xor
cltd
dec
jae
test
in
sbb
cmp
and
jmp
loop
jp
dec
xchg
out
mov
inc
xchg
neg
fs
arpl
inc
test
mov
leave
push
jle
jg
aam
popl
rorl
inc
mov
jae
pop
pop
ds
hlt
in
or
mov
out
call
ss
insl
push
les
push
dec
sbb
xor
xchg
je
xchg
popf
jecxz
jl
cmpsb
lods
mov
adc
stos
or
sti
cmp
int
into
gs
aas
push
fs
add
icebp
imul
push
mov
cltd
mov
jb
cs
lcall
test
test
dec
mov
push
inc
stc
xor
push
cmp
fisubrs
sub
test
push
push
pop
in
test
pop
mov
or
loope
adc
mov
inc
cwtl
add
es
mov
xor
shl
test
popf
inc
out
rorb
std
test
push
ret
fwait
xor
js
loop
sti
lds
jo
icebp
mov
ficompl
repz
stos
mov
and
pop
push
hlt
loopne
es
lock
repz
scas
enter
dec
cwtl
fstl
mov
out
mov
inc
or
mov
imul
iret
loope
cmp
cmp
push
in
ret
subb
aas
shrl
xchg
fidivs
lahf
repnz
mov
clc
out
hlt
loop
xchg
mov
sub
mov
add
stos
orb
cmp
imul
inc
iret
insl
xor
pop
mov
sarl
fdivrl
add
xchg
addr16
fdivrs
xchg
pusha
ret
mov
sub
enter
test
loope
xchg
sub
dec
stc
in
scas
aas
push
push
movsl
into
xlat
in
jnp
adc
fstpl
lods
aas
pop
cs
pusha
jp
dec
lods
jle
loope
stos
iret
lea
movsl
pop
int
stos
push
jmp
sahf
xchg
out
push
out
jmp
ficoms
popa
sub
lcall
add
jne
in
push
jp
push
stc
movsl
and
test
out
lods
xor
sti
jnp
pop
pop
sarl
sub
mov
or
lret
cld
pusha
scas
sbbl
mov
in
push
in
sbb
sub
pop
jbe
stos
movsb
cltd
insl
add
shlb
fmull
int
or
fstl
cmp
lods
je
fiadds
ret
lods
hlt
and
and
or
into
push
cmp
dec
sbb
jbe
repz
adcb
lods
inc
sub
clc
hlt
cwtl
stos
fs
push
out
in
sub
dec
mov
cmpsb
lret
adc
popa
mov
xchg
fsubrl
add
icebp
mov
inc
and
mov
loopne
stos
nop
dec
fisubl
pop
filds
sarb
jbe
fsubrl
lds
negl
mov
cmp
mov
outsb
adc
push
inc
lods
inc
xchg
movsb
pop
mov
shlb
out
scas
sbb
xlat
fs
or
mov
xchg
mov
nop
jns
sti
push
adc
ret
hlt
jecxz
sti
dec
mov
scas
rorl
aas
pop
cmpsl
inc
jnp
xlat
push
xchg
cwtl
stos
push
xchg
inc
inc
lods
call
jmp
nop
lret
into
mov
lea
fcmovbe
loope
fsubr
inc
pop
lcall
repz
ljmp
nop
stc
shlb
mov
shl
lock
mov
push
push
pop
jne
ret
enter
fisttps
adc
stos
icebp
test
js
mov
jnp
sbb
pop
scas
xchg
sub
mov
cmp
es
cmp
jge
cmp
outsb
adc
fcomi
hlt
ret
push
out
cwtl
xchg
popf
sub
leave
pusha
cmpsl
aaa
dec
mov
lret
cmc
sbb
pusha
adc
push
rdtsc
jae
hlt
mov
sti
push
out
sub
ret
cmp
in
pop
repz
sbb
sti
xchg
mov
adc
movsl
inc
movsb
aaa
into
adc
shr
andb
mov
xchg
test
cltd
dec
loopne
mov
addr16
xor
scas
testl
clc
outsb
arpl
jl
jne
into
out
cmp
xor
loope
add
xor
orl
ja
call
lret
sbb
loop
enter
call
and
pop
inc
aaa
addr16
lods
in
loopne
test
dec
stc
mov
mov
mov
into
sub
lea
dec
dec
shrl
js
daa
xchg
mov
aas
loope
mov
cmp
dec
loopne
ja
lds
nop
lret
jle
js
hlt
dec
dec
push
leave
jne
imul
jae
xor
jns
scas
xchg
mov
scas
addl
jae
adc
test
sbb
bswap
fsubrs
xor
mov
xor
fmuls
stc
jb
pop
cmp
pop
jecxz
bound
jae
leave
movsb
addr16
and
test
sbb
aad
pop
fidivrs
nop
les
arpl
push
mov
push
sbb
in
test
hlt
adc
shrb
iret
aaa
cmpsl
inc
in
out
outsb
sti
or
jl
sub
dec
jne
inc
push
inc
jge
popa
cmp
insb
cmpsl
cmp
mov
aam
and
imulb
push
pop
dec
push
xchg
lea
in
adc
inc
fnstcw
mov
dec
pusha
test
push
dec
stos
sahf
push
imul
pop
mov
mov
mov
sub
xchg
nop
test
mov
std
lret
push
das
or
mov
mov
jnp
mov
push
push
nop
push
push
test
add
cmp
xchg
outsl
fcomi
idiv
sub
adc
lahf
xchg
dec
xor
xchg
xor
adc
ror
xor
sbbl
push
push
leave
push
pop
loope
insb
inc
xor
pop
out
cmp
notb
add
out
test
je
test
lret
pop
lds
add
gs
adc
das
and
mov
int3
idiv
adc
xchg
hlt
icebp
push
mov
mov
push
inc
test
and
or
sub
popf
xor
xor
in
xchg
pop
repz
xchg
je
mov
fwait
jmp
jns
mov
dec
lcall
pop
gs
leave
js
sti
mov
xorb
ret
sti
mov
cltd
les
loope
aam
pop
add
jnp
pop
push
adc
push
jge
xchg
sub
lea
fimull
xor
movsl
idivb
inc
xchg
loop
push
hlt
fucomp
jl
in
divb
call
lock
sbb
xchg
jge
aam
movsb
sub
mov
inc
out
fdivrs
movsl
leave
inc
testl
mov
into
iret
data16
and
mov
dec
loope
outsb
or
mov
xchg
sub
ficoml
shrb
mov
es
js
dec
lods
test
pusha
or
jp
xor
out
xchg
and
and
push
test
insb
outsl
jb
cmpsl
cwtl
dec
out
mov
cmpsb
daa
sub
jnp
repz
ret
popa
ljmp
mov
mov
add
out
pop
xchg
lea
sarb
or
and
jge
xor
jl
and
sahf
push
xor
jp
into
add
xor
out
iret
xor
or
cltd
inc
in
or
mov
add
dec
loope
add
lods
shll
xchg
push
cmp
enter
lods
inc
in
cmp
xchg
div
movzwl
cmp
xchg
imul
fcmovb
cmp
loop
popf
add
mov
inc
fsubrs
sbb
aas
mov
xorl
jns
hlt
outsl
mov
sub
jbe
and
cmpsb
cmp
dec
ficoml
in
push
out
xchg
enter
imul
imul
xor
jmp
cli
push
push
jne
out
push
jg
inc
pusha
rclb
test
sub
clc
sti
movsb
lret
adc
xor
push
mov
dec
shll
aaa
adc
push
xchg
ja
mov
inc
mov
sahf
inc
popa
repnz
call
or
jle
das
loope
popa
js
fs
jg
and
fwait
xchg
int
fcomps
insb
mov
and
xchg
leave
outsb
stos
xchg
sti
js
pusha
pop
mov
sti
push
cmp
sbbl
ljmp
sbbl
testl
lret
sub
jbe
jmp
mov
negl
ss
sbb
aas
add
das
stos
pop
jl
shll
fidivl
push
jae
mov
jo
in
mov
imul
nop
ljmp
repnz
xchg
mov
test
mov
sbb
mov
loopne
iret
data16
pop
punpcklwd
xor
mov
lods
or
xor
jg
in
outsl
xor
divb
xor
mov
out
add
xor
and
pusha
pop
push
add
cli
xchg
hlt
and
aad
and
xchg
push
pop
pop
push
call
mov
or
mov
adc
dec
cmpsb
mov
int
movsb
mov
sub
adc
out
or
aaa
call
or
sbbl
inc
mov
push
jp
jmp
push
inc
mov
xor
inc
mov
movsb
push
sub
pop
and
pop
xor
fs
aam
mov
mov
sbb
outsl
pop
int
pop
mov
fisubs
mov
fmuls
add
fiadds
add
sbb
orb
add
stos
xchg
pusha
jne
pop
push
inc
dec
loopne
inc
in
cwtl
fsubl
repz
pop
add
mov
xor
lret
xchg
add
mov
xchg
mov
lcall
dec
out
xor
jns
xor
repnz
imul
inc
push
inc
mov
shr
in
lds
pop
fistpl
push
ret
gs
push
imul
orb
divb
pop
jl
mov
jp
cmp
mov
mov
jge
leave
fildl
and
mov
sub
arpl
fiadds
loope
loop
test
push
mov
mov
add
shrl
push
sbb
pop
and
cmp
add
and
mov
jo
fdivrs
dec
pusha
loopne
xlat
rol
pop
push
mov
test
or
test
ljmp
lahf
fistps
and
loop
xchg
mov
add
or
jl
rcl
mov
mov
movsb
in
fsubs
sub
jge
ljmp
mov
inc
in
pushf
mov
ds
pop
pop
inc
fisttpll
and
jb
jl
xchg
test
cmp
pop
cmp
ret
mov
cld
sbb
mov
rcll
sarb
in
aad
push
dec
test
mov
fs
push
loope
in
test
add
jae
in
pusha
push
adc
jne
mulps
lock
or
pop
xlat
in
cs
jle
and
mov
push
test
sbb
test
outsb
outsl
inc
sub
fstps
daa
push
push
repz
add
insb
inc
outsb
std
mov
cmp
subb
cmp
mov
push
xchg
ret
cmp
dec
arpl
cld
cs
xchg
and
push
sub
pop
jl
sbb
pushl
cli
push
cli
sbb
es
sbb
pop
jg
aas
test
fidivrs
jno
insb
jmp
and
inc
mov
movsb
nop
test
subb
or
xor
cmpb
or
bound
sbbl
cmpsb
or
icebp
lea
insb
aad
out
mov
adc
sub
popf
mov
cmpsl
outsl
push
mov
or
popf
xor
mov
or
xchg
int3
rorb
mov
sahf
bnd
xchg
mov
adc
shrl
xor
mov
sbb
cwtl
mov
ret
cltd
ret
mov
popa
xchg
out
out
in
fwait
shr
xchg
test
cmp
push
loopne
lock
psubusw
mov
mov
xchg
lahf
jns
fstp
adc
test
mov
out
test
mov
fsubs
movsb
cmp
movsb
and
testb
sub
pop
inc
xor
loop
rclb
and
pop
sub
push
fnsave
adc
dec
and
cwtl
push
mov
stos
fcomps
das
mov
sub
push
sbb
fcomps
sbb
clc
mov
inc
shlb
adc
dec
das
movb
fisubl
call
or
mov
fwait
mov
int
adc
ja
enter
imul
push
jmp
mov
xchg
ja
mov
cmpsb
jp
mov
cmc
xor
mov
loope
xchg
pop
sub
insb
jge
mov
scas
push
add
inc
and
push
push
dec
push
cmp
cs
push
test
fcompp
ja
iret
in
mov
adc
mov
fdivp
pushf
fs
cmpsl
push
xchg
loopne
pushf
dec
dec
scas
xchg
scas
or
sahf
addr16
test
cld
pushf
jae
test
and
sahf
xchg
pop
out
fdiv
enter
pop
sahf
pop
dec
ret
pop
push
sub
push
mov
mov
ret
cltd
test
add
iret
xor
xchg
adc
add
add
jmp
or
xchg
inc
xlat
lods
shlb
mov
ljmp
call
and
leave
pusha
icebp
popl
popf
rclb
jg
loope
repz
popf
xchg
xor
gs
cwtl
das
mov
fnstenv
clc
mov
imul
push
loope
repnz
rclb
cmpsl
add
push
mov
lds
mov
jecxz
or
dec
aaa
orl
push
inc
es
dec
mov
and
pusha
mov
mov
add
movsb
jecxz
shr
repnz
outsl
fstl
xor
and
shr
or
loope
pop
cltd
lods
inc
int
add
das
jmp
xchg
lret
lds
les
aaa
inc
shll
in
in
dec
push
rorl
das
pause
shl
sub
rclb
inc
icebp
push
sub
arpl
mov
add
repz
lds
jge
ja
scas
inc
arpl
test
lods
out
orb
or
sbb
jne
mov
and
movq
inc
or
inc
fcomps
insl
lods
push
lret
dec
hlt
or
push
inc
pusha
inc
movsl
test
pop
xor
add
xor
dec
push
ficoml
or
jb
add
mov
inc
shr
sub
iret
mov
jne
cmpsb
cmp
jns
js
xchg
adc
stos
add
push
mov
pop
imul
insl
or
dec
xchg
sub
push
fldl
aad
mov
xor
ret
jle
jg
push
or
pop
ret
loopne
mov
adc
dec
pop
in
in
cmp
mov
ja,pn
xchg
out
test
icebp
es
mov
pop
mov
inc
and
jmp
fimull
pop
sti
pop
push
pop
and
jmp
cmp
cmp
lods
fcom
jle
leave
sub
sti
orl
enter
adc
orl
add
in
mov
cmp
mov
scas
loope
push
push
add
jbe
lret
push
in
inc
gs
es
dec
out
hlt
xor
jecxz
arpl
vorps
out
movsb
xor
dec
iret
cmp
inc
fsubrl
imul
pusha
lods
aas
aam
mov
loopne
insb
sti
xchg
cld
pushf
jno
aam
scas
rcrl
es
subl
out
jae
pop
in
xchg
lods
push
repz
xor
call
pop
push
outsl
push
cmpb
inc
hlt
lcall
dec
jmp
inc
notl
aas
gs
and
cmpsb
or
mov
aam
decb
mov
adc
popf
mov
jge
add
adc
es
movsb
shl
jne
aas
adc
loopne
pop
xchg
sub
mov
cs
and
imul
int3
sbbl
dec
mov
jl
outsl
inc
testl
sbb
decb
pop
lods
dec
mov
cmp
in
fsub
aas
adc
or
lret
add
pop
fdivrs
fbld
sbb
iret
aad
mov
push
pop
pop
cmp
sarb
nop
xor
aad
cli
outsl
repz
nop
dec
cltd
scas
and
mov
insb
and
ret
inc
xchg
jae
cld
in
sti
adc
das
sti
mov
mov
adc
or
dec
std
or
fiaddl
pushf
lret
dec
fstpl
mov
insl
testb
fcmove
mov
popf
pop
mov
adc
imul
sub
lret
std
push
adc
pop
mov
push
cwtl
test
xchg
dec
sbb
inc
adc
ja
xchg
push
ret
cltd
outsl
daa
lret
in
out
adc
mov
mov
lret
sub
xchg
pop
cs
mov
mov
dec
pop
hlt
cld
imul
shlb
pop
mov
push
mov
mov
int3
repnz
pop
inc
pusha
push
imul
repz
mov
fdivs
imul
push
xchg
sbb
loope
push
fucomi
adc
and
dec
mov
cmpl
repz
xor
pop
push
out
into
les
in
or
pop
push
mov
pop
jbe
sub
and
add
es
filds
sti
data16
push
mov
repz
jl
push
movsl
rcrl
add
lods
sub
out
jbe
sbb
push
dec
test
cmpsb
sub
lret
loopne
and
inc
xor
pusha
jnp
enter
nop
inc
scas
repnz
arpl
fdivrs
data16
lret
push
dec
cwtl
ljmp
fsubrl
mov
aam
add
cmpsb
in
rclb
loop
xor
push
call
and
andb
outsl
repnz
neg
jno
cwtl
int3
aad
call
push
lea
xor
and
sub
les
mov
jg
lods
in
das
add
sbb
scas
inc
pop
mov
int3
rcrl
mov
loope
xchg
scas
mov
les
dec
ljmp
jmp
test
cmp
mov
pop
pop
dec
pop
lea
dec
mov
lret
int3
loop
or
sub
push
mov
loop
cmp
cmpsl
mov
adc
test
iret
shrb
gs
add
sub
lret
fnstsw
mov
xlat
loopne
das
add
in
mov
lods
pop
sbb
fyl2x
popf
movsb
sbb
scas
mov
pusha
mov
insl
rclb
insb
sbb
cmp
rorl
scas
sbb
adcl
adc
inc
cmpsl
sbb
cmp
mov
push
lret
add
inc
lret
push
sbb
es
cmp
jecxz
ret
dec
pop
jns
mov
inc
lcall
jle
push
sahf
push
sbb
leave
ret
mov
shll
jbe
test
lret
xchg
mov
jno
mov
clc
dec
mov
add
dec
out
pop
mov
outsl
stos
mov
outsb
nop
lods
mov
out
xrelease
out
sbb
xchg
sub
ss
jg
jb
sahf
ss
push
jo
lea
cmp
repz
xor
dec
inc
jnp
mov
add
lea
cmp
cmp
insb
sbb
outsl
inc
shld
int3
sub
jns
jbe
mov
adc
sub
jl
jo
cmp
xor
in
test
pop
data16
xlat
mov
sub
push
add
push
repz
jp
xchg
movsb
sub
mov
rorl
add
mov
sti
pop
aaa
popf
stos
push
insl
jbe
sahf
fsubrl
sub
fmull
nop
sub
fldcw
cli
rcr
xchg
lea
push
rcll
xor
and
adc
mov
or
popa
adc
or
and
into
sbb
mov
aad
call
xchg
ja
add
mov
andl
push
sti
xchg
mov
xor
sahf
xor
add
jo
insl
fldt
sbb
adcb
imul
xchg
fdivrl
or
mov
dec
outsb
mov
gs
fwait
out
xchg
shll
pop
cli
and
insl
das
dec
ret
push
hlt
mov
sub
test
push
push
xor
aaa
mov
imul
leave
test
xor
daa
stos
pop
test
lahf
add
mov
movsb
mov
insl
cmp
add
sub
push
mov
push
jle
pop
cld
inc
jnp
cmp
jo
pushf
shl
mov
jecxz
test
mov
sti
mov
mov
aas
loope
xor
add
js
xchg
aas
insb
and
add
cmpb
stos
mov
pop
outsl
incb
addr16
shrl
jnp
test
jb
call
in
push
jo
jnp
adc
dec
pop
jne
mov
inc
pop
int
adc
add
sbb
es
jnp
inc
loop
fiadds
mov
inc
mov
push
icebp
jecxz
das
jg
xchg
shll
xor
scas
jle
in
cmp
dec
imul
mov
cld
in
push
lea
dec
ret
repz
lcall
or
test
mov
fildl
jne
cld
scas
and
shl
popf
xor
loope
inc
jmp
xchg
lods
lds
sub
fnstenv
addl
scas
push
mov
xor
call
ds
push
insl
xchg
cmp
lret
push
sbb
shrb
pop
lock
sbb
pop
mov
shll
data16
insb
iret
or
clc
pop
lea
dec
aaa
mov
adc
fsts
gs
mov
or
xchg
xor
iret
sub
imul
imul
sbbl
sbb
repz
int
imul
cld
jno
push
test
adc
mov
jmp
les
call
icebp
in
inc
lods
js
stc
jnp
fucomip
shrb
in
lea
xchg
iret
outsb
mov
push
jb
insl
xchg
pop
jns
scas
popf
rcrl
arpl
sbb
push
mov
xchg
daa
xchg
sub
and
mov
or
cld
pop
test
jnp
inc
test
or
es
sbb
cmp
pop
test
enter
and
cmp
jae
popf
leave
xor
cmp
push
outsb
fsubr
and
xor
orb
pop
daa
fsubr
sub
wbinvd
mov
add
dec
mov
hlt
add
outsb
insl
imul
enter
repnz
jae
jl
sub
popf
push
iret
sub
cmp
insb
jp
sbb
jne
inc
pushf
dec
inc
arpl
ffreep
aaa
pop
lods
xchg
jp
fldenv
xor
out
or
xchg
insb
daa
into
jns
les
iret
ffreep
mov
push
sbb
mov
mov
idiv
stos
rcr
sbb
out
sbb
popf
stos
sbb
jbe
insl
scas
mov
add
addb
fstpl
push
dec
jno
mull
js
pop
add
cmp
xchg
sub
xchg
mov
cmp
add
imul
in
mov
stos
cld
fsts
jge
push
add
repz
inc
push
xor
adc
aam
xchg
insb
mov
cmc
sbb
inc
mov
aam
sbb
in
and
xor
mov
mov
fs
testl
insl
sub
in
xor
loope
or
fdivl
mov
test
jp
pop
les
lahf
jne
call
cmp
lds
mov
je
stos
ss
inc
push
int3
mov
jle
or
adc
xor
xlat
outsb
sti
loop
adc
mov
adc
das
and
jmp
in
addr16
nop
jno
dec
mov
xchg
adc
cmc
mov
daa
sbb
inc
adc
lret
dec
or
dec
pop
jmp
push
mov
fistps
xor
mov
lret
jmp
scas
pop
ret
mov
shrb
incl
sbb
push
xor
sbb
cmpsl
xlat
mov
adc
cld
sub
lods
or
dec
dec
adcl
jae
cwtl
lret
lret
stc
push
or
fistl
xlat
sbb
jb
fsubl
enter
std
and
aas
mov
and
mov
insb
stos
dec
push
ljmp
jno
jb
mov
mov
loop
mov
or
sub
xlat
sbb
cli
or
andb
mov
std
jns
mov
rcrl
pop
jle
rclb
jae
je
ljmp
jge
stc
adc
insl
fidivs
pop
jnp
jbe
lea
sbb
sbb
adc
push
cmp
push
mov
icebp
mov
ficomps
movsb
outsl
daa
mov
inc
and
pop
cmpsb
pop
inc
enter
loopne
popa
cltd
mov
stos
cmp
aas
int
or
jg
pop
xchg
aas
or
push
add
dec
leave
mov
jmp
out
rol
lods
inc
jp
std
ret
pop
add
xor
xchg
scas
xchg
xor
bound
test
test
sub
test
inc
mov
test
js
fwait
out
popf
stc
scas
jecxz
mov
lret
popf
xlat
mov
fs
aad
cmp
xor
xchg
or
dec
pop
xchg
and
outsl
jnp
lds
out
test
mov
lock
adcb
jge
sub
int
shlb
or
sbb
les
cmp
cld
cltd
icebp
aad
xlat
popa
xchg
xchg
insb
std
mov
sbb
hlt
daa
mov
sbb
daa
outsl
jecxz
sarl
mov
pop
mov
outsb
divb
enter
mov
jge
movsb
in
int3
xchg
push
inc
es
push
jo
lods
sbbb
mov
sub
cwtl
xor
out
andl
or
ret
push
in
jns
sbb
adc
mov
or
adc
into
in
jno
movsb
push
or
loope
inc
mov
rcrl
hlt
in
cmpsb
pop
adc
inc
inc
mov
jns
cmp
cltd
mov
lret
insl
mov
jbe
dec
insl
dec
mov
daa
push
or
dec
ret
pop
jp
add
and
popf
dec
nop
lea
shlb
adcb
aad
mov
sbb
insb
jnp
fsubl
aam
push
mov
sbb
icebp
leave
pop
sbb
daa
jle
dec
pushl
jl
pop
sub
fistl
je
jb
adc
mov
mov
pushw
out
bound
add
jnp
mov
pop
mov
dec
bound
das
and
mov
add
fisttpll
mov
repz
in
inc
xchg
test
jmp
std
hlt
push
insb
xchg
pop
sahf
and
or
jge
mov
scas
xchg
add
dec
mov
test
fsubp
mov
test
jo
push
mov
mov
adc
test
aaa
mov
cld
adc
imul
icebp
pop
mov
or
cmp
adc
push
lcall
cwtl
test
pop
cmp
into
loop
mov
testl
or
inc
adc
push
ljmp
call
mov
adc
xchg
bound
enter
jecxz
adc
xchg
imul
jae
adc
stos
xlat
mov
mov
mov
pop
cmp
pop
imul
xchg
hlt
push
lea
mov
sti
sbbb
enter
jbe
aam
or
xor
outsb
add
inc
xchg
pop
sahf
enter
jae
out
sti
aam
jp
mov
inc
fists
push
or
mov
insb
xorl
mov
bound
dec
sarb
insl
xor
pop
mov
lea
ret
jecxz
jecxz
inc
xchg
pop
out
inc
add
pushf
addr16
fwait
mov
es
mov
mov
xchg
sbb
into
add
cli
and
imul
add
fnstenv
xchg
imul
and
jo
cld
cmp
fstps
jae
lds
mov
inc
adc
xor
and
sub
negl
jb
and
addl
out
pushf
movsb
test
sbb
sbbb
xchg
inc
loope
adc
bound
in
lret
inc
dec
mov
scas
imul
in
cmp
outsl
adc
sbb
push
daa
inc
inc
ss
movsl
gs
mov
ljmp
push
sub
cltd
fsubs
fucomp
lds
or
xchg
int3
sarl
lret
das
push
sbb
inc
jg
add
lret
xor
cli
xchg
pop
adc
mov
mov
jns
push
sbb
or
xchg
dec
mov
add
mov
fcmovnu
xchg
and
push
mov
stc
out
pop
out
repz
hlt
mov
push
push
mov
hlt
dec
loop
shll
jns
repz
movsl
adc
push
lock
ds
fld
stos
push
test
nop
mov
fcoml
push
ss
test
call
lret
jbe
call
dec
shrb
add
sbb
dec
adcb
xor
mov
fwait
inc
popa
int3
mov
cmp
mov
stos
cld
arpl
mov
pop
adcb
jmp
movsb
xchg
mov
sub
mov
dec
movsl
xlat
fimuls
scas
aad
mov
pop
movsb
ja
loope
rcrl
mov
cmpl
addr16
push
out
add
jmp
test
in
or
sub
xchg
sub
data16
sbb
dec
sub
push
gs
add
dec
push
jae
mov
cmpb
pop
movsb
jecxz
rep
add
cmpsb
pop
out
add
mov
sarb
push
add
fists
imull
fwait
cmpsl
ja
mov
lret
scas
fwait
jns
inc
fstl
lcall
stc
insb
xchg
cs
xor
push
xchg
mov
jo
push
scas
mov
out
inc
addr16
je
stos
mov
mov
dec
jp
xor
adc
mov
ds
mov
ret
in
adc
push
lret
imul
sub
jle
dec
xchg
sub
je
sbb
adc
popa
ja
lcall
loop
fisttpl
test
inc
pop
insb
inc
xlat
popf
xchg
je
jg
inc
test
js
repnz
int
cmp
mov
pop
das
lcall
inc
adc
cmp
stos
pushl
aad
mov
push
les
dec
cmpsl
sbb
subl
pushf
jo
pusha
ss
scas
ret
add
jecxz
dec
push
imul
stos
in
cmp
ja
xor
dec
aam
out
jl
fbstp
lahf
dec
loope
lahf
movsl
ret
push
xchg
arpl
jg
rolb
lret
add
pop
push
pop
mov
repnz
and
dec
mov
push
in
test
xor
xchg
cwtl
test
lret
or
xchg
jnp
aas
xchg
cmp
add
rcrl
adc
cmp
loopne
dec
sbb
cmp
out
rcr
xchg
jnp
xorb
or
mov
iret
loope
pop
insb
jle
loopne
cmc
xchg
bound
lds
adc
cs
rorl
daa
push
sub
dec
movsl
dec
ficoms
jnp
cmc
adc
mov
xchg
bound
cltd
test
shrb
push
popa
push
out
xchg
nop
xor
push
jecxz
add
sbb
stos
stc
dec
lahf
daa
sbbb
mov
popa
cmp
jbe
adc
sarb
xchg
lods
ljmp
mov
add
int3
clc
mov
jbe
inc
stos
addb
or
dec
loope
jno
and
sbb
or
fucomi
lods
fnsave
sbb
dec
ja
and
xchg
adc
jp
cmp
pop
movsl
sbb
leave
rcrl
pop
mov
xor
cmp
cmpsb
add
fadds
inc
sub
out
outsl
pop
and
mov
xor
cwtl
flds
test
mov
test
xor
iret
fs
push
jmp
adcl
fsts
ds
fldt
push
dec
les
dec
aas
push
int3
jmp
jmp
popa
stos
push
ja
jmp
mulb
cmp
jge
mov
ret
decb
in
cli
inc
fs
clc
aaa
sbb
inc
mov
mov
mov
fsubr
ss
dec
jb
jb
repz
xor
sbb
into
sub
fstpl
into
pusha
adc
add
mov
jb
sahf
out
iret
mov
cli
ret
mov
rcrb
test
lds
dec
sbb
test
adc
movsl
addr16
cmpsb
les
out
lods
mov
rcl
call
jecxz
mov
add
jnp
xor
testb
mov
cmp
leave
cmp
sbb
mov
insl
or
pop
test
pop
push
fldl
push
xor
xor
call
outsb
lahf
mov
dec
fbstp
pop
das
mov
jo
popa
iret
dec
jne
sti
addb
out
xchg
lret
adc
mov
cmp
imul
mov
push
scas
sbb
mov
cmp
mov
cmpsb
out
or
pop
les
and
faddl
ds
lods
lret
orl
push
rorl
inc
pop
repnz
test
into
stc
mov
push
mov
or
xorb
pop
mov
stos
fdivrl
jmp
push
fs
sub
add
popl
es
pop
mov
jb
sahf
stc
sub
popa
mov
es
add
sbb
mov
fs
ficompl
nop
pop
dec
stos
imul
pop
sti
insl
loopne
mov
push
jo
daa
mov
push
jl
dec
xchg
test
xchg
jp
cmc
imul
xchg
mov
stos
add
xor
jns
cmp
int3
pop
sarb
inc
mov
push
iret
xor
in
aas
mov
mov
cmc
cmp
jns
cmp
pop
adc
stos
or
and
cmpl
inc
test
mov
pop
addr16
shll
mov
mov
int
push
and
jnp
cmpsl
add
jle
ja
into
arpl
jmp
mov
mov
mov
add
int
mov
popf
cmp
xlat
inc
and
mov
mov
xlat
loop
je
inc
dec
push
xchg
into
shrl
jecxz
inc
lods
jmp
test
pop
push
sub
nop
int3
movsb
mov
lcall
hlt
pop
cld
loop
or
sub
xchg
insl
inc
leave
test
mov
xchg
jl
ret
cld
fidivrs
daa
cli
add
xchg
stos
xchg
xchg
out
pop
insl
in
cmp
mov
pop
leave
stos
cmp
leave
pop
xchg
ret
jecxz
xor
xor
adc
jg
mov
pop
add
stos
mov
push
mov
inc
xchg
add
jmp
andl
xchg
lcall
in
xchg
sub
sti
fwait
daa
dec
mov
xor
dec
inc
cmp
add
pop
pop
adc
xorl
out
xor
js
mov
mov
cmp
add
sub
stos
out
test
cs
mov
das
push
or
inc
loopne
jmp
mov
cs
inc
mov
xchg
imul
add
cmp
cmp
aas
insb
push
pop
icebp
jg
push
in
dec
add
xchg
pop
js
sub
pop
out
push
pop
mov
or
in
sbb
mov
lds
stos
test
pop
insb
js
adc
ret
mov
stc
stc
js
inc
popf
aaa
int
xlat
mov
mov
inc
xor
push
xor
add
xchg
int
sbb
jecxz
adc
aas
jecxz
sti
lcall
sub
pop
int3
inc
cmc
sbb
adc
jmp
and
pop
scas
loop
cs
adc
cli
inc
adc
mov
insl
in
sub
stos
add
fdivp
inc
pop
inc
fimull
in
fdivs
or
add
cmpsl
push
cli
adc
xchg
lret
lea
dec
cmp
insb
mov
xor
mov
ds
lods
dec
in
adc
negl
push
push
jo
add
mov
ret
sahf
pop
push
jle
int
dec
pop
pop
xlat
pop
paddb
and
sub
cmp
sbb
dec
sbb
jae
add
popa
mov
xor
jnp
cmp
fists
rclb
adc
add
clc
in
mov
inc
mov
jns
adc
test
loopne
enter
mov
mov
ficomps
sub
jns
popf
push
into
mov
out
adc
mov
notb
in
dec
test
lods
testb
mov
xor
scas
mov
xchg
xor
cwtl
inc
fwait
inc
out
bound
loopne
jle
int3
inc
data16
insl
add
loopne
test
xor
and
repnz
sbb
inc
scas
out
cmp
leave
stos
inc
std
mov
push
out
fcomps
jecxz
in
aas
in
in
cmp
mov
cli
notl
sub
pop
shll
adc
jmp
mov
sbb
dec
pop
dec
inc
xor
adcl
inc
sbb
test
rolb
and
aam
inc
daa
inc
in
jbe
mov
push
pop
or
insl
xchg
mov
sbb
mov
in
cmp
or
mov
lcall
jne
fcmovbe
cmp
mov
imul
adc
lods
inc
mov
mov
cmpsb
sbb
inc
lods
xchg
cmp
orl
loop
xlat
push
out
adc
inc
rcll
gs
in
fidivrl
lds
ret
cmpsb
xchg
lea
push
cmc
mov
sub
test
pop
mov
push
sti
inc
jns
fs
adcl
ja
add
cwtl
pop
xor
sti
lea
sbb
imul
adc
or
andl
lret
movb
ljmp
push
cmp
inc
cltd
push
and
cld
adc
pop
lock
add
daa
add
dec
or
sub
mov
jecxz
pop
in
scas
or
mov
pop
inc
cmp
xor
push
fidivs
mov
xchg
sbb
gs
sti
xchg
adc
sbb
mov
inc
lret
aam
xor
std
xchg
mov
adc
adc
xor
bound
sahf
push
cmp
mov
mov
sbb
shll
mulb
push
sbb
dec
lret
lock
add
push
adc
jns
mov
test
addr16
jmp
and
and
inc
ljmp
in
dec
call
xor
cmp
xchg
add
cmp
subl
sub
push
in
mov
or
rolb
insb
cmp
out
sub
fdiv
xchg
dec
rcrl
jmp
mov
repnz
dec
pop
push
jo
sub
mov
fildll
adc
adc
mov
pop
jnp
mov
cmc
mov
repz
pop
inc
mov
test
add
pushf
mov
push
sahf
aad
xchg
mov
int
mov
dec
cli
pop
cmpsl
mov
xchg
mov
pop
out
clc
iret
pushf
cmp
xor
inc
push
insl
xchg
pop
dec
cmp
xchg
call
xor
mov
lcall
popa
pusha
shl
and
xlat
call
lcall
and
jno
das
pop
mov
pop
sahf
out
sar
popf
cmp
lcall
or
push
fcomps
pop
adc
jne
inc
outsb
aad
and
loope
orl
repnz
and
adc
jecxz
loopne
dec
xlat
icebp
icebp
cmp
inc
lcall
and
sbb
or
and
ja
cmp
test
xchg
jg
repnz
arpl
jg
push
lds
push
rcll
shlb
sub
mov
aam
xor
cmp
adc
sbb
psubw
repnz
notl
jmp
enter
pop
sahf
clc
ret
cltd
add
scas
pop
outsl
mov
jno
out
sub
sahf
lcall
aad
adc
xor
sar
ds
les
insb
scas
cmp
ljmp
test
jmp
xorl
push
imul
retw
andb
xchg
cmp
andb
nop
stos
sub
rcrl
insb
loop
mov
cmpsb
les
iret
mov
in
and
mov
mov
loopne
push
lea
jp
out
mov
xchg
cltd
jge
lret
sbb
insb
mov
add
push
test
pop
pop
and
xchg
lea
movsl
cmp
adc
or
gs
sbb
lret
jb
cmp
mov
test
scas
cli
loop
inc
cs
movb
int
mov
lea
rorb
jl
mov
rorl
test
out
and
cmpsl
or
cltd
arpl
dec
icebp
negb
imul
or
shlb
adc
and
lods
jno
sbb
push
xchg
dec
addr16
sub
xchg
inc
xchg
dec
into
leave
cltd
jbe
or
fs
in
mov
add
push
jb
and
jp
and
inc
mov
sub
sub
push
jne
movsl
fstpt
fstps
out
sahf
sub
sub
testl
mov
cld
mov
in
cwtl
mov
and
jb
cwtl
dec
add
push
adcl
xor
out
test
jnp
inc
fwait
movb
enter
mov
arpl
aas
inc
or
scas
mov
gs
fcoml
adc
lea
adc
push
xorb
pop
cmp
push
jb
and
inc
ds
rcrb
xchg
or
cmc
push
or
testl
push
cmc
jecxz
test
dec
hlt
cs
in
dec
aaa
jns
pop
cmp
pop
inc
addl
in
or
xchg
mov
dec
stc
adc
mov
pop
inc
jnp
mov
push
outsb
xchg
sub
inc
fs
paddd
mov
dec
and
cmc
or
and
jle
push
jae
dec
js
pop
outsb
xor
fimuls
xor
pop
cmpsl
shll
insb
mov
cmpsl
mov
lods
out
cmp
pop
test
lea
jno
frstor
imull
in
jbe
stc
mov
pop
cli
cmp
roll
dec
dec
sarb
loop
rorl
fcmovb
inc
xlat
shrb
mov
dec
pop
sbb
imul
dec
fcomip
jnp
addl
or
pop
push
loopne
inc
mov
sub
xchg
scas
jp
jmp
dec
sbb
dec
insl
fwait
add
shl
mov
fcoms
les
adc
mov
sub
out
pop
dec
scas
lea
lods
bound
popf
stc
imul
arpl
sbb
jns
push
sub
jbe,pn
aad
ret
dec
pusha
idivl
xor
lret
cltd
mov
jno
sub
rcrb
jae
testl
outsb
roll
xchg
push
out
mov
add
or
inc
and
out
inc
pop
push
mov
jecxz
sub
mov
bts
push
add
cmp
cwtl
xchg
in
and
pushf
cmp
iret
data16
outsl
daa
imul
push
add
ficompl
xchg
pop
cmpsb
ret
xor
sbb
scas
lahf
and
push
test
or
test
sbb
xorb
js
jb
lahf
fmuls
aas
mov
xchg
insl
cmp
pop
mov
fs
int
jmp
sbb
orb
pop
repz
pop
xor
out
jns
xchg
test
mov
xlat
xchg
jg
cwtl
jae
sti
mov
mov
push
sub
cmp
in
xchg
mov
pop
out
inc
mov
iret
repnz
pop
adc
inc
push
fs
insb
outsb
inc
in
jnp
stc
xor
mov
sub
sarl
pop
inc
cltd
jnp
mov
int
and
js
sbb
shrb
inc
sbb
clc
dec
gs
and
push
pop
mov
shlb
cmpsl
fwait
data16
pusha
mov
mov
sub
mov
inc
push
pop
fadds
es
dec
inc
jecxz
push
lods
rorb
dec
loope
push
das
sub
repz
mov
cmp
subl
repnz
xchg
dec
in
test
nop
sbb
imul
lcall
mov
cwtl
popa
mov
cmc
inc
lea
jecxz
ja
xor
sarl
sub
mov
xchg
insb
cmp
mov
repz
stos
lret
mov
repnz
cld
jbe
push
mov
mov
or
jno
fsubrs
scas
cmpsb
stos
cli
pop
iret
in
test
lock
test
dec
dec
and
lret
call
sbb
mov
lods
adc
sti
fdivrl
test
add
ret
dec
or
mov
imul
add
dec
push
push
cld
in
das
mov
adc
mov
repz
push
cmp
jg
inc
fistpl
mov
out
test
mov
imul
ds
jp
inc
pushf
popf
mov
cmp
push
idiv
test
or
push
loop
xchg
add
repz
icebp
mov
test
movl
sbb
test
out
and
xor
adc
gs
outsl
cmpsb
mov
stc
push
push
mov
lcall
clc
mov
mov
cmp
mov
dec
cmpb
jecxz
ja
push
inc
int
rorb
gs
mov
xchg
mov
test
jl
out
inc
mov
stc
mov
adc
movsb
or
push
push
or
lret
out
roll
je
js
shrb
pop
jnp
mov
pop
out
mov
xchg
jae
rcrl
dec
jo
jns
insb
out
pop
dec
clc
sahf
mov
mov
xchg
andl
adc
inc
pop
xor
xor
into
ljmp
je
xchg
mov
or
test
neg
sub
inc
pop
xchg
pop
inc
mov
jns
inc
add
or
inc
popf
or
push
xchg
lock
pop
and
popf
mov
movsl
out
fstpl
repz
pop
xorb
mov
push
sub
outsl
gs
iret
sbb
adc
sbb
out
lret
fnstsw
lahf
scas
adc
adc
adc
xchg
aam
adc
jno
mov
jae
mov
or
or
shlb
pop
xchg
push
outsl
pushf
std
lahf
daa
adc
stos
xor
xchg
xor
loopne
cltd
int
dec
cmp
adc
sahf
xchg
pop
mov
push
fbstp
mov
adc
arpl
cmp
test
mov
adc
hlt
push
push
loop
cmp
cmp
fnsave
bound
sub
adc
dec
shr
jne
sbbl
cwtl
es
imul
adc
mov
or
jge
jmp
shrb
push
test
sbb
cmpsl
aaa
scas
fildl
inc
sbb
lret
or
in
sbb
lret
inc
push
and
xchg
jp
in
testl
jge
add
mov
and
in
lret
push
pop
mov
fsubrs
mov
push
jmp
push
or
inc
scas
stc
testb
mov
xchg
fnstsw
das
mov
xlat
rcll
pusha
sbb
or
and
mov
jnp
jg
push
cwtl
push
jl
fiadds
mov
ret
push
in
pop
pop
mov
sub
pushf
in
lods
xchg
xchg
repz
add
cmp
aad
inc
out
fld
out
outsb
inc
stos
xchg
xchg
mov
ficoms
adc
sbb
int
pop
dec
cmp
jo
xchg
ja
sub
outsb
mov
mov
sbb
montmul
cmpsb
in
imul
add
lds
lods
out
mov
lods
sub
and
push
test
mov
cmp
movsl
add
fcomip
adc
jg
adc
or
into
push
imulb
enter
mov
repnz
scas
mov
mov
push
in
cltd
lods
xchg
jae
push
fwait
ret
jne
jecxz
rorb
and
dec
push
pusha
lret
pop
dec
add
pop
push
mov
lods
dec
and
jp
scas
inc
outsl
jg
sub
nop
int
shr
inc
sub
and
inc
or
js
fisubl
sti
jge
and
dec
imul
and
or
call
std
in
outsl
gs
test
shll
xor
aaa
adc
sub
fwait
dec
or
fwait
xor
mov
or
push
mov
fcompl
int3
pushl
mov
cli
cs
in
iret
popf
iret
imul
je,pt
mov
xchg
pop
cld
dec
sbb
xchg
pop
iret
jb
push
pop
push
insl
psubd
insb
fildll
mov
jl
decb
movsb
push
bnd
stos
jno
adc
xchg
adcl
adc
jmp
xor
inc
test
mov
or
push
mov
add
incl
clc
lcall
xor
push
mov
cmpsl
test
fldenv
mov
push
adc
cmp
mov
movsl
mov
shll
jmp
sub
loope
inc
dec
push
repz
jle
xor
mov
ret
scas
cli
push
into
push
scas
ret
mov
test
mov
jmp
neg
andl
and
out
shlb
and
lods
fs
ja
push
mov
pop
and
jb
dec
push
jmp
adc
cmc
jg
xchg
sub
test
les
dec
inc
out
loop
sahf
xor
outsl
xchg
sbb
call
lahf
ss
fmul
arpl
rcrl
xchg
outsl
mov
mov
shlb
mov
test
dec
daa
ljmp
imul
pushf
fsubl
enter
ja
in
pop
daa
outsl
sub
dec
dec
movsl
lea
inc
pop
jno
ja
pop
jb
enter
fldcw
dec
jnp
xchg
stc
ret
addr16
add
fidivs
adc
mov
push
sbb
cwtl
ret
xchg
cmpsl
notl
aas
add
fprem1
outsb
mov
mov
sbb
mov
adc
xor
jbe
jno
sbb
cltd
imul
pop
mov
mov
or
mov
pop
mov
xor
in
cmp
xor
jne
sbb
pop
fcmove
mov
lea
fdivrs
lcall
dec
jg
sbb
inc
out
xor
ret
sar
and
sub
dec
enter
insl
dec
cmp
lock
hlt
inc
hlt
dec
add
adc
sbb
sub
inc
add
add
xchg
dec
pushf
pop
xchg
jl
mov
push
je
jns
push
ljmp
lcall
and
sub
pop
dec
inc
enter
jecxz
arpl
xchg
in
xor
mov
dec
decl
add
mov
stos
faddp
in
jnp
enter
xlat
ror
fimuls
fcmovb
lds
out
imul
and
out
add
xchg
flds
lea
mov
std
sbbl
sbb
or
mov
mov
mov
or
arpl
rcrb
or
pop
ds
pop
imulb
test
xchg
cmpsb
idivb
push
mov
pop
lea
and
sbb
arpl
pushf
xchg
and
and
or
jg
or
into
pxor
jecxz
push
es
lods
out
jp
inc
or
sbb
dec
push
icebp
insl
push
es
mov
add
fadds
xor
enter
jge
clc
addr16
pop
inc
inc
dec
mov
out
shrb
jp
or
push
rclb
popa
add
push
add
mov
xor
rcl
insl
push
mov
mov
fdiv
inc
loope
je
mov
cs
mov
add
inc
lds
and
fstpt
mov
push
stos
movsb
lods
jmp
xor
and
mov
and
adc
dec
pop
scas
jae
xor
cltd
pop
ss
xor
lock
sti
rorb
stc
inc
inc
fsubrs
mov
jg
sub
mov
adc
or
mov
shlb
sar
test
loope
sbbb
es
stos
aam
mul
jnp
rcl
popf
addr16
mov
or
jmp
mov
insl
leave
mov
push
push
outsl
test
shlb
ret
lahf
xchg
in
push
out
fisttpll
stos
jns
jae
out
xchg
add
popa
jb
ljmp
ss
cmp
outsb
mov
sbb
adc
inc
call
jp
sbb
sbb
cmpsb
and
xor
lea
mov
pusha
pop
or
push
ficompl
mov
inc
out
jmp
or
test
dec
lods
or
sub
push
jno
dec
pop
add
inc
mov
pop
sbb
ret
cwtl
js
xchg
mov
jno
jne
mov
std
mov
add
adc
rclb
loope
inc
ss
push
cwtl
das
fimull
pop
ds
cmp
rcrb
inc
push
or
lahf
ss
mov
mov
cmc
inc
out
jbe
je
or
mov
mov
stos
in
push
xor
or
js
js
jecxz
rcrl
repz
test
test
sti
shl
push
std
sbb
fildll
loop
inc
add
inc
cli
fwait
cs
lods
cmp
enter
mov
pop
imul
cld
inc
pop
ss
inc
xor
pop
jb
lods
sub
sub
adc
ljmp
into
addb
xor
xor
inc
xchg
add
xor
lcall
fstl
int
xchg
mov
daa
or
sub
adc
inc
fldcw
pop
bound
fsubl
test
rorb
orl
xchg
aad
movb
icebp
sub
imul
xchg
scas
and
cmpsb
sbb
mov
movsl
nop
push
and
aam
and
lcall
outsb
outsb
jl
int
leave
ja
mov
shrl
jb
movsb
push
lods
movsl
adc
adc
call
sahf
push
fwait
cwtl
mov
cmp
push
adc
cmpl
inc
and
mov
outsb
adc
mov
les
pop
push
repz
jl
add
mov
enter
scas
xchg
iret
movsb
pop
sub
call
pop
sub
ret
rcll
cmp
test
fisttpl
mov
cwtl
fs
enter
adc
out
sub
repz
ljmp
sub
mov
and
add
in
popa
mov
jne
test
iret
out
pop
jmp
insb
sub
xor
mov
mov
ret
mov
mov
sbb
jns
lret
cmp
pop
ret
int3
mov
cmp
out
cmp
or
iret
ds
mov
sub
xchg
push
jl
cmpsl
scas
fwait
ljmp
add
aad
inc
sahf
inc
clc
cmpsl
jb
lret
out
aaa
in
push
add
xor
mov
push
inc
sub
push
test
fs
xchg
cmp
stc
adc
test
add
test
cmp
cwtl
cli
xchg
ss
rcrl
jne
jp
in
inc
out
mov
bound
push
jmp
fcomps
xor
inc
jmpw
iret
movl
cmp
and
pop
shl
aad
inc
js
pop
popf
or
call
cltd
and
mov
enter
sti
cmp
adc
mov
movsl
movsl
dec
pop
and
mov
sarl
scas
lcall
loopne
and
mov
xchg
movsb
sbb
adc
aam
ret
mov
sbb
pop
hlt
aam
sub
jg
pop
inc
lock
xor
pop
bound
cmp
mov
popf
das
cmp
jge
push
test
pop
test
nop
mov
enter
pop
sbbl
jb
repz
bound
enter
mov
jg
loop
dec
adc
es
arpl
cltd
and
popa
scas
pusha
push
jno
cwtl
shrb
and
add
jp
and
cli
and
cmp
add
sarb
xchg
sub
int3
cli
xchg
mov
fisubrl
jae
sbb
push
je
add
mov
repnz
in
jge
mov
sbbl
add
ret
jmp
repz
test
add
ds
cmp
je
xlat
subl
imul
sarb
jno
pop
andb
stos
outsb
add
jmp
mov
mov
fidivrl
add
inc
shl
push
sub
into
enter
testl
dec
loop
fstpt
andb
icebp
jge
xchg
sbb
gs
hlt
pop
jmp
xchg
jle
inc
loop
sub
test
call
test
push
push
lods
mov
push
inc
flds
jle
jmp
sbb
sbb
mov
negb
jbe
jae
and
shr
aas
pop
fwait
test
je
adc
push
adcb
mov
sbb
pusha
je
pushf
sarl
add
xor
decb
inc
mov
addl
leave
and
jp
hlt
stos
fsubr
jle
mov
scas
out
and
nop
fsubr
pop
push
xchg
cvtps2pi
lcall
jle
cmp
movb
push
call
inc
adc
mov
hlt
pop
sbb
mov
fisttps
pop
ror
hlt
cmp
fsub
mov
ss
mov
mov
sbb
mov
fsubrl
fcompl
jecxz
cld
inc
sbb
inc
push
test
and
lea
in
dec
dec
clc
mov
ret
jecxz
add
mov
dec
pop
mov
push
subl
dec
sub
mov
pop
xor
mov
mov
dec
xor
xchg
scas
and
mov
fdivl
stos
cmp
ja
sub
mov
adc
fwait
aaa
xchg
in
push
add
arpl
pop
mov
mov
xor
mov
aam
mov
lods
cmc
or
vmovapd
lahf
movsl
xor
fadds
dec
or
inc
dec
or
xchg
mov
push
add
fisubs
cmpl
jbe
or
mov
xchg
lds
repz
fstpt
call
jge
pop
jl
push
out
loop
sti
lea
and
fildll
mov
out
add
inc
dec
push
iret
dec
hlt
mov
aaa
pop
mov
mov
mov
mov
loopne
pop
out
dec
jno
jecxz
movsb
xchg
adc
arpl
push
cld
cmp
xchg
inc
mov
int
push
gs
pop
jp
pop
mov
pop
je
nop
fistps
lods
xor
mov
add
pop
cmp
repnz
fisubrl
sub
scas
pop
notl
or
mov
aas
xchg
in
outsb
fimuls
jae
repnz
nop
xchg
adc
imul
rorl
jns
pusha
xor
pop
cmc
mov
mov
test
shl
mov
mov
bound
fsubrs
subl
xlat
xlat
mov
into
imull
dec
sbb
add
mov
sahf
loopne
outsb
cmp
sub
push
xchg
outsl
push
or
je
add
loopne
mov
dec
rclb
sahf
push
int
inc
sbb
pop
lahf
sub
sbb
loopne
or
and
fisttps
outsl
outsb
dec
inc
ret
lds
push
pop
imul
inc
aas
lods
popa
sbb
movsb
repnz
pop
ror
add
repz
and
sti
loop
ret
sbb
mov
lods
mov
and
je
pop
pop
push
push
mov
mov
outsl
iret
icebp
xchg
lret
jbe
scas
lret
idiv
mov
xor
pop
scas
js
cmp
add
add
out
pop
jo
jecxz
icebp
and
dec
out
sub
ret
dec
ja
ret
popa
jecxz
add
inc
mov
neg
sbb
xchg
stos
inc
in
inc
fmulp
pop
fadds
in
mov
aam
adc
int
xchg
sahf
jnp
jecxz
sub
and
rcll
enter
fdivs
in
hlt
jle
adc
fs
insl
xor
and
add
call
cmpsl
inc
into
and
fmull
pop
mov
dec
loop
out
repz
mov
adc
fildll
and
inc
popa
clc
aaa
push
push
filds
dec
repnz
outsb
jbe
inc
ja
and
mov
jae
sub
std
xchg
sub
cli
sbb
rol
rcrl
bound
dec
out
dec
push
mov
dec
aad
hlt
sbb
sub
test
popf
negb
or
push
push
stos
arpl
fldl
sbbl
push
mov
pushf
aam
into
push
mov
insl
enter
aas
xchg
loope
inc
dec
fwait
cmp
stos
jne
xlat
cmpsb
adc
fcmove
sbb
lea
push
mov
fldl
xorb
lret
call
fs
cwtl
clc
outsl
ss
xor
ljmp
lahf
and
pop
jae
dec
add
fdivrl
testl
repz
push
negl
shlb
inc
fsubrs
or
scas
inc
mov
jns
inc
sbb
sbb
pop
int3
mov
enter
add
testb
insl
sbb
hlt
xchg
idivb
lods
cs
in
imul
shlb
xchg
sub
mov
xor
and
mov
jnp
cmp
xlat
mov
fwait
aaa
mov
daa
mov
cltd
shll
scas
xor
out
test
out
in
cmpl
or
pop
mov
bound
stos
aas
push
push
mov
aam
cltd
or
sub
repz
mov
or
jne
mov
stos
inc
or
push
je
add
sbb
stos
inc
push
lock
xor
inc
jbe
int3
fwait
bound
fwait
sub
pop
test
and
and
xor
dec
push
fiaddl
inc
movsb
pop
dec
out
int
jle
xchg
ja
sbb
xor
loope
les
and
out
xchg
aaa
push
popf
adcl
and
les
shl
les
push
nop
jae
mov
test
pop
adc
jp
pop
jo
adc
mov
jmp
push
inc
sti
stc
nop
jecxz
xor
ret
mov
xchg
sub
push
cmpsl
in
test
mov
xchg
push
repz
mov
in
rcrl
fldenv
sbb
iret
imul
shrl
cli
cs
mov
in
cld
sbb
aas
jbe
push
mov
mov
int
add
mov
mov
jb
cmp
lahf
xchg
lods
mov
jno
cld
inc
dec
xchg
je
out
push
out
sub
cmpsb
sbb
jne
pop
and
sub
jg
stos
pusha
loope
jno
shl
pop
out
in
sbb
fnstcw
mov
jae
mov
sub
ds
push
call
xchg
mov
fwait
mov
int3
arpl
mov
xchg
or
mov
pop
scas
in
jo
and
stos
xor
mov
push
shll
mov
xlat
mov
es
scas
jns
cmp
xchg
xchg
mov
sbb
test
jne
lret
rorl
pop
inc
int3
clc
scas
pop
xchg
jns
push
jle
daa
mov
inc
cld
xchg
and
lods
push
cmp
imul
ret
clc
ja
loopne
test
sti
in
daa
shrb
popf
push
mov
sbb
jb
mov
shll
add
imul
test
push
cwtl
ja
inc
aaa
dec
cli
je
sub
xor
add
adc
sub
add
jp
push
out
fwait
xchg
or
add
dec
ds
fbstp
movsb
jl
sub
insl
leave
int
out
mov
or
dec
int3
jl
cmpsb
add
xchg
outsl
push
sub
outsl
mov
int
sub
aam
loop
add
out
cmp
popf
push
dec
cmpsl
xor
push
push
bndstx
pop
cmpsl
xor
lods
jne
cmp
in
push
shlb
jnp
xchg
pop
cmovno
sbb
loop
pop
cmp
cmp
test
mov
jmp
into
ficoms
sub
in
sbb
clc
push
lret
and
cld
add
cmp
cmpsb
inc
je
xchg
push
jo
jb
push
pop
inc
sahf
sbb
cmpsb
ret
pop
andb
mov
push
xor
mov
pop
std
add
cmp
loope
mov
test
mov
loop
pusha
pop
aaa
adc
cmp
or
push
dec
xor
ljmp
adc
pop
pop
mov
mov
dec
movsl
push
push
and
sub
cmp
jbe
daa
and
shlb
ret
dec
insl
stc
push
imul
hlt
mov
repnz
mov
pop
aad
jns
out
mov
jmp
jns
lds
out
dec
pop
lock
lods
add
or
sbb
fcoml
inc
adc
dec
pop
mov
cmp
inc
out
cmp
or
aam
xchg
cs
dec
out
mov
call
mov
adc
xchg
mulb
lods
fsubl
mov
test
mov
push
cmp
sbb
sbb
sbb
cmp
jle
scas
std
xchg
and
jp
inc
add
and
cmpsl
mov
pop
dec
ja
jnp
outsb
loope
adc
mov
push
lret
pop
jne
jmp
addr16
jne
adc
add
xchg
inc
fwait
bound
dec
cld
les
xor
pop
addr16
popf
hlt
mov
sbb
int3
jo
pop
outsb
add
ljmp
mov
test
shll
scas
and
subb
push
xchg
push
xchg
inc
jg
pop
test
call
call
mov
ja
fsts
mov
pusha
out
add
add
xor
mov
lret
bound
leave
or
mov
fstpt
aaa
jbe
jg
js
add
pop
pop
jnp
and
ljmp
pop
ds
bound
scas
call
int3
popf
in
orl
or
xchg
out
imulb
shr
negl
adcl
jno
addl
movsl
test
ret
jb
and
jg
hlt
pop
mov
adc
mov
adcl
ds
or
das
ljmp
loope
mov
pop
inc
or
inc
subl
cwtl
pop
cmp
idivl
push
imull
andl
in
add
hlt
imul
mov
add
adc
outsl
dec
push
pop
loop
inc
dec
lock
es
xchg
lahf
push
add
aad
xchg
push
pop
je
push
add
repz
icebp
lcall
xlat
xchg
xlat
mov
pop
xchg
push
jbe
push
loope
or
sub
dec
out
add
aaa
call
jge
ljmp
pop
les
xchg
scas
sub
pop
push
call
mov
mov
pop
push
test
mov
mov
ficoml
out
fcomip
jbe
hlt
jns
mov
out
mov
mov
enter
mov
fisubrs
fildll
adc
test
mov
fdivl
sbb
sub
data16
jae
pop
fidivl
int3
mov
lret
int
sub
mov
cmpsl
es
out
test
push
addr16
ficoms
data16
in
push
or
xor
clc
adc
movsb
push
sub
das
jne
inc
sbbl
sbb
jge
add
cld
or
test
add
fnsetpm(287
push
mov
push
neg
pusha
mov
push
jno
jp
gs
fsubrp
and
and
insl
jbe
or
adc
lret
sahf
daa
dec
fistps
hlt
addr16
push
push
jb
pop
jno
pop
mov
dec
mov
or
rcl
repnz
jle
repz
testl
leave
loope
ret
mov
aas
test
jne
into
sahf
fsqrt
pop
das
cld
into
jae
pop
sub
pop
je
xchg
das
dec
pop
mov
xor
iret
fs
cmp
xchg
mov
in
xor
cli
or
pop
pop
lea
stc
add
sub
fucomp
dec
xor
std
inc
lea
ret
xchg
cltd
iret
or
stc
mov
fsubs
pop
clc
aad
dec
addr16
fwait
sbb
inc
movsb
popf
pusha
popa
jbe
test
adc
lahf
sub
cmp
lcall
inc
jp
repz
out
xchg
stos
sub
mov
or
inc
cmp
jnp
leave
push
mov
popf
add
jle
cs
jbe
adc
jg
hlt
inc
mov
xchg
test
xor
orl
das
bswap
pop
sbb
push
dec
cmp
jnp
inc
xlat
mov
or
les
fwait
push
outsb
das
stc
push
inc
inc
or
xor
lods
add
push
insl
cli
ret
int3
cmp
push
push
add
dec
xchg
inc
pop
fwait
push
js
inc
add
in
ljmp
int
mov
xchg
cmp
cmpsl
pop
add
pop
cmp
popf
sti
inc
sbb
inc
sbb
cmp
cmp
cmc
pusha
arpl
aad
or
aam
add
dec
fistpll
dec
push
pop
push
aam
xchg
fcoms
mov
shr
fnsave
int3
xchg
loop
insb
js
add
je
jbe
inc
movsb
pop
and
jmp
mov
xchg
clc
shrb
or
or
pop
loopne
insl
addr16
ret
push
push
fnstcw
mov
daa
xor
arpl
pop
test
push
jb
and
test
popa
movsb
andb
adc
push
jae
xchg
pop
movsl
push
pop
cmpsb
faddl
pop
enter
mov
mov
addr16
pop
inc
jns
xchg
add
adc
lahf
cmp
inc
push
push
sub
lods
jmp
or
popf
lret
ret
bnd
loope
out
or
lahf
adc
out
add
and
push
dec
mov
jmp
inc
push
add
fidivs
in
mov
sub
out
add
ret
cld
and
shlb
inc
inc
stos
loop
ds
loopne
jecxz
js
int
fdecstp
jno
mov
sub
pop
fistl
sbb
jb
xor
ret
test
jge
xor
push
dec
cmp
aam
cmp
mov
and
adc
pop
cwtl
cmp
mov
xor
in
add
cmp
inc
pop
fcmove
int3
in
aam
into
nop
xor
sub
nop
shlb
stos
inc
bswap
xchg
sub
push
inc
arpl
jb
shrb
and
jecxz
mov
rcll
es
out
out
jl
xchg
aaa
sub
fs
data16
inc
inc
ja
aaa
in
insl
mov
pop
aas
lret
push
inc
cwtl
or
mov
shl
and
mov
jnp
sbb
mov
inc
test
das
cmp
sbb
outsl
rep
dec
sarl
lahf
ds
mov
jl
jns
mov
fldt
sub
ret
repnz
pop
mov
cmpsl
adc
shll
testl
add
xchg
ljmp
pop
cmp
aad
adc
popf
mov
iret
mov
iret
sub
pop
inc
xor
lods
ljmp
sbb
push
shl
ss
test
in
aas
dec
inc
pop
add
loop
jmp
sub
and
add
cmp
adc
int3
arpl
xchg
cmp
ficomps
daa
stc
les
mov
and
sub
and
mov
xor
rcrl
pop
lods
outsl
stc
inc
lahf
sub
in
dec
enter
adc
ds
push
cs
mov
lret
xor
jmp
loopne
xorb
decb
sbb
mov
dec
out
sti
jle
repz
stos
push
mov
dec
add
shlb
xlat
add
pop
push
xor
mov
lret
lret
test
dec
mov
adc
int
or
xchg
push
inc
les
cmp
lods
sbbl
fldt
inc
pushf
cmp
icebp
ljmp
test
add
inc
fidivs
aaa
cmp
hlt
sbbl
je
not
jmp
lret
int3
dec
lock
push
sub
lcall
jbe
ds
repnz
add
pop
adc
adc
mov
int
jae
push
lcall
inc
adc
addb
xor
mov
and
lcall
jmp
icebp
inc
inc
scas
inc
ret
cmpl
mov
xchg
cwtl
and
mov
pusha
inc
lods
sub
push
stos
pop
test
pushf
adc
push
xor
mov
push
pushf
fidivrl
hlt
out
cmpsl
jp
sbb
push
lahf
in
sarl
or
jge
js
nop
adc
adc
icebp
jle
jbe
xor
push
ljmp
pop
leave
fbstp
mov
cmp
adc
nop
orl
mov
mov
adc
xor
repnz
movsl
fiadds
rcrb
mov
sbb
cli
mov
es
push
lahf
decb
cli
adc
rclb
mov
movsl
test
add
adc
jmpw
sbb
mov
int3
mov
lretw
add
or
cmpsb
push
stos
pop
adc
xchg
cmpb
adc
jns
dec
mov
jb
inc
pop
mov
mov
outsl
cmp
xchg
int
icebp
jbe
pop
stos
dec
lcall
pop
sbb
ror
push
stos
out
xor
ret
lods
imul
xor
or
cs
mov
out
iret
idivl
sbb
lock
inc
xor
bound
bound
fidivs
hlt
pop
pop
dec
lea
fldt
jns
shll
cmp
cmp
mov
fcmovne
sbbl
adc
lahf
adc
push
pop
xchg
inc
rcrl
call
rcrb
jecxz
rorb
xchg
xor
cmc
call
shll
and
fucomi
mov
jmp
inc
pop
shlb
in
sahf
cmp
out
test
in
enter
arpl
movsb
sub
das
loopne
or
call
jp
lds
jg
sbb
repz
into
cwtl
lret
adc
out
divl
jecxz
cmp
xchg
roll
dec
cmp
and
mov
pop
xor
fcomi
mov
jmp
jbe
cld
mov
cmp
mov
ficompl
jo
in
fisttps
sti
leave
jo
pop
mov
aas
cmp
insb
xor
lods
inc
cmp
and
xor
bound
loop
repz
das
jmp
scas
lods
inc
mov
xor
ds
in
pop
jno
mov
cmp
lods
data16
cmp
cmp
repnz
push
and
ret
scas
imul
dec
fcoms
pop
xchg
scas
dec
movsb
push
mov
pop
popa
lret
pop
add
cmp
xchg
es
ffree
into
mov
add
imul
jg
jge
pop
push
loopew
add
sbb
sti
enter
pop
insl
or
fwait
cmp
push
push
enter
lock
pusha
in
daa
pop
jbe
or
cmp
and
lods
inc
lret
adcl
addr16
jbe
pop
push
int
test
ror
leave
lods
and
test
mov
mov
inc
push
xor
out
fsubp
rolb
ljmp
int3
cwtl
add
ret
cwtl
das
stc
mov
dec
gs
outsb
cmc
inc
inc
fisubl
lds
xchg
lods
sub
stos
mov
mov
lret
cs
jmp
lods
lds
xchg
les
adc
sahf
xor
out
inc
fcmovnbe
repnz
repz
aaa
jecxz
daa
cmp
lds
das
dec
and
aaa
dec
xor
std
push
leave
or
inc
fisubs
ret
jnp
xor
jne
jno
xchg
dec
test
sti
cli
mov
jge
sub
jb
jns
sub
dec
xchg
push
pop
xchg
data16
popa
cli
xchg
cli
adc
sbb
mov
push
jmp
mov
cs
adc
push
xchg
jecxz
pop
ljmp
outsl
dec
or
ret
lcall
push
xor
leave
in
cmpsb
cmp
sub
jno
out
dec
xchg
lods
js
mov
enter
aad
movsl
scas
xchg
sbb
scas
dec
jne
in
out
ja
adc
inc
xchg
mov
or
cld
xchg
pop
push
call
imul
mulb
nop
out
cmp
imull
ja
xchg
sbb
leave
pushf
push
dec
sub
and
aaa
cld
fbld
inc
adc
dec
in
les
add
leave
outsb
inc
jle
mov
sub
adc
add
hlt
sub
aaa
adc
inc
leave
das
add
sub
dec
sbb
sub
jo
cmp
rcl
add
test
add
paddb
mov
imul
pop
sbb
shrb
jne
push
scas
in
push
mov
or
cwtl
sbb
cwtl
call
movsl
outsl
pop
mov
out
pop
mov
jecxz
inc
iret
lods
les
filds
adc
xor
ss
lcall
add
std
jle
mov
sbb
jne
xchg
sub
pushw
add
and
push
push
out
jns
lret
aaa
inc
cmovg
inc
cmc
dec
fdivs
jne
rep
arpl
and
mov
hlt
mov
cltd
and
add
mov
mov
fisttpl
mov
addr16
or
push
lock
adc
add
addr16
jmp
out
sbb
sub
xchg
lds
enter
fldz
add
push
push
pop
mov
clc
pusha
out
push
sbb
push
jle
push
out
cmp
jp
loop
pop
push
leave
jbe
xor
mov
enter
jg
fsubr
adc
lea
arpl
cmp
or
ja
loop
mov
in
mov
aad
test
aam
fstl
jbe
jg
lret
xor
shl
push
and
adc
adc
pop
mov
repz
cmp
rorl
ds
stos
in
sbb
pop
mov
in
sti
or
scas
and
mov
mov
jbe
dec
loopne
mov
push
aad
sti
and
jb
std
xchg
leave
les
jmp
and
loopne
jb
ljmp
enter
xchg
sbb
and
lds
push
call
not
outsl
jns
fstps
dec
loopne
outsb
ja
mov
sarl
lcall
loop
add
insl
enter
push
adc
and
mull
inc
push
mov
inc
pop
mov
pop
fcoms
repnz
xchg
cld
addr16
lcall
jno
lret
bound
insl
push
inc
xchg
and
push
arpl
inc
into
int
stos
arpl
adc
lds
inc
test
jge
stos
das
add
sbb
pusha
jl
cmpsb
scas
mov
dec
pop
xchg
sarb
mov
pop
loop
pop
pop
or
addr16
repz
inc
imul
dec
lahf
divl
or
in
sbb
push
sbb
test
ret
je
push
inc
ret
push
xchg
or
fucomi
inc
fisubrs
mov
mov
inc
pusha
or
clc
mov
inc
outsb
stos
in
push
dec
daa
ret
sahf
or
loopne
mov
dec
cmp
mov
out
cld
xchg
or
and
leave
and
xchg
fs
loop
mov
fsts
inc
push
dec
pop
push
cmp
insb
dec
or
lcall
int3
push
jnp
mov
cltd
dec
outsb
or
or
pusha
mov
jne
mov
cltd
and
jns
inc
in
int
jmp
lcall
cs
cli
ret
rorb
out
stos
sbbl
add
movsb
xchg
xchg
fisubs
cmp
clc
sbb
lea
aaa
push
push
outsl
pop
ja
mov
sbb
dec
lods
xorb
sub
xor
out
lcall
cmovp
in
fidivrs
jo
add
and
stc
adc
stos
emms
jo
ffreep
dec
and
dec
aaa
mov
fstl
add
aas
jno
jmp
adc
dec
ds
popa
pop
pop
xchg
sub
add
mov
lret
daa
pop
mov
sarb
xchg
scas
and
mov
fsubl
mov
sub
mov
outsl
xor
jmp
movsb
lret
cmp
mov
cmp
push
loopne
xchg
mov
jno
sti
dec
mov
leave
or
mov
fldl
xor
push
mov
pusha
outsw
push
lret
rclb
icebp
jle
xchg
cmp
xchg
adc
mov
iret
push
scas
xchg
aaa
rol
xor
leave
notl
and
loope,pt
inc
add
in
or
popa
mov
nop
jl
xchg
dec
dec
xor
imul
and
aad
out
pop
call
sahf
roll
mov
shlb
sbb
and
fdivrs
mov
gs
es
js
aad
gs
push
cmpsb
jg
xchg
sub
cld
push
xchg
mov
pusha
dec
mov
push
filds
jb
fstps
push
iret
cli
mov
dec
and
adc
xchg
imul
xchg
xor
frstor
jmp
cmp
movd
test
sbb
push
sbb
mov
xchg
cltd
sub
dec
and
pop
ja
adc
push
cmp
cmpsb
imul
sub
in
cmp
jge
push
in
lret
shlb
addr16
sub
aad
pop
jbe
negb
mov
lods
ffree
shrb
jb
in
jecxz
sub
mov
pop
iret
adc
pop
mov
push
jge
sub
sbb
je
scas
adc
inc
and
jns
or
js
push
lcall
bound
inc
cmpsl
cltd
testb
cmp
in
xor
jle
nop
outsb
mov
jno
aad
sbb
push
scas
pop
and
jp
in
ret
mov
push
pop
pop
lock
fs
test
xlat
add
test
jge
into
mov
pop
sahf
ja
mov
sbbb
adc
xor
cmc
sbb
cmp
loopne
pusha
jb
push
xchg
insl
sub
push
lret
pop
add
push
ds
insb
in
and
into
outsb
sub
pop
and
mov
xor
add
enter
pop
cmp
or
add
dec
adc
or
popf
cmpsl
sbb
or
xor
pushf
lods
int3
dec
fldl
out
mov
in
pop
adc
adcl
data16
mov
clc
inc
rcr
jmp
dec
gs
mov
push
in
es
add
and
fimuls
scas
enter
movsb
ljmp
mov
or
xor
mov
mov
pop
jecxz
jle
pop
jo
dec
in
mov
xor
stc
insb
sub
xor
lret
fstpt
mulb
daa
jl
in
mov
sbb
out
sbb
sub
outsb
stos
inc
and
leave
iret
mov
lods
mov
fbld
adc
test
xchg
mov
dec
aam
bound
xchg
and
cmpsl
imul
aam
enter
bound
xor
data16
xchg
push
mov
jb
fwait
xor
mov
or
inc
or
repz
lods
addr16
sbb
insb
ljmp
iret
sarl
test
mov
test
cmp
push
add
outsb
mov
mov
xor
data16
mov
sahf
sub
divb
enter
and
push
mov
cmp
int3
sahf
loopne
insl
adc
push
in
stc
push
jo
cmp
je
cmp
push
jmp
inc
mov
sub
fwait
and
mov
inc
lcall
dec
mov
ret
add
mov
loop
imul
lret
rclb
movsl
insl
pop
dec
lahf
mov
test
in
icebp
push
bound
mov
imul
js
mov
andl
or
push
lea
push
pop
ret
sub
in
aaa
push
popa
mov
int
inc
push
and
mull
mov
insb
add
pop
adc
pop
js
jb
xchg
test
stos
mov
push
push
test
xor
add
out
test
cli
das
cmp
scas
aas
aam
sbb
jp
pop
jne
cmpsb
test
pop
cmp
dec
imul
andl
mov
push
or
jl
out
popf
cld
popf
sub
rcr
stos
sub
roll
bnd
xor
lahf
pushf
or
movsb
les
add
aas
cmp
sub
xor
mov
sbb
cmp
in
mov
popf
test
es
insb
js
push
mov
movsl
repnz
fnsave
imull
jae
jbe
push
test
or
jg
lea
popf
shl
test
xchg
dec
jns
loope
imul
popf
adc
inc
std
add
or
adc
sbb
frstor
pop
xor
mov
xor
shr
jnp
fs
xchg
dec
add
lahf
xor
push
fs
push
add
xor
cmc
mov
pop
shrl
arpl
push
pop
mov
lods
cs
pop
mov
shr
mov
mov
lret
push
inc
lret
mov
add
sub
cli
xchg
push
icebp
out
sbb
sbb
sub
cmp
mov
inc
pop
sbb
data16
clc
fs
in
aaa
into
inc
add
inc
fwait
ror
fiadds
std
mov
daa
loop
fdivl
jo
mov
ljmp
adc
je
push
mov
and
jo
push
rcl
inc
hlt
mov
iret
jl
lods
ss
mov
je
fucomp
mov
imul
lock
shll
mov
test
ds
filds
mov
fimuls
or
stos
xchg
dec
adc
dec
cmp
xchg
xchg
pop
pop
test
jmp
dec
hlt
sbb
gs
mov
jecxz
ret
push
aam
mov
scas
xor
cmp
adcl
pop
inc
gs
shrl
js
jp
nop
out
cmpsl
loop
cmp
fildll
movsl
test
into
test
push
sti
inc
arpl
int3
xor
stos
imul
lcall
loop
aad
not
mov
add
cwtl
int3
int
ljmp
sbb
or
ds
addb
cmc
xchg
scas
out
xor
push
leave
jns
cmp
shll
sbbl
pop
inc
pushf
and
icebp
cmp
jl
dec
lea
ja
mov
lret
adc
or
jb,pn
jecxz
xchg
xchg
das
test
pop
outsb
pop
jns
ljmp
test
or
loopne
arpl
lcall
lods
pmulhuw
cmp
mov
test
cmpl
and
lods
or
lahf
inc
test
ljmp
jbe
shl
sub
insb
xorb
lds
adc
mov
je
clc
dec
mov
mov
aas
iret
stos
cmp
adc
inc
enter
sbb
jle
mov
mov
mov
mov
sarl
and
iret
adc
sub
and
adc
cli
andl
nop
xchg
sub
hlt
or
stc
xchg
cmp
sti
sbb
pause
push
mov
shll
or
sub
jb
int
loopne
lahf
testb
xchg
repz
push
or
jecxz
sbb
rcrb
mov
cmpsb
std
and
jle
les
popa
sarl
cli
inc
dec
ss
jl
xchg
jge
pop
insl
loop
push
call
or
adc
leave
mov
dec
scas
es
insb
mov
stc
and
sub
dec
dec
inc
hlt
int3
lds
dec
push
fdivl
mov
test
dec
in
aas
adc
push
sarl
and
dec
bound
xchg
push
mov
cs
sbb
xchg
lret
xchg
mov
inc
stos
cmp
push
stos
xchg
push
cmp
gs
sub
scas
out
loope
mov
add
inc
fisubs
and
mov
stc
lret
mov
xor
fcmovnb
cltd
loopne
xor
stos
mov
jmp
cmp
pop
aas
or
repz
adc
dec
fadds
cltd
test
sub
jl
out
sbb
fdivrs
rolb
or
popl
popl
mov
aad
fiadds
add
mov
test
xor
adc
push
cmpsl
mov
xor
pop
inc
sbb
ret
adc
sbb
mov
sbb
mov
les
inc
fidivl
daa
adc
cs
cmpsb
fiadds
xchg
add
stos
adc
mov
arpl
aas
out
stc
cmp
pusha
push
std
mov
call
mov
fisubl
xchg
mov
arpl
das
scas
mov
stos
in
std
mov
and
movsb
mov
push
adc
mulb
push
stc
inc
dec
inc
lds
outsb
vcmpss
and
mov
arpl
xor
mov
push
popa
push
jne
scas
out
in
in
test
or
add
insb
arpl
pop
add
sub
mov
jbe
into
in
pop
xlat
outsb
dec
mov
out
sub
aas
mov
sti
or
jmp
enter
insb
jl
add
ret
mov
popa
mov
fdivl
mov
cld
xchg
and
js
mov
lahf
mov
pop
mov
or
lods
fisttpl
sbb
mov
cltd
stc
mov
scas
push
out
lods
sti
and
lcall
jl
cmc
pop
int
sbb
mov
sbb
lea
js
scas
out
cmpsb
and
add
aaa
and
cmpsb
sub
roll
mov
dec
pop
stc
out
push
xchg
not
js
inc
xchg
inc
ffree
into
jl
xlat
insb
adc
dec
or
xchg
mov
dec
lea
dec
mov
rclb
lret
mov
xchg
cli
cltd
xor
xor
repz
cld
adc
fidivrs
sub
pop
and
lods
jae
rcl
xchg
dec
push
out
rolb
pop
and
fcmove
xor
jmp
and
pop
jnp
nop
mov
int3
cmp
ljmp
call
inc
adc
dec
mov
dec
sti
jbe
std
mov
mov
leave
fldt
pop
scas
xchg
lods
xor
int
je
repz
sub
fmuls
out
scas
sbb
movsb
lods
cld
cmp
pop
pop
subb
inc
or
sbbl
popf
cmp
dec
mov
ret
icebp
inc
into
bound
movsl
push
jl
ret
sub
or
and
inc
adc
lds
mov
inc
hlt
mov
loopne
ret
lahf
inc
jecxz
nop
dec
xor
out
and
sti
jp
pop
bound
xchg
in
or
xchg
cmp
sub
push
mov
fdivrs
ret
pop
mov
jnp
outsb
loope
movsl
add
mov
and
addr16
js
cld
cmpsl
add
sub
scas
or
jp
jnp
mov
mov
pmulhw
out
xor
test
mov
xor
mov
pushl
fisttpl
testl
cmp
adc
adc
add
sub
out
cmp
incb
dec
inc
jbe
adc
dec
stos
aas
push
sub
sti
andl
pop
inc
mov
xorl
mov
lcall
pop
addr16
andb
pop
cs
call
shll
dec
out
arpl
popf
pop
jge,pt
rorb
ficomps
sub
push
fists
jbe
push
xor
fnstenv
clc
sbb
cmp
imul
add
popa
jmp
or
sub
xchg
sub
mov
jl
imul
test
fidivl
cmpsb
xor
fadds
lahf
arpl
ljmp
lods
and
ss
xor
or
and
bound
inc
xlat
lock
movsl
in
in
cmc
push
aaa
stos
cmp
out
add
xchg
mov
mov
cmpl
outsb
mov
in
clc
add
sub
mov
cli
pop
sub
jle
pop
xor
push
outsl
aaa
loopne
push
fucomi
repz
cmpsl
enter
pop
cmpsb
inc
mov
cmp
jbe
add
mov
cmp
mov
lret
adc
mov
test
jmp
dec
sub
fcmovnu
cmp
movsb
adcl
test
lods
inc
daa
xor
lods
cmp
lods
or
xor
push
sbb
push
insb
out
and
jo
add
mov
shlb
clc
xor
arpl
test
jle
out
mov
push
add
dec
mov
dec
sub
mov
out
jg
mov
push
std
xchg
xchg
add
inc
outsb
cmpsb
les
cwtl
xchg
arpl
lea
pop
cmc
pop
std
adc
push
xchg
popl
pop
jno
sbb
cmpsl
lods
mov
arpl
cwtl
add
nop
sub
orb
mov
pop
mov
fists
fucom
dec
outsl
mov
mov
fs
mov
push
pop
sbb
xlat
sbb
std
jge
test
lds
ficomps
out
or
pop
scas
push
lea
loope
pusha
subb
mov
or
jb
jecxz
out
sub
add
lods
cmp
xchg
sub
pop
xchg
sbb
into
clc
or
push
inc
fmull
pop
push
fidivs
arpl
aaa
incb
jb
inc
xor
fiaddl
movsb
out
shll
jae
mov
adc
test
cmovl
jle
jecxz
rcll
popa
sub
mov
adc
dec
mov
mov
xchg
pop
cmp
fldl
out
push
sbb
xlat
outsb
jg
mov
bound
jmp
jmp
inc
inc
push
clc
sbb
dec
roll
imul
dec
ds
shlb
test
dec
jns
jne
sbb
dec
mov
jp
sbb
push
sub
xchg
sbb
xlat
rclb
add
fcmove
pop
dec
outsl
jb
or
mov
sbb
in
jne
loop
pushf
push
inc
test
xlat
adc
push
or
mov
rorl
sbb
imul
inc
push
arpl
xor
cmp
xor
dec
aas
and
mov
icebp
incl
add
movsb
sbb
push
inc
out
push
dec
incl
and
or
add
gs
fldt
ja
cwtl
xchg
dec
xor
xlat
mov
mov
cmp
rcrl
test
bound
mov
in
movsb
adcl
lahf
mov
dec
push
mov
in
push
or
pop
mov
push
lret
mov
jno
outsb
sub
movsl
js
pop
shl
cmp
jecxz
xchg
in
xor
repnz
pop
or
inc
lods
int3
and
cmp
insb
mov
movsb
popa
enter
jmp
dec
push
ljmp
inc
push
adc
insb
xchg
sub
pop
cmpsb
fbld
ficoml
push
mov
xchg
subb
movsb
movsl
add
sub
inc
adcl
sub
xchg
sbb
xor
fwait
cmpsl
or
mov
imul
test
pop
xor
cmpsb
es
fiadds
nop
adc
ret
xor
xchg
sub
sbb
xor
int3
mov
incb
movsb
stc
leave
mov
sti
push
pop
out
xchg
shrl
mov
xor
imul
adc
insb
nop
jno
ret
jg
push
inc
dec
push
cmp
shl
jnp
sub
mov
push
inc
inc
jle
mov
shlb
sti
gs
push
adc
int3
les
call
shr
lods
jmp
or
sahf
mov
call
lea
cltd
mov
mov
fwait
std
lods
fmull
lods
mov
rcll
mov
int
add
fcompl
inc
test
movl
dec
in
push
and
arpl
out
xchg
add
test
xchg
sub
cmpsb
fbld
xchg
aad
mov
les
fsubs
je
subb
mov
cmpsl
stos
jp
ffree
out
hlt
lds
lock
pop
dec
clc
and
or
ret
dec
cltd
dec
mov
push
push
ljmp
ljmp
cmp
aad
push
daa
ljmp
pop
movsb
imul
adc
mov
ffreep
and
insb
mov
fisubl
sahf
faddl
cli
loopne
loopne
loopne
imul
dec
mov
into
aaa
adc
mov
add
mov
ret
sbb
aam
loopne
das
jnp
test
mov
sti
nop
sbb
push
dec
mov
xchg
mov
roll
jecxz
dec
cwtl
sub
inc
sbb
enter
push
jnp
sbb
lds
out
jne
dec
decl
push
shll
out
or
movsl
pop
rorb
in
inc
out
inc
fucomi
loop
test
mov
cwtl
mov
adc
shr
dec
mov
sub
add
mov
inc
ret
pop
movsl
inc
ficoml
and
xchg
sub
test
adc
xlat
mov
mov
mov
push
cli
pop
clc
sbb
addr16
pop
scas
fs
jb
pop
dec
jne
repz
jne
inc
lods
and
sub
jge
add
inc
popf
push
jp
jo
inc
mov
cmpsl
mov
movl
dec
out
pop
push
lods
jnp
add
sub
pop
and
xchg
icebp
push
or
gs
and
push
addr16
sub
scas
lea
or
out
mov
mov
mov
dec
mov
jecxz
jb
sub
ja
fstpl
pop
stos
dec
fsubr
rcll
or
push
sub
dec
xchg
dec
dec
xchg
add
lret
mov
mov
call
or
aam
push
outsl
movsl
adc
sbb
sbb
push
jl
pop
rorl
mov
int
insl
push
fsubs
xorl
mov
cs
jno
xchg
xor
cmp
jecxz
jns
push
or
fadd
inc
pop
cmpsb
push
jg
stos
hlt
or
roll
mov
movsb
and
outsl
jno
cld
outsb
add
push
in
jge
dec
mov
fbld
cwtl
lahf
sbb
sarl
dec
pushf
add
jecxz
inc
aas
fildll
mov
mov
mov
or
dec
add
inc
push
fcomi
dec
push
roll
mov
or
js
inc
sub
xchg
push
ret
pop
xor
subl
in
rolb
or
lock
adc
push
subl
loop
xor
push
data16
pusha
lcall
and
paddb
inc
std
popf
cmpsl
adc
push
movsl
fidivs
clc
pop
cli
or
ret
imul
xor
test
inc
inc
sbb
into
xchg
mov
ficompl
jle
decl
mov
int
xor
aad
movl
sbb
sub
pop
push
enter
shlb
notl
cltd
std
sbb
sbb
mov
fsubs
adc
lea
mov
adc
inc
cmp
lcall
stc
cmp
lret
pop
movsb
cmp
pop
push
xchg
incb
nop
xchg
sub
and
mov
roll
pop
inc
mov
or
adc
dec
inc
xchg
call
sub
ljmp
je
inc
push
sbb
sahf
js
arpl
pop
test
push
pop
lret
test
xchg
dec
fisttps
aam
push
movsb
data16
aad
pop
add
test
push
sbb
mov
cmp
je
aas
adc
xchg
popf
stc
aaa
dec
dec
cli
daa
je
pop
sbb
sbb
stos
movsl
icebp
movsl
std
enter
xchg
sub
out
xor
std
jno
sbb
xor
std
fwait
inc
and
pushf
jo
inc
lret
and
in
movsb
shll
or
call
or
mov
push
aam
call
arpl
idiv
sbb
lods
cmp
insl
imul
rorl
ret
adc
lods
sbb
push
jo
les
fnstenv
add
pop
pop
stos
push
inc
cmc
stc
and
sub
sbb
cmp
ret
mov
jmp
dec
fistps
adc
add
xor
mov
jno
inc
iret
pop
adcb
mov
out
or
lods
mov
fildll
lods
push
mov
sub
pop
mov
out
cmp
inc
fdivs
fidivs
inc
mov
push
fstps
outsl
sub
pop
mov
inc
fidivrl
pop
bound
cmp
hlt
push
mov
loopne
jge
dec
test
cmp
sahf
lret
sub
gs
mov
fldl
pusha
and
and
jge
push
mov
lahf
enter
jae
mov
pop
pop
jmp
fldcw
fistps
jg
js
ss
in
add
pop
adc
and
loope
les
sbb
fcmovne
pop
dec
mov
push
xchg
mov
sbb
gs
sti
or
cmp
mov
out
inc
jb
inc
sahf
dec
xchg
into
xor
inc
loopne
sbbl
xor
sbb
sub
pop
inc
icebp
or
xor
pop
out
movsl
in
xlat
psrld
mov
cli
shrl
stos
test
lret
int3
and
jp
sub
ret
cmp
sahf
dec
add
andl
gs
or
push
call
hlt
aam
pop
and
push
rorl
mov
xorb
lcall
neg
inc
or
int3
loopne
hlt
push
mov
pop
into
mov
add
jecxz,pt
add
clc
adc
nop
lret
and
divb
xchg
mov
repz
sub
jge
inc
lea
push
sub
dec
ffreep
js
jecxz
adcb
or
jle
cltd
pop
fbld
hlt
mov
add
push
inc
pop
sbbl
pminub
jl
aas
les
in
jle
loope
ret
add
inc
push
sub
fmulp
pop
mov
lcall
lods
sbbb
sbb
lret
and
into
xchg
dec
mov
test
dec
sub
icebp
dec
addr16
xchg
mov
insl
sub
insb
xor
sbb
in
and
incb
out
imul
dec
xlat
add
in
fwait
or
push
aam
ljmp
xlat
push
cwtl
adc
or
adc
push
test
ret
mov
jne
or
xor
pop
insl
xor
in
pop
stc
sbb
lret
hlt
mov
loopne
jmp
inc
adc
insb
mov
loopne
jl
repz
mov
inc
adc
push
pop
loope
rcll
int3
cmpsb
fdivs
jo
je
adc
ds
gs
fcoml
pushf
adc
arpl
repnz
out
xor
insl
repnz
int3
pop
and
les
fmuls
andb
ja
cltd
mov
add
test
insl
sub
stos
add
add
das
cmpsl
pop
in
subl
add
cmp
in
inc
pop
out
rol
enter
dec
pop
sarb
lds
push
jne
test
mov
enter
lcall
and
shrl
inc
inc
pop
lahf
inc
outsl
inc
pop
lods
xor
mov
cmc
add
mov
push
loopne
jne
lahf
and
jp
daa
mov
lds
and
push
fisubrs
test
iret
insb
ja
sahf
lock
out
scas
sub
and
cld
gs
fnstsw
xchg
sub
clc
dec
lock
das
and
or
inc
jns
jl
dec
sub
je
dec
inc
lods
push
add
mov
jp
pop
cmp
adc
dec
iret
out
mov
incb
sub
sahf
push
sbbb
add
cmp
call
xchg
mov
push
sbb
mov
dec
xor
pop
pop
xchg
cld
lcall
push
icebp
xchg
add
ss
out
sbb
insl
mov
push
mov
fdivs
push
data16
les
out
cld
cmpsl
in
add
jno
jnp
pop
xchg
lret
cmpsl
fidivrl
push
fidivl
and
out
mov
add
insl
adc
adc
insl
pop
cmp
sub
repz
mov
adc
ss
popa
insl
or
leave
mov
cmp
push
xor
add
mov
sub
mov
xchg
popf
sbb
add
gs
cmpsl
jnp
inc
dec
gs
call
dec
dec
pop
mov
hlt
aad
add
jnp
lret
and
lcall
es
out
mov
negb
or
dec
mov
enter
and
mov
cs
sbb
jge
test
jecxz
lret
sbb
pop
insb
pop
cmp
scas
in
sbb
mov
push
add
mov
jnp
push
dec
push
out
inc
xor
das
in
shr
or
sub
rorl
in
sbb
or
jmp
ja
repz
test
std
inc
stc
and
fwait
jnp
stc
adc
jo
push
sub
cmp
push
fisubrl
mov
rolb
out
bound
adc
lahf
or
pop
aaa
lds
add
add
sti
adc
pop
ja
shl
jne
in
add
push
pop
lea
jae
jns
stos
xor
mov
ret
daa
inc
pop
cld
sub
jge,pn
cli
repz
notl
aas
xchg
sbb
ret
push
ds
push
clc
pop
inc
xchg
hlt
popa
iret
in
xchg
popa
lcall
xor
sub
ja
repz
data16
push
in
mov
push
sarl
add
pop
repnz
lea
cli
scas
sub
cmp
in
push
jno
fidivl
push
mov
and
ret
inc
xchg
in
mov
stc
pop
mov
mov
es
or
lock
lods
and
pushf
sub
nop
js
movsl
aad
sbb
std
jns
jnp
push
pushf
dec
cmp
pop
or
sub
pop
aam
arpl
shlb
cltd
xor
cmpsl
js
aas
mov
out
das
adc
mov
aad
ja
add
add
scas
mov
mov
nop
pop
repnz
jo
test
pop
hlt
fs
lret
cmpsl
ret
out
mov
aaa
jno
lods
loope
mov
jecxz
xor
fs
sbb
xchg
les
fwait
cmpsb
jge
nop
mov
ret
pop
add
mov
mov
hlt
dec
adcl
insl
sub
jmp
lods
sbb
stos
inc
push
push
inc
pop
xchg
dec
inc
in
mov
iret
and
pop
adc
lea
loop
rep
push
fadd
inc
inc
js
xchg
pusha
test
shl
dec
xor
addb
cmpsb
sub
push
jb
adc
pop
jmp
outsb
mov
loopne
cmpsl
int
jge
mov
or
lods
add
imul
push
fisttpll
cld
cmp
xchg
pop
sahf
and
mov
cltd
or
aam
push
adc
nop
cli
mov
pop
sub
push
inc
movsb
addr16
sbb
cmp
push
push
xchg
pop
mov
xchg
shrl
pop
inc
adc
cmpsl
in
pop
add
pusha
mov
ror
repz
push
push
fcmovb
in
xchg
mov
ljmp
adc
lods
mov
cmp
aam
add
ds
or
repnz
pop
fwait
aas
pushf
loop
test
mov
push
insl
loopne
mov
dec
or
jge
xchg
aam
mov
fldt
inc
popa
or
fidivrl
push
sub
das
sub
jp
add
xor
push
cwtl
ljmp
call
clc
pusha
mov
stos
adc
insl
aad
xchg
les
out
stos
add
jb
push
mov
mov
push
and
ss
lods
inc
std
pop
inc
arpl
jmp
mov
insb
add
movsb
test
ljmp
push
stos
cmpsl
shl
xchg
jne
test
jnp
sub
fstpl
cld
insl
stc
push
ret
inc
test
scas
imul
xchg
sbb
or
gs
in
xor
mov
std
in
pop
int
cmp
inc
fwait
push
inc
arpl
mov
and
and
inc
push
jae
notb
bound
xchg
mov
fldenv
cwtl
cmpsl
and
cli
push
pop
cld
jne
jmp
andl
lds
dec
outsl
push
pop
imull
cmp
cmp
mov
mov
lock
icebp
push
rcrb
or
jmp
aaa
mov
rorb
movsl
and
cmpsb
scas
dec
dec
cmpl
daa
mov
sub
push
repnz
negb
inc
rcl
loope
inc
scas
int
push
xor
xchg
jne
mov
or
sub
xchg
cmp
xor
pop
pop
out
inc
leave
call
cmp
testl
je
mov
setle
or
aaa
outsb
mulb
fs
out
notb
shll
push
adc
mov
jb
adc
mov
push
pusha
add
xchg
mov
jmp
jae
icebp
xchg
add
add
xchg
xor
mov
fdivl
xchg
fwait
and
cmc
nop
cmc
scas
setnp
xor
movsb
xchg
lret
sub
jnp
enter
stos
and
add
test
sbb
test
push
mov
sahf
mov
icebp
and
out
cmp
sbb
out
hlt
pop
and
and
mov
ror
jb
cld
mov
sbb
popf
inc
sar
pop
fucompp
lods
add
cmc
cmc
sub
sub
mov
adc
cltd
mull
incl
out
das
mov
mov
inc
imul
mov
pop
xchg
inc
daa
mov
imull
movsb
sti
push
and
push
mov
nopl
mov
rorb
sbb
push
adc
sub
push
stos
pop
loopne
decl
fdivl
in
rclb
cmp
enter
xlat
and
mov
mov
cltd
or
sub
arpl
rclb
xor
add
iret
cmp
pop
lea
xor
and
mov
fmuls
push
mov
notl
pop
sahf
push
adc
jecxz
xchg
push
aam
les
lea
stos
and
ffree
xor
push
or
add
cmp
dec
mov
mov
fwait
xchg
xor
ret
adc
jge
push
or
inc
cmpsl
lret
push
mov
jp
add
xor
lods
fsubrl
sub
jb
insl
dec
pusha
xchg
mov
cmp
mov
and
mov
jle
mov
sbb
repz
movsl
not
outsl
sub
fdivl
pop
push
lahf
dec
xlat
sbb
pop
decb
mov
cld
dec
adc
add
push
es
pop
fcmovu
jns
repz
push
inc
faddp
in
fwait
les
ret
fnstsw
out
xchg
sub
xor
or
mov
ljmp
jmp
mov
jno
sbb
imul
mov
loop
push
jo
repnz
cltd
rcll
js
xchg
jmp
cmpsl
inc
dec
in
pop
mov
fdivs
arpl
stc
sub
sbb
out
xchg
and
out
popa
mov
cmp
cltd
stos
je
idivb
push
jb
imul
xrelease
dec
setg
mov
xor
out
in
daa
inc
sti
jbe
lret
outsb
adc
in
test
xchg
in
mov
push
add
daa
add
or
dec
ss
and
lcall
cld
in
lret
push
test
dec
loope
imul
imul
ret
aam
jmp
in
xorb
fistl
or
push
and
sub
sbb
mov
xchg
inc
aad
in
lds
std
int3
sbb
sub
cmpsl
pop
push
push
imul
stos
js
test
aam
rorl
jo
push
add
cmp
lods
movsb
clc
jbe
inc
aad
mov
out
scas
int3
cmp
jne
mov
mul
fsubrs
cld
inc
mov
and
orl
sbb
mov
ss
xlat
je
adc
xchg
mov
enter
sbb
dec
inc
sahf
add
mov
adc
aam
or
add
push
ss
xchg
xchg
lcall
scas
add
pop
jns
imulb
sar
sub
jl
sti
pop
xor
mov
inc
cltd
pop
lcall
mov
pop
out
popf
sbb
lret
enter
das
jbe
test
sbb
add
and
fmuls
scas
pop
jmp
dec
int
movsb
cmpsb
dec
lea
adc
xchg
cld
loopne
dec
cmp
pop
dec
loopne
std
and
inc
and
movsl
inc
pop
loopne
mov
hlt
dec
sti
mov
js
adc
pusha
push
mov
pusha
cmpsb
std
pop
popa
jmp
cmp
leave
rorl
add
popf
mov
cmpsb
ret
mov
repz
dec
mov
adc
dec
loop
rol
pop
cmpsb
push
mov
dec
push
cs
je
sahf
xchg
mov
test
xchg
enter
shrl
sub
inc
mov
in
fsubrs
xor
mov
inc
pop
sub
clc
push
repz
shll
cmp
out
or
roll
mov
aam
dec
xchg
decb
xchg
in
lds
mov
insl
rcll
test
push
mov
dec
lds
icebp
xchg
mov
add
adc
mov
inc
xor
jge
push
lret
pop
adc
lret
push
xor
orb
sub
cmpsl
pop
scas
pop
cwtl
jno
dec
sahf
adc
xchg
sti
outsb
iret
in
pusha
fildl
shll
mov
or
inc
in
aad
stc
test
xlat
das
in
mov
sub
pop
fcomi
mov
insb
test
orb
adc
stos
movsb
inc
shll
ljmp
or
mov
adc
dec
scas
cmp
nop
xor
and
adc
shrw
sbbl
leave
adc
jae
shll
mov
mov
push
cmp
inc
xor
enter
jne
jno
or
movsl
mov
lds
sahf
dec
hlt
push
add
or
sub
mov
adc
adc
push
cmc
leave
cld
dec
call
scas
lds
push
mov
fisubrs
sub
decb
push
xchg
mov
jl
aas
loopne
jne
mov
les
cltd
repz
in
jecxz
pop
movsb
inc
jg
sbb
mov
xor
cmp
shrl
sti
and
and
cmp
ja
push
xor
aas
imul
mov
in
pop
pop
sahf
mov
mov
andnps
mov
add
pusha
sbb
movsb
in
push
popf
pop
cmp
xor
lds
adc
iret
sbb
jnp
cmp
inc
push
xchg
fisubs
rorb
xor
test
arpl
xor
add
sub
or
cmc
clc
addl
cmpps
pop
insb
xor
ret
cmp
mov
adc
je
out
das
call
in
jb
mov
mov
mov
adc
pop
jo
into
mov
jecxz
push
jno
mov
xor
subl
inc
and
xchg
call
mov
xchg
mov
xor
xchg
sbb
add
imul
vsqrtps
mov
xchg
xor
pop
dec
sarl
add
je
lahf
stos
push
cltd
jne
or
push
in
jl
adc
mov
fdivs
pushf
mov
dec
imul
fstl
sub
jmp
lds
mov
repz
adc
mov
clc
in
movsb
mov
push
pop
push
push
into
daa
adcl
enter
and
inc
int
add
push
in
sar
mov
sar
xchg
dec
cmp
xor
insl
and
push
je
ja
sub
mov
add
sbb
cmp
js
dec
mov
xchg
popf
hlt
enter
inc
lods
pop
js
xchg
ss
sub
mov
dec
dec
cmp
xchg
stos
lock
mov
xor
sub
pop
mov
popa
sub
push
pusha
or
ljmp
xchg
push
add
xor
mov
lea
sbb
ss
cmp
cmpsb
jge
push
int
mov
add
imul
and
pop
imull
cmpl
imul
ljmp
xor
xchg
test
out
xchg
bound
js
decl
xor
jns
mov
lcall
pop
jo
or
xchg
loop
pop
sarb
xlat
call
dec
cmp
pushf
clc
nop
xchg
lret
leave
arpl
shrb
dec
or
mov
dec
dec
push
lods
orl
enter
or
jnp
js
sbbb
jmp
aas
or
addr16
ja
cmp
lahf
add
mov
mov
dec
loope
pushf
adc
and
mov
push
leave
add
cmp
mov
iret
push
mov
aas
and
xor
fdivrl
ret
or
mov
fcoms
inc
dec
inc
push
es
fimuls
inc
xlat
pusha
sub
dec
stos
lods
movsb
pop
imul
add
sbb
aam
mov
cs
jb
dec
push
call
pop
shrl
test
push
enter
lods
cs
pop
lret
out
cs
pop
mov
rcll
out
std
mov
sti
andb
mov
jecxz
dec
mov
int
or
pop
pop
out
inc
test
mov
sbb
push
in
push
imul
lods
aaa
adc
shl
repnz
xchg
and
xchg
push
ja
out
and
xor
rcll
jecxz
ret
fbld
iret
data16
sub
insl
add
iret
mov
pop
or
cld
lcall
xor
cmp
loop
and
std
jge
jg
xchg
sub
enter
fwait
insb
jno
sahf
add
popa
clc
rorb
xor
test
hlt
ret
call
adc
ss
xor
inc
xchg
or
adc
dec
inc
or
cmc
scas
pop
jle
nop
and
mov
cmp
push
lock
addr16
push
ret
jae
lret
out
dec
jecxz
mov
shrl
push
mov
mov
pop
xor
mov
sarl
mov
rcrl
mov
out
gs
outsl
testb
cli
mov
mov
lock
push
pusha
adc
mov
js
xchg
outsl
jge
mov
ret
stos
dec
stos
nop
jns
mov
push
cltd
dec
push
decb
test
cmp
xchg
dec
cmp
scas
fnsave
aaa
mov
push
inc
push
fs
sbb
push
or
lods
aad
or
mov
jg
es
ds
shr
cltd
sbb
inc
stos
mov
das
in
scas
dec
pop
call
sarb
jno
cwtl
out
push
push
dec
dec
outsl
mov
cmp
jae
hlt
lea
adc
jge
fdivs
cmp
xchg
push
jbe
jae
xchg
pop
aas
stos
inc
outsl
bound
inc
cltd
sar
dec
xor
ss
dec
inc
or
mov
in
push
sbb
and
lods
lds
mov
stos
dec
xchg
test
mov
jnp
adc
adc
mov
add
adc
or
gs
cs
mov
or
jmp
int3
inc
cmp
pusha
sub
dec
sub
dec
push
mov
imul
mov
lcall
stos
ret
fwait
xorb
dec
sbb
js
aaa
mov
iret
lea
mov
jmp
out
pop
ljmp
jno
lahf
push
fwait
xor
movsl
mov
pop
ret
xchg
ljmp
popf
filds
bnd
add
lods
and
fimull
bound
push
adc
inc
inc
adc
xlat
sub
push
or
and
jecxz
cs
divb
int
xchg
cmpl
mov
lea
int3
insl
loopne
into
out
jne
test
mov
stc
inc
leave
in
mov
test
je
sub
mov
jb
and
sbb
into
cmp
adc
inc
stos
outsl
cwtl
das
jp
mov
jmp
mov
xor
ret
pop
push
sub
fnstenv
pop
addr16
rolb
xchg
stos
add
inc
cmpsl
mov
aaa
sub
cld
jg
fbstp
xchg
loop
stos
sahf
mov
xchg
jne
mov
dec
int
ljmp
jno
fcmovu
repnz
push
jb
or
mov
push
je
data16
cltd
jp
pop
lock
and
jbe
in
sub
cltd
xor
inc
or
iret
jbe
arpl
sbb
jno
ds
in
inc
adc
sbb
ret
xlat
inc
dec
mov
sbb
jp
stc
pop
lds
mov
cmpsl
data16
int
pop
jmp
adc
sar
jmp
aaa
dec
push
jb
fs
mov
dec
loop
mov
push
fcomi
pop
es
cmp
dec
and
jbe
int
mov
sbb
push
dec
sub
shlb
jge
daa
xchg
ret
cmp
pop
pusha
mov
mov
jo
push
push
xchg
push
jmp
jnp
or
jl
pop
xchg
add
mov
test
dec
push
popa
aam
cmp
xor
cmp
lret
mov
loopne
ss
add
and
push
loop
aad
cld
push
addl
ljmp
xchg
sub
je
flds
sub
mov
leave
fs
sub
fsub
jp
aaa
lods
mov
enter
lahf
aad
xchg
imul
aas
jp
adc
iret
cmpsb
jge
mov
pusha
and
fldt
adc
pop
out
inc
jnp
mov
sbbb
daa
pop
inc
movsb
test
and
dec
lea
je
cmpsl
loop
stos
xor
mov
sti
mov
push
xor
add
adc
insb
mov
sbb
imul
mov
xor
out
pop
add
hlt
sbb
add
add
mov
enter
ffree
mov
test
sub
adc
push
and
leave
cwtl
jge
call
subl
pop
pop
cmp
call
pop
push
pop
sub
scas
xchg
sub
or
insb
push
loopnew
inc
dec
jne
movsb
and
dec
fwait
inc
sub
xchg
push
gs
mov
mov
out
rolb
cmp
aam
rclb
sub
cmp
out
dec
cmc
and
inc
cmp
xor
lock
rorl
push
cltd
inc
and
xor
pop
bound
adc
fidivs
call
and
out
jp
push
mov
in
outsb
add
mov
je
sbb
sahf
sub
mov
sub
leave
cs
in
in
pop
push
cmp
lods
mov
stos
inc
add
adc
jae
jge
sbb
or
lret
inc
sub
mov
adc
cmp
cld
popa
clc
and
xchg
jg
dec
push
xchg
insl
add
xchg
cs
loope
adc
shrl
roll
cwtl
aaa
mov
mov
fstps
mov
int
enter
push
push
in
cmp
xorl
nop
add
stos
pop
ficompl
mov
js
inc
fiaddl
cmpsl
pop
cmc
iret
add
shl
adc
addr16
leave
xchg
lcall
adc
roll
mov
ret
int
push
movsl
push
cli
inc
ret
scas
ficoms
das
mov
jb
rcl
xlat
cmpsb
cmp
cltd
jno
mov
push
and
out
sub
repnz
mov
mov
aaa
pop
outsl
in
push
mov
sarl
mov
adc
fstpl
xor
xor
outsl
cmpl
in
sub
or
mov
cmp
mov
pop
jecxz
rep
add
sub
sub
push
lods
sub
icebp
dec
pop
and
pop
mov
jbe
std
or
or
sub
imulb
aaa
jl
add
push
mov
add
and
push
jns
push
ja
test
cmp
pop
push
cmp
sub
mov
testl
jecxz
jmp
or
cmp
dec
cmp
aas
lock
sub
and
mov
xchg
pop
cmp
ds
adc
sbb
add
pop
sub
enter
test
jbe
pushf
push
movsl
mov
leave
in
fisubs
in
mov
rcrl
mov
push
pop
and
push
push
sub
xor
xor
dec
lahf
inc
popf
inc
test
inc
fwait
es
sub
dec
mov
xor
xlat
sbb
xchg
scas
lret
loopne
lahf
push
inc
cli
mov
popf
sbb
jge
inc
insb
xchg
sbb
push
pop
in
pop
xchg
sub
jle
inc
mov
jmp
mov
pop
fcos
adc
mov
pop
out
jl
mov
popf
jbe
cmpsb
or
push
cmp
dec
dec
cmc
outsl
sbb
sahf
aas
aad
movsl
xor
cmp
outsb
pop
jae
xchg
ret
imul
mov
sbb
adc
sbb
adc
insb
pop
mov
jbe
insb
rolb
mov
fldcw
sbb
movsb
or
ljmp
fildll
mov
jp
mov
sbb
js
sub
pushf
shr
les
lods
inc
push
in
xchg
aam
fwait
test
jae
pop
mov
pop
pop
outsb
inc
mov
shrl
cmp
push
shlb
and
ss
xor
popa
loop
test
jno
mov
popa
test
mov
mov
inc
lods
mov
and
xorl
iret
fiaddl
dec
pop
add
mov
mov
cmpl
in
fbld
aas
loop
mov
mov
scas
xchg
pop
mov
test
sub
adcl
jge
jecxz
mov
cltd
int
mov
dec
and
sti
mov
mov
and
jle
test
add
inc
mov
xchg
add
xor
aad
xchg
cli
in
inc
outsl
fucomi
adcl
xor
lahf
mov
test
popf
aad
rorb
stos
scas
xchg
sbb
fs
dec
mov
mov
ret
ds
mov
fsubrl
push
sbb
scas
jge
lret
adcl
outsl
in
lahf
dec
aad
ljmp
inc
arpl
cmp
pop
unpckhps
outsb
inc
cs
inc
cmp
pusha
mov
ss
lods
pop
xchg
cmp
sbbl
loope
ja
das
mov
and
mov
add
ds
aad
pop
mov
jg
jne
ss
jno
jno
popf
push
stos
and
jbe
mov
ds
test
pop
sbb
call
dec
add
sahf
xor
jecxz
push
cmc
xor
sub
cs
sub
nop
stos
mov
cmp
aad
out
jnp
cmc
mov
sbb
out
test
dec
xor
insb
dec
and
sbb
test
frstor
scas
lcall
das
out
mov
leave
pusha
push
lea
fsts
test
mov
xor
or
loope
lock
add
mov
sbb
adc
or
stc
mov
pop
pop
adcb
scas
sahf
es
and
jmp
lahf
or
mov
jb
sahf
add
add
sub
shl
ljmp
pop
sub
or
push
cmp
pushaw
sbb
cltd
adc
lret
es
sub
popf
adc
xor
xor
cmpsb
inc
fisttps
inc
pop
inc
mov
sub
mov
mov
in
and
push
xor
aas
adc
mov
jb
or
bound
addr16
add
inc
fnstenv
das
pop
adc
fbld
loopne
jg
ljmp
mov
test
scas
adc
jg
mov
dec
and
and
imulb
icebp
movsb
movsb
mov
loop
xor
lods
aas
push
sarb
fiaddl
aaa
fwait
sub
imul
pop
mov
and
mov
test
fsubrl
mov
mov
loop
dec
mov
cmp
cmp
mov
cmpsb
push
dec
xchg
or
cld
scas
xchg
in
cli
push
test
mov
nop
lock
pop
lcall
xor
mov
dec
adc
jbe
mov
ds
mov
popl
js
dec
icebp
jmp
pop
dec
sahf
lea
enter
daa
ret
dec
not
and
adcb
outsl
icebp
repz
push
arpl
pushf
sti
mov
or
fidivrs
jg
and
adc
cmp
aam
mov
mov
mov
sbb
lret
jae
mov
mov
jle
sub
test
fs
pop
and
test
sub
nop
pop
in
or
xchg
xchg
sti
mov
aad
pop
out
test
outsb
sbb
inc
cltd
ja
cmpsl
sub
or
icebp
mov
inc
int3
outsl
mov
pop
lret
in
std
jp
xchg
out
adc
adc
ss
sahf
mov
out
mov
lods
stos
adc
dec
mov
test
filds
rclb
and
pop
sahf
imul
sahf
xorb
push
inc
rolb
fidivs
fimuls
mov
push
stos
les
dec
ljmp
test
inc
ljmp
xlat
and
sbb
push
shlb
xchg
jmp
out
inc
and
movsb
sbbb
fdiv
push
add
xchg
add
and
dec
repnz
push
sti
fimull
xor
mov
sub
imul
fisttpll
ljmp
and
xchg
add
mov
lods
icebp
add
push
in
popf
test
jbe
adc
std
cs
pop
mov
pop
mov
pop
jl
jg
mov
fsub
into
aas
or
sti
xchg
fldcw
les
mov
xchg
and
xchg
xchg
cltd
xchg
je
rol
pop
ss
in
cmp
fucomip
aam
adc
popf
xor
push
imul
pop
ficoml
xchg
inc
clc
mov
jae
add
sub
inc
mov
outsb
or
loope
paddb
std
sbb
sbb
mov
mov
cmp
pop
pop
adc
inc
inc
lcall
out
imul
dec
cmp
inc
jp
push
push
test
xchg
mov
xor
in
xor
addr16
out
push
out
inc
cli
xchg
jns
lea
fwait
sbb
es
inc
pop
xchg
dec
gs
rcrl
jmp
fstpl
adc
dec
dec
js
sbbb
push
mov
insl
pop
sub
shrb
stc
mov
cmp
pop
cmc
rorl
push
add
inc
push
inc
xchg
lods
jb
fldl
stos
pop
out
dec
std
shll
cmp
scas
jmp
mov
loopne
loop
cld
xor
jnp
or
inc
in
mov
and
jle
xor
test
fnsave
bound
test
jmp
je
mov
sub
ss
adc
das
imul
mov
data16
jnp
and
lods
mov
sub
push
idivb
sub
add
cmp
jecxz
mov
cmc
mulb
ljmp
pushf
mov
fnstsw
cli
mov
mov
and
pop
mov
scas
pop
sub
pushf
and
pop
jb
mov
sub
xor
dec
rcr
sbb
mov
push
js
lea
cltd
xchg
mov
dec
jle
lods
mov
jae
pop
mov
xchg
addr16
andb
test
push
out
push
je
lret
mov
xor
push
test
push
mov
popf
stc
jp
adcl
jg
fimuls
test
bound
incl
jmp
out
cmpsb
xchg
jp
repnz
lret
mov
rcll
mov
dec
mov
movb
clc
data16
mov
outsb
jp
ja
je
sub
mov
clc
jbe
clc
out
data16
adc
pop
xchg
xor
movsl
push
in
push
xor
cmp
cmp
stos
jecxz
notb
int3
fmuls
or
xchg
insl
imul
xorl
mov
enter
sub
loope
cmpsb
xor
ret
mov
cmp
outsb
cmpsb
mov
or
lcall
dec
mov
sbb
jge
adc
pop
cmp
xor
push
and
mov
stos
jge
nop
imul
psrlw
or
add
insl
mov
sti
xchg
adc
mov
in
outsb
or
push
aaa
push
push
add
lret
xor
sub
in
pushf
jecxz
xor
push
sahf
push
pop
xor
shlb
inc
int3
sarb
push
cmp
push
inc
shrb
pushf
movsb
add
das
outsb
pop
out
push
push
inc
cmpsb
ret
xchg
shl
push
call
ljmp
pop
push
add
and
repnz
pop
and
ret
inc
loop
xchg
int
jnp
andb
sub
add
incl
insl
hlt
cmp
or
test
push
out
xor
jno
decl
daa
xchg
xchg
mov
xchg
daa
xorl
mov
push
or
pop
imul
sub
xchg
xchg
sub
push
jmp
pop
xlat
jo
test
scas
sbb
fdivr
addr16
stos
sub
xchg
and
add
cwtl
je
dec
pop
sbbl
imul
pusha
and
xchg
adc
out
jp
inc
dec
push
sbb
loop
jo
rcrl
das
loope
cmp
int
imul
sub
jbe
popa
or
add
mov
jns
pop
insb
mov
scas
mov
fnstenv
xchg
mov
adc
mov
subb
sub
add
sti
adcl
dec
out
shrb
in
clc
pop
hlt
daa
inc
mov
mov
pop
aam
incl
mov
fldl2e
or
sbbb
jno
outsl
out
sahf
shrl
clc
popa
inc
mov
data16
leave
push
testb
mov
in
sub
in
push
or
insb
jo
lahf
idivb
lcall
or
sbb
arpl
inc
pusha
push
call
and
push
and
inc
testb
inc
push
dec
xchg
inc
inc
mov
jmp
and
cmp
scas
jns
mov
add
jno
imul
mov
daa
cmpsb
sbb
push
mov
add
scas
cmp
fistpll
jecxz
jecxz
imul
test
xchg
cmp
sbb
cmc
mov
pop
cmp
jmp
ret
pusha
pop
dec
and
jle
adc
fidivrs
fcoms
mov
pop
int
xchg
or
imul
mov
ret
enter
in
lea
inc
pop
aam
cmp
mov
xor
mov
push
enter
push
hlt
mov
dec
sub
ljmp
imul
xchg
and
lea
jecxz
xchg
push
cli
or
mov
and
xchg
pop
movsl
jge
testl
loop
xchg
lds
push
les
test
cli
jle
loop
mov
ds
testb
sub
aaa
sbb
cmp
int3
mov
adc
push
sbb
cmpsl
test
sarb
fisubl
mov
movsl
adc
jg
lods
and
jge
jmp
jo
xchg
cwtl
iret
or
int
mov
xchg
sub
adc
sub
mov
jnp
ret
ss
aas
adc
cld
ds
incl
or
out
add
xchg
cs
jne
sti
sub
popf
add
loop
xor
and
imul
adc
clc
or
outsl
adc
add
mov
fiadds
jmp
testb
lods
cmp
mov
pop
push
inc
and
jo
add
mov
iret
adc
imul
sahf
rcrb
out
xchg
and
sbb
add
adc
loope
pop
je
or
jne
cli
jmp
outsl
xchg
xchg
das
inc
cld
movsb
mov
jns
out
into
xchg
sbb
mov
push
movsl
adc
imul
sti
int3
enter
inc
adc
clc
adc
ret
xor
addr16
xchg
sub
jae
jecxz
xbegin
movsl
ss
cmp
test
in
jb
cli
adc
test
pop
icebp
push
imul
test
ret
sti
aaa
ds
push
mov
rcrb
leave
adc
mov
and
loope
jl
stc
ljmp
lock
movsl
cmp
jg
jmp
rol
push
lea
push
insb
repnz
cmp
ret
in
daa
xchg
ss
push
sub
xor
out
repnz
int3
jae
mov
sbb
mov
in
adc
in
push
jge
imul
mov
adc
aad
push
inc
cmpb
pushf
nop
dec
test
ljmp
xchg
mov
pop
cmc
ja
jl
in
inc
shr
pop
in
xchg
mov
ret
adc
aaa
pop
or
pop
out
jge
mov
decl
fisttpl
push
push
mov
mov
addr16
mov
cmpsb
adc
shll
outsb
sub
mov
in
faddp
inc
push
mov
add
push
popa
dec
pop
cmp
movsb
repnz
icebp
bound
iret
mov
inc
loop
cmp
out
popa
xchg
iret
pop
sub
mov
jbe
lods
enter
jno
push
push
leave
adc
add
push
inc
jp
dec
cmp
or
ja
test
push
pop
inc
int
adc
das
mov
pop
sbb
adc
dec
call
fisubrs
dec
mov
lds
out
jno
fstl
xchg
jecxz
push
pop
lahf
je
inc
jns
jno
je
add
mov
outsl
or
cmp
outsb
out
mov
mov
add
push
data16
pop
sti
fcmovnb
flds
nop
test
jo
cmp
mov
pop
test
pop
push
stos
imul
fmulp
push
push
xchg
dec
fistpll
frstor
push
or
test
rcr
stc
or
xchg
sub
lcall
pop
sbb
cmp
xor
daa
xchg
sbb
dec
push
aaa
push
jae
fiaddl
pop
xchg
dec
jge
sarl
decl
jns
out
lcall
or
pop
rorl
push
and
sti
daa
out
cld
or
fs
aaa
iret
mov
xchg
adc
lret
and
dec
mov
fisubrl
pop
mov
fcompl
sub
mov
mov
loopne
add
xchg
test
add
insl
movsl
shrl
push
cmc
out
pushl
lahf
lea
mov
cmc
or
stos
inc
or
mov
lahf
jns
imul
in
jne
xchg
sbb
add
push
ljmp
xor
or
cwtl
ss
inc
scas
add
les
stc
inc
add
dec
push
in
aas
xchg
jp
fdivl
cmp
sub
xchg
pop
pop
jne
aas
sub
in
jne
mov
arpl
rcrl
push
mov
fbld
fstpl
inc
fadd
sbb
jl
arpl
mov
sbb
cmp
push
ret
aas
xchg
testl
jle
pop
xchg
jne
jecxz
pop
mov
lds
push
insl
mov
lahf
out
repz
jecxz
imul
in
jae
mov
popf
adc
sbbb
jmp
repnz
sahf
ss
insb
fcomi
adc
fnstenv
fsubs
sub
jmp
mov
je
cmp
int
cmpl
int3
movsb
lea
call
repz
push
nop
xchg
popf
adc
ret
iret
popa
aas
ret
mov
adc
xchg
push
mov
push
in
inc
jbe
inc
clc
lods
stos
roll
mov
andl
or
jbe
jo
jecxz
cmpxchg
adc
outsb
sub
push
les
push
push
lret
insb
mov
je
std
out
imul
aad
mov
sub
mov
repnz
mov
mov
xlat
jle
push
sub
lea
fs
cmpsb
and
mov
outsw
pushf
movsb
jecxz
mov
in
lret
orl
out
fildl
les
arpl
adc
outsb
push
iret
lods
push
mov
jnp
mov
ss
sti
pop
scas
stc
inc
add
xor
mov
xchg
sbb
jnp
or
sub
push
popa
sarb
mov
inc
cmc
inc
cmpsb
push
in
dec
xor
inc
mov
movsl
mov
mov
xchg
sub
lcall
adc
fcmovnb
sbb
mov
mov
ds
push
xchg
test
xorb
dec
sbb
cmp
loope
push
dec
repz
aas
mov
jne
adc
fwait
repnz
sbbb
mov
and
repz
inc
imull
inc
outsb
loope
adc
aas
dec
pop
lcall
js
xchg
mov
push
mov
adc
xchg
add
arpl
scas
xchg
test
sarb
push
lock
mov
or
call
in
xlat
outsb
cs
xchg
or
and
add
mov
jg
and
sahf
clc
pop
call
mov
leave
inc
sbb
cld
inc
adc
stc
or
dec
ds
sti
xchg
push
cmp
dec
dec
and
out
loopne
dec
loopne
or
inc
mov
ljmp
aas
lcall
xchg
inc
test
popa
or
xchg
loope
and
add
jnp
clc
mov
lods
mov
lcall
jae
xchg
mov
push
stos
outsb
sbb
jnp
lods
out
mov
dec
out
jae
lcall
sub
push
cwtl
testb
mov
outsb
jbe
scas
int
orb
lret
into
movsl
pop
lsl
fwait
dec
pop
cmpsb
cmp
loope
jmp
jmp
or
repz
stc
push
pop
testb
jge
sbb
cmp
fwait
cli
imul
mov
jmp
mov
fs
xor
add
loopne
mov
movsl
std
mov
cmc
push
mov
cmp
cmp
mov
sub
ljmp
cmp
gs
dec
add
cmp
mov
push
xorb
mov
push
mov
imull
pop
cmp
pushf
pop
jle
imul
fcom
fstps
jbe
test
in
push
stos
ss
mov
cmpsb
out
xlat
cmp
jg
aaa
push
mov
jl
sbb
jo
cltd
xor
lds
into
cmp
stc
jge
push
in
test
outsb
push
ljmp
sti
xor
mov
adc
mov
aad
mov
cmp
dec
push
outsb
out
and
pop
adc
shrl
mov
lds
xor
cmp
rol
adc
lret
dec
cmpsl
movnti
iret
and
std
orl
jo
and
jnp
xchg
loop
add
xchg
test
into
xchg
mov
retw
insl
push
cli
dec
sub
nop
push
and
xchg
cmp
and
sub
pop
xor
jmp
cmp
xchg
xor
pop
dec
fsub
pop
inc
std
aad
jmp
push
xchg
mov
fwait
dec
and
dec
cmpsb
in
inc
mov
movsl
lods
ljmp
jmp
or
jno
stos
repz
inc
adc
mov
in
xchg
clc
mov
sub
imul
mov
addr16
cli
or
xchg
mov
pop
jge
aad
aad
mov
popl
std
jb
dec
dec
mov
les
and
mov
ret
push
sub
sbb
lahf
add
mov
sub
imul
scas
daa
mov
xchg
lods
inc
stc
pop
mov
ds
adcb
inc
inc
dec
jecxz
mov
push
scas
clc
mov
inc
push
inc
inc
xchg
jg
loop
outsl
push
cmpsl
add
cwtl
mov
mov
rcl
push
test
aad
test
and
push
and
dec
inc
ret
push
adc
cs
popa
mov
xchg
and
jb
cmc
xchg
mov
dec
or
dec
gs
adc
hlt
adc
adc
std
aad
stos
xchg
pop
fldenv
jae
pop
mov
sub
sbb
or
es
int3
popl
leave
sbbl
mov
in
push
dec
lcall
inc
or
mov
orl
repnz
mov
clc
aas
cmpsb
cli
out
and
push
lods
orb
cmp
push
mov
jo
mov
jnp
repnz
pop
adc
rcrl
sub
push
repnz
sbb
sub
outsl
jnp
cmpb
add
in
adc
xlat
sub
pop
fsubrl
mov
decb
clc
adc
sub
add
cmc
fs
push
popf
xlat
or
cmpl
movsb
push
lds
mov
and
rcrl
andb
mov
imul
sub
jae
movsb
in
jno
xor
imull
or
ss
cmp
xchg
push
ljmp
inc
push
adc
sbb
fs
or
aaa
mov
gs
jae
les
xor
lahf
cld
enter
or
les
ja
clc
sbb
push
mov
xor
jp
gs
andl
xor
push
mov
mov
std
sbbl
mov
roll
movsb
adc
mov
push
scas
out
shll
dec
inc
ret
sbb
movsb
inc
dec
add
cmpsb
jbe
cmp
dec
lds
mov
cmpsb
mov
popa
cld
dec
clc
xor
scas
push
inc
into
test
lea
add
lret
fcomps
in
setb
and
inc
mov
or
mov
rep
mov
mov
jg
push
lods
inc
test
into
or
pushf
cli
pop
pop
scas
and
adc
call
sub
push
bound
les
repz
jmp
fwait
js
sbb
mov
int
enter
fwait
fs
ret
adc
ja
lret
xchg
cmp
inc
adc
cltd
inc
sub
lds
popf
imul
insl
or
je
add
xor
sarb
add
xor
cmp
xchg
pop
add
repnz
jbe
mov
stc
popf
or
rcll
adc
or
sti
or
outsb
in
push
or
cmpsb
sbbb
pusha
int
cmp
push
rcl
aas
fwait
push
stos
jp
add
ret
movsl
mov
insb
sub
js
incb
push
mov
xlat
addb
mov
push
mov
sub
rolb
add
xchg
lods
inc
cmpsb
js
les
imulb
jo
out
stos
jnp
mov
cwtl
ret
xlat
and
dec
stos
rcr
xor
or
out
cmp
shlb
scas
fldenv
sbb
sti
push
in
add
xchg
scas
mov
jnp
das
add
pop
stos
or
jp
iret
in
iret
lretw
dec
push
sub
mov
fwait
in
aas
fsubp
cwtl
push
fidivs
xchg
aad
mov
sbb
addr16
stos
pushf
cmpsl
mov
lds
push
mov
mov
sti
sub
popf
stos
or
add
mov
pushf
pop
push
popa
mov
pop
push
fdiv
dec
iret
imul
adc
inc
or
dec
cmp
xchg
dec
sub
dec
repz
jmp
out
jns
mov
add
sub
sub
or
shll
out
push
out
mov
mov
add
mov
pop
cmp
mov
lods
adc
fisubl
dec
jmp
cmpsl
inc
in
aad
mov
test
mov
add
cltd
mov
lahf
mov
je
cs
adc
jae
adc
popa
clc
pop
mov
cli
inc
mov
out
int
add
mov
out
xchg
cmp
icebp
retw
out
pop
mov
ljmp
pop
add
push
fisttps
mov
aaa
jo
in
xchg
jle
test
out
decl
cmp
add
loop
xchg
je
aaa
sbb
mov
xlat
mov
jns
mov
dec
leave
sbb
mov
repz
sbb
iret
push
cmp
cmp
sti
push
out
aad
jg
ss
cmp
fcoml
or
sub
sbbl
dec
incb
xchg
pop
pop
add
mov
and
decb
nop
loope
cli
adc
mov
movb
mov
mov
test
nop
cmc
dec
in
xlat
popf
orb
fxch
inc
sub
pushl
dec
cmp
shll
mov
daa
aaa
test
sahf
dec
mov
adc
mov
xor
sahf
xchg
or
sub
dec
icebp
addr16
adc
push
mov
dec
test
mov
roll
adc
sub
icebp
xchg
and
rclb
out
fcompl
sbb
jp
add
mov
push
pop
sbb
lods
mov
test
pushf
dec
div
jae
lea
xchg
repz
pop
rcll
sbb
xor
shll
ja
ret
add
leave
movsb
repnz
mov
xchg
sbb
mov
sbb
mull
or
aaa
ret
lds
lock
inc
fwait
stc
or
incb
xor
dec
pop
add
pop
mov
inc
and
rcl
insl
mov
fimuls
cmp
dec
xlat
sub
out
incb
out
xor
fiaddl
fstl
cld
fstl
in
mov
lds
push
loopne
out
sbb
pop
notb
cmp
sbb
cmpsl
mov
dec
mov
jae
xor
adc
lcall
add
mov
jge
lock
xor
pop
sbb
test
ds
or
add
ret
dec
sub
flds
repnz
popf
inc
or
in
andl
xchg
sub
pop
enter
scas
inc
add
es
sbb
pop
push
cltd
and
mov
mov
jp
inc
mov
movsb
push
cmp
inc
push
test
pop
mov
jo
pop
adc
in
pop
out
cmp
cmp
or
test
jg
test
jno
and
add
scas
jns
push
adc
mov
ljmp
out
or
sbb
shr
jle
cmp
js
call
incl
or
mov
hlt
sbb
dec
aad
sub
mov
fimuls
xchg
shll
xchg
int3
cmpsb
inc
ficoms
cli
movsb
inc
sar
lods
push
popa
lcall
mov
mov
call
in
sti
inc
in
push
or
add
jp
fistps
mov
icebp
mov
dec
outsb
enter
lahf
icebp
es
insl
add
scas
inc
mov
fcmovbe
jle
or
je
and
and
ja
inc
out
mov
sub
xchg
pop
push
jae
into
test
adcl
inc
xor
xor
cmp
out
pop
jl
out
es
cmpsl
out
dec
out
je
xchg
rcll
out
dec
xlat
mov
jno
lcall
add
out
push
insl
mov
fbstp
popa
movntq
test
ja
inc
inc
stc
inc
adc
and
insl
adc
aaa
mov
cli
or
pop
shl
enter
mov
rclb
jbe
xor
outsl
aas
cmp
out
push
lret
imul
pop
inc
dec
xchg
pop
mov
or
jecxz
cmpsl
sub
ret
movb
pop
hlt
xor
push
std
mov
sbb
inc
call
fiadds
repnz
test
cmpsb
daa
leave
mov
cmp
out
mov
cs
bound
popa
fwait
push
pushf
mov
dec
in
jnp
mov
imul
lods
pop
mov
jb
mov
mov
int
sub
sbb
jp
sub
call
push
adc
into
je
cli
mov
fiadds
leave
clc
cli
and
stc
add
mov
into
data16
fstpt
fadd
mov
int3
jb
mov
push
xchg
lods
test
sub
movsl
fistl
sub
mov
loop
push
les
sub
nop
mulps
jp
inc
push
out
movsb
jmp
cs
mov
mov
iret
or
mov
popa
add
sub
nop
add
xor
out
xor
pop
les
fldcw
pop
mov
mov
fldt
dec
dec
stos
mov
cmpsb
cmp
sub
sbb
enter
lret
test
inc
fisttpl
xchg
lret
pop
outsl
cmp
cltd
mov
inc
addb
push
dec
pusha
jno
ljmp
insl
jp
jae
adc
sbb
push
or
pop
notb
int
push
fstps
mov
mov
imul
movsb
repnz
sub
mov
cmc
scas
jl
loopne
mov
pushf
jns
xchg
xchg
push
push
push
je
pop
push
push
addb
addl
mov
ss
leave
sahf
in
xlat
pop
mov
fmuls
fsubr
imul
andb
pushf
pop
pop
jns
mov
leave
mov
mov
sarl
test
cld
sub
sbb
mov
fs
insl
lcall
mov
xchg
jp
dec
cmp
adc
dec
insl
dec
js
jle
xchg
xor
and
adc
inc
fldcw
int
adc
insl
jo
mov
add
adc
pop
add
fs
mov
inc
cli
and
jno
addb
pop
cltd
mov
rolb
stos
mov
test
dec
or
jp
xchg
sub
xchg
pop
cs
inc
lret
and
push
cmp
sub
adcb
add
outsb
jnp
push
mov
inc
xchg
and
fistl
outsl
mov
lods
out
dec
cmc
test
test
lods
out
mov
pop
mov
rolb
xchg
in
sti
mov
pop
pop
sbb
sub
fiaddl
xlat
mov
add
mov
push
leave
loope
out
inc
inc
inc
loopne
push
push
dec
sbb
xchg
outsb
repnz
lods
lods
je
fwait
dec
shrb
sbb
sub
xchg
or
dec
xlat
iret
outsb
sbb
out
push
loop
jecxz
add
mov
add
loop
or
loopne
push
mov
fadds
loope
fsubp
outsl
adc
inc
je
xor
lock
mov
sub
mov
push
test
fists
adc
jle
cmpsl
inc
xchg
inc
jp
jmp
int
in
cld
ja
scas
movsl
in
pop
sbbl
subl
inc
addr16
jnp
push
ja
pop
scas
scas
call
je
and
and
adc
xor
lahf
lds
repnz
js
int
xchg
out
add
out
pop
ret
clc
inc
dec
push
jbe
push
cmc
dec
and
call
adc
loope
jp,pn
mov
mov
nop
nop
sub
mov
xchg
je
stos
cs
sub
jg
in
scas
fs
xchg
int3
mov
jle
mov
test
jl
xor
sbb
out
pop
cmp
dec
lret
mov
std
jae
xchg
mov
xchg
test
pushf
mov
je
dec
stos
dec
dec
sbb
lea
cmp
xor
cltd
mov
ss
inc
fldl
out
cli
hlt
arpl
add
lds
fistl
out
sbb
sub
jbe
loope
fdivrs
cmpsl
les
xlat
outsl
fsubl
mov
mov
push
dec
sub
fsubs
jge
repz
aad
nop
cmovae
mov
out
fwait
das
popa
pop
iret
sbbl
push
mov
in
pop
shrb
leave
xchg
pop
repz
out
icebp
shrb
imul
mov
lock
fsubr
test
xchg
jp
adc
or
inc
imul
daa
in
cwtl
fucomp
dec
in
push
mov
lods
sbb
lea
cmp
cmp
jnp
xor
lcall
subb
or
or
and
cwtl
pop
adc
mov
lcall
mov
mov
lods
xlat
add
pusha
cli
outsl
cmp
or
das
sbb
sub
xchg
mov
sbb
inc
jnp
outsb
add
sub
mov
pop
idivb
fbld
inc
bound
sbb
aad
xchg
nop
clc
lahf
xor
mov
fdivrl
adc
pop
test
jl
out
dec
roll
or
mov
adc
lret
push
mov
cmpb
mov
pop
adc
jmp
add
hlt
scas
fwait
repnz
adc
adc
mov
rcrb
xor
xor
cmpsl
jns
fisubrs
enter
cmpsl
inc
jp
test
inc
jae
xchg
test
jns
movsb
sarb
push
andl
pusha
pandn
out
stos
mov
cmpsl
mov
hlt
lret
test
mov
dec
lds
inc
inc
sub
imul
dec
gs
sbb
pop
cmp
insb
es
loopne
or
mov
push
xor
movq
inc
mov
sub
xor
bound
mov
add
lret
bound
jmp
ret
aas
mov
fisttpll
dec
iret
inc
clc
mov
sbb
rcrl
inc
dec
dec
pop
add
fwait
adc
xchg
jmp
lahf
add
sub
ja
xchg
mov
mov
xchg
ds
mov
jb
imul
mov
xchg
aam
mov
orb
xchg
xorb
insb
push
mov
jl
decl
jmp
mov
in
and
mov
rclb
add
das
dec
outsl
jnp
icebp
add
test
lret
testl
pop
gs
push
popf
jne
pop
repnz
mov
jns
xchg
mov
dec
das
cmp
dec
xchg
sub
jb
icebp
mov
adc
mov
shr
pop
xchg
inc
faddp
jl
push
mov
aas
xchg
adc
test
push
dec
jo
sbb
jne
iret
pushw
mov
xchg
xchg
loope
mov
jl
fists
fwait
xchg
or
adc
push
jo
push
scas
xlat
insl
lods
mov
hlt
xchg
call
lea
pusha
in
call
cmp
popa
dec
clc
sti
inc
loope
jno
jp
mov
loope
pop
dec
jbe
mov
out
mov
fwait
loop
dec
fdivs
cmpsl
mov
in
aad
bound
xchg
pop
dec
es
cltd
insb
insb
dec
fsts
popf
iret
fcmovne
rep
mov
insb
stos
and
pop
loop
jmp
push
out
mov
test
mov
fisubl
or
mov
cmp
mov
push
jbe
prefetch
or
xchg
push
xor
bound
mov
in
test
or
clc
pop
lods
mov
xlat
adc
jp
aad
adc
push
cmp
push
call
addb
mov
roll
add
sub
inc
pop
jb
xchg
sub
ds
sbb
sbb
ss
push
fidivl
sub
decl
int3
cmp
cmp
jne
xchg
add
mov
lods
mov
push
mov
add
clc
mov
fs
jg
inc
sahf
insl
add
sbb
fwait
repnz
mov
fdiv
daa
xorb
out
ja
mov
jp
je
and
and
jns
into
test
xchg
or
adc
xchg
lods
and
jae
or
aam
dec
and
cltd
xor
lret
lock
icebp
aaa
sbb
in
rorb
mov
pop
xchg
push
push
jp
and
mov
push
pop
add
pop
addr16
int3
gs
clc
in
loopne
scas
pop
jmp
xor
data16
xor
mov
cwtl
test
fdivl
lret
daa
std
cld
stos
cmp
test
je
data16
clc
cltd
int3
leave
mov
add
sbb
and
push
xor
xchg
fistpl
mov
sbb
mov
outsl
in
or
in
mov
and
jle
outsl
pop
xchg
fistpll
push
xor
call
das
push
cli
addl
ss
popf
lock
or
sbb
int
int3
ja
call
xor
xchg
push
mov
aaa
ljmp
aad
insl
shlb
pop
cmpsb
arpl
mov
mov
call
lock
lahf
repz
das
pop
out
adc
and
and
push
in
enter
into
ficompl
push
mov
ret
iret
jecxz
stos
xchg
lock
and
mov
mov
int3
jl
pusha
ret
in
enter
mov
loopne
dec
mov
cmp
push
cs
dec
fistpll
push
inc
out
push
add
jmp
dec
cwtl
test
dec
xor
xor
mov
enter
add
icebp
mov
or
mov
xchg
cmp
xor
sti
inc
or
mov
ret
jae
call
imul
sar
inc
pop
inc
mull
sub
mov
dec
or
int
sbb
mov
insl
xchg
sbb
jbe
hlt
int
dec
xor
jns
fcmovnb
in
inc
gs
call
push
in
repnz
or
inc
push
sub
inc
adc
sti
xchg
jae
jg
insb
sub
push
xor
mov
aam
adc
les
movsb
jle
add
fdivp
jbe
push
push
cwtl
stos
xchg
call
sahf
cmpsb
incl
and
sbb
and
jno
or
mov
lret
int
xor
dec
mov
xchg
mov
clc
lods
bound
mov
lock
lcall
push
push
jle
pop
pop
out
andb
into
or
sub
adc
sbb
xchg
imul
and
xor
fucomip
rol
adc
pop
xor
pusha
popf
fisttps
loope
out
jmp
out
rorb
std
test
mov
cld
enter
out
dec
add
adc
movsb
or
jmp
mov
icebp
jnp
ret
xchg
stos
pusha
add
mov
mov
aaa
insl
icebp
mov
loope
repz
cmpsb
mov
sbb
subl
mov
addb
inc
or
cli
xchg
xor
adc
xor
cwtl
das
mov
jge
mov
inc
fwait
cmpsl
das
in
mov
add
push
inc
popf
push
stos
jo
movlps
push
mov
lds
mov
xchg
cmpsb
aam
adc
jmp
je
nop
inc
lret
or
jg
sbb
and
or
and
push
insb
adcl
mov
cmp
pop
xorb
push
pop
outsl
sbbb
lahf
scas
xor
push
sbb
mov
scas
xchg
inc
pop
addl
jb
sub
push
dec
mov
inc
mov
inc
out
pop
push
sbb
inc
and
jp
out
lock
cld
andl
lfence
jge
xor
int
sbb
ja
int
int3
xor
addr16
fistl
pop
inc
sbb
lret
jp
repz
into
mov
adc
xchg
dec
out
fdivl
out
dec
pop
cld
inc
inc
pop
lea
shlb
cltd
xor
cmpl
push
insb
xchg
pop
imul
mov
pop
sarl
into
and
out
add
test
and
test
sti
int
out
xchg
cmp
dec
cltd
jb
lret
jo
xchg
icebp
popa
nop
daa
xchg
pusha
sub
inc
jae
mov
sbb
lea
sbb
ljmp
aam
movsl
push
lcall
push
fldl
mov
mov
push
call
movsl
es
fstps
push
iret
idivb
insb
arpl
popf
idivl
cli
les
outsb
or
inc
sti
shll
push
mov
dec
mov
cwtl
xchg
pop
push
mov
iret
icebp
orl
xchg
and
jae
mov
daa
mov
xchg
aas
mov
clc
sbbl
test
add
fisttps
dec
lcall
push
les
loopne
push
sbb
xchg
imul
loop
rcl
hlt
out
sub
fidivl
insl
xor
fimuls
mov
test
sub
jecxz
pop
lahf
cmp
mov
inc
lahf
pop
pop
cli
mov
push
cmc
jae
dec
loopne
fwait
push
out
push
or
idiv
leave
push
push
xchg
pop
pop
cmp
shll
sub
rep
pop
jno
xchg
pop
std
jo
jne
dec
das
ja
inc
scas
ss
adc
jno
testl
push
xchg
lret
adcb
outsb
mov
xorl
mov
sub
add
fwait
mov
add
fs
and
inc
je
jg
fucompp
das
cltd
pop
mov
mov
jmp
lret
ror
popa
imul
out
add
mov
xchg
or
cli
pop
sbb
arpl
pop
push
adc
imul
cmp
in
fmuls
addr16
clc
xchg
icebp
jg
mov
fcoms
pop
aad
jae
adc
xchg
jmp
cli
cltd
jbe
pop
call
or
ret
dec
or
adc
scas
outsl
pop
lock
ja
lds
call
outsl
aas
stc
jnp
gs
dec
cltd
cmc
hlt
rcrb
test
xor
dec
or
inc
and
mov
xor
xchg
cmc
mov
add
sbb
push
xchg
mov
call
add
inc
dec
data16
fsubr
sbb
cmp
insl
into
out
ficompl
movsl
insl
inc
push
lret
jb
mov
xchg
sbb
rcrl
out
rorb
into
daa
adc
mov
shr
sub
mov
pusha
loope
lcall
inc
popf
mov
popf
push
fmul
jl
ja
iret
fldl
fsubrl
push
test
lcall
gs
lock
dec
repnz
int
iret
push
dec
nop
mov
sub
fwait
mov
mov
sbb
add
lods
fiaddl
pushf
xchg
stc
dec
test
cmp
fldenv
sub
stc
adc
mov
test
push
psubd
jg
add
jne
cmpsl
push
adc
adcb
sbb
mov
in
mov
xchg
jmp
push
push
adcb
mov
lods
add
sub
mov
enter
stc
rol
ror
test
push
shll
dec
jle
mov
push
nop
mov
mov
cltd
cltd
jg
gs
and
repz
or
aam
sbb
dec
push
shl
rorb
xchg
das
and
pusha
outsl
icebp
fs
xchg
adc
xchg
lods
or
leave
icebp
or
xor
lahf
mov
dec
lods
aas
push
aam
sbb
lods
daa
in
sti
pop
pop
mov
dec
out
fisubrs
mov
pop
shlb
jo
das
sbb
pop
sahf
push
push
test
outsb
hlt
dec
sahf
sbb
sbb
mov
cli
shl
dec
pop
mov
es
adc
cwtl
and
mov
fisttpll
cwtl
and
andb
stc
and
lds
or
sahf
jae
test
jno
in
xchg
pop
jns
insl
mov
push
outsb
ror
add
xorb
fld
sbb
adcb
or
pop
inc
and
xchg
cmp
jbe
sub
mov
cmp
shl
xor
sbb
test
xor
or
jb
mov
fstps
dec
jno
mov
test
inc
lret
push
scas
sub
jne
add
in
fsubs
sub
cs
inc
lods
sbb
pop
sbb
cmp
sub
xor
add
inc
pop
repz
inc
das
sub
dec
arpl
sbb
jecxz
shrl
in
cmp
jnp
fs
lea
test
test
dec
push
sbb
inc
ss
inc
jne
mov
mov
push
add
lods
cld
cltd
push
bound
lea
jmp
and
cwtl
cmc
cmpsb
xchg
push
or
xor
cwtl
cltd
pop
sysret
xor
stos
aas
in
inc
xor
pop
cmp
lcall
inc
sub
hlt
ficompl
nop
adc
enter
sti
and
add
sbb
ljmp
or
outsl
and
mov
cmp
sbb
mov
aas
flds
mov
stos
push
mov
or
in
add
push
outsb
mov
pop
insb
mov
sbb
bound
sub
shr
jo
dec
add
xchg
sbb
imul
fcompl
cmp
sub
lret
pop
jbe
jbe
mov
pusha
outsb
inc
dec
push
cmpsl
loopne
int
popf
in
dec
inc
cmpsl
jo
pop
jg
leave
sub
movsl
or
dec
add
sub
aad
adc
push
pop
adc
pop
mov
aaa
dec
cwtl
xchg
scas
push
adc
or
bound
mov
arpl
std
mov
fcoms
xlat
mov
int3
xchg
push
mov
cmpsb
cmpsb
dec
pop
mov
xchg
jmp
pop
rcrl
mov
cmp
pop
mov
shrd
pop
push
insb
pushf
outsb
adc
jge
in
xor
or
jb
sti
xchg
cmp
repz
adc
sub
push
out
mov
mov
push
jp
outsl
fstps
or
inc
and
mov
ds
popf
inc
out
lret
jbe,pt
adc
jo,pn
stos
filds
push
jle
in
push
jnp
jg
icebp
movsl
push
test
pop
stos
mov
sbb
pop
out
pop
test
mov
mov
push
cmp
mov
pop
shlb
and
scas
out
add
xor
leave
mov
xchg
lods
add
or
and
mov
mov
repnz
adc
jbe
mov
mov
test
push
pop
mov
imul
dec
mov
aaa
notl
stc
dec
out
or
loop
sub
test
push
adc
and
int3
jno
std
xchg
mov
push
jno
ds
and
xchg
pop
stc
lock
pushl
xchg
sbb
lds
mov
and
insb
inc
push
insb
adc
leave
insl
lret
pop
fldt
inc
add
popf
and
push
in
push
lock
and
push
sub
test
aaa
imul
adc
ljmp
sub
out
mov
sub
inc
xchg
bound
fnstsw
aas
aad
js
sbb
lret
fsubr
sti
xor
cmpsl
cs
scas
mov
mov
loop
and
mov
pop
dec
imul
call
pusha
and
stos
jo
out
mov
ret
lock
fwait
cmpsl
das
adc
es
mov
push
add
std
inc
stos
loope
and
sbbb
xchg
xlat
stos
ret
popa
aaa
mov
add
mov
enter
lea
jbe
xor
std
add
sub
aas
lods
pushf
xor
fs
jno
inc
fmuls
and
adc
lret
xchg
push
nop
pop
and
mulb
adc
ret
outsl
add
gs
or
scas
scas
ds
sahf
or
cltd
push
push
popa
xchg
mov
test
mov
xlat
lahf
outsb
jl
clc
pop
dec
sub
fs
xchg
jmp
xor
mov
aam
fstl
cmpsb
out
pop
iret
frstor
clc
push
xchg
sbb
pcmpgtd
popa
das
cmp
xchg
add
lods
mov
cwtl
sbb
aas
pop
out
inc
xor
cld
test
out
out
pop
notb
xor
lea
add
shl
scas
fwait
add
test
mov
out
inc
add
lea
ret
and
sbb
add
rcll
popa
push
xchg
pusha
or
int
test
mov
les
into
fdivp
dec
aam
scas
or
mov
push
rolb
inc
cmp
js
in
stos
jp
sub
mov
jmp
add
dec
mov
push
outsb
rcl
divb
push
sbb
inc
cmp
jecxz
negb
mov
mov
call
mov
test
sbb
ljmp
loop
inc
bound
cmpsl
mov
mov
mov
adc
scas
ret
xchg
pop
xor
xor
xor
cmc
dec
aaa
xlat
push
scas
lcall
test
ds
aam
negl
push
jae
jns
jle
popf
stc
mov
inc
lea
repz
dec
pop
xor
xchg
test
sbb
add
lods
test
pop
xchg
jae
lahf
sarb
cmp
imul
adc
orl
jae
addb
jmp
shr
jp
cmc
or
nop
lahf
stc
push
mov
pop
lahf
cmp
push
in
stos
in
mov
xor
inc
addr16
or
int
lds
out
push
cwtl
repz
cli
push
loop
stc
frstor
inc
fnsave
mov
fiaddl
call
nop
imul
pop
mov
imul
mov
insl
jno
ja
jl
aad
les
xchg
out
lods
mov
add
xorl
outsb
xor
testb
sbbl
adc
ja
lds
xchg
hlt
adcl
shr
xor
jnp
ficoml
pop
mov
loope
or
inc
push
enter
dec
jmp
dec
test
sub
pushf
jae
mov
sbb
mov
test
cmp
xor
sahf
mov
jge
pop
push
ret
xor
mov
pop
mov
push
mov
mov
mov
add
xchg
nop
push
ret
test
imul
cmp
jle
fisubl
icebp
ljmp
jae
sbb
sbb
pop
ret
imul
pushf
in
rcll
shrl
and
adc
push
push
les
js
xchg
test
shrb
insb
repnz
stos
mov
jg
cmpsl
jno
mov
mov
push
aas
pop
cld
test
std
mov
nop
call
lret
insb
popf
mov
into
add
sbb
aad
and
mov
outsb
bound
in
mov
dec
aas
jno
stos
mov
xchg
insl
jge
outsb
les
js
or
lock
sbb
int
dec
lock
sbb
iret
mov
loope
lahf
lods
cmp
popa
xor
rclb
dec
xor
or
fucom
sbb
lds
sbbb
inc
dec
ffreep
pop
or
pop
add
nop
mov
dec
pop
fcmovu
inc
push
mov
cltd
and
lret
js
push
sahf
test
movsl
or
xchg
cmp
sbb
popf
cltd
pusha
ja
or
cs
leave
push
sti
fcoms
je
add
int3
inc
jecxz
mov
add
daa
sub
aas
add
pop
lock
aas
mov
pop
ja
push
pop
inc
fistl
jp
jecxz
adc
or
in
dec
lahf
sbb
xor
mov
das
aaa
push
roll
pop
mov
mov
int3
pop
pop
lea
or
movsb
repz
adc
daa
mov
add
jae
out
push
fcomi
and
push
xchg
sub
clc
adc
and
test
sub
xor
sub
jg
loop
or
fs
jnp
adc
mov
sbb
loop
sbb
mov
ret
enter
push
sub
jp
arpl
push
fs
mov
pop
cld
test
xor
daa
ss
test
push
js
and
xlat
xor
push
push
roll
cmp
push
test
ja
testb
pop
xchg
rorb
call
sub
mov
test
xchg
or
andb
sbb
test
sbb
dec
into
js
or
outsl
jnp
outsb
jne
lods
mov
mov
sar
cmpsl
loop,pn
aam
ss
mov
fidivs
notl
sub
and
add
mov
pushl
cs
mov
nop
stc
sub
sub
mov
sbb
push
aaa
sbb
lock
adc
repz
in
pop
lret
bound
insb
jg
mov
add
jecxz
ret
es
in
mov
imul
inc
jns
arpl
or
pop
inc
test
mov
fmull
sbb
adcb
or
bound
mov
jne
adc
pop
aaa
mov
andl
icebp
ss
sub
xchg
repz
fiaddl
mov
sahf
andl
call
lret
out
push
fstpt
and
sub
pop
sti
loope
adc
xor
insl
jge
loop
push
mov
add
sti
mov
adc
jg
testl
inc
rorb
lcall
add
enter
test
mov
ljmp
cmp
andb
cmp
lods
das
sub
inc
nop
adcl
out
out
test
jbe
cmp
out
fmulp
push
test
hlt
inc
ss
jns
repz
xchg
mov
test
stos
sbb
cmc
lret
ja
dec
sbb
mov
jge
jmp
lock
mov
xchg
insb
test
sbb
mov
loope
loope,pt
test
ret
xchg
stos
lods
dec
ffree
sarl
xchg
sub
adcb
fwait
cli
sub
sub
pop
push
adc
add
sub
xor
adc
adc
fstpl
xor
add
and
sbb
pop
dec
adc
repz
mov
imul
cmp
inc
or
sub
jae
icebp
xchg
push
mov
das
cwtl
sub
rcrb
mov
xchg
enter
pusha
jns
ror
dec
push
ja
pop
cmp
or
or
scas
aas
data16
push
push
movsl
sar
outsl
jp
cmp
daa
out
push
dec
pusha
push
jns
aad
mov
or
mov
scas
or
mov
inc
mov
push
jmp
jge
adc
sub
test
sub
sub
jnp
scas
xchg
or
lcall
and
dec
mov
mov
cmp
jge
out
repnz
adc
fwait
mov
fistpll
cmp
sub
subl
and
rol
outsb
sub
leave
jle
or
cmpsl
pop
dec
fisttpll
and
mov
shrb
dec
lock
iret
inc
cld
mov
sarl
cmp
xor
push
out
xchg
hlt
push
and
pop
insb
sbb
loopne
outsb
mov
cmp
cmp
inc
pop
dec
call
dec
icebp
enter
fucompp
cmp
out
sub
dec
inc
stos
push
lret
addr16
sti
xor
shlb
shl
inc
ret
cmp
hlt
scas
push
ljmp
es
into
push
mov
and
mov
ds
iret
sbb
add
mov
mov
loopne
les
pusha
mov
sahf
xor
sahf
inc
mov
testb
cli
pushf
dec
add
jne
in
sbb
divl
into
mov
stos
or
mov
lcall
push
cmc
xchg
jp
and
clc
lret
sub
imul
inc
add
jae
nop
xor
mov
jne
lret
sbb
and
lods
fistpl
ja
popf
mov
negl
lret
mov
jnp
cmp
adc
add
out
xor
pusha
paddusw
icebp
movsl
sbb
ja
or
cmpsl
push
test
or
sbbb
push
push
bound
mov
fidivrl
iret
add
cwtl
add
daa
pop
sub
adc
lret
push
sub
and
cmp
push
movsl
dec
clc
aad
jno
pop
dec
cwtl
xchg
push
lods
ret
mov
xchg
xor
jae
mov
dec
adc
jg
jno
mov
push
xchg
into
dec
xchg
gs
es
push
jae
mov
faddp
xor
dec
pop
cld
mov
mov
setne
inc
pushf
adc
int3
pop
imul
repnz
icebp
xchg
sub
add
rorl
adc
pop
mov
jg
stos
fwait
in
push
jl
nop
mov
mov
sub
leave
mov
repz
push
inc
mov
push
test
outsl
in
adc
xor
addr16
xor
add
lahf
out
mov
or
ret
cmp
jno
cwtl
cltd
dec
add
cmc
clc
dec
scas
inc
mov
add
mulb
js
out
insl
push
cmpb
dec
mov
ficomps
ds
cmovp
mov
push
lret
push
xchg
jno
sbb
jl
fmull
push
mov
sub
pop
dec
sub
jno
fsubrl
or
stc
dec
ljmp
adc
dec
int
mov
mov
sub
mov
xchg
jno
push
out
std
xor
cmp
test
sbb
pop
rcl
mov
hlt
js
bound
clc
rorb
popa
sub
xor
mov
push
lods
adc
imul
adc
fisttps
jmp
sub
push
je
sbb
pop
ret
mov
mov
or
mov
mov
inc
fmull
dec
bnd
outsb
popf
sub
pusha
testl
add
xorl
dec
enter
out
icebp
jae
jecxz
jp
rolb
adc
bound
daa
fwait
or
js
das
mov
sub
push
lret
jmp
adc
loope
and
rol
xlat
sbb
dec
mov
pop
scas
jl
lock
decb
mov
mov
fisubs
cmp
xchg
cmp
mov
jbe
push
inc
cmpb
pop
repnz
je
dec
sbb
movsb
stos
sbbl
cmpb
ljmp
insb
mov
stos
pop
dec
push
sbb
daa
lahf
clc
cmpsl
or
iret
mov
sub
xor
inc
xchg
loopne
mov
insb
push
cmp
fbld
and
jae
push
movsl
div
dec
scas
cwtl
push
mov
lret
pusha
mov
pop
sti
lret
cld
jne
stc
jmp
cmp
sbb
jle
ret
pop
movl
mov
leave
popa
pop
fisttpl
pushf
sub
addr16
lods
adc
out
das
std
repz
addr16
shrb
pushf
push
adc
mov
or
rcrl
dec
add
pop
popf
or
sbb
ret
fstpl
les
repnz
sub
lret
pushf
mov
pushf
adc
cwtl
mov
hlt
push
sbb
jb
jg
insl
insl
data16
inc
mov
jne
sbb
inc
xlat
mov
xchg
dec
dec
pop
pop
lcall
dec
pusha
cmovle
ss
and
push
push
scas
mov
lods
popa
ror
cmpsb
or
pop
int
sub
push
and
orl
test
ss
jge
es
std
leave
repz
in
movsl
testl
sub
test
jecxz
jo
lock
pusha
fsts
xchg
cld
xchg
adc
dec
fdivrs
cmp
push
ret
dec
dec
out
dec
pop
cwtl
lods
pop
div
xor
aas
sbb
xor
imul
push
mov
mov
pop
and
ficoms
mov
inc
push
sub
into
popa
nop
jns
mov
xor
dec
pop
or
cld
xchg
add
add
adc
dec
sahf
stos
cmp
int
andb
lret
adc
fnsave
and
adcl
add
dec
call
cmpl
fwait
cmc
cmp
push
inc
out
cs
sub
filds
stos
and
and
push
xor
rorb
scas
push
fnstsw
mov
ffree
jl
pop
sub
arpl
pop
add
out
out
and
xchg
sbb
leave
leave
testb
arpl
movsb
dec
daa
xor
cwtl
jnp
sbb
dec
cltd
loope
adc
xchg
and
xchg
hlt
movsl
outsl
mov
int3
mov
repnz
addr16
inc
push
mov
test
mov
int3
and
pop
mov
dec
cwtl
dec
xchg
xor
sbb
push
inc
mov
cmp
lods
imul
cmp
mov
loop
and
jle
rolb
loopne
ret
inc
lods
jo
mov
lods
or
aaa
cld
cmp
add
sbb
push
stc
dec
lock
push
pop
cli
mov
mov
dec
int3
subl
sti
add
insb
push
or
jo
cmc
sub
pusha
push
stc
mov
ret
adc
fstpt
jne
test
push
test
pop
mov
movsb
jmp
jmp
push
stos
test
cltd
shll
mov
in
pushf
cmp
xor
sbb
sti
cmp
add
test
pushf
call
xor
stc
js
adc
jmp
adc
out
mov
sub
adc
or
loop
pop
add
popa
stos
lahf
ja
fidivl
cmp
lods
add
and
mov
lahf
enter
xchg
pop
iret
aad
jmp
xchg
mov
fwait
dec
pop
inc
out
out
out
pop
lret
jp
into
inc
daa
push
leave
inc
int
hlt
ljmp
sub
lods
pop
mov
movsb
dec
xor
xchg
lods
push
xchg
loope
inc
jp
mov
sarb
sbb
jle
cmp
int
jl
mov
in
nop
sub
rorb
mov
mov
fmul
jg
je
add
test
pop
cld
cwtl
push
out
push
shrl
xchg
mov
or
loop
jb
fwait
aad
hlt
adcb
in
sti
push
fistps
cwtl
mov
push
and
sbb
add
cs
xchg
sub
push
imul
or
or
mov
nop
int
cltd
add
lret
addr16
jg
adc
test
inc
push
jle
dec
out
loop
test
enter
lds
shrb
pop
sub
mov
and
in
adc
pop
inc
mov
and
mov
jecxz
push
mov
stc
adc
pushf
ret
fdiv
mov
insb
push
sub
aaa
inc
mov
jne
pop
negb
adc
adc
mov
adc
es
cltd
jns
fwait
ret
mov
adc
xchg
mov
xor
jo
jne
sarb
mov
jno
idivl
ds
sbb
scas
inc
push
jle
push
mov
popa
cmp
mov
or
mov
lock
daa
dec
fnstsw
fistl
and
and
fcompl
mov
insl
leave
sbb
dec
jle
scas
inc
je
and
dec
mov
xchg
loopne
mov
adc
lcall
pop
mov
das
rorb
fadds
lock
out
add
push
cwtl
stos
test
sub
push
sub
pusha
mov
or
adc
push
sub
lods
dec
insb
sbb
jno
fmull
roll
ret
cmp
dec
mov
push
dec
cmp
stos
nop
std
leave
jecxz
out
test
std
sub
jne
addr16
jle
inc
mov
rcrl
and
jns
mov
adc
popa
xor
push
mov
int
in
mov
push
leave
ret
out
push
test
adc
loop
pop
push
fsubrs
jne
jno
dec
pop
popf
cmc
xchg
mov
push
aad
xor
aas
dec
mov
pop
mov
ja
mov
dec
pop
push
out
sbb
rorl
xchg
clc
lret
cld
mov
push
pop
lds
xchg
das
or
stc
inc
add
xor
arpl
cmpsl
int
pop
cli
imul
outsl
fcom
imul
pop
cmpsb
shrl
pop
push
dec
inc
xchg
mov
or
test
nop
add
lcall
cwtl
orl
push
pop
clc
or
test
dec
lods
js
hlt
xor
push
push
jae
pop
push
cmc
ret
roll
jmp
and
inc
bound
or
pop
arpl
movb
jl
addr16
jnp
dec
data16
ja
xor
test
add
push
sub
inc
loopne
push
fdivl
dec
hlt
xchg
lods
and
pop
jp
or
call
repnz
js
call
scas
xchg
dec
cli
daa
inc
fisttpl
sbb
popf
ja
int
ficoml
test
adc
lods
hlt
mov
dec
test
pop
out
in
pop
push
cmp
aas
mov
adc
cltd
inc
ror
push
sbb
jg
and
icebp
push
imul
rcrb
orb
xor
mov
cmp
test
je
bound
pop
sbb
sub
xor
sarb
dec
out
imul
imul
xor
xlat
or
sub
popa
adc
inc
mov
adc
popa
add
pop
inc
cmp
jnp
sti
pushf
js
aaa
mov
ret
pop
mov
fsubp
js
test
mov
pop
cli
mov
adc
sbb
loopne
lret
add
shrl
mov
in
fs
pop
scas
sbb
jecxz
add
xchg
adc
mov
fdivl
inc
and
inc
lcall
inc
pop
aaa
sbb
jbe
pusha
and
cmpsl
sbb
mov
notl
sub
mov
je
mov
jle
inc
scas
mov
xchg
pop
or
inc
call
enter
rcrb
pusha
dec
out
js
sbb
push
test
sub
mov
movsl
dec
or
repnz
or
push
lods
jb
push
lret
sti
add
subl
push
cli
decl
jnp
pop
fcomps
bound
mov
js
jl
cmp
decl
fcmovbe
iret
bound
mov
movb
adc
adc
ja
dec
pop
cmpsb
jns
xchg
bound
jno
pop
push
lods
negb
xor
negb
out
sbb
cli
cmp
addl
out
inc
call
inc
je
push
mov
loopne
aaa
adc
push
mov
add
pusha
mov
sbb
out
scas
add
movsb
xor
mov
dec
push
mov
cmpsl
mov
fsub
enter
add
add
aam
sbbl
jecxz
xor
cld
mov
scas
adc
loopne
mov
and
pop
repz
and
pop
cmp
add
xchg
sub
cmpsl
mov
xchg
cmpsl
mov
inc
fsubs
imul
inc
out
mov
dec
inc
js
imul
test
fcmovu
and
mov
outsb
lahf
adc
add
in
xchg
push
scas
sub
lret
pop
std
movsb
icebp
mov
out
mov
xchg
add
mov
test
lret
adc
xchg
lods
jb
leave
dec
ret
hlt
insb
dec
dec
lcall
test
cmc
in
roll
push
sub
shrb
pop
stc
into
pop
lock
cmp
inc
xlat
push
or
pushf
pop
and
int
xor
jb
sti
test
inc
mov
lods
mov
cmp
xchg
add
cmc
jp
fiaddl
cwtl
pop
dec
out
xor
mov
mov
out
rcrb
data16
xchg
mov
cmc
les
out
push
data16
xor
pop
adc
jne
inc
popf
pop
pop
fdiv
mov
and
lods
fnstenv
sub
push
jno
or
fildl
lods
fimuls
je
mov
int3
out
fidivrl
andl
sti
jno
popa
mov
add
gs
pop
in
mov
cmp
lret
ret
push
xchg
idivb
xor
outsl
insl
mov
inc
hlt
imull
cld
dec
pop
das
outsl
jecxz
decb
add
test
sbbl
ret
hlt
sti
and
jns
out
int
add
loop
and
fdivrl
mov
arpl
in
aam
ja
fs
aam
push
push
and
lret
aam
bound
xchg
rorb
lahf
stos
incl
movsl
mov
testb
arpl
movsb
jnp
daa
adc
fcompl
icebp
adc
pop
sub
ror
hlt
enter
lahf
jmp
data16
divb
push
dec
xor
std
lods
adc
aam
or
pop
test
dec
lret
or
mov
ljmp
sbb
dec
push
aas
mov
jmp
push
mov
xor
push
and
mov
loop
sub
xchg
and
int
les
sub
or
adc
scas
xor
pop
xor
jns
aas
scas
jbe
sub
sarl
das
lods
cmp
push
mov
cmp
or
adc
mov
imul
xchg
xchg
out
xchg
pushl
mov
rcrl
sbb
ret
xchg
xchg
add
out
inc
push
xlat
adc
fists
xchg
mov
add
mov
movsl
incb
sbb
daa
fwait
pop
xchg
xchg
sahf
add
mov
sub
push
push
out
in
xchg
scas
xchg
mov
mov
mov
int
push
mov
cmp
jns
inc
test
lcall
dec
sarl
clc
roll
aad
ja
sub
xchg
lea
repnz
mov
xchg
hlt
lock
sbb
rcrb
pop
push
mov
nop
mov
push
in
mov
scas
fsubrs
mov
ss
mov
or
cmp
paddd
pop
dec
loopne
into
jno
ja
ficompl
iret
gs
jmp
leave
repz
cmp
xor
cltd
test
adcb
je
aaa
sbb
je
or
sbb
imul
pmaxsw
jo
and
cmp
xor
addb
cmp
test
mov
jns
and
push
mov
arpl
das
fmull
test
popa
mov
daa
jle
sub
ffreep
xchg
dec
mov
fimull
lock
bound
mov
addr16
rcrb
pop
adc
pop
jge
dec
lds
jns
jae
pushf
inc
scas
xchg
pop
jo
int3
jecxz
sbb
adc
ja
push
push
inc
mov
push
jge
sbb
mov
mov
push
adcb
rcrb
xchg
jbe
lcall
fcmovne
test
cmpsl
mov
mov
fldt
stc
mov
xchg
add
inc
sub
pop
negl
push
shl
jle
jne
jmp
pop
mov
sbb
ja
xchg
mov
or
push
pop
sarl
nop
stos
pop
aad
hlt
fmuls
clc
xchg
pop
pusha
aad
popa
leave
mov
push
popa
lods
jb
pop
fsubr
dec
push
testb
fcoml
mov
mov
sarb
and
andl
fs
cmp
mov
outsl
dec
inc
sub
pop
popa
adc
fldt
ret
test
xor
mov
push
shrl
mov
push
inc
inc
fnstsw
lock
pop
mov
inc
sbb
inc
xor
sti
or
xor
push
sub
dec
lds
outsb
mov
mov
mov
cmp
insl
gs
hlt
js
inc
int
cmp
fistps
stos
dec
xchg
xor
mov
xchg
ret
aad
and
outsl
dec
loop
inc
push
std
xor
cli
add
jns
jmp
ja
inc
mov
mov
xchg
and
out
inc
sbb
cmp
mov
cmp
lea
pmaxsw
pop
and
ja
dec
xchg
fucomip
into
lods
inc
fcomp
ds
mov
pop
imul
mov
loope
pop
pop
jae
dec
in
xchg
dec
sub
test
mov
lahf
negl
in
mov
cmc
push
stc
aam
in
add
or
lret
lret
pushl
insl
xchg
lea
xorl
cmpsb
dec
inc
jecxz
loop
popa
aam
es
je
pop
inc
repnz
lea
push
lock
sbb
mov
arpl
fwait
xchg
sbb
imul
mov
jbe
dec
cwtl
inc
pop
mov
mov
adc
adc
ss
jo
out
adc
xchg
pop
call
pop
cmp
pop
inc
loope
mov
or
pop
fists
mov
pop
repnz
daa
cmp
push
sbb
cld
inc
or
push
jg
jl
fisubrs
stc
movsl
cmp
jno
test
or
pop
xchg
sub
in
out
xchg
cmp
aaa
out
movsl
testb
aaa
shl
es
mov
pop
nop
in
shrb
roll
jle
cmp
dec
mov
jmp
sahf
ljmp
notb
cltd
aam
mov
jg
pop
mov
mov
mov
and
xchg
lds
xchg
sub
sbb
test
and
sbb
icebp
inc
adc
jns
xor
aad
rclb
in
sti
xchg
sar
shrl
cli
cli
sbb
cmp
aas
mov
jbe
push
test
mov
cld
pop
sbb
arpl
sub
mov
dec
mov
repz
and
sub
icebp
lea
pushf
xor
inc
sbb
shl
mov
aad
js
fnstcw
push
or
int
pushf
jae
and
adc
push
jmp
inc
sbb
mov
jo
and
add
pop
shr
test
dec
pop
les
xchg
adc
dec
scas
in
jns
leave
cltd
and
jmp
xor
je
call
cmpsl
ds
fimull
lea
pop
push
mov
enter
push
jmp
jge
movsb
ds
adc
and
xor
cmp
aaa
or
dec
sub
sub
xor
ficoms
ljmp
push
in
repz
test
jns
fsubrs
inc
pop
divb
push
in
cmp
sub
or
addr16
mov
pop
sub
repz
jl
enter
dec
or
and
jge
cmc
xchg
cmp
xchg
xor
adc
xchg
daa
fisubrl
scas
add
pop
int3
loop
xor
fisubrl
je
fsubs
out
sti
lock
popa
and
cmc
ds
jo
out
mov
fnstenv
ror
inc
push
andb
jl
mov
xchg
ljmp
insb
cmp
dec
ret
movsb
jge
push
cmp
xor
inc
mov
push
jno
ljmp
cmp
sbb
adc
ds
mov
pop
mov
insl
pop
fists
xchg
sbb
into
jns
xor
repz
adc
inc
test
imul
mov
pop
xor
xor
push
in
das
push
dec
insl
mov
cmc
shll
cmp
dec
pushf
test
mov
repnz
cmp
adc
pop
adc
jo
cs
sub
es
jnp
sahf
adcb
int
and
pop
enter
mov
mov
fldt
rolb
aaa
stos
lret
cmp
mov
pop
pop
out
mov
push
or
jg
xchg
outsb
test
xor
movl
dec
mov
movsl
fisubrs
dec
std
jnp
push
push
sbb
jno
loope
sahf
cmp
repz
jmp
xchg
dec
ds
jnp
sahf
inc
ret
mov
repnz
aad
sahf
data16
clc
push
outsb
je
stos
out
dec
sarl
outsl
sub
mov
jg
mov
ret
push
mov
push
les
js
push
or
sahf
sbb
and
stos
outsl
movsb
lea
jge
pop
scas
or
insb
sbb
push
push
out
or
je
mov
xchg
push
mov
lcall
mov
test
into
aad
ds
out
jp
cltd
gs
pop
mov
scas
test
jge
out
cld
notl
mov
cmc
inc
mov
notb
dec
iret
mov
cmc
mov
dec
xchg
subb
imul
aad
and
scas
pop
lahf
xchg
test
pop
xor
ret
js
mov
popa
iret
loope
loop
mov
or
adc
ss
cmp
pop
adcb
push
or
jle
xchg
mov
xchg
sbb
sarl
cmc
lcall
outsb
push
jae
mov
popf
xor
and
mov
adc
dec
popa
dec
movsl
scas
aad
push
adc
mov
out
xchg
sub
pushf
out
enter
jae
mov
and
mov
mov
mov
push
add
sbb
fs
cmp
ljmp
mov
add
cli
mov
jae
fdivs
xor
sarl
fsubrs
iret
test
in
dec
dec
push
int
mov
sbb
inc
pop
adc
mov
jmp
outsb
jl
cmp
inc
shr
sbb
ret
mov
cmp
addr16
push
sub
cmc
mov
cmc
ret
pop
daa
arpl
aas
pop
shlb
aad
imul
repnz
cmp
out
repnz
negb
lock
mov
add
lahf
cld
xchg
rcll
sbb
imul
inc
jmp
or
enter
add
out
ficomps
das
inc
sti
pushf
pcmpgtd
lods
mov
cli
or
or
ds
jmp
xchg
xor
sbb
stos
test
repz
xor
lret
sbb
push
push
mov
insb
das
and
pop
orl
push
icebp
xchg
adc
int
sar
mov
and
packssdw
xor
fstps
loope
cli
in
jg
cmp
pcmpgtb
aad
sti
fucom
dec
mov
push
dec
cmc
add
sub
add
fwait
test
jecxz
push
push
inc
adc
pop
mov
or
call
adc
mov
mov
fldt
bound
mov
inc
mov
fsts
pop
push
mov
adc
cmp
mov
fimuls
js
aad
sub
pop
push
lcall
cli
and
leave
mov
scas
out
sbb
orb
push
pop
leave
int3
dec
sti
jmp
mov
push
lock
arpl
jo
std
leave
pop
mov
mov
lea
and
jnp
sub
ret
pushf
mov
aad
stc
add
dec
sbb
xor
int
ljmp
clc
mov
xchg
adc
pop
test
jmp
subb
cmp
shl
xchg
movsb
sahf
cltd
std
xchg
das
call
aam
incl
jo
add
xor
cmp
push
insl
faddl
out
stc
js
mov
arpl
into
jl
jg
and
mov
bound
xchg
and
lods
mov
inc
pop
je
mov
xchg
es
mov
cltd
add
dec
incb
das
outsb
xchg
pop
push
adc
insl
cmp
mov
dec
repnz
loop
pop
nop
dec
jge
sbb
ljmp
arpl
sub
aad
in
add
push
xlat
outsb
mov
clc
or
std
rclb
mov
aad
fsubrp
xchg
div
mov
push
repz
or
mov
fsubrs
mov
xchg
inc
inc
in
out
loope
jb
and
cltd
lret
clc
push
push
or
or
loop
cli
mov
add
mov
pop
and
arpl
cmpb
pushf
ljmp
cmp
in
dec
aam
cmpb
or
subb
sub
js
rolb
sbb
mov
pop
push
or
jge
mov
sub
out
mov
or
mov
add
add
int
adc
fnstenv
cmpsl
add
sti
adc
cmp
pop
cmpsb
adc
mov
loope
aaa
lods
push
push
dec
in
pop
dec
ds
mov
jge
inc
xor
inc
pushf
movsl
xchg
dec
mov
inc
and
std
loop
pop
aam
testb
cmp
movsl
icebp
inc
loop
nop
cmp
xchg
dec
iret
xlat
dec
mov
rcl
pop
jo
jns
push
inc
fcoms
mov
xor
rcl
dec
jbe
mov
push
jmp
fstps
jnp
adc
call
mov
aas
repz
xchg
or
enter
insb
or
sbb
nop
shll
repnz
push
pop
fwait
push
mov
cmp
xchg
pushf
or
push
hlt
sbb
xlat
enter
mulb
cmc
data16
jo
push
loop
lods
adc
xor
pop
scas
push
scas
or
dec
mov
jg
fisttpll
data16
push
cli
stc
mov
jb
loop
aaa
and
test
adc
shrl
pushf
xchg
addr16
sbb
sahf
pop
out
test
xor
xchg
and
dec
and
fstl
inc
mov
fucom
cltd
pusha
pop
pushl
mov
and
sub
xchg
jle
leave
leave
xchg
mov
les
arpl
lahf
das
mov
stc
lea
punpckhbw
pop
mov
and
ret
inc
in
cmp
mov
loope
lea
bound
pop
jg
fidivl
and
xor
and
cmp
xor
js
jne
in
movsl
jo
ds
je
jl
cmp
jp
adc
or
cmpsl
rcr
lea
popf
push
adc
jmp
daa
mov
ret
pop
inc
ljmp
icebp
call
xor
sbb
sbbb
or
push
imul
aad
mov
scas
jg
mov
addr16
push
decb
cmp
pusha
dec
stos
pop
fcmovnb
cmp
fldcw
dec
loope
mov
mov
dec
add
stos
cmp
sbb
cmp
or
cmp
aas
mov
and
and
adc
add
stos
inc
cmp
xchg
xor
mov
ds
test
inc
and
xor
push
cmp
pop
jnp
addr16
movsl
xlat
jmp
mov
jecxz
dec
stos
jge
std
cmp
inc
cli
loopne
sub
inc
lods
jp,pt
mov
aad
sbb
dec
jecxz
out
fsub
lret
je
cmc
popa
mov
inc
mov
imul
xor
jle
xchg
push
xor
or
sbb
sahf
xor
imul
icebp
push
insb
movsb
mov
xchg
notl
mov
sbb
sbb
gs
mov
jns
sbb
add
lds
mov
aam
and
jne
and
imul
repnz
jbe
ss
jns
jne
inc
cmpsb
cmp
call
mov
jge
mov
je
lea
aam
movsl
cmp
iret
add
cmc
std
jb
insb
lahf
jbe,pn
pop
xchg
lea
cwtl
push
mov
inc
xchg
cmc
cmp
mov
sti
movsl
lcall
inc
pop
test
inc
pop
pop
hlt
mov
stos
shll
push
inc
push
jp
andl
xor
jbe
test
or
shrb
cmpsl
cltd
into
jp
rcll
jl
dec
pop
pop
scas
dec
outsl
xor
mov
mov
test
shlb
movsl
and
xchg
les
mov
out
mov
or
xchg
mov
sahf
cs
repnz
mov
std
loop
test
or
pop
push
testl
loopne
inc
push
gs
das
repnz
adc
loop
sub
push
enter
test
jnp
imul
or
cmpsl
sub
testb
mov
lock
and
push
add
xor
jmp
or
out
loop
and
cmp
or
mov
jb
xchg
out
push
mull
popa
fwait
mov
push
outsb
add
in
mov
outsb
mov
dec
cli
push
jecxz
push
add
or
outsb
xchg
jp,pt
rorb
cli
adc
jge
fidivrl
cmpb
cmp
jae
lret
scas
xchg
dec
sub
sbb
cmpsb
movsl
mov
mov
pop
push
outsb
stc
lods
lds
ret
and
sbb
loopne
pop
inc
push
inc
inc
shll
pop
call
pop
inc
lock
lret
aam
mov
mov
xor
repnz
das
or
in
pusha
sbb
insb
iret
dec
lcall
fildl
les
hlt
dec
shrb
sub
mov
cli
rclb
or
push
and
shlb
lret
add
add
cmp
mov
loopne
ja
movsl
adc
push
jecxz
fs
mov
repnz
dec
adc
xchg
daa
jae
fwait
das
icebp
ret
hlt
pop
jno
jnp
or
ret
loopne
add
lea
xor
ds
les
outsb
insl
cmc
shrl
xor
test
arpl
mov
and
jmp
into
or
aad
mov
mov
pop
call
and
adc
in
mov
jmp
mov
out
in
int
sti
xchg
movsb
xchg
test
sbb
mov
test
dec
xlat
mov
outsb
fcomps
jo
rcll
divl
push
les
cmpsl
loopne
in
mov
fistpl
sbb
dec
jae
cwtl
sub
lahf
mov
sahf
dec
mov
scas
aaa
pop
cmpl
lock
xchg
cmpb
adc
and
sbb
xchg
mov
dec
xor
lcall
fisubl
ficoms
jp
test
pop
add
or
insb
pop
dec
loope
jbe
mov
je
sahf
and
iret
in
jbe
mov
add
mov
push
mov
out
jbe
xchg
sub
ret
push
or
test
jge
test
mov
mov
jne
out
push
lods
xlat
rcl
out
scas
ds
push
push
clc
inc
lods
fstpt
rcll
dec
arpl
mov
js
movsl
lock
push
xchg
pop
call
fcom
outsl
inc
adc
sbb
std
and
adc
int3
jno
xchg
adc
pop
and
jle
ja
dec
xor
xchg
jb
fwait
xchg
outsb
inc
sub
out
cmc
testl
pusha
push
push
jmp
mov
push
cmp
popa
inc
clc
outsb
jae
jge
pop
jae
jne
mov
fcoms
int
ljmp
mov
int3
iret
shlb
aas
push
mov
es
pop
xor
sbb
xlat
frstor
stc
sbb
sub
ds
cs
inc
push
mov
scas
sbb
xor
test
xor
cli
pusha
fidivl
rcll
dec
cli
lret
mov
push
push
xor
and
mov
jl
xchg
adc
nop
scas
enter
cmp
outsl
and
movsb
rol
or
aaa
js
mov
jl
sti
inc
nop
push
test
xchg
testl
out
test
out
sub
mov
ret
jae
sub
and
jb
xor
cvttps2pi
mov
add
and
aad
lcall
or
push
push
jge
push
les
xchg
dec
lods
stc
inc
fisubrs
jae
push
dec
scas
sbb
push
aas
ss
in
cmc
aam
test
jl
mov
push
shll
inc
xchg
xor
lds
scas
mov
add
fdivs
lret
js
pop
popa
jno
stos
cmp
pop
pop
add
jbe
int
decl
test
es
aam
test
arpl
adc
cwtl
cli
and
iret
cmp
enter
sbb
jle
aas
dec
pop
pop
dec
arpl
push
mov
sub
mov
fsubp
sub
mov
xchg
loope
jl
mov
scas
notb
stos
shlb
jp
or
out
xor
ret
mov
out
mov
lods
mov
inc
sub
mov
jecxz
jge
xchg
jbe
inc
lock
mov
jmp
pop
mov
and
fidivrl
jo
inc
jb
addr16
lods
mov
out
fsubl
mov
jmp
xor
imul
pop
cltd
pop
dec
fmulp
mov
and
fcmovb
aaa
int
cmpb
xor
dec
imul
mov
aam
pop
cmp
mov
int3
scas
cmpsb
loope
and
ret
repz
mov
cs
jbe
repnz
xor
or
mov
int3
dec
pushl
data16
cmp
jne
mov
pop
add
nop
push
push
push
insb
fisttps
stos
push
fld
pop
addr16
stc
mov
xchg
fwait
cmp
scas
mov
jl
adc
or
in
daa
out
cwtl
push
int
xor
js
cmp
lock
adc
or
pop
adc
or
test
and
out
push
xor
adc
sbb
in
call
lea
push
mov
mov
shlb
out
gs
or
ss
imul
or
mov
jns
sub
pop
jg
pop
ja
jg
xchg
add
mov
dec
lret
fdivrl
lret
std
adc
jmp
lahf
xlat
xor
aaa
lea
fsubrl
push
pop
inc
movsb
add
lret
cld
or
pop
and
jbe
decl
mov
fdivs
int
fisubrl
xlat
mov
ja
push
add
sbb
iret
sub
mov
pop
fs
ds
sbb
sub
xor
jne
xchg
xchg
push
popf
notb
outsl
inc
push
add
dec
loopne
fucomi
pusha
fldcw
out
dec
fistl
flds
push
push
ljmp
lds
fidivs
sub
in
les
loop
faddl
push
or
push
sbb
cmp
jo
ror
fsubrl
push
xlat
insl
loopne
push
sarl
dec
lcall
inc
mov
repnz
shlb
push
jnp
fimuls
xor
aam
psrad
out
lods
out
dec
cmp
in
call
into
sbb
jmp
sti
or
mov
into
dec
nop
repz
pop
mov
int3
shl
xor
mov
cmp
jae
inc
enter
cmp
add
gs
pop
sarl
pusha
test
inc
ljmp
gs
sub
into
dec
int3
and
sub
ja
sbb
pop
pop
iret
std
mov
pushf
cmp
test
and
adcl
jbe
test
sahf
nop
sbb
filds
call
xor
hlt
mov
adc
dec
sub
pop
xchg
sub
les
cltd
mov
push
out
sub
shll
repz
cli
ja
jbe
jb
popa
ss
inc
fisubl
lods
lock
sbb
dec
fwait
sti
jl
movsb
repnz
adc
mov
jb
fildl
test
fwait
mov
push
fidivrl
sbb
sti
pushf
add
test
or
dec
mov
inc
inc
add
les
jl
push
fcomps
jns
daa
jno
sbb
push
cwtl
inc
jb
in
xor
mov
negl
loopne
iret
out
bound
into
pop
cwtl
sbb
mov
aam
mov
notb
cs
jecxz
and
mov
push
aam
xor
xchg
test
push
jp
pusha
lods
daa
das
pop
dec
test
dec
dec
sbb
fs
cwtl
fdivrl
dec
cmp
adc
cmpsl
push
and
lds
sub
push
jle
jle
mov
cmp
fldenv
lret
mov
cltd
add
inc
imul
jmp
fwait
sbb
nopl
sbb
lods
fbstp
loop
add
pop
xchg
push
sub
xor
jnp
adc
cld
pop
int3
pusha
popf
fucomp
cltd
ja,pn
sbb
cmp
idiv
out
and
mov
cli
imul
sahf
or
dec
push
mov
sti
push
jbe
fistps
xor
mov
cwtl
and
movsb
mov
out
int
mov
sarb
stos
push
cmp
in
inc
xor
mov
mov
xchg
sub
dec
js
iret
mov
push
daa
ret
lcall
popa
subb
fs
imul
mov
test
inc
fwait
call
sub
enter
pop
xor
mov
jle
cli
xchg
icebp
cld
sbb
adc
xor
gs
stos
push
clc
sahf
xchg
or
cwtl
cmp
lret
mov
lahf
mov
cmpsb
and
pop
push
leave
jle
lea
in
and
and
mov
sbb
int
bound
push
addr16
imul
xchg
add
push
call
or
repz
add
pop
int
lods
adc
mov
jp
push
cmc
xchg
cmp
xchg
fisttpl
jge
xchg
push
mov
xor
imul
jbe
repz
decl
xchg
fs
pop
sub
imul
and
inc
femms
mov
adc
popf
fidivs
or
cmp
rcrl
sti
push
fst
sbb
dec
and
jl
pop
sbb
dec
xchg
lods
cld
ss
rorl
idivb
addr16
popf
leave
int
mov
gs
lods
pop
bound
mov
and
jge
das
mov
fldl2t
cmp
push
adc
lahf
inc
dec
shl
bnd
pusha
mov
nop
daa
mov
outsb
adcl
or
out
sbb
xchg
into
adc
adc
stos
and
es
jle
out
sub
xor
pop
xor
cmp
inc
jecxz
xchg
pop
push
push
push
sbb
das
into
sbb
dec
push
outsb
add
les
popa
mov
add
jge
inc
enter
lea
inc
dec
stos
xor
mov
rol
adc
mov
fdivr
xchg
dec
push
icebp
enter
std
sbb
inc
xor
jmp
fcoml
lret
stc
push
xor
push
sub
pusha
repnz
mov
pop
or
lods
repnz
stos
sub
push
inc
jmp
icebp
jae
arpl
push
jmp
std
adc
ljmp
jne
add
inc
js
stc
shlb
xorl
ret
fucomip
cmp
sub
mov
leave
and
dec
out
lret
jp
xchg
mov
das
sbbl
jmp
roll
xchg
scas
inc
bound
in
cmc
dec
fwait
push
loopne
nop
aam
push
es
lret
es
dec
jecxz
repnz
lret
xchg
add
xchg
jecxz
dec
out
push
fwait
es
daa
fs
loopne
test
dec
aas
stos
outsl
cmp
test
jg
and
lds
dec
insl
fstpl
mov
pop
dec
sbbb
lcall
pop
dec
adc
inc
and
pop
test
xchg
jne
dec
loopne
fstl
lock
sbb
clc
mov
jo
push
ficompl
into
out
jae
and
push
xchg
adcl
lods
mov
lret
jo
mov
mov
pop
ljmp
fildl
icebp
jae
insl
xchg
cwtl
mov
fs
fldl
lcall
and
lock
ds
lcall
out
outsl
enter
pop
dec
in
cmpsb
shrl
imul
hlt
adc
test
fdivrl
xor
inc
shll
mov
jg
adcl
jg
fdivl
and
inc
add
pop
and
shll
insl
xor
inc
gs
call
data16
stc
fucomi
rcl
sub
adc
cmc
mov
xor
sub
int3
shll
mov
aad
cmc
mov
dec
cmp
add
aaa
adcb
jb
ret
and
shlw
in
int
aaa
dec
add
cmpb
nop
and
fs
cmp
bound
test
cld
outsl
punpckldq
in
xor
test
idivb
sub
xor
icebp
jns
and
inc
gs
sub
arpl
sbb
scas
test
ret
and
and
dec
adcb
lret
lods
rep
adc
sbb
xchg
leave
fidivl
adc
std
mov
pop
sahf
pop
cmpl
popa
andl
cmc
xchg
incl
pushf
daa
pop
pusha
dec
pop
mov
ret
and
mov
or
sbb
cmp
out
imul
xchg
xor
push
repnz
cld
cmc
loopne
jmp
pusha
add
mov
cmp
fcompl
fnstcw
ficomps
cld
rclb
mov
inc
or
adc
or
sub
mov
mov
aam
inc
or
cmp
adc
mov
sbb
ficoml
jb
mov
clc
inc
mov
insb
mov
ljmp
mov
movsl
cmp
in
sbb
mov
mov
addr16
push
test
sbb
cltd
push
mov
xchg
in
push
fisttpll
insb
jecxz
arpl
aaa
push
bound
mov
sub
ja
js
dec
pushw
lcall
add
mov
mov
loopne
add
fxch
out
dec
scas
rol
cs
test
pop
sbb
rcr
pop
scas
cld
cmp
mov
loopne
xchg
mov
sub
jmp
dec
loopne
imul
jno
movlps
inc
xchg
mov
je
ret
dec
dec
cmpsb
in
dec
mov
aas
sub
adc
frstor
sti
andb
add
cld
hlt
addl
xor
mov
mov
pop
and
dec
in
sub
dec
aad
mulb
jo
sub
lds
jns
mov
sub
sub
ja
dec
loop
mov
es
scas
pop
sarl
gs
popa
lret
mov
cltd
or
pop
mov
cwtl
imul
and
xor
dec
sbb
mov
xor
xchg
loope
cmpsl
xor
mov
sbb
xor
ja
xor
adc
mov
fucomp
and
or
lods
add
sarb
inc
sub
adc
repz
jmp
out
cld
jmp
cmpsb
daa
cmp
dec
sub
mov
mov
sbb
mov
mov
cmpsb
das
cmp
stos
dec
cs
push
enter
jecxz
mov
or
sub
mov
mov
lcall
out
test
in
xor
fsubs
mov
cbtw
push
test
jne
mov
je
js
iret
dec
scas
xchg
xor
enter
fisttps
rorb
lcall
dec
cmp
add
mov
cmpsb
loopne
inc
popf
aaa
pushf
xor
add
repz
adc
out
pop
xchg
push
dec
cmp
mov
rcl
dec
mov
sbbl
inc
dec
bound
clc
cmpsl
and
push
in
cld
pop
cltd
pop
push
sti
notb
jns
jmp
in
and
gs
mov
sub
pushf
inc
lret
inc
jns
xchg
mov
int3
repnz
xor
dec
sub
lds
inc
les
dec
fidivl
sbb
jnp
ficomps
aas
gs
std
aaa
into
adc
leave
dec
xchg
test
lock
test
inc
push
mov
mov
and
daa
inc
in
xchg
test
shrb
sbb
jo
icebp
push
and
ljmp
popa
int3
lret
cld
pop
pop
jne
outsl
cmp
das
das
call
ss
jae
shrb
mov
adc
mov
or
int3
lods
or
lret
enter
push
cwtl
push
ja
cmpsb
les
cmpsb
inc
out
sbb
add
mov
mov
les
movb
iret
je
mov
xor
scas
cmp
in
shrl
or
scas
cmp
dec
arpl
cmp
fnsave
test
xchg
adcb
aaa
ret
jno
add
test
pop
rep
or
mov
pop
or
jle
and
cmpsl
out
sbbl
mov
in
sbb
popf
dec
xchg
push
ds
pop
sahf
mov
xchg
adc
push
sbb
popa
enter
xor
out
out
xor
cmp
hlt
pop
mov
push
aas
cmp
fldl
push
mov
adc
add
jbe
inc
pop
sbb
stos
or
out
aad
in
jb
test
or
mov
test
stos
mov
aam
fadd
fcomi
inc
mov
xor
pop
mov
loopne
xor
pushf
and
fwait
and
add
jmp
imul
pop
xor
js
cmp
stc
imul
idivb
sub
dec
pop
out
sti
in
cltd
jnp
mov
jle
cltd
mov
push
or
xchg
sbb
faddl
aam
jne
scas
add
cmc
cmp
sets
jg
add
adc
cltd
and
cmp
push
hlt
addr16
fstps
xor
xor
fs
ror
and
adc
xlat
mov
mov
sbb
repnz
push
cmp
mov
cltd
shr
xchg
rcll
cmp
cmpsl
mov
lret
sub
adc
decl
push
lods
dec
int
inc
iret
mov
xchg
adc
mov
lret
jns
mov
iret
and
outsb
popa
stos
ret
cmc
lret
push
ret
int
push
cltd
dec
data16
xor
adc
ss
data16
repz
fdivl
adc
xor
dec
push
push
out
sbb
fcoms
lods
aaa
lds
rclb
xor
jmp
push
jl
cmp
xchg
mov
mov
les
faddl
cltd
add
jae
sbb
xor
call
add
fisttps
loop
cmp
pusha
mull
or
lcall
std
and
data16
fldl
psadbw
sahf
xor
popa
and
push
pop
mov
jge
ffreep
das
lds
push
pusha
aam
mov
or
push
mov
add
xor
push
mov
cwtl
add
imul
pop
lahf
addr16
aad
sbb
pop
jp
mov
test
push
push
and
mov
mov
movsb
fs
jp
loope
call
cmp
jl
add
mov
push
xchg
cmp
lret
ss
aad
in
mov
mov
jns
loop
lods
dec
and
jl
xorb
pop
rcl
pop
add
xor
xchg
fsubl
cmp
int3
push
bound
pop
cmp
dec
sub
xchg
paddsw
jb
shr
mov
cmpsl
pop
fnstsw
movsb
fists
aas
push
mulb
in
cmpsl
bswap
pop
std
inc
je
fists
xchg
adc
sar
or
shlb
lock
test
ja
das
mov
test
scas
or
loopne
ljmp
fcomps
data16
adc
sub
das
outsb
cmpsl
dec
fidivs
jns
retw
roll
out
into
out
push
aas
shll
mov
pusha
push
mov
adc
mov
adc
repnz
add
add
mov
bound
in
aad
sub
movsl
ss
adc
gs
push
sti
xchg
in
cmp
out
sahf
int3
adc
jecxz
push
push
arpl
pop
xlat
xor
imul
mov
adc
les
push
rcrb
aad
test
add
addr16
sbb
ljmp
test
out
bound
sti
xchg
push
xor
mov
xchg
sbb
mov
cmp
movsl
push
mov
cld
mov
push
shll
jno
mov
sbb
push
mov
dec
jns
sbb
les
stc
in
mov
push
sahf
mov
ret
pop
add
mov
or
push
cmp
dec
loopne
pop
outsb
adc
mov
es
in
lahf
sub
pop
pop
add
shlb
repz
out
sti
fcoml
insl
push
mov
mov
fildll
out
jne
lds
xchg
dec
inc
hlt
insb
fbstp
pop
jle
loopne
xchg
jg
push
in
mov
push
pop
inc
pop
cmp
sbb
scas
mov
xlat
scas
insb
or
sbb
mov
call
mov
adcb
daa
cmp
jb
cmpsb
in
jnp
jmp
jno
dec
xor
lock
or
inc
sahf
insb
sbb
int3
sub
mov
scas
add
mov
pop
pop
jne
adc
popf
ljmp
pushf
scas
out
dec
addl
outsl
push
xor
jecxz
pop
mov
add
push
iret
cmpsb
mov
popa
xor
sbb
and
or
imulb
mov
cld
or
loopne
sar
js
in
jns
sbb
mov
jp
pop
xchg
shrb
jl
dec
push
insb
mov
into
fucomi
decl
sub
push
cld
sub
or
rorb
fstl
push
or
pop
sbb
mov
mov
cmp
push
jg
int3
pop
push
and
test
mov
cltd
popl
arpl
push
das
faddl
jo
testb
sbb
add
in
mov
fisubl
clc
mov
add
mov
xor
or
push
add
xchg
jp
pop
jle
mov
outsb
imul
push
mov
cmp
popa
sbb
push
outsb
fucomp
ror
test
lret
dec
add
outsl
mov
data16
mov
xchg
mov
pushl
cmpb
scas
ss
lock
xor
stos
xchg
ret
sub
add
cltd
xor
loopne
dec
sahf
adc
mov
mov
neg
int
pop
rcr
outsl
dec
pop
mov
mov
xor
pushf
ret
int3
dec
cmp
add
inc
mov
add
jge
scas
in
loop
dec
jae
jg
cmpsl
mov
repnz
mov
shrw
insb
mov
push
sbbb
loop
cmpb
nop
mov
icebp
push
xchg
imul
icebp
movsl
xchg
pop
insl
loopne
cmp
js
sbb
lret
dec
push
pop
and
fnstcw
push
idivl
and
mov
sub
jecxz
es
cmc
cs
sub
pusha
popa
and
sbb
mov
adc
rolb
xor
outsb
inc
es
inc
jmp
out
lea
and
shlb
jge
and
xor
and
jae
mov
loop
cmp
aad
mov
mov
fldenv
lret
jmp
fildl
mov
std
adc
mov
pop
jo
inc
jle
negl
sbb
test
js
in
xor
lret
out
popa
in
mov
rolb
aas
mov
xor
dec
push
movsl
pop
insb
aas
pop
int
subl
mov
pop
adc
scas
mov
sbb
jle
andl
pop
lods
mov
pop
cltd
movsb
xsha256
cmpsb
cmp
jl
das
sbb
clc
jmp
mov
mov
lahf
jge
xchg
push
sbb
sbb
std
xchg
sub
mov
jae
rcrb
cmpsl
ds
jae
inc
mov
cmp
das
pop
dec
lods
sub
cmp
dec
sub
lahf
mov
mov
adcl
aad
ja
mov
pop
lret
or
js
movsl
pusha
fcmovb
enter
sahf
cmp
fdivrs
rorl
jmp
jge
and
gs
nop
arpl
jle
jno
dec
fwait
scas
test
jg
cmp
in
mov
scas
fldcw
or
adc
ret
add
jle
call
push
xor
jno
cltd
mov
cltd
or
addr16
xor
sub
int3
fstl
pop
les
imull
xor
xchg
shrb
gs
fisttps
insl
mov
or
xor
xchg
sbb
mov
cmp
inc
pop
mov
jo
ret
mov
loope
push
gs
daa
pop
jge
js
jg
test
pop
sbb
sub
add
sub
cltd
sub
outsb
cld
cmp
icebp
mov
sub
dec
mov
mov
sbb
push
jg
out
xchg
out
les
or
call
adc
mov
lret
test
pop
cmp
push
mov
stos
xchg
mov
dec
pop
leave
std
dec
dec
fisubl
rcll
dec
dec
inc
cltd
arpl
pop
rclb
pop
jnp
mov
pop
mov
and
ds
mov
in
sbb
sub
mov
stos
out
inc
sbb
sub
fisttpl
sti
iret
mull
and
cmp
fiadds
fbld
cmp
adc
je
dec
dec
pusha
xchg
rcrb
push
adc
loopne
clc
lret
bound
nop
add
inc
cmp
jno
push
mov
mov
xchg
xor
aaa
xchg
add
pusha
andb
xchg
movsb
push
cmc
pandn
jae
inc
loope
jbe
cli
pushf
hlt
mov
sahf
jb
arpl
lea
pushw
mov
test
pop
pop
adc
fldt
cmp
add
xchg
arpl
cs
test
mov
subb
xor
pop
jge
xchg
mov
ja,pt
mov
imul
cmp
jle
ret
mov
leave
fldcw
push
cmpsb
mov
pop
ja
les
add
in
std
shlb
jge
pop
mov
add
inc
pop
in
pop
es
nop
ret
pop
sub
imul
testb
jo
rorl
icebp
lds
jb
rclb
in
sub
inc
mov
mov
xlat
scas
mov
dec
scas
mov
fdivrs
dec
pop
bound
xchg
dec
mov
mov
lcall
stos
testl
jno
int
lcall
cmp
out
pop
idivl
movsl
daa
rcr
mov
add
repnz
fs
xchg
stos
xchg
js
push
aas
mov
pop
cld
pop
or
lahf
aaa
jae
sahf
push
test
inc
mov
mov
pop
fsubs
out
lret
pop
inc
jae
fnstenv
cli
insl
test
arpl
xor
xchg
mov
add
add
mov
jge
filds
and
insl
sahf
xchg
insb
inc
mov
push
cmpsb
out
pop
and
xchg
pop
dec
testl
inc
out
rcl
fisubrs
mov
das
mov
add
mov
dec
dec
cld
cmpsl
pop
rclb
hlt
orl
addr16
adcb
ret
lahf
mov
mov
mov
fidivs
xchg
test
or
int3
movsl
xchg
push
popf
sbb
push
pop
je
pop
nop
test
stos
aaa
push
mov
or
fcomps
mov
imul
mov
mov
in
nop
pop
sbb
xchg
xchg
or
loope
mov
cmp
xchg
sub
mov
pop
xor
adc
sbb
ret
pop
sbb
push
pop
aas
mov
fwait
and
jo
loopne
jp
rorb
fidivrl
sbb
sub
lret
aas
fistl
je
add
xchg
movsl
xchg
push
loopne
sub
dec
mov
enter
scas
loopne
in
xchg
int3
test
push
mov
adc
fcmovnb
hlt
jg
sub
mov
push
lahf
lock
jb
dec
call
inc
mov
ss
push
mov
loopne
enter
jecxz
ja
sbb
popa
in
icebp
iret
xor
enter
dec
mov
push
jae
out
mov
or
pop
pop
mov
inc
sbb
sbb
push
ficompl
clc
ret
mov
dec
cltd
and
cmp
and
les
mov
sahf
aam
mov
mov
inc
or
push
ljmp
out
popa
push
jl
or
clc
xor
movsl
in
or
sbb
fildll
mov
dec
cmpsb
and
push
int
adc
mov
aaa
or
out
movsl
out
xchg
and
pop
rol
sbb
cltd
movsb
dec
out
fcomps
or
stos
push
add
push
subl
add
xor
jbe
push
insb
xchg
or
push
mov
cmpsb
fstps
mov
fsub
mov
xchg
jle
push
mov
gs
pop
xlat
outsb
mov
jle
jmp
jns
lahf
jl
shll
add
cmp
push
jo
jae
mov
fnstcw
mov
jb
lcall
je
push
cmpsb
pushf
mov
lods
xorl
stos
cwtl
mov
popf
mov
out
mov
outsb
push
sbb
inc
push
aad
xchg
xchg
jbe
pop
dec
test
xchg
xor
xchg
xchg
xor
mov
lcall
imulb
push
push
mov
add
idivl
pop
lods
popf
jp
sub
mov
sub
pop
pop
xor
out
inc
push
pop
cmc
xchg
sub
sbb
pop
mov
ret
dec
mov
push
movsb
and
lcall
xchg
sbb
sbb
xlat
jge
fs
and
mov
cvtps2pd
dec
xchg
div
cli
jp
lods
dec
movsl
inc
rorl
jmp
pop
xor
or
jb
jo
push
arpl
jnp
dec
cld
inc
icebp
inc
jge
mov
pushf
mov
jmp
aad
adc
imul
test
loop
adc
test
sub
movsl
sub
sahf
add
sub
xor
mov
push
adc
jae
daa
dec
call
lret
mov
or
sbb
gs
xchg
jge
scas
lret
es
imul
int
rol
push
lahf
sub
add
nop
and
shl
shrb
subl
lock
pushf
shrl
inc
push
sub
sbb
dec
rcll
aam
int3
mov
dec
fucomi
cmpsb
mov
xlat
or
rol
out
xor
lea
push
fldl
sub
das
aaa
push
or
pop
sbbl
or
outsl
dec
push
push
stos
xadd
insb
sub
inc
pop
hlt
movsb
in
insb
add
jnp
and
cwtl
sbb
sbb
mov
clc
sbb
adc
xor
sub
push
int3
cwtl
imul
mov
inc
inc
pop
imul
outsb
es
clc
leave
addr16
cwtl
ljmp
jmp
out
adc
pop
fsubrl
and
push
fidivs
fstl
inc
addr16
cmp
pop
jle
pop
not
hlt
ds
jge
adc
shlb
mov
jmp
or
inc
cmp
daa
test
mov
rclb
clc
mov
jp
dec
es
loopne
cmp
jg
pushf
jmp
inc
sub
cltd
xor
sbb
pop
inc
add
add
and
and
pop
inc
shlb
popl
xor
add
push
push
movsl
rcl
aaa
enter
call
pop
ret
sahf
int
mov
inc
sbb
scas
lret
fmuls
lods
in
rcrl
pop
dec
cli
neg
xchg
in
mov
nop
or
fistpl
scas
or
adc
push
inc
outsb
mov
faddl
out
idivb
and
dec
arpl
jb
mov
push
inc
mov
pop
lock
and
insb
adc
outsl
push
aaa
push
push
in
sbb
data16
mov
imul
cmp
rolb
xchg
push
insl
adc
sbb
and
cmp
vunpckhps
aas
inc
fidivl
push
lds
lods
pop
movsl
aad
test
push
xchg
xchg
pop
or
das
jmp
mov
push
cmp
addr16
es
cld
mov
icebp
mov
push
sti
pusha
sbb
pop
dec
sub
xor
scas
sbb
adc
movsl
add
xchg
cmp
shrl
inc
cli
mov
xchg
imul
gs
jne
push
in
inc
pop
inc
stos
dec
xchg
jl
out
fildll
hlt
push
shrl
adc
sbbl
xchg
add
xor
mov
pusha
aam
aad
clc
cmpsl
fwait
xor
mov
mov
and
lods
std
cltd
test
sbb
or
jle
push
arpl
aam
sub
push
cmc
sbbb
and
add
dec
ds
pop
ds
cmpsb
and
fnsave
aad
xchg
inc
sti
xchg
jne
in
aaa
mov
add
movsb
gs
cwtl
imul
jecxz
pop
jno
mov
mov
sub
loopne
les
lret
sahf
dec
xchg
ljmp
daa
mov
lods
jg
xorl
into
jns
dec
dec
mov
scas
push
sub
shr
mov
xchg
mov
pop
icebp
mov
push
arpl
jbe
data16
xchg
push
push
rorb
pop
inc
xor
mov
aad
xchg
adc
mov
cwtl
testb
and
pop
lock
cmp
lea
add
xor
cmpsl
jo
fcoms
adc
notb
xchg
or
testl
or
pusha
addr16
jecxz
ret
ret
mov
pop
sbb
gs
sub
inc
push
mov
lea
mov
jmp
push
sbb
sub
pop
dec
mov
aaa
stos
mov
adc
mov
cld
and
dec
je
lcall
inc
std
mov
call
js
jle
pop
aaa
xchg
lea
xchg
mov
cmpsl
and
jne
gs
push
mov
lock
clc
in
movsb
pusha
sbb
leave
loop
dec
adc
xor
fidivrl
mov
or
shll
sub
xchg
lahf
imul
test
repz
out
icebp
push
lret
push
ss
lcall
pop
jns
enter
and
stos
shl
stc
adc
bound
mov
xor
lods
inc
sbb
clc
push
mov
out
jbe
mov
jo
jle
mov
xchg
popf
xor
pop
pop
arpl
jb
pop
lea
and
arpl
int3
inc
gs
mov
test
in
jl
pop
dec
mov
movsl
lds
inc
pop
and
cmp
out
cld
xchg
inc
daa
inc
pop
dec
inc
bound
mov
shlb
adc
std
and
mov
pop
xor
inc
in
int3
arpl
sub
enter
mov
mov
push
movsl
jmp
cmpsb
sbb
lods
xor
dec
fldcw
in
out
inc
notb
subb
imul
sbb
mov
add
push
dec
ja
cmpsb
rcrb
repnz
fs
pushf
lods
adc
xor
jge
push
sar
pop
sbb
xchg
dec
jns
gs
push
or
mov
data16
lahf
mov
cmpsl
or
sub
repnz
jns
sbb
cmp
or
ret
and
mov
mov
out
inc
adcb
add
sbbl
lret
add
push
mov
mov
xchg
mov
jbe
mov
out
jno
aam
mov
rclb
jp
push
cltd
je
out
jnp
daa
loope
xor
scas
jbe
mov
jecxz
ss
and
insb
fbstp
mov
lock
adc
cmp
pop
dec
add
xchg
mov
inc
pop
rcll
add
sub
jae
cltd
xchg
adc
cmp
scas
loope
pop
sahf
lcall
jl
popa
sbb
pop
fbld
mov
stos
out
leave
mov
pop
push
or
cmpsb
push
inc
jmp
ret
xchg
fnstenv
nop
and
outsb
adc
xchg
sbb
or
test
cmp
fistpl
fimull
jge
movsb
std
cltd
mov
adcb
and
icebp
dec
pop
dec
mov
mov
mov
aaa
jne
mov
jnp
sbb
repnz
ss
dec
dec
push
xor
or
xchg
popa
pop
pop
push
movsb
out
clc
roll
push
shll
fs
sub
inc
stos
and
popa
sub
test
cmpsb
sub
daa
shrb
mov
lods
xchg
or
and
and
mov
int3
cmp
addb
iret
dec
mov
pusha
fdivl
mov
stos
insl
inc
cli
xchg
jbe
push
xor
add
cwtl
lock
mov
cmp
pop
fsubrp
jae
mov
inc
js
cmp
bound
movsl
movsl
or
lahf
mov
jp
or
cmpsl
pop
adc
or
ds
adc
out
inc
add
scas
je
mov
setnp
sbb
test
fdivrs
xor
in
mov
jae
lods
xchg
xor
and
mov
mov
rcrb
xchg
add
ror
inc
cmp
cmc
insb
or
in
inc
lea
mov
clc
in
sbb
push
sbb
mov
sub
repz
mov
cmc
dec
test
mov
test
jg
ljmp
pushf
outsl
movsl
scas
stos
jmp
sti
shrb
and
and
les
arpl
ljmp
cmp
sub
or
cmpsl
mov
lods
inc
push
sbb
int
popf
sub
cltd
mov
out
ja
push
push
jmp
scas
sbbb
sub
pusha
lcall
cmp
cmpps
sbbl
jle
pushl
push
or
jnp
leave
pop
mov
pop
pop
in
mov
cmp
fildl
shrl
in
xchg
loope
push
cmp
inc
jae
scas
xor
mov
mov
cs
popa
add
es
pushf
cmp
push
mov
mov
adc
ds
shl
push
repz
rcrb
pop
mov
pushf
sbbl
sbb
andb
mov
movsl
and
pop
xchg
mov
repnz
leave
lcall
add
mov
xor
xchg
add
push
push
mov
and
fcmove
icebp
mov
mov
pushf
popf
cmpsl
add
dec
mov
inc
jb
sti
lcall
dec
int
sar
fwait
jns
or
mov
les
out
lcall
das
cwtl
lahf
jb
lcall
je
fldl
adc
xchg
jmp
push
inc
mov
or
js
outsl
push
cmc
xor
xlat
sub
lea
enter
bnd
daa
lock
and
jno
int3
and
popa
test
ret
je
mov
mov
mov
lcall
out
lods
xchg
mov
add
inc
mov
pop
xor
push
mov
shll
les
sub
das
test
scas
loop
sub
lods
inc
cli
int3
adc
xor
mov
das
or
jns
adc
dec
mov
jae
std
movsb
jecxz
cmp
shl
xchg
sub
lods
rol
repnz
ja
or
data16
jmp
xor
jmp
pusha
xor
daa
dec
ss
cli
out
mov
fbld
out
dec
aas
dec
xchg
adc
ret
es
push
inc
pusha
jo
sub
push
jbe
pop
push
push
iret
dec
movsl
xchg
lret
push
lret
int
pop
cmp
mov
mov
std
fistps
sbb
in
adc
cmc
pop
aam
mov
ss
or
add
add
into
and
jge
cmp
mov
push
xchg
jo
pushf
inc
shlb
add
inc
leave
pop
jne
imul
xchg
aam
ret
sbb
dec
sbb
fidivrl
cmp
adc
pop
icebp
arpl
es
icebp
mov
sub
negb
push
scas
fnsave
repnz
cld
out
lcall
aad
mov
xchg
jmp
lods
loopne
shll
xchg
loopne
lds
call
imul
xor
outsb
cmp
xchg
xor
sbb
out
fdivrp
ds
mov
popa
loope
xchg
jbe
xor
leave
mov
roll
aaa
push
scas
sbb
xor
jle
mov
pop
sbb
and
sahf
mov
or
adc
jno
cmpl
push
push
push
mov
test
xchg
insl
addr16
jl
addb
pop
mov
jecxz
xchg
and
cltd
inc
dec
in
lods
fistpl
cwtl
repz
shl
std
adc
hlt
xorb
nop
jecxz
mov
mov
inc
enter
insb
jmp
lds
faddl
mov
mulb
scas
loopne
dec
idiv
xchg
daa
ret
daa
inc
adc
pop
mov
ret
loop
fldt
sbb
pop
mov
les
and
int3
jmp
or
mov
movd
sub
roll
es
pop
in
leave
dec
xlat
push
mov
inc
mov
mov
mov
xchg
lods
popf
or
ror
pop
jge
mov
jnp
cmp
repnz
int
cmp
and
aad
inc
test
or
mov
fstl
dec
dec
insb
sarb
jne
insl
dec
jnp
shl
mov
mov
add
iret
nop
or
stos
mov
pop
sub
add
inc
cmpsb
xchg
gs
mov
lahf
xor
icebp
ljmp
fstpl
enter
ljmp
lock
push
call
or
cmp
xor
adc
sub
dec
ds
xor
fidivrl
and
lcall
cmp
push
inc
repz
ds
es
insb
icebp
or
stos
int
dec
and
dec
xor
lock
fucomp
movsl
sahf
imul
ljmp
sub
cltd
je
inc
push
jle
push
out
xchg
fstpt
pop
ss
sbb
xor
push
adc
jb
xor
dec
sub
sar
mov
mov
mov
bound
ja
mov
out
push
or
jae
jge
mov
add
dec
addl
dec
es
push
push
or
add
xchg
push
rclb
xchg
mov
in
dec
cmp
cli
ljmp
pop
lcall
add
inc
mov
push
iret
call
lods
push
das
insb
movsl
add
test
je
mov
and
adc
mov
stc
mov
sahf
nop
add
or
and
add
inc
out
test
dec
sahf
in
fcmove
sbb
mov
fs
jnp
cmc
test
js
pop
mov
ret
pop
jnp
mov
into
mov
shrl
sub
stos
fwait
hlt
dec
mov
push
shll
pusha
add
jl
addb
mov
adc
xchg
pop
hlt
xor
inc
sbb
push
dec
cmpsb
jo
cmp
inc
push
mov
int3
fildl
push
pop
test
jne
xor
xchg
jge
stos
jo
out
mov
cmpsl
dec
xchg
mov
addb
or
xchg
push
inc
or
out
sahf
and
adc
dec
sbb
testl
mov
jge
popa
lods
inc
xchg
and
mov
popf
push
jae
xchg
shlb
shl
pcmpgtd
adc
inc
push
mov
mov
arpl
out
dec
cmc
mov
lds
mov
cmpsl
js
test
push
add
cmp
xchg
shrl
sub
imul
rcrl
add
aad
insb
mov
mov
aad
test
push
sbb
hlt
push
jl
push
push
mov
scas
jp
ficomps
popf
movsl
cmp
ds
imul
pop
mov
jns
sub
aaa
cwtl
stc
inc
lret
ret
push
roll
and
add
cmp
in
xchg
or
lcall
cmp
pusha
not
or
sub
add
pop
hlt
aaa
into
xor
push
add
xor
mov
test
ffree
sub
mov
in
lret
bound
rcrb
push
cmp
scas
lret
cld
iret
mov
cli
xor
fstpt
aas
outsb
push
inc
sbb
add
and
sti
xor
sub
jp
cmpsb
sub
scas
inc
mov
fdivl
sarl
dec
mov
sti
aam
mov
cltd
sub
in
mov
gs
fwait
testb
mov
je
in
dec
loope
jnp
jl
in
jge
jp
push
jns
pop
xchg
cltd
sahf
hlt
mov
mov
adcl
ss
nop
jns
mov
icebp
ret
icebp
mov
cmp
cmpsl
mov
inc
jle
adc
mov
mov
inc
lcall
mov
adc
sbbb
cmp
in
push
lahf
pop
mov
adc
mov
fucomi
push
adcb
cmp
outsl
add
pop
cmp
jge
into
xor
sbb
pop
dec
or
push
add
push
xchg
pop
mov
xchg
insb
adc
jb
mov
push
iret
scas
adc
out
enter
xchg
hlt
xchg
jmp
fs
fldt
adcb
jle
mov
fisubrs
outsb
mov
or
in
mov
enter
sub
xchg
jecxz
and
dec
cmpsb
enter
sbb
cld
outsb
add
push
adc
cltd
roll
dec
mov
sbb
or
cs
nop
cltd
dec
loope
aad
push
mov
push
and
aas
mov
in
call
pop
loop
in
adc
jmp
das
sbb
sbb
cmpsb
mov
or
jae
dec
movsl
xor
mov
repnz
loope
xor
insl
out
jb
cmpsb
jle
adc
and
push
xor
xor
add
imul
out
les
lret
adc
and
test
fucomip
jl
cmp
fmull
mov
and
movsl
push
bnd
scas
push
inc
mov
imul
scas
jno
loopne
adc
mov
cmpb
rolb
cmc
jno
mov
je
pop
and
movsb
sti
sub
jmp
fld1
xor
xchg
ljmp
es
sbbl
adc
dec
cwtl
push
popf
leave
imul
and
repnz
pop
int3
and
cli
aaa
ret
sbb
fwait
adc
idivb
in
hlt
data16
xlat
jmp
xor
dec
mov
xor
fildll
sub
mov
xor
ss
push
out
xchg
movsb
scas
cmc
ja
fiadds
int3
fsub
and
mov
lds
nop
mov
add
repnz
cli
pop
jg
push
gs
and
push
fldt
pop
mov
stos
adc
daa
js
aas
and
sbb
sbb
imul
dec
out
mov
or
lcall
bound
negb
and
sbb
cmpb
xor
inc
dec
aam
push
mov
movnti
movsl
jp
sbb
lods
jb
loopne
lcall
pop
aas
shl
inc
ljmp
lahf
push
lods
sbb
jae
insl
lahf
mov
xchg
pop
push
mov
sbb
mov
mov
hlt
push
in
es
jmp
or
add
sub
cmpsb
pop
mov
sub
insl
dec
into
gs
cltd
popa
jns
movsl
insl
add
aam
inc
xchg
jmp
push
sbb
lcall
adc
pop
scas
int
movsb
mov
leave
call
or
mov
mov
roll
stos
cmpsb
cmp
rcl
fs
cmp
pop
pushf
adc
dec
les
mov
in
jnp
inc
push
xchg
fs
mov
ret
pop
flds
in
addr16
imul
cmp
mov
mov
pushf
out
or
in
fisubs
pop
add
in
repnz
pop
add
cmp
add
inc
lods
lock
jmp
lods
test
out
fwait
pop
push
pop
pushf
xor
mov
ret
xchg
les
xchg
imul
imul
insl
mov
mov
outsl
cmpsb
jp
mov
xor
xor
das
fs
jl
mov
fbld
lods
xor
sbb
enter
mov
loope
inc
jmp
jp
push
push
inc
push
jmp
sbbb
mov
jbe
ja
adc
aaa
and
adc
fldl
cmp
jns
les
pop
and
shlb
cmpsb
cmp
movsl
pop
lds
mov
rorl
add
ret
adc
into
push
outsb
jl
push
mov
sbb
push
loopne
fidivrl
xchg
inc
push
outsl
add
cltd
dec
or
cs
arpl
mov
cld
stos
negl
mov
inc
mov
fimull
arpl
scas
decb
jb
mov
sub
fiaddl
lret
pop
push
sahf
or
jmp
xchg
push
or
cmpsl
xchg
scas
aam
mov
dec
fbstp
or
cmpb
aam
enter
sahf
cmp
enter
mov
mov
test
xchg
mov
xchg
mov
inc
popa
or
and
add
xchg
insl
or
scas
je
push
or
push
clc
xor
xchg
cwtl
in
xchg
lods
fbstp
addb
addr16
fbld
push
and
sub
outsl
shrb
xchg
xor
cmp
mov
daa
sub
enter
in
jnp
xor
dec
cmc
cmp
xchg
cmp
pop
cli
xchg
test
stos
repz
lret
ret
cmp
mov
and
in
popa
push
sub
xor
fmull
jae
and
loop
aas
fadd
jmp
jo
pop
fwait
rdtsc
add
push
push
pushf
inc
inc
ficoms
inc
test
sub
rcll
sub
cwtl
pop
out
pop
in
das
cmpb
cmp
sarl
pop
out
sbb
sti
xchg
push
cmc
jp
cmp
xor
inc
pop
out
addr16
cmp
lret
js
outsb
adc
fwait
pop
f2xm1
ja
mov
jae
lds
divb
sub
mov
push
cltd
das
lcall
scas
add
mov
cmc
push
push
inc
mov
add
xchg
mov
movsb
sub
adc
inc
mov
inc
fmul
push
aas
adc
or
push
hlt
cli
jge
dec
jge
je
add
call
cmpsl
negl
and
cltd
jns
in
and
dec
gs
lock
adc
mov
cmpsb
jb
test
and
fiadds
test
xlat
pop
popa
addb
or
not
leave
push
daa
test
shl
mov
xchg
sub
iret
ljmp
leave
xchg
and
and
mov
lahf
pop
leave
xor
in
jp
push
inc
aas
rcr
xchg
ljmp
cltd
add
mov
jno
dec
mov
adc
pop
mov
and
or
xor
pop
lret
imul
jmp
test
add
xchg
dec
xor
sub
stos
inc
in
push
sbb
in
inc
insb
sarl
inc
jb
inc
in
push
out
cmp
fwait
stc
stos
jmp
xchg
sub
xchg
add
sbb
cmp
clc
inc
popa
push
lret
mov
inc
push
cld
outsb
lds
pop
ds
movsb
hlt
test
enter
mov
xchg
mov
ret
outsb
iret
jns
int3
mov
pop
dec
loope
and
out
nop
jl
test
jg
add
push
test
sbb
mov
push
pusha
dec
arpl
inc
mov
rclb
xchg
sti
cmp
jp
jns
xor
repnz
mov
test
cmp
lahf
ss
jmp
pop
push
lock
dec
daa
mov
pop
xlat
inc
dec
dec
push
jecxz
pop
int3
add
arpl
dec
movsl
cmp
xor
in
or
jns
xchg
scas
inc
sub
sbb
adc
jge
ja
mov
pop
loop
inc
mov
loop
mov
pop
mov
stos
or
sarb
pop
mov
adc
clc
jbe
fdivl
pop
mov
les
push
push
in
jp
cwtl
mov
ds
enter
das
in
jns
out
push
mov
iret
ss
lret
aad
dec
cld
scas
jle
pop
jae
cmp
popf
and
pushf
mov
mov
pushf
test
or
mov
xchg
jbe
sub
sti
inc
out
aas
jnp
xor
jno
int
cs
push
xchg
xchg
test
adc
dec
fwait
sbb
int
jno
add
push
imul
xchg
jnp
sbb
adc
enter
vmaxss
xchg
push
cmp
jge
lods
lea
shl
ret
add
int
sbb
xor
stc
outsl
loopne
push
adc
out
cld
push
mov
inc
inc
inc
inc
movsl
filds
lods
popf
jo
cmpsl
inc
sbb
jb
icebp
fwait
xchg
cli
xchg
xchg
xchg
sub
ret
jg
pop
inc
arpl
and
out
or
testb
mov
iret
dec
xor
ret
mov
aaa
adc
scas
push
ss
xchg
jno
adc
leave
lcall
int
and
lea
lock
mov
push
idivl
stos
cli
cmp
out
dec
out
push
cmp
inc
cmpb
lret
les
mov
popa
xchg
aam
in
jno
enter
mov
int
aas
mov
mov
or
push
mov
repz
test
jno
mov
nop
pop
loop
aad
or
insb
js
insl
cmp
push
scas
xchg
dec
sbb
outsl
call
adc
push
rcr
pusha
sbb
dec
jae
cmp
int
jnp
jbe
cmpsl
mov
xchg
mov
push
inc
mov
add
sub
out
das
xchg
imul
stos
testl
xlat
aam
mov
sbb
rol
cltd
test
ret
pop
leave
and
add
pop
mov
mov
cmp
cmp
push
jae
sub
rcl
cmp
pop
mov
xorl
sub
jmp
pop
push
xchg
push
imul
cli
push
jne
jmp
cmp
and
out
popa
pop
xor
jno
mov
mov
bound
out
pop
insb
lock
xor
cmpsl
sub
dec
push
popf
push
out
sub
jno
mov
test
mov
jnp
sbb
popa
cmp
mov
fdivrl
iret
and
jb
sub
aad
js
cld
push
ljmp
mov
pusha
aaa
mov
clc
add
fadd
mov
fnstcw
nop
push
sub
andb
mov
aam
dec
pop
ljmp
loop
pop
adc
pop
add
or
sub
mov
call
into
ljmp
xor
push
mov
aam
rolb
and
out
xchg
idivb
js
cmpsl
les
rcl
rcr
inc
pop
jl
cmp
aam
jnp
rcrl
pop
mov
cmp
mov
xchg
daa
inc
idivl
std
pop
lahf
pop
je
add
loopne
out
dec
out
inc
add
jle
insl
jg
pop
rcl
mov
sub
notb
lds
push
lret
pop
movsl
add
les
mull
mov
orb
repnz
mov
push
cmp
mov
shl
data16
shll
repz
and
push
adcl
mov
cmp
inc
sub
or
stc
cltd
or
ds
jge
sub
xchg
pop
mov
push
add
lret
and
or
mov
dec
jae
cmc
popa
shrl
mov
clc
mov
out
xchg
and
add
mov
insl
inc
jno
jecxz
jno
mov
shrl
insb
or
cmpsl
inc
inc
aam
mov
movsl
subl
pushf
ss
and
lods
mov
std
shr
addb
mov
hlt
out
mov
mov
clc
inc
loop
sbb
shr
movsb
cmp
call
sub
out
lods
jmp
lods
mov
out
sub
ja
fisttpl
jge
aas
add
cmp
test
cltd
mov
xor
and
leave
sbb
insb
scas
mov
pop
or
dec
mov
leave
pop
xor
fsub
or
cmp
jge
in
arpl
stc
sub
cmp
xchg
iret
sbb
sti
addl
inc
sub
arpl
mov
fiadds
mov
adc
mov
mov
and
test
lcall
shr
gs
cs
shrb
int3
shrl
jns
lock
jle
jl
repz
sub
mov
das
mov
or
jge
jg
cmpsl
add
outsl
mov
iret
adc
lea
les
jb
mov
jmp
cli
loop
mov
movsb
clc
sub
lret
add
scas
ss
or
fmul
xor
cmpsb
mov
imul
cmp
add
add
mov
imul
fbld
fs
arpl
inc
sar
push
and
dec
loope
and
std
div
sbb
movsb
in
loopne
cmc
sub
pop
jg
pop
dec
dec
sahf
or
cmp
outsb
pop
adc
fistpll
push
imul
sti
into
repz
js
aas
mov
lock
leave
xor
ret
pop
stos
push
mov
fwait
shlb
jae
adc
outsl
lcall
lcall
and
ss
mov
imulb
mov
pop
dec
add
add
jo
mov
lds
out
mov
jl
daa
mov
sti
out
and
xchg
push
test
outsb
andb
call
rcl
ret
out
ret
and
mov
pop
icebp
dec
xchg
shl
idivb
sub
dec
dec
xchg
fldenv
fsts
jp
nop
mov
ret
push
andb
fs
and
fidivl
ficoml
mov
ficompl
add
rcr
dec
das
into
jo
sbb
dec
add
add
xchg
mov
jle
mov
xchg
js
mov
jecxz
movsb
pop
mov
cmc
mov
and
test
add
mov
into
test
fucomi
pop
xor
xchg
out
add
sbb
or
jle
out
fnsave
lods
mov
mov
or
sbb
sbb
fimull
popw
mov
int3
xchg
add
sahf
lret
test
and
mov
push
xchg
stc
and
xchg
cli
test
adc
push
int
sbb
cmpsl
daa
push
loop
push
stc
ja
aaa
and
or
xor
mov
cli
sub
testl
jno
push
fmuls
popa
lods
lahf
cmp
jne
loopne
cmc
mov
test
or
aam
or
pop
xchg
inc
pop
sub
jp
or
cli
int
sub
jecxz
sbb
mov
popa
je
movsl
xor
adc
adc
xor
xchg
jnp
mov
mov
mov
adc
mov
mov
pop
aaa
xor
fistpll
es
add
add
mov
cwtl
decb
adc
or
hlt
fnsave
and
stc
jns
adc
xchg
sbbl
gs
jns
shlb
mov
add
inc
loopne
lret
inc
jmp
cld
jae
aas
sti
xchg
imul
ss
cmp
mov
cmp
mov
fs
xchg
cmp
daa
and
sub
sub
fbstp
xlat
mov
arpl
pop
es
jg
jno
aam
inc
cli
xor
popf
scas
push
jg
mov
popf
bound
fsubs
enter
je
subb
jge
iret
mov
lcall
xchg
mov
loopne
fdivrl
xchg
pop
xor
pop
adc
push
adc
pop
dec
call
mov
hlt
ja
stos
call
movsl
ret
jo
das
lret
jno
push
out
pop
push
jo
rolb
int3
xor
inc
push
ss
test
inc
inc
push
shl
push
push
xor
xor
jns
imul
les
shll
bound
jno
add
arpl
or
iret
inc
out
jbe
imul
addl
notb
clc
aaa
push
fnstenv
sbb
xor
push
jae
ss
dec
je
adc
leave
lods
jecxz
or
inc
cli
sub
stos
xchg
jecxz
push
push
xchg
or
mov
push
das
inc
cmpsl
insb
mov
or
xchg
aam
sarl
ret
insl
cmp
mov
sti
outsl
pop
subb
scas
mov
pop
sbb
je
repnz
lcall
movsb
mov
xchg
enter
fbstp
out
pop
pusha
xchg
jns
stc
shlb
in
pop
aas
mov
inc
add
fnstsw
loopne
aaa
pop
xor
cmp
mov
loopne
and
or
shr
imul
gs
shl
cs
mov
clc
push
pushf
add
pop
pop
insl
mov
popf
enter
xchg
push
cwtl
test
dec
jb
adc
mov
out
pmuludq
jae
push
xchg
dec
xchg
cld
cmpsl
ja
popf
icebp
adc
daa
setl
leave
pop
adc
and
shrl
mov
repnz
and
sub
out
sbb
lret
cmp
inc
mov
lods
add
sub
mov
cltd
movsb
ss
out
fistpl
mov
mov
mov
lods
stc
into
stc
lcall
ret
hlt
stos
addr16
sub
jo
xor
mov
cvtps2pi
imul
int
adc
sbb
lahf
or
icebp
mov
or
negb
sub
cltd
pop
inc
testl
xchg
add
xor
and
rcl
adc
sbb
xor
gs
scas
pop
push
inc
popf
adc
adc
mov
and
das
fcoms
stos
xor
jg
imul
fimull
pop
xchg
mov
add
cmpsb
cmp
hlt
scas
inc
arpl
sub
lock
mov
mov
aam
stos
movups
fmull
mov
ret
and
outsb
sub
int
dec
dec
xchg
dec
push
adc
dec
call
pop
addr16
gs
stos
fnop
ljmp
add
cltd
sub
movsb
xor
xchg
pop
fwait
sub
lret
cmp
and
lret
aam
adc
sub
adc
stos
and
jo
mov
xchg
and
mov
fcoml
decb
jmp
inc
pop
jbe
and
lods
in
sahf
lods
sbb
lds
out
scas
sbb
dec
push
lea
or
or
xor
test
prefetch
lea
popf
and
adc
orb
push
out
cmp
pop
push
aad
jbe
jl
clc
lods
xchg
xchg
pop
cmp
fwait
daa
cwtl
and
fistl
movsb
push
out
adc
jo
mull
jmp
push
sbb
mov
insb
inc
and
dec
and
sbb
sub
jae
test
pushf
pusha
xchg
jns
inc
sahf
mov
mov
cld
inc
push
sarl
add
insb
xor
mov
push
sub
imul
fisubl
mov
das
mov
aas
mov
addr16
lea
rorl
sbb
je
mov
mov
vpmaxsw
addr16
mov
mov
loope
add
loopne
xor
loop
test
hlt
out
clc
pop
out
lahf
in
es
test
sbbb
pop
mov
pop
mov
shrb
ds
xchg
jnp
lcall
test
mov
cwtl
sbb
cld
dec
dec
xor
repnz
and
cmp
jae
sarl
add
dec
dec
adc
sub
rorb
sbb
sub
stos
pop
inc
enter
andl
divb
mov
test
push
adc
jb
sub
xchg
dec
adc
mov
scas
sbb
jnp
pop
mov
dec
in
mov
push
mov
xlat
mov
push
out
iret
fstpt
fstpl
or
roll
pop
mov
ret
push
mov
leave
popf
iret
cmpsb
dec
repnz
fs
ret
outsb
movsb
xchg
imul
in
test
jl
pop
movsl
cmpb
mov
push
and
pop
adc
shrb
sahf
in
add
orl
jb
push
cmp
xchg
xor
pop
into
data16
inc
sbb
rcl
repnz
push
pushf
inc
cmp
mov
data16
inc
pop
mov
ret
adc
scas
push
sarl
gs
fs
xor
scas
jmp
iret
xor
inc
lods
mov
cld
jge
sbb
sbb
mov
adc
add
push
and
orb
or
jg
imul
imul
xor
test
repz
jle
push
mov
adc
fldcw
test
xor
mov
pop
pop
aaa
fprem1
xchg
inc
fdivr
in
and
outsb
jo
inc
dec
sub
jecxz
jb
ret
sahf
push
add
push
pop
lods
sti
fstl
mov
push
test
fidivrs
nop
lea
cli
dec
xlat
mov
mov
xlat
clc
lret
lret
pop
outsl
stos
jge
movsl
adc
add
lahf
push
mov
out
add
xor
add
aaa
xorb
jb
jmp
sbb
mov
add
lods
mov
push
push
jb
subl
mov
sub
sbb
mov
or
dec
stc
push
mov
xchg
in
stc
lea
and
pop
pop
mov
lods
mov
jg
stos
add
push
sti
xchg
mov
cli
push
lcall
push
sub
sub
sar
movsl
push
inc
inc
shr
lock
leave
cmc
sbb
repz
ja
nop
cltd
addr16
call
push
sub
lcall
fldl
jnp
fldenv
notl
out
adc
sbb
jle
fisubl
sub
mov
pusha
orb
pop
rorl
cmp
pop
mov
ljmp
jno
fisttpll
gs
scas
add
adc
stos
inc
xchg
adc
scas
add
or
inc
or
cmp
arpl
mov
lods
cmp
shlb
inc
xor
cmp
data16
fdivrl
std
mov
xor
popa
and
xor
mov
dec
loopne
adc
cmc
push
imul
push
mov
shrl
mov
cmc
mov
xor
add
sub
out
mov
push
mov
or
adc
in
cmpsb
int3
cmpsb
ss
rol
jge
lret
xchg
cli
xor
fucomip
dec
push
sbbb
in
fimuls
pop
xchg
imul
xor
daa
mov
push
jae
mov
jl
pop
lods
sahf
in
and
iret
mov
lods
leave
mov
xchg
sub
jnp
cmc
lcall
out
int
in
pop
daa
mov
repnz
push
movsb
leave
pop
jp
test
cmpsb
sbb
jecxz
es
cmpsl
and
popa
fmull
mov
in
dec
xor
and
cltd
imul
sub
out
call
fldl
push
xlat
shll
cwtl
xor
test
mov
and
cmc
jbe
addl
cmc
push
sub
outsl
sahf
stc
adc
xchg
inc
in
ljmp
jno
lcall
and
mov
and
loope
fwait
popf
cltd
loop
lret
push
inc
cmp
lret
ret
imull
sub
stos
xchg
and
add
leave
xsha1
cmpsb
mov
sub
lret
xchg
jge
inc
shll
movl
cli
nop
je
fadd
sbb
push
subb
fs
add
mov
pop
movl
je
push
lods
mov
push
imul
mov
into
xor
lret
dec
and
enter
inc
adc
push
in
jle
mov
pop
mov
sbb
inc
or
into
jg
jecxz
jae
inc
testb
adcb
inc
inc
dec
fmull
pop
in
cmp
in
or
and
pop
ss
jp
shrl
mov
inc
out
mov
aad
outsl
aas
pop
pop
in
testl
pop
dec
out
popa
gs
cmp
sub
inc
xlat
and
pop
test
xchg
pop
das
ja
mov
adc
dec
data16
xor
sub
jno
repz
pop
sbb
mov
fistl
jbe
mov
lcall
pop
std
test
outsl
loop
bound
xchg
inc
dec
push
sbb
popf
cltd
push
repnz
push
and
bound
fs
push
pop
popf
mov
lods
xchg
in
inc
bound
or
fiadds
stos
mov
movsw
ret
xchg
shlb
jne
lods
or
pop
sbb
in
aaa
xor
or
push
xchg
insl
mov
push
or
lahf
pop
mov
js
jnp
jo,pt
mov
dec
cmp
xchg
jg
add
pop
out
dec
mov
mov
nop
lods
movsl
shll
into
js
jecxz
out
rcrl
jecxz
pop
push
inc
pop
fsubrs
and
scas
push
mul
mov
fadds
mov
inc
dec
std
or
pop
mov
and
push
out
aam
into
mov
cmp
subl
inc
aam
mov
aad
rep
fst
mov
xchg
mov
push
mov
and
movsl
sub
cmp
or
mov
pop
in
not
nop
repnz
call
sbb
pop
dec
arpl
mov
or
in
jle
imul
sbb
mov
or
ror
mov
mov
gs
pop
outsl
mov
ds
adc
pusha
loope
stc
lods
mov
pop
leave
xor
mov
or
xchg
cmp
pop
mov
adc
dec
lcall
jo
fimull
or
jmp
or
out
aad
rcrl
scas
sbb
out
cltd
jb
repnz
xchg
mov
fstps
arpl
popf
cmpsl
test
scas
jb
in
addb
loope
sbb
int
jo
push
std
lods
inc
jnp
jb
inc
cmpb
or
push
shrb
xchg
push
push
dec
mov
mov
shll
or
pop
pop
push
in
jp
fwait
cmp
insl
pop
sbb
fwait
lea
ja
inc
fidivrl
ret
xchg
shll
add
xor
inc
sahf
shrl
mov
pusha
xor
jne
push
dec
shld
repz
xchg
cmp
mov
int
icebp
je
outsl
fwait
push
push
pop
aas
add
sbb
test
into
sbb
jnp
cmpsl
ds
cmp
insl
pushf
adc
into
stos
jnp
out
add
xor
xorl
test
sbb
push
add
aas
orl
pop
mov
xchg
imul
loop
std
adc
mov
cmp
popf
sub
inc
inc
sub
jmp
js
popf
jmp
cltd
je
lret
or
inc
stc
lds
inc
cld
pop
dec
dec
dec
xchg
pop
mov
call
rol
cld
sbb
push
and
add
mov
push
sbb
xlat
insl
test
mov
lods
data16
mov
sahf
mov
in
mov
mov
mov
adcl
aaa
and
std
push
xor
add
sub
icebp
xchg
ds
repnz
add
movsb
adc
inc
push
and
jno
mov
jne
stos
gs
sti
jp
mov
or
insl
jge
in
xchg
popa
mov
loopne
scas
shlb
icebp
cwtl
div
mov
pop
decb
xor
movsb
mov
adc
scas
mov
push
cmp
cmp
jne
or
int
mov
push
mov
fisubs
loop
scas
rorl
xchg
jp
stos
xor
jg
mov
int
inc
pop
dec
std
inc
shr
or
into
jl
mov
adc
inc
rorb
add
mov
mov
sbbl
pop
call
outsb
lds
icebp
subb
sbb
xchg
into
sub
dec
in
mov
je
xchg
adc
mov
into
nop
push
cmpl
fnsave
fstl
int
jmp
gs
mov
loope
pop
sub
aad
aas
mov
dec
je
call
addr16
pop
fwait
ss
xor
sub
mov
popa
stos
jmp
out
add
mov
lods
adc
mov
cmc
cld
dec
sbb
jmp
jo
mov
lcall
dec
and
sbb
repz
rcr
insl
es
clc
sahf
sub
sub
hlt
clc
inc
scas
sub
mov
dec
inc
hlt
mov
xchg
push
adc
movsl
imul
mov
aam
cmp
mov
cmp
pop
xor
dec
cld
lods
xor
ret
sbbl
mov
adc
cmp
xchg
sarb
push
cmpsl
out
cwtl
out
cli
leave
sar
ljmp
jno
jg,pt
daa
cmp
inc
mov
lods
xor
lods
mov
and
imul
jmp
mov
sub
cmp
in
into
push
inc
sbb
push
imulb
pop
jnp
add
enter
xchg
or
inc
lods
push
push
popa
inc
or
jle
cmpsl
sub
fistps
fdivr
clc
shrl
les
div
sub
aas
cmp
mov
add
jp
pop
cld
cmpsb
ror
xlat
adc
movsl
mov
sub
repnz
inc
sahf
jne
dec
dec
repz
mov
xchg
push
jmp
rcll
test
xchg
sub
add
ja
loop
sbb
push
int3
shrl
xor
js
jbe
xchg
shr
addl
push
in
push
das
stc
push
insl
call
xlat
test
mov
loope
jo
lods
adc
push
sub
or
jnp
pop
jno
loop
adc
and
sbb
imul
cli
push
imul
or
and
cmp
jmp
hlt
inc
dec
fcoml
orb
ljmp
xchg
call
test
icebp
aaa
hlt
add
and
lods
lods
outsl
fsubp
ds
mov
mov
js
and
adc
lods
aas
dec
push
sub
mov
les
mov
xchg
cmp
cwtl
xor
mov
add
or
mov
mull
pop
jo
clc
cli
xchg
or
mov
enter
aam
dec
dec
push
push
test
jp
sti
mov
mov
sbb
inc
mov
jb
mov
rcll
dec
sub
xor
out
popf
cmp
pop
mulb
jns
sbbl
pop
movsb
icebp
shll
and
jns
lods
jmp
leave
stc
popf
xor
shlb
stos
enter
fs
xchg
js
or
pop
xor
mov
shrl
sub
or
ja
dec
repnz
lods
sbb
push
jge
sub
out
mov
dec
push
ss
mov
dec
jge
xor
ljmp
das
addl
loopne
adc
dec
iret
inc
cmp
test
adc
cli
mov
xor
cmp
push
adc
jp
leave
sub
inc
add
insb
sbb
push
inc
xchg
fs
push
push
cmp
loope
cmpsl
mov
jmp
fildl
outsb
test
sub
and
out
cmp
mov
jnp
add
fimuls
and
pushf
outsl
jne
iret
mov
shrb
data16
popa
xor
fwait
jp
and
cmp
cmp
leave
int3
inc
mov
sbb
pop
insl
out
les
inc
insl
cmp
or
mov
out
punpckhwd
xor
adc
dec
gs
or
dec
scas
inc
jge
push
or
xlat
outsb
xlat
mov
loop
mov
cmp
cwtl
add
sti
lcall
adc
adc
mov
mov
jl
inc
mov
dec
jo
lahf
test
lret
addr16
fwait
aas
mov
enter
sub
fldl
sub
cmpsl
mov
jnp
into
mov
dec
push
cmc
cltd
insl
subl
inc
repz
shr
sti
dec
mov
mov
pop
cmp
and
mov
push
call
aad
rcll
cmp
xor
sarb
cwtl
push
hlt
sub
mov
fwait
dec
notl
cs
subl
jle
fldcw
fwait
mov
cmp
out
lea
adc
dec
mov
pop
repnz
or
add
push
nop
icebp
arpl
aam
testb
push
nop
imul
or
int3
lret
cmpsl
sti
mov
and
xor
movsb
rcl
sub
adc
int
mov
outsl
mov
add
or
mov
jb
or
loop
xchg
popf
or
sbb
or
xor
addr16
imul
ret
shl
out
inc
in
mov
loope
or
addr16
negl
and
mov
call
fsts
inc
in
imul
lods
inc
xor
lret
xchg
mov
imul
insb
fwait
addr16
mov
dec
shll
sub
jp
addr16
sbb
mov
fsubr
fs
arpl
in
je
xchg
inc
xchg
ja,pn
fsubs
and
push
dec
bound
leave
dec
inc
adc
push
mov
test
pop
sub
dec
imul
and
aaa
enter
lock
int
pop
cmp
stos
add
xchg
sbb
stc
push
mov
jp
xchg
xor
icebp
fs
push
fists
jbe
bound
mov
mov
inc
jg
pusha
ficomps
adc
pop
adc
or
xchg
outsb
or
cmp
insb
push
testl
lods
cmc
mov
dec
add
dec
clc
adc
or
bound
mov
pop
pop
scas
push
push
xor
mov
cmp
mov
test
aaa
xor
push
mov
movsb
sti
sbb
xchg
xor
repnz
out
or
sarl
dec
fisttps
sbb
mov
mov
cmp
add
pop
aaa
pop
outsl
push
popf
xor
mov
fcmove
inc
sti
sarb
jl
push
js
xor
incl
pusha
push
dec
and
inc
mov
in
scas
mov
pop
or
push
mov
adc
ret
xor
lret
lds
in
push
xor
test
dec
push
and
repnz
call
and
inc
cmpl
xchg
mov
pop
ret
in
cmpsl
jo
sub
jg
sbb
fbld
pop
mov
sbbb
cmp
shlb
and
fs
add
ja
inc
sbb
out
jmp
push
sub
das
or
arpl
inc
jmp
jb
call
push
lods
pop
add
push
iret
fsubrs
and
jl
xchg
imulb
xor
dec
and
shlb
inc
push
or
sub
xchg
divl
jmp
lcall
cmp
or
cmpsb
imul
mov
jae
sbb
ja
addb
pop
and
add
dec
bound
outsb
mov
pop
jns
stc
je
adc
mov
sub
jb,pn
jge
leave
mov
rclb
push
and
sti
add
push
dec
lret
gs
jns
aam
push
push
vmwrite
dec
sbb
push
push
push
pusha
xor
lods
inc
test
lret
in
hlt
mov
call
adc
jbe
rcll
insl
getsec
mov
popf
dec
xchg
in
xor
jns
inc
sub
jb
test
repz
mov
test
add
rcr
lock
loope
repnz
sub
add
mov
mov
data16
push
jmp
iret
fldenv
jle
popa
and
arpl
imul
iret
push
insl
inc
cltd
stos
sub
and
mov
test
faddl
lcall
and
movsl
lret
jae
fidivrs
push
imul
pop
and
repz
or
mov
iret
popa
mov
pusha
mov
fsts
jo
lret
push
loope
pushf
and
into
lea
sbb
test
mov
loop
xor
shrl
shll
enter
negl
imul
add
sbbb
dec
pop
aas
inc
push
bnd
int3
add
ja
shrw
inc
out
cmp
cltd
mov
fbld
faddl
popf
nop
ljmp
ljmp
inc
push
insb
int3
sub
mov
adc
lods
push
and
enter
lock
ja
sarb
in
cmpb
rcll
out
test
mov
mov
fstl
push
xor
dec
add
mov
fsubrs
xlat
popa
or
lret
rolb
adcb
mov
mov
push
je
sub
arpl
lahf
xorb
push
movsb
stos
add
rolb
addb
out
insb
fildll
fldenv
jnp
stos
mov
int
inc
push
test
clc
dec
push
xor
imul
mov
xchg
test
cli
aaa
pop
fsub
adc
and
jo
shlb
bound
xor
ffreep
pop
gs
imul
add
push
lret
sub
sub
sub
add
mov
stc
je
sub
pop
sbb
outsb
lret
xor
fcmovne
xchg
or
jge
xchg
sub
dec
in
dec
sbb
ds
fs
adc
inc
fbstp
lods
pushf
lock
and
jg
bndldx
mov
decb
mov
mov
lea
cmpsl
jle
ror
push
aad
sub
add
lods
inc
add
mov
stos
lret
fisttpll
movsl
lahf
fsubr
orb
rorl
pop
clc
lea
dec
scas
int
and
and
fwait
mov
mov
js
fs
sub
out
mov
shr
adc
fwait
add
nop
ss
imul
push
and
push
jp
adc
sti
pushf
push
mov
dec
jp
mov
data16
jmp
arpl
inc
ds
and
fiadds
sbb
outsl
cld
ret
dec
add
hlt
mov
mov
aam
mov
cmp
es
cmc
or
jmp
jns
cmpsl
enter
xchg
push
xor
into
xchg
mov
xchg
cmp
add
jb
out
adc
pop
loop
pop
add
pop
sub
inc
stc
cli
pushf
aaa
jecxz
mov
jbe
mov
push
mov
fisubrl
inc
pop
js
pushf
jmp
pop
sahf
mov
jbe
stos
xor
rcrl
lcall
inc
jl
mov
mov
push
in
idivl
notb
icebp
or
xor
sub
pop
or
cmp
repz
dec
fldcw
cmpsb
mov
jbe
int3
xor
mov
shll
push
inc
in
mov
arpl
stos
xchg
fwait
sti
popf
test
inc
jmp
push
inc
jg
xchg
out
inc
sbb
lret
mov
call
mov
fs
mov
xchg
lods
or
in
push
sbb
mov
xor
mov
add
js
les
sbbl
pop
mov
mov
in
test
add
scas
xor
mov
jle
and
aaa
cmpsb
aaa
das
test
push
cmp
aaa
addr16
daa
aas
add
add
lea
and
cmpsl
out
mov
mov
pop
aas
lea
mov
shl
jnp
and
or
idivb
mov
repz
cmp
push
mov
data16
je
jne
clc
jnp
pop
out
cli
cmp
cwtl
pop
adc
popa
icebp
outsb
push
dec
dec
push
insb
leave
ds
add
xchg
mov
xor
pop
cmp
fcompl
xor
or
lock
xor
push
or
lds
pusha
and
insl
sub
in
push
push
push
mov
test
iret
cmp
jnp
nop
sub
ret
inc
popa
pop
cmp
mov
sbb
pop
jmp
inc
popf
lods
data16
test
in
fistl
lock
addr16
pop
and
jle
xor
pop
jecxz
or
add
nop
out
mov
outsb
ret
lahf
jb
dec
xor
jnp
mov
pop
les
es
aaa
test
rcrb
sbb
loop
sbbb
and
fwait
pop
in
adc
lea
inc
lahf
ljmp
pushf
loop
cwtl
mov
push
scas
xor
call
lahf
xor
xchg
and
lods
xchg
inc
sbb
mov
rcll
push
jbe
dec
push
jno
pusha
int3
mov
test
cmp
lea
adc
movsb
loop
mov
es
mov
push
leave
call
mov
jnp
in
sub
out
fcmovnbe
jl
push
data16
pop
sti
push
add
and
dec
inc
stc
dec
cli
bound
out
out
sti
inc
popa
in
xchg
idivl
mov
fwait
xchg
ds
repz
push
lds
pop
cmpsb
cs
and
sbb
push
add
mov
js
add
jnp
xor
in
mov
leave
sbb
mov
outsl
scas
mov
daa
negl
mov
push
call
cmp
dec
pushf
aad
or
adc
cld
pop
subb
mov
lahf
push
ds
aas
out
out
data16
notl
lret
push
shll
imul
shl
ss
ljmp
xchg
in
stc
enter
js
mov
mov
arpl
pop
mov
cmpsb
stos
lods
adc
test
cmp
dec
mov
mov
xor
jo
sbb
scas
fbstp
popa
cmc
iret
lahf
mov
xchg
imul
jmp
stc
repnz
xor
jne
mov
int
cmc
cltd
inc
cld
push
and
jnp
or
andl
xchg
repnz
repnz
jo
push
or
push
inc
inc
in
addr16
dec
inc
cmc
xor
push
lcall
hlt
pusha
xlat
sbbl
cmp
push
jmp
sbb
push
movsb
sarb
stc
popf
in
ds
push
pop
pushf
xchg
xor
ja
inc
push
lahf
rorb
adc
out
jp
mov
divl
cmpsb
arpl
icebp
imul
sbb
push
mov
or
aas
fimull
lods
fstps
cld
sahf
cmp
mov
add
adc
shlb
inc
out
jne
or
mov
push
xor
scas
xorb
jp
adc
mov
and
xchg
decl
cmpsb
cmc
or
cltd
imul
out
rcrl
jl
mov
pop
pushl
fistpll
loop
jne
movsl
cmpsb
add
repnz
das
and
mov
pop
fwait
mov
imul
fsubs
fstpl
dec
test
push
fs
xchg
iret
fldcw
sbbl
scas
sbb
out
mov
dec
jb
data16
lret
ret
cmc
mov
push
mov
pop
shlb
xchg
rcrl
sub
push
scas
mov
lock
gs
call
jl
add
ja
rcll
jmp
jbe
ficomps
loopne
test
xchg
xchg
push
fsts
jns
mov
aaa
fldenv
lods
mov
mov
mov
xor
jmp
mov
paddd
mov
xor
xchg
jl
and
imul
popf
loopne
jae
mov
sarl
shll
jp
imul
and
mov
sbb
xor
arpl
sub
adc
sub
adc
imull
insb
mov
push
out
repz
sbb
or
scas
lcall
pop
inc
in
call
call
pop
sti
mov
push
mov
lock
mov
fwait
ja
mov
out
shrb
xchg
prefetch
out
and
pop
sub
sub
mov
adc
xor
xchg
sub
inc
js
jl
add
sbb
cmp
and
adc
jae
ror
loope
cmpsl
cmpsl
shlb
and
dec
dec
xchg
lahf
cmc
mov
inc
in
nop
xchg
pop
out
stos
in
inc
sarb
lods
loope
adc
lcall
push
mov
pop
jmp
movsl
aas
jecxz
jecxz
mov
push
outsb
sbb
add
dec
mov
lcall
in
mov
cwtl
push
ljmp
push
popf
push
mov
dec
sbb
rclb
mov
sub
les
xor
pusha
cmp
mov
xchg
dec
or
loope
sbb
adc
int
cmp
cmp
sub
sub
in
fstpt
sbb
push
sbb
adc
pop
or
cmp
pop
out
dec
push
pop
jae
mulb
lcall
jmp
xchg
or
mov
push
adc
adcl
scas
scas
enter
lret
aaa
mov
andb
std
aam
inc
ja
pop
lret
sub
nop
and
jnp
sar
xchg
insb
out
pop
mov
int
fdivr
and
push
fucom
js
mov
int3
imul
push
arpl
mov
lcall
cmp
pusha
cmp
loop
xor
xchg
mov
sub
cmp
testb
movsb
push
mov
sub
jge
in
jne
push
push
lock
sub
pop
outsb
pop
sbb
or
js
pop
ret
sbb
pop
xor
inc
fldcw
sti
push
dec
cmpsb
mov
hlt
push
lds
xor
jecxz
sti
mov
jmp
inc
push
mov
sub
sbb
jbe
out
fld
xchg
fwait
cmpsl
lea
mov
es
mov
cmpsl
ljmp
ljmp
aam
cmp
dec
iret
pop
jno
inc
gs
dec
pop
fcmovnbe
or
loop
mov
das
jo
inc
push
loopne
scas
outsl
lock
dec
jecxz
jae
icebp
mov
arpl
and
adc
or
xchg
addb
adc
scas
jmp
dec
arpl
mov
movsb
cmp
cmp
lret
inc
ret
xchg
cltd
mov
inc
loope
xchg
or
int
sub
fnstenv
int3
repz
gs
jno
xor
addr16
add
daa
shlb
jmp
ja
or
add
inc
xor
xchg
mov
jge
les
jge
jmp
or
clc
jecxz
sub
stos
cmp
mov
pop
icebp
fwait
scas
sub
aad
aad
or
or
pushf
sub
jmp
daa
cmp
push
cltd
nop
xor
orl
loopne
out
mov
arpl
sahf
cmp
mov
ja
std
shrd
fdivrl
sub
lds
sub
repnz
imul
inc
cwtl
or
and
test
jno
call
sub
out
xor
jmp
int3
xchg
or
insl
sub
loope
add
jle
and
cmpsb
arpl
and
aad
clc
repnz
xor
insb
push
push
int3
repnz
jae
aas
xchg
xchg
jnp
sub
mov
sub
aam
jecxz
ret
mov
std
and
adc
mov
fmulp
fidivl
jle
push
push
adc
mov
fdivl
adc
pop
push
outsb
pop
sbb
je
push
popf
inc
push
popf
mov
mov
gs
jno
std
mov
outsl
dec
ss
addl
addr16
bnd
mov
jle
sub
push
mov
ljmp
or
sbbb
cmp
push
leave
cmp
xchg
aad
sbb
movsl
xchg
sub
mov
push
sbb
mov
cmc
cmp
or
je
push
js
test
xchg
add
insl
out
push
test
daa
je
shlb
pop
mov
aam
or
pop
shll
mov
test
mov
push
and
paddusb
cmp
out
cld
xchg
inc
and
jns
test
aad
pop
repz
sub
xchg
arpl
aaa
xorl
xor
test
movsb
stc
or
sbb
or
inc
push
sbb
lods
ja
ja
imul
sti
icebp
loopne
loope
mov
xor
lds
cmp
xchg
mov
sub
cmp
jnp
and
cmp
dec
pop
gs
icebp
pop
push
dec
jl
fnsave
fwait
push
cli
dec
mov
lea
dec
push
leave
xor
inc
pusha
clc
incl
dec
stos
xor
clc
or
pop
lock
aad
addb
and
orb
out
imul
cmp
or
jbe
mov
jmp
out
pop
sti
add
or
iret
fmul
mov
lods
pop
out
dec
int
inc
js
sti
es
std
insb
call
bt
scas
cli
xlat
bound
std
insb
scas
xor
jo
lods
push
adc
in
shl
dec
inc
loope
jbe
imul
mov
pop
lds
addr16
pop
inc
fdivp
sbb
outsb
inc
pop
mov
add
fwait
push
jbe
push
scas
push
sub
std
adc
or
clc
cmc
cmp
dec
sub
sub
int3
xor
or
stos
insl
add
jp
orl
jecxz
dec
sub
pushf
arpl
dec
rclb
popf
inc
push
dec
shrb
jo
mov
jne
and
push
addr16
int
cld
pop
pop
push
jmp
mov
addr16
mov
mov
rep
popl
xor
push
mov
jb
test
jns
insl
xchg
fimull
push
mov
neg
xchg
in
pushf
jg
push
mov
in
jns
jo
push
scas
xor
push
sub
mov
dec
in
into
test
cs
fbstp
cltd
fstpl
and
inc
dec
mov
pop
cmp
test
sbb
fidivrl
call
jmp
and
push
and
std
cmp
xor
ja
push
pop
bound
add
enter
iret
popa
test
fwait
xor
cmpsb
pusha
cli
std
fwait
mov
and
inc
aad
in
xchg
adc
ffree
mov
cmc
outsl
inc
mov
out
mov
imul
cmp
pop
cmc
je
push
sti
push
fidivrs
adc
mov
jne
mov
push
insl
int3
iret
pop
cmp
mov
lret
sbbl
hlt
cmp
mov
aam
outsl
rorl
pop
cli
push
jge
xor
fnstcw
jne
das
repnz
adc
adc
add
push
in
jb
fcmovne
popa
clc
stc
adc
stc
ds
push
in
cwtl
ja
sbb
cmpsb
mov
jmp
test
push
pop
xchg
dec
mov
enter
sbb
pop
xchg
cmc
xchg
data16
jl
mov
or
les
outsb
in
les
sbb
and
push
add
dec
das
shl
push
movsb
call
xor
lods
push
sarb
arpl
outsb
push
hlt
jp
cmpsb
push
movl
das
xchg
xchg
mov
push
out
cmpsb
std
xor
mov
scas
mov
ret
cmpsb
stos
dec
insb
stc
mov
mov
pop
fisubrs
add
je
push
hlt
dec
js
call
iret
pop
cmp
xor
push
stos
push
stc
add
jns
mov
xchg
add
push
or
aam
jge
and
jns
vpcmpgtd
mov
fisubrl
xor
jae
das
mov
mulb
lds
xsha1
cmpsb
mov
push
pop
scas
sub
or
dec
cmp
cmpl
cwtl
push
shlb
xchg
fldcw
call
mov
cmp
cmp
sbb
jne
adc
pop
jle
cld
cmpsl
jp
and
and
sti
loop
ret
pop
xor
mov
arpl
xorl
or
push
jo
sbb
es
mov
inc
lea
inc
jg
mov
or
jo
jg
insl
imul
mov
js
int3
xchg
das
int3
and
dec
dec
add
ret
inc
sub
mov
mov
cmp
out
shrb
mov
dec
in
push
jno
test
or
es
mov
jno
sub
rclb
push
lcall
stc
pushf
xchg
icebp
pop
and
lods
lahf
dec
in
in
lcall
loop
fsts
daa
or
add
fs
adc
jb
mov
jg
xchg
mov
outsb
aam
cmpsb
movsb
xorl
aad
das
push
in
mov
add
add
push
adc
pop
lret
sbb
int
ljmp
or
xchg
addr16
jb
ficomps
stc
push
fnsave
inc
pop
lock
in
jns
imul
or
sbbl
fsubrs
add
popa
adc
bound
iret
outsl
into
ficoml
and
loopne
insl
ja
cltd
int3
sbb
jno,pt
fwait
cltd
push
les
jg
jmp
idivl
mov
mov
adc
mulb
popw
ds
inc
mov
cmp
cmc
dec
cmpsb
mov
cmp
lcall
mov
je
or
pushf
call
movsl
push
mov
inc
popa
outsl
popf
xchg
push
popa
popa
and
xchg
xchg
pop
push
imul
mov
fs
fcmovne
cmc
push
inc
fnstcw
add
mov
jmp
clc
or
jae
cltd
sub
lret
push
je
jb
jae
imul
adcl
orl
rorb
jge
mov
nop
les
into
cmp
int3
jae
pop
int3
push
dec
ret
add
pop
loopne
mov
or
jbe
dec
ds
add
pop
aam
and
pop
jmp
sub
lret
add
test
xor
ret
int3
dec
and
sub
std
dec
sbb
daa
repz
or
mov
nop
pop
in
les
push
push
data16
jnp
adc
cmpsb
pushf
subb
fdivl
das
fmuls
dec
add
roll
lahf
out
gs
and
mov
adc
cld
outsb
mov
xor
inc
xlat
into
mov
cmp
jge
push
dec
sbb
lea
in
inc
das
xor
outsl
jmp
adc
or
loope
mov
mov
fldt
sub
jp
stos
stos
insl
mov
adc
testb
ja
jb
mov
jbe
push
lret
outsb
jns
or
or
sbb
push
pop
lahf
and
xor
popl
push
or
arpl
addl
gs
fildll
or
imul
mov
cmc
adc
push
testb
xchg
fcmovnbe
cmp
frstor
imul
xor
std
inc
dec
push
dec
pop
xchg
mov
in
ljmp
jg
xorb
repnz
and
es
int3
mov
sbb
jle
fstpl
sbb
xor
jecxz
pop
xchg
or
mov
sbb
fdivl
lret
and
or
mov
mov
into
imul
mov
dec
fnsave
adc
subl
push
add
sahf
in
out
out
repz
lea
ljmp
lock
popf
loope
sub
fs
add
xor
js
cmp
jg
dec
loope
jl
pushf
jmp
xchg
adc
inc
sti
mov
je
popf
outsb
push
cld
mov
mov
adc
int3
cmp
mov
icebp
outsb
pop
inc
stos
mov
inc
fdivp
cmp
aas
out
cmp
jp
mov
cmp
add
lods
jle
lods
stc
adcb
add
sbb
push
fidivrs
je
sub
ficompl
sbb
mov
scas
add
int
and
xchg
pusha
sub
inc
jb
popa
cmp
sarl
test
push
fldl
cmpsb
lock
stos
in
out
sub
xlat
sub
int3
xor
jecxz
pop
adc
push
mov
mov
and
mov
and
sub
lret
into
push
lods
sbb
lods
mov
adc
and
das
jp
cld
adc
xor
adc
add
jbe
xchg
sbb
push
jmp
out
rclb
iret
mov
call
in
xchg
sub
bound
or
aaa
push
push
out
andl
sbb
rorl
jg
mulb
cs
cmp
sub
cli
pop
sbb
rorb
nop
mov
outsl
push
jne
mov
adc
sub
pop
add
dec
scas
and
dec
ja
jmp
imul
pop
insb
inc
and
mov
xchg
and
push
les
aad
stos
dec
pop
int3
cmp
fs
int
lods
test
mov
xchg
cli
cld
fidivl
or
andb
jns
fisubrl
mov
fcomi
in
xor
fbstp
aam
dec
push
icebp
std
mov
or
sarl
jle
cmc
out
sub
aam
jp
and
and
scas
mov
or
jl
mov
mov
inc
adc
and
push
mov
pop
arpl
dec
test
sbb
addb
xor
or
sub
insl
andl
shrl
pop
push
rorb
outsb
inc
and
iret
aam
in
loope
loop
mov
pop
in
imul
test
dec
filds
sub
arpl
cli
xchg
pop
sahf
xor
mov
adc
sbb
pushl
push
pop
into
fisubs
inc
test
xchg
jge
iret
mov
loop
loope
jno
xor
test
cld
mov
inc
dec
pusha
jge
xchg
add
movsb
adc
xor
std
lods
cli
mov
ljmp
dec
dec
adc
je
cmp
xchg
mov
dec
mov
or
inc
cld
in
jp
mov
mov
ret
insl
push
arpl
jo
cmpsb
jl
aaa
nop
sbb
popa
negl
hlt
sub
cmp
xor
mov
push
inc
adc
in
clc
popa
xor
and
push
roll
pusha
jmp
pop
adc
andl
fdivrs
fwait
xchg
int
test
adc
lods
pushf
push
mov
je
testl
cmp
mov
ja
cmp
lds
es
cs
call
test
mov
outsb
jl
movsl
aad
sbb
aas
or
sub
in
test
xor
daa
or
xor
dec
hlt
or
dec
sbb
in
jge
into
lods
or
cmp
adc
int3
imul
sbb
xlat
addr16
stos
add
insb
popf
sub
mov
push
pop
insb
xchg
mov
xor
shlb
aad
xor
xchg
rorl
sub
jns
mov
add
loop
das
adc
imul
sbb
jae
test
out
cmp
jae
xor
xor
jae
mov
mov
push
xorb
int3
xorl
inc
test
pop
adc
out
rorl
and
push
xlat
push
mov
cmp
dec
lds
outsb
fucomip
lcall
xor
sub
outsb
dec
outsl
imulb
cld
int
dec
xchg
xchg
or
pop
out
mov
lret
mov
adc
leave
jecxz
adc
movsb
mov
pop
imul
jb
push
sarb
icebp
mov
dec
aaa
into
jp
or
add
xchg
pop
test
jp
in
and
aaa
shlb
fwait
daa
ljmp
test
mov
and
lcall
xor
fdivrs
movsb
das
enter
lcall
push
mov
mov
notb
leave
fildl
xor
or
insb
add
cmpsb
cmp
push
pop
loopne
inc
fbstp
shr
std
mov
std
lods
cwtl
mov
iret
out
lods
mov
subl
popf
clc
or
add
pop
inc
mov
stc
roll
push
adc
divb
pop
lcall
sahf
push
cmp
icebp
push
fistpl
pusha
adc
int
aad
je
clc
inc
inc
repnz
cmp
enter
popf
fsubrl
mov
arpl
jle
or
add
gs
sub
test
outsb
clc
xchg
div
mov
jbe
mov
testl
mov
push
in
adc
mov
mov
stc
in
int3
fldenv
mov
cs
sub
dec
inc
or
mov
mov
mov
sbb
sbbl
xlat
rorl
pop
cmp
into
lock
and
push
xor
inc
mov
adc
insb
js
aaa
divb
fwait
xor
jecxz
pop
enter
add
cmp
lcall
stos
orl
popl
ja
push
ds
notl
leave
insl
jmp
cmpb
and
mov
scas
std
cmp
mov
cmc
nop
stos
and
repz
mov
push
ss
mov
pop
push
lock
sahf
imul
test
jle
xchg
clc
jae
sub
repnz
xor
popa
cmp
sbb
inc
xor
shrb
push
insb
lods
pop
mov
mov
xor
clc
mov
dec
scas
ret
loope
cs
cmpsl
sub
mov
cmpb
xchg
inc
outsl
xchg
loopne
in
enter
dec
push
push
sub
lret
and
sub
stos
jo
sbb
outsl
pop
shrb
addr16
shr
xchg
add
cmp
xchg
xor
cmp
pop
sahf
aaa
or
xor
pop
ljmp
cmp
xor
andl
mov
popa
outsb
rcll
jno
setae
ds
rorb
mov
pop
cmp
adc
or
or
enter
fdivp
adc
dec
ja
mov
sbb
es
leave
sbb
fwait
out
out
call
jbe
fwait
xor
stos
loop
xor
mov
enter
cli
imul
cmp
mov
fnstsw
repz
sbb
test
push
mulb
push
jge
orl
cld
pop
push
insb
nop
fbstp
push
mov
or
scas
push
in
mov
insl
cmovp
mov
rcrl
add
ljmp
or
push
mov
leave
dec
in
lock
lea
lock
jp
xchg
dec
filds
movsl
adc
sub
mov
mov
out
ret
int
insl
or
lcall
push
sub
bnd
xor
into
dec
loope
mov
and
push
popl
in
pop
movsb
out
mov
push
loopne
cmp
ja
ds
dec
fs
xchg
jecxz
jbe
mov
mov
roll
xor
imul
mulb
mov
cld
stos
inc
dec
stos
lcall
std
dec
mov
jl
mov
data16
je
fldl
sub
das
mov
shl
mov
imul
rorl
push
les
pop
daa
jno
pop
xor
mulb
mov
xor
xchg
sub
add
add
sub
dec
pop
data16
adc
clc
inc
push
adc
pop
and
imul
loop
jo
xor
clc
fnstsw
sub
test
xor
mov
sbb
mov
mov
sub
roll
push
std
push
test
cmpb
daa
cld
sub
lock
push
mov
pop
ss
cld
cmp
lcall
leave
sub
push
jb
or
add
lds
fs
cmp
mov
popf
pop
xchg
mov
xchg
add
xchg
out
dec
mov
or
data16
into
inc
inc
fwait
sub
outsl
aam
and
out
mov
push
insl
sbb
add
out
mov
fidivrl
fdivs
lret
out
or
loope
xchg
test
fsubrs
mov
lea
dec
mov
lcall
sub
inc
sub
and
dec
and
jp
lea
jbe
out
add
fdivp
push
bound
push
or
mov
outsb
add
cmpsb
sub
pusha
inc
outsb
cmp
lods
mov
hlt
xchg
lcall
pop
cmp
jp,pt
xchg
jns
lods
stos
pop
pop
or
dec
mov
jl
je
data16
sti
push
pop
dec
pop
imul
das
cmc
or
mov
insb
mov
sbb
xor
das
xor
sub
vmovaps
and
ss
jmp
aad
dec
cmp
push
adc
sub
push
xchg
jp
cmc
mov
mov
jmp
aad
cmc
dec
fiadds
es
xor
pop
or
or
bound
pop
mov
or
out
adc
mov
xlat
out
inc
cs
stos
loopne
push
gs
fstps
cmp
mov
popf
cmp
sahf
xor
push
pusha
or
in
aas
push
mov
push
stos
test
or
push
cmp
leave
cmp
fwait
jno
int3
fcoml
push
scas
frstor
loope
and
push
in
and
andl
sbb
fldl
scas
xor
out
sbb
jo
decb
sti
aas
cli
sub
ret
loope
or
test
movsl
in
dec
ss
call
cmp
imul
stos
cmp
das
xor
sub
sub
or
dec
shlb
or
fwait
leave
sti
shrb
iret
push
jo
shrb
dec
lods
mov
mov
inc
hlt
mov
call
aas
sbb
pop
dec
or
sbb
sbb
sahf
inc
es
aas
mov
sub
xchg
and
lds
jecxz
mov
xchg
in
xor
hlt
nop
cmpb
mov
mov
mov
push
xor
push
pop
lcall
adc
addl
add
out
cmc
jmp
arpl
mov
add
call
push
sub
cmc
mov
push
and
sarl
sar
mov
dec
push
dec
pop
pusha
je
push
mull
shrl
outsl
xchg
mov
add
inc
jmp
mov
shlb
push
pop
mov
mov
mov
enter
mov
jmp
mov
dec
js
gs
dec
and
rsqrtps
and
je
int
sbb
mov
test
enter
inc
xlat
pop
dec
dec
mov
sarb
mov
sbb
dec
xor
dec
fists
sahf
pop
xchg
andl
imulb
nop
push
fsubrl
xchg
jmp
dec
daa
ss
add
xchg
fsub
test
in
cwtl
pop
daa
or
xor
mov
mov
hlt
stos
jl
out
mov
in
jne
stc
jns
scas
xabort
je
out
xchg
inc
arpl
xchg
xchg
pop
das
lds
aas
push
and
sub
mov
outsb
mov
jns
sbb
pop
outsb
mov
data16
addr16
or
pop
fsubl
ds
jp
inc
popf
fwait
test
dec
sbbb
pop
cmp
jp
andb
mov
sbb
or
sbb
xor
mov
xorl
cs
push
outsl
or
fwait
or
lret
insb
shrl
cltd
test
in
sahf
outsb
add
aam
jne
jg
mov
sub
push
dec
push
ret
test
aas
mov
mov
pusha
add
out
or
out
lock
sub
sbb
jno
shlb
arpl
fsubrl
sub
cmp
rcrl
in
dec
dec
lea
icebp
out
int3
and
inc
pop
ja
pushf
dec
cltd
and
lret
sahf
push
push
adc
in
or
mov
or
mov
fs
outsl
loope
shrb
sub
mov
or
pop
shrb
dec
add
dec
cmc
mov
sbb
jp
xor
cmpsb
mov
popa
jb
ja
push
xchg
call
mov
arpl
pop
or
pop
lds
cmpsb
cmp
mov
lds
imulb
sub
das
lock
pop
mov
movsb
mov
push
ds
push
cmp
cmp
cmp
cmpb
pop
out
ret
jl
jl
and
mov
sub
adc
sbb
mov
pop
in
repz
shrb
push
mov
adc
js
mov
icebp
and
sub
ss
out
and
xchg
xor
imul
sbb
movsb
lahf
shll
into
icebp
mov
sbb
aam
in
sub
jecxz
jne
add
xchg
xrelease
arpl
jg
xor
mov
int3
outsb
in
xor
stos
mov
lds
cmc
loopne
and
push
adc
xor
xchg
lcall
inc
int3
lret
push
sub
test
insl
sbb
gs
sub
push
adcl
mov
cmpsl
fs
lock
int3
inc
inc
bnd
sbb
ljmp
cmc
loope
mov
aas
pop
sahf
aaa
cmp
xlat
test
lret
int3
sbb
loopne
cmpsb
in
fbld
adc
xor
sti
xchg
jg
cmp
sub
aam
movsb
cmp
daa
pop
mov
dec
mov
icebp
cld
jl
and
out
fcompl
repz
adc
imul
inc
data16
xchg
repnz
out
jae
push
pop
dec
shll
call
inc
push
je
jp
mov
sub
lahf
xor
arpl
xchg
pop
out
add
mov
xor
dec
push
out
fists
mov
repnz
inc
lret
sbb
test
dec
stc
popl
daa
adc
movsb
cld
push
insb
sbb
mov
lret
cli
push
fdivl
jle
fbstp
lcall
adc
cld
lds
sub
je
rcrb
push
adc
sub
push
inc
add
jg
imul
dec
mov
jae
push
ficoms
mov
xchg
aas
cmp
cmp
mov
adc
imul
incb
ret
push
cltd
sub
pop
scas
clc
push
test
loopne
adc
out
cld
xchg
stc
add
and
je
sahf
movsl
adc
ss
dec
cmp
mov
sub
mov
leave
test
scas
or
ret
mov
cmp
movsb
cmp
andw
push
std
fistl
stc
mov
and
dec
or
adc
es
push
cmp
dec
add
pusha
cmp
lds
jno
mov
adc
push
mov
dec
imul
xor
aam
seto
xchg
and
insb
adc
mov
pop
pop
mov
adc
aad
mov
out
cmp
in
sbb
stos
mov
jl
add
mov
push
mov
xor
aas
jae
sahf
xchg
imul
or
push
inc
jae
sbb
jne
inc
push
out
and
sub
add
test
shll
lds
mov
adc
mov
popl
loop
in
and
das
mov
xor
popf
mov
pop
jmp
mov
leave
test
imul
dec
pop
push
jl
aas
and
arpl
ljmp
xchg
mov
push
and
cmpsb
test
fs
or
das
cmp
jecxz
push
in
add
sbb
pushf
mov
adc
jecxz
hlt
adc
insb
xor
and
dec
mov
dec
lea
and
pusha
mov
push
push
sub
test
enter
push
scas
xor
bound
push
sub
ss
push
out
andb
int3
cmpsl
mov
test
dec
push
mov
adc
adc
into
and
jo
lods
sub
add
mov
pop
insb
xchg
js
loop
test
cmp
dec
cmp
xchg
xchg
jmp
pop
mov
jnp
cmp
mov
xor
sbb
cmp
xchg
mov
int3
jo
jge
shlb
jle
xchg
cmp
push
sub
adc
jl
jecxz
sahf
daa
inc
xor
push
push
push
cmp
ja
mov
pop
jnp
movsb
repnz
aam
out
push
movsl
cmp
mov
sbb
push
dec
sbb
jmp
sbb
adc
lret
popa
xor
les
xchg
and
or
xchg
loop
fstpl
mov
and
ret
inc
pop
mov
inc
push
adc
les
mov
fidivrs
jo
aas
shrl
pushf
inc
sahf
les
jecxz
sub
jecxz
mov
jmp
movlps
pop
adc
and
icebp
or
lds
push
sarl
or
lods
test
jae
xchg
add
and
xchg
add
shll
jecxz
nop
insb
imul
in
rclb
mov
shrl
out
fsubr
jmp
lea
popf
xor
mov
mov
xor
or
and
xor
shrb
push
fwait
xlat
mov
sub
mov
xchg
inc
pop
fdivs
std
push
aad
xchg
and
jle
jg
aad
xor
ss
leave
daa
mov
outsb
and
dec
aad
loope
fmuls
popf
or
sbb
cmp
xor
scas
aas
or
mov
clc
test
xlat
mov
pop
je
adc
jb
add
xchg
pop
xchg
sub
fidivs
sbb
add
push
ss
out
out
inc
pop
cmpsl
jno,pn
push
jge
push
pop
andb
cmp
es
popa
nop
mov
into
mov
dec
push
test
scas
or
mov
cltd
cmp
jb
icebp
cmpsl
xchg
faddl
jge
in
leave
xchg
mov
insb
jle
loop
push
pusha
xor
repnz
shrb
loopne
mov
out
add
enter
cwtl
das
repz
sub
imul
fnsave
clc
cli
push
call
or
jo
lcall
lds
iret
xchg
negl
sub
test
dec
movsb
loope
popa
sub
shrb
stc
cmc
xor
mov
imul
or
cmp
lods
xchg
or
insb
mov
sbb
push
repz
xchg
and
sti
sbb
sub
dec
dec
ds
gs
insb
lahf
xor
gs
pop
mov
adc
sbb
pop
mov
sbb
into
scas
inc
iret
mov
aaa
push
xor
xchg
jmp
mov
outsb
inc
sub
leave
in
jo
int3
test
sbb
in
mov
cmp
fiaddl
scas
adc
in
ja
mov
mov
movsb
mov
fdivp
add
sub
aad
repnz
dec
sub
fisttpl
ja
cmpb
addr16
aas
cmpsl
je
adc
xor
xor
sbb
dec
into
das
sbb
aad
fsubrs
loop
mov
pushf
or
icebp
dec
ljmp
orb
sarb
sub
dec
pop
rorl
and
cmp
jne
int3
aaa
dec
xlat
jmp
jnp
adc
mov
jecxz,pn
sub
inc
jnp
push
jne
xor
fwait
jno
mov
mov
sbbl
rcr
sbb
dec
mov
dec
nop
add
sbb
mov
shlb
xchg
push
lret
fnstenv
fwait
and
test
adc
gs
test
inc
xchg
mov
dec
popa
xchg
jns
rcll
xchg
inc
add
popf
xor
insl
test
stos
push
mov
loop
scas
in
ds
mov
loope
xor
xchg
out
inc
adc
add
cmp
outsb
mov
cmp
inc
frstor
lea
lahf
xchg
pop
fucom
cld
pop
push
add
in
gs
loop
or
push
sub
inc
or
movsl
jp
test
sarb
mov
nop
xor
push
jne
aas
mov
sbb
int3
out
stos
aad
fs
rorl
shlb
ficomps
mov
sub
fwait
lcall
add
sub
push
popf
mov
aaa
aam
push
enter
andb
scas
mov
adc
ret
repnz
cwtl
fdivp
xchg
call
out
subl
cmp
lret
inc
insl
jecxz
lahf
dec
jns
dec
mov
inc
or
push
xlat
pop
jle
jo
jo
adc
sarl
inc
jae
repnz
int3
fidivs
test
sbb
adc
stos
xchg
mov
mov
mov
int3
dec
dec
fisubrs
xchg
pop
out
lahf
jae
cltd
ja
push
mov
pop
scas
push
jns
inc
jl
xor
ds
inc
push
push
out
add
fs
fsubs
bound
sbb
or
xchg
cmp
push
sub
leave
push
gs
cmp
loopne
sub
sbb
inc
rolw
call
cmp
mov
pop
xor
pop
clc
test
dec
add
lcall
out
call
std
je
outsl
hlt
out
xchg
insl
in
js
pcmpgtd
xchg
out
push
mov
cmpsl
add
xchg
add
lods
incb
jmp
inc
fdivs
dec
cmove
lock
dec
mov
and
mov
idiv
xchg
sub
insl
xor
cli
cmpsb
subb
or
lds
fldenv
or
es
and
jo
sub
push
test
inc
popa
jmp
or
daa
sbb
and
mov
sbb
dec
rolb
repnz
xor
cmp
pop
mov
cmp
mov
pushf
dec
sarl
shlb
mov
dec
call
and
rcll
les
xchg
iret
filds
aaa
test
sub
jg
mov
push
in
mov
dec
fucom
or
cmovp
add
rcl
scas
xchg
outsb
or
push
push
inc
leave
xchg
stos
xor
nop
aaa
aad
daa
inc
push
mov
inc
hlt
push
mov
fildl
movsb
push
ret
and
cs
dec
lret
pop
imul
outsb
lahf
jl
outsl
ljmp
xor
inc
push
fmuls
add
cmp
lcall
push
out
fbld
or
fstps
cs
pop
outsb
mov
adc
lods
xchg
push
jbe
test
aad
xchg
dec
pop
add
lock
scas
cmp
xor
jecxz
icebp
imul
mov
mov
ficompl
dec
mov
inc
mulb
stos
aaa
out
cmp
pop
lea
xchg
std
dec
mov
mov
xchg
adc
push
scas
fmull
sub
sahf
aad
sub
ret
enter
adc
pop
das
fcmovnb
mov
seto
xchg
sub
aad
lods
pop
cld
mov
es
mov
nop
pop
adc
cmp
or
sbbb
pop
out
aas
pop
clc
dec
mov
clc
imul
fimuls
xor
loop
ljmp
inc
pushf
les
in
in
sub
daa
lcall
cmp
push
movq
mov
aaa
vmovhps
fcomip
push
cld
sahf
xor
sti
rcrl
in
jge
and
cmpsb
jbe
pusha
and
inc
out
xor
rcrb
xchg
jle
sarb
mov
push
jle
push
push
call
lods
cld
outsl
sbb
xor
adc
int3
arpl
movsb
mov
cmpsl
addr16
cmp
in
push
push
mov
pusha
cmp
ja
cmc
push
add
pop
push
lods
push
insl
fnstcw
lahf
mov
mov
xchg
daa
bnd
nop
add
dec
cmc
fwait
cmpsl
rcr
mov
fldt
ret
mov
ret
xchg
sub
loopne
shl
sub
loope
sarl
jnp
imul
sbb
pop
std
ss
cld
push
jle
lret
sbbl
pop
dec
dec
adc
mov
and
dec
sti
jle
leave
and
xchg
dec
frstor
lea
mov
push
jnp
mov
test
stc
fnstcw
or
nop
repnz
sub
scas
rolb
jns
pop
sub
rcrl
inc
fsubl
arpl
push
hlt
int3
jge
mov
push
sbb
shll
jnp
movsl
aas
mov
fcompl
cmp
jge
test
dec
aas
mov
mov
mov
pop
add
add
push
pop
outsb
pop
pop
repnz
mov
shr
sub
test
ljmp
mov
sub
xor
aad
sub
mov
scas
xor
icebp
jo
pop
jmp
fistl
xor
pop
lret
aam
dec
mov
call
ret
push
push
mov
cmp
shrb
pop
lock
sti
and
icebp
mov
and
cmc
cmp
xor
cmp
cs
mov
negb
pop
je
test
fisubrl
test
imul
jmp
inc
movsl
dec
shlb
aam
stc
das
loope
pusha
sub
mov
jns
push
jns
cmpb
xlat
pop
jns
scas
mov
jl
dec
xor
rcr
incb
das
cmpl
std
lret
add
push
xor
addl
fsubrs
mov
jae
je
in
jnp
pushf
dec
jecxz
call
stos
sub
xor
outsb
lods
sub
repz
dec
pushf
fidivs
outsb
int
jl
test
adc
dec
add
loopne
inc
out
fidivs
sbb
mov
push
sub
and
fisubl
scas
fwait
inc
sar
jp
cmp
mov
cmpsl
mov
popa
cmpsl
fldl2t
fmuls
jle
insl
cmc
mov
add
adc
mov
mov
xchg
shr
movb
lcall
mov
in
addr16
mov
adc
js
xchg
movsl
jge
adc
mov
add
lea
jl
ja
pushf
dec
mov
xchg
call
cmp
sub
loope
clc
adc
mov
cli
adc
out
pushf
lahf
repnz
lods
or
adc
jae
adcb
xchg
xor
aad
loope
ret
or
out
fwait
popa
mov
xor
insb
out
sbb
mov
mov
pop
add
mov
or
jae
cmp
cmp
cli
dec
sbb
cli
and
inc
pushf
xor
sub
call
xchg
int
mov
mov
loopne
mov
adc
push
fwait
cmc
sarb
incl
pop
xchg
mov
dec
insb
adc
js
shlb
mov
enter
scas
push
dec
stos
push
fucomp
pop
lret
xor
pop
cmpsb
adc
dec
push
xor
mov
in
je
je
nop
add
push
data16
jno
xchg
adc
orb
dec
data16
xchg
mov
dec
and
das
hlt
sub
es
daa
jge
test
mov
daa
rolb
iret
out
xchg
mov
shlb
clc
mov
sub
xchg
sbb
enter
enter
sahf
push
pop
sub
nop
repnz
inc
movsb
les
pusha
lock
shld
xor
sti
jo
sub
fadd
lcall
cmpsb
test
xor
adc
rorl
cltd
add
hlt
outsb
push
cmp
shll
push
push
movsl
lret
lret
es
cltd
mov
inc
adc
icebp
mov
mov
insl
inc
testl
cmpb
mov
lahf
mov
mov
cmp
int3
add
add
and
and
jne
ds
repnz
movsb
ret
xchg
out
inc
leave
in
iret
icebp
scas
push
inc
sub
es
shl
inc
mov
dec
in
aaa
xor
jge
jns
dec
pop
fstpt
enter
cli
fstp
mov
aam
dec
call
xor
fwait
xor
mov
mov
orl
sbb
sbb
nop
mov
and
movsl
push
stos
push
shll
add
pop
xchg
filds
cwtl
psubw
enter
hlt
mov
mov
xor
ficompl
test
jmp
mov
add
xor
sbb
inc
ljmp
push
adc
test
xor
cmpsl
in
push
incb
and
push
jno
push
xchg
popa
xor
loopne
or
mov
stos
mov
jle
xor
pushf
xor
jne
jle
lret
data16
repnz
cmp
sub
movsl
fmuls
shll
mov
sub
push
or
adc
pop
lahf
das
test
popf
pop
ds
movb
xchg
add
xchg
mov
or
sbb
jmp
xor
xchg
sub
mov
mov
sub
jle
rorb
and
mov
lods
push
jae
add
popa
mov
repnz
jno
adc
sti
fwait
sub
cmc
loope
push
cmp
xlat
cmc
mov
call
je
insb
rcll
cmp
ds
adc
popf
stos
lret
cld
xchg
movzwl
insl
push
fs
sbbb
in
sub
minps
nop
jge
iret
push
test
mov
and
fsubrl
aam
dec
sub
pop
rcr
jnp
dec
xchg
pop
fistpl
xor
popf
outsl
sub
or
mov
jp
and
xchg
push
push
pop
jg
test
mov
add
popf
gs
cs
mov
xor
popa
into
gs
mov
ja
inc
jae
jb
xchg
stos
ja
mov
mov
cmp
adc
adc
cs
sbb
sub
sbb
push
sbb
mov
and
dec
ljmp
arpl
sub
aam
adc
xchg
pusha
clc
mov
sarl
cmp
repnz
lock
xor
lret
jae
mov
mov
in
pop
stos
push
inc
ds
in
jo
and
add
mov
loopne
pop
js
xchg
mov
lock
add
es
cmp
les
fdivs
cmp
dec
xchg
inc
or
sub
pop
stc
cmp
sti
push
xor
mov
push
out
rcll
cmpsl
jno
ror
mov
test
push
mov
dec
jecxz
repnz
popa
mov
push
imul
rol
arpl
mov
out
int
lahf
jmp
adcl
xchg
or
data16
mov
sub
cs
jmp
fcmovb
jo
sti
mov
shlb
data16
fs
arpl
into
adc
addl
add
or
sub
es
sbb
je
clc
into
insl
push
scas
sahf
lret
ds
iret
xchg
mov
cmpsl
push
and
pshufw
jno
je
inc
xchg
les
outsl
stos
inc
inc
das
outsb
notb
stc
fildll
mov
scas
pop
daa
outsl
ds
fwait
xor
bound
xchg
mov
push
test
adcb
jae
adc
sub
push
sbbb
mov
out
push
mov
cmpsb
ljmp
push
add
mov
sti
popa
xor
inc
loopne
addr16
shlb
rcrb
xchg
add
dec
mov
xchg
pop
or
xor
ja
lds
cmpsb
sbb
mov
adcl
sub
repz
and
mov
pop
in
cld
xchg
xlat
loope
dec
cmp
sbb
xchg
push
jl
mov
fwait
insl
dec
xchg
and
push
push
xchg
in
xchg
and
mov
pop
mov
mov
enter
add
cltd
fistpll
and
cmpsl
ss
fstl
push
mov
pmulhw
or
int3
dec
or
mov
sarl
cmp
sahf
insb
mov
cld
cmp
lahf
push
test
adc
nop
std
fisubs
pop
xor
jp
push
sahf
sbb
std
aaa
push
pushf
mov
ja
dec
adc
mov
loopne
lret
adc
add
ret
sti
int
ljmp
sbbb
xchg
insl
push
ret
jae
cmpsb
mov
cwtl
scas
add
jns
cmp
ljmp
call
dec
in
shrb
scas
lea
push
stc
rcrb
jbe
adc
cltd
xor
xor
pusha
add
ljmp
test
cltd
sahf
mov
inc
sti
hlt
mov
ret
push
jnp
scas
cmp
jle
rep
xlat
cs
or
dec
xchg
inc
mov
mov
push
arpl
sbbb
sbb
mov
mov
pushw
leave
xor
cmpsl
sbb
inc
lods
inc
push
xchg
dec
repnz
xchg
into
fimull
jb
mov
imul
out
adc
out
jmp
arpl
mov
lret
mov
je
iret
sbbl
call
sahf
nop
ja
or
jnp,pt
jo
xor
in
ss
push
push
push
or
cmp
shll
jge
jnp
mov
rcll
mov
or
mov
sub
jle
inc
fnstsw
out
push
pop
mov
fidivrs
aam
dec
push
push
jo
pop
inc
movsl
adc
dec
mov
dec
xchg
jno
aad
jns
gs
fldcw
or
fbld
fnstenv
inc
xchg
xor
xchg
mov
pop
mov
inc
sbb
xor
in
jb
test
and
enter
inc
addr16
out
shll
mov
or
xor
pop
xchg
stos
mov
fildll
gs
js
loopne
xor
push
mov
dec
adc
jnp
pop
jbe
fisubs
or
jp
add
mov
sub
cmp
adc
and
sub
jl
jne
and
cli
rcrl
lcall
jmp
jp
xor
mov
xchg
cld
imul
sbb
dec
fisttpll
cmp
movsl
subl
add
addb
mov
adc
aas
dec
aaa
push
cwtl
pop
ss
lea
adc
loop
cmp
test
xchg
movsl
and
xchg
cli
push
mov
scas
xchg
loopne,pn
test
lds
lods
xorl
jns
inc
test
add
mov
jnp
cmpsl
add
lods
xor
nop
push
push
push
lret
ds
std
sbbb
stc
adc
dec
or
fwait
lea
aas
mov
out
jle
lods
leave
jb
xor
sbb
mov
jle
dec
cmp
push
cltd
dec
add
fnstenv
cmp
ret
jb
rorb
jmp
xor
jae
add
and
lcall
push
loop
das
mov
cli
fdivl
mov
cmp
test
adc
fidivl
and
jns
sub
orl
inc
mov
cmp
lods
push
sahf
add
cltd
push
lcall
in
andb
movsb
pop
je
mov
xchg
inc
sub
daa
mov
lea
sarb
mov
mov
lods
lcall
pop
mov
add
fmuls
push
test
lods
pusha
mov
pushf
jge
int3
pusha
shlb
lods
add
cmp
xchg
out
repz
insl
sahf
jecxz
dec
pop
pushf
movsb
jo
fistps
add
call
repz
stos
add
jmp
loop
repz
int
or
daa
popa
inc
push
lds
jb
enter
outsb
push
add
lea
jmp
movsb
shrl
or
imul
test
cmpl
xchg
in
inc
dec
filds
sbb
shll
jmp
rcll
movb
sbbl
mov
ret
mov
xchg
in
pop
cwtl
mov
xor
xchg
gs
push
jmp
mov
jb
jb
xor
jnp
nop
mov
pop
mov
out
jle
mov
andb
cmpsl
add
les
xor
aaa
loope
loopne
mov
pop
pop
lea
sbb
pop
xor
mov
push
push
aam
jae
cs
aam
pop
xchg
lahf
sub
pop
mov
mov
ret
mov
outsb
xor
and
and
and
or
push
add
into
sbb
out
loopne
add
dec
into
mov
test
jl
sub
add
icebp
dec
aas
imul
mov
es
mov
test
cmp
rcl
pop
jp
push
jp
xor
jb
xchg
cmpl
leave
mov
int3
adc
std
pushl
ret
or
dec
fcompl
inc
xlat
push
imul
fmuls
scas
pop
sti
adc
in
adc
sub
and
sbb
xor
jnp
jbe
push
pop
adc
test
popa
xlat
pushf
dec
mov
xor
mov
or
pop
mov
and
jbe
mov
mov
leave
xchg
xor
sbb
aaa
repz
test
mov
insb
movsb
cmp
ret
inc
lock
ljmp
int
push
xchg
mov
pop
jecxz
mov
ficompl
stos
or
jge
cmpsl
mov
sub
pop
cwtl
dec
mov
jge
sbb
enter
mov
jge
mov
movsl
adc
mov
movsb
push
icebp
jmp
in
jp
cmpsb
frstor
inc
nop
int3
negl
and
cli
test
jae
insb
xchg
nop
cwtl
mov
popa
mov
xchg
cmc
xor
sbb
and
jle
and
cmpsb
jnp
mov
fcomps
inc
mov
dec
shrb
or
mov
push
pop
adc
xlat
pop
pop
out
pop
cli
add
xor
xor
or
bound
loopne
popf
adc
insl
pop
or
sbb
mov
fdivrl
andl
mov
imul
leave
push
xchg
sub
pushf
shlb
les
std
dec
std
cltd
loope
xchg
pop
test
lds
ja
mov
fstpl
in
outsl
jl
xor
arpl
shlb
xchg
sub
test
mov
fisttpll
add
push
mov
sar
repnz
adc
stos
insb
mov
dec
jnp
test
adc
mov
jecxz
xor
cltd
or
adc
js
mov
sbbb
xor
scas
lods
sub
sbb
pusha
adc
ja
fiaddl
shlb
push
addl
in
pusha
sub
push
xor
fisubrl
mov
add
repz
out
xchg
mov
ret
lock
imul
ud2
mov
andl
lds
mov
mov
imul
adc
cmp
push
xchg
xor
mov
frstor
xchg
mov
inc
sbb
xchg
repnz
push
testb
cmp
jnp
inc
insl
dec
nop
inc
lahf
push
push
mov
stos
test
inc
movsb
mov
pop
mov
jmp
push
jno
ret
fistpll
jns
nop
jle
cmc
sub
push
sub
sub
rcll
stos
popf
in
mov
cld
mov
inc
xchg
dec
not
imul
mov
enter
lods
inc
fisubs
lret
in
cmpsb
std
lcall
mov
dec
push
sub
shlb
and
outsb
aad
movsb
cmp
jp
adc
std
sbb
xchg
push
inc
jge
adcl
dec
and
test
andb
mov
bound
ja
mov
leave
loop
into
push
and
test
loope
mov
addl
leave
xchg
ss
dec
add
loopne
test
sbb
add
mov
cltd
sub
jmp
sbb
repz
dec
xchg
mov
xor
aam
repz
sbb
mov
out
push
push
leave
js
sub
add
iret
jp
ja
cmpsl
add
jns
into
jae
jmp
sti
popf
sub
popa
xchg
or
adc
mov
lods
insb
cli
fmuls
add
xchg
pop
rcrl
jns
or
jp
mov
sbb
sbb
mov
clc
mov
mov
rcr
xchg
dec
cmp
movsl
pop
xchg
sbb
insl
and
pop
mov
jne
ljmp
or
and
xlat
adc
test
stc
jl
in
pop
in
or
lret
xor
fcoms
xor
aaa
jne
fs
jp
add
dec
add
mov
dec
jecxz
loop
in
fcomps
mov
ret
mov
rcrl
adc
dec
push
mov
mov
in
insb
mov
jg
sbb
xor
jg
sub
sbb
movsl
in
aam
jnp
std
nop
xor
outsb
cmp
mov
cmp
push
jne
clc
mov
cld
dec
mov
push
fiaddl
fsubl
cmp
scas
call
aam
sahf
mov
xchg
mov
pop
sbb
sbb
or
sahf
scas
pop
push
add
jp
imul
mov
cmp
into
orb
shrb
inc
out
cmc
test
xchg
rol
in
arpl
mov
xlat
orl
or
call
stos
sti
jae
sub
inc
pushf
pop
das
jp
pop
push
sbb
pop
add
jp
jl
adc
jl
iret
imul
push
mov
pop
mov
adc
pop
cltd
push
loop
ja
popa
jg
sbb
ret
xchg
lods
fdiv
testb
mov
push
out
cmp
out
pop
fidivl
cwtl
cltd
cwtl
jmp
mov
add
popa
jb
cmp
dec
push
cld
scas
shlb
push
out
dec
push
xchg
mov
iret
xchg
adcl
sbb
arpl
std
ret
cmpsb
in
test
loope
les
movsb
cmp
addr16
icebp
xor
xor
test
or
pop
lret
std
js
xor
std
jbe
clc
cld
scas
fidivs
push
jb
lods
mov
or
in
pop
shll
cli
fidivl
mov
cli
or
inc
push
inc
out
cmp
xor
sbb
outsb
sub
fldlg2
inc
dec
out
or
xor
jle
mov
push
jg
push
in
fwait
xchg
fmull
jae
ss
pop
xchg
rclb
mov
and
or
dec
xor
cmpb
mov
inc
std
add
je
mov
jmp
mov
insl
jb
stos
mov
and
push
xorl
push
mov
pushf
and
in
cs
lock
inc
lea
inc
outsl
fsubr
mov
movsl
icebp
movhps
rorb
jge
pop
cmp
repz
ret
outsl
into
adc
adc
xor
push
xor
jns
jecxz
and
mov
mov
aam
addr16
pop
mulb
out
int3
test
mov
or
clc
jecxz
inc
movl
inc
inc
mov
daa
cmp
ret
pop
aaa
dec
push
jmp
inc
sbb
enter
mov
popf
push
jl
aam
pop
cmc
cld
insb
out
dec
dec
lock
int3
sbb
arpl
mov
push
jbe
lods
mov
mov
cs
mov
lods
loopne
xchg
daa
ja
cmp
movsb
lods
push
ja
jae
add
pop
addl
or
and
adc
in
xor
xchg
pop
outsl
sbb
xchg
out
mov
push
xchg
push
and
icebp
mov
ljmp
add
lret
test
dec
sub
dec
and
sbbb
mov
dec
hlt
mov
in
cmp
scas
cmp
lods
and
cwtl
xchg
push
test
dec
xor
and
and
test
cmp
jge
xlat
mov
jge
adc
mov
pop
push
adcb
cmp
cmp
into
cld
push
data16
ficoml
or
in
pusha
jae,pn
fcoms
and
cltd
mov
sti
mov
inc
aad
pop
pop
mov
xchg
mov
or
insb
testb
mov
mov
inc
neg
icebp
jo
add
ret
mov
sbb
stc
xlat
add
int3
sbb
clc
in
and
adc
pop
lock
stos
xor
jno
dec
pop
sbb
mov
mov
and
decb
movsl
int
pop
shll
add
test
cmpsb
pop
cmc
push
ret
xchg
mov
mov
mov
mov
mov
cmp
jg
mov
lds
rclb
arpl
test
imul
cwtl
stos
mov
cmp
sbb
testb
cmp
mov
jb
out
xor
call
aad
es
jge
jno
mov
subb
mov
xchg
dec
icebp
mov
testl
icebp
xor
sbbl
push
mov
xor
jecxz
imul
imul
test
out
lds
and
xor
pushf
aas
popf
sahf
clc
xchg
jmp
mov
jb
sub
dec
push
and
out
sbb
lcall
jp
test
adc
dec
push
dec
mov
dec
mov
xchg
inc
xorl
daa
test
test
jno
into
sub
mov
nop
into
fcmovbe
adc
test
icebp
cld
mov
cmp
mov
outsl
nop
sub
test
scas
shlb
jb
cmc
bound
mov
pop
xor
inc
lods
lds
into
inc
cmp
sbb
dec
repz
jp
fstps
push
add
cwtl
gs
lret
cld
leave
sarl
mov
iret
cmpsl
sbb
int
sub
imul
add
sbb
adc
xlat
lret
repnz
ss
add
cltd
subl
out
push
xchg
les
xorl
aam
imul
cmp
in
test
outsb
adc
in
sbb
mov
es
fisubrl
pusha
push
insb
fbld
cmovnp
jle
sub
rcl
hlt
les
inc
push
imul
sbb
imul
jle
test
adc
loopne
mov
mov
dec
sub
test
int
fidivrl
outsb
lret
test
aad
push
xor
subl
xchg
push
xor
sub
mov
lods
pop
cmp
lret
jns
das
dec
cmp
lock
jecxz
xor
jbe
mov
sti
iret
pop
xchg
sub
fiaddl
jbe
scas
addb
inc
mov
mov
or
xor
loope
mov
dec
sarl
inc
fsubrl
push
insb
cmp
push
sbb
lret
rcl
rep
cmp
ret
aam
fucom
jo
out
sub
shll
lret
jmp
std
jl
mov
leave
adc
scas
xchg
aam
out
inc
xchg
inc
movsb
mov
aas
and
and
sub
xchg
std
js
stos
add
add
rorb
cmp
sbb
and
xchg
push
clc
jne
fisubs
mov
push
testl
dec
ja
testb
test
sub
mov
or
imul
add
jbe
push
cmp
mov
dec
mov
dec
mov
sarl
and
incl
scas
cmp
dec
loop
lret
cmp
sub
cmp
inc
xchg
sarl
dec
inc
cmpsb
adc
popa
loop
xchg
sbb
jbe
pushf
outsl
imul
pop
add
daa
repz
fstps
push
sub
fdivl
fcmove
jp
dec
add
xor
add
adc
lock
mov
adc
cmp
add
lahf
mov
mov
pusha
cli
adc
adc
fs
xchg
push
jle
cmpsl
ds
insl
inc
fiadds
cltd
lods
in
fidivl
or
scas
xchg
daa
rol
push
icebp
mov
jns
rcrl
mov
shll
mov
clc
xchg
or
and
cmp
inc
cltd
ficoms
movsb
cmp
mov
aas
xchg
imul
push
repnz
subl
xchg
adc
iret
and
inc
shr
imul
mov
int3
loopne
fdivrs
or
enter
pop
cmp
arpl
pop
dec
add
jmp
xchg
sbb
jle
mov
jge
xor
push
sahf
cmpsl
push
dec
jle
xchg
mov
xchg
jmp
sbbb
mov
mov
mov
or
cmp
pop
push
in
sub
addb
push
imul
popa
fsubl
mov
sbb
icebp
insl
cld
mov
roll
lahf
push
xchg
test
mov
pop
in
lret
shlb
sbb
jg
pop
mov
mov
sbb
xor
push
cs
icebp
pop
inc
sbb
js
push
xlat
insl
inc
add
inc
inc
push
add
xchg
jae
in
das
outsb
cmpsl
push
stc
sbbl
pop
arpl
inc
push
or
mov
push
lods
cwtl
cmpsl
jmp
std
call
jg
mulb
sbb
cmpsb
mov
stos
push
mov
loope
out
and
sub
cmp
xchg
test
mov
mov
xchg
xchg
adc
bound
dec
or
into
lods
jmp
sti
xchg
lds
cmp
loope
mov
cmpsb
jns
sbb
js
fsub
push
sbb
mov
imul
pop
icebp
cmp
xor
push
popa
loop
xchg
fmuls
xchg
imul
mov
xchg
sti
or
add
testl
daa
inc
mov
ret
les
adc
dec
dec
or
push
push
jb
cli
ss
jmp
test
or
imul
movl
xor
and
mov
jbe
jb
lcall
subb
adc
push
jnp
inc
idivb
fsubr
xor
jge
stos
dec
inc
lods
dec
fadds
bound
mov
mov
mov
insl
adc
sbb
pop
outsl
and
test
lock
std
sub
stc
push
fnstenv
lea
cli
jne
cmp
out
stc
fdivl
repnz
ds
xchg
dec
jecxz
js
mov
cld
xchg
sub
sbb
scas
lods
jecxz
dec
jb
shlb
xchg
loopne
enter
js
xchg
repz
add
mov
inc
imul
cmc
imul
adc
or
mov
mov
and
leave
and
out
jno
shll
test
add
arpl
cmc
dec
das
xlat
sub
inc
mov
test
clc
xchg
push
and
inc
cmp
jnp
lahf
jno
mov
xlat
repz
push
std
lods
cmpsl
push
inc
ret
jne
in
cmp
rorl
inc
pop
and
icebp
sbb
jmp
jno
popf
andb
jmp
movl
mov
add
xor
pop
rolb
in
xor
stos
daa
xchg
dec
popf
xchg
fdivrl
xchg
cmc
or
mov
icebp
xchg
addl
out
jmp
or
xchg
push
sbbb
int
pmuludq
imul
sub
inc
lret
push
mov
ljmp
sub
xchg
addb
stos
leave
add
or
cmp
pop
sub
mov
jmp
in
cmp
mov
aad
rorb
je
xor
out
cmp
shl
xor
bound
lahf
sub
ss
idivb
int3
aas
push
popa
ss
fmull
xchg
mov
lret
lea
in
out
sti
push
stc
sub
pop
orb
call
test
jo
push
sbb
fdivs
xor
emms
add
ljmp
shlb
loopne
cmp
mov
in
test
jge
bound
movl
cmp
inc
or
or
cmp
test
xor
mov
out
stc
mov
sbb
fsubl
sbb
inc
fisubrl
or
dec
into
xor
adc
sbb
sbb
adc
pushf
imul
les
xor
or
jnp
and
jmp
insl
in
je
imul
cmp
mov
and
outsl
fnstenv
in
incl
cld
lcall
pusha
push
xchg
inc
fcoml
inc
ret
inc
push
add
push
jp
sbb
clc
jg
mov
lahf
sbb
testl
decl
lods
stos
sub
or
or
ss
out
pop
add
das
pusha
lret
sub
das
jbe
add
sbb
jg
data16
test
mov
mov
data16
les
mov
pop
outsl
fs
jae
outsl
mov
idiv
movsb
cmp
lcall
test
sub
and
cmc
js
jle
roll
mov
lahf
mov
add
mov
data16
lret
push
xchg
call
test
lret
out
xchg
xor
dec
inc
ds
jne
sub
data16
push
xchg
in
bound
pop
mov
iret
lods
cmpsl
or
cmp
push
fisttpl
test
and
daa
adc
inc
dec
cltd
das
inc
addb
scas
addr16
cwtl
adc
rcrl
aam
dec
or
pop
sub
sub
xor
in
repnz
cmpsb
ficomps
ds
xor
lea
aas
movsl
ljmp
jl
xchg
push
enter
ja
xor
nop
ljmp
sbb
repz
stos
pusha
sub
les
xchg
pop
xor
cli
cwtl
xchg
xor
inc
xor
mov
push
or
mov
mov
cmpsl
flds
ficompl
imul
shr
mov
dec
out
adc
imul
lock
js
js
and
xor
lcall
out
pop
and
push
test
lods
int3
movsb
test
inc
push
insb
iret
gs
xchg
mov
push
xchg
lods
arpl
pop
cmp
mov
xor
pushl
loopne
out
or
lcall
pushl
mov
adc
xchg
adc
insb
pop
inc
ss
ds
sbb
adc
and
cltd
pop
mov
lcall
mov
popf
xor
aam
out
out
and
cmp
dec
fidivrs
adcl
and
or
ljmp
cli
cmp
or
call
push
cwtl
mov
mov
sub
add
adc
inc
push
fbstp
in
cmp
arpl
gs
sub
or
stc
pop
xor
pop
mov
sub
mov
mov
push
dec
int
jae
rol
sbb
aad
push
xor
cmc
and
movsl
and
pop
in
lods
outsl
inc
addr16
popf
mov
jmp
adc
jge
popf
scas
sbb
repnz
dec
popf
stos
jl
jp
cmp
jnp
aam
sub
stos
cmc
xchg
push
add
shrl
xor
inc
mov
imul
add
mov
sbb
pop
jb
push
lahf
xor
pop
cmp
mov
mov
lods
les
shrl
out
cli
xlat
inc
popl
dec
xor
jnp
movsl
test
iret
enter
adc
inc
lods
out
mov
fcmovnbe
insl
mov
mov
push
adc
arpl
mov
sub
in
jmp
sahf
lcall
lock
mov
dec
pop
clc
in
or
idiv
movsb
ja
xlat
add
sbb
adcl
popf
add
pop
rol
or
repz
nop
fwait
cmp
outsl
inc
push
int
cmp
sbb
mov
pop
imul
cmpsb
lock
stc
popa
pop
imul
stc
nop
push
cmpsb
fldenv
mov
fsubrl
mov
or
rorl
mov
mov
pop
ja
mov
cmpsb
insl
enter
sbb
sti
jae
and
jge
xchg
enter
mov
cmpsl
mov
shr
int
add
shlb
mov
cmpsl
out
mov
sbb
jp
adc
popf
mov
sub
int
repz
and
push
rolb
add
mov
retw
push
mov
pop
icebp
jmp
ret
jle
xchg
js
mov
push
les
sub
fstpt
or
ret
dec
lds
rep
inc
cmp
push
mov
sub
lcall
scas
js
clc
mov
popf
push
nop
pusha
mov
lds
pop
cmpl
aad
add
pop
cmpsl
add
outsb
inc
push
je
ret
xor
jbe
mov
hlt
aas
push
lods
lock
push
icebp
push
mov
sbb
inc
pop
mov
pop
jmp
icebp
mov
dec
xor
push
lods
pop
in
ljmp
push
addr16
cwtl
loopne
xor
xor
xchg
cmpsl
mov
sub
dec
test
pushf
inc
cmp
cmp
push
or
push
das
lahf
sub
rorb
pusha
popf
test
ret
mov
call
add
outsl
ss
jl
imulb
push
add
sbb
cmpsb
cmp
pushf
fcompl
mov
movsb
mul
and
lahf
pop
aaa
stos
fisttpll
mov
out
stos
in
les
fldcw
pop
sbbl
jmp
mov
mov
mov
pop
cltd
xor
jecxz
push
flds
repz
adc
adc
push
cs
pushf
sbb
mov
add
sub
ss
cmpsl
das
filds
mov
lcall
dec
inc
fnstsw
adc
shr
in
pop
jecxz
add
pop
loopne
in
mov
adc
xchg
jb
addr16
push
mov
sti
xchg
icebp
shll
iret
xor
sbb
and
mov
inc
pop
dec
lods
inc
mov
and
sti
push
js
ret
cmc
mov
mov
lahf
push
scas
hlt
int3
mov
js
ss
fxtract
jl
add
cmp
stos
push
rcrl
pusha
add
pop
cld
push
lcall
enter
adc
dec
popa
xchg
adc
fimuls
jecxz
cmp
mov
add
cmp
jo
xchg
dec
fcoms
cmc
pop
jge
in
cmpb
inc
stos
inc
adc
enter
push
into
push
sbb
sbb
mov
mov
mov
inc
ficompl
scas
mov
jnp
clc
stos
inc
sbb
push
adc
test
pop
sub
dec
loopne
xor
jnp
dec
xor
pusha
out
data16
xchg
adc
add
sbb
push
adc
or
in
test
pop
scas
add
repnz
adc
mov
sub
and
pop
cmp
shrl
movsl
mov
in
dec
repnz
std
cltd
std
adc
imul
mov
orl
gs
mov
mov
dec
inc
pop
mov
sbb
icebp
dec
rclb
pop
insl
add
xlat
sbbl
pop
cmc
nop
sub
xchg
cmp
xchg
gs
add
cmpsb
xchg
jnp
dec
inc
icebp
cmpb
js
xchg
clc
and
fisubrl
or
ljmp
outsb
jl
jge
push
lahf
mov
xor
inc
clc
push
lods
clc
inc
or
cli
add
hlt
jae
mov
sbb
cmp
movsl
outsl
mov
in
ds
jg
je
adc
or
lock
lea
inc
xchg
loop
jo
dec
mov
fcoms
push
jno
adc
mov
lahf
mov
into
mov
enter
mov
and
sbb
dec
push
cltd
cmp
outsl
add
sbb
mov
push
outsl
out
mov
paddsw
data16
ror
jecxz
pop
dec
loop
ret
ljmp
push
push
imul
aad
lret
in
stos
jns
cs
notb
aam
dec
insl
inc
pop
jo
repnz
fwait
daa
mov
inc
push
fsub
out
outsb
sbb
pusha
jmp
mov
or
popf
mov
xchg
daa
imul
mulb
xchg
and
lods
jbe
outsl
mov
loopne
adc
imull
xchg
or
decb
cmp
roll
out
pop
ja
out
test
dec
scas
dec
dec
in
inc
jg
ss
dec
push
test
mov
xor
mov
ror
push
inc
arpl
in
pop
push
dec
push
jmp
ds
shr
fs
xor
xor
and
mov
sub
adc
dec
jle
popf
lods
sarb
xor
fucomi
sahf
and
clc
or
pop
mov
xchg
sbb
fucomip
fcmovne
test
movb
push
pop
int3
pop
mov
fs
in
and
movsb
push
fwait
sti
addl
idiv
mov
mov
in
icebp
dec
jb
shlb
pop
out
push
adc
sar
adc
adc
xor
jecxz
dec
xchg
mov
fidivl
sub
cwtl
das
push
dec
sbb
js
inc
in
mov
mov
fisubl
rorb
cmpl
sbb
xchg
fstps
ret
push
cmp
shll
or
das
mov
xchg
aam
mov
repz
roll
ds
push
mov
or
lods
xchg
add
push
daa
sbbl
mov
sbb
aas
test
sub
and
aad
fstl
rep
sbb
or
xchg
daa
sub
fwait
jns
int3
jecxz
ret
xchg
bound
lahf
ljmp
jb
out
in
icebp
test
lret
sub
test
lret
and
mov
jb
xchg
sub
ja
lods
test
mov
cmp
stc
inc
mov
inc
pop
xchg
out
xchg
sub
xchg
mov
mov
iret
das
jp
add
cmc
adc
jecxz
add
shll
es
clc
or
inc
insl
or
lret
data16
cmp
pop
scas
insl
xchg
dec
rorb
sbb
stc
sub
pop
mulb
jge
adc
inc
push
data16
imul
insl
loopne
fs
call
ret
popa
jb
outsl
or
sub
xchg
dec
pop
jno
lahf
div
or
inc
imul
rol
dec
jns
cmp
stos
pusha
fcoml
and
dec
mov
dec
xchg
mov
jp
mov
pop
out
ret
jno
notl
jae
popf
xchg
lret
mov
mov
call
cmp
sahf
clc
inc
lahf
lcall
daa
insb
in
popf
dec
icebp
xchg
add
push
mov
xor
push
sbb
or
hlt
int3
es
jle
mov
sbb
xor
sub
sub
pop
mov
leave
inc
inc
std
mov
stos
leave
jecxz
inc
out
xor
stos
stos
fcmovu
sbb
jl
mov
xor
movl
insb
jb
mov
adc
adc
jge
push
xor
cmp
inc
mov
pop
cmc
mov
xor
push
stos
jl
mov
loopne
shr
cli
inc
fisttpll
pop
and
push
xor
daa
mov
pop
cmp
and
adc
test
outsb
sbb
xor
in
jno
cmpsl
not
fldl2t
add
mov
arpl
xchg
or
jb
adc
int3
jnp
add
inc
lods
pop
cli
out
inc
in
scas
ret
cmp
fwait
ret
xchg
insl
rorl
xor
pop
cmp
inc
icebp
icebp
xchg
xchg
testl
enter
jb
test
outsl
add
aam
mov
or
ljmp
js
lahf
push
lret
addr16
mov
or
inc
push
std
cmc
mov
lahf
mov
and
mov
cwtl
imull
cmp
mov
test
lods
call
fs
lock
fldl
push
dec
ds
push
jnp
pop
xchg
sub
shrb
test
inc
ficompl
sub
cmp
mov
les
hlt
push
xor
lret
sahf
lret
lods
mov
repz
std
pop
mov
in
fwait
sahf
fwait
dec
aaa
push
jnp
and
clc
mov
mov
insb
daa
jle
xchg
sti
mov
and
dec
or
popf
jne
sub
jbe
shr
mov
sub
xor
popl
jmp
push
fildll
add
int3
adc
jbe
fdivs
call
lret
cld
xor
fidivrl
dec
les
nop
sbb
xchg
add
stc
mov
fwait
test
ds
jb
mov
hlt
std
xor
orb
or
push
mov
out
push
lcall
popa
clc
jp
or
cmp
and
stc
pusha
sbb
rclb
jbe
test
test
loopne
testb
pushf
ret
jae
outsb
in
cmp
sbb
xor
pushf
inc
shrl
repnz
mov
pop
mov
inc
inc
sub
cmp
cwtl
out
pop
and
aas
add
xor
arpl
xchg
lahf
addr16
lods
sbb
sub
stc
cmp
mov
pop
sbbl
pop
in
rcrb
or
les
dec
in
jnp
fdivl
mov
mov
adc
inc
enter
mov
leave
pop
cmp
call
loopne
sub
ja
out
sti
mov
add
mov
stos
jge
push
jb
movsb
imul
jb
mov
jp
test
cmc
cmp
pusha
mov
or
aaa
mov
cld
xchg
int
sub
popf
inc
or
mov
adc
push
icebp
outsb
inc
mov
leave
test
rcll
or
bound
xchg
adc
bound
push
push
mov
fcoms
mov
jg
pop
xor
outsl
daa
xor
dec
mov
lods
mov
add
test
adc
xor
jno
inc
call
push
cld
inc
enter
fdivs
stos
push
xorl
imul
rcll
rcrl
addr16
mov
pusha
sub
test
cmp
orb
jno
es
push
and
fdivs
rcr
test
hlt
jb
xchg
popf
sub
loope
dec
sbb
xchg
imul
mov
insb
pop
mov
sub
std
add
mov
mov
jmp
push
pop
adc
pop
aas
push
fnstenv
test
cmpsb
jnp
jl
xchg
xchg
ss
inc
mov
pop
mov
sarb
add
pop
mov
mov
cmp
lods
jecxz
dec
pop
pop
cltd
jb
or
push
mov
pop
fisubrl
cmp
pop
fsubl
add
mov
push
mov
outsb
ret
ja
and
ds
dec
lahf
hlt
out
pop
pop
es
es
sub
push
test
sbb
xor
mulb
lds
fisttpll
scas
fs
fsub
ss
sbb
test
and
add
sub
mov
mov
jg
ss
pop
xchg
jmp
dec
ljmp
jb
sti
out
add
loop
or
xor
sbb
leave
xchg
dec
or
pop
add
xchg
add
mov
mov
pop
shrb
ja
jns
inc
lahf
xlat
lcall
sub
cmp
repz
jo
dec
mov
adc
stos
subb
xchg
push
pop
fsubrl
pop
arpl
pop
inc
aas
adc
fstps
lock
fwait
jo
imul
lret
ja
test
pop
shrl
mov
das
add
sbb
pusha
jmp
out
or
mov
push
stos
inc
test
xor
push
xchg
push
sarb
mov
aas
xchg
mov
pmulhuw
dec
mov
lds
push
sbb
fisubrl
aas
popf
sub
in
mov
sbb
mov
xchg
out
shr
and
int3
xchg
cmpsb
or
xchg
sbb
cmpsb
xchg
dec
pushf
mov
stos
aas
push
mov
or
mov
mov
insl
jno
push
ret
jge
xor
outsb
xor
stos
mov
fidivs
hlt
mov
xchg
in
cmp
or
inc
shr
js
out
jne
pop
test
adc
cld
xchg
add
sbb
andl
fcompl
fidivrl
sub
mov
pop
xchg
inc
sbb
repz
cld
into
adc
stos
dec
fistps
xchg
pop
mov
push
sbb
lret
mov
cmp
rcrl
pop
add
paddusb
xor
jle
or
cmp
mov
push
cmp
dec
pop
rorl
mov
rorl
cmp
loopne
gs
xchg
es
push
jl
je
add
rcl
sbb
pop
lcall
and
xchg
pop
xchg
and
mov
jl
xchg
or
mull
mov
movsb
dec
inc
ljmp
lock
sahf
mov
test
sub
fnstenv
jp
push
shll
add
cmp
loop
jb
out
and
roll
xlat
or
dec
arpl
or
jnp
adc
add
cmp
and
ss
lea
scas
stc
xchg
mov
leave
inc
mov
nop
out
jecxz
call
sub
inc
lock
inc
cltd
scas
repz
dec
sbb
cmp
sub
mov
dec
sbb
jnp
add
int
mov
shrb
leave
cli
out
bound
shll
inc
jb
popf
out
rcrl
mov
xchg
lahf
xchg
mov
jb
imul
mov
dec
cmp
jl
fs
scas
stos
rclb
js
pop
mov
incl
dec
loopne
inc
lret
repnz
and
sub
int3
test
dec
jle
pushf
ret
sbb
stos
jg
push
mov
cmp
xchg
mov
dec
shr
aam
inc
outsl
movsb
sbbb
mov
sti
cs
mov
fcmove
loope
jp
adc
jge
jo
mov
jnp
push
pop
test
pop
mov
cld
mov
mov
outsb
push
mov
daa
mov
jbe
push
dec
in
sbb
xchg
dec
popf
imul
xchg
pop
clc
adc
test
or
mov
push
mov
lods
lea
xchg
mov
call
or
jge
aas
in
xchg
sub
aaa
pushf
cmpsb
inc
push
pop
xchg
adc
add
xchg
add
mov
inc
faddl
dec
pop
jb
test
dec
push
fmull
movsb
imul
pop
sahf
jo
loop
jp
into
stos
test
jne
xor
jb
cmp
xchg
mov
pop
lahf
popf
mov
imul
cmp
icebp
aam
fiadds
and
push
repz
rcl
and
dec
movsb
mov
lods
inc
iret
dec
and
inc
sti
inc
aas
mov
out
cmp
cld
nop
push
inc
pusha
test
ret
pop
sbb
and
cmp
repnz
sub
cmpsl
push
sub
lds
xchg
sbb
scas
dec
mov
pop
jno
xor
rcll
int3
mov
or
hlt
dec
insb
pusha
fidivs
xchg
add
jnp
mov
push
rol
pop
add
repnz
pop
push
pop
mov
inc
out
scas
shll
lret
push
stos
adcl
or
jae
aam
push
cwtl
push
icebp
dec
data16
mov
arpl
js
stc
inc
pop
xor
push
std
inc
pusha
inc
dec
jnp
test
popa
cmpsl
sub
mov
fnstcw
addl
sahf
les
cmpsb
js
sahf
xor
pop
xlat
testl
clc
pusha
subb
hlt
shlb
dec
pop
push
pop
cmp
mov
decl
lcall
mov
adc
sti
rorb
cmpsl
jl
data16
sbb
mov
pop
xor
mov
repnz
mov
flds
or
add
loopne
mov
lcall
cwtl
push
dec
lea
mull
dec
int
addr16
adcl
dec
sub
loop
dec
arpl
mov
mov
lods
aas
dec
mov
rclb
int
repz
or
popa
in
cwtl
das
xchg
jb
fiadds
sbb
outsl
popa
enter
xor
inc
jle
imul
adc
imul
aaa
repnz
jns
mull
and
cmc
popf
push
hlt
adcb
jae
imul
movsb
out
popa
and
ret
lods
in
mov
imul
lcall
xchg
mov
stc
adc
cwtl
xor
leave
es
les
adc
lods
pop
or
xor
sbb
es
es
inc
orb
cmp
sub
sahf
imull
je
popa
sbb
mov
int3
jecxz
fistl
call
sti
loop
into
fmulp
push
xchg
aas
inc
in
gs
push
dec
or
scas
inc
lahf
or
out
in
mov
std
xchg
imul
out
and
int
sub
push
fstps
shrl
push
pop
lods
sti
icebp
sub
adc
add
mov
adc
fildl
jg
adc
pop
sar
mov
imul
pop
repnz
ljmp
arpl
pop
stos
ret
vprotb
aam
mov
xchg
mov
sbb
out
and
scas
sub
int3
push
xlat
sbb
or
xchg
mov
pop
mov
cmp
mov
popa
mov
call
adc
push
lods
pop
lret
jb
imul
push
cmp
std
fs
repz
mov
sub
lret
in
scas
js
das
fcmovnb
pop
fcmove
int3
adc
sti
in
icebp
xchg
repz
sbb
and
popf
clc
cmp
sbb
push
mov
sub
out
popl
mov
arpl
lret
xor
dec
sbb
xor
pop
cmp
or
lret
out
sub
add
pop
les
xchg
andb
fidivs
pop
sbb
enter
xor
mov
stos
lret
cmpsb
push
mov
jmp
pop
sahf
push
xchg
jno
out
add
xor
mov
repz
sub
enter
pop
ljmp
xchg
inc
test
ret
negb
sub
leave
lret
xchg
outsl
and
lret
leave
xchg
mov
mov
in
into
sub
or
lock
xchg
mov
xor
clc
mov
pop
or
pop
and
fsub
push
call
js
mov
cmp
mov
push
pop
push
inc
ds
jle
insl
ljmp
enter
into
adc
add
std
fdiv
jl
test
loopne
lods
cmp
adc
divl
test
into
dec
loope
cmpsb
xchg
add
sbb
mov
mov
ficoms
popf
and
aas
aaa
adc
and
pop
dec
pop
xor
psubq
mov
push
nop
sub
pusha
or
pushf
xor
lods
mov
shrl
mov
ficoml
movsl
xchg
xchg
push
dec
mov
jne
lea
movsl
adc
fs
sbb
adc
movsb
jg
xor
mov
mov
cs
aam
adc
ss
dec
stos
jg
fucomp
icebp
adc
lret
loopne
pop
addr16
in
xchg
jecxz
xchg
sub
call
in
je
aaa
pop
std
xchg
push
mov
xchg
sarl
cmp
pop
lret
movsb
cmp
jno
mov
enter
btc
xchg
in
repz
rcrl
push
jge
mov
and
mov
mov
jno
addr16
xor
push
jns
or
cwtl
lcall
imul
cmp
call
sbb
adc
dec
imul
int3
sbb
shlb
pop
mov
dec
out
mov
adc
lret
fucom
jmp
xor
jne
icebp
cmp
mov
and
adc
and
push
lods
sbb
gs
cld
scas
sub
cmpsl
pop
loope
mov
or
and
in
into
or
adc
push
ljmp
int3
stos
inc
mov
mov
sub
jne
jbe
pop
pop
cmp
jge
stc
mov
aas
into
ret
lcall
lret
lcall
mov
lods
inc
or
pop
mov
rorb
int3
sub
movsb
cli
fs
and
xor
loopne
cmc
and
in
inc
ja
push
mov
add
lret
sub
push
cmp
cmp
cmp
adc
cmp
cmc
mov
shr
stos
mov
shld
add
imul
adc
mov
or
push
xorb
test
mov
cmpsl
mov
outsb
push
push
aaa
int3
out
and
movsl
xchg
and
movsb
pop
loop
mov
out
imul
xor
mov
imul
outsb
shrb
mov
mov
lock
ja
outsb
loope
pop
iret
orb
adc
cld
mov
addr16
int3
mov
sbb
je
or
pop
pop
dec
test
sbb
jne
lods
and
mov
les
or
cmp
mov
fwait
push
push
pxor
inc
imul
mov
cmpsl
sub
jg
movsb
fldcw
out
call
mov
mov
outsl
push
mov
stos
xchg
out
mov
cmpsb
jne
icebp
das
sahf
mov
repnz
nop
and
and
scas
idiv
shlb
push
cmpsl
push
lret
scas
pop
add
xor
adc
inc
or
ja
cmp
aas
cwtl
call
repz
dec
or
sbb
nop
mov
jmp
flds
cmpl
xor
iret
mov
loopne
imul
and
adc
mov
icebp
out
mov
mov
cmp
or
dec
sub
out
fdivl
movsl
js
jmp
dec
mov
sahf
hlt
sub
xchg
rcrl
mov
mov
cmpsl
xor
lods
mov
inc
into
inc
pop
adc
adc
jle
pop
nop
loopne
mov
sbb
stc
sbb
xor
pop
jae
jns
loop
inc
and
or
mov
and
hlt
or
sub
pop
xchg
scas
push
sbb
rcrl
xchg
subb
inc
xlat
push
es
pop
gs
push
mov
add
add
sub
je
movsl
push
add
addr16
sti
fwait
sbb
jge
pop
adc
pop
sahf
scas
sbb
dec
lock
pop
hlt
lcall
sbb
pop
xor
cmp
jl
popl
std
mov
clc
popf
lahf
add
ja
xor
test
roll
xlat
mov
mov
pop
add
dec
add
jmp
dec
and
call
fidivl
insl
mov
stos
das
insb
cwtl
clc
sbb
sbb
dec
xchg
inc
mov
jmp
or
mov
insb
scas
rcrb
or
inc
fnstsw
mov
stos
test
fs
stos
cld
add
lcall
in
rolb
mov
fcmovnu
pop
mov
or
cmp
or
in
daa
adc
xor
mov
pop
jmp
sbb
int3
enter
call
cld
or
jp
lods
mov
dec
loope
mov
jne
cld
fdivs
jl
cld
xchg
popa
and
or
lret
andl
sbb
nop
xchg
adc
cs
dec
aaa
repz
jg
sbb
and
ret
mov
mov
mov
mov
ret
les
cmovs
push
and
mov
push
add
in
pop
sub
or
cld
push
out
mov
shrd
filds
xchg
inc
repz
mov
xchg
sub
or
pop
pop
xchg
sub
cmp
mov
aas
aam
sub
jp
loop
xchg
cwtl
jle
sbb
aad
addl
stos
or
and
fwait
or
push
aam
rolb
cld
ja
loop
and
sbb
or
cmp
lods
mov
sti
enter
pop
fsubrs
leave
mov
cmp
cmpsb
push
add
and
add
push
dec
cmp
les
jb
fwait
sub
jbe
mov
cwtl
sbb
mov
jge
mov
xchg
clc
jae
cmp
scas
sub
mov
dec
dec
push
cmp
mov
and
xor
ss
fs
insl
cmpsl
mov
mov
pop
jle
fmuls
jp
adc
cwtl
das
adc
loop
data16
andl
or
test
mov
rol
pop
fimuls
mov
adc
fisubl
test
je
dec
into
mov
pop
test
pop
pop
adc
pushf
divl
lods
adc
xor
out
out
inc
pop
pop
lock
daa
outsl
les
add
inc
movsl
push
js
fistpll
dec
mov
scas
bound
lret
xchg
mov
cli
in
cli
int
xor
xchg
mov
stos
cmpsl
push
cmpsb
inc
inc
lcall
in
nop
xchg
inc
andl
cmpsb
lods
es
jo
dec
shl
repz
or
mov
es
insl
pop
insl
data16
jbe
ror
scas
in
jns
enter
cmp
cwtl
sbb
rorl
and
cmpl
sti
inc
push
sarl
cmp
into
push
push
test
sub
ss
adc
pop
mov
aaa
lret
fldenv
stos
enter
xchg
cwtl
sahf
testb
fists
pop
sub
cmpsl
scas
lds
mov
inc
hlt
push
cmpsb
subl
clc
adc
dec
aas
jecxz
jmp
or
mov
jns
inc
jns
push
pop
jp
cmp
jle
lods
mov
inc
in
pop
fistpll
jmp
call
sti
sbb
std
sbb
pop
in
inc
add
mov
cmp
lods
lods
aam
push
dec
and
push
incl
mov
popf
xor
mov
scas
sub
es
cli
jbe
mov
mov
ret
out
push
and
mov
or
cmpsb
cmp
jge
pop
inc
or
add
into
lret
fldl
in
and
call
mov
or
addr16
adc
dec
test
push
sbb
std
and
stos
mov
orb
lods
adc
popa
ljmp
and
test
inc
mov
mov
sbb
mov
fs
lret
push
rorb
xor
push
inc
insb
rcrb
fsts
ds
jno
xchg
mov
fldl
jae
dec
inc
and
jne
sahf
outsl
rcrl
out
dec
mov
cltd
popf
lods
cltd
dec
jg
jbe
push
out
nop
lods
mov
iret
insl
sub
outsb
mov
lds
insl
notb
sbb
daa
or
adc
imul
sbb
inc
xlat
aad
ja
xlat
stos
pop
mov
cmc
jbe
sbb
cmpsl
les
xor
sub
mov
inc
js
jg
sbb
movsl
push
push
aaa
pop
jno
pop
add
imul
adc
mov
vcvttpd2dqy
and
shrb
and
jo
mov
and
cmc
adcb
add
andl
or
and
jo
xlat
push
mov
movsb
jmp
jno
and
js
outsb
stos
or
arpl
js
mov
loop
rclb
adc
adc
xor
mov
int
cmp
loopne
loop
mov
das
sbb
pusha
repz
fs
insb
add
testl
mov
jge
in
je
scas
mov
bound
inc
fiadds
pop
ss
lods
fdiv
addl
xor
hlt
mov
cmp
dec
test
and
ss
scas
ret
mov
xlat
ret
and
stos
popa
xor
enter
cmpb
dec
out
pop
pop
sahf
ret
pop
xchg
xor
addr16
sbbl
insb
add
aas
inc
test
pop
hlt
sbb
sbbl
lods
mov
fiadds
imul
iret
and
fwait
cld
mov
inc
mov
js
mov
inc
es
lcall
hlt
outsl
pop
scas
test
mov
mov
mov
dec
in
fcoms
out
movsl
push
gs
loop
arpl
jmp
pop
lds
ret
outsl
test
pop
icebp
cmp
mov
sbb
dec
addr16
pop
insl
shll
xchg
push
imul
lock
pop
or
lds
xchg
loope
jae
mov
dec
sub
mov
or
nop
mov
stos
xchg
lods
or
movsb
jnp
decb
push
inc
cmp
into
mull
in
mov
push
jo
lods
cmp
fisubl
and
add
xchg
dec
in
leave
dec
pop
shll
lock
int3
sbb
shlb
or
mov
inc
sub
call
xchg
leave
jae
mov
mov
jnp
sbb
push
push
iret
cli
cmp
xchg
push
divl
or
cwtl
aad
leave
sub
mov
jne
lahf
cmpsb
push
fnstcw
dec
add
adc
call
xor
mov
fisttps
lahf
push
je
jg
movsl
es
cli
pop
ss
repnz
and
mov
or
cwtl
sbb
outsl
imul
push
mov
pop
pusha
pop
aaa
sar
sub
jecxz
lret
mov
mov
xor
or
mov
int
pop
push
sbb
pushf
and
add
sbbb
cmp
dec
sar
xchg
fldt
sub
cltd
xchg
sub
imul
xor
icebp
shl
pop
dec
es
rsm
push
fs
or
xor
xor
lock
push
cwtl
push
xlat
mov
lods
fisubrs
jb
dec
or
cltd
xchg
pop
outsl
in
jo
sbb
movsl
fstpt
scas
insb
js
gs
fnstenv
repnz
mov
addb
cmpsb
push
pop
lret
mov
dec
and
stc
pop
cmp
push
fldl
mov
jmp
sbb
loop
dec
cld
stc
iret
push
pop
cli
ret
mov
ffree
cmc
lock
mov
pop
idivl
sbb
out
add
fsubr
clc
or
sbb
push
or
cltd
cs
sbb
push
sub
pop
daa
mov
ds
into
jmp
pop
push
cmp
push
fldcw
add
pop
ret
sub
xchg
mov
les
xchg
sbb
xchg
xor
ds
pop
sub
cmp
aam
pusha
or
jl
out
mov
insl
jnp
mov
shll
clc
xor
test
push
ss
or
clc
add
xor
in
aas
push
and
fldcw
divl
pop
arpl
outsl
xor
aas
inc
cld
sub
sbb
push
xchg
or
push
cmpsb
lods
imul
jl
sbbb
dec
xchg
mov
mov
xchg
icebp
inc
std
mov
xchg
movsb
lahf
lahf
dec
rcl
fsubs
nop
test
scas
std
mov
pushf
rcll
aam
stc
dec
fidivrl
fidivl
mov
clc
and
outsl
clc
pop
dec
jecxz
aad
pop
xchg
jp
sbb
cltd
sub
repnz
or
xor
and
or
mov
aas
call
pop
adc
adc
mov
stos
test
les
sub
and
scas
xor
les
mov
jnp
in
dec
jno
out
jecxz
dec
mov
vpmulhuw
sub
and
scas
int3
icebp
fs
cld
ret
xchg
sub
and
aas
mov
mov
xchg
push
mov
pop
sti
push
and
cmc
mov
out
push
push
xlat
rcll
add
add
jne
dec
push
jmp
sbb
cmp
sub
dec
mov
and
sub
jmp
fnstsw
dec
mov
push
inc
icebp
push
sub
sarl
inc
xchg
sub
cmpsl
rorb
out
xor
iret
pop
mov
fstpl
add
ret
and
in
inc
pop
movsb
pop
cmpsl
decb
sahf
ss
adc
int
mov
out
or
fxch
mov
cltd
jnp
mov
test
push
les
daa
or
aam
addr16
jnp
sbb
insl
jge
push
fistl
jno
cmp
dec
cmp
and
dec
xor
and
in
data16
mov
xor
ret
clc
or
rolb
ss
dec
adcl
js
movsb
repnz
pop
xchg
add
jo
clc
test
xchg
pop
sbb
jae
and
pop
cmp
mov
sub
xchg
scas
mov
or
adc
pop
mov
cmp
je
xor
arpl
sbbl
mov
cmpl
cwtl
das
add
mov
pushf
cwtl
and
fdivs
aad
fisttps
cli
stos
inc
outsl
pop
out
jns
mov
xchg
mov
sbb
testb
fs
dec
xlat
loop
mov
popa
dec
cmp
xor
insl
jno
popf
je
push
scas
adcb
std
scas
movl
lret
shll
sbb
dec
or
jno
dec
andb
xchg
or
daa
mov
leave
in
inc
in
scas
lds
jmp
out
ret
jp
dec
hlt
fistpl
int
mov
push
movsb
test
sti
push
xlat
cs
mov
or
stc
loope
stos
adc
aad
push
jbe
dec
test
jae
sbb
push
shrb
xchg
rep
add
ja
cltd
loopne
adc
jno
cwtl
out
mov
jae
sbb
mov
dec
adc
lret
jb
shrb
push
pop
leave
repnz
adc
xor
push
lret
inc
jmp
js
pop
test
subb
in
jmp
ret
sub
int
jno
push
pop
cmp
stc
push
sbb
mov
mov
cmc
std
stos
pop
sub
js
loopne
imul
mov
xor
jmp
add
xor
cmpsl
rcrl
fstl
shlb
sub
jno
out
push
sub
adc
jg
xchg
adc
jmp
or
inc
jg
cmp
sahf
outsb
mov
pop
pop
or
movsb
mov
out
xlat
mov
rorl
shll
test
inc
clc
rolb
les
push
or
sub
pop
push
or
sub
dec
push
dec
mov
sbbl
lock
jmp
ljmp
push
sbb
push
jge
rcrb
push
sbb
dec
stc
pop
jl
int3
popf
daa
lock
adc
sub
and
push
dec
shl
jle
les
jmp
pop
lods
jecxz
push
sub
shl
adc
sbbb
mov
push
sbb
jne
and
pushf
std
xor
mov
aad
xor
push
addr16
jbe
cmp
jp
xor
adc
in
lea
adc
lret
xor
lret
push
dec
in
cld
std
or
cmp
adcb
and
inc
std
test
shrb
das
in
fcomi
adc
lods
ljmp
in
lods
fs
imul
push
popf
xor
mov
mov
xchg
push
push
test
orb
aad
les
outsb
sahf
aas
pusha
shl
jnp
inc
ljmp
ljmp
iret
mov
sbb
pop
inc
push
mov
ljmp
subb
aam
lea
sub
ja
sub
sbb
jne
mov
xchg
in
pop
mov
in
and
mov
out
int3
into
sahf
fcomps
xchg
add
sbb
in
jns
or
lgs
daa
mov
rcrl
nop
push
repz
jno
mov
dec
in
fmul
shl
stc
in
push
add
ds
pop
cmp
mov
xor
xor
push
movsl
popa
sub
leave
scas
loopne
call
adc
jl
jae
mov
inc
sub
test
mov
das
loope
add
test
push
cmp
push
inc
out
dec
out
sar
push
icebp
repz
ss
mov
jbe
mov
adc
xor
test
jnp
cs
das
add
xchg
sbb
push
add
jg
pop
cmp
shrb
pusha
pop
repnz
inc
jns
aaa
jno
sbb
insb
lahf
negb
push
mov
shlb
or
out
shll
mov
gs
pop
mov
loope
mov
popf
test
mov
ficoml
mov
adc
fldenv
dec
pushf
xor
push
ljmp
or
mov
les
adc
mov
lods
jb
sbb
and
loope
call
or
fidivl
in
jp
sbb
ss
addr16
sbb
jge
mov
inc
adc
and
test
and
pop
push
scas
jno
imul
mov
mov
test
push
mov
cwtl
gs
adcb
aam
lcall
sbb
xchg
mov
jge
repnz
mov
cmp
imul
roll
arpl
xchg
test
cltd
shl
or
scas
sub
lods
ss
xchg
data16
dec
xchg
ss
dec
add
fbstp
out
pop
das
jmp
push
hlt
dec
and
sbb
in
ret
fisttpl
leave
dec
outsb
out
mov
lret
fbld
xchg
xor
adc
add
xor
call
jne
push
out
cli
xchg
or
int3
movsb
in
addb
mov
xor
int3
add
repnz
sahf
das
clc
cld
or
adc
loope
cmp
xchg
push
sbb
lea
dec
lods
add
and
add
jns
stos
add
mov
mov
inc
gs
jmp
daa
movsl
das
mov
pusha
pop
mov
jle
inc
repz
sub
lea
add
fcoml
xor
aam
or
and
mov
adc
or
loopne
mov
cmp
jmp
push
arpl
aas
jns
dec
idivb
ja
sbb
lret
divl
jle
xchg
push
xor
insb
add
sbb
or
sbb
pushf
pushf
sbbb
add
pop
or
push
mov
pop
test
xor
and
pop
xchg
pop
and
dec
stos
pop
insl
sub
jbe
and
lret
sbb
mov
sub
jge
cwtl
fnstcw
sub
mov
jg
sub
es
inc
dec
dec
inc
fs
test
out
inc
inc
pop
mov
imul
add
pop
add
jg
aaa
imul
push
shll
imul
bound
adc
mov
inc
fwait
addr16
xor
or
lcall
xchg
pop
popa
cmpl
hlt
lods
mov
out
pusha
ret
xchg
incl
lds
imulb
jno
xchg
and
jp
arpl
je
inc
jb
mov
test
nop
daa
test
loop
push
mov
div
mov
xor
jg
push
cmp
movb
push
outsb
add
aam
dec
inc
mov
ss
fdivr
lcall
loopne
int
pop
popf
out
outsl
add
mov
mov
or
pusha
mov
subb
xchg
insb
mov
add
sbb
mov
pop
xchg
xrelease
jae
hlt
addr16
xor
push
cmp
mov
jb
push
lahf
xchg
movsb
xlat
mov
jno
jnp
cmpsb
xor
cmc
cmp
movsb
gs
dec
repz
xchg
and
lahf
and
scas
fistl
xor
dec
lahf
lret
push
and
add
mov
fisubs
ret
xor
pop
sahf
push
mov
ret
and
repz
or
int3
and
jns
pushf
inc
int3
arpl
add
repz
ljmp
fisubrl
insl
mov
add
mov
mov
lahf
hlt
mov
fs
insl
ja
mov
lcall
rclb
insl
dec
loope
jb
ret
pusha
lahf
mov
mov
sti
jle
add
fcomp
pop
cs
addr16
adc
push
push
nop
and
loopne
lock
fs
addr16
jno
popa
test
xchg
mov
xor
lcall
adc
movsb
mov
xor
lcall
xchg
xchg
loope
lcall
jb
mov
mov
cmpsl
imul
pushf
jae
cmpb
leave
fldcw
int3
sti
pop
push
cs
adc
mov
jnp
cmp
fmuls
cmp
push
arpl
mov
jl
int
xchg
aaa
jg
iret
rcr
call
jo
pop
mov
pop
icebp
push
push
int
or
dec
add
pop
mov
cs
sbb
mov
jmp
dec
push
mov
cmpsl
inc
paddusb
xchg
inc
push
icebp
jp
mov
mov
mov
clc
ret
sub
gs
test
pop
sbb
test
movsb
repnz
cmpsl
in
in
cmpsb
cltd
sub
lret
fwait
sbb
mov
sub
jmp
aam
mov
test
fs
inc
sbb
outsb
mov
cmpb
stos
movsb
cmp
popa
push
aad
jge
xchg
into
sub
jnp
jge
mov
inc
xlat
mov
sbb
cmp
push
inc
jae
add
xchg
int
mov
pusha
aam
add
lods
sub
xchg
xchg
in
sarl
sub
loope
sbb
mov
insb
push
push
push
jae
adc
mov
popa
xchg
clc
pop
dec
mov
jecxz
aam
shlb
insb
icebp
bound
mov
jbe
pop
xchg
js
lret
adc
ja
xor
dec
jns
movsb
mov
adc
add
jle
push
insl
add
xor
mov
pop
add
in
jmp
and
sbbb
and
rolb
sahf
cmp
pushf
cmp
xchg
push
ds
xor
xchg
mov
mov
sahf
pop
int
rorb
sub
pop
xlat
or
mov
jno
pop
pop
or
and
call
sbb
in
ficoms
xchg
inc
jg
add
sarb
dec
jo
fidivs
lcall
xchg
cmc
movsl
inc
pop
cwtl
leave
xlat
lret
repz
cwtl
xor
jbe
filds
or
stos
cli
cltd
pop
imul
rorb
out
xor
sbb
fucompp
xor
or
inc
sti
cmpb
or
sub
adc
lock
push
fwait
andb
mov
idivl
adc
in
add
push
addl
adc
and
stos
adc
lods
mov
xchg
fs
movsl
jl
mov
sub
cmc
sbb
sbb
out
lret
je
inc
pop
enter
popa
sub
repz
and
sbb
jge
int
or
mov
or
adc
jnp
jge
cld
repnz
xor
popf
xor
pop
cmp
mov
add
jmp
clc
inc
lods
sub
movsb
dec
jl
orb
repnz
adc
dec
mov
pop
xchg
lahf
jmp
dec
mov
pop
pop
mov
add
pop
inc
add
inc
push
sub
mov
insb
cli
popf
cli
push
jmp
dec
cld
pop
mov
arpl
int3
icebp
in
xor
push
aas
and
inc
cmp
cld
xchg
gs
add
dec
mov
fnstsw
out
xchg
xorl
movsb
aaa
add
mov
testl
scas
xchg
xchg
fsubrp
into
pushf
gs
fiadds
enter
mov
or
push
adc
dec
std
add
faddl
pop
jecxz
mov
mov
mov
xor
orb
stos
jg
sub
pop
pop
pop
add
xchg
dec
fbld
movsl
cmp
sbb
mov
push
repz
hlt
bound
sub
or
fldenv
js
adc
sbbb
cs
lret
add
jb
inc
mov
ja
sbb
fcompl
cmp
in
jl
call
push
sub
lods
inc
cmpsb
cmp
call
sbb
popf
stc
sahf
stc
mov
mov
mov
sbb
fldcw
call
adc
movsb
mov
aaa
daa
and
pop
mov
loope
mov
rdpmc
or
xor
lret
gs
push
fwait
insl
pop
cmp
dec
sub
hlt
test
cwtl
lcall
mov
mov
adc
repnz
int3
fsubrp
std
insl
adc
out
mov
cli
rorb
insl
mov
add
xchg
lret
and
add
or
xchg
pushl
pop
xchg
cmpsb
ret
stc
repz
lods
push
dec
lods
add
imul
push
es
popf
add
dec
je
lahf
adc
lock
rclb
fisubrs
mov
jnp
sbb
mov
bound
movsl
aas
push
xchg
push
or
cs
mov
cmp
xor
mov
inc
dec
loop
add
mov
je
dec
pop
push
loope
dec
pushf
daa
clc
sahf
or
call
sub
sbb
sub
mull
push
out
xchg
push
fdivrl
push
into
fwait
addr16
data16
pop
or
outsl
mov
dec
filds
push
push
pop
mov
jp
lcall
sub
adc
gs
ret
or
jae
sahf
test
jnp
stc
push
stc
pop
add
jmp
cmp
sub
xchg
cmp
fimull
out
movsb
mov
in
inc
xor
int
push
iret
or
jle
and
and
js
data16
jnp
or
mov
dec
mov
mov
fisttpl
daa
dec
push
fistps
mov
addr16
fwait
xchg
sti
ret
mov
andb
cmpsl
addr16
mov
mov
xor
mov
je
cmp
pop
stc
adc
les
cli
test
les
repnz
lea
adc
pop
jne
xorb
pop
pop
cmp
xor
mov
dec
in
js
and
sahf
add
repnz
and
popf
or
sub
pop
or
pop
xlat
fldenv
data16
cmpsb
ds
mov
sbb
aad
addb
mov
and
dec
pop
lock
les
fadds
pop
out
lds
inc
imul
aas
cmp
jo
pop
insl
fcompl
loop
jbe
xchg
das
test
daa
dec
xchg
add
loope
inc
adc
xorl
std
test
xchg
pop
int
mov
pusha
out
in
jmp
jge
jbe
sbbl
rcll
enter
ret
cmp
in
out
in
pop
outsb
pop
adc
xor
jmp
add
pusha
sub
in
test
ret
mov
test
add
jecxz
stos
jb
cmp
xchg
jge
fisubl
mov
ja
ret
daa
mov
stc
cmpsl
stc
shlb
jp
das
lods
pop
pop
out
je
push
sub
inc
push
xchg
xor
lea
push
adc
adc
fldcw
sbb
icebp
js
sbb
imul
inc
test
ret
sahf
mov
sbb
pop
adc
in
or
dec
cli
mov
rcr
lcall
mov
mov
repnz
cli
inc
leave
inc
pop
add
lea
imul
sub
movl
pop
sbb
jmp
test
pop
cmpsl
jo
pop
mov
lcall
call
sub
lods
insl
lea
sahf
call
mov
pop
in
shlb
inc
and
mov
push
sbb
fistpl
cmp
fisubs
test
xchg
add
push
stos
sub
jbe
mov
push
push
inc
faddl
pop
pop
dec
cmpsb
loopne
and
cmp
sub
imull
dec
loope
fidivrl
cmp
mov
pushf
in
les
add
pop
icebp
mov
stos
mov
shl
out
stos
sbb
jge
or
mov
les
rcl
jns
add
lock
jmp
or
xchg
flds
int3
xor
push
adc
iret
sbb
lods
push
sbb
push
int
xor
jmp
adc
lds
mov
and
test
test
pop
cmp
in
add
jno
cld
and
sbb
adc
in
nop
ljmp
popf
mov
jl
cmp
pop
lea
out
mov
cli
pop
cmpsb
sub
mov
lds
push
popf
mov
push
and
mov
enter
or
out
mov
out
adc
jbe
mov
inc
mov
stos
adc
sub
insl
push
add
mov
jne
cmpb
pop
in
lea
jmp
ficomps
jns
mov
xor
subl
mov
mov
repz
or
test
repz
push
push
jns
dec
loope
cmpsb
inc
rorl
adc
leave
pusha
aam
sub
outsl
add
mov
xchg
push
xor
adc
movsl
mov
bound
xchg
mov
inc
fisubl
jbe
jno
popa
jmp
xchg
push
imul
mov
cwtl
adc
imul
cli
dec
gs
mov
inc
jb
jmp
roll
iret
loope
mov
push
fs
xor
enter
scas
inc
mov
test
adc
dec
ja
std
fdivs
loope
ret
ret
push
fisubrl
sbb
in
insb
lret
bound
adc
movsl
out
popa
iret
lret
xchg
in
repz
movsl
and
jns
pop
ret
xchg
push
jb
fbstp
inc
sbb
push
or
mov
cmpsb
call
test
adc
adc
sahf
pop
fildll
cmp
push
and
push
add
scas
fisubrs
ja
jns
cmpsb
ljmp
push
sub
push
push
fbld
pop
mov
into
icebp
jp
lods
out
jnp
sahf
shrl
and
jo
fldl
mov
add
out
lods
or
fisubl
xchg
jb
cwtl
jne
out
rcll
imul
add
mov
pop
push
push
or
mov
cmpsb
dec
aam
gs
js
fbld
adc
mov
pop
fmull
xchg
sbb
lods
xchg
in
test
ss
xor
sub
sahf
or
xchg
out
into
push
fwait
inc
int
arpl
xor
adc
and
jno
jmp
jae
cmpsl
xchg
popf
es
movsl
push
jne
xlat
shll
sub
rcrl
popf
ljmp
loop
mov
subb
rolb
push
cmc
inc
cmc
or
cmp
jl
push
in
push
push
aaa
xchg
popa
adc
daa
jae
cltd
xlat
dec
inc
stc
adcb
dec
inc
std
decl
and
dec
out
inc
insl
add
and
push
jecxz
xor
xor
outsl
sti
adc
cli
mov
bound
out
mov
mov
cmp
arpl
sbb
mov
jns
scas
inc
sahf
lcall
xchg
lock
int
and
push
js
fisttpll
ja
rclb
jno
adc
sahf
jbe
push
push
fldenv
int
arpl
inc
sbb
jmp
loopne
xor
mov
call
gs
fwait
popa
std
xchg
xchg
pop
fsubrp
js
sbb
jge
mov
pop
negb
ss
stos
in
xor
mov
or
ds
imul
pop
addl
int
jnp
sub
push
dec
les
ret
aam
stc
cmp
cmpsb
cmp
icebp
add
fdivrs
addr16
jno
jae
jecxz
gs
mov
mov
adc
push
imul
pop
daa
ja
shlb
clc
ljmp
mov
pop
or
test
xchg
sub
cld
jnp
jbe
inc
mov
add
push
mov
mov
and
fwait
in
xchg
fwait
cmp
mov
push
fwait
divb
pop
dec
ljmp
out
cmp
xor
das
insl
jge
lds
push
or
mov
rclb
sbb
icebp
push
inc
fdivrs
fdivl
xor
pop
test
dec
fimuls
not
aad
mov
jbe
fs
daa
cwtl
lds
xor
adc
out
mov
fmull
out
jl
jo
sbb
paddsb
jmp
rcll
add
lahf
daa
xchg
jmp
addr16
inc
xor
ljmp
int
fadd
xchg
xchg
ret
mov
inc
arpl
mov
adcl
lds
pop
add
xchg
sub
sub
loopne
push
jbe
ud1
scas
jns
xor
shrb
inc
nop
sarb
add
fs
div
arpl
mov
test
lods
arpl
push
loopne
mov
mov
cs
fmull
adc
jle
loopne
and
xchg
mov
test
cmpl
pop
icebp
test
ds
stos
sub
test
sbbl
shll
repz
insl
leave
mov
roll
std
xor
jmp
cmp
pop
fdiv
dec
xchg
jne
mov
inc
push
sub
push
ds
xchg
jno
add
mov
movsb
scas
mov
jno
fdiv
sbb
lods
mov
fisubl
stos
flds
imul
jl
ss
andl
dec
shl
and
out
adc
shll
dec
fcompl
outsb
add
push
mov
cmpsb
dec
mov
idivl
inc
mov
lcall
in
imul
pop
cmp
aas
mov
jo
int3
xchg
mov
mov
clc
add
lods
stc
andl
and
or
leave
jp
cmpsl
mov
cmpsb
and
pop
push
inc
and
dec
adc
inc
inc
cmp
clc
fs
enter
mov
mov
fdivrs
aam
mov
rclb
cmp
mov
sub
push
js
sahf
stos
lods
xchg
jmp
sbb
push
mov
shll
mov
and
or
pop
cmp
aad
dec
pop
or
popf
insb
xchg
inc
push
popf
or
mov
jle
out
shlb
xlat
and
sbb
scas
divb
push
mov
xchg
mov
aaa
push
enter
mov
mov
repnz
sub
daa
push
or
and
mov
or
mov
mov
xor
mov
cmp
pop
mov
push
sbb
xchg
cs
or
out
jb
mov
loopne
outsl
rol
lds
inc
scas
sbb
xor
outsb
pop
hlt
sbbb
or
add
out
push
sub
sbb
insb
cmpsb
cmp
xor
ljmp
daa
sarb
sub
push
pop
pop
fmul
pusha
aaa
inc
xor
mov
mov
xchg
dec
sbb
sub
test
lret
sbbl
xchg
fnstsw
call
jmp
inc
inc
sub
mov
lret
adc
shr
aam
lcall
scas
outsl
add
push
clc
adc
xor
mov
sti
cmpsl
mov
repnz
leave
sub
popa
inc
inc
cmc
lret
and
mov
cmpsb
jno
fdivr
and
movsl
ljmp
lret
fxam
or
mov
shlb
xchg
mov
scas
jb
in
mov
in
add
cmpsb
repz
mov
push
add
int
data16
pusha
and
inc
add
mov
std
movsb
dec
rcrl
push
pop
hlt
cmpl
sub
enter
dec
adc
mov
fstpt
scas
ljmp
xchg
dec
pop
out
inc
loope
inc
cmp
mov
iret
nop
pop
xor
add
and
inc
cmpsb
inc
mov
xor
inc
xor
jp
dec
push
sbb
jo
xchg
sub
mov
or
call
pop
insb
add
out
cmpsl
insb
jmp
xor
les
push
mov
and
mov
imul
inc
movsl
fsubl
test
mov
jno
fimull
or
mov
in
push
or
aaa
out
out
dec
arpl
std
xchg
inc
dec
inc
inc
mov
aam
outsb
mov
mov
cld
dec
movsl
data16
stos
lcall
daa
or
fisubrl
push
mov
pop
sub
mov
jns
nop
stc
pop
stos
and
xchg
decl
adc
push
pop
xchg
in
jle
mov
xchg
push
pusha
jecxz
mov
and
fiadds
enter
adc
xlat
add
mov
xor
and
and
mov
call
add
ss
push
mov
mov
into
adc
cs
and
addr16
sub
inc
jne
lds
roll
test
fdivl
mov
pop
rol
fcomi
inc
scas
inc
lock
add
and
aas
push
jo
test
sbb
dec
popa
leave
dec
lret
sarl
and
adc
lret
lea
stc
sbb
dec
sbb
adc
cmp
leave
int
mov
inc
scas
jo
or
loop
fcomps
ss
imul
lods
mov
and
incb
pop
xor
pop
jno
ss
cbtw
cmp
push
mov
and
dec
andb
mov
loope
pop
mov
adc
lods
xchg
jg
sbb
addr16
dec
repz
xchg
sub
mov
les
lds
insb
adc
push
cmpb
lods
pop
sarb
scas
cmp
dec
cmp
inc
mov
mov
push
xlat
push
repz
sub
push
data16
adc
push
and
xchg
fldenv
out
das
pop
xor
cmp
sbb
sbb
push
push
or
push
rolb
mov
test
out
test
lods
or
daa
add
xor
xor
cld
push
or
pop
mov
adc
rcl
dec
lock
dec
loop
add
in
and
cli
add
test
mov
pop
adc
fdivrs
inc
xor
and
push
cwtl
arpl
lods
leave
jge
and
js
aad
sub
xor
arpl
pop
les
mov
sbb
adc
or
in
cli
mov
stos
jge
mov
cwtl
jmp
popf
and
add
adc
adc
subb
mov
jb
ret
lret
rol
jecxz
push
lret
sub
loopne
jne
outsl
jecxz
jno
jne
movsb
sbb
mov
stc
fucomip
es
pusha
int3
into
jb
movb
cmpsl
sahf
mov
lret
mov
fistl
sub
pop
stc
sbb
mov
jg
into
or
shl
adc
movsb
arpl
andb
mov
mov
fisubrl
jnp
es
add
cli
inc
ss
repz
push
lcall
ja
ja
mov
cmp
cmp
dec
sbb
loop
dec
dec
ret
fisttps
push
shl
rcll
cs
outsl
inc
mov
xor
xor
test
cmp
adc
mov
mov
adc
or
jb
in
imul
aas
test
cmp
lock
pop
fcomip
push
adc
sbb
inc
fsubs
pop
cmc
js
outsl
pop
outsb
push
add
pop
sbb
ret
les
jbe
repnz
push
aam
dec
xor
pop
xor
xor
in
fnsave
mov
push
nop
mov
mov
out
lock
stos
rcll
out
push
addb
dec
fcomi
jp
ss
dec
cltd
push
inc
gs
pop
in
jb
cmp
xchg
int
imul
bnd
clc
repz
int3
dec
imul
shll
jmp
std
aam
fstpt
add
int3
rorl
lock
dec
rcl
daa
out
dec
stos
jns
xchg
daa
ljmp
loop
or
mov
pop
push
outsl
push
jo
adcl
test
xor
insl
jg
popf
ja
xchg
xchg
fsubl
mov
pop
scas
mov
xchg
cs
mov
fidivl
insl
sti
sbb
aad
mov
adc
js
xchg
sbb
sub
repz
imul
xor
popa
mov
xchg
pop
popa
popf
arpl
cmpsl
push
xchg
mov
jns
iret
inc
bnd
xor
lret
fstpl
jns
add
sub
cmc
leave
xchg
mov
sub
xor
fwait
outsb
out
shll
in
rorl
movsb
xor
and
test
outsb
xor
pop
mov
push
leave
mov
aas
rclb
inc
xchg
and
cmp
test
push
jmp
and
adc
daa
and
sbb
fbstp
in
jle
sub
sbb
test
xchg
cmp
cmp
fsubrl
mov
pusha
ds
pop
pop
add
cmp
rcrl
adc
add
into
das
pop
mov
out
dec
out
push
lods
jge
mov
push
xor
dec
jmp
inc
sub
inc
inc
arpl
and
jo
mov
es
push
pop
aad
mov
mov
loopne
std
int
test
push
fists
jmp
ss
or
xor
or
mov
cmpsl
cmp
xor
gs
xor
xor
dec
ljmp
je
je
fwait
xor
pop
test
repnz
fcompl
addb
std
cmp
les
idiv
ret
pop
negb
shrb
adc
and
outsl
lock
add
seto
stos
int3
jae
loope
out
cltd
test
ljmp
sbb
mov
mov
out
shll
outsb
testl
mov
adcb
mov
insl
add
shrb
shll
xorl
fsubl
movsl
inc
sbb
js
in
insl
pushf
ficomps
pop
inc
popa
xor
bound
xchg
imul
xchg
pop
or
fwait
pusha
push
cltd
cmc
lock
push
xor
adc
push
sbb
dec
push
mov
inc
cltd
test
mov
je
and
insb
leave
jle
push
lock
sub
call
sbb
and
cmpsl
adc
pop
lock
push
ja
test
ret
xor
subb
push
cmc
fwait
or
sub
sbb
push
cmpsb
push
or
pushf
imul
stos
mov
sbb
jge
adc
nop
shrb
daa
xor
pop
pop
scas
out
push
mov
or
mov
mov
rcrb
popa
flds
jecxz
shrb
pop
sub
pop
push
or
xchg
pop
out
jb
add
fists
xchg
jnp
jecxz
aaa
mov
mov
jl
mov
mov
insb
sub
mov
jae
push
cltd
leave
dec
cmc
jge
std
in
test
mov
pop
cmc
stos
repnz
add
fimull
sub
inc
mov
xchg
dec
sbb
push
mulb
xchg
mov
cmp
pushf
gs
lret
gs
jns
push
xlat
outsb
addb
xchg
push
dec
loop
mov
iret
mov
lahf
mov
leave
jb
out
lds
inc
push
fwait
es
mov
add
sbb
lods
jmp
xchg
or
mov
gs
leave
sbb
or
insl
fs
lahf
or
sti
mov
aad
rcr
cmp
cmp
les
pop
dec
gs
insb
jle
iret
sub
popa
inc
shlb
mov
test
jno
ret
jp
clc
popa
mov
add
in
mov
jae
insl
ret
call
loopne
and
add
in
mov
and
sbb
imul
or
scas
xchg
andb
add
xor
mov
stos
daa
mov
mov
cmpsl
xor
fcoms
push
call
iret
and
push
jne
and
fdivr
ret
sub
pop
pusha
fimull
insb
stos
fisttpll
mov
pop
repz
xchg
sub
pop
adc
xchg
fcomps
jo
sub
mov
ficoml
aas
nop
pushf
jno
int
insl
and
mov
fadd
jmp
ret
es
xchg
in
pop
xchg
pop
inc
xor
pop
xchg
sbb
insl
or
xchg
cmpsb
push
xchg
pop
pop
je
rcll
mov
cltd
sub
mov
jge
mov
push
mov
cmpsl
mov
out
repnz
and
data16
aaa
xchg
ret
rol
xor
cmpsl
push
push
dec
rol
repz
rorl
add
cmp
sbb
mov
dec
insb
lret
cmp
push
add
mov
pop
jg
cmpsb
sub
sub
push
cmp
leave
pusha
pusha
movsl
leave
insb
mov
addr16
addr16
mov
dec
movb
pop
and
mov
jb
xor
fs
sbb
stc
jnp
aam
xchg
repz
xchg
and
xchg
lods
cltd
clc
sub
sub
sub
insl
jg
iret
jae
mov
cmc
sub
mov
mov
jno
shr
incl
bound
fwait
xor
push
dec
xchg
fsubr
into
shll
adc
add
fcoms
xchg
sarb
lock
popa
mov
je
loopne
pushf
gs
loope
or
test
arpl
ja
das
push
fs
mov
scas
imul
mov
pusha
gs
mov
pushf
jmp
repnz
popf
bound
push
ret
ds
sahf
jns
lret
dec
and
jnp
and
pop
test
adc
ja
pusha
cmp
jl
xlat
hlt
testb
xchg
adc
jg
lahf
jb
pusha
call
nop
adc
cmp
sbb
lcall
dec
out
nop
test
popf
nop
hlt
sarl
sbb
sub
test
xor
push
stc
lods
dec
mov
or
fs
es
adc
aam
jno
xchg
pop
int3
add
mov
out
xor
pop
mov
in
popf
ret
repz
aaa
roll
pop
int3
or
and
push
add
scas
cmc
xor
pop
pop
sahf
push
loop
jbe
cmpsl
call
mov
mov
push
imul
pushf
lahf
jb
enter
push
fcomps
mov
and
call
mov
ret
jno
testb
daa
or
movsl
xchg
mov
lcall
in
fs
pop
outsl
daa
imul
lret
xor
and
cmp
repnz
aas
movsb
mov
sbb
leave
pop
fstpt
test
cs
add
imul
push
std
xchg
es
lds
fisubl
inc
add
sbb
jge
mov
xor
xchg
jge
push
sub
inc
and
pop
in
inc
push
jmp
mov
aaa
lret
popf
stos
mov
lret
fidivrs
add
mov
shrb
test
dec
sbb
push
xchg
lock
clc
lahf
push
push
adc
dec
jnp
mov
mov
mov
or
or
jbe
jmp
adc
sbb
stos
jmp
jns
loop
fcomps
add
lds
fstps
hlt
fidivl
xchg
xchg
sub
mov
testb
and
ljmp
inc
loope
and
mov
add
loopne
stos
xchg
rcrl
repnz
push
mov
sahf
mov
dec
cmp
imul
rolb
inc
arpl
popa
inc
fucom
stos
ds
add
fdivl
push
das
out
les
xorb
cmpsb
aam
jno
mov
jecxz
inc
ljmp
or
fbld
nop
cvtps2pd
arpl
mov
mov
aam
mov
push
xchg
out
jl
shll
outsl
out
in
roll
jge
loopne
jo
push
shlb
jnp
push
mov
and
fcomps
mov
cmpsl
out
cs
je
jp
fbld
sti
xchg
scas
mov
sbb
je
mov
add
add
and
push
mov
adc
adc
lcall
lahf
idivl
pop
bnd
or
aas
mov
adc
stos
push
add
outsl
push
pop
ficomps
int
push
sbb
sbb
xchg
ss
rcrl
mov
xor
jle
ja
mov
mov
aad
sub
adc
pop
in
insl
add
sbb
aaa
push
mov
fst
push
je
test
das
aam
pop
add
es
mul
fldcw
popf
jae
movsb
bound
lods
stc
jg
pop
cmpb
js
sbb
and
mov
test
ds
test
dec
ds
pop
in
insb
xchg
inc
cmp
call
dec
xchg
test
cmpsb
out
mov
mov
fidivs
mov
sub
pop
dec
xlat
cwtl
jp
lret
push
fidivrs
inc
lds
std
jo
add
inc
mov
aas
inc
movsb
or
test
mov
shlb
adc
and
iret
stos
inc
add
dec
aad
jbe
clc
out
adc
clc
fdivs
mov
add
pusha
inc
arpl
pop
in
and
pop
xlat
aas
mov
add
inc
xor
shll
mov
jae
fdiv
fistl
add
mov
insb
push
cmp
outsl
xchg
mov
push
mov
aaa
out
xor
and
cltd
js
in
cwtl
scas
cli
popf
jl
into
sbb
adc
aad
lcall
xlat
out
stos
inc
push
cmpl
sub
mov
inc
jo
in
xor
inc
mov
inc
push
das
pop
bound
add
ret
adc
mov
sti
jg
adc
mov
xor
jle
cmp
sbb
xorl
xchg
dec
sets
sarl
test
int
add
and
fidivs
loop
mov
ret
js
xchg
cs
add
stc
xorb
dec
divb
push
sub
inc
fwait
pop
dec
loopne
scas
cmc
and
or
ss
inc
add
inc
mov
aas
mov
mov
rcrb
pop
mov
mulb
sub
out
mov
imul
pop
call
sarl
cmpsb
push
dec
or
repnz
sbb
jne
jo
sub
jne
data16
mov
add
out
out
test
push
pop
mov
dec
or
jnp
pop
fs
outsb
add
test
paddusb
mov
jae
xchg
test
cs
inc
sbb
js
lret
lea
add
adc
outsb
subb
pop
std
fidivrs
pop
repz
lods
pop
mov
fimuls
mov
aam
cmpsl
mov
mov
leave
push
sbb
aaa
and
add
cmc
push
lods
inc
sub
mov
hlt
mov
into
outsb
adc
in
int
jno
std
testb
sti
cmpsb
dec
inc
xor
andb
xor
xor
cmp
adc
jne
fmuls
xchg
push
cld
or
ret
adc
movsl
push
imul
jnp
fwait
data16
dec
cltd
inc
xlat
nop
leave
in
dec
xor
cmc
stos
xchg
mov
adc
lock
push
xchg
mov
enter
into
js
mov
or
xchg
pop
popf
fldenv
iret
jnp
rclb
mov
sbbl
push
pop
and
push
out
inc
pop
jle
stos
push
jne
loopne
cmp
mov
add
jae
inc
shrb
rcll
xor
cltd
xor
iret
and
dec
f2xm1
outsb
add
jno
mov
mov
or
ret
pop
xor
iret
icebp
testl
bound
mov
loop
stos
lcall
pop
jge
fs
stos
xchg
dec
fldl
leave
mov
cwtl
andl
push
sar
inc
data16
fldt
xchg
adc
test
sub
inc
cld
mov
jmp
and
mov
lods
jmp
loopne
sbbl
mov
fcmovu
stc
mov
stc
jb
mov
int3
adc
lods
jmp
mov
fildl
xor
adc
mov
jbe
lea
fldl
adc
js
iret
frstor
add
xor
cltd
mov
push
mov
test
pop
cli
mov
cmpsb
jne
sub
leave
cmp
pop
jno
rol
jecxz
cmp
xchg
xor
pop
flds
je
dec
mov
mov
sub
mov
lcall
pop
pushf
repnz
pop
out
ds
ja
test
lds
fisubrl
rorb
imul
lods
inc
ficoms
push
xchg
clc
js
fsubrs
and
pop
dec
push
call
or
mov
pop
aas
xlat
cmp
bound
sbb
jno
add
rolb
sahf
cmp
outsb
cmpsl
hlt
popa
cmp
or
cmc
es
xor
lret
xor
test
mov
mov
add
dec
pop
pop
mov
mov
cltd
xchg
imul
decb
iret
mov
shlb
xorb
jbe
adc
fistl
xor
and
stos
mov
fwait
mov
xchg
xchg
sub
loopne
xchg
mov
andl
push
jne
mov
cmpsl
xchg
mov
or
fidivs
xor
add
push
hlt
in
ret
or
and
es
shll
fsubrp
shrl
mov
jns
aas
mov
ffreep
pop
call
or
and
and
loopne
mov
loop
adc
lret
cmp
push
and
and
inc
ficompl
hlt
cmp
xor
ss
pop
in
shlb
dec
dec
das
add
imul
clflush
sub
pop
jmp
jmp
hlt
addr16
xchg
and
into
out
cltd
shr
aaa
fndisi(8087
and
test
adc
lahf
ss
lods
push
test
mov
gs
pop
sahf
push
cmpsb
insl
jge
mov
aam
lods
dec
aam
xor
inc
and
jge
jne
in
sub
cwtl
mov
dec
cmp
insl
out
and
addr16
mov
pop
insl
in
add
and
adc
xlat
sahf
das
in
cwtl
dec
dec
ret
jp
daa
and
popa
push
jg
ss
in
jl
mov
add
stos
mov
xor
shll
dec
jp
ds
adc
mov
dec
add
pop
jne
dec
fs
and
push
or
cld
out
push
mov
enter
lret
rorl
stc
ret
jnp
pop
ljmp
push
push
mov
jb
stos
repnz
pop
xor
stos
popf
push
add
cmp
movsl
cmpsb
movb
xchg
add
sahf
cs
ret
xchg
pop
loop
push
pop
jbe
movsl
mov
add
fldl2t
and
out
scas
jns
mov
jp
push
cmpsl
xor
jns
or
outsl
inc
pop
hlt
jb
xchg
and
ss
lods
ja
pop
in
xchg
push
fnstcw
add
popf
adc
bound
in
ss
mov
mov
mov
aam
push
inc
sbb
loopne
xor
inc
stos
xchg
dec
dec
mov
out
xor
cmp
xlat
movsb
les
xor
xor
xor
call
sub
inc
xor
inc
pushf
std
or
and
lret
xchg
aam
fnsave
pop
pop
mov
sti
rolb
and
pop
add
cmc
rclb
loope
outsb
les
xchg
roll
mov
fistpl
xchg
xor
andb
insb
sbb
sbb
mov
cmpsb
sbb
in
call
mov
popf
in
dec
mov
ss
sbb
pop
test
mov
mov
outsl
cmpl
fucomp
fsubl
mov
and
push
sbb
xchg
sbb
push
out
shr
std
faddl
mov
sbb
dec
sub
rolb
loop
sbb
mov
mov
enter
insl
iret
and
adc
int3
jbe
sti
cmp
lea
add
inc
pop
imul
xor
pusha
pop
push
jbe
inc
push
or
push
cwtl
lcall
outsb
jg
imul
push
jns
push
add
add
mul
mov
mov
or
adc
stc
das
xchg
scas
or
mov
out
pop
inc
pop
test
sub
cmp
jl
bound
mov
pop
scas
or
cs
in
jno
inc
mov
aad
mov
pop
push
movsl
mov
and
out
or
cmp
adc
call
imul
mov
jge
daa
ja
aad
movb
sbb
iret
popf
lods
repnz
dec
jecxz
hlt
daa
xchg
dec
add
lea
loope
mov
stos
jne
sbb
fsubrs
or
xchg
lcall
xlat
sub
mov
jmp
mov
lds
call
test
jge
inc
insl
adc
add
int3
push
sub
sub
out
sbb
sub
iret
xor
in
call
adc
mov
mov
xorl
add
bound
jp
cltd
shlb
xor
fwait
js
add
inc
ja
add
mov
mov
ret
fwait
hlt
enter
mov
push
js
mov
sub
dec
mov
xor
nop
or
cmpsl
add
cmc
jno
lods
mov
xchg
cld
push
stos
mov
mov
pop
inc
mov
sahf
gs
imul
in
nop
aam
push
faddl
mov
adc
in
lods
pop
mov
and
hlt
adc
lcall
or
sub
popa
fsub
imul
dec
loope
mov
negb
outsl
sarb
cltd
in
pop
jp
cs
sbb
or
pop
rcl
pop
cmp
les
mov
ret
xchg
push
push
shrb
leave
dec
aam
sahf
cmpsb
outsl
daa
jb
cmp
lock
roll
lret
in
les
dec
pop
mov
mov
shrb
adc
add
cmc
push
sbb
test
adc
lods
sub
dec
test
and
push
lods
sub
xor
ljmp
lods
scas
jg
aas
pop
inc
sub
je
mov
push
jno
dec
pop
or
mov
imul
or
push
popa
ljmp
mov
cltd
ja
add
cmp
pop
imul
cwtl
ljmp
cmpsb
fcmovu
push
xchg
xchg
notl
sub
inc
inc
sbb
shll
rolb
push
inc
jmp
shr
inc
hlt
aaa
inc
pop
inc
icebp
jmp
int3
jg
hlt
fistl
pop
adc
add
imul
sti
sbb
xorl
popf
stc
scas
iret
mov
hlt
inc
lea
or
cs
clc
fwait
popf
int
std
xor
jbe
nop
lods
test
fildl
lea
sub
out
cwtl
das
xor
mov
cs
push
leave
aad
mov
jno
test
and
cltd
or
and
std
push
loopne
mov
popa
adc
dec
bound
and
shll
testl
xor
xchg
cmp
mov
dec
int3
push
mov
cmp
mov
test
pop
loopne
xor
and
jge
cmp
xor
jbe
mov
shll
xor
loop
int
fnstsw
imul
jnp
leave
daa
sti
pushf
stos
inc
push
push
or
mov
or
mov
mov
mov
jns
js
lds
test
inc
int
jmp
and
dec
dec
scas
testl
adc
icebp
dec
cmp
out
or
clc
jb
xchg
std
push
lods
mov
push
xor
inc
lock
out
out
pop
jno
push
sub
adc
dec
loopne
xchg
pop
jnp
jbe
std
enter
rol
int3
xor
cli
aas
mov
pop
lret
xor
scas
popa
sub
loope
dec
jbe
mov
jne
cmpsb
daa
jno
int
into
adc
dec
icebp
sbbl
movsl
popf
add
iret
je
add
repnz
scas
push
in
xchg
mov
push
je
adc
cld
cmpsl
ds
ret
inc
jg
jp
pop
jmp
jmp
inc
pop
fwait
mov
xor
lea
cmp
cmp
popf
inc
les
cmp
mov
insl
add
or
pop
mov
enter
sub
es
mov
push
push
movsb
jne
ljmp
call
cmp
dec
das
insl
decl
push
jns
shrb
data16
fwait
adc
jl
lods
stos
in
test
aad
sbb
pop
add
mov
xorb
test
xor
mov
and
jne
rorl
push
xor
out
sahf
lods
sub
jmp
pop
jnp
loope
inc
out
inc
sub
testl
sub
decl
bound
sub
dec
add
adc
ret
push
rcrl
data16
sar
pop
mov
inc
mov
mov
push
jg
std
mov
scas
xchg
popf
in
dec
pop
xor
pushf
lea
inc
insl
dec
fcmovb
jb
hlt
sti
dec
fs
xchg
sub
sub
cwtl
popf
movsb
inc
arpl
lret
xchg
cmp
pop
stos
and
mov
in
jae
call
sbbl
pop
mov
mov
cmp
adc
cmpb
mov
out
popa
pop
mov
mov
in
dec
and
jnp
decb
scas
mov
lods
cmp
scas
mov
pop
out
add
xchg
jo
ss
push
xchg
lcall
jne
andl
dec
out
cwtl
lret
xlat
leave
jb
out
popa
fwait
push
push
ret
jnp
enter
xor
in
popa
jl
into
push
out
mov
xor
test
aad
inc
mov
mov
inc
popa
inc
sti
mov
and
push
frstor
inc
out
add
inc
push
insl
hlt
xchg
cmp
orl
jmp
addb
or
ja
das
pushf
mov
mulb
sub
xchg
stos
or
lock
dec
sbb
cmpb
mov
testb
scas
adc
sbb
rorl
sbbb
iret
jl
pop
jb
jnp
add
jb
jge
std
dec
cmp
stos
add
fisttpl
popf
fs
cs
or
jno
dec
mov
nop
stos
iret
mov
push
lods
jns
aad
ja
je
cmpsb
push
iret
mov
imul
dec
aam
lcall
xor
push
xor
xchg
lcall
or
or
rcrl
lret
cmp
and
aaa
mov
imul
fcmovnbe
fistpll
xchg
mov
cmpsb
jns
movsb
sbbb
jnp
stc
sub
and
pop
in
test
iret
xor
ds
jbe
mov
mov
jne
aaa
aas
adc
sbb
or
scas
ljmp
inc
icebp
inc
pop
inc
xchg
cmp
or
outsb
ror
pop
adc
jp
push
in
mov
or
cli
pop
mov
mov
pop
loop
cli
dec
jp
sbb
fs
ficoms
jb
push
add
rclb
out
mov
test
mov
adc
lret
fs
aaa
adc
psrld
jns
push
cmpsl
test
divl
mov
dec
add
sahf
jecxz
aad
sbb
xchg
jmp
imul
mov
adc
jp
push
cs
fsubrp
push
out
mov
xchg
jae
mov
push
daa
imul
iret
sti
dec
add
and
jmp
adc
mov
ret
hlt
mov
testb
jge
adc
scas
inc
adc
jb
xor
in
mov
cwtl
inc
shlb
and
dec
jecxz
push
push
shll
jecxz
into
sub
jge
popa
faddp
xor
mov
sbb
jg
or
out
fcoml
pushf
cmp
xor
addl
loopne
pushf
aas
or
cmp
jge
out
jg
mov
jl
mov
cmpsb
call
hlt
sub
pop
push
lret
sbb
pop
test
js
adc
pop
shrl
mov
les
pop
pop
shrl
and
test
xlat
cwtl
push
jb
subb
mov
es
sarb
lods
std
lahf
stos
pop
dec
aas
mov
icebp
sub
fbstp
enter
and
icebp
sarl
in
or
daa
js
push
cmp
sub
fisubrl
and
bound
push
dec
jno
leave
xchg
loope
push
cmpsl
pop
mov
loope
push
jb
mov
out
jns
sbbb
jns
mov
les
loopne
push
cmpsl
outsl
xor
mov
dec
lods
in
aam
ret
dec
xlat
and
jmp
sub
add
pusha
cvtps2pd
push
ret
pop
cli
cmp
jle
rol
rcrb
and
xchg
sbb
out
sbb
sub
and
xorl
inc
pop
stos
cmp
push
pop
out
scas
push
xchg
inc
bound
pop
jecxz
cli
and
ret
lret
repnz
or
add
sbb
adcb
xorb
je
sub
sub
xor
jbe
dec
das
xchg
pop
loope
mov
out
sti
adc
cwtl
xor
jae
clc
mov
xor
addl
or
out
int
in
or
sbb
mov
pop
xchg
xchg
cld
cmp
addr16
sbb
push
add
mov
adc
jmp
jbe
fwait
mov
jae
fildll
push
decb
dec
gs
and
test
andl
mov
pushf
fwait
lods
lcall
adcb
jo
scas
insl
cmp
jl
imul
clc
cmc
inc
push
jecxz
cld
push
outsb
shlb
mov
lock
pop
ss
push
jmp
adc
xchg
pushf
dec
mov
scas
mov
into
roll
cmp
scas
inc
dec
xlat
pop
imul
sub
add
aas
insb
inc
in
push
scas
inc
jp
int
aas
dec
pop
jg
add
mov
nop
lahf
repnz
addb
call
mov
mov
mov
pusha
sub
xchg
ss
cmpsl
cmp
fwait
cmp
lret
lahf
jns
mov
mov
add
mov
scas
div
fidivs
mov
cld
pop
mov
mov
ficompl
test
xor
cmp
in
add
push
std
dec
test
adcb
dec
cmp
aas
fisttpl
nop
pop
in
int
out
inc
daa
enter
movsl
sbb
mov
out
sub
insl
orb
shrb
andb
sub
daa
subl
add
xor
xor
pop
repz
insb
inc
hlt
test
pop
pop
lea
xor
sbb
sbb
lock
jle
mov
sbb
sbb
mov
popf
sbb
imul
fimull
ret
add
xor
fucomip
sbb
js
inc
pusha
sub
test
cmp
mov
aaa
js
cli
fildll
jmp
inc
lods
outsl
mov
cmpsb
fs
in
in
mov
nop
add
int3
bound
push
out
rcll
mov
inc
arpl
into
iret
mov
cli
adc
clc
push
ss
jno
mov
repnz
repnz
adc
lds
fidivs
adc
push
mov
fs
out
sahf
sub
and
adc
in
xchg
data16
adc
xor
and
mov
cs
push
mov
out
testb
sbb
mov
lret
imul
addr16
adc
imul
pop
xchg
sub
and
sub
repnz
sbb
jecxz
outsl
pop
fnsave
ss
mov
cmpsl
data16
push
jbe
xor
std
jmp
jmp
cld
xchg
add
in
dec
in
out
hlt
jg
dec
sub
pop
fdivrl
idivb
movsl
orl
xchg
test
or
cmp
add
pop
add
imul
test
dec
lahf
cs
fldenv
mov
out
jge
xlat
push
jbe
add
repz
es
mov
jp
movsl
fidivs
xor
or
mov
ror
and
pop
sub
push
cmp
in
pop
lods
inc
nop
cmp
cmc
mov
push
inc
jle
sub
lret
testl
mov
jl
arpl
sub
add
jno
xor
jmp
jo
cltd
pop
push
js
iret
es
push
pop
mov
xor
cmpsl
sbb
push
push
shrb
scas
js
decl
mov
jno
push
sub
enter
in
mov
mov
fsubs
fistps
out
pop
inc
sub
idivl
pusha
ja
mov
pop
outsb
ljmp
cmc
in
mov
inc
xchg
and
fmulp
cmp
lds
pop
dec
sub
insb
fdivs
lds
mov
mov
ja
sub
popl
mov
jmp
inc
pop
mov
pop
add
lea
jp
and
pop
mov
mov
jp
or
ret
aam
fsubrl
adc
pop
cmpl
sub
shll
sub
cmpsb
pop
in
adc
aad
jmp
icebp
repz
loopne
movsl
add
sbb
mov
fcoml
sti
lret
fildll
leave
mov
or
mov
into
inc
sti
fmull
dec
and
pop
test
add
mov
ret
test
mov
pop
mov
pop
pop
lret
mov
iret
es
xchg
mov
popf
push
add
arpl
pop
pop
ficomps
xchg
andb
stos
les
in
xor
jb
insb
xor
mov
test
lahf
xchg
xchg
mov
in
loop
pop
xchg
cmp
movsl
xchg
and
addl
push
lcall
cmc
cmp
daa
das
imulb
lret
xlat
xor
nop
pusha
cmp
gs
cwtl
testb
outsl
adc
out
xchg
jecxz
xor
mov
fiaddl
call
cmp
or
aas
cs
movsb
push
je
xchg
push
int
hlt
or
pop
mov
pop
in
nop
or
mov
lret
jg
adc
fidivl
outsl
pop
mov
add
and
lods
adc
fidivs
push
es
push
mov
sub
lods
inc
shlb
push
cmc
pop
repz
sbb
cltd
mov
outsb
add
pop
insb
adc
and
les
cmpsl
aad
pop
in
or
fsts
shll
lds
or
sub
and
cmp
fcoms
outsb
lea
add
adc
jbe
cs
je
das
dec
mov
ljmp
bound
or
ljmp
and
mov
sahf
arpl
daa
dec
in
in
xchg
lret
stos
jo,pt
mov
mov
sub
sub
cmp
mov
testb
jbe
stos
cmpsl
notb
lods
sbb
xchg
lret
jle
and
in
xor
push
out
pop
adc
hlt
cmp
xor
push
ficoml
push
mov
cmp
xor
cs
loopne
add
jp
cmpsb
js
sbb
mov
ret
scas
mul
sahf
jns
pop
int3
daa
fnsetpm(287
dec
mov
jmp
xchg
add
jo
push
aad
cmpsl
push
jae
xchg
adc
ss
cli
out
adc
jmp
mov
int
int
add
pop
icebp
sbb
push
jg
or
data16
xchg
sub
pop
adc
inc
pushf
jbe
test
mov
pop
push
shl
add
clc
xor
fwait
xor
jmp
rorb
loop
and
xor
xor
lock
cmp
push
pop
ret
ret
shll
xchg
fcmovnbe
fnstenv
push
inc
fimuls
fcoms
enter
lea
sub
daa
insb
cli
sub
ljmp
repnz
lods
js
xlat
sahf
sub
mov
mov
shll
inc
jecxz
jae
sbb
inc
sbb
fcoml
es
std
mov
xchg
sub
mul
sub
mov
scas
call
cltd
ljmp
dec
inc
sahf
repz
and
pop
imul
jne
cmp
aas
hlt
jns
scas
and
cmp
fcoms
pop
je
out
pop
icebp
xor
mov
int
adc
sbb
cmpsl
mov
aad
std
arpl
inc
xchg
dec
fisttpll
popf
stc
jecxz
pop
cmp
mov
lret
pop
call
mov
aas
xchg
bound
cltd
cmp
enter
fwait
cmpsb
dec
in
mov
mov
aad
lret
sub
mull
mov
jge
jbe
gs
aas
inc
gs
pop
test
mov
sahf
xlat
repnz
pop
subb
cmp
pushf
jbe
sbb
idivb
fwait
nop
mov
or
adc
adc
push
and
int
loopne
repnz
leave
es
push
mov
dec
jnp
js
fildll
inc
inc
or
cmp
push
jecxz
push
cmp
into
insb
mov
test
adc
popl
push
xor
lds
sub
fldt
std
sub
popf
test
mov
jmp
dec
or
rep
cld
add
pop
andb
add
testb
nop
push
pop
push
lods
pop
nop
jb
cmpsl
xor
sbb
outsb
test
push
int
pushf
mov
jmp
dec
aad
xor
jp
outsb
and
or
dec
js
pop
ret
lret
mov
out
orl
sbb
sbb
sbb
mov
xchg
pop
rclb
cwtl
pop
pop
mov
or
cmp
scas
decl
loope
adc
movsb
sub
jl
dec
sub
fldl
ss
inc
mov
clc
pop
les
pop
sub
xlat
ss
jnp
imul
outsb
ds
outsl
or
aam
cld
ficompl
shrl
test
push
nop
sub
add
sbb
xor
push
mov
ds
in
ss
xor
call
cltd
dec
fs
cmp
dec
movsl
fildll
mov
into
fidivs
cmpsb
xchg
popa
sub
fistpll
adc
dec
aas
aam
sahf
fwait
push
ss
aad
cli
lods
push
xchg
inc
fs
jle
ljmp
bound
xor
loope
testl
xchg
insl
movsb
mov
jle
dec
mov
sub
xlat
jns
cmpsb
stos
cld
leave
pusha
cs
stos
cmp
clc
int
lret
scas
or
jnp
xor
out
cmp
fsubrl
outsb
jp
addr16
inc
jo
mov
jno
stc
mov
movsb
jmp
push
sbb
push
jp
loope
xor
mov
popf
fs
imul
aam
std
xchg
sub
mov
cmc
inc
add
pxor
std
std
xor
jmp
adc
sbbl
cld
stos
mov
inc
cmc
jbe
xor
pop
sahf
hlt
mov
push
fistps
jg
sub
fsubl
mov
fisubs
cwtl
mov
jle
xor
push
movsl
jle
rolb
out
dec
pop
stos
scas
mov
sub
repnz
or
fidivrs
mov
sub
pusha
sub
cld
fiaddl
pop
lods
push
icebp
repz
es
jns
addr16
jge
out
cmpsl
test
dec
mov
sbb
mov
fiaddl
dec
and
and
pop
add
pop
cmpl
mov
and
jle
jo
pusha
add
imul
stos
add
shrb
pop
adc
sbb
mov
fisttpll
add
rcrl
jns
sub
outsl
lods
add
nop
adc
mov
aas
fadds
fcomip
dec
in
jg
mov
pop
lahf
inc
xlat
daa
sub
mov
decb
sub
outsl
mov
inc
je
mov
cmp
adc
je
jbe
repz
mov
stos
push
int
and
bswap
sbb
inc
cmp
dec
insb
cltd
hlt
inc
lret
xor
sub
mov
jb
add
mov
mov
shrb
sti
push
mov
test
xor
xchg
mov
pop
movsl
orb
add
cmp
sub
push
sub
dec
es
movsl
mov
add
out
loope
stos
scas
std
orps
incl
std
dec
push
insl
mov
mov
pop
loop
fisubs
sti
lret
mov
cmp
adc
call
dec
icebp
mov
rcrb
iret
lret
mov
mov
or
mov
daa
test
sbb
jmp
mov
mov
and
fs
std
dec
cmpsl
lds
add
jle
xchg
sbb
and
push
cmp
pop
fmuls
push
jg
xor
inc
nop
pop
roll
sbb
adc
push
mov
add
cmpxchg
cli
adc
cmp
sbb
jge
add
mov
adc
mov
bound
sub
lret
cmp
mov
pop
mov
scas
add
ja
movsb
ds
orl
add
mov
push
leave
add
cmpsb
lock
push
mov
ror
std
out
adc
mov
or
or
and
lahf
gs
mov
lods
aas
mov
or
xchg
xor
rorb
stos
aam
sub
jb
xchg
rorl
mov
lods
dec
dec
fiaddl
sahf
sbbl
and
jo
popa
add
adc
movsb
dec
or
lock
jae
gs
push
ds
ret
mov
inc
rcll
cmp
adc
mov
add
mov
mov
and
mov
sbb
sub
inc
pop
sub
mov
push
std
test
lahf
cmp
popf
lods
push
jle
jge
fcmovu
lds
pop
add
push
adc
inc
cld
js
std
cltd
sub
mov
cmp
ss
testl
xchg
pushf
ds
lret
out
mov
jp
push
mov
add
xchg
das
jge
dec
outsb
push
cmc
adcb
sarb
xchg
dec
add
fnstsw
dec
cmp
sub
cltd
inc
in
dec
inc
dec
adc
rcrb
push
xor
popa
sti
pop
sub
push
imul
push
add
repz
xchg
nop
out
dec
repz
daa
bnd
add
mov
cmp
jbe
xor
insl
js
int3
or
movsb
insb
rcl
push
mov
out
out
sbb
popf
push
das
push
pusha
std
mov
xor
jp
inc
xor
xchg
icebp
ficoml
popa
add
test
push
add
es
mov
dec
clc
jg
call
sti
add
inc
pop
or
into
test
push
popf
lea
and
sti
xor
sub
cmp
jo
mov
outsb
and
push
jae
push
pop
cli
or
aad
xchg
adc
dec
flds
xchg
xchg
cwtl
hlt
fcmovne
add
pop
cmp
cmp
dec
cmp
mov
frstor
std
sbb
inc
or
mov
cmpb
mov
jg
out
sub
add
dec
jne
jae
jns
pop
lea
je
xor
sti
pop
mov
pop
fdivs
cmpsl
js
fsts
fsubs
or
bound
std
fwait
mov
popf
cmp
and
adc
pop
xchg
push
xchg
test
sbb
xor
inc
insl
stc
stos
es
inc
loopne
test
cli
sub
sub
sub
ret
fildl
cmpsl
add
popf
enter
andl
mov
push
mov
popa
xchg
nopl
fcmovnbe
sub
js
xchg
inc
into
jne
shl
addl
in
mov
fidivs
inc
dec
cwtl
push
mov
in
push
outsl
add
imul
mov
cltd
xchg
xor
mov
pop
xor
in
iret
es
fstpt
mov
insb
mov
mov
call
pop
jge
and
and
scas
bound
iret
mov
mov
dec
fldenv
cwtl
xor
aad
jp
push
cmp
js
lret
mov
or
fmull
scas
inc
inc
mov
or
das
test
insb
jnp
sub
ret
test
fsub
push
mov
outsl
ljmp
outsl
add
fbld
mov
cltd
adc
gs
or
add
cltd
insb
mov
lahf
mov
fs
aaa
xchg
sbb
in
jmp
fimuls
movsl
lds
xor
cmp
mov
push
jp
inc
jecxz
inc
sub
and
add
sarb
mov
cmpl
sbb
cmp
test
mov
clc
push
jno
push
cmpsb
ss
loope
daa
adc
arpl
jae
ficomps
jns
ja
dec
pop
incl
inc
icebp
mov
neg
dec
add
hlt
dec
pop
std
sbb
jecxz
imull
js
push
jo
in
call
popa
xorl
cmp
cwtl
push
sbb
jp
sub
cmp
jge
jo
in
add
sbb
pusha
dec
xor
xchg
cmp
adc
mov
push
mov
filds
and
jnp
test
push
popf
xor
xchg
leave
sbb
push
getsec
mov
rclb
push
and
cli
in
sbb
out
movsb
cmp
adc
mov
aas
push
ror
mov
push
xchg
fcompl
insl
push
jb
push
sub
shrb
sbb
jb
outsb
lock
push
shrl
jns
sbb
add
out
and
sbbb
mov
shl
dec
mov
andl
cmp
cmp
mov
das
add
roll
mov
xchg
mov
mov
add
xchg
sub
sub
leave
je
jno
mov
jnp
in
int
cld
loop
enter
ja
pop
sub
shrb
jg
add
imul
sbb
cmp
sub
punpckhwd
inc
push
xor
push
shl
xchg
fstps
insl
mov
std
adcb
jnp
mov
pop
mov
dec
ret
mull
push
in
pop
stos
sarl
xchg
push
cltd
cltd
mov
daa
sub
cmp
lcall
aaa
pop
out
inc
bound
cmpsl
pop
inc
int3
lret
dec
mov
push
rcll
mov
inc
js
jmp
aad
xor
push
sti
test
lret
arpl
lock
cltd
and
rorl
add
mov
std
push
call
std
and
xchg
sub
sub
add
adc
xchg
adc
daa
jmp
push
fldt
imul
xchg
cmpsl
push
lods
mov
lds
je
jmp
pop
sahf
xor
mov
mov
mov
or
sub
jnp
rcl
pop
cld
jge
imul
rcrb
cwtl
in
cs
pop
push
add
xor
and
push
pop
mov
out
out
ret
push
sti
sbb
fadds
xchg
js
xor
xchg
xchg
push
test
pop
xor
mov
loopne
adc
cmp
sub
aad
add
das
fdivr
jge
sbb
ret
push
pushf
ret
cmp
sahf
fstpl
adc
pop
call
push
rcrl
xchg
lret
enter
jmp
cmp
ja
pop
fwait
jb
sbb
mov
test
iret
xor
dec
mov
push
inc
imul
add
add
xchg
mov
ficoml
push
call
xchg
jg
call
pop
ficoms
xchg
or
cmp
or
out
xchg
lret
cmp
cmpsb
push
pop
mov
xchg
add
inc
push
or
adc
push
push
fs
pop
in
adc
mov
push
pop
scas
ret
jle
push
jmp
popf
rol
or
inc
out
inc
xchg
cmp
mov
lcall
pushf
inc
xchg
int
mov
inc
or
push
iret
cwtl
jbe
or
cs
add
movsl
xor
loopne
push
pop
pop
ds
mov
jg
dec
hlt
xlat
mov
sub
pushf
jmp
cs
std
pop
xor
dec
cli
pop
adc
rcl
mov
outsb
fisubl
mov
jb
or
stos
push
add
popa
push
xchg
pop
rcrl
insb
leave
sub
pop
xor
rcrb
jg
fists
std
adc
pop
lods
mov
out
or
mov
xchg
add
addl
je
movsl
sbb
xor
and
and
push
or
jmp
pop
jg
hlt
fwait
ret
repz
addr16
test
sbb
mov
inc
sbb
xchg
shrb
inc
push
ss
std
nop
mull
jle
dec
mov
mov
mov
in
dec
shl
scas
xchg
dec
dec
loop
mov
sar
ss
lea
or
pop
cmp
ds
jg
lods
sub
lock
pop
test
insb
shrb
nop
cmc
pop
pushf
iret
xchg
mov
fwait
xchg
jl
mov
iret
mov
mov
fsts
stos
shrb
leave
pop
sti
push
cwtl
pusha
data16
xchg
and
rcrb
xchg
inc
lods
fildl
or
lea
jl
pusha
je
mov
mov
iret
pop
nop
dec
arpl
sbb
idivb
pop
xchg
sub
insl
add
jne
das
and
enter
imul
je
loopne
mov
dec
imul
jb
lock
add
aad
mov
xchg
pop
sarb
out
loope
push
imul
sub
fnstcw
ror
cmp
pusha
ret
jo
jecxz
xor
js
test
xor
xchg
hlt
inc
mov
mov
fisubrs
sbb
mov
fnstcw
dec
mov
adc
and
mov
xor
jne
push
jecxz
scas
clc
addb
pop
jp,pn
mov
cmp
mov
sbb
or
and
push
dec
lods
cmp
fwait
add
pop
inc
mov
lods
shlb
sti
mov
xlat
mov
mov
add
lret
les
test
push
jo
jns
jo
mov
adcl
sar
mov
cmp
pop
clc
push
aaa
mov
imul
mov
inc
ret
push
ds
in
push
mov
dec
rorb
mov
and
dec
adc
shlb
dec
out
cmpsl
or
sbb
addr16
xor
dec
shlb
imul
adc
cltd
inc
roll
js
popf
inc
push
xchg
fdivs
cli
adc
test
jb
stos
jmp
rcl
mov
and
aad
cmpsb
jb
aaa
adc
xor
inc
push
push
inc
test
lahf
je
xlat
outsb
xlat
es
dec
je
negl
dec
lret
or
jo
cmpsl
mov
ret
sub
jo
cmp
xlat
test
mov
insl
add
ret
push
sbbl
divl
lret
scas
call
or
and
mov
pop
out
sahf
cld
hlt
cmp
shrl
ss
mov
notl
push
outsb
call
xlat
mov
sbb
dec
mov
mov
dec
cmp
jmp
cmp
mov
jb
punpckhwd
pop
adcl
dec
jle
or
cmp
xor
jnp
fnsave
mov
push
gs
jmp
dec
shrb
mov
fldl2e
shl
into
testl
dec
fs
int
scas
jno
imul
xor
mov
push
sbb
cmp
xor
mov
cs
xchg
mov
enter
ret
xor
xchg
adc
or
pushf
out
lret
xor
lock
sub
push
inc
jno
push
sahf
shrb
dec
pop
mov
push
xor
inc
outsb
jl
repz
imul
aaa
pop
mov
sbb
or
aam
in
jmp
cmpsl
xchg
movsb
pop
out
iret
pop
hlt
sarb
pushf
or
ljmp
loop
dec
and
dec
pop
dec
jbe
mov
shlb
lds
jne
adc
aaa
mov
push
icebp
adcb
movsb
fdivl
les
pop
jle
adc
push
mov
fbstp
jo
arpl
cmc
mov
iret
es
loopne
mov
sbb
jle
popf
and
push
and
jle
sahf
gs
pop
or
addr16
mov
cmp
je
fldl
mov
jmp
lock
cmp
hlt
cwtl
pop
and
sbbb
mov
sbb
sbb
jg
pop
repz
dec
and
repz
inc
lods
cmp
mov
aad
push
jmp
loop
mov
cmpsl
add
adc
in
cltd
xor
lahf
cmpsb
std
cmp
rcrb
lds
mov
test
mov
inc
pop
ror
stos
outsb
in
es
iret
cmp
inc
aad
inc
dec
inc
inc
enter
inc
pop
inc
sarb
add
xlat
dec
dec
pop
lock
movsb
xabort
pushf
cli
mov
fstl
mov
sub
dec
mov
push
pop
adc
aas
xor
inc
dec
repz
mov
rorb
xchg
xor
push
imul
cli
adc
aas
mov
mov
test
cmp
dec
rcrb
idivl
pop
addr16
mov
or
test
fdiv
mov
xchg
adc
cmp
jg
in
rcrb
pop
sbb
push
ficoms
mov
or
xchg
fcompl
jg
inc
dec
notb
dec
jge
repz
divl
in
roll
test
push
ljmp
in
or
cmp
cmp
pop
nop
and
sbb
mov
cmpsb
cmpsl
aad
xchg
movsl
sub
jl
fsubl
outsl
lcall
xchg
xor
sbb
sbb
jge
cmc
int
and
jnp
cmovl
clc
adc
dec
fistl
ljmp
outsb
jnp
ds
out
shrl
inc
pop
cmp
daa
add
add
aas
dec
push
and
pop
xchg
xchg
lea
sbb
push
push
cs
sub
and
imul
loope
popa
sub
in
outsl
adc
andb
rorl
cwtl
out
shrl
adc
jb
xor
push
movsb
int
fbld
push
xor
and
jo
addr16
rorl
push
movsl
in
ja
push
out
lods
adc
imul
cmp
shlb
aad
cld
popf
add
adc
xor
mov
adc
sbb
sub
adc
incb
fldenv
lea
into
nop
fsts
push
push
jne
and
jl
mov
xor
subl
rcl
das
movb
loope
int
sub
in
add
shr
add
or
push
or
or
xchg
mov
enter
dec
adc
inc
arpl
inc
scas
mov
bound
fmuls
mov
and
xchg
jg
xchg
mov
xchg
push
sti
ds
mov
fcmovnbe
xchg
outsb
xor
sub
sub
xlat
into
je
jge
inc
push
lods
mov
xchg
ret
fsubrp
hlt
pop
or
sbb
or
push
xchg
mov
xchg
loope
inc
test
cltd
std
sub
jmp
shlb
rcrl
jne
repz
rolb
pop
dec
shrb
jns
mov
into
arpl
into
and
pop
xchg
push
jp
jb
push
sbb
pop
or
cmp
pop
out
sbb
push
mov
xlat
sbb
lret
dec
insl
add
xchg
pushf
repz
or
into
or
jbe
loop
xchg
dec
sbb
loopne
cltd
imul
xchg
pop
repnz
xchg
pop
scas
or
or
shr
xor
inc
fdivp
xchg
in
addr16
aam
jmp
mov
loopne
and
mov
in
cmp
mov
jne
movsb
xor
cmp
jl
loop
icebp
popf
or
mov
daa
mov
sbb
mov
repnz
lret
sub
cmp
mov
ss
mov
mov
in
dec
dec
and
push
gs
dec
fs
xor
inc
fidivrl
fbld
cmp
shl
xor
mov
jbe
lahf
into
add
pop
mov
nop
daa
sbb
mov
sbb
mov
in
dec
mov
add
jp
leave
mov
bound
sbbl
ror
and
mov
arpl
mov
mov
and
addr16
lcall
jnp
ret
xlat
add
lahf
imul
cld
and
mov
mov
pop
repnz
iret
outsb
mov
jae
hlt
push
pop
arpl
in
xor
stos
lods
int
mov
out
int
jmp
inc
mov
xchg
dec
outsl
sub
lahf
aad
or
pop
lock
push
lret
jae
adcl
pop
adc
inc
sub
pop
push
imul
sub
cmc
movsl
icebp
aam
negb
mov
or
scas
fst
pop
push
sti
mov
and
lods
jmp
adc
sahf
adc
imul
jge
imul
push
adc
popa
cmp
add
dec
dec
pop
testb
sahf
mov
in
jmp
mov
dec
pop
mov
shrl
insb
mov
xor
mov
jno
mov
cld
lcall
mov
xchg
push
movsb
cmp
inc
decb
ret
jo
mov
rclb
pushf
daa
mov
es
jb
inc
inc
push
lds
in
sbb
lcall
test
shlb
mov
mov
xlat
fs
test
outsb
adc
pop
loope
sbb
outsl
sub
push
repz
push
aas
dec
or
cmpl
mov
or
out
cmpsl
pop
pop
enter
insl
or
mov
inc
imull
dec
div
jb
in
out
add
cmp
out
hlt
movsl
lahf
mov
arpl
js
mov
ss
pop
iret
inc
pop
cmp
adc
or
xchg
inc
or
sbb
mov
sbb
lods
movsb
mov
in
in
xchg
repnz
xchg
and
push
push
pop
add
mov
jl
in
jmp
push
sbb
mov
mov
shll
outsl
fsubl
push
jo
add
bound
jo
std
sub
fcomps
movsl
sbb
stos
xchg
adc
cmc
jge
push
sbb
cltd
loope
in
fwait
call
cmp
adc
xchg
jae
xchg
sarb
cmpsl
adc
adc
xor
ljmp
stos
mov
mov
or
sbb
lock
sub
mov
repnz
fldenv
imul
cmp
ja
imul
mov
fistpl
loopne
lods
cwtl
filds
negl
imul
mov
pop
icebp
les
popf
cmc
adc
popf
xchg
and
daa
jns
repnz
adc
movsl
rclb
lret
nop
imul
mov
shlb
pop
sahf
lods
shr
popa
or
jl
fwait
call
rorb
minps
push
mov
bound
adc
repz
mov
jb
add
cs
cmp
mov
push
mov
lcall
xchg
es
push
mov
insb
jno
mov
push
xchg
inc
sarl
and
adcl
jl
out
xor
popf
sub
mov
fldenv
iret
xchg
cli
movsl
ds
add
add
in
or
es
xchg
call
adc
add
cltd
xor
ss
pop
stc
mov
insl
jp
mov
mov
ds
enter
das
stos
mov
sub
or
dec
repnz
loope
cld
adc
cmp
sub
repnz
movups
adc
sbb
add
les
orl
lret
xlat
adc
pop
pop
clc
mov
or
or
jp
push
lcall
fisubrs
mov
call
pop
add
cli
sub
insb
and
mov
pavgb
loopne
xlat
cmp
rcl
push
test
sbb
fs
sub
adc
loope
adc
jge
pop
pop
lret
fstps
leave
cmpsb
nop
inc
shll
mov
in
inc
movsl
xchg
ret
aaa
hlt
adc
jge
cmc
pop
push
ljmp
mov
mov
fwait
mov
std
scas
fidivl
rolb
cmpsl
ds
pop
xor
adc
cmpb
dec
fwait
mov
les
push
in
insl
ds
jo
add
aaa
es
jecxz
pop
repz
push
xor
mov
xor
pop
mov
push
xor
lods
ret
lretw
les
pop
in
lock
icebp
out
fcomi
andl
cld
test
jo
pop
cmp
push
xchg
outsb
andl
and
dec
dec
loopne
insb
cs
pop
sbb
pop
inc
jle
inc
xor
pushf
xor
xchg
add
pop
inc
cwtl
add
lods
repz
aam
pop
lret
sub
out
addl
pop
jl
xchg
and
jp
std
dec
jecxz
or
push
jns
mov
jmp
cmp
or
sub
jns
mov
push
lock
and
ds
popa
mov
add
fists
sbb
in
fwait
loop
movsl
cmp
add
sub
ds
mov
mov
sbb
mov
imul
fisttpll
pop
ds
stos
aas
and
adc
push
inc
xchg
or
mov
or
add
lret
imul
mov
ret
cmc
xchg
sbb
enter
mov
cli
pop
shl
inc
xchg
sbb
jno
ret
xchg
imul
xchg
mov
sbbl
popa
fstpt
int
or
cltd
fdivl
data16
fdiv
pop
mov
mov
cmp
cmc
insl
call
xchg
inc
push
fmuls
push
mov
in
sarl
dec
inc
dec
push
cmpsl
aad
xchg
cmp
push
cmpsb
dec
aam
pushf
scas
jb
sti
arpl
aas
sahf
jmp
daa
pushf
xchg
cmp
push
push
or
mov
pop
lret
mov
xchg
jmp
or
icebp
fdivl
lret
into
int3
or
sahf
cmp
cmc
xchg
fwait
sub
lea
mov
sbb
xor
cli
sub
jmp
lods
in
and
xchg
out
sub
mov
push
mov
adc
mov
cli
sahf
push
pop
lcall
push
mov
sbb
lock
dec
xor
jl
stos
test
sub
xchg
dec
test
in
das
int3
inc
or
dec
data16
mov
imul
repz
arpl
cmpsb
out
add
xor
jb
leave
iret
mov
jns
mov
jecxz
in
mov
xchg
jmp
cmpxchg
inc
or
loopne
xlat
fnstcw
xchg
test
dec
push
sbb
mov
or
insb
nop
pop
mov
sbb
scas
dec
and
test
ljmp
addb
dec
and
adc
mov
mov
hlt
cwtl
rolb
or
adc
lret
inc
jno
xor
ret
int3
in
add
fstl
nop
hlt
int3
bound
mov
mov
jecxz
test
ljmp
in
push
pop
js
xor
js
repz
aaa
and
es
inc
cmpsl
roll
jecxz
leave
xchg
and
dec
shll
out
xchg
orl
pop
cmc
xchg
iret
stos
sub
fdivl
pushf
dec
test
dec
sbb
jbe
jl
lock
test
out
xor
mov
push
js
insl
mov
and
push
jmp
adc
dec
xorb
inc
mov
test
pop
sahf
cmp
jle
fistpl
sub
rep
ret
mov
adc
test
jbe
popa
jecxz
notl
jle
loopne
or
mov
imul
mov
xchg
add
pop
clc
rcr
out
gs
stos
ret
jge
idivl
pop
mov
inc
imul
add
and
cltd
mov
mov
ds
cmp
jbe
aaa
stc
push
cwtl
ss
sbb
imul
xchg
pop
inc
mov
movsl
mov
pop
filds
lret
outsb
xor
call
fs
ret
ret
les
das
arpl
adc
in
enter
push
jg
lahf
dec
clc
pop
in
ljmp
xchg
pop
scas
xchg
cmp
dec
xchg
cli
or
jge
and
dec
popf
lods
fsub
data16
movsb
repnz
sahf
stos
clflush
cltd
sbb
adc
stos
stos
cltd
mov
mov
adcl
cmp
loop
xchg
insb
enter
cmpsb
pop
repnz
out
xor
push
insb
add
pop
sub
push
dec
pop
loopne
fsubrl
mull
test
icebp
push
mov
std
stos
mov
xchg
orb
add
cmpsl
jo
call
cmp
stc
mul
xchg
mov
push
mov
ljmp
fldcw
jg
jnp
outsl
mov
scas
lret
fbld
fwait
jae
inc
daa
fcmovne
add
leave
mov
imul
gs
mov
or
cmp
decb
das
rcll
xor
cmovnp
sub
or
rep
push
or
or
dec
test
mov
fsubs
fstp
scas
push
xor
shl
data16
aad
scas
sbb
stos
inc
jecxz
cmp
jecxz
fcompl
or
testl
inc
mov
loopne
test
dec
mov
push
or
push
repnz
mov
xor
lods
lea
dec
mov
xor
lahf
enter
push
pushf
pusha
xor
cmpl
pop
or
cmp
mov
push
mov
sub
shr
xchg
pop
scas
mov
rcll
std
mov
mov
shll
mov
adc
ljmp
icebp
jge
lods
sbb
inc
loope
mov
test
mov
leave
fs
lcall
cmp
adc
test
push
inc
add
into
xchg
outsl
push
sub
into
cmp
out
jecxz
adc
cmp
sub
xor
test
ret
inc
arpl
sub
jecxz
pop
push
mov
sar
jl
cmp
cmp
cmpsl
xlat
rcl
mov
lds
out
adcl
pushf
ret
scas
cmc
arpl
fnstsw
stos
sub
mov
mul
mov
inc
push
test
insb
mov
pop
push
popf
pop
notl
mov
xchg
dec
lret
mov
fistps
or
xor
mov
inc
gs
pop
add
and
outsb
out
bound
clc
mov
mov
aas
repnz
push
jb
cmpsl
pop
push
and
iret
mov
ss
loope
mov
ret
stc
and
or
in
addb
push
push
ds
xchg
pop
add
push
test
push
mov
jne
push
push
movsl
jb
adc
je
aam
loop
mov
jecxz
into
lock
into
inc
jecxz
lods
jbe
dec
and
xchg
xor
imulb
xlat
push
lods
sub
movsl
xorl
fiadds
imul
xchg
push
faddp
xor
and
push
xchg
in
ja
push
negl
mov
fdivrl
fcoml
mov
push
lret
cmp
mov
loop
xor
scas
ja
in
and
jge
cmp
xor
movsb
xchg
push
mov
dec
scas
leave
mov
fstpt
sub
fcoms
xchg
ret
das
daa
and
and
dec
ljmp
les
lahf
arpl
enter
je
shrb
jbe
mov
mov
sbb
xor
push
add
jns
mov
out
int
jae
sbb
ret
aaa
mov
cmp
jns
fisubrs
jne
xchg
xchg
sub
ret
jnp
gs
lahf
sbb
jo
cwtl
pop
adc
xchg
out
pushf
bound
sbb
cmc
inc
lods
aam
mov
in
xchg
nop
std
add
inc
inc
rorl
pop
dec
xor
test
gs
fxch
dec
push
shlb
nop
lea
jmp
ficompl
jae
cli
mov
mov
cli
fs
ficoms
lods
or
sub
pop
sub
mov
jbe
lahf
or
in
sbb
and
sub
cmc
mov
aas
jno
or
andl
sar
push
shlb
cmp
rcl
cs
jg
in
int3
ficomps
rclb
test
add
fstp
push
mov
int3
in
mov
add
inc
aas
jbe
test
push
dec
xor
or
rcrb
ljmp
pushf
testl
xor
leave
push
lea
out
gs
fldenv
ljmp
xor
les
lcall
push
outsb
mov
mov
gs
and
xchg
subl
fcoms
stos
fisttpll
xor
sub
gs
mov
xor
call
in
mov
stos
xchg
inc
adc
cli
sub
push
mov
jg
sub
mov
dec
push
or
mov
jb
fldl2t
adc
mov
sahf
adc
shrb
pushf
jmp
xchg
shrl
cmpsb
sub
add
xor
sbb
ds
stos
jbe
ffreep
pop
test
jb
mov
gs
insb
xchg
xchg
and
fiaddl
push
xchg
cwtl
push
lahf
pushf
cli
add
sarb
lret
scas
rcl
popa
xor
outsl
into
dec
mov
push
fsubs
cmp
mov
andl
xor
stos
stc
hlt
pusha
mov
jae
push
in
mov
pop
repnz
adc
jns
push
imul
cmp
push
andl
fldlg2
dec
mov
aad
mov
sub
jns
incb
sub
test
add
xchg
fcompl
pushf
mov
jns
iret
mov
adc
add
inc
call
imul
pop
int3
cmp
pop
mov
leave
xchg
jmp
fcomp
lret
test
rcrl
or
or
insl
test
ss
adcl
push
or
xor
ret
shl
ss
rolb
cmp
sbb
lgs
mov
pop
popa
lods
insb
jnp
push
aam
movsl
push
adc
jns
add
shrl
push
pusha
loop
sbb
rcl
inc
enter
mov
add
sbb
fs
hlt
sbb
cmpsb
cmp
dec
insl
cmp
test
shlb
xchg
pop
pop
imul
jg
cmp
mov
data16
sub
daa
inc
fs
pop
xchg
inc
inc
jg
lret
mov
mov
inc
xchg
pop
sub
les
xchg
inc
add
push
pop
push
inc
in
jg
dec
and
adc
aad
or
cmpsl
les
arpl
pop
xor
lods
mov
icebp
lret
lret
sahf
repz
shlb
inc
mov
cmp
mov
adcb
cmp
pusha
jl
fsubrs
or
cld
leave
mov
shrl
jno
xor
aas
jns
dec
es
sub
push
mov
enter
sbbb
mov
std
call
in
inc
aad
outsl
lock
sbb
cmp
pop
ret
xor
mov
pop
mov
jecxz
lods
xlat
pop
cmp
jl
sub
icebp
xor
inc
or
mov
pop
mov
jp
je
push
jg
xorl
xchg
jnp
loope
iret
push
jno
jo
add
out
outsb
xchg
cmp
sbb
mov
js
pop
cmp
push
call
pop
adc
or
or
jmp
dec
sbb
dec
mov
jl
cmp
test
pop
add
push
or
dec
mov
mov
jns
jns
jae
neg
pop
or
mov
imul
ret
stc
jl
sbb
and
inc
in
std
std
fsubr
fimuls
movsb
jecxz
sbb
outsb
pop
in
outsb
ss
insb
shrl
pop
ret
fisttps
xchg
lea
xchg
aad
movsl
mov
call
cmc
mov
fs
in
jle
push
outsb
shlb
je
sahf
pop
out
inc
add
aas
in
std
icebp
push
outsb
sbb
cmp
xor
js
xchg
inc
fstpt
push
jnp
inc
insl
arpl
inc
mov
arpl
jge
aas
cmpsb
call
xorl
adc
neg
outsl
and
rclb
mov
jnp
fsubl
movsl
cmp
xorb
mov
bnd
add
enter
test
stos
inc
sbb
aas
enter
daa
inc
sub
lods
push
das
xchg
sub
sahf
pop
push
pusha
sti
iret
outsb
rcrl
mov
and
pop
loopew
sbb
sub
fsubrs
dec
insb
jae
push
cmp
push
addr16
out
pop
repnz
outsl
aad
push
add
fildl
inc
cld
outsl
sarb
fidivrs
nop
int3
and
xchg
fucomi
cmp
cli
add
cltd
mov
decb
pushf
jno
fwait
dec
xchg
adc
jae
and
orl
test
repz
or
sbb
movsl
inc
aaa
into
jbe
ret
jo
fadds
popf
pop
shl
sti
test
mov
loopne
test
pop
mov
mov
cwtl
add
mov
in
cmp
aad
rorb
mov
jns
cmp
dec
insl
inc
cmpsb
push
loopne
adc
pop
lds
incl
and
inc
jae
stos
fcmove
sub
scas
xchg
shl
lahf
and
cmp
push
mov
sbb
sbb
inc
mov
push
clc
fwait
xchg
xor
sub
pop
mov
cmpsl
ret
aam
push
sbb
cs
sbb
pop
cmc
adc
or
jns
in
repnz
movsb
cmp
cwtl
sub
xchg
push
push
mov
in
xchg
sbb
xchg
sub
mov
add
imul
imul
dec
mov
sub
pop
mov
pop
xchg
mov
sbb
sub
dec
fdiv
jle
pop
icebp
stc
jnp
movsb
mov
shrl
mov
jns
stos
push
in
dec
and
insb
jge
sub
sub
inc
loopne
adc
fdivr
add
sarl
inc
or
xlat
out
aam
aad
scas
nop
push
jb
inc
repz
pop
mov
fisttpll
xchg
stos
add
sub
jne
lea
mov
jp
es
jo
nop
loope
adc
jbe
fsubs
fildl
mov
jmp
dec
xchg
xchg
lahf
jb
je
xchg
xor
mov
ret
arpl
xchg
pop
lahf
notl
sub
popa
aad
std
lcall
in
jmp
outsl
or
xchg
mov
push
popf
xchg
stos
lds
shll
fisttpll
xchg
fldt
jmp
mov
inc
pop
leave
pop
clc
dec
int3
out
jo
data16
pusha
aad
and
pushl
mov
mov
inc
inc
daa
sbb
xchg
push
or
mov
lcall
inc
mov
fs
jecxz
and
je
aas
cmp
push
clc
shl
ret
cli
or
cmp
pop
inc
pop
sbb
insl
mov
shl
jp
and
jnp
mov
in
mov
push
jne
out
mov
aad
pop
jmp
mov
push
enter
sub
bound
fcoml
stos
or
push
test
lret
mov
stos
jbe
sub
jnp
imul
je
fcomps
pop
fnstenv
in
mov
adc
int
cmp
push
notb
loope
pop
clc
cmpsb
lock
sbb
loop
sbb
inc
adc
jle
inc
into
push
out
adc
lret
int3
add
cltd
sub
xchg
in
xor
jge
fs
test
mov
xor
lret
bound
add
and
xor
push
scas
and
cld
sub
xor
cwtl
inc
mov
fwait
insl
out
sbb
test
or
mov
insb
mov
rcrb
lods
adc
enter
adc
in
fs
mov
or
lcall
cld
adc
arpl
or
and
imul
xor
fldenv
into
lds
or
adc
sahf
mov
sahf
dec
cmp
jp
outsl
cltd
inc
pop
lret
imul
pop
mov
lret
rclb
push
mov
aas
sub
andb
cmp
mov
mov
sub
inc
std
lcall
ja
mov
push
in
pop
inc
cli
scas
inc
lock
fwait
jb
cmpb
push
sbbl
mov
dec
add
xor
pop
in
imul
stos
lahf
push
push
cmp
gs
xor
mov
pop
adc
shlb
add
bound
les
in
stos
xor
insb
sbb
daa
imul
adc
hlt
and
in
enter
dec
add
test
sti
xchg
pop
mov
sbb
ret
fnstcw
stos
inc
push
jmp
fists
hlt
lea
add
arpl
popa
int
dec
push
lcall
mov
pop
jmp
andl
dec
pop
lock
push
xchg
iret
push
imul
sub
mov
mov
sbb
leave
dec
mov
xor
add
mov
enter
inc
mov
cmc
xchg
lret
mov
movsb
jecxz
pop
push
out
mov
in
adc
mov
xchg
std
inc
dec
test
inc
jecxz
mov
mov
pop
pop
hlt
mov
xchg
iret
and
jge
cld
adc
lahf
shrb
ret
dec
mov
gs
adcb
inc
inc
inc
int
out
andb
mov
scas
push
jne
xchg
cmp
dec
jg
je
or
jb
in
mov
insb
je
push
das
or
fmuls
outsb
add
dec
mov
bound
mov
aam
mov
or
dec
in
mov
jmp
rolb
pop
lods
mov
mov
push
test
dec
mov
daa
mov
cmpsl
cmp
adc
lea
inc
xchg
push
or
lods
mov
push
xor
inc
jno
scas
mov
ret
or
into
lods
push
out
lahf
mov
jbe
xchg
xor
insb
and
mov
mov
in
cmp
std
sub
push
std
fnsave
push
hlt
mov
inc
andb
scas
inc
stos
dec
mov
repz
int3
fnstsw
popf
movsb
sub
and
flds
and
in
pusha
mov
loope
pop
adc
mov
mov
inc
fwait
insb
cmp
xchg
jmp
xchg
imul
fdivl
fidivl
dec
add
sti
mov
pop
dec
in
mov
pop
hlt
fiaddl
xor
push
cmp
mov
xor
mov
les
ljmp
aaa
lea
xchg
pop
notl
inc
xchg
mov
sbb
enter
xchg
jb
mov
cs
pop
adc
push
or
or
jae
movsb
ficompl
push
push
cltd
xor
xchg
in
les
jecxz
jae
cmp
sbb
dec
or
or
and
pusha
movsl
sbb
pop
sbb
aas
enter
add
lds
dec
pop
mov
stos
mov
clc
es
dec
or
jp
inc
xlat
inc
fldt
pushf
arpl
and
adc
inc
fnstenv
repnz
adc
lock
jne
mov
mov
push
push
mov
sub
pop
pop
inc
sbb
vpshlq
fs
dec
mov
lret
outsl
adc
mov
and
cbtw
xor
inc
addr16
xor
mov
icebp
nop
int
dec
cld
outsl
dec
xchg
xlat
or
add
daa
cmpsb
sub
cli
jecxz
es
jno
lahf
dec
jmp
xchg
add
fldenv
push
imul
dec
push
scas
sahf
divl
lock
and
pop
push
jl
xor
xchg
add
sbb
sbb
aam
push
or
inc
insb
push
pusha
les
loop
hlt
mov
add
xchg
subb
jbe
aad
rol
les
sarl
lahf
push
mov
shl
aas
movsl
add
bnd
aaa
mov
cmp
shl
mov
fists
xchg
or
in
inc
aam
xchg
mov
into
adc
orb
jno
mov
sahf
or
jmp
ret
lcall
sbb
adc
hlt
mov
mov
in
fs
xchg
scas
sahf
data16
mov
out
dec
aam
es
xchg
in
add
jo
shll
rol
sbb
pop
aaa
stos
xchg
fnstsw
mov
pop
sbb
or
insl
pop
inc
repz
loopne
dec
aam
xchg
rorb
pop
in
mov
lods
enter
fstpl
pushf
mov
fucomip
adc
push
js
cmp
lcall
in
ret
push
xchg
inc
rorl
xlat
adc
insb
iret
cmp
lret
arpl
push
enter
add
pop
pop
repz
pop
int
dec
jmp
inc
inc
fdivrl
xor
js
je
dec
mov
mov
stos
push
outsb
in
add
dec
inc
xor
xchg
sbb
pushf
xor
je
movsl
andl
cmpb
cmp
shll
add
mov
pop
scas
xchg
lods
and
pusha
movhps
ds
gs
js
call
sti
xchg
pop
jl
sub
cmpsb
sub
lahf
cltd
dec
or
fnstenv
mov
push
sub
pop
call
cmp
stos
movsb
lea
aad
cld
dec
push
sbbb
das
jo
mov
push
fistpll
sahf
fdivrl
hlt
movsl
cmp
pop
fwait
roll
jg
out
iret
int3
sbb
aas
aam
add
outsl
addl
enter
test
in
jns
lock
xor
imul
dec
mov
inc
mov
mulb
loopne,pt
mov
mov
xor
add
fwait
mov
pop
icebp
aaa
xchg
dec
push
adc
std
aad
xor
hlt
adc
loop
popf
mov
cmp
popa
mov
inc
mov
out
push
mov
jnp
xor
sarl
std
sahf
mov
and
sbb
xor
enter
jmp
push
mov
repnz
xor
in
sbb
xchg
mov
sub
je
lds
xchg
scas
mov
ss
cli
xlat
outsb
popf
xor
pop
cmp
cmc
adc
push
mov
aas
mov
nop
stos
movsl
out
add
ror
jge
mov
inc
lret
aam
push
hlt
sti
mov
cmp
jbe
push
jo
push
outsl
mov
lahf
push
jmp
push
or
adc
je
lahf
and
out
nop
and
iret
add
and
mov
lods
js
fnsave
xor
mov
sbb
lock
mov
dec
imul
fadd
sti
test
adc
mul
cmp
inc
loope
sub
test
loopne
mov
push
cmc
mov
daa
ss
adc
and
mov
cmp
rclb
stc
pop
and
inc
ret
mov
cmp
jl
pushf
mov
ljmp
das
test
and
in
out
shlb
into
decb
aas
ds
imul
push
sub
out
and
pop
inc
xchg
lods
fisubrl
jo
sbb
lods
push
insb
add
scas
adc
xchg
sub
test
pusha
jmp
cwtl
adc
sbb
sbb
test
push
insb
xchg
ja
push
cmp
inc
jge
add
mov
dec
dec
mov
mov
pop
adc
adc
daa
sub
cmc
xchg
and
push
push
add
scas
sub
jno
push
add
mov
sbb
mov
decb
int3
fisubs
adc
or
jmp
out
sub
frstor
lret
loop
mov
rcr
fs
popf
xchg
mov
int
fmuls
loope
add
mov
daa
ret
jno
pop
jno
arpl
push
mov
ljmp
loopne
jp
cmp
jle
xchg
jge
pop
imul
aam
pop
shlb
mov
mov
fsubrs
fs
mov
out
jge
iret
ret
ret
or
inc
jmp
je
and
iret
sub
dec
add
mov
jbe
dec
repnz
jle
flds
xchg
bound
subl
js
xor
pop
jecxz
test
cltd
mov
inc
mov
sbb
cltd
mov
out
add
cmp
das
leave
sbb
pusha
roll
es
fcoms
or
std
mov
xor
sub
push
adc
xor
dec
je
mov
push
cmp
dec
cmp
into
jns
call
dec
mov
fidivs
or
pop
adc
shll
mov
lods
mov
mov
inc
movsl
push
cltd
push
xchg
dec
test
mov
hlt
jge
pop
cs
add
push
mov
and
hlt
add
leave
fcoms
xor
pop
push
xor
popf
test
mov
into
ret
xchg
xor
sarb
pop
push
mov
call
and
in
mov
xchg
push
pop
cmp
insb
fimuls
test
aad
movsb
leave
push
lahf
push
add
xor
ficomps
jmp
mov
das
sbb
push
mov
jo
sub
ss
in
xchg
mov
scas
repz
out
sbb
fcmovnbe
xchg
xor
clc
in
dec
adc
push
adc
shll
stos
dec
adc
adc
sbb
push
jg
iret
mov
imul
js
cmpsl
ds
pop
lea
mov
mov
aas
pop
aas
in
sub
fwait
roll
shll
mov
pop
mov
adc
lret
dec
cmc
popf
push
lret
jae
mov
jp
insb
out
out
inc
mov
insl
cmpb
call
test
mov
cmp
xlat
out
popa
fisttpll
loopne
clc
enter
push
daa
lret
push
dec
jl
jg
daa
inc
xchg
jl
andl
xor
sub
mov
in
adc
add
add
and
xchg
call
pop
iret
sbb
out
fcmovu
mov
aaa
xchg
cmp
mov
cmpsl
clc
jae
push
add
in
adc
xor
lods
add
or
pop
xor
sub
fsts
mov
aam
xor
lcall
push
leave
xchg
test
and
inc
test
jg
daa
inc
and
add
daa
xchg
mov
push
push
jbe
cmc
fs
outsb
rcrl
mov
imul
pop
mov
cmp
scas
nop
scas
lret
into
roll
and
movb
int
xchg
adc
push
mov
stos
sti
xchg
push
adc
mov
and
inc
bnd
push
jo
pushf
sub
cmpsb
lods
mov
ljmp
dec
cmp
adcl
xchg
pop
jmp
bound
adc
test
rclb
sbb
inc
lcall
xor
xchg
hlt
jmp
in
les
mov
outsb
cmp
mov
fsts
mov
test
lret
psubb
or
pusha
inc
sbb
cld
daa
pusha
fistl
push
call
cwtl
cmpsb
or
ss
push
hlt
push
and
ss
stos
int
cmp
sbbb
jbe
fcomp
test
out
cmc
orb
daa
pop
es
cmpsl
dec
jne
sub
sub
pop
int
adc
data16
mov
mov
and
shl
mov
cmc
xchg
aad
xchg
imul
repnz
mov
je
clc
test
rorb
xchg
and
fdivr
pop
mov
pop
or
jle
jo
push
pusha
pop
test
sub
aam
mov
push
dec
sbb
xchg
sub
jmp
lea
and
cmp
jp
jle
jns
xchg
jmp
sbb
out
sbb
push
call
inc
test
andl
xor
add
push
xlat
mov
push
add
fwait
sub
mov
push
mov
mov
fstps
test
fisubl
add
clc
cli
xchg
push
add
negb
add
sub
outsl
mov
testl
nop
mov
mov
mov
jbe
xchg
shrb
sbb
push
add
jnp
dec
je
mov
subb
or
cmp
js
mov
nop
scas
xchg
jo
stos
mov
mov
jnp
repz
mov
mov
ret
or
inc
lds
sbb
xchg
inc
repz
push
lods
xchg
out
mov
pop
jbe
mov
mov
mov
push
out
jns
mov
add
ds
add
nopl
es
in
push
repz
or
hlt
ja
sti
xchg
pop
sub
or
cmp
xchg
jmp
push
dec
adc
test
fwait
jge
jg
xchg
sahf
and
test
cmp
mov
lahf
lods
push
lcall
and
into
cmpsl
outsb
fsubr
shl
cmp
sbb
mov
lret
and
subl
xorl
mov
cltd
push
outsl
cwtl
mov
dec
ja
mov
mov
fsubl
and
lds
cs
mov
jecxz
add
test
xor
fdivrs
stos
pop
stc
dec
out
outsb
std
add
mov
loopne
aaa
js
in
leave
adc
cli
inc
stos
xor
fwait
loope
push
pop
adc
fldcw
adc
or
mov
mov
lods
outsl
sti
or
adc
pop
cld
pushf
scas
lock
imul
dec
pusha
pop
adc
sub
in
sub
dec
add
mov
mov
mov
pop
aad
pop
pop
jle
fmuls
xchg
loope
inc
test
add
data16
lods
incl
out
test
sarb
inc
and
sbb
adc
fiaddl
mov
sbb
repz
and
icebp
mov
jecxz
ja
pop
rorb
and
das
sub
dec
ffreep
sbb
repnz
jle
jae
push
mov
push
xor
pop
shr
sub
sbb
divl
dec
movsb
pop
xchg
cmpsl
lret
adc
cld
inc
pop
xchg
lock
ret
lcall
nop
adc
or
push
pop
imul
mov
leave
pop
xor
xchg
ljmp
ljmp
mov
push
dec
in
aaa
loopne
jmp
cmp
xor
ja
mov
lret
jns
lret
lret
or
es
and
scas
jecxz
loopne
push
dec
repz
lret
stos
adc
icebp
lret
pop
scas
sti
pop
push
mov
bound
cmp
inc
pusha
mov
loopne
xor
pop
out
outsl
mov
cmc
imul
in
pop
popf
xchg
cmp
int
xchg
popf
lods
mul
and
loopne
jae
jle
jnp
cs
jne
mov
insb
rcrl
sbb
pop
dec
mov
in
or
rcrb
out
and
or
or
movsl
icebp
mov
pop
mov
int3
imul
out
cmp
fwait
push
dec
popa
cmpl
mov
xor
mov
pop
shlb
and
jp
clc
cmovb
ret
jns
inc
ss
push
cmpsl
dec
jo
in
das
or
xchg
xchg
sbb
inc
loope
mov
das
mov
lods
mov
mov
ror
adc
imul
shl
xchg
xchg
mov
dec
sub
dec
mov
dec
in
test
add
aas
lcall
mov
sbb
and
rorl
pusha
int
or
mov
mov
and
daa
adc
sbbl
mov
add
xorl
jg,pn
jge
xchg
call
fs
cwtl
gs
add
das
inc
ja
xor
addr16
xlat
push
sub
dec
out
lahf
test
mov
jno
in
adc
in
push
jne
xchg
repz
push
movsl
inc
add
bound
jp
push
sub
stos
sarl
mov
fcmovnbe
repz
cmp
inc
fiaddl
outsb
mov
enter
mov
and
int
push
inc
hlt
gs
data16
fnsetpm(287
add
xor
mov
cmp
into
data16
cmp
repz
insb
mov
mov
stos
mov
pop
jg
push
inc
mov
cltd
mov
ss
out
sub
mov
sbb
test
cwtl
fldenv
jg
int
data16
adcl
xchg
push
cmp
xchg
call
in
mov
sub
ret
add
filds
and
mov
cmpsl
out
out
flds
in
mulb
jecxz
jmp
imul
out
jbe
ret
mov
mov
mov
adcl
fisubs
loope
or
les
adc
pop
int3
arpl
xchg
rcll
pusha
pop
add
pop
push
fbstp
shll
mov
push
inc
push
xor
out
cmp
rorl
andb
fcomp
pusha
mov
pushf
push
mov
test
repz
cltd
pusha
aas
adc
fstps
test
jo
dec
lahf
sbb
enter
mov
ret
jmp
aaa
repnz
insl
das
fidivs
cmp
cmp
inc
xchg
and
sub
fiaddl
addr16
push
ret
sbb
adc
sub
inc
mov
dec
inc
xchg
int3
jae
pop
repnz
je
jne
xchg
add
sar
lods
icebp
shrl
dec
out
lods
jae
or
subb
jle
repnz
push
arpl
or
mov
out
aas
lret
adcb
cmp
jmp
and
cmc
sbb
cwtl
in
pusha
push
pop
cmpsl
sbb
clc
jae
ret
pop
popa
ljmp
adc
test
in
push
push
lret
arpl
data16
xchg
pop
cmp
int
dec
cmp
inc
pop
movsb
inc
jno
repz
lret
xchg
es
mov
in
xchg
and
leave
out
insb
add
mov
adc
pop
push
rorb
sbb
xorb
dec
pop
add
loope
mov
aam
filds
daa
push
cwtl
cmpsl
mov
das
test
popf
imul
movsl
mov
dec
hlt
jns
cmp
flds
cmpsb
pusha
notl
cmpsl
sub
test
sub
mov
bts
jo
jg
ljmp
aas
mov
jge
fsubl
out
add
xchg
rcr
outsl
mov
mov
test
inc
lret
cmp
es
adc
mov
xchg
sbb
xchg
and
cmp
mov
and
mov
test
push
lahf
daa
pop
std
mov
jns
mov
jp
mov
pushf
inc
iret
loope
stc
stos
pop
or
sahf
adc
imul
cld
out
addr16
jecxz
push
mov
mov
popf
data16
cwtl
dec
insb
sbb
mov
jge
cmp
push
cmp
push
cmpsb
cmp
xchg
push
cmp
sarl
jle
fwait
pop
jg
inc
fistl
cmp
and
jmp
mov
stc
mov
das
jge
mov
push
sub
and
imul
xchg
cmp
jl
pop
xor
push
loopne
add
es
test
mov
test
xchg
sbb
jae
scas
mov
sbb
sbb
or
imul
xchg
imul
outsl
or
les
std
rol
mov
bound
scas
jb
testl
out
sarb
jnp
mov
cmp
notb
rolb
call
fwait
xor
push
ret
sub
stc
inc
mov
dec
inc
jno
imul
mov
lret
or
xchg
xor
test
xchg
call
lds
int3
or
fwait
andb
mov
push
mov
gs
sbbl
js
test
lods
jo
pop
inc
in
sub
ficoml
add
push
ret
push
ret
loope,pt
push
fsubs
mov
jo
and
push
mov
out
xchg
js
roll
stc
pop
rorl
dec
add
mov
movb
mov
aam
xchg
ret
xor
add
mov
sahf
ret
mov
sar
jbe
and
push
addb
sub
fucomi
subb
stos
sub
pop
adc
rorb
mov
out
cmp
dec
and
rclb
mov
aaa
sub
mov
pop
add
aaa
fisubrs
xchg
lods
test
hlt
mov
inc
imulb
rclb
xor
out
gs
mov
bound
imul
sbb
push
mov
popf
push
xchg
xchg
pop
cmp
and
or
pop
xor
push
arpl
inc
xchg
rcl
inc
add
hlt
repnz
sub
insl
dec
inc
movsb
repnz
test
popf
jecxz
xchg
insl
pop
addr16
ja
xchg
jl
rcrl
mov
mov
jge
jae
mov
or
pop
jae
or
mov
fsts
add
pushl
mov
and
jnp
xchg
mov
leave
sub
arpl
hlt
adc
cmp
fdivrl
nop
call
leave
sbb
xchg
pop
mov
call
loop
xor
orl
fstpl
push
gs
sbb
lcall
sbb
testl
cmc
fisubl
push
jae
pop
add
push
sbbb
adc
lret
inc
mov
xor
cmp
es
pop
pop
adc
xlat
inc
jge
push
xchg
dec
js
mov
or
mov
data16
pop
lock
call
popf
sub
loop
ret
hlt
movsb
rcl
scas
fldt
or
and
pop
sarl
mov
jg
xor
xchg
xchg
jg
push
mov
fwait
rolb
xorb
mov
and
jle
push
arpl
loope
aam
push
cmp
lret
sub
loopne
cmp
jp
stos
xlat
sub
mov
jno
xchg
bound
mov
shll
mov
mov
jl
push
imul
lods
call
loopne
mov
xorl
and
mov
mov
jnp
lods
fstpl
jne
cli
test
lock
es
inc
pop
imul
in
jle
xor
addr16
jl
in
loop
xor
or
and
dec
cmpsl
ud0
sub
adcb
mov
xor
mov
pop
pop
lods
or
xor
roll
insb
mov
push
jge
sbb
lahf
scas
push
push
outsl
sbb
pushf
add
mov
cmp
mov
icebp
xlat
inc
fstl
stc
test
shlb
xor
into
test
cmp
dec
in
push
dec
fwait
xor
shll
sbb
ds
repz
adc
daa
ljmp
lcall
call
push
call
outsb
pop
into
fadds
jge
mov
push
std
icebp
mov
and
arpl
stc
jno
sub
scas
inc
add
in
fsubs
cmpsb
mov
cmp
pop
ja
mov
jg
push
in
sub
int
aaa
into
jmp
fldenv
jo
loop
nop
clc
mov
cmp
pop
mov
inc
das
jge
cmp
xlat
mov
adc
mov
xchg
out
aam
cld
int
adc
mov
popf
adc
cli
and
ret
xchg
arpl
fistl
and
ret
loope
mov
sub
mov
movsb
outsl
mov
inc
jo
orb
jecxz
fs
lret
shrl
repnz
add
outsb
or
rol
cmp
mov
repz
inc
fists
out
xchg
sbb
je
pop
fdivp
mov
xlat
sbb
mov
sarl
test
repz
inc
or
push
and
or
pusha
lahf
cwtl
sub
sarl
sbb
jb
add
cmpsl
out
jge
jb
inc
test
jge
pop
sbb
pop
sub
ficoml
scas
sbb
dec
lods
das
dec
xor
push
lea
xor
adcb
aam
cwtl
arpl
cwtl
push
mov
aad
scas
imul
scas
xchg
xchg
es
loope
repnz
popf
pop
lcall
in
xor
add
mov
in
stos
jg
mov
and
cmc
pop
imul
movsb
cmp
pushf
xchg
stos
les
inc
fildl
cmp
je
sbb
xchg
cmp
push
fiadds
push
stos
push
dec
xor
int3
and
or
testl
popa
aam
pop
and
out
jne
pop
popf
mov
leave
cld
mov
mov
jmp
aaa
inc
push
or
jmp
jne
adc
and
pushf
jae
pop
test
iret
inc
cli
mov
inc
mov
mov
pop
push
dec
dec
test
shrl
jmp
dec
inc
je
repz
shll
rcl
inc
mov
sub
test
jnp
pop
mov
or
out
sti
xor
or
adc
mov
enter
aad
xchg
and
add
mov
push
repz
jg
pushl
pop
pushf
mov
roll
or
dec
add
push
push
jbe
add
and
mov
loope
mov
xor
movsl
add
cmp
and
jns
jmp
dec
mov
popf
mov
test
shll
cmc
pop
scas
jns
lahf
push
mov
xor
lods
bound
out
jae
dec
jb
mov
repnz
pop
pop
testl
inc
xchg
mov
cmp
xchg
mov
lret
jno
repnz
and
sbb
or
push
shl
push
in
jb
shrb
sub
pop
into
enter
pop
lods
fldl
outsb
stos
cli
push
mov
cmp
xchg
cwtl
scas
push
sbb
mov
mov
test
in
mov
incl
mov
inc
pop
mov
push
daa
and
mov
ret
dec
cmc
cwtl
xchg
mov
mov
jl
add
adc
mov
shll
icebp
xchg
xorps
out
jge
popa
adc
popa
out
mov
mov
or
in
mov
cmpsl
mov
jno
popf
mov
les
shll
push
mov
sbb
pop
ds
pop
scas
rcl
or
out
std
mov
sub
pop
scas
pusha
jl
call
and
jecxz
in
fadds
test
sbbb
insl
in
lahf
jle
es
shr
adc
lods
mov
mov
adc
cmc
hlt
ljmp
dec
jp
push
ret
andl
jp
adc
stc
test
and
pop
xchg
ret
aas
pop
clc
shrl
rcrb
movsb
out
sti
cmc
aaa
or
inc
repnz
shl
adcb
fsubrs
stos
or
fisubl
and
mov
arpl
cmp
pop
or
inc
push
and
lods
imul
mov
notb
mov
popa
into
loop
rcll
push
add
shll
mov
je
mov
js
adc
dec
call
test
and
test
int
ja
and
inc
in
mov
mov
cmpsb
add
sbb
je
cmpsl
out
ret
sub
push
mov
cwtl
adc
movsl
xchg
cltd
push
imul
loopne
enter
rcrl
jb
outsb
adc
sbb
stos
clc
jg
fwait
lock
inc
xchg
data16
mov
ljmp
dec
dec
sub
stos
fldt
aas
loop
jnp
or
cmpl
sbb
or
in
dec
adc
inc
xchg
lock
lcall
aad
pop
addr16
pop
mov
inc
mov
xlat
inc
mov
fsub
push
push
push
jb
mov
mov
push
sub
xchg
push
sbb
sub
pop
push
jno
inc
jno
and
push
lods
inc
int3
sub
inc
push
stos
lcall
xor
add
pop
cmpsl
xor
or
pop
mov
or
jg
imul
mov
mov
dec
out
mov
or
fs
movsl
xor
pop
hlt
dec
inc
testb
lods
add
sub
push
out
idivb
in
pop
jbe
dec
dec
cmc
mov
out
mov
mov
push
jmp
mov
mov
cwtl
and
fdivrl
lds
jno
jecxz,pn
ret
mov
stos
test
add
jno
cmp
lcall
arpl
xchg
or
pop
clc
adc
insl
sub
cmpsb
aas
inc
int
cmp
ja
insb
mov
ss
fucom
jmp
out
cmp
cmp
shll
sbb
push
jo
inc
out
jmp
or
imul
scas
or
or
inc
cwtl
jnp
std
mov
xchg
fs
aas
repz
or
pop
stos
pop
loop
dec
or
sub
pusha
cmpsl
lcall
push
or
lods
sti
add
and
mov
inc
in
fcomi
daa
mov
rcll
add
pop
dec
cmpsl
ret
fcomps
add
push
push
andl
loop
les
pop
add
lcall
push
in
ds
pop
cmp
mov
fcomps
loope
scas
testl
xchg
sarl
mov
std
ljmp
mov
xor
push
dec
or
or
mov
js
xchg
daa
cmp
shr
addl
xor
data16
jg
sbb
mov
mov
divl
in
ficomps
std
mov
clc
xchg
mov
mov
out
sahf
std
xchg
movsb
cmp
sbb
inc
push
popa
in
sub
leave
jno
jno
xlat
xchg
push
inc
inc
cmp
sahf
adc
testl
arpl
add
xor
and
push
inc
jne
fiaddl
and
jo
jle
cli
cwtl
scas
enter
adc
fdivrl
push
or
mov
popf
push
idiv
jne
mov
arpl
enter
lret
imul
lods
mov
test
xlat
js
sbb
sti
es
test
sbb
or
xchg
mov
xchg
sbb
loopne
sti
adc
out
pop
sbb
hlt
xchg
push
or
mov
stos
mov
jne
xchg
sbb
adc
in
mov
fistps
cli
jae
mov
jb
dec
scas
test
ret
pusha
ss
adc
icebp
cmp
inc
add
aam
outsb
addr16
xchg
or
ret
repz
push
stos
xchg
push
test
std
lea
jb
and
cmp
insl
fcomps
cmp
push
add
mov
movb
hlt
arpl
inc
std
pop
addr16
adc
aaa
pop
es
daa
gs
jns
aaa
fmull
repnz
addl
pop
adc
mov
pop
int
xchg
aam
cmp
leave
int
roll
outsb
sub
loope
push
push
in
inc
outsl
lret
ret
cmpsl
ds
adc
gs
inc
fdivrs
mov
data16
ljmp
aas
sahf
nop
xchg
sub
rclb
movsb
mov
ds
popa
cmp
int3
testl
mov
cltd
adc
and
addr16
inc
ficompl
bound
jo
icebp
iret
out
test
idivl
scas
lea
jne
push
out
push
cmp
das
stc
fucom
rcr
or
popa
inc
fcomps
or
mov
dec
sbb
dec
add
arpl
sub
lods
notb
loopne
movsl
pop
mov
xor
scas
in
push
adc
mov
xlat
icebp
pop
inc
adc
shrb
cmp
inc
lret
in
lret
and
jmp
cmpb
mov
dec
xor
cmp
cmp
out
sub
les
jg
mov
inc
nop
pop
out
pop
in
cmpsl
adc
mov
xor
hlt
test
push
cmc
in
andl
inc
sbb
xlat
movsl
jnp
ljmp
push
popf
stos
pop
bt
and
jbe
cmpsl
out
jb
js
or
fsts
pop
out
inc
or
add
enter
cmp
imul
pushf
add
lahf
aaa
dec
loopne
inc
adc
ds
rorl
adc
lods
dec
and
adcb
and
or
bound
fimull
outsb
subb
notb
mov
pop
mov
push
in
in
shll
mov
clc
psubd
jne
fistl
sub
adc
fnsave
inc
pushf
repz
cli
push
dec
iret
repz
xor
dec
ret
push
test
mov
das
inc
icebp
imul
sbb
fmull
lcall
push
xchg
sub
jo
pop
xchg
cmpsb
les
xor
test
repz
into
stos
int3
ret
fwait
scas
push
sub
push
repnz
adc
xchg
sub
pop
jecxz
jnp
mov
popa
sbb
lods
imul
jns
mov
into
in
test
push
fildll
mov
insb
jmp
scas
out
jbe
stc
ret
cltd
fsubrl
mov
div
fcmovne
mov
in
movsl
in
and
out
pop
pop
adc
test
cmp
inc
or
movsb
rorl
fs
jns
and
testb
push
mov
xor
roll
sub
cwtl
mov
in
xchg
ds
cmp
inc
mov
jb
in
pop
dec
mov
cmc
mov
xor
adc
mov
lahf
loopne
lret
push
jb
pop
push
push
jp
lds
adc
outsl
lret
push
jl
divb
aaa
fimull
jp
lcall
std
or
add
je
movsl
loopne
notb
mov
pop
aad
pop
or
lret
call
pop
outsl
jo
stos
es
lock
gs
rolb
fsts
test
dec
mov
out
jmp
xchg
or
xor
inc
pop
bound
mov
push
aad
pop
mov
fs
ja
adc
sub
inc
pop
fldt
icebp
fidivl
lods
add
push
push
push
rolb
sub
in
adc
cs
movsb
mov
xchg
out
stos
mov
imulb
and
stos
or
push
pushf
les
sahf
sub
clc
sub
sub
pop
clc
adc
pop
nop
daa
nop
test
xor
pop
fsts
pop
push
inc
mov
fmuls
shlb
fcomp
pop
in
nop
sbb
jno
pop
in
push
lahf
out
xor
pop
daa
adc
repnz
sub
test
inc
or
fs
scas
leave
pusha
shll
fisubrl
jg
dec
sbbl
or
push
fdivl
mov
sub
int3
hlt
xor
push
lds
ja
xor
inc
fistl
cmpsb
lock
mov
push
and
xchg
pushl
out
fisubrs
pop
out
xchg
aaa
jl
or
rcrb
outsl
orb
clc
mov
push
jle
mov
mov
sbb
sbb
cmp
and
mov
sahf
pop
cwtl
addl
out
mov
fsts
aad
pop
inc
jo
dec
decb
rol
shll
cmp
adc
ret
ljmp
mov
cmp
inc
ret
imul
gs
sbb
daa
insl
sbb
mov
roll
pop
divb
mov
mov
dec
sub
push
imul
aas
aaa
std
std
or
subl
ffreep
je
cmpsb
out
dec
lods
pop
pop
insb
xor
stc
mov
pop
ds
sbb
xlat
sub
iret
dec
lock
xor
xchg
inc
and
push
inc
add
je
pop
mov
adc
loope
jbe
push
add
lcall
rcl
movsb
cmp
cli
adc
dec
adc
incl
out
cs
sbb
xchg
iret
aaa
inc
les
ficoms
mov
in
mov
or
lcall
pop
dec
lret
pop
push
and
sbb
adc
out
in
mov
fs
clc
ds
out
ja
aam
or
aaa
ds
cmp
push
and
loope
push
pop
sub
hlt
xchg
fucomp
popf
sub
sub
stos
add
scas
inc
lahf
insb
cld
cmp
lods
fdivs
popa
cmpsb
les
enter
pop
in
dec
pop
sbb
sbb
mov
xor
cwtl
cmp
subps
sub
daa
pop
cmp
outsb
sub
cmc
dec
xor
jge
jbe
add
sbb
cmp
push
mov
test
pop
xlat
test
fs
xor
or
dec
add
dec
shlb
cmp
in
loope
es
jecxz
adcl
inc
ficompl
shrl
xor
out
mov
cmp
sbb
icebp
xchg
xchg
or
jecxz
cmp
push
nop
jae
ja
test
adc
stos
xlat
daa
jae
jne
jo
test
add
inc
add
xor
cmp
mov
cmc
and
cltd
mov
test
inc
adc
test
pop
fcmovu
inc
dec
test
mov
xchg
shll
pop
dec
dec
mov
cmc
movsl
mov
jmp
xchg
adc
pop
cmp
jmp
test
cmp
jo
xor
fisttpl
rorb
shrb
fmulp
push
pavgb
dec
in
or
lahf
xchg
imul
mov
aam
addr16
cmpsb
out
ja
jle
lret
orl
and
mov
mov
shrl
mov
iret
adc
cs
mov
adc
pop
fidivrl
pop
pop
xor
fidivrs
int3
xor
add
inc
adc
and
insl
cmp
add
jnp
scas
pop
test
pop
cmp
fldl
adc
xchg
xor
jae
insb
mov
imull
push
mov
dec
pop
mov
add
mov
daa
addl
jmp
mov
mov
sbb
or
imull
and
mov
xchg
xchg
cmc
adc
inc
mov
inc
pusha
sti
mov
cld
je
mov
lea
aad
jl
loop
jnp
mov
rcrb
insl
insl
and
adc
cmp
cmp
push
adcl
std
les
add
fcomip
dec
dec
inc
fwait
jo
adc
jne
call
hlt
inc
out
ja
xchg
push
inc
lcall
fisubrl
cmpsl
out
stos
and
add
mov
lret
orb
mov
inc
imul
lods
outsb
lods
lret
inc
ret
outsl
daa
lds
arpl
inc
xchg
sub
aaa
rolb
ret
int
in
es
je
popa
imul
jnp
jge
iret
lret
inc
sarl
es
sbbl
xchg
mov
sbb
fisubs
mov
adc
mov
cwtl
push
fsubl
mov
fisubrs
cmc
xchg
lahf
jo
and
pop
sti
cmc
in
xor
xor
loope
lds
movd
add
stos
sub
jge
popa
scas
fistl
jae
sub
movsb
divb
mov
cld
rcll
test
js
loope
pop
addl
push
sbb
mov
ror
lods
and
jb
or
xchg
fdivs
mov
gs
sbb
mov
jno
sbb
xchg
dec
pop
in
movsl
pusha
sbb
jns
fidivs
into
inc
mov
cmc
out
adc
fwait
sbb
dec
mov
add
outsl
or
in
jl
cmp
xchg
iret
pop
inc
pop
mov
adc
mov
in
add
adc
inc
sub
push
push
dec
cmp
aas
xchg
cwtl
orl
jle
and
out
xchg
cmp
mov
shlb
jge
stos
fscale
pop
xor
lea
sarl
cmp
stos
cmp
lock
push
pop
outsl
inc
push
jno
sbb
push
icebp
lahf
add
fdivp
pop
xchg
and
jbe
xchg
sub
cmp
mov
fdivrl
jmp
pop
and
pop
jge
fadd
xor
repz
jle
add
aaa
mov
xchg
in
data16
sahf
cs
xor
pushf
iret
cmp
xlat
daa
js
push
xchg
adc
push
lds
aam
sub
fidivrs
sub
push
mov
cmpsl
jbe
xor
cs
movsl
aas
mov
xchg
xor
adc
sub
add
aas
jnp
dec
imul
pusha
arpl
jo
aas
sahf
push
dec
add
pop
hlt
push
mov
add
lret
mov
jne
inc
gs
add
icebp
or
js
push
mov
mov
jg
imul
xchg
decl
xchg
jg
lret
push
cmc
cmpl
icebp
js
int
out
pop
cltd
cmpsl
imul
mov
in
out
in
mov
stc
inc
adc
jns
lea
lret
ret
lock
cmp
add
test
adc
std
jg
xchg
mov
pop
cld
mov
jecxz
repnz
push
sbb
imul
xchg
push
je
mov
mov
and
ss
fiadds
rol
mov
jp
arpl
mov
mov
jnp
les
shl
inc
pop
push
pop
cltd
mov
xchg
adc
xchg
jae
call
xor
xchg
xchg
add
sub
imul
push
rcrb
push
iret
cmp
mov
ds
decl
adc
pop
mov
mov
xor
out
scas
pop
inc
sbb
jno
js
cmc
loope
cmp
mov
call
jecxz
outsb
fsubr
fptan
dec
subb
lods
fcoml
fnstenv
mov
inc
loope
lea
jo
xor
cmpsl
mull
test
fistpll
mov
sbb
cmp
cmp
add
fisttpl
scas
inc
out
cwtl
mov
jns
enter
xchg
lea
sub
push
sahf
or
jmp
scas
sbb
or
pop
add
jg
lock
xlat
and
pop
rol
mov
inc
xlat
divb
inc
and
xchg
push
and
mov
dec
adc
incb
fwait
mov
imul
bound
jmp
imul
cmp
sarl
push
stos
or
adc
add
or
stos
lds
cmpb
add
ret
dec
mul
jecxz
dec
das
in
cmp
call
cmp
cmp
sbb
and
cmpsb
cmp
andl
add
sub
daa
insl
inc
pop
xchg
dec
mov
jmp
or
std
dec
mov
mov
aad
inc
cmp
data16
lds
js
cmc
rorb
test
mov
jl
mov
cld
pop
push
cmp
lcall
out
jb
nop
pop
xchg
sbb
jmp
xor
idivl
lcall
or
daa
or
ja
inc
inc
popf
adc
lret
pop
xor
pop
mov
jl
inc
xchg
xor
arpl
js
mov
jg
fistl
xor
test
adc
repz
push
mov
orb
fwait
inc
add
decl
lods
push
imul
enter
dec
pop
in
pop
jmp
xor
push
dec
jns
push
es
lret
xor
sub
mov
xor
dec
fistpl
xchg
bound
dec
fsubs
jl
pop
mov
inc
fbstp
mov
cli
push
and
fnstcw
stos
or
push
or
loop
mov
stos
and
inc
lahf
add
mov
dec
ret
dec
xchg
xchg
add
xor
and
dec
aas
adc
or
mov
mov
notl
sub
int
popf
stc
imul
cmpsl
les
mov
scas
cwtl
and
lods
sub
test
mov
or
out
imul
mov
mov
jno
sahf
push
adc
or
jne
scas
jmp
add
decb
jb
xchg
insb
arpl
ret
xchg
outsb
mull
rol
push
add
arpl
scas
adc
push
shll
aam
xor
inc
negw
push
movl
popa
sub
mov
repz
dec
movsl
das
xchg
push
loope
cmp
and
in
jns
or
mov
inc
js
lock
mov
sbb
and
flds
cmpl
push
mov
xor
dec
jecxz
aad
sub
sbb
jae
mov
flds
xchg
jne
lret
out
enter
lea
cld
dec
cmp
or
fidivs
jns
in
jmp
test
mov
pop
rcr
jmp
icebp
pop
dec
mov
ljmp
ds
in
adc
ficomps
fwait
inc
sub
fs
in
or
mov
int
cmpsb
push
inc
add
aas
push
and
and
popa
shrb
ja
mov
cmpsb
dec
cmp
cmp
xor
in
jp
inc
push
push
pop
xchg
repnz
sub
mov
les
lods
pop
cwtl
jo
cmp
mov
cmp
adc
iret
inc
push
lods
aaa
ret
popf
mov
jmp
and
daa
clc
addb
stc
ja
icebp
cwtl
scas
call
je
sahf
outsl
sub
pminsw
jns
mov
push
scas
inc
inc
push
adcl
mov
imul
cmpsb
xor
inc
xchg
dec
cmpsl
dec
insl
lock
bound
mov
pop
pop
icebp
daa
icebp
xchg
in
adc
dec
outsb
data16
mov
clc
test
sbb
xchg
orl
movsb
pop
test
mov
rorl
rcl
popa
inc
pop
sbb
mov
sbb
shlb
lea
shlb
xorl
pushf
mov
jle
cmp
push
outsb
lret
cs
pop
xchg
mov
sbb
out
jns
mov
ror
test
fildl
stos
test
push
lret
shll
icebp
mov
les
mov
fcoms
jmp
pop
ljmp
push
inc
push
test
push
mov
aad
mov
stc
sti
cmp
test
jg
adc
fcmovne
data16
inc
xlat
mov
and
add
mov
jmpw
adc
xor
push
nop
shrb
adc
mov
jbe
xor
sbb
or
imulb
stos
bound
popa
stos
andl
push
mov
fdivs
iret
xor
outsl
data16
xchg
cli
mov
fs
cwtl
das
lret
out
dec
lock
sbb
add
mov
jb
jmp
mov
fnsave
jmp
xchg
fcmovu
cmp
std
or
xor
mov
mov
aaa
add
test
push
test
jns
xchg
adc
xchg
inc
in
add
mov
call
lcall
sbb
mov
add
pop
nop
xchg
jo
dec
movsl
push
mov
out
outsb
sbb
mov
xor
sbb
repz
adc
and
ficoml
mov
movsb
int3
loopne
mov
imul
xchg
popf
sbb
ljmp
mov
cmp
jbe
add
dec
adc
jle
add
and
in
sbb
imul
push
pop
int
sbb
sbb
mov
addl
icebp
cmc
mov
and
xchg
ss
in
movsl
adcl
bnd
outsb
and
xchg
xchg
mov
insl
clc
add
jae
jo
mov
jne
mov
ja
mov
test
in
in
pop
lds
testl
leave
or
cwtl
das
dec
xchg
mov
adc
inc
js
cmp
xor
fisubs
movsb
cmp
xsha1
cmpsb
or
sbb
cmpsb
mov
sahf
xor
hlt
xchg
popf
das
lea
test
jns
xchg
mov
test
test
lahf
jb
scas
popa
xchg
pop
idivb
sfence
mov
in
popa
out
xchg
les
shll
mov
mov
les
sub
xchg
lds
in
jo
xchg
mov
and
jmp
lods
ja
nop
mov
ret
call
pop
aad
or
shrl
leave
inc
and
les
es
inc
daa
shrl
movsb
jmp
add
mov
inc
loope
call
sub
repz
pop
in
shrl
clc
mov
cld
or
cltd
jle
or
mov
jbe
sbb
adc
push
cmp
sub
xchg
repnz
mov
lret
and
loope
insb
jmp
pop
scas
mov
lds
adcl
mov
mov
mov
leave
sub
adc
andl
es
ja
repz
fsubl
js
dec
leave
orl
cld
pop
fnsave
push
or
jle
xlat
das
sti
call
or
add
movsl
loop
enter
mov
jnp
pop
cmpsl
lods
sub
or
les
push
shll
dec
loop
loop
jp
je
lods
push
mov
rcll
in
jnp
mov
out
xor
xor
cld
sarb
xchg
addr16
sahf
xchg
sahf
push
imul
xchg
or
lds
lahf
adc
arpl
nop
add
sub
test
test
es
sub
push
leave
jmp
xor
insl
mov
cmp
push
jbe
imul
fs
mov
or
jecxz
pop
das
push
nop
jne
add
push
jmp
mov
pop
xchg
cltd
xor
jnp
mov
outsb
add
pop
cwtl
xchg
pop
ljmp
lock
add
bswap
jge
and
cli
sbb
cmc
adc
sub
jb
inc
adc
jl
std
jo
push
mov
xchg
fistl
pop
outsl
or
in
mov
cmp
jl
lcall
cmpsb
lods
push
cs
cs
fnstsw
ret
in
adc
cmp
jo
fimuls
stos
cmp
fdivrs
ret
in
dec
femms
rorl
mov
pop
popf
cmp
xchg
cli
dec
dec
stos
mov
in
add
inc
clc
out
gs
push
push
sbb
inc
xchg
mov
test
repz
stc
int3
inc
jmp
pop
rol
int
mov
lret
lret
fstpt
aad
pop
jb
lret
out
adc
loopne
jo
testl
sub
fstps
arpl
mov
mov
sahf
mov
add
in
mov
sub
adc
imul
push
hlt
jae
push
sub
xchg
adc
ret
outsb
push
jne
mov
loope
pop
mov
mov
repnz
in
xor
xor
mov
fs
repz
pop
icebp
cmp
in
cmp
cmp
fnstcw
inc
sub
jmp
leave
jecxz
mov
loopne
push
lds
sbb
sub
cmc
mov
push
clc
adc
mov
jb
scas
xchg
xchg
lahf
fucomi
lret
pop
mov
sub
inc
in
orb
movsl
dec
add
mov
popf
lods
xchg
add
in
or
pop
cli
test
jle
cmp
aad
out
gs
push
loopne
addr16
int
add
hlt
jno
mov
mov
push
sbb
xchg
or
mov
fs
mov
test
scas
aas
loop
add
sub
add
pop
jmp
mov
ret
icebp
sbb
sub
adc
in
cld
and
xor
sbb
or
shrb
push
lock
js
inc
test
mov
adc
leave
and
lds
push
scas
mov
add
adc
jg
fwait
xor
mov
sub
sbb
mov
sbb
mov
xchg
jecxz
add
call
dec
loopne
into
adc
mov
lret
cmp
sub
or
gs
jl
push
xor
pop
ret
or
icebp
cmp
inc
mov
lds
imul
jmp
mov
stos
jbe
lds
shll
jns
loopne
inc
cmpsl
xchg
adc
lahf
fsubr
shlb
stos
add
cltd
mov
jge
scas
neg
dec
and
mov
stos
and
in
inc
pop
inc
dec
xchg
jnp
cmp
hlt
dec
movsl
lds
ret
pop
adc
xor
dec
pushw
pushf
xor
das
shrb
aam
mov
sbb
mov
std
sub
movsl
nop
pop
lret
cmc
scas
cmpsb
adc
aam
jb
add
adcl
pop
jmp
dec
lret
jb
fbld
fwait
jns
into
aas
data16
sub
or
cmp
xchg
ja
out
aas
xchg
mov
cmp
push
jns
jp
mov
aam
push
sub
jbe
jmp
mov
adc
pop
lods
das
fnstsw
push
insb
jno
jns
pop
enter
mov
dec
xor
bound
repnz
insb
xchg
outsb
adc
in
leave
int
mov
mov
aas
sbb
add
sub
xchg
sub
ds
dec
sbbb
fsts
out
fs
mov
inc
xor
mov
push
clc
jecxz
pop
push
pop
or
xor
icebp
jmp
push
ror
testl
sbb
jmp
enter
lahf
mov
mov
push
sub
aad
jbe
rclb
push
and
jl
repz
jl
into
jle
divl
jl
arpl
push
in
mov
ljmp
add
sbb
push
in
mov
xchg
js
cwtl
fadd
push
and
imul
push
mov
pushf
ljmp
mov
lcall
testb
stc
xchg
sub
loope
sub
pop
repnz
stos
imul
das
sub
jp
punpcklbw
shrl
hlt
ss
aas
iret
adc
jne
sbb
lahf
fidivrl
push
push
jb
in
inc
sbb
jecxz
and
jb
add
add
xor
jne
int
jnp
lret
mov
add
sub
sbb
mov
sbb
fwait
sub
add
popa
aas
xchg
dec
pop
mov
out
pop
cld
xchg
pop
fildll
adc
sbb
sarb
mov
jnp
pop
cmp
inc
out
sbb
sbb
mov
add
cmp
jecxz
movb
sbb
or
adc
xchg
jge
cwtl
popa
or
les
lods
lret
jae,pn
lods
push
cmpsb
dec
cld
cmpsl
stc
xchg
pop
lret
jbe
adcb
insl
ja
inc
pop
popl
ret
lock
and
aad
and
call
xor
jp
rorl
enter
xor
and
das
popa
and
jmp
and
jns
ljmp
lret
adcl
sahf
cmc
inc
jg
xchg
lea
add
add
arpl
push
andb
pop
nop
adc
scas
mov
rolb
push
jb
insl
adc
pop
scas
inc
js
cmpsb
insl
sbbl
lods
inc
mov
adc
xor
and
subl
dec
dec
mov
icebp
sub
insb
inc
cmpsb
icebp
inc
pop
cwtl
mov
lcall
push
stc
jbe
cmp
out
push
sar
lods
push
and
dec
pop
push
xchg
push
fs
xor
push
mov
jge
cmpb
sub
mov
and
and
mov
sarb
mov
or
and
push
or
dec
mov
sti
test
dec
bound
ret
fildll
rolb
lret
cmp
ds
les
enter
dec
jmp
add
jmp
sbb
sahf
xor
dec
icebp
inc
pop
pop
lods
into
dec
push
xor
sti
lock
stos
sub
ds
dec
xor
aas
ss
stos
roll
sbb
jnp
or
adc
les
inc
xchg
push
call
cmp
and
jecxz
popf
and
inc
dec
inc
jle
pop
outsb
mov
jno
int3
imul
aaa
push
xor
or
push
mov
inc
or
jo
js
add
idivl
mov
xchg
fnstsw
lods
les
push
scas
in
ror
push
sbb
aaa
mov
hlt
mov
push
adc
cmp
xchg
mov
outsl
add
mov
negb
mov
cli
pop
std
xchg
mov
xchg
cmpsb
inc
lds
shll
mov
movswl
scas
lcall
xchg
icebp
lcall
shl
pop
in
sbb
fiaddl
inc
add
push
xchg
xor
lea
loop
int
push
adc
cmpsl
xchg
cmc
adc
in
lods
lea
out
aad
icebp
cmp
or
orl
and
lods
or
out
mov
bound
pop
cmp
xor
or
cmpsl
out
pop
fidivl
adc
dec
xchg
cli
out
pop
push
daa
imul
into
push
call
hlt
sbb
loopne
or
addr16
ja
xchg
sbb
adc
dec
incb
pop
mov
xor
jl
push
mov
cmp
push
mov
jne
mov
sub
or
inc
cwtl
xlat
loopne
or
enter
subl
aad
pushf
mov
idivb
mov
in
push
enter
out
dec
jl
cltd
loop
push
jecxz
inc
sahf
movsb
sbb
and
loope
mov
dec
jb
fnsave
cli
rcr
mov
sbb
into
and
sub
iret
pusha
push
bound
aad
test
mov
add
ret
pop
subl
test
cmp
mov
inc
adc
jmp
jae
imul
nop
in
cmp
and
shrb
addb
inc
shlb
andb
out
aas
jns
and
cmpsl
aas
cmp
inc
pop
mov
fcompl
xchg
daa
cmp
pop
out
push
or
clc
jb
les
iret
and
in
jns
loop
and
in
adc
mov
es
inc
lods
inc
jne
xchg
or
lods
lret
jo
les
hlt
lods
mov
dec
dec
loop
and
cmp
and
jecxz
clc
push
mov
push
lds
adc
xchg
cwtl
das
loop
jg
popa
mov
jg
xor
clc
cwtl
mov
dec
cltd
pusha
dec
dec
sub
sub
jp
inc
adc
xor
mov
js
fs
inc
pop
xchg
dec
jne
mov
inc
cmp
xchg
pop
jno
jmp
cmp
imul
inc
lea
fstl
mov
fimuls
divb
loope
push
fbstp
lea
clc
aas
sahf
push
xlat
or
dec
xor
inc
adc
movsl
clc
test
inc
pop
aaa
out
sbbb
divb
pop
mov
aad
push
inc
fnstenv
shrl
pop
jl
lock
and
das
push
stos
and
push
or
cmp
sbb
lds
test
sbb
pop
cmp
fcmovnb
in
dec
xor
push
adc
xor
call
xor
mov
jbe
pop
mov
cltd
mov
shll
mov
sbb
push
ds
loop
push
pop
sbb
divb
mov
out
jbe
mov
cmp
rcrb
jle
lods
imul
lds
out
fcompl
sub
repnz
inc
out
pop
inc
insb
pop
je
fistpll
into
sarb
push
xchg
push
sbb
scas
mov
lods
sti
sahf
cmc
mov
cmpsl
subb
or
push
sub
push
lret
adc
movsl
fs
push
hlt
mov
imul
leave
push
push
push
xchg
cmc
lret
cld
repnz
lock
outsb
mov
in
mov
lock
adc
mov
cli
or
daa
sti
lahf
divl
xchg
add
std
jae
add
mov
outsb
xchg
das
dec
dec
dec
push
loopne
xchg
jl
adc
mov
es
push
fildl
mov
fwait
cld
fcomps
cs
mov
mov
incl
es
mov
stos
pop
mov
adc
test
in
arpl
add
add
js
push
sub
shll
add
jno
test
xorb
in
movsl
cltd
popa
xlat
push
pop
in
in
mov
insl
push
mov
jno
inc
fdiv
and
fcoml
push
mov
dec
jle
cmc
mov
jne
push
adcl
cmpsb
into
pop
adc
std
stc
adc
les
mov
iret
mov
js
shll
mov
cmp
xlat
add
mov
sub
lret
shrb
add
inc
mov
inc
jns
fldenv
in
pusha
test
shlb
xor
push
jnp
sbb
push
sub
loop
loope
lret
pop
cwtl
imul
inc
mov
fwait
aaa
or
mov
mov
mov
test
pop
sub
inc
sbb
xchg
insb
js
add
movsb
jp
lea
cmp
sahf
sub
in
test
cmp
les
leave
pop
js
subb
push
mov
insb
cli
pushf
jns
mov
xor
inc
sbb
cwtl
push
sti
sub
dec
sbb
jecxz
lock
in
adc
les
sahf
inc
shrb
sub
cmpsb
inc
incb
ret
dec
mov
mov
lods
insb
mov
cli
adc
jnp
mov
adc
jl
pop
push
sub
bnd
mov
or
ds
ljmp
inc
lret
ret
mov
dec
rcrl
rorb
sbb
xor
sub
dec
stc
mov
mov
scas
inc
sub
mov
jbe
fists
cmp
test
je
mov
push
push
inc
sahf
dec
movsb
js
int
adc
lds
mov
out
inc
fcomps
mov
xor
lds
push
jb
mov
sub
stc
rclb
insl
lea
mov
mov
lock
aaa
pusha
cltd
cmp
fcoml
add
jge
shrb
popf
mov
shrl
or
adc
mov
mov
mov
mov
sub
mov
mov
add
add
sub
or
out
mov
mov
mov
adc
mov
fsubp
add
mov
es
lds
icebp
or
fcoms
push
popf
ljmp
insb
enter
sub
and
mov
dec
div
in
test
cltd
push
ds
ds
mov
aad
cmpsb
mov
sarl
pop
iret
push
decb
lds
imull
dec
mov
mov
pop
cmp
jb
fildll
subl
lods
fimull
jecxz
testb
sub
sub
pop
mov
sbb
pop
push
gs
xor
imul
lds
or
in
enter
mov
add
adc
movsl
int
daa
mov
sbb
jmp
movsl
cmp
stos
push
fildl
push
xor
lret
cld
push
add
enter
push
pop
out
pop
dec
leave
cwtl
pop
jne
cmc
lock
add
out
call
leave
outsl
jns
push
xchg
insl
sbb
jmp
inc
pop
cmpsl
jb
pop
xor
mov
push
pop
push
leave
jecxz
cmp
mov
loope
cmc
lret
rol
adcl
shlb
pop
outsl
cmp
jmp
leave
inc
push
out
or
insb
imul
je
ret
jle
lods
mov
sbb
mov
jecxz
adc
add
sbb
xchg
dec
imul
jmp
pop
fisubl
jg
ss
sub
pop
stos
mov
enter
xchg
stc
add
cmp
je
pop
movsb
pop
dec
stos
sub
into
cmpsb
clc
shrl
sub
jp
push
fs
aaa
sbb
jns
fistpl
cwtl
adc
sti
stos
sub
pop
aaa
cli
aaa
push
push
insl
pop
cmp
aas
pusha
pop
push
fsubrp
addr16
fistl
cmc
into
sub
jne
loopne
adc
mov
movsb
fcmovne
mov
addl
xchg
out
xchg
xchg
push
xchg
dec
dec
aas
sbb
and
out
or
aas
lahf
pop
lahf
shlb
test
jl
iret
lods
out
fcomp
push
out
mov
adc
mov
push
cld
adc
jmp
lea
mov
pop
jle
mov
push
pushf
test
pop
fwait
popa
je
imul
sub
adc
fdivl
mov
pusha
test
mov
stc
sar
inc
pop
push
xor
xorb
mov
das
adc
mov
push
repnz
push
pop
icebp
fs
xor
dec
test
imul
pop
mov
pop
in
dec
cs
cmp
xor
sbb
mov
pop
shlb
jp
inc
out
inc
pop
lock
jbe
jecxz
std
js
mov
jp
mov
sti
jp
jecxz
cltd
cmp
in
fidivrl
or
stos
mov
jg
inc
cmp
ja
xchg
imul
adc
nop
jae
inc
xchg
xor
lcall
in
stos
xor
inc
leave
in
mov
dec
jecxz
xchg
lods
lods
out
mov
lock
fnsave
js
movsl
or
adc
mov
fstpt
add
xchg
lret
das
ret
xor
scas
mov
sbbl
ljmp
push
cli
xchg
lea
mov
scas
sbb
dec
mov
and
stos
je
ja
push
outsl
in
and
bound
adc
or
scas
shr
pop
xchg
popl
mov
jle
movsl
mov
dec
or
arpl
je
xchg
pop
inc
imul
inc
dec
dec
lods
mov
enter
or
insl
rol
imul
sbb
xlat
mov
or
stc
sbb
jp
dec
pop
jge
xchg
outsb
fsts
mov
scas
xor
in
xlat
outsb
fidivrs
push
inc
les
fcomip
adcw
mov
movsl
add
dec
jecxz
mov
xor
push
add
pop
jno
mov
lods
cmpsl
ud1
xlat
add
pop
loopne
shlb
and
orb
mov
mov
adc
jbe
jl
adc
imul
ljmp
xchg
xchg
sub
mov
mov
or
mov
mov
popf
das
cmp
and
pop
mov
rcl
add
sub
pop
clc
mov
push
xor
cli
inc
push
sti
ret
adcl
xor
mov
inc
les
xor
sub
cmp
repz
cmpsb
adc
movsl
push
fisubs
aaa
push
in
test
sbb
andb
xchg
pop
xor
std
aas
jle
call
in
and
nop
mov
add
sarb
fs
addl
xlat
xor
stos
subl
xchg
or
mov
les
jl
jae
rclb
xor
cmp
xchg
jecxz
mov
cmpsb
xor
scas
std
xchg
sbb
std
ss
std
and
pushf
adc
sub
mov
scas
lds
adc
mov
mov
pusha
out
inc
pushf
out
pop
jnp
and
mov
test
sbb
push
xchg
adc
dec
jp
sub
loopne
xor
ret
popa
push
sbb
lock
cmp
stos
arpl
mov
gs
int3
or
cmpsl
enter
mov
lcall
fs
data16
stos
dec
mov
mov
pop
dec
imul
add
stc
adc
in
dec
adc
jae
adc
inc
dec
push
sbb
iret
ret
rcl
push
rol
xor
or
jecxz
push
repnz
push
xor
xor
pop
fadds
cmp
lods
in
mov
push
pop
aam
mov
test
scas
xor
mov
xchg
add
dec
dec
pop
test
fstps
lret
inc
cs
lock
dec
cmpw
and
js
xchg
in
pop
pop
out
xchg
xchg
mov
mov
or
imul
mov
add
lods
or
mov
mov
test
lods
in
mov
cwtl
notl
sbb
bound
insl
daa
xor
or
rclb
mov
lds
mov
xchg
xchg
pusha
sarl
andl
ficoms
mov
and
jbe
pop
jecxz
mov
jg
mov
loop
add
push
cld
jb
xor
pop
cmc
push
dec
orl
stos
aaa
stc
sbbl
mov
push
sub
or
add
loopne
cmp
mov
inc
sub
roll
aaa
hlt
cli
mov
cmc
mulb
jnp
pop
movsb
xchg
sbb
mov
xchg
adc
bound
push
cwtl
jp
inc
inc
mov
dec
add
mov
jp
xchg
daa
es
aas
ss
scas
mov
fsubrp
push
adc
iret
xor
push
ret
outsb
dec
mov
mov
sub
adc
adc
decl
leave
dec
shrl
sub
arpl
sbb
sbb
pop
pop
fimuls
je
jo
jl
jp
les
fistpl
inc
push
mov
push
pop
cmp
fs
cmc
add
jmp
push
ja
push
push
fisubl
mov
test
add
mov
dec
pop
in
insb
adc
dec
cmp
mov
inc
not
icebp
sbb
or
call
cmp
xor
lret
into
push
cmp
jbe
stos
mov
lret
lock
in
inc
mov
adc
arpl
jg
leave
lock
std
xor
mov
ret
inc
sub
jae
dec
cs
sbb
sbb
push
sbb
notl
jle
mov
jmp
jo
mov
cmpsl
fwait
je
aaa
into
mov
add
mov
aaa
ficompl
mov
test
add
cmpb
neg
enter
stc
addb
imul
inc
inc
in
ljmp
sub
jns
pop
mov
mov
imul
enter
xor
aas
mov
mov
push
arpl
lods
jne
lods
mov
pusha
std
adc
out
add
mov
test
fdivrl
sub
ret
int
mov
dec
xchg
in
dec
mov
inc
jmp
in
movb
jo
fst
inc
cmpsl
inc
mov
filds
inc
jmp
pop
mov
push
mov
or
jecxz
jb
sbb
or
repz
inc
aas
es
clc
cmp
inc
test
jp
xor
jnp
mov
or
shl
push
nop
je
dec
pop
push
incb
pushf
adc
mov
mov
mov
mov
jl
add
inc
push
xor
push
inc
enter
xchg
and
ret
cmp
test
cmp
add
xorb
cmp
mov
dec
arpl
inc
int
popa
mov
push
ss
andl
mov
andb
push
lods
out
mov
push
or
repz
sub
push
imul
addl
addr16
inc
jmp
inc
outsb
test
ss
out
pop
iret
pop
bound
ffreep
sub
in
leave
pushf
jg
push
xor
mov
dec
jno
xchg
lcall
cmc
nop
call
add
mov
dec
pushf
outsl
imull
shrl
cmpl
shlb
mov
call
xchg
pop
outsl
adc
jns
sbb
sub
int3
arpl
xor
push
testl
mov
mov
adc
out
xor
and
adc
mov
and
xchg
pushf
xor
sbb
mov
les
fnstcw
jle
ret
jmp
adc
xchg
or
idivb
movsb
jbe
xor
pop
dec
fsts
mov
sub
xchg
aam
cltd
mov
enter
rcl
sub
mov
inc
fidivs
je
leave
int
andb
lahf
sub
inc
mov
inc
adc
add
xchg
lret
popf
cmpb
adc
push
in
mov
ret
jecxz
mov
jecxz
push
mov
cmp
shrb
outsl
jge
les
sbb
lret
mov
adc
pop
and
loopne
or
add
dec
imul
cmp
and
andl
cmc
rcr
testb
bound
push
push
sub
push
dec
inc
iret
push
subl
dec
inc
movsl
mov
imul
adcb
repnz
fwait
mov
adc
addb
xor
mov
xor
sbb
pop
cmp
or
mov
in
and
xorb
test
pop
mov
adc
out
scas
test
lods
pop
pop
xchg
fbstp
or
mov
push
mov
ret
rcrl
mov
adc
jmp
xor
mov
clc
jne
push
imull
mov
loope
rcrb
adc
jl
mov
nop
sbb
mov
inc
sbb
xchg
cmp
enter
lea
or
add
cmpb
fisubs
hlt
test
xor
out
bndstx
adc
movsl
push
scas
ret
xchg
insb
xor
inc
lds
sub
cwtl
das
hlt
cwtl
ljmp
jno
push
mov
gs
push
adc
ljmp
push
hlt
xchg
out
jo
mov
lea
pop
movsb
push
sbb
add
cmp
jmp
dec
rcll
hlt
mov
notl
je
fadds
nop
adc
ret
test
jg
mov
push
mov
aaa
rorb
cmp
mov
adc
test
ret
mov
xor
add
das
into
mov
add
bound
fwait
pop
pop
inc
mov
dec
mov
out
cmp
pop
pop
hlt
push
psadbw
repnz
pop
dec
ret
sbb
push
push
cmp
add
cltd
inc
loope
mov
jo
pushf
add
inc
xchg
aaa
jbe
aad
mov
lcall
and
fwait
pop
xor
xsha1
cmpsb
or
push
idiv
gs
fists
out
nop
mov
jae
xor
or
pushf
and
pop
insl
mov
push
lret
mov
jp
jb
add
pop
mov
sbb
data16
mov
inc
cltd
mov
lret
cmp
sahf
in
mov
dec
dec
div
mov
lret
loopne
mov
adc
pusha
out
xchg
mov
or
xlat
xchg
insl
adc
gs
mov
mov
add
fwait
inc
xor
push
dec
das
push
xchg
bound
cs
dec
mov
xchg
sub
maxps
xchg
jo
inc
xchg
or
mov
popa
mov
mov
lcall
les
out
push
jl
pop
enter
sbb
roll
enter
mov
sbb
pop
pop
sub
lcall
sub
cmp
in
and
fs
imul
outsb
mov
shl
pop
test
shll
jecxz
icebp
or
push
mov
movsl
loope
orb
mov
into
pop
jno
xchg
scas
sti
cmp
fidivs
cmp
ljmp
jmp
neg
jo
pushf
leave
cli
or
aaa
push
icebp
mov
mov
xor
add
sub
leave
in
jno
jae
mov
mov
push
and
adc
push
jbe
stc
daa
or
sahf
and
js
das
lcall
sbb
jp
mov
add
mov
loop
mov
inc
in
movsl
clc
mov
add
and
cmp
hlt
mov
jge
cmc
scas
pop
jge
push
int
push
pushf
mov
sub
inc
jns
jb
mov
rorl
add
jae
xchg
sub
adc
dec
outsb
push
das
push
or
dec
dec
loop
in
add
lahf
imul
enter
mov
lea
xchg
iret
repz
out
jno
cmp
xchg
sbb
loope
add
jge
pusha
fimuls
mov
fisttpl
fldenv
sbb
add
test
ja
cmp
lds
cmp
add
or
cmp
and
cmc
lds
push
stos
xorl
jmp
out
test
mov
inc
fucomip
jns
inc
popa
inc
mov
jbe
jnp
loopne
mov
cmpl
into
mov
xchg
push
daa
stos
outsb
iret
sub
pop
int3
pop
stos
dec
lods
hlt
jns
divl
add
jnp
subl
inc
inc
ret
jp
popf
xor
fwait
icebp
xchg
and
cmp
ds
mov
stc
sti
mov
inc
cmp
push
or
mov
gs
dec
cltd
jae
std
int
rcr
push
and
lods
test
fldl
pusha
pushl
sub
cld
shll
out
dec
push
inc
cli
push
xlat
jge
ss
pop
js
insl
sbb
sbb
pop
mov
lcall
mov
test
pushf
push
lods
aaa
pop
sbb
mov
cmp
mov
shrl
and
jns
mov
ret
xlat
xchg
js
out
test
lret
cmc
stos
lods
inc
adc
xchg
movsb
jmp
lret
bound
test
mov
fnop
insb
xlat
jno
jg
push
jbe
inc
push
and
loop
scas
dec
mov
inc
sub
cs
xlat
push
rol
add
bound
cs
decl
into
hlt
xchg
sbb
sahf
pop
xchg
shlb
sbb
jnp
mov
mov
xchg
mov
sbb
dec
adc
add
ljmp
and
shll
imul
je
cmpb
mov
sub
xchg
xor
jle
jl
outsb
cmp
sahf
inc
add
or
movsl
rcr
push
add
cli
inc
pop
xlat
inc
mov
imulb
sbbl
in
cmp
sbb
pop
aam
pop
jb
dec
daa
mov
daa
push
jge
push
nop
cmpsb
mov
je
fcmovne
pop
and
daa
adc
je
xor
in
imul
mov
push
sub
jbe
jmp
push
mov
mov
sbb
push
scas
cmp
add
stc
popf
pop
ret
xorl
sub
xchg
add
sub
xor
popf
mov
sbb
lahf
into
cmp
cmp
outsb
push
popf
pop
insl
cli
jne
je
lcall
sub
icebp
adc
mov
nop
pop
clc
push
clc
cmp
subb
pop
inc
scas
out
ja
stos
mov
push
bound
mov
jl
sub
loopne
imul
outsb
jl
sub
cs
cmp
shl
cmp
sub
mov
push
mov
into
fucom
mov
aad
dec
cmc
dec
test
shlb
jl
mov
into
popf
stc
xchg
adc
or
mov
push
xchg
sbb
pop
lahf
enter
add
out
push
ret
mov
pop
notb
arpl
jl
dec
arpl
dec
add
into
sub
and
xor
xchg
stos
push
loope
scas
xchg
jg
pushl
in
mov
test
movsb
cmp
stos
jl
adc
ret
mulb
or
push
sahf
xor
addr16
lret
xchg
xor
and
pop
int3
pop
pop
xor
mov
pushf
outsl
mov
mov
sbbl
insl
pop
adc
and
mov
fldt
dec
inc
mov
fdivrl
loop
push
xor
fnstenv
test
cmp
idivl
cmp
ror
xchg
push
and
std
scas
cmc
sbb
in
jmp
cwtl
cmp
fs
testb
inc
je
nop
sbb
aas
xchg
cmp
jg
push
pop
sub
mov
xchg
das
xchg
xchg
pop
lea
xor
push
hlt
mov
jmp
and
push
stos
mov
movsl
adc
test
mov
cwtl
fcoml
clc
cmpsl
hlt
arpl
movsl
iret
pushf
pop
mov
and
leave
sbb
push
fisubrs
lea
repz
inc
imul
mov
ret
jp
imul
imul
test
insl
mov
and
adc
add
shll
and
fisttps
inc
sub
adcl
in
inc
filds
lea
sbb
sahf
daa
shll
iret
dec
and
adc
in
xor
dec
cltd
leave
pusha
outsl
sbb
pop
leave
nop
out
ret
inc
xchg
in
clc
pop
lahf
ss
fnstcw
cmp
scas
sub
cmp
divb
push
pop
jecxz
aas
adc
jne
inc
mov
pop
call
movsb
sbbb
cli
cmp
sub
data16
inc
cwtl
mov
xchg
ss
adc
xchg
pop
cmp
popa
orl
sbb
hlt
nop
ret
xor
insl
call
mov
scas
jb
repz
sub
mov
lods
sti
pushf
xor
dec
loopne
repnz
cmp
shll
fdivl
cmpsb
add
imul
adc
mov
sahf
xor
or
jge
sbb
testl
fcomps
lods
xor
sbb
inc
popa
push
xchg
aad
bnd
stos
mov
xor
insl
inc
pop
mov
jnp
leave
data16
cmp
clc
cmp
push
dec
rol
xor
ret
inc
inc
mov
loopne
addr16
incl
sub
lret
stos
orl
mov
insb
fists
inc
out
inc
fistpl
popf
fs
adc
inc
pop
subb
cmpsl
nop
test
movsl
mov
xlat
cmpb
mov
lahf
cs
mov
pop
cmp
das
arpl
push
cmc
inc
pusha
cli
pop
push
repnz
sub
adc
scas
out
sarb
ljmp
jmp
or
test
xchg
mov
insl
lods
inc
lahf
lret
test
mov
jl
jb
rcr
adc
nop
pop
mov
aas
mov
xor
inc
and
sub
and
inc
fsubrs
and
cltd
mulb
cli
push
sbb
and
mov
lcall
in
aas
and
xchg
and
popa
shll
push
mov
and
out
push
or
ljmp
cli
cmpsl
test
nop
sahf
push
js
jne
sbb
outsl
bound
das
mov
add
mov
cmpsl
cld
jno
add
out
test
test
sbb
mov
negl
mov
fwait
idiv
leave
js
out
push
or
les
mov
pushf
cmp
cmc
lahf
ss
dec
inc
sbb
je
gs
lods
stos
mov
in
pusha
cmpsl
mov
imul
jo
push
lret
sbb
in
pop
push
ss
adc
push
xorb
xor
jo
mov
mov
push
adc
je
enter
dec
in
loope
int
insl
insb
scas
ret
fidivs
add
sub
call
in
sbb
or
mov
das
pop
cmc
and
or
movsb
subl
dec
lds
fwait
cmpsl
lcall
icebp
xchg
dec
in
and
mov
dec
push
jbe
sbb
dec
push
addr16
imul
shrl
sbb
xchg
insl
lret
jecxz
sub
lret
xchg
out
test
push
mov
add
push
test
jmp
push
dec
jecxz
das
mov
fnstcw
fsub
mov
dec
lds
sub
or
roll
adc
test
negl
xchg
sub
jl
sub
call
cltd
push
test
mov
xchg
xlat
outsb
adcl
fbld
inc
das
lret
pop
outsb
std
push
leave
pusha
addb
mov
inc
or
xchg
shl
or
scas
jbe
imul
pop
iret
pushf
lods
jo
fwait
mov
jbe
imul
lret
xchg
stos
mov
and
inc
test
js
stos
inc
pop
sbb
sbb
and
jge
cmc
js
add
or
out
jmp
aaa
clc
mov
cmp
in
push
fisubs
les
mov
lahf
mov
iret
inc
push
bound
pop
jl,pt
sarl
cmp
scas
push
lret
add
mov
dec
in
mov
in
and
dec
mov
dec
mov
pop
push
or
ljmp
xchg
fsubl
inc
loopne
scas
fidivl
or
and
inc
add
xor
imul
cwtl
lock
scas
fs
mov
cmp
ja
in
adc
aad
mov
push
in
ficompl
push
out
jg
pusha
sbb
aas
out
jno
call
or
jp
jp
mov
sbb
dec
jge
fisttpll
pushf
fisttpll
shlb
mov
stos
push
inc
jno
clc
cmp
fnstenv
dec
out
inc
add
stos
jge
jne
icebp
adc
lods
f2xm1
roll
jbe
sub
jle
inc
aad
cmp
xchg
xor
lret
enter
push
sub
xchg
pop
cmc
enter
sub
adcl
or
pop
in
rol
xor
fildll
call
xor
iret
data16
adc
test
stos
sbb
mov
inc
add
pop
jg
and
aad
ret
jg
es
sbb
add
es
inc
lcall
int
outsl
int
arpl
cwtl
popa
sbb
xchg
cmp
sbb
ror
scas
pusha
sbb
gs
mov
clc
inc
sbb
out
es
scas
shrl
cmp
imul
push
bound
and
xor
dec
fdivl
imul
fwait
cs
int3
push
seto
repz
mov
xor
rcr
fnstcw
adc
mov
add
xchg
xchg
aaa
frstor
sbb
adc
mov
fcomps
mov
ret
jae
jno
adc
sbb
mov
jne
rolb
jne
mov
jo
xchg
xchg
cmpsb
notl
mov
cmp
leave
out
stc
inc
arpl
std
arpl
popf
sub
mov
mov
cmpsb
and
dec
rolb
push
pop
xchg
pop
rorb
adc
fs
inc
out
xor
sbb
sub
dec
sbb
stos
cmpsl
loope,pt
mov
dec
int3
dec
fdivl
mov
xchg
ljmp
jl
mov
xor
adcl
dec
stos
test
inc
in
je
adc
jmp
sbbb
and
mov
jge
mov
clc
or
loope
loop
orb
xchg
call
cmp
xchg
addl
mov
add
mov
push
andb
ljmp
jecxz
ret
repz
mov
push
addr16
jl
xchg
mov
dec
and
out
out
dec
loop,pt
xchg
mov
fnstcw
or
movsb
stos
sub
xlat
push
jge
aas
scas
js
and
pushf
jmp
mov
mov
das
cs
inc
or
iret
data16
mov
pusha
loopne
rep
rorb
rcll
jo
adc
sarb
jmp
or
daa
push
data16
lret
nop
xchg
add
js,pt
inc
das
push
inc
test
mov
fcmovne
pop
add
popf
mov
daa
in
shlb
inc
mov
push
and
sub
mov
jle
movsb
push
lcall
insb
push
mov
mov
movsl
pcmpeqb
mov
shrl
push
fdivs
aad
cmp
lret
movsl
inc
icebp
leave
cs
pop
iret
mov
fstps
jl
into
inc
int
shrl
adc
jmp
sbb
jo
scas
push
ja
add
jmp
cs
fdivs
pop
mov
in
pop
int3
xor
adc
inc
jns
jg
fnsave
je,pn
scas
ds
mov
cmp
jp
test
les
mov
adc
inc
incl
std
fcomip
xor
addr16
mov
push
push
or
insb
push
stos
js
xchg
dec
sbb
inc
into
push
shl
cmp
sub
das
sbb
ds
pusha
add
jge
nop
or
and
sbb
cld
outsb
xor
jge
insl
sub
enter
rclb
lock
sbb
xchg
ja
xchg
popa
and
sbb
and
push
jbe
inc
lahf
mov
test
push
mov
or
icebp
pop
out
add
int
test
inc
xchg
clc
std
cld
inc
inc
dec
je
daa
mov
loope
push
lods
mov
iret
xor
cmp
and
pop
push
add
int
test
test
xchg
andl
sbb
mov
sub
sbb
jae
xor
fidivs
loope
insl
and
repnz
addr16
mov
xchg
adc
mov
jge
dec
nop
call
xchg
inc
pop
adc
aaa
iret
inc
decl
cmp
pushl
cltd
popf
mov
cmc
jno
sbb
or
out
int3
lret
jge
mov
popa
jecxz
xchg
sub
mov
fsubrl
and
jns
xor
pusha
xor
mov
mov
xchg
add
adc
outsl
inc
lds
jo
aam
sbb
negl
push
lods
iret
loope
mov
adc
pop
sbb
jg
inc
movsl
fldt
dec
mov
loopne
xchg
sbb
mov
sub
int
and
std
sar
and
xchg
pop
adc
add
push
aad
lds
roll
cmp
ljmp
mov
andl
aam
add
xor
movsb
cli
fdivl
sbb
repnz
gs
cmc
mov
jne
outsb
adc
xor
cmc
cli
add
aam
rcrb
rolb
mov
out
pmullw
or
inc
push
pop
mov
stc
iret
mov
inc
icebp
rcrb
cwtl
pop
pop
sti
jle
daa
lcall
inc
in
cmp
loop
pop
add
daa
cmp
icebp
psrlq
rol
insb
lahf
jae
mov
jge
sub
mov
outsl
cmpsb
insl
sbb
or
aaa
inc
push
sub
push
dec
out
vdivsd
subb
paddsw
fucomip
idivb
out
cmpsl
sti
jnp
mov
xlat
add
cmpb
repnz
test
cmp
imul
mov
mov
loop
xchg
inc
mov
out
test
cli
dec
xchg
daa
push
or
push
nop
fdivr
xchg
inc
pop
repz
mov
test
js
test
sub
sbb
stc
and
mov
fcoml
gs
mov
adc
mov
outsb
cmp
inc
shl
out
push
scas
stc
jmp
xchg
mov
aaa
mov
test
scas
pop
jno
mov
fwait
pop
pop
insb
dec
lods
lret
in
sbb
jl
sbb
outsb
sub
push
imul
dec
in
mov
mov
or
or
in
mov
push
stos
jmp
test
pushf
pushf
cmp
loopne
mov
xchg
mov
cmpl
dec
jo
push
push
aad
sbb
xchg
dec
lock
movsb
mov
stc
mov
jno
inc
pop
cmpsb
mov
shr
ds
scas
aaa
into
loopne
js
js
int3
cwtl
inc
cmpsb
ret
bound
pop
cmc
xor
xchg
loope
cmpsl
leave
cmc
call
aad
cwtl
int
pop
ja
jge
cbtw
loope
cli
xlat
dec
mov
fcmovne
leave
sbb
in
push
mov
inc
dec
xor
xchg
adc
push
or
mov
push
inc
mov
add
std
mov
fwait
subb
sub
push
fldenv
dec
inc
inc
mov
lock
dec
sbb
sbb
add
lahf
sub
movsl
out
dec
jno
jp
sub
xor
and
sbb
dec
jp
jg
xchg
cwtl
out
mov
imul
data16
pop
ds
jae
push
fiadds
inc
add
sbb
fdivrl
cmp
out
inc
or
loope
jge
clc
cmp
dec
cmp
cmpsb
dec
or
mov
jo
jecxz
es
sti
mov
push
push
fnstsw
sti
popf
test
or
or
mov
mov
xchg
xor
iret
add
jnp
loope
inc
adc
mov
xor
paddsw
jge
loopne
pop
mov
scas
fidivs
in
orl
jo
mov
adc
mov
gs
int
and
inc
add
mov
push
xchg
fldl
inc
out
sbb
out
add
xchg
dec
sbb
mov
mov
rcrl
cli
out
cli
pop
mov
sub
nop
add
ja
ficoml
mov
pop
xchg
xor
push
push
stos
adc
add
mov
mov
in
test
inc
sub
and
lret
jae
data16
pop
jmp
sahf
ja
out
adc
sahf
lcall
decb
ret
insl
jge
test
add
nop
xchg
and
add
jae
pushf
or
test
dec
roll
fistps
xchg
mov
push
mov
adc
addr16
pop
or
mov
sbb
out
repnz
push
inc
icebp
mov
pop
push
js
push
je
push
cmp
push
pop
dec
out
xor
fsubs
mov
push
mov
rcrl
stos
sbb
rcl
mov
dec
or
or
sbb
xor
push
icebp
lahf
push
pop
cmp
jbe
pop
leave
je
psubsw
insb
rcr
pop
add
js
out
pusha
push
pushf
cli
mov
clc
stos
stos
jbe
pop
inc
jg
lret
inc
push
test
lock
cs
daa
mov
sub
imul
jmp
add
sbbl
outsb
daa
or
cmp
pop
outsl
nop
negl
mov
pop
xchg
movsl
outsb
or
mov
add
sub
sbb
push
in
lock
xchg
add
mov
idivl
stc
int3
pop
movsl
scas
rcl
fcmovnb
loope
sbb
enter
aaa
mov
andb
jmp
pushf
and
cli
or
ret
cld
lock
stos
mov
push
lock
and
in
mov
dec
cmp
xor
fs
dec
dec
sbb
repz
mov
loopne
movsb
mov
leave
subl
jg
repnz
adc
scas
jb
ljmp
adc
add
jno
fnsave
sbb
and
gs
repz
test
insl
icebp
incl
dec
mov
mov
les
scas
pop
insb
jne
insb
xorb
hlt
arpl
rcll
pop
dec
cmc
sub
clc
push
adc
fwait
data16
cmp
xchg
ss
lock
test
pop
daa
sbb
add
iret
cltd
dec
icebp
mov
ret
js
std
pop
sub
dec
lods
inc
enter
data16
xor
ds
jg
jns
push
push
fs
clc
cmp
test
pop
dec
jbe
jo
fmuls
inc
imul
xchg
mov
mov
and
cld
call
ja
push
out
int3
out
scas
sub
loope
or
mov
add
pop
xchg
mov
dec
pop
sub
lret
dec
xor
sbb
inc
inc
lods
lcall
mov
mov
rcll
and
fstpt
pop
cmpsb
pushf
inc
outsb
ljmp
mov
cltd
addr16
arpl
inc
and
or
mov
inc
popa
xchg
stc
mov
lea
pop
into
sbb
in
jae
sub
loopne
mov
rcrl
xor
imul
cli
adc
adcl
mov
push
call
dec
xor
movsl
scas
test
pop
sar
in
sbb
mov
sbb
mov
jmp
xor
cmpsb
faddp
dec
push
inc
inc
stos
jae
int3
xchg
es
xchg
out
add
fstps
mov
jl
adc
arpl
enter
mov
and
pop
adc
xchg
mov
pop
mov
xchg
jo
push
xchg
sub
mov
xor
ret
scas
cmp
call
xor
in
std
and
shll
fmuls
aaa
mov
pop
add
sbb
test
or
cmpl
dec
call
jno
cmpsl
push
inc
movsb
repnz
inc
aad
cltd
mov
sub
mov
rcll
ret
xchg
add
or
into
and
jb
ficoms
pop
cmpsl
pop
xchg
adc
sbb
push
sahf
lods
ja
mov
mov
xchg
mov
cmp
or
lahf
xor
sub
dec
and
xchg
insl
mov
or
pop
inc
hlt
cmpsl
xchg
stc
nop
daa
sub
push
mov
inc
cltd
out
adc
cmpsl
sarb
stos
mov
testb
fwait
and
xchg
pop
ficompl
pop
dec
ds
bound
lret
or
sub
mov
movsb
fwait
lods
push
push
popl
loop
and
leave
cmpsl
dec
push
pushf
enter
push
xor
pop
out
into
xchg
cmp
push
in
fmuls
dec
lock
or
aam
in
into
adc
not
aad
inc
mov
loop
pop
enter
imul
pop
sbbb
or
jo
mov
xor
outsl
lock
fcomps
dec
aad
rorl
mov
shll
jnp
out
out
add
and
movsb
xlat
inc
leave
rolb
jle
arpl
pop
push
mov
and
dec
add
dec
popf
add
sahf
push
sbb
and
ss
mov
mov
adc
inc
in
inc
out
std
pop
mov
jo
fsts
add
mov
or
in
popf
out
ret
inc
mov
cmp
xor
scas
clc
roll
adc
mov
test
or
pop
aam
jge
ret
mov
inc
push
sti
fninit
int
xchg
clc
adcb
add
sub
push
in
lods
and
sbb
xchg
pop
lock
int3
add
lret
bound
or
lds
inc
nop
daa
xor
cwtl
jnp
add
bound
dec
pop
add
jg
inc
pushf
dec
insb
inc
int3
loopne
and
xchg
push
lahf
sub
in
inc
cmc
dec
cwtl
lret
inc
int3
lahf
jmp
pushl
push
call
lock
mov
adc
cmp
popa
out
sub
insb
pop
psubsb
fwait
scas
dec
aam
xor
popa
enter
adc
lods
cmp
cli
pushf
sbb
lds
xchg
cwtl
xor
push
and
hlt
cmpsl
xor
mov
call
pop
mov
push
mov
mov
mov
cmp
dec
mov
in
adc
xor
and
jmp
lods
jno
add
xor
mov
xlat
int3
jg
mov
stc
popa
repnz
gs
jae
pop
insl
stos
js
mov
mov
imul
sbb
and
ret
in
sub
stos
jbe
popa
cld
dec
sbb
fiaddl
push
repnz
sbb
stos
cmp
jmp
popa
jmp
push
cmp
popf
and
test
cmc
cmp
cmp
mov
sbb
rcll
or
jo
pop
cmp
test
mov
xchg
add
clc
clc
jae
popl
mov
mov
dec
popf
ds
aad
or
jle
hlt
mov
jecxz
xchg
hlt
inc
in
movsb
ja
mov
push
xchg
mov
adc
pop
xchg
popa
cmp
mov
test
sbb
push
cs
jle
into
jne
and
mov
or
fs
mov
cmpsb
les
inc
mov
inc
dec
aad
imul
push
js
sub
mov
out
mov
adc
incl
xchg
xchg
pop
out
scas
sbb
jmp
xchg
or
call
loopne
add
aam
call
adc
adc
rcrb
fnsave
pop
imul
mov
jnp
ss
cmpsb
andb
out
mov
dec
or
lret
cmpsl
lds
adc
push
sub
mov
mov
sets
lods
pop
nop
xor
mov
jb
scas
and
inc
std
or
inc
int
mov
popa
add
jo
lock
insb
rol
movsb
mov
adc
mov
fisubrl
out
fsubrl
push
mov
and
mov
lds
pop
inc
xor
inc
or
hlt
mov
loope
inc
sti
inc
or
test
xor
cmp
in
sti
icebp
inc
lcall
iret
insl
shlb
mov
or
loope
sbb
stos
test
test
push
push
sub
xor
xor
and
aas
push
in
stos
mov
cwtl
lret
and
xchg
mov
scas
or
jns
dec
pop
add
testb
rcrb
in
das
sbb
xchg
or
lahf
inc
fnstsw
lret
stc
arpl
psubd
add
adc
pop
dec
cmp
mov
push
mov
push
jge
cmp
sbb
add
es
bound
sbb
ret
pop
pop
in
cltd
in
lret
test
cmp
fnstsw
test
xchg
mov
jno
scas
add
jns
and
dec
mov
stc
rcl
push
push
div
out
push
lea
repz
popf
and
push
lahf
cltd
lret
jae
in
testl
cmpsl
cmc
aad
mov
inc
inc
scas
cmp
shl
mov
fildll
sub
mov
insl
add
in
mov
fcoml
outsl
mov
push
fidivl
dec
mov
jb
xor
test
and
and
sbb
adcl
cmp
inc
xchg
cmp
sbb
test
inc
or
in
scas
or
xor
inc
incl
and
xchg
outsl
scas
mov
js
adc
mov
cmpsb
sti
jle
sbb
dec
dec
pushl
jnp
mov
icebp
jp
ret
mov
mov
cmp
xchg
mov
cmp
test
data16
and
jp
push
and
cmp
inc
aam
int
mov
push
sbb
arpl
negl
jge,pt
repz
sahf
andl
jno
inc
or
in
sbb
test
divb
xchg
xor
fdivp
cmp
ja
fldl
fdivrl
out
imul
sahf
mov
fdivrl
lds
push
add
cs
jmp
add
inc
cmpsl
push
mov
aad
scas
xchg
push
sub
fstl
xchg
mov
bound
std
sub
fwait
xor
and
lret
pop
pop
mov
sbb
daa
mov
mov
fimuls
cvtps2pd
cmp
xor
test
loop
std
into
xchg
lods
bound
xor
mov
test
push
or
xor
inc
lods
lock
sti
rorl
cltd
mov
fisubs
push
imul
sbb
inc
adc
rolb
pop
int3
lods
loop
fsubrp
inc
push
xchg
inc
sbb
fdivrl
xor
int3
fiadds
sub
push
cmp
out
bound
lret
pop
pop
xor
shrb
loopne
dec
shl
or
into
ss
jmp
addr16
out
inc
xchg
sarl
in
pop
dec
mov
pop
or
jp
jle
or
dec
push
or
pop
or
push
xchg
imul
lret
es
pop
sub
xor
jp
xchg
push
popf
pop
loop
mov
xor
popf
adc
jp
stos
mov
add
clc
jecxz
adc
inc
int3
pop
mov
mov
mov
cmp
in
std
cmp
pop
aas
push
in
mov
les
jb
dec
add
xchg
pop
aam
shll
sbb
jnp
sub
mov
je
sub
daa
inc
imull
stos
jo
inc
adc
xorb
push
rcll
out
stc
pop
scas
mov
fcoms
nop
mov
test
push
mov
jmp
cmp
xchg
mov
xchg
mov
push
jle
or
fisubs
mov
int
shlb
xor
pop
and
add
xorb
sub
sub
mov
pusha
jl
clc
jae
adc
out
push
xor
enter
sahf
lods
mov
test
jae
leave
in
iret
jo
mov
insl
mov
int
cmp
fbstp
mov
cmp
icebp
popf
fs
add
repnz
ret
stos
sub
test
push
dec
push
pop
push
cli
lret
pushf
jg
dec
call
int
out
dec
pop
adc
sub
mov
xchg
and
dec
aaa
mov
xlat
mov
cld
push
push
arpl
mov
sub
repnz
inc
iret
mov
dec
inc
out
mov
fimull
ss
push
jae
loopne
mov
or
sbb
insl
test
adc
rol
outsl
out
mov
call
faddl
mov
inc
push
hlt
push
mov
mov
outsl
jge
out
sbb
cmc
sub
mov
push
cmc
xchg
mov
fcmovne
mov
push
jl
push
es
mov
jb
ds
mov
stos
mov
pop
sbbb
mov
push
dec
and
nop
scas
xchg
sub
fwait
dec
pusha
add
mov
inc
mov
sbb
stos
sbb
mov
adc
pop
adc
mov
jbe
sbb
imul
mov
repz
fdivr
pop
xchg
jns
lahf
orb
loop
mov
mov
outsb
dec
sub
cmc
push
in
pop
xlat
push
bound
inc
lock
mov
dec
test
mov
cmc
sbb
inc
shll
push
ret
jb
test
adc
sahf
addl
or
jp
aaa
addr16
pop
fldenv
arpl
stc
push
cld
cmpsl
in
sbbl
hlt
pop
test
cltd
stos
or
mov
out
pop
dec
cli
push
adc
ds
xor
sub
movsl
mov
push
outsb
scas
or
push
cs
sbb
and
insl
ret
mov
ror
lahf
jle
xor
fwait
lock
insb
xchg
rcrb
jb
push
push
and
stc
cld
xlat
outsb
cs
mov
jg
aam
push
mov
xor
sub
dec
rcll
inc
imull
in
sub
jns
sbb
fcomps
test
sub
pop
xchg
cmp
inc
sub
jno
mov
arpl
jno
out
mov
mov
leave
inc
out
js
or
mov
add
jns
and
iret
mov
rcl
add
push
repz
mov
cmpsl
out
dec
jecxz
cmp
and
mov
lret
int
xor
in
jge
lret
mov
insb
jns
push
fwait
cmp
and
mov
mov
or
not
jbe
jecxz
test
mov
js
inc
dec
shr
push
xchg
xor
arpl
mov
jle
fcomps
xor
in
loopne
dec
fadds
sub
mov
jno
mov
movsb
ret
jle
fsub
cs
adc
test
cltd
cmp
loopne
add
push
push
inc
out
js
daa
and
insb
ja
mov
and
mov
subb
aad
mov
cld
pop
add
inc
pop
aas
mov
xchg
inc
jns
inc
jecxz
ret
cmp
mov
jnp
sub
and
dec
mov
adc
jg
shrl
loope
cmp
jg
mov
dec
fnstenv
xlat
out
xor
inc
cmp
sahf
popa
or
inc
daa
dec
and
fdivr
jmp
call
inc
pop
xor
push
mov
shrl
js
and
add
add
mov
jp
cli
jne
adc
jo
jne
inc
stos
cmp
enter
fiadds
and
ja
mov
shr
xchg
fwait
xor
fists
xlat
cltd
or
cmp
rep
push
hlt
mov
and
lds
add
or
xor
xor
push
inc
mov
or
push
test
fbstp
push
jecxz
insb
mov
xchg
fistpll
cld
orl
xchg
sbb
xchg
or
testb
repz
jnp
jge
dec
dec
jmp
das
das
mov
int3
jg
data16
jns
and
in
pop
dec
in
inc
cmc
add
aas
out
das
xor
sti
dec
inc
popf
lods
jne
mov
pop
inc
push
adc
icebp
insb
adc
add
aaa
mov
mov
stos
mov
adc
push
test
pop
lods
jmp
ljmp
push
jecxz
in
fdivr
mov
test
enter
out
fcmovu
out
push
jp
sub
jg
lods
popa
cmp
nop
dec
pop
fbld
cs
cmp
jnp
mov
add
add
jmp
pop
xchg
enter
cmpb
adc
or
xchg
cmp
pop
fstl
jne
pop
lret
fs
inc
sbb
mov
call
lds
jg
insb
mov
add
xchg
cmp
mov
push
pop
sub
mov
cmc
mov
sbb
and
sarb
inc
popa
notl
loope
xlat
push
rol
jnp
jnp
and
or
aam
fwait
fs
ret
mov
add
or
or
aad
daa
ljmp
push
test
call
incl
test
in
sub
add
adc
xor
sbb
mov
cmp
adc
lret
out
int3
ss
sub
outsb
aaa
test
jno
add
daa
inc
mov
mov
loope
jae
out
mov
test
jmp
xchg
sbb
outsb
in
dec
mov
cmp
rcl
xchg
sbb
or
mov
fs
mov
pop
popa
xor
mov
scas
inc
cmp
pop
out
jge
out
mov
popf
out
ret
test
ret
out
xchg
pop
lods
in
test
dec
mov
ja
xor
lods
jge
sbb
test
jmp
cmpsl
stc
dec
mov
clc
je
or
jg
js
leave
mov
fdivr
push
or
pop
xchg
inc
rcl
enter
jae
mov
adc
push
in
jl
movsb
decl
cmp
mov
xchg
cmc
lcall
sbb
movsl
or
lahf
hlt
inc
popa
imul
and
push
fwait
push
mov
lods
shr
sub
fldcw
mov
decl
add
fistps
cmpsb
lock
loopne
lea
shrb
xchg
fxch
push
pop
mov
lock
sti
and
bnd
mov
mov
pop
pop
sbb
adc
xchg
or
stc
daa
add
xor
inc
lret
xchg
clc
or
xor
inc
gs
test
xor
mov
or
cmp
mov
subl
add
jp
test
sbb
test
cmp
insb
and
pop
out
test
and
jb
fcmovne
loope
push
push
push
xchg
mov
xchg
fwait
xchg
cmp
jno
jnp
mov
push
cmpsb
std
outsl
push
das
enter
imul
ror
ret
pop
lcall
mov
stc
mov
ret
or
sub
xchg
pop
mov
pop
mov
aaa
xchg
inc
aam
jb
jno
aas
add
daa
leave
mov
jb
flds
and
std
shrb
fnstenv
in
push
mov
mulb
stc
xor
std
sub
xchg
stos
stc
fdivl
sti
jbe
imul
mov
pop
or
pusha
pop
push
jmp
sbb
stos
cli
fwait
scas
sbb
fisubs
mov
jae
mov
lods
pop
lret
lods
mov
stos
popa
test
pop
sub
cld
lods
inc
cs
xchg
sub
fiadds
in
in
mov
xchg
jecxz
ficoms
and
inc
mov
mov
fdivl
mov
fidivrs
adc
mov
add
xchg
js
jecxz
outsl
jne
add
nop
mov
es
cwtl
out
inc
lds
xor
and
test
mov
push
jmp
or
jmp
mov
lock
jno
jo
push
adc
push
nop
daa
les
add
pop
fwait
push
xchg
cmp
in
mov
mov
pop
fisubrl
mov
push
jne
pusha
xor
ss
add
es
cwtl
fs
stos
dec
outsl
sub
mov
or
ss
inc
testl
push
and
and
rclb
sbb
mov
outsl
xchg
dec
dec
stos
pop
jecxz
ds
daa
mov
andb
fptan
adc
lahf
mov
popf
fucomi
sarb
and
ja
sysenter
stos
cmpsl
jecxz
in
jle
mov
add
dec
leave
test
nop
mov
push
adc
in
lea
inc
and
xchg
call
mov
arpl
aas
mov
arpl
into
fldt
mov
jmp
imul
or
insl
mov
cwtl
pop
adc
jle
xchg
mov
dec
es
ret
cmp
sbb
sbb
pop
leave
pusha
dec
test
es
dec
out
enter
insl
add
cmpsl
mov
lea
mov
xchg
dec
jle
loope
pop
xchg
jnp
rorb
fs
int
pop
lds
sahf
cmc
push
mov
ficompl
ja
rol
iret
add
test
shlb
push
std
cltd
sbb
in
push
dec
js
cwtl
pusha
aas
xchg
movsl
sub
inc
sub
sub
aas
dec
insl
loop
lahf
inc
mov
lds
mov
cwtl
jle
movsl
cmp
je
iret
in
mov
lret
fcmovu
out
mov
in
mov
cltd
fcoms
idivb
adc
sub
push
out
out
add
call
lret
in
sbbl
stos
int3
sub
push
adc
push
mov
rcrl
inc
push
arpl
xor
push
inc
cli
pop
xchg
pop
scas
add
icebp
jle
fadds
or
push
jge
stos
mov
fs
rorb
mov
mov
pop
cs
je
push
shrl
or
repnz
lahf
lock
jmp
xchg
add
mov
add
mov
loopne
adc
cmp
lcall
or
mov
push
adc
pop
ret
test
mov
fldt
fnstcw
push
lods
adc
in
mov
int
sbb
pop
imul
mov
lds
shlb
cmp
mov
push
ljmp
pop
xor
sbb
push
js
cmp
rol
in
inc
mov
mov
pop
mov
jge
jbe
sub
into
inc
in
mov
push
sub
popf
mov
aad
sbb
pushf
pop
lds
scas
pop
cli
pop
sub
cwtl
mov
addr16
scas
call
xor
ret
adc
lcall
ja
cltd
pop
loop
mov
cli
sub
imul
into
imul
pusha
vshufps
adc
popf
push
insl
inc
cmc
pop
bound
xchg
push
mov
jb
sarl
adc
adcl
enter
ss
loopne
push
jge
sub
lea
cmpsl
sbb
adc
in
or
fnstcw
rcrb
ja
nop
shrl
dec
mov
shlb
sub
lahf
aas
push
xchg
ret
pop
clc
popa
jg
sti
shlb
rcl
pop
gs
scas
and
shrb
lods
outsb
xchg
pusha
jl
dec
lods
jbe
inc
inc
shr
adc
add
scas
sub
sahf
into
cmp
adc
fisttps
inc
push
inc
rcll
fmull
cmc
mov
inc
stos
hlt
pavgb
dec
pop
jg
shr
sti
shrb
xor
or
mov
lea
cmp
and
push
add
xchg
add
cmc
notb
adc
add
in
push
std
lea
xor
icebp
loopne
fs
lods
jp
imul
pop
ss
pop
sbb
leave
or
adc
cmp
mov
movsl
enter
lds
cli
jle
jbe
adc
or
sbb
mov
lods
outsb
cmp
mov
addr16
mov
mov
or
xor
outsb
repnz
gs
cmp
cmc
mov
pop
sbb
nop
and
dec
mov
fwait
pop
push
sub
int
ja
cli
dec
or
cli
push
imul
shlb
loope
arpl
fwait
jp
jnp
cmp
ja
jnp
popf
scas
add
test
pop
je
pop
sub
ss
jne
push
test
dec
neg
repz
sbbb
cmpsb
jle
les
pop
add
fucomi
jg
addr16
mov
jmp
dec
xchg
push
and
dec
repz
daa
aad
lret
outsb
dec
mov
adc
adc
fisttps
xor
xlat
pop
jbe
jo
repz
add
cs
movsb
xchg
sahf
mov
repnz
jp
or
aas
fildll
aam
add
xor
pop
test
mov
out
les
pop
xchg
sub
rcrl
cmc
or
sbb
lahf
leave
and
xor
lcall
jmp
ds
jb
push
dec
iret
sbb
add
rcl
in
or
movsl
xchg
cli
mov
dec
aam
add
cmp
rol
mov
mov
adc
popa
add
ret
xchg
pop
repnz
sub
pop
shll
nop
or
out
mov
ljmp
mov
ljmp
bnd
movsl
xor
pop
out
lods
cmpl
or
lcall
and
cld
das
fsubrl
mov
and
frstpm(287
xchg
adc
outsb
sbb
jnp
mov
ror
lods
push
mov
or
jge
lods
scas
aas
pop
movsl
or
fisubrl
push
test
xor
les
sbbb
mov
daa
sub
adc
xchg
inc
mov
mov
jo
int3
outsb
outsb
pop
ds
push
stos
jne
cmp
call
push
push
add
std
or
inc
and
push
inc
mov
jae
shl
jne
pop
pop
fwait
popa
mov
dec
mov
bswap
fadds
stos
and
sub
dec
stos
xchg
sub
jmp
imul
leave
mov
scas
mov
dec
fsubrs
lret
rcl
sub
int3
add
cmpb
imul
sti
mov
mov
out
jp
mov
mov
mov
out
pop
les
mov
push
jmp
mov
and
clc
sbb
sti
cmpsb
pop
lock
pop
adc
mov
mov
loopne
jle
jae
inc
clc
lcall
jne
cmc
pushf
imul
sbb
and
shrb
push
int
fst
fstpl
xlat
ds
dec
jge
aam
xchg
nop
jbe
sbb
faddl
inc
lock
das
cmp
or
shrb
pusha
scas
sarl
rcll
mov
leave
xor
aas
xchg
mov
icebp
cmp
cmc
adc
jns
adc
jns
outsb
mov
imul
js
cmp
pop
mov
inc
lcall
ror
push
ljmp
lret
fldenv
push
cmp
mov
push
sahf
repnz
xchg
xor
adc
pop
outsl
imul
fs
shrl
add
daa
stc
or
add
push
pop
cmpsl
js
popf
cmc
sbb
nop
sub
jbe
popf
xor
xor
pusha
sbb
push
and
arpl
bound
mov
sbb
and
je
add
outsb
cmp
gs
fadd
pop
push
jae
xchg
and
test
lret
test
lret
cld
push
sbb
popf
or
out
or
cmp
fldl
adc
test
jmp
or
cmp
outsb
mov
nop
xchg
or
imul
jp
mov
add
lcall
and
sub
enter
mov
push
and
pop
jnp
jne
pop
jne
jb
data16
cmp
sub
inc
sbb
insl
mov
xchg
call
sbb
mov
je
dec
dec
cmp
shll
icebp
jbe
bound
adc
cld
mov
cmp
mov
pop
ret
jae
jecxz
daa
dec
clc
not
movsb
push
lds
sbb
punpckhdq
mov
nop
jnp
out
sbb
xchg
cli
or
mov
jecxz
insl
xchg
mov
mov
negl
sahf
add
add
adc
push
sahf
faddl
push
ja
fcompl
je
pop
jbe
mov
outsl
cmpsl
lret
xchg
add
fwait
popf
ja
scas
call
push
mov
arpl
xor
in
test
sar
fldl
cmpsl
xlat
mov
push
fwait
mov
gs
sahf
stos
mov
xor
repz
push
xchg
inc
push
out
or
cmpsl
sbbl
scas
sbb
mov
icebp
inc
loopne
popa
dec
fistpll
adc
push
pop
cmp
aam
arpl
jmp
iret
sbb
or
mov
dec
aam
dec
shrb
loope
add
scas
mov
or
or
in
add
addr16
xlat
adc
dec
push
jp
test
dec
lods
sub
loop
imul
mov
shrb
dec
push
loopne
fcmovbe
andl
jb
mov
cwtl
adcl
sbb
mov
sbbl
add
mov
xor
sahf
xchg
ss
fnstsw
mov
popf
stos
push
sbb
lds
aaa
fs
adc
xlat
mov
ljmp
sbb
xor
xor
jp
mulps
lods
mov
sbb
jg
movsb
std
sub
dec
jl
mov
outsl
es
dec
push
pop
sbb
or
inc
and
sbb
push
dec
jp
xor
fldt
mov
fldl
push
mov
push
int
mov
jo
pop
xor
jmp
testb
int
jp
ljmp
cmc
adc
out
iret
dec
mov
mov
aas
jnp,pt
pop
fwait
pop
push
iret
dec
fdivl
mov
sti
sbb
mov
cmp
scas
add
movsb
incb
xchg
mov
call
mov
icebp
movsl
cs
popf
pusha
jns
loop
mov
lret
and
jae
jg
cltd
popa
xor
repz
mov
cmp
cli
xchg
lea
dec
iret
cli
clc
addr16
enter
andb
mov
fidivrs
dec
dec
pop
jb
sbb
insb
push
pusha
ljmp
mov
aad
outsb
add
pop
psllw
aaa
mov
cs
sbb
push
cwtl
xlat
adc
mov
pop
mov
aad
adcl
dec
push
lret
jmp
push
or
inc
test
bound
out
mov
inc
pop
bound
and
cmp
icebp
xchg
les
mov
and
pop
push
mov
int
cmp
clc
jge
jbe
add
and
or
lea
test
inc
mov
inc
lods
cmp
add
inc
push
pop
ret
xor
xor
data16
push
mov
xor
add
sbb
ds
cmp
xchg
xor
sbb
mov
mov
sbb
and
inc
test
inc
push
int
ds
cmc
mov
popa
push
add
ret
push
mov
data16
mov
cmpsl
sub
popa
repz
icebp
jns
xor
das
rcrb
add
or
inc
es
push
sbb
mov
int
jne
push
pop
jne
fsubrp
cld
add
cmp
data16
cmp
lods
and
and
inc
test
pop
cmp
mov
std
push
mov
lods
pop
out
cmp
shlb
cltd
lret
jne
xchg
clc
stos
call
mov
aad
lea
sbb
into
pop
dec
icebp
push
outsl
mov
push
jp
dec
pop
in
adc
inc
jl
and
mov
pop
xor
mov
ret
stc
or
rorl
clc
mov
add
in
inc
push
mov
push
sub
xchg
aaa
fldcw
stc
dec
les
jg
hlt
and
inc
jnp
ja
leave
mov
and
loope
and
xor
int
popa
fs
out
xchg
sarb
mov
cwtl
in
inc
cld
mov
fnsave
scas
push
xchg
fildll
lods
call
push
sbb
gs
add
imul
test
cmp
mov
push
xchg
push
test
cmp
jns
mov
bound
mov
xchg
inc
mov
push
enter
movl
jl
lret
xchg
xchg
std
cwtl
add
sub
in
sub
test
jl
cwtl
das
into
dec
and
push
dec
mov
repz
or
pop
lock
ja
sub
pop
ja
or
push
jne
sub
loop
rcrl
out
sub
fsts
mov
cmp
popa
mov
sahf
add
xor
cmp
xor
nop
sbb
fs
scas
pop
pop
mov
nop
es
lods
mov
into
cs
jae
cmp
cmp
enter
int3
rorb
push
inc
aad
popa
xor
out
push
mov
inc
fmuls
sbb
mov
jno
sarb
cmp
xchg
sub
add
std
add
das
test
pop
divb
aam
lock
jae
jno
lahf
mov
imul
pop
push
pop
cmp
iret
push
loop
lahf
into
xor
cmpsl
lock
lds
cltd
sbb
adc
outsb
dec
sbb
bound
aaa
inc
ror
push
add
xchg
iret
lds
jnp
xor
lods
mov
pop
adc
adc
arpl
divl
pusha
xchg
mov
add
ret
push
outsb
popf
xchg
pop
sahf
mov
or
int
pop
push
jmp
mov
jmp
jb
gs
stc
in
push
popf
int
andb
xlat
jle
outsb
arpl
or
ds
pop
jecxz
push
push
insb
add
iret
stc
xchg
sar
and
cmpsb
jnp,pt
mov
incb
ss
jo
adc
sub
pop
sti
xchg
xchg
das
mov
stos
push
negb
sahf
pop
lock
mov
xor
mov
xlat
xor
jo
sbb
adc
jmp
mov
aas
loop
negl
scas
pushf
dec
dec
dec
fdivrs
or
shrl
scas
movsl
jg
push
pop
adc
cmp
pop
dec
push
test
fidivl
adc
sti
ljmp
mov
imull
in
xor
add
mov
add
cmpb
inc
ja
cmp
mov
add
lea
dec
mov
xchg
dec
idivb
adc
ss
arpl
gs
inc
popf
inc
cmpsb
xchg
add
fisubs
loope
insl
push
sub
mov
mov
inc
insb
addr16
dec
pextrw
ss
movsl
cmp
inc
gs
hlt
mov
test
sub
xchg
cltd
outsb
sbb
push
mov
in
mov
jbe
sub
sahf
in
stos
xchg
mov
push
insl
sbb
sub
xor
daa
mov
lods
mov
imul
cmp
adc
int3
xchg
xor
xchg
cmc
mov
aad
adc
insl
aad
adc
or
xchg
leave
inc
gs
ljmp
sub
test
lcall
ss
jno
shlb
out
out
mov
jb
cmp
jns
loop
or
dec
scas
cli
lret
fs
push
sarl
inc
push
es
jbe
mov
leave
cmp
out
pop
push
stos
add
push
mov
and
popl
out
cmc
lret
push
xor
push
push
fxch
es
jmp
lods
jmp
add
pusha
jl
jmp
inc
inc
insl
cld
cmp
nop
sbb
add
xlat
add
dec
aaa
and
mov
xor
iret
jle
mov
outsl
sub
add
cmp
and
dec
popa
into
mov
insl
int3
addr16
jle
es
xchg
sbb
lcall
shl
or
in
stc
rcll
mov
and
jecxz
scas
fdivl
add
int
roll
xchg
test
pop
jbe
inc
hlt
cwtl
jns
hlt
imul
pop
mulb
jecxz
dec
mov
push
mov
push
out
cmp
popa
aaa
or
cmp
mov
inc
out
or
imul
notb
push
jo
in
movsb
fildl
adc
jg
test
fldl2t
sub
and
mov
hlt
xor
inc
loop
decb
push
jmp
shr
cmp
adc
or
lods
rcr
push
pop
gs
pop
lds
decb
mov
xchg
fildl
mov
aam
mov
jecxz
in
xor
leave
inc
movsb
mov
xchg
jbe
shr
jnp
mov
orl
hlt
in
iret
ss
shlb
push
mov
adcl
mov
add
add
dec
or
xchg
sub
nop
dec
out
fsubl
loop
pop
out
cltd
testl
dec
subb
shll
adc
scas
xor
cmp
sti
test
test
dec
arpl
dec
lahf
dec
scas
enter
push
dec
idivb
xor
es
inc
xlat
lcall
lcall
loopne
fnstenv
fimuls
je
sub
idiv
pop
xor
daa
jnp
pop
dec
push
sarb
test
ljmp
test
xchg
or
int3
mov
mov
fimuls
daa
and
push
xorb
in
xchg
dec
xor
xchg
push
out
in
andb
lods
outsl
jp
loop
mov
jns
inc
sub
ret
dec
cld
lret
rcrb
into
fadds
cmpsb
stc
cmpsl
ds
jae
test
clc
sbb
pop
adc
add
push
xchg
dec
sbb
and
sbb
dec
aam
repz
jae
xchg
js
push
imul
push
ret
mov
out
int3
loopne
retw
pop
mov
inc
xchg
fs
or
xchg
outsb
sub
test
and
sub
data16
scas
cmp
sub
scas
addb
sbb
jb
gs
pop
in
inc
pop
into
sarb
adc
sbb
mov
arpl
cltd
add
jbe
shrl
add
aaa
shrl
jle
sti
lret
mov
jb
mov
dec
and
lret
test
fcompl
xor
rorb
movsl
leave
sbb
mov
fcoms
pop
ret
inc
popf
outsl
out
jmp
xor
imull
lea
add
mov
pop
shll
dec
loop
les
or
je
push
pushf
adc
xor
inc
inc
or
xchg
lods
mov
cli
mov
adc
push
mov
icebp
mov
enter
xorl
adc
aas
or
jp
pop
jl
push
ret
stos
aad
push
cmp
in
and
dec
push
push
hlt
outsb
daa
movsl
icebp
or
xor
push
inc
fnstenv
mov
push
push
ficompl
or
cmp
in
sbb
jne
test
cmpsl
subl
cli
mov
bound
popf
inc
outsb
xor
cld
inc
test
cmp
fimull
lahf
fisttpl
xchg
cmc
les
lods
mov
scas
jno
std
roll
data16
pop
xchg
clc
jmp
int
mov
in
scas
leave
xchg
popf
or
pop
in
ja
pop
cs
icebp
cwtl
stos
cmp
negl
sub
les
cmc
dec
das
out
jb
mov
stos
push
xor
in
inc
inc
xchg
lea
scas
add
mov
jmp
mov
sbb
out
scas
mov
sbb
lahf
push
dec
cmp
dec
pop
push
mov
and
jge
mov
and
push
cmp
lahf
pop
mov
es
dec
out
clc
es
inc
cmpsb
int3
mov
cltd
rorb
jbe
mov
mov
add
xchg
lahf
dec
popf
inc
insl
xor
push
das
call
mov
adc
jns,pt
shrl
jmp
mov
jno
or
mov
movl
in
cld
rorb
and
jno
or
outsl
xchg
or
orb
nop
sbb
cld
pop
ljmp
das
test
ficomps
cld
scas
add
mov
xor
jns
ljmp
movsb
test
in
mov
bound
cltd
out
out
fs
int3
mov
xchg
xchg
fisubl
inc
sbb
xor
or
cmpsl
cld
inc
mov
sbbl
sar
pop
cmpsb
cmp
mov
xchg
leave
leave
inc
jno
in
fnstsw
jl
xor
movsl
mov
stos
je
sub
aas
xor
lds
movsl
xor
xchg
lods
inc
cwtl
mov
pop
push
hlt
mov
movsb
adc
lds
out
mov
test
lods
sub
adc
imul
add
sarb
lods
adc
mov
mov
xlat
sahf
lea
cltd
or
cld
inc
pop
and
divb
dec
dec
daa
imul
into
mov
xchg
insb
adc
mov
cmp
ljmp
mov
mov
mov
outsb
cmp
ss
push
jge
pop
out
lea
mov
push
push
cmpsb
dec
inc
xchg
outsb
call
jp
mov
jmp
sbb
or
andb
movsb
fiadds
mov
jnp
pop
test
and
fsubl
xchg
sahf
ss
push
cltd
or
mov
pop
xor
and
out
pop
and
test
xor
sbb
push
lds
mov
sbb
outsb
stc
insl
mov
out
je
stc
adc
mov
outsb
fwait
movsl
inc
addr16
jnp
inc
lods
in
sbb
xchg
push
cmpsb
jmp
mov
addr16
stos
mov
data16
cwtl
int3
push
xchg
int3
lock
and
xchg
ja
add
outsl
repz
outsl
add
inc
pop
in
and
arpl
fs
xchg
adc
fbstp
in
add
and
xchg
bnd
aas
lea
xor
pop
rorb
test
lods
mov
loope
mov
sahf
dec
dec
xchg
inc
pop
insb
cmp
int
ss
jl
cmp
insl
sbb
cmp
xor
lret
pop
stos
lret
movsl
and
in
xor
pop
icebp
movsl
xor
fdivrs
dec
push
jo
xchg
enter
mov
jl
mov
adc
mov
cmp
mov
das
mov
jle
jae
test
int
sub
sbbb
pop
xor
pop
lahf
sbb
fwait
stc
ss
jge
scas
in
inc
lret
inc
ret
loope
dec
dec
sub
cmpsb
inc
fisubrs
outsb
in
mov
js
fiaddl
jl
dec
xor
shrl
loop
loop
imul
or
pop
sbb
sub
jno
pop
out
fs
sub
movsb
notb
push
outsl
inc
cmp
scas
cli
cmp
pop
jb
sbb
pop
xor
cmp
cmp
in
inc
insl
dec
cmpsl
arpl
aas
stc
dec
or
loopne
notl
fidivs
popf
mov
or
push
inc
gs
jne
xchg
mov
lea
pusha
jg
ror
je
fdivrs
fldl
lret
push
ljmp
jg
mov
sbb
mov
cmpsl
ret
fcmovne
adc
jnp
clc
stc
adc
cld
jg
xor
sub
or
jle
pop
mov
pusha
jl
cltd
pop
jae
mov
xor
aas
adc
xchg
out
jne
push
and
shl
pop
add
imul
sbbb
sub
add
loop
std
adc
popl
movsbl
xchg
and
adc
cs
sub
fbstp
xchg
clc
push
xor
out
cmp
aaa
out
cld
stc
fisttps
sub
es
repz
and
push
loope
dec
idiv
push
cmp
iret
cwtl
shll
mov
fnstenv
mov
jns
sbb
xchg
lcall
pushf
orl
lds
imul
lret
aad
jne
lret
test
dec
or
jo
push
fcoml
lret
mov
cld
aas
cmpsl
add
adc
adc
mov
pop
sub
jne
cmp
pop
lahf
pop
push
cmp
jmp
fwait
scas
jns
bound
loop
repnz
aad
js
mov
aam
test
repz
cmpsl
adc
ret
lds
imul
and
cld
jo
stos
sbb
lret
and
bound
ret
xchg
add
push
into
scas
ljmp
inc
sbbb
push
addr16
std
aam
xchg
sub
fsubs
jb
jmp
andb
call
and
mov
xor
xchg
xchg
dec
pop
or
sbb
call
andl
cmc
fiaddl
or
mov
adc
add
repnz
out
xorl
inc
fdivl
ret
stos
sahf
stc
pop
jo
std
add
sbb
adc
mov
test
push
pop
push
sbb
maxps
cmp
pop
mov
dec
cwtl
xchg
out
dec
outsl
xchg
roll
stos
or
aad
cmp
sahf
and
mov
fisubs
loopne
dec
mov
xlat
das
inc
aaa
jo
cmp
push
lahf
outsb
rorl
popl
das
test
xchg
cltd
push
test
cmp
or
dec
cwtl
scas
inc
lret
mov
int
mov
stos
jmp
nop
mov
dec
and
push
pusha
push
xchg
xchg
and
dec
mov
sub
mov
pop
cmp
pop
xor
xor
in
movsb
mov
xchg
xor
fldt
mov
aad
and
push
in
pop
movsb
sub
cmpsb
in
lods
and
mov
adc
cmpsb
mov
testb
insb
xchg
jge
sbb
adc
and
adc
push
clc
lods
ljmp
icebp
adc
test
or
xor
jne
sahf
stos
pushf
push
icebp
adc
pop
outsb
das
cmc
add
mov
push
mov
mov
jl
or
movsb
rcrl
repnz
or
mov
mov
lcall
adc
xchg
sbb
divb
jle
add
ret
lret
push
or
push
xor
shll
es
in
mov
xor
test
repz
imul
call
xchg
cmp
xchg
scas
scas
bound
mov
aam
and
jle
sti
sub
push
mov
or
adc
push
jns
xorb
in
lds
popf
int3
addr16
inc
sub
adc
rcrb
fcmovnb
cltd
bound
sub
or
dec
xor
or
fcmovbe
mov
movsl
xor
inc
int3
das
sbb
xchg
int
xchg
repnz
xchg
dec
or
imul
jbe
sbb
jle
cmpsb
lahf
ja
leave
mov
shlb
fisttpl
movsl
lds
inc
pop
mov
jmp
imul
jno
pop
data16
js
lds
das
inc
outsl
out
lds
insl
jns
fbld
insl
adc
fmull
push
arpl
xorl
cwtl
stos
dec
push
enter
jae
xchg
cmp
cli
mov
sub
jne
arpl
mov
aad
insb
inc
mov
movmskps
inc
pushf
jb
mov
add
mov
mov
dec
outsl
adc
stos
outsl
notl
ljmp
mov
jle
pop
and
inc
fs
outsl
sahf
pop
adc
orb
test
std
or
fldt
add
pop
ds
enter
pusha
out
push
add
in
sub
lahf
xor
je
imul
addr16
xchg
mov
ja
in
jns
xlat
mov
int
lea
leave
mov
xlat
outsb
push
and
stc
fidivrs
adc
xor
notl
sahf
es
jle
lock
idivb
sub
jo
cld
xchg
bound
xchg
cs
loopne
dec
adc
rol
int3
jae
xchg
in
push
mov
xchg
mov
push
jae
andb
sbb
lea
cmp
mov
cmpsl
lds
jnp
leave
add
sbb
pop
sbb
test
incb
pop
xlat
sub
outsb
lock
add
or
inc
pop
add
adc
adc
popf
testb
cmp
addr16
adc
pop
dec
lcall
and
sarb
xchg
pop
adc
jge
xlat
mov
inc
sbb
fcomps
pop
jge
lcall
in
jo
inc
xor
js
popa
aad
adc
xchg
cmp
aad
ja
cmp
ss
inc
cwtl
out
divl
sub
cmp
das
aas
dec
loopne
les
mov
addr16
mov
jmp
lahf
lahf
cwtl
xchg
daa
aam
xchg
cmp
jbe
add
adc
leave
and
sbb
out
mov
push
lods
mov
mov
test
iret
nop
idivb
int3
loopne
mov
mov
aas
cmpsb
xor
push
fidivl
ffree
aas
push
insb
inc
into
xor
lods
fadds
shlb
test
ret
bound
test
xchg
les
sub
repnz
out
push
xor
xor
cwtl
adcb
mov
arpl
scas
cmc
sub
out
stos
sbb
dec
pushl
in
sub
std
mov
movsb
dec
out
decl
fiadds
lcall
jbe
ret
pop
insb
inc
adc
add
mov
shrl
shl
mov
lds
xor
fcomps
fucom
xor
xor
and
ljmp
sbb
lret
lret
or
aaa
jne
mov
in
jo
pop
sub
and
lret
sbb
aaa
and
rol
adc
mov
aas
shll
movsl
add
xchg
mov
sbb
negb
or
xchg
mov
nop
lahf
jge
into
push
fwait
mov
mov
fidivrl
test
add
mov
cmp
into
jg
pusha
loopne
mov
and
rcrl
daa
addr16
fstps
movsl
imul
cs
in
xchg
cli
pusha
add
cmp
jg
mov
int3
add
das
popf
cmpsl
cmc
push
fnstcw
mov
add
stos
inc
lret
inc
popa
loopne
pop
adc
push
xlat
jle
out
hlt
push
or
push
cmp
lret
lret
movsl
gs
inc
out
frstor
add
addr16
xlat
push
dec
push
cltd
dec
cli
xchg
and
aaa
adc
ss
xchg
rorb
lahf
imulb
inc
and
mov
mov
scas
push
sub
xchg
js
adc
push
or
cmpsl
movsb
mov
mov
mov
sbb
push
loope
test
adc
dec
in
xor
xlat
xchg
xor
xor
jo
mov
dec
xchg
push
fdiv
dec
ja
out
insb
xor
sbb
hlt
mov
cmp
iret
popf
xchg
lock
lods
xchg
insl
aam
into
push
sub
mov
mov
ret
scas
pop
add
loopne,pt
jb
dec
pop
cmp
lcall
gs
cmp
xchg
insb
jl
sbb
or
mov
xchg
outsb
imul
into
or
inc
cmp
cmp
mov
mov
dec
sarl
loope
add
mov
cmp
shrb
mov
out
or
daa
xlat
movsb
lock
push
adc
jno
fmul
inc
push
js
and
cmpb
cmp
lahf
in
mov
push
ret
pop
xlat
ret
xchg
mov
fwait
nop
in
jnp
xor
and
pop
loopne
pusha
es
mov
xor
insb
mov
in
cs
imul
out
aaa
inc
repz
int
scas
jae
pop
pop
loope
clc
and
mov
cmpl
lret
and
pop
and
dec
mov
lods
jp
or
mov
jbe
iret
test
push
inc
adc
pop
cmc
adc
sbbl
pop
cmpl
clc
cmp
push
xor
iret
nop
xor
test
adc
inc
in
jb
jmp
dec
sbb
subb
inc
sub
shl
mov
sub
and
cmpsl
dec
jecxz
mov
jo
cltd
push
inc
push
mov
cmp
ja
push
mov
cltd
aaa
icebp
fnstenv
pop
movsb
rcll
mov
test
fldl
jb
mov
pop
fdivl
or
enter
adc
and
push
rolb
mov
fdivl
lods
inc
pop
fucomip
lods
inc
sbb
fsubs
lret
jns
pop
mov
inc
es
int
inc
sbb
lods
sbb
xchg
lock
dec
gs
adc
adc
data16
dec
xlat
mov
loopne
cmp
fsubr
mov
sub
jae
mov
xchg
stos
out
xchg
sub
repz
push
mov
or
adc
dec
cmp
insb
outsl
mov
add
cmc
sub
cmp
cmp
xchg
addr16
adc
sbb
movsl
adc
and
adc
adc
data16
lahf
daa
inc
xchg
push
ja
es
mov
out
jle
adc
inc
mov
cld
cltd
mov
push
ret
out
in
add
out
out
sbb
ds
js
fs
frstor
mov
out
mov
rorl
xchg
mov
xchg
sbb
and
sbb
movsb
dec
pop
pop
add
lea
ss
pop
adc
addb
daa
mov
dec
mov
jmp
icebp
popf
aas
outsb
xchg
das
xchg
add
lcall
push
push
and
pop
ds
mov
cmp
sub
aas
stos
sub
push
fcmovne
and
stc
test
in
adc
ds
pop
insb
sub
jg
insl
iret
pop
pop
das
push
push
sbb
lods
mov
cwtl
push
notb
in
jle
cmp
enter
iret
or
add
cmp
push
loope
andl
nop
add
sub
xlat
rolb
pop
fadd
fcoml
cmp
lahf
jmp
xchg
aad
add
fwait
sti
pop
test
sub
or
int
dec
or
sbb
rcll
lock
lds
push
ret
pop
ds
jnp
rol
fisttpl
mov
pop
shlb
scas
call
dec
lret
lret
rol
pop
adc
mov
clc
ret
push
negl
and
repz
mov
xchg
jg
pop
out
and
add
gs
leave
into
leave
adc
fcompp
mov
fsubrl
cli
mov
and
jp
roll
jne
or
mov
mov
das
add
mov
je
xchg
sub
loope
int
mov
jp
sub
test
sub
shlb
jo
sbb
cmpsb
or
pop
stos
scas
ljmp
stos
add
pop
dec
lahf
add
stos
and
sub
mov
in
pop
sub
ljmp
mov
arpl
jo
jmp
fdivl
push
sub
in
mov
cmp
inc
dec
pop
jmp
and
cmp
push
cmp
xchg
jecxz
xor
push
xchg
jle
pop
insl
cmp
dec
call
imul
out
lods
dec
call
mov
outsb
push
mov
ss
cmp
fstpt
or
and
add
jle
adcl
mov
gs
in
mov
dec
std
jnp
call
adc
in
stos
pop
mov
das
cltd
cmp
add
daa
insb
stos
jl
mov
mov
andb
mov
mov
pusha
inc
adc
shlb
fsubl
into
push
lods
inc
bound
lcall
js
hlt
adc
test
push
mov
mov
and
negl
fadds
call
je
push
dec
dec
rcrl
cwtl
addr16
mov
mov
jb
mov
jle
jle
inc
adcb
popf
sub
subl
outsl
pop
arpl
jne
cmp
xor
test
cmc
stos
je
out
jne
pop
aad
mov
scas
add
push
or
push
adc
mov
push
shl
movsl
cmp
adc
fidivrs
xor
into
fisubrs
add
adc
icebp
cmova
leave
dec
shrl
stc
pushf
mov
test
xchg
xchg
add
leave
and
add
push
or
cmp
call
jg
cmp
aam
jae
sub
call
in
mov
stc
or
mov
pusha
notl
lret
je
mov
dec
and
negb
repnz
sub
adc
lods
out
mov
bound
cmp
push
jne
inc
ret
pop
ja
lods
adc
xchg
push
test
les
shll
psrlw
mov
nop
push
popa
mov
jle
dec
es
int
dec
stos
mov
adc
jo
shrl
mov
mov
mov
mov
in
in
sub
mov
sbb
sbb
call
shlb
scas
cli
sub
cmpsb
add
mov
das
cmp
xlat
add
mov
adc
push
ret
jnp
xchg
sub
xchg
xor
sbb
cmpsb
cltd
aaa
sbb
push
in
lds
stos
push
pop
aad
lret
cs
int
adc
sub
push
loopne
xor
sar
in
ret
in
and
mov
inc
pop
rolb
jbe
inc
imul
popa
pop
add
adc
and
sti
scas
int
fnstsw
pop
in
push
jge
cmp
xchg
pop
mov
sub
pop
inc
or
pop
lahf
fdivs
push
jb
icebp
push
in
inc
clc
or
repz
cli
xchg
test
xor
cmc
or
stos
xor
scas
jl
and
repnz
pop
mov
adc
mov
hlt
lods
pop
mov
dec
mov
push
cmpsb
mov
ret
daa
mov
and
fxch
jae
xor
sub
lea
sub
js
inc
lret
fs
repz
call
sbb
sbb
add
sbb
pop
mov
inc
ljmp
push
jne
jne
shlb
add
jp
inc
jle
mov
add
xchg
pop
push
pop
cmpsl
mulb
xor
add
mov
xlat
jmp
std
and
call
movsb
sbb
xchg
sbb
aas
loopne
jno
mov
data16
fistpl
bound
mov
aad
pop
pop
lahf
clc
or
xor
mov
jnp
mov
lods
mov
cmc
push
notl
dec
popa
in
sub
sub
sbb
fld
or
into
cli
inc
cmp
sub
mov
test
outsb
clc
sub
dec
cwtl
jae
xlat
and
les
cmp
xlat
fs
gs
inc
adc
imul
pushf
and
pop
pop
mov
cmpsl
mov
les
pusha
insl
xlat
mov
mov
xor
mov
xorb
adc
jmp
mov
mov
nop
pop
sub
arpl
roll
push
mov
dec
jecxz
xlat
ret
aad
cmp
mov
lea
xchg
sbb
cwtl
cmp
insb
mov
cltd
xor
loopne
dec
pop
mov
pop
mov
push
and
push
adc
mov
xor
and
dec
test
mov
xchg
cmc
jmp
aad
pop
sarl
inc
fisubs
jb
jle
arpl
scas
inc
rcll
je
mov
lods
data16
enter
lret
mov
push
cmp
xchg
imulb
and
xchg
jno
pop
movsl
jnp
pusha
jns
pop
in
pop
xchg
inc
pop
or
ljmp
lods
mov
sbb
insb
shl
insl
cmp
sbb
and
sti
aas
dec
ss
add
pop
lea
mov
push
movsl
dec
xchg
or
popf
inc
mov
inc
aaa
jne,pn
out
adc
out
out
dec
test
lret
sarl
pop
xchg
lret
add
adc
sub
sti
dec
mov
outsb
push
mov
sahf
lods
sbb
daa
mov
test
dec
and
xchg
jle
jae
sbb
dec
jmp
sub
loopne
mov
sbb
lcall
add
insl
fistl
dec
ret
pusha
jecxz
js
or
xorl
push
sbb
pop
insl
jnp
andl
sub
push
inc
shll
add
xor
sub
fsubrp
stc
xor
and
nop
repz
pop
daa
push
sbb
cmpsl
stc
or
push
mov
xchg
lret
lock
and
xchg
mov
divl
in
xchg
jb
rorb
inc
push
stc
stc
cwtl
in
cli
lret
push
aaa
mov
lcall
aam
lods
xchg
jae
add
cmp
faddl
push
incl
jle
xchg
das
popa
push
cmp
cmpsb
stos
or
or
xchg
aam
pop
dec
mov
sbb
roll
rcl
out
pop
lds
cs
cmc
sbb
mov
sbb
mov
ss
ret
repz
cltd
pop
add
pop
out
scas
push
inc
sub
popf
jb
cmp
popa
mov
pushf
push
mov
insb
sbb
ljmp
mov
cwtl
or
test
adc
mov
stos
pop
ret
aaa
mov
loopne
rorl
mov
ret
sbb
loop
in
arpl
mov
mov
and
mov
es
not
imul
movsl
lds
jmp
sahf
push
dec
loopne
jp
xchg
jnp
xchg
test
mov
pop
pop
jmp
mov
dec
cmc
cld
mov
adc
pop
adc
lock
inc
fldt
adc
xchg
lock
call
ret
cmpsb
ds
jp
mov
fdivrl
ficomps
xchg
stos
loope
push
or
imul
sbb
arpl
sbb
cltd
dec
icebp
std
das
cs
testb
xor
aaa
mov
aad
or
bound
sub
cltd
or
mov
mov
adc
rol
inc
in
js
pop
lock
jno
daa
mov
mov
xchg
in
test
mov
fstps
enter
jno
cs
jne
imul
inc
call
test
inc
or
xor
aas
mov
jno
mov
fnsave
dec
bnd
shll
into
les
cmp
lret
sarb
fisttps
testb
xor
jmp
cmp
dec
xchg
fsubl
xchg
rcl
neg
mov
arpl
sahf
aad
rorl
mov
inc
mov
mov
scas
lahf
mov
mov
inc
and
stos
lret
xor
jbe
adc
fsub
push
adc
mov
pop
lret
lea
jecxz
cltd
jne
xchg
mov
and
fdivs
xchg
mov
ret
push
ret
add
cmp
lret
pop
and
flds
ss
das
xchg
xchg
std
dec
dec
hlt
jns
mov
cmc
mov
cmp
xchg
or
movsb
mov
push
xor
cltd
fldl
sbb
and
es
testl
scas
inc
lahf
out
add
and
rcrb
movsb
inc
pop
push
jne
jp
cwtl
and
mov
loop
mov
and
cli
jge
add
arpl
adc
or
mov
xchg
push
mov
mov
and
jne
sbb
lock
jae
sub
pop
roll
pop
jae
mov
hlt
jb
mov
in
inc
adc
jne
sbb
jp
test
fwait
test
leave
nop
nop
sub
mov
loope
dec
out
dec
pusha
cmp
sti
fdivrp
in
mov
mov
jo
in
popf
call
xchg
lret
jae
xchg
scas
insl
xchg
sahf
cmc
shll
shll
sbb
or
jp
in
push
icebp
xchg
or
mov
loopne
adc
add
inc
jbe
es
mov
or
mov
enter
imul
jl
xchg
lahf
test
mov
push
pop
inc
cwtl
je
dec
jbe
push
and
dec
adc
stc
aam
mov
arpl
popf
stos
fidivs
je
movb
sbb
popa
movsl
sbbb
mov
lahf
or
pushaw
inc
cwtl
or
ret
popf
dec
pushf
mov
movsl
icebp
in
ds
xor
roll
or
add
mov
pop
jp
aaa
pop
inc
cmpsb
sub
push
shll
fldcw
fs
and
push
stos
in
int3
sbb
in
rorl
andb
push
iret
inc
fidivs
int
mov
loop
cld
imul
test
ret
subb
ret
adc
in
enter
mov
adc
cmpsb
enter
hlt
in
and
fbld
inc
or
jae
push
adc
sub
test
cmp
jo
mov
ss
adc
jecxz
sbb
sbb
dec
push
cmpsb
nop
mov
push
in
cmp
das
xor
mov
add
mulb
mov
pop
push
xchg
mov
jns
push
add
out
and
jg,pn
rcrb
sub
scas
out
push
xchg
cli
xor
mov
or
test
sbb
test
cmp
xchg
push
push
dec
push
negl
jge
mov
lea
xor
sbb
and
jecxz
ja
jg
xchg
jge
cmp
inc
sbb
push
fisubs
jb
xor
adc
mov
xor
cmpsl
fs
lds
jne
jne
scas
dec
pop
and
xchg
jnp
dec
inc
mov
lcall
test
xchg
jmp
enter
mulb
xchg
stc
fistl
stc
test
sub
fs
jnp
lds
stc
or
mov
jae
mov
or
xchg
lcall
cmp
mov
shl
push
sub
lea
sub
aam
push
sbb
dec
shrb
fstpl
add
loope
cmc
adc
xor
lret
push
stos
inc
test
call
add
push
adc
and
adc
xor
popa
and
mov
outsb
or
je
shll
mov
pop
jg
inc
inc
add
add
imull
fwait
arpl
int3
shll
cmc
and
fimull
mov
push
lcall
cmpsb
mov
and
lock
lods
lods
sub
popf
bnd
or
loope
jns
aad
std
cltd
sub
sub
cmc
in
lahf
scas
and
fimull
dec
xchg
cmp
lods
inc
or
or
mov
gs
out
daa
adc
call
mov
pop
mov
or
jg
outsb
mov
int3
mov
ljmp
sqrtps
jl
inc
shll
popa
xor
test
push
pop
fidivl
jmp
pop
push
imul
ds
cli
push
pop
cwtl
xor
add
pop
stos
dec
and
cmp
hlt
mov
jno
aad
cmp
sub
xorl
dec
test
mov
xchg
arpl
mov
outsb
aaa
aas
into
jae
mov
cmp
and
pop
into
mov
test
and
daa
out
cmpsl
or
repz
ret
test
jbe
out
rcrb
inc
xchg
xor
arpl
cmp
cmp
pop
mov
popf
lods
jns
or
in
xchg
xchg
sub
loope
add
lahf
jb
stos
icebp
ds
popa
fsubs
pop
cld
add
dec
and
inc
fisttps
cmp
in
pop
jge
dec
mov
aas
into
aas
test
dec
testb
movsb
xor
jns
ret
iret
dec
cmp
leave
pusha
mov
pushf
push
push
and
sbb
push
jmp
add
std
dec
dec
cmpsl
dec
sbb
ds
add
rcrl
scas
mov
sub
add
mov
arpl
jb
mov
nop
punpckhwd
xchg
mov
dec
int
push
loope
xor
xor
fisubl
mov
sub
dec
pop
outsb
cmpsl
mov
movsb
mov
jg
faddl
xor
jge
stos
push
pop
dec
movsl
pop
jo
mov
jae,pt
scas
xchg
ret
add
cmp
ss
push
xchg
ret
push
arpl
rcr
ret
mov
loopne
out
insl
jnp
negl
fisubs
fcmovnb
aas
mov
add
mov
aad
ljmp
call
cmp
mov
add
adc
cld
test
cld
push
sbb
fadd
pop
addl
pop
sbbl
mov
or
insb
aam
mov
dec
cld
xchg
pop
pop
lcall
pop
and
out
sbb
pop
dec
mov
dec
cmp
jae
out
xlat
push
lret
fmull
testl
jp
icebp
xor
ljmp
and
pusha
shrl
inc
cli
mov
jmp
xor
xchg
xorl
aam
mov
jbe
mov
inc
loop
test
lods
or
sub
dec
ficompl
cmp
insb
loopne
idivl
cltd
dec
test
mov
sub
or
lret
cmpsb
jne
fstpl
inc
sbb
ja
xchg
mov
jns
mov
imul
mov
les
xchg
pop
xor
pop
in
dec
ljmp
pop
jl
mov
fisttps
inc
mov
mov
cmpsb
enter
loop
add
in
push
fwait
and
fmuls
lds
ljmp
xchg
fisubl
fwait
push
xor
push
insl
das
add
cmpsb
push
sbb
cmp
jmp
lahf
xlat
mov
shlb
in
or
cmp
xor
xchg
mov
sub
lahf
adc
stos
mov
jmp
in
add
cs
add
cmp
sahf
lods
bound
ror
out
fcompl
lcall
mov
pop
nop
mov
sar
cmp
sub
push
mov
xchg
mov
push
xchg
mov
ret
enter
call
jbe
sahf
das
int3
sbb
push
ret
mov
pop
roll
xor
inc
xchg
add
mov
push
or
outsl
shlb
xor
jbe
sub
rcrb
stos
and
popf
inc
mov
sti
mov
call
ss
popa
push
mov
pop
sub
into
js
jbe
in
push
pop
test
dec
sbb
xor
mov
test
lret
into
add
xchg
rcll
int3
add
arpl
insl
iret
ljmp
pop
sahf
xor
mov
mov
add
sbb
or
mov
adc
push
lea
adc
shlb
cmp
rorb
daa
mov
mov
les
rcl
adc
inc
or
mov
dec
sbb
cmc
in
mov
lahf
and
sbb
aas
sti
arpl
mov
push
xchg
nop
mov
xchg
pop
scas
fldcw
ss
dec
in
or
adc
inc
cmp
cs
scas
pop
xor
or
incl
sub
mov
pop
cmp
mov
pop
in
ret
push
cmpb
xchg
dec
xchg
rolb
mov
jl
ret
ret
or
mov
popa
and
inc
mov
jbe
and
cmp
adc
lahf
int
sarl
lret
dec
outsl
les
xor
outsb
mov
pop
sahf
scas
hlt
xchg
adc
xchg
sub
les
rcrb
mov
das
adc
pop
fnstenv
push
test
pop
fldcw
pop
or
xchg
cs
repnz
jbe
sti
dec
adc
or
mov
adc
sub
aam
je
push
sub
push
incb
dec
andl
out
clc
mov
or
jo
aas
lcall
stc
inc
sti
sbb
das
cmp
aas
cwtl
jecxz
cld
or
dec
mov
dec
lea
js
xchg
das
mov
inc
arpl
mov
pop
mov
push
sbb
lds
dec
pop
pop
outsb
add
mov
loopne
imul
mov
xchg
sub
lret
les
in
shrl
dec
je
xchg
cmp
ret
mov
addr16
cltd
cld
adc
adc
shr
sub
dec
sbb
xchg
sub
outsl
outsb
out
jge
mov
mov
sbb
xor
jbe
sahf
xlat
repz
nop
scas
iret
shlb
lcall
ds
cld
outsb
adc
push
jle
mov
fists
mov
ret
and
mov
or
loop
clc
shl
sub
jnp
cmc
scas
out
pop
and
test
daa
mov
cmp
subb
insl
inc
mov
cmp
ljmp
icebp
pushf
xor
mov
es
sbb
dec
ud0
xchg
pop
pushf
and
cmp
test
xchg
dec
dec
pop
jl
sahf
jmp
gs
jmp
int
inc
fists
in
ja
mov
mov
mov
lcall
adc
sub
les
mov
pop
cmpsb
aad
popf
jl
jno
push
jno
add
call
dec
loope
rcrb
and
loope
aam
imul
adc
xchg
sti
jno
clc
enter
icebp
rclb
cmp
pop
xchg
hlt
ja
in
sub
fwait
shl
mov
insb
push
in
sahf
adc
into
mov
int
or
push
mov
push
adc
adc
cmc
sbb
cmp
xor
cmp
push
imul
sbb
jecxz
xchg
adc
ss
sbbb
dec
jecxz
pop
inc
scas
add
push
xor
sbb
test
inc
subl
mov
out
add
push
dec
and
adc
aas
dec
push
sarb
xchg
push
cmc
push
and
fs
ss
imul
arpl
popf
js
int
pop
or
daa
jnp
mov
mov
dec
popf
adc
xor
inc
loope
and
shlb
cli
xchg
push
push
pop
adcl
sbb
push
out
mov
add
jne
or
sahf
xor
je
mov
pop
xchg
leave
stc
rorl
sahf
mov
pushf
ss
addr16
test
in
popa
mov
xlat
dec
cmc
addb
mov
fldcw
xchg
in
icebp
into
mov
cli
std
jp
inc
xlat
lret
add
sbb
addr16
cmc
cwtl
fimuls
jp
push
cmpl
inc
push
and
cmp
pop
rdmsr
jmp
not
dec
mulb
les
divb
pushf
xor
xor
dec
cwtl
fists
mov
pop
jmp
outsl
inc
inc
je
inc
fwait
insl
add
pop
mov
lcall
and
jno
mov
inc
dec
adc
int3
arpl
mov
ljmp
lret
fwait
fs
popf
mov
jge
sbb
int
cli
aam
stos
add
repz
pop
dec
cltd
lahf
push
jo
lret
shrl
push
scas
xchg
jle
lret
mov
mov
sbb
push
test
sub
jnp
and
push
jg
gs
je
pop
pop
push
mov
mov
loopne
das
adc
out
popa
xorl
testl
icebp
adc
into
je
jb
inc
jns
inc
shrl
jle
sub
sarb
and
add
jle
pop
mov
in
gs
loope
pop
insl
add
cwtl
out
push
sahf
mov
cmpsl
lods
repz
loopne
imul
xchg
push
xchg
jbe
fisubrs
inc
dec
pop
jae
fdivrs
inc
mov
incl
inc
mov
xor
mov
lret
sub
fwait
pop
cmc
mov
subb
sbb
add
jae
jno
mov
push
std
lock
je
and
push
mov
pop
mov
call
cmp
shrb
sub
std
aam
add
inc
cmc
jb
adc
mov
dec
loope
rorb
jge
std
dec
mov
adc
clc
dec
sub
lcall
add
icebp
ror
stos
pop
sarl
jb
cld
xchg
arpl
outsb
lods
add
push
add
stos
xor
jno
xchg
mov
subb
mov
sbb
jg
mov
test
xchg
xor
lea
pop
pop
insb
sbb
sub
aaa
in
mov
lcall
xchg
shl
shll
sbb
sub
mov
xlat
std
dec
xor
test
jecxz
adc
xchg
gs
xchg
in
pop
jo
addr16
lock
add
test
or
and
cmp
mov
out
xor
or
adc
outsb
dec
std
call
fsubrl
popa
lock
mov
jne
mov
pop
std
cltd
sub
imul
pusha
test
hlt
flds
jnp
jne
cmc
cmp
and
iret
je
mulb
or
out
sahf
data16
jne
fldenv
pushf
out
and
mov
push
pusha
mov
rorl
cmp
sub
jp
es
push
pop
cmp
addr16
or
int
adc
std
sbb
cmp
lea
mov
push
aad
xchg
xchg
mov
cmc
mov
imul
mov
push
clc
lcall
in
lds
mov
pop
imul
hlt
scas
les
xor
pop
bound
addr16
or
mov
cmp
sbb
jl
enter
sbb
aas
mov
stos
cmpsl
pop
out
mov
sub
shlb
lret
movsb
pop
cmpsl
in
pop
imul
adc
push
mov
test
mov
push
sbb
or
mov
lret
mov
mov
adc
leave
stc
push
je
or
bound
lcall
pop
out
iret
jb
or
add
sbbb
ficoms
cwtl
push
xchg
lods
push
xor
xor
xchg
pop
addr16
popa
ljmp
xor
leave
bound
and
popf
movsl
cmp
sbb
imul
and
lret
imul
fcomi
shrl
cmp
cmpsl
ds
mov
int
cmpsl
cmp
dec
lcall
inc
inc
arpl
test
mov
lods
arpl
iret
imul
in
inc
jmp
dec
and
mov
scas
cmp
dec
mov
and
jp
imul
xchg
hlt
mov
into
pop
mov
lods
inc
cs
aaa
xchg
mov
or
out
or
shr
cli
mov
xor
jle
lods
cmp
dec
out
cld
jg
adc
imul
inc
mov
cmpsl
dec
fiaddl
push
out
and
outsb
add
xchg
outsb
mov
xor
loopne
xchg
push
mov
mov
jb,pn
das
mov
aad
mov
jl
cli
fimull
pop
test
inc
loopne
sti
mov
stos
inc
mov
es
ret
mov
sbb
fld
aam
cmp
cmp
enter
inc
jmp
popa
enter
mov
int
jne
adc
cmp
push
in
add
dec
mov
xchg
stos
sub
ror
test
je
push
dec
dec
or
and
cld
test
cs
push
add
mov
inc
push
add
sahf
jle
popa
scas
xchg
sti
cmpsl
nop
sub
inc
nop
ja
push
data16
add
scas
jae
dec
sbb
mov
jb
pop
push
in
out
dec
mov
cmc
jno
xchg
call
pushf
mov
jecxz
jae
jmp
fadds
imulb
stc
stos
xlat
js
dec
xchg
and
arpl
loopne
daa
mov
sub
aam
jb
xchg
sub
sbb
and
cld
stc
pop
repz
sbbb
or
rcll
fbstp
je
pop
pop
insb
sub
push
jo
mov
js
fs
aad
inc
xlat
xorb
negb
adc
xor
shr
push
xor
add
cmpsl
mov
enter
lret
insb
daa
bound
mov
sbb
adc
or
outsb
mov
movsb
or
repz
aaa
inc
cmpsl
hlt
adc
sbb
push
mov
inc
lock
mov
inc
pop
and
dec
mov
mov
adc
sbb
mov
sahf
sub
cmpsb
cmp
sbb
sub
inc
push
mov
gs
insl
fbstp
mov
test
and
lods
inc
sbb
sub
xchg
test
dec
popa
dec
popa
push
xorb
cwtl
mov
sbb
shrb
into
jp
pop
std
dec
pop
xor
aas
xchg
mov
sti
dec
adc
neg
push
ss
cmp
lahf
cs
rcrl
xor
int
jne
ficoms
xchg
push
mov
out
fnsave
add
inc
scas
and
xor
adc
rorb
aas
or
call
clc
mov
pop
cmp
cmp
out
ret
xor
sbb
cld
xchg
icebp
mov
mov
enter
bound
les
int3
or
add
pop
or
push
filds
xor
fsubr
push
icebp
lret
das
int
or
jae
cmp
in
loope
xor
fnstcw
push
push
inc
flds
jl
stos
mov
inc
inc
jnp
mov
adc
ja,pn
sbbl
in
mov
cwtl
shll
sub
shrb
push
adc
pusha
in
sbb
insl
add
push
cli
movsl
stc
cs
push
ljmp
jno
xor
push
push
lds
cwtl
and
push
icebp
movsl
mov
fsubs
es
push
fidivs
fidivrl
mov
pop
xchg
jns
cmc
hlt
push
lods
and
inc
xor
xor
insl
int3
rcll
xor
lods
mov
add
cltd
in
nop
cmp
arpl
lds
or
lcall
pop
lock
insb
stos
test
jno
mov
inc
xor
push
lret
je
add
jge
jmp
sti
mov
add
lret
clc
jnp
and
lods
arpl
and
jno
and
loope
adc
popf
test
push
iret
sti
mov
sub
test
jge
nop
jno
into
pop
jge
or
xor
push
in
bts
ja
push
cs
stos
push
adc
jmp
or
insl
stos
repz
loop
mov
imul
bound
test
jge
xlat
dec
out
sbb
insl
aam
in
jmp
in
imul
fmull
leave
pop
push
insl
lods
ljmp
pushf
test
shlb
lods
cmc
push
out
pop
pop
cmp
xor
je
or
scas
sbb
cltd
jo
inc
movsb
and
or
je
adc
cmpsb
dec
sub
enter
pusha
clc
pop
xchg
scas
dec
sbb
ret
jno
gs
aad
jno
mov
inc
jg
pop
add
cmp
push
into
sbb
test
xor
in
scas
push
lret
lahf
add
mov
fabs
push
mov
es
and
pop
and
jmp
push
jbe
into
out
js
mov
fmuls
sub
js
sub
sahf
mov
jl
push
fsubs
dec
je
mov
enter
ljmp
popa
and
nop
xchg
and
mov
cwtl
mov
pop
xchg
xchg
cmpsl
in
pop
mov
nop
sub
cmp
std
push
xlat
jbe
xchg
push
int
cmpsl
lahf
mov
sbb
cmp
call
cld
shll
loope
pop
sbb
or
xor
rcrb
nop
shrl
xchg
notb
scas
mov
inc
fildl
mov
loope
mov
jge
inc
push
jmp
lea
sub
test
mov
pop
and
mov
fcom
mov
mov
cmpsb
mov
cmp
dec
xchg
add
jmp
test
and
lds
std
sbb
mov
cmp
or
jmp
push
imul
insl
ret
xor
jno
mov
jl
sub
clc
push
fnsave
push
shlb
jle
add
loopne
push
jbe
pop
int3
lcall
cmp
sub
fidivrs
cltd
xor
push
es
or
repz
sub
pop
add
dec
dec
xor
pop
lds
fidivs
test
cmp
sub
jp
pop
mov
pushf
scas
add
or
cmp
pop
push
and
mov
movsb
fwait
xchg
fs
cmp
push
xor
mov
add
xchg
mov
sub
lret
or
icebp
sbb
cmp
int3
popf
push
push
test
aas
mov
mov
rcrb
inc
pop
dec
mov
pop
test
push
in
push
mov
xchg
cmp
mulb
sbbl
in
sub
pop
sub
mov
cmp
insb
out
inc
decl
je
cmc
aaa
mov
int
sub
addb
or
pusha
dec
mov
mov
adc
int3
lcall
js
rcr
push
mov
cmpl
out
in
cmpsl
shrb
inc
mov
jae
icebp
ds
push
in
push
cmpsb
js
mov
push
movsb
xor
out
lcall
adc
fisubrs
push
fimull
std
ljmp
sbbl
xchg
dec
mov
jp
ss
xor
sub
jp
imulb
dec
adcl
jbe
cltd
dec
outsb
dec
lcall
sbb
or
outsb
in
fs
dec
movsb
je
or
mov
shll
sub
cmp
mov
arpl
imul
fists
push
leave
add
call
jnp
call
jae
imul
mov
mov
jg
sub
fidivrs
sub
cs
jmp
ret
lcall
js
sub
jne
jmp
je
clc
fnstenv
mov
out
shll
pop
xchg
add
adc
hlt
lods
inc
push
pop
mov
jmp
pop
pop
das
add
cmc
repz
cmp
push
repz
add
push
in
stos
add
punpckhbw
cmpsb
mov
jns
shl
ret
movsl
cli
adc
jp
xor
leave
mov
rcll
and
or
xchg
lods
adc
fucomp
aas
push
inc
mov
outsb
test
cli
cltd
cmpps
sbbl
pop
lea
jmp
out
and
ret
inc
and
cmovp
fstpl
mov
les
cmp
fwait
fwait
mov
fdivs
fcoms
mov
push
xor
push
xor
push
push
jp
ljmp
pop
test
stos
xchg
mov
mov
xor
cmpsb
sub
insl
in
jg
adc
xor
cmp
push
ljmp
lock
xchg
cwtl
popf
push
test
adc
cmpsb
mov
push
dec
xchg
mov
inc
cwtl
push
cmp
shl
pop
in
in
je
push
gs
or
dec
loope
cltd
popf
inc
push
xchg
xchg
or
xchg
ret
add
je
xor
cmp
mov
mov
outsb
clc
pop
stos
mov
add
lods
mov
stc
pop
and
dec
pop
fdivl
push
sub
movsl
push
lahf
push
hlt
jecxz
mov
mov
push
inc
cmpb
shlb
je
test
out
xchg
pop
out
inc
and
pop
aaa
cltd
std
add
xor
xor
dec
mov
sti
stos
xchg
lods
aaa
pop
test
pop
mov
dec
jl
xor
and
mov
ret
push
movsl
int
mov
jb
mov
pusha
or
lods
shl
xor
sbb
sbb
mov
lea
sbb
adc
inc
xchg
inc
or
aad
std
enter
inc
or
iret
nop
movsb
pushf
xor
paddq
sub
push
ret
lcall
xor
pop
cmpsb
or
ror
mov
xchg
cmpsb
imul
sbb
cmovge
mov
lods
leave
or
and
push
jmp
aas
and
cwtl
xlat
jnp
sub
es
imull
test
lods
pop
dec
xor
pop
andl
sub
sbb
mov
and
push
cld
xorl
lods
test
push
push
aad
mov
and
jns
and
mov
xor
aad
fs
insb
fidivrs
outsb
fcompl
repnz
aam
mov
pop
pop
in
cmp
xchg
js
or
jmp
ret
lods
add
and
adc
add
clc
shll
das
xor
jg
push
sub
lcall
push
dec
fisubrl
cld
adc
rcrb
jne
jge
inc
inc
out
je
xor
push
outsb
clc
loopne
mov
clc
je
cmpsb
cmp
push
sub
sbb
add
rorl
leave
add
sbb
push
jp
into
stos
jg
push
imul
out
xchg
into
xor
fs
adc
mov
fsubs
imul
inc
cmp
xor
mov
mov
call
test
pop
and
push
mov
add
das
add
std
std
add
loopne
aaa
data16
outsb
mov
popf
int3
aaa
mov
imul
lret
xlat
outsb
xor
call
sbb
roll
xchg
add
into
jns
cmp
ds
fnstenvs
pop
les
dec
notl
jo
xchg
sub
inc
repz
pop
mov
mov
push
pusha
out
mov
leave
sub
xor
arpl
xchg
in
pop
inc
fbstp
insl
xor
nop
adcl
nop
jmp
or
jae
aad
add
mov
pop
pop
xor
lea
stos
add
cwtl
xor
mov
dec
fdiv
pop
cmp
push
insb
jle
pop
pop
mov
push
pushf
loopne
push
cltd
mov
cltd
push
xchg
stos
rclb
inc
dec
jl
pop
daa
xchg
mov
cwtl
add
or
sbb
jl
jb
ljmp
std
cmp
dec
adc
push
stos
mov
dec
and
aas
sbb
rcl
push
jmp
enter
mull
pop
xchg
xchg
inc
aad
loope
popa
sbb
jne
jns
inc
stos
aam
in
mov
cvtsi2ssl
dec
push
inc
cmpl
fisttpll
push
fs
shll
rorb
scas
pop
sub
dec
iret
jnp
mov
push
push
push
push
mov
mov
sbb
adc
push
rep
bound
movsl
inc
adc
jno
arpl
xchg
rorl
cltd
sbb
and
bound
jl
loope
push
popf
lods
dec
or
cmp
stc
push
popf
sub
sub
repz
and
sahf
cs
test
push
lcall
adc
and
jmp
out
andl
sub
pop
addr16
xchg
call
sub
sbb
in
dec
push
es
jne
or
dec
bound
cmp
xor
inc
pop
jmp
sbb
out
lret
jae
cmp
and
pop
push
mov
ret
mov
sub
xchg
rcrb
cmp
pop
in
bound
ja
and
iret
mov
jle
scas
out
data16
xchg
xor
movsl
cld
xchg
xor
sub
mov
xor
ljmp
fbstp
mov
xchg
pop
idivb
sub
adc
cs
pushl
fmull
inc
cmpsl
and
lds
test
rcrb
xor
or
inc
push
mov
lock
dec
pop
scas
js
pop
hlt
pop
cwtl
xor
addr16
and
jecxz
dec
adc
sbbl
in
test
or
jns
mov
pop
mov
jmp
movsl
pop
mov
xor
or
imul
test
inc
jb
jecxz
inc
xchg
dec
cltd
xor
test
and
negb
lret
sti
cmp
outsl
pop
pop
inc
nop
xchg
ret
mov
push
and
popf
sub
pop
or
sub
movsl
jl
mov
inc
into
and
mov
push
enter
xchg
adc
or
notl
mov
fbstp
lahf
test
sbb
mov
int3
test
and
aaa
mov
mov
nop
incb
xchg
adc
js
xor
dec
add
neg
fwait
popa
mov
stos
adc
stos
mov
iret
loop
or
sbb
mov
pop
aaa
pusha
add
push
pop
loopne
mov
jo
imul
mov
mov
rol
repz
stos
xchg
jecxz
inc
jmp
jmp
push
mov
adc
pop
loop
jp
add
inc
lods
cld
cmpb
adc
test
nopl
inc
xlat
pop
ret
loopne
mov
gs
add
xchg
push
mov
cs
mov
clc
dec
and
adc
mov
mov
push
jns
inc
or
or
pop
cltd
xor
lods
mov
add
daa
pop
stos
mov
std
scas
cmp
mov
xchg
imul
pop
mov
imul
adc
jle
dec
mov
fwait
and
ret
decb
inc
jl
lods
inc
adc
mov
stos
mov
gs
add
scas
push
fnstcw
into
rcrb
pusha
out
mov
bound
popa
cmp
movsb
jge
dec
or
push
mov
push
mov
fcoms
xchg
and
add
xchg
fidivrl
sbb
inc
cltd
xor
cmpsl
dec
lahf
sub
pop
pop
mov
mov
insb
or
cmc
cmpsl
aad
and
idivb
mov
pushf
ljmp
pop
xchg
sub
mov
and
int
jno
incb
adc
xor
popf
push
jmp
mov
mov
sbb
xor
icebp
cmp
pop
pop
iret
les
inc
arpl
movl
lea
xlat
loope
add
cltd
sub
lcall
add
roll
push
and
fcomp
popf
orb
pop
arpl
sbb
add
pop
adc
mov
outsl
sub
nop
rorb
push
push
fldl
xor
arpl
lcall
enter
aad
pop
hlt
push
sti
fcoml
data16
xchg
jg
mov
shr
push
mov
jne
and
mov
arpl
fstpl
jge
shl
lock
fwait
sub
pop
adc
lret
jb
std
cmp
and
inc
in
inc
decl
aas
xchg
loope
aad
mov
inc
repz
ret
mov
cmc
mov
fwait
or
das
js
popa
push
pushf
jb
mov
cli
movsl
icebp
int
shr
test
cmpsl
push
hlt
or
js
push
jp
jp
jl
or
adc
xchg
mov
sbbl
sbb
shll
jp
sub
in
mov
scas
out
jae
cmp
fimull
push
sbb
sti
mov
xchg
sub
xor
jmp
repnz
cmp
shlb
jb
stc
mov
or
ss
xchg
jae
imul
sahf
lock
mov
sub
arpl
insb
mov
jb
or
add
ljmp
jno
jnp
add
jmp
nop
imul
jmp
std
pushf
cltd
xor
add
xor
test
mov
xchg
inc
clc
std
and
adc
inc
stc
xor
sub
cmp
jle
adc
test
pop
jno
jae
int3
xor
push
insb
mov
iret
jo
and
xchg
mov
ja
jp
adc
wbinvd
fsubrl
mov
rorb
mov
andl
arpl
mov
pop
cwtl
das
dec
in
mov
shl
mov
leave
xor
jmp
xorl
and
dec
fdivr
enter
pushf
ffreep
add
rcrb
pop
popf
test
popf
aam
sub
mov
pop
or
mov
pop
fisttpl
in
out
insl
sbb
cmp
dec
jmp
push
dec
push
mov
in
adc
pop
push
ja
movzbl
jne
lods
xrelease
es
fsubp
fidivl
adc
ja
xor
clc
jmp
dec
pop
xchg
cld
sub
stos
xchg
cltd
jo
iret
lcall
adc
mov
cmp
push
jmp
loopne
jp
sbb
into
into
cmp
lock
mov
jle
mov
test
mov
aam
xor
dec
scas
jns
and
or
aas
sbbb
fdiv
movsl
mov
add
adc
xor
in
adc
pop
pushl
fs
or
stos
dec
je
push
push
jne
add
cli
loope
mov
fcomip
stos
pop
mov
adc
popa
fsubrl
into
arpl
fcoms
cmp
andb
rclb
jle
test
lret
test
mov
pop
imul
mov
test
rorl
icebp
mov
xchg
cs
mov
jl
fmuls
bound
inc
sbb
pop
jg
dec
faddl
sub
xlat
outsb
clc
test
fdivp
xchg
cmc
arpl
fs
jo
inc
mov
push
push
call
mov
ret
xchg
push
in
pop
xchg
jns
inc
ret
ja
inc
jmp
ds
sub
addr16
adc
popf
inc
pop
cmp
mov
sbb
xchg
sahf
push
imull
ret
adc
push
and
repz
fwait
cmpsl
ret
mov
push
mov
push
lock
orb
cmp
mov
adc
es
xlat
mov
mov
outsb
inc
dec
out
push
cmp
es
sar
movl
hlt
and
ds
sub
mov
rol
pop
add
cltd
bound
cli
adc
sbb
test
les
out
mulb
inc
es
enter
jb
mov
and
lret
adc
ja
and
jmp
sbb
mov
sub
fdivr
rorb
pop
push
aaa
call
dec
sub
aad
inc
lods
enter
dec
pop
sbb
mov
mov
pop
ja
nop
nop
adc
add
pop
subb
mov
cmp
xchg
push
xchg
adc
frstor
pop
int
or
loopne
dec
push
dec
and
jae
pop
push
movsb
and
pop
xor
add
pop
xchg
add
mov
scas
stos
ljmp
sub
push
lods
dec
xor
dec
icebp
mov
sbb
out
mov
cli
adc
mov
out
push
in
test
mov
ffree
mov
push
fwait
aaa
sbb
xchg
dec
sbbb
sub
das
les
stos
dec
out
rdseed
lods
push
imul
push
cli
xor
popf
mov
jecxz
in
mov
pop
sub
mov
pop
mov
mov
jns
loope
dec
and
orl
dec
push
or
enter
mov
jl
mov
lods
pop
push
xchg
out
jnp
pop
fsub
jl
je
xor
jp
cltd
inc
pushf
lret
filds
ja
jge
add
adc
pop
cmp
js
jbe
pop
push
mov
push
jno
movsl
mov
daa
sarl
adc
add
xchg
jne
fwait
imul
dec
in
xchg
and
add
lds
outsb
mov
cltd
test
or
sbb
pop
xor
rorb
mov
lock
or
mull
add
inc
jo
jge
or
js
lcall
aas
and
xorl
jno
lock
adc
lcall
lcall
cld
cmp
jp
push
jle
fiadds
addr16
xchg
cwtl
inc
add
mov
mov
mov
mov
idivl
push
bound
jmp
scas
lret
imul
mov
and
loopne
pushl
into
xchg
cmp
lret
push
insb
cmp
repz
dec
mov
mov
and
add
sub
stc
pop
mov
inc
xlat
inc
rcr
or
or
in
in
xchg
test
push
push
sub
mov
es
dec
lods
lods
cld
sarl
repz
pop
lahf
mov
loope
xor
cs
dec
xchg
sub
push
add
dec
mov
xor
jae
aaa
sub
iret
and
loope
add
stos
mov
lret
dec
and
add
fxch
mov
xor
inc
fadds
mov
repnz
in
rorl
inc
and
mov
fsubrs
cmpsl
ficomps
sti
testb
fsubl
das
jnp
sub
addl
cmc
pop
in
enter
scas
sub
sbb
sbb
and
xor
xor
fldl
fmull
test
lea
popf
call
xor
xchg
mov
jno
cmp
xor
push
xchg
inc
in
sbb
iret
lahf
dec
pop
mov
andb
std
xchg
repz
arpl
xrelease
rcl
or
inc
out
jb
fs
sbb
dec
lcall
in
mov
mov
fnstcw
push
push
jbe
sub
divl
int3
out
ret
or
inc
nop
pop
fidivrl
lret
int3
retw
sbb
jg
mov
rcll
lret
xchg
imul
inc
xlat
dec
daa
stc
pop
cltd
daa
jecxz
outsb
jb
mov
lret
cld
aaa
int
not
push
cs
in
popf
or
icebp
scas
daa
adc
lods
out
mov
mov
mov
mov
cmp
mov
aas
cmc
mov
push
lret
cmp
xchg
mov
addps
dec
ljmp
inc
jae
scas
mov
icebp
call
call
popa
int3
cmpsl
aas
dec
dec
and
inc
sbb
xor
repz
or
adc
dec
pop
dec
push
test
sub
and
iret
mov
jbe
repnz
cs
xor
leave
or
dec
push
mov
push
stos
into
mov
adc
icebp
ficoms
lcall
jo
pop
mov
xchg
cltd
repz
pop
pause
sbb
dec
ret
mov
mov
push
dec
add
inc
sbb
or
cmc
mov
and
and
mov
out
mov
xchg
cltd
sahf
lea
xor
out
sti
icebp
push
mov
push
lret
bound
jmp
sub
cmp
ljmp
xor
mov
mov
imul
pop
loopne
jo
mov
xor
xlat
incl
test
mov
mov
sub
cmpb
jbe
fs
and
push
sbb
out
push
mov
cli
sbbl
pop
mov
jb
adc
fiaddl
lea
lds
cmp
pop
xchg
or
jecxz
clc
stc
inc
add
out
clc
mov
jmp
popf
pop
adcl
lods
sub
xchg
inc
inc
in
js
out
lds
mov
sbb
inc
es
es
cwtl
nop
mov
xchg
lods
js
dec
jle
xor
xor
out
in
lds
xchg
mov
dec
adc
fnstsw
lock
fwait
es
inc
dec
push
shl
inc
mov
in
mov
xchg
jae
or
inc
aad
enter
sti
mov
push
out
es
and
repz
cmpsb
inc
pop
fidivrs
sub
in
push
test
push
add
test
pop
scas
and
inc
inc
fnstcw
add
lret
sbb
or
xchg
adc
and
in
sub
and
ss
imul
mov
mov
mov
xchg
data16
cs
or
out
xlat
icebp
nop
inc
add
pop
clc
leave
movsb
js
inc
in
mov
sbbb
mov
into
jnp
mov
sahf
ds
test
enter
mov
in
rcl
insl
xor
push
push
push
hlt
mov
dec
adc
call
adc
test
dec
or
fiadds
mov
int3
pop
repnz
mov
jb
push
add
enter
test
jo
pop
push
neg
jge
mov
sbb
push
cmpsl
sti
mov
daa
fs
adc
imul
dec
xchg
shrb
gs
or
sbb
nop
ss
mov
cmp
add
dec
fs
and
and
jne
push
imul
arpl
into
and
add
mov
jecxz
add
repz
outsl
loop
cltd
sahf
adc
ret
test
jns
cwtl
ds
hlt
fiadds
push
jmp
pop
dec
lret
add
pop
jo
fnstsw
into
sbb
ljmp
pop
mov
rcrl
movsb
dec
lret
add
jmp
insl
sbb
int3
lock
sub
pop
or
inc
mov
add
fldl
loopne
ja
in
and
es
cmp
gs
xchg
inc
mov
dec
sahf
mov
mov
cltd
push
lods
mov
push
pop
cmp
xor
sub
jmp
add
das
jns
mov
scas
mov
negl
inc
mov
arpl
imul
adc
sahf
xor
mov
sahf
jle
incb
out
dec
pop
and
movsl
jno
popa
aaa
lahf
xchg
stos
aad
pop
mov
inc
lds
push
insl
inc
jg
inc
mov
adc
stos
inc
mov
lret
insb
jle
xchg
flds
popf
add
and
xchg
xchg
mov
add
adc
xor
mov
push
hlt
shr
jle
cmp
mov
jecxz
sti
aaa
add
or
sbb
sti
data16
or
sub
add
sub
cmp
out
test
call
fidivs
js
sub
pop
scas
std
xchg
fdivrs
mov
std
dec
and
push
add
data16
ja
loopne
xor
jb
aad
or
out
and
pop
sahf
jne
jne
int3
or
sarl
jmp
or
jl
ss
add
jb
pop
repz
cmp
jg
montmul
cmpsb
inc
add
adc
hlt
mov
jmp
insb
es
xchg
out
mov
push
xor
dec
xchg
out
test
fnstenv
les
sub
aam
movsb
or
xor
pop
sbb
xchg
or
jge
xor
sarb
mov
subl
ja
jbe
jl
je
pop
and
mov
xor
mov
stc
mov
xor
pop
movsb
mov
mov
sub
ret
xchg
and
mov
dec
scas
or
lea
out
jp
inc
out
js
cmp
add
hlt
adc
push
pop
sbb
jecxz
and
mov
xchg
push
or
dec
and
mov
pop
lds
push
scas
or
lahf
inc
in
dec
pushl
lret
pusha
mov
pop
jbe
or
sub
addl
aam
je
pop
mov
popf
inc
int
jmp
enter
cmpsb
imul
das
add
jno
adc
jno
mov
push
cmp
pop
or
loopne
loop
mov
sbb
es
and
enter
loop
add
inc
shll
xchg
dec
mov
in
sbb
es
shll
and
repnz
pop
aam
mov
cs
mov
jge
lock
loopne,pn
cli
popa
repnz
clc
fnstsw
mov
test
jp
jp
or
pop
inc
pop
mov
sbb
sub
pop
mov
pop
popf
cmpsl
or
sbb
leave
loopne
icebp
sbb
dec
adc
aaa
xchg
pop
xchg
jecxz
jecxz
mov
mov
pop
jge
add
xlat
sahf
fsubs
mov
addr16
out
ljmp
add
mov
mov
sti
std
pop
int
xchg
ds
adc
call
xchg
xor
test
in
push
fadds
sahf
imulb
inc
out
movsl
lret
insb
dec
sub
cld
dec
arpl
adc
pop
inc
cli
pop
xor
xchg
mov
sub
xor
mov
and
mov
repz
fwait
xor
dec
fsubl
and
fcomp
mov
mov
int3
popa
pop
in
mov
subl
mov
mov
cmpsl
sbb
mov
fnsave
dec
in
fdiv
repz
insb
add
and
mov
stos
push
lods
inc
cmp
mov
test
in
cmp
je
outsb
xor
dec
shl
loop
cs
adc
test
dec
adc
gs
and
outsl
jnp
aaa
dec
fisttpll
adc
xchg
dec
dec
mov
lahf
ds
stos
outsl
rolb
mov
dec
fldl
notb
cmp
lods
push
cmp
arpl
jae
pop
mov
aaa
mov
pop
mov
add
mov
xchg
jmp
loope
ljmp
jns
cmc
pusha
negl
sbb
xchg
pop
jbe
adc
mov
xor
xchg
adc
mov
shrb
aaa
pop
movsb
fstps
ret
or
out
cwtl
mov
lods
xor
inc
outsl
test
jnp
and
insl
cmp
cmp
mov
fidivrs
rorl
and
icebp
push
inc
js
jl
mov
rcrl
movsb
or
insl
xchg
inc
ficoml
scas
inc
or
loop
adc
outsl
orl
nop
test
in
in
xchg
xchg
stos
add
or
in
mov
sahf
mov
into
jecxz
test
xor
and
jne
xchg
stos
sbbb
or
xor
jp
mov
outsl
jle
add
jp
testb
fdivs
mov
cmp
call
sbb
ret
push
js
sub
ret
inc
sahf
adc
or
in
jae
adc
cmp
sub
pop
push
les
add
int3
cmpsb
fucomip
out
movsl
pop
test
add
popf
jno
iret
dec
inc
fimuls
outsl
pusha
adc
pop
sub
fisubrs
mov
pop
push
jbe
sub
xchg
cs
seto
sub
int
test
lahf
adc
jg
shl
repnz
xchg
outsb
adc
sub
repnz
jnp
sbb
aas
loop
out
mov
or
adc
jno
in
loopne
mov
cmp
addr16
pop
xchg
jg
mov
out
inc
sbb
rolb
shrb
jp
mov
js
push
cmp
xchg
xchg
aad
cli
notl
ja
mov
rorl
out
icebp
dec
pop
inc
fiaddl
sub
clc
pop
sub
jg
dec
std
mov
test
lahf
fcmovnb
pop
add
cld
call
cmpsl
pushf
out
in
stos
xchg
mov
pop
jo
das
sarb
mov
int3
mov
dec
idivl
cld
dec
pop
xor
cli
xor
outsb
popf
push
sbbl
stc
and
ss
mov
push
jbe
xchg
pop
xor
fsubrs
sub
xchg
mov
dec
iret
decb
movsb
pop
pop
icebp
rolb
repz
jmp
mov
sarb
and
mov
cli
icebp
cmp
jecxz
pop
movsl
sub
shlb
sub
ret
repnz
dec
hlt
push
ret
cmp
into
ss
mov
vandps
cmpsb
movsl
sarl
lret
jne
clc
mov
fxch
xchg
adc
shrl
mov
repz
loopne
xchg
int
pcmpeqd
stos
inc
negl
push
jno
sbb
mov
push
out
rcrb
loop
push
pop
mov
jns
xor
mov
mov
out
xchg
mov
test
aaa
outsb
sub
jns
push
inc
jno
add
out
xchg
push
mov
mov
stos
fiaddl
outsl
icebp
jno
and
dec
pop
lock
cwtl
add
cwtl
adcl
sbb
sbb
mov
mov
mov
pop
push
adc
xlat
jno
stc
adc
mov
mov
push
into
add
int
leave
add
gs
add
add
xchg
decb
mov
insl
arpl
sahf
inc
xor
jne
das
loopne
stos
enter
ljmp
mov
pusha
daa
xchg
xchg
sub
and
inc
mov
notl
popa
push
xchg
sti
nop
leave
add
ds
pusha
pushf
mov
sbb
dec
mov
jno
loopne
mov
pushf
cmc
jecxz
clc
inc
fstps
fists
mov
xor
xchg
add
sbb
push
repz
popa
xor
pop
je
arpl
int
pop
out
adc
pop
pop
aas
dec
mov
jle
cmp
cli
push
mov
bound
fs
int3
outsb
test
ja
mov
sti
xor
lea
jle
jns
and
cmp
jns
int
loop
mov
icebp
and
ja
out
mov
int3
inc
sbbl
xchg
xor
inc
or
jge
adc
mov
xchg
test
lds
cld
inc
insl
loopne
call
lcall
sti
daa
lock
clc
cmp
mov
mulb
jl
jp
mov
mov
movsl
push
out
hlt
std
sbb
mov
xor
fwait
mov
lret
xor
das
add
jg
sub
ja
sbbb
mov
pop
jb
loop
sub
mov
icebp
pop
jo
cld
fwait
sbb
out
cmp
aaa
nop
sub
ret
xchg
mov
imul
push
xchg
sub
leave
lret
hlt
out
dec
dec
ror
push
pop
and
imull
imul
loopne
cmp
dec
add
xor
adc
xor
add
arpl
dec
push
mov
add
and
adc
test
jb
cwtl
sub
inc
cmp
out
mov
pop
pop
inc
jo
fwait
pop
ret
dec
pop
pop
arpl
in
mov
mov
mov
mov
xchg
and
sbb
inc
xlat
sub
in
mov
and
mov
rcll
test
jecxz
jmp
inc
fmul
or
arpl
mov
xchg
sbb
mov
stos
movsb
mov
lcall
or
loopne
sbb
xchg
pop
push
inc
mov
jno
dec
pop
fstpl
outsb
popl
sbbl
jle
jmp
add
mov
fsts
sbb
lret
out
std
xor
add
or
das
loopne
add
sarl
pop
pop
cmp
xchg
jl
xchg
sub
sbb
sub
daa
das
rorl
adc
lods
cmpsl
lds
popa
inc
popa
icebp
js
lea
sbb
lds
test
loope
mov
push
mov
in
sbb
rcll
daa
xchg
sti
lret
fisubrl
mov
or
notl
int
or
sbb
sub
js
push
adc
inc
pop
pop
adc
xor
or
mov
outsl
push
sub
and
jne
add
xchg
jg
lcall
mov
shlb
es
arpl
jne
xchg
icebp
cmp
in
pop
orb
cs
fcomps
loope
insb
xchg
pop
outsb
push
mov
shl
addr16
aad
dec
jb
or
bound
jl
pop
in
sbb
pop
movsb
jmp
dec
fbld
cmp
cs
cs
inc
mov
sti
xchg
mov
cld
sbb
adc
ds
popa
push
ja
cwtl
sbbl
xchg
xchg
adc
pushf
movsb
lods
mov
mov
movsl
jo
loop
xor
in
mov
loope
jnp
adc
xorb
dec
ret
imul
iret
mov
xchg
sub
iret
cli
sbb
xor
clc
cld
test
push
sub
je
fisubrs
pop
jne
aaa
ja
sbb
dec
fsub
jmp
fsubl
sar
inc
int3
call
in
pop
sahf
js
inc
imul
lods
cmp
mov
xor
ds
xor
pop
lock
lods
arpl
add
scas
pop
jecxz
aam
sub
out
adc
sbb
fsubs
sbb
loopne
cld
in
and
inc
imul
sub
rclb
mov
mov
nop
sahf
adc
repnz
mov
fwait
sub
repz
cmp
mov
test
mov
mov
mov
jmp
or
push
mov
lcall
mov
pop
loop
pushf
inc
pop
movb
lock
cmpxchg
movsb
aaa
mov
mov
mov
jns
mulb
testb
and
mov
xor
clc
xor
shll
adc
bnd
ljmp
frstor
enter
sub
jnp
and
sub
jg
add
pop
mov
movsb
cmp
stos
push
mov
pop
data16
add
repnz
pop
mov
jnp
push
mov
pop
and
sbb
xor
cmp
dec
or
jl
sub
xlat
imul
push
mov
and
sub
dec
xchg
pushf
daa
imulb
push
xor
pushf
xchg
dec
outsl
sbb
test
xchg
in
inc
inc
mov
sub
sbb
in
cmc
js,pn
rep
jb
mov
sbb
lock
push
sbb
pop
lret
jae
scas
cwtl
mov
mov
ja
js
ret
out
clc
iret
pop
loop
jns
dec
xchg
pop
out
insl
enter
xchg
sbb
aam
sbb
cmp
mov
adc
adc
lret
pop
cmp
xchg
pop
nop
mov
inc
sub
and
mov
xchg
aad
das
cs
aam
mov
lods
sbb
shll
pop
pop
jb
daa
ret
fwait
aaa
push
hlt
int3
bound
cmp
out
int
aaa
mov
adc
int
push
jmp
and
lahf
pand
mov
jne
ss
bound
fists
or
mov
cli
aad
scas
inc
mov
pop
pushf
repnz
scas
pop
loopne
jp
sbb
mov
cmp
mov
faddl
cli
cmp
ds
xor
inc
xchg
punpckhbw
mov
cli
std
add
popa
pop
and
xor
cmp
nop
jns
cmc
stos
mov
sub
mov
das
lret
xor
inc
stc
popf
in
push
je
jg
dec
sbb
inc
cli
int
scas
push
popf
je
pop
sub
dec
sub
addb
jmp
sbb
and
cmp
xchg
mov
inc
mov
push
xchg
mov
mov
andl
pop
stos
push
adc
fisubl
lods
pop
jecxz
sub
push
pop
jge
xor
dec
jb
inc
ljmp
aaa
out
push
pop
or
lods
adc
dec
push
int
sub
enter
or
cmp
cwtl
cmp
push
add
mov
or
scas
or
jmp
xor
scas
ss
push
push
fisubs
shl
jns
inc
or
out
nop
inc
call
pop
mov
aas
mov
jmp
dec
adc
jns
das
cmp
out
andl
in
mov
or
loopne
cmp
add
int
inc
lcall
mov
dec
mov
xor
decb
or
cs
jne
arpl
in
and
cmp
xchg
jecxz
ret
aad
mov
insb
dec
cmc
add
jl
arpl
jmp
sub
scas
mov
dec
fldcw
push
jnp
inc
jp
stos
inc
mov
sahf
dec
loopne
outsl
jge
shrl
les
clc
movsl
dec
jbe
jle
shll
and
addr16
xchg
or
outsb
sti
sub
test
movsl
add
outsl
xor
stos
xchg
lcall
sbb
mov
and
test
mov
jle
mov
into
jmp
or
fildl
sub
jmp
imul
in
adc
js
and
movb
mov
call
jno
ja
decl
stos
add
push
mov
xchg
dec
hlt
scas
frstor
icebp
inc
andb
push
pop
aam
cmc
mov
notb
dec
loope
pushf
dec
rcl
cmc
leave
fs
out
sahf
ljmp
dec
sub
test
les
sub
jno
pop
sub
mov
dec
and
cli
xchg
faddp
lret
lcall
scas
or
jo
add
stos
inc
cmpsl
rorl
stos
inc
add
pop
sub
sahf
lods
enter
lds
ja
xchg
inc
repnz
adc
cld
loop
movsb
and
stos
je
sub
insb
fists
cmp
mov
inc
outsb
loopne
sbb
sub
imul
cld
cmp
les
dec
xor
daa
scas
cmp
dec
int3
xor
adc
ret
int3
inc
xchg
fs
xchg
pop
adc
pop
insb
imul
inc
lods
adc
inc
adc
ret
and
scas
ret
sub
push
sahf
rcrl
je
adc
mov
mov
adc
ret
jnp
dec
lods
in
mov
pop
push
and
aam
xchg
pop
or
mov
lods
fcoms
cltd
push
test
mov
and
rorb
cmpsl
hlt
push
lea
mov
dec
pop
movsl
ja
lahf
xor
nop
sbb
lock
cmpsl
lds
jbe
pop
or
cmp
mov
push
addl
into
mov
inc
mov
fiaddl
cmpsb
js
mov
jne
mov
jmp
sub
cmpsb
inc
sahf
cmpsb
jecxz
dec
sub
pop
jo
xchg
mov
lcall
jmp
pop
jl
jge
leave
scas
iret
pushl
jno
enter
push
out
shlb
mov
push
cmp
lret
movsb
xchg
xor
cmp
dec
push
gs
mov
dec
shll
test
jno
into
neg
lods
or
call
mov
jne
mov
and
add
push
pop
dec
orb
mov
xor
lahf
adc
jbe
xlat
pop
pop
stc
xchg
cmp
jecxz
arpl
leave
push
jae
clc
or
mov
out
pusha
push
fisubrl
fidivl
inc
mov
sub
int
sbbl
mov
jae
push
aas
xor
pop
or
inc
out
jbe
out
sbb
dec
xor
or
rcrl
jbe
call
test
movsl
daa
rolb
adcb
and
mov
jl
inc
push
aas
scas
sbb
push
subb
ja
cmc
cwtl
mov
std
inc
fisubrl
cwtl
sub
inc
enter
arpl
shlb
add
lods
cmp
rclb
pop
into
mov
pop
xor
add
ret
scas
adc
cs
lea
push
adc
push
fcmovb
pop
mov
and
xchg
leave
inc
push
icebp
sbb
mov
or
aaa
sbb
push
adc
jg
es
mov
xlat
xchg
sub
cmp
jnp
cltd
mov
mov
es
cwtl
jmp
js
push
fldenv
mov
out
movsl
pop
aam
scas
popf
lahf
pop
fisubl
sbb
push
fsubl
jmp
mov
pusha
lds
roll
cmpsl
repz
fbld
rcll
sub
and
xchg
jne
fsubl
push
cmp
jno
in
cld
and
movsb
add
push
dec
add
jns
cs
ret
imul
and
pop
lods
lret
mov
shr
stos
test
stc
pop
sub
nop
call
lds
imul
xor
mov
mov
inc
cmpsl
dec
sarb
ss
push
xchg
cmpsl
out
xchg
leave
sbb
imul
in
fs
fisttpll
test
mov
fldenv
mov
jno
loope
jge
mov
push
or
pop
or
xchg
cmp
rcrl
add
cmp
in
test
dec
lock
insl
or
xchg
sub
and
xchg
mov
sbb
inc
fwait
or
xor
pop
idivb
sbb
imul
daa
fwait
mov
ljmp
xchg
push
es
cmp
sbb
jge
movsl
cmp
popf
push
xor
jo
lahf
push
and
mov
les
mov
push
insb
shll
incl
push
aad
shll
dec
sub
dec
pop
mov
rclb
jae
fildll
push
dec
fwait
or
cwtl
daa
sbb
push
sub
ss
inc
pop
dec
xchg
out
ja
and
sbb
scas
xchg
ss
enter
insb
stos
leave
pop
pop
sbb
cmp
clc
mov
ret
in
mov
in
call
jp
in
jne
in
xlat
mov
dec
fdivs
pushf
fwait
out
andl
in
push
stos
lock
clc
mov
sub
pop
scas
dec
cltd
push
imul
sbb
sub
or
fstl
cli
cmp
out
jge
mov
jp
jg
movsb
sub
cmp
rclb
mov
xor
inc
mov
push
pop
push
mov
sub
outsl
scas
mov
lahf
inc
rcl
cltd
stos
insl
dec
sbb
stos
testl
sub
inc
add
mov
in
mov
pop
jae
sahf
scas
fsts
add
popf
jl
xor
out
aad
jg
aam
push
pushf
jae
loope
sbb
xlat
testb
bound
das
jp
dec
pop
xchg
xchg
add
imul
mov
cld
aad
loopne
push
rcrl
hlt
or
sbb
lea
mov
add
dec
pusha
and
pop
fsubrl
xchg
and
pushf
xchg
push
and
or
jbe
in
xchg
xlat
xchg
scas
mov
and
mov
xchg
pop
ret
mov
bound
xchg
test
jnp
mov
mov
adc
jmp
mov
fistpll
dec
ret
cmp
dec
in
and
addr16
adc
inc
mov
and
lock
lds
aad
mov
testb
pop
add
repz
lret
arpl
mov
xor
lea
imul
add
call
aaa
xorb
sbb
xchg
enter
adcb
fsqrt
adc
sahf
xor
xchg
push
ljmp
sbb
xchg
aas
stos
out
outsb
aad
sub
nop
loopne
mov
or
or
int3
int3
jge
stc
adc
jbe
sbb
daa
inc
movsb
repz
pop
scas
dec
add
xor
push
test
rcrl
lret
cmovb
fsubs
out
jl
outsl
cltd
das
pop
iret
add
add
mov
loopne
cld
jg
pop
or
pop
mov
lcall
and
push
jmp
or
pop
jns
push
outsl
dec
dec
pop
jb
jo
inc
mov
stos
popa
jns
repnz
shlb
lds
add
cwtl
xchg
mov
in
pusha
clc
xchg
jg
sbb
xchg
jnp
and
sbb
sbb
xor
pop
mov
inc
adc
xchg
or
cmpsl
ds
sub
idivb
sub
xchg
shrb
mov
or
imul
jae
cwtl
movsb
xchg
out
mov
sahf
cmpsl
pop
add
pushf
sub
xorl
lcall
jg
jb
cli
or
mov
pop
cmpsl
test
dec
fwait
sub
out
into
and
ds
movsl
dec
ds
pop
adcb
scas
sub
pop
push
cmp
mov
addr16
lods
xchg
ret
and
mov
rcrb
xchg
repnz
or
jecxz
dec
mov
out
js
xchg
das
data16
pusha
mov
std
lea
inc
cmp
cmpb
add
sahf
cmp
sub
or
sbb
lods
add
xor
out
call
mov
stc
je
and
xchg
xchg
lcall
js
js
test
pusha
push
sub
mov
sbb
adc
inc
popa
xor
outsb
cmp
mov
repz
int3
std
lods
std
in
jp
xlat
xchg
xor
pop
mov
adcl
sub
loopne
pop
inc
xchg
or
decb
lods
test
push
idivl
repz
insb
and
xchg
aaa
iret
push
cmpsl
mov
stc
lds
dec
data16
jbe
mov
and
in
test
sub
or
jbe
call
cltd
leave
lcall
pop
adc
jns
hlt
or
and
push
insl
add
testb
add
jge
in
inc
pop
xor
scas
mov
mov
inc
pusha
add
outsb
jl
xor
xor
fdivl
lret
outsb
outsl
xchg
sbb
ds
jle
dec
jo
stc
je
popf
incb
and
nop
cmp
icebp
mov
aam
repz
fcoml
cli
jae
mov
inc
dec
icebp
das
rcrl
pop
or
push
xchg
jbe
or
dec
pop
pop
lock
loopne
add
or
xor
push
jbe
cmp
mov
push
hlt
sbb
ja
jg
mov
cmp
ret
pop
dec
shl
and
dec
lahf
ljmp
inc
adc
pusha
negl
jg
outsl
pusha
jle
adc
pop
lea
popf
and
fsubrl
add
jnp
fldenv
pop
mov
inc
lret
push
in
or
cmp
daa
lret
inc
pusha
push
sbb
lock
lcall
and
pop
jno
rcl
dec
pop
fbstp
lret
test
push
call
fdivs
xor
add
mov
ljmp
push
pop
pop
loop
mov
mov
imul
add
jbe
lret
dec
fisttps
cmpsb
jne
pop
cmpsl
test
jo
and
dec
mov
sbb
insb
jmp
push
jne
dec
jbe
mov
xchg
sub
inc
push
push
push
cmp
mov
movsl
dec
gs
mov
xchg
lds
popf
shll
out
mov
aas
xchg
or
in
aad
xor
push
mov
out
sbb
fmuls
outsb
test
pop
adcb
adc
ror
and
fldenv
xchg
cli
xchg
add
ret
jge
xchg
lahf
push
inc
xchg
pop
or
decb
cmp
and
jno
add
aam
roll
mov
or
push
imul
sub
xchg
cmc
outsb
scas
dec
dec
pop
push
push
insl
adc
cli
jne
test
mov
jge
das
push
adc
dec
sbb
sbb
jno
pop
sbb
fsubrs
fwait
ds
pop
jns
fstps
inc
aad
enter
outsb
push
sbb
enter
cmc
fnstenv
jp
daa
cmp
mov
daa
inc
xor
in
loope
pop
or
xchg
and
push
push
andl
rcrb
ja
mov
orl
roll
sbb
push
adc
sbb
and
cmpsl
adc
push
mov
xchg
or
aam
sbb
call
pop
and
insb
cld
js
bound
int3
fimull
cmc
jle
xor
xchg
sub
bound
sti
mov
sub
ljmp
ror
fucom
movsb
xor
movsb
xchg
mov
or
loop
pop
dec
int3
add
hlt
in
mov
icebp
ss
and
xor
inc
pop
inc
xchg
je,pt
popa
cmpsb
dec
roll
add
xlat
cld
sahf
repz
mov
aam
mov
jle
xchg
pop
push
lahf
addr16
mov
clc
test
sbb
jo
inc
xor
fsubrs
mov
push
mov
cmpsb
or
loop
push
add
sahf
mov
in
ror
jno
push
xor
cmp
jl
xchg
sub
pop
sbb
out
gs
sub
movsl
xchg
add
push
cmc
adc
jb
xlat
in
mov
je
mov
or
fcomip
mov
jo
cmpsl
cmpsl
mov
iret
movsl
loope
shll
int
adcb
cmp
xor
xchg
daa
dec
jge
adcb
push
fs
fdivs
je
or
dec
loope
sub
add
std
jne
xor
imul
sub
sub
push
iret
dec
lock
xchg
in
dec
loope
lds
xor
fwait
adc
and
dec
scas
aaa
dec
sub
ja
jnp
fsubrs
mov
sub
mov
jp
lcall
mov
adc
shll
aaa
dec
orb
sbb
sub
inc
add
movl
ja
out
outsl
mov
test
inc
adc
xlat
outsb
repz
cmc
xchg
out
outsb
push
xchg
out
push
subb
stos
jno
sub
cld
xchg
jno
test
ja
std
and
lahf
mov
sahf
fwait
das
cltd
jns
push
add
in
popf
push
out
in
xor
mov
ret
cwtl
or
outsl
xchg
movsl
mov
inc
mov
push
inc
std
or
pop
dec
xchg
dec
ds
xor
push
and
pop
jmp
xor
imul
and
ja
inc
insb
add
repz
cs
mov
cmc
cmp
jb
sub
sub
dec
dec
loope
sub
inc
sub
add
scas
loop
jne
dec
push
in
xchg
jo
cmpsl
testl
push
aad
xor
andb
and
movsl
hlt
cmp
jne
clc
addr16
add
dec
jecxz
and
inc
aas
mov
clc
out
sbb
mov
out
cmp
repz
sbb
imul
cmp
adc
inc
lret
imull
test
add
enter
sbb
jl
out
in
xchg
sub
pop
xor
pusha
daa
loopne
jge
outsl
testb
int
popf
mov
xchg
lret
inc
daa
jmp
cs
lcall
sbb
fdivrs
xlat
adc
stc
pop
dec
pop
subb
lods
xchg
sahf
inc
fidivrl
push
and
inc
lods
push
xor
adc
pop
bound
and
cmpsb
outsl
cmp
jge
pop
dec
add
lahf
aad
fstpl
fst
lock
or
cmc
rcrb
dec
cmp
push
popa
sbb
enter
and
out
mov
rclb
fst
mov
pop
sbb
aam
in
add
ficoms
xor
fistps
test
jns
fiadds
fwait
jno
jnp
xchg
jbe
fnstenv
xchg
mov
or
xchg
push
or
std
xchg
nop
int
or
addr16
lcall
sbb
pop
std
adc
test
das
das
sti
cmpsb
xor
push
insl
jae
mov
add
stc
xchg
dec
xchg
inc
cld
jecxz
cmpsb
jns
xor
adc
icebp
pusha
jb
lcall
sub
mov
push
call
or
in
insl
push
push
sub
mov
loop
lods
out
arpl
int
xchg
add
addr16
xor
and
add
cmpsl
testl
jno
out
push
lods
cmpl
xchg
dec
fistpl
stc
shrb
fs
pop
push
repnz
mov
lock
loop
stc
fstl
and
pushf
dec
dec
fs
push
int
arpl
xchg
imull
clc
decb
je
jne
fbstp
mov
aas
xor
or
cmpsb
sub
xor
mov
jmp
loop
mov
jge
dec
mov
iret
fnsaves
in
test
aaa
into
hlt
mov
mov
inc
loopne
mov
lcall
ss
test
mov
shrl
xlat
ja
or
mov
sub
pop
mov
push
movsl
sbb
mov
mov
shlb
xor
fs
pop
mov
mov
shlb
xor
pop
xchg
pop
mov
ret
out
inc
shlb
xor
add
mov
and
adc
jae
and
test
sub
hlt
xlat
popf
or
movsb
xor
sbb
sbbl
sub
pop
mov
ret
ficoml
or
sub
lods
inc
adc
inc
inc
test
cmc
push
jo
in
inc
pop
cmp
xor
push
cmc
jae
inc
fcoms
inc
pop
insl
cmp
dec
in
aas
lock
insb
and
in
inc
cmpsb
bnd
in
or
pop
inc
mov
call
repnz
push
leave
int3
push
sbb
mov
das
in
push
sbb
xchg
and
fisubrs
jle,pn
rorb
and
mov
fsubrl
inc
sbb
sub
fnstcw
sbb
pop
sti
push
add
fisubl
rcrl
and
add
sub
test
push
add
arpl
mov
js
cli
adc
adc
dec
jo
mov
out
clc
adc
push
iret
inc
push
jno
in
es
jmp
push
inc
xchg
pop
stc
ret
repz
push
jbe
xchg
jp
mov
repnz
fsubrs
out
jns
push
dec
testb
xlat
outsb
test
adc
add
lret
dec
xchg
loop
in
jle
pusha
fistpl
fcompl
mov
mov
xor
repnz
notl
mov
movsb
mov
int3
pop
sahf
stc
mov
mov
test
mov
scas
stc
jle
daa
jno
mov
or
cmp
nop
xchg
sbb
rolb
cs
jb
jb
in
pop
sti
lods
mov
mov
arpl
je
shr
xchg
pusha
pop
shrl
mov
cmpsb
sbb
push
xchg
mov
fildll
fwait
pushf
pop
scas
gs
sbb
add
pop
mov
mov
hlt
and
jo
jo
movsb
mov
add
leave
add
jl
cmp
clc
inc
notb
fwait
cmc
fs
hlt
mov
push
movsl
xlat
cmpsl
pop
lcall
gs
cmp
test
lret
shl
inc
add
js
insl
adc
ret
sbb
mov
les
and
add
jbe
xlat
xlat
mov
stc
loope
in
xchg
in
fwait
mov
dec
pop
jge,pn
add
lock
mov
fcomip
out
cmpsb
cmp
aaa
test
cmpsb
sti
aaa
loopne
push
testb
push
jmp
stos
adc
cmp
pushw
push
frstor
in
or
test
sbb
xor
push
cmpsl
xchg
pop
jbe
fadd
or
adc
push
insl
div
jns
es
cmp
lds
sbbb
sub
xchg
mov
push
adc
jae
inc
lods
push
lds
mov
xor
xlat
das
lock
mov
arpl
mov
cli
or
mov
or
sahf
popf
imul
aad
out
mov
in
add
adc
mov
dec
aaa
and
dec
bound
and
std
es
into
sbb
divl
mov
cltd
lods
jmp
ret
rolb
roll
fwait
mov
xchg
mov
mov
ds
inc
in
mov
mov
pop
es
mov
inc
pop
rcrb
fstps
das
mov
pop
pop
xor
pusha
xor
ss
cmp
popa
sahf
mov
not
ds
leave
xchg
mov
stc
pop
test
jbe
adc
cmp
fdecstp
and
inc
jl
jno
xchg
sub
test
dec
adc
adcb
mov
sahf
pop
cwtl
das
mov
xor
stc
pop
push
jge
pop
fists
push
mov
jge
outsb
popa
aaa
out
shlb
xor
mov
push
add
cwtl
cmp
fucomip
std
dec
hlt
sub
sub
call
sbb
arpl
scas
movsb
fwait
fwait
jmp
repz
enter
aam
dec
mov
mov
jg
push
mov
mov
movsb
lret
cli
jne
dec
mov
jb
shr
jae
cmp
xchg
popa
loope
xlat
or
loop
mov
mov
fisttps
mov
inc
mov
clc
imul
inc
inc
inc
addr16
out
mov
int
test
mov
aad
mov
sub
pop
pop
insb
dec
push
int3
and
jno
dec
push
rclb
mov
js
or
xchg
shlb
lret
pop
insl
jg
stos
adc
adc
xor
sbb
pushf
enter
in
test
sbb
test
add
enter
mov
cltd
xor
and
dec
inc
push
divl
pop
sbb
nop
ficomps
sbb
lea
clc
stc
mov
cmp
fsubrp
pop
pop
adc
fwait
shll
mov
sbb
lock
pusha
out
in
inc
shll
mov
or
je
or
lahf
sub
xchg
cmp
cmc
jne
outsl
leave
frndint
call
xor
sti
inc
add
mov
cwtl
or
mov
cmp
in
pop
push
cmovle
xor
ljmp
imul
inc
into
push
or
mov
push
out
sub
or
lds
in
pop
inc
int3
int
xchg
mov
xor
hlt
mov
push
add
nop
mov
and
push
out
leave
into
gs
out
idivb
mov
mov
push
xor
ds
sub
dec
and
push
les
cmp
daa
cmp
jnp
or
out
xchg
sub
loop
test
out
xor
or
jns
decb
xchg
inc
into
xchg
aam
add
mov
iret
sbb
or
loope
idivb
add
or
adc
add
mov
push
sub
lods
fldcw
aad
jae
mov
jns
dec
sub
and
lea
dec
fbstp
dec
popf
stos
adcb
add
dec
xor
inc
and
sbb
lea
scas
adc
push
call
sub
fcoms
stc
add
mov
push
ljmp
mov
push
je
xchg
mov
dec
xlat
jge
lds
es
fstpl
dec
in
inc
and
lret
cld
stos
jge
incb
test
out
std
adc
fdivrl
push
stos
mov
fbstp
aam
cs
mov
xchg
outsb
int
sub
jbe
fbstp
gs
push
pop
or
stc
nop
cmp
in
mov
sahf
or
int3
add
mov
in
in
or
jge,pn
push
pop
aad
or
lret
and
call
push
adc
aaa
xchg
jmp
fdivl
mov
test
pop
add
push
test
xor
mov
lret
jb
movsb
cmp
in
test
pop
test
add
push
pushf
inc
insb
pop
dec
mov
pop
fldt
ret
ds
sbb
dec
jecxz
mov
jge
stos
out
lds
decl
popa
dec
dec
adc
hlt
pusha
xchg
mov
xchg
sub
xchg
mov
and
add
stos
je
sbb
ficompl
pop
ja
sub
add
xchg
scas
fldenv
iret
lcall
jne
fidivrl
outsb
mov
cmc
pop
pop
mov
lret
dec
cltd
insb
dec
cmp
mov
adc
mov
stos
repz
pop
mov
fstl
cmp
jp
in
int3
push
decb
mov
inc
sbbl
in
out
pop
sbb
sub
sbb
cmpb
xchg
dec
aam
in
xor
add
mov
test
cmc
dec
pop
dec
movsb
cld
lcall
lcall
fisubrl
adc
jae
movsl
cmp
sub
scas
inc
frstor
mov
adc
mov
inc
pusha
and
mov
out
mov
add
cwtl
in
jp
ljmp
xlat
jle
sub
dec
aam
and
add
jno
add
jecxz
sbb
xchg
out
jne
les
dec
sub
pop
into
inc
jl
cmp
mov
stos
clc
outsb
arpl
inc
sbb
cli
xchg
cld
roll
sbb
cmp
mov
das
stos
addr16
das
pusha
mov
movsl
sbb
pop
negb
or
mov
xor
or
dec
es
faddl
dec
iret
sbb
pop
xchg
jp
xchg
push
xchg
enter
xor
lret
mov
xchg
sbb
cld
fadds
nop
mov
flds
cltd
or
and
lret
adc
xor
xor
and
dec
scas
push
sub
notb
call
xor
or
divb
mov
xor
lea
cld
lcall
in
xor
mov
jnp
xchg
mov
push
dec
cmp
loope
call
stos
clc
sbb
frstor
adc
mov
stos
push
ret
std
adc
cs
adc
sahf
icebp
sbb
mov
dec
insl
add
xchg
and
cs
adc
jno
push
mov
shlb
push
cltd
lea
mov
fnsave
sbb
xchg
push
sti
xchg
test
cli
jg
mov
xchg
aaa
or
or
outsl
and
cmpsb
lcall
mov
xor
cmc
popa
xor
mov
shlb
inc
cmp
loope
subl
aam
xlat
cmc
mov
bswap
leave
out
jb
lret
sbb
inc
ja
sbb
imul
sub
daa
add
imul
pop
stc
cmp
jecxz
out
enter
and
in
lcall
sub
and
mov
lock
add
push
adc
stos
jmp
xchg
je
hlt
pop
test
xor
mov
aam
xchg
stos
mov
lods
jmp
lea
sbb
mov
fnstcw
add
sub
mov
fiadds
xchg
push
je
aad
aaa
movsl
icebp
sti
mov
insl
in
xchg
stc
iret
mov
push
mov
sbb
mov
sub
adcb
sbb
mov
jle
or
sbb
inc
add
sub
ss
imul
push
mov
push
popa
mov
popa
add
lods
fcoml
outsb
add
pop
mov
dec
test
sbb
mov
sbb
mov
mov
hlt
iret
cwtl
mov
ret
mov
ljmp
pop
out
fsub
scas
test
sahf
xchg
lahf
sbb
iret
lock
xlat
push
jnp
dec
jnp
mov
mov
dec
out
pop
adc
jg
cmc
aaa
and
mov
ret
scas
inc
out
es
rcl
lock
bnd
int3
cmpsl
enter
dec
fadds
sbb
out
sub
jbe
pop
or
repnz
push
sti
cltd
pushw
push
mov
push
popa
and
inc
xor
je
pop
jecxz
inc
hlt
xchg
adc
mov
mov
push
fnstsw
mov
lock
in
ja
push
jle
pusha
mov
into
and
cld
mov
cli
xchg
stc
adc
fs
repz
cmp
cmp
repnz
sub
rolb
mov
xchg
ror
icebp
mov
fdivrs
mov
sahf
xchg
push
inc
fbld
pushf
ret
into
int
bound
and
sbb
int3
mov
test
inc
sbb
adc
mov
aam
adc
stos
push
aad
xchg
pop
mov
pop
jo
mov
cmp
sahf
pop
dec
andl
ss
je
ret
mov
pusha
pop
jmp
xor
loopne
leave
push
clc
subl
leave
xor
arpl
cmp
cmp
pop
cmp
testl
sbbb
jmp
cmp
add
adc
mov
popa
xor
dec
xchg
xchg
inc
mov
jl
push
out
or
jo
or
bound
pop
push
sbb
sahf
cmpsl
inc
or
inc
loopne
or
add
xchg
fistps
sbb
xor
les
test
ret
and
fisttps
sbb
xchg
not
xorl
fs
add
popa
clc
push
mov
int
popf
add
push
lret
pop
data16
sarb
xor
repz
loop
sub
push
lods
movsl
cmp
sbb
dec
sub
bound
xchg
push
jne
jecxz
cmp
popf
std
or
sub
sbb
pop
idivl
mov
dec
and
in
aas
test
fstpt
in
sub
les
adc
imul
push
andb
cmpsl
sbbl
and
mov
sbb
mov
insb
in
enter
outsb
aam
ret
aam
insl
or
xor
sub
fbstp
inc
bound
shll
or
decb
in
push
inc
push
subb
mov
andb
mov
push
popf
dec
popf
sbb
sahf
in
cmp
jmp
cmp
mov
lock
out
std
and
cli
popa
cmp
push
dec
pop
xchg
ja
out
push
lods
sbbl
xchg
and
add
out
jmp
outsb
pop
rorb
push
mov
and
scas
add
jecxz
int
mov
into
rorb
aas
sub
not
loope
test
imul
xor
mov
push
sarl
lods
outsb
stc
sbb
ret
out
adc
xor
mov
ret
cwtl
popf
insb
stc
or
or
jnp
cltd
pusha
ffree
inc
subl
xchg
sahf
insb
leave
mov
stos
mov
cmp
mov
jbe
jecxz
stos
aad
push
mov
js
bound
sub
sub
dec
jne
negl
push
xchg
dec
popa
mov
imul
sbb
adc
mov
iret
mov
or
sub
sub
lret
sub
or
aam
add
inc
gs
ds
aaa
out
jo
sbb
lea
dec
pop
lcall
lods
cmc
adc
xor
inc
jns
mov
loopne
sti
pop
mov
dec
adc
fcompl
mov
pop
es
pop
lock
jle
add
cwtl
push
cwtl
sub
cmp
in
ja
sahf
daa
fildll
sbb
mov
data16
jb
adc
cwtl
or
dec
testb
call
testl
cmp
cltd
lcall
push
dec
push
out
jecxz
mov
or
inc
jb
in
lock
add
cli
jb
mov
addr16
call
fs
xchg
xor
add
out
mov
fsubrl
test
aad
call
jae
movsb
push
mov
jns
sub
lret
outsl
mul
cmpsb
nop
dec
sub
imul
push
jbe
arpl
mov
ljmp
jecxz
xor
cmpsb
and
add
cmp
js
mov
incb
lcall
and
or
test
stos
loop
and
arpl
pushf
adc
ficompl
pop
or
std
pop
mov
or
test
add
enter
scas
fwait
pop
push
and
dec
jp
mov
xchg
or
xlat
add
inc
and
arpl
push
insl
push
mov
jo
lea
test
adc
cmc
lret
test
pop
mov
lret
lret
loop
sbb
test
inc
push
pop
lea
push
jl
subl
mov
dec
dec
shrl
outsb
jns
insl
fucomip
sti
or
out
sbb
xor
and
cmp
out
cmc
cmp
cwtl
sbb
ret
mov
icebp
les
sub
sbb
negl
fldcw
sbb
loop
mov
xor
nop
out
push
shlb
mov
or
gs
mov
push
jge
outsl
jne
mov
lahf
stos
inc
mov
rcl
into
test
in
cmc
data16
imul
ljmp
es
pop
push
fs
stos
cmp
mov
inc
or
test
inc
add
sub
test
jecxz
jae
loope
arpl
mov
xchg
pop
jno
xchg
xor
jmp
notl
loop
sbb
sarl
or
push
add
cmp
cmpsl
push
ja
fmull
dec
out
in
adc
shr
out
jbe
jecxz
push
in
xor
push
xchg
dec
out
mov
imul
sub
ret
or
adc
stc
les
pop
jae
gs
mov
pop
mulb
or
cs
mov
push
xor
add
insb
mov
adc
imul
mov
mov
mov
jnp
sbb
jge
mov
add
push
sbb
push
stos
inc
inc
leave
leave
cmp
pop
leave
pusha
dec
dec
incb
mov
andb
pop
lock
inc
xchg
ljmp
cmp
xor
xchg
mov
ffree
sub
mov
cmp
daa
outsl
lcall
jmp
pop
xor
jle
add
jl
nop
sub
sbb
rol
sahf
lods
stc
mov
adcb
inc
xchg
ja
push
jno
out
cmp
imul
mov
mov
mov
mov
cmc
jns
out
divl
insl
fwait
mov
jle
fistps
insb
inc
icebp
lds
mov
lret
jae
xchg
in
test
push
lahf
rcrl
movsl
pop
out
iret
iret
in
push
jbe
lods
or
sti
mov
popa
aad
cld
mov
test
out
xchg
repnz
pop
outsb
test
out
push
add
mov
mov
jne
out
dec
arpl
jmp
xorb
mov
add
negb
sub
stc
mov
jg
dec
test
jb
aam
cmp
scas
arpl
mov
mov
cmpsb
fwait
loopne
shll
and
pushf
sub
and
loope
lret
mov
popf
loope
dec
aas
aaa
add
imul
pop
scas
ljmp
dec
mov
mov
out
inc
aaa
mov
icebp
push
aad
dec
sahf
cs
sub
test
mov
inc
lcall
and
test
push
push
lcall
bound
fistpll
or
jmp
pop
add
sbb
arpl
push
cmpsl
fisubrs
and
cmpb
or
rcrb
mov
xor
jno
xchg
dec
cltd
xchg
sub
loop
sar
add
xchg
jns
inc
push
addr16
xor
lret
sbb
pop
pop
cmp
mov
data16
pop
pop
icebp
js
mov
mov
lcall
xor
repz
frstor
push
ja
insl
jmp
or
stc
or
or
jg
les
mov
into
int3
das
mov
mov
push
fsubr
js
pushf
scas
lahf
jge
daa
cmpsl
fdivl
cmp
sub
pop
lret
popa
addl
shrb
fnstsw
fwait
add
inc
lret
inc
inc
push
add
push
dec
rorl
in
int3
das
push
lds
test
pop
insl
dec
sbb
mov
je
fisttpl
mov
and
inc
stos
jnp
sbb
ret
pusha
inc
xchg
arpl
dec
fnclex
mov
dec
jne
test
int3
sub
or
push
cmp
xor
stc
je
xlat
jmp
inc
mov
sub
lock
fsubrl
sbb
sbb
movsb
adc
jl
outsl
cmp
mov
pusha
xor
sub
pop
gs
dec
lods
lret
sbb
cmc
rclb
icebp
cmp
mov
es
jo
sbb
imul
dec
pusha
stc
and
cltd
leave
dec
inc
lahf
sub
lock
pop
mov
cwtl
xor
daa
jno
dec
and
push
mov
mov
xlat
stos
rorb
xlat
xchg
jmp
mov
shl
pop
mov
adc
std
sub
cmp
dec
hlt
mov
stos
add
rcrl
dec
aaa
andb
push
cmc
fnsave
popf
js
cmpsb
xchg
xchg
push
inc
xchg
nop
add
xchg
add
int3
jb
arpl
fsubr
pop
outsb
and
lcall
aam
mov
mov
lcall
pop
mov
outsb
xor
cltd
lock
in
jl
sbb
jle
pop
lods
mov
mov
mov
jne
pop
mov
add
ret
sbb
mov
and
adc
fs
lock
loopne
sub
and
out
outsb
jl
adc
lock
imul
loope
jp
push
pop
icebp
mov
lcall
out
adc
aaa
outsb
add
fadds
dec
in
jb
mull
sbb
int3
xor
mov
sub
loope
cmp
inc
movb
or
adc
dec
jecxz
cmp
js
and
call
cmp
jp
xchg
stos
fsubl
dec
addr16
icebp
je
dec
mov
mov
xor
pop
insb
shl
push
fbstp
add
iret
and
cmp
std
imul
mov
mov
sti
cmp
or
out
mov
loope
cld
movl
add
lret
push
mov
add
fs
stos
loope
dec
ffree
cmpsl
or
mov
or
or
and
test
fwait
cwtl
loope
test
je
jmp
xchg
fstpl
or
iret
mov
out
rcl
pop
sub
icebp
loope
mov
xchg
cmp
xor
jne
cmc
sarb
loopne
inc
aam
push
lret
cltd
push
add
pop
xor
jecxz
enter
sub
pop
fidivl
nop
lods
push
movsb
xor
jl
test
sti
sar
xchg
pop
and
push
js
leave
imul
sar
xchg
pop
and
add
into
pushf
imul
out
and
test
inc
xor
mov
les
insl
mov
pop
cmc
mov
ret
jl
outsb
test
ds
mov
and
jo
popa
clc
lods
adc
inc
andb
fsts
sub
mov
rclb
jno
sbb
flds
test
mov
shlb
mov
cmpsb
out
out
test
cmp
ja
sbb
lea
leave
mov
mov
mov
mov
cmp
sbb
pop
out
test
xchg
add
xor
cmc
fnsave
sub
push
push
pop
xchg
sub
jae
mov
push
inc
rcrl
add
fidivl
out
xchg
gs
mov
mov
mov
push
dec
mov
cmp
pop
iret
shlb
pop
mulb
mov
ret
dec
in
mov
cld
loope
sbb
push
jl
adc
insb
add
mov
daa
cmc
add
pop
negb
sahf
into
gs
push
lret
lock
andl
call
add
jmp
push
sbb
call
insl
imul
call
and
add
stos
cmc
scas
inc
daa
fiaddl
xchg
or
push
call
pop
inc
outsl
push
jb
fsubrs
orl
jno
stos
inc
add
sbb
pop
dec
repz
clc
inc
inc
imul
fiadds
sub
or
data16
dec
out
das
pop
cwtl
das
clc
cmp
dec
dec
mov
jns
jnp
dec
stos
jne
dec
cmpsl
lret
shrl
enter
push
push
out
mulps
cmp
pop
ja
nop
push
mov
inc
mov
jno
jbe
sub
xchg
idivl
cmp
sub
shufps
inc
fisubs
fwait
xor
call
mov
fnsave
pop
scas
add
sti
xchg
or
mov
les
adc
mov
loopne
xor
xchg
imul
dec
call
xchg
cmpsb
aas
mov
jno
cld
xchg
push
mov
sbb
inc
jge
stc
scas
jae
or
ret
nop
daa
cmc
mov
mov
inc
adc
rolb
test
fs
out
xchg
mov
cmp
mov
or
or
pop
cmp
je
sbb
add
test
sub
jns
push
mov
ret
xor
cmpsb
push
mov
cmp
add
jbe
xor
bound
movsl
cmp
mov
pop
jmp
xor
xchg
or
jmp
xor
pushf
push
mov
inc
jmp
xor
jecxz
sub
movsl
cmp
cmp
imul
pushf
sub
or
jo
fbstp
stos
push
in
fdecstp
aas
es
xlat
outsb
je
pop
hlt
je
push
out
ret
xchg
adc
pop
call
adc
jne
jecxz
mov
xchg
sub
aad
cwtl
add
cmp
push
and
xor
xor
pusha
test
lret
add
jno
or
sti
xchg
push
sub
scas
mov
jno
sub
imul
mov
xchg
cmpsl
bound
xchg
jne
push
test
mov
ss
lds
cmp
xchg
push
in
mov
outsl
fnsave
fbstp
mov
lret
sbb
lahf
push
shrl
mov
mov
imul
inc
leave
mov
push
vphaddubd
nop
jmp
bnd
mov
stc
nop
dec
mov
into
mov
pop
sahf
into
dec
pop
idivb
sbbl
in
adc
arpl
pop
xchg
mov
in
or
and
push
mov
loop
jns
mov
insl
iret
data16
ja
cmpsb
cmp
xchg
jno
cmp
mov
jbe
xor
jb
out
cwtl
cmp
int3
jbe
loopne
pop
insl
add
jb
ret
fnsave
and
xchg
jb
loopne
test
mov
std
xchg
cmpsl
popa
stc
nop
xchg
jno
dec
movsb
test
je
je
mov
popf
jno
aam
xchg
or
outsl
imul
cwtl
lea
mov
mov
insb
dec
in
lea
shlb
mov
jae
or
xchg
cmp
shll
push
stc
nop
test
jb
xchg
jne
jnp
push
stos
push
cmc
mov
cwtl
dec
out
gs
repnz
pop
dec
loopne
xchg
mov
addr16
aam
jge
xchg
inc
scas
inc
js
gs
mov
test
data16
dec
adc
mov
outsb
sti
xchg
lahf
xor
pop
repnz
pop
hlt
xchg
lahf
outsl
mov
not
je
loop
pop
cmpsl
ds
push
adc
cli
rcrl
dec
pop
sahf
jge
fnstenv
mov
loopne
inc
cmpsl
jae,pt
sub
pop
mov
pop
testb
stos
inc
je
jp
ds
dec
jecxz
sub
xchg
pop
out
into
gs
aam
or
popf
xor
sub
call
lods
mov
pop
sti
or
adc
dec
pop
lods
inc
nop
outsb
repnz
rcll
repz
xor
push
adc
xchg
lcall
mov
pusha
adc
and
mov
aad
xchg
loopne
les
xchg
xor
xchg
push
leave
pop
out
mov
ret
mov
jl
ret
lea
pop
ret
mov
jae
pop
pop
out
lea
sub
mov
mov
gs
xchg
dec
loope
mov
leave
nop
push
push
out
xchg
pop
jo
stos
inc
pushf
mov
jge
mov
jl
jno
scas
inc
pop
test
movsb
cmp
inc
xor
jbe
sahf
xor
in
push
mov
ds
das
outsl
xor
stc
push
mov
jmp
aas
cmp
insl
cmp
xchg
push
shlb
mov
push
loop
stc
je
push
movsl
imul
pushf
xor
fnsave
or
sub
mov
loop
mov
cmp
and
mov
add
stos
js
call
ror
jne
cltd
mov
ret
clc
cmp
outsl
sbb
push
mov
lods
mov
loopne
pop
adc
or
adc
push
inc
xchg
mov
fsts
xchg
jmp
and
cmp
xor
mov
int
mov
into
gs
scas
xchg
sub
xor
pop
sub
sbb
mov
loope
jnp
movsb
cmp
out
lret
push
push
jmp
sahf
and
ret
mov
les
hlt
leave
push
sub
ljmp
mov
rorl
rcll
push
inc
loop
lcall
jl
mov
ljmp
pop
inc
rorl
push
fs
stc
xchg
and
lea
hlt
mov
jle
xor
or
push
sbbl
sbb
mov
inc
jbe
mov
imul
loope
pop
cmp
push
dec
nop
aas
movl
hlt
pop
sub
pop
cmp
ss
in
inc
sbb
xor
pop
pop
and
repz
inc
fiaddl
cmpsl
popa
lods
sbb
fs
mov
xchg
xchg
xor
dec
aam
js
add
jnp
and
adc
dec
inc
xor
stc
xchg
rcrb
or
rcrb
sub
sbb
push
mov
sbb
adc
bound
neg
push
mov
or
push
adc
in
sub
aas
mov
int3
lret
add
ja
and
je
stos
inc
push
cmp
xchg
pop
into
mov
mov
xchg
hlt
xor
mov
mov
in
arpl
push
inc
xor
adc
pop
xor
sub
jle
lea
xchg
mov
lock
lret
lcall
fldt
mov
mov
mov
jno
mov
jg
test
xor
and
mov
ds
lock
test
sub
insl
cmp
sbb
js
xor
inc
shl
mov
inc
call
inc
mov
lock
xor
and
aas
add
adc
jnp
and
xchg
sub
stos
outsl
aas
cmp
xor
or
inc
xchg
dec
mov
push
cmp
mov
push
pusha
jmp
or
lea
shrb
jnp
cmp
dec
shl
pop
fnsave
or
add
in
xor
mov
in
in
dec
gs
sarl
xlat
imul
fstl
sbb
push
xor
movsb
cmp
mov
adc
pushf
nop
sub
add
jae
jl
sti
xchg
insl
mov
out
arpl
mov
dec
loopne
sbb
out
hlt
adc
mov
or
push
xlat
int
aad
push
lcall
and
sbb
gs
cs
test
jl
movsl
jmp
xor
stc
fbstp
or
mov
push
or
bnd
enter
repz
daa
mov
loope
or
faddl
cs
jl
mov
or
movsl
jae
out
mov
sti
push
lods
shlb
std
hlt
lods
fbld
or
sarb
dec
aaa
les
jbe
loop
inc
and
popf
ja
std
sub
xchg
mov
adc
push
divl
dec
jns
mov
movsb
jne
adc
push
or
pop
lds
add
sub
scas
jae
and
outsb
xchg
je
xor
imul
cmpsb
mov
enter
mov
aas
inc
mov
xor
push
jmp
pop
pop
or
arpl
mov
and
bound
inc
cli
jno
rorb
mov
hlt
and
push
add
in
aad
mov
xor
into
xchg
icebp
sub
leave
ss
iret
mov
fstpl
fisubrs
ret
fwait
inc
enter
faddl
cmp
sti
and
sbb
fst
push
fstpt
in
stos
fildll
aaa
rcl
mov
bound
lods
test
repz
and
lea
dec
loope
inc
divb
repnz
clc
push
fs
out
sub
pop
outsl
sub
lea
xchg
addr16
pop
pusha
test
mov
xor
cld
es
lds
lret
xor
adc
sahf
cmp
jbe
mov
test
mov
jg
lcallw
sbb
jne
in
sahf
popa
clc
sub
pop
ret
jne
pop
scas
cmp
mov
roll
pop
cmpsb
cwtl
enter
or
cwtl
xchg
enter
mov
mov
sbb
popa
mov
xchg
xchg
xor
outsb
mov
imul
lret
popf
sub
cmp
adc
xchg
mov
pop
inc
mov
mov
bound
sub
push
call
push
xchg
or
cs
imul
inc
jnp
xor
push
aam
test
and
fisttps
push
movlps
lea
and
in
sbb
and
push
xorb
pop
test
mov
inc
xorl
mov
jno
mov
mov
loop
dec
mov
mov
arpl
mov
jns
ja
or
outsl
xchg
icebp
cmc
nop
outsl
mov
or
outsb
add
jp
int
lcall
dec
jnp
rcrl
mov
push
je
fildl
pop
imul
les
lcall
dec
shrb
movsl
subb
mov
sahf
push
mov
adc
cmp
repnz
lock
mov
movsb
fs
aaa
into
xorl
xchg
fs
sti
insb
mov
cltd
adc
out
xor
bound
xchg
push
and
jb
jno
lret
icebp
inc
mov
repz
cmpsb
adc
aam
sbb
or
mov
mov
mov
aad
enter
mov
stos
aas
out
stc
jle
sarb
cmp
mov
outsl
mov
pop
adc
pushf
inc
dec
mov
push
add
adc
in
mov
and
scas
int
repnz
imul
push
xchg
and
pop
cltd
setne
push
les
jnp
mov
imul
sub
and
std
mov
sub
adc
pop
sahf
les
adc
cmp
aad
jbe
testb
call
pmuludq
je
sbb
mov
or
jb
and
testl
out
imul
mov
ds
jae
fidivrs
ss
sbbb
push
mov
cmp
sahf
jl
repz
data16
movb
mov
ds
lds
mov
divl
mov
dec
rclb
sbb
push
lcall
xchg
sub
jle
and
pop
add
cmc
popa
mov
sti
jle
mov
xchg
out
cmpl
outsb
mov
or
pop
cmc
jne
cmp
add
sbb
mov
fdivrl
jmp
ret
aad
and
adc
je
pop
dec
cli
pop
icebp
mov
ret
fcom
dec
loopne
ficoml
stos
xchg
jge
fidivrs
ret
xlat
push
xchg
cmpsb
js
add
mov
cmpsb
sub
popf
xor
dec
sub
xor
push
out
xchg
or
add
mov
ds
xor
mov
inc
or
push
mov
or
push
mov
sbb
pop
andb
lock
push
mov
jns,pt
cmp
ljmp
sub
pop
dec
inc
lods
je
inc
xchg
jle
push
mov
add
fstpt
jae
shlb
xor
xchg
jns
or
cmpsb
stos
pop
and
pop
adc
jne
sbb
cmpsl
pop
loopne
push
adc
in
lock
aaa
rorb
mov
loop
rcrl
repz
test
out
rorb
dec
ror
cmpsl
cmp
repnz
mov
stc
out
sbb
sub
negl
loop
inc
ret
pop
mov
jecxz
cmp
cltd
add
xchg
sbb
cld
mov
cld
adc
test
aad
cmp
xor
xchg
push
adc
movsl
out
sbb
cli
xchg
shlb
pop
push
repz
lret
cmp
fmull
push
xchg
addl
pop
mov
fimull
leave
pop
mov
add
dec
sub
xchg
divl
call
clc
jl
fimull
fs
or
shl
sub
andb
mov
data16
xchg
xchg
sarl
in
arpl
loop
insl
lahf
jne
fldl
xor
jne
cmpsl
sub
inc
ret
add
cmc
mov
shll
sarl
inc
cmpsl
pusha
inc
movsb
pop
xbegin
sbb
scas
int
or
out
adc
shl
ds
leave
push
popf
fnstsw
stc
push
fwait
jle
sub
mov
stos
cmp
inc
test
xchg
sub
push
int3
jmp
icebp
nop
cltd
stc
movsb
into
gs
scas
insl
lahf
sub
gs
arpl
dec
mov
subb
mov
add
das
ficompl
jbe
mov
and
push
ljmp
xor
cmp
and
repz
ja
cmpsb
popa
fwait
cld
sub
mov
test
inc
fsubp
mov
sub
xchg
mov
pop
cmc
in
test
add
std
xor
rorb
mov
mov
icebp
clc
xchg
out
xor
popa
movsl
icebp
or
mov
dec
aad
or
mov
ret
aad
jg
shrl
rclb
lret
cli
lods
jne
fsubrl
loope
stos
xchg
sub
or
jne
xor
sarl
lret
and
lock
sub
sarl
sbb
mov
aas
icebp
cmpl
cmc
adc
sti
scas
aam
clc
out
sbb
mov
xchg
sub
sub
jbe
fwait
xchg
nop
xchg
sbb
clc
push
sub
xlat
push
jmp
mov
adc
xor
pushf
nop
js
fs
inc
xor
jl
push
cs
je
xor
sti
cmp
hlt
test
daa
fldenv
out
rol
xor
nop
int3
push
adc
sbb
push
out
in
pop
leave
mov
mov
fcom
test
inc
add
inc
and
jns
cmpsl
and
sti
xor
jb
mov
in
or
cwtl
arpl
stc
xchg
jbe
ja
fnstenv
mov
push
push
xor
push
xchg
add
and
pop
ret
lret
fnstsw
mov
lcall
cmp
lcall
mov
add
jg
xor
movb
pop
lret
or
mov
aam
cmc
mov
test
cli
scas
addb
cmpsl
jns
fld
sbb
pop
loope
hlt
cmp
movsl
mov
mov
cld
xchg
cld
das
in
fwait
xchg
cmpsb
movsl
repnz
sbb
rcl
add
into
or
push
mov
push
and
orl
je
sub
mov
adc
cwtl
or
cmp
imulb
rcrb
pop
inc
fcmovbe
dec
in
pop
sti
xchg
mov
mov
enter
stc
rol
loope
cmp
mov
out
adc
mov
push
call
jecxz
popa
cltd
push
scas
leave
pusha
std
push
jge
inc
sbb
bound
les
loope
ret
mov
pop
lds
push
mov
xchg
mov
xchg
jae
and
jmp
insl
mov
xchg
outsb
jne
xor
cmp
arpl
ds
mov
or
insl
inc
lahf
ss
negb
sbb
cmp
adc
aas
or
mov
sub
mov
pop
push
sbb
gs
xchg
test
sbbb
lret
xchg
mov
push
pushl
pop
test
xlat
inc
cmp
pop
cwtl
pusha
imul
or
add
dec
scas
push
insb
add
fidivl
jmp
inc
cmc
fnsave
push
enter
stos
jbe
lock
mov
das
cmc
call
add
push
iret
mov
sbbb
mov
jl
mov
mov
and
insl
lahf
pop
adc
and
sbb
imul
pushf
mov
cmpb
cmpsb
cmp
or
lock
or
bound
flds
jmp
cmp
dec
mov
cmp
sbb
pop
rclb
iret
push
ss
inc
fidivl
je
outsl
imul
mov
adc
adc
dec
addr16
mov
pop
cwtl
andl
jl
mov
lock
cmp
mov
stc
pop
xlat
insl
loopne
cmp
add
xor
test
and
pop
std
repnz
montmul
mov
sub
jbe
dec
jo
mov
mov
jmp
cld
add
cltd
xchg
xchg
es
movsb
jl
repnz
adc
fwait
mov
incb
out
lahf
mov
lods
pop
mov
inc
in
into
push
popf
push
scas
aaa
push
std
inc
jne
popa
scas
and
sbbl
nop
loope
sub
jmp
push
or
xor
jle
or
dec
imul
sbb
jne
xchg
push
shrl
mov
repnz
lds
pop
push
or
push
gs
adc
and
jnp
fisubrs
fadds
push
mov
push
lret
fdivl
into
out
cs
les
adc
jecxz
xor
sub
clc
and
jg
out
lret
aad
or
pop
fninit
pop
lock
jmp
mov
sbb
arpl
sti
xchg
subl
ret
mov
divb
fcmovb
clc
cmp
mov
mov
scas
popf
outsl
mov
out
repnz
leave
mov
fsubrl
mov
push
pop
lds
xchg
mov
sbb
jns
inc
les
pop
mov
push
mov
pop
sti
pop
pushf
insl
shlb
dec
and
fidivrs
jnp
roll
and
pop
inc
aas
loop
inc
adc
test
ds
xor
or
xlat
dec
rorb
cmp
aaa
and
jne
add
js
divb
xor
imull
lods
push
pusha
push
jecxz
sub
jno
scas
ss
dec
in
test
mov
scas
inc
jo
movsl
popa
mov
cmc
xchg
jp
mov
pop
les
leave
outsb
sarl
ret
pop
shrb
sbb
inc
aad
mov
imul
jae
inc
ljmp
inc
adc
inc
aam
in
and
mov
daa
pop
inc
cld
adc
jge
mov
ret
mov
jno
pop
testl
xor
popf
xor
test
incl
mov
push
sub
add
iret
inc
xor
outsl
lods
push
fwait
outsl
pop
stc
ret
and
dec
mov
sti
or
sub
add
out
mov
lret
add
cli
test
jp
lds
pop
shl
or
dec
xchg
mov
fucom
in
pusha
out
jno
jbe
fwait
popl
push
dec
lds
imul
and
rep
push
adc
out
push
add
cmp
sbb
or
mov
test
js
pop
test
pop
inc
xchg
jge
dec
sbb
pop
dec
xchg
sub
add
inc
add
lret
sub
or
stos
imul
mov
jp
jb
and
jbe
fadds
enter
cmp
aaa
sub
pusha
ret
pop
xor
push
or
lds
add
lods
add
pop
inc
mov
mov
lcall
push
sbb
cmp
outsb
pushl
push
push
fnsave
in
xor
addr16
pop
ss
jl
call
mov
std
lret
pop
bound
sarb
mov
test
shrb
lock
insl
add
movsb
dec
and
outsb
cmp
cmp
jge
scas
xor
push
xchg
iret
dec
shr
out
mov
fstpl
add
cmp
pop
mov
add
xor
push
into
dec
jge
add
push
cmp
mov
cmp
mov
sbb
push
mov
dec
sub
shrl
mov
shlb
and
stos
jle
cmp
mov
sahf
nop
fcomip
pop
mov
stos
insl
pushf
sub
in
orb
mov
bound
or
mov
xor
push
aam
pushf
push
cltd
adc
ss
mov
adc
icebp
wrmsr
lock
movsl
hlt
xor
stc
or
into
jecxz
mov
add
pop
mov
in
add
mov
jmp
adc
arpl
mov
test
xchg
test
call
int
xor
inc
jb
adc
or
dec
push
xchg
cli
push
jns
jle
nop
psubw
pop
mov
addr16
in
push
loopne
fcmovb
push
adc
push
int3
sbb
loope
and
mov
lea
jbe
xchg
and
push
adc
jbe
inc
push
push
and
xchg
push
mov
xor
and
xchg
bound
or
or
loopne
pop
sbb
popa
sahf
sub
pop
xchg
push
cmpsb
popa
mov
pusha
cltd
add
xchg
adc
jecxz
mov
add
cmp
pop
aas
xor
inc
mov
xor
lds
scas
daa
mov
or
dec
sarb
cli
cmp
enter
jp
or
rolb
lret
or
inc
jae
popf
popa
dec
cmp
pop
xor
pop
adc
out
test
dec
add
adc
and
imulb
sbb
mov
jle
add
dec
das
out
stos
xor
inc
test
push
mov
xchg
push
jnp
jnp
or
jo
leave
aaa
xchg
xchg
imul
dec
cmp
mov
jecxz
mov
mov
bound
sbb
dec
rcl
push
nop
aad
hlt
in
sbb
stc
stos
dec
sbb
outsl
out
and
mov
or
les
jl
cmpsl
rorl
mov
jl
in
sbb
pop
adc
pop
hlt
pop
ret
imul
cs
mov
cmp
call
scas
pop
add
nop
sub
add
insl
mov
jae
inc
adc
cmpsl
sub
push
and
fcoms
outsl
xchg
arpl
dec
loop
data16
arpl
dec
mov
push
mov
hlt
mov
pop
cmpsl
mov
call
fldenv
fdivrl
rorb
sub
jmp
pop
lret
lahf
in
sub
cmpsb
cmp
or
mov
mov
xor
or
out
pop
sbb
and
mov
shrl
test
cmp
sbb
jmp
inc
ja
cmpsb
inc
pusha
mov
cmp
fiaddl
mov
mov
add
out
notb
repnz
enter
adc
fnstenv
cli
in
out
or
imul
lods
outsl
movsb
outsl
orl
cmp
in
ret
jp
jmp
in
dec
sub
jnp
lock
popf
jae
or
dec
lds
mov
sarl
cs
cs
out
outsl
movsb
or
pop
popl
stc
daa
mov
std
lret
push
lds
xchg
shll
add
sbb
jbe
push
enter
mov
lea
push
sbb
adc
cmp
dec
xchg
cmp
pop
xor
iret
xor
cmpb
jp
lcall
mov
mov
sbb
xchg
pushf
add
repnz
add
or
and
xlat
cmp
ljmp
cs
lds
jge
xchg
aaa
fs
inc
pop
sbb
pop
push
push
adc
xlat
dec
push
push
icebp
mov
mov
stos
pop
out
mov
stos
mov
xchg
clc
decb
mov
jmp
mov
pusha
pop
int
cmpl
imul
and
add
jge
jns
xchg
jp
pop
bound
scas
mov
sub
fs
mov
mov
gs
sbb
leave
push
aam
cmp
sbb
cltd
inc
fwait
push
mov
and
gs
in
push
sub
mov
insl
push
es
add
and
xchg
cmp
and
mov
andb
inc
or
push
rcrb
shlb
mov
mulb
add
mov
fcomip
cmp
aaa
inc
mov
loope
pop
sarb
add
mov
pop
jbe
xchg
imul
stc
and
add
push
and
push
ja
shrb
cwtl
xchg
push
push
pop
scas
sbbl
xchg
fistpll
fbld
fmul
cli
and
fisubs
shr
rcrl
pop
or
mov
je
ja
pop
pop
in
pop
dec
cmp
pop
xor
in
sbb
ret
aam
jecxz
xchg
test
test
sbb
jo
icebp
mov
ret
fcoml
adc
movsl
stos
push
shl
in
adc
clc
cmc
int
aad
into
sbb
int
jae
push
stos
jo
leave
mov
sti
sbb
call
xor
outsl
mov
movsl
xchg
push
sub
jg
int3
enter
into
sub
mov
ljmp
ret
sarl
out
shl
inc
adc
xlat
xchg
pop
lods
pop
pop
add
mov
and
inc
cltd
xchg
gs
imul
mov
sub
lcall
mov
ljmp
ja
leave
inc
hlt
and
xchg
scas
jb
je
ds
imul
outsb
fs
xchg
ja
sub
sub
jns
jle
sbb
mov
lea
imul
hlt
mov
into
call
sbb
pop
std
and
jg
pusha
inc
out
xlat
cmp
out
out
fwait
mov
jb
pop
test
aas
or
arpl
push
out
lcall
std
test
sbb
test
clc
pop
leave
dec
jecxz
jns
lods
stos
sbb
dec
lret
xor
cld
outsb
mov
mov
shll
mov
ret
hlt
addr16
cltd
adc
add
lcall
sub
push
or
loope
daa
mov
xor
inc
fsub
push
lcall
test
dec
ficoml
sbb
inc
sub
pop
dec
arpl
jge
push
out
sahf
jl
adc
pop
mov
jae
pop
movsl
pushf
cmp
gs
out
stc
pop
sbb
test
or
add
sub
mov
inc
aam
enter
pop
mov
dec
in
pop
add
pop
xorl
aam
sub
jg
push
mov
mov
dec
shr
addl
ret
sbb
hlt
js
mov
sub
push
pop
fldcw
or
insl
add
rcll
and
xor
mov
mov
sub
mov
movsl
cmp
aam
lahf
or
cs
stos
in
sbb
int3
rclb
mov
and
mov
imul
and
mov
ds
std
lods
cs
mov
mov
das
jecxz
cmp
outsb
or
adc
add
test
data16
or
fistps
pop
adc
pushf
fcmovu
sbb
nop
lcall
fwait
sub
dec
pop
add
test
pop
scas
mov
sbb
pop
adc
and
xor
int
loope
negb
mov
outsl
dec
dec
mov
mov
sub
stos
add
xlat
dec
scas
pushf
call
jmp
icebp
push
mov
or
adc
add
jae
jne
ja
lea
dec
iret
shlb
sub
add
les
dec
add
loopne
jp
pop
inc
dec
lods
add
jns
and
jae
pop
hlt
xor
push
movsl
mov
fs
int
in
inc
xchg
ja
inc
shlb
fisubrs
lock
cmp
push
ffreep
jb
inc
xor
add
pop
sti
mov
push
out
lcall
mov
jno
cmp
mov
aad
filds
dec
popl
ljmp
test
cmp
sbb
and
sbb
cltd
xor
ja
je
xor
mov
jg
cmp
popf
mov
add
jecxz
jbe
jle
add
pop
fadds
jmp
ret
mov
cmp
shlb
clc
outsl
inc
cmp
inc
decl
jae
pusha
movsl
mov
sti
cld
pop
icebp
stc
sub
out
add
popa
cwtl
jae
sti
add
jl
mov
xchg
mov
imul
cmp
push
cmpsb
pop
mov
rclb
add
dec
cmpsl
mov
outsb
ja
ljmp
mov
push
pop
rcrl
mov
movsl
bound
mov
aaa
sarl
enter
dec
pusha
jns
xchg
pusha
jmp
dec
pop
xchg
insl
idivb
xor
mov
lods
mov
or
xor
mov
mov
ret
jb
push
xchg
les
mov
or
lods
shrb
ss
jge
push
aaa
into
addl
jb
push
arpl
jecxz
aam
mov
das
add
inc
fisttpll
cwtl
fdivl
shl
mov
mov
inc
mov
sbb
ret
dec
insb
arpl
or
cmp
out
dec
loopne
mov
movsb
fwait
outsb
add
aaa
scas
js
and
stos
inc
lret
ret
mov
fnstenv
push
rclb
fbstp
ljmp
and
aam
mov
mov
das
jne
mov
add
jno
xchg
mov
std
dec
jecxz
in
push
push
adc
inc
aas
mov
jno
mov
movsl
xchg
mov
mov
pop
mull
lea
xchg
lds
lret
sbb
xlat
mov
inc
adc
mov
clc
pop
imul
sbb
pop
jbe
pop
xor
sub
movsl
js
outsl
out
push
ljmp
decl
jne
pop
mov
movsb
mov
jp
outsl
out
pop
out
xchg
lea
mov
mov
dec
fdivrp
test
add
repz
pop
push
mov
sub
addl
push
iret
xchg
pop
xor
out
mov
test
xchg
imul
push
movsb
sub
mov
dec
cmp
inc
push
pop
sub
or
xchg
aaa
enter
ficompl
fwait
inc
pop
or
sub
mov
push
into
cmp
sbb
rorb
sbb
fsts
std
arpl
lea
cmp
das
mov
flds
mov
mov
aad
fbstp
ret
adc
loopne
dec
pmullw
mov
test
mov
cmp
movsb
sub
and
orb
sub
push
push
out
cmp
xor
ds
movsl
sub
mov
mov
mov
lahf
inc
or
movsb
xchg
and
xor
daa
cltd
inc
sub
aas
sub
hlt
cmpsl
inc
or
loope
movsb
or
cmp
adc
inc
mov
lods
mov
pop
cmpsl
xchg
pop
mov
loop
mov
xor
pop
push
ljmp
mov
add
bound
jbe
pop
insb
daa
lods
das
lods
jp
xchg
dec
mov
imul
mov
out
jb
movsl
jbe
dec
jns
movntq
out
push
mov
mov
inc
stos
stos
rorl
mov
push
movsb
mov
outsb
mov
mov
inc
sub
inc
push
stos
cmp
mov
scas
mov
out
nop
mov
push
jp
mov
inc
movsb
jmp
mov
mov
addr16
cmp
xchg
icebp
dec
or
mov
pop
push
fsts
push
insl
mov
xor
test
shrl
ficomps
xor
in
add
add
add
cltd
test
roll
fcmovnbe
je
xchg
clc
pop
leave
fucomip
insl
lods
adc
mov
or
mov
lret
mov
aam
in
add
std
pop
dec
pop
push
mov
mov
or
cmpl
mov
insb
in
cmp
pop
mov
mov
dec
or
es
into
mov
shrb
jecxz
pop
sub
jmp
cmp
movsb
mov
mov
insb
out
xchg
stc
fucomp
imul
shll
mov
mov
out
imul
insb
out
pop
push
mov
test
mov
add
cmp
adcl
dec
es
imul
pop
adc
pop
sti
push
dec
sub
popf
adc
pop
sbb
jl
clc
inc
daa
mov
out
std
repz
sbb
pop
cld
in
and
into
fwait
jo
and
pop
mov
mov
lods
daa
in
js
cltd
stc
and
push
test
arpl
shlb
add
pop
cmp
and
cmp
rorl
xor
lret
nop
aam
and
mov
cmpsl
xor
enter
fidivs
or
aaa
xchg
push
xor
and
mov
lahf
aaa
xchg
xor
roll
xor
mov
lahf
aaa
xchg
aam
and
mov
lahf
aaa
xchg
mov
inc
or
in
fnsave
push
jno
mov
les
fdivrl
ljmp
adc
imul
out
jle
inc
mov
aaa
mov
call
cmc
das
stos
cli
lcall
in
jns
popa
cli
or
mov
das
stos
and
lds
cmpsb
or
sarb
mov
arpl
aaa
add
lock
jns
cmp
ret
fadds
pop
iret
mov
mov
sub
push
sti
cltd
cmp
xlat
jg
out
mov
movsb
cltd
xor
insb
cmpsb
cmp
sub
rolb
out
sub
or
jecxz
pop
loope
addr16
aad
js
sub
rcr
jg
aaa
inc
or
shlb
lahf
push
inc
pop
add
mov
aas
push
pop
add
xor
in
icebp
sarb
xor
dec
dec
jecxz
movsl
lahf
jo
add
mov
sbb
adc
fs
cld
and
lock
out
jne
dec
fildl
add
int3
xchg
sbb
dec
negl
stc
movsl
cs
repz
and
rorl
mov
rorb
mov
movsl
cs
jmp
imul
fs
push
fisubl
mov
or
pop
cmp
pop
clc
inc
lcall
jno
jg
xor
jge
fst
js
xchg
rorb
ljmp
arpl
push
decb
stos
push
incb
sarl
xchg
rorl
push
pop
enter
insl
sbb
jns
sub
jnp
fst
ja
xchg
mov
sbb
xlat
pop
mov
xchg
push
fiaddl
add
push
test
pop
jg
cld
add
lea
dec
fiaddl
mov
sbb
jle
sub
sbb
js
cmp
leave
inc
push
jb
or
pop
sarl
xchg
arpl
pop
xor
xor
mov
cld
insb
jg
popf
ljmp
push
inc
outsb
lock
push
jbe
xchg
rcrl
jae
mov
mov
mov
adc
dec
or
popa
lock
inc
push
jp
hlt
arpl
jne
jnp
popf
inc
xchg
test
sbb
das
lods
stc
mov
push
add
jno
pop
jl
dec
jno
sbb
sbb
icebp
jbe
sbbl
jmp
fisubrs
int3
leave
add
mov
pop
jo
pop
mov
movsl
test
out
popaw
repnz
fsubs
fmuls
ret
je
dec
or
jno
or
push
loop
aas
es
inc
jl
cmpsb
xor
push
cmp
iret
std
fidivrl
adc
xor
ds
add
outsl
es
daa
adc
cs
cmc
jne
mov
xlat
push
push
movsb
or
sbb
jg
add
sub
xor
fucomi
enter
hlt
fidivs
aad
mov
lcall
subb
sahf
cmp
negl
mov
jo
sbb
cmp
scas
sub
test
xorb
fstpt
sub
add
and
loop
cmpsl
pop
cmc
fdivs
cwtl
stos
or
shll
cmc
pop
pop
inc
or
xlat
enter
jp
xor
inc
or
lcall
test
outsl
fcmovu
hlt
push
pop
adc
push
dec
testb
mov
xor
outsl
cld
cwtl
inc
inc
jnp
mov
popf
mov
movsb
xor
dec
jge
iret
rorb
leave
rclb
dec
and
cmp
xchg
out
pop
add
jg
loop
test
or
pop
mov
dec
mov
sarb
scas
sbb
dec
sub
jae
xchg
pushf
inc
insl
aad
inc
sub
jo
hlt
pop
leave
addr16
dec
xchg
jp
jae
popa
in
cmp
sbb
and
je
adc
push
xchg
andl
mov
mov
push
fisttpl
cmp
mov
insl
dec
adc
dec
push
pop
add
mov
popl
ljmp
dec
cmp
aam
iret
outsb
hlt
jns
sub
call
cld
std
pusha
and
mov
pop
adc
pshufw
sbb
aas
iret
add
subb
push
leave
mov
sbb
hlt
pop
sarl
jb
jge
mov
outsl
ror
xchg
mov
scas
push
stc
ja
adc
scas
push
cs
mov
push
loop
sub
xor
adc
dec
lret
mov
adc
mov
push
adcb
pop
les
aad
loop
es
add
aad
stos
dec
sub
imul
push
add
xchg
inc
cmp
cmp
mull
daa
sub
pop
dec
and
inc
mov
push
aas
fwait
mov
sti
or
push
add
cmp
mov
mov
ds
and
pop
idivl
mov
mov
mov
sbb
mov
inc
mov
pop
xchg
xchg
cmp
dec
and
jmp
cli
pop
mov
outsb
jno
jno
jl
adc
cmp
pop
push
mov
mov
cld
nop
lret
jns
sbb
push
mov
push
mov
xchg
iret
out
notb
sbb
popa
jp
addr16
push
mov
dec
mov
stos
lahf
mov
pop
hlt
lds
or
data16
mov
mov
inc
inc
ljmp
sbb
lret
cmp
or
test
cmpb
adc
jg
cld
dec
mov
out
shll
je
inc
and
push
bound
mov
imul
lahf
xor
popf
test
mov
test
into
loopne
jg
mov
imul
pop
mov
roll
xor
xor
adc
int3
nop
rcr
lret
mov
adc
cmc
ret
les
cwtl
sbb
mov
jge
int
xchg
inc
ja
push
push
imul
shll
fidivl
cltd
or
xchg
push
movsl
scas
test
dec
inc
mov
daa
lods
and
lcall
movsl
aaa
pushf
andb
sbb
addl
xchg
ds
mov
sarb
sti
mov
faddl
sbb
jo
daa
pop
add
aad
jmp
add
pop
lcall
cwtl
sarb
iret
add
aam
aam
cmp
jnp
and
pop
outsl
es
arpl
js
pop
dec
and
popf
mov
mov
adcl
outsl
je
inc
dec
inc
movups
xor
push
fldcw
or
push
ljmp
fs
xchg
ja
xlat
adc
aas
cltd
push
cmp
pushf
mov
in
jb
addr16
scas
ja
sti
pop
out
loopne
out
add
or
adc
addr16
in
pop
jl
das
xor
sub
rolb
out
cmp
xor
and
clc
pop
xor
sahf
lret
imul
pop
add
adc
pushf
or
pop
sarl
mov
clc
pop
xlat
icebp
add
add
bswap
sub
xchg
adcb
jle
stos
repz
sub
cmp
mov
imul
fnstcw
in
and
outsb
sbb
xlat
rorb
pop
cli
xor
mov
dec
bound
in
push
add
aad
jle
sbb
cmp
inc
or
fadds
and
xchg
call
roll
fdivs
inc
adc
lret
shrb
xlat
cmp
pop
psllw
repnz
mov
in
shrb
std
loopne
sub
sub
orb
leave
mov
stos
mov
push
nop
cmp
and
daa
stos
es
flds
loope
cmp
out
testl
fcompp
mov
lcall
jmp
push
rolb
add
in
cwtl
cmp
fadds
jl
inc
push
in
sbb
mov
cmp
add
outsb
sbb
arpl
fstpt
cmpsl
push
je
xchg
jl
adc
popa
cmc
and
xor
cmc
pop
repz
xor
fucomip
repnz
add
fldenv
add
push
cmp
jno
dec
fldt
cmpsl
scas
xchg
add
jae
mov
push
sahf
jbe
push
test
mov
ret
xchg
adc
xor
inc
xor
and
test
nop
xchg
or
push
or
in
test
mov
pop
ljmp
ror
jb
mov
inc
mul
aas
sahf
inc
lock
jge
out
push
push
pop
stc
movsb
je
cmp
xor
out
mov
pop
rorb
jge
adc
sub
std
faddl
ljmp
sub
sbb
xlat
jnp
mov
pop
push
mov
orl
mov
add
ret
les
iret
or
lock
mov
popf
shll
cmp
inc
or
test
icebp
pop
push
mov
xlat
xchg
and
lahf
cmpsb
out
das
mov
mov
mov
push
daa
mov
jns
xchg
cmp
imul
sbb
mov
lcall
jle
fwait
pop
aas
or
addl
imull
mov
sub
lock
cwtl
jge
xor
int3
mov
mov
push
ret
push
inc
jecxz
mov
inc
push
push
stc
sahf
xchg
cmpsb
cld
shlb
movsl
out
dec
adc
int3
and
test
outsl
sbb
les
clc
bound
call
lods
add
push
cmp
aad
xor
push
js
lea
mov
fs
inc
fnstenv
mov
imul
orl
inc
orb
mov
daa
mov
sub
js
lock
es
ja
xor
test
lret
popa
aad
loop
jp
cmc
pop
xor
jl
bswap
js
out
cmp
out
sub
sbb
and
push
addr16
cltd
je
je
lret
pop
clc
xor
jno
inc
or
arpl
xchg
sub
and
dec
dec
stos
imul
pop
scas
outsl
inc
or
mov
sub
mov
pop
mov
lcall
fidivrl
call
dec
or
mov
movsl
jecxz
fs
mov
xor
pop
xchg
mov
cld
outsb
fistps
push
jno
sbb
xor
ficoms
icebp
mov
push
jae
lods
negb
mov
push
sti
fucom
imul
xchg
ds
in
faddl
cli
sub
lret
lret
add
sbb
cmp
fsubr
je
or
add
rcl
mov
adc
stos
mov
cmpsl
fidivrl
pop
fidivrl
out
ds
out
or
and
sub
mov
jae
in
cmpsl
lahf
inc
cmp
das
sub
mov
dec
adc
xchg
cmp
imul
stos
lret
cmc
mov
jle
sub
test
mov
into
pushf
imul
sbb
mov
test
cmp
adc
dec
or
outsl
std
pop
sub
add
mov
jnp
daa
aad
push
inc
fwait
cmp
sub
cmp
insl
cmpsl
fnstcw
rcll
mov
mov
or
cmp
cmp
dec
pop
call
xchg
mov
lods
xchg
cmp
in
xor
sbb
scas
xor
xor
dec
jne
cmp
xchg
xor
xor
insl
in
mov
mov
int3
jne
sbb
sbb
xchg
aas
lock
xchg
mov
rcll
sub
pop
add
and
pop
jmp
rorl
fisubl
arpl
cmpsl
orl
mov
fcomp
jl
in
cmp
add
jns
adc
dec
js
hlt
lret
cld
pop
aaa
out
cli
pop
cmp
inc
adc
pop
mov
push
lret
lret
lret
sub
aaa
sbb
add
negl
les
cmc
in
mov
imul
aaa
dec
adc
sarl
imul
push
mov
adc
mov
mov
mov
inc
sub
xchg
cld
cmp
loopne,pn
jg
mov
mov
pop
jmp
lahf
inc
fdivrp
mov
test
add
es
mov
enter
js
pop
repz
subl
or
cmpb
xor
hlt
imul
mov
mov
scas
pop
mov
xchg
cmp
das
dec
adc
push
or
fistps
loopne
or
rclb
push
into
or
jnp
ja
jae
leave
orl
mov
sub
bound
sbb
mov
mov
xor
push
pop
mov
scas
inc
mov
testl
les
xchg
sbb
jnp
leave
xchg
jg
sti
pop
pop
outsb
inc
or
dec
jnp
or
mov
adcb
sahf
inc
sub
icebp
pusha
icebp
pop
pop
mov
xchg
and
fidivrs
std
out
imul
cmp
aas
jbe
pop
repnz
lret
mov
gs
add
fs
and
mov
ss
mov
xchg
cmp
xor
mov
imul
inc
scas
je
fildll
mov
test
mov
sbb
andb
insb
in
jmp
icebp
adc
pop
stc
push
add
mov
scas
xor
das
test
das
jge
push
push
ja
out
xor
repz
in
fwait
adc
inc
adc
loopne
lds
jne
stos
xor
addr16
div
jle
cmp
mov
sub
xorb
pop
les
scas
orb
mov
add
lret
sbb
repnz
jo
mov
mov
repnz
pusha
cmp
das
movsl
sub
pop
pop
jno
decl
les
notl
add
repz
cmpsl
mov
imul
sbb
dec
orb
in
outsl
rorb
inc
mov
mov
mov
push
int
outsb
push
pop
mov
andl
cmp
sub
sahf
outsl
icebp
sub
rorb
orb
adc
pusha
dec
cmp
dec
sbbl
pusha
in
mov
scas
xor
fistl
mov
call
ret
mov
add
pusha
mov
inc
pop
jns
mov
cmp
push
add
daa
fdivrl
cmp
adc
ret
xchg
jns
inc
adc
data16
mov
jno
or
ret
xchg
aam
dec
or
into
xchg
xchg
cli
pop
inc
cmpsb
mov
loope
lds
jg
mov
fdivrs
xor
pushf
mov
popa
shrd
repz
cltd
cs
rcrb
mov
cmpsb
sbb
or
in
bound
inc
adc
jmp
enter
push
sbb
xlat
ja
pop
mov
mov
scas
js
fdivrp
stc
sub
fwait
inc
sarb
ret
sbb
dec
sbb
insl
test
push
or
cs
ja
sarb
push
pop
hlt
stc
mov
jnp
sbb
popa
out
dec
out
cmpsb
lea
rcrb
jge
xchg
cmp
and
out
jmp
jl
mov
imul
add
pop
jge
pop
push
jmp
add
xor
in
jno
es
icebp
push
subb
mov
add
push
pop
add
mov
push
jg
and
scas
xor
push
add
jecxz
lods
xor
push
ror
fiadds
xchg
dec
jl
sti
ret
jl
out
jo
insb
add
repnz
xor
or
fiadds
aam
mov
mov
imul
ljmp
dec
je
cmp
lcall
add
pop
js
mov
adc
inc
and
jne
mov
adc
out
dec
bswap
es
fnstcw
aas
cli
pop
sub
mov
inc
inc
out
insl
fstpl
or
xor
movsb
xor
sub
push
lock
mov
sbb
dec
loope
das
adcb
push
sarl
dec
test
inc
push
lock
mov
in
icebp
jo
stos
das
pop
fs
cmp
popl
cmpsb
sti
pop
add
mov
xchg
bound
pop
stos
jbe
out
mov
scas
sub
push
dec
lds
xchg
mov
lret
jge
faddp
js
pop
add
mov
test
lods
jl,pn
mov
clc
jo
cltd
cmp
insl
mulb
xchg
sbb
int
pop
scas
add
orl
pop
faddl
push
aam
push
out
push
clc
sbb
xchg
dec
addr16
inc
xchg
sarb
xchg
jae
or
sub
xchg
push
lcall
cmp
xchg
test
push
decl
jg
lea
lahf
xor
mov
lods
push
stc
xor
enter
adc
int
insl
aas
mov
sub
popa
jmp
stc
movsb
inc
or
jmp
mov
andb
jb
xchg
cmp
roll
divb
adc
dec
and
and
int3
cmpsb
shll
jae
mov
ret
mov
pop
lds
lea
and
push
subl
or
push
ret
inc
or
cmp
jge
cmpsl
sub
lods
orb
mov
test
test
add
int
jl
and
shlb
in
outsb
push
popa
fidivl
nop
sahf
cmp
lock
mov
sub
cmpsb
xchg
aas
imul
and
mov
addr16
pop
es
sti
xor
mov
stos
inc
sbb
adc
pop
dec
cs
mov
cltd
xchg
push
std
arpl
jb
jmp
cld
jmp
hlt
insb
mov
xor
fs
repz
pop
add
lret
fiadds
and
xor
adc
mov
mov
adc
int
lods
push
imul
sub
cmp
jge
cwtl
outsl
ljmp
pop
sti
sub
test
cmp
mov
pop
cmp
or
sub
add
icebp
push
jmp
mov
aam
dec
lea
mov
lods
add
lret
mov
or
jb
enter
push
sub
imul
and
je
into
xchg
mov
pushf
outsb
fsubl
out
xchg
cmc
push
ret
push
sti
outsl
shrb
sbb
out
repz
dec
adc
in
pop
lahf
adc
pop
ss
lea
push
sub
push
fnstsw
bound
xor
stos
or
fldt
rcrl
mov
arpl
adc
mov
mov
aas
ss
dec
dec
sub
jne
add
sbb
ror
xchg
xchg
movsl
add
sub
in
je
inc
or
popa
jp
std
and
movb
mov
mov
aaa
xchg
xor
xchg
cmpb
jno
or
push
add
insl
jb
jge
jbe
fisubrs
or
mov
ret
jno
dec
pop
test
xchg
imul
int3
daa
stos
sub
adc
lods
push
mov
inc
push
enter
mov
sub
xchg
lcall
jb
mov
aad
pop
test
jbe
push
sti
movsl
gs
clc
mov
lahf
inc
sbb
fisttps
push
pop
or
push
push
jb
xchg
inc
insl
adcl
mov
call
imul
in
push
jecxz
in
addr16
call
ret
mov
inc
push
xor
and
inc
jmp
mov
sbb
mov
xchg
fnstenv
dec
test
adc
ss
mov
hlt
mov
in
loope
cs
insb
lock
push
pop
pop
inc
or
fbld
add
in
insl
xchg
pop
movsb
xor
adc
jae
ss
push
jo
loope
mull
mov
enter
lds
mov
ds
stos
fs
nop
das
mov
nop
sarb
adc
lahf
cwtl
lret
aas
iret
stos
xor
sub
sahf
cltd
push
decl
lret
test
jg
sbb
rolb
cli
sbb
xchg
ds
pop
and
mov
cmp
xchg
mov
inc
adc
divb
scas
inc
adc
xchg
enter
push
mov
xor
xchg
inc
sub
inc
adc
aas
lods
sub
mov
lods
test
pop
xchg
test
lret
out
dec
cmpsl
jmp
pushf
mov
pop
fcmovne
dec
mov
mov
cwtl
cmp
outsb
fmul
and
das
jno
enter
and
and
addr16
insl
dec
pop
jecxz
mov
je
dec
scas
adcl
jbe
or
aas
out
inc
push
nop
daa
adc
or
mov
jmp
jo
into
adc
fdivrp
pop
fdivl
or
aad
movsb
arpl
fdivrl
jns
mov
hlt
mov
test
xchg
sbb
test
jecxz
outsb
mov
push
lret
aad
cld
push
adc
roll
push
into
mov
cmpsl
xor
mov
cmp
sub
mov
arpl
push
sar
out
shl
or
out
stc
and
leave
adc
cwtl
push
pop
clc
fwait
lds
fstpl
push
gs
dec
adcb
gs
loopne
adc
or
pop
inc
xchg
cmp
inc
fwait
inc
push
and
cmpsb
or
pop
lea
ljmp
mov
xor
jb
movsb
aas
aam
pop
insl
sub
test
pop
movl
push
aad
mov
jmp
sbb
insl
into
mov
lea
sarb
cmp
insb
cmpsl
xor
pusha
fdivl
xchg
add
add
enter
rcll
scas
data16
xrelease
icebp
aad
jg
icebp
cld
pop
lret
sub
inc
dec
pop
jae
xchg
insl
sahf
cmp
int3
jnp
push
jno
jle
stc
int3
lahf
orl
orl
int3
data16
ud2
and
insb
pop
jge
push
jg
add
popa
icebp
push
sti
xor
mov
jmp
dec
pop
stos
negl
mov
mov
cmp
adc
pop
loopne
test
hlt
aad
mov
rcr
dec
adc
add
jg
mov
sti
push
mov
jl
sub
push
sub
mov
fstpt
stos
ss
fcmove
xchg
cmc
lcall
jmp
std
orb
sub
mov
or
and
ret
mov
adc
push
sub
ret
sbb
das
scas
push
push
adc
inc
pop
dec
cmp
loope
enter
fdivrl
xor
mov
mov
cld
lods
add
and
sti
push
sbb
pop
dec
inc
fwait
aaa
outsl
xchg
test
btr
xchg
in
pop
cmc
arpl
out
inc
je
add
adc
cs
stc
cwtl
cmp
notb
xor
mov
out
bswap
nop
std
sub
test
adc
loopne
cltd
xor
loop
and
mov
imul
push
std
xor
inc
std
mov
xchg
jmp
mov
cwtl
fs
add
lcall
mov
mov
mov
mov
sahf
inc
xor
xor
pop
push
mov
lea
test
and
pop
nop
sub
inc
lods
inc
ja
das
dec
cwtl
cmpsl
fcompl
add
das
dec
fldl
xor
lods
xor
es
or
xor
push
popa
icebp
xorl
adc
adc
dec
dec
fdivrl
xchg
mov
pop
in
test
xor
icebp
xchg
inc
xchg
jmp
fs
imul
pop
mov
cmpsb
call
call
fidivs
loope,pt
roll
adc
or
lock
mov
sarb
mov
pop
push
cmp
cmpsl
sub
sub
jb
add
icebp
std
dec
adc
out
fidivrs
stos
cmp
xchg
gs
out
jo
inc
test
rorl
jle,pt
and
arpl
and
xchg
cmp
xor
pop
mov
stos
xor
mov
cmpsb
fwait
cmp
jne
loopne
test
jnp
enter
sbb
insl
sbb
jle
jb
add
cmp
faddl
popa
push
les
and
pop
out
dec
in
or
pop
dec
adc
cmp
mov
add
sub
sbb
loope
icebp
push
icebp
pop
push
les
push
mov
ret
push
nop
push
cmp
insl
je
jb
setbe
popa
mov
scas
sarl
scas
sub
jl
mov
repnz
in
orl
ret
cmp
je
adc
mov
mov
test
cmpsb
daa
xchg
roll
sbb
dec
sub
outsb
jmp
xor
xor
mov
mov
gs
mov
jp
sbb
xchg
push
ret
sbb
or
inc
out
imul
daa
mov
aas
data16
dec
cs
sbb
ss
aam
ss
add
inc
outsb
jmp
cmp
pop
jno
cmp
stc
outsb
or
scas
in
scas
mov
std
cs
mov
jmp
xchg
cmp
mov
insl
daa
scas
sub
jno
push
xchg
jmp
and
int3
rolb
mov
test
test
cs
icebp
in
add
push
in
cmpsb
xor
dec
cltd
ds
test
jp
xchg
mov
add
sarb
push
fadds
jno
xor
inc
jb
cs
test
pop
idivb
jg
insl
cmc
xchg
inc
jb
xor
push
push
push
inc
pop
fidivrs
popf
in
imul
test
or
in
dec
daa
mov
pusha
outsb
sub
fs
xchg
cmp
sub
mov
aam
xchg
pop
xlat
jge
dec
jp
leave
out
popf
inc
sbb
lea
xchg
negb
xor
pop
pop
adc
cld
gs
sarl
imulb
mov
scas
adc
mov
lds
in
add
dec
repz
push
sub
mov
jns
xor
push
int
inc
push
mov
neg
fildll
mov
or
jl
mov
into
cltd
pop
daa
test
shrb
adcb
mov
fsts
push
or
pop
cltd
inc
cmp
movsl
aaa
sub
jbe,pn
dec
adc
aad
jne
test
aad
loop
das
flds
clc
sti
movsb
cs
dec
adc
fisubrs
pop
scas
popf
clc
bound
sbb
xchg
insl
cmp
cs
scas
enter
dec
loopne
in
test
fbld
adc
or
dec
xor
rcrl
dec
fucomip
xlat
rcrl
incb
fbstp
popa
test
jge
xchg
scas
mov
cmp
rcrb
mov
or
pop
cmp
cmp
push
pop
loopne
lea
movsl
scas
xchg
loopne
jne
clc
add
sub
cmp
test
sahf
movsl
pop
lock
mov
ja
sub
out
xchg
xchg
sub
or
popf
mov
iret
mov
shrl
or
cmp
out
xchg
push
movsb
scas
xchg
sbb
movsl
cmp
cmp
imul
mov
js
fiadds
xchg
das
xor
mov
test
pop
mov
cmp
rcr
fbstp
cmc
pop
lock
xchg
pop
inc
ja
jns
sbb
int3
sarl
rolb
out
mov
and
out
push
inc
shrl
jbe
or
xchg
out
xchg
leave
xchg
sub
out
movsb
sbb
sub
push
shlb
mov
mov
frstor
push
pop
or
sbb
imul
cmp
rcrl
push
jbe
pusha
xchg
lods
mov
cmp
into
sbb
cmp
cmp
push
pop
loope
mov
out
mov
les
idiv
sbb
sub
push
cmp
subb
popf
mov
shrl
cmc
ja
daa
adc
xchg
sub
gs
movsl
xchg
fwait
mov
int
sub
call
or
cmp
xchg
imul
lds
sub
pop
add
loopne
push
les
mov
mov
faddl
xchg
xor
mov
add
mov
cmp
rcl
fbstp
hlt
pop
icebp
and
inc
js
js
sbb
lret
iret
cmp
add
mov
pop
and
push
inc
shrb
je
or
xchg
lock
xchg
sub
out
movsl
pop
sbb
ret
imul
loope
shr
repz
or
xchg
cwtl
andl
push
or
cmp
pop
xchg
lods
mov
cmp
int
mov
add
pop
ss
cmp
push
push
loope
mov
lock
ret
ja
cmc
std
sbb
sub
subb
pushf
mov
shrb
repz
and
inc
xchg
sub
fs
cmpsb
xchg
cltd
mov
lret
mov
out
shrl
or
aas
out
xchg
push
lea
mov
loopne
sub
adc
ss
loopne
push
lds
addr16
mov
fiaddl
cwtl
sub
dec
pop
mov
add
aam
aam
jbe
repz
repnz
std
xchg
pop
inc
jns
ja
sbb
lret
sar
jmp
dec
sbb
shrl
jb
or
ret
lds
adc
ss
push
mov
fisubrl
or
push
movsl
inc
sub
sub
xchg
andb
call
or
cmp
loope
pop
pop
xchg
jns
xchg
stos
mov
cmp
int3
sbb
pop
xor
push
loop
mov
icebp
mov
ret
hlt
sti
push
mov
push
xchg
cs
dec
cmp
jle
mov
fwait
lahf
pop
icebp
sarb
mov
repnz
xchg
sub
xchg
xchg
mov
leave
mov
shrb
or
cmp
imul
nop
push
movsl
shrl
ret
adc
test
xor
loope
push
pop
xchg
in
xchg
sub
movsb
cmp
and
mov
ds
shl
ja
repnz
repz
xchg
pop
inc
jp
jbe
sbb
stos
xchg
cwtl
das
leave
lret
cmp
cld
ljmp
dec
cmp
ja
mov
ret
xchg
sub
jecxz
cmpsl
adc
mov
dec
xor
shrb
xchg
mov
push
or
montmul
cmpsb
inc
sub
pop
pop
arpl
cmp
out
les
or
cmp
mov
lea
xchg
test
lret
sti
add
pop
xor
jp
outsb
pop
repnz
cmpsl
add
repnz
pop
mov
adc
das
inc
dec
cmp
dec
cltd
popf
pop
repnz
mov
jns
and
repz
xchg
je,pn
adc
mov
in
shrl
push
dec
in
cmp
mov
insb
add
stos
mov
fucom
sub
aas
xor
dec
loop
push
pop
test
in
xlat
fadds
cltd
sub
mov
jg
pop
mov
ds
shl
js
lock
repz
call
je
sbb
das
lret
cmp
cld
call
pop
icebp
dec
cmp
imul
cpuid
mov
mov
ret
xchg
sub
adc
mov
dec
xor
lds
push
test
mov
push
or
adc
pop
arpl
lds
dec
jecxz
rol
pop
add
imul
and
jns
pop
mov
lea
xchg
cmpsl
scas
cmpsl
loopne,pt
push
mov
add
pop
xor
cmp
jnp
insb
pop
repnz
cmpsl
add
lock
and
inc
dec
ds
gs
xchg
popf
pop
repz
mov
jp
and
mov
inc
cwtl
das
je
adc
mov
loop
aam
sbb
in
cmp
mov
insb
add
test
lds
std
test
das
xor
push
pop
addb
jnp
fmuls
cltd
sub
cmp
jp
les
fwait
ds
shl
jns
out
pop
repz
add
jb
push
mov
xchg
cwtl
das
sar
out
dec
sbb
aam
imul
mov
ret
hlt
fists
cmpsl
adc
mov
dec
xor
lds
aam
fwait
orl
repnz
aad
add
adc
test
sub
xchg
jnp
cmp
in
les
pop
insb
add
and
jns
pop
mov
mov
movsl
lods
test
ffreep
push
mov
add
pop
xor
cmp
jl
push
repnz
cmpsb
add
out
clc
and
inc
dec
aas
jnp
mov
xchg
pushf
pop
hlt
int
aam
call
or
mov
cltd
xor
adc
scas
das
loopne
aad
sbb
dec
in
cmp
mov
add
cmpsl
mov
das
adc
test
sub
dec
pop
addb
rcl
mov
or
add
pop
inc
and
mov
ds
shl
jp
in
pop
repz
jp,pt
jo
pop
mov
xchg
cwtl
das
ret
leave
cmp
dec
push
sbb
repz
aaa
aam
imul
mov
adc
inc
das
lds
aad
lcall
mov
shrl
add
mov
pop
popa
xor
xchg
jns
cmp
in
les
add
jecxz
push
pop
mov
mov
cwtl
mov
les
mov
inc
pop
xor
ds
push
in
subl
lcall
adc
mulb
mov
inc
dec
aas
jns
mov
xchg
lcall
out
jnp
push
or
mov
aas
cltd
xor
adc
les
aad
pop
add
xor
repz
insl
add
mov
test
cmpsb
mov
fcomp
das
push
cli
test
in
dec
pop
jg
imul
mov
mov
pop
hlt
add
pop
inc
and
scas
cwtl
aas
leave
iret
jecxz
add
pop
hlt
sbb
add
outsl
jne
mov
nop
cltd
xor
cmp
dec
adc
ss
push
mov
mov
fcoml
test
adc
pop
data16
cwtl
orb
mov
imul
or
mov
push
pop
xor
nop
js
ds
mov
in
lret
lds
insl
add
push
in
push
push
mov
mov
cltd
mov
ret
and
cs
aas
inc
dec
in
subl
lcall
and
inc
inc
aas
ja
mov
hlt
leave
mov
insl
out
jnp
sbb
cmc
mov
cmp
adc
ret
enter
insb
adc
repz
outsb
add
mov
fldt
or
stos
inc
sub
dec
in
dec
enter
imul
lahf
out
rcl
mov
add
daa
cmpsl
ds
inc
and
lods
xchg
inc
xlat
enter
jmp
add
insl
jae
mov
mov
aad
loope
dec
adc
pop
hlt
dec
xor
insl
pushw
adc
cltd
xor
ficoml
test
inc
sub
pop
fs
insl
xchg
jle
in
mov
mov
shrb
or
stos
cmp
mov
push
pop
xor
mov
aas
test
dec
out
leave
pop
sti
add
xor
and
cmpsl
stos
inc
fld
and
sub
inc
xlat
inc
dec
out
jg
pop
cmc
xchg
mov
jl
ljmp
xor
inc
inc
xlat
jne
mov
cmc
mov
outsb
in
jl
sbb
testb
pop
adc
mov
xor
fsub
insl
adc
push
out
xor
outsb
add
mov
fidivl
or
stos
inc
sub
enter
insb
add
rorb
fwait
and
test
pop
inc
and
stos
xchg
inc
xlat
int3
in
out
cmc
sbb
add
imul
mov
les
cmc
fistpll
cmc
dec
xor
insl
imul
mov
adc
inc
sub
pop
arpl
outsb
xchg
jl
in
mov
mov
into
insb
add
or
cmp
mov
push
pop
xor
lea
cmpsb
scas
push
out
mov
push
xor
in
dec
push
lea
cmpsb
stos
inc
fdivrs
leave
pusha
sub
inc
xlat
inc
dec
out
jle
pop
cmc
xchg
lahf
add
adc
icebp
and
cmp
inc
fdivs
push
xchg
pop
test
xlat
outsb
loop
jge
sbb
lea
cmp
stos
mov
xor
xlat
outsb
adc
push
out
xor
mov
outsb
add
mov
fnstenv
enter
inc
daa
sub
out
dec
enter
insl
add
fwait
out
int
mov
add
add
and
and
stos
xchg
inc
xlat
lret
in
std
in
cmc
push
pop
add
push
aaa
jl
imul
xor
mov
testb
insl
bound
adc
xor
mov
fwait
xor
adc
inc
sub
pop
fsubrs
jp
in
mov
out
insb
add
or
and
xor
mov
inc
movsb
lods
push
call
idiv
outsl
push
xor
out
dec
push
lea
insb
add
popf
movsb
stos
inc
mov
leave
pusha
sub
inc
fadds
out
jl
pop
notb
jge
out
and
cmp
fdivs
mov
test
fsubrs
in
adc
add
mov
push
adc
push
mov
outsb
adc
push
call
fs
outsl
push
jg
adc
rcl
xor
or
stos
inc
sub
pop
inc
leave
pusha
jns
insl
add
lcall
add
add
inc
push
inc
and
test
inc
fadd
leave
in
sti
in
notb
ss
push
mov
xlat
repnz
testb
outsb
popa
data16
cwtl
xor
mov
fwait
xor
aad
stos
push
or
xor
pop
pusha
fsubrs
jns
out
mov
in
insl
add
push
adc
and
xor
mov
inc
mov
enter
outsl
push
cs
jle
dec
lea
imul
aam
and
daa
adc
inc
dec
out
jp
pusha
notl
mov
adc
push
or
fdivs
mov
test
fnstenv
jecxz
adc
add
xor
fwait
xor
push
lods
xchg
xor
fcomp
xlat
outsb
push
cli
push
jmp
bound
jle
adc
rcl
xor
push
rep
inc
and
inc
lret
jp
add
cltd
call
and
in
push
popf
sbb
ds
outsl
je
pop
cmpsb
nop
inc
fld
out
stc
loop
notl
sbb
adc
sahf
xchg
lock
testl
jle
xchg
xor
mov
pushf
xor
rcll
add
mov
leave
push
pop
fnstenv
ja
out
mov
mov
leave
outsb
add
xor
push
xor
xchg
inc
mov
ret
hlt
cli
jo
sub
call
and
lcall
mov
and
inc
call
clc
xchg
cltd
push
popf
lret
push
in
and
sbb
sahf
xor
outsb
pop
mov
test
loope
adc
xor
xor
pop
scas
test
xor
outsl
or
push
ljmp
jno
jl
adc
mov
es
shll
leave
add
lods
inc
and
push
out
inc
lret
bound
outsb
add
leave
lret
mov
std
ljmp
push
cmp
mov
movsb
mov
mov
loopne
clc
adc
push
popf
dec
xor
imul
test
fldz
fdivrs
clc
inc
sub
jo
bound
xchg
jle
mov
rcll
push
cmp
xor
push
pop
fidivl
jne
call
loope
outsl
push
stc
add
scas
xor
mov
test
inc
lahf
cmpsb
push
ljmp
jno
sub
addb
es
pop
sahf
cwtl
sahf
lods
inc
sarb
lret
bound
or
fstpt
pop
stc
xchg
pop
sahf
enter
loop
and
ss
insb
push
mov
clc
mov
fistpll
adc
stc
nop
xor
popf
xor
push
pop
scas
addb
int3
aam
fnstenv
notb
daa
sub
jno
jp
adc
es
xor
add
lods
inc
and
lret
bound
push
test
lret
cld
call
lods
inc
push
cmp
popa
mov
call
clc
prefetchnta
sahf
dec
xor
bound
mov
mov
inc
mov
stc
inc
sub
jo
popa
adcb
jl
mov
iret
adc
push
cmp
xor
push
pop
jae
call
loopne
outsl
push
testl
mov
test
inc
popf
movsl
push
jmp
mov
jb
sub
jmp
daa
jl
pop
sahf
xchg
popf
scas
inc
iret
mov
mov
and
inc
fstpt
inc
ljmp
xchg
or
loopne
es
xor
inc
fldt
mov
stc
mov
fiadds
nop
xor
scas
addb
int3
rcr
fidivl
hlt
push
ljmp
jno
js
push
lods
mov
es
shll
add
lods
inc
pop
and
jmp
jb
jo
test
jmp
and
pop
sbb
and
bound
ret
jmp
clc
or
jg,pn
pusha
imul
xor
mov
mov
cli
aas
daa
fnstenv
pusha
sbbl
lods
mov
ss
adc
push
cmp
xor
push
pop
fdivl
jno
jmp
faddp
jo
cmc
lcall
scas
xor
es
push
ss
push
inc
pushf
mov
lret
out
cmc
jb
daa
adc
addl
or
int
es
and
inc
fdivrl
inc
ljmp
xchg
or
es
xor
inc
fldt
mov
stc
mov
faddl
xchg
sub
dec
sbb
mov
ss
fidivl
repz
jmp
sub
pop
inc
jb
ja
push
lods
scas
cwtl
nop
daa
lret
lret
add
scas
inc
push
and
push
aas
int3
arpl
jo
cmpsb
xchg
ljmp
in
lahf
push
sbb
mov
mov
shr
repz
or
or
pop
addr16
mov
inc
fucomi
sarl
cmp
pop
sbbl
stos
mov
ss
push
lods
std
add
push
ss
xor
jae
jo
ljmp
jno
hlt
std
sbb
dec
dec
ss
imul
arpl
repz
and
inc
nop
daa
js
or
lret
mov
mov
push
or
cmp
ljmp
xchg
or
fsubp
es
xor
inc
mov
stc
mov
fiaddl
xchg
sub
sahf
xor
jle
mov
into
rcl
fidivl
repnz
in
and
clc
pop
inc
jae
jbe
push
lods
lods
xchg
xchg
sub
int
lret
ljmp
push
cmp
jno
movsb
nop
jmp
ret
es
or
dec
xor
int3
arpl
mov
arpl
or
or
test
inc
lret
sbbl
das
pop
push
dec
int3
dec
dec
mov
enter
cmc
mov
aam
mov
adc
rclb
push
cli
scas
outsb
data16
adc
jbe
mov
xor
cmp
test
jle
lods
testl
cmp
aas
stos
daa
lret
sarb
adc
inc
inc
fwait
int
scas
adc
xor
stos
cmp
subb
icebp
andb
cmpsb
adc
jno
mov
sbb
lret
add
cmp
adc
inc
xor
popl
and
imul
outsl
enter
jns
mov
pop
and
and
fld
testb
dec
push
shll
loop
sbb
scas
lret
add
lods
gs
in
adcb
into
cwtl
mov
fwait
sbbl
dec
jne
fwait
xlat
mov
andb
add
xchg
fdivl
push
enter
out
mov
adc
mov
xor
stos
repz
lock
arpl
mov
dec
in
add
lcall
push
xor
arpl
loop
sub
out
cli
dec
add
shrb
or
cld
lret
mov
test
pop
mov
bound
push
fdivl
daa
push
sbb
sub
or
aad
sbb
sub
aas
or
nop
jmp
lret
adc
dec
inc
push
addl
nop
fsubrl
jmp
xchg
mov
jbe
or
dec
fisubrl
push
and
push
pop
sub
cmp
xchg
mov
or
shll
xor
mov
repz
adc
in
jns
ficoms
lods
ret
pop
push
mov
xor
in
jp
add
add
add
and
add
add
add
add
and
cwtl
adc
jno
push
not
dec
dec
movsl
gs
xor
lds
repnz
or
xor
xchg
jg
mov
es
cmpsl
testl
call
mov
push
cld
push
push
mov
inc
jg
push
outsl
leave
aaa
test
mov
inc
push
or
cmp
cmp
sub
and
jno
aam
xchg
push
hlt
mov
test
jp
test
fnstenv
cmp
cmp
mov
nop
iret
adc
ja
rcrb
pop
dec
scas
popa
push
lds
or
out
out
std
pop
xor
mov
lods
mov
cmp
lods
mov
mov
je
pop
mov
aaa
mov
adc
out
inc
pop
loop
adc
xchg
incb
icebp
icebp
jg
mov
testb
or
pop
loop
testb
add
lock
lea
and
repnz
push
xor
jnp
js
and
les
lahf
ret
sbbl
xor
pop
fldcw
cwtl
shll
ds
jo
adc
in
inc
cwtl
fisttps
mov
ds
lret
lahf
insl
sbb
jmp
push
adc
push
sahf
inc
fimull
aas
bound
ds
cmc
loopne
sar
das
cli
dec
xchg
mov
int3
sti
jp
fcompl
test
cli
inc
pushf
lock
scas
pmaxsw
cmp
cmpsb
stc
or
and
jae
dec
adc
cltd
fsubl
mov
add
inc
stc
rclb
push
dec
data16
sbb
ljmp
call
ja
mov
pop
gs
xchg
mov
push
bound
and
aad
pop
fwait
pusha
aaa
ds
adc
out
orl
pop
xchg
add
cmpsb
aaa
scas
mov
pop
sub
push
shll
push
lods
popa
add
js
jmp
or
inc
or
mov
arpl
addps
push
cltd
pop
lret
sub
shlb
mov
push
imull
loop
jns
push
dec
xor
push
xchg
cmp
mov
movsb
mov
push
loop
sub
subb
pop
dec
sahf
pop
fstpl
icebp
testb
mov
dec
test
inc
clc
or
add
test
or
fs
lahf
jne
fbld
push
pop
sub
pop
aam
mov
fmulp
mov
cmp
cmp
lods
push
mov
pusha
iret
outsb
lret
je
inc
adc
add
jmp
mov
mov
jl
or
repnz
xor
dec
lret
pop
rcrl
mov
into
sub
cmpsb
ret
lods
jecxz
shlb
inc
in
pushf
das
shlb
daa
fldcw
xchg
add
out
fs
in
mov
test
fisubrl
push
mov
jno
xor
sarl
sub
gs
dec
out
insb
xchg
inc
sbb
adc
inc
cmp
sbb
fistps
lods
xchg
in
mov
inc
movsl
ret
clc
cmc
or
push
xorb
cwtl
imul
cmc
push
rorb
cmpl
popa
pop
xchg
imul
xchg
clc
ja
jae
mov
adc
outsb
stc
and
ret
xchg
mov
xchg
pop
popa
les
jg
jp
sbb
cli
or
push
orl
cs
pop
shll
div
jae
mov
sbb
scas
in
sub
inc
push
test
push
arpl
rolb
xor
bswap
inc
mov
adc
shl
inc
call
pop
cs
pop
in
adc
lret
pop
gs
aaa
cmp
cmp
sbb
fwait
cmpsl
pop
out
mov
and
insl
mov
pop
pop
xchg
int3
xor
fnstsw
imul
mov
cmc
out
or
fisubl
cli
pop
or
jge
imul
lods
xchg
jle
rcll
xor
inc
stos
push
mov
gs
sub
cmp
xchg
lds
rolb
inc
ds
ss
mov
loope
int
cmpsb
les
push
pop
shrl
xor
sub
imulb
mov
lcall
insl
xchg
mov
xchg
imul
inc
pop
push
aad
push
jmp
push
ficompl
pop
cmpsb
fs
or
sbb
into
mov
pop
mov
or
les
pushw
mov
cwtl
in
add
mov
mov
dec
cmp
jmp
sbb
inc
push
pop
movsb
test
dec
xchg
test
push
mov
push
push
pop
jne
jns
mov
mov
out
lcall
jle
mov
xchg
sub
shrl
orl
popl
mov
jne
jae
cli
sahf
bound
adc
jbe
mov
or
call
cli
mov
or
sbb
add
cmp
xchg
or
pop
dec
mov
lret
arpl
sbb
in
ret
jbe
xor
lods
ret
out
mov
pop
mov
out
cmpl
jne
adc
out
lock
das
mov
sbb
hlt
pop
loop
or
repz
mov
sub
cmpsl
or
jmp
xchg
in
mov
imul
cmp
and
sub
std
xchg
sbb
rorb
shl
mov
out
cmp
mov
jecxz
rcll
xor
das
cmc
xor
leave
add
cmp
mov
jmp
fbld
or
dec
sbb
hlt
frstor
loop
dec
pop
fmull
mov
fsubl
mov
pop
fisubs
fldenv
add
xor
xchg
and
fiaddl
sti
cli
jp
stc
rorl
std
scas
out
rorb
cli
push
lea
sbbb
fistpll
or
push
lret
xor
inc
mov
loopne
rolb
cld
mov
and
xchg
clc
call
push
mov
mov
inc
addl
mov
inc
jge
mov
inc
jnp
idivl
mov
testl
cld
leave
popa
jb
insb
push
jge
sbb
cmp
ljmp
push
jge
pop
add
xchg
daa
gs
adc
