lods
jp
or
and
inc
movsl
ja
addb
lods
lahf
int3
xchg
insb
push
insb
bound
and
adc
fxch
xchg
add
iret
dec
xchg
iret
sbb
imul
xor
xchg
imul
lods
imul
fstpt
cmpsl
jnp
or
xchg
mov
in
shlb
or
mov
push
sub
mov
push
pop
cltd
xchg
adc
mov
xlat
mov
xchg
stos
push
adc
lcall
outsb
mov
xchg
fcmovne
xchg
dec
fists
roll
xchg
fmul
xchg
fcmovne
xchg
xchg
sub
fldenv
adc
fcmovne
xchg
fmul
xchg
dec
xchg
test
sbb
xchg
iret
xchg
mov
sti
inc
iret
inc
lods
test
inc
je
or
or
stc
fcmovnbe
xchg
les
push
lcall
push
addr16
pop
in
push
es
xchg
int
iret
jno
xor
dec
mov
push
lea
push
xlat
xchg
rolb
xchg
xchg
sbb
dec
rcrl
or
cmpl
inc
sub
jb
or
sbbl
pushf
mov
mov
inc
mov
lods
push
roll
and
lea
inc
mov
xor
int3
adcl
inc
mov
orl
inc
jo
outsb
mov
or
iret
adc
inc
rolb
jo
mov
sbb
xchg
push
jecxz
shr
outsb
sahf
xchg
fcmovne
xchg
scas
stos
movsb
jp
iret
sub
pop
subl
xchg
xchg
rcrl
xchg
rcrw
or
cmp
inc
fmul
xchg
xchg
dec
inc
pop
int3
sbb
orb
jl
jg
xchg
xchg
cld
ds
test
lcall
xchg
pop
jbe
dec
lods
data16
lea
push
nop
mov
adc
stc
cmp
mov
in
vpmacssww
repz
outsb
or
lret
jmp
jp
mov
adc
ftst
lret
adc
pop
jo
fldcw
dec
inc
mov
pop
aad
or
lock
subl
sbb
xchg
push
jecxz
or
sti
push
rcl
rcll
test
loope
sbb
push
sahf
das
fcmovne
xchg
mov
iret
xchg
pop
jbe
mov
xchg
nop
fsubrl
fcmovne
pop
leave
mov
fcmovne
xchg
xorb
mov
dec
sbb
jge
repz
xchg
fcmovne
adc
aad
mov
int
push
inc
inc
shl
jns
pushf
mov
xchg
out
jge
notl
lds
mov
xchg
fdivrl
xchg
stos
pop
or
push
adc
lcall
popa
xchg
jmp
xchg
mov
lahf
dec
mov
shrl
pop
fnstcw
and
mov
fwait
mov
mov
fcmovne
xchg
popl
jl
iret
lods
jmp
xchg
leave
xchg
iret
std
inc
jecxz
inc
sub
lahf
xchg
ret
fcompl
stos
jmp
mov
push
fildl
push
orb
aaa
inc
add
inc
sarl
mov
mov
sahf
xor
pop
sahf
outsb
push
fcmovnb
add
iret
xchg
sub
pop
lret
pop
xchg
stos
cmp
xchg
rolb
fxch
xchg
jecxz
das
lods
pusha
roll
jl
iret
ja
lret
int
xchg
mov
jge
iret
xchg
xchg
outsb
push
fcmovnb
add
data16
sti
push
out
dec
xchg
fcmovne
dec
mov
inc
adc
xchg
sbbl
imul
dec
lds
fadds
sbb
fcompl
xchg
data16
push
gs
leave
jbe
data16
cmp
jle
data16
dec
or
jb
xchg
adcb
stc
pop
mov
push
jle
pop
ret
sti
inc
roll
xchg
int3
mov
shl
int3
push
aam
and
inc
lret
inc
or
data16
cmp
shrb
xchg
out
jmp
push
jmp
rcll
iret
xchg
iret
xchg
ret
jnp
addr16
pop
sarl
sbb
iret
xchg
jae
leave
rcrb
mov
inc
mov
pusha
mov
adc
ror
or
ror
mov
movl
fsubrl
xchg
stos
adc
fwait
mov
or
test
push
jb
xchg
adcb
cs
adc
adc
sub
push
push
pop
jle
sub
xchg
sti
inc
xlat
dec
popf
mov
out
insb
and
out
xchg
popa
xchg
int3
iret
xchg
push
mov
pop
das
xchg
iret
xchg
pop
mov
xchg
fucomi
pop
xchg
data16
sahf
xchg
loopne
xchg
sub
xchg
pop
jp
in
je
rorb
adc
fcmovbe
adc
push
arpl
iret
xchg
fwait
ret
sti
push
iret
inc
jl,pt
jp
pop
mov
dec
dec
ret
pop
xchg
test
inc
cmp
jle
xchg
mov
inc
xlat
or
fcmove
xchg
scas
adc
fcmovne
xchg
xchg
stos
push
fcmovne
xchg
adc
push
enter
xchg
data16
inc
imul
loop
ret
jl
sahf
ss
roll
jno
push
jle
push
sti
lret
test
leave
xor
mov
scas
jb
inc
ds
test
jp
imul
xchg
ds
movsb
xor
add
mov
pop
ja
ja,pn
clc
jbe
imul
neg
cmp
les
add
cmp
mov
mov
ficompl
and
pop
and
adc
repnz
push
into
cmp
pop
addps
push
or
out
push
out
mov
cs
arpl
inc
movsl
int3
sub
jle
lea
test
ljmp
cmp
mov
lods
jo
mov
std
dec
enter
aas
xabort
pop
xchg
add
ss
mov
add
jae
mov
loopne
inc
in
aam
push
nop
into
sbb
mov
test
adc
xchg
orb
neg
sub
and
repnz
movsl
iret
inc
popf
setnp
scas
ljmp
int
or
xchg
inc
lret
leave
dec
movsb
test
test
push
rorb
ror
cmp
jge
mov
lods
dec
xor
fnclex
gs
sub
sub
adc
dec
dec
ja
lds
loopne
cwtl
cwtl
adcb
mov
cmc
xor
mulb
cmc
fs
fildl
test
cmp
les
fists
fistpl
mov
arpl
iret
decb
push
jb
jge
xchg
xchg
leave
bound
ds
scas
fistl
lret
movsb
stc
mov
test
fwait
cs
and
mov
xchg
adc
test
or
inc
push
push
imul
xor
mov
idiv
in
xorb
xchg
inc
xor
or
fcomi
stc
repnz
ret
cltd
iret
push
push
inc
mov
xchg
sbb
stos
cltd
loope
mov
dec
xchg
mov
mov
into
lcall
mov
std
in
leave
xchg
xor
loope
call
lea
cmp
mov
subb
outsl
imul
out
xchg
aaa
and
fstpt
mov
mov
in
dec
xor
dec
neg
xchg
dec
adc
cmp
pop
rorl
incl
push
int3
int
xchg
sub
adcl
jne,pt
mov
test
or
cmp
out
dec
movsb
xchg
loop
sahf
ja
lock
dec
fcmovnu
imul
cmpsb
rorl
iret
iret
xor
and
test
popf
test
shll
xchg
add
mov
push
jne
je
repnz
enter
lret
je
subb
adc
xchg
ret
popa
iret
out
adc
xchg
repz
xchg
xchg
movsl
xchg
jecxz
in
xchg
lahf
dec
xor
jp
pop
nop
fistl
sbb
test
and
mov
pop
loope
pop
or
cmpsb
push
push
in
aas
pop
je
add
pop
pop
js
rorl
orl
adc
imul
cmp
dec
jmp
mov
adc
mov
stc
inc
adc
addb
xchg
lods
mov
push
cs
cltd
pop
sub
imull
sub
test
mov
xchg
adc
inc
xor
jo
pop
iret
or
out
mov
dec
and
outsb
mov
jne
push
stc
lea
in
test
shrd
cmpsl
inc
sub
in
xchg
pop
or
mov
mov
pop
arpl
xor
std
and
movsb
inc
mov
movl
mov
xchg
jmp
jl
cmpsl
dec
push
jl,pn
stc
mov
roll
leave
inc
push
jns
in
ljmp
in
outsb
lea
mov
hlt
mov
mov
jno
ja
or
fwait
insb
mov
lock
scas
repz
subl
sub
in
jae
hlt
mov
pop
pop
mov
mov
sub
and
xchg
lods
mov
out
in
push
push
and
das
sub
add
pop
mov
es
xchg
sub
cltd
mov
dec
add
dec
je
mov
dec
inc
test
mov
pop
cmp
pop
cs
repz
mov
adc
mov
jo
xchg
iret
mov
adc
cwtl
xchg
mov
jmp
lret
popa
pop
jp
and
repnz
mov
adcb
jg
movsb
arpl
ret
pop
fidivs
sub
dec
call
dec
inc
rcrb
lret
mov
and
lret
pop
pop
xchg
xor
cmpsl
sbb
imul
push
mov
mov
insb
xchg
push
imul
ret
ret
ret
pop
jae
cmpsb
or
dec
lods
adc
jge
aaa
out
cmpb
inc
rorb
mov
repz
xchg
js
in
lret
adc
sahf
mov
int3
ja
fcmovu
jle
lahf
popa
ret
arpl
outsl
or
push
push
cmp
repz
xchg
lods
ret
pop
pop
js
xchg
testb
sbbb
rclb
or
fcoml
fbstp
jge
movsb
jge
mov
add
in
test
xchg
push
mov
jne
iret
leave
mov
daa
and
js
das
les
mov
insl
mov
iret
in
or
add
mov
pop
cwtl
xchg
and
sti
mov
adc
sub
xchg
dec
mov
and
push
push
xchg
es
mov
arpl
das
jns
cltd
call
add
sub
or
push
xor
xor
jle
ret
pusha
adc
and
xor
xchg
pop
dec
js
stos
das
out
pop
ficoms
and
mov
cld
adc
mov
or
push
push
inc
test
js
adc
mov
int3
inc
ret
pop
push
js
push
dec
dec
cltd
pop
roll
xor
cmp
xchg
mov
into
push
lret
xor
sub
and
mov
jl
or
cli
push
push
mov
xor
fildl
out
je
lock
roll
lods
jne
test
sbb
and
lods
iret
imul
push
pop
inc
adc
stc
xchg
sbb
lret
or
repnz
and
mov
out
cld
or
push
push
subb
pushf
rolb
adc
ret
jbe
ja
clc
lahf
dec
stos
dec
inc
adcl
adc
sti
xchg
pop
sub
lret
test
mov
fisubs
xchg
mov
lds
add
into
ds
jno
mov
inc
push
int3
je
mov
jnp,pt
insl
fs
xchg
xor
inc
jo
xchg
lock
std
mov
jecxz
sub
mov
inc
sub
sub
mov
push
xorb
sub
xchg
repz
xor
xchg
mov
std
repnz
shlb
cmc
pop
mov
inc
sbb
jno
mov
pop
push
mov
cmpsb
dec
aam
sahf
xchg
andb
popf
xchg
dec
jae
bound
outsl
cmc
je
pop
mov
add
cmp
mov
sub
fs
xchg
mov
xor
inc
lods
mov
lret
leave
std
adc
fbld
xchg
adc
inc
xchg
sbb
subl
xorb
lds
push
repz
xchg
mov
movsl
add
lods
mov
mov
xchg
and
lods
mov
inc
out
orl
or
mov
lret
je
mov
sbb
arpl
pop
dec
or
jo
cmpsb
leave
arpl
xchg
jb
and
xor
andl
iret
pop
push
imul
cmp
lea
mov
mov
push
pop
std
and
stos
bound
mov
inc
gs
ds
jno
mov
add
lea
and
fs
xchg
mov
lea
xchg
add
xchg
bound
mov
inc
filds
dec
data16
mov
add
dec
mov
rorb
mov
lsl
lods
mov
pop
leave
insb
bound
xchg
pop
cmc
sbb
inc
roll
ds
jb
mov
lret
ds
dec
push
adc
cmpb
add
lods
in
sub
std
out
leave
pop
aam
sbb
xchg
mov
inc
inc
and
mov
jno
mov
arpl
or
or
or
xorl
lods
push
push
stc
jecxz
insb
leave
sbb
cmc
adc
stos
sbb
out
mov
je
mov
cmp
inc
xchg
inc
outsl
out
xchg
fildll
enter
pop
mov
inc
mov
or
mov
mov
popa
push
dec
je
mov
cmp
inc
xchg
xchg
out
xor
inc
add
dec
ds
std
sahf
les
cmc
fnstsw
inc
xchg
push
jp,pt
enter
push
cmp
mov
fs
xchg
xchg
and
jle
insl
jo
xchg
add
aaa
push
ljmp
or
mov
movsl
mov
inc
sub
sti
cmp
jl
push
leave
je
mov
rorb
arpl
xchg
insl
cmc
or
mov
add
push
std
es
inc
bound
mov
inc
pushf
xorl
jle
and
je
mov
loopne,pt
or
repnz
mov
xchg
add
push
push
popf
sbb
sub
xchg
fxtract
test
inc
int
push
stos
lds
ds
sti
push
mov
cmp
stc
xchg
mov
or
mov
pop
add
lods
cli
dec
cmp
xchg
adc
xchg
cmc
sub
inc
ja
and
xor
mov
push
push
je
mov
mov
xchg
or
fidivrl
mov
add
fisttpl
add
bound
jg
inc
cmp
mov
cmp
xlat
jno
mov
and
je
mov
cmp
pop
xchg
nop
push
jo
xchg
push
add
int
lods
cmc
sarb
inc
in
adc
movsb
jno
mov
push
pop
je
mov
ds
insl
mov
xor
mov
cmpsb
std
mov
mov
cmc
ret
mov
fisubrl
inc
cmp
mov
jb
mov
cmp
add
loopne
ljmp
push
or
inc
jo
xchg
lahf
xor
jmp
jle
icebp
xchg
cmc
add
cmp
xchg
jl
shlb
mov
push
shlb
mov
cmp
adcl
xchg
add
std
ss
mov
and
addb
inc
pop
orb
dec
xchg
ds
jno
mov
push
jno
mov
popf
fs
xchg
lds
jo
xchg
add
lods
fimull
ds
dec
jmp
sbb
inc
sbb
lea
fnsave
mov
mov
mov
ds
ficoml
mov
rolb
adc
pop
std
je
test
xchg
inc
cmc
or
inc
and
in
js
jp
push
cmp
mov
ja,pt
xor
xlat
in
or
mov
clc
add
jmp
mov
add
xchg
cmpsl
cmc
mov
inc
inc
repz
inc
jns
sbb
mov
jb
mov
push
shrb
jnp
fsts
daa
ss
lcall
rcrb
sub
mov
mov
dec
ljmp
mov
cmp
fs
jp
sbb
jg
popa
inc
fsubr
scas
xchg
push
movsl
mov
adc
iret
and
dec
icebp
aam
xchg
stos
xchg
shrb
int
sub
pop
test
fildl
out
lock
mov
adc
mov
es
in
inc
or
mov
scas
xchg
xchg
out
sbb
dec
push
mov
or
mov
cmp
fs
fldt
xchg
cli
jg
mov
fldt
dec
loopne
iret
cmpsl
dec
ret
ljmp
test
and
pop
mov
xchg
ja
cmpsb
fdivs
add
loop
pop
add
ds
inc
inc
xchg
ret
daa
fisttpl
sbb
pop
or
arpl
nop
int
mov
inc
addr16
sub
pop
lea
rcrl
cld
jbe
shrl
push
mov
frstor
lcall
xchg
fsubs
cmpsb
lds
or
add
xor
rolb
call
sbbb
out
orb
insl
shlb
sar
mov
jl
idivl
fdivl
hlt
jmp
les
test
popl
and
leave
mov
xor
std
loope
lds
lret
fucomi
enter
stc
fisubrs
ret
lret
add
outsl
ss
shrb
stos
mov
repnz
out
or
xor
sub
inc
vcomiss
or
mov
xchg
mov
or
int3
out
bsr
adc
fcmovnb
push
push
pop
popf
pop
cmpsl
pop
xchg
cmp
mov
push
xchg
xor
and
insl
rcl
lods
xchg
ja
sub
mov
popa
pop
lods
xchg
jp
je
aad
test
jbe
in
cmp
cmc
pop
xadd
cmp
dec
add
movsb
add
iret
jl
cmp
push
push
shlb
mov
inc
mov
jmp
mov
das
mov
aam
cmp
pop
outsl
xchg
jg
xchg
xchg
pop
mov
pop
push
je
adc
mov
mov
fucomp
rolb
mov
cltd
iret
add
mov
cmpb
lret
xlat
xlat
lcall
imul
dec
xor
fs
mov
jge
es
fildl
xchg
xchg
aad
stos
ja
ficoms
jmp
insb
ds
pushf
mulb
testb
inc
mov
mov
pop
iret
mov
popa
icebp
pop
mov
pushf
and
out
scas
xchg
jmp
add
gs
enter
push
xchg
insl
nop
push
enter
add
sahf
mov
or
sahf
cmp
push
xchg
sbb
pusha
mov
mov
leave
sbb
out
iret
dec
test
push
fildll
add
lret
sbb
test
outsb
xchg
out
jmp
fimull
xor
pop
mov
push
fmuls
xchg
push
out
xor
icebp
das
jge
mov
or
movsl
inc
jno
or
bnd
adc
add
mov
test
scas
jle
into
cmp
mov
mov
outsl
add
lahf
adc
in
push
aad
xor
xor
cmp
iret
sbb
rorb
jne
mov
xor
dec
lcall
fcmovnb
inc
data16
cmp
stos
rorl
xchg
jp
dec
xchg
cmp
or
jecxz
clc
test
xchg
xchg
or
outsb
mov
scas
out
push
aas
jecxz
xchg
ljmp
enter
add
inc
fcmovnu
mov
cmp
into
dec
and
push
add
int
pop
xchg
dec
xchg
mov
pop
sarb
daa
jle
mov
and
in
pusha
mov
sarb
lcall
aam
icebp
lods
fcomip
into
ljmp
dec
jnp
push
popf
rclb
or
into
cmp
jg
xchg
mov
mov
add
ds
outsl
filds
dec
pop
divl
mov
cld
push
out
jae
mov
ds
dec
or
cmp
jo
xchg
xchg
lods
sbb
arpl
leave
sbb
xchg
imul
adc
inc
cmp
add
bnd
mov
push
sbb
in
cmp
lea
mov
int3
add
pop
push
dec
repnz
add
xchg
mov
or
inc
adc
aad
xor
out
mov
sahf
fs
inc
mov
in
push
xchg
std
mov
xchg
push
into
dec
pop
inc
subb
cmp
xor
mov
ds
dec
xchg
fs
shlb
xchg
push
testb
out
push
cmc
lret
mov
inc
mov
push
ds
jb
mov
lret
ds
dec
scas
fs
xchg
xlat
lahf
outsl
outsb
xchg
add
lods
lcall
aad
jb
or
jns
testl
pop
jb
mov
scas
push
ret
mov
rorb
arpl
xchg
fcmovb
or
xchg
xor
sbb
std
lahf
leave
into
in
xchg
push
adc
add
mov
sub
jae
mov
ds
dec
sub
mov
js
lods
xchg
ficoml
in
popa
jns
pop
cmc
adc
lret
inc
aaa
push
stos
xor
test
jae
dec
mov
push
inc
je
mov
cmpsl
sbb
mov
pushf
add
dec
bound
mov
inc
mov
inc
subb
dec
aas
divb
mov
and
je
mov
ds
jno
sub
mov
std
inc
leave
clc
popa
leave
xchg
mov
lock
inc
movb
lea
mov
sbb
je
mov
sub
or
mov
fiaddl
mov
pushf
std
adc
pop
out
das
cmc
push
outsl
inc
mov
dec
adc
push
or
ds
pop
mov
xchg
add
lods
xchg
dec
sbb
jl
aas
xchg
out
hlt
test
jecxz
movsl
cmp
jbe
push
mov
jae
mov
rorb
cltd
xchg
out
or
xchg
add
lods
jl
int3
mov
setae
cmpsb
mov
inc
dec
addb
dec
dec
add
loopne
xchg
jae
mov
ds
dec
scas
fs
xchg
mov
or
xchg
adc
fimuls
mov
mov
repnz
xor
test
inc
push
mov
rolb
mov
jb
mov
bound
fs
lahf
xor
clc
mov
add
cli
dec
pushf
mov
xchg
sub
inc
mov
inc
movl
enter
push
and
cmp
addr16
mov
and
and
iret
mov
daa
int
or
sahf
addl
or
mov
push
imul
mull
xchg
cmc
xor
outsl
sub
push
xlat
sbb
or
mov
inc
xchg
in
pop
mov
inc
mov
test
jp
mov
push
push
je
mov
ds
pop
fs
xchg
cwtl
mov
jo
xchg
push
fwait
or
outsb
leave
xchg
xchg
into
cmc
loopne
jmp
rcll
rolb
out
inc
jb
mov
push
xor
in
cmp
enter
or
xchg
add
lods
pushf
dec
fstpl
xchg
inc
cmc
add
inc
adc
sbb
je
mov
je,pt
add
mov
or
xchg
push
xchg
icebp
cld
sbb
pop
bound
mov
ds
inc
dec
jge
cmp
jo
push
push
je
mov
ds
xchg
sub
call
lods
add
pop
std
and
jle
inc
scas
xchg
adc
ds
jno
mov
jnp
pop
sbb
xchg
add
sar
leave
and
jge
inc
cmp
mov
cmpsb
push
xor
aam
repz
add
mov
rolb
mov
ss
adc
into
bound
xchg
imul
jno
inc
mov
jno
mov
dec
push
adc
fwait
mov
testb
push
xchg
push
rorl
imul
add
lods
or
xchg
pop
leave
add
hlt
sbb
inc
push
cmpb
dec
ds
jno
mov
ss
pushl
mov
ds
out
pusha
jo
xchg
add
std
jle
call
cmc
jecxz
sub
ss
in
lea
fbstp
mov
inc
mov
cmp
ret
xchg
gs
or
sub
xchg
add
lods
pop
push
add
popa
repz
xlat
dec
xor
cmpb
xchg
jno
mov
push
mov
ds
addr16
sub
or
mov
xchg
sbb
cmp
xchg
arpl
adc
or
inc
jge
push
cltd
jae
pop
xchg
push
int3
inc
lea
sbb
adc
cmpsl
xchg
dec
into
iret
fmuls
mov
push
and
das
jo
iret
out
std
dec
add
fistl
lods
pop
loope
fsubr
mov
in
sti
ja
cmp
bound
jle
roll
pop
inc
mov
in
push
sahf
and
enter
xchg
rcr
hlt
jmp
xor
or
ja
aam
or
xchg
fldcw
mov
pop
pop
sub
and
rcr
push
inc
push
mov
inc
nop
inc
icebp
sub
in
lret
xchg
pop
in
out
adc
sbb
mov
jae
jmp
mov
add
cmp
push
lea
push
dec
addb
jecxz
shlw
inc
mov
sbb
push
pop
inc
mov
aas
enter
xchg
rorb
add
pop
or
scas
test
add
cmp
jmp
xor
sbb
mov
mov
and
pop
xchg
dec
fcmovnb
xchg
and
imul
lea
push
rclb
mov
enter
xchg
andb
inc
jmp
js
das
shll
push
shl
repz
xor
xchg
or
ja
sub
jae
inc
xor
or
xchg
add
fisubrl
out
popf
push
mov
shl
adc
into
jne
rorl
cmpsb
mov
jmp
pop
outsb
leave
mov
int3
add
imul
leave
and
xchg
ss
adc
add
sti
mov
insb
ret
cld
sahf
nop
add
dec
ss
in
jg
add
outsb
xchg
repnz
out
add
test
imul
xchg
mov
lods
aaa
xchg
mov
pop
iret
sarb
popa
sahf
xchg
rcl
xchg
ja
pushf
jmp
out
sub
ja
push
push
mov
aam
sbb
pusha
push
xlat
les
xchg
pop
push
mov
int
out
fcmovnb
scas
mov
xchg
lods
test
push
xchg
ret
fistpl
test
dec
loop
iret
xchg
into
and
mov
or
add
cwtl
sub
out
test
pop
sahf
sti
push
fistl
xorb
lods
add
enter
daa
repz
decl
ficompl
nop
mov
and
sub
popf
mov
fildll
adc
push
cwtl
xchg
js
or
sbb
lods
mov
imul
insb
mov
or
popf
add
jbe
inc
inc
das
imul
cmp
test
outsb
fisttpl
xchg
xor
pop
adc
push
fcmovnbe
adc
mov
mov
cmpsl
sbb
mov
adc
dec
xchg
cli
push
or
lahf
loopne
sti
mov
xor
fmuls
rcrb
js
xchg
lret
push
push
sbb
push
inc
pop
add
jnp
nop
or
les
adc
mov
and
jg
mov
insl
lret
int
sub
imul
lret
test
rcrl
pushf
in
imul
sbb
adc
dec
sbb
inc
stos
xchg
movhps
into
mov
in
sub
or
scas
ds
fmul
das
andl
mov
cmp
test
xlat
iret
mov
cmp
mov
xchg
pushf
sti
pop
xchg
mov
inc
jns
jp
jmp
sbb
jecxz
cwtl
std
int3
mov
testl
sbb
iret
daa
jae
fists
rcr
imull
scas
add
stos
int3
in
xor
adc
repnz
pop
dec
iret
mov
cmp
mov
stc
sahf
out
sahf
iret
pop
sub
mov
adcl
in
cmp
push
sub
call
mov
or
adc
push
sarb
daa
je
mov
loop
iret
in
xlat
imul
jb
or
cmp
push
cmpsb
test
andl
push
test
sub
cmp
jecxz
int
jbe
mov
outsl
out
clc
mov
lret
pop
mov
mov
push
and
fisttpl
int3
mov
xor
push
add
sub
sbb
add
sbb
int
pop
inc
jns
rcrl
push
and
mov
fld
adc
clc
xchg
inc
repz
push
fcomi
ret
mov
fdiv
je
insb
push
test
int3
mov
shl
jae
cmpb
iret
mov
pop
das
fincstp
insl
dec
loop
into
pop
imul
mov
xchg
out
out
xchg
jbe
mov
out
fldt
aam
pop
pop
jbe
mov
mov
enter
repz
test
sub
dec
icebp
xchg
push
lea
fcmovnu
jbe
movsl
sbb
arpl
into
faddp
int
test
xchg
xorb
mov
add
clc
test
add
adc
inc
sub
lods
aam
das
jecxz
jge
fcomi
mov
jg
into
xor
cmp
xchg
mov
cs
out
ret
jo
sti
fcmovnbe
out
mov
lods
inc
cmp
mov
xchg
aas
pop
dec
mov
iret
jecxz
jle
icebp
sti
push
in
lahf
mov
sbb
sub
xchg
mov
push
lret
addl
pop
movsb
mov
data16
add
fcomi
add
enter
cmp
cmp
in
inc
fbstp
lea
add
fs
push
iret
inc
or
pop
xor
lcall
jns
add
push
xchg
shlb
aam
outsb
mov
test
xchg
fdivl
dec
aad
aaa
inc
bound
arpl
lahf
gs
adc
subb
lahf
mov
mov
cmp
ret
mov
lods
sub
xchg
sub
push
xchg
jle
fistps
fldt
addr16
xchg
gs
in
into
insb
sbb
push
ja
pushf
lock
lock
xchg
cmpsb
hlt
arpl
lods
mov
movsb
xlat
iret
jmp
outsl
add
std
add
sub
add
xchg
lahf
inc
aam
sbb
mov
fstpt
adc
jge
cmpsl
sub
fistpl
stos
aaa
xchg
sub
add
iret
lcall
fmull
iret
cmp
pusha
add
sbb
enter
insl
mov
xchg
sbb
sahf
aaa
aad
iret
add
test
adc
divb
cmp
sbb
aad
xor
lcall
dec
jnp
fwait
iret
out
jne
lret
jae
and
bnd
push
push
test
insb
stos
stc
shll
repz
imul
fistl
addr16
aaa
dec
mov
jo
bnd
sbb
iret
subl
in
test
pop
push
jno
add
or
inc
cmpsb
mov
add
mov
fisubrs
fwait
sub
mov
dec
sub
ficoml
add
gs
lret
jmp
loopne
in
into
ljmp
xchg
xchg
mov
int3
adc
imul
xlat
fcmovnu
jg
filds
sbb
aas
iret
cmpsb
in
mov
std
xchg
mov
das
inc
xchg
fidivrl
or
insl
sub
fcmovne
mov
mov
push
seto
inc
jp
fimull
mov
icebp
lcall
lods
lret
jmp
faddl
mov
sub
hlt
push
xchg
enter
int
sbb
and
iret
test
sub
popa
xchg
into
es
pusha
ja
pop
mov
mov
ret
shr
out
push
js
or
sbb
mov
mov
jmp
xlat
xor
dec
decl
xchg
mov
add
lret
rcrb
ss
xchg
loop
mov
imulb
jmp
xchg
pop
push
fstpl
enter
les
ds
js
rcrb
ds
inc
or
gs
jbe
jp
pop
push
cld
dec
mov
pop
iret
aam
xchg
hlt
punpckhwd
inc
pop
outsb
jnp
frstor
out
test
inc
adc
jmp
int3
jae
mov
adc
mov
pop
imul
loope
xchg
fwait
push
jae
jge
and
push
inc
sbb
pcmpeqb
ds
push
insb
iret
sbb
mov
adc
insl
lahf
adc
sub
mov
mov
dec
pop
shlb
out
enter
push
jbe
int
aad
add
lock
inc
and
test
pop
pop
jp
rcrb
inc
lret
repz
sub
ja
sti
lcall
fsts
stos
or
xchg
fadd
notl
pop
xchg
stos
xchg
dec
inc
imul
cwtl
pop
mov
outsb
loope
mov
popf
loope
xchg
ret
test
insb
jge
std
xchg
test
inc
mov
stc
int3
adc
scas
in
sbb
daa
push
icebp
cs
inc
jp
test
nop
pop
xchg
paddusw
outsl
dec
sub
sti
cld
and
push
loope
mov
repnz
pop
popl
movsl
mov
sbbb
jb
dec
fistpl
clc
push
int3
sub
cli
xor
dec
lds
mov
incb
jge
jae
out
xor
int
and
aaa
cmc
cmp
jle
mov
mov
loop
iret
lea
fldt
int
mov
daa
xor
xchg
stc
inc
mov
lret
adc
mov
push
jge
iret
loopne
ret
out
jo
inc
inc
movsl
sbb
loopne
cmc
movsb
pop
iret
and
sub
shl
mov
lods
pop
outsl
out
push
pushf
iret
fiaddl
divl
adc
jl
cmp
out
fisttpl
jp
inc
nop
xchg
jmp
cli
inc
out
into
cmp
push
lcall
iret
out
daa
lock
cld
fnstenv
xchg
icebp
loopne
lret
into
cmp
aas
das
mov
mov
and
fsts
xchg
dec
call
testb
pop
sub
subb
iret
leave
adc
cmpsl
cmpb
cmpsb
fimuls
jne
cli
sti
sti
in
rclb
inc
jmp
sbb
lret
es
jl
iret
pop
lods
mov
cld
rolb
xchg
xlat
dec
push
dec
aaa
imul
enter
mov
fwait
or
lods
xchg
mov
dec
xchg
pusha
cld
xchg
test
mov
cmp
inc
iret
imul
xchg
jae
out
xchg
sub
test
sti
fbstp
or
mov
sub
pop
xor
loope
xchg
ficoml
push
inc
mov
xchg
mov
js
push
mov
cltd
mov
or
ret
out
xchg
cmp
lds
fstpt
out
mov
adc
jg
or
call
xchg
loop
fcmovne
pop
lcall
leave
lock
mov
mov
pop
les
ja
xor
int
dec
test
iret
pop
sbb
decl
xchg
cli
inc
xchg
mov
out
mov
fisttpl
mov
jg
mov
daa
les
xchg
add
test
push
lret
push
daa
inc
fildl
mov
loope
jecxz
dec
sbb
stc
sub
sub
cmp
pop
xchg
and
iret
jo
test
popl
scas
pushf
mov
and
mov
inc
xor
xchg
aam
out
xchg
sbb
fwait
movb
mov
rclb
jmp
movsl
and
mov
jbe
inc
and
cmpsl
rcll
fildl
popa
mov
mov
mov
incb
xchg
scas
outsl
xchg
fwait
out
mov
pop
std
lock
int
movsl
sarb
dec
jp
sbb
xor
iret
fists
jb
jecxz
xchg
dec
lds
pop
shll
js
leave
hlt
cld
add
fisubrl
jge
adc
test
comiss
cmp
cmp
lret
push
adc
inc
sub
jl
movsb
xchg
stos
xor
rcl
fcmovnbe
into
or
mov
lahf
xorl
in
nop
mov
fisttpl
xlat
movsl
gs
shlb
xchg
and
fistpl
or
add
sbb
loope
adc
iret
mov
jo
test
push
movsb
pop
jp
push
add
cmpsl
dec
ret
jl
push
fs
push
dec
sbb
mov
sarl
movsl
addl
icebp
xor
cltd
fmul
scas
lods
test
call
dec
adcl
enter
ds
or
lods
pop
cli
jo
mov
into
jmp
out
xchg
in
adc
repz
xlat
shll
iret
adc
call
fwait
xchg
mov
repnz
add
jno
mov
in
lea
cld
mov
xchg
xor
pop
ret
or
aaa
adcb
push
int3
clc
jp
insb
dec
xchg
mov
dec
pop
adc
ret
jnp
out
jno
filds
out
mov
adc
fsubrl
mov
test
imul
pop
adc
xchg
mov
pop
push
aas
pushf
aas
rclb
adc
movsb
lret
ficoml
mov
jg
push
xor
jnp
imul
xchg
jg
sbb
hlt
sub
rclb
push
into
in
shll
inc
jnp
sti
inc
lahf
mov
xchg
or
adc
mov
jno
cmpsl
imul
mov
add
iret
cmp
mov
jmp
ret
add
xlat
cmp
into
rorl
cmp
stos
movsl
dec
inc
jl
xchg
movsb
xchg
mov
loop
ds
xchg
xchg
inc
rorl
pushf
lea
cmp
inc
mov
sub
jno
xchg
fcmovne
mov
das
sarb
push
push
scas
add
aam
pop
dec
jle
or
xchg
sahf
jp
fs
and
cmp
xchg
dec
cld
leave
out
sbb
stos
jge
les
shlb
fldt
cmp
push
and
mov
aaa
cmp
sahf
fnsetpm(287
inc
dec
adc
lock
adc
pusha
pop
rcr
dec
mov
out
xor
imul
sub
adc
dec
sub
inc
rcll
mov
int
pop
cmp
shlb
movsb
push
push
outsb
in
or
dec
cmp
pop
test
test
mov
jae
xchg
in
and
outsb
fwait
out
imul
jmp
leave
rcrb
mov
xchg
mov
jbe
ja
fdivrp
push
jecxz
mov
insb
and
add
call
inc
fldt
int
cmp
mov
pop
sub
sbbb
lcall
jno
test
mulb
insl
xor
ja
pop
mov
hlt
das
inc
fldenv
iret
sub
pop
stc
pop
ss
xchg
enter
xor
daa
xchg
into
test
mov
inc
mov
push
in
inc
inc
imul
sbb
subps
fldt
sbb
push
sbb
xchg
test
add
jns
xchg
sbb
mov
pop
mov
cwtl
mov
mov
xchg
fcoml
pop
xchg
sub
lock
shrb
addr16
xchg
stc
insb
or
sbb
mov
aam
add
xchg
test
sti
cmpsl
scas
push
addr16
adc
test
jg
mov
adc
pcmpgtw
test
js
loop
mov
adc
pop
add
cmp
ds
addb
cmp
shrl
aad
or
mov
push
mov
gs
fsts
adc
push
mov
push
ljmp
xchg
or
mov
and
ret
push
push
cwtl
mov
iret
shll
es
inc
sub
fsubrs
jecxz
imul
jg
test
test
iret
push
stos
xchg
xchg
sub
out
es
adc
iret
mov
jle
imul
and
lea
and
sub
xchg
pop
icebp
insb
imul
jle
sub
fildl
xchg
push
jp
iret
loopne
lret
or
adc
jg
cmp
insl
sub
add
incb
mov
push
push
cmp
xchg
iret
push
cli
repnz
push
pop
xchg
call
and
rorb
stc
fwait
into
inc
lret
dec
bound
dec
inc
cld
push
or
test
loop
push
clc
cmp
pop
inc
mov
mov
mulb
sbb
lret
sub
sbb
dec
scas
arpl
cmp
leave
lea
add
test
arpl
mov
ret
pop
mov
hlt
je
roll
dec
push
es
in
jne
cmpsb
das
insb
insl
lahf
jecxz
iret
ret
pop
mov
jbe
dec
rcll
xchg
clc
xchg
test
rolb
or
adc
popa
gs
popf
sub
add
mov
js
xor
aad
add
je
lds
pusha
fstpt
fcomi
and
inc
sti
fnsave
pop
adc
test
xchg
pushf
jb
cwtl
imul
cmp
mov
andb
jle
fchs
cmpsb
xor
scas
or
cmpsl
add
lret
mov
in
cmpb
fiadds
sti
subl
pop
enter
xchg
fs
sbbb
mov
aaa
imul
mov
mov
jge
mov
decl
negb
adc
xchg
mov
add
fxch
xchg
push
std
pop
mov
dec
cmp
push
mov
lea
fcmovu
inc
sbb
in
pop
jnp
jle
add
lret
test
jns
jmp
sub
call
mov
loope
mov
inc
aas
mov
push
cmp
mov
adc
mov
fwait
jle
jno
push
jb
adc
jo
sbbl
fcoms
pop
add
dec
mov
mov
into
leave
sbb
shl
mov
in
adc
mov
cmp
and
inc
roll
cld
jecxz
mov
insl
in
out
rolb
jnp
jle
cmp
notb
scas
aam
xchg
mov
ret
cmpsb
lods
mov
lcall
xor
leave
fcmovb
leave
sbb
scas
push
xchg
out
mov
adc
xchg
es
add
addl
pop
outsb
pop
xchg
sub
dec
inc
aam
xchg
inc
xchg
xchg
repz
mov
and
xor
ss
adc
ror
movsb
pop
xchg
sbb
lret
xchg
fists
imul
push
lcall
les
insb
fucomi
mov
xchg
jmp
aas
pop
fisttpl
imul
jb
mov
adc
pushf
roll
data16
mov
adc
imul
jp
std
xchg
pusha
stos
iret
roll
ret
fsub
jne
popa
xchg
adc
cmp
mov
dec
bound
imul
loop
leave
xchg
xlat
push
iret
dec
insl
sbb
ljmp
aam
stos
mov
xchg
add
test
in
adc
iret
ljmp
mov
iret
cmp
inc
repz
inc
iret
sub
xor
aas
pop
orb
loop
rolb
fnstenv
pushf
test
or
cwtl
ficoml
jecxz
push
inc
push
xchg
mov
into
push
dec
arpl
xchg
inc
jne
xchg
mov
xchg
jecxz
das
dec
ja
jo
aam
fiadds
jg
add
jbe
dec
andl
ljmp
push
ret
jmp
aam
or
movsl
dec
sub
push
xchg
hlt
mov
add
fisubl
push
outsb
sar
not
shll
daa
repnz
xor
out
xchg
stos
xchg
pop
cmp
dec
sub
push
jg
out
daa
cmpsb
les
stos
pop
jo
cmp
in
cltd
popf
mov
adc
xlat
shll
mov
pop
iret
lahf
jmp
addr16
xchg
pop
ffree
gs
cmpsl
sti
mov
push
xchg
stc
mov
movsl
jmp
test
sbb
stos
inc
mov
lret
subl
add
in
cmp
dec
into
and
mov
fstpt
dec
pop
je
clc
adc
sbb
pand
ds
cmpl
mov
imul
bound
iret
les
rolb
xlat
inc
and
test
jmp
enter
cld
insb
and
jb
cmpsl
aaa
clc
and
out
sbb
xor
mov
sahf
pop
mov
fistpl
pop
out
aad
fsts
roll
adc
adc
pop
dec
mov
push
mov
jmp
test
int
sub
f2xm1
adc
ds
push
dec
dec
aaa
out
test
pop
daa
cli
insb
sub
out
jp
jb
and
jg
testl
enter
xchg
adc
es
jp,pn
daa
jle
into
inc
into
sub
jno
fistps
je
add
std
and
jp
cmp
call
sti
and
out
enter
push
fldt
add
xor
cmp
push
data16
stos
mov
arpl
insb
xchg
mov
sbb
adcl
cltd
sub
xchg
mov
aam
scas
dec
sub
aam
mov
mov
mov
lock
mov
xchg
add
push
xchg
jg
shll
mov
icebp
fstpt
aas
sbb
push
out
int
mov
fwait
leave
or
xor
fwait
cmpsl
dec
leave
add
mov
movb
push
test
mov
mov
push
call
es
pop
scas
jg
aaa
inc
or
std
into
pop
or
enter
mov
push
and
iret
in
or
mov
cmp
ficoms
movl
jp
xchg
sub
or
mov
push
iret
sbb
pushf
add
jge
sub
repz
dec
mov
adc
xchg
mov
push
xchg
outsl
cmp
hlt
jns
xchg
int
mov
movsl
out
out
mov
orb
pushf
fcmovnb
popf
cld
jo
call
pop
cli
inc
hlt
xchg
push
dec
xchg
stc
jmp
aas
push
cmp
xchg
or
dec
rsm
push
in
cmpsl
mov
into
pusha
sub
push
adc
aaa
sbb
int3
sbb
orl
int
xor
and
pop
inc
xchg
xor
rep
fstps
das
push
std
mov
sub
add
jmp
cmp
cmp
xchg
pop
int
in
into
out
adc
adc
cmp
dec
inc
sub
test
jecxz
mov
paddusb
arpl
fisttpll
mov
xchg
jne
test
lahf
sbb
gs
js
push
enter
out
mov
xchg
jp
cltd
push
push
shl
fcoms
inc
adc
lds
data16
mov
fcmovnb
mov
je
lods
jnp
iret
add
pop
fcom
lds
test
cli
inc
adc
xchg
sbb
adc
lcall
cmp
xor
gs
iret
add
mov
sarb
jnp
and
mov
mov
jge
push
sub
fistps
stos
push
sti
mov
mov
jmp
inc
or
cmp
ss
mov
push
int3
shlb
push
fbld
jb
add
nop
incl
dec
add
daa
or
xchg
loop
sub
pop
xor
out
push
iret
shll
mov
xchg
aaa
pop
icebp
aad
repz
sti
ftst
aaa
movsl
inc
fisubs
cs
sbb
in
into
rcrl
mov
xchg
fiaddl
xchg
loopne
mov
call
cmp
xor
repz
sbb
int3
xchg
pop
mov
and
pop
mov
decl
shl
nop
adc
leave
xchg
lock
adc
xchg
mov
pop
xchg
push
rcrl
fstpt
push
push
push
out
jecxz
iret
dec
fbstp
scas
sbb
jmp
mov
mov
lock
xchg
xlat
adc
jne
mov
cld
jae
mov
or
xchg
jb
out
mov
add
imul
ds
and
adc
ss
ficomps
fnstsw
push
sub
sarl
je
sub
in
hlt
cmp
pop
xlat
outsb
movsl
iret
aaa
xchg
jb
xor
and
ss
mov
push
xchg
mov
stos
and
inc
ds
inc
mov
aam
bound
divl
or
out
cmp
pop
jecxz
loope
inc
sti
pop
jmp
cwtl
into
cli
movsb
xchg
xchg
pop
mov
clc
lods
scas
inc
xlat
add
out
xchg
cmc
rolb
popa
lds
xor
xor
mov
fcmovbe
lods
scas
dec
fisttps
cwtl
fcmovb
xchg
cmpsb
push
nop
pop
xor
xchg
and
inc
mov
mov
dec
daa
pop
iret
and
mov
iret
cwtl
mov
cmp
gs
xchg
jmp
test
adcb
aas
push
aam
outsb
mov
bound
and
jnp
jp
xchg
xchg
jmp
clc
shll
mov
insb
mov
pop
cmpsl
sub
movsb
mov
out
push
jecxz
adcl
xchg
imul
jne
fdivrs
aam
orl
sub
in
sub
mov
into
or
std
push
adc
xor
into
sub
mov
xor
xchg
sub
stc
test
sbb
fwait
sub
std
test
aad
push
bound
sub
js
lock
in
lods
lret
iret
fsubs
fistl
or
les
arpl
jns
shll
lods
dec
or
cmc
aas
js
add
or
movsl
xor
movsb
jle
mov
xchg
notl
fildl
scas
mov
cmp
jo
cmovns
ja
push
mull
and
imul
push
loopne
frstor
outsb
loope
pop
rcrl
xchg
fmull
xchg
popf
or
loop
xlat
cltd
adc
xchg
mov
mov
jmp
cltd
jae
dec
and
inc
push
rolb
adc
xlat
clc
push
cmp
xchg
subl
iret
mov
outsl
and
lcall
fsubrp
jecxz
cmc
or
jb
fcomi
aam
sahf
fisubl
std
fisttpl
mov
push
cwtl
out
out
xchg
stos
and
ja
push
aam
push
xchg
cmp
mov
icebp
aam
push
aad
push
and
mov
fildl
push
or
sahf
into
idivb
inc
repz
addl
ljmp
jnp
repz
push
test
mov
xchg
and
sbb
or
lcall
ds
cld
add
adc
lods
jge
dec
stos
sar
xor
insl
fstpt
outsl
xchg
dec
pop
jns
int
std
leave
and
neg
popf
aaa
or
mov
lods
adc
jo
mov
or
pop
push
xchg
xor
movb
pop
insl
cmc
int3
mov
pop
mov
xchg
jb
scas
mov
xor
adc
sub
pop
adc
scas
icebp
mov
insb
shl
scas
pusha
cmovbe
jg
mov
or
or
sbbb
iret
lods
mov
and
pop
jmp
xchg
inc
inc
ret
insb
add
imul
inc
je
lods
or
iret
mov
inc
push
xchg
lahf
push
ret
test
leave
sbb
xchg
mov
xchg
jno
mov
insb
lds
mov
mov
pop
enter
nop
dec
pop
iret
sbb
jp
ja
mov
adc
sti
xchg
pop
ffreep
callw
les
push
packssdw
fisttpl
dec
mov
pop
shll
xchg
jp
jo
arpl
or
rorb
mov
cwtl
in
fcoml
pop
mov
jae
sub
xor
fwait
xor
test
add
ds
push
mov
jmp
cmpsb
les
mov
pop
scas
test
pop
aas
xchg
in
mov
decb
js
dec
and
fiadds
dec
outsl
hlt
outsb
or
and
fildll
mov
inc
xchg
scas
ficomps
loop
sub
mov
icebp
pop
jnp
adc
aam
movsb
mov
sbb
stc
xchg
mov
mov
add
xlat
push
loope
and
adc
push
pushl
adc
mov
repnz
xchg
cmp
scas
enter
and
xchg
fldt
mov
aam
lods
in
fldt
ret
dec
jbe
mov
sbb
adc
mov
xchg
std
lcall
hlt
loopne,pn
out
jns
mov
lock
pop
cli
and
ret
fcmovnbe
jge
push
xlat
sahf
mov
add
cmp
movsl
mov
sahf
xor
sbb
cmpsl
xlat
dec
mov
das
iret
out
lods
lahf
xor
lret
pop
leave
pop
insl
and
mull
pop
adcl
fstp
jo
jae
test
xchg
cmp
xor
jo
dec
push
leave
pop
xlat
mov
imul
or
xchg
aam
push
outsl
ja
test
and
enterw
mov
jg
fcmovnbe
xchg
pop
mov
iret
je
push
jo
into
jle
ja
adc
int3
sbb
test
or
nop
into
lods
idivb
dec
xor
loop
jb
iret
data16
arpl
pop
cli
adc
fistpl
cmp
das
repnz
cmpsb
xor
xchg
lds
push
adcl
mov
adc
les
gs
shl
jmp
xor
lahf
xor
cmp
xlat
jg
int3
adc
insl
rcll
pop
cmp
neg
mov
fimull
jne
das
lret
dec
push
add
cmpsb
popa
std
fistps
mov
xchg
adc
xchg
scas
fstpt
jecxz
sbb
icebp
call
cmp
lods
adc
xchg
or
aam
push
jmp
xorl
in
testb
rclb
sbb
dec
fildl
out
jge
cmc
push
iret
in
lahf
dec
cltd
mov
add
sbb
sbb
cmp
pop
sti
in
int
fdivr
out
shr
mov
aas
dec
jmp
xor
pop
xchg
divb
mov
lods
rcrb
into
sub
or
or
leave
movsb
xchg
mov
add
xchg
test
rcl
adc
leave
cmp
ds
inc
aas
arpl
xchg
add
pop
mov
cmp
xchg
inc
aas
sbb
mov
ficoms
cs
push
xchg
test
mov
loope
scas
in
jmp
mov
out
movzbl
inc
int
cmpsb
aad
mov
lock
bsf
push
pop
xchg
fs
je
mov
push
loope
loope
iret
mov
jecxz
and
mov
jno
sbb
into
mov
mov
imul
xchg
roll
cli
fstpl
adc
sar
jne
loope
aam
orl
or
push
orl
test
mov
xlat
pop
call
mov
dec
shlb
push
cmp
jnp
outsb
ja
cmp
xchg
mov
out
adc
xchg
jle
jb
cmpsb
in
sbb
xchg
cwtl
movsl
sub
push
push
xchg
cmp
test
push
shlb
xchg
fwait
fldl
and
mov
cmp
pop
fisttpl
jp
popa
std
fs
sbb
daa
jne
push
inc
xchg
in
cmpsb
xchg
sarb
movl
mov
test
paddusb
pop
sahf
dec
clc
push
rcrb
mov
fisubrl
push
std
sti
lahf
mov
xchg
push
outsl
imul
fistpl
dec
stc
add
ja
pop
movl
movsb
mov
roll
iret
or
mov
aaa
cmp
xchg
lret
mov
sub
mov
dec
inc
lea
test
xor
mov
cld
sub
or
fildl
pushf
je
scas
outsb
or
ret
inc
push
add
sbb
or
push
mov
addr16
cmp
popf
fiaddl
out
stos
pop
addr16
or
sbb
push
cmpsb
inc
jo
das
add
jp
sbbl
lock
jne
mov
daa
mov
jecxz
jecxz
xchg
sbb
repnz
push
int
fimuls
insl
dec
xchg
lret
movsl
xchg
testb
call
fisttpl
pop
ret
sti
jmp
xor
imul
add
int
mov
imul
lods
fcmove
mov
test
fistl
jns
jnp
jb
iret
push
and
lea
cwtl
daa
jb
ja
test
fwait
xchg
outsb
mov
out
lahf
aad
xchg
mov
inc
stc
xchg
fistpl
js
dec
mov
cs
cmc
insl
pop
fwait
dec
push
mov
bound
mov
xchg
mov
xchg
pop
xchg
loop
ljmp
data16
cli
aas
test
jp
in
push
shl
js
popf
mov
adc
clc
cmpsb
push
and
ja
fildl
jbe
ja
xchg
xchg
int
fists
mov
les
sti
jmp
jg
adc
xchg
sub
lahf
out
test
pop
inc
sbb
repz
pop
iret
rorb
mov
inc
jo
aaa
popf
arpl
in
sbb
in
adc
stc
lods
lds
jmp
cmp
jmp
inc
push
arpl
in
mov
fwait
mov
mov
adc
ret
mov
std
scas
into
mull
add
adc
pop
loope
out
ds
dec
mov
push
cli
repz
fcomp
cmc
cmp
or
pop
mov
add
adc
adc
adc
mov
int
ds
mov
and
xor
jbe
cmp
outsb
sbb
cmp
imul
xor
sbbb
dec
das
sub
sbb
xchg
test
lds
repz
jnp
sbb
pop
mov
xor
mov
lahf
pop
fildl
sbb
xor
adcb
push
and
sbb
ja,pt
iret
insl
and
popl
add
cltd
push
pop
xchg
xchg
insl
loopne
inc
xor
mov
mov
and
mov
incl
dec
dec
xchg
ret
and
mov
loopne
stc
xchg
xchg
insl
inc
addl
insl
inc
fdivs
into
scas
mov
mov
xchg
imul
lea
jmp
add
fldl
int
pop
push
xor
pop
mov
rcr
xchg
jmp
icebp
or
xor
mov
lret
mov
iret
inc
jae
int3
xor
or
mov
movb
insb
mov
test
mov
stos
mov
imul
jecxz
jle
xor
hlt
lahf
push
imul
sahf
daa
dec
test
xchg
enter
push
movsl
out
movsb
push
stos
stos
xchg
unpcklps
xor
mov
fcmovu
inc
jnp
and
mov
xor
shll
pop
inc
in
fs
fildl
xchg
in
iret
mov
cmc
xor
jne
dec
jb
inc
repnz
pop
popf
xchg
xchg
pushf
cmc
and
fisttpll
xchg
dec
adc
test
cmp
adc
push
js
dec
lods
adc
push
cmp
in
xchg
mov
pop
xchg
leave
fstpt
movsb
or
into
and
int3
pop
cmpsb
push
pop
lret
out
fisubrs
add
pop
and
push
xchg
call
test
rolb
into
js
mov
mov
mov
outsl
test
sti
mov
je
repnz
mov
lods
inc
jno
ljmp
jl
sbb
mov
fcoml
xchg
mov
xchg
push
shll
repnz
and
sbb
pushf
adc
add
out
pop
mov
hlt
fstpt
sarl
mov
lea
mov
cmc
push
fcmovnbe
das
pop
sbb
xchg
push
inc
lret
pop
jg
test
pop
insl
fstpt
fs
ror
cltd
stos
dec
adc
mov
push
push
xor
mov
loop
cltd
adc
xchg
fadds
sbb
cmpsb
jle
fisubrs
dec
xor
sub
iret
sbb
outsl
mov
hlt
and
xchg
jb
xor
or
xor
push
push
push
movl
lods
mov
jb
sub
push
in
jb
mov
fmull
repnz
or
xchg
adc
out
jbe
dec
fwait
pop
hlt
popf
push
dec
imul
rol
sti
repnz
sahf
les
fcmove
xor
insb
xor
scas
mov
mov
xchg
lahf
lret
push
testl
jne
cwtl
cmp
jb
popf
lret
cli
push
test
std
jno
filds
adc
fisttpl
inc
push
and
lds
cmp
adc
cwtl
add
jb
adcl
int
int3
sbb
loope
loop
push
cmp
stc
jbe
push
rorl
inc
xor
nop
dec
jns
insl
xchg
mov
or
cmpsl
push
pop
mov
lods
dec
jnp
ret
fcmovu
xor
repz
add
xchg
sub
dec
ja
pushf
movl
into
and
dec
scas
push
xor
stos
ja
add
mov
jmp
in
xchg
jae
xchg
bound
xor
xchg
insb
stos
and
xor
mov
mov
sub
fstpt
push
push
fdivl
pushf
dec
push
adc
jp
fnstenv
pop
add
push
bound
out
mov
out
andb
fmuls
xchg
sub
daa
leave
fimull
jl
mov
ss
xchg
loope
pop
inc
scas
pop
fisubrl
add
mov
fidivrl
jmp
dec
mov
stos
or
sbb
shrb
pop
mov
out
nop
sti
test
sbb
loopne
jns
xchg
cmp
mov
fcmovnb
js
imul
mov
adc
add
subb
and
fcomip
test
call
inc
sub
push
scas
movsl
lahf
rolb
sahf
sbb
xor
rcrl
jmp
roll
sti
or
fcmovnu
daa
xchg
popl
js
mov
lahf
jo
popf
mov
fcoms
bound
push
cmp
pop
iret
mov
dec
sbb
fists
mov
push
fists
test
mov
inc
insl
and
jb
iret
cmp
xlat
test
mov
cwtl
mov
lcall
adc
pop
mov
fistps
push
xor
out
jg
adc
test
stos
int3
call
fmuls
push
dec
test
jae
sbb
mov
sbb
movsb
int3
sahf
xchg
pushf
push
sbb
sbb
sub
mov
cmc
mov
int3
roll
xchg
addr16
and
or
mov
das
lods
mov
mov
out
pop
loop
iret
out
xor
scas
ja
fmulp
pop
push
add
sub
jp
mov
gs
and
pop
out
inc
add
ret
jecxz
iret
xor
xchg
adc
xchg
insl
fcomi
cmp
fwait
iret
inc
enter
repz
xchg
jae
ss
repz
adc
jl
hlt
sub
dec
cmp
orl
cwtl
pop
fsub
jmp
adc
mov
and
rclb
pop
fisttpl
mov
or
scas
mov
aam
sbb
andb
or
pop
flds
fcmovne
pop
jns
xchg
iret
shll
js
push
xor
sub
jp
movsb
inc
push
mov
add
notb
or
cmpsb
loopne
mov
incl
sub
push
jmp
iret
popf
push
ficomps
mov
jge
sahf
and
ret
adc
jl
pusha
aam
mov
lock
xor
xlat
mov
mov
add
cltd
cmp
xchg
rcr
mov
sub
xchg
bound
xchg
dec
cmp
cs
jno
xor
dec
sbb
pop
pop
inc
mov
fldt
jae
or
shlb
ljmp
mov
mov
mov
stos
fadd
or
mov
pop
sti
mov
mov
push
xchg
pop
xorl
push
dec
mov
ja
inc
lea
mov
adc
fs
into
push
push
iret
xor
andl
push
mov
loope
mov
dec
xchg
mov
pop
adc
dec
cmp
mov
dec
dec
xor
cli
sub
xchg
dec
enter
cmp
iret
fisubl
push
cmp
cmp
dec
jmp
into
adc
mov
dec
dec
iret
je
push
sbb
dec
mov
pop
iret
jae
sbb
dec
scas
pop
xchg
xor
test
and
test
xor
iret
adc
xchg
mov
lcall
loope
data16
push
mov
and
push
cs
loope
fcompl
subl
cld
ja
mov
push
adc
lods
adcl
popf
addr16
lods
iret
push
push
jnp
adc
ret
jle
repz
mov
inc
dec
xchg
jl
lock
je
sbb
out
and
iret
outsb
sub
aad
out
mov
xchg
xchg
mov
inc
test
add
pusha
jno
movsl
cmpsb
scas
test
sbb
stos
outsb
stc
pop
das
mov
add
sub
fsubr
es
lret
mov
enter
mov
jg
dec
sbbl
push
jp
shrl
xchg
add
cs
pop
loop
or
inc
outsb
test
fcomps
push
andl
sub
add
cmc
xchg
into
adc
mov
sub
add
and
dec
xchg
push
mov
sub
xor
test
test
in
mov
pop
push
aam
dec
xchg
nop
cmp
xor
pop
and
imul
pushf
pop
and
xchg
movsb
dec
sub
fldt
xchg
push
bound
iret
mov
push
mov
cld
cmp
sub
mov
int3
mov
rcrb
lock
fwait
jbe
xchg
int
cmpsb
cmpsl
and
mov
frstor
dec
or
push
je
sub
adc
test
loopne
xchg
aaa
sbb
addr16
xchg
les
sarb
stos
test
iret
jne
in
stos
ja
adc
push
shrb
xchg
fldt
mov
ret
pop
std
xchg
into
cli
mov
lret
filds
xor
dec
xchg
mov
and
loop
push
inc
push
lock
push
rcl
xor
xchg
fwait
gs
cld
inc
sbb
and
mov
mov
and
rcl
ret
push
jne
loop
in
test
ret
push
fs
adc
mov
mov
rorl
fwait
dec
sbb
es
cmpsb
and
daa
pop
inc
sub
lods
mov
arpl
insb
xchg
cs
mov
lods
fwait
sbb
jb
test
jno
aam
jmp
repnz
fmuls
xchg
es
dec
push
addr16
fcmovu
jb
cmp
lock
xchg
cmp
jno
out
test
pop
call
and
rcr
cmp
xor
iret
jae
push
mov
lea
mov
out
or
shrl
and
mov
sbb
cmpsb
fbstp
mov
ss
add
in
and
cmp
shll
push
les
ss
dec
mov
daa
test
pop
sarb
mov
out
jge
inc
push
lret
pusha
inc
push
xor
lods
push
fstpt
mov
ret
and
int
test
enter
fwait
pop
ret
ljmp
mov
adc
xchg
subl
pop
xchg
xor
mov
aam
pushf
jle
lcall
les
call
mov
xchg
sub
dec
fisttpl
pushf
mov
inc
stc
jle
shrl
inc
stos
mov
and
jp
pop
iret
loopne
or
xchg
mov
jg
test
dec
icebp
jo
jl
popa
sub
call
mov
lds
sub
dec
call
pop
int
xor
loopne
xor
sbb
jns
arpl
xchg
fstpt
in
invd
mov
inc
es
cmp
push
outsl
adc
js
add
xchg
dec
notb
pop
pop
outsb
xchg
xchg
xchg
fbld
fbstp
jg
int3
sbb
insb
and
mov
or
fldt
jmp
shll
jne
es
xchg
jp
mov
scas
call
pop
lods
aad
pop
call
ja
xchg
sarb
xlat
icebp
adc
daa
dec
fistpl
jle
adc
push
nop
test
es
out
jo,pt
xor
popa
xchg
and
test
in
imul
cmpsl
in
jecxz
dec
or
lea
pop
inc
push
xchg
mov
stos
dec
orb
imull
or
test
out
scas
iret
jmp
jb
sub
test
cmc
xchg
clc
js
std
mov
jg
push
test
adc
bound
testb
mov
sbb
jo
sti
gs
fidivl
push
lahf
sub
mov
or
rolb
cmp
iret
sti
cmc
mov
imul
cltd
mov
cs
cmp
leave
enter
fwait
cli
mov
mov
rolb
fisttps
test
sbb
sub
out
xchg
cs
aad
add
xchg
mov
push
inc
sub
pop
cli
call
mov
push
cmp
sub
dec
stc
das
clc
in
pop
sbb
cmp
sahf
loop
jbe
out
sbb
xchg
jmp
add
jp
outsb
xchg
jecxz
mov
bound
in
int
mov
sbb
insl
mov
dec
lock
pop
fcmovnbe
mov
pop
add
fists
push
cmp
iret
xorl
test
nop
push
arpl
pop
jmp
repz
sbb
sbb
sbb
xchg
shl
xchg
adc
mov
or
mov
dec
adc
adc
pop
cmpsb
inc
add
iret
addl
stc
dec
xor
push
packuswb
sbb
or
jbe
mov
sahf
repz
clc
test
movsl
lods
cmpsl
rcll
stos
inc
fwait
mov
or
push
lret
jg
std
adc
dec
jl
stos
subl
sbb
lcall
xor
nop
ljmp
push
and
scas
xchg
pop
arpl
divb
or
cs
sub
emms
lock
inc
add
cltd
inc
incl
jb
iret
in
imul
xchg
lds
stos
lcall
xchg
jge
ljmp
rolb
aam
xchg
pop
adc
jno
lock
jne
push
iret
cwtl
mov
fnstenv
sbb
gs
jmp
xchg
lret
xchg
outsl
and
lret
imul
mov
arpl
or
mov
jbe
test
push
cmp
popa
push
popw
cmpsb
mov
mov
outsl
push
jb
test
nop
fbstp
xchg
inc
fists
or
xor
stc
call
and
cwtl
icebp
push
cld
mov
jo
jns
push
mov
fstpt
faddl
xor
test
in
xchg
jne
bound
inc
push
insb
ljmp
sbb
jns
movsb
fcmovnu
fldcw
xchg
push
mov
out
outsl
jnp
in
ret
imul
data16
sbb
adc
int3
out
mov
xchg
xchg
push
jge
lods
cmp
movsl
xlat
sbb
loope
mov
add
movlhps
and
fs
cli
pop
lahf
mov
sub
nop
push
bound
fwait
pop
sbb
fsubl
fst
adc
sbb
notl
xchg
inc
arpl
test
fs
mov
fs
pop
js
push
adc
mov
cmpb
iret
call
add
jo
lret
movsb
xchg
xchg
loope
xchg
hlt
pop
jge
pop
cmpsb
sub
lret
jb
inc
shrb
fistl
push
rcl
mov
xchg
adcb
into
ja
xchg
inc
sub
popa
pop
adc
inc
iret
sub
mov
lcall
pop
neg
xchg
cmpsl
xchg
aas
arpl
out
sub
fwait
popa
jge
jae
cli
mov
lods
fisttpl
test
mov
iret
mov
rdtsc
fisttpl
scas
xchg
adc
inc
iret
mov
insb
sbb
iret
inc
and
inc
enter
int3
pusha
addb
popf
adc
ja
jle
out
xchg
stos
pop
cmpsl
cmp
push
imul
pop
mov
dec
adc
cmp
out
pop
xor
adc
pxor
clc
jmp
mov
xchg
push
aad
sbb
mov
and
jbe
sbb
into
jne
mov
adc
xchg
mulb
fsubp
sbb
mov
repnz
pusha
leave
fnstsw
cmpsb
push
rcr
addr16
dec
and
xor
push
sahf
or
icebp
mov
jne
xchg
push
adc
stos
lret
iret
inc
fcos
cmp
dec
jno
dec
in
pop
dec
cld
stc
mov
pop
jnp
in
jle
out
or
scas
insl
pusha
and
push
push
das
pop
stos
shl
lods
aam
dec
push
jmp
insl
addr16
jno
mov
in
outsb
ret
jns
call
sub
adc
fs
int
loop
mov
inc
stc
xchg
stos
js,pn
test
adcl
fs
mov
and
dec
push
into
sub
mov
scas
mov
push
xchg
sbb
sti
ja
jmp
fs
push
sbb
mov
pop
data16
shrb
out
xchg
out
mov
push
inc
xor
int3
in
mov
cmc
arpl
lods
mov
inc
xchg
add
jle
or
or
inc
adc
inc
nop
es
adc
incb
mov
sti
mov
pop
sahf
movb
in
ljmp
roll
lods
hlt
cmpsb
rcrl
add
jmp
inc
js
jbe
stc
jno
cmp
fsubrl
xlat
mov
fucomi
pop
xor
iret
inc
xchg
add
mov
lcall
xor
movups
and
lea
mov
sbb
fidivs
push
sbb
iret
cmp
imul
mov
pop
add
sub
into
pop
out
sarl
mov
aas
jle
ds
sub
cmp
ja
iret
pop
lret
lahf
dec
mov
addl
xchg
rorb
stos
ljmp
or
mov
fcmovnbe
bound
fnstcw
outsb
lods
xorl
xchg
sub
ss
popf
pop
nop
ss
out
rorl
mov
mov
push
dec
push
rcll
dec
xor
int
jecxz
xor
hlt
shr
xchg
xor
shlb
push
xchg
idiv
xchg
shrb
jle
dec
mov
mov
push
lods
push
stos
or
pop
lods
mov
push
aam
xchg
aaa
out
shlb
aas
fdivp
arpl
dec
stos
sub
cli
test
inc
push
je
inc
or
push
pop
dec
xor
jo
adc
push
lods
test
push
push
adc
test
cwtl
fsubs
pop
sbb
loopne
cmp
ret
pop
daa
xor
xor
cld
xchg
aas
mov
cmp
sub
add
and
inc
aam
arpl
divb
sbb
adc
imul
ja
ficomps
xchg
mov
mov
mov
dec
movsl
jl
fwait
into
outsb
push
xchg
mov
sbb
inc
es
clc
push
ja
dec
pop
or
mov
push
xchg
inc
xchg
xor
push
xchg
pop
shl
mov
test
dec
ficompl
aaa
lds
jg
stc
pop
push
xchg
leave
pop
in
adcb
adc
adc
test
add
mov
test
dec
and
mov
push
xchg
inc
mov
pop
jmp
add
sbb
mov
or
leave
addr16
loope
fcmovu
push
cmp
fisttps
sub
cmpb
enter
and
pminub
jg
cli
dec
sub
and
enter
jg
test
mov
inc
xchg
sub
je
outsl
xchg
push
mov
pop
andb
cmp
inc
dec
lods
es
push
sar
add
cmpsb
push
shrb
pop
xor
rorl
and
push
pusha
movsb
aam
jns
dec
xor
or
fldcw
sbb
xchg
lea
xor
sbb
xor
and
scas
scas
iret
stos
clc
sub
inc
jnp
sbb
adc
push
xor
outsb
ds
pop
pop
dec
fistpl
mov
adc
jp
pop
push
push
mov
dec
jecxz
iret
test
cmp
sub
push
fildll
inc
xchg
mov
imul
frstor
test
rcrb
popf
dec
xor
xorl
popaw
adc
mov
mov
inc
sbbl
fcomps
scas
out
jge
sub
rcrb
add
inc
and
or
rcr
add
mov
into
mov
jbe
cmp
pop
add
repz
repnz
cmc
out
mov
sbb
mov
ret
mov
pop
jb
mov
mov
adc
xchg
adc
mov
mov
adc
das
cmpsl
vxorpd
loope
jg
dec
pushf
xor
push
xchg
adc
xchg
mov
sub
mov
sahf
loope
mov
in
enter
inc
pop
int3
int
mov
das
mov
xchg
js
jae
push
loop
mov
sbb
push
inc
inc
fs
out
dec
adc
mov
jno
fildl
sub
mov
xchg
mov
mov
aam
mov
das
loop
and
mov
adc
dec
dec
push
xchg
xchg
inc
andb
les
push
sbb
sbb
out
insb
lcall
inc
dec
cmpl
ljmp
xchg
stos
fcmovnb
cmpsl
leave
jae
fsubr
rcrl
jnp
push
lahf
xchg
addr16
push
xchg
dec
cmp
and
cmp
ret
ja
cmp
xchg
mov
je
add
jmp
fucomi
dec
stos
and
or
xchg
xor
pop
sbb
xor
mov
push
mov
adc
cmp
and
pushf
jmp
rolb
jg
popa
xchg
sub
outsl
xchg
addb
mov
scas
test
icebp
dec
xchg
mov
dec
outsb
sbb
cmpsl
or
mov
and
cmp
pop
mov
mov
jecxz
movsl
imul
mov
add
jns
imul
mov
out
loop
js
repnz
sahf
mov
enter
pusha
lock
sub
repz
jl
lahf
inc
in
shrl
insb
mov
push
xchg
paddq
or
arpl
mov
inc
xchg
ret
mov
push
lret
into
push
shlb
sbb
push
popw
sub
aad
xchg
std
adc
leave
popf
adcl
mov
test
xchg
out
movsb
inc
push
sbb
add
mov
imul
jecxz
rcll
adc
lock
fcoms
mov
add
ret
push
xchg
fwait
sbb
add
lods
xchg
mov
ror
cld
data16
sbb
dec
les
jg
repz
cmpsl
popf
mov
sub
mov
clc
mov
cmpsb
xor
lcall
rcl
aaa
cmp
ds
hlt
mov
scas
pop
or
and
test
cmpsl
lods
je
cmp
iret
int3
repnz
sarb
aad
test
push
aam
or
jle
fmuls
adc
mov
mov
test
outsl
andb
inc
xchg
fdivrs
jmp
mov
mov
cmpsl
mov
xlat
je
mov
sti
mov
popa
or
or
pop
xchg
outsb
ret
cmpsl
push
out
out
aad
scas
xchg
inc
xchg
pop
aas
jae
push
rclb
add
pop
xlat
push
jo
lret
push
loop
out
je
fucomi
push
stos
mov
nop
or
iret
into
cmp
cmp
mov
and
mov
mov
mov
shlb
jne
fistl
jp
jle
cmc
pop
push
jl
loope
adc
dec
sbb
xchg
insb
jnp
jnp
mov
cmp
add
repz
dec
and
lods
scas
or
or
pop
lods
pop
xchg
mov
icebp
mov
mov
jnp
fsubrs
inc
fwait
call
push
iret
imul
stos
hlt
dec
xor
test
push
lret
movsl
dec
cltd
and
adc
and
jp
testb
dec
iret
rcpps
mov
call
mov
test
test
push
mov
fldt
cmp
bound
jo
sbb
add
sbb
add
sub
sub
pop
mov
addr16
xor
test
loope
pop
jg
xchg
mov
fisubl
xchg
push
repz
lahf
push
in
rcll
arpl
xorl
pop
cmp
xor
imul
and
gs
stc
popa
shrb
or
lea
sbb
sbb
subl
fistpl
sbb
into
inc
pop
cmp
xchg
mov
pop
sbb
xchg
aam
fcomi
outsl
daa
fisttps
push
int3
add
cltd
call
xchg
push
jecxz
inc
jmp
add
test
test
popa
push
jne
je
testl
iret
test
sar
xor
bnd
fistpl
js
ficoms
pusha
cmp
lcall
insb
popa
xchg
out
sbb
inc
cmp
or
test
in
xchg
sbb
mov
jge
xchg
jmp
sbb
jp
xchg
iret
xchg
shrd
mov
idiv
cmp
push
mov
ss
adc
int
fcmovnbe
dec
mov
and
xchg
inc
xchg
dec
fisttpl
out
in
jg
xor
fldt
leave
lcall
and
pop
add
in
add
cmpps
pop
sbb
rorb
push
sbb
incl
pop
jb
or
pushf
ja
mov
scas
xor
push
ja
cmp
dec
fldt
inc
push
fcmovnb
sub
cmp
lea
dec
loope
or
adc
imul
enter
ret
xchg
adc
in
dec
fistl
loopne
js
stos
loop
cmpsb
nop
dec
lahf
adc
in
popf
loop
xlat
daa
jmp
mov
xchg
fs
nop
outsl
ret
fnclex
jl
call
int3
xchg
fldl
pop
inc
mov
fildl
xchg
and
aad
xchg
dec
iret
xlat
dec
inc
daa
xchg
dec
leave
mov
xor
pop
loopne
fwait
adc
fucomi
xchg
ret
push
scas
idivb
into
fmuls
out
jnp
aam
mov
out
arpl
add
fildl
repz
pop
ja
insb
iret
fistps
dec
sti
inc
imul
sbb
sbb
jle
out
enter
iret
mov
mov
mov
jg
loop
ja
dec
adcb
sbb
inc
lahf
jge
mov
movl
push
fwait
xchg
add
pop
out
jle
mov
mov
fstp
dec
mov
decb
cld
cltd
xchg
adc
outsb
jbe
push
xchg
dec
push
pop
xchg
jecxz
xchg
mov
pop
jmp
inc
push
push
xchg
ret
insb
jp
test
das
dec
fdivrl
push
sbb
sbbb
push
xchg
sub
jecxz
sbb
adc
insb
repz
jns
mov
and
aaa
rorb
fmul
icebp
or
add
in
pop
pop
pop
xor
call
mov
push
decb
test
ds
push
add
xor
xchg
lret
inc
pusha
sub
mov
mov
shl
mov
les
dec
jns
add
mov
and
push
dec
dec
cmpl
mov
pop
cmp
mov
mov
fdiv
jl
ret
sti
push
or
mov
pop
aaa
sbbb
bound
xchg
lahf
call
xchg
pop
leave
ret
pop
or
inc
mov
sbb
lods
mov
lcall
jmp
enter
clc
sub
sarb
iret
mov
mov
repnz
mov
or
sub
repnz
lahf
jle
cmp
fisttpl
outsl
femms
into
scas
xchg
mov
push
mov
nop
mov
push
lahf
iret
dec
mov
dec
subl
pop
and
loopne
pop
mov
testb
pop
adc
loope
xchg
int
sub
pop
pop
in
jo
lds
iret
inc
mov
lea
insl
int3
push
jl
mov
pmaddwd
mov
push
xchg
fs
mov
movsb
xchg
scas
jns
cltd
je
xchg
xchg
push
adcl
ret
push
pop
popl
cwtl
mov
ret
add
mov
xchg
xchg
lock
lds
imul
bnd
adc
sub
push
push
leave
add
imul
loop
std
into
addr16
add
test
or
movsb
cmc
dec
and
dec
cmp
mov
cmp
in
test
mov
fcmovne
mov
iret
out
shr
sti
xchg
fisttpl
dec
inc
jnp
push
add
call
call
or
imul
pop
push
xchg
cld
aas
fs
js
test
add
jg
in
mov
inc
lods
ret
iret
jne
xchg
aas
les
rcll
xchg
cmp
jp
into
pop
dec
sub
sub
aad
dec
inc
add
popf
ja
xchg
repz
cmp
iret
in
dec
cmc
xlat
out
inc
push
inc
pop
push
pop
movsl
mov
inc
test
sbb
in
fcmovnu
lea
xchg
pop
repz
movsl
inc
fstpt
arpl
xchg
iret
ss
sbb
stos
inc
mov
cltd
sbb
lds
leave
int
xchg
push
repnz
insl
dec
dec
test
xchg
roll
sbb
dec
pop
sbb
out
vmovhps
xor
jns
rcll
jns
insl
sub
xchg
repnz
sub
leave
mov
adc
cwtd
inc
and
mov
call
incb
mov
jg
test
loop
js
into
add
jno
out
daa
push
test
xchg
fs
mov
mov
call
xorb
lahf
mov
push
rcrl
jns
adc
jnp
icebp
fldt
int
mov
jge
call
loope
pushf
fcmovnbe
roll
or
or
dec
stc
pop
mov
std
std
xchg
xchg
sub
repz
stc
movb
or
and
xchg
xchg
sbb
mov
or
fstpt
enter
jmp
ljmp
lcall
adc
xchg
sub
das
adc
fstpl
or
aas
jp
xchg
lcall
std
nop
addr16
cli
fnstsw
aas
inc
mov
or
ret
ja
push
push
mov
jno
xchg
cmp
dec
testb
xchg
or
ror
xor
mov
mov
dec
xor
sub
aad
sarl
xchg
imul
xchg
cmc
sbb
jns
loopne
mov
movsl
sbb
dec
testb
icebp
fldl
cmpsl
out
iret
sti
dec
test
lahf
dec
call
bound
jp
fildl
sub
cmp
imul
clc
and
sbb
xor
jg
push
or
loop
jmp
pop
mov
push
sti
test
xchg
pop
or
mov
hlt
sub
pusha
js
and
lret
outsb
aam
ss
adc
and
mov
sub
cmp
imul
je
cmc
and
dec
clc
movsl
jne
iret
aam
or
mov
inc
lahf
lods
mov
add
int3
es
rol
cmp
mov
mov
sar
in
xor
and
mov
push
inc
int
add
and
test
pop
call
cmp
shrl
in
pop
adc
xchg
stos
dec
out
jl
pusha
popa
fimuls
imul
inc
cltd
jo
adc
adc
ss
ljmp
pop
inc
dec
scas
or
ret
xchg
ss
shrb
testb
popa
lcall
xchg
mov
repnz
mov
inc
fldenv
or
ret
or
push
and
push
mov
int3
push
testb
add
stos
pop
xlat
shll
sub
jp
repnz
out
xchg
aad
mov
int
dec
sub
cltd
sti
push
add
shlb
lea
sbb
cld
mov
dec
js
jge
arpl
iret
mov
int3
sti
lahf
sbb
adc
xor
xchg
out
movsl
and
mov
fistpl
xchg
push
notb
pop
xor
fisubrl
pop
cmp
lahf
call
ljmp
pop
ss
fistpl
rclb
push
xchg
xchg
jbe
arpl
or
adc
out
pushf
mov
jle
mov
call
xchg
test
inc
loop
sub
mov
test
test
sbb
pop
mov
clc
into
or
xor
jle
ss
loop
mov
push
pushf
sbb
arpl
push
les
cwtl
mov
pop
pop
mov
in
push
xchg
pop
push
cltd
ret
push
xorl
or
sahf
mov
add
iret
adc
fcmovnbe
sub
and
iret
cli
cmp
pop
test
cmp
popf
loopne
jp
push
notb
jns
sbb
rorl
jb
jmp
mov
in
lret
lret
rcrb
mov
out
xchg
ret
loope
and
pop
sub
xchg
fisttpll
dec
add
jae
xchg
push
and
mov
into
fwait
iret
test
and
xchg
push
xchg
aas
call
xchg
fs
mov
out
jae
sbb
add
mov
mov
mov
hlt
xor
mov
push
sub
mov
push
test
xor
sbb
test
sbb
push
adc
ja
inc
pop
jno
and
hlt
rcll
ficompl
jbe
xor
pop
sahf
push
sub
sub
movsb
mov
in
xlat
test
and
out
xchg
es
mov
icebp
ljmp
inc
cld
sub
sbb
push
sbb
mov
mov
lea
xchg
lret
lea
push
in
iret
fmull
bnd
mov
fstps
jno
xor
imul
xchg
xor
jp
cmp
pop
mov
addb
ljmp
or
sahf
fmul
mov
push
repz
inc
dec
in
out
arpl
xlat
jge
adc
iret
and
cmp
xchg
cmp
test
mov
pop
stos
out
out
lock
test
adc
xchg
jnp
pop
incl
stc
or
sahf
pop
fisubl
aad
test
or
nop
in
mov
mov
add
jg
and
push
nop
push
hlt
ss
pop
xchg
mov
xchg
jns
fcoms
jo
mov
loopne
lret
iret
cmpsl
and
or
pop
cmp
mov
je
mov
jl
and
out
sti
mov
xchg
mov
add
ret
jb
mov
movsl
popf
int
movsl
ret
pop
pop
pop
xchg
daa
push
xchg
push
xchg
adc
sbb
pushf
inc
inc
adc
loopne
xchg
es
push
xchg
or
sarb
sahf
push
xor
outsb
mov
xor
inc
orl
mov
mov
sahf
push
setg
mov
es
or
pop
xchg
in
inc
pop
xorl
fcmovnb
in
mov
sbb
sub
add
adc
fwait
and
add
outsl
lcall
fldln2
mov
mov
faddl
mov
dec
xor
cltd
das
nop
dec
xlat
fistps
repnz
in
adc
xchg
mov
push
fstpt
fildll
pop
mov
insb
xchg
test
pop
xchg
les
adc
mov
cmpsl
mov
or
aam
lahf
inc
pop
shll
sub
iret
mov
fidivrl
push
push
addl
adc
fmull
fstpt
cmpsl
sbb
jne
jns
push
jnp
pop
adcb
aam
dec
mov
bnd
push
adc
mov
incb
or
sbb
mov
mov
push
jge
jge
insb
xchg
test
enter
js
or
insb
pop
pop
xchg
pop
pop
jnp
scas
fwait
shll
imul
cmp
imul
sub
pop
cltd
mov
pop
out
aad
mov
push
cwtl
xchg
out
xor
sbb
mov
ret
iret
into
jno
sub
jns
cmpsb
lds
das
cltd
outsl
test
xor
fsubs
in
fcmovnu
xchg
fisubs
out
mov
adc
mov
inc
push
jno
push
jl
iret
lret
fdivl
aad
xchg
and
jl
or
dec
dec
les
test
sbb
pop
enter
aas
or
mov
cmpsb
cwtl
test
sub
nop
test
or
cmp
pop
std
pop
sub
xchg
sbb
das
and
inc
mov
pop
adc
loope
fcmovnbe
pop
jae
mov
jnp
push
sarb
fcmovnu
es
bnd
ds
ds
repnz
mov
test
inc
mov
sbb
insl
jle
iret
std
test
jo
xchg
mov
push
mov
jge
bound
test
adc
lock
sbb
pop
repnz
dec
mov
stos
adc
decb
aam
cmp
xor
fildl
xor
mov
lahf
fimull
cmc
out
pop
das
inc
dec
ds
xchg
enter
ret
mov
test
add
jp
add
adc
stos
movsl
and
scas
or
add
jb
fmulp
jecxz
shrl
shr
ficomps
cld
out
cltd
xchg
fcom
jo
lea
sbb
iret
pop
jmp
in
push
xchg
sbb
jae
icebp
pop
test
pop
push
and
add
lea
out
push
lret
push
in
rcrl
pop
insb
mov
cli
xchg
sarl
in
push
sbb
cmp
arpl
fisttpl
popa
mov
push
addr16
cmp
subb
jnp
push
sbbb
jmp
dec
mov
ret
rorb
test
mov
mov
mov
loope
int
test
in
push
pop
xchg
pop
and
fistpl
inc
inc
mov
cli
data16
inc
fistl
aas
ret
push
iret
push
jns
sbb
lea
and
es
push
aad
das
add
popa
and
fldt
fisubrs
inc
in
cmp
cmpb
inc
add
cmp
mov
xchg
xlat
insb
rclb
cli
xchg
scas
ret
mov
int3
xchg
int
lret
stc
rolb
cwtl
inc
inc
xchg
scas
out
bound
xchg
sbb
fisttpl
fs
test
mov
mov
clc
aam
adc
ljmp
cmp
pop
xor
out
jne
push
mov
sub
sub
fstpt
add
xchg
mov
jno
or
scas
xchg
dec
imul
dec
inc
lea
push
cmpsl
pop
js
push
and
test
sahf
xchg
push
dec
add
xlat
cmc
dec
fistpl
adc
xor
push
daa
mov
push
mov
push
int
cli
subb
xchg
or
xorl
aam
call
pop
push
aaa
stos
push
fwait
int3
push
dec
imul
data16
jmp
add
pop
out
add
mov
push
loop
jnp
rcll
push
adc
xchg
call
pop
pusha
dec
dec
pushf
pop
inc
or
push
xchg
enter
and
fs
enter
xchg
popf
test
mov
fcmovnu
in
push
jmp
push
fninit
mov
xchg
adc
sbb
jmp
int3
mov
in
push
hlt
mov
js
icebp
scas
in
lret
aam
sahf
fs
and
xchg
outsb
push
push
jo
aaa
les
ss
ds
outsl
add
jo
rorb
int
sbb
mov
cs
jl
lea
cmpsb
andl
or
sarb
lock
and
in
daa
cmp
popf
mov
movsl
gs
aam
divl
sbb
hlt
mov
mov
sarb
mov
fisubl
mov
hlt
mov
xor
xchg
pop
jmp
fstpl
jno
rcrl
movsl
sbb
iret
dec
lahf
and
xchg
pop
les
fs
mov
lock
out
test
scas
mov
stos
xchg
les
push
out
adc
mov
push
xchg
aaa
jl
adc
adc
clc
cld
out
mov
jp
cltd
das
jecxz
and
and
jae
mov
and
iret
or
push
and
test
insb
jo
xchg
jge
sub
and
jg
movsb
inc
inc
loopne
test
outsb
iret
jp
movsb
dec
mov
in
sub
shrb
movq
jl
aad
dec
ljmp
fnsave
dec
repnz
xchg
aad
shl
cld
pop
xchg
cmp
out
frstor
cmp
outsb
or
cmp
jnp
add
popa
xor
or
fcmove
pop
push
lods
lahf
cmp
shufps
jg
or
or
sti
pop
jae
sub
gs
in
into
dec
jle
hlt
pop
clc
jbe
xchg
imul
lds
lea
shlb
adc
inc
popa
dec
jecxz
fisttpl
in
push
imul
iret
mov
push
bound
call
iret
rolb
sbb
xchg
inc
xlat
repnz
fs
lds
dec
ljmp
call
xchg
inc
sub
out
ja
push
adc
popf
mov
fcmovnb
or
test
je
shl
insb
or
ret
fwait
mov
in
sbb
aam
loop
movsb
mov
movl
xchg
fmuls
jnp
pop
lret
lcall
inc
shrl
adc
mov
fisttpl
aam
rorb
in
aad
sti
mov
stos
lods
iret
mov
pop
and
mov
adc
cld
lea
sbbl
mov
es
xchg
mov
lahf
lea
cld
dec
aam
dec
inc
jecxz
clc
je
out
xlat
sub
packsswb
notl
xchg
aas
iret
push
sahf
inc
mov
cmc
clc
popl
sbb
insb
jns
aam
fs
bound
int
jno
loope
push
dec
dec
xor
or
sti
mov
sahf
fucomi
lock
sub
sub
pop
xchg
repz
adc
jg
out
jb
stos
mov
clc
push
popf
rolb
ds
mov
mov
xchg
cmp
inc
lret
jnp
cmpsb
call
add
inc
iret
insl
lods
scas
jmp
xchg
sub
lret
xchg
xchg
fisttpl
lret
ret
and
xor
cmp
addb
inc
fnstsw
ror
int
mov
jmp
js
push
ds
fdivr
cmpsl
jno
or
stos
jg
xchg
out
test
outsb
or
xchg
test
fldcw
and
cmp
test
pushf
adc
mov
aaa
xor
dec
int3
mov
adc
pop
inc
push
lods
aad
dec
fistl
out
mov
xchg
xchg
ja
pop
mov
popf
gs
add
in
cli
into
andl
mov
mov
jbe
and
iret
clc
les
cmp
cmpsl
pop
jmp
pop
iret
fldenv
adc
pop
xchg
into
inc
xor
negl
mov
ds
pusha
cmp
outsl
lds
xchg
sbb
jl
rcr
inc
pop
lret
les
or
test
jle
mov
aas
insb
xor
sub
mov
cwtl
xchg
lcall
cmp
jp
cmp
mov
mov
repnz
xchg
sahf
setnp
mov
add
inc
sbb
add
pop
push
jno
fwait
out
cwtl
adc
add
andb
test
fiadds
pop
fisttpl
push
shll
ficoml
cmpsb
adc
fisttpl
aam
pop
int
stos
js
push
imul
fcomps
mov
cltd
iret
js
jae
push
pop
dec
mov
lret
cmp
fcomp
pop
pop
loop
jg
sbb
sbb
mov
adc
push
mov
fstpt
dec
cmp
arpl
test
push
fdivrs
and
jge
jg
lds
loop
ss
daa
out
mov
sbb
pop
shlb
dec
fistpl
mov
xchg
iret
jbe
insb
cmp
sub
jge
jge
xchg
dec
cmp
ret
pop
fcmovne
outsl
call
xchg
iret
test
lds
xchg
xor
dec
inc
push
xchg
pop
jge
push
xchg
test
xor
movsl
mov
arpl
rdpmc
xor
aad
add
xchg
pop
xchg
lahf
xchg
cmp
into
popl
scas
repnz
fimull
ret
cmpl
icebp
push
sub
xor
or
push
movsl
movsl
stos
cmp
outsl
fwait
lcall
les
xchg
fs
mov
enter
or
push
dec
sarl
and
scas
add
leave
or
hlt
cmpsl
push
inc
push
int3
imul
add
jae
xchg
call
outsb
pop
xor
js
xchg
jne
into
dec
inc
movsb
divb
xlat
fistpl
or
arpl
stos
ret
iret
jl
cmp
test
out
je
mov
enter
sub
jl
mov
ret
stos
push
pop
add
xor
movsb
int
adc
fneni(8087
add
and
iret
out
fistps
testl
fmull
rcr
cmp
stos
faddl
mov
test
jg
filds
hlt
ret
idivl
mov
cmp
cmp
xchg
adc
xchg
push
mov
mov
cmc
lahf
ficoml
or
test
xchg
xor
cli
xchg
adcb
insb
adc
mov
loopne
lret
push
ja
lret
and
jns
mov
xchg
push
mov
jge
ficoms
mov
in
les
xchg
movsl
add
fcoms
sub
aam
adcb
push
fcomi
push
les
fistpl
arpl
into
pop
xchg
in
add
and
std
test
mov
loop
push
inc
jp
inc
jns
or
out
lock
dec
push
cmp
shrl
scas
push
orb
push
into
jbe
push
scas
movsb
xchg
jae
loopne
jno
std
ja
frstor
hlt
add
jae
mov
jne
jne
aam
ret
fisttps
iret
addb
or
shl
cs
adc
sub
nopl
fsubrs
push
mov
mov
movsb
fstps
sahf
enter
popf
sarb
outsl
loopne
fbstp
call
cmp
push
xor
cld
shll
in
fisttpll
imul
cmp
xchg
sbb
or
dec
in
cmp
or
xchg
imul
sahf
imul
push
xchg
xchg
mov
test
lahf
push
in
xchg
seta
adc
adc
out
xchg
xchg
faddp
sbb
pop
cmp
mov
sub
mov
inc
add
hlt
and
mov
rcrl
jno
sti
mov
data16
imul
into
add
xor
and
jmp
clc
jl
mov
dec
push
in
inc
addr16
mov
adc
rolb
xorb
xchg
mov
cltd
jno
sahf
cwtl
fs
sbb
ljmp
xchg
pusha
rcr
daa
push
pop
xor
ja
ret
pusha
out
inc
fwait
inc
cmp
into
js
cmc
or
push
or
sarl
hlt
pop
mov
aas
insb
ret
jb
mov
fisubrl
jmp
fsubl
sbb
pop
dec
mov
mov
or
out
outsl
cmc
jp
xchg
pop
iret
jns
xchg
mov
scas
jge
adc
frstor
sbb
mov
xlat
and
xor
fdivr
adc
xchg
addl
mov
fstpt
aas
sub
into
adc
pop
dec
xchg
popa
into
push
in
xchg
gs
rclb
in
xchg
insl
push
aaa
ss
iret
ret
and
int3
lods
mov
pop
jae
jae
xchg
add
cli
insl
or
adc
pop
dec
push
loop
xchg
cmp
sub
addr16
pop
out
adc
pop
cwtl
je
popf
inc
out
pop
rcll
loopne
jno
sub
dec
das
sub
dec
aam
sbb
ret
lret
loope
adc
mov
push
add
out
jb
lret
lret
jmp
lods
es
pop
push
and
imul
push
imul
cld
cmpsb
xchg
arpl
sbbb
in
insl
mov
adc
enter
les
int3
test
aad
sub
lea
mov
ror
or
sahf
xor
jo
xchg
sbbl
fnsetpm(287
and
sbb
shll
cmp
in
test
jmp
add
insl
add
leave
arpl
faddp
subb
adc
push
int
xchg
lret
xchg
sub
or
leave
int3
dec
sahf
push
in
ret
pushf
pop
xchg
jbe
adc
push
test
test
iret
out
xchg
cwtl
subl
bound
add
xlat
movsl
scas
xchg
push
aaa
push
sti
cmc
xchg
cmc
xchg
pushf
push
movsb
jp
push
add
cmp
xor
repz
add
imul
popa
push
xchg
dec
jns
test
popf
je
sub
in
jl
test
out
jo
fcmovnb
pop
push
lret
cmp
aaa
adc
cwtl
push
ljmp
mov
sti
or
push
addl
dec
and
fistps
xchg
mov
test
mov
jl
push
pop
xchg
mov
mov
jmp
in
add
push
cmp
fnsave
cmp
adc
cli
sub
sub
mov
dec
dec
push
xchg
mov
pop
fs
mov
push
daa
loope
sbb
rclb
pop
mov
call
add
int
pushf
fdiv
pushf
xchg
xchg
inc
xchg
lret
xchg
jmp
dec
dec
loopne
mov
inc
aad
lods
jl
int3
jecxz
fcompl
add
lahf
pop
sbb
dec
sbb
inc
xchg
push
mov
mov
cmc
adc
xor
cmpsl
push
popf
dec
fstpl
push
ljmp
add
nop
stos
pushf
jns
cmp
lret
scas
mov
xchg
cmp
xlat
add
xchg
lods
xchg
lods
add
adcb
repz
and
pop
es
jle
je
cmc
lods
jns
adc
loop
pop
mov
icebp
cmp
xlat
pop
xchg
jns
add
stos
xchg
scas
inc
repz
aad
adc
fstpt
in
je
and
outsb
xchg
fmuls
fildl
stos
add
push
clc
inc
jne
pop
jg
jnp
std
enter
hlt
inc
in
clc
repnz
sarl
jp
lret
adc
mov
popf
xor
pop
adcb
jbe
jmp
xchg
loopne
ja
push
jno
lret
popa
and
add
and
or
cltd
xchg
pop
jg
lret
cmpsb
stos
fs
jbe
adc
cmpsl
test
inc
mov
mov
push
lcall
movsb
xchg
out
ljmp
hlt
insb
xchg
in
sub
popf
mov
in
push
cmp
popf
push
pop
std
adc
inc
dec
popf
shrb
inc
dec
repz
icebp
and
jns
or
es
jne
loop
aam
les
addr16
negl
xchg
movsb
fildl
or
dec
outsl
xor
fsubl
pop
aaa
dec
dec
mov
sub
xchg
xor
xchg
lds
dec
mov
xchg
or
fdivrs
cli
adc
fcmovnu
ljmp
into
in
rcl
push
jo
push
inc
push
cld
pushf
mov
scas
stos
xchg
int3
jecxz
mov
xlat
outsb
fnsetpm(287
and
add
pop
jle
inc
sub
cmpsb
sarb
mov
les
jbe
mov
nop
lahf
das
mov
test
gs
jnp
enter
rorl
xor
dec
popf
and
xchg
int3
push
cmp
and
pop
pop
es
mov
int3
jmp
xor
rcl
lcall
and
add
mov
push
lea
mov
add
fcomps
fidivrl
dec
xchg
clc
cld
lea
loope,pn
cmpsb
xchg
mov
sub
adc
test
sbb
fstpl
cltd
inc
xchg
push
rorb
test
and
sti
sbb
cmp
mov
inc
rcrl
jae
xchg
or
inc
outsb
mov
push
xchg
lea
aad
lcall
push
lds
pop
cld
lret
jmp
out
and
fidivl
test
mov
inc
inc
test
adc
add
test
xchg
orb
xchg
mov
mov
sbb
xor
addr16
out
test
lret
jb
sbb
xor
mov
fcmovnu
data16
bnd
out
dec
pop
cmp
mov
mov
jl
pushw
jnp
test
test
sub
xor
ljmp
in
sub
adcb
push
sub
mov
lahf
cmpsl
stc
and
inc
orb
mov
mov
sbb
inc
mov
mov
jmp
push
dec
and
int
pushl
mov
lods
jp
xchg
out
pop
ja
inc
adc
inc
gs
fadd
leave
cmp
shll
or
add
rcl
scas
fcmovnbe
call
scas
dec
mov
jnp
pop
jo
sbbl
pusha
lret
out
movsl
or
dec
loop
mov
iret
inc
add
loope
test
stos
fdivrs
imull
leave
or
mov
pop
add
xorb
pop
pop
test
jl
or
xchg
xchg
adc
fimull
ret
stos
mov
neg
cmp
and
mov
sub
or
ljmp
das
xchg
lods
push
lods
lock
xchg
gs
insl
dec
mov
xchg
stc
out
push
mov
js
rcl
sbb
pop
pop
dec
scas
pop
inc
iret
mov
nop
ljmp
stos
rcrb
cmp
or
mov
imul
adc
or
mov
jecxz
call
pop
pop
dec
iret
jge
ljmp
repz
inc
dec
stos
sbb
cmc
or
add
sbb
add
jne
cmpsb
add
xchg
cmp
dec
dec
out
jg
ds
rclb
into
lret
fimull
popa
jmp
jecxz
cmp
cmpsb
dec
or
mov
jae
insl
scas
arpl
jp
rcr
mov
jecxz
enter
jmp
xchg
iret
push
clc
int3
jno
inc
fs
clc
push
iret
aaa
mov
les
push
cmc
adcl
pmulhuw
fadd
xlat
fwait
adc
in
stos
insl
xlat
es
data16
adcl
xchg
jne
leave
pop
test
pop
inc
fildl
in
stos
popa
fs
iret
in
mov
sbb
outsl
and
jle
mov
scas
shlb
jae
xor
xchg
out
rorb
mov
into
xor
push
or
and
xchg
outsl
loope
stos
mov
mov
pop
ljmp
orb
add
xor
insl
iret
faddl
push
cmp
test
or
fwait
mov
out
out
sbb
adc
cmp
pop
mov
clc
repnz
iret
pusha
loope
cltd
push
or
push
xchg
lods
mov
add
out
sti
lods
icebp
mov
ret
daa
pop
or
lret
xchg
and
mov
and
pop
add
outsb
mov
or
das
cwtl
xchg
out
mov
mov
iret
xchg
sub
lock
das
add
push
sub
mov
inc
ja
jns
jnp
aam
mov
aas
iret
inc
addl
pop
xor
xor
iret
and
jne
shrb
xlat
scas
adc
out
add
mov
jb
push
adc
mov
dec
imul
not
lea
cmpb
and
push
sub
add
dec
fisttpl
arpl
jne
decb
mov
loopne
mov
sbb
jns
aaa
xor
lcall
jp
fildl
sbb
sbb
fistl
dec
outsw
test
push
push
imul
mov
xchg
sbbl
xor
mov
jl
das
jmp
popa
dec
fists
fstpt
out
rcrb
out
movsb
test
call
jnp
inc
and
repz
jne
push
mov
push
xchg
add
pop
addr16
outsl
fucomi
cltd
pushf
add
pop
pop
rcrb
xor
test
bound
mov
inc
les
cwtl
mov
iret
scas
sbb
inc
fucomip
pop
ja
mov
and
adc
push
mov
aam
pop
ficoml
sub
xchg
std
adc
cmp
or
imull
xchg
cmp
rol
push
leave
popf
mov
sbb
les
xor
lahf
pop
pop
add
mov
push
int3
jne
iret
data16
mov
pop
jno
push
xor
pop
js
pop
decb
xchg
mov
lcall
cli
in
stos
dec
jge
pop
into
push
mov
stc
je
and
div
cli
sbb
cmp
ret
push
icebp
jno
sub
aas
mov
push
xchg
xchg
nop
pop
xor
cmp
dec
xchg
xor
gs
test
shll
xchg
bound
jne
in
scas
adc
fcmovnu
ljmp
into
inc
rcrb
add
enter
les
xchg
or
sbb
shll
push
mov
push
and
jge
and
cmpsl
in
ja
inc
popa
ljmp
push
scas
push
xor
sub
fdivrs
stos
xlat
add
lds
xor
test
dec
ficoml
push
pop
test
jnp
inc
mov
dec
mov
in
bound
mov
mov
or
or
add
outsb
xchg
push
mov
popa
lea
cld
sbb
aas
dec
inc
pop
icebp
das
fmull
pusha
mov
xchg
lcall
xchg
test
xlat
and
dec
push
dec
iret
adc
loopne
stos
inc
inc
pop
inc
sbb
sub
scas
ret
dec
cli
pop
cltd
shl
and
in
ds
mov
aad
jns
mov
iret
mov
inc
adc
iret
mov
fmull
sti
enter
js
insb
divl
mov
inc
cmpxchg
imul
push
test
ficompl
pushf
push
in
pop
xchg
or
fstl
add
jge
pop
pop
rcrl
outsb
imul
push
push
mov
rsm
sete
aaa
lret
fcom
jne
addr16
adc
jge
stc
push
push
rorb
ja
mov
pop
fidivrl
ja
imul
lods
subb
and
ljmp
pop
sub
sarb
inc
insb
dec
push
icebp
add
fstpt
mov
push
adc
out
cmp
into
sub
add
cmp
iret
es
in
leave
aam
gs
daa
add
sahf
fistl
add
cmp
inc
mov
cmpsl
xlat
mov
out
lock
insb
icebp
cmp
test
cmp
inc
popf
xor
fidivl
lret
and
cmpsl
xchg
mov
out
or
nop
mov
mov
sub
xchg
push
push
cmc
imul
fistpll
add
fisttpl
icebp
adc
ds
inc
dec
aaa
push
neg
mov
sbb
mov
and
insl
iret
pusha
andl
lea
mov
mov
daa
mov
jg
lahf
or
push
jbe
data16
fwait
lcall
leave
xchg
loopne
jno
pop
cmp
pop
xor
dec
int
bswap
ret
ret
sub
popa
xchg
dec
and
mov
lds
xor
dec
jbe
sub
xor
adc
rorb
pop
xchg
mov
fld
ljmp
fsubs
cmp
mov
mov
dec
scas
push
lret
dec
jne
in
scas
nop
fdiv
fisubrl
fistl
sbb
int
aad
push
or
sbb
xor
pop
pop
imul
stc
add
imul
xchg
mov
mov
nop
sub
jp
adc
iret
xchg
cmpsl
cmp
arpl
fwait
jbe
loopne
mov
cmp
ljmp
enterw
aam
bnd
add
jae
add
sbb
cmp
cmp
inc
insl
jg
into
outsb
das
daa
imul
shlb
fcmovu
pop
mov
fwait
xor
push
xor
sbbl
cmp
inc
dec
cmc
add
jmp
repnz
addl
cmpsb
outsb
insl
cld
test
xchg
int
adc
jge
mov
mov
je
mov
hlt
inc
jp
into
dec
mov
sub
xor
xchg
fildl
in
movaps
movsl
addr16
mov
mov
int3
xchg
xchg
sub
cmpsb
outsl
and
je
mov
mov
fsub
into
cmp
sub
addl
jbe
decl
leave
jno
mov
cwtl
jge
cwtl
sbb
jg
dec
iret
std
insb
fidivl
or
pop
fildl
mov
xor
push
popa
imul
fistpl
std
arpl
les
mov
ss
mov
or
js
sbbl
xchg
inc
fadds
outsb
mov
out
xor
xchg
mov
push
mov
clc
pop
cltd
cli
stc
decl
cmp
mov
sbb
mov
out
xchg
push
xchg
daa
xor
xor
stos
or
in
flds
push
or
aas
arpl
mov
mov
cltd
pand
adc
nop
lods
xchg
pop
xor
out
sbb
push
flds
ljmp
stc
into
xchg
mov
push
push
subl
push
scas
pop
ss
imul
mov
push
test
adc
jl
xchg
ds
sahf
inc
push
or
iret
lcall
xchg
mov
mov
mov
jecxz
ja
pop
xor
sub
fldenv
mov
or
sbb
xchg
add
xchg
cmpsb
or
in
fs
jae
lahf
loop
fsubrl
loopne
xchg
cmp
test
fwait
out
xchg
jmp
adc
loopne
xor
imul
imul
jno
xchg
xor
test
xor
push
add
adc
in
xchg
mov
inc
popl
push
test
fbld
fimull
add
xchg
xor
incb
cmovno
iret
mov
fsubl
sub
mov
imul
insl
mov
daa
pop
fstps
mov
pop
les
mov
push
sahf
in
xchg
jmp
add
cltd
into
mov
lods
cmp
mov
movsl
iret
inc
test
jb
mov
rcr
lahf
and
out
push
or
iret
cmpsb
insb
mov
arpl
cmpsl
pop
xchg
xchg
cwtl
inc
mov
cmp
or
lret
movl
add
leave
inc
enter
fadds
lods
jbe
inc
aam
test
xchg
add
pop
mov
xchg
cmc
stos
repz
hlt
shrb
rcll
push
push
cmp
dec
adc
pop
std
dec
jecxz
xchg
scas
cmc
jecxz
cmp
ret
sbb
sbb
dec
js
adcb
jp
pop
inc
into
jae
fcmovne
into
cwtl
pop
es
out
pop
sbb
xchg
fsts
add
cmp
cmpsl
cltd
iret
aam
and
push
sbb
and
push
pop
xchg
and
jne
rcr
xchg
lods
fmuls
dec
xlat
mov
movsl
xchg
sahf
pop
inc
jmp
lock
stc
inc
call
lret
lahf
add
movsl
inc
aam
ss
mov
dec
bswap
sub
xchg
xchg
xorl
rorb
enter
shrd
int
xchg
lea
iret
sub
sbb
sub
mov
or
push
pop
xchg
fstpt
shrl
cmp
jbe
int3
in
movsb
rcl
lret
imul
ss
push
lahf
mov
or
stos
mov
stc
data16
adc
pop
outsl
mov
ret
xor
push
or
iret
sar
dec
add
sbb
pop
mov
scas
mov
lods
xchg
pop
sbb
outsl
hlt
jns
xchg
mov
mov
std
fstpt
pushf
iret
adc
sbb
xchg
cmp
mov
pop
push
push
sub
mov
jle
out
pop
push
mov
pop
inc
push
test
jb
mov
pop
inc
mov
push
adc
sub
sbb
xchg
pop
push
jne
cmpsl
mov
lods
pop
mov
push
arpl
xchg
push
xor
outsl
out
loop
test
pop
xorps
les
pop
rolb
cmp
mov
jbe
outsb
ja
xchg
push
push
ljmp
xchg
mov
pushf
pop
orl
fldenv
and
mov
test
es
cmp
cli
dec
push
and
inc
jl
sub
cmp
scas
sbb
fxch
or
lcall
out
into
xchg
not
roll
xchg
mov
mov
or
cs
pushf
xchg
pop
mov
xchg
ljmp
mov
jge
lds
repz
xchg
repz
mov
aad
rcr
push
mov
jge
cs
jb
fcomps
addr16
and
out
lods
cmp
out
cltd
fistl
js
sub
data16
or
int
iret
sbb
and
sahf
push
fwait
bound
nop
or
push
mov
enter
cmc
xchg
pop
mov
insl
imul
add
cltd
sbbl
cmovge
enter
scas
in
dec
inc
imull
jmp
inc
sbb
iret
rcr
mov
push
xor
sbb
jl
cmp
pop
mov
ss
lock
add
mov
stos
pusha
dec
lahf
push
in
int3
xchg
fisttpl
mov
cmp
pop
jo
fcoms
fs
or
aam
push
sti
lock
xchg
das
popa
jne
mov
or
push
sarb
fdivs
in
mov
mov
xchg
pop
fldcw
into
cltd
inc
int3
pop
ja
mov
ret
inc
sub
mov
inc
mov
in
insb
inc
in
lds
sti
arpl
push
lret
fcmovnu
arpl
adc
pop
iret
jae
cmpl
daa
mov
in
int
iret
in
aas
loopne
adc
push
push
xchg
shrb
negb
inc
dec
jb
inc
es
xchg
xchg
xchg
outsl
inc
pop
cmp
sbb
into
push
ret
push
fisttpll
nop
pand
push
daa
push
mov
repz
add
test
addl
sub
xor
in
ja
mov
lret
mov
xchg
jp
enter
pop
out
sbb
int
adc
iret
mov
jg
cmp
test
inc
mov
cmpsb
or
push
lret
xor
repnz
add
xchg
xchg
imull
mov
test
mov
adc
mov
xchg
sub
imul
mov
mov
jbe
out
adcl
popa
and
in
jge
test
jmpw
jns
add
cltd
cmp
outsb
adc
adc
imul
mov
in
inc
fdivr
push
sahf
je
inc
mov
outsb
aad
adcl
and
lods
xchg
scas
aaa
fs
xchg
add
sub
adc
add
dec
jo
xchg
inc
imul
xchg
pop
mov
addl
push
push
mov
lods
jecxz
iret
ds
jge
int
pop
xchg
jg
and
xor
xchg
pop
popf
stos
mov
enter
fmuls
cmp
addb
iret
rolb
push
es
inc
nop
adc
fdivrs
in
iret
jmp
int3
fistpl
out
push
push
test
xor
out
daa
fneni(8087
lock
adc
les
orb
cwtl
fcompp
xchg
pusha
fbstp
outsb
repnz
icebp
adc
pop
lcall
ret
dec
popf
inc
jg
loopne
ljmp
mov
out
fdiv
xchg
add
adc
iret
test
add
popf
jae
sub
daa
mov
stc
fdivr
xorl
bound
lea
jb
xchg
mov
iret
fsubl
fstpl
lds
in
xor
xchg
or
scas
and
pop
fs
xchg
sub
cmp
cmpsb
cmpsb
popf
mov
out
xor
cld
cli
lods
push
scas
pop
lea
mov
adc
sbb
and
inc
xchg
xchg
adc
dec
mov
lcall
mov
fbld
inc
push
subb
pop
jmp
cmp
pop
xchg
test
mov
cltd
cld
add
jge
fld1
rcll
iret
stc
and
push
adcb
iret
xor
test
sub
push
mov
sbb
jecxz
loopne
dec
or
lcall
xchg
push
scas
pusha
jne
les
cmc
mov
in
in
shlb
push
xchg
adc
and
cld
orl
jns
lret
lret
xchg
jp
addr16
jmp
add
mov
and
out
outsb
adc
xchg
push
popa
sbb
mov
cmc
call
push
int3
dec
stos
pop
dec
outsl
cld
cmp
imul
xchg
addr16
daa
and
jne
out
fbld
sti
arpl
inc
dec
inc
mov
xor
push
neg
lahf
dec
sub
fsubrs
shlb
stos
mov
xchg
jl
imul
sbb
int
fstps
push
data16
cli
push
jbe
push
push
js
cmp
adc
inc
push
es
mov
lret
sub
aad
loope
and
jns
pop
dec
adc
mov
aam
cli
in
xchg
in
out
push
push
add
xor
pop
mov
jno
adc
and
shrb
inc
je
mov
dec
lods
pop
or
mov
test
mov
xchg
movsb
push
mov
hlt
adc
push
arpl
jg
dec
jg
push
lret
data16
xchg
sarb
in
sbb
ja
sahf
add
jbe
cmp
stc
xchg
add
jmp
jle
jno
jne
pop
xchg
mov
cwtl
xchg
ret
popf
and
cld
icebp
stos
xchg
mov
adc
enter
xlat
cmpsl
ds
iret
cs
lds
sbb
xchg
mov
hlt
push
clc
mov
aas
aaa
loope
out
test
aaa
roll
jecxz
push
xor
mov
and
inc
loopne
fidivs
xchg
cmp
mov
js
pause
adc
xchg
out
std
jnp
pop
loop
cli
fldt
lahf
fsubs
imul
testb
push
adc
mov
aaa
push
int
shrb
int3
push
lock
daa
roll
rcl
ss
dec
xor
and
iret
cmp
or
add
pusha
je
xlat
sbb
cmp
push
aas
subl
xlat
jno
bswap
mov
outsl
js
sbb
test
mov
pop
lcall
sbb
outsb
bound
enter
jb
hlt
cmc
xor
pop
dec
jbe
dec
adc
sub
lret
jmp
lock
cmp
cmp
cmpsb
or
mov
mov
sahf
xchg
mov
movsl
dec
fldt
insb
xor
xchg
hlt
popa
mov
movsl
adc
sar
sbb
fsubr
mov
mov
sbb
popf
jnp
dec
lret
addr16
mov
mov
mov
aam
sub
js
and
xchg
jp
ljmp
ret
dec
jns
iret
mov
cltd
test
dec
or
mov
outsl
or
add
inc
xchg
xlat
adc
ds
inc
adc
jb
jns
and
out
push
sbb
xchg
sbb
iret
int3
mov
mov
enter
xchg
rcl
fcmovnb
mov
and
xchg
fadds
loopnew
cmp
jp
jge
push
xchg
sbb
dec
adc
test
inc
mov
iret
js
enter
cmpsl
iret
aam
repnz
cltd
outsl
gs
test
imul
mov
ret
gs
dec
xchg
xchg
imul
xor
sbb
ror
xchg
addr16
aas
out
fdivrp
sbb
ljmp
div
mov
test
pop
fistl
xchg
iret
and
cltd
iret
pop
in
loope
jbe
push
dec
inc
enterw
xchg
imul
dec
push
add
rorl
fldt
ja
xor
nop
pop
or
or
push
xchg
hlt
sbb
movsb
pop
fisttpll
and
jge
add
mov
mov
sub
fists
xchg
sub
cltd
cmp
xor
push
dec
inc
aam
fildl
inc
xor
data16
iret
mov
xor
sbb
in
ficompl
lahf
out
xchg
dec
adc
xchg
inc
setl
xor
scas
cmc
push
js
add
jle
cmp
fwait
or
inc
hlt
cmp
add
jl
cwtl
movsb
ja
xlat
push
xchg
xchg
add
sbb
xchg
dec
fstpt
out
xchg
push
sbb
rcr
test
int
jbe
dec
int3
orl
sbb
ret
insb
or
ret
mov
into
mov
ret
pop
cld
out
test
sbb
mov
xchg
pop
iret
popa
mov
xor
ds
xor
aad
sbb
test
into
xchg
mov
fwait
xor
xchg
cli
imul
dec
mov
mov
test
push
push
cmpsb
mov
or
fiaddl
pop
icebp
testb
incl
ret
sarb
mov
cmp
stc
add
mov
je
and
mov
imull
or
cmpsb
dec
mov
call
dec
loope
shll
test
je
nop
loop
fwait
add
mov
lret
addr16
dec
aas
aaa
adc
jge
into
pop
enter
loop
outsl
dec
fcmovnbe
dec
push
mov
movsl
jmp
iret
cmc
aam
fisttpl
mov
aaa
dec
in
jbe
icebp
and
nop
je
adc
cwtl
mov
addl
les
daa
cwtl
mov
push
in
stc
sub
lods
fwait
push
xchg
xchg
sub
mov
or
pop
js
push
lahf
inc
hlt
fistl
sbb
enter
dec
mov
jbe
pop
jbe
add
dec
push
enter
repnz
mov
lret
loope
dec
add
iret
inc
jl
ja
sbb
mov
jg
pop
aaa
jbe
mov
movl
gs
sahf
xchg
pop
iret
int
push
mov
popa
std
bound
jmp
ljmp
sbb
jmp
pop
mov
cmp
int3
call
lret
add
fdivs
test
sbb
mov
ljmp
jmp
jne
jbe
xchg
enter
mov
pop
xchg
sbb
lods
int
mov
fcmovne
sub
in
cltd
and
leave
xchg
aaa
sti
push
mov
int3
lcall
in
pop
jno
push
dec
and
fcmovnu
mov
pop
stos
mov
lret
xchg
imul
or
cltd
fistps
mov
movsb
adc
cs
sbb
popf
out
test
jge
pop
dec
xchg
jo
add
clc
push
call
mov
loope
fnstcw
les
xchg
test
fisubs
pusha
fstpt
push
stos
mov
loope
fs
mov
idivl
push
adc
and
pop
xor
fidivrl
xchg
sub
push
push
inc
ficoml
cli
mov
out
out
leave
xchg
mov
add
cs
rol
xor
dec
or
fldt
xor
iret
clc
add
sub
or
mov
adc
dec
xchg
orb
cli
hlt
outsl
xchg
or
int3
mov
out
mov
dec
pusha
fildl
mov
add
add
pcmpgtw
pop
aam
lods
pop
jae
call
es
nop
or
push
xchg
sbb
aam
ds
push
mov
je
lret
xlat
rorb
mov
icebp
cli
loopne
mov
push
das
mov
xchg
cmpsl
xchg
pop
xor
cmpsb
or
out
fldl
aam
push
mov
mov
jecxz
bound
into
loopne
push
xor
xchg
fnstenv
test
cmc
fidivrs
loope
or
idivl
pop
mov
cmc
fimull
iret
or
ss
test
movsl
shll
fisubl
insb
aam
bound
retw
xchg
fsubs
int
jbe
gs
and
out
fwait
and
outsl
adc
hlt
push
and
pop
lods
dec
cltd
ljmp
dec
cmp
ss
jo
add
std
xor
dec
or
in
enter
fisubs
stc
loop
ss
fldt
hlt
sbb
xchg
inc
jbe
outsl
mov
test
in
pusha
stc
or
mov
pop
push
dec
xchg
mov
lcall
adc
xlat
sarl
mov
cmpsl
jnp
xchg
push
dec
call
movsb
fcomi
test
push
add
dec
push
js
mov
test
mov
mov
and
cmp
push
int
xchg
pop
adc
inc
dec
test
sbb
sub
mov
scas
push
xor
iret
es
lret
les
test
call
je
xor
lock
fistpl
lds
aad
nop
test
addr16
mov
cld
xlat
ret
je
jl
mov
incl
mov
add
cmc
in
jb
pop
je
adc
xchg
or
cmp
xchg
mov
clc
adc
push
fisubl
call
inc
pop
xchg
jae
dec
cmp
and
mov
push
xor
lcall
mov
push
es
repz
and
frndint
mov
adc
mov
movsl
sub
aas
mov
push
loop
adc
cmp
mov
enter
mov
and
je
rcr
dec
jo
or
out
xchg
cmp
or
mov
push
sbb
push
cmp
cmpb
xchg
and
pop
insb
mov
and
push
mov
stos
cmpsb
xor
jno
jmp
fldt
jbe
jb
xchg
cmp
add
cmp
mov
mov
xchg
mov
mov
push
enter
and
jle
pushf
xchg
push
cmp
filds
sub
aas
or
aaa
xchg
out
sbb
xchg
fwait
mov
divl
mov
add
mov
ds
out
js,pn
cli
jle
jne
adc
pop
shll
dec
fsts
fistpl
dec
out
popa
inc
dec
mov
shlb
enter
inc
outsb
aaa
aam
or
jnp
xchg
sbb
adc
outsb
jp
imul
lcall
or
push
out
int
sbb
out
mov
mov
fistl
jle
xchg
aaa
mov
addr16
dec
popf
push
push
fdivrl
in
mov
inc
lea
add
inc
xchg
and
jbe
insl
bound
scas
pop
dec
iret
jb
nop
push
inc
xor
fsts
mov
ret
in
repz
sahf
xchg
push
sbb
test
dec
mov
aam
adc
ret
mov
leave
lret
xchg
inc
repnz
sbb
adc
sahf
xchg
push
adcl
push
sbb
notb
xchg
jbe
xor
nop
subb
add
call
mov
je
iret
dec
jbe
jns
aam
and
in
sbb
mov
pop
inc
roll
adcb
repnz
out
fbstp
imul
clc
push
cmp
mov
sbb
add
push
testb
push
jl
int3
std
mov
jg
xchg
jge
cltd
test
xlat
repz
mulb
js
insl
mov
add
inc
push
push
jb
loope
aad
xchg
xchg
ror
repz
push
jae
es
mov
inc
clc
cmp
popf
shlb
adc
inc
xchg
jp
mov
ss
push
mov
and
and
cmp
in
es
push
mov
mov
dec
dec
mov
out
jnp
pusha
adc
xchg
xor
pop
sbb
xchg
pushf
lods
ret
pop
jbe
stos
xchg
movl
mov
push
jnp
aas
aad
pop
rcl
mov
dec
jae
mov
xor
fisttpl
rorl
sbb
mov
mov
push
jae
dec
addb
mov
clc
or
lock
imul
jbe
aam
and
inc
inc
sub
and
xchg
lock
or
mov
adc
pusha
jne
mov
adc
adc
xchg
lods
int3
jnp
or
repz
dec
lods
mov
enter
aas
imul
lods
inc
dec
out
iret
js
in
adc
fs
sbb
ret
xchg
inc
jnp
jmp
out
test
xchg
lock
xlat
test
cltd
fcomps
mov
fcmovnu
fwait
pop
insb
pop
dec
rolb
stos
xor
jg
popf
xchg
outsl
mov
dec
mov
adc
fwait
sti
mov
in
mov
mov
mov
int
mov
cmpsl
leave
xchg
imul
divb
mov
jle
iret
jnp
cltd
push
scas
insb
mov
roll
lahf
push
fwait
test
mov
out
pop
adc
aam
cwtl
addr16
inc
negb
mov
mov
and
fistl
cmp
repz
pop
add
fs
dec
into
cli
xchg
cmp
mov
fisttpl
shlb
iret
imul
movsl
sub
jg
and
movsb
jbe
xor
sahf
es
xor
cmp
loopne
cmpsl
sub
pop
add
jl
outsl
xchg
dec
fwait
scas
dec
js
sti
xchg
xor
push
leave
fdivs
push
test
xor
xchg
adc
popf
test
pop
inc
lock
mov
clc
ret
pop
pusha
adc
xchg
sti
aaa
cmp
or
jae
dec
sbb
xor
inc
movsbl
es
ss
push
mov
mov
std
cmp
push
sub
outsl
xlat
mov
xchg
jnp
jae
xchg
cmpsl
movsl
or
xchg
xchg
out
sbb
js
push
dec
hlt
xlat
shl
jmp
mov
cmpsl
ficompl
fists
pop
loopne
icebp
jge
jns
ljmp
xchg
out
and
movsb
stos
jb
pop
cmpl
scas
sub
xchg
das
push
inc
lea
inc
shrl
mov
fildl
pop
js
push
xchg
pop
ja
movsl
insb
pushf
cmpsb
mov
fst
add
cmp
into
sub
fidivrs
cmp
push
test
into
nop
sahf
cltd
pusha
shl
shr
and
ficoms
mov
cmp
add
ret
inc
pop
jp
add
push
pop
and
cmc
cli
push
xchg
enter
das
mov
fisttpl
out
popf
jp
orl
rcrb
int3
pusha
stc
jecxz
dec
ds
xchg
mov
test
outsb
fstpl
addr16
mov
cmc
adc
xlat
test
movsb
ret
cmp
xor
mov
daa
nop
sarb
hlt
sbb
or
xchg
clc
je
push
pop
int3
loopne
sbb
mov
xor
test
xchg
pop
xchg
mov
cwtl
and
mov
or
orl
rolb
adc
push
mov
push
xchg
xor
adcl
push
jecxz
ret
icebp
xchg
in
clc
std
mov
aam
lcall
mov
lods
scas
mov
pop
mov
jb
or
cmpsl
xchg
xchg
ljmp
sbb
fwait
sub
fwait
aam
pop
push
add
mov
iret
jecxz
jmp
mov
cmp
je
jle
loopne
dec
js
arpl
xor
pop
fstpt
cmp
iret
in
test
push
pop
ja
adc
ja
push
out
adc
inc
mov
mov
inc
xchg
int3
add
mov
into
loop
dec
mov
inc
xchg
pop
out
lds
inc
or
rorb
and
test
xchg
lods
sti
sub
sub
addr16
out
hlt
sti
xchg
ja
lds
imul
outsb
std
insb
xchg
push
dec
jbe
out
adc
hlt
adc
sub
test
lds
in
pop
out
xchg
push
fcmovnu
cmp
in
mov
sub
mov
cmpsl
jne
jl
sarl
jbe
shrb
mov
imul
test
xchg
mov
aam
push
pop
testb
push
dec
test
add
push
cmp
push
xchg
rcrb
xchg
fsub
and
sbb
stos
nop
hlt
jbe
lds
pop
push
sbb
dec
test
or
xor
iret
sarb
lahf
hlt
pusha
xchg
or
cwtl
xlat
dec
lods
arpl
inc
mov
xchg
push
repz
fisubrl
or
insl
push
xor
rcrl
sahf
dec
nop
adc
lret
andl
sbb
movsb
mov
inc
js
outsb
jo
pop
fdivs
call
xchg
mov
xchg
in
and
pusha
mov
sahf
sub
sub
fisttpl
movsl
dec
iret
mov
fadds
jg
adc
xchg
add
cmp
movb
xchg
lret
push
test
je,pt
xchg
outsl
mov
jmp
pavgb
sahf
fdivrp
aaa
rolb
cmp
rcr
lret
xchg
pop
pushf
fisubrl
xchg
sbb
jl
and
ss
xor
ret
pop
mov
into
xor
pop
outsl
pop
das
ret
or
xor
leave
push
mov
fistpl
repz
in
into
xlat
xchg
dec
xchg
negb
pop
mov
pop
sbb
add
jne
xlat
push
fwait
mov
push
cmp
ljmp
push
cmpsb
fidivs
mov
adc
das
jbe
xchg
aaa
mov
fstpl
fisttpl
or
push
add
mov
dec
es
sti
test
pop
pushf
movsb
ljmp
xor
fwait
xchg
shlb
imul
ror
incb
out
adc
lods
in
xchg
leave
mov
aad
cmp
test
bound
push
push
pusha
lods
and
mov
cmc
sub
xchg
mov
jle
jmp
scas
mov
outsb
mov
sub
fcomp
int
out
cs
jge
insb
cmp
mov
test
aam
mov
xlat
dec
int
adc
pop
insl
jmp
xchg
dec
fcomp
xchg
xchg
mov
sbb
test
iret
mov
dec
movsl
repnz
jg
out
addr16
fwait
out
and
cmpsl
test
cs
imul
xor
add
arpl
push
lret
lock
clc
sub
jl
jg
push
adc
ret
jo
push
enter
aam
movsb
xor
jcxz
testl
xchg
incl
mov
test
cltd
stos
test
mov
cmp
test
clc
outsb
mov
insl
xchg
mov
jg
enter
rcrb
sbb
mov
xchg
incb
pop
iret
add
repnz
jns
adc
pop
dec
fistpl
hlt
adcb
popa
iret
pop
sbb
add
adc
lea
das
cmp
out
test
mov
sbb
xchg
fcoms
cmc
call
mov
imulb
push
leave
xchg
insl
outsl
shrb
and
gs
into
jo
and
in
push
cld
pop
popa
pop
xor
mov
rcrl
dec
xchg
sub
dec
mov
push
dec
mov
pop
and
add
mov
mov
out
cs
xchg
fstl
mov
sahf
shrb
aas
cli
fisttpl
cmc
push
xor
add
push
jl
or
push
mov
xchg
insb
sub
mov
jle
aad
pop
jno
add
nop
cwtl
mov
stc
popa
fstpt
xor
insl
pop
mov
xor
cmp
std
xchg
jbe
dec
sar
pop
hlt
and
inc
push
pop
mov
sti
fcoms
inc
ss
inc
test
call
inc
ret
xchg
in
lds
mov
xlat
pusha
std
xor
iret
push
int3
hlt
adc
pop
in
sub
mov
int3
insb
decb
mov
mov
mov
ljmp
movlhps
sub
mov
arpl
lret
jno
outsl
mov
loopne
push
add
xchg
dec
fstl
lret
xchg
in
call
mov
movsl
faddl
mov
mov
das
leave
lahf
stos
fidivrl
lret
out
repnz
jl
inc
leave
icebp
lods
jb
shlb
dec
clc
and
jmp
add
push
test
flds
fcmovnbe
jmp
rorl
xor
fmull
push
stos
aad
or
jp
and
or
pop
mov
mov
mov
push
movsl
sbb
iret
clc
es
addr16
fcmovbe
dec
mov
imul
or
and
xchg
jne
jno
je,pt
push
stos
dec
pop
mov
orl
xchg
es
or
sbb
fistpl
lret
addr16
js
pop
jp
sbb
jmp
or
cld
pop
push
rclb
dec
sti
lea
dec
xchg
int
xchg
mov
test
xchg
scas
pusha
adc
cmp
roll
pop
lret
es
out
xchg
add
mov
icebp
mov
int
pop
js
ucomiss
push
adc
jmp
push
inc
aam
mov
dec
and
addl
mov
movsb
in
mov
cld
and
test
rcr
leave
pop
mov
push
imul
mov
push
jae
scas
pop
inc
lret
in
mov
mov
imul
shlb
mov
dec
cltd
repnz
test
lds
or
fcmovnu
lret
out
pop
or
iret
stc
leave
sub
call
lds
xchg
pop
test
ret
mov
sub
cwtl
out
push
cmp
mov
sti
add
pop
mov
cmp
mov
mov
add
dec
fcmovnbe
stc
pop
mov
adc
push
xchg
mov
test
pusha
pushf
pop
push
gs
add
dec
jns
push
inc
push
data16
xchg
sbb
rcll
cltd
ret
ret
icebp
sbbl
je
sbb
jns
arpl
pop
fcmovnu
mov
push
cwtl
jmp
sbb
push
out
mov
mov
mov
leave
iret
dec
loope
xlat
push
or
bound
orl
test
test
pop
rcrl
pop
loop
into
les
stos
enter
fstpt
mov
jns
aad
stos
fistl
adc
stos
in
mov
mov
mov
daa
inc
and
mov
xchg
mov
test
mov
or
mov
xor
loopne
test
and
add
sahf
rcll
mov
push
out
hlt
sbb
adcb
mov
cmp
lea
lods
pop
pop
cltd
mov
outsb
mov
pushf
iret
nop
iret
pop
mov
xchg
mov
iret
insb
jl
push
cmp
outsl
xchg
aad
je
cmpsl
iret
sub
insb
out
outsl
push
in
fsubrp
xchg
mov
sub
nop
rcrl
fmuls
xchg
xor
xor
pop
int
push
int3
fildll
mov
jle
pop
test
mov
mov
je
cmp
icebp
jne
push
popa
sub
cmpsb
adc
dec
mov
xchg
inc
push
sbb
push
mov
sar
xchg
out
daa
cmp
cmpl
and
stos
jp
mov
pop
sub
xorl
xor
fstpt
xchg
xchg
bound
xor
negb
clc
add
fistl
push
int
js
add
ja
in
cld
fcmovnbe
dec
bound
push
data16
into
clc
xor
dec
jbe
adc
mov
cmp
jns
push
arpl
test
inc
mov
and
dec
sbb
aad
ret
lret
push
roll
xor
daa
lcall
push
inc
push
fisubs
xor
add
push
mov
add
jne
fdiv
mov
xor
jae
into
mov
shr
inc
cmp
mov
lcall
rcll
xchg
hlt
mov
hlt
mov
sbb
or
lock
sub
mov
jbe
pop
lret
push
in
es
or
js
ret
dec
mov
cmp
push
fisubl
imul
daa
xchg
arpl
jmp
fidivl
or
scas
xchg
mov
mov
mov
rolb
add
xchg
jmp
sbb
aam
mov
mov
iret
add
xchg
mov
daa
inc
dec
dec
mov
sub
mov
adc
xchg
les
movsb
leave
stc
sub
push
imul
mov
cltd
mov
lcall
cmpl
lods
xchg
leave
hlt
insb
or
adc
movsb
mov
xchg
jo
into
or
xchg
add
xchg
loopne
push
xor
xchg
test
sahf
mov
mov
push
jmp
jae
xor
add
cs
fmull
mov
repnz
pop
inc
enter
xchg
add
and
iret
sbb
cmp
test
jbe
xor
sbb
pop
cmp
scas
xchg
cs
mov
int3
loopne
fcomps
adc
push
pop
imul
xor
dec
out
push
fldt
mov
nop
fidivrl
pop
cwtl
pop
add
movsb
sbb
jae
mov
or
push
hlt
shlb
xchg
sarl
push
fcmovnu
dec
ret
sbb
cmp
jno
jno
sahf
lods
mov
lds
mov
popa
push
push
cmc
mov
xlat
mov
pop
or
ds
jl
cmp
shrl
xchg
ret
decb
int3
dec
std
lahf
sahf
pop
test
pop
iret
cmp
clc
sub
jp
jg
repnz
aaa
push
xor
mov
dec
iret
sarl
fs
stc
push
sbb
sub
mov
xchg
add
add
jno
loop
popf
cmp
xor
mov
iret
in
repz
jnp
push
mov
int
sbb
mov
iret
xchg
mov
inc
push
mov
pop
arpl
and
pushf
dec
iret
sub
pop
mov
arpl
int3
sbb
scas
imul
movsb
iret
lcall
iret
push
bound
jns
fs
xchg
insb
loop
or
ret
pop
xchg
out
test
pop
enter
xchg
sbb
cmp
dec
xchg
push
imul
adc
popf
or
push
and
ficoms
jno
iret
mov
mov
ds
ja
inc
aam
imul
mov
iret
repz
jge
sbb
leave
or
rol
inc
jl
movsl
popa
add
add
cli
sub
cli
aam
jns
ss
sbb
hlt
fistpl
ret
push
in
repnz
add
cwtl
jo
addl
or
cmp
mov
pop
jge
ss
cmc
into
pop
jns
sahf
das
mov
cld
test
xor
movsb
xchg
movsl
xor
es
rcl
je
pop
aad
pop
iret
xchg
popa
dec
call
sar
jmpw
pop
mov
inc
pusha
sub
std
fnsave
mov
jp
and
push
lods
les
xor
iret
xlat
xlat
pusha
or
and
lea
iret
cmpsb
push
test
call
lcall
sbb
mov
iret
shlb
push
pop
incb
jno
mov
or
mov
sbb
mov
or
mov
lahf
pmaxsw
jnp
cld
xchg
outsl
inc
lock
and
mov
sub
mov
jg
push
add
cmp
mov
or
adc
inc
frstor
mov
sbb
sti
jecxz
sahf
pop
arpl
sti
std
cld
stos
cli
fiadds
lods
testl
jns
fidivl
out
iret
push
mov
lock
or
mov
mov
and
stos
shr
dec
adcb
and
or
xchg
inc
fcoml
out
inc
dec
faddl
mov
fxch
adc
es
mov
out
movb
pop
rol
inc
lds
pushf
dec
loopne
jnp
das
mov
fistpl
roll
outsb
mov
xchg
mov
add
out
imul
fiadds
in
mov
fiaddl
inc
inc
sti
cvtdq2ps
push
call
xchg
xor
fdivrs
add
in
mov
jo
repz
xor
js
adc
cmp
sahf
shr
daa
inc
cwtl
lahf
cmp
sahf
ret
xchg
scas
scas
jo
jo
lret
mov
nop
push
pop
data16
or
lods
and
es
xchg
pop
sarb
cli
popf
js
mov
mov
shll
ret
adc
ss
fs
inc
mov
roll
adc
divl
or
pop
nop
adc
xchg
fldt
add
iret
and
sbb
xor
sbb
sub
fcmovnu
adc
xchg
dec
xchg
out
aad
mov
nop
xchg
incl
push
dec
ja
mov
testb
cli
sub
push
outsl
cmpsb
imul
lahf
je
ds
push
adc
mov
das
mov
stos
mov
stos
aad
push
pop
push
aam
dec
rcrl
xchg
inc
iret
or
ret
mov
cmpsb
adc
adc
add
iret
pop
sub
pusha
sbb
test
cmc
sbbb
xor
mov
mov
test
stos
adc
test
call
test
adc
enter
dec
test
lcall
pop
pop
pop
inc
dec
xor
sbb
adc
inc
imul
es
movsl
mov
rol
pop
js
or
mov
push
bound
mov
ficoms
idivl
cmp
cli
xor
fists
or
in
fdivl
enter
repnz
ja
jl
mov
decl
xchg
scas
lock
xor
xchg
mov
sub
rcr
mov
nop
aad
nop
lods
mov
mov
push
je,pn
sarl
repnz
inc
xchg
les
shrl
xchg
shll
and
jmp
lods
shl
out
pop
xchg
pop
inc
push
sub
mov
xchg
jne
dec
aas
lea
cmp
pop
cltd
movsb
sahf
iret
jmp
sub
mov
mov
repnz
das
inc
ja
inc
add
loope
outsb
xchg
aad
push
scas
and
jbe
dec
dec
aam
sbb
or
sub
insl
enter
xchg
or
mov
push
stos
iret
or
jns
test
cmp
lret
rorb
mov
inc
roll
mov
cmp
dec
mov
outsb
in
into
cmp
call
or
fwait
dec
xchg
or
xchg
mov
out
cmp
add
xchg
push
xor
xchg
sbb
mulb
les
add
jmp
xchg
cmp
push
inc
xchg
call
mov
decb
imul
mov
popa
mov
iret
mov
pop
adc
int
iret
movlps
repz
int3
adc
jl
sti
in
repnz
jne
out
aaa
into
rcll
movsl
pop
nop
leave
pop
mov
jge
push
popa
cmp
dec
lahf
and
sub
push
aaa
fcmovnu
pop
mov
je
or
fisttps
inc
mov
sbb
pop
cmc
mov
sub
cltd
es
lahf
and
dec
popf
test
pop
adc
xchg
leave
fcmovnb
inc
inc
aam
jl
cmp
out
out
dec
pop
jne
sbb
jbe
jmp
xor
movl
jecxz
fcomip
inc
dec
andl
callw
scas
push
jmp
jns
add
mov
xor
lret
push
dec
inc
leave
inc
xchg
inc
cmp
inc
test
mov
stc
decl
adc
sbb
roll
jp
rcll
or
push
stos
add
iret
addr16
xchg
jge
adc
pop
dec
aaa
popa
stos
sub
or
cmp
jl
lcall
sbb
lret
push
negl
das
sub
dec
in
stos
inc
iret
add
mov
jle
xchg
movsb
test
mov
cltd
iret
std
fcom
loopne
shl
addr16
fistpl
pop
stos
lret
int
imul
rcrb
movsl
xchg
iret
sub
or
xchg
push
cs
cwtl
lahf
add
out
stos
daa
pop
cld
into
push
popf
pop
lcall
jns
mov
or
or
push
frstor
test
mov
mov
mov
adcb
ret
loope
loop
pop
or
adc
sub
ljmp
mov
push
test
mov
pop
mov
test
and
pop
pop
xchg
or
sbb
dec
sbb
movsb
aam
sub
int3
iret
movsl
das
loope
fisttps
mov
rorl
mov
sbb
lods
jb
inc
fildl
mov
stc
or
add
aad
sbb
enter
jmp
out
ret
adc
or
dec
sbbb
add
pop
sti
into
push
les
std
jge
jmp
push
push
insb
xchg
test
in
mov
movsb
fwait
push
and
iret
mov
push
ret
out
or
jg
mov
dec
int3
mov
icebp
fcmovnu
xor
hlt
or
loopne
push
jmp
jl
dec
and
xor
cltd
push
mov
mov
xor
test
fisttpl
loopne
rol
mov
lea
aam
out
insl
push
inc
mov
mov
inc
shrl
in
xchg
xor
imul
or
mov
fidivrs
push
inc
popl
mov
push
dec
loopne
mov
dec
lahf
das
push
adc
inc
and
clc
xchg
ret
sub
sbb
pop
lret
xchg
pop
rolb
lods
je
aad
repnz
inc
subl
xchg
clc
mov
js,pt
in
and
movsb
jg
sub
and
dec
lret
sub
cmpsb
fisttpll
popa
pushf
cmpsb
push
cmp
enter
add
arpl
pusha
or
xor
cmp
rcll
inc
mov
stos
pop
fcmovnu
psraw
iret
fmull
aam
stos
lahf
popa
in
mov
push
js
push
jge
push
or
sub
or
test
pop
mov
mov
leave
in
daa
pop
stos
cmp
scas
push
pushf
fs
lds
sbb
lods
sub
out
imul
pop
cmp
push
loopne
push
test
dec
xchg
loope
outsl
fwait
push
fiadds
jg
iret
mov
adc
xchg
xchg
ja
sub
test
sub
mov
adc
and
adc
leave
xchg
mov
pop
fildll
fstpt
mov
popf
into
test
add
popf
lcall
jg
jle
popl
adc
shll
cld
imul
into
nop
jae
xchg
cwtl
jo
xchg
adc
mov
cmp
xchg
mov
xor
adc
icebp
and
cli
rol
mov
xor
orb
sub
mov
push
out
inc
lock
les
loop
xchg
jge
jae
call
xchg
repnz
movsl
adc
std
outsl
movsl
pop
mov
push
mov
imul
cmp
test
jne
push
clc
sub
movsl
dec
jmp
dec
push
cmp
mov
xchg
loope
into
loop
mov
loope
into
inc
cmp
pop
out
add
pop
push
jg
sahf
pop
cvtpi2ps
push
mov
push
lods
inc
cmc
shrb
adc
loopne
mov
jo
adc
ficoml
fs
sti
xchg
or
inc
mov
fstpl
addl
push
xchg
sub
repz
push
movsb
sbb
push
dec
add
fildl
loopne
xlat
adc
fcmovbe
xchg
xor
daa
xlat
jle
out
mov
xor
mov
mov
jp
add
dec
out
mov
iret
in
pop
pop
pop
shrl
sub
pop
aam
sbb
out
mov
or
pop
repnz
inc
mov
push
jnp
sarl
add
push
sub
jbe
xchg
pusha
pop
in
pop
or
push
sub
sbb
or
push
adc
mov
std
sbb
js
pop
sbb
jle
inc
int
xchg
mov
dec
and
js
jnp
bswap
sahf
jo
lea
xor
jmp
js
ret
icebp
xchg
pop
push
pandn
cmpsb
push
mov
jp
mov
fistps
out
cli
imul
inc
sarl
lds
push
mov
int
addb
cmp
mov
nop
add
ds
pop
cmp
jns
fstpl
mov
jmp
ret
pop
int3
pop
xchg
sbbl
popa
pop
aas
mov
cli
ds
cld
fisubl
xchg
sbb
ret
cwtl
adc
xor
pop
ror
in
xchg
movsb
and
out
aas
pop
loop
xchg
ljmp
fnsetpm(287
fimull
pop
addl
and
ljmp
lds
inc
mov
seto
xchg
adcl
xchg
xchg
adc
les
pop
or
fstpt
mov
add
lea
ljmp
jl
sub
mov
jns
adc
pusha
mov
push
push
int3
push
mov
sub
cmp
and
xchg
lret
xchg
sbb
into
jns
jno
fisttps
out
xchg
mov
or
and
andl
inc
mov
push
pop
jg
mov
xor
add
gs
nop
lret
inc
lods
fcmovnb
je
mov
xchg
mov
imul
xchg
sbb
je
jno
aam
in
mov
rcl
mov
add
fbld
hlt
bound
pop
sbb
push
mov
jg
popa
sbb
iret
pop
mov
lahf
push
sti
push
add
and
cmp
dec
iret
call
add
pusha
pusha
arpl
sub
inc
shlb
rol
cmp
shlb
dec
andl
pop
sar
shl
in
int3
movsl
pusha
daa
inc
insb
mov
addl
aam
lret
iret
imul
xchg
cmp
lods
call
dec
add
daa
fistpl
push
fwait
data16
sbb
and
mov
pop
inc
dec
test
pop
xchg
sar
arpl
mov
mov
lock
insb
rcr
repz
cmp
into
cli
cmpsb
jge
inc
cmp
adc
ror
mov
in
mov
mov
push
xchg
dec
clc
mov
or
dec
out
es
fdivl
adc
mov
arpl
push
inc
cmp
xchg
sub
js
push
jge
out
or
jbe
loopne
scas
dec
iret
cmc
jo
adc
loopne
mov
sub
inc
mov
scas
addl
dec
push
stos
cmp
push
pop
xchg
lods
xor
sbbl
stc
sub
movsb
mov
sub
cmp
repnz
sbb
xor
xor
mov
fnstsw
stos
bound
push
pop
jg
hlt
hlt
or
scas
iret
jecxz
and
das
shl
xchg
stos
imul
jnp
daa
jne
ret
xchg
xchg
mov
imul
fwait
sub
mov
and
filds
lcall
jmp
int3
out
lods
mov
ret
adc
movsl
xor
popa
lcall
jge
popf
dec
xchg
push
outsl
lcall
sbb
andl
pusha
jb
sub
cmp
pop
add
dec
add
xor
stc
pop
xchg
mov
sahf
push
cli
aas
adc
and
popa
or
cmp
xor
bound
xchg
aas
fsubl
xchg
sub
fsts
rclb
pop
pop
jg
add
stc
mov
sarb
xchg
outsb
sub
xchg
dec
adc
mov
pop
add
cmp
or
and
std
ret
in
test
hlt
test
mov
or
mov
negl
sti
test
lcall
aam
nop
xor
aaa
pop
test
pushf
cmpsl
popa
xchg
and
lea
jno
repnz
mov
dec
sbb
mov
movsb
sbb
mov
clc
add
xchg
fildl
fwait
push
mov
outsb
sub
mov
rorl
xor
aam
enter
pop
jp
ficompl
pop
and
push
dec
in
mov
iret
es
imul
adc
mov
mov
pop
xor
xchg
sub
sbb
or
sbb
je
cmp
ja
xor
int
adc
mov
inc
iret
outsb
and
pusha
dec
xchg
pop
adc
mov
fwait
out
sub
aad
push
pusha
aam
xchg
jo
or
lcall
pop
sbb
testb
jg
xor
sub
imul
je
mov
fwait
xchg
ljmp
push
add
jmp
xchg
and
decl
and
push
ffreep
nop
repz
into
loopne
stos
pop
in
fstpt
sub
lahf
int3
xchg
xchg
mov
pop
imul
or
sbb
xchg
add
inc
fwait
stos
mov
subl
idiv
test
push
repz
cmc
xchg
inc
mov
ljmp
inc
jbe
xchg
rcrb
scas
sbb
out
mov
dec
inc
lock
or
xchg
clc
pop
fstps
or
jge
sbb
mov
mov
arpl
popl
std
icebp
push
dec
dec
push
test
jl
das
stc
push
lods
fstpt
inc
ds
sub
inc
jmp
shll
popa
cmp
imul
xchg
cmp
and
xlat
sub
ja
insb
xchg
stos
cpuid
jl
add
popf
lods
imul
ss
and
mov
fdivrs
aam
xchg
outsb
mov
mov
out
dec
ret
xchg
iret
test
iret
jmp
add
pop
mov
imul
testb
mov
sbb
mov
adc
jo
aaa
jecxz
xchg
pushl
mov
cli
or
mov
cmp
lret
mov
add
iret
popf
lret
add
in
std
lret
dec
sbbb
or
pop
out
mov
fisttpl
xchg
sub
push
rorl
int
divl
pop
leave
int
add
add
cli
push
sub
test
vpsubsw
inc
push
lahf
rolb
add
arpl
scas
adc
mov
fsubrs
iret
in
fildll
inc
lods
cmpsb
popf
ja
lret
std
imul
aam
clc
xchg
push
das
and
fs
mov
in
into
mov
test
xor
cmc
fidivrs
jle
mov
fistpl
es
and
lods
push
add
jg
sbb
mov
sbb
xchg
adc
pop
pop
pop
rclb
jne
mov
cmpsl
cltd
xchg
dec
iret
jns
xchg
test
test
addl
movsb
lret
pop
adc
frstpm(287
mov
cmp
arpl
xor
sti
cmp
or
pop
iret
aam
ret
mov
add
pop
sti
shrl
iret
adc
mov
mov
cmpsb
mov
stc
sub
ss
out
pop
mov
add
das
push
test
lods
bound
mov
cmp
int
data16
ret
scas
lods
xchg
imul
enter
clc
or
dec
xchg
insb
push
xchg
subb
jne
xchg
inc
cmp
cmpsl
mov
xor
fcmovnu
cmp
bound
jl
jmp
aad
dec
xlat
fcompl
popf
imul
call
push
dec
mov
rolb
add
lods
cwtl
repnz
test
int
ss
sub
jp
ret
pushf
add
pushf
push
xor
dec
add
xchg
xor
cmp
out
out
sbb
aam
mov
xchg
jbe
xchg
addr16
in
stos
add
sbb
rorb
xchg
fs
adc
test
sub
xlat
shl
aam
pop
and
adc
daa
and
nop
inc
fwait
iret
jae
mov
test
fisubl
rorb
fcomi
addl
or
ret
cs
cmc
pop
out
mov
in
aam
or
mov
popa
int3
cmp
jmp
idivb
fs
jp
movsl
and
xchg
iret
arpl
outsl
out
test
add
pop
xchg
jp
mov
mov
ljmp
ror
push
xor
xchg
inc
sub
test
pop
push
pop
xlat
cltd
notl
pop
pop
sub
addr16
fs
scas
adc
xchg
iret
push
pop
hlt
mov
xchg
ret
push
cmp
and
out
jl
fistl
insl
nop
fadd
int3
or
loope
nop
push
pop
mov
adc
and
shlb
mov
jg
mov
cmp
in
dec
xlat
dec
xor
sbb
push
mov
pop
xchg
jnp
cwtl
and
aaa
xchg
xchg
aaa
cmp
dec
lea
fisubl
xchg
arpl
lock
or
or
leave
push
bound
or
xor
lods
xchg
inc
scas
jp
je
sti
hlt
sbb
jae
and
popa
ficomps
xlat
test
inc
dec
cld
xchg
mov
inc
fs
test
outsl
jbe
inc
hlt
cwtl
xchg
iret
cld
or
mov
sbb
stos
xchg
stc
inc
hlt
and
js
dec
sbb
js
push
addr16
dec
and
xchg
jle
out
sti
xor
xchg
fcmovne
loop
jge
xor
lcall
insb
cmpsl
movsb
imul
cmp
js
fisubl
test
movsl
adc
inc
cmc
mov
push
iret
movsl
roll
xchg
or
jmp
inc
or
xor
push
fneni(8087
jmp
mov
into
sbb
inc
loope
push
lock
mov
fwait
mov
jne
jns
mov
int3
adc
or
into
sbbl
pop
icebp
ds
je
sub
dec
adc
cmc
loope
mov
pusha
sahf
nop
or
mov
mov
mov
movb
out
lret
xor
imul
cltd
sbb
sti
mov
mov
into
sarb
jge
jl
outsl
push
cmp
pop
xchg
xlat
jp
mov
pop
inc
int3
fdivs
imul
add
out
cmc
lods
imul
xchg
fdivrs
out
cmp
pop
dec
mov
dec
mov
or
jmp
rcrb
bound
iret
ret
or
bound
call
pop
jne
iret
insb
jge
sbb
call
push
add
xchg
sub
xchg
iret
in
and
xor
jne
fldt
add
adcb
xlat
fistpl
sbb
js
std
into
out
adc
loop
adc
test
push
adc
fiaddl
lcall
hlt
icebp
and
adc
lods
lret
or
ficoml
fcomp
arpl
cmp
lods
add
inc
pop
cmpsb
test
jp
and
adc
mov
icebp
imull
mov
pop
daa
adc
inc
fistps
sbb
js
fnsave
sub
jae
or
movsl
sub
dec
jg
addb
ret
push
iret
fs
inc
aaa
enter
jl
loope
dec
xchg
and
mov
and
sub
jmp
nop
xchg
pop
enter
sbb
xchg
jmp
idivb
mov
movsb
jle
ja
inc
and
or
roll
mov
pop
lret
iret
add
das
or
xchg
icebp
adc
je
loop
push
sarb
lahf
xor
mov
pop
xchg
xor
dec
or
iret
mul
mov
add
dec
jbe
jno
dec
addb
jp
out
ret
int
rolb
out
jle
std
xchg
lcall
gs
dec
sub
orb
and
call
or
add
jl
fmulp
fistpl
sub
lods
iret
mov
sahf
je
test
inc
adc
inc
cmp
cwtl
test
or
mov
lcall
lret
push
imul
sub
xchg
int
ss
xchg
dec
cmp
movsl
setae
cwtl
or
sarl
fistpl
cltd
les
xchg
jae
dec
inc
push
lahf
mov
jo
push
ljmp
popa
sbbb
dec
xlat
out
jmp
in
add
dec
lea
rclb
sub
gs
pushf
mov
xchg
mov
inc
xor
fstpt
mov
sbb
test
sbb
xchg
xchg
mov
cmp
bound
lds
adc
xchg
int
call
mov
mov
insb
jg
insl
dec
push
cmp
into
cs
data16
lret
outsl
stc
out
aad
mov
insb
iret
lcall
popa
jg
adc
mov
mov
pop
ret
cmp
jae
inc
mov
mov
jecxz
loop
sub
xchg
ret
dec
mov
pop
negb
sub
int3
aaa
stos
iret
divb
or
adc
dec
push
sub
mov
sub
mov
fildl
scas
sarb
js
stos
incb
jb
imul
movsb
pusha
lret
add
add
xchg
dec
add
mov
leave
sbb
dec
vmovaps
pushf
dec
xor
enter
rorl
aam
xor
pand
adc
pop
sub
sub
mov
mov
adc
addr16
cmp
xchg
repz
enter
lar
andb
je
push
pop
xchg
mov
sbb
mulps
stc
les
fistl
shl
mov
stos
or
and
mov
out
call
out
jmp
imul
clc
push
xlat
mov
xlat
adc
loop
push
rcrl
sbbl
fdivs
out
imul
repnz
shl
popa
rcrl
dec
gs
scas
xchg
sbb
pusha
mov
jo
arpl
data16
mov
int
xchg
jae
dec
sbb
xchg
fisubl
sbb
iretw
xchg
call
xor
subl
mov
sub
xchg
or
jp
xorl
pop
movl
mov
pop
and
js
lahf
and
in
cmp
aas
and
xchg
data16
out
xchg
mov
out
ret
mov
enter
std
adc
stc
aaa
pop
in
aam
in
mov
sbb
xchg
icebp
xor
dec
fsubrs
rcrl
add
mov
leave
decb
adcl
xor
sbb
xor
mov
lods
dec
imul
iret
imul
push
addr16
sbb
aas
clc
in
cmc
mov
test
mov
cmpsb
pop
fcomps
imul
pop
xchg
cli
push
popl
mov
ds
into
aam
or
lea
cmp
push
aaa
repz
in
lods
xchg
push
imul
mov
lock
jg
loop
leave
ror
push
jo
dec
insb
sbb
test
xchg
repnz
das
inc
push
test
push
aaa
fstpt
push
data16
adc
pusha
pop
int3
pop
in
or
js
xchg
lea
add
mov
mov
pop
pop
and
dec
iret
outsl
mov
push
mov
add
pop
call
xchg
cmp
mov
ret
aam
xor
push
sbb
sub
imul
inc
roll
sub
sub
xchg
dec
cli
out
iret
push
pop
sarw
stc
cmp
pop
jmp
daa
dec
repz
fistpl
dec
pop
je
dec
pop
into
inc
lock
outsb
ret
add
js
out
frstor
sahf
dec
adc
test
xor
fs
mov
fwait
idivl
jl
lea
fiaddl
mov
pusha
mov
or
int
mov
mov
dec
jecxz
hlt
fimull
dec
cs
adc
pop
dec
out
pop
fucom
cli
xchg
repz
mov
xchg
jb
and
inc
es
test
pop
push
cli
push
inc
add
testb
sti
into
xchg
inc
mov
dec
or
ret
add
mov
sbb
movsl
and
mov
fcomps
hlt
mov
test
pop
aas
push
cli
in
xchg
cltd
dec
test
add
xchg
sub
sub
fs
xchg
imul
xchg
int
cmp
in
push
scas
xchg
add
test
in
insb
mov
mov
mov
mov
add
xor
lods
add
and
cwtl
pop
orb
fninit
int
scas
jne
and
iret
aas
fcom
xchg
dec
aad
inc
xchg
sub
adc
xchg
adc
xchg
bnd
js
jge
xchg
ret
insl
xor
and
fcoms
mov
inc
fisttpll
in
mov
jae
sub
push
les
mov
cmc
sub
add
push
jo
mov
jne
lret
mov
inc
adc
int3
mov
push
cmc
sbb
gs
cmpsl
pop
xchg
add
aad
xor
loop
ljmp
dec
and
mov
push
pop
pushf
fwait
jns
in
movsb
inc
shll
or
ret
pop
add
adc
rclb
cmp
jmp
lret
xlat
mov
dec
lds
loope
xor
fmuls
and
xchg
mov
cmp
imul
out
sbb
scas
xor
mov
pusha
cmp
jo
pop
add
inc
ret
xchg
test
xorl
outsl
adc
je
mov
pushf
pop
add
jl
xchg
mov
movsb
cmp
add
fiadds
sahf
nop
stc
xchg
inc
fistps
push
jl
dec
int3
and
and
sbb
aam
dec
dec
cmc
jmp
ret
sub
add
fdivrs
push
xlat
mov
and
mov
popf
dec
push
jge
int
adc
mov
jns
out
shr
ds
dec
in
js
cmp
jg
add
jmp
xchg
or
pop
icebp
fsts
jecxz
mov
adc
fs
ja
ss
adc
mov
iret
xchg
mov
adc
inc
mov
imul
call
or
push
xchg
iret
in
das
push
cld
das
jp
jge
and
imul
loopne
pop
xchg
shlb
xchg
leave
mov
jmp
jbe
cmp
or
add
xchg
into
fsubrs
mov
pop
aad
and
jg
sub
mov
std
cmp
pop
push
xchg
pop
sbb
xor
jge
stos
and
shlb
add
call
sbb
enter
filds
lock
xchg
rorb
cld
sbb
addr16
jg
jmp
aad
xchg
into
out
push
loope
push
std
enter
inc
jnp
rorb
jo
ret
cmc
test
pop
bound
xchg
jnp
ficoms
test
dec
lahf
pop
ljmp
adc
cmp
fstpt
aad
shrl
mov
and
push
decl
mov
inc
xchg
push
xchg
cmpsl
mov
lret
jp
fcmovnbe
or
test
stos
jns
stos
push
movsb
fnstsw
mov
mov
push
mov
fldcw
xlat
insb
sbb
notl
xchg
push
fld1
adc
stos
sti
cmc
into
call
fmuls
jge
and
cld
fstpt
push
dec
notb
xchg
dec
ret
adc
popa
inc
push
dec
mov
pop
and
lahf
mov
lss
out
inc
std
cmp
xchg
sbb
cli
cltd
fadds
popf
cmp
xchg
rcl
ljmp
pop
pop
xchg
arpl
cmc
add
ja
ficomps
clc
sti
test
rorl
push
pop
rolb
cmp
push
sub
sbb
mov
xchg
and
std
fbstp
icebp
sbb
jge
xchg
push
cmp
push
int3
lds
adc
loope
cmp
fldl
add
pushf
fstpt
xor
stc
inc
adc
scas
sub
adc
mov
cltd
iret
push
cltd
repnz
fcmovnu
or
mov
push
int3
aam
mov
jle
loop
ss
fisubrs
sub
xchg
fs
xor
sub
cld
dec
or
xchg
mov
in
stos
mov
rclb
mov
out
sahf
xor
cwtl
fmulp
ficoml
inc
add
sbbb
adc
dec
aad
iret
xlat
sub
push
ss
xor
xchg
jl
jnp
pop
cli
push
rolb
dec
push
les
gs
xchg
test
inc
notl
fistl
sub
nop
xchg
sbb
ficompl
data16
add
xchg
xchg
or
cmpsb
das
movb
sub
cs
negl
pop
repz
imul
arpl
in
or
jecxz
jmp
mov
repnz
inc
xchg
jae
int
xor
fbstp
stos
sbb
sbb
push
inc
iret
cmp
pushf
xor
outsb
subb
inc
bswap
jp
dec
nop
sub
ss
adc
push
mov
imul
std
xchg
nop
and
jecxz
scas
push
mov
iret
mov
ret
or
push
jecxz
mov
outsb
ds
sbb
add
in
adc
xor
add
add
cltd
dec
iret
test
movsl
mov
movsb
das
stc
enter
lods
jbe
fmul
pop
xor
out
int3
inc
dec
test
int3
adc
mov
xchg
push
movsb
ss
mov
stc
xchg
testb
aas
add
pop
mov
xchg
test
loop
sarb
mov
lret
cs
and
test
imul
fcmovu
jmp
int
in
into
aas
adc
inc
xlat
fiadds
aad
mov
inc
fsubrs
jb
cli
xchg
inc
pop
aam
loopne
loop
loopne
or
arpl
idivb
xor
push
hlt
in
frstor
xor
int3
add
push
mov
jae
add
mov
ljmp
hlt
ret
adc
xchg
or
stos
insb
or
imull
adc
cmc
inc
je
dec
enter
cwtl
scas
add
out
pop
cmpsb
and
mov
inc
or
mull
xor
rclb
into
lds
push
fistl
push
push
enter
or
loop
mov
add
mov
mov
jae
mov
rorb
and
xchg
test
test
xchg
fldt
bswap
stos
sbb
jo
outsl
add
or
push
push
jl
rcll
pop
add
pop
dec
rcrl
pop
test
add
xchg
dec
cmp
in
nop
imul
mov
jns
add
mov
pop
sub
jl
ljmp
test
loopne
sub
and
rcr
jne
inc
fimull
in
addr16
xchg
push
out
pop
sbb
iret
bound
icebp
pop
push
xor
adc
repz
add
fcmovnu
rcrl
repnz
mov
cs
cmc
sub
idivb
jg
imul
xchg
aaa
sbb
in
dec
xchg
stos
out
hlt
or
inc
adc
sbb
or
test
push
sbb
xor
andb
hlt
loopne
loopne
cmc
dec
data16
cmpsb
lods
mov
into
mov
or
scas
sti
xor
pop
inc
int
dec
and
inc
xchg
push
addr16
push
push
push
rcr
addl
iret
mov
jmp
sbb
cld
mov
repz
add
pop
mov
xchg
or
lahf
nop
andl
sbb
addr16
test
jg
xchg
popf
sub
iret
adc
scas
repnz
mov
adc
lock
int3
aam
insl
out
sub
test
push
push
pop
sahf
push
jnp
mov
hlt
push
into
sbb
ds
ret
gs
pop
or
iret
bound
push
add
fcmovnbe
test
popa
lret
mov
es
aam
js
mov
into
push
js
stos
sahf
lahf
xchg
dec
or
adc
or
into
sbb
data16
outsb
push
test
sbb
fdivp
mov
ja
mov
dec
out
xchg
xchg
lock
xor
std
pop
xor
fiadds
jae
insb
inc
outsb
test
jne
rcll
lock
fldt
xchg
push
xor
sbb
jg
push
inc
mov
fildl
shl
dec
fidivs
inc
pop
inc
in
test
cltd
adc
outsl
lcall
bound
xchg
test
dec
mov
jno
fwait
mov
out
pop
mov
jbe
outsb
add
xchg
call
xchg
mov
jge
push
repnz
lock
flds
mov
and
not
pop
outsb
and
enter
test
test
pop
xchg
rcrl
aam
jecxz
pop
jne
mov
jnp
inc
push
movsb
and
or
push
mov
movsl
xor
fcmovb
xchg
xchg
mov
lret
push
and
ffree
xchg
mov
sub
jnp
fs
jb
ljmp
xchg
jecxz
push
adc
xchg
mov
jb
notl
stc
push
pop
pop
cmpb
xchg
out
cmp
cmpsb
lret
add
xchg
call
popf
lcall
loopne
mov
jl
dec
add
mov
cld
leave
enter
sti
inc
xchg
push
dec
and
mov
xchg
cmp
stos
inc
push
pop
pop
fwait
push
ret
enter
test
aas
sub
mov
inc
xchg
clc
jg
sahf
push
sti
iret
addr16
mov
mov
sub
or
lcall
out
or
adc
mov
insl
int
sbb
sbb
mov
pop
add
mov
mov
mov
inc
cmp
mov
jle
push
mov
pop
in
cmc
daa
in
repz
cmp
test
fsubs
in
xor
scas
or
jb
es
inc
mov
ficoml
and
div
neg
lea
inc
out
lock
iret
cmp
ja
shll
test
outsb
insb
cmp
pop
lods
mov
push
or
sub
jg
cmp
mov
mov
movl
jmp
jns
jecxz
mov
das
fildl
and
out
sub
das
xchg
cltd
xor
fucomp
fstpt
xor
push
mov
adc
gs
sub
fistps
dec
xchg
mov
fwait
enter
out
ret
xchg
add
adc
stos
std
xor
mov
test
cltd
push
fisubrs
lahf
imul
push
xchg
and
fistl
sbb
repnz
jnp
jb
sub
mov
dec
xchg
popa
push
xchg
ja
cmp
sti
into
push
fisttpl
adc
pop
inc
push
cwtl
rorb
mov
mov
decl
inc
mov
adc
rorb
mov
fistpl
test
aam
iret
add
cmp
in
xchg
xlat
test
mov
jo
xchg
in
aas
mov
mov
test
push
data16
dec
mov
fmul
js
ret
popf
push
ljmp
iret
push
test
dec
xchg
stc
mov
push
jmp
inc
or
js
cmp
hlt
enter
add
fwait
mov
repz
sbb
sub
adc
ficoml
lea
mov
js
pop
or
test
filds
jmp
aad
fstpt
popa
push
fsubs
clc
cltd
into
xchg
ror
sub
push
aaa
mov
dec
stc
mov
das
xor
jnp
popf
push
cld
xchg
pop
mov
push
xor
add
jecxz
sahf
aam
loopne
leave
aaa
mov
adc
lret
loopne
adc
xchg
sub
popa
int
out
pop
es
mov
fcmovnb
rorl
push
out
ja
cli
add
mov
xchg
js
or
mov
shlb
mov
xchg
mov
cmp
jbe
push
xlat
aaa
fisttpl
inc
lock
pop
sbb
arpl
subl
dec
inc
incl
fcmove
push
cmpsb
inc
pop
shrb
in
and
in
inc
xchg
shlb
inc
push
xchg
stc
push
mov
popa
mov
jbe
lds
lahf
sub
sub
pop
int
repz
sbb
mov
les
lahf
cmp
iret
inc
adc
addr16
push
add
fsubrl
xchg
fnsave
roll
cld
test
movntq
sbb
test
mov
push
idivb
shl
xchg
inc
int
lahf
dec
or
push
sahf
sbb
sbb
dec
cmpsb
push
mov
pop
push
test
ss
fnstcw
push
jp,pn
dec
lcall
data16
scas
nop
or
mov
add
in
and
pop
xchg
roll
mov
sahf
fstp
loop
rclb
lods
ret
mov
sbb
fisttps
pop
addl
cmp
shlb
xchg
stos
mov
jecxz
xor
push
pop
pushf
adc
popa
cmpsb
xchg
idivl
jge
push
enter
ret
push
inc
sbb
lret
call
xlat
iret
dec
xchg
cs
loop
adc
jbe
mov
rcrl
fistpl
pop
jmp
iret
jp
jnp
scas
jns
incl
in
mov
cmp
incb
rcr
hlt
fcompl
into
adc
out
icebp
test
fcomps
iret
xchg
aas
adc
into
sti
rolb
jg
dec
sbb
shll
vmread
add
and
and
mov
xchg
xlat
xor
xor
inc
cwtl
sarl
fwait
test
cmp
jmp
into
lds
inc
xor
dec
inc
add
add
sub
cmp
inc
movsb
enter
mov
cltd
adcb
or
push
jb
dec
lahf
repz
ror
pop
cmp
pop
loope
xor
test
sti
adc
xchg
xor
in
mov
mov
adc
mov
cmpsl
stc
mov
inc
lods
and
mov
fbld
dec
pop
inc
jle
mov
and
xchg
cli
fldt
ret
icebp
jne
iret
aam
mov
bound
inc
xchg
jl
mov
lret
mov
mov
mov
aam
cmp
sub
fnsave
xor
call
jl
aaa
jo
mov
daa
adc
xchg
lds
fistpl
shl
pop
push
in
jmp
xor
roll
pushf
jle
push
push
push
push
adc
push
insl
mov
sbb
xchg
lahf
xchg
insb
xchg
popf
push
in
mov
ja
pop
ret
xor
inc
sbb
adc
outsl
iret
sub
dec
add
adc
mov
sar
lahf
cmpsl
fcoml
pop
loopne
pushf
fxch
neg
adc
imul
aaa
mov
or
xchg
xchg
ror
imul
jg
push
loopne
imul
sbb
adc
in
inc
lds
mov
xor
mov
cmp
sub
je
clc
or
mov
mov
pop
xor
in
in
pop
pop
inc
mov
mov
in
std
cltd
jo
pop
and
fisttpl
outsb
jmp
out
mov
dec
out
adcl
push
mov
pop
test
imul
movsb
mov
fistl
xchg
jle
pop
into
fcomps
addr16
mov
inc
aad
in
stos
cmpsl
mov
les
jg
cmp
cmpsl
adc
ds
test
ret
add
mov
decl
or
sbb
pop
pop
iret
hlt
xor
xlat
push
cld
into
mov
inc
xor
mov
and
xchg
xor
inc
add
in
jmp
pop
and
mov
test
cmp
push
test
iret
imul
test
xchg
adcb
mov
mov
dec
push
dec
add
cmp
or
and
adc
fwait
leave
push
mov
fmull
xor
shll
ljmp
adc
jbe
test
jns
and
rol
push
dec
pop
mov
jo
loope
pop
dec
xchg
mulps
jp
cli
inc
xchg
jnp
push
push
jbe
mov
in
ds
xchg
ljmp
mov
jb
aas
subl
or
in
aad
roll
mov
sbb
pop
mov
jo
push
or
test
or
sub
mov
pop
iret
inc
aaa
pop
mov
xchg
rep
or
cwtl
xchg
popf
negl
xlat
aam
xchg
fdivr
loope
dec
inc
clc
jecxz
outsl
cmp
out
xlat
mov
mov
pop
mov
out
pop
clc
xor
fistl
movsb
xor
pop
subl
push
inc
out
into
sub
gs
cwtl
icebp
mov
ljmp
xchg
mov
divl
xor
mov
or
lock
mov
out
lods
out
xor
call
add
xchg
add
dec
xor
and
daa
push
orb
arpl
notl
jb
popa
sbb
xchg
lret
repnz
or
jge
mov
xchg
popf
xchg
add
aam
stos
fidivrl
mov
pop
fcmovnbe
lea
adc
jg
xchg
dec
pushf
adc
dec
add
sub
loope
push
sbbb
iret
sub
outsb
lahf
xchg
push
aaa
fsubrl
xor
adc
test
insl
fs
adc
xor
mov
mov
pop
adc
sbb
push
add
and
mov
pop
jecxz
mov
sbb
add
ja
xchg
xchg
loopne
int3
sarl
and
mov
cs
hlt
xchg
bswap
sbb
push
sub
inc
or
test
data16
outsl
aaa
int3
loope
adc
cli
jle
nop
xchg
adc
add
xchg
sahf
jnp
je
xor
ficoml
inc
dec
push
mov
sub
xchg
push
jne
lea
xor
mov
popl
mov
sti
nop
mov
stc
mov
jmp
add
cmc
pusha
xchg
mov
and
jb
aas
push
add
fldl
dec
jg
dec
or
fisubl
and
cmp
jns
scas
ljmp
iret
mov
sub
xchg
lret
fistps
mov
mov
fxtract
sub
iret
testl
sbb
hlt
jno
or
sarb
xchg
movq
insb
xchg
int3
in
rcr
or
cwtl
jo
enter
fldl
cmp
out
and
arpl
insb
push
call
and
shlb
fucomi
lock
jmp
fnstcw
dec
jb
mov
jae
cmp
cs
xchg
pop
jl
xor
cmp
mov
jnp
es
iret
outsb
add
adc
mov
fildl
scas
mov
push
fcmovnb
into
das
out
sbb
in
or
adc
lcall
bound
xchg
popa
sub
fwait
imul
pop
mov
mov
push
adc
fldt
or
cmp
imul
cld
cmp
ljmp
xchg
cmp
cmp
jb
mov
jp
std
jmp
rcl
pop
shl
repnz
enter
cli
in
test
sbb
cltd
and
push
lahf
daa
fldt
repnz
fucompp
cmpsl
ret
mov
cmp
int3
mov
dec
roll
lahf
cmc
scas
cmp
adc
ds
icebp
push
sbb
sbb
push
enter
mov
int3
mov
mov
push
test
cltd
lahf
jg
icebp
mov
mov
mov
mov
xor
fsub
jg
shll
ret
sti
jns
scas
pop
iret
sbb
rorb
sahf
xchg
push
pop
push
inc
xchg
in
subl
repnz
sub
or
jp
call
test
jb
lods
adc
jge
leave
lcall
test
xchg
lea
imul
xor
fidivl
adc
and
or
hlt
push
arpl
nop
in
movsl
ja
js
lods
sbb
rol
and
xchg
out
jns
ss
jl
push
fisttpl
call
lret
dec
mov
or
test
in
std
sub
fbstp
push
pop
sahf
push
mov
mov
cmp
mov
aas
xor
dec
test
stos
push
xchg
push
dec
pushf
cmpl
mov
jmp
stos
mov
iret
stos
std
xlat
out
xor
test
mov
out
xchg
or
cld
ljmp
xchg
insb
add
push
jbe
add
xchg
aam
jbe
adc
call
outsb
inc
add
clc
fcoml
add
xor
hlt
sub
inc
xchg
lret
xchg
cmp
mov
dec
cld
inc
rclb
adcl
in
out
lds
dec
ror
inc
fiadds
mov
loop
lea
pop
mov
or
pop
sbb
pop
popa
push
mov
test
stos
mov
add
call
dec
xchg
mov
add
cmp
loop
add
sti
aaa
and
mov
sub
sub
rol
dec
dec
stos
cmp
pop
aam
and
xchg
fisttpl
daa
xchg
jecxz
imul
push
cmp
dec
fstpt
fs
pop
push
xchg
xchg
rol
adc
inc
pop
xor
fstps
dec
fbstp
ja
cltd
cld
jnp
mov
pop
adc
xchg
xchg
mov
mov
mov
xor
sbb
or
sub
xchg
mov
push
cs
add
mov
or
fpatan
ficoml
mov
mov
test
aam
mov
adc
jge
pushf
dec
iret
loopne
xchg
jecxz
or
iret
fwait
test
dec
aaa
inc
or
iret
pop
push
and
cmovo
scas
sub
xchg
movsb
adc
push
pop
loop
pop
leave
icebp
sbb
sbb
mov
push
imul
test
dec
cmc
into
mov
sbb
and
dec
xchg
mov
mov
adc
lds
push
nop
pop
ret
pop
iret
int3
ss
pop
insb
arpl
sub
cltd
aad
push
pop
mov
into
repz
inc
lods
push
add
adc
push
push
dec
js
ja
pop
mov
add
push
fisubs
xchg
in
repz
add
shll
aad
cmpsl
aas
rcr
int
movsl
push
leave
or
or
lds
mov
fldl
int3
inc
add
mov
pop
sbb
shlb
out
inc
xchg
push
into
dec
xor
lock
or
xchg
gs
jb
or
mov
inc
jno
iret
daa
data16
pop
cltd
scas
dec
shlb
test
aad
cmp
std
leave
add
test
push
sub
dec
xchg
inc
fstps
and
neg
movsl
mov
xchg
lcall
outsb
or
push
lods
sub
xor
call
ret
dec
dec
inc
dec
je
aas
mov
cli
iret
dec
push
mov
sbb
sbb
dec
jle
into
inc
mov
and
jns
xchg
add
mov
scas
inc
xor
and
scas
mulb
jge
shll
iret
xchg
push
mov
daa
pop
ja
jnp
movsl
fs
leave
in
aad
es
ja
jbe
xchg
inc
lods
addr16
stos
movb
sub
fsubrs
mov
rcll
sahf
mov
xchg
ror
or
sbb
imul
mov
jmp
divl
lcall
mov
js
mov
jae
dec
int
sahf
jns
adc
pusha
adc
rcll
xor
scas
or
xchg
mov
add
pop
sub
and
dec
out
in
dec
dec
fldt
jle
push
and
push
lret
jb
pop
aam
rolb
out
xor
stc
xor
pop
xchg
inc
pop
ja
dec
out
ret
mov
jns
es
test
add
add
pop
jmp
dec
pop
xchg
stc
jg,pn
loope
xchg
hlt
fwait
sub
mov
sbb
in
and
addl
xchg
mov
sti
cmpsl
lret
fistl
push
xor
mov
sti
mov
jns
xchg
pop
or
sbb
sub
subb
xchg
test
loop
sarl
mov
shlb
jnp
cmpsl
and
jbe
fwait
xchg
shl
adc
xchg
fbstp
jbe
mov
aam
bound
xor
mov
repz
and
mov
pop
mov
xor
adc
bound
jl
inc
imul
pop
pop
dec
sbb
lret
fildl
and
add
push
imul
mov
cmovs
pop
sub
iret
mov
iret
xlat
dec
sahf
loope
sbb
xchg
int
pusha
ja
stc
popa
adc
add
rorb
mov
cmp
enter
add
addl
sarb
cmp
mov
xchg
push
xchg
rcrl
or
fimull
test
pop
test
aam
dec
add
test
xchg
add
jno
xchg
or
sub
rcl
adc
adc
adc
cmp
mov
pop
mov
dec
loope
mov
jg
dec
mov
aam
addr16
jl
into
ss
cwtl
or
push
dec
ror
iret
repz
inc
lret
lcall
jp
sub
rcrb
iret
dec
insb
fcoml
shrb
xor
sti
mov
dec
push
iret
mov
data16
add
pop
movsb
cmp
jge
les
iret
fidivrs
loopne
inc
sbbb
jae
sub
shl
call
data16
xor
mov
xor
iret
jl
out
cmp
iret
adc
inc
out
sub
das
aas
imul
icebp
mov
int3
je
and
ds
les
add
ja
in
addb
jno
sub
ret
mov
push
mov
inc
fisttpl
sub
enter
in
stos
inc
iret
add
cmp
dec
and
movsl
outsl
into
jbe
lret
dec
jno
dec
aas
mov
out
jo
bound
cmp
sbb
outsl
xchg
mov
cmp
sub
mov
xchg
push
push
clc
mov
sbb
fcoms
mov
mov
adc
into
je
loope
stos
and
dec
mov
inc
cmp
inc
xor
and
cld
xchg
rcl
push
dec
xchg
push
test
mov
mov
pop
lea
mov
lcall
xchg
xor
test
movsl
rcr
das
xlat
orb
cmp
fsubl
xchg
push
push
fistpll
jb
imull
dec
adc
iret
popf
imul
sahf
jae
xorl
adc
scas
push
bound
lds
xor
ret
lds
pushf
xchg
rorl
dec
dec
pop
inc
aas
shl
mov
mov
js
jg
pop
jge
push
notl
mov
mov
hlt
cmovns
cmp
loope
xchg
enter
jne
aad
fisubrl
jns
fwait
in
mov
sbb
mov
js
sub
scas
sbb
mov
js
pop
je
pushl
test
pop
and
ffreep
outsl
xor
mov
scas
jl
lock
xor
test
inc
cwtl
jb
mov
insl
cli
push
cltd
faddp
jmp
jp
xchg
test
inc
out
jecxz
pop
sahf
lds
cmp
fcoms
popa
sbb
xchg
jo
xor
stc
fs
js
movsb
or
xchg
dec
fstpt
test
xor
sarl
nop
and
cltd
pop
mov
pop
gs
lods
adc
xchg
lahf
mov
iret
std
int3
mov
cli
mov
and
cmp
jle
mov
mov
cltd
inc
dec
rorb
cmpsb
call
add
js
or
test
repnz
sbb
std
inc
ss
nop
lret
sbbl
push
dec
into
imul
and
sub
pop
fldl
lret
sub
and
pop
and
xchg
adc
mov
xor
sbb
test
dec
sub
inc
xchg
repz
outsl
xchg
and
ss
xchg
scas
ss
cmp
notl
inc
xchg
iret
test
sbb
imul
aas
fcmovne
push
cld
test
cmc
cwtl
repnz
es
cmpsl
arpl
iret
mov
push
lock
xchg
sbb
lods
dec
cmc
xchg
jp
adc
pop
inc
jns
movsb
lds
je
mov
cmpsb
pop
scas
loopne
mov
dec
iret
mov
jg
xchg
or
cltd
ss
shl
leave
and
sbb
clc
fiaddl
shll
pop
andb
xlat
pop
int
cmp
daa
out
push
adc
xor
mov
test
test
pop
jbe
jle
sbbl
mov
push
push
jnp
xchg
pop
int3
out
lock
and
or
jl
call
mov
in
lods
rep
mov
pusha
sbb
fistpl
imull
mov
or
push
pop
scas
mov
mov
jmp
cmc
pusha
pushf
and
xlat
and
sbb
js
dec
cmp
out
cmp
lahf
leave
daa
leave
pop
add
mov
sub
push
xchg
aad
mov
and
xchg
outsl
test
dec
sahf
outsl
adc
ror
shll
out
in
xchg
in
jb
sarb
test
mov
mov
fs
mov
jae
out
cltd
jecxz
iret
out
test
testb
xchg
addl
or
int
test
ret
notl
fcomi
lods
mov
mov
in
rcrl
fdivs
data16
dec
dec
scas
iret
mov
js
iret
mov
mov
test
cmpb
jo
pop
dec
xchg
lock
lcall
mov
inc
fcmove
xchg
mov
iret
subl
int3
jp
pop
push
lds
jno
loop
mov
mov
jb
mov
insl
ljmp
pushf
loope
dec
lds
cmp
fnstsw
stc
test
mov
bound
xor
mov
cwtl
and
cmp
mov
mov
add
pop
int3
xchg
ja
lea
aam
or
fistpl
dec
mov
mov
ljmp
push
add
in
fsts
xchg
cmpsb
jp
dec
bound
jge
imul
pop
cld
into
xor
mov
jge
fcomps
in
movsl
lahf
stos
addb
xchg
lea
lret
lods
or
add
inc
dec
pop
pusha
sbb
fwait
popa
das
xchg
mov
jp
out
fnstenv
pop
fxch
mov
repnz
out
mulps
repnz
xchg
jns
imull
pusha
sub
sti
adc
shll
mov
xchg
mov
test
inc
adcb
nop
roll
push
adc
xchg
inc
mov
data16
xor
lahf
mov
outsl
push
fadd
sub
or
jmp
cmp
std
das
cmp
dec
pusha
das
jnp
xor
dec
daa
mov
stc
scas
shll
xchg
push
fisttps
orb
int3
sub
xchg
push
movsb
sub
mov
push
iret
arpl
sub
les
test
cmp
cmp
push
dec
les
pcmpgtw
push
and
vmread
scas
rorl
into
pop
mov
and
xor
test
pop
jne
inc
fdivs
loopne
inc
jbe
add
cwtl
stos
daa
push
shlb
cmp
ja
jmp
fwait
mov
popa
cmc
rclb
pop
cmp
lock
xchg
rorl
aas
jecxz
pop
enter
inc
or
ja
pop
sub
and
div
js
int
dec
pop
add
pop
and
pop
mov
mov
jne
lock
int3
in
mov
inc
or
jmp
mov
adc
imul
or
xchg
loop
adc
jnp
icebp
imul
jns
mov
xchg
cmp
pop
jnp
lret
shll
es
sbb
lret
xchg
jo
sub
repz
or
mov
add
lahf
jmp
iret
test
adc
xchg
into
push
lret
cli
cs
enter
outsb
ret
inc
int3
lods
sbbl
sbb
rorl
stc
nop
cmpsb
mov
stos
out
aas
adc
insb
push
test
pop
mov
sbb
test
repz
jo
pop
mov
fcomps
sbb
fildl
lcall
fstpt
sti
mov
ret
cmp
sbb
inc
add
xchg
aas
sbb
shlb
aam
fcompl
lods
lcall
adc
mov
lods
and
cmpsl
xchg
into
xchg
jb
lock
scas
divb
incl
sub
xchg
int3
xchg
xchg
repz
xchg
je
sub
rorl
mov
jge
push
inc
mov
imul
clc
cmp
xor
adc
fildl
insb
lods
test
mov
leave
iret
mov
jns
adc
sub
and
xchg
mov
popa
or
fstpt
stos
mov
mov
adc
jnp
cwtl
ja
xchg
push
xchg
sti
push
push
sar
outsl
ficoml
sti
repz
rcrb
sbb
mov
leave
fidivl
pop
adc
rcr
lret
jmp
je
pop
gs
call
mov
test
xchg
test
xchg
mov
sub
gs
ja
sbb
hlt
jecxz
sbb
xchg
add
adcl
out
push
pop
adc
add
dec
inc
testl
and
pop
inc
xchg
lcall
hlt
adc
mov
pop
xchg
incb
mov
les
imul
in
fldt
pop
xchg
mov
aam
popa
jp
cli
mov
mov
arpl
imul
or
xor
test
insb
or
daa
lret
jae
fadds
dec
loopne
mov
js,pt
xchg
inc
xchg
negl
mov
ret
cmc
nop
gs
aaa
mov
mov
dec
inc
je
jle
repz
das
pop
insl
mov
rclb
and
mov
je
mov
sti
push
sete
sbb
dec
pop
mov
xchg
mov
push
xchg
stc
cmp
cmp
into
sbb
jp
mov
scas
jo
xchg
add
cmp
fbld
testl
xchg
arpl
cld
mov
mov
test
fst
mov
clc
xor
out
pop
mov
int
clc
add
das
jmp
xchg
mov
dec
lret
fucomi
cmp
cmp
xchg
test
fcmovnu
xor
mov
sbb
hlt
cmp
into
push
clc
shl
mov
scas
jbe
adc
or
mov
xor
sub
adc
outsb
ja
mov
test
fstpl
arpl
cmp
and
icebp
rcr
jecxz
ja
ds
lea
cmp
mov
int3
jno
scas
iret
or
mov
pop
test
lahf
or
loope
mov
iret
add
dec
mov
jp
imul
mov
shlb
insl
lea
lds
daa
ror
fstpt
xorl
out
lcall
into
inc
mov
ljmp
fidivl
xchg
add
add
cmp
filds
pop
hlt
add
push
pop
in
xchg
sbbl
cmpsl
xor
pop
shrl
test
sub
sbb
pop
fdivr
and
adc
sbb
mov
and
std
out
push
xorb
testl
mov
aad
and
lods
into
cwtl
movsb
data16
adc
mov
iret
inc
adc
int3
js
jb
es
pusha
sahf
xchg
push
pusha
test
fistps
or
repnz
xchg
pop
nop
imul
push
mov
test
out
xor
js
daa
fcmovne
cmp
inc
xchg
sub
push
xchg
outsl
rcr
std
jb
mov
mov
sti
sbb
popf
ss
push
fs
jl
insl
mov
mov
test
sbb
repnz
shlb
icebp
mov
pop
int
ret
mov
lahf
mov
xchg
jb
pusha
dec
gs
dec
pop
leave
stos
insb
pop
and
iret
jge
stos
insb
sbb
repnz
test
clc
fldcw
cmpl
loop
mov
xlat
aaa
push
iret
xchg
ret
mov
xor
push
scas
or
mov
call
xlat
insb
mov
cltd
pusha
push
mov
pusha
inc
je
rorl
call
push
inc
iret
cmpsl
aam
xor
lea
cmp
push
daa
push
jle
mov
in
pop
xchg
mov
fstpt
dec
mov
out
into
shll
orl
and
fwait
or
mov
mull
cmp
enter
xor
xchg
mov
adc
int3
fstpt
fucomp
jns
ss
mov
mov
dec
ret
fcom
shrb
inc
lahf
into
push
jae
sub
inc
pop
sbb
insl
push
add
mov
out
xchg
stc
ret
loope
aam
popf
xchg
sarb
mov
xor
in
out
mov
mov
fstpt
lock
iret
mov
or
jp
scas
jnp
add
call
in
xchg
movsl
mov
jg
jb
mov
adc
aas
dec
out
fstpl
sarb
xchg
out
mov
hlt
or
push
test
cmp
stos
gs
cmp
aam
fdivrl
sbb
es
lods
stos
jmp
int3
iret
jns
lock
mov
enter
mov
xor
xchg
repnz
xor
dec
sahf
fadd
adc
dec
jecxz,pn
lcall
lahf
lock
or
pop
stos
jge
add
fisttps
ss
mov
in
xchg
sub
jnp
xchg
xchg
popa
mov
inc
mov
xchg
dec
mov
and
xor
fsts
mov
js
xchg
incl
movsl
js
jmp
xchg
fmull
cmp
jg
mov
rcrl
jnp
mov
or
adc
int3
iret
xlat
repz
fiadds
movsb
stc
adc
xchg
cs
dec
push
loop
dec
rcr
dec
rclb
mov
fists
mov
paddq
in
es
out
jecxz
xchg
shrl
push
enter
fcmovne
loope
dec
cltd
mov
cltd
xor
iret
xchg
or
mov
mov
rcr
out
in
int
rclb
cmp
pop
xor
das
lcall
mov
and
push
leave
dec
mov
stc
mov
xchg
jmp
mov
ret
clc
fimuls
push
ds
movsb
xchg
fsts
sub
imul
xor
adc
iret
insb
shl
lret
jmp
data16
js
std
data16
mov
cmp
out
repnz
nop
xor
cs
push
gs
add
fsubs
mov
cmp
cltd
stos
and
pop
test
test
xor
fisttpl
push
jge
pop
jns
jo
or
adc
mov
sbb
pop
sub
add
and
xchg
lret
inc
pop
sbb
xchg
outsb
and
cmp
pop
sub
cmc
sbb
add
iret
and
loop
jo
ret
lds
andb
stos
or
push
int
mov
jnp
orb
cmp
insb
into
dec
in
into
pop
inc
adc
pop
xchg
outsb
push
xchg
mov
cltd
fcoml
lods
or
inc
jg
pop
cli
test
mov
in
cmpsb
data16
mov
in
xchg
pushf
std
and
push
or
mov
push
fcompl
lods
lret
fwait
cmc
sbb
icebp
fs
mov
cs
jmp
xchg
loop
adc
rorb
jb
inc
mov
pop
popf
iret
mov
out
push
xchg
cltd
add
xchg
xchg
push
pop
ficoms
adc
out
dec
xchg
cli
cmp
cs
cli
les
inc
addr16
rcll
lock
mov
cmp
jae
xchg
subl
adc
test
xor
insl
cmc
ficomps
mov
inc
lcall
insb
or
cmp
in
cltd
push
pushf
lds
incl
lds
mov
pop
cmp
pop
dec
leave
adc
aas
int3
subl
rclb
out
cltd
fldt
lcall
iret
enter
jbe
fsts
push
mov
jo
mov
push
or
push
and
push
mov
popa
pop
lea
or
repz
fstpt
sub
jg
lahf
sahf
push
sti
and
dec
es
inc
jmp
mov
mov
mov
xchg
mov
in
push
adc
fcmovnb
mov
xchg
xchg
jnp
pop
mov
sahf
cltd
clc
pop
cmpsl
popf
fistl
lret
cmpsb
das
loope
sbb
cmc
or
sahf
in
and
into
mov
loopne
movsl
pushf
scas
mov
cmp
and
testb
fdivrl
popl
iret
push
ret
ss
xor
test
adc
movb
mov
or
push
add
add
mov
std
xor
inc
aam
dec
xor
hlt
sub
and
xchg
imul
adc
nop
inc
mov
iret
fsubrp
adc
subb
mov
decb
sub
pushf
test
std
dec
lock
or
mov
cmpxchg
xchg
test
sub
sub
jecxz
ss
pop
xchg
loopne
push
ficoms
jb
iret
stos
aam
pusha
pop
cli
or
pop
inc
xor
out
pop
repz
imul
xchg
xor
mov
cmp
push
push
or
hlt
jl
out
je
dec
xchg
xor
lock
cmpsl
add
mov
nop
arpl
notb
mov
jge
js
pop
mov
aad
repz
cmp
push
jmp
mov
mov
fistpl
jnp
in
adc
sbb
and
je
mov
test
rcrl
movsb
in
insl
cmpsb
insb
xor
jae
fmuls
xor
stc
loop
sub
xchg
inc
ja
leave
dec
dec
sbb
sub
imul
js
cs
inc
mov
iret
mov
xor
test
hlt
outsb
push
mov
enter
jb
arpl
loope
adc
sbbb
inc
add
cld
mov
mov
cli
stc
sbb
imulb
push
psubusb
call
mov
mov
inc
ficoms
push
fs
fcmovu
and
mov
pop
jge
xchg
and
sbb
mov
daa
addr16
mov
xchg
icebp
bound
pop
pop
inc
add
std
push
xchg
mov
mov
xor
mov
loop
mov
adc
xor
dec
int
mov
addr16
xchg
jmp
leave
nop
out
iret
fistl
inc
clc
and
ss
and
inc
mov
push
int3
bound
lcall
jg
repz
inc
inc
add
push
fisttpll
jle
out
mov
repnz
jecxz
pop
push
test
push
jp
push
in
fcmovu
je
lods
sub
jp
cs
ficoml
repnz
enter
sti
loope
int
jl
fcmovnu
jmp
stos
mov
xchg
addps
xor
mov
pop
fcmovnb
fcoms
pop
mov
nop
int3
sbb
call
clc
mulb
not
insl
faddl
scas
sub
lds
ret
sbb
xor
rclb
mov
pop
roll
mov
cmpsb
push
mov
xor
push
out
int
xchg
mov
repz
jae
fdivrp
cmp
sete
jmp
mov
cli
movsl
mov
test
mov
lcall
fcmovnb
xor
int3
sbb
inc
cmp
dec
jne
leave
inc
adc
cmp
xchg
es
sti
and
gs
xchg
mov
mov
add
jbe
mov
add
adc
mov
xchg
test
mov
xor
fsts
mov
sub
jecxz
fisubrs
xchg
stc
je
test
lcall
xchg
jbe
aam
pop
out
add
sub
in
and
push
icebp
scas
adc
iret
mov
cmpsb
cmp
ja
fdivs
xor
sbb
pop
sub
into
stc
xchg
ret
jecxz
xchg
jg
cmp
sbb
loopne
lret
les
and
insl
fmul
mov
icebp
xchg
mov
pop
es
rcr
cmpsl
sahf
test
outsl
push
jl
or
fistpl
das
or
inc
data16
cmp
jae
mov
fisubl
mov
shll
iret
mov
push
fcomps
scas
cmp
push
das
out
out
aas
cmpb
sbb
fcomi
or
sub
jo
mov
repz
xor
enter
daa
and
mov
jmp
stos
jl
jl
cwtl
data16
repz
rcrb
stos
add
sti
fiadds
cli
in
into
dec
cli
jl
mov
push
or
rcrb
pop
mov
xchg
je
jl
nop
xchg
jae
xchg
pushf
or
push
ja
sbb
fdivs
test
pop
xchg
arpl
mov
push
repz
iret
or
leave
sbb
push
enter
into
arpl
push
imul
sbb
cmc
push
adc
ja
adc
add
gs
xchg
push
in
out
popf
xchg
cmp
pop
xor
ret
pop
movsb
iret
loopne
scas
inc
imul
cmpsb
pop
sahf
popf
push
xchg
ret
xchg
hlt
into
bound
cmp
jecxz
sub
inc
push
push
jae
outsl
inc
out
iret
jp
pop
lret
mov
clc
jg
bound
xchg
sti
es
inc
enter
stos
jl
and
push
xchg
mov
jle
push
and
inc
xchg
mov
sti
test
xchg
push
out
je
daa
xchg
sbb
cmp
pushf
jecxz
push
int3
mov
or
jp
mov
adc
mov
sub
test
fidivrl
dec
sub
sub
dec
call
sub
xchg
repnz
iret
nop
pushf
mov
repz
shr
pushf
inc
push
mov
sub
adc
lods
rcrl
cmc
int
mov
mov
cmpsb
insl
lods
pop
and
push
cld
stc
out
mov
sbb
push
shr
ss
dec
imul
push
pop
in
jp
mov
xchg
xchg
leave
push
jg
in
pop
cs
cli
inc
inc
mov
outsb
cmpsl
loope
orl
iret
adc
sbb
mov
mov
icebp
mov
push
xchg
dec
pop
test
add
lods
sub
xchg
fldt
scas
out
pop
mov
stc
cmp
mov
adc
fstpl
add
mov
cmp
push
dec
inc
int3
and
mov
fdivr
dec
xchg
xchg
dec
pushf
iret
cli
push
add
stc
fwait
ljmp
test
pop
push
push
xchg
fld
ss
jns
xchg
in
adc
adc
cli
test
pop
out
test
or
popa
xchg
call
scas
out
fisubl
inc
mov
seto
test
xchg
lcall
aas
mov
iret
shrl
lret
xchg
loope
movsb
out
mov
inc
mov
xchg
pusha
inc
sbb
xchg
xor
insl
jno
jecxz
enter
pop
and
pop
out
dec
mov
xchg
test
leave
lods
inc
and
inc
das
into
mov
lods
lahf
repz
ret
pop
xor
jbe
mov
in
mov
jp
fidivrl
cmp
inc
and
xchg
mov
inc
das
lock
out
adc
pop
addr16
lock
jb
sbb
lock
sbb
jbe
iret
sbb
sub
movsb
dec
fsubl
sub
test
cltd
addr16
int3
and
xor
or
jo
sbb
mov
out
fistpl
lock
lods
xlat
iret
add
lds
dec
in
in
test
imul
cmp
in
add
cmp
jne
loop
adc
pusha
in
mov
mov
stos
mov
inc
mov
fstl
repz
dec
shll
mov
dec
push
jl
pop
adc
je
leave
fcmovnu
les
outsl
xchg
sahf
or
iret
cmpl
popa
push
in
fisttpl
mov
repz
out
imul
js
mov
test
addr16
loop
fsubrs
xchg
inc
jno
inc
push
lods
xorl
cmp
push
cmp
jecxz
xor
and
xchg
jnp
jg
sahf
stos
adc
fldt
sbb
test
fcmove
pop
inc
sub
ret
dec
push
push
dec
inc
in
dec
aas
ljmp
cmp
dec
call
push
leave
mov
push
sar
inc
test
pop
mov
push
xchg
cld
mov
aad
cli
insl
inc
out
lods
dec
or
mov
popf
dec
xor
pushf
push
push
out
mov
mov
or
fistpll
stc
jns
pushf
and
cwtl
hlt
mov
call
fsubrs
out
push
ret
mov
xchg
repnz
jb
pop
fcomp
adc
repz
imul
mov
push
mov
lock
addl
repz
push
sbb
pushl
pop
iret
cmpsl
sub
inc
bound
inc
inc
iret
insb
inc
cwtl
sub
imul
jbe
addr16
xchg
push
cmp
sub
mov
mov
iret
outsb
jo
pusha
cmp
cmp
std
sahf
cmpsl
xchg
push
pop
in
fistl
clc
imul
pushl
mov
aad
insl
push
cmpsl
push
shl
jbe
in
xchg
xchg
mov
ljmp
cmpsl
hlt
sti
movsb
xchg
or
pop
call
cld
stos
xor
jg
cli
divl
inc
popa
jecxz
nop
mov
cmc
fsts
xchg
adc
xchg
xor
data16
xor
pop
pop
in
and
pop
pop
xchg
xor
sbb
mov
in
inc
cmpsb
daa
ret
iret
stos
sahf
mov
incb
out
cmp
xchg
outsl
or
push
mov
sbb
mov
sub
data16
loope
fistl
jns
scas
jb
lea
stos
xor
shrb
jl
jp
push
xchg
push
aam
lds
insb
lods
mov
or
xchg
nop
stos
jns
ret
fldt
dec
and
sahf
pop
adc
mov
mov
mov
dec
ja
and
xchg
or
pop
add
cs
daa
mov
out
lds
loop
dec
cmp
xchg
push
rol
fcompl
push
xor
dec
stos
jmp
mov
enter
insl
test
fldl
fcmovbe
mov
dec
pop
and
mov
inc
ljmp
mov
pop
dec
les
call
ror
mov
mov
ljmp
fs
arpl
ret
xchg
push
cltd
cmpsb
into
adc
and
bound
enter
ljmp
sarl
out
and
or
outsb
stc
add
jns
mov
dec
inc
xchg
call
xchg
les
sbb
into
idivb
fistl
fwait
bound
ljmp
xchg
fmuls
cmpsl
adc
jge
push
pop
je
rcr
mov
xor
mov
test
xchg
mov
lods
xlat
push
jge
adcb
fmuls
das
fistpl
iret
dec
mov
dec
adc
fists
lods
mov
fsubr
mov
mov
or
pop
stos
mov
loopne
mov
push
sbb
jl
scas
or
repz
loop
dec
mov
dec
and
testb
orb
adc
pop
negl
mov
push
add
add
jo
in
int3
imul
inc
out
mov
fsubl
xor
jbe
rcrb
iret
push
push
cmp
adc
jmp
lock
js
cltd
iret
ss
clc
xchg
stos
jl
sahf
pop
push
mov
and
scas
sbb
fistl
out
cmp
push
cmp
lcall
xchg
nop
jecxz
jecxz
cld
mov
imull
int3
shl
dec
outsl
xorl
frstor
into
test
les
push
xchg
mov
sbb
add
fcomi
push
sub
movsl
loope
or
or
not
fs
sti
cwtl
test
add
and
stos
pop
inc
xor
pop
mov
aas
rolb
sub
mov
inc
xchg
mov
mov
sbb
inc
aad
mov
int
adc
xor
jb
xor
test
xchg
cmpsl
je
adc
xchg
repz
and
and
or
das
sub
xchg
shl
call
mov
push
in
xchg
ret
lcall
push
push
std
ljmp
or
mov
xor
dec
stc
push
in
dec
jnp
xchg
aad
lock
ficompl
cmp
sti
ret
bound
iret
fstpl
jmp
dec
inc
lret
mov
xchg
push
cmpsb
pop
adc
jmp
mov
loope
int3
adc
sub
cmp
xor
cmp
add
push
dec
sub
pop
dec
testb
inc
out
test
cs
ljmp
imul
pop
lcall
lret
jbe
pushf
fldenv
repz
adc
scas
ret
in
xor
push
je
es
shr
xor
xchg
mov
mov
mov
jle
call
add
inc
jg
movsl
out
and
sbb
mov
pop
push
in
test
push
in
lds
test
ds
xchg
loop
pop
out
sbb
xor
mov
jge
out
andps
pop
lods
ja
pop
push
test
xchg
add
std
inc
in
xor
shl
cmp
cwtl
iret
dec
sbb
adc
sub
leave
xchg
mov
mov
fwait
push
in
xchg
or
pop
ja
and
sbb
dec
iret
push
jae
imul
pop
cwtl
mov
xchg
loop
fisubs
shlb
cli
dec
imul
flds
mov
sbb
int
scas
addr16
or
lea
dec
push
nop
xchg
lds
rcll
push
inc
xchg
push
sub
nop
sub
or
adc
jne
shll
push
sbb
fcmovnu
fwait
std
xor
add
int
mov
pop
sbb
mov
xor
and
fimuls
int
rclb
jle
pop
addl
mov
cmp
loopne
addb
das
push
cltd
test
jmp
test
in
out
jl
jp
mov
push
xor
xchg
xorb
lods
xor
xchg
pop
fmuls
or
stc
xchg
lock
xchg
xchg
mov
xor
fdivrs
je
leave
cmp
mov
dec
out
pop
xchg
sbb
jle
cmp
iret
loope
push
pop
fnstenv
popa
vsqrtsd
cwtl
cld
cmp
insl
arpl
push
sbb
push
movsl
aad
xlat
sti
dec
adc
xchg
jne
jno
mov
movsl
adcl
int
mov
lret
mov
lret
dec
jno
cmp
rorb
or
or
iret
sbb
lods
repnz
imul
sub
add
in
movsl
mov
out
js
and
loopne
xor
xchg
or
dec
mov
aam
addr16
loopne
iret
daa
mov
jne
lock
cmp
push
cmc
and
into
cld
push
loope
push
dec
roll
push
add
pop
mov
lret
call
cmpsl
jg
mov
pop
fldcw
fildll
and
xchg
xchg
mov
mov
or
repz
lret
iret
pushf
outsb
add
out
jne
in
pop
aam
cmp
mov
lods
cs
xchg
cmpsb
xchg
in
cmp
and
sub
mov
mov
mov
lea
out
or
jg
data16
in
gs
sbb
push
cmp
mov
movsl
test
xchg
jecxz
fsubl
loope
rcr
cmp
lods
pop
ret
iret
jmp
aad
push
xchg
adc
outsb
jle
rcll
sbb
sub
push
dec
scas
pusha
xchg
fildl
cmp
mov
pop
lcall
pop
xchg
out
in
push
pop
and
fsubrs
mov
mov
movsb
xchg
aas
or
sub
cli
push
sbb
neg
lds
cmp
popa
dec
js
jecxz
es
fcomp
int
test
into
iret
inc
sbb
lods
js
addr16
and
or
and
enter
pop
mov
and
popf
fsts
xchg
or
les
jns
fldt
mov
xchg
shlb
test
popa
add
fisubrl
iret
pop
inc
outsb
fiaddl
ret
popf
notb
ret
fldcw
jl
adc
fnsave
insl
test
mov
outsb
gs
shl
sti
cmp
xchg
sahf
fistpl
xor
paddd
ret
and
xchg
push
insb
jo
ljmp
xor
or
enter
pusha
stos
adcl
aaa
cmc
jae
pusha
les
iret
dec
popa
stos
int3
pop
push
mov
imul
and
outsl
push
cs
add
movsb
lock
fistl
lods
mov
pop
cmp
jmp
popl
ljmp
pop
pop
bound
in
and
iret
xor
and
inc
pushf
sub
mov
pop
mov
sarl
lahf
xchg
jno
subl
dec
sbb
lahf
pop
int
fxch
push
leave
xchg
bound
bound
loop
ss
and
inc
xchg
iret
clc
sub
stos
lock
mov
icebp
je
addb
repnz
es
cmp
loop
push
push
xchg
cmp
xchg
stc
sub
mov
or
movsl
jmp
cmp
mov
sub
or
xchg
push
sub
and
inc
jl
pop
add
imul
inc
add
mov
pop
imul
jbe
aam
mov
int3
arpl
outsb
push
jno
popf
sub
repz
push
mov
mov
jne
adc
and
xchg
aaa
rclb
mov
push
aad
push
sbb
sbb
pop
mov
cmp
jae
add
loopne
jmp
mov
lcall
sub
jle
sahf
jmp
loop
fstl
sbb
sbb
jbe
mov
and
pop
rcrb
incb
sti
cwtl
dec
xor
mov
jmp
lods
dec
push
in
xchg
lea
scas
out
out
mov
int3
inc
cmp
dec
fwait
jbe
dec
add
nop
bound
sub
and
icebp
faddl
stos
enter
sub
and
fwait
push
nop
cmc
and
xchg
add
es
jge
pop
mov
pop
imul
addr16
lods
hlt
mov
fcoms
pop
stc
cmp
ja
jbe
test
adc
cmp
popa
mov
pop
test
add
xor
and
adc
out
push
cltd
mov
leave
stos
pop
dec
push
sub
arpl
xchg
insb
jle
iret
outsl
inc
pop
xchg
mov
xor
mov
fidivrl
and
imul
xchg
xor
inc
push
or
movsl
xor
fadd
scas
inc
jnp
xlat
incb
test
call
inc
xchg
iret
sbb
xchg
fcomip
out
iret
movsb
cmp
into
out
cltd
in
sti
fsubrs
insl
cli
pop
cmp
adc
notb
lods
fisttpl
imul
xor
into
in
mov
jb
loopne
movsl
xor
xor
and
int3
leave
cld
inc
lods
or
fisubl
mul
pop
les
cli
mov
cld
repz
and
mov
pop
mov
sbb
iret
mov
leave
ret
mov
ret
repz
iret
rcrl
sbb
adc
jle
mov
aas
aad
xchg
push
adc
mov
mov
repnz
jno
test
or
dec
xchg
cmp
adc
hlt
aad
xchg
cwtl
hlt
cmpsb
lret
cmp
fimull
enter
xlat
nop
stos
adc
cmpsb
sub
push
dec
cmp
mov
iret
jge
xor
mov
lcall
in
mov
adc
stos
mov
sbbl
mov
mov
int3
loope
push
test
inc
aaa
add
xor
int
jo
cmp
int3
popa
mov
rol
pop
and
mov
lea
and
mov
dec
and
xchg
sbb
lret
ficomps
mov
jg
sbb
xor
and
fs
cmp
out
jp
xchg
or
orb
sbb
nop
sahf
leave
fsts
sub
jnp
add
fldt
or
iret
xlat
lahf
push
dec
push
nop
jne
inc
jb
dec
mov
or
push
add
push
int3
cmp
sbb
repz
jnp
cltd
scas
sarb
pusha
cs
loopne
jmp
test
repz
aas
ret
iret
lds
push
sub
out
push
fldt
test
push
mov
test
inc
rol
xchg
outsb
ljmp
imul
cmp
stos
sub
lcall
mov
cmp
repnz
xchg
ret
jns
mov
dec
pop
mov
cmpsl
lcall
sahf
push
jge
iret
rcll
nop
loope
gs
lds
pop
push
iret
lahf
or
push
fiadds
iret
insl
loope
mov
dec
mov
mov
dec
mov
subl
movsl
jo
fwait
aam
sub
jno
test
ret
lock
push
divl
xchg
fldenv
iret
and
nop
pop
cmp
lds
jle
fcomps
mov
sbb
test
sbb
cltd
adc
xchg
iret
imul
mov
xchg
push
stos
andb
mov
and
add
cmp
sbb
sbb
ds
pop
adc
jmp
sahf
and
jb
push
cli
lds
int
push
and
pop
pop
sub
mov
test
out
out
flds
stos
dec
data16
adc
into
sbb
cmp
shl
and
pushf
jle
test
pop
int3
push
sbb
test
icebp
adc
xor
add
pop
sbbb
shrl
hlt
adc
add
adc
aad
adcb
iret
scas
mov
dec
fildl
push
xor
xchg
or
arpl
and
inc
in
sbbb
test
gs
inc
cmpsb
dec
in
xchg
xchg
and
cmp
sub
dec
andb
inc
int3
outsb
jmp
add
insl
mov
and
mov
cmp
xchg
cmpsl
jge
cmp
mov
dec
sub
out
mov
mov
icebp
and
and
fldenv
pop
fcomps
scas
dec
xchg
int3
cmp
pop
adc
dec
xchg
pop
cs
loopne
fnstsw
jecxz
lcall
mov
xchg
ljmp
push
jne
jne
iret
subl
mov
pop
xchg
mov
icebp
sbbl
inc
ficoml
fldcw
mov
mov
mov
push
xor
addl
dec
js
xchg
adc
pusha
push
push
pop
sbb
jge
xor
imul
clc
mov
mov
insl
pop
cs
std
mov
jl
push
loop
stc
pop
sub
lods
and
or
mov
xor
imul
sub
neg
xchg
adc
mov
xchg
orl
push
loopne
nop
pushf
inc
insb
iret
sub
mov
pop
scas
aad
mov
sbb
inc
xorl
inc
sub
cmpsb
icebp
stos
and
xchg
pop
jne
idivb
xchg
pop
mov
xlat
notl
fistl
jnp
cwtl
iret
add
xchg
sub
xor
and
mov
mov
repz
mov
cmp
out
clc
je
xchg
xor
pop
add
cs
sub
jno
or
mov
int3
je
jmp
ss
inc
pop
out
push
stc
cmp
sbb
jnp
das
cmpsl
xchg
sahf
mov
ja
mov
adc
aad
pop
sbb
add
xlat
or
iret
cs
xchg
jb
mov
mov
call
cmpsb
or
dec
repz
xchg
idivb
mov
sub
iret
adc
test
fisttpll
push
sub
push
out
movsl
mov
ret
xchg
popa
pop
ja
dec
dec
push
or
pop
sbb
gs
pop
cld
jg
xchg
or
lock
push
test
insb
xor
jmp
mov
idivl
mov
dec
loope
push
mov
or
jne
push
shr
inc
mov
cli
leave
outsl
ds
push
fcoml
test
clc
clc
push
mov
or
pop
jno
xlat
je
adc
xlat
mov
ds
iret
js
sahf
jle
cmp
and
or
cmp
mov
lcall
mov
fbld
sahf
add
add
test
aad
or
mov
dec
fstl
mov
lea
int3
fidivrs
mov
scas
jmp
test
out
mov
jecxz
cld
test
cmp
jb
rclb
push
mov
mov
dec
scas
dec
and
int
cmp
mov
xchg
pop
or
mov
pop
fldt
inc
enter
ffreep
dec
add
add
roll
test
mov
cltd
fwait
gs
stc
stos
test
jbe
xchg
mov
jg
out
lods
push
sub
out
rcr
arpl
rorl
mov
dec
dec
or
repnz
fimull
lods
adc
xchg
dec
sbb
xchg
push
leave
lahf
jnp
nop
and
shlb
pop
xchg
repz
std
sbb
xchg
dec
adc
jg
mov
movsb
test
sub
xchg
jnp
xchg
sahf
or
xlat
dec
iret
test
sbb
sub
lods
xchg
daa
xchg
inc
push
into
or
das
in
insl
dec
fwait
xchg
cmp
hlt
fdivr
scas
xchg
jnp
ret
stos
ljmp
push
pop
fdivr
pop
jge
out
into
adcb
mov
dec
test
xchg
pop
or
out
and
jmp
outsb
pusha
pop
xchg
outsl
xor
mov
jg
ficompl
mov
adc
sub
push
fiadds
adc
and
inc
ret
rolb
rcrl
mov
push
mov
fdivs
in
pop
adc
insb
pop
js
into
cwtl
jne
ror
or
lods
fistl
loopne
adc
push
mov
cmpsl
sbb
fcmovnb
mov
lds
dec
jnp
pop
les
bound
and
sub
pop
pcmpgtw
iret
jecxz
mov
stos
dec
imul
popa
into
leave
ljmp
pop
and
loope
push
cld
xchg
ds
dec
dec
jnp
nop
jle
fcmovne
dec
xor
repz
arpl
stos
and
lret
jo
test
insb
test
mov
sbb
aaa
xchg
or
pop
cmp
fisubrl
lea
arpl
adc
stc
ja
scas
or
pushl
int3
xchg
and
sahf
imul
sbb
dec
cwtl
dec
repnz
xchg
sbb
arpl
sti
insl
shll
push
hlt
cwtl
iret
lret
or
cld
xchg
test
test
xchg
xchg
fisttpl
cmp
movsl
push
les
in
mov
add
mov
test
lcall
xchg
js
adc
jns
dec
aad
popa
pop
adc
push
push
pandn
jecxz
dec
stos
stos
ss
ja
sub
xchg
mov
sub
dec
scas
lock
nop
mov
xchg
std
js
push
scas
repz
cld
xchg
fimull
xchg
xor
xor
jns
mov
cli
mov
mov
es
mov
sbb
cld
repz
jo
sbb
imul
std
or
inc
dec
ja
repnz
xor
xchg
stc
jp
xchg
iret
mov
jl
int
lahf
mov
into
in
sbb
adc
stos
ret
clc
adc
inc
mov
fstpt
and
dec
decl
lret
cmp
cmp
fdivrl
fcmovu
or
data16
out
lock
shl
push
daa
icebp
shl
sbb
xor
cmpsl
mov
mov
iret
add
mov
add
shll
sbb
push
lahf
xchg
aas
push
repz
outsb
scas
fnstcw
adc
adc
out
pop
shld
xor
sti
mov
mov
imul
clc
cmc
pop
xchg
jne
inc
xchg
jno
repnz
and
out
cmc
push
jge
pop
xor
jle
fildll
test
fists
inc
jns
test
out
pop
stos
xchg
pop
cmpb
cmpsl
lret
push
cmpsb
adc
dec
ljmp
xor
js
sysexit
dec
cli
in
fistl
jno
and
jne
iret
push
pushf
mov
xorl
inc
gs
jecxz
outsb
push
rcr
xchg
dec
js
jecxz
pop
lcall
call
test
mov
jg
js
fmull
jne
stos
mov
jne
push
dec
lods
sbb
lds
sarb
imul
iret
mov
pushf
out
pop
xchg
shrb
xchg
cmp
inc
ss
and
jb
stos
pop
xchg
add
dec
mov
pop
pop
push
mov
lahf
fs
xor
push
mov
mov
inc
mov
into
loopne
jge
mov
loope
xchg
sti
xchg
lods
sub
addr16
imul
or
xchg
cmpsb
daa
fdivrs
mov
cltd
pop
iret
data16
leave
dec
jg
lret
gs
adc
das
and
stc
loopne
notl
jl
data16
or
push
ret
std
in
and
sub
mov
fstpt
xchg
cld
cwtl
negb
mov
push
xchg
clc
pop
ss
dec
mov
dec
xor
les
pushf
pop
ret
and
mov
popf
subl
adc
mov
int
rcll
push
mov
mov
xchg
pop
inc
popf
xchg
xchg
mov
addb
add
inc
pushf
mov
cmp
inc
mov
inc
data16
and
mov
movsb
cltd
dec
xchg
not
dec
outsb
sub
cmp
push
inc
mov
push
push
and
lods
stos
ss
rcll
add
xchg
fimuls
cmp
inc
xchg
cmp
ljmp
int3
into
jbe
xchg
lret
int
mov
movsb
mov
lods
xchg
rcrb
aas
xchg
ljmp
add
test
jb
xor
jae
daa
fisubrl
or
sbb
scas
sbb
push
dec
adc
cmp
flds
fnstenv
loopne
lfs
fdivp
rorl
int3
push
aaa
mov
stc
push
and
adc
dec
dec
repz
pusha
in
into
and
je
add
dec
xchg
xchg
xor
sbb
jg
cld
push
xchg
je
lds
mov
fadds
adc
lods
jmp
mov
aaa
loope
or
icebp
cmc
icebp
push
inc
lea
adc
pop
loope
mov
sbb
pop
mov
cmc
ljmp
cmp
push
sahf
push
mov
xorb
mov
mov
adc
or
dec
sub
gs
xchg
xchg
sti
scas
dec
in
push
popl
adc
mov
xor
sbb
pop
fildl
mov
jnp
sbb
pop
inc
in
pop
movsb
inc
iret
jbe
dec
fmull
inc
iret
inc
add
loop
or
test
adc
lods
cwtl
shl
cld
push
cmp
into
incl
daa
cld
sbb
mov
out
xchg
lds
xchg
sbb
clc
and
cmp
andb
rorl
iret
jbe
push
test
ja
mov
push
fisttpll
mov
jge
push
add
gs
sti
push
mov
pushf
mov
mov
add
fstps
add
xchg
sub
xor
sbb
les
add
pop
xor
jo
insl
sbb
stc
jmp
iret
mov
cltd
shlb
test
mov
xchg
lods
lret
mov
adc
or
std
adc
out
pop
leave
decb
adc
lock
add
popf
xchg
repz
sbb
adc
adc
mov
int
call
push
cmp
adc
xor
or
add
mov
fildl
leave
test
xchg
iret
shlb
or
and
dec
jmp
xor
iret
sub
pop
inc
push
xchg
cwtl
ret
pop
ret
sbb
inc
pop
hlt
cmp
adc
fstpt
xlat
addr16
cwtl
mov
dec
pop
data16
adc
roll
xchg
push
fstl
mov
push
mov
mov
fistl
push
add
daa
push
adc
mov
push
sbb
sub
inc
add
and
push
repz
push
ds
mov
jb
sarb
sub
adc
sub
int3
nop
ds
push
sahf
outsb
ljmp
rcr
divl
add
fdivr
jne
jmp
or
xchg
cmpsl
pop
push
push
push
test
in
fs
mov
fcoms
jecxz
mov
les
push
out
sub
sub
sbb
cmp
xchg
dec
arpl
ja
les
push
fcmovne
cmp
sbb
out
iret
mov
push
mov
xchg
dec
stos
xor
and
arpl
push
inc
and
sub
test
outsb
int3
cmc
push
sbbb
xchg
add
sbb
mov
hlt
shl
ficoms
xchg
lret
out
push
stc
lret
fisttps
sbb
mov
xchg
fwait
fs
jecxz
pop
outsb
mov
into
jno
movsb
lret
pushf
hlt
imul
xchg
std
mov
jmp
ds
negl
mov
push
ror
outsl
dec
mov
push
loopne
out
scas
lahf
cmpsl
jecxz
inc
mov
mull
mov
push
lret
pop
and
rclb
or
call
adcl
mov
cltd
inc
adc
pop
data16
add
insl
add
sbb
mov
roll
mov
lods
pop
pop
iret
mov
mov
test
push
aaa
jb
popa
mov
dec
je
test
call
add
mov
xchg
push
arpl
fnsetpm(287
rclb
dec
hlt
jle
test
push
mov
test
xchg
ror
xchg
aam
insl
inc
fiaddl
and
mov
mov
test
das
pop
imul
hlt
jo
popa
aas
xchg
adc
xchg
rep
aas
mov
inc
or
push
cmp
paddsb
pop
adc
sarl
sbb
mov
pusha
sub
mov
pop
mov
aaa
outsb
pusha
or
pop
es
js
insl
push
test
movsb
cwtl
int3
iret
lods
aaa
pop
jbe
xor
push
inc
inc
loop
xor
mov
and
push
lahf
sbb
sti
jge
push
fistl
jnp
cmp
pusha
pusha
inc
iret
and
jbe
aam
das
push
pop
dec
xlat
inc
js
iret
dec
pop
xor
lods
lds
dec
pop
ds
pop
pusha
xchg
ficoml
pop
enter
hlt
jmp
mov
sub
cmp
fcmovne
jo
xor
xchg
ss
adc
sbb
push
sbb
xchg
dec
aam
es
jno
es
loope
sbb
iret
out
fcomp
loope
xchg
mov
jnp
jl
mov
or
push
fidivl
xchg
inc
fnstcw
sub
div
cmp
iret
jno
pop
jge
addb
mov
and
cmpb
fisttpl
cwtl
xchg
imul
iret
lds
jbe
pop
xor
inc
addr16
js
mov
xlat
imul
xchg
out
sahf
push
inc
add
aam
daa
and
es
out
loop
mov
pop
mov
aam
outsl
loopne
stos
mov
test
sbb
xchg
push
fs
pop
and
mov
cmp
jle
in
into
pop
xchg
mov
mov
push
ss
xor
pop
mov
xchg
xchg
fwait
iret
lock
dec
in
rcrb
dec
xor
add
ljmp
push
add
test
jmp
push
shlb
pusha
aam
cmp
push
mov
mov
mov
pop
sbb
imul
fstpl
cmp
mov
lds
iret
pop
dec
xchg
inc
fs
pop
pop
dec
and
fcompl
jg
mov
mov
adc
mov
push
or
sbb
sub
fstpt
inc
push
jmp
pushf
jbe
xor
mov
repnz
pop
in
mov
xchg
inc
push
xor
jnp
cmp
or
jae
or
jge
dec
btr
mov
fcmovnu
imul
add
aas
sub
jl
xchg
dec
stos
xchg
inc
lret
fsts
mov
sbb
push
sub
lret
and
sbb
push
inc
aam
fmull
enter
inc
dec
inc
dec
xor
out
mov
out
nop
sub
xchg
push
inc
jne
dec
mov
fmuls
inc
mov
jmp
xchg
stos
std
aaa
xchg
sbb
ljmp
jg
aas
push
mov
sub
push
pop
rcr
int
jg
leave
call
xchg
pop
fildll
xchg
test
pop
pop
or
ss
xlat
sbb
sub
fadds
add
pushf
iret
inc
fldcw
xchg
mov
fldl
stos
movsb
int3
sbb
adc
mov
dec
dec
fucomi
xorb
leave
adc
sbb
hlt
mov
push
cmp
iret
mov
insb
lds
xchg
jp
xchg
sbb
imul
rcr
out
ss
jae
or
pcmpgtd
push
test
cltd
ret
iret
push
cli
pop
pop
inc
fisubs
xchg
bound
mov
xor
das
fistpll
pop
push
sub
adc
jg
mov
sub
mov
xchg
xchg
push
je
ret
mov
xor
and
insl
pop
aas
xchg
pop
ds
xchg
pop
lret
xor
cmp
xchg
addl
aam
das
sub
fcomp
es
inc
mov
xlat
pop
es
push
rorb
loopne
sbb
xor
pushf
dec
imul
mov
sub
ja
lea
push
imul
mov
xor
cli
inc
xor
lahf
sub
adc
subb
dec
push
outsb
insb
xor
shlb
addb
ds
inc
icebp
aaa
sub
mov
cmp
xchg
xchg
and
jns
mov
pusha
adc
adc
roll
push
dec
sub
outsl
cmc
mov
repz
mov
ja
movsl
push
xchg
rcr
fidivrs
fidivs
xchg
in
sbb
mov
outsl
inc
lods
xchg
push
stc
adc
mov
push
rcrl
enter
stc
cwtl
mov
fildl
aaa
arpl
xor
fs
loope
cmp
fstpt
adcb
mov
gs
add
adc
adc
int
lcall
int
inc
popf
jb
xchg
int3
aas
and
mov
pop
stc
aaa
push
inc
jns
mov
jmp
xchg
pop
fwait
mov
jnp
nop
les
aas
add
clc
pop
xorb
flds
adc
pop
subl
sarb
mov
xchg
mov
cmpl
loop
xlat
cmpsb
sbb
pusha
adc
mov
inc
push
cmpsb
mov
leave
sub
rep
sub
fiadds
out
int
dec
jne
push
sbb
pop
sahf
xchg
adc
pop
xchg
data16
dec
jns
stc
sahf
ss
enter
or
out
movmskps
iret
int
enter
xlat
or
pop
inc
ljmp
xchg
xlat
push
les
mov
aam
pop
inc
jl
pop
es
and
loopne
mov
aam
icebp
into
repnz
sbb
xlat
jl
push
addb
das
inc
xchg
xchg
push
jnp
iret
fidivs
mov
rol
xchg
inc
sti
mov
adc
xor
cmp
imul
dec
cmp
xchg
ret
out
out
mov
xchg
xor
addb
mov
push
fisubrl
xchg
iret
cmpsl
inc
dec
or
or
nop
shll
out
cmp
into
mov
pop
test
add
jno
cmp
jg
sbb
dec
dec
jb
xchg
lcall
xor
pusha
dec
int
test
pop
sub
paddw
iret
out
jp
mov
and
xchg
xchg
dec
and
mov
jbe
dec
bound
sbb
mov
dec
mov
adc
fcompl
dec
stos
or
push
out
pusha
stos
xchg
adc
jmp
adcl
popf
test
mov
xor
cltd
jo
shll
mov
jae
lock
inc
mov
les
xchg
imul
stos
cmp
add
xchg
push
push
mov
fmuls
sbb
add
adc
cmpsl
out
js
cwtl
push
movsb
dec
mov
daa
inc
pop
adc
stc
test
sahf
popf
iret
pop
pop
inc
test
xchg
inc
pop
js
push
ljmp
ror
jo
add
ds
sub
subl
scas
aam
leave
pop
mov
fcompl
push
inc
sbb
dec
and
pop
js
pop
shl
mov
lret
push
xchg
pop
xlat
cmpsl
mov
xchg
push
test
adc
ret
push
xor
xor
dec
add
fwait
sbb
sub
clc
mov
jle
mov
jge
sbb
push
mov
pop
push
jg
aas
lret
sub
lods
out
into
scas
pushf
xchg
adc
mov
adc
cli
fcmovnb
sahf
std
mov
dec
inc
xchg
pop
lds
sbb
cmpsb
lret
sub
dec
add
jbe
sbb
xchg
or
xchg
leave
lods
xchg
mov
mov
std
in
rolb
rcr
lret
ja
xor
or
inc
jg
into
adc
add
fildl
movsb
pop
mov
iret
out
push
push
dec
faddl
xlat
adc
aam
xchg
ret
add
xor
mov
mov
cmpsb
sarb
clc
mov
cmpl
decb
loop
aad
add
add
jnp
cmpsl
iret
leave
fcmovbe
aam
xchg
sub
inc
adc
add
xchg
insl
mov
in
sbb
hlt
les
mov
roll
sbb
xchg
jg
add
mov
test
sbb
xchg
cmp
fmul
sub
xchg
add
jl
add
pop
divb
mov
aas
dec
add
push
lds
or
xchg
sub
xor
aam
dec
fcompl
out
fimuls
iret
or
pusha
xchg
or
rorl
hlt
or
sub
or
inc
arpl
mov
rcl
nop
ss
xchg
or
mov
lahf
js
cmp
xchg
scas
cmp
out
xchg
movsb
into
in
aaa
pushf
xchg
dec
dec
les
rcr
inc
imul
fstps
jne
jmp
sub
xchg
cld
inc
cs
fdivrs
add
dec
loope
js
push
popaw
mov
test
stos
stc
xchg
ret
or
xchg
das
fwait
cltd
dec
inc
xchg
popf
add
aas
mov
test
sub
mov
cwtl
nop
pusha
fcmovnu
inc
dec
sbb
add
iret
jno
fldenv
cmp
adc
test
pop
push
les
cmpsb
mov
mov
and
xorb
dec
adc
xchg
or
sub
enter
pop
je
mov
push
push
arpl
clc
dec
and
push
jno
das
mov
pop
xchg
pop
mov
and
sbb
rcl
sbb
pop
hlt
test
andb
xor
cs
pop
sub
popa
faddl
push
lahf
ret
add
inc
cmp
leave
jmp
push
repz
mov
cli
sub
push
lods
dec
ret
aam
ret
or
into
movsl
push
pop
and
hlt
addr16
ljmp
iret
insb
ror
mov
fnstcw
xchg
dec
push
xchg
iret
pop
fnstsw
ja
mov
enter
sbb
into
pop
or
stos
repz
inc
loope
test
inc
es
add
jne
and
les
aas
jl
mov
mov
data16
cmp
dec
mov
jno
jae
xchg
imul
test
test
and
dec
adc
push
jne
jns
xchg
add
sub
je
imul
jp
mov
fldt
pop
out
shll
mov
out
sbbl
xor
push
out
movsl
mov
pop
stos
shll
xlat
jnp
fildll
xchg
or
es
xor
test
lds
clc
call
push
lret
stc
xor
leave
pop
sti
add
mov
xchg
ror
test
scas
hlt
inc
fcomps
cmp
jp
xchg
push
adc
xlat
dec
int3
mov
push
cwtl
in
and
adc
jecxz
mov
lock
mov
xor
sbbb
hlt
push
test
jbe
fcmovbe
mov
push
inc
cld
adc
fcmovnb
insl
fisubl
mov
iret
sahf
xchg
in
lock
gs
rol
and
jae
push
jmp
mov
xchg
fldl
imul
cltd
xchg
dec
cwtl
dec
ret
into
dec
loopne
ds
jnp
cmpb
jnp
fisubl
iret
mov
add
sub
test
cmc
xchg
push
push
cli
aad
dec
ljmp
into
lods
jge
out
push
pop
and
scas
stos
aaa
xor
jbe
xchg
sarb
fs
fldt
pop
add
iret
or
pop
or
popf
and
pushf
sbb
dec
aaa
sti
call
cwtl
ljmp
test
mov
cmp
adc
mov
test
clc
data16
mov
into
mov
mov
lcall
daa
rcll
jge
xchg
imul
enter
sbb
test
shrl
pop
es
and
cmp
stc
adc
fildl
lods
fadds
fxch
ret
xchg
outsb
cli
mov
mov
xchg
decb
lods
jbe
cmp
adc
xchg
popa
stc
mov
lret
in
fisubs
adcb
sub
out
outsb
scas
iret
xor
fdiv
insb
and
jbe
inc
int
sahf
nop
lods
dec
push
or
pop
into
xor
test
mov
sub
xchg
out
adcl
cmpsl
mov
fdivl
sbb
std
sub
jbe
enter
xchg
xchg
insb
fdivrl
or
xor
das
sbb
mov
jno
dec
fldenv
jns
sbb
jle
dec
inc
cld
jno
xor
iret
mov
iret
cmp
stos
std
fiaddl
inc
or
shlb
inc
loop
or
xchg
xchg
push
cld
test
jge
fisubrs
cmp
out
test
xor
cmp
mov
neg
lahf
xchg
lods
sbb
popf
or
fs
xchg
mov
xchg
es
loop
jno
adc
push
cwtl
je
stos
jg
xorb
pop
mov
int
sub
scas
iret
adc
and
jge
dec
xchg
test
mov
je
incl
fsts
pop
in
stos
add
sub
mov
push
gs
sbb
aas
repz
iret
rorb
icebp
lock
test
push
fisubrs
xchg
add
mov
push
inc
movsb
fldt
das
push
scas
mov
into
movsl
xchg
call
sub
mov
mov
test
mov
inc
nop
insb
fcmovne
mov
iret
stos
jg
fldl
and
dec
mov
and
mov
xchg
xor
mov
lcall
lds
sbb
cmp
sub
push
lahf
ret
sbb
lds
cmp
push
mov
or
inc
jmp
mov
xchg
inc
repz
or
arpl
mov
addr16
lahf
dec
push
and
pusha
pop
sub
in
mov
ljmp
ss
bound
xchg
pop
subl
mov
fidivs
cmpsl
sahf
jne
push
xor
add
sub
subb
aas
jnp
test
xchg
jl
xor
das
inc
adc
iret
test
imul
dec
xchg
cmp
push
xchg
pop
out
cmp
add
xchg
jbe
xor
sub
aaa
repz
mov
push
in
into
sahf
lahf
andl
test
pop
mov
xchg
sahf
iret
mov
xor
fstp
mov
mov
xor
inc
mov
and
test
out
fildl
pop
in
int
ret
mov
jns
dec
cmpsb
rcrl
rcl
bswap
mov
or
test
sub
enter
sub
test
xor
lods
dec
test
jle
jmp
popa
cmp
cmp
loope
mov
mov
mov
dec
addr16
mov
imul
lahf
xor
fistpl
fldln2
aam
icebp
adc
test
adc
movsl
mov
aas
xchg
xchg
stc
test
xor
jmp
lcall
dec
fistl
pushf
inc
pop
iret
shr
mov
leave
sub
test
lds
mov
idivl
or
lods
xor
mov
iret
lds
mov
cmp
jnp
push
xchg
jae
xchg
pop
adcl
jp
aam
push
lret
add
or
je
lods
in
test
inc
mov
scas
jmp
sti
inc
sbb
aas
sbb
push
data16
test
pusha
adc
sub
xchg
out
push
aam
jb
mov
dec
cli
xchg
icebp
push
insb
daa
mov
sub
or
adc
inc
scas
push
fucom
sbb
into
ss
jbe
xchg
add
js
push
in
test
test
je
mov
cltd
add
int
mov
push
aam
mov
loopne
mov
aad
push
xchg
sub
xchg
jb
adc
push
push
je
dec
and
xchg
mov
cltd
outsl
sub
out
fcoml
sub
cmp
push
or
jbe
xor
mov
fwait
loop
aam
mov
test
xchg
cmpl
lret
xchg
dec
or
dec
in
iret
nop
test
sub
mulb
mov
jg
dec
das
sar
cld
mov
adc
and
stc
fwait
xchg
add
out
mov
iret
xchg
push
xchg
mov
loopne
adcb
call
cltd
stc
dec
enter
das
in
adc
push
lret
imulb
aas
outsl
test
cs
or
adc
sub
push
pop
add
xlat
xchg
lahf
iret
aad
call
adc
in
or
adc
mov
test
pop
pushf
sub
pop
dec
xchg
movsl
repz
push
sahf
push
xchg
lds
inc
and
sub
test
adc
and
cltd
sarb
mov
popf
adc
jg
xlat
mov
subb
cmpsb
mov
sbb
rcll
sbb
test
xor
or
test
cmp
lahf
and
mov
push
test
add
jns
into
fistl
cmpsb
xor
in
fimull
outsb
int
xor
dec
test
mov
outsb
dec
enter
adc
nop
call
pop
add
cs
fldt
jo
xor
push
dec
dec
fildl
int3
mov
rcrl
fwait
gs
movsb
int3
jp
rdmsr
iret
pop
cmp
mov
fsubp
filds
cli
orb
daa
pop
jp
ljmp
xchg
in
add
push
mov
js
ficoml
shll
std
not
mov
cmp
pop
cmc
jno
xorl
adc
jnp
xchg
push
dec
stc
jae
clc
neg
xchg
jecxz
cmp
and
test
aam
ss
add
mov
repz
rclb
xchg
pusha
cs
xchg
ja
cmpsb
sbb
xchg
stc
mov
sbb
push
xchg
sbb
mov
icebp
es
loope
loop
adc
xchg
pop
xchg
inc
mov
pop
out
hlt
add
adc
imulb
outsl
lea
shld
icebp
jle
pusha
fisubl
adc
sub
xor
cmpsl
push
movsb
sbb
and
rclb
iret
dec
adc
or
lcall
movsb
es
and
sub
hlt
pop
jo
adc
inc
iret
mov
or
mov
stos
jns
rol
les
cs
pop
cmp
inc
and
cwtl
sub
xchg
push
or
ja
into
or
lahf
cmp
push
lcall
jne
pop
cli
jge
shlb
fistpl
mov
imul
sbb
ss
inc
int
fistl
ss
iret
mov
lahf
xor
out
jne
or
loopne
xchg
loope
js
jns
jne
cs
push
dec
orl
fdivr
loopne
sub
inc
xchg
fwait
mov
cmp
cltd
pop
sub
ljmp
fwait
jne
movsb
movsl
test
fcmovnu
and
enter
add
sub
inc
xchg
cmpsl
test
xchg
mov
and
push
inc
stos
sub
dec
xor
pop
sbb
sti
pop
ffreep
cmp
repnz
out
scas
imul
mov
outsb
insl
mov
xchg
shl
lcall
mov
iret
dec
push
arpl
cmp
scas
test
jae
jle,pt
adc
pop
in
jne
clc
test
xchg
xchg
in
jp
push
dec
sub
add
push
and
sarl
scas
xchg
test
xor
jecxz
les
xchg
jo
push
inc
clc
xchg
nop
sarb
jecxz
mov
sub
idivl
aad
adcl
jecxz
cmp
jne
mov
xlat
stos
lahf
loopne
jecxz
rclb
fwait
rolb
movl
fcoml
add
or
inc
or
loop
ljmp
sbb
ret
jnp
andb
sbb
test
jns
icebp
lds
push
xchg
les
dec
mov
fcmovnu
and
push
xor
sahf
testb
inc
mov
cmc
int
fdivrs
fchs
mov
sbb
mov
stos
and
and
adc
out
ret
incb
push
inc
mov
loope
data16
cmp
add
xchg
push
xor
xor
jbe
dec
test
xorb
pop
push
jnp
xor
jmp
scas
test
movsb
xchg
movsb
out
into
mov
ret
test
push
jg
pop
scas
adcl
pop
pop
adc
xchg
in
jmp
add
xor
icebp
mov
in
mov
xchg
inc
fldenv
lods
push
andl
fwait
lods
pop
popa
out
adc
push
pop
lret
stc
into
out
inc
aam
inc
loopne,pt
subl
hlt
rolb
cwtl
fwait
clc
mov
lods
inc
xchg
cs
fistl
repz
fisubrs
int3
and
xlat
movsb
sub
daa
jne
xchg
and
inc
test
enter
sbb
adc
es
mull
sbb
jns
nop
add
add
fbstp
leave
je
pop
iret
mov
outsb
aam
lret
aas
adc
dec
cwtl
fiaddl
pop
cld
jecxz
ds
pop
test
es
jl
sbb
mov
lock
xor
cmp
push
idivl
insl
pop
and
adc
int
loopne
add
movsl
rorb
test
push
fists
mov
popf
add
xchg
dec
lret
xchg
jb
ret
iret
les
jno
xchg
pop
int
cmp
mov
xchg
and
adcb
in
sub
mov
jo
arpl
movsb
fs
movsl
test
lahf
lea
pop
sysenter
xchg
into
jmp
clc
lock
mov
loopne
xor
and
imul
mov
cmp
push
jbe
sbbb
lcall
xchg
popa
jle
adc
mov
lds
packssdw
stos
xchg
sbb
xchg
std
popl
shl
arpl
mov
cmp
mov
add
inc
sahf
xchg
pop
fildl
adc
iret
out
into
repnz
jae
aaa
jge
dec
sahf
mov
loope
xchg
pushf
pop
out
fstpt
pop
int
adc
jno
call
aam
ret
xor
push
mov
iret
test
cmc
outsb
add
push
jnp
push
mov
xchg
sub
out
xchg
rorb
mov
jecxz
lahf
scas
fcmovnb
int
nop
mov
push
js
jae
pop
mov
iret
inc
inc
mov
add
sbb
mov
lea
call
lret
add
xorb
lea
int
imul
mov
mov
aaa
lret
hlt
outsl
dec
xchg
fs
ds
jge
adc
xor
filds
mov
jl
adc
cmp
imul
cmpsl
inc
sahf
movsb
pop
xor
icebp
add
fiaddl
shl
les
ret
jo
fcomps
jle
daa
call
jae
xchg
add
adc
xor
loop
divb
shlb
movsb
shr
fwait
adc
cmc
fimull
repz
jle
and
jge
cmp
add
or
inc
or
test
cli
dec
in
into
scas
repnz
call
xchg
and
mov
lods
or
pushl
xchg
fisttpl
addb
adcl
ret
adc
or
sub
and
movsl
iret
pop
loopne
sub
push
aad
fists
inc
ret
push
loop
bound
cs
es
iret
int
mov
inc
mov
arpl
dec
enter
and
mov
fnstcw
lock
cmp
repz
or
pop
adc
repz
pushf
insl
push
addr16
js
je
fs
ret
aad
xchg
dec
jmp
cmp
sarl
cld
les
mov
test
jp
sbb
and
addr16
jle
xchg
fnclex
fsub
stos
stc
jnp
add
outsb
jb
adc
cmp
and
push
push
mov
aad
std
pusha
outsb
inc
mov
mov
sbb
fists
xchg
adc
and
inc
sahf
mov
test
dec
ja
pop
jl
fstl
dec
out
xchg
cmpb
pop
sbb
jae
in
negb
xor
dec
sarb
fldl
ret
nop
mov
mov
cwtl
mov
cli
jle
pop
xchg
cs
pushf
dec
iret
cmp
push
lds
sbb
les
mov
fcmovnb
loope
insb
adc
sub
cmp
fcmovnb
mov
cltd
pusha
mov
fistpl
mov
push
xchg
fildl
add
fmul
jno
mov
dec
test
xor
inc
cmp
in
sahf
stc
cmp
outsb
js
push
xchg
sub
or
xchg
pushf
fstpl
mov
lahf
or
pop
mov
arpl
sbb
aam
adc
adc
or
iret
fwait
insb
addr16
fadd
xchg
mov
and
pop
jns
and
lds
adc
fldt
es
mov
sbb
sbb
sbb
inc
stos
mov
xchg
xor
test
lds
imul
pusha
out
xor
mov
xchg
push
movsl
pop
lea
jg
push
jne
mov
in
enter
in
fs
aas
cmpsl
mov
and
sub
rolb
inc
mov
xor
fwait
aam
mov
insl
push
adc
pop
jo
test
xor
cmp
insb
fldenv
push
cmp
andb
add
sbb
mov
inc
xor
lds
inc
stos
or
and
in
xlat
adc
into
jb
add
outsb
jle
cld
adc
mov
ret
mov
jo
xchg
pop
sub
ret
mov
pusha
cmp
stos
mov
mov
add
subb
fistl
in
out
xchg
iret
pop
lcall
xchg
es
inc
xor
jb
jge
ret
sarl
mov
xchg
nop
cltd
sub
xchg
push
in
dec
outsb
out
js
mov
mov
scas
lock
xchg
push
test
jl
xchg
mov
inc
insl
xchg
loopne
push
movsb
sub
dec
sbbb
gs
cmpsb
push
push
insb
pop
sbb
xchg
sub
shrb
lret
jge
inc
xchg
and
and
push
adc
mov
loope
in
mov
leave
xchg
cmp
add
xchg
or
pop
add
fstpt
lock
xchg
call
dec
add
shll
inc
push
jg
or
push
or
pop
repnz
cmc
lea
and
xchg
or
mov
inc
push
inc
ja
mov
scas
fwait
lret
ficoml
or
das
nop
adc
lock
iret
sarb
sbb
xchg
fidivrs
xchg
dec
ficoms
sub
and
sbb
mov
jp
inc
dec
cwtl
fildl
dec
sarl
arpl
lret
xor
dec
adc
sbb
clc
into
adc
inc
rcrb
add
adc
ds
mov
inc
into
sub
imul
add
fistl
lods
cmp
adc
rorb
popf
ss
sti
stos
sub
ftst
xchg
fcomps
sbb
lret
add
iret
daa
popa
add
rcll
test
cmp
outsb
push
scas
and
fcmovnu
gs
pop
test
or
mov
fists
xchg
sub
out
adc
dec
dec
ficompl
lret
pop
xchg
pop
xchg
addl
loopne
mov
lret
mov
push
stc
mov
js
aam
mov
iret
xchg
mov
loope
xchg
jbe
jae
cmpsl
push
addl
fdivrp
daa
push
xchg
lods
push
cmpsl
lods
mov
out
mov
xchg
sbb
scas
add
dec
mov
add
sti
imul
add
fistpl
sahf
or
pcmpeqw
insb
dec
ficoml
inc
mov
sbb
xor
xor
shrl
sbb
cmc
push
fcmovnb
cmp
xchg
fs
cmpl
cmpsb
rol
xchg
pop
jge
enter
fmul
testb
popf
daa
lods
adc
push
fldt
xor
stos
lret
movsb
cwtl
sbb
movsl
fistl
jae
popa
in
lret
rcrb
xlat
test
pop
fnstcw
lea
pop
iret
imul
ja
repnz
std
fildl
xlat
inc
scas
imul
call
mov
lea
adc
movhps
loopne
idivl
push
cld
sbb
cmc
adc
or
sbb
push
xchg
push
xchg
pushf
jle
push
jge
jle
clc
test
mov
cmp
pop
and
pushf
aaa
and
xchg
hlt
ja
pop
fwait
push
dec
ljmp
cmp
sbb
mov
jne
cmpl
inc
mov
test
scas
or
es
stos
mov
adc
rcr
sub
jae,pt
stc
sbb
into
orl
insb
imul
fistl
adc
repz
xchg
ljmp
arpl
mov
inc
pop
mov
stc
test
test
pop
xchg
sbb
pop
int3
inc
xchg
imul
sub
imul
jae
inc
mov
iret
and
pop
mov
or
cli
inc
cmp
xchg
in
cwtl
cmp
mov
out
add
les
je
pop
clc
fisttpl
sbb
mov
lcall
cwtl
jg
jnp
insb
negb
cmp
fsub
in
xchg
and
or
dec
push
dec
fneni(8087
push
inc
jl
outsl
lcall
pusha
jge
ss
jl
cwtl
iret
or
jbe
xor
lods
xor
xor
mov
in
cmpsb
cmc
scas
daa
add
imul
mov
add
shl
inc
lock
xchg
das
aaa
pop
shl
dec
push
sub
in
dec
out
and
cmp
aaa
insl
mov
sub
xor
sbbb
sbb
xchg
fs
ljmp
push
mov
cli
fadds
popf
jno
pop
leave
pop
xchg
mov
xor
mov
add
out
clc
cmp
xchg
popa
mov
cmp
aam
cmp
pop
inc
aam
std
cmp
push
out
cmc
mov
pop
je
jns
andb
ret
fbstp
inc
xchg
in
iret
int
mov
inc
lahf
pop
cwtl
adc
mov
inc
in
pop
xchg
jecxz
jne
push
mov
leave
push
dec
pop
sbb
sti
mov
adc
call
movsl
sarl
mov
push
and
pop
lea
into
and
stos
call
jg
shlb
stc
sub
mov
es
js
push
xor
xchg
lret
sub
add
mov
sbb
cli
xchg
jno
pushf
les
mov
push
jns
ror
mov
cmp
cmp
nop
push
xchg
cmpsb
inc
jle
push
sub
and
jmp
lret
bound
mov
pop
fdivr
shlb
adc
push
xchg
es
add
test
cmp
pop
outsb
in
jmp
arpl
into
mov
lahf
lds
push
push
sub
into
shll
jns
ds
push
stc
outsb
xor
cwtl
mov
sub
jmp
xchg
or
mov
cltd
out
xchg
nop
scas
push
outsb
dec
js
sub
mov
pop
inc
or
sti
sysret
hlt
xchg
iret
inc
push
ja
les
int3
js
mul
into
jns
push
fsubs
pop
add
sti
popl
arpl
inc
mov
xchg
jmp
and
ja
inc
mov
sarl
iret
lahf
test
shlb
in
mov
xchg
pop
insb
iret
dec
fistpll
dec
ja
cmpsb
push
xchg
lret
jno
insb
push
or
mov
popf
xor
rcrl
cmpsl
aas
jecxz
sub
dec
fcmovnbe
sbb
mov
sub
mov
shll
js
iret
adc
cmp
repz
push
es
iret
out
xorb
arpl
enter
dec
inc
push
mov
loop
jno
jmp
inc
out
xchg
movsl
mov
mov
std
or
popf
jg
leave
leave
inc
mov
and
inc
pop
jne
arpl
cmp
aaa
jns
sbb
and
outsb
into
mov
call
std
icebp
int
mov
fbstp
out
les
mov
pop
iret
into
jl
sub
std
stos
enter
jl
add
rol
mov
test
pushf
fwait
mov
mov
mov
xor
adc
popf
sti
mov
iret
pop
add
sahf
pop
ret
sbb
cmp
sbb
ret
dec
hlt
sahf
fmuls
pop
or
lds
push
int
xor
push
fistpl
xchg
xchg
fs
and
xchg
leave
add
shrb
jecxz
fimull
xchg
fwait
sar
cmp
and
notl
loop
and
pop
push
das
xchg
xchg
mov
adc
dec
mov
pop
popf
xchg
cmp
mov
cmp
ret
cwtl
mov
or
ds
aam
cmpb
push
outsb
mov
aam
movsb
dec
sahf
xchg
lods
jnp
mov
mov
cwtl
cli
mov
pusha
rorl
mov
pmaxub
rol
popf
ja
adc
adc
mov
and
cs
data16
pop
adc
test
mov
std
movsl
hlt
in
mov
jl
xorb
fcmovnb
adc
xlat
ss
xchg
into
mov
mov
sti
js
fistpl
idivl
clc
dec
sahf
jmp
mov
bound
jle
sbb
loop
xor
mov
cmp
rcrb
das
xchg
push
das
fcomi
cld
popa
sbbl
aas
cld
push
add
push
cltd
mov
pop
je
movsl
insb
xchg
mov
dec
fstpl
dec
jae
loop
cwtl
pop
sbb
mov
jne
popa
mov
jg
push
mov
add
mov
enter
scas
out
loope
pop
test
pop
inc
pop
icebp
cld
stos
daa
mov
popa
mov
pop
adc
xchg
fcmovnu
je
pop
mov
es
push
push
xor
aas
xor
lahf
add
cmp
xchg
enter
mov
cs
xor
jno
aad
pusha
lea
cs
out
imul
lret
push
jb
in
int3
fldt
in
sub
iret
adc
mov
dec
inc
mov
pop
inc
daa
or
es
inc
mov
adc
into
int
iret
jb
aas
fildll
aam
push
xchg
icebp
cli
adc
stos
jae
ffreep
add
in
aam
mov
mov
rcr
fstpl
js
call
iret
fcomi
dec
jmp
push
sarl
cmp
add
jl
iret
stos
xchg
xor
loope
adc
xchg
push
test
subb
mov
add
mov
aad
xchg
dec
sbb
push
dec
popf
in
xchg
movsb
stc
loopne
daa
sub
dec
cmpsb
std
lea
add
subl
cmpb
daa
call
xor
stos
jnp
ss
xchg
push
push
lret
lret
mov
mov
ret
rcl
adcb
pop
mov
xchg
xchg
mov
jae
add
sahf
adc
mov
lea
or
xchg
les
mov
xchg
xchg
ret
mov
jecxz
dec
fsubrl
das
pop
sbb
fbld
pop
insb
int
push
jmp
stos
in
ja
jo
vmovss
xorw
fisttpl
outsb
gs
add
sub
ss
xor
jno
lret
stos
mov
xor
add
insl
lea
lahf
iret
loop
jae
insb
clc
das
mov
inc
dec
aad
lret
es
fsubrs
xor
movsl
int
mov
inc
mov
out
xchg
fidivrl
xchg
int
sub
dec
out
cmpsl
out
adc
pop
in
jo
xchg
inc
mov
sbb
fildl
inc
je
iret
fs
push
insl
mov
fiadds
pop
xchg
cmp
out
mov
jmp
xor
push
sbb
xchg
and
mov
adc
fnsave
mov
push
loope
popa
aam
ret
sbb
lret
daa
jmp
sbb
sahf
cmpl
fldt
cltd
cmp
js
mov
inc
arpl
jb
ficoms
movsb
mov
fsubrs
mov
lret
daa
mov
xchg
push
bound
shr
dec
rorl
xchg
aaa
fs
inc
jmp
ljmp
mov
mov
dec
jno
ja
xchg
shlb
or
push
mov
inc
sbb
in
pop
scas
xchg
or
data16
dec
xchg
xchg
dec
or
push
pop
pop
shrl
dec
xchg
mov
cli
mov
dec
mov
movsb
test
iret
dec
jo
mov
movsb
negl
add
xchg
mov
test
push
fistl
mov
sub
int
pushf
mov
fcomip
fcmovnb
adc
pushl
imul
loope
push
adc
mov
mov
repnz
out
lea
dec
pusha
and
scas
sti
pop
adc
fstpt
pop
call
mov
inc
andl
loop
jp
nop
add
sar
stc
lret
or
or
test
insb
xchg
sbb
sbb
addr16
inc
sti
js
or
out
test
mov
xchg
and
xchg
outsl
movb
scas
int
test
shrl
cli
jae
sbb
and
popf
lods
enter
cmp
out
int
fcmove
stos
sub
test
les
or
idivb
mov
inc
into
jmp
iret
push
jae
fs
adc
mov
nop
out
mov
pop
inc
cltd
mov
and
popa
clc
rorl
daa
jo
dec
iret
test
jp
test
outsl
jmp
je
aaa
rorb
test
push
or
dec
cli
arpl
stc
fwait
jg
repz
sub
push
cmc
push
push
jg
xlat
sbb
fcmovnbe
xor
cmp
in
movsb
sti
xor
out
neg
rorl
rclb
mov
mov
incl
mov
add
push
stos
lods
imul
test
test
iret
clc
das
xchg
ja
xchg
sub
test
movsl
pop
int3
mov
pop
iret
clc
adc
imul
xchg
sub
xor
lret
aam
sahf
pop
stos
push
fstl
jg
ljmp
ss
ds
jns
jge
cmc
xchg
cltd
cmpsl
dec
enter
push
push
xchg
mov
stos
lea
test
jge
iret
xchg
sbb
lgs
cli
jbe
cltd
fistl
xor
mov
or
xchg
sbb
push
or
push
push
ljmp
add
mov
or
sub
out
sub
cld
xchg
or
mov
aas
sahf
mov
js
pop
pop
dec
fisttps
jmp
mov
mov
iret
subb
test
int
iret
lods
mov
xchg
popa
xchg
mov
add
adc
scas
pop
cltd
pop
xchg
push
stos
ljmp
sti
jb
xchg
int3
ror
out
stc
or
das
dec
fisttps
test
mov
sub
shll
mov
shrl
push
iret
scas
enter
es
or
aam
sub
iret
xlat
and
aaa
mov
addl
add
jg
pusha
cs
int3
push
and
pop
iret
xchg
fldenv
loopne
aam
adc
lds
push
push
sbb
lods
xor
test
repnz
hlt
stc
mov
decl
mov
cmpsb
fwait
xchg
push
jecxz
sub
idivl
xchg
mov
jl
cmp
push
mov
out
xchg
aad
add
sbb
inc
movsl
dec
jecxz
loope
adc
xchg
loop
out
mov
dec
dec
push
imull
js
xchg
xchg
cli
loope
aam
cmp
daa
mov
mov
mov
jno
xchg
inc
movsl
movsb
lret
xchg
int
xchg
aas
out
loopne
std
sbb
popf
cmp
je
out
sbb
mov
lret
cmc
pop
test
and
mov
jb
daa
setno
xchg
or
sbb
ss
fmulp
iret
arpl
and
mov
lahf
and
ja
pop
sahf
loope
into
or
xor
jle
xor
xor
int
cltd
out
or
lret
icebp
cmp
lods
js
sub
rolb
pop
fcmovnb
mov
dec
or
mov
enter
orb
aam
test
lret
xlat
test
mov
mov
or
fldenv
jne
lds
iret
aaa
mov
sub
cmp
dec
lahf
pop
xchg
adcb
or
jecxz
dec
jnp
andb
and
insl
xchg
cltd
dec
inc
xchg
jb
sub
lea
in
add
fldt
out
lret
aam
mov
cvtdq2ps
cld
lahf
mov
test
imul
dec
jne
fcmovne
imul
iret
push
sub
pop
mov
int
adc
lods
pop
sbb
ja
iret
and
outsl
mov
lahf
test
ret
xchg
jb
dec
into
fnstcw
test
adc
push
xchg
pop
xchg
pushf
inc
dec
or
push
dec
test
inc
mov
ret
mov
jb
xchg
adc
shrl
cmpsl
popa
xor
cmp
adc
dec
lea
mov
xchg
fdivl
sbb
cwtl
jbe
cld
into
sbb
cmpsb
imul
or
fs
pop
repnz
fldt
lahf
jae
int3
mov
sub
or
xlat
je
cmc
xchg
mov
xchg
mov
mov
dec
or
mov
fisubl
mov
jne
sarl
pop
inc
and
test
scas
lock
push
add
mov
fcomi
mov
movsb
jecxz
addl
or
pop
jg
test
lods
xchg
popf
outsl
int3
pop
mov
dec
or
in
les
or
adc
loop
pop
xlat
iret
daa
adc
arpl
xor
push
sub
fdiv
jns
out
lea
punpckhwd
mov
pop
inc
je
repnz
xchg
add
mov
xchg
adc
jge
ret
lret
add
xchg
pop
or
out
pop
stc
aam
xchg
pop
test
adc
and
push
mov
inc
mov
push
sbb
dec
jge
fidivrs
pop
pop
lods
pusha
jl
loopne
or
cmpsb
pop
fists
fsubs
test
addr16
std
cld
mov
mov
pop
sahf
pop
mov
nop
testb
jecxz
xor
out
jg
cmpsb
aam
iret
nop
push
movsb
out
cmpsl
mov
adc
push
sub
int3
xchg
int3
mov
popa
mov
fwait
cmpsl
lods
adcl
mov
or
mov
sub
xor
or
dec
xchg
mov
outsb
fsubs
and
rcl
adc
sub
mov
in
fdivrp
xchg
pop
dec
jg
popf
icebp
inc
add
adc
lods
mov
aad
xchg
fldt
pop
jnp
sahf
icebp
ret
jmp
adc
aaa
cltd
call
movsb
nop
sub
mov
rcrb
aad
add
push
xchg
imul
test
bound
cmpsl
push
pushf
ja
iret
imul
push
clc
test
jno
adc
jnp
test
lods
lea
fisttpll
xchg
mov
clc
clc
push
xor
dec
mov
and
das
rorb
iret
add
inc
and
cmp
or
out
loope
ret
lea
xchg
dec
cld
cmp
popa
mov
mov
data16
movsb
leave
push
test
inc
add
push
ret
jmp
jl
xor
pop
xchg
outsl
in
xchg
arpl
movsb
mov
fistpl
fisubs
cmp
adc
imul
daa
xor
add
lret
and
dec
push
fnstsw
mov
cs
hlt
daa
jns
adc
and
mov
mov
and
dec
scas
jp
xchg
sbb
lods
mov
loopne
inc
insb
mov
mov
filds
aas
dec
sub
test
in
sub
out
inc
gs
inc
jbe
jge
fisttpl
mov
negl
je
mov
cs
sti
pusha
iret
insb
jg
jbe
pushf
lret
aaa
jbe
test
mov
gs
pop
mov
xchg
cmp
add
lret
mov
xchg
lock
jp
dec
push
negl
fcmovnb
mov
adc
mov
loope
mov
fisttpl
dec
xor
mov
sub
in
sub
cmpsb
popf
cwtl
xchg
dec
cs
cmpb
rcll
mov
mov
adc
ja
leave
testl
stos
ret
and
jmp
mov
test
ds
xor
clc
fcompl
in
pushf
adc
into
jno
push
xchg
sbb
xor
sti
sbb
arpl
repz
cs
and
repz
mov
mov
xchg
sahf
mov
push
jp
sub
mov
xor
sbb
int3
sub
iret
or
mov
xchg
pop
ja
xchg
inc
xor
gs
clc
lahf
inc
mov
fistl
insb
in
fs
cli
dec
push
aaa
movsb
adc
iret
mov
inc
ljmp
fdiv
or
xchg
fsubp
js
mov
inc
call
loope
and
movsb
sub
xchg
mov
xchg
dec
xchg
push
and
jb
sbb
fs
jge
push
ljmp
cmp
cmc
dec
mov
fs
rcr
push
mov
mov
pop
xlat
pop
stos
xchg
dec
dec
into
xchg
scas
mov
rorl
ret
jge
popa
xchg
adc
jl
xchg
mov
add
jecxz
das
imul
mov
add
xchg
cmp
push
pop
xchg
popl
in
stos
int
test
inc
xchg
xor
jns
and
xchg
out
rorl
fildl
popf
push
mov
sbb
shl
out
test
sbb
jb
xchg
or
adc
pop
cltd
mov
or
fwait
push
test
mov
pop
xchg
addl
jb
stos
sub
mov
mov
sbb
loope
loope
push
or
inc
pop
loopne
jmp
pop
mov
test
inc
hlt
add
sbbb
shr
xchg
pop
fwait
jo
lds
xchg
cli
out
mov
jge
mov
adc
and
adc
adc
jns
pop
add
sarl
movsl
or
les
lds
and
daa
in
ljmp
adc
push
fcmovnbe
jle
pop
adc
fistpl
inc
pop
into
mov
inc
fcomp
dec
scas
in
xorl
outsl
sub
dec
insl
iret
xor
add
arpl
cwtl
inc
cwtl
jae
nop
dec
outsl
stos
lret
les
test
mov
jmp
into
sub
xchg
jns
aaa
xor
gs
insb
xchg
sbb
pop
mov
xor
fimuls
call
dec
and
fmuls
aas
std
aam
cmc
or
sbb
cmpsb
in
movsl
inc
leave
push
and
and
pop
js
xor
sbb
fidivrl
loop
in
pop
jmp
notl
call
rol
out
je
sub
test
test
idivl
jmp
push
xchg
cmp
cmp
mov
mov
xchg
pop
mov
cmpsb
insl
pusha
test
adcl
movsb
inc
xchg
pop
xor
lods
push
call
popa
bound
or
into
xor
in
mov
fistl
imul
and
pushf
cmpsb
fcmovnbe
pop
xor
adc
loop
rorb
dec
xchg
xor
mov
xchg
out
inc
mov
jae
stos
xchg
push
xor
cmpsb
pop
dec
mov
roll
sti
gs
cmp
mov
into
dec
xlat
cmpb
popf
cltd
xchg
mov
jg
adc
out
push
dec
movl
xor
outsl
pop
mov
push
fs
jecxz
test
xchg
push
jns
sti
or
test
lret
inc
xchg
pusha
mov
arpl
sbb
test
jle
and
inc
and
inc
xchg
rclb
pop
pop
dec
fistl
xor
hlt
mov
push
xor
lds
xchg
push
push
mov
test
ret
dec
lods
or
int3
xchg
pop
jl
adcl
sbb
nop
cmpsb
xchg
sub
fcomps
test
test
mov
vpshuflw
jmp
mov
ja
in
arpl
scas
mov
iret
push
xor
jle
push
adc
push
std
shll
outsb
xchg
mov
push
and
stc
je
fiaddl
jecxz
pmulhuw
push
cli
mov
or
jno
cmp
adcl
mov
pop
negb
iret
inc
cmp
push
clc
test
xchg
sub
xchg
sahf
fistpl
and
test
les
pop
rclb
xor
mov
rorb
int3
mov
inc
iret
cmp
mov
pop
xchg
xchg
xchg
pop
push
das
ja
out
icebp
or
mov
arpl
push
int
fsubs
jl
sub
aaa
xchg
lcall
mov
sbb
rcr
sub
loop
sahf
lock
dec
ss
das
adc
mov
stc
mov
into
cmp
xchg
int
iret
add
dec
inc
loop
dec
and
fs
gs
out
in
aas
cmp
xchg
adc
pop
movsb
lcall
scas
addr16
call
icebp
fwait
mov
stos
sbb
neg
shl
add
pop
mov
inc
or
sti
test
jns
std
add
or
push
sbbl
xlat
pop
outsb
sti
mov
lds
fcomi
js
xchg
xor
cmp
jno
push
out
std
add
inc
out
pusha
xchg
imulb
push
and
iret
fcoms
mov
repnz
sbb
lods
pop
lcall
jecxz
fsubrp
mov
scas
dec
and
popa
iret
mov
cmpsb
sub
cmc
sbb
jp
xchg
aas
imul
xchg
scas
imull
rol
sbb
add
mov
iret
jo
leave
out
cmp
adcb
push
jnp
fisttps
lods
shll
imul
test
xor
pop
addl
sub
jmp
outsl
or
pop
push
mov
js
and
push
fdivs
cwtl
ret
lahf
repz
xchg
and
ret
imul
clc
in
mov
adc
int
jo
js
or
cs
mov
iret
xor
inc
scas
lcall
cld
fs
sub
pop
mov
cmpsl
outsl
xchg
movsl
rcl
cmp
pop
mov
std
out
jae
pop
xchg
jl
jl
ja
and
iret
xchg
in
inc
ret
pop
push
xchg
mov
dec
aam
mov
test
outsl
fdivl
popa
jbe
ffree
mov
or
jnp
insb
pop
sub
test
aas
mov
fiadds
sbb
add
cmpsb
pop
sti
add
push
or
test
pop
out
ja
lahf
ret
xchg
or
pop
push
popa
sti
popf
ror
xchg
fdivrs
xchg
add
mov
iret
pop
call
addr16
sbb
jecxz
pop
in
or
mov
and
mov
cltd
xchg
xchg
std
cmpsl
add
vmwrite
and
jnp
rsm
pop
jecxz
out
data16
mov
cmp
repz
cltd
stc
inc
out
push
fsubs
daa
rclb
xchg
call
jne
push
or
iret
mov
sub
mov
push
sub
push
sbb
add
mov
and
outsl
xchg
in
xor
jecxz
xor
ja
jnp
movsl
mov
inc
sbb
add
lea
int
aam
lret
add
nop
cmp
push
pop
jle
xchg
dec
jg
jb
pop
xchg
xor
cmc
sti
jle
sub
push
mov
dec
mov
or
jae
mov
mov
or
imul
sbbb
xchg
add
mov
aam
cmp
mov
dec
jmp
cld
xchg
and
aam
pop
mov
xchg
loop
pop
mov
fsubs
pop
cmp
push
and
imul
push
daa
movb
repnz
mov
movsl
xor
int
mov
or
cli
pop
push
shr
mov
push
push
test
mov
ja
iret
addr16
test
sahf
inc
sbb
mov
add
out
pop
and
aaa
lds
dec
jbe
xchg
inc
ss
mov
fidivrl
pushf
out
cltd
lcall
bound
push
pop
ret
mov
fldl
xchg
jb
mov
mov
adcl
pop
cmp
arpl
xor
mov
fucomi
cmp
and
push
or
or
lods
xchg
xor
ret
jl
xchg
or
mov
or
jl
fildl
jge
lods
dec
adc
enter
add
je
pop
dec
adc
inc
divb
cli
clc
das
or
mov
aam
or
cmp
ljmp
imul
dec
mov
mov
call
push
sub
iret
daa
cwtl
jmp
push
test
das
in
test
loope
enter
jg
lock
out
add
inc
mov
adc
adc
rcl
mov
push
mov
sti
xchg
lahf
jge
or
push
cmpsb
xchg
pusha
or
fistl
test
test
rclb
iret
cmp
sbb
adcb
pop
xchg
fwait
lahf
xchg
sub
inc
and
jns
mov
and
sub
repnz
outsb
lret
ret
js
cwtl
xor
in
xor
xlat
enter
outsl
dec
pop
cmpsl
xor
js
fsubs
test
ret
xchg
ja
mov
cmp
clc
call
sbb
stos
push
in
out
iret
dec
pop
fwait
stc
ja
imul
sahf
jae
daa
ret
cmp
sub
bound
stos
test
ja
push
outsb
or
inc
xchg
loopne
xchg
fldt
sub
cmpsb
adc
jne
iret
mov
nop
pop
pop
jns
out
lahf
fwait
imul
testb
cld
pushl
lods
xchg
pop
xor
scas
push
pop
mov
sub
or
xchg
xchg
inc
int
ret
ds
inc
hlt
scas
sarl
mov
cmp
out
push
popl
sbb
push
les
stos
fldt
pop
in
popf
cmp
or
lret
mov
add
pop
imul
pop
sbb
outsb
pop
out
pusha
out
pop
jnp
aam
ret
push
imulb
sbb
sub
sarb
adc
dec
out
imul
sahf
lahf
push
jg
mov
in
sub
jbe
fsubr
add
sbb
mov
inc
mov
test
dec
pop
push
in
mov
int
aaa
mov
fisttpl
or
cmpsl
push
mov
aas
loope
outsl
mov
xchg
test
add
std
mov
or
out
adc
fstpt
fists
js
pop
mov
or
push
add
dec
scas
enter
jmp
mov
pop
and
dec
rcr
leave
gs
andb
dec
lahf
outsb
pusha
ret
aam
xchg
or
popa
movsb
xchg
ud2
mov
jle
fistl
lods
mov
fucomi
xchg
lea
mov
mov
cs
test
mov
movsb
test
dec
pop
fs
cmp
sbb
cs
shrb
js
mov
pop
xor
xor
loope
mov
outsb
mov
mov
push
or
movsl
scas
xor
loop
dec
iret
dec
adc
loope
and
lret
jge
not
xchg
ljmp
shrl
dec
push
lahf
push
xchg
jg
xchg
in
int3
and
insb
cmpsb
psubusw
div
jl
pusha
mov
xchg
lods
xchg
mov
call
cmp
adc
fldt
mov
adc
out
ror
push
test
or
jnp
shll
dec
push
push
iret
or
loope
fadd
test
imul
cmp
leave
or
push
xchg
lea
cmp
std
sbb
xchg
out
je
stos
aad
cwtl
sub
cmpsb
cmpsl
movsb
loope
aam
push
movsl
mov
das
cmp
mov
adc
and
lret
lret
or
push
repz
or
into
das
pop
ret
aam
in
push
cmp
ret
sub
repnz
mov
xor
jne
stos
fildl
or
inc
je
iret
stc
add
dec
xorl
es
in
pop
sub
push
movb
jo
sbb
out
adc
pop
pop
cmpsb
lock
arpl
sub
iret
push
sbb
mov
jecxz
ret
mov
jne
sbb
xchg
xchg
xchg
notl
sub
pop
cs
int3
pslld
lea
adc
push
out
cmp
in
xchg
adc
xchg
pop
adc
adc
pop
jg
mov
std
stc
leave
imul
xchg
and
int3
lea
outsl
call
xor
xor
stos
adc
adc
pusha
scas
insl
adc
push
and
rcll
int3
cmp
mov
xchg
push
les
xor
cmp
sbb
arpl
fldenvs
pop
lcall
xor
xor
xchg
mov
cmpsb
cwtl
mov
in
into
lret
xchg
movsb
or
inc
or
jle
cltd
pop
jnp
sub
stc
mov
daa
xor
and
mov
sub
iret
repnz
mulb
jp
pop
cmp
in
data16
je
stos
or
dec
adc
xchg
push
xchg
dec
xchg
insl
adc
mov
xchg
stos
mov
mov
mov
adc
lret
xchg
push
pop
rorb
adcl
clc
push
and
test
mov
rolb
sbb
adc
add
jg
sub
sbb
push
out
dec
js
testb
test
and
shl
lods
xchg
daa
mov
sbb
xchg
rol
cmp
adcb
cmp
xchg
pop
xchg
cmc
push
dec
xchg
push
rcrl
loope
loopne
xor
call
iret
dec
ret
push
sub
fldt
andb
jp
fimuls
cmp
push
loope
inc
addr16
iret
inc
mov
test
sti
mov
dec
push
nop
adc
cmp
cli
hlt
sub
jge
push
mov
xchg
mov
rorl
arpl
mov
push
jnp
mov
jae
sbb
xchg
lea
xchg
dec
test
push
xchg
dec
pop
adc
pusha
mov
loopne
pop
jns
xlat
sbb
enter
inc
fistps
sbb
mov
lods
jbe
imul
shrb
divl
xchg
mov
inc
lods
in
push
adc
dec
push
dec
xor
mov
cltd
pop
sbb
inc
adc
jp
sub
lods
aas
add
xchg
lcall
mov
inc
add
push
gs
pop
es
mov
mov
mov
and
adc
lods
fldt
mov
movsb
pop
rorl
pop
xor
imul
and
sbb
outsl
out
sub
aam
es
push
es
fdivp
sbb
daa
xchg
cmp
pop
movsb
cmp
xor
vmovq
jmp
xchg
lods
jae
pusha
mov
movsl
fidivs
cld
xlat
aas
inc
mov
cmc
roll
fwait
jae
sarl
out
mov
lods
mov
fcoml
xchg
jl
xchg
mov
leave
adc
lds
add
in
xchg
mov
out
push
fldt
fsqrt
insl
cmp
iret
dec
insb
movsl
dec
xchg
or
push
loop
loope
adc
push
lods
xor
leave
out
cmp
xchg
je
scas
shrb
push
jne
and
pop
xor
movsb
popf
mov
inc
pop
push
pop
inc
negb
add
mov
xchg
sarb
mov
fisubs
dec
fwait
cmp
and
into
outsl
mov
icebp
push
pop
add
out
iret
push
sub
pop
cltd
sub
hlt
inc
pop
in
scas
fdivrl
movsb
outsb
xor
iret
mov
jge
jb
fcmovnu
testl
fcomip
sti
insb
add
cmpsb
arpl
jl
inc
popf
xchg
xchg
cmc
mov
mov
in
cmp
std
cmpsb
arpl
repnz
cmp
dec
stos
sbbl
ret
xchg
mov
rolb
cmp
insb
enter
repz
insb
push
jbe
movb
jecxz
inc
sbb
inc
xchg
imul
repz
notb
mov
push
iret
fs
or
pop
and
mov
xor
mov
pop
push
neg
aaa
mov
xlat
sbb
cmp
frstor
dec
out
lret
cmpsl
add
movsb
pop
stos
rolb
int3
aas
add
jl
adc
out
mov
sbb
loop
lods
jae
adc
les
and
aaa
stos
fcmovnb
lods
add
inc
xchg
jae
pop
sbbl
dec
gs
fucomi
dec
inc
mov
iret
pop
lds
mov
test
inc
ja
mov
adc
mov
or
push
push
test
jp
les
mov
enter
jg
mov
loopne
xchg
or
outsl
xchg
mov
in
mov
fistl
and
iret
pop
std
xorl
imulb
call
dec
shrl
ret
fadds
lahf
inc
iret
stos
jecxz
in
xor
stos
or
repz
shll
mov
ret
in
fucomi
popf
jle
subl
mov
adc
mov
xchg
pop
pop
bound
fisttpl
push
pusha
push
aaa
xchg
ret
inc
pop
test
dec
ficoml
or
xchg
mov
into
clc
incl
mov
psllw
inc
sub
insb
data16
xchg
das
jmp
mov
jecxz
xchg
sub
push
push
insl
icebp
and
iret
fcmovnbe
pop
adc
outsl
ret
fildl
xor
pusha
mov
les
fwait
test
lahf
pop
xchg
or
aam
xchg
shlb
dec
add
outsl
inc
add
or
shlb
mov
mov
jne
popa
push
add
mov
gs
mov
rclb
jnp
or
xor
enter
pop
lock
xchg
cmp
mov
xchg
xchg
jmp
aas
shlb
jg
in
into
xor
jae
rorb
pop
jp
fmuls
add
mov
int3
mov
add
shlb
pop
mov
js
inc
iret
xchg
cli
cmp
into
and
dec
jmp
pop
stos
out
nop
iret
loop
adc
pop
and
jnp
mov
dec
ss
xchg
pop
js
inc
dec
dec
and
mov
add
bound
and
repz
add
pop
mov
out
out
dec
fcmovnbe
out
loop
aas
mov
jb
test
cmp
xchg
xchg
and
inc
push
lcall
loop
mov
xor
lods
jle
in
or
iret
gs
push
adc
mov
lret
imul
cwtl
dec
xchg
push
add
cmp
xor
aam
roll
jbe
push
test
sarl
movsl
xor
sbb
loope
jge
dec
push
adc
inc
test
push
jne
mov
dec
inc
jae
mulps
jnp
add
je
fmuls
cmp
sti
jl
adc
xchg
cltd
leave
pop
jle
call
fwait
add
lods
pushf
push
iret
imul
ficoml
mov
xor
or
add
out
mov
ret
call
in
into
adc
out
loop
lods
cmpsb
inc
xor
sbb
fidivrs
mov
push
ljmp
enter
in
in
xchg
cmc
jmp
imul
mov
insb
and
jno
xchg
push
inc
loopne
lahf
adc
sub
lds
push
mov
fwait
mov
xchg
stos
dec
xchg
ljmp
cwtl
jae
movsb
inc
jl
iret
mov
sub
loopne
push
in
repz
int3
loop
imul
jmp
and
aaa
add
insb
bound
rcrl
jecxz
jbe
inc
xchg
cmc
mov
push
jne
push
out
test
test
adcb
pop
outsl
inc
push
dec
std
stos
dec
and
imul
or
insl
xchg
xchg
js
adc
dec
dec
popa
dec
daa
and
and
and
mov
popa
pop
push
xchg
push
add
scas
add
jle
nop
dec
push
fstps
xor
jne
loop
cmc
pusha
ret
jge
inc
fisubl
into
test
mov
jne
push
mov
mov
xchg
push
mov
mov
adc
push
out
sbb
icebp
in
inc
aam
mov
adc
fistpl
mov
enter
addr16
hlt
sbb
mov
gs
iret
shlb
aad
push
lret
aam
rol
jmp
xchg
sub
stos
ucomiss
sbb
sbb
jle
sbb
dec
inc
mov
pop
xchg
xchg
sub
sbb
rorl
test
push
roll
jb
aad
gs
inc
jmp
cmpsb
xchg
iret
fildll
arpl
mov
fisttpll
xchg
sbb
orb
ss
or
and
add
aas
fstl
out
into
jge
repnz
xor
jns
xor
mov
xchg
mov
and
push
int3
mov
test
sub
xchg
fstl
inc
pop
jge
outsl
sub
inc
or
int
fs
loop
sbb
ret
jnp
push
dec
pop
cmovge
mov
test
repnz
sub
scas
sub
js
out
mov
iret
cmp
outsl
popf
jns
repz
jg
xchg
addr16
lea
xchg
sub
ret
fidivrl
and
xor
pop
dec
out
sub
iret
or
dec
dec
sbb
xchg
imull
xor
imul
dec
jnp
mov
iret
fnsave
pushl
cmp
incl
popa
xchg
mov
lods
iret
pop
add
xchg
mov
repz
and
jns
fwait
lcall
pop
pop
xchg
cld
loope
xchg
stos
xlat
aad
cmp
mov
das
das
jge
out
ja
xchg
ja
out
in
cltd
xor
mov
rcll
sbb
jl
jne
loope
sub
cmp
shr
jns
jae
xor
fcomi
scas
inc
out
fidivl
repz
ficomps
mov
or
and
sub
rolb
push
clc
and
add
mov
xchg
add
xor
cmp
mov
lret
lds
sbb
push
ss
push
fcmovnb
in
lret
out
sbb
mov
test
mov
xchg
pop
lcall
or
aam
mov
and
sbb
into
int3
mov
loope
sub
fistl
mov
sub
xchg
les
xchg
dec
lcall
in
or
sbb
inc
cmpsb
xchg
adc
cmp
imul
or
outsl
inc
add
mov
sub
and
push
adc
pop
scas
pop
add
fwait
jg
setno
nop
iret
push
mov
cs
je
stos
imul
repnz
mov
lret
and
int3
frstor
in
sbb
mov
xchg
out
cmp
add
mov
push
push
dec
iret
adc
lods
int3
mov
push
les
sbb
jmp
in
ret
sbb
sbb
sub
jp
xchg
fisttps
or
jae
add
ss
jns
in
mov
xor
iret
lods
scas
pop
fistl
aas
nop
fstpl
dec
sahf
bswap
stc
inc
xchg
sbb
cld
aam
xchg
clc
shr
adc
jmp
xchg
test
stos
xchg
aad
ja
inc
mov
out
ret
and
mov
add
lcall
sbb
into
imul
jae
test
jno
lods
pop
xchg
iret
in
push
mov
xchg
ss
test
push
sbb
lcall
jno
aas
mov
lods
jns
pop
roll
test
push
mov
mov
int3
std
xchg
pop
cmp
fistl
and
push
aas
xchg
jno
sub
mov
loopne
das
leave
ljmp
int3
jmp
fcmovnu
xchg
adc
dec
repz
adc
inc
pop
into
leave
imul
pushf
test
sub
outsb
xchg
out
fstl
xchg
in
xchg
bound
sahf
gs
xchg
sub
ja
out
roll
sysret
imul
mov
data16
mov
aas
sahf
enter
sbb
sub
and
xchg
jg
fists
jecxz
jecxz
dec
js
push
outsl
imul
mov
ja
int
fsubrl
sub
adc
subl
popa
xchg
jo
adc
and
mov
aam
outsl
into
xlat
fcmovnbe
cld
cmp
or
add
fdivrl
adc
sub
sub
outsb
pop
mov
ds
dec
sti
int3
insl
mov
xchg
es
cmpsl
int3
into
push
mov
xchg
inc
sbb
cmovg
push
js
test
rol
dec
scas
jmp
repnz
mov
mov
sub
add
push
clc
or
enter
decl
data16
rcrb
mov
rolb
stos
inc
cmc
sbb
adc
ret
rcrb
addr16
mov
adc
jg
jmp
adc
fisttpl
cmpsb
mov
cmc
xchg
lock
and
fistpl
mov
sub
lahf
movsl
fsts
hlt
mov
xchg
or
sub
pop
xor
sarb
pop
lds
push
push
loop
jne
dec
cmp
mov
cmp
xchg
adc
push
in
dec
mov
add
cmp
stos
lahf
push
add
cmpsb
iret
mov
mov
mov
xchg
mov
shlb
xchg
rclb
testl
push
es
add
inc
cwtl
in
aam
notb
call
push
cld
addb
jo
repz
xchg
mov
stc
dec
ja
popf
aad
inc
dec
cmpb
mov
jmp
jno
lret
push
sub
push
and
pop
push
in
cmp
push
in
mov
jbe
enter
lret
push
subl
xlat
sub
iret
lock
in
or
sbb
push
fcompp
pop
or
out
cmc
imul
fistl
pop
je
testl
repz
and
rolb
sub
mov
and
fildl
xchg
lock
inc
xchg
or
mov
das
dec
sub
dec
adc
mov
add
adc
stos
mulb
mov
xchg
mov
out
clc
test
mov
in
xchg
aad
pop
push
and
clc
inc
dec
iret
jnp
fcmovb
sbb
sub
ja
push
dec
inc
data16
mov
dec
xchg
xchg
and
and
mov
ret
mov
testb
and
mov
push
lret
hlt
repnz
xchg
push
mov
mov
scas
mov
nop
inc
mov
ror
inc
add
mov
out
mov
and
subl
xchg
xor
mov
sbbl
call
sub
sahf
push
iret
fstpl
fcoml
repz
xchg
inc
xchg
jo
aaa
mov
add
jmp
pop
popa
xchg
in
jge
out
xor
and
pop
loope
ret
xor
mov
push
push
xchg
les
push
lret
data16
push
icebp
in
call
add
cmp
xchg
ja
and
mov
int
add
fwait
sbb
mov
dec
adc
push
push
out
xchg
mov
fidivrl
mov
in
mov
dec
rorb
iret
lcall
adc
xchg
out
pop
je
and
dec
fbld
xchg
lahf
movntq
out
pop
fucomi
mov
aad
or
mov
push
mov
add
loop
aam
fdivrs
jo
inc
jno
adc
pop
sbb
into
sbb
lret
test
sbb
dec
inc
mov
pop
xchg
in
cmp
xchg
shrl
pop
lret
jno
fwait
cli
ficoms
ds
mov
test
inc
lret
lods
xchg
stos
cmp
xchg
stos
fistpl
popa
lret
iret
pop
mov
xchg
aas
mov
push
add
iret
imul
mov
or
xchg
mov
aam
or
mov
and
pop
and
iret
cld
arpl
xchg
test
sub
mov
cmp
and
ror
sbb
loope
and
xorl
repnz
pop
push
xchg
outsb
dec
inc
fistps
sbb
aam
push
scas
push
call
jbe
pop
ret
bnd
or
pop
mov
and
push
cmpl
das
pop
jecxz
les
out
or
lds
xchg
cmp
repnz
testb
pop
fwait
cs
int3
je
iret
mov
xor
mov
or
sub
sub
pop
xor
sbbl
or
mov
xor
iret
jmp
outsl
into
jae
xchg
pop
push
adc
push
repnz
je
je
or
popf
bound
iret
test
ljmp
mov
mov
jecxz
fs
test
pop
pop
aaa
dec
cli
shlb
notb
lcall
xchg
push
mov
mov
ljmp
pop
mov
roll
xor
stc
stos
rol
mov
jmp
mov
setl
pop
outsl
insb
mov
sub
add
inc
data16
je
mov
cmp
rep
jp
repnz
int
inc
mov
xor
jnp
mov
push
aas
mov
pop
xor
insl
lcall
imul
int3
andnps
rcrl
xchg
movsb
aad
cli
mov
rolb
fmuls
mov
insb
mov
dec
aam
ds
dec
shll
xchg
hlt
jns
mov
inc
cld
stos
ret
xchg
sbb
fstpt
pusha
orl
fwait
call
flds
subb
mov
clc
scas
or
cmpsl
cmc
push
xchg
or
push
xlat
inc
adcl
pop
test
push
das
enter
mov
add
aaa
lret
pusha
mov
sbb
push
add
jnp
dec
lret
incl
sub
cmpb
jbe
pop
outsl
adc
loopne
dec
inc
cs
mov
jae
rcr
cld
ret
or
fwait
outsb
push
enter
ja
cs
adc
inc
cmpsl
aad
sub
fcomps
int
adc
in
mov
jl
inc
push
jo
mov
aad
cmpsb
arpl
icebp
sbb
xchg
add
add
xor
in
int
xor
dec
stos
xchg
cltd
xchg
add
stc
fcom
das
xchg
lock
adc
sub
addr16
inc
pushf
xchg
jecxz
mov
and
cmp
sub
adc
jge
aas
test
stos
xor
jbe
das
mov
divl
scas
neg
fucomp
xor
imul
cmpsl
pop
fldt
orb
xchg
ss
dec
add
adc
dec
repnz
hlt
push
add
push
lock
stc
xlat
xchg
mov
in
adc
cmpl
call
fidivl
lea
mov
iret
cmp
xlat
or
daa
push
stc
or
fists
mov
movsb
mov
jbe
out
pop
pop
scas
test
stos
add
lsl
iret
push
imul
add
cmpsl
adc
push
add
movl
pop
fistl
insl
jp
iret
pop
sbb
jns
xchg
lock
push
fsubrl
dec
sbb
in
xchg
xlat
xchg
sub
xchg
das
addr16
mov
sub
mov
jle
lret
mov
mov
pushf
movsb
jnp
or
xchg
add
data16
das
adc
pop
sub
insb
jmp
xor
push
sbb
inc
loopne
mov
fcmovne
mov
mov
imul
cmpsb
arpl
sahf
or
fcoms
pop
lcall
xor
pop
adc
lret
in
js
xchg
sbbb
pop
mov
stc
mov
outsl
cmpsb
cmc
fisttpl
daa
int
sbb
movsb
sub
sbb
xchg
jne
add
scas
adcb
mov
xchg
popa
mov
scas
inc
xchg
xchg
mov
mov
insb
mov
icebp
aad
shlb
xchg
dec
push
pusha
icebp
mov
xchg
fstpt
add
into
jae
mov
xor
mov
out
test
test
popf
repnz
mov
pop
js
mov
cmp
lods
xchg
ret
push
and
jge
pop
xchg
ret
dec
mov
fcomi
or
stc
pop
es
iret
sarl
xchg
scas
test
sub
jno
sbb
jmp
push
xchg
mov
sbb
mov
jbe
add
adc
rcrl
jecxz
xchg
xlat
mov
and
fisubl
aam
repnz
orb
mov
out
ficompl
xchg
pop
sbb
sbb
inc
lock
gs
fcomip
sbb
pusha
out
jp
inc
ljmp
inc
and
pop
jmp
add
mov
lahf
add
popf
xchg
push
xchg
lods
and
adc
leave
xor
test
sub
mov
mov
xchg
dec
sti
orl
cmp
outsb
popf
mov
push
xlat
sysenter
fdivl
dec
adc
imul
fstpt
push
in
es
into
mov
out
lcall
fstpt
push
add
shll
movl
cmp
fidivrs
iret
es
mov
push
arpl
cmp
popl
adc
faddl
rclb
inc
sbb
pop
lods
scas
repnz
jp
xchg
scas
test
jmp
mov
xchg
inc
sub
pusha
pop
es
imul
adcl
pop
mov
cmpl
push
add
or
and
orl
loop
dec
xchg
xchg
clc
ljmp
and
addr16
adc
int3
cmp
cmp
daa
fcomi
mov
and
mov
xor
dec
into
mov
mov
subb
adc
pop
sbb
ret
ja
add
lret
out
push
sub
sbb
sar
mov
xor
inc
fwait
rcr
sbb
xchg
inc
lock
notb
xor
cmc
daa
pop
jg
pop
adc
loop
iret
sbb
testb
imul
push
cltd
jl
mov
movsl
fwait
add
mov
enter
arpl
iret
cs
sub
iret
mov
mov
jl
mov
cmp
dec
outsl
push
cmp
aad
pop
movd
sub
fcmovne
movsl
ror
sbb
inc
insl
stos
cs
bswap
std
movsl
insb
add
mov
jbe
add
jmp
mov
leave
mov
sti
iret
cmp
mov
xchg
push
push
hlt
push
push
xchg
fs
dec
xchg
xchg
fistpl
mov
pop
mov
inc
fistpll
pop
pop
cmp
iret
cmpsl
dec
icebp
xlat
add
sbb
jg
and
jmp
movsl
and
xchg
pop
sbb
mov
inc
ficoms
roll
push
jns
xchg
mov
xor
int
mov
mov
fbld
leave
dec
xchg
loope
fsubs
mov
setle
cld
push
loopne
mov
sub
sub
idivl
jne
xor
jnp
or
sub
cmpsl
in
inc
xchg
addl
adc
cmp
data16
and
or
lds
outsl
mov
repnz
pop
daa
xchg
jmp
insl
adc
inc
xor
or
aam
out
sti
sub
jl
mov
add
mov
mov
xchg
xchg
pop
in
shlb
mul
jne
and
cwtl
or
mov
pop
cmpsl
loop
fistpl
add
loop
fdivrs
inc
lock
push
adc
cwtl
les
fadds
out
outsb
mov
test
add
pop
xchg
push
imul
inc
dec
mov
call
mov
loope
mov
lea
sbb
push
adc
mov
jnp
cltd
sti
into
aam
lock
xchg
out
test
inc
and
outsl
rcrb
dec
adc
push
xor
jp
xchg
mov
push
js
sarl
mov
dec
out
outsl
aaa
out
pop
int
iret
pop
mov
push
inc
dec
push
in
push
je
inc
jmp
mov
cli
fsubs
fistl
and
mov
rcl
mov
push
sub
xchg
pop
push
into
int
outsl
sbb
sbb
enter
xchg
pop
xchg
loope
lret
jbe
icebp
sti
inc
movsb
movsb
int3
andl
mov
xchg
mov
paddsb
add
xchg
iret
or
cmp
jge
sub
call
mov
cmp
mov
mov
stos
popa
xchg
test
push
inc
int
cs
sub
jne
xchg
arpl
fistpl
loope
hlt
push
sub
ror
iret
add
jp
inc
ds
mov
int3
and
and
jbe
xchg
fs
rolb
subl
ret
enter
xchg
pop
lea
test
jmp
sbb
xor
adc
in
ljmp
pop
iretw
pop
sbb
mov
cwtl
cs
mov
enter
inc
pop
dec
sub
sbb
cmp
xchg
mov
cmp
neg
or
dec
dec
sub
sbb
iret
pop
jg
ss
inc
cmp
mov
ss
mov
pop
jg
or
call
dec
jne
push
pop
mov
fwait
sti
push
mov
dec
test
push
rolb
push
cmp
mov
shll
xchg
ror
aas
jno
jg
es
and
out
inc
int3
cmp
ja
cmp
add
push
out
dec
mov
add
lahf
xor
in
mov
mov
leave
xchg
or
add
es
fstl
out
mull
xchg
mov
leave
sub
mov
mov
fs
call
repnz
push
xchg
outsl
mov
push
push
iret
test
aaa
pusha
pusha
test
sub
cmc
daa
sub
add
pop
or
xchg
xchg
popf
repz
adcl
mov
mov
nop
ficompl
or
cltd
or
xchg
and
sub
fistpl
ret
out
iret
fwait
pop
cmp
xchg
and
cltd
iret
mov
sub
mov
sub
enter
xchg
pop
inc
dec
es
pop
lret
jg
jg
add
mov
les
outsl
sarb
adc
dec
pushf
and
cs
mov
fisttps
jbe
inc
dec
fistpl
stc
xchg
and
adc
pop
pusha
lcall
mov
xor
or
cltd
mov
loope
adc
and
xchg
xchg
cmp
jne
push
ja
adc
bound
decl
sub
add
and
fcmovnu
cmpsl
nop
cmp
test
rolb
int3
loop
mov
dec
and
test
stos
outsl
pop
stc
std
test
mov
push
sub
fimuls
jmp
push
xchg
loope
or
jae
jnp
lds
cmp
imul
stos
aam
sbb
jp
adc
dec
pop
out
sub
pop
or
fildl
adc
sbb
out
clc
add
mov
mov
in
sbb
jl
data16
int3
jo
push
mov
sub
in
fstpt
push
ror
mov
inc
or
pop
push
iret
or
sbb
or
dec
push
nop
fistl
or
int
test
jo
scas
inc
sbb
pop
faddp
call
push
ret
lods
aad
xchg
mov
or
daa
pop
aam
or
lret
inc
sbb
inc
mov
pop
icebp
adc
and
lods
enter
pop
sar
imul
in
push
ja
sub
and
adc
test
js
cld
mov
mov
dec
push
sub
iret
out
imul
xchg
lret
push
inc
mov
inc
icebp
mov
add
cmpsb
shl
xor
cmpsl
jae
les
pop
movsl
test
jle
mov
out
ja
mov
cmp
jg
push
dec
mov
fcoml
push
push
cmp
sbb
or
imul
mov
fwait
js
inc
pop
and
add
or
jmp
adc
inc
jno
es
push
pushf
xchg
fsubr
in
jnp
add
stos
xchg
leave
mov
sbb
push
test
ror
and
mov
and
fcmovnbe
fcomip
xor
cwtl
sub
mov
jns
pop
push
sub
pop
cmp
jae
fidivl
mov
in
leave
add
ljmp
mov
and
ja
es
cmp
mov
rorl
sti
pop
loop,pt
int3
push
xchg
outsb
and
pusha
addl
sbb
addl
shlb
mov
fstpt
sbb
ret
push
les
push
xchg
xchg
gs
daa
pop
inc
aam
ds
xchg
sub
inc
mov
xchg
push
mov
inc
jl
jp
addl
push
or
outsl
xlat
inc
xchg
push
stos
mov
test
insb
cwtl
xchg
dec
jg
decb
push
iret
xlat
dec
sbb
mov
rorl
mov
jo
push
and
or
insl
sbb
leave
mov
cld
fldt
ret
dec
mov
in
sbb
roll
shl
icebp
sbb
iret
aam
add
mov
sub
nop
cmc
test
sti
mov
cmp
jle
jb
out
pop
cmpsb
in
and
push
mov
cmpsb
xchg
and
stos
lahf
std
mov
mull
ficompl
mov
stos
iret
adc
push
scas
xchg
xchg
jne
dec
cmp
ja
pusha
mov
rorl
or
dec
pop
incl
pop
mov
cmp
rorb
xchg
inc
xchg
sahf
xchg
xchg
or
fcmovnbe
pop
push
insb
push
xchg
push
outsl
notb
sub
jb
outsb
pop
data16
pushf
iret
sub
lods
pusha
test
sbb
mov
cwtl
mov
pop
test
sti
mov
loopne
fisubrl
xor
push
testb
cmpsl
inc
inc
push
push
mov
fdivs
shrl
sbb
xchg
call
adc
mov
and
xchg
ss
and
mov
sbb
lret
add
dec
ret
in
or
jmp
test
rorb
pop
std
mulb
mov
push
aad
fistpl
roll
sub
xchg
mov
sub
fisubl
sub
insb
dec
push
cmp
sub
inc
mov
and
call
sbb
sbb
sbb
push
shll
mov
dec
sbb
test
iret
mov
push
xor
mov
in
test
movsl
dec
xchg
call
pop
dec
mov
hlt
jmp
xchg
push
popa
adc
mov
fidivl
adc
into
dec
lock
leave
dec
arpl
mov
mov
iret
cmp
jmp
jle
or
std
xchg
dec
dec
rorl
jmp
call
inc
faddl
mov
cmp
and
dec
imul
fadds
into
lret
pop
sub
fbstp
int3
sbb
add
addb
cli
xor
xchg
aaa
sub
lret
or
es
stos
ret
mov
iret
mov
xchg
mov
xchg
stc
jecxz
ret
shr
pusha
push
and
ror
adc
pop
dec
push
mov
dec
mov
fwait
leave
dec
xchg
insb
xchg
push
push
fcomp
lods
insl
mov
mov
fsts
inc
repz
jmp
jle
sahf
xchg
dec
sub
and
inc
fisttpl
sbb
int
sub
cltd
iret
xchg
data16
xchg
pushf
cmp
lea
popa
in
pop
xor
enter
mov
adc
les
shll
arpl
mov
test
popa
inc
mov
mov
sbb
mov
jne
iret
or
jecxz
push
xorl
xchg
iret
and
push
outsl
or
cwtl
hlt
push
scas
jbe
jnp
xchg
aam
movsb
gs
out
test
adc
iret
fnstsw
lods
mov
xor
push
rcll
dec
xorb
jmp
loope
cmp
xchg
push
push
in
js
popf
cmc
xchg
sub
shlb
sti
xor
fcomi
out
add
dec
subl
rcrl
ja
fstpl
adc
pop
sti
xchg
js
mov
push
rcrb
mov
imul
int3
sbb
nop
sarl
fstpt
pop
call
scas
iret
ret
fidivs
ficompl
push
or
push
cmp
scas
jge
stos
rcr
cwtl
fstpt
in
cmp
pop
mov
sub
mov
shll
ja
push
pop
stc
pushf
mov
outsl
fcmovnb
or
and
fnstenv
iret
imul
rcrb
cli
fistpl
fldenv
std
enter
inc
mov
mov
pop
sbbl
lds
iret
lret
cmp
ljmp
push
lret
xor
rolb
aaa
add
dec
xchg
pop
fisttpl
fadds
iret
mov
popf
mov
int3
push
inc
xchg
xchg
add
daa
xchg
pushf
mov
or
leave
gs
push
jge
movsb
mov
push
test
cmpsb
push
test
in
cli
loop
push
nop
mov
pop
push
andl
stos
addr16
fimuls
stos
mov
sbb
in
push
cmc
loop
fidivrl
scas
and
or
movsb
mov
or
jnp
mov
jbe
mov
fiadds
std
mov
test
aam
and
mov
outsb
fwait
stos
push
aam
mov
inc
sub
jg
fistl
jbe
pop
iret
pop
into
rcr
sub
out
sbb
xchg
mov
xchg
outsl
fsubrs
cmc
lret
shrl
mov
adc
xchg
pusha
mov
stos
lahf
into
adc
push
push
ret
cmp
faddl
fimull
sub
mov
test
jg
adc
incb
pop
cmp
push
xchg
clc
cmp
pop
dec
cmp
fistl
into
jge
jmp
lods
fmuls
mov
jmp
in
inc
iret
aas
je
loop
or
faddl
xchg
hlt
pushf
roll
pushf
cmp
xchg
add
int3
jbe
fcmovnbe
push
xor
xchg
nop
mov
out
mov
je
push
repz
test
pusha
scas
mov
mov
call
adc
popf
lea
pusha
imull
jg
jae
push
in
test
or
xchg
fdivs
insb
daa
cmp
sar
test
dec
xor
int3
mov
testl
fadds
stos
scas
inc
out
xchg
inc
adc
xchg
xor
xchg
ja
andb
dec
jo
or
stos
sub
test
mov
testl
push
xchg
dec
les
mov
iret
xor
jo
lret
xor
pop
mov
shlb
mov
xchg
xchg
push
fildl
bound
adc
ds
jno
and
push
or
xchg
loopne
dec
ljmp
mov
or
push
pop
push
mov
into
pusha
mov
cmp
imul
jle
loopne
push
jl
popf
dec
cmpsb
pop
pop
and
xchg
fbld
fcomi
mov
into
add
dec
das
adcl
iret
jmp
loopne
fmuls
in
and
pop
inc
dec
dec
mov
jl
dec
push
or
movl
lret
jo
cltd
test
into
jae
sub
addr16
ret
iret
adc
hlt
pushf
and
sub
andb
dec
mov
add
cmovne
enter
mov
jb
xor
ljmp
inc
xchg
int3
jo
cmp
xor
aad
loop
or
mov
jg
inc
push
dec
in
and
sbb
iret
nop
and
mov
dec
les
lods
mov
les
iret
dec
mov
mov
mov
lds
sbb
xor
xchg
lods
cmp
mov
xor
xchg
add
sbb
fwait
ds
hlt
test
cli
clc
mov
insl
negb
inc
jb
test
pop
xchg
mov
cmp
movsb
sbb
sbb
insl
lahf
sti
mov
cmp
pusha
jbe
andl
out
push
in
push
push
xchg
icebp
into
adc
fildl
lcall
outsl
jnp
loope
ljmp
xor
dec
cmp
jecxz
sub
mov
test
push
stos
xchg
test
cmp
adc
jmp
fiaddl
jns
fmul
insb
fidivrs
scas
std
adc
xchg
ljmp
mov
push
ret
aad
nop
int
mov
xor
lods
and
movsb
nop
pop
iret
mov
jns
imul
mov
inc
xchg
je
out
nop
mov
sub
push
enter
xchg
jns
sahf
xchg
jp
pop
sub
pop
sub
iret
addr16
std
cli
imul
add
mov
pop
std
jg
xchg
loopne
sbb
mov
enter
out
mov
xchg
arpl
insl
es
fsts
fcompl
movsl
popf
pop
mov
leave
repnz
fucomi
ret
or
xchg
inc
lahf
jmp
clc
fldt
dec
mov
je
scas
js
inc
addl
cli
and
mov
repnz
data16
leave
cmp
fldt
ret
iret
cmp
scas
clc
ror
xchg
daa
cmpsl
les
rclb
pop
out
stc
ljmp
dec
ja
decl
cmp
daa
enter
dec
jp
int3
inc
fdivrs
stos
adc
test
xchg
lds
mov
xchg
es
pop
push
jo
dec
jnp
pop
mov
fwait
inc
dec
test
mov
cmp
fisttpl
add
dec
or
or
scas
xchg
stc
mov
pop
push
out
clc
ret
cs
xchg
add
xor
inc
jl
mov
test
inc
ror
cltd
add
iret
enter
or
mov
daa
mov
add
mov
pop
push
mov
push
xchg
lahf
push
notb
jle
popf
mov
xor
jmp
movhps
fistpl
mov
test
aas
sti
push
pop
fmuls
mov
ret
cmp
xchg
outsb
push
inc
mov
mov
es
and
and
into
xchg
mov
arpl
sub
xchg
leave
xor
push
dec
aad
into
fistpl
insb
dec
test
rorb
mov
adc
jg
cli
push
out
xor
je
adc
das
outsb
mov
xor
pop
ret
cmp
pop
fcomi
pop
jecxz
jle
sbb
loope
adcb
dec
ret
ja
adc
test
adc
fsubl
fnstsw
xor
fldt
test
add
push
cmpsb
in
mov
xlat
mov
mov
fcoms
sbb
push
fmul
xchg
mov
lea
stc
shlb
xchg
lods
loope
xchg
leave
xchg
rorl
hlt
cmpsl
xchg
mov
xchg
mov
into
sbb
in
cli
not
inc
jne
cld
xchg
in
daa
inc
mov
into
mov
cmp
dec
mov
loope
xor
xchg
data16
or
sbb
roll
fidivrl
push
mov
dec
jecxz
pushf
hlt
test
mov
dec
inc
movsb
xor
test
leave
mov
inc
fiaddl
scas
xchg
cmp
inc
jo
cmp
addl
out
jmp
ror
nop
cmp
xchg
adcb
int
mov
or
xchg
xor
fisubs
xor
ja
xchg
pushf
cmp
cmp
pop
mov
hlt
gs
aas
or
sub
outsb
inc
push
dec
mov
inc
mov
push
sub
daa
sbbl
movsl
sahf
or
or
out
into
dec
f2xm1
sub
inc
int
xchg
dec
bnd
and
push
mov
mov
mov
test
xor
sbb
mov
cmp
and
test
inc
jg
add
dec
sbbl
out
ficoml
fists
jmp
dec
xchg
xchg
sbb
adcl
xor
mov
test
dec
hlt
add
jle
jmp
jl
cmp
jecxz
push
fldenv
sti
jmp
dec
sbb
xchg
rorl
iret
ds
testl
adc
jmp
leave
xchg
les
sti
outsb
push
lcall
in
xchg
xorl
push
gs
insl
mov
adc
std
sbb
xor
jl
stc
sbb
adc
and
enter
iret
ret
orl
mov
in
xor
into
mov
jp
test
popf
inc
pop
xchg
cmp
push
out
mov
jb
mov
rcr
out
sbb
mov
inc
push
iret
adc
leave
add
dec
pop
push
push
fcmove
inc
leave
cmp
arpl
std
fimuls
pop
out
xchg
xor
push
iret
cld
adc
test
inc
adc
hlt
das
sbb
test
xchg
sub
je
fmull
fadds
cwtl
inc
pop
cmp
ret
iret
xor
mov
xor
cs
aas
lea
ds
in
pop
push
or
in
stos
pop
sbbb
add
inc
inc
dec
sbb
popl
test
sub
pop
outsb
or
and
pop
dec
or
movsl
lods
xchg
or
jne
fidivl
jmp
lds
adc
shll
jne
fistpl
sub
shll
jecxz
xchg
in
das
sub
test
and
test
jo
push
or
aas
adc
test
cli
adc
sub
sub
cmp
fistl
jp
jne
shll
xor
cmp
jle
pop
xchg
sub
movsb
lods
push
je
pop
fwait
xchg
out
icebp
cmpsb
jb
push
xchg
push
shrb
stos
in
test
fwait
in
mov
fmuls
push
xchg
loop
sub
ss
pop
or
lods
or
int3
mov
into
inc
stc
xchg
jo
xchg
or
xlat
xor
inc
mov
into
xchg
rclb
fistl
dec
arpl
negb
divb
xlat
push
mov
mov
adcb
fidivl
mov
or
les
xchg
mov
pop
rol
xor
lahf
mov
or
dec
int
mov
js
and
lea
and
add
fwait
popa
test
stos
iretw
xchg
incb
cld
add
and
pop
dec
xchg
jmp
loope
mov
jle
lods
push
mov
out
frstor
test
cmpsb
ror
mov
popa
adc
jnp
xchg
into
neg
push
rolb
inc
clc
xchg
int3
fs
xchg
push
mov
fisttpl
aad
pop
add
push
iret
mov
sahf
movsb
pushf
jg
cmp
mov
sbb
negb
ja
test
fwait
xchg
inc
sub
das
push
xchg
sbbl
sub
loope
cmc
fildl
push
add
mov
and
ret
mov
es
jae
rolb
xchg
into
fwait
iret
or
jne
adc
cmp
mov
in
idivb
mov
test
or
ret
hlt
sbb
xchg
xor
fdivrl
add
int3
mov
and
ss
mov
add
xchg
rcrl
fmuls
scas
jae
imull
xchg
and
xrstor
iret
or
in
in
mov
test
cwtl
imul
dec
xchg
ss
xlat
daa
shll
dec
fstpt
jg
push
iret
ficomps
adc
inc
cmpl
jns
shrl
iret
ret
xchg
adc
pop
pop
fs
dec
sub
movsl
in
xchg
inc
mov
add
outsb
cmp
cli
mov
sbb
shll
cmpb
arpl
mov
test
enter
pop
xchg
sbb
xchg
push
mov
xor
ds
xchg
arpl
pop
gs
ja
pop
fisttps
xchg
sbb
inc
lods
adc
call
push
mov
jle
cmp
xchg
add
in
imul
mov
xchg
mov
aas
mov
sar
dec
aam
repz
cld
nop
in
ljmp
lret
dec
pop
mov
xchg
cmc
adc
sbb
xchg
add
pop
in
pop
nop
xchg
mov
dec
pop
pop
lods
cltd
ret
out
sbb
iret
mov
mov
test
adc
call
jns
push
pop
xlat
aas
jl
std
pop
lds
lds
fbstp
add
xlat
fcoms
mov
int
push
imul
sbb
sbb
sahf
mov
or
out
dec
xchg
adc
aam
mov
lea
fstpt
cs
iret
sub
xchg
cmp
out
test
les
xchg
push
pop
mov
shrl
sub
lea
xor
jnp
lock
pop
push
fildl
fcmovnbe
data16
add
sahf
sbb
sbb
pop
pop
push
or
in
movb
leave
fldl
nop
mov
lock
push
jg
push
sbb
sub
dec
int3
dec
cwtl
repnz
push
out
aad
int
fwait
xchg
push
test
sub
enter
subl
fs
mov
call
int3
out
std
jo
lcall
gs
cmpsl
scas
fidivl
arpl
xchg
aas
fstl
push
sahf
push
adc
mov
mov
mov
xchg
mov
idivl
sbb
push
inc
sub
in
out
add
push
arpl
test
jne
inc
xchg
mov
lock
fistl
movaps
test
or
sub
and
push
movsb
fdivrl
and
aad
into
outsl
std
pop
test
push
test
notb
push
push
cwtl
sub
jge
jmp
jo
fidivrl
cli
into
mov
cmp
lods
dec
and
arpl
push
adc
and
jae
lahf
aaa
fildl
pop
fcoms
arpl
iret
or
xchg
sbb
pushf
leave
mov
cmp
ret
fdivs
pushf
data16
jae
fstp
insl
lds
xor
sub
push
add
sbb
sbb
fsubrl
push
xchg
sbb
mov
test
ret
orl
mov
jl
mov
pop
enter
in
adc
stos
iret
negl
xlat
leave
or
cli
stos
mov
out
imull
enter
mov
in
fs
test
inc
adc
xchg
jecxz
jmp
or
vextractps
test
or
xor
stos
outsl
cmp
loope
sahf
fwait
push
mov
test
out
pop
mov
xchg
in
add
icebp
ss
fistl
or
outsb
inc
bound
adc
jb
int
xchg
jne
imul
mov
fcomi
loope
mov
and
popl
cmp
int3
cmp
mov
jecxz
out
cmc
push
sbb
xchg
cmp
nop
xchg
shll
fsts
mov
insl
icebp
jp
cmpsl
push
ljmp
mov
sub
cmpsb
sub
ror
xchg
hlt
lret
je
cli
popf
mov
mov
adc
sqrtps
mov
movsl
ret
xchg
adc
xchg
shlb
aaa
add
pop
fistl
insl
loope,pn
or
push
iret
into
mov
and
pushf
std
cmp
pop
xchg
cld
out
fprem
pop
sbb
jmp
in
dec
adc
xor
fs
out
cmp
rcll
xchg
push
xchg
fwait
mov
stos
std
fisubrs
pmulhw
mov
ret
imul
xchg
repz
pop
jo
adc
std
insl
ljmp
dec
add
jg
adc
mov
jl
jle
int
push
add
jl
popf
ret
iret
adc
test
xchg
push
aam
les
jne
iret
sbb
sahf
xchg
cmc
test
inc
dec
xor
xchg
mov
push
add
dec
lret
sbbl
mov
sbb
repz
push
out
xor
out
test
adc
dec
pop
stc
ret
xchg
dec
mov
push
push
int
xchg
xchg
xor
lds
inc
test
jne
cmp
pop
push
into
fwait
mov
mov
adc
cmp
aaa
jp
int
or
fbstp
out
fsubs
or
lods
stos
insb
rsm
or
or
int
int
mov
cmp
lahf
jmp
adc
cltd
leave
nop
es
mov
js
pop
xchg
push
pop
or
adc
in
xchg
jecxz
mov
inc
fistpl
fstp
js
leave
pop
iret
cmp
jo
mov
push
test
or
dec
mov
jne
mov
ss
xchg
jge
and
or
ficompl
sarl
or
xchg
sti
jo
jecxz
ss
sbb
lods
jo
or
mov
out
or
xchg
lcall
sbb
les
fwait
xchg
subb
mov
jno
dec
std
dec
es
jb
xchg
sti
mov
int3
std
stc
loop
fldt
and
sbb
stos
mov
flds
xchg
add
lcall
je
pop
xchg
inc
lea
sbb
pop
jae
cmp
adc
sbb
iret
repz
push
dec
inc
add
inc
ja
sub
sub
jno
xchg
out
mov
xchg
pop
rcll
fs
mov
sub
js
inc
iret
mov
orl
fmulp
jb
lahf
mov
pop
cmp
xchg
and
test
push
dec
mov
cmp
das
jo
repz
sub
ja
out
shll
mov
int
or
repnz
loopne
or
stos
adc
gs
xchg
xchg
adc
dec
std
jno
das
lahf
in
push
mov
int
rorl
xor
test
notb
sbb
out
loop
push
push
push
inc
les
jnp
loopne
call
repz
dec
add
or
or
mov
ss
mov
and
xchg
scas
loop
stos
cmpsb
shrb
xchg
pop
adc
xchg
rcrl
pop
lahf
dec
and
in
xchg
out
dec
cld
aaa
jno
into
pop
sbb
xchg
lahf
jne
sub
xchg
cmpsl
or
add
ret
sub
sbbb
into
inc
shrb
mov
jp
scas
jne
aad
xor
or
pop
test
imul
cmpsb
outsl
pop
mov
aam
loopne
inc
loope
fildl
mov
sub
andb
xchg
test
fistl
lods
daa
adc
mov
stos
sbb
loop
xchg
inc
cmpsl
cmp
leave
xchg
rdpmc
insb
movsl
movsl
mov
fisttpl
xchg
sahf
outsl
in
adc
and
xor
mov
mov
rorb
adc
fmul
in
orl
inc
mov
cld
add
rcll
sbb
gs
cmpsl
ss
xor
xchg
iret
ret
mov
dec
adc
add
xchg
fwait
scas
push
aam
sub
subb
fisubrs
pop
lea
sahf
jge
mov
mov
insl
adc
sti
mov
xchg
sub
js
mov
pop
fimull
push
add
jmp
lea
es
push
sbbl
das
ljmp
jge
loopne
shl
mov
cmpsb
decl
xor
adc
pop
mov
mov
and
data16
sarl
xchg
fwait
outsb
test
fidivl
icebp
mov
out
ds
xchg
xchg
pop
mov
in
into
fildl
rcr
lock
xchg
aaa
xchg
mov
das
call
cmp
push
fsubs
push
iret
jge
icebp
mov
cmc
aad
xchg
loop
imul
fmulp
fistl
lods
lds
cltd
jmp
mov
jne
test
inc
xor
js
add
gs
mov
xor
or
inc
jo
cmp
into
leave
xchg
mov
xchg
jge
mov
fistpl
and
cmpl
push
mov
jne
dec
xor
inc
cmpsl
imul
negl
adc
push
xor
mov
shr
mov
fsubl
push
inc
dec
add
jl
and
scas
dec
leave
push
dec
push
jle
popl
mov
pop
xor
or
xchg
rcll
sub
ss
push
scas
pop
push
dec
testl
pushf
mov
popa
mov
aam
nop
aam
int
mov
mov
xchg
lods
scas
pop
lods
mov
fwait
sbb
pop
sub
loope
ljmp
sbb
outsb
je
aam
imul
mov
xchg
jnp
jbe
xchg
insl
mov
and
and
aad
ret
ljmp
pop
in
jns
sbb
stos
cmp
jbe
xor
adc
pop
sub
movsb
mov
fs
mov
xchg
xor
mov
inc
add
mov
jno
mov
aas
sub
out
xchg
fstp
int3
cmpsl
inc
lea
xor
jb
xor
jmp
pusha
dec
or
ret
ret
call
daa
push
aaa
add
jnp
fistpl
mov
cmc
xor
xchg
jg
jb
xchg
pop
inc
jno
push
pop
popf
xchg
adc
mov
cmp
xchg
mov
cmpsb
sbb
mov
xchg
and
outsl
jne
jae
loop
jmp
mov
ret
xchg
jg
inc
mov
movsl
inc
mov
shll
adc
bound
and
lcall
aas
dec
mov
pop
movsb
pop
cwtl
push
cwtl
cmp
xchg
pop
lods
int
rcrb
xchg
sbb
push
in
std
daa
and
enter
mov
enter
fnstsw
add
leave
adc
sbb
nop
pusha
and
mov
std
int
mov
xchg
xchg
adc
ja
mov
adc
push
insl
je
js
add
xchg
dec
xor
cs
xchg
xchg
cmpsl
mov
popf
xchg
dec
imul
cwtl
mov
aas
test
mov
jecxz
cmc
xchg
cmp
icebp
aaa
push
inc
sbb
inc
push
xchg
sbb
sub
out
xchg
test
mov
sub
js
jae
test
xlat
insl
iret
es
insb
andl
or
icebp
dec
adc
pop
dec
sbb
push
repz
stos
xchg
fcmove
je
mov
into
out
addr16
add
std
xchg
or
sub
shlb
dec
ffreep
push
or
xlat
jp
xchg
jp
lret
ds
pop
push
or
rorb
in
not
shrl
inc
sbb
daa
xor
outsl
test
xchg
in
pop
outsl
or
ficomps
fistl
mov
gs
js
mov
repnz
mov
ficoms
fdivrl
lds
push
or
adc
adc
mov
lods
into
cmp
addr16
out
add
dec
ljmp
movsl
mov
inc
mov
fstl
lcall
jmp
dec
test
xor
cmp
pop
dec
mov
xchg
rcrl
or
cmp
aas
popf
je
iret
out
and
fisubs
jnp
test
adc
push
pop
pop
iret
fbstp
test
mov
push
sahf
imul
pop
xchg
rorb
xchg
cwtl
add
inc
xchg
fisubrl
xchg
iret
xchg
repz
int3
repz
xchg
pusha
bnd
mov
iret
insb
aas
xchg
es
in
sub
ret
and
shrl
sub
les
lock
lahf
mov
test
ss
in
adc
and
in
sarb
out
pop
xchg
xchg
popa
mov
push
xor
insb
dec
jmp
in
push
movsl
mov
pop
out
pop
mov
inc
jecxz
sbb
xchg
pop
and
jle
and
jmp
dec
fidivs
cmp
mov
and
dec
les
mov
push
push
ds
sbb
fildl
gs
insb
xchg
mov
pop
in
adc
xor
iret
icebp
xor
jno
xorb
test
jae
shr
outsb
cld
test
into
loop
mov
repz
repnz
mov
push
inc
mov
xchg
sub
test
jmp
push
daa
inc
inc
cmpsb
stos
sub
inc
iret
lea
aam
jecxz
mov
lret
lods
fistl
in
imul
ds
outsb
pusha
int3
add
pop
test
out
scas
sbbb
imul
pop
dec
ljmp
int3
fcomps
iret
stc
cmp
cmpsb
xchg
jp
sbb
pop
jno
sbb
inc
loop
mov
inc
xchg
out
pushl
xchg
mov
orb
adc
cmp
fisttpl
fadds
pop
insl
nop
rcrl
mov
pop
cmp
pop
je
add
mov
out
add
xchg
xor
lea
insb
cmp
lods
xchg
movsb
jp
jp
outsl
aam
inc
sahf
into
ja
jne
scas
lahf
icebp
add
jo
iret
inc
mov
std
xchg
notl
xchg
adcl
fildl
mov
test
cmpsl
mov
rcll
xchg
jge
add
ljmp
fldt
das
xchg
cs
lock
loop
into
enter
jae
iret
dec
movsl
and
pop
cmp
push
cmp
xlat
scas
mov
das
outsb
push
jbe
xor
push
add
add
or
xchg
repz
pop
dec
test
shll
fldcw
jmp
push
pop
jb
and
xor
cs
lahf
shld
and
mov
into
gs
jle
pop
pop
mov
ret
fstpt
jp
lret
iret
int
ja
dec
adc
rorb
jl
in
mov
mov
jb
hlt
subb
jle
cmpsb
out
and
arpl
xchg
jbe
lds
lcall
test
loope
push
iret
call
cmp
test
in
and
mov
sbb
jp
cwtl
ficoml
sub
imul
xchg
aad
dec
pop
pop
and
mov
push
mov
xchg
or
aaa
fs
xchg
hlt
xchg
pop
xchg
xlat
xor
xor
sub
add
mov
xchg
jecxz
sahf
mov
cmp
pand
cwtl
jno
push
dec
jbe
jge
xchg
mov
pop
daa
sbb
jecxz
xchg
xlat
or
iret
adc
negl
pop
cmp
jg
sbb
fs
jb
imul
and
cmp
xlat
pop
sbb
or
test
lea
push
mov
es
cmpsl
fs
dec
pop
dec
adc
inc
lret
daa
iret
je
insl
jb
or
push
push
add
je
out
iret
and
in
inc
mov
popa
lods
hlt
push
add
loop
fidivs
and
dec
hlt
or
outsb
push
push
cltd
xchg
adc
xchg
pop
stos
jne
dec
cwtl
std
int
or
iret
rcll
cmp
subb
jmp
fisubrl
iret
fs
mov
mov
mov
cmp
sbb
jne
bound
push
or
push
cltd
imul
or
fldl
adc
fisttpl
xor
sbb
inc
sub
fcmovnb
inc
jns
xchg
mov
pop
bound
lea
xor
mov
loope
dec
sbb
add
and
adc
addb
cmp
into
mov
cmp
pop
popa
inc
fucomi
out
mov
loope
ret
inc
divb
jb
jae
cmp
sbb
mov
add
xchg
scas
popf
xchg
outsl
lret
rcr
adc
into
iret
mov
mov
lds
outsb
push
test
test
es
jns
and
jg
mov
mov
mov
iret
jmp
inc
lods
pop
aaa
fldenv
lods
notb
enter
xorb
and
jno
aam
adc
dec
int3
mov
xchg
cmpsl
and
sub
test
pop
push
push
xchg
or
hlt
jae
je
inc
mov
test
push
push
xchg
jmp
sbb
inc
es
inc
mov
into
ja
mov
pop
rcr
in
adc
or
pop
sbb
iret
test
mov
xchg
stc
sub
leave
test
outsl
lret
ja
fsts
lods
jle
nop
loop
les
xchg
mov
mov
into
add
shl
inc
adc
inc
repz
jo
jle
scas
push
xchg
and
push
lret
add
sub
adc
xchg
jge
dec
mov
imul
sub
mov
into
and
rol
sbb
mov
fdivl
ret
repnz
dec
iret
in
mov
dec
js
mov
lcall
iret
call
cmp
dec
push
insl
dec
pop
pop
xchg
jne
mov
stos
jae
pushf
inc
xchg
dec
fidivrl
shrb
in
cwtl
cmp
faddl
xorl
pusha
fdivrs
dec
adc
mov
je
pop
lds
out
pop
and
fistl
lcall
or
add
mov
cmp
add
add
xchg
dec
or
stos
dec
clc
jle
shrb
lea
add
call
icebp
dec
jmp
adc
sub
movsb
fwait
sub
jg
jne
push
repnz
lret
dec
sarl
dec
push
sub
jns
dec
push
testb
test
xchg
pop
or
dec
pop
xchg
ja
insb
lods
dec
cli
push
aas
add
jb
push
xchg
lret
xchg
jecxz
xchg
and
arpl
fiaddl
mov
or
aaa
fdivs
xchg
lds
outsl
push
mov
ljmp
aad
das
jmp
int
test
fsubs
jbe
sub
mov
movsl
xchg
xchg
pusha
insb
mov
jg
push
fsubl
pop
mov
sub
pop
jne
xchg
dec
xchg
xor
in
mov
imul
push
sbb
daa
sbb
sbb
sbbb
jmp
fwait
lahf
fisttpl
pop
hlt
int
jns
test
xlat
cmp
and
mov
push
int
test
int3
adc
stc
mov
xor
pop
imul
sbb
bswap
jo
cltd
test
loop
mov
fcmovnb
loope
aas
jbe
fldt
scas
pop
cmp
xchg
xchg
leave
mov
fcmovu
mov
fildll
lock
faddl
mov
mov
sub
ret
inc
xchg
cmp
insb
cmp
jb
in
iret
pop
dec
pushf
insl
push
jp
in
test
rclb
jg
mov
roll
cs
cld
test
js
cltd
fadds
and
push
shll
or
cli
out
mov
mov
cmpsb
js
adc
in
or
cmpsl
sub
fwait
mov
xchg
and
repz
ret
arpl
sarl
push
sbb
and
rorl
sub
pop
mov
pop
fistpl
add
enter
inc
in
xchg
jl
loopne
pop
popf
push
or
adc
push
repnz
xchg
mov
sub
cld
mov
cmp
inc
fstpt
ja
fwait
push
jl
dec
test
int3
mov
bound
or
jg
mov
fdivr
cmp
sbb
jb
or
xor
or
xchg
cmp
adc
inc
jp
iret
dec
push
pop
jns
mov
test
and
xchg
jnp
test
lock
mov
icebp
and
and
mov
adc
scas
mov
test
stos
xor
cmpsl
xchg
psrlq
mov
out
adc
dec
in
xor
add
dec
pop
xlat
dec
push
in
inc
xchg
adc
in
fwait
xchg
iret
xchg
out
sub
repz
fldt
jmp
out
xchg
mov
aam
jnp
popa
cmovge
add
xchg
fbstp
in
test
cmc
mov
bound
xor
xchg
push
dec
xchg
push
mov
push
mov
les
in
lahf
sub
adc
cmp
testl
neg
push
jmp
sub
xor
in
mov
in
sub
outsb
push
fs
loop
adc
push
mov
sbb
push
jb
addr16
int3
sbb
mov
xor
or
rcl
adc
fcmovnu
push
dec
dec
addr16
jg
iret
pop
mov
pop
dec
dec
sahf
sbb
sub
and
lods
mov
test
sbb
inc
gs
mov
into
or
lret
xchg
jae
cmp
add
mov
out
mov
cmp
loopne
xchg
push
lahf
dec
cmp
ret
pop
mov
mov
mov
fcmovu
repz
dec
pop
fcmove
clc
daa
cmc
shl
inc
inc
xor
outsb
jmp
xchg
sbb
mov
stos
or
jge
rcl
aam
sbb
iret
cld
inc
sti
cmpsl
imul
xchg
jnp
pshufw
adcl
and
xlat
js
aam
jp
sub
xchg
push
iret
out
sub
or
lock
ljmp
into
push
stos
xchg
adc
das
xor
int
jge
sbb
adc
or
flds
pop
lods
sbb
dec
xchg
inc
push
repnz
and
cwtl
mov
stos
lock
or
xchg
pushl
nop
push
and
sub
clc
aad
cmp
test
roll
mov
mov
cmp
mov
dec
jno
mov
in
scas
test
sbb
and
in
sub
jns
popa
stos
or
jb
xor
repnz
and
adc
cmc
out
jg
das
dec
movsl
jns
loope
mov
lcallw
sarb
imul
xor
cltd
jmp
adc
mov
fldt
jmp
loopne
sbb
pop
enter
fs
les
stc
add
cmpsl
push
and
les
adc
add
pop
push
xor
arpl
jge
mov
dec
dec
jbe
imul
sub
jle
mov
leave
adc
xchg
mov
pop
fs
cltd
inc
add
into
push
push
arpl
mov
push
pop
and
ljmp
bound
sbb
lea
es
and
push
lds
pop
movsl
dec
into
adc
jnp
outsb
iret
in
or
inc
fdivrp
xchg
dec
push
dec
dec
je
clc
arpl
cli
push
imul
call
mov
mov
inc
or
mov
mov
fcomps
pop
stos
pop
add
dec
xchg
lock
std
inc
xchg
adcl
dec
outsl
repz
xchg
mov
xchg
insb
shll
xor
cmp
outsb
push
pop
add
dec
mov
mov
add
imul
fwait
out
fists
and
iret
mov
adc
sub
cmc
mov
jl
xchg
add
cmp
dec
mov
jle
popf
insb
lock
lret
dec
mov
xorb
leave
cld
pop
jns
imul
js
addr16
xor
push
fwait
sbb
inc
in
xchg
sbb
arpl
sti
shll
mov
and
xchg
jns
and
jecxz
xchg
sub
xor
adc
into
inc
testl
xchg
sarb
adc
clc
mov
inc
jb
and
lret
sbb
and
xchg
sub
fsubrs
movsl
mov
fistpl
btc
pop
xchg
nop
adcl
fucomi
jl
add
nop
sahf
mov
cltd
inc
out
cmpsb
loope
iret
push
mov
mov
idivl
cmp
popf
outsl
mov
testb
xor
scas
scas
enter
lock
push
xchg
push
test
repnz
fldt
push
je
cwtl
xchg
pop
rorl
add
jno
les
adc
mov
jle
or
rcll
addb
es
test
test
inc
imul
pusha
ds
push
int3
call
fisttpl
fmull
fisubrl
adc
push
mov
aas
inc
subl
daa
fsubr
fistpl
push
aaa
xchg
lods
jle
mov
inc
sbb
sub
pop
jb
or
loop
xchg
icebp
addr16
jmp
pop
frstor
jae
subps
leave
imul
jno
xchg
pop
pusha
in
jns
push
cmpb
ja
sti
mov
fistl
push
push
adc
mov
pop
xchg
in
add
outsl
or
shlb
orb
xchg
sub
jmp
sub
lea
stc
mov
cltd
pop
push
stos
cmp
push
adc
jmp
ljmp
mov
mov
xchg
iret
xchg
push
mov
pop
fidivl
xor
lea
add
and
mov
or
jno
icebp
jmp
sbb
int3
mov
sub
xchg
inc
inc
mov
neg
adc
jmp
push
sub
add
mov
xchg
jbe
and
add
or
or
les
iret
dec
jmp
cmpb
add
inc
fistl
add
xchg
loop
mov
out
test
and
pop
aas
push
lret
adc
jo
pop
dec
jle
test
inc
or
sarb
jmp
pop
in
clc
jnp
fistl
and
dec
xchg
out
iret
pop
mov
push
dec
cmpsb
mov
test
mov
ret
push
int
inc
bound
repnz
mov
mov
neg
clc
pusha
bound
cmp
out
pusha
push
lret
push
iret
adc
push
push
mov
or
push
addb
iret
inc
push
jne
or
jmp
stos
add
or
movsb
sahf
adc
sub
stos
and
iret
inc
jge
shll
shrl
xchg
cmp
dec
cmp
addb
jp
es
popa
fnstenv
add
add
mov
es
nop
insl
cmp
inc
jb
jns
lds
pop
adc
sub
sbb
aam
sub
xchg
inc
inc
pop
mov
push
imul
es
scas
arpl
sub
mov
sub
int
ss
imul
aaa
or
pop
or
or
dec
pop
stc
mov
fwait
data16
jae
jmp
testl
xchg
xchg
xchg
fs
inc
xchg
mov
cmp
push
xchg
xor
pop
jmp
mov
fcmovnu
dec
gs
xchg
jb
enter
dec
jae
mov
out
cld
subb
mov
enter
mov
fldcw
out
inc
je
data16
or
sarl
pop
and
fdiv
movsb
rorl
lret
xchg
sbb
jge
xlat
fcmovnu
push
fistpll
adc
test
fimuls
pop
cs
out
hlt
iret
xchg
in
mov
mov
xor
add
adc
push
int
pop
stos
testl
xchg
in
adc
push
inc
jp
daa
test
scas
sbb
out
xchg
push
cmpsl
test
fndisi(8087
push
stc
mov
lret
int3
adc
out
adc
xor
hlt
inc
aam
push
repnz
cmp
imul
aas
and
ja
cmp
movsb
xchg
sar
rcr
xor
jo
push
bound
mov
fnstenv
insl
fwait
xor
rcrl
add
orl
imul
std
sti
xchg
xor
push
bound
call
fidivrl
push
and
xchg
test
jbe
movsl
iret
ret
inc
or
lret
or
sbb
inc
push
lcall
ret
lock
movsl
scas
inc
in
adc
push
push
stos
testl
push
adc
xchg
sbb
inc
hlt
xchg
aad
popf
sahf
outsl
sbb
je
sbb
pusha
add
mov
je
mov
xchg
inc
stos
cltd
xchg
mov
or
xorl
xchg
enter
mov
xor
push
sti
out
aam
sahf
sbb
fs
dec
adc
popa
or
xchg
and
arpl
push
pop
xlat
sahf
xchg
in
push
mov
cmp
adc
pop
js
pop
dec
push
add
stc
icebp
scas
push
xchg
and
inc
or
mov
cmp
pop
push
push
fs
adc
inc
icebp
in
mov
mov
and
nop
in
rcr
xchg
popa
ret
in
out
mov
pop
add
imul
lahf
mov
test
sub
pop
and
das
mov
stc
mov
mov
inc
pop
and
imul
cli
addb
popa
xchg
ds
push
push
lahf
push
fstps
sbb
dec
and
ljmp
pushf
mov
aad
fwait
fwait
in
lock
push
push
iret
arpl
jo
out
cmp
add
std
hlt
adcb
jne
mov
adc
mov
cmpsl
jmp
cmpsb
fwait
dec
push
pop
or
jp
dec
push
jnp
test
cmc
idivb
jnp
out
sub
mov
xchg
sub
push
add
data16
outsl
adc
xchg
flds
stos
add
sbb
jno
iret
inc
xchg
or
int
lods
loop
ljmp
or
popf
push
mov
lds
daa
out
xchg
cld
cmp
es
stc
stos
fiaddl
fwait
call
inc
sahf
popa
test
shl
hlt
fcomi
dec
fs
jnp
movsb
iret
in
in
push
xchg
jg
xchg
add
sub
push
enter
data16
inc
cs
in
imul
ljmp
pop
lcall
test
inc
sub
mov
iret
aas
cltd
dec
je
jo
stos
xchg
sub
pop
xchg
insb
sbb
addr16
push
leave
fldt
ret
sti
adc
stc
insb
shrl
mov
xchg
xchg
icebp
int
or
pop
cmpsl
xchg
mov
lock
das
jo
xchg
xchg
dec
or
xchg
mov
testl
push
fcmovnbe
sub
repz
iret
cmc
adc
loop
dec
cltd
push
jg
bound
movsl
and
das
fcomi
loop
push
dec
mov
dec
adc
jnp
test
orb
mov
xchg
push
stos
jns
arpl
hlt
hlt
nop
inc
xor
sbb
push
dec
fistpl
push
leave
dec
mov
addr16
out
jne
mov
mov
jns
fistl
sti
or
push
add
icebp
divb
xchg
dec
jp
shlb
sbb
pop
mov
iret
mov
mov
into
and
movb
out
cwtl
lods
mov
scas
repz
cmpsl
and
push
scas
cld
int
icebp
sub
xchg
int
xchg
inc
insb
jno
xor
sub
or
sbb
dec
mov
arpl
stos
xchg
mov
pop
cmpsb
xchg
ss
mov
pop
mov
sbb
mov
and
outsb
push
sbb
push
xchg
push
sbb
fimuls
lret
aad
mov
sahf
movsb
fcmovne
sar
fldenv
push
lret
xor
xor
hlt
insb
shl
test
add
xchg
sub
dec
dec
scas
sub
aaa
inc
shll
cltd
fistl
stos
dec
mov
into
and
or
ja
out
in
test
iret
xchg
jae
fldl
push
cmc
mov
push
aas
addb
mov
adc
mov
mov
cmpsl
fisubs
push
idiv
stos
xchg
test
in
xchg
les
std
loop
es
jb
negb
xor
push
rolb
mov
xchg
dec
sbb
notb
add
out
xchg
push
les
data16
adc
adc
sahf
fistpll
pop
out
into
fucomip
jne
addl
adc
int3
xchg
or
jnp
cmp
imul
ret
ret
popf
iret
pop
jnp
xlat
dec
dec
jbe
xchg
mov
mov
xchg
lret
inc
loopne
pop
pop
jl
rcr
jmp
arpl
cli
xchg
xchg
ret
adc
repnz
fisttpl
pop
jg
xchg
lods
pop
in
std
icebp
lods
ja
pop
fcmovnb
or
xchg
lods
inc
sub
mov
xchg
ja
cli
xchg
push
stos
xor
adc
fldt
or
mov
pop
pop
mov
xchg
push
loopne
mov
into
jb
xchg
fbld
test
ror
jnp
xchg
pop
adc
jmp
sbb
ss
jnp
vhaddpd
iret
jb
imul
sbb
hlt
daa
lds
cmpsb
bound
push
in
ljmp
xchg
jecxz
pop
cmp
sub
push
aam
stos
pop
shll
lahf
dec
imul
daa
cli
pop
out
lds
in
push
and
aas
aas
sbb
inc
inc
xchg
push
and
xchg
or
xchg
mov
xchg
into
stc
jg
fmul
repz
test
test
dec
lahf
hlt
cmp
push
mov
fiadds
xor
mov
fistps
pop
push
les
mov
xchg
xchg
repnz
in
or
je
and
mov
cmp
loopne
adc
sub
xchg
cmp
sub
cmp
or
fmul
movsl
jbe
mov
jmp
xchg
roll
inc
stos
pop
xchg
push
cwtl
add
adc
ja
mov
mov
ja
into
pusha
xor
stos
addr16
test
push
icebp
inc
mov
je
movhps
cltd
mov
fcmovnbe
roll
sub
mov
outsb
cmp
mov
dec
push
cltd
int
notl
mov
xlat
leave
and
dec
pop
and
stos
outsb
cmp
adc
dec
xchg
test
lock
cli
iret
xchg
cmp
push
push
jecxz
lahf
dec
sbb
call
dec
js
mov
adc
add
mov
leave
xor
jne
push
jmp
jns
loope
je
cwtl
cmp
adc
dec
insl
out
bound
fisttpl
add
leave
movsb
mov
and
loopne
inc
inc
orl
jno
mov
xor
bts
fldt
not
push
cmp
and
adcb
jecxz
push
fstpt
jne
nop
inc
aad
xchg
iret
outsb
jbe
mov
vpavgb
std
dec
jg
cmp
div
dec
dec
enter
sbb
rcrl
jg
jbe
mov
iret
pop
add
xchg
in
lret
hlt
sbb
cmp
adc
mov
pop
pop
ret
mov
dec
les
iret
int
outsb
test
pusha
adc
data16
add
int3
push
dec
xchg
outsl
aad
adc
sub
xchg
mov
pop
xchg
lret
xlat
out
call
cmc
jp
fadds
cmp
inc
mov
mov
fadd
push
cltd
scas
aad
iret
xor
jno
sbb
les
std
and
cmc
fwait
xor
cmp
addb
jb
add
leave
int3
mov
out
adc
pop
adc
add
sbb
add
jp
pop
sub
lcall
and
loop
adc
insl
jg
xchg
fstl
add
xchg
push
adcl
shll
test
jecxz
pop
dec
cltd
sub
xchg
push
mov
int
loop
sti
addr16
cmp
imul
aam
lods
pop
push
iret
test
mov
dec
aas
xchg
push
mov
les
mov
mov
mov
fistl
gs
mov
iret
sbb
shll
cmpsb
dec
cmp
pusha
iret
lds
negl
xchg
loope
ret
lea
and
out
sbb
xor
stos
mov
sbb
loopne
popa
cmp
sbb
shll
jge
filds
mov
jbe
fbld
mov
pop
fnstcw
cmp
or
inc
in
sub
cmp
adc
rcl
aad
push
pop
pushf
iret
jmp
mov
add
mov
inc
data16
pop
lds
fnstcw
iret
loope
js
dec
lods
rcl
hlt
sub
rep
fists
orb
cmpsl
push
ret
mov
mov
ljmp
pushf
testl
xchg
jb
jmp
adc
jle
fistps
aas
test
jge
xchg
and
xchg
lea
xor
loope
xchg
jle
in
aas
out
nop
clc
cli
mov
fucomi
cltd
push
dec
jge
scas
mov
cld
jp
out
sbb
scas
hlt
adc
hlt
roll
and
out
xchg
mov
mov
orb
aam
cvtdq2ps
out
daa
in
in
xchg
std
pop
pop
fcom
or
gs
ret
mov
mov
sbb
das
xor
enter
push
add
iret
gs
push
dec
dec
bound
and
jle
pusha
mov
ljmp
dec
xorl
mov
push
ljmp
dec
pop
add
notl
fsubs
iret
lahf
or
or
addb
sbb
das
mov
cmp
add
adc
xchg
repnz
xchg
testl
fs
xchg
dec
enter
test
xchg
or
mov
push
xchg
xlat
js
adc
jg
add
jge
push
lods
push
xchg
out
outsb
cmc
scas
fadd
sahf
movsb
mov
xchg
mov
and
push
rorb
scas
sub
lcall
dec
xchg
lretw
pop
push
push
mov
js
data16
xchg
xchg
cwtl
xchg
xchg
sub
pop
pop
lcall
jp
xchg
in
xchg
sbb
enter
and
movsb
scas
or
mov
frstpm(287
mov
popf
sub
fldt
lods
enter
int3
enter
pop
jo
cmp
fistpl
shl
dec
mov
enter
jae
add
pop
in
insl
arpl
sbb
lret
int
dec
inc
sub
pushf
cmp
iret
push
pop
cmp
cmp
mov
mov
dec
jno
xchg
into
pop
cli
popf
loope
mov
cmc
mov
xchg
cwtl
cmp
adc
arpl
ljmp
lret
cld
rcrb
test
repnz
mov
push
int3
repnz
ret
and
arpl
jecxz
in
loop
sbb
mov
xchg
in
jmp
cld
jmp
adc
arpl
outsb
arpl
insl
enter
aaa
and
pop
mov
mov
shlb
ret
xchg
mov
cmp
dec
push
xchg
or
sbb
xor
movsb
adc
rorl
nop
pop
daa
shrb
fisttps
push
sbb
jp
movsb
and
es
rolb
xchg
ret
ja
xchg
js
cmpsl
pop
mov
push
lock
mov
addr16
aad
mov
xchg
pusha
enter
das
cld
cwtl
xlat
adc
outsl
fsts
arpl
jnp
shll
mov
mov
cmp
xchg
in
mov
movsb
in
or
and
and
xchg
xchg
mov
mov
mov
clc
pop
pop
sahf
pop
fcoml
push
cmp
aas
cld
cli
cltd
negb
mov
test
jg
fwait
xchg
and
fstpl
adc
mov
flds
into
aad
sbb
dec
xlat
dec
dec
mov
mov
into
cmp
push
mov
cmp
jecxz
scas
pushf
fmull
and
jge
rcrb
imul
add
mov
mov
dec
lods
lcall
lahf
shrl
push
and
dec
and
adc
adc
add
aad
lods
push
xor
fstpt
adc
fstpl
jecxz
test
jnp
push
jmp
call
flds
outsb
aam
mov
dec
xchg
inc
inc
ret
adc
fnsetpm(287
adc
push
outsb
imul
dec
test
cmp
out
fprem
aam
hlt
ss
cmp
jg
pop
dec
iret
mov
mov
cs
mov
ljmp
jl
cmp
fidivl
jle
push
cmc
out
adc
mov
jbe
loope
call
pop
push
xor
sbb
mov
push
push
push
test
negl
xchg
test
sbb
enter
sbb
lods
cmpsb
xor
sub
xchg
xchg
push
cmp
clc
sti
mov
mov
repz
dec
dec
fistps
iret
enter
cmp
dec
push
test
xchg
inc
rorl
jb
mov
shll
in
int
aaa
cmp
shlb
mov
push
jb
add
dec
and
int3
xchg
adc
fdiv
xlat
mov
dec
sub
and
lahf
sbb
push
mov
push
jp
into
pop
imul
adc
mov
pop
dec
iret
mov
inc
mov
sbb
lods
cmp
aaa
add
test
inc
iret
mov
xchg
dec
lahf
cmpxchg
sahf
adc
data16
jno
sbb
aam
and
xchg
in
rcr
aam
mov
mov
fucom
adc
cmp
push
pop
test
sub
sub
std
mov
sar
mov
aad
aas
mov
in
xchg
sbb
sub
lret
sub
rsqrtps
inc
je
sub
add
decl
test
shlb
adc
mov
adc
aas
pop
sbb
popa
jns
mov
lret
or
xchg
leave
into
sbb
sub
xchg
sbb
adc
mov
or
xchg
cmp
and
inc
xchg
inc
xchg
cmp
mov
sub
sti
repz
insl
dec
sti
jp
je
test
mov
divl
int3
in
xchg
stc
fwait
outsb
pop
shll
loopne
lret
loopne
lret
rcll
adc
lret
jmp
inc
jnp
dec
repz
sub
mov
ret
pop
xor
outsb
mov
or
xchg
inc
mov
jo
sub
dec
sbb
mov
dec
xchg
xor
lahf
xchg
gs
dec
aam
fstpt
nopl
mov
insl
outsl
dec
mov
outsb
lahf
rcl
in
add
iret
stos
dec
movsl
mov
cli
frstor
ss
mov
xchg
xorb
inc
pop
jo
orl
les
pop
xchg
and
jo
pop
fwait
jno
add
xlat
popf
lods
adc
adc
push
mov
dec
cmp
test
jns
mov
aas
fists
xchg
mov
lret
rorb
mov
mov
push
xchg
shr
mov
adc
jmp
arpl
aam
jecxz
add
xchg
push
insb
fiadds
xchg
insl
int3
rorb
push
add
scas
xchg
cs
in
arpl
int
dec
cmpsl
jle
movsl
orb
and
xchg
push
push
fcomps
in
mov
sub
daa
mov
or
sub
int3
sub
jae
rclb
ja
pusha
int3
repnz
adc
ljmp
lods
mov
mov
mov
dec
push
mov
hlt
loopne
iret
add
inc
mov
lahf
mov
or
inc
sbb
imul
rcrl
fs
xchg
clc
dec
daa
dec
fcmovnbe
fcmovne
std
push
aad
jb
stos
iret
push
in
pop
lret
xor
pop
mov
in
fcmovnb
xor
sub
ret
fidivl
iret
add
mov
outsl
or
aad
iret
cmp
pop
rclb
and
stos
test
shll
ror
xchg
mov
sbb
dec
pushf
imul
xchg
push
lahf
sub
push
iret
mov
aaa
pop
adc
cld
cmp
sahf
push
cld
and
jp
testl
lret
fcomi
xchg
xchg
movsl
xor
jl
xchg
int
dec
leave
in
outsb
and
xchg
jge
sub
xor
popa
aam
jg
daa
popf
xchg
dec
test
dec
sbb
int3
lret
insb
fstpt
scas
push
cmc
xor
cmpsl
cmp
xchg
imul
push
mov
and
xchg
mov
aad
inc
xor
out
inc
iret
lock
xor
ds
sub
fs
pushl
dec
lock
xorl
sbbl
fistl
scas
data16
enter
movsb
bound
je
test
ja
mov
into
or
dec
cli
pop
fucomi
push
ror
add
mov
iret
jb
cltd
xor
mov
jge
mov
inc
sub
push
xchg
push
mov
mov
addb
mov
mov
ja
or
aas
inc
push
leave
je
and
mov
popf
and
sbb
rcrb
aas
pop
fildl
imul
mov
cmp
xchg
inc
mov
scas
cmc
stos
xchg
xchg
inc
shlb
test
xorb
xchg
sbb
pusha
inc
out
sbb
fcomi
into
fisttps
shll
jbe
push
xchg
sti
mov
fmull
into
add
gs
outsb
xchg
mov
jmp
mov
insl
or
pop
fnsave
mov
lahf
push
cwtl
stos
xchg
push
out
aaa
stos
sbb
jb
sti
pop
xchg
inc
and
out
imul
pop
cmpsb
and
mov
fisttps
and
inc
loopne
inc
cld
push
lcall
shlb
int
jg
mov
test
jp
movsb
mov
xchg
ret
imul
jbe
fdivrs
iret
dec
adc
cmp
cli
dec
call
mov
adc
arpl
sub
insb
addr16
sub
inc
fiaddl
in
popa
je
into
outsb
aam
shll
cmc
pop
xchg
pop
adc
movsl
inc
lods
int3
dec
ss
ljmp
test
dec
iret
in
cld
jmp
xchg
xchg
fwait
int3
pop
inc
adcl
add
cld
outsl
fisttps
adc
xlat
jg
pop
xor
iret
xchg
fistps
dec
out
test
cwtl
ljmp
loope
rcll
xor
add
sti
test
inc
xor
xchg
fs
jle
mov
xchg
push
outsb
inc
xchg
aas
push
neg
adc
mov
in
iret
xchg
stc
adc
xchg
shlb
xchg
pop
sbb
jmp
test
fildll
pop
mov
fmulp
stc
jo
cli
out
jno
dec
hlt
cmp
shr
mov
sti
pop
sbbl
bound
das
mov
lcall
lds
xchg
xor
adc
sub
mov
mov
std
mov
push
movsb
movl
jle
jge
jae
inc
push
cmpsl
and
pop
mov
aas
pop
xchg
int
mov
push
shl
daa
cmp
ljmp
xor
cwtl
cs
cmc
dec
jg
adc
jle
out
aad
into
jne
or
and
mov
push
aam
push
or
hlt
sahf
lea
repz
adc
fbstp
push
pusha
insl
xchg
dec
repnz
dec
push
and
xchg
andb
or
xor
mov
fcmovnu
in
nop
inc
fidivs
sbb
xchg
nop
jns
fistpl
mov
mov
sub
in
ror
cmpsl
pop
cmpsb
mov
imul
jae
push
push
xchg
dec
xor
lods
mov
fimull
mov
jp
xchg
jns
sub
lcall
adc
fists
xchg
out
rorb
fistl
mov
pop
psubd
int
push
sbb
inc
or
or
outsb
out
cld
mov
sarl
pop
mov
mov
sbb
xor
adc
popf
sub
pop
outsl
mov
sub
mov
aad
mov
ja
icebp
mov
mov
iret
dec
push
into
xchg
and
scas
mov
or
mov
jle
jns
add
iret
xor
cmp
stc
fwait
push
test
lods
andl
mov
jb
mov
jecxz
lods
iret
into
jne
cmp
pop
fs
sar
xchg
aaa
fcmove
fisttps
in
cmp
jbe
mov
lea
mov
mov
add
iret
rorl
test
push
mov
roll
xchg
sub
jmp
adc
and
mov
ret
test
rcr
xlat
inc
dec
addr16
pop
out
mov
xchg
jg
das
push
fldt
add
push
push
mov
mov
jns
add
lods
adc
xchg
xlat
lods
xchg
xchg
pop
scas
testl
or
test
popf
mov
mov
daa
into
js
je
rcll
jl
cmp
push
push
arpl
and
out
mov
add
mov
or
xchg
sub
iret
and
stc
inc
je
sbb
add
out
enter
into
stos
out
xchg
pusha
mov
movsl
or
fwait
inc
mov
dec
loop
movsb
in
inc
rcll
xchg
mov
add
xchg
aas
icebp
ljmp
pushf
xchg
das
pop
insb
insb
std
dec
in
iret
mov
lcall
inc
dec
cld
clc
lcall
lcall
mov
iret
pusha
pop
jns
pop
and
mov
pushf
push
sub
and
iret
push
int3
xor
cwtl
xor
dec
daa
stos
pop
sbb
push
mov
sub
lret
cltd
mov
cmp
decl
mov
cmp
push
idivl
je
adc
adc
jb
fneni(8087
into
test
loop
insl
sahf
and
popa
jl
dec
dec
adc
mov
aam
mov
mov
rcr
jl
aam
sarb
int3
cmp
cmp
sarb
sahf
mov
fwait
out
dec
outsb
insl
adc
jne
inc
push
push
lahf
sbb
rcll
push
xor
adc
cmp
into
pop
jbe
sbb
rorb
out
sbb
adc
pop
mov
js
daa
cmp
xchg
lret
xchg
fs
subl
pushw
adc
cltd
jle
sbb
xchg
inc
in
dec
mov
ficomps
push
jo
lret
xchg
jns
xchg
sahf
cmovs
add
loop
pushf
mov
mov
or
rcrb
mov
mov
pop
jmp
xchg
inc
daa
stos
cltd
pop
cwtl
fcmovne
jne
inc
add
mov
iret
clc
push
sbb
jo
xor
xchg
xchg
and
ljmp
bound
sub
lcall
sbb
aam
scas
enter
push
xchg
push
outsb
push
loopne
cli
adc
add
dec
sub
xchg
cltd
inc
jecxz
mov
rolb
adc
mov
leave
sub
insb
jns
xchg
sbb
lret
jb
or
xor
shlb
daa
cmp
sbb
mov
push
aad
icebp
xor
pop
push
sbb
movsb
mov
sub
push
ds
sbb
rcrb
pop
popf
pop
adc
cmp
rolb
ret
cmpsb
inc
nop
xchg
or
pusha
ret
push
dec
loop
inc
fildll
cmp
dec
xor
push
push
fdivl
sbb
jnp
in
mov
mov
mov
xchg
dec
and
add
insl
push
fistpl
cwtl
fs
cmpsb
xor
sbb
and
and
add
mov
stc
pop
sub
push
les
sbb
les
pop
mov
insl
out
fsubp
xchg
cwtl
xor
mov
mov
es
xchg
mov
add
mov
dec
out
pop
sbb
ficompl
dec
push
mov
cld
stos
fists
lahf
fldt
sub
in
ss
xacquire
xchg
jbe
fdivs
push
xchg
add
lods
jge
inc
xchg
in
lds
pusha
out
xor
sbb
pop
and
mov
xchg
xchg
in
inc
xchg
cmc
enter
xchg
pop
shr
mov
fwait
mov
mov
mov
push
scas
iret
pop
cmp
data16
repz
test
adc
mov
cli
fsubs
fistpl
rorb
cmp
sbb
into
mov
mov
dec
and
icebp
xchg
dec
movsl
push
adc
scas
add
sbb
dec
rorb
int
xor
push
push
xchg
push
dec
in
in
jne
jle
ret
mov
push
dec
push
icebp
mov
pop
sub
shll
fiadds
popa
xor
out
mov
fistps
xchg
xor
cmp
pop
and
jbe
fldt
adc
xchg
adc
cmp
sub
xor
stos
cmpsl
inc
cmp
pushf
inc
and
data16
int
repnz
xor
pop
fcmovnbe
xchg
fldt
aas
ja
xchg
ss
sahf
adc
and
xchg
jmp
xlat
xchg
jg
mov
std
lds
ljmp
stc
into
int
insb
and
imul
mov
ret
jecxz
sahf
cmpsb
adc
push
mov
out
dec
les
test
pop
dec
sar
push
push
stc
jge
hlt
mov
daa
xchg
imul
scas
call
lcall
add
fildll
std
rorl
jecxz
sub
xchg
or
push
sub
cltd
ja
cwtl
cld
stc
rol
add
frstor
arpl
enter
js
hlt
fldenv
fld
inc
in
pop
push
inc
aam
jecxz
xchg
fnstcw
dec
push
mov
jg
jp
stos
sbb
stos
into
inc
mov
pop
loope
mov
lea
jo
divl
aaa
movsb
cmp
aam
xor
jae
sub
iret
int3
enter
test
outsb
xor
aad
je
mov
and
fadds
test
push
jae
sbb
cli
fildl
xchg
clc
push
clc
imul
mov
mov
ret
gs
inc
adc
dec
xchg
xchg
stc
push
int3
out
dec
mov
mov
mov
pop
mov
xlat
pop
ds
jl
jge
or
push
rcrb
imull
push
iret
iret
repz
xchg
adc
push
ret
pop
jb
mov
sbb
push
mov
mov
js
out
ja
je
cmp
sub
push
xor
sahf
xor
jb
mov
xor
and
and
aam
out
adc
insb
push
test
inc
push
enter
push
adc
outsl
xchg
loop
mull
pop
mov
jle
pop
aaa
loope
in
nop
pop
push
xor
mov
xor
sahf
adcl
pop
cli
iret
or
and
lds
xchg
cmp
add
imul
cmpsl
jo
mov
xchg
cmpsl
mov
andl
dec
daa
fcmovne
mov
mov
mov
cmp
fwait
cli
xchg
bound
loopne
sbb
cmp
scas
into
xor
jg
jl
push
iret
mov
data16
adcb
xchg
mov
adc
xchg
add
mov
mov
pop
lods
push
roll
inc
pand
punpckhbw
dec
jo
scas
iret
sbb
js
or
lea
stos
cmp
dec
or
lock
jle
or
jecxz
sbb
into
in
push
jne
adc
cli
sbbl
pop
mov
jl
iret
scas
pop
and
xchg
stos
jbe
xchg
hlt
dec
fidivs
inc
and
shl
cmc
mov
jle
xchg
pusha
test
cwtl
lret
xchg
and
cld
imul
inc
ljmp
mov
mov
lock
cs
jne
jns
int3
dec
inc
scas
push
rcrb
or
ja
mov
shrl
pop
bound
jae
mov
inc
sti
mov
inc
cmpsb
add
mov
xor
push
into
outsb
cld
inc
in
sub
cmp
fcmovnb
fidivrs
xchg
jp
in
iret
add
mov
andl
iret
push
mov
les
arpl
out
xchg
iret
stos
jmp
push
dec
sti
or
xchg
jb
scas
popa
mov
rolb
dec
shl
pmaddwd
fnsave
xchg
stos
sar
loop
xchg
adc
mov
clc
popf
scas
iret
and
mov
test
push
sbbb
movsl
pop
xchg
iret
sarb
stc
add
inc
ud0
xchg
iret
out
jnp
leave
pusha
movsbl
inc
sbb
or
sub
bound
add
out
test
movsl
inc
stos
push
out
adc
rclb
mov
dec
scas
xchg
fistpl
push
mov
rcrl
xchg
push
push
sbb
cld
sti
movsl
add
inc
push
aaa
hlt
test
shlb
fucomi
ret
mov
sbb
stc
stos
jbe
fdiv
cmp
movsl
jnp
mov
sub
ljmp
insl
sbb
lods
aaa
out
dec
test
sub
jb
mov
mov
aaa
xchg
mov
cs
aam
cmp
into
in
hlt
mov
dec
mov
adc
popa
lcall
mov
cmpb
jbe
test
mov
out
fbstp
push
fisubs
pop
jns
mov
aad
mov
into
xchg
pop
lret
xchg
and
jns
ret
mov
sub
popf
adc
ds
cmp
or
mov
jg
fimuls
fdiv
push
das
mov
xchg
sbb
fidivrl
mov
dec
jnp
scas
cld
clc
inc
mov
xor
out
popa
pop
lret
out
les
inc
in
mov
sbb
cmpsl
mov
je
dec
cwtl
inc
cs
mov
movsb
mov
mov
adc
out
cmc
lds
mov
shll
mov
mov
rcl
bound
jl
fistpl
mov
push
sbb
das
xchg
daa
mov
enter
icebp
lods
and
fisubrl
lcall
cmp
sbb
lret
push
pop
xchg
inc
ds
xchg
movsl
outsb
lods
stc
or
test
jmp
mov
xlat
sarb
mov
xor
pop
xchg
insl
sbb
rclb
gs
or
fmuls
enter
jb
and
adc
mov
fidivrs
dec
mov
mov
mov
push
cmp
test
xchg
dec
fstl
bound
sub
xor
aad
mov
cmp
fisttpl
jbe
out
mov
stc
xorl
xor
mov
pop
cmpsl
push
adc
inc
xchg
cmpb
call
mov
in
fucomi
push
rolb
xchg
xor
mov
adc
scas
fcomi
fucomip
nop
cmp
lahf
iret
popf
push
mov
movsl
xchg
pushf
pusha
gs
xor
xchg
or
movsb
mov
and
mov
lcall
sbb
and
lret
jecxz
popf
xor
adc
into
push
sti
mov
sub
and
pop
pop
push
mov
test
xlat
xorb
or
adc
dec
xor
ret
xchg
popf
xlat
xchg
cmp
cmpsb
push
outsb
or
xorl
loope
mov
xchg
insl
xor
adc
sub
dec
repnz
adc
mov
ret
fisttpll
nop
cmpsl
fs
ds
iret
mov
leave
ror
aam
inc
mov
add
jg
pusha
jb
inc
lods
pop
mov
pop
jmp
add
xadd
pop
jecxz
xor
xchg
adc
pusha
xchg
and
lods
imul
int3
lahf
inc
addr16
mov
xchg
or
test
cwtl
frstpm(287
ret
lcall
dec
mov
push
ret
cmp
xor
iret
dec
inc
call
jecxz
lods
insb
xchg
mov
lahf
cmpb
loopne
adc
ss
cwtl
insb
and
adc
xchg
jmp
popa
enter
add
jno
xchg
sbb
aad
jae
inc
jnp
push
jl
call
outsb
mov
adc
je
lock
jae
cmp
push
imul
mov
mov
out
xchg
fs
sub
fistl
pop
push
in
mov
addr16
add
xchg
jge
or
xchg
orl
sub
pop
scas
xchg
add
inc
aad
iret
and
lret
cld
movsl
idiv
icebp
pop
fistl
in
out
and
push
jbe
jmp
add
dec
cmpsb
jmp
or
hlt
cmpsl
mov
iret
sarb
sub
xor
push
mov
xchg
cwtl
inc
pop
xlat
cmp
fcmovu
sbbl
pop
iret
mov
and
xchg
push
lods
jno
pop
aad
in
adc
cmpsb
arpl
push
sti
xchg
cmp
lahf
sbb
xchg
std
nop
aas
dec
xchg
fistl
pop
mov
adc
mov
dec
cli
xchg
jb
mov
mov
dec
cltd
fdivs
cmp
jecxz
fcoms
xchg
adc
stos
sub
into
not
sarb
jle
push
hlt
push
int3
mov
inc
or
dec
fildl
push
adc
jns
addr16
insb
loopne
test
cmc
scas
clc
in
imul
pop
and
repz
int3
loope
pushf
or
push
loopne
inc
fldt
sub
xorl
stos
or
jmp
jmp
stc
pushf
sbb
fisttpl
addr16
int
and
mov
shl
in
push
lret
hlt
add
jnp
test
push
cmpsl
xchg
loopne
mov
lods
dec
sti
fistl
xchg
xchg
aaa
fldenv
fiadds
std
shl
xchg
and
insb
xchg
xchg
dec
hlt
imul
mov
sti
mov
mov
iret
aam
xor
mov
xchg
call
pop
inc
cmpsl
xchg
std
jo
push
btr
jg
paddsw
mov
jbe
cltd
adc
gs
call
cmp
inc
sbb
mov
shrb
mov
jecxz
mov
daa
mov
ljmp
test
in
sbb
dec
push
les
outsb
scas
cmp
ljmp
movl
add
fldt
fisubrs
sbb
test
stos
int3
fsts
dec
shll
jge
push
and
fsubrl
adc
dec
ja
loop
clc
and
jne
xchg
insb
lahf
jmp
daa
arpl
iret
mov
shrl
out
jp
xchg
or
inc
bound
ja
imul
mov
jbe
or
ja
js
dec
mov
dec
inc
add
mov
sbb
xor
int3
test
aad
adc
pushf
std
adc
lock
mov
xchg
add
mov
outsl
fstpt
inc
movsb
mov
sahf
daa
xchg
in
ret
xchg
stc
lret
mov
hlt
sub
jne
mov
fstpt
fwait
and
jo
roll
jb
mov
sbb
cmp
inc
into
sahf
lea
sar
sub
addb
sahf
xchg
sbb
iret
arpl
sub
dec
jbe
jb
ss
pop
dec
jb
hlt
cltd
mov
cmc
push
jnp
adc
dec
and
iret
ss
push
xor
repnz
test
mov
sbb
mov
dec
ds
or
int3
adc
xchg
or
xchg
push
jge
and
imul
jae
inc
sbb
outsb
jg
pushf
adc
push
dec
addr16
inc
cli
test
test
lods
imull
xchg
rcr
orb
adc
fucomi
scas
pusha
xor
iret
xor
pop
lret
pop
xchg
repnz
fadds
flds
arpl
call
nop
push
aas
movsl
push
faddp
pop
pop
test
icebp
and
pusha
sub
xchg
repnz
push
pop
fsts
lret
adcl
add
fidivl
cmp
loope
fistl
sub
or
test
iret
in
xchg
int
inc
mov
xchg
xchg
loope
lods
sar
xchg
call
xchg
loopne
icebp
mov
fs
mov
or
sbb
sub
jmp
shlb
push
sbb
mov
imul
xchg
push
scas
sbb
iret
shrb
jnp
pop
adc
sti
xor
and
mov
test
fistpl
dec
jg
xchg
inc
fldcw
iret
rorb
and
fbld
add
mov
sub
dec
cmpsb
push
fcoms
rorl
ds
or
xchg
test
enter
xor
sub
add
mov
lahf
insb
loop
and
sahf
jg
lcall
or
aad
fdivr
adc
aad
stc
fs
mov
mov
or
mov
pushf
sarb
fisubrl
jle
xchg
ja
in
dec
rcr
shlb
and
aas
pusha
adc
scas
jg
icebp
stos
inc
iret
sbb
rcrl
xor
jne
xchg
mov
and
mov
jg
sbb
mov
sub
sbb
je
mov
sbbl
inc
mov
in
or
outsb
fadds
int
or
dec
outsb
lahf
cld
xchg
lret
xchg
and
movsl
xchg
adc
or
popf
packsswb
mov
push
push
xchg
shlb
lods
dec
fstpt
add
push
inc
xchg
subl
das
xchg
movsl
xlat
adc
jne
sbb
jno
pop
in
sbb
shll
das
jo
push
stos
in
divb
aas
sbb
mov
mov
into
sub
xor
mov
scas
pop
inc
pop
jns
test
lods
jmp
neg
fmuls
jbe
imul
in
mov
push
mov
popl
push
iret
or
and
xchg
test
xchg
int3
pop
aaa
push
sub
push
leave
xlat
jb
and
sbb
fimuls
mov
bound
xchg
stc
das
bound
int
pop
sub
call
es
or
stc
sbb
movsb
dec
mov
add
add
and
add
push
loop
mov
adc
push
mov
ljmp
xchg
inc
adc
adc
push
imul
outsl
xchg
aaa
jae
addb
rcr
cld
and
out
imul
fsub
jg,pn
ss
dec
ds
push
jmp
pop
or
sar
lods
ret
fndisi(8087
mov
and
jecxz
push
int3
sbb
cltd
scas
mov
sbb
iret
cmp
int
mov
or
fnstenv
push
jne
inc
iret
lcall
pop
test
inc
in
pop
add
scas
xchg
test
ss
fstl
mov
sahf
cwtl
xchg
pushf
imul
inc
jb
jns
mov
in
xor
xchg
xchg
sbb
mov
out
sarl
dec
pop
add
and
cltd
enter
and
in
out
cmp
add
xchg
stc
roll
jb
mov
xlat
bound
inc
lock
push
into
out
xor
jb
or
test
jns
fdivr
cs
xchg
inc
adc
sti
pop
aas
insl
pop
rcr
mov
in
jg
lea
testb
call
dec
cmp
lock
mov
add
cmpsb
sbb
push
cmpsl
roll
ret
inc
xchg
mov
test
aas
dec
mov
das
repz
push
pop
cmp
pop
aas
mov
jp
or
mov
and
pop
sbb
xchg
sar
inc
or
fnstsw
lahf
xchg
add
push
mov
es
pminub
xchg
xchg
mov
addr16
es
xchg
mov
xchg
xor
mov
loope
mov
pop
lods
rcrl
gs
cs
xchg
fldenv
xchg
add
push
jb
mov
adc
inc
scas
and
shlb
jb
sbbl
test
sbb
sub
repnz
stos
enter
into
or
scas
rolb
popf
pushl
into
shll
arpl
jmp
sti
xchg
mov
stos
adc
push
push
sbb
outsl
mov
loope
ds
jo
sub
mov
hlt
std
fwait
inc
loope
test
add
aam
dec
lahf
fistpl
leave
mov
push
clc
inc
test
push
xchg
sbb
xchg
push
mov
jmp
cmc
cmp
or
pop
rcr
xchg
fsubrl
jns
pop
xchg
jle
repz
and
into
push
hlt
and
and
icebp
cmpl
cmpsb
or
scas
int3
ret
int
mov
adc
cs
stos
adc
xchg
faddl
xchg
test
xchg
stos
jnp
xchg
leave
sub
push
shlb
push
push
pop
mov
lock
stc
xor
or
aam
int3
cmp
or
mov
xchg
cmc
add
mov
adc
and
outsl
mov
mov
or
push
push
xchg
fmul
mov
leave
cmpsb
jg
mov
out
es
inc
and
sar
push
mov
mov
push
lcall
push
xchg
testl
cmp
ljmp
loop
mov
fsub
or
push
hlt
out
loope
lds
lods
icebp
fistl
xor
into
push
in
fisttpl
pop
sti
fsubrs
pop
push
xchg
bnd
jb
cld
add
cmp
mov
iret
add
lock
ss
pusha
and
test
idivl
mov
mov
popa
mov
xor
aam
inc
pop
es
in
dec
scas
aas
iret
pop
push
mov
iret
test
and
shlb
dec
sub
shrl
sub
xchg
sbb
iret
mov
test
sub
xchg
mov
std
mov
xchg
iret
add
rclb
fsubl
rolb
dec
fbstp
sbb
push
int3
add
xchg
in
adc
xchg
clc
add
pop
pop
dec
xchg
inc
jle
repz
jbe
push
das
and
pop
xchg
bound
rolb
lds
xor
pop
and
or
mov
cmpl
push
add
lock
cmp
mov
dec
dec
sbb
hlt
fisubl
andl
and
pop
xchg
mov
sbb
add
in
push
push
sbb
sbb
pop
stos
mov
pusha
and
pop
add
xchg
jb
lea
int3
pop
fldt
xor
pop
iret
stos
or
outsb
sub
mov
cmpl
sti
xchg
pop
dec
cmp
int3
add
or
and
outsb
inc
mov
fldt
in
xchg
lahf
iret
and
lods
fcmovbe
mov
sti
test
xchg
sbb
rorl
stc
sti
test
ret
mov
out
adc
dec
mov
push
cmc
dec
sarb
pop
sbb
push
outsb
subl
lahf
cmp
loope
mov
idiv
dec
xchg
repnz
xorl
mov
inc
push
jge
xchg
rcr
cmp
jl
mov
dec
jl
xchg
xchg
adcl
mov
fnstsw
sub
imul
inc
ret
daa
filds
cs
notl
rcr
adc
jns
inc
je
mov
lds
ret
lcall
xchg
xor
pop
roll
jne
cmp
mov
xchg
arpl
or
loopne
test
fcmovnu
sbb
sub
cmp
rcll
or
fisttpl
sarl
imul
push
mov
mov
pushaw
mov
or
mov
pop
rcrb
leave
fimuls
xchg
inc
cmpsl
mov
pop
repnz
cld
add
andl
sbb
pushf
pop
inc
push
xchg
stos
iret
mov
in
mov
dec
pop
xchg
into
push
mov
add
int
rclb
repnz
lds
dec
xor
fidivs
js
jl
xchg
mov
addr16
lcall
inc
inc
rol
add
sbb
add
pushf
push
xchg
push
psubsw
adc
aas
fwait
dec
mov
sar
imul
imul
movsb
sub
enter
pop
lret
add
push
sbb
push
out
mov
movsb
xchg
xchg
jns
lods
in
push
xchg
xchg
pop
inc
jl
pop
fistpl
xchg
loope
push
iret
and
mov
adc
loope
sbb
xchg
notb
addps
mov
push
aad
bound
push
lahf
rclb
out
cmpb
js
dec
pop
outsb
rcll
in
dec
setno
mov
or
pop
mov
xor
lods
and
sbb
pop
testb
outsb
xchg
mov
insl
shlb
mov
xchg
iret
hlt
xor
xchg
imul
insl
mov
jg
lret
lahf
inc
fildl
push
push
lcall
pop
jp
push
sahf
imul
jns
mov
scas
out
dec
imul
ret
or
lock
sbb
mov
adc
inc
push
test
xor
adc
lea
dec
dec
je
mov
xchg
mov
hlt
test
dec
ss
bound
faddl
adc
ret
js
std
lahf
push
leave
and
sbb
pop
or
or
loopne
xor
loope
mov
test
popa
pusha
mov
add
xchg
inc
gs
or
and
cmp
push
mov
inc
add
adc
and
inc
add
push
adc
inc
pop
inc
inc
add
add
add
dec
xor
xchg
nop
and
add
adc
sub
or
add
movsb
bound
inc
and
pusha
and
adc
xor
inc
addb
addb
addb
add
addb
sti
inc
add
dec
or
or
add
add
sbb
or
inc
loopne
fcomps
icebp
dec
adc
popl
inc
add
add
inc
add
nop
add
add
add
inc
or
add
add
add
inc
or
sbb
dec
addb
inc
add
adc
dec
sbb
ret
test
add
add
adc
add
add
adc
rorb
addb
mov
adc
and
movsb
mov
add
add
add
or
inc
inc
inc
inc
cmp
or
popa
add
add
or
mov
or
xor
and
add
andl
nop
add
nop
inc
push
add
inc
mov
add
adc
or
fsubs
add
enter
dec
add
adc
push
add
inc
add
add
mov
or
add
mov
or
and
adc
lock
adc
and
or
add
adc
nop
adc
or
jno
sbb
enter
bound
cmpsb
push
add
sbb
xchg
adc
and
inc
orb
adc
adcb
add
push
adc
push
push
adc
addb
orb
and
add
and
and
sbb
push
dec
add
loopne
inc
adc
lods
mov
add
and
or
sub
xchg
loopne
adcb
test
mov
test
inc
and
movsl
push
adc
addb
mov
add
push
and
mov
inc
inc
adcb
push
test
inc
lea
inc
add
inc
sbb
add
adc
or
mov
adcb
push
add
add
and
mov
add
test
add
or
cwtl
and
addb
test
inc
push
inc
or
add
or
or
xor
fsubl
sub
sub
nop
add
inc
lds
adc
and
and
xor
sbb
adc
add
add
push
add
adc
add
adc
xorb
adcb
sahf
or
and
add
add
inc
or
mov
lock
add
or
adc
add
add
addb
push
and
add
push
addl
dec
les
sbbl
mov
or
adc
and
add
inc
mov
add
pop
inc
and
and
and
pop
sub
adc
push
cvttps2pi
add
sbb
nop
adc
push
sub
adc
and
addb
add
adc
inc
inc
mov
push
add
inc
pop
push
addb
push
ret
adc
adc
add
popa
hlt
add
and
adc
or
pop
adcb
inc
or
and
dec
sub
and
push
or
pop
add
add
add
pop
or
or
xchg
inc
or
add
adc
add
add
adc
or
add
sub
add
add
adc
adc
adcb
mov
add
add
add
mov
clc
and
inc
add
add
dec
add
adc
adc
add
inc
mov
and
and
sarb
sbb
and
mov
sbb
and
add
add
adc
add
mov
pop
add
and
addb
mov
add
add
and
add
rolb
pusha
add
inc
or
and
call
add
add
and
xor
lods
bound
and
mov
inc
inc
add
bound
add
xor
cmp
dec
xorb
mov
add
cwtl
sbb
or
or
inc
add
xchg
and
sub
add
movsb
mov
and
mov
lock
jae
or
add
adc
xor
test
add
adc
adc
adc
adc
add
and
add
dec
adc
mov
inc
xor
addb
inc
andb
orl
mov
adc
xor
addb
nop
xchg
sub
inc
nop
or
and
push
inc
add
or
inc
cmpl
add
or
add
xorb
push
or
rolb
add
addb
inc
scas
inc
adc
or
add
mov
add
test
push
add
cmp
les
orb
dec
or
push
add
insb
push
inc
mov
mov
sbb
add
popa
pop
mov
addb
rolb
bound
lahf
pusha
and
xor
dec
sbb
adc
imul
add
add
adc
add
add
aam
pusha
xchg
int3
sub
addl
and
add
and
add
add
inc
or
addb
xor
inc
xor
popa
sub
adc
adc
add
mov
mov
inc
add
and
jo
and
dec
inc
and
push
or
shlb
add
xor
adc
and
adc
push
add
in
test
adc
inc
subb
add
adcb
mov
inc
test
inc
add
addb
cltd
add
and
or
add
mov
enter
xor
mov
add
rolb
push
je
xchg
and
add
inc
add
add
adc
adc
xchg
add
add
inc
and
or
mov
add
mov
enter
or
add
add
bound
inc
push
mov
add
add
stos
mov
inc
or
fcoms
jno
sbb
add
add
dec
adc
add
add
and
push
inc
inc
lods
inc
or
add
addb
inc
ror
adc
push
addb
addb
push
add
inc
sub
inc
enter
xchg
inc
add
mov
pushf
call
mov
inc
adc
add
cmp
sbb
es
sbb
sub
add
inc
mov
and
arpl
push
and
add
mov
adc
sbb
mov
adc
add
insl
sbb
dec
add
adc
push
push
push
inc
pop
adcl
adc
or
mov
and
inc
add
mov
add
or
inc
dec
or
push
rorl
or
adc
add
and
test
enter
mov
add
sub
add
or
inc
sub
add
add
mov
inc
inc
push
mov
sub
xor
and
or
and
adc
push
andb
mov
sbb
and
or
push
and
or
test
inc
push
dec
inc
subb
add
and
and
add
sbb
and
orb
add
add
or
inc
bound
add
add
add
and
and
push
push
add
adc
xor
sub
inc
xor
pushf
jbe
inc
mov
and
or
inc
adc
add
sub
and
mov
adcb
popa
push
add
and
add
add
add
fadds
add
add
cmp
sub
outsl
adc
or
push
mov
push
push
cmpsb
pop
add
add
and
inc
and
add
movsb
add
pop
rol
aad
adc
xchg
andb
or
sarb
add
pop
and
inc
sbb
and
add
or
and
cmp
push
nop
dec
and
jp
inc
test
push
push
popa
add
addb
andb
dec
and
add
inc
add
dec
and
orb
sbb
int3
or
les
or
push
pusha
inc
orb
and
fs
add
push
mov
inc
and
push
adcb
add
add
sub
movsl
inc
or
jecxz
add
add
adc
xorb
add
sahf
cmp
inc
dec
mov
inc
cmp
sbb
enter
adcb
add
add
inc
add
or
inc
andb
adc
push
test
add
mov
or
test
adc
pop
ret
or
inc
inc
inc
add
sbb
sbb
lods
shlb
nop
inc
bound
add
bound
pop
addb
add
addb
and
add
bound
mov
adcb
insb
adc
add
push
sub
and
add
and
or
jb
push
jp
inc
xor
rclb
adcb
add
dec
adc
or
add
sbb
add
add
cltd
sub
add
or
and
mov
jo
adc
roll
mov
push
inc
ljmp
add
jo
dec
sub
add
movb
pusha
fsubs
or
mov
add
dec
xchg
pop
add
xchg
or
xchg
mov
push
or
xchg
inc
adc
add
adc
and
rorl
add
mov
inc
add
add
add
add
add
adc
inc
and
mov
or
add
sbb
ss
and
add
gs
or
push
inc
mov
adc
xor
adc
sbb
loopne
or
inc
imul
add
addb
and
jecxz
adc
pusha
inc
add
adc
fldl
and
pusha
add
andb
addb
jmp
out
xchg
bound
sub
add
xchg
adc
add
or
orb
int3
and
add
addl
inc
add
adc
add
and
xchg
test
mov
jg
add
add
add
add
dec
addb
add
push
or
inc
mov
mov
add
add
or
shlb
inc
cwtl
adc
adc
add
jo
inc
inc
mov
add
or
mov
or
addb
ljmp
inc
adc
add
push
inc
add
flds
add
add
add
add
xor
adc
and
dec
adc
inc
adc
and
and
xor
push
sbb
inc
pop
pop
inc
rolb
adc
inc
add
add
adc
adc
adc
or
add
inc
inc
dec
dec
add
pop
adc
shlb
inc
rolb
mov
pusha
bound
dec
addb
inc
add
push
dec
add
and
sub
add
inc
and
and
aaa
add
and
add
popa
add
add
enter
add
pop
dec
adc
nop
test
add
or
inc
or
add
adc
orb
push
sub
cltd
and
mov
add
xor
or
inc
add
add
push
adc
or
inc
and
add
add
adc
andb
xchg
adcb
adc
add
nop
mov
adc
and
add
dec
inc
or
inc
push
mov
sbb
push
adc
push
cmp
dec
add
orl
add
dec
mov
cmp
popf
mov
or
adc
add
or
andb
or
andb
add
adc
rolb
add
adc
or
addb
adc
lds
jmp
add
popa
inc
inc
bound
add
xchg
add
addl
or
movsb
loopne
adc
add
sbb
add
roll
add
sub
or
ret
lds
adc
addb
dec
adc
add
or
movups
add
add
add
addb
add
or
dec
sub
popa
or
or
add
add
sbb
cmp
add
add
adc
mov
or
orb
test
sbb
add
add
add
popa
inc
push
or
adc
push
and
and
xchg
inc
add
xor
or
adcb
add
jo
mov
pop
fmuls
or
add
sbb
test
test
orb
rolb
mov
adc
mov
test
push
add
pop
add
mov
or
push
push
rorl
inc
addb
and
inc
pop
xor
adc
add
andb
adc
and
inc
or
adcb
bound
dec
add
addb
lods
push
mov
add
sub
loopne
add
add
and
add
dec
popa
inc
mov
movsb
and
pusha
add
add
mov
mov
adc
add
add
add
sub
adc
shlb
jo
add
cmpb
jb
add
movsb
xchg
add
pusha
and
inc
adc
inc
add
addb
push
test
sbb
sbb
sbb
inc
add
and
and
add
add
mov
mov
add
and
inc
and
mov
inc
roll
cmp
ltr
roll
or
call
or
add
pop
or
or
pusha
orl
or
add
cwtl
inc
dec
adc
add
or
test
pop
lcall
mov
and
add
enter
add
and
addb
add
addb
in
cmp
push
and
xorb
or
roll
and
inc
and
addb
inc
addb
mov
inc
add
test
or
mov
xchg
adc
inc
push
and
xor
rolb
rolb
pop
push
adc
nop
add
test
test
orb
add
add
ret
push
inc
es
xor
add
sbb
add
mov
push
sub
add
add
and
dec
int3
inc
and
stos
dec
rolb
add
or
push
test
sub
sub
add
adc
and
sub
or
lock
adc
dec
andb
andb
dec
inc
and
add
sub
sbb
adc
mov
adc
add
adc
add
sub
and
data16
add
add
and
adc
mov
and
or
adc
xchg
add
or
inc
add
mov
leave
adc
test
pop
add
movsb
or
pop
mov
or
add
adc
inc
addb
and
add
push
cli
dec
add
adc
outsb
add
or
and
adc
add
add
movsb
add
add
adc
and
push
push
adc
push
add
mov
mov
add
and
pop
jb
jb
add
enter
sbb
add
mov
add
add
add
adc
inc
or
or
add
add
adcl
sbb
sub
add
add
xor
orb
mov
add
add
push
mov
test
adc
dec
add
add
inc
add
jo
add
and
add
subb
xchg
add
nop
add
and
and
inc
dec
inc
add
inc
orb
test
nop
xchg
and
add
add
add
inc
adc
add
and
and
inc
or
inc
xchg
mov
fs
jo
mov
pop
inc
dec
xchg
cmp
jl
adc
add
add
adc
inc
dec
dec
add
add
and
insb
nop
and
or
inc
add
adc
orb
push
xchg
sub
pop
mov
add
and
inc
lret
add
add
add
add
nop
xor
and
sub
adcb
and
add
add
insl
into
add
or
add
inc
inc
addb
xchg
push
add
add
addr16
xor
adc
adc
sub
addl
push
loopne
fsubl
movsb
test
add
shlb
xorl
inc
xchg
add
movsb
xorl
add
sub
inc
add
add
add
xor
push
add
add
add
cmp
adc
adc
pop
or
sbb
mov
add
adcl
adc
int3
and
mov
nop
sub
lock
sbb
and
add
inc
adc
mov
daa
daa
test
add
add
add
mov
adc
and
inc
adc
inc
add
test
push
xchg
add
add
sbb
inc
nop
mov
adcb
or
inc
mov
xchg
add
roll
and
and
or
add
test
add
add
inc
pop
xchg
dec
cwtl
add
orb
rolb
sub
addb
add
sbb
and
mov
add
mov
add
mov
sbb
loopne
and
inc
adc
leave
push
push
add
and
mov
mov
and
add
mov
mov
adc
mov
dec
test
add
mov
or
xchg
stos
nop
mov
and
mov
add
push
int3
add
inc
lcall
or
dec
adcb
add
adcb
pusha
add
xchg
inc
nop
dec
dec
adc
mov
adc
add
adc
and
adc
cwtl
add
aam
xor
adc
inc
adc
push
and
add
add
add
sub
and
addl
leave
rorb
or
mov
inc
nop
mov
and
adc
inc
and
push
push
adc
shlb
inc
mov
imul
adc
add
sbb
add
inc
add
and
add
rorb
or
or
shl
add
xor
add
and
inc
jb
adc
or
mov
add
add
add
imul
outsl
push
mov
adc
dec
and
mov
or
inc
xor
cmp
mov
add
adc
in
mov
inc
test
sbb
sub
pop
inc
dec
inc
inc
add
add
mov
add
adc
add
add
adc
or
test
dec
lds
add
nop
or
adc
mov
adc
or
add
add
and
adc
inc
adc
add
add
sub
inc
nop
dec
addb
sbb
and
mov
and
add
add
inc
movsb
adc
add
adc
add
and
add
add
add
and
add
push
sbb
push
sbb
add
add
adc
mov
in
push
addb
add
add
cmpb
inc
xor
push
insb
and
add
push
fs
jnp
adc
or
popf
sbb
addl
movsb
nop
pusha
mov
or
cmp
add
or
adc
add
sub
add
test
and
or
add
data16
xor
test
rorb
mov
imul
add
icebp
add
sub
add
movsb
or
xor
add
bound
mov
sub
add
inc
or
inc
inc
add
test
xor
fs
or
int3
or
orb
xor
adc
addb
or
add
add
adc
dec
inc
les
and
cwtl
inc
clc
add
or
or
mov
adc
or
add
inc
and
inc
add
and
add
dec
push
add
add
inc
nop
and
test
add
push
test
nop
popa
adc
andb
add
add
shlb
addl
and
adcl
cmp
mov
pusha
inc
adc
insb
fs
nop
test
ret
addb
test
dec
or
add
push
add
dec
add
add
push
add
mov
add
adc
or
adc
add
sbb
loope
inc
and
and
add
add
and
and
adc
add
adc
adc
adc
mov
add
add
sub
or
add
movsb
inc
rolb
addl
nop
add
inc
insb
adc
push
mov
enter
inc
or
xchg
and
or
sub
or
and
add
mov
and
or
pusha
sub
inc
addb
add
add
inc
adc
add
and
add
or
sbb
inc
andl
adc
add
inc
loopne
or
inc
andb
or
inc
pusha
test
push
leave
add
add
sbb
shll
xchg
rcrb
push
and
addb
test
jo
add
stos
rorb
adc
push
or
or
xchg
or
add
inc
add
flds
adc
inc
add
add
rclb
xchg
add
ss
and
push
inc
add
adc
add
pop
adc
test
add
inc
add
sub
xchg
mov
adc
nop
movb
inc
add
leave
sub
add
add
addb
add
or
and
pusha
and
pusha
mov
or
xor
adc
adc
test
sbb
add
sbb
adcb
add
dec
and
dec
mov
int3
mov
adc
adc
adc
inc
or
out
loopne
add
add
inc
inc
and
add
or
and
je
sbb
push
add
adc
xchg
cmp
add
inc
add
or
add
push
and
addb
lret
add
add
and
add
add
orl
addb
xor
inc
and
xor
adc
test
inc
adc
test
mov
add
xor
push
bound
dec
shlb
xchg
movups
xor
and
and
mov
inc
or
push
inc
pushf
and
add
test
or
add
sub
nop
add
leave
add
inc
and
adcb
test
add
adc
xor
inc
shll
test
adc
or
dec
pop
inc
loop
push
xor
orb
jno
inc
add
add
add
xor
inc
push
add
addb
or
add
and
adc
pushf
aaa
add
adc
or
sbb
add
add
xor
adc
push
test
sbb
addb
add
dec
sbb
test
or
int
inc
outsl
and
or
add
fs
xorb
mov
adc
xor
or
inc
or
inc
pusha
or
adc
pop
or
test
xor
popa
shll
add
rorl
adc
push
addl
adc
add
adc
mov
cwtl
sub
andl
mov
mov
nop
push
add
add
sbb
add
add
add
xor
dec
add
inc
inc
and
je
inc
or
or
inc
rorb
add
pop
add
inc
popa
pop
add
sbb
push
dec
adc
or
add
and
add
add
inc
dec
addb
out
add
push
push
adc
add
inc
add
mov
sbb
or
add
cmp
adc
add
mov
addb
adcb
or
adc
and
or
add
shlb
inc
addb
or
adc
nop
or
add
mov
inc
addb
or
sub
or
adc
add
add
sbb
inc
inc
add
push
adc
and
add
push
add
mov
inc
andb
add
adc
adc
sub
add
and
and
or
add
sbb
add
dec
dec
add
les
mov
push
jo
and
inc
rolb
or
xor
and
xchg
add
es
xchg
or
inc
push
add
adc
adcb
adc
add
sub
stos
sub
rorl
add
and
and
pop
test
inc
dec
add
add
dec
movsb
xchg
adc
orb
inc
sbb
pop
mov
pusha
clc
or
add
and
add
xor
adc
mov
adc
sub
nop
xor
addb
add
dec
test
add
test
push
inc
add
andb
add
inc
and
add
cmpsb
addb
bound
adc
addb
add
add
inc
or
add
sub
shrb
xor
in
cmp
mov
xor
push
fs
subb
int3
add
xor
add
and
mov
xor
add
sub
inc
sbb
enter
or
push
push
dec
add
add
push
add
or
mov
fs
dec
add
fwait
add
add
orb
icebp
push
test
and
xchg
adc
mov
addl
adc
adc
inc
sub
mov
and
fs
or
add
inc
adc
inc
and
or
and
stos
add
jmp
or
add
add
and
pop
bound
add
mov
inc
or
add
adcb
mov
and
adc
xor
loop
push
sub
adc
dec
push
xorl
inc
dec
adc
push
pusha
sbb
add
or
xor
and
adc
mov
inc
xchg
addb
push
add
add
xchg
shlb
and
cmpb
mov
add
inc
and
and
or
and
add
scas
inc
add
add
cmpsb
xchg
cmp
add
and
sbb
pusha
ret
add
test
or
test
or
add
adc
inc
test
pop
add
loope
addb
or
add
test
inc
cmpsb
cltd
inc
mov
inc
lea
lods
adcb
adc
push
adc
push
roll
add
add
add
add
or
and
xchg
lods
add
xchg
add
push
andl
adc
sbb
inc
add
add
push
adc
add
loope
add
adc
test
or
add
push
add
inc
adc
add
or
mov
mov
inc
adcb
inc
and
inc
add
addl
nop
nop
xchg
sbb
add
add
push
add
or
or
push
adcb
inc
adc
add
addb
enter
mov
rolb
and
mov
dec
dec
rolb
or
addb
cmp
add
mov
add
or
mov
add
inc
sbb
sub
or
adc
add
or
add
sbb
or
sbb
add
ret
push
orb
adc
add
rol
add
or
adc
add
nop
add
sbb
adc
sbb
add
les
add
pusha
dec
addb
add
test
xor
andl
adc
sbb
push
add
dec
push
push
inc
adc
inc
inc
test
je
inc
inc
bound
add
xor
push
add
or
inc
add
rclb
dec
inc
push
and
add
add
add
push
push
or
addb
or
add
addl
adc
add
or
pushf
dec
daa
and
and
inc
or
mov
xchg
add
and
add
xor
add
inc
add
pop
mov
stos
add
mov
mov
test
test
jne
nop
and
or
or
mov
or
add
and
push
dec
lock
or
cmp
add
test
add
gs
inc
aas
sub
fldenv
sbb
nop
test
or
and
sub
popa
mov
push
add
sub
push
and
push
push
push
add
and
add
mov
or
add
inc
add
add
inc
xor
mov
inc
add
add
int3
int
adc
and
add
add
or
adc
mov
and
and
xor
add
inc
pop
or
add
and
inc
xor
and
xor
test
add
add
je
andb
add
adc
test
rclb
or
in
inc
add
add
adc
mov
xchg
jp
adc
add
sbbb
and
or
add
loop
or
rclb
popa
add
add
call
bound
add
add
ret
jns
add
loop
add
and
adc
or
inc
or
inc
pusha
pusha
test
adc
xchg
add
add
adc
xchg
add
adc
or
fildl
adc
or
sbb
push
leave
adc
mov
add
dec
adc
and
add
add
loopne
arpl
addb
or
add
cwtl
sub
sub
add
jo
add
inc
orb
and
add
pop
adc
or
or
mov
and
sbb
mov
jb
push
xor
add
add
test
push
and
adc
inc
xchg
add
add
cmp
or
inc
add
add
xor
sub
adc
xchg
nop
add
sub
roll
or
pop
and
add
in
sbb
mov
mov
push
add
push
pop
adc
push
add
int3
inc
and
mov
add
or
adc
sbbb
inc
sbb
or
add
sbbb
push
inc
and
sbb
add
adc
and
or
or
sbb
xchg
or
xor
mov
push
pop
jno
and
pop
and
add
mov
subl
inc
movsb
add
add
add
or
add
or
leave
add
and
add
add
dec
or
movsl
add
add
or
orb
adc
push
push
and
sbb
inc
xchg
add
sub
add
adc
sbb
add
inc
add
pusha
add
add
add
test
adc
add
add
inc
add
add
add
add
addb
adc
add
mov
adc
addl
shlb
outsl
mov
add
enter
adc
add
adc
addl
push
les
adcb
inc
inc
pusha
dec
add
lds
add
mov
inc
xor
or
push
es
inc
add
and
add
add
adc
or
rorb
lcall
arpl
adc
or
enter
sub
sub
inc
adcb
dec
shlb
sub
and
mov
or
add
add
and
nop
inc
xchg
push
ret
add
and
adc
subb
addb
and
test
add
inc
inc
or
adcb
sbbb
dec
adc
xchg
or
ret
adc
add
and
test
jne
cwtl
inc
add
add
inc
xchg
xor
sbb
roll
add
xor
mov
addb
push
add
dec
dec
rorb
add
push
sub
inc
push
insl
add
push
and
pusha
fs
add
push
add
adc
adc
inc
scas
add
addl
add
add
or
popa
popa
les
aam
int3
sbb
add
andb
addb
or
addl
push
adc
cmp
test
or
dec
and
andb
adc
add
rcrb
adc
add
inc
adc
nop
add
or
mov
or
and
andb
add
mov
out
adcl
xor
or
shlb
les
add
add
andb
inc
mov
test
add
adc
arpl
push
xor
add
dec
dec
sbb
inc
dec
add
mov
sbb
test
and
andb
add
dec
fwait
push
add
add
add
add
xor
add
add
add
or
and
push
push
orb
or
jo
and
dec
sbb
imul
xchg
inc
or
push
mov
add
add
nop
inc
add
sbbb
and
add
add
sbb
rorb
and
pop
pusha
sub
and
add
adc
add
add
adcl
add
and
add
lcall
adc
adcb
add
addb
add
add
adcb
adcb
add
add
add
mov
shlb
cmp
add
loope
adc
or
mov
and
add
and
fadds
and
xchg
add
inc
cmpsb
add
add
mov
nop
adc
adc
test
and
add
add
sub
adc
and
mov
and
mov
push
add
push
and
xchg
addl
add
inc
sbb
inc
andb
js
or
adc
add
xchg
nop
sub
fadds
add
adc
add
or
inc
adc
xchg
adcb
cs
add
or
add
add
add
adc
mov
add
add
and
inc
jno
add
call
adc
sbb
add
push
inc
sbb
sub
add
mov
and
dec
add
mov
add
nop
add
add
adc
adc
or
add
mov
add
xor
and
cmp
and
lar
and
add
addb
and
or
or
inc
add
nop
dec
add
call
add
sbb
adc
in
inc
or
add
sbb
and
rclb
or
nop
add
add
pusha
and
or
add
rolb
adc
cmp
sbb
add
bound
add
mov
add
xor
mov
push
cmp
subb
sbb
inc
or
add
add
add
test
add
pop
adc
sbb
add
adc
nop
mov
movsb
xchg
add
push
gs
or
nop
add
and
mov
inc
or
sbb
add
or
addb
add
xorb
xor
sbb
adc
bound
push
nop
rorb
bound
add
add
add
inc
or
lock
les
andb
xchg
add
adc
inc
and
jbe
pop
and
xchg
add
or
dec
add
push
nop
inc
pop
sub
loope
add
push
addl
outsb
add
inc
xchg
or
add
ds
and
add
add
or
orb
xor
adc
add
add
push
dec
sub
cwtl
cwtl
add
adc
dec
shll
add
or
pop
or
add
add
sbb
sub
add
add
inc
lcall
add
addl
das
add
push
add
inc
adc
add
adcb
or
add
xor
inc
sbb
or
aam
leave
nop
sub
inc
inc
add
and
addb
xor
push
inc
add
dec
add
add
add
add
or
and
addl
loop
mov
add
lcall
add
orb
mov
add
lret
test
adc
pop
ret
xor
movsb
test
lock
and
xor
push
push
gs
add
inc
inc
shlb
add
imul
and
and
add
add
add
adc
add
add
inc
dec
mov
mov
addb
or
or
xchg
or
and
mov
inc
push
loopne
addb
inc
inc
pop
push
les
add
push
add
push
add
outsb
xor
add
or
and
ret
test
nop
ret
test
adc
sub
add
add
mov
and
or
adc
or
dec
or
orb
or
or
outsb
and
orb
add
adc
sub
sbb
dec
add
xor
or
lret
pusha
dec
adc
cwtl
pusha
adc
inc
cmp
add
add
and
dec
add
or
addb
ret
and
ss
inc
add
or
cmp
add
add
loop
test
ret
inc
or
sbb
addl
test
add
inc
adc
pop
js
add
inc
mov
inc
add
push
add
add
pusha
rolb
shlb
mov
cmpsb
push
inc
or
add
add
sub
mov
inc
xor
and
adc
adc
add
mov
inc
or
add
add
inc
adc
bound
adc
add
fwait
add
andb
lock
test
inc
adc
and
add
and
ret
pusha
adc
or
adc
push
inc
add
test
les
add
test
inc
orb
mov
inc
add
xchg
add
or
test
add
adc
inc
add
mov
push
add
rolb
inc
dec
and
inc
or
test
mov
or
inc
and
faddl
sbb
test
add
lds
adc
or
add
enter
and
popf
push
inc
add
pop
xor
xor
and
andb
inc
adc
movsb
adcb
add
add
add
xor
add
add
add
add
adc
and
push
adc
add
or
inc
or
adc
aam
push
xchg
addl
or
push
add
xor
inc
rolb
mov
xchg
push
sbb
adc
add
jmp
adc
js
rolb
je
push
and
and
sub
pusha
adc
adc
inc
mov
add
xchg
add
dec
inc
jns
dec
mov
push
add
sbb
shlb
dec
inc
mov
add
and
add
popa
add
addb
add
adc
adc
sub
shlb
or
jno
add
nop
push
push
and
and
mov
or
sbb
push
orb
add
push
adc
add
xor
add
jo
xor
add
add
adcb
push
adc
and
inc
or
add
rolb
add
push
pushf
lock
add
push
add
adcb
adc
add
data16
push
bound
xor
out
inc
inc
add
add
push
mov
sbb
mov
addb
inc
xchg
or
xchg
push
add
dec
add
test
loope
dec
or
rolb
add
dec
inc
and
inc
pusha
add
cmp
rolb
push
add
or
or
inc
sbb
adc
int3
or
cwtl
andl
sub
add
dec
add
adcl
mov
add
add
inc
sub
or
add
mov
inc
insl
and
pushf
and
or
es
push
test
mov
sub
xchg
subb
push
sbb
and
rolb
xchg
add
add
inc
and
lcall
leave
sbb
add
adc
mov
jae
pop
adc
adc
test
add
inc
add
add
add
or
or
inc
cmp
sub
add
add
add
mov
data16
push
or
adc
jns
inc
pop
mov
add
inc
mov
nop
inc
add
add
add
cwtl
or
roll
inc
add
out
lea
mov
sbb
addb
add
or
sub
and
adc
pusha
mov
add
adc
and
repnz
orl
add
add
add
andb
inc
scas
adc
sbb
cmp
add
add
add
adc
inc
xor
mov
call
enter
inc
adc
add
or
xchg
add
sbb
add
inc
or
or
add
andb
add
data16
pusha
xchg
adc
and
add
add
rolb
addl
sub
sbb
scas
adc
adc
sub
addb
mov
inc
push
push
sub
ja
addb
add
adc
adc
add
xchg
add
cmp
push
dec
inc
rorb
ret
adc
adc
add
inc
or
add
rorb
push
adc
jp
aaa
and
in
add
or
and
add
add
and
add
push
sub
inc
mov
mov
add
adc
sub
test
push
andb
sub
and
add
roll
or
add
dec
add
push
andb
or
add
and
arpl
inc
inc
dec
add
push
cmp
or
and
je
add
xchg
add
and
and
xchg
and
sbb
xor
or
add
and
jno
or
add
add
add
ret
int
or
call
roll
xor
inc
shl
and
adc
and
bound
sub
xor
or
add
nop
es
mov
add
adc
adcb
addl
and
push
loopne
lock
nop
adc
and
jo
adc
dec
and
add
add
add
inc
push
sub
add
rorb
or
popa
test
add
faddl
add
or
movsl
push
fs
jo
sub
add
adc
dec
fsubrs
add
inc
das
cmp
lret
sbb
jns
add
adc
add
or
or
lock
add
mov
mov
push
xor
adc
adc
dec
push
inc
inc
adc
test
push
adc
mov
dec
add
adcb
rol
add
add
add
adc
add
add
push
add
adc
mov
dec
addb
sbb
test
add
add
add
cmp
inc
add
and
int3
test
add
adc
adc
enter
push
adc
push
inc
movsb
inc
push
arpl
adc
enter
mov
mov
inc
and
inc
add
or
sub
subl
push
inc
movsb
add
or
or
or
inc
mov
rolb
subb
inc
sbb
inc
or
push
add
xchg
les
add
sbb
or
inc
scas
add
pop
test
add
or
add
mov
pusha
and
data16
add
orb
rolb
dec
mov
addb
outsb
dec
and
add
daa
or
add
add
xor
add
sbb
sbb
or
adc
dec
adc
add
add
mov
or
in
add
add
adc
add
test
or
push
adc
and
push
push
or
add
rolb
inc
add
adc
add
ret
add
add
add
inc
addl
mov
adc
xchg
inc
pusha
add
add
pop
or
inc
or
add
sbb
and
pusha
add
jo
adc
push
or
dec
inc
cmp
and
sbbl
add
adc
xchg
or
inc
sbbb
cwtl
add
adc
test
add
and
xchg
push
test
inc
add
add
mov
call
adc
or
leave
adc
xor
enter
push
test
adc
add
test
lock
adc
add
or
addb
mov
or
mov
data16
or
adc
or
lods
dec
dec
clc
orb
icebp
or
sbb
adc
add
sbb
mov
add
inc
push
test
add
inc
pop
add
pop
add
sbb
popa
roll
adc
sub
inc
add
imul
adc
sub
dec
inc
les
mov
addb
or
out
sbb
mov
sub
add
je
addb
dec
add
nop
add
sbb
pop
and
add
sub
adc
push
or
inc
adc
pusha
add
or
or
andb
add
adc
add
and
add
add
mov
xorb
popa
add
mov
add
cmpsl
adc
add
add
pop
mov
xor
xor
add
add
or
pusha
mov
call
inc
add
cmp
push
or
into
mov
mov
add
test
add
sbb
add
sub
test
cmpsb
or
addb
mov
xorb
add
pusha
or
inc
add
push
inc
add
and
adc
nop
andl
inc
and
add
inc
mov
nop
pop
sub
add
sbb
add
xor
push
push
add
xchg
int
push
mov
jo
add
sub
mov
xchg
adc
dec
add
and
or
xor
pop
addb
jmp
add
mov
add
adc
add
movsl
lret
and
adcb
or
pop
inc
add
sbb
sub
or
lock
rolb
add
and
in
add
or
pop
or
sub
add
add
and
or
add
and
add
lcall
and
and
adc
sub
add
or
or
add
mov
addl
sub
xor
add
add
inc
mov
or
mov
pushf
add
lods
inc
sbb
add
push
and
add
rclb
inc
adc
inc
sub
xor
and
adc
mov
mov
push
mov
cmp
sbbl
cmp
data16
add
cwtl
add
and
sbb
addl
mov
push
or
sbb
inc
inc
dec
inc
or
adc
imul
or
xor
adc
andl
add
orb
xchg
and
adc
enter
xchg
es
push
xor
test
js
inc
add
sub
orb
orb
push
inc
movsb
add
mov
or
es
add
add
les
add
adc
inc
add
and
add
add
inc
add
add
inc
mov
dec
push
push
and
fs
inc
shlb
dec
loopne
inc
add
add
or
inc
inc
and
adcb
dec
and
xchg
push
push
loopne
lock
inc
dec
add
add
dec
add
add
add
adc
and
pusha
add
add
adc
inc
or
adc
add
add
pop
pusha
add
test
mov
xor
mov
loopne
gs
addl
and
push
test
or
push
andb
addb
inc
adc
addb
xor
and
lea
addb
and
inc
sub
add
push
pop
shlb
xor
hlt
sub
push
or
add
add
inc
adc
test
or
xorl
add
adcb
in
adc
addb
add
jb
inc
pusha
xor
js
and
add
cmp
dec
add
or
add
je
and
add
xorl
mov
and
add
mov
or
or
cmp
add
or
add
or
sbbb
sbb
mov
push
pop
movsb
and
inc
enter
ret
or
mov
xor
or
sub
add
or
mov
or
and
lret
mov
mov
and
adc
adc
andb
test
addb
cmp
out
add
add
pusha
add
or
loopne,pn
nop
test
shlb
pushf
insl
fs
push
xchg
orb
or
lods
mov
add
and
adc
or
add
inc
addl
add
xor
out
push
xor
cmpsl
xor
and
add
mov
subb
cmp
xor
add
add
add
and
dec
inc
addl
inc
adc
add
add
pusha
adc
mov
xor
inc
lcall
add
sub
add
add
add
das
add
ret
adc
add
add
or
add
mov
or
push
rolb
nop
pusha
sbb
sub
and
push
or
push
pop
xchg
fcompl
inc
adc
mov
or
sbb
push
adc
xchg
add
nop
add
pop
add
adc
int3
pop
inc
les
adc
add
add
or
scas
ret
and
and
and
sub
add
push
inc
xchg
test
and
add
orb
pusha
bound
mov
addb
adc
addl
add
push
adc
inc
inc
add
pusha
mov
add
sub
mov
add
xor
or
add
add
or
sbb
add
and
adc
add
add
add
add
add
lods
roll
loopne
or
add
inc
xor
in
xchg
cmp
or
adc
inc
add
jo
xor
aam
mov
add
adc
add
xchg
add
adc
adc
add
xor
inc
ret
test
add
nop
cltd
or
or
sbb
sbb
sbb
mov
mov
rcrb
popa
add
adc
pop
add
and
or
or
add
cmp
and
add
xchg
xchg
and
add
or
in
mov
adc
add
adc
add
and
cmpsb
and
bound
and
inc
insb
inc
or
inc
add
add
inc
popa
inc
js
and
rolb
mov
and
or
or
sub
xchg
add
mov
addb
add
inc
inc
or
or
mov
inc
mov
add
add
inc
mov
add
mov
push
or
loopne
adcl
add
add
add
inc
add
sbb
bound
adc
adc
or
xchg
dec
inc
add
xchg
mov
enter
andb
xchg
dec
inc
add
push
add
adcb
loope
sbb
adc
push
mov
add
pusha
loopne
push
mov
add
inc
add
add
adcb
push
add
mov
pop
inc
jae
add
add
inc
or
add
add
sbb
add
add
add
push
adc
add
adc
add
mov
or
or
sub
inc
subb
adc
adc
or
xor
push
mov
and
sets
xor
inc
pusha
add
rolb
or
push
sub
add
test
inc
add
adc
adc
mov
add
or
push
add
adc
xorb
inc
push
add
and
inc
inc
test
cmp
rclb
xchg
ret
rclb
cmpb
xor
push
add
mov
add
ret
and
or
push
or
dec
add
push
mov
and
dec
orb
int3
add
addl
sarb
add
and
adc
pop
add
mov
daa
push
adc
add
sbb
xor
inc
rolb
add
or
inc
add
add
inc
adc
add
rolb
inc
push
add
orl
mov
add
add
mov
inc
mov
or
and
inc
test
add
mov
add
sbbb
push
add
or
add
dec
stc
pop
xor
add
sbb
add
add
test
push
outsb
adc
add
jns
adc
add
popa
adc
add
add
and
and
mov
add
add
and
add
mov
sub
adc
xor
add
add
add
and
adc
xor
addb
mov
push
inc
xor
daa
add
or
xor
add
xor
add
xorb
xor
sbb
add
or
movsl
gs
test
and
push
andb
shll
push
cs
add
dec
and
mov
adc
and
mov
and
inc
mov
enter
lds
or
or
add
inc
sub
pusha
inc
addb
lea
sub
orl
adc
or
add
sub
mov
adc
push
nop
and
or
adcl
add
lea
or
jo
or
sbbb
dec
rcll
or
or
add
add
push
mov
test
adc
mov
push
mov
sub
adc
das
add
inc
pop
inc
test
or
daa
jo
addb
xor
or
addl
add
ljmp
push
dec
adc
dec
add
inc
or
add
xorb
and
or
pusha
dec
and
add
ret
add
dec
and
dec
inc
or
jo
mov
add
add
add
in
sub
mov
mov
push
add
mov
test
je
mov
xor
cmp
jne
mov
mov
xor
cmp
jne
xor
mov
test
jne
sub
cmp
jne
sub
mov
cmp
je
mov
mov
mov
mov
cmp
jne
add
mov
mov
mov
mov
push
mov
add
test
jne
sub
cmp
jne
mov
mov
mov
mov
mov
push
mov
mov
add
mov
test
je
mov
mov
cmp
jne
mov
and
cmp
jne
sub
cmp
jne
mov
mov
cmp
je
mov
mov
cmp
je
mov
lea
push
call
mov
lea
push
call
sub
mov
push
push
call
mov
test
je
sub
mov
mov
mov
sub
mov
cmp
jne
and
mov
mov
cmp
je
mov
mov
xor
mov
mov
test
jne
add
mov
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
mov
or
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
cmp
jne
add
cmp
jne
add
mov
mov
cmp
jne
mov
or
cmp
je
add
mov
mov
cmp
jne
cmp
je
mov
xor
mov
mov
mov
mov
cmp
jne
mov
sub
mov
cmp
je
mov
mov
test
jne
xor
cmp
jne
mov
sub
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
or
test
jne
mov
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
add
mov
mov
mov
add
mov
sub
mov
mov
cmp
je
mov
xor
cmp
jne
mov
or
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
je
mov
or
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
and
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
xor
mov
sub
cmp
jne
mov
or
cmp
je
add
mov
test
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
add
mov
mov
add
mov
sub
mov
cmp
jne
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
cmp
je
sub
mov
xor
mov
cmp
je
mov
and
mov
mov
mov
sub
mov
cmp
je
add
mov
mov
mov
mov
sub
mov
cmp
jne
add
mov
cmp
jne
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
mov
mov
push
mov
push
xor
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
cmp
jne
and
mov
mov
xor
mov
mov
mov
cmp
jne
cmp
je
test
jne
or
mov
shr
mov
xor
mov
cmp
je
cmp
jne
mov
add
mov
cmp
je
mov
cmp
jne
mov
sub
mov
push
push
push
call
sub
cmp
jne
mov
mov
sub
mov
mov
cmp
je
mov
mov
sub
cmp
je
mov
or
mov
mov
cmp
je
add
mov
mov
cmp
jne
sub
mov
mov
mov
add
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
cmp
jne
xor
mov
cmp
jne
cmp
je
mov
sub
cmp
je
test
jne
mov
cmp
je
xor
mov
mov
mov
mov
sub
mov
sub
mov
cmp
je
mov
add
mov
mov
pushl
push
pushl
call
mov
mov
cmp
jne
sub
cmp
je
xor
mov
addl
sub
test
jne
mov
cmp
je
add
mov
cmp
jne
mov
xor
cmp
jne
mov
xor
test
jne
mov
mov
cmp
je
mov
mov
xor
mov
mov
cmp
je
test
jne
cmp
je
mov
cmp
jne
cmp
je
cmp
jne
sub
mov
mov
mov
mov
cmp
je
xor
mov
cmp
jne
xor
mov
call
mov
xor
mov
mov
mov
mov
add
mov
mov
cmp
je
add
mov
cmp
jne
xor
mov
test
je
mov
sub
mov
mov
test
je
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
xor
mov
mov
mov
mov
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
push
mov
mov
movl
mov
xor
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
sub
mov
mov
cmp
je
mov
call
mov
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
add
mov
mov
mov
xor
cmp
jne
mov
push
call
mov
mov
or
je
mov
mov
mov
mov
addl
sub
mov
mov
cmp
jne
mov
xor
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
mov
lea
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
test
je
mov
sub
mov
inc
mov
mov
mov
cmp
jne
mov
add
cmp
je
xor
cmp
jne
xor
mov
cmp
jne
mov
test
jne
mov
test
je
and
cmp
jne
cmp
jne
sub
cmp
jne
xor
cmp
je
and
cmp
jne
mov
mov
test
jne
add
cmp
jne
xor
mov
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
sub
mov
mov
sub
mov
xor
cmp
jne
mov
sub
cmp
jne
mov
xor
mov
mov
mov
test
jne
cmp
je
mov
mov
sub
mov
mov
mov
cmp
jne
cmp
je
xor
mov
mov
cmp
jne
add
mov
mov
cmp
je
add
mov
test
jne
mov
mov
mov
mov
test
je
mov
sub
mov
and
cmp
je
mov
cmp
jne
add
cmp
je
sub
mov
test
je
mov
mov
add
mov
mov
test
jne
mov
or
mov
mov
and
mov
mov
mov
mov
mov
mov
cmp
jne
or
cmp
jne
mov
test
je
cmp
je
xor
cmp
jne
mov
cmp
je
add
mov
mov
mov
mov
cmp
je
mov
mov
and
cmp
je
cmp
jne
mov
add
mov
cmp
jne
xor
mov
mov
cmp
je
mov
add
mov
cmp
je
mov
mov
pop
mov
pop
xor
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
test
jne
mov
mov
mov
mov
mov
test
jne
mov
cmp
jne
mov
sub
mov
mov
mov
cmp
je
mov
mov
mov
pop
mov
xor
cmp
jne
mov
sub
cmp
je
mov
mov
mov
or
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
mov
push
mov
sub
mov
push
mov
add
cmp
jne
mov
xor
test
jne
mov
xor
mov
cmp
jne
xor
mov
mov
test
je
mov
mov
xor
mov
mov
mov
cmp
jne
mov
sub
mov
rdtsc
sub
mov
cmp
je
mov
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
test
jne
sub
cmp
je
cmp
je
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
sub
mov
mov
mov
xor
mov
mov
test
je
sub
mov
cmp
je
mov
mov
mov
mov
mov
cmp
je
or
mov
cmp
jne
cmp
jne
xor
cmp
je
cmp
jne
test
jne
mov
mov
mov
mov
mov
rdtsc
mov
xor
mov
test
je
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
test
je
mov
or
mov
sub
mov
mov
sub
mov
xor
mov
mov
mov
mov
mov
pop
cmp
je
sub
mov
pop
test
je
xor
mov
mov
cmp
je
sub
mov
mov
mov
mov
pop
cmp
jne
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
push
add
mov
mov
test
jne
mov
test
jne
mov
cmp
jne
cmp
jne
mov
mov
cmp
jne
xor
mov
cmp
jne
mov
cmp
jne
or
mov
mov
cmp
je
sub
mov
cmp
jne
cmp
je
or
cmp
jne
mov
add
cmp
jne
mov
cmp
jne
add
cmp
jne
mov
mov
mov
cmp
je
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmp
je
cmp
jne
mov
xor
mov
cmp
jne
xor
cmp
jne
xor
mov
mov
test
je
xor
mov
mov
test
je
mov
sub
mov
mov
cmp
je
add
mov
cmp
je
mov
decl
mov
cmp
je
test
je
mov
negl
mov
mov
sub
mov
cmp
jne
cmp
jne
cmp
jne
xor
cmp
je
add
mov
mov
add
mov
xor
mov
sub
mov
mov
xor
mov
jmp
mov
test
je
mov
mov
mov
mov
pop
cmp
jne
mov
add
cmp
je
mov
cmp
jne
mov
xor
mov
pop
mov
sub
mov
pop
mov
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
add
push
mov
add
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
movl
mov
mov
lea
mov
mov
lea
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmpl
je
cmpl
je
mov
test
je
mov
movsbl
sub
mov
movb
mov
mov
mov
movzbl
movzbl
add
mov
movzbl
movzbl
xor
mov
mov
movzbl
movzbl
sub
mov
mov
movsbl
mov
movsbl
lea
mov
mov
movzbl
shl
mov
mov
movsbl
sub
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
add
jg
loop
jo
movsl
inc
xchg
mov
mov
cli
add
push
cmp
pop
xchg
outsl
jmp
xchg
xchg
pop
rcrl
inc
dec
xchg
les
ljmp
lds
dec
ret
sub
leave
out
or
loope
dec
jne
into
inc
je
repnz
lock
mov
jmp
push
mov
inc
or
lea
cmp
aam
cmp
repnz
leave
ret
and
xchg
sbb
out
inc
ret
pop
sbb
test
bound
arpl
sbb
mov
sub
xchg
popf
and
pop
and
jl
cmp
push
hlt
or
adcl
test
mov
sbb
xchg
mov
scas
xchg
jl
dec
add
xchg
pop
mov
mov
insl
std
pop
imul
cld
dec
xchg
outsb
int
sbb
sub
mov
in
std
jecxz
rcll
pushf
mov
repz
adc
fidivrl
add
fucomip
sub
in
int3
mov
fiadds
xchg
lods
leave
xchg
iret
jmp
popf
sbb
xor
notb
clc
pop
adc
outsl
and
test
mov
daa
dec
iret
jmp
ret
fmuls
jecxz
inc
fiaddl
js
js
enter
ja
pop
xchg
lret
mov
or
test
inc
push
xchg
or
lods
out
mov
push
in
cld
cli
fstpt
ret
ret
negb
setns
loop
push
pop
xchg
fldt
pop
add
pop
mov
aaa
mov
je
ret
push
aad
xchg
outsl
div
adc
gs
dec
testl
or
cmp
pop
scas
jb,pt
dec
mov
je
ret
jno
xor
sbb
jg
lds
lds
ret
iret
jl
rcl
movb
jb
imul
inc
xchg
iret
jbe
jmp
int
dec
cmp
dec
and
bnd
pushf
iret
stos
dec
sub
loopne
lcall
pop
sbb
addb
lods
fisubs
and
es
push
test
lahf
ret
sahf
jo
adc
mov
pusha
enter
pop
iret
push
sub
pop
fisttpl
pop
mov
xchg
iret
push
lock
lret
xchg
outsb
stos
mov
push
sub
movsl
fbstp
adc
test
aaa
adc
das
out
inc
das
in
pop
cwtl
fstpt
push
cmp
xor
push
pop
xlat
add
repnz
fcoms
xchg
movsb
imull
xchg
jmp
ret
cmp
mov
stc
or
test
pop
clc
ret
orl
xchg
xchg
pop
loop
mov
imul
mov
nop
and
loope
iret
out
push
into
pop
fists
clc
iret
jge
dec
ret
xchg
ss
cli
insl
bnd
jle
inc
jmp
xor
jl
xlat
loopne,pt
cmpsb
sbb
inc
shl
adcb
fistpl
mov
addr16
ficoms
jg
das
pop
push
or
lds
rcll
ror
lods
sahf
lea
icebp
stos
dec
xchg
es
mov
nop
and
add
xchg
dec
dec
movsl
cmp
add
pop
pushl
ja
ja
dec
ja
and
inc
mov
je
fnsave
jno
xchg
popf
leave
outsl
rcr
test
cmp
out
add
movsb
faddl
mov
fs
mov
pop
clc
lcall
xor
add
mov
mov
das
mull
inc
cld
and
and
test
dec
and
leave
push
lods
push
shlb
push
jl
cmc
xor
sub
push
lock
pop
decl
xchg
imul
repz
jae
int
pusha
iret
ret
cwtl
xchg
xchg
in
aas
xchg
inc
mov
rorb
sub
es
mov
out
ret
les
and
jns
and
xchg
jl
fnstcw
cmpsb
fisubrl
mov
mov
xor
lea
cmp
mov
sbb
sub
loop
add
sbb
mov
mov
fwait
les
fistl
lret
icebp
jmp
cmpsb
xor
jl
sarb
sub
or
xor
fcompl
dec
fldt
xor
iret
aad
and
or
xor
inc
sub
fldcw
scas
cltd
addr16
das
jbe
push
mov
xchg
jmp
xchg
js
fistl
pop
repz
sbb
iret
mov
and
pop
sub
xchg
int
jle
cmp
loop
fistpl
inc
mov
stos
jae
pop
inc
mov
add
xchg
mov
jbe
divb
iret
jbe
std
jno
jecxz
loopne
jb
sbb
ss
bound
mov
fisubrl
mov
out
enter
addr16
mov
dec
mov
movsl
into
testb
xchg
nop
pop
mov
mov
xor
test
dec
push
dec
or
xchg
xchg
popl
cmpsb
fnstcw
test
mov
aad
pop
inc
dec
dec
test
pop
andl
cmp
jp
xor
and
jmp
mov
outsb
jecxz
jmp
pop
sub
pop
rcrl
out
pop
sbb
arpl
test
inc
in
dec
stc
xchg
xchg
or
pop
insb
stos
roll
adc
lods
jl
pushf
jb
xchg
mov
pop
xchg
lret
jbe
movsb
jl
push
pop
xchg
pop
insb
cli
cli
sbb
addl
cmp
jle
leave
dec
sahf
pop
ljmp
mov
push
outsl
and
push
in
sub
sub
sub
scas
push
repz
iret
lret
mov
xchg
into
cmpsb
push
popa
inc
xchg
cmpsb
add
iret
xor
xchg
jge
xchg
mov
mov
mov
mov
out
or
mov
jne
mov
iret
movsb
cltd
or
insb
outsb
lods
push
or
add
adc
add
adcb
add
add
push
dec
inc
inc
mov
lds
sub
inc
add
inc
add
addl
or
mov
add
adc
addb
and
subb
inc
or
add
add
push
cmpb
xor
inc
inc
test
dec
or
inc
adc
leave
xchg
add
loopne
cmp
or
add
inc
add
addb
add
test
and
or
addl
add
inc
add
add
add
addb
dec
addb
les
add
add
add
adc
dec
mov
shlb
add
add
add
adcb
adc
adc
add
add
pusha
add
nop
push
addb
add
and
inc
and
add
adc
and
adcb
push
add
pushf
add
add
test
push
adc
mov
sub
and
nop
inc
test
or
add
pop
les
orb
adc
add
xor
push
test
push
or
inc
mov
mov
add
adc
add
or
les
add
add
and
add
sbb
add
or
add
mov
addb
or
add
add
or
sub
and
add
dec
and
push
add
test
add
addb
add
add
xor
mov
inc
add
inc
add
adc
sub
push
add
or
sub
inc
mov
add
sbb
add
and
add
xor
add
pop
inc
add
add
add
sub
push
push
sbb
add
and
add
add
add
xchg
or
add
push
add
add
addb
add
add
add
adc
add
xchg
sbb
test
or
adc
push
test
or
add
add
addb
mov
add
or
inc
add
add
add
or
addb
and
pop
and
adc
add
inc
add
addl
add
add
inc
and
add
add
or
les
add
add
andb
add
and
add
or
add
jo
add
add
addl
ret
adc
inc
or
add
adc
pusha
push
add
or
sbb
mov
inc
xor
adc
add
pop
add
add
add
sbb
and
nop
add
addb
or
cmp
or
add
add
sub
and
push
xor
add
or
add
add
addl
inc
and
sub
sub
add
add
add
loope
test
adc
inc
inc
andb
test
mov
dec
add
mov
push
add
ret
or
and
add
and
add
sub
add
add
push
add
addb
push
and
add
or
add
add
and
sub
pusha
inc
adc
add
inc
xor
add
add
pusha
push
add
push
adc
lret
and
inc
inc
add
inc
xchg
add
js
daa
sub
add
sbb
lds
push
add
push
sbb
and
addb
push
test
add
add
or
add
rclb
add
popl
add
jb
rolb
adcb
add
add
add
hlt
mov
add
and
shlb
and
dec
adc
xor
ret
and
rorb
add
add
add
add
rolb
or
inc
adc
add
addb
inc
inc
inc
inc
adc
add
inc
pusha
add
add
adc
or
add
push
pop
add
int3
inc
adc
and
add
xchg
add
dec
inc
xor
sbb
adc
inc
add
or
add
add
inc
add
add
addb
adc
push
add
pusha
add
add
addb
rolb
push
or
mov
enter
mov
add
and
or
push
or
xor
inc
inc
and
jb
adc
add
add
ret
add
inc
inc
add
dec
add
or
or
adcb
add
and
xchg
and
adc
sbb
lea
add
and
or
pop
add
inc
and
dec
xchg
or
push
add
adcb
add
mov
ret
add
add
push
shlb
mov
add
or
nop
add
addb
inc
inc
add
adc
addl
and
rcll
push
movsb
shlb
add
push
add
adc
add
or
and
inc
call
bound
sbb
add
jp
add
inc
add
nop
sub
or
pusha
inc
add
add
xor
andb
and
add
adc
add
addb
and
add
jo
and
add
push
dec
add
dec
addb
add
add
dec
xor
add
dec
or
and
rolb
adc
loopne
inc
add
add
outsl
adc
xchg
test
inc
add
nop
xchg
add
push
adc
rolb
addb
add
inc
add
add
or
and
sub
or
add
or
inc
or
adc
add
add
add
add
xchg
add
nop
dec
add
add
add
jbe
sub
add
add
xor
sub
add
add
inc
inc
addb
pop
and
ret
add
xchg
add
add
add
and
add
pop
add
add
add
arpl
and
adc
orb
sbb
or
addb
imul
push
add
or
inc
add
sbb
inc
adc
xor
adc
sub
inc
inc
adc
add
and
or
or
add
addb
test
inc
add
sub
addb
mov
add
add
or
add
test
adc
mov
add
add
sbb
inc
inc
add
and
add
adc
test
inc
add
or
adc
and
adc
add
add
test
add
inc
inc
and
add
je
ljmp
test
add
add
sub
add
add
add
or
push
add
add
add
adc
add
add
and
or
add
or
addb
addb
add
fbstp
or
gs
and
mov
orb
push
add
add
inc
inc
inc
add
inc
add
add
cmp
add
xor
or
dec
adc
rolb
push
adc
pusha
inc
add
add
adcb
or
xchg
add
roll
sbbb
and
push
add
rolb
mov
and
data16
and
inc
addb
and
adc
and
dec
sub
or
add
add
adc
add
push
add
add
or
add
sbb
rolb
cwtl
adc
mov
add
inc
cwtl
nop
add
sbb
or
add
addl
sub
push
push
adc
add
les
inc
add
or
add
pop
addb
or
pusha
or
jp
and
inc
xchg
mov
sbb
mov
add
pusha
mov
and
add
or
dec
or
add
add
mov
inc
push
sub
add
add
lret
addb
and
add
and
test
and
dec
add
mov
push
inc
sub
add
inc
add
and
movsb
add
lret
test
inc
test
inc
add
add
push
daa
xor
adc
or
add
nop
add
sbb
inc
or
add
adc
and
sbb
adc
add
and
add
add
adc
pusha
add
out
xor
add
adc
add
add
add
sbb
add
and
and
add
and
sbb
or
add
lock
adc
add
add
test
add
push
or
add
and
or
add
and
adc
pop
add
mov
add
pusha
add
cmpsb
dec
xchg
or
or
movb
or
or
inc
inc
add
or
dec
mov
add
mov
rclb
add
add
add
add
add
add
add
mov
inc
inc
dec
push
cltd
add
add
push
add
add
add
add
and
add
add
test
add
add
add
add
add
add
dec
nop
add
adc
add
rolb
adc
add
and
rolb
addb
add
mov
add
add
inc
add
add
xchg
popa
xchg
rolb
popa
add
inc
xor
inc
addb
arpl
and
add
inc
inc
and
add
inc
and
inc
push
imul
push
andb
add
adc
pop
inc
cmp
or
inc
add
add
mov
mov
movsl
add
rolb
add
mov
add
nop
and
or
adcb
add
push
inc
or
add
orb
add
or
je
mov
inc
or
and
and
cwtl
pushf
sbb
adc
add
add
add
add
add
pop
add
sub
jo
imul
addl
addb
mov
and
xchg
lds
add
add
and
add
and
add
inc
add
sbb
adc
push
or
inc
add
inc
add
inc
sub
andb
xor
shlb
inc
adcb
add
add
add
inc
add
and
nop
or
add
pusha
add
and
ret
inc
add
add
and
andb
inc
rolb
add
mov
add
add
sbb
cmp
sbb
andb
loop
add
or
mov
inc
or
or
add
add
add
add
inc
pusha
add
addb
add
inc
addl
or
sahf
push
add
addl
bound
movsl
adcb
add
dec
and
add
add
mov
and
andb
add
or
addb
and
addb
call
add
and
add
add
add
add
test
inc
sbb
add
add
add
jo
nop
add
add
or
andb
add
rolb
adc
or
or
cmp
addb
mov
adc
add
add
sub
inc
rorb
mov
dec
sbb
add
and
and
adc
add
jne
add
add
add
mov
bound
or
add
add
adc
adcl
and
or
inc
les
sub
or
and
xor
subb
add
inc
add
add
inc
adcb
add
movsb
and
add
les
and
inc
xor
add
dec
add
add
add
add
sbbb
inc
add
and
adc
adc
add
adc
clc
and
or
xchg
add
repnz
mov
enter
dec
mov
or
inc
or
mov
add
adc
add
add
push
mov
sub
add
inc
mov
add
and
add
mov
inc
add
add
and
xorb
adc
inc
and
add
enter
andb
add
inc
stos
add
lcall
pusha
add
cmp
mov
mov
and
insb
inc
or
push
inc
add
push
adc
andb
sbb
inc
addb
add
and
mov
rcrb
add
and
adc
push
mov
addb
adc
inc
inc
or
add
cmp
pusha
or
orl
add
add
inc
add
fmuls
adc
inc
or
add
add
adc
inc
add
or
sub
adcl
addb
add
shl
xchg
les
or
add
adc
and
andb
dec
push
inc
add
adc
inc
push
add
addb
add
inc
inc
bound
or
jb
and
and
add
inc
add
or
or
and
add
sbb
nop
add
adc
add
add
jb
add
add
add
adcb
and
or
test
dec
add
add
andb
add
add
inc
add
nop
add
inc
adc
xchg
andb
loop
add
inc
add
add
add
mov
add
add
xor
inc
movsb
add
mov
and
add
orb
add
cltd
push
add
add
or
add
add
mov
and
push
push
inc
and
addb
sub
dec
add
add
inc
and
push
sbb
sbb
mov
add
add
push
jns
or
orb
add
add
add
add
or
dec
adc
inc
add
and
inc
add
add
rolb
inc
and
add
add
roll
add
insb
test
mov
and
push
add
dec
add
adc
adc
push
dec
andb
mov
jo
sbb
add
or
add
or
adc
push
rolb
add
add
dec
dec
adc
and
sbb
xor
adc
fldenv
jl
mov
addb
add
add
inc
add
addb
add
add
pop
add
add
add
or
adc
pusha
or
add
andb
addb
inc
push
mov
or
or
adc
add
adc
les
lret
adc
adc
loopne
mov
enter
inc
inc
addb
pusha
add
adc
loopne
add
add
xchg
or
add
or
adc
inc
adcb
pop
pusha
cmp
add
adc
add
add
add
xor
add
and
push
fs
add
sbb
inc
sub
add
and
adc
inc
sbb
dec
add
test
inc
add
push
add
or
add
add
and
add
add
sub
push
add
and
loopne
andb
inc
add
add
add
addb
orb
inc
addb
add
or
add
push
adc
xchg
test
arpl
add
inc
and
add
addb
xchg
adc
rolb
.byte
.byte
dec
pop
movb
lock
lock
add
cmp
add
jle
add
fadd
add
ret
add
add
inc
add
xchg
ret
or
add
pop
lds
add
ret
mov
add
mov
add
data16
mov
add
xor
add
mov
ret
jp
add
lcall
add
les
add
ret
add
xor
add
sub
add
nop
lds
add
add
ret
mov
add
rol
add
ret
add
ret
add
les
add
add
movb
add
add
lds
add
ret
add
in
lds
add
ret
add
push
lds
add
ret
inc
movb
rol
add
lds
add
add
les
add
add
inc
lds
add
lds
add
add
movsb
movb
add
add
jo
add
lds
add
add
xchg
add
sbb
add
es
add
in
add
insb
lds
add
add
dec
les
add
add
add
add
add
jo
add
inc
enter
movl
add
add
movl
add
movl
add
enter
movl
add
add
sub
add
mov
add
cmp
add
or
add
hlt
movl
add
movl
add
add
sub
add
add
add
mov
enter
enter
add
add
enter
lret
or
add
push
leave
add
adc
add
ret
add
add
leave
add
dec
lret
jl
add
pusha
leave
add
mov
add
sbb
add
cli
leave
add
mov
add
pushf
lret
insb
leave
add
mov
leave
add
mov
add
inc
lret
cs
fmul
add
enter
clc
enter
lret
leave
add
sahf
leave
add
xor
add
inc
leave
add
outsb
lret
add
add
mov
add
add
add
ror
add
lock
loop
add
add
add
add
inc
add
in
add
inc
push
inc
add
push
add
add
add
lock
inc
add
push
add
add
inc
add
out
add
add
push
push
inc
push
xor
cs
insb
add
add
inc
push
insb
addr16
jne
je
outsb
add
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
inc
push
popa
imul
outsb
add
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
imul
push
outsb
fs
gs
popa
addr16
add
add
dec
jae
imul
jae
popa
addr16
add
add
push
gs
imul
jae
add
add
insb
insb
push
imul
outsl
arpl
add
push
gs
outsl
arpl
add
add
push
push
outsb
outsl
ja
add
add
je
gs
je
jo
imul
add
push
gs
jne
jae
jb
add
push
gs
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
fs
arpl
push
add
add
jae
push
jne
je
gs
popa
add
add
je
outsb
jne
add
dec
data16
je
arpl
add
push
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
gs
insb
imul
inc
popa
je
add
add
inc
push
outsb
jne
je
insl
add
add
fs
outsb
jne
add
add
je
insb
addr16
je
insl
add
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
add
push
imul
popa
jae
inc
js
add
add
inc
jb
popa
je
push
imul
push
add
add
jae
popa
addr16
gs
add
inc
push
js
inc
add
add
fs
imul
add
fs
popa
jb
je
add
dec
outsl
popa
fs
jne
jae
jb
add
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
add
inc
gs
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
add
jae
popa
addr16
outsl
js
add
add
je
outsl
jns
imul
add
je
imul
js
push
add
add
push
gs
imul
outsb
addr16
add
add
inc
gs
insb
imul
je
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
push
js
push
add
add
fs
arpl
insb
gs
je
jb
push
add
add
outsl
jae
inc
insb
imul
add
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
dec
outsb
jbe
insb
imul
je
add
add
push
imul
outsl
arpl
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
je
jne
dec
outsb
jne
add
add
je
outsl
jns
outsb
jne
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
fs
je
push
imul
add
inc
gs
imul
arpl
add
popa
bound
imul
add
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
add
push
gs
insb
addr16
je
insl
push
gs
push
add
add
je
outsb
jne
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
jb
ja
gs
push
add
add
imul
ja
jb
insl
push
outsl
imul
inc
imul
js
popa
jb
insl
push
add
add
jo
je
push
popa
addr16
add
add
inc
gs
imul
js
push
add
add
push
imul
add
add
dec
jo
outsb
inc
insb
imul
add
add
inc
push
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
popa
addr16
add
push
inc
push
push
cs
insb
add
add
pop
pop
arpl
inc
imul
pop
pop
addr16
popa
imul
add
je
jne
jo
jb
add
pop
popa
fs
jae
pop
imul
add
js
push
push
js
gs
imul
pop
arpl
je
outsl
insb
data16
add
add
js
gs
pop
push
gs
add
add
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
add
ja
jae
push
add
arpl
gs
add
insl
gs
insl
outsl
jbe
add
add
aas
xor
inc
pop
push
inc
pop
inc
pop
add
add
pop
popa
arpl
insb
outsb
add
add
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
add
ja
jae
outsb
add
add
pop
imul
insl
add
add
jae
je
jae
jb
popa
je
gs
add
add
pop
pop
jo
pop
insw
outsl
fs
add
aas
je
jb
imul
pop
inc
pop
pop
pop
add
add
jo
pop
arpl
insl
outsl
fs
add
pop
arpl
js
je
add
pop
gs
je
add
gs
je
add
add
gs
je
add
add
jae
je
popa
jo
pop
je
jo
add
add
ja
jae
outsl
jne
add
dec
xor
cs
insb
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
outsl
jb
add
add
je
imul
add
push
dec
inc
dec
xor
cs
insb
add
add
dec
outsl
arpl
inc
jb
add
add
outsl
bound
inc
outsl
insl
jo
arpl
add
je
jb
imul
push
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
outsl
bound
push
outsb
insb
outsl
arpl
add
add
gs
je
push
push
add
add
insb
jae
jb
outsb
push
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
jbe
outsb
je
add
add
inc
gs
jb
arpl
fs
jae
add
add
insb
jae
jb
popa
je
add
add
insb
jae
jb
jo
outsb
push
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
add
je
jns
je
insl
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
push
popa
imul
insb
gs
bound
arpl
add
outsl
bound
push
imul
inc
gs
jb
imul
imul
push
jb
je
push
jb
imul
imul
inc
insb
outsl
bound
inc
jb
add
add
push
gs
jbe
outsb
je
add
add
jb
insl
jo
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
insb
jae
jb
jo
push
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
jae
je
jbe
outsb
je
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
add
inc
insb
outsl
bound
dec
outsl
arpl
add
inc
dec
dec
xor
cs
insb
add
add
gs
insb
inc
bound
je
add
push
inc
push
dec
xor
cs
insb
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
nop
lret
add
fs
add
add
test
add
inc
add
sbb
add
adc
add
jp
add
test
add
and
add
scas
enter
roll
movsb
int
add
ret
lods
int
add
lret
sbb
add
pop
movb
lock
lock
add
cmp
add
jle
add
fadd
add
ret
add
add
inc
add
xchg
ret
or
add
pop
lds
add
ret
mov
add
mov
add
data16
mov
add
xor
add
mov
ret
jp
add
lcall
add
les
add
ret
add
xor
add
sub
add
nop
lds
add
add
ret
mov
add
rol
add
ret
add
ret
add
les
add
add
movb
add
add
lds
add
ret
add
in
lds
add
ret
add
push
lds
add
ret
inc
movb
rol
add
lds
add
add
les
add
add
inc
lds
add
lds
add
add
movsb
movb
add
add
jo
add
lds
add
add
xchg
add
sbb
add
es
add
in
add
insb
lds
add
add
dec
les
add
add
add
add
add
jo
add
inc
enter
movl
add
add
movl
add
movl
add
enter
movl
add
add
sub
add
mov
add
cmp
add
or
add
hlt
movl
add
movl
add
add
sub
add
add
add
mov
enter
enter
add
add
enter
lret
or
add
push
leave
add
adc
add
ret
add
add
leave
add
dec
lret
jl
add
pusha
leave
add
mov
add
sbb
add
cli
leave
add
mov
add
pushf
lret
insb
leave
add
mov
leave
add
mov
add
inc
lret
cs
fmul
add
enter
clc
enter
lret
leave
add
sahf
leave
add
xor
add
inc
leave
add
outsb
lret
add
add
mov
add
add
add
ror
add
lock
loop
add
add
add
xchg
adc
out
divl
jns
xchg
mov
clc
cmp
cmpsl
push
idivl
sub
rcr
mov
mov
enter
push
fistl
mov
mov
or
pop
push
std
hlt
push
in
fisttpl
mov
add
xlat
imul
push
mov
in
mov
pop
jns
rcll
aad
push
xchg
push
dec
sub
cmp
les
dec
xlat
cmp
xor
sub
xchg
mov
mov
pop
das
add
movb
pop
js
cmp
adc
pop
jle
jmp
outsb
iret
bnd
cmovl
cwtl
jg
cmp
sub
inc
andb
push
push
dec
sub
hlt
stos
scas
pop
cmp
lret
mov
ja
sub
nop
and
or
int
dec
mull
xchg
dec
mov
mov
cld
lea
test
ficompl
js
pop
pop
adcb
sub
fcmovnu
inc
pop
and
push
out
mov
mov
ror
cmp
jb
call
loopne
mov
test
pop
sahf
sbb
and
pop
adc
js
fcmovne
outsb
rclb
mov
andl
pop
xor
pushf
popa
sub
xchg
adc
fcoms
xor
iret
int
repnz
pop
add
mov
sub
lock
jo
jge
inc
je
mov
cwtl
popa
jl
mov
xchg
iret
jecxz
scas
sbb
xor
cli
popa
jo
push
xchg
out
and
push
xchg
cmc
pop
inc
jl
mov
xchg
ljmp
dec
fstpt
adc
fsts
test
dec
sbb
adc
sub
roll
out
jge
jbe
int
push
xorl
push
inc
xchg
inc
fisttpl
stos
and
test
adc
test
xor
mov
xor
inc
test
stos
and
aas
sub
pop
xchg
inc
dec
cli
sbb
cmovp
xchg
dec
shr
cmc
xchg
push
pop
mov
adcb
push
test
xchg
xchg
sahf
popa
xor
fildll
movb
icebp
imul
iret
push
stos
mov
sub
pop
jne
fcom
dec
popa
xchg
pusha
jno
dec
stos
jnp
shll
test
dec
pop
inc
ja
adc
adc
notb
call
enter
mov
mov
pop
out
add
xchg
xchg
fisubs
aam
and
cltd
popf
fldt
enter
add
test
lea
dec
mov
and
add
out
addr16
sub
lock
mov
std
push
in
dec
clc
mov
int3
xchg
pushf
frstor
outsl
push
ret
add
and
add
xor
pop
fdivs
cmpsb
fstpt
sub
enter
xchg
enter
sub
jge
fwait
inc
xchg
pop
iret
push
movsb
sarb
cld
and
add
xchg
mov
push
xchg
or
mov
hlt
cmp
iret
sarl
dec
nop
mov
adcl
inc
mov
push
loop
popa
mov
pop
xor
sbb
sarb
mov
sbb
or
lock
fxch
add
leave
enter
mov
jbe
inc
xchg
pop
sbb
outsl
outsl
cmpsb
dec
xchg
and
ret
loopne
movsl
insl
clc
fistpl
mov
cmpb
pop
inc
add
and
fwait
and
xchg
lods
fwait
in
ss
ja
les
insb
fisubl
cmpsb
call
and
pushf
test
mov
std
leave
dec
mov
ficoml
repz
aam
mov
jne
rcll
adc
cmp
cmp
imul
cmp
lret
les
in
clc
or
mov
inc
outsl
loope
xchg
iret
cltd
inc
adc
mov
cwtl
cmp
jbe
jb
mov
mov
jb
xor
fistpl
pop
out
add
pop
and
adc
mov
xchg
lcall
test
mov
fimuls
mov
imul
dec
cmpsb
cmpsb
sub
or
loopne
repnz
mov
ds
orl
xlat
fldt
mov
mov
scas
movsb
inc
pushf
jmp
push
in
test
repnz
js
cmp
jp
sub
daa
pusha
mov
insl
xchg
xchg
jle
std
sbb
xorl
inc
das
mov
mov
outsl
popf
cvtps2pd
lahf
bound
nop
int3
xchg
pop
aad
shrb
push
out
popa
or
or
rcrl
jp
xchg
push
dec
xchg
or
sahf
or
mov
out
idiv
sbbl
xchg
mov
dec
pop
cmp
cmp
adc
jl
mov
push
ja
loopne
es
out
mov
test
add
or
mov
jnp
icebp
aas
sbb
ret
cltd
fsubl
lock
mov
mov
lret
cwtl
in
out
inc
xchg
jmp
adc
iret
cmp
inc
xchg
xchg
es
in
into
mov
xor
jmp
push
sbb
push
adc
addb
sub
mov
xchg
pop
adc
push
cs
out
xchg
lods
fistpll
sub
sbb
cltd
add
inc
xchg
xor
dec
fstpt
mov
cmp
mov
cmp
scas
fistpl
in
mov
iret
cltd
js
pushf
ja
and
pop
push
mov
nop
xchg
bound
clc
rol
jns
sbb
mov
idiv
mov
ja
mov
add
pop
pop
dec
dec
sub
cwtl
cli
or
sbb
into
and
loopne
jno
mov
add
cwtl
cmp
jl
xchg
aaa
shl
push
outsl
test
mov
jl
outsb
fwait
mov
imul
icebp
test
sbb
sbb
xor
push
aad
sbb
es
adc
lcall
pop
dec
pushf
shlb
adc
fsubs
pop
mov
xchg
aad
mov
jp
sbb
mov
mov
std
loop
xchg
mov
leave
stos
jbe
push
sub
inc
lcall
or
and
fnsetpm(287
ljmp
int3
push
jno
or
cmp
rcl
mov
mov
push
add
pop
mov
push
dec
insl
mov
or
pop
jno
addb
mov
int
jo
shlb
cld
mov
je
mov
pop
xor
mov
mov
enter
xchg
mov
in
inc
fistps
scas
cs
and
iret
or
scas
sbb
fcmovnbe
inc
xor
into
cltd
iret
das
dec
cli
cmpsl
hlt
xor
jl
add
jb
dec
aas
push
je
aam
fistpll
scas
add
dec
adc
inc
shl
xchg
pop
js
cmp
enter
jb
fcoms
or
movsb
dec
add
nop
xchg
pop
mov
jg
adc
and
ja
iret
mov
shrb
push
stos
inc
cmp
fwait
sbb
sub
mov
push
aad
cwtl
cmp
push
dec
stos
mov
cmp
mov
negb
mov
dec
fsubs
sahf
push
iret
push
or
jbe
fs
push
je
add
fsubp
popf
popa
gs
mov
int
dec
pusha
sub
pop
leave
cmp
xlat
mov
push
das
iret
pop
add
outsl
xchg
sbb
xchg
cmp
lret
xlat
xchg
adc
lret
adc
inc
or
out
xchg
cmp
jmp
add
jle
mov
int
push
iret
jbe
rclb
mov
popf
jmp
pop
fs
xchg
dec
subl
das
or
and
pop
add
jno
dec
scas
cmc
mov
movsl
xorl
js
jb
push
aas
ficoml
and
add
ret
mov
sbb
movsb
aam
mov
pop
dec
mulb
in
push
xchg
scas
pushf
mov
dec
pop
fiadds
or
push
jns
or
sbb
adc
bound
xor
daa
ljmp
xchg
mov
in
mov
inc
fwait
pop
rcr
adc
jnp
mov
adc
jmp
xchg
xchg
and
add
jnp
push
inc
mov
mov
mov
pop
inc
fistpl
jbe
mov
mov
insl
testl
jg
lret
xchg
push
xchg
cmp
aam
lahf
mov
adc
or
shrb
fcmovne
subl
or
mov
inc
jmp
jg
mov
cltd
mov
jmp
xchg
jle
pop
ficoml
into
and
mov
data16
jne
aaa
jo
push
into
cmp
cld
xchg
movb
adcl
cmp
cld
pop
std
aam
divb
clc
test
lret
mov
dec
pusha
jp
std
test
and
cmp
xchg
xchg
addr16
cmpl
pop
fsubs
mov
pop
mov
outsl
into
sbb
or
stos
out
aam
xchg
dec
cmp
sub
xor
idivl
xchg
ret
xchg
adc
imul
mov
leave
mov
ficoml
sub
xchg
mov
inc
sti
nop
xchg
or
out
cmpl
in
jbe
mov
push
xchg
test
sub
cmp
gs
cs
inc
jnp
xor
mov
mov
pop
dec
mov
mov
outsb
or
jae
pop
pop
push
loopne
enter
mov
insl
xor
mov
jns
mov
loope
ljmp
and
hlt
into
out
sti
pop
mov
in
xchg
addr16
adc
aas
xchg
mov
fisubrl
fstpt
rcll
add
cli
push
aad
dec
cmp
test
dec
cltd
jmp
mov
out
xor
adc
push
xchg
in
and
out
xchg
mov
mov
mov
loope
hlt
rol
iret
popf
movsb
lea
dec
je
pusha
mov
test
test
xchg
cmpsb
mov
add
aas
mov
fisttpl
ja
mov
or
mov
xchg
push
jae
mov
xchg
iret
xor
pop
adc
shrl
push
mov
add
inc
cmp
sbb
pop
jg
push
add
or
fwait
icebp
push
iret
sbb
jnp
mov
fistpll
mov
adc
arpl
int3
mov
xlat
addr16
mov
push
cmp
pop
shl
lret
dec
pop
cmpsb
pop
xchg
ljmp
pop
or
jp
out
pop
test
add
into
fdivrs
and
pop
fstpt
fs
or
testb
xchg
xchg
fcomi
and
xor
xor
pop
inc
enter
xchg
mov
repz
sbb
dec
scas
or
sub
add
test
lock
or
cmp
fucom
in
inc
jl
inc
fcomps
fildl
aas
and
ficompl
sub
pop
jb
and
andb
or
jp
outsb
mov
lea
dec
push
arpl
xorl
push
scas
push
inc
pop
jmp
iret
push
pushf
or
xor
mov
jo
addr16
inc
outsl
lds
out
xchg
cmp
inc
xor
xor
xchg
adc
dec
or
ss
neg
mov
stc
inc
adc
test
lds
cmpsl
sti
mov
sbb
repz
dec
stc
test
test
aad
xchg
mov
es
in
enter
pop
call
test
fisubs
scas
xchg
push
fidivrl
bound
adc
xchg
jbe
fisubl
sbb
aas
daa
test
or
inc
sahf
mov
cmp
inc
imul
xchg
ret
xchg
lods
jge
inc
pop
inc
and
aam
xchg
outsl
and
fsubrs
out
out
dec
push
cs
cmp
test
imul
cmp
and
push
xchg
and
test
loope
jo
sbb
addr16
add
xchg
sub
imulb
jae
cmp
out
mov
jns
jp
adc
jg
nop
push
stos
inc
cmp
popf
mov
pop
lods
loop
repnz
push
dec
dec
in
ljmp
test
xor
cld
lret
cltd
aam
or
mov
rcll
inc
push
iret
mov
adcl
jmp
aaa
mov
xchg
iret
pop
sub
xchg
sub
jge
adc
add
out
xchg
movsb
cs
pop
pop
popa
in
fldt
jmp
shlb
jle
jge
stc
pop
mov
lds
and
pop
ss
sti
pop
xchg
push
jb
into
mov
repnz
insl
mov
stc
add
in
jle
push
pop
inc
push
mov
adc
xchg
pushf
aaa
iret
es
int3
adc
xorl
mov
or
stc
jmp
sbb
daa
cwtl
xchg
int3
add
sbb
xor
or
mov
je
sub
mov
inc
dec
jge,pt
rcl
in
cmp
mov
iret
insl
xor
bound
pop
outsb
leave
mov
aam
lret
mov
cli
cwtl
pop
dec
test
adc
pop
mov
xlat
adc
cmp
dec
test
iret
cmp
cmc
imul
and
push
pop
imul
test
and
adc
cmp
movsb
iret
lods
sub
cld
or
adc
int3
xor
jbe
jp
add
mov
sub
int3
pop
repnz
out
xchg
cmpsl
das
daa
push
xchg
sbb
hlt
mov
add
xor
cmpsl
les
nop
jb
jl
jae
in
sub
test
mov
mov
push
xchg
sbb
movswl
jmp
xchg
ss
cmp
cmp
and
mov
fcompl
in
out
xchg
testl
inc
cmc
ret
lret
push
sbb
sti
bound
jecxz
push
fcomp
sub
pop
sti
adc
push
cmp
ljmp
cltd
das
inc
sbb
jp
iret
cld
out
push
pop
pop
cli
iret
iret
insl
in
mov
pop
push
pop
jae
ror
movb
jg
push
test
ret
pushf
mov
dec
in
adc
mov
xchg
push
jbe
xchg
gs
mov
pop
pop
test
das
mov
add
ret
fnstsw
fcomp
adc
shll
repz
mov
fimuls
push
mov
adc
and
adc
jns
jns
in
xchg
mov
sbb
sti
popf
xchg
cltd
pop
jb
arpl
pop
cmpsb
xor
cmpb
jae
push
adcb
out
xchg
push
mov
xchg
int3
imul
inc
rolb
fisttps
into
iret
push
or
or
pop
cmp
dec
scas
mov
or
leave
adc
mov
repnz
xchg
std
fnstcw
bound
cmp
js
xchg
repnz
jg
fisttpl
mov
scas
idivb
mov
aas
in
mov
sub
clc
mov
shr
out
shl
xchg
movsb
adc
iret
subl
sub
xchg
adc
fsubs
stc
and
fcmovne
xor
jle
push
xchg
cmc
arpl
divb
pop
fildl
shrl
xor
pop
inc
shl
mov
popa
push
xchg
jbe
cs
shr
or
add
and
aad
mov
cmp
pop
vmovlpd
sahf
and
pop
es
xchg
jo
enter
rcll
mov
xchg
mov
mov
xor
jle
minps
fwait
inc
pop
stos
cmpsb
ja,pn
jae
pop
aad
mov
add
dec
add
rclb
dec
sub
outsb
cmc
pop
jg
mov
into
jno
push
aas
jnp
adc
aaa
dec
or
movsl
mov
add
test
movsb
xchg
shll
sub
xchg
fistpl
mov
repnz
and
lret
gs
jg
sar
jb
repz
ja
mov
std
sti
xchg
mov
arpl
xorl
xor
adc
iret
mov
cmpsb
and
ljmp
loope
xor
lods
repz
push
mov
imul
cmp
ficoml
repnz
popf
jo
mov
ds
and
sbb
mov
xchg
lret
mov
adc
push
das
icebp
into
pop
sub
cmc
insl
push
lock
repz
inc
loop
xor
xor
push
divl
icebp
push
iret
pop
test
push
mov
fst
xor
lds
xchg
nop
ss
sbb
mov
dec
cmpsl
dec
jbe
mov
inc
sub
icebp
cmp
test
and
mov
dec
fisubs
jbe
pop
in
stos
inc
jb
ror
stos
cmpsb
gs
inc
or
xchg
in
cmp
push
mov
arpl
cmp
pop
in
outsl
jecxz
jnp
ror
rclb
movb
enter
and
fcmovnbe
mov
loope,pt
mov
lret
adc
int
pop
pushf
xor
xchg
cmc
insb
pop
shll
push
mov
inc
lods
xchg
jmp
jl
pop
ss
jne
cmpsl
adc
insb
in
sbb
enter
and
std
dec
jnp
cmp
data16
ja
xchg
stos
test
jb
arpl
ror
dec
cmpsb
sti
xchg
or
imul
ret
dec
jo
mov
jae
fpatan
out
mov
xchg
push
mov
rcr
mov
xchg
aam
push
clc
and
lods
stc
inc
add
fists
data16
mov
enter
icebp
iretw
or
jne
or
add
mov
fsubrs
jp
xchg
mov
shll
int3
jmp
mov
pop
and
popl
jnp
inc
sar
inc
xchg
das
into
loope
add
sbb
mov
fimuls
movb
add
bound
mov
dec
adc
test
xchg
lret
inc
push
mov
lock
pop
out
and
js
seto
fadds
sub
stc
push
hlt
fs
xchg
dec
pop
xchg
das
mov
je
xchg
cmp
popa
int
fs
dec
mov
pop
sbb
mov
sub
sti
mov
popf
cmpsb
iret
dec
or
or
adc
mov
cmp
xchg
mov
and
or
dec
mov
and
dec
mov
pop
loope
iret
aam
push
jp
or
loope
fsubs
iret
sub
fnstcw
push
lods
mov
inc
jle
jns
cld
ljmp
mov
or
adc
nop
icebp
pop
mov
divb
mov
bound
mov
pop
inc
out
fisubs
lcall
adc
pop
and
xor
int3
and
dec
gs
popa
xchg
push
lods
pop
std
adcl
hlt
out
or
into
icebp
fcmovnb
shll
pop
dec
jle
sbb
into
jns
sub
dec
xchg
xor
jae
jmp
push
mov
mov
add
arpl
gs
into
outsb
psubw
fildl
and
popa
jb
repz
xchg
sbb
fcmove
mov
fistpl
sbb
enter
ds
aam
jl
fildl
add
lret
xchg
aas
inc
int3
mov
adc
int
adc
add
or
cmc
dec
adc
pop
aad
sbb
cmpsl
lcall
xchg
lahf
and
sbb
fisubl
cld
pop
mov
sbb
xor
pushf
cltd
fcomi
std
jo
ljmp
enter
adc
ja
fidivl
scas
push
into
iret
push
xchg
roll
nop
lods
cmp
lcall
mov
iret
sahf
jae
test
orb
into
pop
andl
inc
notl
loopne
mov
push
stc
jecxz
jle
pop
loopne
lret
mov
call
rcrb
or
xchg
loopne
cmp
or
out
pop
loop
sbb
dec
es
sub
fldt
std
push
cmp
add
dec
and
mov
stos
sub
sbb
inc
inc
fstpt
lock
inc
mov
inc
sub
test
movsb
jnp
sub
out
xchg
mov
add
test
add
mov
mov
xor
ds
sbb
xor
xchg
and
inc
sbb
cld
push
xlat
dec
pop
or
jge
test
pop
dec
add
xchg
xor
in
rcr
dec
shl
test
push
lods
test
dec
lods
std
push
jecxz
mov
or
inc
and
cmp
in
fsubl
fwait
int
cmp
adc
sbb
jmp
imul
jmp
or
hlt
and
sahf
jl
iret
xorb
int3
popf
out
sub
test
fxam
lcall
test
jmp
and
cmp
int
xchg
mov
lret
jmp
mov
fneni(8087
mov
add
fists
sbb
nop
data16
mov
aas
es
and
pop
cld
cmp
pop
outsb
ret
lcall
mov
testb
iret
add
aam
dec
lods
and
out
or
sub
je
sub
mov
sub
fstpt
movsl
nop
and
and
movsb
mov
loop
fists
xchg
add
jb
mov
enter
sub
dec
notb
jns
incb
cmpsb
mov
repz
push
cmpsb
jb
popf
xchg
push
mov
mov
fnstenv
mov
pop
pop
mov
pop
jbe
test
cmpsb
mov
xor
or
jp
pminub
sbb
mov
add
mov
js
xchg
rolb
push
sbb
and
sbb
add
xchg
add
cs
ds
xor
mov
mov
movsb
daa
cmp
sbb
sbb
out
in
orl
decb
cmovnp
mov
hlt
add
ss
xchg
xchg
adcl
xor
aaa
lcall
push
ljmp
rcll
testb
and
sub
fstpl
xchg
shll
insb
int
push
sbb
cmc
aad
fiadds
pop
mov
setg
out
jns
gs
lds
lahf
dec
xchg
jno
push
push
adc
scas
xchg
xchg
movsl
loopne
mov
cmc
pop
inc
sbb
xor
cwtl
xchg
shrd
cld
push
repnz
insb
pop
dec
andl
fdivr
mov
pop
fdivr
bound
fwait
xlat
aad
insb
sbb
pop
iret
or
sub
dec
jg
inc
js
jns
sbb
std
test
scas
jns
lods
lock
div
lods
test
inc
into
rcrl
sbb
or
fstpt
ss
mov
cmp
ret
and
loopne
test
push
mov
xchg
jle
pushf
dec
jecxz
ret
scas
jl
fstpt
lods
hlt
ljmp
orb
mov
mov
daa
xor
iret
mov
scas
inc
ss
sub
and
notl
rclb
mov
jp
cmpsl
and
fbstp
leave
pop
icebp
into
mov
out
ret
jne
ljmp
sbb
jl
pop
cmpsb
clc
add
ja
shll
mov
jge
and
shr
insb
test
mov
popa
psrlw
xor
leave
pop
imul
sub
pop
sub
subl
sahf
xlat
gs
xchg
mov
gs
sbbb
add
sub
mov
add
popf
jnp
pop
aad
adc
pop
mov
mov
ret
xchg
hlt
push
add
fstpt
sti
std
push
div
stos
mov
test
or
rorl
out
data16
das
pop
es
scas
xchg
push
hlt
inc
arpl
xchg
mov
xlat
jmp
aam
pushf
ret
movsb
nop
hlt
push
pop
test
popa
xor
cmp
xchg
insb
pop
je
movsb
outsl
rorl
xorl
pop
hlt
call
and
pop
fstps
loop
pushf
bound
xchg
jno
pop
aaa
sbb
xchg
fwait
add
div
cltd
rcrl
imul
fs
dec
sub
push
sahf
sti
inc
fistpl
repnz
cmp
ret
ror
ds
scas
out
xchg
inc
xchg
in
aaa
xchg
push
rcrb
call
pop
push
fidivl
ffree
jae
leave
mov
dec
aam
scas
int
test
sbb
and
loopne
sub
lahf
or
pop
roll
js
push
mov
pop
jo
xor
pop
cli
jl
shl
inc
iret
pop
cs
ror
sarl
ljmp
adc
mov
arpl
sbb
movzwl
imul
inc
iret
mov
or
je
mov
decb
or
ret
xchg
dec
jbe
cmc
inc
xchg
mov
push
and
lea
decb
push
xchg
cmp
mov
mov
dec
inc
inc
test
push
stos
cmpsl
imul
inc
mov
je
mov
adcl
sub
mov
insb
lock
pusha
loop
jnp
fildl
stos
cmp
and
insl
xchg
lret
pop
lea
jne
aad
push
addr16
repz
fisttpl
outsb
pop
pop
icebp
xchg
dec
arpl
sarl
jae
rolb
adc
iret
popa
shr
mov
push
dec
lods
dec
rorb
push
fistpl
push
add
addl
sbb
pop
mov
cmp
xor
xchg
jmp
out
push
aam
push
lahf
add
call
popa
mov
xchg
push
mov
cmpsb
popf
mov
lock
or
divl
or
xor
imul
fs
fldt
aaa
scas
mov
jae
mov
loopne
cmc
ret
add
mov
in
inc
in
insb
xor
inc
les
pop
iret
repz
xchg
jb
je
xor
movsb
in
into
mov
sbb
cltd
cmp
xchg
adc
jne
push
incb
mov
out
dec
pop
mov
jb
or
daa
test
mov
pop
dec
add
imul
stos
inc
mov
sub
pop
pop
insb
iret
ss
xor
imul
in
movsb
cmpsb
and
pop
scas
pop
mov
iret
xchg
sarb
xlat
mov
fisubl
ds
fists
fists
into
stos
iret
outsl
cmp
mov
mov
push
and
stos
xchg
leave
aaa
push
cmp
cmp
fndisi(8087
cmpl
mov
iret
rorl
das
jne
sub
or
fisttpl
daa
sbb
iret
adc
ja
jo
cmp
pushf
out
insb
xchg
xchg
sbb
inc
test
and
icebp
push
fmull
js
cmp
jbe
incb
jmp
sbb
xchg
in
dec
pop
push
aad
enter
test
lods
jge
popl
xchg
das
je
cmpl
xor
rolb
call
in
cmp
arpl
rcrl
jg
inc
iret
in
add
adc
into
push
xchg
add
fadd
jnp
pop
xchg
inc
test
add
inc
xchg
maxps
push
hlt
outsb
mov
xchg
cmpsb
xor
and
adc
jo
jbe
xchg
out
push
adc
addl
fsubrs
arpl
xor
sbb
in
lahf
inc
xchg
and
scas
pop
push
push
rcrb
pop
sub
xor
stos
or
aad
ja
jle
push
sub
andb
cmp
mov
push
iret
mov
into
imul
lds
xor
int
int
outsl
dec
pop
jns
pop
ds
repz
fdivl
mov
in
cmpsl
and
shrl
xchg
or
iret
cmp
loop
adcl
popf
test
xor
sti
lret
inc
or
and
or
testb
push
sbb
ja
data16
cld
test
into
dec
mov
xchg
push
pop
aad
dec
mov
iret
jnp
xlat
jns
test
iret
dec
es
js
fisubrl
pop
pop
ja
jge
inc
cltd
iret
shrl
jl
pusha
mov
dec
sub
mov
sub
pop
and
les
sub
lahf
xor
and
aam
push
sub
or
lock
mov
xchg
mov
aas
dec
push
popa
loopne
cmpl
lret
sbb
jne
in
cmp
push
xlat
lcall
and
jo
sub
ret
pop
jae
xchg
je
xchg
xlat
stc
mov
xchg
sahf
pushl
fcomi
inc
cmp
aam
in
jp
push
jne
in
inc
stos
outsl
mov
movsb
pop
and
std
fiadds
lock
adc
icebp
imul
or
aaa
cmc
fxch
stos
fwait
movsl
dec
xchg
xor
test
lret
lods
cmpsl
inc
xor
push
dec
inc
aas
je
jp
mov
je
adc
mov
cli
out
inc
test
arpl
fwait
imul
clc
fcmovne
mov
out
mov
lcall
fildl
fiaddl
cwtl
ja
cltd
xchg
in
ret
test
push
add
mov
bound
sbb
push
adc
outsb
xchg
arpl
mov
pushf
pop
iret
callw
stc
aam
in
adc
sub
mov
add
out
sub
outsb
xchg
sub
sbb
jmp
movsb
lcall
dec
rcrb
push
in
lret
mov
lret
xchg
push
in
jl
and
xchg
out
mov
adc
mov
into
sub
sahf
and
cld
adc
mov
adc
sub
pop
adc
cmp
jns
pand
push
ljmp
nop
or
lock
or
xor
sahf
mov
fcmovnu
push
add
inc
fmuls
into
mov
testb
lret
ret
lods
inc
inc
in
stc
sub
pop
jbe
cmc
cld
sbb
js
jo
jnp
sbb
xchg
popa
test
addb
xchg
test
xchg
mov
mov
pop
fstpt
cmp
xchg
in
adc
movl
push
fldt
sbb
dec
jp
push
iret
pop
insl
sbb
js
clc
jl
cmpsl
inc
xor
and
into
scas
pop
addr16
mov
jge
dec
xor
iret
mov
lock
movsl
or
imul
push
mov
lods
xchg
call
dec
mov
ljmp
sbb
xchg
ljmp
fisttpl
and
xlat
fistpl
ljmp
bound
inc
rcr
or
in
mov
add
cmpsl
sub
xor
xchg
les
xchg
adc
cli
xchg
test
jg
mov
fs
xor
add
xorb
mov
mov
push
int
lods
dec
sti
mov
add
sub
xchg
lock
into
pop
mov
jle
push
pop
jecxz
xchg
negl
mov
cmp
and
push
test
push
mov
aad
xchg
push
sbbb
inc
fisttpl
roll
cmp
outsl
mov
fldcw
in
xchg
divl
xchg
cwtl
fs
mov
call
and
iret
mov
nop
in
test
cli
mov
mov
idivl
dec
lret
les
jbe
xor
cwtl
mov
dec
xchg
daa
call
sub
pop
jo
cmp
mov
outsl
cmc
lea
dec
fcomi
xchg
push
into
fistpl
std
jo
xlat
cltd
fbstp
clc
fildl
sbb
scas
outsl
enter
inc
jo
out
jb
in
roll
inc
pop
xchg
daa
push
insb
or
mov
int3
adcl
fistpll
ret
xchg
scas
jbe
lea
jmp
lahf
add
or
cmpl
sbb
jl
mov
iret
pusha
scas
jle
popa
push
adc
pop
hlt
dec
ljmp
inc
fisubs
call
enter
jbe
sbb
loopne
cmpsb
filds
scas
fsts
push
adc
fists
inc
notb
lods
xchg
divl
andl
out
inc
fstpt
jb
gs
push
cmp
and
pop
sbb
sbb
adc
roll
mov
xlat
pop
jb
sub
fistl
hlt
sbbb
icebp
arpl
and
ja
data16
icebp
fmul
repz
add
cmpsl
jnp
into
xor
scas
in
or
nop
cmp
daa
outsl
imul
sub
mov
iret
lock
gs
inc
aam
pop
xchg
inc
mov
ja
fs
push
mov
sbb
jl
icebp
fnstcw
aas
cli
fstpt
das
mov
int
xchg
bound
stos
push
iret
fwait
dec
adc
push
xchg
push
mov
and
xchg
cs
pop
lds
sbb
int
lods
adc
rol
push
in
in
cmc
cmp
lahf
fcmovnu
and
sbb
cwtl
scas
iret
in
cmp
xor
sti
jl
addr16
test
sbb
outsl
aaa
pop
int3
push
int3
mov
jo
xor
mov
push
jecxz
xchg
es
adc
xor
rcr
jbe
daa
adc
popa
mov
nop
xchg
enter
cltd
sti
std
jl
pusha
fistl
xorb
iret
sahf
clc
mov
or
xchg
sub
sar
outsb
sbbb
dec
cmp
or
iret
add
fildll
iret
nop
mov
mov
jmp
xchg
fistpll
rcr
xchg
loop
iret
push
lcall
xchg
cwtl
push
fwait
and
stos
call
mov
add
sbb
andl
mov
aas
out
add
sub
pop
jle
rorl
insb
stos
xchg
mov
cmc
ss
fldt
pop
lcall
pop
xchg
out
movsl
lods
mov
fcmovne
inc
cmc
mov
iret
jnp
xchg
nop
add
sarb
add
das
inc
test
pop
and
sub
lods
push
pop
inc
inc
iret
lret
incl
sub
mov
sbb
les
cli
push
push
push
jge
ja
pop
push
lea
push
add
shrb
out
enter
aam
jg
mov
in
xchg
mov
pop
add
dec
mov
pop
pop
cmp
addl
dec
popa
fsubs
push
push
mov
ret
xchg
scas
and
js
cmpsl
add
stc
dec
push
aas
dec
adc
das
fsubrl
push
das
dec
popf
pop
xor
add
cmpb
pop
jo
gs
lahf
sbb
pop
into
rcrb
jg
das
push
jecxz
inc
je
test
cli
movsl
push
iret
ds
iret
dec
jae
sub
enter
jg
dec
xlat
outsl
aad
inc
out
push
fwait
cmp
repnz
fildl
incl
pop
int3
xchg
sti
mov
fstpl
sbb
xchg
cmp
outsb
into
and
dec
addr16
mov
xchg
jecxz
push
jns
cwtl
test
ja
mov
or
icebp
imul
mov
inc
fistl
cli
subl
pop
mov
xchg
mov
xchg
into
inc
sub
addb
frstpm(287
cwtl
adc
out
lods
stos
iret
cmp
adc
xchg
cmp
mov
adc
dec
outsl
inc
das
fistpl
aam
cmp
jb
test
pop
dec
and
xor
std
add
fdivrl
xor
shlb
mov
dec
or
add
add
test
pop
addl
add
insl
add
add
xor
xor
add
add
xlat
dec
xchg
sbb
adc
and
repz
xchg
xchg
push
pusha
pop
repz
add
aam
sbb
mov
mov
jmp
inc
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
inc
sldt
jo
add
add
add
add
add
mov
add
add
add
add
add
or
add
rolb
add
or
add
loopne
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
jbe
add
test
add
jbe
add
and
add
jbe
add
cwtl
sub
jbe
add
adc
add
sub
add
cmp
add
sub
add
daa
add
dec
add
add
add
add
xor
add
je
dec
add
add
push
add
jo
jo
bound
cmp
outsb
add
imul
push
add
add
dec
add
add
push
add
add
dec
add
sub
js
inc
add
push
add
dec
add
add
add
add
add
inc
add
add
push
add
and
xor
inc
add
dec
add
add
and
dec
add
xor
push
add
push
add
popa
add
push
add
inc
add
push
add
add
jo
jb
push
push
add
add
pop
add
add
pop
add
add
add
add
inc
add
popa
add
add
xor
aaa
add
push
jns
xor
push
add
push
add
dec
add
jne
push
add
dec
add
and
push
add
push
add
inc
add
add
add
and
imul
add
dec
add
push
add
add
add
dec
add
js
xor
push
add
jno
push
add
add
dec
add
inc
add
add
add
add
and
insl
add
push
add
add
jno
add
push
add
xor
dec
add
jo
push
add
push
add
jb
dec
add
add
push
add
add
add
arpl
inc
add
push
add
add
inc
add
add
add
add
outsl
add
arpl
add
add
jp
inc
add
add
xor
inc
add
inc
add
add
inc
add
jno
pop
add
xor
push
add
add
add
add
inc
add
add
add
add
push
add
add
dec
add
jne
jb
and
add
sub
imul
add
and
dec
add
add
add
inc
add
xor
xor
jp
jns
pop
add
cmp
pop
add
insl
add
add
aaa
add
and
aaa
add
add
jo
cmp
arpl
xor
push
add
push
add
add
xor
imul
aaa
add
dec
add
add
insb
add
add
and
push
add
imul
outsl
add
xor
push
add
imul
inc
add
add
add
add
aaa
add
add
pop
add
insl
add
inc
add
dec
add
add
inc
add
add
push
add
inc
add
add
dec
add
bound
dec
add
dec
add
push
add
outsl
add
cmp
and
jo
dec
add
add
inc
add
jae
jne
push
add
add
dec
add
imul
add
add
push
add
add
pop
add
xor
cmp
je
jae
dec
add
and
dec
add
add
push
add
add
add
add
inc
add
add
bound
insl
add
add
xor
pop
add
and
jbe
xor
add
imul
add
add
push
add
outsl
add
add
xor
inc
add
add
add
dec
add
add
add
add
xor
add
je
dec
add
add
push
add
jo
jo
bound
cmp
outsb
add
imul
push
add
add
dec
add
add
push
add
add
dec
add
sub
js
inc
add
push
add
dec
add
add
add
add
add
inc
add
add
push
add
and
xor
inc
add
dec
add
add
and
dec
add
xor
push
add
push
add
popa
add
push
add
inc
add
push
add
add
jo
jb
push
push
add
add
pop
add
add
pop
add
add
add
add
inc
add
popa
add
add
xor
aaa
add
push
jns
xor
push
add
push
add
dec
add
jne
push
add
dec
add
and
push
add
push
add
inc
add
add
add
and
imul
add
dec
add
push
add
add
add
dec
add
js
xor
push
add
jno
push
add
add
dec
add
inc
add
add
add
add
and
insl
add
push
add
add
jno
add
push
add
xor
dec
add
jo
push
add
push
add
jb
dec
add
add
push
add
add
add
arpl
inc
add
push
add
add
inc
add
add
add
add
outsl
add
arpl
add
add
jp
inc
add
add
xor
inc
add
inc
add
add
inc
add
jno
pop
add
xor
push
add
add
add
add
inc
add
add
add
add
push
add
add
dec
add
jne
jb
and
add
sub
imul
add
and
dec
add
add
add
inc
add
xor
xor
jp
jns
pop
add
cmp
pop
add
insl
add
add
aaa
add
and
aaa
add
add
jo
cmp
arpl
xor
push
add
push
add
add
xor
imul
aaa
add
dec
add
add
insb
add
add
and
push
add
imul
outsl
add
xor
push
add
imul
inc
add
add
add
add
aaa
add
add
pop
add
insl
add
inc
add
dec
add
add
inc
add
add
push
add
inc
add
add
dec
add
bound
dec
add
dec
add
push
add
outsl
add
cmp
and
jo
dec
add
add
inc
add
jae
jne
push
add
add
dec
add
imul
add
add
push
add
add
pop
add
xor
cmp
je
jae
dec
add
and
dec
add
add
push
add
add
add
add
inc
add
add
bound
insl
add
add
xor
pop
add
and
jbe
xor
add
imul
add
add
push
add
outsl
add
add
xor
inc
add
add
add
dec
add
add
add
add
xor
add
je
dec
add
add
push
add
jo
jo
bound
cmp
outsb
add
imul
push
add
add
dec
add
add
push
add
add
dec
add
sub
js
inc
add
push
add
dec
add
add
add
add
add
inc
add
add
push
add
and
xor
inc
add
dec
add
add
and
dec
add
xor
push
add
push
add
popa
add
push
add
inc
add
push
add
add
jo
jb
push
push
add
add
pop
add
add
pop
add
add
add
add
inc
add
popa
add
add
xor
aaa
add
push
jns
xor
push
add
push
add
dec
add
jne
push
add
dec
add
and
push
add
push
add
inc
add
add
add
and
imul
add
dec
add
push
add
add
add
dec
add
js
xor
push
add
jno
push
add
add
dec
add
inc
add
add
add
add
and
insl
add
push
add
add
jno
add
push
add
xor
dec
add
jo
push
add
push
add
jb
dec
add
add
push
add
add
add
arpl
inc
add
push
add
add
inc
add
add
add
add
outsl
add
arpl
add
add
jp
inc
add
add
xor
inc
add
inc
add
add
inc
add
jno
pop
add
xor
push
add
add
add
add
inc
add
add
add
add
push
add
add
dec
add
jne
jb
and
add
sub
imul
add
and
dec
add
add
add
inc
add
xor
xor
jp
jns
pop
add
cmp
pop
add
insl
add
add
aaa
add
and
aaa
add
add
jo
cmp
arpl
xor
push
add
push
add
add
xor
imul
aaa
add
dec
add
add
insb
add
add
and
push
add
imul
outsl
add
xor
push
add
imul
inc
add
add
add
add
aaa
add
add
pop
add
insl
add
inc
add
dec
add
add
inc
add
add
push
add
inc
add
add
dec
add
bound
dec
add
dec
add
push
add
outsl
add
cmp
and
jo
dec
add
add
inc
add
jae
jne
push
add
add
dec
add
imul
add
add
push
add
add
pop
add
xor
cmp
je
jae
dec
add
and
dec
add
add
push
add
add
add
add
inc
add
add
bound
insl
add
add
xor
pop
add
and
jbe
xor
add
imul
add
add
push
add
outsl
add
add
xor
inc
add
add
add
dec
add
add
add
add
xor
add
je
dec
add
add
push
add
jo
jo
bound
cmp
outsb
add
imul
push
add
add
dec
add
add
push
add
add
dec
add
sub
js
inc
add
push
add
dec
add
add
add
add
add
inc
add
add
push
add
and
xor
inc
add
dec
add
add
and
dec
add
xor
push
add
push
add
popa
add
push
add
inc
add
push
add
add
jo
jb
push
push
add
add
pop
add
add
pop
add
add
add
add
inc
add
popa
add
add
xor
aaa
add
push
jns
xor
push
add
push
add
dec
add
jne
push
add
dec
add
and
push
add
push
add
inc
add
add
add
and
imul
add
dec
add
push
add
add
add
dec
add
js
xor
push
add
jno
push
add
add
dec
add
inc
add
add
add
add
and
insl
add
push
add
add
jno
add
push
add
xor
dec
add
jo
push
add
push
add
jb
dec
add
add
push
add
add
add
arpl
inc
add
push
add
add
inc
add
add
add
add
outsl
add
arpl
add
add
jp
inc
add
add
xor
inc
add
inc
add
add
inc
add
jno
pop
add
xor
push
add
add
add
add
inc
add
add
add
add
push
add
add
dec
add
jne
jb
and
add
sub
imul
add
and
dec
add
add
add
inc
add
xor
xor
jp
jns
pop
add
cmp
pop
add
insl
add
add
aaa
add
and
aaa
add
add
jo
cmp
arpl
xor
push
add
push
add
add
xor
imul
aaa
add
dec
add
add
insb
add
add
and
push
add
imul
outsl
add
xor
push
add
imul
inc
add
add
add
add
aaa
add
add
pop
add
insl
add
inc
add
dec
add
add
inc
add
add
push
add
inc
add
add
dec
add
bound
dec
add
dec
add
push
add
outsl
add
cmp
and
jo
dec
add
add
inc
add
jae
jne
push
add
add
dec
add
imul
add
add
push
add
add
pop
add
xor
cmp
je
jae
dec
add
and
dec
add
add
push
add
add
add
add
inc
add
add
bound
insl
add
add
xor
pop
add
and
jbe
xor
add
imul
add
add
push
add
outsl
add
add
xor
inc
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
outsl
add
push
add
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
dec
add
inc
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
aaa
add
add
arpl
inc
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
cmp
dec
add
cmp
jne
ja
push
add
add
add
sub
add
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
adc
decb
add
add
add
add
add
add
add
push
cmp
andb
lahf
aaa
ja
lods
add
xchg
sbb
pop
cmp
mov
out
lds
mov
lret
je
push
pop
xchg
aam
push
lods
xor
ficoml
and
shr
ret
into
push
call
popf
scas
mov
mov
push
cld
into
xchg
lret
insb
cmpsb
inc
and
scas
dec
xchg
mov
mov
stos
xchg
hlt
addl
xchg
jo
pop
add
scas
fildl
mov
sahf
mull
enter
xchg
pop
lret
sbb
aam
test
adc
sbb
add
lret
loop
andb
lea
cmp
fistl
fwait
inc
scas
scas
aad
sarl
and
pop
fists
xlat
pop
stos
jp
jecxz
iret
fcmove
pop
sbb
call
inc
jne
bound
xchg
mov
enter
pop
std
test
dec
popa
enter
inc
test
mov
fildl
dec
lret
insl
sbb
xchg
fmuls
cmc
outsl
and
fisubrl
stc
shlb
and
adc
out
add
test
pop
adc
xor
pushf
gs
cwtl
std
leave
popf
insb
rcll
data16
mov
fisttpll
sbb
inc
dec
scas
sbb
enter
add
ret
and
fistpl
xor
arpl
sub
xlat
xchg
repz
sti
cmp
push
mov
iret
and
xor
ja
jnp
test
jnp
outsl
out
into
adc
lods
xor
jle
inc
sahf
rorb
movsb
out
sbb
cltd
xor
fisubl
ss
sub
push
sbb
iret
lahf
mov
lahf
lods
stc
sub
clc
sbb
jmp
push
iret
leave
mov
jns
cmp
out
pop
jmp
add
lret
scas
xchg
mov
xchg
jb
or
xchg
xchg
sbb
sahf
pop
jle
in
into
mov
fdivr
fcmovnbe
daa
and
add
fsubs
pop
adc
xchg
mov
iret
add
movsl
addr16
xchg
push
mov
dec
out
sbb
subl
into
orl
fwait
xchg
or
cmp
xor
push
sub
stos
jg
mov
xchg
fstpl
push
iret
popa
add
dec
fdivr
xor
sub
imul
cmc
adc
adc
ret
test
das
scas
outsl
loop
fst
add
iret
lods
loopew
mov
or
fcmovb
mov
jg
lcall
bound
xor
mov
or
imulb
sub
inc
pop
or
pop
ljmp
rolb
mov
lcall
leave
mov
fcmovnu
std
imull
scas
sahf
jmp
popa
bound
add
xchg
sarb
xchg
ret
outsb
and
push
pop
inc
xchg
outsb
xchg
xchg
pop
push
or
insl
inc
ljmp
push
cmp
data16
jge
addr16
xchg
jno
mov
sbb
push
enter
mov
mov
sbb
imul
stos
lods
iret
mov
jmp
mov
mov
andl
fwait
pop
push
add
insb
arpl
jbe
or
movsb
mov
es
cld
inc
push
push
jae
xchg
jle
mov
lods
popa
in
mov
xchg
rorl
cs
push
ja
sub
in
and
fcomps
pop
faddl
arpl
mov
adc
stos
mov
iret
and
jmp
push
stos
adc
mov
cld
in
add
cwtl
clc
ja
add
aam
dec
imul
loop
lahf
out
xchg
repnz
or
ret
aas
lods
adc
xor
sbb
sti
cwtl
mov
arpl
xchg
cmpsb
push
and
scas
das
sub
adc
push
sbb
test
aad
and
xor
imul
scas
lahf
cld
roll
nop
or
push
pusha
dec
jl
gs
shrl
xchg
repnz
bound
imul
movsb
rclb
stos
pop
push
sub
pop
jg
cltd
sbb
std
neg
sbb
mov
pop
and
pop
sbb
inc
or
js
std
into
add
mov
jns
or
imul
sbb
mov
int3
fildll
sub
jns
pop
jecxz
fstpt
mov
repnz
ja
cmpsl
int
lods
sbb
push
inc
jbe
test
sahf
fdivl
inc
xchg
pop
cli
loope
outsl
inc
push
fistpl
adc
jbe
sub
mov
push
jecxz
ret
imul
push
jecxz
jno
adcl
jl
les
repz
aad
xchg
or
pop
out
ret
mov
fildl
inc
jle
fcoml
add
xchg
and
cs
mov
fidivrs
xchg
lock
cmp
dec
int
pop
js
dec
and
sbb
mov
or
jo
pop
loope
add
sbb
xor
and
mov
dec
bound
jo
pop
add
fildl
test
xor
add
cmp
pop
xlat
xchg
cmp
lock
add
cmp
orl
icebp
and
iret
stos
fwait
lods
stc
jp
or
push
out
imul
and
into
test
pop
cmp
sbb
xor
or
mov
jnp
mov
xor
icebp
rcr
mov
popf
divl
mov
or
pop
xor
cld
mov
shll
out
fisttpl
ja
or
pop
add
and
lds
add
inc
push
mov
or
mov
sub
jmp
cli
in
out
int
or
pop
mov
fs
scas
and
and
jg
out
inc
out
xchg
cmp
jae
addr16
xchg
movsb
fs
sbb
enter
cltd
xlat
aad
push
push
xchg
lea
imul
rcr
pop
daa
leave
inc
sbb
xor
xchg
inc
adc
adc
jbe
out
test
xchg
dec
dec
xchg
adc
cld
ret
xchg
test
imul
sahf
adc
andl
add
rol
cmp
shlb
mov
cmp
adc
cmp
add
shl
fs
or
inc
mov
jo
mov
or
insl
pop
insl
int3
or
or
adc
clc
sbb
mov
add
dec
pop
mov
aam
in
aaa
cli
aad
je
movsb
xchg
sbb
pop
xor
xor
add
sbb
addl
adc
int
sbb
inc
push
les
ror
xchg
or
push
stc
ret
dec
add
shl
test
cld
push
pop
fwait
dec
pop
cmp
push
daa
nop
mov
test
lds
or
mov
adc
leave
in
ret
cmp
out
loopne
mov
fisubl
inc
sbb
cli
mov
dec
sbb
test
push
push
inc
jae
xchg
mov
pop
push
jmp
divb
nop
mov
fstl
outsl
xchg
xchg
and
pop
inc
mov
rcrl
jl
add
iret
dec
dec
jecxz
mov
iret
mov
out
mov
mov
jbe
jmp
add
aam
pop
pop
ds
mov
sbb
fcmovnu
aam
cmp
iret
incl
xlat
xchg
push
pop
pop
xor
sbb
sub
pop
mov
nop
cwtl
xor
dec
ret
lret
jmp
xlat
cld
and
in
add
cmpsb
mov
sbb
jp
push
push
xchg
fwait
lss
and
aas
xchg
daa
add
xchg
and
ficomps
jmp
mov
adc
scas
xchg
enter
inc
inc
mov
cwtl
inc
adc
fcmovne
les
stc
push
cltd
lods
sub
jg
pop
movsl
mov
sub
or
iret
mov
inc
or
test
movsb
xchg
scas
pusha
iret
xchg
cmp
jle
mov
adc
sub
mov
jns
cmp
and
sbb
lret
dec
cmp
mov
dec
mov
push
sti
loop
adc
push
mov
fbstp
dec
xor
imul
sbb
pop
stos
shrl
ss
adc
mov
jo
sbb
ficoms
push
imul
mov
or
dec
pusha
in
stc
lock
outsl
lds
pop
gs
jecxz
ret
xor
xor
insl
loopne
shll
aaa
xchg
add
call
addps
fisttpl
mov
inc
js
mov
in
roll
outsb
int
adcl
push
pop
test
in
add
dec
xchg
sub
xchg
jg
lret
ret
out
daa
fildl
sbb
dec
lcall
imul
rcrl
iret
enter
shr
xor
mov
jmp
lods
push
xchg
xorl
adc
or
sbb
icebp
test
and
ss
rcrb
jnp
add
inc
xchg
ret
fisttpl
stos
xchg
iret
daa
in
push
stos
dec
stos
inc
push
dec
repz
jge
push
lock
insl
jne
fstpt
ljmp
mov
dec
rcll
shl
fcomps
xchg
xchg
fwait
sbb
rorl
mov
push
dec
adc
cmp
jbe
cmp
and
mov
pushf
cmp
adc
testb
dec
mov
fcmovne
cmpsl
stos
pop
fsubl
insl
dec
inc
cmc
adc
cmp
push
adcb
push
mov
or
adc
inc
dec
lret
and
repnz
inc
add
xchg
sub
push
enter
mov
cs
cld
jecxz
pop
les
and
repz
jne
lods
test
shrd
inc
out
test
add
or
xor
add
test
jg
pusha
in
test
stos
jnp
xor
iret
sbb
rcl
or
xchg
mov
xchg
shlb
mov
fstpt
mov
scas
adc
dec
popa
iret
adc
pusha
js
pop
xchg
push
repnz
icebp
pop
sub
pop
sub
hlt
cmp
sahf
mov
pop
and
dec
cltd
int3
or
inc
iret
aaa
mov
out
push
test
add
mov
push
xchg
int3
pop
stos
dec
shll
or
cmpsl
sbb
mov
and
pop
xchg
pand
jmp
je,pt
or
mov
ficomps
pop
sub
pop
inc
xchg
xlat
add
out
dec
sbb
inc
pop
push
or
or
fisubs
xchg
and
movsl
bswap
adc
inc
pop
popa
or
jge
int3
jnp
pop
iret
add
popa
xor
adc
repz
icebp
cmpsl
lret
pop
add
std
stc
insb
xchg
int
mov
xchg
or
lods
jmp
jl
test
dec
jae,pn
mov
mov
ds
cli
fildl
sub
les
sbb
pop
xchg
inc
xchg
nop
xchg
adc
cmpsb
xor
sbb
out
mov
cltd
iret
pop
inc
shrb
test
pop
sbb
ss
repnz
mov
leave
lods
iret
fistpl
rclb
insb
jecxz
mov
pop
mov
lahf
adc
dec
stos
in
aam
in
movsl
cltd
sbb
xor
push
fcmovnb
subb
jp
shlb
or
out
int
fldt
mov
sbb
mov
das
add
sbb
jecxz
jecxz
xchg
mov
hlt
sahf
inc
xchg
xchg
enter
add
cltd
mov
stc
ret
testl
xchg
popa
cmp
push
pop
pop
jns
enter
mov
sub
adc
dec
xchg
test
pusha
jns
outsb
xchg
in
pop
fcmovne
mov
xchg
push
pop
and
out
push
sahf
jne
adc
and
mov
xchg
aad
adc
pusha
xor
scas
loopne
sbb
loop
stos
xor
mov
ficoml
jle
repz
mov
pop
and
sub
jae
mov
push
sub
add
ficompl
enter
pop
sbb
xchg
xchg
mov
adc
xor
int
aaa
les
xchg
pop
fldt
xor
push
iret
sbb
mov
lea
das
js
iret
rol
mov
cmp
sub
mov
add
iret
std
or
insl
out
mov
pop
or
push
dec
xchg
push
mov
in
jbe
xor
hlt
fstpl
dec
das
xchg
and
popf
dec
arpl
pop
lock
push
inc
jmp
add
cmp
or
sub
pusha
nop
pop
fdivl
daa
out
dec
dec
adc
arpl
push
inc
jmp
xchg
xchg
cli
xchg
mov
loopne
or
pushf
ja
test
mov
and
or
jecxz
repnz
ds
daa
xchg
arpl
mov
jb
sbb
sub
fucomi
mov
push
shlb
sarb
xchg
xchg
scas
mov
je
mov
mov
pop
sbb
add
scas
sub
mov
mov
fs
sbb
clc
test
jmp
push
dec
ret
loop
push
iret
jle
jmp
adc
lcall
mov
sub
mov
gs
jg
or
div
sbb
and
pushf
leave
sbb
fs
addb
cmp
xchg
mov
jae
lods
xorl
mov
cmc
cmpsl
clc
sbb
push
xchg
dec
and
pcmpgtb
push
shlb
movsl
sub
and
jmp
pop
cmp
mov
xor
push
scas
inc
into
xchg
dec
pop
adc
das
aas
lds
xor
ljmp
scas
aad
lods
in
dec
mov
jne
outsl
fildll
sub
xchg
and
iret
bound
or
test
adc
xchg
arpl
pop
and
data16
adc
into
ljmp
or
mov
xchg
jae
dec
sarb
adc
and
fincstp
or
int3
outsb
inc
nop
dec
daa
test
xchg
fldt
cltd
or
ja,pn
pop
push
xchg
cmp
orl
mov
orb
mov
cld
cmp
js
imul
pop
xor
push
out
xchg
mov
jg
int
inc
rcl
scas
xor
movsl
nop
mov
xchg
mov
clc
add
pop
xchg
sbb
xchg
xchg
lcall
aam
ret
sub
outsl
jbe
fistl
xchg
inc
shrl
sbb
dec
mov
mov
lods
cmpsb
cmp
mov
sbb
hlt
cltd
ljmp
fmul
mov
mov
pop
jno
fldt
mov
aad
sti
mov
adc
dec
test
sbb
push
push
iret
imul
adc
and
or
aas
loop
lahf
or
arpl
dec
push
out
pop
jbe
xchg
or
mov
and
test
sbb
out
mov
into
out
push
repnz
and
arpl
shll
xchg
mov
or
lahf
fisttpl
loop
decl
push
iret
pop
andb
pop
ret
mov
xchg
or
aaa
sub
test
dec
xor
cmc
adc
fldcw
jle
xchg
mov
imul
pop
lret
mov
and
xchg
out
mov
mov
mov
repnz
aam
xchg
mov
sahf
aam
cmp
or
mov
je
movsl
or
cli
into
push
mov
mov
sub
cmpl
inc
fisttpl
adc
imul
mov
imul
cmpsb
dec
iret
push
mov
dec
test
cwtl
fistl
lcall
iret
movsl
mov
fiadds
pop
pop
dec
sbb
mov
out
cmc
mov
mov
sub
das
add
pop
jo
and
lret
pop
aas
and
jge
adc
into
scas
pop
add
pusha
adc
add
mov
mov
xchg
out
jb
xchg
pop
push
add
mov
mov
aas
pop
ja
lds
inc
jne
push
int3
sbb
bnd
arpl
cltd
repz
xor
xchg
fbstp
ljmp
dec
jae
push
fsubl
repnz
fs
sub
pop
push
outsb
xor
pop
aam
pop
jae
xchg
xchg
dec
decb
es
test
xchg
in
scas
fcoms
fmuls
xor
push
add
iret
ja
xchg
push
sbb
sub
or
pop
and
jmp
cmp
xchg
xchg
and
int3
xor
adc
out
push
pop
out
mov
sbb
sbbb
test
je
xchg
mov
fwait
rcrl
or
dec
jns
sarb
inc
pop
es
push
ret
dec
jbe
scas
ret
sub
mov
mov
push
imul
jo
push
mov
outsb
cmp
test
movsl
std
xchg
jg
and
nop
jecxz
ret
lahf
data16
dec
lcall
add
outsb
jnp
push
jnp
dec
in
xchg
xchg
mov
pop
fs
xchg
push
mov
rclb
jle
out
adc
add
mov
out
aaa
iret
and
arpl
pop
mov
daa
cmp
iret
orl
lret
sbbl
sub
mov
cld
lock
mov
sub
out
test
rcrl
in
iret
fcomi
fwait
scas
or
adc
fstl
insl
ds
cmc
call
mov
cmpsb
setle
push
test
add
daa
xchg
dec
in
push
mov
lret
sub
and
adc
fisubrl
testb
push
sbb
mov
dec
dec
test
lret
sbb
sarb
imul
mov
test
pushf
sarb
push
add
and
push
sbb
jo
inc
gs
dec
xchg
rcll
mov
repz
clc
dec
iret
out
jbe
inc
popf
cmpsb
cmp
push
or
mov
sub
popf
sbb
int3
sub
repz
xor
dec
mov
add
test
pinsrw
jle
les
add
popa
fistl
mov
pop
nop
adcl
fwait
dec
stos
inc
xchg
jbe
das
jne
fcoms
or
loope
std
loop
out
lahf
lret
xchg
pop
xchg
mov
jp
out
into
insl
or
int
out
dec
fldl
dec
pop
mov
pop
je
mov
iret
xlat
push
or
sub
xor
lcall
aam
aaa
push
pushf
cld
cmp
xor
push
std
mov
aaa
xchg
imul
add
jb
dec
mov
lock
inc
adc
mov
mov
push
ja
xor
mov
pop
cltd
mov
mov
pop
cltd
lret
lcall
pop
push
add
mov
aam
imul
in
cmp
pop
daa
ud1
adc
fwait
add
xchg
xchg
nop
mov
cmp
shrb
fildl
idiv
lock
and
add
sbb
push
call
repz
push
ss
sbb
jnp
xchg
mov
jecxz
fs
mov
fistpl
mov
ret
imul
fildl
rclb
add
xchg
push
lahf
in
arpl
pusha
jle
enter
jbe
jnp
fisubl
jg
test
popf
mov
out
insl
movsb
xchg
int3
cmpsl
jne
je
inc
pop
fildl
mov
test
cmp
xor
fldt
mov
mov
iret
add
mov
xchg
mov
or
jle
sbb
xor
out
xor
bound
int3
shl
jecxz
xor
data16
mov
add
or
test
mov
mov
mov
mov
xchg
inc
jnp
sub
sbb
outsl
mov
mov
mov
mov
outsl
adcl
xlat
xchg
hlt
lods
imul
loope
cwtl
and
inc
lea
jg
push
in
sub
outsl
mov
xor
jp
jmp
addb
mov
test
jno
pop
fwait
mov
inc
or
repz
out
xchg
js
jno
or
pusha
mov
sahf
xchg
mov
enter
mov
jmp
jne
cmpsl
int
jge
pop
add
jo
jo
fisttpl
jmp
adc
iret
out
in
add
lret
sub
sahf
call
pop
stos
pop
pop
imull
xchg
dec
int3
jmp
jne
xchg
scas
scas
adc
xchg
or
popa
fcoml
push
ja
push
stc
jp
in
dec
cmp
mov
pop
xor
lds
daa
ret
mov
fsubl
jge
push
xchg
sbb
mov
int
sub
push
jo
xchg
or
icebp
out
mov
cmpsb
enter
adc
mov
notl
pop
sbb
sub
cld
xchg
fistl
inc
rolb
adc
rcl
test
dec
adcb
iret
in
dec
lock
adc
dec
movsb
jl
xchg
sti
cmpl
xchg
push
lods
mov
jne
popf
jmp
mov
shl
push
scas
test
add
rolb
fiaddl
xchg
gs
xchg
addr16
inc
int
sbb
and
ss
sub
xchg
aam
push
sub
inc
pop
and
test
pop
faddp
push
fildl
shll
mov
hlt
inc
pop
cmp
lods
xchg
adc
sbb
jmp
xlat
push
movsb
repz
and
fstl
add
cld
in
fcmovb
jbe
pop
cmc
shll
push
cs
mov
imul
and
mov
cmp
cmc
xchg
jg
cmp
in
in
mov
popf
hlt
sahf
dec
pop
data16
rclb
lds
and
test
hlt
and
add
pop
test
imul
cmp
pop
scas
dec
sub
test
sarb
xchg
jmp
inc
mov
loop
shrl
in
cmp
rclb
in
xchg
pusha
cmp
test
pop
fcmovnb
mov
sub
xor
iret
jmp
test
lahf
and
dec
cli
test
pop
fisubrl
jecxz
cld
test
divl
push
pop
repnz
xor
jmp
test
add
pop
stos
popf
repz
and
jp
mov
sbb
jae
sahf
aad
mov
mov
insl
sub
js
lods
dec
push
pop
mov
add
aaa
or
mov
iret
sti
mov
mov
sbb
or
ror
cwtl
xchg
and
sti
ja
or
xchg
mov
sahf
int3
mov
movsl
nop
adc
jno
fdiv
mov
cli
mov
xchg
sbb
leave
ret
test
add
mov
sbb
fwait
test
adc
or
iret
js
fcompp
cmp
xlat
push
jge
mov
xchg
adc
pop
push
adc
jo
cmp
and
je
jmp
jb
mov
xchg
xchg
xchg
mov
test
mov
cmc
or
cmp
xlat
xchg
push
inc
mov
andl
pop
aas
clc
add
repz
and
loopne
fdiv
mov
mov
scas
test
inc
sbb
cmp
jb
or
push
test
jne
mov
stos
sti
ret
add
sbb
push
dec
icebp
add
push
or
je
inc
mov
sub
jl
xchg
push
int3
shll
hlt
dec
fildl
mov
fiaddl
aam
rolb
incl
adc
and
mov
icebp
and
pop
nop
add
iret
push
lock
or
xor
es
fsubrl
fbstp
cmp
jmp
push
inc
dec
hlt
mov
xor
dec
pop
int3
sub
add
into
loop
mov
addr16
popa
and
pop
aaa
lods
ror
movsb
stc
push
shlb
cmp
cmc
orb
or
mov
sbb
inc
shll
mov
mov
adc
xchg
sub
jae
andl
andl
lcall
or
adc
inc
inc
pop
in
jae
sbb
inc
sbb
mov
dec
std
les
lods
sbb
dec
mov
nop
mov
adc
stos
rorb
mov
adc
dec
mov
mov
mov
push
mov
imul
xor
push
mov
enter
fistpll
mov
cmp
hlt
pop
sbb
xchg
cmpsb
mov
push
int3
mov
stc
cmc
pop
mov
fcomi
inc
dec
cs
aas
daa
sub
mov
stos
pop
pop
xchg
jnp
xchg
push
or
sub
fmulp
xchg
das
adc
adc
sbb
xor
jae
fs
fildl
push
popf
lretw
jb
sbb
iret
fnstenv
ss
jo
shrb
loope
push
xchg
xchg
fidivl
ret
push
jns
push
aam
pusha
or
mov
mov
xor
pop
inc
popa
xchg
leave
xor
fwait
mov
sbb
xor
xchg
out
fstl
xor
popa
xchg
mov
in
gs
and
pop
xchg
stos
loope
sbb
dec
aad
call
jge
add
enter
lea
xor
int
testb
xchg
pop
mov
xchg
pop
out
out
das
fldt
lcall
negb
sbb
testl
loopne
cmp
pop
push
test
mov
je
inc
int
cli
popf
jle
fstpt
jl
xchg
cmc
lret
add
iret
sbb
negb
fisttps
lods
nop
loopne
into
inc
inc
xor
mov
xchg
inc
test
fdivl
lret
push
or
stos
lods
ror
aaa
lcall
sub
pop
iret
iret
pop
sub
aas
js
dec
jae
dec
dec
and
xchg
stos
out
mov
cmpsl
loop
imul
sti
fcomps
mov
ret
dec
mov
sbb
aaa
cmp
xchg
faddl
pop
dec
lcall
or
add
mov
rcrb
xlat
pop
xchg
movsb
jg
adc
and
pop
call
cmp
cld
fsubrl
leave
stc
icebp
mov
xchg
bound
cmp
mov
mov
cld
sbb
rorl
push
insl
dec
mov
aas
lods
dec
iret
cwtl
pop
shrl
push
cmpsb
pop
xchg
inc
adc
test
iret
inc
cs
mov
xchg
sbb
insb
xchg
cmp
or
xchg
mov
xchg
add
jo
loope
imul
cmp
rcrb
movsl
mov
pop
ret
and
mov
push
scas
cwtl
push
je
mov
sbbl
aaa
add
xor
pop
xchg
ds
aad
xor
and
push
fwait
nop
mov
iret
je
push
mov
mov
jo
jmp
inc
dec
scas
movsl
shufps
addr16
aaa
add
xor
insl
iret
les
popf
or
pop
nop
jbe
inc
rcrl
mov
call
out
dec
leave
repnz
inc
push
cmp
sub
cmp
daa
and
adc
xchg
loop
js
sti
cmp
lahf
lret
pop
ret
cmpsl
push
jmp
mov
in
lcall
xchg
xchg
and
sti
jae
test
test
movsb
jns
xchg
mov
xchg
mov
fdivs
test
mov
adc
sbb
mov
enter
cs
xchg
rolb
hlt
stos
mov
jne
push
outsl
aam
push
cmc
ss
push
test
pushf
out
mov
iret
cltd
pop
std
pop
sahf
insl
pop
jne
dec
gs
scas
outsl
xor
fsubrs
push
mov
inc
ret
jbe
xchg
or
fbstp
fcmovnu
xchg
sbb
mov
add
dec
inc
push
mov
xor
cmc
jbe
pop
xchg
pop
xchg
cmp
xchg
mov
out
and
mov
xchg
fisubrl
mov
jno
dec
out
dec
mov
in
xchg
lods
scas
lret
mov
test
mov
inc
enter
cmp
pop
mov
pop
es
or
pop
push
ds
jno
jge
iret
add
es
loope
mov
adc
popa
xchg
lret
int3
or
repnz
xchg
pop
outsl
or
mov
scas
rep
lods
jne
xchg
mov
mov
popa
sbb
adc
xlat
out
push
iret
push
or
xor
xchg
xchg
leave
jnp
jge
inc
xchg
sti
lds
icebp
sar
xchg
jo
push
mov
sbb
inc
mov
fdivl
xchg
insl
and
push
rcr
repnz
mov
out
mov
push
aam
inc
jnp
movsb
inc
out
jecxz
mov
daa
jae
out
popf
xchg
loopne
fs
clc
pop
adc
dec
push
dec
imul
inc
js
outsb
stos
sahf
and
imul
rol
repz
arpl
mov
bound
aad
je
les
shl
mov
mov
xor
xchg
inc
lods
fisttpll
adc
cli
push
clc
add
xor
ret
inc
jae
inc
lret
push
ja
ror
dec
push
inc
sahf
test
sbbl
test
cmp
enter
es
push
cltd
mov
adc
mov
sbb
push
js
scas
sahf
mov
psubd
fsubrs
das
cmp
in
ss
into
cld
lock
mov
lcall
jl
mov
dec
cs
aaa
cmpsb
pop
fldl
sbb
test
xchg
cmp
mov
lahf
pop
cmpsb
outsb
inc
lods
xchg
inc
fucomi
jmp
in
ja
orb
xchg
repnz
xchg
test
adc
push
add
and
je
lret
jbe
jecxz
fadds
xor
inc
je
popl
push
pop
addr16
sbb
shll
lcall
xor
loop
lea
enter
roll
jne
mov
cltd
es
jp
mov
mov
enter
dec
dec
push
mov
ret
sub
or
or
add
or
mov
add
jmp
rcll
mov
pop
jns
adc
repz
push
xchg
cld
imul
imul
or
leave
dec
int
clc
fcompl
sub
mov
xor
bound
sahf
fs
adc
lea
xchg
and
orl
jle
test
push
fmull
loope
and
jbe
inc
xchg
sbb
xor
faddl
pusha
ja
rcll
pop
cs
xchg
mov
stos
sub
das
jno
jp
mov
add
cmc
lret
xchg
mov
push
test
insl
ficoms
adc
pop
sbb
mov
push
mov
outsb
cmpsl
aad
aad
out
jne
icebp
inc
xor
push
mov
mov
sti
add
mov
orl
push
loopne
lock
sub
out
jno
xchg
mov
xchg
inc
sarb
mov
ffreep
mov
adc
jp
dec
iret
ret
lret
pop
ret
or
pop
and
jb
fistl
lret
test
mov
iret
in
into
xchg
sbb
pop
jecxz
mov
sbb
iret
sbb
fdivs
out
imull
ds
in
test
les
add
jnp
out
add
dec
mov
push
pop
sub
xor
inc
std
add
xchg
dec
iret
daa
mov
xchg
jmp
adc
cltd
xchg
shlb
jbe
cmp
or
cmpb
sub
loopne
cli
int
mov
push
sbb
jecxz
sub
hlt
adc
push
push
lods
das
add
sbbb
jno
jl
xor
daa
push
leave
or
ror
dec
popa
mov
inc
and
aas
sub
movsl
rcrb
dec
movb
test
dec
sub
xchg
push
adc
shrb
mov
int
sub
test
popa
nop
in
movsl
shrb
mov
pop
xchg
cmpsb
lds
sahf
mov
fildl
add
push
mov
add
outsb
sahf
mov
mov
cmp
lcall
lret
push
call
mov
movsb
mov
sbb
push
mov
verr
jb
fcomps
sbbb
xor
sbb
pop
orb
mov
xchg
ficoml
lea
ljmp
decb
pop
dec
aam
lret
and
add
and
ret
shl
das
jmp
call
mov
cmp
testb
ja
ljmp
es
xchg
pop
and
imul
mull
and
iret
fs
mov
aaa
imul
inc
push
es
ret
xchg
pop
push
fcomps
cld
add
loope
imul
lods
enter
js
subb
pushf
aas
xchg
xchg
push
or
lea
imul
dec
push
fsubrs
push
mov
ret
neg
ljmp
test
mov
enter
xchg
in
scas
push
push
scas
dec
xchg
fistpl
or
cmp
shll
stos
fstp
pop
dec
sub
pop
loopne
mov
push
cmp
mov
jnp
xchg
movsl
fsub
into
ret
cld
jp
or
stos
incl
lods
xchg
lods
rcrl
dec
jge
movb
ret
mov
fidivrs
mov
inc
or
loopne
push
stc
bnd
iret
add
mov
xchg
int3
scas
in
ja
mov
push
popa
or
std
cwtl
nop
popf
in
xchg
dec
adc
push
or
xchg
adc
xchg
sbb
pusha
xchg
xchg
shrd
jecxz
icebp
adc
mov
fstpt
or
test
scas
jne
stos
test
lods
cld
in
int3
jge
fmuls
or
dec
mov
pushf
xchg
xor
sbb
hlt
xor
push
jnp
xchg
in
inc
add
xchg
je
or
xlat
ja
lret
pop
xchg
inc
dec
cltd
mov
fisttps
fwait
ret
aas
insb
xchg
xchg
xchg
fstp
push
pusha
lock
sub
push
pop
lea
or
cmp
fisttpl
scas
fcoms
test
into
adc
dec
or
out
lahf
std
imul
mov
add
pop
fistpl
insb
fs
into
out
xor
inc
and
test
ret
sti
cs
ret
pop
rcrb
dec
hlt
ret
adc
xchg
sbb
sub
pop
lcall
insb
addb
xchg
aad
sbb
add
test
icebp
test
push
push
xchg
es
lahf
movsb
push
mov
fcmovne
pop
roll
fdivp
inc
adc
rclb
sbb
adc
or
push
int3
pop
aam
pop
pop
sbb
sbb
mov
in
out
sti
or
push
sahf
mov
ja
push
testb
cmp
daa
test
push
adc
stc
and
lret
mov
or
push
mov
fs
addb
cmp
orb
mov
iret
push
fdivrs
js
inc
addr16
mov
jmp
lret
adc
inc
mov
xlat
ret
sbb
bound
sbb
aam
sbb
cwtl
mov
xchg
mov
xchg
fistl
cmp
xor
fcmovnb
daa
mov
pop
aaa
sahf
stos
lahf
iret
or
aam
inc
lret
xchg
orb
jmp
stc
je
jb
mov
mov
sub
scas
dec
test
xchg
add
inc
stos
gs
push
dec
mov
sbb
add
mov
cltd
mov
xchg
std
mov
popa
test
leave
das
stos
xchg
rclb
or
jb
xchg
jp
xchg
xor
mov
jnp
sbb
xchg
or
dec
pushf
dec
dec
test
pop
push
je
xor
iret
jns
mov
int
into
std
into
jg
jecxz
call
push
inc
scas
daa
hlt
lahf
jns
cmp
gs
repnz
adc
stos
pop
cmp
xchg
in
xchg
aaa
push
dec
adc
popa
sub
xchg
repnz
fcmovnb
lods
pop
fdivs
aas
mov
andl
mov
ljmp
out
neg
outsb
and
fstp
xor
loope
cmp
jp
pop
xchg
jns
mull
rcll
and
aas
xchg
cmpb
add
mov
jmp
data16
and
cmp
nop
jmp
xchg
mov
imul
sbb
arpl
add
ret
xchg
sbb
and
push
sub
sbb
lds
push
push
push
bound
jb
fwait
jecxz
scas
mov
ds
out
sbb
ss
adc
push
add
lods
jmp
sbb
sbb
and
cmovp
lahf
jecxz
rolb
loope
sarb
jg
push
shrl
test
jmp
out
lret
dec
out
insb
daa
inc
psubsb
lods
dec
sub
into
shr
xor
adc
repz
addb
mov
or
xchg
ds
mov
mov
xchg
repz
add
sub
mov
push
popf
daa
aaa
notb
mov
sub
inc
dec
jns
xlat
fcomps
cwtl
jne
shlb
inc
imul
movsl
ja
mov
mov
jnp
fistpl
ficompl
loop
out
outsb
iret
ficomps
fwait
or
mov
loope
push
iret
mov
inc
xor
pusha
xchg
push
out
pushf
xchg
pop
int
loope
sbb
clc
lret
fisttpl
sbb
iret
movsb
push
sub
pop
int
pop
push
inc
inc
iret
or
add
add
dec
xchg
leave
dec
pusha
mov
popf
fcomi
in
xorb
push
loop,pn
cmp
lea
pop
jg
movsl
xchg
ds
push
subb
shlb
lret
dec
testb
fucomi
out
mov
jae
fcoml
mov
dec
xchg
sub
sbb
jle
sbb
inc
cmp
sbb
iret
mov
fisubrs
xchg
insl
imul
push
xlat
jb
stos
adc
xchg
loope
js
or
popa
int3
push
in
xchg
call
aaa
jb
sbb
add
push
xlat
loop
lcall
xchg
mov
sbb
div
pop
ljmp
gs
lea
xor
push
add
nop
insb
inc
sbb
ds
or
mov
movsl
xchg
loop
movsl
testl
sbb
lret
cs
pop
adc
aam
inc
xchg
andl
jp
cmp
fldt
ret
xchg
inc
mov
dec
inc
rolb
insl
out
mov
sar
in
or
add
or
or
test
arpl
test
and
ret
scas
aad
mov
repnz
lock
mov
sbb
sbb
into
jnp
adc
pop
push
aaa
mov
addr16
dec
int
inc
pcmpeqw
iret
sub
mov
push
les
out
cmpsl
dec
iret
push
xchg
pusha
arpl
sbb
in
ret
das
and
mov
dec
xchg
pop
xchg
mov
movsb
add
or
imul
sbb
adc
adc
dec
jg
push
mov
sbb
dec
and
les
pushf
xor
pop
jle
mov
xor
push
sbbb
jg
dec
scas
fiaddl
or
jnp
cltd
es
push
js
in
mov
mov
mov
jae
jp
rclb
push
jbe
and
fdivrs
jno
sahf
arpl
dec
push
adc
jge
xchg
adc
clc
fcompl
ror
insl
jno
jb
int3
lock
xor
cmp
stos
xor
out
fucomi
in
cmpsl
mov
lods
cmp
sub
mov
or
into
test
aam
sbb
sbb
cmp
mov
test
sbb
mul
scas
xchg
pop
pushl
xchg
jmp
outsb
fcoml
leave
mov
adcb
xor
mov
shlb
sub
lret
int3
adc
adc
imull
scas
out
repz
mov
sbb
fcmovnb
and
inc
xchg
popf
sbb
and
mov
hlt
mov
mov
fistpl
fwait
mov
sub
mov
pop
jge
mov
mov
iret
addr16
notl
xchg
pop
imul
jecxz
add
push
jp
iret
pop
out
sbb
lods
shrb
pop
stos
dec
push
in
jg
jo
fcomps
or
int
scas
mov
idivl
adc
mov
fnsave
nop
mov
popa
and
push
pop
lds
es
cmc
mov
mov
xor
outsl
jne
shrl
aad
fcmovnu
loopne
lock
stos
ljmp
pop
dec
int3
ret
mov
ja
push
lea
xchg
pop
dec
add
in
inc
xchg
scas
mov
dec
call
xchg
push
sbb
fistpl
inc
dec
int3
push
stos
cmp
iret
adc
sbb
adc
inc
stos
xchg
add
inc
or
dec
cmc
jb
and
outsb
cmp
xchg
inc
fisubs
cmp
jnp
fldt
enter
adc
inc
push
mov
fistps
test
cmc
adc
cli
xchg
inc
xor
outsl
mov
push
xchg
inc
iret
mov
iret
rorb
lret
call
inc
into
xor
cli
fistpl
xlat
jne
leave
sub
jp
sbb
xchg
fwait
mov
rorb
idivb
sbb
xlat
mov
push
fldt
push
faddl
enter
sbb
ret
out
pop
test
inc
sbb
stos
fldlg2
pop
lds
jne
pop
shll
ljmp
cmp
lods
ficomps
repnz
mov
xlat
pop
sahf
or
iret
mov
sbb
add
dec
xchg
inc
sub
in
repz
push
mov
lods
shlb
adc
fisttpl
or
ss
sub
ljmp
xchg
les
pop
sub
jb
shll
jno
shrb
push
xchg
lea
xchg
xor
jmp
test
jp
xchg
xchg
and
or
inc
xchg
movsb
mov
push
and
fwait
iret
pop
loopne
inc
aam
leave
xchg
js
mov
pop
jb
mov
mov
hlt
rcl
push
inc
in
outsb
cmpsl
or
test
idiv
rcrb
jmp
pop
xchg
xor
outsl
xchg
xchg
mov
sub
push
push
pop
cmp
mov
nop
dec
xchg
roll
sbb
or
and
push
les
das
outsb
adc
cwtl
addr16
sub
sbb
sub
divl
sub
xor
aas
sbb
cli
insb
sub
xchg
iret
mov
out
push
xchg
insb
jne
xchg
inc
lods
and
sub
ret
jnp
mov
call
push
xor
cwtl
mov
and
add
xor
cmp
clc
pop
pop
sarb
jg
rcr
add
sub
push
outsb
fistpl
mov
or
movl
psubusw
popa
jne
imul
push
dec
or
push
pop
stos
xlat
cmp
int3
xor
pop
mov
xchg
adc
mov
stos
pop
cmpsb
inc
jmp
repnz
jmp
in
inc
mov
xchg
clc
inc
movsb
rcll
popa
dec
push
aas
nop
je
in
jge
pop
shlb
lods
outsl
leave
pop
aam
punpckhbw
mov
rolb
cmp
pop
inc
push
iret
xor
fsubl
xchg
pop
add
test
adc
adc
sub
jge
fucomp
sbb
int3
leave
sbb
in
cmpsb
jp
xor
icebp
movsl
inc
xor
sbb
jae
mov
out
and
cli
ficompl
dec
stos
push
sarl
push
push
stos
in
bound
pop
rcrb
push
xchg
bound
stos
loopne
xchg
ret
insl
data16
cmp
xchg
and
jo
fildl
leave
cwtl
sarl
das
mov
xchg
jmp
pop
sahf
add
xchg
iret
jo
stos
test
and
mov
data16
hlt
out
std
out
mov
pop
in
stos
push
mov
fisttpl
push
cmp
iret
std
add
inc
mov
jge
add
mov
xchg
imul
inc
test
xchg
xor
pop
pop
mov
repz
mov
xlat
add
adc
stc
cmp
adc
push
rclb
push
cli
movsl
dec
sub
and
out
movhps
fs
inc
xor
lret
cmc
mov
mov
dec
inc
and
sub
stos
xchg
mov
es
testb
lds
push
aaa
call
mov
inc
les
xchg
push
fldt
or
add
or
imul
outsb
insl
and
fsubl
ja
add
lahf
stc
jecxz
push
adc
lret
pop
and
inc
in
test
and
inc
insb
dec
pop
lods
xchg
daa
out
push
sbb
test
popl
xor
xchg
jle
aas
or
pop
sub
inc
ss
imul
xchg
pop
jecxz
add
xlat
jl
fisttpl
inc
xchg
jnp
inc
movsl
push
outsb
xchg
xor
test
and
js
and
pop
fsubrs
fdivs
push
jmp
aaa
enter
sub
jmp
into
cmpl
fildl
xchg
out
call
and
jns
xchg
cld
aad
lret
in
int
xchg
clc
and
and
ja
rclb
fistl
inc
sbb
sbb
push
repnz
xchg
push
das
inc
shll
inc
sbb
int
adc
mov
sahf
add
fidivs
mov
push
in
push
outsl
push
or
fimull
dec
test
push
adc
push
imul
xchg
negl
and
dec
outsl
push
adc
xchg
fdiv
das
cmc
jnp
lods
shl
adc
xchg
or
in
xchg
outsb
js
lahf
js
adc
mov
xchg
pushf
repnz
pop
pop
xlat
jg
inc
popa
dec
ficoml
xor
lret
das
pushf
rep
xchg
xchg
hlt
adc
or
push
inc
jle
push
xchg
sub
mov
jmp
adc
or
lret
popf
sbb
sbb
xchg
into
mov
jp
cmp
dec
pop
or
out
popf
scas
cmp
loope
sbb
in
adc
shlb
shlb
jl
mov
pop
xchg
loopne
imul
sbb
fcoml
mov
cs
mov
mov
lcall
xchg
jns
xchg
imul
xchg
jae
sahf
int
into
fildl
fldt
je
pop
iret
dec
dec
push
icebp
add
xchg
push
mov
cmp
cmp
icebp
out
in
xlat
inc
xchg
inc
dec
cmp
mov
add
aas
stc
andl
test
mov
outsl
add
data16
aam
mov
xchg
popa
repnz
rorl
mov
out
pop
fwait
mov
or
xchg
das
and
or
cmpsb
mov
loope
jg
jge
mov
xchg
mov
incl
fstpt
lods
jl
int
testb
dec
sbb
or
push
inc
leave
cmpsl
mov
cltd
cmpsl
dec
cmc
and
dec
adc
mov
rcl
repz
sahf
hlt
sbb
ja
cld
mov
in
movsb
push
sbbb
xchg
push
std
leave
popa
xor
or
shr
pop
push
int
iret
mov
adc
rorb
jb
ret
push
cmp
cmpl
add
sbb
movsb
inc
je
push
cmp
jecxz
mov
inc
and
dec
inc
in
or
ret
xor
dec
sub
lods
inc
push
inc
sbb
xchg
repnz
fs
les
mov
aad
cltd
ror
sbb
iret
js
test
mov
pop
call
jmp
cmpsb
inc
daa
mov
les
mov
sbb
shrb
and
and
sbb
mov
cmp
jle
out
ds
call
dec
cwtl
or
icebp
dec
rorl
js
add
cmp
mov
and
stos
xchg
xor
pop
mov
aam
bound
push
jl
in
xchg
dec
outsl
push
dec
repnz
aaa
roll
cmc
cmp
xlat
iret
stos
mov
or
mov
or
ret
stc
ja
stc
lret
inc
pop
jl
fst
pushf
outsb
rcl
aam
jecxz
ss
pop
popa
js
push
adc
repz
icebp
adc
inc
mov
xchg
xchg
and
or
fistpl
lcall
adc
gs
fcoml
jmp
pusha
add
dec
mov
iret
dec
pop
js
sub
inc
fistl
aam
push
add
aam
andl
lret
call
test
xor
movsb
xchg
rcrl
pop
outsb
push
es
sub
rolb
lock
fnstenv
ret
std
aaa
and
insb
fstpt
mov
fdivrl
cmp
xchg
xchg
xchg
cs
into
pop
xchg
fstps
mov
popf
mov
fcmovnu
int
pushf
and
fs
or
push
xor
mov
andl
xchg
iret
or
mov
ja
mov
xchg
fldt
xchg
fcoml
inc
cmp
cmp
fimuls
jnp
lods
xor
setbe
jo
and
inc
mov
mov
subl
inc
jne
aas
cmp
jmp
addr16
dec
push
jge
ss
fldenv
cli
dec
insl
iret
int3
add
cmp
shlb
sbb
ss
pop
mov
iret
cs
or
push
pop
addl
in
jae
xor
shl
and
movsl
sbbl
imul
mov
in
xor
pop
test
mov
adc
push
dec
xor
and
rcl
pusha
xchg
dec
outsl
stos
adc
ja
test
aaa
iret
or
movsb
and
pop
mov
fimuls
pop
test
mov
inc
pop
dec
dec
sbb
and
mov
mov
mov
pop
iret
aam
jnp
jecxz
fiaddl
in
js
rclb
add
cs
dec
shll
jo
xor
pop
outsl
push
ja
pop
push
ss
jmp
fucom
lahf
int3
jcxz
mov
sub
cld
fisttpl
push
mov
rcrb
mov
subps
fisubrl
mov
jg
jb
jb
call
out
adc
stos
push
mov
in
loop
xchg
push
icebp
pop
push
xor
mov
adc
sti
cmp
cmp
clc
inc
sti
outsl
adc
jecxz
jp
adc
push
nop
xchg
dec
popa
ror
mov
cwtl
add
inc
outsb
adc
mov
mov
pop
cmp
xchg
shl
pop
cmp
scas
jmp
mov
into
push
add
push
lahf
fldt
sbb
xor
pop
cwtl
xchg
sti
xchg
cmp
xorl
xchg
add
add
ja
pop
mov
les
cmpsl
cld
xor
or
cld
pushf
xchg
sub
mov
pushf
rcr
divb
ja
pop
inc
call
or
mov
lea
push
add
pop
enter
or
xchg
aas
jbe
sti
cmp
cs
fs
mov
repz
mov
das
xchg
jne
jge
add
dec
dec
cltd
or
popf
iret
jbe
or
dec
pop
testl
and
cli
sbb
ljmp
push
mov
inc
mov
fldcw
push
pop
dec
xchg
jne
popa
xchg
mov
scas
mov
fs
jl
fdivr
and
dec
push
das
or
push
popa
cmp
dec
xchg
xchg
and
xchg
push
add
out
inc
movsb
lods
hlt
outsl
filds
push
push
xchg
xor
sbb
cli
mov
fucom
xchg
xor
mov
mov
push
test
pop
or
fldt
aam
jmp
das
popa
int3
je
cmp
jmp
fcoms
lgs
cmpl
xchg
fistl
cmp
dec
and
in
iret
push
or
enter
icebp
sbb
jnp
iret
imul
jl
and
ret
inc
out
xchg
xchg
dec
fildll
mov
rclb
in
test
inc
aad
jae
push
das
mov
jecxz
clc
mov
mov
xchg
mov
sbb
fisttpl
hlt
and
iret
mov
in
cli
mov
shll
jecxz
inc
xorb
imul
lds
aam
adc
jg
pusha
xchg
icebp
mov
data16
pop
out
add
data16
adc
dec
pop
jp
cmp
mov
addb
div
mov
xchg
sub
or
lods
xchg
or
push
leave
jo
cwtl
fcomi
pop
out
scas
movsl
notb
jecxz
pop
pop
and
or
sub
fsubrl
lret
fstpt
inc
pushf
mov
popa
push
outsl
sti
test
fildl
leave
sahf
bound
inc
fdivs
jns
jb
shrl
ret
imulb
push
xchg
mov
xchg
ljmp
push
inc
mov
inc
mov
lock
ret
call
addr16
xchg
push
cmpsl
and
jae
das
aam
mov
insl
push
add
popf
dec
call
insl
fdivr
imul
sbb
cmp
inc
lret
xor
ret
into
scas
adc
int3
cli
jp
adc
xor
fstpl
mov
fildl
or
fld
sbb
inc
and
sub
mov
jp
dec
cmpsl
pop
or
shl
repz
std
jl
push
jg
sub
mov
push
mov
push
fisttps
sahf
jp
inc
ret
sbb
outsl
cmpsb
xchg
ja
push
aaa
ss
in
sar
add
test
sub
jno
insb
iret
scas
push
mov
popf
xor
sti
not
aad
imul
lods
in
sbb
out
fldt
adc
sub
fs
into
fdivl
xor
into
imull
mov
xchg
inc
lcall
jae
std
push
fcmovnbe
pop
mov
in
add
iret
pop
add
mov
mov
fidivl
mov
aas
mov
cmp
mov
cwtl
int3
pop
jno
bound
js
cmp
adc
inc
aad
iret
je
mov
or
icebp
fildl
sub
mov
sub
iret
sarb
iret
test
int
jnp
in
sahf
scas
fcompl
fs
mov
stos
movsl
xor
mov
fwait
addr16
inc
jmp
push
in
push
adc
push
aaa
xchg
mov
dec
notb
fxch
pop
test
push
mov
subl
jbe
sub
push
xchg
dec
or
iret
pop
aam
jg
out
iret
inc
mov
sahf
in
sti
scas
adc
fildl
push
sub
das
adc
and
test
pusha
jmp
sbb
xchg
jle
xchg
jge
cmp
mov
int3
inc
rclb
sbb
or
dec
int
stos
push
mov
jb
aam
cmpb
mov
mov
mov
jp
xchg
xchg
loop
push
xlat
push
lret
jae
inc
sub
stos
inc
pop
sub
jne
pand
xor
jmp
fdivrl
xor
jbe
push
or
mov
inc
out
pop
pop
push
adc
iret
adc
ret
add
jne
iret
shr
cmp
sub
imul
fists
clc
and
push
dec
popa
fcmovnbe
popl
je
xchg
bound
js
lahf
sbb
repz
iret
es
dec
lret
mov
pop
xchg
aad
mov
xchg
movsl
jnp
aam
sub
popa
fs
dec
pusha
jecxz
sbb
ds
xchg
jnp
add
dec
push
aam
dec
xor
test
aad
pop
or
test
sub
pop
fimuls
sarb
cld
jmp
add
aam
sbb
xchg
scas
out
out
scas
push
sbbl
gs
aam
repnz
push
push
adc
sub
mov
ret
popf
xchg
lds
and
jg
jae
je
xchg
dec
ja
cmp
mov
sub
xchg
in
xor
ss
push
in
iret
pop
lea
test
std
cmc
mov
or
test
mov
dec
pop
cmp
movq
aaa
notl
iret
sti
sbb
sbb
dec
stos
stos
cltd
adc
pop
lcall
subl
ret
inc
cltd
fistpll
adc
push
mov
iret
mov
fiaddl
xor
fisubs
lahf
add
out
jecxz
test
int3
out
stos
repz
enter
aam
mov
leave
fildl
cmovb
int3
pop
cmp
and
jmp
das
xchg
insb
andb
mov
mov
insb
xchg
jp
ret
sbb
dec
dec
sub
adc
test
sub
bound
daa
xchg
mov
inc
jmp
and
xlat
imul
xchg
addl
popf
out
mov
xchg
push
movsl
out
int3
adcb
adc
jne
ss
in
and
into
jns
es
jecxz
mov
mov
xor
pop
test
dec
iret
cld
shl
daa
shl
or
jle
inc
mov
push
out
into
jno
repz
push
add
into
pop
mov
rorl
sub
pop
iret
cmc
aaa
xchg
icebp
sbb
ficoml
ret
ljmp
xchg
leave
mov
cmp
mov
mov
movsb
mov
xor
or
jmp
or
outsb
pop
lahf
push
sti
xchg
xor
push
iret
mov
nop
negb
mov
imul
pop
lahf
jmp
jle
sarl
je
cli
lods
dec
iret
pushl
into
repnz
add
fs
pop
pop
xchg
mov
adc
loop
fsubr
cltd
sarb
inc
dec
cltd
xchg
aas
add
jo
test
and
jmp
gs
pusha
add
js
popa
adc
or
inc
data16
dec
hlt
idiv
xchg
push
inc
fcmove
or
cmp
jp
cwtl
mov
scas
pop
xchg
dec
jmp
cmp
sbb
out
stos
ljmp
ds
xchg
jg
fstpt
imul
dec
push
xchg
bound
push
in
movswl
fnstsw
push
repz
dec
iret
or
mov
xor
pop
test
jmp
repnz
add
out
pop
dec
insl
sbb
fidivrs
lret
xchg
xchg
cwtl
mov
or
jne
dec
fildl
push
jne
jbe
xchg
test
or
cs
adc
iret
lea
mov
xchg
dec
rcrl
xor
divb
lds
or
or
clc
xchg
ljmp
clc
iret
push
jne
sbb
shl
outsb
loop
loope
xchg
fcomi
push
xor
pop
mov
iretw
imul
mov
stos
push
mov
xchg
add
iret
and
lock
lds
dec
mov
gs
lcall
inc
out
pop
jne
pop
adc
mov
xchg
or
inc
mov
test
adc
cwtl
fisttpl
cmp
dec
inc
out
fdivs
push
xchg
xchg
clc
int
adc
xchg
jns
dec
icebp
mov
adc
iret
push
lods
pop
aad
mov
sbb
js
cwtl
fsubrl
mov
std
imul
push
xchg
gs
inc
xchg
aam
loop
adc
cmp
fldt
fistl
add
sub
push
jg
xor
inc
add
mov
or
int3
push
pop
sahf
test
mov
cs
pushf
mov
sbb
scas
mov
xorb
mov
iret
add
cmp
push
xchg
inc
add
mov
fcompl
fs
shll
insl
iret
sub
adc
std
jge
aas
outsb
rolb
fdivr
jo
popa
iret
inc
adc
js
movsl
jbe
xor
adc
into
inc
iret
pushf
shll
mov
stos
in
inc
bound
jnp
mov
push
xchg
mov
ja
aaa
sbb
xchg
iret
cmc
xchg
or
add
shll
pop
and
add
push
mov
adc
pop
iret
cmp
cltd
bound
js
mov
int3
aam
les
imul
aaa
jmp
xchg
mov
cmc
and
or
not
fs
push
ljmp
xchg
leave
movsb
sti
or
fidivs
sbb
push
sub
xchg
out
ffreep
pushw
fsubs
fidivs
cmpsb
push
int3
frstor
dec
xchg
std
push
mov
cltd
cli
mov
fsts
fst
xchg
jae
fucomp
pop
mov
pop
clc
lods
jecxz
cli
addr16
pop
loop
jge
cmp
into
aad
xor
pop
test
pop
das
iret
in
mov
xchg
jbe
int
subb
cli
gs
out
scas
cmpsb
fcmovnu
dec
lret
cwtl
nop
imul
push
and
dec
push
xchg
ja
mov
out
fidivrl
fsubrl
mov
mov
pushf
adc
decb
das
xchg
jp
adc
xor
daa
jg
mov
push
int3
stos
lods
jp
lcall
adc
or
lds
push
xchg
dec
pusha
mov
aam
pushf
cmp
push
pop
inc
xchg
arpl
movsb
xchg
in
cwtl
xchg
jl
dec
subb
fistps
pop
push
xor
movsb
shrb
shlb
nop
sub
icebp
mov
int
add
pop
test
inc
pusha
mov
cwtl
cmpb
and
adc
jl
jb
pop
pop
das
fwait
test
or
push
push
lahf
ljmp
loopne
sub
or
mov
push
xchg
mov
jb
pushf
inc
xchg
mov
fistpl
or
shrb
loopne
imul
xchg
xchg
xchg
fimull
add
test
mov
mov
insb
push
pop
std
jecxz
test
xor
sti
mov
xchg
xchg
cmpsb
xor
dec
cld
in
xchg
aas
inc
lret
ret
pop
and
loopne
pop
cs
scas
push
add
push
data16
scas
push
dec
mov
iret
shrd
cmp
cmpsl
inc
mov
mov
cwtl
pusha
pop
je
movsl
push
repz
int3
imul
out
loope
adc
jmp
loope
ret
pushf
test
jg
fimuls
or
cmp
and
xchg
mov
push
cmp
clc
xor
ds
adc
lods
adc
dec
xchg
jns
add
inc
fcmovnu
js
xor
aaa
aas
iret
cmp
dec
mov
mov
enter
adc
pop
push
sahf
xor
xchg
mov
inc
scas
xchg
fisubrl
xchg
call
dec
or
adc
dec
into
cmp
mov
mov
mov
xchg
xchg
xchg
test
jmp
mov
dec
fisubs
xchg
sub
push
inc
imul
popa
mov
cmc
out
xchg
mov
xchg
aaa
mov
mov
or
ficoml
xor
jle
inc
scas
xor
iret
dec
out
add
or
lret
pop
pop
fdiv
lds
or
hlt
and
push
pop
adc
mov
xchg
aam
xor
iret
out
push
jae
loope
fsubrl
adc
cwtl
fwait
hlt
dec
adc
cmp
jecxz
insb
inc
scas
cmp
xchg
addr16
xchg
movsb
dec
xchg
jle
mov
clc
fistl
sti
sbb
shrl
rcl
inc
aam
push
xor
add
add
repnz
orl
lods
mov
int
out
adc
push
pushl
xor
cmpsb
nop
into
mov
mov
andb
mov
aaa
fucomi
sbbl
enter
xchg
loope
mov
stc
mov
movsl
pop
sbb
lock
into
inc
movl
leave
pop
xlat
notl
adc
iret
sbb
jle
icebp
in
mov
cld
lahf
cltd
add
shrb
xchg
xor
mov
push
rcrl
cwtl
xchg
test
neg
dec
cmp
jno
mov
int
or
pop
test
mov
and
and
mov
repnz
and
rorl
xchg
mov
ds
jle
movb
out
ss
xor
fisttpl
pop
into
test
push
out
mov
shll
mov
xchg
push
pushf
pusha
int
push
and
scas
outsl
jo
mov
jo
lea
jns
dec
cmpb
adcb
sbb
into
add
or
adc
loope
lock
and
stos
je
cmp
rcl
lea
inc
test
rcr
inc
int3
data16
mov
aas
aam
fucompp
inc
push
rcrl
jecxz
mov
push
ja
push
addr16
outsb
gs
xchg
sub
or
dec
mov
pop
xchg
push
in
add
daa
push
push
pop
and
cli
sub
imul
out
test
mov
in
mov
gs
dec
xchg
xor
shrb
jns
pop
push
push
inc
and
iret
xchg
out
push
jmp
mov
add
adc
aaa
out
lahf
mov
fwait
sbbb
ja
sub
gs
aaa
cwtl
ljmp
fistl
and
push
push
xchg
mov
xchg
cmp
mov
aas
pop
cmp
subb
xchg
xchg
jmp
sub
in
push
inc
adc
jnp
ficoms
imul
ja
mov
popa
mov
lcall
sahf
inc
subb
inc
jns
xchg
ja
sub
mov
bound
bound
or
dec
xor
sub
xchg
xor
ret
lods
fistl
ss
int3
adcb
cs
jmp
popf
in
movsb
xor
xor
shr
ja
andl
or
frstor
sbb
pushf
sbb
mov
sub
dec
fs
call
inc
jbe,pn
dec
inc
sbb
ret
enter
rcrb
or
xchg
call
adc
add
xchg
jg
xchg
sub
rcll
xchg
mov
into
sub
lret
dec
into
hlt
pop
cli
push
xor
jnp
pop
into
jmp
clc
lods
pusha
mov
jbe
jne
push
aam
or
dec
idivb
stc
mov
adc
xchg
push
dec
and
push
inc
adc
cmpsl
cmp
movsl
loop
repnz
fildll
pop
icebp
mov
cmp
mov
jae
pusha
sbb
xor
inc
lods
add
adc
mov
mov
out
shlb
pusha
std
scas
add
cmp
push
in
and
movsb
push
add
bound
xchg
push
sub
pop
add
movsb
dec
aam
jmp
push
mov
lods
or
jecxz
and
aad
out
test
xchg
es
jp
fildl
dec
out
ret
into
inc
roll
lahf
mov
jmp
push
lods
inc
xor
mov
or
mov
add
mov
subl
sub
xchg
mov
dec
es
pop
pop
sub
push
sub
loopne
adc
pushf
xchg
arpl
loopne,pt
cmp
mov
outsb
je
inc
dec
pop
loope
inc
clc
sbb
pop
pop
mov
xor
mov
jecxz
pop
bnd
in
lea
das
mov
jno
test
sub
xor
mov
pop
sahf
aam
jns
mov
gs
lea
jns
addr16
xchg
pop
inc
pop
test
gs
lds
lcall
xchg
mov
xchg
in
push
insb
iret
sub
js
test
jmp
mov
dec
mov
sti
cmp
bound
inc
xchg
dec
jno
js
adc
fcmovnb
cmp
iret
jne
mov
push
popa
add
fisttpl
add
xchg
jnp
pop
ret
dec
daa
mov
cwtl
imul
fmul
mov
mov
js
inc
loopne
or
cmp
xor
lds
mov
lcall
adc
sub
xchg
add
out
push
pusha
es
cmpl
ret
push
fistl
and
orb
inc
lret
sbb
adc
cmp
pop
fwait
add
xchg
call
cli
mov
cli
jae
hlt
dec
fmul
sbb
int
dec
cs
sbb
inc
mov
cli
test
add
mov
ss
push
daa
aad
in
xchg
rcrl
loope
mov
adc
push
repnz
enter
jmp
cmp
and
nop
pop
dec
jne
xchg
xor
arpl
stos
arpl
sbb
cmpsl
mov
fdivs
ja
push
push
fcmovnb
pop
in
gs
ljmp
ret
fiaddl
adc
loop
xchg
shll
xor
stos
fstpt
xchg
jp
repz
xor
sbbb
lcall
mov
stos
push
xchg
repz
test
mulb
push
xchg
xor
iret
test
or
pop
clc
rorl
fildl
test
pop
lods
leave
dec
or
insl
lods
mov
or
mov
xchg
inc
insl
and
jae
hlt
pop
dec
cmpsb
lcall
adc
and
push
cmp
add
cli
push
mov
es
and
mov
outsl
popa
add
mov
xchg
fxch
js
lret
aam
pushl
sbb
mov
and
pusha
shrb
jne
add
call
fbld
ficomps
shlb
popa
and
mov
imul
or
cltd
xorl
shrb
scas
popf
xor
sub
int3
adc
lcall
push
mov
lahf
dec
sbb
jb
fisttpl
iret
fadd
aaa
cmp
sub
iret
xor
mov
in
outsb
test
or
loope
jno
push
jb
ja
mov
dec
pop
push
sahf
data16
addr16
pop
adc
in
in
data16
push
iret
out
xchg
ret
mov
notb
cmp
inc
cmc
mov
cmp
mov
and
lcall
mov
and
pop
pop
arpl
sbb
dec
adc
scas
push
and
int
stos
pop
ja
sub
call
outsb
add
andl
xor
xchg
daa
mov
mov
rolb
outsl
pop
repnz
xchg
jecxz
mov
cmp
mov
fsubrs
aad
bound
cwtl
repz
fwait
xchg
push
stc
addr16
cld
fwait
aas
and
xor
into
add
and
aam
mov
push
into
mov
ja
outsb
dec
mov
and
push
xor
call
adc
js
sub
and
jno
hlt
test
and
loop
adc
add
push
and
fcmovnb
scas
pushf
lret
push
mov
and
orb
cld
int3
cltd
xchg
dec
inc
int3
js
adc
fistl
aaa
jne
leave
mov
scas
in
mov
mov
xchg
lret
roll
dec
lret
push
mov
dec
xchg
mov
ret
loopne
int3
mov
jecxz
push
jo
mov
sbb
inc
cmpsl
outsb
xchg
out
daa
iret
cmp
test
das
pop
lods
jne
add
insl
and
cmpsl
iret
pop
push
std
mov
xchg
lods
inc
jb
jle
sub
int
pop
scas
xchg
test
imul
mov
in
into
mov
adc
cmpl
aad
sub
xor
scas
popa
adc
xchg
repnz
repnz
sbb
stos
cmpb
dec
sahf
cmpsb
sub
push
mov
cmp
sbb
lcall
hlt
inc
push
notl
mov
cmp
sarl
push
mov
sub
das
pushw
in
and
adc
mov
adc
xchg
and
dec
in
pop
jle
push
add
mov
rorb
pop
pop
into
test
rcll
mov
mov
inc
fcmovne
stos
xor
xchg
push
jl
or
mov
inc
cmpsb
jecxz
cwtl
add
cmpb
test
lock
enter
adc
jecxz
subl
sahf
mov
imul
xchg
stc
xor
adc
and
scas
sbb
xchg
out
cmp
push
jb
fdivrs
aas
test
sub
dec
fldenv
leave
pushf
mov
test
fistl
cmpl
rclb
push
mov
cmpsl
xchg
xor
xchg
ret
push
movl
les
ja
clc
div
jle
shlb
enter
into
je
pop
adc
daa
pop
ljmp
mov
outsl
cmc
push
imul
lock
dec
jb
das
adc
das
or
out
adc
cmp
insb
js
push
dec
push
cld
test
aad
jmp
adc
jle
stc
xchg
adc
pushaw
push
dec
inc
jo
out
dec
cli
hlt
int
ret
cltd
push
sbb
mov
lods
arpl
psubw
or
jmp
in
std
push
adc
pop
insb
jbe
push
notl
sti
lcall
popf
movsl
lds
sub
je
subl
cs
sub
push
xchg
add
mov
and
mov
mov
push
xchg
sbb
inc
dec
cmpsb
inc
icebp
xor
mov
jae
test
in
or
cmp
xor
iret
and
and
sbb
mov
imul
xor
mov
mov
lods
push
pop
pushf
aam
xchg
add
sbb
mov
cmp
lret
xchg
mov
imul
xchg
add
sub
or
scas
loope
and
in
aad
test
dec
inc
pop
xchg
xchg
xchg
aas
xchg
cltd
fwait
push
dec
popa
loopne
dec
inc
jno
cld
mov
sahf
xchg
xchg
dec
ss
outsl
jg
inc
mov
jne
xchg
add
jo
loop
fldl
je
adc
xchg
sbb
rclb
ljmp
sahf
xchg
pop
sub
mov
xor
and
adc
dec
pop
dec
mov
jmp
lock
pop
es
xchg
test
jle
in
ss
loopne
mov
ficoml
adc
and
hlt
lret
push
mov
xchg
sbb
xchg
in
jne
sti
push
xchg
mov
shlb
ds
loope
loope
iret
pop
test
push
loope
fchs
test
lods
lahf
mov
ja
ljmp
cmpsl
jb
jne
mov
fwait
pop
dec
xchg
int3
je
not
push
jae
fildl
jecxz
sti
inc
or
fisttpl
push
cmpsb
xchg
repnz
mov
lahf
or
mov
cmp
fstpt
adc
into
inc
loopne
cmpsb
test
testl
test
mov
xchg
pop
sub
xchg
into
daa
in
test
sahf
lret
arpl
adc
js
std
shll
sti
xchg
xchg
iret
fimull
loop
jno
inc
mov
movsb
xchg
scas
cmc
sub
in
in
cmpsb
inc
test
fs
inc
std
xor
jns
mov
mov
sub
mov
movsb
or
iret
adc
loope
add
fildl
sub
iret
rcrl
testl
xchg
hlt
cmp
inc
sub
dec
dec
mov
iret
mov
and
mov
and
test
daa
push
cmp
cmpsb
inc
hlt
aad
cmp
pop
cwtl
or
fildll
hlt
add
incb
mov
nop
iret
push
sub
or
jge
shl
mov
rcrl
in
and
and
sub
and
ds
xchg
dec
mov
pop
push
mov
mov
jae
scas
popf
movl
xor
push
sbb
push
xchg
out
popa
xchg
call
outsl
push
sbbb
jb
in
sub
jo
mov
add
push
add
fimull
imul
mov
xchg
adc
inc
fs
jg
sub
xchg
or
mov
rorl
or
fcmovne
test
push
pop
int3
outsl
in
andl
rcr
mov
sub
sub
shrl
ret
add
and
jnp
pusha
mov
test
or
aas
sbb
cmp
jl
data16
call
mov
repnz
ret
xlat
mov
dec
sub
pop
push
negb
loop
outsl
jnp
outsl
sub
mov
sbb
push
loope
shr
stc
lds
inc
xchg
xchg
xchg
push
xchg
sti
adc
sbb
icebp
push
hlt
jbe
rcrb
iret
hlt
jl
adc
sbb
mov
xchg
fistpl
in
jnp
sbb
xchg
mov
es
imul
sbbb
das
sbb
sbbb
adc
sbb
xchg
adc
sub
fisttps
jns
insb
push
adc
xchg
pop
popa
fimull
cmc
call
test
inc
js
adc
pop
imul
sub
jle
mov
subb
sub
push
xor
mov
xchg
mov
imul
jmp
pop
iret
popa
shl
iret
stc
dec
and
xchg
popf
inc
out
xchg
pop
ss
ret
xchg
scas
mov
cmp
arpl
add
rorl
shlb
sti
hlt
push
push
aas
arpl
fbld
xchg
xchg
addr16
dec
hlt
pop
lcall
lret
pxor
mov
inc
in
shll
dec
repnz
or
iret
jge
mov
cltd
xchg
ja
inc
fistpll
sbb
fxch
int
aaa
pop
popf
into
push
sbb
xor
and
rcr
mulb
lods
int3
fsubr
insl
pop
ret
stos
mov
shr
cltd
cmp
xor
roll
push
outsl
test
mov
jo
mov
icebp
or
lods
aaa
pop
js
or
jae
insl
ljmp
call
cmpsl
rcrl
or
mov
fldt
dec
jl
push
sub
into
sarl
test
xor
xchg
mov
jae
xchg
mov
xchg
inc
bound
mov
stc
cmp
push
movsb
and
mov
push
lret
outsl
fisttpl
mov
and
scas
lods
ds
inc
jns
jecxz
pop
fistl
stos
jnp
jecxz
xchg
iret
adc
lcall
cltd
jnp
hlt
cmp
add
les
push
push
or
pop
and
fsubr
sbb
iret
pop
loop
iret
leave
test
movsl
and
idivb
xlat
arpl
mov
jae
and
pop
inc
xlat
add
jp
jb
adc
add
xchg
test
jg
sti
fildl
push
push
cmp
sbb
xor
mov
repz
cmpl
jmp
pop
xchg
cwtl
into
fs
ja
or
mov
scas
add
fnstenv
dec
adc
xchg
scas
lods
xchg
mov
jmp
xor
out
fildl
inc
dec
ja
imul
int
mov
outsb
push
fstpt
jnp
mov
or
ret
loope
mov
xchg
call
insb
dec
fnstenv
cmp
aas
inc
pop
sbb
je
subl
into
push
lea
cld
dec
mov
aam
jge
xor
push
push
jl
sbb
ss
out
cmp
pop
mov
rorl
insb
cmp
fistl
fildl
add
sbb
rcll
xchg
sub
stos
rcrb
xchg
in
mov
data16
sub
fwait
dec
dec
cltd
push
sti
adc
lahf
imul
arpl
repz
out
int
lea
xchg
mov
fsubs
das
lods
cmc
pushf
xchg
dec
dec
stc
call
sbb
test
cmp
in
push
sub
sbb
pop
cmp
or
fdiv
movsl
jbe
adc
stc
js
xor
push
mov
ljmp
sarl
jp
repz
in
in
movsl
aaa
xchg
xchg
cld
and
sbb
cmp
into
mov
idiv
mov
shrl
mov
cmp
pop
xor
dec
mov
iret
push
sti
ds
push
pop
sub
stos
jne
mov
fbstp
adc
dec
test
popa
scas
xchg
sub
fildl
pop
daa
fcmovnbe
push
push
lahf
or
or
lods
pop
mov
and
sub
icebp
fdivl
aam
pushf
pop
pop
xor
pop
mov
ja
push
pop
and
iret
or
add
cli
test
sub
sbb
iret
pop
inc
and
push
fistpl
add
pusha
lret
iret
in
or
jp
xchg
divb
ljmp
bound
add
lahf
xlat
test
mov
loope
daa
push
dec
jne
rcr
mov
push
insl
cmp
push
xchg
jp
sbb
push
lret
mov
out
lret
imul
mov
pop
test
mov
fimull
mov
data16
scas
add
sub
fdivrl
mov
flds
sub
mov
xchg
fstpt
cmp
pop
jno
xchg
iret
sbb
ficompl
jg
pop
dec
in
pop
fmull
dec
sbb
adc
xchg
ret
ds
add
dec
jp
fdivr
arpl
xchg
mov
cld
pop
push
xlat
outsl
out
fistpl
pop
ja
pop
notb
sbb
nop
xchg
push
sub
inc
test
xchg
cmp
arpl
jge
mov
lahf
sub
sub
scas
sbb
lcall
dec
mov
add
repz
fisttpl
insb
ret
inc
mov
lahf
add
mov
call
aam
adc
pop
mov
xchg
cmc
add
push
lods
enter
mov
xchg
sete
add
fcomps
inc
adc
mov
int
es
shlb
int3
sub
enter
stos
lret
into
rcrb
fisubl
sub
cltd
inc
and
jnp
xchg
jmp
aad
ljmp
sbb
int3
test
mov
cltd
loope
les
jne
pop
bound
pop
xchg
into
shl
dec
jmp
dec
imul
dec
dec
ror
mov
or
sub
adc
stc
rorb
jbe
cltd
sbb
and
setle
or
ret
into
cmp
out
sub
add
cmp
push
pop
or
loope
inc
fadd
sub
pop
mov
test
jg
mov
xor
inc
fdivl
or
repnz
cmp
adc
cmp
out
xchg
pop
cmp
and
and
insb
jecxz
mov
fistpl
mov
push
xor
xchg
sbb
jb
dec
push
and
jecxz
inc
jb
inc
lret
test
mov
pop
xchg
outsl
xchg
mov
sbb
or
xchg
push
push
dec
jp
lods
mov
and
test
mov
popf
mov
popa
lcall
imul
sub
cmp
iret
filds
dec
sbbb
xor
lcall
cmc
jnp
sbb
cmp
xchg
movsl
jg
dec
sahf
pop
mov
cmpsl
mov
jnp
dec
sarb
cs
jmp
lods
add
shrl
sub
movb
pushf
clc
dec
push
dec
cwtl
push
enter
test
or
inc
fucomi
dec
or
jbe
and
shll
fistl
xchg
sti
jle
adc
mov
shlb
inc
outsb
sub
daa
xchg
sub
dec
dec
movhps
in
in
cli
movsl
jno
iret
mov
out
movsl
xor
into
sub
roll
sub
cmp
push
out
mov
and
sbb
xchg
jno
mov
push
xchg
leave
push
push
incb
xchg
xchg
xchg
adc
out
loop
outsl
das
sub
iret
test
in
das
dec
aad
out
test
rclb
sub
or
bswap
mov
imul
cmp
pop
mov
jmp
popf
cmpsb
cmpsl
mov
add
pop
test
imul
push
push
add
cs
scas
sbb
mov
pop
clc
xor
cmp
xor
pushf
push
push
adc
roll
orl
fs
ljmp
enter
loopne
pop
imul
in
in
stos
fadds
mov
in
jne
xchg
fbld
cli
push
fisubl
or
inc
cltd
push
cs
mov
jecxz
push
in
mov
out
and
loope
test
enter
shll
cld
mov
mov
lret
jmp
xchg
das
lahf
xlat
nop
xchg
xor
push
clc
cmp
mov
in
pop
lret
sbb
add
imul
sbb
rol
pop
adc
adc
loope
sbb
mov
out
sahf
xor
into
pushf
xchg
pushaw
int
mov
push
jp
pop
daa
cwtl
push
iret
arpl
mov
push
xchg
js
xchg
inc
lock
sub
lahf
sbbl
outsb
sbb
xchg
and
sub
lods
xchg
cmp
ds
cmpsb
inc
mov
adc
push
and
clc
ret
mov
mov
ret
ljmp
icebp
shll
adc
xchg
je
inc
sub
cld
sete
jbe
mov
add
fs
pop
xchg
cmp
iret
push
cmpsb
hlt
hlt
and
test
mov
pop
into
xchg
mov
les
dec
mov
cmc
hlt
test
outsl
lods
cld
mov
fisttpl
dec
jbe
ljmp
mov
sahf
xchg
mov
into
push
add
fnsave
cwtl
cmc
dec
popf
dec
arpl
stos
into
gs
mov
pop
push
cld
rcll
sbb
les
dec
into
lret
and
cltd
xchg
lcall
mov
xchg
rclb
sub
sbb
cmp
push
mulps
mov
pusha
cld
test
ret
scas
outsl
movsl
stos
cmc
movsb
jne
add
xchg
shll
je
fisttpl
xor
pop
aaa
fists
push
bound
mov
pop
dec
aas
mov
cli
pop
push
lret
out
mov
out
andl
sbb
add
adc
mov
dec
xor
or
adc
xor
mov
push
cmp
cltd
and
into
add
push
int3
cmp
sub
fucom
mov
addl
imul
enter
fildl
cld
ficoml
cltd
mov
iret
dec
or
inc
sbb
test
popl
nop
les
insl
push
or
scas
xchg
cmp
mov
iret
mov
adc
lods
dec
add
xorb
pop
test
mov
mov
cld
or
jno
add
insl
mov
cltd
pop
into
xchg
shrl
mov
into
divl
adcl
xchg
leave
rol
xor
push
iret
mov
adc
and
adc
out
sub
xchg
test
loopne
push
mov
test
lods
cltd
pop
mov
nop
das
and
outsl
leave
rcr
mov
sub
mov
call
gs
xchg
sbb
jns
inc
sub
outsl
or
mov
enter
jns
push
movsb
fstps
imul
mov
lea
movsl
xchg
notb
bound
cli
imul
fisttpl
imul
iret
xchg
shlb
movb
xorl
xor
jecxz
xchg
mov
iret
hlt
data16
daa
jmp
cmc
in
dec
es
cmp
and
insl
divl
arpl
idivb
test
and
iret
mov
icebp
inc
cmp
and
sbb
jno
and
or
jno
xchg
sbb
xchg
xchg
shrl
jmp
mov
fucomi
fiadds
ror
xchg
sub
and
jle
xchg
fcmovnu
incb
or
jge
xchg
ja
leave
jg
hlt
inc
test
jnp
cltd
xor
cmp
inc
push
sbb
xchg
pop
pushf
push
decb
lahf
aam
ror
lret
mov
loop
jg
xor
lods
sbb
xor
jbe
push
loopne
push
mov
int
or
sub
lcall
movsl
mov
adc
sbb
into
pop
add
xchg
imul
iret
enter
test
mov
dec
xchg
fucomp
dec
jmp
sbb
cmpsb
js
es
dec
or
adc
ja
xor
out
loopne
push
mov
jle
ss
hlt
scas
push
mov
hlt
push
ds
fcmovnb
js
vsubss
insb
xchg
mov
xchg
sarl
cli
sbbb
add
testb
and
lds
mov
cmp
push
or
push
push
add
mov
xlat
jecxz
sbb
or
xor
mov
repz
push
mov
push
mov
sub
fimull
sar
sbb
adc
addr16
mov
out
xchg
lock
mov
cmpsb
sar
cmc
xchg
mov
lods
in
sub
jecxz
push
jp
xor
jp
sahf
iret
push
pop
lods
jae
pop
sbb
cmc
fisttpl
int
xor
mov
adc
or
arpl
inc
pop
jmp
push
xchg
icebp
cmpsb
popf
push
clc
stos
data16
xlat
iret
and
xchg
aas
stos
pop
hlt
stos
pop
mov
jg
in
lds
rorb
test
pop
ret
pop
xor
xor
lret
fidivrl
and
out
imul
dec
test
int
inc
pop
inc
push
cli
dec
and
cmpsb
pop
stc
add
adc
inc
lcall
test
xor
iret
mov
pop
pop
outsl
push
inc
add
int
fst
jno
lods
jle
aaa
iret
fdivrs
sbb
orl
lret
in
dec
iret
pop
fstp
jge
push
inc
and
adc
xchg
call
insb
pop
lret
mov
imul
in
gs
sub
jmp
es
addr16
sbb
int
xor
mov
xchg
mov
sub
enter
mov
daa
ljmp
pop
lret
mov
mov
je
dec
add
sahf
cwtl
xchg
xchg
sbb
jg
fucom
fdivrs
inc
fs
dec
xchg
adc
jae
fistpl
adc
iret
scas
popa
fldl2e
stos
sbb
ja
lret
cmp
in
cmc
lret
in
je
jno
aam
movsb
xor
sbb
cmpsb
iret
sbb
iret
lds
fldenv
cmpsb
sahf
filds
xchg
andb
out
mov
adc
lods
add
insb
xor
xchg
push
push
mov
lret
sub
ss
outsl
xchg
mov
in
dec
lahf
sbb
nop
mov
push
movl
jmp
xchg
ja
shlb
sub
xchg
pop
inc
iret
out
push
or
in
fwait
add
jge
cld
fstpl
jbe
and
dec
ret
xchg
neg
les
lock
cmp
out
inc
add
fistpl
clc
loopne
loope
adc
add
mov
cmp
mov
aad
jmp
xlat
xor
push
adc
out
adc
and
fldcw
push
aaa
mov
mov
push
addr16
dec
stos
sbb
iret
and
pop
call
xchg
mov
mov
xor
dec
stos
xor
aas
mov
fistl
sbb
sti
xchg
add
sub
push
xchg
stos
out
stc
xchg
inc
inc
cs
lds
call
dec
into
add
test
test
scas
cli
or
xchg
sti
sub
or
ds
fsubs
xchg
mov
ficoml
push
out
inc
fucomi
adc
adcl
dec
cs
setns
aam
pusha
orb
faddl
mov
dec
aad
ss
fstpt
add
sub
push
jnp
stos
in
cmpl
inc
xchg
ss
fistpll
sub
mov
out
mov
xchg
fwait
imul
imul
std
and
mov
xchg
jge
fistpll
push
cwtl
pop
fs
jp
push
int
dec
fbstp
sub
push
call
testl
outsl
mov
adc
mov
add
scas
or
pushf
pop
xchg
mov
and
and
xchg
iret
shr
sbb
inc
xchg
popf
out
movsb
rorl
add
and
cmc
testl
aam
aaa
jae
jno
inc
in
jne
pop
fcmovnu
jl
bound
dec
iret
push
icebp
ja
xchg
leave
mov
test
mov
aad
mov
and
xchg
mov
ficompl
push
repz
add
iret
cmpsl
dec
cmp
inc
add
mov
xchg
mov
add
fdiv
mov
fwait
out
lret
inc
xchg
lea
pop
loope
dec
xchg
insb
repz
mov
mov
call
push
iret
movsl
xchg
xchg
das
pop
movsl
inc
iret
sbb
js
je
pusha
add
jno
cmp
ficoms
es
push
fdivs
loope
popa
push
pop
int3
outsl
loopne
popf
dec
std
cmp
push
xor
aas
bound
mov
outsl
push
fucomp
int
fwait
shrb
jne
rorl
mov
out
jge
icebp
add
repnz
fwait
sahf
fmuls
push
inc
stc
mov
xor
iret
fistpl
lcall
xchg
mov
in
xchg
xor
jne
add
test
dec
stos
push
xchg
int3
nop
cmp
notl
popl
inc
or
pop
stc
cmp
fcmovnu
sbb
adcb
insb
sub
xchg
pop
sbb
and
xchg
mov
xchg
ljmp
jb
int3
sti
test
jbe
repz
lcall
fistl
xor
lahf
addl
add
or
test
push
lock
data16
fucomi
mov
xchg
mov
mov
and
cmpsb
iret
fcmovne
aam
es
inc
test
push
add
roll
aaa
lcall
inc
bound
inc
xchg
mov
xchg
out
jnp
fwait
sbb
push
int
adc
roll
lods
fneni(8087
xor
adc
push
rol
push
leave
test
lock
js
xchg
inc
xchg
test
gs
cmpsb
mov
dec
add
xchg
sti
test
xor
out
mov
and
lds
mov
gs
xchg
xor
sbb
jo
subb
cmpsb
rolb
iret
jno
ret
mov
sahf
fstpt
adc
adc
or
xchg
push
lret
leave
popa
jne
fisubrl
xlat
iret
add
mov
or
pop
xchg
in
adc
push
call
xchg
push
into
in
push
loop
mov
inc
adc
inc
arpl
sbb
sbb
cs
in
out
stos
or
pop
dec
inc
insb
test
pop
xor
xchg
scas
sbb
adc
mov
hlt
int
fistl
fwait
mov
pop
mov
iret
hlt
lods
insb
jle
sbb
sbb
jb
inc
xchg
jo
in
test
ret
fldt
aam
mov
into
divl
int3
arpl
xchg
mov
xchg
xor
pusha
mov
jne
sbb
mov
add
push
scas
pop
icebp
loope
jle
sub
scas
aas
xor
or
lret
jge
lds
iret
outsb
xchg
mov
repz
xor
jne
test
add
shlb
dec
shrl
xchg
iret
cmp
jle
or
hlt
pop
mov
adc
sbb
lret
sbb
inc
xor
add
pusha
jno
mov
pop
xlat
xchg
adc
inc
xchg
xor
xchg
fisubrl
call
iret
pop
mov
jns
popa
mov
iret
mov
lods
cld
mov
enter
mov
or
sbb
out
sahf
fst
cwtl
into
xor
fcmovnb
xor
repz
stc
fmul
ret
int
mov
xlat
push
cmpsb
lods
aad
fldenv
shr
jmp
lods
cmp
fistpl
ljmp
into
pop
cld
xchg
not
test
leave
lcall
xchg
jecxz
daa
xchg
mov
std
mov
rorl
dec
or
int3
mov
loopne
xchg
sub
loope
mov
pop
dec
jp
or
dec
rcr
in
sti
arpl
cmc
ja
mov
ret
scas
nop
xor
xchg
lcall
dec
xchg
pop
push
fxch
mov
cli
mov
mov
and
ret
xchg
xchg
mov
sbb
jne
loope
mov
jge
test
scas
dec
fldl
addr16
mov
jo
or
adc
shll
call
cmp
xchg
dec
sub
xchg
mov
mov
fcmovnu
lret
aam
xor
lea
into
pop
ret
cmp
pop
cs
pop
fstps
imul
xor
insl
cld
jle
fistpl
fwait
cmp
iret
sub
xor
sub
ss
movsb
jb
mov
xor
lds
es
lods
test
hlt
xchg
ljmp
pop
hlt
cmc
inc
lret
jg
enter
out
leave
jno
add
adc
cmc
rclb
jns
pop
ds
jnp
clc
add
int
inc
xchg
push
pop
pushf
dec
mov
movsl
pushf
dec
dec
fstpl
scas
test
mov
xor
mov
cmp
mov
in
xchg
mov
dec
fwait
sub
subl
js
push
stos
xor
fdivrp
xchg
nop
mov
movsl
mov
enter
rcr
lock
nop
out
push
push
andl
pop
mov
jbe
pop
cmpsl
xchg
mov
mov
sub
xor
xor
iret
adc
nop
les
dec
or
push
cwtl
xchg
je
push
xchg
pop
orb
jg
pop
cli
in
loop
pop
or
add
rcrb
int
clc
lahf
and
test
icebp
cld
pop
jne
or
inc
pop
inc
pusha
aas
mov
mov
mov
jl
xchg
lret
xchg
cmp
test
push
imul
mov
test
lods
mov
xor
xchg
pop
xchg
dec
mov
mov
mov
inc
ror
adc
js
sahf
inc
add
push
dec
mov
cmc
call
xchg
push
andb
stos
adc
jl
pop
push
aaa
and
push
int
lods
mov
outsb
nop
pop
mov
lret
push
xor
add
clc
lock
nop
xchg
iret
lcall
adc
push
jp
dec
xchg
mov
inc
imul
call
popf
mov
xor
jnp
cld
dec
ja
xchg
inc
fimull
mov
sbb
fstpt
test
test
push
enter
aaa
jmp
mov
insb
jne
jg
aaa
inc
addb
jns
cmpl
mov
mov
sbb
cmp
fcmovne
imul
test
inc
sub
or
adc
js
arpl
xchg
dec
xchg
sub
dec
mov
test
mov
push
xor
divl
cmp
std
mov
add
mov
adc
or
sti
imul
sub
xabort
rorl
mov
fstpt
push
or
addr16
sbb
test
pusha
xchg
popa
xchg
in
stc
sub
mov
lahf
lahf
sub
jnp
push
les
aad
fbstp
fldt
inc
lcall
mov
sub
sbb
pushf
pushf
fldt
out
sub
xchg
mov
int3
jo
adc
cld
dec
or
or
add
xor
mov
rorl
scas
out
xchg
pushf
fstps
cmp
lahf
push
xchg
test
push
mov
shr
pop
fistpl
aad
pop
cli
mov
jnp
push
push
dec
outsl
inc
arpl
pop
jo
jo
ja
pop
and
push
js
lahf
scas
pusha
je
ret
pop
or
int3
cmc
out
icebp
cmp
adc
adc
shlb
ret
cwtl
les
jmp
xchg
bound
insl
mov
add
adc
mov
mov
enter
pop
mov
adc
out
icebp
lock
adc
sarb
fmull
enter
dec
mov
cld
mov
call
pop
add
cs
iret
fsubr
add
mov
ljmp
out
jno
roll
inc
mov
add
pushf
jno
jl
xchg
xchg
mov
xchg
adc
pushf
data16
cmpsb
enter
jbe
push
jle
mov
mov
fwait
xchg
pop
iret
ja
mul
into
jnp
sahf
cmp
fs
cld
fs
popf
js
fstps
xchg
repnz
mov
or
fisubl
xor
or
sbb
cmc
mov
adc
into
test
jae
pop
in
iret
mov
xchg
add
inc
and
aaa
aam
or
cs
jmp
into
fwait
jmp
and
xor
inc
clc
pop
add
shrb
mov
mov
cmpsb
out
cmpsl
in
xor
sbbl
mov
jns
mov
stc
jo
subb
scas
lret
adc
test
pop
das
jne
adc
nop
jb
test
xchg
sahf
mov
and
add
lea
data16
outsl
lods
push
inc
mov
stos
xchg
rorb
fwait
inc
mov
js
sarl
out
jecxz
adc
fcomi
dec
add
out
rcll
mov
mov
add
lret
adc
int3
inc
or
lods
mov
out
arpl
fidivrl
pushl
in
cmp
mov
mov
xlat
gs
lods
jno
sti
aaa
mov
inc
jno
loope
je
iret
pop
es
sub
aaa
cmc
pop
cltd
pop
cvtpi2ps
out
push
push
les
outsl
xor
mov
andl
jnp
or
or
into
add
cmpsl
jnp
xchg
repz
cltd
mov
push
xchg
jecxz
sbb
pop
movsb
xchg
pop
and
or
rol
fcmovbe
xchg
rorb
fwait
arpl
cmp
incl
ret
adc
hlt
xor
rcll
fs
neg
inc
daa
and
movsb
xlat
push
iret
push
push
xchg
aam
jge
xchg
xchg
aas
cmpb
pop
mov
divb
inc
and
out
sbb
mov
cltd
sbb
and
insb
and
ret
cmp
les
or
into
xchg
data16
test
pop
pop
es
mov
xchg
enter
inc
adc
xchg
mov
or
outsb
jl
pop
mov
ljmp
mov
push
jp
loop
cmc
pushf
xchg
xchg
jl
pop
add
loopne
std
out
shll
mov
inc
pushf
inc
jne
insb
mov
add
xchg
fmuls
mov
add
fdivp
ror
inc
scas
iret
imull
or
push
or
test
mov
iret
lahf
movsb
push
mov
cmp
test
test
dec
data16
sti
loope
jno
rorb
lcall
push
pop
lea
push
test
addb
push
ds
ljmp
sbb
fdivl
adc
in
pmullw
sub
out
jmp
add
inc
outsl
out
cli
dec
dec
addr16
and
add
jne
and
scas
testl
cld
ja
stc
add
inc
leave
orb
jl
push
roll
rcl
out
lea
mov
aam
popf
xor
lods
inc
roll
rep
push
fs
pop
ja
mov
rcr
mov
dec
inc
dec
jmp
decl
push
aam
mov
add
mov
cmp
lret
inc
add
pop
mov
or
jl
leave
adc
dec
push
sub
pop
repnz
lret
xchg
ret
out
jo
mov
push
mov
mov
popf
pop
sbb
push
adc
out
cmpsb
jle
mov
mov
test
push
sar
stos
arpl
push
lret
adc
jns
test
adc
repz
mov
fsubl
mov
mov
or
cmp
jecxz
test
rolb
leave
xorb
adc
pop
adc
xchg
dec
in
ljmp
fldcw
xchg
mov
popf
pop
cmp
xchg
jns
xor
insl
lods
mov
ss
gs
sub
into
mov
sti
jmp
xchg
pop
outsl
gs
cmp
mov
xchg
mov
mov
push
into
mov
jns
mov
add
iret
fadd
mov
and
adc
int3
mov
xlat
sbb
int3
push
adc
sub
cmp
les
dec
fisubrs
ret
jl
sub
or
in
je
jle
int
dec
push
cmp
jb
mov
push
aam
add
testb
stos
orl
mov
jb
add
stc
xlat
jnp
pop
add
mov
push
add
shlb
pop
aaa
mov
push
iret
jle
arpl
out
dec
lret
mov
xchg
ret
fsub
cmp
les
push
ret
loop
lcall
or
mov
cmpb
cmp
add
sub
jnp
shl
sbb
outsb
mov
enter
aaa
xchg
adc
jnp
mov
sub
test
inc
aad
pop
pop
aad
insl
xchg
lock
jo
cwtl
add
push
or
fcom
or
cmp
mov
fs
sub
pop
out
mov
cmc
mov
es
mov
or
push
out
xlat
int3
xchg
push
stos
in
pop
mov
fnstcw
jmp
adc
data16
aam
int
popf
std
inc
shlb
and
mov
dec
dec
hlt
out
pop
lea
sbb
add
and
int
mov
add
inc
mov
lret
lea
dec
or
add
xchg
mov
jg
icebp
push
in
fwait
mov
shl
imulb
filds
xor
lods
mov
popf
dec
dec
dec
decb
mov
lahf
sub
inc
mov
lcall
leave
lret
in
inc
adcb
push
pusha
dec
lcall
mov
pop
insl
and
xchg
jb
int3
incl
jmp
lods
popl
push
pushf
xchg
int3
test
scas
mov
mov
aad
pop
or
inc
cmp
adc
inc
cs
xchg
mov
cltd
and
inc
adc
cld
xchg
push
flds
lea
fisubs
mov
or
jmp
fwait
mov
push
aaa
inc
or
and
inc
sbb
inc
aad
jb
leave
pushf
std
sub
jns
lahf
pop
cli
loopne
inc
adc
mov
inc
in
aaa
mov
cmp
shll
cmpl
cmc
xchg
push
dec
mov
adc
in
jbe
push
fucomp
pop
xor
les
or
in
xchg
cmpsb
dec
test
add
mov
mov
ss
jecxz
pop
dec
inc
push
cmp
ret
add
mov
insb
jp
jno
nop
mov
inc
sbbl
cmp
fs
push
shlb
mov
ror
data16
rcrl
dec
rorb
sub
and
sbb
mov
and
mov
pop
cmc
insb
lea
push
sub
leave
test
loop
cmpsb
pop
mov
or
inc
outsl
pop
xlat
add
test
pop
loope
insb
out
push
mov
push
push
xlat
cld
dec
mov
xchg
add
sbbl
lahf
adc
ja
jbe
push
leave
mov
scas
loope
mov
jle
sbb
xor
inc
sbb
pop
ss
jo
repnz
mov
push
jp
stos
arpl
decb
inc
jmp
ficomps
xor
cmpsb
xchg
dec
xchg
push
jg
testl
cli
adc
jge
imul
cld
xchg
mov
mov
mov
xchg
popf
iret
inc
push
test
dec
push
shll
jns
cmp
lea
fisttpll
into
jl
insl
out
push
mov
test
das
cld
icebp
fcoms
sbbl
scas
dec
and
and
jb
ret
shll
or
movsb
adc
daa
add
fcomi
out
daa
loope
ficoms
push
ret
sahf
das
inc
cmp
inc
jge
sub
jb
xchg
mov
xchg
cltd
inc
mov
jnp
mov
add
and
push
and
pop
sbb
or
dec
popa
or
xor
rolb
sar
int3
inc
orl
dec
ja
inc
push
or
fists
mov
jecxz
inc
push
mov
lds
inc
add
ret
mov
pop
or
movsl
nop
cmp
jg
push
mov
xor
push
sarb
adc
push
std
scas
mov
dec
and
shrb
ret
arpl
clc
imul
mov
push
iret
cmc
cmp
leave
int3
push
aad
outsl
fisubs
js
leave
add
add
dec
fwait
imul
int
push
jg
sti
pop
or
pop
lret
call
addr16
add
aad
mov
scas
inc
mov
loop
test
sub
test
jl
sbb
push
push
ret
mov
push
inc
adc
iret
arpl
sbb
movlps
adc
or
jg
gs
stos
dec
jge
xlat
fwait
nop
push
sbb
cmp
mov
aas
testb
fs
and
jg
mov
jbe
nop
add
xor
rcrl
push
add
std
and
rolb
pop
sbb
adc
lock
cwtl
lods
decb
push
adc
data16
mov
xchg
cmp
call
xchg
scas
xchg
push
adcl
loop
mov
adc
enter
movb
arpl
mov
xor
inc
cli
sbbb
adc
mov
into
jne
iret
popf
aaa
pop
cmp
cmp
mov
fsubrl
inc
xchg
jmp
xchg
aad
pushf
mov
scas
mov
xchg
mov
add
adc
push
hlt
rcll
cmp
dec
ret
aam
ja
mov
xchg
xchg
std
jge
and
sti
outsl
dec
dec
xor
adc
lock
sbb
pop
fs
xchg
jb
jno
pop
stos
adc
push
repnz
add
mov
lcall
push
mov
sub
das
arpl
inc
and
lods
int3
mov
adc
test
pop
add
ficoml
divb
mov
pop
add
adc
inc
lret
xchg
es
sub
lock
jecxz
xor
xor
ja
or
loope
movsl
jb
ja
add
jb
into
ss
out
xchg
imul
xchg
push
pop
push
inc
scas
repnz
inc
xchg
icebp
or
jecxz
ret
pushf
imul
icebp
rclb
aad
sahf
push
inc
loop
pusha
mov
or
lahf
pop
sub
mov
inc
jb
push
jp
or
lods
mov
adc
dec
lods
lock
or
dec
sbb
popf
fs
push
test
dec
jnp
xchg
sub
sahf
pop
mov
pop
adc
inc
test
dec
sub
in
xchg
mov
mov
enter
jo
testl
jg
sbb
sbbl
push
lret
rolb
adc
imul
sbbb
mov
mov
outsb
inc
loope
xchg
addb
rcr
jp
push
sbb
bound
dec
int3
mov
add
and
mov
fmull
cli
cmpsl
out
jl
lods
and
and
aaa
dec
cmp
push
adc
push
mov
sbb
addl
out
push
ja
ret
dec
aaa
lret
mov
push
pushf
sub
pop
loop
rcrl
mov
dec
pop
and
movsb
das
xlat
loope
adc
bnd
loop
sbbl
test
outsb
push
adc
jl
movsl
jecxz
mov
ds
test
lods
jo
xlat
jno
jmp
iret
jp
lcall
xor
pop
pop
jbe
arpl
mov
insl
jne
xchg
lret
clc
xchg
fnop
cmp
gs
iret
jne
mov
jb
aam
mov
mov
rorl
add
push
int3
lret
aaa
inc
jo
cmp
jne
out
xchg
add
out
ds
inc
pop
jmp
jl
mov
leave
inc
sbb
jb
pop
pop
aaa
sub
inc
mov
pop
fwait
inc
in
ja
lret
inc
mov
lods
lock
dec
shlb
add
jge
jecxz
sbb
inc
popf
ljmp
jnp,pt
push
push
add
jle
ss
or
lret
scas
cmp
pop
jp
mov
fisttpll
pop
push
test
pop
out
fmull
sbb
ds
imul
cmp
jge
mov
lds
push
xlat
test
cltd
enter
ds
imul
jl
pop
loop
mov
mov
notl
sub
sti
int
fdivrp
gs
mov
mov
mov
int3
hlt
std
test
stos
inc
pusha
pop
inc
shll
jge
lcall
lock
pusha
insb
cld
mov
cli
jecxz
xor
fwait
cltd
mov
push
cmc
imul
arpl
lret
int3
inc
xchg
repz
mov
stos
shl
xlat
shr
xchg
adc
mov
sbbb
out
fwait
dec
jb,pt
test
push
cmp
jecxz
fidivl
dec
cmpsb
loopne
mov
inc
mov
xchg
pop
or
movsb
mov
in
add
int
fs
not
int
add
out
repz
dec
outsb
cmp
inc
dec
mov
out
addr16
xor
mov
push
out
pop
pusha
mov
cmpl
jecxz
jle
jecxz
or
filds
int3
or
jle,pn
inc
sub
repz
push
pop
nop
xchg
cmp
push
ja
cmp
js
call
cs
lret
stos
pop
nop
pop
fcoms
ret
getsec
test
jnp
sub
push
inc
or
ja
pop
cmc
jecxz
into
add
pop
notb
mov
mov
lahf
xor
sub
mov
sahf
pop
inc
test
sahf
dec
inc
les
incb
jg
std
call
dec
xchg
je
and
xor
lea
sbb
xor
gs
fidivrs
test
xor
movsl
mov
popa
fdivrl
jl
jmp
sub
jp
std
mov
mov
jae
pop
xchg
test
xor
dec
cmc
fdivr
lea
jo
mov
dec
jo
sbb
aas
pop
jge
dec
dec
fs
xchg
imul
cld
imul
add
loopne
jbe
push
mov
into
inc
xchg
arpl
inc
imul
lcall
cwtl
mov
sbb
jns
divl
out
addr16
xchg
aam
inc
insb
imul
stos
mov
xchg
test
adc
aam
adc
insb
pop
mov
xor
mov
lock
jp
gs
lds
lret
cmc
imul
outsl
sub
inc
inc
pop
adc
xchg
push
pop
jge
or
add
jg
push
fdivrs
negl
mov
test
rol
fidivl
shlb
das
pop
xchg
loopne
pop
int
and
incl
push
mov
xchg
push
lcall
mov
mov
arpl
push
ds
out
daa
xor
ret
mov
lcall
inc
inc
lea
popa
test
sub
push
adc
bound
push
daa
xor
imul
xor
popf
mov
pop
sbb
movsl
in
jb
in
dec
pop
inc
inc
xchg
es
sarl
mov
pop
icebp
loopne
and
icebp
lcall
mov
mov
insb
bound
xchg
or
into
fadd
into
add
mov
lret
push
fadd
ljmp
ret
xchg
sbb
push
pop
pushf
push
sbb
xchg
scas
rclb
insl
xchg
fs
mov
and
andb
scas
xchg
jae
push
jbe
das
ds
inc
push
lahf
adc
lcall
pop
es
mov
dec
stc
js
pop
pop
test
or
mov
push
adc
cmp
push
es
and
rorl
xchg
cmp
sub
mov
sub
jle
push
les
mov
adc
push
push
inc
pop
out
shlb
addb
inc
sbbl
test
jns
jmp
push
into
scas
rcrl
cmpsl
arpl
jb
or
fldcw
and
pop
scas
fcomps
mov
pop
mov
pop
cmpsb
out
pop
test
xchg
loopne
mov
pop
ds
cmp
jae
xor
ljmp
mov
sub
lahf
xor
fildl
scas
out
rorl
pushf
mov
mov
outsb
add
sub
mov
push
dec
push
and
mov
jno
lods
icebp
xor
dec
cmp
testb
aad
les
imul
inc
xor
pushf
pop
cs
or
call
lods
cmp
popf
nop
sbb
test
pop
push
ret
imull
pop
lds
push
dec
pop
cmp
inc
pop
xchg
andl
nop
rcll
loope
or
rorl
sbb
inc
fsubr
mov
cwtl
out
test
xchg
dec
and
push
dec
push
lahf
xor
mov
lea
ja
cwtl
mov
inc
jbe
xor
jbe
stos
jnp
arpl
xchg
mov
cmp
ss
jle
jbe
mov
add
