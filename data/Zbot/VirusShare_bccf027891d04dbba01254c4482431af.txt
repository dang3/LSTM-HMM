in
jmp
jnp
enter
outsb
lods
cmc
lock
cmpsb
mov
scas
inc
mov
and
add
stc
fildl
adc
pop
pop
add
mov
sbb
in
fcomp
ret
and
add
push
ret
add
or
mov
add
adc
add
push
inc
add
adc
and
and
adc
jbe
mov
cmp
sbb
or
sbb
adc
sbb
dec
pop
imul
nop
sub
sub
lods
int
or
inc
adc
mov
arpl
jno
mov
ja
adc
adc
jle
mov
and
fcom
imul
and
mov
outsb
subl
or
inc
inc
mov
enter
nop
adc
xlat
mov
push
nop
or
bound
outsl
test
pop
cmp
fstp
pusha
insl
imul
mov
nop
pop
inc
xor
sbb
daa
pop
or
orb
or
or
orb
xor
inc
fisubl
fwait
pop
into
inc
nop
dec
and
or
aad
mov
add
adc
arpl
and
sub
mov
sub
sbb
mov
sbb
add
ljmp
mov
or
filds
fimuls
add
jmp
pop
in
xor
add
and
sbb
add
adc
xlat
inc
dec
or
mov
fsubs
mov
cli
mov
add
sbb
sbb
mov
adc
in
add
daa
sbb
jg
std
lret
add
jecxz
xchg
push
es
std
clc
dec
roll
sbb
mov
push
add
jmp
cmpsb
push
insb
fisttpl
inc
jnp
ret
mov
data16
sbb
or
lea
xor
mov
incl
pusha
jl
cmp
not
mov
mov
pop
outsl
xlat
add
jne
outsb
mov
push
mov
cmp
mov
mov
sbb
ret
dec
inc
dec
mov
mov
das
pop
shrl
ficompl
popa
insb
cmpsl
xor
xor
insl
jg
cmpsl
inc
add
lods
dec
pop
ja
fistps
sbb
or
adc
cmp
sbbb
mov
mov
mov
add
or
int
pop
add
mov
fdivl
mov
or
jmp
mov
pop
loope
and
mov
lret
pop
inc
jnp
fists
adc
adc
notl
mov
pop
stos
xchg
outsl
jg
pop
gs
jne
dec
xchg
push
dec
sarl
jbe
push
and
ret
fucomp
in
add
sub
mov
in
mov
or
sbb
ljmp
insb
xor
xor
sub
imul
xor
mov
lret
daa
push
jl
andl
or
adc
jmp
flds
mov
fcos
fcmovne
add
add
jne
push
push
mov
fistpll
sub
adc
in
loope
arpl
imul
rcrb
icebp
dec
je
cmp
or
pop
mov
add
push
mov
mov
add
add
sbb
push
or
xor
inc
sub
iret
in
sbb
jbe
dec
ficompl
repnz
inc
dec
xor
pop
pop
dec
addr16
mov
addr16
pop
cmp
jne
outsb
fnstcw
mov
inc
rcrb
stc
jg
test
ret
dec
dec
jae
rcl
arpl
sbb
xor
sbb
cmp
lret
sbb
notb
movsb
push
pop
inc
jg
not
pop
inc
sti
cmp
dec
or
and
add
out
adc
jmp
fdivp
xchg
jmp
adc
decl
or
decb
push
add
ficoms
push
out
dec
xor
mov
jge
push
inc
dec
inc
xor
mov
sti
push
pop
adc
xchg
outsl
jmp
rolb
push
out
movsl
mov
adc
add
decl
fidivl
add
add
in
cmc
add
inc
lahf
add
add
sbb
cmp
push
incl
and
incb
mov
sgdtl
cmp
movl
dec
add
imulb
outsl
or
das
hlt
add
add
xor
push
add
jnp
jecxz
out
cmpsl
adc
or
mov
incl
cmpsb
and
dec
or
mov
lock
push
add
lods
mov
idiv
adc
jecxz
test
mov
add
add
outsb
pop
jp
add
cs
dec
pop
int3
add
add
out
sub
mov
add
inc
scas
fisubrl
mov
scas
xchg
fdivl
jmp
or
add
or
incl
adc
push
add
sbb
xor
cmp
add
ja
mov
clc
les
jo
fsubrs
adc
adc
lahf
dec
pop
jae
dec
fcoms
sahf
inc
cltd
xchg
and
idiv
in
test
std
sub
mov
test
sub
push
insb
pop
cmp
xor
into
and
ret
add
jmp
cmp
push
add
xor
aad
insb
add
test
add
dec
cli
jg
fildl
stc
loopne
jmp
in
push
mov
lods
add
pop
or
incl
mov
xchg
push
jne
inc
lods
ds
flds
jb
incl
and
xchg
or
and
mov
and
or
jmp
es
pusha
pusha
xchg
jmp
repz
push
bound
fists
dec
call
and
inc
adc
incl
pushf
mov
mov
xor
fbld
push
out
mov
add
seto
aam
inc
adc
inc
sahf
fisubrs
fisttps
mov
add
fisttpl
fld
or
les
in
call
or
xchg
into
push
je
sbb
test
push
dec
xor
inc
push
adc
sbb
xchg
push
add
xor
jg
lods
sub
mov
or
mov
cmp
rolb
mov
pop
add
jbe
inc
out
fcmovnb
mov
bound
andb
or
xor
mov
add
or
add
pop
pushf
add
add
cwtl
add
sti
add
arpl
add
fiadds
pop
add
nop
adc
lgdtl
loop
add
ljmp
mov
popf
add
sbb
jle
scas
out
lea
push
loop
ret
mov
imul
sbb
mov
add
mov
loope
adc
jns
test
mov
or
sbb
sahf
outsl
lcall
mov
mov
add
add
mov
orb
or
inc
pop
mov
ja
mov
sbb
sub
je
push
in
iret
cltd
fimuls
repnz
add
dec
add
call
inc
add
sbb
mov
test
add
aam
aam
add
lea
insl
sbb
fadd
add
movsl
inc
or
push
enter
add
mov
dec
pusha
repnz
pop
orl
std
and
dec
jmp
cmp
out
dec
mov
aas
cld
inc
pop
mov
or
add
int
add
sahf
dec
cmp
sub
or
dec
mov
stc
icebp
lret
and
stos
add
rcrb
jnp
xchg
jb
and
jo
sahf
dec
call
fcmovne
inc
inc
add
sbb
sub
mov
mov
fildl
xor
rorl
stos
es
pop
push
ja
dec
push
push
sbb
std
ss
mov
mov
pop
and
sub
cwtl
adcl
aam
pop
add
cs
adc
aaa
out
insb
cld
pop
pop
pop
mov
jp
xor
sub
pusha
sub
lret
or
jns
cmp
pop
imull
call
lods
fadds
jbe
or
sub
or
je
jmp
clc
mov
into
mov
and
mov
mov
jmp
sub
sub
mov
inc
shrb
not
sti
aad
loopne
ljmp
fistpll
mov
push
mov
add
movl
loopne
push
sbb
loop
xorl
arpl
cmp
lcall
imul
fildl
xor
roll
pop
push
shrb
mov
imul
or
inc
add
arpl
mov
push
rorb
adc
add
ss
dec
xor
mov
cld
push
mov
mov
aas
mov
rorb
add
or
repz
and
adc
insb
scas
mov
adc
das
fsubrs
popa
xor
dec
add
ja
pop
int
cmp
ret
inc
cmp
or
and
lea
jne
sbb
sahf
cs
inc
adc
rol
xchg
dec
mov
out
out
pop
dec
rolb
stc
loopne
mov
pusha
mov
dec
clc
jae
daa
neg
lock
daa
outsb
sub
jg
mov
jne
xor
test
inc
repz
ds
popa
prefetchw
mov
and
jnp
les
rclb
mov
addl
mov
cld
add
out
outsl
pop
pop
cld
dec
rolb
mov
adc
add
xlat
fidivl
shll
out
mov
and
push
mov
cmpsb
xor
mov
sbb
mov
lret
jnp
mov
mov
or
pop
xchg
inc
sub
rorl
loope
sub
push
or
clc
jae
inc
cmpsb
xchg
fistl
or
popa
insb
jnp
dec
or
cmp
int
xchg
call
jns
arpl
pop
ret
rolb
sbb
clc
movb
adc
mov
mov
add
arpl
push
test
add
bound
aad
lock
pop
and
sbb
call
js
rolb
ror
insl
pushl
movsl
xorb
shr
jo
xor
in
add
stos
stos
and
in
shll
arpl
aam
cmpsl
arpl
int3
ret
bound
lret
insl
sarb
fidivl
int3
xor
push
xchg
fdivrp
es
dec
cmp
xor
dec
fistpl
dec
push
add
push
lea
push
push
jl
dec
xchg
fnstenv
lret
adc
dec
out
or
arpl
int
shlb
loopne
dec
xor
ret
rolb
repz
stos
push
jg
mov
ret
mov
fwait
or
mov
push
add
dec
loopne
adc
out
pop
xchg
mov
inc
mov
sarl
pop
rorb
sub
out
outsb
lods
mov
jmp
cli
enter
sbbb
out
loop
into
fs
jb
loopne
xchg
aas
or
inc
loopne
outsl
mov
fdivrs
fsubr
cmp
add
sbb
outsl
lock
popa
or
repnz
sti
insb
leave
pop
subb
lock
sbb
xor
jecxz
imul
test
das
xchg
pop
and
psrad
jl
ret
loope
pop
ss
rsm
and
dec
sub
pop
push
xor
fwait
add
lock
into
xchg
add
pop
dec
test
dec
jbe
xchg
clc
aaa
jmp
sub
lret
cmp
lods
sub
push
cmp
cs
andl
jg
adc
stos
int
add
push
and
jle
into
mov
ret
decl
test
adc
mov
add
outsl
pminub
adc
or
sarb
cmp
mov
outsl
outsl
or
loopne
sti
adc
xchg
adc
adc
enter
fistpll
insb
sbb
xor
cmp
icebp
and
loopne
sbb
jmp
add
cmp
movsb
inc
push
mov
jno
int
std
aad
leave
push
mov
shll
pushf
mov
je
sbb
push
xchg
movlps
sub
push
jne
dec
outsl
add
xor
dec
mov
test
stos
cwtl
movl
jg
adc
dec
mov
and
jno
das
aam
inc
inc
fists
les
push
adc
mov
or
and
es
pop
subl
sub
push
ret
mov
jae
jmp
sti
mov
sbb
pop
icebp
pop
rorb
loope
xor
pop
mov
mov
sbb
cwtl
inc
mov
mov
ss
dec
mov
movsb
into
cmp
jns
fstl
and
xchg
and
addr16
push
insl
aas
std
xchg
sbb
js
adc
pusha
dec
mov
sahf
mov
jb
add
dec
insb
mov
pop
inc
xlat
lret
mov
stos
pop
aam
dec
insb
movsl
faddl
add
push
mov
test
dec
mov
adc
or
cli
push
cs
mov
or
insb
adc
xor
js
movsl
xorb
out
inc
dec
cld
jge
test
sbbl
jp
pop
je,pn
out
outsl
imul
idivb
inc
pop
das
clc
int3
nop
nop
xchg
je
sub
pop
pushf
push
mov
push
jo
in
sbb
mov
jne
ja
fildl
shrl
push
lcall
pop
add
add
lahf
mov
insl
ja
loopne
orb
fldt
mov
mov
iret
insb
fistps
stos
mov
push
sub
mov
pop
jge
pop
pop
hlt
xor
jmp
add
mov
cwtl
pop
push
inc
arpl
sarb
je
cmpsl
adc
aad
adc
inc
mov
or
sub
gs
xchg
cmp
rorb
outsl
push
in
dec
and
mov
clc
or
sbb
mov
mov
subb
clc
outsl
ljmp
cs
loopne
push
nop
shll
dec
in
adc
or
push
and
push
jo
dec
ret
sti
mov
cwtl
sub
sahf
hlt
add
xchg
movsb
fsub
ret
icebp
mov
sub
outsl
push
fldenv
mov
sub
jb
jle
xchg
loopne
sbb
pop
and
or
mov
mov
and
ljmp
xor
and
popa
cmp
and
or
hlt
movsb
insl
mov
and
cmpsb
push
jg
push
icebp
mov
lods
movsl
jl
rcrb
push
insl
cmpb
inc
sub
subb
in
jp
sub
pop
pop
js
adcb
pop
sbb
jns
arpl
fisttps
int3
fidivs
cwtl
mov
mov
sbb
enter
add
lcall
pop
add
mov
dec
xchg
mov
cmp
jno
sbb
cmp
shl
adc
sub
sub
jge
bound
pop
xor
test
dec
mov
inc
jnp
or
fbld
lock
sub
mov
and
es
pop
subl
push
sub
adc
inc
int3
sbb
cmp
faddl
push
add
dec
fdivs
ss
sub
dec
inc
mov
mov
adc
movsl
jle
mov
inc
out
add
pop
rolb
arpl
fimuls
sbb
or
gs
pusha
shll
sahf
pop
enter
testl
pop
xchg
adc
and
sub
mov
out
dec
test
sub
and
xchg
mov
orb
hlt
in
mov
xchg
add
or
insl
mov
arpl
clc
or
mov
adc
and
jg
jbe
sahf
jne
and
not
inc
das
or
dec
dec
add
push
or
lods
lds
js
enter
push
push
fsubl
bound
pop
inc
out
adc
int3
scas
lock
fcmovb
loope
fnstenv
jl
shlb
dec
ljmp
fistpl
jecxz
adc
mov
out
popa
sbb
dec
mov
popa
scas
dec
mov
mov
push
xchg
or
inc
inc
inc
bound
mov
int3
fs
and
xchg
mov
and
sbb
out
fcmovu
mov
fdivrs
sub
sub
or
pop
loop
and
fbstp
xchg
add
pop
cmp
cmpsl
or
jo
adc
push
pop
leave
mov
push
push
pop
inc
clc
in
fistpl
or
cmp
cmpsl
cwtl
in
pop
lret
mov
xchg
hlt
and
inc
or
shl
out
cmp
mov
fimull
sahf
cmc
mov
jle
xor
loop
push
loope
xchg
stos
ret
mov
imul
test
lds
repnz
push
mov
mov
out
add
sub
sub
or
dec
sub
adc
inc
adc
push
imul
loope
pop
push
sbb
pop
sub
popf
lahf
in
lcall
mov
jp
mov
scas
dec
std
nop
lds
rcl
sub
stos
shl
test
ljmp
testb
test
mov
mov
add
lods
fcmovnu
jbe
data16
outsl
in
stos
inc
or
mov
filds
inc
cmp
jnp
adc
pop
inc
pop
sub
adc
and
fcmovu
bound
in
lret
lods
std
psubsb
add
lret
pop
cmp
add
inc
out
inc
jne
imul
mov
adc
sub
xchg
push
fistpl
aaa
jns
xor
js
sub
dec
stos
loopne
push
bnd
in
ss
push
adc
jl
test
lods
das
mov
adc
lock
ljmp
lods
xorl
rorb
jge
cld
imul
test
pop
scas
push
adc
jl
test
fsts
subb
mov
fadd
callw
pop
add
pop
fcom
push
imul
sarb
enter
mov
loope
push
cmpsl
movsl
fnstcw
in
ljmp
lea
ja
les
popa
ret
lods
xchg
loopne
ss
in
mov
out
push
fsts
push
mov
jno
aas
and
add
mov
add
popa
test
adc
xor
pop
nop
jg
add
lods
jo
pop
add
sbb
movsb
cmp
outsl
inc
mov
outsb
scas
xchg
jno
and
push
stos
std
mov
andb
add
lcall
dec
aaa
jle
jg
std
mov
adcb
mov
inc
dec
loop
js
sbb
test
add
fisubrs
sbb
ret
cmp
sbb
adc
sbb
hlt
inc
aaa
cmpsb
mov
in
cmp
pop
ljmp
mov
push
pushf
fwait
or
mov
dec
insb
ja
cwtl
adc
sti
rcr
xchg
aam
test
inc
out
fs
call
mov
inc
inc
dec
push
movsb
scas
fsubrl
clc
sbb
sub
clc
and
ja
sbb
inc
xor
adc
jg
inc
cwtl
fdivr
mov
nop
lcall
pop
int
das
cld
idivb
shrl
mov
adc
xrelease
or
popf
mov
add
push
std
mov
or
je
xchg
ret
xor
inc
sbb
mov
xor
jo,pt
xchg
iret
mov
loopne
aad
mov
mov
popa
mov
je
lret
and
mov
movsb
add
cmp
jg
jecxz
es
sbbb
adc
fdivrl
fadd
movsl
lds
xor
push
adc
movsl
mov
or
mov
mov
mov
push
jns
in
mov
lock
mov
pop
mov
mov
mov
fs
inc
xor
push
insl
lds
std
cmp
mov
pusha
aas
lods
cwtl
lret
sbbb
mov
addb
cmp
cli
roll
andb
daa
pop
in
daa
xor
inc
jne
pusha
pop
cmp
jne
sub
sub
loopne
lret
sub
mov
into
out
insl
sti
push
in
or
push
xor
add
xchg
fisubrl
add
scas
add
push
jge
and
es
ret
in
add
or
lock
fdivrl
adc
push
dec
bound
fbld
or
aam
sub
push
popa
mov
daa
rcrb
lods
jns
push
call
sub
aaa
inc
call
add
xchg
call
add
call
or
jns
xlat
dec
sbb
hlt
clc
add
ret
mov
jecxz
and
es
hlt
neg
cld
aad
fldl
jmp
shl
sub
inc
dec
fcomi
fcmovnu
push
cmp
jbe
mov
call
xor
das
mov
push
movb
add
outsb
and
adc
lds
pushf
push
mov
fstl
pusha
pop
cli
call
inc
fcomps
aas
push
data16
adc
add
inc
outsb
mov
rorb
lods
mov
jge
dec
inc
add
pop
mov
or
sbb
and
in
rorb
adc
add
add
jmp
sbb
decl
adc
or
dec
out
icebp
and
xor
js
movsb
cmp
rorl
incl
sti
int3
jbe
pop
lock
dec
or
xor
mov
mov
jo
fildll
test
in
add
adc
aas
stos
add
nop
cwtl
icebp
dec
mov
xor
mov
sbb
aam
inc
out
clc
sbb
scas
repz
xchg
pop
mov
or
int3
xor
add
mov
adc
arpl
repnz
fildl
cli
xchg
fsubrp
inc
loopne
or
shlb
pop
call
dec
lea
or
lds
in
xchg
or
hlt
mov
xor
inc
and
leave
and
roll
ds
lcall
inc
mov
fadds
enter
sbb
pusha
add
dec
xor
aaa
movsb
testl
push
fbstp
add
and
fsub
pop
or
les
pop
mov
and
insl
sbb
pushw
rcl
or
rdpmc
lock
push
mov
jge
inc
pop
shl
ja
or
aaa
mov
mov
dec
mov
ss
lea
dec
xchg
jb
mov
cs
cmp
adc
stos
adc
mov
mov
lret
pusha
inc
lcall
adc
std
call
push
mov
lret
mov
add
cli
test
or
movsl
or
lods
fcomps
negb
icebp
inc
pop
shrb
rol
xchg
dec
adc
jle
mov
jns
pop
mov
imul
mov
jne
fildl
adc
filds
lret
icebp
mov
cmp
fdivs
adc
aam
jp
or
cmpl
shll
add
pop
cmpsl
scas
out
loop
lea
add
mov
lds
ljmp
sbb
mov
loop
add
in
ljmp
lahf
call
cmp
or
inc
test
jl
call
js
call
xchg
in
fwait
jns
fadds
decl
rclb
or
push
out
shlb
add
xchg
adc
je
repnz
and
adc
aam
mov
or
stos
xchg
aam
nop
inc
push
hlt
sbb
mov
jg
and
sbb
jo
or
sbb
mov
pusha
xor
dec
mov
loope
cld
test
push
and
test
shll
bound
mov
jge
mov
mov
push
das
hlt
dec
xlat
outsb
jmp
and
rol
clc
mov
mov
das
pop
ret
sbb
pusha
loop
sbbl
or
xchg
push
xchg
xor
adc
cmpsl
jl
test
or
mov
lea
jl
loope
mov
andl
test
sub
out
fimull
pushl
lock
jecxz
rol
cli
cs
or
cmp
push
push
fnstsw
stc
lcall
add
fwait
push
pop
mov
insb
mov
mov
pop
fistps
loope
lea
cmp
or
inc
shll
mov
jno
sbb
pop
add
adc
in
and
jne
sbb
enter
mov
adc
adc
inc
or
pop
cmpsb
and
mov
inc
jmp
push
lock
sbb
arpl
add
sbb
call
dec
sub
and
fwait
mov
inc
les
mov
das
cmp
mov
mov
sub
xchg
repnz
pop
dec
arpl
repz
push
cmp
or
adc
push
into
out
xor
mov
sarl
push
xor
push
sbb
jge
lock
pop
inc
inc
push
das
cld
or
and
nop
mov
add
aam
clc
inc
cmp
popa
rorl
jno
sbbb
or
add
add
xor
xchg
dec
pusha
push
and
xchg
xor
add
sub
push
dec
adc
daa
or
rclb
push
xchg
clc
aas
fimull
lea
cmpsb
cmp
push
jg
ret
pop
jge
and
mov
add
nop
loop
mov
pop
mul
lods
inc
jg
xchg
sahf
cmp
popl
pusha
addl
adc
push
lods
aaa
and
ror
loop
les
jns
xchg
pop
mov
rcll
add
imul
ret
xchg
iret
imul
or
xlat
insb
fsubs
mov
jle
rorl
test
das
or
fisttps
inc
aam
fnstcw
mov
out
mov
mov
add
psllq
add
aaa
lock
cmp
fcomps
xor
aam
pop
fistps
mov
shr
add
aam
insl
xor
daa
xchg
and
mov
or
mov
or
push
outsb
loope
adc
movsb
jl
and
mov
loopne
sbb
add
clc
hlt
jmp
lods
clc
les
lock
test
shrb
ret
fildl
add
movsl
mov
and
ss
loop
jns
and
sub
push
inc
roll
push
inc
inc
fidivl
aas
jo
loope
psubsw
sarb
idivl
sbb
sarb
mov
subl
outsl
arpl
add
ret
add
insl
inc
decl
fwait
in
adc
or
mov
mov
adc
roll
mov
mov
add
pop
sbb
lock
mov
push
dec
in
cmp
or
test
jle
test
rclb
push
dec
and
jnp
adc
or
sbb
inc
push
notl
pop
hlt
orb
mov
sub
mov
or
mov
and
or
mov
shll
sbbb
xor
inc
mov
decl
pop
mov
inc
sbb
aaa
mov
rcl
fsubs
xor
in
mov
mov
mov
or
repnz
test
iret
xchg
imul
in
loope
jbe
cld
adc
mov
sbb
xchg
lea
push
inc
sub
push
pusha
add
or
in
in
jno
pop
call
or
jecxz
mov
inc
or
lods
push
xchg
faddl
ret
jg
sbb
fisubs
mov
adc
nop
lcall
call
lea
ret
mov
jns
gs
cmp
lcall
cld
daa
xlat
add
push
iret
out
mov
push
lds
inc
faddl
ljmp
icebp
loop
push
int
push
mov
outsl
setbe
out
inc
inc
adc
dec
add
jg
into
xor
pop
sti
dec
test
repnz
subl
xchg
add
pop
scas
push
pushl
out
lea
mov
outsb
mov
cmp
or
or
mov
test
stc
addb
mov
ljmp
xor
lret
push
incl
das
add
leave
test
inc
mov
add
mov
cmp
pop
aad
adc
sub
push
loop
add
xchg
jmp
cmp
aaa
sbb
sahf
mov
mov
cltd
cmpsb
adc
add
jno
lcall
cmpsb
push
or
add
pushl
stc
xchg
popa
add
andb
int
mov
push
add
pop
inc
ficompl
mov
push
test
loope
out
sarl
add
cmc
mov
lahf
inc
and
add
cmp
ret
adc
stos
add
pop
idivl
in
push
icebp
lcall
cld
adc
cmp
loop
adc
mov
mov
dec
inc
xchg
iret
pop
sub
or
or
add
sbb
imul
ss
mov
inc
pop
jns
lock
pushl
jno
jp
pop
pop
and
mov
mov
out
mov
or
call
jecxz
jae
sub
xor
jmp
lcall
pop
insl
inc
and
cmp
add
les
lcall
popf
sbb
mov
xchg
in
xchg
adc
pop
fildl
insb
fcoms
dec
xchg
test
imul
rorl
push
jecxz
leave
loope
jno
fistpl
adcl
and
cmp
add
mov
and
push
outsb
pop
aas
and
mov
push
or
das
inc
push
xchg
or
xor
pop
loop
pop
mov
push
lods
movsb
subl
inc
mov
push
jge
pop
ret
sub
inc
cwtl
dec
mov
orl
addr16
adc
or
dec
cli
pop
sbb
push
mov
rcrb
xchg
jle
inc
pop
ds
les
inc
xor
cwtl
add
cli
test
sbb
jge
dec
daa
aaa
jb
enter
xor
add
push
sarl
xchg
xor
loopne
and
xor
ret
and
daa
js
jmp
adc
push
xor
jb
fstps
push
mov
fcoml
jl
jne
xchg
push
call
int
fldcw
pop
call
stos
fcompl
cli
adc
enter
jo
jae
insb
pop
jge
ss
xor
fdiv
adc
mov
arpl
sub
xor
add
cli
and
incb
cltd
in
fidivrl
mov
mov
mov
push
lock
push
add
mov
imul
aad
iret
fstl
dec
add
push
xor
xor
ss
cmp
repz
fdivl
push
pushf
testl
add
or
hlt
add
lock
mov
fsubl
les
outsb
push
fmul
les
adc
nop
or
lock
nop
call
pop
std
inc
cmp
xchg
cmpsl
icebp
or
lds
shll
pop
xor
loop
and
add
test
sti
and
stos
dec
push
add
xchg
fisubl
or
push
js
lock
ljmp
sub
push
fnstcw
push
inc
xor
add
or
or
adc
adc
inc
xchg
dec
dec
les
iret
out
pusha
inc
fstp
cwtl
repnz
inc
int3
or
incl
add
push
pusha
inc
xor
leave
test
les
shll
test
sbb
adc
lock
jmp
sub
inc
inc
inc
jno
mov
xchg
adc
or
imul
cwtl
adc
dec
outsb
cmp
and
sub
hlt
std
cwtl
das
aam
xor
gs
add
das
pop
push
xor
xor
lcall
out
enter
aas
test
push
add
pop
loopne
adc
or
cmpsb
cltd
stc
lahf
dec
add
test
inc
ljmp
rorb
add
clc
mov
pop
xor
xor
jl
mov
shlb
sbb
jg
push
aad
sub
jne
add
aad
jns
cli
cmc
std
push
pop
sub
push
jg
sarl
add
cli
mov
lret
jns
add
repz
fcoml
inc
in
int
call
and
push
jb
repz
das
jmp
sub
push
cld
add
pop
fiadds
mov
and
pop
jl
cmc
scas
jg
stos
hlt
jl
mov
fnstcw
mov
mov
add
shrl
dec
jg
out
push
xchg
sahf
pop
adc
bound
rcrl
push
int3
aam
add
loopne
popf
nop
add
test
loope
cmp
cs
mov
orb
les
sub
sbb
jmp
pop
lahf
mov
add
mov
hlt
add
jp
std
aad
idivb
fmul
cmp
roll
add
iretw
test
mov
inc
aas
xchg
cmp
jg
idivb
add
adcb
outsl
inc
add
add
pop
std
jbe
or
popa
and
dec
mov
lret
add
movsb
dec
xchg
cltd
xor
cmp
je
sbb
lds
insb
outsl
and
adc
pop
or
cli
add
push
lcall
in
arpl
fidivs
fdivr
jg
imul
add
mov
mov
push
inc
clc
jg
incl
inc
sbb
xor
cmp
sbb
dec
int
mov
cli
mov
ror
sub
adc
rclb
fistpl
or
and
lcall
mov
imulb
pop
popaw
pop
mov
fcomi
pop
pop
push
pop
outsb
sbb
jbe
and
add
into
sub
decl
xchg
iret
add
popa
sub
mov
or
jg
or
mov
jmp
addb
mov
lods
ljmp
fiaddl
into
add
mov
movsb
loop
ficoms
add
sub
push
dec
mov
pop
ret
mov
test
shll
or
repz
pop
mov
loop
dec
mov
jo
fucomp
ds
xor
aaa
fcmovnbe
lods
insb
pop
add
adc
cmc
pop
cmc
mov
cmp
cmp
add
add
cmp
ljmp
outsl
push
out
push
shr
add
add
jp
xchg
add
adcb
adc
test
pop
gs
cmp
and
add
or
or
push
cmp
scas
or
pusha
jmp
out
add
sub
pop
mov
loopne
shl
cmp
add
mov
push
and
pop
dec
sbb
cmp
cmp
adc
out
sbb
push
pop
xor
sbb
xlat
adc
sub
jmp
fstl
or
push
call
shrb
shl
fimuls
lock
loop
fwait
in
fists
sub
addb
test
push
jno
or
call
loope
call
dec
sub
push
and
inc
xlat
pop
mov
loopne
mov
mov
pusha
loopne
into
ret
movsl
cmp
sarb
shll
pop
int3
xchg
xor
pop
pop
outsl
loopne
and
adc
and
mov
pop
sbbl
loopne
jnp
and
ret
dec
jge
jo
das
jbe
sub
sahf
push
sbb
andl
les
das
push
mov
setle
inc
loopne
lret
inc
pusha
add
popf
dec
inc
mov
cwtl
jp
sub
push
mov
pop
lock
mov
mov
int3
push
loopne
cwtl
jnp
ficompl
pop
loop
rcr
push
js
stc
xor
fptan
xchg
and
sbb
jmp
push
jg
xchg
frstor
ljmp
mov
pop
pusha
aas
sbb
cmpsb
or
jno
call
xchg
shlb
ja
lcall
inc
inc
jle
xchg
lcall
call
incl
ret
mov
push
pop
pushf
add
enter
inc
out
mov
ljmp
xchg
mov
push
cmp
pop
lods
jae
mov
sbb
lea
sub
xor
or
fistps
or
and
cltd
imul
icebp
ret
push
outsl
jge
inc
mov
loopne
inc
inc
xchg
int3
mov
push
add
test
add
fistl
push
lock
push
sub
mov
sub
adc
cmpsl
ja
sub
xor
aad
aad
pop
lcall
push
sub
cli
mov
mov
scas
xor
arpl
adc
rcr
cmp
add
cmc
push
jl
pop
add
add
xchg
xor
test
ljmp
lods
sub
or
insl
mov
pop
mov
cmp
lahf
leave
addl
mov
stos
loopne
push
adc
mov
in
xchg
insl
xor
sbb
pop
and
add
xchg
sub
push
js
mov
dec
adc
sahf
adc
test
outsl
pusha
add
or
inc
scas
push
addb
adc
fbstp
clc
add
pop
mov
int3
sub
mov
cmp
aas
cltd
adc
mov
mov
int
jns
mov
mov
inc
shrb
cltd
mov
pop
call
dec
sbb
xor
es
clc
add
inc
shrb
adc
push
mov
mov
popa
orl
pop
mov
pop
clc
test
push
nop
xchg
adc
jg
or
push
xchg
out
cmc
leave
fnstcw
fcompl
movsl
outsb
in
inc
les
lea
ret
mov
xchg
cmpb
cmp
sbb
cld
lock
flds
and
je
xchg
push
ss
inc
cmp
aaa
aad
xchg
or
mov
je
rcll
dec
jb
xor
fstpl
orb
and
cmp
jl
pop
jl
cli
xchg
fsubrl
outsl
daa
add
xchg
pop
inc
pop
js
shll
add
add
add
loop
out
cmp
jbe
xchg
jg
dec
mov
test
add
mov
pop
bound
and
into
cs
mov
stos
idiv
cmp
sbb
jmp
call
pop
je
out
push
sub
push
jmp
ljmp
mov
into
or
adc
cld
int3
daa
data16
cwtl
mov
mov
mov
cltd
outsb
adcl
sti
das
mov
rcrb
inc
jns
out
mov
ret
mov
in
sub
jne
adc
cmp
mov
pop
mov
stos
add
negb
je
add
mov
or
xchg
movaps
xor
jl
mov
xchg
or
cmp
mov
fs
dec
sbb
pushf
fwait
adc
lret
jg
insl
rolb
mov
faddl
sbb
mov
pop
fdivrs
xor
add
mov
adc
jecxz
stos
xor
mov
clc
in
aaa
sub
pop
adcb
cltd
mov
cmp
or
clc
mov
pop
push
mov
xor
aas
mov
aas
call
mov
sarl
shll
int
pop
or
mov
call
test
or
inc
adc
jbe
jp
pop
push
das
decb
movsl
or
mov
lds
push
pop
jge
push
mov
jmp
jge
jae
into
push
out
cld
outsl
sub
ficompl
jmp
sbb
decb
je
sahf
pop
inc
cmovno
cltd
push
movsl
inc
shrb
aad
or
inc
fwait
ds
jmp
ret
pop
sti
sub
jns
sar
inc
dec
inc
bound
xchg
push
inc
mov
insb
loopne
push
aam
lret
and
cmp
lock
jg
jns
dec
mov
test
movsb
iret
div
fwait
out
jle
paddusb
or
xchg
out
std
mov
clc
dec
pop
std
das
pop
sub
mov
lds
adc
xchg
ss
insl
or
in
and
ret
ret
outsl
push
xor
test
adc
adc
xchg
imul
test
and
sub
icebp
or
push
xchg
mov
pop
hlt
aaa
es
cmpsl
mov
andl
dec
mov
pop
jmp
shlb
cltd
add
hlt
mov
inc
or
cmc
mov
loope
cwtl
xchg
scas
out
mov
jecxz
or
nop
lret
pushf
sbb
lea
call
int3
jbe
shll
movb
data16
mov
sub
dec
arpl
cmc
mov
call
in
mov
mov
xchg
add
aam
faddl
jo
fisttpl
add
adc
sub
and
pusha
stos
test
sbb
mov
call
push
jg
fildl
outsw
cwtl
mov
pop
aaa
dec
and
inc
and
xchg
or
outsl
or
lret
test
xchg
out
out
xor
mov
adc
and
clc
lret
les
and
jl
adc
add
inc
mov
mov
shll
mov
les
and
pop
jge
sbb
loopne
vpsrad
in
pop
cs
or
das
cmc
push
rcll
xor
imul
lret
hlt
aam
add
cmp
icebp
sub
mov
mov
movsb
jmp
ljmp
push
adc
dec
mov
mov
aam
orb
xor
pop
sbb
outsl
push
mov
pusha
into
dec
stc
fcompl
inc
add
ficompl
stc
jbe
dec
lods
shll
mov
inc
addps
or
sbb
jbe
push
out
pop
xchg
mov
cmp
dec
outsl
or
aad
pusha
and
mov
fisubl
hlt
dec
data16
int
rorb
int3
rol
outsl
inc
subb
cwtl
fmuls
aad
mov
movsl
push
movl
xchg
add
and
cld
sahf
test
je
or
clc
or
movsb
pop
int3
add
mov
mov
and
mov
mov
cmp
ljmp
out
xorb
adc
fcomip
mov
insb
popa
dec
inc
inc
add
mov
fbstp
cs
inc
mov
addr16
sub
xchg
add
mov
mov
jbe
mov
add
mov
int3
and
mov
pop
mov
js,pn
data16
or
push
bound
jo
sub
out
mov
sub
push
imul
subb
sub
call
dec
xor
mov
jge
inc
lock
add
pop
push
and
lret
sbb
add
push
in
sbb
mov
cmpsl
subl
jmp
and
and
lret
je
push
xlat
add
jns
pop
inc
loopne
or
jl
and
loope
test
stc
movsb
pushf
cmp
and
fnsave
sarb
adcl
push
mov
scas
and
roll
pusha
xchg
pop
in
add
int3
jecxz
movsl
sbb
mov
push
add
jge
fwait
dec
or
out
xchg
lret
jae
sub
in
add
data16
mov
xor
pop
dec
sbb
jmp
mov
mov
daa
xor
adc
iret
les
pop
xor
mov
pop
dec
ljmp
inc
pusha
inc
mov
sarb
mov
jle
loopne
mov
ja
idiv
xchg
dec
push
loopne
rcrb
xor
and
sbb
sub
mov
rcrl
inc
fadd
mov
add
mov
mov
test
ret
dec
jns
cwtl
and
pusha
mov
pop
mov
in
jo
or
sub
or
or
mov
or
inc
adcb
bound
repz
es
mov
add
add
cld
push
add
fidivl
popa
xchg
pop
adc
test
pusha
pop
out
sbb
into
mov
dec
mov
pop
xor
cmp
test
or
mov
ss
insl
jnp
insb
sbb
ret
and
clc
push
push
push
inc
xchg
mov
das
lret
sub
addl
inc
ret
lahf
lock
jbe
ret
xorb
adc
dec
sbb
sbb
inc
out
jnp
nop
or
cwtl
lea
pop
lods
cmp
push
and
in
insl
push
inc
jb
mov
out
inc
ljmp
ljmp
scas
loop
sbb
lds
mov
xorl
adc
pop
xor
inc
int
xor
aam
insl
rcrb
fucomi
push
inc
inc
jb
sub
adc
repnz
nop
adc
or
push
mov
pushf
inc
or
pop
or
dec
dec
in
lock
pop
rcrl
cmpsl
es
inc
je
sbb
cmp
inc
ja
adc
aas
ret
and
aas
movsl
xchg
push
and
mov
push
push
jecxz
xchg
mov
xor
clc
clc
dec
shll
iret
adc
out
push
sub
lea
lret
movsl
xchg
pop
lods
mov
stos
jmp
das
mov
jne
aam
pop
aad
push
ljmp
adc
or
ljmp
jae
jg
aam
lock
bound
loope
mov
call
mov
out
out
sub
cld
std
ljmp
jmp
xchg
sbb
push
xor
inc
xor
das
xor
mov
bound
ljmp
test
jle
jae,pt
ret
fisubrs
stos
jae
adc
lret
sbb
icebp
mov
lds
xchg
nop
mov
das
bound
js
push
int3
call
js
aam
mov
loop
xchg
cmp
mov
cli
dec
insb
sbb
cmpsb
inc
add
xchg
std
add
cmpsb
cmp
push
mov
sub
push
ss
decl
das
dec
adc
inc
in
int3
add
push
mov
mov
dec
pop
call
js
push
mov
pop
icebp
sbb
mov
in
repnz
mull
addr16
nop
in
push
incl
stc
cmp
or
cltd
cmpl
mov
lret
mov
dec
pushf
and
and
add
outsl
outsb
jbe
adc
inc
jecxz
push
xchg
jl
divb
xor
pop
pop
sbb
mov
daa
and
lcall
fists
sub
inc
or
sti
ffreep
inc
dec
iret
cmp
pop
and
mov
sub
dec
rol
adc
pop
rclb
mov
ret
push
mov
cmpsl
xorb
jecxz
mov
bound
pop
mov
dec
adc
wbinvd
xor
xchg
add
add
xchg
out
push
mov
inc
add
push
sbb
adc
pop
xchg
mov
mov
cwtl
jp
add
sbb
ret
loopne
mov
decl
mov
mov
sbb
mov
mov
in
add
cmp
rclb
mov
out
mov
outsl
incb
hlt
push
fsts
call
pop
sub
add
enter
push
add
xchg
aaa
sbb
addr16
roll
std
sub
enter
mov
andl
je
add
out
fstl
insb
fisubrl
inc
mov
lret
or
adc
loopne
scas
rcrb
or
or
adc
bound
js
mov
jne
fisubl
and
cmp
and
adc
pop
add
cmp
jo
into
dec
xor
add
mov
cmp
dec
or
outsl
xor
cmc
and
push
rorb
repnz
int3
or
test
stos
ss
sub
pop
xor
add
rorb
out
pushf
mov
xor
es
adcl
add
sahf
cmp
or
pop
and
pusha
ret
shll
mov
ds
rcl
punpckhbw
data16
inc
xor
outsb
xchg
push
mov
add
add
cmp
repnz
sub
adc
inc
inc
pop
decb
dec
dec
adc
out
mov
jge
int3
enter
push
xor
xchg
mov
bound
mov
lods
jmp
cwtl
subb
or
fisttpl
outsb
pushf
dec
jnp
fs
popa
imul
cli
push
dec
adc
jae
imul
push
push
lea
xor
and
dec
ds
outsb
outsl
fstl
push
int
cmp
insl
ret
ljmp
jle
push
dec
pop
mov
call
mov
notb
add
push
cli
outsl
inc
movsl
test
cmp
incb
fpatan
dec
scas
je
and
jns
es
insl
jne
pop
or
inc
pop
push
cmp
orl
pop
aaa
and
ret
adc
sub
lcall
andl
sub
sub
jno
lahf
jp
popa
fildll
fs
inc
aas
xchg
shlb
test
andb
int
fcmovnbe
outsl
cmc
mov
mov
mov
adc
idiv
outsl
enter
fcoms
mov
jo
dec
mov
mov
or
aas
xor
clc
inc
push
int3
xor
pushf
pop
out
cmp
hlt
ret
jmp
inc
test
jo
testl
das
adc
nop
loopne
jg
push
mov
leave
sub
fdivl
loopne
int3
sub
mov
dec
push
jge
xchg
dec
add
pop
scas
inc
aas
push
pop
push
cmp
xor
std
fildll
ret
xor
jne
inc
add
out
inc
and
cmp
xchg
imulb
cld
or
xor
cmp
mov
cmc
jge
loope
mov
bnd
sub
fidivrs
andb
pop
iret
inc
std
sub
ret
fistpll
mov
loope
add
clc
mov
add
bound
mov
inc
push
dec
pusha
xchg
sahf
or
mov
jmp
dec
jecxz
fs
stc
ret
or
and
out
in
imull
sbb
cs
mov
push
into
xchg
icebp
jp
and
aas
sbb
lods
cltd
dec
inc
gs
movsl
loop
mov
xchg
das
incl
cmc
mov
rcll
and
notl
pop
mov
add
imul
jl
sarb
pop
int
pop
call
cmp
jmp
cmp
pop
inc
push
aad
shll
outsb
pop
jne
ret
inc
clc
pop
or
and
jl
or
loope
mov
push
mov
add
mov
les
push
pop
out
aad
pop
inc
fmulp
xor
in
xchg
sbb
dec
gs
movsb
sbb
adc
ror
and
out
push
jne
push
xchg
cmp
adc
test
rorb
sbb
sbb
sub
out
pop
popa
idiv
adc
jecxz
loope
push
inc
ret
leave
pop
inc
mov
enter
adc
mov
setp
movsl
aad
int3
pop
or
jne
mov
pusha
dec
dec
call
cld
ss
push
add
add
jg
test
add
dec
int3
mov
adc
test
push
fildll
or
pop
dec
mov
xchg
mov
cld
mov
outsl
fnstcw
icebp
ret
xchg
gs
mov
cld
dec
jle
push
dec
sub
loopne
je
or
jns
add
arpl
mulb
and
add
test
lret
aaa
mov
data16
fcos
fldt
or
xor
sub
cmp
push
fistpll
movsb
adc
scas
push
xchg
cli
popf
loopne
push
test
mov
pop
jp
in
scas
and
inc
arpl
adc
jns
add
mov
xor
nopl
pop
jg
dec
insb
clc
lods
push
roll
cmp
mov
ljmp
jl
add
shlb
lock
xchg
xchg
xchg
insb
mov
ds
add
jno
xchg
mov
sbb
ret
inc
dec
push
and
xchg
adc
stos
or
inc
mov
and
ljmp
xchg
fisttpl
mov
or
sbb
sahf
inc
iret
dec
outsl
icebp
jge
jg
outsl
cmp
or
fildl
dec
mov
shlb
xchg
lret
in
jae
adc
inc
js
loopne
dec
lock
xor
mov
out
adc
icebp
sbb
inc
adc
fisttpll
pop
or
and
xchg
jnp
ficoml
rol
fcomps
jge
mov
clc
mov
cwtl
dec
add
iret
push
clc
add
push
push
aas
xor
pop
sbb
cmp
xor
insl
cs
jge
pop
mov
daa
mov
inc
dec
addb
pop
cs
ljmp
mov
lods
add
or
mov
mov
xchg
jnp
jp
xor
xlat
push
cs
add
out
cmp
aad
les
addr16
pushf
mov
push
jns
and
or
add
test
add
flds
sti
sahf
pop
or
mov
subb
mov
lock
int3
dec
adc
mov
addr16
jnp
mov
jae
sti
ds
sti
or
mov
sub
mov
popf
xchg
popa
arpl
pushf
sbb
cmp
in
outsl
popa
adc
scas
or
es
dec
inc
out
xorb
ficomps
fsubp
mov
xor
xor
dec
mov
add
dec
stos
add
dec
imul
aas
gs
loopne
call
loop
std
neg
inc
out
addb
mov
es
cmp
pop
std
movsl
and
mov
xchg
pop
in
or
add
shr
xor
and
outsb
jae
out
scas
push
cmpb
ljmp
test
fsubrl
sbb
insb
inc
std
call
in
je
cwtl
push
cmp
and
data16
les
rolb
xor
add
push
adc
outsl
sub
mov
fiadds
mov
outsl
insb
aaa
dec
fnstenv
jecxz
jg
sub
jmp
and
sahf
dec
and
xchg
sbb
push
enter
pop
add
bound
shrb
jecxz
shlb
push
repz
cmc
ljmp
or
popf
mov
dec
scas
inc
das
rolb
jnp
inc
enter
or
js
pop
mov
mov
loopne
add
loope
sbb
xchg
clc
incl
outsb
mov
xor
jno
mov
cli
das
cmc
add
cmc
negl
and
lcall
mov
xchg
lret
loop
bound
popf
mov
xor
ja
sub
inc
popf
and
pop
cmc
mov
les
push
mov
icebp
in
rolb
adc
xlat
pop
js
pop
xchg
hlt
fs
loope
jmp
out
es
nop
adc
mov
mov
mov
or
xor
pop
fbld
mov
jg
clc
mov
test
or
cmpsb
mov
mov
mov
test
inc
pop
rclb
clc
incl
getsec
mov
mov
xchg
xor
dec
dec
and
add
lcall
js
jl
inc
aam
cli
xchg
adc
imulb
sub
xchg
stos
nop
subb
push
pop
adc
mov
cwtl
xor
movsb
jnp
xchg
clc
or
iret
je
xlat
lock
mov
cmc
mov
lods
push
sub
jbe
or
inc
fucom
das
clc
mov
pop
jg
inc
decl
aas
mov
xchg
add
loop
pop
push
push
dec
sub
lock
add
sti
icebp
daa
jns
test
rorb
cltd
fwait
stos
insb
sub
in
push
ljmp
cld
in
pop
add
push
aaa
push
test
add
mov
dec
in
push
pop
mov
das
dec
aad
divps
mov
pushl
loop
aad
mov
mov
sub
pop
add
adc
sbb
insl
dec
les
rolb
out
add
shrb
adc
pop
fnsave
std
or
imul
or
pushf
repnz
insb
int3
mov
addr16
push
mov
jne
loopne
mov
add
in
or
and
les
fiadds
fisttps
xor
sub
add
jae
inc
cmp
lods
gs
fcompl
jb
outsb
icebp
aaa
xchg
push
inc
mov
stc
mov
sbb
dec
dec
xlat
das
les
jge
lods
inc
shlb
cmp
fiadds
std
popl
sub
cmp
pop
stos
out
bound
inc
stc
or
or
mov
xor
je
add
cmpsl
push
mov
lds
jbe
sbb
push
jbe
sub
fwait
jne
push
addb
inc
cwtl
inc
xor
rorl
arpl
add
out
xchg
addl
loopne
in
in
sbb
inc
jne
fistps
sti
lods
fxch
inc
cld
mov
sub
clc
push
faddp
and
insb
pop
add
inc
gs
inc
mov
adc
push
adc
mov
mov
je
push
ja
mov
jge
mov
je
rorl
outsl
fs
cmp
jl
in
push
cmpl
push
lea
flds
imul
dec
mulb
fadds
jne
iret
insb
rclb
mov
fildl
pusha
push
mov
jp
xor
ret
xor
mov
cmp
int
pop
pusha
adc
mov
sbb
ss
sbb
or
fdivrl
andb
testb
xchg
inc
xor
testl
arpl
pushf
fwait
les
test
movsl
testb
loop
fstpl
adc
into
xchg
or
mov
dec
loop
hlt
mov
adc
mov
and
mov
mov
roll
int
push
xchg
pop
fdiv
daa
mov
or
pop
mov
mov
jl
popf
xor
ljmp
decl
jns
inc
adc
mov
sub
mov
mov
decb
push
adc
lds
adc
adc
dec
and
xor
fs
cmp
stos
cmpsb
aad
or
pop
push
arpl
sub
adc
cltd
aad
push
bound
and
xchg
add
loope
push
jbe
mov
adcb
mov
push
and
insw
push
adc
sbb
inc
and
leave
sbb
push
cwtl
mov
adc
add
jae
add
pop
int3
or
mov
fadds
jge
mov
pop
sti
mov
push
lcallw
pop
cwtl
rolb
les
les
push
jmp
int3
sbb
mov
sub
push
fs
fldl
push
inc
pop
loope
pop
push
ficoms
test
lods
inc
add
add
rol
pop
mov
add
or
and
aad
mov
add
or
int3
pop
icebp
xchg
repnz
mov
pop
pop
cmp
jno
jne
roll
mov
mov
xchg
popf
data16
xor
cmpsb
sbb
or
or
mov
mov
xor
push
dec
shl
outsl
xor
lahf
dec
push
cmp
sub
dec
xchg
sbb
fidivrl
xchg
or
aaa
mov
add
or
into
mov
push
inc
test
cmpsl
arpl
and
out
aam
sbb
add
js
cmp
mov
cmp
pusha
xor
adc
fnstcw
and
adc
ja
fisttpll
icebp
stos
sbb
test
fdivl
push
sbb
push
sarl
lcall
es
jecxz
xchg
loope
inc
call
add
imul
rcrb
outsl
xchg
hlt
test
adc
sbb
dec
mov
andb
dec
bound
sub
mov
incl
push
xchg
scas
or
cwtl
mov
out
dec
in
out
xchg
inc
pop
fsubrl
lcall
jae
adc
mov
into
and
ret
sub
es
stc
andb
sbb
push
and
cmp
fwait
xor
test
mov
test
test
loope
cltd
push
mov
mov
inc
dec
jne
cmp
mov
fistpll
dec
shlb
lcall
jne
add
add
jle
shrb
adc
mov
int3
and
fldcw
rcr
mov
lock
das
and
or
or
daa
pushf
mov
in
in
out
fldcw
xchg
adc
out
daa
lcall
lret
cmp
mov
push
xchg
adc
sub
mov
stc
add
int3
in
shl
flds
aad
popa
adc
add
add
xchg
loopne
add
shlb
pusha
sub
lret
arpl
dec
add
lods
add
inc
test
rolb
add
scas
rcrl
inc
xlat
and
clc
cld
push
cmp
cmp
adc
mov
out
aam
pop
xchg
jle
andb
je
adc
cmpsl
jbe
jle
nop
sub
test
xor
mov
ljmp
adcl
cmpsl
jecxz
and
ja
adcb
shl
xor
stos
inc
out
sti
xchg
push
pop
inc
sbbb
fistpll
mov
into
pop
out
mov
jmp
lock
bound
inc
xchg
mov
dec
or
jbe
adc
pop
push
imul
notl
pop
cmp
mov
orl
hlt
cs
jae
arpl
or
out
or
jmp
test
xor
inc
aam
scas
push
call
bound
push
mov
xor
push
xchg
arpl
pusha
push
outsb
adc
jmp
jp
and
or
pusha
add
add
add
cmp
test
dec
imul
xor
outsl
dec
sbb
nop
and
adc
cmpsl
mov
and
push
mov
sub
xor
and
mov
push
cmp
lahf
adc
mov
repnz
pop
rorb
add
xchg
cmp
mov
push
mov
jb
or
call
enter
imul
cltd
or
cmp
cs
push
pusha
dec
fwait
cmpsl
shlb
mov
inc
fcmovnb
enter
les
jmp
push
inc
inc
mov
hlt
mov
icebp
inc
add
sub
fsubrl
add
jno
inc
sub
sbb
xor
adc
ds
adc
mov
xlat
push
js
sbb
xor
cmp
iret
mov
ret
and
shr
dec
push
stos
out
inc
out
movb
loopne
clc
and
sti
enter
cli
ljmp
fldt
fsts
mov
stos
aas
push
popf
aaa
sarb
lods
pop
lods
lds
fstps
ret
rorl
sub
pop
jle
aad
mov
dec
hlt
add
adc
enter
imul
test
push
addr16
out
dec
sub
imul
sbb
lods
or
dec
fs
or
cmp
inc
lods
nop
sub
xlat
dec
pushf
mov
adc
pop
pusha
test
xor
jle
out
sbb
mov
or
iretw
inc
movsb
sub
pop
cmp
inc
addr16
push
xchg
loope
mov
sub
jns
stos
outsb
adc
jno
xor
push
hlt
in
pop
icebp
push
lahf
pop
push
shll
mov
out
hlt
or
jbe
test
xor
mov
lds
int
je
ss
iret
push
inc
stos
mov
or
or
jp
push
mov
mov
cmp
adcb
test
iret
sub
lea
cmc
aaa
scas
mov
xchg
xor
sub
jg
lds
cmp
ds
add
mov
jecxz
or
dec
cltd
add
jo
mov
mov
inc
adc
mov
fwait
loope
hlt
lahf
in
pop
loope
inc
mov
rclb
pop
mov
fidivrs
icebp
xlat
pop
mov
xchg
pop
mov
mov
mov
sbb
add
add
mov
jo
push
xchg
dec
add
inc
shl
movl
and
aad
mov
mov
or
jle
add
xchg
adc
add
pop
add
add
or
cs
and
dec
sahf
lcall
popa
jmp
add
push
icebp
decl
mov
pop
and
add
or
js
fildll
xlat
sti
int
add
test
add
lea
aam
dec
nop
jne
xchg
add
xor
and
test
and
ret
cmp
mov
pop
sbb
add
add
xor
inc
jmp
push
lret
scas
mov
add
push
sbb
es
addr16
jle
stc
and
xchg
add
sub
scas
cmp
ljmp
incl
fildll
add
out
call
cli
mov
pop
inc
inc
mov
add
mov
lea
push
dec
fstl
push
mov
add
lea
and
or
adc
push
repnz
ljmp
enter
xchg
push
add
aad
jb
ffreep
mov
hlt
scas
adc
nop
xor
sbb
inc
scas
xchg
call
call
icebp
out
clc
loopne
das
xchg
mov
nop
std
add
and
test
incl
push
insl
mov
add
jg
ljmp
lcall
int3
add
jo
sar
call
and
cmp
push
cmp
ljmp
cmc
add
hlt
mov
ret
push
inc
push
cwtl
repnz
adc
mov
push
ret
lock
jg
mov
mov
aam
std
pop
rolb
mov
dec
psubusw
loope
sbb
pushf
add
inc
inc
inc
add
mov
push
mov
shrb
ret
add
or
icebp
push
cs
scas
das
loope
sub
mov
rolb
lds
in
lods
push
add
sub
pop
cmp
icebp
add
sar
call
xor
pushf
loope
imul
sbb
fldenv
xor
cmpsl
add
jmp
cld
int
xor
dec
add
hlt
mov
jp
or
daa
add
rcll
daa
or
push
or
dec
xchg
fcmovne
adc
inc
push
sahf
or
in
mov
cmp
or
data16
clc
push
mov
leave
adc
xor
aam
jge
xchg
inc
mov
inc
and
add
shl
hlt
dec
hlt
sbb
movsb
scas
clc
push
cmp
jb
xchg
test
push
pushf
mov
sbb
adcw
call
mov
pop
rclb
les
out
add
adc
lods
lods
xchg
add
adc
mov
mov
push
or
pop
jbe
sbb
dec
inc
push
ret
orb
and
fstp
or
out
mov
add
and
dec
int
sbb
fs
dec
xor
or
mov
cld
repnz
adc
icebp
dec
cmpb
rolb
lret
cmpb
jo
in
call
mov
clc
xchg
shl
push
push
push
rol
fdivs
mov
cwtl
add
mov
cmp
pusha
sub
ret
outsb
sub
bound
jge
call
mov
add
inc
aam
adc
rolb
nop
xor
sahf
add
into
shr
loopne
xor
push
js
loope
lret
rcrb
and
loope
mov
fistpl
add
aam
or
rcll
je
pushf
repnz
and
jecxz
scas
add
push
and
jmp
aad
neg
add
sub
hlt
adc
call
jmp
inc
fnstsw
call
adc
add
incl
ret
and
fs
or
nop
in
mov
adc
jge
and
repnz
jecxz
and
jnp
add
jns
mov
lcall
and
add
and
jge
mov
or
test
inc
clc
addr16
cmp
std
xchg
je
nop
loope
push
add
cmpsb
xchg
xchg
lret
loopne
cmpl
fdivl
call
mov
push
add
test
std
dec
jmp
push
test
mov
mov
insl
or
mov
push
sti
inc
adc
inc
push
sub
inc
xchg
add
call
aam
lcall
xchg
fcmovnb
inc
clc
imulb
je
loopne
lret
or
mov
dec
push
cmc
pushl
cltd
add
and
cmp
lahf
cmp
mov
in
add
ja
add
jne
out
sbbb
cmpsl
les
call
ret
cltd
pop
lds
cli
movsl
dec
xchg
pop
add
jmp
xchg
pop
loopne
or
jl
movl
out
cmp
test
pop
shrb
test
push
push
addb
addr16
cmc
jp
test
pop
add
orb
fimull
mov
jmp
imul
repnz
mov
scas
sarl
cmpl
ret
xor
nop
inc
and
fimull
outsl
push
fbld
mov
push
mov
or
push
pop
ja
cmp
xor
cli
decb
add
xchg
insl
add
insl
fmuls
and
mov
and
in
movsl
out
mov
and
adc
lods
cs
push
shrb
add
cs
rcll
pop
and
in
daa
and
add
stos
sbb
leave
fsubs
jp
xchg
mov
add
lahf
add
arpl
or
sub
and
cmp
adc
push
cmpsl
cs
push
js
sti
inc
or
mov
aaa
test
test
sub
inc
sbbb
inc
data16
insl
sahf
mov
negl
test
mov
insb
or
lahf
testb
jmp
sbbl
mov
pop
mov
fbld
testl
adc
pop
xor
ljmp
ret
and
and
imull
jp
sub
aas
add
cmpb
mov
add
fcoml
sahf
jo
sbb
fists
xor
sbb
out
pop
push
push
arpl
fmuls
loope
les
mov
push
mov
fsubrl
push
sbbb
sti
cmpb
push
stos
ljmp
scas
xchg
pop
sbb
adc
push
xchg
sar
lea
mov
inc
xor
mov
loopne
add
mov
xchg
stc
ja
repz
mov
jecxz
mov
add
test
push
adc
in
dec
xchg
aaa
add
mov
add
test
pop
inc
push
ss
fsub
ret
fsubl
shlb
add
sbb
addb
or
and
xor
xor
outsl
dec
sbb
imul
or
pushf
xor
mov
in
cmp
leave
js
inc
push
pop
lods
mov
enter
sarl
sarl
stc
inc
pop
mov
fstl
push
add
cld
js
and
dec
ljmp
mov
mov
int3
or
js
movsl
stos
sbb
adc
call
aad
pop
mov
adc
scas
push
adc
dec
ljmp
out
adc
jae
pop
xchg
sbb
ret
dec
xor
popa
stc
sub
mul
mov
adc
hlt
push
repz
xchg
scas
rep
ds
dec
inc
leave
hlt
or
dec
mov
sbb
int
imul
mov
cli
mov
pop
loope
lret
lret
scas
mov
dec
cmp
sbb
add
cmp
xchg
lock
dec
xor
add
pop
jp
testb
add
xchg
mov
sbb
repz
punpckhbw
data16
jle
pop
mov
sbb
mov
daa
aas
adc
mov
nop
cmp
xchg
push
iret
sbb
pop
cs
mov
es
daa
pop
scas
mov
and
mov
push
clc
ljmp
or
xor
pop
fisubs
sarb
cmp
jo
stos
xor
test
xor
loop
lcall
lahf
test
or
scas
inc
sub
xchg
cmp
stos
orl
test
fadds
add
jo
jns
mov
in
in
enter
push
mov
sahf
jmp
push
jb
adc
ret
jle
push
or
loopne
sub
repnz
cmc
xchg
jo
cwtl
inc
push
arpl
xchg
push
lret
test
lret
incl
xchg
sar
push
stos
sub
add
jne
into
loop
or
fbld
mov
xchg
add
xchg
mov
push
addr16
pop
ljmp
mov
mov
add
mov
pop
das
incl
fistl
cld
pop
out
enter
loop
out
or
out
inc
push
add
dec
inc
sahf
add
push
mov
outsb
add
aam
mov
pop
mov
or
ret
lock
inc
xor
loope
xchg
and
into
stos
inc
sub
inc
cmpsb
inc
mov
adc
mov
mov
test
dec
push
shll
jl
mov
jg
or
sub
and
xchg
mov
rorb
lret
or
and
stos
xchg
sbb
or
add
call
je
mov
or
mov
jnp
add
les
push
daa
adc
leave
inc
xorl
rorl
push
add
aam
cltd
cmp
addb
adc
xor
mov
mov
movsb
mov
pushf
rorl
xor
mov
or
sub
ret
inc
lds
je
push
adc
or
gs
sub
or
sbb
das
adc
ror
add
xor
mov
cmp
inc
cmpb
xor
jno
jp
les
icebp
mov
add
xor
movsb
loop
push
outsb
lcall
adc
jnp
xchg
pop
fisubrl
sbb
mov
dec
subb
add
add
and
sbb
and
push
inc
xchg
xlat
outsl
or
fiadds
shrb
and
sar
sahf
dec
test
inc
test
push
lods
and
mov
mov
adc
fwait
sbb
cmp
mov
push
shrb
cmp
js
fists
es
dec
pushf
dec
cmpb
lret
sub
push
icebp
push
andl
and
xchg
mov
mov
inc
bound
ljmp
lods
sub
pop
sahf
mov
mov
shll
pop
cli
push
stos
sbb
repz
lret
shlb
and
add
cmpsl
test
inc
in
and
cmpsb
push
cmp
mov
pop
or
std
daa
insl
test
inc
imul
cmpsb
faddl
lods
adc
dec
jl
add
jnp
cmovne
rol
pop
pop
jp
cmp
pop
call
inc
es
insl
mov
clc
mov
outsl
out
sub
xchg
jp
popa
xor
nop
scas
adc
rcrl
xor
scas
push
outsb
cmp
aad
lods
jge
inc
cli
add
ret
nop
push
mov
jle
adc
out
mov
jp
xchg
aam
pop
sbb
sub
mov
pop
xchg
in
mov
inc
loop
sub
enter
ja
sub
ja
add
lds
stos
mov
and
push
mov
mov
ds
adc
int3
pop
fs
dec
ljmp
jl
fwait
sub
int3
nop
push
adc
and
ja
out
mov
push
dec
orl
fyl2xp1
mov
daa
inc
mov
test
cmp
mov
rorl
jo
push
scas
xor
insb
mov
mull
mov
mov
fcmovnb
jo
add
add
in
jb
pop
mov
hlt
movsl
push
xor
out
sub
scas
adc
pop
sbb
out
dec
xor
add
fnstsw
std
add
nopl
mov
push
lock
pop
fmuls
shrb
mov
mov
outsl
ja
push
and
bound
inc
jecxz
add
cs
cmp
pusha
pusha
popf
loopne
repnz
jnp
adc
adc
js
lods
pop
jne
lret
pop
and
push
or
rorl
jg
mov
pop
or
testl
mov
lods
ljmp
or
shr
or
mov
and
jecxz
and
pop
push
shlb
xorl
jno
cmp
mov
std
out
sarl
pushf
or
in
fwait
mov
dec
mov
inc
sbb
jno
fadd
add
xlat
test
decl
rcll
aas
and
clc
decb
ds
ret
test
pop
ret
mov
or
lahf
pop
jno
lahf
ja
add
mov
in
or
xor
rclb
dec
inc
sbbl
or
fsub
mov
cmpsl
cmp
ret
mov
push
xor
lea
sar
xor
out
fidivl
pop
incl
fdivl
scas
repz
clc
addr16
test
cmp
xchg
imul
lea
lods
sub
dec
or
jecxz
icebp
test
mov
push
lock
push
sbb
push
and
adcl
dec
negl
jecxz
mov
pop
pop
sbb
lea
mov
push
mov
lods
dec
loopne
test
repnz
and
icebp
ss
xor
imul
push
sbb
js
js
es
shlb
lods
mov
fidivrl
icebp
sbb
hlt
adc
arpl
jl
add
mov
or
mov
jbe
or
mov
sarb
imul
orb
loop
stos
lret
xchg
clc
in
mov
scas
add
cmp
fadd
sbb
add
pusha
popf
xor
sbb
in
mov
or
cwtl
mov
pop
cmp
and
movsl
inc
xchg
xor
std
testb
xor
push
pop
and
jb
mov
push
sahf
mov
cli
pushl
add
lods
mov
inc
xor
dec
pop
adc
xchg
add
xor
movsl
xchg
or
sbb
push
rcr
clc
dec
inc
dec
rdtsc
adc
and
dec
dec
adc
sbb
xchg
xchg
rcl
test
jecxz
mov
cmp
mov
adc
mov
aad
aam
push
iret
pushf
outsl
insb
xchg
sub
lcall
dec
jp
jecxz
pop
in
imulb
push
mov
das
mov
and
add
cs
les
pop
inc
push
cltd
push
int
sbb
push
mov
aas
aam
adc
lds
inc
xchg
add
jo
jp
addb
or
mov
mov
and
popf
aam
cmpsb
cmp
stos
sbb
mov
or
das
roll
not
cmp
mov
dec
leave
das
sub
cmpl
xor
imul
pcmpeqb
add
adc
mov
dec
fwait
lahf
or
jecxz
add
xor
lcall
sub
scas
fdivrs
mov
xchg
add
movntq
pop
pop
mov
cmp
int
or
push
loope
adc
sub
mov
sbb
mov
cmp
jge
and
std
rcl
fimuls
dec
lods
or
aas
test
aas
subb
neg
adc
test
mov
int
inc
mov
stos
js
cli
icebp
into
xor
add
push
in
dec
pusha
jae
add
pop
push
notl
sub
lock
sub
outsl
jb
push
inc
imul
mov
inc
lock
mov
sbb
push
out
hlt
mov
rol
movsb
stos
loopne
into
push
mov
or
push
add
in
pop
sbb
mov
test
add
xor
pop
xchg
sub
and
dec
add
add
push
cld
pop
pop
loopne
push
rorl
test
int3
xor
ljmp
jnp
sbbb
mov
scas
or
pop
push
mul
push
mov
mov
outsl
inc
testl
cwtl
inc
fdivs
test
repnz
inc
je
pop
sbb
sub
fcoms
in
int
inc
js
push
xchg
test
jg
pop
in
mov
push
pusha
add
push
mov
cld
les
jbe
data16
imul
add
popa
jns
int3
adc
xchg
adc
fdivs
dec
sbb
into
popf
pop
cld
movsl
sub
adc
mov
filds
jl
repnz
cltd
sbb
lds
xor
rcr
dec
push
stos
out
pop
into
or
cwtl
or
xchg
leave
sbbb
xor
add
pop
sbb
ret
and
dec
adc
jge
jecxz
jnp
ret
inc
xchg
xor
int3
mov
mov
daa
fs
inc
popa
inc
add
int3
push
inc
add
and
loopne
imul
stc
rcr
xor
xorb
add
or
pop
clc
leave
movsl
loop
dec
adc
push
mov
mov
cltd
jne
int3
xchg
mov
sbb
aam
or
jg
push
pop
cltd
and
cld
shr
sbb
add
add
hlt
call
jae
and
or
xchg
enter
cmp
pop
ss
or
mov
sbb
xlat
and
and
and
cli
pushl
test
mov
arpl
inc
mov
js
loop
test
repnz
sti
shll
rcrl
and
cli
pop
dec
sbb
add
lods
sbb
sbb
sub
xchg
inc
adcb
call
cmp
push
mov
or
xor
in
cmp
clc
mov
or
loopne
inc
call
ja
mov
or
xor
push
iret
push
ljmp
fldenv
mov
repnz
pop
shrl
sbb
push
movsl
fbld
sbbb
mov
fists
fiaddl
in
pop
lods
xor
push
mov
std
fldl
jno
scas
int3
or
jg
sbb
mov
and
dec
mov
outsl
cmc
mov
sub
imul
pop
loop
jmp
call
test
imul
lret
neg
mov
or
inc
int3
inc
cmpl
or
mov
and
int
dec
add
inc
mov
pop
inc
test
std
fbstp
xor
adc
into
aam
sarb
incl
test
int
push
addl
mov
leave
mov
cli
outsl
movsl
add
imul
subl
push
push
push
ret
jno
xor
pop
gs
pop
mov
cld
mov
jle
lcall
xor
aad
add
dec
stos
dec
je
mov
jmp
insb
lods
gs
fucomip
in
subb
shrb
jle
inc
push
fs
jno
int3
js
ret
inc
inc
popl
inc
and
ror
ja
push
lods
mov
jge
jae
pusha
xorl
jo
adc
pop
or
cmp
aaa
push
pushl
add
inc
adc
lret
adc
lods
sbb
mov
sahf
mov
add
xchg
daa
shrb
adcb
das
ljmp
add
lret
dec
mov
mov
cmpb
pop
bound
clc
out
cmp
dec
sub
ret
test
xor
jl
andl
mov
mov
jmp
inc
cmp
lret
dec
sub
es
or
outsl
ss
push
cmp
mov
jbe
adc
xchg
dec
icebp
and
call
or
add
pushf
xor
add
out
mov
pop
and
mov
cmc
andb
rorl
test
cmp
mov
jbe
jo
xlat
fsubrs
xor
sti
outsl
xor
add
mov
loop
pop
pop
cwtl
arpl
mov
add
mov
enter
jo
add
dec
enter
push
mov
call
xchg
and
xchg
mov
add
das
cwtl
lds
push
mov
add
sub
dec
pop
pop
jmp
or
add
test
lahf
lock
cli
and
add
adc
xor
aas
lcall
mov
adc
mov
push
push
sub
mov
mov
mov
decb
push
in
daa
ret
dec
ljmp
xchg
mov
cmp
xor
add
or
scas
dec
cmp
outsl
inc
mov
push
leave
icebp
or
mov
das
add
roll
test
icebp
add
push
pop
mov
fs
and
cmp
gs
adc
movb
in
pop
sub
add
add
or
fwait
add
icebp
shlw
iret
mov
pop
out
or
ljmp
bnd
shrl
fwait
in
jo
mov
ja
xor
popl
pop
repz
cli
dec
mov
add
add
daa
sbb
sbbb
ljmp
pop
sbb
add
cmp
jmp
insl
jbe
in
clc
push
or
daa
inc
lock
cld
sbb
fistpl
sbb
fld
add
clc
repnz
pusha
bound
dec
dec
push
jbe
jo
mov
fcoml
sbb
mov
jecxz
pop
mov
add
fildl
xchg
mov
in
push
mov
adc
and
sbb
push
ss
cli
or
xor
mov
call
push
lock
rcrb
pop
add
jns
jno
xor
dec
inc
and
in
xchg
add
inc
xor
push
jge
xchg
xchg
xchg
sub
popf
push
addb
sbbb
dec
and
in
or
mov
or
add
in
orl
jl
mov
mov
fistps
movsl
xchg
sub
movsb
mov
lcall
andb
sub
xor
xor
outsb
lock
popa
sbb
lcall
mov
inc
push
sbbl
rcrb
lock
ret
cmp
cmp
or
add
adcl
sub
loopne,pt
cltd
repnz
sub
pop
cwtl
icebp
xchg
fdivr
inc
les
add
cmpsb
hlt
or
xor
inc
xlat
adc
jg
lcall
outsl
in
mov
imul
jnp
fwait
or
sub
jg
mov
aad
add
call
pop
and
pushf
les
push
fbstp
mov
ljmp
mov
mov
clc
inc
dec
mov
xor
daa
sbb
test
shll
adc
mov
mov
and
cmp
sub
inc
or
lea
mov
pop
xchg
sub
adc
mov
mov
loope
cmp
test
sbb
pop
inc
scas
call
out
test
stos
out
ficomps
adcl
ljmp
rclb
popa
cmc
push
stc
icebp
push
add
in
add
push
add
pop
dec
cmp
dec
loopne
and
or
sub
cmpsb
loope
or
adc
push
fisubrl
push
push
add
loopne
ljmp
bound
add
dec
cmp
ficoml
mov
in
mov
or
sub
add
loopne
faddl
jle
mov
lret
pop
adc
or
xor
test
pop
adc
push
cmp
and
sub
inc
je
or
pop
lcall
rorb
in
jbe
test
jmp
jg
sub
push
sbb
cmpsl
hlt
push
cld
xchg
jge
lret
cld
out
clc
push
loope
pop
or
dec
loopne
add
dec
lret
add
push
push
shl
sbb
dec
test
adc
push
ret
mov
mov
dec
sub
jecxz
push
sub
adc
insl
push
je
rcrb
jg
cmp
outsl
pop
and
jno
mov
jbe
mov
vpshuflw
int3
hlt
pop
movsb
sub
stc
or
cmp
aaa
push
pop
testl
mov
add
movsl
stc
cli
sub
lahf
xchg
aaa
adc
pusha
pop
pop
aam
push
or
pop
out
sbb
and
mov
pop
mov
mov
stos
ja
xor
jmp
push
and
shll
sbb
pop
mov
cmp
jb
bnd
pop
adc
loope
xchg
sub
inc
int3
or
mov
jmp
jae
add
push
mov
xchg
cmp
arpl
push
mov
rcl
popf
add
and
mov
fwait
push
popf
add
lret
or
in
daa
js
dec
aad
mov
hlt
add
enter
test
pop
hlt
aas
pusha
stos
mov
push
hlt
push
push
repz
clc
outsl
rolb
aas
xchg
adc
push
aad
add
mov
sub
dec
xor
xchg
add
xchg
push
xor
loopne
adc
xor
or
dec
xchg
sti
push
cmp
adc
or
inc
rcrb
mov
repnz
hlt
add
pop
rcrl
pop
inc
lods
shrl
lock
xchg
xor
shll
xor
inc
add
pushf
sub
popa
adc
sar
jmp
mov
into
push
fs
xchg
inc
mov
mov
add
das
adc
lret
cli
mov
fimull
jns
sbb
add
add
lods
outsl
lea
dec
cmpl
popa
lahf
adc
shlb
mov
jg
test
xchg
into
adc
mov
fnstsw
add
mov
fistpll
pop
in
adc
sub
jg
loopne
arpl
xor
jae
and
lret
mov
pop
add
sub
pop
or
shll
clc
jg
mov
jbe
enter
cmpsl
pop
or
jmp
lret
jp
add
dec
dec
mov
adc
inc
push
dec
xchg
es
cmpsl
mov
add
adc
fcomps
adc
int3
ljmp
icebp
push
lret
and
add
mov
or
mov
fs
es
push
jno
fs
sbb
es
and
dec
rcrb
nop
in
lods
stos
sbb
sbb
lcall
in
pop
fstpt
mov
movsb
bound
mov
and
lds
mov
add
ret
adc
jo
cmp
xor
jle
xlat
adc
jecxz
in
lds
leave
movsl
daa
push
stos
pop
sub
mov
flds
dec
mov
cld
filds
dec
test
sub
and
xor
xchg
lea
in
outsl
popa
add
mov
scas
lea
in
fadds
ljmp
pop
push
dec
add
ja
mov
add
imul
cmp
sub
mov
sub
mov
adc
sti
mov
popa
cmp
fucomp
sbb
dec
outsb
xor
add
and
ret
pop
rcll
jmp
call
xor
fists
sti
push
push
add
dec
xor
sahf
fdivrs
enter
lods
cmc
insl
sbb
mov
fldl
cld
repz
pop
pop
mov
sahf
leave
lret
mov
sub
cld
xor
inc
and
sub
fisubrs
adc
adc
xchg
dec
cld
pop
ljmp
add
scas
inc
std
pop
jbe
xchg
popa
jbe
sbb
repnz
cwtl
out
sbb
push
xor
xor
push
shlb
sbb
add
sahf
add
icebp
push
in
and
mov
pop
dec
xor
incl
insl
jne
push
mov
les
cmpsl
popa
pop
fimuls
pushf
fs
daa
repnz
push
icebp
iret
add
xchg
add
sub
decl
adc
cmovo
mul
cmp
push
mov
cld
push
mov
push
push
add
iret
jg
sub
out
mov
or
and
lea
mov
adc
mov
das
insb
jl
or
jl
push
push
outsl
notl
mov
sub
sbb
pop
mov
sub
sbb
and
test
dec
dec
jmp
inc
push
mov
mov
mov
jge
nop
dec
and
jg
fnstenv
xor
pop
cwtl
push
test
cmpsl
pop
mov
mov
pop
insb
adc
pop
xchg
xlat
mov
dec
jge
jg
es
inc
loope
stos
mov
cmp
cwtl
lock
jnp
inc
pop
sub
movsl
and
bound
jmp
push
push
lds
in
int3
pop
pop
push
mov
pop
cltd
push
testb
andb
fs
cmpsl
loopne
test
out
mov
out
pop
push
ret
sbb
push
int3
mov
dec
sub
or
pop
jl
add
add
pop
shl
xchg
call
ficompl
in
sub
mov
leave
and
rcrb
mov
sub
xor
sub
adc
jns
fsubr
out
or
test
out
inc
push
jg
add
mov
repnz
adc
icebp
mov
mov
cwtl
aad
orb
outsl
je
sbb
add
inc
pop
mov
outsb
adc
clc
adc
sub
fistpll
dec
xor
and
push
nop
add
icebp
mov
sbb
mov
leave
mov
adc
and
cld
sbb
inc
push
pop
xor
roll
add
inc
pop
and
xor
ficoms
scas
scas
dec
call
mov
jnp
add
adc
addr16
push
neg
sub
adc
mov
loope
es
movsl
jns
and
mov
outsl
test
inc
lret
lods
mov
jno
mov
jecxz
push
and
inc
mov
inc
cltd
add
xchg
test
pop
or
in
movb
push
ds
cmp
test
sub
mov
cmp
cwtl
outsb
aad
push
insl
lea
pushf
xor
fisttpll
cmpsl
jl
mov
dec
mov
xchg
lcall
mov
add
add
mov
test
mov
cmp
inc
mov
sub
mov
test
dec
ljmp
xor
call
cmp
and
lcall
rolb
fcoml
cmp
jmp
hlt
mov
mov
sub
push
push
rol
add
cmp
xchg
mov
mov
popf
add
mov
cmp
pop
push
xlat
xchg
loopne
dec
movsl
mov
jo
rorl
push
scas
jle
push
aad
test
push
clc
movsb
dec
and
das
adc
mov
js
pop
fstpt
out
out
cmpb
sub
fmuls
inc
das
sbb
das
fmull
cmp
mov
and
add
inc
aad
js
push
jns
addr16
mov
xlat
and
outsl
sub
lea
adc
sti
cltd
and
in
add
loopne
outsl
into
inc
add
aas
sahf
push
jae
mov
pop
or
xchg
mov
sub
js
mov
push
inc
and
adcl
pop
sbbl
xchg
lock
push
adc
insl
and
pop
and
sti
scas
add
test
lock
aaa
fistl
adc
loope
mov
cld
sub
gs
ficoms
dec
cld
rorb
decl
test
sbb
cmc
mov
xchg
adc
loope
pop
loopne
adc
das
sub
jg
mov
xorb
push
mov
test
in
cld
xor
lock
fistpll
lret
xor
mov
xor
dec
shlb
pusha
stc
hlt
mov
add
dec
lods
cmp
and
fistpll
push
mov
mov
or
into
out
sbb
mov
jg
xchg
shrb
xor
cmpsb
push
jbe
decl
add
xchg
mov
cli
mov
icebp
aaa
ficomps
ljmp
shr
mov
mov
mov
in
cs
lock
or
mov
dec
mov
cli
pop
pop
sbb
ret
sbb
jne
mov
mov
ljmp
mov
nop
out
jmp
push
daa
outsb
fbld
shlb
mov
inc
outsb
addr16
pushf
adc
jo
or
inc
out
mov
pop
inc
fwait
xchg
pop
mov
into
inc
arpl
sahf
and
ds
pop
or
or
and
dec
nop
fisubrs
xor
xchg
push
fistpll
dec
lret
push
inc
data16
rclb
mov
push
xchg
and
sarl
xchg
push
add
mov
xor
add
jmp
push
sbb
mov
mov
dec
inc
iret
add
inc
roll
insl
mov
enter
lcall
daa
or
std
jns
out
aaa
push
imul
add
inc
ret
and
das
mov
sbb
cmpsl
sti
add
das
inc
xchg
pop
sar
es
mov
cmp
cmp
jb
lea
sbb
cs
les
pop
mov
lea
and
outsb
cs
push
jp
mov
gs
add
scas
push
aaa
adc
lods
xor
mov
sub
sub
mov
test
addr16
das
mov
hlt
outsl
pop
outsl
and
lods
dec
push
in
out
adc
xchg
int3
mov
cmp
adc
das
repnz
sub
subb
jne
call
fadds
dec
adc
jnp
push
xor
hlt
lods
leave
jmp
sbb
sbb
aaa
jmp
movsl
out
add
mov
mov
mov
sbb
sub
xchg
mov
jg
adc
lds
daa
bound
mov
push
jecxz
or
adc
inc
test
jmp
or
mov
lods
pop
call
aaa
jmp
lods
add
inc
or
clc
aaa
jle
jo
sbb
xorl
shrl
or
testb
lods
jl
subb
addr16
xchg
sub
notl
dec
inc
add
mov
std
jb
pop
jns
fstps
rcrl
jg
adc
sbb
sbb
rol
or
shld
insl
mov
fxch
cmp
lret
cmpl
xchg
insl
imul
and
dec
mov
mov
mov
mov
xchg
aam
mov
clc
insl
arpl
mov
mov
and
mov
sti
and
add
fistpl
pusha
js
mov
cmpsl
nop
mov
mov
loope
pop
cltd
and
sahf
xor
pop
outsb
inc
jmp
mov
lea
jecxz
into
sbb
and
pop
imul
xchg
mov
push
pusha
es
fildll
lods
or
sbb
call
adc
in
lock
dec
mov
xor
dec
fwait
pop
and
movsl
jmp
repnz
add
in
add
add
in
push
into
sbb
fwait
adc
or
leave
mov
inc
lahf
mov
add
dec
push
test
push
fistpl
jnp
inc
push
mov
xor
test
andb
lods
movsb
std
dec
div
cmp
dec
test
inc
cltd
leave
addr16
adc
mov
subb
scas
pop
push
mov
mov
and
jnp
clc
ret
or
push
jns
aas
add
das
push
lea
addl
loop
test
mov
sahf
stos
test
in
adc
fs
popf
sbb
fiaddl
js
inc
sbb
inc
sbb
or
jg
push
xchg
mov
in
push
push
insl
shlb
lea
pop
mov
inc
ret
roll
int
mov
clc
repz
pop
pop
adc
ljmp
lock
pop
and
inc
not
ret
sub
cwtl
sub
decb
jo
ljmp
and
sub
sbb
adcl
jo
nop
ret
jo
push
shrl
loope
into
rorl
cmp
xchg
adc
fcmovnb
sbb
cmpsb
cmp
and
sub
icebp
sub
outsb
outsl
push
rcrl
lds
add
mov
mov
xchg
inc
sbb
sbb
test
jge
notb
sub
pop
addr16
mov
incl
cmp
xchg
sub
dec
gs
insl
ds
fistpll
mov
xchg
mov
aas
inc
inc
dec
insl
ja
call
push
push
lahf
ss
mov
test
mov
sub
mov
and
scas
sbb
xor
lret
dec
or
pop
aaa
lock
mov
cmp
cmpsb
lret
pusha
mov
add
add
jo
test
xchg
rcrb
mov
test
shrl
outsb
pop
push
inc
push
cmp
sar
jno
mov
scas
jl
das
lahf
nop
stos
int3
jns
sub
inc
outsl
cld
das
fstpl
add
xchg
add
pusha
inc
pop
adc
pusha
decl
cli
mov
fwait
scas
push
pop
js
inc
jle
add
lret
pop
add
insl
loop
adc
mov
rcrb
push
pop
pushl
add
sub
push
lods
sahf
sbb
inc
or
mov
xchg
insl
push
sbb
dec
add
lods
xchg
cli
movsl
ficoml
mov
addl
fcomi
divb
out
std
repz
aaa
sbbb
pop
and
mov
addr16
jge
push
xor
clc
push
xchg
test
xchg
hlt
cmp
lea
push
jmp
xor
jnp
mov
xor
mov
add
mov
xor
jg
pushf
sub
neg
dec
stos
pop
popa
jmp
sbbl
rolb
mov
mov
jg
push
scas
ret
cld
cltd
aad
jo
mov
fdivrl
mov
test
enter
jg
arpl
xchg
loop
inc
das
jle
and
mov
inc
or
lock
out
outsl
push
and
pushf
jecxz
pop
shr
or
xchg
cmovb
add
adc
pop
push
jns
mov
sub
cwtl
mov
mov
sarb
xchg
dec
shrl
fisubrl
mov
dec
or
test
push
popa
xchg
and
fs
fildll
jb
dec
fists
clc
adc
insl
xor
pop
das
je
xchg
push
loopne
sbb
xchg
mov
mov
daa
js
jp
imul
mov
fs
call
sti
lahf
jae
jg
ficoms
das
jge
popa
cmc
dec
xchg
rclb
pusha
xchg
nop
cmp
mov
sbb
push
inc
xchg
push
int
xor
dec
stos
cli
dec
jne
mov
xchg
js
das
jl
cs
dec
adc
imul
in
pushl
adc
dec
add
dec
add
ja
pop
aas
mov
into
and
and
pop
jp
test
dec
cs
addl
shrb
add
push
sub
hlt
idivb
jmp
cmp
ds
sub
dec
xchg
ss
mov
fists
add
xchg
loopne
icebp
ret
pop
das
cld
notb
add
lcall
popf
jbe
popf
dec
and
pop
clc
in
pop
mov
nop
pop
pop
or
mov
sbb
sbb
mov
lods
inc
mov
mov
stc
stos
arpl
mov
fstp
xchg
ljmp
je
jo
xor
adc
xabort
cmpsl
mov
inc
das
sub
sbb
cltd
cmc
fwait
negb
lods
sbb
dec
jno
mov
rolb
xchg
jmp
adc
jecxz
jecxz
das
dec
mov
roll
jb
or
fsubr
movsl
pushf
push
repnz
rcll
mov
mov
inc
mov
mov
jo
stc
sub
and
jge
insb
fs
xlat
lahf
clc
cmp
xchg
and
mov
lea
xorl
pop
xor
mov
cmpl
sub
xor
inc
jne
lods
mov
dec
inc
or
lds
clc
inc
shlb
int3
jge
xor
rorb
add
arpl
cmpsb
sub
scas
int3
fs
pusha
cmp
pop
ljmp
daa
add
and
nop
or
push
hlt
adcl
jle
sarb
clc
outsb
add
pop
test
pop
sbb
or
and
shll
push
push
sbb
xor
lock
bound
jo
clc
fisttpl
shrb
sbb
aaa
pop
jl
mov
sbb
xchg
mov
or
push
outsl
inc
int3
adc
lea
or
addr16
inc
ljmp
sub
fistpll
je
sbb
sub
cmpsl
jecxz
int3
testl
int3
rclb
out
sbb
pop
or
inc
fisttps
inc
outsb
shrl
cs
lods
js
inc
cmp
mov
aam
or
sub
adc
ret
or
jb,pn
inc
insb
mov
jo
and
mov
mov
fwait
ss
adc
mov
daa
add
bound
sub
mov
jg
jne
into
or
pop
mov
pop
sbb
xchg
es
cld
lret
shrl
add
out
into
pop
inc
insb
or
loopne
or
inc
fbstp
negl
mov
push
mov
out
call
sbb
loopne
ds
add
xchg
hlt
mov
push
add
mov
sbb
roll
jo
inc
repnz
add
in
inc
dec
mov
sbb
jge
addr16
push
push
cmp
popa
shl
cltd
dec
test
enter
in
mov
cli
cltd
and
jl
adc
adc
decl
xor
and
mov
hlt
and
lods
orb
pop
mov
push
cmpsl
lods
dec
pop
jge
xchg
jnp
mull
inc
cmc
inc
jne
adcb
inc
mov
out
shl
les
sbb
or
test
in
out
adc
rcrb
js
mov
sbb
testl
jne
sbb
cmp
push
adc
and
inc
or
push
je
shlb
cwtl
test
ret
mov
adc
lods
pop
andl
add
dec
aaa
int3
mov
insb
jle
sub
and
cmp
sbb
aaa
add
and
dec
mov
cmp
pop
cmp
pusha
jl
fisttps
loopne
stc
pop
mov
sub
pop
outsb
or
jns
outsl
fbstp
andb
and
in
in
test
sbb
insb
or
sbb
pop
jo
das
mov
jnp
and
cmp
nop
cmpsl
inc
xlat
loop
xlat
jns
jg
jne
adc
incl
pop
and
add
call
dec
sub
aad
shll
repnz
outsl
mov
dec
sbb
xchg
jo
mov
cs
mov
mov
pop
push
lods
push
mov
aam
mov
les
gs
imul
insb
mov
and
loop
mov
add
sbb
test
mov
ret
push
mov
and
push
mov
es
xchg
sub
push
sti
adc
lret
es
gs
daa
fistps
bound
mov
addl
cmp
cmp
jmp
sub
jno
inc
xchg
cs
xorl
sbb
clc
push
loopne
jge
push
aam
addr16
test
sbbl
xor
out
je
pop
inc
mov
push
mov
xchg
stos
cmp
stos
xchg
repnz
pop
mov
xlat
das
andb
cld
fildll
lock
inc
or
hlt
mov
pop
clc
les
inc
jbe
sbb
inc
jg
mov
or
mov
cmp
mov
and
test
pop
andb
in
adc
mov
and
movb
pop
push
jno
add
adcl
test
mov
cmpsb
mov
mov
or
push
in
pop
call
cld
cmpsl
imul
sbb
ss
sbb
les
push
dec
pop
xor
push
mov
jle
add
push
xor
sbb
loopne
lods
add
js
adc
sbb
loopne
lret
test
mov
mov
les
andb
push
lret
fwait
sub
inc
aaa
mov
repz
sbb
cmp
dec
add
popa
and
xchg
xor
push
aam
inc
mov
and
cltd
fs
rcrb
mov
adc
mov
cld
xchg
sub
adc
lods
sub
push
mov
mov
loop
mov
and
dec
jmp
aaa
push
test
insb
xchg
add
mov
testb
jg
ljmp
adcb
add
stos
lret
lds
dec
mov
xorb
mov
dec
pushf
mov
inc
fs
lods
fimull
int3
fwait
mov
pop
sahf
fnsave
mov
add
cmp
cmpsb
pusha
shlb
add
jb
inc
jbe
filds
or
push
xor
enter
mov
fnstsw
imul
inc
sub
loope
pop
in
jecxz
and
jecxz
sahf
loopne
outsl
cmp
xor
xor
add
jg
sbb
cmp
and
add
cli
dec
xchg
xor
mov
jle
sbb
les
xchg
loop
aaa
cmp
add
xchg
sbb
fs
adc
and
mov
aad
or
mov
int3
popf
loope
aam
mov
cld
insl
xchg
or
push
adc
ds
aaa
jle
inc
xor
push
inc
or
cwtl
mov
push
dec
xchg
cmp
dec
sbb
jle
int3
dec
aam
iret
jecxz
inc
in
in
inc
fwait
shrb
movsb
jge
adc
mov
sbb
pushf
dec
cli
call
das
or
lahf
clc
cltd
mov
loope
jle
jae
movb
xlat
mov
fcomip
pop
inc
fs
push
push
jae
add
cmc
dec
sbb
pop
pop
movsl
test
daa
mov
xor
fistps
pop
fwait
lea
aaa
or
inc
dec
ret
bound
test
fbld
enter
mov
movsl
subb
inc
mov
mov
int3
mov
push
mov
inc
jp
in
lahf
jp
adc
repnz
bound
lods
mov
xor
mov
and
adc
cmp
sahf
loopne
lret
add
out
push
rorl
adc
pusha
xor
addl
xlat
inc
lods
push
dec
adc
and
and
push
pop
out
mov
and
xor
adc
andb
imul
pop
fwait
adc
pop
dec
pusha
inc
dec
inc
or
scas
adc
jl
lahf
pop
pop
mov
dec
aaa
sbb
clc
or
adc
jns
push
mov
xchg
jno
sarb
ljmp
int
and
jecxz
scas
loop
mov
lcall
inc
mov
daa
dec
stc
int3
mov
push
fnstsw
inc
sahf
dec
lret
f2xm1
and
cwtl
add
test
out
ss
and
ss
call
lock
insl
je
cmp
or
movups
sbb
or
mov
ja
sub
mov
cwtl
shlb
mov
or
ret
dec
clc
int
inc
mov
add
jae
rcrb
and
pop
ror
adc
adc
and
xor
pop
adc
repnz
insb
std
lea
lds
or
ljmp
orl
test
icebp
sub
and
imul
or
push
jecxz
adc
int3
clc
ffreep
jnp
xor
in
xchg
add
adc
xchg
scas
xor
aaa
stos
pop
mov
outsl
adc
loopne
or
sbb
mov
in
mov
push
outsl
gs
mov
mov
pop
clc
fnstsw
icebp
lret
shl
pop
rclb
mov
xchg
add
addr16
dec
cmp
fisttpll
and
sarl
xor
sar
pushl
push
push
adc
xchg
jecxz
movl
lahf
std
jg
add
pop
add
mov
ret
add
inc
lea
jecxz
mov
push
aaa
mov
outsb
mov
std
outsl
lcall
test
fistl
pushf
jecxz
inc
pop
in
sarl
mov
and
mov
push
das
test
sub
and
rorl
adc
sub
cmp
dec
adc
in
loopne
mov
mov
dec
jo
dec
mov
ss
push
rclb
sub
adc
push
lret
mov
sub
dec
pop
aam
jge
fildl
movsb
xor
std
sbb
mov
pop
loop
lret
inc
mov
cmpsb
and
pop
fadd
push
iret
jo
mov
rcr
pusha
push
xchg
nop
mov
xchg
fldenv
xchg
adc
mov
inc
aad
dec
sub
repz
add
push
cmp
dec
out
mov
pand
xchg
clc
xchg
sbb
stos
scas
andb
cmp
jp
fwait
mov
push
sbb
mov
push
pop
scas
orb
aaa
fmuls
inc
lret
add
nop
jecxz
push
clc
mov
data16
outsl
and
jb
iret
repnz
jbe
movsl
call
add
jnp
mov
cli
xchg
insb
in
lods
cmp
sbb
mov
and
or
xchg
pop
push
sub
and
mov
out
sbb
jne
in
aad
sti
push
fstpt
mov
mov
aaa
popa
adc
lds
dec
inc
jle
je
dec
jl
push
mov
repnz
sbb
sarl
push
loope
cmc
pop
icebp
xchg
daa
xor
adc
mov
lock
mov
dec
inc
mov
fdiv
inc
add
and
jns
arpl
nop
or
sub
ja
push
lock
fucomi
aam
movsl
jp
cmp
xor
sub
stos
and
int3
sbb
loop
imul
outsb
jne
aam
and
xorb
sar
ret
popa
addb
sub
pop
cmp
push
sbb
mov
jp
std
popl
das
and
nop
inc
and
sub
lock
mov
inc
sbb
loopne
xchg
and
push
lock
xor
dec
lods
jge
or
push
ljmp
in
and
push
jl
into
xchg
nop
enter
add
enter
inc
cli
inc
shll
push
cmp
pop
das
xchg
rclb
sbb
mov
gs
mov
std
xchg
inc
or
mov
data16
add
mov
mov
leave
push
xor
xchg
or
add
push
or
lret
cmp
push
or
mov
fsts
add
push
daa
mov
testl
fcmovne
pop
inc
xor
jmp
int3
dec
dec
fldenv
lret
cs
lds
xchg
fistps
les
push
xchg
test
inc
add
jg
sub
sub
and
and
mov
mov
xchg
aam
or
push
fadd
sbb
adc
dec
iret
push
rclb
jecxz
shlb
les
sbb
imul
add
mov
or
out
mov
sahf
push
push
pop
lock
inc
rorb
add
icebp
add
icebp
hlt
xor
xor
jne
inc
sarl
cmp
push
inc
and
rcll
js
push
add
enter
mov
push
pop
les
jne
pop
inc
adcl
cltd
sahf
sbbb
mov
xor
add
dec
push
lods
stc
je
sbb
pushf
pop
int3
adc
xchg
sub
aas
cld
enter
cmp
loopne
hlt
add
mov
cmp
jb
mov
xchg
enter
mov
loope
hlt
adc
adc
int3
ret
incb
in
inc
in
lcall
or
sub
xchg
mov
push
arpl
dec
sarl
icebp
dec
mov
pop
xor
mov
popf
add
sub
out
adc
mov
add
xchg
and
add
lret
adc
push
fdivs
sar
xchg
inc
adc
stos
sbb
mov
mov
sub
fsub
xor
dec
or
rorl
or
or
jns
out
ljmp
mov
add
stc
roll
in
dec
lea
hlt
cli
push
sub
cmp
mov
leave
and
adc
int3
arpl
loopne
jp
cmp
mov
call
mov
pop
fwait
sub
push
inc
inc
add
aas
clc
and
test
add
or
mov
adc
shll
adc
lods
xchg
popf
cmp
mov
cld
add
add
jl
das
inc
add
and
repz
popa
jae
add
jo
outsl
jmp
lock
push
sub
mov
lods
fmull
mov
loopne
icebp
test
es
in
test
lods
std
sub
dec
xlat
repnz
mov
mov
jg
das
mov
mov
sbb
dec
add
push
loopne
in
push
push
add
ljmp
bound
not
push
sbb
mov
iret
arpl
int
lods
and
daa
dec
adc
and
ja
and
mov
popl
push
cmp
sbb
inc
add
sbbb
and
jnp
add
lock
movsl
bound
lcall
mov
inc
sub
lret
pop
jo
mov
inc
and
xor
loope
out
loope,pn
ret
pop
push
ja
data16
rcll
fidivrs
cmc
add
addr16
inc
out
aad
inc
addb
sbb
pop
fistl
jl
das
mov
mov
mov
cmpsl
mov
mov
xchg
or
test
mov
xor
enter
sbb
outsl
sub
rorb
ret
sub
push
out
jns
pop
call
ss
inc
dec
das
aas
cmpsl
or
push
mov
mov
add
pop
mov
aam
int
into
popa
dec
add
test
insb
xor
orb
scas
push
or
sbb
push
fsubrs
js
outsl
jno
or
mov
adc
dec
aam
pop
fsub
sub
in
movsl
cltd
xor
add
bnd
subb
icebp
sub
test
xor
lock
insb
jb
inc
ret
sbb
call
fisttps
test
pusha
inc
fnstsw
mov
mov
stos
jne
stc
or
jb
jp
fists
fisttpl
pop
jne
pop
pop
mov
stos
add
lahf
cmp
sbb
and
xchg
xor
sbb
sbb
pusha
mov
push
adc
test
add
test
xchg
outsb
adc
popa
pop
inc
mov
push
mov
rorb
sbb
nop
loop
popf
arpl
mov
mov
movb
or
push
sbb
mov
adc
js
jmp
jns
add
inc
fisttpl
xor
mov
mov
mov
jae
jp
mov
stc
cli
mov
sbb
mov
mov
push
mov
dec
or
sbb
adc
cmp
mov
shll
sub
dec
test
ret
and
fimuls
jae
js
das
inc
and
outsl
enter
mov
andl
inc
inc
sbb
sub
adc
mov
sti
addb
add
mov
inc
out
inc
add
sbb
iret
cmp
push
push
mov
fbstp
dec
mov
movsl
or
in
cmpsb
mov
mov
ret
and
dec
psadbw
add
and
push
xor
or
dec
inc
mov
mov
outsb
movsl
add
lret
push
lret
cmpb
pop
pop
jb
and
lods
add
add
and
or
or
mov
adc
les
xchg
test
test
pop
push
int
cltd
ljmp
sub
sub
xor
cmp
add
fwait
push
adc
cmp
mov
push
inc
insl
jae
out
adc
add
in
fstps
xlat
inc
sub
push
mov
add
mov
fmul
fsubrs
nop
add
pop
or
mov
rcr
mov
stos
add
adc
call
pusha
mov
sub
sbb
mov
xbegin
sub
call
test
sbbl
push
rorl
ds
pop
xor
inc
ret
test
cmp
fisubl
aad
push
rcll
push
pop
aaa
cmp
mov
sub
jnp
xchg
lock
lods
push
repz
mov
in
mov
mov
mov
shll
inc
dec
add
rcr
loope
sub
mov
push
or
jp
aam
sub
inc
andb
or
js
nop
add
adc
fcoml
out
pop
or
mov
dec
fdivp
shll
rorb
fsubrl
and
clc
fisubl
stos
sbbb
in
repnz
pop
or
ret
pop
pop
cmp
sub
add
sub
push
cmc
add
sub
nop
sub
jb
dec
je
pop
jmp
test
jae
xchg
inc
mov
cld
add
cmc
jmp
sub
pop
insb
lock
mov
seto
or
sub
add
push
decb
fcmove
add
stos
jae
mov
ds
pop
out
sub
mov
into
sub
add
bound
mov
inc
nop
adc
adc
mov
push
lea
jmp
push
pop
fsubr
in
mov
outsb
and
sbb
orb
adc
push
test
bound
lods
fwait
xchg
dec
add
negl
fdivs
test
dec
shl
xor
sbb
repnz
repz
je
mov
dec
lock
mov
mov
data16
cs
and
adc
pop
push
xchg
mov
sbb
mov
loope
push
das
lock
jp
clc
inc
dec
int3
dec
sbb
sub
sbb
push
inc
mov
xor
pop
mov
mov
insl
popa
push
movl
ljmp
rcr
stc
cwtl
or
mov
hlt
jns
add
jno
pop
fists
bound
ror
movsb
ficomps
nop
in
and
jg
adc
mov
push
sti
push
adc
cmpsb
adc
cmp
push
push
or
adc
pop
cmc
ljmp
cmpsb
addr16
or
pusha
lock
push
subl
enter
pop
add
aaa
mov
adc
xor
inc
cmp
rolb
jecxz
dec
mov
adc
xchg
push
loopne
lods
xor
and
adc
or
mov
or
add
and
xor
xor
sbb
pusha
dec
in
lcall
jl
jge
add
add
movsl
and
jo
cbtw
pop
ffreep
addr16
roll
fists
and
mov
or
ljmp
sti
xchg
xchg
ljmp
aad
xor
popa
out
mov
sbb
aam
out
cmp
xor
and
icebp
sti
add
arpl
xor
mov
pop
pop
sbbb
ret
push
out
push
add
push
outsl
xlat
movb
push
gs
push
decl
inc
aad
or
push
xchg
out
adc
fildll
insl
inc
mov
sbb
and
xor
adc
mov
jo
rol
std
ret
mov
ljmp
sbb
add
jmp
stos
dec
dec
push
std
das
push
dec
sbb
js
inc
sti
inc
jmp
mov
mov
cmp
ss
dec
dec
jo
call
clc
or
dec
adc
test
clc
std
negb
dec
cmp
enter
movsb
add
loope
insl
icebp
lcall
stc
in
idivl
add
andps
das
xlat
idiv
and
and
into
add
or
out
pop
sbb
or
or
pop
jno
add
loope
in
lea
sub
mov
xor
fsubrs
add
jg
je
aas
mov
pushf
sbb
mov
sarb
ret
subb
xor
cld
mov
or
jmp
mov
pop
fcomps
adc
aad
js
fildll
cmp
jg
pop
lahf
mov
fnstcw
mov
js
decl
lock
test
adc
arpl
loope
xchg
outsl
arpl
jno
mov
pop
in
inc
jbe
cmp
pop
cli
lahf
mov
xor
repnz
or
and
mov
fstps
jo
adc
mov
subb
jecxz
int
roll
adc
out
gs
sub
daa
pop
and
pop
add
push
xor
or
daa
xchg
jns
jmp
call
and
cli
incl
aad
int3
push
shrl
shrl
aad
cmp
jmp
jg
fbstp
jno
je
add
add
lret
scas
clc
xchg
push
mov
xchg
shr
xlat
test
test
rclb
das
mov
aam
push
or
push
into
in
mov
dec
lods
mov
or
lret
lcall
jle
pop
shrb
das
push
dec
jno
lret
mov
mov
incb
shrb
mov
lcall
cs
out
inc
dec
bound
jge
vpshlw
stos
push
ljmp
cmp
push
fdiv
sbb
cmp
shlb
adc
incl
sub
out
mov
leave
mov
xchg
xchg
cmp
loop
xor
cli
mov
ja
inc
mov
inc
dec
mov
std
jae
pop
scas
test
sahf
dec
int3
jnp
test
shrb
cmp
xor
das
fwait
xor
mov
jl
test
push
sbb
xchg
inc
or
movsl
mov
push
sub
mov
ljmp
cld
jl
or
in
mov
frstor
xor
imul
not
sub
clc
mov
push
repz
pop
adc
inc
and
push
sbb
dec
lock
in
clc
or
fcmovnu
or
out
stc
loop
mov
insb
int3
and
movb
frstor
js
and
data16
pop
push
daa
inc
cmpb
enter
adc
cli
setbe
or
les
pop
mov
cli
add
push
aaa
mov
adc
adcb
mov
fwait
or
xlat
lods
push
lea
or
pop
lods
dec
mov
jl
push
pop
out
lahf
xlat
repz
mov
mov
nop
push
movsb
push
lods
in
aas
mov
inc
nop
inc
stos
repz
or
inc
iret
into
xorb
pop
daa
fidivrs
mov
stos
push
jp
jle
rcll
adc
mov
jnp
pop
mov
xchg
xchg
cmp
mov
mov
repz
add
mov
mov
insl
sbb
dec
mov
outsl
ss
jnp
daa
popl
in
lods
adc
xchg
adc
xchg
lcall
out
add
bound
mov
in
sub
lods
cld
cmp
inc
pushf
mov
adc
js
sbb
mov
stos
jle
mov
xor
sub
adc
pop
shrl
or
popf
pusha
scas
test
int3
adc
dec
cmp
shl
or
lea
in
push
icebp
rcrl
ljmp
inc
in
mov
push
adc
test
adc
add
ret
pop
les
shrb
xor
fcomps
adc
leave
jae
jge
test
mov
loop
ret
mov
insb
orb
and
adc
leave
push
mov
jnp
repnz
orb
xor
sbb
ja
pop
int3
sub
lea
add
flds
fsubs
adcb
and
lret
jbe
pop
cwtl
fldl
sar
ret
dec
lret
shll
rcrb
jbe
xor
fisubl
pusha
cmp
sub
ss
test
mov
or
mov
sbb
int
xchg
push
ljmp
jnp
mov
stos
test
adc
add
pop
pop
cmp
in
push
rclb
or
sub
scas
pop
inc
rclb
add
cli
idivl
add
hlt
hlt
jp
aaa
fsubs
mov
in
stos
jg
add
xor
jecxz
xchg
mov
sbb
sub
dec
mov
loop
push
and
ljmp
inc
add
lock
pop
dec
mov
inc
jnp
sub
in
lds
fistpll
push
testl
popa
mov
jecxz
iret
pop
arpl
shll
test
adc
inc
cwtl
xor
mov
daa
mov
aas
pop
movl
push
mov
jne
into
shlb
jl
add
and
fdivrl
sub
fcompp
push
mov
clc
push
sbb
lock
sub
push
cltd
add
arpl
add
add
mov
or
test
mov
cmpsl
and
stos
mov
adc
scas
jmp
or
popa
inc
push
adc
push
in
push
outsb
add
mov
adc
cmp
test
jge
cltd
push
call
cmp
push
mov
mov
in
and
rorb
jg
outsl
lock
pop
in
ljmp
adc
sbbb
push
mov
loope
adc
fadds
adc
cmpsb
fsubrp
pop
xchg
jo
fcmove
andb
aas
or
loop
cli
rcrl
mov
jecxz
rolb
test
lods
mov
push
fists
aaa
cmc
test
fcoms
adc
cmc
sbbl
or
and
inc
push
xor
pop
cli
aaa
mov
inc
and
cmp
dec
std
cld
adc
mov
std
pop
testb
jp
mov
inc
gs
push
sbb
adcb
outsb
aas
xchg
push
add
lcall
inc
lret
adcb
lods
adc
sbb
cli
mov
orb
imul
mov
and
lret
fstl
pop
test
pop
into
pop
inc
cwtl
ljmp
sbb
sub
add
loop
fistps
repz
mov
loopne
adc
repnz
xchg
aam
test
sbb
fimuls
lea
sti
xor
das
rcl
das
inc
insb
pop
xor
fwait
and
outsl
push
imul
inc
stc
pop
cmpsb
xorb
es
icebp
imul
call
or
lds
xchg
sub
inc
mov
push
imul
dec
xchg
pop
movsl
loopne
inc
loop
adc
cmpsb
pop
psrld
mov
mov
and
pop
jge
mov
ret
ss
sbb
aad
push
dec
sti
pop
add
mov
stos
test
js
scas
add
cmp
or
leave
icebp
test
and
sbb
fldt
mov
ss
and
cwtl
adc
mov
stos
mov
or
xchg
fistl
in
pusha
lret
push
into
lock
into
xchg
cwtl
mov
and
adc
adc
fstp
xchg
pop
xor
scas
popf
pop
mov
jbe
pushl
lods
gs
shrb
push
in
shlb
mov
loop
jle
into
hlt
lds
cmpsb
push
or
aaa
mov
inc
hlt
xchg
inc
out
push
adc
xor
repnz
or
out
aaa
clc
pop
add
dec
sbb
pop
jo
mov
fs
push
and
inc
addl
add
mov
sbb
xchg
or
mov
or
jae
clc
inc
lcall
imull
ljmp
and
or
out
mov
and
rcr
push
pop
gs
sti
cmpsb
outsb
out
mov
adc
ret
lods
cwtl
adc
add
add
xor
dec
stos
pusha
imul
daa
or
into
inc
int
clc
sbb
ds
adc
jecxz
sbb
fwait
add
inc
add
adc
adc
aad
mov
pop
stc
dec
push
std
mov
mov
call
cmpsb
sbb
inc
sbb
and
or
sbb
call
push
jbe
sub
sbb
jmp
or
test
scas
rorl
push
jns
mov
push
out
mov
out
mov
popa
inc
xor
test
ret
pop
cld
add
test
mov
pusha
rolb
and
xchg
inc
je
cmp
jle
add
hlt
leave
cmpb
cmp
add
mov
sbb
clc
adcb
jbe
sbb
mov
pop
adc
scas
mov
sbb
sbb
outsl
sbb
adc
es
or
imul
lds
and
xchg
mov
fwait
mov
out
push
out
push
xchg
jg
push
mov
fcoml
add
push
mov
in
cs
jbe
pop
cld
jns
rorl
xor
aad
test
imul
repz
pop
loope
jne
out
popf
mov
mov
sbb
and
ret
xlat
add
inc
xchg
js
outsl
push
xchg
bound
mov
sbbl
test
jae
mov
mov
mov
into
xor
lcall
push
jmp
inc
clc
jmp
adc
ret
xorb
push
vpextrw
lds
adc
shrb
call
jmp
arpl
out
adc
jo
sub
cld
mov
add
pop
sbbb
popa
iret
sbbb
and
and
lds
dec
jae
add
jecxz
pop
testl
add
ja
add
mov
jecxz
push
add
pop
cld
dec
sbb
inc
loope
pushf
sbb
push
mov
fcompl
incl
test
add
test
and
mov
arpl
cld
and
fisubs
jp
push
jne
inc
cmpsb
inc
jge
inc
das
icebp
inc
imul
inc
ds
jge
push
mov
loopne
inc
lods
mov
pop
mov
mov
and
ljmp
pop
add
push
add
inc
in
jg
inc
mov
into
sbb
mov
jns
mov
sub
adcb
stc
add
call
dec
js
pop
aaa
arpl
popa
jbe
cwtl
and
push
mov
inc
sarb
adc
rorl
add
pop
dec
cmpsl
sti
leave
lds
mov
xor
movsb
mov
lcall
pop
test
fisubl
fcmovnbe
xchg
into
mov
fidivrl
mov
mov
rclb
mov
scas
sub
cli
incl
bound
fucom
ret
and
popf
movsl
cli
adc
mov
sbb
fsubs
js
add
pop
add
lahf
inc
lahf
push
out
add
inc
pop
in
loop
into
out
test
cmp
scas
add
pop
nop
or
loop
xchg
cmp
roll
das
pusha
std
test
add
je
pop
ljmp
insl
push
jmp
test
mov
fistl
shrl
gs
pop
mov
jmp
adc
inc
movsl
sub
adc
outsl
in
movsl
mov
sbb
loopne
cld
ret
push
std
add
jmp
mov
stc
nop
lods
lcall
mov
int3
imul
outsl
in
xor
loop
inc
mov
jns
pop
imul
movsl
mov
sub
in
sbb
decl
or
gs
dec
and
inc
add
test
sti
incl
sub
dec
int3
add
and
sbb
pop
pop
bound
fistpl
push
insb
ret
cmp
sti
aas
loope
sub
jne
and
xchg
fmul
mov
lahf
sbb
cmp
push
call
pop
fsubl
ficoms
cltd
ret
dec
aam
outsb
mov
jmp
and
pushf
sub
jmp
adc
mov
or
das
cwtl
pop
fs
inc
pop
or
gs
push
mov
add
push
cld
loop
shrb
sbb
add
dec
loope
mov
clc
push
leave
scas
jb
hlt
adc
jp
icebp
ret
sahf
test
dec
sbb
inc
xchg
jg
mov
lea
outsb
insb
mulb
mov
or
mov
mov
adc
or
test
enter
ret
push
sbb
mov
fbstp
js
test
test
jle
jno
jo
push
push
jecxz
in
cmp
inc
imul
dec
mov
les
push
call
aad
jmp
add
mov
cmp
dec
daa
out
pop
mov
movsb
lods
lea
cmp
lds
mov
std
cli
lahf
add
pop
in
fistpll
xor
stc
pop
outsl
into
gs
lods
add
inc
sub
xchg
push
and
mov
pop
dec
push
stc
pop
fistpl
nop
pop
jp
insl
test
xor
lcall
mov
into
or
stos
xchg
sub
inc
and
cli
inc
inc
popf
jle
mov
xchg
fsubrp
fimuls
sub
inc
stos
xor
rorb
push
cld
jmp
lock
popf
rorb
jle
enter
insl
in
sti
jl
jg
add
mov
cmp
dec
jno
sub
mov
mov
shr
jbe
xor
lret
inc
aas
popa
mov
sub
loop
lret
adc
dec
ss
push
or
fst
push
or
jle
or
push
add
or
inc
mov
inc
or
jmp
jmp
push
mov
inc
mov
adc
push
xor
mov
mov
add
add
jb
cmpsl
notl
ja
hlt
and
insb
and
std
pushf
imul
sbb
push
sub
xchg
jmp
mov
mov
xor
mov
fwait
or
pop
push
inc
jmp
loopne
dec
adc
rorb
test
cmp
roll
push
or
push
lods
mov
or
js
hlt
mov
add
add
add
mov
sub
push
shlb
jo
push
enter
push
cltd
push
mov
add
xor
xchg
adc
inc
inc
inc
xor
mov
insl
int3
mov
sti
mov
dec
mov
add
adc
es
fisubrl
mov
adc
jbe
fcmovb
or
add
into
adc
sub
idivl
adc
cmp
or
sarb
cltd
cmc
adc
or
inc
jle
out
lds
sub
sub
cwtl
xchg
cld
sahf
push
movsl
push
add
or
imul
ljmp
fcompl
dec
sbb
mov
ret
mov
int3
mov
or
mul
sub
xchg
ja
sbb
test
adc
roll
cmp
sbb
lret
jg
inc
xlat
pop
test
jne
mov
sbb
fdivrs
test
xchg
dec
sbb
je
and
push
jge
mov
shll
xchg
sub
inc
dec
lret
test
rorl
cmp
and
clc
push
add
xchg
in
jecxz
andb
inc
dec
xorb
xchg
cmp
iret
or
push
aas
clc
jb
push
std
lahf
sub
imul
jo
and
add
movsl
inc
fcompl
icebp
adc
loop
push
call
or
lods
lds
push
dec
lret
cld
mov
mov
hlt
mov
xchg
out
cmpsb
add
adc
pop
ret
in
push
jmp
sbb
insl
cmpsb
rolb
es
adc
out
fstl
fldl
add
push
adc
adc
add
rolb
gs
adc
mov
adc
shlb
pop
push
iret
jnp
mov
xor
pop
inc
sub
ljmp
xor
xchg
sbb
xchg
test
hlt
jl
mov
movsb
js
dec
lods
cs
dec
sub
cld
bound
imul
jbe
stos
jp
push
pushf
add
sub
test
sbb
sbbl
jp
sbb
call
inc
sbb
sub
mov
insb
xor
inc
xor
xchg
stos
pmuludq
inc
push
push
cwtl
xchg
or
push
dec
loope
js
jg
das
in
test
and
insb
inc
pop
insb
cmc
sar
xor
xor
js
jb
and
insb
adc
ljmp
add
dec
sub
push
ret
mov
add
add
dec
shll
pop
loopne
xchg
or
into
jnp
lahf
adc
push
jge
sbb
bound
push
or
sub
adc
mov
aaa
xchg
jo
dec
es
jle
mov
rclb
in
inc
mov
pop
and
outsl
push
out
hlt
mov
push
mov
scas
push
mov
cmp
mov
sub
dec
inc
fcompl
aad
pop
cld
mov
lds
and
sub
dec
push
dec
shl
in
incl
sbb
xchg
mov
and
xchg
mov
and
dec
adc
or
mov
push
rcr
push
lcall
aas
mov
test
stos
or
sub
inc
addb
xor
pop
add
hlt
mov
sbb
add
adc
jg
mov
int3
and
pop
inc
pop
mov
loopne
orb
push
outsb
push
xchg
mov
cmc
test
rcrl
xor
addr16
daa
sti
stos
sub
test
rcrl
pop
andb
cmp
in
push
mov
xchg
pushf
push
and
inc
xor
outsb
loop
jb
cwtl
testb
mov
inc
cmp
pop
xchg
xchg
push
jle
mov
and
out
test
jle
sbb
pushf
lods
ret
xor
pusha
enter
jo
sub
dec
imul
arpl
inc
loop
xor
mov
sbb
pop
and
aam
mov
insb
mov
adc
es
push
enter
mov
xchg
fstl
inc
sub
dec
cltd
in
dec
pusha
mov
mov
roll
dec
push
ficoml
jbe
inc
jne
mov
cmp
adc
cwtl
scas
pop
data16
add
adcl
mov
ret
ret
mov
sbb
aam
mov
mov
outsl
call
pop
jne
sub
push
inc
inc
sub
sbb
cmc
mov
ret
pop
dec
inc
jge
pop
cmp
std
repnz
cli
adc
push
push
imul
mov
and
cmp
jecxz
add
mov
jge
shrb
mov
js
add
xchg
mov
jae
inc
fisttpl
out
mov
imul
ja
add
adc
inc
and
mov
sbb
mov
pop
js
mov
pop
xchg
sbb
push
and
push
std
movsl
xchg
je
dec
push
pop
stc
cli
outsl
jg
cli
push
pop
bound
stos
pop
popa
aas
or
rcrl
sub
xchg
mov
adc
lea
test
repnz
hlt
or
push
shll
and
dec
jno
sti
push
sub
cld
xor
jae
inc
pop
mov
leave
xchg
popf
mov
fildll
cmp
pop
push
ljmp
mov
dec
xor
popf
shll
jmp
popa
and
aaa
cmc
ret
lcall
mov
adc
scas
mov
sti
test
into
xchg
jnp
push
pop
insl
call
icebp
add
adc
ret
and
loopne
push
pop
clc
mov
cltd
out
or
xor
aam
shrb
call
repz
iret
mov
mov
dec
fildl
mov
push
jns
inc
fsubs
nop
stos
pop
mov
ljmp
and
mov
daa
je
lcall
add
xchg
fs
nop
push
pop
push
pop
cmp
in
or
mov
adc
shlb
rcr
test
xor
es
sbb
call
inc
out
adc
pop
movsl
add
inc
pop
and
cmp
jg
push
hlt
ljmp
jl
sbb
movsl
adc
push
cmp
xchg
addr16
jl
fists
adc
jno
push
cmp
lcall
mov
dec
leave
lods
daa
pushf
push
jg
roll
jle
mov
mov
or
add
int
int
xor
adc
dec
xor
mov
jno
imul
jns
ret
clc
roll
xor
sub
lock
inc
sub
in
fistps
cs
arpl
sbb
sub
shll
loopne
push
xor
mov
xlat
jo
out
inc
mov
inc
in
fsubr
bound
stos
jo
mov
sbb
mov
push
ss
outsb
jge
out
std
inc
or
outsb
xor
inc
mov
ret
lock
mov
mov
cmp
loope
ljmp
jno
mov
or
and
loopne
push
bound
xchg
leave
pushf
rcrl
push
lea
sub
or
jl
pop
lock
insb
out
test
test
incl
neg
nop
mov
xchg
stos
and
adcb
pusha
xor
mov
jl
push
fwait
add
mov
cmp
jle
aam
sub
and
out
stos
orb
or
push
cltd
mov
push
rcll
push
repz
mov
test
mov
inc
les
les
imul
sbb
add
sbb
push
and
jg
dec
dec
push
inc
and
sub
jb
push
int3
aaa
dec
push
mov
lea
lea
cmp
aam
xchg
aas
mov
sahf
sub
roll
cs
sub
push
data16
rorl
rorb
push
mov
add
adc
dec
adc
das
add
call
cmp
and
adc
or
add
xchg
cmp
and
xchg
jp
push
xor
in
jle
and
mov
adc
mov
enter
and
icebp
mov
hlt
push
push
xor
jmp
ds
icebp
push
or
or
xlat
sbb
push
xor
or
mov
aam
fisubrl
iret
inc
fs
rolb
sub
and
loope,pn
addr16
clc
push
inc
cmp
xor
mov
loopne
fdivl
xchg
jno
les
mov
xor
adc
or
jecxz
pop
and
clc
mov
add
test
pop
scas
cmp
hlt
mov
dec
push
jp
cld
test
subl
push
mov
aad
push
stos
pusha
iret
sub
adcl
cs
xchg
sbb
ljmp
mov
loopne
add
incl
out
mov
adc
or
shlb
mov
jnp
inc
push
nop
icebp
insb
ss
cmp
jne
mov
pusha
imul
mov
mov
imul
pop
push
lods
push
dec
imul
stc
jp
cmp
inc
push
pop
pusha
mov
mov
inc
xchg
fistpll
or
cmp
mov
stos
ljmp
inc
push
cmp
pop
jne
push
mov
insb
mov
sbb
js
ss
or
inc
add
and
push
push
loopne
in
sti
scas
aam
sub
adc
lods
adc
cmpl
lods
and
mov
cli
movsl
pusha
xor
jecxz
pusha
cmpsb
jmp
mov
xchg
sub
or
ret
mov
mov
dec
mov
aaa
call
fdivl
jbe
add
lods
xchg
fldl
sub
mov
xchg
push
xchg
push
cs
mov
loop
bound
dec
outsb
mov
ror
cmp
out
inc
repz
fists
lea
add
push
pusha
or
dec
fst
loop
int
js
daa
or
jb
movsb
or
aam
jae
push
popf
sbb
insl
fnsave
fcomip
scas
sub
mov
out
lahf
popa
pop
test
xchg
or
xchg
shlb
int
popa
cmpl
out
fwait
mov
mov
imul
icebp
xchg
xchg
mov
and
pusha
push
sbb
jne
inc
test
jecxz
cs
inc
cwtl
mov
sub
xchg
enter
incl
mov
xor
shll
push
dec
ret
sti
jno
inc
pop
adc
stos
jb
pop
mov
inc
inc
sub
inc
or
dec
test
jbe
fs
and
push
add
push
xor
test
add
push
bound
pop
rcrl
aaa
add
in
adc
inc
cmp
clc
cmp
outsl
push
cmp
nop
sub
and
xchg
es
dec
in
fistl
in
jo
mov
insb
sbb
mov
clc
mov
imul
insl
clc
fidivrl
xor
cmp
xor
fcomps
xchg
or
ljmp
xchg
jo
cltd
orb
fistps
repnz
and
sbb
loop
xor
mov
mov
sbb
loopne
sub
jg
icebp
outsl
adc
pop
mov
xchg
adc
dec
pusha
loope
sub
push
div
ds
mov
das
in
push
aas
sbb
out
mov
aam
testl
cld
xor
cld
outsb
pop
xchg
sub
mov
sbbl
xor
jb
xchg
add
ret
sbb
push
mov
cmp
or
movsl
sbb
mov
test
pop
sbb
ret
dec
sub
dec
push
and
mov
das
adc
neg
inc
and
or
fdivrs
jbe
lahf
cmp
sub
cs
mov
cmp
in
lea
cmp
adc
andl
lods
lcall
cmp
sti
and
mov
cmp
add
insb
and
xchg
leave
dec
fldt
insb
add
mov
jno
sub
inc
mov
and
mov
inc
jg
fldenv
xchg
and
mov
frstor
std
mulb
jne
lea
loop
sub
mov
push
push
aaa
push
fucomi
jmp
andb
pop
push
sbb
inc
imul
arpl
cmp
adc
out
add
push
mov
aam
sbb
add
and
push
aad
push
out
mov
jb
inc
jo
adc
shl
jmp
jg
pop
icebp
inc
mov
mov
xor
addr16
add
inc
mov
loop
and
add
add
aad
fistpll
rolb
add
addb
cmp
dec
rcrb
out
xchg
popf
cmp
mov
jno
test
mov
push
cmpb
fcomps
fcompl
call
adcb
add
mov
sti
roll
movsl
or
mov
inc
loopne
ror
mov
adc
sbb
jae
outsl
pop
js
and
pop
and
pop
add
es
stos
xchg
or
fisubrs
fs
mov
out
inc
es
jo
ljmp
xor
mov
outsl
mov
jne
jp
or
frndint
add
inc
inc
xchg
testl
mov
movb
into
and
or
fisubs
mov
fdivr
mov
adc
sub
push
hlt
sub
jns
pop
add
jecxz
push
out
aas
adc
jecxz
sbb
mov
push
jmp
jnp
shr
in
out
mov
xchg
fnstsw
push
stc
imulb
rolb
sbb
xchg
fmuls
jns
pop
icebp
mov
out
or
pop
mov
pop
cltd
and
outsl
mov
adc
mov
mov
lcall
fwait
fs
cmp
mov
or
xchg
mov
push
jo
cli
ljmp
leave
push
dec
fldenv
sub
adc
mov
sub
subb
je,pt
pop
js
mov
adcb
mov
cld
adc
rorl
mov
cltd
cmp
bnd
jmp
rcr
push
flds
scas
mov
out
dec
push
add
clc
and
cmp
ret
sbb
mov
cmp
pop
imul
add
jl
pop
push
fisttps
or
inc
rol
shlb
cmpsl
call
jo
sub
push
lahf
sbb
insb
daa
sub
leave
push
sti
xchg
dec
push
inc
addr16
jge
ja
rolb
push
ror
push
in
popa
nop
cmp
dec
data16
fsubr
idivb
and
dec
inc
add
or
daa
add
xchg
pop
cmp
adc
lock
sub
jmp
xor
in
dec
xor
std
out
jo
iret
das
inc
test
xchg
ret
mov
popf
inc
ret
in
mov
jns
fnclex
cmp
pop
or
push
xchg
nop
xor
inc
adc
icebp
lock
subb
pusha
add
mov
xor
and
fmull
sbb
clc
cmp
sub
mov
imul
jns
das
add
fcmovnu
mov
adc
ret
arpl
cwtl
sbb
movsl
or
mov
sbb
cmpb
in
push
add
fbstp
mov
cld
cmp
repnz
rorl
mov
fnstsw
sbb
outsb
mov
mov
or
imul
mov
lcall
imulb
std
push
cmp
pop
adc
addb
adc
cmc
add
loopne
ss
mov
sub
mov
and
aad
call
mov
jle
xchg
adcl
add
mov
add
push
adc
add
jl
push
dec
daa
mov
jmp
push
mov
loope
jns
nop
adc
insl
loope
pop
sub
mov
mov
ljmp
add
test
dec
out
pop
xchg
rcrl
add
in
std
stos
cwtl
scas
push
outsl
cld
mov
stc
into
inc
icebp
push
jg
rclb
inc
mov
sub
loope
mov
icebp
outsb
movsl
mov
js
inc
arpl
fdivr
incl
ror
push
xchg
pop
gs
pop
xchg
ds
ret
cmp
inc
icebp
mov
movsl
sbbl
rcl
fnstsw
shlb
ret
js
cmp
mov
insl
push
in
mov
jnp
bound
jle
mov
ret
pop
add
push
in
mov
cwtl
dec
fstpt
xor
jg
leave
adc
mov
mov
incl
andl
sub
mov
xor
push
incl
rcll
inc
out
div
adc
stc
shll
push
cmc
jecxz
pop
out
push
add
out
mov
push
mov
sub
mov
loope
es
call
cli
pop
jecxz
pop
fadd
push
das
test
inc
idiv
insl
jne
dec
pop
inc
movb
jecxz
leave
xor
mov
sbb
jae
mov
inc
dec
inc
ja
fs
or
stc
pop
inc
push
pop
popf
and
je
imul
push
dec
aam
out
clc
xchg
xchg
nop
scas
sbbl
sti
andl
fstpl
fisubs
or
add
pop
lret
aaa
fcmovb
jae
cmc
scas
sub
icebp
sub
jmp
loop
test
mov
cmpsb
dec
add
add
lea
imul
mov
push
lret
bt
mov
pop
dec
loop
nop
mov
loopne
dec
fnstenv
mov
inc
in
scas
das
cmc
rclb
mov
inc
xchg
mov
xchg
outsl
std
not
lock
mov
aam
andb
icebp
in
test
pushl
icebp
shll
and
int
sub
sarl
xchg
adc
add
mov
leave
and
insl
or
cmp
loope
jg
das
inc
xor
add
add
inc
cmp
add
jge
xor
addl
inc
jmp
pop
std
lcall
dec
test
and
sbb
push
push
sub
dec
rcll
inc
cmc
out
push
xchg
test
in
iret
inc
sbb
push
dec
popf
sub
test
xchg
jo
mov
movsl
pop
jg
test
dec
adcb
jnp
daa
and
jg
cmp
cmpb
rcll
mov
mov
iret
push
sbb
lods
loopne
add
lods
lcall
xchg
cmp
sbb
filds
sbb
popf
and
mov
fwait
xchg
test
mov
lock
inc
mov
lcall
pusha
cmp
xchg
jmp
jg
std
incl
xor
adc
push
inc
dec
mov
outsl
rclb
add
cmp
mov
cmp
xchg
sbb
das
repz
jg
jb
rorb
fldt
test
decl
test
cmp
wrmsr
lods
imull
scas
xchg
xchg
sub
push
cmp
rclb
cs
xor
loope
sti
outsl
push
inc
in
lret
mov
or
stos
or
mov
or
cs
mov
push
daa
xchg
cwtl
movsb
mov
dec
repz
push
lock
push
mov
shl
outsl
mov
loope
jnp
mov
movsb
and
mov
jb
adc
cmp
testb
xchg
dec
and
sbbb
in
popa
sub
xor
ret
in
js
add
sbb
xor
not
mov
mov
sahf
shlb
jae
mov
ret
jle
in
or
push
mov
cmp
sbb
clc
or
jl
movsl
mov
mov
jge
fmull
shrl
cmp
rclb
loop
mov
arpl
mov
mov
int
push
sarb
push
xchg
and
inc
out
inc
sub
das
adc
inc
cmp
popf
inc
ljmp
add
mov
mov
xchg
and
sub
mov
add
push
mov
mov
jp
insl
pop
push
bound
cmp
imulb
xchg
dec
push
lock
dec
push
and
incl
pop
inc
add
in
pop
xor
sub
popa
insb
xchg
mov
dec
int3
sbb
xchg
cwtl
xchg
jp
lret
dec
mov
push
data16
das
lods
dec
adc
lahf
xchg
push
mov
push
clc
rcrb
sub
popa
push
jl
sbb
iret
scas
inc
mov
add
or
mov
inc
push
pop
sahf
ja
or
cmpsb
xchg
sub
cli
addb
xor
dec
icebp
inc
xchg
lods
jg
out
icebp
or
lret
stos
push
clc
push
mov
movsl
fwait
in
outsl
incl
std
sahf
fisubrs
sub
stos
imul
mov
push
mov
sbb
jle
push
push
jp
xor
xchg
icebp
out
dec
imul
test
sbb
adc
or
xchg
push
sbb
jg
add
arpl
aas
aaa
push
pop
in
jae
bound
add
movsl
sub
int3
xchg
aaa
leave
xor
lds
sub
or
jo
dec
push
dec
adc
jo
decl
hlt
mov
out
mov
loopne
call
or
sbb
add
loop
adc
jge
sbb
add
push
pop
pop
mov
ficomps
out
ss
sub
inc
inc
insb
pop
adc
ljmp
je
repz
cwtl
in
iret
aas
out
or
shr
xor
adc
clc
adc
cmp
mov
mov
cmp
pop
aam
xor
lcall
add
sbb
pop
sahf
adc
mov
and
dec
in
push
sbb
xchg
adc
hlt
sbb
mov
push
mov
test
jo
mov
jg
xor
fisubrs
pop
prefetchwt1
test
inc
mov
sbb
test
add
sub
jne
dec
cmp
xchg
adc
pop
dec
push
out
push
out
lret
add
pop
movsl
dec
inc
pop
lds
add
xchg
push
addl
push
pop
jmp
and
sbbb
jp
out
cwtl
xorb
sub
int
je
push
push
jp
cmc
add
popf
add
and
dec
or
mov
xor
sub
push
loopne
adc
iret
sarb
add
rolb
js
jbe
sbb
push
loopne
adc
sbb
xchg
adc
mov
xchg
push
sub
mov
add
lock
xor
inc
popf
jno
ss
or
add
add
mov
add
push
cld
lods
jne
mov
add
jl
mov
dec
and
xchg
adc
mov
dec
je
adc
pop
push
fldl
sarl
out
and
pushf
jmp
cmp
sub
push
adc
addb
int
adc
in
movb
mov
and
xchg
loope
mov
mov
mov
mov
xor
jge
add
add
adc
fmuls
sub
dec
adc
cwtl
jge
cld
out
xchg
add
sbb
fimuls
add
shlb
mov
arpl
orb
adc
lods
dec
pop
cmpl
cmpsb
lahf
aam
jb
push
jl
addr16
mov
sarb
pop
movsl
sub
xor
fs
lds
pusha
jmp
or
and
insl
in
das
lock
lret
xchg
adc
sub
jge
sbb
call
mov
scas
ja
jno
orb
pop
jl
ss
inc
daa
pusha
push
loope
in
mov
push
loopne
pusha
inc
dec
in
rorb
or
out
cli
shll
add
sbb
mov
pop
call
mov
rcrb
adc
dec
push
or
pop
outsl
and
push
stc
rclb
cmp
insb
push
das
stos
sbb
jno
adc
sarb
sar
or
idivb
push
and
les
cld
sbb
push
dec
fsubp
adc
loopne
mov
dec
dec
or
mov
jo
incb
das
icebp
pop
imul
push
gs
mov
jg
test
mov
mov
aam
jmp
test
fnstsw
aaa
mov
dec
xlat
roll
add
cmp
adc
fcmovbe
ret
sbb
push
adc
cld
mov
loopne
xchg
add
push
push
mov
inc
and
xor
xlat
mov
xor
out
loopne
jno
pop
sub
pusha
xlat
clc
loopne
or
adc
and
out
leave
lcall
hlt
mov
jecxz
xor
pop
xchg
subb
pop
rclb
pop
clc
and
les
adc
adc
xor
sbb
and
pop
sbb
jbe
sub
mov
call
in
jbe
push
push
adc
mov
add
xchg
and
sub
jle
lret
scas
cltd
mov
xor
fs
shrl
inc
fadd
sub
xor
sub
mov
push
test
or
dec
repz
hlt
das
dec
imul
pop
loop
lcall
pop
pop
and
add
call
das
shlb
pop
mov
sub
fcomps
inc
stos
aas
adc
leave
fisubrs
popf
dec
pop
jl
mov
clc
loope
add
xchg
inc
mov
mov
pusha
js
std
or
cs
push
cld
outsb
push
fistpll
mov
test
cld
jp
nop
pop
loop
mov
jne
out
inc
jecxz
loop
ret
push
mov
cmp
sbb
pop
rcr
pop
jmp
fs
jmp
test
push
cli
or
sarb
add
mov
outsb
xor
adc
jp
or
out
push
mov
sbb
pop
cmp
inc
and
jge
out
inc
lret
push
pop
test
loop
loope
or
cmp
lcall
dec
test
aaa
dec
dec
insb
shlb
or
push
bound
je
adc
inc
fsub
pop
push
arpl
dec
popa
lds
push
and
adc
dec
les
fcoml
jno
push
jae
mov
in
lea
out
pop
push
sbb
pushf
push
jmp
inc
es
es
incl
jl
sub
xor
out
andb
cli
push
or
push
xor
out
jg
test
lcall
mov
sbb
add
out
fisubl
popf
jg
cmpsb
icebp
and
test
mov
out
faddl
inc
push
and
movsl
out
and
inc
iret
addr16
lds
pusha
inc
xchg
es
lcall
test
xchg
adc
btr
or
lds
pop
sbb
popa
fdivr
xchg
adc
jae
test
mov
lcall
lock
into
sbb
jecxz
dec
shrl
push
daa
pushf
adc
jo
sub
call
mov
jae
pushf
das
pusha
div
incl
cmpsl
int3
setb
repz
dec
out
mov
xchg
pop
xchg
mov
outsl
mov
test
lcall
mov
cmp
mov
shr
dec
lcall
movsl
cmp
pop
adc
adc
push
test
movsl
outsb
cmp
xor
and
incl
mov
out
add
xor
xor
or
dec
std
mov
or
and
mov
sahf
icebp
ljmp
sbb
add
cli
sbb
adc
mov
and
insl
out
inc
and
mov
mov
push
fwait
inc
cmc
dec
mov
pop
jae
xor
adc
jnp
mov
aad
xchg
aam
int3
pop
mov
mov
in
fs
sbb
lret
mov
pop
lret
mov
fnstcw
mov
sub
sub
or
jmp
cld
stos
orb
pop
aaa
add
es
dec
xor
or
inc
add
int3
fimuls
scas
out
test
es
adc
lock
fldcw
das
mov
mov
fdivrs
nop
push
adc
adc
inc
dec
pop
test
mov
inc
xadd
mov
cmpsl
mov
sti
pop
add
pop
and
mov
xchg
into
loopne
mov
add
rorb
jmp
or
fnstsw
mov
test
or
lea
xor
aad
pop
aas
push
xor
lock
loop
fwait
push
mov
insl
pop
mov
loop
in
mull
fcoml
lods
fwait
fwait
xchg
or
insl
lea
imul
es
jbe
or
cmp
add
inc
inc
mov
clc
lock
and
cmc
test
sbb
or
dec
test
mov
fistps
mov
jne
add
mov
lds
mov
xor
sahf
add
jecxz
int3
sub
movb
inc
stos
lds
or
sub
push
sub
mov
mov
test
insb
mov
mov
mov
add
aad
mov
lea
adc
jg
outsb
sub
sbb
xchg
ljmp
fdivrp
push
lds
inc
rcrb
lods
mov
add
mov
jnp
push
sbb
add
cmp
aaa
xor
hlt
sbb
fcmovbe
in
mov
jb
xchg
pop
clc
xchg
mov
sub
adc
mov
jg
scas
popf
jae
or
adc
sub
repnz
dec
sbb
mov
add
dec
aad
sbb
push
out
mov
push
jge
jmp
xorb
mov
or
pop
jl
iret
mov
scas
pop
inc
sti
fisttpll
inc
xor
or
or
push
push
sahf
fistps
jg
xchg
or
adc
jb
mov
xchg
shrl
dec
popl
and
mov
std
pop
push
test
pop
adc
out
push
or
sbb
xor
stc
sub
cmc
mov
outsl
gs
out
jmp
push
jl
es
xchg
test
adc
cwtl
cli
test
dec
movsl
insb
fiadds
pop
mov
movsb
xor
xchg
aad
lock
sub
test
orb
dec
push
pusha
pusha
test
outsb
cld
add
lcall
outsb
les
pop
icebp
mov
lret
lea
roll
sub
lea
or
dec
pop
add
jns
xchg
and
sbb
mov
adc
pop
add
sub
mov
xchg
xor
outsl
mov
cld
aaa
lods
jecxz
dec
sub
in
fwait
mov
in
ret
shl
or
pop
les
xor
hlt
push
xor
hlt
lods
negb
jge
insb
push
mov
lds
jo
pop
sti
push
rolb
push
push
cmp
add
not
test
jno
shll
ret
cwtl
xchg
sbb
add
je
test
cs
arpl
add
mov
inc
scas
rcrl
adc
insl
adc
and
sub
pop
lock
js
jg
jecxz
shr
clc
ret
add
inc
mov
test
stos
fistpll
in
iret
xorl
loopne
push
and
jne
ret
iret
popa
push
fstl
push
inc
xchg
lock
sahf
movsb
sub
lret
ret
or
push
pop
out
jb
popa
mov
add
push
jb
cmp
fisttpl
shll
xlat
xor
sub
movsl
fbstp
adc
mov
xor
adc
ja
adc
mov
jne
sbb
nop
mov
call
or
mov
mov
sbb
mov
fstl
sarb
jmp
jle
pop
push
pop
mov
xor
in
pushf
mov
lret
les
lods
inc
fisubrl
mov
xchg
xchg
sbb
add
shrb
push
fwait
mov
inc
jbe
in
mov
sarl
sbb
add
pop
inc
lahf
insl
js
jb
mov
mov
jl
mov
stos
adc
xchg
jnp
xchg
or
add
das
push
les
hlt
push
push
xor
fistl
add
sub
mov
dec
loopne
xchg
adc
mov
jo
push
add
mov
out
sbb
pop
icebp
fistps
mov
inc
je
add
pop
insl
add
lods
sbb
lea
cwtl
add
mov
adc
add
cld
movsl
jnp
movb
addl
inc
add
or
sbb
insl
out
fwait
dec
orb
xchg
stos
gs
jl
inc
push
lds
lret
aaa
adc
xchg
mov
fsts
jbe
repz
dec
ds
mov
adc
inc
jae
dec
mov
push
jge
lock
lcall
call
rorl
fimull
and
stc
mov
dec
add
mov
out
insb
rorb
adc
ret
ss
test
sbb
jno
fidivrs
js
push
outsl
pop
das
mov
fucomip
ss
xlat
lret
stos
jl
or
mov
je
loopne
sahf
repnz
mov
and
add
cltd
or
xchg
insl
cmpsl
pop
lock
push
fcoml
loope
cmpsl
in
fwait
int
lcall
lock
and
fs
push
out
push
sbb
shll
inc
loop
dec
adc
sbb
mov
cmp
ljmp
aad
rolb
mov
and
jb
stc
cmc
adc
xor
inc
sbb
cmpsb
or
in
or
pusha
add
push
adc
arpl
lock
andb
push
mov
cld
adc
push
mov
sbb
inc
inc
cmovne
xor
ja
or
mov
mov
mov
jno
test
inc
fistpll
add
adcb
add
lods
clc
daa
mov
and
mov
mov
jle
clc
adc
adc
test
lret
arpl
dec
mov
mov
adc
jp
inc
sbb
scas
repnz
stos
pop
pop
bound
aaa
je
jo
and
out
outsl
stos
pop
pop
jnp
cmpsl
sbb
aad
outsl
lock
jnp
insb
sub
sbb
pop
mov
clc
xchg
aad
decl
xchg
pop
int3
push
pop
lock
jns
mov
ja
insb
mov
test
rolb
test
mov
in
dec
xor
xchg
ja
pop
add
or
icebp
aad
call
stos
or
addb
aam
bound
xchg
lea
adc
or
mov
adc
int
mov
rcrl
lret
or
xchg
push
or
fstp
mov
push
and
mov
dec
push
xor
test
inc
mull
adc
aam
sbb
xor
and
sbb
out
cmc
add
dec
pop
mov
ljmp
add
pop
insl
subl
stc
fisubl
aaa
inc
outsl
lock
loop
sbb
inc
mov
push
cmc
inc
xchg
mov
outsb
adc
push
std
dec
lea
dec
daa
jb
push
jge
push
xor
mov
insb
mov
fs
xor
incb
add
sbb
aaa
cmp
in
insl
rclb
add
les
into
into
out
cs
outsl
sub
lods
orl
cmp
out
popf
or
outsl
rclb
push
popa
sbb
sbb
lods
enter
and
in
xchg
cmp
mov
lret
pop
sbb
dec
cmp
enter
scas
push
lcall
fnstenv
xor
sbb
xchg
call
dec
rsqrtps
sub
and
stc
adc
push
or
xor
roll
cli
mov
push
mov
outsb
cwtl
subb
ret
enter
mov
out
push
sti
add
rcrb
ja
and
mov
loop
pop
xor
sub
call
xlat
dec
and
mov
add
mov
add
ret
sub
cs
les
jle
loop
ss
test
pop
or
fsubs
jge
lds
cli
lret
jmp
cwtl
insl
add
es
pop
aam
push
and
cmc
mov
data16
fwait
xchg
jmp
xchg
jg
inc
push
adc
lods
popf
mov
and
and
add
jbe
adc
push
dec
or
mov
inc
mov
sub
lret
sub
mov
mov
push
sar
in
jg
sbb
hlt
xor
jmp
mov
shlb
adc
jg
hlt
mov
shll
cld
push
xor
sbbb
rcr
cmpsb
sbb
xchg
scas
push
loop
cmc
scas
mov
mov
adc
xchg
ret
xchg
fists
mov
je
inc
andb
mov
pusha
push
fstpt
cmp
mov
insb
sahf
orb
lock
ret
or
fimull
imul
cltd
rorl
stos
mov
jb
mov
bound
xabort
aad
mov
cmp
dec
lret
cli
sub
jg
mov
rorl
or
push
jmp
les
and
sub
cmpsl
mov
cmpsb
iret
ja
rclb
lods
lds
mov
stos
ljmp
ljmp
mov
mov
cltd
dec
or
enter
and
fidivl
icebp
cmp
dec
mov
imul
push
add
jg
jno
out
fisubs
lret
xchg
adc
xchg
xor
shll
mov
and
adc
add
jg
xchg
pop
xlat
push
enter
jl,pn
sbb
daa
repz
inc
dec
jg
call
jo
fbstp
pop
xchg
push
jae
and
xchg
push
pop
mov
lret
xchg
fwait
dec
outsl
pop
cld
mov
in
pop
xor
adc
xchg
les
out
inc
jo
decl
and
dec
jmp
in
push
and
cmpsb
sub
mov
out
sbb
adc
aas
mov
push
clc
test
mov
cli
dec
roll
push
test
lahf
xchg
rclb
xchg
mov
fdivrp
scas
mov
push
fists
inc
xchg
push
jns
ds
jae
in
jg
sub
lods
mov
xchg
jns
pop
adc
add
movsl
lods
test
mov
inc
sti
rcrb
ss
xchg
test
jp
movsb
inc
adc
dec
data16
jl
jle
push
inc
in
pop
jae
sbb
mov
clc
outsl
icebp
or
and
and
outsl
mov
xor
and
sub
dec
xor
ret
mov
fadds
test
rcrl
leave
into
mov
xchg
inc
jecxz
rorb
mov
xchg
test
pop
jne
dec
sti
test
xchg
xor
or
xor
arpl
sbbb
sbb
cmp
mov
cmc
aam
test
andl
je
lahf
inc
hlt
mov
rclb
mov
add
test
push
mov
push
aaa
cmp
and
or
jo
shlb
cmc
nop
xor
push
add
test
shlb
movl
enter
mov
mov
std
shll
push
push
sub
test
fcmovnu
inc
mov
sbb
push
mov
pop
inc
push
mov
push
inc
or
bound
xchg
jbe
adc
cvtpi2ps
xor
into
icebp
jg
clc
sub
aad
inc
rolb
aam
push
push
aad
push
mov
icebp
lea
shl
inc
insb
int3
out
inc
push
adc
sbb
jmp
or
pop
scas
adc
mov
ja
adc
test
or
xor
add
or
xlat
xchg
test
or
jle
sti
jmp
push
mov
jnp
sarl
mov
or
inc
daa
repnz
mov
rorb
push
stos
inc
call
lods
and
inc
dec
push
inc
or
lcall
insl
add
sub
mov
jne
and
ljmp
or
adc
push
jne
and
cmc
jbe
loopne
popa
scas
push
out
mov
sub
push
frstor
sbb
inc
outsl
push
fldt
data16
shrl
fimuls
repnz
clc
test
imul
js
adc
or
int3
push
je
rolb
fiaddl
loopne
je
cmp
inc
push
push
fidivs
mov
and
mov
xlat
adc
xchg
adc
in
ja
mov
inc
test
inc
test
bound
jne
jp
cwtl
lock
lods
lret
fisubrl
xor
or
and
or
jae
add
mov
and
sub
pop
cld
xor
and
add
arpl
lret
pop
mov
pop
popa
inc
mov
xor
or
xor
pop
adc
sbb
fildll
aaa
push
push
out
inc
mov
adc
fs
jecxz
mov
cmp
cmp
fadds
stos
dec
cltd
sbb
xor
popf
or
cld
cld
push
pop
adc
cwtl
mov
mov
in
sub
cld
pop
mov
lock
dec
or
icebp
mov
fists
mov
lds
xchg
sub
xor
push
mov
ficomps
les
loopne
neg
xor
fstp
fld1
mov
fs
push
and
or
movsb
push
pushf
in
lods
cmp
jae
adc
lods
mov
inc
xor
cmp
jb
sub
fdivr
cmp
push
leave
xchg
and
sbb
xchg
vpmacssww
aaa
aaa
push
push
add
adc
stc
xchg
shrl
fstpt
or
and
add
adcb
push
jb
lock
mov
xor
push
inc
fidivs
jns
sub
scas
push
push
addb
adcl
mov
mov
ret
push
test
inc
lret
ret
rorb
inc
adc
add
mov
cwtl
jno
or
xor
fmulp
push
rolb
add
negl
xor
mov
sub
add
fcompl
inc
cmpl
into
imul
sbb
jb
add
lods
flds
jmp
xor
movsl
add
in
adc
mov
xchg
arpl
push
mov
rorb
pop
and
xorb
test
cs
popa
adc
repnz
and
push
xchg
push
pop
adc
shll
add
adc
mov
sbbl
fdivrl
add
pop
aas
pop
mov
fdivrl
clc
out
or
adc
iret
movsb
nop
sbb
mov
or
mov
push
mov
fsubrl
scas
cmp
or
xor
fmull
and
add
add
inc
and
fwait
loopne
xor
pushf
jmp
rcrb
push
adc
inc
xchg
popa
ret
dec
pop
stos
xor
rolb
add
cmpsb
subb
in
push
sbb
call
push
xor
loopne
push
nop
or
xorb
rcr
or
orb
jnp
int
mov
orb
or
rolb
or
aaa
or
shrl
add
and
mov
out
ss
jle
mov
loopne,pn
nop
mov
ret
es
ret
add
push
or
jg
add
sti
and
jnp
jnp
out
pop
pop
test
int3
jne
nop
mov
dec
jno
xchg
push
lods
aad
test
stos
fcompl
jnp
adc
push
push
iret
jge
subl
sbb
sub
add
cltd
cmpsb
daa
jl
int3
push
xchg
int3
hlt
cmp
test
adc
je
xor
xor
loopne
stos
push
or
cmp
xchg
add
add
xadd
sub
lods
add
cltd
imul
xchg
fdivs
mov
push
adc
mov
enter
push
push
cmpsl
movl
xor
mov
popa
adc
jg
lds
loop
clc
sbb
es
testb
and
ret
aam
dec
inc
pop
rclb
add
sbb
mov
faddl
les
or
cld
shlb
iret
add
loopne
cmpsb
pop
inc
lds
inc
adc
imul
add
popa
adc
push
adc
jo
test
adc
jmp
lods
add
cmpl
ljmp
out
outsb
gs
push
test
sbbl
dec
push
nop
sbbb
out
enter
adc
push
xchg
adc
loopne
clts
mov
add
sub
inc
mov
addb
jecxz
addb
adc
lods
xchg
sbb
loop
mov
out
dec
in
push
sbbb
jae
xchg
dec
rolb
pop
add
das
jb
scas
pop
mov
sub
pop
mov
fmuls
int
pop
mov
mov
movsl
stos
test
pop
mov
pop
or
ja
dec
mov
push
xor
add
subl
mov
dec
js
sub
out
and
push
mov
inc
fdiv
lret
addr16
push
out
or
aad
jle
mov
lock
mov
ret
and
sub
push
dec
in
pop
scas
add
dec
pusha
cld
xor
pop
sti
orb
pushf
je
bound
or
es
fsts
sub
test
inc
rorl
cmc
cwtl
addl
dec
sar
xorb
js
xorl
cmp
andb
nop
fstpl
shl
ret
sbb
push
nop
andl
mov
cld
push
mov
sar
add
prefetch
or
push
test
sbb
imul
mov
pop
rcrb
xor
pop
push
les
jne
fmuls
stos
add
inc
and
inc
adc
sbb
xor
rorb
push
sysenter
inc
inc
sub
inc
addb
and
ret
test
xlat
stos
cmp
pop
iret
pop
or
aad
popf
test
sbb
or
pop
clc
pop
cld
inc
sbb
out
sbb
je
je
sub
sub
cmp
pop
jmp
test
je
test
sbb
jle
fiadds
xchg
cmp
les
fcmovbe
xlat
cs
jle
push
mov
inc
cli
push
adc
push
sbb
shll
xchg
cli
test
inc
into
mov
and
pop
or
add
inc
in
stos
inc
sti
mov
or
inc
scas
ret
xorb
lock
std
jbe
decb
jb
hlt
ljmp
hlt
hlt
push
or
fldl
addl
mov
jmp
add
jl
or
jb
repz
mov
je
sbb
divl
call
out
xor
adc
xchg
push
xlat
test
addr16
mov
loope
decb
mov
push
jg
push
das
mov
fldcw
pusha
cmp
fsubrl
clc
cmp
mov
push
int
or
push
sub
repnz
popa
insb
sub
sub
cwtl
inc
mov
jle
add
out
add
cli
lods
clc
mov
mov
add
in
mov
add
add
and
sbb
jb
int
outsl
mov
fnsetpm(287
and
or
pusha
sub
cmpsl
lock
sarb
mov
push
inc
out
loopne
mov
add
sar
lret
mov
push
out
adc
roll
shl
and
inc
mov
ds
shlb
mov
pop
adc
pop
testl
sub
and
push
leave
mov
mov
out
pushl
mov
sub
and
scas
or
xorb
pop
adc
scas
repz
lcall
hlt
add
test
fsubr
movb
xor
inc
dec
sub
test
or
cmp
mov
out
testb
fildl
cmp
pop
iret
cmp
push
inc
and
fmuls
test
outsl
stos
pop
mov
icebp
aad
icebp
test
std
jg
incl
adc
inc
or
ljmp
shlb
add
cli
push
add
adc
jbe,pn
add
or
das
repz
mov
adc
das
sbb
dec
repz
cmp
rclb
std
les
nop
lcall
pop
add
pop
push
mov
or
iret
jmp
dec
pop
pop
mov
mov
jb
cmp
xchg
cs
and
pop
mov
xor
or
sbb
inc
add
sbb
shrl
pushf
push
mov
add
add
jb
add
inc
jno
in
xchg
ret
fimull
jge
add
cli
mov
es
add
sti
inc
add
mov
faddl
or
add
mov
mov
test
add
test
cmp
jnp
pop
shll
ret
popa
or
outsl
fs
std
push
add
icebp
push
mov
ret
sti
jle
xlat
xchg
mov
xor
inc
cmc
movsl
mov
add
ret
test
inc
fnstsw
iret
mov
cld
in
incl
repz
dec
adc
mov
lods
inc
pop
or
les
cmp
add
das
shrb
aaa
pushl
cmp
sbb
mov
fists
mov
mov
cmpsl
shll
add
cmp
dec
icebp
adc
pushf
inc
insl
inc
roll
sbb
add
sbbb
adc
sub
ret
xchg
jg
sbb
test
mov
insb
stos
call
add
xor
add
inc
mov
or
jmp
loopne
mov
push
mov
mov
insb
and
and
add
dec
mov
xchg
sbb
jbe
push
push
inc
jg
lock
mov
movsl
call
xor
lcall
shll
popf
cltd
add
sbb
sub
fdivr
sbb
add
xor
or
xlat
pop
jg
inc
and
fldenv
add
add
mov
sub
xchg
jno
and
roll
cld
sbb
addb
movsb
add
mov
xchg
daa
sarb
add
push
inc
lret
dec
loopne
push
sub
shlb
inc
dec
jno
sub
in
rolb
jo
das
cld
sbb
addr16
aam
shll
push
shl
cli
aaa
push
int
inc
mov
sbb
test
jge
sub
sub
sub
mov
cmp
decb
dec
xorl
popf
rolb
stos
xchg
fisubrs
push
or
ret
cld
test
and
jecxz
mov
mov
jmp
jg
fisubrs
inc
jne
add
adc
xchg
je
mov
mov
stc
bound
ret
jg
fldz
add
cmpsl
dec
push
sbb
add
push
and
mov
xchg
xchg
xor
push
std
ret
pusha
testb
movsb
cmp
hlt
pop
enter
lds
ljmp
sarb
repz
clc
aad
pop
add
incl
jp
or
test
pop
sbb
pusha
shrl
sub
xchg
dec
ljmp
roll
aaa
lock
mov
ret
inc
in
xchg
ret
ljmp
push
add
push
inc
subb
mov
push
stc
inc
pop
or
cmpsb
outsl
mov
in
jno
daa
test
xchg
cld
mov
push
cmp
loop
mov
inc
cmp
cmp
movsl
mov
jnp
mov
push
cli
cmp
cmp
rol
mov
lock
dec
cs
sbb
dec
push
adc
mov
ja
mov
in
cmp
outsb
sub
pop
fcmovnbe
xlat
movsb
mov
adc
in
pop
adc
fcoml
dec
pop
mull
insb
cmp
add
cmp
das
jl
rclb
pop
dec
mov
push
mov
add
bound
sub
dec
in
fbstp
movsl
mov
das
fistl
dec
dec
mov
sub
data16
fmuls
adc
xchg
fs
and
xor
cmpsl
push
sbb
outsl
pop
pushl
aad
jp
shr
jb
insb
sbb
stos
data16
and
ret
loopne
cltd
and
rcrb
adc
cmp
add
aas
dec
mov
adc
into
lret
mov
sahf
pop
jl
adcl
sub
xlat
lea
iret
jmp
inc
outsl
nop
pop
mov
mov
outsl
adc
mov
int3
cltd
jns
xlat
sbb
mov
sub
imul
sub
mov
add
int
stc
mov
aas
sbb
jmp
push
ficoms
add
pop
sub
sbb
and
sbb
rclb
add
out
mov
das
std
sti
inc
adc
cmp
adcl
lcall
add
ror
cld
outsl
pop
and
sub
jb
xchg
adcb
andl
cmp
mov
pop
lods
fwait
mov
daa
mov
mov
scas
jle
in
pop
mov
inc
loope
pop
ds
push
movsb
icebp
decl
sarb
insl
jl
pop
jo
jp
xor
sar
cmp
mov
in
insl
idivl
adc
pop
add
cmc
push
jmp
xor
and
add
and
rcll
xor
sub
sub
std
pop
sub
xor
mov
call
push
xor
test
into
andb
aad
sub
inc
mov
or
xchg
in
enter
shlb
jns
das
mov
inc
sbb
or
shrl
dec
aas
mov
dec
sbb
sti
sbb
loop
mov
push
lea
adc
pusha
sti
adc
std
out
rorb
mov
lock
jecxz
xchg
scas
xor
nop
insb
fisubs
sbb
stos
mov
mov
pop
mov
sarl
sbb
clc
push
pop
mov
in
and
hlt
inc
test
inc
pop
mov
inc
xlat
das
scas
mov
imul
pop
rcrl
std
xor
mov
xchg
jo
mov
dec
dec
movsb
pop
mov
push
ss
xlat
test
bsr
sbb
mov
outsl
cmp
mov
dec
gs
je
outsb
test
addb
sbb
ds
pop
icebp
negb
push
inc
sbb
sub
pop
xlat
movsl
or
pop
xlat
push
mov
out
rcll
jecxz
jge
sbbl
outsl
insb
inc
scas
in
nop
popf
pushf
jg
or
cmc
jbe
fildll
mov
mov
add
jno
dec
clc
mov
jns
aaa
sub
sub
call
and
push
stc
daa
and
out
cwtl
mov
add
loope
sub
fldl
fcmovnu
sub
sub
inc
jle
pop
adc
inc
orb
mov
cltd
sub
lods
arpl
jbe
mov
adc
or
outsl
xor
fcomip
adc
mov
pop
adc
and
cs
pop
std
mov
insb
icebp
pop
inc
stos
xor
lret
out
addr16
or
sbb
inc
sarb
loopne
aaa
add
and
rol
xchg
inc
push
jb
inc
aaa
ja
ljmp
xchg
xchg
and
sbb
xchg
ss
movsl
add
test
hlt
pop
sbb
add
mov
mov
pop
test
shr
aad
pusha
mov
push
dec
xchg
mov
daa
rcll
stos
les
or
push
bound
shrl
mov
sbb
or
push
stos
call
incl
lcall
cld
movb
loopne
inc
aad
dec
mov
jne
mov
ret
adc
std
or
adc
ja
add
fistpll
insb
cmp
pop
mov
movsb
fadd
jmp
rcrl
loopne
sbb
and
pop
fiadds
mov
cmp
js
test
or
movsb
mov
mov
mov
stc
inc
push
daa
js
xchg
adc
and
xor
xchg
sbb
dec
xor
cmpl
mov
clc
mov
mov
jno
and
dec
add
pop
aam
push
push
mov
out
cmp
xor
sbb
addb
cmpsb
xor
popf
and
or
imul
addr16
pushf
out
ficomps
je
push
mov
int
aam
pusha
add
xor
adc
in
cli
pop
lcall
push
sub
mov
lsl
in
in
xor
push
inc
cwtl
test
and
mov
sub
adc
mov
nop
out
xchg
push
test
inc
jno
adc
repnz
test
faddl
sbbb
add
cmc
mov
add
int
shlb
sbbl
les
push
loopne
push
sub
jl
mov
push
xchg
outsb
xchg
loopne
loopne
shlb
xor
inc
fistpll
jp
movsb
pop
lcall
jp
push
push
cmp
roll
cld
adc
pusha
les
imulb
xor
addb
mov
or
jnp
rolb
inc
mov
lock
daa
add
popf
add
loop
loopne
in
xchg
sbb
cmp
daa
or
shll
icebp
sbb
jge
aaa
ret
adc
and
ret
and
sub
dec
or
lret
sbb
inc
or
cmpsl
cwtl
xor
xchg
ret
out
adc
in
fwait
insb
loopne
clc
adc
xor
push
in
push
lock
mov
arpl
adc
in
add
dec
mov
xor
adc
or
es
rolb
fiadds
cs
pop
pushf
in
enter
cmp
test
push
cltd
pop
mov
leave
lcall
push
xor
dec
push
mov
repz
orb
push
cmc
xchg
and
and
push
fcomp
les
imul
shll
mov
sbb
xor
inc
xor
out
in
xchg
or
and
shl
push
add
insl
pop
and
add
out
orb
inc
imul
or
cmc
add
aam
add
fisubs
mov
or
push
mov
insl
loopne
sbb
xor
shlb
loop
add
xor
pop
dec
push
js
ret
mov
repz
es
in
dec
inc
sbb
xor
repz
stos
lods
push
int
inc
fldenv
mov
out
dec
fcmovne
dec
inc
pop
dec
and
jno
loope
fstl
imul
vcmppd
xor
test
and
push
rcl
or
inc
lcall
mov
lcall
mov
mov
xor
xchg
adc
jp
sub
jg
scas
inc
insb
ja
pop
ljmp
jae
add
stc
jecxz
lret
movsb
add
call
ja
mov
push
insb
mov
or
xorb
movsb
iret
std
push
outsl
cmc
into
lods
mov
nop
jo
or
jo
mov
sub
sbb
push
pop
or
add
int
sub
mov
clc
mov
xor
fucomip
add
pop
inc
cmc
lahf
adc
pushf
leave
add
int3
or
sub
loopne
sbb
inc
add
fcmovne
popf
fiaddl
or
popa
cs
add
or
test
ljmp
push
adc
sbb
cmp
add
add
add
movsl
pusha
mov
loop
add
fstpl
inc
fildll
aas
sbb
fs
jnp
add
loope
push
cmp
pop
and
push
in
push
fnstsw
aaa
icebp
mov
out
stos
andl
pop
mov
call
jg
lahf
fmuls
cmc
adcb
push
wbinvd
cwtl
adc
pop
cmp
push
adc
ds
adc
repnz
push
inc
pop
emms
pop
ja
mov
stos
pop
sbb
mov
shll
inc
lea
and
mov
dec
fidivl
add
pop
mov
sub
sbb
ljmp
or
cs
outsl
icebp
push
std
loope
sbb
inc
add
les
rcrb
cmp
or
sub
movsl
ss
jne
pushl
lahf
sub
dec
pop
adc
push
push
repz
outsl
cmp
xor
cltd
les
outsl
lcall
mov
mov
or
mov
lods
jne
add
mov
ret
dec
in
cs
push
ljmp
rclb
xor
int3
subl
sub
outsb
pop
aad
sub
mov
push
lahf
cmc
subl
adc
add
and
push
mov
and
add
xchg
adc
adc
gs
cmp
jp
cmp
insl
jne
and
cmpsl
sbb
push
iret
push
pop
pop
stc
inc
xor
andb
xlat
outsb
addl
sub
push
xor
add
cmpl
xchg
divl
ljmp
js
lods
repnz
add
adcb
push
adc
jo
stos
stos
ljmp
cli
adc
sub
add
jle
insl
mov
xchg
or
dec
call
mov
testl
or
movsb
test
mov
xchg
add
out
ss
add
rcl
pop
rolb
dec
inc
xchg
push
fcoms
cli
ljmp
mov
adc
int3
adc
and
test
or
sub
sti
std
addl
out
push
add
sbb
sub
fbld
adc
lret
and
sbb
or
push
ror
push
or
dec
cmp
stos
fidivrl
aam
adc
dec
xchg
rcrb
in
in
add
mov
dec
rorl
xor
stos
xchg
push
jl
push
popf
add
sub
inc
xor
stos
adc
add
inc
cmc
mov
call
inc
push
xchg
or
mov
scas
mov
popa
es
cltd
adc
push
insl
std
dec
mov
dec
jmp
arpl
push
xor
xor
jb
xchg
cmp
jle
stos
out
push
or
dec
sub
fcoml
sub
mov
js
pop
mov
out
xor
mov
jle
add
and
mov
add
adc
aas
loopne
ffreep
dec
int
or
dec
int3
leave
pop
jl
xor
jbe
ljmp
call
decb
or
movsl
push
add
mov
insl
adc
push
testl
cmp
call
dec
add
dec
pop
mov
adc
je
es
imul
mov
xchg
add
lcall
out
add
mov
jb
js
jno
rcrb
mov
and
cmp
inc
orl
es
xchg
repz
loopne
mov
sbb
push
cmpsl
push
sub
mov
mov
add
and
loop
cmp
sar
roll
push
and
rolb
mov
push
imul
xchg
mov
out
push
cmp
rcl
lds
xchg
jne
dec
in
inc
daa
inc
fldl
jae
movsb
sbb
outsl
mov
fldl
sbb
sbb
imul
mov
inc
fdiv
and
call
adc
scas
adc
add
inc
insl
ret
mov
inc
add
mov
fldl
xchg
cmp
cmp
push
fnstcw
mov
out
std
mov
sub
cltd
xchg
fisttpll
mov
mov
mov
add
fisubs
jne
mov
inc
inc
jnp
add
nop
gs
mov
jg
push
stc
arpl
das
shl
sbb
mov
add
movsl
imul
xlat
pop
push
dec
insb
adc
shl
addr16
cli
decl
repnz
mov
jp
mov
xchg
push
push
push
mov
cmp
nop
push
xor
add
adc
mov
xor
push
orb
fbld
sbb
pop
shlb
imul
pop
adc
fistps
les
jae
jbe
pushf
stc
ret
adc
outsl
sbb
arpl
mov
icebp
outsl
lock
rcrb
or
lret
push
inc
bound
filds
les
push
outsl
sub
inc
mov
push
dec
stos
and
test
inc
jb
push
mov
sbb
inc
mov
push
lock
subl
or
push
xchg
sbb
adc
icebp
push
shl
xor
sbb
jl
cmp
push
pop
clc
fldt
or
test
inc
inc
lock
insb
outsl
in
daa
ret
pop
cmp
inc
jbe
cld
sub
sub
mov
enter
outsl
pusha
xchg
push
jle
lds
mov
adc
out
loop
cli
nop
loope
jl
adc
les
and
jge
push
add
lods
js
outsl
cld
xchg
ss
add
test
sub
loop
fisubrs
mov
dec
movsl
sahf
jnp
jbe
call
and
inc
add
pop
call
sub
ret
mov
sti
xchg
add
es
pop
or
push
mov
call
loopne
xor
add
adc
pop
je
mov
fcoml
inc
test
jae
ret
sbb
sbb
out
orl
mov
or
fisubrl
pop
decb
sbb
xchg
mov
in
push
jo
mov
dec
fs
iret
xor
movsb
cs
fisttps
je
mov
sub
rolb
out
cmc
cmpsb
ja
lock
and
aaa
psubw
jo
lahf
insb
and
and
and
shrb
ds
leave
pushf
sub
adc
in
adc
jno
mov
lock
js
les
repz
sbb
or
roll
sbb
inc
adcl
push
loope
sbb
add
dec
add
mov
hlt
inc
add
or
in
inc
hlt
sti
jmp
or
add
addb
pop
or
data16
xor
in
out
stos
and
enter
xor
sub
in
add
loope
pop
in
dec
inc
addr16
call
rcll
add
add
dec
add
call
aaa
shl
shlb
xor
mov
mov
adc
jbe
inc
push
in
add
push
jno
int3
loopne
cs
into
repz
dec
add
inc
and
rorl
icebp
stos
pop
int
inc
inc
lods
xlat
mov
test
fistps
imul
push
adc
adc
jp
stos
cwtl
or
or
jns
or
and
mov
push
inc
add
push
subb
mov
mov
scas
sbb
hlt
or
mov
dec
movsl
sub
cmpb
fisubs
test
inc
mov
dec
add
mov
add
les
xchg
mov
das
loop
or
repnz
lock
lea
imul
mov
outsb
adc
and
mov
add
ficomps
jge
mov
lcall
inc
sbb
xorl
and
mov
fs
nop
xor
fidivl
xchg
dec
mov
scas
add
jle
sub
add
cmpb
jp
aaa
cmp
or
jo
pushl
orb
inc
aaa
mov
cmc
pop
adc
lea
shlb
and
lods
inc
cmp
xor
and
sbbl
loope
xor
jne
jg
push
mov
in
sahf
flds
sub
pop
add
or
push
and
pop
imul
push
push
sub
jno
pop
dec
mov
sti
mov
sbb
lcall
push
jbe
adc
add
add
nop
lock
mov
mov
ljmp
add
scas
insb
mov
jge
pop
std
insl
pop
mov
shrb
jmp
fdivrp
inc
nop
inc
jp
test
xor
outsl
das
push
js
adc
xchg
inc
lret
push
sub
test
or
xchg
mov
rcll
push
sub
or
aam
mov
pop
in
cli
nop
lods
xchg
xchg
fcmovne
pop
out
ljmp
mov
mov
sbb
pop
jbe
xchg
xchg
call
flds
cli
leave
insb
inc
iret
push
xchg
cld
in
loopne
shl
add
push
or
lret
mov
adc
ret
popa
mov
aaa
shrb
mov
dec
divb
loope
mov
xor
mov
inc
shlb
ja
int3
mov
rorb
aam
push
loop
dec
ror
outsb
mov
mov
fdivrs
out
cmc
pop
mov
jmp
cmc
aaa
adc
sub
cli
cmpsl
mov
je
testl
ljmp
pop
sbb
scas
js
outsl
sub
arpl
ret
cmp
mov
mov
loope
xchg
mov
and
xchg
mov
lock
mov
xchg
lret
mov
inc
int
sbb
adc
mov
fs
loop
push
ds
xor
push
sub
inc
dec
push
sbb
inc
lds
jae
sub
xor
push
std
push
flds
ljmp
ja
jge
inc
mov
mov
sbb
push
int
cli
fiaddl
popf
sub
ja
or
fcoml
call
in
and
dec
add
in
ror
fcomps
iret
stc
inc
lods
fiaddl
xchg
rolb
mov
in
addr16
xchg
clc
add
shlb
xchg
pop
imul
push
push
sbb
fsts
mov
int3
les
sub
sub
and
or
ja
divb
ret
cmpsb
and
add
xor
sbb
in
push
enter
mov
pop
mov
rclb
push
fstp
push
fwait
push
les
int
xor
int3
xor
push
inc
ljmp
cmp
inc
adc
adc
pop
hlt
les
sub
repz
sbbb
adc
outsb
test
repnz
dec
imul
dec
push
push
out
aam
jne
mov
stos
mov
jmp
adcb
jb
or
and
push
aad
sarb
pop
inc
push
adc
mov
fcmovnb
inc
xor
mov
clc
fsts
test
jne
mov
jmp
and
or
call
sbb
testl
sbb
push
push
jg
sbb
sub
dec
rcr
rolb
loope
les
mov
dec
shl
rclb
cli
rcrb
push
jl
mov
mov
add
test
mov
arpl
jo
add
push
cmp
addr16
fcoms
add
and
pop
aad
pusha
inc
pop
pop
ss
xor
push
sti
add
pop
sti
jge
sub
inc
adc
and
or
lods
push
hlt
clc
mov
sahf
or
or
sub
sahf
cmp
jno
mov
dec
mov
rcl
mov
sub
xor
mov
jae
dec
cmp
out
add
ljmp
je
xchg
cmp
jo
dec
push
and
adc
insl
mov
push
xor
push
lods
sbb
lds
mov
xchg
imul
inc
int
je
stos
popf
pop
cwtl
mov
jmp
pop
outsl
dec
jmp
popf
movsl
cmp
xchg
mov
sub
outsb
pop
xor
ja
cs
sub
mov
lds
cmp
movsb
push
ror
jp
jmp
adc
lea
pop
push
mov
add
mov
daa
fs
cmp
or
mov
fwait
popf
pop
and
sub
rclb
negb
or
mov
or
adc
pop
cmp
adc
loopne
add
sahf
test
loop
pop
mov
ljmp
sbbb
jo
sbb
dec
push
cmp
xor
arpl
or
jb
lock
ret
pop
jp
es
cltd
dec
add
arpl
popf
lods
mov
add
push
call
push
and
mov
pushf
xorb
adc
stos
lret
mov
xchg
loope
mov
rolb
mov
push
es
int3
push
bound
dec
xor
push
into
in
out
jle
clc
enter
jp
fsubr
repnz
enter
add
lcall
vcvttss2si
cld
les
cmp
retw
movsl
sbb
pop
aad
xor
arpl
in
push
repz
mov
push
fmull
or
mov
adc
ja
adc
mov
filds
sbb
cmp
setp
mov
scas
mov
nop
stos
or
sbb
pusha
loopne
xchg
enter
or
push
hlt
jo
xor
or
adc
je
and
mov
test
insb
lods
mov
xchg
lret
lret
stos
cmpsb
aad
add
jo
pop
jl
rolb
les
adc
jne
lods
std
fbld
and
sub
test
in
lds
xchg
movsb
cmp
adc
or
push
sbb
movb
ss
jp
es
mov
pusha
lret
and
mov
xor
es
or
xchg
sbb
mov
testb
fsubrp
sub
push
cmp
loop
push
loope
inc
mov
mov
adc
outsl
pop
sbb
xchg
xor
imul
adcl
fisubrs
cmp
inc
xchg
cmp
test
or
pop
imul
adc
or
sub
in
add
sub
enter
push
jecxz
out
mov
mov
jo
outsb
mov
sub
sbb
push
fsubrs
push
add
mov
or
incb
sub
mov
inc
nop
pop
in
xchg
out
pop
or
rcll
movsb
mov
mov
sbb
add
mov
pop
ret
and
insb
dec
clc
das
enter
add
in
lds
loopne
adc
cltd
and
inc
pop
enter
cmp
jmp
xchg
int
aas
mov
add
xor
repnz
hlt
and
mov
fiadds
or
sub
push
cmpsb
out
pop
add
xchg
sub
jbe
bound
xlat
jp
mov
mov
xor
pop
mov
add
adc
cs
mov
popa
ss
or
in
cmp
add
dec
lods
popa
xor
or
inc
pop
imul
sbb
add
mov
repnz
sub
popa
fcoms
xchg
cmp
or
fists
out
adc
mov
push
pop
clc
je
fnstcw
sbb
ret
inc
testl
push
mov
imul
andl
out
imul
out
push
cld
movsb
cli
pop
adc
sub
push
add
cltd
or
sbb
xor
mov
sbb
push
test
mov
mov
jecxz
inc
sbb
or
inc
shll
inc
cltd
orb
dec
jp
xor
jno
sar
hlt
in
mov
adc
sarb
pop
mov
dec
mov
inc
mov
or
jmp
jne
sti
sbb
or
sub
frstor
mov
adc
and
cmp
and
push
or
pop
rol
xchg
and
pop
cld
sub
aas
sbb
je
out
cpuid
or
insb
xchg
cmp
rolb
adc
push
movsb
repnz
inc
add
movl
cmp
test
mov
repz
adc
cmp
adc
ds
jno
fisubrl
test
sbb
jmp
mov
in
xchg
roll
inc
in
clc
pop
jne
test
call
adc
cld
not
sub
inc
mov
fs
shll
lret
clc
mov
mov
clc
jae
loop
add
cli
xlat
fimull
movl
cmp
movl
outsb
les
inc
sub
add
pop
outsl
push
iret
mov
test
fistl
gs
add
inc
ljmp
adc
mov
adc
fsubl
arpl
jg
add
rorb
cli
pop
push
test
dec
dec
jp
jecxz
call
sarb
inc
or
movsb
shlb
roll
les
adc
aas
mov
push
mov
aad
cmp
jb
lcall
in
jmp
repz
popf
jmp
jp
lods
jb
sub
repnz
test
inc
sbb
or
mov
cmpsl
clc
xor
inc
inc
mov
xchg
mov
sbb
sarl
xchg
jmp
sub
xor
mov
fdivp
sbb
fildll
pop
insb
adc
mov
xor
fsubl
push
adc
stos
jne
mov
add
jb
ret
jmp
mov
xor
mov
adc
dec
in
jne
lods
push
add
fldl
test
mov
and
dec
sbb
and
sbb
lds
push
out
or
pop
rorb
stos
lea
add
push
test
add
dec
sahf
dec
je
xchg
sbb
mov
ret
ljmp
pop
add
js
sbb
pop
aad
sub
pop
push
dec
jg
notl
jne
sub
mov
jmp
cmp
inc
sbb
sub
sbb
in
sbb
or
scas
pop
cmpsl
inc
jb
sbb
movsw
dec
into
je
dec
fwait
inc
stos
jb
and
inc
adc
test
or
sub
jno
sub
clc
xor
xchg
push
dec
push
jne
jo
imul
int
inc
rcrb
mov
dec
cwtl
cmp
movsb
fildl
cmp
fs
pop
sub
mov
mov
push
dec
adc
pusha
ret
stos
add
roll
popl
add
dec
dec
push
sbb
enter
xchg
inc
pop
addr16
cmp
dec
cli
pop
sbb
loop
es
add
loope
scas
inc
dec
mov
push
clc
outsl
cmpsl
enter
and
insb
push
or
jo
call
lock
test
jne
or
inc
int3
jl
inc
enter
add
popf
pop
test
jo
lds
test
adc
push
fs
subb
dec
dec
xchg
cmp
add
push
pop
pop
xor
fwait
cmp
rcrb
outsl
push
jne
cli
or
sbb
sbb
xchg
add
idivl
repnz
pop
push
add
cmp
test
add
pop
nop
icebp
push
pusha
and
push
push
push
movsb
icebp
pop
jae
mov
inc
xor
push
sub
fists
cli
add
loopne
jno
idivb
aas
sub
je
out
xchg
inc
inc
cmp
in
mov
addb
loop
adc
fistpl
rorb
inc
hlt
mov
arpl
inc
in
ret
mov
sbb
outsb
repnz
inc
inc
cmpsb
js
scas
pop
xchg
aas
enter
push
push
or
clc
mulb
mov
notb
std
add
adc
jle
push
mov
bound
arpl
stc
insb
scas
div
sbb
outsl
jne
fucomip
push
imul
rcrb
sub
in
mov
or
shr
adcb
push
das
dec
and
or
addr16
in
xor
xor
xlat
movb
sbb
add
mov
rcll
pushf
pusha
adc
mov
ret
test
jae
shr
shrl
and
mov
js
and
cmp
aas
sbb
fsubrs
dec
enter
jbe
mov
xor
loopne
or
pop
fisubl
cwtl
repz
les
lock
sub
pop
ds
enter
and
divl
cmpsl
sbb
ja
mov
add
data16
dec
lock
jbe
or
icebp
es
test
scas
push
cwtl
adc
inc
fimuls
pop
pop
mov
mov
mov
or
jns
pop
cs
inc
pop
mov
rolb
and
loopne
push
mov
mov
jecxz
ror
jns
push
ljmp
ficomps
repnz
inc
lret
cmpsb
jb
jge
mov
sbb
ret
sub
xchg
popf
pop
xchg
jmp
sub
js
ljmp
pop
rcl
cld
aas
stc
mov
push
popl
mov
pushf
mov
add
or
lret
xor
push
mov
adc
xchg
incb
add
in
dec
pop
mov
loop
fbstp
adc
je
adc
jno
sub
cli
sbb
mov
aaa
and
imulb
nop
ret
scas
mov
push
jne
push
xor
jp
jno,pn
xor
mov
and
loope
cmp
jae
sbb
sbb
imul
jne
rcr
shl
les
push
ja
xor
out
sbb
adc
pop
or
je
mov
lods
mov
dec
popf
push
iret
stos
mov
adc
rorb
js
fmul
xor
and
andb
sbb
xchg
and
adc
xor
push
pop
adc
sbb
mov
xchg
or
aaa
insl
push
out
mov
loope,pt
adc
les
sbb
inc
dec
pop
es
std
ficoml
cmp
std
mov
fimuls
and
pop
inc
ds
mov
popf
jp
jnp
repnz
arpl
lods
push
xor
add
in
testl
mov
je
stos
adc
loopne
add
data16
pop
dec
in
lods
inc
mov
or
xchg
sbb
mov
dec
pop
inc
adc
fldl
lock
xor
scas
push
fstpl
add
mov
jnp
sub
cmp
cmp
sbb
adcb
icebp
or
adc
add
xchg
setbe
xor
stos
jle
xchg
sub
test
sbb
lcall
sgdtl
loopne
inc
out
add
int3
mov
sub
xchg
dec
and
cmc
sti
push
push
adc
mov
or
loop
cmp
or
or
xchg
pop
ret
add
push
pop
pop
inc
loopne
adc
add
gs
gs
or
jnp
cs
rcl
pop
inc
lock
mov
fldt
mov
sub
mov
lret
and
push
add
fsubrl
inc
jmp
ja
push
adc
es
jb
xchg
and
test
cmp
pop
push
push
sbb
jle
mov
lret
push
xchg
and
xchg
add
nop
lcall
add
roll
in
xchg
andb
push
outsl
loopne
mov
insl
xor
adc
fcmove
or
mov
push
ret
add
and
nop
xor
mov
jo
mov
add
pop
popa
insb
push
outsl
mov
xchg
mov
cltd
aas
shlb
jbe
push
into
aas
int3
mov
inc
push
cmpsb
inc
add
mov
lds
int3
mulb
hlt
in
and
je
lock
cmc
cwtl
add
xchg
push
pop
rcrb
jo
addr16
movsb
cld
mov
push
xchg
mov
call
sbb
push
adcl
mov
mov
or
mov
ljmp
add
in
out
cmp
cmpsb
js
sbb
jno
movsb
rcl
nop
add
xchg
clc
sbb
inc
cmp
mov
mov
cmpsb
mov
nop
mov
cmp
inc
cmp
cwtl
repz
dec
xchg
push
js
sbb
in
sbb
and
push
sub
jb
orl
mov
clc
xor
stos
push
and
mov
inc
in
pop
inc
dec
and
push
les
push
std
or
xor
jp,pn
xor
inc
shrl
mov
je
xor
pop
sbb
add
out
push
test
push
push
push
dec
adc
cmp
jl
inc
add
pop
mov
data16
xor
pop
shll
push
or
xor
lahf
pop
imul
mov
addb
jmp
add
and
push
test
int
sbb
jmp
add
mov
sub
xorl
aam
dec
push
lahf
sub
or
or
test
add
imul
add
jb
push
xor
call
fcomp
in
jle
mov
fildll
inc
xchg
shll
jmp
adc
outsb
cmp
ljmp
push
mov
pop
stc
mov
test
mov
or
clc
pop
add
test
fbld
test
jae
xor
hlt
adc
pop
call
fs
sbb
out
ja
je
add
inc
dec
xchg
fsubp
or
pop
and
sbb
push
sbb
inc
lods
adc
rcrb
dec
in
movsl
cs
mov
stc
push
rcll
xchg
cmp
cmp
fcmovnu
xchg
xor
pop
imul
shrb
in
add
jle
adc
pop
cmp
mov
adc
sarb
testb
adcl
into
inc
adcb
sbb
lods
cmovb
jl
imul
lcall
xor
jb
inc
fbstp
push
dec
xor
dec
and
add
add
addr16
aad
add
int
mov
fwait
lahf
add
dec
mov
add
cld
je
cmp
out
push
dec
adc
ret
sub
hlt
mov
lea
dec
mov
xchg
rol
inc
scas
js
add
and
cmp
jg
subb
sbb
lods
mov
and
or
xchg
andb
inc
push
sub
shll
cmp
into
adc
xchg
mov
mov
neg
add
nop
and
cmp
mov
push
stos
paddd
jo
rclb
aam
cli
ret
inc
mov
add
clc
inc
enter
sbb
and
in
add
ret
int
cs
cmc
adc
call
loop
out
add
jnp
and
aad
add
xor
pop
cmc
pop
jbe
negb
fs
repnz
scas
and
lods
pusha
adc
jl
aaa
dec
aaa
xor
adc
push
fcmove
clc
jl
icebp
je
mov
cmpsb
mov
pop
mov
jge
and
push
xor
cs
push
call
fmulp
adc
enter
fmuls
sbb
pop
cmpsl
push
pop
inc
int3
cmc
jae
add
push
cmp
xor
adc
call
cmp
jne
mov
or
addr16
dec
in
loop
movsb
ss
adc
sbb
orb
insb
aad
mov
mov
push
inc
das
ljmp
mov
cmpsl
sub
xor
fwait
roll
dec
sub
add
adc
and
ret
mov
inc
sbb
mov
sub
xchg
ljmp
andb
inc
adc
inc
adc
sub
and
shrl
outsb
mov
mov
add
jne
xchg
mov
mov
mov
dec
lods
aam
add
jp
jl
sbb
roll
ss
xor
das
and
out
leave
push
out
imul
jne
mov
xchg
mov
add
cmpsl
ss
incl
jmp
test
jbe
mov
cmpsb
inc
int
aas
out
into
daa
shrb
test
add
movsb
lods
rorb
inc
jne
cmc
mov
lret
hlt
xor
pop
sbb
mov
mov
push
jge
fwait
xlat
push
jb
inc
add
fwait
pop
insb
pop
push
pop
jecxz
leave
mov
loopne
cs
insl
in
pop
andb
sbb
inc
lods
pushf
es
push
or
and
faddl
or
cs
pushf
pusha
add
push
insb
xor
out
cwtl
add
cmpsl
inc
fildll
add
mov
dec
cmp
sub
adc
insb
mov
incb
lods
xlat
std
test
aam
rorb
dec
mov
sub
ret
into
call
movsl
iret
rol
sbb
ror
mov
inc
adc
push
pop
inc
adc
shlb
add
mov
adc
jmp
test
ja
frstor
add
cwtl
or
insb
iret
bound
add
dec
mov
pop
push
out
mov
or
cld
inc
sbb
inc
and
dec
push
sub
push
jl
push
push
in
adc
int
fwait
push
repnz
jmp
testb
xorb
adc
and
mov
pop
lea
js
or
add
jp
push
mov
mov
cli
test
bound
cmp
sbb
xchg
fwait
xchg
push
addl
xor
js
mov
cmpsb
xor
mov
mov
push
mov
popf
jne
aas
repz
icebp
call
sbb
dec
sbb
pop
movsb
outsl
xchg
subl
sbb
out
push
pop
pusha
mov
xlat
sbb
inc
mov
shrb
adcb
and
sub
dec
xlat
add
sbb
imul
xor
xor
iret
xchg
data16
adc
add
rcl
stos
jo
test
rol
xchg
and
imul
adc
flds
ljmp
lret
popf
inc
dec
bound
add
fcmovnbe
arpl
add
jle
mov
and
adc
mov
les
shl
xchg
movsl
cmp
lcall
and
push
add
add
loopne
sbb
ror
rcll
jp
sub
or
cmpsl
cbtw
adc
call
mov
pop
xor
cmp
orb
push
call
out
sbb
push
add
xlat
rcl
mov
adc
shlb
fwait
add
jg
and
push
sbb
pop
push
dec
add
push
pop
cmp
pop
add
pusha
add
imul
int
lea
fnsave
into
adc
and
cmp
dec
and
mov
xchg
add
shrb
notb
loop
adc
or
mov
scas
cld
outsl
fs
ja
pop
xchg
sbb
sub
aad
loopne
adc
sub
push
jno
insb
cmp
inc
or
add
or
and
psubb
push
test
mov
int3
lods
loop
lods
repz
dec
dec
out
adcb
rol
push
or
inc
cltd
add
jle
xchg
mov
mov
dec
gs
clc
add
popa
add
mov
shr
mov
adc
add
cwtl
cmc
push
inc
xor
push
pop
cmp
inc
inc
jle
pop
pop
jo
fcoms
rorb
xor
subb
or
jno
inc
daa
rolb
iret
mov
adc
xor
rcll
or
leave
mov
xor
inc
and
or
cmp
es
dec
clc
mov
leave
sbb
addb
cmp
push
add
in
inc
cwtl
push
addb
aad
int
fistl
pop
sbb
cs
clc
add
out
invd
pop
scas
fs
movsl
and
jo
xor
add
sarb
cld
mov
xchg
jbe
or
leave
sbb
mov
and
inc
ss
sub
js
shll
adc
mov
lock
jg
mov
inc
cmp
inc
bound
mov
dec
inc
sub
outsb
fdivs
addb
xlat
cmp
add
mov
add
xor
push
fdivrl
pusha
test
arpl
pusha
bound
mov
dec
inc
push
inc
jo
mov
mov
mov
jmp
in
sbb
push
repz
pop
je
cmp
bound
jo
fistps
incb
scas
rclb
enter
iret
xor
arpl
stos
push
pusha
jmp
icebp
js
test
dec
aaa
lds
dec
fmuls
adc
sub
icebp
cmc
push
out
lret
mov
in
or
sbb
mov
cmp
and
ret
mov
jno
add
adc
test
leave
jne
sub
sbb
clc
fsubs
xor
mov
jp
mov
inc
lods
xor
jae
adc
leavew
scas
adc
sub
les
push
adc
push
xor
bts
dec
push
les
fmuls
push
lods
push
sbb
fidivs
cwtl
push
cwtl
in
hlt
add
test
mov
ret
mov
jae
les
xor
popa
cmc
and
mov
js
push
mov
fidivs
pop
adc
cmp
int
xor
pop
or
and
pusha
je
jne
cld
loop
jp
ds
fchs
or
dec
dec
jae
mov
push
adc
lds
das
pop
xor
stos
lods
sbb
and
xchg
mov
jb
daa
adc
and
orb
sti
jbe
es
dec
ss
ss
lcall
inc
jmp
lock
test
push
movsb
and
adc
and
je
push
add
adc
sbb
arpl
cltd
push
cwtl
push
cmpsb
jo
fnstcw
cwtl
add
add
pushf
jp
xchg
sbb
adc
sub
sahf
xor
pop
cvtps2pi
iret
push
push
mov
test
push
mov
lcall
push
xchg
and
enter
and
and
xlat
mov
and
mov
bound
sbb
inc
xchg
cmp
dec
dec
data16
rolb
lea
out
xchg
mov
cli
stos
negb
adc
and
stos
loope
push
arpl
inc
sub
movsb
int3
dec
test
shrl
and
add
jle
pop
aad
xchg
int3
sbb
pop
scas
push
xchg
push
and
and
lods
sub
ret
cmpl
mov
or
lea
add
dec
jb
imul
add
push
xchg
daa
and
mov
dec
mov
sbb
push
or
mov
sbb
shrb
or
fdivr
aad
inc
sysret
xor
jae
jg
inc
xor
fdivrl
popa
mov
xor
shll
add
movsl
push
nop
outsb
cmc
call
pusha
or
fsubr
addr16
std
add
out
cmp
xor
pop
dec
lock
mov
or
aad
sbbl
sbb
pusha
cmp
add
pop
jne
and
andb
xchg
daa
adc
mov
pop
and
xchg
ret
pop
xor
dec
or
rolb
inc
xchg
addb
and
adc
mov
and
and
xchg
or
shl
bound
xor
adc
inc
and
dec
push
int
or
push
dec
add
test
mov
pop
cltd
nop
sarl
data16
jnp
out
dec
adc
mov
mov
push
and
addr16
arpl
or
fsubrs
sub
xchg
and
stos
or
repnz
sbb
ret
jae
inc
cmp
pusha
push
stc
sti
or
and
sbb
push
inc
scas
fstps
cmp
xor
inc
jecxz
adc
cmp
pop
xchg
inc
pop
insl
dec
fcomip
aaa
test
pop
bound
dec
loopne
mov
jle
mov
adc
dec
mov
push
mov
daa
or
sbb
loop
jl
loop
add
add
pusha
add
or
dec
xlat
roll
dec
imul
adcb
pop
cmp
out
add
rolb
adc
leave
mov
loopne
lea
aad
mov
push
shr
and
popf
add
scas
inc
lahf
dec
leave
ret
test
jmp
push
aam
inc
dec
and
jns
adc
xchg
mov
lods
and
xchg
sub
mov
pop
addr16
push
sar
mov
mov
add
daa
les
ret
add
add
sub
orl
loopne
daa
xchg
lods
cmpb
aaa
fdivrl
jmp
fildl
adc
or
add
and
cltd
add
movsl
or
outsl
or
or
pop
dec
add
outsl
dec
add
decl
into
movsb
sbb
add
addr16
clc
add
mov
sbb
roll
mov
outsb
lahf
mov
hlt
mov
inc
in
adc
and
add
adc
dec
inc
sub
ljmp
sub
add
int3
mov
sbb
and
into
mov
std
incl
inc
out
push
and
bound
ret
inc
sub
icebp
test
inc
mov
pop
sub
into
jb
fildl
adcb
idiv
cmpsl
pop
sti
add
mov
sbb
aas
add
ja
std
cmp
mov
inc
push
mov
mov
xor
and
add
pop
popl
cmp
add
pusha
add
mov
aaa
out
cmc
add
pop
or
jbe
jle
ljmp
loop
call
jle
add
add
std
int3
and
dec
das
popf
sub
cld
stc
xchg
js
jno
mov
pop
mov
mov
shlb
and
inc
add
aaa
icebp
in
inc
cltd
pop
sub
test
dec
mov
xchg
or
faddl
shl
fists
sarb
nop
int3
adc
les
sbb
aaa
clc
in
divb
sbb
test
lods
iret
test
push
cld
adc
pushf
and
add
fidivrl
push
fsubp
insb
add
push
sti
add
or
loop
mov
mov
cmp
rorb
ss
jg
mov
add
std
call
outsl
mov
mov
add
pop
mov
test
adc
pop
sub
inc
cmp
outsb
xor
add
add
cmovle
or
xorl
adc
inc
pop
pushl
and
add
std
mov
sub
jl
mov
scas
jmp
cs
insb
add
inc
jne
or
cmpsb
and
dec
jg
push
push
add
mov
mov
push
mov
adc
xchg
dec
cmp
add
lock
mov
sbb
data16
ljmp
adc
lods
push
cmp
pop
xchg
lcall
add
and
mov
xchg
xor
jg
int3
push
adc
fisttpl
sub
dec
and
mov
stos
enter
cs
add
xor
je
mov
xchg
fs
test
lea
jne
ret
add
add
inc
pusha
jecxz
fldt
leave
push
lret
xlat
dec
or
ljmp
in
or
add
mov
mov
std
ljmp
stc
or
push
orb
add
aas
jne
fnsave
add
mov
mov
mov
mov
xor
cli
jp
sub
adc
sbb
roll
push
jp
mov
pop
test
test
adcb
std
dec
jmp
pushf
adcb
jo
sbb
mov
dec
aas
jl
lods
outsb
sbbl
das
jge
incl
cmp
jbe
xchg
add
fs
rolb
mov
fwait
das
xchg
mov
notb
int
lds
lret
add
rorb
push
pushl
test
imul
lcall
add
dec
rolb
call
js
cmp
jecxz
jg
push
jmp
push
add
xchg
cwtl
mov
lock
xor
test
roll
sbbl
je
xchg
lcall
mov
pop
loope
dec
je
das
cld
or
add
and
mov
dec
push
fwait
mov
mov
inc
shrb
pop
mov
jecxz
fwait
pop
inc
imul
lcall
dec
inc
imul
and
xor
push
mov
sahf
mov
incb
xchg
arpl
dec
mov
adc
mov
ret
mov
dec
aaa
outsl
cwtl
mov
lds
lods
inc
sub
jge
jae
subb
repnz
mov
or
stos
inc
loopne
std
mov
cmp
mov
sub
xchg
xorl
add
out
addr16
pop
loope
sbb
lea
cmp
pushl
xor
cmp
add
xor
mov
inc
mov
sub
icebp
gs
cmp
xchg
inc
dec
out
aad
cli
xchg
jb
lock
dec
mov
inc
sbb
push
cli
dec
les
jo
clc
fwait
pop
pop
insl
add
add
orl
lds
pop
adc
add
jge
push
add
int
lahf
icebp
jge
out
lods
in
inc
cs
cs
lret
sbb
mov
cld
loope
add
add
or
mov
out
mov
test
push
sub
movsl
aam
mov
sbb
push
insl
leave
leave
out
and
mov
dec
xor
mov
inc
stc
pop
pop
sbb
fistpl
das
mov
lsl
outsb
inc
nop
filds
pop
dec
or
cmc
xor
inc
icebp
or
sub
sub
jle
cs
xchg
jp
mov
sub
mov
jl
mov
xchg
push
flds
xchg
dec
out
es
test
jg
stc
sbb
in
test
test
adc
pop
out
scas
imul
lods
daa
in
lea
js
stos
test
scas
sbbb
pop
jg
clc
out
xor
lret
fsubs
push
sub
ss
push
mov
in
push
loop
mov
add
jge
or
dec
xor
jnp
mov
jnp
sub
mov
test
inc
nop
into
cmp
stos
and
mov
jo
loopne
leave
push
mov
xor
orb
pushf
lahf
push
adc
cmc
push
ficoml
and
fs
cmp
adc
jb
sbb
lret
mov
scas
mov
xchg
bound
xchg
movsb
lock
rorb
adcb
test
ss
and
or
push
dec
dec
mov
mov
daa
add
mov
xor
inc
mov
push
sbb
or
cmp
mov
xchg
mov
addr16
mov
xor
mov
out
negb
push
sub
fldt
ljmp
or
cmp
int3
test
xchg
cli
or
mov
in
push
icebp
sbb
or
in
loop
or
or
cmp
dec
ss
loope
mov
cmpl
repz
xchg
test
sahf
dec
adc
xlat
cli
fs
mov
dec
out
mov
outsl
mov
mov
rcrb
mov
add
pop
rcll
adc
push
dec
loope
cwtl
loop
and
sbb
test
loope
aam
imul
cmp
mov
rcrl
and
mov
stos
cmpsb
sub
into
or
adc
imul
fs
leave
sbb
mov
popa
std
jnp
lds
outsl
xchg
ficoms
jbe
jnp
lea
push
adc
cmp
push
mov
test
shrb
lret
add
in
jle
lds
pop
adc
cmp
in
xchg
push
hlt
outsl
mov
insl
pusha
pop
ret
test
push
fmull
push
loopne
movb
mov
add
jo
cmp
clc
and
mov
loope
adc
add
aad
mov
fisubrs
mov
mov
mov
dec
adc
outsl
add
jmp
dec
leave
mov
xchg
push
stos
sub
add
push
outsb
cli
mov
test
xchg
sub
ds
addb
mov
bound
mov
mov
ficoml
pop
mov
mov
mov
gs
not
not
ss
and
imul
inc
inc
shll
cs
fs
mov
fistl
cwtl
outsl
pop
es
pop
push
and
cld
addr16
test
icebp
fildl
cmpsb
daa
stos
mov
mov
and
popa
inc
dec
add
dec
adc
sbb
andb
lea
lret
add
call
adc
sbb
fbstp
dec
add
scas
and
adc
xchg
xor
pop
enter
cli
stos
mov
es
add
push
hlt
lea
stc
or
push
dec
or
jnp
mov
mov
mov
in
mov
sbb
adcb
sub
rclb
sbb
jecxz
adc
testl
jno
rclb
or
adc
nop
mov
jne
jno
inc
icebp
stos
xlat
jecxz
inc
jmp
add
ja
loop
adc
sbb
pop
push
jle
inc
inc
xorl
fisubrs
push
sub
aam
sub
adc
xor
mov
pop
ret
adc
xor
xchg
nop
or
adc
mov
dec
inc
pop
stos
adc
or
mov
or
push
lock
add
mov
aaa
call
mov
enter
add
sub
into
add
mov
mov
xchg
add
inc
mov
test
fdivrs
enter
stc
cmpsl
mov
out
mov
rep
ds
daa
adc
in
inc
lret
in
push
sbb
add
jae
in
es
aad
pushf
pop
ficoms
dec
inc
mov
or
jb
mov
das
ja
in
in
pop
mov
mov
ret
mov
sbb
sub
dec
jns
and
adc
inc
adc
xor
xchg
xchg
mov
rcrl
scas
call
or
in
leave
xchg
mov
test
aad
push
leave
sub
cmpsb
mov
dec
xlat
xor
and
cmpb
adc
sub
cs
adc
adc
addb
scas
sti
int
push
cmp
daa
sbb
push
xor
call
pop
add
push
inc
pop
fcomps
mov
in
sbb
xor
push
lret
es
divl
pop
add
adc
aad
test
ficoml
mov
add
adc
out
inc
pop
xchg
jge
call
mov
mov
mov
sarb
push
mov
fwait
mov
xchg
push
jl
test
jmp
shlb
inc
push
outsb
rolb
mov
push
fs
aam
jge
add
out
inc
dec
mov
push
rolb
or
mov
mov
adc
add
orb
test
outsl
out
jmp
xor
es
and
mov
inc
jp
pop
inc
push
addb
ss
or
adc
out
hlt
or
jge
sub
lods
mov
aas
jo
jmp
sbb
dec
or
fcmovnb
or
cltd
jg
adc
out
repz
js
mov
or
neg
dec
mov
in
push
jno
pop
and
and
int3
add
loop
mov
sub
push
jnp
inc
es
aad
push
cmp
inc
sahf
sti
cmpsl
adc
mov
shlb
ret
cmpsl
mov
popa
data16
cld
adc
xchg
rcrl
mov
and
adc
and
ljmp
mov
orl
pop
leave
call
sbb
pop
pop
or
pusha
jmp
stc
or
push
aam
and
jnp
mov
lgs
push
out
jg
jecxz
arpl
ljmp
psubq
das
out
repz
add
push
outsl
outsb
or
js
in
les
pop
push
test
pop
aas
add
add
xor
add
addr16
outsb
jecxz
ja
nop
lcall
test
shll
fdiv
shlb
daa
jecxz
adc
mov
sbb
push
mov
push
add
and
adc
xchg
nop
jp
mov
sbb
adc
jg
enter
and
ljmp
sub
lock
pushf
test
mov
mov
outsb
sub
pop
sbb
xchg
ret
mov
push
loop
and
fwait
xor
scas
fadds
jns
inc
xchg
dec
or
aas
pop
sub
or
mov
fbld
fwait
rcll
insl
sub
pop
and
xchg
ljmp
insb
lahf
js
in
shr
loop
push
fisubrl
shrl
outsl
sub
add
repnz
sub
mov
adc
rcll
pop
cltd
xchg
test
fnsave
inc
arpl
pop
jmp
adc
add
jp
xchg
test
mov
push
mov
adc
pop
adc
push
sub
mov
xchg
inc
add
daa
push
clc
test
imul
lock
test
repnz
fsts
sub
mov
inc
loopne
aaa
push
xor
mov
pop
lods
sub
and
jno
jnp
aaa
fiaddl
in
scas
stos
mov
test
xor
lahf
ljmp
shrl
push
les
add
dec
lock
adc
outsl
push
cld
lahf
cmp
jnp
mov
insl
xchg
inc
lret
fsubr
call
popa
dec
mov
cld
cmc
cli
mov
fdivs
jecxz
dec
jb
iret
pushf
add
xchg
inc
push
or
xchg
cmp
jmp
int3
andl
lds
cmp
xchg
xchg
ret
mov
lock
jo
xchg
ds
aaa
or
push
std
ss
insb
pop
das
sub
or
xchg
lock
mov
adc
jnp
add
push
jle
or
jmp
outsl
fildll
subb
and
notb
incb
lahf
test
inc
int3
sbb
pop
shlb
das
in
jno
loop
sar
bound
insl
shll
push
mov
lcall
xchg
sub
or
jge,pt
lahf
inc
dec
mov
bound
mov
hlt
mov
rcll
incl
mov
fcmovbe
mov
lods
push
and
loop
jg
pop
shl
sbb
add
ja
loope
test
mov
jb
in
pop
dec
mov
testl
mov
ja
add
push
cli
fs
mov
imul
mov
in
int
test
hlt
negb
xor
jae
jge
cmp
mov
cld
mov
dec
sub
divl
mov
xor
jl
icebp
arpl
xor
roll
test
addl
test
mov
adc
sti
cli
mov
lret
adc
dec
dec
pop
or
mov
xchg
prefetcht1
out
push
mov
pop
push
jmp
cld
es
pop
outsl
or
dec
cmp
sub
mov
sub
leave
mov
mov
mov
ficoms
and
jnp
sbb
cmpsb
loope
out
out
inc
mov
push
push
roll
repnz
clc
jmp
repz
test
mov
mov
decl
cmpb
leave
int
mov
xor
and
pop
adcb
or
inc
insb
outsl
pop
inc
addr16
adc
adc
out
scas
in
enter
and
push
test
push
pop
fstl
in
test
mov
cmp
add
adc
cmp
sbb
test
neg
push
jo
rcll
hlt
lret
pop
das
in
pop
filds
movaps
dec
jo
mov
in
add
int
pop
testl
loope
ljmp
pop
xchg
xchg
cmp
mov
pop
dec
pushf
fcomps
loop
and
rolb
or
fiadds
dec
insl
push
fsubrs
cmc
xchg
add
into
dec
mov
xchg
rorb
test
rcll
pushf
mov
push
pop
sub
repz
adc
jmp
push
sbb
stos
mov
pop
jnp
orl
jg
cld
sub
cmp
loope
adc
push
lods
adc
and
sub
loopne
xor
sub
pop
test
cmp
and
mov
mov
mov
xor
sbb
scas
and
ret
sbbb
jg
push
rcrb
adc
push
push
jno
push
scas
push
hlt
dec
add
xchg
in
mov
testb
jnp
jne
outsl
or
push
ss
add
popf
inc
cmp
sbb
xchg
pop
xchg
out
clc
iret
add
lret
ss
cmpsl
data16
mov
hlt
dec
xabort
xor
add
or
adc
fs
sub
aad
les
cli
push
xor
and
and
sub
stos
and
mov
inc
cmp
ja
jne
into
inc
call
sub
je
in
add
xor
jmp
pop
sub
test
sbb
fwait
inc
insb
jl
mov
mov
push
inc
lock
sub
ja
sbb
add
adc
insb
jb
aas
sbbl
add
ret
scas
test
negb
subl
daa
sbb
cmpsl
pop
fsubs
mov
sbb
jbe
insl
or
add
inc
popa
xor
jmp
sub
sbb
mov
xchg
ss
and
nop
movsb
data16
mov
sbb
rolb
ds
inc
rolb
pop
xor
and
push
push
in
ficoms
data16
cmpsb
sub
ficoml
cwtl
lods
and
add
sbb
or
ds
mov
and
dec
sub
out
ja
pop
cmpsb
inc
push
sbb
inc
jmp
inc
sti
xor
movsl
sbb
and
xor
out
inc
xor
movsb
dec
pop
mov
fsubs
inc
pop
or
or
leave
jmp
fsub
xchg
adc
sub
inc
daa
jb
test
add
in
aas
push
roll
mov
jge
and
xchg
adc
xor
addb
aam
and
ds
push
aad
push
inc
mov
and
xor
adc
sub
dec
rorl
scas
dec
push
cmp
or
push
sub
adc
fs
adc
ss
sub
inc
mov
xor
and
notl
inc
jns
add
fwait
push
fldenv
inc
mov
add
push
adc
sahf
sub
push
popf
dec
rcrb
in
and
dec
push
cs
sbb
mov
push
jo
int
insb
dec
push
cmp
cmp
mov
inc
int3
sub
roll
and
sub
pop
loopne
and
in
sbb
push
sbb
fadds
inc
lock
add
dec
adc
or
cmp
pop
test
stos
xor
push
sub
inc
push
inc
hlt
dec
insl
jecxz
or
mov
xchg
add
lahf
ljmp
or
or
inc
sub
inc
pusha
stos
cs
bound
push
icebp
loop
sub
mov
mov
fimuls
adcb
std
sar
push
movsb
push
dec
shufps
xchg
add
mov
cltd
or
xchg
dec
dec
add
mov
mov
xchg
nop
out
and
cli
fcompl
and
mov
or
push
push
cltd
lods
mov
add
aaa
and
and
inc
push
mov
cs
incl
jne
scas
dec
inc
cmc
dec
inc
cmp
jne
xor
pop
in
inc
jmp
add
ret
and
add
sbb
dec
test
insb
lret
sahf
sub
add
xor
push
into
sbb
dec
pop
cmp
int
adc
xor
inc
lds
mov
mov
test
mov
inc
and
in
ds
pop
bound
or
lods
imul
inc
aad
pop
lret
and
dec
rorl
cmp
call
subl
sub
mov
bound
loopne
icebp
or
push
cmp
clc
push
adc
loopne
jmp
repz
stc
mov
mov
or
mov
mov
loop
xor
add
dec
push
sbbb
sbb
ret
push
and
insb
ret
push
call
adc
or
adc
add
lea
or
jecxz
pop
mov
in
xchg
shrl
es
xchg
cld
orb
adc
sub
push
hlt
nop
mov
mov
mov
xchg
dec
xor
fsubrl
fadds
test
push
outsb
mov
aas
pushf
scas
dec
sub
shlb
sub
loop
adc
or
orb
iret
mov
and
cmpsl
adc
mov
add
ret
adc
or
mov
scas
rolb
test
andl
es
xor
or
hlt
adc
pop
dec
aad
je
adc
inc
mov
cmp
pop
shl
scas
dec
xor
mov
push
faddl
push
insb
dec
adc
add
rcrb
rcrl
cmp
aad
stos
aas
lock
sbb
jne
call
inc
xor
sbbl
std
adc
jmp
lahf
test
lock
enter
hlt
add
iret
sahf
mov
jnp
out
ja
adc
adc
lods
mov
jne
mov
data16
hlt
adc
add
aad
push
dec
icebp
mov
mov
and
push
push
int3
add
sarb
or
cmp
xor
mull
fcmovne
mov
addb
dec
and
mov
push
pop
rorl
and
bound
shrl
mov
cmp
cmp
nop
sub
sbb
call
das
sbb
cmp
and
jl
pop
adc
aad
or
mov
imul
jne
shrl
mov
inc
inc
or
mov
push
xor
mov
push
jno
push
adc
inc
adc
rcl
add
fisttps
push
jmp
add
addl
punpckhbw
push
pop
push
into
cmp
divps
iret
push
rcll
sbb
fmull
pop
sbb
adc
ljmp
inc
and
movsl
and
sub
mov
adc
jp
aas
or
jl
jmp
pushf
mov
push
subb
inc
and
cmpsl
lret
add
fiadds
push
jno
movsl
and
xchg
imul
leave
cmp
xchg
fwait
cli
in
adc
or
je
out
test
push
xchg
dec
jbe
add
sub
jo
dec
add
mov
add
add
andb
pop
mov
aaa
sbb
push
jb
lods
jo
inc
cmc
or
dec
and
movsb
das
cli
stc
sub
lret
mov
jae
xor
xor
pop
daa
mov
jmp
cld
add
daa
add
and
and
cmp
jo
pop
pusha
repnz
push
add
aam
jg
and
sbb
jge
iret
mov
roll
ss
stos
addr16
sbb
mov
shrb
jp
adc
pop
or
xchg
mov
xchg
or
mov
mov
or
into
faddl
loopne
xor
mov
pop
lea
and
sbb
mov
fdivs
xchg
add
push
daa
mov
cmpsl
mov
lods
lods
mov
sbb
xor
xchg
sub
fadds
or
inc
les
sub
es
outsl
bound
pop
xor
mov
loop
sbb
lds
cmp
data16
dec
mov
adc
xor
add
fdivr
mov
loopne
daa
sub
dec
std
jae
xor
xchg
lock
sbb
fisubrs
jp
in
and
mov
jmp
add
fdivl
cwtl
or
adc
ljmp
xchg
add
js
scas
mov
jae
mov
cmp
add
xchg
test
push
mov
stc
push
add
loopne
out
out
or
subb
push
xor
and
sbb
mov
or
adcb
add
in
mov
roll
orl
test
xchg
inc
roll
pop
push
popl
push
xor
or
xor
mov
dec
inc
dec
mov
xlat
sbb
ja
addr16
or
mov
test
add
or
and
inc
in
jmp
xchg
mov
imul
and
mov
and
adcb
adcb
push
push
adc
sub
pop
cmc
xchg
inc
pop
and
push
out
imul
push
and
cmp
sub
ret
mov
cld
out
loopne
inc
out
adc
inc
and
mov
mov
in
loopne
clc
movsb
inc
add
and
inc
mov
jp
push
jmp
push
test
test
jecxz
in
stos
add
push
xchg
orb
dec
imul
or
adc
lods
popa
mov
push
test
movsb
loopne
add
sbb
push
fsubs
sub
outsl
adc
add
test
and
andl
fbld
lods
xchg
adc
inc
test
aad
aaa
pop
add
ljmp
jbe
xor
aam
add
xchg
ficoml
aaa
fwait
cmpsl
cli
sbb
push
mov
in
add
inc
mov
shll
jnp
xchg
add
xor
push
rolb
jmp
aam
sub
pop
sbb
insl
addb
mov
adc
adc
shlb
test
insb
mov
sbb
add
inc
repz
lods
sbb
clc
cmp
leave
insb
lods
xor
les
jp
mov
add
dec
push
lock
sbbb
movsl
aam
sub
or
in
cmp
adcl
ret
jbe
cmp
in
and
push
sbb
or
adc
fists
dec
sub
sbb
jp
or
stos
icebp
mov
pop
xchg
cli
or
in
fmuls
in
pusha
cli
mov
sub
pop
loopne
fildl
test
sbb
inc
popf
adc
and
add
xchg
or
add
xlat
inc
lods
out
dec
inc
dec
mov
dec
pop
dec
mov
subl
sub
mov
cwtl
mov
pop
sbb
sub
fiaddl
popf
shrl
or
cmp
fcoms
dec
fcmovbe
push
fstps
xchg
sub
add
sbb
mov
repz
inc
repnz
cmp
and
xor
inc
jg
pop
dec
sbb
or
inc
stos
ret
and
aaa
lds
inc
lea
push
popa
mov
bound
inc
xchg
cmovae
or
cmpsl
push
add
in
and
cmp
stos
fwait
mov
add
adc
push
aad
popf
cmpsl
add
hlt
sahf
js
aad
xchg
fsubrs
stos
mov
pop
fbstp
xor
andl
roll
pop
inc
imul
adc
mov
add
fcoms
sbb
or
subb
adc
enter
push
daa
rcr
movsb
clc
mov
insb
icebp
pop
xor
shlb
adc
addb
sub
sahf
int
dec
andb
adc
shll
repz
or
stos
cltd
xor
mov
into
and
and
cli
fidivl
andl
iret
jmp
sbb
ja
or
ret
dec
adc
pop
testb
fs
shll
push
pop
sbb
push
clc
rcll
sub
xchg
test
dec
in
sub
lock
dec
rolb
dec
pop
xchg
movsb
mov
mov
dec
loop
xor
enter
or
fisubl
or
dec
test
xor
daa
lds
int3
rcl
out
dec
scas
cmc
or
dec
clc
jae
inc
andb
in
mov
sbb
push
.byte
jae
dec
in
jmp
jnp
enter
outsb
lods
cmc
lock
cmpsb
mov
scas
inc
mov
and
add
stc
fildl
adc
pop
pop
add
mov
sbb
in
fcomp
ret
and
add
push
ret
add
or
mov
add
adc
add
push
inc
add
adc
and
and
adc
jbe
mov
cmp
sbb
or
sbb
adc
sbb
dec
pop
imul
nop
sub
sub
lods
int
or
inc
adc
mov
arpl
jno
mov
ja
adc
adc
jle
mov
and
fcom
imul
and
mov
outsb
subl
or
inc
inc
mov
enter
nop
adc
xlat
mov
push
nop
or
bound
outsl
test
pop
cmp
fstp
pusha
insl
imul
mov
nop
pop
inc
xor
sbb
daa
pop
or
orb
or
or
orb
xor
inc
fisubl
fwait
pop
into
inc
nop
dec
and
or
aad
mov
add
adc
arpl
and
sub
mov
sub
sbb
mov
sbb
add
ljmp
mov
or
filds
fimuls
add
jmp
pop
in
xor
add
and
sbb
add
adc
xlat
inc
dec
or
mov
fsubs
mov
cli
mov
add
sbb
sbb
mov
adc
in
add
daa
sbb
jg
std
lret
add
jecxz
xchg
push
es
std
clc
dec
roll
sbb
mov
push
add
jmp
cmpsb
push
insb
fisttpl
inc
jnp
ret
mov
data16
sbb
or
lea
xor
mov
incl
pusha
jl
cmp
not
mov
mov
pop
outsl
xlat
add
jne
outsb
mov
push
mov
cmp
mov
mov
sbb
ret
dec
inc
dec
mov
mov
das
pop
shrl
ficompl
popa
insb
cmpsl
xor
xor
insl
jg
cmpsl
inc
add
lods
dec
pop
ja
fistps
sbb
or
adc
cmp
sbbb
mov
mov
mov
add
or
int
pop
add
mov
fdivl
mov
or
jmp
mov
pop
loope
and
mov
lret
pop
inc
jnp
fists
adc
adc
notl
mov
pop
stos
xchg
outsl
jg
pop
gs
jne
dec
xchg
push
dec
sarl
jbe
push
and
ret
fucomp
in
add
sub
mov
in
mov
or
sbb
ljmp
insb
xor
xor
sub
imul
xor
mov
lret
daa
push
jl
andl
or
adc
jmp
flds
mov
fcos
fcmovne
add
add
jne
push
push
mov
fistpll
sub
adc
in
loope
arpl
imul
rcrb
icebp
dec
je
cmp
or
pop
mov
add
push
mov
mov
add
add
sbb
push
or
xor
inc
sub
iret
in
sbb
jbe
dec
ficompl
repnz
inc
dec
xor
pop
pop
dec
addr16
mov
addr16
pop
cmp
jne
outsb
fnstcw
mov
inc
rcrb
stc
jg
test
ret
dec
dec
jae
rcl
arpl
sbb
xor
sbb
cmp
lret
sbb
notb
movsb
push
pop
inc
jg
not
pop
inc
sti
cmp
dec
or
and
add
out
adc
jmp
fdivp
xchg
jmp
adc
decl
or
decb
push
add
ficoms
push
out
dec
xor
mov
jge
push
inc
dec
inc
xor
mov
sti
push
pop
adc
xchg
outsl
jmp
rolb
push
out
movsl
mov
adc
add
decl
fidivl
add
add
in
cmc
add
inc
lahf
add
add
sbb
cmp
push
incl
and
incb
mov
sgdtl
cmp
movl
dec
add
imulb
outsl
or
das
hlt
add
add
xor
push
add
jnp
jecxz
out
cmpsl
adc
or
mov
incl
cmpsb
and
dec
or
mov
lock
push
add
lods
mov
idiv
adc
jecxz
test
mov
add
add
outsb
pop
jp
add
cs
dec
pop
int3
add
add
out
sub
mov
add
inc
scas
fisubrl
mov
scas
xchg
fdivl
jmp
or
add
or
incl
adc
push
add
sbb
xor
cmp
add
ja
mov
clc
les
jo
fsubrs
adc
adc
lahf
dec
pop
jae
dec
fcoms
sahf
inc
cltd
xchg
and
idiv
in
test
std
sub
mov
test
sub
push
insb
pop
cmp
xor
into
and
ret
add
jmp
cmp
push
add
xor
aad
insb
add
test
add
dec
cli
jg
fildl
stc
loopne
jmp
in
push
mov
lods
add
pop
or
incl
mov
xchg
push
jne
inc
lods
ds
flds
jb
incl
and
xchg
or
and
mov
and
or
jmp
es
pusha
pusha
xchg
jmp
repz
push
bound
fists
dec
call
and
inc
adc
incl
pushf
mov
mov
xor
fbld
push
out
mov
add
seto
aam
inc
adc
inc
sahf
fisubrs
fisttps
mov
add
fisttpl
fld
or
les
in
call
or
xchg
into
push
je
sbb
test
push
dec
xor
inc
push
adc
sbb
xchg
push
add
xor
jg
lods
sub
mov
or
mov
cmp
rolb
mov
pop
add
jbe
inc
out
fcmovnb
mov
bound
andb
or
xor
mov
add
or
add
pop
pushf
add
add
cwtl
add
sti
add
arpl
add
fiadds
pop
add
nop
adc
lgdtl
loop
add
ljmp
mov
popf
add
sbb
jle
scas
out
lea
push
loop
ret
mov
imul
sbb
mov
add
mov
loope
adc
jns
test
mov
or
sbb
sahf
outsl
lcall
mov
mov
add
add
mov
orb
or
inc
pop
mov
ja
mov
sbb
sub
je
push
in
iret
cltd
fimuls
repnz
add
dec
add
call
inc
add
sbb
mov
test
add
aam
aam
add
lea
insl
sbb
fadd
add
movsl
inc
or
push
enter
add
mov
dec
pusha
repnz
pop
orl
std
and
dec
jmp
cmp
out
dec
mov
aas
cld
inc
pop
mov
or
add
int
add
sahf
dec
cmp
sub
or
dec
mov
stc
icebp
lret
and
stos
add
rcrb
jnp
xchg
jb
and
jo
sahf
dec
call
fcmovne
inc
inc
add
sbb
sub
mov
mov
fildl
xor
rorl
stos
es
pop
push
ja
dec
push
push
sbb
std
ss
mov
mov
pop
and
sub
cwtl
adcl
aam
pop
add
cs
adc
aaa
out
insb
cld
pop
pop
pop
mov
jp
xor
sub
pusha
sub
lret
or
jns
cmp
pop
imull
call
lods
fadds
jbe
or
sub
or
je
jmp
clc
mov
into
mov
and
mov
mov
jmp
sub
sub
mov
inc
shrb
not
sti
aad
loopne
ljmp
fistpll
mov
push
mov
add
movl
loopne
push
sbb
loop
xorl
arpl
cmp
lcall
imul
fildl
xor
roll
pop
push
shrb
mov
imul
or
inc
add
arpl
mov
push
rorb
adc
add
ss
dec
xor
mov
cld
push
mov
mov
aas
mov
rorb
add
or
repz
and
adc
insb
scas
mov
adc
das
fsubrs
popa
xor
dec
add
ja
pop
int
cmp
ret
inc
cmp
or
and
lea
jne
sbb
sahf
cs
inc
adc
rol
xchg
dec
mov
out
out
pop
dec
rolb
stc
loopne
mov
pusha
mov
dec
clc
jae
daa
neg
lock
daa
outsb
sub
jg
mov
jne
xor
test
inc
repz
ds
popa
prefetchw
mov
and
jnp
les
rclb
mov
addl
mov
cld
add
out
outsl
pop
pop
cld
dec
rolb
mov
adc
add
xlat
fidivl
shll
out
mov
and
push
mov
cmpsb
xor
mov
sbb
mov
lret
jnp
mov
mov
or
pop
xchg
inc
sub
rorl
loope
sub
push
or
clc
jae
inc
cmpsb
xchg
fistl
or
popa
insb
jnp
dec
or
cmp
int
xchg
call
jns
arpl
pop
ret
rolb
sbb
clc
movb
adc
mov
mov
add
arpl
push
test
add
bound
aad
lock
pop
and
sbb
call
js
rolb
ror
insl
pushl
movsl
xorb
shr
jo
xor
in
add
stos
stos
and
in
shll
arpl
aam
cmpsl
arpl
int3
ret
bound
lret
insl
sarb
fidivl
int3
xor
push
xchg
fdivrp
es
dec
cmp
xor
dec
fistpl
dec
push
add
push
lea
push
push
jl
dec
xchg
fnstenv
lret
adc
dec
out
or
arpl
int
shlb
loopne
dec
xor
ret
rolb
repz
stos
push
jg
mov
ret
mov
fwait
or
mov
push
add
dec
loopne
adc
out
pop
xchg
mov
inc
mov
sarl
pop
rorb
sub
out
outsb
lods
mov
jmp
cli
enter
sbbb
out
loop
into
fs
jb
loopne
xchg
aas
or
inc
loopne
outsl
mov
fdivrs
fsubr
cmp
add
sbb
outsl
lock
popa
or
repnz
sti
insb
leave
pop
subb
lock
sbb
xor
jecxz
imul
test
das
xchg
pop
and
psrad
jl
ret
loope
pop
ss
rsm
and
dec
sub
pop
push
xor
fwait
add
lock
into
xchg
add
pop
dec
test
dec
jbe
xchg
clc
aaa
jmp
sub
lret
cmp
lods
sub
push
cmp
cs
andl
jg
adc
stos
int
add
push
and
jle
into
mov
ret
decl
test
adc
mov
add
outsl
pminub
adc
or
sarb
cmp
mov
outsl
outsl
or
loopne
sti
adc
xchg
adc
adc
enter
fistpll
insb
sbb
xor
cmp
icebp
and
loopne
sbb
jmp
add
cmp
movsb
inc
push
mov
jno
int
std
aad
leave
push
mov
shll
pushf
mov
je
sbb
push
xchg
movlps
sub
push
jne
dec
outsl
add
xor
dec
mov
test
stos
cwtl
movl
jg
adc
dec
mov
and
jno
das
aam
inc
inc
fists
les
push
adc
mov
or
and
es
pop
subl
sub
push
ret
mov
jae
jmp
sti
mov
sbb
pop
icebp
pop
rorb
loope
xor
pop
mov
mov
sbb
cwtl
inc
mov
mov
ss
dec
mov
movsb
into
cmp
jns
fstl
and
xchg
and
addr16
push
insl
aas
std
xchg
sbb
js
adc
pusha
dec
mov
sahf
mov
jb
add
dec
insb
mov
pop
inc
xlat
lret
mov
stos
pop
aam
dec
insb
movsl
faddl
add
push
mov
test
dec
mov
adc
or
cli
push
cs
mov
or
insb
adc
xor
js
movsl
xorb
out
inc
dec
cld
jge
test
sbbl
jp
pop
je,pn
out
outsl
imul
idivb
inc
pop
das
clc
int3
nop
nop
xchg
je
sub
pop
pushf
push
mov
push
jo
in
sbb
mov
jne
ja
fildl
shrl
push
lcall
pop
add
add
lahf
mov
insl
ja
loopne
orb
fldt
mov
mov
iret
insb
fistps
stos
mov
push
sub
mov
pop
jge
pop
pop
hlt
xor
jmp
add
mov
cwtl
pop
push
inc
arpl
sarb
je
cmpsl
adc
aad
adc
inc
mov
or
sub
gs
xchg
cmp
rorb
outsl
push
in
dec
and
mov
clc
or
sbb
mov
mov
subb
clc
outsl
ljmp
cs
loopne
push
nop
shll
dec
in
adc
or
push
and
push
jo
dec
ret
sti
mov
cwtl
sub
sahf
hlt
add
xchg
movsb
fsub
ret
icebp
mov
sub
outsl
push
fldenv
mov
sub
jb
jle
xchg
loopne
sbb
pop
and
or
mov
mov
and
ljmp
xor
and
popa
cmp
and
or
hlt
movsb
insl
mov
and
cmpsb
push
jg
push
icebp
mov
lods
movsl
jl
rcrb
push
insl
cmpb
inc
sub
subb
in
jp
sub
pop
pop
js
adcb
pop
sbb
jns
arpl
fisttps
int3
fidivs
cwtl
mov
mov
sbb
enter
add
lcall
pop
add
mov
dec
xchg
mov
cmp
jno
sbb
cmp
shl
adc
sub
sub
jge
bound
pop
xor
test
dec
mov
inc
jnp
or
fbld
lock
sub
mov
and
es
pop
subl
push
sub
adc
inc
int3
sbb
cmp
faddl
push
add
dec
fdivs
ss
sub
dec
inc
mov
mov
adc
movsl
jle
mov
inc
out
add
pop
rolb
arpl
fimuls
sbb
or
gs
pusha
shll
sahf
pop
enter
testl
pop
xchg
adc
and
sub
mov
out
dec
test
sub
and
xchg
mov
orb
hlt
in
mov
xchg
add
or
insl
mov
arpl
clc
or
mov
adc
and
jg
jbe
sahf
jne
and
not
inc
das
or
dec
dec
add
push
or
lods
lds
js
enter
push
push
fsubl
bound
pop
inc
out
adc
int3
scas
lock
fcmovb
loope
fnstenv
jl
shlb
dec
ljmp
fistpl
jecxz
adc
mov
out
popa
sbb
dec
mov
popa
scas
dec
mov
mov
push
xchg
or
inc
inc
inc
bound
mov
int3
fs
and
xchg
mov
and
sbb
out
fcmovu
mov
fdivrs
sub
sub
or
pop
loop
and
fbstp
xchg
add
pop
cmp
cmpsl
or
jo
adc
push
pop
leave
mov
push
push
pop
inc
clc
in
fistpl
or
cmp
cmpsl
cwtl
in
pop
lret
mov
xchg
hlt
and
inc
or
shl
out
cmp
mov
fimull
sahf
cmc
mov
jle
xor
loop
push
loope
xchg
stos
ret
mov
imul
test
lds
repnz
push
mov
mov
out
add
sub
sub
or
dec
sub
adc
inc
adc
push
imul
loope
pop
push
sbb
pop
sub
popf
lahf
in
lcall
mov
jp
mov
scas
dec
std
nop
lds
rcl
sub
stos
shl
test
ljmp
testb
test
mov
mov
add
lods
fcmovnu
jbe
data16
outsl
in
stos
inc
or
mov
filds
inc
cmp
jnp
adc
pop
inc
pop
sub
adc
and
fcmovu
bound
in
lret
lods
std
psubsb
add
lret
pop
cmp
add
inc
out
inc
jne
imul
mov
adc
sub
xchg
push
fistpl
aaa
jns
xor
js
sub
dec
stos
loopne
push
bnd
in
ss
push
adc
jl
test
lods
das
mov
adc
lock
ljmp
lods
xorl
rorb
jge
cld
imul
test
pop
scas
push
adc
jl
test
fsts
subb
mov
fadd
callw
pop
add
pop
fcom
push
imul
sarb
enter
mov
loope
push
cmpsl
movsl
fnstcw
in
ljmp
lea
ja
les
popa
ret
lods
xchg
loopne
ss
in
mov
out
push
fsts
push
mov
jno
aas
and
add
mov
add
popa
test
adc
xor
pop
nop
jg
add
lods
jo
pop
add
sbb
movsb
cmp
outsl
inc
mov
outsb
scas
xchg
jno
and
push
stos
std
mov
andb
add
lcall
dec
aaa
jle
jg
std
mov
adcb
mov
inc
dec
loop
js
sbb
test
add
fisubrs
sbb
ret
cmp
sbb
adc
sbb
hlt
inc
aaa
cmpsb
mov
in
cmp
pop
ljmp
mov
push
pushf
fwait
or
mov
dec
insb
ja
cwtl
adc
sti
rcr
xchg
aam
test
inc
out
fs
call
mov
inc
inc
dec
push
movsb
scas
fsubrl
clc
sbb
sub
clc
and
ja
sbb
inc
xor
adc
jg
inc
cwtl
fdivr
mov
nop
lcall
pop
int
das
cld
idivb
shrl
mov
adc
xrelease
or
popf
mov
add
push
std
mov
or
je
xchg
ret
xor
inc
sbb
mov
xor
jo,pt
xchg
iret
mov
loopne
aad
mov
mov
popa
mov
je
lret
and
mov
movsb
add
cmp
jg
jecxz
es
sbbb
adc
fdivrl
fadd
movsl
lds
xor
push
adc
movsl
mov
or
mov
mov
mov
push
jns
in
mov
lock
mov
pop
mov
mov
mov
fs
inc
xor
push
insl
lds
std
cmp
mov
pusha
aas
lods
cwtl
lret
sbbb
mov
addb
cmp
cli
roll
andb
daa
pop
in
daa
xor
inc
jne
pusha
pop
cmp
jne
sub
sub
loopne
lret
sub
mov
into
out
insl
sti
push
in
or
push
xor
add
xchg
fisubrl
add
scas
add
push
jge
and
es
ret
in
add
or
lock
fdivrl
adc
push
dec
bound
fbld
or
aam
sub
push
popa
mov
daa
rcrb
lods
jns
push
call
sub
aaa
inc
call
add
xchg
call
add
call
or
jns
xlat
dec
sbb
hlt
clc
add
ret
mov
jecxz
and
es
hlt
neg
cld
aad
fldl
jmp
shl
sub
inc
dec
fcomi
fcmovnu
push
cmp
jbe
mov
call
xor
das
mov
push
movb
add
outsb
and
adc
lds
pushf
push
mov
fstl
pusha
pop
cli
call
inc
fcomps
aas
push
data16
adc
add
inc
outsb
mov
rorb
lods
mov
jge
dec
inc
add
pop
mov
or
sbb
and
in
rorb
adc
add
add
jmp
sbb
decl
adc
or
dec
out
icebp
and
xor
js
movsb
cmp
rorl
incl
sti
int3
jbe
pop
lock
dec
or
xor
mov
mov
jo
fildll
test
in
add
adc
aas
stos
add
nop
cwtl
icebp
dec
mov
xor
mov
sbb
aam
inc
out
clc
sbb
scas
repz
xchg
pop
mov
or
int3
xor
add
mov
adc
arpl
repnz
fildl
cli
xchg
fsubrp
inc
loopne
or
shlb
pop
call
dec
lea
or
lds
in
xchg
or
hlt
mov
xor
inc
and
leave
and
roll
ds
lcall
inc
mov
fadds
enter
sbb
pusha
add
dec
xor
aaa
movsb
testl
push
fbstp
add
and
fsub
pop
or
les
pop
mov
and
insl
sbb
pushw
rcl
or
rdpmc
lock
push
mov
jge
inc
pop
shl
ja
or
aaa
mov
mov
dec
mov
ss
lea
dec
xchg
jb
mov
cs
cmp
adc
stos
adc
mov
mov
lret
pusha
inc
lcall
adc
std
call
push
mov
lret
mov
add
cli
test
or
movsl
or
lods
fcomps
negb
icebp
inc
pop
shrb
rol
xchg
dec
adc
jle
mov
jns
pop
mov
imul
mov
jne
fildl
adc
filds
lret
icebp
mov
cmp
fdivs
adc
aam
jp
or
cmpl
shll
add
pop
cmpsl
scas
out
loop
lea
add
mov
lds
ljmp
sbb
mov
loop
add
in
ljmp
lahf
call
cmp
or
inc
test
jl
call
js
call
xchg
in
fwait
jns
fadds
decl
rclb
or
push
out
shlb
add
xchg
adc
je
repnz
and
adc
aam
mov
or
stos
xchg
aam
nop
inc
push
hlt
sbb
mov
jg
and
sbb
jo
or
sbb
mov
pusha
xor
dec
mov
loope
cld
test
push
and
test
shll
bound
mov
jge
mov
mov
push
das
hlt
dec
xlat
outsb
jmp
and
rol
clc
mov
mov
das
pop
ret
sbb
pusha
loop
sbbl
or
xchg
push
xchg
xor
adc
cmpsl
jl
test
or
mov
lea
jl
loope
mov
andl
test
sub
out
fimull
pushl
lock
jecxz
rol
cli
cs
or
cmp
push
push
fnstsw
stc
lcall
add
fwait
push
pop
mov
insb
mov
mov
pop
fistps
loope
lea
cmp
or
inc
shll
mov
jno
sbb
pop
add
adc
in
and
jne
sbb
enter
mov
adc
adc
inc
or
pop
cmpsb
and
mov
inc
jmp
push
lock
sbb
arpl
add
sbb
call
dec
sub
and
fwait
mov
inc
les
mov
das
cmp
mov
mov
sub
xchg
repnz
pop
dec
arpl
repz
push
cmp
or
adc
push
into
out
xor
mov
sarl
push
xor
push
sbb
jge
lock
pop
inc
inc
push
das
cld
or
and
nop
mov
add
aam
clc
inc
cmp
popa
rorl
jno
sbbb
or
add
add
xor
xchg
dec
pusha
push
and
xchg
xor
add
sub
push
dec
adc
daa
or
rclb
push
xchg
clc
aas
fimull
lea
cmpsb
cmp
push
jg
ret
pop
jge
and
mov
add
nop
loop
mov
pop
mul
lods
inc
jg
xchg
sahf
cmp
popl
pusha
addl
adc
push
lods
aaa
and
ror
loop
les
jns
xchg
pop
mov
rcll
add
imul
ret
xchg
iret
imul
or
xlat
insb
fsubs
mov
jle
rorl
test
das
or
fisttps
inc
aam
fnstcw
mov
out
mov
mov
add
psllq
add
aaa
lock
cmp
fcomps
xor
aam
pop
fistps
mov
shr
add
aam
insl
xor
daa
xchg
and
mov
or
mov
or
push
outsb
loope
adc
movsb
jl
and
mov
loopne
sbb
add
clc
hlt
jmp
lods
clc
les
lock
test
shrb
ret
fildl
add
movsl
mov
and
ss
loop
jns
and
sub
push
inc
roll
push
inc
inc
fidivl
aas
jo
loope
psubsw
sarb
idivl
sbb
sarb
mov
subl
outsl
arpl
add
ret
add
insl
inc
decl
fwait
in
adc
or
mov
mov
adc
roll
mov
mov
add
pop
sbb
lock
mov
push
dec
in
cmp
or
test
jle
test
rclb
push
dec
and
jnp
adc
or
sbb
inc
push
notl
pop
hlt
orb
mov
sub
mov
or
mov
and
or
mov
shll
sbbb
xor
inc
mov
decl
pop
mov
inc
sbb
aaa
mov
rcl
fsubs
xor
in
mov
mov
mov
or
repnz
test
iret
xchg
imul
in
loope
jbe
cld
adc
mov
sbb
xchg
lea
push
inc
sub
push
pusha
add
or
in
in
jno
pop
call
or
jecxz
mov
inc
or
lods
push
xchg
faddl
ret
jg
sbb
fisubs
mov
adc
nop
lcall
call
lea
ret
mov
jns
gs
cmp
lcall
cld
daa
xlat
add
push
iret
out
mov
push
lds
inc
faddl
ljmp
icebp
loop
push
int
push
mov
outsl
setbe
out
inc
inc
adc
dec
add
jg
into
xor
pop
sti
dec
test
repnz
subl
xchg
add
pop
scas
push
pushl
out
lea
mov
outsb
mov
cmp
or
or
mov
test
stc
addb
mov
ljmp
xor
lret
push
incl
das
add
leave
test
inc
mov
add
mov
cmp
pop
aad
adc
sub
push
loop
add
xchg
jmp
cmp
aaa
sbb
sahf
mov
mov
cltd
cmpsb
adc
add
jno
lcall
cmpsb
push
or
add
pushl
stc
xchg
popa
add
andb
int
mov
push
add
pop
inc
ficompl
mov
push
test
loope
out
sarl
add
cmc
mov
lahf
inc
and
add
cmp
ret
adc
stos
add
pop
idivl
in
push
icebp
lcall
cld
adc
cmp
loop
adc
mov
mov
dec
inc
xchg
iret
pop
sub
or
or
add
sbb
imul
ss
mov
inc
pop
jns
lock
pushl
jno
jp
pop
pop
and
mov
mov
out
mov
or
call
jecxz
jae
sub
xor
jmp
lcall
pop
insl
inc
and
cmp
add
les
lcall
popf
sbb
mov
xchg
in
xchg
adc
pop
fildl
insb
fcoms
dec
xchg
test
imul
rorl
push
jecxz
leave
loope
jno
fistpl
adcl
and
cmp
add
mov
and
push
outsb
pop
aas
and
mov
push
or
das
inc
push
xchg
or
xor
pop
loop
pop
mov
push
lods
movsb
subl
inc
mov
push
jge
pop
ret
sub
inc
cwtl
dec
mov
orl
addr16
adc
or
dec
cli
pop
sbb
push
mov
rcrb
xchg
jle
inc
pop
ds
les
inc
xor
cwtl
add
cli
test
sbb
jge
dec
daa
aaa
jb
enter
xor
add
push
sarl
xchg
xor
loopne
and
xor
ret
and
daa
js
jmp
adc
push
xor
jb
fstps
push
mov
fcoml
jl
jne
xchg
push
call
int
fldcw
pop
call
stos
fcompl
cli
adc
enter
jo
jae
insb
pop
jge
ss
xor
fdiv
adc
mov
arpl
sub
xor
add
cli
and
incb
cltd
in
fidivrl
mov
mov
mov
push
lock
push
add
mov
imul
aad
iret
fstl
dec
add
push
xor
xor
ss
cmp
repz
fdivl
push
pushf
testl
add
or
hlt
add
lock
mov
fsubl
les
outsb
push
fmul
les
adc
nop
or
lock
nop
call
pop
std
inc
cmp
xchg
cmpsl
icebp
or
lds
shll
pop
xor
loop
and
add
test
sti
and
stos
dec
push
add
xchg
fisubl
or
push
js
lock
ljmp
sub
push
fnstcw
push
inc
xor
add
or
or
adc
adc
inc
xchg
dec
dec
les
iret
out
pusha
inc
fstp
cwtl
repnz
inc
int3
or
incl
add
push
pusha
inc
xor
leave
test
les
shll
test
sbb
adc
lock
jmp
sub
inc
inc
inc
jno
mov
xchg
adc
or
imul
cwtl
adc
dec
outsb
cmp
and
sub
hlt
std
cwtl
das
aam
xor
gs
add
das
pop
push
xor
xor
lcall
out
enter
aas
test
push
add
pop
loopne
adc
or
cmpsb
cltd
stc
lahf
dec
add
test
inc
ljmp
rorb
add
clc
mov
pop
xor
xor
jl
mov
shlb
sbb
jg
push
aad
sub
jne
add
aad
jns
cli
cmc
std
push
pop
sub
push
jg
sarl
add
cli
mov
lret
jns
add
repz
fcoml
inc
in
int
call
and
push
jb
repz
das
jmp
sub
push
cld
add
pop
fiadds
mov
and
pop
jl
cmc
scas
jg
stos
hlt
jl
mov
fnstcw
mov
mov
add
shrl
dec
jg
out
push
xchg
sahf
pop
adc
bound
rcrl
push
int3
aam
add
loopne
popf
nop
add
test
loope
cmp
cs
mov
orb
les
sub
sbb
jmp
pop
lahf
mov
add
mov
hlt
add
jp
std
aad
idivb
fmul
cmp
roll
add
iretw
test
mov
inc
aas
xchg
cmp
jg
idivb
add
adcb
outsl
inc
add
add
pop
std
jbe
or
popa
and
dec
mov
lret
add
movsb
dec
xchg
cltd
xor
cmp
je
sbb
lds
insb
outsl
and
adc
pop
or
cli
add
push
lcall
in
arpl
fidivs
fdivr
jg
imul
add
mov
mov
push
inc
clc
jg
incl
inc
sbb
xor
cmp
sbb
dec
int
mov
cli
mov
ror
sub
adc
rclb
fistpl
or
and
lcall
mov
imulb
pop
popaw
pop
mov
fcomi
pop
pop
push
pop
outsb
sbb
jbe
and
add
into
sub
decl
xchg
iret
add
popa
sub
mov
or
jg
or
mov
jmp
addb
mov
lods
ljmp
fiaddl
into
add
mov
movsb
loop
ficoms
add
sub
push
dec
mov
pop
ret
mov
test
shll
or
repz
pop
mov
loop
dec
mov
jo
fucomp
ds
xor
aaa
fcmovnbe
lods
insb
pop
add
adc
cmc
pop
cmc
mov
cmp
cmp
add
add
cmp
ljmp
outsl
push
out
push
shr
add
add
jp
xchg
add
adcb
adc
test
pop
gs
cmp
and
add
or
or
push
cmp
scas
or
pusha
jmp
out
add
sub
pop
mov
loopne
shl
cmp
add
mov
push
and
pop
dec
sbb
cmp
cmp
adc
out
sbb
push
pop
xor
sbb
xlat
adc
sub
jmp
fstl
or
push
call
shrb
shl
fimuls
lock
loop
fwait
in
fists
sub
addb
test
push
jno
or
call
loope
call
dec
sub
push
and
inc
xlat
pop
mov
loopne
mov
mov
pusha
loopne
into
ret
movsl
cmp
sarb
shll
pop
int3
xchg
xor
pop
pop
outsl
loopne
and
adc
and
mov
pop
sbbl
loopne
jnp
and
ret
dec
jge
jo
das
jbe
sub
sahf
push
sbb
andl
les
das
push
mov
setle
inc
loopne
lret
inc
pusha
add
popf
dec
inc
mov
cwtl
jp
sub
push
mov
pop
lock
mov
mov
int3
push
loopne
cwtl
jnp
ficompl
pop
loop
rcr
push
js
stc
xor
fptan
xchg
and
sbb
jmp
push
jg
xchg
frstor
ljmp
mov
pop
pusha
aas
sbb
cmpsb
or
jno
call
xchg
shlb
ja
lcall
inc
inc
jle
xchg
lcall
call
incl
ret
mov
push
pop
pushf
add
enter
inc
out
mov
ljmp
xchg
mov
push
cmp
pop
lods
jae
mov
sbb
lea
sub
xor
or
fistps
or
and
cltd
imul
icebp
ret
push
outsl
jge
inc
mov
loopne
inc
inc
xchg
int3
mov
push
add
test
add
fistl
push
lock
push
sub
mov
sub
adc
cmpsl
ja
sub
xor
aad
aad
pop
lcall
push
sub
cli
mov
mov
scas
xor
arpl
adc
rcr
cmp
add
cmc
push
jl
pop
add
add
xchg
xor
test
ljmp
lods
sub
or
insl
mov
pop
mov
cmp
lahf
leave
addl
mov
stos
loopne
push
adc
mov
in
xchg
insl
xor
sbb
pop
and
add
xchg
sub
push
js
mov
dec
adc
sahf
adc
test
outsl
pusha
add
or
inc
scas
push
addb
adc
fbstp
clc
add
pop
mov
int3
sub
mov
cmp
aas
cltd
adc
mov
mov
int
jns
mov
mov
inc
shrb
cltd
mov
pop
call
dec
sbb
xor
es
clc
add
inc
shrb
adc
push
mov
mov
popa
orl
pop
mov
pop
clc
test
push
nop
xchg
adc
jg
or
push
xchg
out
cmc
leave
fnstcw
fcompl
movsl
outsb
in
inc
les
lea
ret
mov
xchg
cmpb
cmp
sbb
cld
lock
flds
and
je
xchg
push
ss
inc
cmp
aaa
aad
xchg
or
mov
je
rcll
dec
jb
xor
fstpl
orb
and
cmp
jl
pop
jl
cli
xchg
fsubrl
outsl
daa
add
xchg
pop
inc
pop
js
shll
add
add
add
loop
out
cmp
jbe
xchg
jg
dec
mov
test
add
mov
pop
bound
and
into
cs
mov
stos
idiv
cmp
sbb
jmp
call
pop
je
out
push
sub
push
jmp
ljmp
mov
into
or
adc
cld
int3
daa
data16
cwtl
mov
mov
mov
cltd
outsb
adcl
sti
das
mov
rcrb
inc
jns
out
mov
ret
mov
in
sub
jne
adc
cmp
mov
pop
mov
stos
add
negb
je
add
mov
or
xchg
movaps
xor
jl
mov
xchg
or
cmp
mov
fs
dec
sbb
pushf
fwait
adc
lret
jg
insl
rolb
mov
faddl
sbb
mov
pop
fdivrs
xor
add
mov
adc
jecxz
stos
xor
mov
clc
in
aaa
sub
pop
adcb
cltd
mov
cmp
or
clc
mov
pop
push
mov
xor
aas
mov
aas
call
mov
sarl
shll
int
pop
or
mov
call
test
or
inc
adc
jbe
jp
pop
push
das
decb
movsl
or
mov
lds
push
pop
jge
push
mov
jmp
jge
jae
into
push
out
cld
outsl
sub
ficompl
jmp
sbb
decb
je
sahf
pop
inc
cmovno
cltd
push
movsl
inc
shrb
aad
or
inc
fwait
ds
jmp
ret
pop
sti
sub
jns
sar
inc
dec
inc
bound
xchg
push
inc
mov
insb
loopne
push
aam
lret
and
cmp
lock
jg
jns
dec
mov
test
movsb
iret
div
fwait
out
jle
paddusb
or
xchg
out
std
mov
clc
dec
pop
std
das
pop
sub
mov
lds
adc
xchg
ss
insl
or
in
and
ret
ret
outsl
push
xor
test
adc
adc
xchg
imul
test
and
sub
icebp
or
push
xchg
mov
pop
hlt
aaa
es
cmpsl
mov
andl
dec
mov
pop
jmp
shlb
cltd
add
hlt
mov
inc
or
cmc
mov
loope
cwtl
xchg
scas
out
mov
jecxz
or
nop
lret
pushf
sbb
lea
call
int3
jbe
shll
movb
data16
mov
sub
dec
arpl
cmc
mov
call
in
mov
mov
xchg
add
aam
faddl
jo
fisttpl
add
adc
sub
and
pusha
stos
test
sbb
mov
call
push
jg
fildl
outsw
cwtl
mov
pop
aaa
dec
and
inc
and
xchg
or
outsl
or
lret
test
xchg
out
out
xor
mov
adc
and
clc
lret
les
and
jl
adc
add
inc
mov
mov
shll
mov
les
and
pop
jge
sbb
loopne
vpsrad
in
pop
cs
or
das
cmc
push
rcll
xor
imul
lret
hlt
aam
add
cmp
icebp
sub
mov
mov
movsb
jmp
ljmp
push
adc
dec
mov
mov
aam
orb
xor
pop
sbb
outsl
push
mov
pusha
into
dec
stc
fcompl
inc
add
ficompl
stc
jbe
dec
lods
shll
mov
inc
addps
or
sbb
jbe
push
out
pop
xchg
mov
cmp
dec
outsl
or
aad
pusha
and
mov
fisubl
hlt
dec
data16
int
rorb
int3
rol
outsl
inc
subb
cwtl
fmuls
aad
mov
movsl
push
movl
xchg
add
and
cld
sahf
test
je
or
clc
or
movsb
pop
int3
add
mov
mov
and
mov
mov
cmp
ljmp
out
xorb
adc
fcomip
mov
insb
popa
dec
inc
inc
add
mov
fbstp
cs
inc
mov
addr16
sub
xchg
add
mov
mov
jbe
mov
add
mov
int3
and
mov
pop
mov
js,pn
data16
or
push
bound
jo
sub
out
mov
sub
push
imul
subb
sub
call
dec
xor
mov
jge
inc
lock
add
pop
push
and
lret
sbb
add
push
in
sbb
mov
cmpsl
subl
jmp
and
and
lret
je
push
xlat
add
jns
pop
inc
loopne
or
jl
and
loope
test
stc
movsb
pushf
cmp
and
fnsave
sarb
adcl
push
mov
scas
and
roll
pusha
xchg
pop
in
add
int3
jecxz
movsl
sbb
mov
push
add
jge
fwait
dec
or
out
xchg
lret
jae
sub
in
add
data16
mov
xor
pop
dec
sbb
jmp
mov
mov
daa
xor
adc
iret
les
pop
xor
mov
pop
dec
ljmp
inc
pusha
inc
mov
sarb
mov
jle
loopne
mov
ja
idiv
xchg
dec
push
loopne
rcrb
xor
and
sbb
sub
mov
rcrl
inc
fadd
mov
add
mov
mov
test
ret
dec
jns
cwtl
and
pusha
mov
pop
mov
in
jo
or
sub
or
or
mov
or
inc
adcb
bound
repz
es
mov
add
add
cld
push
add
fidivl
popa
xchg
pop
adc
test
pusha
pop
out
sbb
into
mov
dec
mov
pop
xor
cmp
test
or
mov
ss
insl
jnp
insb
sbb
ret
and
clc
push
push
push
inc
xchg
mov
das
lret
sub
addl
inc
ret
lahf
lock
jbe
ret
xorb
adc
dec
sbb
sbb
inc
out
jnp
nop
or
cwtl
lea
pop
lods
cmp
push
and
in
insl
push
inc
jb
mov
out
inc
ljmp
ljmp
scas
loop
sbb
lds
mov
xorl
adc
pop
xor
inc
int
xor
aam
insl
rcrb
fucomi
push
inc
inc
jb
sub
adc
repnz
nop
adc
or
push
mov
pushf
inc
or
pop
or
dec
dec
in
lock
pop
rcrl
cmpsl
es
inc
je
sbb
cmp
inc
ja
adc
aas
ret
and
aas
movsl
xchg
push
and
mov
push
push
jecxz
xchg
mov
xor
clc
clc
dec
shll
iret
adc
out
push
sub
lea
lret
movsl
xchg
pop
lods
mov
stos
jmp
das
mov
jne
aam
pop
aad
push
ljmp
adc
or
ljmp
jae
jg
aam
lock
bound
loope
mov
call
mov
out
out
sub
cld
std
ljmp
jmp
xchg
sbb
push
xor
inc
xor
das
xor
mov
bound
ljmp
test
jle
jae,pt
ret
fisubrs
stos
jae
adc
lret
sbb
icebp
mov
lds
xchg
nop
mov
das
bound
js
push
int3
call
js
aam
mov
loop
xchg
cmp
mov
cli
dec
insb
sbb
cmpsb
inc
add
xchg
std
add
cmpsb
cmp
push
mov
sub
push
ss
decl
das
dec
adc
inc
in
int3
add
push
mov
mov
dec
pop
call
js
push
mov
pop
icebp
sbb
mov
in
repnz
mull
addr16
nop
in
push
incl
stc
cmp
or
cltd
cmpl
mov
lret
mov
dec
pushf
and
and
add
outsl
outsb
jbe
adc
inc
jecxz
push
xchg
jl
divb
xor
pop
pop
sbb
mov
daa
and
lcall
fists
sub
inc
or
sti
ffreep
inc
dec
iret
cmp
pop
and
mov
sub
dec
rol
adc
pop
rclb
mov
ret
push
mov
cmpsl
xorb
jecxz
mov
bound
pop
mov
dec
adc
wbinvd
xor
xchg
add
add
xchg
out
push
mov
inc
add
push
sbb
adc
pop
xchg
mov
mov
cwtl
jp
add
sbb
ret
loopne
mov
decl
mov
mov
sbb
mov
mov
in
add
cmp
rclb
mov
out
mov
outsl
incb
hlt
push
fsts
call
pop
sub
add
enter
push
add
xchg
aaa
sbb
addr16
roll
std
sub
enter
mov
andl
je
add
out
fstl
insb
fisubrl
inc
mov
lret
or
adc
loopne
scas
rcrb
or
or
adc
bound
js
mov
jne
fisubl
and
cmp
and
adc
pop
add
cmp
jo
into
dec
xor
add
mov
cmp
dec
or
outsl
xor
cmc
and
push
rorb
repnz
int3
or
test
stos
ss
sub
pop
xor
add
rorb
out
pushf
mov
xor
es
adcl
add
sahf
cmp
or
pop
and
pusha
ret
shll
mov
ds
rcl
punpckhbw
data16
inc
xor
outsb
xchg
push
mov
add
add
cmp
repnz
sub
adc
inc
inc
pop
decb
dec
dec
adc
out
mov
jge
int3
enter
push
xor
xchg
mov
bound
mov
lods
jmp
cwtl
subb
or
fisttpl
outsb
pushf
dec
jnp
fs
popa
imul
cli
push
dec
adc
jae
imul
push
push
lea
xor
and
dec
ds
outsb
outsl
fstl
push
int
cmp
insl
ret
ljmp
jle
push
dec
pop
mov
call
mov
notb
add
push
cli
outsl
inc
movsl
test
cmp
incb
fpatan
dec
scas
je
and
jns
es
insl
jne
pop
or
inc
pop
push
cmp
orl
pop
aaa
and
ret
adc
sub
lcall
andl
sub
sub
jno
lahf
jp
popa
fildll
fs
inc
aas
xchg
shlb
test
andb
int
fcmovnbe
outsl
cmc
mov
mov
mov
adc
idiv
outsl
enter
fcoms
mov
jo
dec
mov
mov
or
aas
xor
clc
inc
push
int3
xor
pushf
pop
out
cmp
hlt
ret
jmp
inc
test
jo
testl
das
adc
nop
loopne
jg
push
mov
leave
sub
fdivl
loopne
int3
sub
mov
dec
push
jge
xchg
dec
add
pop
scas
inc
aas
push
pop
push
cmp
xor
std
fildll
ret
xor
jne
inc
add
out
inc
and
cmp
xchg
imulb
cld
or
xor
cmp
mov
cmc
jge
loope
mov
bnd
sub
fidivrs
andb
pop
iret
inc
std
sub
ret
fistpll
mov
loope
add
clc
mov
add
bound
mov
inc
push
dec
pusha
xchg
sahf
or
mov
jmp
dec
jecxz
fs
stc
ret
or
and
out
in
imull
sbb
cs
mov
push
into
xchg
icebp
jp
and
aas
sbb
lods
cltd
dec
inc
gs
movsl
loop
mov
xchg
das
incl
cmc
mov
rcll
and
notl
pop
mov
add
imul
jl
sarb
pop
int
pop
call
cmp
jmp
cmp
pop
inc
push
aad
shll
outsb
pop
jne
ret
inc
clc
pop
or
and
jl
or
loope
mov
push
mov
add
mov
les
push
pop
out
aad
pop
inc
fmulp
xor
in
xchg
sbb
dec
gs
movsb
sbb
adc
ror
and
out
push
jne
push
xchg
cmp
adc
test
rorb
sbb
sbb
sub
out
pop
popa
idiv
adc
jecxz
loope
push
inc
ret
leave
pop
inc
mov
enter
adc
mov
setp
movsl
aad
int3
pop
or
jne
mov
pusha
dec
dec
call
cld
ss
push
add
add
jg
test
add
dec
int3
mov
adc
test
push
fildll
or
pop
dec
mov
xchg
mov
cld
mov
outsl
fnstcw
icebp
ret
xchg
gs
mov
cld
dec
jle
push
dec
sub
loopne
je
or
jns
add
arpl
mulb
and
add
test
lret
aaa
mov
data16
fcos
fldt
or
xor
sub
cmp
push
fistpll
movsb
adc
scas
push
xchg
cli
popf
loopne
push
test
mov
pop
jp
in
scas
and
inc
arpl
adc
jns
add
mov
xor
nopl
pop
jg
dec
insb
clc
lods
push
roll
cmp
mov
ljmp
jl
add
shlb
lock
xchg
xchg
xchg
insb
mov
ds
add
jno
xchg
mov
sbb
ret
inc
dec
push
and
xchg
adc
stos
or
inc
mov
and
ljmp
xchg
fisttpl
mov
or
sbb
sahf
inc
iret
dec
outsl
icebp
jge
jg
outsl
cmp
or
fildl
dec
mov
shlb
xchg
lret
in
jae
adc
inc
js
loopne
dec
lock
xor
mov
out
adc
icebp
sbb
inc
adc
fisttpll
pop
or
and
xchg
jnp
ficoml
rol
fcomps
jge
mov
clc
mov
cwtl
dec
add
iret
push
clc
add
push
push
aas
xor
pop
sbb
cmp
xor
insl
cs
jge
pop
mov
daa
mov
inc
dec
addb
pop
cs
ljmp
mov
lods
add
or
mov
mov
xchg
jnp
jp
xor
xlat
push
cs
add
out
cmp
aad
les
addr16
pushf
mov
push
jns
and
or
add
test
add
flds
sti
sahf
pop
or
mov
subb
mov
lock
int3
dec
adc
mov
addr16
jnp
mov
jae
sti
ds
sti
or
mov
sub
mov
popf
xchg
popa
arpl
pushf
sbb
cmp
in
outsl
popa
adc
scas
or
es
dec
inc
out
xorb
ficomps
fsubp
mov
xor
xor
dec
mov
add
dec
stos
add
dec
imul
aas
gs
loopne
call
loop
std
neg
inc
out
addb
mov
es
cmp
pop
std
movsl
and
mov
xchg
pop
in
or
add
shr
xor
and
outsb
jae
out
scas
push
cmpb
ljmp
test
fsubrl
sbb
insb
inc
std
call
in
je
cwtl
push
cmp
and
data16
les
rolb
xor
add
push
adc
outsl
sub
mov
fiadds
mov
outsl
insb
aaa
dec
fnstenv
jecxz
jg
sub
jmp
and
sahf
dec
and
xchg
sbb
push
enter
pop
add
bound
shrb
jecxz
shlb
push
repz
cmc
ljmp
or
popf
mov
dec
scas
inc
das
rolb
jnp
inc
enter
or
js
pop
mov
mov
loopne
add
loope
sbb
xchg
clc
incl
outsb
mov
xor
jno
mov
cli
das
cmc
add
cmc
negl
and
lcall
mov
xchg
lret
loop
bound
popf
mov
xor
ja
sub
inc
popf
and
pop
cmc
mov
les
push
mov
icebp
in
rolb
adc
xlat
pop
js
pop
xchg
hlt
fs
loope
jmp
out
es
nop
adc
mov
mov
mov
or
xor
pop
fbld
mov
jg
clc
mov
test
or
cmpsb
mov
mov
mov
test
inc
pop
rclb
clc
incl
getsec
mov
mov
xchg
xor
dec
dec
and
add
lcall
js
jl
inc
aam
cli
xchg
adc
imulb
sub
xchg
stos
nop
subb
push
pop
adc
mov
cwtl
xor
movsb
jnp
xchg
clc
or
iret
je
xlat
lock
mov
cmc
mov
lods
push
sub
jbe
or
inc
fucom
das
clc
mov
pop
jg
inc
decl
aas
mov
xchg
add
loop
pop
push
push
dec
sub
lock
add
sti
icebp
daa
jns
test
rorb
cltd
fwait
stos
insb
sub
in
push
ljmp
cld
in
pop
add
push
aaa
push
test
add
mov
dec
in
push
pop
mov
das
dec
aad
divps
mov
pushl
loop
aad
mov
mov
sub
pop
add
adc
sbb
insl
dec
les
rolb
out
add
shrb
adc
pop
fnsave
std
or
imul
or
pushf
repnz
insb
int3
mov
addr16
push
mov
jne
loopne
mov
add
in
or
and
les
fiadds
fisttps
xor
sub
add
jae
inc
cmp
lods
gs
fcompl
jb
outsb
icebp
aaa
xchg
push
inc
mov
stc
mov
sbb
dec
dec
xlat
das
les
jge
lods
inc
shlb
cmp
fiadds
std
popl
sub
cmp
pop
stos
out
bound
inc
stc
or
or
mov
xor
je
add
cmpsl
push
mov
lds
jbe
sbb
push
jbe
sub
fwait
jne
push
addb
inc
cwtl
inc
xor
rorl
arpl
add
out
xchg
addl
loopne
in
in
sbb
inc
jne
fistps
sti
lods
fxch
inc
cld
mov
sub
clc
push
faddp
and
insb
pop
add
inc
gs
inc
mov
adc
push
adc
mov
mov
je
push
ja
mov
jge
mov
je
rorl
outsl
fs
cmp
jl
in
push
cmpl
push
lea
flds
imul
dec
mulb
fadds
jne
iret
insb
rclb
mov
fildl
pusha
push
mov
jp
xor
ret
xor
mov
cmp
int
pop
pusha
adc
mov
sbb
ss
sbb
or
fdivrl
andb
testb
xchg
inc
xor
testl
arpl
pushf
fwait
les
test
movsl
testb
loop
fstpl
adc
into
xchg
or
mov
dec
loop
hlt
mov
adc
mov
and
mov
mov
roll
int
push
xchg
pop
fdiv
daa
mov
or
pop
mov
mov
jl
popf
xor
ljmp
decl
jns
inc
adc
mov
sub
mov
mov
decb
push
adc
lds
adc
adc
dec
and
xor
fs
cmp
stos
cmpsb
aad
or
pop
push
arpl
sub
adc
cltd
aad
push
bound
and
xchg
add
loope
push
jbe
mov
adcb
mov
push
and
insw
push
adc
sbb
inc
and
leave
sbb
push
cwtl
mov
adc
add
jae
add
pop
int3
or
mov
fadds
jge
mov
pop
sti
mov
push
lcallw
pop
cwtl
rolb
les
les
push
jmp
int3
sbb
mov
sub
push
fs
fldl
push
inc
pop
loope
pop
push
ficoms
test
lods
inc
add
add
rol
pop
mov
add
or
and
aad
mov
add
or
int3
pop
icebp
xchg
repnz
mov
pop
pop
cmp
jno
jne
roll
mov
mov
xchg
popf
data16
xor
cmpsb
sbb
or
or
mov
mov
xor
push
dec
shl
outsl
xor
lahf
dec
push
cmp
sub
dec
xchg
sbb
fidivrl
xchg
or
aaa
mov
add
or
into
mov
push
inc
test
cmpsl
arpl
and
out
aam
sbb
add
js
cmp
mov
cmp
pusha
xor
adc
fnstcw
and
adc
ja
fisttpll
icebp
stos
sbb
test
fdivl
push
sbb
push
sarl
lcall
es
jecxz
xchg
loope
inc
call
add
imul
rcrb
outsl
xchg
hlt
test
adc
sbb
dec
mov
andb
dec
bound
sub
mov
incl
push
xchg
scas
or
cwtl
mov
out
dec
in
out
xchg
inc
pop
fsubrl
lcall
jae
adc
mov
into
and
ret
sub
es
stc
andb
sbb
push
and
cmp
fwait
xor
test
mov
test
test
loope
cltd
push
mov
mov
inc
dec
jne
cmp
mov
fistpll
dec
shlb
lcall
jne
add
add
jle
shrb
adc
mov
int3
and
fldcw
rcr
mov
lock
das
and
or
or
daa
pushf
mov
in
in
out
fldcw
xchg
adc
out
daa
lcall
lret
cmp
mov
push
xchg
adc
sub
mov
stc
add
int3
in
shl
flds
aad
popa
adc
add
add
xchg
loopne
add
shlb
pusha
sub
lret
arpl
dec
add
lods
add
inc
test
rolb
add
scas
rcrl
inc
xlat
and
clc
cld
push
cmp
cmp
adc
mov
out
aam
pop
xchg
jle
andb
je
adc
cmpsl
jbe
jle
nop
sub
test
xor
mov
ljmp
adcl
cmpsl
jecxz
and
ja
adcb
shl
xor
stos
inc
out
sti
xchg
push
pop
inc
sbbb
fistpll
mov
into
pop
out
mov
jmp
lock
bound
inc
xchg
mov
dec
or
jbe
adc
pop
push
imul
notl
pop
cmp
mov
orl
hlt
cs
jae
arpl
or
out
or
jmp
test
xor
inc
aam
scas
push
call
bound
push
mov
xor
push
xchg
arpl
pusha
push
outsb
adc
jmp
jp
and
or
pusha
add
add
add
cmp
test
dec
imul
xor
outsl
dec
sbb
nop
and
adc
cmpsl
mov
and
push
mov
sub
xor
and
mov
push
cmp
lahf
adc
mov
repnz
pop
rorb
add
xchg
cmp
mov
push
mov
jb
or
call
enter
imul
cltd
or
cmp
cs
push
pusha
dec
fwait
cmpsl
shlb
mov
inc
fcmovnb
enter
les
jmp
push
inc
inc
mov
hlt
mov
icebp
inc
add
sub
fsubrl
add
jno
inc
sub
sbb
xor
adc
ds
adc
mov
xlat
push
js
sbb
xor
cmp
iret
mov
ret
and
shr
dec
push
stos
out
inc
out
movb
loopne
clc
and
sti
enter
cli
ljmp
fldt
fsts
mov
stos
aas
push
popf
aaa
sarb
lods
pop
lods
lds
fstps
ret
rorl
sub
pop
jle
aad
mov
dec
hlt
add
adc
enter
imul
test
push
addr16
out
dec
sub
imul
sbb
lods
or
dec
fs
or
cmp
inc
lods
nop
sub
xlat
dec
pushf
mov
adc
pop
pusha
test
xor
jle
out
sbb
mov
or
iretw
inc
movsb
sub
pop
cmp
inc
addr16
push
xchg
loope
mov
sub
jns
stos
outsb
adc
jno
xor
push
hlt
in
pop
icebp
push
lahf
pop
push
shll
mov
out
hlt
or
jbe
test
xor
mov
lds
int
je
ss
iret
push
inc
stos
mov
or
or
jp
push
mov
mov
cmp
adcb
test
iret
sub
lea
cmc
aaa
scas
mov
xchg
xor
sub
jg
lds
cmp
ds
add
mov
jecxz
or
dec
cltd
add
jo
mov
mov
inc
adc
mov
fwait
loope
hlt
lahf
in
pop
loope
inc
mov
rclb
pop
mov
fidivrs
icebp
xlat
pop
mov
xchg
pop
mov
mov
mov
sbb
add
add
mov
jo
push
xchg
dec
add
inc
shl
movl
and
aad
mov
mov
or
jle
add
xchg
adc
add
pop
add
add
or
cs
and
dec
sahf
lcall
popa
jmp
add
push
icebp
decl
mov
pop
and
add
or
js
fildll
xlat
sti
int
add
test
add
lea
aam
dec
nop
jne
xchg
add
xor
and
test
and
ret
cmp
mov
pop
sbb
add
add
xor
inc
jmp
push
lret
scas
mov
add
push
sbb
es
addr16
jle
stc
and
xchg
add
sub
scas
cmp
ljmp
incl
fildll
add
out
call
cli
mov
pop
inc
inc
mov
add
mov
lea
push
dec
fstl
push
mov
add
lea
and
or
adc
push
repnz
ljmp
enter
xchg
push
add
aad
jb
ffreep
mov
hlt
scas
adc
nop
xor
sbb
inc
scas
xchg
call
call
icebp
out
clc
loopne
das
xchg
mov
nop
std
add
and
test
incl
push
insl
mov
add
jg
ljmp
lcall
int3
add
jo
sar
call
and
cmp
push
cmp
ljmp
cmc
add
hlt
mov
ret
push
inc
push
cwtl
repnz
adc
mov
push
ret
lock
jg
mov
mov
aam
std
pop
rolb
mov
dec
psubusw
loope
sbb
pushf
add
inc
inc
inc
add
mov
push
mov
shrb
ret
add
or
icebp
push
cs
scas
das
loope
sub
mov
rolb
lds
in
lods
push
add
sub
pop
cmp
icebp
add
sar
call
xor
pushf
loope
imul
sbb
fldenv
xor
cmpsl
add
jmp
cld
int
xor
dec
add
hlt
mov
jp
or
daa
add
rcll
daa
or
push
or
dec
xchg
fcmovne
adc
inc
push
sahf
or
in
mov
cmp
or
data16
clc
push
mov
leave
adc
xor
aam
jge
xchg
inc
mov
inc
and
add
shl
hlt
dec
hlt
sbb
movsb
scas
clc
push
cmp
jb
xchg
test
push
pushf
mov
sbb
adcw
call
mov
pop
rclb
les
out
add
adc
lods
lods
xchg
add
adc
mov
mov
push
or
pop
jbe
sbb
dec
inc
push
ret
orb
and
fstp
or
out
mov
add
and
dec
int
sbb
fs
dec
xor
or
mov
cld
repnz
adc
icebp
dec
cmpb
rolb
lret
cmpb
jo
in
call
mov
clc
xchg
shl
push
push
push
rol
fdivs
mov
cwtl
add
mov
cmp
pusha
sub
ret
outsb
sub
bound
jge
call
mov
add
inc
aam
adc
rolb
nop
xor
sahf
add
into
shr
loopne
xor
push
js
loope
lret
rcrb
and
loope
mov
fistpl
add
aam
or
rcll
je
pushf
repnz
and
jecxz
scas
add
push
and
jmp
aad
neg
add
sub
hlt
adc
call
jmp
inc
fnstsw
call
adc
add
incl
ret
and
fs
or
nop
in
mov
adc
jge
and
repnz
jecxz
and
jnp
add
jns
mov
lcall
and
add
and
jge
mov
or
test
inc
clc
addr16
cmp
std
xchg
je
nop
loope
push
add
cmpsb
xchg
xchg
lret
loopne
cmpl
fdivl
call
mov
push
add
test
std
dec
jmp
push
test
mov
mov
insl
or
mov
push
sti
inc
adc
inc
push
sub
inc
xchg
add
call
aam
lcall
xchg
fcmovnb
inc
clc
imulb
je
loopne
lret
or
mov
dec
push
cmc
pushl
cltd
add
and
cmp
lahf
cmp
mov
in
add
ja
add
jne
out
sbbb
cmpsl
les
call
ret
cltd
pop
lds
cli
movsl
dec
xchg
pop
add
jmp
xchg
pop
loopne
or
jl
movl
out
cmp
test
pop
shrb
test
push
push
addb
addr16
cmc
jp
test
pop
add
orb
fimull
mov
jmp
imul
repnz
mov
scas
sarl
cmpl
ret
xor
nop
inc
and
fimull
outsl
push
fbld
mov
push
mov
or
push
pop
ja
cmp
xor
cli
decb
add
xchg
insl
add
insl
fmuls
and
mov
and
in
movsl
out
mov
and
adc
lods
cs
push
shrb
add
cs
rcll
pop
and
in
daa
and
add
stos
sbb
leave
fsubs
jp
xchg
mov
add
lahf
add
arpl
or
sub
and
cmp
adc
push
cmpsl
cs
push
js
sti
inc
or
mov
aaa
test
test
sub
inc
sbbb
inc
data16
insl
sahf
mov
negl
test
mov
insb
or
lahf
testb
jmp
sbbl
mov
pop
mov
fbld
testl
adc
pop
xor
ljmp
ret
and
and
imull
jp
sub
aas
add
cmpb
mov
add
fcoml
sahf
jo
sbb
fists
xor
sbb
out
pop
push
push
arpl
fmuls
loope
les
mov
push
mov
fsubrl
push
sbbb
sti
cmpb
push
stos
ljmp
scas
xchg
pop
sbb
adc
push
xchg
sar
lea
mov
inc
xor
mov
loopne
add
mov
xchg
stc
ja
repz
mov
jecxz
mov
add
test
push
adc
in
dec
xchg
aaa
add
mov
add
test
pop
inc
push
ss
fsub
ret
fsubl
shlb
add
sbb
addb
or
and
xor
xor
outsl
dec
sbb
imul
or
pushf
xor
mov
in
cmp
leave
js
inc
push
pop
lods
mov
enter
sarl
sarl
stc
inc
pop
mov
fstl
push
add
cld
js
and
dec
ljmp
mov
mov
int3
or
js
movsl
stos
sbb
adc
call
aad
pop
mov
adc
scas
push
adc
dec
ljmp
out
adc
jae
pop
xchg
sbb
ret
dec
xor
popa
stc
sub
mul
mov
adc
hlt
push
repz
xchg
scas
rep
ds
dec
inc
leave
hlt
or
dec
mov
sbb
int
imul
mov
cli
mov
pop
loope
lret
lret
scas
mov
dec
cmp
sbb
add
cmp
xchg
lock
dec
xor
add
pop
jp
testb
add
xchg
mov
sbb
repz
punpckhbw
data16
jle
pop
mov
sbb
mov
daa
aas
adc
mov
nop
cmp
xchg
push
iret
sbb
pop
cs
mov
es
daa
pop
scas
mov
and
mov
push
clc
ljmp
or
xor
pop
fisubs
sarb
cmp
jo
stos
xor
test
xor
loop
lcall
lahf
test
or
scas
inc
sub
xchg
cmp
stos
orl
test
fadds
add
jo
jns
mov
in
in
enter
push
mov
sahf
jmp
push
jb
adc
ret
jle
push
or
loopne
sub
repnz
cmc
xchg
jo
cwtl
inc
push
arpl
xchg
push
lret
test
lret
incl
xchg
sar
push
stos
sub
add
jne
into
loop
or
fbld
mov
xchg
add
xchg
mov
push
addr16
pop
ljmp
mov
mov
add
mov
pop
das
incl
fistl
cld
pop
out
enter
loop
out
or
out
inc
push
add
dec
inc
sahf
add
push
mov
outsb
add
aam
mov
pop
mov
or
ret
lock
inc
xor
loope
xchg
and
into
stos
inc
sub
inc
cmpsb
inc
mov
adc
mov
mov
test
dec
push
shll
jl
mov
jg
or
sub
and
xchg
mov
rorb
lret
or
and
stos
xchg
sbb
or
add
call
je
mov
or
mov
jnp
add
les
push
daa
adc
leave
inc
xorl
rorl
push
add
aam
cltd
cmp
addb
adc
xor
mov
mov
movsb
mov
pushf
rorl
xor
mov
or
sub
ret
inc
lds
je
push
adc
or
gs
sub
or
sbb
das
adc
ror
add
xor
mov
cmp
inc
cmpb
xor
jno
jp
les
icebp
mov
add
xor
movsb
loop
push
outsb
lcall
adc
jnp
xchg
pop
fisubrl
sbb
mov
dec
subb
add
add
and
sbb
and
push
inc
xchg
xlat
outsl
or
fiadds
shrb
and
sar
sahf
dec
test
inc
test
push
lods
and
mov
mov
adc
fwait
sbb
cmp
mov
push
shrb
cmp
js
fists
es
dec
pushf
dec
cmpb
lret
sub
push
icebp
push
andl
and
xchg
mov
mov
inc
bound
ljmp
lods
sub
pop
sahf
mov
mov
shll
pop
cli
push
stos
sbb
repz
lret
shlb
and
add
cmpsl
test
inc
in
and
cmpsb
push
cmp
mov
pop
or
std
daa
insl
test
inc
imul
cmpsb
faddl
lods
adc
dec
jl
add
jnp
cmovne
rol
pop
pop
jp
cmp
pop
call
inc
es
insl
mov
clc
mov
outsl
out
sub
xchg
jp
popa
xor
nop
scas
adc
rcrl
xor
scas
push
outsb
cmp
aad
lods
jge
inc
cli
add
ret
nop
push
mov
jle
adc
out
mov
jp
xchg
aam
pop
sbb
sub
mov
pop
xchg
in
mov
inc
loop
sub
enter
ja
sub
ja
add
lds
stos
mov
and
push
mov
mov
ds
adc
int3
pop
fs
dec
ljmp
jl
fwait
sub
int3
nop
push
adc
and
ja
out
mov
push
dec
orl
fyl2xp1
mov
daa
inc
mov
test
cmp
mov
rorl
jo
push
scas
xor
insb
mov
mull
mov
mov
fcmovnb
jo
add
add
in
jb
pop
mov
hlt
movsl
push
xor
out
sub
scas
adc
pop
sbb
out
dec
xor
add
fnstsw
std
add
nopl
mov
push
lock
pop
fmuls
shrb
mov
mov
outsl
ja
push
and
bound
inc
jecxz
add
cs
cmp
pusha
pusha
popf
loopne
repnz
jnp
adc
adc
js
lods
pop
jne
lret
pop
and
push
or
rorl
jg
mov
pop
or
testl
mov
lods
ljmp
or
shr
or
mov
and
jecxz
and
pop
push
shlb
xorl
jno
cmp
mov
std
out
sarl
pushf
or
in
fwait
mov
dec
mov
inc
sbb
jno
fadd
add
xlat
test
decl
rcll
aas
and
clc
decb
ds
ret
test
pop
ret
mov
or
lahf
pop
jno
lahf
ja
add
mov
in
or
xor
rclb
dec
inc
sbbl
or
fsub
mov
cmpsl
cmp
ret
mov
push
xor
lea
sar
xor
out
fidivl
pop
incl
fdivl
scas
repz
clc
addr16
test
cmp
xchg
imul
lea
lods
sub
dec
or
jecxz
icebp
test
mov
push
lock
push
sbb
push
and
adcl
dec
negl
jecxz
mov
pop
pop
sbb
lea
mov
push
mov
lods
dec
loopne
test
repnz
and
icebp
ss
xor
imul
push
sbb
js
js
es
shlb
lods
mov
fidivrl
icebp
sbb
hlt
adc
arpl
jl
add
mov
or
mov
jbe
or
mov
sarb
imul
orb
loop
stos
lret
xchg
clc
in
mov
scas
add
cmp
fadd
sbb
add
pusha
popf
xor
sbb
in
mov
or
cwtl
mov
pop
cmp
and
movsl
inc
xchg
xor
std
testb
xor
push
pop
and
jb
mov
push
sahf
mov
cli
pushl
add
lods
mov
inc
xor
dec
pop
adc
xchg
add
xor
movsl
xchg
or
sbb
push
rcr
clc
dec
inc
dec
rdtsc
adc
and
dec
dec
adc
sbb
xchg
xchg
rcl
test
jecxz
mov
cmp
mov
adc
mov
aad
aam
push
iret
pushf
outsl
insb
xchg
sub
lcall
dec
jp
jecxz
pop
in
imulb
push
mov
das
mov
and
add
cs
les
pop
inc
push
cltd
push
int
sbb
push
mov
aas
aam
adc
lds
inc
xchg
add
jo
jp
addb
or
mov
mov
and
popf
aam
cmpsb
cmp
stos
sbb
mov
or
das
roll
not
cmp
mov
dec
leave
das
sub
cmpl
xor
imul
pcmpeqb
add
adc
mov
dec
fwait
lahf
or
jecxz
add
xor
lcall
sub
scas
fdivrs
mov
xchg
add
movntq
pop
pop
mov
cmp
int
or
push
loope
adc
sub
mov
sbb
mov
cmp
jge
and
std
rcl
fimuls
dec
lods
or
aas
test
aas
subb
neg
adc
test
mov
int
inc
mov
stos
js
cli
icebp
into
xor
add
push
in
dec
pusha
jae
add
pop
push
notl
sub
lock
sub
outsl
jb
push
inc
imul
mov
inc
lock
mov
sbb
push
out
hlt
mov
rol
movsb
stos
loopne
into
push
mov
or
push
add
in
pop
sbb
mov
test
add
xor
pop
xchg
sub
and
dec
add
add
push
cld
pop
pop
loopne
push
rorl
test
int3
xor
ljmp
jnp
sbbb
mov
scas
or
pop
push
mul
push
mov
mov
outsl
inc
testl
cwtl
inc
fdivs
test
repnz
inc
je
pop
sbb
sub
fcoms
in
int
inc
js
push
xchg
test
jg
pop
in
mov
push
pusha
add
push
mov
cld
les
jbe
data16
imul
add
popa
jns
int3
adc
xchg
adc
fdivs
dec
sbb
into
popf
pop
cld
movsl
sub
adc
mov
filds
jl
repnz
cltd
sbb
lds
xor
rcr
dec
push
stos
out
pop
into
or
cwtl
or
xchg
leave
sbbb
xor
add
pop
sbb
ret
and
dec
adc
jge
jecxz
jnp
ret
inc
xchg
xor
int3
mov
mov
daa
fs
inc
popa
inc
add
int3
push
inc
add
and
loopne
imul
stc
rcr
xor
xorb
add
or
pop
clc
leave
movsl
loop
dec
adc
push
mov
mov
cltd
jne
int3
xchg
mov
sbb
aam
or
jg
push
pop
cltd
and
cld
shr
sbb
add
add
hlt
call
jae
and
or
xchg
enter
cmp
pop
ss
or
mov
sbb
xlat
and
and
and
cli
pushl
test
mov
arpl
inc
mov
js
loop
test
repnz
sti
shll
rcrl
and
cli
pop
dec
sbb
add
lods
sbb
sbb
sub
xchg
inc
adcb
call
cmp
push
mov
or
xor
in
cmp
clc
mov
or
loopne
inc
call
ja
mov
or
xor
push
iret
push
ljmp
fldenv
mov
repnz
pop
shrl
sbb
push
movsl
fbld
sbbb
mov
fists
fiaddl
in
pop
lods
xor
push
mov
std
fldl
jno
scas
int3
or
jg
sbb
mov
and
dec
mov
outsl
cmc
mov
sub
imul
pop
loop
jmp
call
test
imul
lret
neg
mov
or
inc
int3
inc
cmpl
or
mov
and
int
dec
add
inc
mov
pop
inc
test
std
fbstp
xor
adc
into
aam
sarb
incl
test
int
push
addl
mov
leave
mov
cli
outsl
movsl
add
imul
subl
push
push
push
ret
jno
xor
pop
gs
pop
mov
cld
mov
jle
lcall
xor
aad
add
dec
stos
dec
je
mov
jmp
insb
lods
gs
fucomip
in
subb
shrb
jle
inc
push
fs
jno
int3
js
ret
inc
inc
popl
inc
and
ror
ja
push
lods
mov
jge
jae
pusha
xorl
jo
adc
pop
or
cmp
aaa
push
pushl
add
inc
adc
lret
adc
lods
sbb
mov
sahf
mov
add
xchg
daa
shrb
adcb
das
ljmp
add
lret
dec
mov
mov
cmpb
pop
bound
clc
out
cmp
dec
sub
ret
test
xor
jl
andl
mov
mov
jmp
inc
cmp
lret
dec
sub
es
or
outsl
ss
push
cmp
mov
jbe
adc
xchg
dec
icebp
and
call
or
add
pushf
xor
add
out
mov
pop
and
mov
cmc
andb
rorl
test
cmp
mov
jbe
jo
xlat
fsubrs
xor
sti
outsl
xor
add
mov
loop
pop
pop
cwtl
arpl
mov
add
mov
enter
jo
add
dec
enter
push
mov
call
xchg
and
xchg
mov
add
das
cwtl
lds
push
mov
add
sub
dec
pop
pop
jmp
or
add
test
lahf
lock
cli
and
add
adc
xor
aas
lcall
mov
adc
mov
push
push
sub
mov
mov
mov
decb
push
in
daa
ret
dec
ljmp
xchg
mov
cmp
xor
add
or
scas
dec
cmp
outsl
inc
mov
push
leave
icebp
or
mov
das
add
roll
test
icebp
add
push
pop
mov
fs
and
cmp
gs
adc
movb
in
pop
sub
add
add
or
fwait
add
icebp
shlw
iret
mov
pop
out
or
ljmp
bnd
shrl
fwait
in
jo
mov
ja
xor
popl
pop
repz
cli
dec
mov
add
add
daa
sbb
sbbb
ljmp
pop
sbb
add
cmp
jmp
insl
jbe
in
clc
push
or
daa
inc
lock
cld
sbb
fistpl
sbb
fld
add
clc
repnz
pusha
bound
dec
dec
push
jbe
jo
mov
fcoml
sbb
mov
jecxz
pop
mov
add
fildl
xchg
mov
in
push
mov
adc
and
sbb
push
ss
cli
or
xor
mov
call
push
lock
rcrb
pop
add
jns
jno
xor
dec
inc
and
in
xchg
add
inc
xor
push
jge
xchg
xchg
xchg
sub
popf
push
addb
sbbb
dec
and
in
or
mov
or
add
in
orl
jl
mov
mov
fistps
movsl
xchg
sub
movsb
mov
lcall
andb
sub
xor
xor
outsb
lock
popa
sbb
lcall
mov
inc
push
sbbl
rcrb
lock
ret
cmp
cmp
or
add
adcl
sub
loopne,pt
cltd
repnz
sub
pop
cwtl
icebp
xchg
fdivr
inc
les
add
cmpsb
hlt
or
xor
inc
xlat
adc
jg
lcall
outsl
in
mov
imul
jnp
fwait
or
sub
jg
mov
aad
add
call
pop
and
pushf
les
push
fbstp
mov
ljmp
mov
mov
clc
inc
dec
mov
xor
daa
sbb
test
shll
adc
mov
mov
and
cmp
sub
inc
or
lea
mov
pop
xchg
sub
adc
mov
mov
loope
cmp
test
sbb
pop
inc
scas
call
out
test
stos
out
ficomps
adcl
ljmp
rclb
popa
cmc
push
stc
icebp
push
add
in
add
push
add
pop
dec
cmp
dec
loopne
and
or
sub
cmpsb
loope
or
adc
push
fisubrl
push
push
add
loopne
ljmp
bound
add
dec
cmp
ficoml
mov
in
mov
or
sub
add
loopne
faddl
jle
mov
lret
pop
adc
or
xor
test
pop
adc
push
cmp
and
sub
inc
je
or
pop
lcall
rorb
in
jbe
test
jmp
jg
sub
push
sbb
cmpsl
hlt
push
cld
xchg
jge
lret
cld
out
clc
push
loope
pop
or
dec
loopne
add
dec
lret
add
push
push
shl
sbb
dec
test
adc
push
ret
mov
mov
dec
sub
jecxz
push
sub
adc
insl
push
je
rcrb
jg
cmp
outsl
pop
and
jno
mov
jbe
mov
vpshuflw
int3
hlt
pop
movsb
sub
stc
or
cmp
aaa
push
pop
testl
mov
add
movsl
stc
cli
sub
lahf
xchg
aaa
adc
pusha
pop
pop
aam
push
or
pop
out
sbb
and
mov
pop
mov
mov
stos
ja
xor
jmp
push
and
shll
sbb
pop
mov
cmp
jb
bnd
pop
adc
loope
xchg
sub
inc
int3
or
mov
jmp
jae
add
push
mov
xchg
cmp
arpl
push
mov
rcl
popf
add
and
mov
fwait
push
popf
add
lret
or
in
daa
js
dec
aad
mov
hlt
add
enter
test
pop
hlt
aas
pusha
stos
mov
push
hlt
push
push
repz
clc
outsl
rolb
aas
xchg
adc
push
aad
add
mov
sub
dec
xor
xchg
add
xchg
push
xor
loopne
adc
xor
or
dec
xchg
sti
push
cmp
adc
or
inc
rcrb
mov
repnz
hlt
add
pop
rcrl
pop
inc
lods
shrl
lock
xchg
xor
shll
xor
inc
add
pushf
sub
popa
adc
sar
jmp
mov
into
push
fs
xchg
inc
mov
mov
add
das
adc
lret
cli
mov
fimull
jns
sbb
add
add
lods
outsl
lea
dec
cmpl
popa
lahf
adc
shlb
mov
jg
test
xchg
into
adc
mov
fnstsw
add
mov
fistpll
pop
in
adc
sub
jg
loopne
arpl
xor
jae
and
lret
mov
pop
add
sub
pop
or
shll
clc
jg
mov
jbe
enter
cmpsl
pop
or
jmp
lret
jp
add
dec
dec
mov
adc
inc
push
dec
xchg
es
cmpsl
mov
add
adc
fcomps
adc
int3
ljmp
icebp
push
lret
and
add
mov
or
mov
fs
es
push
jno
fs
sbb
es
and
dec
rcrb
nop
in
lods
stos
sbb
sbb
lcall
in
pop
fstpt
mov
movsb
bound
mov
and
lds
mov
add
ret
adc
jo
cmp
xor
jle
xlat
adc
jecxz
in
lds
leave
movsl
daa
push
stos
pop
sub
mov
flds
dec
mov
cld
filds
dec
test
sub
and
xor
xchg
lea
in
outsl
popa
add
mov
scas
lea
in
fadds
ljmp
pop
push
dec
add
ja
mov
add
imul
cmp
sub
mov
sub
mov
adc
sti
mov
popa
cmp
fucomp
sbb
dec
outsb
xor
add
and
ret
pop
rcll
jmp
call
xor
fists
sti
push
push
add
dec
xor
sahf
fdivrs
enter
lods
cmc
insl
sbb
mov
fldl
cld
repz
pop
pop
mov
sahf
leave
lret
mov
sub
cld
xor
inc
and
sub
fisubrs
adc
adc
xchg
dec
cld
pop
ljmp
add
scas
inc
std
pop
jbe
xchg
popa
jbe
sbb
repnz
cwtl
out
sbb
push
xor
xor
push
shlb
sbb
add
sahf
add
icebp
push
in
and
mov
pop
dec
xor
incl
insl
jne
push
mov
les
cmpsl
popa
pop
fimuls
pushf
fs
daa
repnz
push
icebp
iret
add
xchg
add
sub
decl
adc
cmovo
mul
cmp
push
mov
cld
push
mov
push
push
add
iret
jg
sub
out
mov
or
and
lea
mov
adc
mov
das
insb
jl
or
jl
push
push
outsl
notl
mov
sub
sbb
pop
mov
sub
sbb
and
test
dec
dec
jmp
inc
push
mov
mov
mov
jge
nop
dec
and
jg
fnstenv
xor
pop
cwtl
push
test
cmpsl
pop
mov
mov
pop
insb
adc
pop
xchg
xlat
mov
dec
jge
jg
es
inc
loope
stos
mov
cmp
cwtl
lock
jnp
inc
pop
sub
movsl
and
bound
jmp
push
push
lds
in
int3
pop
pop
push
mov
pop
cltd
push
testb
andb
fs
cmpsl
loopne
test
out
mov
out
pop
push
ret
sbb
push
int3
mov
dec
sub
or
pop
jl
add
add
pop
shl
xchg
call
ficompl
in
sub
mov
leave
and
rcrb
mov
sub
xor
sub
adc
jns
fsubr
out
or
test
out
inc
push
jg
add
mov
repnz
adc
icebp
mov
mov
cwtl
aad
orb
outsl
je
sbb
add
inc
pop
mov
outsb
adc
clc
adc
sub
fistpll
dec
xor
and
push
nop
add
icebp
mov
sbb
mov
leave
mov
adc
and
cld
sbb
inc
push
pop
xor
roll
add
inc
pop
and
xor
ficoms
scas
scas
dec
call
mov
jnp
add
adc
addr16
push
neg
sub
adc
mov
loope
es
movsl
jns
and
mov
outsl
test
inc
lret
lods
mov
jno
mov
jecxz
push
and
inc
mov
inc
cltd
add
xchg
test
pop
or
in
movb
push
ds
cmp
test
sub
mov
cmp
cwtl
outsb
aad
push
insl
lea
pushf
xor
fisttpll
cmpsl
jl
mov
dec
mov
xchg
lcall
mov
add
add
mov
test
mov
cmp
inc
mov
sub
mov
test
dec
ljmp
xor
call
cmp
and
lcall
rolb
fcoml
cmp
jmp
hlt
mov
mov
sub
push
push
rol
add
cmp
xchg
mov
mov
popf
add
mov
cmp
pop
push
xlat
xchg
loopne
dec
movsl
mov
jo
rorl
push
scas
jle
push
aad
test
push
clc
movsb
dec
and
das
adc
mov
js
pop
fstpt
out
out
cmpb
sub
fmuls
inc
das
sbb
das
fmull
cmp
mov
and
add
inc
aad
js
push
jns
addr16
mov
xlat
and
outsl
sub
lea
adc
sti
cltd
and
in
add
loopne
outsl
into
inc
add
aas
sahf
push
jae
mov
pop
or
xchg
mov
sub
js
mov
push
inc
and
adcl
pop
sbbl
xchg
lock
push
adc
insl
and
pop
and
sti
scas
add
test
lock
aaa
fistl
adc
loope
mov
cld
sub
gs
ficoms
dec
cld
rorb
decl
test
sbb
cmc
mov
xchg
adc
loope
pop
loopne
adc
das
sub
jg
mov
xorb
push
mov
test
in
cld
xor
lock
fistpll
lret
xor
mov
xor
dec
shlb
pusha
stc
hlt
mov
add
dec
lods
cmp
and
fistpll
push
mov
mov
or
into
out
sbb
mov
jg
xchg
shrb
xor
cmpsb
push
jbe
decl
add
xchg
mov
cli
mov
icebp
aaa
ficomps
ljmp
shr
mov
mov
mov
in
cs
lock
or
mov
dec
mov
cli
pop
pop
sbb
ret
sbb
jne
mov
mov
ljmp
mov
nop
out
jmp
push
daa
outsb
fbld
shlb
mov
inc
outsb
addr16
pushf
adc
jo
or
inc
out
mov
pop
inc
fwait
xchg
pop
mov
into
inc
arpl
sahf
and
ds
pop
or
or
and
dec
nop
fisubrs
xor
xchg
push
fistpll
dec
lret
push
inc
data16
rclb
mov
push
xchg
and
sarl
xchg
push
add
mov
xor
add
jmp
push
sbb
mov
mov
dec
inc
iret
add
inc
roll
insl
mov
enter
lcall
daa
or
std
jns
out
aaa
push
imul
add
inc
ret
and
das
mov
sbb
cmpsl
sti
add
das
inc
xchg
pop
sar
es
mov
cmp
cmp
jb
lea
sbb
cs
les
pop
mov
lea
and
outsb
cs
push
jp
mov
gs
add
scas
push
aaa
adc
lods
xor
mov
sub
sub
mov
test
addr16
das
mov
hlt
outsl
pop
outsl
and
lods
dec
push
in
out
adc
xchg
int3
mov
cmp
adc
das
repnz
sub
subb
jne
call
fadds
dec
adc
jnp
push
xor
hlt
lods
leave
jmp
sbb
sbb
aaa
jmp
movsl
out
add
mov
mov
mov
sbb
sub
xchg
mov
jg
adc
lds
daa
bound
mov
push
jecxz
or
adc
inc
test
jmp
or
mov
lods
pop
call
aaa
jmp
lods
add
inc
or
clc
aaa
jle
jo
sbb
xorl
shrl
or
testb
lods
jl
subb
addr16
xchg
sub
notl
dec
inc
add
mov
std
jb
pop
jns
fstps
rcrl
jg
adc
sbb
sbb
rol
or
shld
insl
mov
fxch
cmp
lret
cmpl
xchg
insl
imul
and
dec
mov
mov
mov
mov
xchg
aam
mov
clc
insl
arpl
mov
mov
and
mov
sti
and
add
fistpl
pusha
js
mov
cmpsl
nop
mov
mov
loope
pop
cltd
and
sahf
xor
pop
outsb
inc
jmp
mov
lea
jecxz
into
sbb
and
pop
imul
xchg
mov
push
pusha
es
fildll
lods
or
sbb
call
adc
in
lock
dec
mov
xor
dec
fwait
pop
and
movsl
jmp
repnz
add
in
add
add
in
push
into
sbb
fwait
adc
or
leave
mov
inc
lahf
mov
add
dec
push
test
push
fistpl
jnp
inc
push
mov
xor
test
andb
lods
movsb
std
dec
div
cmp
dec
test
inc
cltd
leave
addr16
adc
mov
subb
scas
pop
push
mov
mov
and
jnp
clc
ret
or
push
jns
aas
add
das
push
lea
addl
loop
test
mov
sahf
stos
test
in
adc
fs
popf
sbb
fiaddl
js
inc
sbb
inc
sbb
or
jg
push
xchg
mov
in
push
push
insl
shlb
lea
pop
mov
inc
ret
roll
int
mov
clc
repz
pop
pop
adc
ljmp
lock
pop
and
inc
not
ret
sub
cwtl
sub
decb
jo
ljmp
and
sub
sbb
adcl
jo
nop
ret
jo
push
shrl
loope
into
rorl
cmp
xchg
adc
fcmovnb
sbb
cmpsb
cmp
and
sub
icebp
sub
outsb
outsl
push
rcrl
lds
add
mov
mov
xchg
inc
sbb
sbb
test
jge
notb
sub
pop
addr16
mov
incl
cmp
xchg
sub
dec
gs
insl
ds
fistpll
mov
xchg
mov
aas
inc
inc
dec
insl
ja
call
push
push
lahf
ss
mov
test
mov
sub
mov
and
scas
sbb
xor
lret
dec
or
pop
aaa
lock
mov
cmp
cmpsb
lret
pusha
mov
add
add
jo
test
xchg
rcrb
mov
test
shrl
outsb
pop
push
inc
push
cmp
sar
jno
mov
scas
jl
das
lahf
nop
stos
int3
jns
sub
inc
outsl
cld
das
fstpl
add
xchg
add
pusha
inc
pop
adc
pusha
decl
cli
mov
fwait
scas
push
pop
js
inc
jle
add
lret
pop
add
insl
loop
adc
mov
rcrb
push
pop
pushl
add
sub
push
lods
sahf
sbb
inc
or
mov
xchg
insl
push
sbb
dec
add
lods
xchg
cli
movsl
ficoml
mov
addl
fcomi
divb
out
std
repz
aaa
sbbb
pop
and
mov
addr16
jge
push
xor
clc
push
xchg
test
xchg
hlt
cmp
lea
push
jmp
xor
jnp
mov
xor
mov
add
mov
xor
jg
pushf
sub
neg
dec
stos
pop
popa
jmp
sbbl
rolb
mov
mov
jg
push
scas
ret
cld
cltd
aad
jo
mov
fdivrl
mov
test
enter
jg
arpl
xchg
loop
inc
das
jle
and
mov
inc
or
lock
out
outsl
push
and
pushf
jecxz
pop
shr
or
xchg
cmovb
add
adc
pop
push
jns
mov
sub
cwtl
mov
mov
sarb
xchg
dec
shrl
fisubrl
mov
dec
or
test
push
popa
xchg
and
fs
fildll
jb
dec
fists
clc
adc
insl
xor
pop
das
je
xchg
push
loopne
sbb
xchg
mov
mov
daa
js
jp
imul
mov
fs
call
sti
lahf
jae
jg
ficoms
das
jge
popa
cmc
dec
xchg
rclb
pusha
xchg
nop
cmp
mov
sbb
push
inc
xchg
push
int
xor
dec
stos
cli
dec
jne
mov
xchg
js
das
jl
cs
dec
adc
imul
in
pushl
adc
dec
add
dec
add
ja
pop
aas
mov
into
and
and
pop
jp
test
dec
cs
addl
shrb
add
push
sub
hlt
idivb
jmp
cmp
ds
sub
dec
xchg
ss
mov
fists
add
xchg
loopne
icebp
ret
pop
das
cld
notb
add
lcall
popf
jbe
popf
dec
and
pop
clc
in
pop
mov
nop
pop
pop
or
mov
sbb
sbb
mov
lods
inc
mov
mov
stc
stos
arpl
mov
fstp
xchg
ljmp
je
jo
xor
adc
xabort
cmpsl
mov
inc
das
sub
sbb
cltd
cmc
fwait
negb
lods
sbb
dec
jno
mov
rolb
xchg
jmp
adc
jecxz
jecxz
das
dec
mov
roll
jb
or
fsubr
movsl
pushf
push
repnz
rcll
mov
mov
inc
mov
mov
jo
stc
sub
and
jge
insb
fs
xlat
lahf
clc
cmp
xchg
and
mov
lea
xorl
pop
xor
mov
cmpl
sub
xor
inc
jne
lods
mov
dec
inc
or
lds
clc
inc
shlb
int3
jge
xor
rorb
add
arpl
cmpsb
sub
scas
int3
fs
pusha
cmp
pop
ljmp
daa
add
and
nop
or
push
hlt
adcl
jle
sarb
clc
outsb
add
pop
test
pop
sbb
or
and
shll
push
push
sbb
xor
lock
bound
jo
clc
fisttpl
shrb
sbb
aaa
pop
jl
mov
sbb
xchg
mov
or
push
outsl
inc
int3
adc
lea
or
addr16
inc
ljmp
sub
fistpll
je
sbb
sub
cmpsl
jecxz
int3
testl
int3
rclb
out
sbb
pop
or
inc
fisttps
inc
outsb
shrl
cs
lods
js
inc
cmp
mov
aam
or
sub
adc
ret
or
jb,pn
inc
insb
mov
jo
and
mov
mov
fwait
ss
adc
mov
daa
add
bound
sub
mov
jg
jne
into
or
pop
mov
pop
sbb
xchg
es
cld
lret
shrl
add
out
into
pop
inc
insb
or
loopne
or
inc
fbstp
negl
mov
push
mov
out
call
sbb
loopne
ds
add
xchg
hlt
mov
push
add
mov
sbb
roll
jo
inc
repnz
add
in
inc
dec
mov
sbb
jge
addr16
push
push
cmp
popa
shl
cltd
dec
test
enter
in
mov
cli
cltd
and
jl
adc
adc
decl
xor
and
mov
hlt
and
lods
orb
pop
mov
push
cmpsl
lods
dec
pop
jge
xchg
jnp
mull
inc
cmc
inc
jne
adcb
inc
mov
out
shl
les
sbb
or
test
in
out
adc
rcrb
js
mov
sbb
testl
jne
sbb
cmp
push
adc
and
inc
or
push
je
shlb
cwtl
test
ret
mov
adc
lods
pop
andl
add
dec
aaa
int3
mov
insb
jle
sub
and
cmp
sbb
aaa
add
and
dec
mov
cmp
pop
cmp
pusha
jl
fisttps
loopne
stc
pop
mov
sub
pop
outsb
or
jns
outsl
fbstp
andb
and
in
in
test
sbb
insb
or
sbb
pop
jo
das
mov
jnp
and
cmp
nop
cmpsl
inc
xlat
loop
xlat
jns
jg
jne
adc
incl
pop
and
add
call
dec
sub
aad
shll
repnz
outsl
mov
dec
sbb
xchg
jo
mov
cs
mov
mov
pop
push
lods
push
mov
aam
mov
les
gs
imul
insb
mov
and
loop
mov
add
sbb
test
mov
ret
push
mov
and
push
mov
es
xchg
sub
push
sti
adc
lret
es
gs
daa
fistps
bound
mov
addl
cmp
cmp
jmp
sub
jno
inc
xchg
cs
xorl
sbb
clc
push
loopne
jge
push
aam
addr16
test
sbbl
xor
out
je
pop
inc
mov
push
mov
xchg
stos
cmp
stos
xchg
repnz
pop
mov
xlat
das
andb
cld
fildll
lock
inc
or
hlt
mov
pop
clc
les
inc
jbe
sbb
inc
jg
mov
or
mov
cmp
mov
and
test
pop
andb
in
adc
mov
and
movb
pop
push
jno
add
adcl
test
mov
cmpsb
mov
mov
or
push
in
pop
call
cld
cmpsl
imul
sbb
ss
sbb
les
push
dec
pop
xor
push
mov
jle
add
push
xor
sbb
loopne
lods
add
js
adc
sbb
loopne
lret
test
mov
mov
les
andb
push
lret
fwait
sub
inc
aaa
mov
repz
sbb
cmp
dec
add
popa
and
xchg
xor
push
aam
inc
mov
and
cltd
fs
rcrb
mov
adc
mov
cld
xchg
sub
adc
lods
sub
push
mov
mov
loop
mov
and
dec
jmp
aaa
push
test
insb
xchg
add
mov
testb
jg
ljmp
adcb
add
stos
lret
lds
dec
mov
xorb
mov
dec
pushf
mov
inc
fs
lods
fimull
int3
fwait
mov
pop
sahf
fnsave
mov
add
cmp
cmpsb
pusha
shlb
add
jb
inc
jbe
filds
or
push
xor
enter
mov
fnstsw
imul
inc
sub
loope
pop
in
jecxz
and
jecxz
sahf
loopne
outsl
cmp
xor
xor
add
jg
sbb
cmp
and
add
cli
dec
xchg
xor
mov
jle
sbb
les
xchg
loop
aaa
cmp
add
xchg
sbb
fs
adc
and
mov
aad
or
mov
int3
popf
loope
aam
mov
cld
insl
xchg
or
push
adc
ds
aaa
jle
inc
xor
push
inc
or
cwtl
mov
push
dec
xchg
cmp
dec
sbb
jle
int3
dec
aam
iret
jecxz
inc
in
in
inc
fwait
shrb
movsb
jge
adc
mov
sbb
pushf
dec
cli
call
das
or
lahf
clc
cltd
mov
loope
jle
jae
movb
xlat
mov
fcomip
pop
inc
fs
push
push
jae
add
cmc
dec
sbb
pop
pop
movsl
test
daa
mov
xor
fistps
pop
fwait
lea
aaa
or
inc
dec
ret
bound
test
fbld
enter
mov
movsl
subb
inc
mov
mov
int3
mov
push
mov
inc
jp
in
lahf
jp
adc
repnz
bound
lods
mov
xor
mov
and
adc
cmp
sahf
loopne
lret
add
out
push
rorl
adc
pusha
xor
addl
xlat
inc
lods
push
dec
adc
and
and
push
pop
out
mov
and
xor
adc
andb
imul
pop
fwait
adc
pop
dec
pusha
inc
dec
inc
or
scas
adc
jl
lahf
pop
pop
mov
dec
aaa
sbb
clc
or
adc
jns
push
mov
xchg
jno
sarb
ljmp
int
and
jecxz
scas
loop
mov
lcall
inc
mov
daa
dec
stc
int3
mov
push
fnstsw
inc
sahf
dec
lret
f2xm1
and
cwtl
add
test
out
ss
and
ss
call
lock
insl
je
cmp
or
movups
sbb
or
mov
ja
sub
mov
cwtl
shlb
mov
or
ret
dec
clc
int
inc
mov
add
jae
rcrb
and
pop
ror
adc
adc
and
xor
pop
adc
repnz
insb
std
lea
lds
or
ljmp
orl
test
icebp
sub
and
imul
or
push
jecxz
adc
int3
clc
ffreep
jnp
xor
in
xchg
add
adc
xchg
scas
xor
aaa
stos
pop
mov
outsl
adc
loopne
or
sbb
mov
in
mov
push
outsl
gs
mov
mov
pop
clc
fnstsw
icebp
lret
shl
pop
rclb
mov
xchg
add
addr16
dec
cmp
fisttpll
and
sarl
xor
sar
pushl
push
push
adc
xchg
jecxz
movl
lahf
std
jg
add
pop
add
mov
ret
add
inc
lea
jecxz
mov
push
aaa
mov
outsb
mov
std
outsl
lcall
test
fistl
pushf
jecxz
inc
pop
in
sarl
mov
and
mov
push
das
test
sub
and
rorl
adc
sub
cmp
dec
adc
in
loopne
mov
mov
dec
jo
dec
mov
ss
push
rclb
sub
adc
push
lret
mov
sub
dec
pop
aam
jge
fildl
movsb
xor
std
sbb
mov
pop
loop
lret
inc
mov
cmpsb
and
pop
fadd
push
iret
jo
mov
rcr
pusha
push
xchg
nop
mov
xchg
fldenv
xchg
adc
mov
inc
aad
dec
sub
repz
add
push
cmp
dec
out
mov
pand
xchg
clc
xchg
sbb
stos
scas
andb
cmp
jp
fwait
mov
push
sbb
mov
push
pop
scas
orb
aaa
fmuls
inc
lret
add
nop
jecxz
push
clc
mov
data16
outsl
and
jb
iret
repnz
jbe
movsl
call
add
jnp
mov
cli
xchg
insb
in
lods
cmp
sbb
mov
and
or
xchg
pop
push
sub
and
mov
out
sbb
jne
in
aad
sti
push
fstpt
mov
mov
aaa
popa
adc
lds
dec
inc
jle
je
dec
jl
push
mov
repnz
sbb
sarl
push
loope
cmc
pop
icebp
xchg
daa
xor
adc
mov
lock
mov
dec
inc
mov
fdiv
inc
add
and
jns
arpl
nop
or
sub
ja
push
lock
fucomi
aam
movsl
jp
cmp
xor
sub
stos
and
int3
sbb
loop
imul
outsb
jne
aam
and
xorb
sar
ret
popa
addb
sub
pop
cmp
push
sbb
mov
jp
std
popl
das
and
nop
inc
and
sub
lock
mov
inc
sbb
loopne
xchg
and
push
lock
xor
dec
lods
jge
or
push
ljmp
in
and
push
jl
into
xchg
nop
enter
add
enter
inc
cli
inc
shll
push
cmp
pop
das
xchg
rclb
sbb
mov
gs
mov
std
xchg
inc
or
mov
data16
add
mov
mov
leave
push
xor
xchg
or
add
push
or
lret
cmp
push
or
mov
fsts
add
push
daa
mov
testl
fcmovne
pop
inc
xor
jmp
int3
dec
dec
fldenv
lret
cs
lds
xchg
fistps
les
push
xchg
test
inc
add
jg
sub
sub
and
and
mov
mov
xchg
aam
or
push
fadd
sbb
adc
dec
iret
push
rclb
jecxz
shlb
les
sbb
imul
add
mov
or
out
mov
sahf
push
push
pop
lock
inc
rorb
add
icebp
add
icebp
hlt
xor
xor
jne
inc
sarl
cmp
push
inc
and
rcll
js
push
add
enter
mov
push
pop
les
jne
pop
inc
adcl
cltd
sahf
sbbb
mov
xor
add
dec
push
lods
stc
je
sbb
pushf
pop
int3
adc
xchg
sub
aas
cld
enter
cmp
loopne
hlt
add
mov
cmp
jb
mov
xchg
enter
mov
loope
hlt
adc
adc
int3
ret
incb
in
inc
in
lcall
or
sub
xchg
mov
push
arpl
dec
sarl
icebp
dec
mov
pop
xor
mov
popf
add
sub
out
adc
mov
add
xchg
and
add
lret
adc
push
fdivs
sar
xchg
inc
adc
stos
sbb
mov
mov
sub
fsub
xor
dec
or
rorl
or
or
jns
out
ljmp
mov
add
stc
roll
in
dec
lea
hlt
cli
push
sub
cmp
mov
leave
and
adc
int3
arpl
loopne
jp
cmp
mov
call
mov
pop
fwait
sub
push
inc
inc
add
aas
clc
and
test
add
or
mov
adc
shll
adc
lods
xchg
popf
cmp
mov
cld
add
add
jl
das
inc
add
and
repz
popa
jae
add
jo
outsl
jmp
lock
push
sub
mov
lods
fmull
mov
loopne
icebp
test
es
in
test
lods
std
sub
dec
xlat
repnz
mov
mov
jg
das
mov
mov
sbb
dec
add
push
loopne
in
push
push
add
ljmp
bound
not
push
sbb
mov
iret
arpl
int
lods
and
daa
dec
adc
and
ja
and
mov
popl
push
cmp
sbb
inc
add
sbbb
and
jnp
add
lock
movsl
bound
lcall
mov
inc
sub
lret
pop
jo
mov
inc
and
xor
loope
out
loope,pn
ret
pop
push
ja
data16
rcll
fidivrs
cmc
add
addr16
inc
out
aad
inc
addb
sbb
pop
fistl
jl
das
mov
mov
mov
cmpsl
mov
mov
xchg
or
test
mov
xor
enter
sbb
outsl
sub
rorb
ret
sub
push
out
jns
pop
call
ss
inc
dec
das
aas
cmpsl
or
push
mov
mov
add
pop
mov
aam
int
into
popa
dec
add
test
insb
xor
orb
scas
push
or
sbb
push
fsubrs
js
outsl
jno
or
mov
adc
dec
aam
pop
fsub
sub
in
movsl
cltd
xor
add
bnd
subb
icebp
sub
test
xor
lock
insb
jb
inc
ret
sbb
call
fisttps
test
pusha
inc
fnstsw
mov
mov
stos
jne
stc
or
jb
jp
fists
fisttpl
pop
jne
pop
pop
mov
stos
add
lahf
cmp
sbb
and
xchg
xor
sbb
sbb
pusha
mov
push
adc
test
add
test
xchg
outsb
adc
popa
pop
inc
mov
push
mov
rorb
sbb
nop
loop
popf
arpl
mov
mov
movb
or
push
sbb
mov
adc
js
jmp
jns
add
inc
fisttpl
xor
mov
mov
mov
jae
jp
mov
stc
cli
mov
sbb
mov
mov
push
mov
dec
or
sbb
adc
cmp
mov
shll
sub
dec
test
ret
and
fimuls
jae
js
das
inc
and
outsl
enter
mov
andl
inc
inc
sbb
sub
adc
mov
sti
addb
add
mov
inc
out
inc
add
sbb
iret
cmp
push
push
mov
fbstp
dec
mov
movsl
or
in
cmpsb
mov
mov
ret
and
dec
psadbw
add
and
push
xor
or
dec
inc
mov
mov
outsb
movsl
add
lret
push
lret
cmpb
pop
pop
jb
and
lods
add
add
and
or
or
mov
adc
les
xchg
test
test
pop
push
int
cltd
ljmp
sub
sub
xor
cmp
add
fwait
push
adc
cmp
mov
push
inc
insl
jae
out
adc
add
in
fstps
xlat
inc
sub
push
mov
add
mov
fmul
fsubrs
nop
add
pop
or
mov
rcr
mov
stos
add
adc
call
pusha
mov
sub
sbb
mov
xbegin
sub
call
test
sbbl
push
rorl
ds
pop
xor
inc
ret
test
cmp
fisubl
aad
push
rcll
push
pop
aaa
cmp
mov
sub
jnp
xchg
lock
lods
push
repz
mov
in
mov
mov
mov
shll
inc
dec
add
rcr
loope
sub
mov
push
or
jp
aam
sub
inc
andb
or
js
nop
add
adc
fcoml
out
pop
or
mov
dec
fdivp
shll
rorb
fsubrl
and
clc
fisubl
stos
sbbb
in
repnz
pop
or
ret
pop
pop
cmp
sub
add
sub
push
cmc
add
sub
nop
sub
jb
dec
je
pop
jmp
test
jae
xchg
inc
mov
cld
add
cmc
jmp
sub
pop
insb
lock
mov
seto
or
sub
add
push
decb
fcmove
add
stos
jae
mov
ds
pop
out
sub
mov
into
sub
add
bound
mov
inc
nop
adc
adc
mov
push
lea
jmp
push
pop
fsubr
in
mov
outsb
and
sbb
orb
adc
push
test
bound
lods
fwait
xchg
dec
add
negl
fdivs
test
dec
shl
xor
sbb
repnz
repz
je
mov
dec
lock
mov
mov
data16
cs
and
adc
pop
push
xchg
mov
sbb
mov
loope
push
das
lock
jp
clc
inc
dec
int3
dec
sbb
sub
sbb
push
inc
mov
xor
pop
mov
mov
insl
popa
push
movl
ljmp
rcr
stc
cwtl
or
mov
hlt
jns
add
jno
pop
fists
bound
ror
movsb
ficomps
nop
in
and
jg
adc
mov
push
sti
push
adc
cmpsb
adc
cmp
push
push
or
adc
pop
cmc
ljmp
cmpsb
addr16
or
pusha
lock
push
subl
enter
pop
add
aaa
mov
adc
xor
inc
cmp
rolb
jecxz
dec
mov
adc
xchg
push
loopne
lods
xor
and
adc
or
mov
or
add
and
xor
xor
sbb
pusha
dec
in
lcall
jl
jge
add
add
movsl
and
jo
cbtw
pop
ffreep
addr16
roll
fists
and
mov
or
ljmp
sti
xchg
xchg
ljmp
aad
xor
popa
out
mov
sbb
aam
out
cmp
xor
and
icebp
sti
add
arpl
xor
mov
pop
pop
sbbb
ret
push
out
push
add
push
outsl
xlat
movb
push
gs
push
decl
inc
aad
or
push
xchg
out
adc
fildll
insl
inc
mov
sbb
and
xor
adc
mov
jo
rol
std
ret
mov
ljmp
sbb
add
jmp
stos
dec
dec
push
std
das
push
dec
sbb
js
inc
sti
inc
jmp
mov
mov
cmp
ss
dec
dec
jo
call
clc
or
dec
adc
test
clc
std
negb
dec
cmp
enter
movsb
add
loope
insl
icebp
lcall
stc
in
idivl
add
andps
das
xlat
idiv
and
and
into
add
or
out
pop
sbb
or
or
pop
jno
add
loope
in
lea
sub
mov
xor
fsubrs
add
jg
je
aas
mov
pushf
sbb
mov
sarb
ret
subb
xor
cld
mov
or
jmp
mov
pop
fcomps
adc
aad
js
fildll
cmp
jg
pop
lahf
mov
fnstcw
mov
js
decl
lock
test
adc
arpl
loope
xchg
outsl
arpl
jno
mov
pop
in
inc
jbe
cmp
pop
cli
lahf
mov
xor
repnz
or
and
mov
fstps
jo
adc
mov
subb
jecxz
int
roll
adc
out
gs
sub
daa
pop
and
pop
add
push
xor
or
daa
xchg
jns
jmp
call
and
cli
incl
aad
int3
push
shrl
shrl
aad
cmp
jmp
jg
fbstp
jno
je
add
add
lret
scas
clc
xchg
push
mov
xchg
shr
xlat
test
test
rclb
das
mov
aam
push
or
push
into
in
mov
dec
lods
mov
or
lret
lcall
jle
pop
shrb
das
push
dec
jno
lret
mov
mov
incb
shrb
mov
lcall
cs
out
inc
dec
bound
jge
vpshlw
stos
push
ljmp
cmp
push
fdiv
sbb
cmp
shlb
adc
incl
sub
out
mov
leave
mov
xchg
xchg
cmp
loop
xor
cli
mov
ja
inc
mov
inc
dec
mov
std
jae
pop
scas
test
sahf
dec
int3
jnp
test
shrb
cmp
xor
das
fwait
xor
mov
jl
test
push
sbb
xchg
inc
or
movsl
mov
push
sub
mov
ljmp
cld
jl
or
in
mov
frstor
xor
imul
not
sub
clc
mov
push
repz
pop
adc
inc
and
push
sbb
dec
lock
in
clc
or
fcmovnu
or
out
stc
loop
mov
insb
int3
and
movb
frstor
js
and
data16
pop
push
daa
inc
cmpb
enter
adc
cli
setbe
or
les
pop
mov
cli
add
push
aaa
mov
adc
adcb
mov
fwait
or
xlat
lods
push
lea
or
pop
lods
dec
mov
jl
push
pop
out
lahf
xlat
repz
mov
mov
nop
push
movsb
push
lods
in
aas
mov
inc
nop
inc
stos
repz
or
inc
iret
into
xorb
pop
daa
fidivrs
mov
stos
push
jp
jle
rcll
adc
mov
jnp
pop
mov
xchg
xchg
cmp
mov
mov
repz
add
mov
mov
insl
sbb
dec
mov
outsl
ss
jnp
daa
popl
in
lods
adc
xchg
adc
xchg
lcall
out
add
bound
mov
in
sub
lods
cld
cmp
inc
pushf
mov
adc
js
sbb
mov
stos
jle
mov
xor
sub
adc
pop
shrl
or
popf
pusha
scas
test
int3
adc
dec
cmp
shl
or
lea
in
push
icebp
rcrl
ljmp
inc
in
mov
push
adc
test
adc
add
ret
pop
les
shrb
xor
fcomps
adc
leave
jae
jge
test
mov
loop
ret
mov
insb
orb
and
adc
leave
push
mov
jnp
repnz
orb
xor
sbb
ja
pop
int3
sub
lea
add
flds
fsubs
adcb
and
lret
jbe
pop
cwtl
fldl
sar
ret
dec
lret
shll
rcrb
jbe
xor
fisubl
pusha
cmp
sub
ss
test
mov
or
mov
sbb
int
xchg
push
ljmp
jnp
mov
stos
test
adc
add
pop
pop
cmp
in
push
rclb
or
sub
scas
pop
inc
rclb
add
cli
idivl
add
hlt
hlt
jp
aaa
fsubs
mov
in
stos
jg
add
xor
jecxz
xchg
mov
sbb
sub
dec
mov
loop
push
and
ljmp
inc
add
lock
pop
dec
mov
inc
jnp
sub
in
lds
fistpll
push
testl
popa
mov
jecxz
iret
pop
arpl
shll
test
adc
inc
cwtl
xor
mov
daa
mov
aas
pop
movl
push
mov
jne
into
shlb
jl
add
and
fdivrl
sub
fcompp
push
mov
clc
push
sbb
lock
sub
push
cltd
add
arpl
add
add
mov
or
test
mov
cmpsl
and
stos
mov
adc
scas
jmp
or
popa
inc
push
adc
push
in
push
outsb
add
mov
adc
cmp
test
jge
cltd
push
call
cmp
push
mov
mov
in
and
rorb
jg
outsl
lock
pop
in
ljmp
adc
sbbb
push
mov
loope
adc
fadds
adc
cmpsb
fsubrp
pop
xchg
jo
fcmove
andb
aas
or
loop
cli
rcrl
mov
jecxz
rolb
test
lods
mov
push
fists
aaa
cmc
test
fcoms
adc
cmc
sbbl
or
and
inc
push
xor
pop
cli
aaa
mov
inc
and
cmp
dec
std
cld
adc
mov
std
pop
testb
jp
mov
inc
gs
push
sbb
adcb
outsb
aas
xchg
push
add
lcall
inc
lret
adcb
lods
adc
sbb
cli
mov
orb
imul
mov
and
lret
fstl
pop
test
pop
into
pop
inc
cwtl
ljmp
sbb
sub
add
loop
fistps
repz
mov
loopne
adc
repnz
xchg
aam
test
sbb
fimuls
lea
sti
xor
das
rcl
das
inc
insb
pop
xor
fwait
and
outsl
push
imul
inc
stc
pop
cmpsb
xorb
es
icebp
imul
call
or
lds
xchg
sub
inc
mov
push
imul
dec
xchg
pop
movsl
loopne
inc
loop
adc
cmpsb
pop
psrld
mov
mov
and
pop
jge
mov
ret
ss
sbb
aad
push
dec
sti
pop
add
mov
stos
test
js
scas
add
cmp
or
leave
icebp
test
and
sbb
fldt
mov
ss
and
cwtl
adc
mov
stos
mov
or
xchg
fistl
in
pusha
lret
push
into
lock
into
xchg
cwtl
mov
and
adc
adc
fstp
xchg
pop
xor
scas
popf
pop
mov
jbe
pushl
lods
gs
shrb
push
in
shlb
mov
loop
jle
into
hlt
lds
cmpsb
push
or
aaa
mov
inc
hlt
xchg
inc
out
push
adc
xor
repnz
or
out
aaa
clc
pop
add
dec
sbb
pop
jo
mov
fs
push
and
inc
addl
add
mov
sbb
xchg
or
mov
or
jae
clc
inc
lcall
imull
ljmp
and
or
out
mov
and
rcr
push
pop
gs
sti
cmpsb
outsb
out
mov
adc
ret
lods
cwtl
adc
add
add
xor
dec
stos
pusha
imul
daa
or
into
inc
int
clc
sbb
ds
adc
jecxz
sbb
fwait
add
inc
add
adc
adc
aad
mov
pop
stc
dec
push
std
mov
mov
call
cmpsb
sbb
inc
sbb
and
or
sbb
call
push
jbe
sub
sbb
jmp
or
test
scas
rorl
push
jns
mov
push
out
mov
out
mov
popa
inc
xor
test
ret
pop
cld
add
test
mov
pusha
rolb
and
xchg
inc
je
cmp
jle
add
hlt
leave
cmpb
cmp
add
mov
sbb
clc
adcb
jbe
sbb
mov
pop
adc
scas
mov
sbb
sbb
outsl
sbb
adc
es
or
imul
lds
and
xchg
mov
fwait
mov
out
push
out
push
xchg
jg
push
mov
fcoml
add
push
mov
in
cs
jbe
pop
cld
jns
rorl
xor
aad
test
imul
repz
pop
loope
jne
out
popf
mov
mov
sbb
and
ret
xlat
add
inc
xchg
js
outsl
push
xchg
bound
mov
sbbl
test
jae
mov
mov
mov
into
xor
lcall
push
jmp
inc
clc
jmp
adc
ret
xorb
push
vpextrw
lds
adc
shrb
call
jmp
arpl
out
adc
jo
sub
cld
mov
add
pop
sbbb
popa
iret
sbbb
and
and
lds
dec
jae
add
jecxz
pop
testl
add
ja
add
mov
jecxz
push
add
pop
cld
dec
sbb
inc
loope
pushf
sbb
push
mov
fcompl
incl
test
add
test
and
mov
arpl
cld
and
fisubs
jp
push
jne
inc
cmpsb
inc
jge
inc
das
icebp
inc
imul
inc
ds
jge
push
mov
loopne
inc
lods
mov
pop
mov
mov
and
ljmp
pop
add
push
add
inc
in
jg
inc
mov
into
sbb
mov
jns
mov
sub
adcb
stc
add
call
dec
js
pop
aaa
arpl
popa
jbe
cwtl
and
push
mov
inc
sarb
adc
rorl
add
pop
dec
cmpsl
sti
leave
lds
mov
xor
movsb
mov
lcall
pop
test
fisubl
fcmovnbe
xchg
into
mov
fidivrl
mov
mov
rclb
mov
scas
sub
cli
incl
bound
fucom
ret
and
popf
movsl
cli
adc
mov
sbb
fsubs
js
add
pop
add
lahf
inc
lahf
push
out
add
inc
pop
in
loop
into
out
test
cmp
scas
add
pop
nop
or
loop
xchg
cmp
roll
das
pusha
std
test
add
je
pop
ljmp
insl
push
jmp
test
mov
fistl
shrl
gs
pop
mov
jmp
adc
inc
movsl
sub
adc
outsl
in
movsl
mov
sbb
loopne
cld
ret
push
std
add
jmp
mov
stc
nop
lods
lcall
mov
int3
imul
outsl
in
xor
loop
inc
mov
jns
pop
imul
movsl
mov
sub
in
sbb
decl
or
gs
dec
and
inc
add
test
sti
incl
sub
dec
int3
add
and
sbb
pop
pop
bound
fistpl
push
insb
ret
cmp
sti
aas
loope
sub
jne
and
xchg
fmul
mov
lahf
sbb
cmp
push
call
pop
fsubl
ficoms
cltd
ret
dec
aam
outsb
mov
jmp
and
pushf
sub
jmp
adc
mov
or
das
cwtl
pop
fs
inc
pop
or
gs
push
mov
add
push
cld
loop
shrb
sbb
add
dec
loope
mov
clc
push
leave
scas
jb
hlt
adc
jp
icebp
ret
sahf
test
dec
sbb
inc
xchg
jg
mov
lea
outsb
insb
mulb
mov
or
mov
mov
adc
or
test
enter
ret
push
sbb
mov
fbstp
js
test
test
jle
jno
jo
push
push
jecxz
in
cmp
inc
imul
dec
mov
les
push
call
aad
jmp
add
mov
cmp
dec
daa
out
pop
mov
movsb
lods
lea
cmp
lds
mov
std
cli
lahf
add
pop
in
fistpll
xor
stc
pop
outsl
into
gs
lods
add
inc
sub
xchg
push
and
mov
pop
dec
push
stc
pop
fistpl
nop
pop
jp
insl
test
xor
lcall
mov
into
or
stos
xchg
sub
inc
and
cli
inc
inc
popf
jle
mov
xchg
fsubrp
fimuls
sub
inc
stos
xor
rorb
push
cld
jmp
lock
popf
rorb
jle
enter
insl
in
sti
jl
jg
add
mov
cmp
dec
jno
sub
mov
mov
shr
jbe
xor
lret
inc
aas
popa
mov
sub
loop
lret
adc
dec
ss
push
or
fst
push
or
jle
or
push
add
or
inc
mov
inc
or
jmp
jmp
push
mov
inc
mov
adc
push
xor
mov
mov
add
add
jb
cmpsl
notl
ja
hlt
and
insb
and
std
pushf
imul
sbb
push
sub
xchg
jmp
mov
mov
xor
mov
fwait
or
pop
push
inc
jmp
loopne
dec
adc
rorb
test
cmp
roll
push
or
push
lods
mov
or
js
hlt
mov
add
add
add
mov
sub
push
shlb
jo
push
enter
push
cltd
push
mov
add
xor
xchg
adc
inc
inc
inc
xor
mov
insl
int3
mov
sti
mov
dec
mov
add
adc
es
fisubrl
mov
adc
jbe
fcmovb
or
add
into
adc
sub
idivl
adc
cmp
or
sarb
cltd
cmc
adc
or
inc
jle
out
lds
sub
sub
cwtl
xchg
cld
sahf
push
movsl
push
add
or
imul
ljmp
fcompl
dec
sbb
mov
ret
mov
int3
mov
or
mul
sub
xchg
ja
sbb
test
adc
roll
cmp
sbb
lret
jg
inc
xlat
pop
test
jne
mov
sbb
fdivrs
test
xchg
dec
sbb
je
and
push
jge
mov
shll
xchg
sub
inc
dec
lret
test
rorl
cmp
and
clc
push
add
xchg
in
jecxz
andb
inc
dec
xorb
xchg
cmp
iret
or
push
aas
clc
jb
push
std
lahf
sub
imul
jo
and
add
movsl
inc
fcompl
icebp
adc
loop
push
call
or
lods
lds
push
dec
lret
cld
mov
mov
hlt
mov
xchg
out
cmpsb
add
adc
pop
ret
in
push
jmp
sbb
insl
cmpsb
rolb
es
adc
out
fstl
fldl
add
push
adc
adc
add
rolb
gs
adc
mov
adc
shlb
pop
push
iret
jnp
mov
xor
pop
inc
sub
ljmp
xor
xchg
sbb
xchg
test
hlt
jl
mov
movsb
js
dec
lods
cs
dec
sub
cld
bound
imul
jbe
stos
jp
push
pushf
add
sub
test
sbb
sbbl
jp
sbb
call
inc
sbb
sub
mov
insb
xor
inc
xor
xchg
stos
pmuludq
inc
push
push
cwtl
xchg
or
push
dec
loope
js
jg
das
in
test
and
insb
inc
pop
insb
cmc
sar
xor
xor
js
jb
and
insb
adc
ljmp
add
dec
sub
push
ret
mov
add
add
dec
shll
pop
loopne
xchg
or
into
jnp
lahf
adc
push
jge
sbb
bound
push
or
sub
adc
mov
aaa
xchg
jo
dec
es
jle
mov
rclb
in
inc
mov
pop
and
outsl
push
out
hlt
mov
push
mov
scas
push
mov
cmp
mov
sub
dec
inc
fcompl
aad
pop
cld
mov
lds
and
sub
dec
push
dec
shl
in
incl
sbb
xchg
mov
and
xchg
mov
and
dec
adc
or
mov
push
rcr
push
lcall
aas
mov
test
stos
or
sub
inc
addb
xor
pop
add
hlt
mov
sbb
add
adc
jg
mov
int3
and
pop
inc
pop
mov
loopne
orb
push
outsb
push
xchg
mov
cmc
test
rcrl
xor
addr16
daa
sti
stos
sub
test
rcrl
pop
andb
cmp
in
push
mov
xchg
pushf
push
and
inc
xor
outsb
loop
jb
cwtl
testb
mov
inc
cmp
pop
xchg
xchg
push
jle
mov
and
out
test
jle
sbb
pushf
lods
ret
xor
pusha
enter
jo
sub
dec
imul
arpl
inc
loop
xor
mov
sbb
pop
and
aam
mov
insb
mov
adc
es
push
enter
mov
xchg
fstl
inc
sub
dec
cltd
in
dec
pusha
mov
mov
roll
dec
push
ficoml
jbe
inc
jne
mov
cmp
adc
cwtl
scas
pop
data16
add
adcl
mov
ret
ret
mov
sbb
aam
mov
mov
outsl
call
pop
jne
sub
push
inc
inc
sub
sbb
cmc
mov
ret
pop
dec
inc
jge
pop
cmp
std
repnz
cli
adc
push
push
imul
mov
and
cmp
jecxz
add
mov
jge
shrb
mov
js
add
xchg
mov
jae
inc
fisttpl
out
mov
imul
ja
add
adc
inc
and
mov
sbb
mov
pop
js
mov
pop
xchg
sbb
push
and
push
std
movsl
xchg
je
dec
push
pop
stc
cli
outsl
jg
cli
push
pop
bound
stos
pop
popa
aas
or
rcrl
sub
xchg
mov
adc
lea
test
repnz
hlt
or
push
shll
and
dec
jno
sti
push
sub
cld
xor
jae
inc
pop
mov
leave
xchg
popf
mov
fildll
cmp
pop
push
ljmp
mov
dec
xor
popf
shll
jmp
popa
and
aaa
cmc
ret
lcall
mov
adc
scas
mov
sti
test
into
xchg
jnp
push
pop
insl
call
icebp
add
adc
ret
and
loopne
push
pop
clc
mov
cltd
out
or
xor
aam
shrb
call
repz
iret
mov
mov
dec
fildl
mov
push
jns
inc
fsubs
nop
stos
pop
mov
ljmp
and
mov
daa
je
lcall
add
xchg
fs
nop
push
pop
push
pop
cmp
in
or
mov
adc
shlb
rcr
test
xor
es
sbb
call
inc
out
adc
pop
movsl
add
inc
pop
and
cmp
jg
push
hlt
ljmp
jl
sbb
movsl
adc
push
cmp
xchg
addr16
jl
fists
adc
jno
push
cmp
lcall
mov
dec
leave
lods
daa
pushf
push
jg
roll
jle
mov
mov
or
add
int
int
xor
adc
dec
xor
mov
jno
imul
jns
ret
clc
roll
xor
sub
lock
inc
sub
in
fistps
cs
arpl
sbb
sub
shll
loopne
push
xor
mov
xlat
jo
out
inc
mov
inc
in
fsubr
bound
stos
jo
mov
sbb
mov
push
ss
outsb
jge
out
std
inc
or
outsb
xor
inc
mov
ret
lock
mov
mov
cmp
loope
ljmp
jno
mov
or
and
loopne
push
bound
xchg
leave
pushf
rcrl
push
lea
sub
or
jl
pop
lock
insb
out
test
test
incl
neg
nop
mov
xchg
stos
and
adcb
pusha
xor
mov
jl
push
fwait
add
mov
cmp
jle
aam
sub
and
out
stos
orb
or
push
cltd
mov
push
rcll
push
repz
mov
test
mov
inc
les
les
imul
sbb
add
sbb
push
and
jg
dec
dec
push
inc
and
sub
jb
push
int3
aaa
dec
push
mov
lea
lea
cmp
aam
xchg
aas
mov
sahf
sub
roll
cs
sub
push
data16
rorl
rorb
push
mov
add
adc
dec
adc
das
add
call
cmp
and
adc
or
add
xchg
cmp
and
xchg
jp
push
xor
in
jle
and
mov
adc
mov
enter
and
icebp
mov
hlt
push
push
xor
jmp
ds
icebp
push
or
or
xlat
sbb
push
xor
or
mov
aam
fisubrl
iret
inc
fs
rolb
sub
and
loope,pn
addr16
clc
push
inc
cmp
xor
mov
loopne
fdivl
xchg
jno
les
mov
xor
adc
or
jecxz
pop
and
clc
mov
add
test
pop
scas
cmp
hlt
mov
dec
push
jp
cld
test
subl
push
mov
aad
push
stos
pusha
iret
sub
adcl
cs
xchg
sbb
ljmp
mov
loopne
add
incl
out
mov
adc
or
shlb
mov
jnp
inc
push
nop
icebp
insb
ss
cmp
jne
mov
pusha
imul
mov
mov
imul
pop
push
lods
push
dec
imul
stc
jp
cmp
inc
push
pop
pusha
mov
mov
inc
xchg
fistpll
or
cmp
mov
stos
ljmp
inc
push
cmp
pop
jne
push
mov
insb
mov
sbb
js
ss
or
inc
add
and
push
push
loopne
in
sti
scas
aam
sub
adc
lods
adc
cmpl
lods
and
mov
cli
movsl
pusha
xor
jecxz
pusha
cmpsb
jmp
mov
xchg
sub
or
ret
mov
mov
dec
mov
aaa
call
fdivl
jbe
add
lods
xchg
fldl
sub
mov
xchg
push
xchg
push
cs
mov
loop
bound
dec
outsb
mov
ror
cmp
out
inc
repz
fists
lea
add
push
pusha
or
dec
fst
loop
int
js
daa
or
jb
movsb
or
aam
jae
push
popf
sbb
insl
fnsave
fcomip
scas
sub
mov
out
lahf
popa
pop
test
xchg
or
xchg
shlb
int
popa
cmpl
out
fwait
mov
mov
imul
icebp
xchg
xchg
mov
and
pusha
push
sbb
jne
inc
test
jecxz
cs
inc
cwtl
mov
sub
xchg
enter
incl
mov
xor
shll
push
dec
ret
sti
jno
inc
pop
adc
stos
jb
pop
mov
inc
inc
sub
inc
or
dec
test
jbe
fs
and
push
add
push
xor
test
add
push
bound
pop
rcrl
aaa
add
in
adc
inc
cmp
clc
cmp
outsl
push
cmp
nop
sub
and
xchg
es
dec
in
fistl
in
jo
mov
insb
sbb
mov
clc
mov
imul
insl
clc
fidivrl
xor
cmp
xor
fcomps
xchg
or
ljmp
xchg
jo
cltd
orb
fistps
repnz
and
sbb
loop
xor
mov
mov
sbb
loopne
sub
jg
icebp
outsl
adc
pop
mov
xchg
adc
dec
pusha
loope
sub
push
div
ds
mov
das
in
push
aas
sbb
out
mov
aam
testl
cld
xor
cld
outsb
pop
xchg
sub
mov
sbbl
xor
jb
xchg
add
ret
sbb
push
mov
cmp
or
movsl
sbb
mov
test
pop
sbb
ret
dec
sub
dec
push
and
mov
das
adc
neg
inc
and
or
fdivrs
jbe
lahf
cmp
sub
cs
mov
cmp
in
lea
cmp
adc
andl
lods
lcall
cmp
sti
and
mov
cmp
add
insb
and
xchg
leave
dec
fldt
insb
add
mov
jno
sub
inc
mov
and
mov
inc
jg
fldenv
xchg
and
mov
frstor
std
mulb
jne
lea
loop
sub
mov
push
push
aaa
push
fucomi
jmp
andb
pop
push
sbb
inc
imul
arpl
cmp
adc
out
add
push
mov
aam
sbb
add
and
push
aad
push
out
mov
jb
inc
jo
adc
shl
jmp
jg
pop
icebp
inc
mov
mov
xor
addr16
add
inc
mov
loop
and
add
add
aad
fistpll
rolb
add
addb
cmp
dec
rcrb
out
xchg
popf
cmp
mov
jno
test
mov
push
cmpb
fcomps
fcompl
call
adcb
add
mov
sti
roll
movsl
or
mov
inc
loopne
ror
mov
adc
sbb
jae
outsl
pop
js
and
pop
and
pop
add
es
stos
xchg
or
fisubrs
fs
mov
out
inc
es
jo
ljmp
xor
mov
outsl
mov
jne
jp
or
frndint
add
inc
inc
xchg
testl
mov
movb
into
and
or
fisubs
mov
fdivr
mov
adc
sub
push
hlt
sub
jns
pop
add
jecxz
push
out
aas
adc
jecxz
sbb
mov
push
jmp
jnp
shr
in
out
mov
xchg
fnstsw
push
stc
imulb
rolb
sbb
xchg
fmuls
jns
pop
icebp
mov
out
or
pop
mov
pop
cltd
and
outsl
mov
adc
mov
mov
lcall
fwait
fs
cmp
mov
or
xchg
mov
push
jo
cli
ljmp
leave
push
dec
fldenv
sub
adc
mov
sub
subb
je,pt
pop
js
mov
adcb
mov
cld
adc
rorl
mov
cltd
cmp
bnd
jmp
rcr
push
flds
scas
mov
out
dec
push
add
clc
and
cmp
ret
sbb
mov
cmp
pop
imul
add
jl
pop
push
fisttps
or
inc
rol
shlb
cmpsl
call
jo
sub
push
lahf
sbb
insb
daa
sub
leave
push
sti
xchg
dec
push
inc
addr16
jge
ja
rolb
push
ror
push
in
popa
nop
cmp
dec
data16
fsubr
idivb
and
dec
inc
add
or
daa
add
xchg
pop
cmp
adc
lock
sub
jmp
xor
in
dec
xor
std
out
jo
iret
das
inc
test
xchg
ret
mov
popf
inc
ret
in
mov
jns
fnclex
cmp
pop
or
push
xchg
nop
xor
inc
adc
icebp
lock
subb
pusha
add
mov
xor
and
fmull
sbb
clc
cmp
sub
mov
imul
jns
das
add
fcmovnu
mov
adc
ret
arpl
cwtl
sbb
movsl
or
mov
sbb
cmpb
in
push
add
fbstp
mov
cld
cmp
repnz
rorl
mov
fnstsw
sbb
outsb
mov
mov
or
imul
mov
lcall
imulb
std
push
cmp
pop
adc
addb
adc
cmc
add
loopne
ss
mov
sub
mov
and
aad
call
mov
jle
xchg
adcl
add
mov
add
push
adc
add
jl
push
dec
daa
mov
jmp
push
mov
loope
jns
nop
adc
insl
loope
pop
sub
mov
mov
ljmp
add
test
dec
out
pop
xchg
rcrl
add
in
std
stos
cwtl
scas
push
outsl
cld
mov
stc
into
inc
icebp
push
jg
rclb
inc
mov
sub
loope
mov
icebp
outsb
movsl
mov
js
inc
arpl
fdivr
incl
ror
push
xchg
pop
gs
pop
xchg
ds
ret
cmp
inc
icebp
mov
movsl
sbbl
rcl
fnstsw
shlb
ret
js
cmp
mov
insl
push
in
mov
jnp
bound
jle
mov
ret
pop
add
push
in
mov
cwtl
dec
fstpt
xor
jg
leave
adc
mov
mov
incl
andl
sub
mov
xor
push
incl
rcll
inc
out
div
adc
stc
shll
push
cmc
jecxz
pop
out
push
add
out
mov
push
mov
sub
mov
loope
es
call
cli
pop
jecxz
pop
fadd
push
das
test
inc
idiv
insl
jne
dec
pop
inc
movb
jecxz
leave
xor
mov
sbb
jae
mov
inc
dec
inc
ja
fs
or
stc
pop
inc
push
pop
popf
and
je
imul
push
dec
aam
out
clc
xchg
xchg
nop
scas
sbbl
sti
andl
fstpl
fisubs
or
add
pop
lret
aaa
fcmovb
jae
cmc
scas
sub
icebp
sub
jmp
loop
test
mov
cmpsb
dec
add
add
lea
imul
mov
push
lret
bt
mov
pop
dec
loop
nop
mov
loopne
dec
fnstenv
mov
inc
in
scas
das
cmc
rclb
mov
inc
xchg
mov
xchg
outsl
std
not
lock
mov
aam
andb
icebp
in
test
pushl
icebp
shll
and
int
sub
sarl
xchg
adc
add
mov
leave
and
insl
or
cmp
loope
jg
das
inc
xor
add
add
inc
cmp
add
jge
xor
addl
inc
jmp
pop
std
lcall
dec
test
and
sbb
push
push
sub
dec
rcll
inc
cmc
out
push
xchg
test
in
iret
inc
sbb
push
dec
popf
sub
test
xchg
jo
mov
movsl
pop
jg
test
dec
adcb
jnp
daa
and
jg
cmp
cmpb
rcll
mov
mov
iret
push
sbb
lods
loopne
add
lods
lcall
xchg
cmp
sbb
filds
sbb
popf
and
mov
fwait
xchg
test
mov
lock
inc
mov
lcall
pusha
cmp
xchg
jmp
jg
std
incl
xor
adc
push
inc
dec
mov
outsl
rclb
add
cmp
mov
cmp
xchg
sbb
das
repz
jg
jb
rorb
fldt
test
decl
test
cmp
wrmsr
lods
imull
scas
xchg
xchg
sub
push
cmp
rclb
cs
xor
loope
sti
outsl
push
inc
in
lret
mov
or
stos
or
mov
or
cs
mov
push
daa
xchg
cwtl
movsb
mov
dec
repz
push
lock
push
mov
shl
outsl
mov
loope
jnp
mov
movsb
and
mov
jb
adc
cmp
testb
xchg
dec
and
sbbb
in
popa
sub
xor
ret
in
js
add
sbb
xor
not
mov
mov
sahf
shlb
jae
mov
ret
jle
in
or
push
mov
cmp
sbb
clc
or
jl
movsl
mov
mov
jge
fmull
shrl
cmp
rclb
loop
mov
arpl
mov
mov
int
push
sarb
push
xchg
and
inc
out
inc
sub
das
adc
inc
cmp
popf
inc
ljmp
add
mov
mov
xchg
and
sub
mov
add
push
mov
mov
jp
insl
pop
push
bound
cmp
imulb
xchg
dec
push
lock
dec
push
and
incl
pop
inc
add
in
pop
xor
sub
popa
insb
xchg
mov
dec
int3
sbb
xchg
cwtl
xchg
jp
lret
dec
mov
push
data16
das
lods
dec
adc
lahf
xchg
push
mov
push
clc
rcrb
sub
popa
push
jl
sbb
iret
scas
inc
mov
add
or
mov
inc
push
pop
sahf
ja
or
cmpsb
xchg
sub
cli
addb
xor
dec
icebp
inc
xchg
lods
jg
out
icebp
or
lret
stos
push
clc
push
mov
movsl
fwait
in
outsl
incl
std
sahf
fisubrs
sub
stos
imul
mov
push
mov
sbb
jle
push
push
jp
xor
xchg
icebp
out
dec
imul
test
sbb
adc
or
xchg
push
sbb
jg
add
arpl
aas
aaa
push
pop
in
jae
bound
add
movsl
sub
int3
xchg
aaa
leave
xor
lds
sub
or
jo
dec
push
dec
adc
jo
decl
hlt
mov
out
mov
loopne
call
or
sbb
add
loop
adc
jge
sbb
add
push
pop
pop
mov
ficomps
out
ss
sub
inc
inc
insb
pop
adc
ljmp
je
repz
cwtl
in
iret
aas
out
or
shr
xor
adc
clc
adc
cmp
mov
mov
cmp
pop
aam
xor
lcall
add
sbb
pop
sahf
adc
mov
and
dec
in
push
sbb
xchg
adc
hlt
sbb
mov
push
mov
test
jo
mov
jg
xor
fisubrs
pop
prefetchwt1
test
inc
mov
sbb
test
add
sub
jne
dec
cmp
xchg
adc
pop
dec
push
out
push
out
lret
add
pop
movsl
dec
inc
pop
lds
add
xchg
push
addl
push
pop
jmp
and
sbbb
jp
out
cwtl
xorb
sub
int
je
push
push
jp
cmc
add
popf
add
and
dec
or
mov
xor
sub
push
loopne
adc
iret
sarb
add
rolb
js
jbe
sbb
push
loopne
adc
sbb
xchg
adc
mov
xchg
push
sub
mov
add
lock
xor
inc
popf
jno
ss
or
add
add
mov
add
push
cld
lods
jne
mov
add
jl
mov
dec
and
xchg
adc
mov
dec
je
adc
pop
push
fldl
sarl
out
and
pushf
jmp
cmp
sub
push
adc
addb
int
adc
in
movb
mov
and
xchg
loope
mov
mov
mov
mov
xor
jge
add
add
adc
fmuls
sub
dec
adc
cwtl
jge
cld
out
xchg
add
sbb
fimuls
add
shlb
mov
arpl
orb
adc
lods
dec
pop
cmpl
cmpsb
lahf
aam
jb
push
jl
addr16
mov
sarb
pop
movsl
sub
xor
fs
lds
pusha
jmp
or
and
insl
in
das
lock
lret
xchg
adc
sub
jge
sbb
call
mov
scas
ja
jno
orb
pop
jl
ss
inc
daa
pusha
push
loope
in
mov
push
loopne
pusha
inc
dec
in
rorb
or
out
cli
shll
add
sbb
mov
pop
call
mov
rcrb
adc
dec
push
or
pop
outsl
and
push
stc
rclb
cmp
insb
push
das
stos
sbb
jno
adc
sarb
sar
or
idivb
push
and
les
cld
sbb
push
dec
fsubp
adc
loopne
mov
dec
dec
or
mov
jo
incb
das
icebp
pop
imul
push
gs
mov
jg
test
mov
mov
aam
jmp
test
fnstsw
aaa
mov
dec
xlat
roll
add
cmp
adc
fcmovbe
ret
sbb
push
adc
cld
mov
loopne
xchg
add
push
push
mov
inc
and
xor
xlat
mov
xor
out
loopne
jno
pop
sub
pusha
xlat
clc
loopne
or
adc
and
out
leave
lcall
hlt
mov
jecxz
xor
pop
xchg
subb
pop
rclb
pop
clc
and
les
adc
adc
xor
sbb
and
pop
sbb
jbe
sub
mov
call
in
jbe
push
push
adc
mov
add
xchg
and
sub
jle
lret
scas
cltd
mov
xor
fs
shrl
inc
fadd
sub
xor
sub
mov
push
test
or
dec
repz
hlt
das
dec
imul
pop
loop
lcall
pop
pop
and
add
call
das
shlb
pop
mov
sub
fcomps
inc
stos
aas
adc
leave
fisubrs
popf
dec
pop
jl
mov
clc
loope
add
xchg
inc
mov
mov
pusha
js
std
or
cs
push
cld
outsb
push
fistpll
mov
test
cld
jp
nop
pop
loop
mov
jne
out
inc
jecxz
loop
ret
push
mov
cmp
sbb
pop
rcr
pop
jmp
fs
jmp
test
push
cli
or
sarb
add
mov
outsb
xor
adc
jp
or
out
push
mov
sbb
pop
cmp
inc
and
jge
out
inc
lret
push
pop
test
loop
loope
or
cmp
lcall
dec
test
aaa
dec
dec
insb
shlb
or
push
bound
je
adc
inc
fsub
pop
push
arpl
dec
popa
lds
push
and
adc
dec
les
fcoml
jno
push
jae
mov
in
lea
out
pop
push
sbb
pushf
push
jmp
inc
es
es
incl
jl
sub
xor
out
andb
cli
push
or
push
xor
out
jg
test
lcall
mov
sbb
add
out
fisubl
popf
jg
cmpsb
icebp
and
test
mov
out
faddl
inc
push
and
movsl
out
and
inc
iret
addr16
lds
pusha
inc
xchg
es
lcall
test
xchg
adc
btr
or
lds
pop
sbb
popa
fdivr
xchg
adc
jae
test
mov
lcall
lock
into
sbb
jecxz
dec
shrl
push
daa
pushf
adc
jo
sub
call
mov
jae
pushf
das
pusha
div
incl
cmpsl
int3
setb
repz
dec
out
mov
xchg
pop
xchg
mov
outsl
mov
test
lcall
mov
cmp
mov
shr
dec
lcall
movsl
cmp
pop
adc
adc
push
test
movsl
outsb
cmp
xor
and
incl
mov
out
add
xor
xor
or
dec
std
mov
or
and
mov
sahf
icebp
ljmp
sbb
add
cli
sbb
adc
mov
and
insl
out
inc
and
mov
mov
push
fwait
inc
cmc
dec
mov
pop
jae
xor
adc
jnp
mov
aad
xchg
aam
int3
pop
mov
mov
in
fs
sbb
lret
mov
pop
lret
mov
fnstcw
mov
sub
sub
or
jmp
cld
stos
orb
pop
aaa
add
es
dec
xor
or
inc
add
int3
fimuls
scas
out
test
es
adc
lock
fldcw
das
mov
mov
fdivrs
nop
push
adc
adc
inc
dec
pop
test
mov
inc
xadd
mov
cmpsl
mov
sti
pop
add
pop
and
mov
xchg
into
loopne
mov
add
rorb
jmp
or
fnstsw
mov
test
or
lea
xor
aad
pop
aas
push
xor
lock
loop
fwait
push
mov
insl
pop
mov
loop
in
mull
fcoml
lods
fwait
fwait
xchg
or
insl
lea
imul
es
jbe
or
cmp
add
inc
inc
mov
clc
lock
and
cmc
test
sbb
or
dec
test
mov
fistps
mov
jne
add
mov
lds
mov
xor
sahf
add
jecxz
int3
sub
movb
inc
stos
lds
or
sub
push
sub
mov
mov
test
insb
mov
mov
mov
add
aad
mov
lea
adc
jg
outsb
sub
sbb
xchg
ljmp
fdivrp
push
lds
inc
rcrb
lods
mov
add
mov
jnp
push
sbb
add
cmp
aaa
xor
hlt
sbb
fcmovbe
in
mov
jb
xchg
pop
clc
xchg
mov
sub
adc
mov
jg
scas
popf
jae
or
adc
sub
repnz
dec
sbb
mov
add
dec
aad
sbb
push
out
mov
push
jge
jmp
xorb
mov
or
pop
jl
iret
mov
scas
pop
inc
sti
fisttpll
inc
xor
or
or
push
push
sahf
fistps
jg
xchg
or
adc
jb
mov
xchg
shrl
dec
popl
and
mov
std
pop
push
test
pop
adc
out
push
or
sbb
xor
stc
sub
cmc
mov
outsl
gs
out
jmp
push
jl
es
xchg
test
adc
cwtl
cli
test
dec
movsl
insb
fiadds
pop
mov
movsb
xor
xchg
aad
lock
sub
test
orb
dec
push
pusha
pusha
test
outsb
cld
add
lcall
outsb
les
pop
icebp
mov
lret
lea
roll
sub
lea
or
dec
pop
add
jns
xchg
and
sbb
mov
adc
pop
add
sub
mov
xchg
xor
outsl
mov
cld
aaa
lods
jecxz
dec
sub
in
fwait
mov
in
ret
shl
or
pop
les
xor
hlt
push
xor
hlt
lods
negb
jge
insb
push
mov
lds
jo
pop
sti
push
rolb
push
push
cmp
add
not
test
jno
shll
ret
cwtl
xchg
sbb
add
je
test
cs
arpl
add
mov
inc
scas
rcrl
adc
insl
adc
and
sub
pop
lock
js
jg
jecxz
shr
clc
ret
add
inc
mov
test
stos
fistpll
in
iret
xorl
loopne
push
and
jne
ret
iret
popa
push
fstl
push
inc
xchg
lock
sahf
movsb
sub
lret
ret
or
push
pop
out
jb
popa
mov
add
push
jb
cmp
fisttpl
shll
xlat
xor
sub
movsl
fbstp
adc
mov
xor
adc
ja
adc
mov
jne
sbb
nop
mov
call
or
mov
mov
sbb
mov
fstl
sarb
jmp
jle
pop
push
pop
mov
xor
in
pushf
mov
lret
les
lods
inc
fisubrl
mov
xchg
xchg
sbb
add
shrb
push
fwait
mov
inc
jbe
in
mov
sarl
sbb
add
pop
inc
lahf
insl
js
jb
mov
mov
jl
mov
stos
adc
xchg
jnp
xchg
or
add
das
push
les
hlt
push
push
xor
fistl
add
sub
mov
dec
loopne
xchg
adc
mov
jo
push
add
mov
out
sbb
pop
icebp
fistps
mov
inc
je
add
pop
insl
add
lods
sbb
lea
cwtl
add
mov
adc
add
cld
movsl
jnp
movb
addl
inc
add
or
sbb
insl
out
fwait
dec
orb
xchg
stos
gs
jl
inc
push
lds
lret
aaa
adc
xchg
mov
fsts
jbe
repz
dec
ds
mov
adc
inc
jae
dec
mov
push
jge
lock
lcall
call
rorl
fimull
and
stc
mov
dec
add
mov
out
insb
rorb
adc
ret
ss
test
sbb
jno
fidivrs
js
push
outsl
pop
das
mov
fucomip
ss
xlat
lret
stos
jl
or
mov
je
loopne
sahf
repnz
mov
and
add
cltd
or
xchg
insl
cmpsl
pop
lock
push
fcoml
loope
cmpsl
in
fwait
int
lcall
lock
and
fs
push
out
push
sbb
shll
inc
loop
dec
adc
sbb
mov
cmp
ljmp
aad
rolb
mov
and
jb
stc
cmc
adc
xor
inc
sbb
cmpsb
or
in
or
pusha
add
push
adc
arpl
lock
andb
push
mov
cld
adc
push
mov
sbb
inc
inc
cmovne
xor
ja
or
mov
mov
mov
jno
test
inc
fistpll
add
adcb
add
lods
clc
daa
mov
and
mov
mov
jle
clc
adc
adc
test
lret
arpl
dec
mov
mov
adc
jp
inc
sbb
scas
repnz
stos
pop
pop
bound
aaa
je
jo
and
out
outsl
stos
pop
pop
jnp
cmpsl
sbb
aad
outsl
lock
jnp
insb
sub
sbb
pop
mov
clc
xchg
aad
decl
xchg
pop
int3
push
pop
lock
jns
mov
ja
insb
mov
test
rolb
test
mov
in
dec
xor
xchg
ja
pop
add
or
icebp
aad
call
stos
or
addb
aam
bound
xchg
lea
adc
or
mov
adc
int
mov
rcrl
lret
or
xchg
push
or
fstp
mov
push
and
mov
dec
push
xor
test
inc
mull
adc
aam
sbb
xor
and
sbb
out
cmc
add
dec
pop
mov
ljmp
add
pop
insl
subl
stc
fisubl
aaa
inc
outsl
lock
loop
sbb
inc
mov
push
cmc
inc
xchg
mov
outsb
adc
push
std
dec
lea
dec
daa
jb
push
jge
push
xor
mov
insb
mov
fs
xor
incb
add
sbb
aaa
cmp
in
insl
rclb
add
les
into
into
out
cs
outsl
sub
lods
orl
cmp
out
popf
or
outsl
rclb
push
popa
sbb
sbb
lods
enter
and
in
xchg
cmp
mov
lret
pop
sbb
dec
cmp
enter
scas
push
lcall
fnstenv
xor
sbb
xchg
call
dec
rsqrtps
sub
and
stc
adc
push
or
xor
roll
cli
mov
push
mov
outsb
cwtl
subb
ret
enter
mov
out
push
sti
add
rcrb
ja
and
mov
loop
pop
xor
sub
call
xlat
dec
and
mov
add
mov
add
ret
sub
cs
les
jle
loop
ss
test
pop
or
fsubs
jge
lds
cli
lret
jmp
cwtl
insl
add
es
pop
aam
push
and
cmc
mov
data16
fwait
xchg
jmp
xchg
jg
inc
push
adc
lods
popf
mov
and
and
add
jbe
adc
push
dec
or
mov
inc
mov
sub
lret
sub
mov
mov
push
sar
in
jg
sbb
hlt
xor
jmp
mov
shlb
adc
jg
hlt
mov
shll
cld
push
xor
sbbb
rcr
cmpsb
sbb
xchg
scas
push
loop
cmc
scas
mov
mov
adc
xchg
ret
xchg
fists
mov
je
inc
andb
mov
pusha
push
fstpt
cmp
mov
insb
sahf
orb
lock
ret
or
fimull
imul
cltd
rorl
stos
mov
jb
mov
bound
xabort
aad
mov
cmp
dec
lret
cli
sub
jg
mov
rorl
or
push
jmp
les
and
sub
cmpsl
mov
cmpsb
iret
ja
rclb
lods
lds
mov
stos
ljmp
ljmp
mov
mov
cltd
dec
or
enter
and
fidivl
icebp
cmp
dec
mov
imul
push
add
jg
jno
out
fisubs
lret
xchg
adc
xchg
xor
shll
mov
and
adc
add
jg
xchg
pop
xlat
push
enter
jl,pn
sbb
daa
repz
inc
dec
jg
call
jo
fbstp
pop
xchg
push
jae
and
xchg
push
pop
mov
lret
xchg
fwait
dec
outsl
pop
cld
mov
in
pop
xor
adc
xchg
les
out
inc
jo
decl
and
dec
jmp
in
push
and
cmpsb
sub
mov
out
sbb
adc
aas
mov
push
clc
test
mov
cli
dec
roll
push
test
lahf
xchg
rclb
xchg
mov
fdivrp
scas
mov
push
fists
inc
xchg
push
jns
ds
jae
in
jg
sub
lods
mov
xchg
jns
pop
adc
add
movsl
lods
test
mov
inc
sti
rcrb
ss
xchg
test
jp
movsb
inc
adc
dec
data16
jl
jle
push
inc
in
pop
jae
sbb
mov
clc
outsl
icebp
or
and
and
outsl
mov
xor
and
sub
dec
xor
ret
mov
fadds
test
rcrl
leave
into
mov
xchg
inc
jecxz
rorb
mov
xchg
test
pop
jne
dec
sti
test
xchg
xor
or
xor
arpl
sbbb
sbb
cmp
mov
cmc
aam
test
andl
je
lahf
inc
hlt
mov
rclb
mov
add
test
push
mov
push
aaa
cmp
and
or
jo
shlb
cmc
nop
xor
push
add
test
shlb
movl
enter
mov
mov
std
shll
push
push
sub
test
fcmovnu
inc
mov
sbb
push
mov
pop
inc
push
mov
push
inc
or
bound
xchg
jbe
adc
cvtpi2ps
xor
into
icebp
jg
clc
sub
aad
inc
rolb
aam
push
push
aad
push
mov
icebp
lea
shl
inc
insb
int3
out
inc
push
adc
sbb
jmp
or
pop
scas
adc
mov
ja
adc
test
or
xor
add
or
xlat
xchg
test
or
jle
sti
jmp
push
mov
jnp
sarl
mov
or
inc
daa
repnz
mov
rorb
push
stos
inc
call
lods
and
inc
dec
push
inc
or
lcall
insl
add
sub
mov
jne
and
ljmp
or
adc
push
jne
and
cmc
jbe
loopne
popa
scas
push
out
mov
sub
push
frstor
sbb
inc
outsl
push
fldt
data16
shrl
fimuls
repnz
clc
test
imul
js
adc
or
int3
push
je
rolb
fiaddl
loopne
je
cmp
inc
push
push
fidivs
mov
and
mov
xlat
adc
xchg
adc
in
ja
mov
inc
test
inc
test
bound
jne
jp
cwtl
lock
lods
lret
fisubrl
xor
or
and
or
jae
add
mov
and
sub
pop
cld
xor
and
add
arpl
lret
pop
mov
pop
popa
inc
mov
xor
or
xor
pop
adc
sbb
fildll
aaa
push
push
out
inc
mov
adc
fs
jecxz
mov
cmp
cmp
fadds
stos
dec
cltd
sbb
xor
popf
or
cld
cld
push
pop
adc
cwtl
mov
mov
in
sub
cld
pop
mov
lock
dec
or
icebp
mov
fists
mov
lds
xchg
sub
xor
push
mov
ficomps
les
loopne
neg
xor
fstp
fld1
mov
fs
push
and
or
movsb
push
pushf
in
lods
cmp
jae
adc
lods
mov
inc
xor
cmp
jb
sub
fdivr
cmp
push
leave
xchg
and
sbb
xchg
vpmacssww
aaa
aaa
push
push
add
adc
stc
xchg
shrl
fstpt
or
and
add
adcb
push
jb
lock
mov
xor
push
inc
fidivs
jns
sub
scas
push
push
addb
adcl
mov
mov
ret
push
test
inc
lret
ret
rorb
inc
adc
add
mov
cwtl
jno
or
xor
fmulp
push
rolb
add
negl
xor
mov
sub
add
fcompl
inc
cmpl
into
imul
sbb
jb
add
lods
flds
jmp
xor
movsl
add
in
adc
mov
xchg
arpl
push
mov
rorb
pop
and
xorb
test
cs
popa
adc
repnz
and
push
xchg
push
pop
adc
shll
add
adc
mov
sbbl
fdivrl
add
pop
aas
pop
mov
fdivrl
clc
out
or
adc
iret
movsb
nop
sbb
mov
or
mov
push
mov
fsubrl
scas
cmp
or
xor
fmull
and
add
add
inc
and
fwait
loopne
xor
pushf
jmp
rcrb
push
adc
inc
xchg
popa
ret
dec
pop
stos
xor
rolb
add
cmpsb
subb
in
push
sbb
call
push
xor
loopne
push
nop
or
xorb
rcr
or
orb
jnp
int
mov
orb
or
rolb
or
aaa
or
shrl
add
and
mov
out
ss
jle
mov
loopne,pn
nop
mov
ret
es
ret
add
push
or
jg
add
sti
and
jnp
jnp
out
pop
pop
test
int3
jne
nop
mov
dec
jno
xchg
push
lods
aad
test
stos
fcompl
jnp
adc
push
push
iret
jge
subl
sbb
sub
add
cltd
cmpsb
daa
jl
int3
push
xchg
int3
hlt
cmp
test
adc
je
xor
xor
loopne
stos
push
or
cmp
xchg
add
add
xadd
sub
lods
add
cltd
imul
xchg
fdivs
mov
push
adc
mov
enter
push
push
cmpsl
movl
xor
mov
popa
adc
jg
lds
loop
clc
sbb
es
testb
and
ret
aam
dec
inc
pop
rclb
add
sbb
mov
faddl
les
or
cld
shlb
iret
add
loopne
cmpsb
pop
inc
lds
inc
adc
imul
add
popa
adc
push
adc
jo
test
adc
jmp
lods
add
cmpl
ljmp
out
outsb
gs
push
test
sbbl
dec
push
nop
sbbb
out
enter
adc
push
xchg
adc
loopne
clts
mov
add
sub
inc
mov
addb
jecxz
addb
adc
lods
xchg
sbb
loop
mov
out
dec
in
push
sbbb
jae
xchg
dec
rolb
pop
add
das
jb
scas
pop
mov
sub
pop
mov
fmuls
int
pop
mov
mov
movsl
stos
test
pop
mov
pop
or
ja
dec
mov
push
xor
add
subl
mov
dec
js
sub
out
and
push
mov
inc
fdiv
lret
addr16
push
out
or
aad
jle
mov
lock
mov
ret
and
sub
push
dec
in
pop
scas
add
dec
pusha
cld
xor
pop
sti
orb
pushf
je
bound
or
es
fsts
sub
test
inc
rorl
cmc
cwtl
addl
dec
sar
xorb
js
xorl
cmp
andb
nop
fstpl
shl
ret
sbb
push
nop
andl
mov
cld
push
mov
sar
add
prefetch
or
push
test
sbb
imul
mov
pop
rcrb
xor
pop
push
les
jne
fmuls
stos
add
inc
and
inc
adc
sbb
xor
rorb
push
sysenter
inc
inc
sub
inc
addb
and
ret
test
xlat
stos
cmp
pop
iret
pop
or
aad
popf
test
sbb
or
pop
clc
pop
cld
inc
sbb
out
sbb
je
je
sub
sub
cmp
pop
jmp
test
je
test
sbb
jle
fiadds
xchg
cmp
les
fcmovbe
xlat
cs
jle
push
mov
inc
cli
push
adc
push
sbb
shll
xchg
cli
test
inc
into
mov
and
pop
or
add
inc
in
stos
inc
sti
mov
or
inc
scas
ret
xorb
lock
std
jbe
decb
jb
hlt
ljmp
hlt
hlt
push
or
fldl
addl
mov
jmp
add
jl
or
jb
repz
mov
je
sbb
divl
call
out
xor
adc
xchg
push
xlat
test
addr16
mov
loope
decb
mov
push
jg
push
das
mov
fldcw
pusha
cmp
fsubrl
clc
cmp
mov
push
int
or
push
sub
repnz
popa
insb
sub
sub
cwtl
inc
mov
jle
add
out
add
cli
lods
clc
mov
mov
add
in
mov
add
add
and
sbb
jb
int
outsl
mov
fnsetpm(287
and
or
pusha
sub
cmpsl
lock
sarb
mov
push
inc
out
loopne
mov
add
sar
lret
mov
push
out
adc
roll
shl
and
inc
mov
ds
shlb
mov
pop
adc
pop
testl
sub
and
push
leave
mov
mov
out
pushl
mov
sub
and
scas
or
xorb
pop
adc
scas
repz
lcall
hlt
add
test
fsubr
movb
xor
inc
dec
sub
test
or
cmp
mov
out
testb
fildl
cmp
pop
iret
cmp
push
inc
and
fmuls
test
outsl
stos
pop
mov
icebp
aad
icebp
test
std
jg
incl
adc
inc
or
ljmp
shlb
add
cli
push
add
adc
jbe,pn
add
or
das
repz
mov
adc
das
sbb
dec
repz
cmp
rclb
std
les
nop
lcall
pop
add
pop
push
mov
or
iret
jmp
dec
pop
pop
mov
mov
jb
cmp
xchg
cs
and
pop
mov
xor
or
sbb
inc
add
sbb
shrl
pushf
push
mov
add
add
jb
add
inc
jno
in
xchg
ret
fimull
jge
add
cli
mov
es
add
sti
inc
add
mov
faddl
or
add
mov
mov
test
add
test
cmp
jnp
pop
shll
ret
popa
or
outsl
fs
std
push
add
icebp
push
mov
ret
sti
jle
xlat
xchg
mov
xor
inc
cmc
movsl
mov
add
ret
test
inc
fnstsw
iret
mov
cld
in
incl
repz
dec
adc
mov
lods
inc
pop
or
les
cmp
add
das
shrb
aaa
pushl
cmp
sbb
mov
fists
mov
mov
cmpsl
shll
add
cmp
dec
icebp
adc
pushf
inc
insl
inc
roll
sbb
add
sbbb
adc
sub
ret
xchg
jg
sbb
test
mov
insb
stos
call
add
xor
add
inc
mov
or
jmp
loopne
mov
push
mov
mov
insb
and
and
add
dec
mov
xchg
sbb
jbe
push
push
inc
jg
lock
mov
movsl
call
xor
lcall
shll
popf
cltd
add
sbb
sub
fdivr
sbb
add
xor
or
xlat
pop
jg
inc
and
fldenv
add
add
mov
sub
xchg
jno
and
roll
cld
sbb
addb
movsb
add
mov
xchg
daa
sarb
add
push
inc
lret
dec
loopne
push
sub
shlb
inc
dec
jno
sub
in
rolb
jo
das
cld
sbb
addr16
aam
shll
push
shl
cli
aaa
push
int
inc
mov
sbb
test
jge
sub
sub
sub
mov
cmp
decb
dec
xorl
popf
rolb
stos
xchg
fisubrs
push
or
ret
cld
test
and
jecxz
mov
mov
jmp
jg
fisubrs
inc
jne
add
adc
xchg
je
mov
mov
stc
bound
ret
jg
fldz
add
cmpsl
dec
push
sbb
add
push
and
mov
xchg
xchg
xor
push
std
ret
pusha
testb
movsb
cmp
hlt
pop
enter
lds
ljmp
sarb
repz
clc
aad
pop
add
incl
jp
or
test
pop
sbb
pusha
shrl
sub
xchg
dec
ljmp
roll
aaa
lock
mov
ret
inc
in
xchg
ret
ljmp
push
add
push
inc
subb
mov
push
stc
inc
pop
or
cmpsb
outsl
mov
in
jno
daa
test
xchg
cld
mov
push
cmp
loop
mov
inc
cmp
cmp
movsl
mov
jnp
mov
push
cli
cmp
cmp
rol
mov
lock
dec
cs
sbb
dec
push
adc
mov
ja
mov
in
cmp
outsb
sub
pop
fcmovnbe
xlat
movsb
mov
adc
in
pop
adc
fcoml
dec
pop
mull
insb
cmp
add
cmp
das
jl
rclb
pop
dec
mov
push
mov
add
bound
sub
dec
in
fbstp
movsl
mov
das
fistl
dec
dec
mov
sub
data16
fmuls
adc
xchg
fs
and
xor
cmpsl
push
sbb
outsl
pop
pushl
aad
jp
shr
jb
insb
sbb
stos
data16
and
ret
loopne
cltd
and
rcrb
adc
cmp
add
aas
dec
mov
adc
into
lret
mov
sahf
pop
jl
adcl
sub
xlat
lea
iret
jmp
inc
outsl
nop
pop
mov
mov
outsl
adc
mov
int3
cltd
jns
xlat
sbb
mov
sub
imul
sub
mov
add
int
stc
mov
aas
sbb
jmp
push
ficoms
add
pop
sub
sbb
and
sbb
rclb
add
out
mov
das
std
sti
inc
adc
cmp
adcl
lcall
add
ror
cld
outsl
pop
and
sub
jb
xchg
adcb
andl
cmp
mov
pop
lods
fwait
mov
daa
mov
mov
scas
jle
in
pop
mov
inc
loope
pop
ds
push
movsb
icebp
decl
sarb
insl
jl
pop
jo
jp
xor
sar
cmp
mov
in
insl
idivl
adc
pop
add
cmc
push
jmp
xor
and
add
and
rcll
xor
sub
sub
std
pop
sub
xor
mov
call
push
xor
test
into
andb
aad
sub
inc
mov
or
xchg
in
enter
shlb
jns
das
mov
inc
sbb
or
shrl
dec
aas
mov
dec
sbb
sti
sbb
loop
mov
push
lea
adc
pusha
sti
adc
std
out
rorb
mov
lock
jecxz
xchg
scas
xor
nop
insb
fisubs
sbb
stos
mov
mov
pop
mov
sarl
sbb
clc
push
pop
mov
in
and
hlt
inc
test
inc
pop
mov
inc
xlat
das
scas
mov
imul
pop
rcrl
std
xor
mov
xchg
jo
mov
dec
dec
movsb
pop
mov
push
ss
xlat
test
bsr
sbb
mov
outsl
cmp
mov
dec
gs
je
outsb
test
addb
sbb
ds
pop
icebp
negb
push
inc
sbb
sub
pop
xlat
movsl
or
pop
xlat
push
mov
out
rcll
jecxz
jge
sbbl
outsl
insb
inc
scas
in
nop
popf
pushf
jg
or
cmc
jbe
fildll
mov
mov
add
jno
dec
clc
mov
jns
aaa
sub
sub
call
and
push
stc
daa
and
out
cwtl
mov
add
loope
sub
fldl
fcmovnu
sub
sub
inc
jle
pop
adc
inc
orb
mov
cltd
sub
lods
arpl
jbe
mov
adc
or
outsl
xor
fcomip
adc
mov
pop
adc
and
cs
pop
std
mov
insb
icebp
pop
inc
stos
xor
lret
out
addr16
or
sbb
inc
sarb
loopne
aaa
add
and
rol
xchg
inc
push
jb
inc
aaa
ja
ljmp
xchg
xchg
and
sbb
xchg
ss
movsl
add
test
hlt
pop
sbb
add
mov
mov
pop
test
shr
aad
pusha
mov
push
dec
xchg
mov
daa
rcll
stos
les
or
push
bound
shrl
mov
sbb
or
push
stos
call
incl
lcall
cld
movb
loopne
inc
aad
dec
mov
jne
mov
ret
adc
std
or
adc
ja
add
fistpll
insb
cmp
pop
mov
movsb
fadd
jmp
rcrl
loopne
sbb
and
pop
fiadds
mov
cmp
js
test
or
movsb
mov
mov
mov
stc
inc
push
daa
js
xchg
adc
and
xor
xchg
sbb
dec
xor
cmpl
mov
clc
mov
mov
jno
and
dec
add
pop
aam
push
push
mov
out
cmp
xor
sbb
addb
cmpsb
xor
popf
and
or
imul
addr16
pushf
out
ficomps
je
push
mov
int
aam
pusha
add
xor
adc
in
cli
pop
lcall
push
sub
mov
lsl
in
in
xor
push
inc
cwtl
test
and
mov
sub
adc
mov
nop
out
xchg
push
test
inc
jno
adc
repnz
test
faddl
sbbb
add
cmc
mov
add
int
shlb
sbbl
les
push
loopne
push
sub
jl
mov
push
xchg
outsb
xchg
loopne
loopne
shlb
xor
inc
fistpll
jp
movsb
pop
lcall
jp
push
push
cmp
roll
cld
adc
pusha
les
imulb
xor
addb
mov
or
jnp
rolb
inc
mov
lock
daa
add
popf
add
loop
loopne
in
xchg
sbb
cmp
daa
or
shll
icebp
sbb
jge
aaa
ret
adc
and
ret
and
sub
dec
or
lret
sbb
inc
or
cmpsl
cwtl
xor
xchg
ret
out
adc
in
fwait
insb
loopne
clc
adc
xor
push
in
push
lock
mov
arpl
adc
in
add
dec
mov
xor
adc
or
es
rolb
fiadds
cs
pop
pushf
in
enter
cmp
test
push
cltd
pop
mov
leave
lcall
push
xor
dec
push
mov
repz
orb
push
cmc
xchg
and
and
push
fcomp
les
imul
shll
mov
sbb
xor
inc
xor
out
in
xchg
or
and
shl
push
add
insl
pop
and
add
out
orb
inc
imul
or
cmc
add
aam
add
fisubs
mov
or
push
mov
insl
loopne
sbb
xor
shlb
loop
add
xor
pop
dec
push
js
ret
mov
repz
es
in
dec
inc
sbb
xor
repz
stos
lods
push
int
inc
fldenv
mov
out
dec
fcmovne
dec
inc
pop
dec
and
jno
loope
fstl
imul
vcmppd
xor
test
and
push
rcl
or
inc
lcall
mov
lcall
mov
mov
xor
xchg
adc
jp
sub
jg
scas
inc
insb
ja
pop
ljmp
jae
add
stc
jecxz
lret
movsb
add
call
ja
mov
push
insb
mov
or
xorb
movsb
iret
std
push
outsl
cmc
into
lods
mov
nop
jo
or
jo
mov
sub
sbb
push
pop
or
add
int
sub
mov
clc
mov
xor
fucomip
add
pop
inc
cmc
lahf
adc
pushf
leave
add
int3
or
sub
loopne
sbb
inc
add
fcmovne
popf
fiaddl
or
popa
cs
add
or
test
ljmp
push
adc
sbb
cmp
add
add
add
movsl
pusha
mov
loop
add
fstpl
inc
fildll
aas
sbb
fs
jnp
add
loope
push
cmp
pop
and
push
in
push
fnstsw
aaa
icebp
mov
out
stos
andl
pop
mov
call
jg
lahf
fmuls
cmc
adcb
push
wbinvd
cwtl
adc
pop
cmp
push
adc
ds
adc
repnz
push
inc
pop
emms
pop
ja
mov
stos
pop
sbb
mov
shll
inc
lea
and
mov
dec
fidivl
add
pop
mov
sub
sbb
ljmp
or
cs
outsl
icebp
push
std
loope
sbb
inc
add
les
rcrb
cmp
or
sub
movsl
ss
jne
pushl
lahf
sub
dec
pop
adc
push
push
repz
outsl
cmp
xor
cltd
les
outsl
lcall
mov
mov
or
mov
lods
jne
add
mov
ret
dec
in
cs
push
ljmp
rclb
xor
int3
subl
sub
outsb
pop
aad
sub
mov
push
lahf
cmc
subl
adc
add
and
push
mov
and
add
xchg
adc
adc
gs
cmp
jp
cmp
insl
jne
and
cmpsl
sbb
push
iret
push
pop
pop
stc
inc
xor
andb
xlat
outsb
addl
sub
push
xor
add
cmpl
xchg
divl
ljmp
js
lods
repnz
add
adcb
push
adc
jo
stos
stos
ljmp
cli
adc
sub
add
jle
insl
mov
xchg
or
dec
call
mov
testl
or
movsb
test
mov
xchg
add
out
ss
add
rcl
pop
rolb
dec
inc
xchg
push
fcoms
cli
ljmp
mov
adc
int3
adc
and
test
or
sub
sti
std
addl
out
push
add
sbb
sub
fbld
adc
lret
and
sbb
or
push
ror
push
or
dec
cmp
stos
fidivrl
aam
adc
dec
xchg
rcrb
in
in
add
mov
dec
rorl
xor
stos
xchg
push
jl
push
popf
add
sub
inc
xor
stos
adc
add
inc
cmc
mov
call
inc
push
xchg
or
mov
scas
mov
popa
es
cltd
adc
push
insl
std
dec
mov
dec
jmp
arpl
push
xor
xor
jb
xchg
cmp
jle
stos
out
push
or
dec
sub
fcoml
sub
mov
js
pop
mov
out
xor
mov
jle
add
and
mov
add
adc
aas
loopne
ffreep
dec
int
or
dec
int3
leave
pop
jl
xor
jbe
ljmp
call
decb
or
movsl
push
add
mov
insl
adc
push
testl
cmp
call
dec
add
dec
pop
mov
adc
je
es
imul
mov
xchg
add
lcall
out
add
mov
jb
js
jno
rcrb
mov
and
cmp
inc
orl
es
xchg
repz
loopne
mov
sbb
push
cmpsl
push
sub
mov
mov
add
and
loop
cmp
sar
roll
push
and
rolb
mov
push
imul
xchg
mov
out
push
cmp
rcl
lds
xchg
jne
dec
in
inc
daa
inc
fldl
jae
movsb
sbb
outsl
mov
fldl
sbb
sbb
imul
mov
inc
fdiv
and
call
adc
scas
adc
add
inc
insl
ret
mov
inc
add
mov
fldl
xchg
cmp
cmp
push
fnstcw
mov
out
std
mov
sub
cltd
xchg
fisttpll
mov
mov
mov
add
fisubs
jne
mov
inc
inc
jnp
add
nop
gs
mov
jg
push
stc
arpl
das
shl
sbb
mov
add
movsl
imul
xlat
pop
push
dec
insb
adc
shl
addr16
cli
decl
repnz
mov
jp
mov
xchg
push
push
push
mov
cmp
nop
push
xor
add
adc
mov
xor
push
orb
fbld
sbb
pop
shlb
imul
pop
adc
fistps
les
jae
jbe
pushf
stc
ret
adc
outsl
sbb
arpl
mov
icebp
outsl
lock
rcrb
or
lret
push
inc
bound
filds
les
push
outsl
sub
inc
mov
push
dec
stos
and
test
inc
jb
push
mov
sbb
inc
mov
push
lock
subl
or
push
xchg
sbb
adc
icebp
push
shl
xor
sbb
jl
cmp
push
pop
clc
fldt
or
test
inc
inc
lock
insb
outsl
in
daa
ret
pop
cmp
inc
jbe
cld
sub
sub
mov
enter
outsl
pusha
xchg
push
jle
lds
mov
adc
out
loop
cli
nop
loope
jl
adc
les
and
jge
push
add
lods
js
outsl
cld
xchg
ss
add
test
sub
loop
fisubrs
mov
dec
movsl
sahf
jnp
jbe
call
and
inc
add
pop
call
sub
ret
mov
sti
xchg
add
es
pop
or
push
mov
call
loopne
xor
add
adc
pop
je
mov
fcoml
inc
test
jae
ret
sbb
sbb
out
orl
mov
or
fisubrl
pop
decb
sbb
xchg
mov
in
push
jo
mov
dec
fs
iret
xor
movsb
cs
fisttps
je
mov
sub
rolb
out
cmc
cmpsb
ja
lock
and
aaa
psubw
jo
lahf
insb
and
and
and
shrb
ds
leave
pushf
sub
adc
in
adc
jno
mov
lock
js
les
repz
sbb
or
roll
sbb
inc
adcl
push
loope
sbb
add
dec
add
mov
hlt
inc
add
or
in
inc
hlt
sti
jmp
or
add
addb
pop
or
data16
xor
in
out
stos
and
enter
xor
sub
in
add
loope
pop
in
dec
inc
addr16
call
rcll
add
add
dec
add
call
aaa
shl
shlb
xor
mov
mov
adc
jbe
inc
push
in
add
push
jno
int3
loopne
cs
into
repz
dec
add
inc
and
rorl
icebp
stos
pop
int
inc
inc
lods
xlat
mov
test
fistps
imul
push
adc
adc
jp
stos
cwtl
or
or
jns
or
and
mov
push
inc
add
push
subb
mov
mov
scas
sbb
hlt
or
mov
dec
movsl
sub
cmpb
fisubs
test
inc
mov
dec
add
mov
add
les
xchg
mov
das
loop
or
repnz
lock
lea
imul
mov
outsb
adc
and
mov
add
ficomps
jge
mov
lcall
inc
sbb
xorl
and
mov
fs
nop
xor
fidivl
xchg
dec
mov
scas
add
jle
sub
add
cmpb
jp
aaa
cmp
or
jo
pushl
orb
inc
aaa
mov
cmc
pop
adc
lea
shlb
and
lods
inc
cmp
xor
and
sbbl
loope
xor
jne
jg
push
mov
in
sahf
flds
sub
pop
add
or
push
and
pop
imul
push
push
sub
jno
pop
dec
mov
sti
mov
sbb
lcall
push
jbe
adc
add
add
nop
lock
mov
mov
ljmp
add
scas
insb
mov
jge
pop
std
insl
pop
mov
shrb
jmp
fdivrp
inc
nop
inc
jp
test
xor
outsl
das
push
js
adc
xchg
inc
lret
push
sub
test
or
xchg
mov
rcll
push
sub
or
aam
mov
pop
in
cli
nop
lods
xchg
xchg
fcmovne
pop
out
ljmp
mov
mov
sbb
pop
jbe
xchg
xchg
call
flds
cli
leave
insb
inc
iret
push
xchg
cld
in
loopne
shl
add
push
or
lret
mov
adc
ret
popa
mov
aaa
shrb
mov
dec
divb
loope
mov
xor
mov
inc
shlb
ja
int3
mov
rorb
aam
push
loop
dec
ror
outsb
mov
mov
fdivrs
out
cmc
pop
mov
jmp
cmc
aaa
adc
sub
cli
cmpsl
mov
je
testl
ljmp
pop
sbb
scas
js
outsl
sub
arpl
ret
cmp
mov
mov
loope
xchg
mov
and
xchg
mov
lock
mov
xchg
lret
mov
inc
int
sbb
adc
mov
fs
loop
push
ds
xor
push
sub
inc
dec
push
sbb
inc
lds
jae
sub
xor
push
std
push
flds
ljmp
ja
jge
inc
mov
mov
sbb
push
int
cli
fiaddl
popf
sub
ja
or
fcoml
call
in
and
dec
add
in
ror
fcomps
iret
stc
inc
lods
fiaddl
xchg
rolb
mov
in
addr16
xchg
clc
add
shlb
xchg
pop
imul
push
push
sbb
fsts
mov
int3
les
sub
sub
and
or
ja
divb
ret
cmpsb
and
add
xor
sbb
in
push
enter
mov
pop
mov
rclb
push
fstp
push
fwait
push
les
int
xor
int3
xor
push
inc
ljmp
cmp
inc
adc
adc
pop
hlt
les
sub
repz
sbbb
adc
outsb
test
repnz
dec
imul
dec
push
push
out
aam
jne
mov
stos
mov
jmp
adcb
jb
or
and
push
aad
sarb
pop
inc
push
adc
mov
fcmovnb
inc
xor
mov
clc
fsts
test
jne
mov
jmp
and
or
call
sbb
testl
sbb
push
push
jg
sbb
sub
dec
rcr
rolb
loope
les
mov
dec
shl
rclb
cli
rcrb
push
jl
mov
mov
add
test
mov
arpl
jo
add
push
cmp
addr16
fcoms
add
and
pop
aad
pusha
inc
pop
pop
ss
xor
push
sti
add
pop
sti
jge
sub
inc
adc
and
or
lods
push
hlt
clc
mov
sahf
or
or
sub
sahf
cmp
jno
mov
dec
mov
rcl
mov
sub
xor
mov
jae
dec
cmp
out
add
ljmp
je
xchg
cmp
jo
dec
push
and
adc
insl
mov
push
xor
push
lods
sbb
lds
mov
xchg
imul
inc
int
je
stos
popf
pop
cwtl
mov
jmp
pop
outsl
dec
jmp
popf
movsl
cmp
xchg
mov
sub
outsb
pop
xor
ja
cs
sub
mov
lds
cmp
movsb
push
ror
jp
jmp
adc
lea
pop
push
mov
add
mov
daa
fs
cmp
or
mov
fwait
popf
pop
and
sub
rclb
negb
or
mov
or
adc
pop
cmp
adc
loopne
add
sahf
test
loop
pop
mov
ljmp
sbbb
jo
sbb
dec
push
cmp
xor
arpl
or
jb
lock
ret
pop
jp
es
cltd
dec
add
arpl
popf
lods
mov
add
push
call
push
and
mov
pushf
xorb
adc
stos
lret
mov
xchg
loope
mov
rolb
mov
push
es
int3
push
bound
dec
xor
push
into
in
out
jle
clc
enter
jp
fsubr
repnz
enter
add
lcall
vcvttss2si
cld
les
cmp
retw
movsl
sbb
pop
aad
xor
arpl
in
push
repz
mov
push
fmull
or
mov
adc
ja
adc
mov
filds
sbb
cmp
setp
mov
scas
mov
nop
stos
or
sbb
pusha
loopne
xchg
enter
or
push
hlt
jo
xor
or
adc
je
and
mov
test
insb
lods
mov
xchg
lret
lret
stos
cmpsb
aad
add
jo
pop
jl
rolb
les
adc
jne
lods
std
fbld
and
sub
test
in
lds
xchg
movsb
cmp
adc
or
push
sbb
movb
ss
jp
es
mov
pusha
lret
and
mov
xor
es
or
xchg
sbb
mov
testb
fsubrp
sub
push
cmp
loop
push
loope
inc
mov
mov
adc
outsl
pop
sbb
xchg
xor
imul
adcl
fisubrs
cmp
inc
xchg
cmp
test
or
pop
imul
adc
or
sub
in
add
sub
enter
push
jecxz
out
mov
mov
jo
outsb
mov
sub
sbb
push
fsubrs
push
add
mov
or
incb
sub
mov
inc
nop
pop
in
xchg
out
pop
or
rcll
movsb
mov
mov
sbb
add
mov
pop
ret
and
insb
dec
clc
das
enter
add
in
lds
loopne
adc
cltd
and
inc
pop
enter
cmp
jmp
xchg
int
aas
mov
add
xor
repnz
hlt
and
mov
fiadds
or
sub
push
cmpsb
out
pop
add
xchg
sub
jbe
bound
xlat
jp
mov
mov
xor
pop
mov
add
adc
cs
mov
popa
ss
or
in
cmp
add
dec
lods
popa
xor
or
inc
pop
imul
sbb
add
mov
repnz
sub
popa
fcoms
xchg
cmp
or
fists
out
adc
mov
push
pop
clc
je
fnstcw
sbb
ret
inc
testl
push
mov
imul
andl
out
imul
out
push
cld
movsb
cli
pop
adc
sub
push
add
cltd
or
sbb
xor
mov
sbb
push
test
mov
mov
jecxz
inc
sbb
or
inc
shll
inc
cltd
orb
dec
jp
xor
jno
sar
hlt
in
mov
adc
sarb
pop
mov
dec
mov
inc
mov
or
jmp
jne
sti
sbb
or
sub
frstor
mov
adc
and
cmp
and
push
or
pop
rol
xchg
and
pop
cld
sub
aas
sbb
je
out
cpuid
or
insb
xchg
cmp
rolb
adc
push
movsb
repnz
inc
add
movl
cmp
test
mov
repz
adc
cmp
adc
ds
jno
fisubrl
test
sbb
jmp
mov
in
xchg
roll
inc
in
clc
pop
jne
test
call
adc
cld
not
sub
inc
mov
fs
shll
lret
clc
mov
mov
clc
jae
loop
add
cli
xlat
fimull
movl
cmp
movl
outsb
les
inc
sub
add
pop
outsl
push
iret
mov
test
fistl
gs
add
inc
ljmp
adc
mov
adc
fsubl
arpl
jg
add
rorb
cli
pop
push
test
dec
dec
jp
jecxz
call
sarb
inc
or
movsb
shlb
roll
les
adc
aas
mov
push
mov
aad
cmp
jb
lcall
in
jmp
repz
popf
jmp
jp
lods
jb
sub
repnz
test
inc
sbb
or
mov
cmpsl
clc
xor
inc
inc
mov
xchg
mov
sbb
sarl
xchg
jmp
sub
xor
mov
fdivp
sbb
fildll
pop
insb
adc
mov
xor
fsubl
push
adc
stos
jne
mov
add
jb
ret
jmp
mov
xor
mov
adc
dec
in
jne
lods
push
add
fldl
test
mov
and
dec
sbb
and
sbb
lds
push
out
or
pop
rorb
stos
lea
add
push
test
add
dec
sahf
dec
je
xchg
sbb
mov
ret
ljmp
pop
add
js
sbb
pop
aad
sub
pop
push
dec
jg
notl
jne
sub
mov
jmp
cmp
inc
sbb
sub
sbb
in
sbb
or
scas
pop
cmpsl
inc
jb
sbb
movsw
dec
into
je
dec
fwait
inc
stos
jb
and
inc
adc
test
or
sub
jno
sub
clc
xor
xchg
push
dec
push
jne
jo
imul
int
inc
rcrb
mov
dec
cwtl
cmp
movsb
fildl
cmp
fs
pop
sub
mov
mov
push
dec
adc
pusha
ret
stos
add
roll
popl
add
dec
dec
push
sbb
enter
xchg
inc
pop
addr16
cmp
dec
cli
pop
sbb
loop
es
add
loope
scas
inc
dec
mov
push
clc
outsl
cmpsl
enter
and
insb
push
or
jo
call
lock
test
jne
or
inc
int3
jl
inc
enter
add
popf
pop
test
jo
lds
test
adc
push
fs
subb
dec
dec
xchg
cmp
add
push
pop
pop
xor
fwait
cmp
rcrb
outsl
push
jne
cli
or
sbb
sbb
xchg
add
idivl
repnz
pop
push
add
cmp
test
add
pop
nop
icebp
push
pusha
and
push
push
push
movsb
icebp
pop
jae
mov
inc
xor
push
sub
fists
cli
add
loopne
jno
idivb
aas
sub
je
out
xchg
inc
inc
cmp
in
mov
addb
loop
adc
fistpl
rorb
inc
hlt
mov
arpl
inc
in
ret
mov
sbb
outsb
repnz
inc
inc
cmpsb
js
scas
pop
xchg
aas
enter
push
push
or
clc
mulb
mov
notb
std
add
adc
jle
push
mov
bound
arpl
stc
insb
scas
div
sbb
outsl
jne
fucomip
push
imul
rcrb
sub
in
mov
or
shr
adcb
push
das
dec
and
or
addr16
in
xor
xor
xlat
movb
sbb
add
mov
rcll
pushf
pusha
adc
mov
ret
test
jae
shr
shrl
and
mov
js
and
cmp
aas
sbb
fsubrs
dec
enter
jbe
mov
xor
loopne
or
pop
fisubl
cwtl
repz
les
lock
sub
pop
ds
enter
and
divl
cmpsl
sbb
ja
mov
add
data16
dec
lock
jbe
or
icebp
es
test
scas
push
cwtl
adc
inc
fimuls
pop
pop
mov
mov
mov
or
jns
pop
cs
inc
pop
mov
rolb
and
loopne
push
mov
mov
jecxz
ror
jns
push
ljmp
ficomps
repnz
inc
lret
cmpsb
jb
jge
mov
sbb
ret
sub
xchg
popf
pop
xchg
jmp
sub
js
ljmp
pop
rcl
cld
aas
stc
mov
push
popl
mov
pushf
mov
add
or
lret
xor
push
mov
adc
xchg
incb
add
in
dec
pop
mov
loop
fbstp
adc
je
adc
jno
sub
cli
sbb
mov
aaa
and
imulb
nop
ret
scas
mov
push
jne
push
xor
jp
jno,pn
xor
mov
and
loope
cmp
jae
sbb
sbb
imul
jne
rcr
shl
les
push
ja
xor
out
sbb
adc
pop
or
je
mov
lods
mov
dec
popf
push
iret
stos
mov
adc
rorb
js
fmul
xor
and
andb
sbb
xchg
and
adc
xor
push
pop
adc
sbb
mov
xchg
or
aaa
insl
push
out
mov
loope,pt
adc
les
sbb
inc
dec
pop
es
std
ficoml
cmp
std
mov
fimuls
and
pop
inc
ds
mov
popf
jp
jnp
repnz
arpl
lods
push
xor
add
in
testl
mov
je
stos
adc
loopne
add
data16
pop
dec
in
lods
inc
mov
or
xchg
sbb
mov
dec
pop
inc
adc
fldl
lock
xor
scas
push
fstpl
add
mov
jnp
sub
cmp
cmp
sbb
adcb
icebp
or
adc
add
xchg
setbe
xor
stos
jle
xchg
sub
test
sbb
lcall
sgdtl
loopne
inc
out
add
int3
mov
sub
xchg
dec
and
cmc
sti
push
push
adc
mov
or
loop
cmp
or
or
xchg
pop
ret
add
push
pop
pop
inc
loopne
adc
add
gs
gs
or
jnp
cs
rcl
pop
inc
lock
mov
fldt
mov
sub
mov
lret
and
push
add
fsubrl
inc
jmp
ja
push
adc
es
jb
xchg
and
test
cmp
pop
push
push
sbb
jle
mov
lret
push
xchg
and
xchg
add
nop
lcall
add
roll
in
xchg
andb
push
outsl
loopne
mov
insl
xor
adc
fcmove
or
mov
push
ret
add
and
nop
xor
mov
jo
mov
add
pop
popa
insb
push
outsl
mov
xchg
mov
cltd
aas
shlb
jbe
push
into
aas
int3
mov
inc
push
cmpsb
inc
add
mov
lds
int3
mulb
hlt
in
and
je
lock
cmc
cwtl
add
xchg
push
pop
rcrb
jo
addr16
movsb
cld
mov
push
xchg
mov
call
sbb
push
adcl
mov
mov
or
mov
ljmp
add
in
out
cmp
cmpsb
js
sbb
jno
movsb
rcl
nop
add
xchg
clc
sbb
inc
cmp
mov
mov
cmpsb
mov
nop
mov
cmp
inc
cmp
cwtl
repz
dec
xchg
push
js
sbb
in
sbb
and
push
sub
jb
orl
mov
clc
xor
stos
push
and
mov
inc
in
pop
inc
dec
and
push
les
push
std
or
xor
jp,pn
xor
inc
shrl
mov
je
xor
pop
sbb
add
out
push
test
push
push
push
dec
adc
cmp
jl
inc
add
pop
mov
data16
xor
pop
shll
push
or
xor
lahf
pop
imul
mov
addb
jmp
add
and
push
test
int
sbb
jmp
add
mov
sub
xorl
aam
dec
push
lahf
sub
or
or
test
add
imul
add
jb
push
xor
call
fcomp
in
jle
mov
fildll
inc
xchg
shll
jmp
adc
outsb
cmp
ljmp
push
mov
pop
stc
mov
test
mov
or
clc
pop
add
test
fbld
test
jae
xor
hlt
adc
pop
call
fs
sbb
out
ja
je
add
inc
dec
xchg
fsubp
or
pop
and
sbb
push
sbb
inc
lods
adc
rcrb
dec
in
movsl
cs
mov
stc
push
rcll
xchg
cmp
cmp
fcmovnu
xchg
xor
pop
imul
shrb
in
add
jle
adc
pop
cmp
mov
adc
sarb
testb
adcl
into
inc
adcb
sbb
lods
cmovb
jl
imul
lcall
xor
jb
inc
fbstp
push
dec
xor
dec
and
add
add
addr16
aad
add
int
mov
fwait
lahf
add
dec
mov
add
cld
je
cmp
out
push
dec
adc
ret
sub
hlt
mov
lea
dec
mov
xchg
rol
inc
scas
js
add
and
cmp
jg
subb
sbb
lods
mov
and
or
xchg
andb
inc
push
sub
shll
cmp
into
adc
xchg
mov
mov
neg
add
nop
and
cmp
mov
push
stos
paddd
jo
rclb
aam
cli
ret
inc
mov
add
clc
inc
enter
sbb
and
in
add
ret
int
cs
cmc
adc
call
loop
out
add
jnp
and
aad
add
xor
pop
cmc
pop
jbe
negb
fs
repnz
scas
and
lods
pusha
adc
jl
aaa
dec
aaa
xor
adc
push
fcmove
clc
jl
icebp
je
mov
cmpsb
mov
pop
mov
jge
and
push
xor
cs
push
call
fmulp
adc
enter
fmuls
sbb
pop
cmpsl
push
pop
inc
int3
cmc
jae
add
push
cmp
xor
adc
call
cmp
jne
mov
or
addr16
dec
in
loop
movsb
ss
adc
sbb
orb
insb
aad
mov
mov
push
inc
das
ljmp
mov
cmpsl
sub
xor
fwait
roll
dec
sub
add
adc
and
ret
mov
inc
sbb
mov
sub
xchg
ljmp
andb
inc
adc
inc
adc
sub
and
shrl
outsb
mov
mov
add
jne
xchg
mov
mov
mov
dec
lods
aam
add
jp
jl
sbb
roll
ss
xor
das
and
out
leave
push
out
imul
jne
mov
xchg
mov
add
cmpsl
ss
incl
jmp
test
jbe
mov
cmpsb
inc
int
aas
out
into
daa
shrb
test
add
movsb
lods
rorb
inc
jne
cmc
mov
lret
hlt
xor
pop
sbb
mov
mov
push
jge
fwait
xlat
push
jb
inc
add
fwait
pop
insb
pop
push
pop
jecxz
leave
mov
loopne
cs
insl
in
pop
andb
sbb
inc
lods
pushf
es
push
or
and
faddl
or
cs
pushf
pusha
add
push
insb
xor
out
cwtl
add
cmpsl
inc
fildll
add
mov
dec
cmp
sub
adc
insb
mov
incb
lods
xlat
std
test
aam
rorb
dec
mov
sub
ret
into
call
movsl
iret
rol
sbb
ror
mov
inc
adc
push
pop
inc
adc
shlb
add
mov
adc
jmp
test
ja
frstor
add
cwtl
or
insb
iret
bound
add
dec
mov
pop
push
out
mov
or
cld
inc
sbb
inc
and
dec
push
sub
push
jl
push
push
in
adc
int
fwait
push
repnz
jmp
testb
xorb
adc
and
mov
pop
lea
js
or
add
jp
push
mov
mov
cli
test
bound
cmp
sbb
xchg
fwait
xchg
push
addl
xor
js
mov
cmpsb
xor
mov
mov
push
mov
popf
jne
aas
repz
icebp
call
sbb
dec
sbb
pop
movsb
outsl
xchg
subl
sbb
out
push
pop
pusha
mov
xlat
sbb
inc
mov
shrb
adcb
and
sub
dec
xlat
add
sbb
imul
xor
xor
iret
xchg
data16
adc
add
rcl
stos
jo
test
rol
xchg
and
imul
adc
flds
ljmp
lret
popf
inc
dec
bound
add
fcmovnbe
arpl
add
jle
mov
and
adc
mov
les
shl
xchg
movsl
cmp
lcall
and
push
add
add
loopne
sbb
ror
rcll
jp
sub
or
cmpsl
cbtw
adc
call
mov
pop
xor
cmp
orb
push
call
out
sbb
push
add
xlat
rcl
mov
adc
shlb
fwait
add
jg
and
push
sbb
pop
push
dec
add
push
pop
cmp
pop
add
pusha
add
imul
int
lea
fnsave
into
adc
and
cmp
dec
and
mov
xchg
add
shrb
notb
loop
adc
or
mov
scas
cld
outsl
fs
ja
pop
xchg
sbb
sub
aad
loopne
adc
sub
push
jno
insb
cmp
inc
or
add
or
and
psubb
push
test
mov
int3
lods
loop
lods
repz
dec
dec
out
adcb
rol
push
or
inc
cltd
add
jle
xchg
mov
mov
dec
gs
clc
add
popa
add
mov
shr
mov
adc
add
cwtl
cmc
push
inc
xor
push
pop
cmp
inc
inc
jle
pop
pop
jo
fcoms
rorb
xor
subb
or
jno
inc
daa
rolb
iret
mov
adc
xor
rcll
or
leave
mov
xor
inc
and
or
cmp
es
dec
clc
mov
leave
sbb
addb
cmp
push
add
in
inc
cwtl
push
addb
aad
int
fistl
pop
sbb
cs
clc
add
out
invd
pop
scas
fs
movsl
and
jo
xor
add
sarb
cld
mov
xchg
jbe
or
leave
sbb
mov
and
inc
ss
sub
js
shll
adc
mov
lock
jg
mov
inc
cmp
inc
bound
mov
dec
inc
sub
outsb
fdivs
addb
xlat
cmp
add
mov
add
xor
push
fdivrl
pusha
test
arpl
pusha
bound
mov
dec
inc
push
inc
jo
mov
mov
mov
jmp
in
sbb
push
repz
pop
je
cmp
bound
jo
fistps
incb
scas
rclb
enter
iret
xor
arpl
stos
push
pusha
jmp
icebp
js
test
dec
aaa
lds
dec
fmuls
adc
sub
icebp
cmc
push
out
lret
mov
in
or
sbb
mov
cmp
and
ret
mov
jno
add
adc
test
leave
jne
sub
sbb
clc
fsubs
xor
mov
jp
mov
inc
lods
xor
jae
adc
leavew
scas
adc
sub
les
push
adc
push
xor
bts
dec
push
les
fmuls
push
lods
push
sbb
fidivs
cwtl
push
cwtl
in
hlt
add
test
mov
ret
mov
jae
les
xor
popa
cmc
and
mov
js
push
mov
fidivs
pop
adc
cmp
int
xor
pop
or
and
pusha
je
jne
cld
loop
jp
ds
fchs
or
dec
dec
jae
mov
push
adc
lds
das
pop
xor
stos
lods
sbb
and
xchg
mov
jb
daa
adc
and
orb
sti
jbe
es
dec
ss
ss
lcall
inc
jmp
lock
test
push
movsb
and
adc
and
je
push
add
adc
sbb
arpl
cltd
push
cwtl
push
cmpsb
jo
fnstcw
cwtl
add
add
pushf
jp
xchg
sbb
adc
sub
sahf
xor
pop
cvtps2pi
iret
push
push
mov
test
push
mov
lcall
push
xchg
and
enter
and
and
xlat
mov
and
mov
bound
sbb
inc
xchg
cmp
dec
dec
data16
rolb
lea
out
xchg
mov
cli
stos
negb
adc
and
stos
loope
push
arpl
inc
sub
movsb
int3
dec
test
shrl
and
add
jle
pop
aad
xchg
int3
sbb
pop
scas
push
xchg
push
and
and
lods
sub
ret
cmpl
mov
or
lea
add
dec
jb
imul
add
push
xchg
daa
and
mov
dec
mov
sbb
push
or
mov
sbb
shrb
or
fdivr
aad
inc
sysret
xor
jae
jg
inc
xor
fdivrl
popa
mov
xor
shll
add
movsl
push
nop
outsb
cmc
call
pusha
or
fsubr
addr16
std
add
out
cmp
xor
pop
dec
lock
mov
or
aad
sbbl
sbb
pusha
cmp
add
pop
jne
and
andb
xchg
daa
adc
mov
pop
and
xchg
ret
pop
xor
dec
or
rolb
inc
xchg
addb
and
adc
mov
and
and
xchg
or
shl
bound
xor
adc
inc
and
dec
push
int
or
push
dec
add
test
mov
pop
cltd
nop
sarl
data16
jnp
out
dec
adc
mov
mov
push
and
addr16
arpl
or
fsubrs
sub
xchg
and
stos
or
repnz
sbb
ret
jae
inc
cmp
pusha
push
stc
sti
or
and
sbb
push
inc
scas
fstps
cmp
xor
inc
jecxz
adc
cmp
pop
xchg
inc
pop
insl
dec
fcomip
aaa
test
pop
bound
dec
loopne
mov
jle
mov
adc
dec
mov
push
mov
daa
or
sbb
loop
jl
loop
add
add
pusha
add
or
dec
xlat
roll
dec
imul
adcb
pop
cmp
out
add
rolb
adc
leave
mov
loopne
lea
aad
mov
push
shr
and
popf
add
scas
inc
lahf
dec
leave
ret
test
jmp
push
aam
inc
dec
and
jns
adc
xchg
mov
lods
and
xchg
sub
mov
pop
addr16
push
sar
mov
mov
add
daa
les
ret
add
add
sub
orl
loopne
daa
xchg
lods
cmpb
aaa
fdivrl
jmp
fildl
adc
or
add
and
cltd
add
movsl
or
outsl
or
or
pop
dec
add
outsl
dec
add
decl
into
movsb
sbb
add
addr16
clc
add
mov
sbb
roll
mov
outsb
lahf
mov
hlt
mov
inc
in
adc
and
add
adc
dec
inc
sub
ljmp
sub
add
int3
mov
sbb
and
into
mov
std
incl
inc
out
push
and
bound
ret
inc
sub
icebp
test
inc
mov
pop
sub
into
jb
fildl
adcb
idiv
cmpsl
pop
sti
add
mov
sbb
aas
add
ja
std
cmp
mov
inc
push
mov
mov
xor
and
add
pop
popl
cmp
add
pusha
add
mov
aaa
out
cmc
add
pop
or
jbe
jle
ljmp
loop
call
jle
add
add
std
int3
and
dec
das
popf
sub
cld
stc
xchg
js
jno
mov
pop
mov
mov
shlb
and
inc
add
aaa
icebp
in
inc
cltd
pop
sub
test
dec
mov
xchg
or
faddl
shl
fists
sarb
nop
int3
adc
les
sbb
aaa
clc
in
divb
sbb
test
lods
iret
test
push
cld
adc
pushf
and
add
fidivrl
push
fsubp
insb
add
push
sti
add
or
loop
mov
mov
cmp
rorb
ss
jg
mov
add
std
call
outsl
mov
mov
add
pop
mov
test
adc
pop
sub
inc
cmp
outsb
xor
add
add
cmovle
or
xorl
adc
inc
pop
pushl
and
add
std
mov
sub
jl
mov
scas
jmp
cs
insb
add
inc
jne
or
cmpsb
and
dec
jg
push
push
add
mov
mov
push
mov
adc
xchg
dec
cmp
add
lock
mov
sbb
data16
ljmp
adc
lods
push
cmp
pop
xchg
lcall
add
and
mov
xchg
xor
jg
int3
push
adc
fisttpl
sub
dec
and
mov
stos
enter
cs
add
xor
je
mov
xchg
fs
test
lea
jne
ret
add
add
inc
pusha
jecxz
fldt
leave
push
lret
xlat
dec
or
ljmp
in
or
add
mov
mov
std
ljmp
stc
or
push
orb
add
aas
jne
fnsave
add
mov
mov
mov
mov
xor
cli
jp
sub
adc
sbb
roll
push
jp
mov
pop
test
test
adcb
std
dec
jmp
pushf
adcb
jo
sbb
mov
dec
aas
jl
lods
outsb
sbbl
das
jge
incl
cmp
jbe
xchg
add
fs
rolb
mov
fwait
das
xchg
mov
notb
int
lds
lret
add
rorb
push
pushl
test
imul
lcall
add
dec
rolb
call
js
cmp
jecxz
jg
push
jmp
push
add
xchg
cwtl
mov
lock
xor
test
roll
sbbl
je
xchg
lcall
mov
pop
loope
dec
je
das
cld
or
add
and
mov
dec
push
fwait
mov
mov
inc
shrb
pop
mov
jecxz
fwait
pop
inc
imul
lcall
dec
inc
imul
and
xor
push
mov
sahf
mov
incb
xchg
arpl
dec
mov
adc
mov
ret
mov
dec
aaa
outsl
cwtl
mov
lds
lods
inc
sub
jge
jae
subb
repnz
mov
or
stos
inc
loopne
std
mov
cmp
mov
sub
xchg
xorl
add
out
addr16
pop
loope
sbb
lea
cmp
pushl
xor
cmp
add
xor
mov
inc
mov
sub
icebp
gs
cmp
xchg
inc
dec
out
aad
cli
xchg
jb
lock
dec
mov
inc
sbb
push
cli
dec
les
jo
clc
fwait
pop
pop
insl
add
add
orl
lds
pop
adc
add
jge
push
add
int
lahf
icebp
jge
out
lods
in
inc
cs
cs
lret
sbb
mov
cld
loope
add
add
or
mov
out
mov
test
push
sub
movsl
aam
mov
sbb
push
insl
leave
leave
out
and
mov
dec
xor
mov
inc
stc
pop
pop
sbb
fistpl
das
mov
lsl
outsb
inc
nop
filds
pop
dec
or
cmc
xor
inc
icebp
or
sub
sub
jle
cs
xchg
jp
mov
sub
mov
jl
mov
xchg
push
flds
xchg
dec
out
es
test
jg
stc
sbb
in
test
test
adc
pop
out
scas
imul
lods
daa
in
lea
js
stos
test
scas
sbbb
pop
jg
clc
out
xor
lret
fsubs
push
sub
ss
push
mov
in
push
loop
mov
add
jge
or
dec
xor
jnp
mov
jnp
sub
mov
test
inc
nop
into
cmp
stos
and
mov
jo
loopne
leave
push
mov
xor
orb
pushf
lahf
push
adc
cmc
push
ficoml
and
fs
cmp
adc
jb
sbb
lret
mov
scas
mov
xchg
bound
xchg
movsb
lock
rorb
adcb
test
ss
and
or
push
dec
dec
mov
mov
daa
add
mov
xor
inc
mov
push
sbb
or
cmp
mov
xchg
mov
addr16
mov
xor
mov
out
negb
push
sub
fldt
ljmp
or
cmp
int3
test
xchg
cli
or
mov
in
push
icebp
sbb
or
in
loop
or
or
cmp
dec
ss
loope
mov
cmpl
repz
xchg
test
sahf
dec
adc
xlat
cli
fs
mov
dec
out
mov
outsl
mov
mov
rcrb
mov
add
pop
rcll
adc
push
dec
loope
cwtl
loop
and
sbb
test
loope
aam
imul
cmp
mov
rcrl
and
mov
stos
cmpsb
sub
into
or
adc
imul
fs
leave
sbb
mov
popa
std
jnp
lds
outsl
xchg
ficoms
jbe
jnp
lea
push
adc
cmp
push
mov
test
shrb
lret
add
in
jle
lds
pop
adc
cmp
in
xchg
push
hlt
outsl
mov
insl
pusha
pop
ret
test
push
fmull
push
loopne
movb
mov
add
jo
cmp
clc
and
mov
loope
adc
add
aad
mov
fisubrs
mov
mov
mov
dec
adc
outsl
add
jmp
dec
leave
mov
xchg
push
stos
sub
add
push
outsb
cli
mov
test
xchg
sub
ds
addb
mov
bound
mov
mov
ficoml
pop
mov
mov
mov
gs
not
not
ss
and
imul
inc
inc
shll
cs
fs
mov
fistl
cwtl
outsl
pop
es
pop
push
and
cld
addr16
test
icebp
fildl
cmpsb
daa
stos
mov
mov
and
popa
inc
dec
add
dec
adc
sbb
andb
lea
lret
add
call
adc
sbb
fbstp
dec
add
scas
and
adc
xchg
xor
pop
enter
cli
stos
mov
es
add
push
hlt
lea
stc
or
push
dec
or
jnp
mov
mov
mov
in
mov
sbb
adcb
sub
rclb
sbb
jecxz
adc
testl
jno
rclb
or
adc
nop
mov
jne
jno
inc
icebp
stos
xlat
jecxz
inc
jmp
add
ja
loop
adc
sbb
pop
push
jle
inc
inc
xorl
fisubrs
push
sub
aam
sub
adc
xor
mov
pop
ret
adc
xor
xchg
nop
or
adc
mov
dec
inc
pop
stos
adc
or
mov
or
push
lock
add
mov
aaa
call
mov
enter
add
sub
into
add
mov
mov
xchg
add
inc
mov
test
fdivrs
enter
stc
cmpsl
mov
out
mov
rep
ds
daa
adc
in
inc
lret
in
push
sbb
add
jae
in
es
aad
pushf
pop
ficoms
dec
inc
mov
or
jb
mov
das
ja
in
in
pop
mov
mov
ret
mov
sbb
sub
dec
jns
and
adc
inc
adc
xor
xchg
xchg
mov
rcrl
scas
call
or
in
leave
xchg
mov
test
aad
push
leave
sub
cmpsb
mov
dec
xlat
xor
and
cmpb
adc
sub
cs
adc
adc
addb
scas
sti
int
push
cmp
daa
sbb
push
xor
call
pop
add
push
inc
pop
fcomps
mov
in
sbb
xor
push
lret
es
divl
pop
add
adc
aad
test
ficoml
mov
add
adc
out
inc
pop
xchg
jge
call
mov
mov
mov
sarb
push
mov
fwait
mov
xchg
push
jl
test
jmp
shlb
inc
push
outsb
rolb
mov
push
fs
aam
jge
add
out
inc
dec
mov
push
rolb
or
mov
mov
adc
add
orb
test
outsl
out
jmp
xor
es
and
mov
inc
jp
pop
inc
push
addb
ss
or
adc
out
hlt
or
jge
sub
lods
mov
aas
jo
jmp
sbb
dec
or
fcmovnb
or
cltd
jg
adc
out
repz
js
mov
or
neg
dec
mov
in
push
jno
pop
and
and
int3
add
loop
mov
sub
push
jnp
inc
es
aad
push
cmp
inc
sahf
sti
cmpsl
adc
mov
shlb
ret
cmpsl
mov
popa
data16
cld
adc
xchg
rcrl
mov
and
adc
and
ljmp
mov
orl
pop
leave
call
sbb
pop
pop
or
pusha
jmp
stc
or
push
aam
and
jnp
mov
lgs
push
out
jg
jecxz
arpl
ljmp
psubq
das
out
repz
add
push
outsl
outsb
or
js
in
les
pop
push
test
pop
aas
add
add
xor
add
addr16
outsb
jecxz
ja
nop
lcall
test
shll
fdiv
shlb
daa
jecxz
adc
mov
sbb
push
mov
push
add
and
adc
xchg
nop
jp
mov
sbb
adc
jg
enter
and
ljmp
sub
lock
pushf
test
mov
mov
outsb
sub
pop
sbb
xchg
ret
mov
push
loop
and
fwait
xor
scas
fadds
jns
inc
xchg
dec
or
aas
pop
sub
or
mov
fbld
fwait
rcll
insl
sub
pop
and
xchg
ljmp
insb
lahf
js
in
shr
loop
push
fisubrl
shrl
outsl
sub
add
repnz
sub
mov
adc
rcll
pop
cltd
xchg
test
fnsave
inc
arpl
pop
jmp
adc
add
jp
xchg
test
mov
push
mov
adc
pop
adc
push
sub
mov
xchg
inc
add
daa
push
clc
test
imul
lock
test
repnz
fsts
sub
mov
inc
loopne
aaa
push
xor
mov
pop
lods
sub
and
jno
jnp
aaa
fiaddl
in
scas
stos
mov
test
xor
lahf
ljmp
shrl
push
les
add
dec
lock
adc
outsl
push
cld
lahf
cmp
jnp
mov
insl
xchg
inc
lret
fsubr
call
popa
dec
mov
cld
cmc
cli
mov
fdivs
jecxz
dec
jb
iret
pushf
add
xchg
inc
push
or
xchg
cmp
jmp
int3
andl
lds
cmp
xchg
xchg
ret
mov
lock
jo
xchg
ds
aaa
or
push
std
ss
insb
pop
das
sub
or
xchg
lock
mov
adc
jnp
add
push
jle
or
jmp
outsl
fildll
subb
and
notb
incb
lahf
test
inc
int3
sbb
pop
shlb
das
in
jno
loop
sar
bound
insl
shll
push
mov
lcall
xchg
sub
or
jge,pt
lahf
inc
dec
mov
bound
mov
hlt
mov
rcll
incl
mov
fcmovbe
mov
lods
push
and
loop
jg
pop
shl
sbb
add
ja
loope
test
mov
jb
in
pop
dec
mov
testl
mov
ja
add
push
cli
fs
mov
imul
mov
in
int
test
hlt
negb
xor
jae
jge
cmp
mov
cld
mov
dec
sub
divl
mov
xor
jl
icebp
arpl
xor
roll
test
addl
test
mov
adc
sti
cli
mov
lret
adc
dec
dec
pop
or
mov
xchg
prefetcht1
out
push
mov
pop
push
jmp
cld
es
pop
outsl
or
dec
cmp
sub
mov
sub
leave
mov
mov
mov
ficoms
and
jnp
sbb
cmpsb
loope
out
out
inc
mov
push
push
roll
repnz
clc
jmp
repz
test
mov
mov
decl
cmpb
leave
int
mov
xor
and
pop
adcb
or
inc
insb
outsl
pop
inc
addr16
adc
adc
out
scas
in
enter
and
push
test
push
pop
fstl
in
test
mov
cmp
add
adc
cmp
sbb
test
neg
push
jo
rcll
hlt
lret
pop
das
in
pop
filds
movaps
dec
jo
mov
in
add
int
pop
testl
loope
ljmp
pop
xchg
xchg
cmp
mov
pop
dec
pushf
fcomps
loop
and
rolb
or
fiadds
dec
insl
push
fsubrs
cmc
xchg
add
into
dec
mov
xchg
rorb
test
rcll
pushf
mov
push
pop
sub
repz
adc
jmp
push
sbb
stos
mov
pop
jnp
orl
jg
cld
sub
cmp
loope
adc
push
lods
adc
and
sub
loopne
xor
sub
pop
test
cmp
and
mov
mov
mov
xor
sbb
scas
and
ret
sbbb
jg
push
rcrb
adc
push
push
jno
push
scas
push
hlt
dec
add
xchg
in
mov
testb
jnp
jne
outsl
or
push
ss
add
popf
inc
cmp
sbb
xchg
pop
xchg
out
clc
iret
add
lret
ss
cmpsl
data16
mov
hlt
dec
xabort
xor
add
or
adc
fs
sub
aad
les
cli
push
xor
and
and
sub
stos
and
mov
inc
cmp
ja
jne
into
inc
call
sub
je
in
add
xor
jmp
pop
sub
test
sbb
fwait
inc
insb
jl
mov
mov
push
inc
lock
sub
ja
sbb
add
adc
insb
jb
aas
sbbl
add
ret
scas
test
negb
subl
daa
sbb
cmpsl
pop
fsubs
mov
sbb
jbe
insl
or
add
inc
popa
xor
jmp
sub
sbb
mov
xchg
ss
and
nop
movsb
data16
mov
sbb
rolb
ds
inc
rolb
pop
xor
and
push
push
in
ficoms
data16
cmpsb
sub
ficoml
cwtl
lods
and
add
sbb
or
ds
mov
and
dec
sub
out
ja
pop
cmpsb
inc
push
sbb
inc
jmp
inc
sti
xor
movsl
sbb
and
xor
out
inc
xor
movsb
dec
pop
mov
fsubs
inc
pop
or
or
leave
jmp
fsub
xchg
adc
sub
inc
daa
jb
test
add
in
aas
push
roll
mov
jge
and
xchg
adc
xor
addb
aam
and
ds
push
aad
push
inc
mov
and
xor
adc
sub
dec
rorl
scas
dec
push
cmp
or
push
sub
adc
fs
adc
ss
sub
inc
mov
xor
and
notl
inc
jns
add
fwait
push
fldenv
inc
mov
add
push
adc
sahf
sub
push
popf
dec
rcrb
in
and
dec
push
cs
sbb
mov
push
jo
int
insb
dec
push
cmp
cmp
mov
inc
int3
sub
roll
and
sub
pop
loopne
and
in
sbb
push
sbb
fadds
inc
lock
add
dec
adc
or
cmp
pop
test
stos
xor
push
sub
inc
push
inc
hlt
dec
insl
jecxz
or
mov
xchg
add
lahf
ljmp
or
or
inc
sub
inc
pusha
stos
cs
bound
push
icebp
loop
sub
mov
mov
fimuls
adcb
std
sar
push
movsb
push
dec
shufps
xchg
add
mov
cltd
or
xchg
dec
dec
add
mov
mov
xchg
nop
out
and
cli
fcompl
and
mov
or
push
push
cltd
lods
mov
add
aaa
and
and
inc
push
mov
cs
incl
jne
scas
dec
inc
cmc
dec
inc
cmp
jne
xor
pop
in
inc
jmp
add
ret
and
add
sbb
dec
test
insb
lret
sahf
sub
add
xor
push
into
sbb
dec
pop
cmp
int
adc
xor
inc
lds
mov
mov
test
mov
inc
and
in
ds
pop
bound
or
lods
imul
inc
aad
pop
lret
and
dec
rorl
cmp
call
subl
sub
mov
bound
loopne
icebp
or
push
cmp
clc
push
adc
loopne
jmp
repz
stc
mov
mov
or
mov
mov
loop
xor
add
dec
push
sbbb
sbb
ret
push
and
insb
ret
push
call
adc
or
adc
add
lea
or
jecxz
pop
mov
in
xchg
shrl
es
xchg
cld
orb
adc
sub
push
hlt
nop
mov
mov
mov
xchg
dec
xor
fsubrl
fadds
test
push
outsb
mov
aas
pushf
scas
dec
sub
shlb
sub
loop
adc
or
orb
iret
mov
and
cmpsl
adc
mov
add
ret
adc
or
mov
scas
rolb
test
andl
es
xor
or
hlt
adc
pop
dec
aad
je
adc
inc
mov
cmp
pop
shl
scas
dec
xor
mov
push
faddl
push
insb
dec
adc
add
rcrb
rcrl
cmp
aad
stos
aas
lock
sbb
jne
call
inc
xor
sbbl
std
adc
jmp
lahf
test
lock
enter
hlt
add
iret
sahf
mov
jnp
out
ja
adc
adc
lods
mov
jne
mov
data16
hlt
adc
add
aad
push
dec
icebp
mov
mov
and
push
push
int3
add
sarb
or
cmp
xor
mull
fcmovne
mov
addb
dec
and
mov
push
pop
rorl
and
bound
shrl
mov
cmp
cmp
nop
sub
sbb
call
das
sbb
cmp
and
jl
pop
adc
aad
or
mov
imul
jne
shrl
mov
inc
inc
or
mov
push
xor
mov
push
jno
push
adc
inc
adc
rcl
add
fisttps
push
jmp
add
addl
punpckhbw
push
pop
push
into
cmp
divps
iret
push
rcll
sbb
fmull
pop
sbb
adc
ljmp
inc
and
movsl
and
sub
mov
adc
jp
aas
or
jl
jmp
pushf
mov
push
subb
inc
and
cmpsl
lret
add
fiadds
push
jno
movsl
and
xchg
imul
leave
cmp
xchg
fwait
cli
in
adc
or
je
out
test
push
xchg
dec
jbe
add
sub
jo
dec
add
mov
add
add
andb
pop
mov
aaa
sbb
push
jb
lods
jo
inc
cmc
or
dec
and
movsb
das
cli
stc
sub
lret
mov
jae
xor
xor
pop
daa
mov
jmp
cld
add
daa
add
and
and
cmp
jo
pop
pusha
repnz
push
add
aam
jg
and
sbb
jge
iret
mov
roll
ss
stos
addr16
sbb
mov
shrb
jp
adc
pop
or
xchg
mov
xchg
or
mov
mov
or
into
faddl
loopne
xor
mov
pop
lea
and
sbb
mov
fdivs
xchg
add
push
daa
mov
cmpsl
mov
lods
lods
mov
sbb
xor
xchg
sub
fadds
or
inc
les
sub
es
outsl
bound
pop
xor
mov
loop
sbb
lds
cmp
data16
dec
mov
adc
xor
add
fdivr
mov
loopne
daa
sub
dec
std
jae
xor
xchg
lock
sbb
fisubrs
jp
in
and
mov
jmp
add
fdivl
cwtl
or
adc
ljmp
xchg
add
js
scas
mov
jae
mov
cmp
add
xchg
test
push
mov
stc
push
add
loopne
out
out
or
subb
push
xor
and
sbb
mov
or
adcb
add
in
mov
roll
orl
test
xchg
inc
roll
pop
push
popl
push
xor
or
xor
mov
dec
inc
dec
mov
xlat
sbb
ja
addr16
or
mov
test
add
or
and
inc
in
jmp
xchg
mov
imul
and
mov
and
adcb
adcb
push
push
adc
sub
pop
cmc
xchg
inc
pop
and
push
out
imul
push
and
cmp
sub
ret
mov
cld
out
loopne
inc
out
adc
inc
and
mov
mov
in
loopne
clc
movsb
inc
add
and
inc
mov
jp
push
jmp
push
test
test
jecxz
in
stos
add
push
xchg
orb
dec
imul
or
adc
lods
popa
mov
push
test
movsb
loopne
add
sbb
push
fsubs
sub
outsl
adc
add
test
and
andl
fbld
lods
xchg
adc
inc
test
aad
aaa
pop
add
ljmp
jbe
xor
aam
add
xchg
ficoml
aaa
fwait
cmpsl
cli
sbb
push
mov
in
add
inc
mov
shll
jnp
xchg
add
xor
push
rolb
jmp
aam
sub
pop
sbb
insl
addb
mov
adc
adc
shlb
test
insb
mov
sbb
add
inc
repz
lods
sbb
clc
cmp
leave
insb
lods
xor
les
jp
mov
add
dec
push
lock
sbbb
movsl
aam
sub
or
in
cmp
adcl
ret
jbe
cmp
in
and
push
sbb
or
adc
fists
dec
sub
sbb
jp
or
stos
icebp
mov
pop
xchg
cli
or
in
fmuls
in
pusha
cli
mov
sub
pop
loopne
fildl
test
sbb
inc
popf
adc
and
add
xchg
or
add
xlat
inc
lods
out
dec
inc
dec
mov
dec
pop
dec
mov
subl
sub
mov
cwtl
mov
pop
sbb
sub
fiaddl
popf
shrl
or
cmp
fcoms
dec
fcmovbe
push
fstps
xchg
sub
add
sbb
mov
repz
inc
repnz
cmp
and
xor
inc
jg
pop
dec
sbb
or
inc
stos
ret
and
aaa
lds
inc
lea
push
popa
mov
bound
inc
xchg
cmovae
or
cmpsl
push
add
in
and
cmp
stos
fwait
mov
add
adc
push
aad
popf
cmpsl
add
hlt
sahf
js
aad
xchg
fsubrs
stos
mov
pop
fbstp
xor
andl
roll
pop
inc
imul
adc
mov
add
fcoms
sbb
or
subb
adc
enter
push
daa
rcr
movsb
clc
mov
insb
icebp
pop
xor
shlb
adc
addb
sub
sahf
int
dec
andb
adc
shll
repz
or
stos
cltd
xor
mov
into
and
and
cli
fidivl
andl
iret
jmp
sbb
ja
or
ret
dec
adc
pop
testb
fs
shll
push
pop
sbb
push
clc
rcll
sub
xchg
test
dec
in
sub
lock
dec
rolb
dec
pop
xchg
movsb
mov
mov
dec
loop
xor
enter
or
fisubl
or
dec
test
xor
daa
lds
int3
rcl
out
dec
scas
cmc
or
dec
clc
jae
inc
andb
in
mov
sbb
push
test
loop
jmp
mov
mov
mov
fidivrl
sbb
and
das
mov
popf
inc
or
pop
into
mov
mov
adc
inc
and
daa
jecxz
lods
and
loope
fists
daa
inc
aad
push
ljmp
test
mov
xor
sub
push
jno
cmp
push
push
jbe
add
cmp
fwait
in
pop
out
je
or
add
inc
out
call
stos
sbbb
iret
sub
sub
jmp
daa
or
push
pop
dec
cmp
mov
pushf
adc
and
sbb
xchg
xor
test
adc
push
sub
loope
push
jno
lahf
inc
inc
xchg
mov
rcrl
push
loope
jge
pop
shll
clc
popa
fiaddl
xchg
test
or
jns
int3
pop
xchg
stos
jbe
inc
test
mov
inc
inc
sub
roll
sahf
incb
mov
ljmp
adc
gs
int3
das
cmpsl
fimuls
adc
adc
jge
sub
nop
push
inc
push
mov
inc
or
mov
enter
or
mov
or
jo
sub
push
pusha
int
dec
in
mov
pop
dec
lock
cmp
leave
popa
add
xchg
pop
sbb
hlt
fwait
int3
ljmp
icebp
fsubrs
dec
xlat
and
iret
pop
fcmovnu
or
and
jmp
xchg
pushf
stos
dec
lods
sar
ret
jecxz
lcall
adc
mov
add
inc
ss
daa
adc
mov
clc
and
aam
sbb
fadds
aas
mov
cli
repz
adc
in
ret
jbe
adc
stos
and
cmp
mov
mov
sarb
rolb
sub
cs
pushf
dec
cmp
aad
fbstp
xchg
test
test
inc
mov
inc
cmp
cmp
and
push
cmp
mov
test
popf
add
es
and
jg
jnp
and
mov
int3
adc
dec
inc
addr16
inc
sub
inc
jns
jno
cmp
sub
jb
aaa
ds
shlb
push
lds
add
aas
test
cmp
push
add
or
mov
ss
shll
enter
test
cmp
mov
inc
sbb
add
cli
scas
or
mov
xchg
ret
inc
rorb
sbb
inc
cld
dec
sbb
add
jg
adc
fldcw
push
rorl
jge
sub
mov
pop
stc
push
aas
push
and
jne
in
iret
jae
flds
scas
lock
mov
jo
out
adc
iret
sub
xor
or
push
ss
pop
jne
inc
xchg
sbb
adc
out
jl
addl
and
mov
sti
adc
sub
lret
movsb
in
mov
test
mov
inc
mov
int3
mov
add
lret
or
loop
sub
lahf
lret
push
insl
call
ret
clc
and
std
cmp
mov
popa
adc
sub
inc
inc
adc
jae
lret
jg
pusha
cmpsb
add
sub
shlb
pop
int
lods
mov
cmpxchg
xor
jp
push
shll
add
xor
pop
sub
test
mov
and
xchg
sub
ret
call
xchg
jnp
xor
xchg
movsb
mov
movsb
mov
mov
and
addl
rcrl
mov
mov
add
xor
jb
add
stos
inc
iret
call
adc
mov
jp
sub
fbld
jno
aam
icebp
jmp
add
pop
out
sub
scas
push
out
and
addr16
out
cli
fs
aad
or
push
in
inc
jo
rcr
jge
lods
clc
mov
shl
inc
cmp
sbb
stos
rorb
jne
popf
pop
push
and
xor
push
sub
push
xchg
call
and
loop
rdpmc
ss
fwait
rcll
pop
cmc
hlt
sub
and
das
or
outsb
inc
rcll
jae
cmp
adcl
clc
test
push
int3
fiadds
stos
int3
or
push
rorl
mov
jmp
loop
mov
loopne
cld
push
incb
sub
cmpsl
jno
imull
andb
inc
pusha
sub
es
mul
je
fadd
inc
pop
and
jg
pop
leave
mov
fdivl
cwtl
aam
and
or
and
lds
xchg
sahf
aam
aam
push
xor
je
and
mov
mov
gs
rcrb
push
pusha
nop
rcrl
sbb
sbb
ret
mov
nop
fsubs
pop
mov
dec
nop
sub
xchg
cs
sub
add
sub
mov
add
and
aaa
and
adc
inc
push
push
test
shlb
loopne
mov
push
nop
sub
dec
mov
movsb
push
stos
pop
loop
mov
std
xchg
pop
movsb
inc
sub
add
add
pop
mov
add
fwait
add
test
xchg
inc
push
sbb
and
lcall
out
cltd
hlt
mov
mov
xor
test
push
cmp
test
or
xchg
mov
ljmp
mov
push
or
and
negl
incl
dec
ret
sbb
inc
inc
movsl
addb
and
and
push
test
or
mov
push
add
xor
mov
push
xor
push
push
rorl
mov
mov
fisubl
xor
mov
sub
xlat
std
aad
es
aas
scas
adc
xor
cs
or
pushf
sbb
idiv
jno
sbbb
and
cmpsl
popf
pop
pop
cli
ret
inc
push
icebp
lcall
rorb
aad
and
call
outsb
repz
cli
xor
shll
add
pushf
loop
or
xor
lds
and
sub
rcrl
jl
lods
call
movsl
loop
pop
pop
or
jo
add
rcr
adc
fwait
push
xchg
lods
or
call
sahf
inc
shrl
pop
or
inc
lcall
mov
sbb
shl
pop
xchg
ret
add
enter
pop
adc
lahf
and
inc
out
aaa
fs
pop
lds
or
jle
int
push
push
xor
jmp
push
sbb
xchg
ret
bound
out
mov
rclb
jbe
lahf
and
subl
ret
mov
sbb
pop
lods
aam
add
dec
iret
push
jnp
cmc
je
flds
or
pop
iret
mov
in
and
xor
faddl
subb
lret
test
add
adc
lret
hlt
shrb
scas
mov
add
arpl
adc
loope
mov
mov
sub
sub
imul
js
insb
push
test
loope
out
roll
pop
out
les
ljmp
xchg
mov
jmp
inc
cmp
jae
xchg
stos
add
bound
insl
loop
adc
ljmp
mov
ret
imul
lahf
scas
rorl
mov
subb
mov
sub
ret
loope
push
or
jns
sbb
hlt
inc
and
int3
mov
jecxz
loopne
loop
sbbl
cwtl
cmp
shlb
adc
mov
or
movsl
and
mov
stc
arpl
or
ds
pop
push
mov
pop
ljmp
orb
pop
icebp
jmp
push
push
xchg
fiadds
popf
out
mov
adc
pop
jno
lret
xchg
cltd
iret
jle
add
adc
imul
jno
outsl
dec
pop
and
mov
andb
addb
xchg
fwait
lds
call
out
pop
jnp
jne
pop
movsl
xchg
adc
mov
adc
aaa
adc
mov
icebp
andb
icebp
xor
adc
sub
inc
pop
add
adc
mov
into
add
repnz
test
add
add
cmpsl
lret
outsb
dec
or
inc
insb
push
jle
sbb
leave
lcall
icebp
mov
mov
pop
repnz
pop
mov
xor
loopne
sbb
fmul
push
jno
mov
bts
add
adc
lock
or
rorl
dec
adc
aam
outsb
push
dec
js
sub
or
clc
mull
inc
aas
mov
in
enter
adc
test
and
jmp
data16
xchg
or
ljmp
or
jecxz
arpl
mov
sarb
rolb
in
or
jp
clc
dec
mov
mov
mov
push
push
push
outsl
imul
mov
cmpsl
push
cld
inc
inc
cld
mov
add
or
adc
shlb
fcoms
sbb
sbb
and
inc
andl
pop
mov
sarl
inc
add
push
cmpsl
pop
loop
xchg
mov
mov
mov
mov
addr16
push
add
push
sbb
mov
xor
fsubs
clc
movsl
adc
mov
rcll
mov
addl
imul
shrl
fiaddl
push
loopne
pusha
adc
inc
loopne
mov
mov
cmp
hlt
cwtl
and
or
and
mov
xchg
dec
lds
insl
pop
loope
or
mov
adc
sbb
xchg
add
adc
shl
mov
and
divl
pop
push
out
mov
xor
sub
rcrb
fmul
or
inc
popa
cwtl
sbb
ja
mov
enter
dec
lods
mov
sub
jb
and
inc
out
inc
push
mov
cmpb
or
pop
dec
mov
jle
jge
inc
jmp
or
pop
dec
adc
xchg
add
adc
movsl
adc
roll
add
inc
mov
lret
in
pop
sbb
adc
jnp
xchg
jno
mov
outsl
mov
mov
lcall
clc
ret
push
pop
lods
adc
ds
inc
cmp
nop
movsb
mov
imul
push
dec
ret
orb
pop
add
bound
xor
inc
imul
test
fwait
pop
fs
or
adc
inc
and
pop
lret
cmp
cmp
or
dec
dec
inc
int
xor
mov
clc
sbb
lea
outsl
stos
packuswb
in
mov
daa
adcl
mov
pop
or
in
cmpsb
push
add
jne
int3
adc
or
hlt
dec
push
rorb
push
inc
cld
test
add
adc
cli
inc
jmp
mov
sbb
or
inc
jge
imul
mov
fsubl
mov
push
mov
movsl
sbb
xchg
pushf
xorb
or
cld
loopne
xchg
mov
mov
pushf
cs
or
sub
mov
cmp
incl
nop
mov
pop
mov
jo
cmp
adc
cmp
add
data16
icebp
inc
fildll
std
pop
insb
aas
add
xchg
cmp
and
add
ja
or
sub
add
cmc
dec
pop
fimull
add
fdivs
add
push
sub
subl
pusha
add
aaa
xchg
mov
jge
mov
add
sbb
ljmp
hlt
scas
xor
jbe
rcrl
fildll
leave
mov
roll
sbb
xchg
icebp
add
pop
or
or
xor
jl
popa
fbstp
hlt
pop
jecxz
cmp
jl
lret
lahf
sub
repnz
cli
fwait
mov
cltd
pop
cmp
add
daa
je
mov
dec
movsb
add
and
adc
sbb
fldt
sbb
insl
mov
adc
add
pop
pushl
movl
imul
icebp
jg
push
push
push
and
sub
and
jle
inc
push
shlb
pop
add
lea
mov
mov
add
pop
mov
aaa
test
sbb
dec
pop
and
hlt
add
std
add
jle
push
mov
push
je
or
adcb
jg
pop
dec
push
dec
pop
in
into
jg
xchg
xchg
leave
or
test
dec
mov
mov
sbb
mov
decl
jnp
loope
cmp
ds
cmp
rcll
pop
jp
add
add
fnsave
sbb
stc
mov
ljmp
cmpl
xchg
jle
and
adc
add
lret
dec
sbb
add
or
mov
adc
iret
cwtl
movsl
sub
xor
js
sub
push
popf
xchg
cmpsl
pop
dec
stos
sbb
adc
and
lods
loop
aaa
or
fldl
das
out
adc
add
lods
add
imul
and
adc
pop
movsb
pop
sbbl
pop
shrb
cmpsb
sahf
mov
jle
call
cmp
inc
inc
fld
sahf
pop
push
and
repz
inc
jp
popf
mov
cmpsb
data16
mov
jae
inc
std
or
in
push
mov
out
cltd
mov
or
sbb
mov
mov
pop
aam
cmp
es
mov
xorb
mov
inc
orb
sbb
mov
inc
iret
in
jl
add
sub
jge
xchg
sti
push
or
xor
pop
cld
mov
mov
inc
int
jg
mov
pusha
push
mov
add
add
cwtl
int
or
adc
push
dec
push
mov
mov
cmp
add
xchg
push
les
dec
xchg
add
pop
pop
and
push
sub
push
xchg
adc
inc
shl
dec
mov
xchg
bound
scas
aam
mov
nop
inc
xchg
das
bound
call
lcall
pop
jo
fisttps
inc
or
lret
testl
xor
push
and
jmp
ja
sub
xchg
cwtl
sbb
cmc
pop
pusha
mov
shlb
pop
and
pop
rorl
fcomi
ficoml
in
fs
adc
das
in
enter
shr
in
call
mov
ret
out
mov
aam
xor
rcll
push
rcll
xchg
rclb
and
push
hlt
or
testb
rcr
fs
mov
dec
movl
mov
mov
mov
enter
test
or
mov
sbb
pop
pop
xor
sub
imul
mov
xlat
and
cli
daa
add
pop
pop
jmp
mov
sbb
aaa
adcl
les
pand
ljmp
enter
sbb
and
inc
int3
mov
xor
rcrb
pop
inc
pop
cmp
int
pop
pop
add
pop
in
int
je
inc
dec
cmp
aam
addl
movsb
mov
lock
aam
ret
adc
jb
add
subl
add
pusha
jns
mov
mov
repz
mov
loope
pop
imul
jmp
push
out
adc
pop
xor
cmp
call
insb
sub
pusha
add
mov
loope
mov
add
cltd
filds
pop
clc
das
adc
call
fwait
ret
cmpsb
sub
pushf
push
in
jg
unpckhps
add
pop
add
add
mov
inc
xchg
sub
mov
push
orl
mov
add
xchg
mov
dec
movsb
popf
popa
xor
clc
mov
in
add
pop
cld
xchg
add
out
adc
rorb
dec
rol
lahf
repnz
in
mov
add
mov
cmc
incl
fucomi
mov
out
cwtl
mov
jmp
mov
das
dec
aad
sub
or
inc
sub
std
neg
push
pop
xlat
add
xlat
adc
insl
or
movb
adcl
js
mov
xor
dec
outsb
test
out
add
in
mov
pop
xchg
add
xchg
shll
inc
vmovntps
jne
lea
push
inc
lds
jg
clc
mov
jmp
out
mov
in
rclb
popa
mov
cs
mov
fisubs
clc
rclb
or
repnz
xchg
ds
sbb
add
mov
jo
dec
les
jl
xor
cmp
in
inc
push
insb
sub
or
dec
cld
add
push
pop
std
xchg
mov
pop
add
mov
lock
mov
add
aam
dec
mov
add
inc
sub
lcall
test
inc
inc
adc
push
mov
pop
push
jne
inc
es
sbb
jo
frstor
mov
adc
ja
add
add
jge
mov
sbb
push
add
mov
xor
hlt
dec
or
push
mov
jno
js
dec
cmp
pusha
insl
cmpsb
xor
outsb
add
in
push
xchg
incb
dec
xor
push
bound
in
xlat
or
or
push
and
loopne
push
inc
aad
movsb
mov
or
mov
shrl
cmpl
mov
rolb
loop
xchg
js
int
sub
aam
loope
sldt
jne
push
dec
adc
mov
pop
jg
popa
sub
sti
lods
repnz
inc
mov
dec
push
mov
int
mov
sub
aaa
sysexit
testl
mov
jecxz
dec
std
inc
adc
sub
scas
hlt
sar
in
push
adc
adc
push
lar
loop
push
add
cs
test
add
sub
repz
inc
and
pop
in
add
dec
sbb
sbb
fadds
scas
xor
adc
fisubrs
dec
sub
dec
add
notb
mov
je
arpl
mov
scas
out
sbb
cmp
sub
pusha
int3
sbb
sbb
add
lret
dec
add
push
cld
fldl2e
push
je
xor
mov
sbb
es
lret
inc
mov
add
adc
mov
int3
jo
mov
in
popa
xor
xchg
add
fldt
sahf
bound
inc
ret
xorb
adc
cmp
sub
xlat
pop
inc
mov
nop
popa
loope
stos
mov
sbb
arpl
out
enter
mov
xor
jg
mov
xchg
jg
fs
cmc
rolb
inc
sahf
inc
std
dec
mov
xchg
fsubl
setno
inc
add
lods
es
js
xor
lcall
loopne
das
add
sub
sbb
pop
nop
or
cmp
dec
mov
mov
xor
ret
adc
jns
addb
inc
or
xchg
add
mov
cwtl
mov
ss
aam
push
insb
pop
xor
cmp
mov
mov
mov
or
lahf
shlb
jns
jne
into
addb
adc
popf
mov
cmc
mov
int
or
dec
mov
or
pop
push
cmp
cmp
rol
inc
or
add
orb
in
add
fwait
notb
jp
xchg
mov
fwait
inc
cs
mov
adc
jecxz
or
jge
sub
mov
add
int3
aas
add
rorl
mov
xor
cmp
movsb
popl
or
std
adc
and
add
outsl
hlt
push
cmp
movsl
xor
sub
cmc
daa
fwait
loopne
call
add
lea
lods
or
pop
push
adc
cmpb
cmpsl
sbbb
jns
add
jbe
pop
in
sub
rclb
sbb
fcom
aas
in
bound
and
addl
and
mov
mov
pop
xchg
push
mov
loopne
push
rcrl
cmp
or
cmp
inc
fs
xchg
mov
mov
pop
mov
dec
cmp
test
call
mov
adc
out
lret
mov
push
mov
mov
sub
xor
or
inc
add
add
daa
pop
cwtl
inc
fwait
push
xor
jmp
ljmp
dec
std
outsl
add
and
adc
lcall
cltd
fdivr
pusha
jg
icebp
fs
adc
adc
fs
popa
lea
pop
adc
pusha
daa
push
cwtl
or
fdiv
out
mov
pop
js
sar
jl
cld
fiaddl
clc
add
call
push
adc
adc
add
int
adc
inc
mov
jecxz
pop
fmul
and
sbb
cmpsl
in
mov
clc
out
xor
lcall
pop
mov
inc
inc
adc
cmp
mov
mov
and
les
mov
adc
sbb
lods
lods
xor
cmp
push
cwtl
push
adc
roll
std
jge
inc
jl
lahf
or
lea
xchg
sub
and
movsb
bswap
xor
lds
loop
adc
push
bound
mov
insb
repnz
mov
sbb
adc
dec
mov
outsl
jmp
cmp
adc
or
insb
mov
pop
and
faddl
adc
xchg
inc
movhps
add
loop
sub
test
xchg
pop
loopne
test
sbb
lahf
cmp
cmc
xor
sub
in
loopne
xor
es
add
inc
adc
mov
aas
add
mov
inc
das
or
outsb
push
inc
xchg
or
cmp
lock
jnp
into
or
add
add
fs
inc
clc
lock
mov
inc
daa
sub
rcrb
xor
push
xor
rolb
insb
push
stos
aam
imul
nop
mov
outsl
xchg
mov
jle
add
add
nop
ljmp
add
jne
jnp
outsl
dec
mov
shll
fs
int
stos
lods
ret
mov
stos
dec
mov
pop
pop
add
cld
adc
add
stos
shl
test
in
jo
or
addb
insl
mov
sub
push
xor
dec
mov
push
or
cmp
jo
mov
shlb
cwtl
sub
sbb
jl
inc
jg
add
add
and
aam
inc
inc
push
hlt
adc
sbb
mov
jae
pop
jecxz
adc
icebp
inc
cmp
mov
aam
jle
in
mov
icebp
es
mov
add
xorl
je
push
or
push
mov
dec
iret
loopne
inc
cmpsb
push
xchg
cli
and
stos
outsb
cmp
daa
cmp
dec
call
and
mov
push
pop
orb
stos
or
cmpsb
push
inc
arpl
pop
ss
hlt
or
or
divl
ds
mov
pop
bound
mov
add
pop
push
jecxz
loop
lea
pop
push
add
add
mov
pop
mov
adc
push
sbb
ja
std
or
pop
jns
call
jnp
or
push
movsl
cmp
jl
push
inc
mov
in
insl
add
push
xor
aad
dec
imul
or
add
adc
mov
add
cmpl
add
test
mov
mov
loopne
ljmp
xchg
jmp
dec
bnd
mov
enter
add
insl
push
insb
add
sub
add
cmc
inc
aam
fcomps
cli
js
push
outsl
fldt
bound
mov
sub
add
subb
sbb
mov
fincstp
cmpb
aas
fnstsw
mov
add
fisttpl
mov
add
daa
mov
fmul
lahf
popa
add
add
adc
inc
sbb
pop
cmpsl
xchg
add
mov
add
adc
insb
mov
enter
pop
iret
or
aaa
add
stc
aas
mov
int3
push
and
add
es
icebp
jg
sbb
inc
cltd
test
test
icebp
xor
cs
and
cmp
in
mulb
out
and
insl
adc
xor
mov
xchg
outsl
pop
stc
mov
shrl
jbe
mov
enter
pop
cmp
addb
fmull
pop
int3
roll
pop
sahf
mov
shrb
inc
cmc
adc
xchg
js
push
fdivl
mov
testb
es
addb
jo
add
out
dec
jno
rcr
mov
in
andb
pop
test
adc
nop
repz
jo
and
xorl
and
bound
dec
test
xor
ss
outsl
cld
pop
adc
nop
add
push
xor
in
bound
jl
lea
push
test
mov
jno
xchg
and
test
lret
jo
add
ret
in
test
or
add
les
std
fbstp
mov
lret
sbb
push
fidivs
push
jge
scas
push
js
ficompl
out
stc
ret
mov
mov
push
xchg
das
or
pop
js
in
sbb
sbb
or
adc
int3
and
out
call
and
mov
lcall
cmpl
pop
mov
xchg
push
adc
xor
sub
shll
fucomi
mov
inc
nop
sbb
int
push
xchg
jne
and
sub
xchg
inc
and
clc
in
jg
mov
inc
cmp
sub
push
mov
cmc
and
test
std
in
mov
fnsave
test
jecxz
cmp
mov
fistpl
push
test
adc
and
lods
xchg
test
push
mov
std
jns
push
nop
pop
lock
ljmp
dec
out
rclb
icebp
xchg
enter
hlt
lcall
shr
dec
test
lds
cmp
jg
leave
cmp
xchg
xor
or
jg
outsb
inc
arpl
fidivs
mov
push
lea
pop
orb
mov
test
ljmp
imul
aam
push
das
icebp
or
or
inc
add
pop
sbb
aaa
sbb
adc
pop
ss
scas
test
dec
push
ret
stos
or
push
or
mov
mov
aad
fstps
jnp
push
mov
push
xchg
int3
adc
fldt
xchg
idivl
nop
mov
addl
inc
lcall
stc
pop
pop
dec
cli
cwtl
push
jmp
iret
iret
and
movsb
andl
inc
cs
and
je
lock
xlat
aam
add
or
jl
outsl
dec
mov
imul
adc
mov
adc
cmp
fnstcw
outsb
push
data16
sbb
inc
je
or
addl
adc
stos
sub
std
add
data16
dec
sbb
adc
or
add
cld
cmp
jp
fiadds
fwait
bound
inc
sbb
fwait
push
int
jl
jge
nop
pop
adc
cmp
and
mov
shll
jae
in
pushf
add
xchg
hlt
sbbb
ljmp
pushf
or
and
cli
adc
xlat
or
xchg
rorl
dec
push
sarb
dec
shlb
ret
jp
int3
sub
jmp
adc
adc
push
and
repz
clc
hlt
adc
mov
call
sub
cmpsl
stos
jb
aas
jne
adcb
hlt
xor
mov
push
jge
xchg
jae
xchg
inc
lock
outsl
mov
jge
stc
das
test
mov
mov
mov
cltd
dec
mov
sbb
andb
pop
push
es
cmpsb
jne
addr16
shlb
inc
mov
and
es
cld
nop
loop
add
imul
shrl
mov
push
add
cmp
fiaddl
xchg
and
xor
pop
mov
shlb
stos
add
or
cltd
push
mov
stos
xor
sahf
popa
andb
call
add
lret
jne
dec
inc
xchg
test
and
xchg
cmpsb
les
mov
and
dec
add
add
shrl
jns
stc
inc
push
mov
fs
lock
inc
hlt
push
mov
mov
or
mov
mov
sub
push
movaps
push
clc
scas
and
js
add
add
sbb
and
sub
in
sbb
gs
sub
mov
sub
movsl
subb
pusha
sbb
ja
jge
out
shlb
dec
shll
cwtl
cltd
out
xor
xchg
add
mov
push
xor
adc
leave
cli
fmull
mov
xchg
mov
cltd
rclb
adc
movsl
lret
sub
outsl
sub
roll
pop
inc
shrl
push
stos
dec
xchg
mov
pop
roll
clc
pop
jp
shll
xchg
mov
insb
add
add
dec
mov
lret
sbb
push
adc
aas
stos
mov
fcoms
dec
jne
jge
adc
or
dec
repz
or
adc
cltd
and
dec
lds
xor
dec
add
xor
or
shll
call
mov
or
in
or
mov
add
iret
scas
cmpsl
data16
cmp
pusha
sbb
stos
clc
xchg
push
aad
test
ds
and
aas
fsubrs
fcoms
add
test
and
xor
icebp
pop
in
int
cmpsb
sbb
outsb
repz
push
subl
jl
nop
or
ljmp
incl
inc
xchg
lret
mov
xor
adc
test
xor
cmpsl
jmp
cmp
mov
add
out
lcall
orl
or
mov
test
int3
orl
sbb
sbb
push
dec
lcall
cltd
push
orb
and
roll
data16
stc
gs
adc
mov
inc
mov
filds
or
push
test
pop
add
test
lods
int
cmp
xchg
imul
sbb
push
jmp
pop
adc
aam
aaa
aad
js
add
sub
imul
xchg
cmp
outsl
mov
mov
incb
push
test
in
or
mov
add
add
jne
push
in
jg
scas
cwtl
push
imul
xor
loope
add
sub
stos
mov
push
ss
shll
fchs
dec
xor
sub
pushl
jb
dec
mov
dec
adc
into
pop
decl
test
jae
adcl
push
sbb
mov
and
mov
or
mov
fldenv
inc
xchg
ja
xchg
mov
jnp
cmc
pop
push
push
movsl
outsb
cmc
cmp
nop
xchg
jbe
sti
outsl
dec
sub
test
pop
outsl
xchg
adc
das
push
insb
jmp
scas
push
je
mov
std
pop
call
xor
push
ret
mov
or
in
pop
inc
jns
fldcw
push
cmp
pop
mov
and
mov
mov
cld
pop
adc
scas
cmpsl
outsl
inc
out
cltd
bound
sbb
sub
sarb
xchg
add
jl
dec
and
sbb
push
enter
aam
or
sbb
xchg
add
adc
jg
add
jp
and
mov
or
outsl
inc
les
hlt
sub
mov
push
push
fcmovbe
adc
loope
sbb
mov
pusha
pop
or
cmpsb
xchg
leave
xchg
dec
inc
cs
mov
push
adc
cmpsl
inc
out
cmp
std
ljmp
xchg
std
clc
mov
inc
jg
imul
jge
xor
push
aad
mov
mov
repnz
sbb
push
or
jecxz
mov
mov
je
test
incl
mov
lahf
clc
and
mov
and
std
xchg
aaa
loopne
add
jl
mov
sbb
pop
adc
stc
xor
sahf
ds
jp
cld
jne
clc
xchg
loope
stc
in
fadds
dec
mov
jle
push
and
mov
inc
ja
ret
sub
jmp
mov
pop
sbb
mov
repz
mov
xlat
loop
test
ret
cltd
cld
loope
sbb
sbb
or
int
lea
sbb
fsub
mov
add
mov
dec
pop
xor
and
sub
xor
int
ret
xchg
adc
dec
ljmp
hlt
gs
pop
loope
adc
mov
in
clc
cmp
lcall
mov
clc
fptan
sarb
push
cmp
scas
test
mov
push
outsl
sbb
mov
ds
es
sbb
push
lock
daa
adc
push
pop
mov
pop
ljmp
inc
ljmp
frstor
loope
mov
ss
loopne
mulb
stc
and
xor
dec
cmp
call
sub
pop
mov
lea
sbb
cmp
pop
or
outsl
scas
mov
jg
mov
sbb
lods
mov
outsl
add
dec
flds
pop
in
and
mov
adc
sbb
push
jecxz
mov
roll
add
das
adc
in
data16
fiaddl
aas
stos
mov
mov
addl
pop
cmpb
mov
subb
jns
clc
mov
add
xchg
loopne
cmp
mov
jns
cmp
in
fistpll
mov
push
test
sub
js
jmp
in
ret
es
in
xor
enter
pop
push
mov
std
adc
xor
or
frstpm(287
subb
mov
sub
jmp
outsl
mov
imul
xor
mov
mov
sbb
add
outsl
insb
movsl
testb
xchg
mov
jno
push
cmp
mov
clc
leave
pop
test
es
test
mov
adc
xchg
lcall
mov
or
cwtl
or
js
rcl
es
mov
or
or
subb
xchg
sbb
decb
addr16
daa
xor
xor
sahf
mov
push
mov
loopne
and
out
mov
push
inc
lods
pop
and
push
scas
push
outsl
fildl
ja
inc
jno
add
stc
shlb
subl
aam
rolb
aas
mov
pop
stos
sub
dec
das
les
mov
test
mov
push
inc
sbb
fldl
stc
sbb
ss
ja
pop
cmp
movsb
cli
push
sar
js
ds
jg
cld
into
aam
adc
adc
roll
mov
jge
dec
push
subb
shl
lods
out
sbb
inc
aam
jo
das
cmp
or
out
mov
aad
adc
add
mov
push
or
loope
ss
push
stos
mov
adc
jmp
std
mov
lods
lds
cld
call
movsl
mov
dec
sub
xor
mov
pop
jne
cmc
add
loopne
xchg
nop
sub
add
mov
adc
mov
and
xchg
scas
pop
sti
fsubrp
push
xor
and
cltd
fdivrl
jge
inc
pop
add
pop
push
mov
in
push
xlat
push
movsl
add
jg
loope
mov
rorl
push
add
rcll
and
mov
mov
push
or
or
and
incl
gs
jecxz
xchg
inc
add
mov
out
subl
fnstsw
int3
dec
pop
sbb
out
mov
popf
mov
cmp
dec
jbe
lret
add
inc
mov
mov
in
add
jbe
dec
mov
das
sub
movsl
adc
pop
addr16
notb
loop
mov
fisubl
sbb
iret
sbb
subl
mov
jae
push
lret
add
xchg
push
icebp
xchg
leave
rcll
sahf
inc
sbb
mov
push
ret
jecxz
xchg
shl
test
ret
inc
or
les
subl
or
mov
push
enter
mov
mov
dec
dec
js
cltd
call
movsb
mov
mov
mov
bnd
dec
pop
imul
mov
dec
mov
pop
mov
inc
inc
outsb
push
cmp
dec
adc
mov
mov
loopne
stos
call
push
add
jno
mov
out
pop
scas
js
lods
xchg
mov
rcl
sbb
or
data16
movb
mov
shlb
icebp
rcrb
sbb
les
nop
fs
movsb
pushf
dec
aas
call
test
mov
mov
add
adc
ret
popf
adc
sbb
lds
sbb
in
xchg
vorpd
adc
mov
icebp
insl
sbbb
mov
clc
xor
xlat
addb
sub
inc
adc
sbbl
mov
xchg
stos
pop
ds
inc
dec
push
icebp
and
xor
and
dec
mov
mov
xchg
call
push
sbb
aas
or
push
mov
or
ljmp
push
roll
popa
loope
or
test
jne
inc
arpl
out
adc
mov
clc
testb
mov
sar
out
mov
test
inc
push
call
icebp
call
int
and
popa
nop
call
inc
inc
les
sub
clc
dec
pop
mov
cmp
inc
aam
push
add
sub
ljmp
icebp
pushw
lret
insl
idiv
add
cmpsl
ret
mov
xor
rorb
scas
adc
mov
push
adc
outsb
pushf
push
movsb
and
xchg
mov
mov
push
dec
add
pop
aaa
mov
lea
cmp
xor
mov
add
and
cmc
push
iret
jecxz
add
fstpl
mov
or
aam
lods
subb
mov
cmp
push
int
push
cmp
fsubrl
test
rcrl
js
or
and
sub
cmpsl
mov
sub
cmpsl
jecxz
shrl
sub
int
mov
adcb
lcall
fbld
lret
repz
push
outsb
pop
and
mov
dec
inc
inc
stos
mov
pop
in
push
push
in
mov
loop
add
pop
shlb
test
jg
lock
mov
icebp
lret
inc
shlb
test
xor
mov
test
icebp
xchg
pop
dec
pusha
lods
xchg
into
dec
stos
int
dec
adc
pop
mov
jl
dec
shlb
mov
adc
jg
stos
int
xor
or
sbbb
or
cmpsb
addr16
inc
mov
rorl
and
push
mov
add
aam
js
insl
xor
les
pop
mov
sbb
add
jge
clc
fsubr
loope
out
mov
loope
adc
movsb
mov
je
adc
test
cmc
nop
gs
stos
cs
lret
test
jecxz
daa
test
nop
and
adc
rol
jp
inc
orb
out
push
push
push
xchg
mov
aaa
cmpb
aam
and
cld
fstpt
and
jg
xchg
mov
or
push
or
insl
stos
jl
mov
push
ret
push
adc
pop
xchg
adc
in
jnp
add
and
call
mov
mov
inc
idivl
push
mov
add
iret
insl
inc
sub
loopne
les
test
or
xchg
orl
loopne
imul
add
mov
ffreep
mov
out
outsb
sti
mov
adc
pop
jo
push
push
das
inc
les
sub
sub
cmpsl
cmp
in
lock
jp
shl
nop
or
add
dec
out
nop
pop
cs
das
icebp
outsl
inc
add
sbb
test
pop
cmp
dec
push
roll
lahf
pushf
std
ljmp
adc
clc
and
mov
add
mov
adc
mov
in
jg
lea
push
clc
inc
aaa
add
add
mov
insl
pusha
mov
mov
fisubrl
mov
dec
push
das
fwait
jns
mov
push
ret
mov
es
dec
lret
repz
pop
pop
and
push
sub
adc
and
dec
mov
fnsave
push
iret
rcrl
jl
pop
imul
pop
dec
stc
mov
mov
and
mov
ss
mov
orl
rclb
jno
or
sbb
and
adc
out
and
xchg
push
xor
mov
cmpsl
pop
mov
pop
rcll
lcall
out
push
arpl
icebp
in
add
inc
pop
add
push
mov
lods
pop
mov
push
jo
xchg
cmp
rolb
cld
inc
rorb
sbb
xchg
add
out
push
push
insl
inc
insl
lods
popa
cltd
mov
mov
stos
push
jmp
adc
pop
cmp
mov
pop
push
jae
xlat
xor
sbb
push
add
pop
arpl
inc
add
dec
add
mov
cmc
shrb
jp
movsb
jb
jecxz
mov
decl
loope
out
push
insb
mov
inc
hlt
out
mov
pop
push
loopne
std
or
or
or
addr16
cld
jg
mov
dec
outsl
pop
sub
pop
stc
aam
mov
jg
outsl
movsb
push
lods
push
cmp
popl
add
enter
outsl
pop
and
push
and
aam
aam
push
das
je
clc
out
add
es
cmp
add
inc
jg
pop
into
mov
enter
repnz
or
xchg
outsl
icebp
or
test
add
sbb
cs
stos
lcall
fs
fildl
mov
mov
call
jg
cmpsl
xor
cmp
ss
dec
lahf
les
clc
fbstp
cltd
mov
xchg
jecxz
dec
lret
pop
push
mov
push
out
xchg
fidivrs
popf
xchg
nop
mov
stos
lods
lock
xchg
inc
push
sti
ss
dec
imul
mov
bound
push
pop
fdivrl
cmp
mov
xor
jo
xchg
sbbb
pop
mov
add
jecxz
cmpsb
insb
xchg
and
and
scas
push
mov
inc
int3
test
das
jle
dec
inc
push
std
and
call
test
mov
inc
addr16
out
pop
sub
inc
mov
outsl
mov
cmpb
imulb
dec
dec
repz
mov
mov
mov
sub
mov
out
sub
je
loop
mov
subw
pusha
xchg
fildll
push
pop
popw
ljmp
and
in
xchg
dec
lahf
mov
int
movsb
adc
test
das
inc
cmc
inc
adcl
and
insl
std
shll
mov
aad
sar
cs
jl
and
xchg
dec
jnp
or
mov
or
insl
insb
scas
adc
cmp
xchg
ljmp
sub
ss
cmp
rcl
int
mov
ffree
xor
sbb
and
dec
jo
rcl
pop
pushf
push
cltd
fiaddl
mov
jns
shl
test
dec
lret
mov
dec
in
and
imul
test
pop
pop
js
loope
pushf
jne
push
out
push
fildll
mov
cmpsb
add
push
mov
test
inc
clc
mov
mov
or
imul
mov
addr16
js
cmp
pop
sub
test
lcall
shrb
mov
aad
pop
lea
stc
cld
daa
add
sub
mov
add
jecxz
outsl
fnstsw
pop
icebp
sbb
or
jns
pushf
xchg
mov
mov
imul
cltd
test
ret
scas
mov
and
mov
jmp
or
pushf
or
fdivrs
repnz
inc
into
cmp
movsl
ffreep
jg
ret
cmp
or
mov
cmp
shl
mov
mov
mov
sahf
sbb
lahf
add
jne
mov
dec
es
push
mov
in
into
inc
inc
je
lods
bound
mov
outsl
mov
lods
xor
dec
pop
inc
mov
inc
and
fldcw
mov
inc
jne
sbbb
dec
pop
stos
fisttps
dec
and
jl
mov
xchg
stc
sarl
dec
mov
xchg
mov
inc
sbb
mov
call
rcrb
or
xchg
add
add
adc
insb
aaa
fcoml
pop
push
popa
cmp
imul
xor
sub
mov
lahf
into
aad
in
inc
add
popa
stos
or
xor
mov
mov
out
xchg
add
add
stc
jb
push
jmp
fs
add
adc
add
jnp
stos
mov
rcl
push
inc
addr16
dec
incb
lds
and
add
je
shlb
inc
fnclex
push
xor
jb
orl
mov
mov
jne
inc
js
ljmp
xor
inc
ljmp
adc
adc
mov
test
shrb
scas
mov
dec
dec
aam
call
add
add
dec
in
push
icebp
inc
sub
fldt
xor
mov
add
dec
into
aad
inc
xchg
jne
sahf
push
hlt
addl
ret
and
add
mov
pop
mov
adc
add
adc
call
push
dec
adc
fcoms
dec
call
xor
data16
inc
xor
scas
or
sub
xchg
push
jmp
inc
ds
cmp
test
mov
inc
dec
inc
jno
mov
xor
or
rolb
test
sbb
bound
xor
and
mov
adc
inc
push
and
ss
vandps
pop
push
hlt
adcl
ds
sub
mov
dec
addb
in
ljmp
mov
xor
and
push
sbb
sub
add
nop
xchg
call
mov
test
out
inc
aaa
retw
or
ja
dec
hlt
add
js
pushf
mov
cmp
mov
mov
movsb
addr16
xchg
rcr
adc
dec
mov
nop
push
loope
js
test
loop
enter
mov
in
xchg
cmp
jbe
cmc
mov
push
inc
outsb
push
xchg
loop
mov
icebp
push
movsl
inc
lock
add
insb
jecxz
call
adc
xor
sub
je
fdivrl
xor
pop
mov
shll
cld
jns
cwtl
das
or
xor
add
clc
pop
ret
push
xchg
dec
mov
lcall
inc
idiv
xor
fildl
xchg
test
idivl
push
xor
sub
rclb
push
fbld
cmp
add
negb
adc
ljmp
push
popa
push
jbe
xor
pop
inc
or
je
or
mov
addb
repz
dec
test
xchg
inc
jge
xor
test
jp
icebp
js
stos
mov
mov
lea
cmp
dec
mov
mov
rclb
das
daa
pusha
fxch
inc
mov
sbb
dec
mov
cmc
aaa
adc
xchg
mov
jne
or
add
add
push
das
mov
inc
cld
inc
push
daa
inc
popf
sbb
mov
in
test
iret
add
adc
cmpsl
jge
or
and
imul
add
lcall
jmp
test
cld
dec
ja
insl
pusha
cmp
jb
adc
scas
faddl
push
push
arpl
adc
sbb
jl
adc
xchg
xchg
cld
fiaddl
and
dec
inc
cmpl
mov
ss
jl
ret
loop
mov
cltd
mov
in
sub
ja
dec
jl
dec
xchg
sub
rcrb
ret
shlb
jne
push
jle
out
dec
cmpxchg
fnstcw
dec
jb
xlat
adc
subb
dec
rcll
test
dec
adc
andb
and
add
cmpb
ja
mov
cltd
stos
or
adc
mov
mov
inc
je
push
inc
std
mov
push
je
insb
xchg
mov
mov
sub
add
sbb
hlt
lret
cmc
or
inc
roll
mov
adc
sub
inc
pop
or
mov
out
xchg
cmovno
sbb
adc
ss
js
dec
lods
mov
in
cmp
add
aam
or
repnz
test
test
jl
adc
popa
jb
mov
out
sti
sbb
sbb
subb
push
aad
add
aad
popf
add
pop
ficomps
jge
mov
sbb
pop
sbb
stos
roll
notl
test
or
adcb
add
cmp
push
adc
mov
add
nop
mov
insb
add
jno
cltd
cmp
mov
add
xchg
ss
data16
add
sub
mov
ret
dec
andb
fstps
mov
mov
fcoms
int
ja
repz
adc
das
ret
add
in
add
ficompl
or
pop
shl
mov
test
ds
shl
cmpsb
lahf
movsl
pop
inc
cld
or
add
inc
insb
int3
jmp
sbb
jle
dec
mov
dec
sbb
in
pop
add
or
int
icebp
bound
jle
sbb
mov
xor
scas
lods
sub
mov
adc
pop
sbb
ss
loopne
cltd
int3
mov
fwait
loopne
enter
test
hlt
sti
imul
jle
cmpsl
adcb
add
ja
stos
sub
cld
jl
jl
rcl
int3
mov
and
lgs
pushl
enter
add
inc
in
mov
loop
jbe
cmp
xchg
inc
insl
mov
cmpl
mov
dec
je
lea
or
inc
mov
sbb
daa
inc
jne
jmp
adc
mov
sbb
rolb
inc
fisubrs
int3
xchg
cmc
xchg
ja
push
add
push
inc
daa
xchg
mov
inc
adc
popa
aaa
cli
mov
adc
sbb
pop
out
stos
bound
call
jns
call
push
push
scas
cld
mov
add
fs
and
mov
push
lcall
pusha
mov
call
aas
add
add
mov
call
xor
or
or
push
inc
cld
test
add
mov
fbld
das
cld
dec
jb
adc
inc
pop
and
adc
mov
clc
sbb
dec
pop
inc
jnp
pop
add
or
ret
stos
dec
flds
and
addl
mov
es
jmp
and
out
add
stos
or
jne
call
int3
dec
into
adc
jecxz
add
aas
mov
sub
addb
in
adc
adc
test
or
inc
scas
test
sub
dec
or
mov
push
xor
cmp
push
push
pop
shrb
push
inc
sub
enter
mov
add
and
sbb
jl
out
das
aam
adc
adc
addb
enter
lahf
gs
out
push
cmpsb
cld
fdivr
cmp
push
icebp
decb
test
jns
dec
inc
sub
cmp
nop
cmc
inc
mov
in
js
sub
enter
hlt
stc
fnstsw
xchg
sub
andb
test
daa
inc
jo
ror
idivl
andb
ja
inc
out
mov
imul
sbb
icebp
test
jb
inc
cmovb
sbb
push
shrl
lret
mov
fcmove
inc
daa
aam
adc
pop
ja
cmp
fcompl
add
push
push
push
push
gs
in
mov
shlb
add
cmp
adc
insl
push
popa
mov
sti
push
xchg
sub
cmc
add
jne
jne
mov
orb
inc
lds
mov
or
mov
loopne
adcl
inc
test
add
and
aad
adc
cmpl
push
mov
ljmp
sti
pop
mov
test
mov
and
add
ja
dec
sub
es
std
push
push
xor
jb
push
jne
lds
sub
and
cld
fwait
add
lods
loopne
lock
mov
inc
mov
out
ljmp
les
imul
in
sbb
aad
push
cmp
iret
mov
dec
sbb
fldenv
add
jo
sub
fcomp
sbb
add
dec
add
test
test
icebp
fmuls
leave
add
or
loopne
mov
fsubs
cmp
dec
mov
inc
sti
ljmp
pop
pop
pop
addr16
xchg
out
push
decb
mov
rol
add
xchg
test
test
sub
movsl
pusha
inc
mov
cld
out
addb
xchg
jl
xchg
into
mov
dec
or
lret
or
inc
cmpb
pusha
shrb
addr16
jle
mov
jp
icebp
dec
add
test
xor
pusha
clc
cmp
cmp
aaa
mov
or
push
cmp
orl
adc
rorb
data16
test
outsb
push
xchg
fsubr
add
inc
iret
pusha
inc
sti
ljmp
adc
addl
imull
aas
xchg
ja
push
rorb
sbb
add
ljmp
or
mov
cmp
add
sbb
fldcw
leave
xor
bound
adc
push
stc
mov
and
pushl
nop
xor
punpckhdq
pop
xchg
add
stos
mov
mov
mov
js
std
adcb
add
ret
cs
cmpsb
andb
daa
sub
and
inc
mov
sbb
dec
dec
imulb
shlb
xchg
cmp
sarb
mov
cmpsb
test
rcr
jb
xchg
fsubl
cmp
orl
xchg
add
add
pop
xlat
fbld
push
cmpsb
and
dec
fdivrl
mov
mov
xchg
arpl
fildl
jmp
or
std
pop
pop
insb
mov
cmp
adc
mov
in
in
fiaddl
sarb
mov
jp
lods
dec
inc
fildll
faddl
gs
sti
pushf
lods
jo
ficomps
pop
push
clc
fistpl
xlat
popa
rcrl
pop
or
pop
add
dec
repz
negl
xlat
pop
add
and
jno
mov
xchg
or
mov
rcr
xchg
outsb
push
js
pop
rclb
daa
pop
and
mov
push
mov
test
inc
sbb
vpsubsb
cld
pop
bound
inc
mov
jb
lret
xor
mov
add
nop
pop
lods
mov
test
jno
loop
das
or
xor
mov
ficoml
pop
cmc
in
inc
jecxz
xchg
adc
cmpsb
lods
ja
push
or
or
ret
repnz
test
or
or
jo
lcall
dec
js
mov
push
lock
sub
mov
pop
aad
scas
add
lret
mov
imul
lret
add
sbbb
pop
test
lret
adc
add
push
shl
push
hlt
cmc
imul
push
bound
fwait
mov
out
mov
dec
call
dec
adc
cwtl
xor
dec
pop
sub
push
sbb
inc
or
dec
popa
into
sbbb
adc
cmp
push
inc
mov
fnstcw
cmp
or
cld
mov
or
mov
or
and
stc
add
adc
xchg
xor
push
mov
or
es
je
adc
xchg
mov
outsb
outsb
adc
je
cmp
push
mov
sbb
cld
pop
ret
ljmp
sbb
fildl
and
mov
sub
inc
sub
lods
sbbb
inc
push
jle
and
pop
shrl
clc
iret
shll
adc
adc
inc
jecxz
int
mov
inc
or
bound
shll
add
mov
test
mov
adc
jnp
dec
stos
cmp
adc
addr16
hlt
lcall
stos
push
nop
mov
fmuls
pop
mov
scas
add
je
aaa
mov
add
loopne
inc
xor
sub
rcrb
xchg
xchg
stos
sbb
mov
pop
sub
inc
sbb
notb
xor
into
int3
or
pop
xor
loope
repnz
jae
popa
sub
fsubr
stos
lahf
inc
lods
fisubl
dec
sub
mov
out
jmp
cmovo
xor
xchg
sbb
push
and
xchg
stc
jge
push
movsb
hlt
jae
and
ret
and
and
ljmp
xchg
push
mov
pop
test
sub
adc
xor
sbb
sub
jmp
ja
jp
mul
ret
sbb
imul
jae
inc
es
jg
cmp
mov
scas
fs
adc
cltd
xchg
mov
sbb
dec
cs
or
add
mov
push
in
and
push
js
les
lea
and
or
stos
inc
fcompl
jl
rclb
inc
sub
mov
orl
aaa
sbb
mov
cld
push
mull
push
jae
push
cld
lods
imul
or
pop
pop
add
loopne
pop
lahf
roll
xor
gs
insb
fldt
add
adc
rorl
and
jns
mov
jb
mov
mov
sub
test
adc
inc
dec
adc
fisttpl
shlb
push
and
mov
push
jae
add
push
subl
shr
mov
popf
test
shll
or
lret
lods
aaa
dec
add
js
fistpll
add
add
push
dec
adc
arpl
sti
fnsave
adc
push
pop
xor
and
loope
mov
add
inc
mov
maskmovq
xchg
sub
inc
into
pop
add
inc
adc
out
jge
adc
mov
push
jo
jb
inc
adc
les
push
std
pop
fwait
aad
pop
inc
popa
dec
aad
mov
or
pop
sbb
sub
mov
inc
pop
pop
loopne
or
and
xchg
jne
fldcw
push
sti
scas
add
scas
jo
add
push
inc
insl
xchg
add
and
mov
adc
lret
cmp
cmp
or
test
mov
hlt
push
cld
inc
jmp
in
sub
and
jl
aaa
in
adc
dec
sbb
mov
aam
xor
rcrl
popa
imul
push
lods
dec
inc
hlt
mov
movsb
sub
adc
pop
sub
push
nop
dec
mov
mov
adc
loop
xlat
cld
add
adc
sub
fsubs
and
jl
icebp
mov
push
inc
mov
push
jge
lds
cmp
sub
cmp
adc
sbb
pop
jae
adc
in
lcall
fistl
addl
bound
rclb
mov
dec
add
clc
xor
shlb
pop
push
push
lds
incl
mov
xor
mov
pop
lds
rcll
adc
and
int3
lahf
cmc
out
add
add
enter
sub
je
or
ljmp
mov
sub
mov
pop
rol
mov
xorl
notb
pop
adc
push
dec
push
fwait
inc
add
nop
loopne
js
mov
mov
sub
rolb
push
dec
inc
mov
and
adc
jge
pop
add
imull
bound
xchg
and
dec
xchg
rcll
mov
pop
or
push
icebp
out
out
je
imul
inc
adc
mov
push
inc
mov
or
mov
inc
dec
jbe
dec
adc
sbb
sbbb
add
cmp
mov
push
pop
mov
mov
push
out
mov
and
adc
cmp
adc
dec
les
mov
in
enter
and
out
pop
ljmp
lods
out
je
enter
in
sbb
in
and
mov
push
add
inc
cmc
ret
lret
std
incl
push
incb
sbb
sub
ljmp
andb
js
xchg
and
cltd
inc
dec
out
jmp
push
stos
bound
sbb
or
test
sub
pop
popf
fcoms
mov
fimull
daa
js
mov
ds
mov
mov
rcll
inc
add
mov
push
push
add
mov
xchg
mov
lret
test
push
cmp
imul
xchg
and
rcl
inc
lock
or
outsl
add
fisttps
imul
das
mov
mov
into
push
popf
sbb
push
je
stos
movsb
and
inc
fcmovu
jge
in
idivb
clc
adc
sbb
add
sbbb
push
lods
cmp
mov
mov
stos
les
das
push
cmp
sub
in
sbb
dec
add
clc
jmp
or
adc
lock
xor
insb
out
or
std
pop
jnp
and
loope
ljmp
xchg
mov
pop
fwait
push
and
test
pop
sub
adc
dec
jl
shll
xor
lods
cmc
adc
mov
stos
adc
or
xor
xor
int3
sbbl
aam
cmp
add
jbe
mov
rcrl
xor
js
inc
fisttpll
add
imul
xor
in
add
jbe
adc
fisubrs
aad
rorl
mov
cmp
xor
push
mov
into
jge
dec
xor
xlat
mov
jbe
inc
adc
cmp
add
mov
repnz
lods
mov
mov
loope
insl
test
pop
cmp
sahf
jnp
ljmp
pusha
cmp
std
pop
fadds
sbb
lods
mov
xchg
mov
or
push
jbe
mov
mov
jp
add
pushf
ret
or
lods
inc
mov
lret
notl
cmc
and
loop
ret
sar
and
xchg
adc
fs
decl
out
wrmsr
adcl
insl
push
sub
cli
shll
and
ret
outsl
sub
mov
jmp
add
add
mov
jo
jo
arpl
jb
rorl
push
jno
gs
je
insb
jne
inc
pop
sub
jne
mov
cmp
xor
call
or
inc
aad
adc
aaa
pop
mov
into
jecxz
or
sbb
push
dec
repnz
aad
sbb
rcrb
jge
or
int3
xor
xor
xlat
mov
adc
add
or
and
inc
cmp
in
sbb
rclb
adc
outsl
add
adc
test
nop
pop
jle
out
and
pop
loopne
cs
add
std
fiadds
mov
int
dec
xchg
inc
or
imul
js
adc
loopne
pop
sti
out
mov
mov
movsl
test
and
or
in
xchg
add
cmpl
pop
pop
add
js
sub
pop
les
ds
lods
aas
xchg
arpl
push
pop
rol
lock
pop
adc
cmpsb
and
cmpsb
inc
fists
insb
and
ret
mov
and
adc
or
or
add
mov
clc
fnsave
mov
outsl
les
push
loope
jbe
ret
sahf
stc
jecxz
xchg
sbb
pushf
clc
adcb
adc
jno
dec
jg
dec
mov
data16
push
movsl
fisubrs
push
push
inc
sub
xchg
outsl
jl
fucomp
gs
dec
cmp
repnz
add
shll
ljmp
mov
add
popa
bound
mov
cmc
sub
add
xchg
clc
ljmp
dec
ret
imul
pop
inc
addr16
mov
push
xor
add
addr16
int
sbb
loopne
cmp
fcoml
orb
insb
xor
inc
and
sbb
test
arpl
jmp
push
push
adc
stos
andl
sbb
lock
ljmp
pop
push
add
cwtl
add
xchg
dec
lds
enter
push
adc
xor
aam
inc
inc
push
cld
popa
pop
hlt
push
sahf
lcall
ret
or
adc
jle
orl
adc
sbb
add
sub
leave
in
aad
stos
sub
and
sahf
mov
sbb
cmp
loop
adc
inc
or
cmpsb
or
pop
inc
test
xchg
pop
and
mov
mov
mov
cmp
add
sbb
insl
push
dec
cmp
mov
ja
cmpsl
push
inc
andb
fisubl
xor
mov
push
hlt
pop
ds
out
mov
and
orb
arpl
push
pop
cmp
push
adc
in
and
lock
or
es
pop
mov
shl
ret
inc
lds
push
cmc
add
cld
or
fildl
sbb
adc
inc
and
test
add
cmp
in
push
addr16
push
ljmp
out
ret
mov
inc
mov
cwtl
add
sub
pop
daa
lret
loopne
fdiv
out
adc
jno
in
bnd
and
mov
arpl
inc
mov
ja
push
sbb
enter
push
call
stos
jbe
cmp
push
push
mov
fbstp
push
adc
loop
xor
adc
xorb
sbbb
cld
rcl
jecxz
inc
pop
cld
sbb
adc
push
ljmp
inc
inc
pop
sub
aas
and
push
mov
inc
push
sbb
add
mov
add
add
adc
nop
add
mov
int3
aas
mov
push
cmp
add
fcompl
push
pop
jge
or
nop
or
mov
imul
jecxz
popf
add
fdiv
mov
adc
ret
mov
nop
sbb
adc
pusha
pop
fwait
adc
adc
test
or
pop
fdivl
xor
mov
push
sbb
nop
into
test
lret
push
test
dec
xchg
loope
add
sbb
rclb
lea
jns
jae
mov
int
push
sub
iret
pop
add
movsl
mov
sub
stos
inc
mov
jp
add
and
xor
dec
fstps
mov
shr
xor
pop
sub
icebp
into
add
adc
push
arpl
inc
addl
mov
add
jae
jno
rorb
es
aad
mov
mov
adc
addr16
lods
xor
cltd
mov
cmp
aaa
adc
add
into
adc
pusha
or
cltd
xchg
andb
bound
inc
fidivs
pop
sbb
or
outsb
test
stos
dec
mov
les
or
pop
pushl
inc
aam
roll
add
int3
movsl
outsl
pop
xor
mov
xchg
push
mov
subb
unpckhps
add
cmp
jp
mull
in
imul
and
hlt
or
cmpl
ret
pop
cmp
sub
add
icebp
fwait
jge
and
push
imull
xchg
sbb
adc
pop
jge
clc
push
addr16
lret
push
or
add
mov
inc
out
pop
cmp
adc
mov
aam
push
aad
mov
inc
fisubl
test
rcrl
out
inc
adc
insl
push
jge
jno
icebp
add
adcl
cli
addb
in
loopne
sub
push
jg
inc
pop
dec
sbb
rolb
dec
loopne
pop
and
cld
bound
test
mov
icebp
test
mov
int
inc
cmpsb
addb
aam
mov
and
leave
mov
inc
adc
lcall
cmp
adc
sarb
stos
mov
mov
cli
sub
mov
push
xchg
pop
orb
insb
sbb
mov
push
adc
add
icebp
test
loop
pop
hlt
fsubrp
mov
push
outsl
lret
xchg
xchg
sub
ja
pop
mov
nop
xchg
dec
hlt
xchg
sub
lods
in
pop
dec
cltd
jno
pop
jp
out
adcb
mov
jl
sbb
in
movsb
inc
push
sbb
mov
pop
ficoml
adc
adc
mov
fwait
lea
retw
jl
shrb
inc
add
inc
add
dec
cli
mov
cli
mov
pushl
lret
iret
cmpsb
mov
push
cld
decl
popa
loop
pop
or
loopne
repz
aad
fsubrs
cli
dec
mov
jae
movsl
or
inc
test
sbb
call
shll
cmp
and
mov
cli
fidivs
mov
jo
mov
jmp
movsl
incl
test
and
cmp
mov
sti
int
cmp
add
pop
in
mov
lods
mov
fld
add
add
mov
sbb
add
push
dec
inc
sbbb
std
jmp
movsl
mov
test
sub
ljmp
push
push
shll
lcall
popa
movsl
sahf
test
das
add
subb
lret
scas
sbb
mov
pusha
dec
mov
faddl
mov
lods
daa
inc
pmaxub
es
pop
jp
lock
ret
mov
cmp
mov
cmp
ljmp
rcrb
das
adc
addb
shll
mov
xor
shlb
and
inc
mov
pop
cmp
inc
sub
pop
mov
fistl
and
or
lahf
fildll
outsl
stos
enter
and
imul
test
jge
stos
push
std
lcall
outsl
das
test
jg
push
dec
sub
dec
cmpsl
lret
mov
sbb
pushl
incl
dec
pop
mov
mov
cmp
lahf
mov
and
xchg
popa
inc
sti
jmp
cwtl
ud2
popa
inc
adc
xor
mov
mov
test
sti
test
insl
xchg
add
mov
xor
in
pop
push
inc
adc
push
push
xchg
arpl
in
dec
sti
cwtl
pop
in
inc
shlb
inc
dec
cmp
fisttpll
fs
sub
ljmp
jno
movb
aam
push
cmpsl
xlat
sbb
roll
dec
pusha
mov
and
fildll
clc
in
push
add
fcmovnbe
jmp
cmpsl
repz
and
sub
sub
daa
adc
mov
xchg
cs
pop
int
push
jno
fwait
and
addr16
ljmp
imul
fs
hlt
outsl
rolb
lods
mov
les
sub
dec
dec
dec
mov
je
outsl
cld
insl
test
push
pop
subb
mov
std
cmpsl
add
dec
scas
xchg
mov
mov
in
xchg
cmp
cmc
add
fidivl
cmp
push
inc
push
add
sbb
push
dec
insb
adc
pop
xchg
and
mov
xchg
fbld
sti
ds
sub
ret
shll
add
or
ljmp
xor
loope
gs
pop
testl
mov
cmp
mov
push
push
mov
or
xlat
mov
mov
dec
clc
sbb
fcomps
rolb
cmpsb
je
out
lock
adc
pop
inc
pop
outsl
ficoms
adc
mov
cltd
test
loope
mov
and
gs
inc
add
cmp
inc
jg
mov
adc
jmp
fwait
loope
cmpsb
orb
xchg
adc
mov
and
mov
pushaw
or
lahf
xorb
ljmp
mov
xchg
jnp
adc
and
inc
pop
lock
sub
aam
imul
cwtl
pop
or
push
bt
in
sub
out
sbb
xchg
sbb
cli
xchg
adc
in
cmpsl
in
andb
call
lcall
mov
xchg
mov
dec
add
in
inc
push
sbb
inc
lods
icebp
in
xchg
and
and
adc
insl
aam
loopne
xchg
repz
add
fstl
add
out
push
fimull
dec
and
mov
fidivl
loop
adc
add
mov
stos
adc
seta
movsl
pop
push
jo
jae
add
add
inc
adc
jl
push
in
into
aam
outsb
mov
imul
unpckhps
pop
sub
loop
out
add
ja
adc
and
push
flds
rcl
lock
int
nop
test
and
jl
in
xor
add
and
push
mov
adc
roll
adc
mov
bound
out
shlb
inc
jne
cld
into
push
adc
sbb
push
add
rcr
cld
test
adc
push
adc
repnz
adc
popl
and
push
and
loopne
inc
and
lock
popa
adc
adc
rolb
adcb
jbe
adc
dec
add
xchg
cmp
sbb
jnp
xor
add
sbb
xchg
rolb
jo
and
pop
dec
push
mov
pushf
jmp
mov
pop
xchg
add
cmpsb
popf
dec
inc
cmp
sbb
movsb
pop
movsb
and
sbb
out
pop
xor
movsl
push
xor
push
aas
jmp
inc
or
push
sahf
popf
int
add
outsl
shl
fiaddl
dec
cmp
lds
cmpsb
add
mov
je
pop
loopne
mov
push
push
cmp
add
loopne
or
xor
xor
sarb
nop
es
pop
in
pop
out
fisttpll
stos
sbbb
movl
inc
pop
mov
mov
mov
negl
or
mov
cmc
mov
les
push
daa
setne
mov
add
test
push
dec
dec
inc
mov
ret
gs
add
fbstp
pop
xor
lea
cmp
xchg
adc
stos
ja
sbb
and
xor
fs
or
sbb
test
jmp
pop
test
mov
out
mov
push
cmc
mov
and
rcl
data16
andb
push
sbb
and
inc
loope
xchg
popa
adc
out
add
rorb
xchg
add
sti
fnsave
cli
repnz
or
push
pop
cmp
rorb
dec
pop
outsl
cli
pop
jle
add
test
add
fildl
fsub
inc
aaa
inc
cmpsb
test
fadds
pusha
test
loope
fildl
idivl
pop
loop
jg
lret
into
cmpsb
push
ss
or
and
ljmp
sub
repz
lea
xor
jno
and
mov
adc
in
cmc
push
inc
mov
insl
sbb
loopne
cli
or
pusha
addb
add
mov
decl
inc
cmpsb
insb
xchg
add
dec
mov
icebp
aam
bound
mov
in
ficomps
cmp
jg
mov
icebp
sub
std
inc
pusha
dec
mov
adc
inc
lock
jo
push
lret
cmp
pop
push
or
cmp
push
lea
jg
sub
add
test
sbb
push
mov
sbb
push
inc
push
sub
push
mov
mov
inc
test
jg
lea
add
xchg
mov
sbb
pop
icebp
adc
mov
fcomps
and
mov
and
pop
fdivs
inc
fcoml
sbbb
pop
push
ss
sub
bound
xchg
ss
stos
push
fcomp
mov
pop
outsl
arpl
popf
xor
inc
push
ja
or
cltd
leave
push
mov
fimull
and
jno
je
dec
mov
sub
subl
cltd
xchg
cli
jmp
outsl
fistpll
cld
mov
dec
cwtl
xchg
xchg
inc
dec
xor
push
sub
test
loope
sub
xchg
push
mov
decl
adc
imul
test
std
lret
les
aaa
js
mov
adc
scas
sahf
hlt
pop
jne
and
mov
call
in
mov
xadd
in
inc
mov
mov
mov
jb
cmp
ljmp
mov
xchg
in
dec
mov
inc
js
in
test
mov
jle
pop
push
inc
and
pop
icebp
aam
mov
subl
sbb
adcl
test
mov
aas
cmpsl
out
outsl
or
fsubrp
sbb
lds
jno
popa
inc
pop
cmp
out
fnsave
aam
dec
adc
or
imul
inc
xor
sbb
loop
jl
jmp
stos
jmp
test
lret
faddp
pop
fwait
shrl
test
lock
mov
add
mov
add
pusha
ljmp
shrb
cmp
sub
push
lock
jo
cmp
inc
xor
push
sti
decl
mov
and
mov
xchg
cmp
out
or
push
int3
mov
sub
loope
dec
push
sbb
jecxz
inc
loope
ja
jle
repz
fcoml
and
or
ret
push
out
inc
mov
jg
fstpt
js
add
and
adc
xor
mov
aam
dec
pop
cmp
xor
fsubl
cmpsb
out
mov
lret
sub
adc
add
jo
xor
adc
shr
sbb
and
dec
lock
outsl
fwait
pop
lds
mov
test
mov
mov
nop
jmp
inc
and
or
mov
jl
add
xchg
mov
rol
outsl
fsubr
sbb
fs
adcl
xadd
jns
xchg
mov
sbb
mov
sbb
dec
call
arpl
jle
xchg
jo
mov
dec
and
lea
popa
pusha
rol
in
scas
push
push
js
lock
sbb
lods
movsl
or
aam
push
or
arpl
in
xchg
jp
mov
push
and
daa
data16
loope
jecxz
popa
movups
daa
pop
popf
mov
roll
iret
aaa
jo
imul
mov
mov
ret
inc
sub
in
mov
js
mov
call
scas
pop
mov
hlt
sub
cmp
out
enter
push
mov
scas
jo
repnz
insl
jmp
mov
add
sub
pusha
sub
push
and
test
mov
cmp
mov
aad
aaa
sub
ret
lcall
cmp
mov
mov
jae
mov
cmp
divb
mov
mov
jge
mov
test
sbb
pop
xor
inc
push
lods
lret
jbe
pop
fstpt
enter
xor
mov
sbb
cmp
mov
fndisi(8087
sbb
push
scas
popa
ds
xor
add
fidivrl
and
or
dec
pop
rcl
fldt
or
ret
lea
push
into
push
js
pop
ljmp
adc
or
enter
inc
dec
jg
xchg
scas
xchg
aam
xor
and
insl
jl
mov
sub
testl
int
and
dec
shl
sahf
loopne
stos
loopne
scas
hlt
push
push
cmpsl
adc
fistpll
sub
sub
faddl
mov
sti
scas
xchg
movsl
ret
arpl
ja
fnstcw
dec
mov
mov
orb
insb
mov
mov
ljmp
pop
xor
aad
aas
dec
aaa
ljmp
mov
test
mov
les
cmpl
xor
inc
in
outsb
hlt
out
fs
rorl
pop
mov
dec
sub
push
cli
inc
jae
dec
sbbb
or
in
idivb
and
pop
stc
out
pop
pop
clc
and
cmpsl
cmp
lods
pop
xchg
lock
and
cli
daa
jo
inc
es
call
mov
push
sub
cwtl
and
nop
lock
add
sar
lods
lods
mov
jo
jg
bound
or
mov
mov
push
mov
adc
xchg
pop
subb
sahf
push
mov
mov
stos
loope
mov
imulb
lock
int
test
mov
add
cmp
nop
je
dec
ljmp
sti
mov
aad
orb
aaa
add
mov
nop
cli
or
hlt
daa
sub
push
shll
lods
mov
pop
sub
sbb
jne
lock
mov
inc
xchg
ret
xchg
stos
sub
lock
popa
adc
inc
cmp
sbb
push
sarb
inc
adc
jp
push
jne
pop
jl
aam
arpl
pushf
jae
das
ljmp
mov
sub
lcall
rolb
dec
clc
jo
addb
push
adc
mov
shll
jle
popa
push
les
add
es
inc
nop
jno
add
pop
dec
dec
push
rol
inc
pop
jne
or
add
dec
add
mov
push
loopne
pop
pop
mov
scas
inc
je
test
add
xchg
jmp
rolb
sbb
cmp
push
pushf
sbb
aam
inc
jnp
movsl
loop
add
aam
sub
leave
inc
fisttps
add
je
jno
aam
dec
lock
xchg
push
sub
out
pop
rcl
push
adc
sbbb
sub
add
shlb
adc
pop
shl
adc
mov
jbe
inc
xor
add
push
cld
and
sub
mov
aas
mov
es
sub
mov
in
add
and
cli
push
xor
inc
mov
xchg
orl
filds
aam
stos
cmp
sbb
call
mov
mov
inc
xchg
test
push
cmp
inc
out
push
cli
xchg
test
jl
adc
dec
lock
mov
int3
call
mov
mov
xchg
stc
cld
popa
pushf
bound
fwait
repnz
and
call
xchg
xchg
or
nop
mov
mov
pop
and
ret
je
sub
shr
mov
test
fcomp
push
push
shrb
push
xchg
ss
popf
pop
js
and
inc
pusha
inc
stos
jp
or
scas
cli
test
push
repz
mov
or
sub
test
and
loop
mov
pop
test
sbb
sub
cltd
mov
dec
mov
test
stos
std
nop
or
and
push
jno
nop
mov
push
xchg
pop
por
xor
or
jle
jp
jb
out
insl
sbb
add
scas
cmp
jo
repz
je
mov
call
dec
push
sbb
in
subb
add
mov
popa
or
std
hlt
push
aas
lods
aas
notl
inc
xor
push
xchg
push
sbb
jo
fists
gs
push
pop
loopne
mov
add
fidivrl
adc
jo
jp
mov
mov
mov
test
cmp
pop
sahf
pop
bound
test
or
adc
test
add
adc
and
ss
pop
lret
add
in
sbb
mov
lret
adc
mov
lahf
mov
ror
lods
das
push
sar
loop
push
aas
subl
mov
iret
jp
mov
cmp
or
pop
ror
mov
and
cmp
cld
add
sbb
test
sbb
push
lock
iret
jge
or
push
ss
or
cmp
add
shl
aad
outsl
jno
add
sbb
inc
popf
call
inc
lds
jg
pop
and
test
lds
xchg
sahf
repnz
pop
mov
mov
shlb
test
aas
fildll
add
lahf
mov
ret
inc
inc
inc
mov
mov
xor
add
stos
sbb
or
decl
mov
fptan
scas
mov
fxch
rol
das
adc
or
pop
aas
cmp
adc
xor
adc
mov
mov
fcomps
mov
add
test
cmp
sbb
xor
bsf
loop
push
insl
stos
lods
or
xchg
xor
mov
push
xorl
lds
jno
dec
popa
pop
lea
std
mov
push
stos
xor
dec
std
push
cmp
add
sbb
jecxz
ss
pop
loopne
add
xchg
insl
addl
push
sbb
fidivl
rclb
mov
fistpll
jp
and
inc
daa
sub
mov
es
ja
xchg
and
xchg
int3
dec
test
xchg
andb
push
cwtl
rolb
insb
fbld
dec
xchg
inc
pusha
imul
cmp
push
in
testb
ja
in
push
mov
js
pop
xchg
mov
mov
repz
cli
fstl
and
mov
sub
push
mov
loope
clc
pushf
popf
mov
mov
add
cmpsl
mov
test
je
movsl
lahf
insl
pop
in
lea
pop
ret
mov
xchg
dec
xor
dec
hlt
adc
fists
sti
add
xchg
jge
push
mov
xchg
push
mov
lret
mov
sub
sarl
cli
sbb
mov
rcl
add
lret
popa
mov
push
stos
rorl
mov
arpl
inc
add
and
and
iret
imul
mov
jl
mov
mov
mov
test
dec
insl
pusha
rcrl
decb
shlb
adc
xor
adc
sub
int3
inc
cmp
mov
jno
mov
lret
or
ret
in
dec
inc
sub
add
loope
popf
xlat
sbb
dec
add
push
and
dec
stos
aaa
add
mov
mov
std
mov
out
sub
mov
mov
lahf
or
xor
std
inc
mov
push
or
mov
push
mov
push
inc
pop
std
mov
or
and
cld
cmpsl
add
rorb
xor
stos
or
arpl
jno
ret
mov
lods
sub
push
sub
jo
les
in
cmp
pop
or
xchg
into
adc
xchg
adc
repz
inc
adc
and
xchg
idivb
inc
stos
push
push
push
or
test
lcall
push
and
gs
test
push
xor
mov
in
ljmp
jle
or
adc
js
mov
pop
inc
or
shl
pop
inc
inc
cmp
jp
lds
sub
inc
and
aad
ss
loopne
adc
stos
fucomi
mov
in
xorl
xchg
call
popa
push
xchg
test
mov
or
hlt
push
mov
inc
mov
mov
dec
enter
sub
sbb
adc
les
fstl
xor
mov
sub
cmc
pop
fwait
nop
sub
mov
mov
sub
inc
lock
nop
neg
lret
add
lds
xchg
in
sbb
sbb
or
es
xor
lea
cld
cmpsl
inc
add
jp
js
aaa
push
stc
fsubr
sbb
daa
les
jp
jo
cmpl
jl
mov
inc
dec
jo
fmuls
xlat
push
aaa
sti
mov
add
incl
add
rolb
jge
icebp
add
mov
loope
add
mov
mov
adc
push
cmpsb
movsl
frstor
lods
mov
xor
sub
and
xor
es
mov
inc
dec
aaa
pop
mov
fcomps
std
mov
dec
cmp
and
orl
cmp
xor
rcrl
xchg
or
push
jo
in
neg
loopne
mov
jmp
mov
cmpsl
ljmp
push
inc
jb
sub
iret
mov
inc
out
mov
sub
pop
call
add
and
lods
push
or
in
shll
sub
stos
mov
mov
sbb
sub
or
sbb
jge
vmread
sbb
ds
fmul
or
inc
xchg
iret
repnz
shlb
fdivrs
adc
adc
cmp
ja
add
test
in
aam
addb
push
rorl
add
add
pop
flds
dec
push
loopne
add
imul
adc
sub
jne
dec
pop
stc
repz
sub
ret
lcall
or
push
in
cltd
fldl
inc
roll
test
push
sub
mov
lds
repz
push
or
cmp
test
xchg
mov
and
and
adc
mov
sub
rcll
int3
cmp
roll
test
test
arpl
movsb
sub
popa
fnstenv
add
pop
data16
adc
outsb
jecxz
dec
aas
adc
data16
add
mov
push
xor
dec
mov
movb
push
sbb
cmpsl
pmaddwd
lea
test
ja
dec
dec
mov
or
out
add
call
lock
int3
aam
mov
aas
push
jmp
add
pushf
test
pop
rcll
push
mov
fisttpl
addl
push
adc
dec
int
xchg
and
andl
jbe
int
movsb
stc
pop
lock
add
dec
push
push
cmpsl
mov
inc
inc
adc
fld
daa
and
mov
mov
por
dec
lock
sbb
outsb
adc
negl
mov
and
dec
jp
and
mov
push
push
movsb
je
push
xchg
inc
js
cli
incl
testb
push
add
insb
xor
insb
jp
std
lea
mov
leave
test
mov
lret
push
rcrb
rcr
push
add
xor
cmp
mov
push
push
adc
xchg
cmp
push
jl
pop
int
sar
push
sub
nop
std
mov
lock
fwait
hlt
inc
hlt
in
or
nop
jns
ja
sbb
sub
ljmp
inc
dec
stc
mov
pop
sahf
mov
inc
or
add
mov
aaa
adc
mov
inc
lds
outsl
aaa
add
mov
mov
pop
cli
out
sbb
add
inc
push
inc
or
cmp
loop
jb
sbb
cs
ja
mov
mov
das
jo
out
jnp
xorb
xchg
cwtl
xchg
aad
orl
ljmp
stos
pop
push
and
in
int3
fcoms
push
lds
add
inc
jbe
bsf
fcmovu
enter
mov
mov
mov
add
push
les
jo
add
filds
inc
dec
pop
pop
subl
frstor
loope
fstl
fcomip
sub
out
xchg
imul
rcll
sti
jg
arpl
push
rcr
or
inc
and
loopne
sbb
outsl
out
cmc
fisttps
addr16
add
test
std
outsl
das
in
xchg
and
inc
shlb
sub
iret
orb
inc
sbb
sti
jle
add
movl
jbe
orb
ljmp
mov
cmp
cmp
jno
les
xchg
adc
inc
mov
mov
and
sbb
dec
jge
inc
insb
mov
add
inc
jmp
lds
notb
icebp
push
rcrb
mov
push
insl
hlt
xchg
mov
fcoms
out
push
les
jbe
aaa
clc
std
pop
push
jb
cwtl
cli
push
dec
loopne
cwtl
lahf
jno
mov
outsl
loopne
mov
xor
rcrb
test
aas
es
rorl
sub
sarb
push
sub
fldenv
push
scas
lods
sbb
mov
pusha
movsl
into
dec
leave
add
call
pop
cs
sub
neg
in
xchg
push
push
das
cmc
out
lcall
mov
das
fsubl
and
adc
jg
xchg
xchg
dec
lds
add
out
pop
add
cmp
xchg
sbb
jp
mov
mov
ret
sub
xchg
in
test
xorb
and
inc
adc
jmp
mov
mov
jl
aas
cmc
adc
dec
sahf
je
add
push
es
push
cs
das
push
scas
inc
mov
xor
inc
jno
btr
ja
push
push
push
adc
and
push
sti
and
dec
xchg
mov
movsl
cmp
stc
mov
jb
out
mov
mov
pop
inc
push
sbb
pop
inc
and
ds
sub
fnstsw
pop
pop
sbb
jg
aam
jecxz
xlat
and
jne
pop
lret
mov
das
test
xchg
call
jecxz
push
dec
test
jp
add
pop
mov
dec
mulb
cmp
daa
iret
cld
inc
mov
shrb
sbb
mov
push
aaa
mov
inc
cmp
sub
outsb
daa
mov
es
push
rcrl
xor
add
lahf
jno
cli
sub
jecxz
inc
push
bound
sub
or
jle
sub
jno
into
xor
ret
mov
orb
fcomps
ljmp
cld
cmp
push
add
mov
add
popf
pop
call
xchg
add
les
push
iret
ret
or
negb
and
push
test
rcl
inc
mov
inc
ljmp
or
pop
push
cmp
mov
clc
lret
push
dec
out
imul
and
neg
pusha
push
push
imul
fisttpl
rcl
pop
popa
iret
pusha
lahf
mov
inc
push
scas
pop
fistpll
and
mov
repnz
fisubrl
test
lds
sahf
push
in
jne
push
outsb
pop
xor
sbb
icebp
push
xor
mov
lds
dec
rcll
dec
test
mov
mov
add
and
loop
mov
popl
jo
add
sub
push
int3
jle
repnz
fldt
inc
jno
cltd
push
push
push
hlt
sbb
push
mov
pop
or
mov
cmp
aad
mov
mov
pop
lds
cmpl
js
out
sbb
adc
mov
imul
adc
cmc
lea
inc
das
and
xor
mov
scas
stos
nop
add
lcall
andb
xchg
mov
or
add
pop
cmp
pop
xchg
iret
sahf
push
dec
sahf
add
imul
jl
jl,pn
out
mov
mov
pop
mov
hlt
mov
je
shlb
mov
int3
enter
imul
leave
leave
andb
xchg
inc
mov
std
in
test
jge
in
mov
xchg
cmc
shrl
imul
aam
push
mov
in
popa
cs
icebp
sbb
mov
mov
xchg
push
mov
and
cs
loopne
or
loopne
ja
push
stos
addr16
sub
sbb
fsubrp
pop
lods
mov
xchg
insl
jg
rolb
subl
or
pop
dec
rcrb
stos
xor
ljmp
aaa
ds
or
std
jg
pop
xor
mov
dec
jecxz
arpl
jle
adc
in
fdivp
pop
lods
add
add
cmp
lock
into
adc
outsl
cmp
dec
pop
jp
cwtl
dec
in
mov
call
xchg
xchg
sbb
outsl
cmp
mov
push
dec
in
idiv
pushl
popf
fwait
pop
in
lea
enter
pop
push
xchg
in
pop
or
test
cmp
ret
cmpsl
push
mov
xchg
insl
subl
bound
xor
mov
cmpsl
pop
roll
pop
enter
mov
add
xchg
sbb
ja
ljmp
sub
mov
lret
inc
mov
and
je
jge
stc
add
movb
mov
or
jle
push
push
adc
shlb
and
test
push
push
ja
add
out
xchg
inc
cmp
aas
je
ret
inc
push
mov
cltd
aaa
mov
nop
sbbb
pop
stc
jb
cmp
xchg
jge
adc
mov
xor
mov
or
mov
pop
in
ret
cld
dec
hlt
aad
mov
outsl
int
adc
sbb
in
sbb
push
dec
mov
imul
or
movsl
and
ljmp
stos
outsl
inc
xor
add
xor
std
cmpb
push
lock
jb
in
rcr
or
fwait
and
lock
xor
rcrl
pop
loop
faddl
xor
lahf
das
sub
adc
dec
fimuls
orl
in
in
insl
jmp
loop
mov
int
ret
lods
mov
mov
xchg
outsl
mov
cmc
xchg
jp
jnp
adc
mov
lods
das
push
mov
or
sub
inc
call
scas
in
sub
cmp
popa
pop
pop
incl
fidivrs
and
test
fmuls
jne
adcl
sbb
sub
enter
dec
or
mov
inc
dec
mov
inc
cltd
ds
xchg
fs
mov
push
bound
inc
jne
pushl
gs
icebp
jecxz
jmp
incl
or
or
and
xlat
arpl
mov
push
adc
xor
jp
push
fildll
jp
lods
cmp
sub
mov
int
mov
cmp
mov
sarb
insb
aam
pop
negl
adc
dec
clc
mov
push
xchg
inc
xchg
scas
mov
jmp
xchg
in
fsubrs
or
mov
push
mov
xchg
inc
mov
dec
into
lea
inc
jecxz
ljmp
test
dec
sbb
jo
fdivrp
insl
sub
fs
add
mov
and
dec
add
cmc
add
fdivr
pop
xchg
iret
jne
dec
in
ret
jmp
push
cmpsl
sbb
jle
sti
movsl
push
cltd
movsb
push
lret
pushl
js
mov
and
cmpb
cmc
cmp
dec
js
dec
xor
notl
loope
inc
sub
push
and
xor
pop
nop
xor
dec
cmp
or
cmc
pop
jmp
imul
mov
aad
add
inc
inc
push
sub
outsb
lcall
test
cli
shl
push
xor
insl
arpl
and
enter
fwait
push
sbb
cmp
inc
cmp
daa
dec
mov
dec
cld
sbb
inc
xchg
mov
js
jb
inc
pop
dec
repnz
ret
add
loopne
ret
hlt
cmc
leave
sub
or
pop
into
jnp
push
pop
push
cs
pop
dec
push
sbb
testl
jp
es
mov
xchg
xor
cmpsb
jl
sub
std
mov
mov
add
pop
cmp
xchg
inc
mov
inc
sbb
inc
cld
daa
fstl
mov
dec
xor
cmp
fstps
test
ret
loopne
mov
dec
and
push
stos
imul
xchg
mov
xchg
hlt
jg
lods
pushf
mov
adc
mov
test
push
pop
pop
jo
into
icebp
and
xchg
scas
or
add
shlb
es
adc
aad
aad
orb
xorl
or
inc
jmp
lods
add
adc
push
mov
lret
add
pop
adc
add
xchg
aaa
lea
mov
pop
push
cmp
push
sti
push
xor
sbb
out
sub
push
or
dec
add
add
and
aam
xchg
sub
add
cmp
inc
jmp
sub
add
add
push
movhps
cmpsl
and
ds
xchg
cmp
ret
cld
push
pop
test
test
cmp
fstpl
inc
rolb
mov
jne
inc
test
xchg
rclb
dec
call
add
test
jg
add
jp
adc
les
pop
ret
xchg
sub
sub
adc
sar
daa
or
cld
gs
xchg
mov
add
in
dec
std
rolb
rcrl
xor
mov
push
cli
add
dec
stos
outsl
adc
xor
in
dec
stos
push
xor
outsb
inc
arpl
and
inc
cmp
insl
sub
jb
jg
push
dec
add
xor
or
jae
dec
mov
push
les
adc
loop
shll
dec
mov
imul
add
rolb
sub
inc
int3
dec
jbe
push
inc
xor
insb
push
dec
inc
adc
nop
and
adc
rolb
aaa
push
mov
and
sub
adc
repnz
out
repnz
es
shlb
daa
jae
mov
jno
mov
shl
add
imul
and
add
pop
inc
add
pop
mov
adcb
pop
nop
or
push
rclb
xor
cmp
jecxz
push
and
dec
adc
cmp
adc
pop
dec
lock
mov
ficompl
xchg
xchg
pop
push
idivl
mov
mov
sbb
adc
mov
xor
jo
test
fldcw
cwtl
frstor
mov
sub
insl
test
out
repz
bound
lea
adc
notl
iret
xchg
add
adc
add
addb
add
inc
daa
sub
push
sub
pop
sub
add
sub
xchg
stos
test
lahf
sbb
outsb
out
cli
mov
ja
ret
fistl
xlat
int
andw
add
sub
hlt
pop
mov
inc
in
enter
sbb
sub
cld
xchg
das
jg
fidivrl
xor
lret
add
sub
stos
mov
add
add
xor
add
and
push
and
aas
sub
pop
sbb
fsubr
scas
cmpsl
pop
pop
sub
xchg
or
or
clc
aaa
dec
pop
icebp
gs
add
add
pop
fs
add
adc
shll
inc
les
sbb
fwait
dec
cli
mov
ret
push
icebp
shlb
call
popf
add
jg
js
dec
sarb
xor
and
xor
dec
mov
fisttpl
test
and
and
xor
and
mov
mov
push
mov
lahf
out
mov
push
loope
or
rcl
sahf
movsb
syscall
or
pop
lods
cmc
xchg
mov
stos
popf
stos
cld
adc
xchg
pop
add
or
pushl
ss
fstpt
mov
sbb
in
loop
mov
pop
cli
loope
ljmp
add
insl
call
das
mov
cmp
jae
push
add
mov
mov
fcmovb
loop
pop
and
xor
or
add
andl
mov
loope
mov
and
pop
aaa
aaa
sub
sbb
add
sbb
lods
je
insl
sbb
jb
jne
or
addw
aaa
clc
push
lock
jb
xchg
sbb
stos
adc
ljmp
lds
adc
data16
add
outsb
push
ret
into
daa
sbb
sbb
inc
fwait
and
iret
pop
sub
das
mov
jns
sahf
xor
sbb
cmpl
add
pop
flds
push
jg
cmc
adc
jb
sub
mov
pop
lds
pusha
mov
adc
mov
jmp
stos
repnz
out
pop
nopl
jo
mov
dec
addb
syscall
push
in
mov
mov
sbb
pop
adc
jnp
lcall
ljmp
and
and
lahf
xchg
dec
and
imul
pop
jmp
enter
inc
fadd
xlat
mov
popf
cmp
or
adc
jp
push
xchg
cli
call
add
xor
fwait
or
das
sub
add
rcll
loopne
mov
mov
push
push
fisubrs
mov
jge
jle
aad
xor
int
js
cmpsb
adc
dec
and
test
xchg
int3
cmpsb
sub
xor
push
pop
mov
rolb
jge
or
xchg
jp
push
notl
push
or
push
loop
lret
cmp
push
int
pop
jns
mov
movsb
aaa
or
inc
cmp
repz
lock
int
dec
cmp
unpckhps
push
inc
mov
mov
and
pop
or
fadds
add
dec
clc
pusha
push
push
mov
addb
jbe
and
or
sbb
jbe
xor
push
ja
insl
cmp
add
mov
push
sahf
or
and
rcrl
adc
mov
push
add
inc
movsl
ret
pop
mov
push
cmp
jg
test
loop
faddp
mov
fldcw
mov
or
dec
xchg
ja
lret
or
popa
dec
and
cmp
and
xchg
mov
adc
dec
cmp
and
mov
add
cmpsb
and
xchg
lea
lods
pop
mov
sbb
jne
adc
pop
add
xchg
lcall
lret
mov
push
out
ret
nop
leave
lds
push
gs
or
mov
push
mov
add
inc
in
cmpsb
sbb
test
into
sbb
insl
jp
in
inc
sub
push
add
or
lods
lods
aaa
sbb
xor
das
icebp
jecxz
sub
pop
jno
js
or
clc
pop
dec
dec
mov
jge
lds
sbb
js
pushf
int
insb
dec
movsl
scas
push
leave
cmp
xor
hlt
xchg
jp
sub
jp
jge
cltd
mov
push
loopne
aas
fbld
mov
pop
inc
and
mov
cmpl
push
sub
outsl
dec
add
push
cli
or
outsl
int3
stc
cmp
andb
add
add
add
inc
pop
add
scas
inc
repnz
xor
pop
test
sbb
jno
jno
mov
mov
add
pop
sub
pop
cmp
ljmp
inc
inc
in
pop
cwtl
fildll
jne
jmp
mov
bound
nop
jge
or
icebp
pop
add
insl
sbb
cmp
faddl
add
imul
sub
add
jns
mov
add
cmp
xchg
push
lcall
fmuls
pop
lock
inc
das
push
mov
jne
test
add
or
sbb
pop
loopne
sub
pushf
inc
adc
jg
int3
push
add
xchg
scas
mov
test
push
and
fldt
cmp
dec
fdivr
push
and
mov
aaa
xchg
and
test
cmp
divb
xor
cmc
mov
sub
sub
pusha
js
loopne
scas
mov
decl
aam
hlt
add
jge
and
sbb
xchg
or
lods
bnd
cmp
pushf
add
movsl
stos
xchg
les
into
and
adc
inc
mov
aaa
and
inc
aam
dec
lea
test
frstor
andb
inc
jb
mov
jl
call
insb
cs
and
mov
mov
ds
call
popa
aas
push
sti
shr
ja
inc
or
data16
mov
int
loope
cs
outsl
rcrl
std
or
xchg
sahf
sbb
insb
mov
sbb
dec
rclb
fimull
jmp
and
icebp
mov
jb
sti
idiv
stos
mov
ficoms
out
jo
mov
mov
js
cmpsb
shlb
int3
pop
push
sbbb
pop
pop
dec
jae
push
push
mov
rclb
mov
cwtl
push
fldcw
sti
and
lods
fidivrl
mov
jmp
mov
lds
ljmp
shlb
pop
push
pop
ficoml
rcrb
push
in
inc
push
adc
rolb
mov
mov
xlat
aaa
movsb
or
jae
push
inc
data16
mov
mov
movsb
jo
sub
mov
mov
rorb
and
adc
jb
imul
or
out
mov
and
or
pop
test
or
add
jle
andb
mov
lock
xlat
and
xor
sub
cmpl
std
shrl
dec
pop
mul
push
das
inc
int
dec
lahf
fcomps
test
mov
aas
mov
push
push
fwait
add
add
hlt
clc
dec
outsb
push
and
fcmovnb
xchg
decl
push
fsubrl
mov
and
aad
in
stc
sbb
outsl
decl
jne
fsubr
dec
jg
test
lock
xchg
test
arpl
jmp
orb
adc
test
dec
nop
or
addr16
inc
repz
imul
popa
insl
jle
jnp
mov
mov
inc
jecxz
sub
and
push
sub
xchg
icebp
lods
push
or
mov
lds
and
movsl
push
fistpll
in
dec
mov
inc
cmpsl
subl
les
enter
notl
ja
sub
rorl
lock
xchg
mov
test
jae
arpl
mov
mov
add
fisubrs
daa
out
mov
mov
addl
scas
inc
jnp
mov
push
mov
pop
cmp
mov
mov
cmp
dec
jo
ds
adc
cltd
lock
incl
and
lods
out
test
xor
pop
hlt
push
jmp
push
inc
xor
dec
mov
mov
fwait
mov
mov
mov
inc
adc
outsb
test
std
jns
in
fwait
arpl
adc
dec
push
pop
mov
pop
les
jmp
jecxz
pop
and
mov
push
add
ss
ror
repz
xorb
ret
sbb
mov
jg
push
test
sub
repz
mov
sub
and
insb
mov
in
sti
popa
arpl
add
mov
pop
or
fwait
loop
inc
in
mov
xor
and
orl
fisubrl
dec
push
fsubr
shlb
adc
stos
push
loope
dec
or
fimull
pushf
jg
jnp
aas
pop
adc
jp
xor
stos
push
outsl
fiaddl
aad
mov
sub
aas
sub
outsl
enter
jg
decl
test
mov
repz
mov
data16
adc
jb
loope
push
mov
xorl
sarb
cmpb
jnp
adc
pop
sub
inc
mov
add
sub
ret
jg
fstpl
mov
fbstp
mov
xchg
mov
sbb
lock
xchg
xor
push
or
inc
scas
xchg
jmp
aaa
outsb
adc
and
pop
jmp
test
inc
ret
jg
outsl
pop
scas
and
or
jp
cmpsl
xchg
sub
nop
mov
push
arpl
push
pop
cli
jb
adc
or
pop
lods
rcrb
pushl
in
test
push
mov
iret
cld
insl
jnp
cld
add
add
in
mov
cmp
mov
sub
addr16
pop
sub
decb
loopne
enter
andl
jnp
ds
and
push
es
and
xchg
push
or
sarb
dec
jmp
mov
arpl
mov
mov
mov
sbb
add
test
stos
frstor
jle
pop
sar
in
pop
adc
cmpsb
test
in
fdivr
outsl
push
cmpsl
jno
das
dec
lcall
mov
std
mov
ds
sbb
lahf
and
aaa
inc
fsubl
sbb
xlat
mov
sahf
sub
std
add
jno
inc
mov
pop
pop
adc
mov
jo
or
inc
lcall
scas
pop
push
fcomi
xchg
jb
mov
adc
mov
loopne
lret
pusha
pop
push
pop
fdivl
sbb
sbb
scas
aad
mov
pop
mov
cmpsb
push
push
ja
test
rcrb
in
add
cwtl
nop
and
xlat
clc
dec
adc
mov
pop
xchg
sarl
lret
inc
imull
push
rcll
pop
fnstenv
jp
mov
clc
bound
sbb
aad
xchg
push
ds
in
pop
adc
fucomi
dec
mov
pop
lds
mov
xchg
loopne
xchg
xor
pushw
mov
jbe
mov
call
ret
dec
das
mov
sbb
movsb
clc
or
cmp
cmp
mov
dec
mov
test
cmp
mov
jmp
inc
or
cmc
insb
nop
je
push
sub
sbb
dec
sbb
or
gs
push
shr
dec
test
add
adc
fucomip
imul
or
out
fisttps
inc
mov
std
or
adc
mov
inc
xor
adc
fwait
sub
cmp
pushf
inc
push
rcrb
clc
ficompl
xor
pop
mov
movsl
into
mov
gs
push
push
jg
or
stos
jns
popa
stc
xor
rcr
fistpl
mov
inc
add
sub
addr16
jo
add
paddq
outsb
das
or
mov
jo
pop
lret
movsl
mov
js
xchg
movsl
jg
stos
sbb
xchg
inc
add
pusha
jnp
add
fimull
les
rclb
incl
dec
push
pushl
scas
fsubl
sarb
pop
pop
dec
or
test
xor
repnz
iret
stc
xchg
xchg
cld
mov
mov
in
scas
fsubr
les
mull
jl
mov
loope
mov
mov
dec
mov
push
cmp
dec
or
mov
inc
adc
xchg
xor
aam
in
pop
flds
rcr
and
add
mov
jg
shlb
push
loope
inc
or
movsl
mov
fistpll
cmp
jnp
mov
cmp
sbb
mov
xlat
cmp
ret
mov
repnz
or
jge
call
jecxz
inc
ficomps
outsl
mov
lea
and
int3
adc
into
test
incl
push
repnz
sub
addr16
xchg
hlt
idivl
dec
sbb
scas
pusha
loope
mov
jge
xchg
adc
pop
pop
adc
loope
cmp
mov
gs
cli
loop
mov
push
outsb
cmp
lds
sbb
rol
or
cmc
dec
cmpsb
std
pop
testl
mov
dec
adc
fistpll
mov
inc
leave
loopne
jp
push
dec
pop
iret
adcl
mov
mov
inc
subl
mov
mov
push
adc
or
mov
movsb
call
fsubs
mov
mull
jbe
or
mov
pop
jg
pop
mov
or
xchg
jp
and
pop
sub
inc
push
lds
cmp
call
dec
popa
popa
mov
push
sarb
push
mov
or
mov
fs
mov
xchg
mov
scas
fisubl
xlat
push
or
mov
jmp
add
or
insl
fimull
addr16
cmpsb
popa
inc
sbb
xor
out
cmpsb
inc
mov
mov
outsb
pop
adc
xchg
test
inc
in
in
daa
pop
mov
cli
push
mov
xlat
notb
dec
sbb
push
cmpb
fcomi
outsl
pop
test
into
out
loopne
rcrl
rolb
hlt
in
jecxz
push
js
pop
call
inc
loope
adc
dec
jne
lret
sar
mov
push
fwait
loop
fwait
jecxz
notb
repnz
xor
pop
xchg
pusha
fildll
mov
lods
jb
lea
or
xor
es
inc
jb
pop
ss
lods
or
and
ret
je
mov
aad
xor
loop
aam
orl
jg
mov
xor
test
jg
pop
xchg
mov
xchg
xchg
cmp
mov
pop
mov
push
mov
movsl
sbb
pop
xlat
lds
cmp
add
aaa
insb
rcll
lret
and
roll
les
shll
jge
mov
push
sub
fdivrp
jne
aas
inc
jg
cmovo
imul
outsl
pusha
jmp
cs
lds
mov
ds
outsl
mov
lcall
cvtdq2ps
fcomps
fwait
mov
inc
fsubrl
sbb
bound
lods
pop
into
inc
xor
test
scas
inc
pop
movsb
mov
jmp
push
jmp
jecxz
loopne
inc
sbb
cli
inc
cmpsb
mov
sbb
stos
mov
pop
std
icebp
rcrl
sbb
or
sbb
pop
mov
es
sti
inc
out
icebp
cmpsb
push
mov
test
xchg
xor
int
ficompl
dec
and
call
mov
and
inc
xor
sbb
pusha
add
adc
adc
sbb
fsubrs
mov
push
mov
inc
out
cmp
xor
cli
sahf
cwtl
push
into
and
bound
xchg
push
je
add
aaa
jle
pop
adc
out
push
aam
mov
jne
dec
cmpsb
mov
mov
mov
and
mov
ja
add
pop
ljmp
iret
repnz
inc
ja
es
lret
inc
adc
jge
and
or
inc
and
jmp
notl
shrl
clc
push
mov
xchg
out
fiaddl
dec
inc
stos
in
dec
nop
and
push
aad
dec
cmp
into
push
xchg
and
mov
das
insb
pop
sub
sbb
arpl
dec
lret
lock
pop
dec
mov
lods
push
cmpsl
inc
in
fiaddl
and
lods
mov
lods
xchg
add
add
in
fistl
nop
sahf
jno
cld
test
dec
dec
adc
add
dec
cmpsb
add
xor
adc
push
cmpsb
loope
pop
mov
in
pop
addl
les
jge
aad
mov
imul
push
push
bound
sbb
js
sub
pop
mov
xlat
insb
das
mov
cmpsl
sbb
out
ds
push
xchg
sahf
push
stos
dec
aad
xchg
int3
pop
push
outsb
inc
out
pushl
push
sub
add
mov
out
sbb
mov
mov
insb
outsl
jg
std
push
js
scas
adc
popa
cmp
or
je
mov
rolb
sbb
mov
pop
xlat
jo
pop
jae
sub
mul
mov
inc
push
push
mov
out
cmp
push
jg
fildll
sbb
jp
pop
and
sub
lret
or
loopne
pop
pop
push
in
cmp
in
lcall
lds
insb
and
ss
lret
popa
jnp
clc
xchg
aad
mov
test
inc
or
das
jge
inc
inc
fadds
mov
mov
xchg
stos
mov
repz
inc
add
das
jno
cmp
and
lds
nop
andb
stos
pop
pop
xorb
lea
lds
xorb
xor
int3
leave
mov
xor
sub
sub
push
and
inc
cwtl
cld
pop
ja
shlb
cltd
lock
sti
pop
cli
mov
aaa
mov
sub
pop
adc
inc
cld
xchg
mov
pop
add
adc
loope
shrb
std
bound
mov
mov
arpl
sbb
jnp
arpl
mov
subb
cmp
ds
or
das
insb
mov
test
jo
test
lock
mov
pop
sbb
insl
les
jge
inc
dec
or
in
or
outsl
cld
push
lods
into
and
mov
inc
mov
sbb
push
xchg
fwait
cmp
dec
in
push
std
mov
jp
sub
add
mov
sub
das
mov
ficoms
mov
add
xor
test
ljmp
les
loop
pop
cmc
testb
into
jne
sbb
xchg
mov
dec
das
movsl
xchg
clc
fistpl
mov
jnp
push
push
xchg
mov
mov
or
cs
dec
cmpsb
push
lret
xor
add
ret
insl
add
and
stos
adc
mov
les
ret
mov
shlb
sub
jl
add
and
add
mov
cmp
std
mov
ret
inc
xchg
adcl
push
or
or
in
inc
xor
pop
push
int3
adc
aad
popa
ja
mov
rcll
pop
jecxz
dec
or
aas
xchg
add
xchg
mov
lods
data16
js
inc
jmp
psadbw
das
cs
pusha
ds
mov
add
push
lcall
xor
xor
js
rcl
fcmovne
push
fsts
jb
cli
push
icebp
ja
mov
push
inc
les
mov
dec
mov
dec
imul
cld
gs
sti
fidivrs
stos
ljmp
or
xor
das
adc
int3
add
jnp
incl
les
or
popf
pop
sbb
jecxz
dec
add
jns
lds
inc
cld
ret
mov
sti
imul
xchg
lret
les
lock
loope
mov
je
mov
pop
jmp
jns
mov
rcll
std
xor
xchg
pusha
push
pop
je
jp
dec
std
jg
jne
push
dec
and
sub
aam
xchg
push
adc
xchg
ss
into
or
and
aam
pop
mov
add
xor
mov
into
hlt
jbe
loopne
jae
ljmp
xor
fcomip
out
jmp
pop
and
dec
test
inc
pop
ret
jo
fwait
scas
jp
add
inc
leave
jp
pop
pop
paddusb
ret
or
hlt
xor
add
ror
fadds
andb
enter
adc
dec
cs
xor
insb
inc
sti
movsl
lods
jp
jecxz
jmp
mov
xchg
or
inc
loopne
inc
cmp
xor
fwait
or
fisttps
sbb
sahf
stc
xchg
imul
shrl
add
les
or
leave
cmp
mov
es
mov
es
das
lock
sub
xchg
jmp
ljmp
pop
loope
xchg
fimuls
cwtl
je
mov
push
cmpsb
and
test
add
or
dec
sub
xchg
scas
mov
cmpsb
mov
loope
imulb
dec
cmp
push
lcall
xor
lcall
sbb
xchg
sub
jne
fbld
sbb
push
cmp
cmpsl
loope
movsl
xor
cmpsl
mov
pushf
loop
cmp
dec
sar
jne
stos
pop
pop
pop
hlt
js
cwtl
xor
or
popf
inc
fs
aam
inc
cmpsl
mov
mov
cli
out
and
in
clc
pop
pop
in
bound
pop
mov
adc
pop
loopne
aas
mov
int
or
lds
pop
inc
pop
loop
dec
xor
mov
loop
rcll
mov
pop
push
mov
pop
nop
lret
jmp
lds
insb
push
shll
shrb
insb
push
push
fstpt
les
push
jg
fadds
cwtl
mov
rcrl
cmp
sbb
push
ss
xor
mov
sub
pop
add
into
scas
sbb
dec
dec
inc
xchg
stc
jno
push
xlat
js
inc
fisttpl
sub
ret
sub
mov
add
push
mov
xor
fwait
dec
cmpsl
or
or
cmp
mov
cmp
or
jmp
in
mov
jmp
sbb
cld
sbb
pop
addr16
mov
nop
push
bound
insl
pop
pop
add
jg
or
jbe
xlat
add
or
push
or
cld
out
aaa
dec
lds
xor
pop
into
ret
xor
mov
mov
inc
dec
test
mov
test
push
push
mov
pusha
movsl
jae
iret
ds
lea
mov
or
std
xlat
loopne
notl
mov
or
mov
in
lcall
push
pop
jnp
pop
in
push
adc
ja
rcr
adc
xorb
rcrb
lods
fs
sbb
ss
inc
test
fnsave
mov
pop
popa
aaa
sbb
inc
add
push
jns
inc
push
pop
add
mov
aas
dec
xchg
mov
aam
pop
pop
xorb
pop
mov
pop
jp
pop
xor
addr16
outsl
and
jp
aas
mov
xor
or
jmp
mov
xor
loopne
fiaddl
ss
sbb
imul
pop
push
adc
sub
sti
inc
aas
imul
adc
das
push
pop
push
sti
jns
js
push
inc
sub
movsl
icebp
inc
jno
adc
pushl
icebp
out
xor
int3
add
push
rorl
rorl
arpl
push
xor
adc
jl
mov
fildl
adc
xor
or
inc
sti
xchg
scas
mov
mov
int3
ret
jecxz
mov
sbb
addb
dec
aaa
jg
sbb
rcl
jle
push
cmp
out
inc
sbbb
push
push
cmpsl
sbb
sbb
jmp
mov
sub
fldt
shlb
xchg
or
push
pop
icebp
mov
xor
in
aad
adc
testl
sbb
xchg
outsb
stc
cmpsl
daa
or
call
iret
dec
pop
scas
adc
adc
inc
or
inc
xchg
jge
stos
divb
xchg
ds
fstl
xchg
or
sub
fsub
mov
and
xorl
mov
and
popa
cwtl
iret
mov
adc
rorl
jg
movl
bound
mov
fwait
hlt
xor
mov
dec
push
jnp
mov
in
dec
and
insb
in
out
sbb
dec
mov
and
add
xchg
or
adc
sub
mov
lcall
es
out
dec
js
and
adc
repnz
mov
icebp
call
pop
pop
lock
mov
rcll
inc
jns
outsl
int3
mov
popa
stc
xor
dec
or
pop
jecxz
pop
mov
sub
popf
enter
incb
inc
cmpsl
call
push
out
js
xchg
std
lea
aaa
mov
pop
xor
xchg
xorl
add
divb
stos
adc
or
sbb
pop
cli
call
nop
cltd
pushf
insl
and
int3
cli
cmc
ret
iret
push
jg
loop
and
fimuls
or
out
mov
push
sbb
nop
and
sub
in
addb
jno
daa
and
adc
mov
pop
lods
stc
rolb
out
test
es
push
mov
incl
andl
loopne
dec
iret
pop
fucom
cmp
inc
dec
std
into
jae
fsub
mov
pop
test
int
jle
mov
sub
popa
xor
inc
inc
xor
add
xor
and
cmp
push
lock
cli
mov
imul
leave
popa
jmp
sbb
adc
les
jecxz
lock
fs
aad
add
mov
call
xorb
and
aas
imul
inc
dec
insb
pop
lsl
lahf
sbb
xchg
xor
jnp
pop
imul
cld
jb
push
out
push
adc
add
push
mov
mov
pop
jp
inc
cmp
pop
popa
add
pop
mov
inc
mov
mov
dec
sbb
rcl
std
push
or
xchg
test
mov
cli
scas
mov
out
lods
int3
mov
mov
ret
or
sbb
dec
dec
jp
jno
lods
mov
addl
adc
in
aaa
sbb
enter
orl
adc
push
fs
pusha
jnp
pop
fistpll
adc
jbe
lahf
or
fistpll
xor
in
aaa
xor
add
fildll
lahf
scas
or
orb
mov
movsb
mov
dec
rorb
lods
aad
sahf
push
sub
sbb
or
addr16
sbb
or
les
xorb
mov
add
aad
adc
stc
and
lock
nop
add
and
adc
movsl
mov
cmp
stos
loop
cmc
xchg
xchg
xchg
pop
stos
mov
cmp
scas
inc
les
pop
outsb
jg
jg
loopne
syscall
add
fistl
adc
push
mov
push
cmpsl
xorl
pop
cli
mov
jge
stos
add
sar
mov
or
jge
stos
push
movsl
sbb
pop
jmp
push
stos
pop
call
sbb
fbstp
xchg
add
shlb
std
lock
pop
or
pop
cld
lods
ret
movsl
cmp
add
add
rcll
xlat
push
jmp
xchg
scas
inc
addr16
fidivs
lods
outsl
lock
sub
je
movsb
shlb
fildl
loopne
dec
jmp
ja
and
ret
cli
ret
jmp
xchg
mov
push
je
cs
mov
mov
add
cmp
das
insl
lock
xchg
push
inc
shll
mov
pop
pop
in
mov
jg
push
cmp
lret
sbb
popl
out
lcall
decb
push
jl
insl
insl
jno
cmp
jg
xchg
xchg
mov
cmp
mov
pop
add
jbe
orl
add
es
dec
ret
sti
push
das
mov
sub
fcmove
inc
cmp
xchg
and
js
sub
add
adc
sub
jge
and
sti
ljmp
xchg
inc
adc
rcrb
xor
and
neg
xorb
test
clc
fwait
sbb
sub
add
gs
xor
adc
cmp
popa
dec
shld
sbb
xor
xlat
and
mov
adc
repnz
and
adcb
lea
out
xchg
push
frstor
jecxz
pop
cmc
mov
mov
movsl
sub
shl
dec
jg
xchg
mov
arpl
jg
fisttpll
jp
fucomi
mov
test
aaa
sar
dec
scas
adc
mov
and
adc
add
pop
sbbb
sbb
mov
out
mov
push
push
jl
cwtl
adc
adc
push
out
das
xor
xlat
cmp
in
xchg
pop
xlat
or
out
orl
jno,pt
lock
stos
mov
cmp
cmp
jnp
repz
dec
cmc
mov
fistpl
jecxz
ja
hlt
and
or
pop
jmp
repz
mov
les
std
push
cs
and
dec
adc
sbb
clc
inc
jne
and
rolb
xchg
inc
add
cmp
shll
out
push
or
inc
std
movsl
pop
pop
aam
ret
rcr
mov
mov
pop
mov
add
cwtl
or
jp
fdivp
leave
clc
rdmsr
pusha
lret
push
and
mov
cmp
aam
sbb
or
lds
sub
jne
xchg
mov
and
cli
mov
inc
push
pop
lea
fimuls
mov
adc
push
lds
mov
rcll
aam
fcomi
cmp
dec
add
pop
pop
sub
dec
je
out
in
movsb
sahf
pop
fadds
lcall
lock
scas
pop
cltd
cmp
enter
cwtl
adc
mov
aaa
xor
std
pop
insb
in
pop
lock
ljmp
pop
sub
cwtl
jbe
jmp
xchg
mov
lock
daa
mov
fcomps
mov
psubq
movsl
push
fsubr
or
movsl
out
in
pop
nop
int3
aad
sbb
xor
push
stos
or
js
sub
lds
outsl
pop
shll
pop
shrl
insl
sti
sbb
out
mov
lods
sbb
incl
jmp
stos
lcall
inc
decl
dec
jle
sahf
add
and
xchg
cli
out
iret
shlb
stc
test
mov
incl
stos
aam
jnp
or
adc
or
dec
sub
adc
inc
xchg
test
push
imul
or
std
pop
dec
test
insl
cli
mov
push
stos
sbb
add
pop
jmp
and
mov
fildl
push
pop
sub
sbb
insl
ret
push
stos
in
aaa
pop
mov
loopne
or
xchg
and
popf
test
mov
mov
sbb
call
jbe
add
lcall
pop
pop
inc
sub
and
inc
sahf
outsl
cmp
loopne
sbb
imul
mov
mov
xchg
inc
add
xor
jns
stc
js
lds
jne
addl
mov
jmp
pop
stos
call
add
test
add
pop
cwtl
mov
and
cmpsb
adc
movsl
pop
iret
cs
pop
ja
xorl
addl
repz
lret
imul
movsl
out
mov
mov
mov
dec
pop
or
add
arpl
lcall
adc
out
xchg
cmpl
and
test
into
xchg
pop
adc
pop
mov
or
test
xchg
in
in
push
xchg
or
cld
fsubrs
cwtl
rcrb
xor
nop
out
jle
push
pushf
and
jb
or
inc
pop
adc
test
sub
pushf
add
mov
fcomps
jno
test
xor
xor
push
and
dec
rolb
or
mov
adc
mov
lods
inc
adc
xor
call
fwait
jecxz
xor
shr
pop
cld
inc
cmp
dec
lret
in
fs
pop
mov
pop
xor
sbb
sub
fwait
or
inc
mov
out
add
push
inc
mov
inc
xchg
je
mov
inc
je
das
rcrl
std
jno
mov
out
or
pop
cs
jo
aaa
loop
jl
adc
pop
mov
in
or
decl
int3
lret
mov
je
jg
pop
lock
xchg
fstl
mov
sbb
and
lds
mov
scas
xor
xchg
xor
add
movsl
dec
pop
dec
dec
inc
adc
fldcw
addl
inc
dec
lcall
call
push
aad
fisttpll
mov
scas
mov
bound
sub
inc
pop
mov
pop
jne
dec
or
jae
or
dec
adc
xchg
mov
je
push
xor
call
mov
adc
mov
cltd
dec
repnz
jbe
or
adc
rorb
dec
push
dec
icebp
inc
pop
pop
mov
rcrl
sub
sbb
mov
fs
cmp
fsubrp
cs
pop
push
dec
shlb
cmp
sbb
mov
and
xor
cmp
rcl
or
jns
jle
ffreep
pop
les
mov
sub
shll
adc
std
ret
jmp
addl
inc
ret
pop
lods
lahf
rorl
mov
test
inc
in
or
test
lea
mov
loop
push
rolb
test
aam
push
adc
and
ljmp
sbb
inc
dec
icebp
in
inc
mov
sbb
loopne
mov
mov
clc
xchg
sbb
dec
icebp
sbb
fwait
popa
mov
jbe
test
push
test
or
sbb
in
daa
lock
ficoms
les
fistl
mov
inc
sub
pop
call
insb
je
jmp
adc
push
aam
popf
jmp
mov
and
push
daa
mov
out
js
aaa
and
add
adc
add
xor
fisttpl
and
sub
push
push
xchg
js
add
fcoms
les
xchg
mov
push
xchg
sarl
imul
icebp
daa
jp
out
mov
fcompl
jge
mov
adc
das
pop
push
test
xchg
or
cli
outsl
sub
mov
push
fidivl
imul
out
divb
sub
aas
push
aaa
xchg
sbb
mov
jl
sub
leave
pop
mov
cwtl
push
mov
dec
dec
pushf
or
shlb
add
shlb
aas
push
mov
rolb
push
lods
jbe
fmull
adc
xor
in
or
test
adc
outsl
add
xorb
es
lret
in
and
pop
inc
sbb
outsb
or
push
xchg
out
stos
sub
icebp
dec
ss
je
add
adc
mov
ret
push
lods
std
pop
in
or
push
mov
xor
mov
insl
mov
subb
lods
icebp
fadds
cli
jecxz
dec
cmp
sbb
int3
or
stos
in
idivb
mov
andb
sub
mov
mov
mov
cmc
in
jle
in
cmc
sbb
jbe
push
inc
xor
enter
jg
rorb
mov
ror
ret
cmp
inc
clc
mov
movb
movsb
cltd
cwtl
out
mov
mov
or
sahf
scas
in
mov
adc
popl
test
xchg
loope
jecxz
sub
ja
dec
je
xchg
lret
ljmp
sub
stos
cmp
pop
cmp
push
cmp
rorl
mov
xchg
pop
sbb
sbb
jbe
in
and
mov
push
out
or
lock
ljmp
xor
lret
inc
loop
mov
mov
cltd
xor
adc
out
pop
das
fsubp
lods
inc
jg
dec
jne
or
sbb
decl
fwait
adc
mov
popf
enter
push
orl
and
jge
in
fprem1
dec
testl
and
sti
out
jle
push
mov
cli
xchg
mov
jecxz
fildll
mov
pushaw
cmp
pop
ja
cmpb
mov
sub
shll
xchg
cli
divl
adc
mov
pop
in
jbe
leave
push
push
lock
rcl
sarl
push
gs
jmp
or
je
push
mov
ret
sub
sbb
pop
jbe
pop
iret
or
js
ffree
inc
push
jp
fisttps
mov
ret
jne
push
xor
adc
adc
data16
mov
cs
pop
or
jbe
pop
js
scas
clc
mov
loope
mov
sbb
dec
call
add
dec
popf
in
aam
fists
add
mov
pop
jne
or
sbb
sub
in
xchg
mov
pop
test
pusha
in
aas
pop
out
and
mov
bound
cs
shrb
or
add
sub
je
ret
jmp
adc
pop
jo
cmp
sahf
iret
leave
imul
aad
ret
stos
out
or
imul
push
jmp
ret
add
adc
jnp
xchg
test
cmp
mov
mov
jl
sti
sti
xchg
fisttpl
sbb
test
icebp
adc
rol
or
xor
push
clc
mov
pusha
fildll
loope
scas
dec
int
fs
xor
push
push
popa
mov
or
push
call
sar
sub
or
pop
mov
push
stos
xor
fmul
test
inc
les
movsb
imul
iret
jne
add
mov
ret
adc
mov
pop
jg
or
out
mov
icebp
jnp
stc
add
push
pop
js
cmp
pop
std
inc
enter
fiaddl
aaa
cmp
test
xchg
inc
pop
or
sub
stos
mov
push
adc
push
fisubs
out
mov
pop
fnstsw
cmp
mov
outsl
fldt
es
lahf
xchg
lods
push
mov
shl
sub
nop
lahf
sub
sbb
lret
cs
add
loop
je
jns
fildl
mov
movups
push
xchg
loopne
mov
movsl
fsubrs
je
mov
jne
je
sbb
fldenv
adc
call
push
out
ret
scas
loop
push
mov
lock
lock
sbb
dec
pop
pop
out
test
ss
xchg
push
pop
int
icebp
daa
xchg
je
fists
sarb
movhlps
in
js
mov
shlb
idiv
fwait
push
in
outsl
sub
pop
ds
pop
pop
add
pop
aam
xchg
lods
ror
xor
andl
xor
mov
out
shl
ror
packuswb
cmp
decl
jl
and
jg
push
inc
call
insb
das
inc
adc
rorb
out
adc
aam
lods
or
or
loop
jmp
call
jbe
faddp
inc
std
inc
add
xchg
sub
mov
xor
fldl
lods
push
sbb
sub
sbb
leave
add
push
enter
ret
rclb
test
xchg
aam
push
ror
ss
xchg
mov
add
mov
aaa
mov
adc
ds
add
mov
std
push
icebp
outsb
lcall
add
dec
ja
mov
rorb
cltd
push
xchg
xlat
cmp
mov
pop
mov
sub
stos
lods
dec
sbb
push
gs
mov
push
mov
sbb
repz
add
decl
loope
out
or
push
lods
adc
jg
jns
push
loopne
jne
pop
popf
testb
xchg
cmp
mov
and
js
add
test
lret
decb
jge
or
push
xlat
call
das
aam
xor
and
jnp
leave
adc
dec
repnz
xchg
addr16
popf
aaa
inc
cltd
cmp
mov
cs
out
sti
xchg
push
push
fbstp
sub
iret
push
shl
sub
arpl
xor
sub
andl
pop
cmp
pop
and
outsl
fadds
icebp
ja
inc
xor
push
imul
mov
lock
std
pop
test
add
pop
in
jp
cwtl
pop
inc
fdivrs
outsl
cli
cwtl
clc
lret
rol
incl
lcall
sbb
aas
loopne
nop
xchg
sub
adc
inc
adc
loop
push
in
outsl
pop
outsl
pop
fistps
pop
xchg
rclb
push
andb
mov
mov
add
dec
faddl
in
sbb
lcall
dec
mov
dec
shlb
and
xor
push
and
std
shl
adc
add
and
cli
pinsrw
push
ds
push
jnp
fs
and
xor
and
xchg
or
ficompl
add
imulb
xchg
inc
pop
sbb
and
cmp
das
les
subb
imul
xlat
aad
lock
pop
sbb
cmpsl
das
je
loope
dec
lds
cmp
mov
jg
test
cmc
push
push
cmp
pop
inc
nop
sub
cld
jmp
mov
adc
mov
jb
mov
xlat
mov
cwtl
fildl
ja
fnstcw
or
jno
mov
cli
or
js
iret
iret
ss
push
outsl
insb
and
mov
popf
nop
cltd
loope
call
xlat
mov
out
cmp
sbbb
xchg
int3
ljmp
jle
repnz
pop
cld
pop
xor
aaa
mov
repnz
xchg
push
movl
add
sbb
rorl
xor
fnsave
lcall
lahf
and
rcrl
and
mov
jae
mov
outsl
cmp
pop
pop
ljmp
add
and
sbb
adc
jae
es
mov
scas
push
imul
les
sbb
js
push
clc
mov
adc
ljmp
inc
inc
sub
pop
arpl
adc
dec
fsubrl
orl
call
push
vdivss
clc
or
cmp
rorb
sbb
popa
sar
outsl
mov
jo
test
inc
mov
rcrl
call
rol
out
cmpsb
pop
or
dec
loope
repz
mov
insb
test
xchg
test
subl
dec
lahf
and
mov
notb
clc
fistpl
inc
mov
mov
adc
icebp
push
clc
jmp
xor
pop
and
mov
mov
mov
nop
pop
ficomps
pop
fmul
sbb
cld
inc
sbb
decl
sub
jnp
push
bound
and
testb
jle
pop
loope
cli
xchg
aas
push
mov
outsl
mov
imul
pop
adc
cli
jg
dec
rolb
lea
sbb
push
fs
sbb
outsl
jl
incl
pop
or
jb
mov
jmp
xor
mov
cmp
ret
ret
pop
test
add
inc
andl
push
aad
inc
cmpsl
mov
pop
daa
xchg
mov
sbb
and
fcoml
cmpsb
lea
mov
outsb
call
jg
or
add
icebp
add
xchg
rcrl
pop
ret
aad
fs
jae
cmp
pop
aad
mov
stos
sbb
push
pop
outsl
push
clc
mov
add
pop
dec
mov
inc
push
cli
shll
sub
movsl
negb
or
fdivr
mov
and
icebp
fnstsw
adc
add
enter
shlb
add
fcomp
add
inc
dec
dec
daa
cmp
out
lods
js
imul
xor
and
in
xchg
inc
pcmpgtd
or
pop
ljmp
pushl
dec
xor
xchg
scas
sbb
mov
and
mov
mov
jge
dec
or
push
lret
push
js
adc
pushl
jg
add
ret
inc
sub
in
cmp
int
mov
inc
daa
daa
jmp
mov
das
mov
popa
push
iret
mov
push
mov
loopne
or
fs
pop
loop
clc
mov
or
mov
pop
addb
xchg
mov
in
push
cmc
jo
dec
fildll
clc
push
mov
sti
test
imul
inc
cmp
ret
inc
nop
dec
sti
sub
adc
sub
jae
and
lret
inc
in
lods
pushf
mov
xchg
push
pushf
and
xor
pop
clc
xchg
leave
outsb
and
cmp
lock
mov
ljmp
xchg
mov
test
fidivs
cmpsl
sbb
xchg
jl
jne
mov
pop
dec
fadd
or
test
or
or
or
movsl
pop
mov
adc
mov
cmp
or
dec
adc
mov
rorb
pop
add
fistpl
jnp
pop
xor
mov
or
in
imul
inc
xchg
dec
ret
clc
xchg
sub
and
mov
cmpsb
sbb
cmp
sahf
mov
or
mov
and
and
sarl
out
ds
dec
pushf
clc
dec
cld
mov
mov
into
mov
lock
xorb
test
out
cmpsb
inc
sbb
mov
pusha
popa
mov
xchg
sbb
icebp
jnp
xor
or
push
sbbl
loopne
push
or
and
rol
push
xor
fisubrs
mov
cld
pop
pop
mov
arpl
push
fsubr
jl
les
cli
stos
fisttps
mov
or
lcall
push
adc
out
jns
loop
push
jbe
mov
dec
pop
mov
jmp
xor
in
clc
dec
inc
mov
mov
imul
push
insl
loop
int
setae
lods
insl
sub
in
roll
jge
pop
cli
sbb
inc
rorl
out
scas
test
pop
das
jns
jg
test
adc
push
pop
xchg
cmpb
mov
test
loopne
sbb
fwait
cmp
ss
enter
lock
cmpsb
inc
sub
out
mov
out
adc
add
cmc
js
lahf
out
out
imul
shr
test
pop
mov
mov
jle
fadd
adc
lahf
repz
ret
insl
in
add
cmp
gs
mov
and
rcll
lret
movsl
jnp
jmp
test
add
fldenv
adc
mov
ss
xchg
shl
addr16
daa
sbb
pop
pop
xchg
les
adc
test
push
lods
outsb
jae
out
mov
and
sub
enter
mov
inc
mov
pop
inc
roll
pop
sub
adc
test
sbb
jmp
loop
inc
shl
hlt
xor
or
fisubl
add
push
mov
cmp
lods
in
ds
pop
pop
push
in
xor
rcrb
fdivs
cmpsl
add
into
xchg
mov
fiadds
mov
out
dec
lods
andb
mov
mov
in
push
aad
outsb
in
out
mov
inc
adc
call
sbb
fsub
hlt
insl
mov
lcall
fs
sar
pop
js
mov
pop
mov
and
mov
add
add
mov
xchg
mov
lods
fwait
or
cwtl
add
jp
pop
and
lods
rorb
cltd
sub
mov
inc
fnstcw
inc
fnstsw
cmp
cmp
int
add
sbb
xchg
cmpb
inc
scas
sbb
xchg
mov
pop
push
mov
lcall
dec
cmp
std
or
add
popf
pop
dec
pop
dec
pop
sub
sbb
pop
orb
inc
imul
pop
out
inc
cmc
out
pop
in
mov
or
sbb
fists
push
mov
mov
pop
sbb
xor
jecxz
inc
jle
mov
aad
dec
js
scas
pop
je
shlb
fisubrl
jmp
mov
pop
mov
lock
or
and
xchg
push
mov
sub
adc
jb
pop
pop
sub
inc
bound
add
testl
movsb
dec
sub
in
nop
stc
adc
testw
test
icebp
lods
jno
jle
lea
aam
insl
push
xchg
mov
mov
xor
mov
or
imul
mov
stos
sbb
cmp
aas
test
jge
fst
jne
mov
mov
jle
fidivrl
outsb
dec
xchg
push
mov
icebp
inc
mov
cmp
outsl
mov
jno
mov
imul
into
push
out
cmp
adc
cmpsb
inc
aam
js
push
mov
test
jecxz
in
icebp
xchg
push
xchg
scas
in
test
dec
adc
add
sub
push
iret
jb
xchg
icebp
call
divb
push
mov
cltd
sbb
jo
add
mov
pop
adc
je
sbb
ss
and
incl
dec
int3
xchg
test
aaa
dec
insl
pop
js
leave
push
das
bound
inc
and
ljmp
rorb
sbb
test
inc
pop
push
inc
mov
das
inc
cmpb
int3
hlt
sub
loope
add
fs
adc
pop
popa
call
mov
cmpsb
ret
mov
std
test
jl
imull
fcoml
inc
push
lods
jle
inc
add
mov
mov
xor
dec
cmp
cmpsl
pusha
insl
lods
movsl
add
scas
mov
imul
jg
adc
and
daa
and
jl
pushl
bound
jle
cld
movsb
push
enter
cmp
jmp
mov
mov
insl
push
in
push
gs
inc
insl
and
daa
nop
mov
leave
pop
fidivs
push
xchg
dec
aas
and
xor
xchg
xor
pop
mov
and
xchg
xchg
pop
mov
cwtl
lds
inc
enter
rclb
sub
fildl
and
ficoml
push
jb
flds
sbb
cmp
loop
test
arpl
push
sub
nop
pop
mov
andl
int
pop
mov
xor
test
mov
inc
sub
mov
mov
push
and
jmp
xor
push
inc
fistl
cltd
movsl
movsb
jmp
fildll
sub
dec
ds
loop
inc
mov
pop
inc
mov
int3
dec
fidivrs
jmp
dec
repz
mov
and
or
lods
push
mov
push
dec
mov
lds
cld
push
jmp
out
imul
jge
outsl
adc
decl
popf
adc
sbb
ljmp
in
add
test
sarb
xlat
fisubrl
addl
inc
push
in
jbe
int3
jo
imul
lods
movsb
popf
pop
sbb
sub
das
cmc
push
jb
xchg
jmp
inc
gs
inc
jmp
inc
stc
adc
les
adc
ss
pop
cs
scas
ret
rorl
mov
pop
aam
repnz
in
fmull
inc
adc
cmp
mov
fidivrs
mov
and
fisubs
mov
mov
adc
ja
call
xor
dec
pop
test
not
mov
add
loope
mov
fsubl
fbstp
sub
adc
sub
mov
sbb
or
call
and
fistpll
icebp
or
jecxz
enter
bound
es
inc
iret
adc
pop
add
fiadds
std
lret
std
mov
cmpsl
sbb
ss
jne
icebp
xchg
pop
cmpsb
fwait
test
xorb
loopne
test
pop
jge
or
loopne
fwait
xor
call
and
pusha
lahf
iret
out
in
adc
cmc
mulb
cmpsb
mov
fildll
cmpsl
mulb
subl
nop
inc
xor
mov
jbe
add
les
out
and
out
decb
jl
pop
xor
jbe
insb
mov
dec
popa
mov
ficomps
inc
aas
test
sub
xor
inc
or
xchg
mov
mov
push
and
xchg
jp
push
jp
es
mov
neg
mov
daa
lahf
scas
in
lds
call
mov
fcomip
ret
hlt
pusha
or
in
cmpsb
mov
and
sbb
lods
dec
sub
xchg
sbb
and
hlt
dec
cld
mov
loopne
mov
fwait
jmp
jb
test
adc
jl
adc
jmp
ret
jno
push
ftst
mov
mov
cmp
mov
add
mov
xor
push
mov
jge
push
adc
arpl
mov
add
jne
call
in
aaa
shl
or
ljmp
pop
push
push
fisttpl
mov
in
mov
pop
mov
fistpll
dec
lea
nop
push
push
pop
mov
push
aas
mov
or
es
push
imul
xchg
cmpsl
aam
pusha
xchg
and
fisttps
mov
adc
pop
mov
push
rcrl
stos
scas
imul
movsb
mov
bound
fdivrl
repnz
dec
mov
hlt
mov
sbb
push
mov
mov
fmulp
lret
inc
jecxz
xchg
es
xor
popf
sub
mov
xor
mov
mov
icebp
or
push
adc
pop
dec
sbb
mov
pop
cmp
mov
std
nop
cmp
add
mov
test
add
dec
je
add
pusha
pushf
inc
xchg
cmc
sbbl
push
xchg
sti
xchg
movsl
rcrb
pop
mov
adc
daa
rolb
mov
or
mov
xchg
add
xor
subb
mov
sub
mov
and
and
adc
or
add
push
outsb
mov
or
mov
mov
mov
call
es
divl
call
in
arpl
push
dec
jae
stos
call
or
pusha
xchg
xchg
repnz
inc
insl
cmp
sahf
mov
loop
dec
jge
sbb
adc
xchg
inc
sub
mov
inc
xor
movsl
scas
int
inc
add
add
inc
add
xor
popf
pop
inc
into
push
test
or
nop
mov
fists
repz
andl
and
xor
out
mov
repz
out
fidivl
jbe
into
push
jecxz
addr16
cmp
test
testl
mov
jno
out
test
push
cmp
lea
xchg
movsl
aam
call
insl
sbb
bound
pop
imull
push
xchg
ret
cmp
add
mov
xchg
fldenv
aam
je
jmp
push
xchg
push
dec
js
std
pop
cli
ret
daa
cmp
or
xchg
pop
sub
mov
das
pusha
or
add
andl
bound
out
cmp
test
fstl
xchg
mov
in
aaa
icebp
pop
fildll
test
dec
push
inc
lcall
push
cmpsb
pop
push
jno
loop
jecxz
hlt
lods
sbb
mov
rolb
xchg
lahf
movsl
fiadds
lcall
decl
call
movsb
or
es
xchg
fs
sub
test
mov
scas
mov
shll
push
push
insb
inc
dec
mov
push
adc
pop
fdiv
cmp
rorb
push
cmp
pop
jnp
push
mov
inc
inc
lcall
pop
mov
neg
cmc
mov
out
cld
int
std
pop
ret
xchg
adc
outsl
aad
movsb
ljmp
divps
pop
xchg
mov
xchg
popf
sub
shrb
pop
retw
je
jb
inc
dec
adc
inc
sahf
cwtl
test
mov
pop
andb
xchg
jl,pn
lods
and
std
test
rorl
sahf
dec
sbb
call
into
sub
loopne
roll
les
adc
aaa
mov
cmc
addr16
and
inc
loope
cmp
loopne
das
insb
aaa
cmp
sub
mov
in
jae
push
cld
inc
jecxz
sti
xchg
lods
leave
pop
fs
pushl
or
fildll
xchg
xchg
imul
btc
jl
cmp
aaa
outsb
hlt
jbe
jl
xor
nop
mov
into
adcl
loope
xor
test
loop
decl
dec
and
cltd
jae
inc
cltd
mov
aam
into
sbb
jb
add
das
inc
pop
push
sub
mov
push
sub
xor
ds
fidivs
mov
aam
enter
ljmp
outsl
jo
add
lds
or
loopne
pop
or
sub
fcmove
pop
pop
mov
xchg
mov
decl
xchg
xor
mov
lock
or
jno
mov
sti
incl
adc
mov
imul
mov
adc
xchg
lea
mulb
arpl
sarb
into
sub
pusha
pop
dec
adc
shrb
outsb
addb
and
jg
ljmp
mov
test
lret
mov
mov
xchg
scas
call
dec
movsl
add
mov
pop
enter
jl
sbb
and
movsb
rol
mov
daa
or
cmpsl
or
out
roll
xlat
jle
jo
les
fwait
mov
decl
leave
sub
repnz
test
push
xor
jo
movl
xchg
aad
cld
or
into
insl
cwtl
fidivrl
fs
out
outsl
in
les
daa
jecxz
cmpsb
je
mov
adc
cmp
adc
mov
mov
and
in
mov
ds
cmp
sub
xor
sbb
xchg
incb
push
out
adc
ret
sub
mov
mov
mov
push
pop
subb
mov
lock
inc
mov
adc
shlb
mov
and
scas
xlat
xchg
loopne
shl
test
xor
xchg
jae
outsl
mov
ret
adcl
fwait
outsb
xchg
shlb
ret
or
fnstsw
xor
cmp
lret
scas
mov
fists
rorb
out
call
jg
mov
adc
push
push
and
or
jnp
imul
jns
popa
and
incl
adc
or
ljmp
cmpsb
pop
test
into
push
add
testb
aaa
jmp
mov
loope
out
push
aaa
sbb
out
jb
push
adc
js
adc
jmp
xchg
in
inc
aad
xchg
adc
pop
mov
inc
sub
dec
and
clc
call
jmp
mov
std
out
add
call
cwtl
andl
lock
hlt
lcall
lahf
inc
inc
inc
pop
cld
sub
pusha
mov
cld
sarb
dec
pushf
cmp
dec
and
fsubrs
xor
mov
mov
cs
sbb
fwait
add
xchg
ljmp
push
icebp
inc
mov
notb
fimull
scas
jp
or
sar
ljmp
data16
jmp
lret
lcall
push
xchg
dec
mov
cli
dec
sbbl
in
push
dec
pop
jae
dec
pop
sahf
mov
adc
aas
shlb
push
out
arpl
jno
pushl
mov
sbb
in
loopne
cmc
scas
rolb
call
adc
push
outsl
mov
mov
jg
mov
lret
iret
aad
jl
out
add
push
dec
cld
sbb
fcmovne
xlat
sbb
test
pop
mov
pop
adc
xchg
jg
adc
movsl
xlat
cmp
jmp
xchg
mov
pop
cmp
xchg
mov
pop
adc
aas
inc
xchg
pop
sub
push
or
shll
sti
rorl
jmp
pop
imul
jle
clc
adc
mov
cltd
lea
jg
in
hlt
cltd
test
dec
rcll
mov
rcpps
pop
pop
jge
call
cs
scas
lret
scas
pop
xchg
fidivs
xlat
jo
xor
push
adcb
rorl
and
adc
dec
push
xor
mov
mov
xor
and
decl
cld
push
mov
cmp
jg
jg
loop
shll
incl
movsb
dec
clc
fwait
mov
or
lcall
andl
leave
ljmp
into
pop
repnz
dec
fnstcw
popa
stos
pop
stos
mov
fildl
dec
cmp
or
adc
sbb
inc
mov
pop
cltd
test
xchg
lds
data16
cld
jp
test
outsb
add
insl
jmp
in
std
jge,pt
mov
dec
leave
push
sub
aaa
clc
push
fcompl
pop
sub
adc
sbbl
push
daa
jnp
inc
dec
dec
movsb
push
lret
mov
xchg
jnp
adc
rcl
mov
addr16
call
cmp
add
push
pop
xor
cli
jge
shrb
in
mov
arpl
push
call
mov
mov
add
push
xchg
xchg
stos
pop
jecxz
outsl
out
movsb
stos
mov
add
jo
cwtl
push
xor
xchg
int3
sub
xchg
xor
jg
mov
cs
sub
push
movsb
xchg
jp
xor
xchg
xor
fbld
pop
inc
arpl
and
int3
push
mov
imulb
in
add
mov
lods
mov
arpl
jnp
pop
rcl
test
lret
or
mov
xchg
jge
xor
sbb
pushl
sbb
les
cld
mov
test
xor
popa
fisttps
shrb
xor
mov
sar
incl
sub
xlat
in
divb
rorl
repnz
ljmp
outsb
test
arpl
shlb
call
xchg
mov
cmp
jae
xor
xor
fcomip
mov
fstl
inc
fstpl
push
pop
out
xchg
and
jg
cmp
ds
and
mov
sbbl
sub
sarl
lret
nop
out
loop
fmul
pop
push
rolb
in
xchg
arpl
dec
xor
cli
insb
mov
add
mov
scas
cmp
push
mov
int
cmp
scas
push
inc
mov
in
mov
push
pushf
leave
cpuid
outsl
out
cmp
jns
inc
pop
aad
ret
sbb
in
push
jmp
nop
and
lcall
sbb
jmp
out
sub
stos
cmp
out
mov
dec
sub
sarb
push
dec
gs
aad
lcall
xorl
mov
mov
jno
outsl
popa
and
lock
ljmp
sub
cmp
jp
pop
icebp
pusha
sbb
pop
sbb
inc
or
pop
clc
mov
pop
mov
in
xchg
and
dec
pop
outsb
lods
xlat
mov
decl
cltd
or
pop
mov
xchg
leave
or
inc
pop
lcall
pop
xchg
addr16
pop
cmp
mov
call
mov
fnstsw
les
and
out
push
sub
ljmp
or
sahf
and
mov
adc
mov
or
int
mov
imul
xchg
inc
inc
push
jle
insl
jl
xchg
push
pop
adc
cltd
loopne
fistps
ds
fucomip
xor
insb
push
mov
daa
test
jae
ja
pop
out
mov
rcll
shl
mov
movsb
or
leave
and
fisttps
pop
pop
out
dec
faddl
mov
lcall
and
cmpsl
into
push
jp
pop
and
cmc
das
push
inc
scas
ljmp
decb
loopne
out
les
cld
push
jmp
ret
sub
mov
cwtl
xchg
ljmp
or
or
rcrb
incl
jmp
idivl
sub
xchg
fidivl
shrl
adc
outsl
cld
decl
jmp
jmp
mov
data16
sub
in
cmc
mov
dec
mov
pop
sbb
cmp
loope
orl
mov
clc
ficomps
movsl
sar
inc
ja
cmp
and
aad
bound
push
push
rorb
call
mov
mov
push
pop
adc
jo
out
loopne
into
lahf
jae
sub
xchg
loope
sar
test
gs
adc
mov
imul
iret
or
icebp
pushl
or
jg
test
push
shl
jno
mov
add
and
addb
inc
negb
or
xchg
pop
jmp
loop
pop
pusha
mov
add
in
adc
push
je
mov
or
test
test
aaa
cmp
repnz
dec
in
xorl
les
sub
sub
outsl
cld
dec
or
and
sbb
cmp
lds
scas
clc
outsl
std
out
lock
mov
add
loope
xchg
pop
pushl
cmp
or
xchg
sar
into
mov
fistl
imul
insl
xor
cmp
fs
jge
jecxz
repz
fstps
xor
adc
sar
jg
pop
rcrw
lret
aas
pop
insb
outsb
mov
lcall
cld
jo
in
aaa
clc
mov
cmp
push
inc
fdivrl
std
cmpsb
pop
lret
sbb
insl
hlt
jg
jmp
cld
xchg
pop
push
dec
add
xor
mov
lods
orb
dec
jb
lock
cli
incl
mov
jp
xor
xchg
adc
adc
dec
popa
ret
jg
xor
adc
loope
insl
push
or
jecxz
rorb
push
add
add
jg
call
mov
cmpsb
ficoml
pop
roll
cmpl
lcall
ror
xchg
cmp
lcall
lock
add
push
adc
out
sub
bound
mov
imul
mov
insl
out
fucomip
and
gs
mov
incl
aaa
int
in
fisttpl
decl
mov
adc
mov
push
outsl
adc
dec
cwtl
ja
popf
lods
lods
decl
jl
dec
add
jne
xor
inc
or
clc
popa
mov
movsl
and
xchg
jmp
jp
test
sub
imul
jmp
push
fistps
and
jne
push
rclb
imul
nop
in
inc
clc
xchg
outsl
lcall
xlat
inc
loope
or
dec
inc
cmp
xchg
lahf
inc
mov
stos
pushf
outsl
push
or
out
jle
lods
lret
mov
into
leave
jae
test
mov
mov
mov
sahf
imul
hlt
loope
mov
lcall
dec
push
insl
jo
add
mov
cmp
jecxz
pop
repnz
clc
dec
daa
dec
aas
push
ret
or
fdivl
imul
adc
pop
jns
out
xchg
pop
outsl
dec
jp
ljmp
pop
fs
pop
sub
repz
cmpsl
mov
jbe
xchg
lcall
jge
pop
xchg
mov
loop
push
in
or
cmp
add
add
incl
or
sbb
or
xchg
and
cmp
scas
cmp
xchg
push
sub
xor
aas
and
out
inc
mov
push
and
xorl
fidivs
pop
pushf
add
adc
pushl
or
popf
push
push
shll
mov
sahf
icebp
ret
call
imul
inc
lret
sbb
mov
or
lea
and
mov
jl
jg
adc
jg
pop
cltd
mov
decl
jge
cmpsl
pop
cwtl
xor
and
popf
xchg
adc
mov
sbb
ljmp
les
lcall
dec
cmpsb
dec
or
pushw
roll
pop
sub
call
insb
or
mov
jns
adc
call
sbb
stos
mov
dec
cwtl
push
rclb
movsb
repnz
test
cmp
aam
xchg
bound
sub
cld
and
sti
js
lcall
mov
repnz
sbb
adcb
or
mov
out
lret
jmp
in
repnz
in
jle
mov
or
xchg
rol
out
movsb
xchg
xchg
mov
adc
mov
push
cli
test
ljmp
jb
cmp
mov
in
sbbl
aas
loopne
leave
pop
test
ljmp
ds
mov
push
push
scas
mov
cltd
sub
jge
fdivl
adc
stc
bound
xchg
stos
popa
cmpsb
lcall
loope
mov
push
daa
mov
ljmp
mov
adc
mov
jl
out
out
orl
inc
scas
xchg
and
stc
jmp
mov
and
shr
add
jp
inc
enter
mov
cmp
mov
out
or
inc
or
fldl
cmp
lea
lock
dec
pop
xlat
call
lret
std
xchg
sub
jbe
sub
lcall
std
cmp
loopne
mov
adc
ja
mov
iret
mov
push
mov
jmp
lea
jae
lret
repz
xchg
hlt
mov
mov
addb
jno
jno
adc
lock
outsl
std
push
das
sbbb
pop
mov
fistpll
mov
sub
int
xor
cmpsb
add
push
lcall
jmp
inc
cmp
ret
in
push
shr
dec
icebp
rcrl
push
loopne
and
mov
aaa
inc
cmp
les
popa
aaa
push
outsb
int
test
fcompl
negb
mov
enter
daa
std
pushl
clc
pop
mov
repnz
mov
and
jge
or
decl
xor
xchg
into
mov
int3
lahf
ja
add
and
xchg
xor
sbb
mov
jo
pop
jge
in
stc
mov
sbb
out
call
fisttpll
push
dec
xor
pushl
testl
insb
sub
jge
jg
inc
xchg
jmp
dec
push
arpl
std
decl
lcall
mov
mov
ret
shlb
mov
jmp
mov
out
int
mov
jb
jbe
andb
insb
rcrb
testb
std
add
mov
push
imul
test
pop
je
jmp
les
xor
pop
in
fistpl
rcll
insb
daa
mov
ljmp
pop
pop
pop
mov
jg
jp
fsub
or
dec
test
pop
mov
pop
mov
in
les
pop
hlt
imulb
std
mov
cmp
cmp
sti
jbe
lcall
lock
adc
or
cmp
adc
mov
xor
pop
or
fucom
incl
push
lods
push
loop
cmp
sbb
mov
push
xchg
pop
pop
loop
imul
inc
out
ljmp
or
push
mov
add
pushl
sub
and
fcomps
pop
fwait
sub
push
lods
incl
mov
sub
mov
dec
push
adc
or
jmp
cltd
gs
push
xlat
or
ljmp
insl
mov
lock
ljmp
aam
jno
fstl
rclb
ret
push
in
in
stos
or
fldt
cmp
adc
pushf
lret
push
mov
insl
jp
mov
stos
in
mov
cwtl
mov
pushl
cmp
call
mov
imul
icebp
xchg
testb
lcall
sbb
fdivrs
rcl
mov
jecxz
incl
mov
fbld
cli
outsl
testb
pop
or
repnz
incl
jb
andps
pop
cmp
shll
pushl
sbb
aam
jp
not
or
xor
add
dec
jg
call
idivb
dec
ss
or
mov
and
dec
sar
incl
enter
dec
shlb
jmp
pop
xorb
lock
pushl
mov
fistps
subl
push
ficoms
into
cli
in
jmpw
lock
mov
fwait
pop
outsl
icebp
sti
adc
jno
or
sahf
sbb
decl
bound
sub
add
cltd
cli
cmp
ljmp
push
jne
popa
repnz
dec
imul
pop
and
mov
and
push
or
mov
into
and
adc
fucom
sarl
xlat
mov
jno
and
addb
dec
fwait
mov
pop
addl
and
imulb
lcall
xor
mov
jnp
jne
mov
pop
fiaddl
jns
sti
xchg
mov
adc
xchg
es
mov
cmp
in
sarb
lahf
ljmp
and
adc
xor
fmuls
push
jecxz
testl
cmp
jmp
mov
pop
cmpsl
jb
jnp,pt
movsl
mov
dec
scas
movsl
and
mov
popf
cmp
loope
in
ret
cli
cmpsb
mov
jno
xchg
xor
sti
sub
scas
shll
decl
sub
xchg
pop
sbb
xor
aam
xchg
lock
xchg
mov
testb
push
push
xor
cmp
inc
in
pop
lahf
push
jnp
jnp
inc
mov
lcall
or
jb
loope
add
rcll
xlat
jae
jne
in
pop
inc
in
add
jmp
ljmp
mov
xchg
add
and
xchg
movsl
jg
lcall
adc
and
sub
push
out
and
mov
or
shl
pop
lea
movsb
xchg
cmp
out
mov
sub
add
sbb
cmp
add
pop
scas
mov
mov
lcall
call
mov
mov
das
or
cmpsb
std
pushf
gs
mov
decl
std
xchg
cmp
or
imul
jo
in
dec
mov
sahf
pop
popa
cmc
or
and
gs
ja
jecxz
cmp
shl
das
hlt
ljmp
or
jmp
pop
mov
jne
je
cmp
mov
imul
lcall
jl
fmulp
and
jmp
test
icebp
pop
xor
xor
pop
pop
aam
mov
iret
cmp
xorl
pop
dec
mov
pop
incl
mov
ret
ljmp
sbb
scas
call
and
mov
cli
pop
mov
push
rol
pusha
pop
mov
mov
mov
and
xor
mov
call
in
cmp
xchg
aas
outsb
sub
inc
stc
pop
sahf
jp
push
dec
stos
hlt
lock
jmp
scas
nop
inc
lds
jo
out
jb
push
subb
ljmp
data16
pushl
jge
aad
nop
cwtl
adc
lods
push
pop
test
sbbb
add
xlat
dec
jge
notb
pushf
mov
test
push
mov
outsl
push
jnp
inc
jnp
add
dec
test
movsl
in
ljmp
pop
cmp
cld
dec
inc
mov
mov
fs
imul
dec
adc
sbb
sbb
or
std
call
subl
ljmp
cltd
sbb
js
lods
les
ljmp
std
pop
test
insl
dec
xor
and
sti
xchg
jl
ljmp
dec
fisttps
pop
aad
inc
lcall
shlb
push
lcall
fadds
mov
das
cmc
mov
and
mov
daa
es
data16
mov
cmp
mov
movsb
jns
shlb
sbb
push
int
jl
pushl
push
sub
ds
inc
mov
jmp
cs
or
insb
iret
mov
jg
sbb
and
out
stos
nop
cmp
add
loope
cmp
xchg
adc
call
jo
push
js
mov
pop
adc
out
inc
sar
movsb
mov
lret
xchg
push
ljmp
jmp
in
jle
mov
sub
and
sub
jmp
jl
jae
aaa
pop
add
jno
icebp
call
mov
out
push
jo
or
and
andps
cmp
mov
ja
xor
cmp
add
imul
decl
outsb
push
out
fcoms
aam
ds
call
movsb
jmp
or
stos
dec
jbe
popa
sbb
mov
add
mov
adc
cli
push
pop
sbb
mov
add
push
or
jno
pop
loop
push
sub
notl
icebp
lods
mov
shlb
in
scas
bswap
lret
mov
pop
clc
pop
sub
insb
je
stos
mov
mov
shll
movsb
lods
fcoms
stos
in
adc
cmpb
mov
sub
cli
sti
and
xchg
jne
and
xchg
daa
out
mov
mov
push
in
pop
icebp
fidivrs
out
push
push
jp,pt
lret
in
pop
mov
pop
decl
mov
cmp
arpl
in
jno
out
movsl
jae
cmp
decl
mov
xor
cmp
or
mov
jne
movsb
pusha
push
fsub
not
addr16
push
mov
addl
imul
sub
call
inc
pop
cmp
adc
repnz
call
shlb
sub
clc
and
mov
add
jns
cld
test
push
icebp
sar
mov
orl
pushl
clc
pusha
insb
pop
roll
xchg
sbb
loop
pop
pusha
push
push
sbb
or
jg
ljmp
xchg
loope
addr16
inc
je
test
push
test
pop
sub
push
mov
imul
orl
cmpsl
mov
mov
fcoms
pusha
and
data16
imul
mov
call
push
pop
lahf
pusha
xchg
div
sbb
pusha
jb
cmp
daa
dec
sbb
aad
int3
dec
fwait
cmpsb
adc
mov
decl
leave
leave
adc
pop
cld
test
adcb
into
ljmp
push
jb
mov
ret
push
mov
push
dec
nop
jno
pop
inc
jmp
std
jmp
int
and
in
mov
xchg
xor
in
adc
sbb
into
andl
sbb
jg
dec
cmp
jg
aad
stos
ja
call
jae
fildll
add
testl
xorb
mov
cmp
dec
dec
mov
fnsave
rorl
xor
pop
jmp
nop
mov
adc
fldt
test
pop
cld
mov
jle
push
hlt
push
nop
inc
cmc
cwtl
cs
sti
jns
dec
idiv
jg
fucomip
jno
std
aad
hlt
lds
xchg
adc
loopne
aad
sahf
in
jle
jle
pop
push
dec
js
dec
sbb
lcall
clc
add
mov
push
xchg
push
xchg
hlt
test
test
pop
ljmp
in
nop
xchg
rcll
loopne
stos
lcall
push
and
loope
dec
lret
xor
pop
popf
jae
push
or
aam
iret
push
mov
call
repnz
or
dec
sahf
cwtl
mov
jge
decl
pop
sbb
xchg
test
aaa
lcall
jg
rcrb
fists
adc
jg
mov
dec
jb
or
sti
ljmp
xor
bswap
or
inc
out
orb
fildll
xlat
decl
insl
inc
mov
dec
arpl
nop
stc
ja
incl
and
push
xor
xor
inc
adc
add
sub
imul
cld
mov
add
jge
decb
mull
mov
xchg
ret
add
popa
adc
cmp
push
mov
int
outsl
ljmp
and
int3
mov
test
das
push
rol
and
fadds
and
jle
std
mov
cltd
in
out
add
and
jbe
xchg
sbb
call
outsl
jno
stos
inc
out
pushf
out
aad
xchg
cmpsl
push
pop
mov
ljmp
decl
fld
incb
jmp
sbb
adc
xor
ljmp
push
adc
lret
dec
repnz
inc
and
outsl
inc
sub
inc
mov
inc
clc
adc
jns
push
lods
test
push
jg
scas
scas
and
into
xor
jg
andl
push
call
mov
jmp
mov
jno
imul
movsb
mov
inc
sbb
leave
mov
incl
cli
mov
mov
ss
aas
pushf
and
pushf
add
mov
pop
sbb
sarl
cmp
insl
fildll
xchg
sub
mov
push
mov
iret
push
xor
pop
cli
das
test
rorl
push
test
mov
decl
stos
dec
out
jb
or
in
cltd
adc
pop
loop
add
nop
rcl
push
pusha
sbb
inc
add
xchg
mov
shr
mov
lea
scas
sub
inc
mov
ret
outsl
jl
fldl2e
jle
xchg
inc
sub
inc
adc
jne
xchg
jmp
jns
out
test
mov
inc
mov
flds
enter
mov
mov
sar
incl
pop
sahf
stc
dec
xchg
bound
sti
aad
xor
push
movsb
repnz
mov
jne
mov
dec
test
sub
jle
stc
pop
lret
xchg
mov
cmp
sub
jns
lcall
fdivrs
push
mov
push
mov
mov
and
pop
cli
pop
jmp
pop
inc
cld
jno
and
stc
nop
jne
mov
test
decl
into
cltd
pusha
hlt
and
inc
pop
movsl
inc
icebp
imul
lret
incl
or
sub
adc
imul
pop
js
lock
call
loop
sub
ret
out
push
popa
jle
sub
imul
das
xchg
mov
mov
lea
add
std
cli
jecxz
int
mov
int3
mov
xchg
es
decl
jle
xchg
xchg
push
mov
cwtl
arpl
repnz
mov
jg
pushl
repz
bound
daa
loopne
in
dec
adc
decl
xor
and
vpcomb
lfs
test
jmp
xor
pop
lods
mov
jge
xchg
in
aas
roll
cs
dec
jl
and
and
popf
push
test
mov
ljmp
jp
xchg
repz
popa
lret
fsubl
push
dec
jecxz
lods
inc
push
lret
shll
std
lret
lods
mov
enter
push
popf
aad
mov
ljmp
jo
or
push
mov
mov
iret
or
mov
and
cli
mov
xor
cmpsb
sub
mov
gs
mov
lea
adc
jg
pop
push
insl
insl
xor
adc
dec
fwait
stos
sbb
push
lret
inc
pop
clc
jae
jg
adc
add
in
inc
xlat
xchg
frstor
jle
adc
inc
pusha
xor
lods
cli
pop
cmp
and
dec
std
lcall
jno,pt
icebp
xchg
movsb
sbb
sub
stc
fnstcw
mov
ret
insl
xor
xchg
lods
dec
sti
jo
nop
nop
out
pop
popf
aaa
aad
push
pop
adc
jp
xchg
imul
pop
dec
lock
mov
pop
fiaddl
inc
arpl
call
jl
add
jmp
test
xchg
jo
lahf
lock
push
mov
adc
aam
xchg
arpl
cwtl
imul
loopne
lds
incl
cmpsl
fwait
inc
mov
and
fcomps
mov
arpl
pop
dec
sbb
movsb
inc
dec
scas
mov
call
aaa
lods
rclb
cmp
jns
lcall
ljmp
add
lods
mov
add
cmpsl
pop
js
enter
and
lahf
mov
sbb
push
push
sbb
popf
jno
cmpsb
mov
les
bound
dec
cmp
dec
or
imul
fistpl
inc
fisttpl
add
sub
jmp
movsl
mov
insl
or
cmc
cmpsb
mov
cld
xchg
int
les
scas
jp
inc
pop
inc
nop
outsl
pop
or
cmp
jmp
add
mov
inc
loop
add
les
sub
arpl
idivl
int3
mov
add
sub
cmp
inc
pop
je
pop
jo
test
pushl
lea
gs
sub
call
inc
mov
rcll
mov
dec
fwait
cmp
or
and
ljmp
jo
cmp
inc
bound
lock
shll
dec
repz
mov
std
test
test
mov
ret
adc
jecxz
fisubrs
mov
mov
ljmp
shlb
outsl
xchg
lret
pop
testl
call
push
mov
pop
xlat
repnz
aas
lcall
inc
push
jb
mov
stc
out
pushl
clc
fiaddl
jl
adc
mov
xchg
iret
mov
adc
jae
das
cli
lock
dec
fidivl
mov
cmp
out
mov
fstpl
inc
add
xchg
pop
ljmp
mov
inc
fsubrs
lods
int3
jo
leave
pop
imul
jp
xchg
and
aaa
test
inc
xchg
mov
inc
jle
loop
ljmp
inc
call
mov
mov
repz
stc
das
pop
add
scas
scas
add
shll
or
cmp
pop
mov
sets
or
andb
arpl
xchg
lahf
iret
or
pop
stos
shlb
clc
fildll
fnstcw
outsb
mov
incl
pop
js
sahf
in
pop
cmp
add
mov
call
popf
cmpsb
out
rcr
push
sbb
push
out
lret
xchg
push
aas
add
nop
push
xor
fldt
xchg
cmp
pushl
jg
xchg
call
add
dec
shlb
xchg
lea
test
jg
or
rcr
imul
xor
cwtl
mov
fbld
xchg
mov
std
push
nop
rolb
jg
push
jmp
imul
aam
popa
mov
out
fs
inc
sbb
sub
pushf
call
mov
stos
dec
js,pt
sub
dec
pop
insb
mov
xor
ljmp
lcall
lods
mov
ja
xor
loopne
int
rcrl
lcall
ds
jecxz
sbb
aaa
pop
ljmp
jl
cmpsl
sbb
into
push
inc
std
jmp
mov
or
pop
ret
sub
call
ret
or
shll
out
jmp
push
mov
lcall
or
loope
lods
xor
call
rclb
inc
pop
dec
fdivrl
pop
in
sub
cltd
inc
in
jb
inc
aaa
std
imul
jecxz
pushl
mov
sub
inc
cmpb
mov
xor
lcall
inc
fldt
sub
loope
mov
add
incb
std
incl
sbb
mov
xchg
aad
inc
cltd
test
out
or
sahf
test
incl
decl
xor
jns
addl
dec
mov
scas
pop
dec
mov
pop
mov
add
and
sub
out
repz
ljmp
sahf
fwait
dec
push
cmc
jg
ljmp
into
bound
scas
subb
adc
call
and
jb
or
xor
xor
push
inc
fs
fcomi
mov
out
das
cmc
jmp
cs
xor
arpl
dec
cmp
scas
add
aad
pop
in
std
jmp
xchg
jbe
cmp
and
xor
mov
incb
in
inc
test
arpl
shlb
das
aad
pushl
or
ret
ljmp
nop
testl
jo
cmp
jg
jno
stos
and
imul
iret
ret
inc
lds
or
dec
and
push
mov
add
xor
mov
or
fcmovu
loopne
add
insl
pop
or
sbb
jmp
jnp
enter
call
adc
ss
add
aas
sbb
jg
decl
dec
xchg
scas
inc
xchg
mov
add
push
mov
jmp
jg
push
stos
sub
mov
mov
adc
rcrb
jg
pop
je
sbb
jmp
dec
add
fnstsw
push
push
psllw
ljmp
inc
pop
cs
lods
fwait
push
lds
out
jg
popf
cmc
test
ss
mov
dec
imul
mov
gs
mov
add
inc
aad
imul
pop
sub
mov
cli
jg
decb
cmpb
xlat
loope
sbb
inc
adc
pop
ljmp
int3
jl
les
and
mov
mov
in
jb
inc
jecxz
dec
cmp
and
bnd
jns
flds
xchg
imul
rcl
cli
das
hlt
or
lea
je
mov
xchg
jbe
jo
cmp
insb
repz
into
cmc
adc
aam
jns
mov
shlb
bound
ds
jno
pop
cmpl
inc
xchg
daa
add
sub
push
cwtl
insl
dec
pop
aaa
xchg
jmp
repnz
adc
mov
mov
mov
mov
xorb
mov
adc
ss
adc
lahf
inc
sub
jmp
loope
xorb
cs
xchg
inc
xchg
and
mov
fbstp
dec
push
xlat
aam
loopne
pop
inc
xchg
jb
fidivrl
lods
jmp
pusha
rcrb
jmp
pop
lcall
out
sarl
xor
adc
ss
ret
es
sub
dec
adc
lret
mov
mov
inc
and
jg
jmp
mov
in
lahf
jl
rolb
pop
mov
ret
and
xlat
cmp
stos
cmp
mov
dec
xchg
jecxz
mov
pop
mov
test
ljmp
hlt
or
rclb
lret
test
push
mov
sti
mov
mov
mov
pop
sbb
dec
leave
xchg
call
mov
mov
fistl
out
es
push
pop
jp
xor
sbb
dec
call
clc
incl
gs
xchg
das
rclb
dec
bound
sahf
fs
pop
mov
push
xor
dec
xchg
imul
jl
cmpsb
push
fwait
loope
pop
xor
call
nop
push
ret
lds
pop
test
cmpsb
popf
sbb
adc
xchg
mov
mov
call
clc
pand
add
inc
dec
mov
xchg
lods
push
mov
movsb
add
sti
insl
inc
fdivs
mov
aad
sti
call
lret
mov
inc
xor
in
dec
xchg
inc
inc
push
test
lret
and
mov
cmp
decb
dec
hlt
and
stos
jbe
lcall
xchg
push
mov
xchg
bound
pop
sbb
cmc
cmp
pushl
mov
shlb
push
mov
fsubl
pop
sub
loop
jae
pop
jl
incl
out
gs
and
cmp
and
pop
and
xchg
inc
mov
cmp
outsb
mov
or
jg
out
mov
or
lahf
scas
inc
add
push
scas
pop
sub
decl
mov
adc
sbb
imul
in
ss
popf
js
xor
idivl
jns
les
aam
and
decl
std
xor
cmp
mov
xor
mov
cmp
ljmp
cli
shl
or
push
lds
mov
cmp
fldt
jg
add
mov
stos
xor
flds
repnz
push
mov
cmc
pop
lret
cmpsb
xor
lret
add
pop
subb
movsl
rolb
inc
xchg
sbb
bnd
das
out
mov
fldl
jmp
stos
mov
xor
lcall
fstpl
leave
push
mov
andb
out
fnstenv
xor
call
push
push
pop
shrb
fucomi
jmp
jmp
scas
jg
cltd
lea
jno
sbb
ret
cwtl
mov
mov
push
add
lock
inc
cltd
mov
sahf
or
cmpsb
incl
mov
jle
dec
adc
lea
cmc
fildl
mov
ljmp
cmp
push
ds
fisubs
mov
arpl
mov
ljmp
push
adc
jo
cmp
out
cwtl
mov
sbb
pop
or
imul
dec
aas
mov
cmpsl
sahf
lahf
movsb
insl
inc
decl
jmp
dec
pop
repnz
jmp
call
mov
push
aam
push
and
mov
mov
daa
imul
lea
jmp
andb
loope
pause
sti
mov
rcrb
aad
or
dec
cli
movsl
lcall
mov
orl
sub
pushl
hlt
scas
or
popf
cmpsl
cmp
arpl
pop
enter
cld
flds
jecxz
cmp
clc
lcall
xchg
pop
loope
aad
std
dec
inc
pop
out
pushf
rorl
cwtl
add
pusha
adc
mov
aaa
cli
fisttps
inc
dec
cs
dec
mov
mov
and
pusha
or
ljmp
jo
dec
pop
cmpsl
xor
ds
adc
push
pop
jl
pop
sub
sahf
add
fucomip
test
dec
lcall
mov
dec
xor
sub
ss
incl
cli
xchg
int3
divl
mov
lea
pop
pop
mov
scas
or
jnp
and
ret
pop
mov
jmp
push
and
jmp
or
add
xor
decl
adc
out
imul
adc
mov
outsl
sub
pop
sub
pop
dec
decl
in
ss
iret
jb
jmp
out
inc
dec
xorl
leave
call
lcall
push
out
mov
xor
cmp
or
or
lahf
and
sub
fimull
insb
sbb
incl
xchg
repnz
sbb
adc
loopne
xchg
sbb
imul
decl
jp
ds
xor
scas
leave
inc
inc
out
xchg
stos
test
push
sti
dec
mov
dec
mov
pop
xor
add
jg
aaa
adc
es
stos
into
int
or
dec
cld
call
or
xchg
jbe
jp
pop
int3
aaa
or
mov
iret
dec
ss
cmpsl
daa
cmp
xorl
cmp
dec
pop
jmp
icebp
gs
sbb
adc
rcrl
sbb
mov
cld
sar
jmp
pusha
and
mov
xchg
and
loope
cld
fildl
jmp
idiv
outsl
hlt
mov
jb
add
mov
popf
in
scas
sub
je
and
aad
outsl
cld
test
ds
mov
xchg
mov
jns
shrb
and
xchg
mov
mov
jge
dec
lret
test
jne
sti
mov
add
mov
push
outsl
mov
aam
cmp
in
xor
test
and
and
fldt
aaa
jg
imul
clc
fxch
das
lcall
ljmp
notl
dec
jns
adc
mov
jo
cmp
mov
das
insl
cmc
cmc
aaa
jge
mov
pop
add
xor
pop
lock
out
loopne
jg
popf
dec
cli
inc
and
xchg
cmpb
mov
repnz
mov
popf
and
sbb
aas
andb
push
fstl
and
cmc
adc
pop
push
popa
incl
inc
fwait
inc
xor
mov
cmpsb
int
cmp
mov
cmpsl
jp
mov
add
xchg
adc
and
clc
ljmp
push
ret
ljmp
xchg
sarb
jmp
pusha
je,pn
aad
imul
shlb
test
mov
or
and
dec
mov
xor
mov
push
adc
pop
les
adc
call
sub
dec
adc
add
push
das
lock
mov
add
aaa
or
dec
insl
daa
push
add
pushl
xchg
adc
aaa
jo
pop
das
pop
arpl
mov
js
pop
cmpl
fidivl
adc
pop
aad
push
mov
and
and
xor
mov
lcall
lcall
pop
lds
lds
in
imul
in
cmpsl
lock
jmp
add
push
jl
fisttpl
imul
jne
cmp
or
cmc
lods
or
je
mov
dec
mov
push
outsl
shr
repz
push
sub
in
outsl
sub
dec
stos
fwait
jb
adc
addr16
push
add
cmp
push
push
mov
and
and
lods
fstps
cltd
test
mov
jp
call
notb
bound
jbe
notl
sub
xor
clc
xchg
mov
insl
sahf
jo
repz
loop
push
popf
xchg
lds
push
fistps
inc
cmpsb
xor
mov
scas
movsl
xor
sub
xor
mov
int3
lea
sbb
mov
inc
bound
ja
and
xor
mov
cmp
ja
sarl
mov
and
sub
cmc
jg
push
daa
push
sbb
cmpsl
dec
jne
jno
stos
out
xor
loop
hlt
add
imul
mov
cmp
outsl
gs
mov
out
inc
adcb
ror
xchg
push
mov
cli
sbb
or
adc
pop
jne
xchg
arpl
in
les
mov
movsb
jae
repnz
sub
mov
loop
fisttpll
pop
das
ss
xchg
mov
mov
cmp
mov
loopne
cmp
mov
imul
mov
xor
lods
adc
fbld
mov
out
sub
jbe
xor
test
scas
gs
sbb
test
xchg
adc
jg
add
push
and
test
xlat
fmuls
xlat
mov
add
jb
idiv
jg
jmp
ret
mov
or
loopne,pn
sub
pop
inc
inc
push
cmp
cmp
inc
ljmp
arpl
inc
lret
aaa
addr16
in
cmp
jg
adc
outsl
shrb
fsubl
test
mov
fwait
jns
insl
push
mov
imul
hlt
decl
fs
fstpt
stc
enter
ret
mov
sti
pop
mov
jg
andb
dec
sbbb
lret
sub
cmpsb
pop
popa
mov
fistl
mov
sbb
sbb
mov
or
fs
push
push
jg
add
and
mov
sti
outsl
dec
orl
mov
insl
add
xor
xor
loop
jg
lock
mov
and
xlat
and
push
insl
std
mov
inc
mov
fidivl
enter
or
lcall
ljmp
xchg
shll
subb
mov
sbb
and
push
bound
lret
sbb
fwait
jg
mov
out
mov
adc
adc
push
leave
xchg
stos
adc
ljmp
mov
ss
push
icebp
popa
aad
or
jp
sub
jno
adc
lcall
jns
lods
dec
mov
fcomps
pusha
mov
sbb
imul
ljmp
adc
cltd
adc
sahf
and
jl
test
mov
cmc
ret
aad
mov
xchg
mov
repnz
or
cmp
adc
push
aaa
clc
decl
sub
inc
jne
mov
out
mov
jns
ret
outsl
jb
or
icebp
mov
adc
lcall
jg
call
mov
jge
mov
cmpb
xchg
cmp
out
mov
call
xchg
cld
fwait
xchg
push
rorl
pop
lret
xor
xor
lcall
in
movl
fcoms
and
cmp
sub
xchg
sbb
lcall
xor
test
jae
mov
shrl
lcall
loopne
ljmp
ss
mov
mov
sbb
pop
clc
jle
movsb
push
roll
int3
sub
xlat
cwtl
pop
pop
ds
std
ljmp
pop
int3
sbb
out
pop
xlat
fimuls
cli
arpl
mov
in
popa
in
cmpsb
xchg
mov
fnstsw
mov
les
adc
push
ret
js
fcoml
mov
dec
sahf
fbstp
movsl
decl
push
sbb
or
pop
xchg
push
pop
pushl
cmp
out
sub
cmp
mov
fcom
pop
jbe
int
mov
incl
pop
fs
mov
and
inc
push
aaa
pusha
flds
hlt
mov
jg
addb
sub
in
test
pop
popa
mov
ja
cmp
add
pop
jl
push
mov
test
mov
call
rorl
push
or
arpl
test
negl
and
outsb
dec
sbbb
inc
shl
sar
jmp
leave
popf
in
xchg
push
inc
aaa
pop
lods
xor
jge
mov
pop
fidivrl
xor
cmc
jg
fstps
test
loop
fdivr
jge
das
incl
roll
mov
lods
push
sbb
add
push
dec
mov
add
gs
les
scas
scas
or
call
out
cmpsl
adc
js
cmc
sub
fisttps
fistpl
add
pop
push
mov
ss
jp
xchg
les
call
es
outsb
jo
add
sbb
cmp
lcall
add
mov
xor
mov
sub
dec
cmp
fdivrs
nop
lods
imul
and
sahf
arpl
rclb
mov
sar
call
dec
cmpsl
int
mov
adcb
test
sbb
add
mov
mov
leave
lods
xchg
hlt
in
xchg
cli
mov
push
aas
imul
sub
jns
cli
lods
das
fwait
mov
push
hlt
or
movsb
push
jno
jns
ljmp
xor
cmp
pop
fwait
ljmp
in
cmpsb
inc
jmp
addr16
jg
xor
test
xor
or
mov
add
mov
sbb
adc
xchg
idivb
sbb
addr16
xchg
lret
ds
sbb
cld
incl
sbb
sar
insb
insl
mul
mov
mov
xor
add
add
repnz
mov
cmp
mov
ljmp
les
xchg
sahf
or
mov
sbb
pop
dec
or
mov
lret
movsl
scas
sub
addb
and
es
movd
dec
cld
xchg
cmp
in
call
movsb
jmp
lea
pushl
imul
mov
lods
push
cmp
jno
push
fildll
sub
dec
ss
jne
or
jmp
jno
mov
bound
inc
mul
cli
sbb
mov
jl
and
incl
add
pop
sti
sub
xchg
test
jns
or
mov
sarb
cmp
int3
pop
and
jecxz
lret
push
arpl
pop
mov
mov
insl
push
and
jmp
dec
mov
and
aad
add
in
scas
call
inc
adc
add
stc
decl
cmpb
mov
add
or
pop
xor
cmp
decl
fmulp
dec
or
loope
push
mov
and
cs
les
mov
dec
push
stos
aad
lods
mov
lea
iret
les
dec
bound
push
ljmp
mov
fcmovb
rolb
decl
arpl
shrb
mov
mov
mov
mov
mov
dec
std
ljmp
test
out
imul
outsl
jle
cmp
jge
jle
ljmp
std
jmp
ljmp
mov
and
call
sub
ljmp
fs
in
leavew
xorl
test
pop
bound
jg
jp
shll
pop
clc
pushl
xor
pop
sti
outsb
jnp
shlb
inc
jno
jno
jbe
shr
lcall
std
jmp
movsl
enter
pushf
pop
xor
repz
pop
iret
fldt
add
pop
stos
mov
data16
sahf
xchg
daa
mov
nop
cli
or
in
cmpsl
cmpsb
jecxz
pushl
sbb
popa
dec
jl
lea
cmc
xchg
xchg
jns
in
hlt
push
mov
mov
adcl
shr
xchg
out
xor
pop
gs
pushl
jo
ficompl
or
mov
dec
adc
mov
pop
decl
sub
xchg
mov
or
aaa
cli
cli
push
sbb
loop
scas
mov
inc
sbb
mov
loop
stos
dec
add
pusha
push
and
decl
xor
fwait
shll
push
mov
ljmp
cmpsb
bound
inc
push
divb
pop
imul
adc
jle
xchg
cli
push
pushl
cli
sub
mov
pop
and
add
cmc
pushf
mov
xor
lcall
inc
jbe
dec
adc
mov
call
fildll
jb
ss
clc
out
gs
pop
roll
cmpsl
cmc
stos
and
xchg
inc
lods
pushl
jp
or
pop
clc
jge
and
jb
or
inc
iret
incl
test
scas
movups
loop
lcall
decl
add
lret
mov
and
stos
dec
ljmp
sbb
ljmp
mov
pushf
sbb
sub
sbb
mov
jl
outsb
je
data16
pop
imul
mov
rolb
mov
popa
inc
add
call
fmull
or
popa
and
xor
add
in
sbb
sub
stos
fcom
sbb
daa
fucomip
ret
or
call
stc
adc
imull
ret
fwait
push
mov
adc
fldl
cmp
sub
mov
fwait
mov
ds
fs
and
outsb
sahf
jg
sar
inc
out
pushf
lcall
das
xchg
mov
mov
jnp
pushf
jae
mov
call
mov
push
xchg
pusha
daa
and
cmp
or
js
mov
clc
ljmp
pop
mov
std
jns
push
xor
ljmp
mov
ds
xor
in
into
or
and
inc
je
stos
mov
loopne
lds
shrl
js
sbb
jno
dec
add
loop
adc
push
jge
inc
ds
in
push
inc
push
and
sbb
xchg
fidivrl
arpl
dec
lcall
add
ret
faddp
add
js
inc
lods
push
cmc
es
out
add
insl
jo
lcall
mov
into
out
stc
aas
pop
inc
pop
hlt
dec
mov
push
and
xchg
and
js
mov
fsubp
mov
std
ret
test
push
sub
inc
cwtl
popa
imul
inc
sub
sub
pop
aam
dec
cwtl
jecxz
jmp
sbb
jle
lea
jb
mov
add
mov
adcl
sbb
stos
push
pushl
test
cmp
and
subb
das
lock
cld
enter
and
push
sahf
pop
dec
frstor
clc
call
aam
jae
mov
je
roll
movb
aas
mov
push
loope
sub
call
sti
inc
cmp
jp
sbbl
popa
pop
in
js
add
and
add
cmp
add
dec
aad
add
mov
fmulp
jg
add
inc
add
and
add
mov
adc
clc
xor
fildl
cmpsl
leave
add
cmp
decb
adc
movsw
xchg
add
out
jno
decl
iret
sbb
loopne
out
add
mov
addb
mov
pushl
leave
sub
add
fstpt
sbb
xor
inc
dec
xchg
call
add
mov
mov
mov
sbbb
pusha
xlat
add
rclb
dec
dec
leave
xchg
mov
mov
push
add
pop
or
clc
movsb
xchg
add
mov
fdivl
and
jg
call
or
lods
pop
add
inc
pop
test
push
xchg
adc
and
inc
add
fdivs
test
add
jmp
jecxz
mov
xchg
xchg
je
push
inc
add
loopne
insl
inc
rcr
xorb
xchg
mov
pop
sbb
movsl
mov
adc
scas
jo
dec
pop
mov
icebp
lret
repnz
add
test
push
cld
jle
lret
stos
aam
mov
push
ss
cltd
pop
dec
or
xchg
add
ljmp
adc
mov
sti
mov
push
adc
inc
and
mov
cmp
mov
lcall
sbb
xor
adc
pushl
push
cwtl
inc
or
cmp
inc
popa
addr16
das
nop
add
xchg
jle
sub
add
pop
out
addr16
flds
inc
loope
lods
cmc
xlat
scas
outsl
aaa
jp
imul
mov
adc
mov
add
test
cmpsl
ss
subb
adc
mov
dec
or
xchg
test
fistps
mov
or
pop
ficoms
sti
and
in
arpl
les
sub
and
adc
pop
cmp
jg
inc
les
rorl
in
aad
mov
mov
loopne
or
adc
pop
add
js
push
push
notb
push
popa
out
rorb
push
xor
sarl
add
dec
xor
push
add
call
mov
sub
push
repnz
dec
inc
int3
adc
dec
cmpsb
or
cld
mov
popa
outsl
add
icebp
test
and
fs
std
lahf
cld
decl
lods
sub
adc
fsub
stos
lahf
in
adc
ljmp
mov
jmp
mov
jg
jg
daa
inc
jg
xor
xchg
movsl
and
xchg
outsb
push
sbb
iret
pushf
push
or
fistl
add
and
lock
pop
add
dec
mov
push
sub
mov
clc
push
mov
mov
icebp
outsl
in
mov
shlb
in
jb
inc
aaa
sbb
pusha
or
cmp
andb
pmullw
jmp
in
push
xchg
fisubl
add
cmp
or
insl
add
push
xor
inc
inc
sbbl
ja
dec
test
xorl
test
sbb
add
push
jmp
insb
inc
jns
pop
sub
test
pop
arpl
mov
bound
jg
cwtl
mov
mov
sbb
push
xor
out
aaa
movsl
test
std
cwtl
movsl
sub
ret
add
outsl
cld
incl
insl
adc
mov
xor
lock
xchg
inc
and
addr16
dec
mov
icebp
jmp
sub
incl
clc
cmp
dec
or
jns
jecxz
add
fs
std
testb
ss
movsb
and
ljmp
int
add
adc
lret
test
mov
sub
jo
aam
sub
scas
sbb
mov
icebp
push
mov
push
rorl
cmpsb
test
mov
in
mov
add
outsb
adc
stc
cmp
mov
cli
or
jno
push
arpl
call
xchg
setno
xchg
icebp
fwait
int3
adc
cmpsb
add
mov
pop
imul
movsl
pop
aad
lcall
sti
push
sbb
fsubrl
cmpsl
aad
popf
test
mov
xor
in
push
cwtl
incb
adc
adc
push
inc
xor
jl
insl
mov
xor
mov
mov
dec
cmc
add
push
sbb
sbb
xchg
les
lock
dec
icebp
sub
das
lcall
mov
neg
pop
fsubrl
sub
icebp
clc
adc
dec
push
andl
mov
add
incl
push
sub
fstl
or
jo,pn
or
cmp
bound
sub
mov
pop
fnstsw
and
arpl
aam
cmp
bound
push
ret
fnstsw
xchg
outsb
incl
movsl
icebp
push
fs
pop
mov
out
pop
push
mov
add
push
scas
sbb
sbb
mov
adc
pop
xchg
rolb
push
sbbb
rclb
sbb
pop
xlat
or
cmpsb
or
push
adc
adc
lds
mov
scas
out
jecxz
xlat
scas
inc
jbe
insb
cltd
incb
cli
call
push
mov
fisubrs
or
push
sub
jmp
cmc
mov
add
inc
in
test
outsl
cwtl
call
inc
cwtl
sbb
in
lea
lds
jp
fistpl
pop
pop
pop
cmp
and
inc
xchg
sti
adc
add
jmp
sbb
data16
rolb
add
mov
cmpl
popa
dec
inc
pop
fwait
in
aam
in
jb
lcall
jge
shlb
std
lods
jo
fildll
sbb
push
cmp
adc
popa
mov
mov
sbb
test
sbb
icebp
push
into
and
int
sbb
cmp
mulb
add
or
in
adc
test
mov
cmpsl
loopne
clc
repz
test
pop
cmp
push
hlt
jno
rorl
das
inc
test
or
pop
inc
xchg
inc
aam
mov
push
shll
dec
adc
sub
cmp
loope
inc
adc
outsl
jle
loop
sbb
xor
mov
popa
out
movsl
ja
dec
sbb
xorl
jge
push
test
add
adc
neg
and
outsl
push
pop
push
rorb
clc
ret
aaa
mov
out
dec
inc
cmp
outsb
insl
mov
pop
push
and
sub
idivl
popa
fimuls
cmpsl
push
inc
scas
add
addr16
das
repnz
ja
and
incb
push
xchg
test
fdivrl
jnp
insl
mov
adc
cmpsl
inc
leave
decl
jp
push
std
jbe
js
xchg
repnz
xchg
decb
pop
xchg
xor
aaa
or
jg
ret
cmp
sub
push
popf
or
push
inc
insb
ret
dec
cmp
jge
adc
das
jge
scas
xchg
fldt
into
mov
xchg
or
jle
jecxz
lret
inc
pop
icebp
outsw
mov
mov
jne
jbe
or
sti
lods
jg
stos
dec
and
push
inc
xchg
cmp
add
outsl
decl
in
outsl
cli
mov
and
aad
stc
push
push
jae
or
xchg
pusha
pop
adc
shlb
adc
loopne
das
std
pop
add
out
add
mov
sub
stos
mov
jg
mov
jne
sbb
mov
add
sahf
ljmp
inc
fisubrl
rcll
pusha
repz
lods
sahf
and
mov
data16
mov
pushf
fwait
test
insb
cli
pop
xor
gs
fcmovnbe
in
mov
push
fistpl
fs
outsl
push
or
adc
or
scas
or
mov
aaa
push
lds
add
aaa
dec
jg
adc
jne
mov
lods
push
xchg
fs
int
sub
pmaddwd
out
add
xor
jp
out
mov
adc
aad
lret
iret
je
adc
loopne
push
loope
or
fsubr
cmc
jbe
cld
out
sub
aaa
push
scas
in
jp
nop
push
movsb
sbb
push
divl
outsl
stos
push
add
push
xorb
inc
dec
in
mov
js
sti
js
jae
aas
and
in
push
sbb
sbb
xor
enter
fs
inc
pop
icebp
idivb
mov
ret
push
leave
xchg
dec
out
push
arpl
mov
xchg
jnp
daa
inc
sub
push
jecxz
mov
adc
sub
jns
dec
sbb
movsl
jns
pushf
and
gs
dec
adc
in
add
aam
notl
or
jp
mov
das
pop
in
mov
xchg
ds
fdivs
jle
adc
addr16
push
inc
xchg
sahf
inc
sbb
pop
cli
lods
jbe
loopne
xchg
fwait
or
outsl
pop
enter
and
xchg
xchg
out
inc
insb
mov
mov
cmpb
mov
pop
inc
jmp
mov
pop
mov
jge
ret
int3
inc
mov
pushf
sub
das
lock
sahf
test
pop
xor
push
popw
lods
lret
mov
mov
lea
movsl
ss
sbbb
or
jecxz
in
pusha
test
jno
fs
aas
outsl
lret
repz
inc
test
mov
iret
aas
fidivs
pop
mov
fcomi
outsl
jno
mov
xchg
dec
jle
xchg
pop
cmp
stos
testl
dec
jl
xor
imul
mov
push
mov
add
aam
sar
es
or
dec
ds
mov
icebp
jg
pop
ss
push
dec
out
pop
rolb
insl
jb
cwtl
repz
lods
test
mov
outsl
cmp
add
mov
pop
mov
movsl
ret
cmp
popa
push
and
sti
jp
mov
filds
in
xchg
imul
arpl
dec
or
gs
sbb
dec
xchg
push
or
lods
jns
add
push
and
inc
lret
inc
mov
push
int
push
sub
inc
jecxz
in
bound
mov
mov
fists
insl
stc
cmp
mov
fisubrs
test
jge
ljmp
mov
and
and
add
loope
ds
aam
mov
mov
divl
nop
repnz
aam
insl
mov
sbb
sbb
xchg
mov
add
or
cli
aad
outsb
fcmove
jo
pop
jl
lods
xlat
cmpsb
pop
sbbb
mov
adc
or
and
cmpl
jo
jmp
adc
xchg
inc
mov
imul
sqrtps
call
pop
mov
push
pop
stc
ret
and
sarb
jae
pop
cmp
jge
sub
xorb
repz
pop
jle
mov
inc
fldt
in
pop
fistps
dec
stos
mov
outsl
jns
inc
mov
inc
mov
popl
std
pop
out
sbb
sti
jl
cmp
xor
repz
mov
cld
in
test
xor
mov
adc
dec
adc
and
cmp
fsin
enter
dec
scas
daa
rol
mov
cwtl
popl
jnp
gs
test
lret
jg
dec
sbb
outsl
lahf
std
addl
inc
adc
xchg
daa
clc
stc
pushf
inc
cmpb
and
add
pop
xlat
call
iret
pushf
xor
jge,pn
fcmovu
jge,pn
aas
testb
decb
or
mov
mov
adcb
push
pusha
stos
rorb
in
ret
imul
or
jo
mov
mov
xor
lret
nop
popf
pop
cmp
les
sahf
inc
ja
xchg
jg
sbb
call
xchg
add
outsl
hlt
decl
and
aad
aam
xor
pusha
dec
push
mov
dec
xor
ss
sub
cmp
pop
inc
add
adcb
xor
cmp
push
movsb
push
test
jle
call
dec
xorb
xchg
lods
rdmsr
adc
lret
les
cs
ds
mov
push
adc
les
xor
and
pop
bound
inc
scas
gs
adc
out
ljmp
dec
dec
jno
fs
data16
pop
fucom
scas
push
dec
xchg
loope
movsl
add
decl
jg
jg
scas
mov
xchg
insl
or
or
mov
in
or
ret
cld
shll
loopne
movsl
lcall
hlt
cli
or
pop
cwtl
mov
subl
jo
mov
cld
sub
xchg
stos
ds
xor
in
ljmp
out
orb
inc
lahf
js
pop
dec
mov
mov
xor
cltd
stos
cmpsb
aas
xchg
and
xchg
mov
adc
dec
stos
bound
aaa
push
testl
push
add
pop
andb
xchg
mov
adc
push
pop
cmp
push
sarb
addr16
es
in
das
icebp
add
inc
mov
jl
pop
push
push
dec
in
fiaddl
sar
adc
inc
xchg
push
add
or
or
sub
jmp
jae
xchg
jp
cmp
shlb
out
fdivr
mov
stos
push
fsubs
cmpsl
imul
mov
lahf
idivb
jmpw
dec
jg
outsl
into
cmp
xor
fsubrs
dec
insb
xorb
cli
in
sbb
in
sbb
add
fldl
leave
imul
clc
outsl
mov
aad
int3
adc
call
jle
clc
inc
dec
cld
mov
and
pushf
cs
pop
or
mov
incb
decl
stc
and
xchg
inc
add
lds
push
fildl
outsl
ficoml
pushf
enter
leave
xchg
mov
leave
sarb
clc
cmpsl
push
add
in
sbb
repnz
test
jne
ss
loop
daa
ficoms
jbe
mov
lea
mov
cld
decl
add
aam
fsubl
stos
pop
xor
mov
repz
cmp
mov
mov
mov
xlat
divl
lea
lahf
mov
sbb
adc
xchg
decl
in
ret
or
cld
push
or
fs
push
ret
fidivrl
jmp
fs
dec
or
faddl
sbb
inc
out
push
inc
cld
dec
ds
or
ds
call
jne
cmc
sbb
xchg
push
or
lcall
pop
xlat
flds
jl
ds
aad
mov
or
or
fwait
xchg
lcall
jl
jge
push
leave
subb
or
and
ja
and
mov
sbb
mov
and
arpl
adc
jl
std
imul
xchg
push
in
sbb
xor
jge
xchg
lds
mov
cmp
sbb
pop
fstpt
inc
mov
andb
gs
call
std
adc
ret
push
cli
adc
ljmp
dec
add
stc
pop
cwtl
dec
xor
or
mov
jg
cs
or
daa
jo
jno
and
push
xlat
out
rcrb
mov
mov
js
test
test
or
out
inc
pop
cli
das
inc
popa
add
push
mov
ror
pusha
xchg
dec
repnz
out
mov
arpl
sub
xlat
push
mov
pop
dec
dec
aas
dec
movsl
icebp
adc
std
and
pop
js
addr16
and
jecxz
in
imul
lcall
leave
push
lret
mov
repnz
outsl
cld
das
loope
ret
xor
sbb
outsb
out
repz
cmp
cld
push
push
inc
rcll
xchg
inc
mov
adc
stc
test
sub
sub
notb
and
test
pusha
adcb
adcb
xor
dec
mov
lods
push
cmp
js
rolb
add
cmp
aad
sbb
loopne
dec
mov
xlat
mov
or
mov
xchg
mov
into
emms
sub
pop
cwtl
ficoml
bound
jo
sub
mov
ret
inc
ljmp
mov
cwtl
lods
shlb
jb
dec
or
sti
dec
mov
out
out
mov
add
incb
or
mov
inc
or
jmp
fimuls
jb
inc
push
int3
jp
pusha
pusha
inc
or
cmpsb
arpl
sbbl
movsl
pop
xlat
das
push
das
push
push
mov
dec
cmpsb
lea
push
adcb
and
lcall
stos
add
mov
cmp
xor
jne
cmc
jge
sbb
clc
int3
negl
xchg
push
stos
imul
rcll
cwtl
mov
js
dec
dec
insb
iret
cs
pop
jo
fildll
js
lahf
ljmp
dec
out
mov
dec
test
lret
jne
mov
push
xchg
cmpb
dec
xor
rorb
jmp
enter
movsl
cmp
xor
or
rolb
jae
cmp
lock
mov
loopne
arpl
mov
adc
enter
aaa
ss
icebp
cli
repz
ret
mov
fnstenv
ret
push
bound
lret
xor
ret
mov
ret
and
xchg
inc
mov
mov
je
sahf
mov
push
pop
mov
pop
inc
hlt
std
lahf
daa
pslld
enter
mov
popa
jae
out
ja
out
xor
mov
cs
mov
xchg
mov
adcl
mov
mov
cmpsb
stos
clc
xchg
test
push
mov
aaa
repnz
shlb
mov
push
insb
jmp
ja
adc
pop
in
sti
and
outsb
push
sbb
ret
dec
sbb
in
or
mov
jmp
fstpl
inc
pop
dec
shrl
sbb
negb
mov
pop
mov
add
sub
outsl
jge
arpl
lret
inc
mov
cmp
sbb
pop
xor
jg
push
ss
shll
pop
aas
xor
dec
je
pop
pop
jbe
and
pop
and
insl
loope
in
sub
addr16
inc
add
fwait
rcrb
insb
mov
sub
push
pminsw
mov
or
sahf
inc
push
inc
outsl
jecxz
pusha
sbb
and
mov
lods
jo
loope
hlt
push
jge
pusha
es
je
lea
gs
popf
add
mov
push
je
push
ret
std
in
push
inc
cmp
mov
les
push
xlat
pop
inc
icebp
xchg
sub
jmp
mov
rclb
fs
pusha
fisubs
inc
adc
or
lahf
xor
rclb
fidivrs
mov
xchg
loopne
in
stos
dec
sarl
sub
in
inc
push
mov
aam
add
out
jp
add
cmpb
ret
fidivl
pop
cmpsl
mov
fdivrp
fldl
js
loopne
stos
std
dec
adc
aas
mov
add
inc
lahf
mov
decl
je
shlb
pop
dec
in
cmp
mov
popa
sub
sub
mov
add
add
xchg
mov
pop
pop
adc
jns
clc
inc
imul
jmp
cmovo
leave
and
mov
xor
mov
mov
xor
daa
gs
mov
sbb
push
test
or
inc
test
pop
daa
loope
fsubrs
pushl
pop
cmp
test
ret
jmp
loopne
or
outsl
cld
pushf
mov
fldcw
fucomi
cmpsl
mov
mov
cmpb
dec
mov
cld
pusha
sub
xlat
cld
adc
lds
fisttps
mov
mov
xlat
aam
out
inc
mov
ficoms
jo
in
ss
lods
mov
lods
adc
sahf
cmc
push
mov
lret
ljmp
sbb
sub
xor
les
mov
adcb
jae
lds
js
sbb
fmulp
sub
fistps
pop
cs
pop
mov
mov
and
in
test
gs
and
outsb
xor
movsl
shl
and
jns
incb
mov
xchg
push
test
fucom
sbb
adc
push
adc
xchg
ds
aam
ljmp
movsl
pop
fsubrs
mov
or
outsl
rol
ret
enter
imul
add
or
push
jno
pop
fwait
mov
data16
lock
insb
enter
stc
jp
dec
ret
popf
sbb
push
fs
or
sub
mov
or
xchg
loop
enter
mov
roll
les
pop
xlat
xor
lds
xorb
dec
rol
push
leave
mov
xchg
and
inc
inc
and
cmpb
outsl
ljmp
mov
xlat
or
cmpsb
xor
xchg
rcl
pusha
add
mov
and
push
mov
sti
dec
xor
hlt
pop
filds
mov
insb
inc
mov
cmp
xchg
add
fsubl
mov
adc
jmp
or
scas
cmp
aad
lcall
mov
adc
push
cwtl
push
jb
sarl
jg
push
pop
clc
aaa
cli
dec
aaa
mov
loopne
or
sbb
lahf
cmp
mov
jge
cwtl
repz
inc
fildll
add
dec
dec
notl
lret
std
arpl
cmp
sti
div
pusha
and
sbb
xor
xchg
data16
movsb
mov
jg
sbb
or
bound
lret
popf
cmp
mov
pop
mov
lahf
ret
mov
xor
cltd
mov
loopne
sub
int
jg
ds
call
adc
lock
int
jb
inc
push
hlt
pop
lcall
mov
jbe
pop
jp
ret
cmpb
fsubr
or
pop
es
or
cmp
das
mov
loopne
popf
loopne
mov
jle
movsl
call
push
add
inc
aad
dec
jle
pop
cltd
test
clc
cmp
enter
adc
jbe
push
pop
popa
lcall
fdivrp
mulb
jg
imul
jno
fadds
xor
jle
ljmp
pusha
shrl
std
push
fiadds
test
into
inc
push
jecxz
inc
jg
inc
inc
roll
cmpsb
pop
shlb
lea
cmp
fcoml
cmp
shrl
mov
sbbb
je
notl
cmp
lods
pushf
mov
enter
outsl
add
inc
sub
pop
jmp
dec
xchg
jmp
in
mov
jbe
push
ret
pop
push
inc
loop
mov
and
cmp
lret
mov
pop
fiadds
sbb
popa
jmp
pop
aas
adc
pop
adc
aaa
sbb
shlb
rorl
mov
aam
xchg
fists
cmp
push
pop
cmp
cld
lahf
and
aas
movsb
sub
mov
bound
call
mull
jle
dec
out
jb
dec
mov
dec
lcall
aam
mov
outsl
cmp
sub
jmp
ljmp
push
adc
or
nop
adc
cmpsb
dec
das
icebp
fbstp
hlt
sbb
jns
mov
mov
icebp
ljmp
shll
mov
xchg
xor
in
push
cs
shl
pop
and
xchg
or
iret
or
pop
jmp
add
or
sub
mov
div
enter
pop
loope
push
mov
lahf
mov
dec
adc
ficompl
add
and
adc
stos
xor
push
inc
fisttpl
jbe
pop
cli
orb
data16
cmp
loop
lret
hlt
add
push
iret
ja
test
pushf
popa
and
pop
xor
add
adc
lret
push
mov
stos
push
and
rolb
lods
test
ss
dec
adc
mov
int
loopne
out
aas
jp
xchg
dec
scas
or
push
outsl
cmp
cld
xchg
call
push
es
les
arpl
sub
lods
bound
push
jge
fdivs
test
mov
xchg
or
cmp
xchg
dec
pop
mov
mov
inc
mov
cmp
ljmp
inc
cwtl
lock
pop
js
out
cli
pop
jbe
xchg
rolb
add
xor
inc
inc
pop
loop
fcomps
cwtl
les
xor
lock
hlt
mov
jno
leave
sbb
sbb
inc
sub
mov
test
mov
clc
cmp
rcrl
jge
cmp
jbe
xchg
or
dec
mov
mov
in
push
pop
test
test
xlat
and
add
and
test
cmp
xchg
mov
lret
or
aas
lret
jnp
data16
mov
mov
stc
mov
xchg
mov
xor
lea
iret
sbb
std
lock
inc
cmp
add
les
neg
daa
add
pop
sub
sub
int3
pop
das
mov
in
mov
pop
push
out
jno
pop
out
push
sbb
sbb
adc
rolb
xor
pop
shl
inc
fmull
rcrl
inc
xchg
mov
imul
mov
mov
ret
push
out
out
ds
push
popl
imul
cmp
xor
aaa
mov
into
lea
pop
xor
pop
jl
mov
mov
pmulhuw
pushf
pop
fdivl
sbb
mov
nop
js
test
popf
sub
sub
enter
test
cld
mov
sahf
jno
out
test
jmp
rcr
pop
xor
push
xor
aas
dec
fldcw
push
inc
mov
jp
outsl
adc
or
push
lock
int3
mov
pop
into
std
pop
subl
addb
gs
iret
mov
adc
daa
xchg
dec
xchg
inc
test
push
mov
clc
inc
repz
pop
mov
clc
call
mov
aad
xchg
push
mov
test
mov
jno
out
sti
aam
imul
dec
cmp
fistpll
cmp
fistl
cmp
ret
js
inc
inc
or
inc
repnz
subb
mov
test
aam
jmp
out
push
repz
clc
mov
push
je
fnstcw
das
mov
sub
sbb
int3
jnp
mov
inc
mov
dec
fs
in
rcr
xchg
adcb
jo
push
mov
jl
outsl
add
mov
loope
rolb
add
test
xor
sti
or
dec
stos
fsubl
mov
or
adc
mov
sub
jge
jge
jle
jnp
into
cli
testb
outsb
adc
jo
fbstp
or
xorb
inc
cli
setp
ss
fbld
mov
rcll
push
mov
add
mov
mov
sub
shr
mull
sahf
inc
shll
imul
pop
into
mov
popf
push
shlb
add
pop
fidivrl
dec
dec
add
pop
cmpsb
mov
sub
and
adc
dec
in
les
dec
dec
xor
in
mov
add
popf
outsl
mov
fbstp
insl
jo
and
mov
orb
aaa
and
xchg
mov
xor
test
lret
aaa
sub
xchg
test
xorl
mov
lock
decl
movsb
rcr
imul
xchg
fsts
cli
ljmp
xor
leave
lret
lea
mov
jb
sbb
je
out
xchg
xorl
out
xor
push
inc
gs
adc
mov
xorb
call
int
fdivs
push
jle
or
dec
adc
ljmp
dec
cmc
shl
lcall
push
jle
lcall
inc
sub
stos
lret
push
std
pop
xchg
mov
jecxz
test
xor
das
dec
inc
scas
imul
add
push
jne
xchg
inc
mov
mov
in
movsl
fisubs
add
addr16
je
popf
lock
test
adc
and
jb
pusha
gs
jmp
and
xor
test
adc
mov
or
int3
dec
push
test
jmp
inc
cmp
test
add
cld
imul
fldt
lcall
cmp
movsl
adc
xchg
add
pop
push
pop
clc
pop
int3
hlt
and
pop
push
icebp
lds
scas
push
shl
pop
xor
mov
bound
mov
das
jno
ljmp
mov
les
or
inc
aas
fdivr
jmp
outsb
into
inc
mov
dec
and
cmc
and
and
and
movsl
xchg
dec
mov
inc
fucomip
std
add
push
sbb
mov
ret
movsl
data16
jl
icebp
in
scas
mov
in
ret
dec
xchg
adc
adc
inc
sub
cltd
orb
rcl
pop
or
das
std
aaa
or
imul
sarl
mov
push
mov
into
dec
or
adc
jecxz
jmp
fldt
jecxz
cli
ss
ret
subb
icebp
aam
loopne
pop
cmp
in
lahf
loop
push
fisubl
test
xchg
ret
xchg
aad
icebp
outsl
fistpll
arpl
mov
cltd
xchg
sbb
cltd
lds
adc
sbbl
xchg
pop
movsb
mov
popl
daa
mov
xchg
out
jbe
rcrb
popa
fst
pop
lds
inc
test
outsl
shl
adc
xor
dec
mov
test
test
dec
js
out
test
mov
orl
mov
cmp
cmc
mull
test
aam
ss
call
testb
inc
cmc
jmp
dec
mov
mov
test
insb
popf
int3
push
push
ljmp
jge
pop
int3
clc
lock
mov
xchg
push
xchg
add
or
push
adc
push
pop
push
movsb
jg
dec
test
sbb
inc
ljmp
adc
movsb
mov
sub
es
mov
mov
mov
mov
mov
mov
ja
cmp
mov
mov
gs
ja
or
repnz
or
sbbb
cmp
lods
fiaddl
jns
cli
mov
add
pop
and
ficoms
inc
adc
shrb
sbb
adc
add
dec
mov
out
jle
aam
into
inc
mov
mov
dec
cmc
dec
mov
dec
jb
arpl
push
push
pushf
out
std
insl
fcmovnb
mov
pusha
inc
test
mov
scas
insl
xchg
lret
pushf
add
pop
add
fsubrl
sti
repz
incb
in
js
cmp
les
cmp
mov
insl
aas
ljmp
hlt
push
lea
movsl
repz
out
repnz
loope
dec
dec
mov
lock
push
rcrl
cs
ret
cmc
and
xor
gs
in
dec
jle
imul
xchg
pusha
into
mov
mov
add
push
pop
push
jg
leave
jge
shrb
add
sub
jns
pop
lock
sbbb
pop
icebp
inc
popf
movnti
pusha
ret
mov
push
pop
and
xchg
push
aad
push
jmp
and
mov
shll
pop
sub
jmp
pushf
addr16
fisttps
xchg
insl
pop
sbb
or
cmp
inc
mov
fiaddl
pop
xlat
xchg
sub
ds
fists
icebp
loopne
push
jbe
sub
sti
sarl
add
push
xor
stos
pop
and
mov
in
cmp
out
imul
lds
and
or
shll
dec
or
jae
cli
push
filds
inc
xchg
inc
dec
int3
sub
out
rorb
mov
dec
pop
sti
mov
fs
and
fs
and
data16
scas
jne
maxps
mov
push
pop
fstl
or
movsl
ret
js
roll
sahf
jg
ror
icebp
push
arpl
jnp
out
and
cwtl
add
shlb
mov
call
adc
jmp
sub
or
pop
xor
push
ficomps
and
xchg
addr16
add
xor
inc
repz
push
xchg
xorb
stos
mov
sbb
ret
lea
imul
jnp
xchg
fsubl
mov
xlat
sbb
mov
into
cmp
hlt
mov
mov
scas
inc
js
imul
mov
jno
rcr
ret
jnp
jo
loop
rcrb
negl
outsb
fldt
in
mov
cmp
pop
jo
in
mov
jle
push
inc
mov
xchg
add
pop
loop
mov
aas
or
mov
js
mov
add
mov
mov
xchg
lret
popf
inc
push
dec
adc
insb
pop
addl
test
xchg
rclb
dec
dec
lahf
jmp
pop
stos
cld
inc
shrl
lcall
push
jne
push
insl
mov
fwait
or
cmc
xor
enter
loope
andb
dec
cli
dec
pop
cmpsl
popf
add
sti
ret
push
mov
cltd
popa
lahf
idiv
sbb
cmp
mov
cli
pop
add
cld
sbb
add
push
pop
adc
sti
mov
outsb
jb
nop
scas
movsb
sbb
sub
jp
cmp
insl
lods
int
lock
adc
shlb
mov
inc
and
cld
push
lret
roll
lods
movsl
faddp
cmp
std
int3
inc
xchg
push
dec
mov
je
enter
incb
addr16
cmp
mov
stos
sub
cld
out
xor
mov
dec
lea
or
das
pusha
shr
pop
or
mov
fwait
jnp
add
fsubp
adc
test
cmpsl
pop
pop
xchg
imulb
imul
scas
out
insb
adc
fucomip
outsl
in
push
in
xor
incb
and
outsb
jg
and
cmp
add
stos
rorl
add
pop
mov
fsubrp
dec
lock
jp
repz
mov
inc
inc
shl
xor
pop
pusha
dec
mov
into
inc
xchg
fistpl
decl
outsl
shlb
mov
mov
jp
adc
shlb
mov
dec
push
subb
jo
sub
xor
addb
mov
inc
pop
sbb
insl
jnp
aam
in
nop
push
jecxz
dec
jae
push
fdivrl
shrb
lret
and
negl
and
pop
rcrl
pop
cli
dec
jb
xor
cmp
or
sti
cld
xor
cmp
xchg
decl
xor
and
imul
inc
sti
xchg
sbb
mov
or
mov
xchg
cld
ds
add
test
push
sub
sub
in
loopne
dec
outsl
fldt
outsb
das
cld
fldl
or
jmp
jg
fmull
mov
test
add
scas
sar
fldt
sub
and
mov
pop
push
addb
adc
fcoms
sub
or
das
jnp
add
jb
fldcw
lcall
lahf
outsl
and
imul
bound
clc
cmpsb
push
aad
das
jne
incl
pusha
and
pop
pushl
or
dec
pop
cli
adc
lods
nop
add
xchg
inc
push
in
std
xor
inc
ret
repz
lods
movsl
cmp
les
enter
adc
push
pop
cmp
int3
mov
jp
pop
movsl
lods
in
or
das
and
adc
inc
inc
scas
cld
and
push
das
fsub
js
xor
sbb
xor
xchg
lods
push
std
or
adc
inc
cmp
subb
jp
jbe
imul
adc
jbe
adc
fs
sub
mov
insl
mov
insl
mov
cmp
ja
stos
aaa
xchg
repz
jo
mov
mov
push
sbb
pop
orl
sarl
jnp
imul
mov
in
cli
sbb
fildl
pop
jp
fisttps
xchg
push
mov
cltd
pop
aad
pushl
or
pop
mov
xor
iret
setns
sub
cs
jb
aad
pop
je
into
mov
mov
lahf
mov
and
leave
and
cli
rcrl
push
mov
aaa
jbe
and
ljmp
dec
sub
lock
cmp
xlat
xor
dec
inc
orl
int
push
jbe
fwait
sub
adc
or
adc
fs
in
mov
adc
call
push
cld
sbb
mov
adc
inc
mov
dec
incl
push
lahf
xlat
stc
push
cld
out
mov
cmpsl
fucomp
inc
aad
dec
xchg
lea
clc
sbb
mov
mov
add
repz
aam
clc
repz
xchg
mov
js
cwtl
cmp
pop
inc
rcr
loopne
xchg
into
lret
push
push
sub
jl
ljmp
jnp
xchg
add
jl
sub
cmpsb
int3
inc
sbb
aam
dec
mov
ret
lret
cwtl
xor
jb
mov
cltd
fildll
mov
jle
push
inc
scas
ret
andb
cwtl
jnp
mov
pop
jbe
cltd
data16
jge
or
enter
rclb
fcmovb
xchg
clc
add
sbb
xchg
push
outsb
dec
cmp
cmp
dec
mov
clc
inc
push
fcomp
pop
icebp
cli
andl
ret
jbe
push
loope
push
push
inc
xor
add
daa
ret
aam
cmp
sbbl
mov
pop
xor
fsubl
ss
pop
gs
or
adc
adc
call
bound
inc
rorb
and
das
inc
sub
and
std
inc
lock
cld
ds
scas
jle
pop
sar
mov
mul
jmp
mov
pop
jl
stos
push
inc
adc
sti
mov
dec
sbb
addr16
sbb
dec
jo
incl
cwtl
jnp
sbb
icebp
jl
repnz
orb
outsl
lock
mov
inc
jle
inc
push
dec
fbstp
addr16
fsubp
inc
decl
fisttps
es
jecxz
stc
dec
jo
mov
mov
jle
sbb
or
sbb
ljmp
fidivrs
cmpsl
pop
jo
xchg
clc
inc
pop
rolb
pop
cmp
add
jp
and
call
mov
inc
sbb
push
mov
enter
addr16
jp
pop
les
cmp
insl
cmp
ljmp
hlt
repnz
push
gs
mov
sbb
call
push
aad
insb
mov
push
jle
mov
push
iret
and
jecxz
pop
stos
dec
movsb
sbb
out
sub
cli
adc
rcrl
adc
scas
and
pop
dec
mov
adc
push
add
aaa
sbb
and
pop
mov
adc
and
jl
loopne
push
arpl
jmp
xor
push
or
lods
scas
dec
jmp
pusha
call
das
outsb
sbb
or
jmp
pop
mov
adc
outsb
or
incl
sbb
mov
lock
rclb
pop
pop
lock
mov
lock
jo
es
xchg
add
ss
iret
jns
mov
push
in
dec
or
sbb
orl
add
or
adc
std
outsl
sbb
data16
xchg
adcb
or
mov
dec
mov
ljmp
adc
lds
mov
cltd
outsl
stos
arpl
in
pushl
push
jecxz
aad
add
mov
push
cmp
cld
xor
lods
inc
jle
out
pusha
mov
outsl
add
mov
or
shrl
les
loopne
rorb
lea
bound
bound
dec
sub
fcomps
mov
nop
cmp
jo
mov
pop
popl
or
fildl
scas
push
mov
cs
pop
push
movsl
aaa
outsb
insb
cmp
and
or
jg
inc
adc
xlat
cwtl
xchg
xchg
adc
inc
xchg
mov
in
inc
mov
js
ljmp
adc
and
sbb
ret
adc
es
xlat
incl
adc
and
js
adc
aam
xchg
cmpsb
and
loop
mov
stos
mov
inc
movzbl
dec
das
fs
pop
or
sub
jno
pusha
inc
add
cs
mov
push
add
call
andl
out
jmp
out
and
pusha
outsb
mov
popf
mov
inc
adc
and
mov
and
gs
adc
jae
jne
leave
push
fistl
mov
addr16
adc
out
aaa
add
push
mov
pop
inc
inc
pop
mov
inc
mov
xchg
mov
push
inc
add
rcl
enter
ret
sbb
inc
sbb
xchg
add
dec
lret
inc
loopne
mov
mov
rorl
orl
aam
mov
inc
cld
shl
into
lock
pusha
shl
dec
mov
lret
push
int
fsubp
xchg
int
pop
cld
inc
fdivl
add
cmp
aaa
outsb
xchg
mov
pop
adc
int3
jno
inc
into
ret
or
das
xchg
mov
inc
cltd
pop
pop
inc
pop
mov
mov
dec
int3
in
decl
popf
jp
rorb
mov
or
cld
lods
dec
mov
mov
in
cmpsl
repz
inc
fcmovnbe
adc
mov
fsubl
jbe
mov
adc
or
test
filds
movsb
lea
clc
cmp
shlb
and
mov
mov
mov
js
loope
push
sub
repz
out
aas
clc
lret
mov
je
js
jg
and
cld
fildll
gs
bnd
mov
js
test
out
mov
in
aaa
sbb
add
rorb
dec
cld
in
fstpt
inc
xor
sbb
fsubrs
out
lcall
sahf
push
lock
xor
or
clc
icebp
test
sahf
outsb
cmpsl
inc
jbe
cmc
movsl
jmp
mov
jle
push
rcrb
and
ret
cld
mov
mov
fsubs
cli
aaa
inc
insl
outsb
push
pop
sub
fsubl
mov
push
aam
in
fsts
mov
mov
mov
cmp
call
or
lahf
dec
stos
fidivrl
out
stos
push
mov
jp
add
adc
in
or
rcll
pop
out
sub
call
je
lea
bound
fimull
cmp
mov
repnz
in
lods
mov
mov
add
xorl
cmpsb
cmp
popa
inc
scas
ret
ja
mov
das
mov
aam
mov
je
dec
mov
insb
push
lcall
inc
inc
ja
outsl
js
jmp
and
enter
clc
cmp
std
push
lods
adc
jo
add
dec
inc
xchg
imul
xor
lret
jge
add
inc
add
mov
das
test
mov
lods
push
mov
daa
loop
adc
mov
movsl
mov
xchg
je
xchg
int3
push
into
mov
or
stc
jno
dec
hlt
insl
popa
cmp
bound
ds
lods
pushl
loop
inc
or
out
gs
dec
aam
iret
andb
das
mov
mov
push
xchg
and
rep
jno
pop
fdivs
pop
jecxz
popf
loope
pop
cltd
mov
filds
jb,pn
pop
inc
call
lods
xchg
popf
push
sbb
xor
orl
pusha
cmc
cmpsb
lahf
es
push
in
cmp
fnsave
ja
or
dec
andb
pop
push
je
fmuls
outsb
in
mov
push
inc
mov
sbb
jl
loopne
sbb
out
push
sbb
or
mov
movsl
enter
sarl
adc
clc
pop
push
sub
cwtl
jecxz
sbb
adc
lret
jne
sbb
adc
xchg
dec
cmp
std
sub
test
call
mov
xchg
and
fsts
cmc
mov
int3
mov
push
mov
xor
add
pop
inc
lds
call
and
adc
js
pop
cmp
adc
loope
cmp
adc
xor
aad
stos
push
lea
jp
inc
pushf
and
mov
push
cld
sbb
cmp
adc
shl
push
insl
mov
sub
maskmovq
loopne
cli
pop
mov
xchg
sbb
mov
mov
incb
out
popl
ljmp
cld
loop
bound
xor
push
cs
mov
xchg
adc
imul
je
fmulp
pop
xchg
inc
and
jne
mov
mov
xchg
and
mov
or
xor
push
leave
mov
sub
pop
lods
call
inc
int
and
sbb
cmp
push
push
out
test
ljmp
xor
lret
cs
fisttpll
mov
and
pusha
pop
and
mov
push
or
jg
test
xor
pop
push
mov
test
orb
add
adc
test
ja
push
fcmovbe
mov
fwait
inc
call
subl
or
int
stos
insl
cmp
xchg
cmpsl
inc
in
negb
mov
push
movsl
out
mov
push
or
movntps
clc
cmpsb
sbb
mov
aas
jg
mov
pop
mov
or
arpl
jo
or
outsb
mov
orl
dec
gs
or
nop
sbb
hlt
inc
jmp
sbb
sub
icebp
inc
dec
add
iret
mov
test
sub
push
fsubrl
clc
or
adc
inc
test
repnz
std
lcall
enter
xchg
dec
fnsave
add
daa
pop
icebp
xchg
xor
out
mov
sub
sbb
shl
fldt
jg
adc
sbb
add
je
push
rcrl
sub
and
fs
dec
sbb
sub
into
ds
mov
clc
dec
clc
ds
outsl
cld
pop
lock
les
adc
lcall
mov
xchg
in
xor
or
lods
push
cltd
movups
test
push
adc
xlat
es
lea
ret
and
test
aam
clc
negl
or
or
mov
inc
pop
clc
adc
lods
mov
lds
mov
cmp
mov
fidivs
dec
mov
push
jbe
mov
cmpsl
incb
push
lds
ja
sub
or
out
movb
jb
jge
fcmovne
movsb
cld
inc
jmp
mov
enter
rorb
loop
or
imul
pop
das
ja
scas
jl
fistps
or
sub
ficoms
ficompl
repz
sbb
in
lods
test
pop
ret
mov
jg
mov
jnp
push
jecxz
dec
outsb
inc
mov
fsubrl
push
cmp
movsl
ret
rcr
loope
push
popa
mov
rcll
fucomip
xacquire
jg
sti
dec
push
scas
sub
jb
lods
fisubl
xchg
adcb
adc
xor
sub
test
sahf
adc
test
xor
or
shl
cmp
cld
nop
jb
dec
xchg
adc
imul
mov
mov
jl
pop
xchg
addb
arpl
and
outsl
cld
incl
inc
stc
hlt
sub
or
sub
popf
outsl
mov
mov
or
int3
sarb
or
lea
shlb
fwait
add
addl
push
pop
into
aad
push
shlb
cmp
clc
dec
fcmovnu
xor
popf
xor
lahf
pusha
xlat
mov
outsl
jl
lock
pop
push
ljmp
push
enter
cltd
push
jnp
rol
gs
out
sbb
jo
or
adc
pop
jbe
jecxz
push
and
cs
pop
daa
addl
sub
sarl
mov
addb
pop
fdiv
push
or
outsb
jns
ret
inc
lahf
adc
cmp
mov
dec
xor
adc
dec
mov
ja
int
inc
dec
mov
xor
fldt
add
das
lds
mov
dec
repz
and
fstpt
lods
nop
pop
and
int3
add
jecxz
jg
dec
cmp
scas
imul
jnp
sahf
test
push
fisttpll
mov
lea
xor
cmp
je
hlt
adc
or
xor
in
outsb
pop
fidivrs
div
push
cmc
mov
mov
testb
popf
cmp
or
stos
int3
dec
adc
xor
test
jmp
popf
cwtl
inc
sbb
push
pop
xlat
xor
or
xchg
je
and
xchg
cld
int3
dec
inc
ljmp
sub
mov
and
jnp
out
mov
in
lahf
jb
test
xor
and
and
hlt
push
mov
pop
cmp
cltd
fsubrs
mov
sub
adcb
sub
js
scas
std
fistl
bound
retw
pop
sbb
das
out
and
mov
fcomip
mov
push
in
movsb
or
mov
ja
rorb
nop
sub
pushf
sub
aaa
test
inc
data16
js
enter
xor
pop
fildll
adcb
mov
fcmovnu
pop
jl
out
shll
jg
popa
jecxz
sahf
xor
cld
ret
pop
je
mov
xor
or
rcl
lods
lods
mov
inc
dec
cltd
adc
sti
lock
and
xlat
insl
pop
inc
punpckhbw
or
cli
dec
push
or
cmp
xchg
sub
push
lods
and
and
lods
decl
pop
push
push
cmc
dec
call
jge
shrl
sar
cmpsb
and
pop
xchg
or
jb
mov
pushf
add
or
out
mov
fwait
jno
and
inc
or
stos
std
testb
sub
mov
bnd
in
outsl
sbb
int3
cwtl
mov
cs
rcrl
inc
mov
inc
mov
aas
insb
xor
mov
xor
cmp
leave
dec
cli
negb
push
ss
sbb
cmp
xor
xchg
xchg
push
inc
mov
sub
add
pop
mov
cmp
stos
xchg
fdivr
push
xor
push
inc
add
jns
push
mov
in
fildll
push
dec
add
inc
and
push
dec
push
mov
outsl
aas
push
add
dec
sub
fcomps
mov
add
adc
sahf
stos
lea
dec
or
mov
repnz
dec
push
jb
inc
sbb
mov
in
movsl
and
and
and
pusha
incb
adc
dec
xchg
mov
and
mov
sub
mov
sbb
rcll
rorl
nop
mov
sbb
mov
xor
cld
xor
jne
mov
sbb
inc
jae
inc
loopne
pop
and
push
inc
jl
adc
lods
jns
in
lods
out
pop
test
ljmp
mov
and
push
sub
scas
ja
add
jmp
scas
in
sbb
cmpsl
outsl
jmp
outsl
mov
mov
sbb
dec
xchg
cld
pop
insb
mov
dec
inc
xor
stos
sbb
inc
das
shl
in
js
inc
xchg
sub
jns
aad
sub
dec
push
adc
xchg
inc
mov
sbb
pop
mov
and
lcall
aaa
shrl
enter
decl
mov
jmp
or
dec
mov
orb
jae
je
daa
loope
sbb
decl
jns
push
inc
rcrb
jge
add
xor
clc
shrb
hlt
push
add
into
andl
stos
cmc
pop
xor
jle
mov
loopne
fstpl
ja
cwtl
fildll
adc
push
jp
jg
pop
sbb
push
mov
popa
pop
jno
cmp
test
mov
outsb
and
or
sub
loop
call
lea
mov
ljmp
fsubr
aam
push
xorb
iret
loope
fcomip
inc
push
rcr
bound
lcall
mov
clc
ja
sbb
addr16
xor
cli
ret
pop
call
cmp
pop
inc
nop
adc
xchg
pop
pop
cmpsl
adc
lods
sti
pop
xor
ret
or
insl
sti
adc
pusha
sbb
shrl
push
cs
insl
call
fisubl
into
sub
xor
push
sub
insb
inc
stos
in
int3
inc
out
mov
adc
inc
or
addr16
dec
lock
or
adc
mov
mov
clc
aaa
pop
push
fcmovb
jecxz
outsb
nop
popf
mov
sbb
dec
mov
mov
jge
lods
jbe
push
inc
push
inc
fnsave
cmp
mov
push
loope
icebp
out
or
lahf
or
push
ja
or
or
inc
popf
aas
jbe
scas
adc
pop
pop
clc
call
mov
test
popa
lcall
xchg
dec
mov
imul
cwtl
outsl
push
mov
lock
ret
cmp
inc
fisubrs
mov
xchg
mov
and
push
and
clc
test
push
mov
out
pop
sti
sub
enter
into
pop
jge
mov
jge
das
sbbb
popa
mov
mov
insb
cld
pushf
or
jmp
mov
and
or
fcoms
aaa
je
js
inc
cmc
ds
add
std
incl
lock
jne
xor
sbb
sub
lcall
pop
ret
sar
adc
and
out
cmp
loop
jg
outsl
inc
dec
sub
adc
add
test
push
shrb
orl
push
push
and
shll
js
sub
mov
lret
cmpb
pop
sub
fbld
inc
repz
mov
inc
push
dec
and
mov
add
ss
arpl
pop
jo
fstpt
psubb
cmp
pop
cmp
or
and
shlb
js
icebp
mov
pop
loopne
cli
shll
xor
icebp
or
pop
mov
jne
fdivr
ljmp
xor
hlt
mov
hlt
jp
jb
imul
inc
push
mov
push
push
mov
jae
sub
fwait
test
stos
jne
andl
mov
js
inc
mov
adc
add
cmp
jle
test
test
fwait
andl
lock
ret
add
loope
cmp
push
ds
push
loopne
fidivs
sbb
mov
dec
insl
inc
jecxz
lods
push
cmp
sbb
push
pop
les
dec
aad
ljmp
sarb
cmp
scas
dec
dec
push
enter
rol
fdivrs
xchg
fs
adcl
push
loopne
sub
je
ffree
outsl
inc
jno
es
pop
roll
dec
hlt
sbb
cmp
notb
sahf
push
movsl
aad
mov
stc
inc
aad
mov
inc
fistpll
xor
jne
sub
adc
dec
lods
cli
inc
adc
les
into
push
fistpl
mov
pusha
or
inc
add
or
xor
call
push
mov
mov
stc
out
cltd
cmpb
cmp
lds
vorpd
push
leave
subl
or
or
xlat
sbb
pop
xlat
pop
xchg
test
fwait
sbb
leave
shlb
mov
pop
cli
jno
sub
adc
sbbl
pop
add
out
pop
cld
add
rcll
fcomps
insl
insl
arpl
xchg
mov
adcl
fisttpl
jnp
mov
push
mov
sbb
add
jecxz
repnz
aas
dec
test
lock
sbb
pop
loop
cmp
sub
sbb
test
push
bound
lods
mov
add
arpl
mov
push
and
outsl
mov
scas
insb
mov
insl
subl
mov
insl
test
cs
pushl
lahf
cmc
cmpsb
decl
int3
cmp
mov
pop
mov
insb
and
in
lahf
scas
add
add
add
fs
mov
cld
movsl
xchg
and
fldl2e
stos
dec
adc
test
jl
in
jl
pop
ror
loopne
cli
sbb
xor
popa
cmc
pop
aad
mov
lods
stos
enter
lahf
outsb
and
test
or
dec
das
inc
adc
in
loop
jle
add
lock
gs
les
add
lcall
or
test
add
inc
and
movsb
into
stc
les
fcomip
pop
xchg
fbstp
lcall
sub
mov
xadd
mov
or
jnp
cmp
outsl
mov
clc
push
testb
fidivs
cli
push
pop
jg
dec
xor
fsubs
fisubl
nop
pop
fcom
xor
je
xchg
sahf
adcb
cs
xchg
sbb
ja
add
pop
clc
loop
movsb
enter
xor
jns
lea
and
fistpll
jo
jecxz
shll
jl
inc
pop
push
shl
arpl
pop
adc
pop
mov
inc
sbb
stc
cmp
pop
orb
fimuls
out
mov
jo
jp
sbb
dec
pop
cmpb
or
add
and
pop
hlt
push
loopne
xlat
in
clc
and
cmp
in
icebp
shlb
mul
lea
lret
in
mov
sbb
mov
jne
jns
es
lret
lock
ret
push
jo
jp
adc
lcall
push
dec
test
jbe
movsb
in
and
jl
lods
int3
daa
sub
adc
push
aaa
out
dec
xchg
daa
sub
mov
inc
iret
add
adc
sbb
cmp
or
push
shlb
fucomi
hlt
hlt
rcrb
stos
dec
insb
das
adc
cwtl
mov
addr16
mov
dec
inc
dec
test
std
mov
rolb
fisubrs
sub
movl
mov
pop
pop
mov
dec
fiadds
mov
ljmp
adc
lock
sahf
pop
cmp
fwait
loope
pop
or
repnz
xor
testl
pop
jo
or
inc
ret
mov
mov
sbb
pop
mov
loopne
sbb
xchg
or
pop
jg
dec
and
xchg
shlb
sbb
inc
out
mov
js
aaa
outsb
das
or
mov
sbb
push
add
pop
nop
incl
das
cld
mov
inc
lea
dec
lock
loope
jmp
mov
add
outsl
aad
mov
jo
fs
insb
imul
loopne
adc
sbb
lods
testb
inc
xor
dec
or
aaa
and
dec
out
mov
push
clc
in
add
or
shrl
mov
adc
lea
xchg
aas
out
clc
dec
or
aam
adc
aaa
mov
xchg
and
std
test
repz
cwtl
daa
jge
xor
repnz
int
or
incl
cmp
std
cmpsb
mov
mov
sar
popf
ret
movsb
inc
jge
pop
imul
xor
sti
or
jne
flds
mov
xchg
insl
jmp
sbb
add
xchg
xor
dec
add
cmc
cld
adc
test
cmp
and
jecxz
sbb
cmp
repnz
mov
mov
in
xchg
xchg
pop
add
sub
data16
or
pushf
jno
sar
pop
adc
daa
jnp
lods
and
push
jno
pop
mov
fwait
mov
sub
mov
push
es
je
push
adc
addl
stos
jnp
cltd
mov
push
shlb
adc
stos
sub
mov
mov
out
lds
test
roll
xor
xchg
pushl
insl
repnz
add
xchg
fadd
push
lock
pop
adc
mov
out
mov
sbb
push
sahf
xor
add
or
in
lea
sbb
add
or
push
shll
mov
push
aaa
outsb
mov
sub
stc
push
nop
cltd
in
xchg
mov
or
in
inc
lock
negl
inc
cmp
mov
fstl
xchg
inc
mov
and
aam
mov
fdivrl
add
add
push
jg
sbb
pop
stc
xchg
std
xor
mull
mov
dec
cld
jle
dec
sbb
out
mov
mov
fcomps
xchg
push
jp
inc
pop
jg
jmp
stos
data16
scas
stos
mov
sub
leave
jnp
lods
jg
and
xor
sbb
adc
lret
mov
in
jae
mov
jns
pushf
addr16
jnp
mov
cli
pop
push
fwait
test
je
insb
imul
adc
outsl
jo
cld
out
mov
mov
adc
inc
or
mov
adc
and
jne
cld
mov
xor
xor
mov
adc
mov
cmp
cmp
test
lods
std
add
nop
sahf
jecxz
scas
jg
jmp
mov
xor
push
mov
xchg
or
jno
movsl
outsl
and
notl
movsb
out
mov
mov
pop
lcall
popf
filds
fwait
pusha
and
add
and
xor
xlat
adc
sub
add
sbb
jbe
sbb
sbb
fisubs
push
jae
hlt
jg
decl
or
shlb
ret
insb
inc
or
mov
adc
mov
in
cmpsb
xchg
addl
xchg
pop
out
and
ds
pop
pop
loopne
in
inc
clc
push
push
xor
je
pop
loope
pop
fildll
xchg
lods
orb
cmp
jb
inc
mov
mov
mov
mov
in
inc
jg
outsl
and
cmpsb
cmp
out
mov
mov
xlat
into
lds
lock
cmp
loopne
sub
add
repz
daa
jg
ficomps
test
push
scas
push
push
sbb
loopne
ret
jg
add
xchg
xor
in
lahf
inc
mov
or
add
imul
iret
mov
pop
mov
lods
or
xor
sub
icebp
lcall
cli
jns
outsb
inc
dec
pop
sub
mov
mov
sbb
mov
cli
ja
push
cltd
mov
xor
sbb
pop
pushf
sbb
push
cld
fnstsw
cmp
sub
scas
xor
adc
push
xchg
sbb
sub
sbb
add
mov
push
repnz
jl
xchg
cmp
lods
movb
jl
fldl
popf
movsl
push
sar
pop
mov
adc
dec
pop
xchg
add
hlt
sbb
mov
sub
je
cmpsb
subb
insb
xchg
je
xchg
add
xlat
outsl
flds
pop
adc
loop
outsb
inc
mov
xor
xchg
pop
adc
lret
add
jo
xchg
xchg
jmp
inc
jmp
ljmp
jb
or
imul
mov
mov
and
jnp
loop
and
fwait
clc
mov
insb
jne
pop
dec
loop,pt
sbb
aam
aaa
rcr
adc
push
or
mov
jp
dec
sub
xchg
mov
add
xor
mov
push
mov
clc
shlb
inc
sbb
push
inc
out
aaa
cli
mov
dec
xchg
cmc
sbbb
cmp
es
mov
stos
test
mov
mov
loop
outsb
ljmp
xchg
xor
jmp
lods
cmp
nop
lcall
fisttps
jle
ja
into
fildll
call
fcoms
lods
stc
mov
dec
adc
sbb
add
fdivrl
cmp
pop
xchg
out
adcb
inc
lds
mov
jmp
adc
mov
mov
shrd
pop
add
xchg
or
mov
ljmp
movsl
jbe
pop
lea
push
lock
mov
lret
lahf
dec
push
or
sub
dec
lock
adc
nop
jne
mov
inc
jmp
out
jno
aaa
mov
xchg
push
clc
jecxz
mov
push
xchg
sbb
aas
inc
push
push
push
jle
and
sub
pop
mull
faddl
dec
and
mov
mov
ficoml
ja
push
inc
inc
aam
pop
das
push
cmp
ret
insl
js
add
outsl
sub
sub
mov
xor
popa
subb
add
aad
sbb
sbb
int
jmp
pop
push
loope
add
cmp
xchg
cltd
movsb
and
outsb
inc
scas
push
imul
inc
sar
adc
cmp
sub
pop
adc
mov
frstpm(287
dec
pop
shll
cld
test
daa
inc
and
aas
lds
mov
xchg
push
push
pop
ljmp
mov
rcll
fstpt
shll
loop
js
cmp
push
clc
push
icebp
rclb
adc
cmpsb
sub
loopne
ret
call
cmp
or
cmp
push
shr
pop
fdivrs
imul
push
or
cmp
sub
fsubl
sbb
sbbb
fists
jle
or
xchg
in
mov
inc
xchg
jecxz
mov
adc
or
inc
rcrl
mov
dec
std
push
cltd
lcall
add
dec
es
hlt
icebp
stos
cld
fsubl
and
pop
jl
scas
jle
or
push
fwait
add
divb
mov
push
insb
cld
mov
dec
lds
pop
jae
and
daa
xchg
xchg
mov
cld
das
xlat
mov
or
xor
xor
imul
insl
into
negb
sarl
in
jno
mov
jle
and
aas
sbb
jns
addr16
xor
ja
add
loopne
fisubl
out
adc
sbb
push
aaa
fwait
pop
test
loop
jge
mov
and
ret
das
jge
inc
data16
fldenv
adc
call
add
ret
shlb
mov
ret
inc
loopne
lods
pop
mov
push
loope
pop
jp
mov
outsb
pop
insl
ljmp
data16
lods
pop
inc
pop
rorl
sub
xchg
out
adc
xor
cmp
icebp
ljmp
aaa
loope
push
in
shlb
test
les
lea
mov
jp
jecxz
shll
js
ret
dec
mov
push
jp
lea
mov
movsb
jmpw
mov
out
jne
dec
xchg
pop
shll
jne
xchg
mov
mov
aaa
mov
pushf
mov
pop
push
sbb
imul
mov
daa
mov
mov
ljmp
jge
inc
repz
or
inc
mov
cltd
sbb
mov
lret
rorl
movb
jecxz
xchg
xor
movsl
imul
cli
sub
push
mov
pop
and
repnz
icebp
aaa
outsl
jg
jmp
xor
pop
fdiv
inc
and
inc
jno
bound
les
icebp
in
sub
mov
jg
mov
lret
in
add
dec
xor
mov
sbb
loop
ret
fsts
and
or
inc
das
shl
sbb
mov
pop
fs
adc
ret
sti
aaa
jge
les
in
in
and
dec
cmp
cmp
ja
out
xchg
mov
mov
push
dec
aam
fdivp
mov
push
out
insb
mov
jbe,pn
scas
jl
and
aam
daa
ja
ja
xor
hlt
or
aas
xor
inc
cmp
shrb
pop
and
and
and
ret
test
stos
shl
data16
ret
clc
lods
pop
fisubrl
cmp
test
sbb
out
hlt
or
push
xor
mov
sbb
inc
mov
adc
aas
or
sub
or
outsb
mov
sbb
sub
jg
mov
in
test
fiadds
adc
sbb
push
sahf
mov
pop
mov
jnp
out
nop
xor
adc
push
push
mov
fisubs
mov
lds
cltd
push
and
lea
lahf
inc
shl
push
jge
pop
in
shl
test
in
add
decl
mov
xchg
les
into
and
or
addr16
mov
inc
test
lret
imul
pop
subb
sub
lret
out
and
icebp
mov
call
aam
add
push
and
mov
call
dec
inc
adc
fdivs
add
loopne
andl
into
mov
mov
sbb
fisttpll
inc
lret
mov
dec
dec
out
jge
jns
test
adc
test
and
cmpl
xor
int
orb
loopne
in
int3
gs
add
cmpsl
popa
int3
xor
es
inc
pop
mov
xchg
push
or
push
sar
sar
jecxz
fisubrl
stc
ljmp
fnstenv
inc
std
fs
in
jg
aaa
std
dec
shll
push
adc
jmp
hlt
push
jle
pop
adc
cwtl
dec
or
pushl
enter
mov
lret
inc
fs
sbb
jbe
adc
and
sub
es
fisubrs
inc
add
int
inc
cmpsl
or
xor
mov
das
mov
shrb
cmpsl
mov
aaa
insb
ja
arpl
pop
sbb
pop
xorb
mov
push
mov
mov
add
and
lock
mov
lock
push
mov
insl
outsl
sub
ss
mov
out
ret
shr
push
jmp
push
daa
push
cmpsl
insb
aad
test
xor
insb
mov
testb
push
cmp
cmp
pusha
xchg
pop
andb
inc
mov
dec
stos
fwait
push
shl
and
cwtl
in
pop
pop
sbb
add
and
adc
mov
sbb
push
xor
in
mov
lock
test
aas
mov
push
sub
jl
adc
mov
mov
mov
mov
mov
mov
mov
aam
lock
jne
out
lods
cmp
jo
and
insb
loope
bound
insb
jb
inc
test
inc
test
dec
lret
sbb
sbb
add
loope
mov
add
mov
aaa
sarb
sbbl
mov
push
xchg
mov
push
imul
and
add
xorb
ljmp
dec
cmpl
adc
cld
inc
fsubs
push
insl
and
cmp
sbb
inc
in
test
push
sahf
cmp
add
and
sbb
arpl
fisubrs
lea
mov
mov
mov
inc
add
xor
pop
out
push
mull
or
int
imull
mov
mov
fucomip
xchg
push
fisubrs
or
popf
popf
or
add
fstl
cmp
das
ret
dec
stos
push
ret
lods
call
mov
jo
cmp
sbb
je
cli
sub
inc
pop
cli
fidivl
aam
mov
sahf
sub
stos
cs
and
cmp
push
cmp
sbb
call
xchg
mov
adc
das
sub
push
mov
add
fistpll
gs
mov
push
cmp
mov
pop
pop
xchg
inc
add
cmp
stos
fildll
das
and
add
aad
xor
mov
xor
jo
movl
xchg
cwtl
mov
xor
xor
insl
js
lock
mov
dec
es
xchg
sarb
outsb
adc
daa
subl
int
shrl
int3
mov
pop
dec
leave
or
jp
mov
add
roll
test
das
popf
dec
push
ffree
inc
inc
mov
push
adc
pop
into
cmp
outsl
pop
jns
mov
hlt
sbb
movsl
xchg
ss
shll
xor
or
mov
mov
and
jecxz
push
pop
movsl
fcmovb
xor
ficomps
add
and
jne
lock
loop
pop
ds
fiadds
pop
test
jbe
clc
xchg
dec
outsb
in
roll
push
pop
add
stos
inc
pmuludq
insb
mov
or
or
sarb
xchg
arpl
cmpsb
dec
fdivs
fcomip
pandn
aaa
xchg
and
loop
nop
jne
push
mov
iret
hlt
das
or
sub
lea
jmp
fstpl
cmpl
je
push
ret
adc
rclb
dec
test
adcl
push
dec
add
popa
loope
popa
xchg
pop
cmp
pop
sbb
insb
adc
shrl
sbb
add
xlat
inc
inc
fdivl
stc
or
push
pop
xor
mov
mov
outsb
pop
mov
adc
adc
stos
lret
jo
mov
push
outsl
add
push
jle
lret
pop
add
mov
lds
ret
das
mov
and
jge
xchg
jmp
repz
ljmp
outsb
mov
xor
push
push
adc
or
insb
adc
cmpl
jno
nop
fbstp
fwait
ljmp
cmpl
loop
mov
mov
xchg
add
pop
movsb
std
dec
ficoms
or
jmp
mov
pop
dec
mov
fstpl
mov
inc
xorl
and
or
adc
or
pop
xchg
mov
pop
rorb
pop
push
mov
mov
dec
sub
lea
data16
jg
jns
dec
cmp
loop
addl
fst
movsl
pop
punpcklbw
sub
xor
sti
das
adc
and
and
inc
lret
rcrb
jge
mov
sbb
sub
adc
add
xchg
jecxz
sub
out
mov
mov
mov
scas
test
push
and
test
pop
dec
lcall
jp
jmp
ds
mov
push
jns
push
ljmp
es
jl
xchg
mov
out
add
pop
in
shlb
jo
lea
repnz
popf
push
lods
call
sbb
and
mov
push
les
fnstenv
mov
or
adc
push
or
add
sub
insb
imull
dec
or
xchg
loop
out
adc
inc
add
xor
aam
aaa
je
pop
adcb
out
mov
cli
adc
sbb
loopne
mov
movsb
decl
mov
mov
popa
aad
mov
in
push
or
pop
incb
cmp
leave
jb
dec
ret
rolb
xor
push
pusha
dec
fs
mov
js
cld
or
or
dec
ret
and
jmp
cltd
dec
mov
push
mov
pop
add
mov
jns
jb
lock
lock
clc
stos
cli
xlat
dec
outsl
sti
cmp
std
inc
push
scas
test
cli
pop
imulb
push
mov
mov
cmp
sbb
mov
clc
dec
jb
adc
push
inc
fcompl
mov
push
pop
jp
mov
xor
mov
xor
imul
pop
call
loope
shll
scas
gs
cmp
fcompl
mov
or
pop
clc
in
inc
mov
xchg
je
dec
mov
popa
jne
gs
mov
mov
std
xchg
xor
leave
push
ja
jle
imul
jecxz
je
jns
mov
or
repz
lret
mov
fs
push
inc
shll
cmp
lock
jae
push
dec
sbb
jecxz
push
movsl
xor
mov
lock
adc
inc
cmp
fxam
pop
mov
imul
pop
push
sub
adc
pushl
loope
cmc
add
sbb
das
mov
inc
shlb
int
subb
rclb
xlat
dec
adc
shll
pushl
dec
pop
inc
xor
das
nop
enter
sub
mov
mov
mov
les
cld
push
xchg
lods
inc
pop
mov
inc
dec
push
outsb
sbb
jl
adc
add
lds
xchg
js
lock
sbb
test
lcall
aad
pusha
add
and
xor
lea
cmc
sbb
xor
inc
insl
push
sti
jmp
xor
push
pusha
push
cli
push
rorb
ret
and
jae
int3
fs
or
push
in
xor
mov
fistl
test
ror
stc
fsubrp
xor
dec
mov
add
cs
lds
mov
test
movsl
pop
aam
les
adc
ja
sahf
xchg
je
call
in
adc
movsl
add
push
arpl
add
ret
dec
icebp
inc
movb
lods
lods
inc
pop
xchg
jo
lea
or
or
lods
mov
mov
xchg
jle
add
jae
nop
dec
outsl
xchg
mov
adc
les
mov
sub
pop
fcmovne
fs
and
inc
push
push
mov
jne
push
and
in
jo
outsb
push
addr16
mov
sahf
inc
adc
subl
sub
mov
adc
fchs
aam
les
sub
sub
sub
and
push
fsubrl
rclb
lahf
dec
inc
xchg
add
scas
fistpl
dec
leave
dec
mov
test
add
lea
mov
lock
sbb
push
push
enter
adc
pop
pusha
fldl
icebp
push
add
ds
pop
lea
lock
arpl
sub
les
jns
jo
push
pop
add
cltd
push
fdivp
adc
ret
das
aad
cld
sub
pcmpeqb
xor
adc
aad
jp
xchg
sbb
push
cld
xlat
mov
jge
mov
xchg
fstpt
push
adc
or
lcall
push
notb
xlat
push
addl
add
hlt
or
test
push
mov
std
sbb
jecxz
mov
push
and
lret
std
into
in
mov
inc
outsl
add
and
mov
lds
jae
sbb
pop
jbe
mov
insl
nop
xchg
fcmovb
push
pop
pop
out
add
and
or
imull
adc
jl
sub
iret
aas
ja
push
scas
mov
fcmovu
jg
fldl
repnz
xor
ret
outsb
fildll
pop
std
fcmovnb
out
mov
bound
mov
test
push
mov
imul
shrb
je
insb
sbb
mov
testl
fcomp
jg
insl
scas
adc
enter
or
imul
rep
aam
lods
adc
xor
fidivrl
add
jbe
aam
movsl
fcomi
push
or
fdivrp
fiadds
cmp
mov
fcompl
or
stc
ret
mov
dec
xchg
je
jge
sub
movsb
out
lock
in
cmp
data16
mov
inc
jb
in
ret
test
mov
mov
dec
gs
mov
aam
push
push
dec
imul
xchg
test
movl
data16
cld
adc
testl
mov
stos
jae
push
in
imul
cltd
dec
or
and
add
insl
mov
sub
jbe
or
mov
test
les
inc
and
lahf
mov
or
pop
in
push
xor
test
and
shl
mov
jg
lock
and
lea
fcmovnbe
call
dec
push
in
test
test
cli
pop
ss
ret
test
jmp
inc
push
xchg
scas
xchg
mov
mov
fsubl
int3
aas
xor
les
shll
mov
mov
daa
fwait
pop
shlb
inc
aaa
sub
hlt
int3
outsb
pop
dec
adc
cmp
jmp
inc
shl
mov
add
add
lods
incb
adc
add
push
jae
inc
ds
pushf
fsubl
mov
cwtl
dec
shll
sbb
add
xchg
clc
jp
jg
in
repnz
test
ret
push
jmp
fisttpll
cmp
cmovl
stos
std
test
sahf
mov
push
pop
jb
cmpsl
or
inc
sbb
push
adc
mov
mov
inc
lds
mov
fwait
mov
int3
gs
aad
mov
nop
lods
adc
scas
cltd
lods
scas
push
pop
or
inc
rorb
sub
bound
outsb
pop
mov
cld
mov
inc
xchg
adc
xlat
outsl
pop
repz
adc
andl
mov
inc
sbb
sbb
fsubrl
sub
shrb
xchg
push
add
pop
mov
dec
mov
das
xchg
fistl
jg
mov
xor
outsl
pop
mov
fisttpll
scas
pop
mov
loopne,pn
mov
cmc
lock
mov
sbb
jl
xor
sti
xchg
gs
or
popf
add
jle
mov
pushf
xchg
fadds
mov
in
inc
xlat
jns
add
mov
mov
mov
or
add
pusha
xor
xor
cltd
rcrb
fnsave
aas
jecxz
inc
dec
sub
fadd
push
dec
push
fldt
adc
rcr
fimuls
mov
inc
push
jp
test
ficompl
fiadds
leave
and
sub
incb
add
or
call
lret
inc
pop
mov
sbbl
dec
pop
outsb
inc
mov
mov
mov
jle
pop
loope
in
jb
xor
xchg
testl
dec
out
pop
insb
out
jl
pop
push
adc
ja
mov
xchg
xor
clc
and
push
pop
xor
push
pop
xor
repz
popa
push
int
push
cmp
insb
clc
xlat
xchg
adc
js
add
mov
mov
pusha
or
push
divb
loopne
pushl
orb
mov
jne
push
push
int3
or
cmc
inc
fnstenv
inc
aas
mov
repnz
lods
out
and
adcl
repnz
std
inc
pop
pop
xor
add
mov
xor
inc
lods
icebp
mov
jo
adc
fsubl
xor
loope
or
clc
fists
sub
mov
into
xor
jnp
bound
fldl
punpcklwd
fsubrl
mov
lahf
cs
sbb
mov
mov
push
dec
push
ds
arpl
jo
cltd
lods
or
aas
shlb
and
ja
mov
pop
push
sub
test
adc
sti
adc
push
in
jg
pop
cmp
mov
push
loope
rclb
iret
imul
icebp
sbb
or
das
push
hlt
mov
inc
movsl
add
sbb
inc
jg
subb
out
ds
mov
pop
aas
dec
cmpsl
ret
adc
add
inc
sbb
out
ss
cmpsl
mov
and
leave
lock
inc
push
cmp
dec
cld
inc
loop
out
cmp
adc
les
sbb
outsb
insl
sub
mov
mov
test
fwait
add
mov
mov
push
xchg
and
dec
jle
jp
jno
add
mov
std
push
insb
loopne
adc
loopne
pop
addr16
data16
pop
jge
mov
repz
mov
jl
sar
sub
cmpl
xchg
and
es
or
and
adc
xlat
pop
cmpsb
outsl
stos
adcl
pop
add
jl
imul
lds
sbb
outsb
ret
lcall
iret
in
push
xor
xchg
sub
and
pop
inc
adc
xor
mov
pop
insb
cmp
js
push
mov
pop
inc
lock
xchg
ljmp
loope
xchg
test
roll
loop
repnz
dec
add
jae
jne
sbb
jecxz
call
add
and
push
lods
cld
jae
leave
mov
adc
xor
push
movsl
mov
xlat
stc
jns
and
dec
loop
jne
stos
mov
push
jl
jne,pn
jle
or
inc
xorb
mov
mov
test
mov
test
adc
dec
mov
adc
dec
and
movsb
daa
test
out
cmp
inc
mov
rol
das
cmp
mov
push
mov
fcomps
into
rolb
xor
pop
push
inc
xor
dec
and
in
jle
add
xchg
dec
and
push
pop
pop
insb
fcomps
xor
fwait
movsl
jb
mov
and
mov
enter
int
pop
mov
loope
notb
sbb
movsb
addb
and
cwtl
inc
sub
out
dec
shll
jp
ret
pop
xor
pop
push
cmpb
jl
cld
jg
popf
jbe
out
pushl
in
and
pop
stos
pop
inc
xor
loopne
jle
jmp
call
cmc
test
gs
sbb
inc
movsl
ret
jo
or
pop
mov
mov
hlt
xor
pop
not
jmp
js
cwtl
inc
add
jecxz
mov
cmp
in
dec
adc
mov
std
adc
sbb
cmp
jle
nop
test
jl
in
dec
inc
test
jnp
adc
popa
or
lcall
cmp
ret
mov
dec
out
gs
push
imul
push
les
ljmp
das
dec
aaa
loopne
mov
xchg
fcoms
inc
mov
sub
mov
jo
mov
mov
lea
push
push
and
mov
mov
or
popf
iret
int
adc
push
in
test
inc
stc
repz
in
imul
pop
mov
cmp
sbb
fsubl
inc
cmpsb
adc
mov
mov
insb
jbe
inc
imul
stc
mov
std
mov
push
sub
or
outsb
cmpsl
mov
outsb
das
cmp
jle
add
je
outsl
mov
push
popa
cmc
or
or
aaa
cmpsl
xchg
push
push
lret
popa
loope
aaa
outsl
scas
adc
ret
std
lods
mov
cli
sub
es
ljmp
rcr
lods
orb
cwtl
pop
out
pusha
sub
jg
jl
into
pop
push
stos
mov
fisubrs
std
mov
fsts
into
repz
dec
mov
ret
sahf
and
movsl
decb
pop
cmp
jb
lea
mov
push
fs
imul
xchg
pop
sahf
mov
iret
and
xchg
test
xchg
lret
jg
xchg
mov
je
test
movsl
movsb
repnz
add
jo
fistps
dec
lcall
and
ret
mov
and
aad
mov
push
lcall
sahf
mov
mov
adc
clc
movsl
cs
and
fists
icebp
mov
xchg
fcomip
pusha
jge
sub
test
lret
mov
popa
test
scas
testb
loop
sub
icebp
xor
mov
xor
push
jecxz
xchg
lods
or
cli
jns
mov
ljmp
cmpsb
pop
cmc
push
shll
in
pushf
fbstp
mov
fiaddl
pop
xlat
jae
loope
ret
and
aad
mov
mov
mov
sbb
mov
decb
push
xor
leave
movsb
orl
pop
out
sub
add
leave
mov
bound
cmp
lea
mov
andb
out
add
dec
repz
lcall
sub
sbb
imull
scas
ret
lcall
or
xchg
dec
pop
jnp
xor
mov
shlb
in
lock
cmpsl
data16
push
dec
jb
insb
clc
outsl
fbld
nop
add
sbb
leave
lock
inc
inc
xchg
or
or
jae
stos
stc
lds
adc
jae
or
ljmp
sti
ljmp
notb
imul
lahf
adc
adc
jecxz
mov
xor
call
and
pop
inc
jmp
adc
sbb
and
push
rcrb
or
mov
jp
jnp
cmp
movsb
hlt
pop
roll
bound
push
jns
in
jg
dec
xor
mov
popa
push
pushf
and
shll
les
ss
clc
aaa
test
fs
rclb
jg
lcall
repnz
adc
lahf
mov
rol
out
push
fnstenv
fs
sti
cmp
inc
xor
and
mov
nop
mov
mov
or
lds
int
and
jg
leave
push
xor
cmc
push
arpl
daa
mov
repnz
outsl
std
lods
xchg
push
push
addb
and
movsb
and
push
repz
mov
jecxz
mov
call
mov
mov
icebp
push
clc
mov
test
xchg
add
fsub
push
rcll
sub
hlt
test
sbb
mov
and
std
or
jns
sahf
lock
sub
add
cltd
mov
repz
andb
pop
jnp
mov
sbb
or
jne
sbb
imul
rol
out
cli
cmp
bound
add
inc
arpl
lods
fbld
fldz
ds
arpl
mov
push
data16
push
cmp
lods
inc
out
rorl
jns
cmp
ja
dec
aad
lahf
leave
outsl
dec
aaa
lock
inc
xor
xor
arpl
int3
mov
inc
or
ljmp
mov
test
arpl
cmpb
cli
xchg
jae
mov
test
out
pop
rcr
pop
test
out
lods
dec
mov
repz
je
outsl
incb
test
pop
sahf
pushl
mov
std
sbb
movsb
fidivs
mov
pushf
shrl
sub
dec
movsb
int3
rcrb
mov
adcb
fldt
out
imul
incl
xor
and
push
loop
sub
push
push
shlb
xor
movsl
sub
and
jmp
ja
pushf
inc
push
test
repnz
loope
clc
mov
xor
popa
add
xor
mov
inc
xchg
aad
xchg
loopne
mov
jb
bswap
xor
insb
fwait
cmp
add
mov
push
outsl
bnd
jno
scas
stos
dec
mov
xor
scas
sub
popf
and
jg
stc
mov
adc
ljmp
leave
mov
pop
sbb
add
lret
mov
xor
int3
adc
outsb
jge
ret
je
test
int3
cmp
and
insb
or
ret
push
fdivs
jmp
jle
sbb
test
out
mov
push
js
or
loope
rcl
dec
iret
lods
out
rorl
pop
pop
cmp
inc
in
mov
ds
sarb
push
xchg
arpl
adc
push
ret
xchg
mov
int
lret
mov
ds
popf
xchg
push
inc
add
mov
fistpll
dec
bound
inc
nop
sub
jp
sub
inc
mov
lcall
daa
or
push
inc
sbb
shl
jg
inc
shlb
cmp
inc
pop
mov
aaa
repnz
test
mov
pop
aaa
mov
ret
shll
or
clc
fcoms
adc
mov
inc
mov
mov
pop
and
mov
cld
fdiv
sbb
xchg
xor
xor
push
or
push
mov
sub
clc
xchg
pop
loop
cmp
in
push
sub
xchg
jle
jecxz
fimuls
lods
imul
ret
shll
xchg
es
inc
in
call
mov
mov
dec
push
pop
xchg
test
pushf
xor
sub
jge
dec
add
jecxz
addr16
mov
push
sbb
test
pop
pop
jns
jecxz
lcall
sti
or
pop
jl
mov
jb
or
sub
mov
sub
cmp
dec
std
add
pop
push
pop
lcall
stc
pusha
ss
add
jne
or
pop
stos
or
lods
int
repnz
cmpsb
adc
das
sbb
out
ret
dec
xchg
call
xor
ss
cwtl
push
add
jge
insl
outsl
js,pn
sti
xchg
daa
push
hlt
or
bound
push
or
mov
loop
push
outsl
add
lods
sbb
mov
or
jns
cli
ljmp
popa
js
sub
outsl
fists
pop
mov
fidivs
cmp
addb
rcll
fistpll
sub
leave
mov
mov
call
cli
add
jge
daa
cltd
push
or
mov
mov
dec
call
clc
scas
mov
add
dec
pop
sbb
mov
js
fnstenv
lea
mov
lret
xchg
imul
pop
roll
lret
leave
mov
mov
rorb
inc
cmc
push
fiaddl
add
rol
repz
sarb
test
xchg
bound
jecxz
pop
jbe
in
cwtl
sti
sbb
dec
repz
mov
ret
inc
push
lret
hlt
jge
push
shr
mov
cli
cmp
push
pop
sbb
outsl
scas
bound
test
daa
loope
sbb
inc
dec
out
sbb
lret
in
in
or
cmp
adc
push
sub
aaa
fistpll
aaa
push
cmp
inc
ret
mov
mov
insl
adc
add
cmc
inc
loope
push
sub
or
lods
je
fwait
mov
mov
andl
pop
cmpsl
ss
push
ret
and
inc
je
push
xchg
mov
cmp
in
les
jge
jl
ficoml
mov
test
adc
add
xchg
fidivs
setbe
test
mov
or
or
sub
mov
sbb
adc
add
and
adc
aas
mov
dec
mov
xchg
stos
pop
xor
push
xchg
or
lods
adc
and
adc
sbb
testl
push
pop
or
ret
inc
jge
xor
sbb
stc
aaa
je
fimuls
adc
jmp
jle
and
aad
int
lds
dec
je
jne
mov
cwtl
mov
loope
pop
inc
daa
and
cli
mov
or
idivl
sbb
rcll
adcb
or
pop
sub
outsl
mov
pop
push
aaa
xchg
dec
decl
aad
int
fnsave
loope
lahf
adc
shll
push
fldenv
mov
loopne
pop
mov
jo
fwait
inc
inc
pop
in
mov
pop
mov
cltd
sub
ljmp
cmp
or
and
lock
and
shl
in
jbe
jo
sbb
pop
loope
mov
add
jmp
mov
imul
add
addr16
jecxz,pn
stos
inc
jo
inc
push
loopne
push
push
enter
add
lcall
pusha
pop
arpl
add
and
mov
dec
mulb
or
ljmp
popf
adc
in
sbb
add
test
push
mov
and
test
mov
jl
int
add
or
rcll
test
xor
sti
pop
fsubr
dec
loopne
cld
idivb
cwtl
pop
dec
xchg
in
in
inc
lahf
cltd
out
mov
loope
das
push
cwtl
push
cmp
mov
sti
shll
movsl
in
aad
or
pusha
and
cmpsl
sbb
aaa
mov
pop
outsb
and
add
movq
inc
jl
lock
cld
ror
ret
in
jle
and
loop
pop
mov
cmp
lods
shll
cmc
lret
push
iret
mov
stc
mov
pushf
and
out
mov
outsb
lods
mov
stos
test
push
incb
stc
xor
scas
inc
mov
pop
jge
loope
dec
aas
mov
cli
push
lock
ja
pop
sub
jecxz
orb
adc
xor
rcll
lock
cmp
push
cmp
aad
fisubl
test
call
fwait
jp
daa
dec
inc
mov
mov
adc
and
decl
test
push
or
nop
adc
idiv
sbb
xchg
mov
test
and
loop
inc
andl
repz
pop
mov
insl
inc
cli
push
aaa
outsb
adc
sbb
push
jge
mov
ljmp
popf
pop
or
dec
fs
push
shll
outsl
popf
test
cmp
lds
dec
sub
int
popa
imul
and
in
push
clc
push
pop
rol
sbb
mov
push
adc
shlb
cmpsb
rorl
add
inc
scas
push
xchg
add
push
sahf
sarb
fsubrl
pop
fsubrl
cli
lods
loop
pop
cmp
pop
mov
add
push
and
lods
mov
in
mov
movsb
and
mov
mov
pop
dec
adc
leave
pop
sbb
pop
arpl
cmp
jle
clc
mov
or
loop
inc
sub
mov
cmp
into
in
adc
sbb
cld
int3
xchg
ret
fdivrl
sbb
xchg
jae
or
aaa
mov
outsb
inc
xchg
jbe
add
aam
clc
inc
and
xor
in
gs
pop
testl
icebp
test
fcomip
fwait
mov
jp
shrl
test
dec
rclb
ds
mov
insl
inc
pop
aad
hlt
out
fnsave
push
pusha
add
jae
fwait
jae
stc
arpl
rcll
cmp
repnz
adc
aad
stc
fistpll
lods
test
mov
jne
leave
inc
mov
js
mov
mov
mov
imul
xchg
and
sbb
sub
inc
mov
ret
test
jge
orl
mov
clc
call
xchg
pop
cld
insb
fistps
jge
inc
fists
sbb
stc
fsubrs
outsl
bound
dec
enter
scas
and
outsl
fs
rorl
cld
mov
sub
push
jle
repz
jo
clc
ror
daa
adc
fnsetpm(287
mov
pop
mov
cmpsl
push
jp
mov
mov
cwtl
je
mov
iret
xchg
test
popa
cmc
aad
xor
push
insb
and
mov
push
sub
mov
dec
nop
loope
iret
iret
clc
adc
insb
ja
aam
nop
sti
dec
cmp
inc
mov
nop
test
push
sar
mov
in
repnz
orb
pop
jo
loopne
sbb
in
inc
push
loopne
xchg
inc
frstor
data16
jge
fcmovu
ret
mov
cmp
jmp
test
jb
mov
and
outsb
mov
into
ret
cmp
mov
xlat
sahf
jle
xor
pop
imul
loopne
pop
sub
loope
xlat
in
add
and
das
push
or
jecxz
fwait
test
mov
lds
mov
in
scas
testb
add
mov
dec
push
pop
rorb
pop
pop
sub
aad
sub
in
jg
shll
or
in
icebp
push
push
pop
orl
jmp
cmpsb
fadd
pop
fldl
xchg
in
push
xchg
mov
push
cmp
dec
xor
push
cmp
ljmp
imulb
or
inc
out
xor
lds
call
mov
pop
loop
clc
adc
ja
jb
leave
add
pop
mov
clc
xchg
filds
aaa
in
pusha
test
dec
sahf
movsb
xchg
jecxz
mov
mov
add
pushf
fisttpl
in
or
sahf
ljmp
cmp
das
dec
inc
xchg
mov
negl
outsl
sub
movsb
add
adc
jg
clc
cs
inc
pop
push
shrb
pop
movups
inc
rolb
fwait
xchg
lcall
pusha
cmpsb
les
in
arpl
dec
shll
orb
dec
jp
xchg
jb
xchg
push
hlt
insl
adcl
pop
cs
adc
cmpl
je
clc
or
jp
lea
or
cwtl
mov
xchg
ss
and
or
call
push
cld
in
dec
adc
clc
repnz
adc
mov
pop
mov
movsb
and
flds
pop
ficompl
es
sarl
aaa
dec
test
and
sub
imul
mov
dec
push
sub
inc
out
dec
rcrl
adc
test
call
jb
into
cmp
jecxz
lahf
cld
cltd
sbb
retw
cwtl
rclb
lods
dec
cmp
and
call
pop
imul
enter
stos
sbb
or
inc
aad
testb
push
sbb
jo
test
xchg
cmp
jg
adc
jo
cs
es
push
jg
sbb
or
mov
movsl
mov
decb
mov
dec
andl
pop
jb
mov
dec
cmc
dec
sbb
dec
dec
cmp
arpl
dec
das
inc
xor
sub
outsl
adc
div
pop
push
xchg
ret
mov
push
adc
mov
inc
push
ja
andl
shl
mov
fcomip
into
jmp
mov
xor
mov
sub
out
cwtl
mov
push
data16
add
jge
push
pop
xchg
xchg
test
je
stc
push
push
lock
cld
insl
jbe
ret
mov
jnp
mov
inc
push
aad
mov
cmp
inc
jae
mov
lret
mov
in
mov
cli
jo
sbb
add
lcall
nop
jle
icebp
or
push
xor
mov
imul
and
or
bound
test
call
xchg
adc
pop
ss
mov
and
xchg
cwtl
or
add
lea
or
ficoms
jge
pop
or
lock
das
std
test
movsl
out
leave
sbb
call
loope
fwait
cmc
js
ficoml
push
push
cs
push
cmpsl
push
mov
pushf
and
mov
outsl
pop
pop
or
out
cmp
pop
mov
scas
and
cld
mov
pop
outsl
mov
lahf
sub
or
jp
test
cs
addl
faddl
mov
or
cld
cld
dec
mov
jle
jnp
adc
addb
movsl
fs
divb
mov
or
or
enter
inc
loope
mov
jle
inc
loope
cmp
inc
nop
push
xchg
jmp
repnz
fcomp
push
cmp
push
loopne
jmp
or
call
xchg
add
shlb
mov
jae
mov
xchg
loopne
insl
jns
push
data16
jecxz
std
pop
jo
and
out
ljmp
je
push
adc
loope
mov
jecxz
cmc
insb
rorl
fisubrl
sbb
add
or
sub
es
out
gs
fisubl
dec
scas
jl
fdivrs
lahf
loopne
shl
popf
lcall
out
fwait
xor
sbb
out
dec
lea
les
orl
jns
mov
push
hlt
sbb
add
ret
test
xchg
test
bound
arpl
push
and
and
pusha
lret
mov
lds
mov
mov
and
clc
fists
sbb
test
in
push
inc
inc
mov
fst
push
out
cli
popa
sub
jb
mov
sub
fldt
daa
sbb
adc
movsl
repnz
pop
mov
add
mov
sbb
sub
mov
cmp
add
mov
decl
das
mov
sbb
loop
inc
cmp
and
daa
pop
stos
std
jns
movsl
add
adc
ret
dec
mov
lock
xorl
cli
push
rorb
mov
inc
jno
xchg
push
sbb
wbinvd
push
hlt
inc
and
mov
xor
loop
sub
leave
int3
push
push
xor
fnstenv
xor
mov
push
push
out
ret
jnp
push
dec
test
mov
or
ss
mov
dec
mov
in
dec
icebp
inc
arpl
and
adc
lds
dec
mov
out
jp
adc
daa
xor
jecxz
rol
insl
addl
daa
movsb
and
dec
loope
enter
sbb
mov
leave
dec
and
nop
cli
testb
std
pop
loopne
dec
jns
shll
and
dec
bound
mov
inc
and
dec
sbb
rcrb
push
jl
and
stc
scas
adc
push
jp
mov
addr16
pop
cmp
dec
loope
out
mov
movsl
lea
ficoms
cmc
xchg
sti
jg
out
std
mov
add
push
insb
in
inc
jno
add
sbb
out
dec
mov
mov
ja
dec
repnz
mov
mov
into
aaa
sub
incl
aam
or
les
imul
bswap
movsl
movsl
jns
in
xchg
nop
ljmp
arpl
nop
mov
ljmp
cmpsb
rcr
fnstenv
xchg
stos
jne
out
ret
adc
dec
or
cli
mov
mov
fistpll
lcall
jb
mov
lods
and
in
filds
loope
out
dec
test
insl
pop
and
jg
outsl
lock
fwait
cld
je
movsb
or
cmpsl
sub
push
es
push
out
xor
pop
out
pop
shr
cli
pop
cmc
adc
lcall
daa
inc
inc
mov
into
push
xor
fisttpl
fucomp
push
xchg
jae
jns
ret
popl
decb
pop
xchg
lahf
addl
js
loope
cmp
inc
adc
test
test
mov
mov
imull
pop
fdivrs
outsb
and
add
inc
xchg
sub
aaa
and
in
pop
mov
adc
fmull
jge
in
movsl
test
push
movsl
movsb
mov
pop
lret
adc
stc
popa
loop
lahf
mov
std
adc
dec
rcr
mov
lret
push
jno
test
loop
hlt
outsl
arpl
push
inc
sbb
fdivrl
int3
or
jno
xchg
sti
test
cmp
inc
frstor
andb
stos
and
faddl
aaa
mov
add
lods
test
push
sahf
cmp
sbbl
pop
cmpsl
shrl
add
pop
mov
pop
aas
adc
hlt
scas
sbb
flds
out
dec
rcrl
push
cmp
sbb
loope
out
mov
cmp
cmp
enter
ja
jbe
sbb
jne
int
add
inc
test
movsl
pop
imull
add
push
shrl
add
lock
fs
sbbb
push
scas
clc
push
test
icebp
or
call
test
outsb
jge
in
movsb
sbb
adc
jg
dec
mov
jne
mov
sub
mov
cmpl
mov
sbb
mov
fdivrl
mov
adc
es
jb
test
xchg
xlat
inc
xchg
rorb
jno
adc
adc
arpl
push
sahf
cmp
movsl
cmp
decl
cmpsb
popa
ss
adcb
std
out
in
decb
inc
sub
dec
cmp
mov
popf
mov
ljmp
jb
push
jge
push
mov
out
or
rcr
sub
dec
test
inc
push
ffree
shlb
xchg
add
out
mov
pop
pop
roll
add
push
jg
and
test
lock
setge
mov
adc
clc
mov
cmpsl
insb
in
cmp
add
xchg
faddl
xor
and
cmc
scas
pushl
inc
or
in
dec
mov
cmp
ljmp
sbb
dec
add
cmc
pushf
mov
test
faddl
stos
add
xchg
mov
jl
test
sbb
shlb
mov
jmp
xorl
inc
sub
pushl
test
sbbb
stc
and
es
xchg
cld
sbb
stc
jns
cmp
icebp
and
aaa
je
and
clc
sbb
pushf
jo
xchg
outsb
ss
pop
push
xor
fisttpl
shrb
xchg
sbb
test
scas
mov
imul
insl
inc
insb
mov
int
outsb
cmpb
or
mov
in
rcr
mov
mov
cmp
push
xchg
sbb
clc
pop
std
mov
sbb
leave
dec
and
testl
fcmovu
xor
pop
andb
mov
push
and
filds
mov
sub
inc
jl
lret
mov
loope
pop
jb
std
pop
pop
mov
and
sub
mov
add
adc
or
fidivs
jg
ljmp
sbb
outsl
or
out
cmc
mov
mull
jp
cmp
inc
hlt
mov
in
notb
xor
shlb
out
cli
call
pop
cltd
nop
sbb
mov
sbb
popf
jne
xchg
mov
lock
push
mov
mov
inc
inc
pop
sbb
or
sbb
push
call
pop
xorl
jecxz
cmpsb
push
xor
push
push
ret
daa
inc
jbe
outsb
jp
inc
in
dec
cwtl
and
xchg
movsl
loopne
loop
cltd
push
fwait
mov
sub
ja
lret
push
mov
dec
add
std
push
mov
testl
push
fadds
xor
call
pop
push
dec
sub
in
sub
jmp
bound
xorl
inc
sbb
mov
aad
inc
cmpl
outsb
cmp
mov
pop
or
mov
mov
imul
or
add
inc
mov
arpl
xor
in
aaa
jle
scas
cmpsl
pop
jmp
xor
mov
insb
pop
inc
adc
in
sbb
cs
push
xchg
xchg
clc
dec
mov
and
mov
std
push
ja
bound
inc
outsl
mov
mov
call
sahf
ds
and
mov
shll
jp
fsubl
imul
mov
les
mov
inc
loope
test
sub
cwtl
pop
xor
xchg
fists
jmp
xlat
inc
lcall
and
sbb
xor
mov
lea
mov
and
das
addr16
mov
popa
inc
sar
jg
mov
jae
dec
pusha
imul
call
dec
xchg
sub
bound
cwtl
and
push
xchg
hlt
pop
icebp
adc
sub
mov
mov
out
mov
dec
adc
insl
jp
jge
mov
fcomi
sub
cmpsl
and
xorl
dec
sub
and
cmp
lea
sub
adc
aam
jp
in
and
cs
cmpsl
or
mov
jmp
popa
cs
call
testl
or
shlb
xchg
in
fildl
fbld
inc
and
push
leave
xlat
inc
inc
dec
or
cmc
idivl
bound
mov
pop
adc
outsl
jl
repnz
sbb
xlat
mov
add
push
jl
scas
out
rcl
lret
jge
sbb
leave
fistl
incl
or
mov
mov
mov
jne
mov
jle
loopne
ljmp
mov
shrl
mov
pop
call
repz
and
out
xchg
sub
out
and
movb
repnz
sarb
lahf
push
sbb
inc
and
push
fnsave
inc
and
pop
popa
fs
loopne
test
sbbl
add
mov
in
out
jle
rcrb
add
into
shrl
mov
and
imul
jnp
ret
and
cmp
sub
ror
sbb
and
adc
rcrb
aad
xor
ret
xor
and
xchg
push
sbb
sti
std
cmp
popa
inc
arpl
aad
lret
jmp
mov
push
ficomps
mov
cltd
bound
stos
mov
adc
leave
sub
inc
push
cmc
fwait
mov
ljmp
pop
inc
sub
adc
xchg
and
es
xchg
sub
add
pop
mov
test
movb
pop
clc
adc
jmp
dec
mov
je
or
outsl
fistpll
inc
mov
and
movsl
mov
ret
inc
loop
jnp
incb
push
cmp
lds
dec
cltd
movsb
fdivs
sub
or
sbb
adc
cmp
add
push
loopne
lea
popa
inc
or
mov
shl
cli
insb
fildl
sbb
pop
pop
sub
pushf
pop
incb
jbe
fbld
and
mov
fwait
loope
jo
lock
push
add
imul
sbb
call
pop
cmp
test
aaa
adc
mov
push
ret
clc
push
or
xchg
dec
repnz
mov
dec
aam
pusha
and
imul
jl
ret
sbb
cmp
adc
xchg
les
cmp
and
inc
mov
mov
addb
in
mov
dec
add
addr16
loopne
cmp
int
mov
push
lods
push
je
add
mov
adc
icebp
or
jle
rclb
cmp
fists
ffreep
ja
xor
sub
dec
test
jmp
lcall
pop
pop
pop
ss
mov
dec
mov
mov
imul
sbb
lds
mov
sub
xchg
pop
cli
sbb
rorl
push
push
outsl
das
fcompl
sbb
rolb
fcmovbe
jge
out
js
fadds
adc
in
aaa
stos
sbb
cwtl
sub
mov
in
sbb
mov
add
adc
lcall
push
pushl
adc
and
jp
in
dec
je
aas
add
pop
int3
sub
ficomps
xchg
or
push
loope
out
jle
inc
add
mov
cmpsl
out
shrb
mov
mov
xor
pop
js
jmp
rolb
stos
jecxz
cmp
out
mov
xor
stos
clc
cmpsb
xchg
mov
inc
jle
sub
jo
loope
call
ret
das
or
and
and
cmp
pusha
pop
fcmovu
repnz
pop
out
scas
lahf
push
mov
jecxz
pushl
xchg
fadd
ja
cmpb
mov
iret
add
popf
mov
ljmp
inc
fisubrs
in
nop
fmuls
cmp
mov
cltd
inc
inc
push
xchg
mov
or
pop
sbb
gs
test
inc
pop
fnstcw
xchg
xlat
inc
rcrb
dec
inc
mov
test
rcrl
sub
adc
or
pusha
cmovo
inc
daa
adcb
mov
popa
idivb
mov
mov
xchg
lods
lahf
data16
push
das
inc
push
push
pushl
mov
add
sub
stos
xor
les
jb
rorl
aas
pop
add
std
in
adc
es
pop
pcmpgtd
scas
jle
mov
mov
stc
xor
ds
dec
or
les
ljmp
jne
cli
fs
dec
cmpsb
dec
int
mov
mov
scas
shll
es
pop
jle
push
sbb
xor
mov
das
cld
ffreep
and
jns
add
cwtl
push
mov
pusha
jmp
cvtdq2ps
or
insl
lret
or
push
mov
ja
xor
test
mov
adc
fwait
push
mov
lret
out
jns
fisttps
addb
and
jle
outsl
mov
int
adc
pop
fistl
lock
sarb
ret
pop
loopne
negb
sub
in
xchg
std
aam
nop
adc
insb
mov
pusha
xor
icebp
dec
inc
in
add
fdivr
lea
jl
out
sub
shll
call
daa
xor
cmp
mov
xchg
icebp
movsl
jp
ljmp
in
adc
adc
inc
ret
pop
clc
pop
dec
mov
and
add
bound
inc
fwait
inc
stos
adc
movsl
std
das
mov
sbb
add
pop
scas
cmp
es
les
mov
dec
xchg
pushf
jbe
sbb
das
mov
dec
addr16
sub
jae
inc
jl
outsl
inc
lret
xor
fucomip
mov
dec
into
inc
pop
in
inc
int
adc
xchg
and
aad
scas
shl
cmpsl
xchg
xchg
dec
inc
mov
mov
fisttpl
xchg
out
mov
push
aad
ja
out
cmp
gs
push
test
outsb
mov
fidivl
or
xchg
js
mov
adc
ret
pop
or
push
cwtl
enter
push
jmp
jp
and
pop
mov
mov
out
and
fisttps
or
call
sbb
scas
cld
pushf
push
cltd
scas
add
pop
clc
inc
hlt
cmp
and
add
mov
mov
orb
and
jmp
sub
push
rcll
sub
mov
add
sbb
fisubs
int3
nop
xchg
movsb
sub
fdivrs
movsb
sbbl
cmp
mov
les
sub
std
pop
cmp
das
sbb
sub
mov
pop
mov
cs
ljmp
xchg
or
imul
fwait
loopne
stos
add
testl
cmpsl
push
enter
mov
out
lea
dec
std
imul
sbb
jge
dec
fisubrs
stos
push
mov
test
int3
ror
ret
movsl
fucomip
fistpll
pop
pushw
fidivl
jecxz
rep
pop
pop
cmp
fdiv
sbb
sbb
pextrw
inc
icebp
and
cli
lods
ss
rcrb
scas
mov
add
cmp
mov
sbb
xchg
orb
cmp
loope
vcvtsi2sd
fists
cmpsb
mov
test
addr16
dec
mov
ljmp
out
shl
les
clc
loopne
outsl
cmp
stos
sti
es
mov
leave
sub
mov
test
dec
adc
and
push
dec
push
pushf
mov
cwtl
addb
cmpsl
loope
sub
ljmp
push
or
sbb
xor
pop
inc
icebp
cmc
adc
jno
xchg
dec
mov
inc
pop
pusha
push
or
pop
sti
cwtl
push
mov
and
pop
mov
std
mov
xor
mov
std
push
mov
enter
pop
clc
test
pop
push
jne
test
jo
lahf
jp
mov
push
int3
lcall
cli
inc
ss
or
pop
xor
loop
movl
jns
es
and
mov
mov
decl
rclb
into
insl
outsb
push
xchg
popf
sbb
add
jb
ss
mov
pop
jno
fildl
mov
outsl
xchg
decl
in
cmpsl
ret
pop
xor
adc
rolb
bound
mov
fstpl
xor
cmp
sbb
pushf
dec
or
std
mov
or
adcb
loop
aad
or
mov
bound
int3
sub
stc
inc
stos
fiadds
pop
pop
dec
cmc
fs
pop
cs
mov
aaa
test
insl
ret
mov
xor
inc
push
pop
dec
aaa
fistpll
mov
outsb
and
xchg
pop
fsubl
mov
loopne
das
mov
imul
pop
mov
aam
cwtl
add
or
clc
mov
pop
nop
xor
mov
adc
xchg
and
xchg
rorb
outsl
sub
incl
add
or
xchg
psubsw
lea
xchg
pusha
xchg
xor
push
inc
jno,pt
sbb
push
or
in
popa
int
jbe
gs
jns
rolb
insb
enter
sub
out
sbb
std
add
sarl
cmp
scas
jmp
cmovno
mov
or
scas
inc
or
loopne
push
mov
popa
sbb
xchg
das
jne
fucomip
sbb
les
jne
mov
push
out
cld
dec
shr
subb
cli
pusha
mov
jbe
ja
arpl
aaa
mov
jmp
xor
lret
jle
lcall
push
xor
mov
out
ljmp
hlt
mov
cmp
adcl
pop
pusha
inc
and
jg
aad
rorb
imul
xchg
and
sub
icebp
adc
pushf
add
or
decl
push
mov
inc
dec
adc
pushl
jo
test
adc
jb
test
call
testl
sbb
adc
cmc
das
dec
mov
jl
xchg
lock
test
movsl
xchg
mov
mov
mov
call
jg
sbb
mov
stos
mov
jp
add
jno
shll
shll
and
cmp
push
jge
inc
orb
shlb
lcall
cmp
cmp
inc
outsb
inc
cmp
test
je
mov
inc
je
pushl
dec
mov
push
adc
inc
sahf
add
stos
in
js
mov
clc
lods
add
add
inc
ljmp
std
push
mov
sub
or
dec
sti
adc
pop
push
pop
loopne
incl
adc
inc
pop
jnp
in
push
pop
lret
mov
sbb
out
xor
sbb
dec
out
dec
xchg
mov
mov
outsl
pop
cmp
ret
cmp
movsl
inc
mov
insl
jmp
sub
js
imulb
jge
mov
xlat
adc
push
pop
sub
xor
nop
push
sbb
lcall
out
push
jne
loopne
inc
xchg
cs
loop
mov
xchg
mov
clc
std
mov
jecxz
mov
pop
pop
sarl
ljmp
or
or
movsl
aam
add
incl
mov
adc
mov
inc
mov
idivb
outsb
mov
or
test
test
hlt
js
and
dec
popa
dec
or
xlat
xchg
rclb
inc
lock
pop
xchg
cmpsb
dec
xor
dec
in
mov
hlt
mov
inc
inc
scas
pop
nop
or
sbb
test
cs
push
and
inc
push
sahf
push
and
andl
ja
mov
add
push
cld
mov
jo
inc
jg
std
xchg
data16
mov
sti
push
outsb
xor
push
das
adc
push
push
lock
aam
rcl
cli
adc
add
inc
xchg
xchg
rcrl
cmp
rcr
icebp
imul
inc
xlat
jg
jg
fiadds
aam
add
xor
lock
call
loop
outsb
addl
pop
mov
incl
dec
or
movsl
push
push
mov
mov
xchg
mov
mov
or
mov
push
call
or
cmp
arpl
pushf
cmpsb
mov
dec
fldt
fdivl
sub
sub
pop
call
cmp
sti
ljmp
fcmovu
sbb
mov
and
lods
dec
mov
inc
pop
call
je
add
outsl
loop
push
lahf
fwait
mov
stos
call
pop
sti
add
nop
and
and
mov
lret
aam
mov
in
cmovae
push
cltd
out
add
ss
and
imul
clc
in
das
repz
pop
xchg
inc
clc
sbbl
adc
dec
xchg
add
repz
aam
icebp
mov
and
outsl
fwait
jns
and
jbe
cs
popa
inc
aas
out
loopne
cli
pop
sar
xchg
and
push
lock
test
sbb
cmc
dec
icebp
insl
test
mov
lock
jne
push
test
nop
out
or
pop
ljmp
fcmovu
cld
pop
lea
sbb
mov
sbb
or
out
movsl
jecxz
out
sub
jge
dec
aas
push
and
dec
or
or
lods
xor
jbe
push
jle
in
into
out
mov
sub
lock
push
lds
mov
sbbl
mov
xor
xor
add
jno
cli
pop
decl
xchg
or
push
fdivr
and
stos
pop
inc
ret
pop
jae
mov
mov
hlt
push
adc
in
sbb
fbstp
movsb
shll
cltd
stos
js
decl
sbb
sarl
arpl
dec
mov
test
mov
mov
popa
addb
sbb
ljmp
andl
inc
xor
mov
add
daa
xchg
inc
xchg
mov
ja
sti
ds
mov
sbbb
and
adc
mov
sbb
pushf
or
cmp
fistl
adc
in
xchg
or
jle
cmc
add
pusha
std
xchg
push
sbb
inc
clc
fsubrl
aad
das
xchg
mov
loopne
call
ret
or
and
stos
inc
call
and
mov
and
dec
movsl
push
adc
aam
aam
es
adc
xor
push
cmp
add
or
xchg
sarl
jge
sub
call
or
push
sti
dec
push
shrl
andb
cld
pop
ljmp
jbe
sbbb
push
mov
fbstp
loop
cmc
xor
pop
inc
inc
adc
incb
jp
das
adc
xor
inc
ja
das
icebp
push
and
dec
inc
aas
arpl
add
push
leave
mov
loopne
rorl
push
push
jmp
icebp
pop
das
xchg
pop
or
mov
sbb
add
lods
jmp
add
jo,pt
insb
pusha
sub
jle
mov
movsb
data16
xor
pusha
or
rcl
xchg
and
inc
lods
lcall
inc
dec
or
fidivs
cmc
dec
movsl
cmp
in
mov
push
add
mov
outsl
ljmp
mov
jb
frstor
mov
adc
push
enter
inc
mov
and
test
cli
test
mov
xchg
jle
dec
decl
jle
sti
icebp
dec
cltd
lahf
push
cmp
jl
ja
lods
mov
jle
xor
out
std
outsb
sti
int
inc
aaa
sbb
pushf
int3
out
push
pop
cmc
mov
in
or
adc
adc
imul
sbb
pop
jmp
aam
jnp
add
scas
in
cmp
idiv
add
aad
cmp
jmp
cli
sarl
out
jb
mov
loope
xor
ss
and
sbb
mov
sbb
outsl
jne
sub
leave
repnz
bound
fcomip
jne
lcall
imul
aam
xchg
dec
push
loop
shll
xchg
pop
push
inc
xchg
jae
inc
or
sarl
lea
jae
xchg
inc
ret
push
jne
ja
cli
clc
mov
jle
daa
mov
jle
mov
rcl
jecxz
xchg
repnz
inc
mov
pop
lock
addr16
cmp
stc
xchg
hlt
push
mov
xor
sbb
loopne
jae
jbe
jl
ret
lods
ficomps
inc
adc
mov
xchg
push
inc
sbb
jns
ljmp
aas
jbe
in
roll
push
inc
jns
aam
rcll
pop
call
es
stc
xchg
cld
push
inc
lock
jbe
or
mov
add
mov
cld
aam
sub
lahf
push
and
test
rclb
or
mov
and
iret
mov
and
fcmovnb
mov
mov
test
inc
fcompl
xchg
push
daa
dec
std
or
jg
fucomi
inc
stos
jl
adcb
cltd
aam
dec
pop
call
push
call
aaa
ficomps
and
nop
mov
and
add
bound
push
outsb
adc
shlb
cmp
mov
test
inc
or
pop
xchg
pop
sub
mov
rorl
cmp
or
fsubr
pop
arpl
ljmp
jl
filds
dec
cld
sarl
subb
sub
lret
adc
loope
icebp
mov
fwait
xor
cmp
adc
xchg
push
add
adc
aaa
jle
jns
mov
test
jne
pushf
lods
sub
test
mov
or
repnz
outsl
std
jmp
repnz
call
sbb
or
fdivrp
outsl
pusha
mov
inc
pop
push
lret
bound
js
mov
sti
aaa
pop
adcb
cmpsb
sub
mov
ds
das
jne
inc
sti
xor
data16
push
mov
pop
mov
test
add
jmp
addr16
sub
clc
lcall
mov
xchg
push
inc
outsl
mov
jb
ret
loope
adc
adc
cld
add
add
sbb
or
xchg
outsb
dec
gs
popa
roll
jge
jg
cmp
mov
lods
out
test
cmp
insl
jecxz
in
gs
pmulhuw
aaa
xchg
jb
xor
fildll
xchg
ja
es
jno
cwtl
xchg
mov
xchg
roll
stos
in
ja
test
and
out
pop
ss
popa
pop
mov
or
movsl
xor
call
adc
repnz
mov
int3
dec
push
or
xchg
or
push
hlt
dec
mov
jns
shlb
aas
pop
icebp
mov
mov
sti
clc
decl
pop
pop
mov
xor
sbb
loopne
push
stos
and
filds
push
cmpsl
jbe
les
adc
loop
and
and
adc
jp
filds
pushf
xor
decl
sub
pop
stos
inc
and
mov
inc
jp
ret
xchg
fcmovu
inc
sub
xchg
jle
test
lcall
out
add
sbb
or
jno
adc
and
fidivs
add
cmp
push
pop
call
adc
mov
fucomi
push
inc
outsb
dec
les
push
rcrl
dec
mov
aaa
or
pop
fs
das
shrb
inc
pop
aad
or
inc
out
lret
fcomip
sbb
popa
movsl
adc
test
and
mov
xchg
mov
adc
les
hlt
push
pop
inc
sbb
inc
lea
imul
sbb
mov
lcall
or
jl
jl
push
sub
scas
xchg
mov
pusha
insl
cli
das
insl
jo
gs
aam
fwait
mov
inc
enter
lcall
adc
es
pushl
icebp
and
sbb
inc
mov
pop
js
hlt
mov
decl
mov
cmc
mov
mov
xchg
lods
mov
insb
arpl
cmp
jae
pop
orb
fstpt
fsubl
push
outsl
outsl
inc
mov
pop
jnp
jb
mov
mov
pushf
cmp
mov
adc
add
das
icebp
cmpsb
jp
sti
loop
aas
and
cmp
out
lds
lds
rorb
daa
push
cmc
in
fisttps
test
add
cwtl
stc
xchg
mov
sbb
adc
mov
pushf
inc
sbbl
shrd
adc
sbb
sub
or
in
rcrb
jle
sub
sbb
jl
pop
pop
sbb
mov
or
jne
dec
jb
sbb
rcll
js
ljmp
mov
enter
or
iret
pop
lock
jbe
dec
add
insb
imul
pop
stos
adc
out
jb
aam
sbb
push
orl
outsl
lods
insl
jbe
sub
adc
add
rcll
and
outsb
pop
mov
inc
cmpsb
aam
add
jg
push
inc
es
adc
in
ret
inc
jae
imul
add
mov
enter
push
in
sub
addr16
adc
aad
out
enter
stos
sbb
insl
add
enter
push
adcb
loope
test
jl
sub
jbe
mov
stos
arpl
cs
or
push
ss
dec
pusha
inc
jmp
outsb
aad
push
mov
das
mov
or
sbb
aad
adc
mov
mov
adc
stos
pop
jge
fsubp
add
enter
decb
mov
add
ror
add
lea
dec
or
push
mov
cli
cltd
mov
inc
in
xor
jg
iret
dec
mov
hlt
or
test
das
inc
jl
add
add
cmp
in
fistpl
lds
and
push
fsubrl
les
jmp
movsb
lea
fistps
lock
and
clc
xchg
je
cmp
add
sbb
lea
add
fucompp
jecxz
pop
mov
mov
and
imul
pop
pusha
mov
adc
and
adc
jecxz
xor
jl
call
insl
cs
in
xor
push
add
and
or
addr16
stos
loop
insb
or
cltd
cltd
cmpsl
sbb
sbb
add
in
push
cmp
outsl
in
mov
mov
pop
xchg
in
add
jmp
and
shl
mov
outsl
ljmp
dec
popf
daa
sbb
lcall
movsl
pop
loop
sbb
inc
jle
xor
insl
and
lcall
push
insb
loopne
adc
jg
das
sbb
push
push
js
lea
mov
mov
or
add
xchg
int3
cmp
sub
or
outsb
and
mov
add
aam
mov
adc
shrb
sbb
outsb
push
xor
sahf
adc
pop
push
shrl
add
sub
inc
lods
pop
mov
pop
inc
push
dec
jne
add
bnd
add
loop
mov
or
inc
sub
mov
xchg
mov
movsb
xor
dec
cs
push
fstl
sub
dec
mov
out
or
inc
inc
outsl
ss
or
xchg
sub
dec
cs
mov
add
pop
cltd
pop
dec
and
movsl
clc
push
push
adc
pop
or
mov
push
jo
inc
inc
push
xor
sbb
je
mov
inc
inc
fisubrl
jl
and
mov
lock
lcall
pop
or
xor
aas
mov
sub
dec
mov
sub
and
sub
and
dec
sub
add
xor
mov
bound
inc
mov
mov
sub
rclb
sbb
pop
and
scas
and
jg
or
jne
or
xor
sub
add
mov
sbb
sub
lds
mov
sbb
mov
notb
and
mov
aas
das
push
repnz
mov
lock
or
push
and
dec
inc
dec
mov
xchg
mov
inc
jmp
jbe
mov
push
and
xchg
and
mov
fnstsw
push
mov
xor
cmpsb
inc
outsl
int
push
decl
lahf
push
fistl
xchg
xlat
mov
add
in
pop
lret
in
iret
mov
fistpll
pop
test
or
mov
cmp
loopne
cmp
pop
mov
mov
pop
mov
clc
jg
xor
xor
push
inc
hlt
mov
les
and
mov
pusha
in
fsts
or
in
xchg
xchg
dec
sbb
mov
fisttps
mov
xor
add
mov
ret
inc
sbb
shl
outsb
jg
test
jmp
push
xlat
mov
and
cltd
cltd
cmpsl
addl
insb
pop
ss
cmp
outsl
popa
xchg
in
scas
movzbl
outsl
sar
das
sbb
xchg
enter
ds
mov
cmpsl
insb
inc
dec
xchg
xchg
sbb
push
add
cmp
ja
pop
in
mov
fnsave
adc
test
push
popa
lret
pop
loop
rorb
pushf
icebp
lret
rorb
pop
xchg
add
jl
lds
pop
adc
fildll
fucomp
adc
push
std
xchg
mov
movsl
jl
pushl
mov
inc
gs
fbld
push
and
pop
xchg
mov
push
add
or
mov
adc
xor
dec
ss
es
mov
mov
lret
mov
dec
sbb
mov
imul
sarb
mov
cltd
es
fucomp
mov
mov
incb
fs
mov
sub
or
inc
xor
mov
pop
ds
les
cli
fisttpl
mov
out
orl
iret
mov
in
add
movsb
inc
sub
jg
cmp
sub
push
ja
xchg
mov
test
inc
in
jg
jno
and
pop
lods
stos
xor
pop
test
and
lahf
call
in
ret
push
bound
add
dec
adc
stc
loopne
pop
inc
xor
mov
mov
aas
adc
inc
loop
cmpl
rorb
or
or
test
bound
and
das
dec
sbb
shrb
mov
insb
out
out
daa
mulb
push
inc
adc
andl
out
mov
das
insl
sub
push
jmp
add
pop
outsl
sti
ljmp
jp
aad
jbe
sar
and
add
arpl
jb
mov
pop
aam
out
out
mov
jmp
or
imul
rcll
loop
and
test
das
adc
mov
xchg
test
inc
jno
jo
mov
enter
push
add
jnp
fdivr
sub
jp
mov
cmpsl
mov
jle
push
fucomi
in
sub
mov
cmp
adc
xorl
push
jg
mov
xchg
sbb
sub
mov
lods
jg
jmp
movsb
mov
xor
adc
push
test
adc
mov
fbld
lods
mov
sbb
data16
insl
sti
xchg
pop
mov
test
hlt
sti
dec
mov
insb
insb
jno
add
xor
je
gs
mov
xchg
jbe
clc
pop
lock
in
mov
roll
pop
hlt
xchg
adc
test
cld
jb
add
ja
mov
pusha
aaa
pusha
jge
ja
ljmp
inc
shlb
jnp
or
jo
sbb
ret
les
dec
outsb
sbb
pushf
fwait
bound
nop
ret
cld
cmpsb
fcomp
sahf
testl
push
cmp
push
mov
sbb
ljmp
in
xchg
mov
ljmp
int3
in
jne
aad
fiadds
mov
in
fists
mov
aas
pop
mov
hlt
jo
call
ljmp
mov
push
shrb
cmp
lock
jmp
lret
pop
dec
sbb
mov
pusha
mov
push
sub
mov
test
pop
outsl
push
push
cmpsb
or
lods
movsb
fnstcw
mov
xchg
lods
imul
cmpsb
fisubrl
shll
fs
imul
ss
data16
mov
mov
ds
ds
mov
dec
sahf
or
xchg
cs
push
ret
clc
insl
jo
or
loop
add
dec
cmpsl
loope
xor
inc
loopne
in
mov
mov
orb
or
repz
repz
movsl
jns
call
lahf
sbb
ljmp
pop
jmp
mov
stc
add
sbb
and
mov
dec
ret
cmpsb
or
fcmovnu
movsl
xchg
fs
cmpb
test
sar
inc
loop
shrb
mov
and
inc
fldl
clc
xchg
mov
rep
pop
lods
dec
jne
mov
bound
lds
aaa
xchg
sbb
pop
add
push
imul
popa
insb
jmp
push
mov
pop
lods
outsb
nop
insl
push
mov
pop
cmp
int
popa
or
xchg
cmp
movsb
cwtl
lcall
or
add
mov
and
adc
fistps
ret
dec
test
pop
pop
mov
mov
inc
test
cltd
xchg
pusha
dec
aas
mov
mov
sarb
mov
jle
jl
es
cli
addr16
mov
cmpsl
and
or
xchg
or
hlt
mov
lds
lret
cmp
jmp
push
dec
ds
fisubrs
add
movsb
ljmp
lret
ret
mov
xchg
mov
sbb
fldcw
cmp
nop
aad
push
or
push
mov
daa
sub
mov
push
rorb
jae
cld
flds
sbb
dec
dec
aaa
xor
hlt
fbstp
jp
add
je
jne
movb
mov
dec
or
lret
pop
or
mov
loope
xchg
push
mov
mov
fistl
out
sbb
adc
or
mov
sbb
ljmp
gs
orb
mov
jle
stos
jge
xchg
lods
nop
mov
mov
jl
sbb
clc
dec
dec
cmp
pop
ds
movsb
dec
rcll
aaa
adc
jmp
outsl
xor
sbb
inc
je
or
xchg
mov
pusha
orl
outsl
pop
inc
hlt
out
aam
jge
or
fwait
pushf
and
ljmp
inc
mov
pop
cli
xor
cmp
mov
xlat
xor
mov
orl
les
xor
inc
movsl
scas
faddl
mov
decl
inc
add
in
and
fstps
lock
inc
adc
stos
repnz
and
out
mov
ret
outsb
xor
or
outsl
ds
lds
pop
test
call
fbstp
or
popf
iret
sti
je
test
sub
sbb
cwtl
sbb
lock
mov
bound
lock
rcll
outsl
out
imul
xchg
roll
clc
test
or
add
rcrl
mov
xchg
divb
mov
dec
push
sub
test
jb
out
mov
cli
jmp
mov
pop
iret
mov
xchg
arpl
cmp
mov
mov
or
mov
push
scas
add
repz
cmc
les
jmp
xchg
xchg
sub
ljmp
xchg
pop
push
push
sbb
and
adc
cmp
mov
mov
and
push
xchg
pushf
or
and
sub
ret
sub
popa
out
decl
adcl
jne
ret
enter
cmp
test
xchg
and
call
adc
cmp
xlat
push
test
dec
adc
inc
inc
push
mov
cmp
cld
jle
rorl
jb
pop
pop
sbb
leave
mov
stos
pop
lea
sub
jmp
pop
test
adc
mov
jno
stos
inc
in
incb
adc
dec
cmp
cs
bound
cltd
adc
dec
cld
mov
in
cmp
mov
cmp
repz
cli
lahf
mov
cli
mov
ret
lock
sub
clc
pop
inc
cld
cs
sbb
cs
lcall
ret
movsb
pop
add
test
sbb
ret
ret
imul
or
aaa
jo
aaa
pop
test
mov
xchg
clc
testb
jmp
adc
loop
mov
cmpsb
and
dec
cmpsl
pop
loopne
jmp
cmpsb
mov
mov
lea
pop
adc
or
mov
mov
xchg
pusha
fcmovbe
or
les
jbe
imul
shl
out
movsl
icebp
in
movsl
push
mov
icebp
xor
xlat
insb
ss
lahf
orl
cmp
das
lods
mov
jmp
inc
popa
outsl
and
aad
div
adc
and
mov
imul
jno
les
movsl
test
adc
adc
int3
hlt
jg
fmuls
add
jp
fisubl
and
outsl
stos
mov
imull
insl
pop
mov
lock
mov
fmuls
adc
leave
hlt
js
mov
cld
pushl
dec
mov
mov
or
xor
mov
cmpsl
inc
test
rcrb
icebp
pushl
push
subb
sub
call
leave
pusha
nop
scas
push
pushf
addr16
mov
or
les
mov
stos
lock
adc
sub
add
or
or
movsl
aaa
rclb
mov
pop
jae
or
movsl
xchg
sbb
bound
mov
push
repnz
mov
rol
mov
in
push
aad
lods
cltd
ljmp
scas
incl
push
xor
adc
sti
popa
xchg
lcall
cmc
push
push
call
pusha
add
jbe
push
cli
outsb
int
mov
inc
lock
mov
inc
dec
cmc
test
int3
sbb
sub
ljmp
xor
pop
shlb
ss
inc
pop
call
bound
fwait
ljmp
negb
roll
leave
jno
mov
push
sbb
or
adc
ret
add
ljmp
mov
leave
popa
out
or
xchg
add
iret
popf
fwait
rclb
jbe
adc
ljmp
pop
fnsave
push
pop
shll
outsb
push
ret
jbe
rorb
outsl
mov
cli
fwait
inc
mov
shlb
xchg
adc
mov
inc
jg
push
and
pop
in
mov
lcall
aaa
sbb
mov
movsl
pusha
fs
popf
popf
das
cld
mov
push
scas
imulb
subb
fndisi(8087
add
sbb
push
or
mov
or
mov
dec
push
aam
test
lods
aaa
fdivrp
push
push
sub
pop
jne
pop
es
outsb
das
cld
filds
xchg
jnp
dec
hlt
fidivs
add
js
dec
es
sub
insl
pop
repnz
test
lods
lds
cld
mov
push
fucomip
addb
dec
std
or
shrb
xor
bswap
pop
dec
arpl
mov
and
sarb
xchg
rorb
mov
outsb
mov
lcall
jns
dec
mov
cld
xchg
and
push
add
and
mov
ljmp
jo
xor
outsb
push
fidivrs
inc
fwait
dec
push
or
mov
outsb
in
mov
les
sbb
mov
je
xchg
clc
or
sbb
mov
mov
out
mov
cmp
and
adc
or
ret
je
xchg
xchg
call
mov
and
cld
cld
call
ss
scas
cmp
mov
scas
leave
fcoml
rorb
mov
cmp
lcall
jb
outsl
jg
pop
hlt
outsl
mov
fdivrl
loope
and
les
rcl
bound
and
xor
lea
and
popf
push
pop
xchg
pop
rolb
decb
mov
outsb
mov
lds
in
pop
push
push
rolb
scas
adc
ret
mulb
fisubrs
lods
jbe
ds
add
pushf
pop
cli
lods
clc
filds
and
inc
mov
iret
or
jns
in
mov
and
mov
data16
or
arpl
push
into
jne
dec
int3
imul
in
adc
pop
or
add
mov
inc
daa
sbb
subb
fstps
push
xchg
sahf
subb
xchg
arpl
push
mov
push
pusha
jl
std
sub
rolb
inc
repnz
mov
hlt
pop
pop
insb
xchg
or
adc
dec
xchg
ret
repz
aaa
fdivrp
test
adc
scas
stc
and
roll
loopne
pop
adc
sbb
fmull
popa
subb
mov
test
mov
adc
mov
fisubrs
jne
aam
clc
out
xor
stos
in
dec
sub
arpl
shrl
add
leave
lds
jo
mov
and
movsb
scas
je
pop
push
mov
sbb
xor
ja
aad
push
fstl
insb
and
movsl
dec
jg
mov
or
aam
test
mov
xor
lods
pop
ljmp
jmp
mov
xor
inc
jnp
call
imul
inc
cltd
subb
cld
loopne
bound
and
jmp
inc
icebp
mov
ds
mov
add
nop
adc
loop
jecxz
jns
add
inc
ljmp
mov
push
lcall
cmpsl
cmpsb
add
loopne
jg
cmp
dec
loope
lret
aaa
les
push
add
lock
pop
std
cli
inc
sahf
fdivrs
mov
or
cmp
add
add
fwait
addb
lret
mov
testb
jp
and
movsl
outsl
pop
fnstsw
daa
xor
dec
insl
loopne
roll
ret
cmpsb
repz
adc
or
mov
jb
xor
inc
xor
fcmovne
out
push
adc
add
rorb
dec
outsl
sub
dec
clc
mov
xor
aam
jmp
cmove
add
cmp
mov
enter
xor
out
dec
mov
shr
or
lock
repz
mov
imul
fmull
push
setae
pop
mov
loope
dec
add
das
mov
movb
ret
rcll
mov
insb
xor
or
mov
mov
shlb
pop
outsb
pop
add
fcompl
popf
call
mov
dec
cmp
xlat
push
mov
pop
loop
cwtl
pop
mov
push
sbb
pop
ljmp
jp
test
ss
pop
lret
ljmp
fdivrs
sub
cli
js,pn
scas
sbb
xor
into
push
jle
and
mov
test
adc
enter
dec
push
cld
inc
sub
push
and
call
mov
icebp
pop
lods
add
adc
mov
notl
faddl
clc
idiv
test
inc
fs
mov
and
into
bound
and
sub
js
pop
push
dec
repz
stc
movsl
adc
andb
nop
out
xor
xchg
adc
sub
fisttps
mov
mov
enter
xchg
lret
add
inc
loope
cmpsb
sbb
les
call
xchg
lret
sbb
sti
sub
mov
jg
roll
sbb
pop
icebp
call
ret
sbb
test
push
scas
stc
mov
std
aaa
jl
out
pop
test
and
cmpsl
andb
es
in
ljmp
mov
dec
xchg
mov
imul
ss
dec
mov
xchg
pop
test
aaa
or
ljmp
aam
adc
pop
inc
rolb
shrl
xchg
add
out
and
ja
data16
leave
out
pop
mov
or
lea
clc
xchg
mov
aaa
pop
cld
aas
lahf
into
or
xor
pop
inc
adc
outsb
sub
jge
sub
mov
add
notl
adc
fbstp
sbb
push
lahf
dec
pop
int3
and
js
and
loop
adc
out
sub
test
push
es
cmp
mov
pop
and
inc
outsl
out
xlat
sar
loope
jb
es
push
adc
xor
or
dec
jmp
dec
and
inc
sbb
pop
or
inc
mov
dec
mov
mov
or
add
fisubs
notl
mov
or
jle
bound
cli
lcall
and
pop
jmp
pop
or
stos
divb
loope
test
sahf
pop
clc
pushl
jg
mov
mov
or
xor
fnstsw
lea
shll
push
mov
xlat
outsl
call
mov
xor
mov
xchg
pop
iret
and
jg
hlt
jg
mov
fildl
pop
and
jecxz
jg
dec
mov
or
test
inc
nop
inc
insl
xchg
add
sbb
mov
mov
cmpsl
scas
in
xchg
sub
pop
hlt
decl
mov
dec
lods
fsubrs
cli
xor
push
andb
test
iret
je
sbb
outsl
add
pop
inc
jmp
test
mov
cwtl
jp
push
sti
pushf
mov
xor
inc
out
xchg
push
fisubrs
cmpsb
into
add
add
push
out
mov
mov
mov
sbb
test
cmpsb
cli
adc
pop
sub
push
call
fistps
addb
inc
iret
fldt
or
sbb
insl
xor
arpl
pop
inc
mov
nop
xchg
ret
push
push
and
lcall
test
pop
pop
push
stos
fistpll
mov
pop
or
xchg
pusha
pushf
pop
inc
inc
xchg
lods
mov
movl
or
sub
pop
arpl
fisubrl
shll
scas
loop
sarb
cmp
jmp
mov
mov
pop
add
stos
xchg
push
stc
stos
dec
fs
or
mov
call
pop
or
sub
push
or
idivl
jb
fstpt
or
add
fldt
mov
push
frstor
loope
xor
fwait
call
fs
jns
outsb
pop
stc
or
or
sbb
mov
pop
pop
push
push
jne
std
mov
push
and
inc
ja
sti
xor
sub
pop
fptan
add
push
xor
cwtl
ja
addl
cmp
xchg
enter
push
or
mov
mov
aaa
outsb
in
aad
cli
pushf
lds
inc
pop
jne
in
pushl
fxtract
test
cs
test
fldenv
out
test
sbb
rcrl
stos
mov
mov
jl
je
sarb
jbe
daa
or
and
sbb
jbe
popa
call
jg
mov
mov
in
js
xlat
stos
shlb
das
jo
mov
jno
je
imul
mov
push
mov
insl
jo
and
les
mov
mov
shr
jecxz
fistpl
lcall
add
push
sarb
movb
push
int3
adc
or
pop
cmp
mov
lcall
psubd
sub
or
sub
loop
mov
loopne
sbb
jno
test
push
imul
lock
mov
mov
or
push
push
aaa
icebp
or
fidivrs
jmp
idivl
sbb
cmp
fnsave
cmpsl
ljmp
sbb
loopne
mov
cmp
ja
adc
lods
test
fcoms
mov
xchg
scas
push
cmc
lea
sti
pop
add
fcompl
sbb
inc
cmp
mov
adc
xchg
cwtl
inc
adcl
fisttpl
xlat
pop
push
out
out
or
aam
and
jge
dec
nop
addr16
and
rcll
das
pop
stos
jp
jae
adc
repnz
xor
dec
mov
dec
adc
cmpb
mov
mov
repz
jmp
data16
out
xor
dec
pop
xorb
push
outsb
add
cli
adc
in
and
pop
push
push
hlt
and
push
add
inc
hlt
add
mov
sbbb
mov
mov
xor
dec
out
ss
mov
dec
les
decl
add
push
test
mov
stos
jle
adc
fisttps
dec
popl
std
xchg
add
scas
push
dec
icebp
test
ljmp
arpl
cmp
push
movsl
cmpsl
jbe
lock
icebp
or
mov
ja
sub
iret
fdivrp
icebp
push
bound
mov
xor
js
add
jno
incb
filds
dec
or
outsl
test
inc
or
sub
in
sarl
mov
or
ss
je
sbb
mov
das
adc
push
push
das
lock
cmp
inc
mov
sbbb
lds
movl
dec
xchg
xorb
xchg
xor
mov
sbb
sub
jb
es
cld
inc
fldenv
xchg
mov
cmp
out
mov
push
test
pop
test
les
cltd
push
fisttpll
and
lcall
movsl
jno
mov
aad
push
push
cld
inc
loope
cld
dec
sub
jb
roll
or
outsl
jbe
cmp
stos
jno
xchg
or
mov
and
mov
sbb
xor
rcll
int
pushl
std
xor
in
test
xor
cmp
rcrb
int3
bound
popa
sbb
or
fadds
and
test
in
outsb
inc
cmc
repnz
cmp
fcmovu
ret
mov
push
cmpsb
and
adc
movsb
xor
cli
fwait
and
aad
inc
xor
xchg
jnp
mov
mov
sbb
lods
loopne
call
cmp
addl
push
or
cmp
pop
pop
pop
lock
mov
push
mov
inc
ds
mov
ja
sbbb
ja
add
movsl
mov
sti
push
mov
repz
xor
pop
ljmp
push
mov
add
or
test
clc
ljmp
sub
in
dec
ds
shlb
pop
ljmp
mov
mull
repz
imul
adc
cmp
push
xchg
adc
push
jne
pusha
mov
pop
inc
shrl
sub
mov
das
std
mov
movsb
jecxz
pop
imul
test
pop
out
inc
sub
and
add
inc
aas
adc
adc
xchg
clc
das
shlb
push
inc
pop
adc
xor
gs
ficoms
addb
repnz
or
lods
mov
pop
fs
mov
push
pusha
mov
pop
std
call
mov
and
or
push
scas
pop
aas
or
mov
lds
sbb
adc
push
push
add
aaa
mov
nop
popa
push
pushf
rorl
dec
out
adc
inc
rclb
mov
and
leave
jne
data16
lret
xchg
add
mov
lahf
rorl
leave
shrb
mov
lret
inc
mov
xor
push
mov
mov
clc
pop
in
lea
xor
jo
jbe
mov
pop
hlt
push
push
pusha
sti
jnp
inc
add
int3
daa
inc
movsl
outsl
sbb
jmp
cmp
inc
mov
lret
jle
mov
fsubrs
outsl
mov
fs
or
fiaddl
pop
jno
ret
push
lods
adc
push
mov
xchg
mov
ljmp
or
roll
andb
and
jno
es
push
imull
shll
inc
sub
sbbl
shlb
fucomp
mov
dec
mov
mov
scas
jp
jp
pushf
cltd
out
inc
shlb
jmp
and
add
jge
outsl
out
cmp
jg
shll
jbe
xchg
inc
sbb
pop
sti
lcall
call
xchg
inc
jmp
inc
std
cmpl
mov
sbb
add
push
sbb
ljmp
sbb
and
aas
jle
cmp
cld
lods
cli
filds
inc
sub
push
arpl
test
cmpb
sar
or
insl
xor
mull
sbbb
sub
or
inc
pushf
clc
out
sbb
add
xchg
lcall
sbb
mov
call
add
lods
sub
jle
pop
rolb
mov
mov
mov
cwtl
jle
ljmp
bound
or
in
mov
push
and
dec
adc
adc
test
mov
lar
nop
les
ja
pusha
lret
orb
mov
rcr
xchg
fbstp
orb
pop
push
mov
add
add
movsl
lret
insl
cmp
pop
xlat
mov
inc
and
in
lret
arpl
xchg
int
add
push
setl
sub
sbb
insl
outsb
cmp
sub
push
push
add
pop
and
sub
dec
repnz
popa
sub
inc
insl
nop
outsl
mov
mov
orb
lcall
inc
and
fs
mul
add
dec
shlb
cli
pop
sub
or
out
shr
inc
and
mov
aad
mov
fcmovnb
es
or
iret
imul
aad
stc
push
mov
xchg
fwait
sub
xchg
inc
or
insb
jmp
pop
aaa
mov
xchg
cmp
cvtpi2ps
clc
out
shll
inc
adc
adc
fwait
lahf
jl
fwait
outsl
or
cmp
mulb
mov
mov
fmul
inc
push
push
cmpsl
ficompl
jg
mov
cs
mov
push
mov
xlat
push
dec
or
outsb
into
loopne
ret
aad
lds
pop
js
sbb
scas
loop
push
push
cld
pop
lcall
cld
icebp
enter
or
std
daa
mov
loopne
imul
mov
xchg
xchg
aam
arpl
sbb
xor
push
or
icebp
ret
negl
repz
mov
imul
clc
call
push
icebp
nop
pop
push
bound
jl
xlat
rcrl
sub
test
push
andb
dec
mov
or
js
sub
dec
pop
cli
call
icebp
and
push
out
jl
gs
lods
stos
aas
or
decl
shl
dec
push
mov
push
shl
pop
mov
stos
cmp
or
fcmovnu
testb
fsubr
push
xor
or
cmpb
pop
or
movsl
test
addl
add
ret
mov
xchg
lcall
les
lods
testl
int
add
cmpb
stos
out
scas
or
enter
lock
data16
adc
push
sub
pop
add
sub
repnz
mov
inc
cld
jae
and
push
jns
adc
cmp
rcrl
and
mov
sub
lods
and
or
fs
mov
jno
sub
dec
xlat
dec
pmaxsw
fsts
cmpb
xor
mov
xchg
aaa
dec
mov
add
add
cmpsb
xor
cmpl
pushf
test
cmpsl
cs
mov
in
in
icebp
cltd
jle
jle
add
cs
aaa
sub
sbb
js
mov
out
stos
ficompl
mov
or
mov
sbb
fwait
imul
adc
std
testb
xchg
mov
cmp
dec
scas
inc
out
stos
cmpsb
aaa
outsb
pop
mov
jo
loopne
or
aam
jmp
insb
lock
xchg
or
leave
push
bound
aad
call
aam
addw
xchg
rcrb
dec
sub
sar
outsl
repnz
es
nop
pop
mov
cmpsl
pop
fcmovbe
jb
jnp
std
or
jmp
ss
cmp
dec
outsb
or
out
inc
ret
and
sbb
jmp
mov
fstpt
out
insl
push
xchg
int3
popf
xchg
fcomps
je
das
xchg
scas
ss
push
ljmp
dec
std
pop
push
insl
addb
sbb
mov
sub
inc
push
jno
icebp
dec
adc
outsb
add
test
push
pop
lock
cmp
mov
test
mov
and
jg
add
gs
jo,pn
in
dec
iret
ja
ljmp
int3
lods
sub
ficomps
sub
fnstsw
fldt
aaa
sub
dec
ret
test
fistps
inc
dec
pop
lods
arpl
pop
cli
outsl
pop
xor
cmp
int3
clc
sub
mov
pop
jmp
cli
int3
sti
inc
dec
gs
pop
enter
fisubl
fsts
mov
inc
in
or
xchg
int
fmul
xchg
jno
in
mov
pusha
je
lock
mov
inc
pop
clc
orb
subl
clc
sbb
fst
out
or
pop
outsl
dec
jl
int3
xchg
xor
aaa
outsb
mov
push
outsl
fwait
sub
sbb
popa
xchg
lods
inc
xchg
jecxz
shrb
lods
cvtps2pi
mov
movsbl
cmp
int3
rcrl
adc
cld
clc
add
cmp
xor
mov
ret
addr16
and
push
in
sbb
add
fistpll
sbb
adc
mov
test
mov
subb
push
je
loop
shll
mov
mov
and
in
dec
push
enter
mov
pop
adc
lds
xor
mov
xor
jbe
lods
pushf
divb
addr16
sub
or
add
jno
mov
cmp
icebp
ds
stos
cld
add
dec
mov
pop
stc
mov
sarb
enter
mov
loope
repz
push
out
dec
cmp
test
mov
sti
mov
push
cmpsl
sbb
incl
dec
sbb
cmp
jbe
inc
dec
cmp
stos
mov
add
pushf
or
pusha
cmp
jg
mov
lcall
jae
aaa
push
repnz
mov
hlt
mov
cld
jle
shll
fstpl
inc
aam
es
jg
in
rorb
jo
jbe
push
fcomp
shll
sahf
mov
int3
adc
mov
push
cmp
mov
enter
push
jge
add
fidivl
mov
in
xchg
bndstx
jne
jge
aas
rcll
sbb
and
xchg
mov
dec
mov
cmp
div
sbb
stos
and
sub
xor
loop
cltd
xchg
push
arpl
js
adc
aad
insl
mov
fcomi
int
or
ret
dec
mov
or
decl
mov
or
sarl
cmp
outsl
in
outsb
xchg
adc
mov
jne
sar
jp
outsl
hlt
dec
or
fwait
mov
sub
mov
inc
ja
loope
dec
mov
cli
xor
inc
lds
test
sub
sarl
mov
mov
xchg
jg
mov
mov
fsubrl
xor
filds
pop
xorl
cli
xlat
dec
aam
xor
jno
test
movsl
aaa
cli
jbe
dec
adc
inc
loop
pop
fistpll
pop
cs
xlat
fsubrl
dec
inc
push
inc
sbb
sub
xor
adc
cli
dec
mov
in
clc
aas
mov
jb
dec
push
push
adc
jle
sbb
and
out
test
cmpsl
or
adc
out
sahf
test
mov
std
pop
jp
xor
mov
adc
inc
int
je
sbb
stos
push
cmp
and
dec
cmpsb
sti
out
cmp
xchg
fcoml
test
aam
mov
mov
ds
xor
sahf
lahf
pop
add
lods
cli
stc
sbb
ret
cmp
mov
loopne
cmpsb
sarl
in
mov
lret
es
fcomps
outsl
adc
out
sbb
test
pop
add
mov
pop
mov
xor
subb
xor
mov
jno
add
lock
aaa
enter
outsb
xor
and
ret
push
cmp
inc
lock
pop
pop
pop
cmp
push
in
movsl
fistl
lods
pop
cmp
sbb
jge
jae
sbb
loop
dec
addr16
loopne
mov
jp
sbb
or
cmp
aam
pusha
mov
mov
call
leave
mov
xlat
jl
int3
pop
lcall
jno
lea
bound
or
pusha
or
and
dec
data16
push
ja
sbb
in
fisttpl
lcall
dec
inc
pushl
int
xor
int3
and
and
pop
out
fisubs
push
subb
dec
sub
push
cmp
push
cmp
fiadds
andb
push
or
dec
add
or
adc
mov
rcrl
inc
jne
and
insl
or
adc
push
mov
cld
in
cmp
jg
sbb
mov
movsl
repz
xor
mov
pop
adc
fstpt
xor
push
mov
mov
clc
lcall
push
rclb
lea
mov
out
in
push
lahf
pushf
clc
popf
pop
sub
aad
xchg
stc
out
repz
jge
pop
mov
mov
test
lods
lods
mov
push
movsl
callw
jbe
sbb
mov
sbb
mov
clc
cmpsb
int3
add
outsb
cwtl
jo
fnstsw
xor
mov
test
jbe
sub
or
mov
sub
sbb
dec
enter
ret
rcl
mov
mov
insb
pop
fistpll
pop
xchg
cmp
add
sbb
shll
not
jecxz
jno
testb
popa
imul
mov
cmp
lods
sbbb
push
test
push
addr16
cmp
mov
shll
iret
add
in
mov
pop
pop
decl
loope
clc
enter
push
ficompl
or
add
test
pop
mov
xor
loop
int3
pop
js
outsl
push
mov
sub
lock
out
testl
decl
sbb
lahf
fwait
movsb
pop
lret
cmpsb
ret
adc
aaa
aas
inc
and
and
test
out
aad
ljmp
xchg
aam
add
aaa
shlb
push
sbbb
jbe
jo
sub
adc
lea
sub
xor
xchg
outsl
mov
lea
sub
mov
ret
dec
xor
or
sbb
inc
jg
push
xor
iret
dec
cld
and
and
and
jmp
outsl
push
pop
jp
adc
xchg
sbb
into
sbb
sub
je
push
iret
insl
mov
lahf
and
mov
cwtl
outsb
ret
jl
ret
das
push
scas
in
or
pushf
push
sub
outsb
loopne
xor
xor
roll
jp
inc
out
test
jne
add
iret
inc
jnp
cld
cmc
mov
rolb
popa
sub
push
adc
fildl
repz
test
mov
cmp
xchg
sbb
pop
aam
sbb
mov
scas
out
mov
loopne
jbe
cwtl
xchg
sub
mov
mov
and
mov
mov
cmc
test
out
cltd
pop
sbb
adc
aas
dec
or
mov
mov
movsl
idivl
fnstenv
push
mov
sbb
sub
add
mov
popf
movsb
xchg
add
test
xchg
mov
fsubrl
shlb
inc
sub
mov
outsl
jne
in
jge
sbb
pop
imul
cmp
fwait
ljmp
mov
add
push
inc
jmp
jno
pop
mov
xlat
nop
call
dec
test
jl
and
scas
inc
jne
cs
arpl
and
mov
jne
shlb
out
push
inc
cmp
scas
mov
test
dec
push
add
inc
lds
dec
sbb
mov
mov
arpl
jecxz
call
insl
or
cwtl
cmpsb
add
icebp
inc
xchg
jae
sti
int3
push
incl
dec
push
incb
sbb
jb
pop
pop
insb
push
ss
jle
mov
loopne
mov
mov
cmpsl
or
popf
pop
dec
clc
push
icebp
lods
jle
jno
xor
mov
push
js
clc
mov
and
test
insl
jecxz
std
or
and
jnp
sub
dec
fbstp
or
das
mov
out
mov
cli
sti
cmp
cmp
dec
mov
ss
out
inc
mov
push
adc
sti
ret
shll
add
in
mov
leave
addb
jg
mov
cmovl
or
fldl
sar
imulb
mov
gs
pop
mov
xchg
mov
lds
mov
xlat
pop
outsl
xor
push
cmp
jbe
fwait
test
dec
mul
push
add
adc
xchg
inc
loop
std
rclb
push
in
xchg
and
ficoms
push
pop
jge
or
sbb
and
ficomps
das
jnp
sbbl
mov
aad
inc
mov
scas
test
xchg
das
push
push
jmp
or
pop
cs
mov
outsb
cli
inc
popf
pop
mov
test
xchg
adc
cmp
rcll
loopne
sbb
adc
testb
lock
dec
repz
lods
xchg
frstor
xor
mov
mov
fsub
ret
jg
sub
sbb
mov
mov
out
mov
in
xchg
clc
in
push
and
pop
pop
and
xor
call
jmp
push
cltd
subl
dec
inc
decl
sbb
ds
push
stc
imul
and
jb
popa
shll
push
call
fs
out
and
mov
ljmp
xchg
add
push
pop
xor
pop
sbb
sahf
popf
fucomp
push
cltd
call
dec
jmp
push
or
mov
addr16
ret
jmp
pop
aaa
mov
rorl
inc
and
inc
orl
in
out
std
mov
mov
xlat
jbe
imul
jg
das
les
mov
jp
jg
mov
pop
sub
cmpsb
ret
scas
les
movb
mov
cmpsb
in
or
inc
add
fisttps
cmp
daa
stos
pop
aaa
dec
xchg
call
jg
cmp
test
push
push
lods
adc
daa
fmuls
popl
lea
int
and
jb
jmp
fbld
nop
pop
adc
adc
sbb
dec
lods
in
mov
rcr
movsl
jns
or
stos
rorl
jge
xchg
imul
test
bound
sbb
add
pop
add
pop
bound
insl
test
sub
das
out
stos
and
push
sub
loope
dec
call
dec
cld
bound
dec
jo
js
inc
insb
loop
in
sub
roll
add
jmp
subl
add
in
mov
mov
push
test
ljmp
push
jecxz
xor
js
arpl
icebp
stos
pop
out
bound
cmpsb
data16
scas
dec
adc
push
inc
or
test
sub
loop
sub
sub
ret
out
sub
push
imul
mov
jmp
xor
cmp
hlt
aas
adc
and
push
jbe
pop
push
inc
inc
cld
ljmp
jecxz
mov
and
xor
add
orb
push
inc
pusha
les
out
sub
dec
inc
pusha
jg
call
insl
jo
jb
push
je
imul
je
outsl
fs
jne
gs
popa
outsb
fs
je
jg
movsl
sti
jo
outsb
outsw
adc
outsb
push
arpl
pop
fcmovnu
pushl
outsb
inc
imul
or
cmp
sbb
popa
jo
pop
dec
jns
jnp
mov
and
imul
insb
mov
jb
outsb
and
jb
outsb
je
push
dec
fs
fs
insl
sub
daa
dec
lcall
sub
gs
popa
addr16
ret
push
inc
add
dec
add
push
push
sbb
push
cmc
and
add
push
add
fsubs
xchg
add
cld
roll
add
int
add
or
push
add
popa
dec
adc
add
adc
push
jbe
out
add
pop
in
fistpl
push
add
mov
cmp
rolb
dec
mov
rcrb
add
push
popf
inc
je,pn
js
iret
dec
add
pop
push
and
in
cs
popa
test
into
out
or
dec
add
push
pop
push
add
mov
mov
inc
mov
add
int3
mov
daa
inc
jae
arpl
jmp
dec
lcall
add
mov
lret
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
adc
add
push
add
sbbb
add
nop
add
addb
sldt
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
xor
add
jo
add
cwtl
add
sub
add
rolb
sub
add
call
add
add
add
add
add
add
inc
add
call
add
add
add
add
add
add
dec
add
xor
add
or
add
add
add
dec
add
adc
add
or
add
add
adc
add
add
or
add
add
sub
add
add
or
add
push
add
rolb
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
xor
add
or
add
add
sbb
add
add
add
add
add
add
add
pop
add
xor
add
or
add
pop
add
dec
or
add
add
add
add
add
add
add
push
add
or
add
add
add
jae
add
add
add
add
sub
add
add
add
or
add
add
loopne
add
sbb
add
sti
push
add
push
add
add
add
add
jbe
add
add
add
add
test
add
add
add
or
add
add
add
add
or
add
ret
add
sub
add
xor
add
and
add
add
or
add
add
rolb
add
add
push
or
add
add
add
add
add
add
add
adc
add
adc
adc
adc
and
add
daa
cmp
or
cmp
add
and
add
and
and
and
and
and
xor
xor
xor
add
xor
xor
xor
xor
xor
cmp
cmp
xor
add
inc
add
push
add
cmp
add
ds
add
cmp
add
inc
pop
add
push
push
add
pop
add
dec
pusha
add
push
add
push
insb
add
jae
or
add
dec
pusha
add
dec
add
pop
push
aas
pop
imul
pop
outsb
add
popa
jbe
or
add
gs
or
add
push
jae
or
arpl
inc
inc
inc
add
inc
add
add
inc
add
add
add
push
add
push
add
push
add
add
add
pop
add
add
popa
add
arpl
inc
pop
add
data16
insb
add
arpl
push
push
add
arpl
arpl
push
push
imul
jb
jb
jae
jae
je
je
jp
jp
jg
jg
jnp
jnp
or
jp
add
jnp
add
xchg
add
jb
add
mov
inc
jb
add
xchg
pop
mov
add
xchg
add
mov
or
mov
mov
add
lahf
scas
add
mov
adc
mov
orl
orl
add
xchg
add
movsl
add
mov
add
jecxz
add
incl
outsl
iret
add
rolb
inc
incl
addb
add
test
test
add
mov
add
xchg
xchg
add
fwait
xchg
add
cwtl
add
sahf
sahf
add
pushf
mov
add
mov
mov
add
mov
add
test
test
test
stos
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
sarl
mov
ret
ret
xchg
incl
mov
incl
mov
ret
enter
lret
lret
les
into
movl
lret
lret
add
into
enter
into
add
ror
add
ror
add
ror
add
ror
add
ror
add
aad
add
rcl
add
rcl
add
rcl
add
aam
add
xlat
roll
rcl
rolb
aam
aam
add
fcom
add
add
fst
add
fcomp
add
add
fcmovu
add
fcomp
add
add
fcmovu
add
add
add
add
in
add
jecxz
add
in
add
add
repz
aam
incl
loopne
loopne
loope
loope
jecxz
jecxz
jecxz
jecxz
in
in
in
in
out
out
jecxz
jecxz
in
in
out
out
out
out
in
in
out
out
out
jmp
add
jmp
add
in
jmp
in
in
in
add
out
out
add
jmp
add
repz
lock
lock
repz
hlt
repz
hlt
hlt
add
div
add
div
add
clc
clc
add
stc
stc
add
sti
sti
add
incl
inc
cmp
pusha
cmp
add
add
pop
sub
pop
or
or
pop
or
add
or
add
add
or
jmp
pop
xor
sbb
jmp
add
or
xor
push
iret
push
and
xor
add
add
movups
xor
jl
push
cmp
xor
sgdtl
xor
cmp
push
adc
shlb
cmp
aaa
xor
add
add
push
sbb
xor
cmp
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
or
cmp
jp
inc
lock
mov
dec
inc
cmp
xor
sub
add
add
xor
add
inc
dec
adc
dec
adcb
add
xor
or
dec
adc
mov
js
lods
mov
dec
inc
xor
xor
movsb
or
add
insb
sgdtl
xor
xchg
lret
xchg
jne
lcall
xchg
adc
xor
add
insb
or
add
add
pusha
or
rolb
dec
xor
lcall
xchg
in
adc
add
pusha
add
add
add
add
xor
dec
xor
xchg
scas
lcall
dec
cmp
add
or
or
xor
dec
xor
test
shlb
mov
xor
or
or
xor
cmp
jge
xchg
lock
mov
cwtl
xchg
mov
cmp
push
or
or
add
dec
jb
dec
jnp
xchg
stos
mov
mov
dec
jns
dec
cmp
ud2
add
shlb
je
ja
mov
lock
mov
dec
jb
cmp
or
or
xor
dec
dec
dec
js
mov
lock
mov
dec
dec
dec
cmp
or
or
add
inc
dec
jno
jge
xchg
stos
mov
mov
js
dec
inc
cmp
ud2
add
shlb
dec
jno
jge
xchg
lods
ljmp
jno
inc
cmp
or
or
xor
inc
dec
jno
jge
fwait
mov
shll
inc
mov
jge
jno
inc
cmp
or
or
add
inc
dec
jno
jge
pushf
aad
gs
pop
sub
mov
js
dec
inc
cmp
ud2
add
shlb
dec
jno
orl
aas
cmpsl
mov
dec
inc
cmp
or
or
xor
inc
dec
jle
xchg
mov
dec
sub
sub
ds
mov
inc
aaa
xor
or
or
push
adc
adc
adc
adc
and
sbb
adc
adc
adc
adc
adc
ud2
add
rolb
sbb
test
and
outsb
push
sub
pop
das
pushw
pop
cs
add
clts
adc
adc
adc
es
dec
push
imul
sub
and
adc
adc
ud2
add
invlpg
dec
dec
jno
jge
xchg
mov
lock
xchg
jno
dec
cmp
ud2
add
add
add
shlb
inc
jno
jge
xchg
stos
ret
lock
mov
js
inc
or
xor
or
add
pusha
or
xor
outsl
dec
jno
jge
fwait
lods
leave
fsubp
in
lret
stos
fwait
mov
jno
outsl
or
or
add
movsl
or
or
dec
jno
jge
pushf
mov
into
in
mov
mov
jno
dec
pusha
or
or
add
add
cvtps2pi
inc
dec
jbe
mov
jmp
lock
test
dec
inc
cmp
add
pusha
add
or
xor
cmp
jns
mov
lock
cmp
xor
or
add
add
add
add
or
xor
cmp
jns
mov
lock
cmp
xor
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
in
iret
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
adc
add
sub
add
adc
add
and
add
add
or
add
add
inc
add
add
add
add
xor
add
cmp
add
inc
dec
add
or
add
outsl
add
inc
aas
add
pop
add
mov
add
pop
pop
add
sub
add
sbb
add
adc
add
mov
add
fwait
add
incl
push
dec
dec
add
movl
pop
test
inc
inc
inc
add
or
add
sbb
add
incl
add
or
add
add
pop
add
add
sldt
add
add
or
add
or
adc
or
push
push
pop
adc
add
or
or
add
adc
adc
add
adc
add
add
add
add
push
add
or
add
or
add
add
add
add
add
add
add
add
add
incl
jmp
incl
or
incl
or
incl
or
incl
jl
add
add
add
push
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
add
add
add
adc
add
xor
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
xor
xor
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addb
add
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
imul
outsl
add
jae
or
inc
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
pop
fadds
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
decl
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
inc
fiaddl
add
add
imul
add
add
insb
add
add
add
insl
add
add
add
add
add
add
add
add
fiaddl
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
add
add
add
sub
add
add
imul
add
add
add
insb
add
add
add
insl
add
add
add
add
add
add
add
add
faddl
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
jb
insb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
je
jb
insb
add
add
add
out
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
out
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
addb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addl
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jl
pop
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addl
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
cmp
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
xor
add
inc
add
add
or
inc
add
add
add
add
popl
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
lea
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
adc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
imul
inc
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
and
add
add
or
add
add
rolb
add
or
add
or
add
add
add
add
add
add
add
adc
add
sbb
sbb
add
sbb
pop
add
push
and
sbb
and
sbb
sub
and
sub
das
add
sub
add
xor
add
add
xor
add
cs
and
xor
and
xor
add
xor
sub
cmp
sub
xor
xor
cmp
xor
cmp
cmp
cmp
xor
add
cmp
add
je
cmp
add
add
dec
add
pusha
add
insl
add
insb
add
jns
pop
jae
add
jns
imul
add
jnp
popa
ja
add
jnp
arpl
add
ja
jb
js
js
jle
add
addl
add
add
xchg
add
xchg
add
mov
add
mov
add
mov
bound
add
test
ja
addb
add
add
les
add
roll
add
jecxz
insb
xchg
add
xchg
add
popf
add
mov
add
xchg
xchg
add
cltd
xchg
add
popf
lcall
pushf
popf
add
popf
add
cmpsb
movsl
add
scas
mov
mov
mov
add
cmpsb
movsb
add
test
add
stos
cmpsl
add
test
test
stos
stos
stos
add
scas
stos
add
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
leave
add
mov
enter
roll
lret
test
aam
mov
out
add
add
mov
enter
enter
lret
leave
enter
lret
into
lret
lret
into
add
int
add
ror
add
ror
add
ror
add
rolb
rcl
aam
aad
aam
rcl
aam
aam
aad
aam
aad
add
aad
add
xlat
add
aad
add
aad
add
xlat
xlat
add
add
fcom
add
fcom
add
fcom
add
fcmovnbe
add
fcom
add
fcom
add
fcmovbe
add
fst
add
fcom
add
fcom
add
fcmovbe
add
fadds
flds
rcr
fadds
fcomp
add
fcmovu
add
fcmovu
add
fstp
add
fstp
add
fcmovu
add
fcmovu
add
fstp
add
add
add
add
add
add
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loop
add
jecxz
add
in
add
loope
add
in
add
hlt
stc
add
lock
lret
add
sti
sti
add
sti
incl
loope
loope
loop
loope
in
loope
loop
in
in
in
out
in
in
out
call
call
loop
loop
in
in
in
call
in
out
jecxz
call
add
ljmp
jmp
ljmp
in
in
jmp
add
in
in
add
out
out
add
out
in
add
lock
in
lock
repnz
add
incl
cmc
div
add
div
add
div
add
stc
repz
stc
hlt
add
stc
cmc
add
stc
cmc
add
sti
clc
add
std
cli
add
stc
stc
add
cld
stc
add
incl
add
add
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
push
pop
pushf
mov
test
lods
mov
cmpsb
pushf
mov
mov
mov
lods
stos
lods
lahf
stos
test
popw
add
add
mov
mov
mov
mov
mov
mov
sarb
xchg
push
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
popf
lea
add
mov
mov
mov
inc
inc
inc
in
mov
mov
mov
out
mov
mov
mov
ret
mov
mov
ds
inc
inc
inc
in
mov
mov
mov
mov
mov
jne
pop
push
add
add
add
add
mov
lds
mov
cmp
inc
in
mov
mov
mov
mov
mov
add
add
add
add
mov
mov
mov
cmp
inc
in
mov
mov
mov
call
clc
popf
nop
add
add
add
add
mov
aaa
cmp
cmp
inc
inc
inc
inc
in
mov
out
mov
jp
mov
add
add
add
add
leave
mov
mov
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
in
mov
mov
mov
jbe
mov
add
add
add
add
mov
mov
mov
cmp
cmp
ds
inc
inc
inc
inc
in
mov
rol
mov
rol
clc
ret
add
add
add
mov
mov
aaa
aaa
cmp
cmp
cmp
ds
les
sarl
mov
add
add
add
add
mov
mov
ret
and
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
jl
enter
add
add
add
mov
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
jns
mov
add
add
add
add
mov
mov
mov
cmp
cmp
mov
mov
mov
mov
out
rol
cli
mov
add
add
add
add
mov
mov
mov
mov
cmp
cmp
in
mov
mov
mov
les
mov
add
add
add
add
mov
mov
mov
aaa
aaa
aaa
aaa
cmp
mov
mov
mov
mov
mov
mov
add
add
add
mov
ret
mov
mov
mov
mov
and
in
leave
mov
mov
mov
mov
mov
mov
jns
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jp
mov
add
add
rol
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jns
mov
add
add
aam
xlat
jecxz
loop
in
aad
aad
fcomp
fnclex
fucom
in
mov
js
mov
add
add
clc
jmp
jle
mov
add
add
lret
call
call
call
in
out
jmp
jmp
jmp
lock
jmp
stc
loope
clc
mov
add
add
add
mov
lret
xchg
xchg
mov
pop
pop
pop
imul
bound
pop
imul
loopne
lcall
add
add
add
out
icebp
mov
repz
jae
xor
daa
pop
cmpb
inc
sbb
dec
jg
jg
aam
mov
add
add
add
add
xchg
jno
sti
mov
add
add
lcall
pop
add
push
cmpsl
loope
out
add
add
out
mov
jnp
add
dec
bound
pop
pop
push
ss
orb
outsl
mov
mov
lret
int
mov
mov
dec
or
pop
adc
or
orl
test
mov
mov
int3
mov
sbb
xor
xor
aas
sub
adc
add
xchg
repnz
mov
add
sbb
adc
add
add
add
add
and
inc
add
add
add
add
add
mov
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
insb
add
add
and
dec
add
add
add
jb
jne
bound
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
bound
and
inc
add
outsb
add
and
inc
add
jns
insb
add
and
push
add
jb
je
jae
and
dec
add
jns
and
inc
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
imul
and
inc
add
bound
imul
push
add
insl
add
jns
and
push
add
bound
and
xor
xor
xor
xor
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
add
add
js
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
and
push
add
outsb
add
add
add
popa
add
add
add
arpl
arpl
jne
jb
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
testb
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
sub
pusha
and
adc
and
or
pusha
sbb
and
adc
or
inc
mov
add
nop
mov
and
add
add
sbb
or
inc
add
adc
dec
test
and
mov
or
or
or
or
sub
sbb
or
test
inc
adc
adc
and
pusha
add
or
pusha
inc
mov
or
test
add
inc
sub
or
add
les
adc
inc
nop
adc
mov
add
and
adc
test
mov
mov
inc
pusha
sbb
and
inc
add
adc
adc
add
dec
mov
adc
mov
dec
and
test
addb
orb
test
adc
sub
inc
inc
or
mov
and
adc
inc
or
adc
and
adc
add
test
mov
or
test
or
adc
and
inc
or
adc
or
add
inc
sbb
les
sbb
inc
add
adc
addb
and
pusha
nop
dec
inc
sub
pusha
mov
and
mov
and
add
add
or
inc
and
inc
adc
and
test
and
sbb
adc
inc
nop
or
nop
mov
add
and
inc
or
sbb
dec
adc
or
and
add
adc
and
dec
adc
and
mov
mov
les
add
inc
orb
add
addb
and
test
or
adc
add
adc
add
adc
inc
and
and
add
pusha
pusha
dec
and
adc
or
and
adc
test
sbb
add
and
test
inc
adc
inc
and
les
inc
or
inc
les
sub
sub
mov
les
mov
sbb
mov
test
or
test
and
or
xor
add
sub
add
cwtl
add
add
add
add
add
add
add
add
add
add
testb
cmc
cli
add
stc
add
rolb
jae
roll
divl
fldl
aas
out
sti
add
icebp
add
fadds
jg
testl
mov
fldl
jg
flds
mov
stc
filds
jg
testb
std
rolb
jnp
fiaddl
mov
xlat
add
in
incb
mov
flds
aaa
stc
repnz
cmc
icebp
add
lods
roll
mov
fldl
cmp
icebp
add
cld
add
in
add
mov
filds
jnp
std
add
loope
add
mov
add
stc
fldl
mov
out
add
scas
testl
mov
cmc
add
mov
incl
jnp
hlt
add
cmc
testb
stos
std
add
movsl
aam
mov
mov
stc
add
icebp
xlat
add
cmpsl
roll
std
roll
cmp
testb
sti
filds
mov
jecxz
add
mov
add
mov
add
mov
stc
add
out
repz
jmp
add
movsl
cmc
add
fildl
std
filds
mov
mov
repz
mov
hlt
add
clc
add
movsl
repnz
in
cld
add
jmp
flds
repz
add
roll
aaa
out
add
loope
add
test
fiaddl
aas
jmp
add
scas
icebp
add
jmp
incl
sti
mov
add
lods
rolb
cmp
clc
add
sti
icebp
add
lods
rolb
aas
repz
aas
stc
aad
xor
fadds
jae
repnz
stos
cmc
add
jmp
aam
sti
mov
aam
ja
add
lock
flds
jg
clc
add
jmp
hlt
add
jecxz
add
mov
add
std
hlt
add
jecxz
add
call
add
xlat
add
roll
mov
icebp
aam
jnp
cli
add
cmc
xlat
add
fadds
mov
div
add
mov
aad
mov
mov
add
stos
roll
aaa
jecxz
add
mov
fiaddl
aas
cmc
flds
jnp
fiaddl
imul
fildl
jnp
fadds
aaa
in
fildl
mov
fldl
cmp
flds
cmp
fiaddl
ja
repnz
in
add
xlat
add
roll
mov
mov
roll
cmp
flds
mov
mov
add
mov
hlt
add
icebp
filds
repz
sti
add
mov
add
jecxz
add
cmpsl
fiadds
aaa
cmc
fldl
jg
repnz
icebp
fldl
mov
stc
add
sti
fildl
jnp
stc
add
mov
incl
repz
rolb
jmp
cmc
add
filds
mull
cli
add
mov
add
roll
jg
aam
aaa
repz
add
mov
xlat
add
jecxz
add
in
cli
add
icebp
roll
mov
cli
add
loope
add
cmc
fiadds
jae
fiaddl
mov
mov
add
aam
mov
roll
jg
stc
add
sti
fildl
mov
std
add
mov
flds
mull
fadds
sti
in
add
mov
add
jmp
add
test
rolb
jg
roll
imul
std
add
incb
mov
fiaddl
aaa
lods
xlat
add
stos
cld
add
out
add
out
add
stc
roll
xor
aam
jnp
cli
add
jmp
add
push
add
in
add
std
aad
cmp
cli
add
mov
add
in
fadds
jnp
add
roll
mov
lock
mov
add
mov
aad
ja
xlat
add
cli
add
mov
add
faddl
jae
rolb
aaa
div
add
ljmp
lock
scas
mov
xor
fstpt
mov
pop
sbb
add
addl
loop
shl
lods
data16
cmpsl
jmp
popf
into
dec
pop
push
xchg
xchg
ja
sub
test
ljmp
in
aad
sub
icebp
in
bound
arpl
push
lahf
sti
ljmp
outsl
xchg
in
inc
fisttpll
mov
ret
in
outsb
les
push
xchg
push
pusha
les
add
cmp
add
inc
lcall
arpl
into
xor
mov
push
or
outsb
in
mov
aas
push
cmp
nop
or
mov
sbb
imul
jg
adc
imul
pop
mov
frstor
mov
dec
push
in
cmp
mov
lahf
clc
mov
or
mov
pop
fimull
lcall
xor
nop
pop
insb
es
ljmp
cmc
adc
xchg
insb
pushf
out
xor
dec
and
clc
call
add
inc
imul
xchg
and
mov
ret
mov
xchg
or
push
push
inc
popa
add
dec
dec
mov
ja
sub
add
dec
stos
popf
cmc
das
pop
sub
dec
pop
inc
push
sbb
mov
mov
sbb
adc
adc
push
mov
imul
popl
or
sti
rclb
repnz
cmp
and
add
xchg
xchg
out
sbb
jmp
pop
and
push
inc
or
mov
adc
mov
orb
and
inc
lea
inc
add
hlt
movsb
rorl
aas
sar
divl
cmpsl
xchg
popa
shrb
leave
repz
scas
cmp
fdiv
in
mov
loop
push
adc
or
cmp
sbb
shlb
enter
jno
nop
mov
inc
ss
jns
lret
fwait
sbb
andl
fprem1
lea
test
pop
xchg
sbb
dec
cli
mov
add
mov
fdivrs
js
icebp
icebp
in
and
and
mov
inc
inc
cmpsl
cwtl
stos
jns
fdivrs
sti
xor
cmpxchg
sar
nop
jnp
pop
insl
inc
aad
dec
add
push
push
cli
and
pop
in
adc
dec
jbe
mov
stos
sub
lods
mov
add
call
ljmp
mov
cld
mov
or
dec
sbb
cs
pop
push
and
mov
lcall
rcrb
rorb
mov
cwtl
sahf
in
mov
aad
sbbb
stos
out
sbb
jmp
cmp
lcall
pop
dec
mov
iret
ret
xor
mov
ja,pn
mov
arpl
das
fisttpl
ds
push
insl
stos
adc
outsb
xchg
cmc
inc
cmc
loope
testl
jno
push
fsubrl
data16
jbe
dec
cmp
mov
cmc
xor
add
clc
bound
push
cmp
movsl
push
xchg
mov
xor
es
sbbb
inc
cltd
das
inc
push
popa
shrb
out
test
addr16
pop
subb
insl
add
outsb
les
adc
stc
ss
sub
aas
and
std
adc
or
fwait
jae
sbb
lock
add
mov
inc
dec
and
cli
xor
ss
jle
or
xchg
int3
cmpsl
push
mov
push
stos
popa
mov
cmp
outsl
gs
into
cmpb
jne
push
imul
loop
sbb
xchg
pop
stc
cmp
inc
push
stos
insl
or
cwtl
mov
add
ja
and
jmp
and
jmp
addb
mov
imul
sub
shll
or
or
push
pop
and
mov
add
mov
mov
push
mov
sahf
push
rolb
jnp
mov
jp
je
mov
pop
dec
and
je
dec
jbe
lods
pop
imul
sub
leave
sub
les
add
roll
add
faddl
add
cli
addb
addl
addl
addl
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
outsl
jae
dec
gs
popa
addr16
