decl
arpl
loop
test
into
mov
jp
jp
rorb
outsl
pop
aad
adc
pushl
xchg
add
mov
std
or
hlt
mov
fsubrs
mov
lods
push
mov
mov
jmp
test
lahf
cltd
jecxz
roll
push
mul
rcll
sub
in
jl
nop
pop
push
clc
mov
pop
adc
stc
jp
and
xchg
cs
push
cwtl
xor
mov
std
pushl
inc
cmp
mov
xchg
cmpsb
sub
jo
inc
pop
out
in
idiv
mov
test
dec
push
xchg
and
push
lods
cmpsb
adc
pop
sbb
mov
jns
scas
fcomps
dec
leave
jmp
inc
push
aad
or
and
arpl
aad
ds
cmpsl
jmp
jnp
dec
subb
mov
sbb
pop
insb
leave
xchg
jle
sbbl
es
rorb
test
jmp
stos
or
stc
mov
lret
sti
idivl
xchg
es
cmp
pop
testb
mov
push
int
scas
inc
push
ret
pop
call
fsubs
stc
pop
fxch
daa
dec
aad
call
inc
faddl
mov
push
and
pop
in
xor
sub
jns
and
cmp
adc
cmp
shrb
jnp
dec
xor
mov
shll
ljmp
bound
test
cmp
cwtl
cmpl
stos
push
cmpsl
push
movsl
or
call
cli
lods
xchg
mov
out
aaa
push
mov
icebp
dec
mov
inc
jle,pn
incl
fcmovnu
into
adc
arpl
mov
bound
js
jne
push
mov
cmc
arpl
fstl
incl
jecxz
dec
mov
inc
sbb
cmp
mov
and
ljmp
or
mov
jo
in
dec
xchg
in
nop
push
into
push
mov
test
cmp
decl
and
sbb
and
mov
aam
enter
repz
jne
mov
decl
jp
jge
jg
add
lret
adc
sbb
idivl
imulb
push
call
mov
into
mov
pop
mov
mov
jne
fs
xor
fldt
rorb
and
dec
xchg
rolb
fwait
je
sbb
pop
scas
movsl
cld
jae
or
mov
push
jae
push
or
lcall
add
pop
sbb
repnz
out
aad
ljmp
out
mov
push
add
cmpsl
mov
xchg
sub
add
mov
adc
in
call
and
xchg
lcall
and
ret
pop
jge
and
aad
aam
inc
pop
repnz
pop
leave
pop
test
xchg
es
and
sub
out
mov
jg
pushl
xchg
imul
imul
push
mov
sbb
ljmp
lds
loope
mov
xchg
or
scas
lret
icebp
mov
popa
xor
push
inc
add
add
xchg
out
jno
insb
jb
sbb
jb
mov
jge
mov
call
call
xchg
add
pop
out
imul
jecxz
sub
scas
push
mov
jno
add
data16
mov
and
dec
xor
daa
bound
aas
pusha
cli
daa
pop
xchg
sbb
jae
andb
mov
adc
les
mov
xchg
push
fs
call
xor
pop
int
ja
and
dec
sahf
ja
test
clc
ljmp
jmp
clc
call
inc
inc
pop
or
aaa
push
in
sbb
xor
push
stc
in
mov
js
xchg
mov
mov
insb
mov
imul
pop
jle
xchg
mov
cmp
lcall
lcall
outsb
lahf
scas
xor
or
pop
or
cmp
out
push
cmp
dec
and
sub
aas
mov
or
jge
decl
xor
into
jl
jmp
jl
shlb
stos
notb
or
incl
sbb
xchg
lret
jns
pop
xor
in
enter
and
mov
es
inc
rcr
call
cmpsb
stc
and
push
inc
and
sbb
call
sbb
fnstsw
mov
inc
add
incl
out
jns
pop
cmp
std
les
xchg
in
rorl
stos
callw
dec
xchg
int3
pushl
adc
or
sub
stos
pop
add
pusha
inc
mov
fs
aam
cmpsb
incl
fisubrl
ljmp
push
loopne
pop
cmp
jne
add
hlt
test
enter
lcall
aam
sub
faddl
pop
in
mov
dec
lahf
xor
jb
mov
add
enter
call
aaa
adcb
lods
dec
cmp
cmpsb
enter
dec
add
jne
in
sub
nop
dec
push
out
aas
xchg
xchg
jmp
xor
push
lea
stos
sbb
lret
mov
decl
sbb
stc
scas
xchg
hlt
mov
xchg
mov
pop
enter
sbb
mov
pop
cmp
push
lret
push
xchg
and
scas
inc
test
jo
iret
sub
shrl
ds
in
add
movsb
dec
lods
inc
dec
aas
xor
xchg
aad
pusha
xor
hlt
out
xchg
fmulp
lcall
divl
cld
in
dec
pop
arpl
mov
ljmp
out
cs
ror
in
std
pushl
sbb
ret
sub
test
push
outsl
jnp
pop
jne
sub
pop
jp
pop
jmp
adc
repz
je
cmpb
push
mov
push
sbb
mov
mov
mov
pushl
out
cli
out
daa
xor
sarl
ror
notb
dec
cwtl
mov
imulb
jno
jbe
stc
daa
stos
ret
pop
loope
mov
and
fnsave
insl
lahf
in
ja
jecxz
mov
inc
imul
out
pop
cmp
imul
jmp
sub
ret
cmp
pop
nop
dec
adc
xchg
sahf
insb
xor
xor
incl
pusha
push
ret
jbe
cmc
mov
loope
cmp
hlt
xor
mov
push
imul
inc
push
ljmp
popf
repnz
loope
fs
addb
sbb
iret
sti
imul
or
js
incl
add
mov
imul
pusha
cmp
mov
cmpsl
cmp
insl
loop
pushl
inc
cmp
stc
jmp
mov
jecxz
jbe
or
dec
inc
lahf
or
pop
push
inc
fmull
mov
and
bound
sbb
shll
or
mov
aaa
ds
jae
inc
mov
cmp
mov
jg
mov
sbb
dec
mov
out
iret
cmp
dec
into
ret
test
and
cmp
jecxz
out
clc
push
mov
push
jbe
xchg
pop
sub
pop
mov
push
repz
add
loopne
mov
fbld
and
jae
xchg
or
ficomps
out
ds
add
cmp
add
incl
mov
lcall
xchg
stc
adc
insb
cld
das
mov
push
adc
jg
inc
fs
stos
cmc
lods
adc
decl
mov
dec
inc
add
or
lock
ljmp
fsubs
sub
mov
xchg
call
jmp
pop
pop
punpckhdq
sbb
mov
fstpl
decl
leave
sbb
andb
push
add
les
call
ljmp
int
mov
mov
jl
loop
pop
mov
or
cmpsl
cli
movsb
xor
outsl
cld
jmp
in
fsubr
gs
xor
shrl
ja
mov
repnz
leave
sub
jg
cmpl
sarb
inc
pushl
decb
and
out
subl
sahf
adc
cmp
fistps
sub
sbb
sbb
sub
loop
pop
pop
movsl
lcall
sub
xor
and
mov
fldlg2
gs
pushl
adc
out
and
push
mov
push
ss
adc
movsb
or
push
jp
xor
push
mov
incl
add
cwtl
lret
push
icebp
xchg
push
add
fs
loop
aam
and
sub
call
rorl
stos
xchg
adc
fstl
pop
cmp
xchg
outsb
mov
das
jmp
daa
idiv
mov
jl
les
inc
mov
push
mov
jb
inc
lods
push
jg
enter
movsl
ljmp
cmpsl
int
xchg
inc
mov
movsl
sbb
imul
and
jg
or
jmp
int3
adc
data16
sub
sahf
clc
cmp
xchg
inc
jns
pushl
add
imull
into
je
pop
jnp
fsts
out
mov
mov
outsl
lcall
fwait
xchg
fldenv
mov
sbb
or
fisubrl
hlt
mov
mov
dec
inc
sbb
pop
callw
cmc
stos
lds
dec
mov
hlt
pop
cld
repnz
es
lock
scas
add
inc
mov
jge
jg
xchg
xor
xchg
and
sahf
push
mov
faddl
repnz
out
bound
inc
inc
push
or
mov
orl
add
in
insl
loope
loopne
lcall
js
andb
out
cmp
and
loop
scas
jge
dec
add
std
out
stc
xlat
ja
test
test
push
lea
ret
out
and
outsb
ds
add
hlt
cmpsb
je
mov
pop
out
sub
mov
gs
pop
outsb
inc
mov
orb
out
js
sbb
jge
incl
adc
cmpsl
add
lea
pop
push
add
cmp
jne
test
test
push
pop
sub
ds
jecxz
adc
jne
iret
jb
cmpsb
bnd
out
cltd
xor
sub
gs
mov
decl
mov
xlat
std
div
xor
les
sub
imul
stos
jp
mov
clc
idivb
xor
dec
aam
mov
push
sar
inc
sarb
push
dec
mov
es
sahf
arpl
testl
jmp
jb
add
decl
jne
fnstenv
dec
leave
aam
fcoms
aaa
lahf
fisttpl
mov
mov
loop
adc
sbb
adc
pushl
inc
push
xor
sub
xchg
sbbl
sub
loopne
and
mov
jmp
push
outsl
mov
pop
sub
and
mov
das
cld
outsl
icebp
jle
mov
repz
and
mov
call
lds
cmc
xor
xor
mov
lahf
mov
je
xchg
or
decl
cwtl
push
xchg
cs
dec
bound
stos
mov
mov
mov
stc
mov
arpl
jmp
outsb
pop
pop
ljmp
dec
lcall
inc
mov
call
out
jo
out
frstor
enter
add
jmp
out
pusha
ljmp
aam
lret
setae
pushf
lret
pop
push
mov
std
cmc
out
pop
mov
push
mov
call
cmpsb
neg
shrb
pop
dec
in
fistps
add
xchg
and
mov
ret
lock
stos
inc
aam
mov
clc
and
loop
imul
sbb
mov
jmp
pop
or
add
mov
pop
leave
decl
cmp
dec
adc
das
push
fwait
cltd
std
push
xchg
or
inc
xchg
inc
xchg
pop
test
inc
pop
pop
mov
lcall
cmp
jo
in
pop
xor
add
sti
out
add
movsb
push
testl
jnp
jle
jl
sbb
xchg
xchg
pop
xor
std
jg
jg
push
cli
jmp
cmpb
sub
fldt
test
or
sbb
jb
dec
jmp
es
outsb
push
imul
lea
std
call
mov
sbb
out
ds
and
aas
adc
cmpsl
inc
popf
cmc
lcall
add
cmp
and
mov
xor
out
outsl
mov
pop
stc
xor
or
orb
aas
ror
int3
incl
jmp
pop
push
out
xadd
xor
inc
dec
or
push
adc
adc
lcall
xor
adc
std
push
test
cld
fistpll
sahf
xor
lahf
daa
jge
popa
test
push
add
call
dec
jne
inc
in
sbb
or
add
inc
daa
lock
decl
idivl
lcall
mov
das
dec
ljmp
dec
imul
dec
mov
xor
pop
pop
pushf
stos
sub
adc
dec
pop
mov
jg
incl
popf
jecxz
pop
cmpsl
out
out
jmp
mov
repz
scas
mov
push
call
incl
lock
mov
xchg
nop
mov
leave
stos
mov
pushf
lds
outsl
cmc
decl
add
adc
inc
inc
push
jle
js
jno
out
inc
pop
mov
ljmp
mov
fnsave
sub
jge
lret
inc
lock
inc
mov
outsl
std
jmp
shl
frstor
push
js
in
sbb
xor
in
mov
xorb
lret
movsl
into
xor
clc
mov
outsb
aas
pop
out
das
std
push
cltd
arpl
in
sub
lret
shlb
pop
aas
xchg
call
ljmp
mov
in
movsl
lods
mov
icebp
test
push
push
daa
aad
mov
iret
out
pop
std
mov
cmp
or
inc
sbb
or
out
fs
sbb
incl
jle
imul
jl
enter
pushl
push
mov
popa
and
aas
sahf
mov
sub
cmp
mov
sar
mov
cmpsl
repz
rcrb
lock
aaa
pop
insl
mov
mov
test
jb
out
xchg
lcall
les
inc
pop
jmp
xchg
arpl
cld
mov
imul
popa
push
lea
inc
push
iret
pop
mov
cli
dec
in
mov
pop
pushf
xor
jg
lea
aaa
mov
jmp
sub
mov
dec
cmpsl
xchg
incl
jae
xchg
mov
cmpl
jnp
pusha
mov
imul
xchg
cli
addb
out
andl
pusha
fadd
aaa
cli
lods
lcall
mov
mull
mov
es
xchg
inc
add
mov
movsl
lcall
push
sarb
in
sbb
lret
popa
pop
push
out
jg
xchg
rol
psllw
fadds
lock
jnp
mov
lret
packsswb
xor
arpl
push
cwtl
sub
lock
mov
leave
mov
mov
inc
jl
push
inc
into
fsubs
shl
add
pop
aaa
cltd
outsl
aam
jmp
jecxz
xchg
push
bound
aaa
sti
xor
enter
popa
cld
or
add
push
sbb
dec
inc
lea
int3
xor
and
outsl
hlt
lcall
ljmp
push
dec
iret
pop
xchg
pop
and
pushf
pop
push
call
mov
pop
je
pop
sbb
xchg
pop
inc
repz
ljmp
cs
clc
xor
mov
ficompl
into
push
outsb
xchg
arpl
enter
out
ljmp
cmc
xchg
mov
mov
addr16
icebp
mov
fidivs
adc
ljmp
push
lods
xchg
push
mov
pop
test
add
ja
lret
loop
cmp
fcomip
aas
stos
bound
sahf
aas
das
adcb
lahf
and
out
mov
dec
xchg
hlt
jns
pop
xor
fucom
fmull
sub
rorl
push
ret
andb
dec
pop
sbb
js
mov
xlat
cs
cltd
test
cmp
data16
mov
mov
adc
mov
out
mov
dec
mov
adc
push
test
mov
or
fiaddl
mov
lret
or
mov
and
into
roll
jmp
aas
bound
ret
je
out
ljmp
adc
lods
add
xor
hlt
aaa
xor
push
jne
xlat
adc
mov
add
push
sub
enter
pop
pop
jbe
rorl
decl
mov
clc
lret
mov
and
mov
loope
mov
dec
add
jp
cmp
aam
repnz
in
scas
jbe
mov
mov
decl
sbb
jbe
cmpsl
mov
add
mov
sbb
inc
vpmaxsw
sar
jmp
push
xchg
xchg
fadd
or
idivl
lea
ret
and
add
or
add
das
add
incl
mov
enter
push
xchg
popl
repz
pop
in
adc
push
call
rcl
inc
je
sub
in
inc
sarb
in
dec
hlt
jnp
daa
movb
daa
ljmp
adc
dec
xorb
repnz
mov
sub
nop
mov
push
pop
movsl
sub
mov
pop
aam
add
pushl
addr16
mov
xor
test
inc
lea
jne
jle
vpinsrw
and
lcall
out
inc
lret
daa
movsl
cmpsb
ret
gs
xchg
adc
or
fbld
cmp
rcrb
in
and
incl
push
cli
pop
or
subb
push
sub
daa
inc
pop
scas
ror
add
pop
aaa
ljmp
cwtl
mov
xchg
sbb
scas
push
aad
out
lahf
gs
daa
mov
in
jle
ds
into
push
stos
push
gs
adc
nop
mov
or
adcb
cmp
fsubs
decl
lods
dec
in
mov
out
divl
xor
or
out
xlat
loopne
jge
sbb
cmpsl
pushl
pop
push
adc
pushf
adc
inc
andb
jbe
mulb
jecxz
xchg
pop
xchg
and
decl
scas
lahf
jecxz
or
fcoms
mov
or
cltd
inc
test
xchg
dec
out
mov
xchg
cltd
shrl
stos
adc
loopne
repz
enter
mov
or
hlt
repnz
dec
int
cli
or
mov
test
das
cmp
repz
jbe
pop
scas
cmp
outsl
mov
incl
test
cwtl
sub
jno
mov
icebp
inc
das
adc
mov
cmp
call
ss
push
jp
sbb
fstps
lds
dec
mov
cmp
imul
adc
repz
xchg
pusha
sub
fwait
test
sbb
icebp
fcmovbe
test
loop
out
stc
ja
push
fstpt
adcl
xchg
mov
sbb
mov
mov
push
pop
decl
hlt
incl
xchg
sub
addr16
sub
push
push
xchg
push
inc
or
lahf
daa
sbb
push
rclb
push
enter
jge
cmp
and
icebp
addr16
jmp
std
jmp
and
sti
jno
or
lods
pop
xor
push
dec
mov
fcmovb
cltd
or
push
push
cltd
les
cmc
dec
mov
gs
mov
jno
repz
cmp
ljmp
jecxz
pop
or
and
cmp
cmpsb
aam
ds
shr
cltd
shrl
lcall
je
subb
adc
inc
jmp
lods
mov
dec
xor
xor
ljmp
stc
movsb
mov
jae
xchg
popf
sub
add
inc
inc
stos
push
idivl
mov
ljmp
xor
out
fidivl
and
dec
lock
lcall
sub
ficoml
fs
das
adc
adc
xorl
pop
or
sti
or
or
gs
inc
bound
daa
push
mov
push
dec
fadds
sbb
inc
mov
cmp
shrl
cmpsl
pop
sahf
pop
cmp
lahf
mov
leave
in
add
les
pop
cli
cmpsl
jg
add
gs
incl
ja
and
sub
nop
stc
lods
pop
fisubl
leave
xchg
out
jbe
cmc
and
lock
ljmp
inc
xlat
je
sbb
xchg
lock
pop
mov
lods
out
adc
cld
push
rorl
iret
enter
jg
dec
rorl
mov
pop
stos
push
dec
clc
sub
and
aad
pushl
pop
movsl
movsb
fadd
shlb
xchg
movsb
outsb
push
lret
jl
das
inc
orl
in
int
testb
jmp
xor
sub
mov
mov
and
dec
dec
dec
out
mov
sub
mov
stos
loopne
mov
mov
mov
les
mov
pop
mov
xchg
pop
out
or
adc
sub
cmp
stc
fmuls
in
fsubr
and
push
dec
dec
mov
cmp
insl
arpl
flds
mov
xor
sbb
std
testl
adc
mov
mov
dec
xor
test
je
ss
fimull
pop
maskmovq
testl
js
mulb
sbb
or
fcmovu
mov
inc
inc
dec
mov
loope
sub
gs
cmp
lods
lock
mov
xor
push
push
movsb
inc
testb
or
add
mov
inc
sub
push
xchg
dec
mov
or
popa
xor
push
mov
or
push
adc
fnstcw
mov
dec
ret
mov
clc
xchg
sbb
jo
and
addr16
je
jb
xor
xlat
fisubrl
adc
data16
sub
add
jle
negb
jmp
test
cli
inc
jne
in
mov
decl
cmpsb
xorl
xor
test
addr16
out
add
popf
dec
push
mov
pushl
incb
mov
insb
test
rcr
sbb
adc
lret
sti
cltd
xorb
decl
add
jecxz
out
sti
sub
lea
push
out
flds
add
hlt
xchg
pushl
jg
std
pop
stos
pop
and
xor
jno
dec
and
xor
jmp
xchg
ljmp
iret
inc
fisttps
sub
xchg
mov
sti
add
mov
push
dec
daa
aaa
call
dec
insl
pop
cmp
pusha
in
or
lock
sub
lock
rol
inc
subl
enter
adc
jb
push
js
push
fisubrl
pop
cmp
jae
jbe
int
aam
ljmp
jmp
mov
dec
cmp
loope
or
aam
xor
lret
call
pushl
jle
sub
pop
sarl
pop
out
pop
mov
and
or
mov
jge
subb
or
or
mov
pop
je
ud0
ljmp
aad
sbb
or
adc
scas
mov
mov
jns
dec
movsl
jns
ljmp
popa
int
shr
dec
scas
outsl
cli
test
int3
fildll
mov
push
loop
pop
dec
pop
int
arpl
inc
aad
dec
int
jnp
clc
sbb
pop
loope
cs
incl
idivb
pop
addr16
mov
sub
lcall
cwtl
push
decl
stos
sbb
mov
lret
xchg
imul
hlt
mov
ljmp
cltd
mov
sub
xchg
sbb
push
mov
inc
in
in
inc
cli
add
mov
xchg
ja
xchg
adc
cmp
rorl
int3
xchg
outsl
ljmp
icebp
shr
popl
pop
lret
mov
fimull
ljmp
add
jbe
ss
cmp
jns
push
or
cmp
out
imul
cmp
sbb
inc
sbb
sub
xchg
into
mov
repz
adc
repz
cs
jecxz
loope
ljmp
adc
mov
jae
mov
mov
and
lea
adcl
cltd
gs
mov
mov
xchg
shl
dec
cs
push
push
push
push
hlt
cli
jo
roll
int
addr16
mov
clc
hlt
xor
stos
and
decl
cmp
cwtl
mov
mov
sub
shrb
inc
cmpsw
ret
lcall
mov
ja
inc
push
xor
sarb
pop
mov
sbb
xor
pushf
seta
push
mov
inc
mov
pop
clc
shrb
sub
jns
jmp
nop
jno
repz
decl
cmp
add
ss
jp
adc
push
jmp
pusha
das
ds
inc
ret
lcall
mov
and
inc
outsb
fmuls
xchg
repnz
push
into
or
in
repnz
pop
cmp
fnstsw
enter
sahf
mov
ds
inc
inc
jp
dec
push
pop
cs
ljmp
or
fldt
shll
hlt
mov
push
or
jae
pop
cli
call
pop
lods
data16
adc
loopne
sbb
jnp
fstpt
and
outsl
or
fucomi
mov
dec
mov
outsb
subb
inc
incl
sbb
loope
cmp
stc
pop
pop
mov
and
incl
xchg
imul
and
jno
sti
sub
dec
sub
pop
fs
mov
lret
pop
scas
dec
dec
idivl
ret
mull
inc
push
mov
dec
push
es
adc
mov
mov
jg
pop
loop
call
jl
jne
cmp
sbb
addr16
fists
hlt
call
ret
mov
push
pop
jle
mov
insl
fs
lds
in
incl
push
loop
push
cli
mov
push
into
mov
lret
sbb
xor
inc
and
pushl
inc
ja
and
loop
jns
std
fwait
ret
and
pop
and
lods
or
push
cli
das
dec
or
or
gs
xor
adc
sar
dec
test
scas
push
mov
mov
cmp
decl
cs
repnz
test
push
ficoml
stos
and
sbb
aad
jl
mov
pushl
js
xchg
pop
pop
scas
ljmp
pop
idivl
inc
test
popf
adcl
jp
sbb
call
ficoml
cli
pop
mov
stos
stos
push
pop
cmp
dec
pop
pop
add
shr
and
js
into
jnp
cmp
test
lcall
rolb
subb
pop
insb
insl
outsb
or
out
ret
scas
cmp
jl
or
shr
aam
jmp
lcall
push
xchg
add
sbb
xor
cmp
jbe
fdivl
outsl
fstp
es
fwait
cli
sub
jmp
incl
mov
add
jle
xchg
outsb
push
enter
mov
jmp
out
nop
pop
ss
mov
sbb
loopne
leave
jb
jl
stos
mov
add
cs
dec
dec
scas
xchg
add
or
add
xchg
and
decl
sti
dec
add
and
dec
pop
loop
ret
and
sub
jmp
call
inc
mov
sub
jo
aas
clc
sti
mov
push
sti
xchg
mov
push
call
jbe
out
imul
sub
inc
push
or
xchg
lahf
pop
and
pushl
lret
xor
cs
pop
in
mov
mov
mov
fisttpll
incl
out
sbb
loopne
mov
outsl
and
fsubrs
mov
xchg
cli
pushl
fprem
push
into
mov
mov
cld
dec
mov
dec
xchg
repnz
xchg
inc
insb
xchg
das
ss
sub
jae
fdivr
decl
in
imul
push
sbb
ljmp
xchg
sbb
cli
aad
call
rorl
xchg
lret
mov
sbb
push
or
jb
adc
pushf
addr16
popa
push
pop
add
sbb
add
add
jl
or
pop
sbb
mov
in
inc
add
adc
add
pop
xchg
cli
scas
add
out
cmpsb
ds
mov
sub
or
sbb
sbb
in
and
sbb
mov
push
in
adc
jnp
fldenv
sbb
cmp
sbb
flds
cmp
cmp
inc
mov
xor
mov
inc
pop
popa
jns
fwait
or
sub
dec
cmp
push
adc
pop
ret
das
xorb
adc
pop
adc
outsl
add
and
movb
sbb
pusha
adc
push
sbbb
daa
sub
or
xor
sbb
dec
shlb
lahf
mov
pop
mov
mov
test
les
int
xor
int
lock
fwait
adc
and
nop
popf
lds
clc
mov
mov
jle
in
insb
or
xchg
insl
push
jg
xchg
or
mov
data16
push
push
and
xchg
mov
sbb
xor
and
xor
shll
add
adc
and
add
mov
stos
adc
xchg
mov
fidivrl
dec
or
push
fidivs
xchg
lock
dec
popa
mov
sbb
or
and
and
sbb
or
xor
pusha
gs
insb
mov
dec
lret
in
fcoms
sbb
fidivrs
inc
cli
xor
xchg
dec
xchg
rorl
in
mov
or
xchg
insb
pop
push
notb
and
shll
push
mov
in
lcall
adc
or
and
fsubrp
xchg
mov
fld
dec
mov
jnp
sahf
xor
aaa
push
call
into
ret
daa
mov
stos
mov
test
sbb
das
leave
cmp
addr16
inc
bound
inc
pushf
jle
sbb
dec
into
fucom
pop
push
mull
add
and
call
xor
jo
xchg
dec
aam
cmpsl
or
fdivl
dec
outsl
frstor
out
lods
and
pushl
sub
gs
jbe
insb
mov
icebp
mov
movsb
addr16
jno
lea
add
pop
lcall
mov
xchg
mov
cmp
pop
jb
xchg
cltd
dec
cld
xor
repz
lcall
and
jl
xchg
addl
adc
xor
mov
mov
pop
xchg
push
push
dec
popf
bound
mov
cli
or
or
stc
mov
call
cmp
push
int
push
call
ljmp
push
outsb
mov
add
xor
loope
sarb
xlat
push
mov
jge
sbb
xor
mov
ret
add
incl
mov
leave
mov
cmc
fidivrl
sub
negb
ret
outsl
jmp
in
pushf
loopne
pop
ficoml
inc
hlt
or
and
jae
pusha
cmp
outsl
int3
out
sub
pop
push
mov
outsl
fucomip
repnz
into
test
iret
and
xchg
jne
sub
cmpsb
insb
mov
mov
in
jmp
bound
cmp
lahf
xchg
xlat
xchg
mov
push
push
test
scas
movsb
mov
lcall
clc
xor
and
cld
icebp
mov
or
mov
jb
mov
lods
repz
cmp
loop
rolb
adc
mov
sbb
push
cwtl
cmp
cs
jmp
out
aaa
dec
inc
adc
and
insb
popf
xchg
push
sub
mov
dec
rcrb
incl
add
mov
call
pushf
fldl
and
inc
push
cld
lds
lcall
push
imul
mov
or
sbb
into
outsl
jmp
sub
repnz
lcall
xor
push
jle
push
mov
adc
push
jnp
push
mov
cmc
lcall
popf
mov
outsl
mov
ljmp
pop
xor
jae
out
loopne
orb
outsl
decl
push
jae
xlat
adc
jbe
std
xchg
xor
mov
push
mov
xor
jmp
call
mov
adc
jns
cltd
push
call
cli
sbb
ljmp
cld
pushl
mov
jle
jo
addr16
push
push
inc
pop
xchg
or
int3
inc
iret
clc
sbb
test
dec
das
xor
mov
mov
pusha
pop
rcll
dec
call
and
lods
lahf
xor
ror
pop
lret
lret
mov
adc
fwait
xor
cmp
out
lcall
dec
jecxz
adc
push
movsb
testl
mov
mov
cmpsl
and
dec
out
xor
shrb
sub
jg
pop
aas
out
inc
adcb
fwait
out
pop
mov
cmp
scas
cmp
insb
test
incl
stc
std
mov
push
and
mov
inc
std
pop
mov
xchg
inc
movsb
xchg
pop
push
das
inc
dec
mov
push
decl
xchg
lods
push
test
mov
adc
jle
mov
push
stos
out
pop
mov
xchg
incb
mov
mov
dec
std
call
adc
push
add
push
and
sbb
jl
mov
out
push
ljmp
lcall
inc
sti
into
inc
mov
cltd
subl
cld
sbb
pop
push
xor
or
pop
ss
mov
jmp
and
fwait
dec
add
lahf
jg
add
test
ds
xor
mov
cs
iret
lods
dec
jp
sti
cwtl
dec
jne
shl
cwtl
pop
test
push
ud0
ljmp
ret
pop
scas
mov
xorb
jle
or
test
in
popa
inc
dec
ja
cld
in
js
cmp
jl
fcmovnb
adc
dec
and
fists
test
xchg
pusha
mov
jmp
pop
and
movb
stos
add
mov
mov
pop
jg
pushl
sub
xchg
test
fmul
in
lea
mov
sub
lods
jns
fildl
stos
push
daa
xor
scas
pop
fwait
scas
call
cmp
push
sbb
int3
mov
inc
mov
cmp
mov
int3
mov
bnd
ljmp
incb
dec
push
das
cmc
push
mov
and
add
inc
add
add
orl
orb
push
add
or
test
stos
addb
in
add
in
inc
adc
jmp
dec
call
pop
or
ljmp
nop
adc
adc
inc
inc
add
stos
add
nop
inc
inc
adc
push
inc
add
add
adcl
adc
add
test
pusha
std
mov
xor
xor
inc
movsl
fcmove
pop
cld
add
push
mov
mov
xchg
rol
aas
ds
movsw
jb
xchg
inc
loopne
jo
sub
iret
arpl
pop
xchg
pop
inc
stc
mov
or
push
mov
sbb
insl
stos
mov
jno
adc
push
insb
out
std
mov
lock
mov
cmp
jmp
gs
pop
shll
scas
test
es
imul
cwtl
cwtl
cmpsb
jmp
ja
aaa
ffree
and
arpl
test
sahf
dec
xor
shl
cmc
decl
and
loop
xchg
push
fisttps
loope
leave
pop
cmpsb
je
lods
mov
lock
std
xor
push
loope
cmp
sub
cmpb
lods
xchg
pushf
xor
jmp
inc
sbb
movl
jmp
and
sti
or
xchg
mov
pushf
jg
popl
sbb
cmpsb
xchg
loopne
jnp
outsl
cmc
aad
cmp
scas
inc
inc
jne
call
in
jb
ljmp
mov
stos
repz
xlat
bound
dec
and
jl
sub
sbb
inc
push
cli
add
popf
js
jae
mov
xor
adcb
out
loopne
xlat
sub
mov
aas
or
lea
dec
push
shll
imul
cmp
sub
lret
call
addr16
sbb
imul
inc
cld
fisubl
push
out
adc
je
incl
lods
and
xor
iret
fldcw
movsl
xor
jb
cmp
repz
add
rcrl
ljmp
movsb
or
inc
cld
inc
mov
add
add
xor
mov
lcall
imul
fiadds
sbb
jb
fs
and
xchg
mov
mov
outsb
cmp
push
mov
and
mov
xchg
mov
call
mov
xor
xor
xorb
xchg
xor
outsl
push
call
sbb
and
cmc
sahf
xlat
rclb
jmp
dec
mov
aad
mov
jb
call
sub
adc
mov
lods
out
jp
xchg
inc
shlb
cmp
into
mov
pop
push
rcl
jmp
mov
pop
cltd
push
jg
add
mov
shrl
sub
or
mov
adc
cltd
sbb
add
repz
aad
dec
inc
inc
loope
das
sbb
js
mov
loopne
or
or
aas
loope
jno
out
adc
xor
aas
mov
cmp
cli
and
lret
mov
mov
js
ss
js
cmp
lret
push
icebp
push
pop
js
xor
jge
sub
incl
jg
fbld
cmp
das
jmp
je
pop
stos
js
sub
adc
pushl
dec
test
inc
jb
pop
icebp
call
push
cwtl
cmp
mov
pop
dec
lods
jmp
call
dec
inc
mov
movsb
pop
in
xchg
xchg
movsb
push
pop
sbb
jg
sbb
ljmp
ljmp
cmpsb
sbb
movsb
push
lahf
push
cmpsb
in
push
adc
jl
mov
pop
jae
inc
inc
mov
pop
inc
mov
push
push
test
lret
mov
ja
out
fisttpl
or
or
daa
imul
mov
shrb
mov
das
add
pushl
jne
push
xchg
xchg
sbb
mov
inc
xchg
sub
ja
je
sub
aas
jae
in
outsl
push
stos
cmp
cld
sbb
loopne
testl
inc
mov
cs
xor
lock
jg
out
mov
orl
adc
adc
sbb
pushl
insb
or
out
out
push
dec
xchg
loopne
pop
cmpsb
xchg
push
inc
xchg
xchg
sbb
sti
in
incl
mov
pop
mov
fwait
pusha
std
out
shlb
fsub
adc
mov
idiv
jg
dec
test
pop
dec
mov
adc
mov
pop
mov
mov
xchg
lcall
jp
pop
push
js
daa
std
push
xor
xchg
out
cmpsl
leave
mov
jns
xchg
xor
add
jae
out
cs
test
cmc
mov
dec
mov
sub
nop
scas
call
jecxz
pop
js
test
pop
mov
addr16
test
inc
xlat
lods
xchg
sti
in
fidivl
rorb
and
outsl
mov
xchg
or
dec
lds
sbb
jecxz
sub
lcall
scas
mov
and
fidivrs
pop
arpl
adcl
cld
and
rclb
mov
into
imul
mov
inc
inc
lds
std
icebp
mov
dec
cmc
lods
imul
pop
imul
ret
das
xchg
stos
outsb
sarl
mov
cltd
loopne
sti
out
das
fstpl
fildll
data16
js
and
imul
mov
xchg
pop
js
xchg
loopne
negl
fs
rorl
in
mov
xchg
fnstenv
xchg
popa
mov
fcomps
mov
push
popa
outsl
decl
decl
and
push
ss
stos
cs
adc
in
ljmp
movsl
cs
mov
mov
js
aam
loope
push
stos
shrl
and
in
std
std
jnp
jmp
xchg
mov
icebp
call
lcall
push
mov
aas
sbb
std
movsl
jmp
movsl
test
daa
das
sub
rep
sbb
out
movsl
jo
mov
mov
xchg
imul
les
sub
es
test
jbe
movsl
xchg
add
call
outsl
pop
pop
cmpsb
popf
mov
ficomps
fstpt
inc
movsb
adc
xlat
subb
dec
push
jecxz
adc
sub
popf
mov
cmp
and
cmc
mov
stos
pop
pop
fistps
imulb
inc
imul
test
test
sbb
jae
sar
dec
movsl
mov
iret
jnp
das
inc
loopne
hlt
ss
mov
mov
incl
sbb
and
and
dec
mov
sarl
pushl
xor
addr16
call
jns
fsub
xor
loope
push
std
add
lods
lds
jns
cltd
test
sub
decl
les
pop
jecxz
and
and
sub
sbb
push
mov
pop
xor
mov
pop
cmp
sbb
xor
and
shl
pop
mov
cmc
ja
xchg
and
or
xchg
loopne
lea
jge
shl
pop
stos
arpl
push
in
dec
jmp
repz
mov
xchg
sub
cs
imul
dec
lock
mov
repz
leave
imul
xchg
push
fcomip
fstp
lds
out
jnp
jl
icebp
mov
cmp
pushl
jns
mov
pop
jl
xor
pop
inc
sbb
out
jmp
sti
push
mov
repz
in
lahf
stc
pop
loopne
cmc
fildll
inc
ret
lock
pop
lock
icebp
fcomip
clc
repz
in
push
pop
das
out
pop
xchg
fisubrs
sub
mov
pop
stc
fmull
aaa
sub
jmp
push
push
lods
jge
mov
sbb
mov
mov
idivb
shlb
or
pop
fstpt
std
and
int
and
mov
scas
repz
aas
jb
outsl
das
std
jbe
aas
fdivrl
fstpt
mov
adc
fucomp
dec
je
or
sub
das
mov
jo
jns
xor
div
fcmovnb
sub
mov
xor
xor
fildl
jg
cmp
sbb
pop
fistpll
andb
xchg
dec
fistpll
sub
rcll
add
dec
jg
outsl
mov
jne
lock
fldcw
jno
mov
mov
add
xchg
sub
adcl
xlat
lock
mov
cmp
lcall
stos
push
and
sahf
fs
add
push
and
xor
jne
arpl
push
insl
cmp
pop
incl
insl
push
inc
jb
inc
dec
xor
imul
push
dec
je
aaa
jno
dec
insb
imul
jmp
push
push
jb
xor
imul
dec
inc
gs
push
push
push
inc
inc
je
mov
jns
js
inc
dec
ja
jae
inc
popa
dec
push
inc
ja
pop
dec
push
pushl
pop
push
push
jne
dec
pop
xor
jp
gs
aaa
imul
mov
pop
push
inc
jae
imul
insb
inc
sub
push
push
push
ja
arpl
dec
push
jne
cmp
cmp
mov
push
outsl
jns
jne
push
inc
pop
inc
jno
xor
insl
inc
pop
dec
inc
inc
jns
pop
jae
mov
push
xor
push
push
jp
jb
push
pop
dec
push
ja
insb
ss
dec
js
imul
jno
pushl
push
push
popa
gs
dec
push
inc
push
movsl
dec
cmp
jg
jne
xor
push
xor
cmp
jne
inc
imul
inc
pop
bound
jo
je
in
outsw
dec
push
push
imul
insl
push
xor
outsb
mov
inc
xor
dec
push
xor
ja
xor
inc
lcall
dec
je
inc
ja
jae
cmp
push
xor
insb
push
push
xor
jbe
imul
popa
dec
inc
push
xor
ljmp
outsb
aaa
outsl
mov
push
insb
ja
jb
dec
jbe
pop
inc
inc
inc
dec
arpl
insb
outsl
je
clc
lcall
or
push
xor
inc
cmp
jno
jns
pop
dec
inc
insb
outsb
sbb
arpl
inc
push
jo
add
mov
inc
adcb
clc
sbb
add
sahf
addl
xchg
cmp
add
mov
jecxz
cmp
adc
shl
mov
push
out
push
fmull
xor
in
ljmp
sub
adc
fs
jmp
dec
in
dec
inc
jecxz
and
dec
adc
out
imul
push
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
jbe
imul
pop
mov
adc
in
inc
push
adc
adc
sub
outsl
movsl
lret
pop
sbb
pop
outsb
int
jbe
dec
lahf
xor
inc
fdivl
scas
mov
lods
aad
rolb
aas
cwtl
xor
sahf
loop
loopne
and
outsb
mov
jbe
dec
dec
daa
mov
or
jbe
mov
subl
push
xchg
push
dec
adc
les
jmp
jnp
jmp
std
out
dec
test
dec
add
jnp,pt
js
fisttpl
jnp
sti
cmp
adc
xchg
xor
or
adc
arpl
leave
xchg
rcrl
push
mov
sbb
adc
movl
pop
or
ret
add
or
mov
outsb
pop
setno
jecxz
inc
aas
inc
enter
fdivs
or
sbb
jnp
cmp
xor
pop
cmp
paddsw
sahf
adc
push
adc
mov
adc
pop
xor
cmp
pop
outsb
jg
sub
leave
fildll
push
add
push
xchg
lret
insl
mov
fadds
out
icebp
shll
pop
outsb
pop
add
mov
nop
data16
lret
in
push
mov
jmp
pushl
jns
popa
repnz
lret
xchg
or
popl
fiaddl
das
jge
insb
les
lahf
sbb
out
jmp
lcall
dec
mul
jl
daa
add
loop
pop
mov
mov
add
out
rol
fmul
mov
imul
sti
ljmp
jb
gs
xor
cs
insb
cmove
jno
jb
imul
pop
outsl
outsb
pop
push
loop
testb
push
add
inc
jbe
pop
mov
dec
outsb
adc
imul
push
imul
gs
sti
outsb
xchg
or
cmp
push
sbb
push
dec
in
imulb
inc
outsl
jne
sqrtps
jns
add
divl
clc
outsw
jb
popa
lea
sub
int
push
or
or
fnstenv
add
mov
rcrl
hlt
arpl
insl
pop
pop
or
pop
cmpsl
fstpt
mov
imul
dec
jne
flds
imul
jns
mov
push
and
popf
lods
fstl
inc
inc
or
jns
mov
out
or
lea
jb
jns
js
neg
fsubr
stos
movsb
cli
adc
popa
jnp
xor
pop
jo
jmp
outsb
pcmpeqd
fs
xor
gs
fisttpl
fistl
pop
fs
add
fisubrs
popa
insl
adc
sub
popa
xchg
inc
and
cmp
cmp
outsl
insl
push
cltd
outsb
xor
movsl
xlat
mov
add
jb
push
in
sub
inc
xor
testl
push
sti
jg
insb
insl
lods
aad
xor
jno
jnp
sbb
in
mov
push
outsl
dec
adc
dec
data16
mov
xor
cmp
push
xor
pop
popa
imul
adc
or
loope
xor
push
mov
imul
enter
adc
jb
xor
sbb
mov
data16
cmp
popa
addr16
outsl
outsb
je
hlt
cwtl
js
or
mov
jo
inc
mov
outsl
inc
sub
push
outsb
in
bound
pop
adc
mov
add
inc
xchg
mov
aas
push
rorl
cs
adc
fs
dec
inc
adc
lea
push
test
dec
lcall
movsl
lret
mov
adc
mov
push
int
and
fildl
bound
jns
dec
lea
push
jo
rol
sub
addr16
or
imul
ja
fstl
inc
imul
outsl
jbe
rcll
add
or
dec
xor
sub
and
out
lahf
dec
and
pop
xchg
or
lods
std
loop
mov
pop
dec
dec
sbb
pop
dec
jae
fbstp
mov
pushf
mov
pop
lret
push
adc
insb
gs
lds
jbe
or
loope
sub
in
roll
sub
repnz
mov
inc
ror
pop
push
jne
inc
mov
adc
mov
sbb
jne
push
and
lea
adc
clc
jp
xchg
adc
fcoms
jmp
mov
fwait
inc
sbb
loope
sub
push
divb
push
push
or
jmp
pop
dec
insl
push
dec
push
xor
inc
imul
lods
or
insb
cmp
xchg
xor
rsqrtps
sbb
push
out
sarb
pop
scas
mov
in
xor
cmp
pop
sbb
dec
or
scas
adc
dec
pop
rol
popa
gs
cmp
jae
sbb
ret
dec
jno
mov
dec
outsl
aaa
cmove
fiadds
pop
push
xor
or
fistl
leavew
adc
mov
inc
jb
push
cmp
push
cltd
scas
cmp
add
or
test
insb
or
sbb
outsb
add
pusha
push
mov
imul
mov
outsl
dec
inc
or
mov
inc
adc
adc
mov
add
nop
push
add
nop
add
and
inc
inc
add
add
add
and
adc
mov
push
push
push
and
add
push
and
or
test
nop
inc
add
add
add
add
test
add
mov
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
cld
lea
jbe
leave
mov
jb
add
push
add
sub
imul
imul
jbe
in
addl
pop
adc
and
shll
insb
jle
shll
rcrb
testb
adc
imul
imul
imul
lcall
inc
dec
cmpsb
imul
imul
lcall
cmp
cmpsb
imul
imul
lcall
xor
lcall
lcall
mov
mov
loopne
xchg
iret
xchg
xchg
add
cmp
fs
mov
mov
shl
xchg
iret
xchg
xchg
add
ss
push
lcallw
test
lcall
or
sbb
dec
push
dec
shll
stos
mov
enter
clc
imul
cmpsb
imul
imul
movsl
imul
cmpsb
imul
imul
cmpsb
imul
shll
and
dec
shll
jp
xor
shll
stos
mov
aam
mov
cwtl
xlat
cltd
add
xor
sub
push
pop
push
dec
shll
orb
sarl
cltd
shll
and
inc
dec
shll
xchg
test
dec
shll
shl
lock
cmpsb
imul
imul
mov
adc
dec
rcll
jbe
mov
xor
lcall
cmpsb
pop
add
imul
imul
insb
lcall
xor
bound
xor
rcrl
fnstenvs
lahf
push
lcall
pop
fs
lcall
mov
rcr
lahf
lahf
mov
lcall
imul
imul
sub
hlt
push
mov
xor
shll
data16
pushf
shll
fsub
cmpsb
imul
cmpsb
imul
cmpsb
imul
loopne
decb
mov
dec
cmp
jl
dec
shll
lcall
rcl
loop
pop
imul
cmpsb
imul
imul
dec
shrl
sbb
dec
shll
orb
mov
popf
jmp
cmpsb
add
cmp
xor
roll
fs
dec
shll
lret
imul
xor
shll
dec
push
data16
xor
rorl
cmpsb
jmp
ljmp
shll
sub
push
je
xchg
sahf
mov
shll
repnz
lcall
cmp
lcall
mov
cmpsb
mov
sarb
shrl
fsubr
cli
test
imul
imul
imul
dec
shll
cmp
shll
movsb
mov
shll
decb
lcall
xor
pop
imul
imul
sub
hlt
add
xor
shll
dec
pop
data16
xor
sarl
pushf
scas
shrb
dec
int3
fsubrp
cld
lods
inc
scas
dec
shll
dec
push
xor
shll
je
xchg
movsb
shll
aam
cmpsb
pop
ss
repnz
adc
imul
cmpsb
imul
call
add
cmpsb
imul
cmpsb
imul
fdivp
add
xor
xor
je
xor
shll
movsb
mov
into
fnstenv
decb
mov
imul
imul
cmpsb
imul
mov
xor
mov
push
xor
dec
shll
nop
mov
scas
rcl
lock
cmpsb
imul
imul
mov
repnz
adc
shll
jbe
dec
shll
loop
pop
ret
xor
movl
cmpsb
xor
pusha
jb
cmpsb
imul
cmpsb
imul
sbb
xor
shrl
dec
push
bound
xor
je
xchg
sahf
stos
mov
into
loopne
mov
mov
add
push
fs
shll
lods
mov
rcr
call
shll
inc
dec
dec
shll
nop
mov
mov
mov
dec
addr16
shll
jp
dec
shll
into
ficompl
decb
mov
cmpsb
imul
cmpsb
imul
imul
dec
shll
dec
pop
data16
xor
rorl
cmpsb
mov
shll
cmp
shll
stos
mov
jmp
loopne
mov
cltd
mov
push
shll
mov
mov
rcr
call
addr16
shll
js
dec
shll
int3
ficomps
cld
or
adc
imul
imul
imul
lcall
pop
jo
imul
imul
lcall
lcall
mov
rcl
test
ret
cmpsb
imul
imul
cmpsb
imul
ret
mov
cmpsb
imul
cmpsb
imul
loop
add
adc
dec
shll
data16
dec
shll
nop
mov
dec
ror
fsubr
cld
push
cmpsb
imul
imul
cmpsb
imul
mov
imul
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
fsubr
cld
or
adc
shll
pop
outsb
xor
shll
xchg
movsb
mov
clc
add
iret
dec
shll
push
fs
shll
orb
sarl
lret
popf
imul
inc
dec
shll
nop
pushf
xor
shll
mov
lcall
sbb
cmpsb
imul
imul
cmpsb
imul
cmpsl
int3
imul
imul
imul
lods
pusha
clc
add
sub
dec
pop
insb
js
cmpsb
imul
cmpsb
imul
adc
xor
shll
xor
dec
shll
mov
cmpsb
popa
shll
loopne
iret
lahf
shlb
cmp
shll
cmpsb
mov
shll
cli
rol
xor
rcrl
dec
pop
shll
nop
mov
mov
int3
fdivp
shrl
rcrl
and
ds
shll
bound
mov
xor
rcrl
fnstenvs
shll
lcall
fs
imul
cmp
mov
rorl
cmpsb
imul
imul
dec
shll
aam
aad
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
add
adc
cmp
shll
nop
pushf
ss
shll
mov
xor
imul
and
shll
outsb
orb
dec
mov
je
jmp
fcomp
add
shll
fs
shll
mov
xor
out
cli
or
sbb
cmpsb
imul
imul
imul
dec
shrl
sub
dec
push
shll
cwtl
stos
dec
shll
in
lcall
sub
dec
mov
dec
jl
mov
sahf
je
cmpsb
imul
lcall
lcall
test
loopne
cmp
add
dec
cmpsb
imul
xor
push
fists
es
pop
daa
push
shll
mov
shll
movb
loop
aaa
loopne
xor
mov
and
inc
dec
push
sbbb
sbb
das
add
orl
addb
or
punpcklbw
and
addb
add
rsm
jbe
xchg
sarb
mov
in
dec
std
jmp
add
fnsave
push
xchg
gs
xor
mov
lcall
dec
mov
cs
je
xchg
and
adc
xor
decl
int3
icebp
out
lea
test
xor
dec
iret
leave
adc
shrb
mov
in
mov
push
sti
in
cmc
stos
sub
and
xchg
xchg
leave
lds
fcmovb
xchg
push
pushl
mov
cli
movsl
rorl
in
fldl
jg
dec
ret
xchg
fisubs
decl
mull
mov
xlat
out
sub
movsb
push
or
xchg
mov
leave
insl
adc
lcall
in
sbb
cmc
sbb
adc
cltd
out
ficoml
and
pop
lock
loopne
insl
jp
push
mov
push
jecxz
pop
dec
scas
loope
and
lcall
sub
or
sarl
incl
mov
arpl
xchg
mov
fistl
jecxz
mov
fiadds
jmp
hlt
gs
incl
push
push
adc
int3
pop
test
xchg
test
pop
jno
gs
test
bnd
out
dec
ljmp
dec
jb
mov
mov
mov
cmc
push
xchg
jnp
stc
inc
sub
mov
faddl
test
insl
aaa
orl
or
repz
jg
sbb
push
sbb
mov
rorl
fwait
pop
push
or
ja
mov
ljmp
cld
arpl
push
mov
dec
call
mov
or
int
dec
jno
lret
call
mov
lea
and
clc
out
inc
into
jge
jnp
cs
decl
sbb
fs
sub
push
mov
mov
stc
test
xchg
cmpsl
dec
cmp
jl
call
insb
out
jmp
push
mov
sbb
adc
outsl
jae
out
pop
subb
mov
mov
pushl
cmp
push
inc
arpl
pop
jns
leave
movsb
insl
sub
rcr
mov
incl
mov
lods
inc
jo
stos
or
jl
xchg
cmp
sbb
mov
lock
aas
or
cli
outsb
mov
push
and
inc
adc
push
aad
or
push
push
addr16
mov
inc
cli
inc
int3
call
stc
adc
das
ds
leave
adc
popf
test
adc
jmp
add
jbe
dec
es
test
sub
iret
jb
decl
movsl
imul
jecxz
mov
ds
outsl
pop
xchg
add
incl
push
outsl
mov
cmp
mov
sahf
mov
jge
dec
ss
ret
lret
mov
loop
aas
jp
xchg
add
mov
push
sar
cmp
cmp
in
insl
imul
and
xchg
daa
inc
cwtl
lods
pop
enter
push
inc
mov
dec
testb
sub
sub
icebp
incl
pop
push
or
ret
into
mov
in
pushl
test
xor
scas
push
test
dec
rcrb
and
je
inc
test
cmp
jmp
js
mov
ss
xchg
cmp
sub
test
gs
int3
mov
mov
pop
in
xlat
shlb
and
pop
add
dec
addr16
popa
pop
clc
mov
push
movsl
xchg
sub
push
rcrb
jl
out
pop
mov
stos
mov
sbb
push
imul
stc
hlt
adc
lea
jl
fs
jge
movsl
adc
adc
incl
mov
addl
push
inc
shrl
add
adc
xor
incl
sbb
lods
sbb
les
sub
inc
dec
shrl
rcl
jg
jae
pop
mov
adc
and
loopne
sub
mov
hlt
sbb
les
cli
add
or
jns
scas
lahf
mov
ljmp
mov
ret
mov
sub
xchg
call
test
push
int3
mov
jl
repz
cmp
mov
lahf
xchg
out
fadds
lahf
mov
push
mov
adc
jmp
mov
je
jae
mov
int3
popf
insb
jp
ss
inc
push
sub
xchg
push
inc
mov
or
addr16
decl
scas
push
fsubrl
mov
jp
sahf
mov
sbb
jae
inc
lahf
sub
call
daa
shlb
mov
test
xchg
inc
decl
mov
pop
adc
push
and
decl
xor
jo
mov
int3
push
lcall
sub
xor
pop
dec
out
sar
dec
in
push
xchg
sub
xlat
dec
mov
cmp
inc
lret
and
push
push
lcall
loop
in
test
daa
xchg
xchg
dec
aaa
jno
lock
inc
xor
cs
aad
jmp
sub
push
jmp
cwtl
pop
inc
pushf
sub
xchg
push
stos
or
cmp
xchg
jg
pop
xchg
movsl
test
outsl
push
shll
std
insl
arpl
ljmp
cmp
sub
fs
sbb
add
js
jg
aad
mov
lcall
mov
push
dec
cltd
in
mov
cmp
test
add
mov
sbb
pop
js
inc
pop
dec
add
mov
sub
in
sbb
pusha
ds
push
jecxz
xor
and
cmp
jp
dec
int3
scas
dec
stc
xor
jge
jns
lret
cmp
inc
jmp
pop
aaa
insb
inc
mov
loope
xchg
add
out
lea
aam
push
mov
cli
sar
ljmp
mov
sbb
insb
loope
jmp
mov
sub
pop
insb
fsubrp
inc
mov
orl
inc
and
sub
outsb
mov
lcall
mov
mull
xchg
xor
dec
push
rolb
insl
xlat
loope
mov
lcall
inc
sbb
out
cld
fcoml
xor
push
mov
incl
jb
sub
add
ret
xchg
or
xchg
jmp
add
and
popa
ja
shl
jg
call
mov
xchg
add
push
lret
in
or
test
cltd
sub
stos
sti
lret
movsb
push
std
ljmp
mov
out
ljmp
mov
clc
test
lea
dec
stc
xchg
lds
cwtl
xchg
cmp
movsb
lret
fbstp
insl
or
mov
dec
adc
lret
inc
ret
jge
stos
addb
ficoms
jle
sahf
sahf
mov
cwtl
dec
roll
test
fbld
mov
push
popf
adc
xor
adc
cmp
aam
lcall
xchg
dec
mov
pop
xchg
cmp
daa
jp
sub
je
cmp
incl
jmp
mov
call
mov
js
in
add
push
mov
adc
pop
loopne
push
xor
divl
jle
push
pop
mov
cmc
pushf
fisttps
lcall
cmpb
js
ljmp
mov
jmp
ja
jl
mov
popa
pop
ss
inc
xchg
sub
shll
push
jg
lcall
dec
pushf
inc
mov
rorl
aam
sub
imul
push
inc
mov
cmp
push
adc
push
movsb
mov
cmp
xchg
xchg
xor
call
mov
xor
mov
push
add
shl
inc
popf
mov
loopne
pop
inc
jp
sbb
lock
cmpsl
adcl
jg
lret
cwtl
add
daa
leave
mov
cmpsl
mov
adc
inc
mov
mov
pusha
dec
insb
xor
push
test
outsb
into
mov
push
decl
mov
or
fdiv
pop
shll
incl
pop
pop
dec
jb
out
push
shlb
xor
push
sbb
mov
sub
pushl
jno
int
movsb
sbb
fsub
mov
addl
test
xchg
fwait
test
pop
clc
data16
insb
cmc
xor
add
jg
inc
fildl
jle
and
push
lahf
sarl
scas
orl
js
insl
mov
mov
into
testl
sbb
sbb
test
pop
inc
or
movsb
fwait
cld
inc
jns
jbe
mov
ljmp
mov
mov
jns
sub
vmwrite
dec
stos
pop
test
jp
cmpb
ljmp
adc
jno
in
adc
sub
ss
push
nop
cwtl
or
jne
or
xchg
xor
mov
push
lods
test
lock
in
ja
addr16
iret
dec
xchg
pop
pop
cld
and
mov
loop
xchg
inc
mov
fdiv
cld
jg
pushl
xchg
push
dec
sbb
mov
out
dec
jns
sub
les
jle
pop
adc
cmp
lcall
fstp
call
cld
mov
out
in
inc
call
mov
clc
pop
pop
in
add
push
pushf
mov
push
xchg
adc
adc
adc
ljmp
mov
xor
xchg
adc
in
mov
mov
push
mov
xchg
cmp
mov
fmull
ret
xchg
xlat
push
repz
lods
cmp
jae
ljmp
aas
lods
jne
roll
jg
and
lea
shl
xchg
jecxz
or
movsl
hlt
jmp
les
aaa
mov
push
jmp
cmp
pop
test
xlat
fldt
je
jmp
div
push
inc
out
pop
fst
add
rcr
mov
lret
movsb
xchg
or
pop
fdivr
call
xchg
and
outsl
dec
dec
addl
lods
xor
or
xorb
fcos
incl
pushl
retw
cmpsl
in
andb
mov
sbb
jg
ljmp
hlt
push
sub
imul
dec
mov
sub
sbb
sbb
mov
adc
call
sub
inc
add
inc
aad
push
cmpl
rclb
and
ret
test
arpl
std
or
sbb
scas
cmpsb
pop
into
pushf
lret
xor
xchg
int3
incl
inc
jecxz
wrpkru
stos
jb
test
daa
fwait
lods
fwait
mov
nop
pop
and
or
jmp
cld
lcall
imul
inc
loope
mov
or
mov
push
dec
mov
pop
adc
jne
clc
mov
pop
jmp
dec
mov
mov
push
lea
in
push
adc
pusha
push
out
mov
push
inc
mov
pop
loopne
pusha
orl
inc
push
lcall
clc
hlt
push
jecxz
adc
inc
cltd
fdivrs
mov
fs
xor
push
lcall
inc
and
inc
icebp
add
mov
xchg
xchg
sub
insb
imul
xor
or
divl
ret
clc
adc
lods
fmul
mov
mov
dec
out
pop
hlt
add
out
incl
sarb
pop
sub
loope
bswap
lahf
inc
jbe
push
jmp
mov
mov
adc
jle
jb
sahf
cmp
adc
out
adc
jmp
dec
addl
pop
repz
xor
jecxz
mov
fwait
ret
push
lods
jns
sub
mov
pop
inc
sub
mov
bound
mov
decb
nop
out
mov
call
subl
clc
in
and
add
jns
adc
sbb
mov
ljmp
pop
movsb
clc
xor
inc
jno
dec
mov
mov
lods
xlat
fmull
lahf
jecxz
push
mulb
jmp
pop
mov
leave
mov
fistps
pop
adc
push
or
mov
ds
or
pop
fwait
mov
scas
push
in
mov
jns
out
lcall
rorb
sarb
adcb
pop
xchg
cmp
fisttpll
xlat
mov
or
pushl
cmp
xchg
xchg
mov
cmc
cmp
into
xor
ss
pushf
cmp
push
aam
leave
push
jle
add
std
ja
sub
jecxz
test
pop
pop
jbe
call
mov
loope
xor
mov
mov
sub
imul
std
ljmp
mov
mov
mov
lock
and
push
sub
xchg
lcall
shrl
ret
push
mov
pop
push
ds
inc
dec
sahf
add
fdivs
lcall
pop
stos
out
xor
lret
arpl
imul
shll
ret
adc
add
pop
into
inc
adc
adc
fldenv
xchg
mov
clc
decl
xchg
mov
test
jb
call
mov
ror
lret
inc
jne
sbb
adc
pop
icebp
ret
movsl
cs
jge
les
dec
lcall
dec
xchg
and
in
sub
push
in
lret
xchg
or
movl
push
hlt
cmp
loopne
mov
sahf
add
mov
fimull
or
sbb
lcall
ds
insb
pop
icebp
pop
movsb
into
cmc
mov
inc
lods
pop
push
movsl
or
popa
rcl
xor
jmp
jp
repnz
ret
add
int3
lcall
push
or
pushl
mov
out
mov
imul
mov
into
xor
add
mov
mov
mov
test
idiv
sbb
aad
call
lock
test
sbb
push
test
adc
cmp
pushl
lea
adc
das
sbb
mov
sub
popa
xchg
xor
dec
std
call
sbb
rol
stc
dec
dec
mov
dec
sub
outsb
fidivl
push
out
mov
xchg
inc
movsl
fidivl
loope
inc
scas
ds
jmp
jmp
xchg
xor
cltd
dec
cld
mov
jo
mov
pop
mov
adc
jle
in
incl
sub
insb
mov
ljmp
push
in
popa
sub
decl
lds
les
and
icebp
mov
mov
in
loop
fucomip
into
add
cli
pushf
push
pop
loop
jge
sbb
scas
dec
movsb
xor
add
loop
ljmp
xchg
mov
loopne
mov
bound
adc
lcall
in
jne
mov
push
gs
sub
or
cmp
outsl
and
ljmp
push
aaa
out
andb
inc
outsb
sub
test
stos
sbb
fstps
ret
mov
lds
ss
xchg
jmp
fwait
bound
in
cwtl
ret
push
ljmp
call
inc
xor
fstpt
pusha
xchg
outsl
std
inc
and
lret
cmp
stc
jbe
pop
aam
hlt
jl
leave
sahf
xor
jge
sbb
sub
in
or
mov
lcall
cmp
cmp
push
cmp
repnz
jg
pushf
adc
in
xchg
stos
mov
outsl
aad
addr16
loope
addr16
jnp
pushl
clc
ffreep
ret
leave
or
aaa
add
pop
pop
mov
decl
jle
sti
rcll
pop
xchg
fmul
xor
test
leave
pop
jg
sar
out
loop
adc
mov
adc
fwait
push
mov
incl
mov
data16
mov
xchg
xchg
fstpt
out
dec
std
mov
mov
mov
mov
push
enter
fnstsw
fnstsw
push
add
loopne
shlb
mov
mov
cli
jmp
es
imul
mov
in
mov
lock
jno
lcall
mov
in
pop
mov
xchg
into
adc
cmpsb
pushf
int3
mov
jge
cmp
decl
std
jge
stos
mov
jae
imul
jb
mov
dec
inc
pop
xor
incl
stos
dec
xorb
ret
cmp
xor
ret
test
mov
loop
aas
hlt
ljmp
loop
bound
or
lcall
cld
fbstp
or
fldcw
jne
cmpsb
aaa
push
lock
jmp
or
push
sbb
call
xchg
movsb
incl
xor
or
mov
jmp
sbb
imul
pop
test
or
push
imul
and
mov
lret
popl
sub
inc
int
decb
cld
out
sub
das
enter
dec
or
ljmp
push
loope
adc
pop
and
sbb
push
lea
ljmp
mov
aam
je
fstpt
loop
lcall
ljmp
sbb
movsb
push
shlb
push
aad
push
sbb
sub
xor
mov
lcall
sub
mov
adc
cmp
adc
adc
xchg
fdivr
dec
mov
jl
pushf
iret
fldl2e
push
imull
mov
sbb
xor
daa
fwait
gs
xchg
mov
out
mov
pushl
mov
xor
out
insb
int3
xchg
outsb
int
cmp
cs
add
push
ret
fstpl
shrb
jl,pt
sub
sbb
in
xchg
frstor
xor
adc
and
push
cmp
popa
daa
aad
out
mov
sub
pop
in
xchg
sahf
adc
cmc
repnz
fs
dec
mov
pop
sub
mov
jl
mov
decl
mov
stos
lods
sub
sub
daa
dec
mov
stos
aam
cmp
xchg
lods
push
add
call
ror
pusha
int
add
decl
icebp
mov
dec
cmp
jmp
inc
mov
cmp
aam
inc
mov
adc
call
call
mov
pop
clc
mov
mov
push
mov
adc
mov
dec
std
lcall
hlt
in
imul
pop
mov
dec
out
sbb
std
sbb
ljmp
in
pop
add
add
cs
pop
mov
stos
cmc
bound
xor
lods
faddp
cli
cmpb
cli
fists
clc
movsl
stos
cmp
popa
out
fldl
jp
sub
repz
jg
jg
jnp
xor
cwtl
lods
out
outsb
cmpsl
add
movsl
cmp
fs
in
shlb
sbb
mov
popf
insb
jb
jne
mov
ret
pop
cli
lcall
inc
xor
mov
dec
psubsb
and
insl
pop
mov
fwait
jno
xchg
jmp
testb
call
scas
inc
daa
pop
cmp
add
imul
push
icebp
stos
cwtl
js
jno
ret
lcall
push
adc
notb
mov
push
cmp
pop
mov
ret
adc
orl
push
mov
mov
xor
mov
aaa
cli
call
xchg
mov
mov
pop
push
xchg
cmp
mov
xor
ljmp
lock
sub
lahf
ret
test
out
mov
ffree
imul
fucomip
inc
call
pop
int
fwait
addr16
out
mov
mov
or
outsb
adc
jle
outsl
mov
mull
sbb
out
cmp
incl
decl
sub
jl
rol
cmp
push
nop
inc
daa
sar
in
decl
cmp
jb
sbb
inc
jae
pop
push
loop
cmpsb
and
sbb
jg
jmp
inc
cmp
mov
mov
test
jmp
std
test
dec
clc
movsb
pop
and
scas
sbb
lods
lods
int3
mov
lret
jg
jg
ret
mov
inc
jbe
adc
cmc
fisttpll
lahf
mov
je
aas
add
dec
repz
push
mov
xchg
fcmovne
mov
jne
jl
inc
nop
imul
mov
push
dec
xor
ret
scas
mov
jns
lcall
pop
decb
push
js
pop
jo
xchg
xchg
adc
outsb
pop
test
ffreep
xchg
cmp
sti
call
stos
subl
das
inc
out
dec
push
push
shrl
jg
call
push
push
lcall
arpl
mov
push
push
inc
sti
sub
mov
nop
sub
das
icebp
pushl
int3
sti
pop
sbb
push
jmp
mov
adcb
push
out
fcomi
shll
pushl
call
pop
xchg
adc
sarl
fisttpll
movsl
dec
subl
mov
add
mov
cld
mov
mov
ljmp
sub
aas
das
mov
mov
outsb
cmp
movsl
inc
mov
cli
ja
lcall
sbb
jb
xor
dec
or
cmpsb
test
aaa
into
sbb
xlat
mov
cld
decb
inc
cwtl
in
xchg
sbb
or
cmp
or
fbld
fmuls
and
jmp
push
out
shrb
ret
aas
pop
jne
hlt
xor
sub
or
inc
jecxz
push
jno
clc
cmp
and
mov
out
rorl
xchg
les
call
fbld
pop
mov
adc
jecxz
fsubrs
adc
rcrl
or
loop
movsl
ja
jg
inc
push
outsl
fidivl
cld
js
scas
pop
dec
cli
sub
lahf
ss
shr
xchg
test
mov
jle
dec
movsl
aas
popa
jp
fldcw
mov
inc
repnz
push
inc
rcll
lcall
aad
mov
lods
cmpl
and
pop
loopne
jne
ds
adc
and
adc
jne
inc
cmc
mov
mov
dec
inc
xchg
jne
outsb
inc
push
xchg
inc
cmc
sbb
sbb
push
cmp
incl
xchg
mov
dec
mov
icebp
mov
sahf
sub
scas
ret
loopne
lcall
jg
mov
lock
pcmpeqb
jne
push
lcall
push
xchg
aad
cmc
ljmp
dec
cmp
cmp
cmc
mov
iret
fadds
xchg
stc
push
pop
pop
movhps
popa
inc
bound
fucomip
pusha
adc
xor
fwait
push
sarb
dec
call
jg
mov
aam
popf
in
aas
aaa
adc
inc
dec
dec
loopne
xchg
leave
insb
adc
pushl
ret
clc
sub
push
adc
test
cmpsl
inc
xor
add
decl
aaa
adc
fwait
sbb
rcll
pop
jg
or
push
sar
cld
adc
sbb
sbb
rcrb
sub
popf
add
pop
fucom
pushf
inc
fidivs
xchg
decl
and
cltd
ror
mov
jg
decl
xor
or
lret
dec
push
jp
add
fsin
sub
mov
mov
call
push
neg
seta
mov
mov
sahf
pushl
mov
sub
ja
push
pop
in
ljmp
lcall
cli
scas
mov
clc
sbb
movsb
test
push
nop
push
mov
pop
inc
call
or
jg
xor
orl
rorl
outsl
mov
test
lods
cld
ljmp
insb
movl
xchg
mov
jge
les
mov
imul
decl
xchg
mov
fistpll
mov
call
sti
cmp
icebp
test
call
stos
sbb
aam
mov
out
xchg
call
sbb
push
pop
jns
test
sbb
and
mov
lea
mov
incl
xchg
in
gs
sahf
in
inc
mov
fidivrl
loope
cli
jmp
pop
add
mov
push
mov
mov
push
int
jecxz
into
mov
aam
pop
cltd
imul
inc
std
movsb
negb
xchg
ljmp
push
push
mov
cs
gs
cmp
cmp
mov
fbstp
ja
popf
mov
frstor
pop
push
jnp
ja
mov
std
call
or
in
adc
sti
xor
mov
dec
mov
and
out
lock
sub
subl
fcompl
and
addr16
lea
and
jae
inc
sbb
mov
add
aaa
cli
in
aaa
bound
lods
adc
xchg
add
xor
jp
push
push
mov
dec
icebp
test
inc
xchg
adc
cmp
out
imul
int3
fimuls
or
mov
cmp
dec
call
mov
pop
inc
sbb
outsl
hlt
pushl
jmp
fisubs
inc
and
mov
sub
push
aaa
ljmp
fmull
rolb
dec
imul
outsl
mov
leave
push
mov
mov
xor
fdivrl
aam
call
in
loope
call
adc
aaa
insb
lret
fildll
sbb
jg
call
das
or
fisttps
mov
jb
test
mov
cmp
add
ret
sbb
enter
in
mov
xchg
stos
dec
push
mov
push
and
js
add
sbb
in
outsl
out
shlb
push
pop
imul
loope
ljmp
cmc
insl
outsb
inc
push
mov
popf
jns
andl
sub
pushl
stos
inc
cld
xchg
jge
outsl
stos
xchg
loopne
jl
push
dec
in
pop
or
mov
out
lret
or
je
test
cmp
incl
cmp
stos
dec
pop
inc
inc
hlt
pop
sbb
lret
cmp
inc
mov
mov
roll
inc
test
or
inc
decl
jb
pop
int3
jne
out
pop
sbb
sahf
repnz
notb
scas
push
inc
out
mov
jg
mov
jns
daa
int3
rclb
mov
je
xchg
test
sar
jmp
jb
cmpsl
pop
int3
dec
or
ds
iret
scas
mov
fcmovu
ljmp
xor
adc
xor
push
stos
lock
push
adc
push
imul
jmp
arpl
mov
add
fsubs
jbe
inc
mov
call
mov
fwait
or
pop
imul
hlt
dec
jg
dec
mov
fmuls
ljmp
xchg
pop
clc
fists
push
sbb
or
dec
sbb
out
push
das
or
fists
daa
aas
loop
cmpb
dec
repnz
out
mov
adc
pop
cmpsb
inc
es
movsb
pop
cmc
dec
dec
bound
dec
rcrl
sbb
or
leave
lock
mov
push
cmc
mov
jo
into
push
sahf
out
pop
jbe
and
cmpsb
imul
lock
cmp
or
adc
arpl
rcrb
dec
ds
fmul
sub
inc
cmp
ljmp
lcall
dec
pushf
xor
xchg
push
sub
aam
lret
repz
in
stos
pop
aas
fstps
pop
call
lcall
push
push
mov
negl
sub
outsb
mov
jne
adc
aaa
scas
ljmp
mov
orb
scas
adc
jg
jg
push
rcll
out
in
cld
and
jg
stc
shl
jg
pop
pusha
push
lcall
jae
push
pushf
fsub
and
mov
pop
xchg
cmp
mov
outsl
dec
push
push
decl
leave
and
movsb
cli
or
fldl
push
and
cmp
ljmp
jne
in
xor
jecxz
js
pop
ficompl
pushl
mov
xchg
lret
pop
mov
dec
js
shl
mov
adc
sar
pop
lods
push
sbb
add
cmc
jmp
and
int3
cwtl
mov
and
jl
sub
and
mov
enter
jne
das
cmp
pop
ds
adc
out
sbb
mov
xchg
fisttpl
iret
inc
testl
iret
ss
outsl
mov
ret
sub
xchg
call
arpl
rolb
outsl
mov
bound
ss
popa
add
icebp
scas
push
push
movsb
loop
lret
ljmp
dec
mov
xor
out
sbb
dec
test
pop
mov
jno
sub
clc
faddl
xchg
push
mov
sbb
out
cmp
outsl
std
fwait
cmp
lds
jecxz
pop
cwtl
pop
ljmp
cld
test
pop
dec
enter
push
and
pop
pop
jecxz
inc
pop
or
test
pop
and
pop
cld
lcall
dec
les
pop
lods
pop
movsl
mov
sti
add
pop
add
add
imul
enter
data16
mov
push
fs
push
adc
jnp
xor
cmpsb
gs
call
and
leave
mov
rolb
jno
and
std
enter
stos
xlat
push
enter
lcall
add
test
sbb
mov
jbe
jmp
push
arpl
icebp
fisttpll
cld
push
jne
leave
jnp
rolb
movsb
insb
and
inc
test
faddl
mov
mov
in
nop
jmp
in
jno
es
ss
pop
pop
call
cld
aas
loopne
lds
push
addr16
hlt
lods
addr16
xor
shll
add
or
and
or
aam
push
rcll
pusha
or
incl
aas
and
addb
dec
mov
add
dec
sbb
sbb
inc
addr16
jg
ljmp
cmpsb
lods
xor
jmp
aaa
pop
sbb
hlt
or
cmpsl
test
outsl
call
cmp
in
push
jnp
imul
nop
jae
dec
jmp
jno
push
cli
mov
pop
test
out
pop
mov
jbe
iret
dec
cld
std
dec
mov
shl
iret
lret
push
jp
out
jmp
fucomp
int3
xchg
mov
cmp
jmp
add
mov
sbb
es
std
out
mov
sbb
sbb
int
stos
mov
enter
xchg
or
push
rcrl
repnz
add
cs
jecxz
pushl
sub
orl
cwtl
movsb
xor
cmp
dec
push
fdivr
jle
mov
mov
adc
jbe
cmp
ror
js
pop
daa
dec
xchg
dec
push
push
idiv
ljmp
test
iret
data16
sti
aas
rcll
mov
mov
mov
int
adc
lods
cmp
mov
inc
ja
and
jl
test
sub
inc
scas
test
xchg
pop
or
mov
fdivrs
std
incl
push
xchg
mov
push
xor
mov
sbb
lcall
inc
dec
mov
xor
ret
mov
cld
jb
incl
incl
loope
xor
fwait
insl
pop
js
push
aad
fdivl
jge
iret
js
or
imul
lds
or
pop
push
add
and
fnsave
sub
imul
lods
fs
xlat
repnz
mov
xchg
test
mov
into
adc
pushf
pushf
or
int3
loop
aas
mov
push
ljmp
pop
fcoms
dec
cmpsb
mov
fwait
push
adc
ret
ljmp
fildll
push
jmp
or
pop
push
popa
pop
mov
lods
lds
push
call
cmp
pop
and
mov
jbe
lret
adc
stos
adc
fwait
jmp
sub
xchg
mov
push
xor
stos
bound
dec
vmovq
ss
call
pop
push
and
xchg
loope
jp
push
adc
mov
push
xchg
jle
std
jne
mov
pop
sbb
mov
pop
clc
lcall
jb
xchg
lret
jns
scas
std
sti
xor
push
jae
aas
cld
fdivr
incl
xor
mov
mull
xchg
sbb
idivl
xor
adc
pop
pop
clc
pushl
hlt
xor
ss
push
mov
mov
jmp
push
data16
pop
enter
push
stos
fdivr
cmp
jp
and
or
fildll
imul
or
adc
shl
arpl
in
imul
adc
mov
jg
decb
in
mov
mov
test
cmpl
stos
or
mov
fucomip
mov
add
bound
push
mov
sbb
movsl
or
in
ss
in
insl
pop
inc
fisttpl
pop
mulb
stos
dec
clc
mov
adc
xor
mov
mov
pop
mov
shlb
sbb
popf
push
mov
divb
mov
adc
inc
xlat
hlt
ja
lret
ficoml
jmp
fmull
mov
test
test
lods
loop
ljmp
test
cmpsb
mov
out
mov
cmp
mov
decl
mov
lods
jg
sbb
jne
sbb
fdivr
pop
lret
cmpsb
shll
enter
incl
pushf
push
dec
and
repz
sbb
test
pushl
mov
fidivl
out
fidivl
xor
and
add
jle
lcall
sub
sbb
aam
xchg
pop
int
stc
xor
in
jp
lcall
lahf
mov
pop
shll
out
push
imul
hlt
shlb
aad
fcoms
jp
call
dec
and
sti
arpl
mov
push
pusha
mov
push
jg
jmp
push
std
cmp
mov
es
sti
jmp
push
add
xor
ret
and
inc
add
jmp
movb
aaa
mov
sbbl
push
int
or
ds
incl
test
insl
ja
dec
jo
dec
mov
lahf
loope
sub
imul
sbb
in
ss
mov
lahf
cmp
sub
stos
cli
inc
sbb
xor
sar
mov
push
fldcw
hlt
pop
and
cmp
dec
sarl
or
imul
fcomi
lret
dec
aam
in
mov
cwtl
pop
outsl
jp
or
in
xchg
or
or
lcall
cld
stos
cmp
mov
pop
jnp
cmp
loope
mov
jbe
push
inc
lcall
repnz
int
iret
cmp
jecxz
jae
push
add
pop
sahf
mov
jbe
pushl
or
outsb
aas
in
xor
sbb
and
les
push
jne
ret
in
cwtl
inc
adc
or
adc
push
jns
mov
pop
xor
leave
es
je
int
fbld
sbb
fstps
jne
sub
cmp
jl
xorl
sub
lcall
push
repnz
addr16
fildll
jmp
inc
hlt
clc
mov
jbe
dec
popf
sarl
lret
xchg
sbb
fimull
push
outsb
cmp
xlat
add
jmp
insb
pop
xchg
subl
arpl
stc
cmpsb
cmpsb
pushf
xchg
pop
mov
mov
add
dec
jl
js
das
lock
push
in
mov
mov
fmull
cmp
mov
push
insb
leave
and
push
sub
dec
push
shrl
nopl
je
mov
cmp
cmp
pop
xchg
xchg
in
lods
pop
outsl
cld
adc
scas
xor
ljmp
movsb
out
popa
mov
icebp
imul
mov
fisubs
dec
adc
rcll
lcall
jno
fwait
mov
push
mov
fstl
or
sti
test
outsl
cmc
test
ja
scas
data16
cwtl
pusha
mov
mov
mull
mov
repnz
pop
call
pop
int
faddp
sti
sub
cmp
xchg
jb
out
sub
aaa
ret
cld
data16
rcrl
push
stos
mov
jge
incl
cltd
push
es
ja
test
or
jge
mov
cmc
dec
jae
out
call
pop
in
pop
lds
enter
dec
pop
push
call
es
mov
jge
cmp
jmp
mov
push
pop
push
pushl
inc
js
frstor
jle
mov
and
pop
out
out
ljmp
xor
or
into
or
div
or
dec
jbe
sub
sub
add
inc
cmc
stc
icebp
push
in
sub
int
sbb
jno
icebp
sub
pop
push
xor
ljmp
sub
add
je
jae
repz
movsb
dec
sbb
xchg
bound
mov
andps
adc
push
push
push
pusha
xor
lea
mov
in
mov
aam
pop
pop
inc
loop
fdivr
test
sub
notl
ljmp
pushw
xor
loopne
add
mov
fcomps
fnstsw
lcall
jle
cmpl
outsb
push
lds
mov
push
incl
or
fsubrl
outsl
insl
inc
fs
pop
push
pop
xor
sub
das
lock
or
fistl
mov
mov
push
cmc
hlt
pushl
mov
mov
dec
cwtl
ret
std
adc
dec
pop
adc
cltd
adc
cltd
lods
mov
aam
pop
test
jb
std
pop
dec
mov
mov
imul
adc
mov
rcrl
movl
hlt
pop
aaa
jo
xchg
mov
or
imul
out
pop
scas
in
je
adc
push
cmpsl
adc
xchg
out
vmovaps
je
jbe
outsb
cwtl
jmp
popa
in
call
mov
std
push
call
icebp
sbb
push
in
ss
cmpsb
mov
subl
jmp
loopne
lret
jmp
inc
add
sbb
mov
and
icebp
scas
mov
popf
sbb
js
decl
cld
cmp
mov
jl
js
xor
push
shrl
mov
jmp
sub
mov
lcall
mov
push
inc
outsl
cmp
push
iret
repnz
add
jmp
and
shr
loope
sub
test
lds
jne
dec
sbb
lods
incl
dec
testb
adc
sub
jge
push
loopne
cmpsl
sub
decl
roll
and
adc
sbb
jbe
push
aam
mov
push
push
xchg
gs
cli
adc
call
pushf
ljmp
loop
sbb
cmp
inc
mov
push
sub
pushf
add
lret
mov
pop
negl
in
jge
int
filds
mov
inc
dec
sbb
aam
mov
test
mov
mov
scas
cmc
jo
mov
cld
outsl
jle
fnstenv
xchg
pop
mov
fwait
mov
ret
push
movsb
in
loopne
jg
outsl
xchg
dec
xor
push
rorl
xor
movsb
xor
ffreep
cmp
and
xchg
stos
stos
lcall
inc
xchg
and
std
in
movsb
inc
push
inc
add
bswap
stos
in
cltd
cwtl
push
jl
pushl
pop
mov
mov
aad
popf
xchg
mov
test
sub
adc
repnz
lock
pushl
push
stos
xor
or
ror
xchg
sbb
movsl
cmp
aas
mov
dec
movsb
ljmp
xor
mov
shlb
fucomip
test
hlt
mov
add
adc
and
int3
mov
xchg
mov
jg
adc
into
gs
xor
add
aam
inc
fisubl
iret
pushf
stos
cmp
xor
in
xor
dec
rclw
enter
push
mov
lods
int
pop
pop
mov
xlat
push
dec
mov
incl
or
xchg
mov
cmp
scas
pop
inc
push
paddd
das
shll
decl
sbb
ds
dec
aaa
fsubs
mov
aad
loop
jbe
lcall
add
popa
rorl
mov
dec
ja
sbb
jle
or
out
jbe
cmp
xor
dec
test
xchg
popf
cmp
int
filds
lcall
inc
and
or
adc
ret
pop
and
ja
cmc
jne
xchg
aad
pop
and
mov
cs
push
dec
rorl
lahf
cs
and
pop
sti
pop
inc
jns
push
xchg
lcall
int3
mov
sbb
xlat
and
mov
inc
int3
scas
xlat
dec
ds
call
cli
mov
or
in
add
and
ds
cltd
jb
mov
shll
orl
pushf
sub
mov
and
jmp
xor
jne
nop
cmpsl
call
repz
push
mov
scas
mov
jmp
cmpsl
cmpsb
or
pop
sub
jns
xor
push
in
sub
jle
mov
pop
cmc
pusha
pop
pusha
das
test
scas
in
aam
dec
lret
or
jmp
jge
mov
mov
sbb
js
xor
outsl
icebp
ljmp
push
mov
repnz
lcall
ljmp
popf
xor
fwait
shlb
test
push
push
mov
aas
movsb
movb
test
pop
jno
shlb
jbe
out
jb
fmul
xchg
dec
ds
decl
jle
xchg
pop
cltd
movsl
popf
int3
setp
test
flds
andb
jg
add
bound
repnz
inc
mov
or
inc
push
push
mov
dec
outsb
mov
sarb
xor
sub
fs
jge
std
lds
mov
dec
jno
pop
or
sub
cmp
push
icebp
stc
jb
dec
jl
sub
sgdtl
inc
scas
mov
pop
adc
sub
rorl
mov
xchg
sub
insl
xor
loope
xor
or
and
sar
mov
enter
mov
mov
out
cmp
ljmp
push
adc
out
sbb
std
outsb
jg
ja
and
xchg
out
sub
inc
cs
push
daa
xchg
call
jg
pop
lahf
and
dec
add
sub
aas
xor
es
sub
inc
mov
in
jmp
inc
in
call
dec
or
or
pop
rorl
bound
lds
xchg
fwait
jg
call
cmpsl
sahf
aaa
movb
jle
push
mov
js
cld
or
pop
mov
nop
push
rcrl
decl
push
sti
repnz
xor
test
mov
push
xor
int3
shlb
jmp
std
and
jmp
add
and
dec
pushf
or
jl
mov
ret
fstpl
cli
xchg
das
in
sbb
or
mov
push
jmp
int3
outsb
push
jnp
addl
outsl
fimull
fs
jae
xchg
mov
lret
fmull
and
stos
fisttpl
and
jg
lcall
icebp
sbb
add
dec
ffree
mov
mov
cltd
loop
ljmp
mov
mov
dec
sahf
mov
loope
xchg
push
or
sub
hlt
pop
push
mov
dec
pop
xchg
iret
mov
imul
dec
xchg
jo
jmp
adc
shlb
enter
nop
pop
in
adc
int3
aam
in
call
mov
push
push
dec
xcrypt-ofb
cmpsl
imul
imul
mov
pop
sbb
sub
je
enter
test
mov
icebp
pop
movsb
ret
xor
subb
in
lcall
fildl
cmc
jnp
xchg
loop
sub
mov
or
sbb
push
xlat
xchg
in
sub
jle
lods
jb
push
mov
xor
call
cmp
or
push
ret
jle
les
add
notb
ljmp
xchg
mov
cmp
cmp
loop
ret
aas
cmc
or
jg
out
inc
cld
xchg
push
dec
mov
mov
or
xor
arpl
pop
call
in
add
mov
or
jbe
addr16
jnp
sarl
popa
movsb
movsl
sub
nop
mov
dec
in
and
in
in
push
fmulp
cmc
push
add
scas
adc
shlb
fcmovnu
arpl
push
jbe
out
and
test
mov
adc
pop
jmp
sub
mov
mov
sarb
lret
cmp
movsb
repnz
cld
adc
jb
int
sbb
jbe
loopne
dec
pop
push
hlt
jne
jmp
inc
or
cmp
testb
mov
cmpsl
push
pop
xchg
popa
push
jnp
cmpl
jmp
push
sub
lcall
test
mov
mov
mov
jecxz
mov
jge
fdivs
ljmp
rorb
xchg
repz
js
popa
rcll
dec
dec
mul
sub
cmp
aas
push
fildl
stos
in
mov
xor
jl
jg
leave
aam
pop
jmp
decl
and
int
push
inc
xor
lea
jl
out
or
ret
test
jns
pop
fisttps
cltd
mov
aaa
js
jge
sub
mov
pushl
jnp
cmp
es
adc
das
aas
fimuls
and
test
dec
add
insl
mov
sbb
dec
addb
push
jge
arpl
mov
mov
cld
call
enter
in
shlb
sbb
xor
outsl
hlt
inc
or
jne
xchg
jb
mov
nop
cmp
jno
mov
incl
and
sub
mov
sarb
dec
adc
lock
jmp
mov
loope
aaa
cltd
mov
xchg
ljmp
mov
jl
adc
leave
xchg
xchg
popa
int3
sub
fsts
incl
xchg
cmp
decb
and
lcall
std
pop
lret
add
mov
jb
jne
in
jp
adc
jne
and
rcrb
push
push
ret
mov
push
leave
xor
and
in
push
call
add
mov
int
mov
and
shrl
ljmp
repnz
es
ds
xchg
enter
imul
cmp
xor
pushl
dec
cltd
adc
push
sarl
pushf
mov
mov
nop
sbb
std
push
ljmp
in
dec
cmpsl
and
jo
shrl
clc
call
mov
fdivr
mov
testb
subl
xchg
xlat
lds
inc
mov
push
clc
xchg
repnz
xor
mov
add
pop
cmp
and
pop
leave
pop
shll
mov
mov
out
xchg
dec
jg
call
out
jo
imul
xchg
push
xchg
or
add
push
sbb
sub
negb
dec
lds
or
sahf
mov
testl
sub
les
in
push
call
mov
call
and
incl
inc
cli
xchg
mov
sahf
icebp
hlt
sbbb
lods
and
dec
or
lcall
sub
addl
cmp
mov
aam
cmp
push
out
adc
add
sti
divb
shlb
jb
ds
push
cwtl
push
lcall
mov
jns
sub
iret
sbb
mov
aas
xlat
js
out
cmpsb
dec
mov
out
ret
lret
lods
push
or
lock
mov
in
call
jae
sub
fimull
adc
shrb
in
fidivs
addr16
add
repz
xor
cli
das
push
call
xchg
clc
jae
push
movsb
push
pushl
mov
sub
mov
and
mul
pop
lcall
decl
mov
cmpsb
popl
pop
cmp
adc
mov
lods
jg
test
sub
jne
sub
test
push
and
call
jne
test
addr16
xchg
sbb
mov
cwtl
xor
ret
ss
int3
mov
push
jno
aas
adc
cld
sub
fcmovu
fs
jg
call
xchg
sbb
int
jg
xchg
dec
in
adc
and
pop
in
dec
std
movsl
scas
inc
sbb
cmpb
out
cmpsb
xchg
cli
incl
jnp
push
xlat
push
in
aaa
and
lds
fs
jge
xchg
and
sti
ljmp
pop
fucomp
push
ljmp
jae
mov
gs
gs
decl
popf
adc
cmp
in
xchg
push
push
imul
out
or
sti
adc
lcall
insl
ret
or
fistpl
clc
imul
adc
movsb
push
push
cmp
lods
add
test
mov
mov
xchg
add
in
int3
adc
push
sub
sub
push
and
push
jmp
int
jne
test
push
enter
ud0
call
fstps
jl
jl
xor
pop
jns
loopne
jne
sub
xchg
mov
and
decl
mov
sub
mov
outsl
cmp
push
sbb
jg
rcr
loope
cli
and
fstl
lea
adc
fnstsw
decl
cmpsl
mov
xchg
and
in
xchg
int
pop
inc
das
ss
dec
rolb
pop
ret
adc
test
cs
lock
into
les
mov
mov
iret
adc
inc
incl
push
and
push
gs
std
or
hlt
gs
dec
test
bnd
sti
stos
nop
adc
test
mov
cmc
or
adc
inc
sub
lahf
xchg
push
fmuls
lcall
call
jnp
movsl
cmpsl
xchg
mov
mov
stos
inc
mov
loopne
aas
imul
push
sbb
in
dec
mov
mov
jmp
add
xor
add
or
mov
shll
xchg
loope
jle
aam
jp
cmpsl
outsl
hlt
call
js
lock
pop
pop
pop
mov
scas
call
xchg
lahf
pop
adc
call
cmp
insl
imul
cmc
rcrb
fbstp
outsl
add
stos
aad
inc
cmpsl
jmp
sti
lcall
sub
jb
arpl
mov
sub
xchg
jnp
fbld
push
stc
pop
xchg
shll
imul
pop
push
push
ret
pushf
scas
scas
sub
sar
jl
pop
jle
fwait
or
fstpt
lahf
sbb
sar
mov
sbb
mov
insl
aad
imul
stc
ret
stos
fiaddl
stos
dec
adc
inc
out
add
loop
sti
scas
sub
call
pop
insl
fsubr
jbe
repz
fucomp
fdivr
sub
pop
iret
push
cwtl
or
lds
sarb
sub
adc
pushf
and
mov
or
popf
and
xchg
sbb
mov
cwtl
loopne
push
ljmp
ljmp
pop
cmp
cli
inc
mov
sti
and
push
sbb
fwait
jg
fwait
mov
jl
incl
or
mov
and
fs
jp
movsb
dec
into
push
push
into
or
decl
lock
push
int3
call
and
in
inc
cmp
dec
mov
cld
decl
loop
mov
popf
in
mov
repz
push
aad
scas
cmpsb
loopne
cmp
mov
into
xchg
ljmp
outsl
xchg
pop
in
cmp
sbb
inc
lods
out
xchg
fcmovb
push
xor
incl
decl
sbb
lea
test
jecxz
mov
jae
sub
pusha
jmp
mov
fcmovbe
mov
sub
scas
insb
imul
sbb
xchg
pop
test
pop
outsl
jno
cmp
or
pusha
bound
xor
mov
pushl
xor
pop
fcoml
ret
add
mov
insl
icebp
dec
pop
loopne
mov
insl
add
cmc
mov
sub
push
sahf
jmp
and
decl
cmp
imul
fwait
shrl
bound
incl
dec
xor
rorb
inc
das
mov
push
or
cmc
ljmp
inc
mov
rcll
xor
and
test
cli
push
push
pop
js
sbb
jns
add
xchg
fbstp
mov
mov
mov
push
inc
dec
clc
mov
les
pop
loopne
cld
iret
adc
dec
mov
int3
scas
inc
jmp
push
cmp
hlt
lds
xchg
cmp
push
push
add
data16
incl
inc
cmpsl
into
stc
daa
mov
into
mov
test
dec
cmp
adc
call
ficomps
push
ror
aad
mul
jne
cmp
into
ficoml
in
lcall
ljmp
cmp
xchg
int3
hlt
pop
jge
outsl
std
call
pusha
mov
negb
gs
cmp
incl
decl
jae
ret
xchg
inc
pop
pushl
xor
incl
hlt
data16
sub
loope
test
cs
inc
jo
mov
dec
clc
incl
mov
lock
xchg
cs
sbb
fucomi
adcl
add
sar
dec
shr
rol
mov
inc
and
fisttpll
enter
add
in
test
jg
imul
mov
lods
and
jne
push
mov
dec
xor
rorb
std
jmp
cli
aas
mov
dec
mov
cwtl
repz
adc
fiadds
jae
adc
outsl
jno
adc
pop
shll
dec
jl
mov
ss
incl
sub
push
pop
fildl
jne
inc
jmp
jge
in
jl
rcrb
jne
push
in
sbb
mov
add
lcall
std
out
repnz
mov
int
fisubrl
stos
mov
xchg
leave
punpckldq
icebp
aaa
pushl
iret
fs
test
push
stc
mov
sti
jmp
enter
sbb
dec
jne
inc
adc
sbb
add
les
sbb
mov
repnz
xor
push
pop
dec
inc
sbb
mov
scas
shr
dec
jae
jmp
jl
mov
xchg
xor
pop
subb
or
sub
cmp
test
outsl
pop
lods
mov
mov
ficompl
add
ja
mov
and
push
push
adc
cli
pop
dec
jns
addl
cli
mov
sub
jnp
mov
cmp
or
inc
push
or
xchg
mov
jp
sbb
rolb
jg
push
or
movsb
mov
push
and
enter
lea
push
mov
xor
nop
leave
into
fcmovnbe
pop
clc
pushl
lret
mov
dec
jo
adcb
sub
data16
call
call
sbb
push
push
add
rcrl
sbb
mov
dec
arpl
fidivl
pop
aam
ficoml
pop
insb
jo
icebp
and
inc
ljmp
call
je
or
push
sbb
jg
arpl
shl
es
out
fdivrs
jo
mov
add
push
mov
sbb
pushf
xlat
out
insb
mov
mov
arpl
in
sbb
imul
out
fcmovnbe
addl
ret
in
incl
xlat
adc
inc
shrb
fsubr
stos
outsl
out
mov
pushl
cltd
cmp
imul
cmp
or
out
inc
movsl
mov
popf
scas
xchg
jne
cli
ljmp
mov
and
popf
add
mov
or
lea
push
push
jae
xchg
addr16
and
inc
xchg
loop
call
and
push
sbb
outsb
fwait
mov
pop
bnd
popa
pusha
cmp
fsts
cs
mov
and
loope
pop
mov
fdivr
sub
inc
lods
mov
mov
or
lods
xchg
ret
pop
pop
decl
cmpsl
xor
lret
fldl
adc
shll
xchg
push
lret
jb
cli
ljmp
ficoms
xor
ret
sbb
fldt
pop
xor
or
or
outsl
mov
mov
jmp
out
jae
mov
stos
push
cmp
mov
push
pop
xchg
cmc
iret
or
dec
cld
pop
call
add
cmp
fmull
pop
and
xchg
jl
icebp
xchg
cmp
imul
sub
pop
and
fdivs
jl
push
in
push
ljmp
push
pop
add
xor
sti
arpl
xor
fidivs
push
in
pop
inc
jmp
mov
hlt
int3
popl
mov
mov
in
sub
outsl
lock
icebp
xor
ret
mov
lock
fldenv
mov
aas
or
std
pop
mov
subl
call
push
popf
cwtl
inc
mov
or
enter
cld
push
mov
repnz
cli
stos
decb
pop
mov
xchg
loop
cmp
cmp
add
loope
xchg
pusha
jo
jmp
incl
or
inc
xchg
sti
jbe
mov
inc
mov
jg
jg
pop
lods
xor
push
or
aam
jno
sti
sbb
inc
inc
loopne
push
mov
inc
out
sbb
dec
dec
imul
pop
je
mov
icebp
dec
adc
or
jns
mov
call
jle
fnsave
sar
mov
adc
call
xchg
jle
xchg
in
test
xorb
or
xchg
push
push
adc
ljmp
push
add
xchg
fwait
out
mov
iret
lea
in
cmp
and
fnstsw
inc
jmp
int
pusha
adc
sub
xchg
pushl
clc
pop
mov
mov
rcrb
dec
mov
pop
fucomi
and
mov
push
sbb
popf
mov
lcall
push
stos
sub
lret
mov
xchg
or
stc
inc
push
mov
or
xchg
das
je
scas
out
mov
mov
jg
adc
inc
adc
ss
loop
cmp
adc
dec
jle
jle
mov
fadds
lcall
or
or
in
mov
aam
aam
arpl
sbb
add
addr16
lcall
mov
adc
fucomip
or
fbstp
jg
ja
and
adc
xchg
push
lea
fcoms
je
dec
xor
pop
lcall
incl
loopne
into
xchg
lret
out
mov
leave
sbb
push
nop
adc
xchg
call
in
mov
aam
out
xchg
int3
stos
or
clc
aad
xlat
cltd
jp
call
mov
mov
xor
in
aas
mov
xchg
sbb
pop
fiaddl
adc
mov
in
fistpl
xchg
out
notb
pop
mov
sbb
push
gs
leave
inc
jg
popf
sbb
in
je
call
sub
mov
das
hlt
xchg
into
and
jb
jns
and
andl
in
dec
or
sbb
and
push
sub
and
cmp
jmp
or
mov
out
and
lods
cmpsb
mov
cltd
jle
or
jmp
or
rorl
mov
cmp
call
dec
and
loopne
push
inc
sahf
sub
fsubr
mov
add
aas
or
jmp
and
mov
iret
and
fstl
jmp
mov
add
and
jae
mov
cmpsb
jp
call
sbb
xchg
arpl
sub
stos
cli
je
dec
push
rol
mov
lret
popf
int
cmpl
popf
fmuls
and
dec
jae
mov
ss
ljmp
add
sub
arpl
pop
jae
repz
cld
mov
pop
mov
and
jne
jg
pushl
es
and
pop
push
lahf
cmpsb
sbb
leave
mov
scas
loope
decl
dec
cmp
fdivl
stc
dec
jmp
sub
jns
call
jbe
ljmp
repz
push
divl
rorb
jb
ljmp
cltd
pop
adc
dec
std
call
jmp
cmc
jbe
dec
js
shll
loope,pt
push
pop
mov
repnz
out
xchg
addr16
outsb
mov
cmp
mov
sub
or
cmp
scas
decb
jge
sbb
xor
call
mov
sbb
jne
sub
faddl
xchg
sub
ljmp
mov
neg
cs
lcall
ret
mov
mov
mov
std
jmp
cmp
jle
push
sub
xchg
jnp
or
into
cld
pop
inc
lahf
in
push
call
pop
push
xchg
scas
push
lahf
out
clc
mov
call
test
mov
dec
movsl
mov
or
imul
loop
mov
insl
imul
jg
fsubr
shlb
or
cmp
incl
lods
data16
cmp
std
sbb
xchg
fisttpl
jl
dec
cmpsl
jg
in
pop
xor
mov
jns
movsl
pop
arpl
jb
and
adc
in
sbb
je
pop
loop
imul
inc
fcos
fnstsw
mov
add
push
xor
stos
outsl
negb
shrl
call
enter
or
push
stos
add
lahf
dec
popf
incl
push
sub
inc
pop
in
and
sub
mov
and
cmc
inc
mov
xor
inc
cli
add
push
test
rcll
push
out
sbb
dec
jl
sub
dec
leave
sar
cmc
or
cld
jmp
lods
subb
pop
lret
sbb
mov
inc
lock
sti
iret
fdivrp
jmp
cmp
xchg
stos
sbb
jmp
ja
mov
sar
dec
fs
incl
xchg
jb
xchg
and
inc
cli
loopew
push
decl
jnp
sub
mov
add
out
test
add
mov
movl
push
cmp
iret
xchg
mov
pop
xor
and
cmpsl
lea
lret
fisttpll
lods
mov
sahf
filds
sbb
arpl
insl
test
pop
push
and
sar
push
jne
mov
adc
cmpsl
jbe
push
jg
push
shrb
xchg
lds
orl
mov
inc
fists
xor
and
movsl
push
mov
shrl
sub
imul
mov
aaa
scas
hlt
out
int3
push
lcall
inc
mov
cli
cs
jnp
jbe
push
xchg
xchg
adc
dec
lret
pop
add
mov
cmp
xor
push
addr16
call
cmpsb
push
fs
movsb
dec
cmp
jo
and
add
js
clc
movsl
xchg
andb
or
lds
decb
xor
mov
outsl
loopne
jecxz
movb
fimull
das
xor
fucom
add
shll
shr
lret
add
adc
or
mov
push
cli
dec
jbe
inc
and
push
lret
ss
ss
mov
scas
jo
stos
cmpsl
cmp
aad
and
lods
pop
lcall
xchg
js
push
cmp
pushl
hlt
adc
or
es
imulb
push
jmp
mov
lcall
loope
hlt
dec
movl
inc
dec
xor
push
call
dec
cmp
jge
lods
push
or
jmp
inc
pop
jns
cmp
push
lock
dec
mov
mov
pop
aad
and
cmp
repz
push
jle
adc
daa
jb
dec
fnsave
lods
xchg
cmp
mov
ret
je
add
inc
in
pop
icebp
pushl
push
test
imul
pop
sbb
add
and
movsl
int3
sub
sbb
lcall
fmuls
into
imulb
sar
add
push
jno
xchg
mov
iret
or
xchg
mov
movsl
dec
xchg
mov
push
loopne
pop
iret
add
ljmp
inc
jle
lods
std
push
xchg
sbb
or
add
push
pop
jns
and
xchg
xchg
or
lcall
xchg
jmp
loope
fld
mov
sub
std
jmp
je
jg
rcl
jmp
cmp
jecxz
or
sbb
sub
out
stos
lret
or
jno
add
inc
ds
cmp
and
mov
sar
call
mov
mov
cmpsb
mov
scas
pop
mov
add
call
std
shr
xchg
mov
add
mov
and
inc
sub
sbb
incl
sbb
mov
lahf
pop
inc
push
into
pop
cmp
fisubs
sub
cmp
mov
flds
adc
jg
and
jg
or
popf
or
xor
outsl
aam
ljmp
mov
call
test
inc
das
adc
add
addr16
jo
cmp
ss
sub
adc
or
push
out
or
ljmp
stos
dec
faddl
out
xchg
stc
xlat
insl
stos
mov
sub
test
inc
sub
decl
cwtl
sub
mov
inc
enter
cmp
jb
pop
sub
stos
insl
dec
call
and
das
outsb
or
test
jge
subl
movsb
mov
movsl
test
inc
sbb
fbstp
lods
shl
mov
in
dec
jno
leave
sub
movsl
lods
fmuls
jo
adc
int
pop
test
jns
int
int3
jo
mov
jl
das
rcrb
jb
mov
push
cmp
das
pop
cli
ljmp
adc
test
sbb
push
lcall
cld
cld
loope
or
fmuls
cmpsb
xchg
cmp
leave
jne
sar
fists
adc
cwtl
rolb
inc
xlat
push
push
lock
xor
popf
or
mov
add
sub
mov
add
xchg
ret
mov
mov
cld
mov
add
cli
lahf
xchg
outsb
xchg
aas
sbb
mov
sbb
decl
inc
test
dec
fcoml
pop
stc
pop
inc
out
das
fsubrl
pushl
sub
in
into
aaa
jb
push
insl
call
lcall
cld
mov
hlt
push
test
loope
sub
xchg
cmp
sbb
mov
in
loope
mov
pop
lahf
cmpsb
mov
iret
stos
push
mov
mov
out
xchg
pop
and
test
cltd
xchg
lret
fildl
mov
pushl
pop
pop
insl
sub
jo
xor
pop
mov
movsb
test
fisubrl
clc
call
pusha
leave
hlt
xchg
xor
sub
pop
movsl
mov
jae
mov
or
outsl
jmp
mov
dec
fsubp
outsb
rorb
xor
out
fdiv
hlt
shll
add
call
pop
dec
iret
pop
int
mov
and
mov
push
das
mov
ljmp
pop
jae
bound
int3
cltd
xor
jp
in
or
rcr
in
pop
adc
inc
bound
pop
cwtl
or
ljmp
insl
sahf
aaa
sti
mov
inc
pushl
movb
loopne
mov
jp
mov
pop
dec
inc
mov
lds
mov
fstpl
push
cmp
call
pushf
cli
insb
iret
jbe
inc
dec
cmc
sub
pop
jns
fwait
push
jmp
mov
or
sbb
call
xchg
cmpsw
scas
or
mov
and
enter
jno
decl
lods
addr16
js
inc
xchg
cmp
aad
jg
imul
cmp
loope
stos
ds
and
fisubrl
xchg
cmp
aas
or
sbb
cmc
cmc
add
das
frstor
pushf
in
add
lcall
push
loop
xchg
movsl
enter
sub
into
lahf
fsubl
lods
cmp
adc
mov
decl
mov
idivb
fisubrl
rolb
fsubrp
sti
fildll
dec
into
stc
es
add
int
mov
adc
outsl
std
lcall
adc
jmp
lea
mov
push
lcall
daa
pushl
pop
mov
adc
push
xchg
aam
push
jp
mov
fwait
jecxz
ret
ljmp
cmp
add
sbb
xchg
add
jmp
mov
rcll
inc
push
dec
loopne
clc
cmpb
jns
inc
dec
repz
push
icebp
jmp
add
call
decl
inc
rcll
fsts
pop
xor
add
aaa
clc
jle
lcall
dec
mov
jae
aaa
popa
sbb
sub
pushl
rolb
mov
jno
add
sbb
adc
mov
mov
jo
cmpsb
call
ljmp
xor
outsl
loop
push
pop
icebp
clc
dec
push
loope
sub
xchg
jbe
scas
pushf
push
das
hlt
push
lods
test
cmc
push
adc
pushl
into
insb
repz
add
addr16
mov
test
push
sub
and
popa
sub
lcall
push
push
xchg
cmpsb
mov
icebp
jecxz
mov
jg
fimuls
push
pop
fisubrs
pop
mov
sub
dec
cmp
fdivrl
dec
xchg
lods
mov
jmp
inc
test
sti
call
or
dec
shlb
pop
cmp
sbb
xor
and
sbb
jg
jecxz
pushl
lods
xchg
cmp
test
sbb
daa
jae
mov
ljmp
mov
add
sbb
fisttpl
loope
and
inc
fimuls
jae
in
sbb
rcll
aam
sbb
inc
push
ret
or
shlb
jb
cli
ja
mov
jg
out
inc
test
es
xchg
mov
mov
inc
mov
aaa
mov
je
lcall
inc
pushf
push
sahf
and
stos
pop
xchg
shll
xchg
stc
out
add
mov
cmp
fwait
outsb
inc
sbb
ljmp
dec
or
inc
movsl
std
xchg
mov
jno
jecxz
jae
popf
mov
pushl
lret
faddp
stos
test
inc
jl
aas
hlt
xor
imul
jne
mov
test
aad
aam
push
clc
mov
cmp
sti
mov
out
jg
and
adc
dec
rcrb
aas
loop
pushf
add
icebp
enter
lods
jg
pushl
stos
pop
xor
mov
cmp
loope
ss
jg
out
xor
iret
lods
fnstcw
aaa
fadd
es
ljmp
in
jmp
and
and
ss
fsts
dec
dec
cmc
rolb
decl
insl
sbb
sub
push
pushf
cmp
sub
es
push
pop
clc
lcall
sbb
out
xor
cltd
adc
mov
jno
adc
pushf
xchg
sbb
outsl
mov
clc
out
inc
ljmp
in
push
daa
fsubp
stos
adc
repnz
adc
or
clc
fbstp
aas
cld
in
add
inc
sbb
enter
test
lret
aaa
ds
pop
fsubrp
mov
cmc
mov
imul
loope
and
aam
scas
movsl
call
movsl
fdivs
mov
into
mov
loope
sub
pop
dec
pop
xor
int
stos
rorb
dec
movsl
pop
fsubrp
push
jl
dec
pop
xchg
cmpsl
mov
cmpsl
add
lds
jns
mov
mov
mov
test
inc
je
xor
pop
cld
pushl
dec
or
stos
test
mov
mov
mov
test
sbb
cli
fcmovbe
das
lret
push
push
call
outsb
inc
cs
es
add
sarl
lcall
pop
jg
cmp
xor
adc
jecxz
ljmp
std
mov
pop
lds
mov
aas
cmp
aad
mov
fwait
cmpsl
ljmp
cltd
movsl
xor
jp
andb
ret
scas
sub
add
jmp
and
mov
into
lods
xor
and
xlat
lret
pop
pop
push
adc
jns
dec
push
dec
les
loope
ljmp
in
sti
mov
cmp
sub
andb
imul
out
add
cmp
call
je
cmp
imul
fistps
push
mov
fcmovnu
push
ljmp
dec
enter
dec
pop
movsl
jnp
nop
mov
xchg
push
inc
outsl
popa
bound
ljmp
hlt
push
or
mov
xchg
mov
imul
lcall
rcr
mov
mov
in
mov
xchg
loop
outsl
in
mov
ret
test
call
lret
fidivrs
add
pop
inc
stc
mov
notb
daa
jg
jl
les
scas
xchg
and
sub
cmpsb
push
inc
iret
inc
inc
std
add
aam
iret
cmp
call
clc
in
cmp
popa
xlat
and
push
mov
adc
adc
push
stos
or
sahf
stos
cltd
push
and
rcrl
das
lock
sarb
or
push
or
shrb
cmp
lds
ljmp
fadd
xchg
xor
or
std
lret
ljmp
push
or
add
mov
test
scas
mov
and
cmc
call
pop
scas
cmp
into
sub
add
mov
das
shr
jns
aaa
mov
mov
ror
dec
cmp
mov
pushl
ljmp
out
cmp
push
call
and
dec
sbb
call
aaa
lret
mov
inc
insl
push
decl
repz
push
lods
out
jmp
cmp
ljmp
add
mov
ja
insl
lea
roll
arpl
movsb
aaa
lea
add
jbe
sbb
test
icebp
pop
lret
lcall
stc
pushl
jge
cmp
mov
mov
xor
push
pop
adc
iret
jge
ljmp
dec
iret
lcall
inc
ss
out
out
push
nop
jecxz
mov
fimuls
scas
in
adc
pop
lds
lcall
lcall
mov
and
fcoms
hlt
mov
ret
inc
inc
pop
rcrb
mov
enter
stos
jg
cwtl
pop
in
push
xchg
and
lds
jl
fnstsw
sbb
or
pushf
push
ds
popa
shlb
inc
repnz
scas
xchg
sbb
cmp
test
inc
enter
cs
add
adcl
in
movsb
jg
call
mul
cmp
sbb
and
cmp
aam
and
inc
or
in
push
ret
ret
inc
cmpsl
stos
and
lods
xchg
jle
repnz
inc
stos
pop
call
mov
mov
outsb
dec
add
pop
call
or
jnp
int3
push
adc
arpl
lcall
mov
push
mov
and
shl
push
pop
jne
or
sti
mov
decl
sbb
aad
fmul
fstpl
sahf
enter
xchg
dec
js
push
hlt
sub
call
jp
inc
fisttpl
outsb
inc
and
ljmp
ljmp
dec
lock
xchg
mov
outsl
hlt
mov
jmp
jb
xchg
stos
add
ljmp
or
dec
jae
ss
sti
loope
imul
icebp
xchg
jns
mov
call
cwtl
sbb
stc
jge
dec
jle
sub
push
dec
and
ljmp
cld
cmp
sarb
ljmp
rorl
mov
pop
and
fucomip
ss
sti
jge
add
imul
sar
ljmp
pop
sbb
mov
jo
push
test
test
incl
lret
cmp
sub
jmp
int3
shlb
stc
jle
orl
rclb
mov
jg
mov
or
push
cmp
add
inc
iret
or
pop
in
mov
inc
cmp
adc
mov
mov
xlat
inc
out
cmp
sub
pop
daa
and
pop
mov
cli
clc
ret
les
adc
sub
sbb
mov
xchg
pop
sub
inc
push
call
adc
ljmp
jmp
mov
mov
push
sub
nop
cs
cwtl
cltd
adc
push
addr16
xchg
sub
jg
into
jmp
jne
fwait
sub
aam
ljmp
stos
fisttps
xchg
mov
pushf
jb
push
sbb
dec
xchg
mov
jae
aaa
iret
ljmp
std
incl
mov
and
adc
cmpsl
movsb
dec
mov
out
sub
cld
decl
cmp
xchg
lret
add
inc
mov
ds
mov
mov
dec
push
test
sahf
xor
xor
mov
cmp
ljmp
ljmp
leave
mov
shrl
negl
fwait
pop
out
lock
aas
mov
fbstp
push
mov
data16
aas
xchg
lds
addr16
popa
sbb
std
test
loop
outsb
and
into
jns
call
incb
adc
cmp
adc
xchg
jmp
push
lods
inc
xchg
rorl
cmp
pop
cmp
sbb
ljmp
cld
mov
pop
in
fs
push
xlat
sub
jo
adc
xchg
cmc
hlt
cmpsb
popa
scas
adc
cmp
ljmp
sbb
push
lret
pusha
mov
xchg
aad
xor
roll
jl
imul
push
cli
movsl
sub
mov
cli
sub
out
out
jmp
push
lcall
pushl
mov
pop
out
andl
jb
out
dec
gs
cld
dec
cld
mov
jecxz
dec
outsl
iret
incl
sbb
pushl
pop
scas
in
ffreep
push
jp
jecxz
jmp
orb
and
mov
mov
loopne
cmpsb
loope
pop
add
push
dec
inc
outsl
aad
pushl
aad
mov
or
iret
jg
xchg
pop
sbb
enter
call
xor
mov
adc
pop
stos
mov
popa
jne
dec
aad
mov
dec
mov
pop
andl
mov
aas
incl
inc
pusha
jl
test
xchg
fisttpll
jg
pop
popf
mov
repz
mov
xor
test
mov
loopne
call
inc
jae
push
mov
adc
jmp
pop
loop
decb
das
inc
rorl
inc
std
push
aam
cmc
das
hlt
lcall
add
pop
lcall
mov
out
loope
movsl
outsl
hlt
cmc
pop
test
jl
fdivs
cld
ljmp
cmc
es
and
popf
shll
xchg
das
call
daa
inc
data16
movsl
lcall
or
imul
adc
popf
dec
test
jp
mov
and
jp
and
sub
sbb
or
sub
xchg
cmpsb
add
lcall
jo
jo
es
popf
jb
gs
jae
and
pushf
and
jg
mov
xor
enter
js
push
testl
sub
clc
lds
cwtl
push
sub
imul
adc
cmp
xor
push
jp
mov
in
test
cld
pop
xor
mov
sub
or
mov
mov
xchg
in
fnsave
imul
mov
mov
mov
mov
sub
push
rcrl
lock
call
loop
ret
cld
mov
pop
mov
aas
lds
outsl
lret
push
inc
xlat
sbb
add
mov
lret
mov
mov
mov
leave
dec
push
pushf
imul
out
lcall
cld
dec
enter
lahf
sbb
inc
xchg
imul
inc
fmuls
decl
pushf
jmp
sbb
dec
out
lret
addr16
stos
jmp
or
mov
adc
pop
sub
sbb
lahf
lock
popa
out
cwtl
mov
incl
mov
rcr
loop
mov
mov
daa
popa
stc
ja
mov
ja
jns
mov
rcll
das
clc
xor
xchg
loope
xchg
scas
in
pop
call
xor
mov
xor
mov
popf
ljmp
scas
cwtl
push
arpl
adc
js
adc
cmp
in
in
mov
clc
dec
xor
rorb
xor
icebp
mov
dec
incl
push
cmp
mov
mov
dec
dec
mov
add
outsl
cmc
xchg
mov
int3
xchg
xorb
clc
adc
jb
hlt
dec
sub
xor
and
mov
daa
lods
or
bnd
or
incl
pop
cmpsl
or
shll
lds
arpl
fnstcw
mov
cmc
add
sbb
lea
enter
pop
mov
in
mov
mov
mov
pop
inc
aam
lock
test
cltd
ljmp
and
shll
call
loopne
insb
ret
xchg
jl
fwait
gs
mov
mov
lods
sbb
std
pusha
aas
sub
cli
repz
lret
pusha
scas
jmp
pop
ds
jbe
addr16
dec
xchg
inc
xchg
pop
test
xor
loope
decl
les
jmp
mov
and
js
xor
jecxz
pushl
lea
cmp
sbb
rolb
aas
adc
andl
loope
test
incl
out
into
mov
testl
inc
bound
dec
xlat
push
pop
aaa
insb
decl
jmp
xor
aad
push
ret
sarl
xor
clc
incl
adc
or
mov
rcrl
das
mov
pop
popa
jge
xchg
add
sbb
push
push
loop
lock
sub
pop
mov
in
mov
mov
inc
in
cli
lods
mov
push
mov
push
call
or
test
lcall
ljmp
test
add
out
inc
or
pop
das
data16
or
jo
mov
insl
cmp
and
xchg
dec
and
xor
test
out
daa
sbb
add
adc
mov
inc
inc
jo
jg
xor
cmp
int
pop
cmpsl
repnz
mov
aad
add
incl
das
std
push
sahf
jne
jmp
rorb
test
xor
jg
call
pop
arpl
pop
mov
dec
out
lret
push
pushl
addl
xchg
movsb
aam
dec
inc
imul
test
orl
shll
pop
sbb
pop
into
mov
xchg
xor
dec
incl
out
imul
andb
jno
sbb
xor
rcrl
cld
in
cmc
imul
dec
jecxz
xorb
cmc
arpl
dec
das
push
stc
andb
out
pop
jbe
cmp
jns
and
idiv
stos
cmp
push
sub
aas
fstps
insl
loopne
mov
aad
movsl
incb
cmc
enter
mov
xchg
fcomip
outsl
pop
loop
mov
adc
sub
aas
adc
xorb
call
jnp
mov
sbb
shll
push
push
cmpsb
cmp
push
and
rclb
xchg
jecxz
dec
adc
xchg
fs
dec
cld
flds
cld
daa
sahf
lods
fwait
int3
movsb
cmp
add
jne
mov
inc
fcoms
jae
inc
scas
xchg
pushf
cmpsl
add
or
or
fmulp
push
lock
mov
dec
sbb
adc
sub
frstor
or
lcall
aam
sub
aaa
mov
or
push
inc
adc
push
mov
out
dec
push
mov
jle
insl
pop
movsl
inc
test
xor
xor
add
jl
repz
jmp
stos
dec
mov
lcall
ds
or
std
test
sti
pop
push
mov
jl
call
lret
cli
sbb
inc
ror
cs
dec
outsl
xor
cmp
push
mov
int
add
push
lods
or
fwait
cli
inc
pop
inc
shll
pop
inc
inc
or
add
mov
xchg
fisubrs
fsts
ret
pop
jl
cli
decl
mov
push
xchg
nop
ds
add
mov
pushl
popa
sti
add
pop
ljmp
ret
test
mov
std
push
scas
inc
bswap
adc
push
jae
imul
xchg
pop
fmul
xor
mov
xchg
lcall
orl
xlat
sbb
dec
sahf
inc
fidivs
outsl
js
dec
push
je
or
jnp
jg
pop
dec
leave
fucomip
push
cli
add
ljmp
fs
enter
std
ljmp
hlt
push
ficomps
xchg
in
pop
outsl
repnz
lds
sbb
jmp
jecxz
push
es
or
test
mov
fwait
cmp
jge
cmp
jl
pusha
cwtl
jg
pushl
inc
cmpsl
sbb
sub
in
loope
inc
shrb
lcall
mov
jns
sub
testl
hlt
lcall
lea
sub
ret
out
js,pt
mov
cli
jg
and
xor
push
xchg
and
iret
pushl
adc
insl
into
add
jp
xchg
pop
pop
xchg
out
fwait
rsm
call
xchg
and
aad
and
ja
popf
lods
jne
push
mov
adc
pop
call
mov
add
outsl
xchg
sbb
movsl
xchg
decl
decl
popa
add
ss
sti
daa
jo
cmc
or
add
inc
cmp
xlat
mov
xor
out
and
and
scas
pop
imul
sarl
push
popf
sub
jmp
rorb
xchg
std
aaa
jmp
cld
ss
xchg
je
popl
lahf
cltd
mov
bound
pop
lcall
cli
insl
sbb
lret
inc
aaa
sbb
mov
pop
aam
sbb
xchg
or
xor
cmp
scas
inc
sub
loop
cmpsb
push
cmp
pop
jno
lods
je
jp
movsb
sub
lahf
incl
add
stos
je
xchg
pusha
jecxz
and
mov
out
cs
pusha
push
pushf
mov
stos
out
lahf
ds
mov
mov
lds
andl
outsl
cld
jg
hlt
cmp
inc
dec
xchg
fs
and
xlat
sbb
jmp
decl
lret
in
xor
jb
xor
je
jns
and
hlt
mov
loop
mov
in
sub
inc
cld
and
dec
jbe
incl
in
pop
add
shrl
leave
nop
adc
xchg
lea
int3
decb
jmp
jmp
sahf
cmp
nop
pop
stos
sbb
mul
mov
ret
mov
setnp
addr16
js
call
pop
lods
dec
pop
stos
xor
mov
jb
mov
dec
dec
jle
cld
lcall
and
jle
push
mov
add
or
call
leave
xchg
or
cmc
xchg
sbb
sub
push
mov
add
pinsrw
ds
fmull
mov
clc
imul
jo
fstp
inc
mov
dec
cld
movsl
jg
xchg
clc
mov
fistpl
cltd
dec
jne
push
xor
fwait
jbe
decl
or
cmpsb
adc
xchg
jno
fidivl
out
sbb
jle
arpl
pushl
xchg
push
aam
sbb
int
cmpl
jae
jle
sub
mov
push
sbbl
jbe
jne
add
nop
pop
cld
fisubl
pop
dec
sar
and
aam
xor
or
pushl
and
xor
imul
fimuls
cmp
push
cmp
decl
cmc
dec
pushf
mov
clc
cwtl
add
inc
mov
mov
fdivrl
test
nop
fistpl
fs
xchg
fcoml
sbb
ljmp
mov
xchg
jle
int
shlb
ret
lahf
movsl
jo
movb
nop
inc
push
push
adc
sub
mov
add
jno
decl
call
mov
cld
dec
iretw
cs
mov
xchg
mov
push
mov
push
or
repz
lret
mov
adc
or
scas
cmp
das
cmc
mov
mov
jno
pop
mov
and
push
sbb
clc
and
adc
test
cmp
sbb
outsl
push
sub
jge
push
mov
ljmp
sub
jl
std
adc
cmp
int3
ret
add
cli
outsl
cmc
or
xor
jo
push
ds
add
xchg
mov
mov
loopne
dec
push
and
and
and
jne
aaa
pushl
sbb
push
test
cmp
ret
sahf
xor
sti
pop
mov
sub
dec
jno
and
pop
fsubrp
add
sub
mov
stos
inc
mov
cmpsb
fdivrs
xchg
or
rorb
add
pushl
call
sti
add
popl
mov
addb
inc
inc
lock
xor
fsubs
sti
mov
sahf
xorb
loopne
jnp
out
mov
test
pop
inc
pop
mov
dec
ljmp
jge
popa
ret
or
and
and
arpl
xchg
std
decl
cmp
xchg
clc
fstpt
xor
push
dec
cld
out
add
aaa
pop
sub
xor
icebp
pop
push
lahf
sahf
ret
sbb
inc
mov
xchg
loopne
popf
dec
push
or
mov
lea
push
jmp
imul
adc
out
add
rcll
pushf
jge
ljmp
fmuls
pop
sbb
dec
dec
orl
or
mov
dec
mov
test
jne
hlt
and
lods
stos
lret
lods
cltd
dec
in
incl
in
inc
das
cmp
jl
inc
rorb
lock
ret
addr16
rcl
adc
decl
xchg
add
lds
push
and
movsb
fldl
imul
ja
adc
xchg
add
testl
addr16
incl
jo
inc
aad
out
in
jp
pop
int3
jmp
decl
push
fs
pusha
fs
jnp
cmp
and
data16
scas
lret
dec
sub
lcall
scas
cmc
inc
jae
imul
push
pop
jl
xchg
mov
popf
sub
lock
lcall
ljmp
add
ljmp
mov
in
cli
mov
repnz
sahf
mov
pushl
sbb
orl
das
push
inc
jmp
inc
jo
mov
test
in
mov
jl
out
mov
xor
ljmp
outsl
icebp
inc
xor
subb
push
in
adcl
inc
inc
lahf
or
mul
movsl
aaa
test
xchg
lods
dec
jne
jo
xor
mov
sub
push
xchg
jno
inc
push
fstps
dec
arpl
lcall
jmp
dec
mov
fisttpl
push
pop
add
pushl
adc
cmpl
push
inc
bound
jge
push
cli
outsl
call
or
mov
push
or
sbb
push
mov
xchg
ffreep
push
cmpsl
js
test
dec
imul
jmp
call
ficoml
xchg
shll
dec
popa
test
mov
lods
inc
loopne
xor
lret
das
fnsave
and
dec
repz
mov
fildl
push
rcl
push
adc
outsl
mov
roll
mov
nop
outsb
xor
or
ss
and
incl
sti
mov
jge
sub
jae
add
loop
lods
ds
push
mov
jo
pop
in
mov
incl
fnsetpm(287
cmp
or
divl
jne,pn
incl
push
mov
push
dec
icebp
repnz
incl
push
gs
add
mov
mov
xor
push
pop
xchg
scas
daa
or
incl
sub
sub
lock
push
sub
inc
loopne
jg
sbb
sub
and
mov
stc
mov
insb
out
test
ljmp
out
push
cltd
mov
daa
pop
inc
push
notl
fcoml
or
xor
xchg
ljmp
loope
ret
jbe
loope
xchg
fisttpll
rcrb
jb
jg
lcall
sbb
mov
add
gs
pop
cmp
in
jl
decl
push
mov
ja
aad
or
xor
mov
or
or
call
xchg
push
fwait
xchg
js
lea
sbbb
lret
dec
or
arpl
or
sub
in
nop
inc
jmp
and
xor
mov
lret
add
and
fsts
adc
cmp
mov
rcrb
xchg
dec
pop
in
pusha
gs
stos
cli
lds
std
clc
pop
ds
cmp
jmp
jae
ret
pushf
push
pushf
jle
adc
fbstp
aas
fsubl
sti
push
ds
push
xchg
add
jge
lods
jl
mov
lock
sub
call
ss
stos
icebp
lock
clc
or
jae
aas
out
stos
decl
test
arpl
xor
add
sbb
in
adc
jo
call
icebp
push
and
mov
dec
push
stos
pop
insl
test
cmp
xor
call
out
adc
sbb
enter
push
push
lods
and
push
cmp
lcall
popf
leave
sbb
add
add
ret
fldenv
xor
loop
lods
dec
pop
inc
aad
popa
jns
pop
shrb
xchg
lahf
insb
sbbl
out
push
cli
cmpsb
lret
xchg
xchg
leave
jbe
das
cmc
push
daa
pop
cmovbe
xchg
pop
mov
sub
mov
jmp
psubw
adcl
repnz
adc
movsl
sti
mov
mov
fwait
mov
pop
orl
int
xor
test
into
xor
inc
mov
call
out
pop
es
mov
stos
sub
mov
cltd
mov
or
pop
xchg
outsb
mov
push
ss
std
and
inc
mov
pop
pop
ljmp
mov
fnsave
dec
mov
inc
shll
mov
fsubrs
jg
aaa
cmp
test
nop
fistl
mov
jno
shl
dec
es
or
aaa
cli
jle
ja
sti
mov
add
cmpsb
mov
jnp
jne
cmp
ret
sub
dec
push
sbb
mov
lret
lcall
ja
je
int
mov
mov
sub
jbe
nop
shlb
call
mov
aas
gs
mov
adc
lea
cmp
pop
jp
gs
outsl
cmp
mov
lcall
dec
sbb
out
ret
pop
fxch
in
pushl
in
or
jnp
les
or
inc
dec
pop
cmpsl
scas
into
pop
jb
jg
fcompl
dec
cmp
into
cs
test
jl
sbb
add
xor
jg
or
dec
xlat
pop
add
sub
dec
add
sbbb
sub
clc
call
negl
je
xchg
push
cli
rorb
pop
jmp
adc
shlb
enter
test
sbb
pop
call
dec
ret
lea
jno
jl
mov
pop
pop
xchg
clc
arpl
stos
sar
aaa
push
adcb
push
icebp
mov
shll
in
das
mov
mov
push
xor
inc
pop
loope
and
add
imulb
and
mov
jg
inc
out
dec
mov
testl
push
out
lcall
fadd
sbb
es
enter
push
cmp
decl
inc
out
les
ret
xor
xchg
sbb
cwtl
mov
fistps
call
enter
nop
push
mov
int3
test
sub
jp
les
pop
mov
pop
mov
mov
jo,pt
rcrl
sarb
xor
jg
test
sbb
pop
rclb
jecxz
aaa
and
out
mov
data16
jg
incl
cs
lock
loope
nop
cltd
mov
icebp
arpl
mov
pop
ljmp
xor
loopne
cmp
and
clc
xchg
outsb
cld
test
mov
int3
xor
mov
lcall
mov
mov
lock
cmp
ljmp
ficoml
ss
xchg
icebp
out
push
test
xlat
xchg
sbbb
or
cmp
jge
xor
stos
sbb
cli
cmp
clc
aam
or
jmp
popf
negb
call
fucomip
jmp
addl
lret
ljmp
lds
or
cld
mov
filds
xchg
jmp
or
mov
cld
addl
push
incl
jmp
cs
movsl
cmc
out
mov
dec
mov
xchg
adc
xchg
jle
test
lcall
ret
inc
mov
mov
pop
movsl
xor
scas
add
ljmp
adc
int3
cmp
add
in
pop
fadds
sbb
pop
popl
mov
insb
mov
add
fcmovnbe
mov
loopne
dec
mov
int3
mov
mov
iret
bound
sar
jg
nop
pop
xchg
scas
add
cmp
sbb
mov
jmp
jae
or
jle
fstpl
pop
and
pop
cmp
or
test
call
mov
mov
add
add
filds
mov
iret
jge
xchg
jg
mov
and
jmp
rclb
mov
pop
xor
mov
out
incl
insb
mov
add
imul
sbb
stos
xchg
and
pop
in
sub
popf
sbb
ljmp
lock
stc
and
xchg
adc
mov
and
ud0
call
cltd
jne
dec
adc
out
jmp
addw
outsb
and
cmpsb
shlb
inc
decl
mov
int3
daa
roll
jge
enter
jo
loop
sbb
cmpb
cld
jmp
scas
int3
inc
inc
fsubp
xchg
inc
mov
ljmp
testb
test
mov
shll
dec
outsb
repnz
js
stos
xchg
xchg
xchg
fdivl
and
jnp
in
xchg
jbe
lods
push
in
shlb
inc
lea
mov
cwtl
aaa
sbb
pop
xor
call
pushl
xorb
lcall
mov
lcall
push
fucomip
lcall
loope
insl
and
mov
xor
mov
add
push
inc
cmp
daa
add
fmuls
sub
outsl
cmc
mov
jge
pop
stos
cmp
pop
loop
cld
outsl
subl
stc
sarb
sub
mov
lcall
insl
cmpsl
pop
das
xchg
inc
fdivs
xchg
sbb
js
movsb
inc
repz
or
or
imul
jmp
sbb
xchg
jae
loop
decl
sub
pop
dec
lea
leave
xor
pusha
or
lahf
jno
adc
ret
into
add
dec
sub
je
adc
push
in
addb
jo
lcall
xchg
popa
in
imul
es
push
inc
adc
rolb
mov
loop
adc
testb
leave
or
push
mov
pop
push
hlt
jg
jmp
ja
mov
in
negb
push
std
das
les
xor
aad
mov
dec
jge
icebp
out
loopne
fs
fdivp
imul
scas
out
lock
stos
mov
inc
call
ljmp
push
pop
pop
mov
xor
aas
add
js
decl
js
or
lods
ficompl
cmc
clc
ss
xor
call
es
sahf
lods
scas
outsl
fdivrp
call
js
adc
lret
js
fisubs
in
cld
shll
pushf
push
sub
outsl
mov
xor
push
in
mov
sub
movsl
xchg
stos
hlt
pop
es
mov
sbb
into
cli
lcall
dec
pusha
std
cli
add
or
or
outsl
cmc
dec
xlat
out
ss
push
xchg
xchg
cmpsb
inc
add
ja
mov
incl
lods
dec
gs
sub
rcrb
cmc
mov
push
mov
outsl
or
mov
jns
arpl
sub
push
cld
fdivl
andl
pop
popf
aad
incl
pop
fwait
and
xchg
and
sbb
lret
mov
sub
mov
pop
xchg
mov
outsl
arpl
int3
shl
popa
mov
daa
jg
jmp
jo
or
mov
and
adc
arpl
mov
fidivrl
test
cmp
inc
bound
inc
jae
decl
data16
mov
ficompl
subb
and
imul
int
out
jmp
cmp
mov
pop
int3
inc
adc
jmp
insb
mov
gs
mov
test
in
jns
ljmp
hlt
lahf
xor
pop
add
mov
and
sub
or
out
or
jmp
fimull
cmpb
mov
pop
cmp
inc
xchg
xorl
js
daa
dec
movsl
mov
and
icebp
pop
mov
popa
adc
ss
push
and
in
jmp
lcall
jo
sub
inc
dec
pop
shl
pop
sub
test
mov
ds
lret
call
mov
mull
les
or
popf
push
mov
incl
push
das
bound
or
inc
lret
dec
mov
dec
xlat
dec
push
iret
ss
pushf
pop
insl
jnp
das
lock
call
in
xlat
cmp
sbb
test
pop
adc
pop
inc
pop
cld
ljmp
scas
mov
mov
pop
xchg
xchg
cmp
fisubl
cli
call
jbe
sahf
push
push
or
xchg
push
jg
sbb
pusha
ss
xor
sub
test
mov
movsl
iret
es
push
xchg
xlat
les
and
push
or
and
and
push
sub
push
pusha
adc
daa
mov
test
cmp
call
shlb
jb
je
shlb
daa
repz
push
sub
pushf
jl
incl
jp
mov
out
push
ret
jmp
psadbw
dec
jle
dec
fwait
mov
sar
adc
loop
jle
dec
es
or
jno
push
xor
cs
jg
incl
jecxz
cmp
xor
dec
mov
cmpsb
hlt
out
fs
icebp
pushl
scas
cmp
jo
ja
pop
arpl
mov
js
lcall
mov
pop
jno
daa
aaa
andb
incl
adc
push
xlat
test
orb
lds
fcoms
adcl
sub
popf
push
cmp
subl
movsb
ret
fisttps
sbb
ljmp
or
fsubs
repnz
push
sub
inc
xchg
outsl
mov
incl
add
push
movsb
pop
jns
lcall
jne
loope
test
cmc
leave
cmp
movsl
incl
push
sub
cmpl
dec
jmp
push
test
sub
xchg
out
inc
cmpsb
pop
jl
xchg
xchg
imul
test
xchg
mov
dec
mov
mov
push
scas
inc
jmp
shll
fidivs
mov
xchg
xor
push
lods
cld
decl
cwtl
pop
sub
adc
cmp
mov
push
jmp
iret
mov
sbbb
lcall
ss
cmp
dec
das
sbb
push
and
into
or
scas
dec
fwait
jmp
call
in
aad
stc
call
sub
xchg
xor
paddq
and
jg
rolb
cmpsb
mov
mov
ret
inc
dec
jbe
sub
or
jle
fsubs
push
cmpl
arpl
in
enter
fcoms
cs
jmp
sti
xlat
or
xchg
pop
fiaddl
inc
sbb
mov
jne,pt
incl
xor
jne
jne
lcall
sbb
jl
mov
pushf
out
cmp
dec
cld
mov
out
and
pop
mov
popl
pop
lods
mov
das
jge
inc
xchg
js
mov
inc
sub
push
loop
push
pushl
cmpsl
popa
mov
pop
sbbl
or
sub
mov
push
xor
inc
and
sbb
mov
push
mov
push
add
push
call
scas
cmp
clc
push
cmp
pop
loopne
mov
mov
push
rclb
ds
int
shlb
push
ljmp
daa
mov
cmc
adc
sbb
and
jnp
cmp
mov
push
push
mov
decl
std
adc
cmp
sarb
and
loopne
fstp
popa
inc
call
ss
xor
aam
fbld
push
jmp
lods
sahf
hlt
xchg
ljmp
pop
push
cmpsl
lcall
shl
mov
cwtl
fsubrp
mov
test
jmp
imul
push
std
adc
adc
adc
xchg
test
adc
lcall
popf
jge
cmp
popf
add
sub
lret
push
sbbl
jnp
call
cmpsb
lea
add
clc
sbb
dec
push
xchg
jg
or
addr16
push
push
lds
sbb
stos
das
lock
xor
je
push
aam
mov
pushl
inc
notb
push
mov
sub
add
sbb
lods
mov
adc
das
xor
clc
fwait
mov
or
test
fildll
lds
cmp
pop
icebp
dec
adc
fisubrs
sbb
dec
mov
jl
ljmp
insb
sub
mov
imul
cld
mov
sbb
inc
push
mov
cld
call
inc
push
ret
xorl
xchg
xchg
movsl
outsb
imul
in
jle
loope
lock
pop
jae
imul
ds
sbb
pop
xchg
lods
push
ljmp
jmp
lea
push
cmp
lcall
jnp
xor
sub
outsb
scas
push
fsubrl
sbb
call
int
adc
das
lcall
stc
stos
arpl
pushf
mov
xchg
add
popa
dec
ss
sub
cmp
lret
stc
cmc
dec
outsl
cld
lcall
scas
ret
clc
mov
jo
leave
in
orl
cli
lret
nop
into
sub
jg
xor
adcb
push
add
aaa
push
ja
mov
into
cld
push
jns
or
mov
outsl
pop
mov
dec
stos
mov
sub
jno
sbb
lcall
popa
aam
pop
inc
cmp
push
jb
sub
notl
rolb
jbe
incl
mov
lea
push
aas
xchg
repz
dec
filds
or
jmp
mov
add
sbb
jnp
sbb
test
test
or
mov
jg
xchg
push
push
out
mov
je
mov
xchg
and
fidivs
loopne
push
xor
pop
ljmp
loopne
lret
mov
lret
inc
jmp
out
jl
xchg
loope
mov
lcall
sbbl
insb
sahf
test
pop
mov
shll
mov
sub
call
decb
xchg
mov
fs
xor
repz
jbe
xchg
sbb
mov
imul
in
sbb
add
jg
lcall
xor
cmp
sbb
hlt
dec
sbb
stos
cmp
push
jge
inc
mov
xor
cmp
decb
inc
sub
adc
les
push
sar
call
das
repz
dec
pop
and
stc
jno
jp
add
mov
mov
aam
jp
enter
jle
js
clc
or
mov
sbb
cmp
insb
and
cmp
loopne
nop
insb
push
xor
mov
inc
movsl
mov
sbb
ljmp
cmpsb
cld
sbb
xchg
mov
gs
in
stos
adc
mov
js
aam
push
add
cmp
cli
jmp
movsl
lock
lcall
daa
les
je
outsl
icebp
mov
call
lahf
inc
test
and
inc
in
cmpsb
sti
inc
ljmp
nop
lea
push
pusha
test
mov
scas
jmp
les
pushf
add
cmp
dec
push
mov
mov
pop
sbb
mov
inc
test
mov
mov
mov
pop
aad
sahf
mov
clc
inc
imull
or
pop
lods
sbb
cs
outsb
cmpsb
push
fdivp
outsl
in
xchg
ljmp
lods
mov
aaa
push
mov
sbb
mov
or
dec
pop
fbstp
add
pop
loope
mov
pop
dec
mov
push
mov
arpl
scas
test
cli
fisttpll
fsubs
sub
pop
dec
aam
inc
jnp
sbb
incb
imul
inc
loopne
cmp
cmpsl
shll
out
dec
jp
dec
pop
pop
cli
inc
mov
test
mov
and
ljmp
sbb
out
mov
ret
dec
push
add
cmp
mov
mov
fs
dec
jle
adc
jbe
fsts
mov
repnz
jl
xor
inc
fcos
mov
inc
out
push
xchg
adc
popa
test
arpl
jbe
jbe
xor
incl
push
sub
jnp
das
push
loopne
mov
fucomip
repnz
orl
adc
sarl
cmc
call
push
xchg
sub
jbe
mov
xorl
test
push
sub
rolb
and
jg
aas
cmp
out
sbb
mov
outsl
imul
jl
mov
leave
mov
cld
call
xor
mov
fs
sbb
fs
out
mov
popa
popl
aaa
and
call
xchg
fwait
push
adc
jns
in
pop
jecxz
lock
xor
dec
insl
and
jge
je
and
jg
stc
iret
sub
clc
and
jg
stos
dec
aas
stos
popf
jle
jae
lahf
pop
clc
jmp
int
inc
jb
push
js
pop
dec
push
out
mov
mov
imul
pushl
std
sti
stc
dec
loop
sahf
fsubr
cs
xchg
and
cmpl
mov
decl
push
add
aad
incb
testb
mov
cmpsl
lcall
adc
scas
pop
jl
sbb
xchg
dec
bound
pop
cld
mov
pop
ret
sbb
das
cvtps2pd
test
rcll
push
push
add
lcall
cs
mov
push
adc
push
cmp
arpl
std
sbb
xlat
lret
cmc
call
fwait
xor
or
xchg
push
sub
jb
out
xchg
push
clc
or
mov
lods
sub
shl
hlt
adc
shll
push
jbe
jg
or
shlb
inc
pop
mov
mov
xlat
pop
mov
jecxz
outsl
mov
dec
sub
mov
inc
push
adc
push
data16
push
and
daa
push
push
cmpsb
or
dec
jae
mov
sbb
mov
mov
clc
mov
stos
sbb
inc
jmp
sub
lret
cmp
fs
sub
int
pop
push
mov
jb
mov
xchg
push
dec
or
ljmp
out
loope
in
cwtl
movsb
lret
push
ss
push
gs
mov
jns
sbb
call
stos
sbb
mov
push
ljmp
into
cmp
mov
lds
lds
or
xor
jmp
jno
lcall
sub
push
ja
sbb
mov
add
mov
mov
dec
mov
xchg
xchg
aaa
jmp
addb
adc
xchg
or
cli
mov
loop
lret
and
sbb
stc
notl
or
loopne
popa
mov
mov
addr16
mov
repnz
or
nop
fiaddl
jmp
incl
loope
lods
repnz
imul
pop
cmpsl
xor
inc
jo
sti
decl
in
lds
repz
jo
or
lods
enter
add
dec
add
add
andb
incl
jae
cmp
ret
fwait
rcrb
dec
outsl
and
lods
sub
cmc
push
lret
aas
sbb
fildll
repz
mov
mov
inc
int3
icebp
pushl
sbb
pop
icebp
mov
xchg
add
xchg
jb
stc
pop
mov
sarl
cmp
mov
daa
and
loop
and
mov
ljmp
adc
stc
sti
sub
push
into
mov
repz
lcall
rorb
cmpsb
mov
mov
mov
and
push
jns
ljmp
cld
ja
xor
push
lods
lods
insb
shlb
xor
loope
pop
sub
mov
aam
rorl
push
adc
stc
ja
aas
xchg
push
mov
cmp
sub
int
ljmp
dec
addr16
or
push
sub
inc
iret
outsb
xchg
mov
sbb
fistpll
add
clc
inc
jecxz
push
cltd
fiadds
or
negl
jg
in
push
pop
pushf
sbb
add
jg
push
cwtl
xor
xor
push
call
fwait
pop
nop
or
icebp
pop
or
das
cld
pushl
cwtl
dec
or
inc
cli
cmp
jbe
sub
push
mov
ljmp
fiadds
mov
mov
js
pop
adc
roll
pop
pushf
hlt
mov
and
clc
in
lcall
daa
rcrl
ljmp
lock
or
out
push
sbb
sahf
inc
mov
or
popa
outsl
cmc
fcmovne
jae
sub
mov
stc
in
pop
out
dec
in
sbb
xchg
fwait
outsl
hlt
inc
mov
xchg
mov
adc
es
sbb
in
sar
call
cmpb
dec
das
xchg
or
sub
push
push
adc
pop
lret
rcl
fdivrl
jmp
xchg
mov
dec
inc
jp
xor
aam
push
out
rcll
dec
ss
test
stos
cld
jmp
pusha
rolb
jbe
jnp
lock
add
jmp
mull
in
and
jo,pn
das
addb
jg
ljmp
dec
cmpsl
jnp
lods
or
inc
and
jge
negl
cmc
push
jg
clc
jne
mov
test
andl
add
lcall
call
ss
inc
aas
xor
lock
mov
scas
je
sbb
pop
std
fstpt
pop
stos
inc
fcoml
sbb
stc
loopne
test
push
inc
repnz
mov
adc
out
insb
mov
sbb
mov
ljmp
nop
mov
test
mov
and
push
jbe
data16
dec
dec
aam
sub
dec
add
subb
mov
mov
jg
mov
push
mov
mov
adc
test
rcrl
dec
sub
scas
jecxz
popa
xor
test
mov
or
mov
mov
mov
lahf
lea
orl
mov
sbb
lods
sub
int3
lods
xchg
adc
or
add
decl
lea
lahf
js
jle
out
mov
mov
ss
sub
inc
xchg
cmp
decl
jae
test
push
sub
xchg
inc
into
push
xor
adc
jg
cli
arpl
xor
sbb
add
mov
daa
mov
sub
incb
subl
pop
rorl
stos
xor
cmpl
cmc
push
loop
out
add
stos
pop
sbb
hlt
call
jbe
sbb
aas
pop
lods
pop
out
jbe
cmpsb
push
mov
in
int
sub
and
ljmp
mov
outsb
mov
icebp
imul
lods
inc
andl
lcall
mov
xchg
mov
xchg
cmc
movsb
cmovbe
cmc
and
iret
das
decl
and
jns
mov
cs
lcall
outsb
xor
jmp
or
ljmp
mov
mov
das
popf
cld
sub
call
pop
rcrl
push
mov
adc
in
call
xor
enter
orb
stc
pop
out
sti
dec
popa
std
repz
decl
or
xchg
cmp
sub
int3
add
dec
sbb
push
orl
xchg
mov
mov
sbb
mov
cld
cmp
pop
out
ret
sbb
repz
scas
xor
loope
xorl
out
push
push
push
jl
daa
inc
mov
fwait
icebp
int
outsb
mov
mov
jg
add
scas
lcall
ja
dec
jbe
cltd
or
mov
jge
jge
mov
shl
loopne
loope
dec
rol
adc
lods
jo
xor
or
decl
xchg
daa
sbb
sub
sbb
jns
enter
jecxz
jge
fcomps
mov
imul
dec
cmpsb
sub
loope
jge
jg
jmp
dec
lock
in
push
shll
aas
out
fs
repnz
sbb
mov
add
or
incl
flds
sbb
js
and
ljmp
pop
sub
mov
jnp
lret
aad
subl
lcall
mov
push
xchg
repnz
mov
xchg
jnp
push
ljmp
jmp
in
sbb
push
test
jecxz,pt
outsl
aaa
pop
sti
insb
sub
call
call
mov
loopne
cmc
cmpsl
imul
insl
movsb
in
fadds
jne
decl
stos
jl
add
int
pop
inc
and
rolb
push
ljmp
jl
add
push
add
mov
mov
ss
ljmp
adcl
jb
mov
jne
bound
cltd
lea
movsl
ss
mov
testl
movsb
mov
stos
mov
call
insl
imul
xchg
inc
call
mov
and
scas
mov
inc
sarl
mov
call
mov
insl
push
jp
in
jb
jle
pop
xor
icebp
ss
jmp
xor
jo
cli
xlat
sub
sub
cli
inc
ficoms
subb
inc
call
movsb
xlat
or
fidivl
fsubl
jecxz
shr
or
adc
xor
pop
cli
call
xchg
fdivrl
xor
outsl
mov
scas
fs
cmc
xor
je
stc
mov
cwtl
loop
in
pusha
or
aad
inc
inc
inc
shl
push
mov
ss
xlat
xchg
sub
mov
jnp
mov
je
and
mov
mov
test
cmp
pop
inc
xchg
test
push
inc
mov
test
dec
add
inc
mov
filds
push
push
sbb
ljmp
or
sub
pop
fwait
push
mov
iret
lods
mov
fucomp
xlat
mov
mov
popl
aam
push
xchg
adc
cmp
scas
mov
movsb
loopne
lcall
rolb
roll
les
dec
sbb
push
loop
pushf
add
pop
inc
lcall
jle
sahf
adc
lret
or
mov
rcll
int3
push
add
int3
adc
je
pop
fcompl
call
mov
dec
mov
loopne
scas
sarl
ljmp
call
das
jno
cmp
aam
mov
jle
cli
incl
sub
jbe
sub
adc
loopne
cmc
mov
outsl
pop
push
and
cmp
out
jecxz
mov
ret
lret
lcall
inc
add
xchg
push
ret
cwtl
js
lahf
mov
aaa
cli
mov
call
imul
decl
pop
cmpsl
push
scas
mov
ja
icebp
mov
mov
shll
pushf
mov
pushl
mov
cmpsl
incl
es
movsl
jmp
cs
lcall
mulps
cld
dec
mov
enter
mov
cld
dec
lock
loop
icebp
sub
lcall
call
push
popa
pop
clc
cmpsb
push
lret
mov
out
push
cmpsl
mov
jg
jp
sbb
mov
or
pop
cmp
xor
sub
shrl
ljmp
mul
test
sub
in
cwtl
rcrl
dec
imul
cmp
and
cmp
call
or
inc
xchg
ja
jl
add
add
lcall
hlt
sti
pushf
xor
leave
rcr
out
sub
jb
cltd
sub
jae
les
mov
movsb
outsb
dec
mov
sbb
sub
jne
xchg
mov
mov
or
repz
push
icebp
scas
sti
scas
xchg
pop
leave
repnz
jo
xchg
sbb
sub
jmp
out
jnp
faddl
stos
ja
mov
lods
adc
mov
adc
in
dec
inc
push
jne
repnz
add
outsl
pop
movsl
fwait
jne
jp
cli
lea
dec
mov
repnz
jg
enter
mov
xchg
les
xchg
sbb
mov
xchg
dec
sbb
dec
ljmp
lock
jmp
mov
aad
into
dec
sbb
test
sub
xorb
add
clc
mov
ficoml
mov
mov
outsl
lock
bound
aaa
icebp
mov
lods
cmp
mov
mov
into
call
icebp
and
cmp
ds
sub
shlb
es
rcl
pop
jno
jmp
cmc
jmp
imul
xor
idivb
mov
call
in
xchg
cmpsl
cltd
outsl
pop
fwait
mov
ss
pop
and
adc
aam
inc
adc
and
aas
in
sbb
xor
inc
xchg
pop
jne
sbb
out
cli
inc
into
jne
inc
push
stc
inc
int3
popf
push
cld
insl
fdivrl
jmp
in
push
cmp
decl
mov
scas
inc
and
mov
cmc
jg
call
ficoml
xor
pop
push
call
dec
adcl
xchg
cmc
pushl
cmp
not
jno
test
stc
bound
mov
xor
mov
add
push
jp
lret
rep
arpl
arpl
addb
push
add
loop
dec
pop
call
mov
aas
in
cmp
push
mov
test
in
lock
dec
push
xor
icebp
decl
lods
cld
mov
aaa
lret
jge
jno
in
xchg
mov
inc
jg
inc
dec
in
jmp
cld
lcall
push
enter
ljmp
cli
loope
lret
into
scas
push
ds
xor
add
or
mov
incl
jae
mov
hlt
aas
test
test
addl
jmp
scas
push
xchg
and
sti
and
icebp
fcmovu
lods
incl
outsl
cld
out
add
out
jg
fwait
cvtps2pi
sub
fnstsw
lcall
sbb
sub
push
aas
shll
mov
or
dec
and
or
pushf
cmp
scas
es
push
push
pop
sbb
sub
lret
int3
pop
movsl
lcall
cld
push
popa
add
cmp
jmp
jle
xor
sub
cmp
inc
ljmp
adc
das
mov
add
jmp
jg
sub
addr16
out
cli
mov
mov
xchg
mov
sbb
incl
decl
sti
adc
jmp
xchg
rcrl
cltd
dec
sbb
pop
std
decl
and
rol
sti
imul
cmc
mov
xchg
mov
jp
adc
or
push
or
pop
iret
mov
in
fistpll
mov
scas
ret
mov
mov
add
mov
test
push
icebp
in
push
shl
shl
push
pushf
cmp
outsl
push
jns
lret
loopne
aaa
dec
rorb
add
pop
fwait
lret
jle
xor
xchg
cmc
ljmp
xor
cmc
lea
rcl
xchg
push
int
push
aaa
add
bnd
decl
mov
jo
lret
outsl
inc
cli
test
mov
xchg
std
addr16
xchg
mov
call
loopne
stc
aam
add
dec
pop
ja
inc
nop
or
or
mov
int
iret
xor
mov
sbb
lds
add
test
into
mov
enter
push
int
fistps
sbb
test
cmp
xor
fidivrs
jecxz
mov
pop
scas
inc
inc
jmp
aad
rol
out
aas
lahf
or
sbb
dec
cmp
dec
cmc
or
sbb
xorb
mov
js
xor
stc
outsl
pop
bound
fcoms
xchg
ret
mov
decl
int
repnz
or
out
lea
daa
popa
mov
mov
mov
cmp
adc
mov
ljmp
pop
jno
cwtl
pop
test
cmp
ficompl
sti
ficoms
sbb
imul
pop
imul
lahf
fcomps
add
jge
imul
out
out
in
call
aas
daa
rcr
jbe
mov
sbb
sbb
push
int3
nop
push
mov
sbbl
mov
pop
sbb
movl
ljmp
nop
xor
mov
sub
adc
pop
cmpsb
pop
cli
push
sbb
rorl
adc
push
cmc
lods
jnp
sub
xchg
xor
mov
movsl
scas
orl
das
xchg
jmp
jbe
cmpl
incl
das
pop
dec
shll
mov
orl
sub
loopne
lcall
pushf
ds
pop
sbb
sbb
sbb
add
jecxz
adc
xorps
pop
sar
pop
inc
jmp
ret
dec
adc
test
pop
loop
divl
bound
rcll
lret
dec
mov
adc
mov
popf
cwtl
jle
iret
mov
rclb
lock
pusha
gs
xor
or
push
mov
push
xchg
xchg
pop
mov
mov
xlat
addl
cmp
or
fucomip
dec
in
mov
insb
lret
enter
inc
jbe
pop
into
leave
sbb
push
jg
pushl
lods
ret
lret
cmp
xor
nop
in
lret
shr
add
in
roll
inc
mov
xor
push
dec
mov
xor
adc
pop
jb
insb
loopne
xchg
fdivrs
dec
mov
pushl
mov
test
mov
jecxz
movsb
mov
mov
or
call
cmp
fistl
cmpsl
push
shll
fistpll
stos
ljmp
sbb
add
mov
clc
call
xchg
loope
xor
imul
mov
mov
cmpsl
enter
in
push
or
sbb
mov
dec
cmp
mov
int3
jno
outsl
repnz
cmp
fisubl
jmp
je
adc
fistps
movb
popa
sub
adc
lahf
cmp
lods
xchg
stos
je
inc
clc
lret
lcall
rorb
and
addr16
xor
jge
sub
mov
cmp
sar
decb
arpl
int3
ss
mov
movsb
push
out
repz
push
sbbb
fsts
pusha
or
ja
insb
pop
pusha
sub
call
mov
es
pop
das
pop
outsb
cld
hlt
cltd
cmp
outsb
fld
push
push
cwtl
jb
mov
cmp
push
adc
fs
adc
sahf
jbe
dec
jmp
adcb
std
in
xlat
inc
in
and
arpl
xchg
mov
lds
sbb
xchg
mov
aad
rcl
shl
xor
lret
mov
sub
pop
adc
dec
ljmp
jmp
cli
add
daa
daa
repz
adc
fcmovnu
addr16
ljmp
xor
add
fmuls
mov
mov
add
incl
les
mov
mov
sbb
out
outsb
push
enter
xchg
icebp
adc
dec
outsl
jo
push
arpl
scas
add
stos
sbb
mov
cs
pushl
push
and
shl
loope
mov
cmpsb
call
jmp
inc
jb
lcall
pop
call
sbb
stos
adc
add
sbb
jae
dec
or
cmp
mov
cld
ljmp
jmp
pop
xchg
outsl
int3
pop
push
clc
cmp
lods
nop
sar
std
cmpsb
ret
xor
repnz
test
fsubl
les
incl
lods
fbstp
lcall
repnz
jle
shl
idiv
decl
sub
sub
pop
xchg
rorb
insl
mov
cmp
insb
shll
push
inc
es
mov
popa
jnp
or
in
mov
inc
js
loopne
mov
lret
iret
js
xchg
insl
add
sub
mov
rolb
hlt
test
mov
mov
cmp
hlt
add
cmc
pop
dec
aaa
pushf
cmp
decl
ljmp
or
cld
cmpsb
nop
cli
sub
cli
pop
xchg
push
mov
incl
mov
insb
mov
pop
popa
inc
test
call
loope
pushl
icebp
cltd
fwait
xchg
cli
inc
mov
in
xchg
sarl
mov
loop
jo
cmp
int
jmp
lods
shlb
xchg
test
push
and
lea
testb
outsb
testb
insb
inc
push
add
and
cld
into
mov
jne
and
dec
sbb
dec
mov
ret
ss
ljmp
cld
and
dec
dec
popf
cmc
sbb
es
clc
aaa
aaa
nop
jb
orb
mov
jge
sub
test
cmp
dec
jmp
mov
out
mov
aas
out
mov
xchg
call
xor
mov
call
pop
gs
stos
rcr
sub
add
fnsave
nop
inc
and
mov
mov
push
shlb
mov
out
sbb
rcr
mov
mov
mov
xchg
ret
test
pop
jl
js
jb
loopne
outsb
push
push
mov
jg
test
movb
mov
adc
mov
xlat
push
sbb
cmp
stos
push
pop
mov
sbb
scas
and
add
push
xor
jg
fistps
mov
sbb
xchg
or
jmp
xorb
or
pop
ljmp
hlt
xchg
scas
inc
cmc
dec
stc
imul
das
push
or
mov
add
and
aad
add
push
rorb
or
mov
lcall
lods
push
scas
jb
sub
jl
lea
sbb
jl
pop
ljmp
cmpsb
xor
sub
ret
sbb
ljmp
jecxz
fadd
adc
loope
or
aad
inc
jnp
daa
test
call
jo
lcall
sub
fcomps
decl
insb
cmc
xor
sub
fmulp
and
cmp
ficomps
and
inc
ret
sbb
out
jecxz
subb
jmp
adc
sbb
rolb
test
dec
mov
ljmp
mov
fildl
and
movsb
push
mov
lcall
bound
push
test
repnz
cmpl
mov
roll
mov
ljmp
mov
jo
into
mov
pop
bound
cmp
dec
int
dec
or
test
cmp
call
cmc
jle
or
or
xor
stos
inc
into
cmc
gs
lcall
popa
cld
mov
mov
test
inc
or
movsl
or
sbb
sbb
decl
cltd
mov
std
filds
idivb
rorl
jae
mov
sub
or
inc
cmp
inc
mov
xor
std
mov
lret
mov
nop
fists
daa
fstl
sbb
mov
cmpb
outsb
mov
inc
pop
push
in
pusha
mov
jnp
in
lods
pop
pusha
mov
mov
push
cmpsb
pop
cmp
decl
cmp
jnp
pop
mov
lcall
mov
cmp
decl
insb
fistpll
ss
icebp
mov
cmc
mov
jmp
pop
mov
lret
inc
cmpsl
insb
push
mov
mov
fs
xor
aad
mov
fs
rolb
call
or
mov
push
mov
imul
ret
xchg
cmp
insl
cmp
decl
xchg
test
movsl
sbb
iret
add
out
mov
and
sub
aaa
cli
jmp
lods
pop
cld
pusha
adc
ja
mov
mov
fdivrs
adc
das
clc
or
subb
lea
lcall
cmp
fndisi(8087
lahf
add
imul
or
jl
outsb
sub
add
jne
xchg
xchg
lcall
mov
mov
aas
push
lock
fsubs
jmp
sub
js
mov
cltd
scas
cs
and
test
mov
fs
sbb
sbb
orb
inc
xor
sub
insl
adcb
jmp
pop
fs
adc
pop
test
push
jns
fsubrp
insl
push
insb
or
dec
xlat
xor
call
sub
sbbl
jecxz
enter
les
mov
cmc
repnz
in
pop
and
and
sub
pop
arpl
in
test
lea
outsl
or
fdivrl
or
call
xchg
cmp
add
fs
aas
mov
outsb
jl
incl
inc
jp
and
cmpsl
push
ja
sti
jae
js
dec
nop
sub
xchg
push
mov
ds
jle
call
popf
xlat
or
jno
int3
bound
in
hlt
pushl
jae
xor
ficoml
push
outsb
dec
gs
sub
movsl
jmp
mov
cltd
or
xchg
or
sbb
loop
sbb
dec
jge
xlat
movsl
pop
imul
es
push
lcall
cmpsl
movsl
lcall
insb
pop
sub
mov
pusha
jne
pop
or
jg
mov
fcmove
cmc
pop
out
scas
iret
jmp
fldt
test
add
add
inc
fcomip
out
inc
fnstsw
mov
push
mov
fwait
imul
shrb
pop
rorb
test
enter
xor
adc
xor
sbb
sub
std
scas
sbb
fs
aaa
cs
pop
in
sbb
fiadds
stos
jg
outsl
jp
add
cmp
or
scas
in
sti
incl
pop
mull
mov
adc
pushf
insb
mov
jecxz
lcall
fcomi
pop
inc
loope
jl
mov
jae
push
cmp
inc
sti
inc
pop
and
inc
xchg
push
roll
lods
sbb
push
repz
mov
jecxz
mov
ret
out
stos
imul
or
mov
cltd
insb
inc
lcall
movsl
fsubr
xchg
loopne
mov
leave
xor
test
or
ss
xchg
pushf
test
hlt
mov
and
pop
cwtl
out
and
jge
data16
aas
mov
das
pop
loop
dec
mov
cmp
pop
imul
mov
xchg
jmp
and
or
addb
mov
inc
popa
sub
push
aaa
push
pop
decl
imul
daa
jns
ret
cmp
pop
ret
cld
or
sarb
call
enter
test
iret
xlat
adc
sbb
fbld
xor
mov
out
es
decl
cs
inc
push
mov
scas
jb
int
lcall
pushl
into
cld
mov
mov
push
nop
and
push
sub
movsb
mov
imul
test
dec
das
ret
sbb
sub
shll
jg
add
outsl
data16
inc
test
insl
adc
test
outsl
push
lret
jbe
sbb
cld
cmp
clc
les
scas
test
std
test
add
add
ljmp
ljmp
xchg
pop
mov
mov
clc
xor
iret
popa
dec
test
mov
xchg
sub
rorb
iret
xchg
push
cli
sbb
mov
jne
dec
repnz
xor
into
pop
push
cmpsl
mov
popf
ss
repz
xchg
sub
and
int3
add
adc
adc
push
mov
out
or
outsl
cmp
fldl
lcall
movsl
cmp
jl
mov
push
insb
mov
popa
xor
mull
push
mov
sbb
ret
nop
mov
mov
dec
sbb
sar
lcall
add
fidivrs
or
add
cmp
inc
ss
je
mov
ds
imul
push
mov
fimull
pop
sub
xchg
xor
add
inc
dec
std
fadds
loop
jge
je
jp
jno
pop
add
dec
inc
mov
icebp
xor
fwait
xchg
xor
cmpsb
shlb
mov
mov
ljmp
inc
dec
or
push
test
cmpsb
cmp
cli
das
es
xchg
push
mov
jo
aam
outsb
pushf
mov
imul
or
jle
xchg
jg
fstl
mov
rcll
jns
jne
push
pop
decl
ret
int3
imul
adc
cwtl
push
aad
jg
mov
mov
jmp
jbe
cmp
mov
ud0
ret
mov
adc
decl
cmpb
insb
push
jp
fwait
pop
into
fistpll
fs
mov
filds
in
mov
aad
jle
pop
addl
jne
xchg
push
ja
push
jg
into
call
outsb
dec
adc
adc
testb
xchg
movsl
and
scas
call
mov
fnstsw
lea
test
sub
jo
mov
push
ficoms
xchg
outsb
lock
lock
xlat
and
rorb
repz
mov
pop
cmp
notb
and
dec
cmpsl
call
decl
lods
stos
gs
ret
insb
imulb
lock
mov
push
sarb
push
xor
pop
cmp
push
lds
jbe
inc
cmpsl
pop
mov
pusha
and
shrb
incl
mov
add
and
aam
pop
and
xor
push
nop
xlat
loop
push
or
lcall
jno
cmp
int
loope
xchg
dec
negb
out
dec
fcmovu
in
jb
enter
sti
jg
dec
inc
stc
push
out
sarb
icebp
sbb
ds
mov
lcall
xor
and
jl
adc
push
jbe
decb
jg
das
cld
mov
shrb
inc
arpl
mov
mov
jmp
fimull
aad
xor
test
es
pop
lock
dec
test
ret
js
xor
xchg
scas
pop
inc
ficoms
mov
bound
insb
icebp
fisttps
mov
sbb
push
int
lods
pop
mul
mov
rcll
cli
lcall
push
loopne
cli
jg
lea
cmp
cmp
mov
ljmp
hlt
pop
dec
xchg
mov
jp
addl
loope
dec
and
mov
call
repnz
jecxz
pop
push
and
xlat
cli
pop
mov
sbb
repz
or
and
pushl
mov
dec
mov
dec
idivb
aaa
jb
cld
test
xchg
adc
jl
inc
inc
popa
mov
repnz
push
inc
or
jl
push
pop
inc
jnp
push
stos
push
jnp
sub
add
pop
jmp
inc
sbbb
aas
pusha
dec
xor
and
or
aam
adc
cmp
std
stc
push
add
cld
xchg
fwait
pop
rcl
jae
dec
sub
ja
sti
call
orb
mov
inc
cs
jns
aas
inc
pop
into
lds
mov
mov
gs
mov
add
and
sahf
outsb
stos
xchg
xorl
and
shl
iret
mov
sub
jno
aad
clc
out
mov
incb
mov
pop
lods
add
rorl
mov
out
fsubrl
add
jl
pop
mov
mov
lcall
cmp
cmovbe
jns
pop
pop
adc
ficomps
dec
push
cmp
enter
insb
sub
scas
pop
fdivrs
jecxz
mov
cmp
add
test
jae
andl
jl
mov
add
test
cmp
loope
fwait
cmc
cmp
inc
movsb
pop
shrl
jnp
jl
mov
add
jg
scas
and
inc
mov
es
jp
adc
jnp
movsl
pop
clc
call
aam
adc
push
std
sbb
adcl
or
add
lret
adc
sub
sbb
ljmp
imul
mov
call
adc
lcall
pop
xor
add
xchg
repz
cmp
sub
ljmp
std
jl
add
and
xor
dec
xor
int3
daa
mov
mov
jmp
dec
push
daa
push
pop
jno
jnp
cmc
add
add
xchg
and
fbstp
shll
jne
or
push
mov
sub
test
js
mov
loopne
std
jmp
mov
push
push
aaa
dec
ljmp
daa
inc
ljmp
std
dec
mov
fnstcw
addr16
or
add
dec
ffreep
iret
stc
fadd
pop
loop
jp
icebp
cmp
xlat
ret
cltd
sahf
cltd
jg
jmp
test
lea
jnp
xor
jmp
cmpsl
mov
or
jmp
ljmp
incl
sbb
nop
inc
pop
cmp
out
frstor
xor
push
mul
sbb
dec
jg
and
in
sti
mov
inc
rol
cmp
jns
xor
inc
adc
sub
adc
jmp
jo
inc
or
ljmp
repnz
sbb
incl
jmp
and
jo
pop
lods
xchg
push
ret
fwait
insb
pop
popf
sub
xchg
in
push
int
insb
leave
jp
jmp
mov
loop
adc
sub
adc
icebp
inc
push
jnp
push
scas
xor
std
pushl
stc
push
add
int3
inc
jae
mov
add
adcb
lcall
xchg
ret
cmp
dec
mov
cwtl
xor
sbb
incl
fmull
fcmovbe
fwait
jnp
pmaddwd
hlt
inc
pusha
and
mov
call
jmp
cmp
mov
sub
pop
int
stc
mov
sub
imul
lock
clc
decl
jb
mov
int3
stos
mov
adc
and
inc
jecxz
call
mov
das
mov
ss
lahf
mov
insl
inc
daa
call
ljmp
xor
push
popw
adc
and
and
idiv
jne
add
in
je
jp
adc
inc
xchg
mov
stos
lods
mov
shlb
cmp
lods
loop
cli
ljmp
pop
les
aaa
inc
aaa
jnp
dec
shl
cwtl
xchg
dec
enter
and
int
fcompl
jg
pop
sub
les
dec
sub
enter
cmc
pop
add
push
pop
pop
ljmp
cmpsl
jge
or
mov
movsb
test
mov
pop
lcall
repnz
loopne
or
aas
out
mov
ljmp
xchg
xor
imul
sti
or
dec
js
pushf
pop
sbb
cli
call
out
fwait
pop
dec
sbb
sub
sbb
nop
mov
cmp
lcall
sub
mov
pop
out
mov
mov
rclb
adc
xchg
iret
ret
xchg
mov
xchg
jg
push
add
push
movsb
push
pop
jne
jns
dec
je
pop
enter
mov
enter
pop
ficomps
pusha
pop
decl
cmp
push
mov
int
aaa
mov
sbb
inc
mov
mov
push
call
push
mov
faddl
jg
mov
icebp
call
sub
jge
sbb
test
inc
mov
mov
adc
pop
scas
lret
lds
sbb
cmp
ss
mov
push
xchg
decl
enter
mov
inc
xchg
sbb
rcr
notb
mov
lcall
jns
pop
jge
inc
fldcw
adc
push
adc
test
out
pop
push
sub
sbb
out
adc
ljmp
add
inc
and
and
pop
das
clc
mov
ljmp
ficoml
sbb
roll
aad
pop
sti
pusha
out
dec
popf
pop
cmc
pmullw
in
cmp
scas
inc
lret
aad
sahf
xchg
lods
mov
push
adc
sbb
sar
xchg
xorb
push
xchg
mov
or
cli
aam
mov
jg
mov
pop
sbb
push
sub
lcall
mov
fldcw
push
enter
mov
movsl
push
out
ret
and
mov
sti
or
std
call
dec
push
clc
call
cmp
aaa
xchg
sti
test
push
jp
dec
aaa
negl
sbb
ljmp
ss
shlb
push
ret
aam
aad
roll
aad
or
jb
lock
ljmp
cs
pop
jae
mov
lret
addl
mov
xchg
dec
pusha
and
fldln2
insl
lret
add
ljmp
into
pop
pop
arpl
out
cmpsb
hlt
enter
cmc
fidivrl
stc
push
dec
add
jmp
jp
lods
mov
dec
push
mov
leave
cs
mov
call
repz
scas
das
push
push
push
rcrb
pop
js
roll
out
mov
xchg
in
lods
sbb
jnp
cmp
sub
imul
aaa
or
dec
mov
mov
pop
dec
in
pop
inc
fmull
and
fidivl
xchg
mov
push
test
aad
jmp
movsl
cli
cwtl
les
subl
push
sub
fists
jp
inc
jno
ret
sbb
sub
subb
call
gs
adc
add
fisttpll
ljmp
cld
mov
mov
repnz
inc
adc
cmp
rclb
ljmp
mov
call
add
cs
pop
cmp
cmp
cmpsl
ss
cmp
stc
decl
call
gs
cltd
push
out
roll
push
jle
jno
and
mov
scas
data16
jnp
inc
sbb
jp
jo
stos
lret
mov
je
sar
mov
inc
mov
mov
xchg
xor
pusha
and
inc
jno
icebp
jg
add
jbe
or
arpl
xor
decl
sub
ss
cmp
dec
scas
lods
ljmp
pop
pusha
or
popa
lahf
lahf
ja
aad
fs
pop
dec
gs
out
sbb
add
decl
dec
mov
clc
adcl
dec
gs
mov
fldenv
adc
ljmp
or
in
xchg
aaa
clc
mov
rep
xchg
fmul
je
dec
lock
fcoms
pushf
lods
ret
sbb
dec
xor
xlat
es
pusha
imul
ljmp
cmp
mov
cmp
jl
scas
lcall
xchg
or
in
or
bound
jb
dec
aam
xor
mov
mov
pop
add
test
mov
lock
cmp
cmp
adc
or
xchg
jns
jmp
mov
in
jmp
dec
test
push
pop
pop
cs
test
mov
jg
and
cmp
out
add
xchg
incl
cmp
xchg
call
mov
pusha
mov
adcb
fxch
pop
addl
mov
mov
imul
popf
xor
push
jecxz
and
in
cwtl
addb
das
cmc
incl
sub
push
xchg
in
ss
shr
xchg
sub
ret
add
arpl
lcall
or
jb
stc
enter
pop
mov
sub
push
pop
add
xor
je
pushl
and
insl
lods
aas
jmp
mov
cltd
sti
jg
das
lahf
sbb
pop
push
xor
adc
jle
lods
mov
dec
cltd
rolb
add
iret
sbb
lods
roll
pushl
mov
inc
pop
iret
jle
xchg
ljmp
outsb
int
popf
jg
sti
imul
push
and
popf
cmp
stos
mov
test
dec
cld
jbe
add
jg
add
adc
fsubrl
imul
xchg
xchg
ds
ret
lods
sti
test
jmp
inc
imul
aas
mov
jno
sbb
fs
sub
call
mov
xor
fnstsw
adc
imul
mov
sbb
loopne
ret
daa
sarb
jle
lcall
inc
xlat
pusha
sub
xchg
cmp
cs
scas
call
call
clc
inc
sbb
xchg
mov
loopne
sub
movsl
fucom
decl
dec
stc
and
fwait
leave
inc
loopne
sub
pop
add
xchg
ficomps
pop
pushl
shrb
push
insb
jg
in
leave
sub
decl
xchg
jmp
dec
mov
jns
std
imulb
add
pop
adc
mull
cli
lods
mov
lods
sahf
mov
ret
pop
cltd
xor
mov
inc
or
jno
jp
mov
mov
xor
pop
mov
sar
pushl
sbb
lods
dec
jnp
lock
lods
cmp
jmp
add
mov
les
call
pop
mov
cmp
pop
cmp
pop
pop
in
fistpl
out
add
push
push
pop
enter
lcall
repz
cmp
jne
hlt
fcompl
cs
xor
inc
loope
add
jg
dec
jl
ds
mov
push
shll
push
push
shl
sahf
pop
push
add
imul
enter
inc
and
test
mov
sar
call
cmp
test
lods
xchg
aaa
adc
and
test
sbb
mov
cli
mov
ret
dec
ficoms
mov
and
or
pop
dec
lcall
pop
cmp
or
push
xor
xor
dec
les
jbe
cmc
es
cmp
sbb
push
pop
cmp
cmp
iret
shl
outsl
adc
adc
out
sbb
push
push
mov
adc
lock
push
lret
aas
cld
pop
ss
mov
xchg
imul
lcall
das
adc
cmpsb
js
pop
mov
add
loopne
xchg
fwait
clc
jle
xor
pop
outsb
cli
adcl
icebp
shll
adc
jmp
das
lods
repnz
incl
sub
xor
mov
pop
lcall
in
aad
or
sub
cmp
sbb
add
xor
ljmp
repnz
dec
lds
les
repz
ljmp
sti
add
sub
daa
jg
adcb
ljmp
pop
mov
inc
ljmp
cmc
aas
mov
cmp
nop
hlt
mov
mov
or
inc
nop
int3
jmp
pop
outsb
test
cmpb
xor
jmp
aaa
push
leave
lcall
mov
adc
mov
sub
in
adc
jp
cwtl
imul
lods
jne
xor
cmp
adc
mov
adc
fs
int3
dec
xchg
jo
dec
pop
dec
jl
cmp
popa
pop
jno
and
add
int
inc
sbb
mov
fildll
call
jle
xchg
les
fstpt
mov
pop
repnz
outsl
fsub
mov
mov
fs
in
mov
mov
xchg
dec
or
inc
shll
mov
data16
imul
or
mov
cmpsl
jmp
lods
mov
mov
mov
xor
mov
loope
xchg
adc
cli
imul
dec
mov
int
mov
mov
out
fcmovnu
pop
push
loope
incl
negb
lahf
cmp
cmp
lret
call
jns
outsb
xor
enter
leave
push
push
nop
in
hlt
lock
fdivr
push
fs
sbb
fisubrl
jo
adc
loope
mov
cmpsl
push
jmp
sti
incl
loopne
jle
aad
rolb
mov
test
repz
fisubl
movsl
pop
push
stos
inc
ja
test
sti
sbb
test
xor
mov
das
fwait
ds
leave
popa
lret
cmp
push
add
pop
test
push
into
imulb
mov
mov
lahf
leave
popa
sbb
test
or
mov
push
pop
xchg
xchg
test
mov
fsubrs
mov
xchg
aam
fwait
dec
xchg
hlt
ljmp
nop
mov
ret
cltd
sbbl
sub
aas
sub
inc
outsl
push
sub
sub
or
xor
ret
inc
fbstp
jne
lds
out
sbb
arpl
push
js
dec
out
repnz
mov
cmpsb
test
incl
fdivs
ret
jecxz
js
add
or
push
jne
movsl
or
add
rolb
dec
dec
mov
call
inc
sti
jp
push
outsl
dec
cmp
negl
in
mov
lock
mov
add
jns
jbe
shrb
adc
mov
aaa
clc
mov
inc
pop
pop
lcall
int
insb
push
pop
mov
jns
incl
out
or
jbe
sub
inc
jo
data16
or
lods
add
cmc
ljmp
ret
pop
and
sbb
js
inc
sbb
sbb
mov
je
sbb
push
out
mov
xlat
xchg
adc
in
cs
add
jae
das
lock
in
xchg
lock
and
rcll
test
pop
or
sub
add
ljmp
out
push
int3
dec
mov
pop
cmp
cs
in
mov
cmpsl
in
cld
xlat
xchg
adc
add
insl
int3
inc
sbbl
adc
mov
outsb
pop
cmc
aaa
addr16
sub
ljmp
scas
fstpl
push
cmpsb
xor
ficoml
or
xchg
icebp
jno
in
out
call
lea
cs
divl
arpl
dec
jae
adc
xchg
and
pop
icebp
adc
ljmp
cld
add
gs
dec
jnp
and
addr16
lods
ljmp
int3
lcall
or
sub
je
inc
cmc
push
add
dec
leave
or
in
out
test
js
pop
std
ljmp
lret
or
mov
xor
xchg
les
mov
fnstsw
sbb
int
jge
call
cmc
mov
adc
outsl
inc
lock
in
testb
stos
jge
or
cmc
je
insl
icebp
decl
shrl
jae
lcall
pushl
insb
pop
cmc
mov
loopne
and
out
das
dec
cmpsl
outsb
jno
push
xchg
xchg
jo
sub
jns
rcrb
fwait
or
rclb
add
in
lods
jle
pop
adc
and
in
outsb
xchg
das
cld
lock
cmp
fmull
adc
imull
scas
pop
scas
cmp
cmp
int
mov
dec
fsubrs
mov
or
jae
and
mov
in
mov
mov
add
pop
imull
inc
xchg
mov
incl
push
mov
or
adc
shrl
xor
fs
ljmp
out
mov
mov
pop
test
mov
mov
aaa
pop
cs
mov
push
int
btr
jmp
inc
movsl
es
xor
cmp
jmp
mov
sbb
sti
push
movsl
inc
push
les
pop
iret
roll
xlat
pop
and
or
and
jg
decl
and
dec
sbb
cmc
out
push
pusha
inc
jmp
push
push
sbb
cmc
dec
cld
call
xor
stc
pop
add
inc
cmpsb
stos
outsb
push
mov
ljmp
push
sbb
inc
pop
push
add
int
jae
aas
cld
jg
pop
stc
mov
mov
out
insb
add
mov
push
push
movsb
icebp
jecxz
loop
or
loope
xchg
pusha
jmp
add
mov
push
ljmp
into
incb
repnz
les
and
inc
movsl
push
inc
mov
or
dec
mov
lds
test
xor
mov
cmpsb
jg
pop
jecxz
movsl
cmp
cmp
mov
das
push
pop
test
test
lret
or
jo
dec
out
ds
xor
sub
lcall
cmp
pop
cmpsl
push
iret
pop
call
fildl
mov
push
lea
mov
adc
popa
je
jmp
addr16
xor
hlt
xlat
shrb
inc
test
addr16
sub
out
divl
sbb
mov
imul
fwait
sub
mov
push
arpl
push
inc
sbbl
lea
mov
sub
and
fldcw
jecxz
push
jg
pushl
pop
cmp
out
iret
out
mov
xchg
pop
dec
cmp
jae,pn
incl
lret
add
out
daa
popf
ss
pushf
jae
ret
inc
add
mov
mov
xor
xchg
out
add
pop
xor
cmp
mov
add
xchg
ss
add
push
xor
or
mov
mov
loope
pop
lret
push
push
add
aam
sbb
xchg
mov
mov
js
imul
inc
mov
stos
mov
cltd
into
push
adc
incl
pushf
ja
or
xchg
mov
add
mov
inc
out
lds
ficoml
cmc
incl
out
popf
mov
outsb
js
inc
jmp
dec
xchg
mov
loope
mov
or
inc
or
in
imul
iret
insb
rcr
cs
ret
pushf
mov
mov
in
pop
test
outsb
dec
loop
dec
faddl
pop
add
test
push
mov
mov
orb
or
leave
into
int3
test
nop
add
mov
gs
sub
lcall
pusha
pop
inc
bound
mov
in
jecxz
arpl
adc
pop
loopne
into
lock
lcall
push
into
push
pop
ja
std
repnz
loope
dec
mov
mov
leave
and
mov
cmpsl
dec
ds
or
cmp
or
cli
lcall
std
xchg
push
xchg
insl
push
cmp
loopne
gs
rorb
pushl
ret
jb
mov
jmp
lcall
loopne
stos
aad
stos
es
repnz
jmp
outsb
dec
js
adc
cmp
or
lret
jp
cmp
mov
int
je
adc
sub
push
adcb
nop
loop
nop
xchg
dec
decb
dec
pushl
test
fstps
cli
movsl
fsts
sti
inc
mov
pop
loope
incb
outsl
cld
push
jne
xlat
loop
jmp
jg
fldl
xor
out
pop
cli
pushl
imul
xchg
dec
mov
inc
sbb
ja
xchg
ljmp
dec
pop
hlt
dec
jb
inc
xchg
pusha
dec
mov
xor
mov
push
ret
adc
or
out
lock
fwait
and
popa
gs
dec
pushf
mov
xor
mov
into
adc
mov
push
mov
popl
addr16
addl
mov
mov
aas
xor
inc
xor
stc
jecxz
dec
jmp
flds
inc
jmp
test
xchg
imul
push
adcl
lcall
jne
jp
imul
incl
cmc
cmp
arpl
mov
idiv
mov
xchg
ficoml
jne
sbb
incl
add
lock
xchg
ljmp
mov
cld
and
dec
add
std
stc
push
xor
in
ficoms
xor
addb
mov
outsl
pushf
cmp
pop
push
rclb
lcall
cmp
mov
test
adc
idivl
jl
push
and
mov
push
lea
pushl
cmp
movsb
fstp
leave
xchg
not
sbb
sbb
jo
sub
push
decl
icebp
out
call
xor
aad
scas
push
lds
add
cmp
sub
call
push
xchg
cld
inc
dec
mov
xor
test
pushf
fwait
out
jmp
lcall
mov
mov
jl
stos
in
imul
lcall
or
push
or
out
adcl
inc
and
test
clc
hlt
pop
add
and
jp
mov
pop
mov
out
std
jmp
mov
sub
test
fdivl
orl
xchg
add
sbb
jmp
sub
fnsave
push
imul
cmp
jg
lahf
or
test
pop
movsb
xchg
inc
adc
xchg
push
sbb
or
mov
mov
out
shl
enter
xchg
movsb
add
inc
lods
icebp
call
xchg
sub
jecxz
add
pop
ret
xchg
add
mov
xchg
fucomip
das
cmc
test
test
inc
jns
jae
das
std
mov
sbbb
fsts
scas
daa
push
jns
insb
lcall
push
push
mov
jl
out
sub
scas
call
xchg
sbb
mov
cmp
sub
pushf
orl
adc
dec
les
jecxz
adc
and
mov
mov
cld
inc
icebp
ljmp
inc
jp
insl
lds
dec
fisttpl
ja
push
mov
mov
out
cmp
sbb
xchg
cs
loop
lcall
mov
mov
inc
push
scas
xor
dec
push
pop
dec
test
andl
fistl
lret
out
adc
jo
aas
ss
xor
xchg
mov
and
ljmp
pop
adc
xchg
xor
mov
mov
mov
ffreep
ret
and
mov
dec
stc
mov
pop
js
add
xchg
ret
cmp
lret
test
je
test
lcall
mov
xcrypt-ofb
cmpsl
sub
sbb
push
cltd
mov
sbb
pop
idiv
ljmp
jb
inc
test
xlat
xor
ja
adc
jbe
jbe
cmp
dec
ss
inc
fcoml
inc
ret
inc
ret
xor
adc
outsl
scas
inc
stos
mov
pop
clc
dec
dec
jmp
out
adc
insb
sub
sbb
add
sub
lock
sbb
sti
cs
aaa
cli
jg
mov
dec
push
cmpsb
hlt
jbe
dec
clc
adc
add
add
outsl
mov
inc
cwtl
sbb
arpl
mov
mov
push
outsb
sti
stos
cmp
add
js
stos
movsb
test
xchg
mov
lock
cs
pushl
cli
rclb
in
lods
push
or
imul
mov
lds
in
popf
pop
mov
push
pop
cwtl
xchg
jns
aas
incl
icebp
bnd
dec
mov
rorb
mov
push
sbb
daa
pop
in
cmpl
loope
fistps
jg
jmp
mov
dec
loop
pop
push
js
mov
pop
fiadds
xchg
xor
ror
jmp
decl
xorl
sbb
es
cmp
pushf
adc
neg
and
xor
cmpsl
out
shlb
aaa
ljmp
dec
push
sub
lahf
sub
pop
mov
test
push
push
sbb
sub
jb
push
pop
sub
in
imul
orb
test
int
mov
push
leave
cld
cmp
mov
and
xchg
cmp
decl
imull
or
mov
out
dec
aad
fs
test
lcall
or
dec
mov
push
imul
and
bound
pusha
mov
pushl
cmp
pop
pop
adc
pop
xor
sahf
bound
in
inc
mov
ret
lahf
imul
loopne
decl
push
imul
call
mov
add
lea
popf
movsl
dec
push
sbb
sti
dec
jge
lret
pushf
lock
or
sbb
cmp
mov
leave
adc
pop
mov
jg
fs
and
jecxz
scas
jb
frstor
test
call
test
add
adc
xlat
xor
mov
insb
stos
mov
sub
loopne
add
cld
cmp
push
insl
sbb
pop
testl
adc
cmp
push
int
scas
dec
mov
ljmp
ds
xchg
iret
jmp
add
cld
xchg
push
movsb
lcall
nop
dec
popf
cpuid
mov
mov
rcr
lret
pop
ljmp
pop
inc
int
scas
mov
mov
adc
aad
pop
clc
dec
jle
cmp
cltd
scas
repz
std
adc
icebp
and
aad
mov
mov
mov
in
or
aam
mov
call
sub
lret
dec
xor
mov
lret
movsl
imul
cltd
stos
jg
out
scas
cmp
fs
fadds
push
mov
call
and
sbb
popa
xor
ljmp
fbld
fwait
pop
add
popa
ja
or
leave
imul
mov
cmp
fwait
xchg
enter
int3
xor
adc
js
ret
jg
daa
rcrl
test
call
fisubl
mov
or
ja
sbb
push
daa
in
pushl
jmp
mov
idiv
xlat
ds
and
movsb
test
xchg
mov
jecxz
inc
mov
push
pop
scas
test
aad
dec
shl
push
add
in
or
lock
decl
out
push
xor
pop
mov
cli
test
jge
mov
mov
pop
or
or
jno
lcall
jno
pusha
mov
in
mov
das
in
jns
daa
loop
and
adc
in
xor
call
incl
sbb
jb
inc
pop
inc
loop
out
aas
js
cli
lcall
dec
mov
cltd
testb
cmp
mov
decl
mov
daa
lods
pop
fwait
adc
fadd
mov
insb
pop
enter
pop
push
pop
lahf
loope
cwtl
leave
push
adc
and
leave
dec
insl
push
call
cmpsb
mov
fstps
and
ljmp
adc
ret
add
imul
sbb
mov
test
jne
cmp
rcl
push
xchg
movsl
lret
sub
rcll
ljmp
js
mov
pop
mov
pop
mov
leave
lods
enter
icebp
lcall
shll
jp
cmp
ds
sbb
call
subl
push
jno
adc
shl
movsb
pop
enter
mov
cli
decl
test
dec
or
push
roll
or
jns
std
shll
bound
pop
mov
cmc
nop
add
std
data16
lock
mov
lea
mov
gs
jl
js
testl
js
mov
lcall
adcl
idivl
push
fwait
inc
pop
dec
adc
lcall
std
pop
or
adc
xchg
sbb
call
ret
mov
adc
xchg
aaa
hlt
std
inc
std
push
fs
arpl
xchg
cli
jmp
inc
adc
sahf
push
adc
adc
push
stos
sub
leave
dec
pop
mov
nop
incl
xchg
in
push
rcrl
aam
add
inc
mov
xchg
icebp
mov
or
cmp
and
xchg
sub
adc
mov
jmp
sub
mov
shlb
jmp
and
outsb
mov
das
lret
sub
push
add
test
ljmp
movl
fldcw
ret
cmc
insl
inc
aad
jl
lods
sub
ljmp
hlt
aam
xchg
daa
insb
mov
sub
adc
and
jecxz
push
push
scas
cmp
enter
add
call
repnz
js
xchg
mov
pop
mov
jo
call
inc
lods
push
push
mov
xor
ljmp
lock
ret
ret
pop
jnp
in
daa
adc
pop
sbb
push
mov
popf
ret
dec
cld
repnz
or
add
repz
test
or
roll
mov
iret
insl
roll
mov
fxch
scas
cmpsb
lret
adc
push
sub
jl
cmp
jnp
jecxz
clc
xlat
lock
jbe
pushf
push
mov
test
pop
vcvtsd2ss
cmpsl
cmp
mov
ljmp
or
subb
mov
std
call
mov
xchg
and
and
fcos
ds
jge
push
dec
or
xor
test
xor
scas
cld
in
adc
inc
adcb
popa
in
xor
negb
mov
lods
in
jg
cmpsl
xor
insl
lcall
push
xlat
push
fbld
fistpll
sub
incl
jo
xlat
cs
xchg
dec
push
imul
mov
lds
cld
sti
js
adc
outsl
mov
iret
inc
les
cmp
or
testb
jo
dec
mov
pop
add
adc
jg
ljmp
mov
push
cmp
mov
pop
ds
cli
dec
sbb
jmp
xor
adc
pop
repz
hlt
dec
mov
stos
jle
adcb
mov
or
xadd
inc
jmp
shl
fs
in
sbb
es
pop
int
dec
pop
sar
ljmp
or
aaa
and
jl,pt
pop
leave
mov
call
sbb
loope
pop
push
addl
sub
mov
jne
jl
jg
fbstp
jecxz
or
jnp
out
std
sbb
inc
xlat
sub
xor
outsb
out
sarl
add
lods
dec
ss
mov
push
ljmp
sti
and
mov
pushf
rclb
push
add
mov
fdiv
mov
push
xchg
push
jbe
daa
std
loop
cmp
sbb
sbb
lcall
push
ljmp
imul
or
rolb
incl
inc
xchg
out
in
dec
mov
add
and
push
ljmp
int3
dec
cli
mov
aad
icebp
pop
rcrb
push
inc
lahf
inc
mov
fisubrl
push
add
fucomip
push
icebp
and
aam
push
or
in
mov
mov
lock
pushl
jo
iret
cmc
js
dec
and
sbb
and
jmp
or
scas
jae
sub
scas
fwait
insb
lods
test
push
popf
hlt
loop
push
and
pop
pop
icebp
call
aaa
xor
enter
aaa
jno
cmpsb
insl
jns
and
inc
xchg
cmp
pop
fcmovbe
scas
int
add
push
incl
pop
repnz
mov
insl
pop
iret
in
and
ljmpw
scas
rcrb
sbb
popa
iret
adc
mov
ljmp
adc
or
ret
shrl
push
insl
std
incl
outsb
inc
rcll
in
cmp
ja
cli
inc
test
cmp
or
xchg
aas
fs
test
inc
sbb
iret
sahf
or
leave
cmc
xor
sbbl
test
std
jmp
pop
push
or
push
cs
jns
cltd
add
jg
repz
ljmp
xchg
dec
in
ss
call
lods
and
pop
clc
xchg
insb
test
into
pop
mov
push
pop
inc
into
outsb
das
stos
or
xchg
add
repz
stos
xchg
xor
or
loopne
decl
ret
andb
xchg
pushf
insl
fisubl
jmp
enter
sbb
mov
jg
mov
ss
cmp
pushf
jnp
jne
cmp
incl
shll
orl
and
xor
movsl
loope
push
clc
mov
enter
mov
pop
push
shll
and
imul
mov
fimuls
cmpl
lcall
xchg
pushw
pop
rorb
push
dec
ret
lods
out
push
mulb
push
pop
push
fistpll
test
lret
mov
mov
aas
jl
cmp
lock
mov
mov
mov
or
xor
js
popl
aaa
cmpsl
mov
outsl
loopne
jg
out
or
dec
cltd
xchg
add
flds
fnstcw
pop
xchg
cwtl
cmpsl
pop
pop
aam
mov
shll
add
sub
xchg
gs
ljmp
repz
jo
mov
add
mov
nop
push
stos
fcompl
lods
das
hlt
and
pusha
xchg
or
clc
adc
sbb
ljmp
sti
cwtl
je
div
cmp
pop
add
out
call
aas
test
fsubl
mov
cs
pushl
xor
mov
sar
xlat
cmp
mov
insb
out
pop
out
sub
ljmp
push
jae
mov
lret
cmp
push
jb
jbe
inc
pop
ljmp
adc
pop
add
dec
inc
inc
xor
push
fiaddl
add
popf
daa
int3
mov
in
mov
rcll
shrb
fiadds
adc
test
nop
call
cmp
aas
das
dec
stc
cmpsb
jmp
filds
jnp
test
das
int3
arpl
ret
inc
push
aad
into
cs
rol
xor
cmp
aaa
dec
dec
repz
lods
filds
sbb
in
mov
jg
inc
push
les
jg
sbb
outsw
xchg
fdivs
enter
imul
or
sub
std
out
mov
filds
jle
pop
push
stos
rcl
dec
jno
xchg
loop
fisubl
std
nop
lret
push
sbb
orb
fstpl
dec
push
or
inc
sti
mov
push
dec
dec
fmull
sub
rolb
add
decl
adc
jo
xchg
aas
mov
cmp
jmp
cmpsl
xor
incl
js
inc
push
loop
mov
xlat
mov
arpl
mov
in
xchg
rorb
lret
sub
push
cs
pop
sub
mov
inc
ds
shll
cli
stc
mov
xchg
sbb
inc
bound
daa
sub
xor
pop
cmp
xchg
loopne
pop
jbe
mov
lcall
jl
gs
pop
imul
jl
mov
sub
mov
aad
out
call
out
outsl
jnp
lcall
inc
push
aad
xchg
push
add
das
icebp
pushl
je
out
adc
repz
mov
and
xchg
push
jp
mov
jns
lcall
mov
ljmp
mov
cmp
sbb
cmp
jmp
ja
mov
xchg
or
shl
mov
cwtl
sub
ss
dec
jg
aaa
push
xor
stos
dec
inc
es
cs
pop
bnd
jb
adc
dec
out
pop
loopne
pushl
je
cltd
jmp
in
mov
or
call
jmp
cltd
sahf
outsl
and
add
push
pop
js
bound
loope
jg
out
hlt
stos
loop
xchg
pop
popf
cwtl
sub
outsl
jne
sbb
cwtl
loop
pop
sbb
movsl
pop
mov
dec
repz
adc
xor
call
lods
and
fbstp
push
jecxz
ja
push
adc
in
cltd
mov
popf
mov
inc
sti
sbb
stos
inc
cmp
cmp
subl
mov
out
jmp
cmp
icebp
pop
xor
or
leave
mov
add
incl
dec
inc
or
popa
sti
xor
stc
push
dec
push
roll
nop
or
mov
in
push
incl
in
call
mov
mov
inc
pushl
pop
pop
add
es
cmc
mov
popl
jmp
push
cmp
mov
insl
mov
dec
enter
dec
pop
mov
or
push
push
adc
test
addr16
in
es
jmp
push
jo
lahf
sbb
or
pop
lea
not
add
add
ljmp
jmp
push
pop
movsl
xor
rclb
xor
fdiv
add
xchg
push
addr16
arpl
or
call
gs
sbb
cmp
and
xchg
mov
or
mov
js
inc
add
adc
mov
mov
sbb
xchg
ror
mov
cmp
or
iret
xor
loop
add
pusha
ljmp
in
push
lahf
addr16
dec
lods
cvtpi2ps
lcall
orb
push
insb
sub
loopne
cmp
xor
mov
js
sub
mov
sti
test
pop
cmp
jl
jnp
jne
xchg
lret
dec
pop
cmp
ljmp
fs
and
loopne
fstl
test
ja
ljmp
out
stos
adc
inc
jns
xlat
stos
das
lahf
outsl
mov
shrb
dec
movl
mov
popa
jnp
pop
ljmp
js
fdivrl
xchg
and
bound
jnp
std
addb
jmp
clc
jbe
js
sbb
imul
or
lcall
mov
inc
lds
push
push
in
paddsw
mov
and
icebp
jno
call
push
jbe
mov
cld
pop
stc
pop
inc
sbbl
bnd
push
xor
cmp
fsts
add
mov
cmp
aam
push
xor
jg
lahf
mov
sub
fildll
and
cmpsb
je
pop
mov
pop
call
jbe
sbb
shrb
inc
mov
js
xlat
inc
jo
outsb
sbb
dec
fcomps
stos
cs
add
repz
cli
ljmp
clc
or
test
scas
push
in
cmc
out
outsl
fsubr
dec
out
cld
call
ja
sti
and
ret
cmp
divb
push
sbb
das
hlt
dec
cmp
popf
or
inc
movb
test
or
icebp
fucomip
dec
cltd
nop
loopne
pushf
lcall
sub
stos
sbb
lcall
popf
pop
cwtl
sub
in
pop
sti
pop
shlb
mov
decl
ljmp
rclb
loope
xchg
mov
mov
rolb
pushl
clc
sub
jl
mov
icebp
jo
sub
push
xor
pop
cli
adc
fnstsw
mov
out
in
sbb
incb
scas
movsb
rcll
cmc
sub
add
add
daa
jg
test
jns
loope
or
enter
dec
push
popf
add
lea
pushl
sub
lcall
repnz
aas
dec
inc
mov
jge
adc
int
incl
clc
bound
sbb
or
add
jp
test
out
pop
aaa
sbb
scas
cmp
mov
fdivr
jmp
clc
xchg
lret
and
jle
pop
adc
adc
jbe
int3
dec
pop
sub
ljmp
pop
das
in
push
push
fistpl
mov
lds
sbb
xor
dec
dec
add
decl
fidivs
dec
in
jle
pop
aad
ss
fidivl
add
and
sub
mov
subb
imul
jge
mov
and
mov
push
push
mov
cld
and
lcall
inc
mov
decl
sbb
cmp
dec
inc
fdivrs
rcrl
mov
call
inc
pop
mov
cwtl
call
stos
mov
imul
mov
push
mov
int3
test
jnp
jge
rcll
mov
cli
add
mov
adc
ljmp
std
jl
ja
push
sub
ss
je
lds
divb
imul
gs
jge
call
adcl
iret
push
sub
and
mov
xchg
leave
imul
push
les
add
js
int
push
dec
popf
popf
or
dec
std
test
push
fmul
sbb
outsl
cmc
lcall
mov
inc
pop
addr16
pop
iret
imul
or
mov
xchg
sbb
imul
sahf
pop
mov
mov
sbb
flds
subb
xchg
popa
adc
cmpsl
adc
imul
mov
push
in
sub
aam
ss
pop
adc
idivl
insb
sbb
lea
fdivrs
cs
dec
shl
in
daa
push
outsb
mov
decl
cwtl
and
daa
out
popa
repz
scas
inc
in
cltd
pop
dec
call
and
pop
jne
mov
lock
jne
pop
xor
xor
jmp
fwait
or
cltd
jbe
pushl
inc
lock
rcrb
lret
jno
dec
les
jecxz
push
adc
pusha
pop
or
mov
mov
lret
or
fndisi(8087
xchg
fldcw
hlt
in
dec
xchg
jl
es
movsl
push
inc
sahf
mov
lret
sbb
fnstenv
pushl
xchg
je
sbb
mov
pop
cmovbe
sti
sub
lods
decl
inc
or
popf
xor
enter
test
pushl
mov
outsb
stos
dec
sub
dec
mov
mov
mov
int3
ret
cwtl
scas
pop
pop
lock
gs
push
dec
xchg
mov
ds
js
mov
pushl
push
push
mov
jl
adc
stos
add
test
call
push
xor
or
cmp
arpl
lds
pop
xor
jmp
ljmp
jbe
and
cmpsb
fs
aaa
add
ljmp
nop
xlat
jnp
lea
sbb
jge
lcall
insb
and
mov
mov
push
push
push
scas
call
loopne
lods
jmp
pop
inc
test
hlt
scas
xchg
enter
mov
clc
push
fildll
lock
mov
push
cs
data16
xchg
pop
pop
pushl
ficoml
out
cmp
push
jns
jbe
mov
imul
add
movsl
out
loopne
cmp
dec
loopne
and
dec
inc
aam
fstl
jmp
jb
hlt
xor
aaa
je
outsb
scas
cmpsb
cmp
sbb
jge
fistl
adc
decl
push
pop
out
es
call
cmp
and
jge
fldenv
inc
icebp
jb
sbb
pusha
mov
call
xchg
push
jl
ficoms
cmp
subb
repnz
outsl
mov
jmp
cmp
into
cld
jle
dec
cmp
mov
add
jecxz
lret
outsl
aam
mulb
xor
pusha
scas
add
lcall
pop
dec
pop
out
and
dec
xor
pop
icebp
in
sub
es
dec
mov
mov
mov
pop
test
test
mov
daa
je
ljmp
scas
mov
add
dec
mov
out
xchg
sbb
das
test
push
jg
pop
xor
fnsave
mov
sbb
ja
das
out
push
pop
scas
xchg
push
ja
lret
mov
jmp
inc
pop
mov
and
xchg
imul
jb
test
int
incl
daa
fwait
pop
push
sub
and
fucomi
in
incl
push
in
gs
data16
test
mov
lods
mov
scas
inc
mov
push
out
filds
cmp
in
mov
int3
dec
lea
pop
xchg
cs
loope
fistps
sbb
arpl
pop
in
xchg
and
lock
ja
push
inc
jle
xlat
loope
adc
cld
loop
mov
outsb
mov
push
andl
mov
out
and
sub
mov
jns
stc
dec
ljmp
dec
cmp
jp
out
popf
push
int3
or
lcall
cmpb
adc
xchg
out
jne
outsb
xor
xchg
xlat
iret
sarl
dec
sbb
pushl
mov
mov
scas
hlt
ficoml
or
sbb
ljmp
inc
and
je
push
test
jae
xor
stos
into
inc
lret
and
decl
add
push
xor
push
bsr
mov
aaa
jmp
inc
lods
dec
fs
cmp
incl
leave
lret
adc
stc
and
enter
jge
xor
imul
mov
ret
movsl
outsb
aad
mov
bound
mov
pop
jno
dec
decl
decl
icebp
sub
mov
cli
jo
icebp
xor
lea
dec
cs
je
popf
mov
pop
stos
rcrb
push
jno
adc
push
mov
mov
xchg
jmp
ds
cmp
xchg
xor
sahf
dec
dec
fidivrl
adc
pushf
sub
dec
cld
ror
pop
outsl
add
aaa
pop
dec
and
pop
cmp
jmp
into
jns
es
jnp
fs
jg
je
xchg
pop
pusha
sub
ljmp
insb
adc
mov
inc
call
call
adc
xlat
lahf
adc
jge
lea
push
add
mov
mov
add
incl
and
adc
jne
add
mov
popa
fldcw
mov
dec
adc
sar
jmp
mov
jmp
cmp
jns
sbb
jns
push
test
sbbb
jb
ljmp
or
ret
cmpsl
out
mov
fiaddl
in
add
jmp
and
flds
push
je
jg
int
loope
xor
mov
lahf
xchg
mov
rcl
in
in
push
and
and
sarl
cmc
mov
lcall
rolb
stos
mov
mov
xchg
and
das
push
push
les
xor
outsl
inc
add
in
mov
call
je
mov
movsb
adc
das
mov
aas
pop
mov
pop
out
or
in
fcmovb
cmpsb
jno
cltd
icebp
lods
mov
xchg
add
repnz
stc
cmp
insb
idivb
call
push
fisttpl
pop
push
mov
cmp
in
inc
push
jnp
jg
aam
loop
ffree
adc
fiaddl
lret
stc
cmp
jbe
jg
popa
decl
push
repnz
jne
lret
hlt
jbe
movsl
inc
sub
aam
xchg
sub
sbb
mov
mov
push
addr16
sbb
fiadds
mov
scas
mov
cmp
sbb
sbbl
test
pop
imul
inc
push
ljmp
in
fists
ret
insl
scas
mov
sbb
cmp
rcrb
mov
clc
test
inc
or
sub
xchg
leave
sub
leave
lcall
insl
ljmp
mov
out
and
scas
or
sbb
jp
adc
cmp
decl
xchg
fidivrl
jge
nop
fidivs
lods
xor
test
std
mov
dec
imul
inc
mov
mov
or
jg
jg
and
inc
sbb
inc
pop
add
jle
sbb
jbe
push
cmp
incl
loop
mov
pop
and
push
mov
dec
inc
xchg
cs
xchg
ljmp
mov
inc
dec
dec
jmp
add
push
repz
mov
idivl
imul
pushl
lea
scas
insb
cltd
pusha
mov
mov
imul
push
mov
push
stos
imul
ljmp
std
inc
data16
mov
aaa
into
xor
pop
mov
loopne
lret
push
xor
test
mov
andb
add
lcall
lock
fistps
push
sub
scas
pop
add
dec
mov
jg
cmp
jg
dec
les
add
lock
jg
pushl
pop
cli
test
jle
outsb
daa
push
add
add
movsl
and
call
decl
mov
bound
dec
mov
cmp
jo
sbb
ret
adc
imul
cld
ljmp
lods
dec
mov
out
mov
push
daa
mov
sub
xchg
es
fdivrl
lahf
call
lcall
mov
xchg
inc
sub
add
ret
in
sar
mov
mov
add
inc
aas
or
xor
jmp
iret
in
popa
scas
shl
jl
orb
xchg
mov
call
pop
pop
cmp
mov
clc
pop
mov
add
cmp
sar
decl
fldcw
lock
mov
push
sbb
mov
sbb
jmp
push
fildl
repz
adc
imull
mov
repnz
mov
shl
cmp
push
loope
adc
jno
subl
es
rorb
out
fistpl
pushl
les
lcall
add
cmc
jns
js
incl
sub
xchg
xchg
inc
inc
cmpsl
cli
mov
incl
pop
cmpsb
shll
pushf
and
push
test
lret
in
xchg
pop
mov
push
out
fidivl
roll
std
decl
mov
aas
aaa
push
adc
sub
fstpt
sbb
jg
mov
adc
in
jmp
xlat
cwtl
mov
pop
inc
leave
js
xor
adc
pop
ljmp
scas
cmp
fwait
ret
call
inc
push
imul
and
pop
loope
incl
sub
dec
outsl
lock
jmp
dec
out
sub
loope
mov
lods
mov
sbb
cmc
push
fldt
iret
add
movsl
fmulp
mov
push
fimuls
scas
cmp
repnz
cmp
xchg
mov
mov
outsl
mov
lahf
push
inc
test
rcll
test
lea
pop
mov
nop
mov
iret
mov
jnp
insl
sub
pushl
dec
push
pushf
pop
pop
jmp
dec
loope
imul
jns
test
repnz
sbb
jmp
mov
leave
jbe
add
sbb
xchg
sbb
shl
iret
sbb
ret
cmp
sarl
mov
xchg
imul
or
mov
adc
mov
imul
and
mov
cli
mov
ret
outsb
adc
jmp
loop
xor
xor
jp
sub
adc
mov
dec
and
mov
jle
mov
or
or
lds
fs
inc
mov
nop
mov
jae
divps
clc
mov
jns
lahf
jmp
pop
add
pop
cld
or
mov
fisubrs
mov
outsl
sar
add
lods
adc
sub
daa
ja
or
mov
sub
fldenv
test
cmpsb
out
call
or
xor
repz
in
fcom
scas
jae
ljmp
adc
add
jle
inc
mov
adc
jecxz
lcall
dec
xchg
sub
inc
stos
pop
loop
mov
aam
sbb
mov
jg
xchg
aam
and
mov
pushf
mov
xor
fidivrl
incl
or
mov
out
call
pushl
insl
test
push
movsb
fsubl
test
xor
xor
sarb
lcall
shrl
cwtl
out
ds
int3
lret
push
fwait
mov
nop
mov
jg
sbb
paddsb
fnsave
stos
je
fsubl
rolb
ljmp
loope
jmp
clc
dec
xchg
lret
in
mov
divl
test
les
js
jg
jg
or
xchg
dec
ljmp
icebp
ficomps
xlat
add
sub
or
clc
mov
aam
gs
fs
mov
xor
sarb
loop
out
ret
ljmp
daa
rep
stc
dec
pop
pushl
or
hlt
fsubl
mov
push
push
dec
test
fisttpl
add
push
and
jg
mov
sbb
je
aam
add
mov
outsl
mov
xchg
sbb
or
inc
push
stos
adc
pushl
jp
jmp
lods
outsl
fnstcw
add
adc
push
ljmp
ja
mov
sahf
iret
mov
test
mov
mov
shr
ret
pop
inc
incl
test
pop
mov
cltd
pop
adc
sub
cmp
xor
jae
out
xor
mov
arpl
bound
sub
adc
mov
jmp
cmp
pop
push
lret
cmp
jg
inc
aad
inc
ret
leave
push
outsl
sbb
mov
sbb
adc
lds
fisubrs
pushl
mov
lret
mov
pop
cmpb
and
lock
cld
xorl
push
jmp
xchg
xchg
cmp
cmp
mov
jne
cmpb
and
inc
cli
mov
lcall
ljmp
push
mov
ljmp
inc
jbe
dec
pop
jbe
cmp
sub
push
mov
fistpll
jg
sbb
jge
pop
or
jge
dec
mov
sbb
stc
hlt
push
and
jmp
jne
pushf
stc
inc
pop
pop
test
popa
arpl
repz
sbb
andl
dec
push
add
jne
cld
mov
pushf
sbb
adc
mov
xor
jmp
les
hlt
lahf
and
mov
mov
test
jmp
pop
in
pop
cmp
dec
jge
fsubl
cwtl
inc
lcall
cmp
adc
push
mov
leave
or
insb
cmp
or
sub
lcall
add
dec
stos
mov
dec
ljmp
push
xlat
loop
cli
repz
push
bswap
decl
fisttpl
or
push
jmp
push
or
loope
mov
mov
les
or
idivb
inc
insl
pop
or
sbb
movsl
mov
cmp
adc
mov
add
cltd
hlt
ljmp
insb
loope
shll
jecxz
repnz
ljmp
outsl
lret
xor
mov
lcall
emms
mov
and
dec
push
jns
js
inc
lcall
jmp
add
outsb
mov
int
xor
int
jle
cmp
push
jne
mov
jb
jl
dec
cmp
xchg
mov
add
jo
or
sbb
pop
or
mov
mov
pushl
mov
mov
xlat
inc
test
aaa
pushl
adc
xor
mov
mov
mov
sub
js
ljmp
push
test
or
xchg
div
dec
ds
or
lock
jp
incl
mov
sbb
mov
les
movsb
shlb
cltd
in
jg
icebp
dec
sbb
ljmp
inc
cmpsl
jae
outsb
sahf
xchg
lahf
orl
mov
ja
push
imul
jg
scas
xorl
jb
into
cmp
imul
xor
subl
cmp
enter
lock
inc
cmp
rol
or
loopne
cld
mov
enter
insb
inc
mov
xchg
loope
mov
push
mov
pop
in
cmpsb
jae
cmp
fcomps
mov
and
jo
call
adc
xchg
movsl
and
cmc
rolb
jl
push
lret
lods
push
cmp
imul
pop
ljmp
push
xor
les
fisttps
add
enter
decl
adc
in
inc
mov
pop
lods
xchg
jge
or
scas
int
pop
clc
inc
mov
or
icebp
movsb
mov
and
xchg
or
ljmp
lock
lods
mov
fiaddl
test
pop
andb
ds
sti
jmp
dec
inc
cmp
icebp
push
setno
decl
pop
rorl
jnp
jbe
sub
iret
adc
xchg
test
fidivs
ret
incl
xchg
xchg
dec
call
dec
into
sbb
xor
scas
adc
xchg
pushf
cmpb
inc
dec
pop
and
jl
jl
mov
loop
stos
pop
into
aad
stos
fdivrp
decl
jl
cmp
mov
push
xchg
mov
out
dec
push
cmp
lret
call
ret
pop
cmpsb
pop
add
mov
add
adc
call
push
cli
xchg
cli
push
xchg
int3
xchg
mov
js
outsb
mov
pop
ljmp
sti
ja
xchg
dec
test
xor
mov
adc
mov
data16
femms
mov
jno
insb
xor
inc
mov
aas
stc
arpl
ljmp
aas
jp
and
insl
inc
adcb
std
jg
scas
xor
jae
aad
aas
in
push
add
adc
call
mov
sbb
lahf
push
push
dec
push
lcall
mov
cltd
daa
jno
notb
push
sub
call
xor
inc
fcoml
mov
mov
call
incl
or
mov
fs
lret
call
test
std
lcall
push
call
pusha
adc
sbb
jae
hlt
xor
pop
ret
clc
pushl
sbb
fisttpll
xor
aad
push
cmp
pop
dec
cltd
leave
loop
jg
lcall
fnstcw
fstpl
adc
shll
or
add
call
cli
das
add
enter
cwtl
push
jl
add
int3
dec
outsb
aam
add
shrb
mov
lahf
rcl
leave
out
mov
std
inc
stos
into
test
mov
mov
push
addr16
inc
lcall
cld
cltd
dec
orl
mov
outsl
icebp
decl
icebp
xor
fdivr
repnz
push
mov
loop
xchg
cmpsl
pop
push
adc
loope
pop
adc
fistpll
sub
add
or
mov
mov
dec
mov
jo
dec
xorl
fildll
aam
xchg
fwait
jnp
repz
push
cmp
cs
ljmp
pop
mov
ljmp
xor
mov
push
or
adc
pushl
out
xor
push
shrl
cs
cmp
shll
xchg
decl
push
sahf
or
lcall
mov
movb
pushl
jp
sbb
repz
test
mov
mov
data16
je
lahf
pop
add
or
imul
mov
dec
aas
and
ljmp
test
aas
xchg
sub
in
mov
push
ds
lahf
push
jl
pop
sbb
ret
mov
daa
loop
jnp
hlt
sahf
cmp
pop
das
loope
jg
xchg
mov
and
andl
cli
das
std
jg
out
cmpb
leave
lea
imul
test
jg
pop
jbe
or
cmc
dec
fstpl
subl
sub
cli
lcall
xor
out
push
fcmovb
push
mov
test
mov
fistpll
inc
sbb
jmp
push
in
stos
jns
jo
leave
stos
mov
stos
lcall
and
pop
add
iret
and
lock
lcall
test
mov
dec
and
shr
mov
xor
lret
outsb
mov
xchg
aam
int
jg
lea
ja
pop
addr16
jmp
lret
mov
lret
movsb
sbb
or
jg
jno
fsubl
out
and
dec
rolb
push
outsb
ljmp
mov
insb
fistl
ja
dec
cmp
dec
or
pop
lcall
negl
xor
jecxz
mov
sarl
loope
in
enter
cmp
inc
ss
and
inc
insl
cmp
mul
xchg
bnd
jg
sar
les
imul
insl
loopne
and
arpl
jge
lret
mov
mov
testb
cmpsl
push
fidivrl
callw
cmp
push
xor
lods
mov
mov
pushf
dec
push
pop
insl
add
popa
pushl
test
fsubrl
mov
push
xchg
and
mov
push
sub
mov
adc
xor
movntps
xor
adc
ljmp
adc
dec
int3
sbb
adc
pusha
test
mov
dec
fs
mov
inc
std
lcall
imul
xorb
push
mov
sar
push
fdivl
inc
imul
xchg
xor
scas
dec
push
stos
and
call
pop
sub
lea
movsl
fcomps
decl
test
popf
shlb
fs
dec
stc
enter
mov
incl
xor
out
mov
adc
dec
inc
testb
mov
push
loop
dec
pop
cld
lds
sub
sbb
mov
inc
cld
mov
popa
dec
jl
das
inc
test
inc
mov
decl
pop
jmp
inc
lea
push
repz
mov
and
int
cli
cmp
ljmp
cld
adc
sub
push
cmpsl
jno
pop
mov
mov
xchg
cmpsl
mov
pop
pushf
roll
fdivs
shl
call
cwtl
es
dec
and
xchg
icebp
push
jmp
movsl
sub
lret
scas
clc
dec
mov
mov
arpl
cmp
sti
mov
shrb
cmp
pushl
test
sub
dec
mov
std
fs
mov
scas
test
decl
sbb
out
cmpsb
pusha
fs
and
jl
dec
or
inc
fistpll
xchg
stc
leave
jno
or
ds
add
fwait
dec
outsl
sub
or
mov
jo
push
lcall
rcll
lcall
inc
loopne
push
ljmp
stos
jo
jg
xor
aad
fdivl
push
dec
inc
cli
aad
mov
inc
rorb
dec
mov
pop
testl
jo
pop
xchg
dec
test
test
in
sub
ljmp
adc
sub
push
pop
adc
das
dec
xchg
or
push
insl
xchg
mov
sti
push
jns
push
shl
aad
ret
and
dec
roll
imul
sti
or
sbb
push
jmp
lods
or
mov
jae
pushf
andl
jmp
inc
ret
adc
div
enter
jg
std
pushl
mov
xor
ret
push
stc
in
adc
ret
decl
push
mov
stos
addr16
jp
cld
orb
sub
fs
sbb
das
std
incl
pop
cmpsb
out
jns
add
jg
adc
test
sub
imul
rcrb
iret
mov
inc
mov
and
sbb
subl
insl
adc
push
dec
cwtl
movl
mov
into
mov
dec
push
cmpsl
imul
loop,pn
shrl
call
jnp
les
daa
out
popf
scas
leave
jmp
stos
push
sbb
jmp
xchg
add
cmpsl
test
mov
in
mov
test
push
push
lods
pop
mov
out
jg
pop
call
mov
dec
sti
call
lcall
sub
mov
cmc
xchg
push
push
xchg
pop
call
outsl
test
push
pop
adc
pop
mov
test
or
movl
mov
int3
cmp
daa
xchg
mov
pushl
test
sub
sub
cmp
pop
fsts
mov
sar
jns
and
jl
in
or
mov
aas
xorb
in
ffree
decl
scas
push
xor
scas
lcall
movsl
daa
sbb
outsb
push
pop
js
lcall
mov
add
jno
test
ret
mov
loop
es
jmp
sahf
mov
clc
cltd
mov
ljmp
mov
leave
add
pushf
xor
rol
add
push
ljmp
std
or
xchg
test
and
add
jg
lock
loopne
cs
jp
ds
outsb
pop
idiv
pushl
jecxz
pushf
cmc
es
lret
adc
dec
out
and
inc
stc
imul
aas
repz
jecxz,pt
pop
leave
jae
incl
cmc
js
mov
test
sub
adc
or
mov
add
push
push
jb
and
pushl
stos
mov
shll
in
mov
sti
mov
nop
mov
mov
add
push
out
std
add
xchg
fdivs
ret
std
aaa
movsl
mov
mov
ret
push
pop
idiv
incl
mov
add
lcall
lret
out
push
call
dec
xor
int3
cmc
jle
mov
push
mov
mov
mov
xorb
jnp
loop
jg
ret
and
popf
movsl
jne
sbb
lret
sub
test
lea
add
mov
pusha
xchg
ljmp
jg
xchg
je
in
pop
sbb
sbb
cmp
int
std
imul
and
lahf
or
ljmp
jne
xchg
push
enter
cmp
mov
push
jmp
vshufps
fistpl
mov
icebp
fildll
lock
sbb
xchg
loopne
lcall
adc
ficoms
inc
cli
les
mov
mov
cmp
pop
inc
call
call
sti
mov
mov
push
pop
decl
popf
icebp
mov
cmpsb
inc
mov
xchg
cmp
test
jg
jno
jns
mov
std
jno
add
push
pushl
mov
lds
push
outsl
pop
rcrl
push
lock
lock
mov
in
lcall
or
or
xchg
jg
inc
lcall
cmp
test
mov
xchg
pop
test
xchg
mov
outsl
cmc
in
inc
xchg
pusha
jb
les
dec
sti
lcall
pushf
call
call
test
xchg
pop
icebp
vmwrite
shlb
outsl
lock
jg
stos
repz
out
cmp
outsl
negb
shrl
aaa
mov
es
sti
shlb
test
xor
addr16
inc
fcmovnb
fidivrl
pop
imul
adc
xchg
test
ljmp
ja
or
add
data16
jae
fsts
mov
and
loopne
lahf
aam
mov
les
out
out
mov
into
or
repz
mov
xchg
inc
mov
pop
xor
inc
icebp
push
adc
and
hlt
mov
repz
sub
ss
xchg
jnp
loope
mov
gs
xchg
push
mov
out
rcrb
mov
lcall
fbld
inc
dec
or
ds
ret
cli
mov
push
mov
movsb
sub
add
daa
inc
mov
pop
arpl
cmpsb
xor
lret
xor
pop
insb
mov
jg
sub
and
fcoms
dec
sbb
cmp
fimull
sub
incl
stos
xchg
mov
je
or
mov
add
lock
mov
pushl
daa
push
xor
xlat
jnp
mov
shrb
mov
data16
mov
cltd
dec
stos
mov
lea
sti
dec
ja
decl
rcpps
push
insb
int3
fs
fildll
jg
xchg
mov
lods
mov
jp
scas
subb
int
add
das
and
pop
jge
push
adc
icebp
jp
mov
imul
dec
add
jb
es
test
addr16
icebp
mov
xchg
push
mov
imul
decl
daa
daa
dec
loope
popl
repz
cmp
adc
decl
xor
fwait
ret
mov
or
cmp
push
jnp
loope
sbb
xchg
mov
add
insl
xor
jmp
xor
nop
adc
jecxz
test
adcb
sub
and
lcall
pop
test
insb
inc
js
shrb
ja
xchg
aas
jg
inc
push
jo
inc
lret
sarl
inc
sub
inc
popf
inc
push
fnstsw
ljmp
and
jnp
outsl
cmpb
jecxz
roll
mov
mov
in
pop
xor
xchg
in
inc
add
insb
add
jae
inc
test
lock
fsubrs
add
leave
xchg
sahf
inc
ds
mov
jg
outsb
pusha
icebp
push
mov
in
loope
mov
lock
daa
lea
mov
std
out
call
xchg
and
adcb
mov
test
das
hlt
decl
dec
mov
ss
cmpb
xchg
incl
addr16
mov
ret
aam
mov
adc
je
or
inc
aam
cltd
ss
fucomip
test
add
push
jno
xchg
jge
push
in
out
mov
decl
push
mov
cmp
inc
ss
ret
sub
inc
push
push
repnz
xchg
add
add
push
or
movsb
adc
stos
mov
cmc
shll
lret
or
jmp
sub
aas
pop
push
fadds
imul
es
ja
mov
jl
ret
ret
add
sahf
cmp
pushf
jecxz
repz
dec
mov
xchg
clc
mov
add
or
push
fisubs
cmp
mov
add
mov
add
xchg
incb
or
pushl
mov
fwait
in
push
in
stos
mov
ret
jg
jecxz
lahf
stos
ss
jns
add
shlb
les
mov
push
inc
je
pop
sub
pop
shlb
outsl
mov
incl
test
pop
dec
int3
xor
xchg
or
inc
mov
sbb
in
movsl
xchg
mov
and
adc
mov
in
jo
insb
mov
out
into
cmp
call
cmp
cmpsb
nop
or
sub
pop
nop
xor
dec
cmp
scas
add
stc
sahf
je
sub
cmp
movsl
inc
jg
jg
ss
repz
lea
icebp
enter
in
jno
or
mov
fildll
das
imul
cmpsb
mov
fdivrl
push
nop
and
out
decl
dec
movb
and
inc
out
imul
sbb
jns
movsb
enter
inc
xor
fstl
cmpsb
add
lds
in
sbb
push
sar
decl
std
ret
or
in
inc
mov
and
lret
fcomps
incl
jecxz
pop
adc
imul
xor
sub
lods
decb
shrl
cltd
insb
inc
ds
jg
jo
decl
adc
aaa
push
push
aad
cwtl
xor
fwait
mov
imul
sub
ljmp
rorb
push
imul
jo
incl
add
sub
xchg
jp
jg
mov
ficomps
ja
fsubrp
shlb
lret
leave
rcrb
cwtl
js
icebp
mov
aaa
iret
xor
inc
mov
push
and
push
ret
sbbl
es
mov
dec
and
xor
push
inc
mov
decl
and
mov
sar
in
fwait
pop
add
jg
xchg
dec
addb
in
fstpl
mul
decl
leave
pop
out
mov
loop
aaa
imul
xor
jg
pop
stos
lcall
sar
push
aaa
test
decl
incl
or
inc
lods
pop
call
test
mov
push
mov
decl
adc
xor
loop
dec
cmpsl
sub
decb
call
orl
sbb
xchg
repnz
inc
fildll
outsl
pop
loop
out
mov
jmp
cmpsl
or
sub
out
push
arpl
outsl
loop
cld
ret
mov
pop
clc
mov
in
inc
jns
jne
popf
xchg
xchg
hlt
sub
test
jg
fldenv
mov
in
fistl
cmpsl
iret
fcmovu
mov
movsl
outsb
arpl
jmp
ficoms
stos
mov
xchg
bound
lea
repnz
and
aam
outsl
leave
mov
inc
dec
pop
hlt
xchg
push
dec
pop
jecxz
sarl
lods
ds
sub
scas
scas
lcall
ret
movsl
sbb
sbb
mov
ljmp
mov
loopne
dec
and
data16
inc
sbb
jbe
rcrb
jmp
xchg
inc
outsb
dec
in
mov
lods
mov
lods
aam
jnp
flds
das
add
lcall
mov
shll
andb
sub
fadds
add
sbb
mov
mov
xchg
rcrl
mov
dec
push
xor
ljmp
push
sbb
aad
push
pop
mov
mov
pusha
inc
adc
sbb
jg
xchg
rcr
pop
mov
int
mov
stos
in
sbb
aas
sbb
decl
mov
dec
mov
movsb
neg
gs
outsb
fists
jecxz
shl
aas
jle
ljmp
ljmp
dec
cmp
push
push
fsubrs
cmpsb
ret
movsl
and
jnp
dec
cmp
ljmp
lock
dec
mov
call
sub
xchg
cwtl
push
js
mov
sub
xrelease
addr16
cmc
out
int
push
mov
decb
test
push
push
aaa
and
pop
jb
dec
or
ret
outsl
jns
test
jmp
jmp
lods
add
rcll
lods
add
std
adc
ljmp
cwtl
inc
mov
mov
stos
mov
cmp
pop
and
ljmp
dec
xor
xchg
stos
jb
ss
ret
aas
les
mov
jl
les
pop
and
jb
ret
xchg
gs
jecxz
rol
fistpl
incl
mov
mov
mov
and
in
ud2
dec
inc
test
loope
mov
lds
jg
push
scas
pop
mov
mov
xlat
xchg
inc
jl
clc
clc
jle
hlt
notb
sbb
pop
cld
call
and
call
addr16
sub
sub
dec
and
lods
add
sub
jg
jo
cmpsb
gs
pushl
dec
stc
out
sbbl
mov
ja
cmp
inc
fcompl
sar
pushl
lea
xchg
mov
or
push
mov
cmp
inc
aaa
and
fs
lcall
jecxz
cli
ds
and
call
mov
scas
incl
add
cmp
mov
fdivr
filds
pop
movsb
std
push
mov
pushf
push
std
mov
push
cli
or
insl
dec
lea
call
aaa
xchg
ret
jmp
leave
outsl
out
adc
jnp
xchg
mov
inc
mov
decl
mov
enter
je
pop
cs
pop
jg
dec
jbe
and
in
mov
mov
cwtl
mov
pop
ljmp
cmp
cwtl
mov
mov
push
cmp
and
cli
mov
cli
jbe
jnp
mov
dec
add
inc
and
call
movsl
ret
push
fidivrs
loopne
mov
jl
mov
lea
ret
mov
dec
inc
mov
jg
std
or
popa
sbb
call
iret
in
sar
mov
inc
xchg
addr16
mov
fnstsw
movsb
movsb
add
xor
shl
push
xor
rcrb
test
shl
push
push
mov
mov
jecxz
orb
push
lods
loopne
test
add
mov
push
pop
cli
push
mov
addr16
addr16
mov
mov
jp
jne
jmp
lcall
test
call
cmc
call
add
popf
add
shrb
mov
incl
pop
xchg
test
push
inc
shl
lcall
sub
iret
jo
mov
inc
xor
stos
dec
dec
sub
insl
int3
inc
mov
pop
and
lahf
push
push
in
push
dec
inc
out
cltd
jnp
cmp
pushl
test
jl
adc
cmp
test
jg
cmp
sti
loopne
jmp
lods
inc
sub
mov
bound
mov
sahf
subl
decl
scas
popa
inc
xor
sub
mov
mov
and
ljmp
add
popf
pushf
mov
pop
loop
clc
loope
mov
cmpsb
or
js
inc
in
call
sbb
mov
dec
out
inc
jns
cli
ss
add
mov
lea
std
mov
rcll
call
lcall
lea
iret
mov
mov
xchg
mov
xchg
das
cmp
inc
aam
push
stos
mov
jo
and
loope
cltd
mov
out
cmpsl
mov
pop
mov
ljmp
sbb
out
push
jo
je
int3
push
stc
std
adcl
call
es
aas
add
aad
pop
and
jne
sbb
test
sbb
ds
dec
xorb
inc
inc
dec
lods
cs
test
add
incl
mov
mov
sbb
mov
stos
ficomps
ret
jge
enter
xorb
or
lcall
dec
pusha
jge
xor
es
sub
inc
popf
loop
daa
repnz
jg
inc
bound
int
lahf
pop
leave
mov
pop
sbb
lcall
pop
lret
adc
inc
imul
test
and
push
adc
sub
pop
ljmp
push
icebp
je
stc
ret
sbb
xor
enter
cmp
decl
mov
xchg
xchg
jecxz
imul
mov
jmp
cmpsl
cmpsl
pop
icebp
lods
incl
xor
dec
cmp
in
hlt
and
std
cmp
ljmp
stos
in
popf
imul
or
mov
scas
push
xor
cmc
shl
pop
inc
xor
fs
lock
mov
daa
mov
iret
mov
decl
clc
pop
mov
adc
inc
fsubl
aam
jns
mov
lods
out
lods
cmp
push
xchg
push
xorb
into
popf
cmp
fs
jl
cli
pop
cltd
add
jg
add
rcr
mov
andl
loop
divb
lock
lahf
push
mov
jmp
movsb
inc
adc
add
lcall
cmp
sub
fisttpll
mov
addr16
leave
jl
xchg
and
incl
rorb
mov
test
xorb
push
rcr
cltd
lods
sar
jmp
inc
cmp
es
rolb
lds
dec
fdivr
pop
loopne
sbb
insb
sbb
xchg
xor
or
mov
jg
jp
lods
cmp
pop
lret
ss
mov
add
cmp
cmp
decl
ss
in
clc
xchg
dec
idivl
jb
lret
cmp
xor
decl
mov
in
mov
mov
lcall
cmpsl
xchg
outsb
jle
mov
mov
cmpsb
dec
aas
insl
pop
inc
push
xchg
push
jnp
xchg
xchg
mov
pushl
fcmove
fstps
mov
test
data16
sahf
mov
jg
inc
adc
or
sub
mov
sbb
or
mov
addr16
clc
dec
call
add
aaa
adc
roll
mov
jns
ljmp
enter
mov
les
shl
roll
jns
adc
dec
stos
jb
jbe
push
pop
pop
push
ljmp
fists
mov
add
leave
push
fidivrs
lods
mov
sbb
icebp
mov
roll
gs
fwait
inc
xor
sbb
decl
mov
movsb
loop
aad
xchg
stos
push
enter
pop
lods
aam
adc
adc
mov
and
movsww
sar
ljmp
stos
push
jns
xlat
adc
jp
scas
xor
mov
scas
jne
cltd
insl
in
mov
xor
cmp
dec
push
push
ret
pusha
nop
cmpl
divl
jbe
loopne
sub
add
sti
lcall
jg
jmp
adc
je
popf
push
out
call
or
jecxz
fstpt
sbb
int3
inc
inc
xchg
xor
mov
and
enter
mov
xchg
sbb
loopne
and
int
cmp
fistpl
out
int
mov
add
sahf
and
mov
lods
int3
xchg
iret
out
addb
lea
stos
add
push
inc
stc
scas
push
out
mov
aam
xchg
test
bnd
push
aaa
xchg
xchg
pop
cmp
jmp
add
inc
xor
pop
es
ja
mov
and
outsl
aas
mov
stos
pushl
pop
mov
nop
pop
repnz
into
jbe
loopne
xlat
mov
sahf
aaa
lahf
inc
in
fucomip
cltd
mov
inc
add
into
sbb
add
mov
test
mov
lcall
std
cld
jae
adc
inc
mov
addr16
test
incl
inc
lcall
jmp
fs
and
sbb
and
lods
test
inc
xor
lret
out
divb
mov
shlb
dec
sub
xchg
ds
nop
sbb
sub
cltd
in
mov
insl
out
jg
inc
fimull
sbb
pmaxub
lcall
sarb
cmc
adc
call
cmp
aad
pop
inc
mov
loopne
mov
push
aam
lret
push
shrb
pop
dec
mov
fsubl
mov
mov
inc
call
rep
testb
mov
cli
call
mov
jp
xlat
or
and
jp
mov
ljmp
add
mov
pop
push
iret
push
repz
mov
pop
das
lock
movl
in
mov
mov
movsl
xchg
xor
mov
icebp
das
sub
scas
ficoml
fsubrs
cmp
pop
sahf
arpl
push
jne
xchg
push
add
cmpb
sarb
jg
adc
mov
jle
fucomi
or
push
sbb
mov
jg
add
lcall
test
pop
repz
call
sub
lock
test
test
adcb
add
clc
ljmp
mov
test
pushf
cli
mov
repz
jg
arpl
cmpsl
adc
sbb
inc
popf
jle
push
dec
dec
sub
sbb
call
fcmovu
cmp
dec
inc
mov
hlt
mov
adc
inc
das
xchg
push
aad
pop
and
jnp
nop
sbb
mov
mov
stos
xor
data16
xor
sub
sbb
push
je
rorl
ljmp
jno
adc
popa
mov
test
outsl
jno
incl
cmp
imul
hlt
fdivs
mov
dec
sub
jae
mov
add
cmp
mov
pop
dec
loopne
jp
pop
jg
mov
dec
push
dec
daa
mov
adcl
or
push
arpl
das
aam
jmp
cmc
adc
negb
lcall
sahf
pop
mov
out
cld
repnz
repz
inc
xchg
stos
mov
add
dec
or
incl
subl
push
jae
sub
shl
sbb
repnz
icebp
lods
push
dec
lea
mov
es
mov
jmp
add
popf
adc
ljmp
xchg
fistpll
jl
xor
mov
dec
sbb
aas
hlt
xchg
jg
sahf
gs
and
sub
xchg
pop
adc
out
mov
ret
xor
mov
inc
pop
sarb
pop
repnz
mov
mov
popf
movsb
es
rcl
fadds
mov
xchg
dec
mov
and
addr16
or
xchg
fcmovnb
loopne
lds
push
mov
movsb
jge
movsl
into
out
int3
filds
dec
pop
push
cmpsb
movsl
or
mov
xor
lods
adc
ljmp
sub
dec
popf
negl
sar
stos
xor
repz
xadd
aad
lret
loopne
inc
fldcw
addr16
push
cmp
clc
mov
pushf
xor
les
call
hlt
test
jl
mov
mov
cmc
popa
or
lcall
aaa
out
test
mov
mov
xchg
leave
into
fldenv
jmp
xchg
adc
or
mov
ret
inc
fmuls
call
push
add
cmpsl
cli
mov
lret
mov
pop
pop
jmp
pop
push
popa
jle
pop
loop
aaa
iret
jns
or
push
cmp
sbb
push
pop
jg
decl
shll
xchg
jmp
pop
ret
cmp
ljmp
cmc
jmp
cmp
mov
lds
filds
and
popf
adc
jle
adc
inc
nop
xchg
cltd
lcall
call
push
pop
loopne
ljmp
push
bnd
xchg
pop
mov
imul
dec
or
mov
adc
jecxz
or
jg
jae
fmull
dec
scas
call
push
std
call
aaa
sahf
dec
in
in
aas
dec
adc
inc
pop
cmp
mov
scas
mov
cmpsb
push
mov
inc
and
fs
into
jp
jmp
popf
loope
mov
out
add
mov
insb
sbb
imul
std
jmp
sub
lods
rcrb
ficomps
aas
mov
sub
scas
adc
push
mov
mov
inc
cld
adc
add
ds
call
jmp
ret
mov
xchg
push
mov
outsb
cmp
push
insb
jle
sub
or
or
jg
shll
mov
subl
sbbb
inc
pop
adc
push
daa
lock
mov
fidivl
push
jmp
mov
push
loop
push
stos
std
sti
cs
ljmp
xchg
add
sub
fistl
jb
outsl
fcmovnbe
faddl
adc
outsb
pop
rcr
push
lcall
cli
cmpsl
cmp
fmul
adc
daa
mov
int3
cltd
icebp
gs
mov
outsl
inc
push
decl
std
int
mov
sub
push
xor
std
inc
mov
enter
incl
out
es
dec
insb
negb
xor
jb
dec
cld
aam
jecxz
mov
sbb
stc
mov
aam
insl
jne
pop
jmp
push
lret
xorb
std
xor
mov
call
mov
push
jp
pop
or
es
jmp
inc
outsb
out
aas
lea
sti
dec
rol
mov
mov
movsb
cld
mov
repnz
cmc
push
jns
dec
insb
stos
sub
pop
xlat
xor
jns
dec
push
mov
mov
hlt
jnp
cld
and
mov
pop
xor
push
ds
fstp
mov
and
loope
xchg
cmp
stos
push
ret
sbb
fdivr
ljmp
lret
fsqrt
push
xor
xor
xor
and
out
mov
icebp
mov
call
rcrl
pop
les
pop
out
pop
bound
out
lods
xchg
lcall
push
lret
repz
lcall
jbe
mov
sbb
popa
dec
aad
call
mov
add
sub
mov
mov
mov
fwait
enter
lcall
mov
test
repz
adc
aam
subb
ret
decl
sub
in
add
xor
push
fwait
in
dec
sub
incl
cmp
xor
adc
mov
ljmp
inc
cmpsl
std
sahf
pop
inc
sub
lcall
call
dec
je
pusha
insl
pop
jmp
adc
sub
xchg
ljmp
out
aas
and
adc
or
mov
sub
adc
jg
arpl
hlt
roll
test
jle
xor
es
test
mov
test
outsb
xchg
sub
sbb
loope
call
lret
mov
mov
into
sub
aad
xor
addr16
addr16
xlat
call
repnz
jmp
mov
pop
loop
dec
jg
sbb
adc
xchg
loop
ds
pusha
hlt
stos
aam
pop
add
and
decl
sub
lret
fisttpl
mov
cld
scas
adc
fdivs
jl
xlat
mov
mov
add
add
mov
data16
push
pop
aas
mov
push
xor
inc
icebp
addb
ljmp
mov
into
mov
nop
xchg
lret
and
mov
jg
pop
movsb
pusha
inc
mov
mov
ja
inc
xlat
cmpsl
popa
insb
mov
mov
dec
sub
inc
insb
pop
xor
in
imul
cmpsl
cld
push
mov
sar
out
sub
or
dec
push
jae
movsl
or
mov
pop
and
adc
push
dec
pop
xor
fs
popa
adc
mov
stos
sub
xchg
std
imul
sahf
call
cld
dec
push
pop
inc
lods
jge
cmp
xchg
aaa
jg
clc
ret
decb
data16
loope
fistpl
cmp
mov
and
div
into
xor
loope
loopne
aad
scas
aaa
and
push
cmp
jo
and
dec
mov
jg
xchg
pop
js
ss
pop
sbb
sub
loop
or
mov
ss
pop
add
add
lock
loopne
fdivl
xchg
cmp
ss
sub
adc
pop
xor
add
push
push
lret
adc
std
xchg
lret
mov
ljmp
test
cld
push
popa
lods
ljmp
imul
and
jg
xor
fdivl
inc
jbe
inc
rclb
jge
imul
ljmp
push
mov
addb
outsb
pop
or
xchg
jle
fwait
jne
test
idiv
decl
jb
and
fildl
lock
daa
insl
xorl
and
aaa
dec
lods
ret
pop
dec
push
sbb
mov
in
inc
mov
sbb
or
sbb
sbb
pushl
pop
out
les
pop
dec
push
or
fmull
das
dec
mov
mov
fcmovne
call
incl
fidivl
xchg
sub
test
out
sub
pop
outsb
xor
test
in
jg
or
add
cli
xor
stc
test
lock
cwtl
sub
xor
inc
sbb
fcmovu
pop
insb
lret
lods
sub
push
xor
fsts
dec
mov
jmp
jae
jmp
inc
cwtl
hlt
push
xchg
insl
shll
xor
loop
sbb
mov
imul
ljmp
data16
lods
dec
mov
outsb
push
or
addb
lcall
pop
incl
push
popf
les
xor
shr
test
fnstenv
xchg
int
and
add
testl
ds
sbb
test
int3
jle
stc
icebp
ljmp
les
int3
loopne
sub
mov
out
loopne
out
sbb
decl
aas
adc
mov
imulb
pop
out
sti
sbb
cld
decl
xorl
jbe
sbb
pop
mov
sub
xchg
pop
xchg
or
outsl
or
cmc
add
insb
mov
mov
in
pop
jecxz,pn
sbb
leave
in
lock
sub
sub
mov
addb
xchg
iret
fmuls
das
sti
jnp
push
and
arpl
imul
mov
and
mov
lcall
cld
mov
push
aam
in
clc
or
sbb
fwait
pop
lret
xor
xor
loop
push
aas
inc
jmp
cmp
cmp
adcl
pushf
sub
or
jmp
pop
stc
in
pop
jne
into
push
fcoml
add
xchg
test
lea
mov
add
inc
aaa
rol
jo
push
pop
decl
cltd
pop
fnstcw
les
fdivrs
out
mov
ljmp
push
dec
lods
dec
jnp
sbb
and
mov
clc
inc
or
fldl
push
decl
jne
pop
addl
and
pop
pop
pushf
outsb
pop
jge
jne
jp
and
mov
les
pusha
in
ret
aas
pop
sbb
incb
sahf
lcall
filds
iret
aaa
adc
dec
andb
ret
mov
jp
in
scas
adc
push
fs
sbb
loopne
jnp
adc
push
add
dec
arpl
inc
xorl
jb
sub
mov
stos
jnp
dec
jne
les
xchg
and
push
mov
sbb
xor
inc
inc
or
jmp
pop
ret
jns
adc
jle
lret
pop
mov
leave
mov
ficompl
addr16
in
jg
adc
cs
adc
int
cltd
imul
imul
ret
sub
cmpsl
add
jmp
lods
js
call
mov
inc
or
sbb
add
pusha
cwtl
rsqrtps
mov
loope
aam
jmp
leave
mov
push
aas
push
fisubrs
mov
in
sub
push
call
pop
aad
data16
mov
dec
fs
sahf
dec
or
outsb
enter
decl
jno
or
or
mov
xor
inc
push
les
cmp
lcall
std
in
outsl
loope
inc
adc
sbb
int
lret
xchg
cwtl
sbb
pushl
jge
inc
adc
cmp
mov
in
lds
pop
test
add
imul
mov
jmp
cmp
inc
pop
pop
mov
add
jae
dec
push
push
das
in
lcall
mov
in
or
sub
adc
iret
sbbl
lea
jmp
lcall
iret
dec
inc
lock
ljmp
jb
pop
mov
push
into
outsl
pushl
sub
jge
inc
pop
xor
stos
mov
dec
shll
cmpb
jmp
xchg
mov
mov
pop
out
inc
mov
lret
adc
js
mov
pop
jno
jge
arpl
xchg
sub
push
das
mov
es
xchg
mov
aas
inc
call
ljmp
aas
jb
fwait
stos
mov
lods
mov
popa
loope
sahf
push
incb
cli
jmp
push
xchg
sub
mov
adc
cmpsb
mov
cli
xor
jecxz
add
aaa
xchg
out
aad
add
jg
mov
pop
in
movsl
inc
mov
push
pop
pushw
nop
jge
sbb
mov
outsl
cld
fsubrl
arpl
pop
leave
fst
jno
mov
mov
gs
in
cmp
pop
pop
jmp
inc
sub
cwtl
mov
das
cmp
adc
pop
and
repnz
dec
mov
jmp
scas
movsl
inc
enter
jns
fisubs
pop
xor
push
push
aaa
push
js
push
push
add
ljmp
enter
sbb
mov
cmpsb
mov
fmuls
test
push
mov
call
jne
call
adcb
jae
mov
stos
lahf
or
pop
fsubrl
int3
mov
xchg
pop
jg
jmp
pop
jbe
repnz
cs
jge
sbb
sub
jle
push
mov
mov
adcl
xchg
pop
inc
xchg
cltd
call
or
loopne
or
sar
decl
xchg
lcall
cmp
out
sub
out
aas
lahf
push
mov
xor
movsl
jg
or
mov
inc
out
or
rorb
inc
mov
loopne
mov
test
movsl
je
xchg
decl
fs
or
cmpsb
dec
sti
cmp
sub
pop
mov
cs
mov
fwait
incl
addr16
dec
into
xchg
mov
pop
push
call
inc
adc
cmpsb
rcl
daa
inc
cltd
lret
cmp
pop
aaa
push
cmp
jb
xchg
pop
push
test
mov
mov
dec
cmpb
icebp
ds
mov
push
cwtl
dec
lret
mov
mov
mov
lcall
mov
les
clc
push
inc
mov
xchg
daa
test
cmpsl
insb
jb
aam
arpl
js
mov
enter
mov
sbb
fistl
cld
jg
lcall
inc
pop
clc
mov
adcl
cmp
jnp
testb
mov
popf
cmc
xchg
dec
xchg
jle
xchg
outsl
inc
and
pusha
sbbl
les
jno
xchg
aaa
pcmpeqb
cmp
push
cmp
enter
sub
dec
xor
lods
add
pop
clc
pushl
ljmp
bound
test
mov
movsl
push
xorl
leave
jmp
mov
and
and
cli
add
or
decl
cld
pushl
rorl
pop
push
and
out
xor
out
dec
adc
ljmp
and
push
xor
lock
das
jns
sbb
sarl
icebp
lcall
mov
add
jg
pushl
out
xchg
dec
rorl
inc
inc
mov
mov
push
xchg
ss
in
jb
lods
decl
push
cmp
push
and
xchg
cltd
mov
or
ds
jmp
mov
pop
sbb
xchg
pop
lret
cli
inc
mov
pop
cmpsl
js
les
gs
icebp
incl
jp
enter
xor
scas
push
rcll
or
fisttpll
lcall
vshufps
dec
and
mov
lahf
filds
add
pushl
push
sbb
jmp
aaa
popa
dec
inc
dec
fnclex
jo
lods
mov
call
cltd
mov
fs
xchg
arpl
test
or
mov
push
jl
xchg
cmp
cmp
lahf
pop
lcall
les
leave
sub
in
jae
xor
imul
cmpsb
das
adc
decl
mov
sub
test
add
jmp
lret
fnstsw
inc
push
es
push
es
pusha
fadd
ret
decl
in
in
mov
inc
test
mov
sbb
lret
gs
fidivrs
lock
xlat
and
and
adc
add
stos
add
pop
clc
jg
mov
popf
adc
or
xor
dec
xchg
fisubrl
loopne
jg
or
aad
pop
cwtl
sahf
lcall
sub
and
call
push
fcomi
cld
aas
test
mov
jl
repz
jae
adc
mov
fcomip
hlt
and
push
out
push
lret
test
stos
cmpsb
test
cmp
cmc
call
push
push
sub
outsb
das
add
sub
jle
add
mov
cmp
jne
movsl
pop
and
nop
test
or
sub
pop
loopne
ret
xchg
mov
shlb
or
in
popf
push
out
mov
mov
add
adcl
inc
xchg
bound
shrl
lret
dec
int3
aaa
ljmp
loopne
mov
dec
loopne
aad
dec
mov
imul
dec
add
cmp
aad
fdivl
push
pop
push
mov
shrb
adc
jmp
cmp
ret
int3
loope
jge
fbstp
push
cli
jg
fndisi(8087
and
cmpsb
in
and
mov
adc
sub
mov
in
xor
incl
in
int
add
add
iret
addb
sti
scas
das
xchg
dec
inc
mov
es
jg
adc
test
add
lds
repnz
iret
and
xchg
xor
jmp
test
jmp
pop
ljmp
xchg
test
dec
pop
clc
mov
xor
jg
aaa
adc
movsb
sub
pusha
jmp
jg
inc
mov
dec
or
pop
push
add
or
ljmp
cmc
ljmp
stc
aad
movsb
popf
lock
xlat
push
or
fdivrl
inc
mov
and
iret
in
inc
decl
pop
test
sbb
push
or
mov
push
adc
rol
clc
iret
mov
movsb
cli
pop
cmp
test
or
jle
adc
rcrb
dec
sbb
or
jo
push
jl
jnp
inc
call
imul
lcall
dec
push
fstl
rcrl
mov
rcrb
xchg
and
sub
mov
pop
loopne
decl
int
and
lahf
pop
cmp
inc
fldl
dec
es
cli
cwtl
mov
fucomi
xchg
pop
sbb
jg
mov
mov
sub
xchg
mov
pop
outsb
lock
ret
arpl
xchg
divl
sub
xchg
in
lock
sbb
or
out
pop
or
inc
pop
mov
add
rcll
je
mov
call
cmp
je
adcb
sbb
inc
mov
jne
push
mov
hlt
lcall
testl
orb
scas
cmp
call
jns
out
fldl
adc
imul
cwtl
call
jg
inc
add
jmp
push
aad
inc
adc
ss
xor
std
js
pop
cld
ret
push
mov
add
movsb
add
mov
or
lods
xor
push
shlb
jmp
sbbb
fnstsw
jle
in
outsb
or
clc
mov
adc
push
pop
jnp
out
or
loope
xchg
push
mov
xchg
faddl
outsb
mov
lcall
mov
jns
or
mov
fbstp
mov
pop
pop
lds
incl
add
stos
stc
pop
btc
sbb
push
cwtl
das
leave
dec
jo
js
imul
lods
push
xor
pop
std
ljmp
lea
push
mov
shr
cld
jne
das
pop
cmpsb
pusha
movsl
pop
leave
sub
xor
inc
push
js
cwtl
add
lret
scas
push
cmp
movsl
pop
aam
lcall
add
xor
addl
inc
and
insb
inc
aam
lock
je
incl
scas
xchg
lea
push
sti
mov
or
jmp
cmc
std
sbb
lds
jmp
inc
lret
adc
lcall
inc
sbb
or
fs
push
pusha
add
bswap
outsb
mov
jl
mov
sub
jnp
mov
das
hlt
inc
call
cmpsb
aaa
push
cmp
and
cli
add
in
mov
decl
push
cwtl
add
mov
stos
fists
cld
xlat
xor
ljmp
pop
and
aam
mov
into
pop
lods
dec
xlat
push
add
test
outsb
incl
les
pop
addl
fisubrs
pop
adcl
ljmp
lcall
jo
aaa
lods
mov
and
insb
decl
or
push
leave
mov
js
ljmp
push
shrb
lock
jne
push
and
mov
xchg
add
cld
test
add
inc
stos
sub
ljmp
test
sub
cltd
sub
mov
das
jnp
lahf
jae
loopne
call
shl
sbb
cmp
dec
inc
rcrb
lcall
dec
lods
das
xor
test
fmuls
sbb
mov
call
jae
cmpsl
outsb
push
popa
sub
pop
mov
aaa
clc
mov
sub
cmp
test
rcr
mov
mov
push
xchg
ja
les
insb
repnz
sub
pop
addr16
sahf
shll
clc
mov
lcall
dec
inc
clc
cmp
push
mov
bound
inc
icebp
xchg
and
insb
das
adc
push
lret
cltd
mov
add
in
mov
addr16
or
inc
add
jl
cmc
pushf
push
outsl
test
adc
jmp
jo
enter
fcom
ja
pusha
xor
test
push
lds
jb
mov
ljmp
sbb
lds
mov
push
add
and
sub
pushl
das
in
push
repnz
dec
inc
push
in
repz
cmp
jbe
mov
add
push
xchg
push
out
pop
decb
or
out
arpl
mov
xor
xchg
fstps
push
or
ret
adc
jmp
lods
loopne
mov
inc
mov
movups
bound
mov
jnp
jmp
push
fildll
loopew
inc
addb
popf
in
popf
adc
jnp
pop
mov
mov
xor
adc
push
movsl
push
sbb
sub
and
aam
add
lcall
jmp
sbb
fildl
les
and
hlt
jl
aad
mov
fsubp
lcall
mov
xchg
dec
adc
inc
or
ljmp
sub
bound
pop
sbb
dec
jae
dec
jge
rcrl
out
aas
xor
jno
inc
call
jmp
lock
test
in
gs
das
insl
cmc
in
jecxz
mov
or
sub
pop
mov
insb
insb
add
mov
incb
imul
rcr
bound
or
inc
decl
inc
push
mov
mov
bnd
cmp
lret
add
aad
lcall
pop
loope
nop
stos
and
dec
xchg
inc
call
push
enter
cmp
pusha
mov
pop
jbe
mull
scas
mov
pop
daa
xlat
pop
lret
mov
std
cwtl
sub
rolb
aaa
outsb
shl
xor
cli
sbb
jmp
sbbb
jno
adc
push
ljmp
jae
daa
out
jmp
inc
and
addr16
hlt
in
ret
cwtl
jge
pop
sub
dec
popf
ret
sub
inc
fdivr
call
xlat
jge
rcrl
lahf
mov
xor
out
or
hlt
outsl
adc
sbb
xor
jg
loop
sbb
jb,pn
ljmp
sbb
mov
icebp
jmp
jae
repz
aam
lret
inc
test
les
incl
loopne
testb
daa
sbb
in
dec
fdivl
inc
adc
dec
out
jbe
loop
ljmp
pop
fisubrs
imul
jecxz
mov
push
and
mov
popf
daa
jb
jl
inc
xchg
test
or
cld
and
ljmp
daa
cmpsl
iret
lcall
sbb
rclb
cli
pushl
aad
movsl
inc
insb
ret
add
inc
fsub
scas
lock
mov
mov
movsb
fdivr
out
adc
outsl
sahf
xchg
push
fcoml
out
incl
test
ds
sti
loope
cmp
sub
insb
jp
or
sbb
ljmp
adc
xlat
mov
in
jp
push
aaa
int
jo
jnp
ljmp
inc
jp
imul
fldlg2
adc
jg
stc
mov
inc
xor
cmp
jns
sbb
inc
adc
loop
or
push
or
hlt
mov
lea
adc
shlb
lcall
mov
sbb
repnz
push
fnsave
push
sub
mov
data16
popa
xor
test
xchg
inc
xchg
cmpsb
sub
icebp
or
repz
adc
in
sub
sbb
inc
mov
popf
push
mov
mov
fists
iret
and
cld
adc
icebp
rorb
and
out
cli
mov
call
jecxz
pop
inc
and
or
insl
xorl
add
aas
enter
sbb
mov
in
sub
ss
xor
add
aam
mov
jg
add
push
mov
xor
outsb
sbb
mov
pop
xor
or
inc
cmp
pop
ret
jg
fnstsw
jecxz
push
mov
and
dec
push
mov
mov
cmp
pop
aas
aad
xchg
pop
push
stc
xchg
test
mov
jg
mov
mov
sbb
mov
mov
repnz
or
xchg
fldl
dec
adc
ljmp
sbb
arpl
and
lods
dec
add
repz
jg
sbb
mov
push
js
std
int
je
ret
test
mov
lods
xchg
push
push
aad
push
iret
pusha
sti
fs
fwait
mov
out
pop
clc
outsl
cld
lcall
jl
lock
lods
inc
les
ss
lods
sub
jno
addr16
ljmp
lock
adc
cmp
jl
adc
dec
pop
add
call
adc
popf
cmp
dec
addl
stc
rcrl
mov
repz
mov
adc
loope
add
sub
cwtl
ss
xor
pop
cld
jmp
lods
adc
test
inc
shlb
in
popf
mov
call
cli
daa
mov
outsb
push
push
pop
jp
inc
in
aad
add
mov
iret
dec
decl
jge
mov
inc
mov
stos
pop
addr16
push
xor
call
mov
pop
pop
fyl2xp1
xor
add
inc
push
sahf
and
cs
sub
ljmp
inc
pusha
lods
lahf
fisttpl
jl
loope
lock
call
in
ljmp
or
mov
dec
fwait
dec
jbe
push
or
push
xlat
lea
aaa
insl
sbb
push
int3
test
in
ljmp
ljmp
pushf
mov
lods
push
add
push
enter
int
jb
popf
int3
lret
dec
je
stos
mov
push
out
loopne
sub
jbe
lods
xor
aad
mov
push
push
movsb
mov
adc
jo
rep
adc
inc
cmc
je
jmp
pop
pop
cmpsb
lret
ljmp
jbe
les
sahf
dec
jns,pn
pushl
cli
jmp
movsb
push
xchg
iret
fs
xchg
xchg
pop
push
sbb
push
leave
sahf
rorb
fcmovnu
loop
pushl
scas
and
stos
add
dec
movsb
leave
or
mov
mov
ljmp
lock
adcb
test
push
outsl
lea
pop
and
call
xchg
cmp
ret
out
jo
sub
imul
xor
jge
jnp
mov
outsl
cmc
mov
and
pop
out
mov
add
xchg
mov
clc
or
cli
and
sub
call
adc
test
and
cmp
mov
xor
mull
sbb
cli
cmp
xchg
xor
sub
insl
pop
add
aaa
inc
lret
cmp
adc
loop
lret
mov
jb
jo
xor
pushl
xor
test
or
push
xchg
lcall
incl
push
out
inc
into
xlat
jp
stos
sub
loopne
push
or
mov
pushl
pop
sarl
lret
push
push
int
push
cmpsb
pop
add
pop
adc
pop
adc
cmp
call
push
push
pop
div
sbb
push
fisubrl
jg
das
mov
int3
sbb
ret
jne
cld
inc
hlt
repz
jmp
cld
pop
sbb
or
arpl
xchg
aam
incl
std
insb
addr16
adc
call
lods
jmp
cmp
mov
rorb
sbb
fstpt
or
lods
daa
fnsave
sbb
pop
test
ret
pop
xor
cltd
or
call
dec
test
jns
cs
out
rclb
arpl
out
inc
clc
pop
das
hlt
incl
inc
sub
mov
test
and
loop
pushl
push
or
cmpsb
fsts
inc
jns
inc
call
xchg
mov
push
mov
pop
popa
xchg
faddp
stos
shlb
xchg
scas
add
call
fnstcw
scas
mov
call
sub
push
in
incl
jno
pop
aas
mov
add
inc
movsl
xor
repz
mov
cmp
push
mov
jmp
arpl
cmpsl
push
and
and
lods
jo
insb
or
xchg
adc
mov
mov
dec
add
scas
xchg
imul
sub
xlat
hlt
inc
push
ja
outsl
lock
ljmp
jno
std
jmp
movsl
fisttpll
cmpsb
pop
out
adc
gs
sub
mov
pusha
or
cmc
rorb
in
dec
test
lock
jle
push
fldenv
mov
mov
lods
sahf
in
arpl
aas
cld
lds
mov
or
jle
fdivrl
jno
jge
orb
pushl
gs
fcompl
push
jmp
test
pop
jg
xchg
push
dec
xchg
outsl
sub
repz
aaa
and
sub
addr16
pusha
call
or
lds
adc
jl
add
lret
mov
push
in
cs
mov
rcl
adc
call
cmp
add
pop
push
pop
sub
lods
loop
mov
movsl
std
pop
nop
mov
or
cs
pop
les
nop
xchg
push
push
xchg
cli
mov
adc
jl
fbld
cmp
jnp
std
mov
push
bound
sub
mov
inc
push
sbb
jge
jmp
arpl
jle
mov
sahf
ljmp
push
iret
loope
test
fisubrl
add
mov
adc
add
cmpsl
inc
mov
cli
mov
sbb
nop
mov
sbb
imul
mov
dec
mov
mov
inc
mov
cs
sbb
sub
gs
dec
or
inc
xchg
mov
pop
inc
fiadds
fmull
jnp
push
lods
in
push
sub
jg
dec
cwtl
and
loopne
push
push
int
xchg
shlb
push
data16
pushl
push
dec
jbe
lods
jle
out
pop
cmc
jp
fcomps
xchg
lret
push
xor
push
bnd
push
loop
and
adc
mov
outsl
mov
pusha
dec
fs
sub
sbb
das
dec
popa
std
das
or
movsl
or
mov
cmp
xor
sub
sarl
add
pop
gs
jecxz
enter
cmc
pop
sbb
push
xchg
cli
jg
or
push
mov
mov
xchg
push
sbb
xchg
xor
call
xor
cmp
sbb
aad
jg
call
inc
sarb
mov
rol
loope
sbbb
or
stc
daa
lock
decl
xlat
test
dec
mov
icebp
cltd
daa
or
das
lods
jg
and
das
icebp
lods
jle
int3
fnstsw
mov
in
decl
js
fsubr
flds
pop
popl
jge
into
addr16
inc
push
pop
pop
loopne
jmp
push
sbb
ret
rcr
cmpsb
pusha
sub
jge
sub
call
imul
testl
mov
pop
sub
pop
cmpsb
cmp
add
fimull
ret
cmc
ja
add
mov
addb
or
xchg
arpl
add
stos
add
cmp
adc
mov
lds
icebp
outsl
std
or
dec
mov
leave
data16
push
ljmp
jae
xlat
sub
sub
push
mov
cmpsb
movsl
in
sbb
call
repnz
pushf
loopne
cmpl
test
jg
add
xor
xor
bnd
repnz
cmp
pop
mov
dec
lea
addr16
inc
mov
or
addr16
ljmp
hlt
jnp
jmp
popf
aad
imul
push
push
jno
inc
inc
ljmp
mov
popw
orb
dec
pusha
outsb
mov
inc
cmp
ror
mov
cmp
aad
cmp
ja
pop
xor
cld
pop
cli
mov
adc
nop
mov
pusha
imul
cmpsl
xchg
jmp
dec
cmpsl
mov
inc
mov
jns
pop
cltd
xlat
jg
stc
adc
adc
cmp
sarl
ja
jg
cmpsl
cld
sbb
cmp
pop
cli
jmp
jp
push
mov
add
clc
in
dec
cmp
mov
lret
fimull
xchg
push
out
pop
pop
out
mov
imul
arpl
in
in
scas
or
call
ret
fistl
mov
fcmovu
lods
and
or
out
jp
mov
cwtl
inc
cld
xchg
pop
sub
mov
int3
cmp
lret
xor
mov
loopne
and
addr16
xchg
out
push
mov
or
testb
ud0
in
jns
outsl
pmaxub
into
imul
pusha
outsl
movsl
movsb
aad
int
gs
mov
sub
mov
loope
in
sbb
nop
idivl
and
or
das
imul
jp
imull
shrb
inc
fiaddl
xor
mov
jg
lcall
and
sub
mov
filds
mov
lcall
cmpsl
jne
shlb
adc
in
push
adc
jns
std
test
sbbl
call
push
fnstenv
fcmovne
and
add
mov
jg
ja
int
or
push
addl
iret
xchg
call
pushl
pop
lds
faddp
sub
in
jmp
js
sub
push
mov
cmpsb
adc
fstl
or
mov
lods
xchg
cwtl
and
sbb
adc
call
and
mov
mov
ja
dec
sub
mov
aaa
rcll
sbb
dec
lods
jge
mov
outsl
sbb
push
jecxz
mov
ljmp
out
mov
pop
xchg
in
lods
cmp
pop
subl
lods
call
stos
lcall
add
ret
mov
dec
sub
mov
adc
std
mov
push
cmpl
sti
ljmp
sub
dec
std
rol
bound
mov
jle
xor
in
push
leave
pushl
jne
push
pushf
out
inc
adc
push
adc
xor
mov
cmp
jae
push
pop
or
dec
mov
push
in
andl
jle
cmp
cmp
xchg
faddl
aad
sbb
clc
pushl
cli
sahf
out
cs
fs
cmp
ljmp
shll
lcall
fs
mov
insl
stc
call
xchg
mov
pushl
into
and
cltd
jnp
dec
mov
adc
jle
insl
sub
test
neg
pop
xchg
int
mov
mov
aad
jg
mov
xchg
or
shll
call
aaa
clc
loopne
lds
mov
lea
js
jp
push
adcb
and
sarl
enter
push
popa
xor
fwait
add
push
mov
ja
scas
arpl
xchg
cli
jmp
and
dec
push
fs
or
cli
dec
ret
adc
test
cli
outsl
fisttpll
mov
pop
adc
adc
sub
inc
scas
dec
cmp
addr16
and
mov
cli
and
pusha
xor
addb
fmul
seta
repnz
cmp
out
scas
or
inc
dec
insl
loopne
jl
inc
fidivrl
out
ficompl
mov
xchg
cli
ljmp
arpl
sbb
mov
lods
cld
and
das
sbb
test
push
imul
push
jl
fistps
mov
loope
add
ljmp
cmp
push
jne
mov
mov
aam
call
mov
jg
cmp
js
inc
sti
or
fxch
jb
cmp
mov
xchg
jb
sbb
add
ret
test
pop
adc
js
mov
insb
sbb
jmp
push
inc
mov
loopne
push
mov
pop
or
ljmp
icebp
sub
mov
aam
sub
cmp
sub
lret
aam
mov
xchg
rclb
and
rclb
into
xor
movsl
test
decl
inc
std
lock
xchg
jmp
std
jnp
xchg
xchg
mov
pop
rol
or
and
pushl
mov
pop
rcr
in
add
mov
dec
mov
mov
cmp
pushl
mov
ljmp
mov
adc
inc
inc
stos
jno
pop
insl
or
mov
pop
mov
gs
cmpsl
iret
fimull
xlat
xor
sub
mov
fistps
sub
test
jecxz
insb
cmp
mull
push
xchg
cmp
incl
out
fadds
and
and
shll
jbe
enter
aas
mov
sbb
int3
mov
xor
call
jb
and
scas
mov
push
lods
shll
mov
jno
arpl
call
aad
pop
lahf
mov
in
mov
dec
icebp
cmp
es
push
add
mov
stos
jp
and
jecxz
das
push
mov
pusha
mov
inc
sbb
adc
stos
pushl
clc
movsl
add
cmp
jle
mov
daa
hlt
adc
repnz
jne
add
xor
es
test
dec
jo
sbb
mov
rorb
sub
jp
js
jb
mov
dec
xchg
sbb
adc
decl
jg
sti
rcrl
mov
test
shl
in
mov
mov
mov
pushl
mov
imul
ret
xchg
jg
imul
lret
scas
inc
in
adc
mov
nop
in
or
les
lcall
pop
out
mov
std
scas
or
pop
dec
ficompl
je
jae
outsl
sub
jnp
rcll
mov
imul
push
jmp
mov
mov
aad
pop
clc
or
pop
scas
js
inc
mov
adc
pop
shlb
or
cmpb
and
ljmp
aam
or
jbe
lods
in
fadd
adc
mov
mov
clc
aad
cmp
xchg
pop
pop
stos
xor
jp
imul
mov
lea
in
cmp
mov
xchg
je
dec
mov
push
cli
aas
std
sar
dec
je
sub
and
iret
dec
movsb
push
mov
shl
repnz
scas
xchg
das
cld
outsl
ret
rorb
cmpsl
movq
hlt
jnp
lcall
xor
das
mov
push
popf
lret
rclb
lret
call
and
aaa
sub
pop
sar
dec
xchg
inc
or
push
jmp
add
stos
fwait
push
and
sub
cli
popa
call
fwait
inc
jne
pop
push
testl
mov
movsb
fwait
mov
mov
aad
movsb
or
sub
loop
mov
sub
stos
pop
das
insb
or
adc
fisubl
mov
lcall
mov
jl
in
daa
and
inc
cld
xchg
cli
inc
push
xchg
addr16
addr16
mull
ljmp
jno
mov
inc
or
stos
cld
ss
and
pop
cli
lcall
mov
jle
pop
mov
adc
hlt
lret
inc
mov
jmp
imul
popf
gs
fsts
mov
pusha
test
loop
call
or
xor
clc
daa
adc
pop
cmp
dec
insb
test
divl
inc
push
aaa
pushf
inc
dec
mov
xorb
insl
sbb
ljmp
lock
insl
lock
pop
lahf
insl
loop
int3
dec
lods
mov
js
pushl
cltd
insl
add
add
hlt
xchg
dec
fstl
decl
nop
ret
jp
inc
mov
idivl
fildll
jne
sti
pushf
mov
mov
icebp
cli
mov
inc
rorb
mov
or
iret
aaa
and
jne
stos
sbb
fbld
insb
jle
inc
jmp
jmp
add
pop
divl
pop
xchg
mov
aaa
mov
aas
stos
and
frstor
mov
add
mov
inc
sub
insb
add
popa
and
mov
lret
dec
dec
adc
cld
xchg
lcall
into
data16
sarl
fs
mov
dec
gs
mov
scas
jo
inc
movsb
call
inc
dec
stc
dec
mov
ss
dec
xchg
fbld
scas
xchg
mov
js
testb
mov
lods
and
jp
fldcw
dec
push
sbbl
or
add
mov
pop
or
ljmp
outsl
xor
popf
mov
stos
mulb
sub
jg
popa
stos
mov
cmp
sbb
loop
pop
mov
insl
and
and
sbb
cmpsb
repz
sub
cmp
faddp
mov
pop
std
decl
mov
mov
pop
lahf
sbb
add
out
cli
ljmp
icebp
std
sti
push
and
cmp
sub
push
jne
mov
cwtl
scas
call
cmpsb
fwait
repnz
sub
dec
loope
and
stc
leave
aam
jmp
lahf
or
nop
cld
push
decl
pop
pop
insl
push
sub
and
out
cs
dec
addr16
cmpsb
stos
ljmp
jbe
and
cli
and
xor
inc
loope
adc
clc
sub
jne
jo
mov
xchg
loop
cmp
icebp
call
dec
int3
add
dec
fs
or
push
scas
test
mov
call
arpl
test
cmpl
call
outsl
andl
jbe
xor
aas
loop
mov
orl
in
jp
jb
xor
sub
jg
ljmp
mov
jg
jecxz
jmp
fs
or
out
push
xor
lcall
sbb
add
inc
sti
mov
xor
mov
ljmp
cld
push
jo
mov
imul
cli
xchg
incb
xchg
or
dec
lea
inc
std
cmp
mov
mov
jne
lock
push
sub
xor
mov
idiv
jmp
xchg
xor
ret
mov
sbb
adc
nop
ret
jl
cmp
inc
mov
mov
lods
push
insl
inc
in
shr
test
pop
test
call
movsl
jg
add
push
je
fimuls
jecxz
adc
notl
sbb
add
xchg
xor
jmp
je
inc
iret
loop
sti
inc
or
jg
decl
stos
xor
sub
sahf
mov
mov
call
insl
lock
xor
cld
fists
fwait
jno
push
lock
cli
cmc
lcall
out
mov
movsb
imul
aaa
in
jno
mov
pusha
jmp
in
out
jnp
mov
insb
jl
mov
into
enter
jg
mov
test
mov
out
inc
inc
mov
xchg
add
add
jmp
mov
pop
into
test
fstps
shlb
into
jno
mov
icebp
outsl
icebp
ljmp
pop
sub
push
sbb
jo
push
mov
decl
mov
mov
sahf
cwtl
jge
jb
leave
push
jg
out
popa
and
or
stos
sahf
loope
mov
mov
sbb
jmp
inc
xchg
cmp
fwait
imul
aaa
jp
cmpsb
sub
fabs
lds
and
ljmp
negl
loopne
in
jecxz
sbb
mov
lock
mov
ljmp
and
orl
sbb
xrelease
lds
jne
push
nop
and
ljmp
inc
pop
fstl
mov
inc
cmp
imul
jns
pop
or
ljmp
std
das
popf
lds
ljmp
arpl
mov
test
scas
lcall
mov
adcb
sbb
arpl
mov
xor
adc
sbb
dec
icebp
ljmp
jmp
lea
mov
mov
push
scas
leave
loopne
ljmp
sbb
ljmp
hlt
lds
xor
lea
push
adc
stc
cmpsl
in
xchg
std
ret
jge
mov
cld
fcmovu
in
mov
ficoml
das
sub
sbb
repnz
lcall
sti
xchg
jne
leave
imul
loopne
mov
jl
gs
ret
pop
aad
aam
mov
add
push
xchg
lds
icebp
pushl
push
mov
test
jge
xorb
cmp
mov
ljmp
das
fwait
cmp
dec
sub
xchg
enter
sub
xchg
or
decl
scas
adc
incl
imul
mov
adc
lcall
shll
lods
or
fists
mov
sahf
fcoml
pop
enter
rcrb
cmp
enter
fwait
jo
incl
pop
cld
enter
adc
xchg
or
sub
sub
test
lods
lcall
jb
or
andb
movsb
and
test
lcall
add
mov
out
sub
es
cwtl
xchg
sbbl
push
push
xorb
xor
cmp
xchg
notl
enter
jae
mov
push
mov
jbe
push
xchg
in
pop
in
pop
lods
xchg
or
ret
jbe
jmp
push
in
mov
pop
pop
jo
sbb
inc
jg
decb
and
imul
call
dec
xor
pop
out
dec
adc
shll
fnsave
call
sub
add
xchg
test
xor
fidivl
loop
mov
je
jmp
std
repz
xchg
sbb
ljmp
inc
mov
xor
loopne
sbb
rolb
popf
cmp
fwait
stc
dec
add
inc
xor
in
mov
mov
add
jg
jg
jl
imul
mov
icebp
inc
fstl
ss
mov
push
and
mov
xrelease
ljmp
shlb
rcrb
mov
xor
and
mov
xchg
aaa
push
mov
stc
das
dec
fisttpl
xchg
push
fldl
jecxz
movsl
jg
mov
sbb
lds
sub
mov
sub
push
sub
push
jmp
dec
cmp
sub
scas
xchg
movsb
mov
inc
rcrb
jg
decl
xchg
out
fs
insb
stos
sub
shrl
xchg
lds
ljmp
ljmp
ja
daa
mov
mov
cmp
ja
rcrb
mov
lcall
out
rcrb
hlt
or
cli
add
inc
sub
inc
mull
test
add
aam
pop
and
out
or
xlat
int
cwtl
jmp
xchg
jl
insb
ljmp
sub
jg
sahf
add
icebp
mov
je
hlt
mov
data16
and
push
fdivr
sub
ljmp
adc
movsb
sub
xor
dec
pop
or
sbb
push
xchg
jne
adc
jmp
das
sub
push
ds
jg
pop
dec
imul
aaa
mov
jg
test
pop
repz
push
insb
aam
pop
cmp
mov
jmp
mov
sub
sub
pop
testl
std
andl
mov
aaa
insb
xor
jb
es
ret
imul
mov
inc
icebp
pop
aaa
add
scas
addb
lcall
fldt
bound
shld
dec
jp
or
nop
sbb
in
outsl
cld
incl
inc
inc
push
ljmp
jp
jbe
lods
lahf
icebp
mov
jne
jle
ljmp
aam
aam
push
stos
aad
adc
movsb
xlat
aas
lea
loope
decl
or
mov
pushf
or
pop
cmp
lea
subl
into
mov
jne
jmp
xchg
push
fisttpl
loope
daa
les
inc
push
mov
int
sub
enter
popf
call
aad
push
xchg
sub
insl
sub
clc
incl
into
in
or
jecxz
xchg
sbb
decl
mov
ficoms
addr16
stc
push
dec
lods
mov
popa
fistpll
mov
pop
decl
adc
sbb
std
inc
sbb
xor
mov
pop
push
jnp
pop
mov
mov
test
in
inc
ret
and
daa
lret
mov
xchg
sbb
mov
test
jp
add
scas
fdiv
pop
cmp
lret
pop
and
push
sahf
and
or
ljmp
sbb
jbe
pop
inc
or
cmp
scas
cs
sbbl
pop
popa
enter
mov
lahf
and
or
mov
dec
adc
adc
mov
mov
mov
stos
cli
incl
fldl
test
shlb
sbb
mov
clc
mov
sbb
fistps
adc
cmpsl
shll
pop
cld
fwait
and
clc
out
test
in
stos
sub
jg
test
imulb
mov
or
scas
movsb
adc
xchg
push
jle
pop
rcll
mov
cmp
jne
and
ljmp
lcall
cmc
stos
xlat
mov
mov
jb
cmpsb
sbb
jne
sub
decl
mov
jmp
jbe
lods
jnp
sub
movsb
cmpsb
adc
mov
push
mov
repnz
sahf
sub
rcl
jp
cmp
mov
flds
push
gs
into
adc
fildll
ret
test
call
pop
pcmpgtd
aaa
sub
xchg
cmp
pushl
sti
xchg
add
and
mov
cmp
lahf
xor
and
addl
addb
or
shr
orb
int3
clc
dec
pushl
jmp
push
cmp
out
push
arpl
dec
push
addr16
jo
cmpsb
nop
mov
insl
call
mov
lock
inc
add
and
cmp
dec
cli
add
imul
lods
mov
add
dec
dec
mov
jl
imul
pop
inc
adc
mov
xor
pop
dec
in
imulb
les
cmp
cmpxchg
dec
cs
or
lret
adc
cmp
inc
adc
add
ss
or
mov
lea
or
mov
mov
xchg
test
cmpsb
jo
shlb
dec
call
lret
mov
mov
lcall
jl
sahf
jmp
mov
das
jmp
out
cwtl
loope
dec
cld
movsl
pop
sub
push
jmp
lds
cmp
xor
fwait
adc
aaa
xchg
clc
aaa
incb
xlat
lret
push
cmp
cmp
xor
addl
dec
incl
fistl
pop
mov
pop
lcall
push
loopne
test
bound
push
inc
into
clc
je
sub
adc
xchg
dec
xchg
jmp
jmp
cli
mov
sub
out
mov
sbb
and
addl
incl
testb
in
jmp
pop
out
ret
in
aad
fcos
lcall
mov
les
xchg
dec
adc
out
flds
jge
xchg
mov
jle
stos
clc
mov
movsl
sbb
std
or
xor
push
out
push
jbe
or
aaa
frstor
cwtl
lcall
fisttpll
dec
pop
pop
loopne
cmp
xor
shll
decl
loop
sub
mov
jge
mov
fstps
sbb
ljmp
xchg
xor
mov
loop
dec
or
sub
pop
pushf
shl
out
push
int3
daa
jmp
dec
jecxz
and
jle
mov
jg
pop
stos
movsl
push
mov
dec
test
je
ljmp
out
push
inc
mov
cmp
dec
daa
jmp
jmp
mov
ret
incl
arpl
scas
or
insb
test
mov
insb
jle
push
cmpsl
fstpl
push
cmp
inc
lods
nop
hlt
call
pusha
notb
jmp
pop
xor
enter
rcrl
xor
incl
adc
sub
jae
push
bound
xchg
lods
xchg
xor
roll
cmp
add
jbe
movsb
pop
and
push
and
cmpsb
pushf
dec
repz
fstps
incb
fldenv
ds
jmp
dec
sub
push
pushl
lcall
mov
or
push
push
fnstsw
sub
and
pop
cltd
xor
cmpsl
call
ljmp
push
adc
push
xchg
add
push
pop
add
jo
inc
cmp
loop
adc
mov
jge
fdiv
outsl
fucomp
mov
lcall
inc
lret
sbb
in
loop
sbb
push
cmp
add
incl
iret
xor
in
fidivrl
mov
dec
dec
jae
sbb
lock
sub
ljmp
cmc
push
mov
cmp
ficomps
out
and
jg
mov
add
or
shll
lods
mov
xor
ljmp
inc
and
fstpt
imul
mov
std
in
ja
sahf
pop
neg
repnz
arpl
fsubl
movsl
lock
inc
les
flds
cmp
mov
stos
inc
sub
roll
add
sti
lret
inc
sbb
jl
cmpsb
movsl
pop
aam
fmuls
clc
mov
pushl
and
outsl
loope
ficoms
test
pop
int3
pop
nop
sbb
iret
call
insb
sub
fcoms
ror
jbe
mov
jmp
call
jg
sub
inc
hlt
jbe
test
shrl
sub
ljmp
mov
aad
xor
or
pop
mov
jle
out
fbstp
scas
aam
jecxz
jmp
icebp
push
dec
jmp
mov
or
stc
mov
jmp
or
test
inc
bound
or
push
adc
stos
dec
les
sti
popf
insl
stos
inc
xorb
outsl
fbld
adc
dec
xchg
shl
sbb
or
pop
mov
mov
push
jecxz
ljmp
ja
aad
xor
xchg
pop
pop
xlat
inc
inc
pop
int
out
dec
in
fildl
add
fidivrs
adc
data16
xor
add
icebp
mov
mov
nop
out
test
mov
sub
das
and
test
pop
and
sbb
pop
daa
sub
call
pop
dec
mov
scas
xlat
add
decb
fdivl
std
leave
jae
mov
cmp
lcall
stos
aam
cmc
jmp
in
sahf
push
sbb
mov
rorb
lcall
xchg
mov
clc
pusha
mov
and
mov
sbb
pop
leave
pop
or
cmpsl
jo
jge
in
inc
pushl
sbb
rcr
xor
xorb
lods
ret
cmp
sub
lcall
jge
mov
mov
pop
lret
imul
xor
test
cmc
mov
mov
jno
push
mov
push
mov
jg
fidivrl
cmpsl
jno
xchg
mov
enter
pop
mov
xchg
test
out
dec
or
cli
sbb
shrl
dec
push
and
jmp
add
rcll
and
out
jg
or
mov
jbe
cwtl
loop
xchg
mov
cli
pop
cwtl
ret
mov
lock
in
ljmp
push
aam
negb
xchg
lret
mov
lahf
fists
mov
ret
enter
jg
int
mov
jmp
dec
lock
jmp
mov
mov
add
xor
out
std
mov
icebp
jno
xlat
scas
lods
outsl
mov
add
sti
dec
add
pop
dec
popa
stos
or
add
adc
lcall
sub
sub
push
jbe
pop
sub
pop
in
inc
das
xchg
mov
xchg
push
pop
decb
nop
dec
pop
xchg
jae
sbb
test
mov
dec
sub
out
and
add
ljmp
call
call
pop
fs
and
mov
fnstsw
pusha
mov
cltd
mov
xor
fcoms
cmpsl
and
ret
dec
int
aad
enter
or
arpl
mov
aam
imul
out
add
into
mov
sbbb
subb
addr16
jg
testb
in
jnp
mov
cs
in
pushf
pop
mov
imul
jp
loop
call
rclb
dec
repz
lcall
jnp
pop
add
fsub
outsl
mov
sub
and
loopne
and
clc
sub
and
pop
mov
xchg
xor
xchg
test
sahf
cmpsb
xchg
and
xor
ja
or
enter
or
mov
cltd
je
xor
xorb
call
xchg
sub
add
fists
stc
out
arpl
loop
dec
call
call
mov
mov
aaa
inc
and
fwait
push
jnp
jg
lcall
adc
iret
jge
stos
xchg
lahf
bound
rorl
mov
xchg
scas
outsl
lock
jmp
jge
or
arpl
jge
pop
jb
xor
incl
test
testb
insb
cld
push
mov
adc
xchg
jno
scas
add
adc
iret
and
in
cmp
or
mov
call
jmp
movsl
sub
imul
pop
lret
inc
jmp
mov
ret
inc
and
cmpsb
ret
dec
loope
inc
fst
add
push
lret
pop
ljmp
cwtl
mov
xchg
fisubrs
xchg
pushf
dec
mov
rcrb
jno
repz
call
pop
sti
xor
popf
mov
push
mov
movsb
fiaddl
rolb
loopne
popa
adc
incl
add
sarb
shrd
out
lods
fadd
popf
xchg
jbe
jmp
or
jecxz
mov
out
xchg
dec
xchg
imul
mov
add
imul
das
icebp
lcall
hlt
sub
xor
jo
pop
jns
lret
jg
jl
addr16
mul
iret
negb
sub
cmp
fucom
sbb
pushl
mov
mov
hlt
ljmp
ljmp
cwtl
rcrl
aad
scas
pop
pushf
cmpsl
cmpsb
or
and
das
mov
popl
jmp
shl
test
ljmp
inc
push
setl
dec
out
shl
movsl
push
pop
push
mov
mov
adc
dec
rcll
clc
popa
fstpt
fnstsw
lcall
shll
pusha
js
pop
jnp
mov
inc
xlat
inc
inc
sahf
js
loopne
adc
fdivs
jae
int
fdivrp
arpl
ffreep
mov
cld
pop
sub
pop
clc
push
push
iret
xlat
sub
cli
adc
sub
clc
inc
ds
dec
dec
adc
notl
rcrl
test
push
inc
jno
mov
nop
or
out
or
jg
fistpll
jns
pop
int3
jb
lods
push
sub
inc
pop
mov
icebp
movsl
mov
cmp
int
xchg
out
cltd
cmovl
decl
clc
inc
adc
jno
and
push
push
sbb
fidivrl
sub
inc
adc
aam
fistps
cmp
orb
mov
pop
fisttpl
mov
jmp
cmp
bound
push
adc
xchg
mov
jb
lcall
sti
mov
push
insl
rcl
lea
scas
sub
das
jo
decl
out
mov
mov
mov
xchg
cltd
cli
fistpll
xchg
jle
leave
jb
sti
arpl
inc
clc
stc
adc
sbb
pushl
out
and
push
pop
lock
jo
or
lods
jg
lods
xchg
popa
gs
mov
pop
daa
call
decl
add
loop
xchg
add
cmpsb
aad
repnz
inc
sahf
fwait
and
pop
dec
fs
and
fwait
and
pop
push
cmp
test
clc
jg
xchg
push
arpl
in
push
mov
add
iret
ret
jg
or
push
nop
or
decl
data16
sbb
adc
pop
add
dec
into
inc
cli
xor
lcall
mov
pop
adcb
mov
jo
add
jg
lcall
mov
pusha
mov
les
xor
mov
mov
fstps
sbbb
es
add
pop
pushf
std
cmp
icebp
xor
or
jecxz
loopne
push
addr16
ds
stc
in
mov
mov
add
jg
test
pushf
or
dec
cmc
repnz
xor
rorb
cli
xor
lret
inc
mov
mov
xchg
push
jo
aaa
pop
cltd
adc
mov
add
ja
into
pop
mov
adc
outsb
inc
fwait
mov
stc
cmp
xor
arpl
lcall
push
js
pop
sbb
scas
loopne
sub
mov
loop
lcall
dec
push
iret
test
add
sub
or
idiv
lods
jecxz
lahf
enter
pop
loop
loop
outsl
loopne
xor
sti
xchg
arpl
push
lcall
or
movsb
xchg
jb
rcrl
jbe
mov
stc
or
push
dec
das
lock
pushl
xorl
je
inc
push
and
gs
incl
incl
pop
mov
stos
sbb
adc
adc
dec
ret
mov
or
push
data16
push
cmpsb
jg
loopne
ret
mov
push
test
das
pop
fstp
mov
add
mov
adc
fildll
xlat
mov
hlt
divl
fucomip
ljmp
cltd
xchg
test
and
in
mov
icebp
lods
push
adc
bound
and
fisttpl
fiadds
mov
sub
out
movsl
test
icebp
pop
call
aam
xchg
push
clc
inc
cmp
xchg
call
sub
rcrl
es
aam
mov
fdivrp
idivb
jo
jle
push
dec
push
push
insb
shll
ljmp
in
cs
add
or
int
imul
jle
call
cli
fwait
pop
xor
mov
sub
jecxz
fisttpl
lods
js
arpl
stc
sarl
inc
ret
idiv
incl
fiadds
mov
cli
jno
push
jnp
and
outsb
addl
outsl
jo
lcall
movsl
fwait
enter
lods
out
sub
stos
adcb
xor
ss
or
call
ljmp
sarb
adc
inc
mov
jge
lahf
mov
mov
xchg
inc
sub
xlat
in
pop
or
aas
jg
out
jmp
outsl
push
inc
cli
lods
out
sahf
dec
inc
leave
in
ret
jno
mov
insl
in
dec
mov
test
stos
mov
lret
lahf
push
fcmovnb
inc
rclb
das
inc
sahf
outsb
adc
std
jmp
clc
sub
arpl
xchg
adc
inc
xchg
jecxz
ss
rorb
out
pushf
ljmp
jge
out
jmp
and
cmpsl
out
push
out
bnd
decl
call
mov
xor
sbb
fstps
aaa
sub
std
lcall
outsl
jnp
cld
sbb
and
mov
jns
sub
ja
jo
popf
test
decl
gs
cld
inc
cmpsl
sub
frstor
test
sub
and
cld
jmp
loopne
mov
pusha
ret
jb
jp,pt
sbb
inc
add
dec
das
push
cmpsb
lock
push
cmp
hlt
inc
xor
nop
jl
decl
dec
sub
out
and
stos
imul
lock
push
js
test
dec
mov
mov
dec
cmp
pushf
orl
in
out
call
mov
push
push
mov
inc
sub
xor
fistps
jmp
outsl
icebp
cmp
and
inc
mov
negb
xchg
mov
jb
jg
fildl
lahf
into
xor
popa
mov
pop
cs
inc
pusha
cld
decl
out
jle
outsb
jne
negb
fmuls
iret
call
ljmp
xor
adc
es
outsb
push
scas
cmc
addb
xchg
call
adc
mov
lahf
insb
jno
bound
push
mov
fucomip
adc
je
mov
test
stos
call
mov
inc
mov
pop
xor
ljmp
dec
push
imul
loop
inc
adc
out
lods
cwtl
outsb
stc
aas
faddl
cmpsb
ja
popf
ja
mov
push
fxch
aam
push
arpl
fidivs
data16
insl
mov
pushf
mov
cld
lds
xor
mov
mov
sti
fdivr
jg
in
outsl
jo
aaa
pop
add
jge
pop
cs
ljmp
int
pop
push
push
insb
and
data16
iret
push
nop
and
sbb
jmp
nop
push
pop
insl
inc
imull
rcl
mov
cmp
jg
jg
fsubrs
push
cwtl
xor
dec
sar
xchg
cld
pushl
clc
shll
movsb
and
jge
xor
test
movsb
dec
lahf
cld
fnsave
decl
call
cld
push
je
aad
pop
jl
add
shrb
dec
rcl
push
clc
call
das
movsl
in
xor
in
mov
rol
ret
cli
pushl
leave
cmp
jne
mov
int3
lock
outsb
add
daa
cmp
gs
sbb
fists
out
and
cwtl
dec
xor
jg
jmp
sbb
insl
mov
pusha
or
ss
test
xor
cmp
pop
and
inc
mov
decl
cld
pop
scas
dec
inc
loopne
aaa
test
cld
jmp
inc
adc
push
sbb
jle
sahf
inc
out
add
cmc
cmp
cmp
cld
rcl
out
aas
rorl
sahf
test
cld
xchg
jp
adcl
cld
decb
jbe
xchg
sbb
decb
xchg
jne
test
clc
cmc
add
fimuls
jge
jp
mov
cli
pop
add
decl
pop
inc
push
fsts
out
mov
jg
aaa
jecxz
lret
stos
dec
push
or
clc
jecxz
xor
lock
call
arpl
jp
arpl
lahf
orb
mov
mov
jl
fimuls
fistpll
mov
or
decl
fistpll
sub
jb
mov
sub
pop
setp
fs
lds
ljmp
fsubr
lods
mov
mov
pop
sbb
cld
jg
jecxz
je
xor
outsl
cmc
mov
sub
lahf
jle
fstpl
in
mov
inc
pop
ljmp
add
pop
in
xchg
jmp
mov
mov
es
gs
and
inc
sti
fldenv
clc
pop
cmp
in
iret
popa
ja
inc
or
ficompl
imul
loopne
jg
stos
xchg
daa
out
xchg
rcrl
pusha
js
xchg
jp
jmp
mov
call
and
or
mov
in
div
aas
add
adc
mulb
mov
std
ljmp
stos
ss
call
or
or
adc
xor
ret
cld
adc
cmp
push
add
xor
incl
fldenv
fwait
rclb
inc
int3
cmp
outsl
xchg
xor
mov
lcall
incl
enter
mov
rorl
outsl
push
sub
mov
mov
addr16
stos
into
xchg
fimull
mov
out
ljmp
mov
mov
jge
notb
stc
subb
sti
lds
cmp
mov
push
pop
jp
pop
out
jmp
lods
in
in
mov
sub
mov
dec
out
imul
xor
jmp
repnz
aaa
cli
jge
cs
pop
mov
xor
jns
mov
aaa
ljmp
pop
fldl
jne
ds
mov
lcall
pop
mov
cmp
movsl
sbb
dec
add
ljmp
fstl
add
in
repnz
pusha
cmp
push
iret
in
xor
mov
test
jmp
sarb
repz
adc
xor
add
sbb
pop
aas
repz
dec
pop
and
std
popa
mov
cld
sub
cs
push
xchg
inc
sbb
jecxz
clc
lcall
fisubrs
lods
loope
shl
mov
xchg
and
adc
incl
mov
push
in
sbb
std
push
xchg
sahf
cltd
loope
jns
lods
in
and
mov
cld
decl
add
mov
test
loopne
lcall
fstpl
movb
in
cmp
push
repnz
jp
jg
sbb
outsb
xor
gs
mov
or
inc
neg
xor
adc
lret
mov
mov
mov
enter
into
mov
les
xlat
iret
jbe
pop
sub
fcos
idiv
movsl
pop
lock
cmp
call
and
push
sbb
sbb
pop
fstpl
mov
jae
in
inc
in
and
fimuls
xchg
aaa
dec
std
adc
pushl
pop
test
shll
decl
aam
mov
pop
ljmp
mov
pusha
push
xchg
adc
decb
cmp
adc
int3
pushl
mov
ret
in
imul
cmp
sub
mov
pop
fsubrl
add
push
aad
add
push
subb
mov
fucomip
ljmp
cmp
mov
push
pop
repz
js
out
out
mov
cwtl
mov
mov
call
push
rorb
ds
imul
jecxz
mov
xchg
cld
pushl
mov
xchg
or
leave
sbb
mov
add
adc
inc
enter
jbe
mov
jo
imul
xor
jno
or
in
mov
and
and
ret
mov
sbb
es
push
jg
jo
xchg
lcall
loop
ret
xchg
ljmp
mov
xchg
pop
cli
or
sbb
pop
mov
sarb
ja
push
ss
jl
in
cs
ljmp
repz
pop
add
inc
fistl
inc
sbb
jae
xchg
mov
lock
andl
jbe
testb
cli
pushl
mov
sbb
sub
dec
out
adc
lret
lcall
daa
dec
jmp
and
cld
cmp
les
xor
mov
xor
pop
inc
or
je
mov
in
push
cmp
outsl
cld
lds
clc
sbb
and
jg
mov
pop
enter
mov
cmpsb
sahf
cmp
out
push
icebp
xchg
push
pop
outsb
dec
lcall
loop
adcl
mov
cmp
cmc
shl
push
xchg
jl
hlt
fbstp
shlb
mov
call
ficoml
fwait
pop
cmp
mov
aaa
inc
int
add
ljmp
aas
sbb
cmc
repz
sub
xchg
xor
xlat
and
inc
pop
cmp
sub
cld
jmp
jb
test
xchg
push
sbb
mov
fcompl
or
lcall
sarl
cltd
repz
inc
mov
aaa
fdivr
lcall
add
fisttpl
mov
xorb
dec
xor
or
add
decb
je
xor
xchg
cs
pushf
mov
or
into
aas
mov
in
outsl
fmul
pop
lret
imul
inc
jnp
js
mov
out
jmp
in
mov
jg
sbb
das
sbb
mov
jmp
pop
mov
sbb
xor
pushl
clc
loope
jg
les
xchg
cli
cs
adc
js
and
xchg
insl
fadds
jl
or
popa
lcall
adc
incl
dec
in
cmp
or
stos
add
lahf
cmpsb
leave
pop
sub
enter
push
loopne
pop
sub
push
in
es
jmp
ljmp
or
sti
xor
xchg
or
inc
inc
add
jg
and
cmpsl
xchg
mov
out
in
mov
mov
lcall
cmp
and
sub
jmp
call
pop
sub
ljmp
cmpsl
icebp
jb
and
dec
sbb
add
adc
push
mov
fwait
loop
lock
and
cmpsb
xor
mov
inc
rcl
leave
sub
mov
sub
decl
insb
mov
movsb
ss
cmp
mov
pop
adc
rcr
adc
call
enter
jne
fisttpl
push
js
inc
out
cmp
inc
rclb
fcomp
int
sbb
icebp
cmpsb
pop
call
sub
ljmp
or
mov
mov
in
cmc
pop
and
jle
cmovb
cli
jmp
sbb
mov
fwait
sub
jno
pop
xchg
imul
pop
fwait
xor
mov
inc
jg
jb
or
ret
call
pushf
or
outsl
addr16
imul
cmp
mov
sub
adc
cld
xchg
jg
jmp
push
scas
sub
and
and
jo
inc
out
in
jge
pop
ljmp
mov
sbb
mov
dec
test
cmovo
lock
jmp
adc
add
push
mov
clc
mov
and
dec
mov
pushl
cwtl
enter
and
inc
cmp
lret
out
neg
call
adc
adc
mov
xchg
dec
outsb
out
xchg
ljmp
icebp
mov
insl
pushf
mov
jecxz
pop
std
push
lods
dec
addb
add
scas
inc
cmp
jmp
cmp
xchg
add
je
js
dec
call
jmp
ss
pop
lcall
push
lods
clc
dec
jmp
mov
xchg
out
loopne
mov
movl
pop
mov
iret
sbb
cld
sbb
inc
sub
in
pop
cli
incl
insl
dec
js
ljmp
call
adc
jle
fs
push
mov
sarl
inc
fs
mov
icebp
pusha
movsb
loope
rep
inc
push
and
push
cmc
fwait
sub
push
ret
notl
mov
adc
lahf
pop
push
mov
mov
xor
out
push
comiss
les
scas
int3
mov
popa
mov
fisubl
shll
dec
pop
stos
imul
arpl
ficoml
call
ljmp
cmpsl
xor
inc
pop
jge
je
inc
mov
mov
push
lods
sbb
sar
decl
mov
lods
push
push
loop
out
je
cmp
push
xchg
clc
popf
out
inc
mov
jle
pop
xor
pop
mov
mov
pusha
xchg
cltd
das
sub
fstpl
adc
shll
cli
dec
jmp
std
es
adc
mov
inc
lcall
aam
xchg
testb
mov
ljmp
pushl
add
dec
das
sbb
jno
clc
xor
addr16
jmp
daa
int
lds
sarb
mov
and
in
and
xor
gs
inc
lret
mov
divl
cmp
lret
flds
xor
jg
jle
mov
icebp
movl
mov
fistpl
lahf
std
push
aam
xor
add
shrb
or
out
ljmp
sub
inc
outsl
sbb
sbb
or
out
hlt
lods
fbld
int
sbb
in
inc
or
repnz
mov
sub
cld
incl
dec
popf
iret
lret
jp
clc
cmpsl
pop
ficompl
mov
repnz
pushl
jl
or
rdmsr
mov
sti
xchg
out
xchg
mov
clc
inc
cmp
incl
sbb
and
js
bound
or
push
decl
sti
out
arpl
lods
bnd
ljmp
push
add
mov
insb
mov
arpl
ret
or
jmp
sbb
sub
xchg
fst
pop
mov
sub
and
aaa
sub
sub
jle
pop
cmpl
fstpt
lock
jb
sbb
stos
je
fsubr
ljmp
mov
imul
jecxz
jbe
push
or
jg
lcall
mov
add
xchg
sbb
faddl
mov
into
popa
ljmp
jmp
repnz
add
sbb
inc
loope
and
fwait
mov
in
pushl
icebp
mov
adc
fsubs
add
add
jcxz
stos
or
jmp
jecxz
add
call
sub
mov
hlt
arpl
sti
xor
jl
jmp
addl
dec
pop
or
cld
cwtl
push
or
lret
pop
jbe
test
loope
cs
aaa
pop
orb
push
mov
xchg
mov
jg
jg
xchg
push
jbe
sub
nop
jmp
loop
daa
popf
lret
jle
ljmp
movl
fadds
mov
cs
nop
andb
fisttps
add
cmp
jno
jle
or
scas
pop
into
shrb
sbb
mov
mov
cmpsb
ds
js
inc
or
lcall
add
push
movsl
push
loope
sub
jae
xor
call
lock
mov
shll
cmpsl
adc
and
fdivrl
cmp
cmc
fimuls
or
lcall
jg
or
or
mov
sbb
cmpsb
fstps
pop
addl
es
pop
test
pop
mov
loop
xor
int3
jbe
outsb
mov
incl
hlt
negl
call
jae
cltd
jb
aaa
into
das
push
pop
pop
mov
aad
jg
pushl
in
test
cmp
adc
cmp
lret
insb
hlt
dec
xor
sub
xchg
pop
xchg
xchg
fdivrl
push
mov
cwtl
sbb
test
out
jp
in
pop
lahf
pop
xchg
in
loop
push
xor
adc
std
inc
xlat
ja
incl
dec
sahf
inc
push
jo
call
add
addr16
mov
pop
jbe
repz
outsb
loop
or
push
hlt
cmc
ret
clc
sahf
xchg
dec
mov
popa
ljmp
in
out
out
ret
inc
jae
outsb
mov
inc
ljmp
lock
setle
mov
inc
addl
repz
dec
and
nop
out
aaa
cmp
lcall
sub
jp
mov
xorl
and
orl
lret
aad
dec
in
jbe
in
mov
enter
xor
fsubrl
shlb
jge
jl
jg
push
arpl
sub
mov
jg
mov
lahf
arpl
jg
adc
adc
imul
sub
in
sub
stos
inc
xor
call
incl
cmp
ss
xor
xor
push
ss
das
pop
clc
std
scas
sbb
dec
mov
pop
filds
pushf
psubq
inc
inc
fwait
adc
cld
decl
mov
sbb
jl
push
and
out
pop
dec
js
decl
mov
inc
jecxz
cmp
in
sbbl
jmpw
mov
dec
jmp
mov
dec
and
loope
cltd
aas
pushf
or
clc
call
es
mov
cmc
sub
xchg
jne
jp
and
cmp
je
je
sub
xchg
inc
inc
in
mov
cmp
xchg
jmp
in
jg
loope
js
mov
imul
xor
adc
mov
adc
decl
fdiv
xor
sub
pop
cmp
jmp
push
cld
leave
sbb
xchg
push
lret
popa
cmp
mov
call
pop
xlat
sti
pop
jnp
xchg
sbb
cld
jns
int
push
shrl
push
fldt
out
mov
imul
jmp
in
and
mov
or
push
cmc
daa
jp
add
incl
or
ret
call
push
mov
mov
outsl
hlt
aaa
jae
adc
fimull
lret
fld
push
xchg
xor
cmpsl
cmp
mov
jle
mov
stos
mov
test
test
xchg
int
inc
add
insl
jae
mov
cs
test
push
xor
adc
call
push
mov
add
jmp
push
mov
and
push
mov
mov
clc
mov
lock
and
test
jmp
jg
sbb
cli
sub
cmp
mov
and
ud0
lock
imul
cmp
sub
mov
incl
mov
add
cld
xlat
jg
popw
or
fistpll
loopne
lock
mov
imul
mov
sarb
lcall
cli
decl
inc
movsb
dec
xchg
sbb
jno
lock
dec
jo
or
sub
cltd
popa
loopne
call
les
sbb
pop
ds
pop
adc
sarb
mov
pusha
or
aaa
clc
fstpt
enter
fwait
mov
mov
pop
mov
call
inc
aas
nop
out
jae
mov
sbb
leave
cli
jmp
rorl
sub
faddl
push
sar
incl
or
rorl
ret
push
mov
call
je
mov
out
pusha
mov
pop
push
push
mov
rcrl
mov
fdivrs
mov
push
pop
call
dec
cli
lcall
imul
pushf
xchg
sub
add
ljmp
sbb
dec
shlb
test
xlat
cmc
lods
jle
pop
pop
push
jg
orps
stos
inc
test
pop
jns
xor
ljmp
lods
dec
xchg
int
scas
addr16
mov
mov
outsb
xor
ljmp
lods
cmp
out
push
adc
iret
stos
in
aas
jno
pop
ljmp
je
test
sub
cli
add
es
mov
jmp
cltd
lea
xorb
jp
add
jnp
cmpsb
movsb
mov
push
mov
ljmp
aaa
ret
mov
aaa
das
insl
mov
add
inc
inc
mov
ljmp
out
or
fisttps
and
dec
jno
outsb
push
dec
jbe
xchg
cmpb
ljmp
mov
sub
lock
adc
cmp
jg
aaa
cli
adc
lods
mov
add
mov
test
and
ret
andl
mov
and
fcomip
mov
test
pop
pop
loopne
xchg
leave
mov
lock
mov
jle
pop
push
stos
aad
adc
inc
das
inc
leave
enter
loop
cli
pop
adc
mov
decl
mov
icebp
dec
sbb
in
lret
lcall
mov
fs
cmp
cs
dec
mov
fistpll
xchg
inc
mov
hlt
aaa
lret
pop
xchg
rolb
push
cli
mov
jmp
jge
pop
ljmp
pop
lea
cmpsl
dec
push
rcl
dec
les
clc
js
ret
stos
jne
push
dec
in
add
sbb
push
cmc
dec
lret
xchg
sbb
dec
dec
or
dec
mov
nop
and
imul
cmp
test
mov
pushl
xor
sbb
rclb
sbb
xor
incl
jns
inc
js
insl
push
insl
adc
out
inc
push
cmpsl
dec
push
call
fldt
prefetch
lret
push
add
mov
xchg
push
sub
lcall
call
popf
sub
adc
push
pop
movsb
jl
push
leave
repnz
pushl
pop
cli
pop
call
rcll
insl
ss
pop
pushl
and
jp
js
pop
or
cmc
pop
test
or
mov
ds
jg
push
popa
sub
int
out
das
mov
ffreep
xor
aam
jmp
push
pushl
ljmp
sub
mov
and
ret
cmp
cmpl
insb
adc
xchg
lahf
adc
call
daa
cwtl
dec
int3
mov
aas
out
lahf
sub
out
push
jnp
sbb
sti
lret
mov
aam
add
xor
out
mov
imul
pushl
lea
rclb
ja
leave
stos
jae
xor
popl
and
es
outsl
lock
out
sahf
dec
adc
out
stos
aam
cmp
mov
sub
fldl
les
hlt
je
aam
les
scas
mov
push
std
xor
xchg
or
call
dec
sarl
cld
mov
insl
mov
iret
sbb
adc
pushf
out
ja
loop
and
jg
mov
fmuls
or
cmp
cs
test
insb
and
push
imul
decl
clc
shlb
and
dec
xchg
pop
std
pop
stos
inc
jbe
sbb
ljmp
lret
mov
pop
xorl
mov
adc
out
imull
incl
lods
fs
dec
pop
addl
daa
mov
mov
add
push
mov
scas
xchg
hlt
sub
cmp
push
ds
sbbl
decl
cmp
ja
lcall
xor
sub
jp
decl
ret
mov
mov
jg
loope
in
jo
inc
repz
insl
push
scas
add
xor
lret
push
mov
cmc
sbb
jne
call
ficoml
add
popl
jmp
xlat
fs
das
adc
in
jle
lods
stos
push
stos
xor
xor
decl
lret
ds
in
and
sub
pop
mov
shl
xor
mov
xchg
or
pop
in
out
mov
dec
xor
cld
mov
lret
mov
jg
xor
sub
dec
jns
into
add
sbb
mov
jg
jg
adc
fnstenv
cmp
xor
xchg
dec
lahf
ret
shll
add
loopne
into
push
push
test
inc
leave
lock
xor
das
je
or
enter
int3
icebp
jmp
outsl
mov
inc
cmp
mov
adc
nop
icebp
in
fwait
mov
push
xchg
sbb
jmp
js
xchg
imul
sub
dec
cmp
pop
movsl
sbb
xor
in
cmp
push
js
repz
mov
mulb
and
mov
pop
xchg
iret
sbb
sbb
sahf
or
nop
lret
sbb
cmc
outsl
subl
icebp
mov
jl
pop
das
std
call
test
mov
jns
sub
addr16
pop
fldlg2
test
push
clc
lret
push
aas
rorl
mov
fndisi(8087
sbb
pop
lock
cld
jg
fsts
xor
test
movsb
add
scas
das
in
ret
jno
ljmp
sub
sub
pop
sub
cmpb
dec
icebp
pop
or
xor
incl
inc
sbb
dec
scas
pusha
ret
jmp
leave
into
dec
in
mov
std
mov
inc
add
mov
leave
add
adc
adc
push
mov
ljmp
inc
std
jne
je
mov
pop
jle
xor
push
jle
fisubl
incl
aam
push
jge
adc
mov
shlb
pop
mov
mov
add
sub
aas
ja
dec
ljmp
mov
fcomi
push
dec
sbb
aam
loop
and
addb
xor
push
das
icebp
jmp
ret
aaa
inc
out
xlat
pushf
xor
call
loopne
sbb
incl
jmp
sahf
dec
dec
mov
sub
int3
lcall
incl
scas
lret
andl
add
scas
and
cmpsl
les
shrb
gs
pushl
xchg
gs
andl
loop
inc
and
mov
rorb
lcall
cmp
rclb
mov
sbb
sub
in
clc
lcall
push
mov
rol
in
lods
add
push
mov
test
lods
push
and
test
cmpsl
shl
addr16
pop
jne
test
mov
orb
imul
ljmp
mov
cmp
nop
push
jp
pop
cmc
or
stc
movsb
lods
lret
jbe
mov
out
ljmp
inc
push
mov
pop
mov
aas
aad
xor
or
mov
call
sbb
xlat
add
pop
outsb
cli
mov
out
push
mov
popl
push
push
cli
mov
sub
dec
inc
pmaxsw
loopne
call
shr
nop
inc
and
scas
push
loope
cmp
jl
pop
inc
test
cli
cmp
std
lcall
andb
sbb
dec
andb
or
scas
xchg
fwait
add
mov
pop
enterw
jg
xor
inc
imul
pop
adc
lds
pop
push
mov
mov
nop
add
jmp
cmp
inc
stos
xchg
mov
pop
mov
fnstsw
iret
push
jecxz
ja
jmp
sbb
dec
sar
incl
insl
cmp
out
cmp
cmpsl
clc
lock
lret
dec
mov
sub
or
pop
hlt
and
incl
jne
std
dec
xchg
jae
push
jg
std
sbb
mov
mov
xor
adc
ret
mov
mov
add
jmp
addr16
cmpsb
loop
fdivrp
incl
jne
pop
push
ret
xchg
pushf
pop
cmp
pop
xor
push
divl
mov
incl
incl
inc
out
lods
inc
outsb
arpl
mov
xor
outsl
les
in
inc
add
pop
push
xorl
and
sbb
aad
xchg
sahf
pushl
int
dec
test
sub
cld
jae
add
inc
pop
jmp
jg
sub
sti
and
daa
mov
mov
push
fimull
aam
lahf
adc
test
sbbb
cld
push
stc
push
scas
adc
or
mov
scas
and
in
incl
bound
mov
std
out
mov
nop
out
stos
add
ljmp
cmp
or
xchg
push
call
lcall
cmc
dec
add
gs
lods
jnp
inc
push
call
repz
data16
icebp
add
pop
or
xchg
dec
daa
lea
decb
pop
fidivl
sub
pop
and
push
push
ljmp
fadds
push
stos
push
pusha
sbb
add
pop
inc
js
loope
mov
aas
scas
sahf
fistl
cmc
ljmp
inc
in
inc
inc
test
lahf
lock
pop
je
mov
or
daa
loop
cld
adc
in
lahf
or
incl
xor
pushf
stc
ds
gs
stos
outsl
inc
xor
ss
ljmp
inc
xchg
add
movsl
lret
xchg
movsb
mov
test
sbb
jp
jns
andl
out
neg
inc
dec
mov
xchg
xchg
pop
and
dec
push
lahf
aaa
rorl
cmp
dec
lcall
cmc
test
add
or
sahf
adc
imul
pushl
mov
mov
lahf
cmp
mov
push
cli
into
call
call
hlt
xorl
in
cld
mov
pushl
and
arpl
xchg
aaa
sub
mov
mov
outsb
pushf
pop
xchg
mov
icebp
call
sub
inc
mov
push
dec
call
ljmp
inc
cmp
fadds
test
pop
jb
rcll
imul
fisubs
sbb
decl
and
jg
sub
das
aad
mov
cld
pushl
js
arpl
adc
add
idivl
fstps
mov
pusha
ret
add
ret
fisttps
jno
mov
shl
xor
sti
sbb
rorl
pop
mov
jb
sub
pop
dec
pop
addr16
out
imul
fstl
test
mov
mov
ljmp
inc
add
popa
pop
lret
mov
loope
mov
mov
mov
dec
std
or
insl
insl
ja
shll
dec
fwait
aam
sbb
jno
ss
jnp
fcmovnbe
push
jne
mov
pushf
dec
inc
adc
sbb
sub
jg
hlt
inc
fdivrs
cmp
std
pop
jno
or
icebp
mov
ljmp
movsb
ret
jp
loop
jns
push
cmp
adc
enter
mov
inc
mov
jp
aam
data16
lcall
jo
mov
sahf
sbb
pop
inc
xchg
mov
fbstp
mov
das
push
inc
xchg
mov
pop
leave
or
fwait
pushf
ss
lods
nop
or
cmp
mov
rclb
mov
ss
sub
fs
cmc
mov
xchg
mov
dec
push
sub
xchg
jmp
cld
or
sbb
and
pop
mov
jecxz
jg
rcrl
lods
dec
and
pop
adc
fdivrs
mov
aad
test
sub
push
negl
jl
push
pop
loop
test
xor
out
loopne
dec
js
notl
ljmp
lahf
and
adc
mov
pop
jl
xor
les
mov
jmp
push
dec
scas
shll
repnz
mov
leave
ret
sbb
adc
push
mov
rorb
mov
mov
iret
mov
sbb
ret
mov
push
std
cmp
jne
push
pop
push
lahf
mov
push
xchg
test
mov
dec
push
mov
xor
xchg
jmp
shufps
fnsave
or
jmp
pop
out
loop,pn
mov
mov
je
jnp,pn
or
xchg
ret
in
movl
mov
add
ljmp
pmulhuw
imul
pop
push
bound
pusha
movsl
push
les
mov
into
ljmp
dec
lret
call
jmp
sub
stos
popf
pushw
push
push
adc
mov
push
mov
fildll
cmp
repz
test
mov
popf
dec
call
fmuls
jp
ljmp
pop
jo
int
scas
movl
push
add
stc
push
xor
inc
movsb
add
sub
ds
lods
incl
pop
cld
dec
sar
lea
xor
clc
jecxz
xchg
cmp
jp
dec
shlb
xrelease
pop
loope
mov
mov
cmp
adc
jge
test
jns
xchg
mov
mov
or
loopne
jbe
insb
mov
dec
int3
cld
dec
in
rcl
rcll
dec
fucomip
ja
mov
loopne
hlt
mov
push
mov
mov
fstps
jg
cmp
imul
adc
fisttpll
xor
aaa
add
mov
arpl
lcall
cmc
clc
push
xor
into
iret
fwait
push
in
add
shll
lret
and
in
orl
repnz
adc
sbb
lock
orl
test
cmp
call
mov
xchg
push
popf
xor
cmp
sti
les
push
shrl
mov
mov
cmp
lods
dec
sahf
cmp
lock
xchg
mul
mov
jp
jmp
mov
lods
stc
fabs
fs
nop
lahf
xchg
sbb
mov
add
xlat
cld
js
into
push
insl
push
in
inc
cwtl
cwtl
mov
pop
sbb
pusha
je
xchg
ret
out
pushf
in
xchg
lcall
xchg
sbb
inc
xor
lods
gs
lcall
loopne
int
aas
sarl
inc
js
jmp
push
flds
movsb
mov
mov
outsl
je
add
sbb
insb
dec
jb
push
enter
cmc
mov
inc
stc
pop
ret
and
jle
push
and
nop
sbb
mov
das
aad
jmp
negl
stos
enter
std
mov
push
sarb
lret
fs
decl
mov
icebp
fcompl
and
push
dec
sub
lcall
sbb
jns
sbb
mov
adc
mov
in
fcomps
sub
cmp
xor
mov
add
das
add
jg
dec
xchg
adc
lock
mov
xor
aam
push
mov
insb
adc
shrb
adc
sbb
test
or
jmp
mov
cmp
popf
lds
data16
lahf
xchg
movsl
cmp
iret
pop
mov
lcall
out
sbbb
imul
jmp
aam
sub
dec
dec
cmp
pop
cmp
iret
in
mov
out
jo
sbb
mov
out
cs
fnstsw
jg
cwtl
call
out
ret
std
push
jae
sbb
out
sbb
push
adc
imul
add
cltd
mov
scas
shlb
cwtl
mov
lock
and
and
inc
cmpsb
movl
dec
cmp
arpl
push
decl
pushl
sub
sbb
sbb
cmp
jge
mov
incl
repnz
in
mov
ja
cmpsb
mov
add
jle
fucomip
inc
fucomi
sbb
jecxz
or
push
addl
mov
pop
jmp
jecxz
dec
lea
incb
jno
and
cs
nop
call
add
xor
jle
imul
adc
or
lods
sbb
lock
mov
and
jmp
push
cmpsl
test
push
movsl
mov
je
incb
inc
aas
mov
pop
sar
incl
sbb
fwait
jg
mov
loop
aad
sbb
xchg
stc
pop
cli
imul
sub
cmp
pop
in
movswl
mov
and
pop
mov
xchg
pop
lcall
cmp
adc
pop
mov
decl
lea
in
mov
push
xchg
movsb
sub
gs
fmuls
inc
jo
push
gs
push
aam
or
pop
addr16
insl
ljmp
mov
sub
lret
and
incl
or
or
add
pop
addr16
pop
out
mov
add
shll
std
decl
fwait
sub
push
and
sbb
daa
cli
out
xchg
jmp
sbb
mov
jp
in
sub
lahf
push
fsubrl
xchg
dec
cltd
xor
mov
ljmp
sbb
and
aam
test
shlb
and
data16
xlat
gs
call
lcall
mov
xor
mov
push
mov
jne
sbb
adc
jmp
inc
popf
rcl
das
push
sub
ds
cmp
sub
aam
or
adc
mov
pusha
pop
std
adc
js
add
sar
jg
pusha
inc
repz
mov
sub
mov
loopne
mov
sbbl
imul
sti
xor
ljmp
call
test
xor
out
jmp
sub
and
sub
into
inc
sub
push
or
fiaddl
sub
outsl
jb
aad
je
faddl
pushl
xorl
pop
int3
prefetchnta
ficomps
sbb
fsub
add
sbb
movsb
cmp
icebp
cwtl
enter
mov
mov
test
mov
mov
push
push
push
jns
jl
cmp
mov
and
xor
adc
incl
cld
push
sub
mov
ss
std
repnz
or
mov
incl
adc
or
cltd
or
mov
fcmovnu
mov
push
pop
lock
lock
bound
popf
mov
add
lock
faddl
mov
test
and
test
adc
xlat
push
stos
movsb
mov
clc
pushl
add
mov
sub
xlat
aas
jmp
in
std
mov
cwtl
in
jle
repz
cmc
jne
clc
or
call
incl
push
inc
push
lods
mov
cli
xor
in
add
pop
mov
scas
insl
and
pop
incl
jg
dec
sbb
repnz
push
int3
pop
into
sbb
adc
decl
cmp
fs
test
mov
adc
adc
inc
pop
nop
add
sub
ljmp
insl
sub
les
pop
out
jno
push
adc
movsl
xchg
xor
inc
and
push
xlat
sub
stos
or
adc
adc
fisttpl
xchg
addr16
jmp
fdivr
mov
hlt
icebp
mov
mov
scas
dec
je
shll
adc
fimuls
loopne
mov
pop
cli
pop
fnsave
sbb
push
inc
adc
pop
dec
jmp
mov
rclb
aad
pop
insl
sub
ja
push
in
fiadds
fcmove
fs
das
fnstsw
enter
cmp
sbb
cli
sbb
mov
out
and
xor
js
pushl
add
xor
inc
sbb
inc
andl
or
push
fldl
xchg
je
call
repz
xchg
push
dec
add
testl
dec
fcos
mov
call
insb
mov
push
jmp
aam
shrl
imul
aad
xor
jb
sbb
incl
adc
mov
mov
bound
mov
loope
enter
pushf
or
fisubl
jnp
adc
xchg
inc
call
mov
jne
loopne
push
scas
and
pop
lahf
dec
jg
jge
popf
adc
decl
int
inc
sub
insb
cwtl
icebp
iret
jne
lret
cmp
lds
xorb
push
pushl
xor
std
inc
cmp
lea
movsb
lock
or
mov
daa
sbb
decl
testl
fwait
jg
ss
xchg
mov
sbb
add
inc
loop
clc
ljmp
jecxz
xchg
repz
in
push
loopne
loope
loope
push
pusha
add
jle
mov
sarl
jbe
cwtl
scas
pop
inc
jb
mov
fimull
outsl
xchg
add
lahf
inc
aad
mov
in
into
mov
enter
mov
lahf
push
pop
sbb
dec
mov
inc
or
mov
xchg
mov
sbb
jo
test
ret
pop
mov
jne
mov
decl
or
repnz
mov
dec
mov
inc
cmp
pop
jb
pop
xchg
lock
mov
and
dec
outsl
dec
xchg
pop
scas
inc
addb
test
sbb
add
inc
inc
cs
ljmp
xchg
cmp
lcall
cmpsb
or
and
rol
ret
call
ljmp
mov
adc
aaa
ss
mov
mov
rorb
mov
fdivr
sub
stc
and
and
mov
ljmp
mov
xchg
into
xchg
jo
jg
gs
je
scas
sarb
insb
push
stos
gs
cmp
cmpsl
pop
gs
nop
subl
aad
decl
push
out
pop
sarb
aad
fmull
int
and
xchg
inc
or
outsl
push
aam
pop
mov
pop
es
pusha
jg
push
pop
stos
pop
outsl
cld
lcall
filds
xchg
dec
inc
cmp
jnp
dec
jmp
movsb
push
aas
fwait
sti
imul
ret
and
add
daa
mov
jmp
and
push
popa
and
jecxz
xorl
es
stos
testl
add
clc
test
push
test
stc
push
ret
in
repz
dec
jno
mov
mov
pop
bound
jecxz
dec
call
stc
pop
mov
aas
and
call
int
or
popa
xor
mov
mov
out
lcall
xlat
xorb
lcall
cld
add
lods
jnp
or
or
stos
incl
dec
cmp
call
pop
xor
xor
repz
mov
push
dec
repz
inc
xor
lcall
je
call
mov
movsl
call
add
subb
add
cmpb
jg
out
and
mov
fsubs
push
ret
or
je
dec
xchg
incl
jmp
sub
jg
pop
sbb
sbb
and
mov
sub
pop
jg
lcall
fwait
cmpsl
pop
ret
lods
into
push
xchg
je
mov
mov
call
andl
or
xchg
stos
and
lcall
shlb
movsb
mov
jecxz
jo
or
inc
aas
aas
cltd
mov
decl
jmp
fidivs
std
insl
rorl
or
adc
ja
out
and
das
mov
incl
dec
mov
and
fidivrl
test
jmp
insb
test
mov
inc
adc
je
adc
xchg
mov
sti
cmp
pop
push
arpl
xor
faddl
cltd
and
lret
movsl
movsl
mov
sub
repz
ljmp
jl
xchg
dec
je
nop
fildll
push
cli
xchg
cmp
leave
cmp
es
movsl
aam
scas
jle
call
das
mov
or
fnstenv
push
orb
lcall
into
rcl
iret
rorl
mov
mov
jg
jg
test
ss
das
push
jecxz
dec
push
ret
popf
lret
and
ljmp
decl
mov
stos
scas
dec
bound
jg
cmp
fbstp
pop
mov
jns
push
jb
and
jb
xchg
push
lods
jecxz
push
fstpt
jne
outsb
call
das
pop
orb
mov
fidivl
icebp
xchg
into
dec
mov
dec
call
inc
pop
call
icebp
dec
mov
sub
addr16
xchg
inc
daa
pushf
dec
fmull
adc
std
inc
push
fldenv
add
inc
xchg
outsl
out
shr
adc
push
mov
jnp
jg
call
out
mov
aaa
popa
pop
les
mov
mov
data16
lock
clc
mov
repz
les
imul
inc
sub
add
mov
and
aad
push
mov
cmc
dec
mov
ss
shrb
mov
cmp
lock
inc
fidivrl
pop
loop
jmp
jp
das
dec
leave
stc
idivl
cmpsb
jno
pop
mov
adc
mov
loopne
sub
xchg
push
xchg
loopne
ret
mov
pushf
mov
dec
insl
cmp
enter
repnz
cmc
in
incl
mov
imul
mov
out
xor
test
inc
jnp
inc
or
and
ret
mov
outsb
sti
mov
repnz
pushf
mov
xorb
jmp
std
ja
adc
dec
je
leave
ss
iret
xorl
inc
popf
cmc
xor
mov
pop
mov
andb
fldcw
je
xchg
push
and
add
fistpll
cli
in
aas
sub
call
into
cmp
dec
pop
adc
mov
jae
jbe
test
pop
shlb
pusha
icebp
fildll
lcall
mov
incl
ds
cmpsl
lods
in
inc
adc
push
hlt
das
movsl
arpl
out
test
mov
fldt
fs
stc
xor
push
mov
jge
jae
int3
mov
in
outsl
xchg
lcall
dec
sbb
xchg
je
popf
dec
xor
rolb
mov
lock
dec
mov
mov
cli
iret
outsb
aad
bound
jmp
push
and
mov
mov
into
mov
sub
das
cld
jmp
outsb
lods
dec
aaa
smsw
ja
inc
pop
sbb
out
lock
xchg
push
notl
push
js
daa
lret
cmpsl
pushw
push
jbe
sub
xchg
idivb
mov
inc
adc
notl
dec
cmpsl
daa
cmp
mov
js
inc
ljmp
movsl
add
fwait
lcall
mov
xchg
js
push
add
and
xchg
std
fldl
ficoms
cmp
je
sbb
jg
bound
mov
call
sti
mov
xchg
pop
fdivl
adc
stos
lcall
mov
mov
sarb
jbe
insb
and
call
js
add
push
mov
mov
push
xor
and
jmp
hlt
jl
stos
subb
cmc
mov
repz
cmp
jmp
mov
xchg
mov
push
cli
aad
jge
xchg
mov
xor
repz
std
pushl
inc
je
push
inc
lds
fsubs
enter
decl
fisubs
mov
lret
gs
cli
lcall
push
in
dec
inc
xor
xchg
xlat
decl
jns
add
jno
lcall
js
add
pop
add
or
std
xor
push
and
or
add
mov
daa
int3
mov
fnstsw
daa
out
call
and
loop
fiadds
inc
lods
fldl
adc
idiv
test
shll
loop
pop
add
filds
notb
jg
aaa
decl
inc
inc
mov
mov
mov
call
mov
leave
dec
repz
ds
faddl
add
inc
push
in
xor
fsubr
jl
push
jg
jno
rdmsr
xlat
sbb
mov
pop
dec
lcall
jle
out
lock
data16
addr16
adc
mov
mov
pop
movsl
pop
pop
adc
aad
push
aad
scas
sub
push
inc
push
mov
jp
sub
in
ret
pop
cmp
lcall
cmpsb
out
shrb
movsb
xchg
push
inc
je
mov
shll
push
cmp
pushl
pusha
mov
fsub
mov
mov
insb
pop
cmpsb
cmp
jmp
xor
mov
daa
fnstenv
jns
jle
sahf
mov
decl
in
lea
push
mov
int3
stos
insb
ljmp
inc
xor
mov
fdivs
add
std
lcall
iret
lret
cmp
imul
mov
out
fdivrs
xchg
clc
test
push
sub
out
icebp
lcall
dec
fisubs
and
sbb
adc
pop
push
cmc
sub
jp
lcall
xchg
and
xor
mov
sub
sarl
pop
mov
xor
js
loope
pop
mov
arpl
cmp
dec
adc
call
add
push
lret
mov
subb
xchg
insl
inc
sbb
mov
ss
or
loop
inc
insb
repnz
dec
pop
cli
jecxz
out
sub
int3
sbb
push
sbbb
sub
mov
ja
ficomps
cwtl
sbbl
call
clc
jecxz
sub
sub
shrl
or
hlt
movsl
paddb
mov
adc
mov
push
add
mov
hlt
mov
outsl
seto
mov
stos
shl
push
test
rclb
call
adc
cmp
ret
sub
mov
push
popa
ljmp
sbb
pop
in
loopne
in
cmpsl
push
lea
shlb
mov
pop
jbe
jnp
scas
imul
sarb
das
cld
mov
cmpsl
cmp
repnz
and
push
xchg
mulb
out
scas
icebp
call
lahf
ja
test
mov
inc
inc
out
inc
jb
xchg
fsubp
mov
xor
xchg
push
cmp
pop
xlat
or
adc
inc
and
test
xor
jmp
clc
sbb
adc
es
sub
nop
int3
cmp
mov
out
arpl
out
rol
pop
outsl
mov
sbb
xchg
imul
mov
jno
jg
jmp
ret
loopne
jmp
ret
icebp
mov
sbb
xchg
clc
pushl
out
icebp
jbe
test
jmp
fnstsw
dec
mov
push
pop
imul
inc
lcall
add
mov
sub
data16
bound
lods
sub
lcall
and
sbbb
in
notl
jg
clc
aaa
push
mov
mov
fwait
pop
mov
rcr
xor
jmp
mov
xchg
mov
andb
adc
jmp
mov
ret
notb
imul
rolb
dec
test
js
mov
movsl
dec
and
ret
inc
adc
or
pushl
fcomip
pop
pusha
xchg
cmpsl
jle
xchg
lahf
dec
mov
and
stos
mov
dec
jl
call
ja
pop
xor
cld
sbb
xor
pop
xchg
xor
pop
pop
dec
mov
aam
in
xor
stos
add
adc
pop
jmp
out
hlt
ljmp
sbb
jge
push
data16
ds
adc
ljmp
inc
xchg
pop
call
dec
ja
popf
cmp
sbb
mov
sbb
les
push
jmp
inc
mov
dec
rcll
or
sbb
cwtl
mov
push
pop
clc
inc
jmp
ljmp
cmp
out
push
fdivrp
push
mov
inc
or
test
mov
add
stos
jnp
lret
loopne
xor
inc
scas
mov
movsb
outsl
cmc
lcall
shr
add
xor
xor
pop
push
pop
jp
mov
lock
das
jnp
movsl
mov
stc
jbe
in
movsb
xchg
mov
outsb
cmc
lret
cmc
insl
mov
mov
sbb
popf
push
cwtl
inc
add
inc
pop
call
lcallw
lret
mov
jg
cmp
cs
cld
fdivs
push
xchg
sub
outsl
jae
lcall
test
incl
mov
cmc
add
in
loope
icebp
lea
push
push
dec
stc
push
gs
in
and
movsl
jle
xlat
add
jno
xor
ljmp
loopne
lea
cltd
mov
cmp
xchg
test
es
mov
mov
pushf
rclb
add
lods
xor
outsb
dec
subb
jge
lea
call
test
add
mov
test
les
and
in
or
adc
cs
test
pop
jne
negb
icebp
ljmp
sub
call
mov
ja
dec
sbb
lock
imul
pop
adc
leave
aad
mov
and
fadds
pushf
mov
orl
std
push
mov
push
shlb
inc
aam
ds
mov
bound
dec
divl
jg
decl
cmp
data16
xor
push
jle
mov
mov
outsl
popf
movsb
imul
pop
fisubs
inc
movsl
shr
jns
ljmp
out
sbb
mov
mov
push
dec
pop
int3
outsb
jl
test
test
pop
aas
jg
jmp
push
icebp
mov
dec
or
push
mov
dec
inc
push
pop
js
cltd
imul
lock
pop
mov
rorl
test
ss
jg
fldl
scas
bound
fldcw
call
jmp
sbb
mov
sahf
test
imull
push
lcall
std
cmp
cltd
xchg
lock
push
sub
pop
xchg
ja
push
out
call
nop
mov
out
cmpsl
mov
ljmp
out
lock
jmp
or
adc
inc
in
loopne
add
ljmp
mov
imul
adc
push
sbb
jne
hlt
pop
xlat
shlb
lcall
xor
dec
mov
popa
mov
inc
mov
into
icebp
lcall
das
test
dec
push
call
psubsw
je
inc
sub
sub
rclb
jnp
std
cltd
ja
stc
lret
xchg
inc
ja
lcall
ficoml
outsl
test
dec
xor
pop
fnstsw
in
push
and
sbb
jbe
mov
pop
incl
out
adc
fdivrl
dec
mov
pushl
inc
jnp
mov
xchg
dec
or
lods
and
daa
leave
cmp
sbb
movsl
inc
test
lea
rolb
fisttps
jo
icebp
ja
stc
cs
lcall
sbb
daa
fs
jnp
test
pop
push
adc
std
push
add
pushl
push
test
add
lds
sbb
sti
or
sub
adc
icebp
imul
sub
mov
pop
call
ds
mov
shrb
ljmp
lods
out
stc
and
lds
pop
std
push
loope
mov
push
fxch
mov
add
aaa
inc
movsl
fs
hlt
jne
mov
lcall
pop
outsb
mov
sbb
imul
daa
sbbb
decl
std
es
jno
sbbl
cwtl
lahf
roll
out
ljmp
xor
adc
fdivrp
orb
pop
je
mov
subl
decl
adc
popfw
into
ja
jb
scas
jbe
pop
sbb
test
out
xor
pushl
sbb
inc
add
lea
dec
call
std
divl
shrb
in
sbb
add
call
jns
push
jno
mov
push
js
arpl
rcl
or
add
pop
and
incl
test
je
arpl
or
pop
lods
out
cltd
xchg
or
jle
pushf
pusha
lcall
add
sub
cld
cmpsl
js
stc
sub
add
fdivrs
enter
mov
inc
fwait
add
push
push
dec
popf
loope
stos
aaa
xchg
mov
mov
xor
adc
cmc
out
and
cmp
jecxz
std
dec
push
aad
mov
je
mov
leave
fmul
int
jg
jg
daa
mov
lock
sahf
mov
pop
sub
jle
cld
jg
pop
sahf
dec
xor
mov
fsubl
mov
ja
stos
lcall
pop
nop
ja
rcl
sub
xchg
dec
push
test
push
push
andl
lcall
jnp
jno
cli
aad
fidivrl
push
sahf
lahf
fildll
repnz
decl
and
lret
popf
mov
testb
pop
jnp
pushl
or
cmp
xchg
mov
mov
iret
pusha
call
mov
mov
data16
out
sahf
add
or
daa
and
jns
call
jno
cmp
lods
sbb
aad
fdivrs
icebp
or
ljmp
jns
push
mov
push
fistpll
in
int
pop
flds
out
cld
nop
jne
sub
inc
adc
aam
call
push
movsl
sub
call
xchg
cmp
adc
stos
stc
pop
int3
xor
dec
insl
cs
out
data16
add
call
fsts
in
pop
pop
inc
lock
aam
pop
mov
mov
sub
scas
mov
imul
rcrb
pop
jg
decl
test
fcoms
sub
sarb
scas
movsbl
clc
sbb
call
push
das
cmp
pop
inc
jle
shll
or
push
pop
dec
mov
sub
je
pop
xchg
sbb
lcall
stos
dec
inc
shr
or
sbb
push
fmulp
iret
xor
jmp
or
mov
or
loop
jecxz
cmp
or
cmp
or
mov
pop
mov
push
inc
adc
mov
and
scas
ds
ror
push
outsl
jl
dec
xor
xlat
inc
cltd
inc
mov
and
decl
and
inc
arpl
fxam
inc
jb
push
mov
rolb
cltd
loope
ljmp
xchg
aam
arpl
or
loope
sbb
push
add
arpl
ds
pushl
push
xchg
rcr
out
lcall
imul
int
ljmp
lock
ficomps
hlt
or
test
jmp
mov
test
mov
jbe
sbb
xchg
jg
stc
adcl
add
negb
ja
sti
fwait
mov
mov
fsubrs
add
jg
mov
mov
adc
jle
int3
out
or
adc
movsl
xchg
pop
pop
in
mov
cmpsl
test
and
rcrb
call
dec
inc
mov
and
and
adc
nop
dec
lahf
popl
sbb
jg
cmp
mov
int3
test
cmp
test
aaa
lcall
lds
xchg
push
fs
out
cld
lahf
jnp
int
out
ljmp
test
insl
xor
fbstp
cmp
pop
test
incl
movsb
jecxz
icebp
xchg
push
daa
push
aad
push
lods
cmc
outsl
outsl
ljmp
mov
add
xchg
inc
xchg
aaa
clc
lcall
ffreep
jns
add
ret
mov
push
pop
add
movsl
fistps
lcall
test
xchg
leave
lret
push
les
roll
lds
inc
sbb
icebp
std
lcall
and
arpl
xor
stc
lds
sarb
add
decl
or
incb
outsl
and
clc
nop
scas
xchg
clc
lcall
rcr
adc
mov
add
jnp
pop
pop
sbb
mov
ljmp
mov
xchg
xor
mov
ret
adc
fs
inc
decl
idivb
fadds
adc
lods
adc
pusha
ja
loopne
push
cli
dec
cld
dec
addr16
stos
inc
sbb
xchg
sub
and
call
pop
lret
and
cmpsl
jge
and
xor
ljmp
clc
imul
out
lods
jecxz
mov
mov
pop
xor
jne
xor
dec
adc
cld
fstps
xchg
cvtdq2ps
jge
pushl
ret
mov
adc
ss
cmp
ljmp
xchg
ja
adc
push
sti
jge
xchg
sbb
push
idiv
xchg
jg
and
pop
out
cmpsb
movsl
iret
sub
mov
call
fcoml
jno
fnstsw
jmp
pushf
pop
aam
scas
xor
cs
pushl
sbb
lahf
negb
push
pop
punpcklbw
shl
repz
xor
jo
fucomip
pop
cli
sahf
in
fucomi
addr16
fwait
pushf
pop
ja
pop
xchg
cmp
sub
leave
aam
pop
notb
data16
sarl
call
test
mov
ret
push
mov
jmp
js
dec
sbb
push
jae
dec
bound
in
mov
dec
jae
movsl
mov
lock
lcall
add
jb
or
pushf
mov
es
decl
sub
stos
xchg
pop
out
jp
inc
sahf
jge
jbe
sub
or
jmp
hlt
adc
and
cltd
add
mov
xor
sahf
rorl
push
std
dec
ljmp
lock
clc
mov
adc
fs
sarb
cmp
aad
ljmp
dec
pop
xchg
dec
pop
insl
cmpsl
loope
xchg
inc
sub
or
incb
hlt
add
or
mov
jg
mov
out
dec
clc
hlt
icebp
dec
push
and
jg
mov
mov
out
pop
rcr
pop
dec
call
xchg
stc
stos
mov
loop
shll
sarb
int
xor
mov
push
sub
outsl
in
out
jg
out
jge
jmp
clc
das
icebp
call
inc
fimull
mov
into
mov
cmp
mov
decb
push
fistps
out
fstps
push
mov
push
add
push
adc
mov
add
jae
popa
sub
test
scas
rcrl
movsb
cmp
xchg
push
dec
es
mov
lret
mov
movsb
lods
in
xchg
in
xor
pop
sbb
xchg
push
out
cmpsb
icebp
inc
in
lcall
rol
mov
test
insl
es
shr
rcrb
cmp
sbb
xor
mov
popa
sub
mov
rcll
pop
push
mov
imul
outsb
mov
sarb
inc
jmp
aaa
mov
int
loope
popa
jmp
lcall
idivb
ret
jae
test
ja
out
cmp
inc
fistps
mov
fwait
cli
push
push
mov
mov
std
lcall
cld
iretw
aad
adc
pop
xor
scas
jno
or
xchg
fcmovnb
call
mov
adc
out
mov
roll
sahf
into
jb
cld
xchg
mov
sbb
popf
or
stc
in
push
aam
aad
lock
lea
mov
or
out
clc
dec
mov
inc
jb,pn
sahf
mov
add
push
sbb
pop
loop
jnp
std
adc
adc
jecxz
jg
adc
adc
decl
mov
call
inc
mov
mov
xchg
mov
lods
mov
inc
cs
into
pop
je
cmc
xor
dec
test
fbstp
jns
jge
cmp
stos
xchg
outsb
cld
add
test
pop
stos
in
push
jnp
inc
outsl
lock
mov
xor
push
js
cmp
ljmp
mov
in
and
push
shrl
lock
roll
or
dec
shll
decl
xchg
es
xor
or
inc
jnp
dec
sbb
add
ljmp
sarb
fsubl
sub
xor
push
jnp
imul
xor
ljmp
lahf
push
lds
mov
mov
leave
clc
lods
add
mov
in
pushl
clc
test
adc
xor
xchg
test
mov
mov
sbbl
cmp
iret
inc
lcall
cmpsb
in
shr
xchg
dec
sub
mov
js
cmc
jmp
outsl
clc
push
subl
in
shrl
ljmp
xchg
add
mov
loope
mov
adc
fstpt
xchg
ret
xchg
ljmp
dec
mov
outsb
sbb
add
incl
fldcw
nop
into
jbe
xor
nop
pop
jmp
mov
ljmp
xor
sbb
jmp
adc
scas
int
imul
push
mov
jge
xor
xchg
xor
cli
sbb
push
lds
incl
sti
aas
addr16
lcall
fistpl
and
mov
sub
sub
fdivp
test
or
pushl
sub
paddw
movsl
sub
int3
pushf
sahf
mov
cmp
lea
mov
push
imul
and
arpl
sub
jne
test
iret
fnsave
sahf
adc
add
fdivp
in
xlat
push
xchg
mov
andb
mov
fcmovbe
jg
jmp
ds
aam
dec
nop
xchg
movsb
jg
fcmovnb
out
mov
cmp
and
ret
cmp
insb
mov
outsl
inc
bound
loop
cmp
stos
mov
je
mov
pushl
inc
xchg
nop
adc
push
push
dec
sub
les
cmp
push
pop
xor
imul
cmpsb
call
pushl
sub
insb
inc
dec
jo
pop
sti
pushl
jp
xchg
mov
adc
aaa
inc
or
orl
popf
inc
das
or
cs
inc
sbb
mov
into
scas
rorl
add
das
arpl
pusha
sbb
iret
and
lock
cmp
push
cmp
sub
fdivr
push
mov
xlat
dec
call
decl
stos
or
push
sub
rol
int
sahf
repnz
out
mov
lcall
sub
xor
aam
xchg
data16
cmpsl
jne
sub
loope
pushl
and
xor
and
insl
in
jo
pop
add
pop
stc
or
ss
mov
outsl
hlt
pop
fstp
sbb
sub
das
hlt
decl
lock
jmp
mov
fldcw
ja
incl
repnz
push
call
cmp
sbb
call
gs
popf
adc
insb
mov
jno
xchg
mov
aaa
ss
jns
sbb
jmp
inc
jbe
sub
je
decl
pop
outsl
sti
mov
dec
or
iret
mov
repz
jle
loopne
ror
mov
mov
ret
pop
sbb
xchg
outsb
xchg
imul
push
loop
aas
xchg
ljmp
hlt
fwait
xchg
add
jnp
clc
lea
sbb
pop
mov
adc
loopne
pop
xchg
pop
icebp
mov
mov
sbb
mov
fisubs
sahf
push
cs
dec
mov
jl
sti
lods
ret
sub
xchg
jo
aad
mov
mov
idiv
ficoml
push
add
loopne
or
pop
into
jp
cmp
das
mov
jg
mov
loop
aaa
pop
pop
add
cwtl
mov
sub
and
or
mov
lock
ljmp
sub
and
jo
push
clc
leave
xor
and
cmpl
rcr
ljmp
aaa
sub
xor
imul
cmpsl
fsubl
xor
jae
cmp
lea
lods
gs
call
lea
push
incl
fs
push
mov
popf
jbe
xchg
out
sub
test
incl
incl
int
push
pop
mov
call
pop
in
loop
repnz
mov
into
xchg
cmp
lock
pop
cmpsb
mov
push
xlat
ljmp
clc
jge
jmp
mov
fsub
addr16
negb
lcall
jp
aam
jp
mov
and
xchg
jno
hlt
insl
push
push
clc
dec
push
mull
dec
loopne
pop
xchg
loope
cmpsb
movsb
imul
inc
movsl
pushl
fstl
stos
nop
pushf
call
fucomip
call
cmpsl
add
test
mov
xchg
imul
push
hlt
mov
sbb
and
or
cmp
incl
add
jns
sbb
clc
fcompl
jae
outsl
icebp
decl
mov
nop
icebp
dec
or
jmp
xchg
dec
xchg
mov
test
sahf
ffree
and
in
dec
mov
xor
std
push
jecxz
mov
roll
sahf
popf
xor
cmp
xchg
push
ljmp
outsl
pop
sub
pop
dec
in
filds
add
inc
fs
decl
push
mov
sbb
adc
ljmp
inc
aad
lods
mov
movsl
mov
xchg
pop
ljmp
inc
jno
pop
or
ret
cmp
movsb
sub
incl
inc
lods
sbb
mov
jo
insl
xor
test
aam
mov
sbb
pop
push
ret
in
clc
addr16
dec
movsl
mov
mov
lcall
shlb
scas
shll
mov
mov
push
mov
push
into
jmp
adc
xor
rcrb
adc
dec
add
jns
xor
pop
iret
das
sub
push
xor
imul
push
xchg
push
inc
movzwl
ds
push
call
cmp
adc
cld
xor
fstpl
nop
divb
aam
aad
sahf
add
loope
pop
pusha
ss
pop
mov
in
cmp
lret
cltd
push
lods
call
cli
jg
jne
push
leave
dec
or
bound
sub
in
aam
enter
jle
cwtl
fldcw
aad
push
lods
xchg
xchg
push
mov
pushf
loop
mov
movb
dec
faddl
movsb
cld
ljmp
xlat
orb
pop
cmp
and
pop
fdiv
les
mov
sub
out
mov
cmp
lds
cmpsl
or
sub
jl
int3
mov
pop
xor
adc
sarl
decl
mov
sbb
cmc
cwtl
mov
jbe
mov
std
call
inc
or
cmp
mov
cmp
mov
das
cld
lcall
out
mov
sub
jg
sub
out
sub
jbe
testb
and
mov
inc
dec
adc
sti
cmc
and
test
arpl
movsl
ljmp
add
dec
loope
add
popf
pusha
dec
sbb
mov
in
decl
std
push
dec
cmpsb
push
jg
rolb
addb
pushl
cmpsb
jo
sbb
bound
mov
fsub
fiadds
xchg
int
outsb
loopne
insb
lret
cmp
cmc
in
popf
mov
sbb
fisubrs
add
in
pop
xchg
iret
lret
rolb
insb
dec
pop
mov
sub
xor
pushf
cmpsl
xchg
sahf
mov
lret
inc
push
push
jg
push
imul
xor
int
ljmp
xor
mov
ficomps
pop
sbb
pop
fcmovu
mov
inc
fs
call
idiv
scas
or
mov
add
mov
jl
cmc
movsl
loope
cwtl
aad
cmp
decl
insl
add
push
dec
mov
mov
je
mov
dec
ja
xchg
decl
dec
das
sbb
jnp
iret
push
push
dec
aad
sub
ljmp
call
cltd
push
or
es
mov
pop
lods
in
cli
in
repz
pop
xor
bound
jg
sub
pop
xor
xchg
mov
and
ret
mov
and
xchg
iret
data16
ret
xchg
push
inc
push
ljmp
and
in
insl
pop
sbb
adc
or
mov
outsb
nop
lock
in
ret
rcll
rorb
std
push
arpl
pushf
lret
daa
inc
pop
adc
insl
push
xor
mov
or
jl
adc
push
lea
clc
mov
add
das
jl
ljmp
aam
mov
fwait
mov
mov
ljmp
xchg
fildll
clc
rcl
dec
pop
pop
cmp
cmp
pop
outsb
or
decl
dec
in
adc
sahf
loope
rcr
cmp
out
in
les
pop
ret
adc
test
clc
fcos
mov
jns
or
xor
sub
jecxz
jae
mov
fcomi
sub
shlb
inc
stc
ss
sbb
sub
cmp
test
jns
adc
push
cmpsb
inc
imul
xchg
add
mov
ljmp
sbb
jnp
fdiv
jo
push
cs
lahf
xchg
ds
mov
jg
mov
push
mov
push
push
sub
cmp
push
pop
mov
pop
loope
push
stc
mov
jmp
addr16
out
mov
jg
flds
and
cmpl
popf
movsl
jg
lcall
dec
mov
inc
scas
jl
and
pop
sahf
inc
mov
rolb
lcall
arpl
fistpll
inc
pop
and
pop
ljmp
aaa
mov
pop
mov
jg
jb
icebp
sbb
mov
sbb
sub
in
push
mov
in
pushl
or
jmp
mov
xor
sub
je
movsl
inc
lcall
and
insb
loope
adc
cli
mov
cli
mov
call
pop
dec
fists
push
pushf
out
sbb
arpl
cmp
decl
sti
xchg
lahf
fisttps
mov
push
mov
adc
lret
mov
jp
pop
lret
repnz
pop
pop
repnz
cmp
cwtl
loop
mov
movntq
out
lods
lock
ljmp
ret
adc
lods
xchg
cmpsl
icebp
jae
mov
adc
int3
xchg
xor
lods
dec
aad
jne
or
mov
cld
lcall
ficompl
iret
xor
bound
xchg
fbld
sbbl
sub
add
mov
pop
xchg
dec
subb
add
add
dec
jno
out
icebp
sbb
ljmp
mov
in
vpshld
es
mov
adc
mov
ret
sar
pushl
fs
jb
add
outsl
inc
jl
or
sub
inc
loopne
cmp
lret
dec
lahf
push
imul
jmp
setbe
mulb
cmpl
leave
adc
in
mov
outsl
cld
xchg
pop
add
or
sub
in
es
scas
jb
lock
hlt
and
sub
and
pop
jno
or
adc
out
push
lods
lcall
push
sbb
imul
adc
cmpsb
jbe
data16
out
pop
clc
das
hlt
lock
dec
xor
add
std
and
decl
pop
movb
int
sub
jecxz
adc
stos
push
sub
jg
push
add
incb
inc
xchg
inc
outsw
add
dec
nop
pop
or
test
mov
clc
push
aam
pop
sahf
or
lcall
add
movsl
push
xchg
push
sahf
inc
inc
dec
mov
cmp
inc
das
sarl
push
xor
mov
js
mov
out
icebp
out
xchg
cli
mov
inc
loopne
add
cmpsl
push
shrl
lret
dec
xchg
lods
xchg
popf
repz
stc
cmp
dec
jo
jmp
mov
xor
fildll
fcomip
adc
nop
mov
push
lods
mov
mov
cmp
inc
test
decl
or
pusha
scas
pop
repz
into
lcall
bound
xchg
cli
decl
pop
push
leave
cli
cltd
and
lcall
js
xchg
loopne
and
and
aad
add
add
or
push
dec
scas
ljmp
lock
stc
jno
cwtl
fnstsw
pop
jmp
rorl
xchg
repz
in
aaa
jno
nop
rclb
push
ss
lcall
pop
push
mov
push
adc
sti
dec
cmpsb
sbb
sbb
mov
cmp
mov
leave
push
adc
pop
ljmp
sub
ficoml
xlat
jb
jbe
stos
jmp
cltd
arpl
xor
jne
or
inc
aas
cmc
iret
aad
push
sub
xchg
clc
jmp
clc
mov
mov
sub
mov
icebp
mov
lret
cld
cmp
test
imul
push
push
pushf
mov
sub
jecxz
sahf
pop
loop
mov
decb
pop
mov
jg
insb
ds
jae
out
mov
jg
cmp
int
add
cmp
or
jb
mov
jmp
in
sbb
loopne
inc
inc
test
insl
cmc
fucomip
call
leave
insb
add
xor
xchg
xchg
outsl
nop
mov
insb
dec
stos
shlb
sub
stc
sub
add
adc
test
call
add
aam
xchg
dec
mov
addr16
inc
call
sub
push
aad
imull
lods
cmp
sub
aam
and
call
imul
sub
sub
and
push
dec
cld
or
fistpll
dec
movsl
ss
in
pop
out
sbb
lcall
inc
jne
and
dec
push
xor
sti
fcmove
jle
push
cmp
sub
xchg
fisubrl
andb
cmc
lds
sysret
ret
xchg
pop
sub
call
imul
pop
icebp
int
mov
addr16
xor
clc
adc
cli
cmp
mov
mov
jae
cltd
push
mov
cli
xchg
jle
pop
or
mov
loop
xchg
mov
cltd
mov
mov
in
dec
pop
xchg
mov
xchg
in
lcall
inc
or
jbe
add
insl
cmp
and
xchg
mov
xor
adc
push
pop
sub
stc
sub
sti
inc
enter
push
and
fnstcw
sbb
std
sbb
jle
pop
movsb
xor
lcall
out
ds
lea
bound
jbe
push
pusha
nop
mov
dec
test
mov
push
sbb
ficoms
add
popf
decl
inc
adc
cmp
ss
lea
xchg
notb
mov
das
icebp
jmp
in
jns
sti
push
sub
mov
mov
cmc
ss
jp
pop
mov
dec
sbb
cld
inc
into
jbe
leave
mov
sub
stos
test
test
movsb
incl
cmc
mov
fsubrp
mov
pop
cmpsb
push
inc
decl
iret
cmp
out
std
pop
and
mov
incl
push
enter
leave
dec
ja
or
cmp
lahf
mov
or
adc
pop
loop
pop
dec
mov
test
sbb
push
outsl
icebp
incl
xor
push
jns
pop
scas
push
sbb
rcr
icebp
fnsave
rorl
aad
sbb
fildll
mov
adc
mov
aam
popf
fnstsw
xchg
xor
jmp
aam
ret
cwtl
jge
ds
test
out
sarb
decl
popa
mov
sbb
ror
or
mov
gs
lcall
push
push
dec
or
shlb
push
incl
push
dec
stos
daa
imul
call
push
xchg
shrb
lcall
cmpsb
push
into
js
stos
inc
shll
gs
xor
xchg
shll
xor
repnz
sti
mov
pop
movsb
inc
push
pop
mov
cmp
and
sbb
jg
stos
pop
xor
cwtl
mov
push
mov
ljmp
cmp
jnp
sub
mov
mov
rol
lods
fmuls
adc
mov
test
add
push
mov
ror
clc
test
jg
xchg
mov
adc
mov
jge
arpl
cmpsl
aas
test
jg
in
shl
jge
pop
in
bound
cltd
fdivrs
jle
xchg
lahf
lea
and
push
sub
and
jmp
fcoms
scas
or
pushl
shl
stc
inc
adc
mov
stos
inc
pop
nop
or
subb
push
ror
cs
incl
shrl
ljmp
xorb
aas
or
push
push
int
pop
std
js
push
ljmp
outsb
lcall
push
or
dec
xchg
mov
lock
fnstenv
xor
dec
lock
or
jb
adcl
into
out
clc
icebp
bound
jle
into
dec
mov
push
pop
mov
mov
ss
sub
mov
mov
loope
inc
add
push
insl
pop
dec
negb
fidivrl
in
call
xorl
hlt
mov
xchg
push
aam
xchg
sahf
insl
decl
ljmp
or
lcall
inc
imul
push
jecxz
and
jg
jo
lea
mov
ja
stc
push
sub
adc
jmp
xchg
or
push
adc
pop
popf
sbb
test
call
addl
jo
mov
js
movsl
ds
lcall
jg
sti
jae
insb
rcr
fs
dec
cmp
inc
dec
push
insb
inc
loope
xchg
in
mov
incl
mov
cmp
mov
push
sbb
mov
shll
dec
lea
fstpl
cmp
pop
cmpsb
mov
lahf
and
adc
push
jo
ss
inc
popf
adc
call
mov
add
mov
pop
sub
mov
pushf
fwait
sahf
mov
movsl
jmp
fistpll
cmpsb
cmpsb
xor
sub
push
mov
cwtl
sbb
ljmp
loopne
lret
jnp
dec
mov
fwait
jns
mov
stc
dec
add
pushf
jbe
cmpsb
mov
xor
arpl
mov
push
pusha
jbe
push
arpl
call
sub
mov
sub
iret
jbe
dec
fwait
mov
hlt
das
cld
ds
int3
push
adc
addr16
or
jge
lret
mov
sub
sub
cmc
int3
adc
push
sub
mov
aad
shl
pop
ret
scas
xchg
inc
xor
mov
bound
push
jbe
mov
xor
xchg
clc
jmp
pushf
lcall
ret
out
sub
and
sub
mov
decl
or
mov
dec
aas
das
jmp
daa
mov
movb
aam
dec
loopne
pushl
adc
out
mov
into
cmp
in
sahf
xlat
out
mov
fmull
push
push
sub
inc
mov
pop
push
add
pushl
and
data16
stos
or
pop
pop
mov
or
push
out
lret
pop
call
cmp
testb
movsb
dec
cmp
xchg
or
decl
jmp
bound
pop
add
movsl
dec
iret
sbb
rorl
call
jmp
lods
mov
movsb
leave
sub
stc
out
test
or
fwait
jge
cmc
mov
pushl
cli
push
inc
push
pop
add
mov
dec
jecxz
dec
push
mov
push
adc
in
or
dec
fistps
pop
pop
xor
call
decl
cltd
xor
test
pop
push
lret
mov
lcall
shrb
xchg
cli
inc
xchg
adc
cltd
icebp
mov
xor
outsl
icebp
jg
adc
mov
lahf
sti
stos
aas
rorb
jnp
adc
jmp
leave
mov
sar
jo
out
mov
add
push
dec
sti
mov
jmp
lods
in
mov
and
mov
pop
push
cmp
je
xor
ljmp
out
or
cmpsb
out
cmpsl
out
push
mov
insb
mov
and
ss
pop
hlt
adc
cmp
les
mov
ret
dec
in
mov
cmpsl
lea
inc
int
movsl
cwtl
bound
push
mov
es
xor
push
int3
ja
xchg
nop
pop
pop
adc
int3
lret
mov
push
pop
movb
mov
add
sub
sbb
cmp
cli
mov
jae
jmp
lods
mov
out
dec
out
add
sbb
sahf
int
into
sbb
or
xor
out
out
sub
decl
mov
mov
call
or
add
adc
push
adc
fadds
dec
and
cli
cmpsl
inc
push
cld
fnstsw
push
cs
ljmp
test
dec
out
cs
aas
inc
adc
mov
jne
inc
xor
push
ret
icebp
arpl
push
aad
lahf
jns
sbbl
decl
arpl
jp
inc
je
xchg
sbb
cwtl
das
frstpm(287
mov
das
or
adc
jge
int
outsl
sti
cmp
rorl
scas
fcos
fbld
dec
xchg
fldl
movsl
inc
xor
pushl
cmpsb
in
cmp
shl
aad
pop
pushf
push
scas
cmp
push
adc
xor
les
sar
call
push
in
mov
cmp
fisttpll
arpl
inc
cmp
call
push
push
jecxz
adc
out
and
pop
call
fldl
clc
mov
ffreep
scas
mov
and
fildl
outsl
call
clc
jecxz
sbb
push
scas
cmpsl
insl
jp
mov
pop
insl
stos
leave
imull
cwtl
fstps
add
sbb
jg
push
xchg
test
sbb
stos
push
andb
repnz
loope
aaa
dec
jmp
push
xchg
add
mov
out
lods
push
ljmp
inc
inc
sbb
adc
xchg
pop
das
push
sub
ficompl
icebp
ret
or
aas
pop
and
mov
mov
dec
cwtl
push
iret
rorb
jp
sbb
decl
lds
jmp
xchg
sub
push
int
scas
daa
mov
test
and
pop
nop
pop
iret
mov
mov
imul
mov
js
lods
arpl
sar
mov
sub
inc
repz
cltd
adc
jns
cs
decl
hlt
mov
je
adc
cmp
mov
push
sub
call
adc
mov
mov
adc
and
ds
mov
push
mov
clc
dec
jecxz
nop
out
cwtl
sbb
imul
cmc
adc
inc
rcll
mov
pushf
ss
incl
fs
xchg
jg
stos
addr16
mov
je
and
int
stos
test
lcall
js
cwtl
nop
and
xchg
mov
mov
aad
pop
out
in
into
icebp
je
scas
daa
push
in
ret
mov
jg
mov
inc
sub
pop
push
and
scas
cli
dec
jge
cmpl
jg
xchg
add
movsb
cltd
mov
xchg
cmp
iret
or
cli
mov
or
insb
jp,pt
dec
arpl
xchg
loope
sbb
mov
shlb
ljmp
xchg
mov
push
fmul
mov
mov
adc
dec
lds
or
es
aam
cmp
add
push
sbb
es
push
inc
and
mov
dec
pop
lret
jl
movsl
imul
clc
pop
ljmp
ret
mov
add
dec
dec
add
aaa
data16
inc
add
loop
aam
pop
ror
arpl
sbb
fildll
mov
iret
mov
or
xchg
jb
mov
call
and
out
or
xchg
fldl
ja
int3
stc
mov
xorb
mov
stc
call
mov
mov
dec
mov
sti
pop
sbb
push
pop
lods
pusha
inc
je
in
push
xor
xor
add
dec
add
test
popa
in
lret
sahf
mov
jp
xchg
orl
mov
add
cli
sub
xor
popf
into
clc
lods
loopne
dec
out
jge
or
dec
ds
in
pop
push
cli
in
sbb
ret
gs
mov
push
adcl
sbb
mov
or
or
inc
mov
call
push
scas
push
xor
cld
jnp
inc
sbb
stc
xchg
loopne
jo
jno
mov
xchg
ret
in
inc
mov
shlb
ljmp
mov
mov
and
in
inc
scas
sub
inc
jmp
aam
test
mov
jmp
or
sarb
movsl
and
jecxz
pop
bound
xlat
jnp
cmc
aas
xchg
das
std
pop
mov
loop
ljmp
mov
loopne
sub
lcall
jp
add
dec
popa
adc
ficomps
shrb
fdivr
data16
daa
movsl
mov
pushf
push
cmp
mov
movsl
sar
jle
push
or
shl
out
mov
sub
ds
imul
outsb
pop
mul
cli
adc
das
imul
stos
out
jg
decl
push
pop
icebp
dec
add
mov
pop
test
cmova
fnstsw
incl
mov
aaa
int3
rorb
sub
rolb
in
push
int3
inc
inc
adc
fwait
push
add
test
lahf
push
cli
pop
call
outsl
not
cmp
mov
ljmp
faddl
push
jnp
jbe
xchg
xlat
jle
sbb
call
jg
inc
adc
ljmp
hlt
dec
xchg
scas
add
cli
xchg
push
fs
xor
ficoms
hlt
rorl
adcl
imul
mov
and
test
outsl
jg
adc
pushf
push
call
xor
xchg
push
lcall
inc
jmp
cmp
xchg
gs
out
nop
mov
loope
ja
sbb
nop
mov
icebp
mov
xlat
mov
cmpsl
scas
ret
std
or
jmp
je
dec
sbb
jge
in
loope
lret
xor
outsl
cmc
fisttps
pop
xchg
jecxz
sub
mov
sbb
insl
sub
fs
cld
call
jnp
push
mov
jnp
mull
stos
xlat
rcll
xor
test
xchg
lods
pop
scas
loopne
cli
mov
fldl
inc
clc
or
cmp
lods
cmp
or
sub
rcl
and
clc
or
aad
lcall
imul
lods
data16
add
pop
xchg
notb
out
mov
je
push
push
leave
xorb
sahf
mov
sbb
cli
add
mov
mov
fdivr
inc
mov
sub
aad
pop
gs
jo
or
lcall
addr16
sub
out
and
fbld
adc
push
mov
cld
jg
mov
mov
mov
dec
push
ficompl
adc
int3
sub
lret
pushl
xor
fstps
sub
cli
push
popa
dec
call
jnp
ret
movsl
dec
jecxz
or
scas
stc
pop
scas
xorb
fiaddl
decl
loop
ret
add
outsb
cmpsb
out
dec
cltd
mov
inc
call
cmc
cmpsb
loope
sbb
lret
xor
xlat
pop
xor
fcmovb
jg
imul
dec
xor
dec
les
movsl
add
fstpl
lods
cmp
jge
adc
mov
jle
loope
sub
jmp
mov
sub
sbb
fistpll
jmp
pop
insl
inc
cld
dec
test
add
dec
mov
ret
inc
std
incl
adc
and
icebp
aad
push
js
or
jnp
ljmp
dec
dec
aam
sbb
fstps
inc
cmp
cmpsb
xor
jbe
jns
test
movsl
or
jne
lahf
stos
dec
jl
mov
in
loopne
cmc
gs
mov
imul
movsl
add
movsl
add
inc
mov
loopne
push
hlt
add
xchg
cmp
sbbb
sub
fdivl
xchg
incl
ds
lcall
test
mov
inc
hlt
call
data16
mov
pop
movsb
dec
mov
mov
and
imul
in
mov
mov
ljmp
xor
push
xor
cmp
pop
jo
into
xor
ja
mov
add
jne
incl
fisttpll
scas
loopne
ror
jb
jb
mov
dec
push
cmp
push
xor
retw
cmp
mov
fisttpll
mov
push
sub
aam
pusha
test
rcrl
adc
test
pop
in
xor
mov
jb
loope
jmp
movsb
mov
rorl
lea
lods
lcall
dec
push
add
sahf
mov
fimull
pop
mov
or
out
add
ljmp
cmp
cwtl
ds
test
out
ret
out
xchg
sbb
pop
push
lret
pop
sub
add
xchg
ljmp
push
jmp
mov
mov
adc
xor
or
and
sbb
movsl
cmp
lret
enter
xorb
mov
ljmp
int
testl
or
scas
push
daa
adc
pushf
cmpb
add
rcr
push
cmp
jne
popa
fs
decl
sbb
adc
fistpl
dec
insl
jle
or
jge
aaa
pop
xchg
push
std
jmp
outsb
cmpsb
and
je
or
pop
rcl
jge
or
add
sbb
inc
inc
in
f2xm1
add
jmp
mov
call
mov
pop
pop
iret
outsb
pop
mov
les
jle
mov
mov
mov
sahf
ret
es
xor
movsl
repnz
xchg
fidivl
pop
outsb
decl
scas
in
push
fnstenv
ret
cmp
gs
adc
xchg
pop
out
aam
jmp
es
cld
jmp
imul
sahf
mov
mov
movsl
push
or
mov
hlt
xor
movsl
imul
stos
jmp
mov
pop
jns
mov
push
pop
jg
or
pusha
xchg
cmp
push
enter
xchg
inc
mov
mov
or
inc
idivl
jmp
add
pushf
test
scas
pop
mov
iret
jns
mov
jb
xlat
jmp
mov
inc
cwtl
lods
push
inc
dec
js
or
rolb
ljmp
aad
fadd
popa
jl
push
leave
lock
sti
movsl
decl
insb
orb
lea
sbb
fnstenv
mov
sbbl
mov
stos
xor
nop
or
shrl
sub
mov
decl
loope
aad
mov
int
and
sub
push
iret
mov
call
aas
adc
lea
mov
pushl
loope
imul
inc
dec
dec
sub
outsl
cmc
call
and
dec
dec
cmpsl
cli
stos
lods
test
decl
jb
pop
mov
add
aam
int
insl
mov
jl
les
jmp
add
icebp
cmpb
sti
insb
leave
fnstsw
outsl
jae
xchg
aas
xchg
loope
mov
fbstp
orl
xor
jg
mov
test
jns
call
movsl
test
fidivl
mulb
jecxz
jle
cmp
repz
lock
and
push
jnp
scas
andl
mov
outsb
push
loope
or
inc
mov
jb
push
sbbl
push
repnz
incl
pop
push
divb
sub
loop
test
adc
xor
jmp
pop
out
sub
das
fnstcw
xchg
cmp
add
cmc
push
clc
lods
sahf
push
mov
divb
hlt
push
mov
imul
sub
stc
xchg
xchg
out
jmp
jge
and
sub
outsl
sbb
dec
push
int
adc
xchg
aas
jnp
inc
test
inc
rol
mov
movb
mov
inc
cltd
aam
pop
scas
fisttps
jge
lret
mov
jle
cltd
cmpsl
mov
insb
out
xor
incl
push
inc
adc
lahf
stos
inc
jae
cmp
xor
cmc
fstpt
or
loopne
or
or
sbbl
adc
ljmp
into
jno
cmp
sbb
jg
incl
fucomp
fadds
mov
shlb
cmp
mov
dec
mov
sub
mov
mov
mov
pushf
pop
pop
sbb
xor
adc
rcll
adc
psubq
adc
das
mov
mov
inc
sub
leave
fsub
fwait
inc
adc
xor
xchg
add
or
push
ja
sar
pop
mov
aas
jb
jg
pop
fnsetpm(287
int3
mov
or
aas
movsb
dec
xchg
pusha
addr16
test
nop
sbb
jl
ret
jmp
aad
pop
out
mov
add
data16
jae
je
sar
mov
jno
sahf
loop
popf
or
psubq
add
cmp
pop
pop
ja
repnz
mov
mov
inc
dec
adc
dec
sahf
movsb
sbb
jmp
xor
popf
dec
mov
fcoml
or
pop
loop
xor
sbb
sub
pop
jns
out
shll
clc
jbe
adc
mov
leave
adc
xchg
shrl
jns
xchg
repz
int
sub
sub
mov
imul
xchg
rcrl
adc
ret
inc
imul
dec
add
bnd
xor
hlt
mov
jge
das
dec
stos
jns
mov
shl
js
int3
or
sub
inc
incl
decl
pop
loopne
add
sti
repz
loope
ljmp
mov
icebp
mov
pop
add
add
loop
pushl
test
frstor
lret
ja
xchg
lahf
jno
mov
xchg
das
or
jg
cmc
ljmp
jb
cmc
inc
ret
into
sub
fistpll
gs
mov
dec
lds
lcall
bound
aas
std
call
and
lock
je
sub
jne
fnstsw
mov
lahf
cmpsb
les
addr16
push
fmul
loopne
add
pop
sahf
mov
inc
mov
xchg
ret
cmp
sbb
loopne,pt
mov
and
daa
cmc
pop
imul
cmpsl
repnz
jg
mov
aam
dec
adc
dec
test
mov
faddl
out
pushl
or
sarb
push
mov
mov
dec
pop
push
insl
inc
xor
call
mov
mov
xlat
insl
cmpsb
scas
add
imul
aas
sub
clc
incl
and
outsl
cmc
out
setae
and
jmp
push
bound
dec
mov
mov
xchg
cmpsl
aam
jo
pop
sti
das
cld
call
jge
jge
insl
test
movsl
fsubrl
adc
mov
mov
or
bound
call
xor
aas
xor
js
xor
sbbb
std
sti
inc
fisttpll
stos
divb
in
es
push
xchg
mov
push
pushf
mov
sub
repz
and
sub
xchg
nop
call
addb
mov
sub
sbb
dec
test
lock
gs
add
mov
adcb
stos
gs
std
mov
mov
cmp
mov
jmp
pop
aas
stos
stos
xchg
call
into
dec
js
xor
out
mov
test
jg
xchg
cltd
sbb
fsubrs
adc
add
aas
in
iret
ljmp
negl
cmp
outsb
mov
sti
rcrl
js
xchg
into
or
and
lcall
faddl
call
and
pop
mov
cmpsl
push
ja,pt
sar
lea
lods
lods
ljmp
cld
pop
stos
and
mov
pushf
push
loopne
xor
sahf
std
push
cmp
and
lret
sbb
inc
outsl
cmp
lods
sbb
or
jmp
adc
cld
push
jmp
mov
sbb
and
pop
mov
decl
in
add
nop
jle
int
and
push
inc
xchg
ljmp
xor
xchg
outsb
mov
push
cmp
cwtl
in
fmul
jne
incl
mov
push
xchg
leave
cli
outsl
sub
ja
nop
lret
fnstsw
std
jb
jns
pop
lahf
dec
xchg
out
cmpsb
mov
xchg
mov
push
cmp
lret
rclb
aaa
dec
mov
aaa
addr16
pushf
test
xchg
adc
and
adc
les
inc
stos
jb
mov
insl
dec
cmp
cmpsl
pusha
cmp
insb
and
insb
cmpsl
in
stos
cmc
and
xchg
loopne
outsl
adc
inc
lcall
inc
out
iret
mov
cmp
and
clc
arpl
jp
out
mov
lahf
mov
rcr
mov
mov
enter
mov
sub
mov
imul
clc
pop
fnstenv
dec
pop
adcb
sbb
inc
decl
lock
mov
popa
mov
sbb
test
pop
outsl
icebp
and
setle
inc
add
lret
xchg
mov
inc
jg
ljmp
lods
stc
mov
lcall
and
test
cli
subl
shlb
aaa
pop
jnp
or
bnd
ror
out
pop
and
mov
stos
shll
cli
jecxz
loop
mov
jne
fildll
xor
add
sbb
int3
sub
jp
call
lods
xor
popf
mov
sub
or
jo
lods
incl
push
jbe
sub
dec
xchg
xor
loopne
mov
bound
pop
ljmp
mov
xchg
ret
lods
jno
outsb
xchg
sub
pop
clc
leave
pop
add
push
stc
jnp
and
movsb
xchg
mov
in
pop
int
pushw
sbb
mov
cmp
dec
add
push
stc
and
dec
mov
mov
ljmp
push
sub
lea
push
shlb
popf
das
daa
jle
mov
and
jg
push
sub
pop
int3
mov
into
shlb
das
pushf
ljmp
icebp
lret
sub
loopne
fcmovnb
pop
or
push
jmp
call
inc
ds
jg
movsl
imul
or
pop
mov
dec
add
jecxz
jbe
jmp
push
stos
sub
xchg
in
imul
mov
lcall
fsub
push
addr16
lods
ljmp
inc
mov
fdivrs
mov
mov
hlt
clc
imul
sub
ret
ficoml
ljmp
std
aaa
add
push
mov
sub
cmp
lods
cmp
and
rcll
lcall
sub
lea
outsl
adc
arpl
adc
cmp
fadd
mov
xor
and
lods
arpl
pop
clc
inc
aad
es
xchg
jge
lcall
jnp
mov
mov
call
cli
call
adc
sbb
sbb
jge
or
xchg
pop
pop
daa
loopne
push
decl
fdivr
dec
hlt
adc
bound
dec
cmp
cmp
sar
pushl
hlt
rcrl
inc
sub
add
test
ljmp
cltd
fnstenv
xor
lods
int3
and
imul
clc
jg
mov
out
mov
aaa
sub
adc
xlat
lods
aas
cs
std
add
cs
mov
add
pop
repnz
sub
xchg
pop
addps
jmp
ja
out
cmp
incl
shlb
mov
sbb
sbb
pop
fsub
incl
mov
stos
adc
js
inc
add
incb
mov
sahf
int
jne
sub
incl
imul
xchg
mov
pushf
sahf
fstpt
push
mov
lds
es
outsl
mov
push
repnz
popa
jb
stos
aas
out
aad
jl
push
or
mov
clc
movsl
dec
and
cmpsl
cmp
and
imul
mov
outsl
adcl
outsb
imul
adc
mov
dec
test
or
dec
cwtl
jl
mov
push
mov
cli
cli
fadds
aas
test
mov
jb
leave
incl
addps
cli
mov
outsl
cmpsl
adc
jne
dec
repnz
cmp
ljmp
sub
sbb
gs
xchg
jg
hlt
or
push
sbb
repz
push
xor
sbb
enter
pop
mov
je
ret
or
or
pop
cvtps2pi
or
test
push
aad
cmp
or
cld
mov
aaa
fcompl
pop
call
xchg
jecxz
call
push
dec
jmp
lds
test
and
int3
add
jg
lods
jg
jmp
popa
jge
std
loope
jecxz
lcall
pop
add
into
dec
inc
mov
inc
sbb
out
mov
jo
sub
and
jae
ljmp
xchg
mov
mov
mov
mov
lock
call
bound
pop
xor
sub
les
lcall
mov
stc
nop
xorl
in
sub
pop
mov
ljmp
cld
push
stos
or
mov
popa
lds
sbb
sbb
call
push
sub
and
scas
and
inc
cmp
inc
jno
imul
lret
inc
push
push
imul
aad
mov
jb
pop
jo
mov
imul
jae
push
sti
sbb
cli
fisubs
mov
inc
lock
sub
cmpsb
rclb
and
loopne
outsl
mov
out
jmp
push
or
ljmp
push
push
insl
add
in
xchg
cwtl
inc
inc
sub
xor
gs
sbb
xchg
inc
or
sbb
sub
nop
mov
jge
mov
pop
push
inc
adc
in
movl
jge
loop
mov
loope
scas
aas
mov
les
mov
pop
loopne
imul
xor
sub
push
push
inc
hlt
xchg
cwtl
push
in
jbe
mov
xlat
popf
cltd
dec
pop
paddsw
out
fbld
cmpsb
mov
adc
lret
incl
jo
enter
gs
xor
lahf
push
rcrl
ud0
ljmp
inc
testb
clc
push
sti
scas
xchg
xor
rcrl
lock
nop
xor
xorl
mov
push
or
pop
loopne
and
cmpsl
test
jb
pop
outsl
out
nop
pushl
scas
and
mov
fadds
lods
push
dec
mov
dec
jnp
clc
sub
adc
xor
mov
inc
xor
decl
in
mov
pop
push
adc
in
movsb
mov
pop
or
call
cli
pop
mov
push
das
lret
insb
or
fwait
lcall
scas
sbb
inc
imul
adc
lcall
add
cmpsl
lcall
fs
faddl
std
sbbb
loope
ljmp
lods
jg
sbb
out
xchg
adc
cmp
ljmp
push
cmpsl
scas
add
imul
add
mov
mov
inc
dec
pop
dec
inc
sarb
jae
addb
jge
std
cltd
ljmp
call
pop
xchg
lds
js
sarb
out
dec
pop
jg
ljmp
mov
or
fnsave
and
inc
cmp
push
sbb
incl
adc
test
addr16
or
jb
insb
cld
out
das
jge
dec
push
dec
inc
sbb
jle
or
mov
adc
xchg
pushl
pushf
sub
inc
test
sar
aam
mov
jo
hlt
scas
sub
jo
mov
decl
test
popf
scas
je
cmp
nop
push
cmpsl
add
ljmp
out
and
jg
movsl
enter
test
into
scas
inc
adc
add
sbb
jbe
lcall
sarl
lea
adc
sub
icebp
inc
adc
cmp
adc
lods
sbb
xor
loopne
lahf
movsl
pusha
pmaxub
xor
mov
movb
bnd
push
mov
js
sti
adcl
xor
out
push
icebp
ljmp
add
test
mov
loop
decl
cwtl
adc
fbstp
fnstenv
stos
aam
sbb
mov
mov
fists
jp
sbb
mov
test
and
push
gs
pop
daa
xchg
daa
ljmp
flds
je
xorb
movb
addr16
mov
add
add
ret
stc
cmp
repnz
stc
push
mov
dec
js
cmp
mov
jg
popa
hlt
xlat
sbb
adc
ljmp
movsl
dec
in
in
adc
xor
dec
xchg
sub
lcall
std
and
add
je
ljmp
in
mov
xchg
mov
shrl
fisubs
loopne
adc
mov
jbe
mov
ljmp
mov
or
ljmp
leave
dec
out
roll
adc
das
fistpll
pop
jae
out
mov
inc
inc
fsubl
sahf
mov
fisubl
sbb
leave
xchg
xor
sahf
mov
in
or
xor
inc
lahf
outsl
std
jmp
bound
roll
and
roll
xchg
adc
jl
sarl
ljmp
xor
adc
sahf
in
ffree
mov
lahf
mov
popf
cltd
outsl
xlat
sub
adc
xchg
dec
clc
pushl
fldl
mov
das
jle
movsb
or
in
sahf
jne
sbb
cwtl
ja
ljmp
das
fs
mov
push
or
out
push
xchg
aam
mov
mov
ljmp
xchg
repnz
xor
and
dec
and
jae
adc
arpl
fcmovb
icebp
lock
ljmp
std
int
in
lahf
push
sub
push
jmp
and
add
sahf
cmp
push
pop
push
pop
push
imulb
hlt
xor
adc
or
and
movsb
inc
and
incl
or
cli
das
repnz
inc
inc
dec
xor
lret
incl
test
fistl
out
int3
and
lret
pop
aad
outsl
icebp
ljmp
cmp
push
int
icebp
push
lock
mov
decl
fstpl
repnz
push
jae
mov
fstpl
mov
fnstenv
pop
outsb
ss
add
fisubl
mov
inc
std
jns
xor
cmp
cld
mov
pop
mov
idiv
aas
test
sbbb
mov
popf
push
cmpsb
ss
repnz
lds
xchg
jne
mov
jnp
testl
gs
mov
incl
sti
ja
push
push
stc
in
sahf
or
pop
add
arpl
mov
rorl
xchg
insl
orb
xchg
sub
insb
test
enter
inc
lcall
xchg
jne
and
les
popf
cmp
jmp
inc
adc
xchg
cmpps
out
add
sbb
mov
cmp
cmp
in
inc
ud1
or
push
or
push
push
in
aaa
sar
jg
mov
ja
pop
jne
jmp
sub
sbb
mov
iret
jl
pop
push
jecxz
sti
cltd
push
test
dec
jg
xor
pop
loop
incl
test
fidivl
inc
sbb
mov
cmp
sub
pop
clc
xor
push
or
jne
sub
rcll
lcall
mov
jbe
cmp
adc
mov
mov
pushl
decb
les
mov
subl
pop
xchg
ret
inc
in
dec
cltd
outsb
dec
repnz
insb
stos
add
fistps
popl
or
lcall
jae
mov
mov
jecxz
or
adc
das
cld
lcall
pop
inc
adc
sub
and
clc
pop
xor
mov
insl
jmp
push
or
push
and
pop
orl
insb
imul
ljmp
xor
test
adc
sbbb
enter
pushl
call
xor
aaa
ljmp
imul
and
pushl
dec
outsb
pop
jmp
mov
xor
pop
cmp
sti
sbb
adc
icebp
dec
sbb
ljmp
enter
mov
shrb
dec
xchg
icebp
cmpsb
jle
dec
loope
lret
and
rorb
inc
enter
ljmp
push
je
into
pop
icebp
or
addl
push
jno
movsb
cmp
mov
sbb
in
adc
push
or
imul
push
xor
pop
movsl
jecxz
rolb
adc
call
mov
push
xor
call
jecxz
mov
cmp
sub
push
push
xchg
out
cli
cmc
in
sub
jg
addr16
sbb
lahf
xchg
adcb
push
adc
cmpsb
jge
fbld
cmp
push
fwait
lcall
xor
mov
mov
xchg
hlt
push
outsl
sarl
sar
decl
sub
sbb
push
fcom
int3
fists
mov
pusha
sbb
mov
ljmp
inc
xchg
movsb
inc
mov
inc
shrb
in
aad
cmc
rcrl
adc
mov
pop
adc
movsl
inc
cld
clc
xchg
shrb
cld
decl
sbb
and
jns
sub
jno
popf
fbld
jl
lods
andnps
cli
outsl
cld
rclb
enter
lahf
daa
and
push
pop
xchg
clc
movsl
and
sbb
or
loop
inc
jno
dec
jg
in
adc
xchg
mov
dec
sbb
sub
shr
out
cmp
cli
lea
ret
lods
cmp
dec
xchg
sub
lret
call
or
shll
xor
inc
mov
cmp
mov
loope
ret
test
dec
or
push
sub
aam
jp
and
jp
mov
fwait
push
mov
inc
in
js
dec
jmp
cmpsb
cmpsb
pop
enter
call
mov
negb
inc
cmpsb
fdiv
push
loop
in
mov
stc
sbbb
incl
in
ds
jo
mov
mov
ds
inc
push
sahf
mov
mov
sarl
ficompl
xlat
dec
fldt
fstl
cmpsl
out
out
movsl
fstp
lea
ljmp
fildl
fsubs
mov
push
fwait
sub
mov
ss
lret
lcall
xor
repz
shlb
out
jb
mov
gs
daa
push
stos
or
lahf
in
dec
sbb
jmp
xchg
add
dec
sahf
popf
mov
adcb
loope
adc
pop
repnz
mov
jg
add
orl
mov
leave
fidivrs
lcall
jmp
or
xchg
jg
sub
mov
adc
pop
mov
cli
push
leave
pop
inc
push
inc
xorl
cmp
pop
cld
inc
cmp
call
aaa
and
fs
and
cld
das
hlt
cli
mov
shl
fimuls
test
jp
adc
popa
outsl
add
pop
clc
dec
into
and
in
aaa
xor
jge
mov
mov
es
mov
and
clc
mov
out
push
and
frstor
lcall
dec
gs
les
decl
shrl
das
popf
pop
cmp
std
dec
dec
sub
sarl
add
inc
jne
int
sbb
std
std
pop
push
and
popa
mov
popf
out
call
fs
mov
dec
mov
cld
push
push
sub
xchg
sub
jns
xlat
jns
cmp
dec
push
test
jg
cli
jns
mov
lods
jmp
in
mov
lcall
mov
ss
ja
scas
add
hlt
xchg
cld
test
lods
inc
and
inc
out
rcll
aad
sub
xchg
and
push
add
adc
clc
lcall
jle
insb
push
pop
add
xor
pop
popf
jns
in
xchg
lcall
cld
pop
push
xchg
or
adc
repz
sbb
pop
clc
mov
xchg
jne
imul
and
insl
enter
rcll
cmc
push
dec
push
dec
inc
movsl
jo
lahf
sbb
idiv
mov
lods
aaa
mov
jmp
fdivrl
hlt
into
aas
nop
sahf
or
stos
cmp
inc
and
incl
xchg
movsb
insl
arpl
movsb
ljmpw
fwait
test
incl
and
sbb
lret
push
inc
push
add
lcall
shrl
mov
sub
adc
out
icebp
push
add
inc
cwtl
push
imul
aaa
and
dec
insb
ret
mov
loope
xchg
adc
mov
or
ds
enter
pop
pop
fucomip
xor
jnp
jp
ja
outsl
jb
loopne
mov
pop
daa
fucom
mov
arpl
jmp
sti
lcall
gs
mov
cmpsb
addr16
cmp
xor
mov
push
sub
adc
popa
insl
jmp
inc
inc
sahf
push
jbe
subb
std
fs
iret
cmp
inc
xchg
cli
mov
adc
xor
mov
dec
lea
jg
pop
cli
data16
push
fimuls
dec
mov
rcrb
cmp
lock
in
mov
dec
mov
cs
shl
fdivrs
jg
mov
int
cmp
xlat
lret
and
lret
sti
sub
xor
pop
push
push
daa
sbb
sub
ror
jp
out
sahf
leave
fwait
push
cs
decl
test
sbb
mov
mov
jge
ret
mov
fnsave
arpl
jg
and
test
cmp
mov
mov
sub
pusha
push
lcall
lds
add
pop
sub
call
ljmp
data16
dec
mov
push
sub
xor
ja
sbb
sarl
ds
adc
lds
hlt
lcall
scas
sbb
cltd
sub
pop
add
add
dec
inc
dec
inc
push
sbb
das
inc
jae
fsubs
test
push
into
jmp
outsl
xchg
into
fwait
popf
data16
mov
add
pop
mov
js
jo
pop
nop
xchg
xor
mov
ret
iret
ljmp
ja
repnz
mov
inc
and
aaa
fwait
add
mov
xchg
jp
hlt
lcall
cmpsl
xchg
imul
mov
sbb
mov
fisttps
mov
jnp
xor
cwtl
lret
test
pop
js
incl
cli
test
inc
mov
mov
push
in
std
push
lret
cli
xor
data16
pop
lods
pop
cli
mov
outsb
sub
jl
aaa
jecxz
mov
jnp
ljmp
push
dec
mov
test
mov
pop
push
and
inc
decl
ret
xor
xor
ljmp
out
adc
int3
loop
lret
sub
lcall
cwtl
adcl
movsl
ljmp
je
lret
sub
addr16
icebp
ljmp
sbb
repz
pusha
cmpsl
cmp
mov
push
jae
lods
lcall
cmpsb
push
pop
push
les
mov
fsub
mov
call
decl
ja
inc
cld
loopne
inc
lret
adc
pop
jecxz
and
decl
int3
inc
sub
inc
insl
push
or
xor
or
jecxz
inc
dec
mov
das
mov
out
fstps
mov
in
xchg
sub
inc
pop
inc
imul
js
xchg
jae
pop
or
shrb
in
call
lcall
gs
stc
into
add
xor
jb
add
fstpt
jmp
jns
in
pusha
pop
jle
sub
loop
fistl
xchg
jp
ljmp
fidivs
dec
icebp
mov
fs
mov
decb
fcoms
call
dec
cmpsb
pop
mov
or
sub
insl
sub
lcall
jae
nop
jmp
inc
pop
jno
fists
push
scas
cmpsb
div
cmp
xor
adc
sbb
bound
mov
fs
sub
cmp
fdivrs
sub
movsl
sbb
hlt
je
mov
mov
jg
decl
setp
ret
or
xor
stos
fucomi
mov
jne
mov
aam
in
add
test
sbbl
add
push
jg
int3
adc
jae
sbb
arpl
mov
test
repz
les
xchg
iret
xor
inc
mov
cmp
pushl
dec
add
and
ret
in
cltd
jle
je
dec
ljmp
in
add
push
movhps
pop
sbb
mov
data16
fs
xor
testb
loopne
int3
sbb
daa
dec
xchg
outsl
ret
jns
loop
mov
dec
mov
loop
dec
push
jo
stos
pop
dec
mov
mov
mov
call
jle
dec
aad
dec
out
inc
inc
outsl
loope
repz
or
les
decl
lahf
xorl
pop
outsb
cltd
add
jg
hlt
push
push
dec
pop
shlb
sbb
or
mov
mov
sub
in
test
loope
pop
int3
fnstsw
adc
call
dec
movsl
cmp
iret
je
or
or
and
testl
mov
pop
jmp
xor
dec
sub
daa
movsb
jnp
aas
mov
cmpsl
sub
addr16
out
icebp
sub
decl
jns
test
dec
dec
fwait
test
sbb
dec
loope
inc
incl
pop
xchg
mov
in
notb
push
push
dec
scas
lret
pushl
mov
and
ljmp
shl
je
hlt
cld
fisubl
pop
pop
pushf
or
dec
popa
in
lock
or
imul
into
shlb
pop
sbbb
decl
and
rclb
jmp
dec
ficoml
mov
mov
jl
dec
pushl
adc
push
shll
inc
adcb
push
jecxz
jnp
incb
arpl
pop
daa
xor
ljmp
inc
jg
into
sub
xchg
shrb
and
adc
insb
fs
leave
adc
jg
pop
dec
lods
cwtl
or
repnz
jno
xor
push
xor
pop
sbbl
pushl
scas
cwtl
sbb
dec
pop
mov
icebp
push
push
dec
adc
mov
cmp
imul
es
xchg
clc
outsl
dec
pop
call
add
sbb
stos
std
adc
fildll
push
pop
pop
lds
pushl
popf
dec
jecxz
lcall
and
jle
test
out
call
incl
int3
shl
pop
aam
rolb
add
add
or
jmp
mov
rcll
nop
cwtl
adc
sbb
xchg
lea
fistpl
lret
rcll
fdivr
neg
call
mov
jo
pop
fbld
adc
icebp
sub
adc
pop
mov
incl
xchg
sub
loopne
sbb
sbb
or
sbb
mov
repz
loop
sub
push
mov
ds
in
or
decl
pop
rolb
and
lcall
push
pop
lret
inc
lds
sub
dec
inc
sbb
out
push
jb
jmp
movsl
xchg
cltd
jmp
add
rorl
dec
addr16
lock
subb
lret
pop
cld
push
jg
cmc
xor
cmpsb
aas
bound
nop
lcall
shr
pushl
sbb
mov
roll
lods
leave
and
fmull
filds
xchg
popa
and
mov
call
sahf
cmp
xchg
jns
mov
in
ljmp
mov
add
call
in
add
loop
nop
data16
lods
mov
sahf
push
dec
xchg
aaa
ljmpw
jne
jp
jg
out
out
fcomps
or
pop
sahf
jbe
cmp
or
scas
paddd
jmp
fwait
inc
push
jno
in
push
and
cmp
lcall
insl
call
test
dec
stc
hlt
and
repnz
out
dec
or
pushl
repz
enter
cmpl
pop
xchg
bound
lret
cmp
add
ss
mov
jg
mov
mov
or
cld
or
jmp
jae
cmp
int3
jb
out
lahf
in
in
pop
shrd
lcall
xchg
mov
inc
jne
cwtl
aaa
adc
mov
lds
cli
and
xchg
add
push
pop
stos
inc
mov
adc
sub
cs
fs
clc
push
push
andb
cmp
clc
mov
xchg
sti
pushf
push
sbb
xchg
test
mov
pop
imul
dec
xchg
dec
notl
fadds
outsb
mov
mov
test
enter
ficomps
bound
fucomip
ljmp
in
lcall
leave
sbb
or
ljmp
cmp
in
into
mov
fcoml
lods
cmp
fs
clc
stc
xor
push
dec
in
cmp
pop
arpl
insl
aaa
mov
testl
lcall
jle
add
sub
scas
xor
mov
mov
fbstp
lret
sub
xchg
shll
xor
pop
mov
inc
xchg
in
dec
out
jbe
and
mov
scas
lret
pushf
mov
dec
ret
mov
xchg
dec
lcall
jo
clc
mov
mov
andps
or
inc
adc
cmp
jmp
loopne
lea
imul
xor
mov
mov
ffreep
mov
sub
aaa
frstor
add
push
std
or
jae
sub
decl
outsb
jl
out
popa
jmp
xchg
mov
andl
int
call
clc
call
mov
clc
jle
xor
inc
adc
ss
imul
inc
aam
jg
fstps
stos
xor
sbb
add
movsl
icebp
xor
jl
repz
mov
stos
pcmpeqb
in
lea
hlt
mov
or
mov
push
cwtl
add
sub
pop
mov
sti
xchg
mov
jg
test
stc
pop
cmp
mov
insb
aas
xor
push
mov
fnstsw
pop
mov
in
mov
clc
in
inc
xchg
cmp
xchg
cli
ljmp
add
rolb
sbb
fs
mov
push
js
in
insb
adc
or
fcmovnbe
rcrl
sbb
mov
dec
mov
adc
jb
cmpsb
clc
mov
jb
ss
mov
dec
mov
add
sahf
cmp
call
add
clc
sarl
leave
iret
imul
mov
out
add
sub
arpl
loopne
fcompl
data16
cltd
decl
pop
and
addr16
arpl
cmp
imul
xor
sub
and
sbb
or
stos
pushl
pop
repnz
in
pop
push
push
sbb
out
sub
adc
push
call
push
mov
into
ret
dec
call
enter
sub
add
inc
jno
inc
jnp
mov
push
xchg
mov
pop
sub
jb
inc
ret
les
mov
aam
in
jg
incl
lods
push
leave
sbb
or
mov
dec
das
ret
pop
pop
cmpsl
inc
sub
fbld
inc
xchg
push
cltd
dec
adc
jmp
jo
push
sbb
dec
and
mov
lcall
jno
adc
jg
mov
leave
push
hlt
hlt
inc
icebp
insw
outsb
mov
clc
sbb
inc
xchg
sti
nop
stos
notb
mov
xchg
sbb
std
stc
mov
cld
popa
adc
ljmp
stos
lods
insl
shrb
outsb
in
sub
fcmovne
or
sarb
aas
jns
xor
incl
mov
pmuludq
cmpsb
inc
int3
mov
pop
aad
adc
cmp
dec
stos
icebp
mov
insb
xchg
fwait
jmp
pop
or
cmp
xchg
mov
push
notb
fisubs
jmp
pop
cltd
rcll
pop
movsl
mov
or
and
ss
incl
shlb
pop
std
lods
call
pusha
es
enter
repnz
loopne
pushl
pop
or
sub
jbe
shrl
sub
fcomp
sahf
jae
and
fwait
pop
xor
push
into
arpl
mov
dec
cld
decl
cltd
xchg
mulb
call
out
and
sbbl
cmp
push
inc
std
push
sub
dec
pop
xchg
sar
pop
dec
sbb
mov
sbb
lock
mov
ljmp
mov
fmull
inc
lcall
call
jmp
push
jno
sarb
jno
fnstenv
xchg
iret
dec
cmp
mov
add
and
daa
out
xor
or
cld
xor
sbb
dec
add
decl
or
dec
jmp
push
jbe
pop
sub
lea
call
or
clc
adc
gs
popa
cmp
into
and
imul
lcall
sub
mov
insl
stos
test
je
rcr
inc
in
inc
inc
push
add
call
outsb
sbb
jnp
shlb
mov
daa
sub
decl
fildl
sub
outsb
jecxz
insb
movaps
loopne
lock
fnstsw
mov
jl
nop
dec
mov
mov
in
or
mov
xor
movsb
sub
sahf
push
jle
imul
mov
jge
jmp
test
lock
imul
mov
std
add
roll
std
jg
push
cmp
stos
gs
add
push
addl
add
xor
jmp
cmp
mov
jmp
mov
fdivrp
repnz
das
lock
je
cmpsl
jbe
jmp
bound
push
and
jg
lcall
scas
jmp
cmp
xchg
sti
aam
mov
rcr
mov
loop
loop
inc
push
mov
xchg
icebp
dec
jg
decl
ret
sbb
test
pop
shl
fucomip
hlt
dec
mov
mov
ljmp
mov
int
push
cmc
mov
repz
imul
les
enter
pushl
sub
jg
adc
adc
pop
push
ret
in
push
mov
jno
mov
stos
scas
std
mov
cmp
mov
cmpsb
xchg
lods
inc
xchg
pop
mov
xchg
clc
ja
sahf
data16
int3
jle
lods
sbb
mov
addr16
iret
add
dec
pushf
push
shll
xchg
ljmp
roll
dec
into
push
pop
add
andl
add
xor
stos
minps
aas
jecxz
loope
cmp
push
xchg
push
jbe
cmp
pop
jg
mov
lahf
jbe
adc
push
mov
loopne
fwait
mov
aad
pop
add
cmp
aaa
cmpsl
movsb
pop
ljmp
decl
fidivl
pushf
inc
ss
lds
or
push
movsl
call
inc
fcomi
mov
mov
jecxz
cmpsl
daa
adc
dec
and
jmp
sti
bound
xlat
xchg
adc
jbe
mov
incl
mov
or
xor
mov
incl
inc
in
mov
inc
cmp
and
mov
out
cmp
out
scas
scas
stos
repnz
repz
adcl
mov
mov
ficompl
mov
out
or
add
lcall
lock
bound
call
clc
pop
push
ja
inc
insb
cmpb
push
pushl
gs
cmp
in
adc
pop
es
jg
mov
pop
inc
pop
mov
xchg
mov
xchg
sub
outsb
stos
lods
aad
jmp
test
je
sbb
add
dec
lret
fxch
pop
mov
mov
sti
inc
xchg
lcall
cli
adc
pop
lds
call
add
or
add
lahf
dec
and
popf
les
insl
outsl
lock
decb
pop
rorl
addb
fnstsw
adc
push
jnp
in
pop
xor
add
rcr
or
mov
cmp
sahf
sbb
test
or
xchg
mov
jge
popa
fsubs
aam
push
into
andb
jmp
mov
clc
pop
pop
sbb
mov
mov
rcll
sub
pushl
fadds
dec
xor
stc
push
jl
mov
add
push
adc
call
and
jmp
pop
mov
inc
nop
sub
fcompl
sub
jno
incl
add
cmp
imul
out
pop
into
dec
or
push
div
bound
and
xchg
std
insb
scas
push
inc
fsubrl
sti
test
icebp
call
fistpl
loope
std
inc
cli
sbb
jb
movsb
mov
mov
mov
sub
dec
or
test
negl
inc
sub
and
add
add
inc
ljmp
fsubs
sub
cld
xchg
mov
add
ljmp
mov
and
push
dec
jns
adc
dec
lods
in
fidivrl
mov
sbb
decl
cmp
iret
xchg
or
jne
call
add
incl
stc
fdivl
inc
and
lahf
stc
push
cmp
std
incl
cmp
or
lret
sbb
add
xchg
in
pop
sbb
aam
lods
aam
out
adc
pop
mov
ljmp
push
fbld
test
pop
repz
xchg
xor
and
push
adc
inc
pop
mov
incl
inc
add
cmp
call
int
and
std
xor
and
fs
cltd
popa
or
jns
xchg
dec
std
das
out
call
mov
aas
xlat
notb
push
int3
in
jle
cltd
or
inc
test
call
cmc
gs
jg
fs
mov
cmp
loopne
incl
xchg
pop
outsb
mov
leave
in
sbb
sub
cmpsl
mov
add
push
subl
or
outsl
cmc
ljmp
dec
popa
jno
testb
dec
data16
popa
out
add
jl
clc
call
pop
adc
add
orb
jge
ss
mov
mov
mov
test
or
add
popf
cmpsb
out
inc
outsl
hlt
call
repz
adc
mov
scas
jl
pop
adc
shl
cltd
dec
sti
sbb
idivl
incl
shl
repz
cmpsb
mov
jmp
in
movl
lcall
jb
je
aaa
xchg
icebp
xchg
lcall
add
sar
das
std
mov
xchg
out
pop
adc
jno
dec
push
enter
mov
int
dec
movsl
xor
xchg
jp
or
mov
outsb
adc
rorl
std
pushl
stc
sub
repnz
and
push
int
lock
dec
mov
ljmp
jg
popw
ss
and
xchg
mov
sub
sti
fbstp
mov
jmp
sbb
fidivl
fisttpll
scas
lea
pop
inc
or
ret
movsl
jle
sahf
out
sar
fdiv
shl
rcrb
mov
adc
xor
sbb
out
ds
loopne
int
mov
and
xor
jmp
mov
daa
data16
push
insl
imul
aam
and
clc
lcall
pavgb
sub
inc
adc
out
shlb
inc
call
ja
mov
push
mov
and
dec
jnp
movsl
mov
call
roll
adc
pop
scas
push
movsb
add
shrl
test
inc
cwtl
ja
cs
jmp
int3
dec
in
push
jo
xchg
ret
push
ljmp
inc
mov
ficoms
inc
lcall
inc
cmpsb
pop
mov
mov
mov
decl
xor
shll
std
loope
mov
push
or
sbb
decl
test
sahf
pusha
dec
test
imul
sarb
aad
push
shufps
and
fmul
loopne
call
lcall
fs
cmp
dec
out
rolb
or
jb
fucomip
ljmp
es
push
sub
in
imulb
popf
jb
pop
js
incl
rcl
call
fcompl
ja
fdivrp
dec
pop
lret
or
mov
lds
std
call
hlt
out
xor
in
jecxz
fwait
xor
add
push
pop
std
nop
add
ljmp
clc
cmp
sbb
shl
add
or
or
fs
sub
push
push
in
xor
fldl
cmp
mov
add
leave
aas
loopne
inc
lods
sub
popl
lahf
and
call
cli
addl
outsl
push
les
clc
mov
dec
inc
or
lds
pop
enter
in
sbb
lock
call
test
cmc
push
jbe
jbe
mov
cmpsl
cmp
or
ja
jb
loopne
std
stos
incl
mov
aas
test
mov
mov
loopne
imul
test
mov
lea
scas
shl
jns
scas
loop
adc
push
lret
aaa
ljmp
lods
in
push
lods
mov
lret
fwait
pop
insl
arpl
and
xchg
incl
jae
adc
sbb
cmc
push
call
push
sub
ljmp
sub
insb
sbb
push
or
xchg
das
div
sub
inc
xor
sub
and
dec
and
inc
jb
lods
sahf
adc
pop
inc
mov
jmp
imul
int3
test
les
js
pop
adc
addr16
test
lds
mov
decl
xor
leave
in
in
mov
xchg
movsl
mov
test
or
fdivr
daa
mov
sbb
adc
mov
lcall
test
push
mov
pop
std
jmp
cmp
pop
xor
rcr
push
xchg
and
aam
jl
pop
sbb
data16
popf
push
movsb
dec
scas
ffree
sar
jmp
inc
push
mov
fisubl
add
inc
pop
std
out
add
js
iret
daa
lods
push
lods
fdivrp
pop
ljmp
jne
pop
sub
test
ja
test
adc
xchg
push
fisubs
inc
fs
xor
lock
mov
out
mov
lds
pop
mov
jle
bound
or
mov
lahf
pushl
sub
lods
rcll
lcall
mov
test
or
andb
cmp
aad
cmp
dec
pushl
and
in
and
aaa
imull
addl
aas
mov
lcall
mov
in
sarl
loopne
push
push
mov
xchg
scas
in
xchg
add
push
in
stos
pushl
js
pusha
adc
or
pop
push
mov
mov
inc
or
mov
pop
mov
clc
cld
push
stos
test
in
cmp
sub
add
loop
add
lret
pusha
divb
cmp
sub
xchg
mov
shrl
and
cmp
sti
add
fbld
adc
decl
adc
pop
push
jg
or
pop
out
js
push
sbb
cs
jg
lcall
adc
jmp
mov
jae
into
mov
imul
shlb
rclb
shrb
adc
or
cmp
sub
sub
cmp
xchg
mov
aad
call
pop
jns
jo
push
mov
call
ljmp
rcr
in
xchg
mov
pusha
insb
gs
addb
pop
or
mov
xchg
lcall
clc
ret
jbe
imul
push
rorl
xor
xchg
cmpsl
ljmp
negb
sahf
out
inc
cld
pop
mov
pushf
dec
mov
mov
lcall
rorl
pop
mov
hlt
jle
xlat
ljmp
loope
fwait
shlb
xlat
test
rclb
loope
sub
into
sub
mov
clc
shll
andl
sub
scas
or
pop
add
jnp
repz
cmp
les
movsl
ljmp
rcr
dec
scas
mov
mov
push
fcmovnu
lea
and
or
mov
pop
mov
dec
cmc
sub
jno
mov
fcoms
sub
jl
dec
je
mov
fwait
addr16
sub
push
jp
call
sub
test
stc
sub
xor
ret
pop
jl
call
cmp
push
adc
int3
inc
adc
dec
push
xchg
mov
push
dec
decl
fistps
sbb
pop
cld
mov
cmpl
lods
pop
cli
jg
sub
mov
xchg
pusha
jl
push
test
jle,pt
stc
dec
xor
and
ds
sarl
cltd
xchg
xor
fs
cmc
push
out
push
popf
mov
jl
cmpsb
ret
push
and
jno
fldt
call
popa
adc
std
sub
add
xchg
xor
and
jg
adc
lahf
int3
outsb
sar
xchg
push
stc
pop
push
lds
pop
and
insl
push
int3
lods
in
pushl
xorb
pop
pop
mov
outsb
out
or
or
jl
stc
jecxz
orb
lcall
decl
cmp
ret
push
rolb
cmp
sub
popa
xchg
pop
cmp
jl
pop
clc
call
aam
push
lret
cmp
add
mov
movsl
sub
jmp
lret
js
cmp
je
leave
sbb
lret
insb
xor
out
cmpsb
xchg
push
rcll
xchg
dec
incl
cld
dec
inc
movsl
dec
add
inc
and
ja
or
or
add
call
sti
shll
in
out
and
or
test
nop
sub
adc
jg
je
test
pop
lahf
leave
lret
sbb
pop
or
fwait
das
pop
mov
scas
loopne
adc
xor
add
roll
scas
dec
jge
outsl
mov
out
incl
inc
hlt
bnd
mov
cmp
js
ds
adc
xchg
daa
cmp
pushl
cmp
lods
xchg
lea
insl
adc
mov
rolb
int
std
mov
and
xorb
push
push
ds
cmp
pop
ja
cmp
pop
js
orb
lret
out
loopne
jge
call
flds
lods
jge
fisubrl
or
lds
mov
or
jne
mov
bnd
aad
aam
pop
clc
lcall
lods
sbb
fcoml
mov
andb
das
push
cld
sbb
mov
lret
cwtl
int
je
mov
fs
pushl
ja
cmp
in
daa
int3
stc
nop
outsb
or
test
arpl
cmpsb
xorl
movsb
push
xchg
jb
roll
cmp
in
movsl
pop
mov
xchg
xlat
dec
push
push
cmp
shll
push
repnz
mov
push
mov
rorl
and
jg
push
test
xor
xor
jecxz,pn
pop
jnp
pop
xchg
mov
xchg
aas
xor
adc
mov
fdivrl
sarb
shrl
cltd
cmp
jecxz
dec
sub
aad
in
push
and
loop
push
inc
pusha
add
sbb
outsl
enter
iret
inc
mov
cmpb
or
fidivs
pop
mov
pusha
sahf
imul
adc
jp
inc
into
jb
push
adc
or
sbb
adc
jg
dec
fdivl
icebp
fwait
rcr
das
mov
or
inc
push
leave
push
jle
pushl
mov
push
pushf
out
pushl
sbb
fisubs
ret
incb
mov
xor
mov
sbb
jg
ljmp
out
sub
lock
jle
add
sub
cld
pop
stc
jo
add
pop
add
jno
and
outsl
out
and
jecxz
ljmp
xor
sbb
xor
je
data16
or
jl
repz
decb
xor
test
clc
pushl
dec
xlat
cmp
pop
mov
pushf
out
clc
jnp
xor
adc
push
jb
cld
jmp
negl
les
pushl
lcall
fwait
push
xorl
das
cmp
in
mov
mov
mov
sbb
ljmp
cmp
loopne
lcall
push
lret
push
paddsw
mov
mov
mov
sbb
inc
jl
adc
jns
out
adc
adc
lret
lcall
jae
inc
or
fnsave
cmp
arpl
jl
decl
lds
add
scas
rorl
fildll
jg
xor
out
cmp
pop
cltd
cmp
or
sbb
sbb
jbe
cld
or
aaa
not
sub
leave
lahf
inc
mov
and
decl
lods
and
or
mov
or
xchg
enter
push
outsl
push
in
or
push
fprem1
sbb
add
shll
ljmp
fdivl
mov
and
or
je
mov
pop
sub
out
adc
pop
cli
sbb
int3
imull
xor
ljmp
inc
mov
mov
test
paddb
shll
jo
mov
mov
mov
fldenv
cmp
mov
insl
aas
gs
adc
or
jnp
fdivrl
fld
mov
sbb
mov
icebp
icebp
rolb
movsb
leave
outsl
out
aam
dec
test
mov
mov
xlat
cli
rclb
cwtl
xor
and
daa
mov
inc
mov
sub
pop
loopne
mov
inc
ja
fcompl
jae
cmp
xchg
sar
ljmp
lods
xchg
clc
jge
ss
adc
stc
and
std
pop
mov
inc
jo
iret
pop
add
sar
or
shr
dec
mov
pop
push
lea
and
incl
mov
mov
scas
mov
inc
mov
xor
pusha
sbb
icebp
ja
pop
adc
push
jbe
jg
dec
aam
ljmp
jge
dec
cld
jae
sahf
stos
jmp
or
or
add
dec
call
push
int3
repz
push
adc
lret
out
sbb
cmp
mov
inc
incl
xor
loope
xlat
pop
in
mov
arpl
iret
imul
adc
add
je
icebp
mov
cs
dec
lods
push
sub
arpl
adc
stc
lret
add
lds
add
decl
lret
stos
add
out
sbb
cmp
fcompl
xchg
or
aad
sub
or
inc
add
call
imul
fs
mov
in
aad
jo
loopne
and
stc
mov
ljmp
jp
pop
push
aad
push
popf
es
sub
lods
push
adc
mov
lods
mov
setno
ljmp
fldt
test
or
add
mov
shrb
mov
jmp
ljmp
je
insl
mov
sub
push
jle
jo
loopne
sub
sbb
faddl
lods
outsb
in
jbe
cmp
dec
imul
das
decl
dec
mov
icebp
xor
nop
and
fisubrs
jl
dec
or
mov
pushl
fs
sub
test
call
dec
imul
faddl
pop
pop
scas
cli
jg
int
in
xchg
xchg
push
call
xchg
int
xor
xchg
fnstsw
add
inc
gs
ficoml
hlt
movsl
dec
lods
fcomps
push
hlt
inc
jge
hlt
pop
call
std
cmpsl
push
es
iret
add
ja
ljmp
jl
lcall
jns
in
lcall
test
add
decb
or
mov
cmp
cwtl
jnp
jb
insb
pushf
sahf
mov
lcall
clc
push
mov
aam
aam
mov
jge
test
mov
scas
xor
cmp
dec
pop
jne
sub
jge
scas
lcall
pushl
cmc
sub
imul
cmpsb
inc
popa
pop
gs
jmp
and
pushl
je
and
cmp
sub
jge
inc
dec
xchg
in
mov
pop
fwait
decl
xor
insl
out
testb
cmp
or
cli
push
imul
pop
mov
mov
dec
inc
mov
lods
cs
into
xchg
mov
imul
call
loope
pop
mov
cld
cwtl
call
outsl
iret
js
xchg
lods
incl
js
push
cmp
pusha
sub
mov
shl
stos
pop
in
cli
adc
push
pop
les
mov
mov
sbb
jns
mov
das
lds
call
test
mov
lds
adc
or
dec
loop
xor
mov
lock
decl
je
rol
jnp
cwtl
mov
test
mov
call
sbb
clc
dec
mov
pop
hlt
pop
and
aas
shrb
pushl
addl
lea
loop
inc
in
mov
xor
mov
push
inc
dec
add
xchg
pop
jge
jg
sarl
les
scas
stc
jle
sub
aas
mov
mov
aam
adc
inc
mov
dec
fcomi
pushl
or
lret
inc
mov
jne
push
out
scas
addb
cld
aaa
cmp
cltd
dec
loope
adc
call
adc
jp
inc
aas
cmc
decl
inc
call
xchg
cli
cmc
subl
ljmp
dec
addr16
inc
test
dec
insl
dec
loope
orb
inc
jnp
aaa
ret
mov
call
adc
icebp
or
lods
mov
push
adc
add
sarl
stos
ljmp
jle
xor
imul
fwait
out
cmp
pop
ljmp
pop
repnz
and
mov
outsb
jecxz
xchg
std
sub
inc
or
out
movsl
das
decl
iret
jo
stos
pop
sub
mov
fidivl
repz
mov
cld
fbld
outsl
sbbl
xchg
sub
cmpsb
mov
adc
mov
sbb
jb
mov
add
sub
adc
arpl
xchg
repz
jecxz
sbb
fs
ss
jnp
outsl
int
dec
cmpsl
xchg
jne
scas
xchg
test
pop
repnz
mov
test
mov
push
mov
mov
push
jl
in
add
ds
push
jbe
arpl
cs
push
inc
lahf
xor
inc
sub
mov
scas
cmpsb
jno
jmp
cmp
sar
push
loop
mov
pop
jnp
lret
sub
mov
icebp
mov
and
and
js
shll
pop
lret
mov
sbbb
cli
das
aam
mov
inc
data16
add
lret
xor
adc
mov
and
ficoms
pop
fimull
and
mov
and
mov
loopne
inc
jg
jle
jns
xchg
subb
xchg
stc
ret
and
mov
imul
ljmp
loop
xchg
mov
sub
in
clc
and
pusha
repz
mov
xchg
gs
sub
inc
das
hlt
jg
lods
xchg
lret
loopne
jne
push
stos
push
mov
pop
loop
pop
mov
xor
sti
jge
push
incl
xor
jp
andl
out
data16
push
stos
lahf
stos
nop
push
push
xor
and
mov
in
sub
test
repnz
dec
or
sti
sbb
rorl
arpl
jmp
sbb
es
scas
mov
pop
cmp
fisttpll
aad
loope
stos
mov
lcall
lock
add
outsl
mov
cld
ret
xor
mov
push
sar
mov
xor
jno
and
int3
dec
mov
test
imul
cmpsb
or
mov
rcl
ljmp
pop
cli
adc
xlat
push
pushf
les
sub
or
push
mov
lcall
insl
add
inc
sbb
mov
into
mov
push
sar
pushl
hlt
sub
push
dec
or
scas
jge
pushf
inc
outsb
popf
xchg
jae
sbb
js
mov
cli
aad
in
lds
dec
shrl
dec
and
push
in
fmull
jle
das
cld
fldcw
mov
gs
pop
xchg
mov
mov
xor
mov
add
jg
inc
sub
rorb
cmp
lea
or
hlt
popf
dec
mov
test
and
lcall
data16
jecxz
shlb
jg
call
mov
mov
or
lahf
sub
ret
cmp
jo
adc
ds
lcall
mov
dec
sbb
outsb
push
jle
sbb
xchg
ror
arpl
in
mov
mov
shrl
into
or
out
clc
inc
ficomps
sub
pop
cld
mov
call
ja
jnp
addb
outsl
mov
mov
inc
dec
aam
mov
add
iret
jnp
stos
jg
inc
cli
mov
jb
clc
push
fnstcw
cwtl
lret
das
or
cli
lods
adc
ljmp
stc
mov
xchg
xchg
dec
push
lock
sbb
clc
add
lea
divl
clc
mov
mov
inc
sar
ljmp
out
jecxz
jae
or
pop
out
stc
outsl
pop
out
mov
mov
mov
pop
enter
das
xchg
mov
sub
shll
fcomp
push
and
add
das
shll
mov
xchg
cli
mov
xchg
lcall
je
push
push
sar
add
lcall
adc
fsubrs
mov
incl
loope
push
mov
jnp
xor
cwtl
out
outsb
sub
mov
stos
shll
pushl
mov
mov
lock
stos
lret
test
cmp
fdivl
ljmp
outsl
lea
es
push
sbb
add
sti
int3
xor
xor
pop
ljmp
andb
xor
inc
sub
add
leave
punpckhbw
pushl
push
movsb
mov
mov
int
nop
add
xorb
ljmp
cmp
arpl
xor
cs
out
xor
jge
jmp
sbb
cmp
pop
mov
and
loopne
fwait
mov
decl
fnstsw
aaa
aas
sbb
push
jo
and
int3
jle,pn
and
fucomip
jmp
push
inc
daa
into
sbb
test
mov
std
add
or
incl
je
call
mov
rcll
jmp
pushf
jmp
dec
jge
orl
incl
inc
loop
sbb
push
mov
xchg
mov
sti
sahf
and
cld
int3
dec
insl
jmp
lds
and
cli
popa
loope
dec
cmp
push
jg
mov
ljmp
push
xchg
vmovsd
mov
xor
fbld
pop
add
pop
hlt
ds
jmp
enter
das
cmc
decl
push
in
pop
cmp
sbb
out
push
fsubl
decl
lds
stos
and
and
add
ja
or
push
popa
mov
pop
imul
xor
mov
mov
outsb
push
jae
es
imul
inc
cld
and
inc
inc
dec
sbb
mov
xlat
cmp
mov
stos
enter
outsl
stc
cmp
xor
and
ja
into
sbb
xor
ljmp
in
dec
nop
pushf
js
sbb
lret
dec
aad
sbbb
cld
add
inc
inc
fucomip
movsl
or
pop
popf
decb
repnz
or
decl
insl
cmp
xchg
xchg
pushf
mov
fwait
cmp
divl
adc
popa
jle
bswap
jge
pop
clc
lods
rorb
xchg
pushf
mov
xchg
nop
in
and
xchg
xor
testb
aas
jmp
adc
test
hlt
lahf
jp
cltd
add
insb
dec
in
pop
pop
push
cltd
pop
loope
ret
popf
fwait
sub
cli
xchg
sbb
mov
jo
jnp
ss
push
nop
pop
jl
lcall
cld
outsl
repnz
push
out
mov
push
xor
mov
pop
hlt
jg
fistpll
sbb
mov
icebp
stos
clc
out
hlt
mov
rcll
cmc
adc
mov
sub
mov
nop
out
jnp
jno
aaa
and
mov
jp
les
movsl
sbb
or
jbe
cmp
adc
jle
xchg
or
aaa
les
xorb
insb
pusha
xchg
or
mov
pushf
pop
add
mov
out
ljmp
or
add
movsl
movsl
and
add
lcall
cmpsl
push
filds
loopne
sub
mov
dec
mov
stos
orl
dec
rolb
cmpsl
pop
mov
lret
arpl
mov
and
repz
fucomip
das
test
xchg
rorb
cmp
sub
jae
inc
movsb
iret
xchg
mov
dec
loope
adc
and
pop
sub
loopne
test
pop
pusha
mov
sbb
in
ffree
popa
mov
decl
scas
dec
pop
jp
push
jp
xchg
push
flds
mov
aaa
dec
push
ficoms
data16
js
inc
out
es
test
jb
sub
cltd
cmp
lock
inc
aam
jle
test
hlt
and
or
ret
jg
jmp
mov
and
test
rcrb
bound
xor
mov
mov
lods
add
popf
int
mov
jo
ficoms
fcoms
cmpsb
mov
nop
cltd
ja
sbb
jae
xchg
push
cld
mov
rclb
fsubrs
mov
dec
call
mov
and
dec
jae
repz
push
jg
mov
add
stos
lock
pop
inc
sbb
leave
jg
lcall
push
adc
movsb
ss
call
jle
jmp
lcall
mov
fsubs
xchg
or
pop
dec
jne
jge
std
pop
daa
ljmp
enter
jo
mov
mov
dec
cmp
loope
sbb
call
clc
dec
push
sub
andb
push
sarb
inc
sub
sub
movsb
jb
std
mov
push
scas
add
mov
fidivs
mov
decl
loopne
lret
into
test
lcall
xor
dec
scas
xorl
das
lods
imull
or
ss
mov
sub
std
xor
incl
mov
inc
dec
push
insb
aas
xor
mov
cmp
cmp
cmpsl
aaa
and
fisubs
subb
aas
jb
dec
ljmp
jp
jne
adcb
adc
cmpsl
or
dec
mov
arpl
sub
adc
cld
jmp
mov
push
jecxz
pop
inc
xchg
sbb
mov
mov
test
pop
sub
sbb
lret
std
insb
mov
jg
loopne
jno
out
insb
repz
ljmp
jns
add
push
jp
jge
sbb
mov
mov
mov
adc
pushf
stc
sub
movsl
push
ljmp
les
or
int3
rcrl
lret
xchg
fiadds
adc
sbb
or
lds
fcomps
mov
jmp
mov
ljmp
mov
dec
daa
pushf
pusha
sar
pushl
rorl
dec
fwait
inc
xchg
adc
mov
mov
add
add
jecxz
mov
notb
dec
jle
jg
div
mov
das
push
fidivs
rcll
shrb
lcall
push
outsb
push
xchg
insl
lahf
ret
ret
xchg
aaa
jmp
loopne
call
clc
movsb
lea
rclb
xchg
movsb
popf
mov
inc
push
mov
jo
push
test
aas
mov
insw
jo
mov
lret
add
mov
cmpsb
mov
xchg
inc
pop
clc
js
and
lcall
cmp
decl
jmp
pop
ret
inc
stos
popf
dec
std
adc
enter
faddl
add
sub
jge
dec
push
xor
xchg
mov
inc
ljmp
push
outsb
or
imul
hlt
add
jle
lods
push
out
call
lods
xor
je
or
pop
iret
push
or
mov
xor
les
jg
testl
sub
mov
dec
cld
call
clc
adc
adc
stos
jmp
xor
lret
inc
push
call
inc
shlb
add
aaa
ror
stos
fidivs
pop
sbb
stos
sbb
jecxz
je
pop
or
cmpsb
sub
and
iret
loope
ficomps
inc
push
pop
out
call
pop
out
out
or
in
ficomps
ds
std
inc
sahf
cld
stos
pop
xor
in
jp
popf
iret
sbb
clc
sub
repnz
fucomip
sar
ljmp
pop
stc
in
mov
inc
push
imulb
imul
jae
sub
loop
in
ljmp
int3
fwait
in
push
pop
inc
repz
mov
test
call
push
idivb
mov
stos
sbb
mov
or
xor
pop
jl
outsl
arpl
in
in
mov
pop
in
cmp
fisubrl
pop
enter
loopne
int
daa
inc
dec
sbb
cld
cmpb
iret
mov
imul
sub
je
inc
push
call
and
imul
push
mov
mov
push
and
mov
imul
xor
xchg
dec
pmulhw
stos
pop
xor
inc
mov
cs
imul
adc
mov
jb
mov
out
or
fwait
in
leave
push
scas
jp
rcrb
and
adc
ljmp
pushf
or
inc
add
mov
xchg
outsb
sbb
das
dec
mov
adc
sub
out
jbe
jecxz
clc
incl
pushl
lods
pop
gs
cwtl
negl
and
das
jle
xor
pop
or
pop
icebp
leave
xor
cmp
rclb
aaa
call
aaa
xor
sahf
cli
dec
into
jns
hlt
imul
ljmp
xchg
mov
sub
pusha
mov
push
aas
push
ljmp
xchg
lahf
xor
int
in
xchg
xor
pop
or
xchg
push
mov
or
dec
mov
pop
mov
mov
fildll
mov
pop
aaa
icebp
push
pop
push
push
inc
adc
fisubs
cmp
ljmp
mov
into
push
mov
js
sub
sub
insb
pop
sbb
cmovne
frstor
decl
ret
push
outsl
icebp
in
mov
mov
dec
ret
mov
pop
mov
and
fdivp
sub
push
lret
jb
inc
push
js
cli
fbld
loope
lods
jne
sub
incl
cmp
mov
pop
inc
cld
cmp
fs
push
push
and
clc
cmp
lods
mov
call
jno
sub
mov
inc
dec
clc
test
rcll
add
or
idiv
sbb
loope
jno
cmp
or
stc
sub
call
sub
out
pop
shl
cltd
lods
and
rclb
dec
in
lcall
push
and
adc
pushf
out
jl
adc
mov
mov
aaa
clc
roll
xchg
mov
pop
out
sbb
out
mov
cld
decl
pop
mov
and
fwait
xor
dec
test
jg
rcr
sbb
push
dec
mov
cld
and
inc
test
lcall
mov
andb
jmp
scas
cli
mov
cmc
in
fisttpll
cld
jns
pushf
popf
shrl
aaa
aaa
insl
adc
fiadds
push
xchg
dec
je
add
adc
lcall
pop
or
cmp
mov
jb
decl
adc
mov
shrw
adc
sbbb
mov
inc
outsw
xor
in
mov
icebp
call
mov
xchg
movsb
leave
sub
adc
or
push
mov
cli
data16
inc
ljmp
sub
mov
stos
mov
testb
sbb
jg
mov
mov
addr16
cltd
push
cmc
cmp
jle
fsub
fstpt
das
pop
pop
in
and
adc
cmc
jp
sbb
stos
push
adcb
sub
or
mov
jge
cltd
insb
out
outsb
add
pushf
jae
iret
pop
int3
or
add
mov
lcall
cld
decl
cmp
adc
out
pop
bnd
stos
jl
mov
jae
mov
fsubr
dec
cld
pushl
in
dec
adc
mov
outsb
jno
aas
rcl
jmp
sbb
and
adc
pushl
movsb
movsb
lock
je
xor
mov
lcall
sbb
cwtl
and
mov
sbb
pop
stc
cmp
jo
nop
test
mov
jmp
push
das
xchg
lcall
leave
loope
mov
push
jecxz
mov
sub
xor
les
push
incl
xchg
cmp
jg
inc
pushf
xchg
mov
jp
push
cmp
and
mov
in
daa
add
pushf
adc
mov
mov
das
mov
sar
or
lods
or
shrb
inc
cwtl
leave
lods
push
cmpsb
mov
repz
xchg
mov
ja
je
add
rorl
mov
cld
xchg
jne
loope
movsl
call
outsb
dec
movsb
lods
mov
in
jl
adc
stc
loope
dec
and
sar
das
std
leave
cmpsl
mov
mov
insl
mov
loopne
mov
rcr
pusha
cmpl
addb
imul
mov
js
in
mov
xor
sbb
sbb
fiaddl
aas
jmp
lahf
mov
push
dec
and
ljmp
jb
dec
mov
stc
ljmp
jg
jns
lcall
movb
in
add
dec
and
je
dec
ss
mov
ljmp
fstpt
pop
xor
jle
cmpsl
outsb
xor
pop
xor
movsl
test
cmp
ljmp
mov
or
dec
mov
das
jne
incb
xchg
mov
and
inc
hlt
incl
nop
movups
shlb
push
cwtl
jns
mov
ds
cmp
mov
decl
mov
xorb
in
stos
lcall
enter
stc
pop
ljmp
hlt
decl
lret
inc
pop
fdivrs
hlt
cwtl
popf
je
nop
dec
or
sub
sahf
sbb
pushl
mov
sahf
and
jg
and
data16
or
and
incl
mov
add
push
xchg
push
test
jnp
sahf
lret
filds
pop
fs
xchg
cmp
mov
xchg
icebp
lods
xor
cs
popa
dec
idivb
push
mov
not
push
push
mov
mov
cmp
xchg
inc
iret
dec
leave
dec
adc
push
xchg
sub
test
dec
andl
xchg
dec
lcall
dec
test
sub
push
or
pop
pushf
ja
ljmp
mov
xor
mov
mov
out
mov
iret
cmpsl
pushl
push
add
pusha
add
aad
dec
sbb
or
mov
mov
nop
push
sub
insl
pop
or
fwait
dec
push
stos
sbb
nop
pop
loope
clc
das
mov
jo
lret
sub
add
sti
ja
jge
xchg
mov
mov
push
add
leave
cmpsb
push
push
call
incl
movsl
or
out
xchg
outsb
sub
ds
jnp
pop
nop
addr16
sbb
jne
fisttpll
lods
push
pop
cmp
jl
lcall
cmc
test
subb
les
add
mov
jno
out
fisttpl
adc
clc
dec
lods
pop
in
dec
add
test
dec
jns
iret
ja
dec
xchg
ljmp
cwtl
cmpsl
sub
pand
inc
sbb
mov
mov
cltd
or
inc
mov
mov
lods
add
orb
lock
inc
dec
lret
adc
fnstsw
mov
ljmp
pop
aam
jae
mov
in
mov
xorb
jg
pop
sbb
inc
or
fstpl
iret
test
pop
inc
std
add
scas
repnz
lcall
sar
lcall
test
push
ds
dec
out
inc
aam
out
pop
dec
jnp
mov
xchg
mov
adc
in
and
xor
lahf
incl
and
scas
jbe
push
add
inc
cmp
cmp
repnz
cld
dec
jmp
lods
push
cmp
mov
dec
ret
fldcw
lock
fildll
dec
mov
mov
ljmp
in
sbb
dec
jl
lcall
dec
imul
xchg
jle
and
jge
and
incl
rcr
rcrl
xor
movsb
pop
push
xchg
and
sub
mov
sarb
adc
xor
pop
mov
add
mov
in
adc
std
fidivrs
pop
xchg
and
jle
inc
pop
ljmp
fs
mov
and
int
mov
pop
inc
and
sub
cmp
ds
mov
ljmp
loopne
arpl
sbb
inc
in
ss
mov
jl
mov
mov
pop
xlat
xchg
std
cmp
and
or
movsl
popf
sub
jecxz
xchg
in
or
mov
lcall
jae
dec
mov
inc
movsl
mov
lods
out
sahf
cmp
cs
jg
xchg
mov
push
or
std
fistl
lcall
movsl
clc
addr16
jae
and
loope
push
jne
mov
in
add
mov
inc
mov
cmp
inc
or
outsl
ljmp
int3
orl
nop
jp
je
inc
xchg
js
jne
stc
lock
sub
test
cli
fisubs
jo
gs
or
aam
jae
mov
outsl
std
jg
aad
jp
jbe
filds
push
popa
clc
xchg
incl
icebp
pushl
cwtl
sti
mov
divl
iret
ss
cld
push
lret
bound
add
les
outsl
dec
sbb
jp
xchg
pop
dec
cwtl
xchg
scas
enter
xor
decl
dec
xor
loop
sbb
xor
filds
inc
xchg
shrl
incl
push
shlb
aas
fidivs
clc
nop
pop
clc
adc
aas
add
pop
into
and
xor
mov
inc
xor
or
movsl
in
fldcw
push
sbb
pop
icebp
mov
pop
add
cmp
fistpll
and
decl
and
and
cmp
int3
shlb
jg
movsb
popa
jbe
js
lcall
cs
mov
loopne
incl
repz
lods
pop
out
mov
adc
idiv
lcall
pusha
mov
pop
add
sub
pop
popf
lcall
decl
mov
mov
daa
or
stos
sub
pop
call
inc
mov
jecxz
scas
clc
lods
mov
fs
xor
push
call
faddl
leave
mov
je
dec
idivb
xchg
cmp
jge
sub
nop
add
icebp
push
gs
pop
out
scas
gs
shrl
mov
fnstenv
fiaddl
mov
mov
flds
push
mov
add
pop
call
cs
jne
xor
jmp
pop
cmpxchg
out
out
xlat
iret
fldt
lock
repz
push
js
xorl
cmp
lods
pop
mov
or
stos
es
das
mov
repz
inc
std
call
pop
fnsave
test
icebp
push
jmp
mov
sbb
and
loopne
add
clc
lcall
stos
xor
push
dec
or
inc
shlb
jbe
xchg
cmp
sbb
in
xchg
adc
imul
sarl
mov
xchg
push
mov
adc
inc
imul
cltd
iret
repnz
add
dec
sub
and
js
mov
sub
cwtd
jmp
les
push
xchg
mov
xchg
mov
sub
add
jmp
pop
jp
jle
sub
xor
jmp
mov
aaa
pop
and
pop
mov
mov
iret
dec
lcall
and
sahf
and
imul
adc
iret
mov
addr16
push
or
stos
add
cmp
mov
jge
ja
cmp
outsl
popa
iret
jge
cmp
lcall
sub
push
outsb
nop
inc
call
sti
or
incl
outsb
mov
mov
cs
test
pop
popf
jmp
dec
xlat
leave
sbb
mov
loop
pop
loop
out
stc
jp
dec
push
xor
pop
xor
sbb
fdivr
fisttps
cmp
adc
push
int3
orb
mov
xor
pushl
add
lcall
pop
in
aad
or
push
jg
or
add
dec
adc
ss
rcl
mov
pop
sbb
pop
lcall
add
xor
rcrl
mov
and
pop
push
cmp
xchg
push
jp
jmp
iret
xchg
jge
xor
fbld
incl
shl
jb
xor
ret
out
xchg
out
das
dec
out
std
pop
aas
jle
pop
arpl
pop
fs
push
sti
mov
iret
sub
add
mov
pop
dec
sub
sub
dec
loop
xchg
in
mov
fidivrs
test
push
mov
xor
jecxz
pmaddwd
jmp
inc
shlb
scas
sbb
jb
jp
stc
jg
ss
das
shrl
das
dec
pop
aaa
cli
call
bound
mov
mov
mov
jp
cltd
mov
dec
xor
andl
das
sbb
add
pushl
int
test
or
fldcw
and
fldcw
and
fbld
pushl
sti
daa
ror
xor
cmpsl
pop
sub
es
enter
push
lods
sti
and
call
xchg
in
xchg
aad
xor
in
test
std
outsl
hlt
cli
into
lret
fstpt
in
test
sub
cmc
mov
xchg
jg
dec
sbb
out
inc
mov
das
icebp
fs
xor
sbb
cmp
rcll
mov
add
mov
ss
test
mov
mov
push
adc
loopne
in
jecxz
hlt
filds
bnd
xchg
or
sbb
add
dec
into
jg
pop
call
enter
out
aad
mov
mov
pop
clc
pushl
rcrl
mov
mov
xor
sbb
adcl
inc
dec
cmp
dec
xchg
xchg
jns
jge
push
clc
sbb
ljmp
push
mov
js
cmp
mov
ss
inc
adc
lahf
iret
add
cld
xchg
and
lcall
mov
sub
push
push
fidivs
cmp
aam
mov
stc
and
arpl
lock
lcall
inc
pusha
test
mov
sbb
xor
push
inc
add
lods
pop
xor
and
xchg
pop
scas
mov
mov
mov
fcoml
filds
scas
repnz
mov
sbb
add
pop
fiaddl
mov
inc
addl
push
inc
cmp
cmp
decl
xchg
and
test
rorl
mov
je
adc
cmp
jne
daa
scas
call
ljmp
mov
je
mov
bound
mov
mov
jne
xor
incl
gs
add
mov
xlat
push
mov
mov
jmp
in
xchg
fiaddl
jno
jge
and
out
rcl
pushf
mov
pop
fistpl
jmp
shll
add
mov
lds
mov
pushl
cltd
push
dec
gs
push
jb
aam
js,pn
pop
rep
adcb
pushf
pop
test
shl
ret
imul
jle
hlt
jbe
pop
and
sbb
cmp
fwait
pop
loope
and
cmp
pop
jl
ljmp
sub
xchg
cmc
jno
push
push
dec
or
pop
loop
fucom
jae
pop
xor
pushf
and
test
push
das
add
clc
adc
mov
jno
push
fistl
inc
sub
pop
rcrl
push
ss
lods
mov
or
inc
xor
call
ds
mov
enter
xor
jo
push
sbb
clc
into
mov
divl
arpl
in
rcrl
mov
mov
mov
mov
dec
test
jg
adc
mov
xchg
jg
add
add
jae
push
jg
iret
mov
aad
daa
jp
fs
cmp
xchg
add
hlt
jg
fwait
xor
xchg
outsl
arpl
shrb
xchg
lcall
jbe
inc
nop
push
push
test
insl
cmp
sub
inc
inc
push
jnp
dec
pop
es
mov
call
xchg
mov
xchg
jno
inc
divb
jg
or
shlb
mov
cmpsl
inc
imul
outsl
lahf
ljmp
mov
mov
in
addl
in
sar
ljmp
or
sbb
int3
inc
xor
das
inc
movsl
loope
sbb
xchg
mov
lcall
mov
mov
and
fstpl
pause
mov
sbb
test
cli
leave
pop
xchg
sbb
dec
test
dec
adc
mov
push
push
call
xor
jne
daa
add
ljmp
rolb
outsb
movsl
pop
sahf
call
lods
insb
jno
sub
movsl
adc
mov
test
orl
movsl
add
je
mov
mov
repz
dec
insl
fisttps
pop
andl
loopne
jmp
jecxz
rcr
and
subb
call
mov
adc
in
mov
stos
mov
mov
hlt
lcall
cmpsb
aaa
in
xchg
or
loope
pop
dec
mov
mov
fucomip
std
mov
cmp
xor
imul
jae
loopne
mov
push
popa
or
mov
sub
cltd
mov
pushl
jae
mov
pop
add
adc
ljmp
iret
sub
inc
cmp
mov
pop
icebp
sub
mov
cli
mov
repnz
out
push
scas
sub
add
xor
push
xchg
decl
xor
iret
mov
mov
inc
sbb
dec
xchg
add
add
aad
push
mov
movsl
push
call
pop
mov
push
xor
or
fs
subl
adc
negb
shrl
addr16
sub
inc
pop
inc
outsb
sub
and
das
loop
decl
call
lahf
dec
add
inc
ss
gs
jb
ljmp
dec
pop
clc
clc
icebp
test
outsl
cmpsb
lea
mov
insb
jae
jnp
mov
call
cli
pushf
or
pusha
sub
rolb
push
jge
sbb
cmp
call
repnz
jg
dec
mov
sbb
cmp
pushl
pop
cmp
push
clc
add
and
mov
xchg
jg
sahf
xchg
psubsb
mov
mov
imul
adc
adc
pop
mov
mov
rcrb
jmp
cmpsb
aad
decl
repnz
xlat
movsl
data16
and
call
in
call
cmpsl
jo
sub
push
nop
rep
pop
push
and
push
sbb
insb
addb
shlb
cmc
push
cmp
clc
cld
mov
subl
in
pop
xchg
enter
mov
jg
repnz
cmp
xorl
push
clc
mov
out
out
add
sub
ret
fsub
lahf
mov
pop
mov
fnstsw
adc
std
stos
xchg
fwait
and
jae
dec
decl
jmp
jnp
repz
push
jae
dec
lret
int
inc
imul
pop
xlat
or
cmp
je
add
mov
push
bound
data16
pushl
call
out
stos
pop
ja
jo
sub
fdivr
fbld
push
out
rorb
dec
pop
mov
cmp
js
imull
loope
xor
adc
movl
mov
sub
shrb
push
loop
call
pop
inc
push
add
xor
pop
repz
cmc
popf
push
aad
mov
jg
xchg
push
loop
aas
dec
out
sbb
cmp
or
cmp
mov
lea
fldl
cmp
push
inc
and
and
in
jecxz
sub
ljmp
movsb
and
pop
dec
mov
fwait
sbb
xchg
sub
loop
push
mov
adc
incl
mov
xor
xor
sub
call
xchg
stos
pop
xor
dec
or
mov
leave
inc
es
xchg
addr16
pop
bound
or
clc
lods
loope
jg
bound
pop
mov
mov
into
inc
dec
mov
lea
dec
jp
jl
pop
jp
pop
push
lea
icebp
add
sti
cmc
mov
lret
inc
mov
clc
cmc
or
mov
daa
iret
lods
push
mov
inc
cmp
stc
mov
push
inc
push
clc
ss
sub
dec
sbb
pop
cli
or
adc
movsl
add
inc
dec
cmc
sub
jae
jmp
or
mov
cld
fsubrs
out
mov
pusha
iret
aaa
mov
jmp
dec
xchg
repz
movl
incl
xchg
jp
test
pop
pusha
add
repz
fidivs
jg
ds
xchg
mov
xchg
sub
add
adc
sbb
mov
jmp
cmp
mov
push
jle
pop
adc
stos
bnd
pushw
push
or
push
rorb
ljmp
mov
mov
pop
das
lods
mov
bnd
cli
xchg
pushl
pop
ret
push
lcall
add
adc
icebp
lods
addb
sub
pop
pop
adc
pop
sbb
xor
aaa
jp
lods
cmc
outsl
push
bnd
jnp
movsb
jno
mov
lcall
mov
ja
es
pop
insl
test
packssdw
ljmp
stos
scas
mov
add
mov
sbb
xchg
lds
sub
dec
mov
rolb
aad
aas
xor
xor
and
cmpsl
xor
fbld
inc
cwtl
jo
sbb
jp
mov
xchg
das
or
mov
sti
jg
repnz
push
pop
push
stos
mov
xchg
das
hlt
jg
iret
pop
out
jmp
mov
xlat
and
incl
subb
ljmp
and
or
call
push
idivl
fstps
jmp
xor
test
dec
xor
xchg
into
xor
pop
sar
jmp
mov
adc
push
inc
fistps
stos
jmp
xchg
test
cmc
mov
inc
and
jmp
jmp
xchg
cli
mov
lods
decl
cld
lcall
or
or
sbb
jns
xchg
cmp
fisttpl
test
dec
mov
cmpsb
lcall
xor
or
push
jb
mov
mov
or
and
faddl
fs
lcall
lret
mov
inc
outsb
xchg
jbe
into
int
cmc
jbe
fdivs
pop
aaa
mov
and
test
les
std
fistpll
mov
xchg
xchg
shrl
scas
add
lcall
lret
arpl
jg
das
mov
mov
ljmp
xchg
incl
mov
or
cld
cmp
repz
sub
imul
movsl
scas
or
test
lea
adc
fistps
push
shll
clc
pushl
mov
fs
out
filds
dec
inc
enter
mov
mov
lret
inc
sbb
push
call
lods
int3
repnz
xchg
movsl
pop
cmpsb
loope
or
repz
imul
aas
outsl
bound
int
add
mov
aad
jno
call
xchg
clc
decl
add
xor
push
jg
cltd
popa
sbb
call
mov
mov
and
sbb
add
call
lret
push
adc
sahf
into
jnp
in
repz
lahf
cmc
movsb
sbb
and
call
pop
pusha
sahf
xlat
cmp
cli
lcall
stos
or
fidivs
inc
xchg
jecxz
fsubl
pushl
ss
mov
add
pop
mov
and
mov
call
jge
jge
ljmp
outsl
pop
push
subb
mov
lea
incl
divl
or
mov
scas
sbb
sub
mov
xlat
dec
cld
pop
xchg
icebp
int
pop
mov
push
aam
aaa
idiv
push
adc
jecxz
pushf
mov
incl
adc
jae
fldenv
sbb
xor
cmc
fistpll
xorb
adcb
mov
adc
mov
adc
add
inc
xor
movsb
lret
decl
adc
pop
adc
pop
push
popa
mov
cmp
adc
jg
outsl
sahf
push
insb
xchg
ret
dec
imul
pop
cwtl
push
cmpsb
pop
js
pushl
and
repnz
iret
fmuls
sbb
test
jmp
loopne,pt
sbb
out
insb
nop
jnp
es
jle
loope
int3
pextrw
lcall
push
mov
sub
jns
lea
es
lcall
ja
andb
sub
mov
ret
pop
fwait
ret
popa
push
loop
fimuls
lea
movsl
xor
in
out
das
icebp
pop
adc
sbb
call
popl
pop
mov
jg
mov
roll
adc
push
ljmp
ds
mov
push
xor
pop
sbb
imul
xor
add
sahf
cmp
sbb
jae
shl
mov
test
enter
insl
sar
dec
stos
xchg
pop
stc
xchg
and
and
add
outsl
hlt
ja
dec
mov
insl
call
scas
and
fbld
hlt
sbb
sbb
loop
fisubrs
push
dec
stos
mov
sbb
incb
or
test
js
mulb
push
test
aad
andl
lcall
dec
mov
mov
fidivs
adc
repnz
jg
pop
fwait
mov
jns
add
mov
xlat
seta
je
push
hlt
mov
and
std
roll
push
icebp
stc
ljmp
icebp
incl
outsl
daa
clc
es
pop
inc
sar
enter
pop
sub
sbb
ficomps
push
outsl
pop
sbb
mov
test
inc
push
dec
xchg
pop
sbb
dec
ljmp
clc
cltd
lcall
push
out
jge
jne
das
les
lods
imul
test
fwait
and
sub
daa
fucomip
inc
push
inc
ret
xchg
cmpsl
fwait
push
in
jmp
mov
repz
mov
icebp
call
pop
push
dec
mov
std
cmp
shr
or
decl
outsb
ja
jg
push
mov
cmp
mov
iret
test
sbb
imul
nop
or
mov
icebp
pushl
mov
push
lahf
addl
pop
movsl
or
test
sti
mov
cmp
imul
popf
pop
mov
pop
insl
and
lcall
push
mov
test
xchg
push
dec
pop
pop
cli
jmp
int3
imul
pushf
gs
arpl
add
add
xchg
mov
loope
or
lea
push
call
jns
movsl
mov
mov
inc
xchg
imul
pop
repnz
fimuls
popf
out
mul
pushf
pop
dec
icebp
enter
ljmp
cmc
incb
subb
cmc
mov
inc
cmp
jmp
loopne
and
lcall
in
clc
lcall
frstor
xor
test
jp
negb
mov
pop
mov
sub
or
or
inc
lock
out
mov
lods
cmpsb
scas
push
add
xchg
sub
add
or
inc
and
push
mov
mov
xor
lahf
xchg
dec
or
xchg
jb
jle
sub
cmpsl
push
into
inc
fildl
push
cld
fmuls
icebp
js
mov
scas
test
mov
cmp
insl
cmp
sbb
outsl
mov
pop
cmpsl
stc
jg
jle
dec
xlat
xchg
loop
pop
sub
dec
lcall
movsb
ret
mov
popa
xor
leave
pusha
jo
pop
dec
sub
int
fistl
adc
sbb
mov
adc
mov
pop
xchg
push
call
add
stos
jge
mov
dec
fsubrp
cmpsl
push
add
cmp
add
sub
mov
dec
mov
mov
popf
nop
minps
shll
or
pop
pusha
xchg
mov
xor
pushl
clc
rol
repz
mov
and
sbb
call
pop
jp
or
mov
or
in
pop
outsb
in
cmp
ret
jnp
pop
lods
je
mov
sbb
out
out
enter
mov
dec
decl
ljmp
mov
movsl
in
jo
inc
mov
and
sbb
inc
scas
ds
lcall
mov
mov
inc
popf
adc
pop
pop
ljmp
cmp
inc
aad
mov
call
and
sbb
fwait
das
xor
xlat
jmp
jg
jnp
mov
inc
das
shrb
xlat
outsl
cs
pushl
adc
jp
adc
sub
jge
pop
xchg
movsb
xchg
leave
pop
sbb
xchg
dec
or
iret
inc
add
incl
pop
and
and
mov
dec
push
ljmp
mov
call
cmp
mov
and
imul
int
sub
mul
cmp
into
pop
ljmp
int3
sub
fwait
and
pushl
cli
add
mov
add
sbb
in
mov
les
fnstsw
incl
xchg
push
jne
cmpsb
mov
sti
push
adc
push
lahf
decl
call
mov
or
dec
add
pop
cmpb
sbb
mov
sbb
movsb
pop
jl
test
jno
cwtl
jge
adc
mov
fldl
and
repnz
jmp
dec
jae
add
sbb
lcall
inc
in
roll
ficoms
adc
arpl
dec
fnsave
lock
and
pop
xor
arpl
test
jne
roll
dec
in
pop
and
loop
jg
and
and
jmp
add
cwtl
repz
fbld
mov
jns
jo
leave
pop
pop
or
mov
and
mov
outsl
std
pop
sub
sti
sarl
clc
sbb
call
movsl
addr16
push
pushl
sub
or
jp
jae
jecxz
ljmp
add
loopne
call
cltd
inc
int
mov
xchg
pop
jg
movsl
xchg
loop
incl
lcall
rep
imul
rcrl
ss
shrl
or
das
rcrl
divb
mov
out
push
lds
call
jbe
shll
iret
cmpsl
inc
mov
xchg
jb
out
in
or
ljmp
test
xor
mov
dec
enter
xchg
sbb
nop
mov
mov
movsb
aas
das
jl
mov
aaa
push
std
ds
xlat
inc
jne
call
sbb
ret
aam
leave
lea
cmp
ljmp
inc
cld
clc
or
mov
test
movsl
sub
jo
sahf
js
pop
clc
incl
mov
into
sahf
pop
pop
pop
sbb
push
dec
aaa
or
aad
fmuls
loopne
cli
adc
stos
lahf
std
xchg
xor
pushl
xchg
fistpll
or
push
inc
sti
clc
stos
roll
std
lcall
rcrl
stos
sub
not
cmc
jg
icebp
sbb
add
in
jecxz
mov
mov
and
mov
cli
daa
insb
adc
pop
loopne
test
rolb
test
bound
lcall
or
mov
and
es
xor
popa
mov
cmp
mov
test
shl
ljmp
gs
cwtl
and
adc
stos
pop
in
ror
stos
ljmp
mov
shlb
lret
mov
clc
mov
icebp
lahf
pop
dec
or
icebp
mov
xchg
pop
mov
incl
rolb
push
jmp
mov
fidivrl
rcll
mov
les
int
es
adc
les
or
notb
push
es
cmp
pop
cmp
or
loope
clc
mov
push
mov
clc
dec
push
mov
addr16
push
xor
incl
cmp
test
jg
push
push
jns
push
mov
incl
cli
dec
movsb
stos
popa
mov
sbbb
and
add
fsub
cld
push
call
dec
imul
cld
mov
xchg
jno
outsb
xchg
and
push
repz
clc
xchg
add
and
shl
int3
daa
stos
fst
decl
push
cmpsb
hlt
push
ds
cmc
aad
rcr
and
lcall
xchg
pushf
sub
dec
jae
mov
and
xchg
fsts
sub
inc
jg
or
add
push
sub
mov
xchg
inc
mov
add
shll
push
jae
jl
ljmp
add
push
mov
mov
dec
pop
int
aam
xchg
pop
andl
insb
cmp
sbb
push
aam
pop
mov
dec
jl
add
dec
cmp
orb
pop
cld
incl
jns
sub
ss
out
dec
cmp
pop
inc
adc
adc
test
push
cmp
xor
mov
movsb
mov
jnp
inc
aas
ljmp
scas
shrb
orl
xchg
cmpsl
in
jg
jge
movsl
popf
ds
mov
or
push
push
push
sub
xor
sbb
inc
add
iret
xchg
and
inc
scas
incl
sarb
dec
sub
xchg
sub
pop
imul
ljmp
and
or
and
fmul
sub
lahf
out
jge
out
inc
and
add
ljmp
ret
fnsave
decl
inc
adc
push
inc
ds
stc
mov
mov
mov
lcall
xor
mov
xchg
xor
stos
pop
push
dec
call
pushl
test
mov
or
sti
add
adc
lcall
jmp
mov
test
jno
xchg
push
cwtl
fcomip
mov
jge
iret
ljmp
adc
dec
or
push
mov
push
fwait
hlt
sahf
sbbl
mov
scas
dec
push
aas
lcall
mov
stos
outsl
dec
outsl
adc
shrl
inc
loop
xor
and
call
out
xchg
bound
movsl
xchg
aam
cltd
mov
filds
xchg
adc
jmp
mov
jae,pt
xchg
repz
mov
incl
sub
xchg
iret
shl
add
jecxz
dec
stos
cltd
mov
test
sbb
ljmp
jmp
iret
push
inc
cmpsl
adc
adc
test
sahf
lahf
jg
mov
jno
cmp
push
rol
lret
and
jmp
outsb
popf
sub
and
adc
sti
icebp
sbb
cld
dec
outsb
cmp
pop
jp
fistpll
add
dec
cmp
fwait
jmp
fs
xchg
push
stos
mov
jmp
aad
fwait
push
add
test
test
bound
xchg
nop
test
lcall
and
mov
adc
clc
push
fstpl
pushf
pop
add
sahf
shll
out
push
xor
cmp
sub
xchg
pushl
cli
lcall
pop
hlt
mov
es
jle
cmp
ljmp
pop
cmc
popa
add
mov
xchg
xor
mov
lods
mov
testl
arpl
decl
clc
aad
mov
int3
movsb
jp
outsl
lahf
sti
pop
into
inc
cs
push
adc
je
mov
out
push
cld
lods
test
cmp
js
sbb
mov
xchg
sub
movsb
pop
in
scas
in
push
sbb
in
push
sbb
ljmp
arpl
jp
xchg
adc
addr16
js
test
push
adc
xchg
push
lds
lcallw
push
lods
pop
jns
cltd
out
clc
mov
ret
mov
xchg
int3
jne
or
rcrl
xchg
pop
lea
lcall
add
fsub
scas
scas
icebp
int3
call
decl
inc
pop
pop
mov
aas
jecxz
lcall
inc
ficompl
or
call
jmp
add
mov
mov
cld
push
scas
and
pushf
jne
lods
iret
add
xchg
pop
mov
call
push
push
je
add
mov
fstpt
in
aam
push
sahf
add
inc
insl
sub
and
xor
jae
or
sub
stos
push
mov
mov
mov
and
adc
lcall
xchg
sub
push
push
xlat
ret
or
sbb
ret
jo
mov
mov
pop
incl
push
outsl
xchg
mov
sub
arpl
lods
fiaddl
out
xchg
jns
sub
pop
mov
popa
insb
jg
xor
xor
inc
jb
outsl
dec
sbbl
jl
sbb
sbb
cli
push
bound
rcll
testb
js
ret
jmp
or
push
adc
or
cmpsb
jbe
movsb
xor
fs
int
mov
or
imul
mov
stos
repz
clc
mov
ds
mov
in
mov
push
test
sub
std
dec
lret
mov
inc
fdivrs
lcall
les
lods
ss
mov
leave
out
or
call
fmull
scas
add
push
sbb
clts
ljmp
ret
push
aad
jmp
xchg
pop
sbb
loop
sub
push
sbb
loopne
shlb
mov
pop
jecxz
adc
jmp
add
leave
pop
fwait
pop
movsb
lret
cmpsl
mov
cmp
mov
outsl
lock
sbb
mov
pop
hlt
push
int
inc
jbe
mov
incl
pop
scas
cltd
aam
mov
lret
adc
cmp
add
call
decl
out
inc
sbb
mov
xlat
pop
fidivrs
mov
lcall
out
cmp
pop
jbe
mov
movsb
cmp
pusha
and
add
ljmp
mov
push
add
xchg
ret
cmp
cmp
mov
cmpsb
sbb
jo
lods
inc
ljmp
and
mov
aad
fdivl
mov
das
mov
xchg
es
popf
ret
cltd
sbb
add
jecxz
sub
lcall
and
pop
repz
fistpl
and
subl
lcall
push
scas
add
adc
and
movsl
stos
pop
sbb
incl
dec
cs
ret
pushl
mov
in
cmpsl
xchg
inc
xchg
es
sub
js
mov
lret
bound
ja
lcall
adc
inc
int
aad
imul
aaa
clc
and
jecxz
pop
sbb
lods
scas
sbb
sub
mov
ljmp
pop
in
mov
xor
rcr
pop
popf
lret
sti
mov
lea
iret
shll
mov
addl
mov
cmp
jl
mov
adc
cmp
or
int
mov
pop
xlat
or
stos
mov
inc
lcall
inc
mov
inc
jl
outsb
or
jae
ljmp
cmp
mov
jmp
cmp
les
pop
pop
fstl
jl
and
pop
add
ljmp
and
push
cmp
xchg
lea
enter
mov
pushl
jp
aaa
leave
in
pop
jne
popa
cmpsl
inc
jbe
insb
add
or
ljmp
divl
pop
sub
vmovq
shrb
lea
lcall
pushf
mov
out
push
orl
cmp
jmp
push
sub
fildll
in
push
lret
cltd
cli
sub
mov
inc
inc
mov
fstpl
mov
sbb
imul
pop
sbb
or
repnz
pushl
clc
jmp
sbb
ret
movsb
xchg
jns
mov
sub
inc
inc
test
jmp
lcall
imul
jb
ljmp
lcall
jmp
fucomp
push
dec
pop
inc
arpl
add
dec
xchg
adc
incl
aad
dec
scas
xor
fldcw
jbe
sar
jmp
sbb
push
sbb
mov
xchg
outsl
idivl
sti
inc
orl
mov
fstpt
loope
into
adc
sbb
mov
mov
clc
cmpsb
aaa
imul
sbb
das
xor
pop
jge
and
pop
pop
mov
fnstsw
pop
mov
inc
div
nop
dec
ds
push
not
insb
inc
pop
mov
mov
pop
movsl
jo
xchg
imul
mov
xchg
lahf
sbb
icebp
ljmp
push
bound
mov
movsl
mov
dec
xchg
outsl
cmp
mov
push
movsb
nop
cs
leave
leave
dec
aad
cmp
dec
jbe
mov
lcall
adc
and
cmp
movsb
push
mov
xorb
inc
cmc
xlat
add
jg
outsl
loop
mov
xchg
int
xchg
nop
js
outsl
or
sbb
inc
push
std
pop
adc
icebp
or
sbb
in
jg
push
dec
jno
enter
mov
scas
stos
cmp
jae
adc
push
pop
inc
arpl
xchg
fimuls
loop
mov
sbb
sub
jb
push
andb
jecxz
push
fucomip
sub
fists
lcall
adc
jmp
pop
cld
fs
push
jle
dec
pop
and
push
bound
std
incl
call
inc
pop
push
add
arpl
dec
xchg
call
add
xchg
stos
fwait
and
cmp
jno
mov
dec
mov
mov
mov
call
jg
cmc
mov
ficoml
clc
adc
mov
faddl
data16
cmp
fwait
sti
mov
ljmp
sub
mov
xchg
call
xchg
add
call
nop
sahf
adc
mov
lcall
dec
inc
mov
inc
pop
popa
orl
jmp
mov
sbb
mov
call
shrl
loop
iret
inc
ret
test
mov
shl
outsl
movsb
test
xor
xchg
call
push
xchg
push
pushf
hlt
or
inc
push
lea
dec
inc
cs
mov
cmp
jg
or
ljmp
int
cli
mov
add
ror
fwait
xor
mov
push
shll
mov
test
mov
call
add
test
xchg
adc
add
jo
and
ds
mov
stos
adc
add
sbb
mov
mov
call
stos
sbb
adc
enter
mov
es
dec
jmp
xor
lret
fmul
pushf
sbb
repz
inc
ja
and
inc
hlt
lret
call
cmp
ljmp
xor
xor
stos
xlat
jae
jmp
add
fcmovnb
and
add
ret
sahf
popf
lret
outsl
or
aaa
data16
inc
mov
mov
mov
outsl
pop
stos
mov
sbb
paddsb
cmp
mov
test
mov
adc
test
loopne
cmp
dec
pushf
icebp
mov
test
push
sub
xchg
mov
mov
sub
popf
movsl
lret
je
test
jns
stc
sarl
das
lea
gs
fldenv
pop
bound
out
sbb
rolb
ret
jb
addr16
jae
pushl
sbb
adc
dec
cmp
aaa
in
cmp
mov
outsl
pop
mov
add
incl
pop
add
xor
jo
or
test
push
sub
repz
addb
decl
cmc
sbb
sbb
aad
inc
jb
xchg
adc
fidivrl
fimuls
cmp
sub
scas
jns
push
push
xor
pushf
js
and
mov
lcall
jo
iret
icebp
and
jns
imul
cmp
jno
decl
popa
jmp
in
or
daa
int
in
jbe
cs
jb
mov
sbb
mov
mov
lahf
xchg
in
sahf
inc
mov
pop
mov
jns
std
mov
rsm
jns
cli
decl
dec
es
mov
lock
not
rcr
xor
or
mov
ja
fucomip
pop
add
and
popf
das
ret
mov
outsb
sub
lods
cmp
arpl
xor
or
repz
rcl
addb
jg
repz
scas
dec
and
pop
or
mov
mov
jmp
fsubrp
pop
pop
idivb
lods
mov
push
icebp
jg
jmp
inc
or
rcll
cs
push
push
xchg
xlat
mov
xchg
int3
test
inc
or
mov
aas
fiaddl
decl
cmp
inc
xor
inc
mov
cmpsl
xor
sbb
stos
cmp
rorb
xchg
sub
std
ret
xor
xchg
dec
cltd
in
aaa
mov
aaa
dec
cmp
and
xor
psrld
out
pop
movsb
inc
and
call
sbb
nop
adc
mov
je
and
dec
rcr
fsubrs
push
mov
mov
cmp
fcom
and
jns
cmc
lret
decl
test
fdivrs
pop
push
pop
stos
clc
dec
dec
dec
shll
pop
sub
incl
dec
stos
mov
push
mov
inc
and
or
jecxz
and
lcall
cld
je
push
negl
inc
sub
mov
cmp
inc
hlt
inc
and
call
outsb
or
div
je
add
dec
xlat
mov
pop
cmp
xchg
fmull
test
in
movb
sbb
pop
int
and
cmpsb
push
dec
or
rol
or
pushf
fidivl
ss
or
outsb
xor
add
mov
das
hlt
sub
jp
addr16
inc
ficoms
call
mov
add
fwait
cmpsb
push
mov
ljmp
lods
lret
out
add
push
repnz
les
jmp
ljmp
cmc
pusha
mov
fs
or
hlt
stc
dec
clc
and
fists
dec
sbb
ffree
leave
or
push
dec
popf
pop
or
jg
sbb
add
rclb
xchg
push
fisubrl
push
stos
ror
je
cld
sub
jge
or
shlb
add
ja
ljmp
cmc
or
mov
mov
popf
popf
shr
cmp
clc
ljmp
ds
mov
adc
xchg
insl
pop
xor
cld
push
pop
mov
shlb
insl
push
decl
xchg
rcll
cmc
sahf
adc
es
or
fdiv
add
popa
mov
das
sbb
gs
mov
jmp
fsub
dec
add
cmp
jg
sbb
add
fiadds
mov
add
sarb
lock
ljmp
cmp
adc
das
or
repnz
push
addl
inc
cld
xchg
sub
bound
shll
push
pusha
in
xchg
insb
daa
inc
cmp
shrd
cmp
ss
jle
jecxz
pop
stos
jmp
aaa
fmul
xor
inc
lahf
cmp
popf
or
stos
sbb
cmp
xchg
cld
stos
mov
inc
das
add
push
mov
insb
clc
pop
notl
filds
cs
inc
jp
fisubs
cld
and
jg
ret
mov
sbb
sbb
sti
sub
mov
or
xchg
add
xor
ljmp
xchg
pop
cmp
in
addr16
add
push
fldenv
adc
lahf
nop
jge
popa
jmp
mov
cmp
mov
popf
cmpsl
rorb
xchg
push
inc
cltd
xlat
adc
test
leave
clc
mov
sub
sub
jge
sti
shl
sbb
lock
call
loope
sub
lahf
jnp
lods
fstpt
lods
pop
addr16
ficoml
or
dec
bound
cmp
call
mov
movsb
loopne
cmp
and
push
cwtl
jo
jne
and
sub
push
mov
push
mov
rcl
sahf
or
rorl
fildll
sub
sub
xchg
out
push
popf
inc
mov
dec
mov
xchg
mov
jecxz
popa
in
cmp
sbb
pop
mov
push
inc
outsb
or
je
fnstsw
fisttps
movsb
sti
and
push
xor
cmpsl
ds
mov
inc
and
ljmp
repz
add
mov
mov
movsb
in
shrl
fists
arpl
ret
or
pop
or
ret
sar
pushl
in
lcall
cmpsl
pop
jnp
ja
xor
lock
mov
inc
dec
ror
xchg
xchg
gs
xor
cmp
jno
mov
mov
cmp
out
and
add
push
repz
daa
lcall
imul
pop
pop
cmp
fwait
sbb
out
push
mov
push
decl
insl
mov
or
lock
add
rcrl
or
testb
mov
fisttpl
mov
in
mov
sub
pop
mov
sarb
out
pusha
stos
pushf
jb
call
cmp
cli
pusha
rcrb
xchg
lods
nop
arpl
dec
mov
xchg
xchg
leave
pop
enter
push
ljmp
bound
cmp
jecxz
std
aas
clc
or
sub
mov
popf
pop
mov
lahf
dec
jl
jge
jmp
cmp
mov
or
fldcw
lods
popa
sbb
pop
xchg
scas
fnsave
fucomip
incl
aam
aam
out
adc
pop
aas
push
and
sbb
push
inc
rorb
mov
mov
jb
mov
mov
mov
or
add
sarl
das
std
push
mov
xor
mov
inc
std
jp
sahf
lcall
adc
ss
or
lcall
cwtl
sub
sbb
loop
cmp
adc
pusha
dec
mov
filds
shrl
aaa
push
shll
decl
jmp
jbe
dec
inc
jbe
mov
aam
aas
pop
les
icebp
decl
and
inc
jmp
sbb
xchg
fldt
or
add
add
inc
add
std
aas
int3
inc
clc
pop
lods
notb
cmp
mov
jl
sbb
filds
fstps
dec
sub
xor
add
mov
sbb
idivb
movl
daa
xchg
test
cltd
leave
je
pushf
xchg
or
test
cltd
xchg
out
sub
cld
and
gs
nop
xor
in
sbb
push
mov
push
mov
jnp
pop
sub
jp
jg
iret
push
mov
sbb
fdivs
ror
push
add
pushl
incl
nop
ret
cmp
adc
inc
mov
xorb
jo
or
pushl
push
enter
jb
sub
push
sub
data16
incl
aad
sbb
sbb
or
adc
iret
fistps
lret
mov
jle
movsl
or
mov
mov
cs
inc
push
movsl
sar
fbld
inc
popa
ljmp
push
push
insl
loopne
inc
cmp
pop
lahf
xchg
push
sar
xchg
pop
inc
mov
test
les
shlb
jb
mov
popf
jp
int3
pop
adc
push
sub
ljmp
mov
jo
mov
mov
cs
dec
sar
call
jp
mov
testb
into
inc
xor
jmp
lcall
jb
and
sahf
jl
enter
cmpsb
fsubl
cmpsl
ja
mov
push
decl
imul
jne
mov
dec
loop
cmpsb
and
pop
push
add
sbb
mulb
or
adc
sbb
xchg
call
mov
pop
pop
mov
out
mov
jno
cmp
and
xorb
es
das
test
out
mov
daa
pop
aam
lds
inc
lcall
movsb
sub
sets
inc
inc
pop
cmp
bnd
cmp
fistps
inc
test
mov
in
mov
cmp
and
or
andnps
js
imul
jg
sub
pop
in
push
xchg
or
sub
xor
nop
mov
aad
jecxz
test
ss
in
repz
call
hlt
mov
mov
xchg
cli
in
out
mov
cld
mov
aad
cmp
mov
pop
pusha
dec
fcomi
add
ds
cmpsb
sarb
ljmp
push
push
repz
mov
jecxz
sbb
inc
pushl
cli
mov
addl
dec
sbb
mov
mov
mov
aas
xchg
movzbl
clc
incl
and
aas
jno
push
sbb
xlat
and
aad
aam
sub
jns
mov
lods
xchg
mov
loopne
loope
pop
push
jns
lcall
cli
cmp
mov
es
in
sbb
sub
sub
jp
call
shrl
cmpl
lret
or
inc
adc
stc
cmpsl
pop
es
call
lcall
sti
adc
mov
leave
pushf
lahf
pop
scas
fsts
jecxz
rol
cmpsb
int
inc
cs
sti
pushl
xchg
jbe
and
mov
push
repnz
add
add
jnp
dec
jle
mov
loopne
cmp
pop
cli
mov
adc
jmp
add
or
inc
xchg
push
imul
ds
xor
inc
pop
repz
test
clc
xor
mov
push
push
mulb
push
out
pop
pop
and
inc
or
dec
sarb
lcall
ret
ljmp
mov
mov
push
jno
cmp
xchg
cmp
ljmp
lock
adc
cld
leave
xor
or
nop
and
ljmp
pop
inc
cmp
inc
adc
fisubrl
test
push
cmpsl
lahf
lods
lcall
mov
arpl
jg
mov
pop
rorb
cs
aaa
and
lock
xor
mov
fdivrp
aam
in
enter
mov
stc
lret
lcall
adc
dec
mov
clc
mov
jne
sbb
in
pushf
lret
xchg
iret
sahf
test
inc
or
and
decl
or
inc
out
sarb
ljmp
ljmp
mov
and
adc
fcmovnb
dec
iret
or
push
loopne
xor
pushl
cmp
and
in
ljmp
shrb
out
cmc
and
xor
sbb
shlb
incb
or
push
pushl
cmp
pop
movb
rol
in
lcall
cmpsb
jmp
je
out
or
jecxz
mov
leave
push
movl
aam
and
mov
inc
aaa
pop
add
or
xchg
dec
or
ret
int
mov
cltd
loop
and
dec
shrb
imul
cmp
sbb
add
xorl
jge
or
stos
add
jne
mov
push
inc
movsl
adc
mov
ret
add
incl
jg
ljmp
lods
inc
lret
push
rcll
call
js
cmp
mov
out
mov
incl
decl
fwait
movsb
movsl
xchg
and
insb
aas
adc
and
cld
jmp
lahf
mov
jns
xchg
addr16
xchg
xchg
lahf
icebp
cmc
xchg
scas
or
test
pop
call
out
or
je
mov
inc
xor
push
clc
sub
or
sbb
cli
pushl
pop
shlb
dec
int3
clc
adc
adc
incb
insb
in
sbb
insl
jge
std
sbb
sbb
sub
sub
call
clc
out
popa
pop
pop
mov
fdivr
pop
mov
jge
shrl
or
ljmp
xor
mov
xchg
jne
sahf
dec
cmp
maxps
xchg
adc
pushl
outsl
fcmovu
pop
cmp
addl
mov
test
and
add
mov
fnstsw
call
mov
sbb
les
std
movsb
mov
mov
loope
loop
fwait
test
add
add
stc
mov
pop
xor
shlb
pop
ljmp
fs
adc
repnz
clc
cmp
sbb
xlat
sub
lcall
pop
js
sub
sbb
push
das
jno
incl
xchg
and
lods
lods
aad
outsb
and
ljmp
cld
jecxz
data16
es
inc
subl
call
or
jge
incl
cmp
shlb
mul
aad
xorl
inc
stos
xchg
xchg
je
in
sbb
js
fucomp
xchg
pop
cli
pushl
pop
in
js
sub
imul
fldenv
mov
movsl
mov
leave
mov
ljmp
adc
inc
sbb
aaa
orl
stc
ljmp
xchg
jmp
or
lret
cltd
push
inc
rcl
mov
imul
lcall
and
lret
mov
mov
fnsave
idivb
add
cltd
mov
movsb
cmp
and
jmp
jl
xchg
mov
or
cmp
fdivl
inc
jnp
cltd
das
add
hlt
inc
lcall
mov
test
mov
inc
jmp
arpl
push
mov
cmp
les
inc
mov
inc
xlat
je
in
push
inc
and
mov
shll
les
mov
pushl
jb
scas
sbb
push
adc
fwait
in
ret
sub
mov
mov
push
xchg
cmpsb
inc
xchg
and
jl
mov
pop
test
inc
sar
add
call
cmpsb
dec
imul
mov
mov
pop
cmp
and
push
xchg
jne
lds
jb
insl
lret
aam
pop
ljmp
cmc
jg
ds
inc
inc
iret
mov
mov
pushf
xchg
mov
call
int
push
sahf
xor
scas
lods
mov
push
jg
cmc
jno
push
popa
addr16
movsl
pop
cld
popl
jae
inc
testb
fadd
stos
std
pop
hlt
mov
jg
cmp
mov
fistpll
sbb
xchg
mov
incl
adc
fsubl
add
push
lret
popa
das
jnp
imul
mov
lds
aam
inc
push
mov
mov
in
cmp
add
arpl
fisttps
mov
mov
jb
lahf
test
sub
mov
ljmp
rolb
lret
mov
rcll
addl
jae
rclb
test
lcall
ja
sbbl
jb
push
jae
popa
ja
xchg
xchg
sti
push
rorb
cli
stc
aaa
insb
cld
pop
sti
mov
mov
sub
lds
outsb
cmpsb
push
das
add
dec
hlt
push
xor
movsl
lret
inc
cmp
loop
pop
mov
xor
decl
add
cmpsb
cli
or
jbe
icebp
or
ljmp
cld
mov
sub
mov
movsl
ret
mov
xchg
int3
jns
and
mov
cmc
and
pop
sub
pushl
jle
and
loop
jb,pt
cld
icebp
or
mov
xor
push
bound
and
in
xchg
outsb
ds
dec
pushf
jno
stos
ss
mov
incl
outsb
fdivp
repnz
out
lock
mov
dec
adc
xchg
clc
cmp
add
dec
or
jmp
add
mov
hlt
jg
stos
aas
ret
mov
addl
sti
mov
out
call
call
push
lahf
dec
ds
cmp
mov
and
jl
sub
jg
jmp
ja
push
add
sub
push
mov
fisttpll
leave
adc
cmpsb
pop
clc
in
ljmp
mov
dec
dec
or
jg
pushf
in
outsb
les
icebp
jmp
push
cmp
and
movsb
fcomip
push
jne
leave
adc
ljmp
push
jmp
cltd
pop
cmp
push
xor
leave
mov
jnp
scas
test
mov
jg
or
lahf
adc
cmp
sub
fwait
cli
stos
inc
sarl
jle
mov
mov
adc
dec
fs
imul
iret
sub
push
std
out
or
stos
ret
lcall
test
cld
addr16
pop
pushl
in
sarb
add
in
inc
mov
je
jg
pushl
mov
dec
mov
cmpsb
rorb
repnz
call
movsl
inc
sbb
adc
lods
imul
add
sbb
mov
add
xchg
sub
and
int3
test
fdivr
mov
mov
aaa
cld
jno
sbb
scas
cli
mov
ljmp
xchg
jo
aas
cs
decl
cwtl
lret
lods
jbe
xchg
ljmp
push
cli
push
jecxz
lea
mov
adc
cmp
insb
jl
pop
add
gs
call
pop
fwait
mov
push
test
cmp
push
dec
fs
arpl
aaa
hlt
loop
mov
je
pop
mov
xlat
sbb
sar
fistpll
mov
cmpsl
in
outsl
or
fistpl
add
jecxz
sahf
sub
and
lock
decl
cmp
pop
loopne
cltd
insb
jmp
fcmovb
ljmp
pop
sbbl
stos
and
adc
stc
add
pop
call
cli
loope
movsb
jg
stos
pop
shrl
cmp
in
mov
push
mov
dec
push
insl
jne
push
ljmp
shlb
lahf
jecxz
sub
aam
into
and
xor
outsl
mov
push
loope
mov
je
ja
les
das
test
mov
mov
or
dec
push
mov
pop
lret
jnp
sbb
fldcw
push
add
out
jno
fwait
cmp
call
enter
jb
scas
or
test
mov
das
or
lea
stos
fisubrl
push
pop
bound
jg
adc
pop
mov
pop
push
fstps
xchg
add
mov
inc
jns
aad
dec
jge
xchg
mov
adc
and
pop
and
dec
dec
rcrb
or
ljmp
mov
cwtl
fsubrs
cli
incl
les
les
add
test
icebp
cmp
cli
incl
and
aad
ret
pop
sarl
std
ljmp
sbb
shrb
cmp
hlt
sahf
adc
loope
cmp
decl
mov
xchg
jp
jno
fcmovne
mov
nop
sbb
cs
rolb
jmp
jb
mov
adc
popf
out
fidivs
xchg
outsb
pop
loopne
fisubrl
pop
int
jg
aad
icebp
pushl
in
out
cli
mov
xor
lods
and
rcll
clc
mov
push
jg
test
sti
std
xchg
cmpl
jbe
mov
clc
ljmp
or
dec
xchg
sbb
lcall
push
stc
lock
xlat
push
mov
sub
push
dec
add
inc
mov
int3
dec
in
mov
decl
jns
lret
ror
mov
pop
or
out
push
fstl
xchg
jg
ds
fldt
imul
fcoms
std
cli
dec
je,pt
hlt
outsl
ljmp
cmp
pop
jge
mov
jmp
repz
and
rclb
jns
sbb
dec
cmp
call
push
loopne
test
push
cltd
jno
dec
sbb
mov
stc
add
mov
sbb
inc
decl
add
add
push
test
cmpsb
or
push
aas
adc
idivb
dec
testl
enter
push
push
std
rcll
add
pop
ljmp
fld
cmp
jo
fstpt
sbb
mov
pushl
mov
stos
push
and
and
ds
push
jne
cmp
push
pop
jle
xor
lcall
jl
divl
andl
lcall
lods
idiv
lret
aaa
inc
aad
aaa
test
aas
arpl
lcall
outsl
rcrl
gs
add
adc
fcomip
cmpsl
sbb
mov
pop
mov
pop
std
mov
icebp
sbb
insb
andl
sbb
jno
inc
out
in
loop
xchg
push
xchg
sub
xlat
out
sbb
cmp
push
pushl
push
cmp
test
lods
xorl
or
adc
divb
or
inc
enter
pushl
cli
pop
push
xor
push
lret
ret
stc
jnp
pop
push
int3
daa
mov
call
fcoms
fcmovnbe
adc
fisubrl
mov
out
or
mov
call
ljmp
arpl
les
xchg
xor
nop
xchg
mull
ljmp
cltd
decb
das
rcll
sub
dec
loope
lods
popa
add
xlat
aas
bnd
jae
lock
fistps
xchg
push
filds
hlt
fmuls
cmc
decl
jle
dec
sub
xchg
jge
cltd
and
fsubrs
ljmp
movsl
daa
sti
aas
or
add
test
cli
push
mov
int
jg
lods
adc
sub
fnstenv
push
aam
adc
xchg
int3
popa
push
call
pop
ret
pop
and
sbb
push
jne
xor
pop
ljmp
push
dec
or
js
push
std
out
lds
jne
sub
mov
adcb
add
pop
jb
and
lcall
pushf
cs
xor
mov
adc
xor
test
aam
inc
in
sbb
aaa
clc
mov
es
inc
jne
xlat
pop
lcall
cld
xchg
aas
jno
xchg
call
imul
out
cmp
push
out
mov
mov
in
aaa
aad
das
fadd
jmp
and
push
lea
or
ljmp
jno
xchg
clc
imull
shrl
movsl
flds
push
dec
dec
pop
sbb
add
ljmp
mov
and
out
mov
push
addr16
icebp
push
mov
add
fnstenv
clc
pushl
aam
arpl
xor
mov
gs
aaa
and
inc
pop
cmc
lea
cld
mov
dec
jno
pop
jecxz
push
mov
mov
out
jl
xchg
pop
sar
aaa
cli
lcall
sbb
dec
add
data16
xchg
mov
cld
jg
ja
mov
add
mov
loop
incl
and
mov
push
inc
xchg
lea
inc
mov
and
mov
leave
sub
inc
movsl
push
enter
xor
fadds
imul
dec
push
jg
pushl
xchg
inc
add
in
lods
xor
jns
jo
repz
ret
xor
sarb
dec
jne
jecxz
cmp
pop
sub
jno
outsl
mov
xor
js
inc
add
scas
gs
pop
hlt
xor
ljmp
cld
outsl
inc
out
xor
ja
jne
xchg
sahf
pop
adc
cmp
or
mov
lcall
xor
shl
daa
rolb
sbb
inc
js
inc
and
incl
cmp
sbb
lock
cmpsl
setp
sbb
xor
je
std
ret
add
int3
sub
jns
push
xchg
in
aaa
pushl
push
pop
inc
sub
xchg
sub
ja
mov
and
out
into
mov
xchg
incl
mov
push
push
sub
sub
mov
mov
mov
bound
int3
shr
push
xchg
fildl
inc
sub
repnz
aam
jb
sbb
outsl
lock
decl
movsl
push
sub
mov
stc
je
les
sub
cld
or
dec
aam
mov
in
cwtl
int3
movsl
test
das
mov
inc
sbb
bound
in
pushl
mov
inc
inc
cmp
and
shl
dec
jg
dec
pop
jb
ss
roll
pop
insb
aas
out
adc
xchg
or
mov
call
shl
test
mov
mov
call
in
les
mov
inc
inc
adc
sub
fidivl
insl
sub
jb
ljmp
push
ds
pop
xchg
sub
in
movsl
cmc
rorl
xchg
pop
inc
das
and
fsubp
test
adc
lret
scas
jmp
daa
push
shlb
pop
sbb
adc
and
xchg
stos
mov
fnstsw
push
scas
repz
push
stos
sbb
push
in
mov
xchg
loopne
pop
ljmp
ret
push
push
ljmp
data16
aad
xor
incl
fisubrl
mov
int3
shlb
mov
aam
adc
icebp
in
lea
imul
ds
inc
aaa
xlat
call
stc
mov
hlt
fcoms
cmpsb
test
test
int
clc
cmc
push
out
cmp
jg
pop
mov
gs
sub
call
out
mov
mov
push
jle
xchg
cltd
dec
iret
fimuls
movswl
incl
out
idivl
aas
mov
cmp
mov
add
inc
mov
cmp
xlat
adc
add
jno
movsl
decl
inc
ljmp
aaa
fsubrp
or
mov
pop
or
or
fs
push
mov
das
fildll
xchg
and
out
ljmp
pusha
movb
out
mov
pop
push
sbb
sbb
clc
inc
push
test
mov
movsl
insl
jl
aaa
clc
ljmp
jp
fisttpl
jnp
jmp
or
pop
lcall
push
lcall
dec
or
enter
push
mov
xor
mov
cli
decl
xchg
cmc
cmpsb
jle
les
imul
sbb
or
mov
sbb
xor
clc
sbb
dec
movsl
sbb
fildll
xchg
cwtl
into
std
movsb
insl
mov
outsl
icebp
jg
cmp
pop
repz
cwtl
lahf
in
ret
dec
ret
sub
mov
ljmp
sti
subb
in
lret
ljmp
mov
or
clc
pop
sub
xor
mov
sbb
idivl
outsl
icebp
jns
cltd
cli
je
xchg
sbb
adc
and
clc
pop
cld
adc
fcoml
mov
stos
xor
adc
sub
loop
add
leave
mov
lock
lcall
mov
dec
xchg
in
lods
mov
xor
data16
jle
dec
pushf
nop
enter
lcall
or
mov
xorl
push
sti
push
mov
arpl
cltd
pop
or
mov
and
adc
sub
das
std
mov
cmp
pop
and
pop
jo
xchg
and
pop
push
cmc
nop
call
adc
dec
mov
cmpsb
nop
cmp
sbb
aad
ret
sar
sbb
je
daa
xchg
or
cld
decb
cmpsl
cltd
sar
ficoms
insb
inc
aas
mov
adc
adc
mov
xchg
push
cwtl
ljmp
dec
add
jle
add
mov
cmp
adc
sub
or
cmpsl
dec
add
xchg
fistpl
dec
sbb
pop
fidivl
test
sub
or
sbb
push
jo
and
sub
cmp
sub
jnp
out
mov
popf
pushl
jmp
mov
mov
mov
shrb
sti
dec
popf
ljmp
or
pushf
arpl
sti
popf
data16
inc
mov
incb
mov
shl
icebp
into
push
mov
aaa
push
scas
mov
stos
shrb
shll
dec
add
cmp
rcr
aad
xchg
mov
dec
jmp
incl
and
mov
dec
mov
rorb
daa
lock
notb
inc
shlb
cmc
stc
push
lret
pop
and
jg
int
xchg
popa
in
rcl
xor
call
pop
out
push
add
inc
push
push
pop
inc
or
xchg
and
icebp
lcall
dec
inc
jecxz
lahf
sub
pop
inc
pop
pop
jae
pop
pop
fsubl
pop
xchg
test
nop
test
sub
lea
cltd
push
in
stos
jl
mov
repz
faddl
std
jge
jae
icebp
js
daa
test
iret
xlat
pop
sti
lds
decl
pushf
cmp
in
jg
jb
fwait
mov
adc
inc
imul
pushl
jnp
push
ret
rclb
jecxz
cmp
add
fdivrp
pop
ljmp
jp
and
call
mov
shlb
xor
addr16
and
push
adc
icebp
cmpsl
cs
mov
dec
incl
stos
lret
lret
stos
jns
repnz
push
sar
cmp
jno
gs
pop
scas
fstpt
cld
push
aam
aaa
out
mov
cmc
mov
shlb
push
test
xor
mov
outsl
std
inc
stos
inc
in
cmc
cmc
cmpsb
ja
repz
pop
push
add
mov
xchg
cli
lcall
scas
jne
or
inc
sub
or
xor
and
mov
lods
lcall
or
ja
fistl
in
movsb
sbb
dec
out
sar
sbb
cmpb
ds
in
mov
into
xor
adc
mov
ljmp
lock
mov
pop
xchg
jmp
stc
inc
fisttpll
add
sub
incl
addb
xlat
gs
imul
sub
cltd
loopne
pop
dec
jg
jle
dec
jmp
mov
dec
out
stc
idivb
imul
stos
cld
fildll
cwtl
cmpb
outsb
aam
or
mov
mov
xchg
add
push
inc
mov
rol
mov
cmp
mov
or
inc
iret
and
loopne
dec
ret
jle
das
push
xchg
xchg
sbb
inc
cmpsb
iret
add
dec
pop
mov
stc
mov
decl
cvtpi2ps
pop
divb
jge
pop
mov
add
cmp
jne
xchg
std
ud0
cmc
bound
rcll
mov
mov
pushf
or
sahf
fiaddl
out
iret
call
in
mov
test
test
adc
inc
jg
mov
push
push
sbb
jo
out
loop
test
push
lods
add
jae
outsl
std
test
je
xchg
and
sbb
std
mov
pop
mov
int
popf
nop
ds
dec
ljmp
scas
push
mov
mov
jmp
fstpl
dec
sarb
mov
pop
pusha
add
out
xchg
pop
mov
int3
test
popf
movsb
clc
decl
xchg
cli
xor
sub
adc
adcl
jl
dec
push
negl
mov
inc
dec
pop
jge
loop
push
pop
out
lahf
pop
cltd
addr16
adc
sub
icebp
das
lock
lcall
in
and
movsl
xchg
sahf
add
pop
arpl
ficoms
aad
cli
dec
inc
nop
in
or
sti
jno
incl
adc
jno
repz
in
and
xor
lods
add
jmp
pushf
idivl
out
xor
sbb
inc
xchg
clc
call
cmp
mov
not
xchg
jecxz
div
xor
loop
lods
push
icebp
decl
arpl
je
outsb
cmpsb
mov
adc
xor
dec
addr16
arpl
mov
dec
inc
mov
fs
insl
dec
pop
adc
cwtl
inc
lcall
pushl
inc
sub
cmpsl
andb
inc
shlb
aas
cmp
sub
sub
inc
xchg
mov
push
test
movsb
jb
inc
sub
mov
cld
fcmovbe
dec
in
mov
lds
adc
ljmp
in
dec
xchg
jmp
or
dec
fwait
shlb
daa
nop
insb
dec
mov
loopne
inc
shlb
rorl
xor
lahf
jg
ja
sub
adc
nop
andl
adc
jmp
pushf
mov
or
icebp
rcll
dec
loopne
mov
pop
out
ljmp
aaa
incl
stos
jno
xchg
out
or
test
test
pop
sbb
pop
and
ds
jge
cmp
clc
xchg
clc
movsl
mov
push
pushf
xchg
xchg
and
call
cmpsl
cmp
add
mov
and
inc
decl
out
jmp
cmpsl
and
jae
pushf
push
or
loopne
pop
mov
xlat
ljmp
mov
xlat
cli
dec
inc
outsb
in
inc
fsub
push
xor
mov
cmpsb
adc
test
loopne
je
jp
movsb
xor
lcall
stos
movsb
jne
add
imul
cmp
outsl
mov
add
je
sti
decl
jmp
aad
shll
es
pop
inc
inc
sar
mov
mov
mov
outsb
insb
xor
mov
pusha
hlt
mov
mov
decl
sbb
or
bound
dec
fdivrl
dec
mov
jle
fstl
push
push
enter
mov
xor
fdivr
testb
jl
sub
push
add
lret
sahf
ljmp
mov
ljmp
mov
outsl
loopne
jecxz
sub
add
jns
cmpsl
jo
add
add
xchg
sub
push
inc
dec
test
das
call
dec
push
int
sbbl
aaa
pusha
repnz
cmp
call
mov
dec
fucomp
lret
and
incl
ljmp
sbb
mov
xchg
sbb
das
push
pop
rol
dec
mov
mov
or
out
incb
aam
jp
es
out
push
orl
inc
shr
je
fstl
adc
mov
das
notl
push
fisttpll
adc
push
pushf
add
add
clc
ljmp
in
lahf
mov
mov
jecxz
inc
mov
xchg
out
cld
dec
xor
cmp
popf
xchg
push
imul
mov
cld
xchg
ljmp
out
cmp
pop
jmp
vpmacsww
xchg
mov
jp
mov
cmp
mov
test
adc
sahf
pushl
mov
out
cmp
std
mov
cmp
xchg
sub
popa
inc
mov
mov
mov
jb
fisttps
jae
xchg
adc
inc
push
insl
add
push
into
pop
jecxz
inc
adc
inc
pop
or
push
bound
dec
dec
test
sahf
mov
scas
clc
insl
stos
xchg
das
andb
xchg
jne
fsubrs
jns
pop
outsl
pop
mov
jne
cli
xor
mov
add
and
pushf
and
sub
dec
mov
ljmp
lret
pop
mov
xor
mov
enter
mov
sub
xor
mov
jns
pop
adc
lock
ljmp
shlb
pop
cli
sti
lods
mov
sbb
push
mov
ljmp
sub
cmpl
loop
cmp
pop
mov
sar
cmp
pushl
pop
mov
je
cmp
out
jbe
sbb
ja
popf
cli
gs
add
pop
jae
out
mov
and
add
jmp
fldl
add
loope
stc
add
hlt
call
mov
add
mov
fs
subl
aaa
clc
mov
test
xlat
add
movsb
dec
adc
test
jl
dec
insl
ja
decl
inc
mov
mov
inc
sub
jp
sbb
jmp
sub
mov
mov
es
mov
xor
ja
call
insl
rolb
fwait
jge,pt
nop
loope
add
and
and
sar
jg
push
jne
aaa
daa
inc
pop
in
mov
jo
jg
dec
xorb
les
aas
rol
mov
dec
out
dec
mov
adc
jl
mov
sbb
imul
dec
dec
mov
cmc
adc
xchg
adc
add
mov
lock
jg
loop
into
add
shll
push
dec
dec
dec
cmc
jns
xor
pushl
fsubp
and
mov
add
daa
loope
xchg
dec
sbb
call
in
icebp
add
cmpsl
inc
ror
in
jb
push
popa
incl
cmp
sbb
sbb
cmp
push
push
jp
inc
daa
stos
add
sub
pop
mov
decl
call
mov
sarb
fidivrl
fmulp
mov
ja
fisubrl
cmpsl
popf
cmp
pop
dec
imul
ljmp
jae
mov
repnz
loop
fistpll
test
jg
push
movsl
push
or
popa
jge
adc
ljmp
xchg
lret
test
test
inc
sahf
out
push
pop
xlat
out
xor
or
std
sarl
out
jle
sub
cmp
mov
or
repnz
dec
xchg
mov
inc
sub
pushl
decl
aam
add
out
pop
vcmpss
mov
ret
add
call
push
into
push
sbb
bound
pop
lcall
mov
in
lret
mov
mov
dec
test
repnz
ljmp
mov
pop
fldenv
xchg
gs
or
roll
ljmp
insl
std
gs
aam
add
hlt
inc
int3
lahf
jnp
sbb
jp
movsb
bound
mov
dec
dec
scas
dec
loop
movsl
call
xor
scas
mull
fwait
push
std
nop
fildll
xchg
repz
sbb
pop
dec
push
mov
insb
dec
push
dec
adc
ja
dec
loopne
mov
add
or
mov
push
dec
and
shrb
loope
test
popa
sub
aaa
add
cmc
cld
or
aas
inc
sub
popf
ja
cmp
scas
popa
iret
pop
das
sub
les
inc
jo
gs
xchg
jg
rcrl
mov
inc
fucomp
push
cmp
add
cmc
push
add
stos
inc
fildll
adc
adc
subl
jmp
clc
pop
ljmp
or
test
ja
and
fildll
cmp
jno
push
loop
pop
movlps
cmp
call
xor
and
shlb
or
xor
incl
adc
fs
or
mov
jl
mov
xchg
mov
inc
outsb
push
xchg
cmp
ljmp
dec
push
js
pop
sbb
sub
loop
ret
jp
mov
cmc
shrl
decl
pop
fildll
mov
aad
jns
add
notb
xchg
push
cli
inc
cmp
subl
addl
lret
inc
inc
mov
out
inc
into
in
push
sbb
imul
mov
scas
sub
pushl
push
sbb
pop
cmp
sbb
dec
adc
sub
xchg
lcall
cmp
adc
fs
cs
sub
test
decl
pushl
insb
pop
lock
iret
pop
cltd
mov
mov
adc
mov
fisubs
or
jmp
popa
fs
or
xor
push
cltd
push
lcall
ret
lcall
jb
pop
jbe
mov
jae
dec
pusha
std
fdivrl
std
insl
in
in
xchg
dec
clc
dec
incl
adc
push
dec
inc
sbb
sti
xchg
xor
decl
mov
jo
test
sbb
out
xchg
data16
jle
lret
shrl
pop
inc
jg
mov
stos
cmpsb
mov
jb
sbb
and
push
call
call
adc
aad
in
aaa
pop
stos
mov
movsl
mov
jp
dec
ficompl
gs
dec
mov
fcompl
mov
xlat
xor
lcall
mov
movsb
insb
and
mov
adc
sub
inc
push
das
out
jnp
dec
pop
adc
ljmp
fnstsw
pop
ljmp
adc
jne
ds
push
sub
mov
outsl
mov
xchg
add
push
pop
ror
aas
jno
dec
dec
aam
ljmp
cmp
cmp
mov
adc
pusha
add
sub
clc
imul
aas
pop
stos
jecxz
push
in
outsl
jge
dec
cmp
sbb
arpl
and
dec
ljmp
es
pusha
jl
stos
jne
xor
mov
mov
lea
pop
inc
lods
das
mov
mov
xchg
and
and
pop
jmp
sarb
cmp
cld
test
out
incl
or
xchg
mov
movsl
in
jle
add
inc
cmp
push
jecxz
mov
mov
dec
inc
arpl
sahf
cmp
incl
daa
dec
int
push
jns
lret
adc
sbb
idivl
divl
das
push
loop
mov
rclb
les
clc
lcall
mov
mov
mov
inc
clc
sbb
mov
mov
ljmp
and
mov
xchg
mov
mov
push
dec
orb
mov
cmp
jl
movsb
ljmp
loop
decl
fneni(8087
sbb
push
enter
pop
push
popa
in
repz
clc
push
mov
dec
mov
push
jo
loopne
sti
mov
jmp
cld
and
push
test
sarb
pop
rolb
sbb
xchg
shl
pop
sub
xchg
lods
dec
fwait
sub
aaa
push
pop
add
outsl
aam
rolb
test
mov
out
ljmp
out
lret
bound
imul
and
std
incl
pop
pop
xor
push
cli
push
insb
mov
cmc
inc
mov
cmpb
cltd
jno
cwtl
sbb
das
nop
jb
rorl
decl
cld
das
xor
test
in
mov
xchg
lds
mov
call
push
jecxz
ret
stc
sbb
outsl
cld
lcall
jp
dec
and
out
insl
sub
xorb
cmp
add
and
jae
faddp
rcrb
daa
xchg
ret
fstps
cmc
lods
or
in
cli
mov
xchg
es
dec
test
call
data16
js
and
pop
lahf
in
xor
in
aad
stos
lds
incl
cmp
ja
cmovne
adc
mov
pushf
repnz
stc
cmp
xor
jne
xchg
add
jmp
leave
push
mov
ljmp
lock
das
push
sbb
mov
imul
push
jge
and
decl
pop
clc
or
adc
popf
xchg
pop
cmp
divl
das
rolb
sarl
cmpsl
inc
dec
arpl
xchg
cli
fisttps
icebp
sti
lods
stos
mov
jns
aad
xchg
xor
push
sbb
sbb
or
loop
popf
popf
sub
decl
jecxz
add
dec
mov
jg
adc
in
fmull
sarl
icebp
dec
xor
jg
cmc
jb
repz
push
in
fnsave
mov
outsl
aam
mov
sub
xchg
add
out
dec
inc
std
jo
ljmp
dec
xchg
aas
outsl
adc
push
jns
incl
mov
or
xchg
lret
add
div
sub
jmp
ret
scas
mov
pop
jl
ret
mov
in
lcall
test
lods
insl
dec
in
popf
mov
je
mov
cmp
jnp
and
ret
cs
pop
arpl
dec
mov
pop
ss
xchg
jmp
loope
orb
pop
add
ljmp
inc
dec
or
iret
xor
enter
sarl
jb
sti
test
cli
jae
mov
repnz
push
pushl
jg
and
mov
adc
test
loopne
sbb
add
ljmp
cmc
stc
aam
aaa
jge
shl
fwait
mov
mov
xchg
mov
ud0
or
mov
jae
xchg
mov
push
add
or
pop
mov
xchg
shll
jo
ret
shl
push
push
push
test
push
clc
out
popa
ds
repnz
sub
jo
add
and
inc
inc
cli
idiv
jmp
sbb
add
mov
xchg
orl
test
arpl
pusha
das
push
pushl
inc
cmp
pop
pop
mov
cs
ljmp
neg
or
flds
push
mov
or
arpl
stos
sar
insl
xchg
inc
mov
mov
shl
xchg
mov
fcomip
fs
sub
insb
nop
or
inc
testl
mov
test
or
mov
pushf
arpl
sub
inc
je
aas
mov
in
dec
ja
mov
jo
xor
in
adcb
and
xor
js
lods
xor
push
popa
dec
movsl
dec
sub
jmp
scas
gs
hlt
xor
mov
inc
nop
popa
mov
add
dec
scas
outsl
cwtl
add
jnp
mov
push
fcmovu
data16
pushf
push
out
xor
push
aad
data16
cld
fildll
or
mov
stos
arpl
sti
xor
lret
mov
mov
fiaddl
sbb
mov
test
xchg
pusha
scas
call
movb
cli
lea
pop
inc
scas
and
inc
hlt
addr16
rorl
push
out
cmc
ret
mov
xchg
cmpsl
arpl
mov
ret
add
pop
add
and
std
xorb
push
inc
pop
jbe
ljmp
scas
ret
jle
add
jge
jecxz
mov
je
cmp
out
push
add
xchg
decb
pop
xchg
ds
inc
and
lock
dec
mov
inc
lea
mov
movsb
int
lret
fisubl
rclb
test
mov
loop
je
fidivrs
xorl
push
call
imul
mov
stos
mov
xchg
int
sub
push
sub
pushf
push
and
push
cld
lcall
inc
ret
jo
popl
int
rcrb
jmp
lock
sub
mov
sarb
cmpsl
mov
mov
mov
hlt
aas
insb
lock
ja
cli
stos
inc
sbb
decl
pop
and
and
in
add
pop
push
or
jg
arpl
je
push
int3
mov
loop
ret
loope
jo
cwtl
mov
fisttps
xchg
inc
mov
sbb
jle
fisttpl
cmp
jg
push
loopne
lahf
lahf
ret
leave
and
cmp
incl
mov
sbb
imul
setne
xchg
add
or
pop
or
lods
mov
stc
pextrw
xor
mov
inc
cmpsb
and
mov
fsubl
jp
out
push
xchg
dec
jae
mov
mov
jp
sahf
push
sub
cmp
addr16
decl
flds
xchg
jle
cli
adcl
enter
mov
cmovnp
aad
mov
cs
test
mov
into
jno
cmp
and
inc
std
inc
or
dec
iret
std
sarb
xor
ret
or
push
imul
jno
sub
sbb
sar
ljmp
add
aam
pop
popf
inc
jno
scas
out
icebp
fisttps
fwait
ljmp
call
xor
dec
mov
sbb
cmp
out
rcr
jne
adcl
pop
loop
icebp
movsb
popa
adc
subl
mov
jp
nop
popf
inc
adc
jg
icebp
or
js
out
and
lcall
daa
hlt
and
or
fs
pusha
shll
adc
jmp
pop
daa
add
adc
inc
incl
mov
adc
icebp
clc
cmp
call
xor
aam
push
adc
or
ljmp
or
sbb
push
mov
mov
jno
jecxz
popa
ja
mov
into
icebp
mov
outsl
ljmp
xorl
aad
fldt
cmc
jmp
std
ds
imul
mov
pop
nop
lret
fistpll
cmpsb
pushl
jp
js
nop
add
lret
push
adcl
mov
mov
dec
loopne
mov
add
adc
dec
daa
js
gs
adc
pop
out
push
mov
outsb
mov
push
mov
xchg
lds
mov
sbb
cltd
enter
test
ficoml
fs
jae
lcall
dec
lahf
jge
mov
std
movups
xor
sahf
xor
push
or
test
add
dec
mov
inc
mov
in
outsl
push
insb
lea
or
mov
insl
xlat
jbe
mov
inc
mov
popf
mov
out
xlat
xchg
fcmovbe
mov
pushl
cltd
pop
inc
push
dec
or
data16
jno
pop
jle
popa
add
decl
xchg
push
fwait
mov
sti
mov
sbb
repz
cli
das
inc
fidivl
and
ja
jnp
add
mov
testb
out
lahf
xchg
out
pop
lret
call
clc
lods
pop
jg
jmp
push
sahf
sti
adc
jg
mov
mov
ss
faddp
mov
sbb
sbb
stc
incl
repz
lds
lds
lret
popa
and
fcomi
sub
stc
cmp
jmp
sbb
pop
sbb
mov
lcall
fwait
push
xchg
outsl
lods
dec
lods
je
pop
call
stos
test
pop
outsl
cld
pop
call
cwtl
jp
jne
enter
pushl
sub
fwait
je
push
xor
rolb
or
sti
dec
or
jg
ljmp
jle
ret
mov
orb
stos
outsl
std
pushl
or
sub
sbb
std
mov
jg
inc
push
test
mov
int3
loope
add
xchg
lret
xchg
std
xchg
lret
mov
fisttps
mov
xchg
shl
mov
mov
nop
flds
push
into
jmp
outsl
std
or
nop
pop
xchg
ss
out
mov
loope
fs
loop
xor
ret
jae
jecxz
push
push
jg
jb
xchg
sti
das
adc
daa
jecxz
lret
cld
into
cld
outsl
std
jmp
daa
bound
add
xor
adc
jns
pop
lds
cmp
and
mov
nop
test
sarl
mov
iret
insl
imul
sbb
out
and
dec
push
push
adc
inc
add
lcall
std
popf
jmp
xchg
mov
add
pushf
mov
push
add
xor
cmp
loope
mov
das
into
insl
mov
pushl
push
loop
sub
mov
stc
mov
push
ret
or
jns
call
jmp
repnz
xchg
mov
mov
mov
cltd
pop
inc
icebp
ljmp
lock
insl
xor
roll
mov
sub
incl
xchg
push
mov
sub
es
je
ljmp
outsb
pop
das
inc
out
or
imul
cwtl
insb
cmp
aam
cmp
call
sub
xchg
adc
xor
pushf
push
cltd
loopne
ret
add
adc
jmp
jg
repz
jne
les
xchg
int3
jnp
cmp
jg
inc
or
xchg
inc
jae
mov
lds
insl
je
mov
insb
fstpl
xor
btrl
push
daa
mov
je
filds
pop
in
add
enter
cwtl
vmovdqa
bound
daa
stos
push
call
sti
fiaddl
call
sbb
jg
ret
or
push
inc
push
cmp
and
incl
dec
ljmp
mov
cmp
enter
mov
rorl
ljmp
lods
jne
xor
aad
or
pushf
insl
es
mov
in
dec
inc
idiv
call
bound
imul
aaa
mov
push
mov
add
loopne
jp
push
jle
lds
test
push
sbb
xchg
add
stc
push
cmp
imul
jg
rcrl
fisubrl
xchg
mov
shrb
jl
scas
push
mov
mov
mov
ss
inc
mov
inc
or
fistps
movsl
sbb
jmp
fsubl
and
mov
decl
mov
sub
mov
out
imul
cli
inc
mov
mov
cmp
or
jbe
push
mov
xchg
outsl
in
push
jp
imul
pop
xor
mov
jg
ljmp
or
xor
push
xor
or
std
adc
ja
sarb
sahf
aas
out
mov
ljmp
xchg
or
aad
lods
rorl
lods
fisubs
add
lret
mov
jmp
cmpsb
cld
mov
fistl
fs
andl
cmovl
cmpl
xor
push
ljmp
ss
incb
daa
inc
lcall
les
jmp
jmp
pop
adc
sahf
enter
idiv
faddl
jg
imul
push
cwtl
sbb
cmp
jne
sahf
mov
adc
outsl
or
daa
xchg
inc
or
push
movsb
in
lods
das
pop
arpl
mov
mov
lcall
or
repnz
sbb
adc
or
inc
shlb
cmp
push
lods
decb
dec
jle
push
mov
jb
jno
sarl
mov
dec
cs
sub
out
push
fmull
decl
add
dec
lea
jg
iret
push
mov
sub
loop
lcall
add
stos
int
xchg
xor
mov
xchg
cmp
cmp
mov
pop
mov
ja
bound
or
xor
hlt
adc
lcall
stc
mov
jb
mov
jne
jl
cmp
mov
cli
push
mov
stos
loope
xor
dec
dec
out
adc
pop
jne
in
mov
mov
push
mov
xchg
cli
clc
insb
aam
xor
incl
xchg
mov
lods
ljmp
adc
in
pop
pop
adcl
enter
inc
xchg
insb
test
mov
fdiv
cli
mov
push
inc
lret
js
push
mov
and
fstps
add
das
jns
idivl
push
test
jbe
icebp
ljmp
jbe
scas
jl
adc
jp
jle
mov
mov
incl
outsl
adcb
sub
sbb
mov
jle
push
pop
xchg
icebp
cmp
ret
imul
mov
inc
sbb
fs
mov
icebp
fildll
push
dec
loop
inc
and
push
pop
cli
ljmp
int
cld
shr
das
xchg
ret
int
popa
xchg
imul
mov
das
sar
jmp
push
xchg
jb
daa
mov
mov
hlt
cmp
loope
pop
and
jo
sar
jp
popf
push
mov
adc
ror
fwait
arpl
or
clc
imul
pop
pop
dec
cmp
call
loopne
or
cmp
movb
add
inc
aam
mov
or
jl
lret
das
or
clc
jg
cmpb
sub
mov
mov
scas
jmp
and
movsb
add
jnp
mov
imul
xor
or
jns
jecxz
lds
lods
cld
jp
decl
aaa
out
or
inc
dec
push
movsb
adc
sub
sub
fucomip
and
test
lock
inc
push
das
cmp
jg
incl
inc
leave
popl
push
loop
jmp
ret
sub
lea
sub
sbb
xchg
inc
xchg
daa
adc
dec
pop
mov
mov
pop
jge
frstor
mov
pop
and
jne
push
mov
lcall
jmp
gs
and
jg
mov
push
in
jl
and
push
cld
repnz
dec
and
push
rcrb
jge
mov
lcall
mov
adc
xchg
push
mov
and
lods
sti
test
jno
mov
cld
mov
sarl
lods
push
test
insl
int3
cmp
inc
cmc
adc
call
and
fdivrl
fucom
popf
out
cmp
xchg
out
lret
or
add
sbb
imul
mov
jno
jbe
dec
ljmp
idiv
lcall
call
jbe
xor
aad
pop
mov
into
cmp
incl
or
imul
adc
inc
jmp
sbb
cmp
icebp
fucomip
shrb
stos
pushf
mov
dec
roll
mov
dec
dec
mov
jo
dec
jmp
insb
ficoms
out
xor
stos
sub
jmp
pusha
cmp
and
dec
fadd
push
scas
mov
pop
push
sarl
pop
xchg
ljmp
xchg
hlt
push
test
mov
jmp
mov
inc
push
dec
sar
leave
and
movsl
xchg
mov
and
xor
hlt
pop
arpl
inc
daa
loopne
push
push
lahf
jae
lcall
and
jl
and
cmpb
pop
add
std
aaa
clc
add
sbb
movsl
insl
sarb
push
jbe
push
mov
mov
and
jge
sub
std
push
cwtd
adc
pop
stos
lret
adc
les
call
repz
in
pop
out
or
inc
scas
aam
xchg
or
pop
push
pusha
adc
xchg
adc
lcall
shl
xchg
inc
dec
sub
cltd
xchg
dec
insb
mov
push
insb
gs
cmp
aam
dec
daa
in
cmpsb
mov
mov
inc
test
fbstp
mov
das
in
out
mov
sbb
mov
xor
or
ss
cli
pushl
push
mov
call
pop
aaa
jge
cld
jg
mov
scas
movsb
add
ds
and
sbb
call
das
pop
subl
inc
pop
or
xchg
push
call
fiaddl
sub
or
adc
jmp
adc
pop
mov
stos
rcr
sbb
add
adc
lock
jl
roll
out
call
fsubrs
xchg
xchg
pop
call
inc
pusha
testb
and
jg
decl
xchg
lock
adc
or
add
dec
ds
pop
test
ljmp
xor
lods
pop
xchg
in
out
dec
pop
in
dec
bound
push
inc
push
push
cmc
iret
pop
or
int
push
das
lock
into
outsl
push
mov
mov
call
enter
loop
add
mov
add
outsb
rcrl
movsl
pop
mov
push
std
aaa
cs
add
sub
in
clc
in
loopne
ljmp
xchg
or
push
rcrl
ljmp
movsb
mov
movsl
jle
iret
mov
or
inc
stos
xor
mov
xchg
adc
jp
decl
loopne
arpl
or
add
fiadds
mov
and
dec
or
or
mov
xchg
in
or
add
inc
pop
and
cli
mov
mov
jl
adc
or
setl
or
bound
das
mov
sub
stc
cmp
ss
pop
adc
cmp
pop
or
daa
inc
xor
jb
cmpsl
mov
adc
shlb
xchg
mov
pop
push
mov
cli
adc
jg
mov
loope
incl
rcrb
inc
push
es
das
xchg
dec
mov
push
jmp
decl
lret
push
inc
xchg
out
dec
push
out
jnp
mov
mov
movsl
mov
scas
cmpsb
ret
out
dec
xchg
lcall
decl
lds
stos
sub
jnp
sub
add
ja
jmp
test
jbe
dec
push
repz
in
fwait
inc
lods
jp
repz
lcall
je
lret
jmp
jns
imul
jae
push
jns
mov
inc
das
aad
pop
sbbl
pop
inc
ljmp
push
pushf
push
push
clc
dec
push
mov
jae
mov
mov
insb
je
inc
mov
or
test
mov
lcall
dec
lods
sbb
push
push
and
ds
mov
jo
pop
in
jp
jl
sar
jle
cmp
cld
adc
xchg
loope
icebp
xchg
mov
push
mov
jae
xchg
pop
out
cmp
push
push
or
mov
sbb
cs
jecxz
xor
ds
jbe
dec
xchg
div
and
ficompl
pusha
shl
ret
call
xchg
pop
lret
jl
sub
lcall
jne
mov
inc
push
sbb
call
inc
pop
push
dec
and
or
push
mov
jae
loopne
popa
inc
xor
test
repnz
cmp
lcall
inc
adc
dec
hlt
adc
and
insb
icebp
loope
dec
fidivrl
lock
lahf
lret
push
xor
daa
add
or
cli
mov
adc
inc
movsl
cmp
rol
sbb
addr16
fnsave
outsl
add
stos
dec
mov
outsb
loop
cwtl
addr16
xor
jg
jo
lahf
fwait
loopne
cmpsl
cld
xchg
adc
push
pop
shll
hlt
inc
int
out
inc
test
ret
aaa
leave
shrb
hlt
ljmp
xchg
cmp
sub
mov
push
outsl
lock
mov
ffree
stos
xor
or
clc
push
leave
or
inc
xchg
jo
fdivr
pop
cli
outsl
add
sub
mov
push
adc
mov
inc
repz
movsb
arpl
stos
or
inc
into
lcall
and
decl
add
je
out
jecxz
pop
ljmp
pop
movsl
fmulp
jg
ljmp
aad
or
popf
repz
push
mov
adc
add
ror
je
mov
fcoms
xor
lock
jg
lahf
adc
jmp
out
je
push
fs
push
xchg
loopne
sbb
insl
outsl
out
sti
lret
push
jmp
dec
xchg
xchg
sahf
outsl
aas
add
or
inc
mov
pusha
dec
icebp
dec
iret
push
js
psubusw
scas
mov
das
push
mov
outsb
cli
rcr
or
add
jg
xor
and
adc
outsl
sub
jle
add
cmc
pushl
pop
rorl
out
les
das
ds
ljmp
arpl
fnstsw
es
push
push
jge
rcrb
mov
ljmp
dec
aad
repz
mov
or
adc
cmp
mov
mov
cli
xchg
cmp
insl
xor
and
inc
stc
and
xor
mov
cmpb
sbb
sahf
pop
nop
dec
cld
ljmp
shl
insl
fldenv
out
dec
test
mov
push
and
cmp
mov
jmpw
jmp
inc
sahf
lret
movsl
sub
bound
lcall
pushl
push
cmp
test
test
pop
aas
or
cs
dec
idivb
pop
ljmp
loope
subb
cmp
and
cmp
cmovs
lahf
jns
pop
cmc
lcall
mull
add
xchg
stc
je
mov
cmp
mov
xchg
mov
or
mov
js
dec
mov
mov
lea
or
repz
call
push
mov
dec
addb
adc
daa
in
push
mov
es
aad
lahf
clc
idiv
aas
imul
jg
fistpll
add
andb
fnstsw
call
sub
cmpsl
fisubs
lcall
inc
mov
jno
je
xchg
icebp
popf
xor
daa
fisubrs
pop
das
add
ds
mov
jecxz
movsb
ja
aaa
jle
pop
clc
jl
fadds
mov
fistl
mov
xchg
inc
xlat
leave
adc
loop
jg
imul
pusha
xchg
sbb
and
lret
jl
cli
out
daa
xchg
ret
rcl
cli
mov
aas
mov
incl
je
jns
movsb
aas
lods
mov
lock
adc
adc
or
sub
cmp
pushf
push
pop
dec
hlt
mov
fs
clc
cmp
push
loop
ret
mov
in
mov
jg
push
incb
shl
jge
and
inc
xchg
and
insl
jns
jmp
inc
or
lods
mov
imul
dec
xchg
and
insb
mov
jno
cmp
push
xchg
cs
mov
dec
sti
jl
ja
iret
in
lock
pop
mov
mov
popf
hlt
jmp
hlt
mov
lret
call
incl
xor
sub
jmp
pushf
idivl
xor
mov
ss
sub
ret
hlt
or
adc
pusha
dec
addr16
cmp
in
fwait
negb
jmp
jmp
or
pop
ret
stos
outsb
fnstsw
push
pop
add
div
inc
mov
out
cmp
or
ljmp
xchg
jmp
rol
stc
rep
cmp
cmc
jb
fstpl
mov
lret
ja
cltd
pop
sub
ljmp
jae
cmp
dec
shl
roll
ja
insb
mov
dec
inc
clc
test
call
or
sbb
add
in
incl
pushl
push
dec
xchg
subb
mov
mov
hlt
cs
je
call
add
xorl
pop
in
pushl
sbb
adc
or
mov
jno
cmp
sbb
sahf
test
mov
xchg
inc
test
mov
daa
and
mov
jecxz
vcvtdq2pd
clc
pop
add
pushl
adc
enter
pushf
xchg
fildll
icebp
xchg
jl
into
adc
xor
loope
mov
dec
mov
mov
out
cmpsb
rorb
dec
repz
cwtl
rorl
imul
mov
xchg
fisttpl
add
shrb
lea
inc
xchg
mov
xchg
mov
mov
in
lods
adc
mov
inc
inc
cli
insb
fnstenv
lock
incl
inc
sbb
mov
add
cmc
ljmp
jp
stos
and
sti
sbb
or
mov
push
mov
or
xchg
loope
cmp
punpcklwd
mov
sub
xchg
pop
inc
call
pop
push
scas
fnsave
xchg
scas
mov
cmpsl
je
xchg
bound
jecxz
jle
pop
push
icebp
add
cli
xor
push
xchg
jbe
mov
imul
dec
mov
dec
mov
add
xchg
ljmp
push
mov
jg
das
or
mov
mov
jge
insl
loopne
nop
fdiv
xchg
in
lcall
addl
test
repnz
xchg
sbb
int
les
subl
sbb
mov
add
cltd
jnp
sbb
inc
add
aam
jg
pop
jl
xor
cltd
pushf
fisttpll
add
cld
stc
and
arpl
clc
pop
inc
idiv
add
or
dec
rclb
aas
jle
into
fcmovb
mov
mov
ret
mov
es
dec
inc
xchg
leave
sbb
inc
mov
stos
sti
pop
xchg
inc
cmpsl
fmull
ret
movsl
jno
inc
adc
out
push
inc
scas
popf
pop
mov
mov
mov
test
and
push
mov
inc
add
add
dec
les
pop
sbb
jl
addr16
cmpsl
in
decl
jb
jp
mov
inc
icebp
mov
mov
mov
pushl
hlt
lods
mov
inc
je
push
cwtl
push
mov
mov
mov
stc
or
pop
insl
movsb
push
cmp
ja
fucomip
jmp
mov
sub
push
mov
call
mov
test
sub
int
popf
adc
jmp
push
iret
js
sbb
pushl
lret
or
in
jge
out
pop
mov
pop
or
leave
rcll
mov
mov
addr16
icebp
mov
ficomps
inc
push
mov
and
push
push
insl
enter
pop
inc
xchg
test
outsl
sbb
bound
add
push
test
decl
sahf
dec
mov
outsl
leave
or
pop
imul
push
pop
jl
inc
pushl
fildll
adcb
insb
and
fsub
sub
xchg
fistps
aam
pop
cld
movsl
add
pop
mov
adc
cmpsb
pop
push
cmc
call
fdivrl
and
xchg
out
pushl
adc
dec
cmp
lcall
faddl
jbe
stos
ljmp
lock
jp
mov
int3
cld
outsl
mov
fiadds
add
cmc
inc
aad
cmc
and
popa
pop
ljmp
loope
xor
jnp
pop
popa
inc
jp
cli
lea
jmp
sysexit
xchg
lods
std
cmpsb
mov
cmp
lcall
sub
jno
jle
popf
xchg
jecxz
js
dec
xchg
mov
fcompl
cs
lret
or
mov
incb
ret
sbb
loop
js
mov
cli
mov
test
out
hlt
ret
sbb
adc
pushl
xlat
mov
das
lcall
into
jg
ss
movsl
cwtl
fidivrs
push
imul
aad
mov
lods
push
fisttps
sub
mov
clc
lods
inc
leave
pushl
mov
push
pop
jmp
xchg
inc
xchg
push
fcmovb
cmp
xor
lret
inc
mov
lock
jae
jo
test
sub
pop
sti
lcall
in
mov
mov
adc
gs
mov
scas
push
pop
mov
pop
inc
cmp
test
rcl
test
aad
inc
fistps
hlt
popf
addb
stos
dec
jl
test
jg
mov
pop
orl
nop
call
jmp
outsl
or
or
xor
pop
dec
xchg
clc
ljmp
push
imull
sub
mov
addr16
jg
incl
mov
jns
jno
jge
mov
or
push
movsb
loop
mov
lcall
lcall
xchg
or
outsl
push
bound
sahf
lods
push
std
pusha
pop
cmp
loope
push
dec
or
jg
shl
pop
pop
sbb
fs
mov
dec
ljmp
incl
and
in
inc
popa
jmp
mov
icebp
and
sbb
mov
lcall
push
or
mov
lock
jecxz
xchg
shlb
jecxz
frstor
int
sbb
lcall
and
addr16
std
in
cmp
mov
lea
out
ljmp
andl
shll
fmull
pushf
sub
ret
incl
sbb
xchg
mov
cs
push
shlb
mov
fsts
pop
incl
sbb
in
dec
sub
adc
ficomps
push
mov
xchg
cld
ljmp
inc
or
lds
xchg
mov
adc
mov
sub
adc
sub
addr16
pop
jg
decl
fdivrs
hlt
ror
xor
xchg
test
imul
gs
shr
push
aas
ret
mov
add
or
xor
mov
xchg
cmp
andb
lds
loope
mov
inc
adc
cmp
mov
fs
jg
outsl
fwait
push
inc
rcr
mov
negb
je
push
popf
mov
pushl
jne
test
or
mov
scas
cld
aad
outsb
inc
push
xchg
lcall
call
cli
jg
adc
adc
popf
fwait
dec
add
and
pop
into
push
ret
lcall
ret
or
pop
push
xchg
fnstsw
jnp
pop
stos
movb
sub
jmp
inc
lcall
add
mov
push
push
into
mov
mov
std
iret
add
pop
jmp
rclb
hlt
call
adcb
sbb
sti
out
out
ja
xor
imul
adc
fcomps
adc
jg
fbld
cltd
fimuls
pop
sbb
add
mov
jg
aas
add
ljmp
fsubrs
cmp
push
sbb
dec
ljmp
xor
or
xor
dec
adc
imul
out
lcall
or
sbb
push
jg
aad
add
ljmp
cmc
icebp
in
jbe
xor
std
xor
push
lods
test
cmp
pushl
add
stc
mov
popf
add
out
pop
aas
into
cmpsb
insb
mov
test
jmp
fildl
mov
xlat
rcrl
rclb
lock
cmp
add
fldl
mov
imul
addb
or
loop
loopne
sbb
ss
sbb
lods
fstpt
jmp
sbb
jne
cmp
shl
pop
inc
mov
ljmp
fidivl
mov
data16
mov
sbb
cmp
shl
idivb
pushf
je
shrb
repz
jmp
mov
insb
fistl
mov
inc
cmp
xchg
ret
mov
adc
loope
cmpb
pop
cli
in
push
int
movsl
fcmovnb
mov
cmp
xchg
or
mov
in
jg
dec
es
in
sbb
xor
push
movsl
and
sub
xchg
or
push
std
decl
xchg
xchg
pop
ficompl
mov
adcl
or
jns
xlat
fimuls
add
mov
mov
mov
sub
add
lock
xor
sbb
or
dec
and
arpl
jmp
push
ret
lock
jg
sub
dec
cmc
clc
out
imul
mov
ja
push
cmp
inc
sub
lods
push
push
adc
push
add
inc
push
addr16
int3
ror
cmp
lcall
out
and
loopne
ljmp
add
xchg
mov
xchg
pop
sbb
sar
push
mov
fbld
xchg
fstps
dec
cmp
lods
lods
lock
fidivrl
sub
sub
lret
sbb
lret
xchg
mov
push
jo
daa
insb
jp
call
decl
mov
sub
sub
mov
cmc
mov
or
mov
cld
mov
mov
call
xchg
cmovge
shlb
xlat
add
fstps
jae
jg
call
jno
outsb
inc
and
pop
sarb
aad
mov
inc
lock
ljmp
adc
incl
pop
dec
aam
out
imulb
stos
das
lea
mov
or
sbb
aad
ljmp
mov
dec
lock
dec
pop
pop
add
cld
sbb
dec
pushf
call
or
repz
imul
daa
mov
or
or
fbstp
mov
mov
lds
aad
push
mov
lcall
scas
hlt
inc
xchg
pushl
cmpsb
fs
out
cld
mov
push
dec
adc
incl
mov
punpckldq
push
fldl
jmp
xchg
repz
adc
scas
and
mov
pop
pushl
mov
jno
daa
sub
mov
pop
add
sub
sar
pushl
cmpsb
mov
repnz
mov
push
out
xor
out
sahf
ds
call
aad
fwait
mov
jmp
lods
add
push
dec
repnz
inc
xchg
and
mov
mov
icebp
pop
or
les
inc
pushl
cmp
add
sbb
or
jno
repz
fnstsw
cmpsl
mov
hlt
mov
leave
gs
jnp
mov
pushl
in
or
out
fcom
or
xchg
mov
ret
push
icebp
lcall
test
and
cmp
mov
cli
pop
and
inc
pop
push
loop
cmp
sahf
pop
sbb
outsl
inc
stos
jecxz
out
fwait
aam
dec
pop
xchg
dec
in
or
ror
push
mov
adc
fwait
test
jp
gs
sbb
out
fisubl
add
jg
push
mov
dec
jae
int
cmp
scas
fwait
incl
mov
xchg
mov
lock
mov
mov
ret
mov
sbb
sarl
mov
out
adc
mov
cs
aaa
jle
stos
sbb
lcall
cld
dec
lret
std
enter
fisubs
inc
enter
cmpsl
fdivrs
ss
aam
cmp
xor
nop
pop
xchg
xor
lods
in
pusha
int3
or
push
stos
add
jae
and
jne
pop
sbb
bound
xor
icebp
inc
outsl
jl
and
clc
loopne
inc
leave
jp
and
clc
fdivrs
popa
cmp
xor
xor
sar
div
inc
aaa
sbb
int3
loopne
repz
aad
ljmp
int
pop
cmp
mov
filds
gs
sub
pushf
push
les
add
pop
cmpsb
sub
lret
mov
dec
test
dec
dec
xor
ret
std
cmp
pop
inc
pop
mov
mov
pop
shlb
xchg
add
dec
and
push
daa
xor
mov
add
movsb
xlat
and
sbb
mov
sub
mov
add
in
arpl
fstpt
sub
xchg
xchg
stos
outsl
cld
dec
test
lea
movsl
mov
lahf
or
sahf
or
sbb
xchg
and
out
mov
repnz
sbb
jbe
push
fbld
push
sub
loop
out
aas
gs
mov
or
jmp
xor
push
or
arpl
cmp
mov
fmuls
into
repz
addl
jg
pushl
and
cmpsl
adc
fildll
dec
pop
xchg
adc
call
mov
or
lea
fldcw
cld
test
xlat
mov
mov
aad
jle
sbb
sub
push
mov
es
inc
stos
and
jmp
movsl
fwait
jns
pop
test
pop
cld
xchg
xchg
es
inc
aam
iret
fwait
jecxz
adc
push
inc
sbbl
stos
xor
scas
outsl
cmc
fistpll
mov
notb
push
push
test
or
ljmp
inc
out
subl
cmp
loope
mov
inc
movsl
push
cmp
sub
lret
ja
push
sub
mov
ret
int3
push
adc
and
call
icebp
and
repnz
pop
and
rcrl
sbb
ljmp
icebp
fisttps
repnz
xor
test
clc
mov
call
sub
push
pop
lods
mov
aam
xchg
outsb
jne
iret
mov
lret
in
sub
add
call
or
mov
movsb
loopne
movsl
jmp
xchg
lcall
aas
or
sub
cmpl
dec
sti
pushf
sbbl
push
inc
inc
xchg
in
add
pop
dec
sub
xchg
add
or
jp
or
lock
adc
fcomps
shr
pop
dec
mov
in
or
iret
insb
cmpsb
lret
push
add
aad
cli
call
xor
mov
repnz
xchg
popa
int
cmp
xlat
cwtl
inc
pop
stos
stos
pop
mov
sub
jg
jg
cmp
mov
adc
cmp
sbb
xchg
push
xor
incl
lcall
sti
adc
pop
lock
das
push
dec
mov
jmp
aaa
push
hlt
ret
dec
jmp
std
ljmp
cmp
ss
outsl
pop
cmp
sub
pop
loope
jno
xor
pushl
fistps
enter
test
lds
jo
mov
shlb
jbe
jg
das
cld
jecxz
ret
xor
loope
push
xchg
mov
mov
popf
stos
stc
cmp
and
lds
loopne
dec
pop
mov
mov
decl
push
lret
cmc
aad
pop
outsl
inc
cmpsl
out
ja
sahf
and
push
imul
cmpsb
call
not
pop
dec
shll
lods
push
cld
push
inc
scas
sbb
out
fucomp
jg
jg
lods
xchg
sbb
out
jno
xor
cmp
jne
mov
add
add
jb
cmp
in
mov
subl
lock
adc
mov
into
mov
fistpll
mov
push
sub
sti
inc
out
mov
xchg
outsb
cs
pop
mov
incl
and
xchg
cld
loop
push
call
cmp
or
pop
outsb
lahf
ljmp
cmc
das
push
jp
push
or
push
cmp
mov
test
jmp
clc
cmp
add
and
repnz
lcall
insb
out
dec
int3
cmc
or
pop
and
imul
jmp
in
loop
decl
inc
adc
jle
mov
xchg
sbb
or
inc
push
dec
sub
scas
mov
mov
incl
nop
xchg
shlb
scas
stc
dec
insl
adc
lods
daa
negb
pushl
in
adc
jge
push
mov
xchg
imul
mov
fwait
mov
sbb
lds
imul
sub
jmp
jo
dec
aas
inc
pushl
int3
pop
addb
sbb
push
icebp
ljmp
jbe
mov
daa
push
test
repnz
dec
lods
inc
dec
mov
cli
outsl
insl
pop
and
mov
mov
call
cmc
out
xor
push
ss
inc
push
push
sub
bound
cmp
pop
mov
xor
pop
daa
pop
cli
dec
sbbl
jbe
dec
pop
sub
iret
dec
out
mov
in
pop
loop
lcall
or
in
test
xlat
add
andl
out
int3
push
dec
or
or
mov
mov
ljmp
lcall
call
fisttps
mov
or
add
aas
xor
or
fsubl
or
sahf
mov
popf
incl
incl
adc
pop
gs
or
xorb
jmp
lods
call
pop
lret
dec
add
mov
and
int
pushf
xor
jns
lcall
bound
pop
pop
fdiv
pushf
cmp
sbb
dec
add
subb
adc
test
jg
mov
aaa
cmp
cmp
lret
and
inc
add
imul
das
ja
and
cli
push
xor
clc
adc
pushl
add
scas
fndisi(8087
sarl
out
add
add
outsl
and
call
xchg
mov
cmpl
adc
sbb
xor
jbe
sahf
push
dec
adcl
decl
mov
dec
push
pop
inc
xlat
ljmp
or
mov
std
mov
xchg
inc
mov
add
mov
ljmp
ja
gs
cmc
mov
ficomps
adc
pushl
jge
into
in
incl
and
gs
push
mov
lret
ja
loope
add
loope
or
cmp
pop
push
outsb
mov
fsubl
jmp
xchg
push
int
dec
dec
iret
cmp
ss
add
sbb
push
sub
adc
lret
mov
and
inc
jne
xorb
rcl
mov
hlt
jmp
addl
ja
pusha
stos
adc
fsubrl
push
fldcw
mov
adc
gs
jbe
sti
in
pop
rcll
inc
jmp
sub
sahf
push
loop
mov
mov
call
jmp
jae
inc
sti
xlat
movsb
subl
inc
popf
adc
adc
das
std
incl
loop
cltd
repnz
dec
inc
dec
popa
and
sbb
or
dec
push
adc
rclb
jecxz
dec
fdivrl
cld
out
movsb
jle
push
mov
dec
xor
push
or
pop
and
or
imul
mov
jne
aad
xchg
jns
subl
lds
out
adc
ret
pop
or
xor
negl
push
lret
mov
dec
outsb
mov
movsl
cltd
jmp
pop
cld
pushl
sbb
push
and
hlt
fucomp
lea
jmp
lcall
int3
adc
es
movsb
pop
xchg
mov
dec
mov
inc
pop
cld
in
jae
pushl
loop
mov
je
aad
mov
lods
fisttpll
jae
push
push
dec
dec
stc
sbb
jecxz
mov
cmpb
lcall
test
mov
jbe
loop
pop
in
inc
cmpsl
xchg
into
adc
inc
outsl
cwtl
test
ffree
add
xchg
out
jnp
ror
imul
loope
push
into
add
jle
aaa
decl
data16
sbb
add
pusha
cmp
test
call
xor
loop
out
repnz
push
lds
stc
or
cli
jb
out
insl
push
xchg
jp
enter
pop
mov
dec
jge
mov
insb
cwtl
clc
aas
sti
stc
test
dec
fmul
mov
dec
mov
xchg
mov
or
mov
stos
mov
stos
dec
roll
enter
rcll
push
hlt
mov
jg
pushl
cli
push
scas
add
inc
insb
outsb
jno
les
imul
roll
call
and
out
pop
js
sarl
sub
sub
push
ffree
mov
fucomip
mov
xchg
aad
and
lahf
jmp
xchg
mov
pop
push
jg
jmp
jl
aad
inc
push
nop
pop
test
stos
mov
loope
repnz
pop
jns
push
daa
xor
and
jge
fimull
negl
xchg
cli
mov
imul
decl
fiadds
or
push
jnp
mov
fistpl
stc
mov
jg
push
rolb
mov
pusha
call
stos
ljmp
rol
cwtl
cmp
ret
jno
mov
sar
test
sbb
xchg
sbb
cltd
add
mov
das
std
in
xor
jle
aam
and
or
lea
call
pop
loopnew
or
in
lock
fsubrs
xchg
sbb
jmp
xor
inc
mov
out
xor
std
push
or
das
mov
iret
mov
adc
decb
jg
fucomip
jne
add
or
aam
adc
cmp
notb
incl
or
call
sub
add
test
std
cld
cmp
in
sarl
jl
ljmp
hlt
jg
jo
xchg
mov
and
popf
mov
test
lcall
xchg
lret
dec
test
add
test
or
sbb
shlb
push
sbb
repnz
lods
dec
jl
inc
imul
call
imul
cltd
call
cmpsb
mov
scas
cmpsb
xchg
ds
push
mov
pusha
inc
jmp
repnz
push
mov
std
imul
pop
push
cmp
sbb
pop
loop
push
test
pop
cmp
scas
clc
loopne
add
or
jmp
mov
mov
lret
not
mov
xor
cmpsb
movsl
pushf
adc
aam
in
inc
cmp
fldl
or
loope
icebp
test
gs
aas
push
insl
loopne
dec
cmp
sahf
pushf
xor
cmc
int
sbb
xchg
ds
js
or
cwtl
into
jnp
mov
adc
push
push
mov
hlt
xor
sbb
ror
into
es
dec
cs
sbb
aas
pop
adc
jmp
ljmp
inc
cli
jg
lea
fistpll
subl
call
lret
je
lahf
sbb
jae
push
jae
repz
pop
jnp
add
pushl
bound
sti
cmp
fmuls
test
ljmp
jg
cs
addr16
mov
xchg
push
xchg
imul
ret
aaa
jbe
mov
inc
imulb
jmp
jno
jl
push
out
jae
cltd
fisubl
aas
or
jno
add
or
adc
jmp
xor
jo
aaa
insl
xbegin
call
or
cmp
pop
in
mov
and
fidivs
add
ret
adc
call
xchg
lock
inc
mov
push
cmp
inc
pop
hlt
jg
xchg
mulb
xchg
test
in
daa
in
or
or
xchg
or
ljmp
add
subb
inc
ds
mov
shlb
mov
dec
fsub
jl
add
pusha
dec
fwait
push
int
pop
and
ljmp
push
xchg
xchg
and
or
fists
mov
daa
mov
push
fwait
pop
push
inc
inc
stos
sbb
xchg
mov
jmp
int3
and
cmpsb
push
jge
dec
mov
insb
and
mov
stc
cwtl
nop
cmc
popa
mov
cs
sti
mov
fnstcw
das
testl
arpl
and
ljmp
cmc
jg
add
push
pushf
lods
cmp
mov
shr
loopne
pushl
into
pop
addr16
jl
adc
es
setp
adc
pop
sbb
sub
push
mov
pop
das
pop
subl
inc
adc
inc
jo
xchg
test
lahf
rcrl
mov
jp
jns
sbb
mov
shr
ss
ljmp
xchg
push
xchg
psubq
arpl
outsl
jae
add
testl
sbb
dec
adc
adc
mov
rol
idivb
pop
add
jnp
inc
and
shlb
clc
mov
sbb
cmpsb
cwtl
jno
cmp
js
pop
inc
jnp
pusha
jecxz
mov
nop
test
pop
xor
es
sub
mov
mov
push
cli
das
adcb
stos
lret
mov
inc
jns
add
das
scas
scas
int3
data16
jno
adc
or
pop
call
jns
icebp
inc
xor
leave
fsubrp
std
nop
jmp
pop
mov
adc
rcr
popf
lock
inc
fnstcw
mov
xchg
arpl
mov
ljmp
int3
pop
fwait
test
add
ljmp
xchg
ret
std
mov
int
jp
jge
add
xchg
and
call
daa
add
xlat
pop
cmp
xchg
ljmp
xor
test
fiaddl
ss
call
push
rorb
mov
insl
pop
inc
inc
adc
cmp
xor
cmpb
ja
pop
rorl
push
enter
sub
adc
push
cmp
icebp
mov
fstps
hlt
cmpsb
pop
add
das
hlt
lcall
push
fsin
ficomps
hlt
js
cmp
lea
incl
or
and
xchg
fs
pushf
out
leave
jns
call
xchg
pop
imul
call
add
mov
shrb
xchg
test
sub
adc
mov
idivl
pop
jmp
mov
aaa
cltd
jno
jne
push
cli
cli
decl
xchg
pop
jmp
orb
sahf
je
std
pop
cwtl
out
in
mov
cs
push
ret
mov
out
mov
and
dec
pushf
and
cmp
out
sub
decl
mov
fisubl
data16
cmp
jle
mov
ss
or
cmp
int
lock
sti
call
mov
js
dec
leave
fmuls
xchg
xor
jp
test
loop
sahf
sub
inc
jmp
push
cmpsl
and
loope
sbb
in
testb
mov
ss
pusha
jle
inc
sar
add
gs
mov
adc
decl
ret
xor
scas
or
orb
jg
push
add
insb
push
mov
pusha
push
pop
push
jl
adcb
daa
jne
addr16
fwait
data16
je
inc
popf
movsl
incl
adc
rcll
pushf
lret
jmp
jmp
clc
call
test
mov
shrb
push
sbb
cmp
xor
add
mov
sub
int3
cwtl
js
mov
ljmp
inc
notb
fcoms
fisubrs
xchg
xchg
cs
jg
mov
aaa
mov
orl
and
mov
call
push
aaa
mov
xor
stos
incl
or
and
gs
jg
sbb
in
mov
nop
and
pop
push
dec
cld
push
imul
nop
mov
mov
mov
addl
cmc
pushf
js
adc
jae
leave
test
jne
loop
repz
jno
jle
adc
idiv
xchg
call
cwtl
out
dec
mov
inc
inc
or
movsb
jo
jecxz
icebp
dec
je
shlb
cmpsb
pop
loop
call
outsl
scas
mov
outsl
adc
cmp
add
and
pop
into
cmp
pop
pop
jnp
mov
add
or
push
or
dec
pop
add
jg
jmp
xchg
inc
je
clc
lds
jne
lret
shl
jb
insl
daa
imul
sbb
xor
push
mov
mov
jl
dec
scas
add
stos
test
mov
push
loopne
jne
mov
shrb
test
std
pop
and
lods
popl
pop
pop
inc
ljmp
dec
pop
int3
ret
cmpsb
leave
push
lea
xchg
fcomps
sub
decl
xchg
aam
aaa
lahf
dec
out
decb
subb
xor
fldenv
xchg
repz
ficompl
jae
xchg
xchg
sub
mov
orl
sti
addr16
int3
loope
push
in
decl
mov
mov
mov
cmpsl
jae
and
ljmp
std
xchg
int
sub
pop
sbb
fistps
xchg
imul
cld
jl
call
decl
mov
mov
and
and
push
jge
inc
decl
or
les
movsl
fildl
mov
jne
push
pop
in
sbb
lcall
push
adc
sti
pop
cmp
ds
sbb
scas
clc
bound
jl
push
fstpl
aam
mov
add
iret
xchg
push
sti
xchg
and
cld
sbb
fldt
cli
inc
fmul
mov
xchg
and
sbb
cmp
add
jg
inc
pop
test
pop
xchg
idivl
call
cli
movsb
std
or
push
fcoms
fs
mov
or
dec
inc
push
add
jg
lcall
push
imul
popa
test
push
and
dec
and
pushl
cli
mov
pop
push
les
cs
xor
scas
mov
mov
mov
cld
ss
mov
scas
pop
cmpsl
out
mov
sub
pop
fwait
stc
inc
and
inc
test
xor
popf
scas
loope
scas
dec
ret
out
les
call
ret
jl
cs
stc
push
enter
mov
or
pop
call
decl
mov
rdpmc
push
test
cltd
int
mov
add
fwait
loopne
decl
lcall
sub
loop
cmp
movl
xchg
in
dec
or
test
pop
in
xchg
rclb
ret
idiv
lcall
mov
dec
push
data16
js
sub
xchg
fidivl
jecxz
popa
ret
int3
int3
sbb
cld
inc
mov
pop
mov
mov
lock
jg
adc
hlt
inc
das
cmpsb
pop
movsl
xor
int
jl
mov
lock
lret
js
pop
xor
push
fs
lods
mov
call
clc
mov
daa
and
sub
mov
sbb
outsl
insl
std
and
xchg
mov
popa
pusha
jmp
pop
jl
mov
mov
and
push
dec
xchg
xor
add
lcall
mov
das
or
cmp
jmp
jne
mov
xchg
orl
xchg
es
loopne
outsl
mov
daa
ljmp
mov
add
pushl
lret
lret
jecxz
mov
lock
test
xchg
mov
outsb
mov
pop
mov
or
addb
aad
ljmp
std
cmp
push
push
loope
dec
rclb
aam
xchg
dec
lret
lret
cld
aaa
jg
call
mov
mov
dec
cmpsb
or
mov
mov
into
jns
mov
jne
dec
in
lods
sub
jmp
lock
mov
mov
jo
enter
filds
test
inc
xchg
jne
mov
test
aad
add
and
dec
mov
mov
add
add
pushf
mov
in
test
divb
clc
outsl
std
jmp
or
dec
sub
cwtl
push
mov
negl
jo
xchg
pop
mov
sub
sbb
cmpsb
mov
addr16
movsl
pop
dec
push
ljmp
lahf
cmp
xchg
dec
sbb
sar
ljmp
or
mov
or
xlat
pushf
cmp
inc
rcrb
pop
cli
scas
jmp
pop
and
xchg
add
test
aad
sbb
jg
divb
inc
or
cmpsl
sbb
cmpsb
hlt
pop
add
adc
clc
aas
sbb
cli
scas
imul
xchg
rolb
mov
cwtl
insb
jmp
jmp
push
dec
aas
inc
stos
ret
sahf
mov
test
cs
mov
lds
test
pop
fnop
jg
mov
mov
ret
push
mov
jnp
scas
sbb
call
ljmp
mov
dec
xchg
xor
fistpll
inc
push
stos
or
lea
call
dec
sti
filds
mov
cltd
fidivrs
in
stc
cmp
mov
mov
in
jmp
adc
imul
lahf
inc
mov
cmp
jle
jo
call
in
mov
sbb
cmp
mov
cmpsb
lock
or
add
addb
int3
out
in
inc
pushf
enter
push
pop
test
decl
and
adc
mov
pop
jno
dec
stos
daa
outsb
js
out
push
mov
inc
outsl
icebp
jg
cmpsl
jge
pop
pop
mov
leave
push
icebp
aaa
or
loop
std
rcrb
sbb
push
push
orl
aad
pop
leave
lcall
pop
shrb
mov
jmp
daa
sti
out
jnp
adc
decl
cmp
addr16
addps
ds
lret
clc
out
pop
ljmp
lahf
pop
sub
xorb
sbb
cmp
hlt
jmp
fdivp
push
xchg
into
inc
mov
cmp
pop
mov
mov
hlt
outsl
cld
jmp
es
shll
popf
test
dec
xchg
xor
adc
or
popf
xchg
shl
jg
addl
rcr
cmp
sar
push
stos
sbb
call
or
jle
cmp
insl
scas
cmpsb
lret
xor
repz
jnp
push
and
decl
dec
stc
dec
add
push
inc
adc
ss
call
scas
ljmp
stc
adcb
orl
dec
aam
mov
push
mov
mov
mov
js
cmc
jl
lds
pop
clc
std
jae
push
pushl
stos
mov
icebp
jnp
lcall
xchg
dec
ffreep
inc
jns
stos
cmp
and
sarb
cwtl
cmp
mov
add
push
or
aaa
cli
shl
mov
fistl
xchg
cmp
cmp
ficompl
imul
out
mov
inc
scas
popa
xchg
push
add
cmp
stos
mov
call
pop
mov
and
je
sub
xchg
push
es
mov
aam
cld
sti
or
call
push
mov
or
shr
ljmp
sub
push
jmp
inc
clc
lret
out
mov
mov
mov
push
add
comiss
aad
adc
mov
fucomip
dec
pushf
aas
arpl
hlt
ljmp
add
frstor
mov
ss
repz
ret
in
jmp
incl
jmp
jo
test
mov
push
cli
sub
push
dec
xor
or
out
mov
js
cmp
mov
inc
add
xchg
mov
mov
sub
lock
ret
hlt
push
jae
xor
xchg
inc
out
movsl
cs
leave
jmp
lods
pop
aad
iret
mov
filds
mov
sar
in
dec
jmp
divl
lds
popl
js
lock
push
or
outsl
and
stos
sub
imul
mov
cmp
test
mov
pop
mov
pop
xor
pushl
sub
xor
jge
cmp
mov
push
mov
outsl
adc
cltd
lret
in
shr
loopne
cmpsb
in
ss
inc
mov
cmp
cli
rol
push
rcrb
xor
and
shrl
sbb
adc
jns
mov
lcall
mov
cmp
xlat
cmc
xchg
and
shlb
mov
mov
fists
add
imull
mov
outsl
mov
cs
xor
movsl
or
inc
stc
jp
pop
or
push
pop
mov
inc
pop
pop
popf
addr16
popf
cwtl
jno
cmc
push
sbb
call
out
pop
repnz
pop
imul
cltd
inc
rcll
call
int
lcall
sarb
inc
mov
loope
sbb
call
push
xchg
pop
mov
pop
repz
and
pop
outsl
cli
lcall
mov
adc
push
lcall
cmp
decl
iret
lret
imul
mov
sub
mov
push
stos
aam
push
xchg
je
fistps
jg
or
jae
imul
ss
ret
in
incl
jecxz
sub
enter
outsl
and
sbb
insl
popf
push
sub
lock
adc
je
sbb
add
push
mov
mov
dec
or
mov
btr
call
orl
das
hlt
shlb
fwait
lahf
push
cld
adc
sbb
mov
clc
sbb
mov
enter
jg
fnstsw
jo
rcrb
xchg
mov
inc
dec
ret
orb
das
push
std
jae
les
push
lret
adc
dec
inc
hlt
sub
pop
mov
out
test
movsb
xchg
mov
loop
enter
movsl
xchg
sub
pushl
pop
inc
jecxz
push
loope
iret
or
je,pt
cmp
jge
lock
dec
and
sti
jp
std
in
inc
mov
inc
idivb
or
ret
cli
aaa
mov
popa
andl
push
add
ljmp
adc
push
test
idivl
xchg
sub
adc
push
repnz
enter
call
cli
jmp
mov
xchg
dec
cmp
imul
int
rorb
sbb
adc
fisttpll
mov
sub
in
data16
imul
jne
mov
mov
lcall
mov
push
jnp
cwtl
ret
sbb
pusha
and
inc
fsts
cli
dec
xchg
sub
testb
and
jle
sbb
aam
push
je
hlt
js
mov
stos
push
out
int3
in
out
xchg
dec
outsb
aad
xor
stos
lahf
pop
push
fs
leave
hlt
mov
and
mov
in
test
xchg
jnp
es
aaa
sbb
jp
xchg
ljmp
rcrb
lcall
push
imul
cmp
xchg
js
cmp
loope
inc
jle
add
into
dec
icebp
sub
dec
push
stc
clc
add
adc
cmc
inc
sbb
mov
rclb
jae
sub
mov
mov
add
ljmp
ret
imul
and
mov
xlat
nop
cmp
sub
or
rclb
shll
js
incl
add
xchg
xor
roll
adc
pushl
in
mov
xchg
in
ret
inc
pop
subb
push
lahf
fmull
hlt
hlt
push
lods
and
out
pop
pop
sbb
aaa
jg
mov
in
popa
bound
arpl
cmp
pop
clc
jmp
mov
aam
jb
pop
outsb
xchg
and
test
add
xor
push
mov
lea
add
dec
out
loop
xchg
js
lret
into
add
decl
aaa
sub
cmp
outsb
sbb
das
cmp
rol
cmp
jb
lods
call
adc
push
mov
mov
outsb
mov
ljmp
jle
roll
pusha
inc
cli
out
cltd
pop
jns
add
sar
cmp
sbb
in
mov
mov
fildll
pusha
sub
pop
icebp
pop
mov
jg
movb
xor
or
xor
lcall
sub
push
aad
push
jle
dec
imul
insb
sbb
cli
decl
shll
sbb
mov
filds
pusha
andb
or
lods
lret
lock
lahf
jl
leave
scas
sub
shll
mov
jg
in
pop
or
mov
pop
ljmp
fsubr
pop
pop
in
cld
lret
in
add
mov
rcl
scas
cmc
int
lcall
je
push
mov
lcall
dec
pop
dec
pop
and
mov
andb
lcall
mov
sub
jbe
push
decl
lret
mov
ret
scas
jb
cmpsb
ljmp
repz
jg
xchg
jbe
sub
in
rcrl
test
mov
sub
adc
lcall
dec
push
fldl
xlat
sbb
incl
repnz
out
mov
into
in
sbb
sbb
pop
subl
inc
xchg
cs
ljmp
pop
shrb
xchg
or
jl
in
ret
and
lcall
je
int
punpckhwd
xor
mov
clc
jg
jmp
mov
ljmp
fcmovne
push
or
dec
mov
fldl
movl
xorl
cmp
and
mov
shll
sti
mov
ror
push
dec
lock
jns
imul
mov
mov
mov
push
inc
adc
sar
and
and
std
xor
push
jo
adcl
pushl
sub
or
scas
lock
xor
sbb
in
inc
jge
cli
mov
lret
jge
sti
mov
insb
sbb
loop
or
js
sbb
jnp
fstps
pop
sub
call
mov
push
jmp
js
orb
jl,pn
fmull
imul
or
mov
mov
clc
pushl
adc
add
in
mov
nop
arpl
ljmp
mov
xor
adc
movsb
scas
and
incl
mul
ds
or
lods
out
popf
lcall
xchg
mov
ljmp
notb
fstl
arpl
test
rcll
or
js
icebp
pusha
mov
call
push
repnz
cmpsl
jns
mov
out
cmc
or
shll
repnz
sub
call
mov
xor
outsb
sub
sub
mov
fdivl
sarb
ljmp
sub
sub
and
insb
cmpsl
cwtl
in
xor
push
lret
imul
js
cmc
pushl
xor
mov
sbb
addl
mov
test
sub
jne
pop
je
adc
dec
mov
jmp
lea
lret
imul
outsl
and
jg
pushl
adc
cltd
dec
push
fisttpl
icebp
sub
and
std
das
cmc
inc
mov
scas
and
movsb
pop
test
inc
and
ds
lcall
std
fidivrl
dec
mov
stc
lods
cmc
insb
mov
frstor
loope
or
xor
push
push
ret
mov
mov
pusha
int
jle
mov
lcall
es
jmp
push
dec
cld
lcall
test
mov
add
push
mov
lock
popa
push
or
mov
sahf
std
xor
sub
push
dec
push
decl
jns
push
dec
lret
leave
mov
xchg
je
testl
cld
ret
mov
fs
lods
jg
call
subb
push
cmp
inc
fildl
jbe
mov
lcall
testl
loope
sbb
jb
sbb
movl
jg
lcall
mov
xor
dec
jae
orl
lahf
sbb
loop
ljmp
test
repz
inc
out
fnstsw
sbb
aad
decl
mov
or
cs
push
fidivrs
icebp
cs
jmp
jecxz
test
mov
pop
les
xchg
fsts
xchg
pop
mov
mov
xchg
fistl
and
cmp
push
adc
mov
pop
pop
cli
lock
and
popf
inc
jge
insb
pushf
into
movsl
int
in
xchg
inc
cmpsb
cltd
lcall
cwtl
or
stc
fisubl
dec
push
pop
std
sbb
lea
adc
jnp
pop
pop
dec
sbb
add
out
pop
push
scas
jmp
mov
xchg
mov
subb
push
aas
aaa
and
rolb
testb
cmp
fcmove
mov
mov
or
sub
push
and
mov
fnsave
inc
cwtl
outsb
or
mov
fcmovnu
fiadds
cmp
jmp
jne
enter
push
cs
xchg
shr
and
sub
loope
pop
testl
das
lock
xchg
add
cltd
jmp
push
xlat
jb
insl
call
scas
call
in
loope
stc
xlat
mov
pop
mov
ljmp
push
mov
jge
jecxz
movsl
mov
jne
in
add
mov
cmpsl
jp
push
mov
jo
test
cmp
call
fcmovbe
and
call
lret
shl
lea
add
in
sbb
jno
adc
aaa
mov
sbb
cmpsb
ljmp
inc
int
and
ja
sti
mov
mov
push
sub
jle
lods
mov
jb
sub
decl
outsl
jb
jae
test
jbe
push
fcmovnbe
push
mov
mov
and
sar
clc
lcall
jbe
inc
iret
icebp
out
add
xchg
cmp
hlt
adc
fmuls
pop
inc
out
mov
stc
aam
mov
mov
inc
call
nop
call
loop
fnstcw
jns
rorb
pushf
jns
mov
xchg
xor
ljmp
inc
jmp
pop
sub
das
mov
lods
jecxz
push
add
clc
test
push
enter
je
orb
inc
push
hlt
xchg
imull
loope
idiv
stos
in
adc
inc
xchg
mov
sbb
stos
xor
push
xorl
pop
mov
jg
mov
in
faddl
cwtl
inc
cmp
lods
jg
inc
dec
cmp
out
loop
hlt
incl
ljmp
add
push
out
dec
sbb
ja
popa
mov
data16
mov
pop
repz
push
pop
jo
and
adc
or
mov
cmp
nop
orl
or
fidivrs
fistl
jg
fbld
or
cmp
and
ret
movsb
xchg
xor
std
iret
int3
or
sbb
dec
jmp
out
call
mov
mov
jg
jb
cwtl
push
xor
push
cmc
sbbl
push
cwtl
mov
xor
jbe
mov
sbb
pop
sub
cmp
outsb
hlt
pop
push
shrl
cli
pushf
mov
sahf
decl
cld
mov
test
sub
incb
popf
jg
cmp
outsl
inc
imul
pop
arpl
dec
ret
fidivs
mov
mov
out
outsl
mov
movsl
adc
daa
pop
leave
in
lcall
cmp
inc
jns
outsl
mov
cli
loope
pop
mov
popl
sub
orl
adc
jg
mov
pop
inc
fs
iret
mulb
enter
test
cmp
ret
clc
incl
pop
and
lea
subb
mov
lds
dec
imul
mov
adc
push
mov
scas
xor
push
dec
and
lock
dec
test
cmp
add
cmpsb
not
jns
rol
cld
icebp
xor
loopne
clc
and
in
dec
mov
mov
dec
dec
and
call
jg
sbb
cli
and
imul
inc
cmp
fnsave
mov
icebp
add
std
jnp
xlat
jg
xor
xlat
rclb
call
sbb
vpsubq
movsl
xchg
push
leave
pushl
sbb
imul
loop
or
aas
into
clc
dec
mov
lods
sub
jg
decl
fildl
sbb
divl
xor
les
js
les
jb
es
ljmp
fsubrs
std
cwtl
ss
mov
test
add
addr16
add
dec
or
scas
push
push
pop
ljmp
cmp
dec
test
test
lcall
roll
xor
cmpxchg8b
inc
mov
mov
call
xchg
clc
mov
jbe
into
pop
cmp
mov
cmp
mov
int3
pop
movsb
loop
lock
pop
dec
adc
sbb
inc
jmp
pop
pop
mov
lret
lcall
arpl
lds
pop
cmc
mov
int
adc
push
pop
and
ss
push
jecxz
pushl
ret
fsubrl
loope
es
shrb
les
dec
decl
sub
rcrb
rorb
out
outsb
ficoml
inc
sbb
out
fucomip
call
cltd
sub
into
mov
fcomps
jl
push
cli
in
or
sbb
movsl
bound
sar
decl
lahf
cwtl
clc
push
call
xor
shl
sbbb
incl
fcompl
clc
add
sbb
fwait
push
rcr
cwtl
adc
testb
mov
pop
das
mov
pop
jo
xorb
add
mov
pop
inc
adc
push
or
decl
add
mov
cld
or
or
mov
lea
mov
mov
sub
movsl
fadd
stc
lock
lock
lock
cmpsb
dec
dec
or
inc
bound
iret
cli
pop
cld
call
dec
push
jo
jge
sub
cmp
jnp
loope
and
inc
push
jp
fimuls
xor
mov
mov
out
jle
repnz
push
arpl
mov
gs
std
jg
fistpl
jmp
xchg
mov
fildl
roll
push
fisttps
notl
ljmp
mov
insb
and
inc
aas
mov
cmp
mov
das
cmc
mov
scas
cmp
repnz
repnz
mov
insb
sub
cld
jg
xor
xor
cmp
adc
push
ffree
and
iret
test
ljmp
in
dec
or
mov
mull
loopne
fbld
jb
andb
pop
cs
jae
pop
sub
jbe
and
fsts
outsb
ret
cmpsl
sub
add
xchg
fmull
mov
gs
inc
loop
das
mov
decl
xchg
push
jo
or
in
lahf
insl
sbb
mov
decl
add
cmp
jle
jmp
cmpsl
push
cmp
xchg
sbb
inc
cld
inc
push
into
movzbl
mov
xor
cwtl
mov
pop
int3
push
pop
adc
pop
mov
int3
xchg
or
lcall
movsl
jb
mov
rcrb
ret
fsubl
rol
xchg
sbb
sub
int
inc
decl
nop
fisttpl
inc
or
insb
jg
cmp
mov
mov
jns
cli
fistpl
push
leave
xor
mov
std
jne
decl
lock
les
pop
mov
or
and
sbb
mov
fnstenv
stc
stos
mov
std
mov
push
pop
dec
pop
ds
xlat
xrstor
aad
fwait
test
mov
mov
jno
pop
in
push
push
push
imul
gs
test
cmp
decl
jge
xchg
mov
mov
loopne
pop
enter
lods
cmp
mov
dec
sub
mov
add
adc
insb
sub
jg
dec
push
and
das
or
sti
mov
and
scas
sbb
push
and
mov
lock
add
aad
ret
or
js
dec
loope
lcall
sub
test
or
mov
or
mov
leave
cwtl
mov
pop
mov
fwait
aaa
xchg
fucomp
add
mov
sbb
inc
rol
dec
loop
push
push
ret
lcall
fbld
mov
mov
pusha
das
xchg
je
in
jg
pushl
push
adc
imul
pop
mov
cld
ljmp
push
jg
dec
idivl
lcall
das
lds
loope
sub
sbb
pushl
frstor
jns
cmp
xchg
or
sbb
imulb
mov
imul
call
lock
xchg
mov
fsubl
xor
adc
loopne
sub
sbb
stos
call
rclb
and
fistps
arpl
fisubs
aaa
cld
xor
or
mov
sub
lcall
outsl
push
outsl
adc
jmp
in
sbb
sbb
sub
fcompl
ljmp
pop
xor
and
shrl
insl
into
data16
stos
inc
and
cmp
mov
lock
ret
pop
aaa
fcmove
ljmp
outsl
outsb
lods
push
ret
xorl
fwait
cmpsb
inc
jb
loop
popa
xchg
push
push
loopne
mov
stos
xorl
xchg
arpl
pop
push
jp
cltd
cmp
pushl
mov
daa
pop
pop
mov
aas
test
add
pushf
add
aam
jp
and
decl
mov
sbb
dec
sahf
test
mov
jo
fs
mov
sysenter
ds
or
incl
sbb
into
ljmp
aas
mov
mov
mov
mov
and
cmp
adc
lods
xchg
jno
mov
sar
incl
cmp
stc
push
ja
cmp
xchg
mov
inc
mov
or
rcl
repz
fiaddl
cltd
jg
and
pop
xchg
push
dec
ja
add
cli
sbb
incl
iret
in
sbb
and
sub
push
cmc
decl
xchg
hlt
xchg
sub
inc
imul
pop
out
inc
test
int
incl
dec
adc
mov
sbb
inc
jle
xchg
fiaddl
mov
pop
add
cmpsl
mov
add
pop
hlt
mov
xchg
pop
sub
sarb
scas
sub
inc
ljmp
aad
ret
inc
adc
shlb
iret
mov
clc
pop
cli
add
mov
pop
push
push
cmovp
push
pop
or
scas
insl
fbstp
jg
sbb
fucomip
sub
mov
repz
rcl
mov
add
cmc
add
ret
ljmp
mov
lahf
dec
ret
pushf
enter
call
mov
xor
cmp
xor
repnz
ja
mov
icebp
push
add
mov
mov
xlat
hlt
pop
sbb
ljmp
out
dec
add
pop
or
pop
mov
incb
scas
aad
xor
dec
push
pop
das
xchg
cli
decl
aas
cwtl
int
stos
test
test
jg
aad
idivl
jnp
lcall
xlat
mov
in
mov
and
jg
sbb
lcall
repz
test
push
lcall
and
cmp
mov
mov
jmp
mov
in
rorl
cwtl
xchg
push
shrb
call
mov
ja
lock
clc
jge
mov
push
mov
push
inc
imul
xchg
sbb
add
xor
stos
mov
bound
mov
and
inc
xor
add
mov
sbb
push
mov
mov
jg
lods
xor
push
pop
xchg
inc
nop
stos
insl
mov
cli
je
out
xor
adc
mov
je
shl
xchg
jg
add
push
add
and
hlt
sub
pop
pop
movl
add
and
adc
jmp
sbb
adc
pop
fcomip
sahf
insb
fst
mov
push
or
and
inc
popa
sti
xor
call
jp
add
xor
and
push
mov
mov
mov
sbb
call
test
aam
out
and
jb
pop
inc
shlb
mov
call
mov
out
adc
sub
insb
loope
fisubs
stos
lock
hlt
inc
jl
lcall
fsubr
ficoms
jo
aaa
push
into
sbb
lcall
push
ja
pop
or
xchg
aad
subl
repz
mov
movsb
cmp
incl
mov
mov
out
jge
lahf
xchg
nop
imul
pop
adc
sbb
inc
add
jl
loop
xor
es
pop
xor
out
enter
xor
push
xchg
sarb
jb
xchg
mov
loope
movsb
pop
fidivs
insb
jg
mov
lock
or
lods
lods
mov
dec
mov
addr16
adc
mov
enter
mov
outsb
dec
or
int3
dec
in
fildl
loope
mov
nop
data16
xor
inc
lock
mov
outsl
cld
mov
ja
daa
pusha
daa
ja
enter
sub
test
mov
mov
scas
icebp
pop
jl
jg
xchg
std
ljmp
mov
das
in
les
das
in
add
mov
aas
adc
dec
fisubrl
imul
mov
dec
sub
mov
pop
push
imul
call
fcompl
sbb
dec
add
mov
sub
adc
xchg
ja
and
cmpsb
shll
dec
push
fs
mov
or
insl
out
popa
dec
xor
roll
mov
cmp
cmp
inc
pop
nop
and
pop
leave
jne
jecxz
or
mov
ud0
cmp
sub
jge
mov
fbstp
fists
mov
ss
or
mov
loope
popf
jns
dec
mov
push
lods
sub
out
or
push
push
mov
fcmovnb
bound
pusha
loop
test
ret
decl
test
sub
and
cli
or
ror
xchg
jle
or
js
mov
jnp
int3
das
movsl
jg
out
rorb
fdivl
inc
jp
ljmp
lock
dec
or
xor
decb
mov
jne
es
lcall
icebp
dec
add
ljmp
mov
mov
xorb
pushl
sbb
cmpsl
das
int
sub
mov
in
mov
lret
int
loope
pop
fistpll
test
push
shl
dec
lods
or
sbb
insl
jmp
pop
or
mov
push
sti
sbb
jg
add
adcb
jmp
int
xchg
dec
nop
bound
mov
pusha
xor
sti
int3
push
das
push
aam
add
cmp
ljmp
incl
mov
add
or
pop
rcll
notl
mov
loope
or
lods
decl
xchg
pop
fdivs
rcrl
fidivrl
popf
cmp
mov
sahf
xchg
dec
or
mov
outsb
incl
push
xchg
mov
mov
test
insb
imul
outsl
mov
mov
and
gs
or
aas
sbb
cli
cltd
ljmp
call
mov
loope
mov
mov
mov
mov
and
inc
jb
gs
sub
loope
clc
dec
add
sub
mull
imul
loopne
mov
lret
notl
arpl
pop
mov
je
roll
cld
mov
incl
mov
lea
mov
mov
inc
push
dec
loopne
fisttps
xorb
dec
xor
mov
call
cltd
paddw
inc
and
xchg
push
add
jmp
xchg
shlb
aad
xchg
test
jns
push
shrb
movsb
add
pop
lds
leave
dec
xchg
hlt
jge
mov
lds
push
cmp
scas
fwait
adc
idivl
insb
aaa
gs
cmp
test
push
inc
lods
andl
call
das
iret
and
xchg
daa
cmp
dec
andb
adc
dec
mov
das
popf
aas
dec
xchg
ljmp
push
js
jns
in
xchg
jl,pt
xor
mov
xor
hlt
in
loop
mov
cmp
pop
sub
push
ficoml
popa
xor
jp
xor
call
add
leave
imul
lcall
jge
inc
sub
lock
or
mov
stc
jnp
fistpl
jno
xchg
sub
xor
gs
lret
clc
call
mov
pop
cmp
std
lock
scas
insb
popf
out
incl
aaa
add
xchg
test
push
test
jle
mov
or
movsb
dec
mov
sub
loope
add
iret
ds
or
sar
mov
mov
dec
sub
push
fs
fwait
fwait
jp
dec
adc
mov
ljmp
sbb
inc
mov
mov
rcl
mov
mov
out
jge
jno
je
sbb
inc
outsl
popf
leave
mov
jge
insb
cs
jb
mov
dec
sti
insb
outsb
cmp
xchg
movsb
jnp
sahf
sub
pop
gs
xchg
hlt
mov
loopne
jnp
and
loope
adc
ret
or
andb
adc
jle
pop
cld
call
and
jb
repz
jae
lahf
cmp
and
clc
decl
or
in
mov
popa
es
jno
in
inc
mov
adc
and
or
and
ljmp
lcall
jmp
xor
jg
lahf
shll
adcl
add
loop
enter
pop
aad
fucomip
jp
mov
pop
mov
or
jg
mov
test
sbb
mov
dec
jge
mov
mov
xchg
push
push
in
and
mov
pop
xchg
and
test
aaa
aam
int
jmp
xchg
popf
sub
sbb
test
jg
sub
lahf
movsb
popa
rclb
sbb
and
xor
in
adc
out
hlt
cmpsl
in
adc
mov
inc
aaa
adc
out
mov
push
nop
dec
add
sub
jp
lret
push
daa
inc
shll
nop
repnz
pushl
sub
pop
aaa
pop
dec
imull
mov
and
faddl
adc
cli
jge
pushl
cmpl
call
push
ret
mov
or
cmp
data16
call
shll
iret
push
adc
and
shrb
mov
jge
push
mov
decl
jl
call
mov
aaa
adc
or
or
lcall
outsl
pop
mov
lcall
mov
lea
insl
adc
push
hlt
call
lods
mov
mov
ja
mov
lock
push
dec
add
adc
outsb
add
jns
call
cmp
pop
xchg
in
ja
pop
xchg
sub
jecxz
popf
sbb
pushl
stos
aad
enter
imul
sbb
ja
mov
pop
mov
stos
je
and
aam
add
imul
idiv
call
std
adc
fildl
pop
cmp
lcall
cli
xchg
dec
enter
mov
or
ror
jle
sbb
add
ljmp
fidivs
push
or
cwtl
adc
adc
decl
push
jmp
repz
mov
add
jp
pop
xchg
int3
jg
outsb
and
fcmovne
sarl
pop
scas
mov
imul
test
ss
mov
xchg
xor
dec
mov
and
cwtl
leave
xchg
jp
inc
lods
gs
call
clc
cmp
sbb
cmovle
nop
pop
scas
pop
mov
sub
xchg
clc
ds
push
call
rcrb
jmp
jl
adc
xorb
inc
jnp
sub
repnz
int3
mov
jmp
pop
xlat
pop
mov
mov
mov
xor
add
and
jp
lods
sub
das
std
pushl
loop
and
dec
sahf
scas
inc
icebp
mov
dec
and
jo
dec
inc
ret
decl
icebp
std
and
sbb
xchg
dec
push
sub
cmp
jmp
jbe
hlt
jo
ret
imul
outsb
or
push
fildll
push
mov
dec
js
pop
jg
mov
mov
cmp
sbb
sub
decl
add
add
mov
data16
fs
cld
nop
std
fcmovnbe
inc
std
movsb
loopne
dec
subl
push
pop
adc
lea
je
repz
andl
mov
inc
aas
pop
scas
cmp
or
push
aaa
clc
jg
xor
dec
inc
adc
xchg
xchg
scas
xor
nop
enter
incl
add
cli
xor
pop
dec
loopne
scas
les
orl
cli
aaa
sub
pop
sub
sub
sbb
sbb
fldl
inc
les
sar
jmp
xor
dec
and
dec
mov
dec
lret
dec
popa
mov
jns
jo
mov
sbb
pop
loop
call
pop
or
mov
or
lahf
decl
lods
pop
lods
cmpsl
push
push
fnsetpm(287
sub
movsl
sub
mov
lret
insl
stc
outsb
adc
std
decl
das
call
sub
adc
cli
sbb
cmp
jns
jae
jmp
push
stos
mov
xchg
pop
popa
add
cmpsl
inc
push
pop
cmc
into
jno
in
push
daa
call
hlt
inc
loopne
push
das
xor
stos
rclb
cmpsb
mov
mov
adc
add
stos
jecxz
mov
pushl
adc
xchg
push
fnstsw
xlat
scas
es
popf
orl
test
add
ljmp
fwait
push
loop
ja
xchg
addl
xchg
jbe
jmp
loopne
inc
sub
call
clc
jno
mov
jo
add
out
insb
cmp
cld
adcl
jg
xchg
iret
sub
jl
xchg
movsb
adc
and
mov
sub
call
fildl
popl
out
inc
mov
aam
aaa
cli
xchg
pop
gs
shl
push
add
dec
stos
in
push
mov
sti
in
inc
and
mov
loope
orl
fisubrl
dec
push
and
std
jmp
pop
jl
jmp
loope
dec
punpckldq
fimuls
and
ljmp
or
sub
dec
jns
leave
repz
or
pushf
mov
mov
add
pop
andl
push
mov
add
jne
xchg
adc
jmp
ret
out
test
shr
push
sub
mov
push
mov
xchg
sub
ljmp
mov
xor
pop
std
ljmp
repz
sbb
cltd
mov
push
mov
cmpsl
sub
sahf
push
popf
push
cmc
call
movsl
lea
add
dec
xor
mov
bound
icebp
pop
das
dec
int
xor
mov
ljmp
ud1
loopne
in
cmp
pop
cmpsb
icebp
adc
inc
and
jmp
test
arpl
inc
leave
insl
dec
xchg
push
xlat
push
outsl
hlt
ret
ss
mov
jg
ret
xor
jle
mov
ficoms
xchg
or
lcall
sbb
sub
sbb
pop
mov
mov
call
call
dec
test
xchg
mov
xor
pop
imul
sub
pop
decl
call
pop
mov
cmp
fbstp
clc
jb
sbb
in
into
movsb
aad
adc
outsl
add
cmp
fdivr
das
movb
adc
lea
pop
std
mov
mov
mov
in
dec
cmp
call
mov
adc
mov
call
call
pop
jae,pt
adc
mov
loop
pop
dec
jle
lcall
arpl
jo
jmp
rcl
xchg
ljmp
mov
add
inc
mov
pushl
xorl
cld
aam
sahf
lock
ljmp
inc
aam
fdivs
mov
insb
cli
out
mov
mov
adc
je
aam
xor
add
pop
and
xchg
push
xchg
pop
sub
pop
lret
or
test
ret
insb
sti
jmp
mov
in
addl
lret
dec
faddl
mov
mov
adc
pop
fdivl
mov
call
mov
add
pop
xor
fwait
js
das
test
rcl
test
jmp
mov
fcmovnb
cmpb
test
insl
inc
or
repz
ja
xchg
jne
jle
dec
popa
jbe
ret
pusha
jl
fucomi
rcrb
outsb
mov
lods
xlat
lods
out
subl
aam
in
pushl
jl
sbb
add
dec
mov
xchg
xchg
or
in
pushl
int
mov
xor
ljmp
mov
or
dec
fisubs
jmp
xor
test
in
sbb
pop
sbb
xlat
mov
ljmp
out
fldenv
out
in
stos
push
inc
inc
push
cltd
iret
lret
lcall
ds
jbe
repnz
test
ljmp
idiv
shll
fldl
push
stc
adc
nop
call
stos
popf
insl
push
pop
clc
jmp
enter
jmp
cwtl
jb
mov
popw
sarb
hlt
push
sarl
jl
fisubrl
ja
loope
push
stc
adc
imul
pop
test
dec
sbb
fildll
mov
lret
iret
push
test
inc
es
into
add
add
fidivl
adc
push
rolb
decl
dec
sbb
out
push
and
shll
jmp
cmp
lock
int3
imulb
iret
inc
push
mov
or
jg
add
dec
jmp
push
cs
xchg
sub
scas
sub
enter
mov
dec
std
pop
push
clc
loopne
repnz
mov
lea
loopne
and
sbb
mov
add
jb
xor
jge
or
sub
push
jle
jne
mov
ljmp
push
cmp
mov
aaa
sub
mov
sbb
lcall
or
pop
mov
or
dec
and
inc
into
push
loope
and
arpl
mov
pop
cmp
subl
iret
sbb
add
mov
lret
int3
out
xchg
loopne
add
jbe
or
add
rcll
rcl
lcall
ds
movsb
inc
pop
test
dec
or
js
xchg
add
fcmovb
call
cmp
dec
addr16
imul
jle
xchg
mov
mov
inc
xchg
sbbl
outsl
icebp
pop
and
iret
aaa
insb
add
test
decl
cmp
insb
push
filds
sbb
mov
lret
repnz
or
call
imul
and
xchg
xor
push
pushl
dec
jecxz
adc
inc
les
or
adc
sbb
decl
lret
ret
iret
push
rcr
in
test
ficoms
sub
pusha
iret
mov
call
decl
pop
sub
add
fnstenv
adc
pop
cwtl
shll
mov
cld
or
sbb
push
ret
and
int
push
fnclex
mov
shlb
movsl
jmp
jg
mov
jb
xor
arpl
mov
ds
pop
mov
std
inc
add
jecxz
dec
arpl
loop
lock
mov
imul
inc
inc
lret
mov
outsl
xor
arpl
sub
fcmovnbe
xchg
pop
inc
inc
push
pop
pop
addr16
dec
mov
sarl
jg
add
xor
arpl
sbb
mov
adc
or
outsb
mov
mov
mov
cmpl
test
insb
xor
mov
mov
ds
mov
pop
loopne
push
dec
cmp
add
rcl
in
mov
sti
jge
xchg
lods
push
test
loope
xor
inc
clc
rol
pop
iret
lds
push
sub
bound
sahf
neg
icebp
xor
dec
mov
jmp
loopne
lock
pop
pop
mov
int3
and
jp
out
xor
pop
mov
mov
pushl
in
in
or
stos
adc
cmp
test
std
pushf
pushl
or
or
push
and
loop
ret
inc
cmp
bound
pushl
scas
dec
pop
imul
add
lods
int
js
and
out
mov
or
jmp
ret
sbb
sti
inc
pop
add
add
popl
cld
daa
pop
dec
inc
pxor
jg
add
insb
or
aaa
mov
or
inc
out
inc
sbb
push
fisttps
dec
cmc
cs
cmp
xchg
xchg
lahf
jg
cmp
jmp
sar
xchg
add
pop
in
cmpsb
clc
popa
inc
fadds
pop
decl
fisubrl
sub
clc
fadds
cmp
shrl
in
es
das
icebp
fildl
iret
cmp
js
flds
jae
lds
pop
loop
insb
mov
les
adc
scas
xchg
aad
mov
loope
test
mov
roll
xchg
clc
mov
call
jle
xor
movmskps
popa
bound
cmpl
jg
inc
inc
ficoml
fstp
orb
mov
stc
jle
jae
ljmp
xor
lds
std
loope
jae
ljmp
fldt
scas
xorb
mov
pop
mov
pop
daa
sbb
fwait
pushf
rcrl
ljmp
inc
lcall
and
add
and
loop
sar
mov
sbb
inc
push
shl
lea
mov
lcall
or
mov
push
or
pop
in
cmpsl
cmp
jnp
and
pop
mov
mov
xchg
dec
lods
inc
mov
hlt
jg
inc
cmc
stos
test
cmp
cmpsb
mov
sbb
mov
test
imul
mov
incl
fstl
dec
xor
stos
pushf
sub
dec
les
cli
scas
mov
mov
inc
mov
inc
loop
les
hlt
decl
cmp
sbb
mov
jg
int3
mov
add
and
sbb
cmpsb
int3
mov
mov
mov
sub
les
or
enter
jl
incl
dec
lahf
mov
push
dec
pop
xchg
pop
test
aas
xchg
fst
int3
xchg
mov
inc
xchg
fdivrs
insb
aaa
push
decl
fistps
dec
sbb
and
shrl
mov
in
pushl
cli
sbb
fimuls
sti
jns
adc
jg
pushl
mov
movsl
outsl
push
outsl
repnz
inc
mov
push
pop
push
push
push
lods
stc
rcrl
lret
jmp
das
test
mov
jecxz
or
sub
mov
mov
repnz
sbb
push
xchg
mov
fildl
xor
cmpsb
adc
sbb
cmp
das
and
mov
mov
roll
incl
scas
xorb
leave
mov
je
lds
cmp
adc
cmp
incl
cmp
dec
pop
aas
insb
popa
fldt
mov
lret
sbb
fs
jmp
jecxz
incl
mov
push
outsb
mov
call
pushl
dec
idivl
lahf
jno
pop
xchg
push
push
outsb
lahf
ljmp
sbb
jl
pop
mov
ds
lcall
gs
pushl
push
push
cli
pop
mov
mov
inc
js
gs
out
cli
loop
test
add
lcall
sbb
loop
lret
gs
test
ret
pop
push
addr16
in
das
inc
jecxz
xor
lcall
les
add
mov
or
loopne
push
lcall
add
push
repz
mov
pushl
mov
sub
ja
cmp
jnp
jnp
repnz
mov
push
xchg
testb
dec
push
fwait
or
pop
aad
jg
xor
adc
xor
lock
out
mov
cli
lahf
test
or
in
mov
or
int3
jbe
aaa
clc
scas
sub
xchg
mov
inc
cmp
ljmp
pop
fnstsw
pop
clc
dec
insl
mov
test
lret
mov
lock
jl
or
mov
ret
pop
cmp
add
outsb
sub
mov
pop
mov
pop
adc
in
roll
cli
movsl
lea
ds
xchg
mov
jecxz
mov
mov
jnp
dec
lahf
fcomip
lock
push
lcall
mov
sbb
jbe
dec
cmpb
push
aam
insb
add
jp
mov
xchg
out
or
mov
jo
push
lods
or
add
xor
jmp
mov
decl
movsl
lds
f2xm1
mov
idivl
mov
sbb
stos
sarb
dec
jmp
pop
mov
das
push
or
mov
into
mov
ljmp
cmpb
aam
and
mov
inc
adc
and
xchg
cltd
or
xchg
jp
pushl
das
push
mov
test
jbe
sar
mov
leave
mov
clc
mov
pop
ljmp
aad
xor
call
add
cmp
in
movsb
lock
mov
call
push
push
jg
ljmp
nop
mov
into
push
clc
add
outsl
and
test
mov
xor
and
inc
mov
je
jecxz
insb
scas
xchg
sbbl
jmp
jmp
movsl
pop
popa
mov
rcll
dec
jg
sti
jmp
sbb
icebp
shrl
ss
pop
mulb
jne
jnp
inc
ret
test
jnp
inc
xor
inc
nop
inc
cmp
push
decl
shlb
cmpsl
in
out
adc
das
cmpsb
xlat
sar
incl
std
cwtl
dec
mov
dec
jno
or
pop
jecxz
shll
push
xchg
fcmovbe
test
add
adcl
cmp
ljmp
jg
mov
pop
outsl
enter
cmc
mov
add
sub
loopne
mov
jmp
adc
aam
mov
mov
out
jnp
scas
movsb
mov
lock
lcall
repnz
aam
insl
ficompl
pop
mov
xchg
jg
fisttpll
imul
aad
in
adc
mov
pop
insl
cmc
jmp
push
test
mov
xchg
adc
cld
or
clc
jae
push
push
nop
dec
inc
popl
mov
sub
stc
xchg
test
cmp
mov
push
xor
dec
stc
or
aaa
pop
ret
leave
or
add
push
dec
popa
push
and
call
adc
scas
out
mov
inc
xor
push
cmp
cmp
push
test
clc
decl
test
adc
mov
and
jne
insl
or
mov
clc
decl
xor
xor
imul
lret
lods
add
adc
push
lret
dec
ljmp
jecxz
nop
or
or
sbbb
int3
mov
repz
clc
cmp
xchg
inc
add
sub
pop
xlat
add
fwait
xor
fdivl
aaa
push
mov
mov
call
sbb
cmc
lret
xor
mov
out
ljmp
sti
loop
jle
dec
cmp
aam
push
lock
jp
xchg
orl
addl
cs
push
popf
mov
ljmp
pop
loopne
sbb
add
pop
xchg
xor
mov
das
adc
ret
sbb
ja
pop
idiv
decl
hlt
pop
xor
imul
test
dec
mov
icebp
lods
pop
adc
test
cmp
mov
jl
dec
mov
aam
adc
jb
cld
incl
mov
shll
aaa
lods
shrl
ja
sahf
dec
mov
popa
add
pushl
fiaddl
mov
clc
sub
in
lret
push
mov
and
idiv
jmp
push
adcl
fs
movsb
shl
rorl
sahf
out
pop
adc
decl
stos
outsb
mov
push
fsts
push
mov
add
sub
test
jg
lods
jae
into
xchg
nopl
cmpsb
or
mov
pusha
jle
into
mov
aam
std
aaa
inc
jb
lahf
int3
add
pop
mov
xor
scas
lret
mov
or
test
push
jnp
cwtl
cmp
xchg
and
push
incl
into
dec
cli
mov
sub
dec
xchg
fstpt
out
testb
pop
movsb
imul
pop
out
jbe
aaa
test
inc
fldenv
dec
pushl
lahf
cmp
out
mov
push
inc
cld
lods
inc
dec
fbld
pop
call
movsb
pop
or
xchg
stos
pusha
idivl
fidivrl
add
subb
incl
imul
inc
xor
ret
mov
lret
jmp
hlt
pushl
clc
aas
dec
andb
addr16
fiaddl
and
mov
adc
jge
jmp
call
mov
mov
inc
test
std
fwait
mov
jns
in
iret
mov
cmp
fisubl
ret
dec
sbb
push
pop
jge
mov
outsl
push
and
outsl
lock
push
hlt
or
cmp
sbb
cmp
inc
ljmp
xor
movsb
push
add
mov
icebp
jg
jmp
cmp
cld
push
popf
ret
cmp
hlt
inc
pushf
dec
mov
sub
inc
jmp
repz
xchg
xor
sbb
push
xchg
scas
or
montmul
cmpsb
leave
fstpt
push
or
dec
outsl
adc
or
sbb
je
into
shll
repnz
push
jnp
notrack
and
imul
std
inc
jnp
test
mov
inc
mov
jge
outsl
cld
mov
lcall
clc
leave
lahf
lahf
jge
sahf
sbb
loope
das
std
cltd
jbe
cmp
inc
push
sahf
push
inc
mov
ficompl
push
jmp
inc
cmpsb
sub
fidivrs
push
mov
orl
jg
sbb
or
or
jbe
mov
bnd
lahf
ljmp
rclb
jne
pop
and
loope
adc
jge
lahf
shl
or
incl
or
xor
cmpxchg
xchg
mov
jmp
mov
ja
ret
test
pop
in
add
out
push
into
cmpsl
jge
xlat
rcl
in
xchg
mov
cmp
pushf
dec
inc
pop
insb
xchg
test
push
dec
jle
popa
ds
xor
ljmp
dec
and
repnz
repnz
lret
jg
ret
test
aas
icebp
shrb
lods
mov
push
push
inc
aas
ds
lea
cmp
jl
arpl
sarl
ja
pop
cwtl
jp
aam
dec
mov
dec
jmp
mov
cmp
mov
and
daa
adc
pop
hlt
add
das
into
aad
sbb
mov
mov
mov
or
sbb
lcall
dec
pushf
out
or
popf
bound
out
push
add
iret
cld
fsubrs
lds
popf
mov
mov
push
out
jecxz
inc
int3
pop
mov
incl
xchg
and
push
sti
adc
stc
js
dec
shrb
adc
mov
les
mov
push
mov
out
nop
push
dec
es
mov
into
pushl
fwait
add
insb
frstor
mov
lea
call
jg
out
negl
loope
jg
jmp
mov
jno
mov
int3
lods
sub
xchg
fwait
sar
pop
call
gs
iret
repz
stos
cmp
push
inc
mov
mov
inc
insl
ror
or
and
jb
in
push
enter
daa
jp
imul
aad
xchg
fwait
gs
sbb
xchg
ret
pop
or
aaa
push
push
mov
in
mov
pop
push
jmp
lcall
mov
aaa
mov
std
pop
mov
xchg
mov
repz
fiadds
aad
out
iret
clc
push
add
cmc
inc
jmp
mov
or
jbe
xor
outsl
mov
aam
sbb
push
shl
leave
mov
sbb
out
add
out
repnz
dec
ja
jp
push
xchg
inc
std
mov
sbb
rcrb
add
call
and
mov
rcll
jnp
scas
or
push
cmp
mov
cli
adc
sbb
lods
mov
dec
sbb
jl
test
jmp
pop
inc
mov
cmp
adcb
loopne
das
sub
decl
dec
incb
outsb
stc
andb
xchg
aam
sbb
adc
jmp
out
ficoms
pop
jmp
jg
jg
shrl
add
les
xorb
mov
push
leave
and
outsl
inc
cmp
lods
jmp
pop
dec
xchg
imul
push
in
dec
jnp
dec
fimuls
inc
outsl
std
jmp
push
sbb
ss
negb
cmpsb
dec
idivl
icebp
outsb
cmp
inc
stos
pop
and
adc
pop
loopne
filds
and
inc
jge
jb
pop
mov
bound
in
enter
sbb
incl
sahf
call
sbb
into
lods
loop,pn
mov
movsl
jno
fimull
add
inc
cli
outsl
xlat
test
in
mov
push
mov
pop
sub
jmp
jp
hlt
nop
test
loopne
aas
inc
outsl
push
and
pusha
in
push
push
and
jge
or
cwtl
jmp
jl
xchg
arpl
fs
xor
dec
enter
push
bt
xchg
and
ljmp
cmc
stc
xchg
sbb
ds
iret
sahf
sbb
mov
lcall
lret
fldl
rorb
sbb
mov
xchg
sahf
in
lcall
jmp
jge
adcb
fld
push
cwtl
scas
and
ret
mov
cmp
decb
lcall
xchg
sbb
ds
mov
mov
cmc
pushl
xchg
ficomps
repz
lds
jno
rcrb
lahf
mov
adc
jb
cmc
xor
hlt
incl
push
addr16
lods
rclb
add
repnz
outsb
mov
ret
add
jge
adc
pop
insl
sub
xchg
mov
mov
xor
xchg
pop
dec
push
mov
cmc
cltd
and
cmpl
lods
adc
xchg
push
jns
call
adc
cltd
and
jge
cmp
repz
dec
jge
and
movsl
imul
mov
popf
sahf
xchg
jae
sbb
push
into
in
or
mov
fchs
mov
arpl
mov
das
je
or
decl
adc
mov
out
sub
insl
inc
jge
adc
mov
dec
sarb
push
cmp
xor
fsubrs
imul
test
or
mov
pop
aad
mov
xor
fnstenv
test
aam
jns
pop
aam
xor
mov
shrb
insb
decl
mov
sub
sub
into
iret
or
ficoml
xor
dec
push
push
pop
clc
decl
or
mov
mov
sbb
stc
popa
push
andl
xorb
pop
lods
cld
test
cmove
test
cmp
sti
loopne
sar
lods
outsb
dec
inc
jae
fdivs
imul
test
in
movsl
ljmp
stos
cmp
in
xlat
xchg
test
or
mov
nop
rorl
mov
outsl
aas
pusha
ljmp
inc
movl
fisubl
push
push
adcb
das
cmc
lea
sarb
ja
ljmp
jb
pop
add
xor
insb
inc
iret
div
mov
stos
cmp
add
in
pop
mov
push
jae
or
sbb
xor
inc
sti
call
out
aas
popa
inc
sbb
dec
movsl
sub
into
push
jo
or
mov
pusha
add
rcll
stc
inc
inc
sarb
ljmp
push
jle
and
in
mov
pop
hlt
in
mov
sub
test
lods
call
into
adc
imul
call
inc
inc
xor
add
cmp
call
cli
or
adc
aad
adc
shlb
jo
cs
push
xor
sbb
ljmp
push
inc
int
add
push
scas
xor
mov
mov
ret
and
sub
jae
in
push
inc
xchg
jnp
sub
ret
mov
mov
fstpt
in
or
das
hlt
outsl
mov
mov
stc
dec
pop
xchg
jge
addl
andl
or
cs
addr16
xor
push
ljmp
les
or
jmp
dec
jne
scas
adc
lea
fsts
fdivr
cmpl
icebp
mov
sbb
jl
push
int
xchg
mov
sub
cmc
jns
nop
mov
je
test
jmp
repz
push
movsw
in
inc
push
movsb
test
jp
mov
pop
cld
out
pop
sub
sti
lods
incl
hlt
lahf
into
pop
dec
pop
fadd
mov
mov
sub
testb
mov
inc
out
xchg
icebp
sub
lea
aad
push
loopne
cmp
xchg
mov
xchg
add
hlt
lcall
lret
dec
and
push
lds
pop
fdivl
ret
pop
mov
push
cmp
add
call
mov
fs
cmp
in
int
pusha
and
jmp
xor
ret
pop
ret
xor
and
ljmp
or
and
addr16
jnp
xchg
filds
xchg
pusha
fs
adc
lahf
aad
addr16
adc
ret
push
pop
push
nop
mov
jne
add
xchg
lcall
cmp
xlat
loopne
fidivl
sbb
pop
fistpll
lock
fidivs
pop
fildl
adc
xchg
ljmp
in
loop
cmc
or
cmpl
cmpsb
and
jg
cmovae
scas
adc
scas
mov
loopne
ja
inc
xor
mov
sub
jecxz
scas
roll
dec
push
sbb
in
mov
xchg
shll
inc
aaa
adc
ret
adc
mov
scas
leave
call
pop
cld
mov
adc
xor
stos
sarb
incl
pushf
inc
or
in
clc
mov
dec
idivb
xchg
cmpsb
dec
push
imul
dec
mov
sbb
pop
cmc
jo
xchg
xor
shll
rcrb
jl
mov
test
pop
pop
or
dec
dec
push
sbb
icebp
lcall
das
lret
jb
clc
in
ja
mov
push
pop
lods
push
repnz
adc
ljmp
adc
ret
fmul
in
lds
sub
adc
inc
sbb
sti
jo
sub
sbb
and
stc
test
aam
inc
cld
mov
and
add
push
cltd
ljmpw
dec
mov
push
and
sbb
dec
push
mov
mov
cs
rolb
mov
xchg
jecxz
or
imull
pop
outsl
idivl
xor
std
and
call
mov
repz
add
stos
cmp
mov
pop
cmp
fiaddl
ljmp
jmp
in
fcmove
lock
stos
ret
std
out
and
std
test
adc
icebp
dec
iret
insl
stc
aaa
and
int3
pusha
or
add
das
fsubs
pop
popf
push
inc
push
aaa
cli
lods
adc
call
call
dec
ret
call
inc
or
in
jmp
and
negl
sahf
hlt
pushf
addb
sub
lcall
call
lret
and
or
and
sbb
pop
inc
cli
cs
lds
mov
mov
pop
push
jge
mov
mov
mov
test
xchg
fsubl
adc
loopne
sbb
mov
in
ljmp
push
fwait
mov
push
pop
inc
into
into
or
push
ficoml
or
mov
cmp
stos
jo
mov
or
aas
mov
jb
lcall
mov
jmp
pushf
inc
or
xor
into
stos
mov
pushf
and
cmp
out
adc
jle
vmovaps
dec
mov
fldenv
imul
mov
mov
ljmp
or
push
xor
aam
mov
arpl
mov
mov
pop
loop
incl
xor
bnd
or
stos
scas
push
cmpsb
sar
pop
ljmp
inc
cmc
xchg
jp
xlat
cmp
clc
dec
inc
arpl
dec
ffree
repz
sar
in
jo
shlb
push
cmpsl
pop
mov
es
call
sahf
mov
bnd
dec
sub
test
dec
fucomip
pushl
incl
pop
call
loop
mov
or
mov
pushl
sub
push
mov
dec
repz
pop
push
cmp
pop
neg
pop
ret
mov
mov
es
sub
xchg
jo
mov
adc
mov
loope
ds
pop
pop
ja
mov
cmpsl
js
ficompl
push
mov
pop
mov
xorl
pushl
push
mov
es
sti
xlat
test
fwait
pop
mov
js
jecxz
cmp
out
ljmp
lcall
lret
pushf
or
inc
in
pop
pop
sub
pop
add
hlt
scas
add
dec
jmp
or
jb
adcb
dec
or
mov
pop
add
loope
stos
push
adc
nop
aaa
cs
ret
push
nop
dec
lret
lods
bound
daa
mov
aaa
aam
and
push
mov
call
xor
fsubrl
cltd
dec
push
adc
scas
jne
dec
jbe
push
cli
mov
xor
push
lret
std
test
pop
jo
addb
sti
arpl
movsb
lcall
aaa
arpl
inc
sub
pop
jmp
imul
mov
sahf
mov
call
pusha
outsb
pop
add
add
dec
adc
scas
mov
dec
jg
jmp
fwait
ss
adc
xor
sbb
lea
std
arpl
push
cmp
add
cld
ljmp
stc
lahf
adc
rcrl
sbb
sti
addr16
fimuls
call
push
orb
cmc
out
mov
cmp
jl
adc
fists
inc
cmp
mov
push
dec
sbb
outsb
fimull
or
hlt
fistpll
adc
adc
or
add
daa
add
in
sub
sbb
sbb
push
in
idivb
jmp
xlat
hlt
jmp
push
in
push
adc
pop
ret
push
aaa
pop
sub
cli
outsb
lcall
pushl
xor
shlb
cli
jae
jns
imul
mov
loopne
cmp
scas
fiaddl
test
ljmp
xchg
iret
sub
or
insl
loope
cli
and
test
stc
sub
xchg
stos
jmp
incl
mov
mov
enter
out
and
aam
sbb
fimuls
fnstsw
mov
loopne
popl
pop
push
pop
push
and
decl
mov
sub
xchg
push
iret
popa
push
lgs
or
jae
lcall
rcl
xchg
adc
cld
push
les
mov
inc
push
adc
lcall
cld
pushl
push
inc
xchg
loopne
shrl
and
inc
das
push
xchg
out
sbb
pop
mov
in
xor
cmpsb
into
push
sub
test
fildll
jl
insb
leave
iret
fs
shrl
gs
cmp
jnp
sub
inc
jno
mov
out
xchg
cld
lcall
mov
clc
inc
and
mov
xchg
push
lcall
mov
jmp
mov
addl
cmp
imul
stos
daa
sti
sbb
lods
decl
inc
jge
mov
pop
sub
adc
push
out
mov
cmp
in
testl
jno
fidivrl
cmp
push
and
iret
aad
push
incl
xor
pinsrw
lahf
inc
adc
loopne
mov
and
aaa
addr16
pop
clc
ljmp
dec
addr16
mov
mov
loopne
das
adc
and
sbb
pushl
cli
mov
sbb
mov
movsb
inc
push
shl
ret
nop
sbb
inc
loop
push
mov
out
nop
jle
test
push
fwait
mov
orb
incl
call
outsb
add
mov
je
aam
jmp
or
dec
in
decl
aas
jnp
xchg
in
adc
mov
data16
fidivl
mul
std
jno
stos
add
and
push
mov
lcall
decl
loop
hlt
push
hlt
jbe
mov
pop
out
push
lods
push
mov
push
icebp
push
pop
mov
in
inc
mov
mov
movsb
mov
push
lcall
dec
push
ficoml
out
mov
shlb
mov
cltd
stc
aaa
jg
ljmp
iret
xor
and
jbe
dec
xor
mov
xchg
sub
mov
lods
lods
pop
mov
push
sbb
sub
mov
je
lret
mov
enter
jg
mov
data16
je
lds
sub
mov
sti
xor
aad
mov
in
jg
ds
repnz
notl
mov
into
mov
sbb
cs
ds
cld
and
clc
push
xchg
mov
loope
int3
jmp
in
or
push
sub
movsl
lds
and
sbb
ljmp
jl
ljmp
dec
and
pushf
mov
push
push
cmpb
push
mov
incb
add
xchg
adc
adcb
pushl
adc
ret
xchg
lret
jle
and
insb
out
xor
cmp
decl
decl
les
and
push
insb
jns
out
sbb
loopne
decl
fsub
add
jns
and
adc
mov
pop
cli
sub
std
ljmp
mov
xchg
fisubrs
out
imul
dec
mov
in
inc
push
mov
mov
cld
push
lea
pop
test
pop
lahf
shrb
sub
cs
nop
pop
xor
mov
mov
ret
test
jle
jo
lods
sub
test
xor
cli
out
inc
ljmp
jp
orl
adc
cmp
xor
fstps
mov
je
lods
xor
pushl
push
loop
dec
pop
addr16
aaa
jp
adc
les
add
jge
cmpsb
mov
clc
lcall
xchg
addb
test
and
or
scas
jge
dec
pop
loop
push
cmp
ret
test
or
ljmp
gs
push
xor
movsl
sbb
jmp
adc
mov
faddl
dec
push
jne
or
xchg
into
cmp
jno
idiv
ljmp
jno
fcmovnb
cmp
test
fstp
mov
int3
adc
mov
das
push
inc
jne
jg
js
daa
lret
push
or
mov
pop
fwait
outsl
std
ljmp
hlt
and
mov
pop
adc
ja
dec
push
dec
xchg
shrl
ljmp
leave
flds
ja
rcl
subl
lods
lahf
mov
lea
test
call
mov
loopne
mov
mov
cmpsb
inc
aaa
adc
loop
lea
aas
out
and
adc
aaa
pslld
and
mov
pop
ljmp
test
loopne
push
scas
cmp
mov
fucomip
pushl
mov
data16
lret
mov
enter
mov
decl
dec
jne
fs
js
sbb
mov
xor
decl
lods
mov
fcomp
adc
mov
cmp
dec
xchg
cld
adc
jmp
js
jmp
xchg
out
inc
mov
xchg
call
jg
jge
and
int3
orl
xchg
add
jmp
inc
lea
addb
xlat
add
inc
and
xchg
icebp
gs
lcall
je
or
cli
or
mov
and
jl
and
in
or
lea
ret
jnp
or
vcvtsi2sdl
sub
jle
orl
sub
idivl
scas
ss
addr16
mov
mov
sbb
or
jge
pop
pop
jg
call
lock
mov
mov
and
pop
push
add
jno
jg
call
pushf
lods
dec
dec
daa
loop
sbb
cs
int
call
adc
add
xor
or
sbb
mov
xchg
and
xor
push
into
loopne
daa
insb
or
mov
ljmp
fcmovbe
mov
loopne
and
push
stos
adc
pop
ljmp
mov
xor
test
adc
sbb
mov
and
sbb
jge
shlb
pop
loop
ljmp
inc
rolb
inc
cmp
or
out
jae
push
mov
jmp
jecxz
xchg
sbb
add
aas
mov
call
mov
dec
pushl
dec
cmp
aaa
lds
mov
negb
aam
adc
or
sbb
clc
jmp
popf
mov
insl
ret
adc
push
cmc
nop
ds
decl
pop
mov
data16
sub
jmp
xchg
fcmovnu
push
xchg
xor
push
pushl
ret
jmp
pop
mov
test
subb
in
push
stos
adc
jg
jmp
xchg
stc
pop
inc
cs
subb
jg
jmp
int3
cmp
dec
pop
inc
lcall
sahf
mov
into
or
cmp
decl
aas
flds
dec
jp
inc
inc
and
xchg
sub
je
test
cmp
and
mov
sbb
mov
xor
xchg
cli
push
fwait
sub
leave
pop
jg
mov
xchg
push
dec
loopew
dec
pusha
mov
call
ljmp
dec
add
adc
inc
je
lock
jp
xchg
jae
icebp
and
inc
decl
rcll
jmp
pop
cmc
jmp
lods
nop
gs
call
sbb
pop
mov
fimuls
rcr
xchg
loop
in
pop
lahf
addr16
call
xchg
cmp
sbb
mov
push
xor
ret
cli
incl
add
adc
adc
repz
shl
or
xchg
mov
xor
ret
aaa
cmp
fwait
mov
push
dec
lea
enter
mov
in
lods
clc
jmp
mov
jns
inc
std
or
out
int
mov
cmp
mov
out
jecxz
jg
pop
cld
adc
sti
repnz
pop
xchg
lahf
cli
pop
add
call
and
mov
fwait
pshufw
popa
push
pop
mov
enter
fildl
repz
sub
fistps
jo
popl
xchg
or
cmp
inc
mov
xor
jmp
mov
xchg
gs
int3
stc
enter
in
mov
sahf
sahf
sti
incl
rol
sbb
dec
and
aas
push
jl
mov
ljmp
jge
cmpl
outsb
sbb
les
xchg
imul
lcall
shrl
inc
mov
jno
les
jl
and
jbe
mov
jne
repz
jg
aad
pop
adc
jmp
fidivs
sbb
incl
dec
in
out
sbb
loop
pushf
jg
call
mov
ret
adcb
fldcw
jno
test
pushl
push
mov
xchg
sarl
pop
int
stos
call
mov
mov
xor
adc
movsl
sbb
nop
incl
icebp
jg
andl
leave
fldenv
mov
arpl
jne
dec
out
inc
pop
test
f2xm1
jp
mov
jg
filds
jns
mov
xor
or
pop
sub
jle
test
incl
scas
out
mov
mov
adc
xchg
sub
das
mov
adc
das
mov
xor
clc
mov
out
xor
cmpsb
scas
mov
lock
push
pushf
aam
sti
sbbl
lcall
jbe
movsb
dec
add
jb
sbbb
jmp
mov
mov
xor
and
lock
pop
in
push
or
jp
cmpb
shr
push
rorb
mov
mov
call
mov
aad
out
jae
and
jmp
inc
push
xor
push
pop
sub
daa
loopne
cmp
call
cmp
negl
xchg
data16
dec
adc
test
out
mov
jno
or
xor
add
jnp
scas
jecxz
movsb
mov
mov
sub
cmp
jnp
inc
sbb
cmp
jle
pop
mov
inc
cld
sub
popf
out
jg
push
adc
jl
fadd
pop
sbb
fdivrl
cmp
and
push
nop
dec
mov
jg
pushl
and
pop
mov
cmp
into
add
andb
cmc
lcall
in
sti
cmpsb
icebp
test
stos
arpl
sub
insb
in
or
out
jno
jle
mov
rcll
adc
enter
inc
push
imul
shr
jg
mov
stos
adc
dec
pushfw
xor
dec
jmp
scas
in
sub
or
cmp
cmp
jmp
jns
lds
es
jns
pushf
mov
cmp
iret
pop
pop
pop
jmp
mov
movsb
aaa
pop
or
jmp
inc
fldenv
push
sbb
testl
imul
sar
call
xchg
mov
les
mov
rcl
mov
mov
out
mov
or
mov
add
fstps
ljmp
xor
jb
mov
fwait
push
fildl
imul
test
decl
ret
mov
cmp
fisttpl
and
xchg
es
jg
pop
sbb
fucom
add
cmp
jl
push
push
cmpsl
subl
ret
push
movsb
lods
jp
std
mov
addl
push
aad
and
mov
mov
rorb
nop
jb
shll
les
sti
mov
xchg
dec
cmp
rorl
sbb
sub
jg
scas
inc
ret
std
mov
ds
xor
rcll
xor
clc
sar
jbe
cmp
dec
test
test
mov
cmp
fidivrl
mov
call
das
out
mov
outsl
loope
dec
lods
add
loop
rclb
aas
push
pop
shr
jle
dec
mov
fmuls
jbe
mov
dec
pop
aaa
mov
xchg
sub
dec
mov
adc
cmp
mov
mov
mov
mov
inc
add
push
xor
test
notb
lcall
insb
xor
mov
add
dec
fsubl
dec
pushf
icebp
aaa
cmp
insl
jle
clc
sub
pop
repz
ljmp
lods
cmp
fs
add
rclb
push
lret
fsts
ror
rcll
clc
call
out
cmpsb
in
sub
fcomi
xchg
lret
repz
int3
fistps
push
call
pop
xchg
fisttpl
jo
andl
outsb
aas
popf
sar
mov
adc
mov
jnp
xchg
sbb
pushl
mov
pop
cmp
dec
or
call
mov
call
inc
mov
repz
adc
or
shrl
test
stc
loope
sbb
lods
test
inc
mov
pop
outsl
mov
test
push
stos
mov
jno
stos
mov
daa
lcall
sub
rcrb
out
push
data16
jg
lfence
cmp
mov
mov
add
and
jne
or
push
dec
ljmp
cli
jb
cmp
inc
lds
shlb
aaa
mov
call
stos
jg
xor
or
imul
mov
out
call
jp
es
loope
cli
sub
and
push
aam
cmpl
call
aaa
dec
imul
push
outsb
jge
mov
lods
adc
inc
fisubrs
pushl
lds
fstpt
dec
lods
pop
dec
cmp
scas
pusha
fdivrs
cmc
and
cmp
jle
mov
cmp
popf
xchg
popf
sub
jg
dec
or
xchg
lock
enter
pop
inc
rclb
sbb
imul
test
sbb
or
fiadds
xor
les
aad
stos
sbb
adcl
leave
outsb
or
mov
outsl
and
push
sbb
mov
xchg
pusha
add
inc
sub
lcall
adc
lock
pop
push
xor
mov
into
adc
incl
std
bound
or
icebp
push
push
in
sbb
stos
ret
hlt
xchg
lret
aaa
stos
ljmp
mov
xor
push
in
dec
loopne
cld
cmp
push
das
inc
jbe
add
in
scas
nop
xchg
or
mov
stos
shlb
dec
jbe
dec
inc
lret
xlat
and
mov
cmp
enter
cmp
mov
insl
pop
lods
rorl
jmp
sub
pop
mov
jmp
ret
sahf
cli
jmp
sbb
out
into
push
add
jbe
cmp
imul
mov
jmp
pop
pushl
jmp
sahf
das
sub
lock
aaa
rclb
imul
cmp
mov
push
jg
and
pushf
jl
or
jo
stc
shlb
rolb
decl
dec
repz
ffree
jns
lcall
or
into
cltd
mov
cld
jle
pop
jne
aad
mov
xchg
pmovmskb
dec
divb
dec
add
loope
push
dec
das
add
nop
xchg
mov
and
sbb
or
pop
and
ljmp
cmc
pop
cmp
mov
arpl
rcl
mov
cmpsb
pushf
out
loopne
mov
shlb
outsb
xor
cwtl
dec
sub
xor
cmpsb
aam
push
scas
sub
int3
mov
cmpsl
test
inc
iret
or
fst
pop
add
push
push
clc
out
arpl
mov
jmp
mov
mov
leave
fidivrs
mulps
mov
lcall
push
pop
mov
shl
cli
lods
add
das
call
jl
pop
pop
fucomp
cltd
mov
add
xchg
cmpsb
mov
adc
ficomps
nop
sub
mov
ljmp
stc
hlt
aam
and
jae
jb
test
and
sbb
push
jle
mov
jno
push
and
lock
dec
popa
faddp
cmp
xor
fs
fsubrp
sarl
leave
xor
hlt
outsl
xor
adc
push
jno
ljmp
sti
and
xor
mov
xchg
mov
mov
dec
and
call
jle
pop
cmp
insb
adc
jmp
dec
mov
jge
pop
xchg
fsubp
out
xor
arpl
inc
outsb
fucomip
incl
xchg
jp
aaa
add
cld
xor
mov
xor
decl
std
xchg
pop
es
mov
into
idivl
dec
adc
inc
cltd
ss
fildl
mov
test
or
into
mov
pop
jo
sub
mov
or
push
hlt
stos
push
and
cld
mov
push
or
pop
push
jnp
mov
fcomp
aad
cli
jmp
call
in
cmp
hlt
push
lods
aad
pop
popa
jge
mov
xor
int
mov
std
mov
lret
mov
movsl
inc
imul
sar
jmp
xor
mov
inc
arpl
pop
lret
lahf
std
in
repnz
out
bound
fists
mov
xchg
outsb
hlt
les
add
mov
gs
cmpsl
xchg
mov
lea
popf
scas
cli
inc
dec
dec
enter
xchg
pop
cmpb
outsb
mov
sub
fdivrs
pushl
xor
movsl
push
dec
and
lock
shrb
dec
jge
adc
jnp
sar
fildll
or
dec
mov
sub
mov
daa
cmpsb
inc
mov
loopne
mov
std
in
push
pop
xchg
sbb
nop
pop
sub
lcall
pop
scas
inc
sub
push
in
mov
lods
dec
jno
sub
cs
loope
decl
mov
leave
cs
adc
mov
adc
adc
or
aas
arpl
scas
lods
call
subb
mov
mov
in
mov
sarl
lcall
std
jmp
out
out
dec
lea
aaa
mov
arpl
fisubl
xor
dec
cmpl
sar
pusha
dec
fidivs
dec
lds
adc
pop
gs
aam
inc
mov
dec
outsb
mov
stos
jae
jp
dec
push
dec
push
jg
cmpsb
xor
lock
fwait
push
or
mov
iret
mov
in
add
push
mov
add
inc
in
or
add
inc
adc
jo
dec
mov
adc
pop
call
sub
mov
inc
mov
pop
fisubs
sub
mov
sahf
leave
fdivrl
and
in
decl
push
adc
adc
lods
lahf
aam
sub
jnp
das
insl
pop
decl
mov
in
mov
mov
jg
enter
notb
decb
movsl
jnp
jp
jnp
push
ss
push
jg
in
rorl
jmp
fs
lock
push
ror
pop
dec
icebp
test
xchg
sbb
lock
adc
fiadds
push
test
shll
fcoml
data16
cmp
mov
pop
in
movsl
lret
inc
dec
and
and
pushf
sub
xor
xchg
in
lods
ljmp
insb
aas
icebp
mov
fs
in
iret
add
xchg
aaa
idiv
pushl
addr16
stos
fcompl
bound
mov
imul
pop
loop
add
cltd
and
xor
pop
mov
pop
mov
inc
out
jno
inc
enter
aam
insb
mov
pop
rclb
pop
add
fiadds
jp
iret
rcr
sbb
data16
in
mov
mov
push
outsl
movlps
xchg
fldcw
jecxz
int3
fisubs
push
cmpsb
mov
sub
jecxz
test
in
popf
sub
inc
enter
stc
scas
mov
add
mov
lret
jg
sub
jne
mov
addl
fidivrs
movsb
pop
dec
mov
xor
aam
jl
jnp
js
push
mov
mov
sbbb
andb
push
lahf
dec
mov
lcall
scas
add
mov
hlt
cmp
outsl
inc
dec
and
fildll
shrb
mov
xor
sbb
pushl
das
xor
rol
scas
or
fldl
test
pushl
push
vmwrite
push
pop
in
lock
pushl
mov
sarb
lret
add
lret
lods
xchg
dec
icebp
jg
ficompl
cmc
mov
shrl
inc
mov
dec
dec
or
or
inc
idivl
and
jmp
sbb
cli
pop
inc
cmp
and
mov
clc
xchg
mov
pushl
mov
lock
in
xchg
cmp
mov
or
int3
fs
and
xor
outsl
incl
out
orb
jg
sbb
dec
cli
lods
jne
ljmp
or
insb
stos
cmpsl
nop
ret
das
or
cmp
insb
negl
incl
dec
mov
dec
dec
jle
daa
popa
xchg
dec
fistl
insl
mov
cli
add
mov
sbb
or
and
decl
xor
test
jae
mov
cmp
repnz
loop
pushl
jp
xchg
cmp
shll
insl
mov
out
in
mov
jno
call
sbb
pop
icebp
xor
cs
mov
in
xchg
mov
sbb
mov
emms
jle
or
or
in
arpl
scas
dec
add
loopne
ja
cmp
aam
xor
popa
dec
sbb
out
and
inc
cmp
dec
addr16
cmpsl
jp
pop
fdivr
loopne
loope
add
and
call
jg
mov
cmp
jge
mov
mov
pop
or
movsl
pop
cli
outsb
icebp
jmp
fisubrl
xchg
dec
mov
xor
jmp
jecxz
xchg
or
mov
xlat
mov
jl
sbb
xor
mull
in
loopne
loop
fmull
call
add
call
or
lret
pop
dec
xlat
cmp
fwait
pop
leave
movsb
out
jmp
push
xchg
pop
sarb
mov
shll
mov
lahf
cmp
dec
xor
sbb
inc
test
das
mov
jge
xchg
cli
mov
xor
and
ljmp
call
cmc
call
pushl
out
cmp
adc
add
loopne
daa
loopne
push
sub
dec
ret
aad
mov
mov
test
ret
outsl
in
sar
ds
daa
out
mov
mov
mov
lea
mov
in
sbb
movsb
adc
cmc
adc
call
sbb
and
xchg
adc
mov
ljmp
test
ret
inc
cmp
xchg
dec
test
fldlg2
pushf
or
ret
out
mov
call
sbb
jmp
out
inc
or
xor
cmp
pop
clc
incl
pop
xchg
cmp
xchg
jl
push
sbb
mov
mov
push
inc
push
pop
mov
mov
adc
inc
sbb
jg
imul
das
aas
add
in
xlat
push
sbb
call
daa
ja
lea
fnsave
sbb
ds
mov
leave
push
ret
loopne
inc
rorl
bound
xchg
xchg
clc
dec
add
test
scas
xor
add
ss
call
mov
xorb
ja
pop
adc
push
dec
test
call
or
lods
lcall
jmp
xchg
pop
imul
repnz
jae
stos
push
cwtl
incl
pushl
inc
or
xor
dec
test
add
inc
js
jge
ljmp
call
leave
inc
xchg
inc
sub
aam
and
mov
add
les
cli
decl
std
ljmp
fidivs
dec
or
das
push
sub
bound
stos
pop
mov
cmp
sar
dec
gs
cmpsb
rorl
lods
xchg
and
aam
adc
push
pop
std
ljmp
dec
pop
pop
sub
int3
mov
xchg
dec
incl
cli
lods
pop
pushf
add
lods
ja
and
movsb
pop
lcall
lahf
xchg
pop
lret
cmp
outsb
movsb
ljmp
mov
addps
cli
ljmp
hlt
cmpsl
mov
lret
push
movl
clc
inc
and
pop
sbb
lock
scas
inc
xchg
or
clc
orl
shl
xor
aas
sbb
push
aam
rorl
call
call
insl
fistpll
outsl
sub
mov
inc
sbb
in
test
cmpsb
push
pop
std
inc
sub
push
or
inc
mov
rol
data16
cmp
adc
inc
lock
fmuls
dec
js
jp
gs
lcall
outsl
pusha
xchg
cli
in
xor
cmp
add
sbb
test
pop
add
call
sub
jmp
xchg
pop
out
out
adcl
ljmp
fsubrs
mov
push
add
lcall
cmp
mov
mov
sub
ror
cmp
sbb
insb
mov
addr16
sbb
mov
inc
add
arpl
xor
movl
incl
iret
sbb
jo
std
dec
mov
cmp
jge
sar
pop
loopne
sbb
test
scas
cs
iret
push
push
ljmp
jbe
int
test
cwtl
fld
lcall
mov
mov
inc
loope
out
cltd
ret
fdivrp
pop
loopne
sbb
insl
cmp
loope
out
rcrb
mov
clc
imul
sbb
push
pusha
shll
mov
cs
incl
lcall
add
lods
daa
xchg
and
sti
mov
mov
dec
cld
lcall
pop
jbe
dec
lahf
addr16
ret
sbb
jge
daa
dec
into
out
or
call
cmp
mov
arpl
shrb
cli
fbstp
mov
repnz
jg
cmp
les
jno
pop
leave
out
mov
pop
sub
mov
jg
sub
cli
and
sbb
xchg
in
push
mov
lcall
bound
outsl
icebp
fwait
mov
repnz
push
or
sbb
jbe
gs
decl
xchg
mov
and
in
js
outsb
leave
xchg
filds
cmc
jmp
call
or
add
sar
mov
jmp
inc
lods
lret
mov
mov
push
call
shl
scas
or
dec
push
out
push
stc
push
sub
cmpl
add
and
add
lea
das
pop
inc
xchg
fucom
xchg
jle,pn
mov
mov
xlat
les
xchg
cmpsb
sbb
jl
sbb
in
jge
mov
push
call
sub
mov
push
movsl
test
xchg
popa
aad
ret
das
inc
cmp
idiv
incl
sbb
jne
ss
fwait
inc
mov
cmc
mov
imul
mov
jmp
sub
call
mov
enter
dec
and
sub
loope
ret
jb
mov
or
imul
xlat
test
inc
cmp
std
pop
pop
adc
int
mov
sbb
ljmp
mov
fidivs
jns
or
mov
call
cmp
pop
adc
arpl
push
mov
sarl
mov
pop
mov
das
pop
fdivrl
xchg
inc
dec
out
jb
lds
mov
adc
lcall
inc
fsubl
pop
divl
js
or
pop
or
xchg
fsub
inc
sub
mov
repz
leave
jecxz
dec
cmpsb
and
cs
jno
clc
scas
mov
mov
clc
sub
cld
mov
sub
cmp
xor
cld
inc
mov
sarb
adc
test
and
mov
enter
mov
jns
pop
xchg
pushf
sbb
ljmp
std
mov
mov
xchg
popa
cmpsb
stc
sbb
popa
sub
sub
mov
andl
jg
lock
cmp
movsb
xor
mov
addb
and
mov
jnp
lret
mov
jecxz
adc
aas
xor
out
xchg
pop
or
aas
dec
jae
les
repnz
fnstsw
mov
mov
dec
inc
sti
fbstp
lods
pop
sub
dec
outsl
aas
push
stos
adc
andl
adc
pop
lods
jo
mov
pop
xchg
sub
icebp
jle
inc
cmpsb
insb
mov
and
jmp
out
inc
daa
push
jle
add
nop
sub
rcrl
gs
loope
je
push
jp
jle
push
mov
decl
cmc
lods
xchg
jbe
xadd
icebp
sub
dec
cmp
xchg
ljmp
in
es
roll
jle
mov
sub
insl
js
xchg
hlt
cmpsb
sub
call
fcomip
jp
je
imul
rcl
ljmp
mov
xchg
dec
mov
call
cmp
mov
daa
xchg
inc
shrb
jmp
sub
decl
mov
sub
or
sbb
push
ret
mov
pop
rclb
push
std
and
push
and
pop
insb
rclb
data16
jg
incl
pop
sarl
jne
pop
fdivrl
jge
lret
xor
frstor
ds
jmp
pop
cmpsl
add
mov
sub
sub
dec
pop
call
push
decl
idiv
push
movsl
sbb
in
sbb
mov
mov
movsl
inc
dec
xchg
adc
jecxz
mov
test
popf
in
mov
scas
add
ljmp
shlb
xor
lcall
jle
test
push
imul
inc
pusha
or
cmc
arpl
and
push
mov
pushl
sbb
adc
or
adc
shl
jo
aas
lcall
jmp
mov
ja
cmpb
pop
cld
ja
fnstenv
pop
mov
jns
sbb
pop
xchg
negb
scas
adc
sub
mov
incl
cmp
jne
hlt
imul
mov
idiv
pop
cli
lcall
dec
sub
loop
divl
pushf
lods
testl
lds
cmp
ljmp
pop
divb
aam
pop
arpl
push
xchg
mov
in
addb
incl
or
rol
sbb
jnp
cs
mov
dec
bound
sub
call
in
test
movsl
pop
imul
decl
sahf
inc
lds
repz
mov
aas
cmp
pop
dec
adc
mov
inc
and
cmp
mov
imul
movsl
cli
xchg
jno
mov
lcall
fimull
out
sbb
addr16
or
inc
lea
insl
hlt
jmp
ss
jno
aam
setl
jg
sahf
adc
xor
mov
addr16
hlt
adc
inc
fcmovnbe
pushf
cmc
mov
test
clc
jmp
cmc
shll
mov
xor
icebp
imul
ljmp
pop
cmpsb
fs
pop
shrl
jmp
mov
lds
sub
jne
into
jbe
or
movsl
xor
call
jne
movsl
aam
inc
fmulp
xor
push
or
sahf
gs
xor
fwait
mov
jecxz
lcall
mov
mov
add
xchg
or
sub
mov
push
pop
mov
mov
adc
xchg
fildll
incl
fwait
loope
pushf
fimull
sbb
loope
lods
pop
shlb
call
lock
mov
out
sti
ficomps
xor
xor
push
pop
lock
pusha
mov
test
mov
and
and
sub
or
mov
jle
add
ljmp
xor
test
imul
jg
jecxz
lds
add
mov
or
push
repnz
jmp
ficompl
pop
fdivl
es
out
sub
sbb
mov
test
lahf
mov
arpl
jg
fcomps
inc
mov
mov
sbb
insl
insl
call
orb
movsb
test
jle
loop
je
and
jno
push
jns
jl
popf
add
jp
mov
sti
cmp
and
sti
adcl
inc
add
in
xchg
leave
fs
cli
lcall
adc
add
leave
pop
fldcw
jg
out
fs
pop
pop
cmp
pusha
lahf
scas
adc
fildll
xor
data16
in
and
inc
sbbb
adcl
fmuls
jmp
xlat
add
ljmp
lret
dec
fadds
cmp
and
ret
mov
push
inc
cmpsl
rcll
stc
loop
cmc
popf
call
sbb
ds
int3
dec
adc
inc
pop
outsl
adc
push
xor
jmp
xor
pushl
lret
xor
xchg
sub
loope
popf
adc
ljmp
je
push
fs
mov
stos
lret
mov
mov
aam
pushl
enter
test
pop
xor
push
stos
push
je
decl
mov
sbbb
rcr
jbe
inc
add
xchg
decl
clc
dec
push
popw
add
pop
xor
in
mov
xor
pop
imul
lods
lods
mov
aam
mov
sbb
sub
call
stos
cwtl
rorl
pop
add
cmp
push
fbld
mov
pop
ret
and
pop
or
lock
jl
sub
jle
out
lock
add
rolb
cwtl
insb
fstpt
outsb
repz
jne
adcl
decl
sbb
outsb
fldt
enter
sbb
cli
inc
inc
push
mov
or
xor
dec
push
aam
loope
adc
jg
mov
test
mov
and
jae
and
sub
mov
fsubr
daa
subl
filds
jmp
cmp
clc
push
or
hlt
sbb
mov
incl
add
jmp
adc
xor
lcall
cmp
out
fdivs
mov
stc
aas
adc
cmpsb
and
jl
adc
push
mov
inc
and
nop
cmc
jl
sub
test
lods
add
ljmp
pop
lea
test
inc
xor
call
jne
mov
dec
jmp
mov
aaa
push
jo
movb
je
or
mov
mov
rolb
pop
inc
loopne
pop
in
cmpl
outsl
xor
dec
addr16
ljmp
push
and
dec
cli
out
cld
sbb
lods
push
fucomip
push
mov
hlt
jmp
sbb
addr16
xor
push
jecxz
mov
leave
ds
jge
lcall
adc
js
popa
leave
mov
lret
jno
xchg
push
sahf
cmp
adc
gs
les
pop
or
sub
dec
test
xchg
pop
ljmp
std
dec
jmp
cli
mov
dec
pop
mov
insb
pmulhw
xlat
mov
popf
push
xchg
pop
adc
loopne
stos
jmp
mov
movsb
mov
mov
mov
pop
scas
call
int3
jmp
and
ds
repz
and
repz
jno
pop
cmpsb
cs
fbld
push
push
push
mov
scas
jo
sbb
in
lahf
pop
push
and
ljmp
adc
or
clc
or
jecxz
std
push
repnz
fs
pop
jno
movsb
cs
mov
sbb
mov
mov
scas
cmp
std
scas
jnp
movsl
mov
enter
ds
mov
incl
push
or
mov
mov
xor
shrl
push
jle
into
orl
mov
inc
leave
mov
das
icebp
fisubl
test
lahf
push
shrb
pop
pop
repz
cmp
call
call
out
xor
cli
gs
push
mov
jle
outsb
ds
mov
je
or
mov
push
push
ret
pop
aam
mov
cmp
push
lock
pushl
lret
loope
mov
test
push
add
jmp
mov
pusha
enter
popf
cmp
bound
push
inc
sbb
mov
lcall
lret
pop
mov
lahf
push
inc
fistps
pop
cmpsb
clc
outsl
sar
test
mov
adc
movsl
sbb
outsl
jnp
sbb
jbe
mov
sub
mov
and
xchg
xchg
sub
dec
cmp
lock
enter
call
nop
fwait
xor
mov
in
xchg
pop
xchg
inc
daa
loopne
mov
pop
add
cmpsb
sub
scas
mov
lock
jmp
jg
pop
test
fidivs
and
mov
xchg
les
cmp
mov
mov
fdivrs
lcall
aad
mov
outsl
xchg
sahf
mov
fstpl
jge
pusha
dec
std
sub
xor
mov
inc
jle
test
sub
inc
fwait
repnz
call
int
scas
repnz
in
fsubs
lret
push
movsl
std
mov
out
lods
in
ja
cmp
mov
out
push
jb
fiaddl
int3
lds
or
in
fldt
fmuls
lds
mov
mov
ucomiss
mov
mov
shrl
testl
pop
outsb
std
cmp
push
cwtl
stos
pusha
movsb
in
lock
and
std
das
lock
or
dec
inc
lahf
rol
mov
insl
orb
cli
outsl
test
ret
sub
test
mov
jge
dec
imul
jne
sbb
aas
jmp
cld
push
push
fnstsw
jmp
push
mov
insl
push
cmc
stc
out
push
inc
lock
mov
daa
jbe
bound
mov
push
mov
mov
int
out
inc
mov
incl
icebp
sti
cmpsb
lock
jle
mov
fldl
xchg
inc
lahf
cld
and
call
jne
or
and
xor
fildll
xchg
mov
daa
mov
lcall
popa
sub
in
mov
jo
inc
jnp
sub
pop
gs
call
push
push
mov
xchg
shlb
dec
ficoms
lock
fnsave
popf
push
loop
pop
mov
insl
push
filds
sub
inc
xor
mov
rcll
fimuls
mov
popf
sarb
jae
testb
cmpsb
mov
jnp
adc
or
mov
decl
data16
sbb
sub
mov
inc
and
test
mov
xchg
roll
data16
out
sbb
ljmp
xchg
outsl
cmc
ljmp
cmc
fidivs
adc
jge
movhlps
cmc
xchg
lcall
jmp
and
push
movsl
in
scas
sub
sbbb
clc
push
xor
mov
ljmp
inc
lret
xor
fwait
sub
jg
push
int
jecxz
and
inc
sbb
add
sub
add
fsubrl
mov
dec
mov
insl
int
imul
sub
xchg
sahf
inc
pop
decb
adc
fistl
es
outsl
jle
mov
dec
jo
aam
scas
mov
push
or
stos
sbb
or
data16
ljmp
push
mov
mov
pop
mov
std
stc
sub
scas
inc
sub
test
decl
push
dec
lea
cmp
nop
fistpll
shr
sbb
mov
and
ret
inc
lcall
mov
xor
dec
pop
orl
loope
xchg
filds
rorl
es
cli
pop
std
incl
sarb
xchg
fldenv
mov
jge
cli
test
jo,pt
mov
push
test
sbb
ret
pop
xchg
push
pop
inc
cmp
cmpsl
jns
lcall
inc
testl
rorl
mov
icebp
sub
bound
cmp
adc
std
fimuls
test
jno
out
and
xor
inc
call
push
insl
loop
leave
and
jg
mov
push
mov
stc
mov
xchg
sub
mov
sbbb
adcl
ret
mov
call
call
push
int3
xor
dec
push
out
fxsave
and
sbb
pop
mov
aaa
mov
ljmp
outsb
les
xor
add
lcall
and
fucomip
mov
dec
in
inc
adc
jmp
cli
int
xlat
ljmp
pushl
sahf
orl
and
push
testl
mov
jmp
sub
out
jecxz
mov
sub
icebp
add
push
ljmp
lock
pop
popf
aad
das
notb
data16
ljmp
incl
jmp
mov
mov
pushf
and
mov
ret
sub
and
or
ljmp
iret
daa
cmp
subl
aaa
leave
pop
nop
jl
dec
cmpsl
push
inc
sub
add
in
mov
ljmp
cli
mov
jmp
int3
add
sbb
pushfw
call
std
jmp
imul
mov
jne
out
imul
loopne
adc
std
cmp
into
inc
push
ret
pop
inc
adc
mov
pushf
add
cmp
adc
cmpb
ljmp
push
popa
mov
sbb
icebp
xchg
jne
jae
adc
cwtl
repz
lahf
xor
mov
pop
adc
into
mov
outsb
loopne
icebp
sbb
call
sbb
jp
dec
xchg
mov
xorb
mov
cmc
call
fisubs
jge
test
popl
movsl
fcoml
lock
aam
call
pop
xchg
pop
cmpsl
out
push
xchg
sti
jge
push
es
and
push
inc
fsub
cli
push
add
mov
mov
movl
mov
aam
aam
je
shl
mov
adcb
mov
js
add
inc
dec
fwait
jo
push
fwait
mov
aad
addr16
test
mov
jg
push
call
ja
xchg
mov
jge
fldl
lea
xor
add
lret
push
rclb
popf
dec
clc
adc
mov
outsl
adc
outsl
pusha
pusha
sbb
xor
enter
inc
aad
mov
test
mov
push
scas
jo
and
idivl
fs
iret
scas
testb
lock
jg
pop
imul
or
je
add
faddl
mov
push
mov
xor
out
add
push
add
pushf
mov
aam
pushl
cli
stos
rcr
pop
stos
imul
inc
fdivl
push
mov
ja
int
add
mov
cmpsl
shrb
fsub
ljmp
int
mov
cmp
sub
pop
hlt
ja
mov
ljmp
cli
je
inc
ss
dec
cmp
xchg
sub
mov
loop
aas
sub
decl
dec
lret
push
iret
bound
push
pop
add
fisttps
sbb
lcall
aaa
jge
sub
mov
and
and
jae
cmp
pop
cmp
enter
jg
outsb
jp
addr16
fidivl
ret
mov
decl
or
jmp
inc
lods
cld
in
incl
gs
xchg
add
in
mov
ret
dec
jg
xchg
push
xor
stc
decl
fcoms
jno
mov
mov
mov
icebp
enter
inc
add
fdivr
jo
scas
inc
xor
add
sarb
lock
jmp
repnz
movsb
pop
jmp
xlat
sub
aad
ret
inc
loopne
inc
push
xchg
xor
sti
das
iret
stos
jle
arpl
out
mov
jnp
sub
cli
pushl
outsl
or
inc
notb
daa
out
mov
pop
push
loop
popf
popf
cmpsl
or
push
xchg
shlb
push
outsb
jg
push
das
stos
mov
add
inc
cmp
push
adc
mov
imul
call
push
divl
jge
faddl
test
dec
mov
pop
lea
aad
dec
dec
and
inc
in
popa
cmpsb
sbb
repz
mov
sar
mov
cltd
sbb
jno
mov
cmp
ljmp
and
and
mov
jb
push
add
cld
add
dec
mov
lret
decl
aas
sub
add
mov
jo
jle
inc
dec
xor
decl
jg
lahf
add
aaa
xchg
mov
popa
mov
das
push
call
lret
cmpsl
fnsave
flds
aam
bound
call
out
inc
cli
in
popa
xor
cmpps
xchg
sar
outsl
icebp
aaa
jmp
xor
mov
inc
or
pop
std
pushl
push
inc
dec
jae
xor
ror
cmc
ret
mov
jmp
add
sarb
roll
adc
push
cli
cmp
push
push
pop
push
rol
ljmp
xchg
xchg
daa
xchg
inc
fwait
mov
push
arpl
and
mov
xor
pop
test
cmp
cmpl
pushl
movsb
jne
data16
into
imul
and
outsl
cmc
push
pop
or
mov
xchg
iret
pusha
xor
push
add
sbb
decl
and
adc
cmp
and
jb,pt
dec
ja
arpl
jb
scas
xchg
fs
incl
push
insl
push
sbb
outsl
lods
pop
mov
jb
stos
enter
out
das
push
mov
decl
dec
mov
and
mov
mov
jb
sub
fisubrl
inc
enter
mov
hlt
aam
sbbb
pushl
mov
pop
popf
sbb
and
sub
cmovo
ja
lret
in
mov
mov
fsubl
rcrb
pop
imulb
xchg
jle
shll
mov
inc
push
mov
fildll
and
aas
push
lds
dec
mov
repz
inc
iretw
je
push
inc
inc
das
cmc
inc
dec
adc
cmpsb
dec
imull
test
push
lcall
sub
mov
int
fildll
mov
cwtl
dec
hlt
or
arpl
movsb
leave
push
cmp
pop
xchg
scas
sub
or
pop
clc
std
fldcw
sbbl
sub
xor
gs
decl
aaa
sti
push
arpl
inc
cmp
xorl
cmp
or
in
and
shr
inc
push
xorb
stc
jno
testl
mov
fildl
or
xchg
and
cmp
rol
fsubl
jecxz
out
stc
cmp
in
push
xchg
decl
xchg
xor
ljmp
ljmp
mov
xor
inc
mull
jnp
jg
icebp
jg
repnz
fildl
lock
xchg
xchg
fnstsw
xchg
adc
ljmp
cmc
fdivrs
fstpl
or
xchg
cmpsb
imul
outsl
ret
jne
lcall
clc
imul
lock
sub
sbb
jg
lods
inc
pminsw
pop
mov
mov
push
mov
and
leave
pop
mov
xchg
sbb
and
incl
jle
dec
mov
jo
cmp
lahf
out
add
and
pusha
inc
or
xor
std
xlat
stos
dec
sub
or
lahf
out
add
dec
pop
notl
pop
data16
mov
pop
aam
xchg
mov
xchg
inc
push
push
scas
cli
outsb
das
out
popa
and
test
aaa
pop
and
mov
jnp
aas
push
clc
out
lock
insl
and
mov
out
fcomi
xchg
ret
xor
gs
cmpsl
addb
mov
loopne
add
sbb
jg
cmp
ljmp
out
movsl
and
push
inc
fisttpll
jns
jnp
jne
cmp
clc
ja
aam
add
xchg
and
or
leave
ja
mov
or
jg
insb
push
pop
aaa
cs
cld
sub
adc
insl
dec
pop
cwtl
dec
fwait
inc
add
aam
adcb
lret
data16
mov
add
sbb
sti
cmc
fld
lahf
mov
mov
fisttps
jno
or
rcr
xor
repz
fildll
fistps
jecxz
fistps
xorl
aad
and
addr16
test
sub
andl
sbb
cs
mov
mov
call
cld
lods
ljmp
xchg
inc
and
test
aaa
fdivr
mov
mov
hlt
cmp
or
test
in
cmp
test
cli
or
loopne
pop
xlat
or
stc
jns
dec
mov
movntps
mov
ljmp
mov
test
movsl
sub
push
lret
inc
shrb
cmp
pop
orl
out
cs
add
int
pushl
ret
ret
sub
sub
dec
add
mov
pop
cmpsl
out
mov
cmp
call
add
mov
or
pop
sub
pop
and
ficoml
adc
dec
or
outsl
and
or
push
dec
rcr
cmp
add
getsec
cwtl
jmp
xchg
test
call
fbld
pop
fsubrs
add
sub
clc
decl
jae
mov
lods
add
out
sti
inc
test
mov
movsl
inc
add
add
popa
fmull
xor
incl
stos
mov
xchg
repz
jl
xchg
xlat
js
andb
test
jmp
in
jae
and
leave
sarb
xlat
xchg
imul
ljmp
adc
push
andb
cmp
mov
add
pop
loopne
divl
dec
jb
or
add
mov
call
sbbl
pop
imul
push
stos
ljmp
outsl
mov
adc
xchg
dec
jns
mov
pusha
pop
jne
inc
les
fmul
inc
into
aas
cmp
ljmp
sub
mov
in
jo
aam
adc
cli
ret
mov
in
ss
pop
ljmp
xor
subb
outsb
shrb
sbb
pushl
pop
dec
inc
inc
pop
inc
add
jmp
xchg
ds
mov
decl
das
xor
push
movsb
sub
dec
shll
insb
adc
lcall
pop
xor
xchg
data16
std
xor
cltd
pop
inc
movl
stos
jmp
mov
popf
outsl
add
outsl
dec
mov
push
mov
cmp
xchg
iret
cmc
sub
or
jge
xchg
sar
push
mov
add
jne
push
movsb
pop
inc
add
sti
mov
jle
and
xchg
test
ds
adc
loop
jg
pop
lock
mov
cmc
inc
xor
inc
test
fildll
and
push
idivb
pop
push
push
or
push
xor
leave
pushl
mov
pop
xchg
or
xor
mov
js
lcall
rolb
cmp
mov
inc
leave
loopne
mov
shll
rcl
in
pusha
lret
push
out
ljmp
sbb
xor
sarb
pop
cmp
aam
dec
and
test
call
jmp
push
pop
mov
test
loope
out
cltd
mov
test
jmp
adc
test
inc
sub
dec
xchg
pop
xchg
lea
mov
jne
inc
lahf
dec
incl
incl
repnz
adc
and
cmp
sub
mov
lret
loope
cltd
mov
push
scas
or
add
inc
and
inc
sbb
push
sbb
lea
lcall
leave
addr16
mov
outsb
jmp
cmp
ds
lcall
insl
jae
mov
jp
and
das
cmp
pop
sub
pop
mov
adc
loopne
leave
pop
int3
imul
inc
andb
testl
sbb
js
popf
std
fnstsw
stos
les
add
add
ds
dec
lahf
cld
mov
loope
xor
das
mov
pusha
repz
push
or
test
mov
jg
ja
sub
jp
push
mov
inc
mov
das
adc
ljmp
cmc
decl
adc
data16
sbb
inc
jg
daa
adc
lcall
outsl
dec
push
cwtl
aad
adc
pop
in
dec
divb
sub
mov
adc
loope
pop
das
int3
sub
out
pop
cmp
jg
sbb
shll
aam
adc
inc
cmp
aaa
fcomps
cmp
mov
jg
lret
cld
pop
push
and
adcb
or
jg
mov
fwait
pop
out
jl
movsb
add
test
pop
mov
fisubrs
dec
jne
popa
push
cli
outsl
vcvttss2si
test
outsl
sbb
ret
mov
fidivrs
int3
fwait
push
push
cmpsl
lcall
push
mov
stc
jbe
shrb
loop
add
jae
jg
mov
cmp
std
lods
shl
push
dec
cli
add
cmc
add
in
jg
adc
inc
mov
push
pop
mov
in
ja
call
hlt
add
xchg
aad
xchg
insl
push
jno
and
cli
fimuls
lret
xor
sbb
decl
movsl
jbe
lcall
jge
mov
mov
inc
fwait
stc
fucomi
mov
ljmp
rcrl
lret
ret
mov
inc
xchg
loope
mov
in
jmp
adc
or
dec
cmp
mov
mov
dec
insl
std
rclb
ret
cmp
sbb
adc
jmp
cmp
mov
loopne
or
movsb
idivb
jp
decl
sbb
subb
push
jns
mov
movsl
movswl
jns
jns
fdivrp
lcall
ret
dec
or
pop
sahf
rolb
shrl
stos
aaa
and
sbb
or
push
lods
jl
or
enter
aas
jae
and
push
mov
sbb
int3
loope
xor
mov
cs
mov
pop
or
imul
loope
dec
mov
cmpb
shl
dec
push
enter
xchg
fiaddl
sbb
mov
fstl
jle
add
xor
popf
rcrb
leave
std
test
dec
dec
xor
aas
lahf
stos
into
xchg
outsl
jo
insl
jbe
add
sbb
pushf
mov
lahf
subl
cmp
test
mov
xor
inc
xchg
je
sub
imul
inc
fsubr
mov
mov
mov
push
push
call
sarb
inc
add
cwtl
mov
in
sbb
shl
pop
fwait
jg
jmp
rorl
lret
mov
jecxz
sub
jns
jl
jmp
push
js
or
ss
xor
or
out
into
dec
mov
out
idiv
decl
fcmovnu
and
mov
data16
and
push
jg
test
lcall
movsl
jmp
jmp
pop
lea
mov
mov
jmp
ret
adc
sbb
add
jmp
loopne
loope
mov
pop
sub
js
pop
adc
mov
hlt
mov
adcl
pusha
mov
lods
pop
test
dec
inc
mov
outsl
enter
sti
jmp
inc
mov
push
fisubl
pop
inc
mov
loop
dec
scas
sbb
or
fimull
addr16
enter
push
lea
mov
call
subl
jae
xor
int
pop
sbb
add
out
lcall
fidivrl
jne
pop
pop
pop
std
in
sub
pop
test
or
pusha
bound
andb
aas
shll
incl
inc
sub
das
es
pop
mov
pop
cli
mov
es
jo
push
vmovapd
lods
push
push
aas
in
cmp
das
lock
mov
jge
mov
mov
mov
or
xchg
cmp
jbe
lods
mov
xchg
mov
push
scas
pop
lods
into
pop
std
mov
fucomip
fbstp
inc
outsb
sbb
pop
sub
call
test
decl
mov
divb
dec
add
push
fiaddl
decl
ja
and
iret
xor
ljmp
sbbb
mov
fstp
clc
jle
jmp
jmp
pop
rcrb
scas
mov
dec
nop
pusha
vpsubd
arpl
sar
negb
notl
push
or
rorl
push
flds
repz
gs
pop
divl
cmp
mov
mov
cli
test
push
incl
stos
int
or
pop
add
cli
insl
jl
test
push
dec
sbb
jmp
and
repz
popa
test
cltd
jmp
dec
mov
xchg
std
pop
sbb
mov
fcoml
rol
imul
and
call
cmp
sbb
pop
out
mov
lcall
sbb
xor
xchg
hlt
cmp
jg
incl
push
mov
or
mov
in
or
int
hlt
outsl
call
gs
aam
and
fildll
push
jp
adc
sbb
decl
dec
pusha
push
mov
push
or
jmp
pop
frstor
rclb
mov
sar
gs
dec
jnp
dec
shl
popf
test
lret
out
pop
dec
fdivrl
xor
jb
push
lods
mov
inc
out
in
mov
jmp
cmpsl
loop
out
xor
jl
push
cltd
mov
inc
lcall
or
outsb
inc
aam
mov
adc
scas
mov
repnz
aam
ljmp
xchg
enter
in
cld
mov
imul
gs
jg
decl
or
adc
xlat
add
fmuls
or
mov
jb
pop
lret
push
icebp
lds
mov
out
ljmp
andl
mov
aam
pop
or
gs
push
inc
push
add
nop
xchg
dec
and
mov
sbb
bound
sbb
imul
mov
sub
leave
mulb
push
fidivl
cmp
mov
std
mov
divl
outsb
and
cld
inc
sbb
inc
mov
adc
jle
pop
les
mov
jbe
mov
or
push
lret
jle
outsb
cld
pop
pop
cmp
dec
push
dec
sbb
or
push
push
call
adc
in
add
dec
add
iret
dec
jl
push
jne
popa
outsl
jno
add
xchg
popa
cmp
jnp
popa
xchg
aaa
fstpl
addr16
cli
out
idiv
mov
int3
call
jno
mov
and
scas
mov
and
add
mov
mov
les
ret
pop
xchg
in
sbb
frstor
mov
lret
lret
xor
cwtl
int3
test
das
call
cmp
mov
ss
push
and
adc
ja
mov
mov
mov
clc
loop
xor
movsl
push
push
pop
pushf
mov
in
das
dec
cld
dec
cld
jge
xchg
ja
push
lret
dec
xchg
popf
popf
dec
mov
lahf
fs
ljmp
dec
dec
dec
mov
rcrb
popa
test
int3
mov
test
dec
pop
pop
adc
inc
in
pushl
sarl
pop
iret
sbb
xlat
repnz
adc
jp
dec
push
mov
andl
ret
cld
add
pop
pop
dec
les
mov
add
mov
inc
cltd
insl
inc
incl
xchg
push
xchg
repnz
jb
xor
adc
cmpsb
lcall
mov
push
cmp
or
adc
call
dec
cld
mov
ret
out
out
ljmp
and
lcall
repnz
mov
rcrb
mov
call
mov
rorb
rcrl
lds
mov
mov
shll
mov
test
dec
sbbb
outsb
out
xor
aad
lret
push
pop
push
push
movsb
test
call
jno
sbb
addr16
and
idivb
ret
cmp
into
push
sub
jae
sbb
call
mov
aaa
xchg
pcmpeqd
popa
cmp
fists
decl
cwtl
xchg
in
frstor
fprem
and
mov
cmp
xchg
fistpll
pop
je
cwtl
popa
add
clc
push
push
je
sbbb
cwtl
xchg
shr
lcall
js
sub
out
mov
push
loopne
jge
cs
xchg
repnz
in
xchg
clc
js
jbe
mov
loop
sub
mov
insl
or
std
xchg
icebp
pop
push
xor
fistpll
lcall
add
stos
ljmp
ficompl
stos
adc
mov
adc
push
fs
cmpsb
pop
popf
inc
inc
aam
shll
cs
mov
icebp
ljmp
bound
pop
dec
int
mov
xlat
gs
scas
roll
clc
outsl
push
push
xor
sub
jb
mov
fisubs
insb
xor
outsl
mov
lea
aas
sahf
cwtl
inc
jg
fisubrs
dec
xor
or
imul
call
xor
xchg
pop
nop
push
dec
cli
sbb
out
mov
std
mov
aam
cmp
enter
jg
std
xchg
jl
fstps
jns
movsl
clc
adc
ljmp
bound
stos
fistl
cmpsl
pop
std
inc
inc
jae
mov
test
pushl
sub
mov
and
cmp
push
in
nop
and
or
dec
fimuls
push
dec
cmpsb
pop
aas
jb
insb
dec
data16
scas
pop
ja
xlat
mov
pushl
inc
lods
les
ds
in
sbb
mov
and
push
pop
enter
lea
adc
call
clc
out
push
jns
sub
inc
adc
out
jo
xor
mov
fadd
sbbb
das
lcall
fbstp
mov
test
dec
loop
hlt
sbb
xor
lcall
dec
add
addr16
sub
jmp
lods
dec
lret
gs
decl
in
lahf
jns
inc
dec
mov
and
mov
loopne
mov
dec
mov
sub
ss
cmp
out
testl
mov
mov
into
mov
test
test
add
fucomip
incl
sbb
mov
loopne
rolb
jbe
mov
rclb
pop
push
jmp
test
push
add
xor
mov
shl
pop
sub
mov
xchg
cmp
in
in
fisttps
inc
mov
pop
incl
out
orps
xor
xchg
pop
push
dec
push
nop
cld
js
fimuls
mov
mov
iret
mov
mov
lret
jge
cmp
dec
cmc
fisttpll
scas
pop
loopne
hlt
inc
add
pop
xor
loopne
bound
pop
insb
pop
in
add
add
aad
sub
add
ja
ljmp
mov
mov
inc
push
sti
xor
inc
pop
scas
fwait
cmp
pushl
shll
test
in
scas
outsl
cld
cmp
repz
stos
adc
mov
insl
xchg
inc
add
daa
rolb
ljmp
movsb
je
dec
jbe
mov
in
shll
mov
test
xor
lret
sub
ljmp
xchg
andl
sbb
dec
xchg
cld
lcall
jmp
adc
push
in
dec
fdivrs
mov
jnp
add
lcall
or
push
dec
repz
xchg
xor
shrl
ljmp
out
mov
stos
movsl
xchg
mov
pop
xor
popf
sub
roll
cmc
scas
in
fidivs
xor
fcmovne
sub
aas
or
cli
call
adc
xchg
test
pop
adc
adc
mov
adc
sbb
mov
adc
les
pop
mov
jp
push
inc
aam
mov
mov
fsubr
dec
push
mov
inc
icebp
ljmp
das
mov
add
iret
std
jmp
sub
inc
insb
pop
in
dec
push
push
aaa
mov
fsts
mov
jnp
mov
and
cmp
dec
adc
sbb
sti
mov
mov
daa
testl
cltd
shl
jne
jb
out
mov
mov
jg
dec
jno
insb
int3
jbe
scas
subb
int3
cmpsb
ret
adc
leave
jle
out
jg
ljmp
mov
movsb
cmp
inc
incl
ljmp
jge
outsb
inc
pop
push
mov
cld
pop
decb
nop
movsl
insl
lds
insb
or
xor
dec
push
xchg
push
pop
xor
ljmp
mov
fidivrs
sahf
xchg
add
push
mov
imulb
and
imul
xor
inc
mov
jno
bound
outsl
cld
jnp
ffreep
mov
xor
test
jmp
lods
call
xor
mov
xor
aas
push
xor
push
lret
inc
shll
dec
clc
mov
jp
idiv
mov
xor
pushl
push
cmp
push
dec
adc
sub
pop
jmp
aaa
cmpb
cmpsb
xchg
and
adc
mov
xchg
push
pop
fidivrs
rolb
mov
lcall
arpl
pop
repnz
pop
cmp
cmpsb
cmp
dec
outsb
pop
push
cmp
push
repnz
insl
in
ljmp
sbb
pop
pop
jl
xorb
scas
fiaddl
movsl
dec
sbb
push
inc
or
dec
mov
cmp
lret
scas
mov
aaa
lds
out
jne
sub
leave
push
test
jg
shrb
push
or
ds
je
imulb
int3
mov
movsl
inc
cli
test
add
stos
in
and
sbb
call
ljmp
test
push
pop
dec
inc
cli
lret
dec
adc
and
test
pop
adc
js
cli
jnp
jg
test
test
jnp
and
dec
jp
fadds
test
pop
fidivl
out
pop
pop
cld
jg
inc
xor
popf
xor
jg
sbb
xchg
lret
fildll
xchg
decb
cmc
mov
int3
inc
dec
pushf
xor
and
imul
jo
decl
ja
add
loopne
popa
inc
aad
xchg
je
push
sub
pop
adc
mov
sbb
and
lcall
mov
leave
decb
outsl
cs
inc
int
dec
arpl
adc
imul
sub
call
cli
pop
jecxz
enter
and
fwait
jbe,pt
or
jl
sbb
decl
xor
push
add
mov
mov
inc
andl
add
push
pop
fbstp
jmp
cltd
les
arpl
mov
jg
flds
push
xchg
outsb
gs
mov
sbb
loope
sti
dec
pusha
out
xor
jecxz
jns
xor
movsl
jl
loop
std
jg
lock
add
fidivl
mov
jne
arpl
cmc
mov
sbb
or
pusha
test
jl
test
pushf
and
push
inc
and
push
leave
cld
jo
ljmp
sub
cmc
mov
dec
dec
dec
xchg
fs
sti
add
xor
cmp
push
lods
or
decl
imul
lock
or
push
cltd
mov
repz
in
jg
add
xchg
lahf
pusha
pop
jge
icebp
div
popf
bound
jp
pop
pop
mov
fisubrs
call
bnd
push
lods
cmpl
int3
xchg
fistpl
adc
pop
add
mov
sbb
pop
out
xchg
xchg
mov
and
jb
sub
mov
cld
push
test
repnz
sub
out
popf
ret
aad
sub
jo
mov
inc
jl
fcmovnu
add
push
insl
or
clc
incl
push
xor
mov
leave
mov
push
dec
and
mov
aas
add
mov
mov
mov
dec
dec
ficompl
adc
mov
icebp
lea
jns
inc
lretw
xor
xor
mov
xchg
pusha
jl
call
xchg
pop
add
and
insb
aas
sbb
test
shll
sbbl
stc
inc
sub
mov
jl
sahf
mov
mov
inc
movsl
fcmovnbe
and
or
and
repnz
mov
xchg
in
cmc
aaa
mov
jns
sub
xchg
lock
and
stos
sarb
call
lcall
mov
sarl
cmp
pop
ja
push
add
shlb
insl
inc
movb
movsl
stos
and
lcall
fwait
bound
and
das
mov
xor
rclb
call
lahf
jne
int3
mov
xchg
pop
outsl
lods
mov
ret
into
lcall
into
rclb
jecxz
gs
adc
jae
fiaddl
cld
call
inc
bound
ret
mov
cmp
jmp
int
sbb
stos
stos
incl
xor
insl
xlat
sbb
pop
add
sbb
fisttpl
lea
scas
or
pusha
mov
call
addb
leave
stos
arpl
pop
lcall
shlb
inc
push
stc
push
loopne
push
cmpl
mov
jl
sbb
popa
cmp
inc
int3
mov
mov
and
xchg
lds
lcall
dec
sub
sub
inc
fcoml
sahf
inc
mov
jg
mov
mov
fistps
test
mov
xchg
inc
cmp
das
call
pop
shlb
inc
pop
xchg
mov
into
jl
into
inc
xchg
cmc
js
lcall
std
incl
sbb
aas
or
mov
shll
ljmp
inc
scas
aad
mov
sbb
sub
cmovns
outsl
lock
aad
pusha
lods
xlat
or
popa
jne
mov
sub
repnz
icebp
shl
ret
jmp
lahf
adc
cmpsb
mov
outsl
push
fidivs
lock
sbbb
out
adc
cmpsb
jmp
jmp
push
add
inc
mov
xchg
sbb
jmp
mov
or
push
jg
fbstp
add
fsub
es
mov
xor
jle
xchg
ljmp
push
stos
mov
push
das
add
mov
xor
jecxz
imul
adc
inc
lds
outsl
pushf
dec
in
shll
pop
icebp
and
inc
arpl
mov
lock
pop
lcall
inc
bound
xchg
js
push
jg
lods
mov
xlat
addr16
in
in
or
sbb
mov
pop
and
adc
mov
xchg
push
das
std
or
and
dec
cmp
and
jmp
mov
jmp
push
ficompl
in
aas
pop
xlat
dec
push
jg
bound
adc
mov
ds
pop
xchg
cmpsl
or
mov
ljmp
jl
or
mov
adc
cmpsb
outsb
ror
call
clc
daa
xchg
mov
mov
mov
ret
insb
xchg
mov
idiv
call
xchg
adc
and
jns
scas
mov
xchg
ja
mov
push
or
lods
pop
and
cwtl
pop
adc
xor
inc
xlat
outsl
arpl
lods
pop
call
jae
jl
sti
lahf
mov
mov
and
xor
imul
popa
jns
mov
push
pop
mov
sub
inc
sub
sub
cmp
inc
jb
inc
ljmp
mov
pusha
aas
mov
int3
pop
lcall
add
inc
xchg
imul
cli
push
out
dec
add
pop
cltd
inc
adc
decl
aas
push
mov
test
popf
xchg
leave
push
mov
and
cmc
jmp
push
cmp
or
stc
in
adc
push
imul
inc
aad
jno
inc
sbb
test
ud2
push
pop
and
mov
stos
aaa
je
outsb
add
add
pop
and
iret
mov
mov
mov
decl
std
mov
cld
mov
int
xchg
filds
add
lret
jg
sub
std
sti
dec
cmp
jecxz
in
or
enter
dec
mov
movsl
cli
dec
idivb
lods
aad
mov
dec
adc
jl
xchg
enter
xchg
xor
out
pop
dec
insb
xor
inc
push
jno
subb
sub
cltd
loopne
pop
jne
add
addl
mov
in
pop
clc
dec
clc
fadd
pop
mov
push
test
stos
sar
sub
loop
jnp
call
out
push
jmp
loop
cmpsl
cmpsb
pop
mov
xor
es
mov
mov
inc
pop
adc
ret
xor
mov
adc
das
and
jp
popf
js
sub
das
xor
dec
push
popf
cmp
repz
and
incl
clc
cmp
cmp
lock
call
cmp
sub
mov
or
jmp
fists
dec
cmp
ret
mov
push
outsb
test
push
out
pop
sbb
lcall
dec
mov
popf
aad
mov
in
pop
fldl
push
xor
sahf
stos
mov
inc
inc
std
cmp
lret
outsb
sbb
popf
leave
in
xchg
test
call
xchg
jg
sub
ljmp
add
js
test
dec
and
sbb
sbb
pushl
testl
leave
pop
pop
adc
inc
into
sub
call
loopne
fsubr
mov
push
and
enter
cmp
lcall
jo
shlb
addr16
mov
in
xchg
outsl
cmp
mov
pop
gs
or
sahf
or
mov
insb
inc
shrb
sub
ret
jle
jne
loop
std
scas
loope
and
xchg
cmp
fwait
popf
xchg
pop
jecxz
adc
jg
cwtl
test
test
xchg
dec
mov
xchg
mov
mov
inc
cmpsl
lods
outsl
aaa
mov
push
push
mov
xor
xor
cmp
test
jle
jbe
dec
fucomp
push
or
xor
js
push
jno
pop
xor
fcom
jp
sarl
std
inc
dec
sbb
rcll
sub
test
shrl
imul
sbb
cmp
pop
sub
xor
mov
incl
dec
cld
xchg
xor
fwait
mov
push
jle
add
iret
rcll
pushl
arpl
push
jl
push
dec
hlt
adc
aas
add
hlt
mov
sbb
jg
ljmp
lret
pop
lcall
push
arpl
xorb
pop
insb
cld
pushl
rep
xchg
pop
mov
cmpsl
test
arpl
mov
ljmp
cs
or
xor
pop
push
icebp
jmp
hlt
mov
adc
ja
cmp
mov
add
das
mov
std
inc
cltd
daa
inc
pop
xchg
add
scas
cmp
push
add
push
lcall
dec
xchg
dec
test
ja
pop
adc
repz
xchg
hlt
jp
dec
or
or
fucomip
aad
pusha
cmp
jb
adc
sbb
pushl
push
lock
lds
mov
daa
xor
fldcw
daa
stos
mov
lcall
outsb
xchg
clc
adc
stos
and
addb
xchg
add
pusha
outsb
std
decl
es
xchg
fistl
into
push
inc
jecxz
sub
pushf
std
ljmp
cmpsb
repz
cmp
add
shll
sub
ljmp
jmp
icebp
in
jg
mov
lock
xchg
in
je
outsb
shlb
ljmp
lahf
mov
lcall
int3
pushl
push
xchg
shlb
add
bound
adc
sub
push
cmpsb
cmp
and
mov
lret
dec
mov
test
aad
faddl
mov
mov
dec
sbb
arpl
mov
int
sbb
push
decl
cld
pop
sub
and
lcall
inc
mov
mov
lods
fdivr
lcall
fisttpl
aad
sub
test
and
pop
lcall
icebp
mov
push
lret
popf
push
pop
mov
les
jmp
adc
dec
and
mov
bound
repz
ljmp
sahf
pop
mov
mov
xchg
dec
ret
fistps
xchg
cmc
ret
sub
lcall
ja
out
mov
ja
lds
sbb
add
adc
xchg
lcall
dec
pushf
in
jae
pop
sbb
mov
into
lahf
sbb
mull
fbstp
shrl
cmc
or
push
call
push
mov
sti
xchg
adc
out
pop
sub
fcomps
cld
lcall
add
hlt
imul
mov
push
leave
jnp
push
rorb
jge,pn
jle
inc
mov
and
or
pop
imul
aas
add
lahf
lods
lods
cmp
or
lods
jmp
mov
jecxz
subb
ljmp
push
jmp
add
notb
xlat
stc
pop
push
movsb
pushf
out
mov
popf
jns
inc
sar
or
cmp
add
push
jg
outsl
pop
cld
in
mov
mov
pop
cmp
sbb
mov
dec
incl
movsb
push
sub
outsb
push
stos
pop
sub
xor
xorl
lock
lcall
jnp
mov
push
push
xchg
adc
dec
fnsave
sbb
mov
mov
lcall
hlt
in
data16
sbb
xchg
inc
mov
adc
xor
repz
das
loope
cmc
cli
imull
mov
push
inc
add
fwait
sub
pop
subl
sub
mov
push
pop
jo
aad
dec
mov
mov
test
out
pusha
in
and
movsb
or
in
imul
inc
dec
xor
jg
movsl
push
and
pop
sbb
dec
mov
sarb
and
shlb
pop
cli
pushl
cli
es
gs
aaa
in
sbbl
fnstcw
cltd
sub
jmp
outsb
xchg
jg
dec
or
icebp
mov
inc
jns
ret
int
lds
cmp
das
add
scas
into
sbb
fs
call
scas
test
lret
popa
cmc
int3
fucomp
sbb
push
sar
mov
out
ss
or
sbb
ljmp
and
add
or
stos
mov
addl
mov
add
ljmp
fwait
outsl
mov
cmpsl
pop
jne
cmp
pop
clc
sti
adc
es
mov
in
sbb
leave
sti
xor
iret
cmpsl
cmp
push
lcall
lcall
ja
out
cmp
and
lcall
enter
add
ljmp
cld
lcall
jns
push
add
pop
add
mov
leave
cmp
jb
sub
cld
decl
enter
add
cmpsl
jmp
adc
adc
call
test
push
dec
loopne
jmp
jg
mov
sbb
scas
shrl
cmpsl
test
lahf
clc
dec
mov
sbb
js
ljmp
mov
lock
and
cmpsl
das
hlt
dec
call
loope
push
sarb
xor
dec
test
lret
sub
adc
fildll
imul
pop
jnp
pop
pop
imul
clc
pop
aad
mov
cs
fiadds
or
adc
insl
jg
mov
pop
xor
add
cltd
popa
add
xchg
cs
stos
popf
dec
push
and
outsl
icebp
decl
xor
adc
cmc
jge
ret
les
das
jge
ljmp
mov
cmp
ss
push
cmp
or
mov
out
jmp
call
xchg
fisubrs
test
fucomp
adc
push
shll
das
cld
pop
sti
call
outsb
out
into
popa
testb
xor
inc
mov
enter
mov
cltd
add
mov
fisubrl
mov
std
fldenv
pop
jbe
adc
in
je
popa
jg
xlat
loop
jmp
gs
cld
pop
arpl
rcll
daa
and
ljmp
hlt
cmp
rclb
sbb
xlat
pop
je
lret
or
cmp
incl
ds
mov
pop
shr
sarb
cwtl
dec
jp
enter
std
fbld
adcb
aam
pop
jle
lret
push
inc
cld
mov
fisubs
jg
bound
jne
xchg
xor
jb
dec
xor
push
sti
hlt
pushl
mov
xchg
sbbl
enter
add
fcomp
push
add
jg
jmp
sbb
push
mov
inc
jl
or
adc
in
cmpsl
sub
adc
push
xchg
pop
and
xor
jbe
fbld
ljmp
jp
pop
pushw
xchg
push
jg
push
push
mov
lret
sti
xchg
aad
call
cli
call
ds
add
clc
in
int3
imull
mov
ds
test
clc
rcr
and
stc
idiv
xchg
jle
repnz
jns
xchg
lock
movsl
or
ds
or
push
jmp
iret
inc
repnz
add
pop
enter
hlt
lods
mov
mov
fs
cmp
cmpsl
jle
jmp
mov
test
adc
jg
ret
gs
cmpsl
sbb
das
and
pop
ljmp
inc
mov
adc
push
into
inc
sub
fwait
ljmp
incl
hlt
push
jae
push
addl
cwtl
mov
jo
clc
inc
aas
pop
dec
test
cmp
enter
or
pop
mov
stos
std
xor
aaa
mov
out
dec
loopne
mov
loope
in
outsb
xchg
jge
movsb
rorb
sub
push
andl
xor
scas
mov
sbb
popf
mov
call
push
cmp
push
xchg
push
xchg
adcl
pop
test
adc
jo
adc
cmp
pushl
jp
inc
fldt
cli
les
xchg
sub
mov
lds
daa
or
pushl
lcall
and
push
fdivp
jp
and
lahf
scas
lods
in
jge
loopne
sti
inc
xchg
mov
mov
outsl
cwtl
in
bound
mov
les
incl
cmp
cs
mov
in
mov
cmp
lret
cmp
hlt
decl
in
push
cmc
push
mov
sbb
in
unpckhps
cli
jg
adc
imul
xchg
sahf
mov
cli
lcall
mov
bound
mov
cmc
or
jmp
jns
xchg
push
stc
add
sbb
lea
dec
pop
dec
fsubrs
dec
std
or
or
std
test
and
jns
sti
cltd
iret
mov
xlat
call
in
lret
and
outsb
adc
mov
dec
mov
fcos
call
mov
push
out
xchg
dec
xchg
out
add
mov
int3
xor
call
jmp
ljmp
in
xor
push
mov
aas
lret
shll
call
pushf
mov
xchg
mov
lea
in
xchg
push
pop
dec
jns
aaa
add
pushl
call
pop
inc
xlat
xor
lcall
mov
das
adc
lret
std
push
mov
aam
test
test
xor
mov
mov
mov
nop
and
jg
jl
ljmp
cmp
lahf
adcb
pop
aaa
repz
jmp
xor
mov
test
dec
subb
jg
sub
mov
shll
jg
inc
sbb
and
loop
or
lods
aas
mov
pusha
jae
xchg
or
jno
fdivrp
pop
add
fmuls
shlb
push
sub
clc
call
mov
pop
mov
rol
aad
pop
mov
add
out
pop
jle
jge
cltd
and
cmp
pusha
xor
das
pop
sbb
imul
insb
inc
sub
iret
aaa
das
mov
xchg
lcall
hlt
and
into
movsl
mov
daa
mov
imul
pop
les
pop
int3
sbb
mov
mov
scas
push
loope
cmpsl
mov
ss
nop
stos
mov
loopne
mov
xor
je
sti
bound
jg
jg
scas
test
mov
out
arpl
sbb
out
daa
xor
pusha
xchg
lods
sti
fucomi
test
inc
out
cld
mov
out
call
or
xor
or
add
mov
in
mov
dec
xor
dec
xor
pushl
rorl
and
mov
das
cmc
mov
mov
xor
or
add
jecxz
mov
inc
or
scas
push
call
mov
mov
pop
out
mov
mov
pop
xchg
mov
or
incl
jg
bound
repnz
sbb
inc
fs
lcall
nop
scas
mov
mov
sbb
fidivrs
dec
and
decl
xchg
sub
add
loop
mov
jae
dec
cmpsl
mov
in
fldenv
jge
sbb
inc
loopne
jbe
sub
loope
mov
xchg
loope
adc
fwait
ss
out
sub
ja
dec
push
sbb
jne
push
push
in
ljmp
push
push
sahf
pop
inc
inc
xor
add
movntps
cltd
das
mov
pop
pop
mov
pop
outsl
test
or
lods
mov
mov
jb
testl
inc
push
xor
adc
stc
lea
aam
jp
nop
fsin
xor
js
push
bound
repnz
lret
enter
push
sbb
icebp
cmp
dec
xor
stc
cmc
xor
xchg
aas
idivl
sub
pushl
cmp
sub
xchg
push
pop
es
fistps
xor
pop
imul
or
call
test
pop
loop
xchg
and
movsb
mov
jnp
jg
push
rcr
mov
ljmp
cmp
sbb
jb
test
xchg
decl
sbb
aam
cli
mov
or
xchg
and
enter
in
and
adc
ljmp
loopne
fwait
push
or
sub
pop
ljmp
pop
fmull
jb
out
pop
outsb
int
nop
mov
sbbl
xor
push
add
std
jg
pop
sti
popf
icebp
enter
and
insb
push
adc
add
repnz
push
dec
sub
push
lds
pop
aam
lods
cmpps
pop
pushf
ds
fadd
jmp
mov
cwtl
ret
adc
fmul
cmp
jo
jb
inc
dec
addr16
push
aad
out
test
test
int
and
jg
nop
push
add
jne
adc
sub
lcall
fs
lcall
pop
sbb
push
call
test
push
addb
or
pushl
stos
arpl
inc
pop
mov
push
fbstp
pop
add
dec
or
mov
push
jle
adc
push
cmp
xchg
add
ljmp
jne
or
mov
and
cmp
push
aaa
imul
dec
popa
jl
jmp
xor
cmp
sub
das
pop
sub
dec
pushf
mul
loop
lret
jecxz
fwait
das
jp
daa
movsb
in
jge
in
call
xor
xor
jno
pop
clc
sbbb
rcrl
sbb
pushl
movsb
mov
jp
ficoml
sbb
incl
xor
push
sub
inc
fbstp
cmp
sub
test
divb
fwait
cltd
enter
push
or
into
fistpll
lock
mov
mov
mov
rclb
and
mov
int3
jno
and
js
jb
jmp
mov
cmpb
inc
mov
sub
lods
pop
mov
sbb
fdivr
jg
clc
push
arpl
adcl
cld
lret
popf
lods
dec
jg
decl
sbb
out
add
inc
jg
lcall
mov
mov
outsb
mov
and
pushl
test
sbb
cwtl
sub
add
out
insl
sub
add
mov
sbb
orb
bound
mov
mov
dec
in
mov
scas
aam
pop
xor
call
push
pop
iret
jg
jb
inc
mov
and
popa
add
cmp
adc
mov
jmp
adc
mov
mov
in
inc
shrl
shll
test
hlt
jmp
mov
sbb
stc
jp
and
inc
inc
loope
cmp
or
ljmp
cmp
divl
and
stos
jo
sar
sbb
and
insb
sbbb
scas
xchg
mov
sbb
idiv
jmp
sbb
jo
sti
aad
imul
in
cmp
div
ljmp
in
in
mov
lahf
stos
xchg
cmp
jg
outsl
add
fs
fsubl
jecxz
mov
xor
pushl
xchg
into
jmp
cmp
aas
push
cmp
cli
pushl
xlat
add
ret
out
mov
xor
cld
lods
hlt
idiv
lcall
ljmp
mov
adc
cmp
add
mov
jg
push
mov
das
rolb
xchg
xchg
sub
xor
xchg
decl
mov
fiaddl
push
adc
mov
mulb
sbb
or
pop
xchg
sarb
pop
sub
inc
or
xlat
aas
add
test
dec
xchg
sub
std
aam
cs
cmp
rcrb
push
lret
icebp
mov
nop
idiv
inc
push
sbb
popa
sub
decl
dec
inc
cmp
sbb
mov
adc
movsb
lock
sub
out
and
lcall
adc
xchg
incb
mov
std
scas
pop
pop
std
aaa
clc
mov
sbb
shll
out
jbe
pusha
imul
mov
mov
jle
ljmp
sbb
int3
stos
dec
xor
outsb
enter
add
jne
mov
repz
fnstsw
movsl
cli
lahf
les
cmp
jg
adc
sbb
jl
psrad
mov
ljmp
pop
insb
inc
adc
scas
addr16
call
fists
adc
pop
lcall
leave
js
out
cmp
dec
mov
mov
sbb
cmp
call
xor
xchg
test
test
aas
popf
cli
dec
in
jne
sub
ja
clc
mov
and
movsb
in
test
jg
es
mov
jns
xchg
inc
pushl
clc
repz
xchg
pop
dec
add
xor
adc
ret
clc
aam
insl
push
fs
pusha
sub
cmc
jecxz
scas
mov
lcall
mov
sbb
mov
inc
sbb
out
sbb
cltd
stc
cmc
mov
js
sbb
out
fistpl
filds
int3
stos
stos
int3
setle
incl
ljmp
cli
jecxz
rclb
and
and
lods
aad
xchg
dec
mov
mov
stos
pop
fdivrp
scas
je,pt
inc
mov
jmp
mov
inc
adc
rsm
rdmsr
add
push
aad
inc
ret
test
or
push
cmc
call
mov
push
cmp
and
cmp
mov
pusha
mov
mov
mov
rcr
sbb
cmp
ja
pop
pop
pop
push
inc
das
std
push
sub
xlat
or
jle
out
loope
mov
jg
mov
mov
mov
adc
adc
jge
in
imul
push
cmp
mov
rclb
sti
fcoms
ljmp
mov
cmpsb
inc
add
jecxz
sar
lock
sub
sub
sub
cwtl
out
rdpmc
and
call
lcall
mov
sbb
xor
cli
cmp
sub
ljmp
adc
push
pushf
dec
std
push
fs
push
jno
mov
outsb
push
jg
loop
pop
cwtl
add
sarl
ret
repz
ret
iret
sti
decl
pushl
arpl
sub
icebp
nop
cmp
push
pop
popf
shlb
mov
lret
mov
scas
cld
outsb
pop
loopne
add
and
shrb
ljmp
inc
adc
push
mov
clc
insb
in
std
aad
test
fs
decl
add
mov
flds
push
sub
incl
add
fwait
jnp
fisttpl
std
test
sbb
mov
sub
aad
add
cld
cmc
cwtl
pop
icebp
lcall
idivl
mov
sarb
nop
dec
mov
pop
pop
dec
mov
rcrb
das
pop
aad
or
or
sub
aaa
cs
ljmp
mov
lahf
jb
mov
xorb
mov
stos
lret
daa
stos
jb
ljmp
jb
ss
adc
push
jnp
aad
sub
call
ret
and
js
mov
ljmp
aas
stc
and
pop
push
out
inc
rorb
and
dec
or
icebp
jne
jp
idiv
aas
adc
lea
cwtl
add
cli
andb
cmpsb
loop
xor
xchg
insb
cltd
cmp
inc
out
or
pushl
cltd
xchg
arpl
cmp
loope
incl
decl
addr16
es
pop
outsb
imul
sbb
jle
sbb
push
das
jne
pushl
jae
cmp
push
push
call
call
add
add
jmp
inc
pop
call
icebp
mov
lcall
pop
aam
std
cmpsl
cmpsl
or
xchg
push
push
loope
nop
fadd
test
in
pusha
daa
mov
jl
sub
jg
out
pop
cmpsb
out
rcrb
and
xor
call
pop
fisubrl
adc
imull
jl
jne
call
push
rclb
mov
call
and
push
mov
in
mov
push
xor
or
xlat
pop
inc
lcall
dec
or
leave
sub
pop
sub
pop
push
pop
xchg
sarb
cli
jb
cld
inc
inc
out
and
cmpsl
xor
xchg
fcompl
rorb
loop
clc
mov
xor
popa
and
add
incl
jmp
aaa
loop
xor
les
test
push
mov
and
mov
lret
mov
arpl
xchg
fdivrp
sti
test
cmp
das
mov
mov
lcall
xchg
push
mov
push
and
or
mov
add
add
test
mov
jg
inc
js
lret
data16
scas
daa
in
push
xor
inc
xchg
pop
and
adc
ja
sub
dec
jnp
cld
sbb
cmc
and
mov
ljmp
lret
nop
sti
dec
and
mov
hlt
out
ljmp
xor
dec
outsl
mov
ss
dec
jp
cld
jg
out
std
repnz
dec
cmp
push
rorb
mov
sti
pushl
out
push
dec
xchg
mov
gs
inc
das
icebp
lcall
sbb
mov
and
leave
and
icebp
ljmp
lea
push
xchg
out
add
and
lret
jl
mov
dec
pop
dec
sbb
gs
mov
out
pop
push
add
xor
loopne
call
cld
arpl
std
jg
cmp
cmp
les
fmulp
fcmovu
jb
clc
jl
inc
popa
cmp
lcall
fstp
pop
sub
pop
jge
inc
sarb
jge
sbb
pop
mov
sbb
xchg
clc
jmp
data16
outsl
fmul
push
xor
out
push
add
mov
mov
cs
pop
pushf
lcall
mov
lods
ret
push
repz
xlat
or
inc
mov
repz
stos
mov
movsl
cwtl
adc
pop
repnz
add
fwait
sub
cmp
jge
cmp
mov
ret
mov
mov
lahf
clc
pop
cli
xor
cmp
ds
lcall
jl
dec
enter
mov
loop
add
incl
mov
ret
loopne
xchg
lahf
das
fadd
aaa
cmp
cmp
out
xor
pusha
dec
sub
pop
sub
cmc
cmp
pop
stos
push
mov
pop
aad
mov
or
out
into
fnstcw
jne
or
adc
push
outsb
cld
incl
dec
in
lahf
jbe
jmp
lock
lret
adcb
or
es
decl
arpl
ds
mov
mov
add
push
cld
fstp
enter
jg
push
xchg
pop
int3
mov
outsb
jg
sub
or
stos
sti
call
das
rolb
mov
adcl
bound
leave
adc
add
ret
lahf
xor
lods
int
ror
les
jg
test
add
aad
fimull
lcall
mov
mov
sti
xchg
xchg
pop
sbb
in
pop
incl
push
xchg
mov
push
in
jp,pn
pop
stos
out
xor
ljmp
cmp
inc
sbb
stc
xor
ret
nop
in
jbe
cmp
in
pop
push
pop
mov
xor
lahf
mov
call
xlat
cmp
and
pop
bound
fidivrs
dec
iret
out
dec
inc
shlb
jg
stos
outsl
xor
addr16
out
xor
ret
dec
dec
jg
ret
ss
fimuls
fcmovnu
or
call
or
pop
mov
loop
mov
jbe
sbb
das
mov
xchg
xchg
fucompp
cmp
dec
mov
pop
push
and
leave
jge
call
arpl
xchg
pop
push
js
xchg
out
lahf
xorb
mov
cli
jmp
jns
jl
adc
push
insb
or
fstl
test
cli
pop
xchg
cli
into
cmp
jne
mov
scas
or
loope
fsubl
fidivrl
push
lds
add
sub
sub
ficompl
jb
xor
inc
sar
adc
push
mov
inc
sbb
mov
or
and
cs
cmpsb
push
push
adc
adc
adc
ja
cmp
int
clc
cmpsb
xchg
push
jecxz
xor
in
and
daa
test
lock
cmp
sbb
hlt
ret
pop
shlb
or
mov
jmp
xchg
je
cwtl
xchg
xchg
inc
mov
mov
xchg
sub
jg
dec
jle
or
mov
decl
fcomps
push
pop
jl
and
push
out
arpl
movsb
ja
clc
push
into
and
push
inc
lret
inc
jg
jo
data16
jae
pop
cmp
pushl
inc
ret
sbb
cs
scas
insb
lcall
inc
and
pushf
movsl
das
xchg
cmp
outsl
js
sbb
insb
data16
movsl
jl
cmpb
hlt
call
pop
mov
in
mov
stc
aaa
loope
ljmp
hlt
scas
pop
jne
outsb
mov
xchg
pop
int3
inc
shr
fists
jno
jle
incl
lock
jle
xor
pop
divl
scas
add
pushl
xchg
outsl
sarb
lds
and
call
shll
jo
ss
pop
aas
pushl
cli
sbb
loope
cmc
sti
rcl
jmp
inc
in
out
fstpt
xor
inc
test
mov
or
lret
add
add
xlat
jle
pop
jge
clc
xlat
xor
decl
sbb
push
push
add
addr16
mov
and
stos
dec
out
std
sti
call
scas
out
sbb
sar
add
mov
mov
imulb
hlt
jecxz
clc
lods
jle
xor
inc
sub
push
lcall
sub
xor
sub
mov
xchg
jmp
nop
sub
outsb
stos
jmp
jne
mov
xchg
sub
in
inc
iret
repnz
notl
filds
pop
out
push
scas
pushf
push
gs
or
jmp
pop
sbb
shrl
xchg
sahf
inc
jo
mov
insl
adc
push
jbe
frstor
mov
scas
aas
push
lahf
negb
lea
sub
pushl
add
int3
mov
mov
pop
push
inc
mov
pop
cmc
imul
xchg
in
jo
imul
fisttps
sub
xchg
mov
mov
pop
mov
mov
xor
decl
std
adcb
movsl
dec
out
and
cs
dec
shl
push
aam
loope
call
popa
mov
je
out
test
test
adc
and
push
and
inc
add
add
daa
mov
sarl
jmp
mov
mov
sub
cmc
sbb
cmp
inc
pop
or
adc
inc
flds
lret
xor
pop
scas
popa
lcall
mov
in
dec
lock
aaa
aaa
mov
loopne
jo
into
ds
mov
add
outsb
mov
jl
popf
lea
xchg
jno
lds
arpl
add
rcrb
lock
inc
inc
int3
mov
aas
daa
jg
mov
sar
inc
jg
jle
mov
xorl
ss
xchg
pop
mov
rorb
mov
rcll
je
inc
and
add
fld
adc
cld
inc
xlat
call
fwait
xchg
fisubrs
aas
add
jmp
icebp
jmp
jg
fcmovnu
into
lret
jne
das
fs
inc
push
movsb
cmp
and
add
or
or
test
mov
mov
repnz
incl
sub
scas
repz
mov
mov
lods
in
ds
mov
or
dec
push
xchg
or
adc
xchg
pop
fsubrl
dec
loop
lcall
popa
aam
clc
fadd
add
enter
jbe
cltd
adc
out
loopne
loopne
mov
out
imulb
mov
dec
push
ret
and
sbb
push
mov
aad
jo
lods
insl
loope
add
or
iret
mov
fnstcw
push
pop
xor
addr16
push
mov
daa
sbb
jl
decl
mov
and
ret
sub
aam
dec
outsl
outsb
fucomip
outsl
hlt
xor
mov
aad
cmc
sub
lds
pop
out
pop
mov
lea
or
cmc
add
adc
pop
fwait
pop
shll
insb
fwait
int
jae
sti
pop
imul
cmp
pop
test
ljmp
push
pop
inc
push
outsb
xchg
push
movsl
pusha
lds
push
and
xor
decl
je
pop
loope
mov
fs
sbb
into
jg
and
fsubs
adc
enter
aam
sub
pusha
lcall
hlt
popa
mov
loope
sti
cwtl
pop
and
loopne
push
pop
xor
add
fisubs
dec
add
lock
in
outsl
lock
incb
sub
fdivs
xchg
loope
loope
pop
cmp
ljmp
mov
cwtl
popa
mov
mov
jne
mov
stos
mov
aam
cmp
push
fucomi
in
sub
push
lcall
dec
xor
les
pop
out
mull
out
pop
add
cmpsb
imul
frstor
ljmp
xchg
jl
jmp
inc
jecxz
mov
lock
jne
pop
js
decl
cmp
pusha
cmp
pop
cs
cli
cmpsb
xor
pushf
sbb
pop
es
sarb
mov
decl
pop
mov
add
ljmp
inc
mov
stos
push
lds
jmp
sub
mov
in
mov
pushf
inc
imul
ljmp
xchg
ret
lock
insl
hlt
jle
lods
cmp
mov
in
or
cmp
push
mov
popa
aaa
jecxz
aaa
sbb
jle
mov
mov
lcall
fdivrl
mov
dec
scas
inc
enter
lcall
xchg
push
js
sub
jge
mov
icebp
outsl
cld
jg
dec
subb
cmp
pop
les
cwtl
jl
push
jne
jmp
lcall
dec
lret
xchg
iret
xor
call
and
out
xor
xor
cmp
aaa
pop
or
das
dec
adc
add
and
ret
push
es
fsts
outsl
scas
mov
sar
in
scas
or
xor
and
das
cld
fbld
and
sahf
jp
mov
xchg
and
mov
aas
mov
push
push
shl
jno
mov
mov
fdivr
stc
sub
xor
cld
xchg
mov
inc
push
xchg
adc
xor
ljmp
mov
jmp
jne
cli
in
into
adc
mov
jl
repz
fisubl
repnz
lock
jg
repz
cmp
mov
inc
loopne
pop
push
and
call
pop
rol
mov
inc
mov
faddp
dec
cltd
sbb
jne
sbb
loope
call
and
stc
lret
sub
jne
adc
aaa
mov
lock
dec
movb
fisubrl
pop
cli
das
push
fistl
cmp
cld
add
ja
push
fidivl
outsl
icebp
ljmp
fmull
sahf
out
out
mov
aam
or
sub
mov
decl
and
aas
fsubs
push
das
sub
pusha
jle
fwait
add
incl
ss
mov
loope
jl
mov
ss
sbb
popa
mov
decl
push
jge
mov
dec
test
add
das
icebp
sbb
lods
adc
push
add
outsl
dec
notl
in
std
inc
xor
insl
inc
sahf
mov
dec
mov
int
pop
dec
aaa
scas
cwtl
mov
adc
jmp
push
lds
jbe
mov
out
das
sbb
ljmp
loopne
xchg
lods
fldl
or
into
cmp
movsb
xor
ljmp
sub
mov
pop
ret
jns
lea
lcall
jmp
mov
mov
icebp
mov
orl
inc
or
xor
imul
inc
in
pop
pop
insl
stos
fistpl
sub
add
out
mov
lods
rcrl
sub
lcall
sbb
aad
adc
sub
int3
and
sub
std
pop
fdivp
jge
add
jnp
pop
lcall
jnp
aad
leave
test
mov
cmpl
loopne
loop
dec
cmpsl
fsub
dec
call
call
clc
jmp
stc
daa
test
cmp
stos
xchg
sub
call
dec
cwtl
shll
xchg
push
mov
sbb
ffree
ds
cmpsl
mov
cmp
decl
mov
and
xor
bound
push
ljmp
ret
icebp
pop
inc
pop
fwait
movsl
and
push
and
xorb
cmp
fnsave
sbb
call
push
pop
xchg
scas
jecxz
int
mov
lcall
cmp
call
loope
test
jno
out
dec
fimull
inc
repnz
lods
fs
pushf
shlb
mov
outsl
in
dec
les
test
fucomip
ljmp
xchg
mov
hlt
lahf
and
pop
mov
fwait
in
adc
iret
outsb
fnstsw
call
or
outsl
addr16
jne
push
std
sbb
pusha
icebp
jo
sar
incl
popa
jne
pop
xlat
mov
dec
lret
or
mov
popa
lods
cmp
sub
sub
pop
add
call
or
dec
cmp
incl
stos
out
pop
jecxz
lahf
add
dec
sub
inc
pop
mov
mov
push
stc
repnz
inc
fucomip
sub
push
lret
or
pushl
pop
dec
test
sti
add
cmpsl
outsb
scas
jge
mov
lret
cmpsb
clc
std
jmp
jbe
push
scas
push
or
and
push
not
testb
popf
das
pop
decl
xchg
arpl
inc
hlt
lcall
mov
add
sahf
out
js
mov
decb
mov
pop
ja
sub
sub
mov
add
test
xchg
inc
decl
ret
fwait
pop
jg
ljmp
int3
call
pusha
jb
pop
mov
cs
sub
popa
jge
andb
decl
jno
sbb
adcb
insb
mov
or
cmp
ljmp
lock
jge
sub
pop
pop
aad
xchg
in
mov
int
iret
add
repnz
ljmp
outsb
cmpl
push
xchg
pop
jmp
incl
cmp
leave
rcll
sub
xchg
push
lods
lcall
call
mov
push
fwait
inc
daa
jno
jnp
pushl
sahf
outsl
push
clc
lcall
cld
cmp
subb
movsb
sbb
sarb
roll
dec
cmp
mov
ljmp
mov
and
inc
push
add
cmp
aam
inc
dec
cmp
gs
mov
inc
push
aam
stos
push
add
xor
sbb
inc
cld
call
sbbl
adcl
xchg
fildll
push
cmp
sub
mov
dec
ret
jl
xchg
repz
xor
lea
push
sarl
push
jae
or
adc
and
lcall
xchg
loop
mov
add
xchg
lea
gs
inc
and
push
hlt
loopne
incl
cmp
fstpt
xor
enter
shlb
cmp
lahf
add
fcoml
negb
cmpsb
scas
out
lahf
mov
sub
stos
loope
dec
test
or
inc
cld
jg
out
push
scas
and
mov
pop
ret
cmp
sbb
shl
pop
xor
pop
mov
lock
mov
and
sbb
loopne
xorb
lock
std
outsl
icebp
ljmp
pop
addr16
add
pop
fildl
push
sbb
enter
outsl
push
out
shr
je
in
pop
jns
push
call
pop
pop
mov
mov
sbb
aam
hlt
inc
cmc
and
cmp
das
hlt
decl
lea
dec
add
xchg
nop
popf
adc
lods
or
jmp
xchg
jge
sbb
push
imul
scas
and
xchg
aaa
mov
mov
addr16
out
shl
insb
js
pushf
inc
andb
push
and
lcall
ret
fcos
mov
inc
push
pop
out
cmp
std
in
and
sarb
and
sub
ffreep
xor
lods
jns
sub
jno
loope
jl
push
aad
lahf
aaa
jg
sti
call
mov
xchg
fisubs
dec
je
pop
xor
jp
ja
jg
rcr
add
js
loop
adc
dec
in
je
clc
hlt
lret
xchg
jbe
outsl
cld
decl
mov
scas
adc
imul
xorl
call
jmp
jl
fmulp
sub
mov
push
sbb
scas
mov
icebp
adc
xor
fdivr
sbb
adcl
or
jnp
mov
mov
loopne
ljmp
pushl
ficoml
movsl
in
popf
sarb
idiv
jg
or
pop
adc
insb
pushf
mov
sub
fwait
xchg
or
andl
dec
inc
loope
push
fisubrl
inc
xchg
mov
jg
jne
in
adc
adcl
jbe
rcr
mov
sti
mov
fsubrs
addr16
fisubs
cmp
or
mov
outsl
mov
xchg
jg
rorl
adcb
jle
add
lret
jo
jg
call
sbb
xor
pop
sub
cmp
lahf
cmc
or
lahf
bound
std
mov
mov
cltd
inc
ljmp
jae
sub
mov
out
sbb
lcall
popf
adc
iret
add
xchg
xchg
shl
pop
jp
icebp
sti
inc
pop
push
stc
mov
call
adc
imul
cmp
push
jmp
jne
mov
mov
mov
cmp
fwait
mov
xor
sti
cmp
jge
push
xchg
ds
out
xchg
bound
incl
rcr
sub
movsl
rorb
inc
dec
pop
test
scas
push
and
jne
and
xchg
adc
push
inc
jg
mov
sbb
push
insb
mov
fnsave
call
mov
adc
and
jnp
cltd
in
shll
add
pop
ljmp
pop
repz
xchg
aaa
xlat
or
adc
call
pop
push
loop
cmp
aaa
shll
mov
enter
sub
bound
sahf
push
mov
mov
sbb
mov
mov
lahf
pop
imul
fcmovu
lret
sbb
mov
dec
clc
jg
dec
imul
mov
jae
jno
add
lahf
call
push
xchg
jmp
mov
add
ja
int
insl
and
in
push
fnsave
lods
jbe
clc
add
les
xchg
cmp
xor
sbb
rorb
jl
movsb
aas
cltd
mov
sbb
jns,pt
adc
add
jmp
movl
inc
mov
mov
push
mov
cltd
cmpsb
cli
clc
sub
jg
movlps
sti
jl
ret
fdiv
imul
and
mov
xchg
inc
xchg
lret
dec
inc
imul
dec
adc
ficompl
lods
add
adc
out
dec
mov
sbbb
mov
out
cmp
cmpsb
lahf
popa
xor
movsl
cli
pushl
cmp
dec
ds
jmp
aaa
lods
push
mov
ds
mov
aaa
shrl
imul
sahf
pop
call
repz
mov
push
imul
cld
mov
sub
lret
push
stos
add
cmpsl
and
decl
mov
cmp
cltd
lahf
or
das
loopne
ljmp
lret
aaa
mov
adc
imul
adc
clc
jp
mov
jp
sub
repnz
std
test
neg
daa
clc
outsl
std
incl
xchg
sbb
lea
xlat
repnz
jg
xor
shr
incl
test
sub
push
lods
out
cmp
mov
call
cmpsl
fcmovbe
lea
sub
mov
mov
movsl
jg
into
add
inc
cmp
fdivrs
sbb
mov
std
pusha
mov
mov
cmp
pop
pop
jbe
cmp
mov
jg
pushl
add
ss
push
inc
pop
cwtl
jg
sahf
shll
cmpsl
sbb
das
std
call
mov
push
or
mov
jl
push
fsubs
mov
and
jge
clc
pmuludq
rcll
fdivrs
pop
popf
pop
adc
xchg
testl
int3
pop
jle
dec
cs
das
insb
jns
sub
stos
inc
mov
and
adc
add
icebp
incl
mov
jmp
mov
inc
neg
push
shrl
fnstsw
fisubl
jnp
call
sub
popa
inc
js
fmul
push
jmp
push
mov
cwtl
jge
mov
jle
test
mov
movsb
pop
mov
xor
cs
cli
jmp
and
repnz
sbb
mov
jg
mov
lea
bound
sub
cmp
mov
jg
pushl
ljmp
int3
js
cltd
push
adc
lcall
add
fmull
rcl
fiadds
test
mov
sbb
sahf
mov
loope
dec
xchg
pop
sbb
insb
lret
loope
inc
mov
gs
jmp
xor
pushw
dec
movsb
fcmovne
xchg
pushf
aas
pushf
cltd
fimull
icebp
pop
clc
jg
adc
or
inc
cmp
out
jg
fidivl
xor
aaa
sub
pop
mov
xchg
lahf
push
sub
iret
lea
lcall
mov
test
jo
dec
push
test
mov
out
adc
in
and
loope
decl
and
adc
inc
cmp
pushf
cmpsl
shl
popf
int
fisubrs
jbe
or
xchg
pop
std
jl
xchg
xor
xchg
cmp
dec
xchg
data16
clc
aam
hlt
jnp
pop
ret
push
mov
mov
jge
mov
jecxz
sbb
std
pop
loopne
in
mov
add
jo
xor
addr16
outsl
fs
mov
push
mov
xorl
jg
inc
cmp
and
jnp
xchg
sbbb
add
xor
cmp
call
ljmp
sub
cmp
add
mov
lcall
and
loopne
jg
das
icebp
mov
fcompl
jle
pop
or
mov
decl
fwait
retw
pushf
push
or
and
mov
sbb
imul
incl
sub
mov
negb
mov
adc
popf
and
dec
fists
mov
mov
mov
inc
mov
jae
jae
negl
test
adc
cmovnp
and
inc
fdivl
jae
mov
inc
cli
pop
outsl
int
cltd
jmp
sti
inc
incl
clc
xchg
aaa
fcoml
outsl
loopne
push
lock
pop
or
pop
mov
pop
das
xor
cli
ret
push
cmp
pop
push
push
movsl
add
decl
or
push
cmp
in
testb
xabort
jg
repz
dec
mov
rorb
ret
mov
iret
and
push
pushf
jmp
aaa
fldcw
pushl
mov
sarb
xchg
pop
sahf
iret
mov
addr16
cmp
adc
lods
outsb
insb
lock
sbb
lods
scas
sarl
mov
and
stos
xchg
mov
out
xor
sahf
sbb
sub
shrl
dec
imul
ret
ret
test
jg
mov
loopne
data16
pop
fstpl
mov
rcrl
decl
xor
mov
or
push
mov
and
test
dec
adc
inc
cld
dec
mov
mov
mov
cld
jno
mov
lcall
jg
enter
xchg
dec
push
mov
adc
xor
fxch
jb
cli
sbb
ljmp
jbe
fsubs
arpl
or
mov
popf
cmc
mov
repnz
rclb
jp
pop
cli
ljmp
ficomps
iret
and
sbb
lret
mov
fstpl
jge
jle
imul
test
push
add
call
or
cmc
lret
mov
dec
std
lret
sbb
vcvtpd2dqx
mov
mov
decl
jno
repz
jb
scas
adc
lods
push
lods
jb
out
sbb
icebp
movsb
call
xchg
adc
rcrb
shll
mov
mov
xchg
jbe
mov
dec
cld
mov
mov
fisttpll
fwait
push
inc
push
outsb
fisttpl
dec
pop
add
lock
imulb
in
cmp
call
cmp
pop
es
pop
loopne
pop
pop
cmp
jmp
wrmsr
addr16
stos
int
leave
jp
jmp
fs
add
cmc
mov
mov
in
fs
sbbl
aaa
jle
mov
mov
sub
jl
ss
add
bound
dec
ljmp
jge
insb
push
loopne
mov
outsl
pop
mov
lds
insl
lret
aad
les
sub
movsl
jmp
inc
cli
call
adc
out
jne
ja
mov
push
inc
mov
jg
shr
outsl
or
jae
cmp
cs
ljmp
add
or
jne
and
insb
add
mov
push
shrb
fnstsw
cltd
xor
xchg
scas
push
popa
loopne
mov
aas
jecxz
cmp
xchg
jno
mov
popf
sti
and
dec
add
pop
sbbl
ljmp
fistl
mov
add
sahf
icebp
add
adc
push
jo
mov
mov
pop
or
xchg
adc
jnp
lds
pushl
pop
setp
inc
cli
sbbb
add
xor
mov
and
add
out
mov
movsl
jmp
pop
or
arpl
cmc
movsl
cmp
pop
adc
lods
stc
cmpsb
xchg
cmpsb
cmp
xchg
call
mov
fdivr
xor
ds
cmc
ljmp
sub
jp
cmp
insl
cli
sbb
lcall
lcall
shrl
insl
or
mov
cltd
sub
test
cmc
mov
mov
in
jnp
mov
or
lret
cmp
push
dec
dec
and
sahf
or
ss
andb
cld
jmp
sbb
sub
push
pop
push
cwtl
xor
add
push
icebp
cmpb
jge
les
and
das
icebp
sbb
inc
jge
xor
outsl
ror
fs
fstpl
lcall
test
mov
mov
leave
jne
push
pop
dec
mov
in
mov
sar
out
inc
mov
push
xchg
cmp
cmc
push
or
fadds
pop
push
mov
repz
xchg
xchg
sbb
cmc
or
sar
incl
hlt
pop
lods
or
arpl
lret
push
mov
pop
in
inc
or
or
mov
pop
cld
dec
and
shlb
int3
mov
push
sbb
les
pushl
das
mov
ja
dec
lock
push
or
adc
cli
lret
stos
inc
or
jns
gs
decl
popf
test
sub
arpl
and
jnp
in
push
jb
lcall
pop
fildl
lods
or
mov
inc
scas
inc
mov
cwtl
adcb
outsl
jge
jge
push
push
add
jno
sbb
sub
add
ds
jmp
cmp
out
lock
fildll
inc
dec
lds
ljmp
cld
popf
es
mov
or
std
pushl
in
nop
push
bswap
sub
sbb
xlat
push
sub
adc
and
das
cs
popf
xor
pop
push
mov
cs
in
inc
xchg
mov
xchg
loop
jg
cmp
imul
inc
pushf
loope
xor
mulb
iret
movsl
fildll
loop
mov
adc
adc
inc
call
clc
incl
xchg
cmpl
pop
push
jb
iret
fildl
popf
inc
div
sbb
cli
ljmp
out
cmp
pop
dec
stc
sub
dec
repz
lcall
mov
je
pop
pop
mov
inc
mov
dec
decl
jmp
inc
xchg
adc
test
fwait
inc
xlat
sub
call
jg
outsb
add
mov
scas
enter
sbb
enter
cmc
or
sarl
rclb
fisttpll
and
dec
incl
xor
add
je
inc
out
and
lds
incl
sbb
sahf
cmp
lahf
mov
ss
xchg
imul
cmp
sbb
mov
dec
cmp
and
lcall
xor
fiaddl
jno
and
push
push
sub
call
ljmp
sbb
mov
mov
xor
call
clc
push
movsl
into
ret
xchg
loop
inc
mov
push
jg
and
add
inc
sbb
mov
inc
adcl
inc
dec
nop
bound
ljmp
push
add
fs
repz
movb
sbb
ss
adc
fucomip
and
addr16
pop
and
adc
mov
cmp
les
icebp
es
je
and
mov
inc
and
xlat
stos
movsl
push
xor
call
pop
js
mov
sub
lcall
je
and
test
icebp
lret
daa
cld
in
lock
mov
and
push
lret
dec
loope
mov
iret
sbb
mov
pop
push
inc
cmp
push
jae
xor
lcall
sbb
cmp
into
fs
imul
cli
fimuls
imul
cli
pushl
dec
mov
mov
add
add
sbb
cmp
ss
dec
push
pop
or
mov
sbb
dec
scas
ljmp
xor
orl
pop
mov
fcompl
push
decl
outsl
xor
lahf
imul
loop
call
adc
incl
push
jnp
imul
mov
shlb
fnstsw
xor
cld
push
push
loop
and
sahf
daa
adc
push
leavew
cmp
fnstcw
das
cld
lcall
jne
aaa
push
lds
in
mov
mov
fisubs
cwtl
jno
inc
sbb
pop
xchg
cmpsl
push
cmp
xor
ljmp
pushf
pushf
pop
in
lock
adc
data16
test
xchg
nop
int3
std
movsb
jp
mov
add
cwtl
mov
cmp
decl
adc
push
jl
pop
aaa
mov
hlt
iret
xchg
push
inc
call
jg
mov
dec
pop
dec
jl
mov
jo
in
and
loopne
ja
and
stos
add
push
jmp
push
inc
ljmp
shr
dec
pop
xor
outsl
inc
sbb
popf
nop
outsl
aam
and
cmp
inc
das
cmc
jns
cmp
mov
addr16
jge
fdivs
mov
loop
jno
sti
xchg
outsl
inc
icebp
call
add
scas
push
sub
fcomps
hlt
idiv
jmp
mov
add
jae
out
fsubl
aam
jo
mov
sub
pushl
mov
cmp
test
sahf
imul
insl
mov
dec
sbb
lcall
dec
fidivrs
cltd
cs
mov
int3
adc
call
lret
sbb
pop
sbb
ret
lcall
scas
sub
faddl
subl
jmp
push
add
jns
pop
call
push
rcrl
sub
inc
push
stos
sahf
sti
call
out
test
clc
das
and
in
sub
movsl
xchg
and
nop
insl
lods
jg
ljmp
ja
mov
mov
ret
inc
sub
jg
ljmp
in
fcomi
jmp
mov
pmaxub
add
notl
sbb
outsl
push
loopne
or
cmp
mov
cld
test
call
dec
mov
fs
xor
cld
cmp
jbe
mov
popf
shll
inc
mov
pop
aas
mov
sbb
cwtl
mov
aam
mov
lcall
lret
leave
bound
testl
add
test
sbbb
mov
jmp
jmp
or
arpl
decl
jo
xor
aad
rorb
add
dec
cmp
out
enter
fldt
std
decl
inc
and
mov
aaa
mov
pop
fsubs
xor
call
sub
pop
or
pushf
pop
pop
xor
daa
stc
lcall
sbb
adc
sub
push
imul
fcmovnbe
rorb
gs
dec
mov
cmp
adcb
jle
std
imul
outsb
enter
cmp
stc
loopne
xchg
outsb
lock
clc
ljmp
mov
scas
cmc
outsb
cmp
pop
cld
sub
lods
lret
inc
jo
shll
or
jg
dec
adc
aad
add
jecxz
repnz
pop
xchg
ficompl
out
or
fucomip
sbb
push
shll
insl
push
lods
aaa
into
bound
mov
jno
decl
mov
in
push
push
xor
and
jae
push
mov
rclb
xchg
xchg
loop
cmp
movsb
les
jno
lods
test
sub
fbld
pop
xchg
jnp
sbb
cmpsl
push
and
mov
mov
cmp
push
stos
loopne
xor
lods
ljmp
or
push
xor
stos
iret
leave
decb
cli
call
mov
inc
pop
ret
inc
ljmp
shl
and
xor
cmp
loope
cs
cltd
and
decl
and
clc
inc
fldt
push
adc
in
mov
jmp
fildll
cmp
pop
sbb
pushl
dec
mov
inc
insl
jne
mov
pop
adc
movsl
incl
jp
mov
cmpsb
call
rorb
or
incl
roll
inc
lahf
and
jmp
push
dec
or
cli
and
lcall
loope
pop
ret
nop
je
mov
lods
je
and
call
jmp
adc
test
add
test
mov
cld
jae
cs
dec
ljmp
xor
mov
pop
imul
mov
clc
jb
ss
or
xchg
imul
imul
jg
pusha
jecxz
jmp
sub
fldcw
mov
pop
call
fdivrl
add
fldt
and
lods
pop
or
and
loope
push
dec
pop
ds
call
das
lahf
or
xor
nop
adc
sti
push
push
jbe
add
cld
lcall
adc
std
mov
jmp
cmpsb
dec
inc
xchg
mov
fistl
das
xor
cmpsb
rorl
lea
adc
and
jbe
std
dec
push
push
fisubrl
gs
aam
ljmp
push
push
int
out
pop
push
mov
adc
outsl
sbb
push
stos
shlb
fistpll
ss
stos
lds
pop
into
lcall
mov
ljmp
into
or
or
push
es
and
xchg
clc
insl
jmp
iret
adc
pusha
in
pop
push
shlb
shrb
adc
mov
incl
cwtl
in
stos
cmp
movsb
leave
scas
jecxz
movsl
aaa
jno
popa
inc
sub
lcall
jns
mov
data16
fwait
js
push
inc
lds
jno
and
aaa
jmp
imul
mov
ret
into
add
dec
mov
cmp
push
xchg
mov
rcrl
cs
jns
aaa
and
xchg
outsl
xor
cmc
mov
xchg
and
mov
dec
stos
and
test
incl
rorl
pop
cld
fists
lods
adc
pop
cwtl
add
jo
data16
loop
call
add
add
aad
int
mov
dec
stc
fsubrl
jmp
gs
out
icebp
dec
repnz
mov
or
push
sahf
lcall
mov
jo
rcll
imul
sub
fdivrp
ljmp
mov
rcrb
mov
mov
loope
dec
jbe
cmp
jns
mov
add
jo
lcall
fs
pop
pushf
pop
ret
jbe
push
cs
popf
daa
iret
pop
pop
push
outsw
fstps
mov
ja
cs
inc
jb
and
roll
jg
sbb
jecxz
fistpll
xor
mov
repnz
fucomip
pop
sahf
inc
cmpsl
mov
push
orb
mov
adc
incl
mov
mov
dec
out
shl
out
sub
pop
and
cmp
xor
das
and
test
or
decl
std
xchg
mov
xor
aam
xor
sub
test
xchg
das
xor
mov
ret
or
and
aas
xchg
jns
cmpsl
jge
pop
mov
add
mov
aad
xor
stos
cmp
cmpsl
insb
xor
stos
xchg
fwait
pop
cmpsl
movsl
jg
sahf
cmp
mov
or
xor
arpl
add
push
mov
sbb
ds
push
popf
inc
inc
sahf
pop
mov
aad
das
pop
and
jno
mov
pop
xchg
call
add
mov
pop
and
lret
adc
insl
dec
inc
pop
sarl
adc
shll
mov
jo
cli
mov
dec
int
sub
add
xor
jle
cltd
xor
leave
repnz
push
in
adc
andl
imul
dec
iretw
mov
mov
gs
lock
loope
add
and
add
mov
jecxz
mov
pop
or
sti
in
out
aas
decl
in
data16
outsb
ror
fbstp
xor
xchg
loop
je
push
lock
movsl
out
lcall
or
and
jne
jae
adc
movsb
add
pop
ljmp
mov
sarb
cmp
cmp
push
push
add
fldl
inc
mov
cs
jl
xor
inc
sbb
pop
inc
mov
test
jns
lsl
popa
xchg
push
dec
mov
mov
and
outsb
mov
sub
xlat
cli
add
sub
cmp
lahf
decb
jb
adc
pusha
jnp
adc
pop
push
dec
addl
jg
or
notb
adc
call
fisttpl
pusha
xchg
pop
jno
xlat
sbb
icebp
shll
call
pushl
cltd
bound
leave
sbb
inc
jo
push
shrb
dec
fisttpll
xchg
mov
xchg
stos
pop
std
push
mov
pushl
mov
add
or
ds
lods
cmp
push
adc
into
jns
jbe
dec
adc
fld
and
decl
jmp
xor
lea
daa
xchg
outsb
adc
insb
jecxz
sbb
or
pop
push
dec
lcall
cmp
push
das
lock
out
mov
pop
add
scas
adc
sbb
repnz
ljmp
in
sub
pop
pop
sub
ljmp
pop
shrl
leave
lcall
movsl
ret
mov
lret
mov
lahf
xor
sbb
aas
and
incl
adc
ficomps
adc
out
outsb
dec
pusha
cmp
xor
add
mov
cli
push
and
cmp
adc
sarb
pop
and
das
lock
push
xlat
sbb
jl
xlat
dec
lds
adc
jmp
mov
dec
gs
enter
insl
or
and
sub
out
dec
sbb
jae
push
adc
push
mov
test
out
and
pop
cmp
jg
fisttps
mov
ret
jge
and
and
jbe
lcall
cmpsl
sbb
dec
adc
push
je
hlt
xchg
jecxz
or
pop
xchg
loope
xor
mov
insb
xchg
fists
in
addr16
rorb
sbb
sbb
out
lds
or
jg
ljmp
push
or
mov
or
pop
flds
mov
test
test
insl
unpckhps
je
out
or
lea
mov
loope
dec
outsl
cmp
cmp
push
adcb
scas
sub
mov
insb
xor
aaa
mov
jg
repnz
clc
fs
jne
add
out
imul
lea
sub
sbb
out
ljmp
sub
das
cmc
mov
out
sub
mov
sub
imul
rcrl
repz
inc
jg
mov
repz
mov
add
in
das
add
loopne
xor
sar
les
cmp
pushl
jbe
mov
xor
stos
adc
popa
jno
xchg
fists
mov
cmp
cmpb
xor
push
pop
stos
mov
fmuls
lcall
cld
jne
push
cmp
push
mov
or
sbb
adcl
inc
sub
ror
stos
add
sbb
mov
test
xchg
lret
xchg
mov
imul
clc
jecxz
pushf
cmp
jle
fwait
mov
stos
and
test
pop
andb
mov
mov
movsl
aas
and
pusha
imulb
and
lahf
movsl
les
test
adc
mov
outsl
pop
es
je
xor
out
lods
stos
fnstenv
ljmp
cmpsl
popa
nop
loop
jp
xor
cmp
pop
inc
pop
mov
mov
adcb
adc
xchg
aaa
cld
sbb
mov
jl
dec
push
xchg
lret
mov
add
out
mov
inc
inc
jmp
pushl
jge
in
insb
inc
lea
and
add
and
ljmp
test
cli
cmp
out
test
test
jl
mov
pop
les
imul
incl
test
jmp
iret
xor
jg
mov
cltd
xchg
test
int3
sub
cmp
adc
and
sub
incl
sahf
pop
leave
mov
lea
sbb
fiaddl
mov
cmc
aam
lret
cltd
shrb
in
scas
pop
nop
or
mov
push
sbb
int
or
push
test
std
jmp
fnsave
loopne
mov
adc
sbb
lds
push
pusha
xchg
jge
pop
imul
mov
rclb
addl
pop
ja
lcall
dec
push
out
sbb
jl
sbb
testl
out
inc
scas
mov
pop
inc
fistpll
aad
push
dec
pop
pop
movsb
sub
mov
outsl
adc
jb
lds
adc
push
pop
or
dec
scas
pusha
sbb
jmp
iret
addr16
jns
lea
inc
hlt
mov
xor
jge
rclb
shlb
enter
or
pop
xchg
ret
pop
iret
lea
mov
out
dec
std
mov
arpl
add
mov
call
lods
mov
mov
cld
inc
xorb
add
pop
stc
cmpsb
mov
test
dec
insl
fistps
xchg
aaa
call
cld
out
adc
sub
and
xor
jmp
je
shll
int3
inc
pop
je
mov
xor
push
jmp
fcom
and
xor
cld
adc
fnsave
ljmp
mov
cwtl
rcl
dec
xor
pop
mov
mov
mov
jmp
adc
bound
mov
lods
and
js
sub
sub
outsl
add
jmp
hlt
mov
les
mov
fdivrs
sbb
ja
adc
xlat
mov
imul
jmp
rcl
cwtl
or
mov
clc
mov
hlt
xor
add
cmp
xchg
fsubrs
mov
js
or
out
dec
xchg
test
test
repz
dec
les
cmc
fs
testb
in
jno
outsl
and
lcall
lods
inc
loope
mov
mov
jmp
sub
hlt
inc
jge
push
push
mov
add
pop
cmpsb
xchg
lret
test
outsl
outsl
lock
xchg
nop
push
sub
in
aas
jns
add
stos
loopne
mov
or
cs
dec
imul
inc
dec
dec
loop
lods
mov
lret
xor
adc
xchg
inc
pop
jo
mov
inc
decl
bnd
lea
stc
inc
jbe
mov
sub
jecxz
test
arpl
jbe
scas
or
mov
mov
mov
lods
xchg
aad
iret
sahf
iret
sbb
mov
dec
std
jge
hlt
lcall
test
push
or
jno
jge
lret
stc
movsl
cwtl
dec
sub
ja
xchg
sbb
adc
lock
lcall
test
push
inc
sahf
push
dec
push
dec
cli
in
inc
mov
mov
rclb
lret
ljmp
test
adc
mov
sbb
cmp
or
ja
sti
pop
mov
cmp
cli
pop
jle
int
sahf
xchg
sbb
push
lcall
adc
xchg
push
inc
push
scas
sub
adc
adc
and
iret
cwtl
fildl
push
push
adc
out
loop
out
dec
sub
dec
push
das
or
sar
jg
aas
sub
gs
xchg
in
nop
pop
pop
cmpsb
into
sti
mov
sbb
aaa
jmp
aad
xor
je
in
outsl
adc
jns
xchg
adc
daa
xor
cli
pop
stos
inc
ljmp
sbb
jbe
stos
imul
sbb
decl
add
pushf
pop
aas
add
dec
mov
std
pop
loopne
ret
sub
loop
adc
jl
jmp
cmp
mov
cmpb
mov
fs
ljmp
mov
dec
cld
in
fadds
mov
bound
incl
xor
js
mov
out
jne
push
push
sbb
jmp
lods
sbb
bound
pop
insb
pop
push
pushf
mov
shld
out
dec
outsl
cmc
stos
mov
mov
ljmp
adc
mov
adc
imul
fs
cmp
mov
jg
mov
lret
inc
pop
test
jns
test
adc
mov
out
fwait
pop
add
mov
sub
push
add
ljmp
push
push
jle
ljmp
dec
daa
cld
test
jno
cmp
inc
jecxz
pop
cli
pushl
idivb
mov
imulb
movsl
int
pop
mov
out
jg
pop
scas
cmp
loop
outsl
mov
xlat
les
cmp
ljmp
mov
cmp
sar
enter
loope
add
outsl
scas
aad
mov
repz
rolb
pop
js
stos
sub
mov
push
fistpl
jmp
cmpsb
dec
cmc
outsl
stc
ret
ficoml
sub
outsb
lcall
ljmp
icebp
inc
jne
repnz
decl
pop
stc
push
sahf
lret
hlt
outsl
xor
mov
sahf
and
xorl
sbb
cmp
xchg
dec
sbb
jg
cmp
mov
dec
jp
insl
push
movlps
adc
scas
xchg
jmp
mov
not
ja
ljmp
out
jge
cwtl
push
mov
xchg
div
daa
jne
inc
lahf
inc
mov
ret
sar
out
pusha
and
and
addb
imul
or
decl
das
xlat
insb
inc
or
or
sti
sbb
push
jecxz
insb
sti
add
incl
pop
movsl
add
adc
fimuls
mov
mov
xchg
fs
cld
aaa
call
insl
mov
jecxz
insl
push
xchg
cmp
insb
aas
nop
jo
inc
inc
adc
mov
jmp
sbb
sbb
loopne
push
in
mov
ljmp
push
mov
jmp
lret
mov
fists
shrb
les
aad
mov
out
imul
jmp
inc
test
mov
insl
mov
cmp
ljmp
mov
mov
fdivrl
call
pop
and
adc
decl
or
js
or
dec
dec
jge
dec
xor
fs
adc
or
pop
out
pop
jmp
mov
outsl
and
fldenv
cmpsb
hlt
insb
xchg
push
outsb
les
pop
stc
inc
dec
sbb
sti
adc
dec
cmp
adcl
ljmp
or
mov
or
cs
pop
mov
or
imul
mov
loope
repz
call
sub
call
pop
pop
mov
insl
xor
push
dec
dec
in
pushl
stos
fistl
sbb
xchg
lods
adc
scas
xor
sbb
jp
push
mov
cli
xchg
pop
inc
mov
test
pop
ret
push
fstpl
pop
pop
jne
mov
pushl
scas
pop
outsb
cli
loop
int3
loope
xchg
adc
push
icebp
into
push
iret
arpl
fnstsw
das
sub
imul
leave
or
push
dec
inc
add
pop
mov
sbb
repz
push
cmpsb
out
inc
roll
gs
pminub
jg
push
mov
movsb
sub
pop
mov
cmp
inc
adc
xchg
sbb
in
roll
cmpsb
decl
push
testb
stos
push
inc
rcrb
inc
daa
sahf
out
movsl
fldenv
jmp
popa
stos
push
sbb
int
andl
add
fsubrl
js
push
mov
pusha
add
jo
sbb
call
fcomps
mov
cmp
outsl
daa
in
and
pop
gs
loop
fdivrp
clc
dec
mov
push
sub
sbb
mov
and
add
in
mov
ljmp
addr16
mov
mov
sbb
fildll
mull
je
pushf
mov
arpl
xchg
jo
push
cmc
popf
add
dec
add
aad
call
fcoml
mov
orl
pop
xchg
clc
leave
jmp
or
enter
jne
aas
cmpsb
and
decl
cld
fbld
xchg
int
outsb
cmpl
lahf
test
push
imul
mov
cmpsb
pop
push
jo
mov
and
lea
cmp
mov
pop
cmp
mov
popa
and
pop
lret
pop
cli
aaa
pop
push
mov
int
mov
mov
cmc
stc
pop
cmpsb
in
inc
and
data16
mov
fmul
xchg
mov
add
add
movsb
aas
sbb
fwait
xchg
outsb
out
jmp
add
xchg
arpl
xor
xchg
loopne
outsl
ljmp
mov
push
jb
mov
dec
xchg
dec
loope
mov
xchg
or
in
sahf
jmp
sbb
test
adc
inc
rclb
fdivrp
pushl
sbb
lret
pop
sub
mov
inc
mov
xor
in
ret
inc
movsb
xor
ret
pushl
sub
mov
fwait
sub
ja
test
push
daa
loope
cmp
xchg
scas
cmp
je
add
jae
mov
push
hlt
repnz
cli
outsb
and
ss
aas
dec
cmp
stos
jb
lcall
mov
call
dec
loope
cmpsl
icebp
dec
inc
sti
mov
sbb
adc
das
inc
cld
inc
cmp
or
pop
dec
negl
rcrb
aaa
pop
test
mov
xor
and
in
icebp
adc
and
inc
dec
cmp
mov
outsb
dec
jge
pushl
stos
mov
dec
push
mov
cli
aas
in
push
lcall
pop
idiv
mov
out
sub
push
pop
std
pop
and
sub
rorl
in
sbbb
fsubrs
out
sub
lods
mov
pop
inc
xor
dec
int
mov
mov
rolb
dec
or
mov
xor
loope
and
lcall
cmpsb
aas
pop
inc
cwtl
imul
call
add
sub
dec
addr16
push
pop
ja
mull
mov
loopne
jge
dec
ds
data16
lock
sub
cli
imul
xlat
pop
mov
xchg
mov
cmp
xchg
jl
pushf
mov
test
clc
roll
lock
popa
aas
je
out
push
mov
not
decl
es
pop
dec
lds
and
cmp
stos
sbb
xchg
leave
inc
jle
cmp
sub
adc
pushl
xlat
sub
pusha
cltd
jo
lea
pop
adc
sar
fcomip
sub
lret
stc
fisttpll
add
inc
xor
adc
jno
xchg
dec
pop
out
bound
push
mov
outsl
loope
and
loope
fidivrl
sbb
mov
inc
rclb
add
inc
mov
pop
int
push
or
jg
inc
es
push
test
addr16
movsb
loope
loope
out
pop
faddp
add
cmpsl
dec
fcomps
pushl
xchg
xor
dec
jg
pop
lea
nop
push
pop
mov
pop
insb
pop
jecxz
fnstsw
in
pop
inc
pop
push
mov
xlat
cli
fmuls
stos
lcall
gs
mov
outsb
fstl
xchg
and
mov
jge
or
scas
stos
cmpsl
mov
repz
lret
lock
addl
cmc
mov
scas
test
jle
mov
pop
push
adc
outsb
fmull
lcall
xor
scas
paddusw
popa
test
clc
mov
leave
daa
pop
loopne
loopne
lahf
icebp
das
lods
stos
cltd
inc
sbb
int3
jmp
push
ud0
icebp
incl
repnz
mov
sti
push
cld
sub
mov
cmp
mov
inc
sbb
aaa
mov
push
cmc
aas
mov
xchg
and
test
mov
cld
or
int3
data16
jl
decl
pop
mov
shlb
mov
ljmp
cmp
and
xor
xchg
mov
adc
incl
dec
xchg
jp
push
jae
cmp
pop
in
incl
aaa
int3
cmp
mov
loop
aam
jns
add
lds
push
jno
pop
out
out
leave
dec
lea
push
mov
in
fadds
lods
incl
fistps
cmpsl
and
mov
cmpsb
out
movsl
aaa
jl
inc
sti
xor
pop
sub
jno
cmpsb
push
fcomip
add
inc
mov
shll
imul
in
lods
incl
mov
mov
sub
mov
xchg
xor
lock
es
jne
push
lds
daa
mov
xor
lods
decl
jle
out
mov
lea
xor
mov
call
xor
xchg
fsubr
dec
shrl
adc
imulb
ret
dec
mov
mov
jmp
es
stos
jns
inc
outsl
xor
xchg
les
inc
sbb
mov
aas
sbb
decl
mov
cmc
mov
dec
jns
adcb
and
clc
or
mov
fnsave
ljmp
cld
jo
jno
loop
cmp
mov
push
adc
mov
mov
pop
push
dec
loop
and
lock
sbb
dec
rcl
mov
push
addr16
lods
shl
lret
mov
xorb
mov
gs
and
pop
push
and
insl
ds
xor
add
inc
movsb
call
mov
or
mov
dec
push
orl
mov
in
sbb
cmp
jnp
fisubs
adc
jge
pop
shll
xor
jle
push
xor
cmp
or
jg
sbb
jle
inc
cld
pop
cld
mov
lret
add
jmp
sub
mov
cmp
int3
cs
test
cld
call
cmc
les
and
test
cmp
movsl
pop
push
out
into
sahf
bound
cld
pushl
xor
lret
ss
int3
mov
decl
inc
dec
dec
add
push
stos
mov
sbb
push
decb
adc
aad
loope
mov
enter
sub
mov
mov
stc
xor
lds
xchg
dec
and
inc
mov
lock
ljmp
arpl
adcb
jo
lret
loop
jge
dec
das
sbb
sbb
jecxz
mov
jns
out
test
popa
data16
dec
xor
push
shll
out
es
adc
icebp
push
and
dec
adc
inc
jmp
icebp
call
sbb
xor
rcrl
jge
outsl
call
decl
add
ljmp
fsubrl
push
sbb
pushf
and
ljmp
decl
loop
cmp
push
add
xchg
sub
pop
adcl
cmp
incl
lahf
inc
stos
mov
sub
imul
shll
push
push
jg
out
imull
add
test
bnd
mov
addb
call
in
ljmp
mov
cs
jl
mov
popf
mov
stos
decl
insl
pmulhuw
push
ret
js
call
ds
movsl
dec
mov
popa
and
mov
mov
xchg
aad
pushf
incl
clc
pop
dec
enter
jno
cmp
xor
sbb
cmp
adc
repnz
pushl
mov
jo
mov
in
pop
gs
fidivl
imul
jmp
movsb
mov
mov
ficoml
xchg
push
pop
movsl
push
insb
cmpsb
shl
inc
pop
sub
int3
adc
arpl
sbb
cwtl
loopne
int
loopne
adc
imul
fisubrs
jge
lret
insl
pop
loop
jmp
adc
mov
push
mov
push
adc
fnstsw
adc
push
adc
sub
sbb
mov
stc
push
out
rorl
jo
push
lea
pop
int3
hlt
fisubrs
cli
xor
pop
cli
lods
push
jp
xchg
jge
cmp
loop
mov
call
sbb
pop
addb
stos
cli
mov
jecxz
sahf
lcall
fistpll
dec
daa
xor
mov
fisttpll
and
xchg
jb
mov
and
push
add
popa
mov
xor
out
inc
mov
jle
loopne
jecxz
inc
aam
insl
aam
mov
into
pushf
add
stc
out
push
fwait
arpl
xor
incl
nop
repz
iret
add
cmpsb
add
pop
mov
cmpsb
mov
sbb
jmp
sbb
sub
ficoms
sbb
xchg
addb
incl
sarb
mov
mov
mov
andl
mov
decl
mov
sbb
vpmaxsw
sub
call
sbb
mov
ret
jmp
xchg
xor
push
sbb
test
xor
adc
xor
leave
add
incl
std
lahf
data16
inc
fildll
jp
sbbl
dec
and
xchg
xlat
adc
dec
sbb
stos
sub
rcll
in
xchg
iret
pushl
fstp
nop
mov
movsb
push
or
daa
xchg
mov
dec
ljmp
hlt
movsl
test
cmp
add
nop
or
pushl
push
mov
rolb
repz
add
sub
jbe
pop
ret
aaa
add
sbb
vunpcklps
jl
ljmp
lds
lods
push
cmp
xchg
dec
lds
and
push
cmp
in
mov
hlt
sarb
inc
pop
lods
fs
aam
outsl
fstpt
popa
dec
mov
in
jmp
insl
jae
push
lods
sbb
jmp
in
aad
add
imulb
mov
dec
in
imul
mov
movsl
dec
cmp
cltd
sti
jno
and
mov
int
cmc
adc
sub
and
push
jnp
decl
cld
pop
add
aad
iret
cwtl
iret
cmp
pop
mov
movsl
mov
mov
inc
push
sub
push
jnp
add
mov
stos
lcall
js
dec
cld
incl
mov
push
out
adc
mov
daa
dec
jl
je
call
jmp
loope
iret
sti
xchg
ret
rcrb
das
fs
in
inc
inc
cmp
mov
cmp
xlat
loope
lcall
inc
mov
ret
adc
in
popf
push
sub
jno
outsl
mov
xor
sbb
sub
jo
adc
movsb
inc
jecxz
or
mov
sar
in
sbb
gs
pop
xchg
and
gs
ja
jecxz
call
xlat
es
inc
out
xlat
mov
movsb
in
sbb
arpl
mov
aam
sub
decl
inc
and
jbe
lds
xchg
xchg
test
testb
test
sub
pushl
lds
mov
les
js
aas
jmp
loope
mov
add
mov
out
sub
adc
shr
lds
add
jp
mov
inc
jno
outsl
test
inc
mov
std
fnstenv
out
cmp
cmc
sub
call
scas
mov
js
movsb
lods
push
leave
pusha
imul
arpl
lock
out
cmpsl
in
adc
or
mov
cmp
mov
mov
sbb
and
cmp
lea
sub
test
mov
repnz
pop
xlat
aam
addl
xchg
in
je
dec
ret
or
call
mov
repz
mov
rcr
movsb
fs
pop
push
mov
push
inc
pop
in
aaa
mov
std
mov
mov
test
dec
cld
dec
aam
ds
jg
xor
das
mov
int
jne
dec
rcrl
out
fstps
std
lcall
popf
stc
ret
notb
xorb
pusha
xchg
sub
xchg
xor
push
movsl
cli
pop
cli
call
jl
iret
mov
mov
scas
movsl
mov
out
fwait
bound
push
sub
jg
xchg
fstpt
dec
sub
and
loop
aad
frstor
and
add
jno
mov
ljmp
push
into
xchg
xchg
xlat
jle
and
ja
std
lcall
mov
sub
mov
jp
in
xlat
or
cmp
mov
imul
jns
ret
add
mov
fisubs
and
fists
jg
test
mov
divb
push
jl
lret
pop
and
leave
js
icebp
inc
xor
cmp
addl
icebp
sbb
sub
inc
xchg
mov
dec
test
dec
dec
jecxz
inc
jne
gs
mov
gs
test
imul
adc
add
fdivr
sub
cld
incl
lcall
and
pop
ja
jb
push
sbb
jge
inc
sub
push
sbb
add
popfw
and
aad
dec
adc
jmp
ret
or
rorl
and
aad
stos
decl
int
push
mov
lcall
mov
xlat
gs
cmp
mov
popf
mov
into
sbb
dec
in
mov
cld
decl
ja
push
inc
outsl
into
mov
fwait
subb
cmpl
incb
inc
in
rorb
scas
pusha
shrb
xlat
dec
fisubs
aaa
sub
jg
stc
std
scas
out
lahf
adc
mov
mov
adc
clc
pop
call
mov
cmpsb
or
or
mov
dec
xor
push
pop
test
mov
incl
pop
mov
popa
cmp
cmp
popl
lods
cmc
movsl
lods
adc
rcrb
mov
pop
mov
push
sub
insl
cmpsl
bound
mov
iret
jp
cwtl
push
mov
clc
pop
adc
dec
movl
call
lods
add
fcomps
test
add
cmp
jl
adc
mov
loopne
sbb
out
mov
jg
call
jge
fistpll
repnz
das
out
dec
hlt
nop
lods
ljmp
xchg
dec
push
mov
adc
in
ds
mov
jo
fcomip
xor
mov
sbb
ljmp
push
jge
icebp
sub
cmp
mov
mov
mov
fildll
cmc
dec
xchg
imul
ljmp
and
into
and
mov
adc
cmpsl
sub
call
sub
pushl
js
je
mov
adc
negb
jp
or
repz
push
inc
add
fs
movsl
mov
adc
push
and
jg
icebp
jno
xchg
je
xchg
mov
mov
dec
mov
pop
pop
loopne
call
negl
in
lcall
imul
push
and
fbstp
mov
cs
and
or
in
ss
dec
xchg
lret
push
sbb
mov
popa
push
mov
repnz
add
into
adc
or
notb
ret
jg
aaa
les
testl
and
sbb
xor
xor
sbb
and
xchg
daa
push
in
or
pop
mov
lea
rcrl
jbe
adcb
rdmsr
adc
dec
mov
jg
call
insb
mov
mov
mov
pop
push
and
xor
test
mov
sub
jne
jl
add
cmp
clc
fbld
int3
jp
add
mov
stos
test
xor
loop
sub
outsl
aaa
scas
pop
pop
movsb
das
xor
add
stos
lods
pop
out
jg
mov
mov
lds
je
dec
mov
subb
insb
pusha
cmc
decl
pop
fdivl
mov
movsb
or
xchg
jns
mov
jmp
in
in
jnp
out
mov
das
and
lcall
and
mov
ret
push
inc
add
popf
fnstcw
in
punpckldq
das
and
pop
pop
int
subl
push
adcb
dec
mov
out
fbld
or
mov
cs
filds
repz
enter
lcall
pusha
or
dec
mov
sub
adc
push
cmpsb
scas
stos
or
push
pushf
jae
in
sub
fidivrl
xor
mov
aam
push
scas
xchg
mov
test
fistps
fwait
or
data16
je
inc
push
jmp
out
popf
loopne
in
incl
shll
scas
cmp
pusha
outsb
mov
xchg
fcomps
adc
or
call
in
in
and
sti
mov
push
jne
daa
repnz
cmp
jmp
push
or
fwait
jge
mov
in
test
cmp
add
jmp
call
pop
rcl
sti
scas
and
divb
dec
mov
roll
inc
stos
dec
stc
pop
in
mov
pop
xlat
jg
adc
ljmp
jg
adc
xor
fsubrs
loope
inc
cmp
fidivs
add
fucomip
or
jns
jbe
bound
push
and
mov
pushf
aaa
stos
mov
pop
xor
pop
ljmp
fisttpl
daa
ss
loopne
icebp
call
add
aam
mov
sbb
mov
ss
mov
std
hlt
xchg
pop
or
adc
test
into
fbld
mov
jns
jecxz
dec
lcall
push
pop
jne
xchg
fwait
adc
icebp
mov
repz
pop
xchg
xchg
mov
jge
das
pop
add
dec
outsl
push
dec
mov
xchg
sub
decl
xor
and
cltd
repz
xchg
incl
ss
sbb
dec
dec
add
and
sub
mov
insl
iret
rol
xchg
ljmp
loop
ljmp
mov
rcl
sub
popa
fdivrl
mov
sub
outsb
rdtsc
call
mov
adc
std
jae
and
sub
out
cmp
add
subb
mov
mov
js
out
call
mov
idivl
pop
dec
add
cmp
fidivs
je
lods
stos
push
xchg
stos
sbb
daa
jl
pop
or
and
mov
pop
push
push
cmp
dec
stos
stos
incl
xor
cmc
imul
mov
ret
or
jg
mov
push
lds
pop
movsb
jp
adc
ljmp
pushf
xchg
lock
pop
mov
dec
jnp
fmuls
test
fisttpll
mov
in
lcall
in
div
jmp
jb
pop
add
insl
sti
int
ret
lods
loop
inc
push
scas
and
jmp
lods
xor
push
pop
pop
je
jmp
mov
mov
jle
movhps
fidivrl
push
outsb
push
xchg
xchg
cmp
je
loopne
dec
or
sbb
loope
fstpt
xchg
jmp
call
mov
xchg
sahf
dec
mov
dec
scas
inc
cmp
cs
stos
cmp
lods
cmpb
cmp
inc
mov
or
ret
incl
pop
insb
mov
testb
lahf
dec
inc
test
dec
cli
pop
sarb
pushl
xor
outsb
data16
push
cmpsb
call
add
jmp
add
mov
sub
xor
pop
add
cmpsl
lea
xchg
add
pop
cli
jmp
imul
cmp
rclb
sbb
xor
inc
cld
inc
enter
dec
jmp
add
push
je
out
int3
int3
popa
rcl
addr16
add
gs
xchg
xchg
movsl
xor
popa
sbb
pop
adc
jg
mov
and
daa
fwait
cmp
push
push
out
sbb
push
or
decl
sbb
jbe
adc
dec
movsl
fldcw
test
clc
movsb
mov
lahf
ljmp
add
sub
fistpl
add
ss
or
jg
not
imul
fs
add
std
pop
xor
sub
mov
xor
push
jmp
flds
call
incl
outsl
stc
popf
jge
pushl
fldt
arpl
mov
int3
loope
fsubrs
jns
sub
push
push
dec
adc
hlt
out
test
in
cltd
mov
hlt
incl
cld
dec
loopne
jp
jnp
sub
adc
dec
cmpsb
shrb
fldpi
scas
es
mov
movsl
mov
inc
or
in
insb
sbb
pop
add
clc
lcall
xchg
jmp
lret
cmc
pop
cld
and
icebp
decl
dec
scas
mov
int3
mov
call
push
aas
test
les
outsl
sbb
ljmp
or
xchg
subl
xchg
outsl
cld
jg
daa
lea
test
mov
sub
dec
icebp
movsl
movsl
enter
push
jp
push
adc
call
ljmp
or
leave
cmc
lea
cmp
cli
lea
push
fwait
cmp
add
lahf
xchg
int
xor
or
fnstsw
or
mov
add
movsb
xchg
pop
es
imul
fidivrs
jns
pop
loopne
mov
mov
mov
push
jno
cmp
cmc
inc
dec
xor
imul
sti
sub
lock
jmp
enter
and
push
shr
jo
lret
jbe
sub
xor
ljmp
dec
sbb
scas
stos
call
sbb
movb
mov
adc
add
scas
mov
and
fs
push
mov
icebp
jmp
jmp
sbb
jns
data16
js
icebp
roll
imul
ret
pop
hlt
xchg
clc
call
enter
js
rorb
in
aaa
inc
xchg
div
mov
inc
xchg
sub
sub
jno
mov
ljmp
jb
aaa
xor
mov
ret
js
sub
push
imul
adc
call
sbb
xchg
push
sbb
es
das
inc
bndldx
xlat
imul
jmp
imul
pandn
fnstsw
shll
jne
lock
add
into
scas
scas
decl
xor
fisttpll
inc
pop
je
xor
push
pop
xchg
lret
xor
pop
loopne
lcall
push
mov
roll
push
repz
ds
in
call
incl
inc
mov
pop
loopne
negb
cmc
pop
cmc
cld
inc
cmp
mov
jmp
imul
mov
dec
popa
sub
repz
inc
cmc
test
lcall
push
ror
ja
test
and
cmc
outsl
sbb
lcall
js
jecxz
insl
push
daa
jge
repz
call
push
mov
lock
into
test
jle
repnz
dec
clc
roll
mov
fistps
stos
into
mov
push
outsl
fs
mov
pop
push
add
cli
ljmp
ja
mov
std
sub
sbb
or
fdiv
movsb
dec
inc
outsl
lock
jge
arpl
fs
jns
mov
adc
sub
xchg
mov
lock
lods
aad
lods
xchg
dec
mov
or
movsl
cltd
imul
fs
jmp
jns
jb
ljmp
ret
mov
int
addl
jl
ljmp
push
cmp
popa
js
popa
movsl
xor
cs
add
rolb
call
mov
mul
lcall
cld
scas
jl
sbb
loop
jmp
inc
int
jne
into
lds
je
push
xchg
sub
lds
pop
sub
decl
dec
xchg
mov
sbb
es
sahf
pushf
lret
dec
in
push
pop
dec
iret
mov
push
and
dec
or
push
dec
outsl
jb
leave
xlat
jnp
fchs
js
in
push
lcall
leave
lret
int3
cmpsb
sti
rcrb
cmpsl
test
cmpsb
xchg
ljmp
or
movsb
leave
test
mov
aad
adc
ret
enter
scas
loopne
cli
decl
rorb
into
fdivl
cmp
jle
sbb
dec
decl
pop
mov
bound
inc
inc
pusha
and
jg
adc
int
fiaddl
ror
imul
dec
mov
pop
fcom
lcall
dec
xor
addb
jl
scas
ret
icebp
pop
dec
xchg
dec
cmc
ljmp
out
mov
fisubrs
cli
imul
gs
pusha
sub
pop
std
mov
lcall
inc
in
loope
add
int
lods
cmp
jecxz
rol
add
pop
faddp
sti
shrb
pop
loopne
pop
daa
mov
loop
aad
jle
xor
sbb
and
fistpll
xchg
push
hlt
stos
clc
or
pop
and
addr16
mov
sar
incl
xorb
cmp
adc
jg
fmul
loopne
sub
mov
es
xchg
adc
out
in
scas
repz
xchg
mov
jmp
out
into
mov
xchg
xchg
add
ja
flds
sbb
xchg
cli
incl
rcll
add
cmpsl
or
push
call
cmp
aam
add
jbe
ret
cwtl
mov
gs
dec
push
pop
push
and
jmp
jg
or
add
dec
mov
or
sub
inc
mov
adc
pop
adc
std
test
adcl
xor
jo
nop
adc
push
fsts
xor
ror
or
jns
fstps
push
xchg
xchg
jg
push
jne
inc
fwait
ret
dec
pop
sbb
lods
lods
popf
push
jg
mov
and
add
iret
inc
adc
or
push
stos
lods
push
pop
call
call
ret
hlt
push
test
rcll
pushl
mov
or
test
sti
mov
out
add
xchg
and
aas
lahf
sbb
insb
bswap
jg
mov
stos
movsb
pop
ja
mov
scas
ficoml
movsw
and
test
mov
rclb
fs
lcall
sub
ss
sub
pop
sbb
push
adc
daa
in
cmpl
clc
mov
out
mov
mov
fbstp
fnstcw
call
fsubrl
stos
sbb
stos
test
ljmp
es
in
sub
loopne
mov
xchg
xchg
fsubrl
push
ss
call
dec
inc
cmpsb
mov
cmp
mulb
mov
dec
mov
cmp
fadds
dec
mov
repz
mov
cmp
push
or
lcall
mov
pop
sub
xchg
mov
decl
mov
orb
dec
pop
cmp
push
jmp
out
add
jmp
adc
lea
les
dec
gs
dec
int3
fwait
xchg
into
shll
mov
addb
xor
push
cmp
add
pop
jp
xchg
notl
inc
jmp
xor
jle
in
repz
inc
cmp
lret
mov
pusha
mov
pushl
out
shrb
jns
jmp
mov
hlt
mov
out
in
pop
popa
inc
andl
ljmp
mov
sub
test
lock
inc
outsl
out
loopne
lcall
xchg
out
es
xchg
ljmp
ds
das
pushl
mov
adc
jecxz
aam
inc
bound
idiv
ljmp
sbb
push
cmp
test
add
iret
in
jl
xor
loope
aad
jg
sub
lock
jmp
pop
mov
and
mov
icebp
pop
lea
fldl
mov
aaa
mov
call
ljmp
fstpt
jbe
lcall
mov
pop
pop
shll
dec
incl
outsb
lods
push
in
mov
scas
mov
cmpsb
mov
or
mov
add
push
incl
imul
or
jo
rclb
pop
in
pop
mov
mov
inc
imul
movsl
mov
test
decl
lahf
movsl
inc
lock
dec
inc
leave
mov
inc
add
inc
sti
into
xlat
and
lea
or
dec
jge
xor
sbb
push
mov
xchg
add
adc
or
repnz
mov
out
add
mov
inc
mov
push
pop
jmp
adc
fisttpl
stc
adc
fstpl
jo
insl
repz
add
inc
in
std
mov
xchg
pop
pop
and
add
loop
ljmp
in
stos
and
aam
mov
sahf
mov
daa
fistps
das
mov
std
mov
mov
sbb
cmp
jns
mov
mov
rcll
hlt
jb
push
mov
outsb
aad
incl
rcl
cmpsb
aaa
push
xor
fistl
fs
mov
xor
jbe
pop
lods
imull
sub
lods
pop
mov
pop
adc
cs
cli
or
add
jmp
test
pop
arpl
pop
stc
push
push
js
and
mov
fisubl
aas
mov
pushl
outsl
adc
or
pop
pop
lahf
cs
lret
inc
rorb
dec
mov
decl
incl
fbstp
cmp
mov
xchg
ljmp
lock
inc
sub
mov
ds
gs
in
lea
push
pop
popf
scas
mov
xor
adc
cmp
inc
imul
cmc
pushl
or
xchg
cmp
dec
dec
adc
mov
or
jl
dec
jb
jmp
fiaddl
lods
call
jns
lret
stos
jno
dec
dec
popa
loop
push
dec
subl
or
iret
out
mov
cld
adc
sbb
outsl
ret
pushl
repz
jo
cmp
lea
clc
push
sub
iret
sbbl
loop
inc
mov
fstl
cmp
cmc
push
pop
xorl
pop
mov
sub
pop
in
leave
in
inc
outsb
mov
fiadds
mov
adc
mov
sahf
loopne
mov
pop
scas
repz
or
pop
xchg
jge
mov
pushl
lahf
lahf
or
fisubrl
xchg
and
sbb
repnz
mov
repz
pushf
insb
pop
andl
adc
mov
mov
repnz
inc
jb
jl
and
int3
stc
xor
rcr
push
xchg
adc
or
or
xchg
sub
in
lcall
xchg
sub
xchg
xor
push
xor
mov
xor
outsb
std
das
std
out
or
xchg
pop
jb
pop
inc
repnz
arpl
decl
xor
subl
xor
sbb
fcoml
je
jg
aad
mov
lret
test
pop
xlat
xor
cli
sub
popf
mov
push
insl
add
jns
xchg
loopne
decl
ret
mov
mov
out
xor
inc
aad
jge
pop
ljmp
mov
mov
mov
inc
cmp
adc
cli
inc
insb
or
sub
add
adc
xor
xchg
or
ja
sub
outsb
das
adc
sub
jmp
lods
pop
jecxz
clc
sbb
test
xchg
and
jecxz
dec
sti
ret
popf
icebp
bound
out
sbb
sbb
jmp
fxch
repz
dec
ja
int
jmp
repz
decl
iret
je
pop
or
or
rolb
mov
add
jmp
xor
int3
pop
or
ljmp
sti
call
jb
or
outsl
pop
xlat
in
push
sbb
sbb
cld
incl
cld
mov
lcall
or
out
push
and
lcall
sub
fsincos
insl
inc
lret
outsl
lock
pop
iret
insl
not
movsl
pusha
addr16
adc
std
std
pop
cli
jmp
sbb
xor
iret
push
mov
decl
jmp
in
sbb
roll
das
jl
xchg
xchg
sub
ret
and
pushl
xchg
je
stos
xchg
imul
ret
sbb
cmp
jg
incl
cmp
cmpsb
dec
add
fcmovne
sbb
pop
clc
movsl
push
gs
cs
jmp
fnstsw
fisttps
clc
cmpb
fcoml
xchg
enter
xor
arpl
push
pop
jne
lcall
aam
js
inc
ljmp
xor
or
pop
xchg
jmp
imul
or
mov
rolb
add
sbb
dec
cld
clc
outsl
movsl
mov
pop
bound
add
pushf
sub
xor
imul
enter
enter
jmp
test
jl
cmpsb
shrl
test
sbb
outsl
mov
push
std
mov
outsb
pop
or
testl
jbe
jg
call
repnz
jae
xchg
pop
push
movsl
or
inc
fdivr
push
lahf
push
mov
add
xor
add
out
ret
mov
rclb
or
mov
popf
pop
stos
cmp
sub
sub
mov
jae
xchg
add
rcrl
add
pop
add
dec
rcrb
mov
movsb
outsb
mov
aaa
mov
call
jg
movsl
aam
push
popl
out
pop
mov
cmp
dec
out
sub
dec
dec
lcall
inc
inc
mov
pop
fcmovnu
cmpsb
xor
ds
mov
push
gs
shll
leave
cmp
movsb
test
lds
jno
out
movsl
addl
jmp
in
push
pop
fsubl
fwait
decb
aam
lods
lods
lcall
imul
push
sbb
cmpsb
xchg
aaa
pop
xor
jae
mov
outsb
xchg
arpl
sbb
faddl
cli
loope
inc
push
pop
or
icebp
pushl
in
icebp
stos
jecxz
cs
out
iret
sub
pop
sub
lret
fstps
aas
paddusb
jbe
add
incl
loop
and
and
and
lcall
cld
ffree
pop
adc
pop
jno
mov
sub
fmuls
sti
mov
fdivr
mov
nop
or
jbe
jnp
addb
jmp
add
lcall
jo
mov
sub
mov
mov
pop
push
cltd
lret
out
leave
pop
and
jne
cld
incl
popa
xchg
inc
and
mov
mov
fstps
mov
aam
cmpsb
xchg
mov
ljmp
dec
clc
clc
in
xor
pop
in
hlt
sbb
push
xor
and
sub
jecxz
aad
inc
lcall
les
daa
arpl
loopne
inc
mov
pop
pop
cmp
in
pop
ljmp
in
mov
movsb
jg
ljmp
fs
aad
push
cltd
fisttpll
mov
das
hlt
aaa
popf
out
imul
test
adc
andl
pop
rol
inc
lds
out
sub
mov
outsl
rcl
inc
cmpb
roll
subb
cmpsb
add
and
pop
cmp
in
jmp
adc
lret
mov
das
lock
movsb
cmc
adcl
sarl
and
mov
call
jne
aas
push
jge
and
xchg
js
enter
loopne
push
jae
mov
clc
sub
dec
lret
push
mov
sbb
dec
jmp
mov
add
push
hlt
lahf
jle
jle
lock
adc
mov
movsl
subl
stos
leave
mov
pop
cld
das
shrb
ret
lret
push
or
stos
call
sbb
sbb
fucomip
sub
imul
call
xchg
sub
lcall
aas
sbb
ljmp
jge
mul
sbb
jne
mov
pop
iret
xchg
cli
pop
insl
inc
xlat
aad
jmp
stos
add
idiv
cmp
add
pop
shlb
adc
clc
cltd
jg
jg
incb
xor
pop
scas
inc
out
pop
mov
xchg
int
or
pop
arpl
or
inc
rolb
mov
dec
ret
jae
out
and
push
pop
call
fcomps
outsl
push
ljmp
xchg
cltd
fisubs
in
inc
cmp
or
push
xchg
test
mov
les
fpatan
add
pop
mov
adc
test
pop
lods
mov
sti
addb
xor
aas
sub
iret
mov
hlt
fiaddl
cmp
mov
shrl
add
mov
or
jo
pop
icebp
xchg
xor
call
push
int
enter
pop
cmpsb
daa
mulb
jno
adc
rcrl
push
or
decl
sbb
sti
mov
lods
push
jnp
imul
scas
cmpsb
dec
ljmp
or
dec
or
jnp
ret
bound
stos
dec
xor
in
inc
je
outsl
sbb
decl
fiadds
mov
jge
and
ss
mov
or
jmp
push
jb
adcl
daa
repnz
mov
shlb
mov
in
pop
push
pop
leave
sbb
dec
das
idiv
sbb
xchg
push
adc
clc
dec
lock
movlps
dec
push
add
push
push
rorl
xchg
push
shll
pop
clc
ljmp
sti
cmp
sub
or
or
hlt
nop
sbb
in
je
xchg
fs
aam
lret
pop
decl
cld
aaa
mov
stos
fsubrp
dec
push
jnp
dec
jg
add
std
push
inc
cltd
add
inc
sub
js
cs
sbb
mov
ljmp
pop
into
push
dec
add
xor
sbb
xor
loope
loopne
mov
data16
fsubl
jl
sbb
lea
cmc
incl
xchg
xchg
aad
sbb
pop
mov
lods
jmp
push
addr16
and
lea
scas
test
cmp
push
xchg
sub
icebp
pop
and
mov
in
call
sub
into
dec
mov
sbb
outsl
and
or
addb
ja
mov
pop
mov
inc
sbb
lods
decl
pop
mov
leave
test
in
imul
icebp
push
movsl
sub
test
cmpsb
mov
dec
inc
xor
cmp
cmp
lea
lcall
lcall
pop
clc
leave
pop
inc
push
imul
stos
xchg
fistps
std
jg
fldenv
xor
or
dec
in
adc
sbb
ljmp
mov
and
mov
cmpsl
mov
ja
inc
aad
mov
or
jns
popf
jecxz
out
stos
sbb
or
fucomip
lcall
adc
shl
out
int
das
fisttps
sbb
adcl
je
jmp
lds
dec
in
mov
iret
cmp
aad
jg
mov
sahf
sbb
xchg
in
cwtl
out
jp
aaa
jb
fsubrp
sub
das
mov
les
jns
cmp
cmp
inc
out
stc
cmp
sub
xchg
xor
cmp
shll
je
arpl
pop
or
push
inc
cmpsl
into
cmp
dec
and
jns
testl
xor
sti
inc
cmc
inc
data16
pop
out
mov
jge
cli
fwait
sbb
mov
mov
mov
das
hlt
xchg
cmpsl
std
in
lock
pusha
into
or
mov
aaa
pop
cmp
xlat
incl
je
sub
jl
jg
ljmp
fcomps
xor
dec
test
add
cmpl
mov
js
movsl
pop
adcl
loope
and
in
inc
jge
pushl
in
and
push
cmp
int3
ss
call
dec
adc
mov
jae
mulb
repnz
movsb
in
lock
add
lcall
mov
mov
das
mov
inc
ret
and
mov
fwait
gs
fisttpll
lcall
add
lds
add
out
mov
and
shll
xor
cli
mov
or
jl
fsts
mov
lahf
fucomip
ljmp
lds
repnz
pop
or
mov
in
sbb
stc
dec
add
aam
sub
push
cli
out
add
mov
sub
mov
jns
test
jg
lea
test
mov
hlt
lcall
dec
pop
cmp
cli
jge
nop
sbb
ffreep
js
add
or
pop
out
sbb
dec
xchg
push
or
lcall
mov
in
nop
pop
sub
iret
outsb
push
incl
decl
inc
push
dec
xchg
in
or
and
test
adc
and
sbb
jmp
inc
cmp
sbb
enter
lods
nop
ficompl
xchg
clts
sbb
sbb
repz
lcall
push
sbb
adc
nop
fidivs
leave
push
into
call
fisttps
lcall
ljmp
hlt
decl
push
loop
pushl
lock
in
in
push
add
incl
sbb
rcr
push
push
push
mull
fildl
dec
jnp
lcall
adc
inc
pop
dec
mov
push
xchg
imul
cli
xor
mov
pop
lock
jbe
cli
fisttpll
mov
pop
or
sbb
mov
lret
out
push
sub
mov
or
mov
jnp
pop
repz
lcall
fnstenv
adc
mov
push
out
fdivs
jg
mov
imul
daa
fadds
cmp
jecxz
std
push
adc
jecxz
into
jle
les
dec
push
decl
sub
mov
cmovg
cmpsl
lret
mov
movsb
inc
outsl
sbb
fdivl
rcrb
jg
fsts
adc
sbb
jnp
stos
sub
fidivrl
mov
inc
cmp
test
dec
jno
jg
push
inc
cli
test
popf
mov
arpl
inc
and
data16
cmp
int
popl
push
and
fs
jg
mov
xchg
orl
push
pushf
mov
fists
sub
stos
push
movsb
subb
adc
cmp
fmuls
and
outsb
stos
mov
push
cmpsb
xchg
fimull
aam
in
addr16
dec
roll
fucomip
jbe
push
out
out
or
popa
cs
or
int
int3
lret
lods
mov
xor
call
daa
pop
in
test
sub
iret
and
enter
mov
jmp
dec
pop
mov
jmp
ja
sbb
fdivr
fnstsw
jg
fmulp
sbb
aad
stos
mov
pop
xor
lcall
mov
adc
cwtl
or
sbb
ljmp
xor
sahf
addb
cld
inc
shrl
pop
movsl
in
incl
xchg
mov
scas
mov
ret
lea
das
icebp
jp
xor
fisubl
daa
push
dec
xor
cmp
pop
mov
xor
clc
inc
mov
aam
dec
xor
std
iret
outsl
xlat
fwait
jmp
lock
dec
lock
in
das
pop
stos
push
sbb
jns
clc
call
imul
cli
test
and
js
and
test
ss
sahf
pop
add
call
arpl
sti
push
divl
pop
mov
divb
mov
sub
repz
jmp
mov
jmp
ret
insb
or
mov
movsl
test
xchg
jns
inc
add
jo
jmp
adc
mov
fld
pop
pop
inc
and
enter
cwtl
or
lea
pop
inc
adcl
cltd
xchg
fildll
mov
sbb
cltd
adc
mov
aas
mov
ss
js
dec
into
xor
lock
std
stos
add
jmp
sti
call
dec
aas
es
nop
mov
and
inc
dec
or
cmpsb
xorb
xchg
mov
push
inc
xor
cmp
ljmp
or
incl
adc
mov
repnz
pop
clc
das
in
mov
outsl
push
sub
mov
dec
and
adcl
add
xchg
mov
dec
dec
rorl
test
gs
inc
sub
jb
cli
dec
mov
fbstp
outsb
jl
push
aas
fwait
scas
or
fucomip
bound
jae
cmp
adc
subb
jg
dec
adc
loop
pop
fcomps
xlat
rorb
mov
int
nop
nop
ffree
xor
mov
std
decl
ljmp
mov
ja
lcall
mov
jge
out
ja
ljmp
dec
addr16
scas
pop
push
push
test
add
nop
cmp
jecxz
mov
hlt
mov
fsts
pop
mov
adc
push
cmp
mov
mov
fimuls
cmp
add
and
mov
hlt
out
and
push
ljmp
into
js
push
daa
clc
jecxz
xchg
xchg
roll
ljmp
pushl
push
mov
jmp
and
push
and
sar
xchg
sub
loopne
add
sti
out
mov
fwait
ljmp
test
es
lcall
mov
rcl
mov
iret
xchg
xor
and
pop
or
js
jmp
ljmp
out
hlt
das
cld
das
cmp
out
cmp
pushf
push
insl
jb
es
push
clc
mov
fldl
jo
sarb
mov
xlat
test
pop
je
subb
pusha
and
push
iret
lods
mov
inc
in
es
dec
fldt
push
jo
icebp
sub
fdivr
jg
leave
lahf
pop
push
push
das
clc
fwait
mov
jne
sub
push
pop
js
addr16
lcall
pop
testl
test
out
lock
jbe
into
or
incl
xor
cmpsb
lret
lds
jl
lock
or
cmp
in
dec
lods
xchg
lret
lret
bnd
clc
xor
xchg
inc
movsl
cmp
pop
in
sub
imul
mov
aad
call
jmp
addr16
je
scas
arpl
in
jbe
ret
jmp
xchg
mov
push
loopne
frstor
ljmp
std
test
jne
cltd
fsubrs
aad
enter
std
adc
xor
mov
add
add
es
cmp
pop
loopne
gs
scas
push
inc
pop
or
jmp
mov
cmpsl
stc
or
lcall
insb
out
sbb
lea
sarb
mov
pop
xchg
cli
push
imul
jmp
cmp
mov
daa
jbe
movsl
lea
cwtl
iret
dec
sub
sar
decl
adc
mov
shrl
jb
sbbl
mov
push
add
lret
outsb
and
mov
fmull
sub
jae
or
sbb
es
or
or
aam
add
pop
subl
icebp
jg
sub
sub
mov
data16
push
hlt
lods
mov
sbb
outsb
xchg
xor
xchg
stos
shl
adc
sbb
cmpsl
je
les
test
inc
mov
std
call
cltd
hlt
aad
add
or
fildll
push
and
add
cmp
fidivl
cwtl
lock
sub
push
inc
js
and
jae
inc
fwait
xchg
jle
ljmp
std
and
aaa
push
sub
enter
call
mov
insl
popa
dec
cmp
rorl
dec
xor
movsb
add
incl
push
add
rol
inc
loope
inc
adc
or
loope
mov
add
mov
mov
jno
lcall
pop
in
add
pop
shll
dec
std
pop
lcall
arpl
add
mov
fcoml
adc
sub
int3
dec
outsl
cmc
pushl
fcompl
mov
lret
mov
xchg
jp
in
jae
pop
push
fucomip
cmp
sarl
loopne
in
jge
mov
add
xchg
shll
adc
sub
cli
mov
idivl
or
arpl
pop
push
push
decl
or
iret
nop
jne
aam
incl
push
nop
cltd
cmp
das
lret
movsb
pop
fisubl
push
int
not
sub
sbb
add
inc
and
mov
scas
inc
xchg
jmp
das
adc
arpl
sub
adc
loopne
lcall
cmp
pop
xor
fwait
push
cmp
fcomps
push
cmp
loop
fnsave
add
push
enter
sbb
outsl
cld
dec
inc
mov
inc
mov
lahf
int
sahf
pop
pop
sbb
sbb
dec
push
test
dec
dec
jnp
sbb
jmp
pop
lods
insb
mov
mov
loopne
or
add
mov
dec
dec
or
incl
push
jmp
or
push
scas
sbb
out
sub
lret
div
or
clc
pop
pop
cli
pusha
or
mov
lods
cwtl
fnstsw
sbb
cmpb
cltd
mov
or
test
push
enter
cld
ljmp
mov
call
stc
mov
addr16
repz
push
clc
insl
les
and
mov
pop
sub
call
push
xor
scas
xlat
stos
mov
and
arpl
jg
or
jg
ja
pop
add
aas
mov
gs
dec
cmpsb
aam
push
sub
into
loop
je
sti
jg
inc
arpl
lock
pop
insl
repnz
xchg
fstp
add
or
test
incl
jno
idiv
push
in
int3
popf
pop
push
mov
outsl
daa
lret
xor
call
imul
or
test
pop
out
imul
jecxz
mov
icebp
aaa
pop
sbb
in
loop
mov
pop
push
mov
and
call
mov
xchg
mov
sub
cmp
mov
call
out
jg
leave
sarb
repnz
fcmovnb
mov
jb
movsb
fwait
cmpsl
cs
adc
icebp
incl
test
or
jmp
jp
sub
mov
or
ror
jns
rorl
test
outsl
fldl
mov
out
shrl
sarl
mov
inc
or
cltd
scas
sub
mov
jmp
je
push
nop
jns
fwait
ret
add
cmp
inc
jns
xchg
iret
cmp
aad
sbb
jmp
hlt
inc
mov
jmp
and
cmp
loope
decl
mov
flds
fmulp
shlb
inc
push
aad
jns
mov
push
fldl
cmp
xchg
cld
mov
or
in
js
lret
and
sahf
jg
stc
xchg
jg
or
out
sub
mov
pop
std
imulb
mov
test
dec
rcl
push
mov
jae
fwait
cmc
xchg
xchg
cli
call
stos
sahf
test
push
jmp
push
fwait
inc
imul
stos
mov
jle,pt
mov
push
repz
add
pushl
mov
add
push
mov
bnd
cmp
cmpsb
mov
rorb
mov
arpl
hlt
mov
jp
pop
mov
mov
outsl
lds
decl
cld
incl
push
shll
adc
push
adc
push
sub
pop
jmp
dec
push
and
sti
fsub
pop
cmpsl
mov
cmp
sahf
push
in
cmp
mov
divb
sub
mov
mov
pushl
adc
dec
dec
icebp
jl
loop
test
incl
js
icebp
mov
cmpl
xor
pushf
inc
jmp
sbb
pop
repnz
push
mov
movsl
mov
xchg
mov
sub
ljmp
or
dec
push
sbb
dec
leave
adc
mov
lds
mov
adc
xchg
outsl
lock
jne
jns
int3
lods
jnp
cmp
fistl
decl
repnz
idivb
test
pop
xchg
loope
push
inc
mov
mov
test
jmp
aas
and
dec
fwait
mov
incl
xchg
push
xchg
sbb
insb
push
dec
inc
mov
gs
les
cmpsb
push
xchg
jno
and
pop
mov
and
std
jbe
mov
push
adc
cltd
loop
ret
add
or
decl
or
adc
push
cmp
lahf
adc
dec
and
decl
out
nop
loope
aam
mov
fmulp
jno
sbbb
lret
ljmp
jmp
inc
ljmp
lret
loope
popa
pop
int
jo
in
incl
push
lahf
adc
rolb
stc
aad
mov
mov
incl
jg
or
cmp
std
mov
jp
dec
sbb
lcall
and
call
and
out
popa
stos
sub
fidivl
and
mov
dec
xor
sarl
ljmp
pop
or
sbb
cmp
leave
jp
ljmp
call
pop
gs
push
addr16
fsubl
xchg
fsubrl
or
and
mov
or
pop
fdivr
mov
outsl
mov
and
pop
rcll
call
test
ljmp
add
mov
mov
pusha
les
xchg
dec
out
or
in
add
push
xor
dec
lret
cmpl
sar
call
or
pop
stos
cmp
dec
enter
mov
mov
outsl
adc
mov
lods
mov
lcall
out
hlt
add
xchg
lea
and
mov
shll
add
dec
xchg
pop
cwtl
sbb
incb
jae
and
fbld
ss
mov
add
lock
insb
dec
sti
adc
push
hlt
mov
adc
test
inc
push
adc
popa
mov
add
xorb
lret
pop
push
insb
pop
mov
jae
shll
pop
adc
stos
xchg
and
jg
subl
jge
movsb
inc
xor
aas
jmp
jmp
std
mov
lcall
test
insb
push
adc
push
lret
mov
inc
sub
push
cmpsb
sbb
subl
mov
dec
xchg
or
enter
lcall
ds
ss
leave
lahf
out
mov
xor
repz
pushl
clc
sbb
jbe
push
push
ret
fcomps
and
xchg
das
das
mov
jmp
push
fcmovb
arpl
mov
into
sbb
pop
jmp
cmpsl
ret
nop
xchg
xchg
or
into
push
rol
add
bound
decl
movsl
pop
xchg
and
mov
mov
iret
dec
inc
std
mov
flds
inc
dec
cmp
pop
inc
mov
sbb
pop
sub
bound
call
jg
adc
mov
push
cmpsl
mov
int3
xchg
xchg
cmp
xor
adc
dec
test
mov
popa
mov
xchg
fstps
or
std
mov
mov
loopne
lock
and
stos
mov
push
test
or
fbld
or
cmp
inc
sub
or
sub
xchg
aaa
and
inc
jns
mov
int
leave
ljmp
out
into
outsl
sar
dec
cvtps2pi
xchg
test
pop
ficoms
js
ss
push
add
mov
arpl
movsl
mov
lret
and
and
test
call
xor
movsb
cmc
push
adcb
jmp
pop
sbbb
or
sahf
bound
xchg
movsb
invd
push
jo
mov
das
std
cmp
fidivs
js
addr16
or
fidivl
inc
out
xor
lock
cs
xchg
mov
rorb
mov
add
dec
mov
jnp
iretw
imul
and
fnsave
adc
mov
cld
push
enter
in
cs
or
je
test
ds
adc
inc
jmp
je
decl
aad
xchg
lock
push
rcr
testl
lea
push
rolb
cmc
mov
mov
scas
orl
in
dec
push
sub
jle
xchg
jmp
into
cmp
div
mov
andb
push
aad
sub
decl
les
push
mov
scas
sbb
mov
mov
push
mov
jp
imulb
adc
mov
incl
fsts
mov
lret
lcall
stos
xchg
sub
cmc
mov
lret
xchg
ss
js
in
push
aas
push
mov
jne
jg
ljmp
sub
in
insb
pop
mov
fcoml
mov
sub
loope
loop
xchg
cli
jne
scas
shlb
ds
push
jb
out
outsl
ljmp
mov
popa
aaa
inc
push
in
mov
lcall
lret
cwtl
inc
sub
popa
xor
jae
xchg
fdivrs
dec
incl
adc
cmp
in
mov
rcrb
popf
mov
call
jg
push
repnz
jbe
mov
add
nop
test
xchg
in
xlat
rcr
ja
adc
gs
xchg
movsb
rcrb
jecxz
dec
andl
sub
cwtl
or
jg
fists
adc
cs
shll
scas
subb
cmc
mov
pop
lret
int
add
in
sub
sub
lcall
mov
popf
incl
cmp
dec
outsl
cmc
cmpsb
aaa
subl
adc
pop
dec
xor
imul
push
fwait
sub
sub
lods
mov
bound
aas
popf
aam
mov
adc
mov
dec
aas
sbb
sbbl
xchg
and
jne
pop
mov
cmc
push
cmp
cmc
add
pop
call
cmp
jno
xor
mul
cmpsb
scas
repnz
pushl
jle
lret
xlat
mov
fs
or
cmp
bound
jg
sahf
in
call
js
xor
inc
mov
inc
data16
mov
xor
lret
lcall
push
dec
dec
xor
lret
xchg
sbb
js
pop
adc
icebp
or
push
cmpsl
gs
ljmp
hlt
mov
sbb
mov
rcr
gs
stos
push
ffreep
pop
mov
jmp
xchg
or
gs
mov
mov
adc
out
sbb
pop
mov
cli
and
dec
mov
sbb
ret
loopne
fists
ljmp
aaa
jns
pop
mov
scas
cli
ljmp
mov
pop
dec
cmp
pop
or
push
xor
sub
jbe
incl
mov
movsl
or
fcompl
les
mov
jg
lret
mov
scas
repnz
push
loopne
dec
es
aad
adc
aad
cmc
mov
dec
pop
subl
mov
aad
jmp
adc
into
ret
sbb
push
push
das
push
rcr
dec
ds
mov
and
test
decl
arpl
xchg
out
push
jecxz
adc
xor
int3
push
mov
js
lock
dec
mov
xchg
cmp
jb
mov
push
lods
lret
pop
and
jmp
push
jae
mov
jbe
stos
shll
xor
pop
mov
mov
jg
jne
out
sub
int
jmp
dec
cld
jae
ja,pn
push
lods
cmpsl
les
loopne
lods
mov
cltd
push
xor
dec
mov
andl
push
sub
popa
jmp
and
fstpt
mov
jle
outsl
inc
adc
mov
nop
outsl
add
sbb
mov
out
mov
adc
fildll
insl
or
lea
jl
rorb
pop
jbe
repz
sub
stc
push
stos
rorl
xchg
cli
call
push
jb
lcall
xor
sbb
mov
jmp
mov
mov
or
push
das
test
outsl
cld
fildll
and
scas
jge
push
scas
add
sbb
push
adc
push
push
pop
sub
adc
xor
mov
xlat
out
mov
dec
and
mov
dec
jge
or
sub
xchg
imul
add
push
and
int3
out
adc
mov
inc
out
push
mov
incl
push
push
sub
jg
jg
xor
mov
inc
dec
adc
cmp
inc
popf
bnd
sbb
sbbb
cmp
cld
popf
dec
inc
arpl
mov
mov
lret
inc
jecxz
pop
jp
pop
test
mov
mov
pop
dec
call
pop
xor
jmp
in
enter
scas
js
cli
push
pop
cmp
jmp
out
imul
ret
dec
dec
jnp
mov
ds
jg
mov
adc
lahf
fucomi
je
xor
decl
mov
jns
sub
shrl
mov
sub
pop
out
jo
call
leave
call
fdivrl
pop
idivl
int
add
mov
imul
das
in
aaa
lds
mov
arpl
lret
popa
sahf
jo
sub
dec
rcr
pop
cli
pop
cld
inc
hlt
pop
sti
cli
push
pop
add
or
imul
jmp
sub
shl
fsubrs
stos
xchg
jg
xchg
out
cmp
loop
ljmp
pop
aad
mov
jno
into
dec
add
mov
or
fistps
stc
push
mov
sahf
test
dec
stos
pusha
out
out
shl
ud0
std
decl
jne
cmp
stc
mov
and
ljmp
in
ljmp
add
int3
pop
mov
add
or
out
jae
fdivrs
stos
mov
inc
mov
lcall
fists
adc
test
repz
sti
call
out
frstor
jmp
pop
mov
and
cwtl
or
inc
aad
imul
out
jmp
mov
sbb
mov
icebp
into
out
push
scas
call
lret
or
stos
xor
mov
and
divl
lock
test
mov
mov
mul
xor
mov
imul
xor
cltd
adc
and
jle
pop
sarb
scas
cmp
lcall
or
clc
sbb
inc
fst
repz
sbbb
cld
push
imul
xor
jecxz
stos
jp
mov
adc
mov
jg
loop
in
ror
push
xor
and
loopne
jg
lcall
dec
push
push
jge
inc
xchg
inc
pop
or
xchg
ja
mov
xor
cmp
mov
movsb
rol
ret
sbb
int
arpl
jl
mov
mov
lds
or
fs
inc
xchg
xchg
push
aam
and
and
shlb
call
mov
aas
cmpsb
inc
dec
or
lods
roll
mov
clc
ljmp
lods
add
sbb
out
into
pop
es
andl
mov
jg
fbstp
xchg
sbb
test
inc
sub
push
inc
jae
aaa
in
into
sbb
or
jmp
je
shrb
ljmp
jae
mov
call
loop
pop
push
add
mov
mov
hlt
cmp
lods
lods
pop
call
dec
stc
mov
dec
clc
cmp
divl
or
push
pushl
cmc
sbb
cmp
jmp
in
sbb
lods
jg
pushl
rorb
cmp
testl
mov
sahf
incl
mov
xor
push
push
aas
imul
pop
sub
jo
in
cmpsb
sbb
mov
fldcw
push
addr16
test
das
inc
inc
sti
out
jp
push
hlt
jo
ljmp
mov
inc
sbb
mov
add
dec
push
cmc
fmulp
jmp
mov
into
call
pushl
or
mov
rolb
fnsave
adc
or
pop
pop
faddl
push
fisubs
xor
jl
in
dec
mulb
adc
fcos
inc
fistl
lcall
pop
lcall
and
imul
mov
jle
incl
daa
pop
and
inc
jbe,pn
cs
shr
les
movsl
sub
int3
xor
je
imul
decl
fildll
xchg
or
fisttpl
inc
adc
jmp
adc
adc
jle
scas
roll
xor
xlat
addl
inc
icebp
or
outsb
push
les
mov
imul
push
jg
outsl
push
ret
out
movsl
pop
lds
cmpl
jb
loopne
fnstsw
push
inc
cld
shll
dec
push
in
dec
pop
jne
ret
in
movsl
jbe
stc
or
add
incl
mov
sti
push
sbb
in
aam
test
rcrl
mov
inc
pop
mov
call
loopne
add
jp
lcall
push
sbb
mov
arpl
or
hlt
sbb
decl
int
sub
sbb
into
mov
shlb
into
sbb
ror
movsb
adc
std
call
in
repz
cmc
xchg
addl
jno
xchg
dec
jg
pop
mov
add
sbb
aas
out
mov
mov
inc
jg
lcall
jns
xchg
jmp
mov
cmp
xor
outsl
mov
sbb
decl
cli
andl
push
out
cmc
pop
call
inc
dec
lock
repz
pop
push
cltd
pop
outsl
repnz
repz
movsb
lcall
adc
cmp
or
icebp
jmp
fimuls
add
cmp
fists
inc
jmp
add
lahf
jno
mov
jp
ret
mov
movsl
xor
or
fidivl
rclb
xchg
loop
call
push
or
push
mov
cmp
lods
inc
ds
mov
pop
test
mov
sub
mov
xchg
mov
loop
dec
insl
xor
aas
lods
popa
jle
xor
incl
sub
inc
push
sub
sub
jo
andb
mull
jmp
iret
jo
sti
pop
lock
push
xchg
mov
loope
lret
in
cmp
in
pushl
loope
dec
imul
xchg
inc
pop
mov
popa
loope
and
dec
push
adc
sbb
inc
imulb
cli
mov
mov
xchg
sub
jmp
ljmp
adc
iret
xor
rcrb
sahf
xlat
data16
mov
loop
pop
mov
pop
clc
xchg
dec
fcoms
test
mov
sub
scas
dec
movsl
in
addb
aaa
mov
mov
js
clc
inc
aam
sub
jmp
pop
into
pop
push
test
push
hlt
shrl
insl
add
adcb
lock
pop
pop
roll
jle
dec
pop
clc
pop
test
popf
ret
mov
sub
hlt
inc
sbb
paddusw
or
xchg
push
out
lahf
rcr
jle
negl
adc
jg
sub
mov
ret
mov
shll
scas
sub
cmpsb
or
test
mov
in
popa
pop
sbb
jp
mov
fisttpll
pop
xor
rorl
ds
adc
cmpsl
movsb
arpl
pop
add
cmp
mov
repz
cs
movl
mov
mov
jns
adcb
adc
call
cld
and
rcrb
fwait
sbb
cmp
aaa
repz
push
xchg
shll
mov
cwtl
push
call
outsb
pop
nop
mov
loopw
push
pop
mull
mov
repnz
ficoml
rol
mov
mov
sbb
out
cmpsb
push
push
mov
bnd
cmp
and
decl
jns
inc
cld
jmp
or
movsl
fs
call
and
les
subl
cmp
sbb
sbb
loopne
jno
mov
jmp
jle
fs
sbb
decl
jo
dec
sub
cld
add
add
rcl
inc
lret
out
jae
cltd
cld
jmp
clc
outsb
das
enter
call
jecxz
std
jmp
mov
mov
psubd
nop
nop
push
mov
or
adc
sub
es
cmpb
out
xor
test
xor
lock
dec
push
hlt
dec
pop
add
push
lret
repz
stc
inc
hlt
call
outsl
hlt
lea
repnz
pop
ret
decl
push
mov
test
icebp
pop
cmpsl
in
jb
repnz
mov
arpl
int3
stos
sahf
xor
xchg
bound
das
rclb
cli
jg
or
fwait
into
mov
mov
or
fbstp
cmp
jbe
sbb
dec
out
push
add
jge
sti
scas
dec
lret
pushl
fnstcw
fbld
imul
mov
roll
add
call
jg
aad
mov
outsb
dec
pop
xchg
mov
jbe
or
xlat
repnz
cmpsl
xor
mov
decl
xchg
mov
ds
push
cmp
loope
or
int
pushl
mov
sar
xchg
inc
fnstcw
daa
movhps
cld
lods
iret
rcll
inc
in
add
lret
int3
and
loopne
decl
test
in
adc
repnz
into
jae
fwait
ret
leave
mov
outsl
cmc
pop
mov
loop
pop
enter
imul
decl
pusha
cs
add
adc
inc
call
addb
or
nop
rcl
scas
push
test
xchg
and
mov
or
pop
mov
mov
xchg
xchg
popf
fnsave
mov
shr
mov
in
out
ljmp
aad
adc
pusha
xchg
sub
and
push
jle
outsl
std
test
test
mov
lcall
jg
mov
mov
cmp
mov
adc
xchg
adc
mov
loop
ss
test
sub
pop
ljmp
push
jno
out
xor
jbe
jecxz
mov
mov
stc
mov
shll
adc
cmp
filds
push
jg
push
aad
push
jnp
stos
loop
inc
movsb
mov
xchg
iret
xchg
popf
loope
lods
push
push
xchg
cmc
xor
mov
add
jne
inc
loope
push
hlt
or
dec
jle
and
outsl
std
outsl
lock
mov
pusha
pop
xchg
ficomps
push
sbb
leave
lcall
std
test
in
push
imul
decl
xor
jno
cmp
mov
cmpsb
test
call
xchg
pop
push
gs
mov
mov
pop
sub
out
xchg
fs
or
and
xor
gs
jg
ljmp
add
mov
lcall
cwtl
ljmp
cmp
shlb
out
xor
test
dec
push
popa
inc
sbb
bound
lret
lcall
lock
push
aam
or
xor
lea
mov
cmp
arpl
clc
and
push
popa
fs
jno
enter
xchg
xor
jg
pushf
push
jmp
outsb
or
ljmp
push
cmp
ljmp
mov
pushl
sarb
push
shrb
and
repz
dec
fs
ret
andl
add
mov
add
and
and
cmp
das
cld
push
incl
push
pop
pushf
push
rcrb
repz
xorb
std
and
rolb
xchg
sub
ljmp
andb
sbbb
iret
pusha
das
add
or
mov
and
ffree
mov
mov
int3
lods
adc
ret
inc
pushl
in
jp
enter
daa
imul
adc
xor
test
inc
fcmovbe
pop
andb
jo
add
movsl
jmp
jb
inc
inc
iret
fdiv
and
outsb
lahf
repnz
in
pop
inc
mov
in
xchg
mov
aam
rol
out
aad
sahf
aam
nop
pop
jo
hlt
cmp
fcomps
fnsave
ficoml
dec
lret
mov
stos
rorl
imull
mov
fwait
data16
push
pop
cld
jg
sub
xchg
pop
xor
leave
sbb
sbb
pushl
adc
cmp
pop
scas
pop
adcl
popf
cmp
mov
mov
sarl
push
jb
rolb
jmp
and
shll
adc
mov
adc
add
add
push
repz
filds
mov
or
ficoms
call
mov
das
cmp
dec
sub
std
mov
push
jp
scas
jg
shlb
ss
inc
mov
inc
dec
or
mov
pop
dec
sub
mov
pop
adc
pushl
push
pop
sub
mov
lahf
lea
das
es
loop
inc
sub
out
jg
mov
lock
mov
mov
pop
push
decl
outsl
lahf
push
lods
or
repz
mov
int3
fmuls
add
ja
fisubs
decl
sbb
arpl
jne
mov
ss
pushf
mov
xchg
imul
jg
lods
mov
clc
stc
push
cmp
sub
xchg
xor
loope
push
in
aad
mov
in
dec
shrl
cltd
push
push
mov
mov
popf
repnz
sbb
xchg
dec
or
xchg
pop
loope
dec
lret
sub
outsl
icebp
cmp
dec
mov
adc
mov
fistps
xchg
cld
dec
sub
fcomi
inc
mov
test
mov
sub
mov
or
cmc
push
jp
mov
lods
or
nop
cmpsb
adc
cld
in
pop
cmp
aaa
loop
push
test
xor
push
repnz
shl
out
shrb
sub
lcall
pop
lcall
mov
insb
sbb
test
sbb
push
jg
flds
dec
add
stc
sbb
mov
sub
incl
and
movsl
out
push
push
mov
push
test
std
jne
hlt
adc
imul
and
outsb
cmc
sarb
jnp
cmp
pop
dec
lods
jle
clc
adc
sub
dec
dec
mov
cltd
mov
outsl
rcr
lods
jg
and
clc
leave
daa
jle
inc
mov
into
lret
cmp
xor
lds
scas
push
and
jg
inc
sbb
andl
gs
rcl
jle,pn
addr16
incl
fcoms
mov
xchg
xchg
cmp
stos
sti
scas
jle
mov
inc
fildll
mov
mov
sbb
inc
cmp
cltd
daa
repnz
adc
mov
or
ljmp
inc
cld
frstor
addr16
pop
push
aaa
xchg
add
pushl
push
sbb
add
sti
mov
jne
jae
xor
jmp
add
loopne
subl
sahf
and
out
lahf
shr
fwait
push
imul
sar
scas
mov
lret
mov
xor
xchg
mov
ficomps
dec
cwtl
loop
cmp
mov
call
adc
pop
iret
cltd
sbb
leave
sub
call
mov
decl
bound
ja
sahf
rorb
test
fs
in
ljmp
push
jle
shlb
push
sub
lock
add
jg
inc
popa
jb
push
mov
fdivr
loop
pusha
sar
stos
pop
clc
cli
inc
bound
cli
sub
mov
push
rclb
test
std
adc
jg
es
mov
cmpsl
scas
ror
sbb
shl
mov
shrb
ret
mov
cmc
or
fists
dec
inc
leave
cwtl
xchg
push
pushf
cmpsl
jo
in
out
cs
jae
js
stc
sbb
mov
mov
out
cmp
cmc
jmp
push
cmp
idiv
sbb
mov
lret
dec
jnp
jecxz
movsl
repz
cltd
or
mov
bound
aaa
rcll
cli
adc
jp
push
clc
into
push
jnp
push
mov
repz
jge
nop
ret
mov
dec
int3
push
gs
scas
cmp
leave
loopne
jmp
mov
mov
mov
adc
mov
outsl
decl
xchg
out
lea
js
mov
pop
ljmp
in
gs
lcall
ret
fcmove
inc
rcrb
insl
mov
lcall
dec
or
outsl
mulb
mov
cli
stos
xor
dec
cld
add
sti
sahf
adc
cmpsl
ljmp
mov
push
std
decl
daa
cmp
pop
out
jo
outsb
cmp
adc
mov
mov
inc
sti
inc
ljmp
dec
xchg
loop
sbb
adc
int3
vrsqrtss
out
jmp
xor
test
adc
pop
js
sbb
call
aad
cmp
inc
xchg
xchg
jo
push
sbb
push
ficoms
and
cmpsl
lock
call
mov
dec
push
cmp
outsl
xor
or
loope
imul
call
vmread
pop
pop
or
int3
sub
push
push
cs
cmp
sbb
cltd
sub
push
adc
pop
jecxz
lcall
cltd
mov
jno
mov
mov
js
inc
popa
ret
test
mov
add
cmp
lret
fdivp
mov
pushf
xchg
pop
test
stc
mov
call
or
icebp
dec
add
call
jp
and
pop
stc
mov
aad
pop
cmp
sub
ljmp
and
dec
cmp
loopne
jg
lcall
xlat
mov
pop
sub
jge
pop
lcall
sbb
in
subl
call
sbb
ja
stos
lret
icebp
rcrb
imull
sub
adc
in
mov
outsl
std
incl
jecxz
in
sti
jg
idiv
cld
pop
pusha
fistpll
lock
mov
sub
mov
les
leave
addr16
pop
cmp
scas
xchg
adc
fisttps
orl
pushf
cmp
xchg
fcmovu
sarb
push
cmpsl
insb
cltd
adc
inc
clc
dec
cmp
aas
popa
add
inc
fs
xor
sub
inc
sub
sbbl
stos
filds
pop
xor
outsb
sbb
mov
insb
adc
adc
xor
jg
cmc
cmpl
dec
pop
adc
jmp
outsl
push
cli
jg
xor
ss
cwtl
cs
or
push
icebp
fisttps
jne
test
mov
imul
mov
subl
pop
cltd
and
or
decl
pushf
call
leave
push
jl
xchg
pop
adc
aaa
mov
decl
shll
bound
shr
orb
aas
mov
pushf
adc
and
das
pop
enter
ss
pop
jbe
int
out
xchg
mov
push
hlt
xchg
aad
sub
fwait
cs
adc
mov
incl
ja
lea
sub
cmc
rolb
push
daa
push
inc
add
cli
iret
decb
sar
jmp
into
das
sarb
xlat
add
lock
xor
loope
stos
int
sub
negl
jns
lea
and
je
addb
mov
fxch
xchg
xor
ljmp
xor
jo
fs
popf
or
inc
into
stc
sbb
iret
ljmp
push
lcall
sub
jecxz
shlb
imul
mov
jo
ljmp
insl
lcall
pushl
mov
dec
mov
mov
repnz
hlt
mov
and
cmp
cmp
push
inc
pop
pop
fimull
lret
jo
lds
xor
cmp
iret
push
dec
jmp
aam
fldenv
std
insb
into
dec
fsubl
add
cli
xchg
sbb
push
aad
xchg
fnstcw
pop
push
add
and
sub
and
adc
xchg
iret
xchg
pop
ljmp
lods
cs
sbb
ret
cltd
in
insb
mov
call
sbb
ds
arpl
scas
dec
and
into
fildl
mov
das
add
or
out
and
adc
icebp
mov
ficoml
mov
mov
mov
std
hlt
bound
call
lret
out
rolb
or
mov
cmp
push
mov
sbb
jmp
jns
sbb
xchg
push
xor
sbb
aam
xor
sub
sub
inc
xlat
xchg
std
ljmp
dec
dec
push
push
aad
add
add
test
or
sbb
jg
mov
decl
dec
loope
push
inc
leave
mov
ret
stos
push
dec
sub
dec
push
imul
or
decl
xor
fidivs
push
mov
testl
push
sub
jo
mov
hlt
jecxz
add
jns
call
mov
test
or
pop
sub
jg
loopne
cmp
inc
dec
int3
inc
jbe
pop
jl
outsl
inc
das
or
dec
xorl
aam
in
jo
adc
lods
inc
test
pop
std
das
mov
fcoml
adc
in
divps
outsb
mov
adc
call
ljmp
les
add
in
jns
mov
imul
and
cmp
fldl
dec
inc
gs
fnstsw
dec
inc
outsl
jns
mov
cli
push
mov
jbe
xchg
push
jge
push
enter
notl
stos
faddl
cmp
outsb
push
stc
mov
mov
loopne
mov
mov
xlat
push
add
dec
lock
popa
fcoms
mov
mov
dec
mov
pushf
gs
sbb
sahf
mov
add
sar
das
hlt
call
mov
inc
int
je
add
or
push
mov
int3
cmp
sbb
add
push
repnz
scas
jge
rep
dec
xlat
xchg
jecxz
lock
cmp
lahf
adc
ffree
cmpsb
jge
or
add
push
lahf
mov
outsb
mov
jg
inc
leave
push
or
ret
mov
lods
rcrl
call
sbb
xchg
add
cmp
xor
fsts
xor
adc
in
jns
dec
mov
push
in
add
pop
jae
int3
jl
push
inc
or
xchg
ret
pop
xchg
stos
mov
fcos
ljmp
pop
adc
andb
shrl
fdivrl
or
push
repz
mov
pop
cli
push
jp
dec
xor
int
insb
ss
xor
mov
mov
push
movsl
sahf
mov
sbb
gs
cmp
std
in
scas
iret
scas
cmpsb
dec
jl
je
pop
ja
jo
mov
cmp
xchg
xor
xor
decl
pop
or
movsb
loopne
and
pop
aaa
and
aaa
test
mov
lods
inc
jne
push
jg
fcoms
jg
mov
aam
nop
push
mov
ds
incl
push
lds
inc
mov
xchg
push
inc
sub
push
xchg
sub
adc
inc
push
nop
daa
scas
or
es
mov
fidivl
ljmp
les
popf
testl
cmpsb
mov
movsl
xorl
leave
or
sbb
jge
into
xchg
cli
outsl
jne
xchg
sbb
mov
mov
inc
inc
addr16
aas
jg
lcall
adcl
js
or
sti
mov
push
mov
jl
or
adc
sbb
xchg
movsl
out
inc
fdivrl
xor
ljmp
ret
mov
push
sub
mov
repz
int
cld
sub
decl
es
call
inc
mov
je
repnz
shr
xchg
out
jmp
lods
push
pop
and
add
xor
sub
push
mov
ja
inc
loope
clc
sbb
jnp
cli
inc
jb
or
inc
ljmp
cmp
add
cmp
cli
lcall
lret
mov
jg
jg
jg
jge
lods
and
sub
imul
cmp
movsl
add
pop
int3
iret
jle
std
mov
nop
and
jecxz
test
out
loop
xchg
lock
cmpsb
cmpl
dec
cmp
add
jg
mov
xor
movsb
repnz
call
mov
fisubl
cli
mov
cmpl
fstpt
movsb
mov
dec
movsl
mov
mov
jmp
push
dec
inc
shl
aas
adc
xor
fwait
popa
sar
pop
lret
dec
push
icebp
cld
cmp
dec
cld
ljmp
icebp
inc
push
inc
fildl
cmp
dec
jle
gs
push
jmp
sbb
sub
lret
fnstcw
test
inc
jbe
nop
or
das
std
call
out
test
push
xchg
sahf
xor
arpl
cs
mov
dec
pop
call
idiv
dec
mov
fisttpl
adc
xor
inc
shr
or
mov
sbb
jmp
testl
dec
push
jb
or
cmp
outsl
jae
xorl
inc
divl
js
outsl
ja
push
pop
jg
dec
xchg
adcb
lret
cmp
mov
repz
lahf
pushf
popf
adc
mov
xor
movsl
cmp
cs
jge
bound
incl
mov
pop
stos
and
push
mov
fsubl
mov
adc
jg
les
sbb
mov
add
pop
cmp
inc
cmp
or
repz
cld
lcall
jo
lret
cmc
inc
push
mov
xchg
jp
jns
repnz
call
xlat
add
imul
add
shrl
shlb
leave
ret
lock
jg
inc
mov
insb
movsb
flds
iret
or
mov
sub
jae
jb
insb
mov
incl
pushf
bound
mov
fbstp
loope
or
add
sti
incl
sahf
xchg
int
cmp
mov
push
add
ret
xchg
inc
sub
mov
mov
adc
lea
pop
add
js
push
fsubr
inc
adc
and
rcll
inc
imul
int
or
jb
cwtl
inc
pop
aam
jb
gs
push
lods
pusha
mov
test
pop
and
es
loop
repnz
das
push
test
lods
fimuls
mov
cli
pop
sbb
into
jns
push
mov
call
xchg
divl
cs
mov
mulb
pop
ds
mov
scas
sub
call
scas
es
mov
jne
push
lock
inc
xchg
stos
call
idiv
pusha
mov
imulb
incl
inc
pop
push
add
or
or
or
and
xor
xorb
jmp
cmp
sub
pop
inc
sbb
bound
mov
jmp
inc
ja
mov
xchg
lods
ds
inc
sub
lret
sbb
xor
hlt
ljmp
jo
mov
fdiv
outsb
mov
fisubl
inc
dec
fwait
ljmp
and
cmp
loope
xor
add
xor
clc
or
dec
incl
lcall
add
jns
cmp
inc
loope
adc
mov
scas
sahf
fisttps
ljmp
jle
in
pop
xchg
lcall
ss
mov
mov
imul
stc
inc
cmp
pop
insb
cld
pushl
inc
sahf
sbb
xchg
push
pop
cmp
pop
mov
js
cltd
daa
sar
sbb
movsl
mov
cmp
cld
popl
rorl
in
mov
pusha
fdivrl
mov
into
cmp
scas
bound
and
fcmovnbe
pop
icebp
imul
lcall
jl
adcl
fbstp
js
fists
or
pop
adc
mov
add
push
pushl
jle
cmp
pop
pop
push
push
aam
xor
je
xchg
idivb
icebp
ljmp
inc
pushf
out
and
lods
add
sub
js
shrl
ljmp
cs
sub
testb
outsb
call
mov
divl
insl
mov
xrelease
xor
pop
js
out
lcall
cmpsl
ret
daa
push
lret
js
or
mov
loope
aas
jae
xor
in
mov
lcall
roll
jl
xchg
sar
fistl
shlb
subl
mov
inc
ljmp
std
test
sbbb
cmpsl
xchg
inc
mov
mov
aas
stos
jmp
fsubrl
in
push
popa
in
mov
ret
pushl
xchg
xchg
xor
sti
push
and
int
dec
lcall
mov
pop
test
incl
std
inc
stc
cli
out
xchg
jp,pt
and
call
aad
stc
test
out
aam
xor
xchg
repnz
ret
lret
inc
ficomps
mov
mov
ljmp
test
pop
rcrl
aad
cmc
movsl
decb
push
add
sub
pop
lods
popa
outsl
hlt
jg
jno
xchg
pop
notl
mov
pop
jge
or
dec
jae
sti
xchg
push
cmp
rcll
lcall
in
pop
and
loop
cs
fbld
inc
mov
lcall
ds
xchg
jns
lea
jno
negb
push
xorb
jnp
fwait
and
out
push
mov
aad
popw
fs
xor
loop
jg
jnp
jb
pop
ret
sub
ret
inc
cmpb
enter
in
std
ljmp
mov
mov
push
into
bound
fiadds
push
mov
das
test
jmp
aam
push
mov
sbb
add
and
aam
push
ss
jg
outsb
cmp
cmp
test
inc
cltd
cmp
lcall
das
sbb
sub
outsl
fisubl
out
addl
inc
add
cmp
dec
outsl
jp
or
out
mov
in
xlat
add
mov
cwtl
fucom
pushf
cmp
out
in
out
lret
ljmp
test
inc
adc
add
push
movsl
in
test
add
stos
xor
jmp
outsb
shrl
out
imul
and
mov
cwtl
jns
xor
cmp
mov
cmp
mov
lock
push
lea
or
add
ljmp
je
mov
clc
ds
and
dec
mov
incl
inc
and
sub
cltd
dec
mov
mov
mov
pop
dec
scas
test
or
sbb
mov
enter
pop
rol
mov
or
and
js
push
in
mov
jmp
js
dec
sub
add
sub
dec
testl
ljmp
cmp
sbb
jne
sub
add
jle
jb
mov
xchg
aas
idiv
das
fucomip
call
xchg
popa
mov
mov
stos
mov
push
jecxz
sahf
cmp
fistpll
push
imul
inc
lahf
sbb
into
push
mull
loopne
call
and
xchg
ss
pop
jp
xchg
push
jo
mov
add
or
push
inc
idivl
push
sbb
and
ljmp
das
ja
sub
mov
pop
out
mov
push
inc
inc
cmp
xchg
cmp
mov
test
pop
cli
decl
in
cwtl
xor
or
movsb
test
sub
clc
outsl
test
xor
xor
rol
add
ficoml
push
cmc
std
lds
and
call
mov
push
xchg
jnp
fistpl
movb
jg
ret
jl
pop
dec
sub
in
popa
clc
adc
cmc
cmpsl
mov
dec
lcall
std
out
out
fldenv
sbb
int
mov
mov
mov
or
sbb
jmp
fcmovb
mov
mov
int3
test
imull
cmp
stos
dec
lcall
push
mov
pop
mov
test
fimull
mov
std
jae
ljmp
lock
dec
and
sub
lcall
cmp
lods
clc
sti
xchg
push
xchg
mov
popf
notb
cs
lret
rolb
test
fwait
cmp
push
sub
mov
mov
xor
cmpsb
mov
cmc
xor
jge
mov
inc
add
or
cmc
aas
enter
push
scas
fwait
dec
xchg
mov
sub
sbb
sbb
hlt
loope
mov
ja
bound
pop
in
lcall
data16
push
stos
insb
hlt
mov
cmp
out
iret
lcall
or
pop
std
mov
pop
jg
jmp
enter
push
pop
cli
call
jns
inc
lcall
push
dec
fbstp
outsl
stc
movsl
int
adc
lcall
loop
cmc
xchg
shll
notl
mov
outsb
jl
lcall
sub
shl
push
test
roll
sbb
jae
push
pop
loope
repnz
mov
andl
inc
dec
sarl
ret
test
and
xor
inc
les
sti
outsl
lock
adc
or
aas
jne
fstps
notl
test
ret
mov
icebp
mov
push
clc
push
mov
push
sub
dec
js
jp
ja
lret
rcrl
jg
sub
addr16
in
or
and
sbb
and
add
out
pop
lahf
inc
mov
lahf
dec
push
js
mov
sbb
clc
dec
xor
enter
xlat
adc
sti
sbb
ljmp
inc
xchg
call
mov
push
gs
xor
xchg
call
xchg
addr16
ljmp
lea
adc
prefetch
out
iret
adc
lods
inc
cmpsb
and
lock
pop
add
push
cmp
and
jno,pt
shrl
adc
ret
cmp
fisttps
pusha
icebp
popf
mov
out
test
cmp
adc
pushl
xchg
ret
ret
int3
icebp
push
cli
gs
mov
pop
test
adc
push
mov
pop
addr16
in
call
fidivrl
imul
outsb
rorb
sarl
mov
mov
fsubrs
out
rcrb
subb
outsl
mov
std
call
push
and
cs
insb
push
jg
popa
mov
jmp
mov
in
loopne
fwait
xchg
sarl
xor
cmp
xchg
adc
lcall
lret
sbb
adc
int3
pusha
xor
add
rorb
icebp
test
into
loope
jmp
fists
sub
ret
adc
movsl
pop
mov
adcl
decl
adc
shll
jb
fcompl
test
sub
das
push
cltd
pop
xor
call
and
inc
daa
test
or
xchg
pop
push
pusha
sbb
adc
push
cmp
cmp
clc
call
loope
cmp
test
fwait
sub
adc
pop
fsubrs
dec
pop
scas
add
loopne
pushl
clc
inc
loope
sbb
cld
cli
outsl
enter
ret
test
push
popf
or
jmp
movsb
cmp
test
mov
mov
xchg
mov
invd
jbe
popf
fsubrs
jo
popf
lcall
jbe
adc
xchg
into
xchg
jb
test
dec
lods
subb
adc
mov
cmp
push
fsin
aam
xchg
pusha
ja
fwait
mov
mov
mov
or
outsl
add
fstpt
xor
lods
pop
cmp
inc
mov
in
push
ja
sti
lcall
insb
cmpsb
lea
push
pop
loope
xchg
fimull
aam
cmp
inc
fiaddl
xchg
mov
stc
sbb
mov
add
jg
or
sahf
mov
movsb
inc
fxch
clc
add
and
push
lods
outsl
ljmp
jmp
add
punpcklwd
mov
push
sbb
outsb
lods
jmp
dec
addb
dec
pop
int
add
pop
mov
incl
xchg
test
xor
cmpsb
lret
and
ret
jno
inc
lods
mov
mov
or
lcall
mov
xchg
sub
rorb
jbe
mov
data16
xchg
push
inc
xchg
cld
sahf
mov
imul
loope
cli
cmpsl
cmp
jae
out
add
push
pop
push
stc
fimull
pop
push
in
jp
mov
add
xor
lcall
push
aad
outsb
lock
mov
cmpsl
inc
clc
adc
jmp
sbb
fmul
cmp
dec
and
repnz
fimull
mov
cs
jb
push
sti
cmp
sbb
add
mov
pushl
out
inc
out
xchg
cmp
adc
mov
incl
out
das
sbb
pop
repnz
push
sbb
daa
into
lcall
push
test
push
jp
jno
ficomps
push
nop
das
and
mov
push
in
push
sub
fsubs
adc
test
repz
adc
xchg
push
int3
mov
incl
pop
nop
ficoml
adcb
push
lret
shl
fucomip
lret
jg
jmp
mov
mov
lcall
jnp
adc
push
call
pop
mov
imul
cwtl
jp
pop
or
dec
sbb
mov
js
call
addb
addr16
mov
movsl
add
mov
add
dec
call
xor
cwtl
shl
lret
add
pop
cmp
leave
xchg
or
mov
loop
dec
sahf
jg
push
mov
and
jb
addr16
jnp
aam
mov
pop
add
lahf
push
sub
push
cmpsb
stos
fbld
adc
lret
fldenvs
mov
sarb
jmp
push
push
mov
aaa
rcll
addl
mov
xor
lea
jnp
inc
push
dec
jecxz
cmp
loope
jno
xor
mov
lcall
jae
arpl
mov
push
mov
jle
adc
decl
sub
and
mov
mov
fistpl
imul
stos
mov
or
arpl
out
ret
add
sub
mov
sahf
and
fs
sub
pop
xchg
cmpsb
dec
xchg
and
xchg
pop
or
sti
loope
adc
das
cmc
pushl
push
pop
add
add
mov
jo
pop
nop
in
jmp
iret
xor
cli
insl
mov
test
fisubrl
lock
std
add
mov
jmp
sbb
ret
xchg
nop
pop
in
je
xlat
negb
and
xchg
cli
ljmp
dec
das
stc
mov
fidivl
xchg
dec
push
sbb
pop
fiaddl
inc
out
lret
aas
adc
adc
xchg
outsl
orb
inc
mov
cli
incl
in
mov
sbb
xchg
xchg
gs
sti
mov
ss
mov
das
hlt
xlat
cmpsb
shr
call
fiadds
roll
loop
push
rorl
pusha
cmp
dec
xchg
repnz
and
stos
in
lret
inc
les
fistps
ss
es
in
test
sbb
fistps
loop
push
out
mov
int
mov
imul
out
test
rol
adc
decl
imul
mov
sbbl
dec
lea
xorl
cmp
pushf
xlat
inc
mov
ljmp
bound
outsl
incl
ljmp
imul
inc
or
mov
jns
adc
call
mov
dec
xlat
fcom
inc
addr16
mov
jae
arpl
and
add
dec
dec
sub
mov
mov
cwtl
imul
mov
pop
mov
pop
inc
dec
add
pushl
clc
lcall
subb
loopne
les
aam
mov
cmp
xchg
cld
or
ljmp
and
and
mov
inc
mov
xor
xchg
or
dec
mov
popf
popf
and
push
sbb
jmp
les
mov
and
cltd
stc
jnp
mov
or
or
loopne
stos
xchg
inc
scas
jmp
xor
push
add
sahf
ljmp
inc
lds
mov
dec
fistpll
cmp
incl
or
jle
jecxz
jle
lcall
les
cwtl
movsb
lcall
jae
sub
imull
lods
fdivr
sbb
loope
popf
inc
push
jne
xchg
movsb
int3
cli
cli
cmp
jmp
jns
ljmp
aad
pop
or
leave
pop
pop
insl
lock
hlt
mov
int3
jne,pn
inc
mov
lds
xor
lcall
xchg
loopne
cmp
push
test
icebp
test
inc
inc
aam
xor
inc
jb
xchg
mov
clc
adc
adc
add
mov
sbb
add
into
xor
ljmp
clc
stos
sbb
testb
aad
cmp
subb
cs
cmpsb
icebp
cld
add
cli
mov
in
pop
lret
inc
int3
xor
jbe
icebp
jmp
inc
push
fs
les
test
cwtl
mov
into
jp
jg
in
popf
dec
out
xchg
jmp
pop
fistpl
int
mov
add
pop
mov
arpl
xlat
fstpt
xor
aaa
repz
aaa
ljmp
add
loop
loopne
push
loope
enter
ljmp
jne
inc
xor
out
xchg
call
nop
nop
jae
sbb
pop
and
mov
mov
dec
sbb
push
sarl
clc
dec
imull
lea
and
or
adc
dec
frstor
sub
inc
call
and
adc
sbbl
clc
movl
clc
dec
or
mov
fisubl
std
lcall
ficoms
push
push
adc
fbstp
jecxz
push
pop
or
fisttpl
lods
jno
mov
test
or
jmp
daa
and
flds
clc
jle
stos
jl
les
jb
aas
push
sbb
das
mov
cmp
scas
push
xlat
dec
cmc
push
adc
push
pop
jno
notb
xor
incl
es
gs
lret
js
or
sbb
xor
into
push
push
mov
cli
cmp
mov
test
or
inc
fsubr
mov
inc
adc
mov
add
clc
incl
sarl
stos
lret
push
loopne
aam
fbld
lret
ljmp
out
xor
bound
sub
mov
sarb
cld
popa
jnp
sbb
jbe
addl
popf
fldt
and
fimuls
testb
xchg
and
xchg
loop
lcall
pop
pop
adc
mov
add
cltd
push
cltd
sbb
cmp
xchg
and
in
xchg
add
call
fiaddl
jns
enter
or
push
leave
lds
xchg
xchg
or
cld
inc
out
sbb
pushl
adc
fxtract
iret
stos
nop
sbb
aam
loopne
mov
push
imul
idiv
call
dec
push
ret
les
pop
or
imul
mov
shl
adc
das
call
stc
mov
or
lahf
call
pop
divb
mov
repnz
add
fmull
dec
clc
jl
arpl
les
mov
ret
filds
adc
lock
xchg
add
call
adc
or
fdivr
dec
push
add
ds
fucomip
incl
dec
and
out
xchg
ss
xor
stos
pop
mov
xor
sbbb
cmovbe
out
decl
cmp
mov
roll
add
or
std
mov
or
jno
sbb
sbb
dec
add
cli
inc
cmc
pop
mov
sub
mov
cmpl
ret
cmp
icebp
ss
pushl
jecxz
scas
jecxz
mov
fs
xchg
movsl
inc
scas
sahf
pop
loop
out
cli
rcrl
popa
sbb
mulps
fisttpl
sbb
jle
push
mov
imul
aad
repnz
imul
pop
gs
mov
adc
mov
movsl
lret
cmp
sbb
shlb
lea
pusha
stos
adc
push
mov
pop
mov
dec
inc
dec
xchg
push
mov
cmp
outsb
int3
jns
dec
mov
std
adc
aad
jne
ss
pop
out
push
pop
or
int
sti
xor
roll
ljmp
xchg
mov
popf
pop
inc
or
jne
jp
mov
and
lret
and
dec
and
xchg
stos
pop
adc
mov
stos
stos
arpl
ja
fnstsw
dec
and
adc
unpckhps
mov
inc
jge
cmc
cmp
call
adc
jp
and
addr16
stos
inc
mov
ljmp
and
cld
loopne
mov
sub
rolb
add
inc
stos
mov
push
xor
xchg
dec
loope
stos
in
push
pop
int
fisubrl
xlat
out
lcall
stos
in
push
or
inc
inc
jns
popf
jge
popa
inc
cmpb
pop
sarb
bound
data16
into
dec
push
aaa
cmp
jle
sub
test
or
add
or
fwait
dec
iret
or
adc
fsts
add
pop
pop
jge
cwtl
and
cmc
or
call
dec
test
sub
pop
repz
stos
push
mov
jmp
das
push
cmp
call
mov
out
insb
pop
stc
xchg
or
call
cmpsb
fcomps
leave
daa
sub
inc
jb
dec
icebp
test
sub
pop
call
jecxz
fwait
jbe
shrb
aas
or
sbb
push
arpl
xchg
adc
decl
adc
inc
arpl
and
inc
mov
or
mov
xchg
mov
aas
daa
icebp
imul
mov
jge
test
loop
into
imul
cmp
xchg
dec
inc
or
daa
gs
add
push
inc
clc
fwait
negl
jg
cmp
sbb
arpl
jno
les
inc
push
mov
sub
clc
clc
stc
lods
push
jl
fistpll
jb
mov
ja
or
fwait
imul
sub
jo
in
jnp
rorl
xor
mov
sti
cs
mov
inc
cmp
or
in
pop
xlat
push
fsubrs
xchg
push
and
test
rclb
lods
push
adc
cld
jg
out
fistps
jno
inc
pop
sbb
cmc
lcall
add
addr16
cmp
xor
pop
push
fiadds
lock
jbe
test
jg
jno
sub
cmp
enter
pushl
ds
ret
mov
insl
sub
and
sub
test
add
lahf
pop
push
lret
sbb
jo
pop
mov
pop
fisubrl
fnstenv
jg
imul
add
daa
jg
outsl
mov
out
sub
loopne
push
sub
dec
adc
push
cmp
jg
ljmp
loopne
cld
add
sarl
xor
and
fidivrl
pop
iret
mov
push
jmp
sub
outsb
lret
je
ret
push
mov
cld
movsl
xor
jle
adc
out
ficoml
xchg
cli
mov
add
aas
push
lcall
push
lea
push
sub
push
add
pushf
xchg
cmc
pop
mov
test
mov
popf
lds
sub
in
cmpsb
mov
outsl
shld
and
or
mov
call
mov
push
mov
mov
test
lock
lods
cltd
xorb
loop
jg
adc
pop
in
int3
in
add
or
push
jg
pop
shrb
cltd
mov
imul
or
fucom
or
push
pop
fwait
lret
inc
push
sub
sbb
in
addl
aaa
cli
cmp
sbb
ret
aas
sahf
pop
adc
push
pop
adc
jbe
jl
pop
ljmp
jno
pop
jno
popf
mov
jg
fadd
pop
sub
pop
push
xchg
lods
subb
in
xor
xor
xor
fmuls
inc
jecxz
add
mov
inc
mov
adc
dec
test
test
push
ss
movsb
sub
scas
lcall
mov
scas
cmp
ficoms
add
jecxz
notb
inc
mov
icebp
dec
mov
int
fwait
icebp
es
pusha
imul
incl
mov
ljmp
aas
mov
mov
adc
xchg
lods
ja
mov
fs
popa
icebp
sub
lock
jae
xchg
cmc
sbb
sub
lcall
imul
add
sti
test
call
adc
cmpsb
clc
bound
mov
jg
mov
sbb
fcompl
xchg
jle
cmp
out
jne
call
jge
cmp
clc
lret
mov
jge
lds
rolb
mov
lret
dec
xor
jnp
test
sbb
mov
push
ss
jp
mov
movsb
jo
aas
subl
jo
ret
xor
movsb
adc
es
mov
or
inc
push
push
or
rolb
fimuls
and
mov
bound
lea
pushl
in
pop
inc
cli
mov
xor
xlat
cmp
sub
mov
ljmp
ljmp
test
ds
push
int
fildll
mov
inc
or
test
pop
sub
dec
dec
mov
cli
aaa
pop
ljmp
fbld
sbbl
bound
cmp
mov
loope
outsl
cld
decl
lahf
inc
test
mov
add
fdivrl
inc
mov
lods
test
fldcw
dec
adc
mov
js
adc
in
pushf
lret
push
stc
bound
lods
mov
repnz
cld
call
xor
add
sarb
lret
cmp
push
fwait
aas
test
mov
push
mov
insb
add
mov
pusha
data16
ss
cli
leave
adc
imul
popf
bound
clc
call
daa
pushf
int
sbb
imul
cmp
je
in
ljmp
adc
push
mov
cld
pop
jno
mov
popf
jle
sbb
sub
call
dec
xchg
dec
xor
and
out
push
jnp
sti
call
and
jle
lds
shll
inc
popa
daa
add
cmp
mov
and
mov
xor
push
das
cmp
cli
adc
inc
mov
dec
jno
cmp
mov
push
repz
mov
clc
inc
leave
sbb
and
xor
inc
aam
sar
les
mov
add
or
shl
mov
adc
ret
or
inc
sbb
insb
xchg
cli
sti
xchg
outsl
std
call
push
popa
orl
shlb
popf
movsb
loop
mov
xor
outsb
cli
lcall
js
rcr
dec
xor
adc
mov
bound
mov
xor
jecxz
pop
mov
cmc
jecxz
cld
sbb
not
sbb
or
mov
xchg
cmp
dec
std
mov
lahf
fisubl
push
and
dec
lcall
dec
push
sub
xor
jae
cli
push
adc
xchg
addr16
fidivrl
decl
aas
jo
js
in
je
mov
aaa
or
das
add
jg
cmp
dec
subb
xchg
sti
jmp
shlb
xor
aas
jb
mov
or
ds
lahf
mov
cmp
pop
xchg
fldl
fnstcw
rorb
push
lods
pop
xor
and
or
ds
push
mov
mov
aam
sub
loop
aad
cmp
stc
mov
push
mov
movsl
pop
push
push
mov
push
inc
iret
imul
pop
pop
ret
in
mov
or
xchg
fs
mov
scas
sbb
sbb
std
mov
push
insb
addr16
pop
add
iret
clc
outsl
loopne
or
jmp
push
call
imul
lret
lods
js
sub
mov
jg
pop
test
call
mov
lds
call
mov
rcr
pop
pop
inc
scas
adcb
les
adc
pop
mov
push
sbb
in
inc
out
cld
iret
outsl
fs
pop
aam
pop
pop
mov
pop
cmp
push
das
cmc
mov
sub
dec
cld
dec
mov
or
jno
adc
inc
mov
push
nop
or
jle
fisubl
xchg
test
ljmp
adc
pop
xlat
sarb
cld
in
lahf
inc
or
jb
jne
out
shll
sbbb
test
data16
cmpsb
cmpb
ljmp
mov
out
inc
pop
sbb
push
inc
add
sub
xor
call
jnp
mov
push
jbe
jae
xor
mov
inc
push
pushl
inc
or
fdivr
inc
cmp
rcrb
push
jmp
outsb
test
dec
aad
lock
jmp
outsl
jp
jo
jns
data16
and
mov
pop
repz
std
pop
xor
add
push
cmp
test
scas
sarl
insl
xor
cli
mov
cli
sbb
push
call
out
xor
iret
inc
xchg
data16
push
gs
aas
xchg
filds
xchg
or
call
rcl
scas
jmp
jg
cmp
cmp
cld
das
adc
fistpll
mov
loop
sub
lahf
pop
pop
call
popa
hlt
cmp
dec
pop
or
and
hlt
pop
iret
int
pop
pop
mov
clc
mov
ljmp
jo
sub
sbb
and
push
pusha
inc
lret
mov
mov
push
push
lods
hlt
push
pop
jbe
insl
loopne
dec
fisubrl
outsb
hlt
in
js
push
movsb
icebp
popf
and
scas
loope
fldl
call
and
ret
xchg
dec
xor
aaa
lods
iret
xor
outsl
cmc
ljmp
fldl
sbb
pop
out
jbe
loopne
or
inc
sti
ljmp
ffreep
aad
jbe
in
test
jb
xchg
cmpsl
pop
call
test
push
cmp
sbb
mulb
jo
mov
sbb
ljmp
call
dec
cmp
jnp
xchg
mov
push
mov
scas
sbb
mov
in
ret
mov
push
adc
lods
dec
in
cli
adcl
sar
adc
sbb
shr
adc
insb
shrl
lret
scas
iret
mov
outsl
fcoms
or
cli
jnp
push
lret
jo
das
icebp
decl
pusha
addr16
mov
lds
sbb
add
cmpsl
insb
mov
xlat
mov
dec
xchg
dec
movsl
adc
aaa
and
jno
sub
xchg
jecxz
repz
subb
adc
jl
lea
pop
loopne
jnp
enter
fcomip
test
aad
mov
sbb
popf
jbe
fucomp
ljmp
pushf
and
inc
pushf
pop
cmpsl
inc
popf
xor
mov
sub
mov
inc
xchg
stos
decl
sti
pop
push
dec
inc
pop
xor
xchg
add
lods
sub
mov
adc
jmp
cltd
lods
cmp
fldt
loopne
es
jmp
jae
cld
sub
call
dec
mov
pop
inc
and
xor
roll
mov
mov
rorb
call
stos
xchg
jmp
dec
sub
mov
and
pop
and
decl
mov
mov
sub
lcall
pop
mov
adc
push
out
out
aaa
outsl
sub
out
dec
rcll
mov
xor
dec
cli
ficoml
pushf
jo
or
xor
dec
cld
dec
sarl
loopne
mov
mov
insb
daa
pop
mov
into
ja
ljmp
call
xchg
and
cmp
sub
dec
testb
pop
std
push
call
mov
pop
mov
aad
xchg
xchg
clc
jl
fildll
pop
fmull
push
cli
iret
mov
jecxz
mov
call
inc
aaa
rolb
mov
add
dec
addb
decb
mov
jae
pop
icebp
in
out
sub
jnp
incl
rorb
cmp
jge
jp
and
call
out
adc
mov
or
mov
fs
xlat
std
inc
sub
ljmp
into
and
jbe
lock
inc
shrb
jns
ret
jne
jg
fcmovbe
mov
out
dec
xchg
sbb
push
cwtl
dec
fmull
test
ret
or
xchg
pop
jge
xor
mov
in
mov
xchg
jmp
add
push
cs
cmp
mov
mov
ret
inc
mov
loopne
enter
decl
jmp
test
popf
icebp
jmp
ja
pop
fs
sti
adc
push
or
sbb
or
jmp
insl
imul
ja
stos
fmull
addr16
push
mov
dec
adc
ret
pop
mov
mov
jmp
insb
sbb
rorl
mov
insl
inc
cmpsb
lods
pop
fidivs
cmpsb
push
push
inc
jno
pushl
jbe
lods
mov
mov
cmc
mov
cltd
loop
or
jg
loop
sti
cltd
das
ds
dec
je
adc
aam
jecxz
cmp
mov
xor
fdivl
push
lcall
push
cmp
jge
shr
pusha
cmp
mov
fdivl
adc
dec
pop
das
sub
movsl
lea
popw
inc
cmp
ficoml
dec
adc
incl
cli
mov
ret
cmp
fadd
pusha
mov
in
mov
lods
add
jmp
pop
cld
ljmp
fdivrs
and
arpl
cwtl
dec
aas
pusha
fldpi
dec
jmp
pop
cli
pushl
cmpsb
jne
out
xchg
insb
negl
fimuls
icebp
int3
xor
xor
pop
jns
cli
decl
repnz
gs
loop
movsb
adc
cmp
loop
outsb
aaa
jne
sbb
das
icebp
call
loopne
jmp
test
adc
int
pop
push
aad
into
sub
xor
fadds
ljmp
adc
sti
jg
pushl
lock
out
jp
and
out
mov
sti
repnz
insb
jg
cwtl
je
add
xlat
dec
or
push
and
loope
aaa
call
repz
cmp
jnp
mov
fst
stos
xchg
mov
xchg
push
pop
out
pop
pop
jecxz
cli
ret
fnsave
aas
sbb
or
mov
dec
out
sbb
mov
cltd
fisttpll
sub
pusha
jl
das
jg
dec
cmpsb
inc
ds
or
push
mov
decl
mov
aaa
test
xadd
pop
in
xor
add
and
push
std
mov
lret
add
dec
ljmp
je
mov
or
incl
push
sub
adc
mov
stos
sub
or
jge
jg
loopne
add
adc
xchg
sub
std
dec
out
fisubs
lcall
ret
sbb
adc
mov
or
stos
stc
inc
jle
xor
call
ss
adc
setb
jbe
dec
mov
push
daa
xor
jp
add
aam
ret
aad
ja
mov
mov
lcall
fwait
mov
mov
aad
adc
out
movsb
adc
push
pop
lods
outsl
adc
push
fstl
popa
add
es
stc
decl
lret
call
mov
iret
shrl
push
xchg
flds
jnp
fucomip
ja
mov
adc
test
and
negb
repnz
xchg
mov
sbb
decl
or
out
lods
xchg
aam
fdivs
addr16
lea
add
pop
aad
xor
lods
mov
push
fnstsw
decl
dec
add
jbe
mov
iret
aam
dec
or
fadds
jmp
and
and
mov
or
inc
imul
idiv
add
aam
jg
scas
test
lcall
mov
or
test
add
out
jmp
call
pushl
mov
jns
iret
test
rolb
enter
xchg
imul
sub
add
inc
sbb
je
xchg
call
cli
jmp
cwtl
mov
xchg
and
jb
jo
adc
sahf
jb
incl
aam
mov
in
hlt
xchg
in
nop
cmp
lcall
push
cmpsb
sbb
mov
dec
sub
es
and
push
cmpsl
call
sub
jp
push
shl
fsubrs
mov
ret
jbe
inc
or
imul
aad
cmp
lods
loop
add
je
add
incl
push
xchg
stos
scas
hlt
or
xchg
cltd
rolb
cmp
outsb
call
and
in
add
mov
mov
fcoms
je
rcll
lcall
pushl
cmc
lret
test
pop
ljmp
add
lods
dec
lock
loope
jg
push
ret
fisubrs
sahf
cmp
and
leave
inc
into
insb
loop
inc
push
js
pop
aam
sbb
decl
sbb
cmc
lahf
stos
outsl
and
jg
sbb
fidivs
pop
pop
mov
mov
xchg
cmp
or
incl
dec
lods
int3
in
and
jno
or
divl
cmp
sbb
decl
shr
sub
cltd
imul
jne
xchg
stos
jno
clc
lcall
scas
icebp
test
jle
lahf
pop
movsb
fchs
stos
addr16
sub
pop
imul
movsl
ljmp
add
popf
adc
mov
mov
xor
lcall
in
inc
mov
and
sti
jns
and
leave
dec
cli
sub
and
pushl
insl
push
aas
adc
mov
mov
pop
insb
movsl
jg
pop
adcl
popf
aad
mov
ljmp
pop
cmp
imul
mov
cltd
xorb
enter
call
in
xorb
testb
push
push
js
or
mov
ljmp
sarl
scas
sub
cld
clc
imul
mov
call
mov
stos
add
mov
jns
sbb
leave
xchg
or
pop
movl
clc
call
scas
cli
enter
sbb
fbld
mov
popa
lcall
fucom
pop
mov
xchg
popf
rclb
cmp
fcomps
stos
jg
pop
cmpsb
aas
test
cmp
push
mov
cmc
dec
icebp
in
lcall
add
xor
js
adc
jg
sbb
dec
lock
pop
add
loopne
mov
cld
sbbl
add
scas
loope
lcall
jg
xchg
cmc
out
push
lcall
sbb
popa
push
mov
hlt
lret
clts
test
incl
or
lea
mov
mov
pop
mov
orl
mov
das
cld
test
push
es
outsl
xchg
test
jg
push
cmp
push
xchg
inc
shr
movsl
cmpsl
sarl
cmp
push
pop
dec
mov
xchg
mov
movups
push
push
mov
adc
mov
addr16
call
test
xchg
pop
mov
int
test
gs
enter
jmp
cmp
mov
pop
adcl
mov
jb
mov
mov
jno
in
inc
push
negb
xchg
insb
mov
outsl
sbb
fnstsw
pop
test
or
stos
jnp
mov
dec
hlt
ljmp
xchg
decb
js
mov
shll
jmp
fld
push
jmp
mov
add
stos
pop
dec
sbb
in
sti
pop
ljmp
mov
sub
jae
jp
mov
ja
cmp
jl
jmp
push
sub
jp
stc
repz
mov
dec
push
adc
pop
aaa
xchg
lcall
push
xchg
dec
outsb
add
std
push
stc
xor
pop
decl
mov
cld
mov
xchg
and
js
in
add
pop
int3
out
sub
inc
adc
inc
loope
jns
xor
fwait
jg
sahf
inc
xor
sbbl
pop
ret
mov
lods
stos
cmp
lods
stos
inc
or
daa
fisubrs
decl
mov
jns
test
sbb
mov
adc
push
add
lock
call
mov
ret
adc
out
cltd
adc
imul
add
add
pushf
pop
push
mov
lcall
lea
inc
js
mov
add
mov
sbb
cmp
mov
loope
cmp
add
in
xchg
dec
mov
push
loopne
mov
mov
cmc
leave
mov
std
popf
mov
mov
mov
aam
hlt
div
jge
lcall
or
pop
adc
mov
and
xchg
aas
push
xchg
div
lcall
scas
add
adc
jns
in
mov
out
push
inc
jg
mov
movsl
adc
adc
insb
stc
cmp
popa
mov
mov
leave
mov
shr
loopne
adc
push
push
outsl
xor
movsl
pushl
cli
incl
cwtl
pop
mov
pop
cmpsb
cmp
add
add
push
cs
lcall
cld
mov
shlb
addr16
inc
mov
add
jne
jb
popa
inc
dec
mov
int
push
aad
sbb
das
mov
movsb
add
fidivrs
push
sti
repz
mov
inc
push
xlat
push
push
loope
inc
add
lock
or
out
ss
aaa
pushl
das
jecxz
xor
inc
loope
cmp
mov
roll
mov
xchg
dec
adc
scas
jg
mov
mov
sahf
icebp
xchg
and
loop
and
sbb
sbb
inc
int
cli
mov
cs
or
insb
mov
xchg
adc
xchg
xchg
cmp
xor
ljmp
data16
jle
xor
push
xchg
cli
pushl
in
adcb
out
push
adc
addr16
xor
add
in
outsl
cmc
call
or
jnp
mov
aas
jle
inc
mov
xchg
aas
push
test
ljmp
test
jns
je
mov
cmp
data16
out
ds
addl
loope
sbb
cli
ljmp
popa
dec
stos
fistps
icebp
xchg
mov
lcall
out
add
push
mov
test
out
lahf
pusha
sbb
dec
inc
incl
sbb
jns
push
inc
sbb
cltd
movsb
jno
aam
cmp
stos
das
hlt
insb
sbb
incl
mov
leave
mov
movsb
addb
mov
nop
lock
mov
les
loopne
adc
lcall
lret
sub
mov
icebp
mov
sub
stos
aaa
push
arpl
mov
jg
arpl
filds
jge
jmp
push
scas
mov
sub
xchg
loopne
ret
and
in
loop
dec
roll
sub
jecxz
ret
into
dec
and
decl
mov
fmull
mov
pop
lods
movsl
pop
jo
decl
std
jge
js
adc
dec
mov
cmpsb
sbb
inc
orb
push
inc
loope
outsl
push
rclb
cld
fisttps
inc
mov
and
mov
call
push
and
je
lahf
inc
xor
out
sub
clc
call
divl
dec
mov
mov
mov
pop
imul
xchg
hlt
adc
mov
movsl
cmc
push
pop
push
movsl
stos
imul
adc
mov
jp
cli
mov
sub
in
mov
xor
mov
lock
mov
pop
sbbb
sbb
cmp
call
mov
lahf
xchg
xor
pop
pop
xchg
jecxz
ja
mov
sub
incl
int
test
fcmove
js
jp
loop
repnz
clc
aaa
test
sti
and
aaa
popf
fildll
lods
repnz
fildll
cmp
call
pushf
sbb
xchg
cmp
jle
inc
aas
xchg
mov
jmp
pop
cld
dec
jne
aad
and
mov
push
not
cli
das
jne
jg
and
and
and
aaa
cli
test
mov
stos
stos
mov
mov
xor
dec
inc
fisttps
push
shl
scas
inc
cmpsb
scas
test
ljmp
insb
fucomp
jno
cmp
mov
pop
std
cmp
push
sub
mov
push
rclb
sahf
aas
dec
jno
jmp
push
dec
icebp
shll
into
icebp
nop
xor
daa
in
sarb
sub
jnp
std
jmp
xor
cld
or
repnz
lea
xchg
dec
cmp
pop
aaa
jecxz
clc
out
adc
in
mov
mov
jne
sub
mov
dec
scas
pop
out
lods
push
pop
mov
ljmp
inc
xor
xor
jae
pop
pop
cmpl
enter
lahf
fs
mov
loop
mov
in
loope
aas
daa
xor
pop
sbb
call
outsl
test
or
mov
cmp
push
inc
cld
jmp
test
xor
pushl
cli
mov
and
sub
cmp
test
mov
je
fs
shl
gs
shrb
in
push
cmp
fiadds
ret
xor
mov
ret
test
mov
mov
push
xor
jg
loop
sub
push
add
rcrb
imul
ja
stc
sar
ljmp
enter
adcb
movsb
mov
add
inc
dec
inc
and
or
nop
sar
lea
ret
cs
add
stos
lret
mov
add
jbe
dec
test
lahf
lock
int
sarl
jo
mov
dec
pop
outsl
sub
jle
dec
jne
decb
jns
sbb
jne
cmc
xchg
repnz
fildll
daa
mov
ss
or
in
cmp
leave
test
pop
mov
sub
fnstcw
ljmp
jo
jge
addb
repnz
push
out
shll
jmp
mov
mov
test
in
xor
leave
sbb
shl
adc
inc
call
ret
pop
jg
popf
push
add
andl
int
jbe
call
outsl
jo
fbld
ja
cmp
cmc
pusha
push
or
cltd
adc
jmp
out
pop
jecxz
jo
addr16
icebp
cltd
sub
inc
adc
inc
decl
fldenv
gs
or
insb
xor
popf
push
std
adc
push
dec
cmp
js
decl
xor
clc
dec
lea
scas
sbbb
nop
out
xor
push
outsl
pushl
jl
cmp
and
xor
xchg
fucomip
pop
jl
push
clc
pop
les
xor
stc
test
decl
mov
clc
mov
mov
sbbb
dec
test
das
std
jmp
xor
dec
fwait
push
mov
xchg
or
popf
sbb
outsl
fildll
sub
or
mov
lcall
bound
xor
fwait
push
jb
adc
jp
dec
mov
xchg
push
cmc
jge
inc
and
decl
mov
inc
jmp
mov
lret
lock
lret
mov
incb
pushl
js
dec
mov
popf
sbb
pop
inc
cltd
dec
repnz
clc
inc
cmp
fbstp
cmp
incl
xchg
pop
scas
test
aad
xor
jecxz
mov
repnz
scas
mov
leave
jg
fs
dec
dec
pop
in
sub
stos
jae
dec
pop
cs
cmpsb
push
fbld
rorb
cwtl
mov
xchg
or
ret
dec
sbb
icebp
ljmp
iret
mov
shlb
adc
lahf
hlt
push
mov
inc
jmp
outsb
jb
push
fs
mov
movsb
mov
sbb
inc
mov
add
jns
das
push
pop
loop
mov
dec
mov
movl
movb
cmp
add
mov
pop
xlat
jle
ror
gs
lods
test
daa
cltd
icebp
jg
sub
lods
icebp
jg
lods
imul
mov
dec
push
cltd
inc
out
shrb
lcall
ljmp
ret
pop
push
mov
xlat
clc
sbb
and
dec
jle
fs
mov
mov
mov
incl
cmc
lcall
nop
jmp
jae
mov
iret
push
mov
pop
lcall
adc
or
push
out
push
cmp
lret
pop
xchg
mov
in
jo
sar
incl
pop
pop
push
jmp
out
cmp
mov
inc
rolb
or
adc
repnz
pop
pop
or
aas
stos
mov
push
adc
ljmp
sbb
pop
js
nop
add
cmp
dec
hlt
and
cmp
push
dec
cmp
jb
lret
addr16
pop
je
imul
mull
test
mov
aad
movl
mov
pop
outsb
or
mov
mov
jb
jmp
pop
jecxz
jge
inc
mov
push
aaa
cli
jg
inc
dec
cmp
inc
in
jge
jne
insl
adc
or
out
inc
filds
cmp
push
mov
inc
hlt
and
fldenv
ror
pop
mov
and
dec
insb
repnz
leave
movsb
lret
outsl
pop
push
decl
add
push
ja
sbb
xor
andl
dec
sarb
test
mov
mov
sbb
pop
mov
xchg
icebp
adc
imul
lret
jmp
scas
fwait
or
outsl
xchg
incl
fists
repz
adc
dec
loop
aas
inc
ficompl
mov
lds
jnp
hlt
pushl
out
add
mov
and
test
lcall
scas
mov
inc
call
mov
outsl
pusha
lds
dec
cmp
test
clc
mov
pop
lahf
sub
fildll
push
mov
cld
cmp
outsb
adc
in
lds
add
lcall
xchg
sbb
and
inc
incl
cs
repnz
fildll
nop
addr16
leave
xor
test
mov
nop
xchg
sub
dec
lcall
add
decl
pusha
stos
mov
pop
or
add
push
and
sahf
jecxz
fldpi
ja
sub
jg
orb
sbb
adc
cmp
push
lret
das
adc
pop
dec
or
and
jecxz
adc
ret
or
sahf
adc
sub
lcall
lcall
pop
xchg
and
fiaddl
add
xor
mov
insl
mov
sar
decl
in
sub
dec
add
rcl
mov
and
dec
mov
enter
pushl
into
dec
push
orl
bound
adc
sub
xchg
pop
push
ljmp
or
and
and
add
add
out
xchg
cs
mov
jnp
into
xorl
in
push
pop
push
sbb
jmp
test
sbb
or
add
call
inc
adc
in
sbb
push
fidivrs
pop
pop
push
mov
sbb
inc
test
fwait
xchg
imul
pop
inc
xor
imul
idiv
decl
cli
sbb
aas
jbe
mov
adc
push
int3
stos
outsb
mov
cmpsl
insl
jg
call
shlb
xchg
repz
sbb
mov
popf
pushf
in
mov
cs
loop
and
cmp
clc
movb
sbb
decl
add
cmp
inc
xor
push
scas
arpl
orl
das
clc
decl
mov
cmpsb
jecxz
mov
adc
adc
dec
fdivp
lahf
xchg
adc
clc
call
pop
fistpll
mov
das
and
in
xchg
int
pop
adc
push
dec
in
inc
sbb
pop
std
cmc
mov
iret
orb
mov
and
shrb
fnstcw
outsl
push
sub
and
pop
jecxz
call
and
icebp
xor
fildl
or
das
adc
adc
mov
and
fcompl
arpl
xchg
mov
cmp
adc
test
jmp
bound
adc
lret
call
js
lea
es
dec
fdivp
adc
sti
xchg
xchg
mov
arpl
lock
xor
or
leave
movb
jno
jg
je
std
adc
inc
pop
scas
arpl
insb
in
adc
les
into
inc
test
fnstsw
addr16
cmpsb
test
sahf
dec
add
sbb
adc
pop
mov
cld
push
jg
rcpps
mov
xchg
cli
call
adcb
je
dec
jne
fstpt
add
hlt
sarb
ret
scas
sub
mov
out
xchg
or
mov
ss
leave
adc
xchg
jg
jmp
mov
xor
lret
repnz
adc
sbb
mov
sbb
pop
out
dec
or
movsb
lods
cld
jno
jnp
insb
insb
mov
ljmp
pop
push
mov
pop
fdivl
aas
mov
lahf
add
aaa
jns
jecxz
incl
or
dec
iret
inc
inc
imul
jb
mov
push
dec
clc
lret
decl
xchg
sub
test
jg
inc
mov
fimuls
rorl
dec
ret
mov
sub
cmc
ds
pop
push
jnp
orps
pop
call
pop
jmp
imul
cli
adc
hlt
test
pop
sub
pop
loop
decl
sub
dec
lock
test
xor
mov
ljmp
mov
mov
mov
psubd
adc
xor
pop
jo
ficompl
incl
mov
iret
das
sub
sub
out
fmul
stos
mov
inc
and
push
jo
jmp
sub
inc
jp
data16
mov
dec
stos
lods
mov
aam
push
lods
add
arpl
pop
push
das
inc
test
dec
pushl
and
mov
outsb
lahf
push
iret
xchg
wrmsr
test
pop
dec
stos
and
or
cmc
incl
lea
loop
dec
jno
xor
scas
mov
stos
mov
incl
adc
pop
in
movntq
out
outsb
loop
rorb
mov
shll
xchg
cwtl
stos
out
fdivrl
jae
fstpl
mov
sbb
cmc
cld
aam
decl
fcoms
roll
icebp
jle
stc
push
cld
push
inc
das
sahf
stos
mov
call
lods
orb
pop
mov
out
sbb
mov
add
in
jg
add
push
ljmp
sbb
sub
inc
fstps
mov
clc
das
cmc
lcall
mov
incb
ds
fwait
das
sub
fcoms
sub
xchg
aaa
dec
dec
adc
jmp
jne
or
dec
lret
fcomp
jbe
pop
jnp
and
lods
ds
sbb
xchg
push
pushl
xchg
movsb
xchg
mov
sbb
pop
dec
adc
push
dec
gs
pop
int3
leave
ljmp
and
mov
mov
and
jg
xchg
inc
test
fcomps
cmp
popf
sti
push
xchg
cli
jg
subb
add
ret
daa
nop
shlb
add
jmp
test
cmp
lds
loopne
jg
decl
into
fcmovu
or
or
mov
call
ja,pt
ljmp
in
xchg
mov
fsts
pop
stos
incl
sbb
stos
xor
testb
fsts
sbb
jg
lahf
adc
xor
mov
jns
adc
adc
mov
cmc
mov
pop
movsb
jns
popf
xchg
push
es
lret
shlb
scas
dec
scas
pop
mov
cmpsl
cmp
into
mov
pop
mov
push
mov
loope
inc
xor
outsb
int
inc
mov
dec
stc
pop
xor
xchg
jmp
sbb
outsl
xchg
mov
xchg
in
out
adc
int
insl
cld
cmp
loope
adc
aam
jo
cmp
add
xchg
mov
pop
int3
sahf
mov
or
push
ret
les
jmp
cmp
dec
outsl
inc
hlt
jmp
mov
std
out
stos
jno
int3
inc
xchg
in
movsl
jbe
loope
sub
je
jle
or
test
cmpsl
sti
dec
xchg
inc
sub
or
dec
adcb
ja
das
cmp
sub
push
mov
fldenv
add
push
aam
in
aas
mov
mov
sbb
jmp
push
int3
sbbb
and
add
imul
adc
inc
xchg
call
jle
pop
lods
adc
test
iret
push
je
das
mov
lret
mov
jmp
pop
bnd
test
popf
pop
mov
stc
shl
mov
mov
xchg
insb
dec
popf
mov
mov
ret
pop
mov
fiaddl
dec
hlt
add
ljmp
adc
mov
xchg
repnz
sbb
sbb
outsl
js
push
xchg
movsb
in
jmp
ja
dec
or
fsqrt
lods
sbb
inc
enter
sar
lcall
push
sbb
daa
sysenter
adc
and
out
sbb
add
ljmp
jns
lock
pop
sbb
shll
stos
add
mov
jb
mov
fildll
xor
pop
and
add
incl
decl
shl
ss
cmp
ret
mov
pushl
jbe
dec
fistpl
mov
repz
mov
test
push
pushf
into
pop
jne
insl
cmp
idiv
call
clc
add
outsl
imul
add
cs
sbb
fldt
mov
fucomip
call
stos
pop
sbb
lret
ja
cltd
xlat
inc
push
jns
outsl
in
in
lock
xchg
add
mov
dec
mov
popa
pop
outsl
ret
inc
scas
push
shll
ret
xchg
adc
jmp
rol
hlt
fs
cld
add
mov
inc
mov
pop
fildl
mov
popf
lcall
pop
jge
fstl
and
filds
mov
mov
imull
push
pop
adc
mov
push
sahf
xchg
push
adc
push
xchg
test
mov
inc
fcoms
mov
xchg
repnz
mov
add
ljmp
and
test
mov
mov
mov
jg
fidivrs
xor
mov
xchg
lcall
mov
pop
push
ds
sti
incl
cld
gs
push
jp
jno
call
jp
pushl
cli
mov
push
ret
sbb
hlt
test
push
cs
notb
xor
sahf
in
mov
loop
adc
scas
lds
sbb
jg
repz
cmp
notl
cmpsl
shlb
adc
test
add
mov
push
fdivl
mov
mov
push
xlat
notl
and
lock
mov
jns
les
hlt
add
incl
fmuls
popf
mov
hlt
fldl
popa
push
pop
stc
or
mov
fidivs
ljmp
aad
dec
sarl
jmp
inc
lea
mov
int3
and
pop
fistpl
pushl
mov
loope
popf
adc
ret
ret
loope
cmc
push
mov
mov
sti
popa
xchg
inc
mov
sbb
inc
ds
mov
fs
ja
inc
les
mov
ljmp
cmp
jmp
out
xor
xchg
sub
lret
in
adc
xor
add
ljmp
dec
push
push
push
mov
push
xchg
push
sub
fnsave
es
mov
popa
mov
push
mov
hlt
clc
mov
sub
cmpsl
add
jb
mov
mov
jge
out
dec
ljmp
sub
fdivp
iret
sub
addr16
jnp
lods
xor
repnz
clc
inc
add
mov
jge
int
pushf
movsl
icebp
xchg
jno
fstl
xor
movsb
hlt
sarl
adc
in
aaa
push
mov
mov
mov
iret
pop
faddp
aam
push
push
push
jns
test
jns
lret
pop
je
dec
and
repnz
jp
aam
mov
repnz
ffreep
out
addr16
shll
aas
test
repnz
imul
rolb
pop
sub
cmp
cli
cld
in
or
jl
orl
jecxz
push
lods
adc
mov
insl
jb
cld
aam
lods
incl
xchg
repz
fidivrs
cmp
push
jae
xor
jge
cli
sub
add
mov
fdivrl
mov
lods
xchg
incl
ret
imul
adc
inc
sub
pop
std
aad
sar
jmp
push
jmp
cmc
icebp
mov
ret
aam
xor
push
jge
cld
daa
inc
jbe
shr
in
test
mov
xchg
aaa
or
jle
xor
cmpsl
sarb
lock
jmp
fnsave
jmp
rcrb
push
sbb
and
pop
ret
mov
mov
inc
pop
sbb
ljmp
cmc
fisttps
mov
push
iret
scas
jae
adc
inc
or
fcoml
jg
rcrb
ret
adc
loope
ret
les
enter
adc
add
mov
xor
mov
mov
pop
daa
dec
in
jge
arpl
push
sar
mov
xchg
out
push
pushf
aad
push
and
mov
aaa
sub
ret
xor
lcall
pop
mov
clc
xchg
jg
pop
jno
mov
leave
test
mov
sbb
mov
jecxz
inc
or
mov
incl
dec
jns
jmp
adc
push
aam
pop
pop
in
ljmp
outsb
or
fstl
and
test
pop
jle
mov
sbb
jg
sbb
xor
test
sahf
push
dec
sbb
rolb
xor
mov
inc
fnstcw
and
jmp
mov
dec
loop,pt
popa
jl
jne
sub
push
pushf
jg
mov
outsl
vstmxcsr
das
cld
pop
cmp
xchg
test
dec
pop
cmp
push
outsb
scas
popl
push
dec
push
scas
pop
out
ja
mov
icebp
int
mov
gs
leave
jle
hlt
std
mov
cld
cmp
jge
or
pop
pushf
js
movsl
adc
mov
pop
pushl
fmuls
mov
adc
fmuls
stc
je
outsb
cld
mov
or
mov
mov
rcrb
pushl
lods
mov
aas
mull
mov
mov
jnp
aas
andl
pop
clc
outsl
std
lret
repz
xor
test
xchg
adc
scas
cmpsl
push
push
push
pop
cli
lcall
fisttpl
dec
sub
mov
aas
push
mov
adc
pop
sbb
push
xor
lock
push
into
insb
into
push
arpl
or
lahf
cmp
mov
mov
je
fildll
sbb
sahf
dec
and
push
inc
pop
mov
movsl
xchg
and
leave
pushf
mov
jo
xor
sbb
incl
and
bound
xchg
and
lret
sbb
jo
jb
call
rolb
or
pop
sub
icebp
sub
xlat
sarl
mov
leave
mov
mov
mov
pop
inc
loop
ljmp
push
pop
lcall
or
das
fidivs
xor
lods
in
jle
inc
sub
jecxz
rorl
dec
addr16
mov
push
mov
inc
or
hlt
mov
mov
inc
push
mov
sub
xchg
mov
mov
call
hlt
adc
jg
addr16
sbb
sbb
inc
xor
mov
daa
cmp
clc
rcrl
std
jg
aam
pop
push
in
sbb
pop
mov
call
incb
stos
pop
test
jns
dec
rcrl
push
lahf
rcll
cmpsb
insb
mov
or
jnp
pop
stos
les
dec
ficompl
cli
outsl
mov
ret
mov
mov
inc
cli
mov
add
scas
and
adc
sub
and
dec
dec
enter
out
clc
out
sub
add
mov
mov
jae
push
and
mov
dec
imul
and
add
mov
inc
outsb
arpl
cmp
add
pop
add
pop
add
insl
jo
or
or
mov
mov
or
push
push
adc
add
push
push
adc
add
adc
inc
jno
enter
insb
and
dec
and
je
andb
push
int
shrb
or
cmp
jne
pushl
inc
outsb
jae
jo
repz
add
lods
dec
popa
je
aaa
add
sbb
push
push
sub
ss
cmp
and
sub
ret
stos
or
fxch
inc
adc
addr16
andb
inc
lahf
ret
iret
add
sub
fisttpl
or
fadds
test
addb
mov
or
xor
mov
xchg
enter
adc
add
xchg
sub
add
clc
imul
or
adc
xorb
dec
push
cwtl
pusha
add
dec
lods
stos
or
fmuls
mov
and
mov
inc
sub
xor
add
inc
and
push
add
jl
popa
or
pop
inc
push
sub
loope
ret
and
xchg
or
or
test
dec
lods
and
sbb
adc
and
xor
xchg
xor
add
inc
and
pop
fld
add
xchg
pop
or
inc
je
sub
and
cmc
inc
sbb
and
inc
mov
adcl
adc
stos
add
pop
and
mov
insb
pop
adcl
shrb
sub
xor
mov
add
push
and
sub
mov
or
add
push
pop
add
and
and
push
stos
nop
add
and
mov
test
pop
orl
pop
push
je
jne
adc
push
add
add
add
xorl
xchg
sbb
sbb
adc
push
and
adc
test
cmp
pusha
lea
test
mov
inc
gs
add
sub
add
ret
pop
nop
les
int3
add
adc
mov
adc
lret
adcl
nop
adc
adcb
xchg
lds
add
scas
push
stos
nop
add
in
dec
pusha
inc
adc
mov
and
loop
push
dec
adc
das
nop
push
and
sub
xchg
data16
int3
xchg
add
sub
js
and
inc
ja
movsb
adc
xor
xor
or
mov
and
test
andb
sub
adc
sub
and
push
or
sbb
adc
or
inc
and
xchg
into
mov
addb
push
push
and
push
movsb
inc
and
mov
cmp
add
adc
movsb
and
add
add
dec
js
adc
or
xor
add
and
or
adcb
cltd
nop
sub
push
sbb
sub
addl
test
mov
sub
fsubrs
pushf
inc
push
aad
or
xor
xlat
add
enter
or
ss
mov
imul
add
or
adc
push
add
mov
and
push
ljmp
mov
and
inc
add
add
jae
mov
push
push
nop
push
and
aam
add
and
sub
bound
add
push
stos
or
pop
and
mov
sub
add
sbb
int
add
stos
inc
and
stos
inc
or
push
dec
xchg
xor
arpl
add
stos
inc
pop
mov
dec
xchg
xchg
and
sahf
punpckldq
xchg
and
adc
push
subb
add
mov
lret
xchg
add
sbb
mov
addl
add
sbb
mov
dec
xchg
inc
stos
outsb
inc
add
lods
pop
nop
dec
or
add
dec
rolb
and
insb
mov
sub
push
push
and
or
mov
dec
aam
push
mov
and
fwait
mov
mov
adc
adc
and
or
and
mov
push
push
push
adc
aad
add
sbb
inc
and
xorl
add
add
add
and
mov
adc
mov
sarb
and
add
dec
push
push
mov
add
shlb
add
or
inc
dec
inc
mov
add
or
or
sbb
sbbl
push
or
ret
pusha
mov
sub
adc
push
push
push
xor
add
and
or
pusha
add
mov
or
xor
mov
add
xchg
or
mov
and
inc
xchg
sbb
add
sub
lds
and
cmc
and
adc
add
adc
in
add
jnp
inc
adcl
in
movsb
adcb
add
aam
addr16
adc
sub
cmp
popa
push
inc
adc
and
add
mov
sub
nop
or
sub
sbb
and
rorb
jl
pop
adc
or
jb
push
adc
clc
jb
outsb
jae
mov
sbb
js
frstor
mov
jle
nop
and
mov
pusha
sub
sub
add
lahf
addb
inc
fmuls
jo
mov
call
je
inc
jmp
faddl
jb
adc
adc
mov
inc
xor
inc
outsl
outsb
imul
lret
mov
fsubrs
jg
push
or
pusha
test
or
and
orb
inc
jo
mov
add
add
mov
verr
add
mov
add
xor
jo
or
adc
test
add
and
movsb
fwait
sbb
pop
mov
leave
outsb
or
push
push
add
jmp
pop
or
pusha
rorb
mov
sahf
xorl
inc
pop
lock
test
fdivs
rolb
mov
les
and
rolb
mov
and
test
add
aas
add
sbb
add
add
or
sub
out
cmp
daa
inc
gs
roll
add
pop
sbb
add
daa
jae
arpl
bound
daa
sbb
add
pop
aad
str
add
incl
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
pusha
lldt
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
adc
lldt
add
add
add
add
add
add
add
add
add
fadds
add
sub
add
add
add
add
add
call
push
loope
mov
mov
or
lea
clc
loopne
add
push
loope
mov
mov
or
lea
or
push
add
push
loope
mov
mov
or
lea
sbb
push
add
jp
call
out
push
dec
in
jno
xchg
sub
push
lret
mov
pop
adc
icebp
in
ss
cmp
lcall
lcall
pop
lods
in
jmp
fcomps
inc
stos
bound
out
jnp
movsl
out
dec
push
sub
sbb
xor
adc
lock
adc
fsubrl
or
sti
popf
mov
sub
sub
mov
dec
push
into
lods
mov
insb
repnz
test
les
and
jle
cmp
dec
repnz
mov
cmp
popf
pop
add
jb
mov
sbb
bound
cmp
add
push
cmpsl
add
imul
enter
std
push
lret
ret
das
or
sub
jnp
or
cmpl
mov
addb
or
adc
icebp
mulb
mov
sub
aad
cmp
cld
cmpsl
sbb
xchg
into
lahf
add
testb
cltd
push
testl
mov
push
mov
xchg
pop
jle
inc
in
fistpll
sub
test
dec
test
and
inc
adc
insl
or
sub
lret
xchg
add
xchg
and
daa
iret
imul
out
mov
sarl
sbb
push
cmp
and
lcall
xchg
cmp
aas
iret
aam
int
push
add
xchg
cmpsl
add
sub
ja
adc
add
pop
dec
imul
scas
pop
mov
clc
inc
lock
imul
dec
fwait
pop
in
out
dec
jle
out
xor
or
mov
dec
mov
pop
inc
js
aam
sti
sub
pop
jae
xorl
sbbb
inc
sbb
cld
sti
cwtl
push
mov
jmp
inc
mov
jns
aas
mov
lcall
insl
cmp
cmp
jns
in
or
xor
sub
pop
lcall
fidivl
loope
mov
sub
ret
xor
idivl
pop
aas
test
add
testl
insb
mov
jb
cmp
in
js
sar
rol
outsb
lds
fs
xor
cli
iret
dec
mov
sub
xlat
xor
sbb
into
adc
cwtl
sbb
iret
mov
mov
inc
shlb
subl
and
and
jnp
orb
cmpsl
mov
mov
xchg
aas
lds
xchg
and
add
or
dec
aad
ss
xor
mov
xchg
jnp
adc
aad
rcrl
cmp
bound
lods
pusha
sub
popa
popf
pop
aam
pop
ds
and
cltd
push
xchg
add
sub
fsts
adc
lcall
or
in
add
inc
fldt
fistl
imul
adc
mov
ja
mov
repnz
stc
mov
ja
arpl
jnp
cmpsb
insl
xor
adc
xlat
xor
jb
scas
mov
clc
mov
mov
lods
stos
fisttpl
cmp
pop
fisubl
lret
mov
pushf
push
add
inc
stos
adc
je
insb
ljmp
iret
negb
inc
ret
xchg
out
push
je
movl
ja
lahf
test
notl
aad
and
mov
sub
aas
inc
shll
xchg
aas
mov
enter
loope
in
sbb
add
mov
mov
aas
sbb
and
fwait
scas
xor
pop
test
dec
jb
push
jo
sbb
jo
add
popf
hlt
mov
test
negl
jg
dec
std
push
push
xchg
cmp
stc
lret
pop
out
sbb
rolb
push
mov
test
inc
aaa
mov
scas
scas
insl
in
punpckldq
nop
pop
inc
sub
and
sbb
divb
ret
cwtl
fsubp
int
pop
data16
pop
inc
dec
pop
fsubrp
iret
mov
dec
and
lds
dec
icebp
popa
ret
jmp
cmpsl
lds
push
dec
and
or
xchg
jl
adcb
call
and
jnp
xor
repnz
inc
insl
xlat
pop
and
jo
test
test
and
jne
jno
sub
mov
sbb
shll
push
push
arpl
lret
mov
xor
inc
outsl
sbb
out
sub
loope
inc
jae
aam
and
inc
or
aad
cmpsb
push
les
add
add
add
data16
add
fsubl
add
add
jecxz
mov
add
add
data16
clc
data16
ltr
verr
add
sldt
add
add
sldt
add
add
sldt
add
add
sldt
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jo
inc
jb
add
push
gs
imul
imul
jb
arpl
jb
