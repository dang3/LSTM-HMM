add
int3
int3
int3
add
xor
add
int3
jns
pop
jle
loope
inc
stos
mov
adc
push
les
das
clc
aad
stos
cld
pop
push
push
pop
sub
aaa
das
cltd
cmpsb
push
bound
inc
inc
or
or
test
outsb
gs
out
xor
hlt
test
pushf
fdivs
push
cmp
push
push
and
xchg
in
loope
jns
mov
pop
sub
repz
bound
cs
mov
mov
sbbb
cli
js
aad
add
add
out
popa
fisubl
jb
insl
lods
stc
out
mov
sub
loopne
clc
jge
mov
and
das
fisttpl
jle
xor
xchg
sbb
jae
jnp
movsb
mov
clc
in
xchg
scas
mov
aam
ret
lods
xchg
xchg
aam
inc
cmp
sbb
mov
pushf
cli
pop
in
and
lcall
stc
cmp
pop
jbe
mov
in
adc
inc
les
lret
fwait
into
xchg
push
adc
push
out
cmp
mov
repz
mov
add
fnstenv
in
dec
push
jecxz
dec
lret
add
sub
iret
clc
fs
jbe
push
ret
vrsqrtss
mov
add
add
add
mov
stos
outsb
arpl
imul
dec
mov
push
je
pop
data16
lret
cmp
lcall
lret
jne
ljmp
inc
push
xchg
decb
and
lds
add
add
add
add
add
add
add
sbb
sub
push
stc
jge
xchg
mov
sbb
xor
pushf
adc
inc
push
outsl
push
sbb
mov
cmc
inc
insb
inc
and
mov
lock
push
inc
xor
sub
or
adc
mov
jp
in
lods
movsl
loopne
fwait
xchg
test
jbe
jge
mov
add
fucomp
stos
adc
arpl
inc
jne
mov
iret
mov
daa
mov
mov
addl
loop
cmp
xchg
xchg
pop
out
in
addb
mov
inc
shrb
or
data16
call
ror
cmp
jbe
in
imul
fcompl
ljmp
and
cmpsl
test
insb
js
jg
inc
pushw
addr16
sub
icebp
int3
xchg
lcall
rcll
fstps
xor
jl
push
push
aaa
jo
and
shll
je,pt
cmc
sub
cmp
jno
inc
and
and
ja
addb
sub
mov
sarb
pop
in
push
mov
xor
popa
iret
adc
dec
and
rolb
rcrb
add
add
cmpsb
sti
mov
mov
fisubs
ja
mov
bound
data16
aas
mov
icebp
in
shrl
cwtl
xchg
into
insb
int3
clc
cwtl
xchg
xchg
fldt
mov
cwtl
cli
mov
push
test
incl
incl
incl
incl
incl
jg
jecxz
xor
dec
movsb
cmc
sti
xchg
mov
push
pop
jl
decl
cld
pop
aam
inc
pusha
iret
idivb
add
add
pop
mov
ja
nop
stc
push
sarl
fdivl
ljmp
sub
clc
loopne
into
inc
or
xor
inc
jns
loop
or
shr
pop
sbbl
loopne
xor
mov
mov
int
mov
add
add
add
add
add
push
add
jecxz
ss
push
in
mov
pop
adc
into
int3
xchg
scas
dec
mov
jb
push
repnz
sbb
aam
mov
and
and
and
and
and
mov
aad
pop
or
jg
pop
sub
test
mov
cmp
repnz
jne
gs
push
push
ds
iret
xor
hlt
mov
mov
scas
pop
jae
jo
outsb
nop
and
or
sbb
add
add
daa
loop
cmp
adc
add
add
add
push
xchg
dec
sbb
in
leave
fcomip
cmp
pop
adc
sbb
jl
out
or
ss
xor
mov
adc
scas
jbe
sbb
cmp
inc
ret
dec
pop
jno
xchg
add
jmp
cmp
cmpsb
loope
add
add
add
add
add
add
add
and
repnz
mov
aam
push
mov
aad
scas
jle
adc
mov
push
nopl
in
pusha
fcoms
frstor
sbb
lahf
popf
inc
fwait
jne
mov
sub
aaa
mov
dec
testb
lret
jl
or
xor
cmpsl
sub
add
add
inc
cli
sub
inc
jo
sahf
push
outsb
subl
inc
inc
pushf
aad
pop
lock
dec
fidivl
arpl
fildl
xor
testl
fs
jge
xchg
iret
out
lods
lods
ljmp
and
inc
cmpsl
dec
scas
jno
cmp
xor
cmp
adcb
mov
test
mov
dec
mov
mov
push
gs
cmpb
dec
jge
inc
clc
or
gs
jl
jb
xor
lcall
es
lcall
add
dec
xchg
ljmp
mov
rcrl
push
out
add
dec
adc
inc
jae
cmpsl
je
mov
sub
aad
pushw
xchg
jg
ja
lods
lahf
mov
int3
xchg
cmp
scas
and
jg
imul
sahf
mov
dec
insl
movsb
das
lods
and
int3
add
add
add
test
inc
fs
lret
clc
leave
cmp
bound
sahf
movl
ds
pop
lods
cs
xchg
pop
mov
ljmp
pop
dec
ljmp
sbb
movb
loope
jnp
lods
adc
cld
jg
data16
mov
mov
jecxz
add
add
add
add
add
aam
pusha
icebp
sti
cmpsl
sarl
cmp
jg
mov
add
add
add
add
daa
mov
leave
cmp
insl
and
das
mov
dec
gs
sub
enter
xchg
inc
sub
outsb
xor
cmp
add
mov
jle
aad
xor
cld
js
aaa
das
icebp
inc
loop
enter
aad
rcrb
xlat
call
inc
sub
pop
push
orb
mov
lret
lds
cmpsb
int
xor
out
jnp
imulb
fs
mov
in
movl
out
push
sub
add
and
sbb
nop
lret
sbb
and
sbb
or
inc
imul
out
pusha
clc
inc
lods
xchg
mov
inc
das
scas
leave
in
sti
fwait
rol
sub
pusha
fwait
scas
add
rolb
mov
pop
movsb
fst
dec
scas
and
inc
add
inc
lods
inc
out
dec
fs
adc
pop
mov
pop
lret
cmp
je
and
sbb
outsl
and
push
in
loop
and
scas
add
jp
pop
add
xor
repz
out
popf
add
mov
popw
in
push
dec
lahf
das
cmp
data16
fidivrl
sub
ss
push
push
push
scas
mov
xchg
dec
ret
nop
add
clc
cltd
xchg
hlt
shrl
ds
cltd
das
xchg
mov
fcoml
mov
iret
rclb
pop
mull
adc
ss
inc
ds
outsb
addr16
mov
insb
or
loop
popf
cmpsb
add
mov
insb
mov
clc
in
ret
jl
cwtl
pop
das
popa
adc
in
es
jecxz
cmpsb
pusha
aam
push
pop
sbb
pop
insb
outsb
mov
incl
incl
incl
dec
les
lock
pop
cmpsb
shll
mov
jg
loopne
push
adc
jp
cmp
push
push
xchg
sbbb
aad
xor
fcoms
test
loopne
cmp
jbe
or
and
and
mov
aaa
stos
ss
inc
out
mov
dec
shlb
scas
aad
and
and
and
and
and
and
std
xchg
and
dec
aaa
mov
dec
std
mov
cmp
mov
lahf
pop
das
mov
xor
lcall
popa
add
call
int3
das
adc
add
adc
andb
imul
mov
add
pop
mov
add
add
nop
sub
adc
call
and
add
inc
arpl
xor
nop
int3
int3
pop
and
add
xor
add
incl
incl
cmp
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movb
movl
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
and
mov
lea
mov
cmpl
jne
jmp
mov
and
mov
sub
cmp
je
mov
add
mov
and
sub
mov
jmp
mov
and
add
sub
mov
mov
cmp
jne
jmp
mov
add
mov
and
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
lea
inc
sub
sub
dec
mov
add
mov
mov
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
sub
sub
mov
jmp
mov
sub
sub
mov
jmp
mov
mov
lea
add
mov
jmp
mov
imul
mov
add
mov
mov
mov
mov
mov
and
cltd
mov
idiv
cmp
jle
mov
and
add
xor
mov
add
mov
mov
sub
mov
mov
and
mov
lea
cmp
jb
mov
and
sub
sub
mov
pushl
mov
and
mov
lea
cmp
jne
mov
add
mov
and
sub
mov
mov
add
sub
mov
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
mov
sub
mov
sbb
mov
and
cltd
sub
sbb
mov
mov
and
imul
mov
add
mov
push
call
add
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
xor
mov
div
cmp
jbe
mov
xor
add
adc
mov
and
cltd
add
adc
mov
mov
mov
cmp
jne
mov
and
cltd
mov
sub
mov
sbb
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
add
mov
adc
mov
and
cltd
sub
sbb
mov
jmp
mov
and
add
cltd
sub
sbb
mov
mov
and
add
cltd
add
adc
mov
xor
add
adc
mov
mov
cmp
jne
mov
xor
mov
div
cmp
jbe
mov
xor
add
adc
mov
and
cltd
add
adc
mov
mov
mov
and
cltd
mov
sub
mov
sbb
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
add
mov
adc
mov
and
cltd
sub
sbb
mov
jmp
mov
and
add
cltd
sub
sbb
mov
jmp
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
and
mov
imul
add
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
add
mov
xor
mov
sub
mov
jmp
push
push
mov
push
mov
push
call
mov
mov
cmpl
ja
cmpl
jbe
mov
and
cltd
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
sub
mov
sbb
mov
and
cltd
sub
sbb
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
and
sub
mov
xor
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
and
cmp
jne
jmp
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
cmpl
jne
jmp
mov
and
sub
cmp
je
mov
and
add
sub
xor
mov
mov
jmp
mov
add
mov
and
sub
xor
mov
mov
mov
cmp
jne
jmp
mov
and
cltd
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
jmp
mov
push
call
add
mov
and
add
mov
and
sub
cltd
mov
mov
mov
push
call
add
mov
xor
push
push
mov
push
mov
push
call
add
adc
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movb
mov
and
mov
lea
mov
movl
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
and
mov
lea
mov
cmpl
jne
jmp
mov
sub
cmp
je
mov
add
sub
mov
jmp
mov
add
sub
mov
mov
cmp
jne
jmp
mov
add
mov
and
add
mov
jmp
mov
sub
mov
movl
mov
push
mov
push
call
movl
jmp
mov
add
mov
mov
cmp
jae
mov
sub
sub
mov
mov
add
mov
mov
mov
and
test
jne
mov
mov
lea
add
mov
mov
add
mov
movb
jmp
movb
mov
add
sub
mov
mov
sub
mov
mov
add
mov
mov
mov
add
sub
mov
jmp
mov
sub
sub
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
movb
movw
movl
jmp
mov
add
mov
cmpl
jge
mov
and
cmp
jne
jmp
mov
and
mov
lea
mov
cmpl
jne
jmp
mov
and
mov
and
sub
cmp
je
mov
and
add
mov
and
sub
mov
jmp
mov
and
add
mov
and
sub
mov
mov
cmp
jne
jmp
mov
and
mov
add
mov
and
add
mov
jmp
mov
mov
mov
and
mov
and
mov
add
lea
mov
mov
and
push
call
add
mov
mov
xor
mov
div
cmp
jbe
mov
and
mov
add
mov
and
add
mov
mov
add
mov
and
sub
mov
mov
add
mov
and
sub
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
and
inc
add
inc
add
inc
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
inc
add
and
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
es
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
daa
inc
add
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
mov
push
pop
mov
cmp
jne
inc
inc
mov
cmp
je
test
jne
cmp
jne
inc
inc
jmp
cmp
jbe
inc
inc
cmpw
ja
mov
test
je
cmp
jbe
ret
push
mov
push
xor
mov
test
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
test
mov
jne
push
call
pop
mov
cmpw
je
push
push
call
mov
pop
inc
cmpw
je
lea
push
call
test
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
cmpw
lea
jne
pop
pushl
call
andl
andl
pop
pop
movl
pop
ret
push
mov
push
push
push
push
mov
push
push
push
call
mov
mov
mov
cmpw
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
shl
push
call
mov
add
test
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
mov
push
andl
cmpl
movl
mov
je
mov
addl
mov
push
pop
cmp
jne
mov
add
push
pop
cmp
je
test
je
incl
test
je
mov
mov
add
mov
add
jmp
incl
test
je
andw
add
cmp
jne
add
jmp
push
pop
incl
test
je
mov
mov
add
mov
add
cmp
je
test
je
cmp
jne
test
jne
sub
jmp
test
je
andw
andl
cmpw
je
mov
cmp
je
cmp
jne
add
jmp
xor
cmp
je
cmp
je
mov
addl
mov
mov
incl
movl
xor
cmpw
jne
add
inc
jmp
cmpw
jne
test
jne
xor
cmp
je
cmpw
lea
jne
mov
jmp
mov
xor
push
cmp
pop
sete
mov
shr
mov
dec
test
je
inc
test
je
movw
add
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
mov
add
incl
add
jmp
test
je
andw
add
incl
jmp
mov
pop
pop
cmp
pop
je
mov
mov
incl
pop
ret
push
mov
push
mov
push
push
xor
xor
push
mov
test
jne
call
mov
test
je
movl
jmp
call
mov
test
je
movl
jmp
cmp
jne
test
jne
call
mov
test
je
xor
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
pop
test
jne
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
jne
test
jne
call
mov
test
je
cmpb
mov
je
push
push
push
push
push
pushl
call
test
je
push
add
call
cmpb
lea
pop
jne
inc
mov
lea
push
call
mov
pop
test
jne
push
call
xor
pop
pop
pop
pop
pop
ret
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
pushl
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
jmp
push
call
pop
xor
push
call
mov
jmp
mov
push
push
push
mov
push
mov
test
jne
call
test
je
movl
jmp
call
test
je
movl
jmp
cmp
jne
call
jmp
cmp
jne
call
mov
push
mov
push
push
push
push
pushl
call
mov
test
je
lea
push
call
mov
pop
test
je
push
push
push
push
push
pushl
call
test
jne
push
call
pop
xor
pop
pop
pop
pop
ret
mov
jmp
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
mov
mov
cmpw
je
inc
inc
cmpw
jne
mov
push
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fisttps
add
dec
inc
add
dec
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
dec
inc
add
dec
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
inc
add
inc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
dec
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivs
add
cmpb
add
add
add
push
cmp
add
add
xor
add
add
je
add
mov
add
pushf
add
test
add
mov
add
enter
fidivl
add
call
add
add
add
adc
add
and
add
xor
add
inc
aaa
add
pop
aaa
add
jb
add
mov
add
mov
aaa
add
aaa
add
out
aaa
add
add
add
adc
add
and
add
xchg
cmp
add
add
add
add
and
add
sbb
add
or
add
dec
add
mov
add
add
add
add
xor
add
add
add
add
add
je
mov
dec
mov
lock
sti
stos
out
daa
add
xchg
into
pusha
cwtl
mov
aam
inc
mov
int3
pop
add
xchg
and
or
and
and
pushf
inc
popa
xchg
jg
outsl
lcall
pop
or
or
mov
xchg
roll
jbe
scas
mov
add
or
es
mov
ret
sub
pushl
pusha
pop
sbb
sub
stc
lea
mov
mov
xchg
jne
add
add
add
add
aam
sbb
push
inc
outsl
aas
pop
xchg
jmp
sbb
adc
out
sbbl
push
daa
faddp
xor
xchg
iret
jp
bound
or
xchg
add
add
add
jle
xor
fmuls
ret
ret
fs
inc
or
and
aaa
outsb
aad
cmpsl
jl
inc
cmp
ficoml
sti
mov
ret
mov
pop
mov
sarl
or
cltd
push
jecxz,pn
push
loope
subl
ds
insb
scas
adc
sub
movsb
pop
in
lods
test
popa
imul
pop
mov
or
adc
int3
add
add
add
sbb
push
mov
jae
pop
xchg
and
mov
xchg
or
xor
and
jnp
insb
mov
mov
fidivl
ds
or
mov
xchg
or
scas
pop
dec
hlt
add
add
add
add
add
add
or
outsl
jb
sub
add
mov
enter
or
xor
adc
mov
mov
cmp
push
imul
gs
scas
mov
fmull
add
add
add
add
jnp
lods
or
andl
gs
iret
push
or
mov
je
test
jae
adcb
push
mov
dec
shrb
cmc
ja,pt
inc
jge
mov
sub
out
pop
outsb
fisttpll
xor
jmp
push
leave
jns
fadd
pop
fildl
in
cwtl
pushf
stos
cmp
cmp
jnp
dec
roll
ret
sub
rdpmc
mov
fidivl
jo
and
and
and
and
test
mov
dec
sub
nop
mov
inc
push
aaa
mov
pop
xor
sub
std
sahf
sarb
stos
jg
movsb
test
sbb
or
adc
call
sbb
or
outsb
adc
and
movsb
je
imul
sbb
add
aaa
xchg
shr
sub
adc
add
fistpll
fisubrl
lea
cmp
lock
inc
mov
call
loope
fsubrl
xor
pop
mov
or
imul
push
lods
ret
mov
push
or
and
incl
incl
incl
dec
repnz
fdivrl
mov
or
fsubr
pop
or
jl
ds
shrb
jae
scas
mov
stos
fmuls
lahf
add
add
add
add
add
add
add
mov
shlb
insb
icebp
mov
push
shll
fcomps
aaa
outsb
popa
or
xlat
mov
xlat
dec
mov
or
pop
fnstcw
or
jns
xchg
push
pusha
test
subl
inc
loopne
fwait
movsl
mov
out
cmp
dec
jbe
add
fidivrl
mov
out
je
flds
incl
incl
incl
incl
incl
pop
aas
cmpsl
lret
mov
sub
pusha
mov
sub
outsb
subl
andl
and
push
add
add
add
or
sahf
loopne
shll
dec
mov
sbb
shl
js
fdivl
jnp
rclb
mov
cwtl
movsl
adc
negb
call
mov
test
dec
stos
pop
rcll
adc
xorl
push
add
lods
xchg
mov
push
sub
das
insl
in
mov
shll
lcall
push
daa
out
lods
js
mov
das
imul
enter
xlat
inc
icebp
out
xchg
leave
aaa
dec
add
add
add
add
add
mov
mov
gs
mov
out
outsl
iret
sbbl
fadds
int3
add
add
mov
or
or
mov
mov
outsb
aas
aam
push
mov
xchg
ds
sub
sbb
cmp
jl
addr16
add
into
dec
iret
xor
mov
adc
ja
int
into
pop
in
mov
pop
mov
or
sarb
xchg
outsb
lret
rcrl
mov
imul
enter
sbb
mov
rcr
js
inc
repz
jne
sub
mov
add
cmp
scas
rcrl
imul
fs
sti
es
jne
xor
dec
fs
cmp
hlt
add
add
add
add
add
ret
sahf
inc
jmp
mov
jp
mov
cmpsl
nop
cltd
xchg
push
popf
push
dec
xchg
xchg
aam
pop
lahf
inc
loope
cwtl
pop
push
sbbb
push
stos
test
cmp
fwait
mov
jge
int3
add
add
add
add
mov
repnz
rclb
cmpsb
jb
test
dec
xchg
jae
femms
pop
ret
mov
xlat
xor
fildl
pop
subps
fmull
inc
mov
mov
stos
mov
aas
jbe
jge
popl
cmp
lock
push
test
or
jae
xor
out
adc
adc
and
in
shlb
mov
cwtl
fildl
cmp
push
lcall
jecxz
jae
mov
push
gs
jl
and
and
sub
push
inc
adc
jo
ficompl
jmp
test
shll
push
and
mov
fsubrl
psubq
xchg
xorb
dec
and
mov
xchg
xor
add
shl
test
out
mov
mov
std
ret
shl
lods
addr16
xchg
in
add
hlt
pop
fidivrl
sarb
enter
jg
dec
mov
gs
popf
xchg
mov
dec
popa
cmp
mov
pushf
mov
lcall
int3
add
add
add
add
push
jmp
test
shrd
lahf
cmp
push
ret
scas
mov
or
add
fisttpll
je
adc
mov
push
add
sbb
call
mov
sarl
inc
inc
pop
sbb
mov
idivl
cmp
popa
mov
stos
adc
jg
inc
pop
orl
mov
pop
push
dec
in
aas
ds
mov
mov
icebp
outsl
mov
fwait
ja
movsl
sbb
arpl
cs
add
dec
lahf
or
add
sbb
inc
sbb
out
cwtl
jle
and
add
add
add
add
add
add
inc
and
jb
ss
mov
addb
add
add
add
popa
sbb
in
cmp
ja
test
mov
gs
push
loopne
stos
push
repnz
popa
mov
mov
adc
mov
test
add
loop
xchg
adc
xorb
imul
pusha
mov
mov
xor
add
add
add
add
add
add
add
pusha
sbb
lds
andb
test
cmp
push
xchg
nop
jb
popf
movsb
bound
fmull
jno
or
sbb
jnp
add
rcrl
aad
mov
test
dec
inc
test
test
mov
dec
icebp
in
or
lret
insb
add
inc
dec
pop
and
in
popa
push
lock
mov
out
imul
jb
outsb
in
lods
roll
shlb
cld
idivl
adc
out
fs
or
outsb
gs
enter
xor
adc
sarb
int3
add
add
add
scas
test
mov
popf
in
loop
lea
out
lea
adc
and
ds
dec
ret
push
enter
jo
cltd
mov
cli
xchg
mov
in
fstpl
add
mov
pop
rcll
push
push
enter
fstl
enter
add
add
add
lods
fcmovbe
in
mov
mov
les
mov
pop
pop
xchg
stos
xor
roll
jl
and
mov
mov
jg
pop
in
dec
test
and
clc
xor
jnp
fs
add
in
ja
pop
data16
imul
imul
int
call
sbb
pop
ret
jbe
cmp
subl
cmpsl
dec
mov
mov
and
sub
sub
mov
pop
mov
dec
sahf
repz
stos
add
rorb
outsb
jno
addl
mov
insl
jge
dec
adc
rcr
mov
aas
inc
int3
test
cmp
xor
dec
movsb
out
cs
lret
iret
hlt
dec
xchg
lahf
jecxz
sahf
dec
ljmp
pop
push
xor
loope
add
adc
in
loopne
mov
sbb
cmp
push
setno
fcmovb
cmpsl
xchg
insl
jmp
fldcw
shrd
in
out
push
and
sub
adc
cmpsl
sbb
xor
and
inc
or
xchg
adc
es
arpl
jns
push
mov
add
add
pop
cwtl
adc
jnp
adc
and
aas
sbb
jbe
and
stos
movsb
mov
or
aad
js
push
popa
add
mov
push
sub
test
aas
mov
add
add
add
add
add
out
pushf
adc
cltd
int3
subb
ret
cmp
scas
bnd
or
inc
jge
dec
xchg
and
inc
out
dec
add
int3
add
add
int
movsb
fs
inc
jbe
mov
jnp
cmp
jge
jbe
mov
jns
das
in
fsts
mov
lret
test
repnz
popf
push
pop
fisttps
or
into
rol
shrl
inc
pop
adc
pushf
mov
xchg
scas
lahf
fcoms
outsl
or
xor
mov
and
jp
jmp
pop
popa
aad
cmp
mov
nop
outsb
dec
test
pop
stos
or
jne
sbb
jne
inc
popf
add
enter
pop
fdivr
add
add
add
add
add
mov
dec
pop
xchg
jg
nop
mov
call
or
mov
aam
les
das
or
xchg
imul
pop
in
sub
xchg
mov
dec
lock
outsb
enter
ss
out
shlb
mov
dec
mov
stos
jae
test
mov
dec
ds
sbb
js
pushf
sbb
push
push
bound
dec
xorb
pop
push
ds
jae
mov
bound
add
add
add
add
jne
in
add
xor
mov
insl
jae
cmpsl
shl
mov
rcl
loop
pop
imul
xchg
add
sbb
mov
pop
cmpsb
xor
lahf
adc
data16
add
dec
hlt
push
xlat
sub
gs
rorl
pop
into
pop
sub
repz
mov
cmpsl
lods
insl
adc
test
repz
sti
shrb
cmp
andb
dec
repz
xchg
or
repz
or
or
pop
jl
sub
clc
fisttpl
add
add
add
add
add
sbb
mov
xchg
pop
push
jle
adcl
push
mov
enter
jle
add
out
xchg
fistl
and
xor
jecxz
push
loope
cmpsl
popf
les
out
sub
lods
mov
int
aas
in
inc
jb
mov
std
and
dec
push
cmp
xchg
sub
jg
loope
rcrl
cmpsb
cmpsl
xor
add
add
add
add
add
add
call
mov
jbe
imul
and
and
mov
es
sub
add
add
add
add
add
add
add
pop
int3
out
hlt
pop
dec
out
cmpxchg
jle
int
sub
mov
mov
xor
jnp
xchg
and
push
pop
int
lret
and
sahf
cmp
sbb
push
push
in
movsl
add
enter
ret
in
pop
out
sub
int3
add
add
add
add
add
pop
cmp
fisttpll
mov
das
mov
rcll
push
push
leave
fs
fldt
mov
sarb
clc
pop
cltd
popf
xchg
pop
push
mov
xchg
sbb
push
lods
dec
out
xchg
out
push
jne
mov
sbb
mov
inc
add
add
aas
pop
leave
pop
jns
adc
inc
jnp
or
repz
and
int
scas
mov
dec
aas
repnz
scas
mov
xchg
or
mov
int3
push
sbb
repnz
cs
dec
jae
gs
xchg
ss
movsb
mov
pop
lods
fnsave
sbb
in
or
pop
pop
jnp
lods
jne
cmp
popf
cli
outsb
cmc
sbb
pop
std
outsb
cmp
enter
nop
add
adc
stos
dec
out
fidivl
jle
int3
ret
sub
inc
pushl
or
js
cs
popf
cmp
mov
adc
lret
out
mov
push
in
orl
daa
sbb
mov
inc
mov
jg
int
xor
lock
aam
andb
leave
pop
in
push
pop
xor
int3
add
add
lods
call
mov
test
push
mov
in
xchg
dec
mov
mov
sbb
pushf
js
push
sub
inc
shrb
enter
out
int3
xor
adc
jmp
inc
or
xchg
dec
outsb
mov
rclb
insb
scas
sti
xlat
lret
enter
inc
jle
or
xchg
rcr
test
mov
out
bound
sub
and
and
and
sub
out
test
out
je
mov
outsb
adc
addr16
mov
fdivrl
mov
mov
fcoml
shll
in
cmp
or
jns
sbb
jno
jns
repz
push
jecxz
test
xor
pop
jge
jbe
aam
sbb
das
sub
mov
and
and
and
and
and
and
lcall
push
fiaddl
mov
fsts
popa
pop
sub
jmp
sub
jl
xchg
push
or
iret
inc
outsb
gs
sbb
imul
and
adc
sbb
dec
lret
pop
add
faddl
sbb
inc
push
iret
add
mov
lods
fidivrl
mov
mov
pop
xchg
pop
push
aaa
pop
jo
xor
pushf
pop
pushf
daa
inc
clc
gs
repnz
aam
into
mov
in
inc
cltd
push
inc
xchg
dec
cmp
or
pushf
stos
mov
sub
stos
lods
mov
or
repnz
inc
add
adc
int
nop
add
add
fnstcw
pushf
push
pop
cltd
push
dec
std
lods
mov
scas
mov
test
stos
popf
jmp
stc
mov
mov
fcmovne
push
mov
mov
aaa
je,pt
and
aas
lock
inc
andb
pushf
xor
mov
adc
adc
icebp
jmp
nop
add
mov
push
adc
int3
add
add
add
add
add
jb
aad
fisubrl
mov
xchg
dec
call
test
inc
jge
mov
xor
fmull
xor
jle
push
sub
es
push
stos
out
iret
dec
cmpsl
pop
xchg
xchg
out
lock
xchg
xlat
into
pop
xlat
jle
add
add
add
add
add
add
mov
int3
cwtl
out
cmpsb
xchg
repz
xlat
int3
cs
fbld
inc
xchg
insl
adc
mov
cmp
fnstsw
jecxz
jle
mov
and
and
and
test
incl
jmp
jmp
and
cmp
jl
jae
sbb
and
pusha
sub
mov
mov
scas
mov
dec
mov
jae
mov
adc
push
dec
ja
mov
add
add
add
add
adc
pop
adc
sub
inc
ret
mov
out
adc
inc
lar
sbb
stc
adc
add
sub
sub
lret
cmpsb
inc
mov
nop
add
imul
movsb
lret
xchg
sbb
sbb
inc
fcmovu
sub
cmp
or
es
jge
inc
stc
adc
fcomi
test
sbb
sahf
mov
mov
rolw
out
inc
mov
push
shll
addr16
push
loop
orl
pop
fmull
inc
sbbb
repz
test
outsb
jmp
push
popf
out
inc
fcomps
lret
push
adc
icebp
add
pop
add
add
add
add
add
add
add
jbe
mov
testl
jecxz
pop
nop
pop
push
adc
test
loope
lcall
leave
call
add
scas
mov
in
xchg
loope
xchg
jle
xchg
push
xchg
hlt
sahf
popf
and
and
and
and
and
and
and
nop
add
mov
repz
mov
inc
rorb
and
and
and
and
and
and
sub
cltd
popa
add
mov
xchg
pop
add
stc
add
daa
mov
gs
mov
js
popf
xor
subl
dec
pop
incb
cmc
pop
fdivrs
sub
out
xchg
add
loope
incl
incl
incl
sahf
or
pop
fists
lret
xor
aas
jns
leave
out
sahf
add
fcmovnb
inc
push
or
lret
lret
cmp
inc
pop
xchg
mov
sub
fistl
cld
test
xchg
fsubs
cmp
sbb
into
push
pop
pop
mov
cmp
lret
filds
scas
inc
sub
loop
xlat
jge
pop
outsl
mov
incl
lea
push
xchg
ljmp
pop
scas
les
popl
cld
pushf
xor
jmp
and
das
loope
dec
pop
iret
je
mov
jo
inc
and
sbb
xor
imul
fsubrs
jecxz
clc
sbb
mov
or
add
add
lock
sbb
aas
lret
mov
das
push
aam
xchg
xchg
mov
loop
pop
test
sub
aad
fsubl
xlat
push
lds
std
jae
inc
aaa
and
icebp
dec
loop
dec
dec
inc
lock
push
lcall
mov
and
push
imul
ficompl
pop
loope
test
cwtl
aaa
xchg
dec
and
xchg
jo
sbb
mov
cmp
mov
iret
fsubrs
pop
int3
sbb
aad
popa
ret
cwtl
cmp
jbe
sub
aad
aad
outsl
es
vmovlpd
xor
sub
lds
bound
dec
cmc
sub
cwtl
jo
insb
xchg
out
add
add
add
add
add
add
jle
lods
add
cmpsl
xchg
int3
add
add
add
add
add
add
xor
ds
add
or
movsb
outsl
push
xlat
cmc
inc
mov
and
cmp
inc
ds
addr16
xchg
gs
int
push
mov
pop
jno
add
adc
fcompl
pop
jp
les
cmp
sub
mov
inc
adc
insb
dec
sahf
insl
sub
or
inc
add
jno
std
popf
push
lea
push
cmp
jne
adc
scas
inc
std
inc
push
scas
or
jg
ja
sub
cmc
lds
push
stos
add
add
add
add
add
add
add
loopne
cmc
lcall
mov
push
stc
add
lods
sub
sub
aas
jecxz
inc
rolb
outsb
pop
test
jnp
jle
sbb
nop
xlat
sub
or
cmp
ret
sbb
mov
lcall
push
xchg
loop
add
ret
push
cmp
orl
std
add
cwtl
jl,pt
iret
mov
jno
sbb
int
scas
jle
lret
in
in
cmp
sbb
movsb
gs
adc
mov
sub
sbb
dec
fldcw
xlat
rcll
loop
jne
lret
bound
add
add
add
add
add
add
sub
ret
push
out
push
flds
and
and
and
and
and
and
and
adc
fisubs
jle
fsubr
push
leave
jo
pusha
push
add
add
add
add
add
add
mov
adc
test
jmp
jb
push
and
hlt
rorb
ficoml
and
jl
aas
or
inc
sbb
xchg
adc
aam
add
lret
ljmp
sub
mov
cmpb
inc
push
dec
xor
ret
out
aaa
mov
mov
stos
cmp
jmp
or
jp
pusha
add
add
add
das
mov
lea
xchg
or
adc
inc
fsubrl
xchg
xchg
into
or
add
lret
cmp
ss
call
and
jmp
inc
movsl
dec
sarb
sbb
xor
adc
adc
das
cmp
lods
stc
out
push
fidivs
dec
xchg
add
add
push
jne
stc
leave
mov
lcall
push
loop
popa
mov
fiadds
and
and
mov
test
jle
xchg
jno
inc
ret
xor
xlat
testb
movsb
fsubl
xor
aad
mov
or
js
add
stos
dec
ffree
cmc
cs
sahf
shrb
sbb
movsl
outsb
mov
xchg
inc
add
les
ss
aas
dec
inc
dec
outsl
ror
sub
xchg
cwtl
push
fwait
ljmp
ds
ljmp
cltd
dec
les
mov
jg
clc
lds
repnz
js
out
inc
shlb
jg
int
inc
mov
out
and
incb
and
ret
sbb
nop
outsb
mov
lret
pop
jbe
adc
popa
shll
outsl
jp
mov
xchg
cwtl
lahf
jmp
mov
cmp
and
add
movsb
push
lock
dec
push
ss
adcb
lods
pusha
add
add
add
add
add
add
add
in
aad
gs
scas
jnp
jmp
jne
push
adc
dec
push
mov
pop
inc
mov
cwtl
xor
lcall
sub
in
mov
aam
xor
sub
sbb
cmp
push
mov
xchg
lea
lahf
mov
jg
jnp
xchg
test
int3
add
scas
adc
and
mov
fs
iret
mov
mov
and
loopne
push
mov
lret
flds
fsubrs
cmp
pop
sub
sbb
cmp
in
adc
nop
sub
cmp
data16
outsb
jb
loop
jecxz
fs
lods
icebp
nop
lds
and
and
scas
inc
je
test
cmc
sahf
rorl
lcall
lcall
jecxz
xor
jmp
xlat
mov
mov
dec
pop
cmp
xor
out
popf
mov
sub
addr16
out
aad
jno
mov
les
loope
ds
push
add
xlat
mov
movsb
mov
or
mov
enter
cmp
test
adc
stos
filds
mov
mov
inc
int3
call
movsl
xchg
mov
cmpsl
stos
fcompl
xchg
push
cli
dec
push
adc
add
add
add
add
add
out
inc
mov
and
stc
imul
or
cwtl
loopne
mov
mov
mov
iret
sbb
push
push
pop
push
or
mov
mul
sahf
scas
rcrb
ret
mov
push
add
sub
mov
lea
cmp
rorb
inc
cmc
stc
clc
jnp
clc
leave
aas
test
xchg
jo
pop
fnstcw
repz
sbb
add
add
add
mov
inc
orb
add
push
add
test
idivb
or
xchg
lret
pop
cmc
push
fbld
popa
aam
lret
cmpsb
pop
lods
dec
enter
sub
sbb
sub
js
sar
cmp
jno
std
jbe
pop
dec
add
dec
add
inc
cmp
bound
ljmp
aaa
ljmp
out
sbb
ss
aas
icebp
insl
sub
loope
into
into
lods
mov
jo
dec
push
icebp
dec
jno
insb
testb
inc
sbb
outsb
cmpsb
mov
int3
add
add
add
add
add
push
sbb
or
popa
and
cmp
adc
mov
or
daa
xorl
pop
push
loopne
mov
adc
xor
xor
adc
lods
cmp
xor
jp
call
in
sub
sub
rclb
lea
mov
adc
cmc
pop
pop
sbb
xor
pop
in
sbb
int3
add
scas
scas
adc
test
cmpsl
pop
mov
lods
mov
push
xor
jmp
push
xchg
mov
xchg
mov
sub
movsw
sbb
mov
test
lahf
mov
adc
sahf
in
xchg
shrb
and
repz
fisttpl
push
nop
add
in
pop
mov
out
sarl
mov
adc
jb
fcmove
mov
sub
in
popa
repz
jb
imul
push
lret
test
mov
mov
and
cmp
mov
filds
inc
icebp
push
test
mov
aas
inc
popf
pusha
dec
cmpb
jge
jmp
nop
jns
push
cmpsb
mov
jns
imul
or
push
jbe
mov
imul
sub
add
add
add
add
add
in
mov
push
sbb
push
pop
in
inc
or
daa
sub
ror
imul
int3
add
stc
out
addl
xor
or
sub
and
lods
inc
mov
dec
cmp
push
nop
pop
and
test
adc
inc
lahf
mov
push
pop
pop
mov
sbb
mov
add
pushf
mov
rclb
and
jecxz
cmp
sub
xor
scas
repnz
sti
sbb
pop
mov
add
and
and
and
and
lret
inc
mov
mov
cmp
push
ds
xlat
ljmp
jb
push
push
fcmove
pop
push
sub
mov
mov
push
fisttpl
pusha
cwtl
jp
imul
push
jb
xor
scas
push
std
cmp
je
inc
nop
sub
pusha
pop
cmp
ljmp
incl
incl
incl
incl
incl
incl
push
daa
jo
xor
test
cmp
dec
and
adcb
andl
xchg
mov
dec
and
stos
jnp
mov
test
adc
rcrl
shrb
shlb
push
cmpsb
in
mov
js
loopne
fisubrl
incl
incl
incl
incl
incl
incl
test
add
scas
adc
xor
mov
xor
jo
test
mov
mov
xchg
fildl
int3
add
add
jnp
imul
addr16
adc
ret
jns
jecxz
xor
mov
cmp
loop
test
lods
cs
dec
out
into
inc
jg
gs
add
add
pop
push
dec
out
inc
out
aas
adc
ret
rep
adc
jb
ds
xlat
shll
jp
lods
push
sub
jnp
pop
stos
mov
std
loope
addb
lahf
sub
nopl
iret
cmp
pop
es
fcomps
lods
js
imul
enter
mov
shll
push
hlt
inc
xor
jnp
stos
cmc
out
xchg
push
nop
pop
mov
cld
push
sbbl
rclb
fwait
cmp
pushf
or
push
mov
sbbl
add
add
das
push
inc
mov
lds
shr
mov
jl
mov
cwtl
mov
ja
adc
dec
andl
test
dec
inc
pushf
adc
and
out
jbe
fstl
lret
data16
imul
movsb
xchg
pop
jb
addr16
dec
jne
push
cmp
aam
popa
mov
jge
aam
xchg
mulb
rcrl
add
movsl
lret
fnsave
cwtl
iret
cmc
imul
add
add
xor
sarl
rcr
mov
add
out
push
leave
imul
adc
loope
mov
out
mov
pop
es
and
sbb
add
add
popf
gs
mov
add
add
add
sbb
call
sub
stos
jo
insl
inc
mov
lods
loope
loope
jl
subl
rcrb
loop
rcl
mov
inc
mov
xlat
divb
xchg
aas
pushf
jl
sub
shrl
add
add
add
sbbl
cmp
loopne
xchg
rolb
add
mov
mov
or
xchg
mov
int
stc
daa
popa
ja
ss
std
sub
cmp
mov
jge
mov
mov
cli
test
jle
pushf
aas
push
lea
sti
cs
std
stc
add
add
add
adc
scas
int
popf
mov
pop
lea
je
mov
pop
loop
test
fidivrs
xor
gs
popa
sbb
add
pushf
andb
jae
aam
xchg
popf
stc
jnp
lea
inc
jp
dec
scas
cmp
add
jns
push
pop
and
mov
jne
out
int3
add
and
and
and
cld
add
jp
xchg
inc
std
or
xchg
dec
xor
out
stc
gs
mov
mov
cmpsl
cmp
jp
sti
stos
add
cmp
loop
aaa
mov
mov
mov
es
shrb
dec
and
pop
push
ret
enter
xchg
sbb
mov
sbb
inc
jno
xor
sbb
ret
shll
out
push
jg
sbb
popa
test
push
mov
and
test
and
jno
scas
sbb
add
mov
lcall
rep
notl
addr16
lret
mov
std
sbb
pop
inc
int3
mov
and
dec
aaa
mov
xor
pop
loop
mov
outsl
push
dec
inc
jg
into
push
fbstp
push
daa
dec
idivb
mov
lret
inc
outsb
cmp
inc
ret
std
mov
movsl
xchg
sub
incl
incl
incl
incl
incl
incl
jmp
das
lock
push
push
mov
pop
mov
and
mov
xchg
mov
xchg
xor
repz
adc
imul
jo
adc
sub
cmp
idivb
xchg
xchg
mov
mov
pusha
outsl
fildll
idivb
mov
icebp
fists
dec
dec
addl
int3
sbb
outsl
mov
add
fsubs
mov
push
adc
incl
incl
incl
incl
incl
xchg
xchg
xor
mov
nop
sarl
jae
cltd
inc
hlt
jno
mov
stc
stc
int3
fucomi
and
fnstsw
jbe
mov
arpl
pop
jl
std
testb
inc
xchg
inc
xchg
cmpsb
out
pop
xor
jo
sti
test
mov
dec
pop
scas
mov
aad
sub
xor
test
gs
xor
test
fs
inc
mov
test
mov
sbb
mov
pop
add
dec
add
add
add
cmpsb
dec
add
cmp
mov
int3
fsubl
jl
xchg
jae
stc
pop
insb
mov
inc
sbb
bswap
hlt
xor
clc
je
push
out
out
shr
movsb
dec
leave
sbb
and
and
sbbl
and
cld
dec
inc
mov
pop
rol
sbb
or
fidivl
ja
scas
inc
push
and
jecxz
sbb
outsl
int3
ja
cmc
daa
cwtl
lods
and
jg
push
out
adc
sahf
ds
mov
push
add
add
add
add
xor
jbe
pop
jno
pop
rcl
in
cmc
fnstsw
mov
mov
jecxz
jecxz
jmp
xchg
push
jne
jnp
cmpsb
mov
fistps
je
or
std
mov
outsl
std
mov
and
add
pop
data16
rcrl
or
ss
cmp
das
arpl
roll
jle
cmpsl
mov
jnp
hlt
sbb
jmp
paddb
into
dec
stc
inc
sub
shl
xor
mov
pop
lds
pop
nop
hlt
inc
in
push
add
add
add
add
add
mov
jno
cmp
jle
sub
outsl
in
push
mov
imul
or
dec
jno
mov
out
adcl
cmp
dec
mov
es
push
in
mov
xchg
outsb
pop
dec
xchg
sbb
add
clc
jl
inc
pop
jle
addr16
rorb
jge
es
gs
stos
inc
and
and
pusha
in
movsl
mov
loope
and
xchg
addr16
jmp
popf
jo
jmp
int3
add
add
add
add
out
repnz
arpl
imul
scas
clc
pop
sub
sbb
repnz
pop
pop
daa
scas
movb
mov
or
insb
das
insl
xchg
xor
xchg
adc
nop
sti
popa
mov
clc
dec
lret
mov
shll
cs
ret
mov
jbe
sub
adc
push
dec
ja
pop
adc
cmp
add
add
add
and
je
ss
stos
test
and
insb
mov
lcall
xchg
xchg
jge
and
mov
cwtl
je
rclb
std
incb
js
inc
mov
mov
or
jno
push
test
cmp
mov
pop
adc
xor
inc
jb
shll
insl
cmpb
inc
int3
mov
mov
sbb
xor
cli
rorb
cmc
xor
xor
shll
add
ret
aad
daa
dec
lock
add
arpl
mov
sub
jp
std
pusha
imul
gs
inc
test
movsl
add
pop
neg
shlb
mov
jle
roll
sbb
inc
jmp
dec
and
inc
bswap
stos
rclb
sbb
sub
cli
pop
lret
leave
cmpl
sub
xchg
xor
ficoml
int
push
inc
add
stos
shrb
cmp
mov
popf
xchg
aaa
xchg
mul
mov
add
inc
and
jae
fidivrl
inc
jge
mov
sti
icebp
xchg
mov
adc
aaa
js
jmp
add
add
xchg
test
sub
out
int3
pop
mov
mov
or
dec
imul
jnp
cmpsl
mov
ljmp
add
add
add
add
add
or
stos
adc
test
dec
push
xor
cltd
mov
enter
mov
mov
gs
jnp
out
dec
inc
mov
add
mov
dec
jno
push
xor
push
adc
repz
cmp
cmc
les
out
iret
or
jp
push
push
jo
add
add
add
add
jno
jbe
leave
push
xor
loop
sbb
std
inc
pop
test
movsl
and
or
popf
xchg
cld
ljmp
aam
or
mov
pop
jp
sub
xorl
or
add
add
call
dec
insl
sub
inc
mov
out
les
movsb
sbb
scas
mov
loopne
pop
sub
add
add
add
add
dec
jge
loope
push
pop
aam
lret
adc
pop
sub
scas
cmp
stos
movsl
add
push
jne
mov
add
or
loope
inc
outsb
add
cmp
cmp
mov
pop
push
out
mov
dec
xchg
lock
in
mov
or
push
xchg
xor
popf
dec
sbb
loopne
es
and
stos
jno
neg
rclb
mov
aas
cmp
cmp
jb
test
pushf
or
addr16
sub
sbb
sub
stc
push
adc
and
fildl
push
dec
out
jb
and
add
push
scas
and
cmpsb
adc
cmp
add
push
inc
mov
dec
cmp
in
add
sub
mov
lods
hlt
lahf
cli
or
sub
sbb
sbb
ret
dec
loop
or
mov
push
mov
adc
and
call
int
mov
mov
add
popf
adc
and
mov
stos
addb
add
scas
pop
sbb
mov
out
mov
cli
hlt
inc
shll
lods
into
mov
nop
xchg
pop
xor
and
stc
mov
imulb
sti
push
scas
cmp
mov
clc
jo
cmp
aaa
adc
out
sbb
lret
jb
jb
popf
mov
sbb
adc
fistps
or
push
pusha
jg
fwait
mov
insl
adc
loopne
xor
nop
int3
cwtl
imul
ljmp
jmp
fdivp
and
mov
aam
pusha
push
loope
xchg
and
test
aas
jo
inc
pop
xor
pop
out
scas
mov
out
dec
mov
out
gs
mov
add
add
add
add
add
add
add
ficompl
dec
push
mov
testl
div
jne
pop
lea
adc
mov
std
mov
mov
lods
jp
out
fwait
sub
push
inc
pop
nop
add
add
xor
rol
das
pop
mov
mov
xor
pop
divl
xchg
outsl
push
xchg
and
and
and
and
and
and
and
mov
shlb
mov
mov
mov
xchg
out
vucomiss
lea
cltd
and
ror
inc
jmp
sub
clc
push
out
jge
xorb
fistps
cwtl
dec
add
cs
jmp
iret
add
add
pop
rolb
push
stos
dec
pop
loopne
cmp
jmp
imul
dec
sti
dec
test
and
fimuls
inc
stos
xchg
mov
int3
jns
rcll
mov
jle
popa
fistpl
orl
sbb
adc
popa
loopne
jb
ljmp
push
enter
or
aaa
and
out
adc
lret
lods
inc
cli
pop
call
xlat
repz
dec
sbb
ljmp
and
or
scas
iret
xchg
sub
xor
adc
add
mov
popa
popf
and
sbb
push
popf
sbb
stc
mov
fldt
and
les
sbb
jb
and
mov
jo
lds
addr16
add
test
mov
out
jle
mov
xchg
mov
add
add
add
add
add
jne
xchg
sbbb
mov
xor
nop
enter
add
add
add
adc
fisubs
scas
jno
jmp
loop
pop
xlat
mov
popf
dec
jp
cltd
xor
inc
lahf
aam
cmpb
lods
fwait
pop
inc
mov
or
jmp
cmc
mov
sbb
mov
lahf
stc
insl
leave
or
shlb
out
addl
and
and
and
and
and
pop
mov
xchg
pop
cmpl
mov
cld
fstpt
sbb
aaa
push
mov
pop
mov
pop
xchg
out
insl
rolb
and
loop
push
push
adc
rcr
and
xor
scas
sti
fdivl
jne
lods
sbb
outsl
mov
dec
or
in
inc
in
push
pop
xor
adcl
and
call
dec
push
adc
push
sti
mov
rorl
or
dec
xor
cwtl
mov
fldenv
stos
lods
or
icebp
sbb
sub
cmp
adc
and
and
and
xor
jbe
in
fwait
push
test
push
mov
inc
stos
in
aad
ljmp
imul
push
popf
push
arpl
adc
stos
divl
add
arpl
sbb
push
push
outsb
jmp
jmp
jo
fs
jae
loope
rcll
nop
add
adc
mov
mulb
xor
xchg
or
add
popa
fsubs
ret
in
xchg
lea
mov
lods
inc
push
dec
push
jnp
insl
das
ljmp
cli
pop
movsl
les
jmp
scas
pop
jle
push
popf
addr16
repz
add
pop
cmc
cli
jns
aad
shll
push
or
add
cmp
lret
fwait
insl
mov
pop
outsl
dec
mov
ja
data16
mov
dec
testl
cltd
rcr
std
es
mov
in
cmp
imul
repz
inc
jne
cli
movsb
or
xor
daa
pusha
icebp
xchg
add
add
add
xchg
aaa
xchg
sti
ret
fwait
push
rcr
add
adc
inc
shlb
lock
jg
add
sarl
add
add
add
add
add
add
add
jg
push
dec
pop
dec
add
lret
mov
rorl
and
lods
xchg
xor
mov
fwait
call
mov
rcr
lcall
subl
test
jmp
call
lahf
aas
mov
rcr
inc
xchg
int3
xor
cmpsl
add
cmp
aad
mov
ja
and
mov
das
outsl
movlps
out
cmp
in
add
jecxz
mov
stos
test
pop
pop
aaa
adc
popf
mov
lret
fdivs
mov
adc
pop
and
mov
inc
sbb
mov
and
cs
imul
xlat
mov
jmp
sub
jle
fadds
push
dec
jb
push
cmp
call
call
or
int3
add
bound
adc
adc
js
sbb
cmpsb
jge
sbb
jecxz
mov
mov
arpl
or
and
and
fsubrs
scas
aad
pop
dec
loop
jns
repnz
dec
ljmp
cmp
call
scas
icebp
xchg
xor
imul
mov
or
mov
cs
xor
and
sbb
xor
or
cmp
lods
inc
mov
outsb
sub
dec
pop
jbe
loop
add
clc
sbb
insb
jb
into
enter
ds
adc
add
add
add
add
add
add
add
aaa
out
imul
mov
lock
lods
in
out
jo
repz
cld
push
xor
push
pop
adc
mov
shll
shrl
cmpsb
out
push
mov
fdivs
fcmovnbe
mov
push
mov
xchg
sahf
stos
sub
adc
shll
mov
jl
push
icebp
call
fwait
jg
pop
sbb
mov
cmp
iret
mov
sbbl
incl
incl
incl
incl
scas
xor
xchg
dec
jecxz
lahf
imul
mov
cmpsb
xor
dec
or
push
sbb
mov
sahf
sbb
dec
ljmp
xchg
bound
mov
add
pop
adc
push
xchg
leave
ds
fwait
cmp
les
sti
pop
jns
adc
lcall
mov
hlt
fucom
inc
sbbl
add
add
add
add
add
add
mov
cmp
rclb
hlt
ja
in
fbld
aad
testb
mov
in
nop
dec
dec
rclb
dec
int
lcall
lret
rolb
or
cmp
daa
push
xchg
adc
outsl
push
mov
test
inc
bound
int
bound
fwait
mov
js
adc
add
add
add
push
xor
rsm
jp
nop
jmp
push
or
xorb
add
test
nop
stc
outsl
mov
jge
dec
mov
inc
pop
out
push
pushf
sbb
and
nop
xchg
insl
mov
aas
jmp
mov
mov
ret
add
cmc
or
repz
in
jl,pn
xor
mov
mov
jl
out
cld
add
arpl
shrl
inc
mov
repnz
ds
mov
pop
push
sbb
ljmp
fstps
mov
addr16
mov
shl
aas
mov
iret
test
popf
mov
mov
xor
scas
jge
test
and
and
and
and
aam
movsl
movsb
lds
lret
adc
and
popf
adc
push
fadd
in
push
push
xor
aam
leave
jmp
jmp
add
add
add
add
xor
out
pushl
in
pop
push
ja
xchg
mov
mov
xchg
add
cmp
and
push
jecxz
lcall
jae
sub
and
pop
cld
test
adc
in
mov
sub
test
jo
loope
dec
adc
jnp
fwait
sub
int
pop
lret
lahf
ror
ss
jbe
mov
iret
mov
dec
sub
inc
popf
in
mov
and
aam
push
pop
repz
outsb
push
movsb
insb
mov
adc
add
add
add
decb
sub
andb
movsb
fisubs
cwtl
pop
mull
cs
cwtl
pop
or
and
mov
pop
mov
leave
mov
mov
pop
jp
or
jne
mov
movsb
push
mov
jb
mov
loope
loope
shl
push
fmul
mov
imul
test
hlt
out
das
cmp
data16
scas
les
lahf
xor
or
jb
lahf
arpl
xchg
mov
dec
aam
pop
fbld
mov
faddl
cmpsb
lods
repz
fxch
add
add
or
jmp
xor
fs
mov
or
inc
add
int
sbb
cmpsl
flds
push
cwtl
sbb
pop
sahf
mov
dec
decl
or
icebp
and
insl
xor
add
jo
jl
arpl
push
fcompl
dec
ficoms
mov
ret
or
movsb
inc
dec
dec
inc
pop
insb
xor
jl
pop
sbb
movsb
and
sbb
hlt
jns
xchg
inc
mov
jo
fldt
cmp
fbstp
aad
fwait
dec
pop
jmp
pop
jge
out
int
daa
andb
ljmpw
icebp
xor
pop
push
icebp
dec
xchg
sbb
pop
test
fistps
jmp
cmp
lock
test
and
sub
imul
jns
add
add
add
add
add
add
and
cmp
scas
mov
cli
cmpsb
inc
mov
ret
add
jno
jbe
imul
outsb
sbb
lock
andl
dec
repnz
into
sbb
mov
insb
out
ja
mov
fiadds
sub
lods
push
inc
pop
pop
mov
ljmp
notl
mov
adc
cmpsb
mov
orl
cltd
inc
lds
out
cmp
mov
lahf
out
mov
cmp
cmp
fildll
out
add
fdivl
sub
mov
add
cs
xlat
and
and
cmpsb
pop
mov
jae
cmp
dec
movsb
gs
add
add
add
add
add
add
mov
outsb
cmp
mov
lret
sub
sbb
add
inc
push
test
push
mov
add
add
add
add
scas
sub
ret
jno
cli
ljmp
xorb
icebp
out
insl
xor
and
inc
push
jbe
les
push
das
xchg
packuswb
shrl
xchg
out
out
insw
cmp
xor
test
ss
push
and
ret
sbb
xchg
xchg
in
mov
or
jmp
and
and
and
and
and
and
out
inc
mov
ret
aad
in
add
addr16
sub
adc
xchg
push
jbe
fadds
out
cmp
jnp
outsb
add
fsts
je
dec
add
add
adc
mov
in
insl
loopne
inc
xchg
pop
roll
ljmp
out
mov
fdivp
adc
ja
inc
in
push
in
fisttps
cmpl
pop
lret
pop
inc
das
dec
lds
fcompl
mov
sbb
cld
inc
cmpsl
imul
pop
push
or
inc
and
mov
push
gs
xor
mov
add
add
jl
or
movsb
lds
jno
int3
add
add
data16
insl
int3
mov
sub
jle
jge
xorl
push
outsl
orl
call
ja
cmpsl
cmp
jnp
cmp
jle
and
adc
stc
call
ds
mov
xchg
je
and
xchg
lcall
aam
mov
insl
pop
push
fs
pop
push
insb
lret
loopne
pop
mov
enter
imul
aas
pop
mov
addb
loop
pop
aad
inc
repnz
hlt
sub
push
shlb
les
jae
outsl
and
jb
loopne
pop
add
divl
sub
add
add
add
add
add
add
jns
cmovl
int
add
out
int3
add
add
add
add
andl
push
lret
sub
or
out
leave
into
adc
or
and
mov
dec
bound
add
lock
cmpsb
std
lahf
mov
sub
lock
out
nop
add
add
add
lock
mov
inc
sbb
xchg
or
cmp
lret
cld
insb
scas
add
stos
les
pop
and
test
dec
iret
and
xchg
aam
and
test
pop
out
xchg
pop
dec
jge
pop
sbb
xor
inc
jg
sbb
adc
and
xchg
xchg
add
cmp
inc
sahf
xorl
inc
push
stc
addps
xchg
cs
shl
mov
pop
rolb
xchg
sbb
test
jle
ret
leave
xor
add
add
add
add
add
aas
das
lock
cli
rcrl
lahf
add
mov
jno
outsl
es
push
mov
pop
xchg
lahf
lret
test
enter
cmovle
insb
cld
add
xchg
pop
outsb
or
shl
add
fsubrl
leave
hlt
jmp
arpl
cltd
lahf
mov
das
std
add
cltd
dec
mov
rclb
in
sub
jns
mov
cmp
sub
outsl
jg
xchg
inc
pop
sbb
add
add
add
add
add
add
xlat
inc
lahf
mov
cmp
icebp
mov
aad
mov
cmp
jl
pop
dec
icebp
jne
sbb
pop
cli
xor
xchg
pop
push
xchg
aam
ret
jl
xchg
xchg
xorl
iret
mov
mov
nop
add
add
add
in
sbb
jns
adc
cli
sbbl
xor
imul
in
mov
pushf
out
inc
mov
mov
cmp
jp
adc
ja
push
and
cmp
or
pop
movl
stos
inc
jg
and
add
sbbl
and
pop
pop
dec
je
pop
pop
lahf
jge
sbb
jnp
mull
sub
nop
push
sbb
enter
push
dec
xchg
jg
jl
mov
or
mov
scas
fisubl
mov
mov
aam
sub
shll
aam
adc
outsb
adc
icebp
aam
in
sbb
mov
add
outsb
xlat
dec
in
daa
push
loope
notb
add
add
repnz
cmp
nop
and
xor
popl
cmp
sbb
mov
cltd
clc
leave
lcall
dec
cmc
jge
stos
sub
or
sarb
cmpsl
std
jle
ds
sbbb
sub
mov
adc
mov
sahf
fstl
loopne
or
and
adc
lods
pushf
sub
popa
push
mov
adc
ftst
cmp
push
add
and
mov
adc
scas
shrl
add
add
add
add
add
add
push
sbb
sub
adc
jo
pushf
pop
enter
int3
jbe
adcl
jl
pop
jnp
es
ljmp
rcrb
arpl
or
sub
add
xor
jns
lds
mov
add
lahf
xchg
adc
fimuls
enter
adc
pop
outsb
mov
and
jno
xor
lods
sbb
add
fiadds
inc
push
movsb
push
xor
mov
call
dec
pop
sbb
daa
out
pop
cmp
xchg
js
faddl
pcmpeqw
or
sbbl
fldt
jl
mov
aam
sub
leave
lcall
jns
adc
ds
mov
add
fbstp
pop
adc
iret
cmp
mov
pop
out
aaa
pop
sarl
bound
or
pusha
push
inc
inc
addr16
jns
aad
lret
xchg
mov
mov
int3
add
add
add
add
add
movsl
cwtl
mov
sbb
int
loope
outsl
popa
in
div
xor
xor
cmc
jo
cmpsb
ret
adc
mov
and
adc
cli
lahf
xchg
add
add
add
add
add
add
add
xor
dec
cmp
sub
loopne
outsl
cltd
in
repz
mov
or
int3
mov
or
mov
xor
mov
mov
in
incl
add
add
call
pop
mov
pop
push
mov
flds
daa
adc
dec
arpl
jmp
fwait
cmpsl
and
into
sarl
shlb
xchg
inc
jns
add
xchg
and
shlb
and
arpl
lods
xchg
jbe
leave
dec
mov
jmp
sub
imul
cld
xchg
jb
add
and
sub
ror
cmp
into
data16
adc
adc
mov
nop
add
add
cmp
pop
repnz
jae
cltd
in
pop
int3
stos
test
loop
cs
insb
test
das
imul
call
cmp
inc
pusha
lods
cwtl
popf
fnstenv
add
add
add
add
add
jle
mov
in
addr16
std
push
push
scas
daa
mov
ja
je
aas
add
fiaddl
loope
test
xor
dec
addb
mov
pop
sub
sbb
leave
xchg
push
repz
xor
outsb
in
bound
inc
lret
daa
cs
push
les
js
sbb
add
inc
lret
jns
lret
push
movsl
in
int3
inc
jo
rcll
mov
ja
callw
leave
mov
jae
mov
and
and
and
and
and
and
inc
cmp
std
out
movsb
je
dec
add
add
add
add
add
add
lods
scas
cmp
sbb
pop
testb
pop
add
call
outsl
outsb
dec
cmp
add
add
add
add
add
add
add
push
ret
push
or
adc
addr16
arpl
mov
subl
mov
mov
mov
adc
xchg
and
stos
mov
clc
or
scas
jmp
dec
stos
pop
pop
jle
push
repnz
pusha
sahf
and
ss
jae
push
lds
adc
sbbb
mov
xor
add
add
add
add
add
xchg
testl
nop
xchg
xlat
or
pop
jbe
sbb
mov
jnp
add
fdivl
mov
pushf
push
dec
mov
fdivs
xchg
in
cltd
test
xor
jns
ja
inc
jae
movsl
jle
dec
xor
dec
or
cmpsb
call
es
shll
repnz
cli
inc
jno
mov
lret
xor
popa
aam
sti
scas
sbb
enter
mov
jge
lret
sbb
sbb
or
sar
in
push
push
pop
jbe
mov
and
push
mov
iret
in
push
xchg
cmc
std
stos
push
mov
fsubr
mov
out
pop
adc
add
daa
loopne
inc
lock
and
int3
add
add
sub
shl
sahf
sub
mov
jae
xor
or
and
iret
fcmovb
and
btr
or
cmp
rcrl
xchg
into
ss
repz
sub
or
addr16
adc
sub
mov
push
and
pushf
pop
sahf
out
repnz
xchg
mov
sub
test
xchg
jmp
popf
ss
movsb
jb
jmp
jge
sbb
ror
pop
decl
filds
mov
pop
push
cmp
adc
popa
push
movb
je
pop
mov
out
std
je
int3
add
add
add
sbb
dec
sub
lock
jl
ds
inc
divl
and
inc
cmp
xor
pop
test
vpaddusw
dec
test
movsl
cmp
push
jg
push
jg
add
call
fs
outsl
leave
cltd
stos
aam
add
jle
push
pop
lods
sub
and
jge
nop
and
es
je
and
and
and
and
and
and
mov
mov
mov
in
std
sbb
int
daa
jnp
mov
mov
sahf
out
jle
xor
lahf
fs
push
jl
cs
jo
ds
fwait
addr16
pop
jb
loop
sub
inc
xchg
xor
inc
fwait
stos
mov
gs
dec
xchg
mov
cli
ret
cmpsl
add
adc
xor
inc
push
xor
jne
orb
sbb
xchg
xor
sahf
jae
sub
incl
incl
incl
incl
addr16
das
mov
in
push
or
out
iret
add
add
add
add
add
add
pop
jns
lahf
mov
push
push
test
pop
push
addr16
ljmp
test
lret
sub
movsb
inc
xchg
add
lods
jb
pusha
je
jp
xchg
mov
pop
push
pop
jb
flds
jae
push
or
mov
mov
lods
aaa
mov
add
fstpl
add
and
and
and
and
and
lods
lock
jno
mov
mov
shll
jecxz
mov
push
movsl
cmc
aaa
add
sbb
jmp
mov
jmp
push
add
add
add
add
add
add
adc
fwait
or
ljmp
mov
flds
testb
mov
push
pop
xchg
pop
ljmp
outsl
arpl
shrl
insl
leave
xchg
movsb
adcl
mov
mov
imul
push
mov
es
pop
icebp
loop
inc
add
add
add
add
add
add
je
lcall
dec
outsb
popa
lret
imulb
inc
pop
ficompl
mov
mov
jg
or
int
testb
add
int3
add
add
add
add
setns
mov
push
iret
jmp
mov
adc
sub
and
movzwl
cmp
nop
fidivl
dec
dec
in
icebp
dec
andl
outsb
test
iret
stc
popa
mov
sub
movl
jle
rcl
pop
xor
add
outsb
push
mov
sbb
loopne
inc
mov
sbb
add
outsb
push
dec
jg
mov
adc
sbb
add
out
jg
mov
mov
adc
cmpsb
insb
orl
icebp
insl
aam
jmp
add
add
add
add
or
test
std
and
data16
mov
mov
in
mov
fwait
mov
jl
mov
inc
ret
je
fisttps
adc
fwait
sahf
arpl
ja
das
add
loop
fwait
push
push
js
mov
push
sbb
jae
push
sub
movsl
imul
mov
lods
mov
and
rcrb
mov
pop
push
pop
loopne
mov
add
jns
cmp
push
and
vmovaps
dec
mov
add
add
add
add
add
add
add
and
mov
jge
fmul
movsb
cmp
and
pop
mov
sbb
stc
mov
call
and
add
jnp
sub
out
pop
xchg
adc
rcrb
pop
and
scas
mov
test
repnz
ficoms
cld
push
push
in
sahf
psraw
dec
jne
fidivs
mov
shrb
ljmp
repz
hlt
mov
pop
cmp
insl
stc
pop
add
xlat
adc
repz
push
test
enter
jbe
push
mov
mov
inc
jmp
jp
and
push
xor
inc
mov
shlb
in
cmc
push
push
ss
fldl
int3
add
mov
aaa
sahf
dec
xor
jg
scas
inc
ficomps
mov
in
mov
out
inc
unpckhps
ljmp
mov
inc
mov
push
sbb
add
mov
mov
cmp
sub
pop
dec
cli
dec
adc
aad
test
mov
adc
into
and
jp
lret
sahf
dec
mov
nop
push
shll
daa
sub
inc
jae
ds
cmp
mov
mov
sub
adc
pop
pushf
ss
out
and
mov
cli
xor
shlb
or
ret
shrb
and
mov
mov
jo
stc
into
pop
jbe
pushf
add
add
add
add
add
add
add
push
jmp
popa
out
out
cwtl
pop
pop
ljmp
jg
xor
sbb
test
or
std
push
mov
out
mov
pop
test
jecxz
sub
daa
les
mov
mov
gs
repnz
mov
dec
sbb
sbbb
mov
adc
out
sarl
ret
ret
xchg
scas
jbe
scas
xchg
dec
pop
xchg
mov
xor
xchg
es
stos
rorl
xchg
jl
shl
pop
xor
xor
adc
imul
into
fistps
dec
popf
fmull
test
add
add
add
add
add
add
test
jmp
fidivs
decl
mov
xchg
jbe
iret
dec
jno
inc
rclb
dec
in
data16
ljmp
add
add
add
add
add
sbb
pop
popa
xchg
push
cmpsb
jmp
outsl
push
sub
push
mov
fs
pop
sub
inc
xchg
jne
bnd
pop
fs
orb
out
or
push
fdivs
mov
sbb
and
and
and
and
and
and
fcmovb
pop
jnp
shr
movsl
ret
cmc
xchg
pop
xor
mov
loope
notl
stos
fidivs
fiaddl
das
test
daa
sub
xchg
test
xchg
sub
lea
xor
xor
mov
dec
push
repz
push
jb
int
xlat
fnsave
cmp
sbb
pushf
jl
xlat
push
jo
test
lcall
mov
and
je
hlt
cmp
cmp
mov
aaa
dec
in
lock
add
xor
ret
int3
jl
push
cmp
push
cs
inc
jb
jg
jno
add
and
add
jmp
jns
or
insb
fisttpll
or
popl
push
adc
lods
adc
cmp
jae
xchg
cld
jbe
dec
sbbb
add
add
lods
jmp
sub
jmp
sub
mov
ret
sub
adc
loopne
mov
jbe
or
cmp
pop
out
jo
push
outsb
mulb
pop
xchg
jae
sub
pop
lahf
pop
lock
lods
mov
int3
cmpsl
sub
outsl
cmp
lcall
sub
lds
jl
sub
cmpsb
mov
lds
enter
cmp
js
loopne
fidivs
inc
jp
fs
shrl
pop
test
xchg
mov
arpl
mov
movsl
lcall
add
add
xor
shrl
push
dec
addr16
jecxz
fdiv
cmpsl
popf
xlat
popa
xchg
stc
clc
xor
cmpsl
int3
cs
inc
xor
lods
push
adc
inc
fsubs
testb
jecxz
jp
daa
mov
pop
insl
xchg
xchg
adc
pushw
sub
sub
hlt
add
gs
xor
fsubrl
fcmovnu
outsl
dec
mov
sahf
push
pop
add
mov
mov
inc
imul
stc
popf
sti
into
out
dec
mov
mov
idivb
mov
mov
mov
stc
insl
ds
inc
fdivrs
add
add
loope
adc
jecxz
and
and
mov
jno
cmp
adc
dec
lcall
fidivrs
icebp
movsb
xchg
jle
fildl
movsl
cmp
loop
aas
mov
mov
pop
fldl
loopne
lea
icebp
dec
cmp
or
xchg
stc
mov
add
add
add
add
add
add
mov
das
or
pop
sbb
roll
mov
and
mov
hlt
addb
lret
cmp
lods
in
push
mov
dec
icebp
lock
mov
or
and
and
and
and
and
ss
and
cmpsl
mov
loopne
ja
fisubl
test
push
cmp
subb
mov
pop
push
jmp
push
xor
sbb
jp
in
test
in
scas
outsl
hlt
andb
sbb
inc
in
cld
lods
mov
jmp
icebp
mov
add
jno
mov
stos
sub
pushf
jle
repnz
es
je
xchg
iret
repz
xchg
ds
and
lock
dec
jb
pop
jae
roll
or
test
orb
push
out
test
push
xchg
hlt
popw
xor
xor
adc
repz
xchg
and
and
and
and
mov
xor
enter
sbb
push
mov
outsl
or
nop
add
add
fnstsw
test
jmp
mov
xor
jns
push
mov
dec
pop
cmpsb
jae
lret
insb
pop
dec
mov
cmp
iret
das
imul
stos
xchg
jg
jns
repz
xor
dec
sti
add
iret
dec
jne
test
shll
out
sub
inc
inc
ss
mov
inc
out
xor
lea
xor
ret
pop
repnz
add
mov
out
dec
ret
dec
cmp
and
sbb
or
mov
jb
add
out
in
aas
ja
aam
loop
adc
pop
mov
or
fwait
into
ret
les
and
xor
std
je
inc
loop
stos
adc
loop
xchg
cmpsl
lahf
mov
int3
push
pop
dec
push
fdivl
mov
push
movsb
xor
daa
aaa
pop
rclb
add
xor
in
pushf
cmp
sti
pushf
sbb
scas
push
mov
shll
mov
movsl
inc
cltd
jo
sub
std
addr16
and
and
mov
lods
cli
jle
sub
pushf
jns
mov
jg
mov
fs
or
xchg
fstps
push
jb
adc
inc
popf
stc
dec
movb
dec
jbe
jp
testl
lods
adc
push
add
nop
mov
sti
loope
jecxz
lret
ljmp
xchg
enter
cmp
rorb
nop
add
or
int3
inc
lea
cmp
incl
hlt
rcrl
mov
sbb
in
dec
into
leave
out
out
mov
xor
mov
cmp
das
inc
lock
xor
or
sub
mov
les
inc
add
mov
push
cmp
cltd
rcll
lret
andl
daa
push
and
les
incl
incl
incl
incl
push
lret
enter
dec
orb
or
xchg
adc
cmc
cltd
fnstcw
fs
outsb
cmp
popa
testb
push
mov
pop
dec
sbb
loopne
ja
pop
add
mov
bound
push
lock
jo
mov
mov
mov
push
pop
in
xchg
pop
cltd
mov
inc
pop
cmp
outsb
push
mov
cmp
xchg
xor
or
cmp
in
dec
or
loop
push
cmp
or
pop
cmpsb
aaa
fdiv
int
cwtl
add
outsl
cmp
fs
cmp
imul
loop
inc
push
cld
push
in
cli
cmp
fisubl
sahf
jge
mov
test
inc
sbb
and
and
and
and
and
test
xchg
adc
bound
mov
and
add
jo
int
fstl
xorps
fisubs
data16
mov
jnp
add
cli
jle
movsb
adc
in
lahf
pop
jle
hlt
fcmovnu
or
dec
add
and
pop
pushl
mov
pop
lahf
xlat
std
mov
sbb
int3
add
add
add
add
add
jo
adc
insb
fists
and
test
cmp
nop
loope
add
fs
hlt
out
mov
lods
push
and
fs
mov
fsubs
dec
and
mov
sbb
int3
mov
int
in
xor
cmp
cmp
pusha
aad
popa
xchg
lahf
jne
test
adc
in
mov
cld
jne
add
add
add
add
add
add
add
inc
push
cmp
dec
pop
mov
pusha
mov
rcrb
arpl
push
ret
jbe
or
dec
mov
jnp
add
add
add
add
xor
cmp
cmpsl
dec
cli
mov
push
mov
inc
mov
pushl
divl
adc
bound
adc
popa
pop
add
fsubrl
pop
inc
cmp
mov
pushf
sub
jnp
xor
pop
lock
lds
add
add
add
add
add
add
ljmp
mov
clc
testl
dec
dec
imul
das
mov
addb
dec
add
lret
aam
out
xchg
pusha
jl
imul
das
in
cli
mov
sbb
dec
cmp
fisttpl
cmp
inc
aas
ret
fdiv
jae
push
inc
std
inc
add
je
stos
xchg
test
mov
cmp
leave
loopne
mov
out
xor
mov
or
pop
outsl
jmp
movsb
mov
sub
pop
cli
fucomp
mov
add
add
add
add
add
add
add
cs
sbb
mov
les
sbb
fs
cltd
repnz
in
inc
imul
add
pop
dec
stc
bound
aad
and
xor
lret
ja
into
not
pop
test
frstor
sub
cs
xor
mov
add
and
or
fstpl
sbb
xlat
sbb
inc
sbb
sbb
leave
movsb
ret
adc
inc
and
scas
idivl
xor
dec
pushl
int3
add
add
add
add
cmp
jmp
in
and
sbb
mov
adc
adcb
lea
cmp
sti
push
xchg
mov
cmp
push
ja
out
mov
xor
adc
jmp
dec
dec
inc
jae
rol
xchg
mov
clc
mov
pop
push
scas
call
cmpsb
jmp
jmp
cmpb
stos
mov
cld
cmp
xor
nop
pusha
das
fisubs
out
insb
mov
jmp
xor
mov
add
add
loope
pop
fisubrs
mov
arpl
nop
fidivrs
inc
or
xchg
push
and
or
push
fcoms
jbe
fwait
xchg
loopne
dec
sahf
aaa
out
mov
jno
push
mov
xchg
movsb
shr
sub
xor
mov
shll
fmuls
std
dec
cltd
mov
mov
add
add
add
in
arpl
and
in
dec
pop
test
sahf
push
adc
add
jle
add
lret
jnp
jecxz
mov
shlb
arpl
mov
add
jae
add
and
jg
mov
xor
adc
lcall
and
movsb
mov
insl
stos
push
push
into
ja
jae
cwtl
jae
jl
outsl
mov
subl
xor
mov
xor
hlt
mov
inc
add
add
add
add
add
add
repnz
mov
mov
nop
mov
cmp
add
fwait
add
shl
ret
add
add
add
add
jl
jp
cwtl
mov
adc
ss
inc
pushf
push
adc
imul
pop
int3
fdivp
test
mov
and
call
push
pop
add
push
ds
jp
jae
cmp
mov
push
cmp
push
and
cmc
int3
icebp
aam
add
and
and
and
and
and
lahf
push
or
fisttpll
pop
or
xor
xor
mov
pextrw
and
jae
mov
jecxz
pop
pop
jne
sub
and
mov
inc
xor
dec
sbb
lret
lret
adc
mov
sbb
mov
xchg
mov
push
xor
push
fsubrp
cwtl
push
mov
add
sbb
jg
inc
aad
cmp
mov
js
fs
loop
xor
cmp
cli
mov
mov
cmp
testb
push
lret
out
incl
incl
incl
incl
incl
incl
push
aaa
xchg
test
or
mov
loopnew
jnp
jecxz
push
inc
sub
lds
or
cmp
aad
imul
jns
in
jmp
in
aad
sub
jns
icebp
cmp
jo
xchg
int3
jno
or
outsl
sub
loopne
mov
pop
or
aaa
add
js
jne
pop
mov
jb
adc
jae
movsb
push
sub
pop
pop
xor
push
jp
add
popf
rclb
mov
push
mov
movsl
cmp
insl
outsb
cmp
pop
xchg
lea
mov
add
mov
mov
xrelease
stc
sub
dec
in
pushf
dec
mov
test
cmp
cs
push
adc
mov
xor
inc
jnp
sub
dec
cmpsl
sub
jne
dec
inc
push
bound
xchg
sub
push
mov
inc
mov
imul
pop
sbb
or
loop
arpl
stc
mov
pushf
pop
scas
mov
push
inc
in
xchg
push
mov
push
stc
push
xor
clc
xchg
pop
and
loope
mov
jnp
mov
das
xor
jo
insl
shll
or
mov
and
and
and
and
and
and
xchg
or
ficoml
negb
aad
sub
mov
movsb
fnstsw
loopne
shrb
ret
in
movsl
aaa
and
push
insl
pop
mov
adcl
out
push
mov
in
scas
mov
js
mov
and
mov
mov
adc
aad
scas
lret
sbb
jns
aaa
and
pusha
insb
pop
dec
lods
adc
push
cmpsb
lret
test
pop
mov
add
add
add
add
add
sub
sbb
loope
push
pop
sub
and
aad
adcl
fwait
pop
sbb
lret
addr16
or
jne
or
iret
lahf
lods
jb
pushf
addr16
int3
add
add
add
add
push
test
inc
or
jge
cmpsl
mov
scas
pop
adc
push
mov
adc
add
stc
repnz
call
aad
dec
mov
je
loope
inc
mov
inc
xchg
int3
push
jl
js
jne
mov
jmp
cmp
cmp
in
xchg
mov
in
dec
sbb
movzwl
dec
fbstp
loop
xchg
loope
idivb
jbe
roll
add
add
mov
pop
jnp
hlt
sbb
mov
jo
ljmp
loopne
pop
ss
adc
push
aad
ss
shrl
ja
inc
xor
scas
imul
sbb
in
test
lcall
negl
sbb
xor
adc
std
or
out
xchg
pop
lret
inc
shll
add
add
aad
add
js
pusha
mov
adc
and
and
and
and
cmp
add
sarb
lahf
ss
lea
xor
jg
push
or
call
jne
push
or
out
cwtl
das
cwtl
inc
cld
loope
mov
cmp
dec
cmp
sub
xor
imul
popa
test
adc
call
mov
aaa
pop
inc
nop/reserved
push
lea
addr16
ds
cli
xchg
jle
mov
ljmp
int3
add
add
add
add
jb
push
and
and
in
iret
or
negb
clc
dec
lods
int3
sub
jno
repz
add
add
add
add
adc
loope
popa
shl
or
stos
push
sub
aam
shlb
jl
dec
add
sti
cmp
std
add
setns
cmp
jae
dec
lods
sarl
data16
add
add
add
add
in
ds
cli
push
sbb
pop
ja
add
int3
sub
in
roll
pop
test
sbb
aas
cmp
dec
jp
mov
adc
enter
incb
aad
mov
notl
mov
dec
fcomip
sub
lock
add
cmc
pop
sub
pop
inc
sub
lods
and
in
xchg
clc
test
sub
call
andnps
cmp
dec
arpl
jecxz
bound
mov
imul
mov
push
push
push
xchg
xlat
adc
and
scas
lds
idivl
cmp
pop
add
add
add
xchg
inc
pop
shll
inc
ret
push
shrl
in
scas
call
icebp
mov
stc
mov
jecxz
lahf
lock
test
pop
mov
jle
adc
hlt
add
mov
loop
nop
sbb
sbb
push
psubusw
test
out
cmp
das
fdivrs
push
lock
jmp
dec
gs
loop
xchg
cs
inc
sahf
push
aam
repnz
lahf
mov
test
out
insb
mov
daa
pop
adc
sbb
loopne
stos
xchg
mov
mov
push
push
pop
xor
mov
orl
test
adc
jl
incl
incl
incl
incl
incl
incl
testb
div
adc
ret
loopne
bound
mov
repnz
lock
mov
jo
cld
mov
test
dec
cmp
bound
incl
incl
incl
incl
incl
incl
jmp
xchg
dec
notl
sub
pop
scas
popa
fsts
sub
cmpsb
fmul
add
inc
adcb
loop
insl
dec
or
inc
jle
sub
xchg
cmp
dec
daa
inc
and
jmp
dec
fwait
iret
mov
sub
add
fs
outsb
sbb
xchg
addb
cwtl
mov
mov
nop
int
in
clc
enter
and
fcmovnu
std
mov
decl
sti
inc
ja
push
dec
push
mov
and
in
into
test
xchg
cmp
cmp
jns
jo
addr16
cld
xor
push
push
sbb
aam
sbb
test
jge
pop
fimull
pop
cld
mov
jp
inc
xchg
imul
add
add
add
add
and
icebp
xor
jl
push
sbb
sub
shrd
inc
stc
nop
add
sbb
mov
mov
xchg
sahf
into
mov
nop
add
add
dec
sub
imul
ret
sbb
mov
out
inc
mov
jb
idivb
jne
and
fnstsw
jne
and
and
and
and
and
push
sbb
arpl
push
jle
cmp
and
xchg
mov
sub
fcomi
rorl
stos
pop
lret
adc
pop
leave
sbb
pop
mov
pop
mov
push
aam
jmp
repnz
in
in
rolb
incl
incl
incl
incl
incl
incl
inc
cmpsl
sub
and
bound
mov
and
mov
stos
popl
stos
icebp
imul
in
xlat
add
ret
outsb
lods
cmpsb
mov
add
movsb
sub
jns
sub
dec
test
sbb
sub
aad
cmpsb
mov
inc
xor
out
lret
repz
or
sbbl
scas
ss
push
dec
fstl
mov
adc
insl
mov
add
ud2
idivb
les
inc
mov
xlat
sbb
jns
dec
cmpsb
mov
pop
add
xchg
rcrb
pop
sahf
pop
out
aaa
add
pusha
aad
pusha
and
push
movsb
jo
sbb
cmp
add
mov
cli
fisttpl
push
hlt
in
in
mov
stos
popa
and
add
add
add
push
arpl
mov
in
lds
std
mov
xchg
mov
cmp
dec
mov
and
cmp
add
idivb
int3
jle
sarl
enter
or
pop
jmp
adc
sbb
fisubrs
cmp
jg
add
xor
sbb
xorb
imul
add
dec
adc
jmp
int3
add
add
add
scas
xor
pop
dec
adc
or
sub
stc
inc
dec
jmp
imul
in
and
and
and
and
rol
mov
inc
roll
ret
jle
inc
aam
scas
into
clc
add
pushf
add
push
scas
mov
push
jp
cld
dec
xor
iret
or
push
fcomip
out
fdivs
rorl
sbb
ret
icebp
in
in
adc
dec
pop
push
in
fsts
push
mov
hlt
popa
gs
mov
add
xor
jp
into
or
daa
and
fiadds
lods
cmp
daa
aas
loop
dec
repnz
pushf
cltd
mov
js
mov
daa
adc
sbb
pushf
inc
xorb
aad
dec
pop
pop
adc
addl
add
add
cli
ret
test
stc
scas
jp
imul
or
jmp
xor
loopne
xor
les
and
inc
xor
mov
and
mov
jl
dec
popl
fnstcw
mov
popa
fwait
lods
mov
nop
mov
aas
imul
aad
movsb
xor
pushf
jne
add
sti
fwait
lds
xor
test
push
cmp
pushf
movsl
mov
repnz
ret
lods
pop
cmpb
into
sarb
fisubrl
sahf
jae
sbb
dec
lret
daa
dec
mov
add
in
pusha
jns
ror
inc
lea
mov
cltd
lret
push
add
add
int
jmp
xor
sub
lret
in
mov
add
pop
fcomps
adc
xchg
shr
push
xchg
mov
mov
pop
fdivrs
stos
hlt
ret
fsts
outsb
inc
stc
add
add
add
add
add
add
add
cmp
ss
hlt
sub
out
dec
in
inc
and
negl
pop
lret
xchg
aaa
rcrl
bound
add
les
push
cmp
lcall
js
push
add
add
mov
mov
fdivrp
sbb
scas
leave
ds
add
mov
dec
ret
popa
dec
sbb
sub
in
sub
cmp
test
add
out
dec
movsb
aaa
and
mov
push
test
adc
push
test
popl
push
lods
insb
jl
jl
pop
cmp
lcall
push
push
push
mov
cmpsb
mov
sbb
inc
xchg
xor
xchg
xchg
sbb
push
sti
stc
enter
fdivrs
leave
jl
cld
test
jmp
in
sbb
ficoms
xorl
les
jmp
xor
add
add
add
xor
fbld
and
mov
jge
out
sbb
insb
jbe
jmp
je
mov
loope
jg
lret
fucomi
mov
adc
adc
pop
dec
mov
imul
adcl
fldt
pop
add
pop
aad
bnd
movsb
notb
xchg
xchg
dec
adc
add
add
add
add
xlat
inc
imul
fwait
mov
out
pop
outsl
inc
shl
aas
push
jbe
in
or
ret
cmp
push
pop
and
test
push
in
jg
out
and
aam
cmp
ret
out
mov
arpl
subb
jns
add
lds
sar
aam
pop
jge
adc
es
iret
pushf
mov
inc
inc
push
jae
sbb
push
mov
mov
in
ds
aaa
pop
cmp
lahf
arpl
subb
je
pop
cmp
dec
xor
sbb
rol
loop
sbb
insb
or
fsubr
jns
iret
push
pop
pop
sti
inc
push
xchg
ja
sbb
and
and
and
and
and
mov
cwtl
and
dec
mov
sub
pop
or
out
inc
xor
stc
and
fiadds
imul
movaps
fcomps
outsl
nop
inc
adcb
and
jle
iret
cltd
xor
fnstsw
test
sub
mov
out
xchg
or
movsb
in
pushf
sub
in
push
mov
movsl
mov
ljmp
mov
rcll
adc
inc
insb
pop
test
xor
jns
jo
jo
imul
mov
loope
dec
in
lahf
movsb
pop
mov
jl
pop
and
jo
add
add
add
add
add
add
xor
mov
in
push
in
fidivl
cld
cmp
sbb
lods
ja
jge
into
xchg
jns
xor
sbb
cmc
jg
aas
lea
ret
ret
xchg
cmp
jp
in
fistps
cli
mov
or
mov
jmp
cmpb
xor
insl
pop
ss
xchg
push
sahf
jo
test
pop
adc
adc
pop
mov
lock
push
xor
std
lret
fadds
int3
add
das
mov
jmp
mov
bound
and
and
and
in
mov
jecxz
sbb
mov
aad
mov
dec
imul
jne
jmp
or
jle
and
fcompl
cmp
sub
scas
cld
adc
popf
out
out
aas
xchg
mov
add
test
jmp
imul
das
or
and
fsubrs
xchg
ffreep
and
mov
aas
sbb
xchg
mov
mov
and
enter
loopne
add
jg
mov
ret
pop
outsl
repnz
std
cmp
or
dec
pop
sldt
arpl
dec
aas
adcb
movl
lea
and
and
jns
gs
fbstp
cmova
shrb
jle
mov
mov
test
push
pushf
pop
jecxz
cmc
jl
cmp
in
push
fwait
mov
add
add
add
add
add
shl
adc
xor
in
les
sub
sahf
rcll
and
popf
sbb
dec
jg
lcall
cli
outsl
xorb
jmp
xchg
sahf
cltd
test
cmp
dec
scas
xlat
add
xlat
sbb
inc
mov
adc
stos
add
xor
add
xchg
mov
push
lock
mov
or
es
fisttpl
pop
inc
lods
mov
mov
icebp
lods
jb
int
test
jbe
addb
mov
sbb
dec
insb
pop
imul
jmp
add
add
add
mov
dec
and
adc
mov
dec
repz
mov
es
js
sbb
gs
aas
cli
mov
mov
push
add
add
add
filds
loop
jle
mov
lds
lret
mov
jmp
addr16
mov
push
and
add
add
add
add
add
add
push
or
xor
stos
cld
repz
cli
outsb
cmp
pop
ret
jge
mov
stc
add
xor
pop
cli
mov
stos
push
mov
fsubl
mov
lret
mov
add
xor
nop
and
imul
mov
cs
mov
data16
mov
les
mov
data16
loope
int3
add
add
mov
sub
xchg
cmpsl
push
add
add
add
popa
rcll
scas
sub
mov
mov
mov
lret
out
and
sub
popf
jmp
loop
xlat
xor
ss
outsb
pop
call
dec
cmpb
enter
mov
or
es
es
adc
mov
xchg
enter
fwait
push
mov
shrb
int
mov
test
xor
cmp
jle
loope
jmp
incl
incl
incl
push
push
push
icebp
pop
sti
insb
mov
js
inc
or
repnz
pop
xchg
out
jb
or
xlat
add
sbb
sub
repnz
je
jmp
in
fcmovb
int3
push
test
std
and
xchg
or
fistl
nop
jne
ret
mov
xor
add
imul
pop
and
push
decl
lods
movsb
mov
ja
push
imul
or
clc
dec
xchg
jg
and
int3
stos
pop
mov
std
jp
lds
mov
adc
das
aam
in
mov
inc
and
into
les
fsubrs
call
xor
dec
and
inc
push
adc
or
adc
mov
lea
push
jmp
sub
xchg
movl
cltd
ljmp
loopne
out
add
add
out
mov
aaa
push
in
sub
stos
iret
popf
and
or
sbb
xchg
jge
icebp
and
jmp
outsl
push
dec
mov
mov
cld
mov
xchg
negl
into
decl
test
dec
inc
fisubrl
scas
insl
xlat
mov
adc
jbe
jne
ljmp
add
inc
and
out
popf
test
ja
mov
lds
inc
add
ljmp
mov
or
sbb
mov
mov
mov
cld
mov
shll
bswap
mov
jb
push
fdivrs
xchg
je
pushf
or
push
bound
add
add
jno
inc
fnstcw
mov
push
lret
pop
jg
or
out
sbbl
inc
push
pop
leave
fyl2x
cwtl
pushf
es
xor
into
js
int3
add
xor
cwtl
adc
lret
xchg
cmp
aam
les
sti
cmp
jne
fnsave
add
mov
dec
int3
sbb
inc
in
rorl
mov
adc
scas
jmp
aas
push
inc
sbb
shll
inc
out
xchg
int3
mov
add
add
add
mov
fdivl
and
add
int3
sub
push
cmpsl
or
push
loope
jbe
in
popf
imul
andl
or
jl
and
movsb
pop
sub
arpl
mov
dec
adc
daa
sbb
push
popa
or
or
out
mov
loop
loop
mov
lea
mov
mov
dec
mov
outsb
cwtl
pop
lahf
bound
test
dec
mov
push
xchg
ret
mov
xchg
mov
add
push
mov
xchg
dec
jb
xchg
cli
jbe
fwait
xchg
xor
leave
cmc
mov
add
add
into
sbb
adc
inc
pop
lret
loopne
ret
sub
pop
ds
cmpsl
dec
cs
out
shll
in
test
pop
repz
or
dec
out
or
and
push
sub
add
mull
xor
sbb
out
push
inc
push
int3
add
add
add
add
add
mov
orl
dec
push
jge
bswap
xor
cmp
cmp
cwtl
or
scas
push
jle,pn
push
adc
clc
pop
repz
call
xchg
movsl
push
js
stc
lret
xchg
filds
ljmp
aam
cli
cmpsb
out
sbb
adc
adc
and
pusha
xchg
int3
push
pop
lods
pop
imul
lcall
sub
mov
mov
repnz
sti
mov
clc
stos
or
xlat
inc
or
jge
movsl
push
and
aas
stos
push
cmp
adc
mov
fidivl
push
sbb
int3
add
add
add
add
add
push
sbb
nop
mov
mov
testl
data16
pop
pop
fidivl
aam
jp
lea
nop
and
mov
lcall
cmp
pop
dec
xor
cld
out
dec
fstp
cld
sbb
jle
aas
cmp
pop
insb
fnstsw
out
mov
les
andl
cli
jnp
stos
cmp
nop
add
add
dec
adc
scas
jae
sti
das
rol
adc
add
fidivrs
or
inc
cmp
or
cmp
insb
pop
mov
push
cmp
test
inc
es
pop
pop
rcrb
fstps
pop
and
and
sub
push
fldl
arpl
cmp
cmp
jl
pusha
sub
add
add
add
add
add
add
add
jle
adc
out
mov
icebp
xor
sbb
icebp
fst
xor
rolb
or
imul
test
mov
inc
les
rorl
shrl
push
sahf
sub
insl
fdiv
and
dec
mov
popf
out
xchg
incb
cmp
jo
cmp
jg
fnstcw
or
dec
xchg
rolb
or
loope
xchg
data16
jbe
insb
sub
cmp
fstl
fdivl
mov
mov
in
add
add
add
add
add
adc
mov
dec
aaa
or
xchg
dec
pop
mov
xor
addr16
sbb
test
mov
out
pushf
mov
adc
fstps
enter
and
and
and
and
and
and
xchg
cmp
enter
pop
dec
andl
test
jp
cmpsl
jl
cmpsb
sti
push
and
sub
movsb
int
push
popa
sahf
sti
imul
jmp
pop
pop
mov
push
fimull
lods
push
cld
jle
mov
outsl
lahf
jb
out
push
and
pop
jecxz
xor
push
xlat
mov
ljmp
mov
int3
repz
movsb
fidivrl
fstp
sbb
iret
ljmp
dec
mov
pop
addr16
adcb
movsl
imul
int3
add
add
add
push
jne
push
xchg
cmpsb
push
sub
xchg
nop
add
into
inc
push
pop
cld
fnstcw
xor
jmp
les
ret
loopne
cli
lret
sub
into
sti
ret
lods
cmpsl
jg
mov
dec
add
add
add
add
add
add
add
add
jbe
addr16
rclb
aaa
jge
leave
adc
into
fisttps
or
jmp
das
fs
xorl
mov
int3
xlat
es
xor
sbb
inc
ds
jns
bound
and
pop
test
ss
jae
loope
dec
aam
mov
sbb
mov
test
and
call
lahf
adc
aaa
jno
call
jecxz
cmp
pop
sub
clc
jo
fsubs
imul
xor
push
loop
int
xlat
mov
int3
add
add
add
inc
add
jg
xchg
loopne
add
cmp
mov
test
fsub
fdivl
mov
aaa
xor
cmp
fsubs
dec
push
pop
xor
stos
add
dec
std
dec
adc
mov
mov
and
movsl
sub
or
jl
fs
jns
sbb
inc
ret
shrb
push
repnz
int
add
push
test
or
repz
xor
cmpsb
ret
nop
clc
jmp
xchg
les
xor
mov
les
cmp
ret
shll
mov
mov
psrlq
fisubs
cmp
cmpsl
lods
jg
out
pop
int3
pop
enter
add
add
add
add
add
add
clc
ja
repnz
in
jnp
test
mov
jns
add
fs
add
pop
popa
mov
cmp
xor
jge
mov
jle
subl
dec
adc
fsubr
iret
xor
nop
add
fisubs
xor
jns
test
je
stc
test
xlat
arpl
insl
rclb
rcrl
mov
and
std
and
rcll
outsl
push
arpl
xor
outsl
cli
rcrl
jo
sti
mov
in
dec
xchg
sub
pop
inc
pop
sbb
jle
mov
mov
or
mov
stc
pop
xchg
dec
in
dec
movsb
add
insl
scas
movntq
lea
pop
shr
add
add
add
add
add
add
das
adc
jnp
movsb
inc
xchg
or
sub
outsl
andl
pop
sbb
pop
xor
sbb
and
dec
cmp
cmp
dec
into
pop
popw
mov
aad
inc
or
push
stos
nop
jns
push
mulb
mov
or
dec
mov
mov
sub
or
outsb
mov
lock
xor
out
and
push
add
ret
or
int
aaa
push
adc
add
add
add
add
add
add
add
cmpsl
repz
dec
jbe
and
sub
shll
add
push
push
and
imul
imul
jnp
mov
lods
outsl
add
add
add
add
add
add
add
js
xor
dec
push
pop
aas
mov
ret
lods
cmc
cmpsl
sbb
scas
sbb
rcll
ret
pop
das
arpl
in
sub
xchg
cmp
sub
sub
shl
into
mov
fadd
clc
pop
lret
and
outsl
test
jecxz
xchg
pop
jl
inc
adcb
iret
neg
add
xlat
jnp
aaa
das
cmpsl
adc
movsb
push
int3
jno
pop
mov
jnp
popa
cld
push
mov
add
lds
shlb
dec
sbb
xchg
xor
pop
roll
and
and
and
and
and
inc
imul
adcb
push
xchg
mov
inc
add
loopne
hlt
clc
ds
cwtl
adc
add
add
add
jne
in
sbb
pop
xchg
mov
jecxz
imul
cmpsl
lds
xchg
inc
pop
call
sti
rcll
negb
mov
mov
daa
shrl
pop
push
xor
scas
pop
inc
mulps
nop
push
outsb
xor
repz
ja
and
pop
xchg
mov
test
lods
mov
cmp
movsl
cmp
xchg
nop
mov
lret
sti
or
or
fwait
popl
stos
xchg
loope
inc
dec
push
mov
aam
ret
sub
fsubrl
mov
push
add
ss
stc
daa
mov
mov
xchg
adc
add
cmc
xor
mov
adc
daa
sbb
pop
scas
std
pop
xchg
in
cmp
pusha
mov
add
add
add
add
add
add
fsubrl
popf
mov
testb
cmp
jno
adc
inc
out
mov
popa
cmp
mov
inc
in
scas
dec
mov
js
add
push
mov
push
jge
cmp
test
sbb
lret
jmp
mov
xchg
cli
cmp
rcll
xchg
fmull
jmp
cmp
inc
pop
mov
imulb
inc
jb
jmp
push
test
mov
jb
testl
xchg
cmp
lods
inc
daa
jo
or
xor
fmulp
ja
sbb
xor
add
add
add
add
add
add
add
push
imul
add
movsb
std
cmp
mov
xor
mov
and
js
sub
cmpsb
push
les
dec
add
or
sub
cmp
adc
test
push
lds
inc
mov
cmp
data16
add
add
add
add
add
push
mov
mov
push
rcl
out
mov
test
push
pusha
test
pop
cmp
xchg
adc
push
or
jmp
xchg
cltd
aad
cmp
aad
or
pop
inc
jle
pop
scas
lahf
sub
sbb
int3
push
xchg
inc
js
es
fisttpl
ret
xchg
pushf
mov
leave
mov
mov
push
pop
ja
push
jl
adc
add
add
add
add
mov
mul
bound
lahf
rcrl
xchg
inc
std
inc
lds
fbstp
and
xchg
mov
mov
push
add
mov
jg
push
in
movsb
push
test
lcall
xchg
jno
jl
mov
cltd
clc
cmpsl
popf
mov
push
stc
adc
sub
jbe
out
lock
and
sub
xchg
pop
jge
int3
cmp
lods
iret
jns
mov
inc
cmp
scas
lcall
pusha
push
call
stos
orl
pop
cld
mov
repz
lret
pop
popa
fidivl
sub
sub
lret
jne
and
pop
out
push
fwait
dec
push
outsb
outsb
ljmp
add
add
add
movsb
rolb
icebp
pop
iret
dec
fsubrs
mov
fs
add
add
add
add
stos
in
mov
fldenv
mov
jns
mov
ror
push
addl
cmp
lret
and
pushf
dec
lds
outsl
ret
jle
aas
lods
xchg
jnp
nop
ljmp
xlat
mov
mov
popf
lock
inc
and
jg
repnz
je
mov
jbe
xorl
pop
mov
mov
cwtl
lcall
outsl
jp
xor
out
mov
das
inc
and
cli
jl
sbb
aam
jb
fdivrs
mov
test
out
or
ljmp
pop
xchg
dec
pop
cltd
adc
pop
mov
cmp
and
and
and
and
ss
jno
test
ret
jnp
jle
cmp
pop
stos
xchg
das
pop
xchg
pop
add
mull
loopne
sub
xchg
out
lods
loope
adc
mov
push
pushf
testl
jo
jns
or
scas
cs
mov
xchg
leave
dec
jne
test
ljmp
xor
and
dec
add
add
dec
test
fucompp
ss
jge,pn
add
add
add
add
add
add
add
mull
lret
inc
lds
orb
xchg
mov
dec
push
insl
add
add
add
inc
nop
std
outsl
xchg
enter
pusha
cmp
pop
rcrb
jb
fdivl
xchg
mov
or
sub
insl
js
xchg
adc
mov
push
push
jmp
jp
xor
das
xlat
xchg
call
ljmp
fcoml
ljmp
or
mov
nop
add
add
sub
xchg
unpcklps
in
bound
jl
cmp
das
jnp
xor
sub
inc
sahf
jb
cld
or
push
arpl
setb
cltd
sahf
push
jp
xor
into
cmpsb
mov
cmp
sahf
xorl
jmp
jg
stc
push
pop
add
cmp
jecxz
push
lock
mov
add
add
add
fdivrl
out
push
into
jbe
and
lahf
cmp
pop
loope
fildl
jne
xchg
cs
adc
outsl
cmp
inc
mov
adc
daa
mov
imul
xchg
lea
in
add
inc
in
jmp
decl
add
add
add
add
add
add
add
and
sub
aas
mov
mov
jp
sti
clc
or
cs
xchg
dec
int3
addr16
rolb
xchg
cmpsl
test
add
add
push
jge
popa
inc
jle
lods
xchg
mov
and
pop
xchg
and
mov
cmpsl
jge
cmp
jns
cld
aam
sub
cs
ffree
in
sbb
mov
aad
adc
neg
jbe
mov
mov
shl
nop
xor
imul
adcb
std
aad
push
jge
lds
sahf
and
lcall
cltd
ret
inc
xchg
cli
nop
enter
mov
inc
adc
add
icebp
movsl
aam
leave
fisttpl
push
inc
loope
xchg
fdivl
or
loopne
sti
mov
aas
movsb
mov
push
mov
add
add
add
add
add
add
je
pop
xchg
cltd
push
insl
mov
ficoml
or
inc
mov
lock
mov
jns
mov
inc
popf
movsb
out
rcr
jne
es
nop
xchg
std
push
jg
lcall
xchg
sahf
mov
sbb
or
test
aaa
and
lahf
push
add
movsb
sbb
sbb
pop
jno
ret
fdivl
mov
cmpsb
mov
add
add
add
push
shrl
dec
cs
lcall
xor
lcall
movsl
arpl
adc
scas
push
mov
sbb
jl
sub
push
outsl
add
js
inc
mov
icebp
pop
or
js
clc
fnstsw
ds
and
sub
jo
mov
xor
adc
xchg
push
and
sub
pop
xor
loopne
clc
inc
rcll
hlt
sbbl
lea
loope
xor
lcall
ds
jae
or
je
add
add
add
add
add
add
add
add
sub
loop
lds
arpl
dec
in
mov
mov
rolb
jo
mov
xor
inc
fdivrl
popf
out
mov
inc
mov
and
loop
in
mov
fldl
add
stos
add
cmp
jg
dec
sub
loope
stos
mov
xor
out
mov
fucomi
mov
pop
jle
cmp
push
and
test
gs
adc
lods
pop
ss
fimuls
push
sbb
je
xor
popa
repnz
sbb
sahf
aad
add
in
cmp
fdivrs
and
out
lods
add
dec
sti
xor
std
lods
jne
and
test
repz
mov
add
add
xchg
pop
jl
dec
fwait
jns
test
jl
imul
ret
ret
jno
or
cmpsb
push
aaa
xchg
mov
loopne
mov
adc
clc
inc
cmp
jo
scas
fmul
jb
jbe
adc
xchg
cmp
jns
sbb
rcr
ss
and
data16
lret
push
xchg
mov
scas
in
pushf
sub
and
and
or
das
out
sbb
xor
add
ret
mov
sysenter
pop
inc
push
adc
movsl
imull
and
add
add
add
mov
add
lds
int3
out
push
repnz
out
mov
cmp
and
mov
xor
or
leave
jbe
lret
rcll
jl
into
push
add
xchg
sub
popa
xor
cmc
and
and
imul
or
aad
in
je
push
cmp
loope
loop
mov
jno
xorl
add
sbb
dec
ficomps
cs
test
jmp
call
push
filds
in
mov
or
and
dec
and
or
popl
and
and
and
and
and
and
sbb
fs
popf
mov
lret
xchg
jb
fnsave
movsb
mov
mov
xchg
jae
jo
out
lret
imul
cmp
in
and
xchg
into
inc
les
inc
add
add
add
add
add
into
sub
loope
add
jp
xor
or
push
aas
mov
into
xlat
jg
adc
cli
je
adcb
add
add
add
add
clc
adc
mov
popa
leave
rcr
imul
test
loopne
std
inc
sub
rclb
dec
sbb
movsb
xor
jmp
or
arpl
mov
push
rolb
lods
insl
sbb
adcl
cmc
cmp
pop
xchg
stos
mov
push
das
mov
addr16
movsl
xchg
dec
scas
xchg
pop
xorl
adc
iret
and
mov
repz
mov
add
adc
ds
hlt
addl
jmp
lods
ja
fdivl
ud0
and
and
or
xchg
in
push
jb
cld
push
add
and
and
and
cmp
xlat
xor
pop
dec
popf
adc
nop
int
jl
xchg
clc
mov
aad
aam
js
inc
dec
mov
shl
or
push
lods
loopne
inc
dec
data16
mov
stos
shl
jl
or
out
jnp
xor
dec
pushf
outsb
call
adc
pop
fidivs
aam
and
cmp
lods
mov
fdivs
sarl
sbb
div
mov
add
sbbl
hlt
push
insl
xchg
add
pop
mov
dec
pop
jnp
sbbb
and
add
add
add
add
add
add
add
ss
pop
or
aas
in
sbb
ret
jmp
add
add
add
add
lds
mov
stos
cli
and
mov
xchg
out
incl
dec
cmpsl
pushf
loope
test
test
je
xchg
adc
xor
mov
ja
sbb
sti
lods
add
xlat
jnp
es
xor
inc
push
and
add
data16
bound
and
addb
add
cmc
sbb
int
psubd
movsb
pop
inc
in
icebp
sbb
xor
in
idiv
mov
cli
pop
sahf
daa
stc
ss
sub
cli
mov
scas
lret
insb
dec
add
mov
mov
inc
nop
xchg
push
movsl
xor
ficoms
mov
dec
mov
sub
sub
add
mov
inc
shrb
add
push
jmp
cmpsl
ss
scas
add
stos
dec
outsb
add
add
movsb
jmp
movsl
mov
lea
js
fdiv
push
filds
insb
jns
adc
gs
xor
or
sbbb
repz
int3
add
add
les
push
stos
cmp
cmc
or
es
jns
dec
insl
jmp
fistl
mov
out
cmpsl
and
lret
fisttps
inc
mov
inc
test
mov
mov
xlat
aam
cmp
sbb
ss
xchg
or
shlb
adc
ja
rcrb
pusha
pop
cwtl
mov
xchg
and
stos
cmc
or
or
jo
stos
and
sub
mov
mov
jb
and
popa
xcrypt-cbc
cmpsl
xchg
mov
mov
mov
add
add
add
add
add
add
xorb
ficompl
sub
adc
dec
daa
mov
pop
popa
xorl
mov
out
jb
lahf
repz
fbstp
cs
shrl
cmp
mov
or
sahf
lgs
cmp
out
roll
pop
jg
jae
roll
testb
pop
mov
sub
add
dec
aad
cmp
stos
faddl
stc
lods
mov
jo
sbb
push
xchg
add
xchg
xor
iret
sti
lods
inc
mov
or
add
mov
orl
lea
pop
add
add
and
jb
inc
jecxz
cwtl
adc
aas
mov
and
mov
int3
or
or
dec
push
js
outsl
add
jecxz
add
push
fimuls
cltd
dec
ss
add
add
add
add
add
add
shrb
push
in
pop
and
cmp
dec
xchg
adc
aaa
xchg
pop
sbb
mov
sahf
lret
out
adc
add
das
adc
mov
push
push
sarb
lods
push
cmp
mov
pop
push
jb
mov
ja
aas
sti
mov
mov
jnp
gs
lods
xchg
loopne
dec
cmpsb
shr
dec
mov
push
mov
scas
inc
mov
loope
xchg
sbb
sub
mov
cmp
int3
add
add
add
add
add
mov
insl
orb
xchg
lods
ds
mov
jmp
iret
mov
popf
stos
bound
sub
cmpsb
cmp
and
push
mov
daa
aad
in
or
out
mov
scas
cmp
lahf
arpl
jmp
aam
inc
mov
pop
movsb
sub
fnstenv
lcall
popa
jle
int
mov
mov
pop
dec
push
push
mov
add
add
add
adc
sarl
mov
repnz
lret
daa
mov
mull
push
mov
mov
dec
mov
adc
xchg
xor
ljmp
mov
clc
inc
inc
int
insl
cli
and
in
ja
pop
mov
pop
push
dec
out
pop
inc
cltd
ljmp
mov
imull
push
cli
mov
mov
jl
jg
fdivrl
mov
ret
add
int
jge
inc
decb
popf
jo
stos
sbb
sar
movsl
adc
mull
adc
cmp
or
inc
sub
push
ret
mov
adc
mov
lcall
neg
mov
inc
stos
sub
xchg
arpl
js
addr16
mov
cltd
cmpsb
test
jle
fisubrs
sbb
fistl
mov
add
add
add
aaa
inc
sub
insl
lcall
jmp
push
int
repnz
sbb
rolb
mov
dec
cli
xchg
sti
in
repnz
mov
xlat
jo
sbb
test
outsl
jns
and
add
int
les
inc
and
cltd
pop
push
sahf
inc
xchg
sarl
xor
add
add
add
clc
jnp
or
test
sub
pop
and
push
sbb
in
dec
inc
adc
add
imul
adc
and
repz
ljmp
out
jmp
stc
adc
dec
lret
stos
dec
test
xor
daa
in
jbe
lock
insb
in
rol
movsl
xchg
push
aam
jmp
pop
out
inc
fidivrl
leave
push
push
push
mov
ss
lods
cmc
out
frstor
sbb
dec
jecxz
add
in
movsb
sub
fists
mov
mov
sub
push
test
and
and
cmp
cmp
lret
cmp
pop
cli
das
sbb
cmp
fisttps
sarb
pop
pop
js
pushf
add
lcall
xchg
imul
mov
leave
cmp
in
mov
add
add
and
out
rep
movsb
mov
pushf
sbb
movsl
scas
mov
stos
xlat
mov
xor
dec
xlat
jle
jle
mov
add
add
pop
sub
jns
pop
jge
mov
dec
loopne
hlt
sbb
cltd
sbb
lock
mov
pop
sahf
ljmp
mov
sub
cltd
xchg
push
dec
cli
push
xchg
sbb
in
decl
inc
shl
adc
bound
mov
pop
mov
sub
mov
add
xchg
jmp
scas
in
lods
rorl
inc
int3
lock
lods
sub
mov
fadds
xor
mov
fisubl
xchg
jle
testl
int3
negb
stos
xor
mov
test
rcl
js,pt
push
aaa
iret
movsl
mov
stos
dec
jo
sti
mov
add
add
in
mov
mov
movsb
inc
inc
xchg
dec
insl
dec
mov
std
rep
scas
and
bound
mov
jg
mov
or
mov
shlb
or
sub
jne
ret
mov
hlt
pop
mov
push
in
push
adc
xor
sbb
test
inc
mov
add
lahf
lea
sub
jg
fnstenv
inc
mov
loopne
sub
jo
dec
sbb
adc
scas
fdivs
or
jne
je
add
cmp
jnp
add
inc
jbe
or
aas
mov
pop
or
ficoml
mov
rorl
int3
pop
xor
out
add
pushl
dec
push
rolb
cltd
test
ret
out
or
ja
jns
mov
punpckldq
sbb
icebp
push
mov
leave
push
lods
inc
enter
mov
sti
lcall
dec
mov
rorb
lods
jg
jnp
inc
mov
inc
sahf
loope
rorl
inc
xchg
xor
int3
add
add
add
sbb
dec
add
mov
jle
test
push
mov
loop
push
xchg
lret
jle
add
add
add
add
add
je
mov
push
movsl
and
scas
loopne
pop
imul
dec
add
xor
aad
popf
imull
push
inc
pop
cmp
ret
lds
jge
out
das
xor
add
xor
fdiv
mov
call
pop
jb
pop
subl
incl
incl
ljmp
add
jb
mov
and
mov
in
inc
cld
sub
sbb
andb
mov
mov
scas
nop
xchg
cmpl
fbld
in
insl
int3
test
stc
aaa
in
fiadds
jnp
scas
adc
lcall
sub
gs
push
testb
inc
or
xchg
push
xor
int3
add
add
add
mov
and
xchg
jno
add
sarb
shrb
ljmp
pop
cwtl
sbb
add
inc
bound
loop
sub
push
mov
xor
or
frstor
xchg
xor
cmp
stos
dec
jns
or
cs
cmp
test
dec
aam
cmp
addr16
mov
mov
inc
inc
mov
add
add
add
add
add
add
movsb
push
lea
rcrb
add
add
add
add
add
add
add
ret
jge
loope
lds
jae
fs
jae
dec
add
jnp
inc
lock
dec
data16
push
lods
repz
inc
stc
mov
pop
inc
push
aad
pop
repnz
es
out
out
pushf
xchg
sbb
enter
cmc
xchg
pop
add
sub
pop
dec
insb
lcall
ret
sub
inc
cmp
arpl
imul
js
jg
sti
sub
shll
loop
insb
mov
mov
mov
and
pop
add
add
add
add
ja
call
sbb
aas
cmpsl
xchg
inc
in
aam
rol
in
mov
fcmovnu
jo
test
test
mov
inc
adc
aas
jp
lock
mov
xor
add
add
add
push
test
jo
jae
cltd
adc
mov
xchg
cmp
cmp
ds
cwtl
out
lea
push
movsl
insl
xor
jmp
stc
adc
xor
inc
mov
int
ror
sub
pop
mov
lea
or
movsl
push
iret
adc
lods
inc
xor
popf
test
pop
insb
dec
daa
call
js
mov
inc
mov
ljmp
mov
imul
flds
xchg
pop
jp
mov
loop
adc
sub
pop
sbb
dec
cmp
or
ljmp
cmp
sub
sub
or
push
cmpsb
adcb
int3
add
add
add
add
mov
xchg
aad
dec
idivb
dec
mov
and
fnstsw
cmp
imul
cmp
addl
jle
mov
adc
lcall
or
fst
icebp
cmpsb
rclb
xor
adc
cltd
or
jle
pop
mov
addr16
clc
mov
mov
subb
mov
les
inc
sub
add
ds
repnz
pop
lahf
xchg
dec
jo
xchg
add
mov
mov
nop
add
sub
ljmp
jne
enter
mov
test
push
sbb
sbb
inc
lods
scas
pop
sub
ret
enter
add
lea
es
mov
cmpsb
inc
push
sbb
out
pop
out
fs
inc
subl
loop
pop
dec
fsts
dec
outsb
imul
insl
sub
and
mov
cmpsb
sahf
bswap
push
dec
xor
xchg
mov
push
lret
out
xchg
ret
jno
divb
mov
push
jns
pop
jmp
pusha
gs
push
gs
xchg
out
fdivrs
int3
jb
imul
mov
jge
fwait
xchg
sahf
lret
cmpsl
cs
scas
mov
mov
mov
cmp
adc
inc
jo
mov
xchg
js
sti
clc
jmp
adc
and
test
test
cld
push
mov
test
adc
jnp
and
incl
incl
incl
incl
incl
incl
mov
inc
pop
fs
jae
and
out
daa
fisttps
shll
and
test
mov
cld
lcall
xor
or
and
xlat
dec
aaa
pop
cmpsb
cmpsl
rcl
nop
sti
xchg
rcl
adc
gs
add
add
add
mov
cmp
inc
add
push
js
xor
xchg
mov
insl
int3
mov
lahf
pop
jmp
aaa
push
int
ljmp
sub
arpl
adcb
es
sbb
cmp
sub
mov
cmp
cli
fisttpl
movb
jo
or
call
mov
push
shrl
jno
xlat
dec
jl
in
divl
or
js
pop
daa
in
stc
cmp
cmp
jmp
loope
and
insb
add
add
add
add
add
add
add
lods
out
and
rol
popa
adc
or
xchg
jo
imul
push
mov
jo
orl
lret
jl
inc
lret
push
xchg
mov
int
cmp
sub
inc
sub
dec
dec
imul
mov
sub
ror
aaa
fs
add
add
add
cwtl
fwait
adc
out
int3
aam
mov
jge
xor
sbb
jg
xor
jmp
pop
or
js
cltd
fadds
mov
lods
mov
mov
xor
fildll
mov
test
jo
xorl
jecxz
fimull
fbstp
loop
in
enter
and
in
add
loop
out
xchg
lret
out
pop
enter
add
jp
sub
in
mov
in
cmpsl
ret
jge
test
fs
int
lea
incl
incl
jmp
into
add
or
adc
xchg
in
sub
push
xchg
jno
test
in
mov
dec
aas
push
adc
adc
xor
lret
xchg
cmp
imull
pop
lcall
cmpsl
mov
pop
pop
push
mov
cmc
cmp
dec
xlat
inc
in
inc
jmp
sbb
bts
inc
mov
sub
jle
xchg
outsl
insl
int
sbb
or
outsb
out
adc
push
nop
cld
pop
and
jae
and
and
and
and
and
and
xchg
xchg
mov
mov
inc
dec
jne
repnz
fdivl
js
popa
fisubrs
mov
in
rorl
in
popf
shlb
xor
cs
inc
dec
in
inc
sub
imul
pushf
cmp
mov
add
adc
dec
dec
hlt
jg
cmp
das
in
mov
sub
daa
addb
dec
jp
gs
scas
pop
filds
cwtl
adc
aad
pop
xchg
inc
inc
pop
mov
cli
loopne
mov
mov
lahf
ret
fsubrl
jl
out
lret
in
push
inc
bound
add
add
add
add
add
add
add
ja
cs
push
cmpsl
push
inc
mov
ljmp
mov
jmp
daa
orb
pop
flds
mov
aas
jne
in
xchg
mov
dec
mov
jg
mov
addr16
lods
hlt
xchg
insb
sub
push
cmp
push
adc
sbb
stc
xchg
cwtl
mov
fidivs
fsubrs
enter
sbb
sub
cltd
fdivr
stc
ret
rcrl
sahf
loop
add
add
add
add
add
add
sub
or
popf
mov
adc
scas
or
sbb
jg
push
js
into
dec
add
cmp
in
push
clc
and
insl
in
mov
mov
les
and
mov
jo
and
mov
adcb
in
cmpl
fbld
cmp
lods
sti
dec
mov
das
out
jecxz
enter
pop
arpl
push
lea
mov
icebp
lcall
jmp
lods
xlat
loop
ss
fisubl
popa
fcoms
nop
add
fwait
test
xor
pop
das
fldenv
test
das
outsb
in
dec
or
jmp
fwait
ret
in
mov
or
sbb
xor
mov
aaa
cwtl
cmpsl
jle
imul
or
pusha
shrl
dec
xorb
xchg
call
xchg
jg
fnstsw
sbb
xor
shrb
aas
aas
fstpt
divl
pop
adc
sub
push
mov
cli
les
popf
pop
mov
jns
icebp
mov
dec
sbb
enter
jg
addl
and
dec
mov
lahf
cltd
or
add
pop
fistpll
dec
lock
pop
pop
push
or
inc
sbb
mov
jmp
sub
call
in
xor
sbb
add
add
inc
adc
sbbl
arpl
and
mov
push
and
mov
clc
sahf
jle
sbb
leave
mov
adc
jge
fadds
and
jbe
cmpsb
or
fwait
insb
and
mov
call
stos
sbb
jmp
mov
aas
sti
sbb
add
add
add
add
stc
xor
fwait
inc
jle
and
aaa
push
push
stos
lret
dec
je
ds
sbb
and
nop
inc
and
or
xor
stos
subl
jge
outsl
jge
popf
and
sub
lret
xor
ficoml
pushf
inc
and
call
outsl
push
scas
cwtl
int3
aam
dec
jo
mov
pop
mov
lcall
and
and
and
and
pop
adc
add
cwtl
cmpsb
mov
push
mov
mov
hlt
loope
cmc
or
std
add
lock
inc
inc
or
sub
icebp
mov
insl
test
push
lock
shrl
movb
lahf
in
in
test
aas
int3
roll
and
sbb
lea
xchg
dec
ja
add
ret
pop
lods
es
or
mov
in
sti
nop
ret
cltd
or
pop
dec
jl
push
outsl
adc
or
sahf
addr16
mov
cli
les
repz
das
xchg
mov
insl
cwtl
jg
add
add
add
add
jmp
mov
loope
xchg
sub
pop
mov
mov
rcr
mov
lea
lahf
pop
pop
jle
jo
sub
rorl
out
xor
cmp
sbb
inc
push
pop
cmp
mov
xchg
inc
adcb
dec
dec
add
in
xor
add
push
rorl
call
pop
add
je
jge
popa
out
lahf
cwtl
mov
aaa
imul
mov
and
les
or
ds
aas
mov
sub
int3
add
mov
ljmp
sub
pop
sbb
daa
out
jno
repnz
dec
movsl
lds
xor
nop
xlat
cmpl
inc
or
push
fstps
push
push
sub
pop
mov
sbb
pushf
leave
movsl
adc
mov
sbb
jecxz
mov
and
fimull
lods
sub
jb
sub
mov
pop
mov
movsb
sarb
add
add
add
add
jne
cltd
push
mov
test
out
inc
je
and
and
and
and
sub
mov
clc
mov
jbe
mov
rcrl
xor
aas
sti
inc
cmp
dec
adc
mov
mov
iret
icebp
decl
test
cwtl
scas
fimull
cmp
sub
icebp
mov
mul
adc
sbb
mov
cld
pop
rcl
les
xlat
jmp
pushf
mov
jb
jo
ret
inc
fsubrl
movsl
mov
sub
mov
mov
and
aad
popa
push
dec
cmp
xorl
xlat
xor
sub
aad
and
and
and
and
mov
jl
push
ret
insl
jmp
stos
in
adc
shl
bound
call
cmp
inc
dec
pushf
dec
in
in
insl
mov
shl
sub
in
call
enter
mov
je
sbb
gs
pop
scas
pop
mov
xor
xor
cmc
cmp
cmpsl
xchg
cli
test
fucomi
cld
push
jp
cmp
pop
test
in
mov
add
int3
add
add
in
mov
testw
and
in
js
fdiv
add
push
inc
into
loop
add
and
and
xchg
inc
lret
pop
mov
push
mov
gs
push
xchg
test
sub
mov
cmc
pop
faddl
orb
xor
pop
mov
je
dec
rorl
mov
xlat
insl
scas
shrl
imul
rorl
mov
jb
mov
pushf
out
cltd
aaa
in
inc
or
jo
pop
je
mov
int3
add
add
add
add
add
add
js
stos
andl
mov
cmpsl
mov
jl
sbb
popf
pop
xor
sbb
gs
jae
pushl
sbb
mov
imul
ja
adc
inc
pop
sub
mov
xchg
adc
popa
dec
pop
enter
test
sub
xor
cmc
rorl
push
data16
iret
sub
lods
cmp
loope
jp
inc
jbe
sbb
cmpsb
call
data16
add
mov
jge
add
mov
mulb
pop
cwtl
arpl
push
push
jle
pop
cmc
sub
daa
add
xchg
int
xchg
out
shlb
push
pusha
cld
mov
aas
mov
mov
jae
aas
gs
int3
scas
aas
inc
fists
scas
add
ja
and
divb
int
add
add
add
xchg
ret
aas
cli
aaa
outsb
sub
xchg
in
pop
sarb
add
adc
push
jmp
jmp
xlat
iret
pop
lret
cltd
adc
popa
xor
lods
xchg
aas
lods
fstl
mov
out
lahf
cmpsl
mov
cmpsl
xchg
add
repnz
mov
adc
mov
sbb
pop
push
jl
fsubl
shrl
xchg
in
xor
test
aaa
bnd
pop
nop
dec
fs
xchg
sarb
mov
pusha
push
out
scas
adc
lods
ljmp
int3
add
add
add
sub
or
adc
not
cmc
xchg
lds
into
jle
in
or
and
and
loopne
pop
dec
push
fld
push
nop
push
sbb
gs
pop
fxch
int3
push
movb
add
enter
scas
insb
pop
stos
or
sbb
push
mov
imull
push
or
sti
sbb
mov
and
cmpsb
leave
sub
mov
mov
mov
add
dec
mov
outsb
push
cmp
xor
mov
fmul
pusha
fsubr
aas
jp
pop
dec
push
arpl
fadds
data16
ss
and
push
std
add
add
add
add
add
pop
xlat
push
out
sti
jno
push
jne
in
jne
mov
jnp
lods
sub
sub
arpl
dec
es
xchg
rolb
in
mov
add
add
jno
cmp
mov
mov
cld
xlat
sub
jle
mov
mov
sub
mov
and
js
mov
popa
insl
and
test
jo
add
sbb
sub
xlat
inc
loopne
xchg
pop
mov
jle
jg
jl
dec
lret
jnp
ret
or
out
jo
sbb
mov
lds
xlat
jb
loopne
xor
mov
notb
mov
jg
pop
stc
repnz
faddl
jns
sub
lret
jo
mov
mov
xor
jp
lahf
pop
inc
out
or
sti
add
add
add
add
add
add
add
sub
mov
ret
call
mov
out
push
sub
lods
jp
mov
jle
and
push
lahf
lea
mov
loop
lods
adc
cmp
inc
stc
push
sti
lret
mov
rdpmc
ret
jcxz
or
aad
xor
or
cli
data16
aas
xlat
push
pusha
mov
push
cmp
sub
xlat
outsl
jmp
adc
sahf
xor
cmc
test
in
push
mov
mov
fnstenv
cmp
dec
mov
cs
mov
js
mov
in
add
add
add
add
add
add
add
fwait
scas
pop
push
mov
push
sbb
cltd
inc
popf
loopne
push
or
sar
add
mov
cltd
xchg
inc
and
xlat
es
lds
push
and
insl
insl
dec
lds
mov
inc
stos
sbbl
cli
rclb
and
aaa
push
inc
dec
outsl
mov
xchg
scas
movsl
nop
jno
pop
adc
mov
incb
fcoml
in
and
ret
add
add
add
add
add
add
add
stos
ljmp
wbinvd
inc
test
sbb
sub
adc
add
add
add
add
les
adc
pop
inc
or
push
lds
mov
es
je
jle
add
add
add
add
pop
dec
push
pop
sbb
jb
push
ljmp
sub
and
ja
add
add
mov
mov
jg
adc
xchg
adcl
lret
imul
cs
xchg
add
push
fisttpll
mov
jp
push
shll
lahf
push
aaa
push
outsb
orb
add
add
add
add
pop
mov
frstor
adc
adc
or
jno
or
xlat
mov
fildl
jecxz
jge
mov
pop
add
add
add
pop
scas
jg,pt
cwtl
insb
outsb
mov
fcoml
or
adc
incl
incl
incl
incl
incl
incl
decl
cmpsl
or
pop
stc
and
inc
jnp
and
insb
sbb
sub
dec
pop
push
out
xchg
mov
sbb
add
add
and
nop
dec
mov
mov
hlt
shlb
das
dec
or
int
not
mov
mov
jns
push
mov
cwtl
push
shl
fdiv
aam
inc
push
adc
cmpsb
popf
xchg
add
add
add
add
add
add
mov
inc
stos
adc
pushf
hlt
js
dec
lods
lcall
jns
dec
nopl
cmp
gs
cmp
xor
adc
sahf
jecxz
jo
shll
sbb
loope
dec
jmp
add
das
out
sarb
sbb
sub
movsl
orb
fadd
jle
sbb
pop
or
in
mov
nop
or
in
push
dec
sahf
jle
pop
fisubs
ret
imul
incl
incl
incl
incl
lcall
jecxz
mov
and
test
jmp
pushf
add
rcrl
lcall
or
es
mov
sarl
repnz
inc
rorl
dec
adc
into
jno
push
sarl
or
js
xchg
lea
xchg
cld
cmpsb
adc
dec
xor
and
add
add
int3
xchg
cs
in
test
jns
add
das
add
call
sub
ljmp
das
adc
int3
jbe
cltd
movsl
adc
adc
mov
arpl
ss
sbbl
xor
ss
mov
push
inc
xor
jns
js
ljmp
push
dec
cld
test
and
add
add
add
lret
add
pop
loopne
out
sub
loope
cwtl
push
sub
cmp
scas
jge
mov
adc
lock
push
in
addb
xor
pop
sub
jle
ja
pop
mov
and
pop
leave
cmp
adc
mov
dec
add
add
add
add
add
xor
data16
jne
outsl
adc
push
dec
cmp
jns
rclb
mov
sti
in
sbb
xlat
bound
push
or
mov
fwait
pop
add
lea
stos
out
dec
xlat
mov
mov
sub
push
adc
inc
cli
out
or
inc
push
dec
mov
add
add
add
add
pop
insb
mov
push
arpl
out
push
sub
ds
cmp
fdivl
pop
mov
icebp
adc
ds
sbb
imul
insb
sti
mov
mov
repz
pop
test
movsl
js
scas
rolb
mov
xchg
inc
pop
or
stos
xor
xor
jnp
mov
stos
mov
jns
push
subl
mov
iret
jecxz
pop
xchg
jmp
sub
fisttpll
iret
mov
jg
in
sub
add
add
imul
xchg
lods
pop
and
icebp
scas
push
movsb
lahf
aam
sbb
pop
mov
and
and
and
and
std
lcall
ret
mov
out
ss
xor
lock
pop
and
ret
lret
test
mov
fstpt
enter
movsb
xor
cmc
adc
cmp
xchg
inc
outsb
jb
dec
lret
iret
gs
xor
imul
repnz
xchg
lahf
inc
test
ret
xchg
push
loop,pt
jmp
mov
les
call
mov
pop
or
jno
mov
out
pushf
and
jb
lods
mov
sub
cmc
dec
xchg
xor
and
iret
jge
xchg
lds
data16
ret
or
add
add
add
add
add
div
cmp
push
cld
addb
call
stc
and
outsl
or
and
lods
mov
adc
mov
dec
cltd
scas
mov
mov
lea
and
xlat
movsb
and
dec
push
adcl
mov
mov
xchg
ret
daa
dec
pushf
repnz
mov
outsl
popa
push
in
adc
or
fildl
or
push
sbb
xor
and
pop
xchg
cmp
mov
lea
out
shlb
pusha
mov
pop
xchg
fbstp
add
add
add
add
add
stos
xor
fwait
test
and
and
and
and
orl
and
sbb
in
xor
nop
mov
les
movsl
sub
jb
cli
cmp
push
hlt
xchg
dec
enter
fidivl
subl
dec
popa
and
ss
notb
je
sub
mov
add
add
jg
push
sub
cltd
mov
and
popf
ds
incl
add
add
add
add
add
xor
nop
xor
sub
cmp
enter
adc
dec
into
int
xchg
enter
sahf
xor
int
pop
pop
push
push
adc
mov
in
dec
enter
gs
ret
inc
les
gs
insl
insb
adc
xchg
xchg
shll
movsl
cmpsl
std
or
jp
xchg
adc
cmp
roll
cmc
testb
add
loop
je
add
mov
jg
lret
dec
hlt
testl
add
add
inc
adc
and
dec
adc
lret
leave
in
add
dec
jns
sti
mov
ljmp
inc
xorl
jne
sahf
dec
and
inc
and
xchg
loopne
pop
testl
inc
aad
fcomps
stos
dec
ds
imul
hlt
lret
push
mov
jge
lock
mov
loopne
mov
je
repnz
iret
or
clc
sub
popa
sbb
adc
push
cmc
in
dec
jle
push
push
jae
sbb
add
add
add
add
add
push
push
in
sbb
jle
cmp
scas
imul
out
inc
jecxz
int3
pop
xchg
ss
pop
cmp
mov
jno
repnz
and
pop
jno
add
add
add
add
add
add
add
inc
lods
icebp
les
js
popf
xor
and
loopne
xchg
in
and
das
lods
lret
xchg
and
mov
test
jb
clc
mov
nop
lea
add
sahf
cmp
and
cmpl
add
cwtl
sub
xchg
mov
cmpsl
push
je
int3
stc
sub
into
popa
imul
nop
add
and
xor
aaa
pop
sub
sahf
mov
xor
ljmp
jp
into
mov
mov
add
cmp
test
ljmp
sub
jg
dec
xchg
sbb
sub
fwait
jbe
aam
enter
pop
rcrb
xlat
data16
cltd
insl
xchg
lods
scas
jae
jecxz
push
lea
stos
addr16
sbbl
add
add
add
add
add
sub
scas
movsb
or
js
lock
xchg
push
int
mov
daa
add
jge
dec
xor
cmpl
mov
jmp
cmp
scas
dec
push
xchg
sahf
mov
xchg
xchg
fstp
stos
test
popf
inc
sbb
inc
roll
addb
push
insb
push
jg
push
inc
push
lods
aaa
cmp
cmp
or
xchg
sub
idiv
in
or
pop
inc
imul
ss
lret
pop
rcrl
daa
push
dec
out
dec
inc
and
stos
pop
or
in
aaa
pop
lods
test
add
push
les
incl
incl
incl
cmp
jnp
dec
shlb
mov
mov
push
mov
mov
xchg
popa
scas
jg
test
add
shl
pop
dec
pop
pop
call
icebp
add
fdivr
cmp
push
add
mov
jns
dec
add
insb
push
test
xchg
mov
lret
nop
add
stos
xor
out
adc
cli
enter
gs
xchg
or
repnz
dec
leave
push
sbb
scas
push
pop
ja
je
mov
and
sahf
data16
and
rol
adc
test
mov
xchg
add
add
push
lahf
mov
pusha
inc
mov
add
mov
jle
in
or
push
adc
and
pop
ror
fwait
imul
xchg
mov
or
arpl
jae
popa
dec
test
js
fwait
addr16
adcl
mov
repz
jb
movsb
lock
das
out
movsl
addr16
jbe
jae
dec
dec
mov
and
and
and
and
and
and
and
inc
pushf
adc
adc
std
sbb
clc
jae
add
cmp
jmp
and
imul
aad
jne
xchg
dec
add
push
jg
fwait
inc
xchg
ds
and
mov
clc
dec
in
les
mov
sbb
xor
adc
divl
cmp
mov
mov
ficoml
cmp
aad
inc
rcll
gs
inc
sub
pushf
ss
cmpsb
test
lods
mov
add
add
add
add
mov
repz
inc
loope
or
sub
xchg
add
jg
xor
test
and
inc
lret
sbb
decb
ficoms
ljmp
and
mov
xchg
fmuls
mov
sarb
sub
xchg
sbb
xchg
and
hlt
mov
mov
fstpt
mov
das
test
outsl
or
lock
or
lret
mov
xchg
rcrl
lds
cmpsb
xor
sbbl
dec
movsl
ds
in
mov
cmc
pop
imul
and
and
and
and
int
dec
lcall
add
dec
cmp
and
and
and
and
sub
imul
in
inc
out
and
push
adc
jg
cmp
mov
lret
mov
cmp
mov
xchg
inc
xor
pop
inc
push
cwtl
xlat
and
and
fcom
sarb
mov
cmp
insb
loopne
pop
out
lods
ss
clc
adc
idivb
mov
mov
in
dec
sbb
jb
xchg
mov
fcompl
rolb
mov
out
mov
gs
fistps
push
or
dec
sbb
rolb
out
daa
mov
push
fwait
stc
pop
mov
test
cmpsl
push
or
mov
jecxz
add
add
add
add
add
add
lret
pop
jecxz
lret
in
pop
cmp
pushf
xor
pop
icebp
mov
push
xchg
lret
loopne
je
and
lcall
pavgb
ljmp
jae
lcall
imul
add
add
add
add
add
mov
jns
stos
pop
add
sbb
enter
mov
int
testl
rcrl
cmc
mov
push
mov
mov
sbb
add
push
lahf
in
mov
loopne
cmpsl
inc
rorb
inc
xchg
ret
loopne
out
sbb
mov
pop
push
ja
or
repnz
lret
loope
and
inc
test
pusha
orb
cwtl
or
movsb
mov
xor
dec
aad
push
pop
push
cli
dec
arpl
cmpsl
in
pop
in
jmp
mov
in
leave
orb
sub
jbe
add
add
lahf
sti
std
sub
cli
lods
rcrl
sub
mov
sbb
cld
sub
sub
scas
scas
cwtl
dec
stos
je
ss
lods
fistpl
into
sahf
and
and
cmp
sbb
in
pop
out
adc
daa
jle
dec
ficoml
repnz
test
xchg
aaa
ficoms
mov
xchg
or
adc
pushf
jecxz
adc
loop
add
ja
test
inc
xor
and
and
and
and
and
and
mov
aas
pop
ret
or
shll
lcall
test
cmp
es
push
jnp
cmc
imul
cmpsl
cmp
aad
fimuls
xor
mov
scas
and
inc
icebp
outsb
push
jmp
and
and
inc
adc
and
pop
icebp
cmp
dec
jl
or
jl
fstpl
pop
mov
adc
aam
outsl
repnz
fwait
mov
pop
mov
icebp
mov
fwait
rcr
sti
mov
lcall
inc
ret
cwtl
sahf
scas
mov
xor
pop
xor
pop
or
cmpsl
test
cld
fiadds
arpl
add
add
add
push
mov
pushl
or
cmp
adc
cmpl
pop
mov
enter
call
adc
arpl
mov
int3
ret
xchg
xchg
ljmp
js
into
filds
push
fstpt
sbb
negb
gs
jbe
aas
mov
out
jmp
out
ficoml
dec
aas
ds
push
test
sub
and
inc
push
or
pop
aaa
movsl
dec
loopne
add
push
aaa
fs
cmp
cmp
dec
dec
stos
fs
sbb
push
rcrl
bound
lahf
repnz
sbb
fucomp
test
fdivrs
sahf
push
add
add
add
add
add
add
add
decl
xor
addr16
adc
mov
mov
dec
daa
dec
rclb
dec
rclb
mov
iret
cmp
ljmp
adc
xor
xchg
nop
test
aam
pop
and
cmpsl
out
fnstcw
xor
jae
dec
mov
lods
cli
stc
in
add
cmp
sbb
mov
fists
fcompl
inc
rclb
dec
jg
sahf
sub
sub
lea
aad
push
jb
adc
std
ss
push
ret
loopne
insl
add
add
add
add
add
jno
sti
fwait
sbb
insb
push
lahf
pop
adc
nop
add
dec
iret
scas
xor
ljmp
adc
invd
push
pop
cwtl
test
mov
jle
pop
bound
lods
lods
adc
cmp
push
cmp
push
adc
out
mov
add
add
add
cmpsb
sub
inc
imul
add
cmp
xchg
daa
cmp
adc
dec
dec
cmp
xchg
jg
insl
mov
cmp
leave
mov
jp
jae
jae
hlt
xor
aaa
jp
ret
dec
cmpsb
mov
jmp
mov
daa
jp
outsl
and
pop
js
insl
lret
inc
inc
fs
fldt
inc
test
adc
cmp
mov
inc
cmp
inc
mov
shrb
ret
sti
js
and
test
xchg
mov
xorl
cmpl
sbb
dec
fs
pandn
add
add
xchg
dec
jmp
std
lock
mov
insl
jle
sti
push
push
pop
mov
imul
or
pop
sub
push
loopne
fldt
insl
popf
aaa
ja
nop
add
add
aam
xchg
dec
pop
cs
push
push
xor
mov
mulb
push
xor
loope
xchg
movsl
cmp
arpl
dec
push
popf
scas
xor
mov
arpl
mov
pop
cmp
xor
xchg
iret
inc
dec
cmp
sti
rcrl
xchg
clc
clc
int3
test
std
and
int
aaa
mov
jp
mov
mov
sbb
shr
cs
push
cltd
push
out
cmc
add
clc
jg
in
gs
dec
xor
stos
xor
mov
fisttps
sbb
xchg
add
add
add
add
add
cmpsl
les
mov
cmp
movsb
nop
test
inc
movsb
add
repnz
imul
xchg
iret
outsl
sbb
and
dec
sub
enter
inc
aas
mov
lahf
outsl
cmp
ds
pop
sub
mov
ljmp
loopne
jns
roll
ds
jns
fdivp
insl
cld
out
out
mov
fcmovnu
cmp
cltd
inc
ret
rcr
das
ficompl
out
pop
out
dec
mov
incl
incl
incl
incl
xor
lock
lods
add
stos
jp
test
incb
fcmovbe
das
rolb
add
add
add
add
add
popa
push
sbb
js
into
push
cs
inc
lods
sbb
xchg
scas
fldl
int3
add
add
add
add
add
je
dec
jo
pop
or
cli
push
xchg
dec
outsb
dec
and
dec
stos
loope
test
pushf
ss
cs
insl
call
dec
imul
pop
je
call
inc
nop
sbb
or
fwait
popa
sub
in
inc
cmp
push
jnp
ret
push
aad
add
movsb
xor
xor
mov
fs
stos
aad
js
rcrb
push
add
les
int3
add
jno
and
jb
pop
pop
mov
ret
loop
sub
jge
popa
aas
dec
test
pop
sbb
loop
jecxz,pn
das
sub
clc
stos
dec
push
hlt
hlt
dec
neg
pop
jp
cmp
mov
dec
jg
mov
and
mov
push
daa
fadd
sub
movsl
jmp
pop
repnz
inc
push
or
mov
cmp
lahf
cmp
repz
sbb
xchg
add
add
add
add
add
pop
mov
push
pop
push
mov
int
push
push
jo
sbb
stos
inc
dec
sarl
rorb
mov
pop
stc
mov
push
aad
out
int3
or
fisubs
sbb
ljmp
sub
xchg
inc
lea
or
adc
sbb
orb
or
fbstp
out
cld
inc
ret
andb
dec
xor
fwait
adc
add
add
inc
push
pop
or
mov
cwtl
and
cmp
pop
mov
mov
xor
out
gs
add
add
add
add
add
ss
icebp
test
loopne
inc
fldcw
push
ss
dec
mov
cmp
outsl
sbb
dec
stc
mov
push
sbb
ss
jo
xor
xor
mov
imul
push
push
leave
dec
add
add
add
add
add
mov
nop
xlat
out
mov
or
cmp
bound
mov
lret
lea
lret
jnp
pop
xchg
xor
fsubrl
sbb
js
insb
nop
fwait
and
stc
sbb
lods
jo
pop
loopne
cmpsl
aaa
push
mov
arpl
pusha
xchg
loop
adc
arpl
fildll
das
jmp
pop
and
sbb
push
pop
fimuls
in
pop
add
jb
cld
pop
push
sbb
push
pusha
insb
in
sub
test
xor
lcall
sub
sbb
push
or
jp
sbb
fdivl
add
add
add
lods
pop
imul
repz
sub
mov
xor
iret
addr16
xlat
add
pushf
fwait
mov
mov
test
xor
jge
push
imul
in
loope
nop
add
pop
mov
sarb
lock
inc
xor
iret
cmc
orl
mov
xlat
inc
nop
movsl
rcll
pop
in
sbb
xchg
sbb
dec
fwait
popl
inc
jnp
adc
mov
cmp
aas
xchg
mov
pop
sti
in
sbb
push
lock
jg
cs
lds
pop
push
dec
fisubs
push
mov
notl
incl
xor
test
lahf
fcmovne
add
adc
addr16
cwtl
mov
mov
test
bound
mov
and
ljmp
in
fwait
mov
int3
movd
out
mov
int3
add
add
clc
popa
outsl
adc
mov
push
pop
xchg
xor
mov
aam
aas
xchg
addr16
and
sbb
cli
orl
and
jo
lock
push
or
fbld
push
mov
push
add
out
push
mov
inc
mov
arpl
jnp
sti
stc
inc
movsl
mov
lahf
push
faddl
adc
pushf
int
xchg
mov
shll
mov
ret
fdivrp
loopne
jle
daa
jg
insb
or
and
and
and
and
and
and
and
xchg
push
dec
pushf
pusha
ret
shl
adc
mov
jnp
dec
mov
add
jle
push
xchg
stos
vorps
popf
mov
sub
ja
fucomp
into
and
cld
cmp
cmp
jp,pt
mov
in
xchg
mov
and
xor
bound
pop
inc
push
fistpll
pushf
cli
jb
nop
sub
jmp
cmc
jle
mov
xchg
aad
mov
or
cli
sub
out
sbb
inc
xor
pop
fs
jge
and
and
xor
shrb
int3
mov
and
and
or
mov
adc
adc
in
sub
or
cmp
test
or
dec
in
jge
pop
push
sti
adc
inc
rol
into
std
xor
fwait
mov
icebp
lods
lock
ljmp
cmp
mov
fmul
mov
stos
das
push
in
pop
cmp
insl
cmp
in
in
cmp
adcb
push
insb
aas
and
imul
and
movb
fldcw
mov
sub
pop
sbb
xor
jg
xor
and
int
clc
or
add
add
add
aam
pusha
outsl
ljmp
mov
vpunpcklqdq
inc
inc
fcmovnbe
jg
fistps
nop
gs
mov
add
add
mov
dec
cltd
test
jle
xchg
push
fcmovnb
xchg
pop
mov
dec
mov
and
and
and
and
and
into
in
aas
test
addr16
pop
mov
dec
pop
jl
test
pusha
and
cltd
mov
dec
not
shl
cmp
int
cmp
mov
sub
push
ja
test
adc
inc
fistps
inc
adc
mov
mov
scas
xor
repnz
cld
sbb
mov
add
in
dec
lods
fs
into
sub
pop
out
cwtl
or
insl
daa
jl
int3
add
add
add
add
add
jge
mov
fimull
cmp
mov
sub
popa
pop
stos
cmpsl
jg,pt
into
inc
push
inc
icebp
mov
mov
or
shr
mov
jl
jmp
jo
xchg
adc
mov
scas
sub
mov
aad
roll
das
jl
mov
jne
popa
sahf
mov
ret
xor
dec
adc
dec
jno
cmp
shrl
repz
pop
inc
int3
push
out
cmp
adc
imul
rcl
jne
mov
data16
jl
sub
add
add
cmp
xchg
or
out
jmp
pop
sub
outsl
or
insl
fildll
add
cmp
adc
fimuls
cmc
bound
dec
fcmovb
aam
cmp
xchg
imul
mov
xor
test
lds
mov
cmp
icebp
into
bound
out
or
out
ss
rorb
sbb
clc
cmpsl
lcall
roll
cmp
cltd
popa
daa
add
stos
jge
xchg
in
test
jge
xlat
jnp
xchg
mov
scas
inc
aam
or
ret
lcall
xor
push
outsb
push
pop
cmc
mov
xchg
pop
pop
add
add
add
add
add
xchg
adc
sub
leave
push
daa
out
mov
mov
arpl
jb
sbb
in
minps
sti
xorb
push
jnp
pinsrw
add
xor
loopne
adc
addr16
adc
clc
ljmp
add
add
jns
inc
and
pop
or
adc
pusha
cmp
out
nop
add
and
or
movsl
aaa
int
pop
aas
gs
scas
add
mov
pusha
and
cmp
ja
adc
call
hlt
lock
cmpsl
jo
in
jnp
in
add
in
push
push
repz
lock
insl
fldl
jge
xchg
scas
sub
xor
nop
add
and
mov
enter
jg
add
movsl
loopne
xchg
movsl
inc
add
repz
sbb
sbb
in
stc
popf
mov
aaa
lcall
scas
dec
stos
fistpll
mov
hlt
arpl
movsb
sbb
je
and
pusha
js
add
or
mov
fmul
inc
adc
ljmp
sbb
fcompl
mov
sub
add
add
add
rcl
push
jp
stc
flds
xchg
mov
cmp
push
aad
arpl
test
pop
sbb
hlt
cli
xchg
xor
loopne
add
push
jge
imul
sbb
shrb
fwait
push
imul
movsb
addr16
sbb
lea
pop
xchg
mov
add
andl
mov
adc
dec
jno
dec
out
and
je
clc
out
fidivrs
and
mov
loop
push
cltd
cld
vmovlps
xor
data16
push
gs
fs
paddusw
sbb
push
lods
adc
pop
cmp
gs
pop
insl
adc
mov
xchg
xchg
push
movsl
aad
cmc
arpl
iret
bound
leave
xor
mov
mov
inc
lahf
sahf
js
push
stos
pop
movntq
mov
cltd
addr16
jle
incl
clc
jb
js
inc
xchg
aam
cmp
jb
jge
inc
adc
int3
add
add
add
add
dec
mov
scas
scas
fldenv
add
lret
add
fcoms
pop
aas
add
out
incb
movsb
dec
or
int3
leave
dec
mov
aaa
cmc
into
xchg
lret
inc
mov
mov
and
add
out
imul
mov
jl
int3
push
out
aaa
mov
inc
mov
jp
sub
jl
cmp
mov
xor
cmp
cmp
xchg
dec
pop
sbb
iret
cld
rep
dec
sbb
nop
xor
and
and
and
and
lea
outsl
mov
sbb
adc
adc
in
jo
mov
sbb
add
and
add
movsl
push
stc
in
push
fimull
dec
pop
inc
leave
xlat
test
dec
lds
fisubrs
mov
mov
call
dec
fstpt
rcrb
pop
in
and
movb
loop
inc
imul
fnstcw
ss
mov
mov
mov
push
mov
shll
push
cmp
idivb
adc
int3
add
add
add
add
add
add
lcall
aaa
pop
adc
cltd
decb
inc
ljmp
xchg
cmp
mov
add
scas
or
and
pop
push
sbb
xchg
xor
mov
cwtl
fiaddl
pop
push
in
lret
jecxz
ja
push
faddp
aaa
jmp
ror
pop
push
lods
pushf
mov
ret
data16
add
mov
test
jmp
aam
and
or
movsl
push
orb
xorb
mov
call
stc
mov
mov
lds
mov
sbb
adc
inc
adc
filds
xor
mov
test
and
jmp
fldl
cmc
outsl
add
add
add
jp
test
xor
movsb
push
pop
mov
pop
push
es
scas
movsb
and
ret
sahf
lret
addr16
and
jo
add
cwtl
inc
mov
mov
decb
adc
lods
mov
lret
add
add
add
add
cmp
vpaddq
cli
incl
lds
mov
and
inc
loop
in
push
rcrb
xchg
xor
inc
add
shll
pop
push
push
xor
sub
jecxz
or
adc
psraw
jo
push
or
and
cmp
push
xchg
daa
shr
std
pushl
icebp
mov
inc
inc
pushw
and
les
sbb
xchg
mov
cmp
jl
push
mov
flds
and
aaa
and
lods
cli
jns
cmp
and
int3
pop
inc
jae
sbb
cld
mov
std
and
insb
mov
inc
pop
push
sbb
add
add
in
fstpl
cmp
add
add
dec
in
add
test
imul
cli
ljmp
out
sahf
aad
sahf
insb
pushf
cmp
xor
aaa
clc
jno,pn
cld
push
mov
sub
adc
cs
mov
pop
jecxz
pusha
aad
pop
jne
test
sti
mov
mov
sbb
les
nop
mov
stc
mov
adc
xchg
ja
jmp
pop
sub
push
into
push
mov
add
add
add
add
add
add
add
fcoml
sub
xlat
lods
movsl
daa
repz
std
test
xor
outsl
jns
and
sub
jg
out
sahf
fstps
fnstsw
inc
add
inc
jle
push
popa
jbe
insl
adc
inc
jno
dec
repnz
push
mov
loope
ret
add
aam
add
jo
rcl
daa
out
inc
jecxz
lds
inc
xor
out
sub
leave
mov
ss
mov
scas
mov
push
mov
xor
int3
add
add
add
add
add
add
aas
push
shl
adc
mov
shrb
into
in
imul
mov
pop
mov
jg
inc
fs
jb
in
das
pop
outsb
std
mov
int3
cld
notl
std
popw
into
mov
insl
cmp
int3
add
add
add
iret
fbstp
mov
loop
add
add
add
add
insb
mov
push
pop
cli
cli
push
dec
popf
cltd
shll
lret
hlt
repz
mov
dec
mov
or
or
pop
jb
xor
mov
fs
add
adc
add
test
inc
xchg
inc
jnp
pop
sub
xchg
dec
aaa
xlat
into
clc
lcall
rcrb
adc
xlat
bound
xor
mov
mov
loope
inc
mov
add
add
add
add
add
add
and
test
xor
stos
jmp
adc
cmpsb
xchg
nop
movsb
test
mov
shrl
push
dec
mov
sbb
popa
dec
and
xchg
pop
test
das
in
sahf
cwtl
test
fsubl
loope
call
test
out
loope
add
loope
mov
ds
jne
addl
push
mov
mov
xor
sub
dec
or
dec
pop
mov
data16
inc
push
outsb
push
cld
movsl
loop
jns
fstl
add
jns
adc
xor
aam
test
popf
into
daa
roll
jo
and
jecxz
mov
sbb
shrb
cltd
pop
jno
movsl
inc
pop
cs
xor
sbb
fstp
pop
adc
inc
ret
and
cmp
jbe
arpl
movsl
xchg
sub
xlat
jmp
test
and
add
pop
das
pop
ret
adc
add
add
shrb
mov
cwtl
xlat
or
ss
repz
cwtl
push
orb
pop
push
ret
icebp
scas
mov
jo
imulb
mov
inc
inc
xchg
out
push
mov
adc
xchg
or
jnp
mov
dec
mov
xchg
push
push
ret
sub
idivb
pop
xchg
cmp
jne
mov
jecxz
jo
jno
movsl
rorl
dec
inc
fnstenv
pop
decl
lock
jne
adc
and
mov
fbstp
inc
fsubs
add
add
add
add
add
xchg
lcall
fcoml
pop
dec
and
mov
mov
or
xor
lret
push
lds
outsb
pop
lret
movsb
inc
ret
mov
testl
adcl
sub
cli
xlat
mov
roll
and
and
and
and
int
jg
ret
inc
push
pop
not
lret
and
fadds
and
aas
fwait
push
mov
in
mov
loop
out
jno
insl
sarl
bswap
ret
jge
loopne
flds
mov
jae
sbb
repnz
popf
cmp
sub
imul
inc
icebp
jmp
int3
decl
mov
and
and
and
and
jmp
imulb
and
cs
sarb
aad
push
cmp
xor
and
and
and
jns
sti
shll
nop
mov
dec
jne
hlt
sbb
pushf
je
filds
dec
repz
scas
mov
jmp
cmpsb
cmp
sub
addl
enter
mov
mov
ret
dec
mov
nop
mov
out
pop
push
dec
sbb
inc
push
jns
mull
mov
andb
sub
sbb
lds
sti
or
insl
fstl
add
add
add
add
add
add
mov
pop
mov
inc
dec
push
das
jae
push
pusha
push
inc
push
mov
jmp
ljmp
or
jmp
int3
lcall
std
adcl
fbld
ljmp
in
scas
call
mov
fistpll
mov
inc
pop
and
jb
xchg
shrb
lods
mov
stos
pop
out
dec
leave
sub
loopne
xorl
std
and
mov
cmp
push
popf
insb
pusha
pop
jb
mov
popa
negl
int3
add
add
roll
push
fs
cmp
int3
add
fbstp
stos
or
mov
fsts
insb
repnz
jmp
pop
jbe
fstl
cmp
mov
addr16
cmp
xor
cmp
call
pop
pop
arpl
sub
dec
sbb
scas
jg
xor
mov
push
xor
repnz
inc
jo
sbb
es
sub
push
stos
push
xchg
inc
scas
insl
bound
addr16
test
jb
push
or
lcall
out
fcoml
jl
inc
jp
sti
jo
xlat
add
add
jl
incl
pop
cmp
push
mov
add
in
int
out
dec
inc
push
mov
lret
mov
jmp
adc
mov
divb
sbbb
jecxz
sbb
fcos
es
mov
jbe
inc
cmp
push
or
pusha
call
insl
outsb
fidivrl
pop
je
sub
jnp
movsl
in
jecxz
or
and
fdivrs
jmp
stos
and
js
gs
mov
nop
sbb
add
add
add
add
cmpsl
in
mov
mov
clc
lock
ret
adc
jmp
dec
cmp
mov
cs
hlt
jo
sub
dec
xor
cmpsl
mov
xor
lret
mull
xor
cld
gs
inc
add
sub
or
or
popf
and
ljmp
dec
xchg
add
shl
jbe
mov
shrl
mov
push
add
add
add
add
add
mov
jae
imul
pop
mov
mov
jge
jns
jecxz
rclb
mov
sub
popa
push
pop
jo
or
fisttps
jg
push
or
sub
iret
mov
sbb
out
std
in
pop
xorl
xor
jns
adc
sbb
xor
mov
or
sub
ret
add
add
add
add
cs
int3
add
pushl
inc
movsb
fldcw
inc
mov
adc
icebp
mov
mov
stc
adc
mov
mov
xchg
int
test
sbb
cwtl
loopne
into
inc
adcb
mov
inc
mov
sub
and
and
mov
adc
cmp
inc
mov
sbb
cs
fwait
xor
jecxz
xlat
popa
push
fldl
push
add
add
add
add
add
add
add
push
repnz
test
pop
ss
sbb
lea
arpl
xor
lahf
push
mov
das
and
adc
pop
dec
push
enter
xchg
inc
dec
dec
jecxz
mov
inc
add
ja
fdivrs
lock
outsl
in
in
pushf
jns
das
lret
cmp
push
stc
pusha
pop
test
mov
adc
mov
dec
ficoml
xor
push
jecxz
mov
cmp
sub
daa
sub
xor
xchg
in
fidivrs
nop
lock
pusha
pop
out
test
ret
out
arpl
cmp
push
call
and
mov
popa
popf
mov
sub
cli
mov
xor
hlt
sub
cwtl
arpl
xchg
add
dec
mov
xor
ljmp
or
xchg
fnsaves
mov
outsl
stos
popf
repz
popf
repnz
inc
loope
mov
sub
mov
sub
jno
mov
es
in
das
and
cwtl
adc
xchg
ret
test
mov
add
add
cwtl
rcl
fimull
inc
lret
std
jne
pop
inc
fstps
xor
jg
mov
jle
fnstenv
jb
loope
negb
ss
cmp
lea
cmpsb
xor
aaa
loop
and
inc
ret
int
mov
mov
adc
push
addl
arpl
or
shlb
sub
or
lods
jnp
xor
mov
addb
into
jecxz
jge
popa
int3
pop
sti
mov
sbb
je
inc
mov
sahf
inc
sahf
pop
ds
ret
pop
rol
popf
or
push
test
inc
rolb
push
or
and
dec
out
inc
js
aas
mov
add
inc
fisubl
js
out
nop
add
xchg
cmpsb
mov
sub
xor
scas
cmp
push
mov
lcall
xchg
cli
stos
jnp
pop
and
arpl
push
xchg
xor
mov
dec
cmpsl
sub
leave
dec
adc
movsl
out
out
aas
sbb
enter
mov
setae
rep
jge
jle
dec
and
cwtl
lea
lret
in
mov
aaa
in
mov
cmc
xorb
jne
mov
cmpsb
testb
adcb
enter
xchg
movsl
out
and
xor
jmp
sub
or
mov
lds
in
adc
inc
inc
dec
adc
add
add
add
add
add
add
insb
fildl
cmp
xorl
call
and
sti
notl
jbe
mov
push
push
xlat
dec
cwtl
scas
mov
push
mov
pop
insl
in
repnz
loope
and
jae
imul
insl
shll
out
and
addr16
pop
add
cmpsb
jg
outsb
loope
pushf
aas
clc
and
out
btr
cwtl
mul
add
add
adc
xor
ficoml
mov
fdivl
lret
cs
or
arpl
scas
cli
jl
enter
in
cwtl
mov
add
cmp
cs
fnstcw
mov
mov
cmp
lods
ret
pop
and
sub
lcall
inc
pop
pusha
inc
out
adc
inc
lcall
out
pop
lods
mov
inc
ret
pop
out
sub
jne
aad
cmpb
int3
fwait
sub
sub
or
shlb
adcb
jae
mov
aam
por
mov
ss
xchg
movsb
mov
mov
jp
repnz
add
add
or
int3
push
jne
mov
mov
rcr
insl
repz
cmp
xchg
daa
stos
movsb
mov
cmp
lds
das
pop
mov
test
cld
xor
hlt
sub
cmp
inc
cmc
enter
dec
pop
inc
clc
mov
in
inc
ja
aaa
fnsave
sarb
in
xchg
or
jbe
rcrb
sahf
dec
std
sub
dec
xchg
mov
cmp
pop
pushf
cmp
fisubs
sbb
fstl
mov
insl
lret
incl
jge
add
rcrb
idivb
fwait
adc
incl
incl
incl
fsubrs
push
pop
rcrl
cmp
sub
ds
sarl
sub
mov
ret
insl
and
pusha
sub
ds
xchg
cmp
imul
stos
fsub
loopne
test
andb
pop
leave
and
sbb
inc
popf
test
or
ljmp
inc
vmread
out
call
dec
and
xor
mov
jmp
pop
lcall
mov
mov
pusha
inc
xchg
jae
ja
cli
add
jge
sub
int3
add
add
add
add
xchg
or
in
mov
fwait
sarb
jle
mov
adc
test
enter
mov
sarl
out
adc
push
outsb
xor
mov
outsl
dec
js
pusha
and
lret
lock
xlat
aad
add
add
in
mov
push
pop
icebp
scas
mov
jb
call
sbb
jb
icebp
mov
xchg
adc
fucomi
mov
stos
push
aad
lods
movl
jle
add
add
push
incb
push
jno
and
jno
divl
lcall
imul
push
das
nop
add
add
roll
sbb
mov
mov
mov
jl
jnp
pop
int3
fnclex
pusha
scas
ds
push
jne
cmp
jp
add
mov
in
out
call
dec
test
mov
aam
sbb
out
cwtl
scas
paddq
xchg
adc
out
ss
xlat
xchg
fcomi
or
fcomi
in
sub
lods
out
out
mov
xchg
add
jp
shrl
xchg
hlt
clc
mov
data16
pushf
pop
into
sahf
rorb
adc
xchg
fnsave
fsubrs
imul
jg
cmp
shll
mov
add
add
pop
test
jge
dec
mov
inc
orb
pop
andl
and
add
add
add
add
fisttpll
test
dec
dec
ret
mov
xorb
pushf
inc
mov
mov
arpl
jge
push
rolb
cli
pop
add
cmp
sub
add
jg
bound
cmp
xchg
add
bound
inc
push
scas
pop
or
xor
out
or
outsb
cmc
incl
cmp
pop
test
jecxz
lods
mov
test
in
inc
insl
sbb
gs
cltd
movsl
inc
mov
insl
std
frstor
and
sub
and
and
in
fadds
inc
push
xchg
xchg
nop
adc
repnz
add
jp
loope
movsl
xor
and
popf
add
ja
out
enter
push
lcall
test
xor
fs
test
push
push
mov
jle
cli
stos
test
xor
inc
imul
test
in
in
fsubr
unpckhps
outsb
push
sub
les
cmp
pop
mov
add
cmc
data16
insb
sbb
jle
cmp
scas
mov
jmp
adc
addl
fcompl
or
add
add
sbb
lods
test
pop
js
testl
nop
add
sub
mov
adc
xor
xchg
cmpsl
test
ds
fiadds
cwtl
fnstcw
fwait
push
mov
js
aam
jmp
xor
es
mov
clc
insb
inc
call
fldcw
inc
cli
add
stos
sub
jns
xchg
icebp
cmp
inc
cmp
inc
mov
xchg
xchg
mov
stos
push
dec
cli
inc
sti
inc
aas
dec
push
lcall
std
movsb
adc
cmp
jl
lcall
mov
pop
mov
dec
inc
jg
or
fwait
mov
cmpsl
lcall
aaa
rorb
mov
and
and
and
fdivs
xor
test
mov
repz
push
xor
loope
loope
fwait
cmp
je
push
mov
ja
and
int
or
cmp
push
mov
adc
pushf
xchg
push
push
shll
lahf
stc
out
je
dec
stc
cmpsl
push
mov
push
loope
inc
outsb
pop
test
rorb
mov
mov
iret
xor
scas
mov
icebp
push
into
fadds
push
negb
pop
in
mov
lds
jg
xor
sahf
imul
icebp
dec
daa
bound
lds
cld
ds
sbb
rol
and
and
and
and
and
and
and
jl
loopne
xchg
lods
addr16
cmp
xchg
mov
or
dec
cmp
out
fiadds
sahf
and
je
std
ret
adc
je,pn
mov
and
lock
cmp
pop
mov
adc
cld
roll
mov
and
sbb
or
mov
pop
add
inc
xchg
mov
push
addb
inc
jecxz
lret
insl
dec
sarb
stos
push
and
incl
out
adc
daa
in
mov
jle
lods
mov
jb
addb
or
repnz
mov
and
jge
push
mov
outsl
addb
add
add
add
enter
pop
mov
aaa
mov
std
imul
insl
rcll
adcb
mov
adc
lret
in
cmc
mov
je
jmp
out
out
mov
pop
add
incl
incl
incl
int3
ljmp
ret
sub
fwait
std
and
ljmp
push
test
pop
pop
mov
rclb
out
mov
arpl
out
pop
sub
es
mov
inc
and
in
in
dec
sahf
push
jne
icebp
mov
cmp
scas
mov
and
lret
cmpsl
fsub
mov
jne
outsb
jp
sbb
xor
mov
adc
out
sbb
dec
adc
sti
gs
push
xor
xor
sub
or
fidivl
icebp
lds
in
push
push
push
or
addb
iret
cmp
mov
and
and
and
and
out
push
cmpsb
add
cmc
push
frstor
and
fdivrp
inc
jmp
xchg
xor
xor
popf
scas
out
mov
xchg
jp
mov
aad
cmp
cltd
scas
pusha
pop
dec
subb
push
lret
mov
and
add
cmp
mov
sub
push
pop
jp
add
add
add
add
add
add
fwait
or
xor
hlt
roll
jno
cli
and
stc
rcrb
cmp
add
add
add
add
add
dec
add
xchg
pop
push
imul
loope
aas
push
mov
push
add
xchg
popa
out
lods
in
lods
adcb
cmp
je
pop
pop
push
mov
aad
int
das
lock
inc
js
arpl
mov
and
add
xor
daa
jno
out
or
loopne
jo
sub
push
inc
scas
xlat
lcall
inc
testb
cli
bound
jp
ret
leave
clc
and
sbbl
add
add
add
add
adc
into
pop
xchg
jl
outsb
mov
xor
xor
stc
inc
outsb
out
push
popl
and
movsl
adc
add
add
add
aam
or
or
or
or
add
subb
cmp
nop
js
mov
push
daa
pop
fwait
sbb
pop
dec
dec
push
jne
inc
xchg
and
jb
add
shrb
xchg
jmp
repnz
add
outsb
call
loop
xor
mov
mov
mov
and
and
ss
mov
out
ret
pushf
fs
pusha
dec
xchg
xchg
testl
adc
cmpl
push
mov
mov
add
idivl
and
and
and
and
and
and
shll
in
push
mov
jge
inc
out
or
mov
inc
or
xor
and
arpl
sti
pop
dec
adc
insb
sahf
stc
xchg
xchg
inc
push
fs
lcall
test
imul
inc
or
rolb
rcll
in
pushf
or
clc
mov
das
dec
and
and
and
and
call
fsubp
mov
arpl
int3
push
cli
into
jecxz
sbb
dec
sahf
mov
les
movsl
or
push
aam
lea
push
add
add
mov
cmp
add
jae
xor
and
jmp
into
mov
mov
mov
mov
dec
jbe
and
inc
push
or
ljmp
push
inc
mov
repz
jmp
dec
in
insb
ds
ljmp
jecxz
mov
push
push
outsb
jns
or
fildll
adc
inc
js
orl
shrl
int3
leave
nop
adc
popf
jle
ficompl
mov
iret
jmp
fistl
mov
add
add
add
idivb
dec
dec
and
test
lds
mov
jp
dec
out
mov
and
shrl
popf
push
xchg
add
out
out
lahf
movsb
xor
mov
sbb
es
lds
dec
loop
add
xchg
popa
pop
sub
nop
mov
jbe
xchg
leave
push
adc
arpl
dec
pop
and
jecxz
sbb
jge
xor
push
push
push
mov
jge
inc
xchg
pop
gs
adc
push
sub
sarl
mov
or
mov
loope
hlt
and
dec
ficomps
inc
inc
pop
mov
ficomps
push
sub
outsl
imul
and
rcr
int
mov
notl
xor
and
and
and
stos
and
aam
mov
sub
jno
icebp
sbb
shl
xchg
daa
fisubs
mov
sbb
adc
mov
test
aad
js
dec
rcrb
or
mov
inc
int
rol
xchg
xchg
sbb
es
add
dec
mov
xorl
adc
add
add
add
insl
cmc
mov
nop
push
sbb
addb
cltd
adc
lahf
sarl
inc
jnp
cli
in
mov
xchg
fbld
add
imul
test
mull
or
inc
dec
ljmp
incl
incl
incl
incl
incl
decl
movswl
movsl
dec
fistpll
movsl
jecxz
and
adc
aam
test
add
nop
mov
jp
dec
xchg
cmp
lret
shrb
fildll
inc
andl
and
es
adc
sbb
pop
mov
je
dec
pop
mov
push
ja
call
fdiv
das
rolb
jecxz
setno
int3
add
add
aam
mov
adc
sub
aaa
mov
adc
jle
mov
data16
insb
imul
mov
pop
inc
into
pop
xchg
xchg
or
mov
loopne
mov
pusha
jbe
xchg
fldl
mov
push
mov
sti
clc
mov
incl
ss
and
and
and
and
and
and
cmp
mov
push
push
cmpb
fldcw
imul
ds
daa
and
rcrl
mov
mov
pop
shrb
or
xchg
ret
aad
add
clc
stos
aas
jbe
inc
cmp
mov
les
test
out
jns
incl
incl
incl
incl
incl
incl
adc
xor
pop
pop
mov
flds
cwtl
mov
jae
cvtdq2ps
xchg
das
jbe
jo
movsl
ret
pusha
and
pop
cld
push
push
add
cmp
xchg
inc
sub
rcr
imul
mov
pop
fs
ficoml
decb
mov
repnz
out
out
aad
out
sbb
and
lcall
nop
add
add
mov
sub
sub
pushaw
cmp
pop
mov
and
and
and
and
and
mov
sahf
les
push
loope
iret
shrb
sbb
ja
sub
and
mov
loop
cmpl
roll
sub
cmp
rcl
jle
push
cmp
and
and
and
and
sub
lds
aas
xor
add
mov
outsl
or
psrad
sbb
push
scas
sub
lds
shl
movsb
add
add
movsb
popa
dec
pop
adc
ja
stc
aad
js
pop
popf
insl
mov
cli
imul
loop
xor
jl
in
aam
mov
pop
dec
mov
push
mov
popf
xor
push
test
and
repz
imul
dec
mov
cmpsb
sub
in
xchg
or
lods
leave
js
or
shr
dec
push
shrl
or
int3
add
add
add
sub
inc
das
std
mov
or
int
push
pop
ss
decb
icebp
pop
push
push
insb
sub
inc
aam
arpl
sbb
dec
pusha
fistpl
mov
dec
jl
test
xor
mulb
jb
jae
ret
enter
jmp
in
cld
or
and
and
and
and
and
and
xlat
xchg
mov
mov
cld
loop
xor
shlb
in
dec
xchg
sbb
loopne
cltd
mov
fwait
aaa
sub
sub
pop
sbb
pushf
les
push
jle
loope,pt
sub
lods
mov
divl
aas
add
out
adc
cs
push
pop
push
sbb
xchg
dec
pop
push
push
adc
aaa
xchg
test
jne
in
mov
pop
dec
gs
mov
outsb
cmp
mov
or
sti
xchg
rcl
ss
push
roll
add
xchg
test
mov
test
inc
fistpl
rcrl
sahf
adc
imul
cs
add
add
add
add
add
add
pop
mov
lahf
mov
decl
inc
cmp
ja
imul
decl
jmp
xchg
sbb
cwtl
fsubrl
daa
lods
push
or
lcall
mov
aaa
call
xchg
sbb
mov
ffreep
xor
es
jbe
inc
mov
add
add
add
add
add
add
add
notb
js,pn
sub
iret
pop
pop
and
aaa
adc
mov
rclb
stos
iret
mov
sub
mov
lcall
ret
int3
movsl
lret
cmp
je
adc
and
mov
mov
loopne
pop
ss
mov
sub
mov
and
addr16
pop
sbb
fs
movsb
sub
add
loop
pushf
gs
rcr
add
sub
insl
inc
sbb
pusha
test
push
aas
cmp
mov
lret
rcll
push
hlt
aas
mov
outsl
mov
sbb
mov
orl
in
pushf
sahf
adc
add
add
add
adc
inc
dec
cld
test
popa
xchg
jnp
int3
add
add
add
add
add
add
das
cli
stc
pusha
sbb
dec
inc
pop
jle
pushf
xchg
mov
stos
gs
xchg
adc
mov
pop
fst
add
out
or
jl
movsb
mov
sbb
test
mov
or
sbb
pop
or
std
mov
mov
mov
add
insb
xor
rclb
cmpsl
dec
nop
push
mov
daa
cmp
fwait
and
hlt
loopne
mulb
mov
mov
xchg
fwait
mov
sub
pop
push
sbb
sbb
inc
jecxz
shll
add
push
fldl
incl
ljmp
dec
jbe
sbb
mov
sti
test
cmpsl
pusha
or
push
or
imul
int3
std
ja
cli
loopne
out
mov
mov
ljmp
sbbl
sbbb
aad
fnstcw
mov
or
and
cli
das
sub
jnp
rcl
stos
fwait
cmp
lcall
and
and
and
pop
cmovs
cmp
sbb
xchg
sub
xor
mov
adc
xor
hlt
pop
popf
xor
pop
lcall
push
mov
push
fadd
daa
icebp
inc
roll
mul
test
fwait
pop
sbb
jbe
mov
cli
jle
or
add
into
pushf
lock
ljmp
lret
ds
push
mov
push
and
xchg
or
mov
iret
fdiv
cld
push
push
push
das
pop
cmp
or
jge
int3
scas
cwtl
push
jmp
fldenv
cmp
jp
jbe
filds
out
ret
pop
mulb
jae
xchg
add
hlt
scas
push
lods
push
jp
mov
daa
jl
adc
jne
push
jne
mov
in
js
cmp
mov
sbb
pop
outsb
push
mov
xchg
fmul
sahf
pop
mov
es
out
push
fwait
lods
fwait
pop
cmpsb
jle
and
and
and
and
aad
xchg
adcl
or
fidivrs
push
cli
push
jbe
iret
cltd
mov
cltd
cmp
ss
std
xchg
mov
push
jmp
in
jecxz
or
jne
pop
popa
and
cmp
xchg
negb
push
adc
jge
lcall
jecxz
gs
dec
sahf
xchg
lcall
aam
adc
testl
inc
xchg
mov
jbe
or
test
add
add
add
add
adc
sub
cmp
or
mov
push
pop
int3
repz
xchg
add
lea
loope
adc
xlat
dec
je,pt
ds
iret
fwait
jne
sti
add
or
adc
cmp
jmp
mov
jo
cmp
aas
and
bound
test
aaa
aam
es
mov
xchg
xlat
incl
int3
add
add
add
xlat
pop
cmp
or
out
mov
mov
hlt
xchg
push
inc
pop
iret
sub
adc
sbb
jl
arpl
or
push
daa
mov
xorl
int3
mov
mov
fnsave
jae
pop
pop
mov
shlb
dec
addl
sbbl
sbb
xor
stos
jbe
hlt
out
insl
loopne
mov
cmc
sub
cmpsl
loope
add
add
add
add
repnz
cmp
outsl
jno
or
sub
rcll
test
adc
and
stos
sub
xor
cli
pusha
sub
daa
and
rclb
adc
and
movsl
nop
and
push
popa
sub
lret
mov
fisttpll
filds
sub
xor
push
rcpps
fisttpl
adc
push
mov
pop
add
add
add
add
add
add
add
add
inc
mov
lods
loopne
add
or
pop
xchg
mov
js
dec
jbe
or
or
pop
mov
sbb
adc
mov
popf
mov
leave
cld
insb
sbb
lret
sahf
dec
ja
das
push
testb
mov
inc
sub
xor
std
pop
lret
and
sbb
pop
cmpxchg8b
jne
popf
imul
mov
test
jbe
test
jne
iret
sbb
pop
loopne
testl
inc
clc
push
push
and
xor
dec
mov
ficomps
ja
mov
cmp
adc
js
dec
add
xchg
and
and
in
push
adc
and
pop
dec
lock
push
data16
add
inc
jbe
lock
jo
out
adc
xchg
adc
mov
add
stc
sub
call
in
mov
iret
insl
and
jbe
lret
lods
ds
pusha
pop
pop
clc
dec
mov
aas
sti
nop
ret
push
in
lret
cmp
dec
outsl
inc
outsl
mov
sub
push
cwtl
sbb
sub
int3
cmc
pop
add
add
add
add
add
add
push
push
pop
fldt
stc
mov
inc
mov
sahf
xchg
jne
cld
pop
inc
shrl
imul
mov
fwait
enter
jle
addr16
mov
add
scas
hlt
and
mov
push
push
pop
push
jecxz
push
fs
daa
push
dec
adc
push
mov
hlt
sbb
jecxz
lea
cmpsl
xchg
dec
addr16
pop
faddl
cmp
cmpb
mov
lds
cs
imul
or
arpl
or
push
ret
add
add
add
add
add
add
fidivs
sbb
lret
xor
push
adc
push
mov
fiadds
jo
lcall
mov
push
dec
push
sub
push
push
or
push
inc
sti
arpl
shl
fidivl
xor
pop
mov
mov
loopne
in
push
neg
cmpb
push
std
jae
arpl
clc
xchg
jo
dec
ret
sbb
sbbl
push
xor
out
in
into
lret
loopne
int3
add
add
add
adc
ret
mov
mov
repz
lcall
mov
cltd
ss
push
mov
sbb
pusha
cwtl
inc
add
add
loop
dec
adc
inc
sahf
in
sti
repz
mov
xorl
mov
jo
push
sub
adc
int
loope
pop
add
sti
ud0
pop
aam
mov
mulb
popf
adc
pop
push
sub
dec
jae
cld
lret
nop
add
adcb
sbb
jmp
out
xlat
popa
ljmp
scas
test
pop
inc
mov
insb
mov
xor
scas
and
fldcw
addr16
mov
add
lds
push
sbb
stc
mov
std
push
pop
jmp
std
insl
jecxz
xor
lret
jecxz
test
add
add
add
add
add
add
add
and
dec
stc
xchg
mov
adc
dec
pop
push
stos
sbb
mov
push
mov
pop
mov
adc
xlat
xor
mov
add
cld
movsb
popf
in
in
add
movb
dec
or
jae
xchg
rcrl
nop
mov
pop
pop
sahf
aas
iret
js
push
nop
ljmp
push
dec
dec
xor
push
out
sub
cli
lds
jp
popa
bswap
push
ficoms
inc
ficompl
ret
daa
pop
mov
mov
push
xor
inc
mov
data16
movsl
aam
mov
nop
clc
xchg
cs
outsl
dec
sub
cmp
loopne
iret
nop
push
mov
cmpl
int3
add
add
add
add
jle
repz
insl
sbbb
and
and
and
and
and
and
pop
stc
pop
mov
xchg
mov
mov
in
mov
adc
pop
mov
jecxz
das
sahf
inc
fld
mov
or
pop
push
sti
loop
xlat
repnz
and
inc
and
sahf
or
test
dec
xor
xor
sbb
inc
daa
incb
jae
mov
xor
clc
and
fsts
insb
or
add
sbb
push
call
les
push
aam
icebp
sub
stos
jg
imul
add
leave
xor
inc
mov
fsub
sub
add
outsl
dec
cld
cwtl
mov
mov
incb
push
xor
in
add
pop
popa
push
push
add
add
popa
push
ja
ja
insb
popa
je
js
add
insl
add
add
ljmp
inc
add
jne
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
xor
add
cli
xor
add
shlb
add
add
add
add
mov
add
xor
add
cmpb
add
add
add
push
cmp
add
add
xor
add
add
je
add
mov
add
pushf
add
test
add
mov
add
enter
fidivl
add
call
add
add
add
adc
add
and
add
xor
add
inc
aaa
add
pop
aaa
add
jb
add
mov
add
mov
aaa
add
aaa
add
out
aaa
add
add
add
adc
add
and
add
xchg
cmp
add
add
add
add
and
add
sbb
add
or
add
dec
add
add
add
cmp
push
popa
jo
push
outsl
jae
je
outsl
outsb
add
add
je
gs
jo
popa
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
popa
add
jne
push
jb
outsb
je
jb
push
add
inc
gs
outsl
bound
sbb
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
dec
jo
outsb
push
jb
outsb
je
jb
add
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
mov
je
jb
arpl
jae
pop
add
insl
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
popa
jo
jb
add
adc
dec
gs
jo
insb
insb
outsl
arpl
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
push
je
jb
jne
dec
outsb
outsw
push
add
add
je
gs
imul
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
inc
popa
fs
jb
je
push
je
add
push
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
testl
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
insb
push
outsb
ja
outsb
add
gs
imul
je
outsl
fs
gs
imul
add
mov
push
jb
arpl
fs
jae
add
push
add
fs
imul
sbb
add
sbb
add
addr16
sbb
stos
repnz
cmpsl
sbb
stc
test
sbb
adc
fiadds
and
fldcw
jb
aad
insb
cltd
xor
loope
or
in
xor
adc
into
out
mov
pop
mov
mov
hlt
adc
inc
jae
xor
xchg
movsb
adc
lret
mov
xor
and
pop
pop
int
cmpb
pop
inc
in
xchg
jmp
popa
or
out
das
jb
js
cmp
jg
dec
lods
mov
nop
jo
in
repnz
scas
shll
icebp
cmp
or
pop
mov
xor
jae
inc
fsubs
rolb
aad
xchg
cmpsl
inc
test
lret
jecxz
faddl
jne
hlt
inc
data16
test
cmc
stos
notl
ss
add
cmp
or
aas
rcll
lods
or
pushf
hlt
out
push
lds
jge
inc
shll
mov
js
popf
pushf
in
repz
and
dec
sarb
inc
add
adc
lahf
inc
cmpsl
scas
sub
push
outsl
and
ja
mov
jo
mov
nop
add
xchg
cmp
jl
out
ficomps
pop
mov
fisttpl
add
inc
and
jmp
fistl
sbb
push
jg
dec
or
aam
add
addr16
pop
mov
cltd
xchg
push
dec
or
sbb
mov
pop
pushf
ret
roll
fcomi
inc
jb
leave
push
in
pop
les
repz
cmpsb
movsl
sbb
add
popf
inc
shrl
movb
lcall
in
scas
fadds
cmp
std
insl
lcall
shlb
pop
call
adc
jo
fsubrs
xlat
adc
sbb
or
and
add
lock
cmpsl
popf
dec
adc
adc
or
arpl
icebp
lret
xchg
popa
loope
loope
xor
adc
fwait
aad
pusha
rorb
int
sbb
adc
in
push
ret
mov
sub
lret
sbb
push
rep
cmp
out
add
push
push
jno
repnz
adc
mov
mov
ret
cmpsb
shll
repz
push
xchg
push
add
repz
nop
sbb
dec
ret
inc
push
xlat
push
xchg
repz
dec
out
add
push
test
xor
lock
adc
dec
dec
push
ljmp
scas
rcrb
sub
sub
fsubrl
dec
out
add
js
aad
rorl
aad
sarl
ret
inc
aaa
shlb
push
gs
nop
pop
push
push
stos
repz
es
loopne
out
jne
mov
add
xchg
hlt
movsl
dec
mov
jns
out
sub
ret
inc
loop
add
sbb
lds
adc
add
movsl
ret
lret
push
jmp
repz
xlat
aad
std
cwtl
mov
sarb
mov
sbb
cmpsb
jne
mov
xchg
shll
div
ret
push
mov
aaa
mov
not
cli
pop
rcr
out
ret
xor
shl
pop
cmpsl
movsl
pop
xor
push
mov
inc
les
flds
mov
addr16
call
sub
pop
adc
aad
xchg
add
dec
fwait
std
or
xchg
push
sti
aaa
rorb
add
aam
cmpsb
sbb
rcrb
aam
inc
popa
cmc
insl
les
or
add
ret
int
push
aam
cmp
adc
xchg
mov
pop
push
cmp
hlt
dec
push
mov
cli
xchg
mov
lock
enter
mov
mov
addb
mov
jbe
shr
fstp
dec
jl
cwtl
pop
in
rclb
movsb
mov
in
aad
lods
sbb
and
enter
lds
jecxz
pop
fnstsw
into
in
les
sti
mov
jl
out
jecxz
test
mov
aad
fcomps
sbb
in
dec
pop
mov
inc
push
aaa
push
push
and
mov
pop
xor
shll
and
mov
jbe
rolb
cs
int
pop
and
inc
sbb
ds
aam
fcmovne
into
mov
push
mov
cmpsl
in
dec
pusha
dec
es
pusha
nop
sbb
out
es
mov
push
insb
and
ret
dec
xor
lahf
mov
mov
lds
jle
mov
cwtl
dec
icebp
xor
shl
and
cmc
sbb
mov
inc
sub
sub
movsl
lds
popfw
in
adc
push
loopne
add
xchg
leave
sbb
lret
push
or
dec
je
xor
pop
test
xchg
sub
push
or
negb
lds
stos
mov
cmc
or
jns
aam
movsb
jg
xor
and
sub
arpl
dec
pop
xchg
mov
jecxz
mov
push
xchg
clc
in
cmp
dec
out
ret
or
cmp
and
lods
and
xor
mov
sbb
push
jo
clc
adcb
cmp
or
inc
mov
vmovq
cs
jge
repnz
push
sbb
aam
int3
mov
pop
or
aad
xor
ss
jo
inc
push
jne
jle
xchg
push
push
test
in
orb
pop
inc
mov
dec
rorb
inc
int3
shll
pop
enter
xor
pop
dec
ret
mov
cmp
test
push
fdivrs
dec
xchg
push
sub
jo
adc
jnp
lock
into
dec
lcall
stc
pop
mov
xlat
push
xchg
mov
xor
fwait
pop
adc
in
jmp
and
lock
add
loope
cmpb
ret
test
mov
testb
cmp
imul
lret
push
shll
hlt
setb
add
and
rcrl
push
push
mov
divl
jle
dec
repnz
jae
xlat
into
sub
dec
repnz
mov
sub
sahf
notb
insb
lahf
aam
xor
sti
ret
dec
mov
push
or
push
sti
push
out
in
and
jae
in
out
xlat
sub
lds
cld
fsin
xlat
cmp
and
ja
add
idivl
aas
aam
cld
cmp
push
or
clc
loopne
sbb
xchg
aad
jnp
xlat
clc
popf
neg
in
or
daa
push
dec
xor
clc
lods
enter
imul
in
sti
clc
mov
fidivrs
in
mov
cwtl
int3
pushf
popa
stos
and
in
mov
lea
push
jo
and
out
lock
dec
fstpt
ja
cmc
popa
test
std
push
sbb
mov
in
clc
aad
dec
negl
adc
ficoml
shrb
adc
xchg
cmp
jmp
or
mov
jg
sti
fucomp
sbb
jp
mov
fcomps
pop
cmp
jae
rclb
ficoml
mov
mov
fsubr
mov
cmp
rcr
adc
xor
or
pop
in
scas
repz
adc
movsl
cmp
push
stos
pop
sub
outsb
and
fsubr
pop
sub
jecxz
sub
in
and
adc
loope
lock
xlat
stos
in
sub
dec
ret
and
and
dec
cli
mov
aas
fwait
sbb
jecxz
or
call
addl
nop
push
cmpsb
jns
ss
lahf
stos
push
out
push
cmp
pop
pop
adc
or
mov
enter
xor
jecxz
ss
add
lret
push
xorb
jb
test
xor
outsb
frstor
push
mov
and
jne
or
sbb
mov
sarl
jle
lret
mov
add
outsb
mov
mov
mov
xchg
cmc
inc
fimull
insl
xchg
ljmp
inc
nop
cmp
jp
adc
dec
add
pop
push
jno,pt
sti
cmp
mov
xchg
or
mov
loopne
hlt
adc
sbb
dec
inc
arpl
pop
mov
lock
sbb
test
data16
loopne
jmp
and
xchg
mov
pop
and
adc
ds
adc
push
add
add
add
add
xchg
push
pusha
outsb
mov
ficoms
insb
inc
ja
sbb
sub
outsb
and
fwait
ljmp
call
mov
and
fldcw
xchg
loopne
adc
int
insl
sbb
pop
mov
cld
test
lods
mov
xorl
pusha
cmp
jne
mov
popa
fwait
sbb
out
lahf
call
cld
enter
xchg
decl
inc
xor
subb
dec
cld
add
pop
and
popa
jcxz
icebp
leave
outsl
es
jmp
imul
int3
add
add
sbb
adc
cwtl
lods
mov
inc
pusha
adc
shr
dec
add
add
add
loope
stos
popf
in
pop
jo
mov
dec
ret
add
jge
push
jmp
stos
push
stc
cs
or
lahf
xchg
repnz
inc
mov
scas
jae
scas
inc
mov
xchg
xchg
jge
aad
push
mov
and
mov
push
cmp
stos
movsb
fs
mov
loope
mov
loop
mov
insl
dec
out
lcall
outsl
inc
lret
clc
lods
pop
jbe
and
and
and
and
and
stc
int3
mov
lods
dec
adc
mov
cmc
mov
push
pop
xor
inc
pop
sub
decl
cmp
sbb
aas
mov
push
in
sub
inc
mov
adc
fsubl
divb
xchg
in
in
or
es
bound
jne
xchg
movswl
push
cmp
mov
or
sarb
lods
dec
xor
cli
and
xor
ja
adc
push
ja
xor
add
mov
and
pop
add
add
ret
cmp
inc
sub
ret
and
inc
sarl
dec
movsb
pop
xor
lea
subl
add
aam
mov
sbb
pop
mov
push
xorb
inc
adc
rcrl
daa
test
fstpt
mov
idivb
mov
xchg
icebp
fsubrs
data16
and
shrl
fadds
jo
imull
xchg
icebp
addr16
shrb
shlb
add
add
add
add
pop
and
cmc
mov
push
sub
cltd
in
rcrl
mov
outsl
arpl
mov
push
call
fsubr
cmp
or
fs
jmp
fimull
notl
dec
jecxz
adc
shrl
sub
mov
push
jg
add
mov
fdivrs
cmp
mov
sub
popa
movsb
xchg
sahf
test
test
push
daa
clc
cld
testb
leave
jl
adc
sub
test
pop
sahf
sub
incl
incl
incl
incl
incl
call
sub
fisubs
ret
push
imul
add
add
add
add
add
add
add
lock
adc
cmp
push
dec
out
pop
sahf
push
xor
jne
mov
and
aaa
jmp
and
and
and
sub
int
add
add
add
add
add
add
add
fdivs
lods
jmp
add
or
rcr
movsl
in
xor
mov
int3
mov
mov
daa
cmpsl
mov
push
sbb
xor
mov
and
ret
and
cli
das
mov
lcall
jo
sbb
pop
popa
jp
movb
scas
sbb
mov
add
test
xchg
mov
and
xor
fisttps
adc
scas
mov
daa
test
test
jmp
jl
inc
enter
ljmp
lock
xchg
in
stos
cmp
pop
icebp
mov
movsb
sbb
int
mov
add
add
push
mov
shll
idivb
mov
or
int3
pop
in
xorl
jl
rcll
ret
je
sub
mov
popf
in
adc
adc
shrb
sbb
adc
and
inc
mov
xchg
cs
inc
shrl
outsl
xchg
mov
jno
sub
ja
mov
or
jbe
adcb
jg
in
or
rcll
mov
mov
lods
sbb
mov
mov
pop
inc
and
popf
mov
incl
incl
cmp
mov
xchg
pop
push
sub
mov
push
ret
test
and
jnp
sbb
adc
sub
test
sbb
lcall
lods
cmp
movsb
jns
push
cmp
repz
dec
ret
in
cmp
mov
sbb
std
int3
loope
jae
scas
xor
scas
jl
cmc
fsubrl
aam
icebp
int
outsl
lahf
lock
jnp
add
add
sub
es
cmp
and
and
and
and
je
inc
icebp
mov
movsb
xor
jg
push
das
enter
cwtl
leave
mov
sbb
sbb
test
cmp
mov
sarb
pop
int3
jle
jno
cmc
sahf
in
lea
mov
xor
sti
push
bound
inc
pop
lea
sub
mov
xor
xchg
and
xchg
mov
sub
mov
dec
jno
add
add
add
and
jecxz
cmpsl
mov
nop
mov
pop
inc
sub
add
out
out
jge
iret
cltd
mov
lret
xchg
fidivrl
jge
mov
sub
in
and
sbb
mov
rcl
mov
vmwrite
add
jns
popf
into
xchg
incb
jl
cmp
jmp
insb
add
lods
outsb
out
push
imulb
cwtl
cmpl
pop
gs
add
mov
fdiv
imul
pop
and
and
inc
xchg
jae
ficoml
in
arpl
vandnps
cltd
in
scas
decb
add
add
add
mov
enter
add
push
xor
jns
scas
pop
loop
cmp
mov
dec
pop
jecxz
dec
pop
push
sub
out
scas
nop
dec
orl
std
lds
pushf
ja
mov
jno
adc
xchg
lea
push
scas
in
adc
sub
hlt
mov
or
pop
adc
scas
in
int3
js
add
pop
inc
add
add
add
add
addr16
xchg
jns
fmull
repz
add
pop
and
inc
sti
sub
sub
jno
pop
arpl
add
rcl
cmp
dec
repnz
pop
sub
mov
jp,pn
mov
push
int
test
xchg
pop
push
inc
insb
xor
imul
lods
push
and
cmp
xchg
cmp
sbb
popl
pop
shlb
or
jecxz
shlb
int3
add
add
add
add
add
outsb
and
mov
or
jno
cs
cmp
push
in
mov
inc
lahf
jecxz
sub
sub
add
add
movsb
in
data16
popl
call
mov
aad
leave
cmc
cs
hlt
fistl
out
dec
fisubrs
or
push
or
adc
pusha
icebp
cs
cmc
cmc
xchg
push
jg
jb
push
push
scas
mov
sti
scas
movsl
sarb
jo
into
adc
add
add
add
sbb
lcall
push
inc
sahf
mov
fcoml
add
out
out
hlt
rclb
or
adc
sub
fnstenv
dec
mov
lods
shrb
je
pop
repz
sarb
sbb
hlt
sar
lret
je
push
jle
mov
cmpsl
dec
jge
test
andl
sub
sub
roll
in
nopl
cmp
imulb
movsb
and
mov
pop
outsl
mov
push
xchg
aaa
push
shll
sar
push
sub
int
mov
insb
test
nop
clc
mov
mov
dec
xchg
dec
jge
fs
cmp
add
pop
xlat
mov
jl
nop
mov
mov
test
lret
lods
push
mov
mov
jns
into
jno
int
repnz
cmp
jg
xlat
cmp
stc
sub
add
mov
out
out
clc
outsl
lods
jno
or
mov
in
dec
dec
mov
std
xor
outsb
pop
jge
shr
sbb
fadds
incl
incl
incl
incl
incl
incl
call
cmp
imul
popa
fisttps
xchg
scas
dec
xor
pop
ret
sub
sbb
test
push
in
push
aad
push
jecxz
data16
in
shrb
insb
scas
dec
xchg
jno
add
xchg
loop
loope
add
add
sbb
jge
sarb
inc
aaa
daa
imul
adc
cmpl
adc
pop
and
push
and
in
mov
xor
test
push
frstor
int3
add
add
add
add
add
add
daa
sbb
subl
ds
push
in
push
inc
fisttps
sbb
xchg
shll
sub
jbe
movsb
idivb
movsl
fwait
lahf
cmc
jns
mov
ds
pushf
jnp
lahf
xchg
hlt
and
mov
mov
and
add
add
add
add
add
psubusw
inc
sbb
stc
mov
ret
cwtl
jmp
in
clc
lcall
loopne
mov
and
ficomps
js
inc
aaa
das
sbb
rorb
jne
xor
mov
and
rcrl
stos
out
push
push
repz
in
push
jge
ror
mov
seto
xchg
repnz
xchg
loopne
inc
lock
movsb
add
add
add
mov
mov
loope
mov
jo
pop
in
jo
test
xchg
divb
pop
mov
std
mov
adc
stos
mov
mov
test
cmp
xchg
dec
inc
jno
sub
loope
mov
xchg
testl
pusha
xchg
insl
xor
jl
leave
js
aam
fnstenv
nop
shll
shrb
mov
xchg
in
fsubp
scas
push
mov
ds
xchg
mov
push
addr16
es
pop
outsb
sub
outsb
cmp
add
mov
sti
hlt
pop
enter
mov
nop
add
add
test
std
ljmp
xchg
aad
push
or
mov
adc
jmp
add
fucomi
push
jmp
fwait
test
movsl
xor
jno
je
pop
sub
aaa
pushf
loop
jno
sub
sub
pop
inc
test
sahf
addr16
pmuludq
scas
adc
fistl
mov
pushl
lret
add
popf
pop
jbe
sbb
stc
xchg
sahf
mov
int3
add
add
add
sarl
leave
sbb
je
cli
pop
add
out
data16
decb
and
cmpsl
add
adcl
xorb
mov
mov
and
dec
cmp
andl
fisubl
bound
add
push
sahf
dec
stc
jno
fisubrl
in
rorb
stos
cli
lds
xchg
add
les
test
pop
shlb
int3
outsw
mov
xlat
cmp
and
sub
dec
inc
xchg
cwtl
xchg
stos
shl
hlt
xor
fsqrt
inc
jmp
clc
sti
jnp
andl
mov
and
add
sbb
jl
fst
or
fs
gs
addl
sahf
adc
push
push
lods
mov
inc
or
movsb
xor
adc
divb
jae
enter
dec
add
ret
push
sub
inc
sahf
pusha
adc
inc
jmp
jb
adc
lods
cmpsl
cmp
imul
popa
loop
call
jne
xchg
in
dec
push
inc
jmp
push
sbb
pop
jnp
jmp
sbb
add
add
add
add
add
add
add
sti
inc
daa
aad
int3
inc
mov
push
test
add
dec
inc
push
inc
ja
inc
mov
mov
push
mov
fnstsw
xor
mov
add
incl
add
std
mov
push
adc
pop
cmpb
enter
or
outsl
xor
js
ds
mov
rcrl
jle
push
pop
addb
mov
jae,pt
add
sbbl
cmp
add
and
lcall
popf
adc
out
loope
push
ss
arpl
lret
pop
in
outsl
mov
add
add
push
xchg
pop
add
test
addr16
mov
jmp
aad
mov
out
xchg
push
clc
dec
inc
push
push
pop
mov
cmpsl
fadd
popa
sbb
repz
mov
jle
push
add
add
add
add
jg
scas
xchg
stos
cld
xor
pop
out
mov
mov
fisubl
cmp
mov
lock
push
dec
dec
jp
jl
mov
fsubr
cmpsl
fildll
repnz
gs
stos
cmp
das
hlt
cwtl
mov
hlt
pop
pop
es
add
add
mov
adc
cmpsl
jmp
xchg
jnp
xor
fsubrl
negl
mov
mov
jl
xchg
and
adc
movsb
mov
fidivl
xor
xchg
mov
and
scas
mov
out
fstp
aas
jl
sub
jno
in
xchg
cmc
jnp
arpl
sbb
inc
aad
sahf
push
int
jbe
mov
addb
ret
out
mov
int
aas
mov
push
imul
xor
addr16
mov
jbe
out
dec
addr16
int
push
test
mov
stc
dec
add
add
add
add
add
add
add
and
sbb
add
cli
scas
dec
repnz
xchg
xchg
xlat
popa
mov
frstor
jg
cltd
jne
jo
and
and
and
and
jbe
roll
xchg
call
sar
loopne
out
xor
and
insb
mov
dec
mull
sub
pushf
aas
stc
icebp
dec
stos
scas
sbb
sbb
cmp
iret
loopne
js
dec
and
sub
mov
pop
adc
pop
cli
xchg
ret
and
mov
popa
lock
test
out
test
add
rorl
clc
push
stos
stc
mov
and
fcomip
adc
int3
add
add
pop
jecxz
cmc
lods
and
mov
mov
adc
push
lock
sbb
sub
pop
enter
mov
pop
adc
jae
xchg
and
loop
fstl
loop
cmpsb
movsb
roll
outsl
lret
ja
daa
iret
mov
xchg
cmc
and
cmpsl
add
add
add
add
inc
jl
jns
mov
inc
daa
ja
or
mov
clc
fcmovnbe
pop
ja
les
mov
iret
test
adc
mov
mov
out
xor
cltd
lret
mov
movsl
pushf
ds
push
dec
mov
xchg
or
stc
js
shlb
shlb
in
xor
dec
sub
or
xchg
pop
shll
fmuls
arpl
lahf
adc
add
xchg
dec
outsl
and
in
pop
outsb
es
jmp
outsb
pusha
popf
add
or
cmp
and
and
and
or
cmp
daa
out
mov
inc
out
pusha
xchg
cmp
adc
out
pop
fs
std
decb
cmpsb
jns
mov
push
pop
mov
mov
or
jmp
inc
xor
data16
add
repz
sub
outsl
sub
and
xchg
or
lcall
pop
cmpsl
in
mov
adc
ret
xorb
loop
addb
mov
in
pushf
sbb
cld
sub
mov
out
cmp
mov
inc
aaa
adc
sarl
imul
iret
call
cmp
mov
inc
pop
sti
imul
je
push
aam
and
ljmp
sbb
dec
loope
fimull
add
add
add
add
sub
mov
and
push
sub
std
add
sub
movsb
mov
rolb
pop
inc
fisttpl
add
push
aas
jl
stos
dec
add
inc
mov
push
push
aaa
add
add
add
add
add
stc
pop
mov
xchg
sub
mov
roll
fstl
inc
in
mov
xchg
gs
adc
incl
cmc
rcrb
enter
mov
pop
cmp
push
push
jo
pop
or
push
cwtl
xorl
fdivp
and
or
inc
leave
push
dec
dec
jns
pop
test
cs
or
xlat
or
imul
jp
inc
push
daa
movsb
dec
sub
frstor
sbb
lcall
xor
das
int
mov
movsb
sbb
mov
jle
cmpsb
mov
add
loopne
repz
jp
call
outsl
pop
sub
shrl
push
xchg
loopne
mov
and
fs
sti
sub
and
dec
mov
xchg
fs
icebp
inc
es
inc
test
jp
and
mov
adc
testb
pop
jge
pushf
add
cmc
xchg
sbb
sti
loope
lods
mov
dec
xor
mov
jp
pop
rolb
sub
les
sub
mov
lcall
out
jne
lock
fiaddl
movsl
lods
sub
sarl
push
mov
jle
cwtl
ds
clc
imul
add
add
shll
pop
mov
stc
rcrl
and
popf
or
cmp
pop
cs
and
fcmovbe
int
jne
cmp
sbb
nop
fldenv
repz
arpl
mov
and
pusha
push
mov
icebp
stos
nop
aam
pop
hlt
call
scas
jns
cltd
in
xchg
sub
cmp
out
mov
roll
loope
add
out
arpl
push
dec
lock
mov
mov
jmp
pop
rclb
xchg
cli
inc
fdivr
loop
int3
add
add
add
bound
decb
xchg
cltd
imul
pop
std
fcomp
mov
movsb
cmpsl
lods
ja
mov
mov
xor
mov
lock
pushf
mov
push
outsb
xchg
cmp
ja
aaa
xchg
jnp
and
fdivrl
in
aam
std
mov
jne
jl
pop
cmc
mov
xor
aas
lods
mov
mov
sub
iret
add
add
add
add
add
add
aas
dec
cmc
fstp
dec
call
xor
sub
and
loopne
and
mov
inc
data16
insl
push
inc
adc
jo
inc
xchg
cmp
add
add
add
add
mov
jb
add
mov
sbb
push
cmp
movsb
sbb
je
mov
add
xlat
mov
sysexit
mov
test
mov
adc
sbb
xchg
sub
sbbl
jb
add
flds
and
lds
sub
or
xor
dec
insl
xor
mov
pop
xchg
or
add
nop
add
outsb
push
sub
sti
es
push
movsb
push
adc
mov
or
aad
jbe
mov
loope
movsb
nop
and
mov
stos
sub
sbb
mov
pushl
xchg
or
test
pop
rclb
loop
bound
lret
adc
push
sbb
shr
ret
jne
jp
outsb
mov
jne
pop
loopne
sub
jbe
stc
mov
negl
adc
jnp
insb
pusha
xor
imul
push
fistpl
add
add
add
add
add
das
sbb
add
mov
jae
and
and
and
and
jecxz
dec
mov
pop
inc
loopne
enterw
dec
push
decb
xchg
or
enter
jae
nop
test
outsb
mov
ja
in
repz
push
loope
insb
sub
repnz
mov
cld
mov
pop
je
faddl
ss
sub
pop
jmp
push
hlt
push
xchg
mov
dec
out
test
bound
mov
iret
loope
ss
dec
jg
das
out
icebp
add
out
mov
in
jbe
sub
xchg
add
add
add
add
add
add
imul
aad
mov
push
data16
sub
rol
fstpt
mov
cmp
pop
dec
pop
jo
je
adc
mov
mov
repz
in
xchg
jmp
shll
add
add
add
and
js
mov
jecxz
out
jbe
out
fwait
mov
lods
jle
jnp
sbb
shll
jae
push
sub
dec
xor
sub
jo
outsb
jmp
dec
addr16
movsb
mov
imul
xor
add
add
int3
cwtl
push
mov
dec
adc
lcall
outsl
lret
arpl
iret
xor
pop
arpl
loop
nop
mov
std
mov
mov
arpl
mov
aas
jmp
jecxz
ljmp
mov
mov
aad
push
cmp
mov
stc
gs
daa
jecxz
mov
lods
addr16
xor
subb
push
jmp
sub
lods
pop
dec
hlt
outsb
out
dec
xor
and
bound
adc
sub
int3
add
add
add
add
mov
jne
mov
xchg
mov
leave
cmc
or
jno
cmp
dec
jle
sti
nop
add
jl
xor
mov
rcr
push
push
push
js
out
cvtps2pd
inc
pop
push
fadds
cli
xchg
mull
movsb
mov
in
pushf
shll
mov
loopne
out
mov
add
pop
sub
orb
mov
or
call
pop
jge
dec
hlt
enter
es
jl
test
out
jg
mov
outsb
repnz
jo
and
and
cli
cmp
test
sbb
les
sub
and
or
ret
sbb
leave
jbe
scas
inc
std
pop
in
pop
lods
lret
fwait
push
int3
jle
sbb
stos
andl
pop
sbb
in
jo
shll
repz
push
out
shll
shrl
sarl
cmpsl
aad
jmp
jne
mov
nop
add
loopne
or
mov
pop
xchg
inc
aad
imul
int
rorb
jb
rolb
add
shll
rsm
ret
adcb
sub
add
or
sahf
into
jmp
adc
add
lahf
mov
jbe
stc
add
add
add
add
add
add
add
jmp
push
loopne
or
in
add
and
lret
jmp
mov
insb
mov
push
lcall
or
pop
mov
sti
push
jle
gs
sbb
hlt
push
cmp
push
in
out
mov
mov
mov
pusha
pop
outsb
ret
pminsw
cltd
xor
roll
adcb
xor
int
dec
sbb
bound
xchg
xor
flds
nop
add
bound
push
push
jns
ret
push
mov
call
inc
mov
push
gs
clc
cmp
sub
fiaddl
lock
jg
mov
push
or
repnz
or
rcrb
jp
rorl
sub
rcr
mov
xchg
inc
scas
subb
bound
xor
les
sarl
mov
je
dec
mov
add
add
es
mov
outsb
jg
xchg
sbb
or
sub
pop
dec
pslld
pop
add
test
fadd
cmp
push
fdivs
into
sbb
es
and
pop
sbb
lret
and
dec
mov
lcall
test
add
loop
cmp
jp
lret
pop
mov
cmpb
push
call
push
fwait
push
gs
sbb
cmc
xchg
cmp
aas
andb
into
mov
rolb
dec
mov
test
inc
testl
int3
add
clc
popf
cltd
inc
jg
sub
or
mov
arpl
sub
sbb
dec
or
add
cmpsl
push
mov
jg
sbb
sub
push
mov
jmp
cmp
add
mov
push
jae
je
scas
push
insl
jle
push
cld
das
xchg
inc
add
gs
mov
mov
mov
stos
leave
sbb
or
pop
lods
loope
mov
jno
jne
int
mov
xchg
je
mov
adc
mov
xchg
aaa
je
test
shlb
out
aam
decb
jle
pop
shrl
sub
xchg
stos
adc
xchg
inc
rorb
call
fucomi
dec
add
add
add
add
xchg
fmuls
cwtl
cmp
nop
add
repnz
jp
pop
jmp
push
sbb
pop
push
push
pop
xchg
jbe
adc
aam
mov
fcomps
cmc
scas
push
ret
xchg
int3
into
pop
ficoml
call
and
pop
out
clc
push
daa
ja
lret
je
mov
inc
out
lea
or
orl
popa
or
addr16
and
push
loopne
jno
stos
enter
mov
or
push
push
mov
or
ljmp
pop
inc
cmp
inc
and
flds
incl
incl
incl
incl
incl
sti
mov
enter
cli
icebp
mov
and
xchg
rcl
cmp
mov
or
dec
rcl
mov
pop
push
call
and
and
and
and
and
and
push
lret
xor
pop
aas
sar
push
or
data16
sahf
lea
sahf
repz
cmp
mov
mov
xchg
pop
outsb
jl
or
sbb
mov
insb
pop
cmp
addb
add
add
add
add
jl
pop
clc
andb
js
cmp
divl
insl
js
and
and
fistps
into
pop
mov
out
jne
cmc
pop
mov
xlat
pop
xor
lcall
in
test
xchg
mov
repz
popa
pushl
or
aas
or
jae
jo
jo
or
aad
mov
pop
popa
ficoms
hlt
xor
mov
inc
xchg
cld
adc
popa
mov
incl
incl
incl
incl
inc
mov
and
jb
fs
outsl
jl
jecxz
shl
sub
rorl
daa
push
ficoml
addl
ret
sbb
sti
aam
jns
shll
shlb
adc
mov
and
cmpsb
jb
pop
hlt
sbb
xchg
outsb
neg
mov
and
ja
ret
mov
lcall
push
mov
jecxz
xor
jo
pop
call
cmpsb
fcoms
fchs
cmp
les
addb
mov
inc
aad
xor
and
pop
popa
filds
xor
xchg
scas
push
out
dec
push
mov
loope
mov
cmp
decl
or
repz
test
call
loope
test
sbb
ljmp
je
mov
daa
mov
jne
mov
mov
fdivrs
mov
cli
xor
inc
sbb
outsl
ljmp
pop
shlb
in
mov
and
insl
mov
cwtl
int3
add
and
mov
and
push
push
nop
adc
je
daa
pop
adc
scas
cwtl
test
in
popa
jle
lret
mov
das
subb
aad
sbb
fidivrl
mov
test
jno
mov
cld
push
aam
pusha
pop
cmp
pushf
insl
mov
mov
push
ss
mov
outsl
std
dec
aad
mov
dec
loopne
aas
movsb
ljmp
pop
cmp
int
fiadds
jp
inc
cmpsl
orl
inc
js
lods
sbb
mov
cmpsl
mov
aaa
aad
scas
adcl
cmc
fucomi
cmp
icebp
aas
outsl
inc
cld
fists
xchg
cmp
lret
jle
push
dec
icebp
sbb
in
ds
sub
in
icebp
nop
adc
fcmovb
mov
aas
jg
or
mov
xchg
shll
aaa
and
jo
add
sbb
cltd
jge
in
jns
cmp
mov
jne
lods
incb
repnz
xchg
subl
mov
idiv
or
and
insb
mov
aas
pushf
rol
cmp
int3
push
popa
addr16
sahf
or
stc
jno
test
add
hlt
insb
mov
js
jbe
movsb
in
and
cmc
inc
xchg
pop
clc
add
jle
push
xor
pop
mov
subb
ja
aam
add
aas
fidivl
xchg
or
fcmovnbe
xlat
fs
push
lods
mov
push
mov
mov
xchg
aaa
sbb
push
test
push
and
sbb
sbb
das
aaa
adc
imul
out
jl
adc
push
test
jecxz
sbb
pop
jo
mov
pop
add
inc
adc
dec
aaa
cmc
and
inc
stc
lods
popf
pop
fldt
mov
fadd
rcrl
arpl
hlt
inc
cmpsl
shl
lret
jns
mov
ja
add
das
cmp
mov
call
mov
xchg
cmp
cmpsb
xchg
pop
push
insl
fwait
mov
sarb
fcomps
push
dec
stc
and
imul
mov
negb
mov
mov
orb
aad
inc
and
cmp
mov
test
fsubrl
add
jge
inc
gs
lea
push
lret
push
data16
add
shl
jno
cmpsl
loopne
fisttps
aaa
enter
add
insb
loop
sti
sbb
xchg
lock
rcll
jecxz
cli
add
incb
int
lcall
push
aam
mov
adc
and
int
mov
test
xchg
add
or
push
inc
js
xchg
cmpsb
jo
lcall
and
movsb
out
cmpsb
ja
imul
inc
imul
in
jg
or
push
cld
xchg
mov
lret
insb
leave
rorl
sbb
or
mov
dec
sbb
out
lret
lret
fmull
std
sbb
cmc
cltd
loope
idivl
jnp
jecxz,pn
repz
sbb
cmc
pop
jbe
or
xchg
ds
add
push
daa
and
shlb
fnstsw
or
xorl
js
inc
adc
sub
mov
imul
mov
fadds
pop
xchg
loope
inc
cmpsl
jne
inc
cwtl
sub
je
nop
or
popf
or
jo
sub
mov
shr
mov
lods
adc
jae
pop
lahf
outsb
adc
ror
dec
jno
aaa
test
mov
inc
jns
nop
sub
jno
xlat
xchg
jmp
push
addr16
mov
lock
and
cli
inc
or
inc
push
jbe
insb
lahf
pop
mov
cmp
loopne
mov
rcl
cli
mov
and
nop
pop
ret
pusha
pop
pop
sub
cld
sar
and
ss
sbb
jnp
lcall
add
rcrb
xchg
and
mov
aas
js
and
push
int
mov
out
xchg
aam
pop
int3
int3
dec
dec
icebp
or
push
pop
in
nop
dec
fidivrl
nop
daa
jbe
roll
call
jno
push
mov
and
xor
lods
xchg
lods
add
testl
stos
inc
cmpsl
xor
jnp
daa
cmpsl
dec
mov
jl
hlt
in
xchg
repz
stc
inc
fcomi
gs
mov
mov
xchg
insl
lret
mov
mov
mov
jno
cmp
notl
add
pop
add
nop
xchg
sbb
add
pushf
popa
mov
fists
outsb
mov
xlat
mov
clc
xchg
and
and
push
lret
je
addb
xchg
loop
pop
nop
or
inc
fwait
pop
sub
daa
cwtl
cwtl
push
and
jl
sub
fdivl
outsl
and
out
adc
dec
pushf
sub
push
pop
cltd
in
outsb
test
jecxz
lahf
imul
outsb
fcoml
cmpb
outsl
pop
fucomi
loope
jo
or
jl
jne
call
xchg
pop
movzwl
sub
cmp
mov
cmpsb
or
pop
out
subb
adc
lcall
mov
or
mov
in
popa
dec
add
jbe
push
add
sub
loope
sbb
adc
xor
pop
je
les
ret
dec
daa
pusha
jge
mov
data16
inc
cwtl
imul
xchg
push
jns
mov
cld
mov
add
push
inc
lock
idivb
aam
mov
mov
test
aaa
fadds
movsl
adcl
mov
lret
push
dec
lret
mov
aad
jo
dec
mov
xchg
pushf
ljmp
fsubrl
xchg
xchg
pop
inc
mov
and
lock
test
push
aad
mov
sub
dec
movsb
popa
sbb
mov
pop
sub
ljmp
xor
iret
xchg
fs
and
mov
popf
push
and
pop
xor
out
dec
push
shll
mov
inc
orl
or
cs
hlt
data16
cmc
dec
mov
sahf
and
adc
imul
xchg
dec
adc
cli
in
movsl
sbb
es
jl
in
cs
jnp
mov
dec
lods
mov
lcall
cli
test
jne
lret
pop
je
jnp
hlt
gs
ret
push
dec
stos
push
cmp
addb
xchg
insb
fsts
in
sarb
xor
and
loopne
ret
mov
cli
mov
rol
and
fadd
cwtl
subl
out
dec
shlb
mov
fcmovnu
pop
inc
mov
xchg
jle
cmpl
sbb
inc
sub
sbbb
gs
das
adc
cmp
ret
subb
adc
and
scas
in
pusha
mov
mov
mov
dec
mov
je
movsb
sub
shlb
int3
loop
lds
loope
mov
cli
lds
and
mov
mov
sub
xchg
ljmp
pop
mov
clc
xchg
sub
int
out
adc
or
and
clc
cld
repz
xchg
fistpl
cwtl
push
dec
add
outsb
push
movsl
and
je
dec
std
out
ficomps
sbb
sbb
lahf
push
lret
mov
in
test
inc
popa
fcoms
outsb
fwait
mov
jl
daa
jle
arpl
pushf
mov
icebp
xor
stos
negb
cmp
or
mov
jb
out
sub
mov
cmp
popa
lods
cmpsb
and
in
fnsave
sbb
into
adc
mov
ret
push
mov
mov
bound
xor
cmpsl
nop
ljmp
idiv
in
repz
movsl
int3
cld
insl
sbb
mov
rcr
dec
movsl
repz
push
push
or
outsl
jns
xchg
test
nop
or
loop
jo
out
add
push
stc
sbb
push
gs
mov
inc
imul
push
notl
sub
xorl
rcll
mov
dec
add
cmp
sub
std
adc
mov
bnd
imul
inc
icebp
jecxz
or
aas
addr16
dec
or
xchg
push
ljmp
mov
mov
stos
lods
or
fadds
fildll
imul
addr16
adc
lods
dec
ret
add
scas
xchg
cmp
adc
pop
daa
push
leave
jb
add
popf
pop
add
inc
mov
imul
adc
sbb
add
fldt
sub
enter
mov
je
mov
and
jg
std
outsl
and
shll
ret
add
ret
gs
push
push
clc
sbb
or
cli
and
ss
inc
fldl
movsb
xlat
cmp
and
adc
cmpsb
or
cmpsb
scas
les
fldl
push
inc
jnp
sub
jbe
push
inc
jmp
or
push
pushf
stos
jmp
gs
outsb
mov
int3
fists
inc
repz
cli
sarl
jae
hlt
outsb
mull
fs
les
xchg
aam
testb
xor
test
daa
stc
out
cmp
mov
pushf
cld
rclb
mov
pop
and
aam
rcll
xor
loopne
int3
into
dec
push
and
sub
lahf
and
pop
ret
mov
mov
and
out
mov
aad
shll
mov
repz
mov
ljmp
hlt
idivb
pop
add
mov
sbb
push
sahf
inc
jbe
or
push
pop
sahf
mov
mov
sti
fdivrl
aam
cmp
mov
rcrl
mov
stc
jp
fadds
sub
repz
data16
sub
lods
das
shr
jbe
cmp
push
push
jg
sub
pushf
rclb
push
fimull
loope
sub
and
in
js
rcr
rol
pop
jbe
call
cwtl
lea
mov
test
jo
outsb
andb
lods
insb
xor
jno
es
jge
arpl
in
fscale
jl
mov
mov
sahf
or
inc
jl
cwtl
addr16
fisttpl
addb
icebp
adc
aad
repnz
popa
xchg
sbb
push
loope
insb
or
sub
xchg
pusha
mov
dec
mov
jg
add
bnd
inc
aad
lock
fs
or
mov
pushl
dec
inc
mov
call
and
fcomi
jns
mov
xchg
int
sub
inc
ja
pop
mov
or
sub
loopne
xchg
sub
mov
jge
shlb
lret
mov
cmpsl
mov
dec
push
outsb
decb
test
insb
jbe
inc
movsb
fstpt
push
repz
and
aaa
ror
lock
lds
cmp
push
scas
mov
dec
loopne
sub
xchg
dec
scas
jge
mov
loopne
pop
lcall
jge
add
and
push
inc
cmp
jb
and
adc
hlt
test
add
roll
fdivp
out
cwtl
ljmp
mov
into
mov
xor
mov
and
jno
sarb
adc
out
jp
mov
js
je
mov
popa
xor
cwtl
ljmp
notb
imul
push
in
ret
fs
ds
aaa
pop
xchg
pop
jb
adc
lret
ds
cli
push
in
es
xchg
sbb
mull
shlb
daa
inc
sbb
and
xchg
fstpl
mov
mov
xchg
pop
dec
shlb
shrl
stc
addr16
loope
pop
pop
or
ds
adcb
and
dec
mov
pop
stos
push
cmc
fucomp
push
leave
adc
dec
mov
or
xor
pop
faddl
insl
imul
cpuid
pop
shll
int3
mov
pop
loop
push
jmp
lea
out
xchg
adc
sbbb
cmpsb
xchg
cmc
mov
xor
mov
mov
pushf
or
movsl
lahf
xchg
mov
sub
mov
pop
mov
pop
mov
shr
mov
mov
mov
jne
cmp
outsl
pop
sub
fldpi
or
lret
xor
push
in
lcall
fadds
movsb
ljmp
add
cmpb
fcmovnu
mov
int
fistpl
daa
lahf
leave
in
mov
push
sbb
sub
sub
mov
cmp
outsb
cltd
xchg
push
cmpsb
inc
mov
jmp
arpl
call
lods
mov
mov
ljmp
cwtl
ds
and
test
addr16
xchg
xor
and
mov
movsl
outsb
bound
jae
sub
dec
xor
hlt
ljmp
bnd
pushf
stos
les
es
lcall
inc
push
pop
pop
adc
or
int3
push
cmp
dec
scas
mov
leave
add
cli
fwait
inc
std
out
xlat
dec
out
lea
cmpsb
inc
mov
cmc
std
xchg
xlat
sub
jb
mov
adc
iret
repz
mov
out
mov
sbb
and
popf
dec
xchg
xlat
push
mov
cmp
cmp
mov
dec
push
in
sub
xor
adc
mov
or
cs
lret
sbb
cmp
mov
pop
xor
test
adc
adc
push
hlt
int
cltd
imul
push
loope
and
bound
std
jno
dec
inc
lret
jae
push
pushf
insb
out
jl
mov
stos
popf
push
ret
and
pushf
dec
push
inc
iret
push
js
adc
lahf
cld
pop
jno
cmp
push
leave
jl
cltd
int
mov
enter
rclb
shll
in
push
mov
leave
pop
aas
and
dec
push
mov
leave
mov
pop
ret
loopne
cltd
inc
sub
or
call
jmp
inc
pop
sub
stos
mov
sub
jbe
mov
jp
mov
add
dec
cmp
pushf
stc
inc
aad
inc
dec
mov
add
inc
lcall
and
and
stos
or
pusha
std
scas
and
shlw
test
shrb
je
and
add
test
cltd
loope
mov
sbb
dec
push
lods
jmp
leave
adc
adc
adc
loopne
push
jb
sub
inc
adc
cmp
imul
mov
inc
ja
jl
mov
jno
pop
fs
or
out
cmpsb
mov
push
mov
or
mov
outsl
mov
xor
ffree
pop
jecxz
int
push
call
jge
or
mov
loope
and
lods
rolb
sbb
pop
cmpb
xchg
push
arpl
lret
aaa
xor
mov
jno
das
add
push
shll
jmp
lds
push
lods
xchg
sbb
push
inc
xchg
jnp
cmp
xchg
push
int3
ret
push
and
ljmp
bound
add
ss
out
xor
jne
xchg
adc
or
jns
loope
push
les
sub
sbb
sub
jae
pop
rcll
shrl
pop
in
and
mov
jno
fcomp
dec
mov
mov
popf
push
imul
sbb
cmp
xlat
neg
test
pop
mov
aad
xchg
push
loopne
cmp
mov
cmc
sahf
std
out
mov
outsb
sbbb
mov
xor
dec
movsl
xchg
inc
sub
leave
in
or
cld
dec
jnp
outsb
out
push
push
mov
jae
mov
dec
iret
xor
fdivrp
bound
scas
notl
decl
xchg
int
mov
cwtl
inc
fwait
sub
pop
jae
cmpsl
and
ljmp
out
bound
subl
push
outsl
imul
test
nop
add
cmp
push
fisubrs
pusha
xor
sub
adc
mov
fisttpll
dec
int3
idivl
movb
sub
push
cmpsl
popf
mull
mov
pop
push
lods
loope
nop
enter
add
mov
add
sti
sbb
ror
add
xchg
inc
clc
lcall
dec
in
scas
jp
pop
jle
xchg
fdivs
push
das
cmpsb
outsb
mov
popf
xchg
mov
pop
sbb
pop
call
cwtl
sub
sbb
xchg
sbb
inc
sbb
sub
mov
jge
mov
jb
sbb
push
rolb
mov
mov
aaa
subl
pop
sbb
fisttpll
mov
push
sbb
dec
je
sub
pop
add
cmp
and
dec
es
mov
mov
sbb
cld
addr16
addl
mov
inc
and
push
xchg
mov
fs
jmp
push
loopne
lods
pop
leave
sbb
js
mov
popf
gs
popf
fiaddl
lea
int3
push
cmc
bound
xor
xor
sbb
pop
lret
ds
push
push
fstps
mov
sub
jbe
mov
in
dec
mov
dec
or
push
sub
adc
add
pop
mov
cmp
jle
add
clc
jne
push
outsb
ljmp
jbe
inc
movsl
adc
out
push
xlat
seta
mov
jno
sub
cmpsl
das
push
out
fstpl
xchg
outsl
pop
sbb
sbb
cmc
insl
mov
sbb
movsl
lea
in
or
outsb
jp
int
xchg
and
push
lods
imul
mov
in
or
or
inc
repz
dec
test
outsb
jp
xchg
inc
aam
lds
negb
rcr
sub
cmp
fwait
mov
cmp
or
scas
jge
mov
jmp
add
loope
out
call
inc
add
insl
push
add
jne
sub
lahf
xor
inc
std
je
jge
stc
add
fldenv
and
mov
adc
mov
sub
lret
loop
lcall
jmp
adc
sub
shlb
lods
mov
xrelease
aad
dec
cmp
addr16
mov
xor
iret
xchg
dec
xchg
cld
cmpsb
fnstenv
aaa
in
fdivl
outsb
insb
xor
adc
pop
inc
mov
mov
mov
sahf
xor
inc
shlb
jmp
jmp
cmpb
ss
push
push
xorl
adc
frstor
stos
push
sbb
iret
dec
mov
or
add
ss
pop
out
adc
xchg
xchg
shll
xchg
adc
aas
inc
xchg
sub
jns
fimull
xlat
jp
xor
in
xchg
out
roll
popf
add
rclb
or
sub
out
into
mov
sbb
in
push
push
mov
stc
push
adc
popa
cmp
or
dec
cmp
shlb
sbb
sbb
jae
pop
cmpsl
add
push
std
mov
stos
inc
mov
leave
loope
mov
ret
mov
sbb
fwait
inc
inc
jecxz
rorb
test
movsl
cli
mov
inc
dec
mov
dec
cmpsb
std
pop
cltd
test
jns
xchg
push
test
incb
fldl
mov
push
int
xchg
pop
daa
sbb
dec
push
fs
cli
sbb
fnstsw
outsl
sub
gs
lods
push
sub
rclb
fadds
push
pop
push
pop
sti
cmpsb
hlt
inc
lods
das
stos
and
rolb
pop
pop
popa
aam
cmc
fidivrl
xor
pop
enter
add
inc
cmpsl
sbb
loope
adc
aaa
outsl
mov
mov
jo
popf
xor
sbb
or
xchg
imul
add
popf
pop
test
inc
xor
push
stos
add
cwtl
jae
loope
mov
shr
sub
test
push
sub
sub
or
mov
mov
add
fsubl
and
jmp
les
dec
sbb
insb
xor
cwtl
push
std
cmpsb
js
mov
push
idiv
je
adc
sub
push
sub
push
sbb
adc
icebp
fs
aaa
and
arpl
push
loop
jo
cs
push
test
push
addr16
xchg
cmp
clc
dec
xchg
rcll
fldenv
jae
mov
movsb
cmp
jns
sbb
inc
xor
subb
sahf
dec
jnp
add
mov
jmp
mov
leave
movsb
icebp
jp
out
jb
into
clc
insb
cmp
dec
jne
dec
enter
inc
push
repz
mov
fwait
mov
daa
or
lret
lods
lods
movsb
out
and
clc
cwtl
pop
mov
xor
imul
mov
cli
outsb
or
add
fimuls
jg
mov
scas
incl
xor
xchg
adc
cld
xchg
les
xchg
cmp
cmpsb
xchg
scas
pop
jl
push
cmc
sub
xchg
push
adc
fidivrs
xchg
sbb
jmp
leave
mov
pop
sub
sub
jne
call
or
mov
push
sub
into
adc
insl
test
cmp
sub
test
ljmp
mov
hlt
add
sub
or
jecxz
cmp
mov
mov
push
inc
mov
dec
push
test
adc
and
xchg
outsl
dec
movsl
push
mov
dec
or
add
aam
xor
call
into
rol
sbb
movsl
and
jbe
roll
ret
cmp
sar
adc
inc
stc
fsubrl
std
mov
xchg
and
sub
push
movsl
sub
push
mov
pop
clc
sub
hlt
testb
cmp
popf
inc
xchg
out
jle
pop
mov
sub
dec
mov
fsubrl
mov
xchg
in
lea
stc
sub
pop
sbb
mov
inc
adc
inc
and
sub
pusha
jecxz
push
jge
and
test
cmpb
cli
pop
xor
test
jno
es
fcmovnu
dec
mov
pop
cmpsl
sub
mov
push
int3
cs
in
in
mov
sub
loope
adc
dec
mov
mov
push
and
or
lock
ljmp
loopne
jo
popa
cmp
sbb
orl
cmpsb
sti
mov
shll
jge
mov
push
int3
lods
cmp
loope
sbbb
lock
cltd
and
jnp
dec
mov
cmp
xor
div
dec
in
mov
hlt
lret
cld
scas
inc
add
popa
pusha
adc
insl
into
cmpsb
or
cmp
push
sahf
push
lcall
mov
push
sbb
or
add
loope
pusha
inc
sbb
idiv
hlt
or
cmp
lret
mov
add
jbe
inc
xchg
xchg
push
stc
pop
xor
and
fcmovbe
lret
or
fs
dec
sahf
cmp
cmp
lea
loopne
inc
loop
fisubl
fistpl
or
or
dec
adc
inc
inc
jo
xchg
sub
dec
fadds
mov
js
stc
cli
add
mov
mov
in
pop
push
sti
out
adc
push
stc
ftst
stos
push
nop
dec
add
std
cmp
outsb
hlt
out
fbld
ja
insl
mov
cmp
jnp
in
mov
adc
fstps
lcall
mov
arpl
jg
sahf
push
or
mov
ffree
fcmovne
bnd
fcompl
fs
repz
add
add
fcmovu
sbb
push
out
dec
mov
and
dec
scas
adc
gs
out
inc
mov
or
shr
lock
jno
inc
ljmp
dec
xchg
push
and
sbb
lock
mov
xchg
insl
int
add
add
or
data16
push
movsl
sub
lock
cmp
aas
xchg
pop
xor
push
loope
dec
push
jl
mov
adc
decl
lods
inc
inc
adc
rcrl
fdivrl
push
mov
jg
xor
icebp
mov
adc
cld
cltd
lods
jae
mov
enter
xor
icebp
daa
sbb
add
movsb
loopne
negb
mov
repz
fmuls
mov
ss
sbb
inc
sbb
es
bound
mov
and
enter
jne
rcll
les
or
leave
imul
push
mov
rorl
push
adc
cwtl
add
add
dec
fimull
mov
push
cmp
sbb
shlb
jns
pop
add
sbb
insb
test
sbb
pop
add
or
mov
cmp
and
daa
sarl
push
stos
faddp
or
ds
movsl
xchg
and
dec
mov
add
adc
jle
into
negl
adc
xchg
jne
mov
cmovge
pop
mov
jns
xchg
cmp
xchg
adc
inc
out
xchg
enter
mov
jne
push
out
sub
adc
movsw
or
lods
int3
outsb
jg
pusha
sti
jno
imul
pop
mov
jbe
arpl
xchg
shr
pop
jecxz
popf
xchg
mov
movsl
mov
jo
mov
cwtl
dec
xchg
and
fsts
lods
inc
mov
lock
dec
pop
lcall
addr16
add
jbe
lcall
bound
jl
aaa
and
in
das
cmp
repz
fcos
fs
arpl
xchg
push
xchg
arpl
xchg
ss
and
filds
sub
test
adc
iret
scas
rolb
mov
mov
dec
cmp
xor
pop
pop
test
test
jle
ss
pop
push
xchg
fnstsw
push
in
bound
mov
and
push
pop
lahf
lods
fisttps
sub
inc
shrl
leave
push
in
mov
push
mov
sub
iret
inc
pop
xor
xchg
dec
iret
insl
rorl
data16
dec
xor
xchg
jmp
lea
fsubs
and
mov
cld
mov
xchg
add
and
in
inc
xchg
popa
ja
cwtl
clc
mov
or
and
cmp
push
jmp
mov
scas
xchg
fisubrl
aaa
test
imul
pop
jecxz
pop
push
xchg
mov
test
fistps
lret
xor
mov
je
aam
mov
xlat
leave
das
pop
and
movsb
adc
pop
fsubl
pop
mov
aaa
scas
adc
inc
data16
push
je
xchg
push
mov
mov
jae
add
fsubl
push
movsb
aam
adc
sbb
loope
sub
add
cmpsb
jnp
les
cmpsb
xor
add
fisubl
shll
call
or
sbb
dec
pop
mov
sub
in
ljmp
lea
jge
jmp
enter
out
mov
fsub
in
add
or
jb
xchg
loope
mov
pop
repnz
xor
arpl
in
mul
cmp
or
imul
mov
loop
mov
xchg
or
dec
imul
mov
xor
arpl
push
cltd
cltd
add
mov
inc
xchg
jmp
cmc
repz
fdivrs
sub
nop
inc
push
cmpsb
ljmp
pop
and
fucom
cli
cmp
aad
xchg
sbb
adc
rclb
dec
cld
dec
call
push
test
pop
cmp
in
push
mov
aas
hlt
inc
stos
aam
ret
int3
fstl
lods
int
lock
or
pop
pop
mov
adc
imull
sbb
je
dec
sti
and
int
pusha
pop
cmpsl
hlt
scas
cmc
cltd
jle
mov
test
mov
mov
cltd
imul
in
scas
mov
or
shrl
es
scas
adc
je
into
fiadds
mov
jae
inc
cmp
adc
and
stos
xor
add
add
jmp
sub
cmp
mov
cli
sub
popa
outsl
sub
into
mov
pop
out
mov
xchg
adc
dec
sbb
xor
dec
jg
repz
pop
xor
shl
jb
cmpsl
ret
lcall
pop
jno
adc
loopne
sub
cltd
fcomi
je
insb
pop
outsb
aad
ret
xor
in
aad
inc
cltd
je
mov
xchg
sti
dec
inc
sbb
xorl
xchg
leave
loope
cld
xchg
in
sbb
push
ss
shrb
cmpsb
push
push
es
pop
das
mov
imul
sub
jge
decb
inc
jne
nop
mov
xchg
mov
aad
ds
das
mov
cmp
mov
mov
sub
add
jp
xchg
stos
jmp
and
sub
sub
adc
stos
pop
jbe
jle
aaa
sbb
push
mov
adc
sub
xor
rcrl
add
pop
data16
call
pop
jae
iret
xchg
stos
dec
mov
es
fwait
or
dec
filds
pop
lea
icebp
test
inc
in
imul
push
std
loopnew
mov
jae
fmuls
pop
ret
sbb
sbb
xchg
imul
sarb
pop
pop
push
sbbl
cltd
call
dec
mov
pusha
jae
and
xor
test
push
lret
lahf
xor
popa
pop
sbb
pushf
xchg
xchg
data16
shlb
adc
fistl
mov
adc
push
les
xor
jno
loopne
iret
inc
mov
fnstcw
bound
or
mov
aam
cmp
sub
ret
jne
out
push
stc
xor
jbe
push
and
cwtl
pop
pop
and
mov
scas
rorl
orb
addr16
aam
stc
or
adc
mov
inc
jne
and
shr
mov
enter
sti
int
aam
mov
push
and
sub
aad
push
inc
sub
adc
xchg
in
pop
push
sbb
cmc
or
sbb
sbb
sub
xor
cmp
cli
sti
repnz
movsb
lret
cmp
int
mov
sarl
mov
out
dec
mov
scas
mov
mov
mov
in
and
sub
loopne
mov
mov
sub
test
outsl
mov
push
fs
lcall
xchg
std
jb
es
in
jmp
cmc
clc
push
mov
push
sub
xchg
aam
lea
cmp
pusha
mov
mov
aad
iret
sub
test
nop
addl
lahf
push
ror
addl
push
adc
leave
xchg
nop
in
mov
xor
in
leave
xor
sbb
sbb
mov
pop
push
pop
icebp
std
jnp
repz
xchg
iret
out
mov
or
movsb
fwait
jo
mov
lret
sbb
pop
test
lcall
sbb
and
test
jp
out
mov
cs
and
rolb
stc
movb
add
mov
inc
xchg
sbbb
fsubrl
jecxz
pop
push
aam
inc
rcl
movsb
dec
sbb
xor
shlb
lods
sbb
testb
add
fyl2xp1
jns
je
repz
add
pop
mov
pop
push
jle
add
out
icebp
xchg
mov
stos
and
outsb
repz
lods
jb
mov
int3
mov
or
inc
mov
repnz
mov
xchg
shll
mov
pushf
or
dec
jl
insb
cmpsl
jnp
jg
push
lea
jl
pop
neg
stc
jnp
sbbl
dec
jo
ja
or
clc
push
fistl
ljmp
mov
repz
js
push
mov
push
ljmp
outsb
pop
lods
and
adc
mov
fimull
cmp
test
and
ljmp
adc
cmpsl
stc
add
cltd
xorl
aam
push
adc
jmp
dec
fstp
enter
mov
add
leave
ljmp
lcall
sti
push
mov
add
cmp
cmp
test
ljmp
add
and
jle
adc
in
and
xor
pop
jge
inc
fisttpl
jns
sbb
xor
push
aam
ret
mov
pop
and
sahf
lods
daa
pop
icebp
fdiv
jl
out
daa
cltd
aas
aaa
scas
or
and
cmp
iret
cmc
dec
ds
lahf
ds
cmc
or
or
sub
mov
fdivl
cld
mov
add
cmpsl
dec
cmp
in
in
out
mov
rcll
push
pop
ljmp
loope
fsubp
sbb
mov
inc
inc
mov
out
push
inc
jmp
mov
dec
dec
es
add
jnp
out
push
fmulp
and
sbb
ljmp
aas
lods
stos
dec
mov
daa
sbb
fwait
pop
cs
dec
les
push
out
stc
or
outsl
mov
test
mov
mov
pusha
in
es
sbb
sub
loop
mov
mov
pop
aas
fists
pop
jns
call
sub
dec
mov
inc
pop
cli
aad
lret
sub
or
mov
cld
pop
cmp
xor
andb
inc
negb
push
test
sbb
ret
cmp
jno
push
pop
popf
cmpsl
pop
dec
fpatan
sahf
add
fdivs
mov
mov
mov
add
dec
xchg
and
inc
lds
cmp
pop
mov
sub
mov
lods
in
push
dec
or
flds
loopne
aas
xor
test
out
push
mov
or
inc
cmp
mov
das
push
lods
xor
xchg
stos
loope
nop
in
stc
sub
xchg
sub
outsl
mov
insl
mov
pop
pop
and
in
add
dec
cmp
dec
fadds
scas
stos
test
adc
push
pop
jno
xchg
shrb
push
cmp
cmp
nop
cs
xor
jne
add
inc
adc
lds
or
cwtl
mov
xchg
mov
pop
test
sub
mov
lds
xor
gs
and
ljmp
or
mov
insb
movsl
xor
filds
out
push
push
xchg
inc
pop
sub
popf
or
mov
dec
out
cmpsb
lcall
adc
imul
loopne
movsl
mov
pop
movhlps
mov
jbe
icebp
mov
sub
cmc
shll
mov
pop
repnz
fucomip
inc
push
imul
lods
xor
cmp
xchg
sbb
pop
add
addr16
mov
xor
cmp
cmp
jl
fs
dec
je
push
or
lcall
out
les
sbb
clc
push
ss
gs
or
mov
fcmovb
push
cmpsl
xchg
iret
sarb
scas
cmp
fidivrs
lock
add
lods
movsb
jg
jbe
xchg
xor
lods
js
rcrb
int3
xchg
stos
imul
jo
leave
mov
icebp
jae
xor
fisubl
outsb
ljmp
dec
mov
lds
shll
mov
lods
sbb
xchg
jb
clc
pop
mov
and
xchg
push
in
les
les
jns
mov
test
or
fs
in
and
pop
cmp
test
cmp
gs
push
pop
dec
mov
neg
fwait
aas
popa
add
shlb
xlat
pop
push
jb
mov
xchg
mov
dec
xchg
clc
in
fisttpll
sbb
inc
std
jl
sbb
add
inc
cmp
dec
pop
add
push
addr16
xlat
mov
js
adc
mov
pop
push
lock
lea
lahf
in
cmp
roll
jne
pop
push
dec
xor
cld
push
loop
les
add
cmp
mul
push
clc
mov
pop
fcomps
into
dec
xchg
cmpsb
cld
push
push
sbb
scas
adc
mov
and
out
mov
xor
imul
mov
jae
sbb
mov
jae
fs
test
and
or
push
jns
dec
mov
xor
movsl
cmpsl
aaa
scas
or
imul
test
sub
sahf
mov
push
xlat
jg
xor
mov
inc
xchg
insb
popf
movsl
dec
mov
js
jo
inc
pop
int3
mov
in
test
push
insl
push
movsl
pop
jb
sbb
fwait
cmpsb
into
xor
insl
sti
jmp
or
fcom
out
inc
mov
movsb
movsb
mov
fcompl
into
push
mov
inc
bnd
iret
faddp
mov
outsb
and
push
cmp
sti
xor
out
dec
out
mov
xor
and
fisubs
lock
lahf
ss
adc
jl
roll
or
xchg
mov
ror
inc
jl
mov
or
popf
jmp
or
push
adc
movb
les
inc
adc
in
xorl
jge
andb
jnp
jae
daa
loop
add
pop
mov
jecxz
mov
cmp
pop
push
add
imul
xor
mov
leave
call
mov
sbb
sbbb
push
stos
add
fdivl
xchg
adc
jg
sbb
int3
push
fidivrl
xorl
inc
xor
stos
outsl
in
orb
jge
inc
es
and
repz
mov
add
push
jnp
xorl
jno
in
out
dec
add
mov
push
push
xor
xchg
dec
pushf
jb
das
mov
movzwl
outsl
dec
cmpl
push
push
inc
pop
rep
enter
loopne
iret
fidivl
push
cs
mov
mov
lret
shlb
dec
push
pop
mov
dec
int3
push
sub
pushf
sbb
or
or
int
insl
sbbl
clc
xor
add
cmp
fnstcw
dec
jo
fwait
push
or
mov
xchg
pop
cmp
adc
xor
lods
je
iret
jmp
out
xchg
fcmovu
jl
inc
js
pop
pusha
stc
fdivp
inc
testb
xchg
out
xchg
mov
fcompl
pop
stos
mov
sub
jl
dec
mov
pusha
insb
shlb
xor
sub
dec
jne
inc
adc
lock
cli
push
pop
fwait
xchg
int
lods
dec
decl
imul
jecxz
sbb
mov
cmp
loop
mov
lea
andb
fwait
outsl
jo
in
add
test
ret
sub
popf
jne
cmp
adc
cltd
sti
fcoml
lea
je
lcall
or
mov
cmc
mov
add
push
pusha
push
cmpl
cmpsl
adc
mov
mov
cmp
inc
rcrb
mov
insb
mov
mov
sub
rcl
repz
adc
push
xor
ret
pop
arpl
outsl
or
lret
test
pop
push
sub
lret
stos
dec
mov
dec
push
cmp
mov
ret
aas
sub
dec
ja
mov
test
mov
sti
ss
push
push
mov
iret
push
push
inc
xor
shlb
mov
inc
aaa
sahf
mov
call
and
ret
mov
dec
mov
push
insb
and
or
arpl
outsl
dec
stos
mov
dec
jno
mov
mov
jne
adc
sbb
les
scas
rolb
call
test
adc
mull
xchg
out
jae
sahf
mov
sbb
jae
dec
lds
inc
stos
loopne
inc
daa
int3
fld
sbb
xchg
repnz
test
push
outsb
out
jbe
outsl
inc
insb
mov
addl
mov
mov
into
repnz
pop
or
push
stos
jle
in
pop
aad
negl
cmpsb
mov
xchg
adc
sbb
arpl
pop
iret
lock
pushf
xor
jnp
jle
sbb
fiadds
xor
inc
lcall
ljmp
enter
jno
das
mov
out
xchg
bound
sub
push
dec
xor
sbb
rorl
xchg
inc
mov
add
mov
sbb
out
test
mov
and
mov
pop
leave
ret
test
mov
aaa
out
in
lea
test
enter
notb
mov
mov
int3
pop
push
xor
adc
ficompl
mov
adc
mov
outsb
sub
test
cmp
cld
out
jp
lds
and
pushf
dec
cltd
and
pop
pop
popa
outsl
lea
sub
dec
mov
int
pop
cmpsb
push
push
xchg
mov
ret
pop
mov
inc
lcall
loopne
imul
and
xchg
jns
xor
lds
insl
push
mov
hlt
int
xchg
mov
jmp
lcall
loop
scas
pop
pop
mov
jl
pusha
popa
add
add
nop
ljmp
popf
imul
subb
insb
in
adc
jp
jl
xchg
in
push
scas
std
add
out
cs
xor
test
arpl
in
jecxz
jle
mov
cmp
mov
mov
fs
sbb
faddl
push
insb
stc
sbb
fmul
xlat
jns
repnz
jb
pop
jae
sub
jl
dec
sbb
mov
lahf
jo
repnz
fidivs
ror
push
push
movsb
daa
mov
addr16
notb
ret
jo
into
test
fistpll
add
xor
cmp
jl
pop
xchg
mov
popf
aas
inc
jg
dec
dec
lea
shlb
test
fs
push
pop
cmc
add
mov
pop
push
fldl
mov
xor
fsubrl
les
dec
sbb
in
pop
or
ret
or
xor
pop
cmp
xor
inc
add
mov
ret
repz
ljmp
and
mov
inc
notb
cmpsb
ljmp
fidivrs
xchg
cmc
jle
mov
sbb
loopne
int
mov
inc
testb
mov
lods
add
aad
in
mov
fstpt
leave
stc
movsl
mov
fucompp
or
adc
dec
sub
push
aaa
aam
sbb
xchg
fcomi
cmp
in
mov
sbb
inc
jle
inc
ja
fisttps
js
ljmp
lret
or
sbb
lods
dec
das
sbb
adc
test
sbb
pop
enter
ss
mov
jb
fidivrl
shl
mov
loop
mov
je
pop
ret
shlb
call
cmp
adc
sub
adc
push
in
insb
lds
imul
pop
pop
xchg
push
push
mov
adc
insl
loop
mov
sub
mov
call
pop
fisubrs
push
scas
xor
into
rcrl
in
icebp
xor
imull
icebp
xor
add
fbstp
cmp
jb
je
pop
pop
and
jl
les
mov
pop
movl
insl
cwtl
iret
dec
stc
pop
shl
sahf
inc
js
xor
jle
mov
lea
sbb
fs
subl
incb
frstor
or
mov
cmp
sub
out
cmp
and
das
fildll
addl
scas
xchg
inc
xchg
lock
lods
pop
xchg
push
mov
and
adc
insl
cmpsl
outsl
push
in
ja
int
cltd
and
pop
out
in
add
icebp
mov
and
lods
lea
shl
and
adc
out
inc
push
ljmp
les
add
and
xchg
nop
and
lret
in
pop
popf
cwtl
hlt
dec
loopne
pop
fmull
aam
call
jecxz
mov
mov
inc
mov
pop
arpl
icebp
call
pop
pop
rclb
pop
sar
loopne
pop
adc
ret
call
pop
decb
mov
or
or
adc
push
pop
pop
pop
jge
call
sar
test
cmpsb
mov
in
lock
sbb
adc
xchg
push
test
stc
dec
lret
ffreep
call
pop
push
punpcklwd
ficoms
cmp
icebp
loopne
sbb
mov
sub
pop
loop
mov
sub
js
idiv
sub
dec
sbb
xor
push
and
push
xchg
mov
sbb
xlat
sbb
xchg
adc
popa
ds
xor
cwtl
xor
fstp
cmp
fmul
pop
int
stos
sarb
add
and
movsb
daa
scas
add
lods
mov
and
enter
push
aaa
add
outsb
out
or
cld
add
mov
adc
xchg
sub
mov
or
push
inc
cltd
jmp
adc
fdivrs
push
mov
mov
mov
mov
lods
jmp
mov
gs
sub
sahf
jg
fsts
mov
andl
das
jmp
mov
loop
and
sti
xchg
inc
dec
lods
add
test
cmpsb
repnz
bound
jecxz
cwtl
jmp
sbb
or
mov
mov
aas
adc
xor
adc
mov
and
and
negb
sbb
and
ja
and
insb
add
inc
div
jo
jo
ja
mov
adc
mov
add
icebp
into
add
fsubs
inc
fidivl
mov
dec
test
jmp
mov
dec
lcall
je
fsubs
popa
or
push
lret
dec
nop
je
imul
lahf
bound
fisttpl
rorl
push
dec
dec
dec
mov
xchg
xchg
pop
pop
mov
xchg
rol
push
pusha
jecxz
pop
lods
je
sub
ficompl
push
imul
pop
out
aam
push
test
cmp
cmp
xchg
sbb
nop
mov
inc
xchg
cmpsb
inc
cmp
lods
fisubrl
aas
sti
rcl
jecxz
lock
and
pop
inc
mov
pop
xor
or
xor
subb
out
loope
or
jle
inc
jns
sbb
mov
sbb
push
and
mov
shll
mov
test
scas
ficoml
call
rolb
dec
lret
xor
push
sub
mov
pop
mov
mov
jns
xlat
xchg
scas
js
inc
xchg
inc
clc
cmp
pop
cmp
ffreep
rorl
push
mov
jns
je
je
and
mov
and
enter
subb
xor
mov
aam
clc
test
dec
mov
test
push
jo
cld
addl
lods
je
and
loopne
sbb
aas
xchg
pop
loope
pop
rorb
call
hlt
and
sub
cwtl
add
push
push
xor
ss
pop
cmc
hlt
xchg
sub
xor
stos
leave
lds
adc
push
test
xor
cmc
test
call
dec
mov
loope
xor
xchg
mov
imul
pop
std
mov
lcall
jb
es
hlt
testl
push
loopne
sbb
mov
dec
insl
jge
test
scas
test
shrl
lods
pop
movsl
sbb
call
cmp
dec
jmp
adc
and
and
and
or
popf
push
bnd
sti
pop
jge
mov
mov
div
inc
ror
cmpsl
fcmovnb
cld
or
jno
cmp
lea
arpl
xchg
lahf
popa
jb
mov
pusha
jbe
mov
adc
cmp
cmp
fildl
in
xchg
sbb
cli
test
sub
push
sub
sbb
push
pop
ret
add
mov
movsl
add
sar
mov
mov
cmp
mov
mov
or
decl
popf
test
into
mov
pushf
xor
lret
xor
cs
test
incb
int
xor
in
sbb
ret
push
cmpsb
idiv
repz
sub
xorb
int
ret
mov
add
and
adc
jns
cli
bound
push
fimuls
test
sbb
pop
xorl
mov
lods
mov
dec
mov
sahf
jecxz
sbb
arpl
adc
rol
or
push
or
addr16
aam
dec
into
dec
mov
add
xor
push
cmp
jns
das
js
add
jne
mov
ljmp
call
add
push
inc
loope
mov
jnp
cmp
ja
fldcw
test
out
jg
nop
mov
lcall
and
rolb
pop
xor
inc
ret
xor
or
xor
xlat
shlb
outsl
pop
js
rcrl
shll
mov
in
fcoms
xchg
lock
testl
xor
movb
xor
dec
mov
repz
mul
pop
xor
ds
insb
fldt
xchg
outsb
cmpsb
mov
dec
jle
dec
xor
adc
shl
into
addl
imul
push
bswap
call
je
aas
pop
rcrl
mov
pop
xor
addr16
xlat
das
cmp
in
add
das
or
mov
adc
adc
daa
mov
arpl
and
jae
leave
in
addr16
test
push
sub
mov
adc
cwtl
shlb
inc
mov
shrl
or
pop
movsb
mov
push
lahf
mov
mov
inc
lods
jb
test
mov
loop
fldenv
js
hlt
insb
mov
xchg
jno
shll
mov
xor
inc
or
inc
lods
push
adc
jecxz
push
les
sti
imul
xor
sub
push
int3
loopne
dec
pop
and
repz
cmp
adc
ficompl
lret
xor
pop
sub
fcmovu
inc
repnz
inc
xchg
test
mov
mov
ja
sbb
cmp
fs
push
jmp
cmp
shll
dec
int
imul
xor
mov
jns
hlt
fistpll
icebp
je
rolb
aam
push
test
incb
ret
lret
imulb
dec
je
mov
jne
cli
clc
negb
or
mov
xlat
mov
push
push
adc
sub
sub
jl
mov
sbb
dec
addr16
sub
pop
push
call
addr16
pop
lea
push
dec
loopne
push
mov
fsubp
test
sub
testb
shrb
xlat
fs
add
mov
jb
sub
and
and
mov
pop
call
sti
lds
aam
and
cltd
insb
xchg
pusha
dec
push
jb
stos
rol
scas
and
lahf
test
lods
push
jbe
lahf
jne
dec
or
xor
movsb
add
sbb
addr16
xchg
xor
repnz
out
arpl
lds
pop
sub
das
std
call
or
js
psadbw
andl
xor
push
push
cli
cli
pop
lods
cltd
pop
sbb
jae
into
setne
rcll
test
push
mov
icebp
mov
clc
push
stos
xor
lret
mov
test
fimull
xlat
pop
data16
call
arpl
dec
sub
int
cli
pusha
fs
int
in
lret
or
stc
int3
xchg
in
lahf
in
xor
loop
xchg
iret
jge
pop
hlt
in
lds
movsl
out
adc
outsb
jg
sahf
sbb
je
adc
mov
fistl
arpl
jns
sti
inc
and
popf
clc
sahf
mov
icebp
es
mov
fists
mov
xor
mov
lds
mov
pop
push
mov
fisubs
mov
mov
dec
adc
icebp
mov
movsl
pusha
cmp
adc
adc
arpl
cwtl
pop
jle
sub
lcall
sub
xchg
mov
out
loopne
sub
jge
test
scas
xchg
push
loopne
hlt
cmp
into
inc
xor
sub
aam
mov
pop
in
inc
pop
cmpsb
je
es
mov
outsb
adc
lods
cmp
cmp
lcall
cmp
lcall
in
add
sbb
xchg
rcr
cmp
xchg
xor
lcall
lcall
leave
cltd
cmp
mov
outsl
adc
push
adc
add
sar
sbb
in
push
mov
arpl
sub
xchg
add
das
and
loopne
std
or
pusha
sub
test
pop
gs
in
ljmp
aam
mov
add
into
pop
mov
popa
fstpt
ljmp
insb
outsb
pop
mov
arpl
adc
movsb
inc
cmp
pop
stos
push
subb
aam
jle
push
mov
aas
insl
lea
push
push
lret
jl
mov
nop
pushf
ds
pop
lods
and
stc
push
pop
pop
mov
movsb
in
stos
mov
mov
fxch
shlb
adc
jne
sub
mov
add
cwtl
pop
xchg
jae
leave
xchg
dec
fs
lods
cltd
pop
sub
fiaddl
stos
sahf
adc
je
dec
xor
adc
cmpsb
mov
sbb
cs
in
addr16
inc
popf
into
sub
cmpsb
xchg
mov
lret
push
addr16
notl
xor
lods
out
repnz
out
cmp
push
cmp
push
mov
loope
adc
shlb
add
shll
pusha
push
divl
je
xor
adc
pop
add
xor
mov
ljmp
jl
jno
pop
sbb
adc
cwtl
inc
test
loop
roll
shr
push
jmp
and
arpl
cld
mov
xchg
out
mov
xchg
push
xchg
dec
add
mov
mov
xchg
testb
cmp
add
pushf
ljmp
sbb
adc
pop
pushf
push
add
mov
in
test
loope
mov
into
jne
cld
pop
pop
adc
es
sarb
xchg
xor
jp
mov
and
push
or
pop
repz
inc
jecxz
xor
movsb
addr16
je
mov
imul
std
movsl
push
jle
mov
daa
push
xchg
ja
mov
clc
inc
call
mov
lret
sub
mov
or
jp
jnp
das
imul
jmp
enter
data16
jl
cmp
js
sub
xor
fwait
push
cmp
icebp
rol
push
jno
outsb
test
push
inc
divl
push
mov
pop
jmp
scas
dec
xchg
pusha
lret
pushf
stc
test
fisubl
adc
mov
js
cmp
lods
mov
ja
pop
mov
push
mov
popf
mov
mov
add
mov
pop
pop
fs
jb
js
mov
out
jmp
pushf
jge
inc
repnz
sbb
shl
pop
xor
nopl
sub
jmp
jl
outsl
cmpsb
pop
mov
test
loopne
mov
aaa
bound
ja
lods
shlb
cli
mov
jge
adc
inc
xchg
loope
mov
in
push
sub
imul
mov
imul
sub
push
adc
hlt
add
add
insb
pop
cmp
sub
out
xor
jp
shl
fmuls
add
imul
pop
imul
mov
and
mov
jns
push
jg
sbb
jp
enter
push
cli
sub
add
or
push
out
mov
inc
in
add
dec
sbb
jmp
les
fnstenv
hlt
hlt
inc
push
test
adc
sti
jmp
xchg
or
jmp
push
movsl
data16
xlat
out
jnp
lret
or
pop
push
aad
push
mov
ja
arpl
lea
xor
xchg
jge
fbld
fwait
adcl
ja
dec
pop
fwait
mov
stos
das
sub
and
push
add
in
cmp
and
sub
mov
lods
add
enter
dec
dec
pop
das
out
dec
aas
xor
xor
mov
add
mov
jb
fmulp
pop
cmp
push
faddl
fdivrs
pushf
cld
sub
aas
lods
mov
std
jne
add
jmp
cld
test
loope
test
ret
out
jle
icebp
sbb
imulb
in
cmp
push
push
push
mov
fwait
int3
xchg
and
ret
or
cmp
or
xlat
gs
jbe
mov
mov
lea
jl
dec
xchg
stc
fdivr
add
in
out
add
subl
dec
cs
iret
sub
sub
testb
fwait
xor
sbb
mov
cmpsb
out
and
outsb
stos
push
mov
roll
push
pusha
into
ret
shrb
lock
jns
clc
dec
clc
mov
fsub
pop
lods
xchg
xchg
daa
js
es
lods
ss
jl
dec
stos
mov
shr
shll
xchg
or
aad
xor
orl
adc
insl
ss
add
lret
add
aam
jb
negl
inc
or
xchg
or
cmp
hlt
inc
cltd
cmpsb
fwait
jbe
add
add
scas
leave
aam
fs
int
arpl
imul
mov
mov
roll
std
xchg
sahf
xor
popa
mov
int3
out
mov
test
xchg
mov
jecxz
mov
test
cmc
sub
hlt
pop
mov
xchg
test
mov
out
mov
and
mov
or
stos
clc
js
int
jmp
mov
cmp
xchg
cmpsb
pop
sbb
add
and
mov
mov
push
aaa
mov
push
xchg
cmp
sahf
fwait
jg
fmull
ljmp
sub
xchg
cmp
mov
jmp
stos
pop
mov
int3
inc
enter
in
xchg
xchg
mov
roll
add
lds
sub
mov
jmp
jmpw
nop
jg
push
mov
mov
dec
int
pop
loopne
out
cltd
daa
jp
add
push
mov
in
scas
ds
jb
fmuls
inc
mov
dec
mov
push
fimull
add
rorl
sub
xchg
xchg
and
ret
push
xor
push
xor
push
adc
rcrl
cmpsb
inc
dec
cmp
in
outsb
sub
nop
lea
xchg
and
mov
aas
pop
mov
sbb
cmp
scas
xor
or
loop
jo
pop
and
or
mov
dec
or
lds
lahf
insb
jl
imul
jno
inc
and
popf
jne
rorb
stc
cmc
pop
icebp
fimull
stos
ss
scas
icebp
jns
adc
cmp
or
dec
push
mov
push
fcompl
xchg
shll
pop
movsl
sbb
add
test
and
pop
xchg
jnp
xchg
ret
movsl
jnp
mov
sbb
int
enter
inc
pop
push
mov
fadds
fisttpl
jo
add
adc
add
mov
loope
jne
push
mull
fdivrp
repz
outsl
das
jb
inc
jp
dec
xor
out
and
addr16
dec
push
xchg
mov
jle
or
mov
data16
ret
mov
adc
mov
add
jno
jb
or
divb
ljmp
mov
jb
push
jns
lds
lcall
or
cmpsl
leave
sahf
dec
sbb
push
int
stc
and
inc
push
xchg
push
fbld
scas
popa
ljmp
or
xor
out
mov
test
cld
mov
mov
push
adcl
push
mov
loope
sti
jb
add
es
into
sbb
repnz
pop
jmp
or
mov
clc
pop
mov
jp
frstor
mov
jecxz
ljmp
jb
or
jns
xor
mov
lods
ja
test
sbb
inc
lods
jno
mov
push
jmp
pop
and
cmp
jge
sbb
adc
mov
imul
ljmp
lods
outsb
or
jnp
aaa
push
loopne
cmp
bound
cmp
popa
pusha
add
push
mov
test
jmp
cltd
daa
ds
fsubrl
xor
out
ss
jle
jae
stc
fidivrl
and
adc
gs
or
mov
jp
xchg
sbb
ljmp
insl
test
les
subb
lods
dec
jmp
mov
jns
cmp
jge
dec
dec
inc
mov
mov
push
inc
in
popa
cltd
pop
pop
jbe
jecxz
push
loopne
aaa
repz
stos
mov
shlb
inc
sahf
or
dec
mov
jbe
into
adc
push
xchg
rcr
adc
ja
mov
into
jne
and
fwait
scas
push
in
or
inc
lods
jp
mov
jmp
cltd
mov
sbb
push
xchg
mov
xor
mov
xlat
outsl
loopne
fldenv
dec
inc
mov
mov
xchg
in
and
pop
into
cmp
popa
jle
rorl
cli
sub
sysexit
sub
out
rolb
cmp
das
adc
mov
cmpsl
pop
sti
lock
cmc
adc
mov
jecxz
pop
mov
int3
lods
cmpsl
sbb
sahf
pop
mov
pop
pop
inc
cmp
mov
jnp
push
lret
test
sbb
out
jmp
int3
fbld
inc
ficoms
lods
loop
in
loop
mov
or
xchg
imul
nop
sbb
inc
mov
xchg
rorl
movsb
adc
or
push
cmp
cmp
sub
data16
ss
inc
out
fldt
dec
mov
rcrl
adc
dec
dec
outsb
test
push
and
fadds
adcl
mov
out
add
dec
mov
lds
hlt
scas
pop
cs
pminub
and
cwtl
add
stc
jns
jne
iret
lret
pop
or
aas
ret
std
add
sub
mov
xor
mov
addb
hlt
ja
cmp
addb
ljmp
and
adc
in
std
in
ja
jnp
mov
jne
add
divb
scas
std
cld
xor
ret
insl
int3
push
insl
jmp
mov
adc
mov
aaa
add
xor
sahf
repnz
cld
and
mov
pop
data16
cmp
sbb
test
mov
clc
mov
push
mov
sbb
imul
push
adcb
push
out
gs
adc
mov
faddl
push
iret
mov
mov
call
daa
cmpsl
cwtl
enter
sub
xor
lret
jb
daa
mov
dec
mov
mov
clc
sarl
jo
rcr
stos
dec
xor
ljmp
arpl
mov
insl
sub
push
rolb
xchg
sub
in
daa
push
sub
jp
icebp
push
movsl
data16
loopne,pt
je
enter
out
add
or
or
jae
adc
jbe
loope
push
movl
pop
in
pop
mov
iret
mov
and
fsubr
cmpsl
pushf
push
xor
shrl
frstor
std
cmp
sub
insl
push
lds
popf
xchg
je
mov
mov
insb
push
jge
and
insb
sbb
scas
cmp
cmp
loopne
or
inc
js
xchg
imull
jge
mov
fst
dec
adc
xchg
js
jbe
ss
adc
bnd
fdiv
stos
inc
mov
subb
sbb
test
mov
fsubs
push
adc
adc
clc
stos
bound
xlat
xchg
out
fildll
push
push
dec
lret
or
inc
lods
jns
push
pop
jb
push
dec
fisubrl
inc
fbstp
sub
andl
aam
nop
test
imul
out
cwtl
aaa
adc
push
dec
call
mov
or
jle
mov
ret
enter
fisubs
cli
out
mov
cs
push
cld
or
movsl
xchg
sub
into
sarb
mov
inc
loopne
adc
mov
push
or
mulb
mov
mov
stos
js
arpl
bound
push
sbb
lds
fisubl
scas
jae
push
xor
orps
xchg
insb
mov
mov
push
iret
cmp
loope
mov
xchg
push
scas
sub
xor
dec
inc
mov
push
fcompl
jl
pop
out
mov
cmp
sub
mov
adc
adc
scas
aaa
sbb
xchg
xor
cmp
inc
sub
test
or
lods
mov
loop
ret
jo
bound
xor
push
sarl
mov
xchg
lahf
sbb
mov
shrl
inc
and
push
add
sub
dec
repz
scas
jae
or
insb
dec
in
rorb
stc
push
pop
cmc
rcrb
add
add
or
testb
mov
cmp
mov
mov
arpl
mov
and
out
jne
rolb
js
out
fildll
dec
or
aas
dec
sti
sarb
add
xchg
pop
lret
inc
paddsb
jnp
add
cltd
jno
es
or
mov
daa
push
ss
cwtl
mov
jno
fsubp
lahf
loopne
mov
xchg
pop
sti
jge
inc
call
test
pop
mov
push
imul
andb
aaa
cmpsl
xchg
push
inc
add
and
cmp
out
push
test
cmc
mov
push
jl
dec
decb
mov
and
scas
int
jnp
mov
int
movsb
mov
jg
fcomip
push
das
lods
dec
xacquire
xor
and
add
pop
cmp
lock
data16
inc
mov
xor
sbbb
and
ret
arpl
or
mov
lods
popa
shlb
xchg
ret
jb
rorb
jmp
pusha
push
dec
jl
xlat
bound
sahf
sub
inc
cli
mov
push
lods
out
nop
sbb
imul
cmp
stos
fs
sub
into
dec
cmp
inc
xor
flds
cmpsl
into
or
in
dec
xlat
ja
gs
cmp
ljmp
xchg
ret
adc
and
push
push
out
pop
or
sub
aam
int3
cli
rcrl
cli
dec
stc
adcb
cmp
mov
out
push
divl
jno
mov
pop
filds
iret
mov
sub
xor
lea
cmp
or
cmpsb
dec
mov
adc
and
fsubl
into
imul
aam
mov
inc
dec
push
fists
and
mov
push
popa
and
or
adc
dec
jmp
in
push
and
add
jnp
sub
push
sbb
inc
js
or
into
cmp
test
sti
imul
cmc
notl
lea
push
es
and
add
adc
movsl
sub
mov
sbbb
call
pop
cmp
cmp
ret
repnz
pop
outsb
xchg
sbb
cltd
sub
and
or
insl
fsubr
rorl
pop
inc
insl
ss
enter
clc
mov
into
xor
mov
lcall
jl
mov
jno
xchg
xchg
frstor
and
sub
add
cltd
lods
stos
pop
push
fists
jb
lds
mov
rorl
mov
inc
test
lret
outsb
mov
mov
sub
mov
popw
xchg
stos
dec
adc
out
mull
mov
test
clc
rcr
dec
idivl
mov
dec
jmp
int3
call
inc
mov
cmp
in
or
ja
sbb
push
fdivr
daa
repnz
xchg
subb
int3
inc
loopne
fldcw
shld
adc
add
add
mov
fwait
pusha
movsb
push
sub
js
out
jp
cmp
cmpsb
push
jb
sub
mov
xor
insb
mov
mov
pushf
sbb
mov
push
int3
sahf
adc
popf
push
adc
or
mov
sbb
fisttpll
rolb
popf
imul
idivb
adc
in
cmp
mov
and
xchg
mov
jg
sub
sbb
or
push
inc
inc
mov
and
movsb
iret
inc
pop
leave
stos
out
dec
fiadds
scas
test
loopne
push
incb
test
mov
out
mov
mov
inc
push
in
fprem1
arpl
cmp
and
push
mov
lea
xchg
movsb
repz
xor
shlb
adc
sar
repnz
iret
dec
pop
orb
stc
push
xor
jle
in
pop
outsl
add
daa
in
xchg
cmp
mov
int
mov
mov
clc
lods
je
out
les
or
stos
outsb
popa
and
out
rcr
dec
iret
ja
mov
xor
cltd
and
adc
xchg
sarb
shlb
mov
in
mov
dec
mov
inc
loope
mov
faddl
xor
pop
sahf
jns
jb
adc
out
cmpsl
out
sub
sar
sti
loopne
add
inc
pop
xchg
pop
call
inc
jmp
mov
leave
and
jo
mov
sbb
xchg
mov
fdivl
sbb
out
pop
jno
das
xchg
jl
adc
imul
and
mov
dec
nop
jmp
mov
sub
adc
pop
gs
jnp
lods
sub
inc
roll
push
mov
cs
jecxz
ret
scas
insb
call
ror
hlt
imul
insl
mov
xorl
push
jo
stc
sub
xchg
aad
inc
push
adc
in
popa
mov
shr
leave
mov
ffree
or
xchg
adc
ds
mov
push
mov
orl
xchg
xorl
mov
push
add
pop
inc
cmpsb
cli
pop
in
pop
xchg
push
inc
loope
mov
aas
ss
mov
fucomi
push
xor
jnp
add
out
xchg
xchg
and
adcl
sbb
lock
pushw
ljmp
andb
hlt
adc
aas
repz
imul
loopne
ljmp
dec
lods
hlt
cmp
add
movsl
lcall
jl
cld
push
adc
sub
gs
pop
lret
lahf
clc
mov
or
mov
cltd
mov
sahf
inc
add
sahf
and
sti
push
mov
add
push
xor
into
sti
push
adc
fsubp
pushf
mov
mov
mull
sub
mov
aas
lock
mov
ret
js
popf
xchg
inc
leave
js
add
lods
push
cs
push
in
add
push
cltd
pop
adc
call
jle
popf
flds
xor
in
mov
testb
mov
pushf
std
je
mov
inc
lods
mov
ret
mov
xorl
mov
xchg
push
movsl
in
push
dec
mov
cmpsb
mov
std
mov
mov
inc
stos
xor
pop
js
xchg
std
jl
xchg
and
ds
js
sub
cmpsl
enter
jl
mov
stc
and
les
jae
addb
orb
jecxz
mov
add
pop
or
push
mov
inc
add
dec
fisttpll
sub
adc
push
dec
fmul
mov
cs
pop
fiadds
in
push
lock
in
push
and
ds
stc
mov
jno
and
fnstcw
sbb
jle
adc
pop
push
loope
call
xchg
aam
mov
data16
adc
rcrb
leave
and
sti
or
mov
push
iret
add
lods
xchg
push
and
je
sbb
push
or
or
jge
cmp
addb
fimull
aaa
mov
test
jbe
mov
call
cli
jmp
leave
shrl
xchg
mov
lods
push
in
sarb
sahf
js
out
shrl
push
mov
sbb
sbb
dec
add
sub
scas
cltd
cmp
je
ljmp
dec
imul
push
cwtl
inc
push
adcl
int3
xchg
dec
and
mov
ds
fildll
ret
push
pop
into
movsb
pushf
ljmp
std
bound
in
gs
clc
fdivrs
pop
test
and
mov
inc
push
les
sbb
sti
pop
je
sahf
aam
lret
jmp
jne
in
xor
sub
dec
xor
adc
inc
adc
jmp
jmp
int3
cmp
movsb
inc
sahf
and
aam
repz
int
and
gs
cmp
movsb
and
mulb
cltd
xor
push
bound
cmpsb
and
fwait
lds
idivl
mov
xor
loopne
mov
adc
out
inc
xchg
mov
xlat
shrl
jnp
xchg
add
and
mov
cmp
repnz
stos
xlat
pop
sbb
scas
cmp
int3
outsb
pushf
dec
dec
sbb
push
js
repnz
pop
or
enter
mov
int
loope
lea
shll
sub
inc
or
clc
jne
loop
adc
add
and
outsb
cmp
xor
ficomps
push
fisttps
fsubs
iret
aad
mov
jmp
nop
jmp
cmp
mov
lcall
jp
sbb
push
faddl
je
xor
aaa
insb
test
mov
xor
stos
cld
loopne
push
out
adc
movsl
lock
xchg
cltd
push
push
in
jbe
jne
jle
lds
sahf
out
fimuls
mov
test
jmp
sub
pop
movsb
sbb
call
movsb
or
jo
inc
cmp
fdivl
mov
sub
sbb
xchg
push
push
jo
dec
adc
sub
iret
xchg
mov
imul
insl
fnstsw
adc
adc
mov
pop
mov
adcb
int
push
sbb
push
imul
in
mov
movsb
test
je
aas
xchg
mov
cmpsb
cltd
jecxz
jae
hlt
int
dec
or
add
xchg
insl
aaa
cltd
pop
popa
negb
fs
pop
call
push
data16
loop
xor
adc
push
addr16
popf
jge
test
iret
inc
pushl
pop
jecxz
cmp
outsb
push
nop
iret
and
push
sbb
push
fstpt
mov
cld
and
jp
and
lods
push
cli
add
ljmp
jne
sub
leave
jl
push
bound
fisubl
cwtl
dec
mov
lock
adc
mov
pop
mov
nop
iret
mov
cmp
insl
jmp
test
push
inc
cmp
inc
mov
xor
jge
or
jge
xor
adc
ss
mov
icebp
push
enter
sub
inc
push
addb
cli
int3
cltd
lods
stos
push
sub
fwait
push
jg
roll
cmp
add
adc
ret
rcrb
bound
sbb
insl
loop
jecxz
mov
aas
lahf
mov
in
call
mov
push
ja
cs
int3
xchg
sbb
fs
arpl
or
mov
pop
mov
jnp
test
push
jge
fnsave
mov
pop
mov
push
lds
push
and
ljmp
or
xor
in
dec
movsb
jmp
xor
mov
mov
idivb
pop
xchg
pop
in
test
js
enter
scas
xchg
loope
sub
fnstcw
mov
inc
aad
das
lret
sub
jae
cld
fxch
pusha
inc
movsl
data16
push
xchg
sub
nop
adc
in
and
push
xchg
push
pop
sbb
and
fsubrs
js
sub
iret
lahf
inc
or
xor
add
loop
popf
out
gs
xchg
cmp
mov
shll
and
out
mov
cmp
pop
jb
out
aam
aas
stos
adc
mov
xchg
and
out
pop
xchg
stos
mov
pushf
into
ds
cltd
cmp
xchg
cmc
sub
loopne
push
lods
sbb
cmpsb
mov
xlat
div
xchg
in
mov
js
jl
in
push
mov
rcl
xor
stc
in
xor
stc
in
fs
push
dec
nop
imul
pushf
pop
inc
pusha
hlt
mov
mov
push
test
jb
inc
pop
adc
jge
movsb
add
out
mov
sbb
rcrl
es
cmp
fwait
lds
mov
pop
cmp
push
gs
dec
lock
add
ja
out
arpl
adc
pop
das
mov
in
adc
test
lock
iret
mov
push
scas
cmp
pop
and
lods
in
mov
inc
dec
sub
jne
insb
imul
push
sub
inc
xorb
dec
pusha
mov
sub
jmp
inc
mov
test
dec
mov
adc
int
fwait
mov
mov
stos
or
mov
stos
rcrb
repnz
rcll
add
push
imul
jg
fwait
stos
ret
pop
or
xchg
into
mov
inc
mov
pop
movsl
push
mov
mov
xor
push
cmp
mov
sar
xchg
cmc
fdivs
gs
dec
inc
enter
jecxz
push
mov
das
mov
aam
ror
enter
or
mov
popa
xor
popf
xor
xchg
add
xchg
push
gs
cmpsb
sbb
fbstp
mov
lret
jbe
pusha
pop
sti
jbe
mov
xor
stos
sbb
dec
pushf
fs
out
das
xor
add
bound
out
mov
aas
mov
dec
mov
xorl
sbb
das
pop
push
jne
daa
push
not
jno
mov
int3
gs
xchg
iret
scas
loope
mov
sub
fstl
xchg
mov
mov
xchg
lret
mov
mov
sbb
rcll
ljmp
arpl
pop
sub
sub
sbb
dec
sub
adc
int3
push
mov
mov
fiaddl
leave
xchg
cli
aam
xchg
or
insb
fidivl
lods
test
push
fisubs
pop
xor
push
pushf
sbb
out
test
sub
cmpsb
mov
iret
call
psubw
push
sarl
or
dec
sbb
and
dec
xchg
mov
jge
hlt
inc
aaa
sbb
xchg
lret
leave
mov
popa
or
mov
lcall
loopne
dec
ja
cmp
push
adc
sbb
mov
push
fidivrl
popf
inc
dec
push
sbb
loopne
iret
loop
lods
std
outsl
xchg
lahf
pop
sbb
inc
into
aam
inc
ret
cmpsb
outsb
mov
push
xor
rol
dec
mov
popf
aaa
ret
lea
outsl
pusha
push
sbb
pop
jle
mov
pusha
lods
repnz
jbe
mov
xlat
fwait
xor
sbb
fadds
loope
mov
enter
cltd
or
dec
inc
or
out
xchg
xor
mov
icebp
ja
push
push
mov
jb
cmpb
xchg
inc
int3
cli
push
mov
cltd
idivl
addl
adc
bound
stc
bound
jbe
inc
mov
sub
sub
sbb
loop
lret
cmp
add
xchg
mov
mov
mov
lock
inc
stos
scas
xchg
scas
xor
andl
mov
inc
jno
cwtl
pop
lods
repz
xor
insb
mov
loop
divl
dec
and
rolb
sub
testb
loope
shlb
filds
lahf
jae
lret
mov
jle
sub
mov
gs
nop
inc
mov
lea
icebp
lahf
mov
adc
sahf
insl
bound
adc
aam
mov
iret
mov
bound
rcl
repz
out
dec
adc
in
mov
mov
add
pop
jae
dec
cltd
sub
fnstenv
stos
les
mov
fcom
mov
cmp
out
ja
addr16
in
push
pop
ja
adc
mov
add
les
push
pop
mov
cld
dec
popl
sub
mov
jmp
add
imul
pop
push
sub
cltd
sbb
or
nop
pusha
pushl
cmpsl
pop
stos
jb
mov
pop
arpl
lds
dec
xchg
add
aad
or
lcall
pushf
jp
imul
mov
pushf
or
pushf
fstpl
pop
es
lock
inc
in
xchg
mov
sub
xchg
inc
aam
imul
xchg
jne
ljmp
sbb
and
shl
xchg
add
jmp
out
pop
out
mov
movsb
aad
shl
jmp
mov
add
das
xchg
mov
adc
call
dec
aas
mov
movsb
xchg
dec
inc
jnp
fldl
xor
or
fwait
adc
cltd
iret
xchg
mov
test
xchg
fwait
push
fcompl
xor
cwtl
pop
inc
or
inc
add
dec
arpl
xlat
arpl
dec
aas
shrb
in
sub
add
pop
dec
repz
pop
ret
mov
pop
pop
adc
mov
dec
stos
int
daa
push
aaa
imulb
pop
aad
insl
mov
cmp
stc
shlb
rcrb
xorb
dec
xor
mov
fsubl
ficompl
xor
adcb
push
add
movsb
out
mov
push
int
stc
bound
rcrl
mov
out
push
sbb
sbb
jge
int3
sbb
insl
les
jmp
xchg
cli
push
sbb
mov
daa
cmc
xchg
lods
mov
ret
mov
jb
mov
pop
cmp
xchg
cwtl
xor
xchg
push
inc
or
cs
arpl
lret
int
andl
je
or
xor
fwait
sbb
in
add
cmp
mov
xor
into
mov
mov
add
adc
inc
cmp
int
sub
pushf
sub
jns
pop
out
loopne,pt
mov
js
mov
jmp
cmp
dec
fisubs
add
sbb
hlt
fbstp
cmp
xchg
cli
jae
mov
push
jg
out
nop
jecxz
out
jnp
mov
movsb
fs
call
add
fwait
int
jnp
sub
fcomi
cld
mov
mov
cmp
sarl
xor
pop
pop
sub
sarl
hlt
leave
das
inc
xlat
or
pop
xor
sbb
jmp
loope
enter
push
mov
testl
mov
roll
or
pusha
pop
and
mov
les
mov
add
in
jbe
and
inc
add
cmp
xchg
xchg
outsb
cmp
mov
je
add
subl
mov
push
cltd
mov
sub
cmpsb
cli
xor
push
je
push
and
imulb
sbb
sbb
or
cmpsl
jmp
clc
push
and
lcall
jmp
dec
xchg
nop
inc
mov
xchg
fldt
nop
cmpl
aas
dec
and
push
arpl
adc
sub
adc
dec
aas
sbb
xlat
js
xchg
test
dec
adc
sub
cwtl
adcb
aaa
enter
icebp
in
dec
xor
fcoml
inc
pop
in
cmp
jae
pop
loope
outsb
push
jl
dec
jecxz
xchg
inc
cld
lret
cmp
aam
pop
push
xchg
leave
xorb
test
rcrl
jp
adc
pop
pushl
loop
sbb
cmp
xchg
mov
sahf
pop
stc
repz
scas
xchg
loopne
fstpt
int3
jb
add
and
sbb
mov
jge
cwtl
sub
jae
mov
cld
scas
pop
dec
sbb
std
or
mov
nop
cmpl
xchg
icebp
scas
lods
and
pop
mov
xor
arpl
sub
and
add
mov
pop
add
adcb
popf
ljmp
cmp
add
mov
daa
jecxz
imul
dec
dec
add
sbb
xchg
repz
pop
sub
popa
mov
mov
inc
mov
out
mov
mov
push
mov
push
cli
idiv
daa
sahf
jnp
in
sbb
jns
mov
cmp
inc
scas
add
stos
mov
mov
and
push
int3
pop
icebp
push
shr
repz
inc
or
push
adc
push
xchg
mov
aaa
pop
fs
mov
lods
dec
and
pop
push
inc
lods
adc
pusha
addr16
cmp
or
in
jb
push
andl
movntq
push
popa
and
jae
call
sbb
adc
out
adc
pop
bound
fstl
or
or
outsl
add
nop
or
bound
icebp
mov
fidivrl
push
sbb
nop
mov
jecxz
das
test
fnsave
sbbb
pop
dec
cwtl
mov
pop
loopne
inc
push
add
andb
mov
sub
lea
and
fiadds
jg
arpl
fnstenv
cmp
push
xchg
or
dec
lahf
mov
pop
lds
pop
stc
cmp
out
test
mov
xchg
loopne
xlat
inc
pop
or
icebp
jg
arpl
aam
out
mov
out
push
aam
xor
sub
into
ja
mov
popa
cmp
jp
sub
mov
pusha
jecxz
jno
imul
stc
xchg
jo
andb
mov
jns
push
cs
xchg
dec
call
dec
cmc
sbb
pop
les
aad
dec
xchg
pop
sbb
push
ficompl
pop
mov
or
pop
add
js
in
jbe
jb
lret
sti
mov
ret
adcl
inc
sbb
shr
push
push
imul
dec
or
in
add
data16
xchg
mov
dec
jecxz
mul
dec
test
lods
neg
jge
mov
sub
loop
imul
and
or
shl
into
dec
frstor
insb
cmp
les
xor
push
popf
rorl
dec
inc
mov
mov
lcall
dec
in
pop
jo
ja
aas
fists
mov
xchg
push
mov
call
cmpsb
xchg
pop
pop
shll
dec
sub
inc
push
cmp
fndisi(8087
pop
add
inc
and
or
push
dec
xchg
imul
cmp
jbe
inc
mov
sub
pop
dec
call
mov
cmp
xchg
inc
mov
loope
insb
sub
push
jmp
mov
pop
sub
sbb
js
sub
andb
jo
movsb
inc
insb
loope
push
fistps
sbb
push
je
xlat
repnz
dec
sub
xchg
ds
fisubs
je
scas
stos
xor
add
stos
or
pop
sub
pop
fidivrl
int3
inc
and
cwtl
hlt
add
jecxz
xlat
push
aas
sahf
dec
mov
clc
mov
ja
sbb
sar
or
pop
mov
and
xor
sti
mov
fidivrl
and
xchg
fcompl
rcrl
cmc
pop
fmull
dec
xchg
movzwl
fildl
not
sahf
leave
xchg
aad
out
pop
jg
pusha
jecxz
mov
sbb
dec
pop
mov
int
or
rorb
xor
nop
cs
push
pop
cs
daa
push
mov
mov
mov
cs
fsts
arpl
add
shlb
cwtl
incb
inc
pop
and
loope
sbb
negb
inc
inc
lret
cld
xor
sbb
ss
and
and
jle
aaa
xor
pop
sbbl
mov
adc
push
out
pop
jmp
orb
outsl
cli
out
mov
xchg
movsl
fdivs
cmpsb
push
add
push
pop
xchg
dec
dec
shll
xchg
xlat
popa
je
out
jg
jecxz
sub
inc
cmc
lea
xor
sbb
pop
mov
push
push
subb
jmp
mov
movsl
and
adc
push
rol
mov
aaa
popf
popf
pushf
scas
iret
and
jb
push
punpckhdq
into
arpl
inc
arpl
adc
add
push
mov
fimuls
or
add
negl
add
xchg
out
push
or
xor
std
inc
mov
mov
imul
test
outsb
jecxz
adc
mov
out
add
xor
add
mov
mov
adc
outsl
icebp
aaa
lea
std
pop
jns
push
lcall
mov
iret
imul
add
fld
mov
and
mov
cmp
test
dec
or
xor
sub
cmpsl
add
sbbl
cwtl
jnp
int3
jae
arpl
push
ds
aas
pop
lahf
lahf
sbb
or
shrb
sbb
fst
dec
xchg
xchg
enter
inc
clc
push
leave
outsb
sbb
in
pop
cmpsl
clc
fs
mov
ss
push
and
mov
and
xchg
mov
in
push
lds
in
add
cmpsl
push
add
pop
add
xchg
xchg
mov
adc
into
push
fildl
add
fld1
jbe
dec
mov
sarb
frstor
adc
dec
mov
lods
push
lock
xor
pop
popf
push
aad
arpl
in
mov
scas
sti
mov
test
push
cmp
jmp
lret
in
cmpsb
pop
inc
cmpsb
fwait
dec
and
dec
pop
pop
fwait
pop
jge
cmp
jne
sub
mov
or
std
ja
fsts
xor
outsb
hlt
hlt
aas
ss
neg
inc
sbb
adc
fdivrp
call
or
iret
pop
sti
in
into
cmpsb
lds
aaa
inc
movsl
mov
push
jb
pop
es
mov
inc
dec
in
cs
loope
xor
addr16
push
fsubrp
mov
mov
clc
xor
mov
dec
enter
aam
pop
push
mov
stos
jb
mov
lds
push
aam
out
push
nop
lret
ljmp
outsl
icebp
jo
scas
faddl
clc
add
push
hlt
push
xchg
inc
dec
adc
push
push
int
movsb
fs
insb
inc
shl
loopne
lods
pop
std
pop
inc
dec
jnp
jp
dec
mov
xchg
ja
pop
mov
jb
loopne
mov
pop
mov
movsl
xor
xchg
stos
aas
ret
sub
adc
mov
iret
mov
movsb
aas
sub
rorb
jmp
es
sarl
xor
inc
lock
or
cmc
int3
mov
movsl
xor
jne
cwtl
fs
test
inc
cwtl
sti
ret
xchg
push
bound
ret
mov
dec
leave
lock
mov
negl
popa
test
jle
push
in
jno
sub
imul
jecxz
adc
ja
aaa
mov
adc
outsb
pop
in
mov
sub
cwtl
xchg
mov
test
sbb
mov
lock
inc
dec
out
sub
rcrb
xchg
aam
or
push
pop
mov
data16
or
adc
or
pop
iret
or
clc
scas
hlt
or
sbb
add
data16
or
jnp
jnp
cmp
sbb
mov
xor
out
and
xchg
mov
mov
lods
aas
xchg
xchg
es
push
adc
or
push
sbb
adc
or
cmp
push
loop
mov
enter
stos
test
xor
mov
mov
add
add
add
imul
add
daa
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
xor
add
add
add
inc
add
add
add
xor
or
add
mov
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
xor
sbb
add
shlb
inc
add
add
add
add
add
inc
add
add
add
xor
sbb
add
adc
inc
add
add
add
inc
add
add
lock
jp
add
loopne
inc
add
add
add
xor
incl
add
int3
xor
