outsb
adc
aas
mov
mov
pop
jno
push
int
daa
cs
shrb
lods
test
mov
lret
bound
mov
jno
in
xor
orl
test
push
mov
mov
cmp
stos
pop
inc
mov
add
int
loopne
loope
aam
cltd
iret
add
mov
jle
xchg
xchg
add
orb
stos
cli
test
mov
ljmp
cli
mov
inc
mov
pop
rcll
xchg
pop
mov
out
js
or
addr16
adc
add
xchg
leave
cmp
push
ret
lock
aas
jmp
mov
xchg
aam
pop
xor
imul
cmpsb
jecxz
push
sbbl
lea
mov
or
je
or
mov
fnsave
or
pop
xchg
ret
aad
out
jbe
loopne
jmp
mull
scas
fisttpl
pop
mov
lods
daa
lret
outsb
add
es
and
push
cmp
mov
stc
sbb
aam
arpl
pop
mov
cmc
movsl
cmp
enter
xor
xchg
inc
bound
mov
sbb
arpl
mov
cmp
rcl
repnz
add
cmp
sti
pop
adcb
negb
insl
arpl
insl
xor
push
imul
cs
repz
push
popa
int
mov
imul
sub
xchg
call
sbb
int
push
and
loop
ds
das
add
scas
sbb
cmp
out
in
and
jns
loopne
out
cmp
or
call
pop
adc
jo
sub
mov
push
jno
add
int
insl
and
push
or
push
lahf
mov
or
outsl
jnp
sbb
pop
mov
outsl
and
scas
dec
sarl
negl
test
nop
add
jmp
scas
xchg
jp
popa
xchg
push
shlb
les
iret
cwtl
jno
in
pop
or
jns
mov
dec
mov
push
xchg
fdivp
loop
and
push
and
enter
fistpll
ret
hlt
inc
jl
mov
jp
xchg
sahf
fisubl
mov
jb
or
cmp
nop
xchg
loopne
or
and
imul
pusha
sbb
xor
mov
pop
push
loopw
lods
test
sub
cltd
sbbb
jns
jecxz
mov
cli
ds
pop
mov
adc
cmp
bound
imul
push
cs
ljmp
in
aad
sub
or
mov
movsw
jl,pt
inc
add
xor
sub
mov
add
adc
push
xlat
mov
dec
in
test
cmp
mov
test
testl
and
scas
pop
mov
cmp
mov
sbb
lret
inc
jno
mov
mov
cltd
xor
nop
call
pop
xlat
or
pop
jb
mov
and
jns,pn
dec
adc
adc
fistps
mov
mov
mov
pop
das
lret
xlat
jp
mov
lods
adc
push
push
pop
cwtl
inc
outsb
sub
adc
mov
and
cld
xchg
daa
cmpsb
push
cltd
pop
sbb
bound
pop
pop
jns
adc
or
push
call
sbb
cmc
daa
lods
dec
pop
sub
sub
xor
movsl
xchg
jmp
ljmp
pop
jae
test
xchg
outsb
cmp
add
or
imul
les
inc
xchg
loop
gs
inc
stc
or
xchg
jo
xor
push
std
aad
adc
mov
adc
xchg
pop
ljmp
cmp
loop
mov
insb
and
stc
cwtl
push
andl
aaa
xchg
xor
cmp
std
or
or
dec
sbb
daa
fldenv
pop
outsb
adcb
out
sti
push
int
mov
sbb
ds
daa
out
cmp
mov
or
rcll
xchg
aad
and
xor
push
sbb
jb
sub
int
pop
iret
lock
lea
xchg
dec
adc
jno
lret
mov
xchg
xchg
repnz
mov
test
add
mov
pop
orb
sti
mov
or
sarb
sbb
xchg
js
cmc
push
out
push
movsl
fwait
xchg
mov
push
lret
and
sub
insl
rol
dec
insl
inc
negl
psubq
xchg
outsl
call
and
dec
hlt
scas
and
lret
fs
adc
cs
out
outsl
arpl
push
ja
icebp
xchg
aam
or
xchg
pop
mulb
add
repz
jmp
cltd
popa
dec
dec
stos
mov
mov
jecxz
inc
ds
outsb
out
dec
sub
mov
inc
mov
aaa
out
mov
cmc
outsl
mov
inc
lret
dec
or
jo
inc
inc
popf
push
dec
and
mov
test
mov
inc
fdivrs
lea
imul
loopne
loope
jmp
ret
mov
xchg
movsl
shll
stc
mov
sbb
jb
jmp
pop
or
repz
aam
mov
inc
or
push
lahf
xchg
jl
orb
lcall
and
lret
addr16
push
sub
push
jns
mov
movsl
adc
mov
shrb
sbb
push
ret
dec
xor
push
lret
stos
pusha
sbb
cli
in
jecxz,pn
sub
fsubs
xor
dec
lds
popf
insb
data16
mov
scas
or
pop
xchg
repnz
xor
clc
jge
jno
out
in
icebp
mov
lods
ret
xchg
pop
xchg
adc
clc
mov
xchg
add
jmp
mov
push
fisubrl
xlat
imul
pop
es
cmpsl
pop
adc
mov
in
xor
das
lock
outsl
call
mov
or
scas
std
out
nop
out
jbe
jg
icebp
stos
std
roll
and
movsb
jnp
mov
test
mov
fistps
mov
arpl
mov
and
fldcw
sub
mov
ja
add
ret
pop
shrl
je
adc
push
fcoms
in
inc
xor
or
loop
push
and
fstpt
push
pop
push
and
ds
sbb
mov
sub
mov
imul
jecxz
xor
mov
popa
ror
rcll
shll
or
sbb
mov
inc
cmp
add
out
stos
repnz
std
mov
movsl
and
cmpl
in
push
in
fcoml
aas
in
mov
insb
push
andl
xor
xor
pop
adc
or
inc
mov
sub
or
push
cmp
push
pusha
bound
jmp
lods
rolb
inc
stc
mov
push
dec
aaa
or
cmpb
push
je
shl
fsubrl
or
scas
jnp
inc
xor
xchg
popf
mov
pop
in
test
sarb
fwait
out
or
nop
mov
jmp
repnz
inc
mov
cmpb
push
push
adc
mov
push
test
cmp
mov
scas
push
push
scas
test
jmp
scas
loopne
jne
lcall
push
in
pusha
cltd
push
fsubrl
add
js
movsl
mov
and
fimull
icebp
xlat
loope
cs
es
outsb
dec
dec
call
adc
movsb
mov
stos
cltd
arpl
add
xchg
cmpl
xchg
cltd
or
mov
lret
mov
loope
mov
fldcw
add
es
xchg
mov
sub
movsb
clc
sbb
or
sbb
or
and
and
notb
cmp
ja
int3
loope
cmp
adc
adc
negb
push
xor
or
out
nop
dec
sub
pop
aam
mov
pop
fcmovb
cmp
xchg
xor
or
in
sub
cmp
sbb
inc
pop
lea
push
xor
je
and
out
clc
ret
pop
repnz
movsl
jp
stos
or
arpl
sti
and
mov
lret
mov
insb
or
cmp
and
xchg
pusha
cmp
lret
mov
push
sbb
mov
mov
cmp
inc
clc
data16
ja
lahf
dec
hlt
cltd
dec
fisubl
es
mov
fwait
push
in
fwait
sub
dec
popf
ret
test
mov
xor
add
jae
cmp
sbb
dec
dec
adcl
xchg
mov
leave
test
aad
jmp
outsb
test
sbb
and
hlt
mov
mov
test
fimull
and
mov
inc
inc
jp
push
icebp
xchg
push
jmp
fildl
int3
sbb
fcomip
cmpb
test
jnp
rclb
popa
sbb
mov
shlb
dec
stc
iret
mov
subb
test
iret
push
lea
repnz
pusha
testb
cmpsl
xchg
and
insl
adc
sub
lret
inc
stos
push
add
mov
ror
fisubl
les
cmp
mov
jge
sti
ds
ljmp
xlat
jne
xchg
push
mov
das
and
lcall
add
sti
into
xchg
lcall
mov
nop
mov
pop
inc
add
xor
pop
bound
pop
and
mov
or
test
rclb
sbb
sar
cmc
xor
inc
ljmp
jge
push
xor
test
push
scas
push
xchg
inc
xchg
repnz
dec
push
xchg
push
xor
les
push
pop
xchg
mov
mov
flds
ret
cs
dec
scas
mov
int
ret
jmp
fildll
jmp
jg
pop
add
popf
and
mov
cld
movsb
push
aad
xor
test
outsb
push
ret
jae
and
dec
je
call
dec
inc
fistl
sti
hlt
mov
testl
mov
int
add
dec
jne
out
test
into
movsl
nop
aad
and
adc
aaa
dec
dec
into
inc
and
les
dec
mov
es
pop
add
mov
rcl
jbe
mov
and
shll
add
pop
ljmp
mov
fsubl
mov
pop
xchg
dec
adc
cs
xchg
or
call
fcmovbe
adc
cmpl
xor
inc
and
cld
inc
sti
aad
and
stos
fidivrs
dec
stos
leave
rclb
xor
sbb
into
add
outsb
inc
dec
out
movsl
jbe
add
fmull
xchg
or
insb
mov
sarb
pop
mov
mov
jge
cmp
xchg
fstpt
mov
daa
daa
ret
outsl
dec
ret
nop
dec
push
xchg
addr16
xorl
pop
and
cmp
mov
or
ljmp
call
fimuls
jge
clc
add
xchg
lahf
add
sbb
dec
test
in
fwait
push
dec
ja
mov
leave
xchg
mov
dec
jns
popf
xor
test
vcmppd
enter
inc
mov
pop
sub
ret
add
adc
sbb
adcb
mov
mov
cmc
stos
fsubs
fs
jae
adc
jmp
imulb
mov
mov
pushf
cli
mov
in
arpl
inc
fucomi
dec
or
mov
test
or
sbb
and
dec
out
fldcw
test
fstl
mov
cmp
loopne
xchg
int
xor
or
call
sub
sbb
imulb
add
push
xchg
mov
pop
mov
push
fstp
mov
mov
testb
loopne
pop
test
mov
mov
ja
hlt
test
add
dec
scas
fdivr
push
push
push
enter
or
dec
mov
testl
xlat
loopne
push
sbb
dec
jg
hlt
lds
push
out
xor
jp
push
and
fadd
cs
arpl
sarl
pusha
mov
clc
js
mov
or
sub
sub
lds
fsubrp
gs
outsl
sub
popa
push
or
mov
test
mov
call
mov
pop
or
leave
xor
ss
fwait
push
out
lock
pop
subb
fdivp
add
cmp
ds
xchg
popf
loopne
sub
movsl
and
popa
je
test
jp
xor
adc
push
mov
cmc
xchg
fadd
pop
in
sbb
clc
xor
xchg
cld
shrb
fmulp
enter
sub
adc
pop
insl
call
pop
out
push
ficompl
sbb
push
enter
or
push
rol
fcoms
mov
in
sbb
sbb
add
outsl
insb
cmp
daa
fwait
arpl
mov
add
aad
xorb
push
daa
mov
mov
outsl
dec
add
js
fmull
gs
push
xchg
sub
and
fmull
add
push
arpl
enter
mov
inc
xor
mov
ds
cmp
jge
pop
in
jo
lea
fcoms
icebp
jbe
imul
data16
mov
rcrb
push
add
and
or
dec
lret
pusha
sar
test
mov
das
dec
xor
add
and
int3
lds
ret
pop
fucomp
pop
add
scas
sub
cmp
sbb
mov
aas
push
mov
xor
sub
cmp
outsl
rcll
push
dec
out
negb
jl
in
cwtl
jecxz
xor
push
xor
das
push
xchg
mov
dec
mov
xchg
stos
in
sub
jne
dec
adc
lret
je
push
sbb
into
mov
mov
imul
adc
jge
cmp
adc
out
cmp
rorl
pop
pop
sub
or
mov
adcl
flds
inc
dec
adc
mov
not
pop
fldenv
push
mov
movsb
mov
pop
push
mov
push
xor
dec
push
aaa
ljmp
or
pusha
mov
jle
pop
imul
jb
inc
push
std
jb
cmp
inc
movsb
lock
outsb
inc
mov
gs
inc
and
push
loopne
dec
lock
mov
faddl
stos
aad
jecxz
js
pop
dec
shl
std
jne
mov
sub
mov
sub
or
and
pop
cmpsb
dec
lahf
movsb
loop
mov
in
aaa
or
fdivrs
mov
cmp
sbb
cmpsb
jle
lret
movsl
in
imul
movsl
js
xchg
clc
dec
pop
fisubrs
mov
stos
imulb
outsb
addb
mov
mov
sbb
xor
sub
fdiv
pop
leave
lret
rclb
push
gs
sbb
ret
jno
imul
aad
dec
ljmp
push
sbbb
cld
pop
ret
aaa
ss
pop
mov
rolb
push
in
jle
mov
fwait
ds
inc
sub
push
mov
add
pushf
sahf
bound
adc
mov
adc
ret
jg
adc
mov
add
into
inc
lret
in
loop
mov
lret
fnstsw
fdivrl
jb
fdivr
and
icebp
cltd
or
add
pop
stc
mov
lcall
test
push
adc
inc
addr16
mov
jg
dec
scas
rcrl
out
add
mov
arpl
cmp
adc
addr16
dec
sbb
jns
add
pushf
mov
shr
and
sarb
jmp
dec
push
dec
sub
dec
int3
add
add
out
mov
mov
pop
jno
push
int
daa
cs
shrb
lods
test
mov
lret
bound
mov
jno
in
xor
orl
test
push
mov
mov
cmp
stos
pop
inc
mov
add
int
loopne
loope
aam
cltd
iret
add
mov
jle
xchg
xchg
add
orb
stos
cli
test
mov
ljmp
cli
mov
inc
mov
pop
rcll
xchg
pop
mov
out
js
or
addr16
adc
add
xchg
leave
cmp
push
ret
lock
aas
jmp
mov
xchg
aam
pop
xor
imul
cmpsb
jecxz
push
sbbl
lea
mov
or
je
or
mov
fnsave
or
pop
xchg
ret
aad
out
jbe
loopne
jmp
mull
scas
fisttpl
pop
mov
lods
daa
lret
outsb
add
es
and
push
cmp
mov
stc
sbb
aam
arpl
pop
mov
cmc
movsl
cmp
enter
xor
xchg
inc
bound
mov
sbb
arpl
mov
cmp
rcl
repnz
add
cmp
sti
pop
adcb
negb
insl
arpl
insl
xor
push
imul
cs
repz
push
popa
int
mov
imul
sub
xchg
call
sbb
int
push
and
loop
ds
das
add
scas
sbb
cmp
out
in
and
jns
loopne
out
cmp
or
call
pop
adc
jo
sub
mov
push
jno
add
int
insl
and
push
or
push
lahf
mov
or
outsl
jnp
sbb
pop
mov
outsl
and
scas
dec
sarl
negl
test
nop
add
jmp
scas
xchg
jp
popa
xchg
push
shlb
les
iret
cwtl
jno
in
pop
or
jns
mov
dec
mov
push
xchg
fdivp
loop
and
push
and
enter
fistpll
ret
hlt
inc
jl
mov
jp
xchg
sahf
fisubl
mov
jb
or
cmp
nop
xchg
loopne
or
and
imul
pusha
sbb
xor
mov
pop
push
loopw
lods
test
sub
cltd
sbbb
jns
jecxz
mov
cli
ds
pop
mov
adc
cmp
bound
imul
push
cs
ljmp
in
aad
sub
or
mov
movsw
jl,pt
inc
add
xor
sub
mov
add
adc
push
xlat
mov
dec
in
test
cmp
mov
test
testl
and
scas
pop
mov
cmp
mov
sbb
lret
inc
jno
mov
mov
cltd
xor
nop
call
pop
xlat
or
pop
jb
mov
and
jns,pn
dec
adc
adc
fistps
mov
mov
mov
pop
das
lret
xlat
jp
mov
lods
adc
push
push
pop
cwtl
inc
outsb
sub
adc
mov
and
cld
xchg
daa
cmpsb
push
cltd
pop
sbb
bound
pop
pop
jns
adc
or
push
call
sbb
cmc
daa
lods
dec
pop
sub
sub
xor
movsl
xchg
jmp
ljmp
pop
jae
test
xchg
outsb
cmp
add
or
imul
les
inc
xchg
loop
gs
inc
stc
or
xchg
jo
xor
push
std
aad
adc
mov
adc
xchg
pop
ljmp
cmp
loop
mov
insb
and
stc
cwtl
push
andl
aaa
xchg
xor
cmp
std
or
or
dec
sbb
daa
fldenv
pop
outsb
adcb
out
sti
push
int
mov
sbb
ds
daa
out
cmp
mov
or
rcll
xchg
aad
and
xor
push
sbb
jb
sub
int
pop
iret
lock
lea
xchg
dec
adc
jno
lret
mov
xchg
xchg
repnz
mov
test
add
mov
pop
orb
sti
mov
or
sarb
sbb
xchg
js
cmc
push
out
push
movsl
fwait
xchg
mov
push
lret
and
sub
insl
rol
dec
insl
inc
negl
psubq
xchg
outsl
call
and
dec
hlt
scas
and
lret
fs
adc
cs
out
outsl
arpl
push
ja
icebp
xchg
aam
or
xchg
pop
mulb
add
repz
jmp
cltd
popa
dec
dec
stos
mov
mov
jecxz
inc
ds
outsb
out
dec
sub
mov
inc
mov
aaa
out
mov
cmc
outsl
mov
inc
lret
dec
or
jo
inc
inc
popf
push
dec
and
mov
test
mov
inc
fdivrs
lea
imul
loopne
loope
jmp
ret
mov
xchg
movsl
shll
stc
mov
sbb
jb
jmp
pop
or
repz
aam
mov
inc
or
push
lahf
xchg
jl
orb
lcall
and
lret
addr16
push
sub
push
jns
mov
movsl
adc
mov
shrb
sbb
push
ret
dec
xor
push
lret
stos
pusha
sbb
cli
in
jecxz,pn
sub
fsubs
xor
dec
lds
popf
insb
data16
mov
scas
or
pop
xchg
repnz
xor
clc
jge
jno
out
in
icebp
mov
lods
ret
xchg
pop
xchg
adc
clc
mov
xchg
add
jmp
mov
push
fisubrl
xlat
imul
pop
es
cmpsl
pop
adc
mov
in
xor
das
lock
outsl
call
mov
or
scas
std
out
nop
out
jbe
jg
icebp
stos
std
roll
and
movsb
jnp
mov
test
mov
fistps
mov
arpl
mov
and
fldcw
sub
mov
ja
add
ret
pop
shrl
je
adc
push
fcoms
in
inc
xor
or
loop
push
and
fstpt
push
pop
push
and
ds
sbb
mov
sub
mov
imul
jecxz
xor
mov
popa
ror
rcll
shll
or
sbb
mov
inc
cmp
add
out
stos
repnz
std
mov
movsl
and
cmpl
in
push
in
fcoml
aas
in
mov
insb
push
andl
xor
xor
pop
adc
or
inc
mov
sub
or
push
cmp
push
pusha
bound
jmp
lods
rolb
inc
stc
mov
push
dec
aaa
or
cmpb
push
je
shl
fsubrl
or
scas
jnp
inc
xor
xchg
popf
mov
pop
in
test
sarb
fwait
out
or
nop
mov
jmp
repnz
inc
mov
cmpb
push
push
adc
mov
push
test
cmp
mov
scas
push
push
scas
test
jmp
scas
loopne
jne
lcall
push
in
pusha
cltd
push
fsubrl
add
js
movsl
mov
and
fimull
icebp
xlat
loope
cs
es
outsb
dec
dec
call
adc
movsb
mov
stos
cltd
arpl
add
xchg
cmpl
xchg
cltd
or
mov
lret
mov
loope
mov
fldcw
add
es
xchg
mov
sub
movsb
clc
sbb
or
sbb
or
and
and
notb
cmp
ja
int3
loope
cmp
adc
adc
negb
push
xor
or
out
nop
dec
sub
pop
aam
mov
pop
fcmovb
cmp
xchg
xor
or
in
sub
cmp
sbb
inc
pop
lea
push
xor
je
and
out
clc
ret
pop
repnz
movsl
jp
stos
or
arpl
sti
and
mov
lret
mov
insb
or
cmp
and
xchg
pusha
cmp
lret
mov
push
sbb
mov
mov
cmp
inc
clc
data16
ja
lahf
dec
hlt
cltd
dec
fisubl
es
mov
fwait
push
in
fwait
sub
dec
popf
ret
test
mov
xor
add
jae
cmp
sbb
dec
dec
adcl
xchg
mov
leave
test
aad
jmp
outsb
test
sbb
and
hlt
mov
mov
test
fimull
and
mov
inc
inc
jp
push
icebp
xchg
push
jmp
fildl
int3
sbb
fcomip
cmpb
test
jnp
rclb
popa
sbb
mov
shlb
dec
stc
iret
mov
subb
test
iret
push
lea
repnz
pusha
testb
cmpsl
xchg
and
insl
adc
sub
lret
inc
stos
push
add
mov
ror
fisubl
les
cmp
mov
jge
sti
ds
ljmp
xlat
jne
xchg
push
mov
das
and
lcall
add
sti
into
xchg
lcall
mov
nop
mov
pop
inc
add
xor
pop
bound
pop
and
mov
or
test
rclb
sbb
sar
cmc
xor
inc
ljmp
jge
push
xor
test
push
scas
push
xchg
inc
xchg
repnz
dec
push
xchg
push
xor
les
push
pop
xchg
mov
mov
flds
ret
cs
dec
scas
mov
int
ret
jmp
fildll
jmp
jg
pop
add
popf
and
mov
cld
movsb
push
aad
xor
test
outsb
push
ret
jae
and
dec
je
call
dec
inc
fistl
sti
hlt
mov
testl
mov
int
add
dec
jne
out
test
into
movsl
nop
aad
and
adc
aaa
dec
dec
into
inc
and
les
dec
mov
es
pop
add
mov
rcl
jbe
mov
and
shll
add
pop
ljmp
mov
fsubl
mov
pop
xchg
dec
adc
cs
xchg
or
call
fcmovbe
adc
cmpl
xor
inc
and
cld
inc
sti
aad
and
stos
fidivrs
dec
stos
leave
rclb
xor
sbb
into
add
outsb
inc
dec
out
movsl
jbe
add
fmull
xchg
or
insb
mov
sarb
pop
mov
mov
jge
cmp
xchg
fstpt
mov
daa
daa
ret
outsl
dec
ret
nop
dec
push
xchg
addr16
xorl
pop
and
cmp
mov
or
ljmp
call
fimuls
jge
clc
add
xchg
lahf
add
sbb
dec
test
in
fwait
push
dec
ja
mov
leave
xchg
mov
dec
jns
popf
xor
test
vcmppd
enter
inc
mov
pop
sub
ret
add
adc
sbb
adcb
mov
mov
cmc
stos
fsubs
fs
jae
adc
jmp
imulb
mov
mov
pushf
cli
mov
in
arpl
inc
fucomi
dec
or
mov
test
or
sbb
and
dec
out
fldcw
test
fstl
mov
cmp
loopne
xchg
int
xor
or
call
sub
sbb
imulb
add
push
xchg
mov
pop
mov
push
fstp
mov
mov
testb
loopne
pop
test
mov
mov
ja
hlt
test
add
dec
scas
fdivr
push
push
push
enter
or
dec
mov
testl
xlat
loopne
push
sbb
dec
jg
hlt
lds
push
out
xor
jp
push
and
fadd
cs
arpl
sarl
pusha
mov
clc
js
mov
or
sub
sub
lds
fsubrp
gs
outsl
sub
popa
push
or
mov
test
mov
call
mov
pop
or
leave
xor
ss
fwait
push
out
lock
pop
subb
fdivp
add
cmp
ds
xchg
popf
loopne
sub
movsl
and
popa
je
test
jp
xor
adc
push
mov
cmc
xchg
fadd
pop
in
sbb
clc
xor
xchg
cld
shrb
fmulp
enter
sub
adc
pop
insl
call
pop
out
push
ficompl
sbb
push
enter
or
push
rol
fcoms
mov
in
sbb
sbb
add
outsl
insb
cmp
daa
fwait
arpl
mov
add
aad
xorb
push
daa
mov
mov
outsl
dec
add
js
fmull
gs
push
xchg
sub
and
fmull
add
push
arpl
enter
mov
inc
xor
mov
ds
cmp
jge
pop
in
jo
lea
fcoms
icebp
jbe
imul
data16
mov
rcrb
push
add
and
or
dec
lret
pusha
sar
test
mov
das
dec
xor
add
and
int3
lds
ret
pop
fucomp
pop
add
scas
sub
cmp
sbb
mov
aas
push
mov
xor
sub
cmp
outsl
rcll
push
dec
out
negb
jl
in
cwtl
jecxz
xor
push
xor
das
push
xchg
mov
dec
mov
xchg
stos
in
sub
jne
dec
adc
lret
je
push
sbb
into
mov
mov
imul
adc
jge
cmp
adc
out
cmp
rorl
pop
pop
sub
or
mov
adcl
flds
inc
dec
adc
mov
not
pop
fldenv
push
mov
movsb
mov
pop
push
mov
push
xor
dec
push
aaa
ljmp
or
pusha
mov
jle
pop
imul
jb
inc
push
std
jb
cmp
inc
movsb
lock
outsb
inc
mov
gs
inc
and
push
loopne
dec
lock
mov
faddl
stos
aad
jecxz
js
pop
dec
shl
std
jne
mov
sub
mov
sub
or
and
pop
cmpsb
dec
lahf
movsb
loop
mov
in
aaa
or
fdivrs
mov
cmp
sbb
cmpsb
jle
lret
movsl
in
imul
movsl
js
xchg
clc
dec
pop
fisubrs
mov
stos
imulb
outsb
addb
mov
mov
sbb
xor
sub
fdiv
pop
leave
lret
rclb
push
gs
sbb
ret
jno
imul
aad
dec
ljmp
push
sbbb
cld
pop
ret
aaa
ss
pop
mov
rolb
push
in
jle
mov
fwait
ds
inc
sub
push
mov
add
pushf
sahf
bound
adc
mov
adc
ret
jg
adc
mov
add
into
inc
lret
in
loop
mov
lret
fnstsw
fdivrl
jb
fdivr
and
icebp
cltd
or
add
pop
stc
mov
lcall
test
push
adc
inc
addr16
mov
jg
dec
scas
rcrl
out
add
mov
arpl
cmp
adc
addr16
dec
sbb
jns
add
pushf
mov
shr
and
sarb
jmp
dec
push
dec
sub
add
lret
fwait
mov
pushf
pop
or
into
jno
test
out
pushf
in
int3
dec
aaa
push
aad
sbb
xchg
pushf
pop
fists
adc
mov
mov
fs
or
jo
xchg
dec
dec
inc
add
push
mov
push
xor
add
or
out
push
xchg
out
push
ret
into
sti
or
sarb
pop
pop
push
inc
in
insl
leave
hlt
jge
mov
adc
xlat
adc
jns
popf
push
mull
add
adc
jno
lcall
subb
dec
mov
sub
and
lahf
inc
mov
cwtl
test
push
pop
xchg
rcrl
add
mov
jbe
jb
sub
xor
psrlw
or
mov
xor
and
iret
int
ljmp
sbb
sub
push
mov
adc
dec
cwtl
sub
pop
imul
push
or
lock
ret
aam
pop
pop
inc
cmp
cmp
dec
xor
insb
sub
lret
pop
mov
push
inc
jns
pushf
pop
or
cmp
ja
add
mov
iret
fdivl
inc
lods
xchg
jmp
cmc
test
neg
out
add
jg
and
rol
pop
je
dec
daa
mov
cltd
push
mov
sarl
pop
push
xlat
aas
inc
sbb
fdivr
nop
push
add
pusha
ret
arpl
jl
out
or
into
cmovno
fdivl
xor
jg
sar
sbb
stc
das
lock
hlt
xchg
xchg
push
jne
clc
setp
push
out
loop
push
mov
movsb
and
ret
mov
inc
frstor
sub
or
and
sarl
popa
addr16
nop
jg
or
into
cld
xor
lock
ja
std
add
add
adc
fcoms
orl
cmpsl
sbb
dec
lret
dec
out
inc
push
and
call
inc
mov
ljmp
adc
pop
mov
cmpsl
sbb
lret
mov
or
out
cmp
aaa
jno
inc
jecxz
cmc
sbb
and
or
push
mov
push
mov
in
adc
clc
in
jecxz
cmp
jno
inc
popf
cmpsb
shr
push
lods
mov
pop
mov
stos
or
jp
iret
outsb
mov
cmp
sahf
jne
add
xor
sub
fwait
dec
mov
or
cmp
sub
push
or
sbb
bound
cmpsb
inc
loopne
int
push
xor
mov
cmpsl
mov
mov
push
fcomip
mov
dec
push
ljmp
out
inc
ss
adc
jg
push
nop
mov
mov
mov
mov
lods
mov
xor
adc
dec
test
xor
dec
mov
daa
in
pop
mov
xchg
mov
dec
sahf
mov
mov
insl
mov
jmp
pushf
and
test
lcall
fbstp
movsl
xor
scas
scas
pusha
inc
or
adc
mov
xchg
cmc
dec
xchg
mov
mov
cli
or
and
cmp
xor
adcb
mov
dec
mov
mov
rcrl
lock
ss
out
mov
ljmp
jmp
cld
xchg
xlat
jge
pop
sub
jae
fcmovne
shr
push
mov
mov
mov
fs
mov
mov
cmp
repnz
cmc
cmpsb
mov
xor
sub
mov
mov
mov
mov
mov
add
sub
mov
add
mov
sub
mov
call
mov
pop
mov
dec
mov
mov
mov
add
mov
inc
mov
add
mov
sub
mov
dec
mov
mov
mov
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
test
je
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
mov
dec
mov
jne
mov
mov
mov
pusha
mov
mov
xor
push
push
mov
xor
push
mov
xor
push
add
mov
call
popa
push
push
push
push
mov
mov
call
mov
add
mov
add
xor
nop
add
nop
mov
nop
sub
nop
add
nop
inc
add
nop
test
jne
sub
jmp
gs
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
ss
lcall
mov
testl
movsl
mov
iret
or
nop
dec
mov
les
es
sti
and
adc
negb
xor
imul
test
lods
sub
data16
aam
cmpsl
jle
hlt
scas
mov
ljmp
jb
lods
movsb
add
jg
push
enter
mov
dec
xchg
fs
lret
jb
inc
test
popa
adc
aaa
add
cmp
frstor
pop
hlt
push
add
and
mov
test
or
je
cmp
mov
data16
or
shll
push
jae
mov
int3
inc
negl
stc
negl
loopne
xchg
xchg
imul
pushf
ss
inc
nop
movsb
push
dec
ficoms
pop
or
lods
es
xchg
push
pop
add
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
jmp
mov
add
mov
push
mov
ret
mov
notb
xor
jnp
sbb
cmp
jno
ss
fimuls
and
inc
orps
sub
sbb
imul
xchg
push
repnz
or
outsb
shr
cs
repnz
daa
pushf
jno
js
or
mov
sbb
mov
pop
inc
jg
cmp
adc
cmp
std
iret
jo
sub
pop
jg
nop
sbb
dec
les
mov
mov
pop
jbe
mov
xor
xlat
pop
sbb
add
shll
dec
dec
out
loopne
nop
fildll
lods
jns
test
adcl
mov
mov
lret
or
push
movsl
fistl
pusha
push
roll
or
xchg
shll
inc
sbbb
cmpsl
mov
jbe
or
sbb
les
xchg
iret
test
les
sub
jbe
lea
jge
adc
and
adc
xchg
mov
data16
ffree
cld
xor
jecxz
int
inc
adc
cmp
fiaddl
adc
nop
stos
je
sub
mov
pushf
lods
jb
scas
cmp
push
loope
xor
mov
push
data16
jle
cmp
outsb
les
test
mov
cmp
push
xchg
adc
hlt
clc
dec
ja
inc
mov
inc
adc
cltd
out
sti
push
je
jecxz
sub
ret
adc
mov
cwtl
shrl
mov
dec
sub
and
mov
push
popf
cld
stc
lret
fs
pop
xchg
sbb
ljmp
add
ret
mov
cmp
mov
inc
sbb
inc
outsl
outsl
xchg
aaa
xor
aad
test
dec
subl
pop
jno
cs
xchg
adc
pop
and
fsubs
push
jbe
fidivs
jb
hlt
mov
popaw
out
orb
stos
xchg
or
rclb
idivb
xchg
js
aad
xchg
in
mov
lods
aas
call
inc
movsl
data16
cld
decb
dec
xchg
xor
jb
test
inc
sub
or
mov
call
lock
mov
testl
fsts
cmp
and
cmp
jle
xchg
loope
jp
enter
out
mov
sbb
arpl
adc
jl
test
cmp
mov
loop
inc
fisttps
jl
jbe
inc
jb
pop
lahf
pop
jae,pn
dec
mov
les
pusha
xchg
jp
notb
add
jecxz
adc
sub
sbb
pop
fsubs
fistpl
call
orl
and
push
dec
sub
adc
xchg
mov
shll
ss
push
cs
mov
xor
mov
push
sbb
push
lea
rcrl
stos
mov
push
inc
iret
pop
imul
jle
decb
mov
xor
cltd
xchg
mov
loope
stos
or
mov
mov
negl
fistpl
sub
add
sub
or
lock
or
jb
aam
mov
jbe
outsb
mov
gs
mov
cli
jp
fnstcw
leave
adc
jno
mov
mov
arpl
ds
add
test
mov
and
pop
iret
out
fstl
jno
xchg
test
leave
stos
lret
jb
jmp
adc
cmp
test
cmp
push
add
inc
push
cmovae
mov
imul
mov
nop
lods
jne
jae
and
sbb
push
mov
jbe
fstl
scas
dec
es
inc
pop
pop
mov
dec
jle
inc
push
jo
jbe
jle
mov
icebp
jnp
lock
sbb
pop
leave
cmp
lret
mov
dec
mov
in
rcll
jb
enter
nop
sub
cmp
xor
and
shrb
insl
movsl
pushf
repnz
mov
dec
sub
and
adc
ret
lcall
out
pop
xchg
mov
or
dec
dec
mov
in
nop
jl
repnz
out
and
and
dec
xchg
data16
jl
mov
jecxz
in
fstl
icebp
jge
lret
cld
out
jl
out
jo
insb
pop
xchg
repnz
and
imul
add
pop
sbb
mov
and
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
add
add
out
mov
mov
pop
jno
push
int
daa
cs
shrb
lods
test
mov
lret
bound
mov
jno
in
xor
orl
test
push
mov
mov
cmp
stos
pop
inc
mov
add
int
loopne
loope
aam
cltd
iret
add
mov
jle
xchg
xchg
add
orb
stos
cli
test
mov
ljmp
cli
mov
inc
mov
pop
rcll
xchg
pop
mov
out
js
or
addr16
adc
add
xchg
leave
cmp
push
ret
lock
aas
jmp
mov
xchg
aam
pop
xor
imul
cmpsb
jecxz
push
sbbl
lea
mov
or
je
or
mov
fnsave
or
pop
xchg
ret
aad
out
jbe
loopne
jmp
mull
scas
fisttpl
pop
mov
lods
daa
lret
outsb
add
es
and
push
cmp
mov
stc
sbb
aam
arpl
pop
mov
cmc
movsl
cmp
enter
xor
xchg
inc
bound
mov
sbb
arpl
mov
cmp
rcl
repnz
add
cmp
sti
pop
adcb
negb
insl
arpl
insl
xor
push
imul
cs
repz
push
popa
int
mov
imul
sub
xchg
call
sbb
int
push
and
loop
ds
das
add
scas
sbb
cmp
out
in
and
jns
loopne
out
cmp
or
call
pop
adc
jo
sub
mov
push
jno
add
int
insl
and
push
or
push
lahf
mov
or
outsl
jnp
sbb
pop
mov
outsl
and
scas
dec
sarl
negl
test
nop
add
jmp
scas
xchg
jp
popa
xchg
push
shlb
les
iret
cwtl
jno
in
pop
or
jns
mov
dec
mov
push
xchg
fdivp
loop
and
push
and
enter
fistpll
ret
hlt
inc
jl
mov
jp
xchg
sahf
fisubl
mov
jb
or
cmp
nop
xchg
loopne
or
and
imul
pusha
sbb
xor
mov
pop
push
loopw
lods
test
sub
cltd
sbbb
jns
jecxz
mov
cli
ds
pop
mov
adc
cmp
bound
imul
push
cs
ljmp
in
aad
sub
or
mov
movsw
jl,pt
inc
add
xor
sub
mov
add
adc
push
xlat
mov
dec
in
test
cmp
mov
test
testl
and
scas
pop
mov
cmp
mov
sbb
lret
inc
jno
mov
mov
cltd
xor
nop
call
pop
xlat
or
pop
jb
mov
and
jns,pn
dec
adc
adc
fistps
mov
mov
mov
pop
das
lret
xlat
jp
mov
lods
adc
push
push
pop
cwtl
inc
outsb
sub
adc
mov
and
cld
xchg
daa
cmpsb
push
cltd
pop
sbb
bound
pop
pop
jns
adc
or
push
call
sbb
cmc
daa
lods
dec
pop
sub
sub
xor
movsl
xchg
jmp
ljmp
pop
jae
test
xchg
outsb
cmp
add
or
imul
les
inc
xchg
loop
gs
inc
stc
or
xchg
jo
xor
push
std
aad
adc
mov
adc
xchg
pop
ljmp
cmp
loop
mov
insb
and
stc
cwtl
push
andl
aaa
xchg
xor
cmp
std
or
or
dec
sbb
daa
fldenv
pop
outsb
adcb
out
sti
push
int
mov
sbb
ds
daa
out
cmp
mov
or
rcll
xchg
aad
and
xor
push
sbb
jb
sub
int
pop
iret
lock
lea
xchg
dec
adc
jno
lret
mov
xchg
xchg
repnz
mov
test
add
mov
pop
orb
sti
mov
or
sarb
sbb
xchg
js
cmc
push
out
push
movsl
fwait
xchg
mov
push
lret
and
sub
insl
rol
dec
insl
inc
negl
psubq
xchg
outsl
call
and
dec
hlt
scas
and
lret
fs
adc
cs
out
outsl
arpl
push
ja
icebp
xchg
aam
or
xchg
pop
mulb
add
repz
jmp
cltd
popa
dec
dec
stos
mov
mov
jecxz
inc
ds
outsb
out
dec
sub
mov
inc
mov
aaa
out
mov
cmc
outsl
mov
inc
lret
dec
or
jo
inc
inc
popf
push
dec
and
mov
test
mov
inc
fdivrs
lea
imul
loopne
loope
jmp
ret
mov
xchg
movsl
shll
stc
mov
sbb
jb
jmp
pop
or
repz
aam
mov
inc
or
push
lahf
xchg
jl
orb
lcall
and
lret
addr16
push
sub
push
jns
mov
movsl
adc
mov
shrb
sbb
push
ret
dec
xor
push
lret
stos
pusha
sbb
cli
in
jecxz,pn
sub
fsubs
xor
dec
lds
popf
insb
data16
mov
scas
or
pop
xchg
repnz
xor
clc
jge
jno
out
in
icebp
mov
lods
ret
xchg
pop
xchg
adc
clc
mov
xchg
add
jmp
mov
push
fisubrl
xlat
imul
pop
es
cmpsl
pop
adc
mov
in
xor
das
lock
outsl
call
mov
or
scas
std
out
nop
out
jbe
jg
icebp
stos
std
roll
and
movsb
jnp
mov
test
mov
fistps
mov
arpl
mov
and
fldcw
sub
mov
ja
add
ret
pop
shrl
je
adc
push
fcoms
in
inc
xor
or
loop
push
and
fstpt
push
pop
push
and
ds
sbb
mov
sub
mov
imul
jecxz
xor
mov
popa
ror
rcll
shll
or
sbb
mov
inc
cmp
add
out
stos
repnz
std
mov
movsl
and
cmpl
in
push
in
fcoml
aas
in
mov
insb
push
andl
xor
xor
pop
adc
or
inc
mov
sub
or
push
cmp
push
pusha
bound
jmp
lods
rolb
inc
stc
mov
push
dec
aaa
or
cmpb
push
je
shl
fsubrl
or
scas
jnp
inc
xor
xchg
popf
mov
pop
in
test
sarb
fwait
out
or
nop
mov
jmp
repnz
inc
mov
cmpb
push
push
adc
mov
push
test
cmp
mov
scas
push
push
scas
test
jmp
scas
loopne
jne
lcall
push
in
pusha
cltd
push
fsubrl
add
js
movsl
mov
and
fimull
icebp
xlat
loope
cs
es
outsb
dec
dec
call
adc
movsb
mov
stos
cltd
arpl
add
xchg
cmpl
xchg
cltd
or
mov
lret
mov
loope
mov
fldcw
add
es
xchg
mov
sub
movsb
clc
sbb
or
sbb
or
and
and
notb
cmp
ja
int3
loope
cmp
adc
adc
negb
push
xor
or
out
nop
dec
sub
pop
aam
mov
pop
fcmovb
cmp
xchg
xor
or
in
sub
cmp
sbb
inc
pop
lea
push
xor
je
and
out
clc
ret
pop
repnz
movsl
jp
stos
or
arpl
sti
and
mov
lret
mov
insb
or
cmp
and
xchg
pusha
cmp
lret
mov
push
sbb
mov
mov
cmp
inc
clc
data16
ja
lahf
dec
hlt
cltd
dec
fisubl
es
mov
fwait
push
in
fwait
sub
dec
popf
ret
test
mov
xor
add
jae
cmp
sbb
dec
dec
adcl
xchg
mov
leave
test
aad
jmp
outsb
test
sbb
and
hlt
mov
mov
test
fimull
and
mov
inc
inc
jp
push
icebp
xchg
push
jmp
fildl
int3
sbb
fcomip
cmpb
test
jnp
rclb
popa
sbb
mov
shlb
dec
stc
iret
mov
subb
test
iret
push
lea
repnz
pusha
testb
cmpsl
xchg
and
insl
adc
sub
lret
inc
stos
push
add
mov
ror
fisubl
les
cmp
mov
jge
sti
ds
ljmp
xlat
jne
xchg
push
mov
das
and
lcall
add
sti
into
xchg
lcall
mov
nop
mov
pop
inc
add
xor
pop
bound
pop
and
mov
or
test
rclb
sbb
sar
cmc
xor
inc
ljmp
jge
push
xor
test
push
scas
push
xchg
inc
xchg
repnz
dec
push
xchg
push
xor
les
push
pop
xchg
mov
mov
flds
ret
cs
dec
scas
mov
int
ret
jmp
fildll
jmp
jg
pop
add
popf
and
mov
cld
movsb
push
aad
xor
test
outsb
push
ret
jae
and
dec
je
call
dec
inc
fistl
sti
hlt
mov
testl
mov
int
add
dec
jne
out
test
into
movsl
nop
aad
and
adc
aaa
dec
dec
into
inc
and
les
dec
mov
es
pop
add
mov
rcl
jbe
mov
and
shll
add
pop
ljmp
mov
fsubl
mov
pop
xchg
dec
adc
cs
xchg
or
call
fcmovbe
adc
cmpl
xor
inc
and
cld
inc
sti
aad
and
stos
fidivrs
dec
stos
leave
rclb
xor
sbb
into
add
outsb
inc
dec
out
movsl
jbe
add
fmull
xchg
or
insb
mov
sarb
pop
mov
mov
jge
cmp
xchg
fstpt
mov
daa
daa
ret
outsl
dec
ret
nop
dec
push
xchg
addr16
xorl
pop
and
cmp
mov
or
ljmp
call
fimuls
jge
clc
add
xchg
lahf
add
sbb
dec
test
in
fwait
push
dec
ja
mov
leave
xchg
mov
dec
jns
popf
xor
test
vcmppd
enter
inc
mov
pop
sub
ret
add
adc
sbb
adcb
mov
mov
cmc
stos
fsubs
fs
jae
adc
jmp
imulb
mov
mov
pushf
cli
mov
in
arpl
inc
fucomi
dec
or
mov
test
or
sbb
and
dec
out
fldcw
test
fstl
mov
cmp
loopne
xchg
int
xor
or
call
sub
sbb
imulb
add
push
xchg
mov
pop
mov
push
fstp
mov
mov
testb
loopne
pop
test
mov
mov
ja
hlt
test
add
dec
scas
fdivr
push
push
push
enter
or
dec
mov
testl
xlat
loopne
push
sbb
dec
jg
hlt
lds
push
out
xor
jp
push
and
fadd
cs
arpl
sarl
pusha
mov
clc
js
mov
or
sub
sub
lds
fsubrp
gs
outsl
sub
popa
push
or
mov
test
mov
call
mov
pop
or
leave
xor
ss
fwait
push
out
lock
pop
subb
fdivp
add
cmp
ds
xchg
popf
loopne
sub
movsl
and
popa
je
test
jp
xor
adc
push
mov
cmc
xchg
fadd
pop
in
sbb
clc
xor
xchg
cld
shrb
fmulp
enter
sub
adc
pop
insl
call
pop
out
push
ficompl
sbb
push
enter
or
push
rol
fcoms
mov
in
sbb
sbb
add
outsl
insb
cmp
daa
fwait
arpl
mov
add
aad
xorb
push
daa
mov
mov
outsl
dec
add
js
fmull
gs
push
xchg
sub
and
fmull
add
push
arpl
enter
mov
inc
xor
mov
ds
cmp
jge
pop
in
jo
lea
fcoms
icebp
jbe
imul
data16
mov
rcrb
push
add
and
or
dec
lret
pusha
sar
test
mov
das
dec
xor
add
and
int3
lds
ret
pop
fucomp
pop
add
scas
sub
cmp
sbb
mov
aas
push
mov
xor
sub
cmp
outsl
rcll
push
dec
out
negb
jl
in
cwtl
jecxz
xor
push
xor
das
push
xchg
mov
dec
mov
xchg
stos
in
sub
jne
dec
adc
lret
je
push
sbb
into
mov
mov
imul
adc
jge
cmp
adc
out
cmp
rorl
pop
pop
sub
or
mov
adcl
flds
inc
dec
adc
mov
not
pop
fldenv
push
mov
movsb
mov
pop
push
mov
push
xor
dec
push
aaa
ljmp
or
pusha
mov
jle
pop
imul
jb
inc
push
std
jb
cmp
inc
movsb
lock
outsb
inc
mov
gs
inc
and
push
loopne
dec
lock
mov
faddl
stos
aad
jecxz
js
pop
dec
shl
std
jne
mov
sub
mov
sub
or
and
pop
cmpsb
dec
lahf
movsb
loop
mov
in
aaa
or
fdivrs
mov
cmp
sbb
cmpsb
jle
lret
movsl
in
imul
movsl
js
xchg
clc
dec
pop
fisubrs
mov
stos
imulb
outsb
addb
mov
mov
sbb
xor
sub
fdiv
pop
leave
lret
rclb
push
gs
sbb
ret
jno
imul
aad
dec
ljmp
push
sbbb
cld
pop
ret
aaa
ss
pop
mov
rolb
push
in
jle
mov
fwait
ds
inc
sub
push
mov
add
pushf
sahf
bound
adc
mov
adc
ret
jg
adc
mov
add
into
inc
lret
in
loop
mov
lret
fnstsw
fdivrl
jb
fdivr
and
icebp
cltd
or
add
pop
stc
mov
lcall
test
push
adc
inc
addr16
mov
jg
dec
scas
rcrl
out
add
mov
arpl
cmp
adc
addr16
dec
sbb
jns
add
pushf
mov
shr
and
sarb
jmp
dec
push
dec
sub
dec
int3
add
add
out
mov
mov
pop
jno
push
int
daa
cs
shrb
lods
test
mov
lret
bound
mov
jno
in
xor
orl
test
push
mov
mov
cmp
stos
pop
inc
mov
add
int
loopne
loope
aam
cltd
iret
add
mov
jle
xchg
xchg
add
orb
stos
cli
test
mov
ljmp
cli
mov
inc
mov
pop
rcll
xchg
pop
mov
out
js
or
addr16
adc
add
xchg
leave
cmp
push
ret
lock
aas
jmp
mov
xchg
aam
pop
xor
imul
cmpsb
jecxz
push
sbbl
lea
mov
or
je
or
mov
fnsave
or
pop
xchg
ret
aad
out
jbe
loopne
jmp
mull
scas
fisttpl
pop
mov
lods
daa
lret
outsb
add
es
and
push
cmp
mov
stc
sbb
aam
arpl
pop
mov
cmc
movsl
cmp
enter
xor
xchg
inc
bound
mov
sbb
arpl
mov
cmp
rcl
repnz
add
cmp
sti
pop
adcb
negb
insl
arpl
insl
xor
push
imul
cs
repz
push
popa
int
mov
imul
sub
xchg
call
sbb
int
push
and
loop
ds
das
add
scas
sbb
cmp
out
in
and
jns
loopne
out
cmp
or
call
pop
adc
jo
sub
mov
push
jno
add
int
insl
and
push
or
push
lahf
mov
or
outsl
jnp
sbb
pop
mov
outsl
and
scas
dec
sarl
negl
test
nop
add
jmp
scas
xchg
jp
popa
xchg
push
shlb
les
iret
cwtl
jno
in
pop
or
jns
mov
dec
mov
push
xchg
fdivp
loop
and
push
and
enter
fistpll
ret
hlt
inc
jl
mov
jp
xchg
sahf
fisubl
mov
jb
or
cmp
nop
xchg
loopne
or
and
imul
pusha
sbb
xor
mov
pop
push
loopw
lods
test
sub
cltd
sbbb
jns
jecxz
mov
cli
ds
pop
mov
adc
cmp
bound
imul
push
cs
ljmp
in
aad
sub
or
mov
movsw
jl,pt
inc
add
xor
sub
mov
add
adc
push
xlat
mov
dec
in
test
cmp
mov
test
testl
and
scas
pop
mov
cmp
mov
sbb
lret
inc
jno
mov
mov
cltd
xor
nop
call
pop
xlat
or
pop
jb
mov
and
jns,pn
dec
adc
adc
fistps
mov
mov
mov
pop
das
lret
xlat
jp
mov
lods
adc
push
push
pop
cwtl
inc
outsb
sub
adc
mov
and
cld
xchg
daa
cmpsb
push
cltd
pop
sbb
bound
pop
pop
jns
adc
or
push
call
sbb
cmc
daa
lods
dec
pop
sub
sub
xor
movsl
xchg
jmp
ljmp
pop
jae
test
xchg
outsb
cmp
add
or
imul
les
inc
xchg
loop
gs
inc
stc
or
xchg
jo
xor
push
std
aad
adc
mov
adc
xchg
pop
ljmp
cmp
loop
mov
insb
and
stc
cwtl
push
andl
aaa
xchg
xor
cmp
std
or
or
dec
sbb
daa
fldenv
pop
outsb
adcb
out
sti
push
int
mov
sbb
ds
daa
out
cmp
mov
or
rcll
xchg
aad
and
xor
push
sbb
jb
sub
int
pop
iret
lock
lea
xchg
dec
adc
jno
lret
mov
xchg
xchg
repnz
mov
test
add
mov
pop
orb
sti
mov
or
sarb
sbb
xchg
js
cmc
push
out
push
movsl
fwait
xchg
mov
push
lret
and
sub
insl
rol
dec
insl
inc
negl
psubq
xchg
outsl
call
and
dec
hlt
scas
and
lret
fs
adc
cs
out
outsl
arpl
push
ja
icebp
xchg
aam
or
xchg
pop
mulb
add
repz
jmp
cltd
popa
dec
dec
stos
mov
mov
jecxz
inc
ds
outsb
out
dec
sub
mov
inc
mov
aaa
out
mov
cmc
outsl
mov
inc
lret
dec
or
jo
inc
inc
popf
push
dec
and
mov
test
mov
inc
fdivrs
lea
imul
loopne
loope
jmp
ret
mov
xchg
movsl
shll
stc
mov
sbb
jb
jmp
pop
or
repz
aam
mov
inc
or
push
lahf
xchg
jl
orb
lcall
and
lret
addr16
push
sub
push
jns
mov
movsl
adc
mov
shrb
sbb
push
ret
dec
xor
push
lret
stos
pusha
sbb
cli
in
jecxz,pn
sub
fsubs
xor
dec
lds
popf
insb
data16
mov
scas
or
pop
xchg
repnz
xor
clc
jge
jno
out
in
icebp
mov
lods
ret
xchg
pop
xchg
adc
clc
mov
xchg
add
jmp
mov
push
fisubrl
xlat
imul
pop
es
cmpsl
pop
adc
mov
in
xor
das
lock
outsl
call
mov
or
scas
std
out
nop
out
jbe
jg
icebp
stos
std
roll
and
movsb
jnp
mov
test
mov
fistps
mov
arpl
mov
and
fldcw
sub
mov
ja
add
ret
pop
shrl
je
adc
push
fcoms
in
inc
xor
or
loop
push
and
fstpt
push
pop
push
and
ds
sbb
mov
sub
mov
imul
jecxz
xor
mov
popa
ror
rcll
shll
or
sbb
mov
inc
cmp
add
out
stos
repnz
std
mov
movsl
and
cmpl
in
push
in
fcoml
aas
in
mov
insb
push
andl
xor
xor
pop
adc
or
inc
mov
sub
or
push
cmp
push
pusha
bound
jmp
lods
rolb
inc
stc
mov
push
dec
aaa
or
cmpb
push
je
shl
fsubrl
or
scas
jnp
inc
xor
xchg
popf
mov
pop
in
test
sarb
fwait
out
or
nop
mov
jmp
repnz
inc
mov
cmpb
push
push
adc
mov
push
test
cmp
mov
scas
push
push
scas
test
jmp
scas
loopne
jne
lcall
push
in
pusha
cltd
push
fsubrl
add
js
movsl
mov
and
fimull
icebp
xlat
loope
cs
es
outsb
dec
dec
call
adc
movsb
mov
stos
cltd
arpl
add
xchg
cmpl
xchg
cltd
or
mov
lret
mov
loope
mov
fldcw
add
es
xchg
mov
sub
movsb
clc
sbb
or
sbb
or
and
and
notb
cmp
ja
int3
loope
cmp
adc
adc
negb
push
xor
or
out
nop
dec
sub
pop
aam
mov
pop
fcmovb
cmp
xchg
xor
or
in
sub
cmp
sbb
inc
pop
lea
push
xor
je
and
out
clc
ret
pop
repnz
movsl
jp
stos
or
arpl
sti
and
mov
lret
mov
insb
or
cmp
and
xchg
pusha
cmp
lret
mov
push
sbb
mov
mov
cmp
inc
clc
data16
ja
lahf
dec
hlt
cltd
dec
fisubl
es
mov
fwait
push
in
fwait
sub
dec
popf
ret
test
mov
xor
add
jae
cmp
sbb
dec
dec
adcl
xchg
mov
leave
test
aad
jmp
outsb
test
sbb
and
hlt
mov
mov
test
fimull
and
mov
inc
inc
jp
push
icebp
xchg
push
jmp
fildl
int3
sbb
fcomip
cmpb
test
jnp
rclb
popa
sbb
mov
shlb
dec
stc
iret
mov
subb
test
iret
push
lea
repnz
pusha
testb
cmpsl
xchg
and
insl
adc
sub
lret
inc
stos
push
add
mov
ror
fisubl
les
cmp
mov
jge
sti
ds
ljmp
xlat
jne
xchg
push
mov
das
and
lcall
add
sti
into
xchg
lcall
mov
nop
mov
pop
inc
add
xor
pop
bound
pop
and
mov
or
test
rclb
sbb
sar
cmc
xor
inc
ljmp
jge
push
xor
test
push
scas
push
xchg
inc
xchg
repnz
dec
push
xchg
push
xor
les
push
pop
xchg
mov
mov
flds
ret
cs
dec
scas
mov
int
ret
jmp
fildll
jmp
jg
pop
add
popf
and
mov
cld
movsb
push
aad
xor
test
outsb
push
ret
jae
and
dec
je
call
dec
inc
fistl
sti
hlt
mov
testl
mov
int
add
dec
jne
out
test
into
movsl
nop
aad
and
adc
aaa
dec
dec
into
inc
and
les
dec
mov
es
pop
add
mov
rcl
jbe
mov
and
shll
add
pop
ljmp
mov
fsubl
mov
pop
xchg
dec
adc
cs
xchg
or
call
fcmovbe
adc
cmpl
xor
inc
and
cld
inc
sti
aad
and
stos
fidivrs
dec
stos
leave
rclb
xor
sbb
into
add
outsb
inc
dec
out
movsl
jbe
add
fmull
xchg
or
insb
mov
sarb
pop
mov
mov
jge
cmp
xchg
fstpt
mov
daa
daa
ret
outsl
dec
ret
nop
dec
push
xchg
addr16
xorl
pop
and
cmp
mov
or
ljmp
call
fimuls
jge
clc
add
xchg
lahf
add
sbb
dec
test
in
fwait
push
dec
ja
mov
leave
xchg
mov
dec
jns
popf
xor
test
vcmppd
enter
inc
mov
pop
sub
ret
add
adc
sbb
adcb
mov
mov
cmc
stos
fsubs
fs
jae
adc
jmp
imulb
mov
mov
pushf
cli
mov
in
arpl
inc
fucomi
dec
or
mov
test
or
sbb
and
dec
out
fldcw
test
fstl
mov
cmp
loopne
xchg
int
xor
or
call
sub
sbb
imulb
add
push
xchg
mov
pop
mov
push
fstp
mov
mov
testb
loopne
pop
test
mov
mov
ja
hlt
test
add
dec
scas
fdivr
push
push
push
enter
or
dec
mov
testl
xlat
loopne
push
sbb
dec
jg
hlt
lds
push
out
xor
jp
push
and
fadd
cs
arpl
sarl
pusha
mov
clc
js
mov
or
sub
sub
lds
fsubrp
gs
outsl
sub
popa
push
or
mov
test
mov
call
mov
pop
or
leave
xor
ss
fwait
push
out
lock
pop
subb
fdivp
add
cmp
ds
xchg
popf
loopne
sub
movsl
and
popa
je
test
jp
xor
adc
push
mov
cmc
xchg
fadd
pop
in
sbb
clc
xor
xchg
cld
shrb
fmulp
enter
sub
adc
pop
insl
call
pop
out
push
ficompl
sbb
push
enter
or
push
rol
fcoms
mov
in
sbb
sbb
add
outsl
insb
cmp
daa
fwait
arpl
mov
add
aad
xorb
push
daa
mov
mov
outsl
dec
add
js
fmull
gs
push
xchg
sub
and
fmull
add
push
arpl
enter
mov
inc
xor
mov
ds
cmp
jge
pop
in
jo
lea
fcoms
icebp
jbe
imul
data16
mov
rcrb
push
add
and
or
dec
lret
pusha
sar
test
mov
das
dec
xor
add
and
int3
lds
ret
pop
fucomp
pop
add
scas
sub
cmp
sbb
mov
aas
push
mov
xor
sub
cmp
outsl
rcll
push
dec
out
negb
jl
in
cwtl
jecxz
xor
push
xor
das
push
xchg
mov
dec
mov
xchg
stos
in
sub
jne
dec
adc
lret
je
push
sbb
into
mov
mov
imul
adc
jge
cmp
adc
out
cmp
rorl
pop
pop
sub
or
mov
adcl
flds
inc
dec
adc
mov
not
pop
fldenv
push
mov
movsb
mov
pop
push
mov
push
xor
dec
push
aaa
ljmp
or
pusha
mov
jle
pop
imul
jb
inc
push
std
jb
cmp
inc
movsb
lock
outsb
inc
mov
gs
inc
and
push
loopne
dec
lock
mov
faddl
stos
aad
jecxz
js
pop
dec
shl
std
jne
mov
sub
mov
sub
or
and
pop
cmpsb
dec
lahf
movsb
loop
mov
in
aaa
or
fdivrs
mov
cmp
sbb
cmpsb
jle
lret
movsl
in
imul
movsl
js
xchg
clc
dec
pop
fisubrs
mov
stos
imulb
outsb
addb
mov
mov
sbb
xor
sub
fdiv
pop
leave
lret
rclb
push
gs
sbb
ret
jno
imul
aad
dec
ljmp
push
sbbb
cld
pop
ret
aaa
ss
pop
mov
rolb
push
in
jle
mov
fwait
ds
inc
sub
push
mov
add
pushf
sahf
bound
adc
mov
adc
ret
jg
adc
mov
add
into
inc
lret
in
loop
mov
lret
fnstsw
fdivrl
jb
fdivr
and
icebp
cltd
or
add
pop
stc
mov
lcall
test
push
adc
inc
addr16
mov
jg
dec
scas
rcrl
out
add
mov
arpl
cmp
adc
addr16
dec
sbb
jns
add
pushf
mov
shr
and
sarb
jmp
dec
push
dec
sub
add
lret
fwait
mov
pushf
pop
or
into
jno
test
out
pushf
in
int3
dec
aaa
push
aad
sbb
xchg
pushf
pop
fists
adc
mov
mov
fs
or
jo
xchg
dec
dec
inc
add
push
mov
push
xor
add
or
out
push
xchg
out
push
ret
into
sti
or
sarb
pop
pop
push
inc
in
insl
leave
hlt
jge
mov
adc
xlat
adc
jns
popf
push
mull
add
adc
jno
lcall
subb
dec
mov
sub
and
lahf
inc
mov
cwtl
test
push
pop
xchg
rcrl
add
mov
jbe
jb
sub
xor
psrlw
or
mov
xor
and
iret
int
ljmp
sbb
sub
push
mov
adc
dec
cwtl
sub
pop
imul
push
or
lock
ret
aam
pop
pop
inc
cmp
cmp
dec
xor
insb
sub
lret
pop
mov
push
inc
jns
pushf
pop
or
cmp
ja
add
mov
iret
fdivl
inc
lods
xchg
jmp
cmc
test
neg
out
add
jg
and
rol
pop
je
dec
daa
mov
cltd
push
mov
sarl
pop
push
xlat
aas
inc
sbb
fdivr
nop
push
add
pusha
ret
arpl
jl
out
or
into
cmovno
fdivl
xor
jg
sar
sbb
stc
das
lock
hlt
xchg
xchg
push
jne
clc
setp
push
out
loop
push
mov
movsb
and
ret
mov
inc
frstor
sub
or
and
sarl
popa
addr16
nop
jg
or
into
cld
xor
lock
ja
std
add
add
adc
fcoms
orl
cmpsl
sbb
dec
lret
dec
out
inc
push
and
call
inc
mov
ljmp
adc
pop
mov
cmpsl
sbb
lret
mov
or
out
cmp
aaa
jno
inc
jecxz
cmc
sbb
and
or
push
mov
push
mov
in
adc
clc
in
jecxz
cmp
jno
inc
popf
cmpsb
shr
push
lods
mov
pop
mov
stos
or
jp
iret
outsb
mov
cmp
sahf
jne
add
xor
sub
fwait
dec
mov
or
cmp
sub
push
or
sbb
bound
cmpsb
inc
loopne
int
push
xor
mov
cmpsl
mov
mov
push
fcomip
mov
dec
push
ljmp
out
inc
ss
adc
jg
push
nop
mov
mov
mov
mov
lods
mov
xor
adc
dec
test
xor
dec
mov
daa
in
pop
mov
xchg
mov
dec
sahf
mov
mov
insl
mov
jmp
pushf
and
test
lcall
fbstp
movsl
xor
scas
scas
pusha
inc
or
adc
mov
xchg
cmc
dec
xchg
mov
mov
cli
or
and
cmp
xor
adcb
mov
dec
mov
mov
rcrl
lock
ss
out
mov
ljmp
jmp
cld
xchg
xlat
jge
pop
sub
jae
fcmovne
shr
push
mov
mov
mov
fs
mov
mov
cmp
repnz
cmc
cmpsb
mov
xor
sub
mov
mov
mov
mov
mov
add
sub
mov
add
mov
sub
mov
call
mov
pop
mov
dec
mov
mov
mov
add
mov
inc
mov
add
mov
sub
mov
dec
mov
mov
mov
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
test
je
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
mov
dec
mov
jne
mov
mov
mov
pusha
mov
mov
xor
push
push
mov
xor
push
mov
xor
push
add
mov
call
popa
push
push
push
push
mov
mov
call
mov
add
mov
add
xor
nop
add
nop
mov
nop
sub
nop
add
nop
inc
add
nop
test
jne
sub
jmp
gs
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
ss
lcall
mov
testl
movsl
mov
iret
or
nop
dec
mov
les
es
sti
and
adc
negb
xor
imul
test
lods
sub
data16
aam
cmpsl
jle
hlt
scas
mov
ljmp
jb
lods
movsb
add
jg
push
enter
mov
dec
xchg
fs
lret
jb
inc
test
popa
adc
aaa
add
cmp
frstor
pop
hlt
push
add
and
mov
test
or
je
cmp
mov
data16
or
shll
push
jae
mov
int3
inc
negl
stc
negl
loopne
xchg
xchg
imul
pushf
ss
inc
nop
movsb
push
dec
ficoms
pop
or
lods
es
xchg
push
pop
add
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
jmp
mov
add
mov
push
mov
ret
mov
notb
xor
jnp
sbb
cmp
jno
ss
fimuls
and
inc
orps
sub
sbb
imul
xchg
push
repnz
or
outsb
shr
cs
repnz
daa
pushf
jno
js
or
mov
sbb
mov
pop
inc
jg
cmp
adc
cmp
std
iret
jo
sub
pop
jg
nop
sbb
dec
les
mov
mov
pop
jbe
mov
xor
xlat
pop
sbb
add
shll
dec
dec
out
loopne
nop
fildll
lods
jns
test
adcl
mov
mov
lret
or
push
movsl
fistl
pusha
push
roll
or
xchg
shll
inc
sbbb
cmpsl
mov
jbe
or
sbb
les
xchg
iret
test
les
sub
jbe
lea
jge
adc
and
adc
xchg
mov
data16
ffree
cld
xor
jecxz
int
inc
adc
cmp
fiaddl
adc
nop
stos
je
sub
mov
pushf
lods
jb
scas
cmp
push
loope
xor
mov
push
data16
jle
cmp
outsb
les
test
mov
cmp
push
xchg
adc
hlt
clc
dec
ja
inc
mov
inc
adc
cltd
out
sti
push
je
jecxz
sub
ret
adc
mov
cwtl
shrl
mov
dec
sub
and
mov
push
popf
cld
stc
lret
fs
pop
xchg
sbb
ljmp
add
ret
mov
cmp
mov
inc
sbb
inc
outsl
outsl
xchg
aaa
xor
aad
test
dec
subl
pop
jno
cs
xchg
adc
pop
and
fsubs
push
jbe
fidivs
jb
hlt
mov
popaw
out
orb
stos
xchg
or
rclb
idivb
xchg
js
aad
xchg
in
mov
lods
aas
call
inc
movsl
data16
cld
decb
dec
xchg
xor
jb
test
inc
sub
or
mov
call
lock
mov
testl
fsts
cmp
and
cmp
jle
xchg
loope
jp
enter
out
mov
sbb
arpl
adc
jl
test
cmp
mov
loop
inc
fisttps
jl
jbe
inc
jb
pop
lahf
pop
jae,pn
dec
mov
les
pusha
xchg
jp
notb
add
jecxz
adc
sub
sbb
pop
fsubs
fistpl
call
orl
and
push
dec
sub
adc
xchg
mov
shll
ss
push
cs
mov
xor
mov
push
sbb
push
lea
rcrl
stos
mov
push
inc
iret
pop
imul
jle
decb
mov
xor
cltd
xchg
mov
loope
stos
or
mov
mov
negl
fistpl
sub
add
sub
or
lock
or
jb
aam
mov
jbe
outsb
mov
gs
mov
cli
jp
fnstcw
leave
adc
jno
mov
mov
arpl
ds
add
test
mov
and
pop
iret
out
fstl
jno
xchg
test
leave
stos
lret
jb
jmp
adc
cmp
test
cmp
push
add
inc
push
cmovae
mov
imul
mov
nop
lods
jne
jae
and
sbb
push
mov
jbe
fstl
scas
dec
es
inc
pop
pop
mov
dec
jle
inc
push
jo
jbe
jle
mov
icebp
jnp
lock
sbb
pop
leave
cmp
lret
mov
dec
mov
in
rcll
jb
enter
nop
sub
cmp
xor
and
shrb
insl
movsl
pushf
repnz
mov
dec
sub
and
adc
ret
lcall
out
pop
xchg
mov
or
dec
dec
mov
in
nop
jl
repnz
out
and
and
dec
xchg
data16
jl
mov
jecxz
in
fstl
icebp
jge
lret
cld
out
jl
out
jo
insb
pop
xchg
repnz
and
imul
add
pop
sbb
mov
and
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
cld
lock
jo
cs
pop
and
pop
or
mov
jge
add
fstps
rcll
mov
sbb
cmp
rcll
push
sub
jbe
xchg
xor
enter
and
outsl
popf
cmp
push
js
mov
or
adc
je
or
addr16
sbb
out
loope
dec
xchg
sub
or
out
sbb
cmpl
and
mov
negb
aam
pusha
fisubrs
push
add
pop
in
jns
cmp
push
aaa
or
mov
fimuls
cmc
push
sahf
push
or
inc
sarb
fisubl
mov
or
adc
cmp
and
adc
and
sub
pop
in
xlat
jbe
xor
adc
insb
std
adcl
push
shrb
es
fcomip
fldt
pop
cmp
fisubrl
mov
bnd
sub
and
mov
xchg
data16
in
push
sbb
bound
inc
outsb
fdivl
sbb
sbb
js
int
stos
daa
movsb
xchg
dec
cmp
and
push
packssdw
test
sbb
movsl
insb
ret
stc
pop
push
inc
in
mov
add
cmp
rcrb
outsb
and
jl
jae
cmp
icebp
xor
xchg
test
mov
push
dec
sahf
outsl
xor
pop
cli
enter
push
les
xchg
xchg
xor
iret
jno
fxch
lea
mov
push
enter
xor
daa
test
jae
in
sub
and
or
mov
push
testb
sbb
call
test
jae
stos
aaa
mov
sub
and
mov
fs
cmp
push
rcrb
shll
nop
sbbl
loope
stos
sbb
dec
aaa
sub
push
outsb
mov
jbe
or
aad
in
arpl
loopne
ret
push
test
sbb
add
mov
into
adc
pop
xchg
inc
adc
movsl
push
pop
dec
cmp
xchg
sub
xor
fistl
repnz
mov
mov
xor
inc
mov
add
cmp
jl
xor
cmp
xor
mov
gs
cmp
out
imul
cmpsb
cmp
sbb
test
cld
dec
mov
adc
xor
and
sub
sub
test
enter
dec
add
jle
stc
dec
jne
stos
fwait
inc
loop
pop
les
adc
push
pop
sbb
pop
aaa
xchg
and
hlt
repz
js
mov
push
mov
push
movsb
mov
mov
add
adc
adc
lahf
mov
sti
jb
sbb
int3
ja
adc
cwtl
std
dec
leave
mov
enter
jmp
pop
lahf
inc
mov
nop
push
daa
ss
mov
adc
cmp
scas
mov
dec
adc
or
or
jno
xchg
and
pop
stos
pop
jae
jle
push
filds
add
mov
mov
xchg
inc
cmpsl
inc
int3
aad
jne
cld
fwait
rcr
scas
ja
pop
jp
mov
pop
xchg
rclb
mov
mov
divb
or
xchg
inc
xor
leave
in
mov
nop
jecxz
dec
fdivrp
push
aaa
dec
pop
xor
fnstsw
and
jno
notl
or
sub
mov
mov
pop
push
pop
xor
fs
jmp
shlb
rclb
dec
xchg
jecxz
out
pop
jbe
nop
inc
in
fs
mov
les
and
sbb
jmp
xor
in
dec
int3
mov
pop
dec
dec
dec
dec
hlt
pop
push
sub
sbb
shl
add
xlat
mov
pusha
rclb
out
jmp
dec
mov
pushf
fnstenv
xchg
mov
fsubrs
adc
rclb
aam
andl
test
jge
adc
add
out
adc
mov
inc
jl
sub
xchg
mov
xchg
cmp
jmp
stc
push
in
mov
jle
jmp
push
sbbl
movsb
push
push
in
gs
sarb
jl
ret
iret
in
out
test
repz
mov
js
or
jo
dec
testl
cld
xor
orl
stc
push
fadd
xchg
jmp
xor
data16
imul
out
aaa
sub
icebp
push
mov
or
shlb
or
mov
shll
test
fldt
addr16
test
xor
movsb
dec
mov
inc
inc
mov
fwait
orl
cltd
aaa
lcall
imul
jl
rcrb
stos
or
iret
test
iret
pop
mov
push
mov
xchg
sub
into
into
out
mov
out
adc
push
out
roll
inc
push
sbb
shlb
cwtl
out
mov
xor
lea
ret
add
xchg
leave
inc
cvtpi2ps
adc
pushf
sahf
outsl
pop
sub
and
jp
push
imul
xor
cmpsb
dec
nop
xchg
jg
mov
inc
lea
push
sub
pop
mov
jnp
xchg
cmp
mov
or
popf
movd
mov
mov
arpl
mov
pop
xchg
leave
lahf
pop
cs
addr16
pop
sub
lock
test
movsl
xchg
jae
shl
push
inc
pop
add
jecxz
call
movsb
popa
dec
stos
xchg
ljmp
lcall
lahf
shll
nop
in
stos
push
mov
xchg
sub
fcoms
cld
lods
cmc
arpl
xor
inc
js
xchg
pop
pop
faddl
push
mov
ljmp
xchg
fwait
stos
mov
bound
and
xor
xor
ljmp
mov
push
shll
add
out
mov
and
shr
daa
loop
test
pop
lret
pop
lahf
sbb
sbb
hlt
mov
cltd
movsl
lahf
push
faddl
add
sub
lcall
mov
add
aas
clc
in
inc
dec
test
outsb
mov
lret
mov
xchg
popf
sub
jb
xchg
xor
and
dec
fbstp
imul
xor
or
gs
int
mov
sub
gs
fdivrl
fwait
je
xchg
mull
mov
xchg
xchg
mov
das
and
jb
or
add
popf
cmp
in
out
cmpb
ss
and
hlt
repz
pop
xor
inc
cwtl
jno
dec
sbb
push
ficoml
int3
cmp
repz
and
xchg
mov
xor
jno
cmpsb
push
fdivrl
jle
pushf
mov
repz
cmpsl
adcl
jbe
pop
shll
lock
out
push
jl
mov
or
inc
or
jmp
sub
mov
push
hlt
jge
loope
pop
lret
dec
mov
mov
and
lods
cmpsl
shr
lea
sub
mov
pop
xlat
int3
std
and
daa
ss
ss
mov
xor
jno
push
data16
adc
add
fcomp
inc
movsl
lahf
aas
das
lods
dec
mov
repz
stc
pop
testl
mov
std
lret
mov
std
imull
mov
xor
inc
ror
dec
dec
lea
shl
xchg
jnp
out
shll
sub
test
outsl
pop
ds
sbb
mov
or
pop
pop
movsl
aaa
xchg
inc
mov
insb
lods
adc
inc
pop
jp
pop
inc
shlb
mov
lock
cmp
imul
push
in
push
jp
add
outsl
xor
fcoms
pop
and
pop
dec
int3
mov
dec
cmp
clc
dec
enter
call
in
out
push
int3
in
adc
mov
mov
call
faddl
dec
int3
sbb
push
lds
pop
jmp
into
fildl
pop
fwait
mov
dec
int3
es
lds
xlat
pop
dec
sti
into
fs
push
popa
dec
unpckhps
dec
cs
or
ss
add
push
inc
inc
sub
dec
dec
cmpsb
iret
outsl
bound
mov
bound
mov
xor
pop
and
mov
outsb
cs
mov
or
cmpsb
ret
mov
movsb
jne
movsb
int
das
inc
sub
stc
or
inc
inc
mov
xlat
fs
imul
loope
mov
pop
lds
aaa
movl
fsubs
scas
outsl
mov
int3
imul
outsb
ds
cmpsb
clc
pushf
dec
insl
pop
lds
and
int3
cmpsb
insl
dec
movsb
shlb
mov
jb
mov
shlb
fwait
sub
xor
mov
push
inc
les
or
cli
cltd
pop
dec
cmpsb
pushf
outsl
sub
bound
lods
int3
push
mov
pop
lds
adc
dec
int3
xchg
insl
dec
cmpsb
outsl
and
cmc
imul
arpl
cwtl
jo
pop
inc
dec
orb
insl
dec
cmpsb
mov
test
lret
jb
movsb
clc
jne
mov
jmp
push
mov
jnp
inc
inc
movb
iret
addl
and
or
dec
movsb
jne,pn
scas
adc
outsl
and
xor
movsb
aaa
jae
test
jnp
mov
repnz
dec
int3
jne
leave
mov
clc
mov
jae
dec
cmpsb
jbe
outsb
xor
jnp
xor
insl
dec
movsb
inc
arpl
mov
pop
outsl
daa
test
aas
pop
lds
in
movl
or
sub
dec
and
aaa
or
dec
sbb
movl
xor
lea
outsl
push
test
xor
cwtl
push
clc
sbb
roll
leave
or
sbbl
pop
es
cmp
ds
outsl
push
test
ds
cwtl
pop
clc
sbb
movb
or
cmpl
and
dec
outsl
aas
mov
cs
sub
push
mov
dec
mov
mov
orl
push
inc
pop
dec
je
xlat
dec
int3
divl
int3
ds
lds
ret
clc
mov
imul
jnp
xor
pop
int
cmp
dec
int3
mov
pushf
iret
ss
cmc
xchg
iret
mov
dec
flds
iret
and
mov
repnz
daa
sbbl
mov
in
xchg
cmp
mov
pop
fcmovnu
gs
ljmp
xor
ss
std
sti
xchg
ret
in
xchg
std
out
cs
in
xchg
stc
xchg
in
movb
aaa
int3
jge
adc
int
test
pop
int
mov
in
int
push
outsb
xchg
cwtl
cltd
hlt
adc
inc
int
push
lds
pop
jecxz
int
lock
stos
mov
sti
daa
mov
push
add
movsb
gs
dec
inc
mov
mov
hlt
push
jns
clc
mov
or
cmpsb
ss
mov
clc
popl
inc
dec
push
lds
inc
pop
dec
jle
mov
mov
inc
mov
lds
mov
or
daa
incl
dec
dec
and
inc
mov
push
dec
mov
mov
push
lds
mov
add
mov
lock
mov
add
or
pusha
jnp
fwait
xchg
fwait
incb
mov
test
fwait
ljmp
push
push
cli
cmp
and
in
int3
fiadds
leave
pop
test
inc
dec
dec
sbb
inc
xchg
popf
and
outsl
add
inc
adc
jae
stos
push
in
ret
xlat
xor
cmp
pop
lea
in
dec
test
pusha
dec
lret
add
iret
pop
pop
mov
add
inc
pushf
mov
cltd
jl
leave
testl
lock
mov
lds
inc
inc
inc
add
sbb
cli
push
cld
mov
test
mov
xchg
mov
mov
stc
lds
stc
mov
jmp
cmpsl
les
push
cmpsl
add
dec
stc
leave
pop
push
mov
repz
or
movw
mov
and
int
popl
or
negb
in
push
mov
and
inc
dec
movsb
pop
dec
int3
sub
movl
pusha
push
dec
int3
and
dec
inc
stc
mov
loopne
dec
int
inc
push
sahf
lret
shlb
sbbl
dec
dec
fadd
dec
daa
push
test
inc
xchg
ss
int3
xchg
lea
pop
pop
inc
inc
into
xchg
lahf
mov
aam
nop
push
push
cmpsb
mov
or
addb
sbb
xchg
xorl
inc
push
es
fcomip
jecxz
icebp
push
mov
or
mov
je
test
rcrl
insb
push
inc
sti
bound
xor
mov
dec
add
mov
sub
int3
jbe
xor
stc
mov
and
sbb
stos
leave
or
packuswb
mov
xor
mov
xor
stc
mov
xchg
push
rclb
pop
fadd
in
push
mov
cwtl
leave
cld
cwtl
stc
mov
and
movl
movsl
inc
lock
popa
push
dec
or
push
mov
pop
rorl
pop
dec
int3
cwtl
fmuls
pop
pop
mov
push
jp
rcrb
push
aas
xchg
jge
pop
std
sbb
into
cmp
xor
push
scas
or
and
mov
and
push
je
jae
dec
jns
jno
jno
push
dec
fs
inc
push
push
dec
push
imul
dec
imul
dec
gs
js
jno
pop
jp
xor
dec
bound
insl
inc
inc
imul
push
imul
jbe
insl
push
pop
jne
push
imul
push
inc
jp
jo
ss
imul
insl
inc
jo
dec
dec
ss
jne
cmp
aaa
inc
inc
jo
inc
imul
dec
bound
pop
push
jns
push
imul
jp
dec
push
popaw
push
js
jp
addr16
dec
arpl
xor
dec
push
jp
jno
aaa
push
dec
dec
ja
inc
pop
jne
push
cmp
inc
ja
ss
bound
jne
push
inc
cmp
xor
jbe
dec
pop
dec
arpl
jb
push
inc
jbe
xor
arpl
dec
push
inc
jp
inc
inc
push
push
outsl
outsb
jno
push
jo
imul
jno
ja
push
push
inc
push
xor
jns
pop
jae
pop
inc
jne
push
xor
xor
push
jp
jno
push
push
dec
xor
jno
inc
pop
inc
xor
popa
push
dec
push
push
inc
js
xor
dec
push
bound
xor
dec
inc
fs
je
jne
inc
push
pop
jo
jae
dec
inc
push
ss
dec
popa
dec
dec
push
xor
pop
addr16
dec
bound
insb
jns
arpl
pop
ja
inc
popa
gs
pop
inc
dec
push
xor
push
dec
js
js
data16
dec
inc
inc
dec
push
aaa
dec
inc
ja
inc
xor
insb
dec
xor
add
add
add
or
dec
and
test
or
xor
or
sbb
or
xor
or
inc
and
push
and
pusha
and
jo
or
andb
add
and
mov
or
enter
fsubs
or
out
or
mulb
or
add
or
adc
or
and
or
add
add
cmp
or
add
add
push
and
data16
js
or
mov
or
lcall
add
and
fisubl
or
ljmp
add
and
sbb
or
sub
or
cmp
or
dec
and
pop
and
insb
and
jl
or
mov
or
pushf
and
lods
and
mov
and
loopne
or
repnz
add
or
adc
or
and
or
ss
add
or
push
and
add
or
js
or
mov
add
or
shlb
shlb
add
and
add
and
add
and
or
and
or
inc
and
or
fs
or
xchg
or
test
or
mov
and
or
ljmp
add
es
sbb
or
sub
or
cmp
or
dec
es
pop
es
insb
es
jl
or
mov
or
sahf
es
mov
or
shlb
add
es
loop
or
repnz
add
or
push
daa
or
es
or
ss
or
dec
daa
or
pop
daa
or
push
or
jl
or
mov
or
sahf
daa
or
scas
daa
or
mov
daa
or
loopne
or
lock
or
add
or
adc
or
and
or
sub
dec
sub
pop
sub
push
or
jl
or
mov
or
pushf
sub
lods
sub
mov
sub
fisubrs
or
out
sub
add
or
adc
or
and
or
xor
or
inc
sub
push
sub
bound
or
jb
or
subb
add
sub
mov
or
enter
fsubrs
or
ljmp
add
or
sbb
or
sub
or
sub
dec
sub
pop
sub
jo
or
subb
add
sub
mov
or
shrb
add
sub
loop
or
hlt
sub
add
or
push
sub
sub
cmp
or
dec
sub
pop
sub
push
sub
mov
or
lcall
add
sub
fsubrl
or
in
sub
cld
sub
or
or
sbb
or
sub
or
ds
add
or
bound
add
or
subb
xchg
sub
add
or
sub
add
sub
add
sub
add
sub
add
sub
or
sub
or
dec
sub
or
push
or
jl
or
mov
or
mov
or
shrb
add
sub
or
add
or
adc
or
and
or
xor
or
inc
cs
push
cs
fs
jbe
or
mov
or
cwtl
cs
test
or
mov
cs
fsubrs
or
call
cs
or
or
sbb
or
cs
or
ds
or
dec
das
or
pop
das
or
outsb
das
or
subb
add
das
or
mov
or
ret
add
das
or
loop
or
repnz
or
add
or
push
xor
sub
or
cmp
or
dec
xor
pop
xor
push
or
jp
or
mov
or
pushf
xor
lods
xor
mov
xor
loopne
or
repnz
add
or
adc
or
and
or
xor
or
inc
xor
push
xor
xor
je
or
xchg
or
xchg
xor
add
add
mov
or
xor
fdivs
or
call
xor
or
or
push
xor
xor
inc
xor
push
xor
bound
or
jb
or
test
or
xchg
xor
cmpsb
xor
mov
xor
fdivs
or
call
xor
or
or
sbb
or
sub
or
cmp
or
dec
xor
pop
xor
insb
xor
jl
or
mov
or
pushf
xor
lods
xor
mov
xor
fidivs
or
lock
add
add
xor
add
xor
add
xor
add
or
push
xor
add
or
jb
or
xorb
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
or
and
or
inc
xor
or
fs
or
xchg
or
test
or
mov
xor
or
ljmp
add
or
push
ss
cs
ds
dec
ss
pop
ss
outsb
ss
jle
or
mov
or
mov
ss
ret
add
ss
in
or
divb
or
or
or
sbb
or
sub
or
cmp
or
dec
aaa
or
pop
aaa
or
push
or
jp
or
mov
or
lcall
add
or
fdivl
or
out
aaa
or
aaa
or
push
cmp
and
or
xor
or
inc
cmp
push
cmp
cmp
jbe
or
xchg
or
xchg
cmp
test
or
mov
cmp
fdivrs
or
call
cmp
or
or
sbb
or
sub
or
cmp
or
dec
cmp
pop
cmp
insb
cmp
jl
or
mov
or
mov
cmp
sarb
add
cmp
loop
or
repnz
add
or
adc
or
and
or
xor
or
inc
cmp
push
cmp
cmp
je
or
test
or
xchg
cmp
cmpsb
cmp
mov
or
enter
fdivrs
or
ljmp
add
cmp
sbb
or
sub
or
cmp
or
dec
cmp
pop
cmp
insb
cmp
jl
or
mov
or
mov
cmp
sarb
add
cmp
loopne
or
lock
add
add
cmp
add
cmp
add
cmp
add
add
or
data16
add
or
xchg
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
or
and
or
ss
or
pop
cmp
or
jp
or
mov
or
lods
cmp
or
int3
cmp
or
out
cmp
or
adc
or
and
or
xor
or
inc
ds
push
ds
bound
or
jb
or
cmpb
add
or
mov
ds
fdivrs
or
call
ds
or
or
sbb
or
sub
or
cmp
or
dec
aas
or
pop
aas
or
outsb
aas
or
jle
or
mov
or
sahf
aas
or
scas
aas
or
sarb
add
aas
or
loopne
or
repnz
or
add
add
inc
or
and
add
inc
or
pop
and
add
adc
xor
adc
inc
and
add
adc
popa
and
add
adc
mov
adc
xchg
and
add
and
add
and
add
and
add
and
add
and
add
adc
adc
add
add
add
add
and
add
adc
pop
and
add
adc
andl
adc
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
adc
push
and
add
adc
jae
adc
andl
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
adc
popa
and
add
adc
test
adc
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
adc
pop
and
add
adc
jg
adc
and
add
and
add
and
add
and
add
and
add
and
add
and
adc
and
adc
inc
and
adc
gs
adc
xchg
adc
test
and
adc
adc
std
and
adc
pop
adc
xor
adc
inc
adc
push
adc
arpl
adc
jne
adc
test
adc
xchg
adc
cmpsl
adc
mov
adc
adc
xlat
adc
jmp
adc
or
daa
adc
das
daa
adc
inc
daa
adc
push
daa
adc
arpl
adc
jae
adc
andl
add
daa
adc
mov
adc
lds
adc
xlat
daa
adc
out
adc
mull
adc
pop
sub
add
sub
add
sub
add
sub
add
adc
pop
sub
add
adc
jnp
adc
lea
adc
lahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
adc
sub
add
adc
xchg
adc
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
adc
pop
sub
add
adc
subl
adc
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
adc
pop
sub
add
adc
jnp
adc
mov
adc
popf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
adc
push
sub
add
adc
jne
adc
xchg
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
adc
sub
adc
dec
sub
adc
outsl
sub
adc
sub
adc
scas
sub
adc
shrl
adc
repz
adc
adc
adc
xor
adc
push
adc
adc
ja
adc
xchg
adc
cltd
adc
test
adc
leave
adc
fldt
adc
in
adc
ljmp
adc
comiss
add
das
adc
xor
adc
inc
das
adc
push
das
adc
popa
das
adc
jae
adc
subl
add
das
adc
mov
adc
leave
das
adc
fldcw
adc
jmp
das
adc
or
adc
sbb
adc
sub
adc
cmp
adc
dec
xor
add
adc
insl
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
adc
inc
xor
add
adc
xor
add
adc
mov
adc
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
adc
pop
xor
add
adc
jle
adc
mov
adc
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
adc
movsb
xor
add
adc
aam
adc
in
adc
hlt
xor
add
adc
adc
adc
and
adc
ss
add
adc
pop
xor
add
adc
jp
adc
mov
add
adc
mov
xor
add
xor
add
xor
add
xor
adc
and
adc
inc
xor
adc
pusha
xor
adc
xorb
add
xor
adc
fidivl
adc
cld
xor
adc
sbb
adc
sub
adc
cmp
adc
dec
adc
pop
adc
insb
adc
jle
adc
mov
adc
sahf
adc
scas
adc
shlb
add
adc
loopne
adc
repnz
add
adc
push
aaa
adc
es
adc
ss
adc
dec
aaa
adc
pop
aaa
adc
push
aaa
adc
mov
adc
lcall
add
aaa
adc
fidivl
adc
in
aaa
adc
cld
aaa
adc
or
adc
sbb
adc
cmp
add
cmp
add
adc
pusha
cmp
add
adc
cmpb
add
cmp
add
adc
aam
adc
in
adc
hlt
cmp
add
adc
adc
adc
cmp
add
cmp
add
adc
push
cmp
add
adc
js
adc
mov
adc
lcall
add
adc
fdivrl
adc
in
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
pusha
cmp
add
adc
cmpb
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
push
cmp
add
cmp
add
cmp
add
adc
pop
cmp
add
adc
jp
adc
mov
adc
sahf
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
adc
outsb
cmp
add
adc
mov
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
and
adc
xor
adc
inc
cmp
adc
cmp
js
adc
mov
adc
stos
cmp
adc
lret
add
cmp
adc
cld
cmp
adc
push
adc
cs
inc
adc
push
adc
pusha
adc
jo
adc
cmpb
add
adc
mov
adc
les
adc
aam
adc
in
adc
hlt
adc
add
adc
loop
xorl
add
or
push
movsl
push
popa
pop
test
jmp
cmp
in
out
pop
and
int3
je
js
daa
lock
jmp
push
fcom
inc
out
pop
adc
mov
xchg
shll
insl
sbb
jno
cmpsb
adc
lds
xorb
mov
pop
push
fsubs
or
xchg
ret
dec
je
and
dec
jl
cmp
es
fcomps
scas
mov
xchg
movzbl
xor
inc
pop
or
push
fmull
ret
pop
cmpsb
arpl
les
mov
jge
and
loopne
pop
xchg
stc
lea
inc
push
mov
sbb
cmp
push
stos
pop
or
icebp
xor
jns
adc
or
roll
xchg
push
mov
xchg
stos
xchg
and
fwait
xchg
fisubrl
mov
xor
jne
lcall
jl
aaa
mov
xchg
adc
test
negl
pop
or
mov
scas
fildl
mov
push
dec
out
pop
sahf
mov
adc
jle
add
ss
jb
out
sbb
rclb
shll
pop
mov
mov
notl
cmp
adcl
outsb
mov
or
adc
enter
cmp
call
dec
xchg
sbb
xchg
repnz
and
xor
pop
xor
cmpsl
mov
adc
cmp
out
test
popa
lods
call
or
mov
fsubs
mov
sub
add
scas
or
push
aad
and
add
stos
sub
pop
lret
xchg
xchg
push
cld
sbb
imul
notl
mov
or
pop
jne
outsl
xchg
fisubl
inc
mov
and
ss
ds
jbe
jne
ret
jg
and
jne
sbb
dec
out
cmpsb
pop
xchg
push
jle
lahf
fists
ret
xchg
es
add
mov
inc
mov
mov
inc
out
aam
icebp
mov
xchg
cmp
pop
push
sahf
mov
fiadds
imul
dec
imul
push
mov
les
adc
sbbb
pop
aaa
push
je
dec
icebp
outsb
push
pop
mov
jmp
or
hlt
push
dec
pop
jae
push
jno
nop
mov
sub
insl
imul
into
das
mov
pop
xchg
mov
jge
icebp
iret
imul
xchg
fldcw
and
fimull
add
in
insl
lret
hlt
mov
dec
ret
sub
mov
adc
mov
sbb
mov
and
arpl
or
ja
and
scas
jmp
dec
xor
adc
mov
or
push
das
xchg
fs
fsubrs
xchg
fsubrl
scas
cli
add
icebp
adc
jo
inc
inc
andl
fldt
test
jl
pushf
add
and
mov
scas
pop
add
jne
dec
jle
test
fbld
jecxz
aam
iret
test
movsl
ljmp
jmp
adc
jp
cmp
mov
jecxz
movsl
dec
js
movsb
cld
bound
cltd
iret
jmp
mov
mov
dec
sbb
adc
push
scas
mov
xor
and
inc
shll
push
pop
mov
or
push
arpl
dec
clc
inc
je
jns
push
in
je
repnz
outsl
adcl
mov
push
adcl
imul
data16
cld
loop
je
mov
add
ds
push
cmp
shlb
aad
xchg
mov
sahf
pop
es
dec
inc
sub
das
cmpsl
out
inc
fucomip
jb
enter
out
inc
in
adc
adc
cltd
mov
cmp
mov
daa
xlat
mov
mov
sub
cs
sbb
ja
mov
or
pop
xor
fnstcw
or
gs
or
mov
push
stos
sub
data16
pushf
sbb
daa
mov
mov
pushf
push
dec
stos
inc
jns
ret
into
fcmovnu
hlt
std
xor
int
cmp
ror
lcall
mov
sub
mov
scas
mov
lret
cmc
and
mov
and
fisttpll
inc
ja
mov
sub
fmulp
inc
jb
pop
lahf
push
mov
cmpsl
or
push
mov
mov
xchg
and
lock
addr16
dec
test
dec
je
jp
push
and
push
sbb
inc
ja
in
in
loope
lods
sub
aam
xchg
xchg
or
dec
adc
lock
xchg
pop
sbb
xchg
lods
ret
xor
in
arpl
cld
adc
mov
insl
int
rolb
icebp
arpl
std
out
jno
mov
dec
sbb
mov
loop
out
mov
mov
sbb
movl
inc
and
cmc
loope
push
fwait
leave
xor
fnstcw
addb
inc
enter
mov
sub
cmp
sarl
jnp
jmp
test
das
sbb
push
adc
adc
jmp
xchg
lea
sbb
jae
roll
int3
outsb
cmpl
pop
dec
movsb
mov
push
sahf
sbb
xchg
negb
jno
std
mov
int
and
fildl
cmp
mov
shr
aad
mov
mov
mov
rcrb
add
jb
and
xchg
cmp
hlt
xchg
imul
pop
push
xchg
jmp
jl
push
sbb
sti
sub
lret
lea
mov
xchg
aas
imul
mov
stos
icebp
mov
jnp
lcall
sub
stos
cmp
mov
mov
out
mov
jp
movl
fldl
mov
icebp
mov
xor
aas
stos
in
ret
shrb
or
add
ljmp
pushf
add
pop
out
push
fidivl
sahf
imul
hlt
out
stc
popa
cmp
mov
dec
std
cmp
aam
dec
rcr
sbb
ret
in
and
mov
or
xor
dec
adcl
add
mov
sbb
repz
xchg
and
popa
cmpsb
or
test
add
ljmp
in
or
jns
pop
jae
lds
dec
pushf
sbb
jge
shrb
testb
data16
lds
ss
sub
dec
cmp
aad
lea
sub
jp
mov
mov
push
cmp
aaa
mov
push
mov
mov
xchg
arpl
dec
mov
and
lcall
push
dec
scas
pop
jp
or
xchg
fsubp
adcl
mov
mov
out
test
adc
and
hlt
ret
fwait
adcb
xor
orb
lds
xchg
mov
lcall
mov
pop
and
pop
notb
icebp
push
or
cmp
aam
call
test
or
or
in
sysexit
jmp
add
out
jmp
loop
mov
jns
sub
adc
sub
adc
push
movsb
fiaddl
adc
fmuls
push
pusha
or
adc
jle
ret
jne
and
adc
jns
sbb
inc
cwtl
test
ja
pusha
or
lds
jmp
xlat
or
call
movsl
pusha
push
mov
xor
scas
dec
les
mov
adc
cmp
leave
mov
rcr
ret
sbb
int3
lcall
add
mov
mov
inc
sub
je
push
inc
cld
inc
or
scas
jl
shrl
in
cmp
arpl
xchg
mov
and
icebp
je
repnz
inc
mov
mov
dec
mov
imul
out
repz
inc
inc
pop
mov
shll
inc
or
pop
data16
mov
out
bound
inc
movsl
mov
ljmp
jg
sbb
xor
pop
data16
adc
out
and
mov
mov
mov
adc
xor
ljmp
ror
xor
sbb
mov
fdivp
mov
xor
push
imul
inc
pop
pop
cmpsb
nop
jge
out
dec
scas
mov
or
sub
pushf
cs
inc
lods
mov
mov
es
test
leave
outsb
mull
mov
popa
mulb
or
push
xchg
dec
gs
and
ss
add
fs
ss
xlat
or
pop
xor
nop
in
aas
movb
jb
ret
xchg
pop
leave
lcall
xlat
jno
lds
or
jnp
mov
popa
and
sti
jns
mov
inc
call
aad
lret
je
stos
xor
add
or
imul
push
popf
aas
jne
and
push
fsubs
popa
fs
lret
xchg
sbb
sar
popa
xor
inc
xlat
pop
shll
int
push
aam
lret
cmp
aaa
and
pop
cmp
gs
shll
xor
rcrb
push
dec
push
mov
adc
out
cmp
and
int
cmp
sub
out
pop
add
stos
lock
jne
push
std
iret
cmp
and
xor
pop
les
mov
orb
and
popa
int
in
mov
xor
add
jle
fstp
mov
scas
ret
pusha
pop
pop
sbbl
std
xor
ficoml
sahf
sbbl
scas
int
and
pop
insl
daa
add
adc
mov
popa
imul
out
test
jecxz
fs
adc
jo
out
adc
add
je
out
push
sub
dec
cld
orl
into
jae
adc
out
cmp
das
xor
mov
andb
out
and
es
arpl
sahf
ljmp
das
arpl
lret
adc
iret
inc
pop
dec
mul
sbb
sti
incl
bound
bswap
jecxz
lds
fs
ljmp
or
xlat
and
push
lret
adc
add
sbb
add
push
inc
mov
sahf
clc
out
aad
lcall
pop
xor
sti
stc
pop
lahf
push
dec
test
or
sub
push
scas
mov
jle
sub
nop
push
imul
add
std
jmp
sub
and
clc
push
sarb
push
out
pop
inc
mov
dec
rcl
stc
out
repnz
mov
jne
pop
leave
jns
mov
insb
push
cmp
out
sbbb
push
mov
nop
jmp
mov
add
fwait
jno
into
mov
scas
sbb
sub
xlat
aad
stos
adcb
or
sub
or
lods
test
dec
ror
je
sub
ljmp
or
call
push
arpl
pop
push
dec
add
lahf
and
mov
out
data16
lahf
cmc
sub
sbb
lods
fucomip
ds
adc
out
jmp
test
mov
push
insl
pause
mov
pop
decb
pop
jnp
jnp
jno
xor
sub
dec
cmp
lds
and
sub
ljmp
inc
shr
out
cs
lods
inc
mov
fcompl
pop
cmpsl
xchg
pusha
jmp
ret
xchg
loopne
mov
push
push
jecxz
ljmp
outsl
add
or
or
ret
popa
pusha
mov
sbb
leave
inc
lods
mov
mov
cmc
or
cmp
into
add
push
dec
and
dec
not
cmp
or
hlt
xchg
out
mov
push
mov
stos
jle
mov
ret
adc
clc
movsl
mov
js
dec
dec
jbe
rcrl
loope
mov
mov
push
push
mov
sar
xchg
cld
inc
lds
sub
xchg
iret
inc
stos
pop
movsb
int3
or
jo
fnstcw
push
adc
push
or
or
push
or
fdivrl
push
cld
out
sbb
scas
iret
iret
push
pushf
sbb
rcrb
sarb
mov
sbb
mov
sti
pop
xor
add
xor
push
xorb
fmuls
es
subl
mov
and
scas
pop
push
lock
mov
jmp
stc
loopne
test
lock
xchg
movsb
xlat
adc
aaa
das
je
loop
inc
adc
fcmovnu
std
push
repz
testl
sbb
loopne
aaa
jbe
shlb
pop
xor
std
mov
sbb
fdivl
sbb
push
aas
dec
jno
mov
push
jl
jns
jno
pop
scas
and
lret
cmp
lret
test
lea
sbb
inc
cmp
or
push
or
dec
clc
jne
lret
clc
adc
dec
add
dec
or
mov
test
inc
add
ror
popa
outsb
out
push
push
hlt
jno
pop
and
imul
and
sarl
push
fwait
cmp
insl
sbbl
xor
cwtl
or
push
inc
and
lea
inc
inc
popf
jno
or
xlat
fcomip
lock
out
repz
into
popf
xchg
lea
push
cli
inc
xor
push
addb
and
stos
inc
outsb
lds
pop
xlat
jo
cmp
dec
mov
mov
ret
popa
loopne
pop
cmp
test
pop
lods
push
in
stc
mov
add
std
push
filds
fstl
mov
dec
hlt
lret
mov
cmc
xchg
cs
sbb
mov
sbb
das
iret
imul
dec
mov
imul
inc
push
pop
pop
mov
inc
cmp
cs
int3
jnp
inc
mov
dec
xchg
cmpsb
rol
cmp
xor
xchg
imul
xchg
pop
dec
imul
mov
pop
sbb
push
out
pop
xor
ret
cmp
mov
in
orb
add
dec
sbb
clc
lcall
mov
ja
pop
rcr
inc
pop
fsts
mov
mov
pop
dec
inc
and
bound
xchg
jno
loop
iret
pop
sub
push
cs
in
push
mov
push
pop
jge
js
jg
mov
sub
mul
adc
push
add
push
fsubr
and
sub
movsl
xlat
mov
jns
cmpsl
mov
imul
testb
jle
jno
out
lret
addr16
add
movsl
outsl
addr16
and
loop
mov
shll
out
pushf
push
int3
cmp
xor
push
mov
mov
jno
dec
arpl
test
pop
xchg
pop
fcoms
sbb
pushf
sbb
ret
jmp
sub
mov
and
xchg
jmp
rcl
aam
pop
call
sub
jmp
pop
out
or
and
cmpb
cmc
inc
fsts
mov
icebp
sbb
dec
sub
xchg
pop
aas
push
pop
pusha
lods
pop
pop
scas
sarb
insl
ss
jl
push
addr16
int3
divb
cmp
xor
lahf
aas
pop
inc
and
addr16
test
dec
addr16
jo
std
imul
sbb
inc
or
mov
adc
pop
jecxz
mov
popa
mov
aaa
mov
push
inc
or
into
inc
mov
movsb
push
std
cmp
sbb
loop
cmpsb
xchg
add
xchg
and
or
xchg
rolb
lea
xchg
into
loop
xchg
fadds
sub
pop
lock
jnp
aam
lods
adc
inc
sbbb
xor
mov
cmp
mov
jbe
movsl
push
mov
sbb
mov
and
or
cmp
dec
jns
mov
add
popa
adc
pop
or
ret
push
dec
push
or
fcoms
mov
xchg
lea
sub
mov
rcrl
inc
into
adc
outsl
test
xchg
rolb
add
xchg
jns
movsl
repz
cltd
add
fdivs
or
mov
iret
mov
nop
add
cmp
pop
fsubl
cld
mov
cmp
push
int3
fsts
pop
sbb
popf
std
movsl
xor
imul
dec
stos
pop
inc
mov
fwait
jge
fimuls
mov
repz
fstpt
pop
fisubl
stos
arpl
aam
iret
jnp
xchg
push
cmp
cltd
ret
bsf
xor
pop
fiaddl
daa
adc
xchg
dec
mov
sbb
sbb
mov
je
push
push
ss
das
jno
mov
fdivrl
cmp
xor
test
scas
lret
xor
and
cld
jle
sbb
test
jmp
xor
loopne
or
jnp
lcall
cmp
adc
sbb
nop
jecxz
dec
les
lea
jmp
xchg
push
bsr
adc
and
out
cmpsb
add
cmp
popa
decb
stos
add
mov
loop
iret
inc
push
mov
ret
cmp
and
mov
and
jecxz
sbb
xchg
sbb
bswap
and
inc
add
andb
loop
jns,pn
pop
jne
gs
inc
lods
in
mov
pop
mov
xchg
popa
aas
mov
iret
jbe
inc
addr16
nop
cmc
nop
enter
lcall
loop
dec
mov
fs
lock
lea
ds
jno
jns
cs
mov
es
pop
rcll
mov
mov
mulb
stc
jecxz
push
aaa
cmp
add
inc
int3
mov
mov
pop
and
imul
lea
pop
mov
and
je
jl
mov
push
push
pop
je
xor
dec
out
out
idivl
jbe
lahf
mov
sbb
std
add
xor
cmp
push
mov
pop
dec
call
sub
movl
sti
mov
stos
rorl
jb
mov
mov
mov
cmp
push
dec
popl
pop
add
aas
cwtl
dec
add
lahf
jne
and
icebp
mov
sub
xchg
sarb
mov
out
mov
ror
outsb
repnz
sbb
mov
in
int3
cmp
and
cwtl
ss
subb
xor
mov
adc
pop
lahf
push
sub
cs
into
xchg
adc
sti
bound
push
sbb
sbb
scas
divb
popa
aas
inc
sub
pushf
mov
lahf
es
loop
sti
xor
push
push
pop
adc
iret
push
mov
cltd
xlat
push
cld
lcall
jbe
pop
mov
fcmovbe
pushf
movsl
shl
jle
adc
or
inc
int
in
in
int
inc
adc
aad
mov
jb
push
fldt
ds
add
fstpl
add
add
in
push
xor
jo
data16
subb
jmp
es
sahf
jnp
test
mov
push
mov
ret
inc
mov
mov
adc
and
push
subl
dec
testl
mov
adcb
arpl
out
sub
or
lods
hlt
push
ljmp
mov
mov
sti
fstps
movsl
mov
rorb
or
sub
data16
js
mov
jne
in
mov
add
mov
sub
inc
inc
xor
or
pop
xchg
mov
jbe
sub
pop
and
inc
aaa
xchg
mov
or
dec
sub
out
dec
subb
imul
sbb
inc
addb
ljmp
pusha
jle
rcr
mov
push
cmpsl
xchg
xchg
icebp
sahf
mov
adc
push
xor
aam
leave
xchg
insb
cmp
push
insl
js
cmp
pop
jg
cmp
inc
leave
sub
jl
into
stos
push
xchg
cltd
mov
repz
jno
mov
das
cli
lock
cmp
or
ficoms
mov
xor
repz
outsb
lret
divl
enter
jae
nop
xchg
xor
add
sub
cmp
or
lret
fcmovu
out
lods
and
cwtl
mov
fnstenv
cwtl
add
clc
divb
add
dec
mov
ret
fcmovnb
pop
stos
jmp
add
clc
clc
decb
sti
mull
jo
jmp
push
inc
pop
es
inc
pop
xor
pop
jmp
int
je
mov
jbe
or
movsl
and
mov
jno
sbbl
ret
aam
or
outsb
adc
add
adc
jb
int3
mov
sub
mov
add
aas
push
mov
out
inc
arpl
add
cmp
lcall
and
loope
pop
mov
adc
mov
mul
jo
inc
rcl
out
xchg
xchg
repz
stc
idiv
cmp
xchg
push
lock
xchg
imul
out
imul
and
add
add
popa
pop
orb
call
sahf
xor
std
or
adc
lcall
jb
xor
xor
les
inc
mov
gs
mov
sahf
imul
into
push
stos
sbb
cmp
frstor
fdivrp
clc
xlat
inc
cmp
jne
ss
jge
hlt
shlb
mov
roll
push
test
cli
fdivrs
xchg
xchg
ss
sbb
enter
mov
loop
sbb
ficoml
pop
sub
mov
add
addr16
scas
or
scas
subb
cmp
jmp
push
jmp
sbb
lods
shl
test
jb
loopne
in
test
pop
mov
adc
pop
jle
mov
gs
enter
aad
mov
mov
mov
pop
mov
test
xchg
dec
or
jle
xchg
adc
jmp
sbb
fisttps
imul
pusha
mov
or
inc
inc
lock
jp
nop
nop
imull
int3
lret
or
jl
mov
lods
pop
outsb
mov
aaa
inc
fcmovbe
push
cmp
xor
pop
imul
xchg
push
push
cmp
and
shll
mov
and
sub
inc
mov
jp
pop
sub
out
push
in
and
sbb
push
xor
pop
ss
bnd
jbe
jp
nop
pop
pop
pop
push
xchg
incb
and
jge
clc
pop
aam
or
dec
in
sub
mov
sub
sub
xor
jg
inc
in
sahf
out
dec
or
xchg
push
sbb
xchg
daa
std
add
xchg
bound
gs
loope
iret
mov
pop
out
mov
adc
call
dec
mov
pop
add
ret
and
hlt
mov
repnz
xor
add
adc
jne
adc
les
sub
dec
jbe
pop
daa
xor
cs
jl
push
push
idivb
cmp
inc
add
mov
lock
push
jb
cli
mov
cld
pop
sbb
add
push
xor
or
inc
ret
sub
call
scas
sub
gs
test
lret
test
aaa
mov
sub
mov
aaa
sub
pop
jb
ljmp
lea
push
xchg
incb
decb
dec
fcmovnu
and
cmpl
sbb
cld
sbb
mov
and
or
push
mov
sub
dec
cwtl
push
push
ficoms
lods
sub
jp
pop
and
int
xchg
jae
push
jns
outsl
clc
inc
mov
sbb
cmp
std
xorl
shlb
mov
cmpsl
jp
mov
aas
xchg
adc
flds
sbb
mov
rcl
lods
lcall
sbb
mov
test
and
cmp
movsl
data16
iret
imul
aam
in
mov
fidivl
outsb
mov
dec
fisttpll
push
push
loopne
aas
mov
out
pop
push
dec
icebp
cmp
clc
jae
fnstcw
jecxz
fidivl
pop
scas
adc
cmp
jl
sbb
lret
inc
aad
test
out
bound
ffreep
pop
cmpsb
lods
mov
sahf
cltd
mov
sbb
xor
rcl
loop
ss
pavgw
lret
imull
sub
lock
repnz
push
bound
mov
mov
push
cmp
mov
adc
pop
push
mov
in
mov
shll
cld
mov
cmp
add
mov
xor
push
shrl
fwait
scas
outsb
pop
pop
into
push
sti
cltd
shrl
xchg
aam
je
sti
inc
outsb
dec
aam
into
std
imul
jno
xchg
sbb
stos
push
and
nop
in
sub
in
movups
ficompl
push
jmp
inc
scas
push
out
mov
mov
cli
mov
push
add
popa
rcr
seta
ror
rol
mulb
xor
test
loope
xchg
andl
cltd
stos
push
mov
cmc
call
xlat
jg
nop
sub
pop
add
dec
cli
cmp
fidivl
lret
shr
sub
sbb
add
push
jl
mov
std
jbe
fwait
mov
and
jle
cmp
push
pushf
aaa
repnz
pop
icebp
mov
xchg
fildl
rcr
scas
stos
and
stos
fs
push
push
ret
popf
ljmp
add
in
push
and
jmp
test
insl
cltd
jmp
loope
adc
mov
nop
mov
in
mov
imul
bswap
adc
lea
aad
push
fnsave
sub
or
xor
sbb
pop
adc
movsl
push
push
popa
xchg
jle
inc
and
sbb
xchg
dec
das
sub
outsl
xchg
mov
and
jmp
jno
loopne
add
mov
out
call
push
test
inc
rcl
fcmovbe
movsb
cmp
mov
mov
roll
xchg
cli
push
pop
cmp
sub
stc
dec
jl
push
ds
call
jo
das
mov
sub
mov
adc
arpl
in
arpl
inc
rorb
ret
notl
or
out
ds
mov
dec
xor
xchg
sbbb
cmpsb
aas
mov
out
idivl
push
adcb
sbb
decl
je
in
je
adc
or
enter
popf
cmp
sbb
cmp
mov
mov
loope
dec
into
inc
push
lcall
mov
test
addb
jmp
sub
jno
push
inc
pop
aaa
std
pop
push
es
idiv
mov
aad
mov
dec
rsqrtps
movsl
pop
dec
fcoms
mov
xchg
loopne
inc
orb
ljmp
lret
in
lock
or
ljmp
mov
daa
jge
loop
roll
fdivrl
cmp
push
pushf
xlat
push
push
mov
mov
ret
push
or
cltd
push
inc
cmp
int
push
dec
sarl
and
adc
and
sub
push
popf
mov
imul
push
xchg
into
inc
jmp
mov
stc
inc
xchg
and
cltd
push
rolb
mov
pop
mov
mov
push
mov
add
fsubrl
mov
rcrl
cwtl
cmp
dec
jno
cmpsl
movsb
mov
insb
bound
xchg
das
int
ljmp
fcompl
mov
dec
andl
jo
xchg
pop
or
jbe
mov
fldt
cmp
adc
xchg
mov
ja
scas
ja
jl
loope
and
dec
movsl
ret
xchg
inc
loopne
jecxz
lds
cmc
out
inc
jo
push
aad
push
cmp
sti
fcmovne
arpl
mov
inc
push
push
mov
xlat
iret
cmc
cmp
ss
mov
pop
iret
add
aas
test
and
xlat
mov
ss
xchg
clc
xchg
or
cli
cmp
shl
jp
ror
xchg
xlat
stc
ret
fs
inc
jnp
stc
repz
ffreep
and
aas
mov
fiaddl
in
repz
testl
cmp
test
cmp
and
xor
sarb
xor
push
in
loopne
lock
mov
xchg
sbb
pop
aaa
or
aaa
out
jp
push
shll
insb
xlat
pop
lods
mov
jne
cmpsl
and
faddl
shl
cmp
add
cltd
xchg
xlat
inc
icebp
ds
daa
and
daa
add
mov
fldl
xchg
cli
movsb
cmpsl
test
les
pop
lret
lret
cli
mov
outsb
pop
and
mov
lods
outsb
and
aas
stos
inc
jb
mov
std
cltd
ja
leave
loop
int3
pop
rcrb
out
mov
xor
jne
fwait
pusha
push
pop
push
add
jmp
cld
adc
movsb
adc
inc
cmp
jle
movsl
cmpsl
aad
imulb
icebp
and
int
mov
test
adc
mov
inc
rclb
lret
fs
xlat
cli
adc
pop
lea
jno
inc
and
lock
les
daa
mov
push
dec
data16
popf
push
test
mov
nop
or
dec
ret
mov
lahf
dec
cld
aas
leave
dec
push
pop
stos
add
mov
cmp
es
scas
adc
mov
sbb
clc
inc
lea
mov
int
sub
lods
je
stc
mov
pusha
sbb
sub
fs
pushf
mov
iret
in
sbb
shlb
pop
leave
out
pop
add
nop
shr
mov
sbb
mov
sbb
xchg
jo
mov
xchg
cmp
sbb
iret
ret
cmpb
mov
ja
int3
add
jne
add
jmp
pop
mov
inc
xchg
call
mov
fnstenv
mov
test
movsl
xchg
fucomip
add
adc
mov
nop
sbb
mov
jb
repnz
repz
dec
daa
jae
sbb
jne
outsl
fbstp
add
xchg
jecxz
ret
fwait
mov
pop
loopne
mov
push
je
xor
push
fstl
test
addr16
pop
mov
nop
inc
test
rolb
aas
xor
leave
and
out
outsl
adc
inc
shll
cmp
inc
in
adc
adc
lods
sbb
push
aas
pop
cmp
inc
inc
call
push
mov
ss
popl
or
test
push
and
adc
xor
testb
push
scas
sahf
stos
jmp
sti
mov
add
pop
xchg
les
or
into
clc
out
icebp
sub
jmp
popa
lock
jo
popf
ljmp
pop
adc
jle
fimull
pusha
in
and
cmp
jg
lret
inc
mov
sbb
mov
push
je
ret
mov
push
fdiv
xorb
mov
or
ljmp
xchg
sub
mov
jg
or
cmp
out
dec
push
lcall
fcomp
stc
mov
add
sahf
ficoml
iret
hlt
add
adc
jb
inc
and
pop
cwtl
jnp
adc
in
push
mov
aaa
pop
sub
mov
push
icebp
push
mov
mov
mov
jns
testl
or
jecxz
lcall
insb
std
ret
and
sar
data16
add
and
pop
xorl
cmp
and
addb
jmp
cld
das
mov
out
out
sahf
lods
call
scas
and
mov
lcall
add
stos
mov
push
pop
adc
or
rclb
rcrb
add
imul
jl
pop
popf
xchg
cmp
mov
dec
cmc
xchg
movsl
insl
or
scas
jl
insl
dec
or
test
test
mov
push
mov
mov
ljmp
popa
pop
mov
in
xchg
sbb
aas
pop
stc
add
adc
addb
shlb
push
fstpt
jg
sti
out
mov
cltd
shlb
data16
leave
incb
inc
jne
fsubrs
sub
test
cmp
dec
sbb
jmp
es
xchg
cwtl
cmpsl
in
jnp
ret
mov
add
sbb
xor
iret
imul
inc
add
fbld
ret
mov
bound
push
cs
dec
ljmp
or
cli
les
sub
push
not
addl
push
mov
mov
cwtl
or
mov
setbe
shrb
daa
lcall
ja
or
inc
adc
add
mov
scas
shlb
mov
sub
sub
xchg
push
rorb
sub
and
mov
inc
or
cwtl
sahf
sub
decb
dec
pop
jne
cs
jns
addb
sbbl
xchg
lds
mov
mov
cmp
jmp
cltd
cmp
inc
hlt
nop
pushf
mov
or
movsb
loope
pop
lods
cmc
movsb
push
or
pop
popf
test
lods
mov
mov
fimull
popf
test
cmp
push
cmp
adc
inc
xorl
or
cli
out
sbb
cmp
shrl
adc
out
movsl
mov
jg
dec
loop
push
jmp
outsl
popf
push
jecxz
in
fisttps
dec
mov
dec
mov
gs
cmp
jl
aam
sbbb
push
pop
std
cltd
inc
xchg
push
jb
inc
jne
mov
lret
repnz
into
adc
movsb
dec
das
pop
jb
out
test
sahf
rorl
push
jbe
or
or
mov
jns
sub
or
popf
aas
je
setnp
lds
scas
adc
push
mov
mov
out
cmpsl
dec
xor
mov
hlt
test
ret
push
xorb
cwtl
inc
test
sub
hlt
cmpb
fldcw
shll
inc
xchg
sub
lods
loop
jbe
fiaddl
cmp
mov
xchg
mov
dec
push
sub
xchg
pop
mov
sub
lcall
dec
inc
push
inc
lret
notb
popf
and
jo
popl
mov
jns
and
cmp
decb
jae
sub
aaa
mov
add
mov
xchg
loop
inc
dec
mov
movsb
icebp
mov
mov
popf
cmc
push
inc
pop
xor
in
xor
sbb
fsubr
fimull
jp
sbb
adc
inc
je
subl
sbb
lds
das
push
mov
pop
out
cwtl
stc
xchg
movsl
inc
shrl
mov
pop
cmc
hlt
imul
add
fisubs
sarb
loop
pop
sbb
std
jl
jg
fdivrs
pop
inc
jbe
lods
push
jle
xor
imul
sahf
jle
ret
es
and
int3
cmp
adc
shr
icebp
out
lock
jmp
cmpsl
or
lcall
pop
inc
xlat
mov
hlt
xor
aaa
movsb
cs
movsl
sahf
pop
sbb
sub
ret
cmp
in
adc
mov
mov
push
cltd
pop
add
jae
inc
xor
repz
cmp
mov
subl
vcvtsi2ssl
jae
xchg
xchg
cwtl
fucomip
adc
cwtl
lahf
sarl
sub
push
ljmp
mov
lret
clc
cmp
lret
cmp
pop
aaa
or
xchg
leave
adc
jmp
mov
or
mov
cld
shl
adc
push
das
jbe
les
enter
sar
stc
loope
lds
daa
sub
push
insl
mov
loopne
test
lcall
adc
ljmp
int
outsl
jne
inc
sub
inc
mov
in
pop
loopne
mov
imul
std
adc
insb
mov
mov
mov
pop
xchg
mov
aaa
push
xor
in
pop
cmc
scas
data16
in
adc
mov
mov
and
lcall
imul
cmc
mov
push
pop
aam
adc
imul
or
lcall
rclb
lods
cmpsb
cmp
sub
ljmp
fnstenv
orb
mov
addr16
push
mov
stos
scas
jl
push
mov
push
arpl
inc
ret
and
mov
int3
mov
pop
popa
lret
jo
fsubs
push
scas
xchg
in
cmp
pusha
sub
fsub
fwait
movsl
loop
je
ficompl
jge
push
sub
btr
lods
scas
insb
xchg
mov
data16
cmpsb
adc
das
xchg
imul
fdivrp
mov
add
cmc
mov
mov
xchg
scas
cmp
cltd
jle
inc
ret
or
iret
lret
mov
lret
cmc
lock
iret
popf
aam
movsb
inc
mov
popf
jmp
jnp
push
in
inc
cmp
pop
aaa
rorb
sub
inc
cmc
rorb
lea
ret
cmp
xchg
mov
dec
jb
xor
sbb
hlt
push
mov
inc
jbe
testb
adc
mov
dec
add
push
dec
dec
jle
and
adc
cld
push
mov
lds
das
xor
into
inc
adcl
ret
xchg
ret
push
idivl
fwait
mov
mov
lahf
hlt
cmp
in
jg
xchg
mov
cltd
xchg
clc
mov
pusha
fcmove
mov
xor
pop
mov
in
push
sub
in
adc
inc
cmp
mov
xor
ret
mov
ds
cmp
out
sub
dec
or
aaa
jnp
out
popa
jp
or
lds
pop
xor
cmp
mov
fsts
shll
ret
in
mov
adc
lds
push
or
push
sub
push
je
pop
and
pop
adc
insb
das
push
xor
lcall
ret
push
xlat
test
mov
je
mov
leave
mov
inc
in
adc
dec
dec
lods
mov
pop
mov
call
shrb
ficoml
je
sbb
or
cmp
out
insl
daa
cmp
add
stc
out
sub
iret
jae
arpl
mov
int
leave
insl
dec
clc
sub
jno
leave
adc
loope
push
testb
in
mov
fdivs
jnp
mov
leave
insb
cmp
dec
in
ret
xlat
fidivrl
and
dec
dec
in
push
mov
lcall
sbb
cmp
adc
jae
push
loope
xor
imul
icebp
fucomip
mov
mov
sub
sarl
mov
outsl
rolb
sub
inc
in
inc
or
ljmp
adc
call
popa
pusha
xchg
dec
push
jns
lret
pop
inc
test
lcall
mov
cs
fldcw
lea
std
push
sub
pop
push
cmp
jle
jno
rcl
and
or
adc
loope
mov
insb
out
or
or
mov
pop
add
push
xchg
sarl
mov
jp
sbb
inc
push
lock
push
lds
push
cmp
add
in
je
rcl
dec
daa
mov
mov
cwtl
sbb
xor
and
aaa
sbb
jge
mov
mov
das
add
dec
int
adc
mov
adc
lods
or
pop
adc
pop
movsb
popf
sbb
jb
movsl
mov
push
xor
std
pop
dec
inc
das
aad
jp
jns
xor
push
xchg
push
out
xlat
outsb
push
cmp
sbb
fldenv
popa
lods
mov
pop
mov
icebp
ret
adc
pop
push
xchg
add
xchg
rol
push
adc
insl
out
pop
push
mov
out
push
adc
mov
pop
push
rcll
jle
loopne
bound
sbb
int3
mov
fsubs
push
xor
push
xchg
jg
and
aad
xor
xorb
cmc
jbe
dec
imul
test
xor
pop
sarb
and
pop
mov
add
mov
sti
enter
sub
add
mov
dec
dec
bswap
cmpsl
fdivrl
jp
add
psubq
sahf
filds
int3
mov
inc
mov
cmp
push
bound
jg
push
sub
push
pop
xor
je
mov
add
int3
cmpsb
dec
pop
or
adc
test
lds
and
popf
ror
rolb
and
inc
daa
outsl
push
xchg
jmp
adc
push
std
dec
jo
sbb
mov
sti
insb
dec
enter
subl
nop
and
dec
mov
mov
adc
lods
mov
cli
xor
jmp
inc
push
push
push
enter
cmp
jae
pop
aad
out
mov
jle
push
aam
jmp
or
add
mov
xor
hlt
repz
xchg
jmp
inc
mov
jne
push
push
jle
sub
push
sar
xor
in
int3
dec
pop
adc
lret
sub
xor
xchg
push
in
divl
adc
iret
cld
loopne
cmpsb
scas
push
aam
fadd
shlb
jmp
push
movsl
mov
loopne
inc
aaa
sahf
xor
and
cwtl
daa
ds
pop
jl
cmc
pop
aas
adc
pop
pop
xor
inc
outsl
inc
in
push
jne
sarb
xchg
js
loope
mov
add
push
cmp
adc
dec
sub
mov
lods
aaa
leave
mov
adc
or
inc
pop
sub
stc
cmp
jl
xor
cmpsl
imul
cmp
inc
notb
or
sub
iret
lds
outsl
or
notb
sbb
jle
arpl
dec
cld
inc
fs
in
sbb
in
adc
sbb
clc
sbb
sub
pop
pop
aad
mov
lods
sub
jbe
xchg
imul
pusha
cli
push
sbb
sti
xor
xchg
das
mov
lods
stos
push
mov
pop
roll
push
pushf
inc
xchg
mov
rcll
aaa
fsubr
insb
lods
mov
mov
mov
aam
mov
push
mov
cmpsb
sbb
pop
ds
pop
mov
mov
cltd
mov
mov
inc
pop
test
test
mov
inc
cmp
lea
mov
mov
mov
jne
enter
scas
xor
add
out
cmc
outsl
leave
and
jp
push
jno
loopne
test
add
insl
lds
ret
repz
push
xchg
mov
dec
int3
pmulhuw
imul
pop
sub
mov
popf
push
fimull
das
popf
sbb
iret
sub
imul
inc
outsl
arpl
jnp
imulb
and
push
push
std
leave
je
mov
adc
inc
loope
push
inc
lahf
dec
test
test
loope
xchg
inc
inc
dec
pop
lahf
cltd
into
dec
lret
movsb
cwtl
mov
dec
das
arpl
adcl
push
sarb
dec
imul
push
and
arpl
xchg
mov
sbb
cld
rcrl
mov
sahf
sub
mov
insl
mov
mov
add
jge
shll
daa
jns
outsb
je
addb
test
lret
and
xor
jne
ljmp
lea
test
inc
test
shl
cmc
jno
xchg
mov
test
xor
sti
adc
test
add
jo
into
xor
xchg
push
push
iret
pop
dec
ljmp
or
lds
aas
lret
aad
out
and
mov
mov
push
cmpsb
sub
mov
fdivrl
cmp
rcrl
sub
in
arpl
xchg
push
mov
lret
and
mov
xor
lods
adc
inc
mov
sahf
dec
call
sub
cmp
jg
stc
addl
mov
and
cltd
in
test
popa
fsubrs
bound
cmc
push
dec
lods
loop
pop
pop
lods
or
dec
movsb
adc
cmp
icebp
mov
mov
and
mov
push
nop
fisubs
rorl
mov
mov
xor
xchg
mov
loopne
pop
dec
xchg
cltd
pop
pop
sbb
inc
xorb
addr16
add
pop
sub
jb
and
pop
dec
popa
xor
jecxz
data16
pop
mov
xlat
ljmp
mov
daa
xor
dec
or
jge
dec
xchg
xlat
jnp
cmc
leave
xchg
stos
mov
push
push
rcrl
xor
mov
sub
fstps
outsl
xchg
and
and
xchg
jbe
popa
xchg
inc
add
mov
sub
rcrb
imul
add
push
mov
loope
insb
ror
test
jecxz
mov
test
jo
and
ja
inc
enter
mov
leave
insb
push
mulb
xchg
xor
addr16
jmp
xchg
and
sub
scas
inc
cmp
shrl
sahf
and
daa
mov
outsb
les
sbb
mov
lcall
pop
aam
dec
in
lret
push
loop
loopne
jge
addr16
and
jmp
xchg
or
ret
call
inc
cmc
cli
ss
repnz
cld
fnstsw
sbb
pop
adc
sub
lds
sbb
mov
imul
cmc
pop
jno
fldl
sbb
enter
pop
jo
push
pop
pop
xor
xchg
call
sub
push
mov
jle
dec
inc
insl
leave
rcll
cmp
mov
fidivrl
add
push
inc
or
ss
jle
pop
rol
push
sbb
ror
xchg
jl
outsl
xchg
cmpsl
mov
mov
cmp
iret
dec
lods
xor
cld
add
daa
clc
jecxz
and
cmpsb
mov
in
sub
cli
bound
decb
or
cltd
xor
cmp
fbstp
xchg
shl
in
movb
pop
call
push
cld
xchg
or
pop
fiaddl
in
cmc
add
dec
sbb
mov
mov
push
mov
or
stos
xor
mov
shll
mov
es
ret
cmp
out
cli
cltd
icebp
push
or
lea
out
cwtl
sub
fs
movl
sub
outsb
fidivs
mov
mov
loopne
fistpl
lods
jae
dec
sahf
outsb
push
mov
xchg
xor
ret
dec
push
mov
loop
adc
and
sti
adc
shll
mov
in
inc
cmp
mov
xor
mov
mov
and
mov
sbb
xchg
add
mov
push
xor
fsubr
test
jnp
xor
cltd
sbb
inc
or
stos
clc
sub
or
add
mov
outsb
lods
push
packsswb
sub
inc
pop
and
mov
shll
ja
outsb
cli
movsl
mul
ja
pop
rolb
inc
loope
xchg
jo
jae
jae
jns
icebp
push
mov
sub
add
scas
out
jl
loopne
pushf
repz
outsl
test
mov
cmc
mov
dec
push
lods
lea
ret
movsb
mov
lret
out
push
inc
mov
insb
js
mov
lret
cmc
pop
xlat
repz
ss
popa
dec
stc
mov
inc
ret
xlat
push
sbb
out
sbb
sub
arpl
or
sub
gs
adc
sub
mov
push
jmp
and
or
sti
inc
pop
inc
mov
jecxz
xchg
and
and
mov
jae
addr16
fwait
xor
sbbl
daa
mov
jb
adc
jl
inc
in
leave
cmpsl
xchg
movsl
xor
sub
fcmovbe
xchg
mov
or
ss
scas
repz
movsl
fwait
xor
fcomps
adc
movsb
push
out
je
lcall
out
push
xchg
out
xor
lods
inc
xchg
and
push
les
hlt
add
jge
fwait
loop
ds
pop
push
jecxz
pop
pop
mov
aaa
xor
int
jo
rorb
mov
daa
pusha
outsb
push
sar
and
pushf
sub
jg
inc
jge
pop
daa
push
lods
and
adc
push
mov
jne
xchg
and
shr
adc
mov
jns
cmp
iret
adc
lahf
scas
xchg
shrb
push
jno
cvtdq2ps
mov
fiadds
sub
sbb
and
mov
sbb
add
or
out
pop
test
loop
jle
ret
testl
cmc
and
adc
ret
xlat
lret
dec
int
ficoml
jo
daa
add
mov
rcl
xchg
cmp
xchg
xor
xor
jmp
test
add
and
xor
xchg
shr
outsl
jge
fiaddl
clc
inc
call
push
add
push
mov
into
insl
adc
and
fbstp
out
mov
test
into
cld
xchg
aas
rorl
lea
push
add
sbb
lret
xchg
inc
mov
fcoms
or
xchg
sbb
jl
out
or
fwait
adc
mov
inc
ds
push
cmp
pop
insl
jp
fistl
dec
movsb
jmp
xor
pop
aad
arpl
push
cmp
cmp
xchg
add
push
in
mov
insb
adc
mov
sub
mov
orl
fidivrs
dec
mov
scas
mov
push
cmp
andb
push
loope
aam
stos
jecxz
ja
inc
ja
scas
bound
jle
and
jp
adc
push
loop
cld
inc
sub
imul
cmp
jmp
mov
cmp
stc
ja
fists
lea
stos
push
jbe
cmp
xchg
daa
xchg
add
rorl
xlat
subb
repnz
add
sub
push
movsb
stos
xor
ja
in
adc
faddl
jne
push
jne
orl
add
mov
jae
outsb
xor
dec
ret
mov
bound
or
push
push
push
fadds
or
sti
xlat
jg
mov
aaa
jne
loope
sbbb
add
mov
xchg
in
push
pop
cli
mov
mov
arpl
mov
mov
or
out
mov
dec
xchg
mov
outsb
adc
leave
inc
lea
mov
sub
imul
rol
cltd
aaa
mov
hlt
push
add
dec
insb
cs
orb
leave
and
sub
jae
insl
dec
and
ljmp
mov
push
lds
cmp
lcall
inc
pusha
push
ljmp
test
sub
mov
adc
mov
int
mov
lret
pop
jno
repnz
les
xchg
cmpsb
in
lahf
outsl
shr
gs
lds
mov
dec
xchg
scas
std
mov
push
jmp
dec
fwait
xor
pop
imul
sub
ret
xchg
cld
or
rclb
fimuls
push
call
and
popf
pop
and
in
pop
push
jns
cmp
sbb
inc
and
inc
xchg
ficomps
ja
xor
xchg
popa
js
jns
pop
dec
sbb
lcall
clc
movsb
mov
pop
pushl
outsl
xor
das
jg
push
jl
push
or
fisubs
fs
and
xchg
mov
das
call
add
int
jle
adc
and
call
cmc
mov
fmull
pop
cmp
test
in
icebp
loope
xor
shrl
push
aad
fldenv
pusha
jmp
daa
movsl
insl
xor
rcll
jecxz
fsubrl
iret
adc
mov
aaa
pop
xchg
or
lea
movsb
push
loope
cmp
fisttpll
pop
fdivrp
and
jg
das
arpl
mov
sbb
or
out
dec
sbb
adc
test
mov
xor
lcall
pop
inc
mov
in
aam
sar
out
push
add
stos
gs
dec
xchg
enter
add
adc
cmp
scas
xchg
lret
sar
rclb
loope
jmp
lock
mov
cmpsl
xchg
test
mov
mov
sub
xorb
idivb
inc
arpl
pusha
jge
shlb
lret
mov
cmp
jle
fs
cmpsb
cli
dec
icebp
sbb
in
mov
fstpt
scas
cli
sbb
xor
or
cmp
aaa
jns
out
int
push
push
cmpsl
xchg
nop
movsb
and
adc
adc
cltd
rcrl
stos
cmp
sbb
loopne
ror
push
push
fistps
inc
inc
daa
ljmp
lret
push
dec
out
add
sub
push
adc
sbbl
fdivr
dec
pop
pop
lcall
add
xchg
pop
jle
jbe
imul
pop
mov
fsts
cmp
inc
fwait
xchg
outsb
mov
cmpb
js
add
pop
movsl
jns
add
rcll
mov
idivl
mov
lods
outsb
sub
pop
lcall
jmp
push
idivb
popf
insl
dec
rorb
xor
movb
xchg
pop
xor
inc
sub
adc
loope
add
aad
adc
push
and
pop
push
push
xchg
mov
push
or
inc
sub
ja
mov
lcall
jp
ret
xchg
xor
mov
ror
lods
stos
inc
add
pop
shll
mov
pop
xchg
pop
lea
into
cmpsl
aad
ss
lock
cwtl
orl
pop
and
dec
sbbl
gs
sbb
mov
das
lds
jge
fwait
cs
stc
mov
adc
adc
mov
sahf
pusha
loop
jecxz
add
jg
ss
fidivrl
ss
jle
push
adc
je
inc
fcmove
mov
inc
inc
push
xchg
mov
inc
xchg
scas
lret
inc
sub
pop
ljmp
mov
cmp
cld
sti
adc
push
lods
into
cmp
cs
push
sbb
jae
ret
enter
js
pushf
mov
mov
ret
sub
cltd
sti
adc
call
test
sbb
js
add
int
icebp
cmp
xchg
iret
xor
iret
movsb
jo
movsl
sub
outsb
pop
sub
ja
lods
out
cli
scas
sbb
ss
xchg
lods
pusha
xor
popa
cmp
call
mov
test
xchg
std
movsb
in
call
clc
and
pusha
es
push
lcall
jmp
inc
xor
fisubs
adc
adc
cltd
mov
ss
arpl
ss
push
arpl
test
sub
sub
fs
or
clc
push
xlat
inc
adc
add
popf
sbb
enter
jne
cmp
pop
leave
sarl
testl
xor
ficomps
dec
jne
test
dec
aaa
adc
in
inc
cmp
mov
ja
mov
jle
sbb
mov
mov
jne
inc
bound
lods
nop
push
inc
or
jnp
or
push
sti
mov
cld
cmp
rcll
stos
inc
incl
jp
cmpsl
aam
inc
push
ss
loopne
inc
clc
push
lock
repnz
icebp
daa
cmp
sti
adcb
dec
mov
pop
sbb
mov
pusha
das
dec
imul
icebp
mov
jle
leave
xor
pop
push
fimuls
xchg
mov
lcall
insb
inc
outsl
out
and
loope
jmp
jo
push
pop
cli
pusha
mov
add
pushf
ficomps
insl
mov
sbb
xchg
fsubl
ficomps
cmpsl
mov
and
cmp
cli
and
sbb
dec
popa
mov
push
cmpsb
pop
sub
dec
addr16
cli
xchg
mov
mov
mov
cmpsl
fdivrs
sub
je
cmp
mull
out
fnstenv
xchg
or
shrl
push
sbb
std
and
push
cli
xchg
jns
xor
pop
and
cmp
rolb
dec
mov
mov
xchg
insl
popf
lds
sub
lret
mov
imul
mov
ljmp
outsl
bound
icebp
xchg
les
jns
sbb
cmp
push
inc
stc
aam
add
subb
stos
aas
dec
sub
sbb
jge
dec
adc
or
decl
out
fwait
rorb
inc
pop
ja
or
xchg
pop
dec
sbb
lock
mov
loop
in
test
add
adc
mov
arpl
mov
sub
mov
mov
lahf
movsb
pop
xchg
loopne
dec
int
imul
pop
and
stos
adc
dec
nop
shll
mov
push
sbb
pop
or
jno
movsb
xlat
into
dec
incb
xor
in
shl
icebp
xchg
das
je
cmp
cmc
jmp
push
dec
jp
jecxz
push
or
pop
jne
fwait
push
xchg
dec
shrl
frndint
call
cs
pop
dec
xor
sbb
test
mov
xchg
std
push
insl
in
mov
sbb
push
xchg
and
cmp
daa
dec
xchg
aaa
popf
adc
mov
or
push
cmpl
jmp
xor
arpl
repz
adc
pop
xor
xchg
pop
int
jmp
xor
sbb
mov
add
cmpsl
insb
test
mov
nop
shrb
or
sub
cli
pop
shlb
jg
movsl
cmp
into
mov
scas
les
mov
pushf
sub
cltd
icebp
dec
fucom
mov
mov
jle
adc
push
add
adc
cmp
xlat
cs
add
and
push
lret
or
outsl
pop
or
pop
out
loope
subl
lret
sti
enter
test
in
inc
xchg
or
sbb
movnti
movl
int
imul
arpl
aad
fsubl
dec
es
mov
xsaves
cmp
add
push
jmp
cltd
sub
bound
stos
jnp
loope
std
jno
pop
cli
outsb
mov
loope
std
push
pop
movsl
push
inc
cltd
push
xchg
popa
insb
mov
sbb
mov
test
out
mov
test
dec
test
or
mov
mov
stos
rcr
and
xchg
pop
cmp
jo
or
cmp
imul
xchg
loopne
pop
mov
pop
dec
add
out
jnp
test
pop
sbb
shrl
xchg
inc
aas
testl
dec
mov
and
dec
push
add
or
adc
into
dec
inc
mulb
cs
or
mov
add
push
ja
pop
xlat
pushf
jae
filds
sbb
cmp
push
mov
cmpsb
clc
les
ret
sbb
sbb
dec
pop
ds
ss
push
pop
cwtl
xor
clc
mov
testl
xchg
shll
loope
and
jp
arpl
movsl
push
mov
mov
pop
mov
movsb
fildll
push
shrb
lret
cmp
cmp
add
sub
shlb
icebp
aam
add
je
out
scas
sti
stc
cmp
std
cs
pop
cmp
subb
mov
sub
inc
outsl
sahf
mov
aas
test
lret
sbb
add
pop
jmp
lods
jo
pop
xchg
cmp
sub
xlat
push
fcom
mov
and
fs
das
add
cwtl
mov
jae
cli
aam
in
out
lret
roll
aas
aas
imul
imul
sub
out
jge
push
push
push
std
cmpsb
orl
sub
icebp
mov
or
sbb
sahf
insb
out
or
fisttpll
lcall
add
sub
ror
std
mov
aas
loop
pop
out
adc
mov
pop
fnstcw
aaa
mov
ret
mov
inc
pop
or
and
push
test
pop
repz
lds
test
sub
and
stos
cld
nop
aaa
inc
pop
jnp
stos
aam
stc
mov
in
push
and
mov
cmp
lret
jnp
les
call
push
movl
cmc
sahf
adc
mov
cltd
sbb
fsub
inc
arpl
shlb
add
negl
mov
flds
xor
iret
sbb
nop
aaa
fs
or
out
ss
mov
jo,pn
xlat
in
dec
and
fwait
mov
lock
xor
inc
inc
pop
push
fimull
pop
mov
out
push
leave
cs
mov
imull
test
popf
sub
jecxz
and
scas
pop
lods
add
inc
sbb
aad
sbb
inc
push
ret
cmp
mov
mov
scas
nop
mov
dec
rorl
lds
pop
jbe
into
adc
fstps
outsb
movsl
xchg
or
cmp
jg
dec
push
lea
xchg
enter
inc
mov
adc
push
outsb
or
xor
mov
or
add
loop
mov
imul
or
insl
mov
lahf
cmpb
cmp
xchg
jae
xchg
xchg
mov
movsb
inc
sub
mov
mov
test
add
mov
outsl
pop
pop
jl,pt
fildl
aas
lods
jnp
sbb
mov
xchg
in
jo
push
xor
stc
jae
lcall
and
movsb
fwait
xor
shlb
mov
cmc
sub
push
or
in
push
xchg
xor
pop
push
lock
roll
pop
ljmp
xchg
imul
scas
lods
shll
xor
mov
in
sbb
mov
mov
gs
xor
data16
lahf
mov
cmc
jge
out
cld
jmp
imulb
pop
roll
cwtl
pop
iret
xor
dec
rcr
push
fdivl
test
or
mov
xor
adc
cmpsl
sub
rcrb
jl
mov
insl
mov
or
mov
mov
xlat
mov
setp
imul
inc
dec
mov
stc
inc
arpl
std
leave
dec
popl
movsl
das
lea
cmp
ss
loopne
ret
push
xchg
nop
mov
inc
clc
popa
xchg
pop
and
ss
or
push
dec
mov
lods
jno
in
add
xchg
dec
in
popf
cs
in
std
pop
test
sub
xor
imul
mov
imul
jecxz
and
xor
enter
stos
clc
inc
dec
or
and
inc
cmpsb
arpl
mov
scas
xor
pop
xorb
les
and
inc
clc
fs
xor
fwait
mulb
mov
jbe
shll
pop
push
cli
xchg
mov
fsubrs
js
jns
push
out
inc
add
divb
dec
sbb
rcr
std
mov
fcompl
dec
push
adc
scas
push
inc
xchg
add
xorl
dec
adc
jno
ja
xchg
dec
testb
jmp
mov
mov
mov
in
mov
stc
lret
shlb
or
test
dec
push
add
or
int3
and
ficoms
daa
mov
xchg
and
xchg
push
add
and
xlat
ja
ret
xchg
es
stc
std
pop
andl
jns
add
leave
out
inc
js
mov
repnz
outsl
jno
sarl
js
outsl
dec
xor
or
xor
lahf
out
mov
test
sti
lock
aas
inc
mov
std
xorb
pop
ljmp
sarb
xchg
xchg
xor
loop
xor
in
xor
popf
addr16
cmpsb
sbb
cmp
xchg
sub
ss
push
and
nop
push
push
push
xor
xor
repnz
outsl
dec
out
adc
sbb
jle
and
in
shlb
mov
xor
pusha
loopne
mov
sbb
rcll
pop
aad
mov
mov
mov
test
xor
int3
ds
aam
std
dec
andb
and
ss
lods
fistpll
pop
jnp
mov
std
test
fistps
sbb
mov
sbbl
lret
stc
mov
rcrb
shlb
and
fistps
cs
xor
cmp
push
mov
mov
jg
xchg
mov
sbb
xor
push
or
mov
inc
mov
mov
push
popf
test
pop
insb
mov
dec
test
out
mov
mov
shrl
bound
out
cli
gs
inc
sbb
pop
xor
pop
cmp
mov
xchg
lods
jmp
and
dec
xchg
mov
and
adc
cld
pop
dec
cmp
mov
aaa
mov
jb
mov
mov
imul
push
ret
cmp
adc
divb
loopne
hlt
push
stos
push
mov
push
sti
inc
aam
add
mov
into
push
insb
addr16
cmpl
ss
mov
add
jbe
xchg
jle
mov
cwtl
aas
mov
pop
test
push
pop
dec
rcll
addr16
lahf
jne
jno
int3
mov
sub
popa
xchg
cwtl
js
or
scas
notb
or
test
lahf
cmp
popa
adc
or
movsl
add
js
adc
mov
pop
repz
sub
test
pusha
popf
sub
push
mov
push
loope
mov
add
scas
pop
xchg
lods
ret
addr16
or
sbb
incb
aas
cmpsl
push
mov
sarb
dec
in
addr16
popf
add
xor
test
into
mov
jge
addr16
jp
mov
xchg
mov
xchg
in
adc
cmp
push
push
push
js
mov
adc
push
xchg
sub
sbb
sbb
ds
mov
push
fwait
or
sub
or
mov
enter
and
jge
sub
nop
push
dec
in
sbb
sti
repz
les
xchg
out
pop
sbb
jge
nop
pop
mov
adc
push
fsubl
stos
cmp
dec
jecxz
into
and
inc
in
or
dec
pop
push
scas
enter
sbb
adc
aaa
andl
inc
icebp
lods
dec
repz
mov
xor
xor
sti
mov
mov
cwtl
out
jmp
inc
or
stc
inc
stc
mov
mov
mov
mov
mov
inc
lods
mov
xchg
jno
and
mov
stos
andb
inc
loop
out
push
lret
orb
gs
rcrl
or
and
mov
fdivrl
fwait
jle
jns
or
push
scas
mov
push
jge
inc
xlat
dec
add
add
push
outsb
sbb
cmp
jge
xor
test
mov
pop
mov
mov
lods
pop
std
aas
test
ret
out
add
adc
sbb
cmp
fwait
lds
popf
mov
mov
push
incb
test
rcl
inc
xchg
xlat
popf
sbb
les
jb
cmp
mov
loope
lea
push
out
lods
add
loop
push
mov
cmp
jmp
push
lcall
push
xchg
mov
jp
fisubrl
mov
fs
sub
rcl
int3
xor
pop
xor
ja
cmc
cmpsb
aaa
lea
add
mov
and
js
adc
int
scas
lret
fisubs
push
cmp
and
in
ret
cmc
fcoml
fwait
jno
or
inc
dec
xor
inc
mov
fdivrs
rcll
inc
lahf
push
dec
dec
push
outsl
and
in
jle
sahf
iret
cli
out
aad
and
stc
mov
add
stos
scas
jno
ret
or
rorb
dec
cmpsb
sbb
inc
and
xor
sub
lds
dec
and
aam
mov
lahf
add
in
aad
lcall
mov
cmc
lcall
shrb
fdivl
mov
mov
ss
push
add
insb
xor
lahf
addl
xor
and
ret
imul
add
rclb
push
sbb
enter
cmpsl
loopne
aad
js
push
sbb
xor
cmp
lds
push
cwtl
test
xchg
xor
ja
add
pusha
divb
je
fidivrl
cltd
mov
bound
or
or
fs
or
mov
mov
in
mov
cld
lcall
mov
scas
cld
jle
lea
out
call
arpl
loopne
or
pop
add
test
and
dec
in
mov
xor
push
js
jo
jmp
iret
pop
sbb
std
pusha
pop
mov
jmp
mov
ret
sahf
leave
jg
or
sub
pop
pop
xchg
pop
mov
jmp
xchg
lahf
inc
sbb
cmc
and
mov
sub
repz
xor
mov
int
hlt
nop
push
xchg
imul
push
mov
fwait
jno
jle
cld
pushf
pop
mov
jns
addr16
cwtl
ljmp
scas
outsb
cltd
shrl
mov
pop
shlb
dec
test
lds
xchg
idivb
enter
jl
mov
xorb
mov
jnp
test
push
dec
nop
sbb
je
ljmp
pop
inc
push
rcrb
cmp
lods
verw
fcompl
dec
pop
xchg
mulb
pop
ret
mov
mov
add
fst
mov
inc
call
jnp
add
fs
lret
dec
outsb
icebp
out
test
not
inc
sbb
rorb
xchg
jg
in
cmp
adc
jbe
xor
and
inc
test
aas
push
push
mov
daa
xchg
decl
pop
sub
out
mov
and
inc
pop
push
insb
ss
add
ror
mov
setg
pop
push
or
cmp
or
dec
xlat
insl
data16
loope
push
xchg
into
sub
int3
pop
imul
push
movsl
xor
push
decl
lret
mov
pop
and
movsb
inc
cmp
pop
faddl
cmp
loope
addr16
cmp
lahf
stc
cmp
enter
mov
jmp
xorb
sbb
aas
add
sub
mov
shll
push
cli
gs
mov
push
shl
adcl
pusha
int
dec
mov
adc
xor
testl
and
mov
mov
mov
in
dec
cmp
mov
add
mov
std
mov
mov
adc
loopne
ja
sbb
jae
cmpsb
xlat
mov
aaa
je
push
std
cmc
fsub
out
aad
jne
jg
push
test
xrelease
sbb
leave
sbb
xor
fdivrs
xchg
xor
call
sbb
mov
or
push
push
enter
pop
mov
jae
add
iret
je
mov
sbb
inc
lret
adcl
xchg
scas
adc
and
push
out
pop
dec
outsb
xchg
mov
aad
jmp
fsubrl
dec
int3
jge
push
xor
fdivrs
mov
test
js
cwtl
imul
mov
in
mov
test
imul
pusha
jecxz
jp
ds
fs
dec
cmp
or
mov
or
sbb
fimuls
cltd
insl
loopne
cwtl
xor
scas
jbe
popa
test
aam
popl
andb
sub
jnp
out
arpl
data16
lods
lret
lods
cmpsb
int3
mov
fmul
sahf
popf
repz
mov
mov
cmp
or
cmp
lret
inc
pop
sub
scas
mov
loop
or
add
rolb
aas
cmpl
xor
out
stos
movsb
adc
mov
and
jnp
pop
shrb
mov
movsl
dec
hlt
stos
aad
sub
sbb
dec
aaa
imul
dec
mov
or
testb
lcall
push
pop
repnz
es
and
jmp
mov
sbb
mov
les
mov
nop
movsl
and
repnz
daa
sbb
int
insb
clc
mov
out
xchg
or
mov
int3
pop
arpl
cmp
shl
sub
mov
lods
popa
xlat
int
loope
iret
add
push
sbb
xchg
das
dec
xor
push
shrl
mov
dec
mov
gs
pop
or
push
mov
pushl
push
cmpsb
sbb
lds
cmp
lea
das
mov
pop
inc
jno
and
insb
mov
pop
into
lcall
cmp
xorb
movsb
xlat
adc
je
push
loopne
jne
mov
imull
and
mov
and
mov
leave
cld
mov
sbb
and
add
mov
fcoms
add
aad
sbbl
jg
sti
inc
lcall
cli
pop
or
pop
cmp
mov
mov
mov
or
sub
dec
and
jecxz
daa
jo
sbb
in
negb
dec
rol
lret
loop
mov
test
jne
in
repnz
sbb
dec
imul
adcl
xchg
arpl
sti
cmpsb
mov
mov
in
mov
mov
push
aam
add
test
add
inc
xchg
sti
adc
inc
mov
mov
test
imul
loope
mov
insb
xlat
loop
dec
push
xchg
push
in
cmc
popf
insb
mov
xchg
rcr
push
sub
hlt
in
inc
xchg
call
mov
fsubs
lahf
in
mov
adc
lret
sub
and
aas
out
sbb
test
jns
js
lcall
mov
mov
fistl
and
mov
aaa
test
movsl
jns
bound
xor
inc
pusha
inc
and
imul
andl
pop
enter
dec
js
push
cwtl
push
shlb
pop
test
out
aam
pop
cmc
push
sbb
or
mov
mov
je
push
lock
xor
not
lds
mov
test
imul
jne
inc
sub
addb
or
mov
punpcklwd
push
rorl
popf
mov
arpl
or
call
into
adc
sub
or
out
pushf
hlt
xor
add
sti
out
lea
inc
mov
insl
mov
fxam
sar
iret
aas
divl
out
lsl
mov
call
ret
into
fwait
or
xor
pop
mov
xchg
cmp
jbe
int3
lods
add
iret
xlat
imul
lahf
cmp
jg
sarb
jmp
push
mov
sbb
pop
iret
in
int3
sub
test
call
push
mov
scas
jge
iret
inc
cmpsb
pop
aam
xchg
dec
jmp
sbb
sti
xchg
icebp
inc
add
inc
mov
les
fmulp
pushf
push
pop
fstpl
jp
fstl
out
out
inc
sub
je
sbb
lea
pop
xchg
jmp
xchg
outsl
arpl
ljmp
dec
sbb
cmp
cmpsb
or
les
scas
mov
pop
or
pushf
mov
dec
mov
int3
mov
cmp
mov
and
fistpl
inc
ret
imul
rcrb
pushf
jb
sbb
jno
mov
call
sub
mov
fcompl
mov
les
data16
and
ljmp
pop
jl
rorb
bound
push
sbb
lret
cmp
adc
out
mov
ret
jg
mov
fs
repz
adcb
xchg
fdivrl
fistpl
mov
xchg
pusha
mov
adc
push
xor
jo
shrb
mov
inc
lds
mov
cs
xchg
jge
lret
inc
jne
or
clc
ss
aad
out
mov
mov
push
pusha
mov
stos
pop
sbb
pop
enter
mov
pop
sbb
shrl
jg
fisubrs
push
sahf
jle
or
sub
movsl
lret
adc
fmulp
mov
js
sub
jbe
repnz
leave
inc
dec
push
pop
test
sub
push
inc
popf
out
push
das
sbb
xor
adcb
cltd
dec
fsts
insl
mov
jl
mov
addl
inc
push
dec
push
inc
mov
mov
mov
cmc
incl
xchg
clc
and
push
cmp
add
pop
add
ja
dec
push
lret
push
mov
lret
mov
in
add
outsl
mov
cs
mov
mov
sbb
mov
cmpsl
and
cltd
aad
lods
psrad
filds
adc
dec
arpl
mov
jne
sti
adc
pop
inc
cs
lea
fxch
sub
out
cmp
ret
lods
xor
sahf
mov
sbb
jecxz
ds
jle
jle
test
out
pop
jo
xor
and
loopne
gs
mov
gs
jl
stos
inc
xchg
int
mov
leave
sub
fwait
fwait
je
mov
stos
mov
leave
push
jmp
int3
cwtl
je
cmc
or
test
cmc
mov
cltd
adc
ds
adc
aaa
mov
lods
cltd
test
stos
inc
xor
repz
es
mov
xchg
jle
and
add
xchg
jne
add
fbstp
sbb
sti
pop
and
loop
adc
xlat
inc
adc
fidivl
lea
sar
gs
mov
mov
call
pop
pushf
sbb
xchg
shl
sbb
jns
loopne
mov
or
sub
scas
out
repz
pushw
fidivl
and
cmp
adc
inc
repnz
or
xchg
adc
add
test
js
fwait
int
cmp
aaa
nop
push
xchg
sub
xor
push
in
je
inc
lock
mov
mov
add
sbb
xor
cli
jns
sub
add
jle
lcall
push
jl
lahf
adc
push
sub
push
mov
outsb
sbb
dec
xor
pop
nop
scas
ret
int
xor
inc
push
std
sbb
mul
jae
lahf
repnz
jns
out
mov
pop
loopne
sahf
outsl
mov
add
and
test
aad
out
jg
jecxz
mov
jge
jne
xchg
jge
aas
repz
pushf
dec
imul
push
mov
sub
stos
jo
pop
ret
loopne
pop
pop
rolb
dec
gs
stc
sub
lret
mov
xorb
sub
test
scas
dec
mov
add
daa
mov
int
pop
or
dec
scas
adc
dec
inc
mov
or
std
xchg
pop
inc
push
ljmp
popa
mov
movsb
push
in
push
lods
dec
insl
sbb
sahf
mov
insb
pop
xor
js
movsl
outsl
and
xchg
xchg
mov
test
ret
jecxz
pop
cmp
es
gs
in
push
xor
fdivl
xor
xor
out
stc
adc
cmpsl
int
movsb
sbb
lcall
shll
inc
xchg
ljmp
scas
adc
lret
sub
fiadds
jmp
jno
jl
lea
iret
xor
lret
cli
out
push
dec
xchg
sbb
dec
inc
outsb
mov
ret
push
pop
jbe
iret
cltd
mov
inc
es
out
jb
pop
mov
mov
aaa
inc
aam
mov
outsb
push
std
pushf
test
dec
hlt
pop
mov
mov
das
pop
cmc
pop
xor
or
pop
pushf
cmp
push
jno
and
bound
in
xor
inc
out
add
xchg
imul
aaa
dec
test
xchg
dec
sbb
pop
sub
sbb
jmp
roll
or
fwait
add
inc
pop
test
jo
xor
mov
adc
lret
test
or
lcall
cmp
xchg
adc
cmp
dec
ds
cmp
xor
pop
or
add
adc
test
push
lods
add
push
subl
daa
cmc
divb
mov
pusha
mov
ds
out
sub
mov
mov
lea
push
sti
sahf
xor
call
sub
sbb
mov
push
ja
pushf
fists
sbb
jo
push
sub
sub
sbb
fstpl
inc
push
fistpl
ret
jo
pop
lcall
test
inc
jl
cmp
dec
fadds
push
or
cmp
lods
les
jle
or
ficoms
mov
dec
jmp
dec
lret
fbstp
pusha
add
push
mov
iret
mov
ja
mov
xor
push
fcoms
cmpsl
stos
sti
dec
xchg
add
ds
xchg
shlb
int3
or
insb
sarb
inc
jg
xchg
pop
pop
xor
push
mov
lahf
mov
lret
dec
pop
mov
dec
or
or
cmp
sbb
call
stc
leave
mov
inc
push
mov
pop
cmpsb
and
mov
rorb
test
ja
mov
sub
bound
lds
loop
add
data16
mov
pop
sbb
mov
testb
iret
fwait
sti
mov
mov
lret
inc
jl
mov
dec
cmp
xchg
hlt
dec
cli
pop
cmpsl
test
push
xor
pop
jg
lahf
push
push
repz
in
shll
mov
ret
mov
xor
inc
ss
out
clc
fimull
ja
cmp
inc
out
out
sub
jae
divl
lods
inc
test
or
sub
rol
inc
jo
adc
rcrb
imulb
orl
push
and
rorb
lcall
imul
fdivrs
push
pushf
cmp
add
es
testb
popa
mov
or
adc
daa
mov
push
push
mov
push
sub
and
mov
sub
fadds
loop
dec
jno
lods
fwait
add
test
cmp
and
or
and
mov
sbb
add
popa
das
inc
sbb
popa
pop
push
jl
sub
pop
cmpsb
sti
mov
imul
sub
mov
sarb
aaa
or
jne
jns
push
pop
lods
inc
mov
mov
adc
lock
dec
mov
mov
adc
filds
aaa
negb
dec
xchg
add
mov
mov
mov
std
adc
lods
mov
adc
xchg
sub
ss
mov
xor
pop
mov
add
dec
push
xor
xchg
ret
jo
mov
and
sub
lods
mov
negl
and
cmp
fmuls
inc
mov
idiv
inc
jge
aam
test
int3
les
xchg
add
inc
aas
mov
pop
mov
test
jmp
addr16
sbb
jns
mov
jne
pop
outsl
push
leave
cld
cmpsb
add
call
out
int3
xor
add
add
jnp
int
stos
mov
and
insb
mov
lret
sbb
push
cli
add
mov
mov
push
into
dec
pop
or
movsl
jb,pn
jns
dec
and
xchg
inc
addr16
jne
mov
cwtl
pop
pop
mov
lcall
cli
sub
pop
sbb
icebp
mov
or
pop
ret
repnz
push
in
outsl
loopne
jecxz
push
call
aas
push
repnz
xor
aam
mov
in
icebp
add
xchg
imul
fstl
loope
mov
test
fwait
dec
addr16
and
sahf
in
add
add
or
cmp
lods
xchg
pop
xchg
push
cmc
cwtl
cmp
les
jge
mov
repz
popf
aam
jecxz
push
sbb
es
jae
mov
and
push
mov
sbb
dec
adc
sti
mov
mov
mov
xlat
fcoms
push
pop
jg
jge
cs
sbb
sbb
cmpsb
fwait
in
mov
cmpsl
fsts
mov
mov
jp
xor
call
stos
cs
ja
push
test
push
stc
and
fsubp
cmpsb
sub
outsb
mov
lahf
pop
out
sbb
mov
push
fimull
mov
out
sbb
mov
push
sub
jbe
out
jbe
adc
sub
aaa
cmpsl
or
icebp
and
repnz
loop
xor
test
cltd
ret
gs
mov
notl
jl
std
fimull
in
int
cmpsb
cwtd
mov
lods
std
mov
lea
push
pusha
mov
cmp
repz
popf
push
call
cmp
add
in
fnstcw
out
shll
out
lret
mov
sti
ja
lods
ja
sub
hlt
cmc
and
xchg
lock
shl
sbb
or
hlt
xchg
pop
xchg
jo
pop
or
push
cs
sbb
lcall
or
daa
inc
jmp
pop
decb
jno
mov
daa
cmp
pop
mov
bound
icebp
cmp
adc
mov
inc
push
mov
icebp
int3
sbb
ljmp
jno
push
lock
cs
int3
popl
or
fisttpl
jmp
daa
adc
xchg
test
or
icebp
je
outsl
popf
leave
fst
lahf
in
es
repz
jb
cmc
idivb
divl
dec
add
mov
add
cwtl
dec
xchg
aad
fsubrl
popa
mov
pop
int
out
in
fimull
push
subl
mov
xchg
inc
test
mov
mov
mov
mov
stos
shll
dec
cmpsl
cli
dec
inc
jp
cmp
in
iret
mov
adc
inc
cmp
and
xor
leave
push
dec
jnp
push
aaa
dec
out
push
pop
loopne
mov
dec
jo
inc
std
adc
push
cmp
adc
push
dec
mov
fs
fcmovne
sub
mov
jle
lahf
xor
mov
xchg
lret
movsb
fisubl
or
dec
sub
test
lret
dec
cld
shl
icebp
xchg
xchg
pusha
cld
test
adc
push
outsb
loopne
rol
cs
pop
jne
sbb
outsl
testl
es
jbe
je
push
adc
dec
inc
adc
fimuls
int
mov
push
ror
inc
and
and
into
sub
int
xor
repnz
mov
mov
fisubrs
add
inc
fistps
inc
mov
sub
push
inc
cmp
lods
out
sbb
mov
xchg
shrl
cmp
inc
push
pop
test
cltd
sti
ror
mov
pop
aas
pop
mov
shlb
fdiv
adc
lret
or
addr16
inc
jl
pushf
sub
call
lock
mov
pop
mov
stc
loop
jo
arpl
loope
cmpsb
lods
jecxz
mov
fimuls
add
jb
xor
cmp
mov
or
cmp
lods
pop
xchg
push
adc
mov
mov
gs
xchg
mov
movsb
fs
jno
xchg
push
dec
call
shrb
adc
mov
mov
lret
jmp
mov
shrl
jmp
and
daa
data16
call
jecxz
js
pop
adc
cltd
mov
jge
fldenv
ret
repz
inc
jns
loop
mov
call
out
scas
shr
push
out
sbb
testb
add
pop
pop
fdivrl
lds
orb
pusha
dec
aas
fldt
mov
rcrb
filds
cmp
xchg
mov
popf
jnp
mov
ret
enter
cwtl
mov
not
mov
lock
cmp
push
push
fsubrp
sbb
ret
int
fbld
subb
into
add
insb
dec
xchg
push
mov
call
xchg
into
cwtl
arpl
xlat
cltd
stos
imul
push
movsl
icebp
push
fiadds
jmp
or
mov
es
stos
es
adc
negb
and
cmp
mov
dec
stos
ret
sbb
jg
push
jecxz
xchg
mov
mov
jno
and
mov
rcrb
jno
dec
loopne
inc
push
add
pop
push
lret
int3
and
push
aas
int
and
mov
enter
out
dec
int3
xor
hlt
mov
insb
adc
testb
xchg
cmp
pushf
fimull
cmp
scas
ror
sbb
jo
jne
or
sub
xor
lret
sub
cmp
pop
mov
mov
adc
cli
in
pop
jge
insb
and
leave
xchg
sub
mov
fdivr
or
xor
sbb
repnz
sbb
adc
test
mov
das
daa
sahf
mov
sub
hlt
out
call
sub
fnstenv
and
add
test
pcmpeqw
fildl
push
mov
push
clc
js
lds
aad
stos
clc
sarl
popf
das
xchg
and
gs
sbb
outsb
cmp
push
aam
pop
push
jp
shrb
jle
shrb
inc
or
push
fistpll
or
or
shlb
call
lods
gs
cmp
sub
pop
lods
sub
sbb
dec
and
and
outsb
sub
cli
enter
mov
loop
dec
ds
or
pop
subl
pop
scas
mov
sbb
xlat
clts
test
cmpsb
insl
cmpsl
sub
data16
daa
mov
add
sahf
lock
icebp
jp
dec
xor
mov
push
out
push
mov
cld
jle
sbb
pop
fidivrs
pop
incl
mov
orb
rolb
jbe
int3
xchg
add
adc
dec
jae
adc
jo
jg
aad
out
sub
rcll
mov
xor
sbb
rclb
movb
xchg
pop
add
lret
mov
add
xchg
es
jno
jne
std
pusha
out
push
inc
fsubr
scas
dec
dec
popf
dec
sub
sbb
mov
lea
popf
sub
push
aaa
lea
mov
sbb
adc
sbb
add
or
jno
jns
fildl
mov
adc
jge
dec
mov
add
outsb
inc
fcompl
and
and
ljmp
pop
test
xchg
or
dec
mov
push
loopne
loopne
xchg
jo
mov
stos
dec
xor
lcall
add
push
pop
sub
jb
inc
sub
push
add
int
jne
or
icebp
outsl
call
adc
daa
loopne
call
lcall
mov
aam
push
jmp
xchg
shlb
inc
pop
sarb
xorl
xor
dec
mov
cmpsb
add
imull
sub
inc
test
push
adcb
imul
and
imul
pop
loopne
inc
mov
lea
push
faddl
mov
ja
xchg
fistl
aam
ds
add
xorl
and
pop
pusha
xor
test
sbb
dec
xchg
inc
mov
jbe
jns
pop
cmp
sbb
sbb
cmp
outsl
inc
ror
add
cmp
pop
adc
dec
mov
pop
sub
adc
ljmp
xor
mov
int3
fnstcw
loop
daa
rol
pop
sub
imul
repz
pop
lods
dec
fs
cmc
cld
call
aad
dec
mov
add
adc
into
lods
sub
xchg
push
mov
ja
dec
mov
xor
push
popaw
out
mov
pop
jecxz
inc
inc
xchg
test
push
cltd
push
jnp
test
push
addr16
sub
or
aam
mov
add
imul
fsincos
mov
push
sub
pop
inc
aas
enter
jb
inc
sahf
sbb
scas
push
xorb
push
add
inc
xor
gs
sub
iret
add
int
mov
jge
sahf
sahf
xor
clc
xchg
sub
fcmovbe
sbb
mov
adc
add
mov
dec
jecxz
push
imul
pop
pop
inc
mov
rolb
jg
xor
fisubrs
mov
pop
js
jno
and
loopne
orb
add
add
xchg
ljmp
mov
xlat
xchg
mov
sub
mov
mull
fsubrl
imul
jg
aas
rol
int3
test
dec
mov
adc
pop
cmpsl
inc
mov
mov
and
push
xor
jo
fcomps
adc
into
jae
sar
or
cli
add
fisttps
inc
iret
adc
mov
pop
xchg
inc
jb
rcrb
cmp
push
add
adc
cmpsb
dec
pop
jbe
out
push
sub
movsl
adc
dec
sbb
jbe
mov
pusha
dec
mov
aad
cmpsl
pop
loop
int3
push
adc
sahf
xor
mov
push
out
in
cmp
insb
mov
out
sbb
notl
lds
cli
jge
hlt
mov
and
xor
ret
jnp
dec
mov
inc
in
xor
or
into
xchg
pop
lret
dec
ret
pop
push
imulb
mov
insb
rcll
lret
mov
in
aad
pop
add
data16
fldt
xor
fidivrl
leave
sbb
icebp
cmpsl
inc
std
mov
in
xor
rcrl
mov
stos
push
jp
jb
lods
repnz
adc
add
push
aas
or
jge
movaps
xor
adc
jns
in
shl
xchg
loopne
insl
sub
cwtl
mov
mov
pop
mov
mov
mov
imul
pop
and
dec
sbb
in
fwait
negb
jmp
test
test
lahf
adc
xlat
adc
insb
addr16
sub
out
imul
loope
lods
aad
movsl
jb
cmp
jbe
cmc
cmpsb
movb
xor
and
jl
leave
jmp
aam
dec
jp
inc
sub
andb
mov
xlat
iret
mov
xchg
push
xchg
cmpsl
cmp
fbld
or
jbe
ret
xor
aaa
testb
or
mov
inc
loope
jae
sub
cmpsl
pop
aaa
xchg
xchg
push
mov
push
sbb
sbb
loope
cmp
outsl
sbb
inc
movsl
sarb
sbb
add
add
pop
sub
mov
out
insb
out
or
shlb
jbe
mov
lahf
loope
loop
xchg
push
xorb
into
rcl
sbb
std
std
or
push
cmp
in
or
sub
or
ret
mov
mov
popf
shrb
sbb
push
cmc
sub
cmp
mov
fadd
lds
and
mov
arpl
adc
jnp
sbb
pop
xchg
aas
sbb
mov
cmp
push
shll
lea
in
cmp
lcall
jmp
out
test
les
mov
lods
sahf
adc
add
xchg
test
xchg
xor
mov
push
incl
mov
popf
jge
sbb
pop
inc
shl
popa
xchg
cmp
clc
xlat
push
sub
cmp
and
call
cmp
xor
loopne
nop
ds
and
testl
fnstenv
mov
pop
scas
cmp
popf
inc
inc
daa
push
jecxz
jg
cmp
mov
stos
xor
dec
repz
xchg
insb
jg
mov
stc
xor
sbb
xchg
push
jmp
mov
push
outsl
popa
movsl
dec
loopne
xchg
movsb
sbb
bound
dec
sub
or
lret
cmp
stc
test
push
xchg
sbb
or
pop
and
mov
xor
rolb
inc
inc
dec
fsts
inc
pop
cmp
decl
mov
mov
test
dec
lcall
out
mov
outsb
lret
repz
cmc
scas
cmpsl
adc
mov
popf
dec
sti
pop
cs
sbbl
and
cmp
out
sbb
int3
push
enter
mov
or
inc
and
stc
xchg
mov
fsubr
xchg
inc
jne
filds
and
xor
ds
fstpt
imul
push
sbb
inc
sbb
jnp
pop
inc
call
testb
adc
sbb
sbb
and
push
cmpsb
sbbb
in
jb
ret
in
push
push
dec
sub
sarl
push
xchg
jae
outsb
or
movsb
xchg
mov
pop
push
push
mov
lcall
ucomiss
lock
add
inc
or
mov
add
loope
hlt
addr16
sub
xchg
int
and
cmp
int3
dec
add
push
cmpsb
fmull
xchg
movsl
shlb
out
pop
shll
fbld
sbb
jmp
sub
test
mov
shrb
test
mov
adc
das
inc
rol
addl
sarb
ficoml
inc
lret
xchg
mov
mov
push
shlb
sub
test
adc
enter
repnz
iret
lret
or
mov
mov
or
mov
dec
pop
cmp
stos
xchg
push
sbb
add
mov
fisubrl
jns
and
jo
imul
xor
lret
mov
jecxz
addb
shll
push
cmpsl
xor
mov
dec
int3
outsb
inc
inc
outsl
sbb
or
les
and
mov
inc
mov
rclb
fisttpll
dec
in
dec
mov
add
int3
xbegin
jne
dec
or
jb
pop
neg
nop
push
pop
cwtl
pop
lock
shl
and
jg
mov
fwait
arpl
icebp
xchg
pop
lea
adc
mov
imulb
fidivrl
push
cmp
inc
nop
jae
inc
adc
leave
dec
jecxz
adc
adc
fiaddl
mov
sbb
lahf
pop
xor
aaa
icebp
push
into
enter
jno
add
xchg
jmp
xchg
lahf
jae
push
dec
stos
sbb
mov
fistps
fwait
call
sub
and
push
cmpsl
je
or
mov
lret
lods
mov
adc
mov
loope
sbb
mov
adc
push
sbb
mov
sbb
mov
push
shrb
pop
xchg
test
imul
mov
ss
jne
ja
fdivl
sti
mov
andb
inc
jo
nop
inc
aad
or
stc
lods
scas
int3
imul
stos
or
pop
mov
push
test
sbb
inc
cmc
daa
stos
pop
in
sbb
repnz
ret
lods
mov
push
mov
leave
repz
cli
jb
scas
dec
imul
add
in
scas
cmp
sahf
outsl
xor
lea
das
xchg
pusha
mov
mov
jg
dec
lods
test
clc
push
pop
ds
and
loop
rorl
jnp
lock
pop
cmpsl
sbb
es
sbb
xchg
adc
fcomip
mov
mov
or
out
push
mov
lret
stos
mov
std
sbb
aas
mov
and
pop
shrb
clc
movsb
or
jnp
sub
jns
pop
dec
inc
subb
mov
das
pop
mov
and
pop
push
cmc
mov
stos
mov
sbb
dec
xor
sbb
mov
jne
jae
fidivs
insb
pop
clc
in
or
or
pop
or
and
das
cltd
lods
fbld
outsl
pop
aad
pop
icebp
arpl
pop
aad
in
xchg
pop
adc
sbb
sub
mov
push
pop
enter
cmp
movsb
jbe
push
pop
ss
xchg
adc
jecxz
mov
or
or
sbb
or
inc
in
mov
mov
aam
add
adc
dec
lods
test
pop
dec
int3
js
xchg
xlat
jmp
mov
outsb
xor
test
sti
pop
subl
cmp
jg
mov
rcll
mov
sbb
cmp
rolb
dec
mov
and
fcomps
mov
pop
mov
adc
pop
xor
push
xor
pushf
leave
lret
cmp
mov
out
lds
cmp
and
popa
sub
pop
lret
nop
cmpsb
and
frndint
or
jle
lcall
jl
jecxz
clc
dec
std
push
cltd
lret
inc
sbb
lods
xor
lea
mov
scas
lret
mov
mov
scas
daa
pop
loopne
fabs
imul
popa
mov
jge
mul
dec
dec
mov
push
sbb
mov
sbb
leave
ss
mov
sub
test
fwait
cs
cmp
lahf
das
jbe
sbb
lds
mov
pop
pop
dec
jo
shrl
aam
inc
push
cwtl
movsl
sbb
sahf
mov
or
xchg
in
out
ror
aaa
sarl
xchg
ret
insl
cli
in
es
mov
mov
push
and
xchg
gs
mov
pop
inc
mov
lods
dec
lea
add
sti
xor
push
add
sarb
push
push
cmp
push
mov
jns
push
div
and
cli
lock
fcom
popa
nop
outsl
sub
es
push
loop
push
in
out
jmp
push
sub
mov
push
inc
inc
in
mov
sub
stc
dec
mov
loope
cmp
mov
and
mov
and
jae
inc
lods
sbb
mov
or
pop
test
cmp
pop
loope
pushf
pop
test
fsubs
clc
mov
or
pop
rcrl
mov
pop
push
enter
push
xchg
mov
cmp
popf
jns
and
cs
adc
sub
mov
ret
call
repz
mov
out
xor
and
sarl
xor
sti
jb
gs
add
push
or
sub
adc
sub
mov
mov
lcall
add
bound
inc
adc
cmp
pop
mov
xor
pop
xlat
or
jl
mov
aaa
out
mov
push
ljmp
test
insb
stos
xchg
aaa
inc
or
mov
sub
call
ret
jns
xor
and
pop
xor
cmpsb
and
in
cltd
sub
mov
adc
cmpsb
sbb
xchg
lret
je
sarl
jnp
out
outsb
pop
push
rcrl
jmp
add
scas
leave
lock
push
dec
ss
sub
jb
xor
jecxz
inc
push
cwtl
pop
sub
ficomps
adc
lock
adc
mov
stos
outsb
sahf
push
xchg
lea
lock
rolb
xor
call
js
add
adcb
xchg
xchg
js
test
xlat
daa
mov
sahf
inc
lret
jge
adc
movsb
mov
dec
jnp
enter
int3
jmp
inc
or
rcl
push
mov
mov
int3
jb
into
call
inc
jle
movsb
mov
fistl
sbb
mov
aad
dec
sub
xchg
mov
inc
imul
mov
add
aas
punpckhbw
adc
sbb
movsl
add
xchg
pop
fisubrs
and
mov
adc
addr16
adc
lret
into
in
pop
stos
dec
lret
push
push
lods
cwtl
fsts
pop
adc
mov
loope
jecxz
out
fists
imul
aas
fsubl
or
cmc
jb
out
mov
paddsb
aas
cmp
add
sub
sub
push
data16
push
pop
ljmp
push
adc
outsl
xchg
xor
pop
push
insb
xor
ljmp
adc
adc
pusha
xchg
adc
push
jb
imul
push
imull
jl
push
iret
inc
int3
jp
mov
iret
jecxz
js
pop
das
inc
sbb
push
lea
mov
pop
sbb
mov
test
cs
out
data16
xlat
lods
pop
adc
out
sbb
leave
or
inc
les
std
cmpsl
pop
sbb
cmp
pushf
dec
or
adc
or
add
sbb
cli
inc
dec
and
sbb
call
into
inc
cmp
push
sub
push
pop
ja
mov
jb
pushl
cmp
pop
adc
xor
psubusw
pop
xchg
inc
call
out
mov
call
push
dec
adc
push
adc
xchg
shrl
mov
test
hlt
pusha
mov
mov
les
lret
outsb
call
and
cmp
pushf
imul
insb
mov
add
call
mov
adc
lcall
push
popf
cli
loope
aaa
add
aaa
add
pop
scas
insl
shrl
jnp
call
scas
mov
cwtl
lahf
out
repz
inc
or
cmp
adc
cmpsl
in
jle
xor
fadds
mov
and
or
sub
and
out
negl
outsb
repz
cs
imul
mov
dec
xchg
lods
sub
in
dec
sbb
fiaddl
mov
lret
pop
arpl
stc
jmp
cs
xlat
sbb
inc
jns
pop
adcb
sbb
or
or
add
les
pop
jbe
mov
jb
xchg
mov
cmp
fnstcw
das
outsl
lock
push
mov
notl
dec
aad
dec
dec
dec
mov
add
adc
fistl
enter
out
dec
xchg
cltd
fsubs
cs
sbb
adc
jno
add
gs
mov
sub
test
sahf
mov
mov
lcall
out
xor
push
push
cmpsl
daa
cmp
sbb
cmp
sbb
fdivl
pop
sub
xor
sub
test
dec
aam
xchg
add
or
or
pushf
sar
pop
cmp
sub
imul
daa
push
sbb
fldcw
test
loopne
movsl
aaa
mov
mov
push
ds
or
mov
add
call
and
setg
rclb
fcoms
jle
loop
mov
add
inc
xor
ss
in
xchg
xlat
jg
sbb
jb
popf
pop
push
mov
arpl
push
jbe
dec
add
cltd
mov
std
and
out
mov
movsb
xchg
pop
sti
loopne
adc
jle
dec
lahf
adc
sub
push
and
mov
loopne
repz
jae
jns
pusha
inc
icebp
stos
sub
adc
mov
rclb
and
mov
xchg
sbb
push
in
push
movb
mov
adc
in
sbb
mov
sub
jb
jo
sbbl
cmp
inc
jg
or
incl
and
es
ljmp
testl
cmp
aas
and
add
fildl
xchg
bound
incl
pop
xchg
xor
pop
in
das
and
push
out
aad
in
negl
ret
dec
jae
icebp
push
mov
inc
jg
inc
sahf
cld
add
xchg
jo
adc
stos
ret
insl
aad
push
cltd
pop
test
popl
mov
ja
add
outsb
dec
pop
push
and
outsb
push
in
jecxz
inc
jmp
inc
or
roll
cld
mov
dec
test
cmp
mov
mov
push
xor
scas
jb
jne
push
xor
imul
dec
sub
jmp
adc
test
push
scas
jg
hlt
gs
mov
xchg
adcl
xor
insl
push
or
mov
xlat
clc
and
sbb
insl
or
lcall
push
ljmp
push
or
fdivl
push
jmp
push
dec
rclb
adc
js
lock
cli
mov
xchg
insl
pop
xchg
pusha
or
outsb
xchg
dec
call
nop
cld
mov
popa
imul
mov
xchg
movsl
cmc
movsl
test
inc
hlt
rorl
iret
pop
push
outsl
popa
movsl
hlt
mov
xchg
jl
sub
or
stos
jae
stos
dec
push
fdivrs
jmp
or
mov
cld
jbe
mov
or
aaa
and
outsb
or
xchg
dec
stc
inc
and
inc
xchg
pushl
cmp
pop
subl
cmpb
mov
adc
jl
push
insb
movsl
outsl
rep
out
in
mov
roll
js
xchg
adc
into
mov
loop
pop
fcmovnb
fidivrl
sbb
cmp
jbe
fildll
cld
xchg
lahf
dec
addr16
rorl
pop
insl
idivl
and
fld
nop
das
stos
aas
std
xor
push
mul
subb
xor
js
popa
jge
pushf
sub
test
xchg
or
xchg
cmp
push
adc
mov
mov
fwait
push
jne
cmp
insl
clc
mov
mov
clc
inc
pop
fcoml
shl
fldenv
sub
pop
mov
or
mov
jp
test
sbb
dec
xchg
sbb
cmp
jb
xchg
dec
mov
dec
pop
test
mov
pop
or
pusha
push
fiaddl
jbe
shlb
aad
mov
sub
pushf
ja
stos
pushf
jle
inc
sbb
pop
sub
movsb
fldt
cmc
out
in
cs
mov
and
mov
shrb
icebp
es
mov
jge
or
pop
pop
push
inc
cli
cmp
mov
xchg
mov
and
rcrb
adc
ja
add
dec
push
adc
mov
xor
psubd
sbb
and
cmpl
lods
cltd
hlt
addl
jl
add
cmp
ret
xchg
aam
adcb
adc
test
pop
dec
iret
movsl
sbb
xor
call
daa
loope
shlb
mov
in
hlt
loope
cmp
xchg
or
xor
or
mov
xchg
lea
mov
into
or
sar
lcall
out
xchg
dec
sub
data16
pop
ss
or
outsb
jns
lahf
lret
nop
ret
rolb
sbb
mov
push
xchg
lret
pop
ds
adc
xor
ret
es
es
pop
jmp
cmp
andb
mov
xchg
shrl
or
in
movsb
push
ret
cmp
add
push
mov
push
pop
push
icebp
mov
adc
test
push
push
repnz
cmc
add
outsb
jae
pop
mov
xchg
inc
adcl
xchg
mov
int3
inc
xor
adc
fbstp
sub
hlt
mov
sti
sti
in
pop
nop
or
push
into
push
hlt
data16
inc
rolb
inc
mov
xor
xchg
in
fsub
arpl
int
mov
mov
fisubrs
xlat
sub
das
sbb
pushf
pop
inc
mov
in
clc
and
push
mov
shlb
cld
pusha
xchg
inc
pop
mov
insb
clc
test
jge
jp,pn
call
ds
xor
jg
cwtl
sub
fstl
adc
fsubrl
inc
mov
push
cvtps2pd
or
neg
or
sti
jo
jmp
dec
mov
mov
adc
push
insb
jecxz
pop
outsb
lret
negl
pop
cld
add
sbbb
push
out
addr16
pushf
shll
mov
lahf
cld
pop
pop
sub
popa
push
push
test
daa
bound
enter
and
das
aaa
outsb
push
scas
adc
aam
cmp
mov
leave
mov
orl
bound
dec
or
xor
ret
mov
fs
sbb
mov
icebp
test
cltd
mov
inc
push
or
nop
pop
lods
mov
inc
xchg
dec
into
adc
daa
ret
push
pop
fistpl
cltd
les
shrl
sub
imul
cs
les
dec
adc
pop
repz
mov
popf
repnz
fiaddl
xor
cli
add
in
rcrb
jne
cs
xor
popf
jnp
xchg
inc
loopne
sbb
fcompl
and
cmpl
xor
lahf
ret
jb
push
xor
fsubs
add
ljmp
imul
xor
dec
mov
or
xor
jecxz
flds
adc
popf
or
jmp
cld
inc
jp
pop
inc
and
xchg
scas
imul
push
cmp
mov
cmp
inc
divb
stos
in
inc
mov
insl
jl
mov
push
bound
or
icebp
xchg
inc
sbb
inc
push
mov
and
shrb
mov
jp
lahf
lods
mov
pop
fdivrl
cmc
sbb
adc
in
push
dec
sub
push
outsl
loopne
loopne
pop
stc
fcompl
mov
jbe
fisubs
cmp
push
jnp
sub
cmpsl
fnstsw
pop
movsl
xchg
pop
test
outsb
cmp
cmpsb
sub
xorb
sti
mov
push
pop
mov
adc
inc
dec
clc
sub
cld
adc
mov
or
xor
jecxz
int3
filds
je
sub
lods
or
pop
xor
mov
jns
pop
aam
out
mov
bound
push
push
and
jno
stos
push
sbb
push
adc
xor
mov
xchg
into
or
mov
shl
in
adc
xchg
stc
test
add
lret
mov
sub
inc
fucomip
fs
dec
add
jecxz
leave
push
out
mov
sub
xor
clc
xor
mov
inc
dec
push
push
das
jns
or
jge
out
mov
repnz
jae
xlat
js
mov
and
lcall
xorb
jae
mov
popa
lret
mov
mov
insl
push
mov
cmc
xchg
bnd
sbb
pop
data16
es
adc
mov
data16
lock
jge
jecxz
mov
sbb
push
inc
cmp
in
stos
xor
xchg
sub
mov
scas
loope
push
lea
pop
shrl
in
jle
xchg
stc
push
jp
adc
call
fiaddl
push
jmp
rcll
cli
push
idivl
aad
inc
cmp
inc
jno
subb
and
lcall
cli
rorl
test
js
mov
sub
shll
sbb
dec
dec
add
dec
test
sahf
jg
test
imul
pop
loope
pop
inc
rcrl
xor
jl
addr16
std
pop
jb
test
lret
pop
mov
jmp
std
jmp
mov
fldt
inc
xchg
mov
scas
out
stc
inc
scas
in
xchg
fdivs
jmp
orb
mov
sub
adc
int3
inc
or
aaa
fdivrp
les
inc
pushf
dec
out
or
mov
push
nop
outsb
test
jae
roll
inc
addr16
ret
arpl
xor
scas
or
jp
nop
jae
stc
ja
adcl
mov
pop
jg
dec
dec
aaa
fxtract
popl
pusha
pop
xor
cwtl
mov
push
out
mov
xchg
in
roll
add
lahf
in
add
sbb
outsw
xorb
scas
loopne
push
outsb
and
cwtl
dec
rcrb
lods
jecxz
gs
mov
movsl
jg
jno
or
jl
int
sbb
mov
cmp
or
mov
cmpsb
or
xacquire
pop
sbb
sbb
in
scas
inc
dec
mov
stos
lock
shll
cmp
test
jl
push
cmp
push
jmp
in
pop
arpl
into
push
mov
hlt
ljmp
insl
jg
pop
imul
jbe
xor
and
jnp
or
pusha
add
ljmp
ss
mov
mov
test
jl
push
fisttpl
daa
stos
jne
mov
fldl
dec
lahf
in
repz
data16
mov
or
das
lret
push
xchg
ret
xor
add
lahf
cwtl
xor
jmp
sub
push
jns
ja
or
pop
decb
push
pusha
pushf
out
mov
xchg
cmpsb
cld
aaa
repz
cwtl
dec
fstpt
mov
shlb
xor
mov
fstpl
or
push
hlt
in
out
cld
mov
ret
ret
cmc
or
sbb
dec
add
aas
movsb
xadd
popa
inc
stc
imul
out
add
push
and
jne
push
pop
aaa
mov
mov
loopne
sarb
sbb
enter
xchg
or
daa
mov
mov
fldcw
push
lahf
inc
loope
bound
xor
lods
movsl
xor
mov
out
sbb
test
cmp
test
cmp
andl
test
clc
out
pop
dec
and
jns
lahf
xchg
and
mov
test
sbb
cltd
leave
dec
mulb
add
xor
cmp
sti
psubsb
push
cltd
push
xor
fcompl
aad
inc
insl
pusha
or
push
push
sbb
shl
rclb
pop
pop
ja
clc
out
sub
xchg
push
lods
sbb
inc
xor
pop
jno
outsb
push
rcl
sbb
std
sbb
popfw
xor
push
popl
inc
cmp
mov
adc
xor
push
imul
lahf
mov
sahf
clc
push
mov
ja
mov
cmpsb
mov
push
ja
stc
repnz
cmp
fcompl
cmp
out
add
into
and
adc
popf
out
add
push
dec
mov
inc
cmc
das
jno
pop
lret
or
adc
shlb
pop
push
cmpsl
mov
outsl
jae
sub
movsl
ret
mov
popf
shl
xchg
mov
dec
rol
icebp
movsl
xor
jno
add
or
add
mov
cmc
mov
and
pop
mov
lcall
adc
je
mov
mov
cli
xchg
xor
ret
xor
insl
ret
sbb
outsb
or
cld
xlat
add
bound
rorl
sbb
cmp
mov
shll
xchg
sbb
inc
jns
and
sbb
aas
mov
mov
stos
and
data16
sub
sarb
rcrb
das
jae
cmpsb
adc
dec
xor
cmp
cltd
lret
leave
add
mov
sbb
mov
jns
or
inc
cld
jg
pop
mov
adc
ret
dec
cwtl
mov
cmpsb
or
pop
mov
gs
push
mov
das
or
mov
xchg
mov
cltd
mov
mov
cmpsl
hlt
lods
mov
call
aas
fsubr
cmp
mov
fsts
xchg
push
daa
mov
cmp
arpl
idiv
in
dec
repz
inc
divl
pop
mov
fmul
outsl
add
sub
stc
mov
dec
jl
addb
xchg
fidivrl
lock
pop
dec
shll
mov
push
dec
idivl
mov
and
mov
push
lea
push
or
or
sbb
jmp
ss
imul
mov
ds
int3
xchg
lock
and
cmp
fisubrl
push
mov
ret
or
jns
dec
sahf
sbb
pop
fimull
adc
loop
sub
xchg
pop
mov
dec
sti
cs
movsl
mov
outsb
dec
mov
jge
out
jl
dec
shlb
daa
jecxz
shufps
add
rcll
ja
pusha
cmp
jno
imul
jae
inc
pop
sti
dec
xchg
mov
movsl
std
mov
inc
into
loop
imul
sbb
fwait
cmp
push
lret
sub
les
mov
sub
in
bound
gs
pop
test
inc
xor
fisubrl
movsl
loopne
dec
cltd
jecxz
cld
inc
push
ficoml
xchg
loopne
aam
push
sbb
fwait
push
lds
xor
push
pop
hlt
loop
bound
adc
xchg
fldenv
fst
insb
add
mov
repnz
popf
adc
jne
sub
dec
adc
push
outsb
in
lods
stos
cmp
jae
mov
mov
fsubrl
pop
sbb
ja
jp
xchg
sbb
cld
sbb
push
movsb
cmp
jne
les
add
shl
fildl
cmpsl
mov
lret
clc
aam
int3
xor
jg
xchg
jmp
lods
loop
or
fmul
mov
push
xchg
popa
xor
sbb
test
insl
gs
out
fstl
roll
adc
imul
or
and
inc
jmp
inc
inc
push
push
pop
xor
mov
sub
cmp
push
arpl
add
push
cmpl
sbb
add
outsl
inc
mov
sarl
and
int
hlt
xor
or
in
adc
dec
outsl
les
pushf
insl
xchg
cmp
inc
ja
jo
aas
bound
lret
data16
mov
cld
lods
loope
popa
dec
inc
int
mov
or
xor
popf
aad
mov
xor
xor
dec
cli
aam
cmp
pop
divl
mov
mov
je
xor
movsb
iret
in
or
push
fbstp
jnp
xor
sbb
inc
pop
popa
xchg
faddl
in
cmpsl
cmpsl
mov
bound
call
out
lcall
sub
mov
jne
and
addl
mov
adc
dec
adc
inc
test
dec
add
cmp
sbb
add
adc
data16
test
std
dec
and
stos
sbb
jae
dec
mov
mov
fists
cmpsb
sub
jo
in
scas
rclb
or
insl
pop
dec
mov
pop
lret
xlat
mov
mov
fnstcw
mov
arpl
adc
jno
lock
in
aaa
stos
xchg
popl
dec
xor
scas
mov
pop
inc
imul
and
dec
orl
outsb
sbb
ja
jae
loop
cmp
dec
jle
lods
mov
add
or
imul
test
mulb
andb
dec
mov
in
out
lods
xchg
bound
fisttpll
icebp
or
cld
and
mov
in
es
mov
mov
data16
push
fsubs
fldt
push
sbb
shlb
and
subl
mov
push
push
sahf
sbb
rclb
mov
movsl
push
cmp
int3
mov
int
mov
pop
popf
hlt
pop
aas
mov
xchg
dec
sub
dec
or
add
sbb
inc
adc
jle
std
cmp
mov
mov
xchg
jp
shll
push
cltd
adc
mov
fadds
inc
push
mov
add
xor
out
call
xchg
push
mov
pop
adc
or
sub
fdivr
jmp
add
mov
jmp
adcl
mov
stc
push
lret
stos
jb
insl
jns
mov
stos
test
rorl
fs
push
mov
inc
xlat
mov
jae
fnstenv
test
js
in
adc
pop
pop
and
ror
inc
mulb
jb
insl
push
stc
test
inc
out
sti
mov
jl
pop
xchg
stc
push
into
and
jns
out
enter
sbb
hlt
jo
test
or
xor
aad
movsl
repz
lret
outsl
shrd
xor
sbb
popf
gs
xor
xchg
add
ja
ds
mov
add
inc
adc
fists
shlb
xchg
mov
sbb
pop
and
ret
fcoms
xchg
xor
popf
jmp
dec
adc
or
jmp
push
in
adc
mov
ss
shlb
inc
mov
mov
jle
xor
fcomip
cwtl
pop
fwait
sarl
mov
stos
push
mov
popf
pop
lret
movsl
dec
cmpsl
push
out
sahf
jmp
lds
xorb
fs
dec
jo
test
test
adc
inc
fidivs
ds
mov
nop
jp
call
inc
and
popf
fwait
mov
mov
sbb
ss
loop
scas
mov
popf
mov
andb
addr16
sbb
lret
orb
movsb
push
ror
xchg
xor
mov
stc
push
sbb
adc
cs
cmp
das
inc
adc
mov
ja
ja
inc
fisttps
adc
and
loopne
pop
add
dec
jne
jae
addr16
into
push
mov
sahf
movsl
rol
arpl
mov
mov
lret
xlat
cmp
enter
inc
test
xchg
lock
pushf
loopne
nop
xlat
cmp
mov
xor
push
cmp
iret
cmp
lea
fisubs
pop
outsl
xchg
in
pop
enter
pusha
orl
push
sbb
and
sub
and
dec
adc
add
mov
popf
addl
call
rorb
and
add
fisttpl
xor
sbb
xor
mov
mov
cli
push
mov
ret
jo,pn
popf
iret
scas
mov
cmp
mov
sbb
mov
js
jno,pt
adc
insb
cmpsl
fdivrs
ret
int3
fsubp
mov
sbb
sbb
mov
loop
sarb
push
jne
je
popa
jo
stc
or
orb
or
cmp
sahf
mov
or
lret
push
or
das
lods
jle
or
outsb
aas
jo
out
les
fsubrl
aaa
mov
mov
cmp
jbe
or
popf
cmc
mov
push
push
flds
mov
stos
adc
sbb
cmc
inc
fwait
out
sbb
sti
mov
jecxz
mov
inc
shrl
ljmp
fdivl
dec
inc
sub
mov
ja
pop
out
in
jge
cld
insl
cmp
cltd
dec
dec
repnz
or
xor
mov
das
icebp
loop
fs
push
sub
sub
xor
cwtl
lcall
add
dec
cli
xor
push
aaa
mov
or
inc
pop
imul
xor
iret
and
fisubrs
and
push
lret
fimuls
push
or
clc
adc
push
add
and
loopne
lret
js
sub
shll
adc
movsb
in
dec
dec
insl
jno
jnp
ret
popf
pop
sbb
leave
out
push
sti
fmull
js
pushf
sub
js
mov
dec
push
mov
sub
xchg
mov
sbb
pop
jecxz
outsb
jle
xchg
in
or
js
addr16
lret
push
cmp
and
jmp
push
dec
pop
repz
fmuls
mov
test
cli
sub
outsl
push
cwtl
cmc
icebp
xor
sub
pop
roll
mov
mov
enter
ret
jecxz
mov
icebp
loope
xlat
sub
mov
mov
sbb
js
fdiv
or
test
test
adc
cmp
out
popa
adc
ret
mov
xlat
loop
cmc
xchg
push
push
mov
push
jge
jbe
cmp
loope
aaa
jmp
ret
ja
lret
sbb
adc
jae
and
rcrb
mov
stos
inc
daa
pop
ss
iret
sbb
enter
add
mov
sbb
and
push
jns
and
aad
in
mov
cltd
out
pop
add
mov
push
mov
stos
bound
sbb
jb
into
out
push
aaa
xchg
jbe
nop
subl
in
sbb
pop
jae
mov
pop
or
fidivl
jp
loopne
or
sbb
dec
add
nop
aam
adc
movsb
mov
push
xor
push
iret
mov
scas
dec
hlt
cmp
xlat
inc
cmp
int3
test
insb
ret
lods
dec
xor
dec
jp
mov
lea
data16
subb
push
pop
insb
enter
icebp
out
xchg
imul
lea
pusha
rcll
incl
cmp
fisubrs
mov
or
rcpps
adc
scas
std
mov
mov
leave
sbb
std
mov
mov
flds
cld
in
rcr
xor
jne
pop
and
cmpsl
push
jge
pop
gs
xchg
fimuls
ja
lret
cs
enter
mov
add
mov
adc
outsl
xor
test
xor
push
jno
mov
scas
cmp
sub
hlt
cmpsl
loop
inc
mov
popa
pop
cwtl
fsubs
cmp
shrb
cmp
cmc
gs
test
push
out
out
cmpsb
xor
jl
cwtl
lea
mov
fnsave
xor
or
ds
js
xor
fistpll
loopne
jl
cmpsl
out
ret
dec
test
ja
ja
aaa
int3
sbb
mov
push
cmp
outsb
lds
dec
or
mov
xlat
inc
sub
xor
jp
sbb
adc
mov
ror
repz
outsb
push
push
clc
add
push
mov
cmp
pop
mov
clc
fadds
xchg
aas
push
test
ret
lods
and
add
daa
insl
stos
push
adc
sbb
mov
cmp
aam
lcall
inc
cmp
inc
dec
outsb
cs
pop
adc
add
xchg
gs
ret
push
inc
leave
subb
incl
push
adc
sets
mov
mov
add
mov
cmp
test
daa
push
mov
lods
int
and
cmpxchg
lret
mov
add
and
pop
insl
cwtl
mov
push
mov
das
int
xchg
mov
mov
push
push
mov
rorb
fstl
xchg
jp
aas
jg
aam
in
fcomip
xor
nop
das
mov
std
test
dec
jp
ja
dec
das
pop
loopne
jmp
loopne
jae
sbb
inc
gs
xlat
insl
and
insl
xor
outsb
cli
mov
imul
ds
pop
or
ss
xchg
sti
lea
mov
jnp
fildll
push
mov
mov
mov
pusha
xchg
pop
nop
mov
jg
ret
dec
icebp
xchg
aam
imul
cli
cmp
sbb
or
scas
pushf
clc
stos
int
in
subl
adc
push
repnz
outsb
mov
cmp
sbbb
test
pusha
mov
jg
test
lcall
andb
mov
xchg
test
xchg
cmc
loopne
cmc
cmpl
outsb
stc
out
or
mov
out
mov
mov
mov
call
call
stos
xchg
push
or
stc
test
stc
hlt
xor
and
leave
pop
test
push
repnz
or
add
movsl
ljmp
fnstenv
addr16
and
popa
fcompl
into
inc
enter
seta
dec
mov
push
and
jne
add
aaa
cmp
cmp
inc
add
xor
or
scas
aaa
sahf
les
repnz
or
arpl
inc
sub
jl
push
fdivs
lock
ljmp
jg
aam
bnd
pop
cs
mov
cmp
cmp
pop
jg
sarl
repnz
mov
push
jno
add
stc
out
sbb
gs
xchg
and
pop
pop
pop
or
add
nop
fsubr
into
je
negl
sti
push
mov
inc
cmc
cmp
mov
je
faddl
pop
aas
sub
xor
pop
and
fidivl
ret
std
pop
inc
lret
mov
push
dec
scas
mov
mov
lcall
leave
popf
into
js
mov
fdivs
sbbb
mov
sbb
xchg
out
inc
sti
cmp
inc
mov
in
mov
shl
les
and
dec
jmp
je
lea
or
add
mov
lods
cmp
loop
jns
mov
popf
test
jmp
fldenv
pop
and
and
cmp
iret
mov
push
jne
in
or
pop
cmp
fists
xchg
fcompl
dec
mov
nop
in
and
sahf
cmp
aad
sub
popf
lods
in
icebp
xchg
push
scas
and
into
dec
outsl
xchg
push
jne
aad
repz
jl
push
mov
add
jnp
stos
cmp
inc
xchg
std
and
cs
out
pop
xchg
cmp
xorb
call
push
pop
jmp
into
fdivrs
imul
xchg
inc
aaa
xchg
inc
and
imul
cltd
ret
insb
or
add
sbb
rorl
xchg
mov
loopne
es
push
fcom
out
ret
adc
fstl
mov
mov
sub
cld
and
icebp
ror
in
mov
andb
insl
inc
outsl
lcall
pop
fdivs
out
inc
mov
or
adc
rolb
mov
pop
or
mov
andb
mov
test
aad
cli
lret
mov
push
pop
and
inc
addl
adc
lret
ljmp
imull
or
pop
push
jb
popf
push
dec
xchg
nop
popa
decl
test
mov
and
and
mov
das
out
mov
pop
fildl
sbb
movsb
add
lahf
orb
and
mov
jb
pop
stos
sbb
in
ficoms
je
lock
out
sti
lret
mov
pop
and
mov
icebp
push
or
add
div
mov
outsb
repz
fadd
and
dec
sbb
jns
inc
xchg
stos
mov
out
mov
call
jns
sbb
jo
push
jns
stc
lods
dec
roll
xchg
dec
aaa
dec
movsb
mov
js
arpl
pop
insb
mov
add
push
cmp
push
push
jno
pop
pusha
pop
push
xchg
jno
push
mov
mov
sub
or
ja
movsl
movl
out
sahf
xor
daa
jno
sarl
xor
stos
fstps
out
mov
sbb
cmc
scas
imul
clc
addl
hlt
push
js
pop
mov
mov
push
mov
xor
push
mov
js
adc
mov
lcall
and
mov
push
jbe
inc
out
xor
push
pop
bound
bsr
add
or
xor
ficoml
std
jbe
bound
rclb
cld
test
pusha
sbb
sbb
jmp
cwtl
rolb
mov
add
gs
in
nop
out
shrl
out
je
rcrb
pop
adc
mov
outsb
mov
call
mov
and
add
xchg
and
aas
leave
pop
loopne
pop
lret
fidivl
pop
decb
test
mov
outsb
xchg
sub
pop
xor
pop
cs
xchg
push
inc
inc
data16
scas
cltd
xchg
test
dec
push
mov
cld
inc
push
push
pop
xchg
mov
int
mov
iret
inc
andb
aaa
inc
fisttpl
push
xor
lret
adc
leave
push
mov
push
lret
stc
faddl
enter
or
les
aaa
icebp
dec
sub
lret
push
ljmp
push
frstor
out
repnz
push
xorb
sub
cmpsb
mov
mov
aam
outsb
jg
and
mov
cmp
out
cmpsl
mov
shll
sahf
adc
dec
scas
jb
xchg
rep
cmpsb
idivb
dec
in
fisubrs
les
xchg
xchg
mov
js
in
jne
repnz
stos
adc
sub
lods
sbb
es
mov
scas
cmp
xchg
sub
ja
inc
ret
xchg
int
sub
cmpsb
sbb
xchg
mov
inc
clc
into
and
mov
dec
sub
jg
popa
mov
dec
ss
or
pop
push
mov
andb
mov
push
dec
sbb
push
xchg
push
test
cmc
cmpsl
sbb
call
inc
mov
or
push
sbb
or
inc
and
subb
data16
in
mov
jae
addr16
dec
sbb
mov
jo
dec
sub
jno
add
push
hlt
add
add
inc
pop
xchg
daa
fcmovnu
or
mov
cmp
lods
je
fiaddl
shr
adc
popf
pop
or
pop
cmp
gs
xchg
add
aad
mov
and
xchg
int
and
icebp
jno
sbbb
call
mov
add
lret
cmpsl
lret
pop
repz
xchg
push
adc
mov
les
mov
adc
test
mov
mov
clc
dec
enter
inc
ret
push
mov
in
xchg
aas
mov
jb
inc
cli
js
aam
popa
popf
adc
sub
or
or
bound
sub
push
jecxz
cld
gs
inc
xchg
and
sub
or
push
movsl
fcoml
scas
push
inc
mov
stos
dec
xchg
or
or
mov
cmpxchg
sbb
clc
xchg
push
iret
mov
cwtl
cmp
or
lods
lret
xchg
dec
or
push
jbe
rcrb
sub
mov
dec
clc
jae
ret
sbb
sbb
out
pop
mov
xor
pop
dec
mov
xor
jmp
leave
push
lret
aas
out
or
fucomip
inc
popa
sbb
xchg
push
and
icebp
xor
call
mov
and
test
ss
mov
sub
mov
lcall
push
cmpsl
mov
stos
or
jge
js
mov
std
add
setp
cmp
call
adc
ret
and
imulb
jbe
mov
incb
sub
mov
aad
test
js
lret
scas
push
repz
daa
lds
fsubrs
pushf
pop
movb
imul
xor
jns
cld
fists
jmp
adc
call
in
add
mov
jp
inc
add
jle
aas
jno
test
cli
xchg
orl
stos
jno
lods
ljmp
jle
rcrb
fdivl
aaa
test
ror
jmp
mov
cmp
sub
es
push
pop
popa
loopne
xor
shrb
cmpsl
stos
xchg
add
pushf
std
xchg
jns
outsl
popf
fisubl
jecxz
sub
mov
jecxz
mov
or
xchg
xchg
push
cmp
push
fisubrl
stos
xor
cmp
and
mov
jg
xchg
rcrl
adc
outsb
fadds
stos
lea
push
insl
xor
dec
and
fs
sahf
adc
inc
pushf
data16
test
movsl
test
add
xor
add
clc
ret
shll
ds
mov
ds
lods
rol
jp
mov
push
movntps
movb
pop
sub
repnz
std
in
and
outsb
int3
push
xchg
ror
out
mov
ss
inc
push
aam
sub
test
push
mov
cmp
outsl
push
fstpt
dec
mov
lret
mov
push
sub
das
cwtl
mov
pushf
dec
divl
sbb
xor
sub
out
inc
shll
stc
add
scas
ss
call
fiaddl
pop
in
push
movsl
inc
das
dec
xchg
adcl
jae
sahf
xchg
push
mov
js
out
jnp
adc
movsb
fisubrl
fistpll
jno
pop
ret
inc
cmp
xor
pushf
push
outsb
lret
loop
xor
decl
mov
inc
je
int3
clc
lds
shld
xor
mov
cmp
mov
pop
das
pop
dec
cmp
aas
insl
push
add
xchg
fimull
push
ret
push
xor
insl
pop
fistpl
cmpsb
cld
fists
lahf
add
inc
sub
popf
lret
xchg
jp
jp
add
mov
push
cltd
mov
rolb
sbb
push
shll
scas
or
fsubs
lret
dec
cmp
sub
ljmp
andl
jle
adcl
fmulp
xlat
clc
cmp
rcrb
ds
outsl
fucom
mov
mov
aam
cmp
cltd
and
mov
xchg
and
mov
cmp
jle
stos
jo
xor
or
cli
pop
xor
xchg
xor
pop
push
in
in
and
mov
fldt
outsb
sti
ja
inc
pop
les
sbb
daa
movsb
adc
jge
cmc
out
push
orl
stos
or
outsl
roll
popa
test
sbbl
inc
xor
sbb
mov
add
js
mov
stc
cld
sbb
inc
cmp
lea
scas
push
sbb
mov
fidivrs
xor
mov
fsub
inc
sarb
lcall
insb
loop
push
mov
dec
das
mov
push
sbb
dec
enter
repnz
lahf
nop
imul
lret
pop
fnstsw
xchg
xchg
jge
dec
pushf
mov
jb
mov
mov
dec
mov
add
test
in
fdivp
movsl
cs
stc
sbb
iret
mov
test
lea
xchg
test
or
mov
repz
cmp
sub
outsb
adc
shl
pop
xchg
sbb
xchg
int3
iret
out
mov
jg
add
adc
xchg
std
xor
in
mov
mov
pop
jmp
movsb
negb
fldenv
jno
in
mov
nop
jl
in
push
push
cmc
mov
pop
and
jae
scas
insb
loope
mov
sti
iret
or
sub
ja
mov
lea
jecxz
dec
cmp
xchg
sub
movsl
cmc
scas
add
xchg
xchg
push
xchg
dec
mov
cmpsb
rorl
xor
jb
pop
imul
adc
enter
mulb
cmove
iret
shlb
test
sbbb
pop
or
dec
mov
loope
fs
inc
dec
faddp
outsl
and
data16
fcmovnb
mov
aam
fildll
xchg
cmpb
arpl
shrl
cltd
test
movsl
in
or
add
or
cmp
xor
ja
ror
dec
mov
ret
daa
rcrb
xchg
lret
xor
cmp
rorl
in
inc
push
jg
mov
dec
mov
mov
loopne
dec
fadds
xor
and
insb
sub
sbb
and
cmpsl
movsb
addb
sahf
add
dec
ja
add
out
xor
int3
inc
mul
mov
int
fcmovnb
and
pop
cmc
scas
cld
enter
xchg
inc
daa
rcll
out
jnp
push
push
ret
testb
xlat
movsb
cli
faddl
mov
mov
sub
adc
cmp
rorb
rcll
xor
dec
lds
jecxz
addb
jo
jne
inc
popa
or
push
mov
insl
cmpsl
dec
xchg
popf
sbb
out
pop
cmp
xchg
adc
loope
push
fadds
shrl
es
or
decl
lret
mov
ror
jae
mov
jp
mov
stos
les
fcmovb
cmpsl
cmpsb
and
imul
pop
loope
jl
sub
loop
mov
mov
inc
push
inc
jae
jl
in
or
popa
inc
jg
imul
scas
mov
sub
loopne
mov
sub
jmp
mov
ljmp
add
pop
pop
pop
xorb
leave
mov
push
cmpsl
cmc
xor
ss
test
push
cs
jnp
or
out
lcall
shlb
sub
je
adc
jbe
sub
sub
mov
rclb
push
cmp
and
push
mov
rclb
test
out
push
hlt
jae
fcompl
jp
mov
test
cmp
filds
js
dec
sub
data16
out
pop
pop
xor
mov
inc
sbb
push
leave
add
inc
fldt
in
or
or
sar
fmuls
jg
xchg
push
ficomps
cmp
stc
xor
les
mov
push
mov
xlat
je
pop
insl
xor
iret
jb
movb
push
xchg
scas
test
mov
cld
push
cmp
pop
push
aas
pop
cmpsl
mov
xchg
out
lock
das
dec
xchg
stos
lea
pop
std
test
test
test
cmp
xor
or
daa
or
lret
stos
cli
xor
adc
popl
out
insl
xchg
cmp
push
cli
out
and
fmuls
mov
daa
or
outsb
and
push
sbb
stos
data16
sbb
push
pusha
sub
fs
sbb
fbstp
pop
pusha
xchg
dec
cmp
adc
lods
fwait
xchg
sub
lret
das
int
sub
insb
lods
movsb
data16
sub
in
mov
or
out
insb
enter
jnp
mov
adc
pop
int
dec
adc
aam
leave
testl
or
or
fsubs
mov
jnp,pt
cmpsb
testb
add
jo
lock
lock
fbstp
daa
cmp
xchg
lcall
rolb
and
jnp
pop
fcoml
test
test
mov
mull
aaa
pop
ficoml
in
loop
lea
cmp
mov
cmpsb
rorb
xor
push
and
orl
in
cmpsb
bound
sbbb
cmpsb
in
rolb
popa
aad
gs
dec
add
rcll
pop
fcomp
icebp
test
aam
into
stos
add
mov
lock
mov
jge
cmp
inc
test
sub
mov
pop
mov
dec
xchg
movsl
xchg
sahf
out
mov
sub
sbb
xchg
xchg
sub
pop
xchg
into
ss
ret
lret
mov
rcr
rcll
push
pop
adc
daa
fidivrl
cli
or
pop
or
mov
mov
mov
mov
jne
xchg
mov
call
sahf
loop
in
xchg
out
enter
add
push
jle
add
dec
aam
dec
das
and
and
sbb
pop
sahf
push
jle
clc
pop
jns
and
test
push
xor
sub
ds
inc
cli
push
inc
dec
push
dec
xor
mov
out
xor
leave
jecxz
movsb
sahf
push
rcl
fisttps
subb
lea
mov
loop
sub
xchg
jo,pn
repnz
outsb
or
ja
xchg
jg
out
xorl
rolb
mov
cmp
jae
fldpi
and
fisubs
fprem1
and
inc
pop
adc
cmp
jnp
or
int3
or
popf
out
push
xor
push
mov
xor
xlat
push
das
jns
push
and
xchg
cmpsl
mov
cs
jbe
jnp
mov
in
adc
jge
push
pop
cmp
mov
imul
les
xor
stc
dec
jns
xlat
hlt
pop
mov
arpl
and
xor
ljmp
fsts
loopne
mov
stc
mov
inc
pushf
shl
mov
cwtl
fisubl
add
iret
rclb
jnp
out
push
cwtl
lods
ss
mov
incl
mov
loopne
jg
xchg
icebp
fcmovu
inc
imul
mov
movsb
mov
scas
divb
nop
jp
mov
imul
cwtl
cmpsl
inc
stos
and
jnp
lock
push
jl
sub
and
xor
xchg
push
jl
mov
in
imul
xor
subb
pop
or
mov
pop
sub
leave
dec
xor
xchg
loope
jbe
mov
adc
loope
or
adc
jmp
out
dec
pop
push
sub
ss
push
jmp
iret
pop
xor
dec
xchg
push
negl
sbb
iret
stos
bnd
jle
and
jns
and
int3
and
adc
push
adc
sub
push
sarl
sub
imul
cmpxchg
cmp
add
ret
imul
cmp
into
lods
pusha
cmp
mov
jo,pt
fisubl
popf
cld
scas
xchg
jo
mov
test
xchg
mov
cmp
xchg
mov
shl
jge
and
lret
nop
das
fcom
outsb
push
test
mov
stc
addr16
cmp
outsb
mov
into
es
mov
mov
adc
movsl
bound
sti
ds
mov
ret
sbb
cmp
pop
mov
mov
or
push
pop
shrl
lret
btr
cmp
nop
mov
xor
mov
pop
lea
cmp
in
aad
add
xchg
sub
xchg
hlt
or
jnp
loop
xchg
push
xchg
notl
sub
inc
push
cmp
fisubrs
mov
pop
inc
test
out
xchg
add
imul
fdiv
push
mov
xlat
and
je
lock
cmpsb
das
dec
sbb
fdivr
loope
sub
dec
jnp
add
jmp
jle
je,pn
jmp
xlat
inc
lods
jp
jl
cmp
cmp
cmp
jns
mov
add
data16
ds
and
mov
jle
adc
push
jns,pt
mov
mov
mov
pop
inc
mov
inc
into
lahf
xor
inc
dec
addl
inc
aas
push
inc
imul
popa
jmp
test
pop
sarb
shrl
pop
daa
sub
nop
fdivrl
adc
cs
testb
sub
shll
add
iret
pushl
mulb
in
out
shlb
pop
jecxz
das
cmpsb
pop
sti
pop
xor
idiv
mov
in
lret
repnz
lahf
je
dec
dec
movsl
xor
cmp
jg
roll
pop
test
cs
cmovnp
sub
movsb
cmp
sbb
add
xchg
aas
sbbl
ljmp
xor
mov
jge
jg
sbb
divl
push
sub
mov
jle
pop
jne
jecxz
in
mov
scas
xor
mov
adc
gs
jmp
dec
in
cld
pop
ja
lret
jne
xchg
push
jae
mov
mov
test
fiadds
mov
out
xchg
pop
push
lret
scas
fisubrl
mov
outsb
pop
inc
jp
push
sbb
loop
sub
lret
jl
mov
dec
lcall
icebp
popa
xchg
popa
dec
mov
mov
cmc
xchg
mov
maskmovq
or
sub
xchg
xchg
ret
jecxz
add
dec
bound
lahf
jae
es
shlb
push
dec
mov
jmp
push
jle
or
pop
test
clc
fidivs
xor
jns
iret
jecxz
sbb
push
mov
jb
movl
pop
jmp
jge
out
cmp
outsl
test
insb
push
dec
mov
sbb
adc
mov
cmc
adc
inc
loope
loope
push
jg
mov
pop
icebp
cmp
daa
push
pop
adc
pop
loopne
nop
cmp
insl
sub
mov
mov
popf
sahf
pop
out
in
arpl
rcl
movsl
aas
out
fwait
sahf
rcrb
aad
cmp
cwtl
lret
mov
call
rclb
rcrb
cltd
mov
movsb
mov
push
sarb
sub
mov
xchg
xor
sbb
push
fs
jbe
add
int3
mov
roll
fisubs
mov
sub
mov
pop
loop
cmp
out
xchg
push
rcl
cmpb
dec
sub
jmp
rclb
inc
xchg
in
xor
lds
subl
xor
mov
icebp
bound
jno
ds
jbe
sub
push
jnp
out
out
arpl
cmp
std
add
scas
mov
stos
push
jo
pop
cmpsl
outsl
jg
and
xor
test
roll
pop
pushf
xorw
aad
clc
push
call
mov
xor
jae
movsb
loop
mov
pop
cmp
sbb
inc
xor
jno
cmpsl
dec
popa
mov
sub
imul
iret
or
xchg
rorb
daa
jmp
subb
stos
sbb
aas
lcall
test
cmp
jns
cmp
aaa
adc
cs
mov
push
pop
fs
adcb
fwait
sub
push
and
push
xor
mov
cmpsl
mov
inc
aam
lods
sbb
adc
popa
cli
push
xor
adc
movsb
imul
jno
pop
push
movsb
xor
cmpsl
lcall
push
or
cmp
and
pusha
add
mov
or
jl
stc
setno
cmp
stos
dec
fcmovb
dec
sbbb
mov
inc
push
or
in
cmp
clc
lcall
je
mov
stc
xchg
push
popa
sub
or
shrb
shrl
pop
test
pop
mov
lret
sbb
out
push
ret
xchg
cmp
icebp
jmp
rolb
loope
sbb
lea
push
lret
xchg
push
pop
pop
jb
repnz
repz
mov
sbbb
push
jmp
push
sub
test
sub
sub
xchg
sarb
ljmp
add
pop
leave
mov
ja
movsl
imul
in
aam
mov
rolb
imul
jl
pop
cmp
jge
insb
addl
cmc
push
lds
stc
out
push
push
or
lock
add
pop
lahf
cmc
mov
cmp
adc
or
in
sub
call
shrl
enter
jnp
and
mov
lea
gs
movsb
inc
inc
mov
popa
das
mov
outsb
imull
jno
cli
inc
repz
les
mov
sahf
call
icebp
in
aad
pop
mov
and
in
bound
test
xchg
adc
das
js
std
sub
sbb
cmp
mov
pop
xor
pop
jne
jnp
inc
cli
push
add
mov
dec
jb
and
push
xchg
jae
and
rcrl
imul
or
inc
je
or
or
insb
jae
out
jns
fucomi
insl
sub
leave
sub
inc
cmp
std
pop
mov
and
data16
das
fnsave
sahf
push
addr16
aam
mov
push
arpl
leave
and
adc
insb
testl
mov
stos
daa
mov
xchg
pop
push
ljmp
push
adc
xchg
in
je
imul
jle
cmp
ret
std
cld
xorl
add
mov
scas
cmpsb
adc
test
cmp
ficoms
loope
sub
rorb
xchg
pop
mov
adc
cmp
cltd
fdivrs
and
xchg
add
inc
mov
in
jb
lcall
adcb
mov
js
adc
aad
int
inc
lea
out
addl
sub
or
adc
cmc
inc
jmp
jge
cmpsb
jnp
sub
rorl
mov
and
out
and
mov
sbb
outsl
pusha
mov
mov
add
scas
test
add
es
jecxz
pop
outsl
xchg
stc
out
inc
data16
ret
dec
mov
test
std
adc
iret
into
out
icebp
je
jne
push
loop
xor
out
les
addr16
std
mov
and
adc
dec
daa
push
cmpsb
cmp
pop
or
and
and
outsb
push
xchg
sbb
test
adc
fwait
jecxz
lds
sbb
sub
xchg
cmp
mov
fldcw
xchg
adcb
pop
out
sub
sbb
and
inc
shrl
loop
aad
lahf
pop
jecxz
loope
inc
mov
in
lock
sub
loop
sub
add
dec
mov
sbb
pop
sbb
sub
push
test
mov
cwtl
subl
xor
out
int3
lahf
hlt
inc
fdivl
sbb
push
imul
cmpsb
lret
and
pop
mov
mov
test
adc
xchg
cmp
mov
sarb
lahf
adc
mov
orl
out
cmpsl
inc
les
pop
loopne
je
lret
in
test
shll
add
fadds
cmp
popa
ja
sbb
xchg
mov
inc
scas
push
and
dec
inc
in
xchg
fildl
test
subb
lds
xchg
pop
adc
pop
mov
sub
inc
sbb
rorl
pop
fmuls
cwtl
pop
add
pop
mov
sbbb
and
mov
sub
mov
out
fcompl
jmp
fisttpll
xchg
data16
cmpb
push
nop
add
push
jae
cmp
xchg
data16
xchg
roll
add
push
add
push
mov
cmp
sub
hlt
xchg
scas
popa
cmc
mov
mov
negb
mov
mov
dec
iret
hlt
cmpsb
das
pop
push
mov
shr
mov
pusha
push
or
inc
les
sti
xor
mull
push
xchg
dec
inc
sbb
inc
addr16
stc
xor
pop
mov
fcoms
jbe
mov
xchg
mul
mov
ret
icebp
xor
cmp
sti
dec
fmulp
mov
xor
cmp
push
push
sbb
jb
std
adcb
mov
add
inc
fidivs
sbb
xchg
aaa
imulb
mov
dec
ret
imul
repz
dec
sbb
mov
push
sub
aas
jne
push
jecxz
lods
push
mov
add
in
sahf
repnz
lea
gs
insb
sbb
insl
call
mov
shrb
loope
test
fwait
loop
cwtl
std
lret
leave
pop
inc
xor
sbb
pop
adc
jnp
xor
daa
inc
sbb
jbe
xchg
aaa
fsts
dec
xchg
sbb
jnp
pushaw
call
mov
xchg
push
cmp
lock
sarb
in
mov
daa
rolb
and
je
cmc
jo
icebp
divb
xchg
push
mov
jecxz
cwtl
lret
xchg
ljmp
ja
add
add
in
push
jno
jbe
xor
aaa
sbb
arpl
inc
mov
adcl
mov
inc
or
cmp
mov
mov
mov
orl
cs
adc
shlb
ds
ret
ja
hlt
iret
push
inc
cmp
push
sbb
movsl
cltd
aad
mov
jo
mov
mov
loope
cli
sub
and
popf
out
and
add
xor
push
or
xor
lock
mov
cmpb
es
rorb
inc
ljmp
data16
sub
cs
enter
mov
out
dec
fwait
roll
insb
scas
call
pop
xchg
or
loop
dec
imul
cmp
ret
cltd
jbe
cmp
gs
adc
mov
repnz
mov
lds
or
cmp
xchg
jl
inc
cmp
xchg
outsl
gs
dec
jp
mov
scas
aad
bound
aas
mov
inc
pop
popa
ret
gs
adc
aas
and
adc
ret
lcall
mov
push
xchg
nop
mov
xor
rcrb
mov
cmpsb
jnp
mov
or
cld
add
jae
jmp
pushf
stc
ljmp
sub
push
cmp
outsb
je
sbb
add
std
add
xchg
addr16
movsb
xor
cmp
imulb
pop
ret
sti
lcall
jmp
cmp
cs
add
dec
pushf
xor
bndstx
fsts
mov
rcll
cmpsb
push
subb
dec
inc
sti
ljmp
sub
orb
popa
cwtl
add
cmc
jae
sbb
xchg
stos
or
pop
sbb
mov
in
xor
add
and
sbb
cmp
pusha
insb
lret
push
leave
aaa
dec
stc
add
movsl
js
adc
mov
imul
lods
into
pop
xchg
imul
pop
loop
outsl
jb
call
sub
subb
dec
pushf
sub
or
shlb
cli
rcrb
setge
loop
popf
and
sbb
xchg
pop
xor
loop
mov
push
jg
rorb
or
jae
into
inc
insb
pop
js
dec
xlat
cmp
cli
add
push
outsl
pop
jno
cmp
cli
inc
xchg
sub
add
cmp
push
dec
add
inc
jp
add
push
mov
push
jb
aam
jp
aad
out
test
test
add
adc
je
sbb
cmpsb
xor
lea
push
jecxz
or
xchg
mov
pop
fsubs
rcrb
xchg
xchg
leave
popf
cmp
aas
leave
sub
add
insl
je
cli
sub
adcb
imul
mov
or
inc
xorb
js
sti
or
dec
dec
pop
xor
nop
loopne
enter
popf
test
rcrb
jg
inc
jl
xchg
cmc
inc
jb
mov
loopne
dec
or
mov
bound
inc
jle
mov
adc
inc
aaa
xchg
sub
cld
shll
jecxz
or
inc
popf
pusha
cmp
out
adc
add
stos
cmp
xlat
sbb
push
scas
jo
sbb
xchg
mov
pop
adc
sti
dec
stos
cwtl
data16
or
mov
jmp
iret
mov
rolb
xchg
pop
popf
cmp
movsl
jle
inc
sub
cld
lock
fsubs
popa
fimull
pop
mov
testl
mov
fs
testl
inc
dec
int3
inc
imul
das
mov
incl
repnz
test
jns
adc
inc
dec
pop
cmp
into
dec
add
ret
rcrb
stos
sub
nop
stos
or
fdiv
fstpl
xchg
rcrb
popf
call
cmp
cltd
sarb
xor
lcall
pop
in
cmc
jae
mov
push
mov
into
outsl
mov
mov
cmp
enter
add
pop
mov
jbe
cmp
enter
add
xor
xchg
daa
push
aas
cli
push
aaa
xor
sub
xor
pop
loope
xlat
xor
mov
xchg
das
rorb
inc
testl
aas
mov
scas
push
pop
hlt
loopne
leave
jp
fwait
sub
int
fmul
lcall
orb
das
jae
int
push
sub
iret
and
xor
xchg
xor
add
jle
in
movsb
adc
fdivs
adc
and
jge
testl
inc
loopne
cmp
sahf
fsubl
fwait
leave
push
mov
dec
mov
jmp
xchg
mov
dec
icebp
aam
mov
cwtl
xor
cld
xor
sbb
inc
pusha
ljmp
fwait
test
mov
leave
jecxz
or
xor
nop
popa
and
cs
les
push
mov
in
sub
scas
push
out
mov
xor
aad
dec
loop
leave
jo
sub
mov
cmp
out
fimull
mov
hlt
gs
add
enter
out
shr
inc
imul
out
xchg
mov
sub
cmp
dec
test
xor
push
cmp
push
in
or
repnz
out
and
mov
lock
sub
sbb
push
pop
mov
jecxz
fnsave
jge
push
rcl
orb
jae
jmp
lock
xor
shrb
out
rol
xchg
dec
mov
sub
jmp
jo
cld
jg
sbb
xchg
std
lds
aam
aas
push
push
adc
mov
adc
mov
decl
ret
fistps
insb
add
roll
sub
dec
loopne
shl
in
sarb
in
out
outsl
aad
andb
mov
test
outsl
sbb
mov
or
lret
sbb
cmc
into
rorb
push
push
out
xchg
push
inc
mov
dec
push
inc
mov
xchg
int
roll
xor
jp
out
sub
dec
xchg
inc
mov
je
test
inc
push
icebp
cmp
test
mov
adc
add
jno
mov
je
adc
pop
shl
xchg
aaa
adc
pop
shll
aam
mov
bnd
mov
repnz
inc
cmp
inc
fstps
jecxz
popf
sarl
or
cs
or
add
aas
inc
ljmp
jge
ror
out
sbb
mov
xlat
mull
mov
aas
inc
stos
pop
sub
loope
adc
lahf
sub
sbb
push
outsl
jl
shll
cmc
fisubrs
add
orl
imul
addr16
push
neg
ss
dec
mov
loopne
test
xor
out
add
sbb
add
inc
ret
inc
push
push
pop
adc
pushf
sbb
or
inc
lods
enter
nop
mov
adc
arpl
add
and
push
scas
jle
or
push
xchg
lret
mov
or
pop
stc
or
loopne
daa
add
shl
lret
mov
ficompl
shrb
xor
mov
adc
xor
or
adc
dec
adc
andl
into
fwait
cltd
mov
xor
mov
pop
gs
cli
jb
scas
jae
push
sbb
arpl
roll
cmp
mov
pop
out
sbb
xchg
push
adc
nop
das
fimuls
das
push
push
cmp
mov
push
lret
mov
pop
sahf
shl
sbb
sbb
icebp
lgs
mov
jne
cwtl
pop
sbb
mov
pop
gs
in
mov
mov
or
cs
sbb
jmp
or
jbe
and
mov
cmp
nop
xchg
push
add
imul
xor
loope
xchg
aas
imul
pop
adc
xchg
lcall
fiaddl
shr
lock
int3
dec
push
mov
mov
rorb
jb
inc
dec
shrl
std
int
cmpsb
add
mov
movsb
push
mov
sqrtps
outsb
dec
mov
xchg
dec
pop
sub
es
iret
ja
rorl
ss
pop
mov
in
mov
push
push
aaa
lcall
push
addl
imul
xchg
movb
insl
pop
inc
lods
cmp
and
jbe
xchg
sub
aaa
lret
xlat
in
xchg
or
adc
fnstenv
daa
sub
fs
jl
sbb
sbb
adc
sbb
mov
icebp
inc
xchg
xchg
pop
rorl
pop
xchg
adc
repz
jae
pop
add
lock
mov
test
shrl
sub
iret
cld
jecxz
pop
cmp
pop
and
lods
mov
aaa
push
inc
ljmp
out
push
pop
pusha
mov
and
shll
cmp
cmp
add
mov
mov
dec
ret
mov
mov
leave
lods
repz
cmc
mov
jmp
mov
pop
lea
xor
xor
std
lds
adc
pop
mov
and
test
pop
jp
xchg
push
jmp
fwait
bound
pop
out
and
lret
idivb
mov
les
aam
xchg
fistl
inc
outsl
lret
mov
imul
popa
out
imul
mov
out
jp,pt
add
mov
push
insl
mov
dec
ret
lcall
xorl
xchg
push
pop
cmpsb
xor
je
mov
sub
and
inc
test
aam
leave
xchg
lods
movsl
inc
cmpb
xchg
outsl
xchg
adc
shrb
add
hlt
and
clc
or
push
inc
fistl
insl
push
fs
int3
dec
cmp
ja
and
mov
and
aas
mov
add
popf
inc
orl
sub
mov
nopl
mov
sbb
jae
data16
push
xchg
idiv
mov
gs
sub
or
pop
mov
sub
frndint
shrb
push
add
jae
and
cmpsl
scas
aam
les
stos
pushf
in
or
in
cmp
stos
pop
aaa
cmp
pop
dec
pop
mov
inc
push
ds
inc
fidivs
push
mov
jo
mov
add
shll
xchg
lret
int
lret
and
or
sahf
stos
lret
jmp
in
push
and
inc
aaa
jo
sub
ds
insb
fsubrs
jnp
aad
popf
stos
fists
fidivrl
in
test
cs
push
push
adc
xchg
xchg
sub
cmpsl
jae
jge
std
push
and
data16
icebp
mov
lret
add
xor
push
loop
mov
lods
out
or
pop
mov
dec
add
xor
push
add
scas
arpl
mov
lahf
xchg
jp
sub
daa
xchg
xor
loop
mov
insl
test
xchg
loope
xor
sbb
enter
push
test
das
repz
xor
jae
cmpsl
enter
and
jmp
sub
adc
adc
adc
es
sub
cmp
pop
pop
test
cmp
pop
insb
mul
jle
jno
mov
mov
mov
add
lock
loop
xchg
shl
mov
mov
adc
mov
repz
nop
dec
cmp
sti
xor
rolb
lods
out
jge
scas
xchg
mov
pop
mov
leave
fs
repz
data16
mov
das
call
mov
inc
dec
xorl
push
jne
decl
mov
mov
add
and
outsb
mov
ret
dec
rorl
out
add
dec
testb
jno
and
push
xorl
dec
loopne
jnp
mov
repz
ret
cwtl
orl
pop
data16
nop
cmp
mov
int
mov
pop
mov
pop
ret
pusha
icebp
add
clc
scas
sbb
ss
in
sbb
mov
cmp
or
pop
and
rorb
push
repz
or
loopne
or
arpl
pop
jo
wrmsr
push
cmp
sub
mov
mov
sub
testb
lock
mov
insb
sbb
adc
push
add
andb
bswap
aas
pop
xlat
ret
adc
xor
sbb
loope
repz
inc
xchg
fistpll
mov
cmp
ja
bound
arpl
mov
pop
sarb
pop
jg
xor
xor
loop
es
aam
shll
xor
mov
jp
fst
enter
test
or
fwait
xor
xchg
pop
or
hlt
jg
and
out
dec
cwtl
mov
lock
jae
mov
ljmp
repz
push
xor
xchg
mov
jae
mov
xor
js
fwait
cmp
aas
testb
xchg
jnp
xchg
push
loope
and
cwtl
test
sub
cli
or
popf
les
pop
pushf
out
and
or
push
movb
and
jecxz
daa
arpl
lret
jb
push
les
lret
cwtl
jmp
inc
sub
je
add
lods
xor
call
pusha
test
loopne
nop
jns
imul
xor
dec
dec
imul
int
std
add
dec
mov
push
cmpsb
sbb
xor
std
int
mov
lret
out
in
ss
mov
cmp
xor
add
adc
push
repnz
mov
loopne
push
rorl
out
mov
leave
mov
xchg
stc
push
push
jae
sub
inc
lcall
fstpt
mov
xchg
dec
sub
xchg
std
nop
sub
dec
ja
testb
cmp
out
in
or
xor
push
cmpsb
cmp
mov
cmc
xchg
pop
push
cmp
push
inc
insb
jbe
cmpb
shrb
xor
cli
push
dec
test
lahf
cmp
or
ret
int
pop
xchg
dec
adc
popa
fimull
lea
out
nop
daa
test
shl
mov
or
xor
lods
xor
sub
ret
sahf
xor
sbb
mov
daa
xchg
shrl
pop
xchg
cmc
mov
in
call
adc
int
stos
or
xchg
outsb
fadds
test
imul
dec
outsl
test
imul
jno
scas
xchg
push
bound
mov
cmp
jne
pushf
lds
adc
outsl
xchg
fiaddl
push
test
sub
jle
fdivl
xchg
dec
push
aad
sbbb
lea
add
mov
sub
push
jecxz
addr16
jnp
cmp
mov
fldl
jecxz
stos
push
fadd
test
jne
xchg
test
mov
mov
cwtl
lret
jno
cmpsl
iret
mov
inc
inc
shlb
loopne
test
mov
sub
sub
mov
into
popf
outsl
mov
and
sub
dec
jne
push
mov
pop
lret
js
inc
je
rcrl
push
or
or
add
dec
cld
into
pop
dec
inc
out
push
mov
in
and
sbb
test
icebp
jns
lock
imul
repnz
filds
sbb
inc
sbb
dec
in
or
jbe
pop
nop
in
and
adc
lds
stc
leave
add
xchg
sti
dec
xchg
sub
in
mov
inc
test
xchg
adc
xlat
sub
mov
jmp
or
and
mov
xlat
jne
mov
adc
mov
xor
imul
adc
and
inc
lods
xor
mov
mov
mov
xchg
sbb
sahf
inc
mov
sbb
mov
inc
cmp
jmp
loop
mov
cmp
stc
mov
ficompl
adc
xchg
shll
popf
sub
cwtl
popf
jg
jo
adc
sub
fwait
lret
push
adc
es
mov
sahf
inc
in
xchg
rcrl
jl
push
outsl
add
cwtl
or
int
bound
loop
pop
cmc
or
and
push
mov
mov
cmp
outsb
iret
jne
gs
arpl
pop
add
lods
int3
cmp
scas
inc
sub
add
jp,pn
clc
sbb
mov
mov
fdivrs
shlb
fnstenv
sub
pop
adc
stos
loope
mov
mov
scas
cmp
pop
js
push
outsl
and
add
notl
fsubrl
inc
test
sbb
gs
mov
cmc
mov
adc
sub
cmp
sbb
push
adc
ret
jnp
enter
dec
jecxz
out
sbb
adc
int3
or
mov
sbb
jo
shrl
pop
xchg
ja
aam
int
sti
fdivrl
push
iret
jp
and
and
and
dec
jg
lock
out
nop
scas
jmp
sbb
mov
movsl
add
pop
mov
pop
stos
jg
fwait
and
sbb
scas
jbe
stos
mov
push
mov
fs
mov
inc
mov
pop
in
dec
mul
and
int3
sti
push
or
ds
leave
jecxz
outsb
mov
pop
int3
sub
push
test
out
das
subb
mov
aaa
and
jecxz
out
add
cmp
call
cltd
out
adc
adcl
add
mov
sarl
inc
mov
push
int3
and
shlb
subl
cmp
bound
pop
mov
lahf
das
jno
jmp
imul
jle
das
cmp
or
int
imul
pop
es
xchg
jb
aas
cmp
enter
mov
fsubrs
or
scas
movsl
pushw
pop
mov
and
xchg
mov
pop
iret
into
mov
sbb
or
lods
jp
mov
jno
loope
addb
add
call
cli
cwtl
rolb
adc
adc
cs
jge
sub
dec
out
or
pop
shr
inc
pop
scas
in
notl
inc
sbb
into
mov
aam
push
in
or
dec
insl
adc
sub
xor
xor
and
sahf
mov
pop
and
mov
jmp
mov
sub
xchg
scas
dec
pop
imulb
pop
movsl
xchg
mov
test
lahf
scas
cmp
mov
dec
in
and
shll
mov
cmp
stos
rorb
or
inc
add
push
aad
sti
push
sbb
inc
inc
outsb
inc
dec
dec
ja
and
iret
mov
sbb
cli
cmp
lds
in
pop
stc
test
lds
je
mulb
jno
addr16
imul
mov
add
cltd
xor
mov
stc
inc
mov
inc
pushf
aaa
add
inc
div
jle
fsubl
out
pop
and
and
or
and
ja
mov
xchg
dec
push
cli
bound
andl
mov
mov
and
mov
xchg
fisubs
iret
xlat
jnp
pushl
inc
xchg
in
cmp
movl
test
or
subl
add
mov
int3
pop
xchg
int
or
leave
mov
pop
xlat
scas
ds
scas
je
int3
and
push
cwtl
sti
iret
lock
subl
jl
pop
xchg
xor
aaa
sub
or
cmpsb
mov
out
xor
fidivs
ja
loopne
jge
mov
push
jae
mov
mov
xor
aam
lock
ror
sbb
add
in
mov
loopne
mov
pop
lret
jge
mov
iret
lods
or
sbbl
push
cwtl
testb
fst
stc
outsl
xor
mov
sbb
push
ret
jg
push
loopne
xchg
sbbl
or
nop
cmp
je
sub
xor
push
sbb
and
mov
fmull
in
in
jbe
sarb
jns
int
and
mov
cmp
and
aad
and
fs
enter
lahf
setg
test
aaa
sub
push
gs
push
addr16
mov
sub
mov
mov
movsb
jb
sar
mov
xchg
jae
sahf
es
inc
shrb
mov
out
idivl
or
mov
push
push
lret
cli
jecxz
aaa
ja
dec
lods
cmp
pop
push
dec
loope
adc
add
fiadds
hlt
xchg
adc
xor
mov
ds
push
jge
shll
xor
jmp
imul
jg
add
test
and
aad
add
push
pop
mov
adc
xchg
or
jb
adcb
dec
rorl
xchg
ss
mov
sahf
mov
and
push
leave
mov
insl
xchg
loopne
enter
or
mov
sub
or
shlb
dec
push
cmp
sbb
jb
push
mov
inc
sarb
mov
inc
mov
lret
xchg
dec
dec
out
jns
repnz
jg
jle
in
push
cltd
xchg
push
dec
loop
or
inc
and
enter
add
loop
add
adc
repnz
es
or
jbe
sbb
cmp
int
xchg
cmp
in
shll
dec
xchg
mov
fldenv
rcrl
enter
xchg
cmc
sbb
adc
sub
loope
pop
pop
xchg
out
cmp
sbb
icebp
mov
mov
das
lret
and
fsubs
and
jbe
cmp
adc
jl
in
std
fs
jbe
jg
jmp
sub
jo
push
jae
xchg
cmpsl
mov
pop
xchg
aaa
mov
jg
pop
jmp
push
lock
sar
out
pushf
mov
push
mov
loop
test
mov
dec
adc
cltd
rcrl
sub
adc
hlt
pusha
mov
cmp
lock
aad
xchg
push
aad
pop
dec
js
dec
xor
jae
jp
scas
xor
adc
dec
pop
enter
rep
mov
and
fwait
cmpsl
xor
popa
xchg
dec
outsl
aaa
cmc
stos
xor
or
inc
fisttps
cmp
cmp
test
or
jns
ret
int
push
or
aas
stos
shll
movsb
push
rolb
and
std
mov
or
xchg
mov
cld
rol
aas
bound
leave
aam
dec
pop
xchg
xor
xchg
cwtl
xchg
xor
sarb
in
hlt
add
sub
lret
dec
xchg
aad
cmpl
mov
cmp
outsl
sub
cld
std
mov
insl
popa
sub
mov
negb
movsl
scas
cmp
stos
mov
inc
xor
inc
push
mov
mov
add
ljmp
in
rcrb
sub
js
loope
gs
inc
cmc
dec
xor
cmp
mov
jbe
pop
ja
jecxz
inc
or
or
andb
int3
outsb
das
pushf
jnp
mov
mov
pop
xor
xchg
xor
and
in
pop
outsl
dec
push
call
arpl
es
jnp
xchg
xlat
fnsave
pop
inc
cwtl
out
cmc
std
mov
pop
loopne
pop
into
pop
add
loop
jo
and
mov
decb
adc
in
mov
test
cmp
or
cmp
dec
shll
fldpi
jns
jne
cmp
add
fisubrs
or
dec
add
mov
lods
pushf
fdiv
test
mov
xor
mov
and
hlt
into
sbb
fiadds
cmpsl
outsb
pop
pop
add
sbb
mov
or
shrl
movl
mov
std
stc
fimull
xchg
rcl
sbb
lock
cmp
or
orb
popa
mov
stos
fwait
cs
pop
mov
out
negb
shl
pop
xchg
loope
lods
cli
mov
out
mov
loope
xor
or
xor
inc
test
test
loope
sti
call
icebp
mov
mov
int
int3
mov
lods
inc
mov
adc
and
adc
dec
fwait
pop
fcoml
stc
inc
popf
mov
inc
inc
cmp
mov
dec
cmpsl
mov
clc
inc
loope
sub
insb
jne
subl
inc
xor
daa
push
xlat
fnstsw
ljmp
sahf
gs
sbb
and
clc
popl
pop
xchg
mov
dec
jecxz
ret
add
inc
or
scas
in
mov
sbbb
mov
lret
mov
and
addr16
outsl
aaa
adc
icebp
leave
arpl
lea
add
rcrb
sub
and
fistpll
call
xor
insl
xchg
fst
js
fldl
push
stos
dec
mov
xchg
iret
pushf
jbe
push
dec
dec
pop
cmp
in
jl
or
scas
mov
sbb
push
jmp
push
imul
lcall
add
ret
pop
add
insl
test
xor
mov
ret
cmp
adc
dec
test
push
push
mov
rolb
addr16
xor
cmp
nop
cmpsb
nop
ljmp
das
cmp
cmp
mov
fst
add
mov
mov
addr16
xlat
pop
pop
dec
pusha
cli
xor
out
dec
test
xchg
loope
xchg
inc
sub
jp
adc
aaa
inc
pusha
sbb
fwait
and
in
pop
add
sbb
fimuls
sub
xchg
jnp
mov
cmp
push
adc
push
push
daa
and
cmp
adc
mov
lods
fidivl
repz
cmpb
and
dec
scas
pop
xlat
mov
cmp
dec
sbb
mov
push
mov
add
pop
push
jl
jb
sub
jle
sub
lret
out
jge
inc
hlt
and
in
pop
data16
push
cmpsl
ret
scas
stos
jle
cmp
lods
sub
call
mov
test
lods
mov
call
cmp
in
pop
test
rcll
hlt
inc
xchg
lcall
test
aaa
lods
adc
mov
jnp
mov
lahf
and
adc
js
cmp
pop
adc
aas
cmpsb
xor
lret
xchg
idivl
lcall
cmpsb
mov
inc
xchg
lds
out
fnstsw
sub
or
cmp
test
lcall
repz
shrl
loop
ret
cwtl
out
out
dec
movsl
ret
movsl
push
and
lcall
cmpsb
shrb
mov
cs
pop
adc
sbb
inc
and
icebp
call
arpl
and
pushf
fcmove
or
cwtl
sub
pop
sbb
mov
xor
lock
xchg
outsb
cmp
ss
icebp
xchg
nop
lods
andl
sub
inc
stc
fmuls
mull
cmp
dec
add
jg
sbb
pop
inc
add
push
push
jmp
jo
mov
aam
ret
ja
js
or
push
pop
sub
push
ficoms
insb
popa
add
sbb
enter
shlb
lods
xor
insb
inc
rcrl
nop
test
jp
push
mov
cmp
lods
lahf
jl
outsb
pop
adc
sbb
mov
cld
mov
daa
cmp
test
push
daa
lcall
in
aaa
inc
jl
lcall
xor
mov
xor
fs
cmp
bound
icebp
incb
dec
add
divl
cmpsl
sbb
xlat
xchg
loop
rorl
imul
shll
mov
adcb
lea
orl
in
int
dec
lret
add
ss
fldt
and
ret
jbe
dec
jl
xor
pop
dec
add
add
push
gs
pop
mov
pop
dec
cwtl
or
pop
mov
sub
ljmp
mov
mov
iret
or
mov
mov
push
push
leave
mov
add
mov
mov
mov
xchg
xor
fs
in
push
sarb
fidivrs
int
imul
aaa
jle
call
mov
ss
push
stos
sbb
das
jne
push
mov
pop
fs
out
out
push
or
pop
data16
xchg
or
pushf
cmp
outsl
cmp
sub
pop
test
pop
les
lods
xor
out
lods
sbb
pusha
enter
stc
xor
xchg
pop
jnp
adc
fdivrp
scas
ja
jae
lods
dec
push
stc
sbb
ret
shll
enter
pushf
lea
cmp
push
leave
xor
push
inc
cmpsb
mov
scas
cli
in
cltd
xchg
or
int3
loop
xchg
mov
dec
loop
dec
fidivrs
es
sahf
push
mov
xlat
mov
iret
sbb
sarb
xor
daa
repnz
inc
cld
sti
lcall
cmp
sarb
add
icebp
les
out
inc
mov
xor
roll
push
jno
das
lods
mov
mov
push
or
or
xchg
arpl
in
and
or
xor
ret
push
mov
daa
mov
test
leave
xor
gs
push
das
jo
and
push
jnp
jbe,pn
push
insb
cltd
cmp
mov
and
cmp
ss
test
movsb
lods
das
fidivrs
inc
popf
cli
jge
enter
add
leave
add
mov
sbb
sub
cli
sub
sub
loope
inc
test
cli
xor
jbe
xchg
test
leave
push
jle
jo
bound
ja
les
in
mov
leave
push
adc
and
outsl
mov
cmp
add
js
adc
imul
jae
dec
mov
adc
push
lahf
mov
jmp
jmp
or
inc
popf
insl
aas
fisubs
pop
push
std
in
hlt
lcall
jg
leave
loop
gs
jnp
push
pop
adc
movsb
jno
sbb
mov
add
insb
dec
push
mov
sub
outsl
cmp
icebp
fwait
dec
shll
dec
jno
pop
jge
mov
xchg
call
push
outsb
loopne
scas
sahf
pop
ljmp
sbb
xchg
test
ljmp
mov
lds
push
arpl
add
das
call
data16
xor
add
scas
int
adc
sahf
rcl
outsl
push
inc
and
xchg
sarb
dec
and
mov
push
push
dec
aam
fistps
jo
mov
repz
mov
adc
mov
push
mov
push
and
aaa
jnp
roll
mov
inc
jl
cmovl
mov
fnstenv
ret
pop
mov
dec
idiv
adc
xchg
fs
in
lods
mov
cmpsb
jg
push
pop
push
sbb
jg
test
xor
sbb
pop
mov
add
dec
xchg
sbb
insl
dec
dec
jle
movsl
inc
es
cmp
imul
lahf
out
in
pop
out
fcomps
pop
and
sub
lret
lahf
add
shlb
inc
rorl
in
push
jle
lcall
adc
mov
sbb
add
and
outsb
add
mov
insb
in
xchg
insl
mov
aad
mov
xor
jg
push
into
xchg
pop
cld
pop
mov
mov
fstpt
pop
xchg
pop
adc
out
cmc
push
iret
dec
dec
mov
xchg
addr16
xchg
mov
xor
mov
mov
xchg
mov
or
push
adc
iret
sbb
push
rorb
xchg
leave
jnp
shlb
cli
adc
sbb
stos
or
jnp
push
bound
and
push
and
inc
lock
popf
pop
ret
ljmp
push
mov
mov
cs
pop
into
mov
stos
or
pop
or
xor
add
xchg
pop
aaa
xor
mov
in
push
aam
mov
and
aaa
mov
sti
fisttps
ljmp
fadds
inc
stos
sub
out
jnp
mov
add
mov
fstpl
adc
aaa
jae
add
lock
or
hlt
inc
lock
lret
mov
enter
lock
sub
sbb
cwtl
ljmp
dec
ja
je
jmp
push
cmpsb
lods
outsb
xor
notb
scas
mov
dec
jno
pop
inc
sbb
add
xchg
sbb
decb
cmpl
imul
lods
fisubs
and
dec
push
lds
mov
in
jg
lods
repz
int
xor
addb
push
xchg
xor
or
mov
mov
xchg
jne
and
cmp
in
lods
sub
std
lret
sahf
xchg
adc
and
inc
xchg
dec
pop
dec
sub
add
mov
loop
pop
jecxz
xchg
iret
enter
cmc
fdivr
pushf
in
enter
aas
push
dec
sbb
mov
add
dec
in
test
inc
stos
inc
inc
call
movsb
cmp
mov
lret
sbb
mov
xor
xor
js
pop
jmp
xor
dec
jb
imul
inc
lret
cli
inc
imul
jo
stos
adc
inc
loop
in
enter
and
stc
add
imul
ljmp
dec
and
mov
mov
adc
faddp
out
dec
sub
sbb
push
inc
ja
xor
adc
jecxz
lcall
js
or
jle
adc
and
ret
cmp
mov
sub
xorb
adc
int
fldl2e
dec
outsb
add
or
xchg
pop
or
jp
rolb
pop
push
mov
jbe
jmp
subb
and
arpl
out
dec
ss
fldt
fcoml
mov
ljmp
test
jbe
aas
filds
loopne
lea
adc
add
ljmp
adc
aam
jle
in
lcall
mov
stos
mov
lret
jg
jo
into
sarl
out
add
xchg
outsb
adc
xchg
and
mov
mov
or
pop
ret
adc
lods
mov
jle
icebp
sbb
xor
push
movsl
repnz
mov
add
cmovp
mov
xor
and
orb
pop
pusha
scas
mov
xchg
inc
or
or
cli
cmp
mov
hlt
sbb
add
call
stos
aas
call
test
mov
jecxz
jo
fdivl
pop
setg
fnstenv
xchg
lretw
cmp
jb
into
adc
insl
inc
imul
aas
clc
xchg
mov
add
lcall
out
jb
sbb
aaa
out
sub
js
or
scas
sahf
jns
roll
add
dec
ljmp
mov
adc
or
repz
or
mov
pusha
call
fists
adc
push
jle
or
xor
call
out
leave
push
decl
iret
xchg
push
xor
push
imul
push
add
ret
push
cmp
iret
rcr
adc
push
push
cs
jne
hlt
mov
xor
aam
cmp
and
aam
hlt
sbb
cmpsl
push
out
into
les
lock
je
fs
aas
xchg
test
cmp
das
sahf
clc
stc
or
mov
in
xor
dec
jbe
sti
icebp
outsb
xchg
pop
incb
stos
xchg
push
daa
jbe
mov
cld
jge
push
mov
sbb
cs
inc
add
add
cmp
push
popw
mov
mov
or
jno
xor
push
jo
mov
and
xorb
in
jnp
cmp
or
push
jmp
dec
xor
hlt
ljmp
cltd
sarl
in
mov
cmc
in
pop
fiadds
out
inc
sub
adc
jne
jo
je
rcrl
add
lea
dec
out
push
mov
jl
out
mov
mov
pop
cmp
and
sub
inc
fs
scas
stc
lret
test
mov
cld
add
cwtl
cmpsb
outsl
inc
push
rcrb
mov
andb
mov
jl
push
dec
test
and
imul
aad
sub
addr16
lds
lods
pop
mov
ret
aas
repnz
rclb
xor
out
push
pop
xchg
jl
or
adc
shlb
cmp
push
sbb
cmp
xchg
cli
push
cwtl
dec
pop
setae
popf
push
out
or
cmp
fnstcw
mov
mov
push
jb
mov
adc
rcll
sti
or
fs
push
jmp
mov
mov
add
mov
lcall
shl
or
test
lret
leave
orb
clc
insb
cmpsb
xor
mov
out
loopne
das
xor
test
lret
mov
jnp
mov
push
aas
cmp
data16
cmpsb
add
imul
je
sub
fs
dec
test
dec
xchg
add
dec
lcall
mov
or
fildll
in
test
mov
push
out
dec
jb
je
xchg
cmp
out
mov
imul
and
mov
jne
cmp
inc
mov
mov
fwait
push
test
ljmp
das
xchg
cmpsb
xchg
aad
ret
mov
js
jne
adc
in
popa
push
les
dec
and
cmp
sub
xchg
push
in
lret
mov
lds
dec
or
add
mov
sbb
stos
or
xor
mov
xchg
adc
mov
sub
push
mov
and
sarl
imul
test
jg
leave
cltd
inc
mov
jg
jg
fnstsw
inc
rorl
mov
in
clc
je
jne
fcom
and
and
and
loope
xchg
lods
sahf
cmc
lret
aas
mov
fsubrl
pop
or
jmp
jne
pop
xchg
scas
mov
data16
or
push
mov
iret
fistpll
mov
mov
push
dec
push
imul
add
rcrb
ja
xchg
mov
adc
mov
in
in
int3
test
out
push
fmull
outsb
xchg
mov
pop
inc
aad
hlt
mov
cld
stos
xor
sub
fmull
lahf
outsb
adc
dec
cmpsl
inc
orps
lea
xchg
rclb
mov
dec
cmp
push
dec
xor
push
pop
out
imul
mov
mov
mov
arpl
jg
loop
adc
mov
push
and
dec
cmpb
pop
fstps
mov
pusha
pop
cmc
jae
pop
movsl
icebp
cmp
in
jns
hlt
rorl
outsl
cmpsl
or
ljmp
aas
mov
std
pusha
into
scas
jp
xor
xor
pushf
dec
retw
or
adc
or
sbb
xchg
add
imul
xorl
push
or
cmp
scas
inc
mov
outsl
jb
pop
daa
xorb
sbb
and
dec
xor
jae
mov
outsb
aam
cmpl
mov
sarl
mov
scas
sub
dec
jbe
push
jp
lods
dec
cmpsl
pushf
dec
sbb
into
in
std
popa
js
cmp
inc
test
in
iret
maxps
movsl
mov
lods
cmpsl
push
sti
cltd
dec
mov
inc
pop
or
rclb
and
out
or
into
sbb
dec
jecxz
mov
adc
dec
test
fwait
push
xorb
stc
cmp
les
pop
test
icebp
test
orb
add
sbb
and
mov
insb
and
push
bound
sti
cmpsl
cmp
jl
pop
jmp
cmpsb
mov
arpl
mov
or
lock
mov
sub
and
pushf
leave
movsl
sbb
stos
insl
icebp
push
test
test
sbb
fs
lods
stos
sbb
scas
ja
mov
lods
movsl
loopne
and
sbb
stos
sti
arpl
loopne
ficomps
add
inc
push
fs
push
imul
out
cmp
pop
xor
push
rorl
jae
mov
inc
cwtl
jae
xchg
jecxz
adc
notl
hlt
ret
xchg
rorb
mov
sub
lret
dec
repz
ret
xchg
lock
push
jmp
xchg
addr16
outsb
mov
cmpsl
and
cmpsb
divl
call
out
dec
adcl
loop
sbb
push
je
xchg
add
inc
and
rcl
and
out
hlt
sub
filds
mov
stos
loopne
nop
mov
aad
jae
aaa
jne
lahf
jb
ljmp
dec
gs
and
xor
lret
sbb
stos
lods
and
adc
and
pop
loopne
lea
jmp
into
inc
stos
cmc
push
push
repnz
and
loop
iret
mov
pusha
mov
push
int
push
and
dec
and
cmp
pop
clc
pop
in
jp
adc
sarl
sub
mov
arpl
dec
stc
jmp
es
arpl
push
out
mov
cmpsb
inc
out
or
add
mov
mov
add
jge
push
cmp
sbb
shll
test
xchg
aas
out
dec
pusha
mov
fnstcw
add
mov
outsl
sub
add
fistpl
add
inc
nop
stos
aam
push
loope
mov
bound
in
cmp
sbb
mov
mov
jne
enter
rcll
repnz
cmp
jp
push
cld
mov
xor
cmp
mov
add
test
dec
fcomi
repnz
clc
push
xchg
sub
loop
imul
sub
data16
mov
push
fimuls
notb
aad
xchg
leave
test
pop
jecxz
jae
mov
xchg
dec
jo
test
cld
stc
loope
int3
pop
mov
mov
leave
push
jnp
cmp
pop
xchg
mov
or
mov
sbb
movsl
push
mov
jo
insb
and
mov
jle
aad
pop
roll
xlat
mov
fldcw
leave
sub
rcr
pop
lcall
jge
adc
jae
jle
dec
mov
or
pusha
mov
cmp
stos
loope
aad
cmp
clc
cld
xchg
jl
push
adc
add
mov
fs
push
mov
fbstp
xchg
inc
into
pop
test
adc
lret
sarl
push
add
adc
add
mov
call
push
jbe
adc
or
insb
sahf
adc
ds
adc
imul
jns
xlat
mov
in
mov
hlt
xor
cli
loope
xchg
xchg
xorl
xchg
push
cmpl
jno
fs
xchg
stos
cmpsl
aam
pop
imul
sbb
jecxz
add
inc
adc
test
or
cmpsl
push
pop
mov
cli
repnz
pop
xchg
nop
sahf
pop
test
sub
push
xchg
inc
cmpsb
xor
inc
fwait
dec
dec
sub
adc
pop
push
cmp
rcl
sub
or
fbstp
loopne
leave
cli
push
movsb
hlt
xchg
stos
jg
xor
pop
aam
xchg
push
fcmovnbe
dec
dec
xchg
or
daa
push
sub
rorl
sub
pop
push
add
jl
subl
lds
push
sub
dec
or
orl
mov
jnp
add
aam
and
mov
popf
xchg
insl
xlat
lahf
jbe
loop
and
stc
inc
mov
mov
mov
lcall
push
mov
jg
je
mov
mov
loope
popf
inc
push
push
pop
pop
mov
cwtl
ljmp
push
shll
inc
adc
cmp
mov
pop
add
adc
mov
sbb
pusha
xor
sub
mov
jle
sub
pop
popa
fiadds
jp
xor
sbb
bound
test
jnp
adc
push
mov
aaa
mov
and
mov
xor
pop
cld
stos
and
imul
lock
repnz
ja
movb
jb
int
scas
shrb
pop
lahf
xor
popf
jmp
sbb
dec
sbb
loope
sbb
jmp
test
jnp
stos
aam
enter
shll
loope
and
xchg
mov
jnp
das
pop
mov
jp
je
outsb
push
call
lods
dec
xchg
out
daa
dec
outsb
sbb
shl
rcpps
testb
scas
clc
leave
ret
or
jecxz
ss
mov
mov
dec
cltd
inc
sub
and
mov
mov
lret
cmp
xor
mov
roll
cmp
lea
dec
int3
adc
xchg
adc
jno
mov
pop
mov
cli
and
xchg
push
xchg
mov
int3
jno
mov
in
xor
sbb
pop
mov
mov
push
push
xor
add
add
pushf
mov
inc
and
outsl
enter
mov
std
lahf
mov
xor
xchg
cs
out
les
add
jns
dec
enter
test
adc
push
adc
outsl
sub
ret
mov
mov
test
dec
dec
jp
rcrb
cmp
out
sub
out
rcll
mov
arpl
in
fcompl
imul
cmp
rolb
movsl
and
mov
rorb
fs
mov
lock
outsb
adc
jl
in
ret
into
stos
adc
push
add
adc
xchg
pop
je
lahf
add
sahf
ret
fistps
jno
pushf
repnz
push
push
in
lods
inc
hlt
cld
sub
add
mov
mov
sbb
mov
lods
lods
or
inc
subl
in
mov
in
jo
push
or
xchg
es
sbb
mov
pop
xchg
mov
mov
add
stos
les
lcall
mov
leave
lcall
stc
movsb
mov
out
cmp
addr16
fistpl
pop
outsl
mov
fisubrs
pop
testb
dec
cwtl
shr
aad
jo
xchg
outsl
push
pop
dec
mov
enter
inc
jl
push
sbb
stos
addb
xchg
cmp
test
loop
sbb
mov
xchg
xchg
inc
sbb
add
dec
cmpsl
ljmp
or
cmp
push
sub
mov
ja
cmp
sahf
pop
outsl
bound
daa
mov
imul
les
jl
frstor
add
sub
mov
mov
outsb
jecxz
inc
dec
cld
xchg
xchg
stos
push
mov
xchg
das
fwait
movsl
cmc
clc
mov
adc
icebp
adcl
aas
and
cmp
sub
mov
xchg
cmpsl
jo
or
jbe
movsb
xchg
mov
stos
sub
push
fidivrs
gs
sbb
dec
or
imul
es
add
sbb
jno
lret
xchg
jl
out
test
filds
sbb
cwtl
faddl
or
pop
pushl
mov
jne
sub
add
dec
scas
jp
fistpll
xor
loop
insl
jo
mov
std
xor
pushf
pop
and
mov
aas
scas
push
popw
mov
cmp
int
add
loope
out
adc
push
das
loopne
movsb
shlb
ss
cmpsl
jp
add
test
les
jno
cld
mov
and
sub
mov
xchg
fcom
jne
in
inc
out
imul
aas
sub
insl
nop
std
adc
push
icebp
outsl
ficompl
fldenv
push
cli
notl
mov
xchg
sahf
shll
mov
cmc
or
sbb
dec
lods
sub
inc
jmp
cmp
lret
loopne
sbb
cmc
inc
inc
inc
in
in
adc
inc
lea
mov
sbb
jbe
mov
push
jb
shll
fsts
push
imull
adc
hlt
sub
in
arpl
movsb
jb
inc
adc
mov
and
lret
into
clc
lea
stos
or
or
imul
jb
repnz
and
and
mov
movsb
push
adc
int3
xor
mov
movsl
mov
aam
iret
cmp
inc
and
mov
aaa
ss
mov
sbb
ret
roll
mov
push
fstp
mov
fistpl
mov
inc
repnz
cmpsl
pop
lret
orb
sub
and
cmp
mov
insb
in
enter
sbb
lock
push
sbb
iret
bound
in
inc
xlat
insl
gs
in
fcoms
aam
rcrb
jb
inc
loop
mov
cmp
repz
mov
xchg
ljmp
pop
mov
xor
les
inc
and
sbb
fisubl
fildll
pop
add
xor
sarl
in
addl
mov
xchg
je
cwtl
jmp
addr16
mov
dec
mov
lds
cmp
out
cmp
jecxz
push
jp
inc
pushf
idivb
inc
loop
cwtl
js
out
mov
stc
adc
out
addl
xchg
xlat
cmpl
dec
js
pop
jno
dec
jbe
dec
and
cltd
lods
lods
cmp
xchg
test
jg
push
adc
xchg
xchg
inc
retw
jecxz
mov
call
outsl
aas
dec
sub
cli
inc
xor
dec
movsb
addr16
mov
sti
sahf
in
sub
xor
xchg
adc
shll
and
out
es
rol
int3
fwait
loopne
pop
mov
ljmp
inc
adcl
cmc
lret
repz
xchg
fwait
into
iret
sbb
aad
add
das
fwait
leave
movsl
fdivl
std
mov
or
mov
xchg
shlb
pop
inc
or
mov
add
insb
xor
push
cli
sub
loop,pn
jg
mov
lods
mov
or
adc
xor
je
lret
sarb
and
ret
sub
int3
adc
hlt
xchg
pop
inc
roll
adc
into
ja
push
aaa
in
push
xor
test
ret
xor
loope
sub
dec
daa
or
lret
mov
jmp
in
lahf
lock
or
sti
aaa
or
pop
xorb
jle
pop
push
loopne
cltd
sub
add
mov
scas
push
push
mov
jno
popa
and
into
fs
add
or
pop
pop
mov
int
fwait
jno
xchg
aas
mov
mov
sub
cld
dec
xor
mov
rcrb
dec
mov
jb
daa
cmp
sub
mov
pop
dec
sbb
push
cmp
pop
or
je
sub
cmpsl
hlt
sbb
and
sbb
adc
inc
pop
gs
sub
sbb
mov
push
jo
insl
aaa
xchg
hlt
orb
xor
leave
dec
dec
lods
dec
sbb
jbe
shlb
scas
jo
mov
or
mov
sahf
mov
jb
jns
mov
xchg
mov
sti
dec
lret
push
aas
aas
mov
hlt
mov
lahf
mov
jnp
pusha
adc
loopne
inc
ljmp
lcall
xchg
cmp
mov
jecxz
xchg
sbb
pop
push
loopne
shrl
fsubrp
sbb
mov
faddl
adc
fisttpll
cwtl
or
inc
cmp
cmp
repz
dec
mov
fwait
inc
mov
mov
bound
cmp
add
rclb
adc
jns
sbb
xor
adc
dec
movsb
cmpsl
dec
fsts
pop
cltd
out
in
test
aad
sub
repnz
jmp
cltd
daa
or
stos
ja
lret
lock
mov
xorb
mov
jns
jge
daa
into
test
dec
push
mov
fldcw
leave
jl
xchg
test
sub
into
jg
lods
xchg
in
ss
pop
lcall
in
fwait
mov
mov
adc
out
movl
xchg
movsl
dec
jae
fwait
orb
popa
xor
pushf
stos
push
jns
mov
inc
jle
roll
add
outsb
sarb
popa
lds
mov
inc
fdivl
icebp
jb
add
jmp
jecxz
xchg
push
jmp
pop
cs
xchg
daa
addr16
test
loopne
ja
ja
xor
bound
xchg
push
cli
sbb
cmp
insb
ja
and
movsl
shrl
test
jo
repz
mov
cs
adc
xchg
hlt
clc
mov
xchg
mov
jle
out
mov
sti
mov
xchg
fisubs
push
lds
and
imul
add
jae
mov
dec
cltd
test
inc
pop
test
mov
out
inc
jmp
sahf
add
into
scas
xchg
jbe
stos
mov
mov
jl
dec
into
adc
cmc
xchg
pop
xchg
imul
pop
sbb
cli
jb
aad
push
in
lcall
fistpll
sub
inc
mov
lret
popa
popa
push
jno
dec
dec
cmp
cmp
jg
sub
out
cmp
xor
mov
testl
xorl
dec
dec
jo
pop
pop
out
call
mov
dec
or
test
pop
jg
adc
outsb
imulb
imulb
es
push
out
xchg
xchg
insl
mov
idivl
cmp
out
pusha
cmpsl
cmpsl
xchg
and
sbb
lods
sbb
push
lods
mov
aam
shrb
inc
mov
push
xchg
mov
xor
lret
int3
nop
push
movsl
mov
xchg
add
cmp
cwtl
push
sbb
mov
loope
mov
inc
sub
cltd
shl
in
lods
jl
pusha
mov
xor
in
mov
aaa
add
dec
lret
iret
xor
sbb
mov
leave
in
mov
pop
cmp
scas
xchg
sbb
and
fcomps
int
push
jmp
cmp
push
mov
adc
cmpsl
sub
imul
pop
add
aam
jecxz
cmc
repnz
jp
xor
repz
cmp
pop
js
fistps
jo
mov
jbe
push
dec
inc
pop
jb
scas
jge
inc
xchg
mov
pop
xchg
jo
test
mov
nop
sbb
negb
adc
push
add
fcompl
jle
mov
and
cmovo
gs
mov
sub
sbb
push
mov
std
fldl
jb
xchg
sub
mov
jne
push
insl
aad
sub
cmp
pop
adc
pop
rcrb
mov
sti
lret
repnz
mov
inc
aas
das
test
or
lods
cmp
mov
cmp
dec
or
jb
mov
cmpsb
cmpl
pop
xchg
popa
inc
ss
cmpsl
push
jo
negl
jecxz
add
mov
mov
inc
inc
in
das
mov
mov
xchg
popa
aas
loopne
popf
pop
dec
mov
jbe
inc
test
mov
lock
lods
sahf
test
pushf
mov
add
clc
pop
push
or
sub
in
mov
sbbl
jg
outsl
nop
ret
pop
ret
dec
pop
adc
clc
cld
out
mov
sbb
roll
popa
mov
cmpb
data16
sbb
lods
cltd
fsubrl
sbb
push
ja
fdivrs
enter
out
ja
dec
test
inc
movsb
jne
push
and
scas
or
jg
sbb
xchg
or
movsb
mov
stos
xor
idivl
es
stos
sbb
mov
sbb
dec
inc
loopne
inc
mov
in
mov
scas
mov
or
or
out
xchg
and
mov
imul
pop
sbb
out
mov
adc
cmp
adc
lea
fdivrs
dec
clc
lcall
jb
mov
pop
cmp
mov
rcll
aaa
fisubrs
std
inc
loopne
lods
inc
xor
mov
lret
and
pop
xlat
out
xchg
icebp
jnp
or
xchg
mov
xlat
movsb
cmc
clc
insb
pop
and
mov
fnstsw
xor
jnp
mov
xorb
sub
dec
inc
cmp
std
jp
xchg
xor
je
ret
mov
gs
dec
mov
and
adc
call
cmp
loop
mov
nop
cmpsb
mov
cli
cmp
xor
aas
test
cmp
jmp
and
inc
sub
imul
mov
fs
sub
mov
stos
jnp
adc
dec
js
or
sub
js
pop
sarb
int3
jo
sub
inc
xchg
add
aam
outsl
jo
rclb
inc
lret
jnp
xchg
dec
mov
and
inc
mov
xchg
mov
pusha
fcompl
outsl
add
push
mov
mov
sti
rorb
stos
xor
push
mov
inc
insb
xchg
xchg
out
xchg
dec
in
les
data16
add
dec
jns
mov
inc
rcr
dec
push
mov
adc
pop
lret
push
aaa
mov
mov
sti
inc
pop
lock
data16
rcll
loop
sub
das
mov
ljmp
mov
or
rol
or
cmpsb
fnsave
icebp
sub
cmpsb
mov
push
cmp
mov
jmp
test
orl
rcrb
clc
in
jo
lods
cmp
pop
fildl
fucomp
ret
in
shl
xor
dec
adc
mov
sbb
mov
std
int3
and
mov
fnstenv
out
pop
xchg
inc
rep
sub
iret
or
sahf
popa
adc
inc
mov
das
gs
testl
mov
pop
aam
cmp
not
inc
test
cmp
fstl
aam
cmp
or
les
cmpsb
mov
out
or
sbb
fisubrl
mov
shrb
cmp
add
shl
xchg
push
jp
insb
mov
or
xchg
or
out
cmp
ficoml
repz
push
or
out
nop
aas
and
decl
cmp
or
stos
test
dec
mov
pop
sub
ds
fidivrl
in
pop
mov
daa
enter
push
mov
or
mov
sbb
lahf
fcmovne
aas
cmp
jg
or
movsb
jl
mov
jnp
xlat
fmul
cmpl
adc
dec
adc
dec
add
test
jge
add
repnz
dec
dec
int3
bound
leave
inc
xor
andb
xchg
inc
loopne
inc
mov
lahf
outsb
ret
jmp
icebp
data16
or
jo
das
jmp
jecxz
mov
ss
scas
adc
jbe
jge
frstor
add
lahf
mov
ret
cmp
shr
push
popl
inc
iret
sbb
push
push
inc
mov
add
addr16
xchg
ljmp
mov
jge
mov
mov
mov
nop
or
cs
sub
cmp
sar
sarb
aam
aad
xchg
scas
popa
jge
mov
push
roll
xchg
repz
sub
cmp
jp
push
xor
cmp
fidivrs
cli
add
popl
sub
scas
mov
or
mov
filds
xor
cmovne
pop
mov
out
insl
jo
push
out
and
iret
or
andl
jge
push
outsb
outsb
cltd
or
mov
dec
loope
mov
cmp
cmc
dec
popa
cltd
mov
mov
pop
movsb
or
in
jg
jle
jno
mov
data16
sbb
cld
jle
out
aaa
cli
shll
stos
and
sub
sub
push
leave
sbb
mov
loop
insb
jae
fstl
pop
cli
lahf
adc
jns
js
scas
sti
inc
outsb
adc
push
add
add
addr16
fidivs
ljmp
pop
outsl
jnp
mov
dec
inc
xchg
and
xchg
mov
push
adc
sbb
and
lods
cmpsb
or
jg
mov
push
cmp
ret
jp
and
or
cmpb
jle
dec
inc
inc
adc
sub
add
xor
or
shr
xor
push
lods
scas
jecxz
fstpt
cmpsl
cwtl
addr16
pusha
and
jmp
ret
jb
fadd
fucomp
pop
lock
sahf
or
fdivrl
pop
xchg
in
cli
add
pop
jl
mov
shrb
test
cltd
in
es
and
xchg
fs
dec
mov
enter
pop
ss
loop
mov
mov
dec
mov
push
cmpl
loopne
and
or
imul
sbb
decb
dec
les
push
sahf
aad
roll
es
popa
imul
arpl
adc
divl
les
fistps
fs
lret
push
lret
xor
sarl
xor
push
cmp
mov
adc
ret
test
dec
cmpl
xchg
loopne
fsubrs
shll
pop
ret
enter
repz
inc
sti
pop
pop
and
jecxz
jo
pop
call
insl
mulb
push
test
in
xchg
xchg
add
inc
pop
and
test
mov
scas
inc
leave
lret
lock
sbb
add
pop
lds
or
cmp
into
push
popf
in
shll
xchg
loop
int
jno
rorb
clc
xor
ret
cmp
bswap
mov
add
jecxz
xchg
xor
mov
cltd
sub
xor
lahf
jp
fcomps
and
je
pusha
or
inc
mov
scas
test
jo
inc
out
xchg
jmp
shll
test
out
icebp
cmp
xor
dec
daa
fidivrs
and
or
cmpsb
loopne
sbb
mov
and
mov
imul
xor
addr16
fs
mov
or
out
mov
push
int3
into
ja
in
jo
int3
push
adc
sub
add
xchg
nop
out
lcall
cmp
out
fnstcw
imul
or
aas
pusha
data16
sub
pop
adc
inc
xlat
repz
pop
das
stos
xor
bound
shlb
popa
add
ja
xor
push
mov
in
lea
fadd
notb
and
mov
mov
mov
dec
xlat
add
jnp
daa
jae
and
js
ret
addb
xor
insb
mov
cs
sahf
dec
xor
mov
and
mov
xchg
imul
sbb
pop
fwait
dec
and
test
inc
mov
jle
lds
add
mov
xor
pop
ss
in
sbb
cmp
ret
decb
push
cli
call
fsubrs
push
add
xor
sbb
adc
pop
or
push
rclb
shll
dec
xor
mov
push
mov
fwait
push
ret
cmp
pop
add
mov
sub
mov
inc
inc
jle
jecxz
push
sbb
hlt
cmpsb
testb
sub
into
jle
adc
jns
jp
cli
ffreep
mov
push
testl
mov
rcrl
popf
inc
enter
sbb
rorb
xchg
out
mov
imul
cltd
es
add
lret
cmc
ja
adc
mov
sar
xor
pop
out
bound
movsl
cmp
mov
out
movsb
mov
out
repnz
jle
xor
jns
xor
sub
fisubs
pop
push
icebp
into
mov
fmuls
std
mov
fadds
cltd
jbe
push
inc
sbb
inc
jge
out
out
xchg
lcall
fisubrl
jl
mov
lea
insb
and
scas
fcomip
or
cmp
mov
scas
out
and
pop
divl
adc
dec
fs
ljmp
loopne
mov
cmc
pop
mov
out
lcall
fists
push
call
mov
and
shl
sbb
sahf
inc
mov
shrl
ret
inc
mov
mov
in
sahf
jne
pop
in
out
push
sub
sub
pop
push
or
repz
iret
sahf
aam
std
push
nop
fisubrs
and
cmpsl
fwait
es
in
lcall
lahf
mov
xlat
xchg
adc
mov
scas
jmp
dec
or
arpl
xlat
movl
sti
test
dec
pop
lcall
pop
xor
sbb
aad
push
sub
out
push
andb
and
sbb
xchg
mov
aam
out
js
ss
sti
daa
mov
cwtl
inc
aaa
cmp
call
mov
or
int3
bound
mov
adc
cmpsl
dec
ljmp
pop
pop
ds
xchg
jge
mov
imul
ret
xchg
fwait
xor
add
cwtl
and
mov
shr
mov
jno
inc
dec
js
or
add
inc
xor
in
sub
jo
xor
and
dec
in
push
sbb
subl
jp
sub
rolb
xor
pop
xor
scas
out
mov
mov
loop
fadds
cwtl
mov
inc
cmpsb
xchg
pop
pop
sub
divl
insb
out
dec
push
hlt
xchg
or
roll
mov
inc
ss
push
and
jl
ret
in
mov
out
out
adc
imul
dec
iret
cmpsl
es
lret
fstl
xor
ret
mov
lods
ss
nop
shll
jecxz
push
fiadds
pop
popa
nop
outsl
pop
adc
mov
and
dec
push
aam
and
int
xor
xor
mov
jge
addr16
xchg
add
cmp
fs
mov
add
mov
cmpsb
cli
cmp
add
pushf
push
addr16
mov
lds
sbb
mov
data16
sub
xlat
in
xchg
shll
and
popa
inc
cwtl
cvtpi2ps
fldt
push
les
mov
or
ds
xor
pushf
je
xchg
ss
ss
xor
in
sti
cli
shlb
jmp
lcall
push
cli
out
mov
mov
xchg
aad
pop
fninit
frstor
ret
push
das
mov
sarb
cli
test
mov
pusha
jno
adc
or
inc
mov
or
scas
cmp
hlt
dec
sbb
adc
incb
lcall
into
or
dec
lret
shl
push
sub
and
sbb
xor
pop
shl
rcll
ja
pop
lret
movsb
fsubr
inc
jne
or
push
sarb
xchg
push
mov
push
pop
inc
sbb
xlat
ret
sbb
cmpl
pop
int
and
mov
sub
jo
es
sbb
cmp
adc
mov
pushf
mov
pop
popa
jge
cmp
dec
lahf
sbb
int
scas
out
sbb
pop
cs
lahf
jno
add
loopne
mov
pop
rep
sbb
fsubs
repz
iret
sbb
or
idivb
sbb
les
cmp
sub
xor
and
sahf
or
mov
daa
movb
outsl
out
decl
xchg
ljmp
sbb
sbb
ret
lods
cli
pop
dec
repnz
mov
idivb
fs
mov
mov
lret
push
xor
add
std
lods
mov
inc
leave
sahf
pop
js
add
out
pop
out
pop
enter
sub
stos
int3
pop
and
jne
mov
sub
in
ret
inc
add
dec
rcrl
repz
mov
xchg
mov
popa
pop
lret
out
test
or
icebp
adc
add
xor
sbb
popa
dec
cmp
push
stos
jp
cmpsl
mov
outsl
xchg
dec
negl
dec
jmp
test
xor
in
rcrl
ljmp
lret
sahf
xor
mov
je
xor
ficoml
or
xchg
and
push
cmp
in
pushf
stos
in
bound
and
cmpsl
popa
mov
cmp
xchg
in
loope
arpl
pop
xchg
push
sbb
and
std
xchg
or
out
or
jb
inc
xchg
and
scas
into
mul
push
lea
fsubr
pop
cmpsl
dec
lock
cmp
popf
cmp
add
nopl
popf
nop
push
scas
sub
pusha
sub
jecxz
inc
bound
adc
rorl
das
jl
mulb
pop
outsl
jno
inc
xchg
push
lods
or
fstpt
sbb
lea
xor
sti
push
lock
je
inc
sub
arpl
mov
mov
sbb
repz
loope
xchg
mov
jo
dec
or
scas
testl
adc
cs
mov
leave
push
and
pop
les
lcall
adc
jbe
dec
lret
gs
loopne
inc
mov
dec
shlw
jg
add
lret
lcall
pop
iret
adc
xchg
outsb
sub
xor
push
jbe
pop
in
push
stos
cmpsb
cmp
or
dec
frstor
repz
inc
and
push
jae
out
dec
outsb
or
hlt
push
or
fcmovbe
ret
aas
int3
loope
lea
movsl
js
mov
push
sub
jg
std
xchg
int3
mov
inc
cmp
sbb
add
mov
adc
outsb
inc
sub
nop
sarl
data16
and
addr16
loopne
loop
call
loope
dec
xor
aaa
cwtl
or
xchg
fs
mov
pop
int
push
insb
cmp
xchg
mov
push
movsb
nop
out
insl
push
repnz
aas
test
test
add
fsub
fadds
and
push
ja
pop
sbb
rcll
roll
iret
loope
lds
icebp
fcmove
mov
jb
insb
sub
mov
mov
cmp
test
xor
mov
loop
inc
dec
inc
roll
adc
and
fstps
dec
xchg
nop
jmp
ret
pusha
cmp
hlt
inc
outsl
pushf
shrl
push
mov
in
pop
insb
push
xor
insb
mov
xchg
sbb
sbb
cmp
filds
outsb
nop
loopne
roll
sub
push
movsb
fcompl
fistps
sahf
inc
sub
cmp
mov
or
in
lock
add
push
outsb
mov
adc
test
push
fisubl
das
lea
pushf
gs
int
cmpsl
cmp
mov
daa
add
rdmsr
and
mov
jmp
enter
out
ror
cltd
mov
mov
test
jae
push
mov
xchg
jmp
fstpt
adc
pop
shrb
shll
clc
lret
aaa
cmpl
push
aaa
in
xor
lret
aas
and
adcb
xchg
rolb
leave
stos
push
cmp
loop
aam
sub
pop
sbb
push
add
push
scas
sub
movaps
mov
outsb
and
cli
inc
xor
icebp
xor
mov
and
add
adc
cltd
jp
addl
sub
out
pop
adcl
int
inc
mov
and
sub
xor
repz
inc
sbb
xor
mov
pop
xor
xchg
or
jecxz
lods
ret
imul
icebp
lea
retw
test
stos
jge
adc
mov
icebp
xchg
mov
movsl
mov
or
xchg
imul
dec
jnp
pop
scas
inc
jp
sub
mov
stos
mov
pop
jns
jmp
nop
call
test
xchg
jecxz
or
rclb
dec
xchg
sbb
cmp
sub
loope
mov
gs
or
cmp
xchg
loop
jge
mov
loope
sub
in
adc
idivb
pop
mov
pop
repnz
out
sarb
xlat
xchg
dec
mov
fisubrl
xchg
popf
aam
lcall
and
push
inc
aad
pop
das
adc
ja
inc
mov
pop
push
out
ss
loop
xchg
xchg
inc
dec
sbb
popl
lock
xlat
jb
push
push
adc
insl
sbb
cmpsl
cmp
dec
adc
fsubrl
mov
loope,pt
cmp
cmpsl
int
repnz
dec
sub
xor
adc
xor
xchg
jb
pop
cmp
clc
dec
fdivrl
enter
ret
adc
and
mov
push
stos
repz
testb
stos
inc
outsl
sbb
nopl
fsubs
jnp
in
xchg
xor
adc
lds
in
and
pop
hlt
stos
or
ja
cmc
ja
and
xchg
test
out
xlat
dec
inc
jle
jecxz
addb
fcomp
and
mov
iret
punpckhdq
dec
sahf
iret
cmp
mov
dec
shrb
push
jmp
pop
mov
mov
fistpl
movsb
mov
inc
call
enter
movsl
cmp
cmp
ss
jo
faddl
adc
pop
adc
cmp
jbe
das
lods
sahf
pop
fwait
imul
lock
mov
or
inc
movsl
mov
ret
and
dec
loop
pushf
test
add
lock
sbb
cwtl
fists
push
or
mov
xlat
rcrl
jo
push
xor
das
mov
les
dec
or
stos
shlb
mov
mov
das
arpl
iret
xchg
xchg
xchg
les
mov
push
mov
dec
lcall
std
loop
push
mov
mov
add
xchg
roll
test
pop
push
mov
fs
hlt
dec
mov
stos
mov
inc
jb
data16
mov
call
mov
or
xchg
xor
fiaddl
divb
and
sahf
ljmp
addr16
mov
rorl
in
jecxz
cs
and
stc
push
add
cmpsl
cld
cld
int3
or
mov
adc
gs
popl
or
js
int3
adc
fdiv
aaa
xor
orb
bswap
daa
fldt
inc
push
loop
ss
and
sub
out
inc
out
jae
xor
xlat
xchg
pop
mov
hlt
loop
add
cs
fdivl
xchg
push
xor
and
dec
int3
call
repz
pop
rcrl
mov
or
pop
cmpl
es
push
and
xchg
push
mov
ret
xchg
loopne
mov
movsl
cmpsl
sahf
ljmp
pop
pushf
and
call
faddl
xchg
sbb
sub
inc
or
stos
pop
jmp
dec
gs
cmc
pop
dec
xchg
rolb
and
mov
jmp
mov
fstpt
adc
imul
int3
push
sbb
fsubs
and
call
rcrb
add
jg
es
test
lods
orl
jnp
aas
sbb
mov
xorb
and
popa
test
cmpsb
xor
cmp
push
xchg
mov
cwtl
and
adc
fisttpll
push
clc
cld
loop
movsl
dec
mov
add
dec
mov
aaa
ds
xchg
mov
iret
scas
dec
add
add
dec
sti
xchg
cmpb
insb
pop
les
test
int3
pop
ror
mov
inc
mov
aam
mov
call
insb
dec
mov
push
es
adc
lret
jns
cmpsb
mov
cmpsb
or
xchg
push
or
dec
cmp
cltd
mov
int
into
add
adc
sub
inc
sbb
inc
adc
flds
in
xor
hlt
add
cmpb
cs
sbb
loope
icebp
jp
add
test
arpl
mov
cmp
mov
stc
push
fisttpl
mov
leave
insb
dec
xor
test
xchg
in
pushf
leave
in
shlb
push
cmc
nop
push
stos
dec
pop
lret
fsubrs
mov
push
adc
or
ljmp
xor
and
sbb
movsb
loop
fucomp
sub
imul
loope
negl
iret
pop
jge
bound
push
mov
dec
lock
out
pop
fsts
pop
sbbl
jge
fwait
ja
cs
outsl
jmp
sbb
mov
sub
mov
adc
jns
loopne
push
xchg
xor
mov
icebp
sub
test
out
mov
mov
pop
add
sub
inc
adc
inc
mov
divl
jae
out
jnp
dec
jnp
mov
std
mov
xchg
hlt
add
mov
xchg
cltd
imul
mov
cmp
xor
mov
mov
push
stos
mov
das
out
sub
mov
push
es
es
cmp
fbstp
pcmpeqd
lods
push
ss
xlat
mov
repnz
fs
sub
repnz
out
imul
cmpsb
cmp
into
dec
addr16
jg
outsl
jnp
or
mov
inc
ljmp
sti
xchg
movl
mov
outsb
push
jle
dec
mov
xor
inc
xchg
lods
adc
stos
test
aam
in
dec
jnp
data16
and
pop
xor
pop
jb
push
test
inc
xchg
cwtl
adc
xchg
dec
fmuls
test
xor
xor
dec
jnp
mov
push
and
loop
jne
pop
add
loope
inc
pop
out
xchg
mov
dec
xor
pop
xorl
pop
enter
int3
jg
scas
adc
cmc
repnz
sbb
jb
aam
jle
fwait
sti
sbb
xor
inc
imul
xchg
push
dec
xchg
pop
data16
aam
cmp
idivb
pop
sub
or
xor
lea
jg
mov
pop
testb
and
mov
jle
sti
sub
adc
daa
orb
sub
fsts
divb
inc
cmp
cmpsl
cs
mov
adc
lods
mov
pop
out
test
sbb
lret
stos
or
push
cmp
mov
inc
jle
movl
inc
add
add
xchg
adc
lret
inc
test
insb
push
flds
leave
aaa
arpl
sahf
lods
sub
aaa
and
mov
lds
jo
pop
push
pop
push
sarl
ljmp
jp
push
and
mov
es
fs
aaa
sub
dec
pop
popf
in
aad
imul
dec
cld
add
les
inc
jo
imul
outsb
push
xchg
addr16
stc
shll
hlt
test
out
cmp
aas
xor
xor
aaa
inc
mov
pop
loopne
std
aad
fidivl
sub
fwait
das
jnp
ljmp
stos
push
out
jns
sbb
aad
cmc
xor
imul
rorl
pop
lret
insl
push
sbbb
push
cmpsb
jle
jge
lods
inc
cld
push
sbb
ss
xchg
ret
test
andl
movsb
popa
xchg
dec
mov
adc
add
sbb
mov
jge
adc
rorb
mov
dec
push
test
addb
and
in
sbb
jns
psubb
out
add
rcr
jae
shll
xchg
cltd
adc
mov
adc
hlt
pop
jbe
lret
pop
mov
add
jb
les
imul
js
shrb
aad
mov
aam
adc
leave
or
int
stos
mov
cli
mov
cmpsb
cld
fs
mov
stc
cmpsl
dec
jnp
insl
je
movsb
xchg
add
xchg
lock
testb
or
pop
enter
cmc
jae
scas
mov
mov
pop
fldenv
repnz
inc
pop
adcl
shrb
fwait
into
ljmp
lods
outsb
call
mov
mov
ja
lret
dec
mov
je
bound
mov
mov
fwait
lods
xor
adc
inc
push
mov
xchg
cmp
pop
addb
mov
enter
or
push
pop
lret
mov
pop
pop
and
ffreep
mov
out
icebp
out
pop
inc
mov
in
add
ds
xchg
gs
xor
leave
shl
sub
inc
call
stos
mov
xor
insl
scas
add
or
xchg
dec
pop
test
sub
in
test
mov
sbb
dec
sub
pop
fs
xchg
js
fnstcw
dec
fwait
outsl
repz
into
cwtl
adc
sub
scas
cmpl
movsb
ss
sbb
and
hlt
dec
dec
in
pop
stos
cmp
imul
xchg
lea
adc
adc
xchg
mov
cmp
adc
sub
mov
mov
mov
test
dec
adc
cld
cmpsb
xor
popa
fldl2t
mov
imul
cmp
stc
mov
das
jns
adc
mov
clc
push
les
scas
mov
sub
sub
add
int
pop
mov
add
xchg
ss
lds
rolb
int
mov
jmp
insl
fldl
xchg
scas
inc
sbb
mov
lea
mov
cwtl
test
daa
xor
ja
gs
push
mov
fs
subb
mov
pop
mov
push
push
cld
mov
in
or
imul
enter
jbe
push
imul
mov
aad
mov
loope
or
dec
stos
and
ss
ret
ffreep
dec
iret
dec
and
bound
xchg
sub
nop
dec
xchg
out
bound
scas
jmp
sbb
stc
xchg
sbb
data16
ficoms
mov
insl
pop
fsubr
mov
push
cld
test
add
stos
mov
scas
mov
sbb
pop
mov
test
or
pushf
pop
cmpsl
add
mov
stc
enter
mov
sbb
push
fwait
mov
sub
nop
adc
or
pop
cmp
sbb
and
push
xor
repz
pop
stc
mov
jae
push
xchg
test
mov
lea
std
and
dec
pop
push
es
out
sub
jbe
cmp
or
xchg
mov
add
or
lock
arpl
mov
insb
ss
out
mov
xchg
pop
adc
xchg
in
lods
pop
jnp
jb
loop
scas
cld
mov
je
mov
loopne
jl
shrl
lock
in
mov
rorb
cld
add
jbe
pop
sub
pusha
out
xchg
aam
lods
sahf
shll
pop
adc
loope
sbb
pusha
push
push
fucom
out
fwait
xor
add
lret
es
je
sbb
bound
sbb
inc
add
outsb
fiadds
dec
hlt
xor
cltd
addr16
mov
popa
cwtl
push
iret
jecxz
cmp
into
pusha
cmp
mov
mov
pusha
daa
xchg
test
nop
xlat
xchg
in
frstor
loope
and
adc
sub
sbb
jmp
sbb
fcomp
in
dec
shrl
subl
imul
into
int
shrd
out
out
outsb
lods
nop
mov
push
sahf
mov
sbb
jg
dec
stos
fs
outsl
inc
inc
out
sbb
mov
sub
dec
aam
ss
mov
cmp
das
mov
push
pop
test
push
imul
sub
fimuls
in
aas
sti
and
mov
add
dec
imul
shll
pushf
xorl
pop
mov
ja
cmp
pop
push
inc
xorl
xchg
test
or
mov
fucom
pop
or
sbb
mov
fs
mov
xchg
sub
xchg
adc
popf
jl
adc
jae
stos
cmpl
stos
jl
pusha
cmp
xor
mov
lcall
push
mov
mov
int
prefetchw
jl
bound
rol
lret
mov
movsl
ret
jp
lret
mov
sbb
lds
push
aam
and
and
pusha
lods
scas
adc
jnp
dec
push
add
mov
adc
push
mov
clc
jb
pop
addr16
add
mov
mov
das
into
fidivrs
mov
push
mov
dec
mov
scas
xor
jno
jecxz
iret
jo
cmp
mov
cmc
lahf
dec
xchg
cmp
mov
mov
stc
xlat
lds
add
xor
mov
sbb
lds
int
add
in
mov
push
loop
adc
call
cs
sbbl
insl
jae
aaa
lret
test
fs
cmp
sub
and
jns
fmul
cmpsl
mov
jle
mov
movb
loop
clc
subb
scas
test
pop
inc
xchg
pop
test
inc
push
push
sbb
xor
mov
mov
outsb
jle
cmp
aad
mov
jns
sahf
dec
popf
cmp
lock
lods
xor
xor
mov
gs
aam
sub
iret
dec
pop
sub
cwtl
push
imul
shll
xchg
xlat
push
jae
data16
sub
jns
mov
xchg
add
and
jbe
sbb
inc
ret
nop
fcompl
or
xlat
ret
jl
adc
dec
icebp
xchg
sbb
dec
fs
hlt
mov
xor
and
push
xchg
loopne
jae
mov
adc
lds
or
mov
sub
or
adc
and
jb
adc
adc
lret
adc
push
movl
cmp
loopne
mov
dec
arpl
push
pop
in
lock
daa
inc
lret
lret
je
and
cmp
push
jns
rcr
push
insb
pop
sbb
xor
sub
js
cmpsl
sahf
xor
je
pop
in
pop
sbb
imul
add
in
ret
aaa
loop
add
hlt
add
pushf
leave
repz
inc
jo
lret
in
sbb
out
insb
lahf
sbb
test
adc
adc
inc
out
and
or
das
es
iret
xor
jnp
adc
cmp
mov
js
pop
mov
xchg
adc
mov
inc
xorb
jmp
addr16
mov
pop
mov
mov
cs
scas
sbb
cmpsl
xor
cmp
icebp
mov
mov
jle
cmpsl
cs
lret
xor
in
xchg
push
pushf
repz
test
jns
addr16
and
psrld
mov
popf
xor
cwtl
mov
test
jns
jbe
loopne
test
mov
repz
shl
sub
inc
andl
hlt
test
test
mov
inc
divb
rolb
xchg
test
push
dec
stos
sub
loopne
jg
in
in
lods
stos
ret
fnstsw
jmp
andl
and
ja
xor
pop
sbb
jns
jge
pop
add
xchg
ljmp
mov
mov
popf
in
inc
xor
test
fwait
lods
jecxz
jmp
pop
test
in
movl
jae
roll
cwtl
sti
cltd
push
outsl
sahf
movsb
mov
xchg
ror
xor
repz
or
add
test
fisubl
mov
out
aam
sub
rcrl
push
mov
hlt
js
fildll
add
dec
mov
pop
cmp
cld
jae
xchg
mov
bnd
push
lock
jg
inc
fnstsw
pop
aad
das
or
add
fldcw
jns
jp
xchg
push
add
call
test
pop
inc
pop
addl
adc
lea
aaa
push
and
rolb
xchg
fwait
call
fldenv
cmp
mov
int
push
sub
push
leave
shrb
jge
mov
pop
sti
cmp
gs
imul
idivb
roll
inc
imul
jg
mov
or
mov
insb
sub
dec
dec
cmp
in
sbb
mov
icebp
sahf
adc
fisubrl
addr16
in
ja
mov
lock
das
inc
sbb
lahf
xchg
cmpsb
adc
jno
std
sbb
and
ror
and
lret
xor
and
aad
mov
xchg
mov
adc
mov
cwtl
enter
movsl
stos
out
pop
out
and
sti
insb
adc
jg
mov
js
add
cltd
inc
icebp
pop
ficoml
jge
les
incb
pop
lods
xlat
bound
push
mov
rorl
shl
cltd
sub
enter
movsl
or
dec
dec
mov
inc
mov
add
dec
pop
fsubrl
movsb
bnd
pop
iret
inc
and
mov
mov
mov
jne
insl
arpl
leave
mov
cmpb
push
or
dec
inc
sbb
dec
sub
ss
shlb
aaa
cli
scas
divl
push
pushf
mov
cmc
enter
adc
dec
popf
jl
fldt
cmp
jns
dec
rcll
pop
cmc
mov
stc
pop
mov
pop
xor
push
andb
lret
cmp
sub
cli
std
add
outsb
sub
mov
adc
std
cltd
test
pop
call
push
gs
jo
xor
mov
adc
add
jno
imul
adc
jne
pop
lahf
inc
sbb
sub
mov
fstps
push
and
adc
push
clc
fcompl
push
fstps
mov
adc
mov
movsb
jg
adc
lret
out
fidivs
cli
repnz
iret
daa
repnz
push
dec
stc
xor
push
in
icebp
pop
les
mov
push
out
fs
sbb
or
adc
popf
sub
pop
inc
or
cmp
adc
aad
cli
xor
dec
idivl
sub
loop
cmp
jo
data16
movsb
subl
jb
xchg
int
inc
pushf
lods
jo
dec
sbb
xchg
mov
dec
inc
inc
xchg
adc
roll
sub
push
pop
sub
fs
sbb
int3
js
sub
sti
push
mov
or
out
mov
icebp
xchg
jns
sbb
xlat
push
int
dec
jl
jmp
enter
sti
mov
cmc
mov
lock
std
or
div
fwait
add
cld
int3
sbb
xor
inc
jge
icebp
adc
jle
cwtl
pop
mov
pop
push
fnstcw
mov
loop
stos
out
icebp
push
icebp
scas
mov
addl
pop
inc
jp
pop
mov
pushf
push
adc
and
sub
mov
inc
jmp
jns
push
dec
adc
mov
bound
jmp
jae
icebp
stc
fnstenv
mov
sub
nop
jp
adc
loopne
aad
adc
mov
dec
mov
push
dec
push
insb
lods
sbb
gs
imul
outsl
fdivl
jge
aaa
arpl
imul
push
fstps
cmp
gs
dec
cmp
fsubrs
add
xchg
adc
cmpsb
in
xor
xor
and
jno
dec
inc
or
stc
mov
push
bound
sub
mov
sbb
jecxz
mov
es
aad
push
orl
or
mov
xorb
sub
or
xchg
xor
mov
pusha
fisttpl
sbb
mov
rcl
fiaddl
daa
out
sbb
lcall
addb
imul
cli
adc
inc
add
mov
das
das
mov
cmpsb
repnz
inc
push
mov
paddsw
mov
pop
mov
xchg
add
leave
ds
xchg
mov
push
push
pop
xor
lcall
dec
xor
lods
or
pop
aad
fistps
rclb
int
xor
mov
inc
sbb
test
pusha
int3
test
in
pop
mov
xchg
bswap
call
xlat
arpl
push
push
pop
sub
pop
lar
add
push
pop
pop
jl
sub
fistl
xchg
add
and
jmp
mov
inc
icebp
or
sub
or
lods
mov
js
xchg
ss
dec
inc
mov
movsb
fbld
sub
add
xor
into
add
and
scas
iret
cli
jmp
adc
ret
sbb
xchg
push
dec
mov
std
inc
ja
insl
dec
cltd
pop
xchg
sbb
jge
dec
cmpsb
fistpll
test
cmpl
dec
sub
push
loopne
push
repnz
aas
lcall
fsts
cwtl
jp
loopne
les
mov
mov
jnp
mov
out
sbbb
jo
cltd
xchg
loopne
pop
sbb
cmp
out
test
xchg
imul
fcmovu
xor
outsb
sbb
scas
icebp
fists
jge
andl
js
dec
push
xorb
add
xlat
ljmp
inc
mov
insb
mov
mov
data16
mov
mov
sbb
mov
jge
cmp
lret
mov
data16
aad
jl
leave
add
outsb
xchg
dec
lock
hlt
jge
xchg
stos
shlb
negl
stc
jmp
mov
push
out
push
and
sbb
sub
outsb
jmp
inc
retw
push
adc
clc
mov
imul
pop
testb
aad
stos
js
mov
mov
dec
cmp
lret
jns
pop
lcall
adc
mov
add
adc
mov
call
cmpsb
xchg
loopne
xor
add
aas
jge
lret
jns
xchg
popfw
imul
lret
mov
scas
dec
adc
adc
jae
pop
movsb
aad
aaa
dec
xor
stos
clc
xchg
dec
ret
mov
mov
and
xchg
jb
ds
sti
into
and
repnz
pop
push
xchg
nop
mov
out
jae
sbb
js
jl
rcl
sbb
mov
mov
dec
aas
push
lods
jb
daa
adc
add
out
jle
mov
push
pop
cld
and
fsubr
mov
push
mov
ret
es
dec
cmp
sub
inc
xsha256
cmpsb
push
xchg
sbb
xchg
dec
fists
lret
out
mov
je
cmp
sahf
pop
jle
adc
popa
jne
loopne
inc
nop
mov
pop
sbb
outsl
jo
cmp
xor
ror
mov
lods
call
je
dec
lahf
mov
sub
mov
jb
push
cmp
xor
daa
dec
xor
sbb
imul
mov
add
push
ds
pop
daa
je
add
lret
push
mov
fldt
les
mov
cmpsb
jno
push
or
mov
push
loopne
adc
ljmp
popa
pusha
mov
dec
xchg
loop
iret
insl
cmp
in
js
in
dec
jecxz
pop
je
movsl
fildl
inc
xchg
aaa
and
jae
js
xor
inc
cmp
jl
xor
and
inc
movsb
push
sbb
rorb
mov
push
xchg
jmp
add
and
dec
das
push
sbb
push
or
sbb
and
push
lahf
xchg
and
push
xchg
lahf
out
sahf
fistpl
je
jge
in
lea
in
test
movsl
pop
das
push
es
fimuls
mov
push
push
imulb
mov
cmc
adc
lcall
movsl
push
stos
pop
jmp
jg
push
enter
out
xor
pop
sbb
addr16
inc
push
mov
sbb
cmp
shll
cwtl
inc
ret
pop
adc
xchg
or
cmpsl
popa
sbb
scas
test
pop
stos
jno
mov
js
sub
data16
xchg
mov
jnp
scas
push
int
and
jne
pop
xor
add
js
cmc
nop
ds
daa
sets
sahf
lcall
jmp
cli
mov
incl
daa
sub
sub
push
push
call
not
xchg
fadds
loop
cmc
fs
fnstcw
and
cmp
pop
xchg
adc
out
sbb
jb
mov
and
repnz
xor
or
inc
mov
pop
out
mov
push
pushf
cmp
ss
mov
push
adc
mov
and
mov
pushl
add
add
adc
dec
pop
sbb
mov
mov
mov
sarl
cmpsb
push
inc
pop
and
xchg
stos
mov
imul
jbe
shll
adc
scas
pop
adc
or
add
xchg
pop
orb
xchg
adc
or
sub
or
cld
xor
xor
nop
pusha
fcompl
inc
into
mov
movsl
clc
push
cmp
fildl
das
es
jno
ss
mov
sbb
rcrl
xor
push
out
jmp
add
and
fstpt
xchg
incl
jae
shrl
stc
stos
xor
xchg
xchg
jl
mov
mov
fwait
popf
and
rcl
fsubrs
sbb
fldenv
push
out
cmp
dec
add
inc
mov
mov
out
xchg
jo
out
hlt
push
dec
inc
scas
lret
inc
mov
push
std
int3
push
pop
sbb
inc
adc
repz
sbb
and
icebp
cwtl
or
pusha
std
out
xchg
fimull
inc
int
mov
lds
cmp
sub
xor
ss
pop
out
and
shrb
lahf
fdivrs
xchg
ja
cwtl
imul
test
push
hlt
lret
push
xchg
les
out
cwtl
outsb
lret
mov
or
addr16
push
and
cmpsl
aad
pusha
or
and
fs
jb
rcll
pop
push
mov
cwtl
dec
sub
rclb
mov
sub
cmp
aam
sub
jl
sub
incb
add
inc
push
sbb
icebp
sub
mov
scas
push
ja
imul
cmp
movsl
iret
or
xor
shrb
jmp
jb
jg
jo
lea
ret
fcoml
fs
ret
or
inc
xchg
fiaddl
lret
xchg
and
xchg
mov
cmovno
mov
or
pop
fldl
cmp
aam
stc
scas
mov
cmp
in
sub
dec
xor
sti
adc
enter
push
xchg
fisttpll
gs
dec
mul
sub
ret
aam
scas
mov
add
or
sti
psubsw
gs
shlb
les
aad
mov
pushf
hlt
fs
outsb
std
sbb
dec
push
das
lods
movsl
mov
sbb
pop
xor
jno
sbbb
jno
mov
cmc
jns
push
movsl
mov
mov
aaa
cld
out
shl
sub
cmp
hlt
pop
ja
jnp
or
dec
aad
pop
cs
hlt
push
push
test
mov
xchg
fisubl
jo
pop
jg
mov
lsl
jnp
out
test
inc
scas
mov
cltd
push
adc
adc
sub
stos
pop
das
outsb
mov
sub
jae
or
mov
in
cwtl
loope
lods
pop
cvtps2pd
or
sbb
mov
xor
stos
pop
push
or
xor
cmpsb
mov
loopne
jb
fcoml
sahf
adc
sbb
in
mov
mov
addl
sbb
pushf
mov
mov
scas
aaa
push
mov
xchg
or
call
mov
cmp
aam
pusha
jmp
push
dec
jmp
mov
loopne
xchg
jecxz
scas
xor
lods
cs
ljmp
adc
repnz
std
dec
lea
jl
pop
xchg
imul
into
dec
sbb
jl
in
fdivl
jmp
stc
push
mov
cld
nop
sub
aad
test
add
jecxz
sub
leave
es
hlt
mov
popa
fadds
clc
cmc
lret
movsl
ret
mov
test
dec
in
test
fsubrl
jge
xor
ds
jecxz
out
xor
cwtl
mov
in
jle,pn
cli
jne
outsb
add
fucomi
stos
aam
sub
loop
movsl
push
push
mov
sahf
xchg
xchg
sbb
mov
cld
sub
or
lcall
mov
sbb
or
lcall
lret
ja
add
jg
pusha
inc
mov
mov
jmp
nop
xor
test
dec
in
lds
sahf
sbb
mov
jne
sbb
loop
fsubrp
push
mov
or
js
loopne
or
sbb
out
lcall
inc
inc
jno
lds
popa
jne
dec
in
in
mov
push
cmp
mov
pop
or
inc
xor
fldcw
push
cld
inc
cmp
jg
jmp
repz
data16
fidivs
lea
loopne
popa
push
mov
adc
roll
and
lods
cmp
xchg
cmp
fs
je
cmp
psrlw
pushl
jle
dec
movsl
popa
es
es
out
mov
dec
fcmovu
sub
unpcklps
dec
inc
sahf
sti
mov
arpl
cmp
sub
out
push
and
xchg
fsubr
pop
xor
in
mov
gs
or
leave
and
pop
jmp
push
cmc
xor
or
xchg
pusha
sub
movsb
xchg
xchg
cmpb
jae
jge
xorl
test
mov
fs
outsb
rorb
mov
pop
clc
bound
ljmp
cwtl
add
or
cli
mov
pushf
test
mov
mov
sarb
cmc
push
in
pop
xchg
mov
cmc
sbb
int3
movsb
outsb
xchg
cmp
and
jae
mov
cmpsl
fisttpll
pop
sti
push
sbb
and
test
hlt
push
jge
jp
or
lock
sub
bound
mov
les
inc
xor
mov
inc
cmp
test
sbb
loop
jns
push
pop
xchg
jae
xchg
pushl
pop
ja
pop
daa
sub
in
mov
rcrb
mov
xlat
mov
sti
test
add
inc
gs
lea
xor
outsl
and
cli
add
push
or
inc
je
jne
xchg
hlt
mov
and
mov
stos
or
push
xchg
pop
loope
mov
sub
xchg
or
and
jbe
dec
jp
je
cld
mov
cmp
jp
and
scas
sbb
inc
rorl
mov
lahf
jmp
mov
mov
arpl
js
cmpsl
dec
add
ljmp
jl
xchg
addr16
dec
pop
fwait
jns
scas
or
mov
int3
push
dec
push
movsb
std
ret
xor
add
mov
cmp
les
mov
and
mov
dec
call
jg
xor
mov
xlat
or
lods
mov
ret
mov
xchg
mov
sbb
adc
mov
or
cmc
mov
pop
insl
test
shlb
mov
xor
sahf
test
sub
xor
add
pop
push
stos
adc
push
cmp
mov
xor
jecxz
push
jecxz
sbb
leave
scas
out
repnz
daa
in
xchg
lock
imul
fdivs
out
xchg
int3
sti
mov
add
push
add
push
sti
test
mov
mov
cmp
adc
insl
mov
imul
lods
xor
stc
dec
shlb
hlt
add
inc
rolb
jo
lret
sbb
in
push
in
jp
ds
fldenv
cwtl
push
add
roll
xorb
inc
sbb
cld
insb
push
xchg
jne
cmp
outsl
iret
mov
dec
jnp
arpl
mov
mov
or
shll
in
lds
sbb
ret
mov
xchg
and
fwait
and
sahf
sbb
aas
cmp
popf
lret
push
mov
into
rol
mov
lds
push
pusha
into
idivl
fidivrl
push
adc
inc
test
adc
movl
rcl
ja
imul
xor
mov
inc
or
sub
push
andb
adc
into
loopne
push
push
lret
mov
shlb
scas
in
ja
std
sbb
mov
sbb
loop
icebp
cld
dec
inc
les
push
jbe
out
jbe
and
jae
push
mov
push
stc
mov
adc
pop
inc
mov
subb
mov
push
jge
sub
test
xor
mov
pop
imul
xor
cmp
jne
icebp
loop
idiv
push
xchg
push
andl
sahf
shl
mov
sahf
inc
pop
inc
sbb
xor
dec
lret
pop
xor
or
sbb
movsl
ss
aad
rolb
sub
jnp
xchg
adc
xlat
mov
pop
scas
lahf
dec
add
mov
mov
push
lods
aaa
inc
sub
imul
rcrb
mov
les
add
out
inc
jp
mov
in
popa
fstl
shll
aam
pop
outsl
push
iret
jecxz
pop
loopne
data16
push
push
cld
push
sub
sbb
popf
movsb
ror
inc
mov
loope
sub
mov
dec
mov
adc
sbb
jg
push
dec
mov
lock
jno
cmpsl
mov
push
add
jle
arpl
dec
and
repnz
jnp
mov
xchg
mov
hlt
cld
outsl
push
shlb
inc
and
sbb
pop
mov
cwtl
in
cld
imul
clc
pop
fcoms
inc
lret
push
test
test
mov
add
cmpsb
push
cmpsb
xchg
dec
nop
inc
fiaddl
sub
loopne
ljmp
push
dec
int3
xor
pop
scas
ja
aam
es
ffree
imul
mov
xor
dec
mov
dec
cmp
les
into
test
ss
sub
pop
mov
loopne
or
out
push
out
js
lahf
punpckhwd
out
shrl
test
cmp
stos
repnz
jbe
push
xchg
mov
push
sbbl
jmp
adc
pop
lret
xchg
imul
and
pop
cwtl
xchg
ds
xchg
inc
data16
outsl
stos
sbb
or
lds
lret
cmp
push
pop
lahf
enter
mov
and
fucomip
cmpsl
adc
sahf
mov
ds
shlb
mov
and
add
jno
mov
pusha
add
shll
les
mov
push
decl
cmp
xor
mov
dec
jno
shl
adc
lahf
fldt
xor
mov
fsubs
mov
adc
push
shl
mov
pop
mov
lds
orb
aas
sbb
jo
mov
pop
adc
mov
ss
and
repz
push
loop
mov
rclb
sub
call
les
ret
pop
dec
outsl
xor
or
pop
adc
mov
jns
cmp
dec
or
lret
mov
loop
fs
cmc
pop
mov
push
mov
push
mov
lea
scas
out
repnz
movsb
push
aam
sbbl
cld
rorb
pop
push
out
cltd
sub
imul
sub
call
scas
cs
loope
ljmp
out
xorl
lock
movsb
lods
sbb
fnstenv
adcl
daa
filds
xchg
shl
mov
fucomip
lea
or
fists
inc
mov
insb
dec
jle
pop
in
jecxz
cmp
jae
mov
add
inc
fcomps
xchg
jmp
movsb
push
stos
inc
cmp
out
sbb
inc
xchg
xchg
test
pop
popa
dec
pop
push
jle
pusha
lret
inc
stos
popa
ss
clc
mov
xchg
xor
inc
dec
mov
dec
in
ret
pop
or
lock
mov
mov
mov
fldlg2
dec
push
adc
std
and
mov
fistps
inc
xchg
rcpps
mov
loopne
sahf
loop
lods
ss
push
pushf
and
mov
sub
pop
xchg
cmpsl
outsl
jecxz
xchg
push
jns
test
xor
xchg
jnp
loope
movb
pop
loop
arpl
dec
cwtl
cld
push
nop
clc
stc
pusha
jo
cs
ret
lcall
mov
push
pop
mov
cmc
mov
loope
ficompl
scas
repz
repnz
in
adc
cmp
pop
xchg
inc
lcall
popf
add
leavew
push
fstl
mov
sbb
lret
mov
jbe
mov
fs
fadds
inc
ds
shll
loopne
lods
mov
test
sub
jbe
movsb
das
jo
pushf
mov
mov
cmp
mov
push
and
lods
mov
fs
sub
xor
jp
push
and
jb
imul
mov
sbb
pop
test
dec
xchg
dec
insl
loopne
imul
pusha
jp
push
mov
cltd
js
lods
gs
insb
cmc
mov
lea
fdivl
int3
sbb
test
test
leave
add
movsb
cmpsb
mov
rcrb
mov
stos
inc
and
rorb
loop
hlt
adc
sbb
fs
adcl
mov
fldt
nop
inc
sti
cmp
push
xor
pop
in
andb
subb
dec
xchg
cmp
mov
adc
nop
xchg
jbe
and
mov
sbb
add
std
repnz
mov
addr16
scas
push
sbb
or
pop
test
mov
fmull
lock
inc
inc
in
mov
in
add
dec
xchg
in
jecxz
ja
jne
lock
out
xor
jmp
cmc
loop
cmp
pusha
cmp
addb
sub
pop
test
mov
adc
mov
sbb
cmpb
jnp
xor
mov
mov
pusha
jnp
jo
pop
cmpb
in
arpl
sub
in
cmp
aaa
sub
sub
push
or
mov
js
test
dec
lods
out
pop
stos
fcomps
ss
movsb
pop
push
mov
sub
cmp
lcall
fcomip
dec
sub
inc
hlt
mov
dec
dec
cmp
mov
dec
cmp
xchg
lret
loopne,pt
jnp
bound
jecxz
adc
inc
push
loopne
fadd
or
mov
xlat
mov
inc
test
xchg
test
out
mov
adc
jbe
push
aas
dec
rcll
sbb
sbb
jg
dec
mov
dec
in
mov
dec
push
add
mov
jae
xchg
mov
mov
aad
scas
sbb
cltd
or
add
mov
cs
push
add
fdiv
movsl
pop
push
and
push
in
sbb
adc
pop
mov
add
idivl
mov
loop
fldcw
pop
push
mov
lock
arpl
jae
int
insb
adc
push
and
out
sahf
and
jae
mov
xlat
int
xchg
lret
mov
push
jecxz
into
sbb
inc
adc
pop
push
sarb
les
into
xchg
sahf
mov
or
fnstenv
fstpl
push
xor
cmp
rorl
fdivrl
mov
fistpl
push
scas
hlt
mov
mov
push
cmp
fcompl
clc
mov
lds
mov
test
jg
sub
daa
popf
leave
mov
push
aas
mov
sahf
cmpsl
fimuls
cmc
int3
stos
loope
cmpsl
jmp
jmp
rcrl
adc
insl
or
inc
popf
jmp
bound
adc
fstl
push
lret
jae
inc
enter
add
repz
fadds
and
cmp
jae
jns
mov
pop
out
lahf
sbb
les
pcmpeqb
mov
mov
lods
push
loopne
mov
arpl
cmpsb
lahf
dec
fists
add
test
test
push
fdivs
xchg
inc
movsb
icebp
adc
lods
insl
pop
imul
mov
fsubl
scas
push
jae
mov
push
scas
jo
addl
pop
sub
fmuls
mov
std
mov
scas
xchg
out
add
sbb
jl
ja
mov
lahf
xchg
xchg
sub
mov
ljmp
js
fwait
dec
clc
add
mov
dec
and
test
add
int
jo
jb
loope
cmp
jns
iret
gs
pop
push
pop
popa
imul
xchg
jmp
jge
insb
repz
jl
adc
movsb
ja
lret
loop
fildll
sub
cmpsb
push
sub
pusha
push
mov
enter
aas
xchg
adc
andb
negl
adc
pop
das
les
mov
lret
dec
mov
pop
xor
iret
add
pop
sbb
and
mov
xor
push
iret
cmpl
mov
sub
jbe
xchg
arpl
aam
loopne
mov
in
dec
adc
sbb
and
jl
fwait
cltd
int
mov
mov
lahf
test
enter
and
mov
rcll
jle
adcb
rcrl
mov
push
sbb
jmp
loopne
pop
aas
sub
aam
xchg
loop
jmp
and
bound
xor
xchg
jns
cli
popa
js
insb
cwtl
adc
sbb
jge
pop
ret
xchg
push
filds
sub
fistpll
out
xchg
movsb
int
loopne
mov
pop
push
mov
ja
or
or
xchg
and
mov
inc
push
push
clc
push
ret
push
ja
sbb
stos
xchg
scas
jae
sbb
dec
insl
ret
and
fs
inc
subb
cmpb
sub
fdivs
jb
scas
push
or
fldl2e
and
out
incb
ret
xor
shll
scas
das
in
stc
cmpb
and
stc
shrl
cvtdq2ps
sub
sub
pop
and
in
adc
aas
add
aam
fs
dec
popa
shlb
int3
cmp
cmpsb
adc
int3
addr16
xchg
rorl
rcl
mov
cmp
xor
inc
fsubrl
dec
adc
sbb
pop
dec
inc
ljmp
cmp
fwait
cs
add
jecxz
cmp
push
xchg
xchg
mov
ljmp
popa
hlt
sub
jmp
sub
push
dec
jecxz
insb
ljmp
sbb
scas
or
cmpsl
sti
popl
push
cmp
lods
sub
adc
sub
mov
arpl
repnz
cmp
mov
fstpt
lods
xor
cli
cmp
jl
mov
xchg
jmp
sbb
fists
hlt
shlb
or
std
mov
jne
enter
inc
and
jmp
inc
or
pushf
std
out
push
divb
push
push
ffreep
daa
shrl
movsb
mov
mov
cmc
adc
insb
insl
xchg
je
in
pushf
push
lret
or
sbb
jae
pop
popa
je
sub
jns
repnz
test
out
mov
test
lock
and
jne
icebp
sbb
push
pop
andb
pop
outsb
ja
dec
mov
subl
pop
jns
sbb
push
sbb
or
testb
pop
aam
push
cmp
test
ret
pop
fldcw
mov
xor
test
mov
gs
mov
jnp
push
pop
or
int
mov
sub
out
pop
pop
add
loope
nop
lods
cmp
dec
sub
sbb
dec
xchg
int3
lods
fldt
mov
cs
xchg
xchg
add
fwait
aam
stc
fsubl
mov
imul
fisttps
dec
insl
addr16
je
dec
rorl
mov
jo
mov
sub
ss
pusha
jbe
push
xlat
int
pop
rcll
push
push
imul
push
sti
push
icebp
sub
jmp
jns
push
sub
cmpsb
rcrb
jg
push
nop
arpl
mov
outsb
push
std
in
add
cli
mull
mov
int
mov
jne
jne
fmull
inc
hlt
xlat
mov
mov
jbe
idiv
jno
les
fnstenv
aad
xchg
mov
adc
pop
sbbb
mov
mov
push
cwtl
dec
pushf
push
dec
imul
xchg
sbb
dec
lea
repnz
insl
adc
outsb
sbb
or
xor
jbe
mov
adc
mov
xchg
andl
push
sbb
mov
jo
je
rclb
addl
lods
in
mov
add
int3
lret
insl
aam
push
sub
sub
outsl
jmp
cli
orb
cmpsl
gs
je
ficoms
ljmp
mov
ds
aas
xchg
sub
mov
je
int
cld
jle
sub
jne
push
pop
lds
lds
push
mov
ror
pop
mov
mov
and
repz
adc
lock
leave
out
mov
xlat
or
loopne
dec
inc
decb
adc
mov
addl
test
mov
push
jle
pusha
pushl
cmpsb
sub
into
popl
movsl
add
add
and
movsl
xlat
out
data16
pop
jo
sahf
fdivp
add
cmpsl
ljmp
ss
test
dec
sti
push
or
push
sbb
adc
cmp
fidivl
add
or
sbbl
mov
loope
addr16
sti
addr16
jg
lods
mov
and
inc
mov
in
inc
lret
in
loope
test
ret
pop
lock
pop
pop
out
lods
push
in
out
jbe
sbb
jl
and
sti
out
or
or
lcall
lret
rcll
pop
dec
add
pop
adc
mov
adcb
fcoml
rcr
fdivrl
sbb
lea
je
ds
addr16
fidivl
ret
scas
xor
jg
dec
mov
adc
aaa
test
cmpb
and
jb
push
and
cwtl
jo
inc
lret
xchg
lds
loope
add
xchg
sbb
shll
inc
loop
adc
mov
into
ljmp
inc
cltd
cli
inc
cmc
in
xor
mov
cld
repz
xchg
mov
inc
ds
test
inc
rolb
push
je
cli
lahf
jbe
inc
das
mov
or
inc
inc
adc
push
inc
or
pop
cmp
sbbl
fstpl
addr16
lret
mov
ja
mov
outsl
loop
xchg
enter
dec
and
ret
adcb
mov
add
addr16
xor
cmc
mov
push
dec
mov
cli
test
in
add
pushf
dec
es
cmp
bndmov
out
jg
ret
mov
test
push
in
cmpl
sti
sub
insb
pop
ret
adc
jne
push
jne
rorb
mov
dec
inc
mov
aam
repnz
imul
mov
inc
fs
sbb
push
add
cmpb
pushf
lea
pop
out
xchg
xchg
mov
push
inc
and
fsts
std
lds
arpl
dec
out
pop
loope
je
test
xor
sbb
bound
cmp
and
les
adc
adc
jae
xor
ja
int3
mov
cmp
jae
imul
push
scas
mov
push
xchg
pop
ds
pop
idivb
xchg
or
cmovnp
sub
call
mov
push
push
dec
outsb
adc
ss
jns
addr16
jmp
fwait
cmp
sub
leave
movsb
adc
idiv
mov
arpl
js
mov
adc
dec
xchg
mov
add
add
mov
insb
popf
mov
xchg
inc
ss
pusha
push
mov
je
rcrb
push
dec
cmp
and
xlat
cltd
popa
sbb
xchg
adc
scas
xchg
inc
int3
mov
mov
out
xchg
pop
or
cs
xchg
lock
xchg
test
jnp
pop
pop
pop
js
insl
adc
insb
add
ja
xlat
sbb
scas
int3
addr16
fnstsw
sahf
je
nop
in
push
sub
xor
mov
std
or
insl
xchg
sub
jge
jle
mov
lock
xor
dec
or
rcl
ljmp
popf
scas
jmp
aam
add
inc
addr16
pop
mov
mov
shrl
push
sub
iret
loope
aaa
push
hlt
test
idivb
sbb
jo
lea
lock
pop
in
xor
lea
adc
incl
and
xchg
fwait
fiaddl
sbb
lea
ds
repnz
insb
loop
mov
add
inc
sub
sbb
pop
mov
rolb
scas
adc
mov
cltd
xchg
je
push
movsb
jle
xor
out
inc
sbb
call
mov
mov
iret
mov
fnstenv
into
adc
and
jg
xor
out
test
imul
add
lods
repnz
fninit
jb
out
pop
sbb
cmp
fbstp
jne
imul
adc
dec
ja
nop
mov
or
aam
stos
scas
clc
lds
jb
mov
pusha
lock
hlt
faddp
and
dec
mov
xor
cmpb
scas
add
movsb
xchg
jb
mov
push
dec
inc
scas
mov
lcall
xor
movsb
orl
out
subb
xchg
outsl
fs
sbb
adc
dec
dec
push
adc
call
movsb
bound
pusha
rcrb
ja
scas
inc
add
lcall
and
aaa
shll
sub
and
mov
mov
pop
dec
sahf
stos
sbb
xchg
jmp
jmp
or
stos
sbb
fdivrl
sahf
out
call
xchg
into
cwtl
xchg
rcrl
repnz
in
sbb
scas
inc
cmp
mov
hlt
mov
in
imul
mov
add
stos
xor
push
divps
fisttps
insl
mov
test
scas
mov
mov
sbb
add
lods
sub
popa
repnz
and
inc
jo
test
mov
sbb
flds
jmp
xchg
int
inc
jl
loop
dec
sub
cli
stos
push
mov
xor
imul
add
aam
cmpb
dec
push
out
push
push
dec
mov
xor
ret
decb
add
cmpsb
sbb
mov
jae
roll
pop
xor
cld
fwait
cmpl
mov
add
sub
push
addl
leave
mov
xchg
lock
cmp
leave
testl
mov
pop
pop
out
xchg
add
cwtl
orb
stc
ret
xchg
push
mov
or
xchg
push
jl
mov
dec
adc
jl
xor
and
mov
insl
int
pop
mov
xchg
leave
aad
cli
stos
aad
xchg
dec
and
cmp
add
in
aas
movsb
jb
sub
rcl
lahf
pusha
inc
adc
rcll
mov
std
mov
adc
cmpl
idivl
movl
shll
rcrb
movsl
popf
bnd
ja
xor
arpl
ret
ret
xor
push
mul
mov
xchg
in
or
jnp
dec
enter
hlt
lret
ret
lock
xor
add
lock
pop
hlt
ret
xchg
aad
xor
and
rclb
pop
sub
bound
xchg
mov
sub
sub
inc
sbbl
outsl
fdivl
repz
mov
shr
movsb
adc
cmp
stos
mov
sub
pushf
push
mov
in
cwtl
jns
psubw
mov
add
adc
and
pop
data16
or
xor
push
xchg
pop
add
aas
ja
inc
int3
sbb
lret
lods
dec
loopne
fsubs
into
xchg
je
mov
or
xchg
dec
sar
es
inc
xor
adc
inc
mov
sbb
into
lret
outsb
jp
dec
mov
fs
shr
shl
subl
jne,pn
fbld
idivl
add
adc
mov
or
pop
cmpsb
sahf
sub
imul
and
push
mov
aad
cmp
test
mov
insl
sub
push
enter
fiaddl
rorl
xchg
inc
cld
gs
jge
inc
xchg
inc
test
insb
pop
jmp
mov
or
call
sahf
roll
xor
adc
push
movl
push
push
jl
sti
xchg
mov
pop
adc
movsb
incb
adc
pop
data16
jp
daa
sarb
pop
cmp
pop
ret
arpl
fnstenv
test
mov
sbb
inc
mov
je
jp
leave
dec
in
add
test
lods
mov
inc
jne
adc
popa
jl
mov
arpl
xchg
setne
aas
cs
imul
mov
test
pop
and
pop
mov
mov
inc
xchg
mov
cli
lods
rcr
cld
jo
pop
fstps
pop
mov
aam
call
das
fdivrs
rep
inc
inc
mov
add
repz
adc
lods
and
push
xor
mov
adc
xchg
or
inc
adc
mov
cmp
push
cmp
mov
loope
jae
and
fmul
dec
insl
lahf
jne
dec
call
push
pop
aaa
int
or
adc
and
fildl
test
lcall
ret
rorl
xchg
aam
notl
imul
xchg
jge
and
imul
mov
rcl
ret
and
fiaddl
jo
ja
mov
mov
xchg
xchg
xor
fidivrl
add
imul
fsubrs
dec
jo
inc
lahf
mov
xchg
add
inc
sub
adc
sbb
adc
ljmp
pop
jne
das
out
jp
mov
or
sbb
popa
loop
mov
aas
imul
pop
movsb
mov
jle
or
out
lods
nop
pop
ds
push
mov
sarb
imul
sub
in
subl
cmpsb
xchg
push
jp
repnz
mov
icebp
imul
pop
push
xchg
dec
cmpsb
pop
fwait
sub
out
fcmovu
imul
lret
push
add
int
cmpsl
push
jae
xchg
test
jmp
add
mov
push
cli
lds
sub
xchg
mov
pop
div
mov
push
push
andb
cmp
fsubrs
sub
pop
rorl
shl
rcl
inc
lret
sub
or
loope
cmp
cmp
ljmp
mov
sbb
jg
sbb
push
cs
add
inc
ljmp
or
cmp
test
or
mov
sub
xchg
xchg
sbb
stos
or
sbb
add
mov
das
imul
shrb
mov
les
push
stos
fs
pop
negb
lods
mov
sbb
cwtl
inc
pusha
add
rclb
dec
popa
dec
aas
test
adc
inc
or
push
notb
xorb
or
mov
popa
adc
jnp
pop
add
add
push
pop
pop
xchg
test
int
cmpsl
mov
and
jb
or
adc
mov
loop
pushf
fdivrl
out
hlt
repz
mov
ds
cli
imul
lret
ja
fsubrs
rcll
mov
jmp
cmpsb
xor
gs
aaa
int
loope
mov
lods
mov
sahf
mov
nop
and
dec
pop
sahf
push
ja
shlb
mov
push
mov
mov
out
dec
dec
dec
pop
aad
adc
cmp
cmp
andl
jo
mov
jg
pop
push
inc
les
cmp
jmp
notl
inc
adc
jns
das
mov
dec
test
popf
mov
mov
jg
clc
jge
idiv
cmp
xor
jnp
std
lsl
mov
mov
stos
fs
or
sub
mov
dec
clc
lcall
iret
mov
adcl
mov
inc
adc
xchg
jae
or
ds
pushf
dec
mov
mov
mov
mov
rcrb
dec
jbe
pop
ffreep
jb
jns
jbe
bound
cmc
mov
out
pop
cmp
mov
sbb
mov
out
push
push
and
packssdw
nop
in
push
xchg
and
ret
andb
gs
sbb
jns
xlat
hlt
pop
loop
sbb
addb
fistpll
inc
xor
adc
out
mov
mov
repnz
sbb
and
lcall
ds
mov
cmp
les
enter
jno
dec
push
pop
add
scas
int
mov
hlt
arpl
sub
nop
jmp
dec
dec
cmc
rclb
jae
dec
xor
pop
cmp
adc
enter
mov
movsl
push
addr16
cmp
movsl
test
cmp
gs
xchg
fisubl
cwtl
push
jl
or
cmp
jbe
fimuls
cli
cmp
mov
scas
xchg
push
sbb
movd
test
dec
mov
sahf
dec
pop
or
add
lea
add
test
inc
xchg
das
push
rep
mov
mov
stos
sahf
rcll
pushf
gs
xorl
dec
adc
aam
in
mov
xchg
xor
sub
orl
lods
out
or
sbb
mov
imul
pop
stos
sub
dec
adcl
cli
pushf
dec
xor
xor
and
or
jmp
sub
mov
mov
xchg
inc
cld
inc
jmp
rclb
aam
add
fstpl
xchg
mov
mov
xchg
dec
xchg
fmul
pop
mov
stos
mov
into
xchg
nop
mov
or
mov
cmp
pop
scas
daa
scas
pop
dec
leave
jne
mov
je
pop
xor
imul
cmp
jmp
clc
sbb
and
xor
push
lock
dec
or
pop
lahf
pushw
insl
addb
dec
in
mov
mov
pusha
push
mov
jge
jo
ret
and
in
inc
dec
xor
jp
pop
pop
mov
push
mov
add
icebp
insb
mov
fwait
sbb
in
inc
in
movsl
mov
or
fwait
dec
xchg
sbb
mov
dec
leave
cli
mov
int3
jl
out
ja
jbe
sbbl
leave
stos
imul
sti
jmp
mov
sbb
jne
xchg
sbb
mov
lock
fs
mov
push
cltd
addb
jmp
mov
and
xor
xchg
mov
divb
and
ret
jae
jg
repnz
cmc
jmp
ds
ret
test
orb
xor
cmpsl
lret
dec
or
jp
mov
fdiv
or
push
faddl
add
sahf
or
movsb
or
out
ja
jg
mov
out
adc
aad
pushw
stos
mov
dec
mov
mov
jne
in
insl
in
add
lea
cmp
sbb
mov
jge
outsb
test
scas
sbb
push
enter
addr16
rcrb
cmp
aaa
popl
push
cmp
mov
test
cmp
mov
hlt
sbb
sahf
fs
aas
dec
stc
sub
rclb
test
imul
xor
rorb
jo
movsb
jb
lods
int
call
mov
pushf
insl
inc
bound
iret
add
dec
dec
mov
repz
pop
hlt
cmp
ss
cmpsb
or
mov
cmp
loope
mov
loope
ret
push
pop
sbb
inc
cmpsl
in
push
xlat
dec
cld
and
cmp
out
mov
jge
or
out
rol
xchg
fidivrs
jbe
pop
out
mov
rorb
push
mov
sbb
jl
or
adc
mov
dec
stos
xchg
and
adc
cmpsl
push
mull
jb
je
fisubrl
push
movsl
cmp
add
cwtl
lock
dec
jp
fnstcw
dec
xchg
xor
push
inc
iret
mov
add
sbb
dec
and
jecxz
cmp
mov
mov
pop
test
xchg
pop
test
popf
rcrb
test
xchg
addr16
test
add
lcall
adc
dec
dec
add
dec
sbb
jo
cmp
pop
jge
xchg
mov
mov
adc
pop
pop
xor
adc
rorl
cmpsl
push
pop
pop
pop
inc
and
sbb
xor
js
pop
xor
aam
jne
sbb
pop
inc
cli
cmpsb
repz
or
subb
loopne
js
add
inc
xlat
pop
pop
js
outsb
popa
mov
arpl
cli
ficomps
insl
jge
insb
add
xchg
mov
adc
adc
adc
inc
pushf
repnz
cmp
inc
jno
test
ja
dec
fsubs
sub
jne
int3
cmp
inc
iret
mov
pop
clc
pop
int
stos
bound
cmpsl
popa
or
dec
xor
mov
jnp
and
xchg
aam
in
or
imul
stc
pop
inc
hlt
icebp
ret
movsb
mov
jmp
inc
je
add
pop
mov
mov
ret
in
ret
push
mov
outsb
arpl
sub
sti
push
repnz
mul
mov
idivl
std
dec
lcall
pop
jmp
cltd
add
sub
mov
dec
push
nop
int
ja
shll
clc
outsl
inc
mov
divb
inc
andl
lock
dec
push
in
mov
loop
mov
test
test
jo
sub
cmc
push
pop
and
mov
dec
mov
lock
incb
insb
jl
test
adc
dec
xor
in
mov
mov
cwtl
inc
adc
jns
mov
mov
jno
stos
xor
sbb
push
scas
cmpb
scas
icebp
cmpsl
out
cmp
cmc
lahf
test
mov
aam
aam
push
sbb
fwait
or
inc
rorl
cmpsb
xor
add
cli
dec
scas
lret
fisubrs
iret
push
or
js
aaa
jg
in
ds
mov
sbb
andb
inc
out
int
lods
push
or
push
cmove
ja
lods
inc
pushf
mov
add
mov
sbb
inc
rol
icebp
inc
repnz
mov
fsubrl
cmp
mov
.byte
rol
sbb
fisttps
jle
jl
jle
leave
test
pop
jp
cltd
or
mov
push
sub
pop
aam
int3
lret
cmc
xor
xchg
fists
outsb
cltd
pop
lahf
xchg
sbb
pop
aam
xor
pop
xlat
xor
xlat
push
es
adc
xchg
pop
repnz
push
cmpsb
cmp
xchg
rcll
jae
testb
adc
rolb
dec
stc
push
loop
iret
out
xchg
cltd
outsl
hlt
dec
fmul
popa
in
sub
mov
mov
push
and
ret
and
xchg
nop
mov
sub
cmp
dec
ljmp
xor
and
push
cmpsl
dec
lcall
or
stc
inc
aam
scas
shlb
xor
mov
xchg
les
fdivrs
lret
sarb
pop
add
mov
imul
leave
jbe
in
ja
xchg
out
lods
xchg
cld
popf
shr
je
cwtl
test
fiaddl
dec
test
stc
call
jnp
daa
xchg
cli
daa
cmp
fwait
test
jo
push
and
stc
lods
jle
adc
arpl
add
add
std
clc
push
gs
movsb
push
sub
int
mov
loop
jbe
jb
xchg
mov
sbb
add
inc
fistps
enter
out
mov
adc
icebp
shll
repz
mov
test
jno
dec
cmp
add
sbb
pop
test
mov
fdivr
ss
jg
dec
cmp
push
push
les
mov
rcll
inc
gs
ds
adc
out
inc
pop
pop
or
push
sbb
das
mov
inc
mov
out
sarb
data16
mov
jo
cmp
jb
dec
clc
imul
push
push
push
cmp
nop
sbb
inc
andb
std
fs
fs
mov
pop
scas
jmp
leave
fists
cs
xor
pop
pushl
ljmp
fistps
jns
inc
cltd
sub
push
pop
sahf
dec
cmpb
mov
shll
jmp
push
test
xlat
dec
lret
adc
mov
jmp
dec
mov
lock
add
les
imul
ljmp
popf
sub
cs
push
pop
cmpsb
adc
jmp
fisubrs
pop
add
ficoms
ret
aam
iret
shlb
imulb
lea
push
mov
icebp
out
and
add
cmp
cmc
test
pop
aad
push
movups
es
dec
mov
lods
ljmp
pop
test
cmp
jmp
les
scas
adc
inc
push
or
pop
icebp
push
sti
sub
push
push
enter
out
mov
push
mov
out
or
jmp
push
icebp
xor
jmp
int
push
mov
mov
test
push
addr16
xchg
jmp
ret
in
adc
xchg
sub
add
and
mov
pop
and
icebp
xor
dec
rolb
mov
add
scas
int
fwait
sbb
rorb
mov
pusha
mov
push
dec
inc
clc
fldl
and
jg
adc
inc
and
popa
orl
dec
mov
sub
adc
jns
jge
adc
sub
sub
imul
mov
push
adc
ret
ss
lret
xlat
fisttpl
sub
enter
add
cmp
mov
andl
mov
mov
jmp
sub
dec
fwait
inc
out
fstpt
outsb
push
cmpsl
inc
fsubrl
stos
xor
mov
add
cmp
add
clc
mov
jecxz
cld
mov
ja
sbb
imul
jno
mov
clc
loopne
ljmp
lods
out
xlat
aas
call
leave
insb
or
mov
filds
or
int3
lock
jo
and
push
sub
jae
jle
movsl
sub
adc
xor
leave
pop
stos
divl
pushf
out
jle
pop
mov
loopne
add
jno
jg
jbe
add
jbe
mov
in
loope
push
jmp
mov
pop
aad
iret
push
inc
jae
decl
pop
jmp
lods
cwtl
mov
ficoml
pop
int3
imul
icebp
or
je
xor
pop
imul
jg
pop
inc
mov
mov
pop
int3
jns
mov
jp
dec
aam
add
xchg
xor
mov
push
outsb
adc
cmpl
loope
pop
sbb
lods
shlb
pop
outsl
push
pop
aad
or
rcrb
arpl
je
int3
or
dec
ljmp
mov
cmp
xchg
rolb
lcall
test
repnz
jne
jb
outsl
or
incl
loopne
inc
sbb
xchg
sbb
mov
add
ljmp
adc
je
mov
jno
xchg
sets
inc
cmp
arpl
jle
outsl
sub
cmp
cmp
pop
sbb
push
cmp
adc
filds
sub
xlat
imul
adc
adc
xchg
repz
mov
es
fs
push
mov
jge
mov
inc
xchg
loopne
xor
scas
rclb
pusha
mov
jmp
int3
jg
adc
lock
mov
cmp
push
mov
push
negb
sti
sub
mov
add
loop
or
push
add
cmp
cmp
mov
lock
rcr
in
fwait
cli
out
test
sbb
pop
mov
xor
ja
sub
bound
outsl
clc
xchg
xchg
push
scas
roll
loopne
sti
int
ret
mov
mov
daa
inc
lds
or
and
push
notl
push
maxps
clc
sahf
ja
repz
es
data16
in
negb
aas
rcl
mov
push
xor
jb
out
mov
sbb
ret
ds
dec
aas
cs
or
sub
sub
daa
push
jmp
sti
stos
mov
repz
add
std
cwtl
test
cmc
lock
jle
cwtl
shrb
call
push
iret
mov
fdivr
adc
xchg
loop
std
and
push
fildl
xor
sti
call
or
popa
mov
push
insb
mov
mov
fs
outsb
testb
icebp
sbb
mov
nop
popf
jecxz
aaa
cmp
xor
gs
or
rorb
pop
daa
call
pop
test
mov
js
xchg
ret
jnp
xor
gs
stc
scas
movsb
data16
cmp
adc
jmp
enter
pop
mov
cwtl
enter
inc
xchg
pop
ret
push
test
cmp
dec
mov
pop
imulb
sbb
jnp
and
sbb
test
mov
jecxz
mov
cli
ss
ss
daa
cmp
cmpsl
xchg
sahf
lcall
ret
xchg
push
xor
mov
cmp
mov
xchg
adc
std
pusha
inc
pushf
adc
mov
scas
testl
cmp
std
jns
mov
inc
mov
out
push
sbb
nop
call
mov
call
xchg
cmp
mov
pop
ss
or
cwtl
sub
or
cmpsb
lds
jae,pn
add
add
dec
stc
push
cltd
jne
jp
lea
pop
cs
stc
into
mov
adc
loope
repz
fldl
mov
push
sti
xchg
out
sub
les
push
movsl
mov
movsb
add
cwtl
jnp
imul
jmp
cs
cmc
imul
aaa
mov
out
xchg
insb
ficomps
jbe
inc
ret
xchg
mov
loopne
in
cwtl
or
mov
jbe
add
sahf
push
mov
repnz
lods
mov
test
mov
pop
push
dec
test
push
cmp
ficompl
cmp
popa
dec
fstps
repz
push
or
les
movsl
add
push
xchg
fisttpl
into
pop
les
cmp
xor
repz
push
jno
fsubrs
loope
and
sbb
adc
aas
loopne
std
ljmp
imul
mov
jle
test
ret
int3
insb
imul
in
bswap
xchg
outsl
inc
or
cbtw
jno
fwait
inc
idivl
sub
mov
js
out
out
xchg
dec
lcall
cmpsb
es
in
xor
add
cmpsb
rcll
or
shlb
out
dec
pop
add
arpl
ficoms
or
inc
imul
icebp
insl
imul
cmc
jge
pop
cwtl
hlt
mov
es
int
cmpl
pop
xlat
mov
cli
shlb
lcall
dec
mov
jae
insb
lahf
in
outsl
and
push
sahf
in
inc
nop
stos
jge
jecxz
ss
push
dec
add
xchg
pop
je
mov
xchg
mov
push
fisttps
xrelease
lds
xorl
mov
push
sub
out
or
adc
lea
loopne
jns
jbe
repz
push
mov
push
jp
jl
cwtl
nop
sbb
or
shll
or
jo
nop
int
mul
push
subb
jo
in
movsb
aad
add
push
jp
ds
push
in
add
mov
cmpsb
cmp
adc
jl
jmp
lret
sub
pop
fcompl
pop
and
into
mov
fwait
xor
xchg
xor
nop
and
mov
inc
xlat
out
hlt
jecxz
lcall
mov
or
mov
adc
push
inc
ds
sbb
mov
cmpsb
leave
call
or
mov
int
mov
adc
cmp
xchg
clc
ror
push
mov
mov
adc
adc
xorb
pop
fnstcw
inc
pusha
testl
fwait
mov
xchg
test
mov
mov
add
jns
or
jge
xlat
mov
andb
push
das
dec
xor
sub
fcmovb
scas
int
clc
jmp
testb
inc
insb
hlt
dec
cmp
adc
fimuls
mov
cmp
pop
sbb
js
lret
xchg
or
movl
jecxz
mov
test
dec
add
lods
lea
inc
cmp
scas
pop
test
push
xor
lret
jb
aaa
pop
dec
or
mov
mov
mov
cs
cmp
fidivrs
icebp
push
out
mov
pop
cmp
jns
out
stc
ljmp
xor
fcompp
adc
xchg
pop
aam
or
testl
cmp
adc
pushf
aad
jmp
shll
ljmp
fcmovb
fbld
push
imul
ljmp
mov
addps
imul
int
rolb
arpl
mov
adc
mov
xorl
mov
push
aaa
clc
in
add
imul
shl
cmp
daa
insl
imul
shlb
and
faddl
mov
push
rorl
inc
addr16
int3
imul
ror
jecxz
in
fisttpll
je
xlat
cmp
jnp
adc
sti
xchg
and
add
sti
enter
pop
dec
insl
adc
mov
mov
movsb
mov
decb
mov
and
aad
int3
inc
jns
fwait
orl
test
ds
sub
push
loope
and
enter
adc
lock
cli
cli
mov
movsb
pop
ja
jne
mov
mull
xor
xor
pop
pop
je
xchg
movsl
jnp
jno
out
adc
mov
dec
leave
pop
inc
add
enter
ret
fcmovnb
push
sub
pop
sbb
rcll
dec
pusha
sub
push
and
xor
lahf
add
ljmp
sbb
jbe
inc
adc
cmp
test
gs
push
mov
lea
push
lret
data16
cmp
in
in
mov
cmp
push
mov
fsubrs
xchg
xchg
in
mov
and
data16
cmp
jne
xchg
fsubrs
mov
mov
mov
cmpsb
into
lds
std
lret
jae
xor
mov
xchg
pop
add
dec
inc
dec
cmovbe
jns
idivb
dec
dec
mov
ret
stos
cmp
or
inc
xchg
push
lahf
sub
push
xchg
pop
inc
xor
push
pop
pop
pusha
mov
and
mov
andb
pop
inc
bound
sbb
in
adc
decl
out
loopne
xchg
inc
add
dec
ret
jmp
shlb
xchg
sub
pop
popf
lahf
xor
adc
dec
pop
nopl
lahf
ret
insb
je
mov
jge
sbb
add
in
xchg
and
movsb
stos
imul
mov
std
xchg
lcall
fbstp
daa
rcrl
mov
jb
leave
aam
mov
or
iret
movsl
or
pop
add
xor
adc
pop
mov
lods
daa
cmp
cmp
scas
jns
repz
push
cltd
int3
adc
push
enter
bound
hlt
test
shrb
inc
add
and
imul
push
and
fisttpll
jbe
movsl
mov
adc
ljmp
mov
rcrl
pop
jle
ss
cs
and
mov
bound
inc
fdivs
sbbl
push
mov
fs
inc
cmp
inc
mov
sarb
mov
xor
and
inc
jmp
sti
xchg
xchg
xchg
fisubs
ret
pop
lret
jmp
and
sub
adc
mov
sub
popf
or
push
shlb
jns
fldl
jecxz
roll
adc
push
and
jl
insl
repnz
mov
cmp
rcl
ja
jecxz
mov
mov
das
cs
nop
cmpsl
add
adc
dec
adc
ds
test
mov
xor
sub
push
roll
jecxz
xchg
pop
lds
int
shlb
aad
lcall
lds
loop
cmp
ds
mov
test
inc
psubusb
jns
fimuls
loopne
iret
das
mov
adc
mov
movsb
pop
data16
jmp
stos
sbb
or
mov
shr
pop
fdivs
fs
fisttps
lret
push
mov
pop
mov
shll
rclb
adc
xchg
repz
ljmp
cmpsl
mov
ljmp
push
xor
cwtl
inc
repnz
mov
cmp
mov
loopne
loopne
push
or
sub
mov
int3
xchg
out
jne
gs
mov
pop
xchg
mov
xchg
or
inc
stos
stos
push
jae
inc
jns
test
das
les
cs
lods
push
push
outsl
jg
loop
nop
mov
inc
mov
mov
sub
or
and
fwait
test
popf
mov
inc
mov
sub
mov
leave
push
mov
jmp
push
movsb
lcall
mov
xchg
stos
jmp
or
cmp
nop
and
dec
xchg
mov
jl
shrl
dec
cmp
arpl
jbe
sbb
add
and
fwait
enter
jl
jnp
pop
mov
negl
jl
ljmp
inc
shl
sbb
daa
iret
ret
mov
leave
cmp
lret
pushf
cmp
divb
stc
lahf
popa
es
jge
aad
mov
mov
sbb
sub
rclb
lods
dec
mov
or
push
xor
or
addr16
hlt
mov
and
fwait
test
mov
jl
repnz
pushf
aaa
hlt
fsubp
les
mov
and
notl
movsl
mov
mov
sbb
adcb
lock
xor
aad
movsl
inc
mov
out
cmpsb
sbb
insb
or
inc
imul
int3
data16
in
mov
xchg
lcall
clc
aaa
lret
stos
push
dec
push
mov
pusha
in
out
in
cmp
adc
cmp
stc
xchg
mov
add
mov
lea
push
rcr
sub
out
xor
mov
pop
add
les
mov
mov
dec
imul
js
add
cs
iret
fstpt
fbstp
in
mov
popf
mov
xor
int
mov
imull
fsts
lcall
or
xchg
addr16
jge
add
cmp
cmp
mov
in
fucomi
lds
push
jl
push
and
xor
inc
jns
cmp
cmp
mov
mov
lcall
pop
addb
push
adcb
cmpsl
das
xchg
jl
or
rclb
test
lods
inc
push
test
dec
jnp
cli
jae
idivl
hlt
jp
cmpsb
ss
stos
test
fs
sbb
inc
push
adc
jecxz
out
imul
inc
and
xchg
jl
mov
adc
bound
cltd
mov
in
in
sbb
and
jb
xor
inc
addr16
and
es
sbbb
and
push
push
in
pop
iret
sub
out
cmp
push
ds
cmp
dec
mov
jo
xchg
out
lock
sub
adc
std
pushf
mov
sbb
inc
sub
daa
pop
test
xor
xor
cmpsl
jbe
fcoml
ror
fsubs
es
test
mov
or
cld
sti
sbb
js
add
ljmp
add
xor
dec
mov
lock
arpl
and
cld
sub
sbb
and
or
sub
push
mov
repnz
dec
cmc
test
mov
push
or
mov
xchg
and
xor
lret
cmc
and
bound
lds
inc
sub
jne
add
imul
add
jne
xchg
dec
sbb
sbb
shlb
push
cmc
push
cmpsb
scas
dec
inc
sub
rol
sti
sti
lds
mov
mov
mov
cmp
jp
add
mov
cmp
leave
shll
dec
pop
arpl
cli
pop
add
pop
test
fwait
cmpsb
test
sti
imul
add
lds
sbb
push
push
jle
pushf
ret
pop
and
outsl
sbbl
and
fimuls
cmpsl
push
add
rcll
rcll
int
dec
out
fildl
cmp
jp
jns
pushl
jmp
call
mov
jbe
mov
xchg
pusha
and
cltd
xchg
clc
sbb
cmp
inc
sahf
dec
stc
sub
and
addb
jg
mov
mov
push
insl
iret
jmp
sbb
lret
cmpsl
mov
jns
inc
jo
sub
fisubrs
jns
sbb
stc
into
dec
mov
sahf
in
test
addr16
mov
dec
movsb
fistps
scas
xor
xor
lcall
jecxz
and
in
lcall
and
cmp
call
or
inc
jl
sub
into
add
jne
pop
ret
jle
mov
sub
iret
xchg
out
out
mov
and
nop
fwait
xor
cmpsb
aad
int
enter
push
sub
dec
data16
lods
xchg
pop
scas
mov
jg
scas
mov
lods
sbb
xor
out
imul
pop
daa
add
sbb
ret
test
lcall
mov
xchg
sub
sub
jmp
push
or
sub
and
adc
sbb
cmc
pop
sahf
push
push
dec
push
mov
std
mov
push
push
inc
std
xor
xor
adc
arpl
cmp
sub
jno
dec
pusha
and
sbb
pushf
fsubl
lret
inc
cmp
testl
push
pusha
js
push
ss
jl
subb
cmp
or
jmp
roll
insb
fmul
das
add
xchg
test
in
mov
sbb
mov
inc
jno
lea
cwtl
pop
adc
jae
outsb
mov
xor
pusha
push
dec
push
test
dec
scas
loop
xchg
xchg
push
out
push
mov
mov
jae
out
stos
gs
cmp
sub
clc
jmp
jmp
cs
mov
cld
xchg
das
pop
cltd
push
pusha
dec
fidivl
scas
add
cld
insl
clc
outsl
andl
inc
sahf
jmp
cmp
shll
int3
loope
or
inc
stc
pop
add
icebp
mov
add
fiadds
js
out
pop
in
xlat
sbb
sbb
rolb
jb
stc
xchg
dec
mov
nop
sbb
push
cltd
push
jecxz
es
repz
cmpsl
jno
rcpps
xchg
scas
lret
xchg
repz
call
mov
mov
das
lcall
cmp
dec
inc
test
pop
rcll
and
sub
mov
inc
jnp
push
xchg
xor
sbb
mov
jne
cmc
pop
sarl
pop
jne
dec
outsb
or
fidivs
cmp
cmc
out
xor
pushf
cmpsb
mov
cmpsl
xlat
xchg
imul
adc
arpl
pop
popl
mov
insl
adc
mov
jecxz
xor
xchg
cmpsb
jmp
filds
popa
mov
sub
inc
pop
mov
lahf
inc
cs
cmp
and
out
cld
sti
jae
push
imull
fstl
loop
dec
imul
cmp
aaa
iret
notl
in
fs
outsl
mov
mov
cmp
jle
sub
push
xchg
add
repnz
stc
test
jle
or
sub
sbb
roll
push
mov
out
pop
pop
xor
jbe
xchg
jg
adc
add
out
mov
jne
jbe
cld
push
sub
lcall
jo
lock
add
push
in
aam
jb
stos
inc
aam
add
add
stos
xchg
cmpsb
adc
inc
std
cs
cmp
mov
stos
and
add
cld
jne
loopne
lods
cmp
cli
into
xor
inc
movsb
das
sub
ficompl
ret
ljmp
and
ret
sysexit
int
push
xchg
mov
loopne
cs
fsubp
das
mov
popa
cmp
sub
test
sti
sar
pop
stos
cltd
mov
jnp
add
loopnew
fs
repz
mov
ss
leave
stos
movsb
leave
and
stc
dec
cmp
dec
xchg
insl
je
add
std
hlt
dec
testb
push
push
stc
xor
mov
jg
or
or
leave
xchg
aas
xchg
pop
jne
and
fwait
lret
es
push
mov
test
aam
xor
adc
test
fs
subl
mov
adc
popa
push
sbb
cmpsl
ret
pushf
jmp
xor
dec
jmp
push
pop
inc
cmp
mov
cwtl
aad
gs
test
mov
fcom
addr16
and
push
add
and
mov
test
je
push
cmpsb
mov
fiadds
mov
mov
scas
pop
cli
mov
insl
push
or
xor
sub
adc
std
stc
repnz
fnstcw
xchg
dec
rcrb
stc
ss
sub
subl
adc
or
rcl
imul
je
mull
ljmp
outsb
add
pop
addr16
jge
sahf
mov
repz
sahf
jno
je
or
scas
adc
mov
out
decb
rcl
iret
lret
insl
xor
aam
sbb
jecxz
fidivs
cmp
sbb
test
mov
outsb
adc
into
inc
inc
or
lret
shlb
or
mov
ret
pushf
dec
pusha
add
inc
test
or
sti
cmp
pop
imul
cmp
pop
xchg
sub
mov
xchg
cli
inc
les
lods
icebp
shll
inc
lret
xor
in
xor
insl
adc
ljmp
mov
pop
push
xor
ss
lahf
lods
cmp
cmp
push
add
movl
xor
hlt
inc
jnp
xlat
bound
sub
idiv
dec
shlb
or
xchg
nop
push
int
stos
lods
sbb
sahf
mov
adc
xor
mov
addr16
mov
sbb
lods
sub
inc
cwtl
les
shlb
dec
bound
inc
pop
fs
mov
in
enter
orl
mov
lock
dec
add
pop
xor
lret
sar
call
mov
test
mov
fcmovnu
ja
fadds
fwait
test
orb
cmp
push
es
xorl
and
cltd
push
icebp
sbb
outsl
int
mov
popf
mov
lret
popa
sarl
push
iret
int3
push
jns
test
mov
shl
adc
jp
les
xor
sbb
mov
and
pop
and
adc
dec
test
mov
xor
stos
adc
xor
cs
dec
push
cmp
dec
aas
daa
xor
lods
cmp
shll
repz
sbb
pusha
arpl
and
fwait
adc
ret
call
shrl
testb
icebp
test
inc
lods
and
clc
clc
aam
xor
aas
xor
lods
jo
pop
xchg
pop
jno
push
fnsave
dec
es
data16
ret
stos
cwtl
and
and
xchg
push
mov
insl
subl
lds
out
nop
xor
inc
mov
cmc
add
in
or
arpl
cmp
icebp
cmp
inc
stc
jae
sbb
mov
movsb
loope
jae
xchg
mov
sub
mov
rolb
xchg
add
mov
inc
out
scas
inc
enter
outsb
or
pop
cmp
call
xchg
sbb
das
frstor
or
lcall
inc
int
and
dec
bound
fidivl
fwait
daa
and
mov
push
cmpsb
pop
adc
or
jl
out
popf
in
fisubrs
pop
dec
or
mov
and
xlat
push
adc
std
pop
mov
push
movsl
dec
or
sbb
xchg
pop
or
cs
cmp
xchg
jne
push
sbb
ja
fucom
es
mov
and
movsb
in
aaa
sub
push
adc
or
add
test
std
fdivl
jle
adc
mov
ret
lret
cmp
mov
fsqrt
xor
out
fwait
aas
xor
ficoml
outsb
scas
xor
cmp
lret
es
xchg
sahf
addr16
jo
push
pushf
jl
pop
inc
sti
mov
inc
and
in
jno
es
xchg
add
nop
jmp
aad
hlt
sbb
test
in
jb
cmp
ficoml
fwait
pusha
movsl
fidivrs
nop
rcr
das
xchg
xor
dec
push
or
test
sub
ljmp
adc
cltd
fidivrs
or
std
stos
pop
and
outsl
mov
sub
jno
shll
mov
push
xchg
push
and
cmpsb
lock
out
inc
cmpsb
xchg
inc
les
addl
mov
out
fwait
add
addr16
adc
sbbb
in
add
cmc
sub
or
add
stos
out
mov
xor
or
sqrtps
hlt
in
jp
andl
fildl
mov
cmp
sysret
cmp
or
enter
or
mov
insl
mov
mov
fcmovne
pushf
daa
jne
loop
int3
test
imul
cwtl
stc
insb
xor
out
fdivr
jae
pop
je
xchg
in
mov
stos
pop
fcoms
out
ret
shll
fnsave
stos
cmp
cmp
lods
int3
mov
or
jo
pop
frstpm(287
pushf
dec
push
sub
add
mov
inc
lods
cmc
fwait
loope
jmp
mov
fstpt
push
jbe
aad
push
popa
jmp
orl
cmp
scas
dec
leave
mov
xchg
inc
movsb
push
negb
sub
pop
je
je
loop
or
push
outsl
in
test
sub
xchg
jg
cmp
divl
mov
and
sti
dec
loop
shrb
test
int
fs
outsl
xor
orl
mov
mov
sarb
in
stos
cmp
pop
das
adc
cmp
jae
sbb
cmp
add
mov
and
addr16
mov
sub
push
mov
mov
adc
mov
lret
pop
imul
xor
sbb
fnstenv
pop
in
cmp
sbbb
daa
test
mov
or
lret
rolb
enter
mov
mov
insb
lock
out
lea
aam
loope
mov
cmpsb
sti
sahf
xchg
sub
loopne
mov
sbb
cmpsl
mov
pusha
mov
sub
xchg
xlat
call
rclb
fiaddl
xor
cmp
test
fmull
jo
je
clc
ret
push
jbe
sub
mov
scas
mov
por
jno
mov
sbb
fsubl
and
adc
adc
aaa
jg
dec
jno
sbb
out
cwtl
movsl
loope
or
jge
or
aas
call
dec
push
call
inc
inc
rep
sub
adc
mov
jg
pop
addl
or
inc
xchg
sti
cmpb
push
out
repz
gs
sub
jne
xor
xchg
xor
dec
faddp
push
and
inc
fdivl
test
repnz
fbstp
push
xchg
add
push
pop
push
popf
add
dec
rolb
mov
jg
repnz
xor
es
xor
mov
testb
or
push
fdivrp
pop
scas
jg
in
nop
jns
sbb
dec
push
shrb
cmp
sub
mov
inc
dec
adc
push
and
and
movsl
out
daa
scas
and
inc
cmpsb
sbb
fcompl
test
jae
dec
aaa
lcall
push
insl
and
xor
jno
mov
out
fwait
iret
xchg
ret
popa
dec
sub
pop
scas
jecxz
xchg
sbb
push
sbb
cmpsb
xchg
sub
dec
xlat
js
ficompl
sarl
jge
or
cmp
aas
iret
divb
mov
adc
pop
sub
jno
aaa
daa
cmpsl
mov
pop
fmull
fsubrs
xchg
sub
xor
mov
mov
leave
aad
aaa
xchg
and
sub
adc
mov
ficoms
repnz
cmc
mov
imul
jmp
fwait
mov
enter
dec
mov
in
pusha
in
mov
mov
repnz
mov
into
sub
fnstsw
or
push
sbb
aaa
cmp
or
mov
adc
cmp
pop
out
mov
ret
addl
sub
add
ja
cmp
adc
xchg
stos
loope
int
out
fwait
fwait
pop
out
lea
fidivs
xchg
decb
hlt
fdivrs
imul
and
cmp
mov
xchg
cmp
adc
lahf
adc
xor
xor
mov
popf
add
shll
sahf
mov
es
ret
push
mov
push
mov
pop
fistl
lahf
inc
aad
jb
xor
pop
movsb
subl
jne
mov
or
in
ss
daa
mov
add
shrb
dec
aaa
or
les
inc
push
jno
arpl
cmpsb
lods
out
test
shl
daa
push
aad
xchg
mov
push
std
test
pusha
adc
aad
and
lahf
or
sbb
aas
and
sbb
stos
mov
addr16
stos
adc
imul
cmp
aam
iret
jno
push
vmovq
and
cmp
and
and
dec
hlt
xor
mov
testl
or
fwait
sub
mov
and
sub
aad
imul
adc
sbb
sub
mov
inc
and
sbb
inc
xchg
stos
adc
push
cld
add
cwtl
lret
push
movsl
xchg
enter
dec
add
push
int3
sbb
and
push
pop
xchg
push
push
repz
pushf
fists
cmpsl
or
cmpsb
sti
addr16
adc
push
cltd
ss
sub
push
into
push
dec
mov
or
xor
outsl
ss
sbb
pusha
mov
dec
adc
xchg
mov
pop
pop
fisubl
mov
sarb
mov
mov
adcl
adc
xor
sbb
add
mov
lret
std
je
pop
and
test
cli
cld
xor
dec
push
dec
mov
jb
daa
inc
call
push
fcmovnb
mov
pop
loopne
add
mov
cwtl
mov
mov
jecxz
cmpl
rcr
push
leave
rorb
mov
dec
das
push
sub
add
scas
xchg
mov
mov
lea
ss
int
xor
rclb
sahf
inc
scas
pop
movaps
adc
mov
mov
and
divl
pop
dec
jae
inc
mov
lcall
cli
mov
pusha
daa
mov
lret
subl
jl
shlb
pop
out
clc
push
jnp
mov
nop
jle
xor
movhps
hlt
fnsave
lock
dec
jle
mov
dec
nop
push
insl
push
popf
test
push
pop
sub
test
sbb
xchg
sub
jnp
enter
addr16
and
xor
add
pop
lret
mov
cwtl
mov
sti
rcl
add
push
enter
inc
add
and
cmp
scas
shll
jnp
pop
push
adc
adc
hlt
sbb
push
mov
push
fs
imul
shlb
popf
clc
mov
data16
mov
pop
xchg
pop
rcll
mov
xor
sbb
inc
pop
test
cmp
outsb
mov
or
mov
xchg
test
or
and
jae
mov
call
add
fcompl
pop
sub
fsubl
std
mov
pop
jbe
subb
fiadds
push
xchg
sahf
fstpl
mov
push
jne
dec
adc
sub
adc
sub
push
mov
push
pop
mov
sbb
fisubs
cmp
cs
pushf
repz
es
push
xchg
nop
cmp
mov
and
je
push
pop
shll
cmp
jae
push
sub
lret
lret
and
cmp
mov
xchg
clc
mov
das
and
push
bound
and
mov
mov
enter
pop
out
int
mul
das
popf
dec
popf
pushl
mov
xchg
fs
imul
xor
add
adc
and
leave
loop
shrl
fldt
xchg
ret
cmpsl
fs
aaa
mov
xchg
xchg
mov
pop
sub
inc
adc
rcr
or
std
jmp
push
push
pop
aam
lods
push
mov
pop
pause
sti
mov
adc
insl
int3
loope
lea
in
sbb
mov
push
push
mov
scas
js
inc
test
icebp
int3
inc
repz
addr16
push
dec
push
push
add
inc
add
adc
adc
jmp
xchg
fwait
mov
inc
jae
test
scas
outsb
pushf
pop
add
pop
inc
dec
adc
fs
mov
nop
sti
inc
mov
mov
pusha
movl
rcrl
shll
hlt
add
mov
pop
sbb
popa
insb
mov
push
xor
xchg
mov
hlt
lods
mov
lock
xchg
out
inc
negb
js
loope
mov
lret
imul
add
std
push
add
popa
daa
push
outsb
ret
cmpsl
aas
jae
and
or
pushf
out
pop
and
inc
jecxz
addr16
cwtl
inc
xor
pop
cmp
sbb
pop
ret
shlb
pop
fwait
sbb
popa
jecxz
test
adcb
pop
scas
dec
insb
fnstcw
aad
inc
dec
sbb
out
arpl
movsb
lods
mov
inc
push
inc
out
push
lds
xchg
push
adc
cltd
ja
jae
dec
sbb
mov
xchg
cwtl
push
add
out
mov
xchg
cmp
pushf
inc
mov
inc
notl
fisubrl
adc
aaa
mov
lods
jo
push
mov
inc
adc
cmovbe
lcall
jmp
pop
jmp
pop
push
fisubs
mov
loopne
lods
repnz
xor
or
dec
out
lret
lds
repnz
adc
sbb
lret
and
lock
and
sar
push
in
pop
mov
test
sub
adc
push
stos
pop
les
adc
jecxz
mov
inc
mov
movsb
adc
icebp
outsl
out
lahf
sub
loopne
xchg
fldt
adc
icebp
sti
cmp
cmp
pop
or
in
bound
xchg
jns
into
repnz
push
inc
mov
fcomps
lcall
add
jmp
pop
push
jmp
add
pop
loopne
lea
sub
add
pop
aaa
outsb
push
fcoml
sbb
xor
add
xor
nop
pop
adc
sub
in
test
mov
in
not
sbb
fcmovu
xchg
out
push
xchg
cmp
mov
push
loop
sahf
hlt
lahf
xchg
dec
add
int3
sbb
jb
mov
pop
pop
loope
mov
mov
cmp
pop
out
mov
lret
es
call
mov
sbb
jge
ss
adc
movb
jb
or
jbe
xchg
roll
aas
xchg
jno
xchg
jbe
and
fs
out
imull
cmc
sahf
xchg
pop
in
popa
lds
xlat
dec
jnp
stos
or
imul
negb
pop
ljmp
cmpl
sub
ss
xor
movsl
out
push
hlt
mov
pop
sbb
repz
ret
cmpsl
insb
icebp
inc
pop
out
push
pop
cmp
lret
cmpsb
jbe
pushf
add
test
pushf
mov
outsl
mov
xchg
fpatan
notl
out
cs
xchg
pop
into
cmp
pop
xchg
push
sbb
push
enter
or
jle
mov
jg
pop
or
gs
inc
jge
je
jbe
mov
pop
in
jmp
fnsave
and
mov
pop
or
mov
xchg
push
outsl
sub
daa
lret
add
add
mov
into
fisttpl
repnz
jb
push
dec
shll
jns
xor
mov
daa
jnp
js
imul
mov
lahf
jecxz
dec
aad
shrl
es
add
hlt
clc
push
mov
adc
outsl
rcll
cld
lods
sub
xor
and
movsl
ret
out
dec
push
or
imul
scas
cmpsb
sub
decl
or
test
cmp
gs
aad
pop
adc
sahf
push
cli
rorl
mov
pop
repnz
xchg
mov
adc
sbb
xchg
push
push
addr16
cmp
lea
xchg
xchg
das
cli
sub
rcrl
movsl
xor
pop
cwtl
and
loope
iret
je
pop
adcl
ss
pop
icebp
jge
idivb
out
xor
sbb
loopne
cmp
imul
mov
or
adc
repnz
inc
out
jmp
sub
fstps
xor
lods
ret
dec
aam
rcrl
aam
jo
shlb
js
dec
jb
shlb
mov
ja
mov
dec
push
inc
pop
sub
insb
mov
or
push
out
lcall
leave
cmp
jns
fmul
mov
xlat
cltd
pop
xor
sub
loope
cmc
inc
mov
cmc
push
xor
ret
into
jecxz
shlb
and
mov
push
dec
stc
jmp
stos
mov
or
xchg
sub
shll
test
lods
not
mov
xchg
push
fs
jmp
fiadds
cmp
stos
lds
jge
insl
jecxz
mov
fcoml
ljmp
add
push
addl
cwtl
mov
stos
mov
jb,pt
lahf
pushf
sub
lahf
aaa
and
mov
xlat
inc
cli
dec
rclb
gs
add
jl
outsl
insl
push
xor
rcrl
sti
pop
enter
mov
punpcklwd
adc
clc
dec
fcom
divl
aas
rorl
fnstcw
test
sbb
inc
adc
mov
mov
inc
push
adc
mov
jle
movsl
xlat
lahf
cmpsl
mov
lret
or
mov
push
mov
ss
xor
aad
testl
xor
ss
jge
add
jecxz
xor
jo
out
cmp
jp
inc
ljmp
hlt
loope
outsl
sbbb
fldt
inc
pop
push
cmpb
les
xor
repz
int
mov
lds
cmp
mov
cmc
mov
lea
xchg
cld
mov
jno
lock
pop
xchg
jl
jno
movsl
mov
add
xchg
sbb
data16
ja
add
fcompl
sbb
adc
sbb
cmpsl
push
in
pop
sti
jmp
pop
iret
inc
aas
ja
jecxz
movsb
sbb
call
and
imul
push
dec
cwtl
repz
shll
mov
sbb
mov
fstps
mov
inc
je
dec
or
mov
inc
in
mov
sbb
dec
fldl
imul
adc
mov
jp
mov
pextrw
mov
jmp
xor
sbbl
push
sbb
inc
add
repnz
int
mov
das
xor
inc
mov
ss
cli
or
push
loop
repnz
mov
std
popf
jmp
add
aam
add
iret
in
cli
dec
adc
int
jbe
mov
les
mov
mov
adc
jg
rcrb
psllw
out
sub
ficoml
inc
mov
lret
ljmp
cld
repnz
mov
clc
ficompl
push
sbb
cld
imull
insl
adc
fcmovne
test
lret
icebp
jnp
dec
rclb
inc
xor
and
sbb
or
jbe
mov
cwtl
jg
into
loopne
mov
lods
jns
es
mov
hlt
movsb
xchg
ja
test
sbb
imul
scas
cld
pop
popa
enter
mov
aad
in
ss
dec
in
divb
fistpl
in
leave
and
mov
sbb
push
fmuls
test
and
pusha
fimull
inc
mov
jne
pop
sub
out
inc
sbb
pop
sbb
jae
pop
and
cmpsb
xor
xorb
in
xchg
cmpsb
dec
mov
dec
iret
daa
push
push
gs
mov
movsb
test
cltd
mov
jp
pop
cmp
popf
cmp
pop
out
pop
sbb
sub
pop
adc
pusha
and
daa
push
jl
lret
dec
or
push
in
inc
bound
lods
mov
dec
out
or
insl
jmp
jo
into
cmc
mov
popa
push
fisubl
adc
insl
push
cmpsb
pop
sbb
cld
insl
cmp
setae
sbb
aaa
sub
pop
sti
sti
sub
popl
mov
pop
je
and
mov
sbb
add
in
cmc
jmp
push
push
aam
mov
inc
pop
outsb
adc
xor
imul
daa
test
lods
mov
xchg
test
repz
aaa
xchg
out
inc
sti
pusha
js
inc
lods
xor
scas
addr16
inc
and
scas
mov
cmp
and
cltd
push
hlt
test
int3
xorb
movsb
cmpsb
test
cmp
fadd
jl
xor
clc
cli
data16
mov
mov
inc
rclb
cmc
push
sbb
cmp
mov
out
jae
test
lock
cltd
sahf
and
jb
xchg
push
dec
out
xchg
add
push
push
in
push
dec
pushf
leave
xlat
nop
dec
mov
imul
inc
add
cmp
in
cmp
imul
add
lock
mov
fmulp
add
in
movsl
dec
push
lods
sub
ret
mov
loop,pt
leave
out
loopne
iret
dec
add
test
je
xchg
sbb
ja
or
stos
adcb
loope
icebp
dec
cwtl
lock
sbbb
in
inc
adc
push
xor
or
movsb
and
jmp
jns
jle
mov
call
jl
scas
loopne
xchg
jno
andb
and
or
cltd
mov
push
push
xor
addr16
mov
cli
sbb
or
jns
arpl
and
aad
out
add
xor
pop
daa
xlat
mov
pop
cmpsb
inc
movsl
lds
jecxz
jnp
mov
movb
lods
jnp
fmull
or
add
mov
adc
lret
scas
test
movsb
popf
lret
pushf
mov
pop
sub
nop
inc
les
scas
cmp
xchg
jb
push
mov
lcall
push
and
push
fwait
sbb
inc
cs
jo
dec
cmp
push
scas
dec
adc
dec
xchg
fs
es
jl
mov
in
adc
std
movsb
and
subl
mov
andl
xor
mov
fcomps
insb
add
ja
xchg
xor
xlat
repnz
and
mov
daa
inc
mov
push
outsb
mov
out
or
faddl
jbe
pop
xchg
pop
imul
arpl
aas
sbb
mov
add
in
call
lahf
xor
mov
div
xor
push
xor
call
data16
xor
fildl
lret
mov
jg
mov
dec
insb
jmp
or
jns
xor
sub
insl
cmc
and
xchg
sub
loop
aam
jae
stos
out
jb
cltd
pop
push
dec
sub
push
mov
enter
cmp
dec
repnz
mov
clc
push
xor
or
sub
inc
jns
stos
push
mov
mov
subl
outsl
daa
test
jecxz
sti
xor
bound
outsl
dec
xchg
cmpsl
cmp
mov
mov
and
sbb
adc
scas
mov
outsb
dec
inc
les
sbb
hlt
imul
fucom
imul
xchg
mov
inc
test
sub
loop
xor
push
mov
fs
add
mov
ljmp
dec
jnp
mov
notb
dec
inc
mov
cli
outsl
push
cmp
adc
fmull
in
push
lret
ja
out
mov
mov
stos
adc
or
test
fadds
mov
mov
std
lds
or
mov
sahf
cld
xchg
insb
pop
lods
mov
pop
stc
mov
movsb
ja
jo
mov
fimuls
inc
movsl
mov
jle
adc
jle
push
pushf
xor
insb
ljmp
xchg
xor
or
mov
dec
jo
push
cs
lods
inc
lods
xchg
es
mov
fwait
mov
sbb
mov
dec
pusha
clc
sub
ja
movsl
fildll
xor
unpckhps
jne
stos
inc
lds
cli
mov
push
adc
movsb
in
add
lret
jne
or
fs
aaa
test
dec
pop
cs
loop
mov
mov
fstpt
iret
add
fndisi(8087
pop
mov
or
jge
test
cmp
fidivrs
and
cmp
dec
repz
mov
push
fwait
mov
xchg
repnz
pop
sbb
in
mov
xchg
cld
sbb
sub
sub
dec
fstl
xor
jp
mov
vmptrld
add
mov
lock
outsb
mov
push
out
jae
sub
inc
cmpsb
in
mov
cld
out
adcl
es
mov
jns
mov
add
scas
jbe
lret
lds
add
dec
and
or
mov
pop
xchg
jne
cmp
ljmp
sbb
cmp
lea
xchg
fcoms
into
sub
mov
xlat
mov
mov
add
jae
mov
jmp
mov
mov
movsb
jo
dec
lret
dec
jle
rorl
mov
push
push
jb
and
fldcw
jecxz
mov
pop
idivl
lret
sbb
imul
mov
movsl
mov
gs
cmp
dec
jle
js
xor
mov
mov
push
pop
jg
jp
jns
scas
out
in
sbb
loopne
mov
dec
les
aaa
repz
jns
sbb
dec
cmpb
sbb
insb
js
and
adc
and
fstpl
mov
mov
pop
adc
xchg
iret
es
rclb
mov
rcrl
mov
mov
in
cld
push
jne
leave
mov
jl
pop
mov
fwait
clc
mov
fbld
imul
add
test
bnd
fistpll
mov
aam
orb
test
fildl
cmpb
fstps
inc
cld
call
mov
insb
arpl
and
addr16
jmp
push
ja
adc
enter
fs
cwtl
inc
jmp
xor
movsb
jno
pop
jle
flds
jecxz
push
mov
sub
es
adc
cltd
mov
mov
cmp
xor
adc
pop
dec
popa
stos
repnz
cmp
jp
int
data16
xor
out
fists
mov
push
sti
jmp
into
xor
inc
push
sahf
lock
fwait
dec
ret
icebp
insl
jbe
pop
lret
push
push
das
and
dec
pop
out
mov
mov
movb
bound
sbb
inc
mov
mov
les
and
and
fs
rcrw
outsb
xor
adc
cmp
add
sub
pop
xor
ja,pt
jns
out
mov
push
ficoms
mov
xchg
lds
xchg
jle
sbb
inc
cld
mov
repz
mov
xor
fidivrl
jb
ds
add
jmp
lret
push
pop
adc
aam
jecxz
lds
cmp
movsl
into
pushf
std
fs
loop
mov
test
or
inc
push
rclb
pop
jns
int3
std
sub
push
clc
cmpsl
hlt
jecxz
xchg
push
leave
xchg
orl
and
mov
faddp
sbb
lds
sub
lret
cwtl
add
loopne
jl
incl
xchg
push
roll
mov
mov
sbb
cmp
mov
popa
gs
shll
cld
insb
mov
mov
xchg
add
sbb
jmp
mov
mov
stos
popf
push
int
aam
repnz
in
sbb
or
out
repnz
mov
push
cwtl
insb
jae
fsubrl
dec
inc
xor
dec
sub
xchg
cmpb
mov
jbe
movl
cltd
imul
fidivs
jae
jb
lcall
cltd
xor
jecxz
inc
dec
add
lods
fimull
fiadds
mov
cs
pop
dec
nop
lcall
sbb
dec
mov
push
fwait
and
or
ds
inc
mov
push
cld
dec
daa
pop
int3
pushf
outsb
lods
jns
xchg
std
sbb
push
clc
push
dec
and
loopne
jp
push
clc
aaa
sub
std
cmp
mov
mov
movsb
inc
fs
int3
inc
mov
bound
adc
mov
int
bnd
test
and
loopne
xor
or
mov
movsb
push
jle
xchg
into
xchg
clc
xchg
jg
stos
leave
data16
xor
mov
push
cmpsl
shlb
loope
dec
mov
xchg
dec
pop
sub
movsl
cmp
xchg
jns
or
repnz
and
push
int
pop
adc
mov
movsl
dec
int3
cli
stos
stos
fistps
rorb
sub
cmc
adc
pop
mov
bound
pop
cmp
and
fwait
inc
push
cmpsb
dec
aas
imul
lahf
ds
jno
add
push
xor
sub
pop
or
clc
mov
stos
jp
popf
push
enter
icebp
or
mov
cmpsb
add
push
push
sbb
jge
rorb
dec
and
push
xorl
sub
cmp
push
xor
xchg
imul
mov
and
add
js
movsb
stc
push
sub
insb
pop
repz
loope
lcall
pushf
sub
inc
clc
pop
inc
je
or
lods
jno
lea
int
rorb
mov
int3
call
jns
stos
xchg
push
jnp
mov
mov
jg
mov
xchg
mov
push
mov
outsb
aas
scas
rorl
mov
in
scas
push
sahf
xor
add
push
stos
xchg
decb
int
pop
ret
stos
sub
test
je
dec
cli
fcmovne
cmp
stos
xorb
mov
stos
pop
dec
es
push
cli
jbe
mov
movsb
pop
lret
mov
aad
enter
cmp
popf
lods
ret
and
pop
out
mov
movsl
xlat
mov
mov
test
ljmp
add
lods
lcall
stc
jne
in
push
insb
xor
ljmp
xor
lods
loop
sahf
pop
enter
jae
xchg
je
adc
ja
or
cmpb
outsl
out
push
std
neg
cld
xlat
sbb
fnstcw
push
inc
out
sbb
dec
lret
les
repnz
cli
stos
xchg
add
fildl
mov
cmp
test
out
outsb
shr
out
sbb
inc
xchg
imul
mov
inc
cmp
mov
lods
jnp
aad
ret
mov
jecxz
adc
in
loop
mov
mov
pop
mov
orb
push
or
out
jno
pop
dec
out
arpl
shrl
jno
mov
cmp
dec
in
stos
mov
stos
fisubrl
xchg
push
push
lahf
push
fucomip
lret
pop
mov
jnp
ljmp
push
or
insb
scas
test
cmp
stos
insl
int
dec
popa
add
cmpsb
or
adc
xchg
loop
and
in
mov
cmp
jle
lods
pop
std
hlt
cwtl
push
movsb
fxch
xchg
out
pop
sbb
push
lods
adc
lods
daa
lcall
rorl
leave
push
fwait
sbb
popl
xorb
ret
sbb
inc
adc
push
xorb
in
test
aam
push
ret
xor
mov
add
pop
roll
dec
fdivl
aas
and
adc
cmp
jge
cmpsw
arpl
mov
mov
mov
xchg
push
cs
test
test
push
mov
cmpsl
fs
adc
iret
pop
movsl
test
or
lret
stc
mov
stos
mov
aaa
push
xor
pop
fwait
nop
stc
xor
or
mov
std
xchg
dec
push
mov
pop
test
push
orl
gs
add
push
loope
mov
and
push
sbb
lods
mov
xlat
icebp
incl
sbb
addr16
jl
and
sbb
mov
out
sub
std
sbb
ja
push
cli
xor
repnz
mov
adc
adc
call
xorb
imul
jg
movsb
cs
shll
add
rorb
es
pushf
xchg
fisubrl
push
iret
mov
ss
sbbb
shlb
push
adc
or
pushf
psubsw
ljmp
je
das
dec
xor
enter
push
pop
xorl
insl
and
aam
out
inc
ljmp
xor
jle
sbb
popa
ja
mov
fdivp
xchg
int3
dec
int
pop
mov
test
inc
das
add
xchg
int3
pop
ss
and
ret
mov
and
lds
push
inc
lock
sub
hlt
lahf
and
popa
push
in
int3
mov
divb
fstpt
in
pop
adc
pop
fistpll
and
and
fldenv
in
les
mov
outsl
int
xchg
ficomps
dec
jmp
push
add
psubq
xchg
mov
nop
cmc
repnz
repnz
pushf
mov
cltd
fdivr
add
testb
ret
mov
jo
push
sbb
add
push
add
jmp
or
cwtl
adc
adc
xchg
xchg
call
xor
out
fnstcw
or
fmuls
jno
lahf
roll
test
outsl
cld
aaa
mov
adc
pop
pop
outsl
inc
mov
negl
xlat
into
lcall
mov
ds
xorl
gs
mov
mov
ret
jle
enter
sbb
xor
xor
add
cmc
pop
dec
sbb
jmp
es
stos
jb
xchg
out
mov
xchg
in
or
cmpsl
leave
jge
sub
repz
mov
xlat
sub
cmpsl
xor
cmp
sub
lcall
jp
andb
fisttpll
out
out
pop
cmpsl
aaa
out
lcall
xchg
fidivrs
xchg
ds
icebp
mov
filds
adcb
lahf
ficoms
xor
inc
les
leave
cmp
xor
fldl
adc
sbb
add
sbb
imul
cmp
jge
jbe
lret
mov
push
addl
dec
sar
lea
orb
adc
lds
mov
xchg
adc
movsb
jecxz
and
jle
dec
push
push
inc
in
adc
jne
inc
scas
filds
sub
mov
push
sbb
cmp
es
pop
pop
jb
pusha
mov
push
cmp
lahf
mov
dec
cmc
mov
mov
lahf
cli
aaa
sti
dec
ss
loopne
ret
mov
inc
xchg
push
js
sti
jne
sub
push
into
mov
out
int
dec
dec
out
mov
shrl
mov
icebp
movsl
mov
xorb
sbb
and
dec
movsl
movsw
bound
sti
mov
and
ja
pop
jge
pop
xor
inc
mov
dec
adcl
loope
adc
test
out
ds
inc
add
jg
cltd
rcll
scas
fidivrl
lcall
cwtl
cmp
cmpsl
pop
ficomps
adc
xchg
mov
pop
pop
and
or
xor
test
xchg
clc
out
lods
ret
lods
mov
movsl
addr16
xchg
push
mov
mov
xchg
lods
aaa
dec
bound
add
cmp
jb
xlat
int
pop
punpcklwd
jne
xchg
xchg
or
repz
jnp
mov
add
sbb
gs
mov
mov
mov
ret
int3
sub
mov
dec
mov
add
sbb
pop
sti
mov
cmpsl
movsb
and
aam
neg
jl
cmc
scas
push
ljmp
xchg
cmp
jbe
fsubs
daa
inc
push
mov
xchg
faddp
xlat
rorl
cmpsl
xor
arpl
adc
push
add
fcomps
mov
mov
and
das
push
inc
mov
jae
in
mov
sbb
fisttpll
xor
push
jno
mov
fcomps
xlat
mov
pop
mov
fisubs
jle
cmp
loopne
lods
jne
mov
mov
add
aas
pop
mov
mov
pop
mov
dec
pop
xchg
sbb
ret
jno
lahf
jmp
je
push
or
xchg
mov
rcrl
dec
jecxz
shr
xor
loopne
test
test
adc
out
icebp
sbb
into
mov
aaa
sbb
call
xor
or
sbb
out
roll
rcll
in
push
xor
sti
addr16
push
pop
xchg
xor
xor
shl
sub
and
push
and
fcomps
mov
int
lea
sbb
or
cmp
movsl
jl
scas
ret
cli
push
xchg
das
cs
push
pop
pop
inc
push
jge
test
push
ljmp
pop
lock
mov
sub
aaa
dec
dec
jle
mov
push
pop
mov
int3
shlb
mov
dec
xor
int
aad
cwtl
cld
mov
pop
pop
sbb
sub
pop
jle
sbb
xchg
xchg
fcomi
movsl
ret
repz
mov
mov
scas
ret
push
test
mov
xor
mov
sub
inc
push
push
aas
push
aad
lock
push
push
mov
sahf
cli
pop
dec
lret
insb
bound
pop
inc
stos
iret
push
pop
jbe
rcll
mov
fisubl
lahf
into
sub
int
lret
shlb
jge
push
pop
decb
cmpsb
dec
inc
sahf
add
jge
pop
dec
and
xchg
xlat
add
xchg
mov
nop
jb
pop
jo
ds
ficompl
pop
add
xor
adc
test
int
push
mov
ret
mov
jl
cs
mov
ljmp
mov
xor
sbb
das
out
adc
negb
push
mov
das
jg
jno
aam
outsb
inc
ja
or
arpl
les
leave
add
xchg
sbb
nopl
cmp
add
xlat
mov
in
jge
mov
xor
jno
int
sar
cwtl
das
insl
xchg
out
stos
add
aam
cwtl
sbb
cmp
out
jg
ret
mov
mov
lds
push
xchg
cmpsb
dec
hlt
in
push
fcompl
cld
jno
sub
jmp
aam
add
cmp
xchg
pop
cmp
inc
inc
in
movsb
loop
lods
std
adc
pop
mov
push
add
inc
xor
cmp
stos
mov
pop
jns
rclb
fsubr
aaa
lahf
mov
imulb
cmp
loop
jno
add
pop
pop
rcrb
sbb
pop
aam
jp
or
test
lea
nop
mov
cmp
adc
js
fwait
xchg
add
sbb
pop
out
movsb
sarl
xchg
pop
mov
mov
in
shrl
mov
jne
xor
das
mov
jge
jns
addr16
cmpl
sub
ja
adcl
adc
pop
outsl
repnz
mov
sub
sahf
rorb
fs
clc
xchg
fdivrp
pop
xor
sbb
pushfw
stos
enter
adc
fdivrs
jecxz
inc
push
call
int
stc
dec
mov
fiaddl
call
out
and
and
int3
lods
pop
out
add
scas
sahf
push
lahf
jmp
and
push
es
jne
pop
lret
addr16
imul
je
in
cmpsl
sti
push
les
repz
in
ffree
pop
xchg
sub
mov
jmp
xchg
jno
mov
hlt
out
dec
sbb
dec
xor
out
sub
pop
push
mov
iret
add
dec
aaa
pop
ret
add
outsl
dec
adcb
lret
dec
adc
stos
scas
push
or
mov
xchg
cmp
dec
inc
cmp
mull
ljmp
xchg
aaa
push
dec
or
pop
cli
mov
push
pop
std
aad
hlt
inc
out
dec
jmp
sbb
or
mov
cwtl
js
sub
dec
mov
cmpb
call
scas
shll
sbb
je
cltd
int
add
fisubs
ljmp
sub
gs
arpl
jns
sub
shl
repnz
ret
fnstenv
lahf
sbb
clc
in
cmc
mov
in
jp
stc
stc
or
test
push
testl
fwait
ret
sub
pop
jns
sahf
dec
pop
sahf
shlb
push
popa
push
ljmp
jns
pop
xor
movsb
aaa
add
inc
repnz
push
push
cmp
mov
add
mov
push
lds
pushf
lds
xchg
pop
fwait
pushf
fwait
ja
cmp
outsl
test
lods
insl
and
in
pusha
push
sbb
lea
ret
dec
ss
mov
jg
push
sti
xchg
mov
into
adc
mov
mov
mov
cmc
pop
xor
inc
int3
push
jge
push
shlb
cmp
aas
sbb
fnsave
fisubrs
pop
push
imul
mov
adc
cmp
or
jmp
add
adc
shlb
xchg
js
popf
push
adc
add
scas
call
lods
in
or
and
arpl
hlt
cmc
aas
mov
popf
popa
mov
gs
aaa
xchg
neg
add
fsubp
dec
fwait
add
scas
jle
cmp
and
jecxz
jg
mov
mov
pushf
jg
cmp
rclb
pop
ret
sbb
sbb
lret
int
out
jae
or
sbb
push
xchg
fwait
push
adc
sub
in
inc
sbb
and
sbb
xor
inc
je
mov
push
mov
xor
arpl
or
pop
adc
and
cmp
movsl
mov
jge
iret
popa
nop
sub
mov
add
int
add
movsb
mov
aas
jecxz
dec
mov
cmp
sbb
push
xor
mov
xchg
mov
mov
out
mov
cwtl
inc
sbb
inc
insl
js
dec
clc
pop
push
cmp
sub
stc
icebp
insl
jb
idivb
in
notb
mov
lcall
call
mov
lcall
sbbb
shr
jmp
xchg
call
fcmovu
sub
push
setp
mov
mov
iret
add
bound
sti
test
adc
jnp
add
icebp
inc
cs
scas
out
mov
adc
int3
push
cmpsb
arpl
lods
xchg
in
fstps
push
xor
xorb
push
mov
xor
and
fldcw
push
or
push
xchg
xlat
in
dec
xor
mov
rclb
xorl
jns
sub
jg
stc
push
mov
out
push
dec
xchg
adc
push
lahf
pop
bound
mov
jg
pop
xchg
repnz
sbb
insb
ljmp
dec
clc
out
push
jae
arpl
outsb
adc
xchg
fwait
add
sahf
popa
and
data16
js
push
lock
mov
les
jb
test
cmp
repnz
xor
cmp
pop
loope
das
xor
lods
popf
stos
pop
cmpsb
les
sbb
imulb
xchg
test
mov
sahf
jae
ret
xchg
push
addl
jmp
leave
jp
gs
mov
mov
loopne
popf
lea
and
daa
outsl
je
xchg
js
jno
xchg
inc
inc
inc
or
pop
pusha
ss
leave
adc
sbb
push
pop
sub
gs
xor
sbb
xor
sbb
loop
push
imul
pop
insl
in
fwait
stos
rorl
inc
mov
in
dec
repz
rorl
or
fidivs
mov
lock
inc
hlt
and
xor
test
pop
push
cmp
in
cmp
push
inc
and
mov
fisubl
icebp
sahf
movsl
lcall
data16
adc
js
cld
mov
sub
mov
adc
js
int
pop
ja
dec
stos
xchg
adc
fdiv
shll
test
rorl
es
ret
jne
push
clc
cmp
sti
mov
adc
push
icebp
arpl
loopne
sub
sub
jmp
clc
test
adc
mov
imul
and
addr16
rclb
inc
sub
sub
xor
xor
inc
das
push
sub
subl
int
fidivl
pop
jbe
mov
loop
sub
pop
fstpl
jge
or
shrl
mov
mov
movsb
dec
mov
pop
jle
dec
jecxz
in
sbb
jnp
outsb
xchg
fucomip
sub
jbe
xor
add
pop
or
cmp
xchg
cmp
pop
cmp
cwtl
popa
sbb
xchg
adc
into
jmp
icebp
add
push
add
rcrl
xor
call
dec
add
lods
dec
hlt
add
data16
pop
loop
sbbl
mov
in
rol
mov
enter
test
xchg
iret
jno
mov
mov
popf
xchg
hlt
cli
push
cli
dec
arpl
sub
xor
push
dec
dec
and
mov
adc
loop
push
faddl
lahf
neg
push
and
mov
add
roll
repz
popa
loope
ret
push
mov
ret
nop
imul
xchg
jo
or
push
je
dec
mov
push
es
ljmp
jmp
fisubrl
cli
jnp
push
imul
mov
pop
add
adc
ret
packssdw
es
push
les
mov
adc
jne
loope
mov
movsb
or
push
in
and
fisubrl
cmp
in
test
adc
fcoml
xchg
push
mov
xor
mov
or
push
inc
sbb
sbb
jb
mov
les
cmp
sbb
or
inc
jb
push
cmpsl
xor
mov
adc
or
xchg
mov
jo
pop
lahf
xchg
lds
dec
cwtl
sub
sahf
rcrb
dec
mov
pop
push
xchg
clc
repnz
and
push
cmp
mov
cmp
mov
push
arpl
aad
mov
fsubrp
dec
mov
pop
arpl
xchg
push
lcall
shrb
jno
sub
mov
pop
adc
call
iret
mov
xor
push
cmp
dec
lcall
fstl
dec
dec
scas
jno
in
cwtl
fsubp
push
inc
lock
add
imul
adc
mov
fs
mov
push
lock
or
aam
mov
cltd
js
xchg
adc
cwtl
pop
mov
movsb
ficomps
pop
or
jb
inc
jbe,pn
add
inc
sbb
jo
inc
xor
push
mov
add
insl
sti
mov
cld
pop
gs
lea
fs
inc
movsb
and
mov
jbe
popf
mov
inc
enter
jle
mov
movb
cmp
xchg
mov
inc
fwait
and
dec
mov
scas
pushl
xchg
out
mov
stos
add
mov
imul
push
xchg
or
push
xchg
push
jns
push
sbb
mov
pop
sbbb
movb
ret
and
adcl
in
movsb
push
mov
add
or
cmp
mov
dec
mov
ljmp
stos
test
pop
inc
cli
iret
adc
mov
pusha
push
in
rclb
inc
push
imull
pushf
fildll
sar
out
cmp
mov
and
and
test
pop
ja
sub
dec
pop
and
rcl
sbb
xlat
ljmp
xor
arpl
aam
cmovg
mov
insb
es
int3
mov
fisubrs
cltd
sbb
push
dec
jbe
pusha
gs
ret
enter
loope
mov
outsl
mov
rorb
popl
pop
int
adcl
jmp
push
jbe
sbb
push
jl
mov
daa
shr
sbb
sub
jb
cli
mov
clc
push
filds
sbb
mov
sub
iret
rcrl
cltd
and
lret
leave
and
fidivrs
rol
xor
mov
shr
inc
aas
pop
js
mov
and
aas
mov
into
dec
sub
adc
xchg
out
mov
xor
shll
adc
inc
xchg
repnz
pop
mov
ror
es
repnz
inc
jb
jne
iret
cmp
cmp
jl
dec
jle
dec
add
sub
and
add
cltd
jne
mov
or
stos
adc
jns
mov
stc
dec
test
add
mov
into
lret
outsl
xchg
icebp
pop
mov
pushf
mov
mov
or
xchg
mov
cld
ja
lock
test
pop
adc
dec
stos
mov
mov
cmp
cmp
adc
and
sub
cld
leave
mov
int3
jge
or
cltd
adc
mov
xchg
and
push
jmp
jmp
inc
popf
imul
jae
orl
testb
loopne
xchg
xchg
in
in
aam
gs
pop
dec
push
pop
bound
push
cld
mov
sbb
test
add
lret
andb
lahf
xor
insb
xlat
adc
mov
jne
xchg
sbbl
cmp
ja
lahf
insb
orb
cmp
shll
test
inc
loope
jo
stos
sahf
repnz
in
jno
aam
cmp
int
jl
je
mov
outsb
lahf
push
and
into
dec
push
xchg
push
inc
and
mov
pop
dec
and
ret
inc
xor
mov
ja
sbb
out
inc
push
cmp
fidivs
pop
xchg
xchg
mov
aam
jge
jl
mov
imul
insl
jmp
movsl
mov
push
sbb
xchg
mov
jns
mov
stos
cwtl
and
mov
add
notb
inc
or
cmp
pusha
mov
xor
cmc
iret
cmpsb
push
mov
lret
xchg
mov
jge
jne
repnz
xlat
movb
inc
mov
mov
adc
adcb
or
mov
push
inc
dec
xchg
dec
sbb
scas
jns
pop
sti
ss
xor
lds
ficompl
dec
cmpl
fcomps
nop
jmp
inc
shll
mov
add
mov
dec
or
addb
mov
push
std
jg
call
inc
sub
shll
sbb
xor
jmp
xor
test
je
xchg
mov
and
jno
and
inc
and
xchg
sbb
xchg
xor
or
xor
jge
nop
mov
outsl
popf
and
mov
xchg
jno
lods
aaa
inc
rol
out
ja
shrb
mov
out
sbb
sbb
dec
and
xchg
popa
jb
xchg
push
and
rorl
push
sub
add
cwtl
mov
data16
shlb
dec
jne
xor
cmp
lods
xor
out
ret
test
or
cld
or
sbb
insb
inc
push
and
pusha
dec
jmp
xchg
stc
call
not
into
aam
jecxz
das
xchg
adc
xor
mov
rclb
mov
fnstenv
jnp
mov
and
xchg
repnz
mov
jmp
out
or
out
sbb
fisttpl
dec
fists
inc
in
test
xor
mov
push
out
inc
jmp
xlat
mov
push
push
movsb
lret
xor
xchg
rcrl
xchg
movsb
cs
popf
mov
dec
add
jecxz
adc
xchg
lea
adc
insl
jge
stc
stos
or
lea
into
cmp
push
ret
clc
int
jle
test
call
mov
mov
and
cmp
and
cmp
ret
push
dec
movsb
push
inc
dec
xchg
and
stos
or
mov
repnz
push
mov
in
leave
adc
js
aaa
xor
fnsetpm(287
stc
sub
xchg
jnp
clc
and
and
imul
add
test
loopne
add
jbe
in
inc
and
pop
push
loop
xchg
daa
pop
out
and
pop
mov
in
xchg
sub
rolb
mov
pop
xchg
adc
int3
hlt
mov
dec
stos
enter
pop
push
popa
xor
inc
data16
xchg
sbb
imul
sahf
pusha
mov
mov
out
int
cmp
adc
sub
dec
and
clc
push
ret
stc
mov
jae
orb
mov
xchg
dec
jge
sub
xchg
test
orl
adc
cs
test
fstp
sahf
addr16
sbb
scas
pop
jnp,pt
insb
inc
aam
popf
fidivl
aam
mov
in
xchg
mov
ss
shl
jmp
and
outsb
dec
jo
imul
or
push
push
pop
xor
pop
imulb
aad
cmp
fisubl
xor
pop
inc
mov
stos
jno
hlt
mov
pop
loope
std
lock
adc
cs
out
ficompl
lcall
imul
mov
pop
add
ds
cmpl
adc
push
loopne
lods
or
xchg
pop
mov
subb
int
inc
pop
cli
jle
inc
imul
sbb
and
inc
mov
jnp
inc
inc
outsl
jp
mov
xor
push
sbb
cmp
pop
jl
push
shlb
clc
jbe
rcrl
jae
push
xor
sti
sahf
sbb
and
cmp
cltd
int3
xor
in
enter
adc
aaa
mov
aam
dec
mov
stos
inc
mov
xor
test
jae
add
cs
mov
cld
movsb
mov
lret
mov
push
mov
sub
scas
jns
popf
dec
out
mov
mov
imul
imul
rorl
xor
mov
lds
mulb
or
mov
xchg
adc
mov
into
imul
insb
add
mov
xor
jecxz
or
cmpsb
loope
ss
inc
push
xor
add
jbe
xchg
lods
movsl
bound
cwtl
imul
test
stos
loopne
cwtl
mov
xor
js
pop
jo
cmp
outsb
or
xchg
ret
cwtl
xchg
jg
sbb
cmp
outsl
out
mov
push
inc
xchg
leave
lahf
adc
dec
mov
or
jecxz
push
fsubrl
push
pop
xor
sub
sbb
pop
fistpl
mov
add
or
push
push
adc
inc
push
les
shlb
incb
testb
sbb
popf
sbb
das
or
push
sbb
sbb
cmp
jl
sbbl
decb
xchg
push
fstps
movsl
loope
addr16
ror
jae
pop
xchg
jno
ret
jle
lahf
sbb
lret
daa
lahf
lret
cmp
push
inc
repz
sarb
imull
icebp
push
or
iret
push
iret
mov
sbb
inc
lods
outsl
sbb
inc
stc
mov
enter
mov
loopne
mov
push
out
stc
loope
lock
icebp
ret
addl
loop
jbe
cmpsl
pop
jno
mov
or
cmpsb
sbb
dec
sub
adcl
mov
dec
ss
sets
sbb
mov
pop
and
imul
dec
mov
pusha
cmp
mov
and
jno
jae
lea
out
cmc
and
jp
pop
dec
inc
aam
ds
out
stos
hlt
xor
pusha
cwtl
xor
and
cmp
test
adc
and
js
int3
mov
sbb
pop
mov
je
add
add
insb
stos
jp
xor
mov
xor
pop
pop
mov
mov
mov
pop
push
xchg
icebp
inc
or
mov
mov
mov
push
add
mov
xchg
lahf
stos
pop
push
pop
ret
or
xlat
shl
jno
xchg
subb
push
js
popf
scas
jmp
jns
dec
add
jmp
lea
or
fs
and
push
faddl
mov
mov
pop
push
das
adc
dec
call
inc
xchg
jg
pushf
vpor
jle
lods
movsl
sub
mov
sbb
mov
pop
test
xchg
nop
call
mov
xchg
adc
loopne
clc
inc
jg
mov
stos
dec
jge
mov
dec
sbbb
cmpxchg
movl
popl
push
push
xchg
mov
jecxz
mov
mov
pop
or
sub
sbb
pop
pop
std
out
push
xor
pop
mov
push
adc
fst
cmpsl
adc
aas
jns
adc
lock
xchg
mul
jb
sub
cld
mov
lret
repz
icebp
pavgb
mov
add
mov
loope
mov
mov
lret
fisubrs
push
popa
sub
mov
push
in
ds
cmp
push
jmp
scas
js
and
xor
int3
enter
lahf
sbb
adc
mov
jmp
imul
insl
sbb
inc
push
scas
xor
cmc
arpl
leave
test
mov
lret
mov
mov
xor
loope
fstps
mov
out
inc
pop
or
pop
lea
add
xchg
int
push
and
mov
pushf
outsl
mov
mov
inc
sbb
cmp
icebp
pushl
inc
and
sahf
fsts
negb
fsub
mov
xor
fisttpll
data16
sub
call
adc
jno
fwait
mov
and
sbb
in
cmp
cmp
inc
insl
sbb
fs
push
aaa
mov
lahf
mov
rcrb
jecxz
rol
cmp
scas
mov
fsts
js
mov
cli
jmp
xor
pusha
loope
pop
mov
fisttpl
aam
ja
cwtl
pop
sahf
cmpsb
pop
shl
xlat
jae
les
jecxz
int3
loop
xor
adc
fisubl
lods
in
insl
sbb
fisubrs
push
aad
sbb
scas
sarl
adc
or
push
and
rolb
jecxz
jmp
ds
fsts
lods
mov
push
and
mov
js
dec
push
test
stos
aas
push
shlb
mov
inc
outsl
imul
inc
movsb
cmp
or
mov
sub
loopne
in
ret
xor
data16
decl
pop
bound
or
jmp
ljmp
mov
pushf
lret
pop
mov
frndint
xor
jge
cs
and
xor
pop
or
pushf
or
fmul
gs
movsb
add
insl
dec
fisubrs
pop
push
lret
push
xchg
mov
ja
adc
movsl
add
or
insl
adc
pop
or
mov
enter
aaa
mov
jo
pop
dec
in
jbe
adc
cmpsb
mov
push
pop
in
cltd
or
dec
mov
sub
fnstenv
bswap
pop
in
cmp
mov
xor
adc
xchg
mov
xchg
jmp
inc
cmp
push
cmpb
popf
dec
inc
inc
xor
pop
jp
mov
pop
pop
add
jg
jg
repnz
shr
push
push
xlat
mov
lods
clc
in
movsb
pop
add
shl
in
enter
jno
iret
jg
imull
aas
or
lahf
mov
sbb
and
push
js
dec
ss
mov
cli
add
incb
add
daa
sub
jg
jno
add
and
sbb
rcrb
mov
repz
adc
sarb
or
out
inc
mov
mov
scas
cmp
pop
dec
clc
iret
mov
es
sbb
or
clc
popa
push
or
xor
pop
adc
setnp
cmp
cwtl
test
mov
aaa
ljmp
test
xchg
ror
cmp
add
xchg
inc
sarb
jl
insb
bound
push
push
test
test
sub
inc
cmp
insb
cmpsl
cmpsb
bound
dec
push
je
stc
inc
jno
out
cmp
mov
jae
stos
sub
cli
jne
or
enter
xor
jmp
or
inc
jecxz
out
stos
shlb
and
push
mov
sbb
gs
dec
lahf
mov
jo
or
out
sbb
lock
adc
cmp
decl
jp
mov
sub
inc
popa
mov
stos
out
push
mov
stc
dec
stc
inc
out
fwait
mov
or
addb
data16
xor
adc
lds
gs
xchg
pop
or
sahf
outsb
mov
xor
or
pop
mov
push
mov
add
imul
mov
jb
test
insb
sahf
jo
mov
fnsave
negl
jmp
es
mov
ja
jge
push
jbe
jne
xlat
adc
dec
xchg
loop
iret
fs
iret
push
daa
arpl
push
adc
mov
xchg
jns
sbbb
cwtl
and
dec
mov
ljmp
rorb
mov
out
xorb
js
add
sbb
jno
pop
sbb
aas
sbb
push
fcomps
sub
loopne
jbe
push
push
fimull
inc
lahf
lds
mov
jo
setnp
lds
bound
inc
xor
adc
or
sub
mov
sbb
filds
xchg
lahf
inc
mov
mov
pop
cmp
les
pop
mov
mov
ljmp
ljmp
aas
iret
xor
inc
mov
push
sbb
gs
cmp
mov
pop
lds
cmp
ljmp
adcb
and
adc
lea
pop
push
add
add
ljmp
jae
popf
xchg
add
sbb
popf
push
xchg
shrd
jl
sub
imul
jge
inc
mov
into
sub
stos
outsl
push
mov
jno
loopne
adc
cld
fsubl
not
mov
cmp
pop
cwtl
fistpll
stos
xor
inc
cmp
sbb
mov
jnp
and
ds
lods
fldenv
push
sti
or
imul
push
lret
test
add
or
pop
sahf
inc
mov
ret
mov
rcr
cmp
cld
ljmp
cmp
cs
leave
and
aas
mov
js
out
cmpsl
fsubr
push
xchg
mov
mov
rolb
adc
insb
jnp
sahf
inc
jb
ficomps
loopne
mov
pop
cmp
inc
jmp
cmpsb
out
mov
popa
mov
cwtl
cmp
test
ret
inc
jbe
lret
mov
pop
pop
shl
xchg
push
icebp
lea
inc
xor
sub
movsb
xor
xor
incl
add
mov
dec
or
divb
cmc
add
push
jbe
mov
fisttpll
insb
xchg
add
jne
jecxz
and
repz
xchg
in
dec
jne
cltd
xchg
xor
push
in
pop
pop
divl
mov
add
or
popf
pop
or
adc
test
jge
sub
pop
push
xchg
pop
or
or
cmp
add
or
popa
clc
mov
daa
in
inc
lods
cmc
xor
nop
mov
lds
pusha
shl
mov
lahf
and
mov
xor
jo
push
push
cmp
adc
lahf
fwait
mov
dec
mov
xchg
subl
jno
xchg
sub
mov
mov
scas
cmp
adc
xchg
loop
push
cmc
pop
scas
push
jp
mov
mov
pop
cmp
leave
jp
add
jl
xor
xor
shr
fimull
insb
stos
xchg
shlb
fiaddl
out
inc
je,pn
adc
add
push
jmp
addr16
jae
in
mov
repnz
and
jns
repnz
imull
dec
inc
cmp
ret
and
js
mov
sbb
or
or
adc
push
xchg
push
shlb
mov
and
push
or
sub
mov
push
adc
fsubrs
mov
lret
and
fistps
outsl
and
lret
xchg
je
add
push
adc
xor
dec
ficompl
test
push
test
xlat
dec
subb
jmp
mov
sub
out
mov
js
call
jb
and
xchg
add
call
vxorps
mov
add
add
sub
jmp
rorb
sub
cwtl
ret
xor
arpl
loopne
popf
push
sbb
or
adc
rorl
ret
fcmovne
ljmp
movsl
or
enter
jae
sbb
movsl
jg
mov
mov
adc
pop
mov
insl
pushf
shr
xchg
iretw
ja
xchg
add
mov
push
test
add
cwtl
xchg
flds
and
xchg
inc
mov
sub
lahf
scas
jbe
aas
fmull
daa
adc
repnz
xor
pop
mov
mov
xchg
jns
stos
loop
lret
arpl
inc
cmp
in
push
das
fistpl
sarb
mov
mov
push
das
pop
mov
sub
std
sub
jge
push
lds
flds
shl
pop
imul
dec
nop
push
fadds
cwtl
xor
test
mov
ret
outsb
mov
sub
or
cmp
inc
xlat
lds
mov
fidivrs
adc
sub
xchg
push
loop
call
xor
orb
outsl
pushf
and
mov
jno
test
repnz
fistps
imul
repz
icebp
pop
imul
or
adc
and
mov
sub
aas
imul
fiaddl
cli
lock
lahf
aam
into
xchg
test
xchg
jae
push
mov
mov
outsl
pop
xor
nop
cmp
hlt
nop
add
sbb
je
mov
pop
insl
add
dec
lods
and
lcall
aas
fsubp
add
mov
mov
jecxz
lds
push
push
lods
add
or
xchg
xchg
mov
addr16
push
adc
push
mov
shl
test
movl
mov
std
xchg
mov
aas
pop
lods
xlat
pop
lret
or
jl
cmp
xchg
mov
cwtl
stc
push
xchg
cmp
in
rol
je
sbb
inc
into
push
in
inc
in
inc
xchg
cmpsl
adc
pop
jecxz
and
fstpt
mov
jne
mov
std
cld
mov
mov
jp
test
imul
inc
pop
ret
jnp
cmp
loop
jecxz
stos
mov
scas
cmp
lods
push
jle
cld
mov
inc
repz
pusha
daa
scas
stos
jmp
push
cmp
xor
inc
inc
mov
enter
adc
pushf
inc
cmpsl
je
cmpsl
dec
xor
mov
add
loope
mov
mov
pop
mov
hlt
repz
shrb
test
mov
bound
insb
dec
xor
cwtl
mov
and
adc
sub
cmp
sbb
xor
lahf
aaa
mov
movsl
lea
sahf
fbstp
inc
inc
out
push
rclb
outsl
fists
negb
add
cltd
mov
jmp
lret
cmpsl
pusha
pushf
xchg
out
mov
sub
cmp
stc
lret
imul
mov
jg
inc
add
mov
mov
mov
ja
call
pop
xor
stos
jo
or
mulb
lds
lea
mov
test
pop
xlat
inc
loop
mov
xchg
push
adc
xchg
test
in
adc
xor
cmpsb
xchg
fcomps
je
test
pop
adc
dec
sbb
faddl
inc
jmp
aaa
in
scas
or
imul
add
test
dec
cmp
mov
pop
in
xor
xchg
gs
js
in
xchg
nop
aas
out
mov
imul
sbb
and
loop
aam
pop
js,pn
push
mov
lahf
sub
lcall
xchg
jge
mov
rclb
insb
cmp
or
ret
xor
popa
repz
mov
pop
pop
ficoms
pop
enter
add
leave
pop
mov
dec
in
out
jo
scas
jbe
jno
sti
inc
mov
push
cltd
imul
push
pop
pop
sbb
clc
mov
inc
icebp
xchg
iret
mov
ret
sbb
jns
xor
pop
and
sahf
lock
shll
jo
mov
xor
dec
in
pop
xchg
insl
push
aam
stc
xlat
and
push
in
xchg
repz
mov
xor
mov
inc
ja
lret
pop
sbb
xor
adc
sub
jb
inc
cmp
cmp
jmp
push
sbb
aaa
lea
sub
lds
xor
jae
push
aas
dec
andl
xorb
cmp
lahf
nop
sbb
pop
jo
repnz
cmp
cmp
out
or
not
enter
xchg
in
cmp
sbb
xchg
sbb
sub
movsb
xchg
cmp
inc
sbb
lea
fsub
insl
adc
push
cwtl
pop
iret
mov
or
mov
in
xor
sbb
das
outsl
jns
add
movsb
pop
insl
scas
mov
flds
mov
sbb
mov
cmp
in
mov
ret
pop
fwait
rep
push
jo
jecxz
dec
pop
and
pop
xor
dec
mov
add
arpl
stos
mov
adc
sbb
mov
pushf
rcl
and
add
insl
and
mov
arpl
fistl
cs
pop
out
fildll
xchg
test
mov
xchg
aam
leave
jg
sub
pusha
jno
add
and
not
push
into
push
cs
pop
inc
leave
int3
arpl
das
push
std
ja
xchg
mov
inc
fisttpl
nop
jno
push
sub
inc
xchg
cmp
das
out
inc
sar
filds
arpl
leave
xlat
jp
aad
enter
mov
pop
inc
hlt
mov
fcomps
cmpsl
pop
mov
xor
xchg
xchg
xor
pusha
and
test
out
lock
imul
lds
ss
jecxz
xchg
cli
popf
add
pop
mov
push
mov
leave
push
leave
gs
xor
push
scas
ljmp
outsl
les
adc
iret
sahf
push
int3
dec
jge
filds
int
sbb
push
sub
bound
insb
xchg
std
in
enter
inc
cmp
mov
adc
pop
insl
fwait
and
shl
insb
cld
adc
outsb
jb
iret
cwtl
push
loopne
pop
cmpl
jmp
xlat
insl
movsl
insb
ret
pop
loop
mov
dec
sbb
add
or
insl
mov
aam
jl
pop
jae
in
lret
adc
and
stc
add
jnp
pop
fsubr
loopne
imul
rclb
loope
lahf
shlb
fmull
stc
jb
cmp
adcl
mov
push
cltd
fstl
jbe
movsl
aad
add
sub
jbe
sbb
inc
int
dec
lds
cli
aad
mov
push
xlat
jge
divl
pushf
out
ret
daa
xor
inc
dec
gs
ret
add
push
inc
pop
jo
jne
cli
sbb
imul
or
cmp
mov
dec
push
js
xchg
es
bound
mov
shll
add
imul
popa
rcrb
negb
dec
xor
add
jmp
out
push
mov
mov
out
scas
adc
mov
or
cld
ret
popf
scas
or
sbb
cld
test
jp
jno
out
inc
std
xchg
dec
cmp
int3
aam
inc
push
jo
xor
gs
and
notb
insb
sbb
pop
fwait
sub
mov
lcall
xchg
or
xor
frstor
mov
outsl
pop
fisttpll
dec
inc
add
std
fildl
cmpsb
push
aas
ja
lcall
popa
out
inc
popl
enter
das
xchg
mov
enter
ja
xor
sarl
sbb
out
mov
add
push
insb
mov
dec
jecxz
push
movsb
or
or
repz
mov
mov
insl
aam
lret
lahf
clc
das
lcall
push
or
mov
outsl
cmp
sub
mov
sub
cltd
add
sub
fdivr
notl
pop
or
fsubl
adc
push
out
jo
loope
neg
xchg
insl
pop
idivb
es
mov
xor
pusha
loop
lahf
mov
imul
imul
dec
jecxz
jmp
cmp
and
jns
push
pop
sub
test
insl
sub
push
pop
xor
hlt
xchg
fnstsw
leave
mov
push
jno
outsl
mov
mov
movl
outsb
mov
sbb
add
adc
mov
cwtl
pop
pop
cmp
and
dec
insb
imull
loope
sub
or
jecxz
inc
add
sbb
test
push
or
lds
pushf
fs
inc
fbld
and
inc
mov
mov
js
in
mov
cld
inc
mov
leave
pop
mov
pop
pop
imul
or
cmc
xchg
pop
mov
dec
outsl
jno
sub
nop
pop
jecxz
dec
gs
int
scas
mov
test
push
sti
test
cmp
mov
mov
push
inc
insb
xor
cwtl
xlat
aam
dec
sub
fwait
sbbl
xor
inc
cmp
sub
nop
xchg
das
mov
ljmp
int
cld
int
mov
mov
xchg
test
xchg
lock
and
or
push
push
sub
dec
je
cltd
out
xchg
es
insl
das
dec
enter
push
sbbl
pop
pop
dec
pop
stos
push
sti
shlb
js
pop
sti
js
loope
xchg
movsl
icebp
add
pusha
or
xchg
addb
nop
test
in
ror
lahf
inc
inc
loop
cwtl
das
lock
push
jns
das
inc
add
jno
sbb
fs
aad
mov
xchg
sti
pop
loope
jge
or
push
push
ljmp
sbb
lahf
insb
clc
cvtdq2ps
jecxz
or
movsl
or
in
xchg
imul
xchg
pop
ret
imulb
in
or
pop
stos
in
insl
sbb
jmp
mov
rcrb
lcall
les
stos
push
shl
bound
aaa
ja
pop
dec
js
jbe
lret
test
sbb
inc
push
mov
xchg
mov
andb
jp
idivl
into
inc
and
xorl
fyl2x
in
arpl
adc
push
out
out
iret
lods
fcomps
fwait
mov
fists
cmc
ljmp
test
push
mov
and
cmp
adc
mov
cld
lret
jno
sbb
scas
lcall
rcl
push
dec
mov
outsl
dec
sbb
test
add
mov
bound
fistpll
pushf
cmpsb
out
fst
adc
test
rcl
dec
stos
xchg
in
push
popf
lods
std
aas
add
rcll
inc
push
mov
test
rep
cmpsb
ficompl
jo
inc
insl
mov
jae
in
inc
sbb
fisttpl
out
jp
repnz
hlt
dec
in
push
enter
mov
rol
pop
mov
fidivrs
pop
and
fstps
mov
adc
or
enter
mov
xchg
sub
mov
xorb
daa
xlat
add
test
ret
cs
or
mov
insb
loope
cmpsb
dec
out
cmp
sub
sub
mov
ljmp
lcall
mov
bound
sbb
popf
push
clc
addr16
jg
test
and
pop
mov
xchg
xchg
push
add
int
hlt
xchg
mov
sbb
aaa
push
loopne
out
add
push
inc
stc
sbb
adc
cmpsl
sarl
push
mov
mov
test
dec
add
jecxz
insl
addr16
xchg
and
out
sbbl
mov
jmp
and
pusha
es
outsl
dec
je
pop
in
test
xor
sub
popa
pop
pop
es
cmp
imul
adc
and
outsb
jl
adcb
cmp
mov
pop
mov
js
popf
rcll
sbb
xor
and
hlt
shrl
push
aad
int3
xor
nop
cmp
sahf
js
test
fisttpl
scas
sub
pop
cmp
cmp
sub
pop
dec
pop
and
lret
and
scas
popf
dec
adc
or
stc
ficompl
imul
adcl
icebp
outsb
fsubrs
popl
push
cmp
mov
rcrb
mov
mov
ja
insl
pop
add
hlt
iret
mov
fstps
xchg
data16
cltd
push
les
mov
xor
xor
pushf
push
outsb
add
iret
xchg
jecxz
pop
sahf
std
push
inc
push
scas
fsubrl
insb
mov
icebp
mov
notl
ja
mov
sub
lahf
xchg
in
test
mov
mov
cmpsb
pop
ret
xchg
out
adc
sub
jo
insl
dec
sbb
jbe
fcomi
mov
mov
push
add
xchg
aaa
rorl
dec
xor
add
sub
icebp
lret
or
and
cmp
outsb
je
mov
incb
les
xor
nop
shlb
mov
pop
jecxz
adcl
cmpsl
cs
out
pop
dec
outsl
in
and
jb
arpl
and
les
pop
dec
insl
mov
shr
testb
mov
mov
inc
icebp
xor
bnd
add
loop
xor
jecxz
mov
xchg
icebp
adc
jno
cmp
imul
int
xchg
adc
jbe
repnz
jno
aad
sahf
scas
or
enter
cwtl
inc
cmc
cmp
arpl
rorl
mov
gs
fsubrs
lods
cmpsb
mov
out
rol
cld
xor
mov
popa
cmp
stc
out
dec
cmp
nop
cli
leave
out
jle
cmp
insl
xor
mov
adc
loopne
sbb
mov
arpl
mov
push
mov
xchg
ljmp
jge
mov
in
jl
lahf
xlat
and
cmp
lcall
insl
jg
int3
dec
cltd
mov
or
je
icebp
stos
repz
xchg
stos
lret
mov
xor
xchg
das
mov
dec
cs
daa
adc
lcall
xchg
repz
push
jns
test
cld
mov
jecxz
sbb
xchg
cmp
jne
adc
xchg
mov
inc
adcb
cld
xchg
int
call
int
jnp
mov
sbb
or
inc
mov
daa
xchg
sahf
mov
sbb
mov
add
pop
ret
int3
insb
pop
adc
ljmp
loope
shr
jmp
push
pop
sahf
inc
shrl
jne
xchg
mov
pop
insl
pop
sub
push
cmpsb
sbb
sub
sbb
pop
adc
out
jo
ret
out
insl
daa
pop
push
fadd
jbe
sub
cmp
push
lods
js
jae
mov
or
adcb
mov
sub
xor
imul
and
sub
xor
push
outsl
popa
rorl
pop
dec
xchg
add
mov
repz
inc
adcb
lret
cld
push
xchg
inc
or
mov
cwtl
sub
stc
sub
in
sub
xchg
pop
or
pop
inc
sub
rcrl
lcall
roll
imul
push
inc
add
mov
cmp
xlat
sahf
stos
pop
xor
push
repnz
aas
jmp
cli
decl
outsl
cltd
push
and
das
jae
xor
mov
or
cltd
push
cwtl
pushf
sbb
ljmp
aas
iret
xchg
adc
mov
mov
dec
jmp
jp
test
or
mov
je
cmp
or
jp
add
movsb
fstpl
insl
ss
xchg
aas
ret
dec
jl
mov
loope
in
movsl
mov
and
xchg
loope
adc
lret
and
ret
pop
sbb
sbb
mov
cmp
jl
testb
add
pop
lcall
sub
jl
mov
int3
mov
mov
inc
dec
popa
mov
xor
dec
clc
push
rcrl
fs
cmp
shrb
and
pop
pusha
inc
nop
ds
in
in
cmpsl
lds
jno
leave
roll
mov
cmp
mov
iret
and
nop
mov
and
mov
into
jle
push
jo
mov
mov
repnz
xor
icebp
in
jecxz
int
add
jecxz
pop
fwait
sbb
stc
add
loop
mov
mov
dec
mov
cmp
xchg
lcall
rol
mov
xchg
cmp
mov
nop
loope
cmpsb
fsubs
sbb
ss
leave
cmp
jmp
outsl
jne
xchg
cmc
cmpsl
mov
scas
lcall
mov
loopne
lds
pop
xlat
and
sti
xor
dec
sbb
adc
or
mov
std
jns
adc
mov
insl
or
jae
mov
cwtl
lock
xchg
or
insb
sbb
or
pop
dec
mov
aaa
xchg
xchg
jno
jns
sub
pop
divb
js
sbb
adc
data16
inc
pop
jns
and
roll
pop
rolb
sbb
outsl
pop
pop
repz
push
loope
xor
aas
call
out
enter
mov
pop
out
cld
gs
mov
insb
scas
movsb
flds
mov
nop
or
dec
sbb
and
scas
outsb
mov
scas
push
push
pop
repnz
and
adc
sub
ret
les
in
sarl
pop
pop
je
mov
icebp
xchg
add
mov
and
int3
xor
xor
loopne
dec
aad
and
rolb
ss
packssdw
inc
cmp
jl
ror
xchg
mov
push
jne
ds
mov
fisttpll
jns
push
xchg
push
scas
push
shlb
mov
je
dec
clc
add
in
push
imul
or
mov
dec
fmull
push
loopne
shll
hlt
sub
test
fmul
ljmp
insb
fcoms
adc
movsb
jo
jns
mov
mov
jp
in
jecxz
iret
cmp
insl
adc
and
xor
push
popf
roll
divl
scas
loope
sub
stos
jle
adc
mov
inc
pop
or
xchg
push
dec
jecxz
movsl
mov
sbb
xor
cmp
daa
in
dec
jge
out
int3
andb
and
lea
je
repnz
lcall
and
testl
mov
sbb
pop
jo
aad
xchg
mov
js
clc
adc
jb
test
xchg
outsl
bound
insb
push
dec
addr16
loope
repz
add
push
loop
xchg
push
add
pop
jge
imul
aas
add
orl
inc
inc
andl
sahf
arpl
clc
mov
leave
loopne
push
mov
pop
mov
ss
mov
jo
outsb
xor
jns
xchg
jbe
lea
out
sub
pop
xchg
in
inc
les
test
imul
sub
out
xchg
pop
sub
movsb
stc
and
ljmp
std
fadds
cmp
out
fsubrs
and
shl
mov
in
mov
in
lret
loopne
bound
rorl
test
leave
dec
mov
cmp
ljmp
push
incl
loopne
into
mov
std
in
cltd
pop
in
pop
push
add
mov
xor
add
ljmp
dec
ja
adc
cmp
sub
enter
lret
aaa
jns
push
imul
mov
dec
push
xchg
inc
cld
fdivp
fcompl
adc
pop
inc
or
je
sbb
inc
cmpsb
in
jae
mov
cmpsb
roll
fidivl
sbb
jae
xor
jns
dec
lods
or
cmpb
push
and
cmp
scas
mov
push
cld
jl
sbb
dec
push
imul
int
addr16
arpl
lods
loop
push
repz
inc
lret
jecxz
dec
inc
mov
shr
fadd
aas
ss
stos
xchg
shll
mov
add
test
add
faddl
rcl
repz
adc
scas
jp
and
mov
jg
ds
or
push
adc
arpl
jno
pop
push
and
pusha
push
xchg
ja
je
mov
hlt
adc
pop
xchg
cmp
ret
cmpsl
xchg
rcrl
ljmp
xchg
bound
pop
lahf
mov
lds
or
adc
push
push
sbbb
enter
inc
push
ss
nop
mov
xor
enter
stc
lret
leave
pop
ret
jb
xchg
mov
cmp
mov
int3
sbb
mov
and
fisubs
aam
ss
rcr
fcmovnu
movsb
and
ljmp
jb
bound
test
dec
pop
rorl
frstor
mov
jae
push
fsubs
es
insl
in
cmpsl
ss
adcb
sub
fmuls
xchg
jbe
sbb
adc
dec
popa
dec
daa
dec
jle
mov
push
ds
cmp
iret
test
lock
jno
sbb
sub
cmp
roll
mov
add
and
mov
xchg
mov
jns
nop
mov
sub
sub
pop
mov
push
mov
mov
mov
shrb
call
push
jp
adc
sub
cmpsl
leave
test
push
xor
mov
in
sub
cmp
mov
cwtl
jnp
add
xchg
rcpps
adc
lret
mov
out
addr16
test
xchg
xchg
xor
jnp
int
fcmove
insl
std
stos
pushf
aaa
push
mov
fstpl
push
cltd
mov
xor
jns
xchg
mov
dec
fiaddl
incb
mov
jb
pop
mov
in
into
std
imull
xor
mov
iret
jg
sbb
jl
jmp
add
mov
jno
imul
je
pop
pop
sbb
cs
idiv
mov
adc
out
lods
cli
push
push
xchg
int3
in
or
test
stos
jne
faddl
pop
mov
dec
sbb
or
orl
pushl
in
jmp
out
adc
pop
sbb
xchg
movsl
inc
orb
mov
push
in
adc
sbb
daa
sub
stos
jge
int3
fucom
rclb
sub
lds
or
fimuls
mov
and
in
lods
test
xchg
test
out
dec
pop
add
fldl
xchg
lret
shrl
cmp
adcb
mov
movsb
sub
dec
shld
pop
aad
test
xchg
push
outsl
movsb
push
cmp
push
cmp
lods
jne
mov
mov
jecxz
stos
rcll
xchg
mov
mov
fucomi
sbb
jg
cmp
mov
inc
dec
rorb
jne
pop
lret
scas
loope
pop
push
adc
push
lock
stos
test
jg
imul
dec
sbb
push
mov
pop
pop
rorl
mov
mov
mov
inc
mov
add
or
out
inc
dec
icebp
lock
ret
das
lcall
inc
jle
mov
sbb
mov
mov
dec
jge
fdivl
jbe
js
add
lods
in
cltd
cmp
js
ds
popa
stos
sub
fidivrs
imul
xchg
jno
mov
pop
outsb
js
push
mov
pop
movsl
sbb
enter
aam
pushf
xchg
fstpl
inc
ja
cli
jne
inc
inc
popf
lret
aaa
mov
sub
pop
adc
mov
or
jo
in
sub
adcb
arpl
int3
lret
xor
cmpsl
les
fcmovbe
and
inc
fcoms
and
loop
lcall
lret
fmuls
in
push
dec
sbb
imul
lods
push
xchg
and
repnz
xor
mov
por
lods
mov
mov
fcoml
movsl
sarl
sar
lret
dec
jmp
mov
pop
loop
xchg
mov
cmp
mov
aad
pop
or
out
mov
and
sub
in
je
xchg
sti
dec
pusha
pusha
cmp
pop
mov
popf
and
jmp
xor
lahf
mov
lahf
xchg
pop
test
xchg
jecxz
or
mov
call
mov
adc
mov
int
lock
repz
lret
mov
push
out
mov
sahf
in
push
xchg
orl
jbe
mov
loop
sbb
test
lods
sbb
and
stos
loopne
mov
imul
scas
sbb
jbe
mov
je
and
push
imul
shl
jb
dec
or
daa
ret
adc
shr
ja
insb
call
push
mov
mov
mov
outsl
push
push
test
ds
mov
ds
aam
sbb
push
inc
sub
fcmove
xchg
mov
ja
movsl
dec
sbb
xchg
xchg
daa
inc
or
out
xchg
mulb
movsb
fimuls
mov
add
or
in
scas
mov
push
mov
sbb
or
lock
jmp
fadds
mov
and
fbstp
test
stos
mov
cmp
adc
push
imul
lods
dec
inc
shll
movsl
pop
adc
out
pop
sahf
add
loop
mov
inc
xchg
mov
imul
adc
xchg
inc
scas
pop
pop
pop
flds
cs
mov
scas
push
add
and
add
jmp
lahf
pop
cmp
das
int3
adc
or
add
push
int3
sub
int3
xchg
dec
fwait
xchg
inc
mov
push
add
jl
dec
imul
xchg
fsubs
lods
scas
mov
movl
jmp
lds
or
xor
jb
mov
jnp
in
pop
ret
jmp
loopne
and
dec
or
lcall
popf
mov
jne
test
mov
fwait
out
cmp
pop
fldt
and
rclb
pop
fdivl
aad
sti
std
push
into
cmp
sbb
ss
jp
js
mov
lods
lock
loope
out
movsb
pop
adc
fisubrl
mov
cmpb
into
std
cli
dec
sub
adc
lods
add
mov
insb
xlat
daa
pop
out
cmpsl
imul
aad
xor
movsb
jmp
jb
jb
adc
jnp
das
fwait
cmpsb
leave
cmpsb
ds
cltd
mov
push
dec
jae
lods
daa
testl
loope
gs
inc
cmp
hlt
adc
add
cmp
or
in
ret
jmp
mov
outsb
aam
xchg
insl
mov
jmp
and
lea
cs
mov
int3
jl
ljmp
jnp
fisubrs
insl
sub
shll
stc
xor
cmpsb
pop
xchg
outsb
xchg
cltd
sbb
fldcw
or
nop
ljmp
lods
push
and
fisubrs
mov
xor
jae
lret
and
sbb
int
jl
popa
mov
xor
or
lcall
mov
movsb
push
cltd
pop
inc
xor
sti
dec
pop
in
imul
rol
fildl
sbb
inc
mov
sub
pop
dec
clc
out
add
in
in
inc
pushf
cltd
add
adc
das
iret
jo
adc
xchg
and
fwait
sbb
sbb
cmp
fistps
rcr
ficoms
sub
mov
nop
xorb
xor
xchg
mov
mov
pop
add
subl
xchg
repnz
popf
incb
lcall
sarb
sub
sbb
pop
mov
dec
and
push
sub
into
cwtl
push
test
sbb
and
test
pop
inc
add
and
push
jnp
fstps
cltd
sbb
testb
in
xor
aaa
xchg
scas
in
into
mov
mov
addr16
inc
and
data16
mov
pop
sub
sbb
jmp
sbb
sub
jnp
cmp
sbb
pop
inc
push
dec
int
mov
add
mov
int3
adc
enter
sbb
imul
xlat
subl
cld
mov
mov
sub
mov
xchg
mov
cmc
add
repz
in
in
dec
sahf
ljmp
mov
inc
out
imul
cmp
and
push
inc
inc
dec
fmulp
add
push
jns
cmp
int
mov
cmpsl
lods
and
sbb
adc
sti
mov
shll
out
aad
lahf
fisubs
sti
pop
mov
int
cmpl
gs
mov
stos
jge
lahf
sub
lods
xchg
movsb
inc
push
mov
sub
pop
pop
xchg
rorb
cmp
sahf
flds
dec
incb
xor
sub
das
int
je
movsb
jecxz
pusha
and
das
xchg
int
cmp
cmp
adc
lret
lret
fistps
jae
xor
hlt
out
stc
dec
dec
imul
out
call
push
bound
shll
or
pop
xor
repz
les
stc
push
std
add
out
push
mov
je
cmp
add
sbb
xor
inc
or
dec
test
aam
lock
imul
in
dec
fisubrs
lock
xchg
push
mov
dec
fdivrs
test
rcrb
dec
dec
xchg
pop
jmp
or
mov
xor
xor
mov
mov
jns
push
dec
icebp
cltd
jae
mov
neg
pop
xor
lahf
push
dec
icebp
fistpll
mov
adcl
adc
mov
push
std
adc
std
cltd
push
mov
ljmp
stc
inc
cmp
test
das
fwait
dec
mov
jmp
arpl
push
enter
outsb
or
xchg
test
jge
lods
lret
xchg
ret
ret
adc
sbb
insl
sbbl
adcl
rcr
pop
xchg
or
pop
filds
sub
push
sbb
shl
test
int
pop
cmc
mov
push
rorb
pop
sub
pop
xor
pop
into
gs
push
cmp
clc
push
lea
pop
xchg
jnp
xorl
xchg
mov
rorl
cmc
cmp
mov
lea
lret
push
sahf
push
mov
inc
jae
xorl
mov
orb
push
ror
loopne
insl
fldcw
hlt
pop
subb
inc
mov
insl
repz
push
nop
adc
jno
dec
push
mov
jo
pop
cmp
pusha
inc
add
int3
sbb
mov
xchg
cmp
test
mov
inc
add
inc
or
je
fucom
ss
sti
mov
xchg
idivb
inc
enter
mov
sub
push
cwtl
int3
mov
dec
xchg
daa
lods
cmp
sbb
movsb
jns
mov
cwtl
mov
xchg
push
fistpl
dec
sub
imul
jmp
xchg
rclb
es
lods
or
xchg
or
dec
addb
sub
xor
sahf
sub
xchg
xor
adc
addl
in
mov
or
mov
test
mov
or
hlt
loope
sub
out
loopne
sub
addr16
outsb
or
int3
mov
sbb
jmp
push
adc
cmp
cmp
sbb
xlat
pop
pop
jne
mov
inc
gs
and
jo
test
adc
test
mov
sbb
add
push
jbe
ror
xlat
mov
cmp
mov
xchg
out
lock
sbb
pop
sbb
lret
push
dec
lods
cmp
dec
shlb
pop
mov
rol
and
or
inc
stos
outsl
stos
adc
test
ss
in
scas
int
cmp
xor
mov
add
jp
out
jo
pop
mov
mov
into
aaa
test
push
cmc
jmp
aaa
dec
mov
inc
gs
mov
add
pop
xchg
cs
xor
enter
mov
dec
add
add
cmp
cli
and
inc
cmpsl
cmove
jae
push
adc
jecxz
adc
call
repz
in
or
mov
xchg
add
aad
insb
hlt
repz
xlat
ja
leave
cmc
repz
outsl
popa
inc
out
push
sar
mov
inc
mov
xchg
or
xor
int
pop
pop
xchg
pop
insb
mov
sbb
mov
sub
clc
out
inc
jge
xchg
push
ds
in
movsb
add
mov
arpl
pop
sarl
sub
cmpsl
jne
pop
cmp
bnd
lahf
and
pop
cmp
gs
jno
pop
cmp
inc
xorb
cmp
or
jae
jecxz
lcall
mov
push
dec
pop
fildll
or
lea
and
inc
sbb
mov
fstps
loope
xlat
push
lcall
ret
es
dec
scas
adcb
jno
sbb
jnp
enter
hlt
mov
add
cld
gs
jno
pop
lcall
add
adcl
xor
sbb
out
les
xchg
mov
dec
and
adc
rcr
clc
xchg
jmp
lock
push
cmp
jnp
shrl
gs
sbb
jge
repnz
shll
dec
add
ja
lods
lds
stos
lock
mov
mov
ss
mov
sub
jns
inc
bound
jp
es
dec
mov
test
xchg
lds
mov
pop
xor
fwait
sbb
out
adc
mov
mov
add
pop
movsl
negb
pop
jnp
fwait
pop
cs
pop
mov
call
jmp
aaa
dec
in
pop
jge
pop
daa
scas
mov
scas
les
sub
data16
push
movsb
lods
push
sub
sub
fucom
icebp
xor
ds
idivb
andl
cs
push
lahf
dec
jg
dec
call
movsl
out
mov
jo
in
pop
mov
xchg
jmp
shl
sub
cld
daa
xchg
cmp
xchg
add
mov
shll
cmp
std
jae
jbe
loopne
arpl
mov
iret
not
dec
pop
dec
imul
popa
sti
adc
jge
cwtl
lea
call
jno
xor
and
xor
xor
adc
push
cltd
inc
adc
push
cmp
lods
sbb
mov
cmp
and
rcrl
test
hlt
jle
sub
push
add
sub
jecxz
ret
imul
push
lods
int
jb
jl
insl
decl
aas
arpl
pop
in
inc
jb
cmc
or
cmp
sub
stc
and
jle
or
rcll
nop
pop
popa
test
sub
test
xchg
subb
lahf
aas
and
jb
mov
scas
xchg
fsubp
inc
cmp
cmp
repz
cmpsb
mov
shll
das
pop
pop
fwait
jae
sbb
push
loopne
mov
or
fstpl
mov
repnz
loope
out
rdtsc
or
rorl
je
sub
sub
and
es
movb
xchg
mov
sbb
sahf
or
popf
pusha
xchg
popa
add
stc
pop
imul
mov
mov
jne
nop
lret
test
sti
int
xor
jns
loop
pop
pop
ret
pusha
sbb
movsl
adc
sbb
add
or
inc
and
bound
int3
dec
fcoms
inc
ds
js
fsubs
flds
fbld
mov
fbld
push
fcompl
std
pop
pop
lret
hlt
lock
loop
pop
or
xor
fiadds
les
push
pusha
shl
cmpsl
fsubl
loop
xor
cs
cmp
adc
pusha
sub
add
inc
dec
cld
ljmp
enter
jg
jecxz
test
adcb
loopne
cltd
outsb
cmpsb
adc
xor
pop
ret
dec
dec
loop
pop
fstl
gs
test
jl
shlb
add
xor
mov
pushf
lcall
push
lcall
xor
cmp
pop
xlat
jae
fwait
int
adc
ds
xchg
cmp
test
mov
mov
out
adcb
cld
popa
jne
or
inc
stos
cld
in
inc
sbb
jle
fbld
pop
mov
lcall
mov
ret
dec
imul
sbb
push
lock
mov
js
pmuludq
xchg
out
stos
adc
sub
xor
cmp
mov
add
or
inc
lret
xor
dec
and
cld
pop
int
xchg
mov
stos
mov
mov
daa
lret
sbb
mov
ror
pop
popf
cmp
inc
jb
mov
pop
xor
jbe
loop
out
mov
sbb
mov
lock
cmp
xor
outsl
int3
pmulhuw
adc
ficompl
push
inc
cwtl
les
mov
pop
in
and
xchg
mov
cltd
mov
push
xchg
cld
mov
cmpsb
clc
fistpll
popf
std
cmp
add
jne
mov
arpl
ss
push
cs
sbb
add
aam
roll
mov
fsubl
jmp
cli
xor
xor
loopne
xor
adc
jbe
into
enter
lods
rol
mov
mov
dec
in
aaa
cwtl
push
adcl
add
jnp
mov
ss
pop
jo
lds
dec
pusha
dec
or
and
adc
push
dec
insl
jmp
sti
cmp
mov
scas
repnz
jnp
sub
jp
xor
or
pop
out
mov
adc
das
mov
add
mov
ja
ja
ja
inc
add
in
clc
loop
enter
sub
repz
mov
test
pop
lahf
or
outsb
test
cltd
mov
inc
rorb
cmp
out
inc
pop
xor
mov
lahf
jb
leave
pop
mov
push
or
or
daa
add
sub
outsb
stc
jae
add
mov
jl
mov
pop
or
cmp
ret
ss
pop
adc
ss
fldt
pusha
stos
sub
mov
xchg
repz
mov
sbb
cmove
testl
stc
clc
cmp
jne
push
popa
and
sbb
pusha
inc
cmp
dec
dec
dec
push
jo
pop
sahf
jle
out
stc
jp
cmp
scas
rcrl
pop
cs
insl
inc
in
dec
adc
notl
cmp
cli
adc
mov
cli
sub
pop
fwait
adc
fadd
leave
jno
inc
and
fcoml
adc
mov
mov
mov
enter
movsb
clc
or
lods
jnp
ljmp
and
push
add
xchg
mov
fbld
xor
lret
lret
mov
xchg
sub
xor
cmp
clc
pushf
cld
ror
aam
lods
les
rorb
std
mov
shlb
sub
mov
shll
dec
ret
lods
stos
in
fsubrl
xor
cwtl
or
xor
or
arpl
mov
into
movsb
jne
clc
pop
xchg
cmp
pusha
pop
cltd
mov
dec
and
or
sbb
aam
pop
sahf
xor
negl
mov
repnz
int
aas
aad
mov
mov
jle
jmp
sti
dec
sub
mov
lcall
fcmovnbe
aad
cmp
mov
sub
lds
mov
andb
mov
aas
je
xchg
jecxz
in
aaa
js
xor
inc
pop
mov
pusha
sub
xlat
mov
std
sarl
push
shl
xchg
xor
sbb
mov
sbbb
push
je
sub
push
jle
roll
lds
out
inc
inc
lds
sub
adc
aad
mov
cmpsb
pop
leave
lret
fs
cmpsb
push
insb
cmp
mov
and
jle
hlt
lret
lret
xadd
dec
push
sub
sub
ret
xchg
add
out
aam
jecxz
cli
in
loope
jg
add
fs
jne
xlat
sbb
mov
pop
adc
jno
fistpl
dec
sar
lock
push
cmc
std
icebp
mov
fnstcw
inc
adc
jne
inc
fnstenv
xchg
fsubrp
or
movsl
jb
inc
dec
lds
imul
int3
pmaxub
shl
into
and
loope
mov
mov
xlat
sbb
data16
mov
fwait
add
rclb
jmp
jecxz
push
jne
test
nop
sbb
scas
or
fld
jp
or
sbb
negb
scas
push
add
xchg
mov
cld
repnz
sbb
adc
jbe
rorl
fcmove
inc
dec
jecxz
inc
sbb
sbb
aam
pushf
sub
mov
int
ja
and
test
lds
dec
xor
in
sarl
aad
inc
stos
pop
xor
sub
fwait
mov
xchg
pop
mov
xchg
in
or
and
and
pop
into
mov
outsb
push
fwait
push
bound
scas
dec
adc
std
jmp
xchg
or
jne
in
icebp
jns
into
jb
sub
out
pop
cmp
pop
orb
lret
sub
jae
cmp
popf
out
sub
pop
xor
sub
fistpl
inc
fdivp
add
aas
andb
cmc
lret
std
pop
ja
rol
xor
sbb
imul
scas
in
mov
mov
mov
mov
filds
je
sub
mov
in
sbb
orb
push
loopne
or
sti
sub
jne
inc
mov
int3
call
push
jl
dec
addr16
mov
fbld
sbb
xchg
xor
jl
sbb
loopne
pop
jmp
and
jmp
cwtl
sub
sub
xchg
xchg
sbb
stc
xor
add
jg
stc
clc
or
mov
sbb
sbb
ss
iret
push
and
ret
in
gs
mov
out
inc
mov
stos
imul
mov
or
imul
mov
rorb
xlat
add
and
inc
pop
sub
shll
in
scas
cs
loopne
push
jecxz
dec
jo
js
pusha
add
adc
pop
push
es
mov
daa
outsl
pop
nop
xchg
cwtl
jle
inc
adc
mov
shrl
hlt
es
fiaddl
mov
aas
and
push
push
mov
stos
adc
mov
add
cmp
out
in
xchg
lock
int3
and
mov
daa
xchg
sbb
out
push
pushf
and
aam
sbb
roll
dec
mov
ficompl
mov
in
pop
sub
xchg
addr16
mov
jmp
lods
mov
dec
gs
push
cmp
fdiv
cltd
adc
fwait
add
or
stc
push
xchg
iret
insl
aam
push
scas
sub
xchg
pop
dec
sbb
sarl
mov
in
mov
cli
sub
aam
stos
pop
stc
cmp
lods
xchg
mov
jno
xchg
xchg
nop
add
mov
push
cwtl
loopne
mov
sahf
sub
mov
push
int3
inc
aas
cmc
xchg
mov
sbb
inc
adc
mov
in
or
lret
inc
lret
data16
fucomp
mov
mov
lods
xchg
sub
or
gs
test
sbb
aad
imul
test
dec
add
mov
pop
insl
or
loope
mov
or
dec
fwait
pop
aad
leave
sbb
inc
rclb
aam
jecxz
sub
push
sbb
test
cmpsl
jne
cmp
jl
daa
xchg
mov
adcl
xor
stc
xchg
int3
sbb
mov
fnstcw
mov
xor
mov
aas
aas
cmp
out
inc
mov
aad
in
vmread
lahf
rol
lods
sahf
xchg
and
loop
ljmp
pop
xchg
bound
mov
sbbb
dec
loopne
jnp
sub
xchg
cmp
decl
mov
sub
pop
pop
or
nop
shrb
cs
mov
shlb
lock
mulb
mov
jecxz
xor
fsubrs
hlt
xchg
xchg
adc
repnz
ja
mov
xchg
sbb
clc
fisubl
gs
or
out
cld
sbb
pop
jg
inc
sub
ret
jp
shrl
cwtl
xor
mov
test
std
mov
pop
lds
xchg
dec
sub
jns
test
fwait
xor
filds
cmp
inc
jne
fidivs
pop
or
xchg
dec
fwait
sbb
and
cwtl
addr16
mov
pop
lret
mov
fstp
dec
loop
addr16
mov
sbb
adc
in
ficomps
mov
add
lods
outsl
dec
pop
adc
cmp
add
mov
mov
mov
sbb
das
mov
sti
addr16
cmp
xchg
jnp
xor
lahf
fcmovb
inc
lret
mov
inc
jnp
xchg
cmpl
andl
stc
xchg
sub
cmp
scas
cmp
mov
aam
int
into
jge
mov
push
aas
outsl
sub
cld
push
sub
mov
jb
stos
imull
push
mov
pop
ljmp
push
movsl
rorl
in
lock
js
add
iret
mov
shrl
or
and
out
xlat
mov
ret
cmp
rorl
mov
xchg
into
mov
cmp
iret
jmp
jmp
jp
xchg
dec
pop
out
in
adc
popf
out
test
xlat
adcb
mov
ljmp
add
addr16
xchg
ret
push
stos
jnp
and
inc
cmp
mov
fdivrs
fists
push
cld
xor
dec
in
cmp
sub
test
add
push
mov
daa
xchg
int
out
mov
rolb
sbb
jb
mov
leave
xchg
jle
repnz
xchg
sti
inc
jae
mov
or
out
enter
js
sti
lret
fpatan
data16
adc
push
test
dec
sbb
test
jbe
nop
inc
enter
jge
hlt
cmp
push
mul
jle
js
inc
mov
adc
adc
je
rolb
incl
icebp
cmp
jg
cmp
add
xchg
or
lods
mov
arpl
dec
and
adc
inc
inc
inc
cli
pusha
out
or
add
movsb
outsb
jecxz
mov
sub
inc
sbb
and
sbb
in
test
sub
repnz
aaa
sahf
add
mov
cmp
pop
jg
ret
or
adc
popf
das
xchg
add
imul
fldenv
add
pop
mov
mov
inc
mov
and
outsb
jecxz
out
adc
arpl
and
ret
stos
hlt
dec
mov
inc
int
pop
fildll
push
pop
dec
adc
scas
les
xor
subl
sub
out
out
js
xchg
mov
dec
mov
or
add
add
dec
pop
xor
mov
in
jg
adc
dec
loopne
negl
shl
sbb
inc
dec
sarb
int
addr16
test
testl
fstps
insb
jmp
fisttpll
sub
hlt
pushf
fstps
add
inc
push
fcmovu
cmpsl
enter
sub
loopne
add
lahf
xor
push
jl
aas
xchg
push
xchg
rcl
aad
sub
loopne
jl
jg
aad
loop
fucomip
sbb
daa
gs
and
jno
mov
stos
fsubrs
pushf
test
pop
inc
aam
pop
mov
xor
gs
push
push
add
daa
pop
jbe
sub
faddl
fisttps
gs
pushf
int3
xchg
loopne
add
push
xor
jle
out
scas
pop
pop
dec
loope
in
dec
and
jle
scas
pusha
jecxz
xor
xchg
cmp
cld
push
jg
and
rcrl
pop
aam
fucomip
cs
and
mov
sahf
push
sub
mov
xor
push
jmp
sub
jb
les
inc
mov
xchg
push
cmp
sti
push
pop
add
jecxz
jge
hlt
das
jns
jns
iret
mov
ja
mov
int
gs
pop
nop
and
rol
cmpsb
jno
sbb
mov
in
or
mov
mov
inc
int3
push
pusha
xor
pop
jecxz
inc
adc
mov
add
fistl
cltd
ret
sahf
xchg
push
rcll
adc
cli
lods
js
jne
insl
mov
and
xor
jge
cltd
imul
icebp
xor
clc
mov
pop
mov
xor
popf
lods
ret
xor
jne
stc
data16
hlt
mov
mov
movsb
mov
push
add
insb
loope,pn
jecxz
push
iret
push
xchg
sub
push
pop
xor
or
mov
nop
mov
push
scas
scas
push
aaa
inc
dec
test
and
mov
xor
push
inc
test
fidivl
testb
in
dec
push
fildl
or
stos
jmp
mov
add
scas
inc
subb
or
mov
testb
jecxz
xor
loopne
rorb
dec
inc
jnp
mov
test
xor
jmp
rorb
xor
jg
push
stos
jbe
push
movsb
pop
mov
push
mov
or
push
fistl
mov
fs
mov
mov
xchg
jnp
mov
lret
clc
repz
xchg
push
push
jl
jne
jge
loope
notl
mov
add
jle
fnstcw
push
fimull
and
sbb
insb
scas
stos
ljmp
lods
cmc
jb
mov
aam
out
cltd
adc
mov
arpl
bound
fs
lcall
mov
xchg
pushf
adc
lods
aas
je
mov
sub
pminsw
push
lods
push
sbb
cmp
addr16
cmp
cmpsl
jb
imul
ja
insb
mov
mov
adc
test
push
mov
push
mov
lods
mov
out
jb
shrb
out
push
popa
loop
jo
mov
int
int
jecxz
xchg
push
lret
jne
xor
insb
jae
jne
dec
push
std
enter
add
and
js
pusha
scas
add
sub
jl
dec
xor
sti
int
sbb
addb
push
sub
movsl
fcomp
mov
sbb
jns
leave
mov
and
xor
inc
dec
mov
scas
mov
stc
inc
adc
pop
cli
pop
mov
pushl
cmp
jne
and
sbb
fsts
shrb
sub
or
sub
push
out
out
imul
dec
sub
arpl
adc
xchg
jnp
fmuls
sti
aad
test
js
dec
jne
mov
add
inc
push
hlt
push
std
dec
gs
ja
or
push
adc
mov
jbe
mov
ja
pop
push
sub
sti
stc
aaa
jmp
int
ficoml
in
pop
lea
adc
cli
out
sbb
js
cmpsl
mov
test
mov
movsl
mov
andl
into
or
push
push
pop
sub
out
or
jg
cmp
xchg
mov
lds
outsb
pushf
movsl
push
adc
out
mov
adc
dec
repz
cmp
les
xor
push
repz
out
inc
in
jae
in
sbb
adc
in
insl
movsb
sub
cld
pushf
or
and
sbb
add
jmp
mov
test
sbb
dec
out
cld
adc
lods
dec
in
mov
test
mov
aas
and
stos
and
cmpsl
cs
leave
test
repz
fildl
mov
test
sbb
test
pop
adc
data16
jl
sub
mov
shlb
scas
popf
sub
mov
or
inc
cli
test
cwtl
add
pop
repz
dec
xchg
pushf
mov
jns
cli
stc
inc
daa
ss
imul
arpl
lret
shll
js
push
and
mov
in
loopne
and
movsl
cwtl
mov
add
jo
sbb
movsl
bound
into
push
pop
push
pop
scas
xchg
orl
cltd
inc
inc
lods
push
outsl
xor
neg
push
pop
push
jge
dec
int3
mov
mov
or
xor
jg
xor
movb
mov
cmp
aad
jns
mov
and
fsts
xor
lahf
mov
jb
int3
adc
mov
lret
adc
movsl
mov
pop
cmpsb
popa
push
adc
push
push
dec
imul
mov
mov
mov
mov
ficoms
push
cli
mov
mov
loopne
inc
in
add
icebp
out
rcrl
aas
movsb
lret
out
lret
je
inc
sbb
inc
pop
aam
into
out
and
ficomps
cmp
jl
mov
mov
jl
and
sbb
xchg
push
and
insb
mov
sbb
pop
testb
cmp
add
orb
and
pop
adc
std
xchg
int3
pop
arpl
iret
jnp
cwtl
pop
mulb
push
mov
insb
add
lods
popa
push
loope
loopne
insl
mull
call
in
fnsave
or
pop
push
lods
adc
repnz
jmp
inc
jg
dec
pop
int3
fisttps
xchg
mov
popa
xor
xchg
cmp
jb
aaa
or
lret
dec
dec
cs
in
jl
in
fucomip
sbb
cltd
jo
nop
sbb
sbb
test
xor
mov
in
scas
repnz
and
movsb
fdivrs
in
sbb
xchg
fdivl
bound
stos
jecxz
pop
loope
fiaddl
idiv
dec
add
lcall
std
xlat
outsl
jl
mov
push
stos
or
les
cwtl
mov
mov
xchg
jecxz
add
sbb
dec
jp
jp
jge
mov
xchg
pop
inc
lds
aaa
push
fwait
add
sahf
aam
test
add
push
pushf
sahf
jmp
xchg
sbb
mov
sub
out
data16
pop
xor
int
call
es
cmp
jge
sub
cmp
cmpsb
xchg
aaa
push
into
adc
mov
inc
and
scas
adc
mov
push
push
jge
bound
rcll
sub
sbb
or
push
loopne
aas
daa
ljmp
std
ret
jns
xorl
lret
lock
inc
test
es
dec
aas
mov
sarb
clc
mov
movsl
andl
repnz
lcall
pop
in
fcmovbe
pop
cmpsb
push
aam
pusha
or
into
mov
shll
ret
mov
lret
movl
xchg
push
repnz
repnz
fdivs
nop
leave
test
daa
push
cmp
sti
sbb
add
adc
pop
in
lcall
aas
dec
cli
orl
lock
and
push
adc
mov
lock
cld
jmp
adc
inc
cmp
sbb
inc
dec
leave
aas
arpl
push
mov
mov
push
js
test
cmp
cmp
pop
repz
pop
push
out
or
cs
mov
shl
lods
mov
orb
jns
xor
pop
and
hlt
sbb
pop
inc
fistps
mov
bound
int
dec
add
mov
lods
ret
add
outsl
xor
jecxz
and
leave
hlt
in
jnp
add
xor
cli
or
jns
mov
dec
xor
xchg
and
or
push
add
jo
mov
xchg
dec
sub
jnp
add
shr
incb
or
mov
dec
aaa
jge
leave
dec
mov
sbb
shll
adc
or
daa
dec
sub
scas
xor
dec
mov
sbb
scas
adc
xor
mov
daa
addr16
sbb
sub
adc
arpl
mov
lahf
lcall
xor
repnz
stos
xchg
inc
push
push
jne
sbb
fwait
imul
test
add
adc
dec
cltd
std
lds
adc
dec
not
ljmp
inc
in
pop
or
pop
out
pushf
cs
adc
pop
lods
scas
in
dec
and
aad
cld
imul
cs
adc
incb
cmp
shl
lods
mov
xchg
movsl
lods
arpl
mov
sbb
out
scas
inc
cmp
pop
insl
fidivl
push
sub
in
jbe
fidivrl
xlat
cmp
and
cmp
inc
test
clc
cmpsl
sahf
mov
jge
push
in
bnd
int
rcrb
adc
fmulp
push
mov
bound
jno
and
xor
push
js
lock
sbb
push
int3
mov
push
cmp
add
rclb
mov
sbb
call
jno
out
and
mov
mov
xchg
imulb
sti
imul
fdivr
xchg
lock
sub
je
pop
sbb
push
adc
push
mov
cmpsl
ja
loopne
cmp
insl
jns
or
xlat
in
xchg
notl
sbb
dec
xlat
int
shll
sub
rclb
sub
inc
in
push
sbb
ffreep
xchg
stos
push
xor
dec
jne
jecxz
cmp
divb
insl
in
xchg
adc
pop
dec
push
ret
repnz
dec
cmpsb
in
jecxz
fs
lds
imul
mov
jge
sbb
cld
and
mov
out
dec
neg
hlt
adc
cmp
and
fiadds
leave
jae
add
jb
repnz
xor
test
sub
xor
iret
mov
push
cmpsb
sti
and
xadd
test
dec
ret
sti
sub
mov
cmpsl
mov
push
out
inc
mov
mov
pop
outsl
loop
or
gs
jo
and
daa
out
mov
add
aas
repz
jmp
pop
dec
push
adc
sbb
jo
add
aam
mov
adc
push
sar
xchg
add
rcrl
xchg
or
nop
and
push
lret
adc
and
push
dec
rolb
dec
add
or
repz
rcrb
mov
aas
jecxz
sub
xchg
rorb
cmp
pop
mov
shlb
adc
jp
aad
mov
scas
sub
outsb
mov
push
mov
mov
decl
xor
js
pushf
mov
cmp
xchg
add
jecxz
fistpll
into
in
xchg
mov
inc
pop
lret
dec
dec
enter
xchg
lock
cmp
bound
add
clc
stos
inc
xchg
inc
test
and
aas
imul
adc
mov
das
xchg
inc
cmp
jnp
es
lea
stc
daa
jge
or
mov
add
add
xchg
mov
adc
outsb
cwtl
push
jo,pt
das
lcall
mov
lret
xchg
out
mov
fmul
and
pushf
pop
call
leave
push
into
sub
lds
mov
fucom
ja
ret
gs
cli
shl
jecxz
ja
sti
add
inc
adc
adc
add
mov
mov
iret
jecxz
cmpsb
xor
repnz
dec
push
push
fbstp
dec
pop
xchg
in
sahf
fwait
fs
aas
fcompl
mull
adc
sub
fcmovbe
adc
pop
pop
dec
ret
aad
rorl
out
sub
add
push
and
mov
mov
adcl
scas
or
scas
aam
sbb
or
jle
mov
pop
jno
lret
add
iret
jl
pop
pop
mov
and
push
aam
mov
imul
mov
popa
out
aam
inc
leave
adc
imul
dec
mov
and
out
jns
scas
lret
pop
call
cwtd
test
aas
sbb
fnstsw
xor
das
mov
rorl
ss
daa
lods
repnz
divb
fs
repz
and
into
cmpsl
inc
mov
imul
pop
mov
mov
adc
mov
add
lret
scas
popa
lea
jmp
rolb
jg
inc
cmpsl
pop
jl
xor
push
enter
mov
jae
fnsave
inc
push
and
xor
arpl
xlat
shr
xchg
mov
cmp
fwait
xor
sub
lea
insl
negb
push
or
inc
cmp
xor
test
inc
shl
cmp
xor
add
les
fdivr
mov
sub
xor
in
int3
add
clc
pop
sub
jo
or
test
fisttpll
stos
and
pop
and
loope
ds
lret
mov
dec
sti
or
outsb
sbb
push
pusha
divl
into
je
xor
pmaxub
ljmp
sub
insb
in
xchg
push
pop
pop
popf
aaa
jbe
inc
lods
or
sbb
push
repnz
jns
dec
and
add
dec
jae
bound
cmp
mov
ljmp
test
ss
outsl
sbb
push
jg
pop
lds
and
repnz
dec
xor
push
lods
push
mov
xor
mov
dec
hlt
xor
or
cwtl
jecxz
and
lret
xchg
push
daa
mov
std
inc
add
ljmp
arpl
mov
bound
adc
sbb
scas
lods
add
cmc
insl
mov
mov
movsl
and
xchg
inc
enter
push
and
inc
and
enter
lcall
dec
stos
js
int3
ja
cwtl
faddl
stc
rcrb
inc
clc
scas
enter
data16
cmpsl
jbe
inc
loope
idivl
push
cwtl
test
pop
mov
cwtl
out
into
and
in
mov
jae
test
hlt
push
cmp
lcall
dec
push
pop
hlt
loop
orb
cli
test
lcall
xlat
cmp
jne
jnp
adc
push
mov
cmc
addl
into
addr16
cmp
div
sub
popa
cwtl
test
leave
push
lcall
adc
pop
add
int3
in
mov
xlat
sbb
inc
hlt
mov
cltd
lret
stos
test
and
sbb
xor
out
jmp
inc
inc
sub
lcall
mov
jecxz
leave
jge
inc
es
push
jge
ljmp
add
xchg
loop
adc
int
test
mov
das
lds
or
test
and
add
idivl
iret
gs
jle
repz
pop
nop
aas
jne
push
pop
mov
xor
ljmp
cmc
movsb
mov
sub
out
lods
xchg
shlb
dec
inc
call
and
fwait
sbb
push
ja
fnstsw
popf
jae
scas
scas
movsb
pop
jmp
add
adc
sbb
loopne
andb
popf
out
cmp
mov
rcl
arpl
lret
pushf
dec
sub
mov
mov
mov
xor
gs
or
dec
je
pop
mov
and
mov
outsl
jns
mov
sub
add
xchg
jmp
push
xchg
loopne
sub
shr
pop
pop
sbb
sub
movsb
cmp
test
adc
sbb
fcoms
xor
xor
xor
jg
pop
add
call
dec
punpckldq
cwtl
sahf
and
pop
enter
in
mov
lret
push
fwait
das
les
icebp
shll
adc
imul
punpcklwd
xor
and
aas
lret
jno
cmp
movd
cmp
cmp
adc
adc
or
inc
inc
call
lds
cli
dec
and
or
push
sbb
xchg
push
jbe
stos
fisttpll
pop
push
lret
addr16
pop
sti
adc
sbb
add
pop
mov
add
fcomip
lods
add
and
jg
and
push
cmp
cli
movsb
and
dec
xchg
mov
xor
pop
mov
mov
pop
in
movsb
lcall
jbe
int3
dec
push
and
scas
cmovnp
xchg
mov
pop
leave
test
adc
inc
or
jnp
fiaddl
pop
and
lods
std
addr16
shll
rolb
sbb
insl
mov
fistps
ljmp
bnd
xor
jmp
adcb
mov
sub
sub
aaa
pushl
cmc
or
and
and
jl
jge
pop
sti
dec
das
cmp
popa
in
sbb
sahf
mov
insl
jp
div
lahf
popf
cmpl
jg
adc
je
mov
jmp
dec
clc
outsb
mov
sahf
or
cmc
test
mov
hlt
xor
mulb
jae
cmc
fisubrl
hlt
mov
repz
mov
push
out
inc
shl
popf
mov
xor
adc
lods
and
adc
imul
addr16
sbbl
or
sub
adc
push
lock
movsl
lock
lret
ds
push
adc
fldt
addr16
clc
stc
fdivrl
sub
enter
mov
sub
repz
fmull
dec
pop
xor
xchg
sub
testb
push
lret
fcmovbe
or
ds
jp
test
popf
shlb
mov
popf
jo
out
push
outsl
jl
pop
cmpsb
mov
pusha
test
dec
imul
dec
pop
pop
push
mov
out
fbld
mov
ret
jbe
inc
dec
lahf
out
mov
mov
or
int3
call
test
adc
into
das
add
cmp
xor
ss
xor
cmp
lods
fld
sub
pop
mov
rcrl
jle
arpl
aaa
sbb
add
stos
mov
sub
cld
pop
arpl
cmp
loopne
mov
mov
cmpsb
insl
sub
mov
lds
fcompl
pop
xor
jae
es
popa
mov
call
xchg
idivl
adc
and
ffreep
xor
push
leave
push
cs
sti
push
in
imul
sti
xchg
sarb
outsb
jb
mov
xchg
loopne
jmp
push
lods
mov
shl
icebp
ds
stos
ss
pop
je
outsl
xchg
inc
mov
stos
xchg
in
fisubl
cli
xor
insl
push
int
scas
popf
xor
jl
and
aas
fisubrl
aam
xor
mov
mov
sbb
ja
and
cld
ljmp
sbb
sarb
cmpsl
add
test
aad
aam
sub
scas
stos
hlt
adc
push
mov
push
sbb
stc
std
add
inc
in
lret
rcrb
add
cli
mov
scas
les
jnp
lret
lcall
ljmp
cmpsb
lods
xchg
clc
les
fsubrs
leave
jbe
data16
adcb
sub
sub
jbe
sbb
push
and
fbstp
rorb
or
jge
inc
cld
popa
push
dec
cs
movsl
add
mov
aad
rcrl
repz
fidivs
and
insb
xchg
rolb
pushf
jo
mov
gs
in
test
int3
test
divl
aas
cmp
dec
aam
mov
pop
push
mov
push
outsl
imul
jecxz
sar
sbb
aaa
inc
cmpsl
mov
fadd
ret
push
jp
pop
mov
imul
xor
arpl
pop
inc
lret
orb
jle
lods
je
dec
jmp
lock
push
sbb
jge
jae
xchg
mov
xchg
jno
dec
loopne
ret
loopne
dec
imul
stos
test
xor
pop
js
mov
jo
push
adc
or
ret
popa
subps
scas
cmpsw
dec
adc
orl
pop
das
in
cltd
loope
mov
or
inc
adc
mov
adc
or
inc
mov
or
fistpl
xchg
jl
lea
xchg
call
ljmp
int3
shrd
rorl
dec
cli
xchg
xchg
test
jle
pop
roll
rolb
or
cmpb
lods
pop
sub
clc
movsl
sub
imul
xor
and
movsb
pop
push
fidivs
test
jns
jle
sbb
sub
ss
dec
cwtl
jb
jp
add
outsb
nop
adc
add
insl
mov
cli
fcmovbe
jecxz
inc
pop
fwait
les
hlt
rcll
inc
xor
inc
stc
add
push
jns
cs
mov
xchg
fadds
xchg
popf
shr
rolb
mov
out
add
inc
repz
pop
int
imul
mov
idivb
stc
dec
es
or
popa
fxch
insl
xchg
notl
popf
addr16
push
mov
jmp
lcall
xor
adc
push
push
fldl
shrl
pop
mov
sbbl
jmp
pop
or
jle
sub
jbe
and
cwtl
inc
mov
mov
mov
dec
push
mov
push
or
or
cwtl
movsb
adc
sahf
int
push
cmc
mov
mov
mov
lods
xchg
add
insl
insl
jno
mov
loop
add
inc
cmpsl
leave
popf
mov
test
inc
adc
jp
cmpsl
sub
out
fimull
rorb
push
or
outsl
xor
pop
pop
mov
sub
aaa
pop
mov
pop
pop
push
aad
dec
iret
pop
add
cmp
pop
stos
iret
push
mov
xchg
sub
aas
dec
cmp
or
mov
aam
sub
into
adc
pop
mov
movsb
shrb
loop
outsl
outsl
cwtl
into
push
test
into
fisubrl
dec
xor
and
dec
insl
cmp
or
add
sbb
mov
add
dec
or
pusha
sti
movsl
pop
adc
xchg
mov
xchg
cmpsl
mov
mov
in
add
xor
jl
pop
inc
cmpsl
clc
clc
pop
scas
pop
mov
mov
mov
dec
lods
adc
inc
inc
xchg
jecxz
jb
testl
vrcpps
fisubs
sub
fildll
add
push
jl
sbb
andb
adc
fs
jle
sbb
dec
cs
pop
push
mov
aad
lret
cltd
pop
lret
loope
mov
test
out
pop
andl
push
lahf
mov
and
sbb
leave
sbb
pop
mov
ficomps
adc
cmp
pop
xchg
lret
xor
ret
dec
gs
lds
arpl
pop
dec
in
aad
add
ret
dec
jno
stos
mov
sbb
dec
jg
test
push
add
push
icebp
mov
roll
mov
mov
pop
add
icebp
ds
jecxz
sahf
roll
psrlq
or
mov
test
movsl
xor
pusha
test
push
cld
outsl
jmp
add
ljmp
sar
arpl
fildll
imul
scas
push
pushf
cmc
scas
inc
sub
jmp
rolb
cmp
icebp
or
jno
mov
mov
fbstp
in
adc
dec
jmp
dec
ljmp
jne
loopne
ret
sub
test
cmp
test
xchg
decl
mov
aad
sub
mov
mov
mov
lock
adc
cmp
add
int
pop
mov
jge
xlat
aas
incb
in
cmp
add
xor
js
push
and
daa
sbb
aad
into
lock
add
push
pop
dec
jl
push
mov
sahf
adc
scas
in
push
xor
pop
push
pop
fdivrs
ror
cmpb
aas
and
mov
adcl
leave
ficoml
and
rclb
orl
out
push
push
movsl
outsl
inc
or
sbb
mov
xchg
push
out
or
mov
inc
int3
decl
push
in
lcall
add
int3
xchg
mov
inc
and
out
loop
inc
mov
mov
pop
jecxz
push
push
mov
rcll
out
aad
call
mov
pop
gs
push
mov
cmpl
loopne
adc
cmc
repz
lcall
push
notb
fstps
jae
inc
mov
dec
aas
jle
sbb
jne
push
ljmp
cld
sar
pop
jle
mov
cmp
mov
ja
inc
dec
into
mov
pop
jbe
xchg
test
sub
push
or
ret
mov
jo
mov
fimull
dec
mov
pop
movsl
xor
jmp
addr16
inc
dec
int
cmp
sbb
insb
mov
mov
pop
pushf
and
lods
in
and
cmc
sub
ja
cwtl
mov
dec
lcall
addb
xchg
ficoml
cmpsb
leave
hlt
insl
push
cmpsl
ss
push
in
fwait
mov
cmp
test
xchg
push
pop
mov
ret
sub
cwtl
or
fists
icebp
test
mov
sub
adc
jno
push
push
dec
movsl
lret
cmp
loop
xor
into
jnp
add
dec
pushf
lds
cmp
jle
inc
sbb
push
push
cltd
pop
pusha
subl
add
pop
pop
inc
jg
addl
add
dec
push
mov
cmp
in
insb
dec
inc
push
fcoms
outsl
stos
jnp
test
add
enter
jge
lcallw
mov
sti
or
ljmp
scas
add
shrl
xchg
mov
andb
rcll
popf
pop
aas
sbb
sbb
mov
xor
xchg
js
in
hlt
sahf
sub
sbb
ja
test
lods
dec
ret
jp
pop
inc
and
pop
subb
mov
pop
mov
jbe
push
lods
aaa
addr16
or
jp
push
repnz
idiv
dec
mov
adc
ss
pop
sub
inc
sahf
loop
stc
dec
lods
xor
add
shll
push
xlat
pop
xor
sub
inc
sub
test
outsb
xchg
push
scas
js
fs
xor
addr16
xchg
mov
test
pop
fstps
movsl
lahf
and
outsb
shrb
sbb
mov
out
ss
mov
std
xchg
and
inc
push
outsb
test
dec
icebp
imul
and
xchg
sub
adc
sub
adc
push
arpl
hlt
insb
lahf
sbb
push
push
daa
das
clc
aad
jne
dec
cmpb
das
sti
dec
pop
ss
iret
xor
loope
inc
out
enter
repnz
sub
mov
movsl
arpl
into
in
adc
int3
sbb
das
imul
iret
fwait
and
lret
dec
xchg
movsl
bound
outsb
test
aaa
push
adc
mov
test
int3
ja
mov
xchg
mov
xchg
inc
fsubs
push
popa
mov
aaa
xchg
xchg
inc
lea
js
mov
jae
andb
aaa
cmpsl
adc
enter
cmp
imul
lcall
dec
push
push
push
std
jp
insl
adc
jno
jl
das
jo
aam
repz
mull
mov
add
inc
ret
or
mov
fsubrs
hlt
negl
mov
push
pushf
aaa
int3
mov
jmp
push
mov
imul
jmp
cmpsl
push
jb
test
xchg
lds
inc
jge
push
cli
push
push
add
cmp
pop
mulb
fs
shl
push
inc
test
mov
jmp
dec
int3
xlat
add
xlat
sub
pop
adc
and
xchg
adc
adc
sbb
xlat
mov
sbb
jo
mov
aas
jae
mov
int
test
mov
push
das
add
cld
roll
jnp
xchg
sqrtps
or
mov
subb
out
dec
mov
in
push
pop
js
push
xor
pop
out
mov
xchg
mov
jns
sub
in
rcrl
add
or
enter
and
cmp
mov
arpl
sub
push
xchg
out
xor
mov
add
and
and
adcl
popf
push
lods
scas
arpl
pop
mov
and
out
outsb
shlb
sbb
testl
inc
xchg
add
inc
shl
mov
movsb
in
into
or
addr16
jae
jno
enter
test
iret
pop
std
cwtl
into
dec
ss
idivb
cmp
mov
adc
sahf
sti
das
fnsave
sub
mov
pushf
mov
mov
nop
dec
jl
ss
xchg
sbb
mov
cli
movsb
cmp
data16
xlat
ret
mov
cs
xor
xchg
in
fists
addr16
pusha
cmpsl
pop
sub
xor
pop
sub
mov
xchg
push
mov
pushf
lcall
cmp
xorl
lea
stc
cwtl
mov
add
cmp
cmp
es
jg
adc
pop
pop
sub
lret
loop
mov
mov
lods
movsb
enter
xchg
iret
mov
sarb
sub
bound
cmpl
push
fstpl
mov
inc
fcoml
mov
in
mov
pop
lcall
mov
and
xor
ss
and
jae
inc
add
or
mov
xor
sub
rol
and
add
aas
push
insl
cmp
nop
rcll
aam
sbb
jne
jmp
dec
pop
sbb
dec
push
lea
jmp
or
jge
rolb
fstps
loop
dec
inc
mulb
mov
je
mov
fcom
mul
dec
sbb
add
data16
jae
add
mov
aad
mov
push
push
out
rclb
dec
mov
inc
int
fcompl
popf
mov
dec
lcall
out
adc
or
int
lods
fscale
aad
mov
es
mov
andb
push
mov
xchg
lods
out
ret
jns
dec
lret
cmp
push
xor
mov
xor
mov
out
mov
or
stos
imul
push
xor
aad
jne
cmp
xor
filds
scas
adc
push
mov
fbld
rcr
pop
push
fbstp
stc
in
cli
lahf
pop
inc
stc
jns
mov
push
xchg
out
and
loope
xchg
and
dec
cld
xor
inc
testl
movsb
into
or
mov
lret
fucomi
pop
push
stos
hlt
in
test
stos
inc
push
add
ljmp
dec
jp
sub
add
dec
aaa
lret
dec
loopne
pusha
sti
es
int3
es
and
xor
out
mov
mov
or
pop
sbb
dec
orb
fidivl
and
ss
sahf
xor
popa
iret
mov
out
mov
push
lea
and
sub
adc
out
cmp
xor
stos
sbb
xchg
js
push
xlat
pop
movsb
fwait
imul
add
mov
sub
jnp
imul
mov
out
cmp
mov
inc
jnp,pt
int
icebp
adc
xor
mov
xchg
mov
mov
je
les
test
and
in
sbb
push
jg
stos
ljmp
mov
jo
or
pop
pushf
dec
inc
xchg
add
mov
mov
or
and
leave
in
fsubrp
mov
cmpsb
subl
and
popf
mov
jecxz
test
cwtl
sbb
pop
movsb
xchg
popa
aad
inc
sbb
inc
push
and
mov
xor
movsb
and
jg
outsl
sbb
sub
cmp
add
jmp
in
shll
push
lock
aam
in
arpl
push
mov
sub
mov
adc
pop
mov
inc
pop
adc
push
lret
inc
sub
fsubl
mov
mov
rcll
adc
push
ds
add
dec
jns
leave
jp
loop
std
subl
pop
mov
out
in
cmp
dec
mov
pop
jmp
push
xchg
movsl
adc
and
push
gs
sbb
lret
cmp
push
sub
adc
jo
cmp
popf
or
subb
cltd
xchg
push
add
int3
xchg
nop
outsl
movsl
nop/reserved
push
out
inc
mov
and
jnp
cld
cmc
jg
popa
sbb
sbb
fbstp
pop
std
pusha
lret
add
xor
dec
loope
xorb
jp
push
sub
nop
dec
jmp
pop
inc
xlat
mov
lods
stos
jbe
sahf
cmp
mov
adc
scas
push
rcll
addr16
in
ds
sbb
mov
push
add
orl
aam
xchg
jmp
repnz
inc
insb
sarb
push
inc
cmp
cmpsb
push
inc
das
push
insl
inc
jmp
mov
cmp
push
mov
stos
and
mov
xchg
subl
js
and
test
scas
xchg
xchg
push
inc
cmpsb
add
lret
adc
push
push
sbb
fimull
shrb
test
cmp
stos
dec
sbb
xor
xor
mov
mov
xchg
inc
loope
dec
testl
js
in
pop
push
scas
xor
add
cld
jo
xchg
dec
std
std
inc
cmp
or
imul
data16
lret
inc
stc
les
adc
jl
stos
sbb
mov
and
adc
mov
shr
out
fs
dec
mov
out
mov
jnp
inc
outsl
loopne
cli
cmp
rorl
jge
addr16
cs
sti
pop
filds
jmp
popf
add
in
jle
fisttps
cmc
scas
test
pop
cmp
and
cmp
mov
fsts
jmp
std
mov
leave
int
mov
enter
xor
and
movsl
cmc
or
mov
jecxz
mov
and
setge
mov
das
xor
cmp
sbb
mov
mov
aam
cmp
stc
push
test
adc
cwtl
add
sahf
ss
add
stos
andb
sahf
jae
test
inc
mov
pushf
aaa
bound
mov
jmp
xchg
cmp
inc
aam
sub
mov
xchg
sub
out
shlb
or
jle
aad
push
cli
jge
and
movsl
movsl
outsb
xchg
cmc
out
jg
js
or
dec
fmul
inc
mov
mov
xchg
cmpb
dec
in
loope
data16
xchg
dec
mov
push
in
mov
mov
cmp
mov
fimuls
xor
add
jg
pop
icebp
pop
sub
js
subb
push
out
xor
xor
jno
mov
dec
add
cltd
rclb
dec
jnp
pop
jl
int3
imul
adc
xchg
ss
insb
mov
add
enter
stos
shr
mov
aad
pop
das
mov
or
inc
aaa
pop
in
or
aad
mov
aas
push
push
and
data16
mov
jo
sarb
int3
pop
and
and
jg
sbb
add
adc
and
cmp
add
mov
inc
das
mov
add
in
cmovg
shr
les
cmpsl
mov
cwtl
mov
lds
clc
or
shlb
lea
push
lea
cmp
scas
sub
jp
push
pop
jne
lea
add
adc
pop
js
movsb
sbb
push
sarb
xchg
adc
mov
rorl
pop
cmp
add
inc
sub
xchg
lods
outsb
pop
sbb
sahf
inc
adc
mov
inc
mov
mov
cmp
out
or
int
mov
pop
or
cmpsl
xlat
ds
and
ss
push
adc
dec
enter
cltd
adc
mov
or
shlb
ljmp
inc
mov
and
popf
jg
dec
test
xchg
sub
xchg
aad
jnp
outsl
mov
es
dec
jbe
mov
imul
inc
ljmp
mov
sbbl
dec
dec
loope
jmp
mov
int3
in
push
jecxz
and
lcall
sti
ret
push
ljmp
pop
xor
jo
std
out
add
dec
mov
js
out
lcall
mov
imul
nop
jb
dec
les
ret
movsl
lcall
and
push
imul
pop
das
mov
mov
out
loopne
mov
and
push
out
jecxz
cwtl
sub
imul
dec
jle
add
sub
fbld
in
loope
sub
adc
xor
cltd
or
mov
dec
xchg
loopne
adc
xchg
sbb
test
mov
push
push
cmpsl
and
inc
cltd
dec
aaa
add
aaa
cmp
sbb
lods
mov
or
xchg
xor
mov
or
xchg
sbb
xchg
dec
xor
dec
pop
mov
pop
bswap
ja
mov
adc
cld
pop
xchg
iret
or
jb
xchg
jo
sti
pop
repz
in
mov
enter
sbb
cmp
sub
shrb
ja
xor
movlps
add
fmull
add
mov
sbb
add
sbb
call
shll
mov
mov
push
cmpsb
lcall
out
int3
into
mov
adc
jmp
jl
iret
mulb
minps
insl
shrl
inc
sahf
fistpl
ja
or
xchg
or
lea
xchg
cmp
sub
cmpsl
jae
shrb
mov
sub
int3
in
push
lds
icebp
out
xchg
fs
add
sbb
dec
pusha
mov
rcll
ja
dec
rcl
btr
outsl
xchg
push
mov
fdivrl
pop
pop
or
test
jl
push
orl
and
sbb
das
cmp
div
mov
cmpsl
gs
push
pusha
mov
xor
ffree
cwtl
insl
fcoml
in
jle
inc
jge
pop
add
test
andl
sub
imul
mov
xchg
dec
mov
or
test
bound
stos
imul
inc
lds
inc
xchg
stos
insl
js
aam
fs
cmp
pop
mov
js
loopne
test
into
sbb
pop
jg
call
and
je
add
imul
mov
sti
mov
sarb
ret
dec
sarl
pop
pop
dec
push
arpl
mov
aam
xchg
push
mov
dec
lods
mov
lcall
dec
sbb
fldenv
mov
mov
cmpsl
add
fiadds
pop
push
movsl
cld
push
int3
fnstenv
inc
or
out
adc
push
lret
es
bound
sbb
gs
mov
rorl
mov
dec
and
andb
xchg
int3
outsb
loope
push
and
xchg
push
mov
push
dec
out
jp
xor
jne
fsubl
mov
int3
add
add
mov
bnd
pop
nop
xorl
lea
push
jns
mov
dec
inc
lret
cmpsb
rorl
lcall
call
call
insl
jl
jno
fnstenv
loopne
and
push
inc
fistpl
cmp
add
and
cmpl
daa
repz
mov
sub
dec
mov
inc
inc
testb
pop
and
int3
icebp
imul
icebp
lcall
sbb
cwtl
andb
adc
dec
add
dec
jne
movsb
aad
shr
fs
mov
mov
aam
push
jae
rcrl
dec
addb
adc
sub
jno
in
sub
jecxz
ljmp
adc
add
das
fists
push
or
mov
add
popa
adc
pushf
daa
mov
ja
daa
push
fs
push
cmp
and
out
aas
jg
mov
mov
dec
and
xchg
or
mov
push
jns
mov
jo
add
pop
shlb
insl
jl
aas
fwait
push
out
mov
or
mov
or
mov
mov
popa
out
test
add
imul
scas
dec
adc
daa
fbld
jmp
cmp
popa
filds
mov
cmp
and
popf
push
jp
ljmp
xchg
mov
repz
pop
dec
xor
push
movsl
pop
in
ja
adc
cmp
test
enter
add
incb
and
data16
pop
push
mov
add
bound
inc
or
sub
cmp
push
nop
sbb
lahf
or
movsl
rcrb
mov
jp
jle
in
cmp
push
punpckhbw
inc
pop
aas
je
add
mov
mov
inc
test
mov
sbb
pop
add
inc
enter
sbb
and
stos
dec
rcrl
es
fiaddl
rorb
cmp
pushf
rcl
mov
addb
dec
leave
jne
cmp
or
mov
int
les
loop
push
sbb
mov
fs
pop
addr16
fld
xor
mov
pop
push
std
test
sub
clc
fcmovu
pop
jecxz
dec
and
ss
notb
out
cs
sti
cld
clc
mov
add
fiaddl
cmp
dec
nop
test
ja
xor
out
divb
incl
mov
jl
inc
fisubl
mov
stos
call
fwait
andb
popf
add
xchg
mov
repnz
fwait
ror
aaa
scas
jo
sbb
sti
xchg
stc
or
pop
jne
adc
call
repnz
add
adc
mov
in
or
adc
xchg
xor
sar
inc
cmpsb
addl
sub
mov
les
stc
push
andb
and
or
push
scas
jl
insb
das
mov
sub
scas
std
sub
imul
jmp
cmc
mov
js
pop
or
stos
in
mov
push
push
mov
sub
int
inc
cmp
xchg
push
pushf
inc
or
mov
push
xchg
imul
test
test
imul
enter
mov
pop
adc
test
mov
mov
jne
sbb
adc
pop
fwait
sub
mov
xchg
jmp
jne
pop
sub
test
iret
sub
mov
ljmp
or
aam
inc
lods
xchg
mov
rcr
jno
sbb
pusha
testb
xor
or
mov
inc
aas
cwtl
dec
js
pop
gs
ss
jo
pop
and
fsub
loop
das
pop
or
jo
add
movsb
pop
lea
loopne
ja
inc
out
lahf
xchg
push
sub
imul
push
mov
pop
mov
xor
testl
lods
dec
xor
adc
push
mov
test
dec
ret
rorb
xchg
inc
dec
rorb
push
das
cmpb
mov
dec
jae
sub
cltd
xchg
lds
stc
dec
in
enter
in
xchg
scas
xchg
dec
pusha
test
jecxz
es
into
push
jmp
inc
shll
jp
mov
dec
mov
jne
ds
jg
jg
cs
dec
cmpl
xchg
repz
mov
dec
dec
fisttps
ret
mull
std
sbb
nop
push
mov
cltd
or
jne
mov
fbstp
sahf
mov
cs
stos
xchg
lret
jg
and
push
add
ja
inc
cmp
add
je
fnstcw
mov
pop
jbe
mov
mov
cmp
ret
sbb
es
push
mov
xor
and
cmc
cmp
shrb
pop
lret
xor
mov
push
sub
in
pop
out
out
fstpl
jmp
outsb
insl
and
add
inc
jl
jle
add
add
mov
jns
rclb
push
pop
popa
mov
mov
xchg
xchg
aad
mov
ret
scas
or
mov
loopne
shrl
jnp
or
sbb
lock
int
mov
cmp
loop
sub
push
add
rcrb
fnstcw
outsb
sbb
pop
icebp
lods
leave
add
jb
sti
inc
repz
sbb
loope
into
add
mov
in
sbb
movsl
xchg
repz
xlat
add
iret
adc
xor
clc
mov
xchg
mov
mov
cmp
out
add
fstl
popf
push
addl
leave
rolb
push
jp
pop
and
push
jle
call
mov
or
ss
std
xchg
popf
aad
push
shl
push
mov
or
sub
jg
clc
in
cmpl
out
test
jecxz
cmc
pop
dec
mov
movsb
lahf
sti
push
das
nop
mov
movsl
dec
add
mov
testb
push
inc
movsl
add
sub
ds
imul
adc
shr
cmp
in
dec
push
sub
ret
mov
cli
je
mov
xlat
mov
aas
leave
and
inc
cmp
lock
add
fisubl
es
mov
mov
fstpl
lods
mov
pop
and
addr16
ret
jo
push
xchg
push
aad
fs
sbb
dec
mov
mov
loope
out
cli
mov
sti
ss
add
push
fiadds
jo
pop
or
cmp
test
inc
andl
xchg
fisttps
lods
imul
inc
xchg
add
pop
xchg
add
jg
sub
pop
inc
test
sbb
mov
insl
pop
std
test
or
icebp
fldl
stc
or
les
in
pcmpeqw
jo
jmp
mov
mov
pop
mov
setl
mov
in
ret
or
call
xchg
mov
cltd
out
push
cli
dec
mov
in
adc
insl
fistps
sbb
ds
orl
orb
and
lahf
mov
inc
or
jne
repz
sbbb
cwtl
ja
faddl
call
xor
or
push
test
sub
inc
push
sub
sbb
push
addr16
xchg
cmc
test
icebp
jb
or
or
icebp
in
enter
outsl
movsb
pusha
xchg
push
fidivl
mov
sub
or
sub
dec
in
jnp
mov
cmp
pop
dec
movsb
and
push
inc
pop
cmpl
inc
iret
adc
add
loopne
push
out
sbb
cld
mov
aam
jae
add
add
in
scas
sub
add
aam
jo
inc
or
jno
cwtl
dec
gs
stos
cmp
jnp
test
dec
mov
jg
push
aaa
cmp
cmpsb
and
movl
fistps
adc
dec
add
adc
ds
sub
mov
ja
in
jns
mov
inc
jns
fldenv
test
testb
cltd
mov
int
mov
fcomps
pop
hlt
cmpsb
fnstsw
loop
push
jb
cwtl
xor
mov
insl
sub
js
add
pop
sub
push
pop
insl
or
lahf
lret
mov
leave
cmc
jns
popf
jmp
sub
pop
imul
rolb
or
hlt
enter
inc
dec
fwait
pushf
add
sahf
sahf
roll
pop
fsts
mov
push
mov
lods
mov
jo
addl
sub
ljmp
jbe
dec
pop
sahf
inc
aam
loopne
push
cli
pop
in
ja
shr
fdivs
sbb
jge
out
dec
test
pushf
xchg
ljmp
adc
mov
movsb
jmp
dec
xchg
inc
sub
push
addr16
lods
push
and
hlt
es
push
lahf
gs
in
and
je
push
fwait
lahf
adc
and
lret
add
sub
cli
out
mov
dec
addr16
rolb
lret
scas
mov
enter
xor
inc
jae
push
push
aas
add
pop
sub
mov
stc
mov
mov
insb
inc
and
bnd
in
mov
xor
stos
fsubs
jno
sub
out
sbb
push
mov
test
sub
dec
rcll
ss
std
cs
iret
jp
xchg
or
bound
loopne
mov
sub
and
stos
dec
in
and
sub
pop
ret
sub
push
loope,pt
xchg
xor
mov
movsl
ja
mov
dec
filds
out
push
outsb
xor
stos
pop
mov
and
pop
xchg
les
mov
adc
out
pop
lahf
ss
call
dec
xor
or
push
fdivrl
adc
and
pop
std
out
mov
fiaddl
push
dec
stc
sbb
mov
and
sahf
icebp
enter
or
sub
push
nop
out
repz
or
pop
push
dec
repz
xor
pusha
xchg
xchg
retw
xchg
jl
xor
pop
lret
add
mov
in
stc
popa
in
iret
in
pop
addl
in
sbb
rcll
loope
and
jecxz
sub
ss
adc
int3
nop
cmp
int3
mov
pop
xchg
pop
mov
iret
fdivrs
and
into
sub
in
sahf
jge
clc
sub
ret
mov
sahf
mov
xor
add
mov
cmp
adc
mov
lock
pop
pop
mov
adc
cmp
xchg
lcall
rcrb
xor
ds
mov
bswap
add
sarl
rcrl
cmp
xchg
adc
fadds
sub
into
pop
cmp
leave
out
and
fwait
sub
and
cld
imul
enter
jo
aad
sbb
les
xchg
nop
mov
test
pop
mov
dec
jg
pop
lods
sbb
es
testl
sub
add
and
aaa
jl
dec
movsb
lahf
fistpll
cmc
sbb
cmp
and
enter
mov
push
in
cmc
sub
sub
adc
push
ds
test
dec
xchg
rol
sti
loopne
xorb
arpl
enter
fsubs
cmpsl
push
inc
stos
pop
insl
aaa
outsb
sbb
pop
sbb
xor
push
je
jbe
decl
stc
in
scas
jecxz
dec
add
sub
dec
or
fdiv
pusha
in
cwtl
or
inc
cld
push
out
mov
add
mov
in
dec
xchg
cmp
mov
lea
sub
adc
jl
push
loopne
xor
or
xor
xchg
jno
loopne
das
in
mov
gs
sub
mov
arpl
out
arpl
imul
fwait
movsl
bound
cld
aam
pop
notb
pop
cld
fisubrs
loop
sbb
lcall
loope
add
jns
xchg
jecxz
jge
data16
stc
jge
ficomps
mov
les
sbb
jg
sahf
ljmp
in
mov
sbb
adc
mov
fadds
lahf
leave
mov
jl
in
sbb
stos
adc
jmp
rcrl
xchg
xorl
nop
daa
pop
dec
arpl
ja
inc
mov
add
pusha
int
inc
das
shlb
fstl
inc
pushl
add
lods
mov
mov
ljmp
subl
aam
xlat
inc
mov
lods
dec
arpl
sub
mov
fs
addr16
dec
sbb
xchg
idivb
and
dec
ret
data16
inc
ljmp
sub
mov
shll
hlt
sbb
xchg
mov
and
dec
ljmp
mov
push
push
in
and
add
sbb
dec
dec
daa
adc
or
andb
mov
mov
sbb
cmp
xlat
popf
loop
iret
push
pop
icebp
push
xchg
push
jnp
inc
and
ljmp
cmp
js
aam
ja
pop
xchg
in
imul
mov
jp
ret
xchg
mov
je
fwait
push
xlat
or
push
movsb
inc
leave
pop
pop
test
adcb
mov
lret
aam
not
inc
lret
mov
jge
mov
cmp
mov
sahf
mov
test
cs
jl
ds
cmpsb
push
out
jbe
loopne
in
das
mov
les
ret
hlt
push
push
push
imull
add
pop
pop
rorl
je
in
lahf
inc
jbe
mov
cmpsb
xlat
push
jo
push
sub
mov
test
pop
icebp
jbe
ja
xor
sub
and
aad
insl
sbb
out
dec
or
add
dec
mov
lods
adc
pop
pop
jmp
imul
stos
in
push
mov
lahf
jno
jmp
xchg
jle
ret
fmull
jne
aam
movsb
pusha
push
mov
loop
addr16
push
dec
sbbl
outsb
ljmp
ds
and
pop
adc
lods
iret
xchg
sti
jb
shll
xlat
imul
repz
test
mov
jae
rcl
aam
add
lret
and
xor
push
xchg
push
dec
inc
jnp
xor
mov
mov
pushf
mov
jecxz
mov
xchg
nop
inc
mov
sub
pop
mov
xor
cltd
cltd
nop
ret
data16
sub
iret
icebp
sub
mov
xchg
and
sbb
sub
lods
and
xchg
pop
dec
pop
mov
sub
xchg
sbb
dec
dec
xchg
in
subb
iret
shl
xor
movsl
pop
inc
jecxz
adc
int
incl
ss
mov
sub
ss
jnp
in
sub
adc
sbb
xchg
add
ljmp
and
xchg
das
or
or
stos
push
xchg
add
adc
subb
sub
test
sub
test
xlat
inc
adc
pop
jg,pt
mov
and
xor
cmp
into
loop
sub
negb
or
sbb
lahf
outsb
or
mov
mov
fldt
insb
mov
xorl
xor
push
push
xchg
mov
bswap
imul
mov
or
xchg
or
fadd
dec
xchg
sbb
inc
stos
fadd
data16
mov
aam
ret
adc
aad
fwait
and
pop
imul
jecxz
testb
test
or
aas
mov
sub
push
jecxz
into
pop
mov
and
out
inc
aas
bound
sub
jp
out
sti
rorl
dec
push
jno
and
cmp
xchg
cli
mov
push
scas
push
dec
shlb
stos
imul
arpl
or
cmp
jecxz
pop
and
push
inc
pop
mov
sub
loop
cld
enter
stos
add
sub
or
dec
mov
aam
call
cs
movsb
subb
test
mov
fiadds
adc
outsl
sbb
pusha
lea
sbb
out
pop
enter
sbb
out
call
in
mov
xchg
stos
push
clc
repz
test
test
pop
push
lods
arpl
mov
cmpsb
imul
addr16
add
add
mov
les
fwait
mov
push
add
mov
in
ret
inc
ss
repnz
jmp
addl
mov
xor
sub
cmp
jp
push
fcmovb
jo
and
ljmp
pop
jbe
jmp
ficoml
jle
mov
adcl
out
fsts
fildl
mulb
into
mov
xchg
loop
icebp
pop
imul
inc
inc
add
dec
inc
jnp
lods
push
cmp
adc
pop
nop
pop
ljmp
xor
enter
sub
ss
lods
adcl
movsb
xchg
ret
push
nop
adc
pop
int3
mov
adcb
push
sbb
sbb
lret
jge
je
popa
mov
or
cmc
adc
movsl
sub
adc
push
mov
shr
cmp
push
ja
mov
adc
xor
cs
fidivl
ja
inc
pop
cmp
xchg
fdivrs
loop
mov
or
jnp
insl
js
gs
jl
aad
mov
out
mov
hlt
js
jle
push
sbb
mov
xchg
jmp
jns
jae
jb
ds
std
push
lds
sbb
iret
mov
cmp
dec
and
mov
sub
stc
inc
mov
nop
ret
or
inc
sahf
scas
sbb
ds
outsb
out
jno
insb
add
jo
xchg
xor
daa
push
aam
xor
imul
pop
addr16
xchg
jns
fisubrs
in
pop
cmp
sbb
out
js
mov
ss
stos
mov
add
stc
lea
and
xchg
ret
fsubrl
pop
and
xchg
popf
stc
adc
cli
push
xlat
add
mov
fprem
fwait
repnz
jp
dec
mov
int3
sub
xor
popa
outsb
mov
cmp
sbb
dec
jnp
shrb
pop
lods
or
out
xor
mov
ret
cmp
das
dec
mov
xor
mov
sbb
push
aam
jl
cmp
sub
inc
mov
sub
and
cmp
aam
cld
or
add
mull
shrb
orl
xchg
xor
imul
das
scas
xor
mov
adc
cmc
jo
lea
rcl
and
inc
dec
xchg
add
inc
fwait
stos
or
lea
xchg
jg
cwtl
xchg
pop
enter
jo
cmpb
mov
xchg
js
std
adcb
mov
mov
out
mov
add
fst
inc
dec
cld
sbb
adcl
jle
popf
dec
adc
nop
mov
aam
mov
jge
aad
jg
stos
dec
dec
adc
mov
dec
cmp
cmp
mov
aam
mov
stos
movsl
xchg
fidivrs
fsubrs
jbe
cmp
je
not
or
pop
pop
test
aad
xlat
and
pop
xor
push
cmc
mov
or
orb
push
sbb
mov
test
or
push
sub
fwait
sub
lcall
jle
xor
adc
mov
mov
in
ficoms
int
in
arpl
xor
sarl
cwtl
or
mov
push
andl
idivb
cld
cmp
xor
xor
and
mov
push
mov
insb
aas
fwait
stos
sbb
jo
mov
popf
cmpsb
arpl
mov
test
dec
or
mov
jno
jmp
cli
and
or
das
ljmp
add
ret
fidivs
es
icebp
enter
fstpl
xchg
mov
movsb
mov
icebp
scas
out
testl
or
imul
inc
loope
xor
aas
hlt
xor
sbb
dec
dec
xlat
sbb
fsubs
in
pusha
or
jnp
pop
push
call
push
scas
xchg
sbbb
sbb
xchg
dec
mov
stos
jns
jp
mov
xchg
lods
ret
into
mov
outsb
int3
mov
cmp
lret
dec
mov
inc
cmc
jns
cs
loope
mov
mov
sub
xchg
out
jno
and
fwait
mov
sbb
jno
inc
pusha
ja
imul
jl
pop
je
and
out
test
mov
xchg
sbb
xchg
jae
sti
out
hlt
movsb
push
jb
push
std
sub
sahf
cmpsl
out
js
daa
imul
iret
frstor
sub
xlat
fcomps
in
push
mov
jge
mov
inc
sbb
dec
es
push
imul
add
cmp
out
and
hlt
sahf
fmul
hlt
sub
mov
mov
cmp
xchg
cmpsb
addr16
mov
mov
jo
xlat
pop
dec
adc
xchg
xor
lgs
notb
xchg
mov
adc
fldl
push
nop
test
xor
rcrb
loop
xchg
test
adc
inc
xor
mov
push
shll
adc
stos
es
scas
mov
rcrl
addr16
xchg
lods
add
insl
mov
movsb
dec
mov
imul
inc
inc
pop
ds
pop
dec
imul
mov
xor
dec
xchg
stos
dec
out
jns
sbb
add
fildl
cmpw
das
mov
rclb
adc
and
xchg
mov
sbb
inc
xor
out
or
mov
in
lock
sbb
mov
push
or
fnstsw
jbe
sbb
xlat
or
lret
pop
xor
pushl
inc
jg
std
xor
subb
and
out
mov
jb
shlb
lds
mov
cld
xor
fcompl
shll
dec
movsl
pusha
sti
sub
out
shlb
leave
xchg
adc
cmpsl
stos
imul
mov
aam
cmp
shll
scas
int3
push
les
mov
dec
into
xchg
sbb
pusha
sti
aad
lret
dec
jl
lods
xor
xor
lods
jl
adc
lods
jg
ffree
xor
cmp
or
call
fistps
push
pop
shll
jl
jmp
test
xor
or
std
and
shlb
add
mov
and
mov
in
fnstsw
cmpsb
lods
add
mov
inc
out
mov
dec
shll
push
push
add
and
jno
pop
test
cmp
push
dec
push
adc
fcmovbe
mov
movsb
mov
pop
out
repz
dec
adc
and
or
loope,pt
and
pop
jl
xchg
daa
or
mov
icebp
push
stc
std
pop
push
lock
imul
pop
inc
sub
or
fldl
xchg
leave
cmp
js
sub
in
jp
mov
jl
mov
jb
mov
jo
add
adc
ret
mov
cmp
mov
add
mov
lahf
push
lds
cmp
xchg
pusha
sbb
mov
and
xor
xlat
xor
or
testl
in
ljmp
enter
cmp
sbb
dec
leave
and
mov
outsl
lock
and
leave
insb
sub
fstl
adc
je
pop
loop
adc
call
aad
mov
addl
pop
pop
cmpl
sbb
pop
ds
dec
les
sub
ljmp
inc
int3
imul
das
roll
add
je
int
ret
mov
or
pushf
cmp
sbb
mov
popf
in
cmp
jne
mov
das
out
nop
sbb
addr16
and
into
cmp
add
lahf
pop
or
mov
cmp
mov
jbe
fcoms
daa
or
push
mov
popf
or
push
pop
clc
les
push
in
pushf
out
jns
cmc
cli
mov
andl
xchg
js
in
jmp
out
sub
ss
push
fs
inc
lods
test
sub
fisubrl
mov
scas
mov
movsl
jno
loopne
scas
arpl
and
iret
mov
jmp
or
mov
sub
ds
xchg
das
out
adc
and
push
orl
xor
cmp
push
test
mov
sbb
ret
xchg
ret
out
push
and
in
jmp
inc
aaa
or
inc
test
lock
test
fsubr
and
push
or
or
jecxz
mov
test
das
mov
lock
stos
inc
je
mov
sbb
xchg
mov
inc
mov
cwtl
pop
mov
sub
std
inc
mov
pop
push
sbb
mov
xchg
subl
dec
cmp
inc
mov
daa
mov
sbb
mov
cmpsb
inc
pop
aaa
imul
dec
cmc
xorb
jbe
inc
or
push
rcr
imulb
rcl
adc
inc
mov
fsqrt
jl
scas
lea
lea
jp
xor
sbb
ds
rol
lret
loopne
push
ljmp
xchg
iret
adcb
movsb
mov
es
aaa
inc
call
mov
lds
dec
ficoms
rol
push
cmpsb
mov
push
lahf
leave
dec
push
sbb
mov
pop
testb
gs
mov
add
push
mov
mov
push
or
out
dec
iret
in
adc
call
inc
mov
pop
and
sub
fcmovnb
test
sahf
dec
scas
data16
outsb
cs
nop
int3
mov
pop
lret
or
loope
clc
pop
fcomi
adcl
clc
cli
dec
std
push
pop
arpl
int
in
sbb
sbb
sti
jb
push
sub
stos
pop
nop
dec
lret
out
stos
mov
mov
push
mov
or
mov
fstps
jno
sbb
jl
inc
sti
cmc
xor
mov
jnp
insb
xlat
xchg
nop
push
pop
mov
push
out
mov
mov
in
imul
mov
jl
test
cmc
dec
mov
inc
sub
mov
pop
ss
or
jns
jmp
adc
je
dec
add
jp
mov
sbb
mov
sbb
lret
mov
inc
loope
pop
popa
rcr
in
lcall
adc
call
ds
jg
into
mov
js
dec
cmp
xor
std
pcmpgtw
ds
mov
xchg
pop
mov
in
cli
mov
fimuls
clc
jecxz
sub
add
sbb
int
cwtl
divb
jno
test
adc
mov
lahf
call
fsub
pop
cmp
dec
pop
ds
cmp
daa
dec
imulb
adc
pop
inc
mov
lcall
mov
sub
lea
push
dec
push
movsb
sbb
in
jle
mov
lret
xchg
xor
add
pop
cmp
push
popa
loope
or
xchg
mov
psllw
push
movsb
cmp
dec
jg
dec
xor
push
js
and
push
pop
push
lahf
test
and
add
xchg
shll
add
in
cmp
lods
cmp
jmp
ret
aad
in
push
outsb
outsl
shl
or
hlt
addb
inc
sub
xor
jge
shll
shr
fwait
or
sti
dec
data16
roll
sub
sub
in
aam
out
mov
imul
lahf
xor
mov
and
jl
mov
sbb
cwtl
enter
push
cmp
ja
cmp
fidivrl
data16
stos
ret
into
push
adc
sarl
mov
outsb
pop
js
sub
movsb
aaa
rolb
dec
movsl
ljmp
and
sbb
sub
cmp
sti
jno
sub
xlat
arpl
addr16
sub
push
jns
shlb
pop
dec
imul
jnp
mov
aam
rcll
sub
jecxz
dec
fsubrl
test
lret
test
sar
mov
fs
into
push
adc
xor
call
repz
xor
mov
rol
push
imulb
cmp
int
fs
dec
call
mov
in
mov
rcll
cs
adc
clc
jg
mov
dec
stos
jp
movsb
mov
mull
sbb
xchg
and
push
sbb
repz
pop
push
out
les
or
imul
xor
xchg
lret
loopne
imul
test
mov
inc
loopne
or
xchg
jg
mov
push
or
insl
cmpsl
pop
iret
mov
pop
inc
mov
fcmovnbe
pop
or
daa
xor
cmp
push
xchg
sub
mov
adcl
lods
mov
fmull
and
jle
jmp
or
repz
adc
dec
je
push
leave
push
adc
add
adc
push
jp
adc
fnstsw
gs
xor
insl
sahf
mov
sub
jno
jne
fdivs
jae
fmul
and
jnp
imul
std
pmaxub
mov
in
fidivs
xor
leave
test
and
xchg
pop
push
xchg
fmull
mov
push
icebp
mov
xchg
lret
push
pop
test
pop
test
pop
pushf
jae
pop
jb
mov
inc
sub
es
aam
xchg
cmp
bound
adc
shr
test
shll
lcall
fs
cld
and
dec
adc
inc
mov
cmp
mov
stos
lret
cmp
sti
mov
adc
dec
lock
movsb
aas
cmpl
in
lock
push
push
and
pop
lods
in
dec
out
jmp
xlat
sbb
pop
mov
xchg
es
loopne
inc
xchg
mov
cld
push
push
fbld
push
push
fldcw
pop
fimuls
and
add
stc
cltd
xor
mov
mov
jle
mov
aas
insl
xchg
pop
stos
mov
xchg
jge
push
inc
push
xchg
lods
add
cltd
jne
loope
lods
push
adc
into
cmpsl
test
mov
push
ss
std
test
leave
mov
add
jge
out
jbe
push
or
inc
fistpl
jo
mov
mulb
mov
rcrl
jl
sub
in
inc
sub
je
xchg
shrl
mov
jbe
jo
sbb
sub
sbb
adc
in
push
fs
addr16
cmp
jecxz
push
or
jecxz
cmp
mov
xorl
imul
pop
xor
in
jno
movsl
iret
and
cmp
xchg
loopne
test
test
cmp
fisttpl
out
ret
add
dec
mov
insb
jb
ret
js
fidivl
call
inc
jmp
adc
arpl
sbb
inc
inc
mov
movsl
into
and
mov
cmp
ret
inc
pop
imul
pop
cmp
or
testl
dec
clc
jp
shrl
jge
roll
fs
mov
push
and
call
inc
hlt
jg
cwtl
mov
xor
mov
fdivrs
mov
repz
mov
or
jbe
add
xor
cld
mov
sar
jno
jne
lods
arpl
inc
sbb
mov
clc
add
xchg
test
xchg
test
lods
sub
or
sub
shrl
push
or
imul
les
bnd
inc
aad
lret
mov
std
pop
movsl
les
mov
pop
xchg
andb
rclb
rclb
pop
sub
in
std
jae
cmp
femms
shrb
pop
xchg
push
test
dec
sub
fadd
addr16
lea
xchg
and
and
test
out
xor
jg
xchg
or
cmp
cmpsl
jp
mov
or
lahf
push
mov
and
loope
push
or
sub
popa
clc
xchg
push
out
call
gs
cs
jp
push
mov
sub
mov
sub
fnsave
dec
mov
add
mov
dec
push
push
and
divl
fcmovb
nop
push
push
inc
out
fisttpl
mov
inc
cmp
pop
mov
jg,pt
clc
lea
mov
cmpsl
sbb
gs
jo
addb
paddusw
insl
cmc
scas
stc
movsb
test
loop
sbb
push
loop
lret
cmpsb
sbb
fsts
push
lret
fcomps
hlt
mov
fdivrl
xor
loope
mov
mov
shrl
int3
and
mov
adcl
inc
ljmp
or
adc
out
sbb
fs
leave
cs
mov
test
pushf
fistps
jno
pop
mov
jp
dec
mov
in
fsubrl
dec
nop
test
iret
leave
lahf
inc
jmp
movsl
mov
ja
or
push
add
mov
lcall
inc
mov
push
mov
sbb
adc
mov
jmp
daa
pop
lods
adc
in
sub
in
fldl2e
cld
xor
arpl
fs
ret
cmpl
xchg
xchg
xchg
divl
pusha
bound
ljmp
pop
les
aam
and
ds
xor
jle
sbb
outsl
mov
lock
and
insl
test
push
jp
aam
sbb
out
mov
pushf
inc
aad
pusha
xor
pop
mov
push
enter
inc
xor
push
dec
and
sbb
fidivs
pop
or
in
dec
stc
and
out
pop
fiadds
out
sbb
jecxz
sub
or
mov
cwtl
sub
mov
ds
mov
repz
imul
xorb
stc
lcall
out
movsl
jne
mov
add
lea
insl
add
daa
ret
sbb
and
push
dec
or
dec
mov
xchg
test
and
jae
mov
mov
mov
ljmp
loopne
adc
mov
sub
fstpl
and
pusha
divl
inc
sub
push
scas
lock
out
mov
jnp
push
les
pop
jb
pop
cmp
ja
lock
adc
int3
rorl
pop
cltd
lods
cmp
ds
xchg
dec
push
leave
cmpsb
insb
in
int
out
inc
scas
fistl
sbb
movsl
lds
push
stos
mov
mov
xchg
shlb
test
xor
xorb
jp
or
add
push
lret
push
imul
push
rcl
xor
and
icebp
and
pop
sub
jns
subl
cmp
and
int
aam
sbb
aad
adcb
cmpb
or
pop
scas
or
pushf
test
lods
adc
push
nop
ja
loope
adcl
enter
mov
sar
jge
mov
pop
cmpsl
adc
enter
stos
dec
inc
vpmacssww
pop
icebp
mov
xor
insb
ficoml
mov
inc
mov
mov
lret
int3
add
cmp
loope
div
rclb
adc
jbe
add
xor
les
add
xlat
adc
xlat
bound
xor
cmp
mov
xchg
jb
xlat
dec
or
cmp
jecxz
out
es
shl
test
add
jle
pop
sub
sbb
andl
mov
sub
sbb
pop
cltd
xchg
or
adc
popa
add
movsl
jnp
sub
ror
gs
mov
or
push
test
jo
bound
xchg
idiv
scas
xor
pop
push
cld
xor
in
pop
repz
aam
inc
aam
inc
cs
cli
int3
jmp
dec
xorb
xchg
and
mov
pop
mov
into
or
nop
call
cmp
cmc
fidivl
fwait
mov
cmp
nop
je
or
add
lea
xorb
push
cmp
jo
cwtl
lcall
push
test
mov
scas
test
push
jg
or
arpl
rcll
fs
in
lcall
xchg
fdivrs
sbb
outsl
repz
rdtsc
stc
lret
sti
push
ficomps
xchg
pop
daa
scas
data16
mov
cmc
decl
lret
jecxz
add
xor
pop
and
out
xor
push
mov
cmp
push
xor
fdivrl
out
out
pushf
fnsave
fwait
mov
jns
sub
jmp
je
fmull
pop
scas
mov
popf
loop
sub
ret
jl
shll
movsl
icebp
lods
add
aas
mov
lds
aas
hlt
xchg
xchg
sti
sbb
mov
out
and
push
int3
iret
dec
clc
mov
mov
pop
sub
add
out
lock
and
mov
ret
jae
mov
sbb
xor
add
iret
pop
jb
sub
mov
pop
push
out
in
or
pop
dec
xchg
imul
insl
inc
aam
push
xchg
and
pop
out
xchg
stos
icebp
inc
xchg
or
and
inc
jg
rorb
test
lcall
jnp
and
pop
pop
shrb
ret
mov
lods
dec
repnz
xchg
xlat
fisttps
pushf
imul
cmc
cli
pop
inc
filds
je
mov
dec
ss
jno
cli
push
push
out
nop
xchg
cmp
cmp
mov
xchg
insb
lea
cwtl
pop
out
ss
sbb
dec
scas
jns
orb
adc
fsubs
adc
stos
lock
xor
mov
sub
call
push
in
fcmovne
push
inc
cmc
cmp
dec
rcr
icebp
pop
iret
sahf
xor
xlat
ror
lods
leave
jns
call
xchg
rorl
out
cld
mov
adc
jne
push
nop
mov
mov
loop
push
aaa
dec
push
int3
cmp
shr
add
rorl
int3
mov
xor
sub
inc
icebp
or
push
jno
dec
adc
adc
sbb
sti
add
ret
pop
dec
xor
ss
imul
inc
inc
add
imul
push
lods
leave
mov
mov
fisubs
mov
sahf
pushf
jl
pop
cmp
adc
out
adc
stos
mov
or
mov
sub
adcb
jb
mov
iret
or
or
xchg
cltd
cmpsb
cli
decb
shll
cltd
sbbl
xor
sbb
sbb
jne
jmp
test
adc
inc
mov
dec
scas
aaa
push
lcall
xor
es
fnstcw
dec
sbb
push
dec
dec
fidivs
icebp
jnp
jnp
call
test
add
scas
popf
outsb
jmp
repz
add
aas
xor
in
js
sbb
ret
imul
inc
adc
mov
std
aam
lock
movsl
iret
mov
jno
push
and
pop
jp
icebp
icebp
adc
js
pop
inc
mov
mov
jp
mov
cmp
stos
jge
nop
mov
mov
xchg
jnp
xchg
int
rolb
inc
xorl
push
pop
xor
pop
pop
dec
cli
outsb
outsb
cmp
mov
arpl
xchg
icebp
div
add
mov
cmp
lods
mov
jns
push
cmp
add
outsl
aaa
imul
mov
movsb
sbb
fdivrl
inc
ret
mov
loope
push
aas
push
jo
imul
and
adc
gs
repnz
sbbl
pop
xor
bound
jo
mov
mov
nop
sub
sub
pop
sub
add
mov
popa
xchg
jl,pt
pop
imul
insl
xor
xor
inc
std
and
int
scas
cmp
mov
or
cwtl
ret
movsb
scas
shll
notb
push
push
out
ret
mov
sub
mov
dec
mov
sub
cmpsl
dec
xchg
and
and
std
inc
sbb
cmp
mov
into
pusha
xchg
cmpsl
imul
cmp
fdivrl
cmp
stc
cltd
imul
outsb
mov
dec
movsb
sub
dec
mov
pop
ret
daa
fwait
mov
push
lods
jg
xor
sarb
cmp
inc
dec
inc
push
inc
repz
pushf
cmpsb
divl
push
add
scas
mov
sti
inc
adc
js
jne
push
inc
int3
or
mov
mov
cmpsb
jo
out
mov
lret
and
sbb
sbbl
movsb
movsl
cmp
das
int
push
in
adc
mov
int
stc
inc
cmpsb
outsb
cmp
or
test
sbb
test
aaa
in
repnz
add
push
loop
scas
adc
std
fidivrs
add
push
fcoml
xchg
rorb
repnz
stc
lret
aas
movsl
and
push
lods
dec
jns
scas
xchg
lret
out
test
and
int3
scas
mov
fwait
jbe
mov
sbb
movaps
add
mov
movsb
pop
movsb
adc
cmp
xlat
sub
fcompl
cmc
cmp
inc
aas
pop
push
es
push
xchg
je
loop
pop
add
xor
fcmove
adc
xchg
fdivs
xchg
cmpsb
xor
ljmp
mov
or
push
dec
jge
out
inc
mov
xchg
out
jne
movsb
sbb
dec
add
cmpsb
les
testl
lds
out
fnsave
mov
fimull
cwtl
outsb
lds
pop
mov
inc
mov
aad
sahf
out
sbb
cwtl
push
adc
fnstcw
pop
roll
push
pop
pop
or
mov
xchg
dec
stos
aaa
cmc
leave
in
jp
test
push
iret
stos
push
cmp
ds
imul
jecxz
out
cs
cwtl
in
dec
fisttpl
jne
cmpsb
mov
stc
mov
push
je
dec
pushf
test
adc
test
popa
sub
mov
push
or
imul
adc
cmp
mov
testb
sub
sub
sub
cmc
cmc
cmc
ja
fistpll
xor
neg
and
cmp
rcr
fldcw
fyl2xp1
sub
mov
cwtl
cmp
mov
sub
icebp
push
push
mov
add
cmp
test
ficompl
jecxz
sarl
pop
jne
inc
inc
into
fcomps
test
push
xchg
cmp
add
xor
mov
mov
paddw
rcrb
jg
push
push
pop
out
hlt
jp
and
loop
adc
es
jmp
push
out
cmpl
rcrb
enter
jmp
sti
int3
push
xor
int
aam
inc
xchg
imul
cmp
dec
jbe
sbb
out
mov
nopl
adc
sahf
jae
test
sbb
mov
imul
sub
popf
add
ds
and
mov
jle
mov
lods
add
jns
push
in
in
std
sub
lods
leave
and
fs
mov
mov
pop
dec
icebp
imul
insb
push
popf
mov
clc
sbb
push
push
jb
or
dec
lods
cmp
xchg
and
adc
mov
adc
sbb
lea
and
or
xor
out
cwtl
jp
andb
gs
inc
rolb
bound
push
sbb
or
push
lods
mov
out
sbb
jbe
sub
sbb
push
scas
inc
dec
jecxz
subb
adc
ds
or
cld
bound
sub
cli
push
jbe
jo
adc
sub
in
arpl
push
mov
repz
cltd
adc
pop
xchg
and
and
xchg
sarb
loope
shl
inc
nop
pop
repnz
mov
leave
push
dec
push
mov
add
xor
test
ret
lods
jns
out
loopne
pop
aaa
pop
dec
adc
adc
ljmp
push
sub
or
ficompl
xorb
lret
fsubr
mov
add
pop
fildll
sbb
jl
out
loopne
cmpsb
leave
push
sbb
aam
pop
lock
in
jl
sbb
testb
call
rol
mov
inc
mov
out
mov
inc
dec
scas
add
popa
adc
mov
call
loopne
fs
scas
lds
lods
fnstsw
inc
je
jl
scas
xchg
push
sub
push
adc
pop
xor
imul
enter
xlat
popf
adc
faddp
fmuls
aad
inc
scas
dec
xor
and
push
stc
or
pop
sarb
mov
int
mov
mov
popa
iret
adcb
aam
btl
dec
push
dec
mov
mov
fildll
icebp
push
mov
sub
push
cmp
jle
ret
sbb
mov
mov
lock
test
cmp
adc
add
cmpsb
lods
and
push
test
mov
jne
rcl
sbb
fisubl
sahf
mov
jo
mov
mov
insl
popf
loope
xchg
clc
ret
pop
inc
stc
mov
je
and
test
mov
cs
push
in
jecxz
movsl
mov
add
push
push
xchg
in
fcoms
clc
mov
inc
outsb
les
enter
idivb
popf
and
fidivrs
fsubrp
mov
mov
aaa
adc
jbe
js
and
mov
es
pop
push
sti
mov
xchg
les
cmpsb
xchg
js
mov
push
enter
add
inc
mov
cltd
jmp
pop
icebp
cmp
lock
cmp
rcl
test
mov
dec
fucomp
dec
stos
out
mov
test
je
call
out
xor
pop
scas
imul
scas
inc
outsl
jge
fwait
adc
repz
cmp
mov
aaa
mov
rorb
aas
pushl
push
mov
mov
cmp
sbb
aam
lods
in
pusha
push
cmp
sub
push
mov
pop
and
pop
imul
sub
pop
cli
pop
lods
fmulp
xchg
sbb
out
add
sub
cwtl
enter
addb
in
sub
mov
in
xchg
push
loope
insb
pop
cmp
push
push
shl
dec
aaa
test
clc
adc
out
add
data16
dec
es
ljmp
cmpsb
cmpsb
mov
jge
mov
push
fisubs
cmp
jb
mov
xchg
loope
test
lods
dec
mov
lret
nop
mov
fcomps
adc
in
xchg
jmp
or
leave
dec
xchg
imul
inc
add
mov
and
lret
push
lods
lods
fs
sbb
pop
leave
cltd
sbb
pop
out
push
push
popf
and
insb
xor
dec
ja
xchg
in
cwtl
fdivrs
add
jbe
jno
jmp
add
jecxz
push
outsl
inc
orl
leave
mov
mov
xor
pop
mov
pushf
add
pop
xchg
or
adc
jmp
add
mov
lods
ja
lcall
adc
lahf
icebp
sbb
adc
outsb
leave
xchg
cwtl
inc
add
in
mov
sub
adc
xor
sub
push
pop
sbb
fmull
inc
mov
rcrl
pop
dec
outsl
fidivrl
cmp
bound
cmp
nop
pop
fwait
mov
inc
gs
pop
stos
sub
dec
rolb
stos
inc
outsb
cld
std
lcall
frstor
std
push
cltd
sbb
sub
into
gs
mov
insb
mov
inc
push
mov
insb
mov
sbb
shr
push
mov
fisubl
add
movsl
add
dec
inc
aas
lds
sub
aaa
fidivrl
sub
nop
mov
xchg
stos
enter
inc
scas
push
cs
xchg
dec
mov
jnp
inc
or
gs
jp
pop
fs
cmp
adc
ret
fsubrp
jo
loopne
or
stos
jnp
mov
ja
adc
stc
add
cmp
mov
dec
fsubr
push
cmpsl
lock
pop
pushf
daa
iret
cmp
jmp
sub
int3
ja
inc
pop
push
pushf
inc
push
imul
fabs
or
cmp
inc
movsl
mov
jb
push
test
push
and
stos
xchg
popa
fsubl
enter
pop
add
jb
cwtl
jae
or
mov
push
cs
das
push
sub
mov
sbb
push
fmull
popf
xor
ja
jmp
and
or
add
sbb
jl
sahf
fsts
lcall
jmp
add
push
jne
and
aas
and
sbb
xchg
pop
dec
dec
test
shrl
add
jmp
hlt
sbb
lods
dec
jmp
and
add
divl
arpl
cmc
in
sub
mov
movsl
aas
inc
fdivrp
xor
popa
das
inc
sbb
sbb
sahf
jbe
mov
int
js
dec
adc
into
sbb
loopne
out
icebp
fnop
pusha
int3
and
sti
pop
push
int3
sti
addr16
xor
insb
aam
das
mov
xor
xchg
addl
add
test
jge
mov
pushf
push
ja
call
mov
xor
sub
dec
jns
sbb
xlat
sbb
adc
jbe
mov
inc
mov
ret
fadds
inc
mov
movhlps
lods
cwtl
cmpsb
jnp
lea
push
lds
in
sub
pop
xchg
int
mov
dec
cmp
inc
movsb
and
sbb
pop
loop
mov
inc
adc
jp
testl
stc
dec
addb
push
test
inc
repz
xchg
mov
addr16
mov
pop
imul
xor
mov
lock
fsubr
and
jb
fwait
pop
mov
fwait
in
gs
push
insb
pop
sarb
mov
dec
dec
subl
sbb
jge
fmul
dec
jmp
dec
fs
clc
movsb
pusha
mov
mov
xchg
outsb
mov
icebp
mov
fsubs
cmp
add
test
or
mov
xchg
adc
rolb
in
out
call
jnp
test
push
push
push
ds
fistps
pop
sub
loope
fidivrl
shrl
call
pusha
sbb
mov
fstps
cmp
in
sub
cmp
ljmp
sarb
insl
jmp
push
andb
in
loop
aam
xor
test
clc
xor
movsl
dec
rolb
repz
adc
ret
sub
fdivrl
cmp
adc
cltd
pop
repnz
jo
into
pop
sbb
ljmp
lahf
xlat
xlat
push
shl
je
pop
lret
mov
mov
lods
clc
es
push
jmp
lret
push
push
and
push
enter
mov
sbb
andb
xchg
imul
adc
jmp
sub
inc
jno
jnp
cmpsl
imul
fisubl
scas
sbb
fldt
push
sbb
ret
stos
imul
mov
iret
inc
cvttps2pi
jecxz
inc
pop
push
out
mov
out
test
dec
out
call
addr16
pop
add
lahf
lds
cltd
push
sar
dec
cmc
dec
stos
cmp
mov
imul
bnd
push
pop
sub
out
and
adc
loop
fidivrs
jns
jmp
subl
push
insb
mov
inc
mov
ljmp
inc
sbb
mov
stos
or
adc
mov
xor
mov
pop
cmp
sbb
dec
mov
fisttpll
xor
adc
sbb
push
mov
lahf
pop
div
out
or
xchg
mov
pop
test
lcall
cmp
jge
addb
jno
push
mov
inc
xchg
rclb
sbb
dec
fsubs
out
dec
pop
dec
jno
sub
ds
sub
mov
movsl
or
cmc
stos
cli
lock
jae
lret
pop
loop
xor
inc
jbe
daa
sbb
popa
mov
test
outsb
in
popf
out
dec
jae
shlb
subl
test
mov
push
divb
pop
mov
dec
es
clc
adc
jo
push
outsb
insb
leave
nop
ss
mov
mov
lods
inc
pop
cmp
xchg
je
mov
cli
inc
pop
in
je
fcompl
inc
cmpsb
stos
adcb
sbb
mov
lock
dec
and
and
mov
dec
inc
adc
mov
loopne
pop
push
xorl
add
insb
mov
adc
pop
xor
int3
jge
lods
out
fwait
jg
inc
adc
adc
pop
mov
adc
ljmp
outsb
adc
mov
add
or
lret
and
xor
push
cltd
xchg
repz
add
sub
xchg
std
mov
xchg
dec
push
push
flds
pop
scas
xchg
cmp
push
xchg
or
dec
or
scas
jns
in
mov
xchg
out
ret
test
fsts
or
ljmp
js
sub
xchg
cmc
xchg
add
xchg
mov
sbb
out
mov
cmp
sarb
dec
pop
mov
imul
adc
repnz
sti
add
xor
xor
mov
mov
dec
add
push
cs
fsubr
in
pop
mov
imul
push
sub
testb
jnp
ljmp
sti
andb
adc
jne
fistps
mov
cmp
mov
push
and
pop
xor
mov
xor
pop
xor
je
inc
sbb
stc
jg
mov
xchg
add
push
orb
ljmp
xor
xchg
cwtl
in
addr16
pop
sub
cmp
mov
addb
and
mov
mov
rol
insb
push
cmpsb
clc
xchg
xchg
mov
mov
dec
or
pop
sbb
lods
cmp
and
cmp
add
push
xorb
mov
and
sub
cwtl
bound
fmul
pop
jecxz
mov
jne
mov
mov
jge
jo
sub
pop
ja
ret
push
lock
push
or
mov
cmpsb
popf
inc
div
fadds
cmp
inc
fisttps
mov
pop
pop
ficompl
xor
lods
movsb
fildl
nop
mov
in
test
repz
cmp
mov
jl
out
ja
xchg
loop
and
pop
sarl
push
mov
push
sti
jl
inc
cmc
cmp
je
adc
lods
sahf
cmpsl
arpl
addr16
loope
xlat
xor
push
jae
xor
jecxz
pop
pop
js
cmp
cmc
push
loopne
mov
mov
or
aas
das
xchg
aam
aas
jae
pop
nop
adc
stc
dec
mov
jle
orb
loope
adc
cs
out
fcoms
jne
inc
je
xor
or
daa
add
fs
pop
dec
and
cs
jne
mov
repz
icebp
mov
mov
outsb
roll
jae
or
pop
jecxz
push
mov
pop
jecxz
xor
mov
push
pop
cmc
jno
orl
inc
mov
ja
imul
das
out
add
and
movsl
sbb
repnz
xchg
cmp
adc
test
aaa
arpl
fucomi
inc
mov
push
sub
outsb
pop
fiaddl
repz
pushf
add
test
out
ljmp
jb
cld
pop
xchg
pop
inc
xchg
adc
in
arpl
xor
in
sub
jge
das
iret
mov
jg
lret
mov
mov
shll
xchg
nop
adc
jae
lret
push
iret
mov
testl
pop
pop
pop
mov
gs
sub
in
jno
adc
mov
jle
in
adc
mov
inc
jg
and
orb
in
cmc
ror
int
ret
fcompl
pop
xchg
int3
stos
imul
pushf
inc
jmp
jb
xchg
lret
clc
lods
fidivs
jle
lea
dec
sbb
sbb
cmc
pop
mov
daa
fdivr
dec
test
push
loope
sub
push
inc
push
push
or
adc
xor
jg
cmp
in
mov
loopne
std
insb
and
and
mov
xchg
aas
call
testl
jmp
movsb
add
mov
repz
bound
mov
add
mov
in
int
mov
mov
xchg
or
aaa
xchg
xlat
adc
sub
mov
cld
sti
in
push
xor
stos
add
mov
test
push
inc
ret
xor
je
lea
pop
inc
inc
jbe
cmp
cwtl
lods
data16
clc
mov
aaa
dec
lods
lea
in
mov
mov
lret
and
mov
shrb
addr16
pop
cmc
adc
dec
cmpsl
push
arpl
adc
popa
shr
sub
mov
mov
insl
push
mov
cmp
add
fs
arpl
mov
sub
adc
push
negl
jo
je
daa
mov
sti
icebp
andl
es
lret
push
notl
xchg
shrl
nop
sbbb
orb
ret
jmp
imul
cmp
mov
mov
cmp
in
or
xorb
jl
nop
roll
lea
inc
fidivs
sbbb
adc
test
cmp
mov
pop
fcmovbe
rcrl
cmp
xchg
in
shr
mov
xor
jl
pusha
mov
pop
push
mov
pop
inc
out
ret
stos
in
push
outsl
dec
and
push
fwait
jecxz
adc
lea
push
adc
pop
lret
sbb
pop
sub
cmpw
mov
pop
or
stos
lahf
mov
pop
inc
stc
loopne
mov
cmp
and
fwait
dec
cmp
push
pop
cltd
fsubs
sbb
pop
bound
jne
xor
fcmovne
mul
xchg
les
jmp
int
mov
lds
jl
adc
jle
das
mov
push
lods
das
leave
jge
into
adc
or
mov
decl
mulb
ret
mov
pop
xor
or
pop
decb
sub
sub
lahf
in
mov
ficoml
adc
lods
pusha
std
mov
out
dec
dec
lods
push
les
jnp
pop
jp
pop
iret
adc
mov
nop
xor
add
divb
loope
mov
mov
lock
mov
sbb
cld
xor
push
test
loop
cwtl
inc
fstpl
inc
pop
in
xor
into
out
fs
push
inc
dec
mov
bnd
xorl
jnp
add
push
rcrl
imul
jns
icebp
xlat
and
sbb
xchg
sbb
hlt
mov
push
sarl
lcall
jns
mov
sub
sahf
sarl
imul
pop
negl
repz
dec
dec
sub
test
xor
and
dec
mov
sahf
adc
push
in
into
mov
loope
ret
jns
pop
test
test
test
cmp
xor
add
sbb
ficompl
mulb
fldcw
popf
loope
mov
es
lods
test
mov
sbb
sbb
or
cwtl
adcb
mov
ret
jnp
movsl
push
out
scas
fdivrl
pop
daa
mov
outsb
jo
adc
jl
nop
sub
push
mov
enter
or
ret
js
mov
xchg
ja
jp
mov
cli
cltd
movsb
test
xchg
jo
shr
push
dec
xchg
sub
dec
xor
in
dec
pusha
lock
stos
outsb
flds
fsts
push
or
or
pop
mov
sbb
and
push
int3
sbb
and
xchg
popf
dec
call
mov
mov
loop
and
sbb
jne
cwtl
insb
loop
std
into
sub
adc
popf
mov
jp
xor
xchg
dec
ror
pop
adcl
and
scas
movb
or
jnp
mov
cmc
clc
int
popf
sbb
stc
jecxz
nop
mov
cmpsb
jg
jecxz
sub
inc
cmp
lods
inc
jge
in
imul
dec
dec
push
jo
pop
xor
aas
sbb
test
add
sub
ss
lahf
es
les
add
pop
or
sub
dec
test
jnp
mov
int
sbb
rorl
cmpsb
cmp
and
leave
pusha
adc
outsl
sbb
aam
xor
cltd
jae
and
mov
iret
inc
push
jecxz
xor
daa
push
je
cs
or
xchg
xor
sub
mov
and
mov
push
out
cmp
mov
int
mov
lahf
sbb
jmp
adc
or
mov
jae
pushf
pop
sbb
loop
ret
or
jns
shlb
nop
insb
add
push
mov
call
ds
bound
call
xchg
xchg
lret
je
adc
sbb
xchg
cwtl
cli
in
mov
out
nop
pop
ds
outsl
xchg
outsb
add
and
pushf
xchg
and
movups
loope
in
adc
repnz
nop
lds
sbb
imul
pop
xchg
jb
test
test
xchg
fsubrl
pop
movsl
xchg
lods
lahf
ss
insl
movsl
jns
pusha
out
rcrb
sbb
je
popf
or
dec
testb
repz
sarl
je
in
mov
mov
sub
adc
daa
call
jecxz
push
imul
mov
testb
scas
mov
mov
das
mov
mov
inc
sub
movsb
sti
mov
cld
lea
pop
xor
or
xlat
pop
aam
es
mov
mov
idiv
popf
push
xchg
ja
ds
mov
push
subl
aam
les
lods
imul
add
add
adc
in
inc
lds
jp
into
test
mov
loopne
mov
pushf
test
loopne
mov
fs
imul
and
jp
mov
push
inc
jnp
fistpl
negl
lcall
pop
ds
mov
xor
sbb
or
pop
cmp
cmpsb
iret
cmp
mov
sub
push
dec
xorl
fsub
out
and
pop
mov
add
lret
inc
cmp
pop
xchg
xor
mov
outsl
aas
enter
push
repnz
mov
push
mov
pop
push
pop
or
dec
hlt
pop
int
inc
jae
aaa
sub
cmpsb
fsubrp
xchg
and
adc
or
cmp
and
movsb
iret
shl
jecxz
int3
sub
dec
movsb
ss
aam
push
shrb
inc
inc
mov
imul
inc
and
pushf
add
in
in
lret
adc
aam
xor
ja
and
or
nop
mov
int
out
jecxz
mov
stos
ja
mov
push
or
mov
push
xor
nop
mov
daa
pop
aas
movsb
or
adc
pusha
and
sbb
notb
lret
cld
rcl
aaa
ret
sbb
mov
mov
sub
adc
gs
pop
roll
sbb
mov
orb
popf
mov
mov
aas
xor
sub
xor
sahf
dec
mov
or
out
in
ss
ret
adc
sub
gs
push
ja
dec
pop
pop
pop
in
shrb
outsl
sbb
int3
rolb
lods
add
pop
gs
inc
mov
xchg
pusha
jg
mov
and
sbb
sahf
cmp
jle
fidivrl
pop
and
int3
mov
push
popl
ret
les
arpl
xchg
ja
nop
or
mov
outsl
mov
ljmp
fstl
jnp
push
faddp
gs
jne
nop
jnp
inc
lahf
xchg
mov
push
xchg
inc
inc
cli
cmp
gs
pop
inc
sub
ja
adc
sahf
xchg
dec
cld
mov
aas
orb
inc
mov
push
test
cld
sti
mov
dec
js
adc
scas
inc
imul
xchg
into
int
sbb
xchg
dec
cli
fcompl
push
inc
dec
repz
pusha
lahf
test
fisttpll
outsl
mov
lods
dec
push
ffree
inc
cmp
xor
add
push
popa
rcl
adc
aas
lret
cmp
mov
pop
add
sbb
or
adc
cmp
cmp
aad
repnz
cli
xchg
mov
sbb
repnz
pop
jl
sbb
loope
cmp
scas
mov
popf
cmp
aaa
cmp
repz
or
cwtl
mov
stc
fwait
sub
pusha
out
xor
movsl
pusha
or
xchg
sbbb
movsl
pop
push
test
lret
and
divb
sub
loopne
adc
jo
lds
subb
cmp
and
in
lahf
xchg
int3
fnstcw
repz
xchg
and
fldenv
repz
enter
jge
add
xchg
sti
inc
test
and
inc
repnz
test
mov
cmpsb
out
pop
or
addb
pusha
movsb
xorl
xor
mov
push
and
mov
dec
mov
das
sub
fstl
clc
mov
data16
mov
xchg
lock
xchg
aas
flds
pop
movsl
pop
jp
fildl
jno
push
xchg
jae
aam
add
stc
ret
scas
cbtw
pop
jbe
mov
test
xor
dec
mov
testb
xlat
in
cld
nop
pop
insb
sub
pop
hlt
imul
stos
test
pop
xor
jge
pop
jecxz
pop
pop
push
jns
xchg
jae
xchg
pop
cltd
xor
xor
test
inc
sbb
sub
lods
or
jnp
xchg
popa
mov
and
enter
jns
adc
pushf
orb
cmp
fstl
dec
out
push
push
add
xchg
fildll
js
and
movsl
pop
aam
dec
popa
or
xchg
push
sub
ret
lock
sub
dec
fnsave
mov
insl
xchg
jne
push
fimuls
call
dec
das
les
es
xlat
int3
mov
cli
outsl
rcrl
mov
mov
dec
stc
outsl
sub
sbb
mov
xor
mov
cmpsl
jo
dec
enter
mov
add
mov
push
inc
lcall
pop
mov
adcl
dec
in
mov
add
outsl
clc
and
arpl
push
and
adc
fs
ret
sbb
add
loopne
mov
jle
je
popa
or
add
in
or
cli
jnp
inc
dec
jge
pop
cmpsl
cmpl
bound
dec
imul
aad
adc
jnp
pop
xorl
cli
sbb
mov
ljmp
out
dec
imul
xorl
test
cmc
push
ror
sub
es
jg
in
out
pop
sub
test
xlat
sub
stos
icebp
sub
stos
stos
dec
clc
adc
movsl
out
aaa
stc
sub
add
sti
cwtl
fisubrl
inc
adc
xor
push
cwtl
inc
fcompl
popf
movsb
push
mov
dec
in
push
inc
inc
xchg
sbb
and
rcl
add
js
mov
shrl
mov
pushf
pop
fldl
lret
push
mov
dec
jns
arpl
pop
or
xor
push
in
outsb
pushl
inc
lds
mov
push
pop
cs
and
ret
cmpsl
xlat
aas
loope
mov
mov
inc
mov
and
outsb
icebp
ljmp
sbb
xchg
push
cmp
sbb
gs
lds
mov
jns
or
lcall
js
lds
adc
xchg
idivl
jo
loopne
pop
or
mov
data16
fcmovne
xchg
shlb
cmpl
arpl
fists
loopne
loop
popa
mov
jae
mov
cltd
daa
fnstsw
lret
mov
dec
repnz
and
push
sarb
inc
scas
out
fcoms
fwait
cmp
jb
jo
jg
insl
sbb
loop
mov
push
pop
add
xor
insb
add
push
lds
and
test
dec
int3
jl
jecxz,pt
out
movsb
in
jle
and
dec
out
icebp
ljmp
adc
or
in
sub
enter
sub
fdivrp
jns
dec
testl
mulb
push
mov
lods
movsb
outsb
test
clc
mov
pop
stos
ss
pop
push
jmp
push
xchg
incb
mov
stos
inc
fisttpll
push
adc
nop
mov
xor
fwait
std
adc
dec
cltd
shl
mov
add
inc
mov
and
cwtl
sub
popf
jmp
lods
jp
mov
bound
and
call
mov
sub
jl
iret
shrb
pop
pushf
lcall
popa
push
add
scas
sarb
out
xchg
ds
cmp
push
popf
jo
gs
enter
lret
test
adc
push
dec
pop
inc
cld
sarl
std
mov
push
or
xor
cltd
je
xor
and
pop
or
cwtl
test
pop
xor
dec
and
jge
xlat
and
cmpsb
repnz
lcall
adc
push
and
lods
int
mov
hlt
imul
cmp
sub
ret
jno
and
xchg
or
sarl
rcrb
aam
es
pop
pop
aad
cmp
loop
jnp
inc
pop
push
mov
fcompl
in
xor
cmp
xor
pop
inc
imull
ds
fdivs
in
adc
cmc
imul
pop
mov
xchg
sub
stos
sbb
pop
sarl
mov
lea
pushf
inc
test
adc
xchg
sbb
inc
push
cmp
jmp
jno
sub
sbb
in
pop
movb
mov
jp
mov
or
mov
mov
insl
lds
mov
ds
lahf
jb
imul
and
inc
repnz
sarb
addr16
adc
sub
mov
sub
or
pop
shll
jo
pop
jg,pt
paddusb
test
and
ss
mov
mov
pop
inc
mov
mov
or
sahf
jae
mov
xor
int3
add
repnz
jle
test
mov
xor
test
stos
ficomps
jno
ret
jno
scas
adc
cmp
xchg
je
and
fimuls
xor
clc
jge
push
and
xchg
ds
rcrl
loopne
into
cmpsl
mov
mov
ja
cmpsb
repnz
outsl
rcl
sub
mov
mov
xor
inc
push
aas
addr16
lcall
cli
arpl
pushf
or
scas
xor
jle
mov
mov
ljmp
pusha
mov
or
rcrb
test
pop
rcrl
inc
stc
pop
lods
add
inc
test
out
test
in
inc
loop
push
adc
cmp
loope
push
adc
sbb
mov
lods
jo
sub
jo
mov
lods
mov
insl
inc
int
mov
fistpll
xchg
mov
mov
arpl
orb
add
jne
repz
xor
setno
subb
add
fwait
call
sbb
push
aaa
out
sti
jns
mov
je
mov
ja
cmpb
pushf
or
imul
add
or
cs
add
inc
fwait
xchg
push
test
ss
push
cld
cmp
sbb
xor
pop
add
enter
out
mov
push
lods
jne
mov
mov
popf
mov
leave
push
lea
pop
clc
jb
mov
mov
dec
out
pusha
jecxz
cmp
shll
mov
cmpsb
icebp
aaa
mov
jns
lock
push
addl
ja
adc
sub
jl
jne
add
xor
sub
arpl
ss
sbb
daa
add
cmp
sbbb
jb
cmp
test
addr16
enter
test
push
lds
lret
sbb
mov
sub
mov
repnz
fldt
cmp
dec
jmp
xchg
ja
pop
test
pop
arpl
mov
cmp
and
movsl
inc
scas
xor
lock
movsl
fldenv
daa
negb
xor
lea
shr
aad
cli
popa
xchg
arpl
movb
pop
into
and
and
sub
andb
mov
and
jmp
adc
and
out
mov
cmpsl
jo
adc
fcmovu
add
movsl
and
sar
rcrb
pushf
in
dec
sub
sbbb
jb
or
push
mov
dec
xchg
notb
rcrl
or
mov
push
int
sub
add
mov
shll
call
or
arpl
into
sub
mov
hlt
or
shlb
add
loopne
roll
fldenv
in
aam
mov
fidivs
cmp
inc
mov
hlt
fs
clc
jns
orl
jb
insl
in
js
roll
subb
push
outsb
dec
cld
mov
mov
and
popa
pop
sahf
adc
mov
mov
imulb
mov
shl
hlt
scas
mov
mov
and
mov
popa
outsl
aam
sbb
mov
xor
adc
push
xor
popa
jmp
cmpsl
dec
sbb
popf
cmp
or
cs
dec
mov
cmp
punpckhwd
mov
adc
cmpsb
sbb
test
roll
mov
and
mov
cmp
sbb
imul
lcall
mov
and
or
mov
xor
outsb
or
out
imul
lcall
movsl
or
imul
iret
fcmovnbe
add
add
mov
add
stos
outsl
mov
outsl
xor
aad
iret
inc
xor
jg
dec
test
lods
sbb
xorl
pop
pop
lods
iret
pusha
push
in
loop
es
cs
pop
shrb
adc
cmpsb
sbb
sbb
test
adc
xchg
push
mov
outsl
out
shlb
sbb
xor
divl
movsl
movsb
ret
cmp
ret
push
sahf
xlat
pusha
lds
sbb
es
push
rcrl
mov
sub
pushf
jae
jl
sbb
lock
lods
inc
sbb
mov
pop
pop
sbb
mov
or
imull
out
sbb
sub
pop
pusha
fnstenv
pop
fucom
and
ja
mov
or
test
sub
repnz
xlat
xchg
out
call
dec
lea
dec
jge
inc
xchg
add
mov
inc
push
jae
mov
pop
inc
imul
inc
add
adc
icebp
lock
mov
dec
cmp
iret
pop
xor
xor
int
jns
and
push
imul
fistl
jp
xor
in
mov
nop
add
xchg
rcll
mov
mov
jg
jmp
enter
nop
dec
fmuls
xor
sub
fucomp
scas
addr16
fs
jle
sub
jl
dec
ljmp
mov
sti
jg
inc
aaa
testl
mov
leave
xor
ror
lret
pop
add
cli
sbb
or
and
push
dec
xchg
and
cmp
adc
cmp
inc
aas
jecxz
ret
add
and
clc
cld
push
xor
adc
cmp
dec
mov
cmp
lods
arpl
out
movsb
add
daa
mov
scas
and
daa
or
imul
dec
insl
fucomip
push
xchg
add
sbb
inc
mov
or
sub
sbb
push
testl
sbb
xor
aas
or
dec
shll
repz
jl
fisttpll
cmp
test
inc
dec
call
sbb
xchg
mov
lahf
pop
insb
xor
subl
enter
push
jg
jmp
es
pop
mov
sub
xchg
shr
stos
cmp
dec
pusha
mov
icebp
enter
call
mov
add
test
mov
jnp
outsb
bound
loope
int
push
fs
xchg
pcmpeqd
mov
gs
je
testb
bound
out
mov
aaa
inc
jmp
iret
repz
ds
icebp
and
into
adc
mov
dec
lock
sbb
mov
lret
adc
into
or
or
arpl
jp
xchg
dec
in
inc
loopne
rol
call
sbb
insb
dec
aad
mov
pop
mov
sbb
jle
out
mov
movsl
push
leave
dec
jo
iret
jbe
pop
outsb
fistl
fs
negl
cmpsl
imulb
inc
pop
out
rcr
fwait
and
or
xorl
sbb
in
fstl
cmpsl
fnop
outsb
sbb
ja
in
aas
adc
out
and
jo
inc
mov
out
enter
call
sbb
push
pusha
dec
add
subl
outsb
jbe
rorl
iret
or
xchg
adc
sbb
popf
cmpsb
push
jle
pop
gs
dec
push
lods
movsb
sub
gs
stc
negb
sbbb
inc
and
push
adc
lds
mov
stos
out
mov
xor
xchg
or
test
aad
inc
push
divl
enter
mov
mov
or
inc
ja
and
pop
add
scas
pop
inc
stos
lcall
push
mov
add
enter
or
jecxz
mov
mov
nop
mov
xchg
cli
bnd
outsl
arpl
jnp
jmp
mov
shrb
cmp
rcll
xor
and
ds
sub
and
ds
xlat
inc
jecxz
lods
pop
or
repz
cltd
add
dec
lods
dec
cwtl
xor
dec
loop
daa
adc
outsb
mov
jle
lahf
lods
sub
mov
outsl
fsub
jo
mov
fdivp
pop
dec
popa
stos
cmp
lock
mov
pushf
out
pop
pop
mov
cmp
lret
mov
test
repz
cmp
test
movl
sub
out
jno
xor
add
adc
insb
xchg
cmc
int
rcrl
loop
jmp
bound
cwtl
inc
decl
pop
mov
jae
mov
dec
xchg
scas
adc
jns
gs
jle
cmp
test
leave
mov
inc
into
mov
or
add
imul
cwtl
mov
in
mov
sub
lods
adc
jmp
push
inc
jmp
gs
cmp
jnp
mov
fistpll
aaa
imul
adc
mov
mov
fsubs
mov
repnz
fdivrs
mov
gs
shll
jmp
daa
jns
iret
push
jnp
jb
rorb
add
fisubs
pop
push
es
add
mov
sbb
es
popf
shlb
or
mov
imul
push
rcrb
inc
cmp
and
xchg
xor
jl
testl
mov
cld
imul
inc
sub
lret
mov
pop
cmp
nop
add
popa
adc
clc
push
or
fadds
test
cld
es
cmpsl
movmskps
mov
aas
mov
ret
adc
push
and
cmp
arpl
mov
aaa
sub
stos
sub
xchg
add
xor
pusha
push
leave
and
adcl
in
add
xchg
leave
pop
mov
and
aaa
jle
ret
cmpb
mov
in
xor
repnz
xchg
mov
mov
mov
add
dec
int
push
xor
fldcw
imul
test
sti
dec
sub
test
aaa
push
dec
mov
mov
jle
mov
dec
out
xchg
adc
add
pop
in
mov
out
pop
adc
adc
mov
push
js
jno
mov
sbb
into
and
das
rorb
lods
sbb
pusha
mov
movsl
decb
lahf
jecxz
push
and
leave
cltd
pop
outsb
cli
jns
jp
testl
inc
adcl
jno
cltd
sbb
xor
push
test
push
in
xchg
inc
xor
je
mov
stos
cmp
sahf
jg
fmul
dec
ret
aad
addr16
iret
pop
dec
mov
mov
mov
sti
fnstenv
movsb
fdivrp
or
xchg
push
dec
cmpsl
rcl
mov
pop
arpl
popf
fsubs
xor
movsl
pop
outsl
push
shrb
cmp
icebp
inc
daa
cmp
fnstsw
movsb
sbb
lcall
mov
sub
outsl
add
xchg
pop
xchg
push
push
push
cmpb
fwait
es
dec
in
das
push
sbb
fwait
ret
in
iret
cmpl
mov
fstps
xor
cmp
aaa
or
cmp
inc
or
lods
dec
cltd
or
movsb
lcall
loop
pusha
fiadds
push
je
mov
inc
jle
sub
sub
movsb
movsb
pop
mov
add
and
jg
xchg
mov
iret
push
sbb
dec
xchg
shl
xor
jp
and
jo
jecxz
dec
stc
cmp
fldl2t
add
mov
dec
popa
jnp
fcmovnbe
fisubrl
out
pop
push
pop
rorl
push
test
jb
pop
bound
ficomps
jmp
adc
outsl
loope
gs
clc
sub
xchg
push
ja
mov
cmp
stc
mov
ficoms
sub
cmp
mov
out
sbb
ret
fs
mov
movsl
cmp
mov
int3
inc
inc
jmp
arpl
add
pop
aaa
push
fistps
mov
mov
jo
cmp
int3
inc
lret
call
adc
les
out
gs
cltd
and
dec
push
adc
jns
std
test
lods
lcall
dec
ret
insl
adc
andb
aaa
push
aam
ja
mov
mov
adc
dec
xchg
bound
cli
mov
push
inc
es
fnstsw
and
roll
enter
insb
clc
aas
sahf
mov
cmp
xor
xchg
mov
and
or
and
inc
lods
xor
pop
sbb
js
outsl
shlb
lcall
sub
lahf
xor
popl
inc
inc
icebp
jge
xchg
jbe
repnz
add
push
notl
pusha
mov
popa
fs
cmp
jb
fwait
mov
fstps
and
repnz
stos
pop
inc
cmp
adc
push
out
inc
stos
mov
fldt
cs
xor
xchg
adc
icebp
dec
sub
jle
mov
je
xchg
jnp
js
add
mov
dec
or
inc
lods
mov
fwait
mov
lcall
rorl
and
insb
sahf
sbb
outsl
fsub
or
push
or
clc
xor
pushf
mov
sbb
and
dec
push
fdivrl
in
adc
je
int3
sub
adc
adcl
mov
sbb
mov
cmpsb
mov
icebp
mov
xor
or
mov
lods
cmp
xor
and
inc
in
fists
push
jmp
xor
cmpsl
push
xchg
cmp
jge
pop
and
add
add
push
cmpb
scas
fs
lcall
rcrb
adc
inc
bound
imul
pushf
std
fldcw
push
push
mov
adc
dec
pop
jnp
jg
pop
scas
push
cld
lahf
or
lds
lock
lods
pop
lds
pop
fisubrs
xor
xor
xchg
fidivrl
pop
sbb
test
jle
popf
mov
imul
bound
cmp
or
dec
adc
cmp
test
scas
ret
jmp
mov
inc
push
inc
push
movsb
xor
insb
and
insb
and
aaa
gs
int3
loope
in
xor
fsubl
xor
movsl
gs
pop
negb
aas
push
jo
mov
xor
imul
jle
lret
push
jb
cmp
xor
fistpll
push
mov
sarl
test
jno
hlt
xlat
imul
mov
rclb
ss
mov
fwait
ret
cmp
add
repz
divl
and
nop
int3
adc
pop
nop
mov
jo
xor
test
pop
fisttpl
data16
jo
stos
and
stc
dec
xchg
fcomps
shr
movsl
fiaddl
roll
add
aad
mov
cli
pop
jbe
or
jp
lcall
cltd
add
lock
adc
adc
daa
lock
loopne
push
call
cs
and
jg
ret
pusha
sahf
cmpsl
push
dec
mov
aas
fisubs
pop
jne
mov
shrb
nop
jae
jae
sbb
test
push
orl
lock
add
pop
out
mov
lret
adc
icebp
out
insl
pop
data16
out
outsb
mov
fwait
lods
jae
inc
mov
loope
xor
sub
lods
scas
jp
jne
xchg
push
mov
jns
xchg
addr16
jo
pushf
fcmovnbe
cmpsl
jecxz
add
mov
clc
fisttpll
shl
adc
jp
mov
inc
scas
mov
add
in
lcall
loop
fnsave
dec
xor
inc
into
mov
push
sub
leave
jecxz
repz
in
jbe
mov
in
adc
movsb
sbb
pop
repnz
inc
mov
int3
xor
adc
test
dec
add
fidivl
hlt
mov
test
mov
fldcw
popf
roll
add
loop
adc
add
rcrl
cmpsb
and
fwait
pop
movsb
lock
dec
mov
cmc
stc
ficoms
out
movsl
in
les
not
xor
jbe
mov
std
icebp
xor
std
push
push
sbb
scas
push
fldt
sbb
mov
jae
hlt
dec
inc
inc
cmp
and
and
jb
pop
push
add
in
enter
dec
cmpsb
das
out
push
idivb
inc
xchg
mov
insb
out
and
lods
popf
dec
sub
imulb
movsb
arpl
out
mov
cmp
add
mov
xor
jmp
pop
aad
xchg
add
lods
cmp
lock
stc
shr
les
sbb
push
loopne
int
jmp
je
faddl
jle
jbe
xchg
and
cld
shrl
mov
jae
popf
sbbl
inc
pop
les
jb
cmp
scas
dec
inc
cmp
lock
das
xchg
divl
orb
push
in
mov
divl
sbbl
rolb
adc
outsl
mov
mov
sub
icebp
dec
lret
pop
jae
pop
cmp
fildll
mov
dec
cmp
out
aas
insl
fisttps
adc
leave
sbb
out
bound
gs
and
mov
pop
addl
and
mov
dec
scas
stos
mov
push
cwtl
inc
cli
imul
adc
ds
jns
cmpsl
pusha
in
enter
js
sub
xor
inc
mov
adc
cmp
and
jp
mov
push
and
je
lock
cmpl
fcompl
fdivl
lock
out
push
mov
jl
jae
lea
test
jge
aad
sbb
movsl
rorb
addr16
inc
ja
cltd
xchg
jae
xchg
pop
and
mov
mov
xor
call
int
and
add
mov
sub
scas
iret
insl
fsubr
xchg
lcall
aam
ret
cmp
cmc
out
xchg
pushf
ret
cmp
insb
xor
insl
stos
cmpsb
xor
mov
or
inc
and
jg
dec
jns
add
mov
mov
test
mov
jno
push
sbbb
aas
aam
and
sub
xor
fcomps
hlt
shlb
lcall
cmpsb
pop
test
and
adc
xor
adc
sub
int
int
or
lods
dec
pop
bound
mov
xor
sub
shlb
frstor
imul
in
cwtl
test
dec
nop
leave
not
movsb
stos
cmp
add
icebp
add
mov
scas
jne
sti
fldl
pop
jg
ret
int
inc
jbe
or
lret
fdivrl
dec
lods
dec
and
ror
and
mov
nop
adc
in
sub
inc
xor
mov
inc
lods
loopne
addb
jmp
call
push
scas
sub
subl
lret
jne
cs
shlb
push
div
xchg
movsb
imul
xorl
mov
mul
mov
rcll
je
push
cwtl
sub
jno
and
into
stos
sub
bound
cli
mov
mov
inc
rorb
adc
xor
imulb
lds
mov
push
xchg
jb
and
sbb
xor
sbb
enter
mov
inc
repz
add
push
mov
add
gs
enter
movsb
repz
sahf
lea
outsl
add
and
aam
lret
icebp
ds
push
mov
daa
cmovns
call
mov
fdivrl
xchg
stos
pop
out
push
push
xor
pop
and
cmpb
in
mov
xchg
sarb
fs
adc
adc
sub
notl
adc
ljmp
lods
cld
test
icebp
in
cli
outsl
jno
outsb
js
sbbl
scas
xor
jns
xchg
aam
dec
std
and
mov
shl
sbb
add
push
adc
fs
mov
hlt
lods
mov
int3
ret
aad
scas
adc
jg
stc
push
shll
roll
xor
call
out
sbb
sub
inc
dec
mov
cmc
cmp
std
repz
lods
lock
sti
mov
sbb
jl
rcll
bound
outsl
push
out
cltd
aam
subb
or
jns
inc
cmp
bound
enter
jecxz
inc
pop
in
lret
push
inc
xor
jmp
gs
out
imul
ret
stos
leave
add
adc
std
test
ds
adc
cmpl
cmp
inc
ja
scas
loop
pop
jo
jl
push
aam
test
mov
sarb
sub
pop
stos
test
int
insl
fcomip
stc
mov
out
cmp
pop
mov
cmc
popf
jg
testl
mov
dec
fcompl
mov
fmul
std
inc
and
mov
sahf
mov
push
fidivl
popf
add
icebp
and
adcl
out
jmp
ret
mov
sub
and
shll
outsl
in
jnp
fiadds
xor
inc
and
mov
jmp
xor
jb
sub
xchg
dec
inc
test
pop
lahf
sub
pop
mov
add
jo
jnp
fstl
dec
fs
test
jle
push
push
loopne
scas
xchg
inc
clc
cmp
pop
mov
fisttpl
shlb
jnp
frstor
lock
in
je
jmp
out
mov
cld
inc
pop
mov
sar
or
jne
xchg
xor
pop
leave
or
jecxz
scas
pop
ds
or
inc
xchg
das
xlat
sahf
mov
arpl
ds
pop
les
fcoml
std
inc
or
mov
enter
push
cmc
pop
sub
testl
movsb
jne
dec
sub
inc
stc
cltd
pop
or
or
in
test
dec
adc
fcoms
popf
jbe
jge
xlat
in
jmp
test
jne
and
add
xor
rcll
fdivrl
in
add
push
out
cmp
cltd
push
mov
hlt
pop
imull
test
lds
rorb
sbb
sbb
js
loop
roll
or
jle
cmpsb
arpl
cmpsl
shll
dec
shll
pop
scas
add
push
adc
repnz
jo
sub
dec
push
mov
sub
push
add
in
sub
push
out
stos
jecxz
push
mul
adc
mov
or
fsubr
adc
cmc
test
fwait
imul
or
ja
cmp
sub
pop
movl
lcall
cmp
mov
adc
mov
mov
cmpsl
mov
insb
dec
pop
pusha
rcl
enter
adc
pushf
icebp
mov
stos
sahf
scas
sub
popa
out
and
mov
mov
sub
push
adc
call
dec
push
out
pop
mov
push
rol
push
test
cmp
jbe
sub
cli
loope
or
call
push
int
test
adcb
dec
inc
cmp
mov
shlb
in
cltd
jle
loopne
pop
sahf
fs
lcall
xchg
dec
pop
ret
sbb
mov
sbb
mov
daa
mov
push
clc
cld
and
arpl
mov
xlat
push
mov
fstl
sub
cmp
pushf
push
cmp
mov
xor
or
and
pop
call
adc
xchg
cs
popf
inc
or
add
sbb
jg
ja
daa
mov
adc
ja
adc
adc
repnz
adc
popf
insb
sbb
clc
in
push
inc
mov
jne
xchg
dec
ss
inc
insb
mov
pushf
xor
cmpsb
lret
lds
xor
sarl
xor
lret
add
js
jb
jno
ret
push
inc
mov
insl
inc
pop
cwtl
mov
test
imul
pushf
imul
push
loopne
dec
sbb
iret
adc
sarl
int
flds
shll
cmpsl
sub
fs
das
xor
sbb
add
add
ja
sub
stc
aaa
and
xchg
hlt
fidivrl
and
add
mov
cmp
pop
jl
and
xchg
cltd
adc
notb
sbb
pop
stos
xchg
sub
inc
stos
in
cmp
mov
lcall
mov
loop
mov
push
adc
jp
dec
or
mov
stos
mov
bound
dec
pop
mov
lahf
pop
mov
fcompl
inc
pop
lods
into
jp
js
push
mov
pop
mov
decl
movsl
in
fsts
cmp
mov
fdivp
mov
push
jmp
ds
leave
ss
cmpb
test
mov
fldcw
daa
std
cwtl
cmp
inc
int3
adc
int
or
aad
jmp
in
test
and
cmpsb
mov
fdivrs
mov
movsl
inc
mov
movsl
mov
repnz
aas
mov
nop
xchg
pop
jge
push
pop
das
jb
movsb
jne
sbb
mov
pop
jne
mov
roll
roll
lret
data16
mov
cmp
jne
cmp
adc
lods
movsl
add
pop
aam
es
mov
mov
stos
adcb
push
add
iret
pop
dec
xor
adc
out
outsb
out
mov
movsb
imulb
mov
jne
cmpsb
lcall
aad
xchg
lcall
in
jbe,pn
jp
flds
sbb
dec
mov
jge
aaa
sub
insb
push
mov
mov
dec
xchg
xchg
sbb
test
in
adc
ficoml
pop
fs
test
sbb
push
sti
fucom
push
ror
pop
das
fstl
cld
imul
ficompl
stc
jmp
call
shll
add
lret
cmpsl
rorl
mov
sub
add
shl
xor
fsubl
mov
cmp
jmp
rclb
cmp
sub
cld
rclb
sub
repnz
mov
add
or
adc
das
push
dec
out
addb
js
mov
xchg
mov
or
aad
subb
adc
xchg
sbb
enter
mov
dec
push
int3
gs
jmp
dec
cwtl
mov
stos
inc
shlb
add
lock
push
out
lret
xor
call
test
inc
les
xor
xchg
lret
or
sar
je
add
loop
data16
xchg
or
add
mov
push
xor
sbbl
mov
mov
cmpl
rorl
mov
sti
mov
je
cmpsb
push
mov
pop
fsubrs
cmc
int
push
mov
mov
frstpm(287
aad
rclb
push
or
addl
lret
push
outsb
xchg
sub
fcoml
pop
loope
bound
ja
pop
mov
sbb
mov
cld
mov
xchg
sub
mov
jne
adc
xchg
sub
das
xchg
adc
pop
addl
xchg
not
bound
sbb
leave
les
jg
and
sub
adc
xor
cli
out
cmc
enter
xchg
adc
push
test
sub
mov
adc
xchg
mov
mov
faddp
hlt
fnsave
sub
xor
divl
inc
mov
icebp
mov
stc
push
mov
sbb
cmp
mov
insb
fiaddl
pop
dec
ds
or
xlat
lretw
stos
data16
stc
sbb
aam
callw
sub
negb
in
loope
inc
cmp
jns
and
pop
out
icebp
sbb
xchg
push
sub
sarl
push
nop
jnp
imul
mov
adc
sbb
icebp
push
fistps
pop
mov
cld
jo
adc
lahf
pop
scas
bound
movsb
shrl
popl
adc
xor
mov
test
dec
pop
inc
fcmovb
xorb
xchg
cltd
adc
xchg
xor
pop
mov
push
les
pop
test
dec
popa
xchg
xor
repz
test
dec
mov
fdivs
push
repz
pop
ret
scas
add
xchg
pop
dec
clc
jo
sub
andl
incb
lcall
or
xor
les
fsubrl
lods
out
xor
pop
or
and
mov
js
and
lret
test
out
push
xchg
adc
imul
or
cltd
ss
mov
jl
sbb
mov
loop
outsl
test
jne
inc
insl
pushf
enter
pop
sbb
cmpsb
pop
je
test
adc
or
daa
adc
jbe
js
mov
adc
mov
adc
mov
fstps
jns
andl
jecxz
mov
pop
inc
push
dec
dec
push
fdivrp
int
xor
mov
ds
push
sbb
adc
cmp
or
or
jp
popf
mov
xor
pop
mov
dec
sbb
in
cmc
xchg
push
mov
mov
inc
jle
add
lahf
adc
and
inc
pop
push
dec
lret
sub
movsb
test
int3
in
in
aas
pop
jb
ss
inc
call
rorl
cli
mov
adcl
mov
insl
nop
addr16
icebp
pushf
in
hlt
aam
xor
test
xor
int3
push
mov
cmp
sub
js
scas
hlt
nop
lcall
pop
push
fwait
test
das
sub
sub
xchg
push
mov
pop
outsb
jo
pop
cld
imul
ficoml
mov
push
int3
mov
es
repnz
sbb
adc
movb
enter
das
cld
outsl
xchg
lds
call
jbe
dec
lahf
mov
mov
fsubs
adc
loopne
jp
shl
jo
mov
pop
fwait
add
jmp
and
xor
xor
jne
stos
mov
inc
sub
jns
rcll
jmp
mov
inc
cmp
loopne
aaa
mov
fidivl
not
jl
or
mov
lods
cmp
and
movl
dec
mov
sbbb
or
shll
ficompl
pusha
inc
sbb
sarl
jle
gs
jbe
xor
and
jg
jns
add
mov
sbb
stos
je
js
push
mov
iret
dec
jo
int3
popf
shlb
add
xor
xor
xor
cmpsl
and
cmp
call
pop
incb
and
mov
and
mov
xchg
out
cld
fisubl
insl
inc
hlt
xchg
loope
leave
enter
adc
xor
mov
push
roll
dec
jns
rorb
sbb
or
lret
mov
loope
sbb
ljmp
in
xor
adcb
nop
sub
xchg
and
negb
pop
pop
addr16
push
cmp
loop
jo
inc
std
std
xchg
pop
mov
pop
rorl
pop
dec
adc
lcall
sti
rcll
mov
pop
dec
jge
mov
std
or
cmp
xorl
bound
cmc
ret
jns
flds
mov
movsl
mov
push
loopne
jne
fisubs
cmpsl
fdivs
jnp
fsubl
les
xchg
inc
mov
pop
adc
or
jo
sarl
popf
sti
xchg
fistpl
arpl
mov
or
mov
xchg
jp
lcall
outsl
cwtl
mov
mov
loopne
pop
adcb
jmp
push
bnd
sub
shl
ret
sub
stos
mov
jb
add
aam
rorl
add
hlt
or
xor
mov
aas
dec
mov
mov
dec
lea
cmp
pop
and
dec
notl
mov
sub
push
jnp
fists
jecxz
push
jl
xchg
or
pop
xchg
push
mov
aam
rolb
fnstsw
movsl
test
aam
lods
adc
and
push
std
pushf
cmpsb
shlb
add
outsl
into
jo
push
roll
pause
movsl
fwait
cmp
adc
arpl
xchg
js
inc
sbb
xor
and
inc
xchg
mov
jno
adc
pop
mov
std
div
enter
mov
data16
cmpl
inc
pop
pop
faddl
jbe
push
scas
aas
mov
sub
imul
xor
mov
rol
imul
popf
push
dec
push
imul
test
dec
daa
lcall
shl
push
pop
enter
and
in
jns
sahf
mov
outsb
and
gs
dec
push
rcr
and
inc
loope
mov
imul
pop
xchg
mov
adc
scas
pop
das
dec
cmpb
push
sbb
sbb
mov
enter
subb
pop
mov
aam
sbb
dec
sbb
dec
orb
push
xor
xor
inc
push
js
cmp
iret
jno
ljmp
outsb
add
pop
subb
push
pop
mov
dec
cmp
inc
sub
outsb
and
mov
in
push
fmull
inc
pop
in
mov
mov
jle
leave
lcall
les
pop
repz
xlat
test
inc
hlt
mov
pop
dec
cld
xlat
and
cmp
test
pop
xchg
lea
int
push
leave
mov
int
sbb
imul
imul
and
ss
mov
and
push
jmp
loope
and
cmpsb
sbb
pop
sub
push
ljmp
push
cmc
inc
jp
push
ja
data16
fs
dec
iret
pop
jge
lret
mov
fdecstp
cwtl
push
cli
push
into
pop
cmc
leave
jne
fisubl
pop
pop
xchg
pop
xchg
xchg
inc
andb
mov
and
cwtl
in
jg
push
cmp
out
add
lahf
and
ret
lds
xchg
mov
in
data16
scas
outsl
cmp
add
stos
ret
cmpsb
cmp
jp
xor
cmp
jecxz
inc
add
jecxz
hlt
les
mov
cmpl
inc
and
jae
mov
mov
sub
xchg
jnp
loope
fadds
popf
sub
mov
adc
xor
lea
xchg
dec
lahf
fwait
lds
mov
lcall
fsts
movb
cs
ret
out
xlat
push
lods
inc
pop
mov
inc
or
imul
nop
jb
xchg
xchg
mov
jbe
outsl
xchg
xor
lds
rolb
sub
and
and
sub
repz
jge
mov
es
push
pop
shlb
je
cli
or
dec
and
aam
daa
inc
ds
or
xor
inc
add
sub
call
outsb
mov
ja
sub
test
fcomps
push
jmp
das
push
lret
stc
push
xorl
repz
and
xor
push
cmpsb
add
pop
jnp
popf
insb
xor
lods
mov
add
dec
cmp
hlt
imul
mov
fwait
int
lds
mov
inc
fldl
jle
addr16
sahf
dec
subl
push
fstl
xor
jge
rcl
inc
push
sbb
ficoms
sbb
rolb
sub
rcll
daa
jns
lock
popf
push
mov
lret
or
inc
xor
popf
mov
jp
xchg
or
cmp
imul
shr
mov
and
jo
mov
xor
clc
insl
leave
sub
cmpsl
xor
in
xor
aas
cmc
mov
mull
xchg
mov
repz
mov
shl
mov
jecxz
lcall
sub
cmpsl
mov
cmp
popa
and
mov
dec
xor
cld
testl
push
jno
jg
jne
sbb
loope
add
mov
or
mov
and
pusha
or
and
dec
fs
xor
test
test
inc
mov
jne
ror
inc
mov
and
popf
fdivrs
pop
aam
add
push
sbb
aam
inc
xchg
loop
push
iret
std
fcmove
xor
in
push
cltd
loop,pn
sbb
fcoms
mov
adc
push
adc
into
fiaddl
std
mov
jno
jle
incb
cmpsb
int3
mov
aaa
lods
loop
les
adc
fsts
movsb
mull
sahf
and
sbb
mov
imul
scas
inc
push
inc
mov
les
stc
shl
xor
push
in
inc
xor
ficompl
sub
or
cli
sbbl
scas
adc
jbe
dec
stos
stc
scas
loop
dec
mov
je
insb
adc
jno
cwtl
and
or
in
inc
data16
jb
xchg
mov
mov
fadds
push
lds
mov
fnstsw
xchg
push
pop
pop
pop
and
sbbl
pushf
xchg
sbb
test
lds
add
ret
sub
daa
scas
dec
mov
add
mov
sub
inc
jbe
pop
js
or
mov
repz
and
mov
xor
jge
add
iret
push
into
xor
pusha
adc
cs
fmull
inc
jge
movsl
jmp
les
cmpsl
pop
aad
jae
das
xchg
add
dec
gs
mov
dec
mov
add
and
rorl
lea
jns
icebp
nop
lret
mov
sub
sahf
push
xchg
inc
sbb
push
xchg
pop
mov
jp
out
rcrl
xchg
mov
jb
lods
jne
and
mov
mov
lds
lahf
pop
pop
pop
fldl
inc
add
and
fcmovnbe
and
push
xor
in
mov
testl
lcall
mov
xor
xor
lods
mov
jle
cmp
std
jne
stc
call
imul
lock
or
push
push
sbb
or
lea
mov
pop
ja
mov
adc
out
mov
cld
fnstsw
xor
imul
mov
test
mov
das
into
dec
cmpsl
pop
mov
adc
jae
cmp
ja
fcmovnbe
cs
in
mov
stos
push
ds
lods
and
rcr
test
bound
icebp
sbb
scas
adc
jae
sbb
pop
fldt
jl
dec
mov
pop
add
test
jb
lea
inc
jle
mov
xor
in
add
push
pop
fwait
jbe
jae
shl
xchg
sbb
or
pop
je
dec
adcb
mov
out
add
outsl
mov
jno
adc
pop
jb
popa
dec
jge
ret
lods
cld
adc
filds
jl
and
or
sbbl
out
clc
adc
pusha
xchg
mov
fdivl
leave
push
mov
cmp
dec
jb
pop
xor
sub
inc
pop
and
and
cmp
sbb
addr16
sbb
inc
adc
fidivrl
cltd
pop
jno
test
add
or
cmp
hlt
int3
out
jo
jbe
push
inc
jae
in
insb
lret
inc
fiadds
xor
setne
popa
inc
sbb
je
outsb
nop
cmc
adc
jle
jecxz
jecxz
add
repnz
stos
jmp
pop
aaa
test
popa
sbb
xchg
data16
jl
dec
xchg
push
stos
daa
and
sub
pop
mov
jecxz
and
xchg
jne
test
or
cmp
add
ljmp
pop
dec
and
sub
sti
clc
sbb
cwtl
xchg
aam
lret
sbb
sbb
aaa
mov
or
out
adcb
test
xor
xchg
cmp
mov
rcll
add
add
and
cmc
popa
out
pop
inc
mov
jno
je
pusha
notb
push
lock
mov
rorl
std
rcll
icebp
lock
es
cmp
xor
fisttpl
into
in
xlat
mov
jo
int3
mov
aad
fidivrl
imul
dec
push
xchg
push
cld
add
mov
inc
xlat
test
cld
push
push
cmp
xchg
mov
adc
imul
out
cmp
sub
and
int3
and
xchg
mov
add
shll
lods
out
mov
mov
jb
pop
bound
ljmp
out
jb
pop
insl
jns
pop
mov
pop
mov
out
mov
cli
pop
shld
mov
leave
mov
and
pop
pop
cli
xor
xchg
mov
jecxz
std
jo
rcrb
or
and
std
push
fwait
sbb
adc
mov
fnstsw
packuswb
add
cmp
pusha
mov
rcll
movsb
mov
out
sub
sbb
jmp
push
ljmp
mov
or
cmpsl
or
ja
lock
ja
xchg
je
sarb
jne
shlb
push
mov
gs
loop
sbb
and
push
xchg
sub
rcll
test
pop
xchg
or
shlb
repz
movsb
xor
mov
xchg
or
dec
mov
sti
or
sti
into
pop
push
mov
push
cmp
clc
sbb
fwait
lods
cmp
lret
lahf
pop
mov
jo
push
repz
mov
sub
jnp
clc
pop
ds
adc
cmp
dec
cmp
clc
aam
or
movsb
rcrl
and
mov
out
sub
xchg
movsb
xor
cmc
mov
dec
mov
xchg
fdivp
push
push
out
jmp
stos
adc
push
fildl
and
mov
and
cmp
mov
pop
add
test
or
lods
cmc
in
arpl
sub
xchg
test
or
sub
mov
outsl
shlb
in
pop
mov
jg
mov
xchg
out
adc
outsl
repz
int
popf
push
mov
lods
cltd
mov
cmp
push
faddp
cmp
mov
jnp
sbb
aas
movl
adc
lods
xor
inc
sbb
dec
dec
sub
pop
sbb
sub
cmp
mov
test
push
sub
outsb
call
xor
xchg
sub
jo
jle
mov
fwait
rcll
add
mov
fcomps
add
push
push
sub
mov
jl
push
xchg
mov
or
pop
jp
mov
push
arpl
dec
in
sub
andl
aaa
adc
dec
movsl
in
dec
add
mov
sub
inc
and
add
cs
jg
shrl
pop
pop
nop
outsl
mov
cmp
lods
das
pop
mov
mov
xchg
outsb
push
repnz
das
ss
mov
sbbb
pop
and
cmpl
inc
jmp
pusha
pop
mov
repnz
mov
inc
pop
and
sahf
sahf
add
mov
push
mov
call
cmp
imul
cmp
pop
repnz
pusha
xchg
fwait
xchg
lea
insl
inc
inc
jp
hlt
and
test
jns
pop
fwait
ljmp
pop
or
loopne
sbb
xor
rolb
nop
ljmp
dec
cmc
mov
insl
push
mov
sbb
stc
in
in
lds
dec
xchg
outsb
push
and
outsb
mov
fadds
sub
dec
mov
pop
cmpsl
lods
or
pop
pop
cs
roll
dec
repz
test
cmp
pop
jecxz
in
inc
or
xchg
movsl
pop
mov
ret
stos
sbb
in
mov
lcall
add
adc
mov
popa
sbb
jl
in
push
ss
rcpps
add
and
fisttps
add
cmc
xchg
cltd
sub
mov
push
mov
bound
mov
pop
push
sub
and
arpl
mov
gs
imul
adc
xrelease
push
je
clc
cmp
push
inc
mov
mov
inc
aas
mov
fistpl
sbb
inc
mov
sub
cltd
sub
xchg
ljmp
cmp
flds
out
pop
dec
pop
jb
test
dec
adc
bound
out
mov
cmp
cmp
test
mov
lahf
lret
dec
repz
add
insb
push
lds
cwtl
push
add
test
sarb
and
data16
xor
ja
je
in
xor
or
sbb
fstpt
push
sbb
and
mov
adc
imul
inc
mov
in
fisubl
cmpsb
test
test
mov
int3
es
movsl
mov
sub
bound
pop
dec
popa
js
out
mov
xchg
cmp
out
dec
dec
cld
loope
pop
jae
inc
movsb
mov
scas
pop
cmp
add
push
cmp
push
inc
std
mov
and
sbb
stos
add
call
test
and
pop
add
pop
mulb
loop
jne
xchg
repz
lret
lea
lret
pop
enter
mov
dec
mov
push
inc
cli
adc
pop
sub
andl
stos
popa
push
xchg
loopne
mov
ds
repz
das
ret
insb
pop
aam
dec
out
cmpsl
or
subl
xchg
imul
repz
inc
ljmp
in
jo
ja
cmpsl
pushl
scas
pop
xchg
xchg
loope
imul
add
mov
popl
pop
addr16
mov
adc
or
jne
mov
sar
sub
jo
and
fisubrs
and
aas
pushf
xor
pop
and
das
mov
ss
jle
je
fisttpl
loopne
push
xchg
mov
aad
mov
lcall
out
xor
jae
outsb
sti
lods
jnp
test
icebp
js
cmp
ja
sub
adc
or
mov
not
into
xor
loopne
les
dec
clc
ret
fcom
fmul
push
add
lds
shll
sub
mov
jge
in
xchg
mov
pushf
adc
adc
ss
pop
je
or
lds
jno
xorb
cmpb
call
fidivrl
das
pushf
jb
push
jl
icebp
shll
aad
not
sub
lea
or
jnp
icebp
sbb
pop
jo
pop
insl
out
xchg
jg
mov
xor
mov
sbb
or
ljmp
sbb
xchg
bound
pop
clc
out
xor
test
pop
dec
lret
xlat
sub
cmp
hlt
dec
sub
sub
repnz
repnz
sub
jnp
sbb
cmp
lods
fs
mov
mov
test
push
mov
mov
xor
inc
lock
scas
add
and
pop
jnp
fistpll
mov
sbb
jne
andb
push
test
mov
sub
mov
and
cltd
sbb
mov
out
into
stc
fs
ss
mov
divl
push
cmp
mov
lret
sub
mov
and
xchg
cmc
push
out
pop
sub
add
xchg
pop
insl
cmp
lea
cs
in
iret
mov
or
jo
loope
adc
aam
repz
jne
push
jo
add
push
sbb
xchg
xchg
push
adc
dec
lea
mov
outsl
cmc
insb
adc
shll
sbb
ja
int3
fimull
shlb
pop
inc
sub
adc
inc
inc
in
mov
xchg
push
imul
lods
lds
sub
or
jg
push
push
xchg
lods
shll
out
loopne
add
push
dec
out
mov
and
mov
inc
mov
repnz
out
outsb
stc
fs
and
mov
mov
aam
pusha
sub
adc
xchg
mov
sbb
xlat
insb
xchg
mov
xchg
inc
pop
insl
shlb
filds
sbb
push
insl
cltd
or
inc
push
mov
lret
xchg
scas
cltd
lcall
shlb
aas
add
stc
inc
dec
push
sbb
stc
ljmp
and
mov
mov
clc
and
fstl
sbb
mov
frstor
jp
sub
pop
inc
cwtl
mov
orb
fld
jo
sub
inc
sub
aad
fcmovne
ss
aam
movsb
cld
cmp
cli
sarb
cltd
jp
sbb
repz
js
push
testb
into
push
cli
sub
fistpll
notl
repz
push
mov
jecxz
cmpl
incb
mov
adc
mov
and
add
cmpsb
add
in
xchg
mov
popf
adc
jge
std
lds
pop
mov
shll
loopne
in
jp
and
or
mov
lret
cs
or
sub
mov
lds
test
fisttpll
pop
aaa
decl
gs
clc
jmp
addb
jb
sub
imul
xor
jb
aas
add
icebp
and
sarl
mov
fstps
sbb
mov
movsl
xor
fistpl
sbb
mov
js
fldcw
push
sbb
sbb
lock
jecxz
dec
test
xchg
insb
dec
test
repnz
popl
in
sar
jmp
loop
sbb
pop
jl
sahf
pop
or
arpl
fs
mov
test
xchg
mov
mov
daa
jns
fildll
popa
enter
call
fs
mov
in
out
bound
gs
ljmp
pop
sub
cmp
cmp
faddl
sbb
je
fwait
xchg
mov
dec
js
lret
aam
movq
leave
xchg
mov
outsb
fxam
or
fcmovnbe
lahf
pop
inc
andl
add
js
adc
sbb
inc
jns
pmaxub
xlat
roll
push
scas
and
dec
fstp
arpl
xchg
orb
jnp
jmp
mov
mov
push
int3
pop
aam
cli
cmp
sbb
popf
loope
push
mov
cli
adc
adc
inc
and
pop
lock
into
mov
lahf
pop
push
les
or
mov
mov
arpl
outsb
cli
mov
lods
jp
hlt
movsl
test
test
stos
sub
in
add
cwtl
xor
push
cwtl
sbb
dec
mov
cmpsl
dec
dec
orb
mov
leave
cmp
dec
cltd
test
pop
testl
adc
enter
xor
pop
xor
adc
into
les
inc
add
jle
scas
mov
inc
incl
aam
xor
test
call
jno
mov
jmp
out
cwtl
imul
xchg
xor
enter
fs
sub
lock
adc
stos
mov
mov
inc
aaa
push
add
adc
mov
fldt
cmp
xchg
arpl
cld
lock
std
cmpsl
movsb
out
and
xchg
sbb
mov
adc
pop
sbb
fisubrs
push
arpl
push
ficoml
xchg
in
xor
xchg
popf
mov
mul
adc
in
out
lods
test
cs
lret
inc
or
inc
outsl
push
int3
ret
push
in
pop
jp
dec
fisubl
sub
mov
or
scas
dec
jae
adc
dec
xor
push
adc
sub
sbb
int
sbb
test
bound
out
int
outsb
adcb
jno
xchg
test
std
pop
xlat
inc
add
test
mov
pop
jbe
push
cmp
jl
adc
aaa
push
inc
pop
fsubrl
xor
jmp
negb
xor
xlat
push
inc
push
mov
subl
dec
mov
sub
mov
fdivr
push
push
mov
test
cmp
and
cs
add
pop
fistps
sbb
fcoml
or
cmp
mov
cmp
inc
sub
and
int3
pusha
cmp
dec
iret
and
sbb
cmpsb
add
dec
add
sbbl
push
enter
xor
bound
fistpll
jge
popf
punpcklbw
je
lcall
and
in
sbb
sbb
cmp
sti
ljmp
aad
or
adc
dec
rorb
push
and
into
shr
nop
lock
repnz
cmp
add
pop
cmp
imul
pop
andb
xor
das
pop
add
icebp
xchg
or
jns
les
outsb
out
sti
adc
or
and
xchg
dec
mov
icebp
sub
fists
pop
nop
mov
dec
jne
fwait
loope
and
pop
jge
movsl
movsl
cmp
sahf
or
push
xor
jmp
sti
sub
scas
test
fsubs
dec
rcrl
mov
aam
fldcw
xchg
imul
push
xor
or
jnp
jo
sub
push
push
xchg
mov
and
ljmp
add
add
rcr
xorl
dec
and
lds
sub
or
lds
add
jae
dec
in
insl
ret
scas
dec
fstpl
cmp
inc
jnp
mov
mov
xor
push
pop
call
pop
repnz
xchg
fsts
fisttps
xchg
into
cmpsb
insl
ds
in
push
cmpsl
ljmp
sub
push
mov
mulb
loope
sub
and
popa
and
xor
std
iret
arpl
into
sbbl
out
shll
xchg
inc
out
adc
mov
mov
scas
mov
in
push
loope,pt
das
xchg
sub
push
sahf
sub
mov
out
std
cmp
or
int3
stos
daa
ja
mov
clc
ficomps
mov
les
cmp
fwait
cmp
adc
mov
xchg
test
or
cmp
mov
mov
es
repnz
xor
inc
jge
ret
inc
and
sub
mov
ljmp
lret
rorb
nop
jmp
mov
adc
stos
call
fcoml
cltd
enter
lcall
js,pt
jmp
ljmp
ror
pop
pop
push
ja
dec
pop
cltd
mov
mov
pop
push
xor
paddb
mov
mov
sub
popf
adc
mov
shrb
and
testb
leave
mov
push
mov
test
insb
js
jae
xchg
mov
and
sarl
ret
enter
jecxz
cmp
jne
mov
fsubrl
pop
ds
or
pop
sub
ret
leave
mov
or
sbb
loop
mov
shr
ljmp
in
pop
das
dec
pop
mov
lahf
add
insl
lret
shlb
je
fwait
movsb
repz
jecxz
adc
mov
jnp
dec
ljmp
mov
inc
jmp
js
fucomip
cmp
inc
xchg
fucomi
gs
lret
mov
or
roll
into
andb
test
ja
inc
out
pop
loop
pusha
jae
add
rcl
push
mov
inc
in
pushf
sub
mov
mov
bound
cld
out
adc
add
push
xrelease
mov
sub
mov
call
add
stos
sub
jge
ja
sbb
lea
pop
xor
out
rcrb
xor
rorb
cmp
xor
xor
aaa
daa
rcr
jmp
pop
xor
jp
sub
pop
push
movsl
test
mov
mov
adc
sub
sahf
into
mov
sbb
cld
sbb
cli
mov
js
mov
in
xchg
sub
cmp
faddp
lret
add
ljmp
imul
shlb
test
add
cwtl
pop
jle
mov
mov
test
cs
push
or
push
or
adc
pop
mov
xchg
outsb
in
sarl
dec
repz
insb
xchg
push
sbb
popf
cmp
es
jnp
xchg
in
mov
in
lcall
int3
and
mov
test
into
sbbl
jge
add
push
lret
jnp
ret
scas
pop
cmp
pop
call
out
enter
mov
mul
iret
pushf
inc
js
and
dec
iret
leave
negl
fs
rorb
in
sbb
popf
sbb
xchg
shll
inc
loopne
gs
xor
adc
push
rcr
out
leave
dec
je
ja
adcb
out
hlt
pop
cmp
jno
lock
out
test
int3
add
jae
inc
mov
stc
inc
push
mov
jnp
xchg
sti
xchg
in
mov
dec
and
aad
imul
and
stc
mov
pop
push
push
lahf
mov
mov
out
inc
fildl
inc
stos
sbb
icebp
sti
pop
negb
pop
outsb
add
das
ja
cmp
aas
sub
adc
or
mov
mov
push
xor
popa
pusha
jg
arpl
mov
mov
cmp
insb
sbb
hlt
and
mov
push
ds
cmp
mov
lods
lahf
cmp
jge
pop
dec
and
cwtl
xorl
add
lcall
xor
dec
sbb
ljmp
test
ret
cli
mov
lret
adc
imul
mov
push
sbb
mov
cmp
and
stc
aaa
and
stos
mov
repnz
sub
push
js
cmc
fs
stos
inc
xor
out
jmp
mov
stos
fisttpl
icebp
imull
fiadds
loopne
pop
and
ds
cwtl
xchg
or
cwtl
push
mov
inc
pop
mull
std
mull
mov
or
jmp
scas
adc
outsb
je
ds
push
cmp
popf
pop
mov
fstpt
les
mov
pop
mov
dec
xchg
pop
mov
out
in
hlt
arpl
or
in
push
or
imul
pop
arpl
add
or
repnz
bound
pop
cmc
lods
rcll
fiadds
push
bound
mov
rcrb
outsb
fstl
shrb
pop
adc
jmp
jne
fiaddl
fisttpl
xchg
cli
setno
js,pn
pop
lods
fwait
pop
stos
in
adc
fimuls
popf
outsl
and
xchg
rorl
push
popf
data16
int3
sbb
adc
and
or
into
pusha
push
or
fnstenv
jmp
push
xchg
xchg
ds
cs
loopne
test
cmp
jbe
inc
jo
pop
sahf
lods
push
jmp
insb
arpl
mov
add
mov
lcall
lods
adc
pop
and
sbb
pop
imul
sub
rcrl
sbb
mov
xchg
jo
mov
fcmovb
sub
in
adc
jns
nop
or
in
jno
cltd
jmp
sbb
lcall
lea
negb
mov
push
das
add
sub
subl
jle
mov
push
jae
repnz
mov
enter
sbb
jnp
cld
jmp
push
push
movsb
js
push
pop
rol
imul
cmpb
sbb
xor
shll
xchg
test
push
enter
rcrl
test
sbb
or
adc
iret
and
popa
adc
add
sbb
push
out
add
loope
fstl
xchg
ds
mov
test
cmp
dec
inc
sbb
daa
pop
sub
jns
cltd
repz
pop
dec
adc
ljmp
lcallw
cltd
mov
clc
pop
shlb
mov
ficoms
shll
addr16
pop
rol
mov
cmpsb
lds
cmc
pop
repz
mov
push
jbe
or
xchg
mov
jecxz
jmp
jl
shrl
and
decl
pushf
inc
fs
jno
push
mov
push
cli
sub
dec
into
fxch
js
js
jnp
xchg
add
jno
das
fisttps
fbstp
test
ret
shll
js
pop
mov
rcrl
out
fsubl
cwtl
push
pop
jnp
xchg
mov
lods
in
inc
lret
mov
dec
pop
sti
aad
cmc
repz
and
mov
imul
or
cmpsl
sti
push
shl
stc
jmp
mov
or
cmove
movsl
mov
push
mov
push
fmuls
sbb
int3
shl
outsb
sub
xor
lods
data16
mov
mov
insl
mov
jl
ficompl
xor
sahf
incb
inc
or
fwait
xor
mov
inc
out
xchg
mov
and
stc
mov
xorl
or
xlat
push
push
xor
ljmp
mov
inc
jbe
pop
insl
daa
inc
imul
mov
cmp
loope
loop
lods
sbb
mov
jl
out
lds
es
rcr
push
daa
and
adc
aad
push
dec
in
pop
sub
mov
dec
xsaveopt
out
inc
sbb
int3
jbe
mov
push
insb
shrl
test
sub
mov
sub
sbb
mov
or
mov
pushf
add
stos
jae
push
push
xchg
xchg
lret
jno
in
rcll
push
and
inc
adc
testb
cmp
in
mov
fst
mov
xchg
mov
add
ror
add
push
mov
mov
push
aaa
in
lods
cld
icebp
dec
frstor
add
fcmovnbe
xchg
mov
mov
push
push
mov
addr16
push
pushf
ds
aas
add
xchg
sub
aaa
mov
cltd
add
ret
fmull
or
imul
cmp
jl
jecxz,pn
xchg
xchg
out
cli
jnp
test
adc
test
out
push
in
hlt
or
sti
scas
in
xchg
dec
fcmovb
ret
mov
pushf
repnz
pop
pushf
sbb
adc
fmull
gs
jge
xorb
je
cmc
push
in
js
fnstenv
daa
loop
enter
lret
int
mulb
hlt
adc
pop
aad
cmp
mul
push
daa
jne
mov
mov
jp
mov
mov
cmp
sub
rol
outsb
mul
scas
out
sub
and
xor
ficomps
mov
jo
push
xchg
rorl
xor
pop
dec
mov
int
aas
mov
subb
stc
mov
orb
in
leave
mull
repz
leave
insl
cmp
jmp
pop
pop
jns
jge
adc
mov
js
or
imul
out
sarb
test
arpl
or
addl
fcoms
lea
mov
mov
in
mov
mov
movsb
mov
sbb
dec
in
mov
jp
inc
mov
push
sahf
push
loop
mov
rcrl
imul
inc
out
roll
cmc
mov
movsb
mov
aaa
ret
cli
pusha
push
dec
rclb
inc
nop
push
mov
lods
ja
mov
and
iret
jnp
lds
xlat
mov
lock
push
ljmp
flds
and
inc
into
ret
dec
xchg
bound
rcrl
outsb
pop
add
test
stos
inc
push
fsubl
rcr
fdivrl
in
out
sub
inc
mov
inc
stos
shl
aad
in
cwtl
and
cwtl
inc
xor
sbb
inc
icebp
xchg
dec
xchg
jmp
lea
inc
jns
xor
aaa
mov
jge
out
adc
sub
pusha
push
out
movsb
sbb
scas
repnz
or
add
cli
and
jb
je
dec
iret
dec
iret
mov
mov
test
push
and
incl
loop
sahf
push
outsb
cwtl
adc
and
lds
iret
popl
and
lret
les
es
xchg
dec
xor
fnsave
pop
xchg
pop
push
or
mov
jno
lea
pop
mov
xchg
pop
popf
fs
xor
jo
hlt
std
cmp
add
test
xor
sarb
test
sahf
dec
lret
imul
movd
jno
sbbl
adc
mov
add
lcall
shll
mov
xor
push
cmp
sbb
loope
test
and
xor
mov
push
int3
cmpsb
loopne
out
cmp
bound
sub
inc
jae
stos
movsl
push
pop
sub
daa
stos
int
stos
mov
test
stos
add
gs
jl
mov
int3
shlb
scas
into
aaa
dec
cmp
cli
inc
addr16
mov
out
hlt
data16
in
cmp
and
add
shl
lahf
xchg
xchg
sub
sti
push
mov
lds
rcll
adc
jg
cmp
stos
push
mov
test
add
mov
jmp
pop
or
xor
loopne
cmp
aas
fisttpl
movsb
mov
or
push
push
xor
mov
mov
push
add
jne
adc
dec
push
pop
xchg
pop
scas
sti
dec
pop
pop
jmp
outsl
dec
jae
bound
dec
in
inc
ja
idivb
mov
imul
stc
cmpl
adc
jno
cmp
cmpsl
pushf
out
and
push
mov
pushf
arpl
add
sbb
rolb
sbb
test
shrb
and
ret
idiv
or
addb
and
push
cmp
pop
cltd
aaa
adc
xor
movsb
jo
test
ffree
das
in
js
icebp
push
lret
push
cld
out
adc
lahf
sbb
test
jmp
inc
leave
and
mov
dec
stc
dec
addr16
add
cmp
mov
sbb
xorb
cmp
notb
cmp
or
int3
add
xor
jp
jl
data16
mov
or
add
ljmp
xchg
add
adc
mov
mov
negb
cmp
call
mov
shll
out
out
jns
test
jmp
xor
cs
stos
daa
xor
cmp
mov
or
dec
movsb
aad
xchg
scas
add
sub
fwait
push
lods
dec
aas
pushf
addr16
mov
and
out
jge
xchg
sbb
push
repz
int
jno
add
out
mov
jb
inc
push
mov
lea
nop
ret
adc
test
js
adc
mov
pop
cs
lock
xchg
flds
mov
dec
cmp
or
js
cmc
imul
mov
pop
out
adc
pop
test
pop
mov
lods
stc
or
fs
loopne
jmp
xor
orb
xchg
loop
loopne
rcl
imul
adc
popa
mov
jmp
outsb
mov
les
pushf
loop
faddl
shlb
push
push
lcall
pushf
movsl
ja
mov
cli
push
inc
lods
rcrl
shll
add
int3
cld
cli
neg
fsts
inc
mov
adc
sub
or
xor
sbb
jns
jb
jnp
ds
xchg
sti
push
sub
loop
sbb
and
dec
xchg
sub
mov
popf
xor
mov
shl
mov
fwait
add
das
push
in
mov
in
sub
pop
ljmp
incb
mov
jnp
in
mov
mov
hlt
leave
push
push
jmp
lds
insb
lret
sarb
or
sbb
cmpsb
mov
dec
push
int
pop
jmp
lahf
out
jb
addr16
pop
std
inc
add
push
add
or
push
dec
das
jge
add
ret
iret
mov
or
xchg
call
mov
jg
aaa
inc
jb
cmp
les
insb
pop
popa
xchg
mov
stos
sbb
cltd
inc
ficoms
aas
adc
pop
imul
mov
sub
jp
mov
adc
or
call
nop
xor
shrb
jl
inc
and
jmp
insl
test
jnp
xchg
in
xor
sti
and
jecxz
xchg
insb
sub
mov
push
sub
adc
sbb
inc
scas
push
dec
xchg
add
jae
jbe
jb
popl
adc
adc
xchg
push
sub
shlb
cmp
test
jbe
or
mov
in
xchg
sbb
idiv
jge
and
cmpsb
test
popf
xor
jmp
adc
dec
jecxz
inc
adc
mov
mov
jecxz
fs
mov
fldenv
pop
insb
mov
dec
je
pop
dec
ss
add
and
sahf
out
js
shrb
shlb
mov
xor
mov
call
loop
stc
adc
mov
adc
gs
mov
rolb
repz
inc
sub
cwtl
fidivrl
xchg
call
test
dec
rorb
push
insb
add
push
mov
in
jno
sub
dec
int3
sbb
xchg
nop
mov
sub
mov
nop
dec
stos
inc
mov
pushf
icebp
sub
mulb
gs
cltd
test
xchg
xchg
jmp
insl
xchg
in
pop
je
inc
imul
add
jle
inc
fstps
cmp
sbb
js
bound
out
lahf
pop
xchg
sahf
clc
inc
add
and
mov
sbb
sarl
cltd
imul
and
inc
jno
ret
int
imul
out
xchg
addr16
dec
and
add
rolb
movsb
sub
cmc
cwtl
call
jo
in
xlat
mov
in
out
or
dec
jnp,pn
inc
dec
mov
mov
out
add
ljmp
inc
xchg
mov
pop
pop
push
out
or
orl
mov
xchg
lcall
repnz
or
mov
cmp
or
movsb
sahf
shlb
xchg
adc
lock
mov
rcll
dec
cmp
mov
loop
dec
push
gs
in
sub
xor
jg
sbb
movsl
cmp
lsl
add
lock
adc
or
pop
dec
icebp
or
std
mov
ss
xchg
ja
push
and
mov
dec
jb
aaa
xor
dec
cmp
dec
insb
outsb
mov
cmp
out
mov
push
movsb
jnp
outsl
outsl
and
push
push
sub
cmp
in
int3
ljmp
addr16
jmp
xchg
addr16
cld
push
push
stc
push
mov
mov
mov
sbb
sub
les
jne
push
popa
mov
sarl
repz
mov
data16
cmp
dec
adc
stos
repz
dec
xchg
je
push
call
mov
cmp
mov
popa
mov
sarb
pop
testb
mov
jns
push
call
enter
out
std
stos
in
jl
dec
mov
and
xor
fisubrs
je
aaa
xor
lock
ret
hlt
mov
dec
push
call
sbb
mov
lahf
pop
jecxz
push
out
and
dec
sbb
mov
outsl
lods
jns
sbb
test
in
inc
mov
das
lods
out
mov
mov
dec
inc
pop
rep
xor
pop
jl
jmp
pop
cmove
clc
std
lods
in
xchg
cmpsb
jge
cmp
mov
pop
jp
sub
mov
je
xor
jg
mov
mov
sub
push
int3
cwtl
pop
out
jne
in
ficompl
jg
push
push
jne
jmp
scas
int
int
pushf
int
xchg
imul
nop
aad
pop
in
cmpsl
pop
lods
sub
leave
mov
enter
lcall
lret
pop
pop
in
inc
test
scas
mov
or
xchg
aaa
ficompl
sbb
mov
int3
repz
js
addr16
stos
xor
sbb
cmp
loopne
push
and
inc
mov
push
push
push
out
sbb
lcall
orb
fsubrl
ds
dec
lret
mov
adc
xchg
insl
sub
xlat
sahf
ret
test
into
test
mov
std
push
ds
sub
icebp
dec
in
lcall
cld
mov
cmp
sbb
mov
or
and
cmp
subl
sub
push
or
outsl
jns
int3
xchg
mov
mov
lcall
sbb
lret
in
mov
arpl
iret
xor
cmc
movsl
push
dec
ret
mov
jo
hlt
in
and
inc
push
cltd
repnz
inc
sti
pop
mov
cmp
cmp
push
and
pop
sbb
out
sti
iret
pop
sub
xchg
aad
test
mov
jnp
sbb
outsb
ss
and
popl
xchg
gs
sbb
push
movsl
or
inc
das
push
in
xorb
inc
lret
fwait
loop
adc
adcb
int
pop
loope
add
insb
sbb
enter
add
aaa
xor
out
mov
dec
jge
pop
dec
pushf
stos
sbb
jb
add
cmp
imul
jo
lods
or
mov
pop
push
leave
push
lock
jg
mov
mov
daa
sub
movsl
mov
pop
cmp
hlt
std
mov
nop
fisttpl
mov
fimull
hlt
stos
loopne
push
push
orl
mov
mov
mov
and
jge
stc
xor
sbb
lahf
xchg
add
hlt
mov
out
jmp
mov
cmp
push
loopne
ss
into
and
call
scas
ror
pusha
xchg
decb
lret
mov
sbb
pop
insb
insl
pop
inc
add
loop
jmp
mov
pop
aad
imul
inc
int3
sbb
cmp
mov
cs
pop
fadds
cmp
and
cld
icebp
aas
mov
ljmp
jecxz
or
in
popf
lahf
mov
fisttps
jp
mov
push
push
cmpsl
fs
push
cmpsl
je
jg
sahf
mov
aas
cs
ds
jo
insb
ret
bound
xchg
mov
out
jo
cmp
push
sti
fisttpll
test
push
pop
push
negl
iret
mov
mov
outsl
cs
xchg
sbb
and
fs
sub
mov
imul
arpl
outsb
cmp
adc
adc
dec
fisttps
out
lods
jno,pn
push
dec
cmc
dec
dec
sbb
bound
jae
out
jge
rolb
mov
je
mov
in
daa
in
test
movsb
gs
xchg
fstpl
shlb
icebp
cmp
pop
in
nop
or
pop
sub
outsb
in
inc
or
inc
pop
xchg
add
mov
pop
add
scas
push
jp
fmull
movl
ret
shlb
sub
fcomp
sub
imul
mul
out
andl
cld
dec
fildl
mov
pmuludq
push
mov
ret
in
into
xor
lret
icebp
std
gs
out
xchg
fistps
cmp
clc
out
jp
dec
aaa
lds
push
dec
stos
insl
jbe
mov
pushf
xor
jbe
rcr
dec
cmp
cmpsl
add
rcrl
and
sub
lea
cld
xchg
sub
push
add
sbb
bound
ss
rcrl
xchg
clc
mov
out
out
push
rep
jl
scas
cmp
fimuls
jle
and
and
lock
sbb
outsb
psraw
out
aas
xor
pop
mov
push
lock
cld
mov
mov
or
push
es
jecxz
clc
clc
jbe
les
pop
push
mov
xchg
notb
jns
icebp
adc
mov
fdivs
fimuls
or
nop
popa
imull
out
or
mov
inc
sti
loopne,pn
test
inc
aad
stos
imul
movsb
adc
cli
stos
add
xchg
dec
orb
stos
mov
xchg
ss
or
bnd
mov
dec
xchg
mov
les
adc
je
lret
jmp
xlat
bound
xchg
mov
les
mov
scas
sbb
dec
cmp
pop
imul
cmp
test
inc
repz
jmp
push
loope
loopne
push
mov
cmp
adc
mov
outsl
sbb
sti
out
push
fldcw
pop
repz
lock
push
fistps
fmul
cmc
stos
jle
shr
or
mov
fcompl
in
jbe
dec
pop
imul
xchg
ret
sub
push
sbb
clc
pop
jp
mov
in
js
adc
in
popf
xor
sub
addr16
push
xchg
mov
mov
xchg
sti
fwait
movsb
addb
mov
xor
mov
rclb
adc
or
loopne
xor
mov
arpl
sarb
mov
in
mov
mov
sbb
push
int3
mov
stos
push
inc
push
cmp
adc
mov
push
dec
mov
fstpt
push
jmp
sub
mov
jle
inc
mov
lods
imul
movsl
add
jbe
xchg
lock
pop
mov
xchg
mov
aaa
inc
repz
dec
cltd
frstor
test
dec
mov
lret
jns
outsl
in
or
dec
jne
cwtl
sbb
mull
push
mov
xchg
ja
repnz
xchg
add
dec
sub
push
fs
xlat
test
test
xor
aas
adc
or
js
xchg
test
rcrl
mov
ret
fadds
fistps
jecxz
add
jne
lods
in
mov
mov
pop
and
cli
pusha
jnp
or
dec
xchg
sub
xor
jae
rol
jge
add
push
mov
sub
xchg
fxch
movsl
outsb
fdiv
and
push
lock
lahf
xor
repz
sahf
into
imul
sbb
outsl
test
xchg
data16
emms
adc
xor
inc
xor
xor
mov
inc
mov
shl
sahf
jg
cmpsb
in
cltd
test
jno
sub
sub
std
mov
sahf
or
int3
loopne
fwait
pop
test
add
push
addr16
jb
and
xlat
lret
in
jge
ja
das
out
int3
popf
xchg
pop
sub
outsb
outsl
popf
jno
and
loope
or
repz
clc
outsl
jge
dec
shll
sub
add
mov
jge
lret
dec
stc
dec
stos
push
rorl
mov
xor
pop
sbb
in
lret
push
mov
movhps
addr16
sbb
inc
insl
push
cmp
pop
cwtl
fsubrl
stc
or
push
into
xchg
cltd
jns
mov
mov
push
movsl
add
inc
push
hlt
jnp
add
mov
or
test
pop
mov
or
loopne
lea
or
adc
cmp
pop
cmp
jp
cli
out
pop
in
xor
inc
cwtl
jg
scas
ret
dec
sub
cmp
inc
cwtl
adc
mov
jl
loope
cmpsl
adc
sub
pop
lret
dec
fs
xlat
push
push
or
adc
loopne
ret
pop
cmp
sub
dec
ds
dec
getsec
pop
mov
cli
xchg
frstor
cs
jmp
test
in
iret
jecxz
push
sub
das
rclb
ficompl
jecxz
hlt
mov
or
iret
add
es
loopne
inc
cmp
movsl
daa
jnp
cmp
inc
mov
popl
nop
push
sahf
fisubs
popa
dec
xchg
cli
mov
mov
fstpl
enter
fstpt
dec
in
popf
mov
and
or
test
mov
jge
aaa
jle
xchg
cmc
icebp
pop
mov
notl
xor
xchg
jo
adc
xchg
jo
outsb
imul
push
js
mov
stos
out
xchg
std
aam
jns
shrb
movsl
pop
add
xor
in
je
inc
cld
pop
dec
add
shl
stos
mov
lcall
ljmp
xor
adc
in
fs
aas
outsl
and
push
adc
shl
cmp
dec
aad
shll
imul
lahf
loope
pop
mov
mov
or
dec
pop
sarb
mov
cmpsl
jne
xchg
inc
ss
popa
ljmp
mov
insb
sbb
mov
fidivs
fidivs
cld
sub
or
popa
stc
pusha
push
push
ficoms
or
sub
adc
stos
lea
hlt
nop
xchg
nop
inc
dec
fcomip
das
js
clc
ss
mov
pop
scas
lods
mulb
fsubrl
movsb
mov
mov
inc
mov
cmp
push
imul
cmp
dec
stos
shlb
cmp
lret
inc
push
cmp
jae
pop
mov
arpl
data16
insl
xchg
mov
ljmp
mov
lods
sbb
pop
mov
bswap
gs
adc
inc
inc
data16
cwtl
cld
add
and
add
loop
mov
cmpsb
cld
inc
xchg
adc
jo
jne
cmp
inc
cmp
rorb
or
jb
push
andb
adc
add
jne
lock
mov
filds
cmpsb
xor
hlt
jecxz
popl
sub
sahf
dec
je
and
and
pop
pop
imul
adc
testb
ljmp
std
fistl
insl
es
cmpb
lds
neg
in
enter
out
addr16
add
inc
setnp
dec
shrl
lfs
and
xor
cmc
and
xor
pop
sbb
leave
jg
inc
dec
mov
fistpll
data16
int3
push
push
popa
lahf
dec
std
repnz
rol
mov
xor
out
stos
lds
sub
jns
scas
push
sbb
aam
addr16
push
xor
adc
gs
add
ds
xor
popa
xchg
cli
mov
ds
shll
xchg
cmp
jmp
xor
rorl
adc
jge
cwtl
push
lahf
dec
dec
sbb
imul
mov
jb
mov
mov
and
fdivp
decb
or
das
mov
jae
jp
mov
inc
push
dec
jo
adc
outsl
pop
int
ds
les
mov
in
xchg
dec
popa
mov
or
or
add
enter
call
jb
lret
adc
jl
packsswb
mov
addr16
shl
sbb
mov
sbb
neg
test
jge
shlb
ret
jb
sbb
mov
mov
mov
or
lds
push
daa
sub
je
jecxz
imul
call
test
cmp
and
out
loop
repnz
mov
pop
adc
pushf
gs
ficoml
popf
cmp
lret
xchg
mov
and
movsb
lcall
call
mov
add
out
sbb
inc
dec
pop
ljmp
pop
mov
jmp
mov
arpl
data16
mov
mov
add
sub
jnp
js
jno
fwait
add
dec
pushf
iret
dec
and
sti
cmp
inc
outsb
mov
mov
cmp
call
mov
cmp
lret
fisttpll
add
cmc
mov
dec
sub
xor
stc
push
fs
or
jnp
push
movsl
cltd
insb
imul
ret
inc
aas
push
cmp
leave
ljmp
or
test
loope
cmpsl
fcoml
or
cmp
jecxz
mov
inc
movsb
bound
xchg
nop
ds
cmpsl
xchg
xchg
push
and
inc
lret
push
sbbl
outsl
call
dec
inc
push
aad
push
pop
add
xchg
xchg
or
mov
cmpsl
mov
xor
jnp
inc
mov
roll
inc
mov
jl
push
shl
movsl
jbe
out
inc
or
aas
lahf
ljmp
aad
mov
fcomi
pop
js
cli
call
popa
pop
xor
hlt
jno
out
mov
cmp
sbb
jmp
divl
imul
lds
push
cmp
xlat
dec
mov
push
xchg
rcr
mov
in
and
in
mov
xchg
lahf
sub
or
add
push
rolb
add
sbb
pmulhuw
fldenv
call
in
xchg
loop
out
fstpl
adc
ss
cwtl
pop
xorl
xchg
sbb
lock
loopne
jo
jmp
add
fildl
mov
loopne
stos
ret
sahf
imul
dec
add
inc
pop
stc
test
daa
mov
in
jae
fucomp
ret
jecxz
imul
out
icebp
js
xor
clc
mov
mov
bound
jo
in
hlt
insl
inc
andl
jbe
lea
push
add
cmp
movsl
adc
pop
add
adc
test
adc
or
mov
sbb
shrb
pop
push
inc
xchg
adc
and
or
inc
xchg
imul
add
fwait
jae
mov
push
pop
loop
lea
and
mov
add
or
sbb
add
inc
fldcw
cmp
addl
jne
test
mov
cmp
jmp
push
sub
cmpsl
or
push
out
mov
ret
inc
xchg
xor
rcrl
dec
mov
and
testb
xor
ficompl
rolb
xchg
pop
xor
inc
mov
out
cltd
cld
ret
js
ds
pop
je
pop
fnsave
inc
sub
jbe
mov
mov
mov
popf
int
xchg
cmpl
inc
push
ja
mov
mov
pop
pusha
mov
sbb
aas
jb
jb
sahf
xor
push
shrl
fistpl
daa
frstor
add
push
outsb
stos
insb
add
daa
cld
gs
arpl
push
inc
sub
mov
loope
fldl
bound
aam
fsubs
stos
lods
stc
sbb
mov
idiv
idivl
cld
ret
pop
adc
mov
iret
push
aam
cmp
push
inc
sub
and
in
movsl
cmp
into
inc
aad
addr16
sbb
stos
push
lahf
and
jns
inc
xlat
in
lds
adc
leave
adc
cmpsl
push
imull
mov
dec
jno
ret
aam
call
popa
fucomip
mov
pusha
push
mov
mov
cs
std
xor
repnz
push
sarl
cmp
cmp
inc
sub
mov
dec
adc
inc
popf
shr
test
and
or
mov
mov
sub
dec
dec
xchg
pop
ret
icebp
movsb
insb
mov
roll
pop
and
inc
dec
out
sbbl
cmp
add
jp
packuswb
xor
jg
add
inc
das
imul
daa
mov
movswl
inc
push
jnp
sub
js
mov
xchg
add
subl
push
enter
xor
test
push
inc
jle
jecxz
aas
add
orb
test
test
pop
sub
jge
jge
pop
xchg
push
in
cmp
imul
push
adc
dec
lret
notl
add
movsb
jo
std
pop
adc
adc
mov
pop
adc
mov
ror
or
js
or
xor
pop
and
mov
out
cmp
test
dec
lahf
xor
mov
sbbl
mov
int
sbb
mov
sti
mov
inc
repz
test
repnz
pop
mov
inc
subl
mov
mov
dec
dec
jne
inc
popf
adc
iret
leave
fcom
cli
fnstenv
test
mov
fsubs
mov
es
inc
mov
lea
cmpsl
jns
push
cwtl
mov
dec
iret
popf
imulb
bound
adc
mov
fisttpll
sbb
push
dec
in
shll
add
sub
out
mov
idivb
iret
mov
in
iret
scas
ds
dec
movsl
lea
mov
es
int
sub
iret
pop
xchg
cs
adc
pop
adc
and
and
test
pop
pop
xchg
jg
mov
mov
push
inc
pop
add
adc
pushl
in
mov
pop
test
lret
je
sub
lea
dec
in
or
or
sbb
lret
test
xor
rclb
arpl
jb
jle
jb
shr
jmp
testb
aad
pusha
add
stos
jp
sbb
mov
xor
push
in
lahf
inc
mov
xor
push
push
jge
int
push
test
or
jmp
pop
int
and
pop
sub
mov
inc
xlat
sub
xchg
adc
xlat
cmp
push
ja
gs
dec
pushf
pusha
lcall
pop
jle
or
lret
rclb
bound
stc
es
ja
test
mov
cld
xchg
push
jae
call
scas
rcl
xchg
stos
lods
cmpsb
lcall
sbb
call
jo
fsubs
jne
aaa
or
notl
aad
in
popf
gs
cli
sub
inc
fldenv
ja
lods
mov
cs
sbb
in
xor
ds
movsl
cmp
push
lcall
jmp
mov
adc
cwtl
insb
leave
or
dec
ret
clc
aad
xchg
sbb
push
jns
in
push
xor
mov
cmpsl
in
mov
nop
out
xchg
push
lcall
cmp
add
orb
inc
icebp
sar
fdivs
test
jge
jmp
jno
rolb
xor
add
cs
jb
lcall
pop
push
pop
popf
ja
data16
pop
sbb
lock
ret
adc
xor
and
mov
mov
fwait
aad
sahf
or
sub
pop
push
push
mov
add
sbb
ficompl
fimuls
loope
imul
nop
call
and
icebp
fwait
sbb
push
mov
and
push
pop
aam
jb
sti
ret
jmp
ds
dec
loop
sub
jg
push
inc
mull
das
insb
xlat
cmp
enter
sbb
movsl
inc
dec
and
jg
xchg
cmp
cli
sub
scas
lret
and
daa
popa
or
mov
inc
and
mov
xor
adc
pop
stc
imul
dec
insl
xor
add
cmp
data16
or
cltd
mov
mov
shl
test
fsqrt
aas
pop
jl
mull
cltd
adcb
lods
lds
adc
inc
lods
imul
push
jno
or
and
repz
inc
popa
inc
or
imul
cmp
xorl
sbb
push
pop
pop
sbb
idivl
xchg
and
fs
popa
add
push
ss
add
pop
mov
adc
jmp
push
out
dec
xor
out
sbb
cs
out
pop
lahf
pusha
push
or
fdivrl
cmp
push
add
sbb
mov
ljmp
stos
and
cwtl
pop
hlt
or
aad
adc
pop
cs
insb
sarl
addb
and
insl
jl
pop
cmc
and
out
mov
cmp
adc
fadds
dec
push
inc
subl
mov
popa
daa
xchg
fcoml
or
cmp
insl
popa
or
fldt
leave
mov
xchg
les
lods
aas
out
stc
fwait
popf
xor
pop
stos
mov
jmp
dec
push
jnp
fisubs
int
mov
lcall
jmp
or
cmp
pop
roll
repz
mov
or
ss
push
jp
js
push
test
cmp
mov
out
insb
or
mov
adc
or
sbb
cs
xor
cmpsb
sti
lea
fstpl
stos
stos
push
and
cwtl
sahf
adc
push
stos
scas
mov
fbstp
sahf
jae
jnp
push
bound
iret
mov
jg
mov
loopne
pop
in
shl
push
mov
inc
out
jge
jnp
in
mov
cmp
js
sbb
xchg
mov
push
outsb
or
fsts
and
cmp
mov
test
sub
stos
mov
repz
lods
je
aaa
fs
mov
xor
outsl
jge
jns
nop
gs
mov
mov
test
inc
dec
dec
adc
or
inc
inc
ret
psubd
pop
mov
pop
outsl
arpl
mov
negl
mov
mov
lea
pop
xchg
and
int
fildll
faddl
push
cli
mov
mov
std
cld
push
mov
in
movsb
jo
sbb
fldln2
adc
or
scas
clc
inc
clc
push
jnp
jmp
adc
pop
stos
gs
xor
xchg
insl
jns
insb
cmp
cmp
add
push
outsl
ret
rcll
int
es
jae
push
shl
and
or
addr16
hlt
imul
arpl
push
cmp
xchg
adc
cltd
sarl
fcompl
adc
lcall
or
push
out
push
push
ss
scas
fisttpl
and
pop
dec
sub
int
xor
mov
xchg
or
push
scas
test
jecxz
movsl
popa
cmpsl
call
leave
bound
lds
int
jmp
in
cli
mov
dec
aad
scas
nop
scas
jle
pop
shrb
sbb
mov
xchg
mov
outsb
sahf
mov
jns
pop
mov
icebp
mov
dec
pop
scas
repnz
sub
ja
or
pop
data16
and
pusha
jns
push
jle
or
sti
lea
out
lea
jmp
dec
jnp
stos
mov
dec
xchg
push
xor
xchg
dec
call
push
aam
stos
mov
fiadds
jo
arpl
aas
sahf
in
ret
dec
lea
test
sub
cli
jae
mov
jle
mov
adc
dec
mov
sbb
arpl
insb
adc
push
push
lret
adc
push
mov
push
sbb
cld
push
pop
idivl
xchg
adc
imul
jmp
pop
arpl
mov
or
mov
loop
adc
inc
loopne
rorl
int
jp
pop
xchg
scas
addb
pop
enter
dec
push
test
sahf
out
cld
iret
adc
mov
into
sbb
jp
sbb
add
mov
xor
dec
dec
jo
pushf
mov
lock
out
mov
or
xor
push
lret
sbb
mov
iret
popa
inc
test
clc
shrb
stos
push
imul
shl
icebp
ljmp
mov
lods
or
out
ja
scas
lea
mov
jle
cli
push
jp
sbbb
ljmp
and
fisubl
mov
test
cmpsb
ds
or
jae
pop
sub
adc
sub
dec
not
push
and
inc
sbb
in
mov
sub
sbb
dec
push
loopne
xor
push
lahf
jp
pop
ficompl
nop
push
rorb
ljmp
nop
rorb
add
pop
lods
pop
lcall
sub
mov
cltd
test
adc
jg
aaa
cli
pop
fidivl
es
or
inc
fisttpl
xor
push
icebp
mov
dec
sub
push
pushf
push
mov
daa
sub
xor
lds
pop
enter
test
xor
shrb
stc
addr16
movsb
dec
fldl
or
add
sbb
inc
mov
loopnew
push
add
jb
dec
into
imul
addr16
jmp
insl
into
sti
mov
aam
movsl
mov
push
ret
mov
or
call
xchg
out
mov
jnp
subl
push
test
int
pop
cmpsb
lea
int3
xchg
cmp
and
or
rcll
push
cmpsb
bswap
loop
inc
xlat
and
mov
testl
jle
xchg
xor
or
xchg
jae
add
imul
rcr
sbb
roll
ds
and
or
test
in
aad
out
mov
xor
cmp
in
mov
jno
dec
and
in
xchg
inc
mov
js
jmp
aad
mov
lods
sub
xor
xchg
ljmp
scas
popf
adcl
sbbb
push
cmp
incl
sahf
pushf
xchg
pop
pop
mov
outsb
mov
fistl
push
insl
mov
cltd
sbb
xchg
ret
es
aam
inc
popf
jns
xchg
jl
shll
jb
xor
in
push
adcl
pop
fs
in
mov
lods
cld
repnz
mov
les
stos
dec
insb
leave
push
fdiv
xorb
or
nop
ds
mov
push
ficompl
and
stc
jae
push
xchg
sahf
notl
dec
sub
mov
or
fcoml
and
jle
adc
arpl
sbbb
ja
cltd
in
mov
mov
or
ret
add
cmp
mov
sub
movsb
stos
fildl
daa
mov
mov
add
sbb
fmul
and
pushf
lcall
pop
lcall
faddp
pusha
pmullw
test
adc
push
and
shll
xor
push
rorb
mov
sub
shll
andl
imul
cli
jle
and
fisubrs
arpl
out
mov
sbb
movsb
pop
dec
in
in
jbe
or
ret
mov
push
lahf
insl
cmpsl
add
addl
popa
pop
rcrb
cmp
xchg
je
cmpsl
loope
cmc
xor
cmp
xchg
lcall
sqrtps
adc
xchg
pop
pop
imul
mov
pop
push
mov
popl
mov
aad
jg
popf
jns
pop
mov
rcrl
add
pop
ficoms
inc
out
or
push
cmp
inc
mov
mov
fsts
pop
test
cmc
pop
loop
ds
popf
inc
cmp
into
pop
aam
mov
fdivrs
lods
cmp
cmp
dec
mov
add
push
shll
lea
add
xor
cmpsl
mov
jl
leave
pop
cmc
pop
adc
inc
test
push
pop
push
push
jl
mov
rcll
cmp
inc
jbe
cmovne
sub
cmpsb
popa
mov
loopne
adc
in
pop
add
pop
ficoms
fdiv
or
push
and
inc
push
fbld
ret
int
jge
loope
inc
out
push
nop
adc
movl
lds
shrl
cltd
movsb
gs
inc
orl
scas
sbb
xchg
shl
in
lahf
stos
sbb
lods
xlat
fidivrs
aam
inc
mov
adc
dec
out
les
pop
and
outsl
rcrb
mov
mov
dec
movsb
push
rcr
scas
dec
jb
mov
ss
sbb
xchg
lds
fcomps
sbb
ror
int3
outsb
jecxz
mov
int
mov
retw
shr
outsb
xlat
fidivs
dec
and
orl
pop
mov
jae
jae
jnp
mov
cli
push
jl
mov
pop
sub
add
mov
push
adc
jmp
adc
pop
mov
fiadds
push
aas
sub
repz
test
mov
sbb
inc
and
out
sbb
sbb
shrl
loop
lret
iret
subl
sti
sub
notb
add
lcall
xchg
movsb
adc
add
push
sbb
arpl
inc
or
pusha
in
xor
fucomp
mov
pop
push
adc
aas
mov
mov
fiadds
sti
loop
mov
mov
xchg
imul
push
dec
pop
dec
jl
aas
ficomps
mov
adc
inc
mov
jmp
dec
addr16
sub
and
aas
out
xor
jp
repnz
xor
sbb
mov
std
inc
adcl
iret
clc
push
or
push
pop
call
ret
pop
jg
sbb
pop
mov
push
test
sbb
outsb
xchg
inc
enter
jne
dec
cmp
subl
push
xchg
mov
imul
repz
insl
and
jmp
out
or
inc
xchg
lcall
scas
loop
stc
or
push
leave
mov
push
sti
cmpsb
stos
andb
les
fs
mov
gs
jne
in
jle
and
repnz
cmc
lcall
pop
push
mov
or
call
aaa
jne
mov
nop
decl
lret
filds
cmp
sti
jp
xchg
sub
fsub
in
inc
nop
add
idiv
jo
sub
jl
push
and
cltd
adc
jns
orl
lcall
jp
test
mov
ja
mov
hlt
xchg
lcall
sbb
sbb
ret
push
scas
sti
test
pop
ds
jne
dec
mov
dec
jmp
push
xchg
sti
ret
mov
aas
dec
cli
mov
fucomip
add
xchg
pop
das
adc
mov
das
add
test
inc
add
fiadds
dec
add
fistpl
sbb
sbb
add
insl
lds
sub
sbb
mov
popa
add
mov
mov
and
xchg
into
fnstenv
lcall
xchg
jne
fs
out
and
jo
shll
insb
mov
cmp
adc
and
into
rolb
sbb
adcl
mov
call
mov
or
jl
mov
cmpsl
test
and
add
push
js
adc
sub
xchg
pop
das
jb
jle
jae
mov
push
cmp
inc
pop
mov
lods
lahf
loope
push
jl
push
in
mov
and
jmp
adc
sbb
ss
out
lcall
ss
shlb
cltd
pop
push
mov
cmp
adc
mov
jbe
push
out
cmp
fidivrl
out
lahf
jo
divb
subl
sahf
push
pop
mov
aaa
mov
stos
in
add
sub
dec
loopne
in
test
mov
pop
movsl
or
imul
and
pop
lods
stos
xor
imul
les
sbb
lahf
testl
dec
test
or
loopne
adc
add
insl
xor
in
dec
cmpsl
fs
xchg
stc
xor
std
mov
ret
incb
fwait
outsb
dec
sub
sbb
sub
lea
gs
jecxz
aad
mov
mov
inc
push
cmp
push
aas
mov
ljmp
inc
cmp
sbb
mov
sub
jns
push
lret
or
dec
adc
adc
das
jge
push
xchg
in
jbe
ljmp
mov
js
nop
scas
or
mov
jge,pt
loop
mov
cmp
push
lret
arpl
adc
hlt
fstpl
and
shr
mov
gs
ds
mov
loopne
aad
pop
and
inc
add
adc
sti
mov
push
fisubrl
sbbl
in
shll
sbb
mov
and
stc
std
xchg
cmp
mov
fwait
or
adc
out
mov
jecxz
jle
jmp
sub
scas
out
inc
loope
jp
sbb
push
mov
mov
into
mov
and
in
pop
push
add
stos
cltd
pop
xor
xchg
lea
pop
in
pop
pop
fnstcw
mov
jge
ret
add
movsl
push
ss
sub
push
cltd
das
shll
fisttpl
mov
mov
mov
sub
int3
repnz
ljmp
cmp
sub
outsb
push
mov
lds
mov
mov
loope
xor
aaa
test
cmc
mov
popf
push
sbb
repz
mov
aam
sbb
ret
stos
fcmovb
xor
sub
sub
pop
imul
add
dec
fstps
sub
in
xor
add
ljmp
inc
xor
lret
mov
lret
jmp
mov
and
out
inc
dec
lds
xchg
adc
cmp
adc
mov
add
insb
lods
stos
lahf
popf
xor
cmp
test
push
out
imul
mov
mov
jl
push
clc
cmp
orl
inc
stc
mov
xor
cmp
push
popa
lcall
cmp
mov
push
jge
lds
xor
mov
inc
inc
mov
xchg
xchg
pop
cltd
xchg
lahf
mov
push
jle
fdivs
push
pop
cmovbe
or
outsb
jmpw
insb
out
push
jl
pop
jmp
dec
mov
mov
pop
pop
fcmovnb
sub
jle
mov
dec
imul
fcmovu
mov
std
popf
int3
sbb
fidivrl
dec
loopne
fisttpl
inc
inc
push
dec
sbbl
adc
jl
push
sub
pop
hlt
xor
cwtl
jb
popf
or
push
pop
mov
call
in
adcl
out
push
xchg
inc
sbb
push
sub
pushf
mov
inc
inc
pop
setge
push
scas
cmpsb
cmpsb
jl
pop
movl
dec
mov
imul
pop
dec
daa
pushf
pop
mov
and
test
pusha
fs
sub
jecxz
popa
nop
xchg
push
jae
mov
xchg
je
push
pop
stos
rorb
stos
flds
pop
xchg
and
popf
pop
les
sub
jl
inc
icebp
imul
je
pop
xchg
push
sub
jae
lahf
cmp
mov
in
enter
xchg
popa
fcompl
xchg
pop
movsb
jne
popf
fs
insl
add
rcl
test
sub
and
mov
aas
sub
test
and
lds
call
xlat
push
hlt
adc
out
mov
cmp
dec
test
outsl
clc
pop
leave
in
pop
and
mov
push
test
xlat
mov
movb
mov
pop
pop
sarl
outsl
inc
scas
pusha
mov
and
lea
mov
cltd
sbb
and
pop
inc
mov
dec
pop
jp
rcrb
pusha
aam
out
mov
cmp
ja
push
push
paddusb
mov
cwtl
sbbl
out
sub
daa
orb
outsl
jb
lods
int3
outsb
test
insb
hlt
cmp
lods
adcb
pop
mov
or
pop
push
cli
xchg
sti
jnp
jbe
jecxz
mov
cmp
pop
lea
rorb
mov
dec
dec
or
sbb
pop
push
or
dec
pushf
add
mov
call
lea
mov
out
sahf
out
jge
ljmp
cmp
dec
in
rcr
pop
mov
mov
jmp
rcll
cmc
test
fimull
or
fsubrp
mov
xor
dec
incl
cmp
aad
int
mov
out
sub
mov
shr
mov
loopne
pop
jmp
jecxz
iret
jae
cltd
and
jge
mov
sub
dec
dec
dec
add
fadds
mov
or
cmpsl
jl
mov
cmpsl
out
or
pop
cwtl
push
pop
mov
adc
in
lea
add
xchg
stc
arpl
inc
fnstsw
insb
and
fcmovnu
fsubrl
pop
mov
int
shl
leave
mov
xor
cld
mov
cmp
xlat
subb
outsl
inc
push
test
mov
cmc
imul
repz
out
aam
int
enter
sbb
jp
test
jnp
movsb
outsb
jg
sbb
add
insl
or
adc
fistl
lods
pop
inc
pop
loope
hlt
cs
daa
xor
add
icebp
sub
lock
xchg
jecxz
sub
and
ret
scas
mov
loope
sub
out
aas
sub
movsl
lcall
mov
fadd
mov
in
out
out
jnp
mov
fnsave
jl
mov
iret
and
inc
lret
push
mov
or
adc
adc
int3
push
cmp
mov
cmc
fs
test
add
mov
pushf
dec
xchg
ficoml
mov
sti
pop
adc
imul
ret
inc
les
fadd
jl
sub
ret
out
mov
fiadds
hlt
mov
mov
xor
aaa
mov
or
sub
stos
lahf
sub
aam
adc
sarl
add
mov
jecxz
lret
jg
or
lods
rclb
ret
and
sbb
hlt
dec
mov
repnz
cmp
inc
jnp
mov
mov
movsl
dec
outsl
lret
stc
dec
adc
mov
sub
add
in
xchg
fisttpl
cld
and
jo
data16
xor
leave
mov
dec
cmovae
loope
pop
push
adcl
xchg
jge
hlt
and
std
bndstx
fisubrl
or
and
lret
test
pusha
loopne
xchg
in
dec
int3
push
jne
ret
mov
sub
xchg
les
dec
or
es
popa
mov
adc
xlat
adc
pop
mov
xor
into
cmp
cmpsb
outsb
mov
les
sub
adc
call
jae
push
push
loopne
pop
xchg
sub
xor
sub
sbb
and
scas
and
rcll
in
or
fldcw
lret
out
sub
xchg
sahf
mov
daa
testb
pop
test
jmp
mov
mov
jmp
lahf
clc
adc
out
test
lret
ret
fimull
mov
in
stos
xchg
mov
push
lds
sbb
pop
call
cmp
lret
cld
lock
or
and
call
mov
sbb
pop
shll
pop
jo
xchg
mov
sbb
cmpsb
push
mov
add
bound
jmp
shll
aam
mov
and
enter
cmp
jae
jle
hlt
xor
mov
mov
xor
stc
pop
je
out
ret
mov
movsl
negl
sbb
shrb
in
adc
ret
push
cmc
mov
ljmp
mov
cmp
out
add
addr16
pop
adc
das
lahf
ja
or
sub
cmp
stos
pop
mov
in
or
out
xchg
das
stc
cltd
dec
loop
jbe
shrl
adc
enter
addb
clc
ja
sub
movaps
and
fs
aad
inc
sahf
xchg
jmp
cli
adc
test
cmp
sub
into
test
and
xchg
or
pop
jge
fucomi
pop
jl
pop
rolb
ja
daa
jo
pop
xchg
sbb
mov
popa
pop
dec
mov
mov
sub
sub
fsin
mov
sub
lret
jns
add
pop
xorb
push
sub
mov
call
adc
loopne
mov
xchg
imul
nop
fwait
sub
loopne
lret
xchg
test
sbb
add
jecxz
dec
out
out
sti
in
fisubl
adc
inc
xchg
sbb
or
cltd
aas
pop
mov
scas
adc
push
and
add
fucomip
and
dec
push
and
push
jae
adc
mov
dec
addb
in
cmpl
xor
iret
loopne
add
pop
push
push
mov
inc
push
movhps
popa
xlat
cwtd
fstpt
lds
mov
jbe
pop
mov
test
and
mov
test
push
mov
aas
lea
jno
pop
jae
push
sbb
lret
push
ret
jns
xor
cmp
sbb
xchg
out
push
push
mov
push
outsl
lock
loope
sahf
sbb
stc
sbb
ret
das
xchg
sub
sahf
push
or
nop
clc
inc
imul
mov
pop
les
jb
mov
movsl
xchg
pushf
aad
fisttpll
cli
dec
leave
in
mov
out
jge
jmp
mov
pop
xchg
scas
enter
sbb
dec
nop
xchg
cmpsb
int
icebp
sarl
out
push
adcl
inc
mov
lret
test
rcrl
xchg
add
pop
shlb
xchg
fcompl
or
test
arpl
aas
popa
push
mov
scas
mov
jae
push
adcl
pop
loope
sub
ja
mov
arpl
imul
mov
bound
mov
je
mov
stos
je
inc
jge
pop
fdivrs
push
in
xor
pop
push
jmp
pushf
ja
mov
xchg
stos
gs
xchg
dec
fldenv
xchg
iret
xchg
dec
clc
repnz
push
jg
aam
cmp
and
movsl
mov
dec
xlat
fsubr
filds
and
or
loopne
add
mov
mov
pop
pop
out
jbe
mov
inc
icebp
ror
shl
gs
jmp
mov
imul
mov
dec
cmp
shr
xchg
jg
je
ftst
and
std
iret
mov
sti
mov
add
xchg
cld
jns
sbb
sub
shll
mov
and
daa
cltd
mov
into
xchg
mov
jl
and
or
dec
sub
das
loop
pop
sub
or
mov
jns
lock
lods
dec
push
sarl
dec
lret
pop
mov
lahf
in
sbb
dec
mov
ret
ss
cmpsl
adc
mov
sub
adc
xor
mov
pushf
mov
pop
stc
ss
fldl
inc
repz
ret
out
lret
into
xchg
pusha
rcrl
push
add
fcoml
pop
xorl
mov
mov
pop
xchg
add
int
fisttpl
sahf
xor
icebp
out
ret
das
mov
xchg
mov
outsb
xchg
or
add
cmp
add
sub
aad
leave
mov
xchg
into
pop
aam
mov
mov
mov
sbb
xor
rcrl
inc
test
inc
xor
outsb
ljmp
adc
into
jecxz
incl
lret
add
shr
mov
mov
insl
enter
fnstsw
mov
nop
pop
adc
inc
icebp
in
adc
pop
bswap
cltd
dec
xlat
jecxz
out
adc
cmp
push
mov
lret
xor
test
pop
and
cs
inc
cltd
int
arpl
or
arpl
cmc
add
ljmp
aas
adc
jbe
and
push
pop
mov
mov
clc
cld
movsb
fistps
mov
sarb
jle
mov
push
dec
cli
lea
push
loopne
add
out
xchg
mov
stos
loop
pop
mov
lods
inc
rcll
xlat
or
mov
fs
xor
jno
adc
or
outsb
jb
sub
inc
mov
out
cs
dec
or
jg
dec
add
stc
sbb
adc
add
cli
ljmp
xchg
ljmp
inc
dec
or
xchg
stos
mov
cmp
call
mov
ret
movsb
xlat
cmp
dec
jl
push
inc
mov
dec
arpl
dec
mov
test
and
nop
adc
xchg
dec
sub
lock
mov
ljmp
cltd
xchg
xchg
mov
into
nop
inc
push
addb
mov
shlb
xchg
cmpsb
js
daa
std
aam
jmp
cmp
and
xchg
sbb
rorl
sub
mov
leave
sahf
push
xchg
imull
and
dec
mov
sub
pop
dec
jl
mov
lea
loop
xchg
mov
movsl
gs
aad
divb
inc
mov
sub
stc
fs
lret
sub
xorb
sbb
stos
jno
pop
fnstcw
bound
pushf
sub
xor
ret
xchg
or
xor
pop
mov
dec
inc
push
mov
pop
pop
dec
lcall
inc
popf
xor
mov
icebp
push
mov
adc
out
js
and
dec
outsl
add
or
jge
sbb
cmc
subl
stos
fidivrl
mov
pop
mov
cmp
xor
cli
imul
cmc
bound
lahf
fsub
or
mov
ljmp
insb
aaa
inc
push
sbb
pop
std
insl
movsb
xchg
xchg
test
lods
pop
xor
iret
das
out
sub
xchg
adc
mov
mov
adc
or
push
nop
lahf
repz
mov
xchg
xchg
test
aaa
xor
scas
or
xor
lods
mov
addr16
ret
ss
inc
insb
dec
and
dec
push
mov
dec
push
and
sbb
push
aad
and
and
lods
data16
push
pop
mov
fstps
xor
sub
gs
dec
leave
or
addr16
test
jno
mov
pop
aas
roll
jecxz
adc
movsl
push
push
out
lret
push
popa
or
inc
mov
mov
sub
push
out
popf
push
pop
xchg
lret
jp
mov
mov
fstl
and
jle
cmpsl
mov
stos
adc
cmp
aad
loop
push
sub
cmc
sbb
mov
sub
data16
nop
and
ljmp
out
sbb
insl
data16
xchg
mov
pop
and
pop
push
sarb
imul
int
pop
out
rclb
ds
in
mov
rclb
sbb
jbe
and
leave
aas
mov
xor
mov
jnp
stos
jb
mov
out
mov
jns
scas
pop
hlt
fidivrs
jmp
sbb
xchg
sub
aam
add
mov
mov
jle,pn
iret
int
xor
push
int3
and
loop
jbe
lods
pop
scas
and
and
push
add
test
mov
ret
sti
sbb
push
add
lods
js
xor
mov
repz
faddl
dec
cmp
xchg
cwtl
pop
xchg
jmp
divl
sub
movsb
int
jo
ljmp
mov
arpl
mov
ret
cmp
lcall
jb
cltd
push
xor
xlat
fisubs
aad
sbb
incb
mov
adcl
popa
aas
xchg
pop
into
jg
push
dec
shlb
call
jnp
push
add
jge
fs
xor
outsl
mov
sub
jmp
sbb
cmp
js
inc
pushf
or
stos
and
repnz
pop
dec
adc
test
int3
and
add
ficoml
out
cmc
push
adc
lret
notb
lods
pop
stos
cmp
add
enter
xchg
sbb
or
ret
or
cld
xchg
mov
andl
aam
movsb
in
mov
dec
test
add
cmp
pusha
cmp
sub
push
repnz
cld
repnz
ljmp
jne
mov
pop
jo
into
popf
and
ret
jno
pop
lahf
and
and
or
xchg
jl
rorb
pop
or
mov
inc
ja
gs
push
nop
lret
push
subb
loop
cltd
test
mov
inc
xor
xor
or
add
jno
es
mov
jb
sub
mov
lret
cmp
and
mov
jo
lods
fadd
fwait
mov
mov
mov
xchg
cwtl
pop
dec
cld
sbb
sub
adc
test
inc
repnz
test
insl
add
idivb
lahf
cmp
jb
ja
lock
enter
lds
dec
aaa
inc
xor
cmpb
iret
add
push
nop
loopne
shlb
lods
pop
jne
fstps
cmp
iret
cmp
jmp
push
outsb
pop
adc
movsb
xchg
ret
jecxz
jbe
cmpsl
aas
mov
jns
ffree
popf
fistpl
sub
fwait
cmp
xlat
pop
outsl
loope
jnp
and
fisttpll
sub
in
dec
push
push
mov
ja
incl
shlb
nop
fs
int
sti
push
daa
mov
fwait
pop
push
cmpsb
and
testl
test
popa
xor
loopne
inc
inc
sub
sub
xorb
mov
pop
cwtl
and
das
cmp
pushf
cmp
addr16
in
or
sbb
xor
rolb
aam
xchg
shl
add
iret
pop
push
test
pop
mov
jle
fists
mov
daa
incb
pop
xor
cwtl
cld
sub
adc
clc
nop
popa
jbe
inc
push
inc
ljmp
push
and
test
jecxz
dec
scas
out
add
push
jecxz
test
inc
pop
or
mov
xlat
adc
loopne
insb
cmp
and
fmuls
ja
nop
add
mov
rep
cli
sub
fwait
stc
pop
inc
jmp
in
dec
xor
in
sub
jb
mov
test
movsb
fildll
movsb
aas
cmp
icebp
pushf
ret
inc
adc
lds
and
test
inc
mov
scas
outsl
test
stos
outsb
cmpsl
ret
xor
daa
lret
push
push
and
fildl
xor
cmc
fstpl
call
out
inc
arpl
jnp
in
xchg
mov
sub
xchg
sti
cltd
lret
pop
cmp
push
push
xchg
xchg
inc
pop
fwait
cld
fs
mov
out
jge
cmove
cmp
sub
rorl
adc
cmp
xor
or
movsl
imul
pop
enter
in
mov
aas
xlat
xchg
add
leave
push
rcll
mov
sbb
loopne
rcrb
out
scas
inc
in
orb
adc
mov
or
test
push
fsts
or
fs
xor
jl
sarl
inc
inc
sbb
lea
sbb
dec
mov
shrl
out
pop
adc
inc
mov
fdivrs
ficoml
arpl
lods
inc
jp
push
mov
dec
cmc
inc
add
ss
mov
movsb
sbb
sub
push
push
sub
fs
xchg
jne
inc
lahf
fadds
mov
lret
loop
js
dec
lods
loop
fistpll
js
xor
mov
pop
icebp
cmc
aas
add
sahf
add
jge
add
ret
mov
adc
push
sub
and
out
dec
mov
dec
push
inc
daa
fbstp
cld
inc
adc
cld
cli
fnsave
mov
add
hlt
push
loop
mov
push
lea
xchg
or
cmp
xchg
jae
jge
xchg
jne
or
jbe
xor
inc
and
stc
xor
add
fsubs
sub
outsb
sub
or
push
and
dec
or
mov
and
sbb
cltd
bound
cld
pop
sbb
add
push
fsubl
inc
cltd
push
cmp
out
mov
insl
repz
pop
sub
add
cmc
fsubrs
mov
pop
ret
sbb
sbb
out
das
divl
dec
xor
adc
or
mov
in
out
insl
mov
nop
cwtl
xchg
xchg
dec
sbb
mov
js
imul
and
movsl
out
fucomp
xchg
mov
mov
mov
pop
add
stc
dec
hlt
std
sub
gs
daa
fcoms
cmp
gs
push
push
icebp
mov
pop
pop
fmuls
cltd
fldcw
push
cmc
adc
adc
or
mov
mov
xchg
loopne
sub
mov
sahf
mov
jle
outsb
jg
xchg
and
imul
stos
jecxz
int3
xor
lock
mov
test
loope
mov
into
rolb
push
xchg
out
push
pop
xchg
call
aam
int
lods
sbb
push
int3
les
fadds
mov
mov
cvtps2pi
cli
xor
xchg
pop
arpl
jb
mov
scas
xchg
outsl
push
add
push
or
sbb
push
push
cmpsl
cltd
daa
fsubs
andb
outsb
mov
lret
jge
dec
mov
mov
jb
rorl
test
pop
lods
leave
inc
pop
movsb
sub
mov
mov
inc
je
ljmp
cwtl
mov
cmp
cmp
mov
or
test
mov
in
cmpsl
pop
jp
push
cmpsb
cmp
xchg
xchg
jecxz
inc
test
jne
je
or
sbb
add
mov
lods
subl
xor
mov
int3
mov
dec
sub
pop
stos
mov
jne
lahf
xor
movsb
sti
hlt
push
or
sbb
roll
mov
mov
add
mov
mov
out
popa
stc
jmp
ds
jns
stos
cmc
pop
ja
in
adc
dec
nop
jae
fistpll
loope
inc
push
mov
mov
cli
pop
xlat
mov
push
in
fdivl
and
loope
or
int
shl
stos
pop
and
aaa
insl
mov
push
xor
add
mov
fimull
jge
dec
daa
adc
add
mov
dec
icebp
imul
sti
scas
cmp
and
push
sbb
cmp
push
scas
jge
sbb
fiaddl
dec
data16
fcompl
mov
inc
and
in
mov
sti
cld
xor
xchg
sbb
sti
add
and
and
insb
lcall
push
adc
dec
rcrb
xchg
inc
cwtl
cmp
js
sub
mov
shl
mov
mov
xchg
mov
xchg
pop
stos
sbb
cmp
psubusw
jl
dec
shlb
inc
pop
int3
aam
mov
leave
inc
cmpsl
scas
test
xor
inc
jg
cmp
push
in
inc
and
or
cmp
and
jbe
mov
push
pop
scas
or
cwtl
ds
xchg
push
int3
scas
out
negb
pop
xchg
addb
pop
out
jg
js
call
mov
jge
jge
enter
stos
and
enter
cwtl
sbb
ds
inc
push
sbb
mov
aam
cld
sahf
mov
loop
jo
inc
add
in
jmp
ret
imul
orb
cmp
lret
insl
ss
dec
jo
mov
out
cmp
imul
cmp
cmp
xor
pop
sbb
daa
pop
sbb
jg
push
mov
sbb
out
ss
mov
lock
cli
push
cmp
sub
fs
shrl
pop
lods
cs
lock
inc
fiadds
push
dec
stc
inc
adc
dec
shrb
adc
pop
cs
pop
mov
xor
push
push
pusha
rcrb
test
push
or
fsub
mov
xor
imul
add
out
rorl
dec
push
sarb
pusha
jmp
inc
mov
sub
shlb
out
cltd
or
cmp
cmp
inc
xor
in
sub
sahf
mov
mov
jge
mov
imul
add
adc
xlat
ret
ret
ficoml
pop
sbb
lret
dec
pop
mov
fs
adc
movsl
dec
add
mov
pusha
js
mov
fisttpll
dec
repnz
cli
pop
icebp
in
inc
mov
cmc
in
push
xor
sub
rclb
xchg
mov
aaa
insb
in
imul
stos
or
jbe
rorl
ja
add
in
sub
inc
pop
sbb
filds
iret
imul
mov
imul
iret
xchg
cld
or
fwait
mov
test
dec
mov
dec
out
mov
ljmp
mov
fisttps
push
lods
mov
out
and
jg
popa
mov
mov
mov
stos
pop
mov
mov
fs
loope
leave
mov
add
mov
repnz
dec
repnz
dec
testl
push
cmp
cmp
fwait
push
sarl
xor
jl
lahf
xchg
cmp
mov
add
dec
or
sbb
add
cwtl
xchg
or
dec
movd
out
xchg
xchg
vmwrite
call
sti
xchg
and
enter
sbb
loop
aad
mov
sti
sub
enter
pusha
or
xor
mov
fildll
in
stos
sbb
dec
aad
and
pop
dec
data16
jbe
push
test
and
movsl
jmp
dec
aas
jecxz
call
loop
bound
arpl
push
push
pop
adc
push
jb
cmpl
aaa
xchg
test
insb
push
pop
aam
sti
cmpsl
sub
xchg
loop
das
shll
lcall
pushw
fs
cwtl
dec
jmp
je
xorl
repz
xchg
mov
mov
mov
inc
lea
or
enter
xor
sbb
jle
push
add
mov
sarb
dec
call
insl
clc
sub
push
aam
mov
int
loop
stos
mov
jae
fbstp
add
xlat
fldl
adc
cltd
fucomi
stos
sub
inc
insl
outsl
xchg
fistl
inc
test
adcb
sahf
cmc
fsts
pop
dec
ret
sbb
sti
pop
mov
jns
outsb
pop
and
aam
push
and
es
cmp
push
mov
mov
stc
mov
imul
pop
insb
jmp
insb
popf
sbbb
pop
scas
nop
xchg
ret
gs
gs
das
and
push
cmp
dec
pop
push
xor
lcall
sub
cmp
jecxz
pop
adc
jl
pop
sbbl
mov
imul
lods
or
shrl
pop
es
add
int3
mov
sub
dec
mov
push
fcomps
hlt
das
js
pushf
imul
cmpb
pop
int
stc
or
scas
cs
cs
mov
add
mov
int3
sbb
call
or
adc
sbb
aas
jb
xchg
je
fstpt
jl
xchg
bound
sbb
ja
out
add
jo
call
push
ja
dec
pop
and
and
daa
mov
or
dec
pop
add
mov
lret
cmp
inc
mov
sbb
push
dec
aad
rcrb
test
fstps
mov
push
and
xchg
in
daa
or
filds
jp
push
cmp
push
mov
insb
add
adc
sbb
push
xlat
dec
or
jge
inc
subb
mov
negb
test
xchg
lahf
lods
jp
cmpsl
test
nop
int3
push
add
sub
inc
xor
push
test
pushf
data16
or
test
repz
xchg
cmpsl
pop
jl
pop
insb
or
ffree
inc
dec
es
jo
push
mov
sub
sbb
mov
mov
or
xchg
xor
inc
sub
or
andl
sub
push
leave
repnz
or
lds
sti
cmp
xor
not
jns
cmp
sbb
daa
mov
test
pop
addr16
jno
fstl
outsl
je
jmp
outsl
fincstp
mov
pop
and
lds
sub
out
je
adc
insb
or
fldcw
mov
push
sub
pop
or
mov
das
sub
xchg
pop
insl
inc
sahf
adc
jge
pop
and
mov
mov
jmp
cmp
xlat
testb
shrb
dec
cmpsl
jmp
iret
lods
mov
mov
pop
pop
inc
cli
add
mov
mov
push
shlb
mov
add
xlat
ja
shl
mov
mov
and
rcll
sbbl
pop
push
arpl
cmpsb
imul
mov
ss
xor
adc
jle
cld
push
scas
fmull
or
daa
xchg
sub
xor
int
std
cmp
dec
std
push
jg
iret
mov
pop
rclb
jg
xchg
mov
clc
imul
sbb
mov
js
cmpsb
lods
adc
jnp
push
sub
mov
sbb
sbb
aaa
rcrb
xor
and
sbb
add
pop
xchg
lods
mov
mov
repnz
lea
push
stos
daa
inc
or
ficoml
pop
pop
mov
cs
jmp
js
cmpb
dec
dec
imul
int3
jle
mov
shlb
pop
cli
pop
call
loope
pop
push
cmc
mov
shl
rcrl
cmp
adc
out
or
aaa
fcompl
or
push
jge
aas
outsb
fistpll
arpl
mov
push
notb
lcall
add
and
lahf
mov
push
test
icebp
inc
orb
jecxz
xchg
sub
cmp
jmp
pop
ss
mov
add
inc
scas
dec
mov
invlpg
pushw
daa
adcl
shlb
sbb
cltd
jo
xor
in
fwait
sub
jbe
loope
rorl
sub
fucomp
cmc
rol
orl
xchg
mov
std
xchg
or
pop
lcall
mov
sti
adc
insl
mov
jo
mov
mov
cwtl
cmp
rorb
out
pop
add
js
dec
xor
cmpsb
xchg
fcoml
pop
pop
ljmp
mov
inc
stos
int
loope
movsl
xchg
sti
out
fwait
ds
and
sub
xor
sbb
fstps
cmp
push
xor
imul
pushf
loope
lods
lea
les
xor
add
push
mov
mov
pop
mov
dec
fadds
mov
inc
aas
lcall
je
mov
int3
aam
lds
pop
or
or
subl
imul
push
lea
mov
into
jbe
scas
or
rorl
nop
and
ljmp
movl
dec
cmp
push
and
ljmp
inc
dec
test
test
loopne
jnp
scas
inc
leave
ss
fnstsw
xor
ja
add
test
jmp
aam
and
inc
cmp
negb
rol
ds
into
xor
and
ss
popa
and
nop
aam
mov
leave
adc
sbb
shl
xchg
flds
es
sub
push
cmp
mov
test
aam
pop
and
call
inc
add
dec
shr
repnz
jl
adc
pop
or
popa
adc
call
int
sahf
imul
mov
test
push
sub
in
sbb
mov
test
sub
fsubs
cli
cld
jecxz
push
pop
mov
lock
sbb
insl
lds
inc
shr
in
sub
xor
sbb
out
dec
out
mov
lsl
add
mov
in
mov
and
add
clc
in
pop
lret
jo
repnz
mov
xchg
aad
xchg
hlt
cli
call
stos
in
inc
mov
icebp
pop
enter
pop
push
lds
mov
push
nop
lahf
fmuls
nop
sbb
mov
js
add
roll
mov
jne
and
dec
push
dec
repnz
pop
enter
and
and
enter
movsl
or
push
loopne
cltd
inc
je
mov
imul
fcoml
call
mov
mov
pop
fists
mov
addb
out
mov
jne
jmp
data16
xorb
ja
cltd
or
mov
jge
jne
sub
cmpsb
shll
dec
jb
dec
fiaddl
push
fisttpll
cli
sub
hlt
data16
cltd
push
dec
in
jnp
js
mov
sbb
inc
movsl
dec
and
hlt
xchg
ret
stc
in
or
xor
shrb
adcb
add
icebp
add
shlb
and
jl
in
fwait
cltd
sbbb
pop
add
mov
or
and
adc
or
icebp
mov
push
dec
cwtl
aas
jecxz
ss
loop
aad
push
cli
js
xchg
stos
fnstenv
mov
mov
daa
xchg
shrl
outsl
imul
sahf
cmpsb
inc
es
cmp
repz
fwait
xor
and
ret
and
and
xor
in
inc
mov
fcmove
adc
sub
fdivrs
clc
std
shlb
pop
mov
stc
cmc
bound
out
popl
cmp
sahf
in
mov
xchg
xchg
sbb
insb
lods
xchg
inc
movsl
popf
pop
cmp
or
xadd
scas
cmp
sub
jmp
add
imul
push
aam
fldenv
sub
jl
push
push
cmpsb
xor
inc
dec
push
aaa
std
dec
and
lret
and
call
cmp
fstp
imulb
ret
lea
push
sbb
test
out
jle
neg
loopne
stos
pop
mov
mov
in
fistpll
std
mov
in
hlt
in
sahf
xlat
or
cltd
pop
test
repnz
sub
add
xchg
mov
mov
movsl
out
cmp
sub
repnz
sbb
test
dec
pop
in
mov
jp
xchg
mov
pop
test
xchg
rorb
push
fnsetpm(287
fimuls
aad
les
mov
push
mov
test
xor
lcall
cmpsl
in
push
fisubl
adc
shrl
aas
jno
dec
test
movsb
out
fnstenv
out
aaa
pushf
mov
data16
mov
push
stc
jo
cmc
pop
jb
xor
popa
in
pop
adc
call
jbe,pt
cmp
jl
cmp
mov
push
mov
inc
outsl
sub
push
xor
pop
cld
and
sub
das
lahf
in
js
notl
pop
mov
dec
push
jl
in
add
dec
test
mov
aam
jg
das
shlb
cwtl
shl
mov
mov
je
cmp
addr16
sarl
mov
fstpl
js
xchg
adc
or
pop
lods
imul
in
jl
xchg
add
popf
jmp
dec
lcall
sub
loopne
add
sbb
jbe
jns
push
popa
mov
push
outsb
mov
cltd
pop
xchg
imull
enter
push
push
movsb
lds
inc
add
pop
test
jnp
dec
jo
cwtl
loop
mov
or
pop
cmpsl
jg
test
les
shlb
inc
outsb
mov
or
mov
add
fidivs
lea
or
xor
shll
lea
push
js
std
sub
fadds
mov
mov
outsb
mov
hlt
pop
lcall
outsb
filds
outsl
icebp
xchg
cmp
out
std
mov
outsb
gs
cmp
imul
ret
cli
add
stos
hlt
test
movsl
scas
pop
jge
in
out
push
and
in
push
sub
mov
sbb
or
pop
imul
pop
push
pop
cli
mov
loope
mov
sbb
adc
aam
test
cmp
adc
mov
or
push
fdivl
mov
push
xor
rol
sarb
add
jp
adc
lods
nop
es
in
pusha
into
test
movsl
addr16
mov
jns
lods
pop
sbb
lods
std
xchg
dec
jp
outsl
jno
aas
mov
mov
push
pop
inc
add
xchg
movb
sahf
pop
inc
sti
in
ret
pop
sbb
lret
popf
sub
notl
xchg
insl
jae
or
dec
sub
xor
xchg
test
cmp
popf
fs
stos
sub
cs
mov
xchg
pop
aas
push
movsl
dec
push
divl
fisubs
push
mov
addb
inc
lock
int
in
shl
adc
jmp
filds
sub
sar
lret
stos
xlat
sub
les
call
cs
jecxz
mov
cmpsl
sahf
push
cmpsl
lods
ljmp
fistl
aad
jg
inc
test
push
cmpsl
cmp
lock
mov
inc
pop
sub
add
insb
cmp
push
ljmp
insl
cmc
jg
dec
pusha
adc
cmc
lcall
cmpsl
cmpsl
pop
push
mov
cmp
je
inc
movsl
icebp
mov
add
mov
adc
sarl
inc
sbbl
mov
add
inc
push
inc
pop
ja
gs
add
mov
xchg
xor
test
ficoml
dec
pushf
aad
mov
push
aad
cmpsb
ljmp
push
xchg
xor
inc
xor
mov
push
xchg
int
jnp
adc
mov
into
mov
out
shlb
pop
out
xchg
dec
jnp
inc
scas
addr16
cli
aam
push
mov
push
popf
sub
mov
iret
inc
pop
add
lret
inc
add
cmc
push
enter
dec
pusha
add
inc
nop
xor
cmp
ficoml
fisubs
xchg
xchg
pushf
insl
mov
xchg
arpl
ret
ret
in
ds
add
data16
xchg
stos
mov
decl
mov
mov
sub
or
push
adcb
out
clc
rcrb
mov
in
xchg
fildl
fidivl
scas
lock
mov
cmp
add
xor
nop
fs
or
int
mov
scas
rcrb
adcl
push
mov
sub
out
mov
add
sbb
mov
fwait
fwait
xor
pop
scas
jp
les
jnp
mov
pop
ljmp
mov
push
out
ss
cmp
or
outsb
sbb
les
and
sub
mov
jae
xor
shll
or
inc
pusha
lds
mov
shll
cli
mov
adcb
fwait
inc
mov
fiadds
stos
testb
nop
popa
pop
sbb
aam
subl
es
xchg
mov
out
lods
movsb
mov
jne
mov
dec
stos
or
icebp
movsb
pushf
pop
pop
mov
xchg
movb
lods
je
rolb
adc
int3
mov
mov
in
dec
jae
jne
and
addb
jge
adc
outsb
sub
jecxz
pop
adc
test
jecxz
lea
popf
jae
and
or
pop
faddl
push
push
fwait
dec
xor
cmp
sbb
mov
neg
push
lds
js
cmc
inc
into
jns
dec
sahf
inc
mov
add
push
repz
shl
jg
fnstenv
mov
inc
int
je
adc
push
adc
jnp
jbe
adc
outsb
cs
ficomps
and
sub
shrl
or
sub
or
pop
andb
sub
and
dec
mov
push
and
dec
push
cmpsb
adc
aad
shll
xlat
mov
cld
cmpsb
repnz
fisubrs
cmpsb
jb
jle
sti
aad
imul
out
xchg
push
mov
mov
cmp
push
mov
inc
or
iret
xlat
les
jecxz
ret
cmp
cmp
add
xor
xchg
mov
xchg
arpl
inc
cld
sub
and
jg
adcl
cli
adc
mov
fnstsw
popf
in
into
inc
cmpb
jle
cmp
insb
jnp
or
cmc
stos
pop
test
cmpsb
test
inc
jg
icebp
mov
aas
or
ret
sub
scas
mov
fsubrl
das
push
ja
int
stos
out
sub
cs
jl
les
aad
dec
ret
outsl
mov
pop
mov
lcall
int3
lds
pop
iret
pop
dec
sub
lahf
jmp
sbb
jae
inc
sbb
or
jl
dec
jg
adc
or
das
mov
sbb
push
int3
stc
push
push
lret
xor
mov
push
sbb
push
push
push
std
lock
int3
add
xchg
adc
fisubrs
cwtl
pop
mov
jo
in
cmp
add
xchg
mov
std
jns
daa
push
pop
add
ret
cmpl
cmpsl
das
imul
mov
inc
aam
dec
mov
cmpsb
add
into
sub
pop
fldenv
ljmp
mov
pusha
jle
fimuls
ffreep
cmc
iret
les
ret
sub
test
pop
add
cmp
jecxz
push
test
movsl
xchg
xor
mov
gs
movsb
dec
add
mov
mov
cmc
add
hlt
and
lods
int
sub
ljmp
mov
loopne
push
mov
je
xor
jmp
pop
fs
add
mov
lods
in
pop
or
xlat
xchg
imul
test
adc
fdivl
cmp
add
cmp
push
sub
xchg
loope
and
dec
cld
nopl
int
mov
les
pop
in
das
pop
push
xlat
mov
and
pop
mov
jo
or
inc
xor
push
insl
sar
cmp
repz
pop
in
ret
mov
cmpsb
mov
rcr
cmp
js
les
mov
mov
dec
cmp
mov
and
push
orl
push
ret
add
cmp
sbb
and
mov
inc
sahf
cli
mov
xor
into
mov
test
or
sub
cmp
nop
pop
pusha
push
lret
add
push
sub
sub
out
jl
cmpsl
insb
push
inc
xor
andl
xchg
pop
xor
mov
mov
int
sub
ficoms
aad
xchg
add
test
sub
movsl
pop
add
xchg
dec
or
mov
and
clc
sbb
lret
cmp
xchg
mov
jg
mov
adc
rol
pop
aad
cwtl
call
lock
ljmp
mov
dec
push
stos
lahf
in
jae
dec
fbld
sahf
inc
sbb
xchg
and
stc
test
sub
aad
nop
daa
outsb
pop
js
movsb
loope
pop
cmp
dec
push
mov
imull
lcall
mov
mov
lret
mov
mov
and
ljmp
cltd
das
lcall
jmp
xor
aas
and
sarl
icebp
inc
jae
or
sti
nop
push
jne
and
sub
daa
js
daa
frstor
insb
pop
mov
mov
cs
and
pop
or
sub
dec
jecxz
pusha
fildl
push
gs
or
rorb
mov
push
js
cld
cltd
jae
cli
mov
inc
inc
pushl
fistl
lock
or
sub
pop
sbb
stos
shr
and
jmp
mov
xor
jle
les
sub
mov
cmp
inc
mov
jne
fidivl
stos
and
inc
mov
icebp
addr16
and
outsb
adc
mov
repnz
lock
mov
daa
sbb
data16
jns
fildl
cmp
pop
jmp
inc
add
stos
lock
sbb
scas
fsub
in
jl
and
xchg
popa
pop
mov
outsb
lahf
jne
mov
ja
xor
add
test
lahf
sarb
fdivl
adc
daa
js
imul
mov
add
sub
pop
pop
fs
jg
js
arpl
pop
subl
inc
mov
cmp
lods
ret
dec
pop
jg
mov
push
out
sbbl
push
fnstcw
div
xchg
lcall
or
sub
xchg
sub
push
in
fdivrl
decl
xchg
lods
sub
pusha
daa
aad
mov
add
jle
fs
leave
push
out
cmp
mov
out
outsb
or
cmpsb
mov
push
in
lea
mov
repz
inc
loopne
cmpsb
int
std
clc
push
jo
bound
bound
inc
stos
call
mov
std
cld
xor
mov
xchg
mov
in
cmp
sub
mov
mov
sbb
call
ja
push
and
das
pushf
lds
sbb
sub
mov
fstpt
fisttpll
push
fmull
jae
iret
or
jae
mov
mov
add
or
sti
cmp
into
in
dec
xor
adc
xor
or
add
pop
notl
mov
ret
mov
xor
and
jle
std
jne
xor
xchg
in
dec
mov
push
sub
pop
push
or
jmp
jbe
insl
scas
pop
pop
xlat
test
cltd
mov
shr
pop
fsub
sub
cwtl
and
pop
dec
push
mov
stos
ret
pop
andl
mov
sbb
ss
or
pop
jb
out
xchg
lods
xchg
jle
movsl
aam
cmp
mov
leave
les
mov
push
jl
outsl
pop
out
and
dec
rcrl
or
mov
lret
sub
fadds
ds
and
mov
lds
mov
sahf
test
pop
ss
in
adc
lods
hlt
lcall
loop
mov
adc
sbb
xchg
mov
div
pusha
aaa
mov
dec
push
and
jbe
xchg
xor
jle
mov
lret
scas
lods
jns
push
inc
sbb
mov
out
pop
inc
cmp
pop
cmp
inc
das
cmp
mov
pushf
add
out
and
imul
test
and
mov
inc
mov
mov
sahf
pushf
jmp
cld
push
fisttpll
mov
data16
add
lcall
cmp
icebp
sbb
mov
xlat
sbb
xchg
shlb
test
ss
mov
int
enter
inc
scas
cs
shlb
mov
jl
mov
mov
inc
lock
gs
mov
gs
repnz
dec
push
jmp
ret
push
adc
adc
add
xchg
xchg
mov
loop
cmpsb
lahf
rol
cmp
pushf
adc
mov
push
add
lock
sahf
fs
dec
pop
lcall
ret
xor
xchg
cmp
add
std
fsubrp
in
xor
outsl
mov
adc
fisttpl
cmpsb
cmpsl
aad
xor
loopne
fadds
pusha
add
iret
fs
sbb
jge
xchg
inc
aam
outsl
clc
push
cli
icebp
call
mov
lock
sbb
mov
testl
pop
push
movsl
je
pop
outsl
insb
push
mov
pop
movsb
xor
idivl
lods
shrb
jo
xchg
jmp
outsb
sbb
push
insb
rcr
and
xchg
and
cmpsb
jne
and
dec
xchg
popa
xor
or
cmovl
enter
adc
lods
test
mov
sbb
or
lahf
addr16
jns
xchg
in
add
cltd
pop
mov
jmp
test
gs
adc
jl
pop
incb
out
mov
sub
gs
xlat
in
jb
mov
shlb
addr16
sub
not
inc
jge
inc
xchg
lock
ret
popf
cmp
scas
pop
ret
cli
jle
jle
rep
inc
in
push
sbb
dec
sub
out
repnz
mov
inc
lahf
push
not
lret
mov
mov
pop
inc
mov
sbb
lock
lods
adc
or
into
lret
sarb
mov
mov
ret
arpl
or
rsqrtps
sti
out
or
jle
dec
out
aad
cmpsb
sti
xchg
call
sahf
xor
push
xlat
ja
imul
outsb
int3
mov
sahf
jne
es
and
daa
lock
cs
or
xor
cltd
jns
pop
jnp
repnz
mov
sub
mov
cmp
js
xor
mov
sti
cmpsl
scas
arpl
adc
addl
in
cmp
inc
call
in
out
add
xor
jbe
mov
cli
xor
push
push
aaa
shll
cmp
test
mov
gs
dec
dec
mov
leave
stos
outsb
call
jbe
adc
pop
add
inc
pop
xchg
test
icebp
adc
ds
mov
aad
pop
xor
scas
jbe
add
fiadds
or
add
push
iret
jmp
mov
bound
popa
popl
xor
mov
aas
adc
aam
iret
xchg
shlb
jmp
push
movswl
dec
mov
in
cmp
shll
sahf
ds
in
cmpb
xor
xchg
imul
inc
out
aad
mov
inc
adc
xchg
insb
adc
mov
mov
mov
fldl
fnstcw
jae
scas
mov
sub
clc
rcrl
data16
ret
cmpsl
cmpsl
out
movsb
mov
xchg
push
jl
sbb
mov
and
sahf
mov
or
push
std
cmp
outsl
dec
sbb
mov
fcomps
cmp
add
gs
stos
sbbb
mov
jo
gs
pop
bound
push
loopne
add
push
or
outsl
inc
mov
imul
jbe
test
adc
loope
repz
push
popa
inc
insb
inc
mov
add
lods
rclb
sbb
cmp
adc
insl
or
and
pop
xchg
das
shl
call
push
add
out
lahf
repz
pop
sub
and
insl
push
test
sahf
fiadds
loop
unpckhps
push
stc
repz
in
pusha
ss
xor
inc
xor
xor
je
lcall
lds
mov
aaa
jnp
iret
out
test
push
mov
or
cltd
ret
cmc
push
and
cmpsl
and
lock
adc
push
inc
js
sarb
inc
lea
sbb
xchg
cmp
pop
push
mov
cwtl
std
push
xorb
outsl
sub
fidivrl
cltd
mov
mov
enter
test
loopne
aam
cs
gs
add
aam
or
xor
mov
call
cltd
das
adc
mov
add
sar
sbb
dec
lret
js
push
leave
adc
sarb
fistpll
add
aad
imul
sub
and
pop
lds
mov
push
sbb
repz
xchg
mov
adc
push
cmpsb
in
xchg
cmp
xchg
jg
fcmovnu
xor
jle
sbb
lds
sbb
inc
adc
js,pt
pop
cmp
mov
push
adc
dec
xlat
mov
in
pop
lret
xor
and
sti
in
cwtl
pavgb
dec
adc
into
push
mov
cmp
jmp
mov
jbe
jecxz
sarb
push
inc
mov
fsts
pop
or
and
push
rcll
xor
das
ret
mov
inc
push
xchg
mov
cltd
ret
idiv
fcoms
fwait
pop
push
int
shlb
les
and
dec
fwait
cmp
hlt
sub
cwtl
or
les
es
int
ficompl
pop
jno
adc
jl
and
xchg
sti
in
sahf
xor
xchg
add
aad
test
push
mov
mov
fists
fwait
icebp
sahf
adc
popf
xor
shll
ja
jne
jge
sbb
push
jb
dec
cmp
aaa
pop
mov
lahf
xor
xchg
inc
jge
and
js
ret
pop
xchg
in
cmp
aaa
sbb
mov
in
aam
or
aaa
mov
add
insl
add
mov
loope
cmp
inc
mov
call
fistpl
xor
xchg
mov
xor
sar
xchg
or
out
stos
sbb
dec
mov
ljmp
addr16
testl
aad
adc
das
stos
rdpmc
scas
inc
popa
mov
sub
bound
jns
fistps
xchg
insb
cmp
dec
xchg
enterw
es
js
jl
cmpsb
out
mov
mov
or
xchg
je
roll
push
or
lds
pushf
inc
push
fldt
xchg
add
mov
icebp
test
or
in
mov
xchg
jmp
shlb
jns
sub
sbbl
sbb
rol
jge
lods
outsb
pop
mov
mov
dec
xchg
pop
ret
mov
mov
sbb
in
mov
mov
xor
jne
ss
outsb
dec
mov
in
dec
loopne
mulb
xchg
cmp
roll
pusha
arpl
push
add
jp
jle
fstpl
cmpsb
dec
fldenv
cltd
imul
ds
jnp
xor
push
adc
or
xchg
in
bound
je
mov
mov
pop
sahf
jle
mov
inc
pop
xchg
jge
push
sub
push
jp
xor
into
sbb
mov
xor
xor
pop
cmp
ds
inc
int3
pop
dec
lock
orb
in
insl
cmp
jmp
subl
dec
mov
jno
int3
loop
insb
and
popa
pop
add
dec
pop
cmp
out
push
mov
push
sbb
decb
clc
jge
mov
out
pop
mov
mov
sbb
push
idiv
dec
in
or
pop
xor
shrb
pop
adc
aad
add
adc
push
mov
add
lcall
xchg
or
adc
test
iret
pop
add
push
mov
std
pop
je
out
jae
outsl
popf
repnz
arpl
ljmpw
mov
leave
pop
into
cltd
loop
in
push
movsb
lea
in
inc
outsl
sbb
or
and
and
cmp
push
push
dec
push
dec
imul
inc
xchg
and
mov
shrl
cmp
or
dec
stos
adc
rcrl
test
sarl
adc
add
stos
mov
pop
mov
ret
mov
dec
fistpll
scas
cmp
jl
std
cld
daa
mov
pusha
xchg
or
mov
loopnew
rclb
imul
shrb
xor
stos
sub
imulb
test
pop
xor
loopne
out
sub
mov
add
adc
pop
jle
push
enter
cmc
mov
out
test
bound
push
xor
pushf
jne
sbb
sbb
and
sub
fidivrl
mov
sahf
mov
dec
cltd
push
mov
inc
xchg
int3
cs
adc
sub
or
or
dec
xchg
xor
or
cmp
decb
mov
add
js
jnp
mov
sbb
out
test
ftst
ja
cli
popl
mov
jp
jbe
subl
jnp
sub
int3
push
sahf
sub
ficomps
mov
sub
xchg
movsb
in
mov
repz
mov
mov
push
cli
sub
add
arpl
fisubrl
loopne
pop
fistpll
mov
enter
repnz
cmp
je
push
sbb
dec
mov
fnstenv
inc
dec
jle
lret
lea
ds
xor
addr16
in
pop
xchg
jae
inc
aas
adc
cmpl
pop
push
xchg
dec
xchg
ss
std
leave
movsb
inc
rolb
aas
xor
lds
push
sub
and
adc
pop
mov
and
adc
fisttpl
mov
out
mov
sbb
xchg
inc
outsl
mov
cmp
mov
inc
mov
rdpmc
out
adc
scas
shl
inc
call
aad
iret
dec
xor
inc
aas
stos
jae
or
adc
ljmp
mov
mov
or
pop
jecxz
les
fcoml
jl
int
punpcklwd
jp
sub
fbstp
rcrb
adc
xchg
or
adc
adc
mov
mov
and
out
repnz
das
jbe
push
xchg
cli
xchg
cmp
jmp
fdivs
into
mov
or
pop
sti
jne
iret
scas
pop
push
clc
push
test
test
sbb
pop
lds
xchg
lret
imul
cmp
test
or
dec
xor
jle
aaa
pop
jns
and
test
jle
daa
xor
dec
adc
add
lret
xchg
ss
js
push
sub
xor
ljmp
mov
addr16
cltd
mov
and
jae
add
mov
cmpsb
call
mov
jns
cmp
push
add
push
dec
and
orl
add
idivl
out
pop
fldcw
mov
sub
dec
add
pop
dec
and
pop
jmp
clc
dec
or
movsb
xlat
pop
imul
jle
jbe
sbb
add
push
fistpll
sbb
cmpsl
fidivs
pop
cmp
test
jmp
lods
jge
dec
add
call
cwtl
cli
imull
mov
lret
dec
cwtl
jmp
pop
lds
xchg
ja
xchg
or
sub
int3
mov
ljmp
fcoml
mov
xchg
pop
std
xor
and
inc
test
xlat
cwtl
adcl
dec
aad
ret
add
ds
pop
pop
xchg
push
mov
mov
or
mov
adc
mov
sti
mov
cwtl
aas
clc
enter
fcoms
stc
sub
decb
pushf
dec
sarb
mov
jb
pusha
int3
sub
cmpsb
pop
outsl
ss
mov
xchg
rol
push
shlb
and
enter
mov
and
pop
daa
std
inc
push
std
or
das
lret
sub
lret
insb
cmpsb
loop
xchg
mov
dec
pop
out
or
cmpb
call
popf
ss
xor
push
lret
fbld
jecxz
inc
test
xchg
sub
sub
add
fimull
mov
in
andl
inc
ret
lcall
jbe
in
stc
fwait
ss
imul
cmp
sbb
pop
psubq
xlat
and
icebp
jle
and
in
imul
negb
dec
pop
in
or
adc
gs
enter
mov
pop
in
into
add
movsb
pop
fisubl
sti
outsl
loopne
lahf
mov
adc
adc
fiaddl
iret
in
or
out
inc
scas
and
lahf
pop
sub
push
lret
cwtl
mov
adc
pop
push
xchg
rcrb
rcrb
nop
rorb
mov
jne
xor
imul
out
jae
jmp
addr16
adc
nop
mov
mov
add
or
movsl
jnp
pop
add
add
mov
stos
cmp
dec
and
pop
inc
mov
sub
mov
pop
cmp
xor
out
pop
out
mov
addl
mov
or
sub
jno
push
add
call
sbb
mov
pop
mov
jl
jnp
adc
jns
mov
push
jb
scas
out
xor
sbb
sbb
cmp
dec
je,pt
jp
mov
push
push
mov
scas
or
popa
aaa
pushf
jl
pop
sbb
arpl
pop
mov
inc
xchg
adc
sarl
int
dec
cmp
icebp
mov
mov
daa
ljmp
aas
int
divl
adc
lret
or
jns
xchg
rolb
aaa
or
sarb
popa
sub
push
dec
jo
and
or
inc
mov
sar
cmp
movsb
pop
clc
jmp
ja
cmpl
push
dec
inc
shrb
popf
sti
jg
mov
dec
add
test
adc
sbb
pop
push
mov
dec
out
add
aas
xchg
xchg
jno
mov
mov
fs
push
adc
test
mov
push
mov
into
call
sbb
aaa
stos
dec
loop
data16
mov
outsb
fwait
and
std
sub
xor
sub
popf
add
or
cmp
lret
in
aaa
push
sub
ss
add
mov
fisubrs
xor
xchg
mov
mov
or
inc
lret
mov
jb
mov
push
outsl
fwait
bound
mov
incl
xchg
sti
call
or
xchg
cmp
mov
imul
and
xor
mov
xchg
insb
pop
mov
xor
in
inc
scas
mov
mov
std
in
fwait
pop
push
ror
adc
gs
mov
mov
xor
adc
mov
inc
sub
sub
pop
cmp
cmp
cld
add
sub
in
fwait
ds
mov
repz
int3
mov
jp
push
ss
xchg
pop
pop
sub
sub
pop
shlb
daa
mov
aaa
jmp
sbb
jno
ret
mov
jns
fldenv
mov
and
icebp
inc
mov
sbb
shl
inc
add
jbe
cmp
jmp
xchg
xchg
clc
movsl
or
ffreep
and
mov
cmp
add
mov
mov
fcomps
inc
fs
loopne
sbb
aaa
and
cmp
jns
lea
mov
bound
movsl
push
mov
and
or
mov
sbb
mov
sub
cmp
cmp
seta
or
mov
push
aaa
scas
mov
aad
mov
into
xor
inc
scas
test
ljmp
scas
cmp
out
push
inc
mov
jmp
out
dec
outsb
pop
negl
pop
push
push
popa
cmp
inc
mov
mov
enter
mov
cs
push
aas
fmull
cmpsl
sbb
dec
or
lods
call
subb
clc
xchg
push
cli
push
sbb
sbb
xor
ret
sbb
sub
das
xchg
aaa
xor
mov
pop
push
imul
or
les
outsb
dec
rcl
add
fbstp
inc
push
and
bound
test
into
icebp
push
sub
pop
jle
insb
mov
sub
cmp
and
loop
ret
jbe
stos
push
sbb
mov
jmp
sti
sub
ficoml
lock
lds
add
rcll
loope
pushf
adc
xor
in
adc
fwait
int3
pop
testl
add
mov
loop
pop
pop
push
in
cmpsl
jnp
fcmovnu
bound
ds
add
xchg
shll
das
rcll
test
mov
std
aad
push
ret
cmp
notl
and
or
clc
cmp
push
sbb
cmpsl
push
mov
mov
stos
scas
push
inc
mov
mov
mov
icebp
test
sbb
push
dec
push
call
mov
sbb
leave
push
sti
lret
shll
daa
popa
push
loop
and
aaa
pushf
pop
push
mov
sub
shl
divl
cmpsb
cmpsl
test
xorb
into
into
subb
adcb
cltd
push
xchg
xorb
jmp
or
xchg
ja
not
les
lret
and
xchg
js
dec
jg
mov
cmp
cmp
add
jae
and
cmp
dec
nop
rol
and
rcrl
mov
or
icebp
scas
mov
mov
pop
xchg
stos
add
rcrl
jp
stos
add
mov
bound
repz
mov
shrl
andnps
pusha
mov
cs
push
add
pop
or
cmpsl
dec
fbld
dec
ljmp
js
inc
rcr
mov
test
sub
jmp
jno
insl
insl
dec
shlb
loop
jno
aad
inc
dec
aam
push
cld
mov
loope
ret
inc
mov
sti
inc
dec
popf
cmp
clc
or
jmp
mov
test
aas
arpl
cltd
cli
adc
xchg
mov
fdivs
mov
leave
std
in
add
mov
xor
test
loop
push
ret
das
xor
data16
inc
rclb
mov
cmp
inc
inc
mov
mov
call
ss
roll
jg
xchg
mov
push
cltd
repnz
fisubl
lea
jmp
push
jnp
cmp
testb
push
lods
inc
lock
push
mov
dec
inc
mov
xchg
xchg
inc
hlt
mov
cwtl
jno
shll
in
shll
dec
cmc
jo
push
data16
xchg
cmpsl
fisubl
fldenv
adc
andl
xor
in
cs
in
lock
test
rclb
add
ror
lds
jmp
mov
cmp
push
push
cld
cmpsb
or
jp
std
jl
or
jmp
sub
mov
sarb
nop
jg
outsb
aaa
int
cmp
aad
pop
ja
jo
fstps
test
pop
fbstp
add
stc
ljmp
mov
cld
ljmp
std
cli
sbb
imul
adc
shll
adc
pop
ret
js,pn
pop
add
jne
push
scas
cltd
icebp
fists
in
adcb
mov
sbbl
in
daa
fidivl
mov
dec
lea
call
jmp
mov
sbb
shrb
iret
sbb
mov
fs
mov
pop
inc
mov
and
in
je
mov
xchg
mov
mov
sub
mov
adc
add
sahf
dec
rcr
and
stos
xchg
xor
sti
mov
js
jg
nop
nop
jno
mov
outsb
and
adc
lcall
imul
push
gs
push
sbb
out
sbbl
es
lock
mov
cwtl
bound
xchg
loopne
bound
jg
xchg
jp
adc
adc
movsl
cltd
in
xchg
adc
add
and
push
lods
loop
cmp
push
stc
enter
adc
add
mov
repz
popf
shlb
jmp
popf
jmp
sbb
pop
pop
cmpb
sub
cli
fmul
push
lods
pushf
das
cmp
cmp
push
mov
nop
shr
xor
outsl
dec
jno
xor
js
shrb
loope
cmc
sbb
push
loop
sti
push
adc
lcall
cmc
repz
cmp
fndisi(8087
or
jl
repnz
lds
scas
mov
cmp
adc
push
dec
popa
pop
lock
sbb
mov
xor
pop
pop
ljmp
push
cmp
mov
lahf
movsl
adc
push
imul
test
rolb
popa
sub
and
outsl
adc
cmpsl
xchg
jb
adc
sbb
repnz
and
setae
lcall
addr16
mov
adc
ret
ja
filds
jbe
sbb
mov
fs
cld
xchg
addl
mov
and
sbb
jcxz
pxor
and
insb
xchg
mov
lea
sbb
lret
pop
push
cmp
ja
push
sbb
xchg
push
and
pop
ret
loope
xchg
pop
jbe
hlt
mov
arpl
adc
rorb
mov
adc
cmpsb
mov
jmp
arpl
cld
cmp
dec
mov
daa
xor
fistl
add
popf
sbb
and
pusha
cmp
mov
out
push
cwtl
imul
es
xor
cld
mov
xor
jmp
cmpsb
fisubrs
mov
or
mov
movsb
divl
clc
pop
jl
pushf
xchg
adc
ror
mov
or
xor
mov
add
popf
mov
add
sub
scas
push
lcall
cltd
dec
inc
lds
mov
push
fwait
push
in
push
mov
adc
add
cs
loop
adc
add
stos
mov
push
ficompl
ss
enter
fldl
stc
dec
add
insl
xor
and
mov
clc
clc
sub
push
add
sbb
incl
xor
in
fmul
push
sub
jl
ds
cmpsl
adc
jo
mov
adc
in
xor
inc
cmp
js
sub
call
dec
dec
sbb
imul
shrl
cmpsb
lret
in
rolb
popf
cmc
xor
add
inc
ss
mov
dec
inc
pop
lcall
outsb
pop
pop
push
push
dec
xor
jecxz
ret
jle
mov
or
jge
int3
je
cmpsb
xchg
mov
sahf
ret
pushf
fcomps
loop
or
sub
and
jno
clc
iret
or
pusha
nop
arpl
xchg
mov
jb
dec
xchg
in
add
popf
fcmovu
and
xchg
jp
jg
or
push
bound
je
jge
sub
and
iret
les
xchg
gs
adc
pushf
xlat
xlat
test
dec
cmp
jg
icebp
mov
jnp
cld
fwait
psubusb
shl
sbb
or
int
adc
mov
cltd
mov
jmp
out
hlt
cmp
adcl
add
and
pop
jbe
xchg
int3
cmp
mov
scas
or
fidivrl
aam
lea
cwtl
and
adc
adc
inc
sub
push
cs
xchg
das
int
sub
out
outsl
or
andl
mov
imul
cmpsl
call
or
jge
rcr
repnz
dec
scas
or
stos
cli
mov
xor
repz
sbb
push
mov
add
pop
stc
inc
pop
bound
in
mov
xor
sbb
es
fdivr
cli
lds
jp
cmpsl
cmpb
mov
enter
popf
shl
insb
jae
nop
mov
inc
addl
push
cmp
jecxz
cmp
push
in
in
loope
dec
lret
xchg
adc
adc
xor
pop
int3
and
aad
dec
add
in
data16
and
mov
pop
aas
js
and
push
iret
mov
xor
scas
gs
push
insb
inc
lcall
lret
add
scas
movsb
std
imul
cs
pop
mov
and
pop
pop
test
testl
fnstsw
test
test
jbe
int3
or
icebp
inc
jp
in
mov
push
jnp
xchg
and
inc
aaa
add
incl
xchg
fldt
jno
push
fstl
mov
pop
or
icebp
lea
sbb
sub
mov
sahf
insb
scas
push
mov
insl
pusha
dec
and
cwtl
xchg
xchg
dec
pop
jl
pop
cmp
jo
lret
sub
cmp
push
cs
cmp
adc
dec
mov
ficomps
sbb
pop
add
dec
out
mov
add
fwait
mov
movsl
mov
or
sub
movsb
into
dec
lods
dec
daa
cmpsl
sahf
lret
imul
xchg
adc
ret
sub
ds
adc
int3
mov
dec
fistps
in
stc
ret
dec
ret
xor
outsl
xor
pop
lods
lea
popa
or
test
xor
insb
dec
add
xchg
imul
push
in
xchg
fcoms
jae
sub
mov
mov
jecxz
or
popf
arpl
mov
adc
jle
popa
fwait
push
sbb
insb
in
ljmp
mov
ret
leave
adc
icebp
push
data16
jns
push
pop
sar
cld
push
daa
jmp
mov
ficoml
adc
mov
call
mov
test
sub
leave
cltd
mov
shr
shr
xor
inc
sbb
or
and
sub
ret
add
mov
add
or
sbb
aam
scas
mov
lret
jne
adc
rorl
xor
iret
das
outsl
outsl
mov
mov
jae
sti
push
in
jl
jl
out
xchg
adc
xor
inc
test
xor
sti
add
enter
inc
mov
mov
dec
aad
sbb
cld
call
fcmovnb
jne
std
cmc
aad
dec
mov
cmp
in
push
int3
je
sbb
ljmp
aad
clc
cli
mov
cmp
jmp
mov
aaa
outsb
jg
push
das
scas
data16
mov
mov
subb
jmp
mov
nop
addl
stos
cmp
dec
dec
dec
jle
jmp
insl
fidivrs
jmp
enter
and
stos
daa
jno
xor
aas
xor
sti
ja
cli
adc
or
loopne
in
pop
mov
ret
loop
inc
mov
mov
mov
aam
movl
mov
push
rolb
and
push
icebp
lods
lds
pop
jmp
sbb
stos
and
inc
or
sub
push
ret
addr16
cmp
popf
das
lret
ret
inc
jge
add
outsl
int
or
xorb
iret
add
fcmovnu
fwait
mov
xchg
mov
ja
xchg
ret
out
mov
cltd
dec
pop
stc
inc
inc
jecxz
jo
sub
lcall
jg
mov
push
jns
in
cmp
dec
mov
sbb
jp
mov
neg
das
mov
shrl
mov
repnz
pop
pop
lcall
mov
out
hlt
fdiv
adc
pusha
jecxz
add
sub
adc
out
lret
ljmp
pop
xor
adc
cli
add
in
pop
jecxz
shll
sbb
mov
movb
sar
fwait
add
cmp
pop
dec
pop
sub
movsl
fsincos
jecxz
sub
inc
xorl
mov
fbstp
jl
decl
fcmovne
icebp
mov
xor
popa
mov
pop
add
pop
xchg
xor
cmp
mov
pop
divl
mov
in
outsb
int3
addr16
cmp
mov
sbb
sbb
xchg
adc
aam
xor
push
pop
or
clc
xchg
cmpsl
and
push
movsb
sub
sbb
repnz
pop
sbb
cmpsb
add
pop
hlt
dec
int3
lret
sbb
pop
or
and
mov
push
and
mov
jbe
or
jno
test
mov
fwait
imul
and
dec
shl
lret
push
pop
hlt
and
mov
fs
jecxz
push
pop
call
push
sub
and
mov
inc
jne
and
cmp
std
and
fmull
mov
dec
movsb
insl
xchg
xchg
jge
dec
insl
and
inc
mov
mov
xchg
in
pop
mov
scas
nop
les
jmp
cmpsb
push
int3
adc
dec
push
idivl
or
add
cmp
lock
es
mov
negb
xor
imul
jbe
mov
and
xchg
rolb
xor
pop
outsb
and
and
dec
xlat
jno
jge
outsl
mov
cmp
loopne
mov
imul
popf
divb
ret
out
lea
cmpsl
hlt
mov
push
pop
dec
ss
adc
push
jg
aam
test
xchg
hlt
push
cmp
dec
cmp
inc
out
fldln2
pop
adc
mov
jl
xchg
adc
jo
rcrb
adc
ja
jae
daa
rcrl
fdivs
outsb
sbb
pop
rclb
lahf
divl
clc
inc
push
xchg
emms
lods
popf
loope
in
mov
gs
xchg
iret
xchg
xchg
fdivrl
ljmp
inc
push
nop
in
test
mov
sub
inc
lods
jmp
lea
xchg
cmpsl
call
push
cmp
cmp
pop
push
mov
mov
loope
enter
jp
mov
mov
ret
or
cmp
stos
out
add
out
mov
and
sbb
push
sub
and
sub
fnstenv
mov
dec
test
mov
xor
and
push
or
add
arpl
ja
movsl
adc
les
mov
bound
xchg
sub
and
andl
dec
and
lock
adc
jnp
int3
sub
xlat
icebp
call
pushf
scas
pop
cwtl
fdivrl
push
jns
push
cmp
jmp
pop
lcall
dec
jl
stc
int3
fistl
jge
dec
mov
xor
js
and
dec
jne
jl
sbb
inc
xor
fists
stos
add
pop
push
mov
out
or
shrb
push
mov
out
cli
leave
fldl2t
push
sti
test
cmp
cmpsb
xchg
push
cmp
xor
push
subb
dec
outsl
mov
cs
rcrb
sub
dec
push
mov
fwait
pop
int3
mov
lock
pop
lods
pop
xlat
jno
dec
jnp
lds
sub
sbb
stos
mov
sub
ret
xor
call
push
iret
jge
popf
add
hlt
inc
or
mov
ja
mov
push
in
push
sbb
adc
test
adc
movsl
outsl
movsb
dec
mov
adc
ja
sub
jnp
jle
xor
pusha
movsb
add
fcompl
addb
fadds
inc
loope
aad
jp
clc
in
scas
cmp
lcall
loope
pop
fcoml
test
out
ljmp
adc
outsl
addr16
scas
mov
in
ljmp
sub
cmc
adc
inc
lret
mov
jne
inc
fadd
pop
mov
std
pop
and
jnp
popa
jo
xchg
loopne
cs
pop
out
pop
pusha
in
push
mov
movsl
jb
shrl
add
sar
aaa
inc
shl
adc
pop
mov
jnp
repz
mov
cli
lods
mov
mov
jbe
cltd
out
mov
mov
mov
out
fcmovnbe
push
test
insb
or
dec
cmp
pop
mov
mov
cmp
std
cmpsl
dec
bound
push
lods
lcall
and
bound
in
jp
jge
out
pop
jns
cmp
cmpsb
mov
mov
jp
dec
daa
test
lret
lods
inc
xor
stos
ja
in
or
push
fs
or
or
arpl
mov
jne
mov
repz
stc
popf
fists
jg
sbb
xor
ffreep
xor
inc
push
xchg
ret
cmp
int3
repz
and
call
xchg
adc
leave
inc
or
movsb
cli
cs
sub
add
leave
inc
std
push
cli
push
pop
loopne
inc
lahf
pop
sbb
push
mov
and
xchg
pusha
mov
cmc
xchg
dec
adc
data16
fisttps
aaa
xchg
cmc
sub
dec
ds
jne
xchg
pop
mov
mov
cmp
inc
push
out
xor
sub
jmp
call
adc
jmp
fs
jno
popf
in
popl
fs
je
std
sub
std
push
xor
dec
lcall
sbb
xchg
cmpsl
imul
out
mov
push
jle
xor
mov
add
sbb
cmpsb
jb
add
fsubrs
push
dec
inc
jp
stos
mov
loop
mov
jl
outsl
ret
daa
push
iret
inc
ja
repnz
jle
sub
lods
mov
out
les
adc
add
push
loope
pusha
push
lea
or
sbb
mov
pop
in
xchg
les
cmp
jns
or
loope
pop
imul
icebp
pop
int
adc
callw
scas
ret
in
mov
cld
fidivrl
xor
sub
call
popa
lock
inc
sub
cmp
out
cs
iret
fs
cltd
int3
pop
or
pop
aad
lahf
popf
cmp
repz
cmp
nop
mov
or
xlat
stos
or
pop
inc
sub
mov
in
outsb
test
sub
mov
xchg
insb
ret
loope
fdivl
shrl
adc
add
jne
fisubs
sub
cmp
stos
daa
push
adc
loopne
xchg
sbb
push
xor
call
mov
adc
arpl
out
stc
and
mov
or
xor
and
idivb
mov
jp
xor
adc
adc
sub
int
sub
add
mov
scas
and
dec
sbb
call
xchg
jmp
sub
adc
in
mov
out
or
and
fiaddl
fisttps
bound
imul
jns
push
stos
xchg
in
cmp
or
sbb
xchg
in
cmc
clc
test
xchg
pop
in
es
push
imul
lret
add
fistl
ds
rolb
fnstenv
cmp
jg
addr16
outsl
repz
push
add
pop
ror
test
jnp
cmp
test
lret
adcl
cmp
pop
push
or
aaa
xor
mov
adc
add
sub
jecxz
in
inc
in
pop
loopne
outsb
ljmp
arpl
mov
lahf
inc
pop
push
jbe
inc
mov
mov
cmpsb
into
inc
sbb
insl
mov
and
orl
lcall
sub
int
mov
dec
dec
dec
and
sbb
sub
mov
das
jo
dec
or
xlat
adc
pop
mov
and
fldcw
into
divb
data16
icebp
clc
mov
repnz
mov
jb
sbb
and
lahf
test
push
add
std
mov
add
sarb
sub
fdivrs
das
xorl
pop
push
rcll
and
addl
ds
in
lock
xor
fimull
jl
hlt
lods
push
out
aam
mov
addr16
shl
test
movsb
in
pop
lea
ds
insl
and
loope
xchg
dec
fcomps
imul
mov
jbe
jnp
cmp
sub
fwait
push
push
outsl
ljmp
in
es
fstpl
pop
push
orb
mov
ds
jnp
aam
cmp
mov
adc
test
xchg
push
lods
daa
sbb
mov
shll
in
movsb
mov
std
push
leave
add
roll
in
xor
je
add
push
aas
lock
mov
jle
jl
mov
jns
jp
lahf
fwait
xchg
or
push
push
mov
lret
sbbl
cmp
fbstp
xchg
dec
movsb
and
insb
sub
sahf
in
subl
push
repz
test
test
adc
and
out
sahf
js
rcr
rolb
mov
mov
jne
mov
insb
mov
cmp
xor
clc
mov
imul
cltd
mov
or
lock
stos
int3
jmp
call
mov
stc
and
add
xchg
cmpl
push
push
cmp
or
in
xchg
nop
outsl
daa
out
mov
jns
shll
sub
jg
fstpt
out
call
xchg
mov
dec
lret
bound
adc
and
pop
sahf
jne
pop
pop
mov
dec
out
pop
inc
scas
cmpsb
add
lods
es
sbb
mov
mov
pop
push
addr16
dec
add
add
orb
cmp
sbb
xor
mov
out
out
insb
or
inc
mov
lods
or
jmp
push
mov
mov
cmp
out
mov
or
lcall
jmp
jb
mov
xchg
leave
dec
jle
sbb
and
xchg
or
dec
cwtl
mov
mov
inc
jbe
xor
gs
xor
std
xor
xchg
sub
out
fcoml
pop
call
js
insb
cmp
cmp
stos
push
out
cmp
sbb
nop
mov
or
fnstsw
cmp
sahf
pop
stc
or
jns
xor
or
mov
jo
lock
pop
es
dec
and
stos
test
inc
sbb
fmuls
or
in
ss
xchg
movsl
arpl
cltd
rorb
into
or
inc
pop
xor
cmp
push
outsb
xchg
mov
leave
push
jge
mov
and
xlat
push
mov
stos
pop
mov
out
imul
test
es
inc
out
jbe
ficomps
push
lock
cld
add
mov
enter
or
xor
aad
cmpsl
push
jae
das
mov
push
dec
inc
jo
xchg
fchs
fsubl
ret
xchg
push
into
dec
jl
lods
mov
test
push
or
push
out
addr16
xchg
dec
stc
hlt
dec
out
pusha
adc
ljmp
jbe
sub
mov
fstpt
in
repz
mov
xchg
cld
adc
pop
xchg
test
dec
xchg
mov
mov
lock
std
sbb
ret
mov
sub
jmp
or
cmp
jns
xchg
jno
and
sahf
insl
das
mov
imul
xor
inc
frstor
jp
jae
ss
in
std
sub
xchg
icebp
cltd
cmp
negb
add
cmp
lds
insb
sub
cmpsl
mov
filds
andb
cltd
in
pop
cmc
sub
pushf
mov
and
or
mov
push
outsl
shr
sahf
mov
enter
pop
pop
dec
in
fcom
sbb
adc
cmp
lcall
test
out
sub
cmp
cmp
ljmp
jb
dec
add
jmp
and
jecxz
xor
jbe
in
xor
jmp
out
lds
outsl
out
scas
loope
movsl
jno
arpl
in
adc
xchg
jle
negl
lods
je
adc
mov
jno
stc
mov
and
mov
cmp
inc
and
test
fimull
pop
add
aas
sub
adc
sub
mov
fs
mov
inc
fmull
adc
cmpsl
leave
mov
std
mov
test
push
push
stos
lret
mov
cli
xor
xor
mov
dec
dec
aaa
aas
cmp
xlat
xchg
sbb
inc
cmp
cli
xchg
add
icebp
push
inc
xchg
jns
leave
je
pop
dec
cmpl
icebp
push
js
sbb
xchg
repnz
fdivrs
mov
lahf
and
inc
daa
jae
test
std
daa
fsubr
push
pop
dec
popa
jb
push
pop
sbb
xor
push
cmp
mov
cmp
add
sub
jle
jbe
dec
sub
fs
and
push
cwtl
test
jo
int3
popf
mov
pop
in
je
adc
idiv
dec
cltd
xchg
pushf
mov
sub
sub
sar
pop
cmpsb
sub
and
movsl
test
cmpsb
push
jbe
out
sub
and
repnz
test
mov
inc
shll
add
cli
lea
fcmovnbe
lret
pop
mov
sub
shl
shrb
xchg
insb
std
push
sti
add
jge
add
mov
in
hlt
scas
pop
mov
arpl
jl
sbb
orl
pop
xchg
out
cmp
gs
inc
or
fdivrs
and
out
ljmp
inc
bound
scas
add
mov
je
les
fxtract
sti
pop
gs
add
imul
out
jne
jmp
sub
xor
sbb
aad
push
sbb
aas
inc
mov
or
pop
dec
cli
xchg
out
test
adc
jecxz
cld
mov
jmp
push
negb
out
xor
pop
aas
test
sub
sti
pop
aas
mov
pop
enter
mov
cmpl
bound
or
pop
sbb
or
movsb
loop
lret
jl
popa
mov
push
in
movsb
inc
add
mov
loopne
dec
xor
outsl
and
push
jae
sbbl
xchg
testb
push
push
ss
jb
mov
pusha
std
cld
popf
add
xor
or
and
and
popf
call
lods
jbe
pop
jae
sub
in
jb
insb
sub
ljmp
push
fisubrs
or
jns
jb
mov
jne
mov
xor
xchg
pop
pusha
mov
mov
inc
inc
fbld
repnz
mov
inc
mov
push
int
leave
push
clc
fmul
mov
xchg
jg
gs
jg
mov
mov
cwtl
pop
or
pop
pop
jp
out
dec
mov
dec
jmp
mov
ss
and
xchg
repz
mov
push
sub
xlat
pop
movsl
das
into
sbb
enter
adc
sub
cwtl
pop
jbe
iret
sahf
aas
sbb
pop
mov
dec
mov
mov
sbb
pop
out
es
mov
in
jnp
arpl
fcompl
pop
in
fnstenv
push
test
flds
rolb
aam
xchg
adc
aaa
aad
fwait
push
mov
and
lods
and
out
scas
fdivl
ja
pop
push
and
pop
popa
and
in
jo
push
pop
inc
dec
nop
cs
movsl
sub
cltd
shr
mov
andl
dec
inc
mov
ret
cli
lock
aad
out
inc
cwtl
push
std
sub
sub
pop
outsl
shr
push
imul
jmp
cmpsb
mov
mov
xchg
xor
pop
pushf
adc
in
fidivrl
jp
stc
pop
sub
cmc
int3
ljmp
mov
inc
dec
jp
pushf
add
pop
mov
dec
sti
stos
es
fstpt
test
jp
dec
rcr
pop
inc
jmp
or
pop
ret
icebp
dec
lds
dec
rcll
cld
fmull
add
pop
cmpsl
mov
inc
lret
mov
stc
stos
xor
jo
je
inc
dec
xor
mov
mov
pop
push
push
adcl
or
mov
ds
sbbb
mov
mov
stc
or
mov
rorl
pushf
in
test
cmpl
addl
cmpsl
jg
pop
inc
in
lods
jmp
cmpsb
sbb
fcomps
push
xor
push
sahf
pop
lcall
mov
xchg
xor
pop
pop
test
jle
sub
int3
ss
inc
stos
xor
addr16
push
push
inc
mov
or
mov
ret
sbb
xchg
popa
inc
and
ret
xor
dec
push
subb
pop
push
lock
push
and
cwtl
and
mov
lods
xor
xchg
push
lret
sub
dec
pushf
xor
push
cmp
addl
fwait
adc
push
stos
push
lock
and
mov
pop
adc
jmp
aam
push
hlt
xchg
imul
add
iret
jmp
adcb
mov
pusha
iret
je
test
roll
sbb
es
push
xor
push
outsl
test
and
loop
mov
outsl
mov
out
orb
scas
insb
popf
sub
and
repnz
mov
bnd
mov
mov
jne
lock
xchg
cmc
sub
ret
add
push
push
jae
in
or
mov
push
add
mov
cmp
cld
sbb
mov
sub
jecxz
pop
sbb
pop
or
aad
cld
cmpsl
sbb
push
jno
xor
xlat
vmaxss
leave
add
das
mov
mov
cmp
pop
xchg
push
into
push
fcmovnbe
in
bound
daa
and
cmp
jle
test
and
and
sub
fwait
jmp
jno
gs
int
push
push
sub
test
outsb
or
xor
fistpll
mov
jp
les
fcoms
leave
mov
adc
cltd
push
jmp
lcall
inc
and
mov
orb
lahf
and
pop
test
push
ds
hlt
xchg
cmp
cs
clc
jne
leave
imul
mov
int
insb
pop
xor
xchg
sub
cmpsb
scas
imul
cmp
jmp
fcompl
xor
mov
sub
dec
pop
push
test
out
xchg
push
and
es
jb
pop
daa
sarl
aaa
int
pause
sub
or
mov
push
xor
fstpt
dec
adc
popa
jns
mov
iret
dec
testb
jl
xchg
cmp
inc
aad
out
push
es
in
rorl
daa
push
xor
test
movsb
adc
in
or
insl
stos
fwait
mov
sbb
rorl
sbb
pop
push
adc
mov
lcall
mov
pop
idivl
add
cmpb
lret
daa
mov
aaa
std
nop
xchg
pushf
dec
sub
and
lock
lret
ret
add
sarb
ss
cmpsl
insl
sahf
addr16
imul
or
mov
test
mov
add
fldenv
push
js
mov
jae
jmp
and
incb
and
dec
ss
push
addl
cmp
pop
iret
popf
pop
or
push
pop
mov
lea
push
rclb
pop
mov
call
shll
into
aaa
inc
outsl
mov
or
mov
jns
dec
cs
out
pushf
es
mov
loope
imulb
dec
pop
pop
shrb
icebp
sub
cmp
and
add
xchg
xchg
lods
leave
dec
jmp
mov
xchg
cmp
shl
add
arpl
clc
add
push
mov
dec
and
lods
sbb
pushf
jbe
mov
pop
cmpsb
popa
aaa
es
jnp
push
in
inc
jo
xchg
mov
or
lcall
stc
push
movsl
outsb
sti
sub
and
inc
mov
sbb
shll
das
adc
movsb
push
xchg
mov
gs
into
pusha
push
sub
sahf
mov
loopne
aaa
push
mov
cs
es
stc
out
cmc
in
pop
insl
clc
repz
mov
lds
not
les
nop
push
add
mov
mov
out
pop
mov
add
adc
lods
jle
and
jle
jno
cmp
sbb
xchg
sub
dec
enter
inc
in
hlt
sub
dec
xchg
int3
mov
push
sbb
cmp
push
push
jle
jmp
out
imul
push
les
push
cmpsl
inc
lret
in
fdivr
push
notb
xor
add
push
xchg
sbb
inc
ret
xchg
fxch
sbb
push
fcompl
out
sahf
sti
push
mov
adc
enter
subb
rep
mov
sbb
pusha
in
mov
dec
ficoml
fimull
cmp
out
cmpb
sbb
icebp
aam
imull
repnz
add
fwait
pop
and
lahf
bound
mov
dec
or
subb
mov
fisttpll
test
sbb
cmp
mov
inc
jp
int3
mov
or
jnp
xor
aaa
je
cli
cmp
and
and
dec
nop
shlb
cmp
jnp
push
or
cs
outsb
ljmp
jnp
dec
fwait
push
mov
js
les
in
addb
inc
gs
pusha
xlat
sub
adc
or
adc
xor
bound
push
jl
jp
out
iret
stos
mov
sub
in
mov
cltd
bound
xchg
fsts
jns
scas
lds
cwtl
mov
jb
outsl
inc
and
dec
xchg
js
loope
jmp
enter
lds
pop
pop
jns
mov
xchg
in
or
xor
or
js
mov
pop
xchg
rolb
mov
jno
js
jo
xchg
pop
stos
lods
jae
insb
pusha
movsl
test
les
stc
xor
bound
dec
mov
sbb
rcrb
fimull
xor
pop
scas
ljmp
xchg
mov
imul
mov
mov
add
jnp
daa
mov
neg
into
rcll
fsubl
adc
add
cld
popf
inc
int3
xor
jbe
out
dec
sbb
popf
insb
sub
pop
cmpb
jp
sub
lock
or
out
add
aas
fcmovnb
push
add
out
cmp
jmp
cmp
or
or
sub
shll
mov
adc
jne
dec
sub
push
inc
jmp
mov
shlb
push
push
push
movsw
add
sub
lods
arpl
or
sbb
and
repnz
mov
testl
repnz
xorl
push
push
jnp
adc
repnz
pop
adc
inc
inc
notb
jp
push
daa
gs
loop
lret
xchg
dec
int
pop
pop
cmp
cltd
ret
xchg
sti
push
push
loopne
test
sub
push
inc
sub
outsl
pushf
xchg
mov
test
jns
inc
lds
ret
loop
in
add
cmp
cmpsb
idivb
pop
in
jmp
pop
rol
ljmp
mov
ds
dec
inc
arpl
icebp
xor
pop
subl
mov
push
adc
pop
ja
adc
nop
gs
sub
lods
icebp
cmpsb
js
xchg
lods
fwait
js
adc
inc
and
lods
inc
xor
adc
sbb
cld
push
inc
mov
cmovo
das
dec
xchg
sbb
into
dec
shlb
movsl
adcl
mov
fiaddl
xor
aaa
xchg
loop
push
cmp
or
mov
mov
rcrl
mov
xor
push
and
mov
xchg
test
aad
test
repnz
sahf
pop
lret
repnz
mov
pop
ja
mov
pop
and
adc
fnstcw
insl
xchg
adc
sti
cmp
and
inc
movsb
insl
in
insb
mov
fnsave
cld
pop
scas
add
jmp
pop
dec
call
pop
insl
addl
or
imul
nop
fs
jo
jmp
xlat
cmpsb
add
pop
scas
int3
hlt
in
or
sbb
pop
inc
and
mov
enter
and
or
test
jbe
jno
rolb
stc
dec
mov
mov
sub
imul
in
out
pop
int
inc
fcom
iret
out
aam
xchg
jge
imul
adc
data16
xchg
xchg
mov
int
enter
int
lock
fidivl
or
or
pop
scas
dec
mov
inc
mov
mov
outsb
fs
loop
cmc
nop
xor
ss
bound
lods
test
mov
icebp
pop
lcall
or
inc
pop
aas
hlt
out
out
sbb
dec
xchg
or
xchg
mov
lcall
int3
into
sahf
or
cli
js
inc
push
and
js
arpl
fistps
cli
inc
mov
arpl
sti
sbb
pop
ficoms
mov
xchg
mov
jne
add
fisttpl
add
push
lahf
andl
arpl
std
fwait
lret
mov
bnd
iret
addr16
icebp
and
sahf
lret
jl
push
and
aas
test
lcall
test
jb
mov
and
xchg
scas
lds
ja
cmpsl
data16
or
sub
and
xchg
add
jp
jg
inc
mov
cmpsl
mov
sbb
addr16
cld
push
repnz
adc
sub
fdivr
pop
nop
sbb
pop
xor
mov
mov
rclb
push
inc
shrb
inc
push
adc
les
pop
mov
mov
in
leave
iret
fwait
scas
sub
sbb
testb
push
jecxz
ret
js
pop
sbb
cmc
xchg
mov
push
push
decl
dec
mov
shlb
icebp
outsl
dec
out
leave
adc
add
pop
repz
jae
mov
test
insb
sbb
mov
fcompl
cmpsl
dec
rorb
mov
lret
push
mull
je
mov
out
js
add
repnz
sbb
or
test
and
adc
cmc
push
sarl
outsb
xor
xchg
mov
rcrb
xor
das
mov
stos
jns
sbb
jge
jbe
cmp
dec
jg
sbb
mov
loope
cmp
cmp
sarl
popa
sbb
ds
xor
dec
test
add
adc
pop
imul
int3
add
movsb
jne
inc
fidivrl
fisttps
scas
ret
mov
cmpsb
dec
out
testb
dec
push
out
mov
mov
pop
push
mov
lods
ret
cmp
sahf
adc
mov
es
mov
cltd
call
mov
dec
in
sarb
arpl
ficompl
xchg
ljmp
clc
aad
repnz
cmc
jbe
scas
xchg
jp
das
test
in
or
add
push
jo
scas
sbbb
in
cmp
test
stos
mov
mov
xor
sarl
adc
ret
inc
int3
inc
xor
stos
dec
lahf
xchg
pop
mov
mov
repz
fsubs
pop
iret
pushf
stc
push
jecxz
int
mov
jecxz
jle
in
mov
push
cltd
jo
ja
aad
add
cmpsl
sbb
arpl
mov
cwtl
add
xchg
arpl
faddp
sub
in
jle
js
cmp
xlat
out
dec
mov
dec
sahf
int
mov
rcrb
pop
addl
push
pusha
mov
mov
addl
arpl
jmp
test
jnp
add
stos
mov
mov
addr16
push
xchg
mov
adc
in
mov
arpl
and
jl
andl
xor
adc
scas
xchg
es
dec
dec
jg
lods
in
jno
mov
outsl
arpl
loopne
pushf
mov
mov
cld
mov
in
mov
cli
movl
outsl
or
cmp
jnp
add
daa
xlat
repnz
stc
push
xchg
jb
ds
loop
mov
dec
or
sub
push
add
insl
mov
xchg
stos
mov
jae
test
int3
or
int3
rol
add
adc
rcrl
mov
push
xchg
shrb
jbe
add
xlat
or
testl
push
jp
mov
mov
and
pop
cwtl
call
mov
xorl
int3
je
push
std
int3
pop
jo
jae
jmp
push
lcall
test
rolb
or
pop
add
pushf
cmpsb
pop
inc
pop
lret
das
fs
call
cltd
xlat
aas
sub
jb
loope
adc
push
lods
idivb
sbb
fwait
stos
cld
or
mov
arpl
fiaddl
scas
out
inc
lea
aaa
aas
stc
jns
mov
push
mov
sahf
gs
mov
movsb
test
stos
dec
lods
pop
es
je
mov
xchg
add
cwtl
dec
in
jnp
pop
xchg
adc
and
rclb
sbb
imul
inc
popa
fucomip
sbb
pop
imulb
insl
rcll
cmp
mov
pop
or
add
xchg
jae
xor
add
xchg
and
dec
push
push
and
movsl
bound
or
sbb
or
or
das
push
jnp
inc
fdivrs
int
pop
inc
ror
dec
nop
es
adc
fwait
xchg
mov
jb
nop
lods
and
sub
cmpsb
sahf
sbb
arpl
push
ret
pop
adc
ficoms
cli
test
repnz
arpl
in
sahf
sbb
mov
xchg
sbb
sub
mov
in
mov
mov
inc
dec
mov
pop
pop
pop
mov
lods
cmc
mov
orb
push
push
popf
push
shll
adc
cwtd
stc
aaa
mov
fnstsw
xchg
bsr
out
fsubrl
push
mov
mov
ficomps
ret
add
cli
js
out
cmp
or
pop
fcmovne
sbb
cmp
enter
imull
repz
xchg
mov
or
inc
insb
test
jge
jp
dec
sbb
jle
stos
xorl
jmp
lret
loop
or
sti
lahf
lret
test
mov
psrad
mov
ljmp
sahf
xchg
dec
int3
and
clc
cli
imul
fmuls
jmp
or
data16
jge
bnd
ds
adc
jno
int3
xchg
scas
movsl
or
pop
mov
je
cmc
mov
gs
inc
ret
mov
popa
arpl
adc
ljmp
lds
sbb
pop
lods
cmpsl
mov
fstpt
xorl
pushf
push
icebp
jnp
xor
xor
lea
xchg
fsubs
pop
aam
std
push
xor
test
clc
stos
lret
fistps
imul
arpl
and
mov
cwtl
das
mov
push
or
mov
xchg
sahf
xlat
adc
pop
cmp
ret
ret
stc
add
pop
dec
mov
jno
add
cltd
mov
xlat
sbb
inc
xor
mov
idivb
inc
leave
jo
adc
int3
inc
inc
adc
pop
repz
jbe
push
ror
dec
jecxz
inc
stos
cmpsl
inc
push
lcall
or
or
mov
int
adc
push
lret
cld
nop
loop
out
inc
cmp
push
popf
imul
daa
stos
mov
pop
sub
push
addb
jp
out
adc
push
dec
data16
mov
or
faddl
cmp
sarl
shll
pop
jbe
sahf
xor
jecxz
in
mov
adc
test
and
adc
loopne
or
or
xorl
je
imul
inc
pop
cli
outsl
outsb
fidivrl
sahf
arpl
and
popf
add
add
enter
xlat
ljmp
std
stos
sub
in
jns
stc
and
adcb
ja
cmp
ljmp
mov
mov
aam
sbb
and
inc
and
mov
cs
sbb
loope
mov
daa
fisubs
std
mov
inc
mov
adc
shrb
push
shll
inc
jnp
sbb
mov
xlat
leave
adc
xchg
les
cmp
hlt
test
shl
mov
aam
xchg
arpl
xchg
xchg
icebp
das
js
roll
jae
enter
xchg
cli
push
jle
and
arpl
or
mov
popf
mov
mov
jo
rorl
adcl
sbb
mov
xchg
adcl
sub
cli
mov
push
xchg
pop
orb
inc
mov
pop
sub
out
jno
xor
jns
adc
mov
sbb
das
xchg
or
push
insl
jb
popa
les
cmp
mov
add
int3
movsb
xor
xorl
adc
lret
push
es
fcomi
leave
pop
add
daa
fbstp
js
or
icebp
push
daa
call
outsb
int3
loop
push
lret
inc
sub
lahf
mov
mov
fldt
dec
xchg
mov
xchg
jmp
cwtl
sbb
sbb
add
push
push
sbb
test
sub
xchg
pop
fwait
push
cmp
cld
and
jns
not
or
sbb
sub
mov
dec
or
cmp
aam
movsb
jno
outsb
adc
sbb
fadds
dec
mov
lret
xchg
fcmove
mov
sub
pop
test
iret
pusha
xor
pop
jle
mov
ficomps
fwait
ljmp
cmp
mov
push
orl
in
jo
xchg
sbb
push
adc
bound
mov
fidivs
push
popf
mov
xchg
repnz
fsubrs
outsl
in
int
jl
pop
jb
outsl
clc
iret
adc
aam
cmc
fwait
in
cmp
jl
mov
dec
cmp
inc
shl
loopne
das
pop
push
push
aad
adc
mov
mov
dec
sbbb
xor
dec
push
sub
xchg
mov
sbb
out
sub
cli
mov
test
nop
lret
pushf
mov
lret
push
or
addr16
push
mov
push
into
sbb
sub
xchg
cmp
dec
xchg
test
movsb
daa
ds
stos
push
xchg
test
sub
dec
push
sarl
ret
test
push
cmpsb
xor
xor
mov
insl
xor
cmc
xchg
mov
push
push
inc
adc
and
out
sysexit
push
and
fisubrs
add
cs
dec
cmp
outsl
in
fcoms
fisubrs
inc
push
mov
andb
fidivrs
clc
jecxz
mov
pop
sub
push
out
fcomps
or
pop
cmp
push
cs
jp
xchg
mov
xor
jmp
iret
adc
push
mov
and
dec
lods
lret
rcll
aaa
loope
xchg
xor
ja
adc
add
out
mov
jecxz
stos
int3
stc
xor
adc
stos
popa
jb
stos
push
fwait
jge
movsl
or
cli
divl
push
subb
fiaddl
adc
aaa
ds
add
mov
inc
fs
roll
pop
xlat
pop
sbb
pop
les
call
or
mov
imul
inc
xchg
inc
lock
push
ja
sub
adc
outsl
mov
push
scas
in
cwtl
int
aas
inc
xchg
repnz
out
orl
sub
xchg
xchg
jg
xchg
add
jl
add
add
int
pop
dec
scas
repnz
pop
pusha
mov
sbb
jns
push
add
je
insl
push
daa
pop
push
inc
in
pop
sub
shll
aad
inc
mov
sbb
rol
pop
test
ficoms
popa
lds
xchg
xor
sti
fbstp
jl
or
sbb
cmp
jns
pop
notb
adc
or
jg
dec
aam
sub
fsubs
jo
loopne
out
lods
bound
pop
jg
jb
jmp
and
adc
and
pop
xor
fcomps
into
shl
ret
nop
inc
imul
add
fisttps
popa
js
mov
mov
pop
popf
sbb
or
inc
shl
leave
add
mov
jecxz
and
jecxz
rclb
mov
push
mov
fs
mov
xorl
test
aaa
xchg
lods
out
pusha
in
xchg
fiaddl
imul
scas
cmp
inc
out
scas
cmpsb
stc
dec
jl
cmp
dec
xor
xchg
shll
movsb
xor
fdivs
popf
and
adc
jnp
and
stos
cltd
aaa
in
sub
cltd
out
fwait
sbb
add
cmc
jno,pt
mov
scas
pusha
xor
xchg
not
cltd
lcall
in
push
mov
icebp
insb
adc
lods
ds
mov
inc
fs
xchg
jecxz
jle
std
filds
ret
sti
clts
xor
cmp
popa
idivl
sarb
pop
or
pop
lods
mov
in
lret
add
xchg
in
pop
adc
push
pop
shl
jbe
push
iret
lods
pop
xchg
jno
jg
cmp
fdivs
push
clc
pop
leave
movl
sbb
jbe
test
xor
pushf
jge
push
push
add
jns
rorl
out
testb
dec
aaa
cmp
sti
scas
iret
fidivrl
and
inc
daa
sbb
xor
jb
add
push
test
dec
pop
cmp
maskmovq
idivl
jg
inc
xor
xchg
sub
clc
leave
fdivs
insb
mov
mov
adc
push
xchg
push
sub
nop
or
jmp
xchg
xlat
sbb
pop
cmp
cmpsb
jmp
jnp
mov
pop
lret
and
adc
sub
cmpsb
adc
lds
movb
cli
loope
inc
or
cwtl
cld
inc
push
mov
push
cmp
mov
das
or
js
lcall
jmp
aam
push
shlb
mov
in
add
pop
cmp
pop
mov
test
dec
div
outsb
enter
mov
adc
cli
push
scas
daa
sbb
sub
add
inc
lret
push
repz
jno
int
or
mov
dec
pop
sbb
push
ret
cmp
hlt
lret
je
jg
inc
mov
test
mov
mov
mov
jne
scas
call
mov
sub
iret
inc
aaa
ljmp
enter
push
cmp
pop
std
test
gs
out
sbb
push
sbb
dec
xchg
mov
adc
mov
push
movsb
imul
fiaddl
std
mov
and
push
jmp
push
cmpsl
jmp
cwtl
add
lods
mov
sub
sysexit
mov
inc
cmp
and
xorl
cmp
fdivr
lahf
data16
subl
pop
int
lret
inc
data16
aam
loope
iret
xchg
imull
mov
and
out
inc
sar
mov
push
push
adc
fadds
loope
push
scas
sub
fsubp
cmpsb
jp
pop
jae
xor
or
fwait
mov
jecxz
lds
mov
mov
xchg
xorl
decl
lret
dec
xorl
test
aam
ljmp
xchg
int
xchg
ret
popf
das
out
cmp
and
movsl
push
adc
xchg
jbe
mov
xor
mov
mov
je
shll
inc
ja
xor
xchg
xlat
add
dec
inc
dec
push
shlb
in
dec
xchg
sub
pop
or
xor
test
shrb
std
and
popa
fs
out
push
add
ss
dec
xchg
sbb
and
push
dec
push
mov
icebp
lret
xor
add
scas
jno
inc
push
add
outsb
mov
cmp
mov
xchg
xchg
aam
and
fildl
add
aas
mov
div
fistpl
mov
cmp
mov
and
push
std
pusha
std
int3
pop
inc
or
jns
mov
dec
loop
cmp
jno
pop
pop
loope
sub
xchg
push
jmp
repnz
mov
rorb
aad
and
ss
pop
cmp
cmp
rcl
add
adc
movsb
ljmp
mov
rorl
pop
cld
rcr
jl
sbb
mov
add
adc
xlat
mov
inc
pop
addl
imul
lods
xorl
jns
cltd
hlt
add
mov
mov
or
sub
cltd
int
mov
mov
loop,pt
push
jecxz
inc
lods
dec
mov
sub
inc
xchg
mov
andb
pusha
pop
repz
xchg
sbb
sbb
xchg
icebp
data16
jno
mov
in
sbbl
stc
pop
jbe
sbb
lahf
dec
push
je
sbbb
cltd
in
pop
add
bound
xchg
sbb
pop
fadds
fstl
pop
in
and
adc
imul
or
cmp
sahf
and
cld
push
sbb
and
and
mov
add
add
call
adc
sbb
push
es
or
and
insb
adc
fsubs
jb
push
daa
sbb
adc
stos
cs
fdivs
ja
int3
mov
push
aad
or
popa
ficompl
jnp
cltd
popf
push
icebp
ljmp
in
adc
and
imul
and
push
adc
mov
ja
adc
and
mov
cmpb
inc
nop
dec
jl
or
stc
lcall
test
rorl
in
pop
cmp
pop
call
and
scas
push
push
push
lea
sub
lcall
mov
jbe
cmpsl
add
cmp
cmc
mov
sbb
fldt
dec
out
movl
or
pop
push
scas
adc
push
xor
test
pop
push
sarb
imul
mov
xor
sbb
lret
push
test
icebp
clc
pop
dec
inc
xchg
daa
jp
call
add
dec
repz
push
push
mov
xor
cmp
ret
xchg
xor
cli
scas
add
ja
int
add
or
nop
sahf
pop
mov
dec
cld
jmp
scas
es
xchg
insb
vpextrd
add
cmp
nop
bswap
inc
dec
mov
xor
jmp
out
cwtl
les
mov
mov
pushf
inc
loop
pop
pop
lock
incb
inc
inc
mov
call
pop
add
mov
int
mov
popa
sub
inc
jno
ss
push
mov
mov
mov
mov
xor
js
sarb
jae
out
or
jne
jno
in
out
sub
ret
cmp
adc
loope
int3
lret
movsl
sub
pop
mov
add
ja
adc
pop
jno
push
mov
and
jl
dec
pop
pop
dec
pushf
loope
mov
jle
sub
repz
stos
dec
int
cmp
das
in
aam
in
repz
xor
jg
xchg
add
and
dec
aaa
out
rcl
cmp
push
push
rorl
inc
xor
test
stc
ds
dec
dec
fcoms
cld
insl
sbb
mov
jo,pt
aad
xor
pop
mov
and
pop
in
and
adc
pop
sub
std
insl
rcll
push
sub
ficoms
add
fistl
ret
outsl
ss
jbe
fdivl
pop
add
cmp
fisubl
stos
mov
push
dec
xlat
sub
inc
xchg
bnd
pushf
or
lock
add
shl
xor
inc
add
push
adc
ja
int3
push
in
cmp
pop
repnz
mov
push
pop
dec
or
faddl
mov
dec
inc
pushf
inc
mov
test
outsb
mov
jae
jbe
test
loop
insl
shll
mov
and
pushf
jno
les
test
sbb
cmp
aad
or
ja
sbb
cmpsl
adc
or
lcall
xchg
scas
pop
fs
ljmp
idivl
in
movsl
or
jo
hlt
cmp
and
xor
mov
mov
out
cmp
mov
add
sbb
mov
and
cld
int
jmp
xlat
add
mov
inc
or
add
xchg
jmp
lods
xor
sarb
add
stc
movl
pushf
js
movsb
addr16
pop
fnstenv
cmp
sbb
mov
pop
pop
cmp
hlt
sbbb
repnz
lods
jg
pop
mov
das
faddl
jmp
mov
xor
jae
or
cmpsl
pop
ret
in
sub
push
arpl
mov
inc
pop
or
shrl
or
mov
call
nop
outsb
in
popf
pop
sar
pop
mov
sub
outsl
mov
loope
pushf
fwait
addr16
inc
inc
cmp
xchg
test
xchg
sbb
xor
rorb
sub
test
mov
jno
mov
fmuls
push
ja
lret
pop
sbbb
xchg
inc
xchg
pushf
adc
js,pt
stc
xorl
sub
leave
in
and
push
push
movsb
lods
or
sub
push
push
sbb
lods
in
out
shll
sub
std
push
addr16
into
into
cmp
loope
sbb
push
scas
xor
push
jo
cmp
cwtl
ljmp
pusha
cmc
mov
xchg
cmp
out
je
push
mov
call
adc
inc
loope
mov
repnz
lods
addr16
in
push
lcall
mov
movsb
and
sbb
sub
stos
fstps
nop
lds
mov
xchg
iret
sbb
cld
inc
into
add
fstps
xor
xchg
sub
negl
xchg
and
imul
cmpsb
popa
push
push
scas
insl
test
xchg
pop
cltd
cld
or
mov
sub
mov
push
loope
xchg
jbe
push
pop
xchg
jns
icebp
ret
iret
add
les
mov
dec
je
popf
inc
and
out
jle
jne
lret
fdivr
lahf
pop
or
gs
lret
daa
insb
ret
push
ja
dec
dec
mov
aaa
loop
ljmp
and
cmp
std
mov
ret
xchg
aas
mov
aam
aad
lods
xor
outsb
lret
cmc
pop
mov
subl
outsb
cmp
outsb
es
inc
sbb
inc
inc
and
push
cltd
jne
adc
push
mov
push
xchg
aaa
lret
push
jno
mov
adc
outsb
jl
jle
stos
enter
adc
outsl
xor
ljmp
mov
fdivr
call
rorb
inc
pushf
popf
outsb
dec
not
scas
xchg
cltd
add
ret
rcll
dec
das
stos
jmp
std
jp
out
and
aaa
fwait
push
jb
cli
pop
mov
cli
je
out
mov
cmp
jecxz
lods
es
push
inc
add
std
orb
add
jno
jle
call
ret
lods
js
inc
and
stos
iret
lret
xor
push
pusha
popa
adc
lea
rol
jle
or
sbb
and
fwait
mov
sbb
fdivrl
dec
dec
stos
mov
cltd
push
pop
jne
add
inc
cmp
testb
pop
push
adc
and
push
inc
inc
xor
andl
adc
pop
imul
hlt
mulb
jle
or
mov
iret
mov
pop
repz
lcall
sub
mov
std
pop
into
aam
popa
lock
aas
cmpl
leave
in
mulb
test
jb
mov
add
push
push
aad
fwait
lahf
pop
adc
push
and
add
orl
xchg
aam
xchg
dec
jno
xchg
testb
and
jmp
sbb
dec
mov
mov
adc
pop
xchg
and
fsubp
cmp
fdivr
or
int3
sbb
jbe
ja
push
into
in
sarb
adc
int3
popf
negb
ret
fnstenv
in
xchg
jg
sbb
jno
xlat
inc
stos
cwtl
xchg
out
adcl
aas
fmul
lock
push
rcrl
gs
test
mov
mov
jecxz
out
mov
in
mov
test
xchg
mov
sar
jmp
leave
rcrl
cli
lcall
inc
in
sbb
jo
push
push
mov
jb
pop
mov
movsb
hlt
aaa
loope
push
jge
enter
xchg
push
das
xchg
pop
mov
fisttpl
jl
mov
lret
repz
adc
jns
mov
clc
sub
fnstsw
xor
mov
negl
dec
lods
jb
mov
shll
loop
mov
scas
insl
xchg
ljmp
dec
mov
cmc
or
in
outsl
xor
xchg
les
cld
lea
xor
lcall
clc
jecxz
fmul
dec
sti
xchg
lds
lods
sbb
imul
push
push
das
jbe
bnd
hlt
cmp
sbb
pop
mov
xchg
push
mov
xchg
ret
gs
sbb
test
test
es
cmp
pop
ja
xor
lea
push
jg
sti
dec
xchg
ljmp
and
add
outsl
in
sahf
imul
mov
stos
test
mov
sub
lods
and
cmpsb
insl
enter
ss
adc
mov
push
rorb
inc
jl
test
clc
mov
fimull
fdivrl
enter
roll
mov
jb
dec
ds
sbb
inc
int3
push
outsb
xor
pop
stos
xor
lahf
std
cltd
pop
mov
sahf
bound
pushf
push
xchg
add
xor
ljmp
push
test
jnp
clc
fisubrl
ret
xchg
xchg
shrl
and
jns
lea
imul
into
imul
sar
aaa
int
xor
arpl
testb
or
dec
jb,pn
inc
syscall
sbb
pusha
add
sub
jae
cwtl
or
cli
lods
mov
in
lock
and
divb
popf
dec
mov
mov
cmpl
lahf
jns
lea
jnp
out
or
inc
es
push
ret
fwait
popf
shrl
out
inc
adc
sub
pop
in
rolb
repz
sub
jg
ljmp
jl
jb
loope
pop
adc
inc
in
xor
add
cmp
cmp
pop
push
jb
mov
mov
loope
jb
pop
dec
adc
add
andl
xor
loope
add
mov
mov
mov
int
mov
sbb
mov
or
pop
repnz
daa
lahf
dec
inc
dec
cmp
xor
sbb
add
je
inc
js
push
mov
stos
into
sub
testb
dec
addr16
scas
cs
call
dec
mull
or
popa
add
push
mov
aam
sbb
std
adc
cmp
mov
dec
sbb
ja
mov
mov
xchg
jmp
cmp
dec
mov
pop
lods
adc
iret
adc
movsb
call
mov
cmpsb
es
pop
lcall
adc
inc
les
call
stos
or
xlat
loope
pop
cmp
adc
clc
mov
push
les
mov
shrl
mov
daa
and
xor
fwait
stos
stc
and
pop
mov
push
cmp
aam
insl
dec
pop
out
pushf
or
lods
mov
shrb
in
push
js
test
imull
dec
pusha
dec
je
pop
enter
push
push
sub
popf
pop
jl
jg
testl
mov
or
mov
push
lcall
mov
jnp
jmp
fnsave
ss
xchg
xchg
mov
lock
and
add
jecxz
ret
push
imul
in
sarl
ret
pop
xor
xchg
jp
cwtl
push
imul
mov
pop
shl
jp
or
inc
je
aaa
out
sarl
stos
mov
mov
mov
movsl
out
fiadds
mov
out
neg
add
mov
jge
out
lahf
repz
and
aaa
mov
outsl
mov
pop
xchg
xchg
out
sub
or
in
aaa
in
push
scas
lods
cmp
adc
cmp
jge
imul
sub
pop
fs
dec
hlt
cmp
or
push
push
jae
push
push
sub
xchg
mov
push
iret
xchg
popa
push
cmp
lcall
jp
push
cmp
sub
pop
mov
mov
inc
fcmovnu
pusha
ficomps
aam
mov
cli
jp
xor
movsb
filds
into
daa
adc
mov
outsb
sbb
hlt
call
adc
gs
popf
dec
mov
jmp
xor
mov
inc
xchg
ljmp
out
dec
sbb
les
ds
cltd
in
and
xchg
ljmp
cld
mov
jle
int3
push
or
dec
xor
and
dec
nop
hlt
hlt
cmp
fstl
xchg
in
ds
pop
fwait
push
inc
inc
cmc
push
popf
sbb
stos
sahf
loope
mov
mov
add
outsl
or
enter
push
daa
lcall
cmp
icebp
pop
jp
xchg
add
cltd
adc
lahf
mov
pop
rolb
mov
pop
and
outsl
pop
sbb
cmpsl
sub
push
xchg
xchg
sbb
jae
push
mov
in
cld
test
xchg
jp
or
push
lret
cmpsb
call
insl
or
scas
into
aas
rcrl
repz
xchg
mov
inc
repnz
jecxz
fwait
push
mov
nop
adc
mov
fs
test
mov
insl
sbb
xor
mov
mov
rcrl
std
xchg
and
das
je
fcoml
pushf
pusha
jae
dec
mov
divl
add
sub
iret
insl
int3
cmp
dec
and
add
stos
mov
repz
and
and
es
sub
dec
icebp
pop
stos
inc
pop
mov
dec
jns
jne
jbe
rcrb
scas
sti
mov
incl
xchg
movsl
add
add
es
test
test
xor
mov
ret
jg
push
mov
or
sbb
cs
les
mov
pop
push
inc
sbb
inc
loopne
jns
rcrb
ss
and
fdivl
mov
out
les
xchg
mov
mov
in
jnp
cs
insl
mov
cmp
sub
and
push
push
or
mov
and
sbb
mov
cld
data16
jg
dec
push
fadds
or
mov
xchg
pop
mov
xor
idivb
push
xchg
ret
lret
sbb
mov
aam
ret
sbb
inc
xchg
daa
stc
hlt
jb
dec
mov
jmp
in
cld
pop
push
into
loopne
out
lret
dec
movsw
jo
jne
dec
pop
in
iret
and
cld
push
std
rcl
add
mov
popf
xor
mov
sahf
ds
in
mov
test
test
xchg
lock
aad
rcrl
xor
mov
and
fs
shrd
rol
sbb
cmp
test
fidivl
sub
cmpsl
loopne
xchg
mov
jmp
push
sti
ljmp
push
fisubs
lods
push
push
pop
adc
sbb
jno
sbb
xor
add
inc
jne
cmp
add
data16
aaa
sub
outsl
dec
out
sarl
call
mov
cmp
adc
push
push
movsb
mov
cmpsb
mov
and
jg
scas
adc
or
popl
xor
aad
addr16
inc
fadds
sahf
sbb
mov
test
dec
pop
add
setge
and
sub
ret
loope
jns
cmp
outsb
and
pop
and
dec
cmp
int3
in
inc
fs
push
roll
mov
xchg
in
sub
insl
cmpsl
jle
and
sbb
mov
test
pushf
jg
dec
xor
shr
pop
aas
ret
lret
push
sti
jle
or
ds
and
inc
stos
fisttpl
sbb
mov
fsubl
cltd
out
mov
sbb
bound
pop
dec
cmp
outsl
aad
adc
adc
in
cmp
cld
adc
int
aas
in
pop
push
mov
fcmovb
loop
xchg
cmp
xor
jno
pop
int
int
mov
pop
mov
ss
out
pop
xor
sbb
push
faddp
cmp
sarl
add
mov
loopne
das
decb
mov
sarl
test
or
cmp
sub
cld
pop
nop
sti
clc
loopne
bound
lds
fcmovnu
or
cltd
imul
inc
sub
mov
out
sti
adc
rcll
aam
and
push
inc
fscale
sar
jle
cmp
call
lahf
inc
adc
inc
std
mov
xchg
mov
out
dec
sub
ficomps
dec
repz
sub
mov
push
inc
dec
or
lods
and
push
jb
stos
loopne
xchg
sbb
push
xchg
pop
repz
sbb
cmp
in
pop
loopne
cmp
daa
mov
in
addr16
fnstsw
notb
leave
jae
clc
add
or
push
imul
mov
mov
js
xchg
cmp
sub
rol
dec
add
push
ret
push
int3
scas
mov
clc
nop
and
test
lds
sahf
dec
mov
push
jmp
push
xchg
dec
dec
push
div
repz
cli
jle
cwtl
add
mov
or
mov
mov
lock
mov
jl
mov
pop
cmp
push
cli
stos
mov
sbb
sbb
aas
or
lahf
imul
mov
enter
dec
adc
out
test
test
sti
pop
sbb
push
js
mov
xor
push
pop
test
insl
out
jle
dec
inc
mov
inc
lret
pushf
inc
movsb
adc
ficoml
loope
fstpl
sub
and
mov
add
loop
push
addr16
jae
push
enter
jmp
cwtl
test
xchg
scas
jns
push
pop
std
ss
sahf
pop
xor
cmp
xor
adc
out
stos
daa
ja
mov
sub
inc
or
xorb
outsb
popa
mov
ret
mov
push
dec
dec
arpl
icebp
push
mov
pop
mov
or
daa
dec
xchg
lret
in
lret
fidivl
pusha
jne
insl
cltd
fstpt
arpl
xchg
mov
push
and
mov
mov
and
mov
fidivrs
mov
pop
jg
push
fldenv
mov
cmp
daa
sbb
out
ret
pop
stos
call
and
cmp
dec
or
cwtl
xor
pop
pop
adc
in
jo
xor
mov
push
testl
xlat
push
xchg
int3
push
mov
insl
nop
repnz
movsb
bound
mov
lret
rolb
xor
mov
lds
out
lret
push
cmp
faddl
jae
fdivr
fnstcw
std
movsl
cmp
mov
add
mov
mov
xchg
dec
loop
int3
les
into
mov
push
sbb
add
into
mov
jg
dec
jg
loope
and
push
loop
aas
popa
mov
inc
or
dec
enter
mov
mov
incl
xchg
xor
pop
and
sbb
dec
sub
sub
das
imul
cmp
lret
xor
std
lods
call
dec
out
test
push
repnz
add
jl
cmp
fs
xlat
movb
xchg
pop
cwtl
inc
incb
sbb
loopne
pusha
and
inc
cmp
inc
xchg
cli
fwait
jne
xor
mov
jmp
shll
clc
sbb
fisubs
or
popf
jbe
js
dec
mov
jne
sbb
mov
bnd
lret
mov
aaa
ljmp
mov
mov
xchg
movsl
adc
mov
push
dec
popa
push
mov
push
jns
cmp
add
xchg
dec
and
dec
sub
sub
push
stc
add
fsubl
sub
insl
cld
cs
ds
shlb
out
and
push
popf
mov
xchg
dec
pop
xchg
jns
cltd
xlat
leave
lret
mov
pop
test
push
leave
subl
push
push
jmp
daa
cld
jnp
xchg
std
pop
xor
mov
jp
cmpsl
jnp
and
adc
xlat
gs
xor
hlt
jns
daa
scas
dec
cwtl
adc
loopne
imul
cld
xor
in
rcrb
inc
out
xor
pop
ret
rolb
inc
jno
in
jnp
mov
mov
jae
pop
aaa
adc
cmp
in
incl
mov
fadd
cmpsl
cmp
out
mov
mov
xor
mov
push
xor
mov
leave
sbb
and
out
jne,pt
cmpsl
inc
mov
hlt
lock
lods
clc
and
and
cmp
dec
cmc
insl
pop
mul
sbb
mov
clc
mov
cmp
pop
popl
and
sbbl
adc
lret
scas
jp
adc
push
fldcw
cmp
push
push
inc
out
xchg
pop
jno
cmp
movsb
je
or
mov
lret
xlat
adc
mov
test
lds
rcl
jmp
cmpsb
mov
loopne
cld
push
mov
ds
lock
scas
or
stos
icebp
or
xor
mov
lods
test
loopne
jbe
lods
pop
jge
sub
js
pop
jp
mov
lret
mov
insl
setbe
lahf
ret
mov
push
cmpsb
aas
test
jge
es
xlat
aas
lods
mov
outsb
cmp
in
and
sarw
in
jbe
xor
xchg
sbb
sahf
int3
push
xchg
and
addr16
rcrb
loope
or
mov
shlb
push
sbb
pop
and
stos
out
xchg
xchg
mov
ljmp
dec
jno
ret
jno
movsb
int3
or
cmpsl
mov
rcrb
mov
call
out
jl
dec
adc
adc
xchg
mov
es
push
pop
jp
shll
loope
test
imul
in
outsl
jae
cmpsl
push
push
ljmp
rorb
cltd
les
sti
pop
fwait
adc
rolb
cltd
lds
sbb
fs
xchg
pop
add
scas
pusha
je
popa
and
mov
or
sub
xlat
cmc
enter
jecxz
fistl
gs
pusha
mov
fs
xchg
mov
pushf
pop
les
je
xchg
xlat
jle
adc
jne
push
aas
sbbl
aad
xchg
mov
adc
mov
cs
sarb
nop
nop
std
dec
adc
adc
std
imul
fiadds
insb
mov
dec
shr
mov
inc
in
sbb
mov
jp
andl
fildl
test
mov
decl
in
jle
jg
jecxz
pop
les
call
and
add
sarl
sbb
dec
or
sub
in
fcmove
xchg
repz
cmp
pop
jnp
imul
mov
pop
mov
xor
repz
fmull
lds
jb
push
mov
popa
jle
in
test
add
xchg
dec
dec
mov
ljmp
je
xchg
pop
ficoml
cmp
adc
inc
adc
and
aas
es
add
notl
idiv
push
and
in
sub
cmp
test
in
mov
inc
and
cmp
xor
jmp
ds
scas
ds
xor
jnp
sub
xor
sub
sbb
dec
cmp
mov
loope
dec
ret
out
sub
and
inc
inc
cmp
test
fstps
lret
imul
mov
push
inc
add
dec
cmpsl
insb
pop
jae
jo
jmp
sub
push
js
mov
xorl
fs
sbb
mov
pushf
push
xor
pop
mov
sbb
fcom
push
jp
les
int
cmpsl
add
ja
mov
xor
or
popf
xchg
lcall
sbb
mov
outsb
xor
jno
and
add
das
dec
sbb
into
out
mov
ret
cwtl
xorl
jbe
mov
sub
movsl
add
cmc
das
icebp
cmp
sbb
mov
movsb
and
xor
mov
filds
xor
aaa
inc
fs
push
inc
repz
mov
in
mov
pusha
out
shlb
or
mov
addl
stos
or
cli
in
mov
mov
pop
aad
push
jl
mov
xor
mov
pushf
fists
fsubr
pop
into
jb
mov
pusha
repnz
fsubrs
mov
add
jae
data16
enter
pop
lock
mov
jns
imul
push
pop
pop
push
repz
inc
test
or
push
mov
mov
fwait
mov
and
into
sub
jg
pop
sbb
inc
test
cmc
loopne
aad
gs
roll
addr16
out
lret
subl
mov
movsb
cli
mov
pop
mov
mov
or
sbb
sub
and
movsl
push
lcall
lea
cmp
shlb
cltd
push
out
das
push
pop
cmp
xlat
xlat
fidivs
popa
shlb
and
enter
dec
cmp
push
cmp
jmp
mov
sub
cli
inc
fwait
mov
or
call
icebp
repnz
shll
push
xchg
push
sbb
shrb
mov
fmuls
mov
pop
or
xchg
scas
pop
cmpl
arpl
and
les
inc
jl
shl
jmp
outsb
mov
scas
mov
jne
mov
mov
mov
pop
mov
sbb
xchg
repnz
sub
mov
xor
and
fs
pop
rcll
jl
nop
push
cli
inc
mov
push
xchg
je
mov
pop
outsb
ds
es
dec
adc
mov
mov
cmp
in
jns
add
dec
test
fucom
pop
lea
imul
jno
jle
jmp
mov
mov
mov
xchg
cmp
mov
iret
mov
das
inc
scas
test
in
jb
xor
int3
shll
cli
subl
lahf
ss
add
mull
cmp
loope
jg
roll
mov
stos
call
mov
push
aas
aam
mov
movsl
lret
sbbb
fidivs
int3
cmp
adc
push
std
lret
push
cwtl
stc
mov
test
mov
xlat
jle
fs
test
inc
repnz
das
cltd
and
or
pop
mov
enter
rcrb
negb
aam
mov
xchg
xchg
test
xchg
divb
cmp
enter
insb
adc
cld
bound
cmp
stc
push
lcall
dec
jg
lods
xchg
adc
icebp
imul
ret
call
mov
and
and
push
dec
jbe
ljmp
mov
jge
aaa
es
js
out
push
mov
push
cmpsb
xchg
inc
stos
add
out
icebp
dec
or
out
pushf
or
insb
testb
or
mov
loope
cltd
andl
sbb
in
jb
inc
xor
ljmp
xchg
fdivl
cmp
mov
jle
in
iret
imul
dec
pop
push
mov
inc
push
adc
faddl
sub
insl
sbb
pop
cmp
sbb
sbb
out
mov
aas
sub
ljmp
das
inc
fs
aad
lods
push
int
fwait
push
ljmp
pusha
sbb
push
xor
or
movsb
call
adc
mov
roll
movsl
fdiv
ljmp
lcall
jne
pop
push
fadd
or
pop
mov
push
lahf
jg
xchg
es
inc
psubsw
add
sub
push
sub
xchg
pop
subb
add
push
sbbb
aam
and
push
and
je
movsb
pop
mull
mov
testb
arpl
adc
push
sub
lret
fsubs
in
aaa
imul
outsl
jle
inc
fimull
sbb
mov
cmp
out
or
adc
lahf
sub
mov
decl
popl
fildll
pop
pop
lret
lea
js
push
repnz
pop
filds
or
and
push
pop
sbb
sbb
sbb
pop
cmp
jnp
lcall
ret
cmp
jl
hlt
push
mov
lret
or
mov
stc
sub
arpl
pop
adc
push
sub
lahf
insl
sub
sub
ss
repz
add
inc
jne
and
int
mov
lds
push
sub
inc
and
rolb
mov
iret
ret
jo
xchg
cs
adcl
repnz
and
jge
or
adc
jb
push
mov
out
xor
and
daa
jbe
cmc
mov
in
das
out
popf
rcl
sarl
cld
lcall
ss
xor
popf
and
push
ret
mov
push
xlat
or
stos
jp
repnz
or
and
cs
mov
mov
mov
fstpl
lret
stc
std
mov
push
daa
lret
fists
ds
sbb
or
jecxz
stc
jno
lea
popf
mov
add
lret
ret
insb
pop
lods
pusha
mov
cmp
fistl
xor
or
jmp
stc
sbb
sti
dec
testl
jbe
push
into
mov
dec
jg
inc
paddusw
dec
push
adc
xor
and
xor
lock
mov
call
cltd
subb
and
mov
std
pop
pop
and
xchg
fwait
sbb
dec
cmpsl
rcrb
repnz
sti
cld
sarb
or
push
sub
icebp
push
inc
icebp
mov
jne
lea
push
fdivs
push
xor
mov
fstps
adc
xchg
jl
pusha
or
iret
das
ret
cmp
insl
mov
insb
lds
push
int3
add
dec
jb
mov
sti
je
inc
dec
out
int3
mov
inc
ds
inc
js
inc
out
out
fistpll
jl
or
mov
pop
add
jmp
adc
std
imulb
jb
or
mov
sahf
pop
or
push
fistpl
aas
push
pop
or
pop
cmp
pop
pop
adc
mov
inc
inc
xchg
jb
mov
mov
lock
jecxz
insl
mov
and
dec
dec
js
testl
stc
outsb
xlat
data16
jl
fs
xchg
leave
pop
addr16
scas
mov
aad
pop
pop
das
add
inc
es
add
pop
lahf
test
sahf
dec
mov
push
xchg
bound
out
mov
mov
scas
into
xchg
push
scas
cs
rorl
cmc
das
sarl
cs
out
hlt
mov
das
fcmovne
out
loope
cmp
lock
pusha
out
mov
dec
push
in
add
inc
jecxz
pop
pop
pop
in
xor
mov
sbb
push
stos
jmp
cmc
loop
xchg
jp
enter
mov
push
xor
mov
shlb
popa
fisubrl
decb
cli
push
fidivrl
add
mov
sarl
insl
sarl
sbb
push
insl
add
mov
jnp
jae
pop
adc
daa
sbb
mov
popa
in
mov
mov
hlt
pop
xor
mov
lret
jae
shll
mov
xor
call
xchg
push
add
mov
mov
dec
ss
mov
mov
lock
push
xchg
in
ret
jno
pop
push
push
fisubrs
xor
inc
cmp
insl
jle
int3
pop
lahf
es
dec
mov
sbb
ss
int
ss
dec
int3
mov
push
std
mov
outsl
fldl
mov
idivl
adc
lahf
mov
lds
dec
repnz
pop
xor
push
pop
push
push
in
add
mov
lret
lea
xchg
jb
into
std
xchg
insl
insb
push
mov
mov
ja
sbb
dec
loop
dec
jp
lds
test
mov
iret
lods
sbb
rcrl
pusha
and
sbb
repz
inc
cmpsl
aam
cmpsb
jnp
hlt
cltd
std
inc
stos
push
sti
fldt
push
outsl
arpl
clc
xor
dec
repnz
xchg
imul
xchg
arpl
mov
into
idivb
mov
iret
scas
pusha
mov
popa
es
dec
adc
pop
and
add
and
les
loopne
shrl
mov
das
test
in
mov
push
cmpsl
xorb
dec
fucom
xchg
mov
lds
jge
shrb
jp
loop
add
push
push
pop
mov
negl
xor
fdivl
push
int3
out
cmpsb
pop
cmp
sbb
inc
repz
bound
and
int
mov
jbe
mov
shlb
sahf
loop
and
shlb
jecxz
pop
inc
jmp
xorb
jle
ljmp
mov
ret
repnz
or
fisubrl
pop
lock
lret
and
jecxz
xchg
movsb
jge
push
nop
push
sbb
and
mov
jmp
out
sahf
je
adc
lret
gs
push
jno
mov
mov
add
ja
das
jno
xchg
leave
push
testb
daa
or
gs
pop
add
hlt
add
aad
call
adc
jnp
sbbb
and
pop
int
dec
jle
adc
xchg
pop
cmp
sub
pusha
test
cmc
inc
adc
lret
fimull
gs
ds
mov
lods
stc
mov
jne
or
sub
jns
outsl
xchg
cmpsl
mov
aas
shll
jp
pop
test
stc
and
les
jecxz
scas
xchg
insb
jns
sbb
cli
cs
insl
inc
repz
sub
mov
das
adc
shr
ds
sbb
cmc
adc
mov
std
inc
adc
pop
imul
aas
jno
popa
jge
stc
pop
fwait
sahf
dec
ret
icebp
adc
xor
aaa
imul
rol
mov
sub
cwtl
mov
jb
or
fs
jae
mov
cli
lock
rcrb
or
xlat
dec
les
xchg
ljmp
pop
clc
xchg
cmpsl
dec
roll
lret
rorb
in
imul
mov
dec
adc
in
or
dec
enter
ror
lods
ja
call
in
or
xchg
mov
lods
ror
push
fiadds
mov
xchg
addr16
fldenv
adc
fstpt
call
inc
lahf
aas
out
out
and
js
bound
add
mov
pusha
xchg
mov
and
pop
call
leave
sbb
shrb
pop
shlb
int
outsb
or
scas
mov
jb
jmp
imul
fiadds
out
jbe
mov
daa
int
dec
out
adcl
sub
clc
or
aam
pop
lret
push
leave
jbe
es
add
lods
cmp
pop
dec
xor
cli
adc
pop
adc
fs
xchg
fisubl
inc
out
test
inc
aas
push
sbb
push
xlat
jno
lcall
push
rcrl
in
fxch
jg
scas
pop
jae
hlt
or
xchg
pop
pop
jle
int3
mov
adc
xor
lcall
xchg
push
aas
cmpsb
loope
and
push
xchg
icebp
adc
jge
xchg
jae
fcmovu
mov
enter
out
enter
fs
lret
les
mov
pop
jne
cld
movsl
xchg
push
xlat
mov
fcoms
pop
jge
mov
dec
xor
jo,pn
insl
cltd
mov
jmp
lods
rcl
add
pop
je
sbb
mov
mov
sub
push
xorb
daa
push
sarb
xor
loop
dec
mov
pop
xor
inc
jne
ljmp
sahf
clc
pop
cld
clc
xchg
jae,pt
dec
push
push
push
xor
int3
push
adc
pop
int3
in
cmc
and
aaa
shr
cs
sub
xor
scas
xorb
or
add
les
cltd
xchg
lods
mov
mov
insl
xor
cmp
push
cmp
jp
lock
popa
adc
and
stc
xor
mov
mov
mov
cmp
andl
or
pushf
int3
bound
sbb
lods
into
add
jl
popf
inc
push
jo
push
mov
cld
fwait
ret
loope
push
inc
icebp
cmp
jmp
rcl
fldcw
iret
imul
std
dec
xchg
je
jne
fdivl
xor
sub
js
lcall
fadds
jae
loope
sub
mov
mov
gs
mov
mov
aaa
negl
test
cmpsb
and
les
add
loopne
stos
les
push
push
vpunpckhqdq
fdivp
les
in
shl
aas
xchg
dec
out
in
xchg
bound
inc
lahf
or
mov
inc
pop
mov
mov
pusha
push
cmp
fidivl
jp
push
lret
push
int
loope
enter
xchg
bswap
sub
lea
jmp
fbstp
xchg
out
jmp
inc
jge
loop
sub
mov
sti
or
mov
adc
mov
mov
xor
and
out
lods
cmpb
nop
les
or
in
mov
aas
aaa
out
jmp
inc
and
adc
aad
shlb
adc
push
loop
leave
mov
mov
mov
aam
mov
sti
xchg
pushf
idivl
mov
jg
mulb
out
lret
pop
dec
mov
cli
scas
adc
mov
pop
ljmp
repz
insl
mov
sub
addr16
xor
into
lock
xor
or
dec
and
dec
rorl
jnp
in
int3
popa
xor
sub
imul
inc
add
dec
mov
std
lahf
adc
mov
insb
push
sti
jmp
jl
arpl
insb
lds
cmc
call
ja
imul
scas
rol
push
jmp
iret
loope
or
ss
flds
push
adc
cmpsb
xchg
mov
add
and
in
imull
or
sarl
pop
cwtl
inc
pushf
and
lret
andl
inc
adc
iret
cmpb
jnp
outsb
jbe
adcb
shlb
repz
les
push
pop
sbb
add
lret
repz
aaa
fmulp
mov
or
mov
add
nop
sub
jb
clc
lcall
or
inc
pop
dec
ret
or
fisttpl
and
into
cmpsl
js
lcall
addl
jb
sbb
pop
push
repz
inc
fisubrs
insl
mov
scas
dec
enter
addr16
iret
mov
outsl
inc
popf
stos
and
pushf
mov
cwtl
push
data16
mov
pop
mov
insl
hlt
in
pop
cmp
xchg
repz
add
int3
sbb
scas
outsl
mov
and
mov
leave
outsl
add
cmp
jge
sub
cmp
int3
fsubl
movsb
dec
shlb
and
cmpb
jle
fdivr
add
xchg
push
pop
sub
ds
cmp
jo
shrb
nop
rcrl
fcmove
or
xor
mov
and
pop
outsl
push
in
cwtl
std
les
xorl
cmp
mov
nop
mov
js
xor
push
jecxz
cmp
lods
inc
xchg
sbb
adc
mov
mov
inc
cmp
mov
pusha
dec
in
inc
fildll
lret
push
jnp
sahf
pop
imul
arpl
cmp
test
hlt
mov
lahf
xchg
cmpsb
mov
mov
mov
xor
and
repz
mov
xchg
cld
shll
cld
sub
and
pop
mov
iret
pop
fwait
mov
cld
shll
in
push
pop
cltd
popf
cmp
enter
jg
pushf
dec
jp
stos
lea
push
mov
rcrb
fsts
inc
ja
jmp
out
dec
lahf
push
mov
xchg
cmp
mov
mul
sbbl
orb
enter
inc
add
leave
fiaddl
enter
lcall
push
pop
aas
cmp
xchg
jne
mov
bnd
pop
mov
pop
xchg
into
mov
pop
lret
jae
mov
outsl
std
fldcw
int3
scas
jecxz
jb
je
xchg
pop
divb
pop
in
mov
in
dec
int3
dec
sbb
mov
push
mov
out
mov
or
dec
adc
xor
xchg
mov
iret
lock
into
int
sub
sbb
insl
jbe
cmp
aaa
sbb
xchg
cmp
cwtl
pop
sbb
dec
mov
fdivrp
pop
cmc
lahf
enter
pusha
fsts
and
mov
fs
pop
mov
fldenv
mov
jo
mov
movsb
out
lock
jnp
das
or
lret
shl
sahf
loop
addr16
outsl
imull
fyl2x
xor
push
push
out
pop
xchg
dec
mov
inc
pop
xchg
sub
add
int
inc
popf
fsubrl
pop
xor
push
mov
pop
jae
dec
mov
popf
dec
and
sub
out
repnz
icebp
in
mov
and
aas
call
adc
jmp
bound
lret
ja
sbb
sahf
fdivl
js
rcrb
push
adc
adc
jo
and
cmpb
orl
mov
rcl
push
adc
sbb
pop
cltd
push
sti
xor
inc
cld
pop
or
push
mov
jb
sarb
mov
inc
push
sub
mov
out
clc
fimull
or
adc
out
add
fstpl
fdiv
fadd
ud1
loop
test
shl
cmp
xor
mov
xchg
inc
jecxz
aas
push
dec
adc
and
inc
fadds
cltd
mov
adc
orl
pop
outsb
adc
pop
clc
cmp
std
inc
push
xor
xchg
pop
out
add
jb
je
sbb
data16
pop
bound
in
addr16
daa
or
ja
jns
je
inc
fcomps
or
aas
inc
inc
mov
sub
out
repz
loop
outsb
xchg
mov
in
xor
or
xchg
subb
jge
js
or
jecxz
shll
xchg
mov
xchg
dec
addb
fucomi
cltd
outsb
pop
cmpl
clc
call
int
push
test
stos
xchg
mov
cmpsb
jg
jmp
add
out
addr16
ret
jae
lds
addb
add
xor
mov
jne
outsl
jg
ficompl
dec
scas
ficoml
pop
movsb
mov
fstp
ficoml
into
leave
cmp
out
imul
and
pop
mov
or
pop
std
sti
fcmovb
xorl
out
imul
xorl
stos
lods
jbe
call
xchg
jbe
fnstsw
incl
rcrl
scas
adc
nop
lret
outsl
push
mov
ja
jl
or
and
xchg
adc
das
cwtl
mov
rcll
mov
push
std
out
ja
into
pushf
sub
mov
stc
jp
xchg
dec
fisubs
divl
ja
push
push
lods
shrb
orl
pop
sbb
xchg
cmp
dec
jmp
je
repz
pop
adc
cmp
lods
sub
adc
pop
push
push
call
cs
jo
mov
imul
loopne
sbb
xchg
enter
mov
cmp
fmul
jo
popf
gs
scas
aam
aas
mov
cmp
sbb
daa
sahf
adc
mov
test
fildll
fmull
repnz
pop
and
add
sub
inc
and
div
xor
xor
mov
cld
sub
idivb
out
pop
jo
adc
xchg
jae
mov
jg
fidivl
and
or
push
jne
loop
sbb
jns
insb
add
fimull
jae
inc
adc
mov
dec
insl
lds
inc
add
push
mov
repz
lods
adc
jle
push
jne
hlt
pop
cltd
out
or
jno
or
scas
push
push
dec
aas
call
stos
roll
outsb
adc
xor
fnsave
jge
fists
aam
push
cld
jo
inc
dec
aam
or
jno
lret
outsb
jo
fwait
mov
pop
push
cwtl
out
cmpsb
mov
sti
adc
aad
insb
inc
ja
mov
popa
add
sbb
sub
loopne
push
fdiv
call
std
sub
jle
cmp
outsb
jo
lret
in
out
mov
imul
lea
sbb
jge
xchg
js
mov
push
div
std
flds
jnp
sub
out
and
insb
addr16
mov
xchg
sub
jl
or
and
or
cmp
fmuls
xor
mov
rcr
jae
das
mov
imul
xor
jle
sub
inc
adc
mov
jne
jecxz
nop
inc
frstor
icebp
loop
xor
neg
punpckhwd
lods
pop
adc
lods
lods
pushf
push
or
cltd
setge
mov
in
mov
dec
fwait
jne
stos
mov
mov
jae
dec
filds
push
mov
das
es
and
inc
js
jns
ljmp
into
mov
and
mov
sbb
test
xlat
mov
xchg
pop
or
jl
jo
or
cmp
add
pushf
mov
cmc
dec
into
dec
xor
imul
jae
enter
xor
data16
and
pop
xlat
xor
jl
lock
pop
clc
push
pop
stos
and
pop
jno
mov
mov
push
add
mov
xchg
repnz
movsl
pop
out
rcr
xchg
mov
push
sbb
lahf
xor
in
fbstp
mov
adc
iret
cmp
test
adc
pop
mov
mov
mov
aaa
ja
sti
mov
bound
repz
jecxz
lcall
xchg
cmp
jg
bound
mov
inc
scas
insl
add
jo
aam
ljmp
cmpsl
test
outsl
and
pop
insb
mov
in
je
and
lret
mov
xor
insb
jae
in
xor
stos
dec
push
lea
lahf
scas
sbb
mov
sub
mov
or
das
dec
fdivl
mov
out
sbb
push
cmp
cmp
imul
and
dec
dec
sbb
pop
sub
sarb
cmpb
adc
mov
aas
jge
std
out
inc
mov
lret
pop
pop
test
adc
icebp
imul
inc
cmp
xor
pop
test
push
sbb
shll
jns
xchg
mov
aad
xchg
ficoml
es
dec
mov
dec
inc
fdivrl
scas
adc
nop
mov
scas
dec
push
das
xchg
je
jae
enter
sahf
or
cmp
ja
clc
or
mov
mov
xor
addr16
xchg
fucomi
pop
add
xchg
sbb
in
or
mov
js
aaa
les
out
dec
adc
ret
scas
xor
cmpsb
cmp
enter
xor
mov
or
std
outsb
inc
push
cmpsl
and
sub
xor
or
test
push
out
scas
xchg
jge
xor
sub
mov
ret
cld
loop
sub
pusha
das
push
lea
stos
pushf
pop
push
mov
push
sbb
xor
adc
mov
or
adc
mov
xorl
xor
in
js
sahf
loopne
xchg
dec
xchg
jnp
stos
inc
mov
push
jo
mov
xor
mov
mov
test
rorl
movd
insl
aad
pop
lahf
insl
cmp
xchg
dec
inc
loope
fmuls
sbb
clc
ficomps
push
dec
test
xchg
jo
into
push
inc
mov
popa
hlt
cmp
add
sub
std
mov
popf
bound
scas
stos
fldl
ds
shlb
xor
pushf
sub
dec
inc
sbb
test
test
add
lret
in
out
mov
mov
xorl
insl
mov
pop
fdivrs
js
pop
jp
pop
mov
notl
cmp
mov
fistps
lods
aas
fistpl
data16
sbb
or
jnp
out
lahf
out
sub
mov
push
sub
jno
loopne
cli
mov
push
cmp
or
or
xchg
mov
loop
mov
pop
enter
adc
andb
movsl
flds
nop
test
pushl
and
or
xlat
mov
outsl
js
mov
push
out
mov
pop
push
gs
pop
repz
mov
pop
ja
testb
xchg
or
cmp
and
insb
pop
call
fstps
fdivrl
pop
mov
js
dec
fdiv
mov
hlt
cltd
pop
adc
pop
mov
fidivl
aam
sub
test
lcall
scas
enter
ss
xchg
out
xor
push
shlb
in
adc
dec
out
cmpsl
jg
fisttps
inc
jne
pop
lret
lahf
ds
sbb
inc
xor
jle
sub
mov
lret
mov
outsl
test
out
push
fmul
xchg
jno
push
js
dec
stos
imul
dec
mov
jbe
push
mov
leave
and
aas
inc
pop
xchg
fcmovne
sub
insl
andb
dec
insl
insl
or
out
das
inc
jnp
mov
jbe
sarb
mov
es
out
jo
pushf
or
adc
lods
push
inc
push
stos
andl
dec
clc
ret
pop
enter
repnz
loop
and
push
pop
mov
movsl
or
movsl
inc
mov
push
inc
mov
xor
les
sbb
lret
mov
and
add
dec
xchg
xchg
je
outsl
sub
push
pop
insb
loopne
sub
inc
xor
mov
jg
subl
jge
xchg
pop
loop
inc
cmpsb
int
das
js
cmp
enter
std
sarl
iret
jns
jge
xchg
cli
mov
jecxz
iret
cld
or
mov
or
dec
icebp
stc
pop
xchg
cltd
stos
pop
cmp
shrl
lds
lret
repnz
jbe
push
adc
inc
jecxz
push
inc
cmp
int3
movsl
les
jg
sbb
mov
push
sub
jmp
sbb
or
fs
bound
int
dec
inc
scas
sbbb
movsb
popa
ret
add
cld
jl
mov
test
mov
shrl
rcr
out
pop
dec
pop
aam
les
push
xor
lret
lods
xchg
punpckhwd
push
and
mov
gs
sti
fisttpll
movsl
mov
ds
or
add
pop
inc
mov
sub
adc
pop
dec
out
add
jg
mov
push
lods
mov
mov
and
dec
cmpb
loop
jg
sub
ja
popl
pop
sbb
cs
pop
test
mov
xchg
jbe
sbb
sub
cmc
gs
sbb
pop
adc
jmp
add
bndldx
adc
enter
rol
add
loope
fisubrl
rclb
std
adcb
xor
setae
mov
add
in
fidivs
movsl
jo
pushf
adc
inc
inc
jle
or
aam
add
out
stos
mov
rorb
in
js
inc
push
push
imul
add
jne
mov
push
sbb
cmc
sbb
fstpt
jg
mov
in
in
mov
jmp
rep
sub
stos
mov
jnp
mov
pavgb
adc
cwtl
sub
enter
movsb
pop
sbb
push
inc
scas
mov
out
cli
cmp
data16
cmpsb
add
fldcw
cmpsl
jae
dec
subb
sti
addr16
ficoms
icebp
xchg
gs
shrl
mov
xadd
sbb
ja
xor
mov
mov
push
sti
push
fdivl
inc
xor
dec
or
test
lret
inc
arpl
std
daa
adc
ss
mov
jae
je
sti
iret
int3
shr
sbb
cmp
pop
inc
dec
cwtl
jne
pusha
pushf
adc
push
fldln2
ljmp
jg
mov
jmp
btr
jp
aam
sti
cmp
adcl
pop
cwtl
pop
ret
pop
ja
aad
cmp
aaa
int
out
subl
pop
mov
pop
add
mull
sub
cmp
mov
push
sub
xor
inc
cmp
or
pop
jbe
add
mov
dec
jne
or
ret
lods
inc
mov
ror
sub
cmp
push
sub
stc
mov
add
add
jge
inc
mov
xchg
nop
aas
shlb
sub
data16
mov
and
mov
test
les
shll
jno
sarl
je
pop
enter
xor
insb
iret
cmp
mov
jecxz
inc
les
in
mov
jecxz
pop
iret
pop
ret
push
hlt
sub
push
or
mov
mov
jge
pop
push
sahf
xor
repnz
jnp
push
dec
xchg
repz
dec
mov
aaa
sbb
inc
scas
sahf
std
fdivl
add
jae
or
push
scas
adc
cltd
mov
jge
imul
xchg
fsubl
pop
xor
add
pop
mov
outsb
or
push
test
push
subl
stos
pop
mov
test
cmc
lods
ret
xchg
push
sub
inc
stc
adc
test
shll
dec
mov
jl
dec
inc
xchg
repz
xchg
orb
lret
hlt
dec
cli
mov
clts
ret
inc
sahf
mov
mov
mov
loope
icebp
aas
mov
std
daa
or
pop
sub
jp
push
xor
inc
mov
mov
adc
lea
mov
outsl
lea
test
imul
into
notb
test
xor
fisubs
cmpsl
cmp
jns
cmpl
loope
sti
jns
cltd
fmull
lods
testb
and
mov
sbb
iret
divl
sbb
leave
cli
fstpt
in
shll
imul
jmp
xlat
jmp
fldl
ret
xchg
jns
jbe
jnp
pop
mov
ret
lock
lds
int3
push
stos
xor
add
xchg
cmp
sbb
mov
icebp
aam
xchg
pusha
jmp
popf
push
mov
mov
shlb
pop
outsl
add
loopne
or
cltd
leave
mov
dec
dec
lcall
push
inc
sbb
sub
imul
adc
cmpsl
sub
fsubs
out
xchg
jbe
jne
push
dec
push
js
xchg
adc
sbb
loope
xchg
ret
mov
xchg
int3
push
andl
in
add
add
addb
in
pop
shll
imul
icebp
mov
jnp
movsb
xchg
mov
mov
cltd
dec
push
mov
jno
jmp
mov
rclb
sahf
sbb
loope
mov
pop
mov
popf
les
mov
sbb
ljmp
mov
adc
mov
inc
or
ss
test
jge
cmpsl
mov
and
sub
cmp
mov
jge
jle
shlb
popa
mov
jmp
pop
cmc
sbb
mov
stos
inc
repz
add
push
addl
pop
mov
test
or
mov
jb
sub
push
cmp
aaa
mov
hlt
xchg
cli
cmp
in
pusha
mov
iret
jae
das
inc
push
xchg
sahf
lret
jg
cmp
out
and
insb
rorb
call
cmp
lahf
loop
in
pop
sbb
fcom
dec
pop
inc
iret
ffreep
pop
sub
cmp
cmp
mov
js
test
in
sub
mov
arpl
aas
movsb
arpl
add
sahf
in
xor
aas
sub
push
pop
xor
dec
push
jne
or
jo
popf
das
fidivrs
mov
xor
lcall
xlat
lods
pop
data16
test
ret
xor
xchg
mov
into
xor
xchg
jno
pop
fmuls
nop
jle
loope
mov
sub
aas
iret
jge
xor
xlat
out
sub
rcll
xorb
jbe
mov
xor
cmc
mov
out
adcl
xor
xchg
int
inc
ljmp
mov
pop
lahf
out
add
inc
in
pop
loope
mov
xchg
pop
mov
enter
in
out
out
sub
fnstsw
into
xchg
mov
mov
je
mov
daa
mov
mov
and
sbb
cmpsl
pop
fisttpll
sub
jmp
insb
ret
xor
or
es
adc
pop
push
fistps
outsl
in
add
loopne
sbb
arpl
and
inc
pop
in
aad
cmovns
inc
stc
or
outsb
ficoml
pop
repnz
lock
int3
mov
xchg
and
adcl
cmp
mov
xchg
or
ljmp
test
mov
jmp
add
out
stos
cwtl
sti
sbb
xorb
lret
lcall
cmpsb
orb
mov
pop
jae
pop
add
lret
cmpb
sbb
jge
pop
add
imul
mov
sbb
sub
jge
dec
lcall
outsl
popf
inc
xchg
insb
jo
ficoml
xor
fcomps
out
in
ret
jecxz
xorl
jmp
test
mov
imul
mov
xchg
sbb
and
xchg
cmp
xchg
lcall
popf
add
and
sub
jno
movsl
out
nop
aad
push
fistps
in
pop
push
inc
or
add
loopne
mov
addb
popa
or
xchg
fisubrs
into
test
daa
pextrw
sub
mov
mov
outsb
je
add
cmp
fdivs
jb
or
sbb
loop
xchg
ficoms
inc
rcll
fcmovu
adc
cmc
std
push
enter
test
jp
pushf
pop
fdivrl
sar
sbb
jge,pt
fcoms
cmp
or
int
sub
lds
xor
pop
enter
ljmp
inc
dec
aad
jmp
add
dec
sbb
mov
cmpsl
out
push
test
mov
cwtl
loop
lret
outsb
push
sub
dec
mov
jae
xor
xchg
or
andl
sbb
xor
push
leave
inc
loop
out
jb
inc
out
je
mov
pop
sub
mov
fsubs
test
insb
inc
pop
mov
mov
push
cmp
jle
cmpsb
test
push
pop
xchg
jmp
mov
nop
mov
pop
mov
or
test
push
lds
jecxz
jg
scas
movsb
or
pop
out
pop
add
push
js
cmpsb
cli
mov
lods
imul
popl
mov
ja
push
add
test
lret
rorb
int
mov
es
xor
push
pop
mov
insl
fwait
sub
add
mov
or
adc
sub
rol
sbb
cmp
sbb
or
and
add
sahf
push
repnz
adc
jbe
dec
dec
mov
cltd
xor
add
ret
sub
push
pusha
add
and
mov
addl
decl
icebp
push
add
mov
xchg
inc
cmc
pop
dec
jecxz
jp
lea
pusha
xor
xlat
dec
inc
dec
mov
fxch
scas
cwtl
jo
cmpsb
xchg
arpl
loop
jnp
adc
add
call
sarl
rolb
pop
imul
inc
in
inc
testl
arpl
cmp
sbb
pop
out
fdivrl
pop
ss
cmp
or
bnd
incl
jg
or
lahf
sub
sub
not
data16
test
dec
mov
jo
push
push
mov
stos
xor
mov
mov
pop
or
or
mov
ja
dec
je
out
add
cmc
dec
jge
fimuls
mov
or
or
pushf
fwait
andb
or
repnz
leave
arpl
or
jmp
adc
cld
xchg
cld
enter
pusha
aaa
push
jno
xchg
test
lods
shll
std
aam
xor
sub
sbb
xor
test
std
pop
test
stos
out
pop
xor
mov
mov
loope
add
aas
mov
arpl
xchg
dec
fidivs
push
sub
xchg
decb
or
sti
mov
ja
push
and
test
mov
shll
aaa
mov
gs
int
lods
push
mov
mov
lcall
outsl
movd
xchg
mov
inc
popf
add
pusha
and
shrl
xor
out
mov
mov
xor
mov
xchg
mov
add
sbb
sub
mov
xorb
ret
mov
sbb
lcall
loop
mov
fwait
popa
push
mov
dec
push
cltd
xor
out
out
and
aaa
dec
mov
test
add
sarb
add
cmc
das
pop
bound
dec
inc
xchg
jmp
inc
outsl
outsl
stos
aas
or
data16
push
jge,pt
xor
add
fs
sarb
lret
xchg
cmp
mov
adc
xor
and
lcall
xchg
out
pop
sub
mov
jp
js
icebp
fmulp
fldenv
xlat
jns
push
push
loop
ljmp
jl
out
sbb
mov
stc
leave
jge
push
lahf
and
ja
sub
fcoms
xchg
xchg
rcrb
nop
aaa
cmp
push
out
lods
call
inc
dec
sub
cwtl
mov
sbb
mov
outsl
jecxz
lock
and
inc
fiadds
into
jl
mov
frstor
rcrl
xchg
ja
nop
push
cltd
dec
mov
add
rorl
cs
icebp
mov
in
sbb
dec
ror
xlat
push
mov
mov
or
add
popa
dec
loope
cmp
mov
mov
sub
sub
out
aas
sahf
sbbl
ja
into
fdivl
es
dec
enter
fcoml
rorb
lcall
sbbb
data16
stos
mov
std
add
xchg
jp
lds
mov
inc
mov
or
rorb
ret
repz
mov
outsl
mov
insb
dec
mov
fnstsw
cmpsb
push
ja
or
jb
sbb
int
in
adc
push
movsb
hlt
pop
jmp
fadd
movsb
cmpsl
mov
jbe
shl
incb
mov
xchg
ret
inc
pushf
or
ja
jne
aad
lahf
mov
and
mov
cmp
outsl
sub
xlat
pop
lods
dec
out
xchg
fwait
pop
add
cmc
repnz
fmulp
xlat
mov
stos
cmp
pushf
scas
push
mov
sarb
lcall
pop
xor
push
xor
andl
and
nop
adc
popa
pop
insl
sub
xorl
shlb
ljmp
jl,pn
inc
add
add
xor
fdivrs
dec
lock
in
addr16
xor
dec
je
in
cli
gs
not
imul
mov
repnz
mov
and
push
shll
ret
adc
jno
sub
data16
xor
mov
mov
int3
xchg
orb
fst
inc
sub
add
jno
insb
jnp
and
mov
push
pop
or
jp
dec
flds
and
fisttpl
iret
sbb
pop
pop
pop
mov
dec
hlt
sahf
fs
outsl
lret
mov
lcall
test
fbld
adcl
mov
pop
daa
or
mov
xchg
and
add
nop
sbb
or
insl
cltd
dec
std
fs
mov
mov
and
ja
mov
xor
out
sbb
ljmp
mov
dec
rol
sbb
sti
and
pop
das
lea
lea
test
stos
or
daa
xchg
adc
gs
fisttpl
jge
xlat
rorb
dec
les
out
movsb
and
cli
movsb
add
test
xchg
mov
dec
test
aas
imul
notrack
out
or
pop
repnz
push
and
xchg
adc
cld
dec
inc
dec
repz
cmp
add
jbe
rclb
sbb
imul
movsb
xor
adc
xchg
add
imul
andb
dec
cli
rol
imul
into
cwtl
stos
aad
repz
inc
ret
and
inc
ja
out
add
nop
ljmp
sti
imul
push
mov
in
ss
pop
jle
and
popf
dec
cli
fstl
sbbl
subb
gs
test
mov
std
cmpsb
push
adc
pop
mov
or
negb
lcall
sub
add
sub
sti
fcmovu
pop
lds
movsb
popf
loop
pop
add
cmpsb
imul
rcr
pop
repnz
xor
jb
cli
outsl
fs
xlat
xor
xor
mov
and
jb
cmp
pop
les
cltd
sub
imul
mov
call
js
and
out
pop
inc
cmpsb
divb
pop
push
popa
hlt
or
jg
add
gs
test
popa
nop
and
sub
adc
popl
and
fs
or
rcrl
or
data16
cmp
ds
into
cmpsl
add
adc
lods
cs
in
mov
xchg
mov
mov
aas
daa
mov
or
in
mov
mov
shll
pop
pop
sarl
mov
int3
mov
mov
mov
loope
icebp
dec
pushf
nop
cmp
test
movsl
enter
ljmp
sub
aas
rorb
mov
dec
pop
arpl
mov
pop
cmp
in
rcrb
adc
loope
dec
adc
hlt
cwtl
shll
aas
ljmp
fisubrs
lahf
pop
aad
fstpt
fistl
or
iret
sub
arpl
or
jns
mov
lods
add
dec
fcmovb
in
jle
fcomip
fs
dec
xchg
mov
mov
and
movsl
jnp
in
test
mov
sbb
xchg
loopne
inc
fsubl
in
outsl
dec
sub
pop
cltd
scas
lcall
xorb
cs
roll
test
addr16
daa
in
vmovhpd
mov
push
fucom
neg
mov
pmulhuw
adc
test
subl
imul
push
jge
in
insb
jae
or
mov
sub
add
in
or
push
bnd
and
jle
push
inc
mov
pop
jo
into
mov
aas
test
mov
inc
cmpsb
movsb
jle
cwtl
xor
sbb
mov
push
cld
sti
in
and
insl
cmp
insb
loop
adc
xchg
insl
mov
mov
dec
mov
orb
jle
fbld
or
push
daa
push
push
std
lods
add
popf
call
or
cmp
jb
inc
sbb
xor
and
cmc
sarb
xchg
sub
fsubl
add
sub
imul
dec
imul
es
push
xor
stos
mov
pop
dec
out
clc
cmp
fwait
testb
add
mov
pop
loope
dec
mov
fucomi
ficoms
pop
scas
xor
jmp
mov
push
clc
sub
cli
pop
push
pop
xor
pop
adc
dec
and
sub
xchg
out
push
scas
in
pop
into
shll
jns
push
sbb
jge
dec
or
and
sbb
enter
test
mov
lcall
mov
leave
and
fimull
push
adc
sar
push
stc
das
out
push
xor
movsb
pop
aad
outsb
sbb
jne
xor
mov
rcrl
leave
lahf
aaa
gs
jmp
push
mov
popf
add
sub
lahf
sub
imul
mov
pop
cmp
std
pop
mov
add
clc
sub
sar
mov
cs
add
sbb
ret
push
add
lods
pop
in
punpckhbw
mov
cs
cmpb
cmpsb
pop
sbb
sub
dec
in
sbb
push
push
mov
in
aad
dec
loope
push
adc
push
aas
sbb
push
push
aam
loope
dec
arpl
push
dec
xor
cmpsb
mov
clc
outsb
pop
jge
lea
adc
loope
sub
xor
or
jmp
sbb
imul
cltd
mov
xchg
inc
out
cmp
lahf
rcll
jae
into
push
jp
dec
mov
push
add
sbb
fcoms
mov
jae
jbe
iret
pop
leave
pushf
and
xchg
outsb
rcrb
add
fsubrl
loop
popf
cmp
mov
iret
int3
incb
inc
fwait
push
cwtl
bound
fwait
sub
out
push
dec
dec
adc
frstor
inc
pslld
ss
or
fstpt
jmp
cmp
lea
jb
sub
insb
pop
in
sbbb
fdivrs
jge
mov
pop
xor
lahf
scas
push
lds
jmp
sub
jmp
bound
ds
mov
dec
sub
xchg
test
cltd
insb
pop
inc
mov
jmp
mov
sbb
stos
sub
or
mov
push
or
aas
int3
xor
mov
rcll
daa
sbb
and
sbb
sbbb
jle
mov
insl
sbb
or
mov
jae
dec
popa
cmp
mov
fdiv
dec
sbb
mov
testb
rolb
fidivrl
or
dec
fs
insl
ficoml
adc
sbb
pop
pop
int
call
mov
les
ljmp
or
pop
sub
push
es
cmp
xchg
les
test
mov
pop
aam
and
mov
fdivs
outsl
imul
adc
sbb
add
xchg
fwait
xor
push
mov
aaa
scas
mov
jnp
jl
roll
xchg
xchg
push
pop
sub
sub
xlat
aam
ljmp
mov
sahf
jle
icebp
push
cwtl
int
pop
mov
dec
lock
out
and
mov
or
imul
mov
add
cmp
rclb
sub
dec
inc
fcompl
fdivl
pop
push
push
xchg
and
adc
inc
lahf
or
sahf
and
pop
mov
xor
movsb
pushf
in
inc
or
out
andb
cmp
sbb
jle
fisubrs
aas
lock
gs
xchg
or
push
cmp
cli
push
je
mov
push
adc
mov
sbb
pop
cmp
fisubl
inc
stc
mov
jge
ret
mov
mov
sub
sub
inc
jno
jo
leave
cmpsl
sbb
mov
std
ret
popf
arpl
inc
outsb
lcall
mov
fsubp
sbb
sub
cmp
cs
mov
inc
stos
arpl
xor
mov
test
push
push
jo
jge
and
fs
fldcw
mov
imul
xchg
imul
cmovg
jne
sub
clc
scas
pop
sbb
xor
jbe
fisttpl
jp
cmpsb
xor
or
mov
xchg
ss
pop
mov
jecxz
xchg
aaa
stc
cli
out
mov
xor
xchg
mov
incl
pop
in
in
shrl
sahf
mov
push
aaa
add
dec
push
out
and
lcall
xor
mov
xor
sti
rcrb
jg
rcrl
test
mov
rorb
xor
sbb
pop
mulb
and
sti
jg
popf
lods
fstl
mov
outsl
cmp
arpl
call
into
sub
dec
pop
mov
nop
fwait
mov
inc
in
outsl
pop
fadds
aaa
inc
xchg
enter
add
pop
mov
sub
and
testl
das
push
cmp
imul
xchg
jecxz
or
xchg
loope
adc
mov
mov
mov
mov
aaa
adc
push
jb
lods
lea
pop
inc
xor
test
ljmp
mov
push
movsl
imul
fimull
mov
push
mov
andl
xchg
xchg
cs
fmull
dec
fdivrs
repz
inc
aam
sahf
hlt
rorb
xor
dec
inc
inc
popf
adc
dec
adc
nop
sbb
repz
add
cmp
mov
xchg
mov
inc
test
stc
xor
push
sbbb
fwait
push
xor
adc
xchg
xor
lods
dec
dec
mov
add
stc
aaa
scas
jb
dec
test
mov
sbb
and
into
pop
jne
sub
into
xchg
dec
in
andl
les
mov
sub
mov
pop
sub
mov
sbb
fbld
push
add
push
dec
sub
inc
jmp
push
lret
sahf
xor
push
xor
jo
mov
adc
cwtl
mov
xchg
inc
insb
and
jge
sbbb
adc
push
lods
adc
and
test
pop
dec
nop
repz
add
lret
decb
mov
push
mov
and
mov
clc
and
lret
outsl
push
push
inc
mov
repz
push
sub
nop
fildll
or
jo
xchg
adc
outsb
add
fiadds
rorb
ret
dec
loop
add
push
lods
lcall
push
shlb
push
out
and
mov
fistl
inc
jle
cwtl
jp
sti
fsubs
add
pop
rclb
pushf
insb
push
mov
xchg
push
push
dec
imul
add
insb
adc
dec
push
aas
or
ret
mov
mov
mov
cmpsb
gs
push
lods
jg
push
push
iret
repnz
xor
xor
xor
shll
addl
mov
sub
iret
fsub
adc
jl
pop
jne
enter
xlat
add
js
pop
nop
push
hlt
jmp
cli
flds
leave
les
outsb
arpl
fistl
and
xor
xchg
jbe
xor
jno
jg
or
mov
pop
mov
mov
mov
loopne
mov
cwtl
enter
ficoml
inc
mov
pop
into
inc
xlat
insb
lea
xchg
stc
into
mov
fdiv
mov
fwait
xlat
jno
xchg
notl
push
xorl
icebp
mov
push
call
xlat
push
push
jns
xchg
lahf
pop
ret
or
and
fnstsw
xlat
cmp
push
sub
mov
mov
add
arpl
cwtl
mov
aas
inc
jae
xorl
scas
pop
and
mov
xchg
xchg
mov
dec
or
mov
stos
mov
aam
hlt
addr16
jno
int
jb
loopne
sub
ljmp
mov
pusha
je
movsb
lea
jb
inc
scas
imul
arpl
xchg
call
inc
scas
fs
add
in
in
xchg
cltd
cmp
fsubrl
adc
push
inc
pop
arpl
sub
or
mov
cmp
sti
add
pop
insl
dec
out
cmp
mov
mov
div
and
add
push
sahf
jo
push
cld
mov
push
call
test
lods
and
fcoml
jns
jb
js
icebp
test
std
inc
fsubl
dec
jno
add
arpl
lret
jg
mov
sbb
mov
out
push
xchg
into
xchg
lea
cwtl
cmpsb
mov
jae
lds
xchg
cmp
jnp
jne
lods
xor
xchg
fstl
hlt
and
test
rol
pop
fs
push
inc
sub
int
cmp
sub
ret
sub
sbbb
pop
cmp
cld
mov
adc
xor
or
push
xor
popa
js
inc
cltd
pop
mov
sar
jne
daa
aam
jle
aad
nop
sbb
fidivrs
test
fistps
je
ret
sub
xor
insl
jbe
lock
xor
pop
push
or
xchg
xor
movaps
jns
popa
sub
pop
mov
mov
mov
mov
andb
in
push
mov
add
or
clc
push
mov
iret
imul
pop
inc
not
push
repnz
aaa
and
test
stos
jmp
sahf
dec
aaa
fdivrl
jp
lods
repz
push
lret
xchg
mov
mov
cmc
xchg
mov
and
and
test
gs
sbb
or
ljmp
mov
ja
out
xorl
inc
or
pop
call
sub
and
push
adc
scas
or
cs
adc
lods
pop
testb
push
cwtl
jbe
les
or
out
rcll
xchg
imul
jecxz
mov
out
sub
sub
add
or
das
mov
negl
idivb
adc
xchg
test
dec
stc
xchg
cmp
ffreep
cli
icebp
subb
test
cmpb
add
pop
insl
adc
pop
mov
mov
sub
test
clc
xor
xchg
adc
testb
sbb
xor
cmp
cld
add
mov
iret
in
or
pop
dec
mov
rolb
enter
jmp
aam
ret
xor
xchg
jmp
loopne
test
jnp
add
inc
sbb
scas
gs
mov
xchg
addr16
or
subb
addr16
stc
orb
dec
test
mov
push
out
es
clc
sti
cmp
int
icebp
je
gs
jp
in
in
gs
mov
shlb
mov
jmp
cltd
sub
sbb
lods
loop
xor
test
mov
xchg
ljmp
pop
int
inc
and
and
mov
shrl
mov
out
xchg
jecxz
xor
inc
jns
jg
adc
jno
mov
fbstp
or
inc
cmp
inc
push
pop
mov
inc
leave
in
sbb
popa
loope
xor
cmp
push
lods
push
enter
clc
cwtl
lods
sti
aas
sub
inc
xor
stos
inc
cmp
adc
imul
arpl
outsl
push
scas
movsl
or
and
cmc
repz
cmp
mov
mov
imul
xchg
jmp
inc
not
in
mov
cmp
ffreep
sub
jmp
dec
not
arpl
jg
negl
leave
outsl
jmp
jg
sub
push
adc
clc
xchg
loop
loop
pop
insl
outsb
lds
sub
or
imul
movsb
jp
bound
mov
mov
imulb
ret
push
cmp
mov
jmp
aaa
push
xchg
fadds
jl
hlt
pop
repz
adc
daa
mov
shll
sti
pop
dec
loope
mov
xchg
xchg
xchg
or
jnp
addr16
or
mov
loopne
aad
push
dec
sbb
fcoms
imul
jg
sbb
mov
mov
iret
mov
in
cmpb
lahf
bound
aas
and
add
mov
push
xor
mov
stc
xor
dec
cmp
dec
stc
lock
sti
pop
in
sub
mov
dec
xor
mov
push
jae
pop
jbe
sbb
clc
jge
mov
pusha
cs
movb
out
mov
test
and
cwtl
les
int
in
lock
outsb
or
imul
and
in
jns
lds
call
sbb
int
outsb
rorl
jle
xor
xchg
push
out
lds
dec
jae
xchg
mov
xchg
mov
adc
fs
mov
xchg
xor
inc
mov
pusha
icebp
sub
sbb
or
jle
shr
inc
mov
sbb
imulb
inc
loopne
fnstenv
mov
add
int
dec
inc
and
imul
loopne
pusha
mov
hlt
xor
shl
xor
sub
shlb
outsb
lcall
pushf
adc
mov
dec
xor
pop
sub
mov
dec
cmp
pop
xchg
xor
pop
cmp
notl
jp
test
mov
cmp
xorb
cld
add
ss
imul
add
xchg
xchg
shlb
cmp
fucomi
jo
jle
test
add
es
lea
clc
loopne
push
pop
cwtl
inc
mov
xlat
test
pusha
hlt
aam
xchg
xchg
adc
lods
mov
int
jmp
in
cmp
jg
push
aaa
mov
adc
pusha
dec
or
jmp
fsts
mov
iret
inc
sarb
mov
inc
pop
arpl
mov
movsl
adcb
popa
push
mov
sarl
mov
leave
or
loopne
bound
sub
sar
pop
sub
sbb
inc
dec
in
adc
lods
cld
test
aad
mov
mov
jnp
ficoml
mov
dec
push
pop
push
mov
aaa
cmp
das
mov
arpl
test
cmp
imul
xor
into
push
or
sbb
addr16
push
rorl
subl
popf
or
movsl
jecxz
mov
add
cmp
div
inc
fldl
inc
divb
in
sbb
out
lret
cmc
popa
insb
pop
cmpsb
mov
stos
ss
sub
jo
das
sti
sub
mov
andl
stos
xlat
and
sbb
mov
scas
fdivrl
inc
mov
mov
aaa
mov
lea
fwait
arpl
cmp
jp
fsubl
and
mov
testl
cmp
sub
mov
imul
or
je
add
pop
out
in
lret
jl
push
fsub
jns
mov
ds
adc
inc
xor
loop
mov
push
cmc
jnp
add
push
aaa
mov
jp
lahf
sbb
push
inc
nop
mov
aas
sti
fld1
shll
mov
movsl
mov
mov
xor
in
and
sub
outsb
popa
dec
adc
xor
xor
mov
dec
push
into
aam
adc
xchg
aas
pop
inc
push
sub
jae
ret
cs
jbe
movsl
nop
imul
rcrl
push
inc
lret
popa
sbb
xchg
and
xchg
inc
gs
sbb
movsb
test
mov
mov
outsb
hlt
popa
scas
sarl
jg
sub
inc
test
jnp
mov
push
out
jb
dec
shll
sbb
inc
aaa
inc
mov
mov
and
push
in
ljmp
sbb
adcl
cli
dec
or
jb
aas
lea
push
sbb
cmpsb
pop
dec
mov
ret
jp
or
incl
testb
mov
add
je
sbb
mov
push
aad
and
mov
fdiv
mov
call
and
xchg
pop
shl
mov
fnstcw
xchg
lods
pop
sbbb
leave
mov
icebp
pusha
js
stos
mov
lods
je
mov
jg
xor
cwtl
and
int3
cmp
pop
mov
sub
and
fs
or
mov
dec
sahf
mov
lea
stos
out
enter
test
jmp
shll
adc
jmp
and
dec
test
orb
notl
sarl
fstpl
sub
mov
mov
push
nop
add
out
xchg
les
mov
sbb
addr16
mov
ret
push
rclb
mov
scas
pop
subl
cwtl
jne
daa
test
xor
js
push
clc
call
bound
xor
lods
sbb
cmc
inc
jecxz
out
scas
jp
sub
scas
imul
mov
in
cmp
dec
movsl
sub
inc
popa
xor
fdivrs
cmp
adc
push
outsl
or
outsl
dec
fidivl
mov
pop
and
js
lock
and
shlb
add
movsl
insl
mov
add
and
int3
lock
jmp
push
shl
imul
mov
pop
bound
das
sub
sti
lahf
nop
scas
sub
mov
cld
test
cmp
sahf
fwait
in
and
pop
bound
dec
and
hlt
xchg
aaa
jns
push
ret
fisubl
sub
dec
mov
imul
xor
jge
cmpsb
or
sub
aaa
mov
xchg
stos
mov
and
mov
and
fistpll
idiv
addr16
call
push
repnz
jb
dec
cmp
dec
inc
subb
inc
push
jne
or
stos
pop
mov
dec
insb
inc
mov
or
pop
add
adc
cwtl
push
mov
adc
pop
xor
pop
jecxz
mov
jb
sbbb
mov
jae
stc
mov
pop
push
add
xchg
pop
shll
cmc
mov
stos
sub
xchg
xor
jbe
sarl
add
push
adc
lahf
dec
jne
popa
cmp
aam
add
arpl
shlb
js
fscale
int
sbb
outsl
dec
sub
rolb
mov
fimuls
loope
ljmp
rcr
and
out
push
popa
sbb
dec
pop
and
xchg
pop
mov
mov
mov
daa
andb
sbb
es
ljmp
cmp
xor
loop
add
repnz
mov
pop
mov
mov
sti
fimull
sbb
int
in
push
jbe
add
fwait
lret
mov
mov
and
pop
jns
add
cmpsb
pusha
repnz
pop
addl
movsb
xor
add
cmp
or
scas
jne
jp
add
cs
bound
pop
call
jmp
add
lea
jb
cltd
push
jle
ljmp
xchg
mov
addr16
insl
enter
aad
adc
jnp
xor
cld
mov
add
push
jno
xchg
pop
mov
pop
sbb
in
dec
in
out
inc
sub
repnz
sti
out
aam
popa
test
adcb
test
push
mov
and
scas
cmpsl
mov
sbb
push
push
lret
imul
out
sub
popf
call
std
aas
je
or
js
inc
dec
pushf
push
and
mov
adc
shlb
dec
inc
jecxz
mov
sub
push
sbb
daa
lods
stc
negb
movsb
std
push
dec
fs
das
inc
idivl
hlt
adc
insl
xlat
cwtl
pop
rcr
mov
clc
or
adc
aas
push
pop
adcb
sbb
sub
mov
sub
pop
adc
inc
sbbb
ljmp
mov
nop
push
pusha
fwait
mov
arpl
mov
mov
jl
pop
into
inc
mov
mov
jmp
pop
daa
je
mov
xchg
mov
sbb
mov
sub
fistpl
xor
into
mov
cmp
iret
subl
sub
imul
fbstp
scas
adc
sub
shll
sub
mov
shrb
cmpl
lahf
fistpll
inc
dec
fs
or
mov
stc
mov
push
pop
arpl
dec
subl
sub
insl
pop
aas
fsub
xchg
and
out
cmc
adc
mov
push
fsubl
fidivl
and
jns
push
jbe
xor
clc
dec
mov
sub
in
xor
dec
dec
hlt
sbb
inc
adc
cmp
daa
push
fmuls
xchg
fld
stc
mov
mov
push
pop
mov
arpl
or
fadd
ljmp
jnp
daa
jne
add
cmpsb
and
fsubs
xchg
xor
daa
dec
push
xlat
out
pop
arpl
cmp
sarb
stos
rcl
adc
adc
scas
icebp
roll
test
scas
rorl
bound
pop
cmp
inc
leave
adc
push
pushl
insb
jo
push
push
orb
adc
andb
insl
or
mov
fisttps
imul
and
or
mov
xor
mov
std
xchg
int3
aas
insb
adc
ficoml
ret
addr16
xchg
xchg
jg
inc
or
dec
xchg
fisttpll
enter
and
sub
das
popf
insl
test
push
adc
and
inc
lcall
xorb
jno
rolb
sbb
imul
rol
dec
xor
mov
pop
xor
xor
pusha
and
sti
lret
adc
cmp
pop
xchg
lret
repnz
and
lahf
push
daa
repz
cmpsb
and
and
cmpsl
mov
adc
aas
inc
movsl
push
xor
mov
leave
cmp
test
out
jo
mov
mov
cmp
fsubrs
mov
inc
sub
sub
add
lea
jmp
pop
insb
imul
lret
loop
mov
ljmp
in
dec
out
jle
mov
shl
lret
add
sahf
mov
imul
mov
push
aaa
addb
test
fmuls
jg
pusha
test
out
shrl
in
jl
inc
pop
mov
add
push
cmp
insl
aad
mov
push
adc
jns
adcl
movsb
sbb
pop
xchg
xchg
sub
pop
xchg
iret
mov
ja
or
ljmp
xor
inc
push
das
xor
das
test
mov
cmpsb
mov
xor
iret
sub
lret
pop
lret
out
int
mov
fisubs
pop
push
dec
test
test
js
out
push
outsb
stc
push
icebp
push
jle
aas
loop
es
mov
aam
popa
jp
add
clc
mov
je
cmp
ds
aam
bnd
pop
mov
es
mov
pop
mov
and
rolb
mov
shlb
repz
xchg
je
lock
push
mov
iret
jl
add
add
pusha
lds
xor
gs
xchg
lahf
inc
call
js
sbb
mov
sbb
xchg
pop
sub
push
adc
inc
inc
sub
cmp
test
sbb
andb
jp
fcmovnbe
sbb
jns
push
stc
and
sbb
les
sbb
push
ret
enter
clc
xchg
cmpsl
push
sbb
xor
push
inc
nop
adc
push
sub
nop
test
jns
ljmp
jne
dec
push
and
mov
or
lds
inc
addr16
sbb
testl
popa
jmp
aaa
mov
cwtl
fcoms
dec
fnsave
std
sbbl
addr16
jecxz
adc
pop
xor
pop
das
jp
sbb
jns
dec
lret
inc
xor
or
inc
xchg
cmp
jg
dec
out
test
test
lea
jno
pop
into
arpl
xchg
into
jge
add
in
xchg
push
adc
pushf
dec
add
dec
and
loopne
xchg
jns
adc
sbb
xor
aad
jns
insl
pop
xor
sbb
jg
adc
std
mov
inc
shr
repz
mov
iret
or
cmc
jecxz
sub
test
dec
xchg
sbb
sahf
mul
aaa
outsl
sbb
mov
test
sti
sub
push
dec
push
iret
xlat
sbb
dec
xchg
daa
pop
adc
xor
imul
or
jle
loope
daa
xchg
adc
ljmp
inc
add
int3
or
add
aaa
xchg
repz
inc
mov
mov
mov
repnz
add
jmp
mov
loop
pop
in
scas
add
xor
and
ds
xor
push
icebp
orb
sub
mov
sbb
xchg
aad
cli
subl
adc
dec
js
xchg
lods
pop
gs
inc
sar
or
pop
stos
in
xchg
push
movsl
mov
sbb
ret
inc
scas
jge
in
or
test
mov
fists
cmp
test
popa
into
mov
rdtsc
imul
mov
add
fisttps
dec
movsl
mov
aaa
push
sub
scas
jp
mov
clc
adc
aad
sbb
mov
dec
dec
push
mov
mov
jp
jae
push
push
jecxz
push
add
pop
dec
add
inc
stos
shr
mov
sub
inc
mov
cmp
pop
inc
test
bound
test
inc
js
push
inc
sbb
subl
adc
faddl
xor
lods
sahf
inc
mov
mov
fwait
sbb
sbb
and
stos
test
lahf
cmp
aas
dec
jp
xlat
pop
xor
sub
repnz
clc
clc
cmpl
jg
jmp
mov
scas
ja
sbb
dec
sub
aam
pop
movb
ret
or
imul
and
and
cmp
faddl
repz
mov
or
push
movsl
mov
jg
push
mov
dec
shll
jle
imul
jle
into
mull
or
xor
dec
xlat
sub
fcomps
xor
bnd
bound
mov
dec
negl
popa
jno
idivl
sbbb
stc
imul
shl
test
adc
leave
mov
fwait
stos
pusha
test
mull
lods
xchg
push
inc
faddl
push
fmuls
or
xlat
or
lret
cltd
aas
fs
lods
js
xchg
jno
lcall
and
xchg
fsts
pusha
xchg
test
enter
sbb
add
adc
jb
xor
sub
mov
dec
cmp
xorl
lock
or
push
dec
cmp
adc
fwait
inc
iret
mov
push
and
leave
and
xchg
lods
xchg
adc
sahf
int3
xor
sub
addb
push
loopne
and
fists
test
inc
cli
repnz
jae
push
xor
repz
lcall
in
js
push
jae
add
fcoml
or
add
scas
hlt
xchg
fstps
repz
orl
push
testl
pop
addr16
aaa
movsl
xor
incl
dec
fildl
jb
dec
leave
ret
inc
das
mov
cs
mov
push
arpl
insb
mov
loopne
sbbl
dec
xlat
bnd
jmp
xor
dec
in
mov
in
and
pop
dec
pop
jno
add
bound
fstps
mov
adc
and
loop
mov
int
ret
sti
nop
xchg
push
jg
inc
inc
mov
orb
in
les
lods
mov
and
pop
in
aad
pop
daa
or
data16
pop
les
stos
rep
sub
repnz
jl
imul
scas
push
jbe
stos
into
pop
das
mov
inc
ljmp
call
sub
imul
inc
daa
in
dec
mov
loopne
cmp
pop
sbb
stos
sbb
std
add
lock
lret
fmuls
and
cmpl
xchg
aaa
test
and
dec
cltd
loop
xchg
shlb
hlt
fwait
pop
mov
repz
adc
sahf
imul
fstp
add
xchg
les
js
mov
inc
pop
pushf
imul
add
in
js
pop
jbe
inc
jecxz
test
or
stos
adc
stc
add
push
adcl
enter
fwait
sub
adc
inc
and
stos
push
test
pop
dec
adc
lods
add
aad
out
aaa
lods
mov
xor
sti
pop
or
sbb
int3
daa
stc
shr
pop
cmc
xor
icebp
xchg
jo
sub
std
jae
mov
movsl
pop
in
loope
dec
add
mov
sbb
sub
lds
cmp
not
dec
lcall
popf
xchg
notb
mov
mov
adc
fcomps
jp
jge
imul
push
shll
mov
cmp
cwtl
aam
push
out
js
mov
call
out
mov
push
push
aaa
and
inc
mov
mov
pop
add
pop
pop
das
jae
scas
sub
push
icebp
shlb
out
jl
cmp
shl
inc
lods
pop
leave
jg
or
jg
mov
out
jns
ljmp
ror
xchg
xor
pop
add
jno
out
pop
pop
mov
insl
sbb
adc
scas
mov
pop
aaa
imulb
data16
mov
jbe
adc
stos
jb
pop
imul
xor
leave
shrl
aad
dec
or
dec
and
mov
add
xchg
mov
mov
aas
das
dec
and
pushf
sahf
loop
fwait
lock
mov
cmpsb
test
enter
outsb
or
test
andl
push
int3
xor
cmpsl
xchg
and
or
stos
and
lret
and
sub
mov
rcll
xchg
mov
mov
xlat
push
sarb
xor
fwait
ss
jns
lahf
push
lea
sahf
push
out
loop
bound
fildl
fsts
scas
dec
xchg
fists
cmpsb
sub
push
imul
out
hlt
mov
sub
fdivp
loopne
lods
sub
stos
in
lea
lcall
insb
mov
lds
mov
xor
or
jae
in
lods
jg
dec
or
rep
insl
add
adc
in
test
mov
inc
mov
xchg
pop
lods
lods
ds
repz
cmp
add
insb
xlat
cwtl
pop
scas
js
xchg
jnp
or
leave
cmp
or
ljmp
xchg
jo
mov
in
mov
mov
adc
fcomps
mov
and
repnz
mov
push
xchg
popa
repnz
add
xorb
setno
or
push
repnz
push
jno
iret
jp,pt
xor
mov
shll
sub
das
or
test
bound
xor
fisubs
and
sub
push
xchg
popa
mov
jmp
mov
std
lcall
hlt
and
out
add
jo
pop
or
adc
scas
and
dec
fistps
xor
push
mov
dec
cltd
leave
sbb
mov
addr16
sti
ss
cltd
mov
jns
and
pop
int3
sbb
daa
cmc
mov
inc
inc
test
adc
je
sbb
hlt
add
sub
mov
push
scas
repz
daa
dec
pop
push
mov
jno
mov
fsubr
cmpsl
fnstenv
adc
xchg
dec
or
cld
jecxz
and
mov
call
or
test
pop
jg
popf
xchg
cmpsl
adc
mov
adc
sub
push
loop
ljmp
xchg
mov
insb
add
mov
pop
call
ds
scas
mov
add
pop
out
or
xchg
popa
ficomps
insb
pop
out
xchg
lret
adc
dec
int3
push
int
mov
lds
inc
leave
adc
mov
jle
test
int
int
outsb
aam
lret
sbbb
lods
jo
jno
mov
inc
xchg
into
fstpt
loop
push
std
outsb
sbb
sbb
xor
jl
xchg
adc
shr
dec
inc
fs
mov
dec
or
or
push
mov
mov
out
jnp
les
dec
fdivl
stos
mov
push
xchg
xchg
dec
loop
and
insl
sub
aam
mov
mov
out
fcom
into
lahf
xor
jl
enter
sub
inc
inc
add
xor
add
lds
dec
sub
add
adc
loope
xor
lcall
leave
xlat
cwtl
dec
loope
sub
sbbl
ret
sbb
in
mov
and
xor
jns
andb
and
int
cmp
sarb
sub
jge
jecxz
cmc
mov
aaa
cltd
or
lahf
arpl
js
cmp
lret
push
xchg
push
pop
mov
mov
push
pop
xchg
test
out
fildll
bound
clc
adcl
fcmovbe
arpl
xchg
insl
repnz
pop
xchg
mov
mov
loope
mov
push
in
repz
movsl
dec
in
mov
jp
push
xlat
and
xor
and
fdivrp
pop
inc
push
jno
jno
adc
test
mov
jne
dec
popf
loop
nop
pusha
jp
adc
push
lret
test
mov
shrb
pop
rorw
or
insb
jmp
mov
jne
cmp
scas
repz
repz
and
dec
inc
mov
scas
shlb
jmp
fsubl
cmp
int
int
ds
mov
xor
notb
insl
xchg
sub
jle
and
insl
adc
and
pop
inc
pusha
test
mov
icebp
pop
inc
rcrb
adc
jbe
mov
inc
xor
mov
cmc
lret
call
pushf
jp
ret
mov
lds
jg
les
adc
mov
mov
pop
cmp
movsl
jmp
pop
xchg
cli
mov
das
adc
roll
push
mov
out
js
or
adc
fmul
ficoms
add
rcrb
in
dec
push
xchg
pop
loop
or
lock
rcrb
push
rol
pop
add
sub
insl
xor
or
xchg
arpl
mov
pop
sub
aad
push
jns
cmp
test
mov
ss
aas
and
hlt
ss
dec
aaa
lods
sbb
dec
int3
jge
stos
cmp
in
mov
popw
loope
loop
xchg
pop
je
dec
je
mov
int3
addr16
mov
das
inc
imul
sbb
inc
inc
out
popa
stc
sub
pop
push
jg
jo
pop
inc
outsb
and
inc
jmp
xchg
shrl
mov
out
inc
je
inc
fistpll
in
inc
andl
scas
jecxz,pn
stos
cwtl
popw
iret
xor
fnstsw
insb
push
jbe
mov
push
lret
lret
jmp
sti
xor
test
ret
pushf
mov
mov
fstpl
gs
movsb
cs
popf
adc
pop
nop
jmp
filds
mov
mov
lods
xchg
shrl
mov
cmp
clc
dec
inc
sub
in
shll
les
fwait
in
cli
xchg
sub
inc
fwait
pop
mov
add
hlt
icebp
dec
fwait
lcall
sbb
push
cmpsb
xchg
mov
jmp
stos
jns
and
cltd
push
add
jle
jnp
sbb
addr16
out
stc
test
jno
adc
adc
sub
es
iret
lock
xlat
fsts
jg
or
mov
cmp
out
mov
ret
lahf
pop
lcall
fbld
or
std
cmp
test
jbe
or
loopne
cltd
stos
lret
jmp
push
dec
pop
aas
jae
das
cmp
jbe
cmpsl
fs
cmp
int
fbstp
and
test
xchg
mov
nop
xor
mov
jbe
shll
mov
dec
add
shrl
std
push
or
arpl
push
lock
push
call
mov
js
test
inc
mov
imul
leave
sbb
dec
stc
adc
xchg
xor
or
xor
sbb
fdivs
ds
mov
enter
cmc
sbb
sub
dec
imul
imul
ja
mov
push
addr16
inc
adc
jge
lret
push
sbb
cmp
test
cmpsl
sbb
add
push
mov
js
fcomi
or
je
out
cmpsl
or
inc
xchg
jno
lods
push
mov
pop
movsl
jmp
or
fwait
jnp
push
movsb
inc
add
xor
repz
repz
sbb
mov
inc
add
test
ljmp
push
jbe
mov
xchg
mov
cwtl
adc
js
std
adc
push
mov
mov
das
out
mov
jbe
jne
jecxz
jnp
loope
sahf
push
jns
sub
lcall
mov
das
cmp
cli
or
sbb
mov
mov
sti
mov
sbb
mov
subl
rol
sbb
das
dec
repnz
lfs
in
imull
mov
and
movsl
loope
leave
stos
mov
or
pop
add
mov
sti
xor
xlat
push
inc
mov
jnp
or
popf
outsb
fiadds
sbb
dec
pop
outsb
fwait
sbb
add
pop
loop
repz
add
dec
cmc
cmp
cld
pop
mov
lret
push
rep
pop
je
roll
sub
scas
arpl
cmp
mov
dec
jne
push
xchg
jle
adc
mov
inc
into
out
mov
lock
lds
aaa
bound
shr
cmp
in
mov
push
fisubs
fs
lods
xor
add
js
add
jb
dec
jg
sub
mov
icebp
imulb
into
mov
dec
call
enter
cmpsb
nop
aaa
rorl
imul
pop
jge
fmulp
int
inc
push
cmpsl
adcl
cs
sub
inc
insb
repnz
jecxz
sbb
inc
call
lods
pop
mov
cli
leave
mov
xchg
iret
mov
push
sbb
sbbb
mov
xor
cmp
xchg
in
jmp
adc
xor
jge
adc
in
adc
rcll
mov
mov
push
or
int
pop
loop
dec
dec
repz
and
adc
lret
xchg
dec
mov
sub
ret
mov
in
push
rclb
movsl
jno
loopne
push
scas
inc
xchg
dec
rclb
jle
mov
cmp
inc
adc
push
in
mov
lret
pop
sbb
mov
in
xchg
mov
and
aad
sbb
xor
cmp
mov
das
ljmp
aas
sub
mov
fisttps
dec
sbbb
les
jl
aad
cmp
test
fs
pop
stos
cmpsb
loope
and
or
roll
pop
lret
lret
mov
stos
cmpsl
fucom
mov
scas
dec
std
test
push
test
out
inc
ficompl
fwait
fs
bound
push
cmp
sbb
leave
js
dec
fistpl
sahf
aad
sub
sub
xlat
fnstsw
fsts
push
add
or
mov
jb
dec
stc
jo
xor
add
jmp
jmp
sbb
fwait
inc
dec
pop
filds
cli
data16
imul
inc
bound
cld
mov
mov
lahf
in
sub
gs
faddl
stos
in
pop
dec
xchg
adc
loope
les
enter
mov
mov
mov
cmp
dec
add
and
xchg
xchg
push
lret
insl
mov
push
dec
xchg
cmc
popa
imul
push
inc
cmp
xchg
cmpsb
ja
and
inc
mov
int
cmp
daa
cmp
jl
sbb
adc
dec
jmp
cmp
mov
fsubrl
push
add
lcall
adc
pop
jns
xchg
or
sbb
sub
inc
and
mov
pop
popa
mov
int
ret
jbe
sahf
jbe
cmc
ss
mov
mov
jle
movsl
jmp
xlat
lods
mov
push
xchg
jp
push
mov
sub
jns
xchg
dec
icebp
inc
imulb
gs
int3
jnp
negb
xor
pop
fsubl
xor
jb
xchg
mov
pop
inc
mov
pop
push
ds
ss
mov
add
inc
test
push
jge
and
mov
jecxz
lods
das
fs
add
cld
test
mov
push
pop
shl
shlb
loope
jo
pop
xor
xchg
out
push
lds
mov
gs
mov
push
in
xlat
sti
cmp
std
cmp
adc
js
testb
jnp
movsl
adc
push
xor
and
and
outsb
sub
mov
inc
lahf
pushf
mov
out
push
mov
mov
int
popa
lahf
mov
aam
aam
xchg
cmp
arpl
dec
sub
dec
int3
sbb
gs
imul
xor
jl
mov
add
xor
mov
movsb
jg
sub
jl
inc
cmp
xlat
shll
stos
dec
sub
dec
shll
cmp
mov
mov
sbb
sub
cld
lds
sbb
push
imull
cmc
xlat
in
fcmovnb
cmpsb
sbb
and
loope
mov
adc
stos
dec
pop
mov
pop
mov
mov
cmc
adc
testb
clc
push
inc
xchg
aam
mov
xchg
das
out
xor
cmp
test
and
adc
iret
dec
or
out
mov
mov
fists
js
mov
test
push
stos
adc
mov
xor
repz
mov
loop
fcoml
int
inc
xor
and
inc
aaa
adc
jo
rcrb
lds
stc
cmp
or
sbbb
in
push
fnstenv
cld
std
xor
inc
xchg
mov
xchg
or
xlat
inc
sbb
push
rolb
dec
mov
push
pop
out
mov
push
push
xlat
das
pop
mov
inc
lock
stc
scas
jns
mov
push
insb
test
mov
stos
xor
ljmp
fs
jg
fcmovb
je
pushf
iret
and
aas
add
jns
cmp
ja
inc
lds
mov
xor
lcall
mov
adc
notl
bound
mov
mov
mov
les
adc
cli
popa
jp
fwait
pushf
stc
dec
arpl
jmp
into
pop
aas
shrl
dec
mov
ljmp
popa
sub
movsl
and
pusha
mov
scas
ljmp
aas
stc
mov
cmpsb
mov
loop
ljmp
sbbb
jae
ja
sbb
rolb
jg
repnz
sbb
inc
push
inc
das
pop
jns
jo
sub
sub
push
sbb
pop
cwtl
bound
subb
mov
sbb
dec
data16
in
jb
adc
xchg
adc
jge
int3
xor
loope
and
pop
dec
mov
test
cltd
pop
out
mov
adc
xor
pop
sub
mov
mov
mov
loopne
mov
stc
stos
pop
test
pop
add
adcb
cmc
push
cmp
lock
out
mov
scas
mov
lods
test
mov
jnp
jl
lret
out
pop
cld
push
and
ljmp
mov
or
cmc
and
mov
and
mov
push
cmova
out
int
addr16
fisubl
int
jbe
fwait
out
loop
orb
xor
xchg
adc
pop
mov
mov
mov
adc
cmp
push
fistl
sbb
jno
movsl
mov
movsl
data16
xor
ja
aas
ret
test
mov
scas
xchg
ss
cltd
jmp
pop
jbe
or
daa
and
lret
in
jns
bnd
xor
out
test
lcall
jbe
lcall
es
push
push
cmpsb
shll
xchg
icebp
mov
dec
inc
cmc
cltd
iret
fwait
pop
rorb
loopne
xchg
sbb
or
jns
stos
jp
or
mov
jo
cmp
mov
fidivrs
jle
xchg
dec
inc
sub
cli
adc
movsl
rcl
lret
xchg
jmp
or
outsl
add
mov
ret
dec
inc
or
hlt
sbb
leave
fsts
adc
in
xor
rcrl
mov
xchg
loopne
sub
movsb
call
push
xchg
push
sub
mov
call
cli
test
xorb
jl
loop
jbe
sbb
inc
hlt
inc
std
aam
push
cltd
test
movsl
loopne
mov
movsb
not
inc
mov
xchg
ficompl
inc
lods
setnp
sbb
mov
mov
jl
popa
push
dec
aas
pop
jnp
lahf
cmp
pushfw
das
adcl
shrb
pop
ljmp
scas
mov
xchg
mov
add
in
int3
push
and
jb
stc
stos
in
lret
clc
andl
stos
xchg
xchg
lret
cmc
sub
xchg
arpl
jge
push
or
sbb
popf
cli
std
lcall
xor
dec
cmp
data16
in
or
je
mov
jo
popf
cld
add
in
cwtl
mov
inc
sahf
inc
mov
shrb
es
adc
ss
rorl
pop
loope
repz
mov
add
xlat
mov
ds
jne
jg
test
outsl
push
sbb
add
stc
cmp
inc
mov
jno
push
cs
xchg
xor
test
das
int
jg
sbb
dec
push
gs
or
mov
mov
and
es
outsb
rcrl
jecxz
std
xor
das
enter
and
insb
rorl
ret
scas
cwtl
pop
adc
aaa
sahf
enter
sbb
loopne
cmc
lea
fdivrs
xchg
int
push
pop
mov
aaa
repnz
in
lods
push
popf
imul
inc
sub
push
push
inc
daa
sub
js
sbb
xor
dec
inc
cwtl
imul
aad
inc
aam
stos
call
sbb
shrl
jg
lcall
cwtl
add
rcll
movsl
loope
cmp
xor
loopne
push
jno
xchg
std
cmp
xchg
cmpl
test
and
lods
xlat
mov
xchg
adc
ja
movsl
repnz
ljmp
lret
xor
push
mov
mov
aaa
mov
cltd
fdivs
pop
mov
mov
notb
test
jne
lret
sub
adc
lcall
into
sub
xchg
pop
loope
fwait
in
dec
fisubl
movsl
aas
inc
mov
fisubrs
push
xchg
sub
xchg
in
std
dec
bound
daa
jo
je
outsb
push
or
popf
stos
adc
sbb
adc
fld
ret
inc
test
mov
dec
dec
int
lretw
mov
push
push
push
data16
test
and
ss
sahf
mov
scas
push
push
push
clc
mov
xchg
rclb
stos
jo
dec
rorb
sub
xor
cwtl
and
and
scas
lea
das
scas
adc
xor
inc
adc
push
mull
stos
aas
ss
ffree
cld
lcall
add
inc
lods
sahf
jne
xor
rcrl
cld
xchg
mov
mov
add
test
insb
adc
jnp
lock
repnz
add
mov
test
in
aad
inc
inc
cmp
out
push
xchg
cltd
jmp
lods
shl
dec
add
push
jp
xor
lret
sarb
nop
adc
out
xor
jns
and
hlt
js
mov
or
dec
jo
popa
subl
int3
cmpl
scas
out
roll
adc
stc
add
xchg
jns
or
jnp
jnp
loope
push
shlb
clc
daa
je
int3
out
pop
and
movsl
and
adc
cwtl
out
push
push
lods
xchg
push
cmp
dec
mov
jecxz
out
lods
lcall
fdivrl
cli
inc
mov
jge
xor
xlat
add
mov
mov
mov
jnp
mov
jbe
pop
inc
int3
push
mov
in
mov
xchg
add
pop
dec
and
or
jecxz
mov
jmp
orb
cmpsl
ds
and
testb
imul
inc
sbb
mov
loope
cwtl
jle
sbb
xor
xor
fisubrl
fucomi
mov
pop
cltd
pop
jg
std
dec
cmp
or
bound
inc
pushf
mov
pop
xchg
pop
shll
fs
push
cmpl
inc
inc
aad
out
out
ss
or
mov
int
mov
mov
xor
or
insb
push
cmpsl
push
cmp
pop
fsubs
int
dec
lock
std
cmp
pop
testb
xchg
pop
jae
xor
mov
ret
and
js
xchg
adc
push
pusha
hlt
cli
ds
adc
sub
sub
adcl
adc
push
add
sar
adc
cmp
jg
sti
cmp
xor
scas
test
push
jae
mov
cmp
push
mov
add
push
xchg
mov
push
cmpl
popa
xchg
cli
aad
inc
cwtl
pop
outsb
test
and
out
les
fidivrs
mov
das
loopne
popa
push
fidivs
inc
push
pusha
js
aam
adc
push
xchg
or
cld
or
and
lods
lods
cwtl
mov
or
and
dec
sub
test
loop
movsl
std
mov
hlt
loope
in
imul
dec
insl
cwtl
inc
int
pop
mov
push
icebp
std
test
stos
out
in
dec
sub
or
pop
ret
fwait
roll
sub
inc
pop
fwait
stos
mov
stc
sub
mov
fwait
mov
fnstsw
push
mov
and
test
push
sub
lahf
dec
jbe
adc
sbb
lret
std
and
daa
aam
xor
sbb
lret
push
mov
dec
push
dec
enter
mov
and
sbb
leave
jg
adc
xlat
sbb
aam
fs
jmp
sbb
push
int3
dec
jae
xor
shll
or
sbb
mov
mov
mov
fldlg2
mov
xchg
push
cld
dec
jle
mov
inc
fbstp
test
jno
or
pop
sbbb
sbbb
xor
test
mov
rorl
jl
sub
jge
cmpsl
cli
xchg
ret
mov
in
aad
adc
lods
fidivs
mov
or
sbb
incb
je
adc
jmp
in
jbe
mov
or
jl
movsl
add
or
pop
xor
fcomp
adc
inc
adc
sbb
mov
inc
mov
shll
mov
les
sub
pop
popf
or
iret
or
or
xor
fdivs
jne
push
xchg
or
or
aad
cmp
in
gs
xchg
fisubrs
inc
rcrb
bound
lods
and
mov
dec
imul
push
lret
cmpsl
fstps
dec
insl
scas
mov
add
mov
mov
add
jb
jl
mov
inc
and
cmp
or
stos
int3
sbb
test
gs
push
mov
ss
clc
scas
jle
jmp
fmuls
jp
cmp
test
lea
cmp
xchg
adc
cmp
xchg
mov
add
lret
ljmp
lds
icebp
fsubrl
xor
adc
iret
ret
mov
mov
pop
testb
repnz
xorl
pop
sbb
repz
mov
int
mov
cmpsl
push
movsb
popa
iret
fs
js
mov
jb
and
lods
data16
cmpsb
push
shrb
enter
and
movntps
jae
push
out
sbb
ret
mov
into
dec
jbe
out
xor
das
inc
adc
daa
mov
jp
sub
in
push
loop
jl
adc
mov
jl
push
in
mov
and
pop
out
mov
add
mov
out
lods
lods
pop
jae
pop
sti
call
dec
mov
stos
iret
mov
icebp
sbb
out
out
and
fstps
cld
sti
pop
dec
fstpt
fistps
dec
jb
imul
ret
aaa
in
shrl
popa
mov
jp
push
lds
lcall
sbb
lea
mov
cmp
fistpll
ret
adc
icebp
stos
arpl
pushf
ror
adc
inc
jns
mov
push
and
aad
pop
dec
cmp
aaa
adc
push
xchg
push
and
and
mov
dec
or
dec
aad
lods
repnz
movd
inc
cmpsl
test
and
mov
pop
stos
nop
sub
das
dec
shrl
mov
icebp
mov
mov
jnp
mov
in
cs
loope
rorb
jle
dec
dec
test
sbb
cmp
fiaddl
inc
test
js
or
rcr
jnp
push
addr16
movsl
ljmp
sbb
cmp
xchg
push
inc
cwtl
add
xor
add
xchg
push
jnp
add
stos
inc
mov
rcr
sahf
push
lds
imul
jmp
aas
and
inc
lods
or
sti
cmpl
cwtl
pusha
sti
mov
add
ret
pop
lcall
test
sbb
jmp
xor
cmp
jmp
test
repnz
sub
lock
dec
or
sahf
pop
sahf
push
ja
cmpsb
setns
dec
xlat
push
cld
sarb
shl
in
pop
les
xchg
mov
or
inc
cltd
fadd
sub
adc
push
lods
add
iret
adc
enter
xchg
pushf
xor
aam
push
sbb
lahf
ljmp
inc
push
adc
idivb
jb
push
iret
rcl
loope
xorb
ss
movsl
jne
daa
mov
pop
push
jle
pop
dec
fstl
dec
jmp
fimull
stos
imul
into
jb
leave
mov
add
adcl
jl
adc
add
cmp
cmp
into
mov
mov
sbb
push
inc
mov
xchg
pop
push
or
pop
and
push
jnp
fs
lcall
sub
jge
jecxz
dec
push
int
outsl
je
mov
out
popf
sub
sbbb
in
popf
xchg
mov
push
pop
pop
fldenv
int3
jge
les
sub
xchg
jmp
jb
lea
jmp
push
je
jne
and
mov
push
popa
mov
and
arpl
xchg
testl
subl
cmp
addb
call
lret
out
add
daa
popa
insl
in
jnp
mov
pusha
push
mov
dec
daa
mov
xchg
sarb
mov
adc
out
jne
cmp
pop
repz
cmpsb
mov
jmp
pop
lock
jmp
mov
push
iret
push
inc
cld
add
pop
in
aaa
roll
and
test
sahf
xchg
xchg
mov
dec
inc
call
pushf
jns
dec
out
sbb
ja
mov
jl
shll
jne
add
std
enter
ss
pop
ds
and
enter
push
dec
out
dec
mov
pop
dec
sbb
mov
jle
daa
int
cmp
adc
movsl
jle
daa
iret
cmp
xchg
mov
ficoml
sbb
and
mov
rclb
mov
xor
in
or
sub
and
sbb
aas
movsl
jp
sbb
push
jl
sbb
or
cmp
pop
pop
mov
cmc
add
jmp
fstl
jecxz
rcrl
sarl
jb
fwait
bound
pop
push
fcomip
jo
inc
fmull
bound
out
jge
xchg
iret
dec
cltd
mov
sub
ficoms
push
pop
xchg
adcl
jne
add
test
jl
ljmp
dec
mov
mov
pushf
sbb
inc
sub
adc
and
sbb
sbb
clc
pop
add
ret
jns
call
scas
sahf
cmp
subl
cwtl
jae
push
mov
jne
les
adc
mov
sub
sub
inc
push
adc
aaa
ljmp
aaa
arpl
adc
shl
lds
addr16
jle
adc
nop
xor
test
xchg
push
pop
jb
pushf
inc
dec
xor
ja
mov
ret
cmc
mov
mov
mov
xchg
cmpsb
into
and
mov
inc
lods
shrl
es
push
cltd
add
inc
nop
xor
sbb
pop
fsubrl
inc
xchg
adc
call
jne
push
scas
out
inc
cld
icebp
insl
jp
sbb
test
sub
ds
ret
push
aad
xchg
movsb
jecxz
punpcklbw
out
and
stos
pop
jns
xchg
ret
imul
pop
inc
in
lahf
jbe
xchg
xor
push
insl
iret
ss
fidivl
push
arpl
jmp
cmp
sbb
mov
jle
adc
push
int3
ret
mov
loop
pop
fnstsw
adc
hlt
push
xchg
stc
dec
jb
push
insb
es
insb
stos
loopnew,pt
imul
sbb
inc
lock
dec
fcmovb
sub
cmp
aas
mov
sbb
dec
inc
jmp
mov
test
push
jo
test
inc
inc
push
sub
rorb
push
scas
data16
mov
cmc
mov
pop
in
mov
popf
test
adc
out
movsb
ljmp
mov
jb
sahf
add
sub
mov
clc
mov
lods
xchg
xchg
rcll
mov
sbb
repz
sub
jmp
jb
mov
mov
lds
mov
pop
sbb
sahf
or
sbb
jns
xchg
push
repnz
fsubs
out
xchg
sub
out
repz
pop
movsl
test
fucomp
xor
cmp
pusha
ja
outsl
cld
pusha
or
and
shrb
movb
mov
mov
icebp
rdtsc
push
fcmovb
mov
mov
adcl
arpl
xchg
push
inc
rorb
js
lds
adcl
aaa
aas
int3
push
out
fs
ds
jge
inc
push
popa
sub
jb
lcall
dec
popa
sbb
jmp
adc
cmc
sub
push
pop
js
lea
mov
xor
aaa
mov
xchg
mov
xor
mov
sarb
mov
test
push
dec
out
test
je
shlb
outsl
divl
mov
mov
flds
mov
inc
add
and
pop
mov
insl
mov
fmulp
sbb
jb
sub
into
mov
scas
sbb
rclb
enter
cmpsb
jne
scas
pusha
mov
ss
icebp
pop
pop
lret
rcrb
xchg
into
cmp
mov
push
pop
xchg
jl
and
jbe
mov
aam
outsb
rclb
xor
divb
cmp
movsb
pop
xchg
cwtl
lcall
imul
int3
cmp
dec
dec
call
outsl
dec
mov
cs
jnp
pop
mov
xor
je
add
fists
sahf
adc
mov
mov
mov
int
sahf
dec
and
add
sahf
add
mov
xchg
or
cmpsb
insb
push
mov
mov
adc
movsl
arpl
out
lmsw
test
fdivr
mov
sbb
out
or
aas
imul
inc
mov
ds
push
inc
mov
xchg
add
and
pushf
scas
pop
sti
mov
cmpsl
push
jns
pop
inc
mov
daa
into
inc
loop
mov
cwtl
lods
push
test
pop
jp
arpl
das
aam
jnp
jno
xchg
int
sub
popf
pop
popa
cmpl
push
push
call
out
adc
roll
xchg
sub
cmp
push
cmp
sti
pop
inc
in
cs
push
fucomi
test
adc
mov
mov
xor
jp
and
xchg
mov
cltd
clc
adc
loope
mov
cltd
mov
lods
sub
sbb
sbb
das
push
outsl
sbbb
push
adc
sbb
cmp
fxch
mov
enter
daa
jecxz
mov
xor
and
adc
sti
jb
testl
cmpsb
xor
inc
cmp
inc
mov
mov
mov
or
repnz
popa
es
xor
shrl
ret
rcll
ljmp
adc
out
jne
inc
pop
cmc
ja
cwtl
stos
in
add
int
or
push
test
or
dec
movsl
jg
int3
dec
mov
in
imul
fnstenv
mov
test
sahf
dec
jne
lret
fcomps
cmp
adcb
das
mov
enter
adc
or
push
int
push
dec
dec
scas
mov
out
lahf
mov
sahf
pavgw
adc
jp
push
pop
in
sti
pop
dec
push
dec
popf
push
in
cld
movsb
rcrb
cli
loope
faddl
lret
imul
mov
push
sub
inc
dec
aas
je
icebp
nop
clc
nop
int
mov
xchg
sub
pop
ror
jge
sbb
cwtl
sahf
sub
out
push
fxch
xor
mov
dec
fbstp
ss
adc
xor
sbb
lcall
mov
repz
shl
or
aas
mov
clc
mov
push
push
push
iret
adcl
test
pusha
pop
mov
stc
sahf
and
lods
and
iret
fdivs
dec
es
js
sqrtps
xlat
mov
pop
pop
shlb
add
mov
push
sub
hlt
enter
lea
dec
cltd
push
js
test
dec
dec
mov
sub
dec
fs
mov
xchg
mov
push
add
sub
out
popf
xchg
inc
push
pushf
pop
test
adcl
dec
mov
cmp
inc
jo
hlt
push
loope
or
pop
xchg
lret
or
leave
repz
sbb
lret
arpl
mov
sahf
lret
mov
mov
subl
pop
les
push
or
jmp
sub
ja
lock
xchg
std
inc
sar
mov
test
adc
add
mov
or
jecxz
clc
xorl
fisubrs
pop
outsl
lds
jno
pop
stos
out
repnz
sub
dec
sarl
fcomi
scas
xlat
xchg
and
enter
test
sbb
sbb
jp
bound
add
mov
insl
lds
dec
jns
or
ficomps
daa
das
pop
mov
push
xchg
lcall
cmpsl
mov
or
ret
fmulp
ret
adc
leave
addr16
loop
sbb
mov
mov
mov
pop
inc
std
cld
je
outsb
iret
or
sar
mov
cmc
lret
push
in
mov
ret
and
dec
lea
mov
add
xchg
inc
ds
addb
dec
pop
repnz
push
mov
cli
aaa
daa
xlat
dec
nop
mov
mov
aaa
dec
lret
loopne
pop
jg
jbe
add
shlb
xchg
iret
cmp
out
lret
rclb
jge
cld
and
das
loop
dec
test
cmp
fbld
sub
mov
cmp
out
arpl
loopne
pop
jne
jge
mov
shlb
in
and
test
sbb
inc
jo
cmp
rcll
pop
inc
cmp
rcll
push
enter
inc
pop
pop
push
mov
mov
sub
push
push
inc
jmp
mov
pop
aaa
iret
adc
xor
push
mov
pop
mov
jae
loop
pop
xchg
cmp
mov
ret
in
out
js
jae
pop
lcall
test
or
cmp
lret
pushf
and
ss
mov
insl
popa
shlb
rcll
in
roll
dec
das
sub
mov
cmp
cli
cld
sub
jbe
into
xchg
fbstp
xor
nop
popf
and
jae
sub
jnp
cmp
push
icebp
idivb
mov
dec
xchg
iret
inc
push
push
xchg
jbe
leave
hlt
pop
pop
pop
je
add
call
mov
int3
add
pushf
aas
daa
pop
aas
imul
mov
sbb
sti
adcb
in
call
ret
or
loope
imul
das
icebp
push
insl
adc
test
and
subb
dec
ss
xchg
mov
fildl
int
push
fsubr
dec
or
call
out
js
adc
xor
xchg
imul
sbb
fdivrs
jae
mov
mov
sbb
stc
pop
or
add
or
mov
cld
mov
or
mov
cli
inc
xor
arpl
or
add
inc
and
push
push
cmp
hlt
rorl
fs
sbb
imul
xorl
out
les
fistps
rorl
loope
cmp
and
cltd
aam
pop
cwtl
adc
loopne
adc
xlat
sbb
mov
pushf
mov
inc
sbb
cld
testl
clc
jno
pop
lcall
fistpl
and
inc
lds
divb
inc
push
push
jno
stos
rclb
ds
mov
cltd
fimull
cmpsl
test
popf
mull
jb
mov
scas
insl
or
mov
faddl
jmp
or
pop
fisttpll
mov
cwtl
jb
inc
push
cltd
ret
stc
or
cltd
jnp
sarb
repz
mov
dec
lods
inc
push
add
inc
xor
sbb
cmp
sbb
inc
jmp
inc
aaa
fsubrl
ljmp
adc
jmp
in
mov
scas
in
sbb
mul
adc
add
push
out
mov
pop
xor
xchg
mov
in
stos
jae
mov
loop
stc
cmp
sbb
jb
aaa
fistps
push
js
mov
pop
push
xor
xor
enter
jae
movzwl
mov
sar
int
les
incb
es
jbe
fcoms
out
scas
jns
xchg
push
imul
push
mov
in
in
jg
and
loop
jl
enter
or
cmp
les
adc
scas
sub
insl
mov
outsl
push
or
shll
aaa
fldcw
outsb
cmpsb
mov
pop
es
into
orl
add
jecxz
cmp
xor
push
cs
dec
into
xchg
pop
int
and
sbb
outsb
mov
cli
out
push
mov
sbb
push
fsub
sarl
mov
gs
xchg
imul
call
mov
pop
pop
repnz
adc
lods
cltd
mov
pop
call
pusha
popf
fistpll
pushf
cmpsl
or
push
xchg
jns
es
dec
xchg
test
fs
int3
push
ja
test
sub
push
bound
xchg
or
ljmp
jmp
aam
test
clc
inc
or
push
nop
xor
arpl
aam
xchg
je
dec
pusha
lock
jb
xor
dec
dec
jmp
xor
push
daa
outsl
movsl
ds
add
sbb
mov
push
xor
sbb
scas
push
shl
push
dec
daa
sub
mov
or
clc
sahf
jno
repnz
adc
sarb
sahf
xlat
gs
mov
or
hlt
insb
int
test
push
cwtl
fists
cmp
add
shlb
aam
mov
jbe
je
lahf
sbb
in
jbe
fstpt
ret
cmpsb
scas
adcb
mov
imul
jle
lcall
adc
cmp
loopne
jbe
sbbb
bound
in
cmc
jmp
lea
cmp
in
xor
push
les
dec
xor
movsb
adc
outsb
mov
jne
loop
test
fiaddl
jb
fsubrs
lock
fstps
push
ret
ds
imul
add
dec
int3
dec
cmc
mov
test
jmp
outsb
ds
dec
add
fs
mov
mov
scas
adc
sub
dec
cmc
mov
xchg
insb
mov
dec
xchg
push
mov
imull
inc
or
int
sbb
ja
popa
pushf
int3
lret
pop
mov
jmp
fstl
cmp
push
sbb
cmp
je
addr16
or
jno
rcll
xchg
insl
jns
lock
xchg
and
or
xor
in
fists
xor
lret
iret
out
and
movsl
fdivs
pop
pop
push
push
shl
lds
push
xchg
xchg
xchg
lahf
inc
jge
mov
push
int3
pop
jle
push
in
jne
xchg
in
popa
sub
mov
cmpsb
shrb
adc
dec
and
cmp
aam
sub
jb
fimull
jno
push
mov
push
rol
push
mov
out
test
mov
jle
lahf
fnstcw
xchg
cmp
pop
shll
jle
dec
or
push
push
mov
add
inc
int3
sarl
xchg
bound
sub
dec
scas
pop
cmp
in
ds
icebp
adc
fisttpll
mov
fisttps
je
inc
sub
fnsave
mov
xlat
loope
mov
cmpsl
mov
add
fimuls
sub
jle
inc
push
pop
push
jns
test
dec
dec
dec
popa
inc
fidivrl
int3
loope
vmwrite
in
subl
insb
daa
dec
lock
xor
mov
pop
mov
push
mov
jae
data16
and
xchg
dec
divb
and
pop
dec
push
sub
jecxz
cmp
pushf
xchg
daa
mov
arpl
jbe
lcall
push
mov
ja
push
fistps
cmpsb
nop
shll
out
mov
inc
fiadds
push
and
xchg
faddl
loopne
aas
cmpsl
adc
movsw
fs
dec
mov
mov
jecxz
lods
addb
cwtl
xchg
xchg
shlb
es
jp
fbld
xor
sub
inc
mov
push
in
in
or
xchg
jmp
gs
in
test
push
push
mov
mov
jae
cmpsl
adc
es
mov
lock
pop
addr16
mov
leave
push
into
and
out
jg
mov
add
repz
cmpsb
xor
add
jno
adc
xor
iret
icebp
ljmp
sbb
iret
mov
jle
clc
adc
shl
lcall
lods
sub
jge
outsl
pop
clc
pop
adcb
xchg
mov
aas
lds
movsb
mov
arpl
call
jae
mov
and
mov
insb
into
ja
cmp
push
sub
out
push
in
inc
icebp
aam
xchg
movsb
out
xor
mov
bound
iret
and
mov
xchg
cmp
mov
push
xchg
jge
std
pop
movsl
mov
and
jecxz
stos
adcb
jnp
mov
movsl
sti
rcr
push
sub
out
xor
cmp
addr16
in
sbb
or
dec
out
sub
cmp
jmp
inc
addr16
mov
jnp
dec
xchg
lea
jne
adc
ficoms
or
mov
cmpsb
jno
addr16
add
sub
push
mov
and
clc
mov
pusha
loop
cwtl
mov
push
test
leave
inc
or
mov
call
inc
jp
fstl
mov
pop
sbb
sti
jbe
mov
insb
xchg
shl
pop
cmp
and
xor
dec
ds
sarl
mov
jno
xor
das
enter
dec
and
lret
xor
inc
je
bound
andl
push
mov
pop
jo
out
bound
pop
test
mov
adc
cmp
and
jo
cmp
jecxz
into
call
push
loop
pop
cwtl
xchg
mov
mov
outsb
insb
js
push
into
ret
jns
mov
das
pusha
jo
cwtl
popf
repz
imul
or
sbb
or
aam
push
jge
or
shrl
lock
stc
orb
cmp
popa
outsb
sahf
push
adc
pop
and
nop
xor
lock
pop
pushf
mov
and
daa
dec
das
push
jmp
movsb
push
xchg
cwtl
sub
es
sahf
adc
or
ss
mov
jns
sub
xchg
fcomip
aaa
fisttpll
mov
mov
into
mov
xor
ret
jecxz
repz
fimuls
and
pop
xchg
jg
idivb
mov
pop
ja
data16
dec
out
out
mov
icebp
test
push
jnp
movsb
adc
jecxz
gs
cmpsl
adc
cmp
out
and
enter
fbld
xorl
dec
in
enter
xchg
pusha
jb
mov
push
cltd
movsb
and
mov
ret
xchg
sti
mov
sub
adc
ds
sbb
or
xorl
jne
jae
xchg
cmp
jnp
push
add
lea
jnp
or
mov
jns
xchg
or
jmp
dec
or
in
stc
jnp
out
mov
dec
std
mov
cmc
pop
pop
xor
out
adcl
pop
test
lret
stos
stc
pop
pop
add
adc
inc
pop
fstl
pop
invd
mov
shll
sub
cmp
outsl
pop
push
push
cmpsb
out
and
mov
negl
dec
and
js
in
pop
out
ja
jg
push
mov
ret
inc
xor
sbb
dec
xchg
arpl
outsb
pop
nop
push
xchg
xorl
mov
adc
outsl
mov
adc
and
dec
push
cmpsb
out
mov
aad
insb
xchg
cmp
inc
sahf
inc
sub
popf
pop
cmp
roll
repnz
test
and
or
and
icebp
xor
xchg
push
xchg
cmp
dec
gs
xchg
sub
pop
jl
sbb
fs
mov
jmp
cmp
xchg
mov
push
daa
mov
test
ret
pop
xlat
xchg
pop
repz
iret
push
cld
ror
data16
jb
inc
dec
jmp
push
sbb
mov
jecxz
sbb
add
xor
sub
sbb
push
scas
jmp
fcomps
or
pop
dec
leave
cld
cli
call
cmp
icebp
test
adc
mov
das
mov
test
jmp
inc
xchg
mov
pusha
cmp
lds
insb
push
pop
fmull
mov
scas
imulb
cmp
test
xlat
hlt
add
add
mov
aas
stc
cmp
mov
sub
daa
jb
push
sub
pop
adc
fs
jge
and
inc
mov
imul
aam
add
cmp
cmp
out
test
or
mov
mov
jmp
and
adc
jmp
call
sbb
pop
add
push
cmp
sub
andl
dec
mov
in
jns
ljmp
cmpsl
cmp
jmp
cmpsb
icebp
les
xchg
mov
nop
out
mov
and
rclb
sub
fidivrl
repz
xchg
sub
fnsave
std
pop
int
lods
mov
insl
icebp
stos
pop
dec
je
test
xor
scas
xchg
out
mov
sub
lahf
fsubrl
inc
lea
xor
rcl
hlt
pop
cmpsl
push
add
mov
fwait
or
lret
or
jmp
mov
shll
out
push
jp
iret
popf
push
jnp
lret
js
push
loop
popa
stos
divl
lock
ljmp
pop
and
fs
mov
popf
outsl
inc
xor
rclb
ret
stos
xchg
fcomip
lods
xor
movsb
xlat
pop
mov
pop
inc
sbb
or
rcrb
push
movsl
aam
pop
add
sahf
mov
cmp
jne
insb
lret
mov
es
sbb
mov
stos
inc
jnp
adc
cmp
mov
cmpsb
fisttps
out
popf
into
test
gs
mov
repz
jae
fxch
ret
cmpsb
ss
mov
push
hlt
add
mov
mov
cltd
ds
imul
popa
das
mov
stc
out
xor
mov
int
push
fsubrl
xchg
adc
test
xor
rcll
gs
cmp
dec
stos
mov
out
mov
sub
or
mov
adc
mov
jne
scas
mov
mov
ret
data16
adc
test
jae
and
inc
pushf
mov
mov
mov
fnstsw
pusha
imul
xchg
or
and
lds
mov
mov
xchg
nop
cmp
lock
push
mov
test
loope
aam
sbb
inc
inc
cmpsl
insb
les
out
mov
pcmpgtw
pop
xchg
add
jle
or
outsl
fdivrp
and
dec
jmp
mov
popa
shrb
inc
cmpl
adc
cmp
sub
fimuls
add
or
adc
std
dec
inc
lret
inc
and
jg
dec
cs
mov
lock
popa
mov
ror
jnp
repz
inc
mov
ss
cmpsb
cld
fisubs
xor
jae
dec
cmpsl
add
iret
lock
outsb
lds
mov
aaa
ds
xor
jge
pop
lods
jmp
add
fstp
jp
in
cmp
push
out
fs
xchg
pop
cmp
jo
int3
xchg
mov
cmc
cwtl
popa
mov
sarl
fs
pop
xchg
rep
push
xchg
xchg
lahf
jg
jp
stos
adc
pop
jns
test
sti
rcll
mov
faddp
jbe
xchg
and
mov
sbb
xchg
jns
cmpl
out
push
push
xchg
into
push
xor
or
and
add
in
loopne
push
inc
sub
inc
mov
hlt
cld
and
push
xchg
mov
insb
es
mov
scas
nop
sbb
sub
mov
fwait
push
es
loop
push
or
leave
enter
push
pop
aaa
in
sbb
xchg
xor
adc
popf
cld
xor
jns
in
mov
or
mov
sub
push
fisubl
js
enter
je
cli
aam
lret
sub
push
xchg
sbb
popf
clc
insb
sahf
dec
stos
ljmp
clc
cmp
dec
mov
lret
gs
adc
stc
popf
imul
and
jmp
inc
in
data16
or
mov
leave
and
mov
dec
add
jb
inc
jecxz
sahf
mov
and
mov
mov
xchg
xchg
sub
daa
xlat
inc
sub
xchg
jbe
mov
mov
insl
mov
xor
mov
dec
int
popa
push
mov
xchg
push
popa
cmp
push
inc
and
cmp
cmp
dec
fildl
or
fdivrl
xlat
fstpl
std
imul
ds
push
lahf
or
sbb
les
add
sbb
sub
mov
cmp
jecxz
sbbb
je
repnz
cmp
mov
lods
cld
xor
cmp
cmp
jo
inc
addr16
pop
jne
into
mov
rorb
cmp
sarb
push
mov
or
out
sub
stos
xor
sbb
stos
bound
fidivrl
sub
push
outsl
jmp
daa
decb
dec
or
lcall
hlt
adc
jge
xlat
cltd
sub
iret
mov
dec
std
pusha
scas
inc
rorb
jle
dec
jno
and
negb
mov
cmp
add
insb
mov
sub
xchg
je
or
and
in
cmc
loop
pop
mov
stc
sbb
ljmp
mov
mov
pop
mov
movsl
mov
adc
out
jo
stc
in
popl
shll
push
in
pop
scas
cs
aam
sub
fcompl
addb
push
jns
push
mov
push
pushf
gs
cltd
sub
push
loopne
or
rolb
push
lods
mov
add
sbb
pop
rclb
insb
and
cmp
inc
rcll
push
xchg
int3
xchg
xchg
mov
dec
inc
faddl
out
stc
por
mov
mov
out
iret
cmp
inc
jo
jae
inc
and
or
or
lock
fimull
lea
dec
stos
sub
sbb
inc
mov
sub
pop
add
cwtl
add
pop
call
rol
xlat
aas
pop
add
adc
dec
pop
call
enter
stos
mov
daa
jge
shll
adc
fnstcw
dec
lret
mov
out
mov
adc
mov
xchg
shll
mov
mov
sahf
xor
mov
and
jg
leave
sub
push
orb
xor
dec
cmp
repz
push
mov
cmovno
add
aam
push
and
repnz
inc
lods
push
xor
jnp
mov
test
leave
cmc
adc
shl
mov
and
xchg
repz
je
call
sbbl
mov
mov
sub
and
scas
fisttps
outsb
cmc
hlt
sbb
pop
sbb
imull
push
push
mov
pop
das
or
sbb
movsl
and
push
movsb
or
lret
or
mov
imulb
mov
mov
adc
mov
jo
cli
adc
jg
scas
and
clc
adc
xor
shlb
sbb
dec
test
insb
jbe
jae
xor
mov
lret
push
addr16
jmp
pop
add
dec
inc
call
pop
inc
jmp
or
out
scas
je
lods
daa
pop
sub
cld
mov
imul
ret
jno
push
mov
mov
mov
insl
adc
loop
sbb
sub
aas
out
jmp
dec
fdivl
cld
cmp
and
iret
lea
xchg
outsb
shrb
fcoms
testl
add
gs
mov
sub
pushf
movsb
dec
aam
push
xor
inc
sub
and
aad
adc
pop
push
sbb
inc
push
or
dec
xor
xor
sub
cli
jge
sbb
mov
cs
mov
cld
hlt
aad
jg
popa
inc
aaa
fdivrs
ds
add
lods
stc
test
inc
movsb
in
dec
mov
sbb
sbb
hlt
inc
lcall
dec
popa
fimull
cmp
push
test
mov
fmull
dec
inc
stos
and
pop
jge
push
sub
les
int3
outsb
mov
arpl
lods
adc
xchg
cmp
les
negl
jmp
mov
lahf
pop
addl
add
mov
and
xchg
and
jo
push
xchg
sub
dec
sti
mov
sub
outsl
js
ljmp
pop
inc
hlt
jns
push
lock
dec
mov
popa
out
pop
mov
xchg
clc
pop
dec
dec
enter
adc
sub
xchg
sub
filds
loopne
movsb
and
add
cltd
jns
stos
mov
aad
mov
scas
jl
sarb
jnp
test
clc
sbb
dec
cmc
or
xor
push
sub
sbb
loop
add
cmp
repnz
mov
inc
scas
and
mov
add
xor
and
push
mov
je
icebp
sbb
aas
push
in
lods
lret
inc
or
lcall
mov
shll
test
or
sbb
pop
cmp
out
push
jno
rorl
adc
xchg
xlat
sbb
sahf
xchg
or
and
addr16
rolb
popf
pop
xor
adc
imul
divl
xor
sbb
popf
xlat
outsb
in
into
ret
cmp
aaa
adc
add
mov
or
mov
xor
mov
jb
mov
push
sar
sub
scas
jle
xor
xchg
xor
mov
xchg
fdivrl
sbb
push
in
or
fnstsw
mov
scas
pusha
sub
sub
adc
call
adc
sub
out
iret
push
lcall
cltd
std
adc
xor
popf
inc
jmp
cs
rcrb
dec
mov
jbe
fwait
and
test
loop
fisubl
fwait
dec
pop
in
int3
std
leave
int
mov
mov
ret
pop
push
test
rolb
jmp
sub
add
mov
gs
or
inc
fwait
test
in
and
add
jae
hlt
mov
lock
xor
push
push
gs
loop
xor
push
stc
xchg
jnp
pop
adc
test
addr16
scas
mov
dec
dec
inc
mov
adc
or
mov
movl
call
xchg
mov
mov
mov
push
mov
out
gs
iret
push
pop
cli
push
xor
or
rolb
xorb
xor
jle
cmpsl
rorb
sub
push
push
call
or
adc
stos
xorps
dec
std
jge
out
mov
xchg
adc
stc
mov
sub
lahf
jmp
sbb
push
and
addl
cmp
sbbl
sub
mov
cltd
hlt
push
mov
std
insl
ss
aad
mov
aas
dec
add
mov
sbb
or
push
push
test
adc
inc
cmp
inc
stc
jbe
cltd
adc
mov
push
aam
sub
adc
cmp
adc
cwtl
lret
aas
jecxz
ds
mov
and
xchg
adc
jnp
fsubl
int
sub
inc
adc
add
jne
cmp
arpl
mov
das
iret
push
fisubs
and
sub
les
mov
cmpsl
mov
push
jecxz
cmp
lret
addr16
ds
fstps
inc
cmc
aas
movsl
mov
cmp
jge
test
gs
lods
fnstsw
jmp
mov
mov
inc
mov
loopne
leave
daa
das
xlat
fsub
jnp
sbb
fstl
push
and
clc
pop
sub
out
push
lret
mov
xor
in
dec
shlb
hlt
loopne
sub
in
insl
xchg
mov
lock
xchg
mov
lret
loope
aaa
clc
gs
xchg
mov
lock
dec
into
or
popa
add
add
lods
fdivr
mov
pop
int3
loopne
je
mov
fisubrs
sarl
repnz
ja
dec
xchg
push
or
xchg
or
cmp
jge
imul
mov
add
xor
ljmp
adc
pop
jge
out
lods
push
rcll
mov
ror
lahf
out
mov
mov
and
aad
pop
mov
mov
popf
nop
lret
pop
mov
lahf
dec
es
push
fwait
lods
je
or
pop
mov
cmpsl
push
stos
push
test
das
call
add
dec
fstpt
dec
or
test
xor
xor
mov
xor
dec
xchg
sub
cltd
push
roll
add
pop
and
or
les
mov
insl
pop
mov
idivl
cltd
cmp
xor
xor
xchg
mov
push
pop
jecxz
call
insb
enter
mov
and
cmp
xchg
push
cmp
rol
out
pop
cmp
test
adc
push
ss
dec
pop
sbb
out
push
add
ja
jge
push
and
push
ds
cmp
insb
cltd
mov
pushf
adc
push
enter
divb
mov
movsb
xor
inc
lds
data16
gs
cmpb
cwtl
js
outsb
add
sub
stos
enter
shll
xor
xor
ljmp
dec
xchg
mov
js
push
jle
pushf
gs
lret
pop
cmpl
inc
leave
push
mov
sbb
repnz
xchg
add
cmpsl
jae
inc
stos
or
jge
inc
jbe
es
mov
insl
cmp
sbb
movsl
mov
out
inc
test
fcomps
dec
add
inc
push
lea
xchg
xchg
mov
mov
ret
mov
jecxz
fdivl
cli
sbb
push
or
push
ss
aam
in
xchg
addr16
and
jb
sub
or
in
int
outsb
imul
and
int3
jnp
mov
call
xchg
pop
push
fwait
mov
pop
pop
inc
popa
xchg
dec
add
xchg
and
cltd
aam
and
dec
inc
push
push
jne
lds
mov
sub
jmp
xchg
cmp
imul
sbb
add
jmp
adc
jecxz
dec
loope
lods
jp
pop
int3
mov
sbb
cmc
aam
pop
jmp
ss
push
add
adc
or
das
mov
outsl
hlt
out
push
int
fdivs
ss
es
cs
int3
and
stos
pop
rcll
add
pop
std
int
icebp
lea
or
cmc
in
adc
xor
int
sbb
imul
popf
mov
jecxz
fcmovnb
sub
out
or
or
fadds
sub
in
outsb
pop
scas
adc
xchg
xchg
scas
and
dec
push
shl
adc
pop
pop
mov
scas
sbb
mov
xor
cwtl
jbe
movsb
pushf
push
xor
je
push
mov
aam
push
or
test
aam
push
pusha
test
sbb
dec
les
push
insb
cmc
js
and
pop
or
movsl
testb
mov
push
sbb
cmpb
cmc
lret
push
insb
call
frstor
adc
mov
dec
sbb
cmc
add
add
jo
xchg
xchg
mov
test
rcll
and
jo
xor
inc
inc
inc
xor
push
adc
ds
jge
lods
ret
fcoml
scas
adc
mov
lret
ret
fldenv
jns
xor
out
inc
mov
lea
add
lcall
mov
cli
dec
lret
pop
lcall
jmp
aas
popf
fdivr
push
nop
loop
rorl
mov
mov
cwtl
inc
inc
movsl
cmovge
push
imul
push
add
cmp
xchg
gs
pop
sarb
stc
fidivl
jmp
sbb
out
xor
mov
lcall
sub
pop
sarb
filds
test
mov
or
push
pop
push
dec
inc
jle
dec
sub
rclb
xchg
xchg
cmp
jns
push
sbb
and
out
jne
mov
sub
inc
bnd
inc
mov
mov
xor
cmp
pop
rcrb
jae
push
xor
xlat
lret
push
in
in
aas
pop
shlb
gs
mov
sub
push
pop
cmpsl
push
xchg
push
cmpsb
xchg
push
add
push
dec
out
adc
inc
mov
mov
push
jo
inc
dec
data16
repz
dec
dec
arpl
xchg
cli
bound
loop
ret
mov
sti
and
jecxz
orl
bound
mov
dec
stos
rcrl
xor
jbe
es
enter
xor
stos
js
mov
fstpt
cmp
lcall
leave
sub
lahf
and
pushf
add
iret
repz
sti
xchg
std
testl
push
movsl
and
orb
bound
and
pop
sbb
jge
xor
push
gs
fstpl
bound
xor
jne
push
fstl
xor
je
mov
xor
cmp
notb
cmc
mov
inc
rolb
or
mov
lods
ja
sub
or
lret
lea
mov
test
fstpt
cs
mov
in
or
mov
jo
add
jns
dec
fiadds
insb
inc
xchg
aad
push
pop
fwait
ds
mov
xchg
into
add
xchg
cmp
xchg
fcom
dec
ret
mov
inc
inc
iret
fimull
clc
mov
fsubrp
push
mov
ret
aas
and
out
add
out
jns
daa
dec
in
rclb
inc
mov
mov
jnp
pop
pop
mov
jnp
inc
std
sbb
pusha
or
add
add
std
cmp
std
dec
jae
jge
cli
popa
aas
add
inc
pop
lods
cli
jg
repnz
ds
test
mov
lcall
push
aad
mov
enter
ret
cmpsb
mov
xchg
inc
lea
pop
ja,pt
and
inc
dec
cmp
fdivr
push
fmulp
in
insl
daa
movsl
mov
adc
pusha
pop
push
imul
cmp
push
dec
shrl
lret
or
dec
icebp
aas
xchg
repnz
fmull
mov
inc
cmp
xor
es
cmp
dec
push
jbe
mov
adc
cmpsl
pop
aad
add
or
jns
data16
push
and
rcr
lahf
cmp
lock
jecxz
mov
pop
in
inc
jb
je
les
fsts
enter
adc
lret
clc
push
mov
fwait
and
mov
sbb
xchg
dec
cmc
cmpsb
mov
push
hlt
inc
cmpsb
and
cmpsl
adc
sbb
or
jne
xchg
push
lahf
mov
mov
xchg
cmp
mov
shll
dec
test
pushf
mov
aaa
inc
cwtl
stos
xchg
xchg
jecxz
add
inc
mov
pop
mov
mov
lea
inc
dec
sub
cmp
push
mov
mov
cmp
pop
clc
xor
mov
mov
loopne,pt
arpl
jp
test
xor
jmp
clc
outsl
int3
orb
mov
and
jnp
xchg
pop
rolb
mov
push
repnz
adc
in
or
mov
aad
jle
push
rcll
lds
loop
cltd
jns
out
pop
movsl
push
bound
sbb
shlb
xlat
out
mov
jp
cmp
pop
or
dec
add
adc
jge
repz
inc
aam
pop
ret
insl
test
mov
mov
imull
xor
mov
gs
add
flds
outsb
adc
dec
pop
add
je
ljmp
add
push
cmpsl
fcomps
mov
icebp
orb
scas
movsb
sub
and
in
jne
push
or
mov
adc
test
pusha
xchg
test
lds
jnp
adc
cmp
mov
adc
sbb
pop
dec
push
idivb
mov
mov
in
mov
mov
outsb
mov
adc
int3
push
dec
fucomip
imul
sti
jns
mov
cmc
mov
das
jno
out
push
insb
std
cmc
out
lret
ljmp
sub
jb
push
lahf
popf
and
mov
faddp
xor
and
jmp
jns
adcl
clc
mov
adc
fcmovnb
lcall
lahf
sub
adc
shlb
push
pop
push
imul
stc
mov
test
adc
testb
sbb
push
out
aad
inc
cmp
stc
xor
jg
int3
in
pop
fldcw
lcall
add
popa
cmp
pop
arpl
push
push
fistl
in
sub
inc
sbb
mov
icebp
add
mov
cmpsl
lods
xchg
pop
adc
xchg
loopne
xchg
mov
mov
aad
jnp
lahf
dec
sub
stos
sbb
divl
jnp
popf
add
jno
psllw
pop
movsl
add
inc
xchg
test
jl
cmpsb
movsl
and
fildl
imul
cmc
sbb
mov
xchg
ficoml
jg
cmpl
loop
jns
lock
mov
scas
out
lods
fdivs
lcall
test
outsl
and
sbb
sbb
push
loop
sarl
dec
xchg
sub
fs
sbb
negl
push
mov
sbb
insl
popa
popa
dec
or
xor
inc
cmp
mov
mov
mov
mov
inc
sbb
iret
es
arpl
or
les
cmp
adc
inc
push
jae
div
inc
sub
dec
mov
stc
aam
call
dec
add
out
dec
mov
sbb
subb
push
xchg
mov
pushw
movsb
or
cmpsb
aas
andl
orl
testl
nop
cmp
cmp
lret
sbb
mov
cmp
sbb
and
mov
jmp
cmp
sbb
jne
xor
inc
or
mov
test
int3
jg
loope
shlb
sbb
into
push
popf
xlat
sbb
sarb
ss
rcr
pop
push
aad
out
pop
cmp
jle
push
add
ret
push
loopne
xchg
aaa
sbbl
push
pop
cmpsl
aad
mov
lods
gs
jg
mov
xor
neg
xor
and
push
sahf
dec
mov
adc
pushf
insl
mov
inc
pop
dec
cmpsl
and
jecxz
jge
sbb
stc
xchg
cli
stos
add
xor
aad
popa
jg
jae
sub
js
inc
out
pusha
fsts
ljmp
and
pushf
sbb
mov
mov
pusha
div
bound
mov
mov
mov
je
cwtl
xchg
sub
cmp
sbb
sbb
ret
mov
dec
cmpsb
insl
les
fdivl
jmp
ljmp
fldl2t
add
jg
daa
out
loopne
mov
cmc
out
xchg
sbb
and
insl
insl
sbb
mov
pop
test
adc
fldt
jecxz
or
mov
into
call
xor
pop
push
jl
popl
mov
add
into
and
push
mov
pop
ds
dec
jge
push
jp
sbb
ficomps
and
xchg
and
add
adc
and
orl
pop
xchg
lcall
aad
rorb
sti
enter
int
xor
jge
mov
fstl
push
jmp
pop
mov
xchg
xor
jg
or
xchg
ljmp
jp
vunpckhps
andl
je
cmpsb
add
dec
bound
pop
shr
aad
mov
pop
adc
int
shrl
xchg
or
mov
repz
or
pop
sbb
mov
and
repnz
push
dec
hlt
out
lret
or
dec
sbb
dec
in
push
mov
int3
xor
sub
mov
sub
xchg
pop
mov
xchg
mov
mov
fwait
ret
sbb
xchg
lret
sub
mov
or
fwait
loop
icebp
inc
out
jb
mov
sub
mov
lahf
sbb
or
enter
cmp
enter
scas
movsl
and
scas
lods
fdivrp
lret
add
dec
lea
xlat
inc
xchg
and
fwait
mov
cmp
xor
lods
jmp
xchg
mov
cmpsl
rcrb
mov
test
jns
nop
cmp
pop
inc
xchg
cmpsb
jecxz
dec
jnp
mov
inc
out
add
dec
xor
push
push
push
jl
inc
inc
pop
loope
xchg
dec
cmpsl
mulb
arpl
mov
inc
sarb
scas
stos
lds
xor
mov
icebp
lahf
xor
mov
sbb
sti
dec
jns
xchg
scas
jge
les
push
cmp
push
pop
jl
jns
and
les
arpl
adc
cld
aas
inc
inc
mov
mov
fldlg2
icebp
sub
mov
cmpsl
cmpl
push
sbb
test
xorl
pop
int
pop
fldenv
lret
lret
stos
xor
mov
mov
pop
sbb
ljmp
hlt
aaa
mov
or
cmp
xchg
push
dec
ljmp
dec
xchg
sbb
testl
xor
and
add
testl
push
mov
jle
gs
xor
and
xor
bound
popf
enter
hlt
daa
cmp
stc
dec
mov
sbb
das
pop
mov
mov
bound
push
ret
jecxz
pop
into
add
fs
pop
aaa
pop
shlb
mov
dec
mov
adc
outsb
mov
bound
loop
jle
std
in
jecxz
or
cmpsb
shl
mov
divl
or
mov
es
lahf
xchg
dec
inc
xor
jmp
je
in
xchg
cmp
mov
sbbb
xor
les
add
mov
daa
dec
mov
pop
xchg
inc
out
loope
mov
or
push
jp
adc
inc
mov
xor
and
push
aaa
jno
jnp
addr16
aas
int
repnz
jg
adc
jne
shrl
adc
ljmp
inc
xor
ret
xchg
adc
inc
test
lock
addr16
cs
js
mov
add
jb
xchg
mov
movsb
fsts
push
insl
push
cld
xchg
arpl
insb
xor
in
push
sbb
fstps
push
fiadds
sarl
xor
pop
dec
fnstsw
out
jne
cmp
scas
fwait
bound
push
sub
push
push
sub
dec
das
pop
push
pop
lods
shlb
hlt
fiadds
in
sub
sbb
popa
and
jnp
pusha
and
push
fcomps
or
clc
push
insl
dec
lret
cltd
insb
lea
or
ret
and
movsl
jg
adc
jo
popf
sbb
jg
lock
lahf
stos
mov
fs
out
aam
sub
test
callw
gs
in
dec
sbb
ja
dec
psubusb
mov
lret
xor
add
lods
xchg
pop
insl
pop
outsb
icebp
mov
movsb
or
inc
fldt
loop
lds
xor
cltd
imul
jae
sub
test
pop
movsb
sub
cs
mov
mov
sbb
dec
xchg
nop
mov
push
sub
daa
insb
inc
sub
enter
fcmovne
hlt
xchg
add
mov
out
xor
and
rcrb
dec
inc
cmpsl
dec
adc
jl
imul
jbe
adc
and
inc
pop
cltd
xchg
mov
jno
jae
andl
enter
mov
js
inc
out
jle
sti
imul
aad
adc
das
jl
push
or
push
adc
lcall
and
sarl
sbbb
xorl
inc
nop
and
pusha
test
xor
lcall
and
mulb
insb
fdiv
mov
push
bound
push
ljmp
mov
fdivrs
mov
push
push
add
lock
and
cmp
adc
push
push
inc
addr16
loop
mov
fldenv
cli
filds
sarl
dec
int3
dec
pushf
dec
fwait
dec
or
and
pop
out
xor
pop
mov
and
daa
sbb
fisubrs
shrl
push
and
adc
xor
pushf
ret
outsb
loop
xchg
call
into
mov
push
pusha
js
cld
xchg
movl
cmpsl
xchg
mov
mov
inc
roll
jge
sbb
loope
mov
add
xchg
push
js
jp
daa
or
out
enter
les
or
jae
fstps
xchg
das
mov
fmull
je
scas
mov
push
cmpsb
mov
in
push
xor
ret
adc
xchg
mov
pop
cmp
cmc
orl
test
pop
jo
and
rcl
cmp
out
lods
scas
cmovp
fsubrl
xchg
or
popa
imulb
jbe
in
dec
cwtl
mov
dec
mov
clc
xchg
add
inc
cltd
and
ljmp
dec
jmp
or
or
into
xchg
cmp
or
hlt
push
in
push
out
les
jge
fisttps
adc
jo
cmpsb
repnz
gs
mov
mov
lcall
daa
mov
stc
es
mov
mov
imul
pop
fsubr
dec
ret
pop
sahf
mov
shr
and
scas
ljmp
dec
cmc
mov
enter
arpl
xchg
das
fsubr
pop
pop
test
push
jecxz
xchg
cmpsb
into
flds
ds
out
push
jecxz
mov
dec
je
adc
fistps
lock
bound
ret
sub
mov
push
sbb
cmpsl
and
jl
into
leave
out
std
es
and
sub
jecxz
shr
inc
xchg
inc
and
adc
inc
push
mov
sub
fistpl
fildl
lret
fidivrs
stos
sbb
push
mov
shr
add
mov
test
ss
aad
aaa
fwait
sahf
fiadds
jne
mov
mov
mov
push
outsl
xor
aad
xor
insb
sub
outsb
ljmp
mov
jp
cmp
mov
adc
es
dec
xor
add
sub
enter
lcall
faddl
and
mov
insl
add
movsl
adc
jge
idivl
mov
sti
cwtl
xchg
outsb
jno
dec
fistps
jb
push
xchg
popa
shrb
lretw
stos
movsb
xchg
adc
mov
or
loopne
mov
xor
xchg
loope
sub
lods
sub
in
clc
pop
mov
and
inc
push
cmc
shll
ret
mov
push
dec
dec
cmp
mov
daa
jmp
cmp
mov
sub
push
and
mov
rcrl
jmp
mov
adc
lock
mov
sub
mov
mov
adc
sbb
stos
push
dec
pushf
mov
pop
fs
xchg
cmp
push
test
push
xchg
lods
sahf
dec
jbe
loope
mov
push
dec
lods
mov
cld
mov
cli
test
fistpll
mov
cmp
int
daa
jecxz
pop
xchg
filds
das
pop
movsl
cmp
jge
mov
shll
cmp
push
mov
mov
push
rolb
pop
out
pop
dec
xchg
mov
jmp
jl
adc
rol
xchg
cltd
bnd
or
mov
add
sub
push
stc
test
ret
lahf
int
repz
adc
out
arpl
out
dec
pop
fisubl
xchg
test
js
call
push
mov
xchg
sar
cwtl
mov
test
xorb
lcall
dec
sub
inc
fists
xchg
dec
int
sub
sysexit
mov
leave
lds
repz
push
inc
out
ret
rcrb
je
push
add
mull
ljmp
jno
fwait
call
mov
and
add
enter
ja
dec
mov
shrl
popa
sbb
sbb
xor
ficoml
lahf
push
dec
xor
loopne
mov
test
jg
das
test
pop
clc
push
test
lea
inc
jp
add
jge
clc
movsb
push
mov
addr16
dec
movsb
cmp
scas
aam
pop
push
or
scas
add
push
sub
pop
shrb
xor
pop
xchg
push
push
mov
shll
mov
pop
cld
push
sarb
rcr
les
scas
fisttps
inc
fidivl
insl
cmp
decb
push
sub
push
mov
mov
cltd
fcoml
pop
jns
stc
psadbw
or
jge
mov
hlt
int
xchg
shl
divl
imul
push
mov
shlb
insl
loope
enter
cmp
stos
cmp
or
cmp
mov
sbb
call
je
mov
add
jp
insl
ds
xchg
jo
imul
cwtl
scas
mov
cmp
push
jl
xchg
or
jge
dec
xchg
push
frstor
mov
rcrb
inc
xor
lds
sti
push
inc
cmp
rolb
add
push
pop
push
sub
in
int
ret
mov
mov
mov
mov
fcmovbe
mov
popa
lahf
les
adc
js
dec
outsl
mov
es
mov
ret
insl
mov
sub
jae
negl
cmpsl
jge
icebp
dec
push
cltd
jmp
int3
mov
jecxz
mull
aam
xchg
in
dec
insl
inc
nop
sub
inc
call
mov
faddl
aaa
adcl
adc
xchg
out
out
xchg
dec
mov
in
mov
mov
lret
loope
mov
jno
es
fsts
lret
loopne
out
lods
inc
push
sub
fistpl
or
int
sub
test
ret
call
sti
sahf
ret
mov
sbb
xor
jg
in
insl
mov
rcll
insl
int3
or
and
je
or
push
add
ret
gs
lret
push
arpl
dec
lods
loopne
mov
ljmp
hlt
mov
in
cs
addr16
dec
fbstp
inc
xor
and
loop
movsl
sub
mov
fimuls
arpl
dec
pop
insb
or
adc
inc
stc
test
fisubs
pop
je
mov
rorl
adc
outsl
repz
sub
daa
call
add
xor
filds
or
das
aam
and
xor
xor
fisttpll
and
sub
pop
cwtl
hlt
roll
xor
fld
mov
and
rcrl
test
in
xor
fnsave
movsb
push
dec
mov
and
jne
pop
mov
xchg
data16
repz
in
arpl
insl
xchg
push
pop
dec
ss
pop
mov
or
or
loop
rcrl
andl
arpl
dec
jge
lret
fsts
scas
cli
cwtl
shll
xchg
ljmp
and
outsl
cld
scas
mov
adc
mov
sub
and
dec
nop
sub
adc
fidivs
jp
mov
jae
gs
sub
rolb
pop
xchg
mov
push
stc
jbe
repnz
nop
ret
and
adc
and
cli
jbe
add
loop
push
int3
cli
add
cmpsb
fs
sti
pop
inc
insb
jo
jns
jmp
inc
into
insb
sbb
push
loopne
xor
sub
addr16
in
out
pop
int
mov
xor
push
add
aaa
insb
dec
pop
scas
gs
bound
or
lock
out
das
clc
mov
fnstsw
dec
jg
arpl
fbstp
mov
int
int3
jne
in
cmp
inc
sub
jae
inc
jle
xor
dec
pop
pop
out
pop
xor
mov
mov
inc
sbb
jmp
ficoml
loope
mov
dec
neg
cmpsl
and
xchg
sub
out
push
xchg
adc
sub
push
dec
or
mov
das
mov
cmpsl
cmp
xchg
adc
sub
scas
cld
mov
mov
aaa
sbb
xchg
adc
jp
cmc
push
int3
cltd
jmp
dec
nop
pop
andl
mov
or
jno
pop
jl
pop
mov
push
pop
cmp
js
fistps
add
push
sahf
leave
xchg
or
push
inc
mov
dec
lcall
push
sub
es
scas
stos
inc
test
enter
sbb
ja
and
addb
sub
rcll
cmp
push
push
insb
mov
je
adc
sub
pusha
cld
dec
pop
adc
mov
mov
xor
cmc
mov
jl
shr
jg
cmp
pop
bound
xor
dec
push
mov
inc
into
scas
mov
lds
xor
test
adc
pop
push
and
jno
pop
fimuls
sbb
mov
xchg
sahf
push
xor
popf
scas
daa
sarb
roll
cmp
cmp
popf
stos
cs
add
hlt
add
push
inc
in
in
add
xchg
aaa
push
repz
cld
sbb
repnz
shrb
push
and
adc
xchg
or
test
dec
cmp
mov
imul
inc
ja
mov
lods
mov
xchg
into
jge
rcll
fistps
push
int
pop
outsb
and
inc
popa
filds
sbb
push
jge
loope
lock
dec
adcl
pop
add
add
rep
sub
push
pop
fdivs
data16
and
leave
lret
xor
add
ja
push
mulb
xchg
std
ds
lods
int
jne
fsub
arpl
inc
sbb
xchg
mov
adc
push
movsl
je
jb
aas
imul
pop
lock
sub
mov
push
or
sbb
mov
jne
dec
xor
ret
adc
jns
mov
arpl
mov
adc
mov
lahf
pop
push
push
pop
mov
mov
or
push
mov
jg
shrl
xchg
jp
cs
sbb
dec
jecxz
int
jl
aaa
out
xchg
and
sbb
inc
mov
cwtl
les
jmp
adc
pushf
add
mov
sbb
dec
xor
and
out
push
sbb
cld
adcb
popa
in
pop
pop
insb
lea
jne
nop
sahf
test
out
push
mulb
insb
loop
sbb
fdivl
fs
xchg
jmp
movsl
dec
pop
pop
cmp
xchg
inc
ds
inc
nop
cmp
jp
in
js
dec
push
jo
sub
push
je
xchg
mov
jle
mov
and
rol
addl
xchg
inc
lcall
out
jo
in
mov
ret
rol
cmc
loop
mov
in
push
inc
dec
push
pop
push
testl
cmc
loope
or
data16
pop
mov
lds
or
mov
std
jae
push
aam
insb
mov
ret
pop
scas
pushf
fs
movsb
outsl
es
sbb
sbb
into
aas
add
int3
pushf
jbe
cmpsb
mov
push
mov
push
daa
inc
or
xor
adc
cmp
mov
roll
gs
in
test
pop
mov
int
dec
mov
icebp
jnp
mov
fisubrl
divb
pusha
fimull
sub
xchg
xor
mov
mov
les
xor
push
mov
xor
and
pop
sub
fwait
fwait
add
enter
ljmp
test
cmp
xchg
inc
out
pop
push
inc
mov
shll
pop
das
add
or
adc
sbb
jecxz
inc
stos
hlt
push
stos
sub
xchg
out
insb
stos
cwtl
rcll
testb
fs
jae
in
into
stc
xorb
mov
imul
dec
aam
int
sbb
ret
popa
xor
xchg
mov
push
push
rclb
inc
sbb
pop
mov
test
loope
sbb
cltd
pop
outsb
push
imul
push
shl
clc
js
shll
mov
xchg
push
mov
add
sbb
xor
or
xlat
push
dec
mov
inc
scas
repnz
and
and
sbb
and
popf
mov
sti
pop
jo
fnstcw
or
stc
adc
xor
or
lds
out
test
xchg
rorl
xor
ret
je
jp
lret
stos
lahf
jle
xchg
loopne
andb
adc
cmp
imull
in
cmpsb
push
inc
scas
cltd
icebp
pop
std
cltd
ret
fistpll
mov
and
in
push
popa
mov
add
and
aas
or
sub
xchg
inc
lcall
inc
push
out
shl
fcoms
inc
xchg
mov
pop
sbb
shrl
or
add
xchg
ficoms
add
dec
pop
mov
subl
pop
jp
in
out
jnp
cmp
insl
jns
jle
shrl
mov
pop
dec
jnp
mov
test
movb
sbb
testl
push
out
pushf
push
lret
clc
stc
mov
jnp
push
leave
mov
insl
leave
shrb
sbb
dec
jle
dec
xchg
pop
xchg
fwait
pusha
fidivrl
cltd
push
adc
mov
pop
repz
test
inc
mov
xchg
pop
and
loopne
pop
cs
into
or
lret
mov
cmp
mov
std
fsubrs
mov
xor
sbb
cmp
les
or
aas
insl
pop
lcall
ljmp
xor
push
in
mov
fdivrl
mov
cmp
sbb
pop
jmp
xchg
xchg
lds
outsl
leave
xor
je
cmp
jmp
in
pop
ds
out
scas
test
jl
inc
sub
or
fstl
jmp
xor
shrb
pop
aaa
cmp
jg
scas
lret
sbb
xor
push
comiss
pop
popf
lods
inc
jge
addr16
mov
dec
movsl
cli
pop
mov
lods
add
repnz
cmc
cmpb
cmc
adc
mov
shlb
xor
adc
leave
lds
dec
loop
push
aam
cli
outsl
push
sub
jle
pop
cmpsl
fidivrl
cmp
inc
xor
cld
cwtl
jge
ja
aaa
rep
mov
jae
xor
xchg
scas
or
adc
sbb
dec
fisubs
sub
cmp
loop
enter
aam
pop
adc
jno
xchg
mov
test
add
xor
push
push
and
or
xlat
into
mov
test
gs
xor
ds
aam
pop
xchg
test
shll
sub
ja
notl
loop
lcall
scas
out
jl
jle
push
and
sbb
jecxz
stc
add
rcrb
sub
js
inc
fisubrs
add
pop
or
ret
andb
jae
cmp
and
lods
cmp
addb
push
mov
xor
pop
and
sub
insl
add
jno
or
out
push
mov
pusha
popa
cmovno
push
mov
out
repz
mov
or
or
arpl
xor
ret
nop
or
mov
sbb
icebp
and
and
sti
xchg
pop
mov
xchg
int
pusha
dec
mov
sbb
or
adc
movsb
cwtl
je
sub
mov
das
cmpsl
dec
loope
call
and
inc
mov
loope
ljmp
cs
sub
std
stos
test
push
pop
xor
test
push
dec
pop
out
movsl
mov
or
mov
add
xchg
inc
inc
daa
cs
stos
icebp
or
lods
lahf
imul
mov
pop
mov
insl
popa
dec
mov
dec
mov
popf
and
popf
dec
call
dec
xchg
lea
adc
pop
jmp
cmp
loop
or
rcrb
outsb
ret
out
testb
push
shlb
push
test
and
xor
and
push
xor
cmpsb
in
outsb
add
xor
jne
rorl
lods
gs
push
dec
jp
imul
mov
adcb
sbb
icebp
out
fisttps
dec
sbb
pop
push
mov
aaa
insb
or
inc
stc
mov
je
rcll
aam
andb
xchg
sub
adc
or
mov
lods
jb
add
inc
mov
cltd
cmp
testb
and
pop
js
xchg
mov
fwait
icebp
scas
or
leave
mov
mov
movsl
fcmove
mov
adc
lods
sub
add
cmove
xchg
push
xor
mov
in
mov
jo
sahf
rcl
mov
int
jle
cmp
je
xchg
int3
mov
mov
fstl
cmp
add
push
mov
jg
test
cmpsb
pop
imul
sub
sub
jg
mov
or
sub
fisubl
jp
adc
inc
sub
leave
insl
lods
aad
cmp
xor
mov
das
pop
outsb
loopne
cmc
mov
mov
xchg
mov
push
int3
inc
fistps
adc
push
push
mov
fsubs
addb
dec
int
loop
in
push
inc
mov
mov
mov
frstor
adc
icebp
and
add
cmp
cmpsl
and
popf
jle
cltd
pop
outsl
add
sub
cs
aas
or
sbb
mov
or
pop
idivl
mov
sbb
pusha
aad
ret
push
lods
add
xchg
inc
js
and
add
push
enter
sbb
mov
in
iret
add
mov
outsl
dec
cs
fistl
pop
add
mov
cmp
pop
lock
dec
out
mov
sar
push
sub
cs
les
lcall
insl
out
ror
cmp
scas
fdivp
jo
mov
fmul
data16
mov
fdivrs
lfs
fildll
loop
fimull
int3
mov
push
and
mov
and
loope
jo
imul
sahf
cmp
int3
sbbb
mov
subl
outsl
mov
adc
insl
outsl
loopne
rol
xchg
pop
inc
lahf
mov
inc
insl
mov
xlat
fwait
dec
jle
negb
mov
clc
jmp
imul
aad
fcompl
jns
lock
cltd
xor
pop
lahf
cs
push
mov
fwait
and
push
inc
aaa
js
pop
fiaddl
ret
sahf
sub
aad
xchg
in
mov
push
mov
pop
lea
and
add
pop
lret
int
movl
jmp
cmp
push
push
lods
xchg
mov
rorl
sub
sub
test
mov
shrb
jp
into
xchg
pop
push
push
jecxz
pop
rcrb
mov
adc
mov
or
xchg
cmp
add
dec
mov
add
mov
inc
loope
cmp
outsl
clc
pop
push
nop
addr16
cmp
aad
xor
fmul
lcall
orb
cmp
xor
and
cmp
ret
pop
dec
push
jnp
sub
pop
test
dec
sbbl
or
sbb
mov
jecxz
and
mov
pop
fsubrs
dec
lods
shll
pop
ret
adc
cmpsb
ss
adc
jae
mov
iret
fcompl
inc
shlb
insb
jbe
sbb
inc
sub
fidivl
cmpsl
mov
outsb
push
mov
js
xor
mov
or
sbb
pop
es
dec
mov
gs
jns
xor
cwtl
iret
cs
aam
ljmp
clc
dec
mov
add
popf
pop
pushf
mov
mov
sub
pop
or
push
mov
loopne
lea
xchg
and
inc
fwait
stos
fdiv
adcl
mov
adc
imul
adc
adc
addr16
sbb
fwait
pushf
cmp
fldl
xlat
fcoml
add
ret
pop
push
aam
shlb
jmp
lods
cmpsb
stos
int3
popf
inc
jl
push
insl
xor
test
bound
shr
mov
inc
mov
adc
das
mov
jl
mov
add
jg
fxch
adc
or
mov
xlat
bound
adc
addr16
push
scas
inc
gs
fadd
fisubrs
add
pop
rclb
sub
je
cmp
pop
xor
inc
fcomi
hlt
repz
fcoml
ds
add
sub
cmp
mov
pusha
xchg
mov
iret
sbb
push
inc
sub
dec
clc
imul
sbb
movsl
dec
loopne
and
xlat
bound
jne
insb
mov
mov
lds
push
sbb
jo
mov
dec
mov
pop
notb
push
jmp
jbe
or
test
mov
aaa
jne
jbe
jp
or
ffreep
mov
cmp
je
pop
xlat
inc
dec
inc
push
test
ficomps
cmp
push
lock
or
jecxz
pop
cmc
bound
adc
add
shlb
pop
fdivrl
jg
lods
pop
lods
sbb
sbb
adc
enter
push
movsb
adc
xor
andb
sahf
shl
in
pop
clc
daa
dec
cmp
mov
notb
test
push
jnp
jecxz
and
mov
enter
adc
adc
cmp
pop
xor
xchg
pop
cs
mov
icebp
xchg
cmpsl
pop
mov
jnp
xchg
popa
xor
rcll
in
push
push
fcomp
out
lock
push
les
sbb
pop
imul
jnp
fwait
cmc
push
mov
xor
jnp
es
sarb
sbb
imul
roll
cmpsl
mov
mov
mov
sbb
pop
xor
sarl
xlat
xchg
mov
pop
mov
insb
xor
cwtl
mov
add
or
xor
mov
jnp
shrb
fwait
aas
pop
dec
xchg
xor
inc
js
cld
stc
mov
mov
mov
je
and
add
pop
jge
lcall
xchg
int
xchg
xor
dec
cltd
adc
aas
pop
lret
into
scas
jg
inc
and
les
ljmp
sub
sbb
fnstcw
jb
std
xor
ds
pop
aam
ss
test
fsub
sub
ljmp
add
adc
lock
fidivs
jmp
xchg
mov
adc
leave
and
cmp
stos
jb
scas
insb
or
push
sahf
sub
bswap
jmp
iret
adcl
dec
mov
int
shl
fdivs
dec
or
mov
inc
adc
inc
sbb
je
out
sub
dec
jo
icebp
andb
insb
test
adc
lcall
jg
mov
inc
setge
cmc
cmpsb
adc
rol
ja
gs
jge
push
cmp
mov
push
sbbb
sub
cmp
es
jmp
repnz
dec
xchg
push
out
mov
jns
xor
ja
dec
push
loop
xchg
test
mov
ret
sub
pop
add
cmp
xchg
jl
out
cmp
popa
xchg
repnz
pop
dec
scas
es
jl
in
aaa
jl
cmp
push
pop
adc
daa
mov
in
sub
or
xchg
dec
pop
addr16
mov
xor
movl
cld
push
adcl
loop
and
mov
push
mov
mov
dec
inc
sahf
inc
mov
pop
mov
stos
and
or
fcoms
arpl
add
lret
mov
mov
sub
sbb
inc
cli
les
xchg
mov
push
scas
mov
jo
insb
int3
mov
clc
jg
cld
test
cmp
cs
and
push
jns
inc
ja
imul
lahf
rclb
push
mov
shr
pop
xor
sti
xchg
or
hlt
adc
or
xor
daa
in
pop
mov
cmp
cmp
aas
push
rcr
out
rclb
xor
ret
aad
push
cmp
cmp
lds
push
idivl
int3
pop
das
adc
push
mov
rol
imulb
mov
and
sub
repnz
outsl
cwtl
not
xchg
xor
sbb
cmpsl
ret
pop
mov
in
inc
loopne
mov
negb
jge
lea
mov
test
gs
test
stos
xor
stos
lock
clc
xor
jns
mov
fiaddl
pop
jnp
sub
and
ljmp
jp
pop
clc
push
add
jae
stos
shrb
out
cmp
mov
push
rcrb
or
or
inc
add
xor
mov
lods
popa
adc
pop
fdivrp
jle
insb
xchg
enter
daa
ss
cmp
or
notl
sub
inc
scas
push
cmpsb
pop
mov
ficomps
push
ret
cs
mov
add
inc
dec
subl
jae
xchg
push
xchg
dec
rcr
jecxz
adc
add
scas
xor
mov
mov
xchg
mov
dec
lock
fists
rcll
jmp
jne
mov
pop
mov
sub
addr16
xor
or
sub
or
stc
mov
adc
cmp
jo
or
xor
xlat
and
or
xchg
mov
cmp
aam
repz
loopne
add
aaa
cmpsb
pop
test
outsb
push
arpl
cmp
fildl
jo
lock
jns
lahf
addr16
mov
repz
aam
adc
cltd
push
cld
inc
in
cmp
push
and
and
sahf
lret
sub
and
jns
int3
iret
sbb
jb
cmp
dec
das
adc
lods
cmp
cmpsl
or
gs
mov
insb
push
or
jl
inc
fcoml
loop
ss
clc
mov
jp
outsl
and
cmpsb
bound
pop
adc
inc
lods
mov
mov
mov
mov
test
mov
aad
lds
ja
mov
or
hlt
test
loope
or
sahf
dec
adc
call
cmp
xor
jnp
ss
leave
in
mov
sbb
fwait
add
jecxz
mov
pop
add
repnz
xchg
push
cmp
jbe
mov
ljmp
cwtl
mov
mov
rcrb
mov
push
sbb
pop
or
xor
adcl
out
push
sub
xchg
xchg
test
int
xchg
push
insb
mov
jg
in
mov
imul
jmp
adc
xor
dec
mov
push
outsb
pop
imul
mov
fucomp
lret
sub
sbb
sbb
mov
dec
je
mov
mov
mov
mov
push
aad
es
jmp
mov
jge
add
movsl
xchg
xchg
add
adc
fwait
adc
mov
jnp
push
pop
outsb
pop
adc
scas
sti
test
xor
mov
orb
jne
dec
mov
popa
or
push
xchg
inc
push
and
subb
sbb
stc
push
lret
inc
cs
or
test
mov
mov
cs
push
ss
jae
lock
jnp
das
sub
xchg
add
divl
popf
stc
aaa
aas
push
pop
nop
mov
cmp
lret
sub
xchg
pop
fadds
mov
je
push
addr16
xor
sahf
pop
arpl
sti
subl
stos
jecxz
lret
cmp
das
jmp
insb
lret
mov
into
rolb
jmp
in
add
lods
mov
out
dec
cwtl
fsubrl
test
push
icebp
dec
fs
pusha
dec
int
into
xlat
mov
dec
cmp
and
les
repnz
mov
pop
and
push
sbb
cmc
ja
jmp
sbb
jmp
inc
mov
xor
push
and
pop
adc
cmp
aas
cmp
push
dec
jp
sub
adc
push
xor
xchg
ljmp
add
fsincos
mov
std
fstl
sub
testl
push
xchg
pop
xchg
inc
outsl
cmpsl
pop
in
mov
push
push
cmp
arpl
adc
jne
pop
sbbl
psraw
emms
inc
mov
loope
lds
cmp
imul
adc
lods
arpl
or
aaa
inc
lods
push
nop
or
movsb
out
movsl
pop
push
sbb
int
dec
xchg
outsl
push
ficoms
sub
imul
pop
jbe
inc
add
scas
adcl
dec
jbe
and
inc
fstpt
or
push
lods
stos
movsb
mov
pop
in
es
int
daa
sub
jl
rorb
sbb
xchg
cmp
and
sub
sub
or
mov
jl
lret
loopne
mov
jb
adc
lds
add
push
xchg
gs
jne
sub
sub
mov
sahf
lret
mov
or
push
pushf
jb
bound
inc
xchg
push
mov
ss
loopnew
cmpl
push
pop
fcoml
mov
fdivl
jno
gs
or
xchg
cmp
fimuls
push
jno
push
xchg
add
xchg
pop
dec
outsb
mov
je
movl
lcall
or
adcl
jl
pop
ficomps
push
je
sbb
jb
imul
mov
push
mov
cltd
push
xchg
daa
xor
adc
adc
int3
or
sub
int
in
cmp
rorb
sub
or
or
cld
sahf
add
jns
mov
dec
cwtl
lret
aam
mov
lea
dec
push
sbb
sti
lock
xor
in
push
mov
jo
pusha
lock
push
call
pop
mov
xor
jmp
pop
sti
mov
jl
in
popa
push
add
popf
cmp
mov
fcmovnbe
ljmp
sahf
arpl
push
and
xchg
mov
ds
jb
shlb
xchg
mov
jge
shl
lods
sub
cmp
dec
aam
icebp
lock
in
add
mov
inc
mov
pop
sahf
dec
out
mov
push
jg
subl
xchg
push
inc
daa
adc
mov
push
aaa
mov
ja
rclb
lock
jl
rcll
out
pop
mov
cwtl
adc
dec
sahf
out
fcmovu
inc
ret
clc
inc
jae
xchg
loopne
mov
jne
xchg
punpckhdq
aas
xor
pusha
shlb
in
insl
int3
aad
enter
push
stos
adc
fcoms
pop
mov
inc
and
movsl
and
mov
xchg
jmp
loopne
sbb
xchg
jne
pushf
enter
push
cmp
fldenv
jmp
xlat
shlb
push
lcall
ret
lods
jne
mov
jnp
jno
out
ljmp
or
mov
repnz
shlb
pop
loope
jl
adc
stos
rol
push
lock
arpl
scas
push
divw
inc
leave
fwait
mov
pop
push
cmpsb
dec
pop
push
pushf
mov
pop
bound
data16
dec
les
inc
dec
test
imul
xor
pop
cs
fs
popa
loope
xor
and
xor
mov
pop
cmp
out
push
sub
adc
sub
rorl
xchg
inc
or
scas
das
cwtl
push
out
and
push
push
mov
ja
out
and
cmova
js
push
mov
adc
stc
inc
sub
out
mov
xchg
imul
shrb
add
lret
jp
xorb
orb
mov
inc
ficomps
ja
mov
mov
rorl
movsb
inc
sbbl
cmp
cmp
rorl
jp,pn
jle
inc
pushf
aaa
addr16
adc
sbb
sub
lods
jno
dec
inc
addb
push
scas
idiv
push
repnz
fists
sbb
dec
jno
or
stos
xor
fs
aas
adc
jmp
stc
fiadds
jmp
fsubrs
dec
pusha
pop
aad
or
pop
inc
dec
ss
and
jo
adc
fwait
sahf
sub
mov
add
int3
mov
jnp
popa
flds
or
jnp
jo
fistps
push
or
ljmp
outsl
xor
mov
mov
ja
or
sub
xlat
lahf
xor
or
jecxz
sbb
out
push
cmp
push
and
bound
nop
adc
sbb
jne
outsb
adc
scas
adc
adc
sahf
add
push
jg
popf
xor
or
sti
das
stc
lods
stos
iret
xchg
imulb
pop
hlt
leave
in
popa
mov
jnp
mov
fistps
jae
fwait
pushf
adc
das
js
xchg
xchg
lret
sub
xlat
push
sub
push
dec
sub
pop
add
dec
or
mov
dec
xchg
cmp
inc
adcl
mov
je
push
ljmp
and
imulb
lea
pop
cmp
pop
hlt
or
xor
sub
and
pop
ret
test
enterw
mov
or
fiadds
jecxz
movb
fdivr
testb
push
jbe
jo
and
jnp
push
pop
and
mov
loope
jmp
xchg
lahf
test
sub
sbb
push
fs
add
and
sub
lods
jbe
int3
sbb
mov
xchg
subl
pop
cmp
sbb
into
icebp
and
test
cmp
std
sub
scas
cld
leave
cwtl
popf
jle
cmp
out
in
loopne
stos
nop
xor
vandpd
adc
mov
inc
mov
xorb
or
cmp
add
mov
push
aaa
xor
int3
cmp
pop
jne
fcmovnb
pusha
dec
addb
xor
repz
xor
out
in
adc
fidivrs
in
mov
or
xchg
sbb
cmp
dec
andl
mov
pop
in
sbb
pop
fsubr
loopne
pop
mov
and
out
aas
repnz
xchg
inc
cld
fsubrs
jecxz
outsl
add
shl
jbe
orl
mov
cld
ret
inc
xor
fcoml
and
sub
rclb
lods
adc
lds
ljmp
psllw
lock
add
icebp
push
insb
push
mov
inc
fs
pop
daa
dec
fcompl
jnp
sbb
out
es
sub
jno
test
fst
jno
test
cmpb
mov
sbb
dec
lds
cmp
lock
scas
lahf
fcomip
push
jge
pop
popf
cmp
fistpll
movsb
out
jo
push
clc
sbb
fmul
test
xchg
push
sbb
aad
sub
cmp
xor
inc
xchg
std
ret
mov
cltd
sbb
or
shll
or
sbb
push
mov
jbe
xchg
xor
push
sahf
in
sub
or
push
clc
sbb
xchg
sbb
sbb
cmp
cmp
push
xchg
and
inc
popw
jbe
adcb
or
push
xchg
mov
dec
fidivrs
dec
popf
lcall
jle
push
sub
shl
jns
daa
rcrb
stos
lea
orb
and
ret
inc
stc
sub
lret
xchg
out
or
loope
add
sub
xchg
cmp
xchg
imul
adc
lods
icebp
mov
int
jo
mov
dec
sarl
sub
inc
lea
shll
mov
push
lret
in
leave
std
inc
push
inc
xchg
pop
test
sub
lahf
jge
daa
mov
mov
sbb
dec
stos
adc
pusha
popa
mov
xchg
cmp
out
pop
adc
out
ficompl
mov
je
xchg
adc
pop
orl
dec
inc
sbb
mov
aas
stc
ficompl
mov
loopne
movb
addr16
cmp
sub
rclb
mov
je
ja
mov
dec
cmp
test
out
push
into
out
fcoml
nop
mov
stos
mov
popf
sub
pop
xchg
jmp
sbb
jmp
outsl
movl
sub
sbb
sarl
jo
cmpsl
xchg
mov
movsl
sbb
add
jle
lret
add
cli
pop
mov
adc
adc
cld
fisttpl
xor
out
jecxz
inc
xchg
fisttps
popf
ss
lods
pop
pop
insl
cmp
jg
mov
cs
cmp
xchg
cmpsl
dec
pop
gs
sahf
cmp
push
roll
cmp
push
ja
pop
les
mov
mov
cmp
mov
lcall
in
cmp
sbb
mov
and
jne
mov
xor
jae
inc
orl
jne
cmpsb
clc
mov
pop
pop
clc
xor
cmp
or
xor
sub
push
mov
jb
clc
pop
out
jnp
lea
movsl
scas
test
ljmp
mov
shl
pusha
gs
xchg
fldcw
pushf
mov
pop
add
mov
push
pop
xlat
cmp
stc
or
push
mov
outsb
repz
aaa
mov
adc
out
lods
subb
lret
loope
xchg
mov
sbb
ds
mov
lea
cli
lock
inc
jge
test
and
cmp
and
dec
xor
mov
movb
jge
icebp
loop
sarl
and
xor
test
mov
nop
pop
rolb
inc
call
push
jmp
push
clc
pop
xor
pop
nop
cwtl
stc
mov
sub
loopne
cmp
in
lret
ljmp
inc
cld
push
imul
es
push
dec
pop
testl
cmp
pop
inc
push
xchg
imul
xor
ss
out
mov
jne
dec
xchg
push
adc
decb
pop
mov
push
movsl
pushf
pushf
lret
cmp
rorl
faddp
aad
push
cmp
xor
xor
push
cmp
pop
sub
cmovbe
cltd
mov
dec
scas
in
test
xor
push
addr16
cmpl
loopne
repnz
ficoms
push
and
lds
daa
xchg
xchg
jb
xorb
es
jecxz
mov
jp
and
daa
mov
test
pusha
mov
shll
dec
stos
jbe
movsb
iret
cwtl
jmp
popf
lret
mov
sub
adc
dec
enter
pop
adc
ficoms
jmp
mov
loopne
mov
xchg
dec
xchg
insl
or
int3
or
dec
sbb
sbb
fwait
cmp
jns
mov
sbb
cs
pop
jmp
test
pop
lret
cmpsl
push
pop
cmc
and
rep
fisttpl
aam
mov
xchg
add
in
fwait
sbb
sub
xchg
inc
test
pop
out
mov
inc
sti
jae
rcll
jp
jle
lds
sub
pop
in
push
nop
repz
dec
cmpsb
jb
mov
in
popa
popf
arpl
aam
outsl
mov
aad
imul
pop
mov
dec
pop
js
xlat
inc
frstor
in
inc
aad
mov
lods
lahf
rcr
jecxz
fcoms
xchg
push
push
pusha
jb
xchg
mov
lods
outsl
lcall
test
sahf
mov
push
in
js
sbb
lock
data16
add
cs
call
mov
ret
out
fidivrl
addps
in
pop
js
arpl
fmuls
push
jg
and
or
sub
pop
cmp
pop
sbb
lock
cld
cmc
push
les
cmp
xor
sarl
icebp
leavew
insb
pusha
or
shll
mov
std
sbb
sarl
testl
mov
jae
imul
cmp
dec
adc
leave
clc
pop
cmp
xor
add
and
sbb
in
dec
ja
leave
enter
aas
pop
push
pop
mov
repz
arpl
ss
inc
test
pop
xchg
and
jae
xor
and
popf
icebp
mov
mov
test
clc
mov
cld
xchg
popf
scas
ljmp
add
sub
jge
push
mov
movsl
cmc
idivb
movsb
pop
dec
cmc
int
adc
out
ljmp
gs
inc
add
lret
pop
sub
setno
sub
push
dec
push
pop
xlat
lods
add
ljmp
mov
mov
ds
adc
dec
mov
cmp
aam
stc
pop
out
cs
mov
xchg
das
xchg
add
dec
jmp
in
hlt
mov
xchg
pusha
lcall
shlb
pop
sbb
adc
test
in
mov
xor
das
push
dec
cmpsl
cltd
xchg
cmc
cld
xchg
push
fadd
pop
jbe
and
add
aas
iret
jge
mov
mov
cmpsl
bound
xlat
shlb
in
fcmovne
pop
lret
fists
push
fwait
ret
adc
std
scas
sbb
inc
jno
fucomip
inc
loope
insl
pop
or
jecxz
push
cwtl
and
das
pushw
mov
adc
jns
lods
movsl
pop
movsl
loopne
jo
push
mov
push
or
test
mov
scas
test
adc
push
adc
lea
push
ficoms
lcall
pop
mov
inc
cmpsb
dec
jb
add
jge
lahf
stc
sbb
push
fcoms
enter
les
sti
inc
movsb
mov
xchg
lods
and
ja
in
shl
and
in
inc
mov
bound
test
xchg
cmc
clc
pop
bound
fisttps
imul
lea
mov
rcr
das
jl
xchg
test
ss
and
sahf
pop
adc
in
mov
out
lret
insb
mov
loopne
push
aas
cmpsb
dec
mov
push
inc
fisttpl
cwtl
adc
dec
adc
and
push
lods
jge
jge
push
test
xchg
movsb
jns
lock
cmp
jmp
xchg
adc
mov
loope
movsb
fistps
fdivr
cltd
cs
movsl
cli
cmp
xlat
pop
imul
fs
push
cmp
lret
push
pop
push
mov
cld
mov
insb
shlb
fdivrl
cmp
stos
gs
or
add
lea
inc
outsb
push
das
loope
inc
lods
loope
shrb
cmpsb
sub
inc
mov
das
mov
or
rorl
int
addb
or
push
push
call
sub
pop
int
out
fistpll
sbb
and
lret
pop
mov
nop
mov
mov
jecxz
test
in
mov
xor
push
rolb
out
les
gs
jmp
push
dec
xor
push
ret
sub
or
sarb
lods
into
hlt
outsl
adc
sti
adc
adc
into
addl
sub
pop
mov
jmp
lock
and
outsl
inc
arpl
or
cld
mov
sbb
mov
dec
sub
cmp
stos
sbb
jbe
xlat
ret
pushf
xchg
or
les
mov
and
lahf
mov
cmp
cmpsl
or
fnstsw
mov
int3
and
adc
ss
lods
cwtl
mov
std
lret
ret
mov
dec
js
inc
xor
ds
mov
leave
xor
ljmp
fwait
sbb
and
add
aas
shll
test
push
dec
jo
jno
call
pop
mov
jmp
pop
mov
into
cmp
or
xor
or
mov
jns
xchg
mov
jo
insb
js
lods
xor
inc
pop
push
inc
frstor
jbe
out
dec
sbb
rorb
popf
mov
inc
pop
shrb
add
iret
mov
xlat
in
jmp
mov
addb
stc
ds
loopne
push
std
dec
dec
loop
scas
push
mov
jle
imul
sub
add
daa
cwtl
fs
les
dec
pusha
daa
dec
sti
adc
testb
mov
pop
inc
imul
test
xor
les
mov
cmpsl
pop
sub
mov
icebp
jp
std
testl
adc
and
dec
pop
sbb
mov
shll
xchg
notl
jae
in
push
xchg
push
jl
mov
mov
movsb
cmp
stos
jns
sbb
sbb
push
mov
aas
cwtl
popf
mov
popa
cmp
jmp
je
cs
lret
xor
cmc
dec
dec
adc
xor
dec
cltd
dec
push
scas
or
mov
dec
adc
cmpsl
lds
xor
lret
inc
push
arpl
loope
dec
pop
cmp
bound
jl
xor
and
ds
lods
fadds
insb
repz
movsl
inc
dec
sub
pop
imul
mov
test
int3
mov
mov
repnz
push
xlat
mov
test
adc
les
inc
enter
int3
adc
lds
xor
mov
lock
pop
xchg
and
lret
lods
stc
xchg
pop
pop
sub
aam
lea
je
mov
cmpl
das
cmp
insl
out
xor
xor
mov
neg
cwtl
pop
je
push
mov
pusha
mov
mov
ja
stc
xor
add
jae
jae
inc
fnstcw
xchg
sahf
in
enter
adc
ljmp
cmp
cmpsb
inc
adc
adc
or
xchg
mov
pop
inc
xor
addr16
cmpl
jmp
pop
nop
mov
bound
xorb
shl
dec
orl
daa
data16
and
mov
cltd
sbb
cmpsl
lods
sub
rorl
nop
sub
pop
vmwrite
mov
ljmp
movsb
mov
lcall
lret
and
je
and
mov
ljmp
addr16
adc
lods
cmp
gs
das
imul
andb
fdivrl
decb
call
or
mov
push
sub
imul
add
mov
mov
mov
jo
aaa
lock
xchg
fs
push
cs
movsl
or
addb
mov
outsb
xor
mov
ficompl
negl
in
jne
ret
int3
mov
push
bound
aad
or
in
leave
cmp
lock
and
mov
and
dec
and
mov
inc
sub
adc
aad
mov
out
lahf
shll
fcmove
push
sbb
mov
push
fmulp
out
sbb
or
push
imul
ds
inc
enter
pop
dec
ljmp
jl
rorl
push
nop
and
stc
push
jno
mov
test
push
shrb
fndisi(8087
mov
outsb
jl
dec
cwtl
mov
ds
test
movsl
mov
push
addr16
jnp
mov
ja
mov
or
or
out
add
icebp
fistpl
or
cmovp
out
mov
jp
lock
or
lds
mov
xchg
or
sbb
js
out
push
lahf
aad
adc
cmp
xor
cmp
fbstp
mov
rcrb
in
sbb
jge
sub
dec
ds
cs
dec
sbb
cmpsw
cmp
sub
arpl
sbb
test
inc
push
push
imul
lcall
dec
insl
lock
and
dec
xchg
lds
mov
push
xchg
gs
sarl
insl
ljmp
aad
pop
aam
sub
mov
adcl
insl
adc
cmp
pop
insl
mov
pop
fidivs
movsl
fwait
icebp
fwait
out
in
mov
cmp
cwtl
ljmp
dec
jl
jle
dec
cmpsb
sti
dec
cmp
mov
cmp
xor
dec
cmp
cmpb
add
cwtl
mov
jb
pop
sbb
inc
push
pop
rorl
daa
repz
pop
andl
lcall
aam
sbb
inc
xchg
bound
xchg
aam
push
repz
cmp
fistps
loope
mov
and
sub
sub
dec
mov
sbb
ljmp
push
or
mov
lock
push
push
stc
movsl
pusha
dec
ret
out
out
or
stos
inc
arpl
push
pushf
adc
xor
xorl
push
xor
daa
addr16
mov
lock
mov
or
cmpb
leave
mov
add
test
ja
and
insb
dec
xor
shll
dec
add
cmpl
jl
inc
inc
or
sub
lret
popa
push
repz
insl
lock
jmp
hlt
scas
rcll
pop
sahf
std
push
jl
enter
mov
pop
dec
xor
stos
cmp
xchg
pop
xchg
loope
dec
rorb
mov
cmpsb
stos
cmp
inc
sbbl
fcomi
and
clc
loop
pop
mov
add
cmp
mov
sbb
out
in
push
pop
sti
cmc
push
add
ret
shlb
mov
jb,pn
aas
dec
testl
jmp
fistps
scas
mov
fimull
insb
lea
xchg
and
lock
stos
xchg
fcmove
pop
cmp
jb
jne
dec
sbbb
inc
lcall
adc
jecxz
dec
sbb
scas
std
cwtl
sub
outsb
mov
popf
cmpb
push
nop
test
aaa
pop
cmpl
cmp
push
push
shl
gs
iret
lods
mov
push
jmp
pop
xor
daa
aad
xchg
jbe
imul
rcll
outsb
ljmp
dec
and
mov
out
jnp
add
or
fimull
insl
test
mov
fstpl
push
movsl
nop
mov
xchg
and
mov
loopne
dec
jg
dec
out
ljmp
xchg
lret
sub
gs
mov
xchg
pop
in
cmp
std
inc
js
sub
jle
cmp
out
add
jmp
sbb
arpl
rcrb
dec
jge
sbb
push
out
lahf
popf
dec
sub
pop
xor
sbb
gs
adc
jnp
out
test
mov
mov
into
add
shl
pop
or
xchg
lahf
jle
xor
loopne
outsl
inc
test
in
cltd
jnp
mov
outsb
inc
addr16
pop
cmpb
mov
mov
aaa
dec
movsb
loope
pop
cli
subb
sbb
rclb
mov
pusha
mov
and
cs
dec
nop
je
inc
addr16
lock
pop
inc
std
or
shlb
jns
cmpsw
popa
or
xchg
ud1
inc
shll
xor
in
aaa
int
cs
dec
pushf
push
xor
paddq
cwtl
int3
inc
scas
mov
pop
scas
in
roll
sbb
aaa
cvtps2pd
cmc
ret
push
bound
sti
xchg
jl
jns
mov
fcomps
adc
inc
fidivl
pop
sbb
pusha
bound
in
pop
pusha
sbb
in
pop
mov
stos
dec
fisttpll
xor
xchg
cs
pop
scas
rorb
adc
mov
mov
testl
outsl
inc
cmpsl
jmp
jno
sbb
subb
jge
aam
pop
xor
test
and
adc
arpl
pop
psubd
xor
mov
ljmp
mov
dec
test
mov
jno
and
sbb
mov
rclb
les
adc
or
push
pop
insb
pop
inc
push
outsb
int3
push
mov
push
xor
and
shr
pop
dec
jbe
cmc
sbb
cmpsb
push
mov
mov
sub
sub
sbb
mov
pushf
xchg
in
lods
jmp
ja
movsb
enter
or
xchg
or
pop
lret
jge
jmp
repz
mov
mov
scas
xorb
dec
mov
mov
adc
or
out
out
mov
test
and
and
les
cwtl
ficomps
pop
cmp
cmp
call
push
adc
in
imul
movsb
pushf
stos
into
add
mov
and
imul
mov
sub
cmp
nop
push
sbb
popa
xchg
aas
dec
lods
inc
cmp
inc
arpl
mov
add
ret
cltd
jbe
sub
mov
jmp
jo
cmp
fnstcw
in
pusha
incb
enter
js
and
ficomps
ss
decb
fsubrp
or
or
lds
lret
mov
testl
les
mov
cs
jns
enter
jl
mov
pop
mov
stc
cld
jbe
aad
je
pop
lret
or
dec
cwtl
and
lods
add
stos
or
xchg
pushf
add
lds
sbb
pop
rorl
test
and
leave
aam
xchg
lock
or
inc
call
mov
sbb
pop
mov
stc
aad
loop
cmp
pop
les
mov
fistpll
icebp
push
testl
pop
das
xchg
mov
dec
adc
push
xchg
push
adc
lcall
fisttpll
fbld
mov
lahf
pop
xor
mov
adc
std
mov
movsb
dec
mov
mov
aad
das
mov
mov
pusha
scas
jp
push
xchg
aas
inc
cltd
sub
loope
sub
in
or
lcall
lret
sbb
je
arpl
and
sub
xor
outsb
scas
pop
or
addr16
mov
push
mov
or
ret
add
out
adc
xchg
testl
jecxz
push
imul
ret
aaa
jns
sub
cmc
das
cld
pop
js
jnp
inc
inc
ljmp
js
lret
fs
unpcklps
jns
adc
rclb
out
add
sbb
pop
xchg
inc
icebp
mov
lahf
test
sub
xchg
push
std
js
lret
dec
push
jnp
es
out
jecxz
push
xor
js
fisubrs
push
sahf
arpl
mov
sub
out
and
adc
repz
xlat
rcrb
js
cs
sub
test
jno
das
push
cwtl
mov
dec
les
or
mov
add
loop
jmp
add
cmp
mov
outsl
aad
imul
jnp
or
fstpl
lahf
jmp
lret
jnp
fisttps
je
push
sub
fnstsw
les
dec
repz
ret
je
mov
fnstenv
scas
pushf
push
popa
scas
and
jne
aas
aas
in
mov
shll
xchg
outsl
pop
lods
push
test
jg
mov
fsubrp
repnz
push
sub
lock
insl
inc
fcomps
mov
inc
cmp
pop
inc
pop
mov
inc
cmc
leave
mov
push
mov
pushf
fdivrs
lret
andb
sub
insb
and
stos
fldenv
mov
std
mov
mov
mov
add
gs
pop
into
aaa
bnd
cmpsb
ja
stc
into
rcl
xor
daa
xchg
xlat
fs
push
mov
xchg
jns
rorl
fmull
add
jmp
sbb
mov
adc
mov
mov
adc
repz
stc
mov
aas
mov
pop
fimuls
cmp
js
mov
pusha
int3
repnz
lods
pop
inc
fldt
xchg
rcrb
icebp
addr16
dec
inc
jb
or
jne
out
mov
std
cltd
in
mov
bound
push
and
push
aaa
mov
pusha
testb
fsubp
inc
mov
mov
pop
lret
mov
dec
pusha
jmp
mov
dec
in
mov
je
jg
adc
mov
int
int
pusha
idivb
fisubs
std
sub
jl
mov
ss
or
xchg
loopne
popf
mov
adc
mov
out
push
dec
jno
mov
push
mov
mov
dec
pop
cmp
fisttpll
cltd
mov
mov
pusha
aam
mov
adc
or
push
xlat
adc
sbb
fsubr
mov
xchg
mov
popa
sbb
clc
pop
mov
mov
mov
jae
gs
mov
sti
mov
sahf
stc
jge
mov
vaddss
add
aad
adc
and
and
les
and
sti
addr16
mov
mov
add
sbb
mov
icebp
jae
je
mov
stc
scas
leave
and
pop
fbstp
jle
sahf
and
pusha
push
cmp
jb
push
lahf
xlat
dec
je
ret
popa
out
mov
idivl
into
lds
push
fmuls
mov
dec
sub
mov
xchg
lret
xor
in
xchg
movsb
dec
mov
mov
sub
fisubrs
inc
xchg
je
xor
jno
push
jge
mov
lret
shlb
mov
push
mov
daa
mov
sub
xchg
push
stc
dec
mov
dec
cmpb
or
mov
jecxz
jae
lods
or
pop
je
xchg
call
fcmovnb
cmpsl
aam
popf
jno
or
imul
adcb
add
inc
adc
jmp
mov
and
sub
sub
jno
push
loopne
sbb
pextrw
push
ficomps
mov
outsb
xchg
shll
and
inc
bound
or
push
jl
sub
xchg
ret
mov
out
inc
les
shlb
dec
and
icebp
fstl
mov
ss
cmp
xchg
xor
ljmp
mov
cmc
xor
mov
or
sbb
jae
or
xchg
add
sub
push
adc
outsb
mov
sbb
cmp
cmpsb
je
in
pop
jp
push
mov
pcmpgtw
dec
push
mov
in
sti
push
sbb
adc
mov
xchg
push
push
bound
sahf
dec
popa
les
jle
dec
lcall
jns
xchg
int
iret
adc
jle
scas
sbb
das
lcall
inc
sbb
sahf
cmp
insl
je
add
and
lods
mov
lret
fists
mov
mov
xchg
or
jle
sbbl
mov
mov
cmp
xchg
adc
cmc
enter
jae
rcll
pushf
test
cs
jle
pop
xchg
cmpsl
jo,pt
inc
xchg
jg
cmpb
jl
push
loope
add
sub
sub
ret
loop
cmova
push
pop
jae
inc
jp
xchg
mov
ret
mov
mov
pop
outsb
mov
push
int3
mov
push
cltd
stos
push
mov
cmp
das
pop
cmp
int
sub
jmp
inc
dec
cmp
mov
jmp
or
scas
or
or
fiaddl
add
cmpsl
test
mov
jae
mov
pop
call
dec
sbb
sub
insb
push
insb
mov
movsl
insl
push
notl
jo
push
jl
mov
push
add
lret
and
lock
jl
scas
inc
ds
iret
out
movsl
test
xchg
test
push
mov
loopne
in
loope
dec
inc
xor
adc
xor
ja
flds
ja
add
daa
cmp
movsb
xlat
test
and
jbe
or
sub
sahf
ds
popf
xchg
fwait
mov
sbb
stos
push
ret
pop
push
lea
js
lret
mov
or
rclb
sahf
ss
mov
pop
out
and
test
adcb
push
sti
pop
gs
jp
pop
and
cmc
cmp
repnz
sbb
cmp
bound
or
movsl
push
sarb
movsl
add
mov
ficomps
outsl
mov
mov
subl
mov
push
insl
out
xchg
fimull
push
pop
mov
jle,pn
xor
mov
sub
sbb
add
es
adc
adc
cmp
mov
pop
cwtl
add
clc
mov
outsl
xchg
aad
cmp
imull
lds
push
sahf
lahf
daa
loopne
fs
dec
and
outsl
cs
movsl
xor
jl
push
std
pop
or
nop
das
fldl2t
adc
insb
mov
jp
or
mov
pop
mov
jne
or
iret
ret
add
add
sbb
loopne
dec
aas
add
sar
mov
loop
or
cmpsb
cwtl
inc
insl
pop
iret
cld
inc
das
sbb
lahf
add
out
enter
dec
add
inc
pop
xchg
cmc
lret
pop
and
sbb
sub
ficompl
cs
les
push
xchg
jnp
push
sub
jbe
and
jb
and
push
inc
addr16
cmpsb
cmp
push
push
insb
in
adc
or
push
xchg
sbb
lcall
sbb
xchg
mov
test
movsb
and
stos
adc
push
xor
adc
lret
add
ljmp
mov
mov
test
roll
adc
ss
inc
xchg
mov
sahf
mov
imul
adc
mov
jb
mov
add
jo
push
jg
std
ret
fxch
xchg
je
addr16
lret
and
pop
imul
sar
aam
out
or
cltd
mov
xor
cld
push
jle
mov
stos
je
jmp
test
mov
and
out
sub
xchg
pop
xor
sbbb
es
outsb
and
push
xor
mov
enter
cmpb
leave
jo
out
das
xor
adc
push
cmpsb
in
out
das
mov
arpl
jne
jmp
pop
lods
outsb
jns
pop
mov
pop
dec
clc
jmp
xchg
call
pop
or
lcall
pop
cmpb
test
push
loop
sub
mov
push
adc
inc
in
loop
dec
pop
test
stos
loopne
in
xchg
mov
ds
mov
cmp
push
push
lcall
inc
stos
mov
lods
push
mov
ret
test
mov
insl
fdivrs
and
lret
je
idivb
sub
orb
ljmp
aaa
inc
jp
or
lret
mov
lret
sbb
push
push
cmp
adc
in
int3
loopne
ja
and
sbb
dec
lods
cmpsb
or
rcrl
xchg
test
ret
mov
adc
in
ret
push
fisubs
xor
hlt
int3
sti
jne
mov
xlat
stos
xchg
push
movsl
mov
stos
jnp
cld
xor
shlb
push
mov
cmp
mov
xor
rep
gs
loop
adcb
jp
lret
jbe
rorl
add
rcll
out
scas
fs
mov
sub
push
adc
dec
inc
xor
loopne
pop
int3
cld
out
lss
xchg
cltd
or
mov
inc
out
inc
sub
adc
ret
jbe
movsb
bnd
dec
pusha
mov
mov
and
pushf
dec
cmp
insl
movsl
int
pop
inc
dec
lods
xchg
and
and
ret
adc
out
stos
movsl
push
push
mov
sbb
xor
push
inc
inc
icebp
loop
mov
mov
push
shll
jmp
dec
jmp
paddq
pop
insl
les
sub
addr16
mov
orb
fwait
dec
lahf
lds
lods
push
jmp
mov
outsb
add
addr16
sbb
test
pop
fs
pop
dec
popf
xor
push
mov
fdivs
outsb
pcmpgtd
cmp
xor
rcr
xchg
mov
iret
inc
pop
fiaddl
add
inc
addr16
loop
dec
jnp
xchg
push
mov
dec
fidivrl
aad
repz
cmp
dec
pop
cmp
in
adc
rcrb
jle
sub
dec
cmp
mov
notl
mov
sub
roll
iret
dec
push
add
xchg
rorb
ficoms
dec
imul
stc
jno
sub
adc
dec
inc
das
pop
xchg
pop
repz
cld
sahf
xor
xor
fisttps
bound
xor
add
ficoms
test
out
xor
xor
mov
jbe
jmp
mov
test
in
xchg
push
push
fsubl
or
les
lods
push
mov
push
xor
xor
adc
sti
xchg
sbb
arpl
mov
dec
dec
fdivs
ss
and
icebp
out
ljmp
ds
stos
push
and
lock
ret
push
and
lret
popf
add
popa
mov
push
out
mov
inc
popa
ret
les
push
jnp
shlb
in
xor
arpl
push
jecxz
mov
push
in
fimull
mov
out
xchg
pop
nop
es
sarb
shrl
and
xor
mov
stos
imul
jl
pop
xchg
push
push
lahf
je
fcomp
cld
idivb
xlat
jp
xchg
add
xchg
mov
hlt
add
push
dec
inc
test
mov
and
mov
push
stos
sbb
pop
or
fadd
test
sahf
jmp
xchg
and
inc
ss
push
testl
loopne
cld
pop
sti
cmp
mov
mov
inc
inc
rol
ret
arpl
fcoml
inc
movsb
gs
sub
ljmp
xchg
popf
push
into
mov
in
cs
test
mov
jne
shr
mov
pop
ds
sbb
mov
xlat
push
shll
sbb
arpl
pop
push
cli
inc
ss
lock
sbb
inc
ficoml
or
lods
pop
sbb
std
jne
out
addl
or
movsl
inc
and
insl
roll
add
test
cli
daa
int
test
repz
sub
sti
fdivs
lods
stos
shrb
dec
rolb
adc
xor
popf
add
arpl
andb
or
dec
mov
xchg
pop
pop
cmp
mov
repz
pop
jg
leave
loope
mov
inc
data16
jg
dec
dec
mov
loopne
cmp
xchg
xor
sbbb
mov
xor
push
and
sbb
add
aas
mov
or
push
shlb
in
fisubrs
inc
std
nop
sub
inc
or
es
inc
push
fidivs
in
es
test
cmp
rclb
aaa
push
inc
and
cmp
add
fcmovnbe
push
dec
pop
repnz
inc
fs
adc
mov
mov
jb
push
js
mov
out
xchg
test
dec
inc
pop
push
push
sub
faddl
jge
jno
or
sub
xor
mov
loop
lret
pop
jle
mov
enter
nop
mov
cld
pop
ret
in
ljmp
xchg
jne
out
push
dec
lret
mov
cmp
inc
mov
aam
inc
shlb
xor
andl
inc
sub
pushf
sub
or
cmp
fwait
lret
es
mov
push
xchg
cld
test
and
fistpll
adc
pop
in
dec
push
sbbb
stc
in
pop
sub
add
test
mov
pop
fstpt
ffree
pusha
jae
arpl
scas
dec
mov
cs
fwait
fistpll
subl
data16
sti
jmp
or
pop
add
out
mov
pop
or
aad
xor
movsl
lahf
sbb
xchg
or
inc
ror
push
popa
out
or
scas
pop
mov
ds
fs
pusha
in
lods
adc
repz
mov
xor
adc
rclb
fs
push
jno
sub
xor
repnz
push
mov
mov
sahf
and
jle
fists
stos
inc
and
stos
loop
dec
inc
addr16
push
dec
lcall
divl
and
push
out
gs
push
xchg
mov
mov
pop
mov
adc
inc
mov
adc
addl
mov
and
aaa
fidivrs
mov
dec
jb
scas
arpl
in
pusha
ret
mov
mov
xor
pop
xchg
pop
or
push
push
push
lahf
pop
fiaddl
mov
outsl
les
adc
rcrb
or
add
sbb
cmc
rcr
dec
imul
mov
iret
inc
test
ljmp
fisubl
loopne
in
and
int3
or
cld
mov
xchg
icebp
outsl
rcrl
jp
push
out
stos
jbe
cmp
adc
or
dec
pop
mov
cmpsl
sbb
xchg
sti
jge
push
sbb
mov
mov
in
mov
add
push
daa
mov
pop
dec
popf
inc
jg
sub
sahf
mov
cmp
xor
int3
mov
repz
test
push
arpl
sbb
mov
pop
repz
jmp
jae
lea
orb
sbb
mov
and
popf
ja
lock
or
bnd
xchg
test
repnz
into
or
mov
data16
push
pop
adc
or
insl
test
daa
lahf
cwtl
xor
jmp
jnp
shrb
sub
cli
cmp
push
push
addr16
scas
hlt
repz
lea
jg
cmc
mov
sub
push
lret
lret
xchg
and
lods
jae
adc
and
fistl
cmp
jmp
int
jge
loop
pop
mov
outsb
pop
xlat
add
xor
or
push
or
mov
xor
inc
and
repnz
jle
jns
imul
jae
jl
dec
cltd
outsl
xchg
pop
call
popf
test
fs
push
mov
in
mov
xchg
shlb
push
fsubl
std
xchg
test
sbb
or
loop
mov
xlat
fildl
push
sub
addb
pushf
outsb
inc
das
cwtl
pushf
and
cld
iret
adcl
dec
mov
mov
add
movsb
in
sbb
sbb
jp
adc
hlt
push
lahf
sbb
cwtl
into
xorb
movsl
int
mov
dec
pop
xchg
inc
or
push
inc
sub
xor
fistl
and
icebp
and
mov
inc
stc
adc
gs
mov
sbb
test
addr16
out
arpl
pop
in
in
mov
repz
dec
decb
mov
push
and
popf
push
test
aad
std
and
fstps
push
adc
out
sub
aam
push
mov
jmp
fdivl
daa
sahf
pop
mov
cmp
cli
mov
push
scas
mov
sub
scas
mov
lahf
dec
ja
mov
out
bound
aam
and
cmpsl
cmp
cmp
stos
inc
movsl
ss
xchg
add
test
lret
fistpl
mov
shrl
push
jns
mov
dec
inc
nop
rcrl
popf
inc
pop
out
int
insl
filds
mov
mov
jmp
cmp
jb
sub
xor
fsts
loop
in
js
jp
adc
cld
jbe
aas
sbb
push
sub
xor
jmp
in
leave
std
rcll
pop
mov
xchg
pusha
mov
xchg
push
rclb
iret
lock
adc
jb
and
leave
shrb
dec
cmc
movsl
stos
pop
js
int
mov
jo
pop
shrl
ret
jg
aad
mov
add
scas
in
je
push
outsl
fimuls
mov
dec
mov
mov
out
pop
cmp
pop
mov
clc
adc
sti
jae
movsl
roll
fstps
xor
lea
arpl
fucomp
mov
mov
push
mov
pop
test
jmp
les
add
insb
xor
loopne
movsl
mov
push
xor
das
and
fsubs
jae
les
pop
push
test
imul
jg
xchg
in
mov
scas
xlat
mov
sbb
mov
dec
lods
mov
adc
fistpll
clc
rorl
in
xor
lock
mov
sub
mov
add
test
imul
ss
test
ret
adc
fs
outsb
mov
dec
fwait
pop
cmc
inc
outsl
dec
shr
iret
mov
adcl
xchg
movsb
and
out
sbb
popf
bound
jl
inc
push
outsb
aad
test
popa
idivb
insl
push
cld
dec
pusha
out
test
out
in
ss
jg
push
push
jbe
in
loope
push
mov
outsb
mov
lock
jns
fsubl
jae
pop
lcall
push
stc
repz
add
rcrl
idivl
push
test
lock
lods
lds
or
lret
cmpsl
jne
dec
dec
loopne
xchg
in
stos
rcrl
mov
xor
and
mov
xor
in
lret
xor
loopne
mov
mov
xor
cs
idivb
repnz
sahf
xchg
sub
cli
dec
and
int3
ljmp
mov
jae
dec
testb
push
in
imul
sbbl
ret
push
pop
add
pusha
cmp
lcall
inc
sbbb
mov
sbb
scas
imul
mov
pusha
cmp
mov
lcall
sti
loope
dec
mov
enter
xor
lods
nop
hlt
dec
xchg
gs
rol
inc
arpl
int3
scas
aam
repnz
add
movsb
test
xor
into
and
bswap
sbb
pop
ds
push
imul
getsec
mov
jecxz
or
or
mov
loop
movsl
mov
add
adc
pop
pusha
pushf
pop
pop
pop
test
movsl
add
cmp
push
shlb
pop
xchg
push
sbb
rolb
jbe
xchg
mov
insb
ret
jecxz
shll
push
mov
or
movsw
movsb
and
pop
out
imull
sub
sub
rorl
fidivrl
xchg
or
cwtl
ret
pushf
cmpsb
popf
clc
and
lock
push
mov
jb
or
push
aas
mov
jnp
push
mov
push
sub
pop
dec
mov
dec
test
imul
and
int3
addl
inc
xchg
int
movb
xchg
stos
ljmp
ss
mov
xchg
xchg
hlt
lret
mov
jle
ret
icebp
cmp
dec
push
les
jle
aas
jl
adc
push
add
fs
jle
pop
sbbb
cmpsb
stos
add
lret
inc
call
loopne
test
jnp
test
insb
loop
pop
test
mov
mov
inc
dec
jg
xchg
or
mov
jns
loopne
out
dec
lds
imul
psrad
add
clc
enter
push
xchg
mov
mov
mov
mov
mov
jle
cltd
arpl
mov
mov
sbb
scas
inc
test
fwait
popa
loope
xor
addr16
stos
push
movsb
imul
out
mov
addb
js
sti
inc
pop
out
and
mov
xchg
jo
xor
ds
adc
sub
and
xchg
outsb
aas
test
frstor
sbb
fstpl
imul
test
les
lret
dec
jbe
mov
sbb
test
enter
xchg
push
mulb
dec
pusha
cmc
arpl
xorb
shll
mov
mov
ror
xor
and
lret
jle
and
mov
test
dec
aaa
or
inc
push
cmp
int
test
shr
aad
mov
sbb
lods
cltd
in
and
push
jae
in
jbe
push
or
jge
push
adc
or
and
test
cmp
sbb
stos
xor
pop
mov
xchg
cmc
add
sbb
xchg
je
repz
movsb
cmp
fmul
and
sub
adc
fmuls
aaa
shlb
push
jecxz
out
or
pop
push
cmpsl
dec
mov
ds
iret
mov
out
adc
xor
movb
dec
repnz
dec
push
enter
push
mov
movsl
mov
adc
and
xchg
aam
lret
mov
leave
fwait
mov
cmp
scas
clc
imulb
push
pop
mov
fdivrs
xchg
mov
push
pop
adc
sahf
and
js
pop
ja
cmpsb
jb
addr16
sbbb
pop
pop
aad
mov
repz
pushf
in
loopne
xchg
and
add
push
mov
clc
pop
ja
cmpsl
sbb
das
pop
out
pop
stos
outsl
int3
repnz
and
in
std
aam
or
sbb
in
mov
hlt
mov
fsubs
push
ds
inc
lret
fsubrl
mov
push
dec
out
pop
popf
push
push
jmp
inc
mov
insl
ret
and
out
cwtl
mov
rclb
outsl
cmpsl
test
lock
dec
adc
dec
popf
jge
mov
or
ljmp
mov
mov
rcr
ror
adc
dec
push
jmp
fimull
mov
xchg
js
testl
mov
aam
push
xor
xor
sub
pop
cld
fsubl
cwtl
xchg
cmpsl
push
sarb
jle
mov
add
xlat
cli
into
xlat
adc
mov
mov
push
out
lods
or
sub
mov
fsub
mov
or
pop
imul
mov
test
or
sbb
or
fdivrs
xlat
outsl
mov
sahf
lds
sub
xchg
xchg
jnp
and
pushf
popf
subb
push
adc
ds
outsl
aad
cs
fiaddl
mov
call
dec
jg
and
lods
outsb
inc
cmp
cmpsb
dec
ret
mov
lds
mov
xchg
aaa
and
aaa
imul
jno
push
jecxz
insb
stos
fwait
in
iret
ds
and
popa
mov
shlb
pop
ficompl
fsubrs
or
mov
cli
xchg
jecxz
mov
and
es
cld
ret
cmp
nop
xor
xchg
mov
dec
sti
das
dec
add
icebp
lahf
lcall
bound
add
sub
mov
dec
dec
ljmp
push
mov
xchg
jne
aas
xchg
cmp
inc
hlt
xchg
pop
add
xor
sbb
mov
jle
push
outsl
cwtl
push
xchg
or
cmp
int
push
dec
adcl
jo
mov
push
out
xlat
loope
xor
inc
jo
outsb
idivl
hlt
add
filds
inc
xor
ljmp
mov
pop
mov
aas
in
std
clc
jecxz
inc
aad
js
mov
out
insb
pop
out
push
and
daa
sti
xchg
shlb
movsl
mov
sub
popa
mov
mov
cmpsb
pop
jb
pop
js
cli
je
pop
push
stc
std
cwtl
pop
outsb
sub
or
push
inc
xchg
xor
and
ja
popa
dec
scas
jecxz
outsl
cs
xor
shl
popa
incb
ja
sti
lds
jae
adc
xor
dec
imul
pop
mov
dec
sbb
jbe
roll
adc
aas
js
push
push
mov
and
mov
sbb
pop
push
cmp
in
jl
lds
push
push
sub
sbb
pop
dec
shll
add
addr16
in
lret
int3
ss
outsb
dec
cmp
jo
notl
cmpsb
aas
lret
sbb
and
shrb
fwait
push
mov
mov
out
xor
cltd
sub
add
xchg
jmp
xor
shl
dec
jbe
push
cmp
pop
movsb
addr16
cmp
mov
ss
shr
mov
adc
pop
jge
ds
sub
mov
dec
jle
lret
mov
loopne
clc
and
xor
mov
jl
movsb
lock
popl
js
mov
jae
les
outsl
les
leave
or
pusha
iret
cmp
mov
out
push
popa
jae
jns
jb
sub
push
shr
pusha
pop
or
xchg
hlt
pop
mov
dec
sub
jl
adc
mov
gs
lock
adc
push
in
xchg
test
jno
push
mov
je
ja
std
negb
aad
xchg
fcmove
dec
push
sahf
cld
jb
hlt
in
clc
ljmp
mov
inc
add
cmp
fwait
cmp
sub
cmpsl
repnz
dec
inc
out
push
int3
test
aaa
mov
aam
insb
push
sti
rclb
repz
mov
shll
pop
inc
mov
outsb
and
testl
cmpb
rcrl
stos
xor
add
push
sbbb
test
shll
insb
ds
pop
jno
clc
ss
leave
pop
pop
fmuls
jbe
je
repz
pop
pusha
in
stos
push
add
decb
fs
ds
cmp
lret
pop
iret
or
cmp
cld
insl
repz
sarb
jle
lds
fistpll
push
insb
push
inc
lahf
push
pop
jl
lds
xchg
xchg
movsl
lahf
imul
mov
mov
push
mov
and
call
daa
adc
push
cwtl
cs
cli
jp
push
jmp
push
pop
cmp
lahf
and
mov
cld
pop
icebp
adc
sarl
mov
orb
xor
mov
mov
adc
mov
imul
xchg
ljmp
jb
fists
pop
gs
lock
loopne
xchg
push
xorl
pop
pop
pushf
mov
int
add
shl
mov
pop
inc
iret
mov
or
mov
addb
sub
es
pop
iret
insl
lds
fst
out
lods
xor
jne
iret
mov
icebp
mov
rcrl
jg
js
or
clc
mov
cmpsb
mov
fwait
jb
ret
dec
pop
push
repz
les
jmp
lds
jp
out
mov
or
icebp
inc
mov
or
out
mov
lcall
and
bound
jmp
sar
xchg
daa
push
mov
inc
and
jb
cs
imul
lea
dec
add
out
or
cmp
cmpsb
pop
daa
cmp
mov
std
jl
push
or
jge
push
dec
jge
ds
incb
ja
xor
cmp
inc
loopne
cmp
inc
sbb
jmp
jb
mov
ret
push
les
mov
in
pop
sub
mov
fnstenv
in
jecxz
or
dec
inc
adc
xchg
sbb
aad
outsb
test
adc
repnz
leave
sbb
scas
or
push
push
jecxz
mov
jmp
mov
or
xor
mov
cs
call
arpl
dec
outsl
hlt
inc
dec
push
pop
into
xor
push
adcl
ljmp
and
sbb
mov
lahf
add
int3
cmpsl
xor
dec
test
sbb
into
loopne
mov
cwtl
es
out
inc
cs
scas
loop
jge
cmp
xchg
popa
adc
mov
jne
mov
icebp
jb
mov
dec
scas
sbb
fnstsw
sub
dec
mov
jl
inc
ror
jl
leave
or
jl
cmp
es
das
or
jo
fldenv
mov
shlb
hlt
sbb
xor
xor
cmp
sbb
inc
cmpsb
xchg
sbb
inc
push
sbbb
sub
and
dec
sbb
inc
push
mov
push
fisttpl
fadds
stos
scas
xor
or
ret
and
jbe
mov
jns
mov
jmp
mov
jl
inc
sub
cmp
outsl
push
daa
sahf
inc
push
ss
or
ret
adc
rolb
stos
sub
mov
dec
lret
cmp
ficompl
cmp
frstor
cmpl
icebp
leave
push
pop
pop
and
pop
les
stos
lea
jbe
jle
inc
shr
inc
add
loope
jb
mov
mov
cwtl
push
add
push
shll
dec
and
xlat
mov
movsl
xor
lret
xchg
xchg
cwtl
pop
fistpll
jg
adc
pop
nop
addr16
mov
lret
sarl
adc
fwait
add
pop
inc
push
popa
pushf
emms
shrl
loop
push
jp
dec
mov
fisubrl
push
cmp
xchg
aas
push
jo
mov
test
pop
scas
mov
pop
outsl
in
dec
inc
out
lock
push
mov
inc
out
mov
negb
pop
sti
mov
gs
mov
cmp
mov
ss
mov
mov
test
jo
jb
test
jl
das
or
mov
loop
lret
jl
inc
loope
outsl
aam
stos
ret
xor
not
popf
sbb
repnz
popa
push
outsl
lret
fcompl
jge
pop
mov
stos
cmp
insl
std
jno
cmp
pop
test
cld
std
pop
nop
imul
fdivs
add
inc
scas
call
dec
jp
call
or
dec
je
add
insb
frstor
test
jecxz
sbb
scas
aas
and
out
leave
scas
imul
sub
insl
jo
sbb
lods
push
and
sbb
mov
dec
pusha
jno
arpl
cmp
pop
fmull
fldenv
pusha
int3
sub
popa
in
enter
jmp
cmp
enter
mov
push
mov
repnz
and
popa
fnstsw
push
add
stos
movsb
xchg
cmp
je
mov
test
idiv
mov
jp
das
bnd
mov
push
cmc
or
pop
gs
mov
jle
mov
movsl
dec
sub
push
mov
shll
xor
jp
jmp
ss
pushf
test
mov
inc
sahf
loope
in
dec
out
dec
push
sbb
rclb
scas
jg
aas
out
push
add
xchg
or
and
fadd
mov
enter
inc
dec
sub
push
rcll
js
ja
and
pop
aas
gs
pop
xlat
bound
dec
xor
in
xchg
test
pop
push
pop
test
push
imul
adc
scas
shrl
adc
stos
adc
jmp
out
scas
fcmovu
mov
xor
ljmp
es
inc
stos
nop
ds
pop
sbb
mov
test
iret
jle
insb
insb
sbb
fadds
sub
out
pop
cmp
insl
sbb
mov
call
ja
lea
pop
sbb
daa
push
cmpsb
sti
jo
push
rcl
nop
nop
jne
jo
dec
adc
repnz
pop
sub
cmp
dec
dec
pop
mov
adc
jns
ret
scas
cmp
lret
in
mov
lret
rorl
jae
mov
lcall
lds
pop
lret
popa
cli
mov
pop
movsl
out
pop
ja
sti
xor
mov
out
cmc
and
push
jae
xor
mov
fstp
daa
adc
fnstenv
sub
dec
push
ss
nop
imul
loopne
ljmp
jge
shll
aas
insb
dec
adc
pusha
or
stos
stos
lock
adc
xor
daa
lds
fdivp
cmp
repnz
jecxz
jbe
movlps
movsb
xchg
aam
gs
and
cmpsb
sbb
jb
in
mov
jnp
lods
aad
jle
shlb
or
xchg
xor
sahf
call
pop
xor
sbb
sbb
push
pop
jg
push
cwtl
or
mov
test
xchg
sub
popa
test
pop
cmc
inc
add
dec
andl
cmp
mulps
jno
out
jge
jae
and
jbe
lret
push
scas
sbb
mov
insl
adcl
stos
mov
mov
pop
adc
lcall
jmp
iret
repnz
test
lcallw
cltd
hlt
jbe
or
sahf
sbb
mov
sbb
insb
rol
and
and
pop
mov
insl
rolb
aas
mov
jmp
xchg
or
push
mov
movsb
pop
inc
pop
or
cmpsb
xchg
or
add
xchg
mov
stos
pop
pop
insl
sub
jp
andb
jbe
or
gs
adc
dec
into
stos
adc
pop
inc
loop
jecxz
out
test
cltd
xor
mov
jae
fbstp
sub
dec
js
pop
cs
fsubp
cwtl
mov
stos
stos
je
sub
daa
repnz
push
mov
out
add
pusha
add
and
mov
mov
dec
cld
adc
scas
aas
push
mov
add
daa
addr16
jecxz
dec
insl
and
add
fs
xchg
sarl
movsb
clc
push
movsb
xor
cwtl
mov
or
das
cli
data16
sbb
adc
into
in
aaa
cmp
and
imul
inc
xchg
je
roll
ja
movsb
jns
jno
mov
cwtl
and
mov
pop
in
movsb
jp
aad
xchg
ret
dec
add
inc
push
jno
or
aaa
mov
xchg
lods
outsl
pushf
cmp
out
pop
push
mov
mov
jl
and
fimuls
dec
xchg
adc
jns
push
jb
icebp
push
sub
cld
xor
mov
call
adc
insl
jle
jmp
pushf
dec
lret
add
sub
push
popa
dec
lret
add
mov
into
adc
mov
sbb
add
int3
insb
jo
adc
shl
lods
or
mov
in
pop
popa
cmp
icebp
adc
push
push
dec
mov
pop
testb
fsubrl
or
and
jge
sbb
stc
fisttpll
sub
sub
ja
pop
inc
inc
stc
mov
mov
sub
lea
outsl
jnp
test
fistpl
stos
les
sub
inc
aam
faddp
mov
int
out
sub
or
gs
push
inc
xor
icebp
ja
mov
sbb
jne
cmp
dec
scas
addr16
sti
icebp
fwait
sti
es
push
imul
pop
inc
mov
mov
movsb
or
inc
cli
insl
dec
sbb
mov
sbb
ss
sahf
and
inc
loop
sbb
ret
sbbl
sti
jge
iret
push
xchg
out
arpl
jne
sbb
imul
test
aad
sbb
mov
xchg
cmp
jecxz
clc
sbb
stc
inc
adc
lret
inc
std
test
push
push
add
vcvtps2dq
mov
stos
push
jge
movsl
sbbb
gs
rolb
xorb
aaa
cmp
mov
jle
fs
int
mov
pop
das
xchg
pop
mov
mov
jno
mov
out
push
sbb
mov
data16
cs
pop
mov
loope
sub
ds
inc
call
push
pop
push
aam
sub
pop
push
adc
loope
xchg
mov
fmuls
insb
sub
mov
xor
xchg
stos
mov
mov
cmpsl
repnz
imul
dec
ficomps
xor
frstor
icebp
scas
js
aam
icebp
daa
xrelease
mov
popf
jl
and
into
icebp
ss
fwait
cmpsb
movsb
hlt
mov
jl
out
mov
cmp
fs
adc
cmpsb
mov
icebp
add
ja
sub
sahf
push
ja
mov
inc
inc
inc
pop
sbb
pop
adcl
pop
add
sti
jmp
fisubrs
out
aas
xchg
pop
pusha
mov
or
adc
rcrb
clc
cmc
jle
jle
push
int3
add
popa
inc
movsb
dec
dec
and
ret
sub
lcall
ds
xor
dec
nop
cwtl
add
js
xchg
clc
inc
mov
inc
inc
cmp
lahf
pop
call
test
inc
pop
aam
pop
jo
sti
and
cmpsb
dec
ret
mov
ret
mov
mov
loope
rorb
jae
jmp
out
push
ror
mov
rorb
ficoms
mov
mov
or
idivb
xlat
imul
jnp
inc
sbb
mov
add
cltd
xlat
inc
and
test
push
inc
or
out
jle
fcmovnb
mov
fwait
pop
out
mov
adc
jbe
daa
not
jbe
inc
dec
inc
fistpl
pop
jnp
outsl
xor
rcll
stos
or
hlt
in
stc
push
pop
adc
mov
cli
xor
pop
and
and
xchg
sub
or
scas
loope
sub
shll
cmc
lods
daa
pop
sbb
leave
add
mov
stos
push
lret
or
pop
divb
shrb
and
ret
iret
sub
loop
push
jb
test
scas
fdivrs
xchg
mov
dec
test
stc
rorl
ret
mov
test
sub
arpl
mov
xor
adc
pop
inc
cli
inc
les
std
sti
fldt
lea
ficomps
dec
or
lods
sbb
mov
insb
pop
pop
in
sbb
icebp
mov
jg
cmp
bnd
or
sbb
jne
test
mov
dec
insl
dec
out
movsb
fwait
aas
cmp
inc
in
cmpsl
sbbb
shrb
or
cmp
pop
fistpll
shrw
call
pop
inc
fiadds
cwtl
mov
int3
inc
or
inc
mov
sub
filds
out
mov
lods
inc
pop
jle
push
subb
jmp
std
mov
sub
pop
mov
xlat
ss
adc
adc
jo
or
movsb
and
addr16
mov
test
out
push
nop
mov
hlt
sub
andl
and
test
mov
out
xor
pop
ret
std
mov
mov
jns
bound
ret
add
fstpl
je
mov
push
ret
rcll
jl
sbb
mov
jno
dec
and
or
roll
and
loop
insb
xchg
add
sahf
and
sbb
daa
adc
dec
sbb
hlt
cmp
aaa
mov
loop
cltd
mov
push
es
stc
repnz
shll
sub
in
push
das
lcall
scas
sub
icebp
loop
jae
xor
xor
outsl
xchg
aaa
out
pop
jne
and
cmp
xchg
aaa
jbe
into
ret
movb
movsl
dec
push
and
lock
divl
mov
sahf
dec
cltd
je
sub
test
mov
xor
shl
dec
out
mov
xchg
sub
mov
fwait
cmpsl
scas
repz
std
ret
in
cmp
outsl
int
mov
in
insl
fisubs
inc
in
dec
int
add
inc
and
leave
cmp
xlat
fsubs
inc
push
xor
mov
subl
sahf
cmpsl
jg
out
pushf
call
popf
je
xchg
sub
sub
gs
mov
int3
xchg
inc
test
dec
or
pop
pop
data16
jne
sub
push
adc
dec
mov
adc
or
icebp
xchg
les
ja
cmp
rorb
imul
lret
adc
aas
mov
sub
push
shrl
adc
rorb
adc
and
xor
repnz
hlt
jb
inc
and
ficomps
mov
xchg
lea
mov
imul
mov
mov
sub
and
lds
je
into
ret
outsb
pop
popa
xor
push
jl
and
push
pop
xchg
sbb
xchg
and
xchg
int3
xchg
sbb
inc
add
or
scas
int3
and
xchg
or
clc
inc
scas
sbb
add
xor
addb
inc
fbstp
mov
out
dec
icebp
inc
mov
mov
sbb
xor
dec
jbe
fwait
repz
vcmpps
cli
inc
pop
jae
lahf
xlat
dec
or
in
js
fisubs
pop
pop
push
mov
pop
fbstp
xchg
popa
fdivl
imulb
cmpb
stc
ret
push
adc
inc
rcrl
mov
rep
push
mov
or
cli
popf
faddl
into
outsb
pop
push
movsl
mov
shrb
fmuls
das
fbld
mov
dec
lods
jecxz
xorb
repnz
xorl
test
clc
daa
in
xlat
adc
lock
loope
xlat
pop
dec
mov
xor
adc
mov
xlat
dec
ficoml
pop
mov
jmp
outsl
push
clc
ljmp
fistl
jnp
arpl
jae
sbb
adc
sbb
pop
adc
lds
test
jb
pop
dec
adc
cmc
roll
ja
nop
cli
dec
jns
push
aam
outsl
sub
into
outsb
sti
bound
bound
mov
cld
roll
shrl
mov
xchg
mov
js
sti
das
shlb
add
rorl
in
pusha
pop
add
lret
lds
int
jge
or
xchg
repz
adc
mov
pop
rorl
cmp
es
push
inc
sti
mov
lods
imul
inc
into
movsl
into
mov
filds
sbb
int3
pop
xor
ret
lods
mov
into
ret
pop
fistpl
scas
sub
stc
mov
push
gs
cld
dec
out
in
sub
push
jecxz
std
add
call
iret
out
pop
jecxz
fwait
mov
dec
lods
adc
xchg
ljmp
jns
out
popf
cmpsb
movsl
sub
cld
xchg
mov
sub
mov
fcmovu
jne
push
movsb
push
dec
test
mov
fucomp
lcall
out
fstpt
idiv
adc
xchg
cmp
test
ror
mov
ljmp
imul
sub
dec
or
cmc
nop
outsb
mov
loope
and
xlat
movsl
es
pop
sbb
addb
bound
lds
pop
xchg
mov
jae
leave
mov
xlat
push
xor
mov
andl
sbb
fwait
xchg
ja
lcall
pop
and
icebp
repnz
stos
sbb
jne
xor
xor
insl
inc
mov
test
mov
scas
and
out
mov
mov
hlt
sahf
bound
pop
call
inc
lods
push
test
pop
fs
in
out
and
mov
xchg
push
push
in
sti
repz
jns
clc
xor
repz
scas
fadd
mov
lea
cmpsb
push
loope
das
bsr
sub
sub
movsl
mov
pushf
loopne
push
xorb
aad
push
faddl
inc
popf
movl
mov
pop
filds
insl
sbb
fnsave
xchg
js
cmovg
je
repnz
cmp
fdivp
dec
repnz
cmp
imul
jle
add
dec
testl
push
leave
add
cltd
cmp
mov
sbb
push
dec
test
aas
xchg
mov
mov
fisubl
mov
lret
jno
jl
jmp
adc
xchg
stc
out
leave
pop
push
outsl
push
mov
fsubs
lcall
cmp
mov
imul
or
test
mov
xlat
je
roll
pusha
mov
push
pop
inc
xlat
sahf
and
cld
test
jbe
mov
jl
jns
fldenv
mov
cmp
into
shr
cli
jl
push
inc
jg
mov
fldl
lret
adc
jnp
scas
lret
adc
lods
jmp
scas
dec
imul
mov
inc
lods
inc
pop
addl
cld
sahf
mov
push
in
movsl
fists
mov
insb
inc
push
cmp
hlt
testl
mov
mov
nop
jle
bound
inc
lock
mov
push
scas
xor
insb
xchg
mov
mov
mov
jne
hlt
inc
fimuls
insb
lock
cmpsl
cs
mov
cmpsl
and
cmp
movsb
add
fnstcw
dec
inc
sub
out
test
lret
sbb
or
pop
sbb
addr16
sti
xlat
stos
ficoml
mull
leave
cmp
cmpsl
xor
jge
cld
stos
adc
inc
mov
jbe
mov
cmp
and
xchg
inc
sbb
jle
je
push
sti
sub
in
add
imul
jecxz
shl
jns
jbe
loope
dec
cmp
bound
xor
mov
jmp
int
adc
fcoms
adc
xor
popf
mov
es
inc
sbb
pop
jmp
xchg
cmp
pop
mov
das
jg
push
inc
or
out
mov
scas
scas
pop
sub
push
xchg
imul
mov
pop
insl
mov
push
mov
pop
xchg
xchg
sbb
arpl
push
dec
mov
icebp
ret
cmp
nop
pop
mov
daa
xchg
fs
xor
inc
dec
sub
adc
insb
imull
inc
ret
and
nop
ja
sbb
cmp
jbe
adc
fs
enter
xchg
xor
xor
les
mov
mov
pop
mov
pop
stc
sbb
push
and
jl
in
add
cmp
xchg
cmp
sahf
or
subl
mov
and
sub
rorb
aas
xchg
fistpl
outsl
clc
andl
mov
sahf
popf
lret
stos
dec
add
hlt
movsl
xchg
jns
inc
pusha
fwait
pusha
ds
mov
outsl
xor
imul
movsb
fnstcw
adc
in
jns
inc
lds
aad
out
sbb
pop
add
incb
dec
andl
adc
or
push
mov
sbb
scas
dec
mov
xchg
ja
sub
jg
movsb
add
sub
divl
inc
mov
xor
dec
clc
push
inc
aas
sub
xchg
jp
and
ficomps
pop
cmp
inc
mov
arpl
cmp
add
push
dec
xchg
pop
inc
out
and
scas
jbe
stos
sub
in
push
push
fdivs
adc
adc
xor
ret
iret
mov
xchg
add
mov
pop
sti
push
loop
frstor
sbb
jge
insl
push
inc
subl
and
inc
lcall
inc
lods
or
and
insb
faddl
cmpsb
sub
imul
scas
cmpsb
and
adc
outsl
sub
mov
mov
ret
jo
sbb
inc
arpl
bound
dec
iret
shlb
mov
arpl
and
inc
cli
rcl
add
nop
inc
inc
or
and
adc
outsb
push
mov
scas
pop
out
ds
or
scas
and
or
adc
dec
popf
stos
dec
inc
cmp
in
lea
aad
xor
push
repz
add
ljmp
in
xchg
fistpll
movsl
or
or
sub
adc
daa
orb
inc
test
push
inc
push
and
jo
arpl
cmp
out
or
cmp
inc
adc
dec
dec
pop
pop
xchg
adc
aam
sub
sbb
shrb
add
sub
xchg
outsb
dec
mov
aad
sbb
cmp
iret
repz
dec
nop
in
inc
xchg
mov
fildl
test
sti
pop
lods
mov
lret
cs
or
gs
aam
mov
xchg
or
jne
or
or
or
cmpsb
add
jnp
fbld
insb
fwait
mov
mov
mov
imul
xor
sub
or
adc
jne
jmp
push
jl
sub
mov
inc
mov
and
xchg
hlt
cmp
imul
jg
inc
lea
js
aad
xor
xor
mov
jne
jns
dec
mov
fs
sub
les
push
jg
jno
shlb
in
cmp
push
bt
sbb
lcall
arpl
add
mov
rcl
out
xor
mov
clc
mov
dec
pop
xor
mov
push
and
lahf
mov
test
js
orb
negl
cwtl
scas
clc
mov
std
fmuls
and
jno
das
leave
push
rorl
sbb
fiaddl
rcr
xor
rolb
stc
sbb
les
mov
add
mov
out
mov
out
jg
adc
adc
pop
imul
addr16
loope
add
xchg
xor
aas
movsb
push
je
ret
shll
div
jbe
and
gs
negb
cmp
sbb
in
dec
popf
jb
aaa
js
aas
int3
and
dec
mov
inc
in
pop
rol
pop
mov
in
std
lcall
jne
cltd
xor
stc
lods
cmp
pop
popf
and
popf
or
jmp
jp
pop
in
and
push
push
add
mov
cmc
test
aam
daa
mov
dec
xor
dec
add
outsb
mov
xchg
jbe
gs
stos
and
stos
mov
mov
aam
fwait
in
cld
aad
test
aas
push
xchg
add
push
sub
enter
in
xchg
lcall
sahf
dec
inc
shll
fucom
sub
loope
test
or
cmc
mov
aad
clc
add
xchg
addb
mov
push
call
and
mov
rcrb
inc
cld
xchg
sahf
jae
imul
lahf
cld
cmpsl
inc
int3
hlt
jg
push
or
test
das
mov
add
dec
bound
ljmp
mov
adc
mov
inc
test
add
dec
pop
add
ret
inc
xchg
test
divb
adc
daa
pop
jns
xchg
sbb
sub
andb
mov
lret
testb
dec
push
mov
mov
je
divb
int3
ret
lods
push
jmp
jl
sbb
or
adc
dec
cmpsl
jecxz
les
xchg
xlat
inc
fs
imul
xchg
fidivs
in
hlt
icebp
and
mov
mov
inc
or
xor
cmp
fcmovnbe
in
xchg
sub
mov
stos
and
sub
or
xadd
jo
mov
inc
out
lret
rclb
pushf
test
dec
jbe
aam
int
in
and
out
jae
push
mov
sbb
xchg
in
in
sub
andb
cwtl
mov
fsubp
popa
jmp
hlt
popa
mov
out
and
lock
pop
sbbl
bound
je
sbb
ret
lea
cmp
stos
mov
in
out
ja
test
bound
inc
test
mov
push
lds
lcall
arpl
xchg
es
gs
insl
mov
out
inc
xchg
iret
dec
fistpl
je
aas
adcl
dec
stos
mov
jg
rorb
dec
je
fnstcw
sbb
xor
data16
xchg
orl
inc
cmc
fstpl
sub
negb
pop
into
roll
fimull
iret
mov
mov
popa
xlat
arpl
xchg
mov
or
and
inc
dec
xor
push
fs
out
xor
cmp
or
xor
push
xchg
cli
shrl
stos
inc
popf
inc
jp
rorl
cmp
mov
or
jg
pop
dec
mov
js
pop
roll
push
pop
mov
sub
pop
mov
sti
repz
sbb
test
adc
cs
xor
pop
sbbb
out
pushf
pop
int
pop
cli
cmp
mov
pop
jge
mov
in
dec
dec
mov
stos
ljmp
push
pop
push
jp
sarl
cmp
cmp
cmp
jae
mov
jl
lret
inc
js
push
lea
insl
stos
fmull
in
mov
adc
jns
arpl
push
mov
xchg
jnp
stos
push
cmpsb
rorl
jecxz
cmp
fists
jle
lcall
cmp
and
roll
xchg
movsl
fsubrl
adc
xor
es
pop
xor
and
and
lock
mov
or
mov
lock
xor
loopne
dec
repz
pop
xchg
mov
xor
adc
cmpsl
into
lret
es
cltd
push
inc
push
cld
scas
lahf
orb
lahf
ja
mov
arpl
stos
sbb
jae
ret
adc
ret
ret
pop
ficoml
push
cltd
icebp
loopne
xor
mov
mov
pusha
outsl
push
fs
ret
xchg
in
jbe
test
ja
push
fnsave
cmpb
jnp
mov
das
mov
sub
test
adc
repz
cmpsb
jle
lret
jp
xor
add
jg
fnstsw
insl
mov
std
and
xchg
push
adc
je
jp
in
push
rorl
adc
dec
inc
stc
jle
mov
inc
imul
xchg
pop
jle
jnp
push
jl
mov
test
or
sub
dec
pop
mov
fcmove
xlat
push
ret
mov
or
jmp
cld
pop
or
or
aaa
loopne
cmp
inc
sbb
sbb
pop
xor
sahf
iret
inc
std
shll
les
jge
push
cmpsb
les
jg
scas
jg
xchg
leave
sbb
clc
mov
sub
push
sub
pop
inc
pop
arpl
mov
jg
push
add
flds
daa
or
sbb
xchg
mov
int3
lret
mov
xchg
data16
push
jne
out
mov
loop
ret
inc
add
jmp
mov
pushf
jp
sbb
repnz
sbb
push
mov
jmp
lret
mov
lea
je
fldenv
outsb
xlat
out
or
sbb
addr16
std
sub
scas
into
fsts
push
mov
sub
fstpt
stc
xlat
xor
aad
add
cmp
pop
pop
adc
fwait
xchg
adc
cmc
dec
jbe
gs
roll
jo
push
jge
mov
dec
les
pop
fwait
mov
cmc
in
mov
xchg
sahf
jae
stc
pushf
and
inc
loop
xchg
add
pop
mov
or
mov
mov
xchg
shll
or
mov
imul
test
out
icebp
mov
in
sub
push
pop
mov
loop
mov
dec
dec
fadd
dec
insb
and
xchg
out
push
cmc
sub
lock
rolb
ret
mov
cld
cmp
sub
sbb
aaa
lcall
rcll
cmp
pop
lds
mov
or
repz
add
loop
jecxz
pop
cmc
adc
fdivrl
aam
das
rcll
jne
lea
sbb
fldt
dec
jmp
mov
sub
push
xchg
test
mov
jecxz
jmp
ss
mov
sahf
nop
loopne
dec
and
xchg
iret
test
fsub
andl
insb
je
in
xor
xchg
pop
adc
loope
mov
jne
push
fisttpl
ret
or
sti
out
cmp
mov
fisttpll
jge
jp
inc
je
or
jg
das
lods
mov
stos
dec
pusha
dec
push
push
mov
out
dec
inc
fldcw
movsb
adc
jle
xchg
pop
dec
mov
push
pop
inc
cmp
lret
pop
punpckldq
push
push
outsl
andl
cld
sub
mov
mov
lret
jb
stc
fisubs
popa
loope
lock
or
and
pusha
test
pop
jae
dec
mov
cld
nop
insb
sbb
push
clc
jp
movsl
push
movsb
lds
push
subl
stos
clc
jo
cld
ret
xchg
jb
aas
popf
xchg
test
jle
pop
mov
add
mov
push
ss
scas
or
adc
jns
sbb
lea
cld
jge
insl
lret
lock
lea
rcrl
sbb
xchg
nop
sub
rclb
mov
sahf
xchg
and
xchg
xor
push
pop
popf
add
jbe
pop
mov
subb
push
clc
mov
add
rclb
jb,pn
pop
in
cmc
xor
jo
popf
fwait
int3
jno
nop
pop
jne
mov
icebp
xor
cmpsb
mov
cli
out
jmp
mov
sbb
bound
xchg
jge
mov
push
mov
nop
test
les
ret
dec
adc
jns
into
movsb
jg
pavgb
cmp
mov
sti
aad
mov
push
mov
push
sub
pop
lods
cli
inc
push
xor
push
fdivs
fnstcw
inc
mov
lds
xor
adcl
add
sub
pusha
test
leave
cmp
jnp
mov
andl
xor
pusha
add
add
inc
inc
or
cmp
dec
das
mov
pushw
dec
jg
mov
mov
jb
jecxz
dec
repnz
adc
lahf
jbe
add
lret
sub
mov
and
push
mov
add
xchg
push
jno
fmul
insl
inc
lock
test
pop
lret
in
xor
and
scas
push
js,pn
fbstp
fistpll
cmp
sbb
jbe
ret
xchg
push
stos
pop
test
cmp
push
cmpsl
mov
test
inc
outsl
shr
sub
pop
addr16
push
sbb
sbb
sbb
xchg
cltd
nop
mov
out
ja
outsl
je
mov
andb
lea
xchg
das
mov
std
dec
xchg
sbb
dec
arpl
cmp
sbb
xlat
je
nop
aaa
pop
out
push
test
push
sbb
jg
xchg
jno
xchg
inc
test
xor
aad
inc
popf
add
scas
mov
sub
cmp
sarb
mov
rclb
into
popf
fwait
lock
jmp
cmpsb
sbb
sub
xchg
adc
mov
dec
ret
test
and
fildl
add
sbb
fs
jle
jne
cmp
mov
rclb
mov
jg
lods
lret
sub
jg
popf
and
or
or
mov
pop
arpl
mov
outsb
cwtl
dec
test
loop
aas
fwait
dec
shr
out
js
fsub
jo
and
shlb
dec
xchg
adc
push
int
rclb
jbe
add
clc
mov
mov
push
ret
arpl
arpl
mov
mov
lods
nop
idivb
dec
fsts
dec
ret
xor
xchg
ljmp
cwtl
test
daa
sarb
stc
cmp
sub
call
scas
inc
sahf
cld
xchg
lret
mov
fsubrp
or
mov
subl
das
shlb
jbe
flds
jge
inc
inc
je
loop
pop
addr16
xor
loope
lret
fidivrs
adc
stos
lds
int3
lds
pop
call
and
imul
aam
sub
sbb
xchg
outsb
sbb
push
xchg
shlb
mov
imul
sbb
xchg
pop
mov
inc
fmuls
and
pop
divl
dec
xchg
repnz
mov
test
out
icebp
enter
mov
and
jl
jl
rclb
xchg
sbbb
icebp
sti
out
add
or
jle
addr16
xchg
dec
je
xor
imul
xor
push
ret
lods
or
out
test
or
sahf
in
jne
mov
popa
add
repnz
sub
shlb
iret
mov
pop
jo
out
jp
cmpsl
adc
addr16
fcoms
add
inc
outsb
add
adc
ret
cmpsb
test
mov
call
jne
jg
jnp
call
cmp
xorl
push
jmp
imul
ud1
int3
repz
pop
mov
scas
lahf
mov
xor
clc
mov
je
subb
push
mov
mov
push
sbb
sarb
mov
addb
mov
ja
or
jecxz
add
push
into
or
pop
xor
cmc
nop
push
in
mov
out
jno
int3
in
ljmp
int3
or
mov
mov
shll
movsb
int
jns
mov
mov
jae
mov
stos
dec
js
push
and
addr16
inc
jbe
inc
repz
lcall
and
popa
push
std
jecxz
push
addb
cs
sarb
lea
aaa
add
imul
test
cmp
and
mov
jne
lock
imul
push
in
insl
or
hlt
mov
mov
mov
adc
cmc
push
pusha
aas
inc
mov
or
adc
cmpsb
mov
jg
sub
xchg
inc
out
pop
negb
sti
fs
dec
je
cmp
push
adc
inc
test
test
int3
sbb
cltd
mov
fcmovu
adc
hlt
cmp
test
or
cli
inc
sbb
adc
rdmsr
mov
das
mov
sbb
cmp
icebp
dec
sbb
ss
add
xlat
out
out
fcoml
push
adc
es
jb
inc
inc
nop
and
mov
sbb
xchg
data16
fsubs
insb
popf
pop
jmp
je
lods
mov
or
out
dec
test
ret
shl
and
sbbb
xchg
ret
stos
adc
hlt
je
shlb
inc
add
push
and
mov
fsubs
jg
adc
jecxz
lahf
fildl
xchg
daa
lods
push
sbb
and
popf
xorb
pop
push
push
enter
into
shll
pop
add
pop
inc
imul
xor
jl
cmp
or
pop
xlat
xchg
cltd
andl
or
ret
xchg
loopne
and
clc
cmp
xchg
ret
pusha
jle
jmp
repz
jecxz
jnp
in
inc
fisubrs
test
xchg
data16
pop
dec
sub
adc
stos
add
jno
or
push
push
or
pop
out
cmp
pop
push
pusha
les
ds
ds
inc
in
iret
mov
mov
adc
imulb
mov
dec
rcr
mov
ja
add
or
rorb
push
pop
cmpsl
mov
ja
iret
lea
mov
fnsave
and
xchg
cmp
test
aaa
xor
orl
push
push
movsl
mulps
or
ret
mov
pushf
lods
cs
lea
out
pop
xchg
loope,pt
fcmovbe
inc
push
or
out
and
cmp
aad
lds
leave
outsb
or
dec
xchg
cld
stc
jmp
jg
mov
jno
std
pusha
dec
jl
pop
push
jg
sbb
xchg
jl
cltd
psllq
mov
rorb
mov
jecxz
mov
inc
xrelease
pop
fcmovbe
mov
lret
inc
iret
inc
cmp
jp
cltd
nop
repz
divl
sbb
shrl
in
movsl
sarl
filds
mov
aam
icebp
shrl
repz
adcl
xchg
int
or
mov
in
int3
push
call
je
ljmp
popa
cmp
js
cmp
mov
stc
jns
xor
lods
cmp
push
gs
rcrl
call
xchg
jne
addr16
mov
mov
or
push
or
and
test
or
punpckhwd
push
mov
and
xbegin
push
imul
push
leave
jp
shlb
popf
icebp
jecxz
test
inc
pop
ret
push
out
imul
or
repnz
pop
cmp
sahf
cmp
loopne
stos
jle
adc
jmp
pusha
out
push
xchg
mov
jp
sub
xchg
sub
add
mov
stc
dec
outsl
add
inc
push
push
xchg
sub
mov
xchg
lds
daa
cmpsb
jb
inc
jge
das
jg
cmpsl
je
pop
xchg
xchg
xor
out
push
imul
data16
sub
idiv
aaa
sub
cmpsb
out
cmpsb
divb
push
rolb
jge
dec
push
sti
repz
fists
in
sbb
test
sub
pop
aam
fsqrt
mov
test
lea
lret
push
test
stos
lods
push
mov
mov
and
cmpsl
xchg
cmp
fistpll
pop
push
xchg
orb
inc
xchg
nop
jo
xor
scas
mov
cmc
mov
test
mov
dec
mov
imul
out
jb
ja
daa
or
adc
sar
adc
adc
in
andl
mov
xorl
subb
addr16
scas
push
push
xlat
cli
cmp
orl
jne
xor
inc
aam
ret
add
pop
sbb
insb
jle
popa
inc
jne
ja
cmp
adc
decb
xchg
in
stc
or
sub
mov
repz
inc
ret
and
sti
fs
mov
cmp
std
sbb
or
or
inc
mov
cwtl
dec
enter
outsb
pop
jbe
xor
mov
stos
cli
out
mov
cwtl
cmpsb
inc
xchg
stos
cmp
ret
sbb
clc
dec
fwait
jecxz
jo
mov
adc
sub
aam
xor
scas
add
cli
and
fprem
mov
push
loopne
lcall
xor
push
adc
repz
lea
pop
fcmovu
call
scas
pop
cmp
or
jmp
test
rorb
jmp
dec
pop
cmp
push
sbb
das
and
movsl
inc
lock
test
in
xchg
sub
inc
movsl
movsb
mov
test
mov
pop
enter
ljmp
jge
add
popf
fabs
lahf
push
fs
push
ja
jnp
dec
shrl
inc
lds
dec
and
xchg
fwait
mov
xor
into
sbb
pop
mov
test
loop
lret
pushf
mov
mov
das
inc
jno
jb
adc
jmp
add
mov
or
mov
dec
lret
mov
data16
mov
and
aas
xor
push
aam
outsb
loopne
sahf
popf
aas
jge
dec
inc
mov
icebp
inc
xor
rorl
mov
dec
lcall
xorl
mov
push
jo
jmp
test
adc
adc
add
shl
jne
dec
mov
dec
pop
pushf
pop
sub
in
mov
sbb
sbb
lods
jecxz
outsb
clc
stc
rolb
out
mov
push
mov
iret
xchg
negl
fnstenv
push
xchg
and
push
cmc
pop
aaa
aam
ret
ret
mov
pop
jns
fwait
popf
jge
pop
pop
inc
ret
mov
push
cmp
pop
test
orb
sub
sbb
dec
test
loop
test
mov
jp
int3
andl
add
shll
popf
xchg
jge
mov
pop
enter
ss
sub
aas
or
inc
cs
loope
pop
test
int
push
pop
mov
arpl
inc
stos
or
incb
xlat
inc
jge
fdivrs
stos
cs
mov
gs
pop
fsubl
dec
add
jecxz
rcl
cmc
sbb
push
pop
push
stc
dec
pop
xor
mov
jnp
ficoms
sbb
mov
icebp
xchg
jb
pop
mov
add
dec
sahf
jmp
mov
jb
scas
xchg
cwtl
aas
dec
add
mov
nop
push
mov
dec
ss
inc
cmpsl
int3
push
scas
jmp
adc
jmp
mov
aam
add
jecxz
cmpsl
mov
repz
and
cmp
xor
fwait
mov
cmp
je
mov
cmpsb
shrl
test
sub
int3
lock
sbb
rol
fcomps
popa
or
jl
xlat
test
add
pop
xchg
or
scas
lret
js
mov
test
dec
push
dec
pop
xor
dec
sub
push
xchg
sti
movsb
cmp
pop
nop
xor
fistpll
rcl
fs
mov
or
aam
dec
mov
dec
imul
inc
mov
lcall
repz
out
arpl
js
jo
sbb
sub
adc
test
cmp
adc
xchg
jne
fildll
adc
push
stc
push
aas
mov
dec
test
adc
cmc
fildl
fldcw
test
push
outsb
shll
xor
mov
push
ja
pop
or
xchg
mov
out
out
ja
test
imul
jae
enter
cmp
cli
xchg
mov
bswap
test
dec
push
mov
pop
ljmp
jmp
xor
pop
sub
pop
mov
cmp
cwtl
call
stos
scas
xlat
cmp
jbe
mov
mov
lcall
mov
aas
xchg
push
mov
aas
insb
jno
or
daa
xor
addr16
insl
and
xchg
out
outsl
jno
jns
inc
or
sbb
lret
out
sbb
ja
rorb
mov
push
pushf
jno
xor
cmpsl
jae
lods
sub
in
or
aam
pop
xor
subl
ja
loopne
sub
pop
mov
out
rolb
and
mov
cli
in
or
push
pop
push
lods
cltd
loopne
push
mov
dec
fwait
xor
pop
cld
cmp
sbb
nop
repnz
shl
adc
int
sub
push
xor
jnp
jnp
sbb
push
rcr
pop
pop
or
aas
dec
out
and
flds
xor
mov
inc
cltd
or
jns
push
jns
imul
pushf
lock
xor
mov
mov
popa
and
xchg
aam
mov
shrl
aaa
sbb
xor
into
mov
adc
xchg
movl
out
pop
cmp
or
repnz
test
or
js
repz
mov
das
mov
call
lret
and
pushf
in
popa
dec
dec
lret
idiv
mov
je
or
and
popf
call
movsl
into
test
stc
inc
xor
ljmp
jp
js
mov
pop
sahf
lods
adcl
std
imul
pop
enter
dec
cmpsl
adc
jg
xchg
mov
iret
inc
shlb
mov
push
hlt
addr16
shrb
rcr
add
mov
popf
sbb
sub
jg
pushf
bound
nop
and
jge
sub
pushf
sub
hlt
sub
stc
stc
orb
dec
jl
adc
aas
mov
add
cmp
xchg
cmpsl
cmp
and
sbb
push
sbb
mov
sbb
enter
xor
pop
dec
bswap
mov
pop
popa
push
int3
pop
movl
xchg
sahf
and
decb
cwtl
gs
lods
pop
lea
imul
xor
std
mov
fsubp
mov
cltd
sub
das
cli
mov
xchg
mov
sbb
mov
arpl
insl
jg
jl
out
hlt
call
push
fimull
fistl
mov
addr16
das
dec
in
jl
or
push
and
addr16
mov
fmul
in
push
sbb
pop
es
dec
cmpsb
ja
dec
push
dec
jb
nop
jl
fs
cmp
cs
subb
cmp
loope
jb
aam
negb
fldcw
jnp
repz
lods
bnd
mov
fbld
into
inc
dec
lea
cmpsl
ret
mov
js
mov
sub
or
fistpl
push
and
xchg
ljmp
pop
xchg
push
and
push
jle
dec
or
jbe
out
fisubrl
xchg
sbb
subl
lret
sub
jge
inc
adc
mov
imul
lods
popf
aas
lret
dec
jae
inc
stos
bound
fsubl
xor
aas
mov
lods
cmp
xchg
cmpsb
clc
push
xchg
pop
call
and
aam
lcall
xor
pop
mov
xchg
dec
cmp
fnsave
fisubrl
jmp
xchg
xchg
mov
cmp
mov
insl
sbb
inc
lds
or
out
cmpsl
je
mov
sahf
ret
dec
cmp
sbb
jo
stos
and
scas
dec
sti
sbb
dec
sub
sub
inc
xor
push
pushf
xor
sub
xchg
cwtl
shr
push
fildll
or
inc
pop
cmp
pusha
cmp
dec
imul
scas
jae
pop
bound
test
mulb
or
ret
push
cmp
mov
dec
push
push
test
jl
push
inc
fisubs
jns
xchg
inc
test
mov
xchg
test
adc
jl
cmpsb
sub
testl
cmpsb
sub
sbb
fstpt
jmp
loopne
lret
shrb
xor
fisttpl
in
cltd
pop
add
lahf
aad
sub
sub
or
xlat
push
mov
mov
pop
loopne
or
push
gs
insl
daa
mov
lahf
jae
jmp
and
sbbb
push
inc
xchg
pop
mov
mov
scas
xchg
cmpsb
pusha
inc
fwait
shll
mov
sub
mov
mov
jnp
adc
nop
sbb
lcall
subl
sub
mov
addr16
stos
xchg
cmp
lods
mov
jle
xchg
fdivrl
cltd
lcall
std
or
loop
lcall
push
dec
mov
icebp
pop
daa
loop
lret
jbe
inc
pusha
divb
mov
loope
dec
icebp
mov
dec
pop
xchg
aas
and
dec
daa
ficompl
rorb
adc
push
popf
shlb
push
xor
sub
sub
cltd
out
pop
lods
jae
outsb
fwait
aam
sbbl
cs
in
daa
shrl
mov
push
fldt
push
insl
push
cmp
jge
push
clc
loopne
in
adc
hlt
std
and
in
fisubs
sub
js
pusha
adc
das
jmp
mov
lods
xchg
adc
sahf
test
iret
xor
mov
jecxz
mov
test
cmp
test
dec
dec
cld
daa
push
and
and
inc
lret
cmc
add
je
cmp
and
cs
mov
loopne
sbbl
adc
add
in
jl
sbb
bound
dec
xchg
out
xchg
lods
add
push
lods
cld
cmc
inc
xchg
mov
in
or
dec
outsb
xchg
mov
rolb
leave
add
or
mull
imul
lahf
sub
sbb
push
mov
cmc
or
mov
add
jb
mov
sahf
push
xor
inc
push
and
loope
xor
pop
pop
insl
enter
sub
out
nop
aam
stc
jne
adc
sbb
and
jne
bound
push
jge
ss
fstpt
inc
loop
shr
imull
xchg
mov
popa
test
inc
mov
je
scas
inc
lcall
jns
sub
and
pop
sub
ja
out
dec
adc
imul
mov
sahf
popf
jg
fs
and
out
adc
sbbl
aam
lods
push
rclb
dec
cmp
nop
and
pusha
stos
inc
sbb
push
mov
nop
mov
sub
mov
and
mov
cs
cmp
xorb
rolb
push
clc
dec
subb
rcrl
jnp
ja
pop
pushf
addr16
stos
ror
mov
jne
mov
jecxz
movlps
pop
xor
sub
icebp
je
es
aas
fsubrp
fwait
sub
mov
pop
divb
add
fbld
in
hlt
icebp
jbe
push
dec
bound
jnp
jmp
ffreep
mov
jp
lea
add
dec
pop
mov
inc
or
pop
xor
jne
adc
and
jo
xlat
fcoml
jbe
mov
rolb
cld
dec
pop
inc
mov
jno
mov
cmp
pop
call
pop
pop
push
sub
xor
xchg
lea
push
add
xchg
mov
pop
mov
inc
lods
mov
or
push
push
or
jge
sbb
mov
les
shll
icebp
push
xchg
data16
cmpsl
lcall
jno
mov
mov
popf
dec
or
inc
stos
dec
ja
ret
test
dec
cmp
jae
push
jb
stos
test
std
in
jge
push
adc
inc
pop
cmp
mov
aad
adc
dec
mov
mov
sbb
adc
fadds
add
cwtl
arpl
aam
push
cmp
imul
gs
insl
and
push
xchg
sti
xor
ficoms
jecxz
sbb
aam
mov
mov
mov
stos
xchg
nop
ss
jecxz
mov
or
cmpsl
cmp
les
push
jmp
jl
and
stos
shll
mov
adc
sub
popa
roll
push
xor
push
insb
rcl
or
or
dec
xchg
aaa
cmp
inc
ja
mov
jbe
or
dec
nop
xor
mov
mov
cmp
xor
push
xchg
test
lods
jno
and
movsl
repz
in
xchg
cmpsl
testl
add
xor
shlb
mov
mov
add
sbb
mov
adc
outsl
popa
add
ret
push
dec
test
stos
and
insb
jg
mulb
pop
ja
jge
cltd
in
ss
mov
inc
and
enter
out
dec
mov
jbe
pop
push
mov
inc
int
xor
jle
lahf
mov
xchg
cli
or
rcl
pushf
outsb
subl
pop
lods
inc
ds
xor
pop
mov
lret
mov
adcl
pushf
movsl
xor
mov
pop
enter
cmp
inc
mov
ret
icebp
sbb
int3
mov
sub
loop
xor
jnp
and
pop
or
push
out
push
rolb
xor
gs
jne
inc
stc
sbb
sub
jecxz
js
mov
scas
xor
jno
hlt
pushf
gs
xchg
pop
sahf
fsts
in
pop
push
stos
and
cmc
scas
adc
push
pop
xchg
mov
call
xchg
movsl
push
leave
test
div
xor
pop
push
cmp
aam
jae
int3
xor
fsubrl
mov
roll
notb
repz
and
jno
daa
mov
pop
pop
jl
cmp
int
inc
or
dec
les
int3
sbb
iret
lcall
test
cmp
ret
jno
xor
add
xor
jns
test
jge
cmp
inc
jg
lock
neg
iret
cmpsl
orl
push
jecxz
aaa
xchg
mov
pop
and
fldcw
cs
pop
aam
and
adc
cmp
adc
loop
jns
cmp
and
lea
rol
push
xchg
lods
out
adc
adc
movsl
loop
or
pop
sbbl
std
icebp
fwait
mov
mov
xor
pop
push
repz
sub
pop
jne
sbb
repz
mov
es
inc
rcl
ret
roll
das
mov
or
out
stos
dec
xor
cld
jg
fbstp
faddl
int
fldenv
fstp
sub
mov
rclb
inc
test
repnz
out
pop
add
mov
pop
mov
adc
ja
imul
cmp
std
in
and
das
jmp
cmp
out
lock
xchg
repnz
dec
xchg
add
inc
or
into
int3
sub
jnp
xor
mov
push
nop
stos
push
outsl
nop
stos
aaa
inc
imul
hlt
jb
jle
mov
jne
cltd
icebp
ret
xor
int3
outsl
sbbl
push
std
fidivs
scas
lods
mov
in
xchg
cmc
scas
sub
fidivrl
int3
negb
fcmovne
aaa
int3
xchg
enter
adc
divl
sti
inc
shr
xchg
sbb
lock
cmpsl
xchg
sbb
lock
push
lods
push
dec
pop
cltd
add
imul
pushf
mov
adc
sbb
pop
ja
xchg
and
ret
daa
or
fiadds
bound
and
mov
clc
jno
pop
rolb
out
and
hlt
in
std
insb
adc
mov
and
mov
sahf
sub
and
ljmp
jbe
pop
xchg
and
repnz
mov
xchg
mov
push
push
out
sbb
inc
dec
call
test
dec
lea
lods
add
ffreep
enter
test
mov
fstpt
cld
inc
add
push
call
mov
mov
faddl
dec
ficoml
cmp
in
fs
inc
shrl
sub
in
cwtl
fstpt
bound
push
mov
fistpl
repnz
and
mov
xchg
and
lds
jnp
push
cmp
ss
test
test
aaa
push
jecxz
std
cwtl
mov
jo
stos
jno
pushf
call
adc
mov
or
mov
test
pop
and
jl
pop
bound
cmp
gs
out
xor
jmp
jb
mov
xchg
sbb
rcrb
cmp
mov
andb
add
in
cmp
jo
mov
sub
cltd
cmpsb
ljmp
xchg
scas
adc
inc
fwait
xchg
in
dec
out
mov
mov
jg
stos
shlb
mov
xchg
mov
pop
or
xchg
test
sbb
stc
jnp
mov
mov
ss
fstl
and
pop
xor
imul
xor
repnz
pop
pushf
int
les
mov
popf
adc
xor
rolb
subb
mov
dec
int3
arpl
mov
add
pop
ljmp
xor
fnstcw
jo
cmc
ror
jne
test
jp
push
pop
pop
test
insl
push
dec
mov
pop
idiv
cmp
bndstx
pop
pushf
sub
mov
lock
push
mulb
lods
test
push
paddusb
inc
add
rcll
push
adcb
xchg
adc
scas
push
pop
jo
ljmp
outsl
scas
test
cmp
in
test
push
inc
adc
push
addl
push
and
nop
test
or
test
enter
fs
mov
rolb
pop
pop
push
jmp
adc
sub
push
pop
pop
inc
adc
sub
or
adc
cmpsb
mov
mov
lock
jnp
neg
sbb
outsb
enter
mov
and
dec
dec
pop
popf
pusha
movsb
movsl
imul
fdivrl
movsb
iret
xchg
aam
lea
jecxz
pavgw
repnz
jne
pop
push
sub
pop
dec
mov
stos
sub
mov
test
leave
lcall
aas
jmp
in
arpl
jb
push
sub
and
pop
scas
lods
adc
shll
test
mov
sub
int3
ds
mov
dec
xor
movsb
mov
jo
shll
mov
or
mov
aas
dec
add
rclb
and
pop
movsb
outsb
mov
out
mov
sub
xchg
cmp
dec
enter
mov
movsl
lods
movsl
sub
pop
pop
dec
xchg
sub
fdivr
sbb
jecxz
int
or
adc
pop
xchg
out
push
setae
jo
mov
and
js
jae
adc
or
lock
pop
aad
subb
xchg
push
imulb
ljmp
add
sub
orb
stc
in
andb
dec
cwtl
mov
aas
sub
sahf
pop
insl
daa
dec
lea
int
daa
lret
adc
aad
adc
and
subl
or
rcrb
mov
xor
mov
pop
adc
pop
aad
push
inc
js
mov
cmc
les
imul
mov
adc
insl
sahf
inc
sub
add
leave
jb
mov
movsb
cmp
in
lcall
sub
lock
lret
jnp
sbb
mov
cmp
pop
xlat
inc
jecxz
push
fimull
lret
popf
les
stc
out
pop
js
dec
addr16
push
sub
push
test
popf
out
in
cltd
in
ret
nop
sub
in
rep
jbe
iret
cmpsl
mov
andb
sbb
cmpsl
jae
js
aas
push
jp
lret
fdivrl
and
dec
shrl
movsl
enter
push
dec
hlt
sbbl
jmp
xor
mov
sarl
fdivs
inc
xor
lods
mov
push
pushf
stos
jo
and
push
repnz
add
dec
mov
fwait
mov
in
and
mov
out
push
lahf
cmp
mov
shrl
mov
adc
push
lret
hlt
loope
popa
lock
or
sbb
push
push
inc
and
adc
jl
xor
mov
inc
add
push
xor
es
or
cmp
bnd
sbb
fdivs
or
add
or
or
xchg
movsl
or
mov
mov
andl
cs
loopne
push
repnz
in
imulb
in
or
test
clc
imul
lret
jns
dec
js
test
push
mov
mov
and
jg
jmp
frstor
sub
jne
dec
lcall
push
jns
insl
jne
mov
mov
xor
fistl
fsubl
sub
lea
mov
and
bndstx
jae
add
data16
sub
cmp
scas
pop
in
push
test
aaa
jle
pop
inc
adc
mov
cmpsb
jle
sbb
out
or
fbld
imul
inc
sub
enter
jp
mov
lds
shrl
add
cmp
sbb
add
fadd
sarb
sub
sbb
les
or
mov
adc
xchg
ret
xlat
jbe
jg
movsl
xchg
into
jl
imulb
outsl
popa
push
lret
sbb
push
fisubs
and
jb
push
adc
hlt
sub
arpl
fdivl
xchg
lret
sbb
inc
sub
xchg
stos
xor
push
cmpsl
rorl
scas
jmp
add
lods
daa
xchg
and
mov
imul
jge
push
ljmp
cmp
or
ljmp
mov
cld
mov
push
fsub
xlat
bound
inc
push
in
pop
jae
adc
dec
inc
push
fxam
in
scas
stc
or
fsub
dec
dec
lret
xor
ljmp
push
or
pop
movsl
test
inc
jo
cmp
adc
push
cwtl
lcall
pop
inc
mov
addl
cs
loop
sti
cmp
flds
pop
test
and
into
out
outsb
jmp
fsubs
jae
push
sbb
fcoms
in
ja
push
insl
mov
mov
mov
push
push
movsb
adc
add
xor
mov
pop
std
fstpt
aaa
or
les
ret
dec
and
ret
hlt
les
aas
mov
dec
mov
sub
jp
dec
inc
fadd
jbe
push
dec
mov
mov
movsb
mov
jbe
lcall
mov
das
pop
in
sub
or
xor
imulb
fs
jae
fildl
xor
insl
add
mov
cmpsb
jg
cmp
mov
mov
sbb
inc
push
dec
testb
jge
inc
lds
rcl
ret
fnstcw
pop
out
insl
add
test
jbe
imul
in
xor
mov
sub
or
ss
add
ret
cmpl
popa
push
pop
inc
addr16
xchg
scas
mov
cld
jmp
test
or
adc
divb
pop
and
test
push
push
pusha
insb
pop
xor
or
push
or
adc
arpl
cmc
jmp
ja
sar
inc
pop
mov
pop
aaa
das
mov
int
into
mov
adc
test
imul
mov
xchg
das
push
inc
add
adc
xorb
mov
add
xor
rolb
in
inc
out
out
add
and
in
mov
jns
mov
mov
push
mov
mov
adcb
push
loop
les
icebp
inc
and
jle
sbb
xchg
or
std
mov
and
inc
loope
clc
cmc
sbbb
scas
aam
loop
mov
cmc
ja
js
adc
in
cmp
leave
xchg
out
push
aad
push
aas
out
hlt
movsb
insl
adc
push
aam
xchg
shr
xchg
sub
adc
pop
jecxz
mov
jmp
sbb
sub
dec
or
mov
shrb
xchg
cli
pushf
test
add
sti
es
jno
sub
fdivr
push
imul
lret
dec
lock
or
mov
or
pop
lret
push
test
push
fdivl
jb
sbb
pushf
fwait
int
dec
fnsave
popa
fisttps
int
or
pop
mov
cmc
dec
sbb
jl
cmc
iret
sahf
sbb
inc
sub
jae
xlat
dec
cmp
sbb
sub
dec
xor
out
addr16
xorb
fcmovu
sub
aad
jg
push
inc
mov
notl
insl
jg
rcrl
xchg
pop
cmp
cmp
sbb
icebp
mov
push
add
repz
mov
and
and
pop
in
jle
cmc
out
cmp
movb
pop
xor
sbb
mov
rcrl
mov
sub
ret
xchg
stos
mov
add
jbe
mov
aad
add
mov
cmp
mov
int3
jecxz
ja
inc
lahf
leave
ja
enter
out
xchg
xor
out
mov
dec
lods
mov
inc
xchg
pop
daa
ss
psubusw
pushf
mov
js
sbb
addr16
cwtl
lret
push
lods
inc
stos
push
jno
pushf
and
dec
dec
mov
xchg
lahf
xor
fxch
inc
xor
jo
inc
inc
push
push
icebp
mov
push
pop
dec
jno
adc
fsubrl
shl
mov
mov
leave
jl
dec
inc
xchg
hlt
xor
pop
inc
pop
mov
mov
jmp
adc
xchg
inc
add
dec
mov
stos
cwtl
shll
push
int
push
std
shlb
and
jns
sbb
in
mov
fidivs
adc
push
mov
dec
out
das
xor
fs
and
jecxz
cmp
xor
push
push
pop
mov
sahf
adc
sub
ljmp
sarb
sahf
fimull
sub
subl
xchg
xchg
sbbb
clc
mov
pop
sub
lock
push
leave
mov
mov
inc
and
fsubp
cmpsl
ret
movsl
outsl
roll
and
es
sti
imul
mov
add
imul
sub
rolb
cmp
sub
aam
xor
sub
pop
xor
das
das
nop
fidivrs
push
sbb
push
sbb
icebp
lcall
enter
cwtl
push
mov
shr
pop
or
cmpb
cwtl
push
dec
xor
jb
or
cli
pop
sahf
dec
or
add
sub
inc
nop
lcall
xor
push
andb
out
popa
push
movsl
in
stc
xchg
mov
test
fcomps
ret
mov
std
mov
xlat
mov
push
rcrb
and
dec
fmul
jg
je
add
insb
std
or
add
les
dec
inc
sysenter
pop
inc
jp
dec
mov
in
dec
in
flds
push
inc
pop
aaa
out
call
aad
ljmp
sbb
or
or
dec
int3
int
jns
test
jge
mov
stos
cwtl
je
push
je
dec
dec
sbb
repz
push
cltd
mov
les
cmpsl
test
jne
shl
xor
inc
sub
insl
push
lods
sbb
inc
fadds
dec
stos
sbb
xor
out
xlat
sbb
push
lock
sbb
inc
test
jl
or
out
outsl
stos
mov
testl
out
imul
sti
arpl
std
or
test
mov
mov
into
mov
inc
call
mov
sub
ficoml
fcoml
mov
pop
pop
xchg
incb
mov
jae
push
std
lret
xor
mov
dec
movsl
xchg
push
add
sbb
outsl
cmp
jbe
ret
fdiv
and
xor
cmp
fmull
mov
sahf
adc
cmp
sbb
jg
and
shll
pop
inc
inc
scas
les
out
cwtl
sub
icebp
push
arpl
and
add
adc
or
clc
lahf
insb
jle
ja
pop
arpl
xchg
mov
jecxz
fwait
andb
jns
mov
je
adc
imul
ljmp
imul
rcrl
cs
jo,pt
push
cmp
shrl
fsubs
das
jg
sub
cmp
fnstsw
push
je
push
and
mov
sahf
pusha
pusha
dec
fsts
test
call
and
hlt
jmp
pop
and
jne
push
into
jne
push
loope
jp
xor
sub
in
pop
and
lock
dec
pop
mov
insb
push
or
push
mov
lret
adc
pop
xor
ss
std
in
call
insb
sbb
fidivl
aam
inc
xchg
cld
sub
or
loope
movsl
xchg
inc
daa
outsl
int3
ret
fistps
leave
add
loope
fnstenv
fdivr
arpl
pop
mov
push
lock
scas
dec
aad
mov
pop
inc
sub
mov
or
test
xor
mov
stc
ds
clc
inc
adc
rcr
adc
dec
lea
addr16
and
sub
inc
lcall
or
pusha
mov
in
pop
or
imul
adc
into
xchg
jns
jge
pop
in
or
jge
and
data16
cmp
xlat
aam
fstpt
frstor
int3
cmp
ror
xchg
dec
mov
cs
in
inc
test
jnp
nop
push
les
insl
imul
lahf
dec
js
mov
cmp
push
mov
mov
pop
xchg
cmp
je
in
pop
out
addr16
push
mov
rcr
xor
js
xchg
pop
pop
fcompl
mov
out
insb
imul
fwait
les
xchg
lret
shlb
sti
pop
hlt
mov
cmp
aad
aaa
insl
pop
dec
cmp
mov
mov
rorb
sub
xchg
bound
push
cmp
add
cmp
xlat
fwait
xchg
mov
rolb
int3
adc
xor
mov
inc
popf
pusha
pop
fisttpl
cmpsb
mov
mov
aam
ret
add
mov
dec
jnp
ja
jo
xchg
fdivrs
pop
sysenter
aaa
xchg
or
add
xorb
cmpsb
sbb
aam
mov
sarl
mov
mov
outsl
aam
outsl
out
fisttpll
inc
and
mov
imul
or
std
out
popa
mov
inc
jns
ss
ret
mov
dec
xchg
stos
inc
mov
mov
push
mov
es
or
movsb
out
jg
outsl
add
and
daa
xor
js
push
in
ficompl
rorb
and
das
cmp
shlb
push
and
movsl
andl
sub
into
lahf
pop
mov
fs
pusha
mov
jb
pop
cltd
xchg
pop
sub
shll
insl
cs
out
jb
mov
add
std
xchg
cmpsb
cld
mov
jo
and
pusha
sub
dec
push
fs
add
lret
and
lds
xchg
pop
lcall
jo
or
pop
mov
cmp
out
insb
es
xlat
jo
pop
mov
cmp
push
cmpb
jp
mov
jbe
cs
ret
inc
in
or
or
mov
add
into
int3
jl
stos
inc
loop
mov
mov
sub
mov
push
addb
fists
push
or
push
into
jg
sbb
dec
lret
push
push
arpl
inc
sub
mov
enter
jae
in
jg
outsb
sbb
pop
adc
call
sub
jnp
xchg
jne
aam
mov
movl
mov
movsl
pop
mov
fildl
lret
loope
cmpsl
mov
filds
jne
push
in
fwait
dec
std
xor
aad
xorb
mov
popaw
push
orb
cmpsb
ror
sbb
int
pop
sti
mov
or
and
clc
out
sub
push
jecxz
xor
andb
mov
jg
sbb
les
test
mov
dec
test
jno
in
aad
rclb
jl
jbe
mov
jl
inc
pop
pop
popf
cld
ds
aas
iret
push
andl
test
lret
sbb
out
xchg
cmp
out
pop
push
nop
dec
jno
sbb
cli
scas
sbb
imul
les
or
frstor
and
adc
repnz
dec
inc
ss
jmp
mov
es
nop
js
std
and
in
jae
mov
fsubp
ds
inc
jecxz
mov
and
mov
jge
push
or
mov
adc
call
aam
push
fisubs
lahf
shlb
sbb
lods
xor
mov
addr16
sbb
aad
call
les
mov
mov
jle
cmp
mov
xor
push
leave
adc
lock
aam
clc
mov
mov
mov
repnz
sbb
arpl
push
or
dec
es
jno
ja
fadds
cmpsb
mov
imul
stos
adc
into
movsl
xchg
je
adc
in
xor
mov
test
mov
jae
out
push
std
mov
push
shlb
jg
popa
and
test
mov
lock
mov
and
jb
mov
mov
adcl
adc
mov
gs
stos
cltd
mov
xor
lds
outsl
loope
lock
je
lock
pop
sbb
in
push
xor
inc
leave
pop
mov
xchg
addb
sbb
sar
jns
int3
pop
stc
imul
jp
pop
mov
lock
jnp
inc
xor
sub
mov
xor
rcrl
loope
jecxz
je
enter
orb
mov
mov
push
not
push
jmp
repnz
cmc
fmull
movsl
in
xor
jge
lods
pop
lret
jle
insb
inc
ljmp
adc
out
sbb
sbb
aam
push
cs
lret
ja
xchg
or
mov
repz
js
and
mov
incb
push
fs
int
sarb
dec
adc
add
outsl
or
rcrl
call
adc
adc
lcall
out
sub
loopne
xchg
shll
pop
mov
xor
fldcw
jle
mov
mov
out
in
jp
rcll
mov
adc
inc
stos
cmc
cmpb
in
push
lsl
movsb
and
jne
fldl
sub
stc
not
add
imul
sahf
sub
loop,pt
sbb
sub
sbb
push
outsb
in
lret
inc
xchg
xchg
stos
pop
mov
dec
push
and
js
loope
sub
pop
insb
jb
scas
jp
loope
mov
cli
nop
sub
mov
push
test
xor
inc
aas
pop
mov
jae
stos
mov
stos
xchg
cli
stc
or
sbb
jle
bound
loop
pop
mov
pop
arpl
scas
dec
pop
add
iret
mov
dec
test
cmp
orb
into
mov
popf
mov
test
lret
dec
push
mov
mov
mov
adc
cltd
sbb
cltd
imul
lret
call
inc
push
aas
sbb
nopl
inc
lods
mov
fstp
dec
or
push
es
lea
mov
xchg
push
test
lds
or
in
xchg
in
lcall
jb
cltd
mov
dec
and
cmp
or
dec
mov
mov
inc
jl
cmpsl
fs
or
push
mov
adc
mov
in
les
emms
in
dec
inc
cli
arpl
xor
inc
cmp
add
out
dec
inc
aad
or
std
pushf
or
and
xchg
mov
sbb
rcll
jae
or
jae
push
adc
sarb
outsl
sub
jae
jne
addl
mov
xor
in
daa
je
cmp
iret
out
sub
mov
stos
pusha
in
push
sbb
adc
je
push
and
inc
fidivs
adc
mov
dec
pop
stos
xchg
dec
in
jae
add
or
xlat
nop
jnp
pop
jbe
or
mov
xchg
sub
arpl
inc
push
and
notl
nop
inc
adc
fisubrs
fdivp
mov
leave
int
and
rcr
jp
add
cmp
xorb
xor
jp
cmpl
push
shll
mov
inc
mov
mov
insl
xchg
mov
test
out
lret
pop
cmp
inc
or
inc
pop
addb
lcall
daa
xor
iret
rclb
in
addr16
stos
xchg
cmp
xchg
jge
sub
into
cmp
pop
icebp
push
mov
insl
add
lods
stos
rolb
inc
cmp
xchg
xlat
cmp
enter
out
push
add
enter
cmp
cwtl
insb
testl
lcall
adc
pop
mov
cmp
pop
jp
test
dec
imul
mov
or
movsb
mov
cmp
sub
mov
es
push
enter
xchg
ljmp
xor
sub
ffree
insl
daa
imul
xchg
mov
jne
aad
imul
ret
adc
int
inc
xchg
pushf
ret
aam
stos
mov
cmpsb
out
xchg
mov
lcall
mov
and
cmp
sbb
lret
cmpb
inc
xchg
ja
into
and
push
push
mov
sti
int
jmp
push
mov
cmp
test
mov
pop
mov
test
inc
negb
out
xlat
hlt
fimuls
insl
mov
fsubp
jmp
add
cmpsl
push
adc
addr16
faddl
out
xchg
adc
sarl
rcrl
int
outsl
inc
lods
aam
outsl
sarb
dec
pop
dec
cmp
xlat
cld
mov
adc
mov
xor
push
out
in
xor
mov
rcl
popa
xor
sbb
pop
add
rep
adc
addb
rcl
iret
and
cmp
iret
lret
jp
sarl
fbstp
inc
mov
cmp
fsubrl
pop
pop
dec
xor
outsb
inc
enter
scas
lods
in
loopne
add
push
imul
popa
movsl
jo
xchg
mov
leave
mov
cmpsl
pushf
and
pop
dec
scas
and
popf
sub
int3
ss
mov
fcoms
test
mov
pop
adc
pop
jge
pop
mov
jns
testb
mov
xor
enter
inc
in
and
imul
shlb
sbb
sbb
jle
popa
fisubl
xchg
jp
xchg
jmp
push
inc
das
xor
lret
add
inc
xor
xor
mov
repz
sbb
lret
mov
push
aas
and
jns
bound
std
xor
sbb
xlat
xor
cwtl
mov
arpl
loope
jo
stos
imul
sub
push
cmp
fidivrs
pushf
pop
or
fdivl
call
test
pop
sbb
imul
je
rorl
cmpl
bound
fisubl
daa
cmp
pop
add
sub
dec
xor
cmp
mov
push
dec
add
subl
add
mov
push
mov
outsl
mov
or
loop
push
cli
mov
push
dec
push
push
mov
add
mov
rorl
out
ljmp
fprem1
pop
inc
in
bound
pop
fbld
idivb
repnz
js
rol
in
test
mov
popf
movsb
test
jecxz
xchg
lea
mov
push
dec
cmc
mov
out
lds
frstor
fwait
adc
sbb
adc
xchg
scas
dec
mov
mov
imul
sbb
aam
mov
dec
out
pop
imull
sub
leave
cs
lahf
sti
nop
fdivrp
aam
pop
imul
popl
adc
or
outsb
sbb
clc
popa
mov
xor
cmp
sar
loopne
add
jmp
sarb
pop
outsb
clc
dec
or
call
push
jae
jb
dec
sbb
pop
fimuls
inc
divb
insl
push
mov
dec
adc
jno
data16
icebp
adc
adc
pop
aaa
or
inc
xor
into
ss
sbb
pop
stos
jo
cld
es
fwait
pop
xchg
add
int3
shll
fs
or
mov
and
ss
jo
cmp
xchg
ret
ret
es
lret
dec
add
sub
fmuls
fld
jmp
into
es
mov
adc
dec
test
outsb
lret
xchg
cvtpi2ps
and
sbb
rcr
cmp
dec
stc
inc
cltd
inc
js
push
call
sub
lcall
mov
mov
sub
or
xor
push
cmp
imul
lahf
mov
rcrb
js
jl
cwtl
fisttpl
dec
mov
or
mov
pop
cltd
sar
outsl
popf
clc
cs
cmp
xchg
scas
cwtl
xchg
jo
or
into
mov
pop
jne
jmp
in
flds
jmp
sub
lret
push
mov
sahf
mov
loope
daa
rcll
inc
mov
adc
push
outsb
repz
into
pop
mov
rolb
pop
cmpsl
dec
mov
icebp
lret
test
iret
xor
icebp
in
xchg
push
jno
push
and
dec
insb
mov
arpl
sbb
mov
mov
dec
dec
jbe
inc
mov
push
cli
xchg
ret
cmc
pop
inc
stos
inc
nop
xchg
sub
add
jecxz
in
ds
push
push
je
mov
sub
rsqrtps
mov
fsubp
mov
mov
cmpsb
fldln2
xor
inc
and
add
mov
mov
mov
push
andl
in
enter
dec
jbe
lahf
sbb
push
xchg
stos
call
inc
test
jmp
sbb
sub
outsb
add
mov
mov
pop
xchg
xchg
fdivs
or
outsl
mov
fwait
add
bound
gs
push
fstps
jo
cs
cwtl
xorb
cmp
xchg
xchg
out
or
fwait
cmp
jns
mov
in
jl
xchg
jg
shll
ja
js
mov
filds
shll
mov
jno
xchg
pushf
mov
aad
xchg
fcom
inc
xchg
movsb
sbb
mov
xchg
and
adc
push
pop
js
mov
or
jecxz
sbb
lea
or
fnstsw
jp
ss
sub
ss
cli
out
nop
or
jae
enter
clc
xchg
dec
stos
das
ret
outsl
cld
outsl
out
daa
xor
inc
subl
arpl
sub
mov
push
daa
adc
out
dec
movsb
mov
sbb
xor
xchg
ja
pop
into
leave
and
cwtl
or
inc
cmc
sub
js
fcompl
cltd
adc
imul
fld1
rcrl
cld
mov
clc
or
mov
jo
lahf
ficoml
imulb
imul
add
push
inc
push
test
jecxz
aaa
ret
lods
mov
scas
adc
cltd
pop
push
mov
pop
mov
sub
push
jae
xor
test
adcl
andl
jns
loopne
mov
out
mov
jle
lods
bound
mov
repz
js
xchg
gs
sahf
aam
pushf
pop
adc
fld
jnp
movsb
arpl
arpl
in
jl
push
out
pop
ret
test
mov
sub
push
mov
out
popl
pop
xchg
int
adc
push
mov
sub
jo
xor
fsubrs
ficoms
mov
mov
scas
je
lret
data16
jmp
nop
leave
mov
push
and
sbb
cmpsb
test
roll
cmp
xor
daa
cmp
cmp
xchg
push
inc
je
fdivrs
in
cwtl
imul
in
outsb
xchg
mov
arpl
ja
pop
out
mov
jecxz
dec
pusha
das
pop
pop
repnz
xor
push
aas
or
popf
test
outsl
mov
test
ret
int
aaa
sbb
or
xchg
bound
fcomps
sarb
xor
push
pop
lods
addr16
xor
mov
fwait
jo
and
or
pop
mov
in
xchg
ja
add
fldenv
fcmove
scas
jl
sbb
bound
mov
mov
or
sti
hlt
jno
inc
rol
std
push
jne
mov
xchg
dec
mov
cmp
ljmp
cmp
sub
mov
adc
inc
mov
shl
dec
xchg
and
scas
outsb
push
out
cmp
cli
lods
sub
dec
dec
scas
dec
xchg
and
in
add
ror
jl
fldl
sub
jae
add
aam
adcb
adc
pop
dec
lods
and
or
rorb
mov
clc
repnz
add
mov
mov
dec
ror
rorl
mov
xchg
cmp
arpl
inc
test
cmpsb
andl
shrb
dec
es
fmull
cmp
cmp
jae
mov
not
aad
mov
jne
pusha
sbbb
sub
xor
sbb
inc
ljmp
xor
push
push
adc
hlt
leave
pushf
shll
ss
mov
pop
jbe
fidivrs
mov
mov
sub
int3
inc
jle
mov
xchg
dec
push
lahf
call
mov
std
adc
test
or
popf
inc
iret
sbb
mov
dec
addr16
sbbb
cli
sub
mov
call
je
sbb
iret
jmp
aas
mov
leave
pop
enter
or
bound
mov
inc
pop
inc
aaa
mov
add
flds
aaa
imul
rcrl
stos
pop
popa
loopne
inc
pop
ret
lahf
mov
mov
dec
xor
mov
cmp
ret
jp
mov
cmp
push
cld
and
mov
mov
jns
sub
cmpsl
xchg
or
dec
xor
lret
push
sbb
pop
lahf
cmp
push
xor
insl
inc
push
outsb
jg
adc
cmp
gs
adcl
inc
fmull
fbstp
int3
jns
and
inc
inc
jle
cmp
lock
and
call
mov
push
cmp
adc
and
sbb
dec
jb
cmp
ds
cld
scas
mov
loope
scas
cmp
outsb
inc
sub
sarl
xor
fistpl
out
jp
sti
inc
jp
cmovl
jp
rcrb
dec
fwait
xlat
mov
jecxz
sbb
shl
mov
ljmp
out
mov
cltd
out
cltd
stc
int3
pusha
add
jo
mov
in
fnstenv
adc
insl
dec
loope
mov
outsl
in
lret
aaa
cli
lahf
mov
pop
bound
test
cmp
out
scas
andl
push
jno
outsl
fsubrs
push
sub
pop
shrl
xlat
stc
jb
sub
mov
jle
es
je
jp
mov
fisubrl
mov
jnp
xchg
repz
push
mov
push
xchg
std
insb
fadd
add
jg
mov
xchg
ljmp
inc
lea
push
lods
repz
rdmsr
out
ret
cmp
enter
das
lret
jle
cmpsl
xchg
roll
adc
sub
sbb
fdivs
mov
subl
or
mov
push
ret
mov
push
dec
ss
mov
sub
fimuls
loope
jl
xchg
in
sbb
xor
adc
mov
in
mov
cmpl
shr
outsl
adc
pop
fcmovnbe
das
imul
and
xchg
mov
add
jle
in
decb
push
sub
dec
or
mov
dec
inc
dec
mov
xchg
aad
mull
add
pop
repnz
cli
repz
arpl
das
out
xchg
stos
xchg
push
enter
mov
mov
lods
mov
scas
in
movsb
pop
cmpsl
stc
fists
loope
out
mov
ja
xchg
mov
pop
dec
scas
popa
dec
add
inc
and
add
xchg
add
ss
imul
xor
push
cmp
adc
jnp
xor
mov
fs
out
mov
test
mov
push
jecxz
pop
xchg
add
stc
lret
cmp
pushf
aas
fnstenv
aas
xlat
add
adcl
adc
xchg
dec
dec
aaa
das
pop
mov
or
mov
leave
push
popf
int3
lods
pushf
pop
mov
jae
mov
push
ret
out
jo
lret
sbb
mov
inc
jne
std
xlat
movsb
jb
imul
fldt
xlat
icebp
hlt
loop
sbbl
repz
push
sahf
addr16
inc
pop
ja
xchg
lds
xchg
rorb
adc
repnz
pop
fbstp
out
cmp
sub
je
xchg
pop
pop
fwait
pop
lcall
mov
lods
enter
xor
out
movsb
jns
rclb
fbstp
pop
sbb
pop
inc
mov
dec
jb
leave
aad
sbb
add
arpl
push
stos
lock
pop
fldenv
xorl
popa
adc
stc
sbb
mov
xchg
inc
push
pop
movsl
or
or
add
or
xor
push
pop
movsb
cmp
incb
xor
xor
mov
cmp
enter
lds
in
sahf
push
sahf
test
lods
dec
rorl
add
mov
xchg
sub
shll
aas
sub
les
test
xor
shll
and
pusha
leave
adc
test
movsb
cltd
dec
sub
loop
mov
xor
mov
jl
jne
jp
adc
popf
adc
xchg
lds
iret
lock
or
jge
sub
in
pop
xchg
movsl
inc
popa
add
cmp
arpl
test
or
or
adc
inc
adc
aam
cmc
jne
adc
push
mov
into
cmc
nop
mov
shrb
xchg
loop
pop
aad
scas
idivb
inc
or
xchg
dec
ficoms
scas
cmp
fwait
mov
push
lods
or
xchg
andb
fs
mov
out
adc
in
or
sub
out
enter
popl
ss
imul
xor
push
cmp
adc
jnp
xor
mov
fs
out
mov
test
mov
push
jecxz
pop
xchg
add
stc
lret
cmp
pushf
aas
fnstenv
aas
xlat
add
adcl
adc
xchg
dec
dec
aaa
das
pop
mov
or
mov
leave
push
popf
int3
lods
pushf
pop
mov
jae
mov
push
ret
out
jo
lret
sbb
mov
inc
jne
std
xlat
movsb
jb
imul
fldt
xlat
icebp
hlt
loop
sbbl
repz
push
sahf
addr16
inc
pop
ja
xchg
lds
xchg
rorb
adc
repnz
pop
fbstp
out
cmp
sub
je
xchg
pop
pop
fwait
pop
lcall
mov
lods
enter
xor
out
movsb
jns
rclb
fbstp
pop
sbb
pop
inc
mov
dec
jb
leave
aad
sbb
add
arpl
push
stos
lock
pop
fldenv
xorl
popa
adc
stc
sbb
mov
xchg
inc
push
pop
movsl
or
or
add
or
xor
push
pop
movsb
cmp
incb
xor
xor
mov
cmp
enter
lds
in
sahf
push
sahf
test
lods
dec
rorl
add
mov
xchg
sub
shll
aas
sub
les
test
xor
shll
and
pusha
leave
adc
test
movsb
cltd
dec
sub
loop
mov
xor
mov
jl
jne
jp
adc
popf
adc
xchg
lds
iret
lock
or
jge
sub
in
pop
xchg
movsl
inc
popa
add
cmp
arpl
test
or
or
adc
inc
adc
aam
cmc
jne
adc
push
mov
into
cmc
nop
mov
shrb
xchg
loop
pop
aad
scas
idivb
inc
or
xchg
dec
ficoms
scas
cmp
fwait
mov
push
lods
or
xchg
andb
fs
mov
out
adc
in
or
sub
out
enter
popl
ss
imul
xor
push
cmp
adc
jnp
xor
mov
fs
out
mov
test
mov
push
jecxz
pop
xchg
add
stc
lret
cmp
pushf
aas
fnstenv
aas
xlat
add
adcl
adc
xchg
dec
dec
aaa
das
pop
mov
or
mov
leave
push
popf
int3
lods
pushf
pop
mov
jae
mov
push
ret
out
jo
lret
sbb
mov
inc
jne
std
xlat
movsb
jb
imul
fldt
xlat
icebp
hlt
loop
sbbl
repz
push
sahf
addr16
inc
pop
ja
xchg
lds
xchg
rorb
adc
repnz
pop
fbstp
out
cmp
sub
je
xchg
pop
pop
fwait
pop
lcall
mov
lods
enter
xor
out
movsb
jns
rclb
fbstp
pop
sbb
pop
inc
mov
dec
jb
leave
aad
sbb
add
arpl
push
stos
lock
pop
fldenv
xorl
popa
adc
stc
sbb
mov
xchg
inc
push
pop
movsl
or
or
add
or
xor
push
pop
movsb
cmp
incb
xor
xor
mov
cmp
enter
lds
in
sahf
push
sahf
test
lods
dec
rorl
add
mov
xchg
sub
shll
aas
sub
les
test
xor
shll
and
pusha
leave
adc
test
movsb
cltd
dec
sub
loop
mov
xor
mov
jl
jne
jp
adc
popf
adc
xchg
lds
iret
lock
or
jge
sub
in
pop
xchg
movsl
inc
popa
add
cmp
arpl
test
or
or
adc
inc
adc
aam
cmc
jne
adc
push
mov
into
cmc
nop
mov
shrb
xchg
loop
pop
aad
scas
idivb
inc
or
xchg
dec
ficoms
scas
cmp
fwait
mov
push
lods
or
xchg
andb
fs
mov
out
adc
in
or
sub
out
enter
popl
ss
imul
xor
push
cmp
adc
jnp
xor
mov
fs
out
mov
test
mov
push
jecxz
pop
xchg
add
stc
lret
cmp
pushf
aas
fnstenv
aas
xlat
add
adcl
adc
xchg
dec
dec
aaa
das
pop
mov
or
mov
leave
push
popf
int3
lods
pushf
pop
mov
jae
mov
push
ret
out
jo
lret
sbb
mov
inc
jne
std
xlat
movsb
jb
imul
fldt
xlat
icebp
hlt
loop
sbbl
repz
push
sahf
addr16
inc
pop
ja
xchg
lds
xchg
rorb
adc
repnz
pop
fbstp
out
cmp
sub
je
xchg
pop
pop
fwait
pop
lcall
mov
lods
enter
xor
out
movsb
jns
rclb
fbstp
pop
sbb
pop
inc
mov
dec
jb
leave
aad
sbb
add
arpl
push
stos
lock
pop
fldenv
xorl
popa
adc
stc
sbb
mov
xchg
inc
push
pop
movsl
or
or
add
or
xor
push
pop
movsb
cmp
incb
xor
xor
mov
cmp
enter
lds
in
sahf
push
sahf
test
lods
dec
rorl
add
mov
xchg
sub
shll
aas
sub
les
test
xor
shll
and
pusha
leave
adc
test
movsb
cltd
dec
sub
loop
mov
xor
mov
jl
jne
jp
adc
popf
adc
xchg
lds
iret
lock
or
jge
sub
in
pop
xchg
movsl
inc
popa
add
cmp
arpl
test
or
or
adc
inc
adc
aam
cmc
jne
adc
push
mov
into
cmc
nop
mov
shrb
xchg
loop
pop
aad
scas
idivb
inc
or
xchg
dec
ficoms
scas
cmp
fwait
mov
push
lods
or
xchg
andb
fs
mov
out
adc
in
or
sub
out
enter
jl
add
mov
push
gs
jb
je
arpl
push
arpl
outsb
push
jo
outsb
inc
outsl
jne
je
add
push
gs
popa
insb
jne
add
push
gs
imul
outsl
arpl
jae
add
je
popa
jae
inc
jb
outsl
jb
add
fs
imul
js
add
inc
gs
jne
jb
outsb
je
push
add
push
popa
imul
insb
gs
bound
arpl
push
gs
jbe
outsb
je
add
je
jb
outsl
arpl
fs
insb
jne
push
je
add
je
popa
imul
insl
gs
add
je
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
imul
jae
add
je
outsl
insl
insl
popa
outsb
fs
imul
gs
jns
je
insl
push
imul
add
or
or
add
jb
jne
insb
push
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
mov
add
mov
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
push
imul
jb
je
arpl
add
push
imul
jb
je
arpl
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
je
arpl
xchg
add
add
or
add
outsb
fs
gs
add
add
add
add
dec
add
add
xor
loopne
popl
add
add
adc
add
add
add
test
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
inc
xor
add
add
add
add
push
or
je,pn
js
add
add
rolb
add
add
add
add
and
add
je
js
add
add
rolb
add
add
add
add
and
add
fs
je
add
add
addb
add
add
add
shrb
fs
je
add
add
add
adc
add
add
add
add
jb
insb
outsl
arpl
add
jo
add
push
or
add
add
fimull
inc
cs
fs
je
add
add
add
rclb
add
add
inc
push
shrb
fs
je
add
add
add
adc
add
push
add
add
shrb
fs
je
add
add
add
pusha
adc
add
add
in
shrb
fs
je
add
add
add
mov
add
push
add
add
shrb
jae
arpl
add
pop
adc
add
add
add
adc
add
test
rolb
adc
add
add
add
xor
adc
or
mov
cld
mov
repz
mov
incb
push
fs
int
sar
lcall
cmp
dec
adc
sti
outsl
or
rcrl
call
adc
jl
incl
adc
lcall
push
xchg
clc
in
jg
dec
pop
mov
xor
fldcw
cli
mov
ljmp
bound
push
push
out
in
jp
rcll
mov
adc
inc
stos
cmc
cmpb
jp
dec
push
inc
lsl
movsb
inc
ljmp
mov
inc
sub
stc
not
add
imul
sahf
sub
in
incl
loop
sbb
sub
sbb
int3
outsb
in
lret
inc
xchg
xchg
ljmp
stos
pop
mov
dec
push
and
js
loope
sub
pop
insb
jb
scas
jp
loope
mov
lcall
cli
nop
sub
mov
push
test
xor
inc
aas
pop
mov
jae
stos
mov
stos
xchg
cli
stc
decl
push
lret
mov
xchg
je
push
bound
loop
pop
mov
pop
arpl
scas
sbb
loop
dec
pop
add
iret
mov
scas
cmp
mov
push
into
mov
popf
mov
test
shrl
push
dec
push
mov
out
mov
mov
decl
lcall
cltd
sbb
cltd
imul
lret
call
inc
push
aas
sbb
nop
pop
gs
movsl
mov
pop
fstp
dec
or
jg
pusha
mov
es
lea
mov
call
cld
xchg
push
test
lds
xor
lea
out
inc
in
xchg
in
lcall
aaa
std
dec
jb
cltd
mov
dec
and
cmp
call
mov
jmp
inc
jl
cmpsl
fs
or
push
mov
adc
mov
in
les
pop
pushl
lods
dec
inc
cli
arpl
xor
inc
cmp
add
out
dec
inc
push
ljmp
std
pushf
or
and
jmp
and
adc
in
js
sbb
nop
xchg
xchg
ljmp
jae
or
jae
push
adc
sarb
outsl
sub
sbb
dec
das
jae
jne
addl
mov
xor
in
daa
je
cmp
iret
out
sub
xchg
mov
stos
pusha
in
push
sbb
adc
je
push
and
inc
ss
call
std
lahf
mov
xor
mov
pop
repz
dec
pop
stos
xchg
dec
in
jae
mov
bound
lods
lcall
or
mov
inc
push
lret
jnp
pop
nop
inc
call
fisubrs
fdivp
mov
leave
int
and
rcr
jp
add
cmp
xorb
xor
sub
jp
cmpl
push
shll
mov
inc
mov
mov
ja
mov
pop
lods
test
pop
lret
pop
cmp
inc
or
rclb
inc
pop
addb
lcall
fistps
pop
inc
inc
iret
rclb
in
addr16
stos
xchg
cmp
xchg
jge
sub
into
cmp
call
pop
icebp
push
mov
insl
add
lods
stos
rolb
inc
cmp
xchg
xlat
cmp
enter
fbstp
sub
push
add
enter
cmp
cwtl
insb
testl
jg
mov
vfrczss
xchg
sbb
in
pop
jp
test
dec
imul
jmp
mov
or
movsb
mov
cmp
sub
mov
sub
dec
es
push
enter
xchg
ljmp
leave
sub
lahf
pop
sub
ffree
insl
daa
imul
add
jne
aad
imul
ret
adc
incl
ret
aam
stos
mov
cmpsb
out
xchg
mov
jl
fisubrl
call
mov
cmp
sbb
lret
cmpb
xchg
ja
into
or
pop
and
or
sti
int
jmp
std
fwait
sub
fists
repz
cs
fdivrl
lcall
test
inc
negb
out
xlat
hlt
fimuls
insl
mov
fsubp
jmp
pushl
cmpsl
push
adc
addr16
faddl
out
xchg
adc
sarl
ljmp
cli
lret
rcrl
or
lods
aam
outsl
sarb
dec
pop
dec
cmp
xlat
cld
mov
adc
mov
xor
push
out
in
xor
mov
rcl
popa
xor
push
mov
ljmp
add
rep
adc
addb
rcl
iret
and
cmp
iret
lret
jp
call
cmp
ret
and
aad
sub
incl
pop
dec
xor
outsb
inc
enter
scas
lods
in
pushl
mov
push
imul
popa
movsl
jo
xchg
mov
leave
mov
cmpsl
pushf
and
fcomps
scas
and
popf
sub
int3
ss
mov
push
fcoms
test
mov
pop
adc
pop
jge
pop
mov
jns
testb
add
add
pop
jp
push
pop
enter
pop
cld
sbb
and
imul
data16
sbb
in
scas
clc
adc
xor
push
es
jp
xchg
jmp
inc
das
xor
lret
lock
incl
lcall
bound
cmpsb
dec
xor
mov
repz
sbb
adcb
inc
es
repz
aas
and
jns
bound
incl
sbb
xlat
xor
cwtl
mov
arpl
mov
and
imul
sub
push
cmp
fidivrs
enter
jg
jne
jno
call
test
pop
sbb
imul
xor
rorl
cmpl
mov
fisubl
daa
cmp
pop
add
sub
call
inc
es
mov
push
dec
add
subl
add
mov
sti
call
mov
outsl
mov
or
loop
push
cli
mov
push
dec
push
es
add
mov
fs
rorl
out
ljmp
fprem1
pop
inc
in
decl
and
scas
lods
ret
addr16
sbb
idivb
repnz
js
call
ret
in
test
mov
popf
movsb
test
jecxz
xchg
lea
mov
sub
lahf
push
dec
cmc
push
cmpsl
out
lds
frstor
lcall
adc
sbb
adc
xchg
scas
dec
mov
mov
imul
adc
fistpl
aam
mov
dec
out
pop
imull
sub
leave
fwait
dec
loopne
cs
lahf
sti
nop
fdivrp
aam
pop
insb
fwait
incl
adc
or
outsb
sbb
clc
popa
mov
xor
cmp
sar
jmp
daa
add
jmp
sarb
pop
outsb
clc
dec
or
call
push
jae
jb
dec
sbb
pop
add
pop
mov
xor
mov
mov
mov
xchg
adc
jno
data16
lcall
add
inc
negb
or
inc
xor
sarb
lock
pop
stos
cmc
call
fisubs
adc
fwait
pop
xchg
add
int3
shll
fs
or
mov
ffreep
and
ss
jo
cmp
xchg
ret
ret
es
xchg
insl
fcomip
inc
push
sub
fmuls
jmp
into
es
cmpsb
call
fists
loope
test
outsb
lret
xchg
outsb
repz
decl
dec
and
sbb
rcr
cmp
dec
stc
inc
cltd
inc
incl
clc
js
push
call
lcall
ljmp
cld
mov
jb
popa
lahf
sub
or
xor
push
cmp
imul
call
lcall
pop
popf
rcrb
js
loop
fisttpl
dec
mov
or
dec
ljmp
mov
pop
mov
sbb
fwait
mov
cwtl
xchg
lcall
jb
into
mov
pop
jne
jmp
in
flds
jmp
sub
lret
call
mov
sahf
mov
loope
daa
rcll
inc
mov
adc
push
outsb
repz
incl
lods
clc
into
pop
mov
xchg
clc
pop
cmpsl
dec
mov
icebp
lcall
lret
test
xor
icebp
in
xchg
push
jno
push
and
dec
insb
mov
jmp
mov
cmp
adcl
inc
mov
push
add
incl
cli
xchg
ret
cmc
pop
inc
stos
inc
nop
xchg
sub
ss
in
add
mov
push
je
mov
sub
paddw
fbld
daa
mov
in
repz
mov
fldln2
xor
inc
and
std
or
call
mov
mov
lods
pop
mov
push
andl
in
enter
lcall
jbe
lahf
sbb
push
xchg
stos
call
inc
test
jmp
mov
sbb
sub
outsb
add
mov
mov
pop
sbb
call
scas
setnp
fwait
add
lcall
push
push
jp
dec
fldl
fstps
jo
cs
cwtl
andb
pushl
jbe
mov
xchg
out
or
fwait
cmp
jns
mov
in
jl
sar
shll
ja
js
mov
xchg
decl
jg
shll
mov
jno
xchg
pushf
mov
loopne
fcom
inc
xchg
movsb
sbb
mov
dec
mov
mov
adc
mov
mov
or
jecxz
sbb
lea
pushl
adc
fnstsw
jp
ss
sbb
ret
cli
out
nop
or
jae
enter
clc
xchg
dec
stos
das
ret
outsl
cld
outsl
out
daa
xor
imul
adc
aaa
push
daa
adc
out
dec
movsb
mov
sbb
xor
xchg
ja
pop
into
leave
and
sahf
rclb
decl
add
sub
js
fcompl
cltd
adc
imul
fld1
rcrl
hlt
jmp
mov
mov
ljmp
or
lcall
imulb
imul
add
push
inc
push
test
jecxz
aaa
ret
lods
mov
ljmp
pop
push
mov
pop
mov
sub
push
jae
xor
test
cmp
cwtl
lret
xor
push
std
jns
loopne
mov
out
mov
jecxz
mov
enter
mov
repz
js
xchg
gs
sahf
aam
pushf
pop
adc
fld
jnp
movsb
arpl
arpl
in
jl
push
out
pop
xchg
sar
inc
test
mov
sub
push
mov
pushl
int3
push
popl
pop
xchg
int
adc
push
mov
sub
ja
fidivs
xor
fsubrs
ficoms
mov
mov
je
decl
clc
lret
data16
jmp
mov
push
xchg
cli
and
sbb
cmpsb
test
roll
jmp
sbb
push
daa
cmp
cmp
xchg
push
inc
je
fdivrs
in
cwtl
imul
incl
cmp
sub
mov
arpl
ja
pop
out
mov
jecxz
dec
pusha
das
lcall
repnz
xor
push
aas
or
popf
test
outsl
mov
test
ret
int
inc
test
out
pop
sub
add
mov
sbb
sarb
xor
pushl
pop
lods
addr16
xor
mov
fwait
jo
and
or
pop
mov
in
xchg
incl
and
mov
into
push
fldenv
fcmove
scas
jl
sbb
bound
mov
and
jmp
sti
hlt
jno
inc
rol
std
push
mov
mov
cmp
ljmp
cmp
sub
mov
adc
inc
mov
shl
dec
xchg
jmp
mov
scas
outsb
push
out
cmp
cli
lods
sub
dec
dec
scas
dec
xchg
and
in
add
sar
dec
sarb
inc
adc
jae
add
aam
adcb
adc
daa
inc
cld
das
jl
and
or
rorb
mov
call
data16
repnz
aam
jns
insl
fistpll
dec
ror
les
call
or
cmp
arpl
inc
test
cmpsb
andl
hlt
jmp
adc
dec
es
fmull
decl
test
sbb
or
rcl
sub
ja
shlb
pusha
sbbb
sub
xor
cli
dec
scas
sbb
insb
dec
jo
mov
inc
xor
push
push
adc
lcall
xchg
outsb
ss
mov
pop
jbe
fidivrs
mov
mov
sub
int3
inc
jle
mov
xchg
dec
push
lahf
call
pushl
test
or
popf
inc
iret
sbb
mov
dec
addr16
sbbb
cli
sub
mov
sub
repz
sub
sbb
ret
ljmp
push
outsb
sbb
pop
enter
or
bound
mov
inc
pop
inc
pushl
mov
add
flds
aaa
imul
rcrl
stos
pop
popa
loopne
inc
pop
ret
cli
pushl
std
lahf
mov
mov
xor
mov
cmp
ret
jp
mov
sub
fisubl
push
cld
and
decl
orl
mov
mov
cmpsl
xchg
or
dec
xor
lret
push
pop
or
lcall
orl
lahf
cmp
push
xor
jg
push
outsb
jg
adc
cmp
gs
adcl
inc
fmull
fbstp
int3
jns
and
pop
inc
inc
jle
cmp
lock
and
call
mov
push
rclb
lock
fsubs
sbb
popf
adc
decl
cmp
ds
cld
scas
mov
mov
clc
jno
outsb
inc
sub
sarl
xor
or
push
jp
jp
cmovl
aaa
std
icebp
call
add
pushf
mov
scas
xor
jecxz
sbb
call
out
mov
jle
sbb
mov
cltd
out
cltd
stc
int3
pusha
add
jo
mov
in
fnstenv
incl
sbb
fsubrl
loope
mov
outsl
in
lret
aaa
cli
lahf
mov
pop
bound
test
cmp
pushl
arpl
loope
outsl
mov
fsubrs
push
sub
decl
cmp
xlat
stc
jb
sub
mov
jle
es
je
jp
mov
lock
fisubrl
mov
jnp
xchg
repz
push
mov
push
xchg
std
insb
fadd
add
jg
call
notl
mov
inc
lea
push
icebp
incl
sub
rdmsr
out
ret
cmp
enter
das
lret
jle
cmpsl
xchg
inc
lea
sub
adc
sub
idiv
ljmp
sbb
fdivs
mov
subl
or
mov
ret
mov
incl
pop
push
dec
ss
mov
sub
fimuls
loope
jl
xchg
in
sbb
std
rorb
xor
int3
div
mov
jbe
enter
inc
and
push
adc
call
jmp
jle
fcmovnbe
das
imul
and
pop
enter
add
jle
in
incl
jbe
adc
fldt
fimull
mov
stos
jns
mov
mull
add
addb
cli
repz
arpl
das
incl
cld
mov
enter
mov
mov
mov
scas
pop
rol
in
movsb
pop
cmpsl
stc
fists
loope
ret
xchg
mov
sbb
dec
scas
popa
dec
add
arpl
pop
fs
adc
adc
orb
add
adc
nop
inc
decl
popl
ss
imul
xor
push
cmp
fildll
call
dec
dec
jnp
xor
fistl
fs
jmp
clc
mov
test
mov
push
jecxz
pop
xchg
add
stc
lret
cmp
pushf
aas
fcos
pushl
aas
xlat
add
adcl
adc
xchg
dec
dec
aaa
das
pop
mov
or
jmp
xor
dec
leave
push
popf
int3
lods
pushf
pop
mov
jae
mov
push
ret
jg
inc
cld
out
jo
lret
nop
adc
lahf
sub
incl
cmp
xlat
movsb
jb
imul
fldt
daa
cld
xlat
icebp
hlt
loop
sbbl
repz
push
sahf
addr16
inc
pop
ja
call
rorb
adc
repnz
pop
fbstp
out
cmp
test
imulb
mov
pop
fsubs
pop
xchg
pop
pop
fwait
lcall
sub
add
shlb
enter
xor
out
movsb
jns
rclb
fbstp
pop
sbb
pop
inc
mov
dec
jb
leave
aad
sbb
add
arpl
aam
push
push
stos
lock
pop
fldenv
xorl
popa
adc
call
or
mov
xchg
inc
push
pop
movsl
or
or
add
or
cmp
in
pop
movsb
cmp
incb
xor
xor
mov
cmp
enter
add
lcall
lds
in
sahf
push
sahf
test
mov
dec
std
add
mov
xchg
sub
shll
aas
sub
les
mov
jbe
shll
and
leave
adc
test
push
jge
movsb
cltd
dec
sub
loop
mov
xor
mov
jl
jne
jp
call
popf
adc
xchg
lds
iret
lock
or
jge
sub
in
pop
xchg
movsl
inc
jmp
ret
clc
cmp
arpl
test
or
or
adc
inc
adc
aam
push
jne
adc
push
mov
into
cmc
nop
mov
shrb
xchg
loop
ret
sub
adc
idivb
inc
or
call
xchg
sub
sub
xchg
fwait
mov
push
lods
or
xchg
andb
fs
pushl
mov
out
adc
in
or
sub
out
enter
cmp
loope
push
push
pop
dec
addb
inc
add
or
fs
push
push
inc
and
lret
adc
jmp
add
add
add
dec
adc
or
add
je
jb
je
arpl
out
idivb
arpl
outsl
outsb
push
jo
outsb
inc
outsl
jne
je
push
insb
jae
push
out
jg
insl
xor
sbb
insl
xor
gs
jb
arpl
jae
sti
ljmp
je
jb
jb
dec
outsl
popa
fs
imul
js
mov
insb
imul
xor
nop
push
push
mov
rolb
push
mov
gs
bound
mov
fstp
insb
mov
mov
insb
imul
loop
push
lods
lcall
push
imul
push
pop
inc
fs
repz
sbb
ficoms
jl
imul
rcrl
insb
pusha
orl
xchg
sbb
outsl
insl
insl
popa
outsb
jl
gs
and
call
fmuls
dec
mov
or
inc
dec
add
inc
adc
aam
aas
mov
ret
pop
lahf
inc
leave
andb
sub
popa
test
inc
dec
add
pop
arpl
and
or
mov
add
test
push
inc
push
jno
mov
add
lahf
ret
jo
mov
js
dec
mov
inc
stos
sbb
push
mov
xor
or
das
mov
and
sub
add
cwtl
push
jae
nop
add
mov
add
inc
mov
and
and
adc
inc
or
xor
bound
push
outsl
push
add
jne
mov
dec
addr16
xchg
lods
xchg
add
push
lods
cmp
mov
movl
inc
lds
outsb
test
sbb
imul
aad
pop
inc
or
push
sarl
push
add
je
or
fisttpll
mov
or
shrl
shlb
add
or
rcll
push
adc
dec
sbb
inc
movsb
mov
leave
ljmp
sub
jno
and
lods
xchg
stos
push
lea
xchg
mov
sbb
les
movsl
loop
sub
sar
xchg
adc
test
movsl
jo
push
test
sub
addb
push
adc
jno
add
xor
jge
stos
and
mov
mov
adc
add
pop
mov
mov
fldt
adc
xchg
adc
pop
xor
pop
adc
pop
adc
adc
std
inc
test
lds
push
push
inc
movsb
adc
mov
inc
stos
sub
test
mov
loope
push
push
add
lahf
add
outsb
fs
gs
push
push
inc
ljmp
fisttps
add
xor
dec
loopne
popl
pop
sti
pop
or
jo
sbb
incb
mov
mov
pop
add
nop/reserved
adc
add
jge
sbb
inc
xor
outsb
pop
adc
jg,pt
push
jecxz
je
js
rolb
mov
add
and
divl
push
mov
sub
addb
nop
add
xchg
shrb
push
inc
lcall
test
dec
inc
fiadds
pop
push
fcmove
mov
lahf
push
mov
sbb
mov
out
dec
adc
xchg
mov
in
pusha
in
push
rcll
jb
movsb
ss
adc
dec
and
mov
xor
adc
add
dec
xchg
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
add
pusha
adc
sub
add
in
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
adc
sub
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
dec
outsl
adc
sbb
add
in
add
add
add
call
stos
lret
push
fiaddl
pop
outsl
popl
lea
mov
push
dec
pop
mov
push
push
into
sbb
jbe
add
fisubrl
fnsetpm(287
shlb
jae
pop
arpl
mov
repz
xchg
cwtl
into
imul
jecxz
pop
lret
mov
mov
or
and
cmc
lods
shlb
sub
adc
hlt
cmpsb
test
xchg
and
mov
rcr
outsl
push
sbb
cmpsb
sub
pop
lods
hlt
dec
or
jp
adc
iret
rcrl
dec
bound
ds
neg
cmp
xchg
icebp
pop
cli
fwait
cmc
outsb
sbb
or
bound
insl
push
dec
mov
sub
sbb
lods
enter
cmp
nop
movsb
dec
repz
stos
dec
popf
outsb
mov
stos
push
mov
lcall
jb
stos
xor
in
mov
ret
dec
adcb
insl
xchg
cltd
repz
adc
popf
fwait
and
loop
jne,pt
cvtpi2ps
and
cmp
mov
aad
dec
paddd
push
ret
in
jecxz
aaa
mov
push
faddl
jle
shrb
mov
or
sbb
cmp
out
mov
mov
out
mov
dec
ljmp
adc
movsl
and
dec
dec
data16
mov
fs
rcl
addr16
inc
mov
loope
icebp
pop
js
loop
inc
into
mov
xchg
call
jo
enter
push
adc
mov
sbb
or
fsubrs
or
and
inc
pop
inc
dec
orl
lret
loope
into
push
mov
mov
shll
add
orl
push
outsl
push
push
aam
dec
sahf
or
js
movsb
xlat
inc
jmp
cmc
rcll
dec
lret
sub
pop
add
ret
shll
or
stc
mov
test
insb
cmp
sbbb
sbb
jae
xchg
xchg
enter
or
cmp
xor
lahf
pop
lock
add
mov
xchg
fisubl
fimuls
pushf
aas
dec
mov
fldcw
test
sbb
jno
xchg
cmp
cmp
rorl
sub
dec
mov
ds
lcall
dec
sbb
mov
pop
and
xchg
in
mov
xor
and
mov
cli
jb
mov
sub
mov
push
xchg
pop
mov
rcr
pop
repz
les
lahf
xor
pusha
test
insl
outsb
fcoms
fs
dec
mov
pop
lret
div
jp
bound
push
mov
add
jle
add
cmpsb
sub
xor
jo
ljmp
ret
or
lods
mov
insl
mov
out
jl
xor
jl
les
or
neg
xor
pop
into
sbb
inc
xchg
push
shl
jle
cmpsl
cmp
movsl
mov
and
out
mov
mov
or
mov
cmp
mov
imul
es
test
daa
inc
pop
inc
dec
jl
cltd
xchg
jl
and
push
fsubs
fstps
mov
mov
enter
mov
and
mov
xchg
jp
scas
lock
adc
xchg
pop
mov
cltd
push
pop
dec
mov
ret
pop
add
sti
adc
and
jbe
and
inc
add
jo
push
andl
outsb
fisttpll
pop
ss
stos
jo
loopne
push
andb
dec
mov
mov
das
xchg
lock
push
hlt
mov
out
dec
add
imul
dec
rorl
stc
add
sarl
test
arpl
je
xchg
popf
mov
sbb
xchg
jp
xor
mov
pop
stos
loop
jno
lcall
push
mov
push
pop
mov
cmp
aaa
mov
sub
push
xchg
push
lock
mov
mov
sti
xor
cmc
ficoml
stc
call
push
adc
pop
cld
movsl
xor
jge
mov
pusha
fwait
pop
jae
addr16
push
inc
insl
cmpsb
push
sbb
sbb
iret
push
insb
push
outsb
es
outsb
mov
push
add
fs
or
pop
stos
xor
mov
dec
scas
push
sub
in
push
out
or
roll
jg
sub
dec
xor
sub
insb
test
jo
jb
xchg
jmp
mov
add
repz
or
xchg
cmc
push
jne
js
sub
test
sbb
mov
xchg
in
leave
fdiv
xor
mov
rcll
jnp
scas
fcoms
js
add
repz
xor
outsb
fildll
fiadds
push
push
jb
xor
lds
leave
fistl
jmp
lods
lret
data16
inc
add
add
and
dec
popa
lret
insl
push
and
add
xchg
dec
pusha
xor
ret
push
mov
push
lahf
or
mov
clc
shrl
stos
dec
lret
stos
sahf
sbb
loop
mov
std
sub
mov
enter
pop
hlt
fsts
roll
xchg
shr
or
and
pop
in
adcb
jo
aaa
sub
loopne
sub
stc
xor
mov
jne
lcall
xchg
cwtl
jb
stos
mov
mov
outsl
repz
pusha
popf
sub
adc
fmulp
add
xor
les
sbb
cltd
jp
imul
mov
fisttps
pop
fcompl
stos
es
or
and
negl
lods
push
int3
dec
push
fisttps
xchg
lret
adc
mov
mov
aad
test
push
fstpt
test
aaa
cli
pop
adc
jge
cmpsl
jmp
dec
inc
pushf
in
rol
ss
cmp
jns
fistl
mov
shrb
sbb
push
xchg
jns
cmp
mov
pop
dec
and
aas
mov
loope
xor
or
adc
ret
into
inc
jge
lahf
dec
scas
loopne
fwait
push
mov
inc
adc
stos
cmpsl
loope
dec
jne
repnz
adc
pop
xor
js
jno
jmp
or
jecxz
add
je
mov
lcall
es
adcb
mov
fistps
push
xchg
sub
inc
cwtl
sbb
andb
mov
fildll
call
sub
subl
outsl
decb
or
add
stos
lret
push
fiaddl
pop
outsl
popl
lea
mov
push
dec
pop
mov
push
push
into
sbb
jbe
add
fisubrl
fnsetpm(287
shlb
jae
pop
arpl
mov
repz
xchg
cwtl
into
imul
jecxz
pop
lret
mov
mov
or
and
cmc
lods
shlb
sub
adc
hlt
cmpsb
test
xchg
and
mov
rcr
outsl
push
sbb
cmpsb
sub
pop
lods
hlt
dec
or
jp
adc
iret
rcrl
dec
bound
ds
neg
cmp
xchg
icebp
pop
cli
fwait
cmc
outsb
sbb
or
bound
insl
push
dec
mov
sub
sbb
lods
enter
cmp
nop
movsb
dec
repz
stos
dec
popf
outsb
mov
stos
push
mov
lcall
jb
stos
xor
in
mov
ret
dec
adcb
insl
xchg
cltd
repz
adc
popf
fwait
and
loop
jne,pt
cvtpi2ps
and
cmp
mov
aad
dec
paddd
push
ret
in
jecxz
aaa
mov
push
faddl
jle
shrb
mov
or
sbb
cmp
out
mov
mov
out
mov
dec
ljmp
adc
movsl
and
dec
dec
data16
mov
fs
rcl
addr16
inc
mov
loope
icebp
pop
js
loop
inc
into
mov
xchg
call
jo
enter
push
adc
mov
sbb
or
fsubrs
or
and
inc
pop
inc
dec
orl
lret
loope
into
push
mov
mov
shll
add
orl
push
outsl
push
push
aam
dec
sahf
or
js
movsb
xlat
inc
jmp
cmc
rcll
dec
lret
sub
pop
add
ret
shll
or
stc
mov
test
insb
cmp
sbbb
sbb
jae
xchg
xchg
enter
or
cmp
xor
lahf
pop
lock
add
mov
xchg
fisubl
fimuls
pushf
aas
dec
mov
fldcw
test
sbb
jno
xchg
cmp
cmp
rorl
sub
dec
mov
ds
lcall
dec
sbb
mov
pop
and
xchg
in
mov
xor
and
mov
cli
jb
mov
sub
mov
push
xchg
pop
mov
rcr
pop
repz
les
lahf
xor
pusha
test
insl
outsb
fcoms
fs
dec
mov
pop
lret
div
jp
bound
push
mov
add
jle
add
cmpsb
sub
xor
jo
ljmp
ret
or
lods
mov
insl
mov
out
jl
xor
jl
les
or
neg
xor
pop
into
sbb
inc
xchg
push
shl
jle
cmpsl
cmp
movsl
mov
and
out
mov
mov
or
mov
cmp
mov
imul
es
test
daa
inc
pop
inc
dec
jl
cltd
xchg
jl
and
push
fsubs
fstps
mov
mov
enter
mov
and
mov
xchg
jp
scas
lock
adc
xchg
pop
mov
cltd
push
pop
dec
mov
ret
pop
add
sti
adc
and
jbe
and
inc
add
jo
push
andl
outsb
fisttpll
pop
ss
stos
jo
loopne
push
andb
dec
mov
mov
das
xchg
lock
push
hlt
mov
out
dec
add
imul
dec
rorl
stc
add
sarl
test
arpl
je
xchg
popf
mov
sbb
xchg
jp
xor
mov
pop
stos
loop
jno
lcall
push
mov
push
pop
mov
cmp
aaa
mov
sub
push
xchg
push
lock
mov
mov
sti
xor
cmc
ficoml
stc
call
push
adc
pop
cld
movsl
xor
jge
mov
pusha
fwait
pop
jae
addr16
push
inc
insl
cmpsb
push
sbb
sbb
iret
push
insb
push
outsb
es
outsb
mov
push
add
fs
or
pop
stos
xor
mov
dec
scas
push
sub
in
push
out
or
roll
jg
sub
dec
xor
sub
insb
test
jo
jb
xchg
jmp
mov
add
repz
or
xchg
cmc
push
jne
js
sub
test
sbb
mov
xchg
in
leave
fdiv
xor
mov
rcll
jnp
scas
fcoms
js
add
repz
xor
outsb
fildll
fiadds
push
push
jb
xor
lds
leave
fistl
jmp
lods
lret
data16
inc
add
add
and
dec
popa
lret
insl
push
and
add
xchg
dec
pusha
xor
ret
push
mov
push
lahf
or
mov
clc
shrl
stos
dec
lret
stos
sahf
sbb
loop
mov
std
sub
mov
enter
pop
hlt
fsts
roll
xchg
shr
or
and
pop
in
adcb
jo
aaa
sub
loopne
sub
stc
xor
mov
jne
lcall
xchg
cwtl
jb
stos
mov
mov
outsl
repz
pusha
popf
sub
adc
fmulp
add
xor
les
sbb
cltd
jp
imul
mov
fisttps
pop
fcompl
stos
es
or
and
negl
lods
push
int3
dec
push
fisttps
xchg
lret
adc
mov
mov
aad
test
push
fstpt
test
aaa
cli
pop
adc
jge
cmpsl
jmp
dec
inc
pushf
in
rol
ss
cmp
jns
fistl
mov
shrb
sbb
push
xchg
jns
cmp
mov
pop
dec
and
aas
mov
loope
xor
or
adc
ret
into
inc
jge
lahf
dec
scas
loopne
fwait
push
mov
inc
adc
stos
cmpsl
loope
dec
jne
repnz
adc
pop
xor
js
jno
jmp
or
jecxz
add
je
mov
lcall
es
adcb
mov
fistps
push
xchg
sub
inc
cwtl
sbb
andb
mov
fildll
call
sub
subl
outsl
decb
movlps
outsl
xchg
and
dec
lret
in
std
pop
push
mov
popa
push
xchg
imul
mov
xor
and
xchg
es
popa
into
sub
jno
popa
dec
scas
int
daa
in
mov
dec
fstpl
cmp
icebp
imul
push
fldcw
xchg
sbb
pop
mov
or
or
in
mov
adc
mov
jl
scas
test
popl
fcmovne
mov
pushf
mov
outsb
dec
daa
ljmp
das
int3
adc
std
jno
xor
add
xchg
mov
pop
in
icebp
ror
int3
test
loop
dec
pop
call
inc
pop
fsubr
stos
mov
jb
push
cmp
lret
icebp
cmp
fdivp
fimuls
jp
push
out
out
into
lea
and
mov
fistpll
mov
push
stos
inc
pop
or
adc
pop
dec
jp
xor
xchg
sbb
and
xor
lahf
cmp
push
cwtl
adc
add
mov
adc
test
ljmp
sub
add
mov
fmulp
lret
xor
mov
ja
mov
repnz
test
sbb
pop
je
inc
imul
fdivp
inc
mov
mov
out
mov
repnz
pushf
or
addb
adc
pop
mov
dec
mov
and
xor
sti
jecxz
or
shll
push
in
inc
pop
push
xchg
pop
out
mov
pop
push
lret
shll
movsb
cmp
jmp
lahf
mov
outsb
xchg
dec
mov
or
xchg
adc
out
mov
int3
pop
pop
outsl
xchg
sub
xchg
fisubs
leave
push
and
es
and
pop
ret
sbb
dec
push
add
jb
imul
jb
insl
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
insb
add
popa
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
popa
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
adc
adc
add
jae
add
jae
add
adc
dec
jae
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jb
gs
xor
add
insb
insl
outsl
outsb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
imul
jb
je
arpl
inc
imul
popa
push
jns
add
add
add
jmp
jb
add
add
add
add
add
push
jb
add
sbb
push
jb
add
add
add
add
add
cli
jb
add
sbb
