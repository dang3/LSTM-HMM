push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
jmp
ret
cld
sub
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
sub
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
and
add
js
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
hlt
and
add
and
add
add
mov
add
aam
add
push
and
add
and
add
add
mov
add
add
add
dec
and
add
add
and
add
add
cmpsb
and
add
add
out
and
add
and
add
add
add
add
add
es
add
add
outsb
and
add
and
add
add
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
js
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
hlt
and
add
and
add
add
mov
add
aam
add
push
and
add
and
add
add
mov
add
add
add
dec
and
add
add
and
add
add
cmpsb
and
add
add
out
and
add
and
add
add
add
add
add
es
add
add
outsb
and
add
and
add
add
add
add
add
push
jb
jbe
je
push
jb
imul
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
push
je
imul
inc
add
addl
jb
popa
je
inc
imul
jns
add
call
inc
imul
bound
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
fs
insb
outsl
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
call
inc
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
movsl
add
je
gs
imul
push
add
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
je
inc
jbe
outsb
je
add
data16
je
je
dec
popa
outsb
fs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
gs
outsl
jbe
inc
imul
jns
add
roll
dec
gs
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
jb
add
mov
inc
push
add
push
outsb
jb
imul
jb
gs
push
add
addr16
arpl
jo
inc
imul
push
bound
je
add
push
dec
inc
gs
imul
push
jo
arpl
add
insb
insb
dec
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
inc
jne
insb
imul
outsl
outsb
add
gs
popa
insb
insb
outsl
arpl
pop
add
addr16
imul
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
je
js
insb
imul
jb
gs
push
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
sub
mov
clc
dec
jae
fsts
out
andl
ljmp
sub
sbb
sub
andl
data16
incb
jge
pop
pop
and
inc
repz
mov
push
inc
cmc
sbb
mov
jmp
and
jnp
and
sub
gs
xchg
test
and
outsl
rcll
add
cwtl
addl
cmp
or
movsl
mov
cmp
ljmp
int
mov
aam
add
push
pop
jns
aaa
gs
xlat
sub
or
mov
xor
xor
push
mov
mov
jae
ret
lods
xor
popa
jl
test
xchg
sahf
push
push
cmp
inc
mov
pusha
push
inc
add
pop
xor
out
sub
in
dec
rcll
scas
mov
xchg
mov
ljmp
pop
pop
mov
inc
jns
mov
xor
dec
sbb
pop
dec
push
sbb
pushf
or
dec
mov
push
mov
call
push
pop
adc
sbb
rclb
jnp
stos
int3
mov
jnp
push
inc
pop
mov
test
nop
ljmp
mov
mov
jns
sub
jns
rolb
das
dec
push
aas
shl
in
mov
dec
dec
dec
pop
aas
push
fidivs
and
int
push
scas
stos
lahf
sub
mov
aaa
sub
sbb
in
mov
ss
add
cmc
jmp
sub
dec
lret
and
cmp
or
jnp
setb
pop
pop
mov
ds
xchg
jno
dec
and
cmpsb
lock
int3
or
xorl
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jnp
lods
lods
lods
add
test
push
mov
mov
mov
ret
lret
lret
into
rcl
in
rcl
shl
rcl
shl
int3
int
hlt
mov
out
in
mov
mov
lods
lods
stos
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
out
lret
lret
not
rcl
cld
xlat
xlat
std
fcom
fdivr
fcom
fdivr
aam
aad
rcl
iret
dec
int3
int3
aad
aam
ror
sar
ret
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
rcl
sar
aam
aad
fcom
xlat
call
xlat
xlat
call
aam
dec
int3
int3
dec
int
call
aam
into
into
into
mov
mov
mov
std
test
cmpsl
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
dec
add
push
add
push
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
into
int3
call
rcl
call
fcomp
fcom
xlat
call
aad
into
int3
int3
dec
lret
lret
int
inc
mov
mov
mov
cmpsb
cmpsb
cmpsl
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
imul
pop
pop
pop
fs
aas
inc
sbb
sbb
sub
cmp
aaa
cmp
sub
and
adc
push
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
sar
aam
aam
aad
call
ror
dec
leave
inc
inc
ret
mov
mov
ljmp
movsl
mov
cwtl
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jle
jle
jno
jo
arpl
mov
cmp
inc
inc
mov
jo
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
enter
ret
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
cwtl
fwait
fwait
lcall
aas
aas
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
pusha
nop
lea
incb
jl
jnp
jl
jo
jo
pushw
push
je
ret
jg
jns
jp
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
lcall
xchg
incl
addb
xchg
xchg
lahf
sahf
lahf
sti
mov
xchg
xchg
mov
js
jp
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
xchg
jge
jge
jno
jb
jne
jne
jle
jle
test
jp
data16
cmp
es
jge
jg
lcall
shrb
lods
lods
sti
stos
lods
lods
lods
lods
stos
test
test
mov
lcall
mov
jle
js
jp
jp
jns
xchg
xchg
movsb
mov
mov
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
push
pop
push
push
push
or
dec
insb
imul
test
cltd
lcall
lcall
std
mov
decl
mov
lcall
cmpsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
xchg
sahf
pushf
popf
std
movsb
mov
mov
in
xchg
nop
in
xchg
push
jne
femms
dec
add
or
daa
daa
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
call
lahf
mov
ljmp
cmpsl
scas
pushl
mov
stos
std
mov
xchg
lods
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
lcall
mov
call
nop
xchg
xchg
xchg
xchg
pushf
sahf
pushf
movsl
movsl
movsb
test
stos
movsl
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
popa
popa
jne
jb
mov
jg
orl
int
xchg
xchg
in
nop
xchg
testl
lea
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
mov
lods
stos
stos
mov
movsl
movsb
add
mov
add
pusha
adc
mov
ljmp
sahf
decl
xchg
nop
call
xchg
xchg
call
xchg
xchg
fwait
lcall
mov
movsb
mov
stc
xchg
cltd
lcall
xchg
xchg
les
xchg
cltd
in
xchg
xchg
out
lea
nop
stc
xchg
test
std
xchg
jb
fwait
imul
ljmp
jns
mov
jae
mov
outsl
ljmp
packuswb
stos
or
lods
or
mov
jge
mov
mov
lods
pushf
movsl
movsb
mov
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
lcall
lahf
lahf
mov
lcall
xchg
xchg
call
cwtl
xchg
call
xchg
fwait
cld
cltd
cwtl
popf
stc
lahf
cltd
lahf
stc
sahf
xchg
sahf
cld
popf
mov
xchg
insb
mov
xchg
push
jg
xchg
dec
jns
lcall
popf
push
imul
movsl
adc
jmp
adc
adc
stos
adc
scas
adc
mov
push
mov
imul
adc
cmp
mov
lods
scas
scas
mov
movsl
mov
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
mov
mov
jmp
xchg
cwtl
decl
mov
decl
mov
cltd
jno
fwait
arpl
call
cs
decl
adc
xchg
or
xchg
push
pop
call
pop
jmp
adc
ljmp
sbb
mov
outsl
pushl
pop
jb
mov
and
mov
inc
cmp
xchg
scas
mov
scas
scas
mov
sahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
mov
cmpsl
jmp
test
cmpsb
lcall
mov
mov
decl
cmp
xchg
decl
pop
incl
add
push
decl
add
nop
add
xchg
add
fwait
add
mov
or
mov
outsb
pushl
sub
mov
sub
les
dec
xor
dec
inc
mov
leave
mov
cld
mov
mov
movsb
movsb
mov
add
add
add
add
lods
movsb
test
adc
test
ljmp
lahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
pop
incl
or
add
push
incl
add
xchg
push
decl
add
xchg
add
cltd
add
sahf
add
movsb
add
scas
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
mov
rolb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsl
ljmp
sahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
pushf
add
mov
add
lods
add
jb
les
xchg
lret
inc
dec
inc
call
inc
call
dec
mov
fmuls
call
dec
xchg
fisttpl
fisttpll
fistl
call
test
mov
mov
mov
sahf
lahf
or
add
add
add
add
inc
inc
adc
jl
movsl
popf
mov
jmp
stos
stos
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
pop
pop
decl
pop
decl
add
xchg
add
xchg
add
sahf
add
mov
add
test
pop
fs
es
int
call
push
cwtl
call
push
cltd
fistl
fistl
ficomps
jmp
push
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
sahf
add
inc
inc
adc
jns
lahf
fwait
sahf
jmp
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
xchg
and
xchg
and
sbb
nop
or
nop
add
add
lcall
ljmp
add
mov
fs
mov
xor
call
pop
lcall
bound
jecxz
cmpsl
jmp
cmpsb
call
push
ljmp
fldl
ret
mov
cmpsb
mov
lahf
mov
add
add
add
inc
inc
adc
jp
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
das
outsb
lcall
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushw
adc
rolb
fsubrl
jmp
outsb
stos
jmp
outsl
lods
jmp
jno
call
jne
jmp
mov
in
jbe
in
jbe
out
je
jmp
xchg
mov
test
lcall
mov
add
add
add
add
insb
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
cmp
mov
xor
lcall
lcall
add
movsb
add
test
pusha
pushl
add
mov
sbb
fsts
jmp
jbe
jmp
jg
jmp
mov
in
cmpl
push
xchg
push
cmpl
mov
test
cmpsl
pushf
pushf
popf
daa
mov
lahf
lahf
add
add
add
pusha
add
aaa
cmp
pop
pusha
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
outsb
mov
fwait
cmp
mov
inc
jle
movsl
cmp
fwait
sbb
xchg
add
sahf
add
movsl
add
test
pusha
ljmp
add
mov
add
iret
es
ljmp
out
mov
push
nop
sar
xchg
ret
push
nop
ret
push
xchg
xchg
mov
out
pop
fidivl
clc
stos
stos
stos
mov
pushf
sahf
xor
sahf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
mov
jmp
inc
jp
cmpsb
dec
cmp
dec
test
mov
punpcklbw
fwait
add
mov
add
lods
add
mov
mov
add
leave
add
mov
out
mov
out
xchg
push
fwait
push
fwait
push
fwait
push
fwait
enter
lret
popf
lret
sahf
into
sti
lahf
int
cli
lcall
fidivs
cli
mov
mov
mov
xchg
xchg
add
add
add
ss
add
das
sub
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
enter
mov
lahf
jmp
push
xchg
lods
dec
xchg
mov
or
sahf
add
add
stos
add
mov
arpl
mov
add
leave
add
rorb
out
lea
push
movsb
int3
push
movsb
int3
stc
test
sti
test
cld
cmpsb
iret
cli
test
stos
sar
std
stos
iret
std
test
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
add
sub
or
bound
pop
xlat
jae
jo
mov
rol
rol
mov
ret
vshufps
leave
leave
inc
rol
mov
test
movsl
push
xchg
lods
push
mov
scas
dec
test
lahf
sbb
lcall
add
stos
add
mov
arpl
mov
add
int
outsb
call
add
fists
jge
in
pop
cmpsl
push
popf
lret
sti
lods
sar
cld
mov
cld
mov
cli
mov
mov
std
mov
mov
std
mov
pushl
sar
cmc
movsb
mov
dec
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
push
add
dec
dec
outsl
outsb
outsb
mov
aam
xlat
jmp
fdiv
rcl
sar
int3
int
dec
lret
lret
dec
lret
lret
mov
ljmp
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
rolb
outsl
call
add
loopne
je
jmp
jae
sti
lods
sar
cld
mov
mov
cld
mov
cld
mov
xlat
mov
fdivr
stc
mov
jmp
mov
call
lret
into
mov
sahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
out
jmp
test
in
leave
fstp
fsubp
fdiv
xlat
cli
aam
fdivr
into
rcl
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fldl
ja
in
ja
in
das
xchg
stc
mov
sti
mov
loopne
std
inc
loope
inc
loopne
inc
loopne
std
fdivrp
std
fdivrp
inc
dec
dec
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
std
incl
std
std
incb
std
add
div
or
out
in
pop
jmp
in
sub
out
out
dec
call
ljmp
in
in
fcmovnu
fucomi
ret
stc
lods
outsl
xchg
cmpsb
cmp
mov
add
ljmp
add
mov
add
int
outsl
call
add
filds
ja
jmp
inc
pushf
cld
mov
loop
cld
int3
jecxz
std
into
in
dec
jecxz
dec
loop
dec
loope
dec
loopne
dec
in
shl
call
in
std
shl
cli
in
mov
inc
ret
ret
cmpsl
cmpsb
mov
xchg
xchg
add
add
add
incb
std
incb
idiv
testl
lock
repz
out
repnz
in
lock
cmp
out
out
pop
loopne
les
xchg
sti
sahf
and
lcall
add
add
mov
fs
mov
add
rolb
jb
fildl
jne
in
jns
in
push
jge
cmc
pop
test
cld
iret
out
dec
jecxz
call
jmp
call
in
call
out
call
out
out
fldl2t
fldl2e
std
fucomi
dec
loop
repz
aad
jecxz
fcos
lret
rep
test
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
cli
add
testl
repz
or
aam
xor
jae
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
fildl
ja
out
jns
out
sbb
sti
ret
cld
fsubr
std
fldl2t
fldlg2
fucompp
std
fldl2e
std
fsubr
std
fucomp
fsubr
loopne
loopne
fucomip
cld
shl
push
ret
out
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loope
add
enter
mov
cltd
repnz
and
lahf
add
cmpsl
add
mov
mov
add
int3
add
add
filds
jae
jmp
sub
cld
shl
fcomip
std
fucomi
fucomi
fldpi
xlat
jmp
shl
cli
iret
loopne
cld
iret
loopne
clc
int
stc
lret
fdivr
test
out
mov
jmp
rcr
call
fcomp
sti
mov
mov
lcall
add
add
add
add
leave
adc
lods
mov
jmp
add
mov
fs
mov
add
rolb
outsl
call
add
loope
jns
ljmp
cli
cwtl
cli
enter
int3
jecxz
cld
fdivrp
stc
rcr
idivl
sar
lock
into
in
mov
int
jmp
ror
jmp
jmp
in
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
addr16
mov
add
int
jb
rorb
jbe
fsts
js
loope
cmp
ljmp
call
scas
enter
cld
fisubrs
neg
mov
enter
int3
in
enter
rcl
shl
fcmovnb
call
in
test
out
out
popf
call
lret
lods
lods
stos
adc
cmpsb
test
add
ret
rolb
popf
stos
aam
dec
cmp
cmpsl
sbb
scas
and
mov
ja
mov
inc
xchg
ret
stc
leave
arpl
hlt
iret
mov
shlb
rcl
mov
int3
rcl
int3
mov
int
mov
fcom
aam
fcmovu
fidivl
gs
in
call
out
in
xor
div
cmc
and
lock
fcmovnu
or
mov
int3
add
add
add
rol
mov
scas
mov
test
push
lock
sbbl
sarb
mov
ret
mov
cmpsl
leave
mov
mov
lret
ror
iret
addr16
iret
rcll
rcl
dec
xlat
aad
aam
xor
fcmovu
daa
xlat
fcmovnu
sbb
adc
in
push
loopne
jecxz
call
repnz
add
sti
testl
std
std
incb
std
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
ror
xor
into
lret
ror
and
rcrb
rcl
aam
rcl
rorl
rcl
aam
rcr
xlat
add
fstp
add
add
in
add
in
jmp
add
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
leave
enter
leave
add
int3
lret
add
rolb
rcl
aad
aam
add
fcom
add
aad
add
fsub
add
aam
add
loope
add
add
out
add
repnz
std
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
ret
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
push
mov
mov
jmp
aam
cmc
rcl
aam
ror
into
cli
int
int3
stc
lret
int3
lret
mov
mov
lods
lods
stos
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
into
xlat
aad
call
aad
call
iret
iret
dec
int
dec
lret
lret
mov
mov
icebp
cwtl
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
je
gs
dec
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
call
rcl
call
rcl
dec
lret
lret
inc
mov
pushl
test
popf
xchg
xchg
cwtl
jmp
outsl
jo
push
push
push
dec
add
add
add
add
add
add
addb
addl
aam
imul
push
push
push
stos
push
outsb
insl
push
pop
pop
cmp
cmp
pop
jno
jno
mov
mov
mov
mov
mov
mov
ret
mov
mov
mov
mov
ljmp
pushf
fwait
call
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
cwtl
cltd
fcoml
addl
jmp
jns
sarb
jns
jnp
jns
jae
je
push
push
push
cmp
je
sahf
popf
sahf
mov
scas
scas
repz
scas
scas
sti
scas
scas
lods
std
test
popf
pushf
call
xchg
call
mov
scas
jmp
lods
scas
leave
cmpsb
movsb
cmpsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsb
insl
pop
lods
movsl
stos
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsb
outsb
orl
cwtl
lcall
lea
call
popf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
cmpsl
mov
jg
pusha
pop
popa
or
scas
mov
cmpsl
mov
mov
mov
call
lahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
insl
outsb
outsb
xchg
subl
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
scas
stos
insl
stos
test
add
add
add
pop
popa
popa
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
cwtl
fwait
cltd
popf
lcall
xchg
cltd
jmp
xchg
lea
popl
mov
xchg
insb
xchg
xchg
pop
jle
sahf
dec
jl
mov
ss
mov
je
scas
push
insl
ljmp
sbb
pop
mov
mov
mov
jle
movsl
movsl
push
pusha
pusha
pop
or
mov
lcall
sahf
sahf
jmp
mov
xchg
decl
addl
cld
cwtl
pop
cmp
dec
jp
cmp
nop
daa
call
lcall
punpckldq
cmpsl
push
push
pushl
sbb
mov
and
rcrb
mov
lods
scas
xchg
popf
popf
lahf
adc
add
add
pop
popa
pop
or
lods
mov
stos
mov
lahf
jmp
test
cmpsl
lcall
pop
jnp
mov
push
mov
decl
adc
or
mov
decl
add
pushf
add
or
pushl
jnp,pn
shrb
inc
xor
enter
leave
xor
inc
stos
mov
mov
mov
test
test
add
add
add
popa
or
movsb
stos
in
mov
cmpsb
ljmp
mov
pushl
lahf
decl
adc
mov
push
incl
push
push
decl
add
xchg
add
sahf
add
cmpsl
add
mov
insl
inc
ss
inc
mov
rolb
call
inc
mov
inc
nop
fadds
call
arpl
stc
mov
mov
mov
std
add
add
add
popa
or
mov
ljmp
mov
pushl
mov
test
decl
sbb
lea
pop
decl
add
xchg
add
sahf
add
cmpsb
add
scas
add
and
iret
dec
xchg
fcomps
ficompl
jmp
pop
lahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsb
stos
movsl
xor
jg
add
add
dec
dec
dec
pop
jle
jl
fwait
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
mov
sub
lcall
and
xchg
subps
xchg
add
popf
add
cmpsb
add
scas
add
mov
xor
fisubl
jmp
insb
test
in
lods
call
jb
in
jb
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
insl
outsl
imul
xchg
lcall
mov
mov
sar
mov
jmp
jne
lahf
cmp
pushf
sub
xchg
or
lcall
add
lods
add
mov
gs
or
aad
xchg
jmp
jp
ljmp
push
xchg
push
mov
fisubrl
mov
push
fwait
cltd
cltd
add
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
jg
mov
or
mov
add
mov
gs
mov
adc
mov
push
xchg
ret
push
xchg
push
cwtl
push
cltd
leave
stc
pushf
lret
push
cwtl
jmp
stos
mov
lods
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
pushl
push
mov
lods
dec
test
mov
add
pop
pushl
add
lret
add
fisubl
cmp
hlt
mov
into
stc
test
iret
cld
lods
sar
lods
sar
stc
cmpsl
int3
call
mov
test
or
add
add
push
dec
push
aaa
jae
jae
test
int
out
iret
int
lret
sti
leave
lret
leave
std
leave
mov
pusha
ljmp
adc
test
add
rolb
dec
add
fildl
xchg
push
xchg
mov
cld
mov
fcos
mov
xlat
mov
sar
jmp
lret
rol
mov
scas
mov
add
add
add
add
or
aam
dec
loopne
loop
fsubp
fistps
fcmovu
xlat
xlat
out
shlb
test
or
mov
mov
add
xlat
add
jecxz
jnp
repnz
mov
std
ret
loope
inc
loope
inc
inc
dec
loopne
dec
loopne
std
out
mov
lret
divb
pushf
sbb
add
add
std
add
std
add
jmp
in
sbb
in
in
xor
loopne
in
les
mov
mov
add
pushl
add
into
add
faddl
je
call
outsb
mov
cld
sti
iret
out
std
shl
call
in
std
aam
xlat
call
aam
push
enter
int
stc
mov
mov
and
add
add
std
add
incl
cld
pop
aad
push
mov
pop
xchg
sahf
or
stos
add
mov
fs
add
rolb
jo
filds
ja
out
pop
mov
cli
mov
shl
fldl2t
cld
xlat
call
sti
fld1
std
fsub
std
aam
push
fdivr
sti
mov
lahf
popf
das
add
add
into
int
or
bound
lods
add
mov
add
roll
jae
loopne
ja
in
xor
sti
int3
loope
cli
lret
test
bnd
icebp
ret
out
ret
sar
in
aad
in
aad
ljmp
ljmp
test
std
incl
aad
push
mov
jae
or
mov
insb
inc
pop
jno
lret
and
sub
pushf
clc
jecxz
mov
out
jecxz
lret
mov
loope
mov
lret
sarb
in
ficompl
in
jmp
rorl
mov
add
stos
lods
lods
add
xchg
movsb
les
pop
xchg
mov
nop
fidivrl
jle
rol
stos
mov
mov
les
rol
lret
insl
aam
into
pop
aam
iret
dec
xlat
fcomp
cmp
das
jecxz
fisubs
in
repnz
in
in
or
std
std
std
add
add
add
std
add
mov
mov
stos
jns
mov
mov
mov
mov
shrl
leave
enter
aam
mov
rcl
or
loope
or
int
add
std
std
add
incb
cltd
cltd
lcall
mov
sarb
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
rol
enter
leave
enter
mov
mov
scas
mov
stos
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
iret
int
std
mov
mov
sarl
sbb
pop
add
add
add
add
add
add
add
add
jno
jb
push
inc
dec
das
cs
das
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
int3
call
aam
dec
int
inc
mov
mov
scas
scas
jmp
mov
push
add
add
add
add
jne
je
test
adc
outsl
outsb
ret
popa
mov
data16
insl
outsl
insl
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
xchg
xchg
lds
jae
daa
es
das
add
add
add
add
jb
jae
pushf
xchg
fwait
mov
test
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cwtl
cltd
lcall
push
push
imul
jle
mov
xchg
notl
mov
pushl
imul
call
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
lcall
cltd
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
arpl
std
pushf
inc
ja
movsl
aaa
jbe
lods
sub
mov
outsl
pushl
ss
mov
mov
imul
int
add
add
xchg
pop
scas
movsl
lods
test
lahf
pushf
popf
jmp
movsl
call
imul
inc
jb
lea
imul
xchg
adc
xchg
or
mov
sbb
jae
mov
sub
lds
xchg
rcrl
subl
je
push
mov
movsl
test
test
test
scas
scas
scas
ljmp
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
aad
mov
aam
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
lahf
movsb
cld
lods
lods
scas
pushl
mov
ljmp
aaa
outsl
call
pop
pop
call
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
movsb
jmp
cmpsb
call
lcall
cmpsl
cmpsb
cmpsl
pop
add
add
arpl
adc
sahf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
call
add
stos
add
mov
xor
jmp
jnp
push
jl
push
jg
fistpl
mov
mov
add
add
adc
push
cmp
mov
mov
ret
ret
mov
jmp
inc
jge
sahf
and
pushf
add
cmpsl
add
mov
fs
or
fmull
in
mov
push
xchg
clc
xchg
enter
jmp
cmpsb
inc
mov
movsl
sub
aas
inc
inc
adc
push
xchg
mov
cld
rol
inc
sarl
ljmp
pop
jmp
pushl
imul
emms
in
insl
lods
push
test
stc
stos
sar
cli
scas
sar
cld
scas
sar
std
scas
iret
in
scas
lret
mov
cmpsb
ds
std
std
add
outsl
outsl
inc
scas
mov
mov
aam
mov
aad
fnop
rcl
out
leave
leave
lret
cli
mov
mov
jmp
add
add
aam
jae
out
xchg
stc
mov
mov
inc
cld
ret
cld
rcr
lock
shl
cmpsl
cmpsl
dec
addl
stos
add
in
in
or
call
out
outsb
fcmovu
fldenv
mov
add
mov
add
faddl
jbe
lock
std
int
shl
call
out
aam
aam
push
enter
int3
in
scas
scas
scas
popa
jg
addb
add
incl
std
std
push
int3
lret
shrb
mov
add
mov
add
loop
js
cmc
push
movsl
std
enter
jmp
std
shl
sti
aad
cli
aam
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
les
mov
add
imul
push
je
fistps
jg
in
imul
mov
shl
call
ret
in
aam
jmp
fcmovu
scas
vsqrtpd
add
add
sahf
lods
xchg
inc
and
shll
lret
mov
xlat
mov
lret
adc
into
outsl
fxch
rcrb
rcl
dec
in
fistpll
out
out
out
out
out
sbb
mov
mov
cmp
movsb
scas
arpl
lods
mov
ret
lds
lret
sbb
fstp
bswap
into
int
aad
aad
std
std
add
addl
stos
incl
rol
add
incb
std
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
sbb
lds
fprem
push
add
hlt
push
fisttps
lods
mov
hlt
ds
mov
arpl
cld
fmull
jle
push
pop
in
sbb
sub
in
shrb
mov
outsb
cmpsl
out
pop
fidivl
repz
insb
mov
popf
mov
mov
pop
mov
cs
das
cld
cmpsl
leave
inc
ret
lret
mov
cld
sbb
xchg
loope
cli
pop
das
dec
sarb
jb
mov
push
jle
push
pop
sbb
or
daa
dec
mov
lds
out
insb
fwait
xor
mov
scas
pop
cmpsb
int
sbb
mov
pop
mov
out
xorl
iret
adc
std
or
movsb
out
sub
inc
mov
fwait
ja
mov
pop
loope
cmp
add
std
sbb
jbe
pop
mov
popf
mov
jmp
add
ds
mov
push
add
fldenv
into
xor
nop
inc
sub
sti
outsb
jae
test
mov
cmp
jmp
push
sbb
stos
inc
out
jb
rcrl
pop
mov
cmpsb
cmpsb
out
mov
adc
cmpsl
pop
orb
ljmp
xchg
and
addr16
test
cs
ds
sbb
xor
nop
imul
int
ret
lcall
mov
xchg
inc
inc
push
sti
and
faddl
sub
lret
xchg
movsb
cmp
iretw
adc
push
push
and
aam
adc
jmp
sarl
sub
sub
cmpsl
mov
or
sarl
xlat
call
jno
pop
add
push
lret
or
outsb
aaa
cmpsb
pop
nop
mov
testb
pop
pop
lea
fisttpll
ret
fucomi
loope
sti
cmc
gs
aaa
adc
repnz
int
jb
ljmp
xor
pushf
push
adcb
xor
mov
cli
mov
inc
lret
mov
and
mov
adc
sbb
dec
jge
xor
ds
push
sub
push
int3
fld
loopne
xchg
inc
jmp
lcall
ficoml
dec
stos
pop
clc
pop
aas
jge
xchg
in
insl
movsb
jb
incl
mov
jle
jmp
cwtl
lcall
ds
and
data16
jge
add
mov
inc
or
pop
cmp
int
add
mov
subl
test
insb
add
adc
inc
adc
inc
xor
and
lret
repnz
pop
gs
mov
pop
adc
push
cmp
das
stos
jl
mov
or
hlt
repnz
dec
or
adc
cmp
mov
fisttpll
cmpsl
movsb
call
inc
inc
adc
pop
shll
xor
push
add
into
ret
or
jnp
insb
and
cmp
hlt
add
pop
pop
cmc
push
push
movsl
adc
xchg
jbe
mov
vphaddubd
pop
jl
push
xchg
mov
dec
push
popf
cmp
out
stos
sub
pop
cmp
movsb
push
push
add
add
cli
sub
adc
movsl
inc
jmp
das
jg
xchg
mov
push
and
insb
fwait
jmp
dec
mov
repnz
add
outsb
test
cmp
in
pop
jecxz
mov
add
mov
cmp
sbb
cwtl
ja
xchg
jb
arpl
mov
es
outsl
aaa
into
mov
rcr
jo
dec
adc
push
leave
nop
mov
popa
push
inc
push
int
dec
jae
fdivrs
imul
mov
mov
lods
jnp
ret
dec
add
hlt
pop
jl
cwtl
xchg
outsb
clts
addb
push
repnz
dec
push
ss
jns
outsb
jne
mov
mov
mov
pop
hlt
mov
xchg
fisttpll
mov
adc
or
out
adc
or
std
pop
pop
pop
fs
xchg
movsb
rep
cmp
mov
ret
pop
test
or
xor
jmp
data16
ja
and
inc
or
and
add
mov
sahf
inc
imul
adc
mov
es
dec
adc
repnz
ljmp
adc
fiaddl
jno
xchg
jne
or
mov
mov
jp,pt
mull
xor
jb
mov
in
dec
dec
add
hlt
lcall
fisttpll
push
fildll
xchg
pop
icebp
push
jno
lcall
sar
push
out
pop
or
push
push
adc
test
push
cmp
cmp
mov
enter
pop
in
sub
push
lock
imul
pop
or
mov
faddl
adc
jp
cwtl
or
inc
mov
xor
mov
test
jecxz
mov
sub
mov
mov
fwait
and
pop
in
jle
flds
xchg
sub
sarb
cmp
jl
aad
xorl
sbb
xor
inc
dec
loopne
dec
enter
sub
add
out
mov
dec
sub
adc
fcmovnb
imul
iret
and
addr16
xor
gs
pop
cmc
cwtl
pusha
and
rcrb
mov
mov
or
jae
pop
push
popf
dec
hlt
mov
push
xor
jl
sbb
jno
push
icebp
subl
ljmp
mov
into
xchg
arpl
or
lcall
shl
stos
popf
add
sahf
adc
add
mov
in
and
movsb
adc
push
push
adc
adc
pop
mov
jg
and
push
shrl
cmpsb
and
pusha
jmp
stc
cmp
mov
or
pop
insl
sub
pop
mov
push
in
stos
adc
inc
int3
je
std
test
adc
dec
cwtl
inc
stos
pop
lock
pushf
sar
repnz
in
test
adc
mov
call
repnz
sti
int3
push
mov
lock
test
cmp
pop
imul
es
aam
popf
iret
push
and
sub
lea
inc
inc
adc
rclb
xor
out
mov
jne
movmskps
inc
or
xchg
cmp
add
mov
rcr
pop
stos
inc
cmp
push
out
xor
pusha
lea
or
scas
out
loopne
xchg
sub
add
popf
xor
mov
sub
test
data16
inc
popf
in
test
clc
pusha
imull
icebp
or
jge
sub
je
pushf
xor
xchg
inc
faddp
icebp
mov
cld
sbb
outsl
ja
sbbl
cwtl
testb
push
stc
popf
fidivrl
add
ljmp
mov
es
int
dec
popa
xor
sbb
push
inc
testb
jmp
sub
pop
dec
jb
jl
xor
outsl
push
out
xchg
mov
sbb
mov
imul
lods
pop
cmp
adc
dec
and
pop
js
dec
dec
pop
test
imul
mov
outsb
jl
or
scas
aad
adc
daa
pop
das
push
dec
push
jmp
jno
in
lcall
cmc
in
nop
daa
pop
pop
mov
dec
inc
scas
inc
jb
test
pushf
xchg
int3
arpl
mov
ljmp
cmp
lahf
push
add
mov
fldl
or
cmp
stc
pusha
pop
pop
cmc
mov
jl
sahf
xor
xor
mov
push
xchg
jno
cmpsl
xlat
outsb
fxch
clc
cli
cmc
and
and
xchg
adc
gs
adc
mov
cmp
cwtl
arpl
cmpsb
xchg
mov
sub
mov
int
sbb
push
imul
das
sub
jle
shrb
sbb
dec
aam
out
xchg
sbb
mov
and
jmp
adc
jle
pop
pop
lahf
and
xor
xchg
stc
lds
imul
mov
lret
test
fnstsw
loopne
pop
incb
popf
out
xchg
and
fdivl
enter
movsl
pop
repnz
mov
aaa
popa
clc
test
push
xor
je
sub
mov
out
push
jmp
xor
pop
lock
add
push
movsl
outsl
push
shlb
fbstp
js
movsb
mov
mov
imul
movd
push
loopne
fistl
mov
cmp
test
int
lea
mov
mov
std
test
test
imul
cli
cmp
stc
nop
rcr
and
jecxz
loope
movsb
mov
fcomi
pop
out
fnstenv
or
jns
fbstp
lcall
cmp
movsb
cmp
lea
stos
testb
jp
out
movsb
in
xlat
inc
adc
ljmp
push
jge
cli
xchg
cs
repnz
lret
pushl
loopne
movsb
lcall
mov
mov
movsl
fdivrs
aad
inc
push
lods
sub
xor
daa
lock
mov
out
stc
fidivs
adc
mov
out
fnstenv
cmpb
cmpsl
pop
xor
xchg
mov
mov
fistpl
adc
out
fbstp
rol
testl
hlt
mov
movsb
push
jmp
lcall
outsb
sub
dec
shrb
sub
mov
push
sbb
jne
fidivrs
add
inc
fsubrp
sbb
shrl
das
lcall
hlt
push
push
and
pop
mov
mov
xchg
sub
aas
mov
dec
cmp
nop
adc
push
mov
aad
cli
shrb
inc
push
jmp
leave
jl
xorps
jbe
test
mov
pop
test
mov
lods
adc
test
arpl
xchg
sub
adc
and
call
and
leave
stos
inc
repnz
mov
inc
enter
pop
bound
imul
loope
add
sbbb
and
sub
sub
mov
cmp
ja
pop
push
out
dec
pop
sub
mov
dec
pusha
sub
repz
into
aaa
adc
icebp
test
push
call
sbb
xlat
outsb
stos
mov
int3
outsl
push
mov
fildll
roll
dec
in
repnz
in
xor
or
cltd
xor
and
or
jmp
and
das
adc
xor
inc
jmp
loopne
push
mov
dec
in
xchg
sub
dec
out
mov
mov
pusha
icebp
mov
dec
mov
mov
test
inc
adc
es
sbb
and
lcall
aaa
into
std
jns
pop
imul
test
cmpb
xchg
push
mov
and
pop
inc
xor
imull
mov
fmull
or
dec
pop
mov
push
jo
lahf
ss
xchg
icebp
mov
inc
xor
xchg
mov
inc
mov
in
daa
lock
push
cmp
sub
lcall
dec
xchg
dec
loopne
outsl
daa
mov
stos
xorl
xor
adc
imul
jecxz
sub
test
iret
mov
mov
mov
fsubp
ja
inc
jl
xor
ss
add
lcall
insl
add
mov
xor
lcall
popa
sub
dec
fsubrs
push
in
orl
pop
push
in
icebp
adc
or
lock
mov
inc
enter
lea
or
inc
inc
fstl
cmp
jg
push
fdivl
push
and
pop
call
mov
insb
mov
sahf
xlat
loop
jnp
test
dec
sbb
and
sbb
aaa
frstor
mov
pop
inc
xlat
dec
fwait
jle
into
push
subps
xchg
mov
dec
sbbb
adc
inc
and
xchg
ljmp
and
inc
ljmp
pop
out
xchg
sbbl
pop
std
jnp
sbb
jne
fistl
cmpsb
cmp
andl
and
xor
test
lret
mov
adc
fisubs
jle
icebp
mov
jecxz
lea
add
inc
jbe
xor
jns
rcrl
fidivs
sub
pusha
pushf
ljmp
xor
shrb
push
jbe
inc
test
xlat
lret
mov
data16
inc
mov
push
call
inc
cld
and
insl
pop
sbb
mov
sub
mov
inc
xor
push
sbbb
cltd
xchg
sub
pop
sbb
mov
and
jae
dec
loope
add
mov
xchg
lret
mov
jne
nop
insl
add
inc
mov
lret
std
xchg
dec
push
add
pop
add
outsb
jp
sbb
adcb
and
xor
sub
aaa
imul
xchg
xor
or
insl
adc
xchg
out
stos
inc
jno
fnsave
adcb
fwait
pop
scas
shlb
inc
fsubs
push
dec
loop
dec
lret
add
push
pop
sbb
dec
jecxz
xlat
das
jo
dec
fiadds
das
test
jae
pop
adc
shrb
adcb
cmp
push
pushf
into
mov
xchg
push
sbb
push
inc
repz
pop
dec
loopne
fsts
xchg
or
sub
adc
rcrb
lods
shr
jg
pusha
shrl
in
mov
cs
insb
clc
add
pop
or
enter
std
sub
loopne
and
stos
mov
out
jp
mov
fdivl
xlat
xchg
sub
jl
imul
std
ljmp
adc
mov
in
loopne
adc
xchg
sub
mov
test
sub
lahf
leave
gs
mov
int
fs
pop
out
push
lods
loopne
shrb
add
ret
fs
jg
ljmp
lods
inc
cwtl
out
enter
in
cmp
stos
insl
inc
fstpl
cmp
lahf
sbb
movsl
dec
rcrb
insb
sub
dec
mov
add
addr16
call
sub
icebp
mov
inc
fadd
pop
or
stc
nop
mov
pop
pop
stos
pop
scas
adc
aaa
outsl
push
test
add
mov
dec
jecxz
fsubs
scas
ja
shrb
cwtl
push
out
sarb
jg
mov
stc
pop
sar
xchg
mov
fistps
fiadds
sbb
jp
push
call
es
cmpsb
jne
adc
xor
ljmp
sub
in
loopne
pop
mov
add
mov
add
pop
lock
hlt
mov
mov
pop
bnd
jb
jecxz
movsb
adc
stc
ja
subl
sbb
dec
popa
mov
pop
nop
leave
push
adc
roll
stc
test
pop
lock
leave
je
sti
mov
add
sbb
cmp
pop
pushf
xor
outsl
mov
push
mov
xlat
outsb
mov
mov
scas
inc
lock
pop
pusha
testl
mov
xor
mov
or
pusha
inc
lock
push
push
dec
mov
cmp
and
lds
push
icebp
jbe
sub
sbbb
add
in
out
xchg
mov
add
jns
cld
xchg
dec
lcall
xor
outsb
add
popa
movsb
fnsave
xor
add
sahf
xor
jle
lret
lahf
inc
fldcw
hlt
lea
dec
pusha
negl
xchg
sub
lods
stos
jne
inc
cmpsl
int3
push
movsl
std
enter
push
sub
push
pop
lret
push
cmp
testl
scas
sub
cltd
popf
arpl
xor
ss
dec
push
sub
or
lock
mov
fnstsw
je
sbb
in
shrb
mov
int3
jae
std
test
inc
stos
inc
int3
fdivrs
shrb
shlb
dec
jo
jge
fiaddl
cld
shll
mov
or
mov
mov
in
ljmp
sub
and
pushf
dec
pop
and
mov
negl
fistps
adc
mov
inc
fwait
arpl
pop
lods
xor
subl
dec
add
lret
lods
xchg
xor
stc
xorb
loope
test
stc
lcall
pop
in
jmp
mov
in
push
sbb
mov
push
dec
and
jne
dec
cmp
push
cmp
mov
adc
mov
xor
dec
adc
push
clc
mov
sbb
test
cmp
sub
ja
shrb
cwtl
cmp
js
std
sbbl
and
retw
pop
xchg
into
fwait
mov
divl
call
or
mov
in
xorl
imul
adc
sahf
and
pop
aaa
je
cmc
cmp
pop
jl
push
aam
out
xchg
lock
or
enter
in
bound
or
arpl
dec
out
test
mov
sub
out
sbbl
or
sub
fildll
sar
shlb
or
xor
mov
jno
loop
outsb
adc
lret
xor
xchg
into
lcall
rclb
fwait
outsb
icebp
jge
xlat
dec
in
stc
in
test
outsl
push
out
fs
dec
pop
icebp
mov
outsl
sbbb
pop
pop
repnz
hlt
mov
jnp
mov
mov
testb
and
inc
xchg
inc
fcomps
fs
sbb
out
test
jge
ljmp
xor
mov
xor
xchg
lock
or
pop
cmp
jle
stc
nop
dec
adc
sub
and
cmp
loope
push
jmp
cmp
sti
xchg
lods
sbb
mov
loope
fmul
lds
cmc
sti
xchg
out
fnsave
push
popf
sub
add
pop
mov
dec
xor
pop
fsts
in
pop
inc
xlat
nop
push
incb
xor
push
sbb
jge
sbb
in
or
cmp
and
out
fnstcw
or
xchg
sbb
repz
int3
jge
jae
dec
xor
ds
bound
push
in
sbb
int
je
xchg
mov
loope
pop
cs
mov
cmp
mov
xor
montmul
cmpsb
les
pop
icebp
mov
mov
mov
dec
out
mov
xor
push
add
inc
or
leave
jl
mov
mov
jbe
or
and
sbbb
inc
push
lods
push
mov
pop
repnz
inc
jns
je
push
mov
xchg
pop
icebp
movb
xor
sbbl
xor
shll
mov
imul
mov
inc
sbb
mov
dec
loope
popf
mov
push
popa
iret
push
out
or
and
xor
mov
test
or
xor
incl
or
bound
faddl
leave
or
fcomps
pop
fsubl
xchg
pop
push
cmp
pushf
pop
repnz
call
ja
xor
jecxz
icebp
mov
cli
xchg
stos
sub
ja
or
and
push
imul
aaa
jmp
cmpsl
adc
jb
xchg
cs
int
mov
cmp
lcall
imul
aaa
inc
sbb
orb
xchg
shll
cmp
xchg
mov
leave
pusha
jne
and
and
test
jge
push
adc
es
jo
add
ss
xchg
testb
in
pop
mov
sarl
fsubrl
loope
jno
hlt
add
lds
shlb
icebp
mov
xor
mov
ret
fcoms
jecxz
out
icebp
mov
push
movsl
mov
fstpl
push
incl
das
or
mov
fidivrl
rorb
sub
movq
into
js
call
ror
cltd
xor
enter
icebp
inc
fisubl
adc
xchg
inc
inc
frstor
jns
stc
subb
mov
cwtl
das
lods
aam
lock
shrl
adc
mov
xchg
sub
add
mov
fsubs
lds
out
test
mov
pshufw
push
mov
incb
mov
les
push
pop
repnz
mov
cwtl
rcrl
inc
pop
pop
pusha
notl
mov
lods
in
adc
xchg
sbb
mov
rorl
xlat
adc
daa
add
push
in
pusha
ret
cs
dec
loope
stc
inc
fldt
aaa
push
leave
pop
xchg
pop
scas
and
les
stc
pop
jno
or
or
inc
lret
jae
out
popa
shrl
adc
mov
les
push
test
xchg
xchg
mov
cld
stc
mov
mov
pop
jl
lahf
jg
stc
nop
jge
xor
ret
add
jecxz
out
icebp
out
test
fsts
test
ret
call
lret
in
pop
mov
sbb
out
pop
hlt
jnp
lea
pushf
pop
scas
int
into
gs
or
int
inc
pusha
out
xchg
popa
add
and
or
or
push
in
cmpsb
sub
ficoms
mov
iret
ret
repnz
jecxz
test
out
and
loope
fs
into
add
out
adc
fucomi
dec
out
cld
dec
loope
ficomps
cmpsb
out
sbb
xchg
or
mov
jecxz
mov
mov
sub
scas
dec
out
loope
imul
pushf
sub
fwait
sbb
mov
lock
scas
inc
inc
mov
test
hlt
mov
inc
or
jo
ss
or
push
addb
xor
jnp
lret
xchg
mov
inc
and
pop
push
sub
cli
scas
imul
xchg
mov
jmp
scas
sbb
xchg
sub
cltd
stc
and
shrl
xor
scas
fs
mov
mov
in
loopne
data16
xchg
sub
cmpsl
dec
mov
push
sub
xor
push
lds
ret
test
mov
fistpll
sysenter
std
xchg
push
mov
pop
mov
cmpsb
cmp
es
pop
xor
dec
cmp
xchg
sub
rcll
sbb
sub
shrl
sbb
into
mov
icebp
mov
pop
int
js
lcall
jns
push
insl
mov
mov
mov
push
in
pop
and
lods
inc
jge
ss
in
xchg
sub
scas
or
movb
sahf
and
test
sbb
ds
mov
ret
sub
lds
sbbl
into
in
lret
add
add
lds
push
out
pop
mov
mov
jp
fiaddl
popa
clc
lea
cmp
and
pusha
adc
xchg
cmpl
jle
inc
xor
jno
mov
ffreep
test
repnz
aaa
push
cmpsl
testb
in
mov
loop
mov
add
orl
jle
fwait
xor
lahf
inc
ficoml
jo
and
es
out
ret
aad
ljmp
mov
lcall
jp
mov
pop
scas
in
pop
loopne
inc
fidivrs
pop
lods
mov
popf
xor
push
sti
xchg
ss
cmp
lcall
mov
daa
mov
xchg
pop
jb
cmp
shrl
xor
stos
inc
fmul
incl
mov
sub
mov
fdivp
cmp
iret
mov
mov
add
int3
scas
dec
mov
loopne
jb
cmp
xchg
jnp
or
decb
bound
xlat
arpl
lret
or
dec
icebp
push
and
rclb
adc
sbb
sbb
fwait
js
shrb
adc
loop
xor
mov
ret
enter
jns
iret
xor
dec
test
xchg
testl
push
mov
add
in
pop
bound
xchg
jl
add
sbb
dec
mov
rcll
xchg
and
ja
cwtl
ljmp
clc
xchg
inc
adc
fldcw
loope
icebp
mov
cmp
push
clc
or
enter
imul
stos
push
mov
pop
push
pushf
push
sbb
inc
lret
cmc
addb
cmpb
lods
out
test
inc
inc
into
pop
fsubrl
loopne
sub
push
lods
inc
enter
hlt
push
mov
pop
sahf
xchg
popa
leave
cmpsl
jl
idivl
repz
cmp
jg
fildll
cmp
fisttpl
jmp
iret
cmp
adc
and
clc
dec
xchg
push
and
mov
inc
lret
test
mov
adc
push
negb
sub
gs
mov
adc
mov
lock
enter
mov
out
fistps
or
xchg
popf
pop
adc
xchg
fbld
xor
dec
mov
xchg
enter
xchg
inc
cltd
lock
sbb
dec
mov
ficoml
xor
mov
inc
push
add
xchg
test
xor
gs
xlat
xchg
pop
add
cmp
and
out
insb
clc
sahf
xor
xor
into
arpl
jmp
sbb
mov
sbb
fisubrs
data16
sub
mov
jp
ret
dec
mov
nop
jno
int
repz
mov
inc
xor
rorl
fidivl
inc
mov
lods
xor
hlt
nop
out
mov
fimull
sbb
push
out
cmp
mov
mov
aad
and
sarl
xor
mov
and
hlt
enter
mov
push
jmp
push
das
aas
sbb
or
int3
jmp
jmp
cwtl
pop
inc
lcall
lret
test
inc
loope
insb
jge
sahf
out
pushl
xlat
data16
aad
add
leave
inc
pusha
testl
push
movsl
xchg
loope
test
test
inc
int3
aad
pop
leave
int3
aad
call
fmulp
daa
test
adc
mov
rcrl
xor
xchg
cmpl
push
mov
insb
cltd
xchg
pop
shrb
in
aaa
outsb
cwtl
mov
out
stos
les
fadd
mov
adc
push
push
push
fldpi
push
lock
push
aam
incl
cltd
xor
inc
gs
jnp
test
sub
fwait
dec
in
cmc
mov
shrl
xchg
and
cmp
xchg
sub
lods
sbbl
into
fstp
inc
mov
jmp
jne
add
out
repz
pop
jo
mov
xchg
cmpsb
dec
out
push
xchg
sub
call
sbb
fdivl
lods
inc
fstpl
loope
outsl
xor
inc
jbe
in
orl
jp
xlat
ja
push
pop
cmpsb
test
xor
es
arpl
mov
or
xchg
loopne
insl
dec
std
push
out
mov
popa
clc
ret
xchg
jne
mov
popf
dec
jecxz
cmp
stos
jg
lret
pop
add
pop
or
inc
je
sbb
add
cmp
popfw
mov
int
jb
shr
mov
fistps
push
jns
push
iret
mov
add
pop
add
dec
lret
bound
jp
xor
mov
add
xor
jle
jl
cmp
cmp
dec
mov
mov
std
into
mov
xchg
sub
push
rol
dec
in
out
jle
and
dec
subl
daa
mov
xchg
cli
aam
outsl
ja
sbb
movsl
cmpsb
notl
mov
ja
pop
adc
mov
adc
xchg
inc
out
fnstcw
lahf
repnz
insb
imul
jg
sti
aaa
call
loopne
mov
mov
jecxz
and
out
scas
addr16
mov
popf
xchg
mov
into
inc
add
xor
fmuls
adc
pop
out
xor
sbb
xor
icebp
pop
jl
int3
arpl
fisttps
sub
push
xchg
cmpsb
adc
insl
loop
or
inc
add
mov
lahf
push
mov
add
fsubrs
cwtl
ret
jbe
pop
movsb
in
mov
add
lahf
repnz
mov
pushf
lret
les
mov
xchg
push
call
clc
popl
mov
imul
cmp
and
mov
lcall
cmp
sarl
push
cwtl
ret
ret
hlt
jo
xor
cs
xchg
sbb
test
fsubl
addr16
jecxz
outsb
xchg
ljmp
and
or
xor
sahf
out
cmp
test
mov
sbb
push
mov
jne
push
dec
xchg
mov
xchg
roll
or
sarl
inc
xchg
push
jmp
jnp
push
fidivl
xchg
test
push
popa
lahf
popa
repnz
loopne
push
push
imul
out
repnz
add
out
pop
arpl
dec
jns
loop
arpl
js
jae
notb
out
adc
or
and
push
lahf
inc
sbb
or
dec
xchg
jecxz
pop
sahf
xchg
addr16
jo
push
mov
es
mov
push
pop
xchg
adc
inc
jae
sub
insl
add
in
dec
mov
push
call
and
int
mov
popa
addl
xchg
push
adc
lret
cmc
add
cs
xchg
bound
cmp
andb
add
loope
sub
out
pop
sbb
add
ficoml
and
xor
ret
stos
push
cmp
adc
or
push
adc
push
dec
lret
scas
scas
push
sbb
out
mov
xchg
sbb
stos
inc
pusha
dec
or
lahf
mov
push
pop
sub
add
ljmp
sti
push
outsl
fwait
sub
cmp
lahf
ja
push
out
or
cmpsl
test
aaa
rclb
icebp
and
aam
dec
outsb
jmp
push
ja
adc
mov
mov
mov
mov
loopne
insl
dec
xchg
adc
jmp
lcall
jle
into
jle
movsb
in
add
das
dec
xchg
sar
fsubr
jnp
mov
je
sti
jnp
jno
or
ljmp
decl
movl
push
pop
pop
lods
or
mov
mov
inc
dec
sub
pop
fnstenv
mov
xchg
cmp
imul
sahf
dec
loopne
mov
push
pop
jns
out
lret
pop
mov
out
jne
aam
imul
bnd
ret
sti
pop
mov
shl
pop
push
and
push
dec
repnz
inc
aaa
or
xchg
and
aaa
cmc
pop
fists
inc
outsl
adc
jb
pop
jns
and
clc
sub
cmc
repnz
fs
notb
pop
enter
int
and
pop
and
sbb
lret
rcll
clc
xor
sub
pop
testl
fs
es
call
sbb
fists
popf
bound
jns
je
rolb
gs
test
clc
push
pop
or
scas
lea
loop
enter
test
cltd
xor
std
imul
repz
addr16
xchg
mov
clc
lcall
dec
lock
sbb
ficoml
je
add
xor
xchg
lock
fbld
ret
push
jecxz
xchg
scas
ljmp
push
jmp
in
test
add
push
mov
ret
imul
call
mov
pop
je
cltd
or
in
dec
inc
sbb
insb
lret
xchg
jb
and
test
pop
xchg
cmp
inc
out
and
ficomps
mov
scas
inc
pop
jnp
rol
das
jo
push
mov
fsubs
enter
popf
leave
adc
pop
xor
pusha
es
adc
mov
inc
jo
pop
cmpsb
rclb
flds
sbb
call
pop
xchg
sbb
mov
scas
fcomip
pusha
cmp
clc
jmp
xchg
mov
or
add
mov
dec
gs
mov
jg
push
test
rcrl
repz
repz
push
adc
lahf
movsb
sub
xor
jns
pop
and
xchg
dec
leave
adc
or
or
pop
xchg
scas
aam
scas
ret
out
iret
fidivs
mov
inc
stc
outsl
lcall
mov
lahf
pop
inc
mov
push
and
dec
arpl
push
jle
ret
sub
mov
mov
movsl
lds
push
mov
loope
popf
pop
icebp
push
and
pushf
mov
xlat
js
or
mov
jg
mov
sbb
jno
sub
or
push
out
repz
cmp
mov
xor
daa
inc
pop
mov
pop
xor
mov
je
inc
iret
jns
call
testb
ret
loope
push
push
aam
inc
daa
sahf
inc
fstpt
dec
mov
xchg
arpl
cmp
movsl
call
ljmp
mov
repnz
jo
or
mov
es
pop
mov
inc
add
pop
lahf
arpl
cwtl
js
ja
aas
xor
jnp
inc
fsubrp
sub
and
aad
cmp
cmp
sbb
imul
sbb
push
mov
sbb
mov
lcall
and
mov
mov
loope
xlat
pop
dec
adcb
or
push
ficoml
jae
xchg
inc
xchg
dec
lret
sbb
dec
sti
cmp
push
mov
ss
lret
subb
imul
insl
cmc
jnp
fistl
or
mov
dec
pop
lea
subl
inc
in
test
or
xor
sub
xlat
inc
repnz
or
xchg
xor
ficompl
daa
jmp
mov
shlb
mov
ret
clc
push
in
sub
jns
ficompl
insl
cmpsb
fiaddl
adc
jg
mov
add
iret
cmpsb
loop
and
fdivs
push
popa
jp
pop
xor
dec
cmpsb
ss
push
dec
add
xchg
dec
xlat
ds
xchg
sub
xor
or
ret
xchg
lret
pop
push
push
stos
inc
xorl
aaa
pop
mov
inc
push
push
mov
inc
clc
cmpsw
leave
push
test
pusha
dec
shr
in
xchg
int3
and
inc
jmp
in
cltd
cmc
dec
bound
add
scas
sbb
loop
lea
imulb
sahf
jno
cs
lods
popf
lods
mov
lods
test
rorb
outsb
mov
pop
loop
test
and
jmp
inc
and
xchg
xchg
int
and
add
inc
lock
pop
fstl
push
push
push
push
stc
lods
fimull
jne
sbb
mov
pop
push
or
mov
sbb
or
dec
scas
mov
fwait
push
push
icebp
imul
mov
and
sbbb
xor
push
rorl
lods
mov
repz
aam
mov
rorb
shrl
shll
ret
mov
sbb
inc
jecxz
cmp
aas
fisttpll
mov
adc
cmpsl
fidivs
mov
arpl
pop
cltd
xchg
lret
dec
ds
movsl
lret
lret
inc
or
jmp
lds
dec
add
shr
cmp
pop
cmc
testb
fists
rorl
mov
mov
jecxz
jl
lods
mov
add
leave
add
mov
rorb
das
in
adc
xchg
xor
dec
loop
cmpb
xchg
xchg
xchg
inc
push
inc
fsubs
outsl
mov
ret
in
test
jo
add
jle
xchg
jne
arpl
jg
xchg
into
lods
jg
stos
pop
clc
mov
test
testl
adc
mov
into
mov
sbbb
iret
fs
in
and
ret
dec
mov
jge
ret
pop
push
stos
sub
xchg
fnstsw
and
es
and
lock
mov
inc
fnsave
xchg
push
inc
fnstenv
ret
jnp
out
push
seta
shlb
aaa
and
ja
ficomps
insl
mov
jl
test
mov
daa
push
pop
pushf
lds
inc
jg
jno
or
jno
jp
stos
sub
test
test
out
cli
pushf
sub
jmp
sub
push
and
and
mov
inc
in
lret
popa
lea
fbld
jecxz
sub
repnz
sub
adc
sub
sub
faddl
add
out
stos
xor
pop
xor
mov
push
pushf
iret
push
or
cmp
push
xchg
outsl
test
fcomi
add
nop
jle
adc
mov
outsl
push
jle
insb
int
dec
repz
and
mov
xor
insl
jp
dec
xchg
xchg
cmpsb
in
fsub
std
and
shrl
ror
data16
sti
repz
les
in
fcomp
sbb
mov
out
test
xchg
aas
mov
pop
ljmp
stos
push
dec
sti
push
popl
stc
jo
jb
mov
sbb
push
push
les
cmp
jne
pop
xchg
adc
xor
add
out
lock
pop
stc
int3
leave
inc
sub
cmp
ret
lcall
add
pop
inc
sbb
adc
loope
xchg
ja
inc
test
jb
and
outsl
push
jmp
in
lods
pop
mov
push
xchg
lods
leave
rep
pop
test
push
enter
divl
movsl
cmp
or
loop
mov
mov
lret
cld
jl
aas
mov
out
add
xchg
scas
pop
or
and
popa
jbe
shlb
push
push
lods
inc
jo
gs
pop
or
testl
lret
or
xchg
icebp
jnp
push
sbb
jns
cmpsb
pop
test
insl
inc
inc
lcall
and
or
leave
xor
in
mov
sub
dec
movsb
dec
xorb
pushf
xor
arpl
ss
xor
testl
das
xchg
xchg
cmc
sahf
insl
shll
mov
addr16
loopne
mov
jg
cmp
pop
xchg
pop
in
das
dec
repnz
arpl
pop
pop
mov
fnstenv
lods
push
mov
add
push
mov
cmpb
mov
sbb
cmp
push
jecxz
aad
inc
push
in
adc
mov
leave
or
adc
out
sbb
inc
movsb
mov
xor
clc
ret
push
pusha
ja
stc
lcall
lcall
inc
lret
fisttpl
inc
fnsave
outsb
bound
movsb
add
xor
and
mov
jo
test
xchg
das
inc
sub
neg
outsl
sub
es
popf
pop
push
pushf
pop
push
pushf
sub
xlat
sub
jmp
loop
adc
test
or
stos
in
call
jmp
xor
neg
push
adc
adc
insl
pop
sbb
jle
insb
lret
adc
int3
insl
sbb
sbb
push
nop
cld
xchg
ret
js
xchg
mov
jns
jmp
rolb
cs
or
or
mov
inc
xchg
sarl
loope
sub
mov
fs
lret
xor
subl
and
and
pop
and
sub
jle
or
jecxz
push
push
pop
popa
shrd
xchg
fbstp
call
jne
fiaddl
jo
dec
mov
mov
in
mov
and
pop
in
ficompl
add
fwait
or
sub
push
test
push
enter
icebp
mov
push
jecxz
xor
sbb
mov
nop
push
mov
test
mov
jnp
push
aas
sbb
mov
pop
loope
sbb
push
push
lods
fld
or
sbb
sub
xor
out
mov
sub
fimull
pushf
int
and
inc
mov
pop
clc
push
adc
mov
pop
lret
test
jmp
and
sahf
pop
into
mov
mov
push
pop
lcall
xor
fwait
scas
inc
lahf
mov
add
mov
push
addl
les
pop
jl
cmc
movsl
add
lret
bound
test
mov
out
xchg
fisubl
stos
push
mov
sbb
je
pop
xchg
xor
inc
sbbb
mov
movsl
sbb
mov
mov
jnp
out
mov
jne
xchg
push
stc
cli
or
mov
jecxz
jle
and
and
enter
mov
scas
popf
xor
adc
or
and
imulb
ficompl
sub
mov
repnz
mov
or
mov
repz
and
shll
mov
mov
aad
scas
mov
cmpsb
addr16
out
pop
jmp
xchg
mov
sub
leave
mov
out
incl
loop
inc
or
pop
push
cld
xchg
scas
sbb
xchg
sub
ljmp
push
xlat
pop
mov
clc
in
xor
in
lcall
dec
adc
popf
inc
push
fildl
mov
sti
out
je
mov
and
push
dec
sti
dec
inc
xor
mov
mov
addr16
sbb
cmp
leave
sbb
xchg
sub
or
cltd
ficoms
in
std
ds
add
sarl
xchg
hlt
mov
jae
adc
xchg
cmpsl
inc
jb
jne
pop
pop
cmp
pop
push
xor
jmp
fs
xchg
sbb
andl
push
or
add
repz
subb
push
ja
mov
iret
data16
rorl
sti
aam
pop
addr16
in
cmp
xchg
sub
inc
cmp
sbb
jb
call
push
outsl
popf
inc
sahf
mov
aad
mov
stc
insb
inc
sarb
push
ljmp
xor
fstpt
hlt
mov
ds
cmpsl
sub
adc
bound
loope
mov
or
or
rorb
inc
jnp
shrb
pop
lock
sbb
mov
xchg
sub
es
mov
stc
inc
fnsave
xchg
cs
sti
xchg
mov
push
xchg
push
and
popf
fs
loopne
push
cltd
insb
add
fs
mov
loopne
push
sbb
pop
dec
xor
popa
stos
push
xchg
in
mov
jb
mov
jb
pop
or
cmp
mov
insl
push
mov
or
jo
fsubs
rcl
fsubs
or
mov
jecxz
mov
dec
fsubrl
adc
negl
scas
or
cld
and
push
cwtl
icebp
cmp
lods
nop
cmp
inc
cmp
ljmp
arpl
pop
loop
in
mov
aas
xor
adc
push
ljmp
int3
lahf
sub
lock
outsb
add
inc
mov
addr16
js
rolb
aam
xchg
sbb
nop
adc
mov
xor
mov
and
inc
cmp
lods
insb
decb
sahf
ds
cmpsl
call
mov
jle
leave
mov
inc
cltd
fcmove
sbb
bswap
sbb
sub
inc
pop
outsb
insl
inc
pop
inc
jne
inc
leave
mov
loop
and
jl
xor
int
push
inc
dec
xor
fldl
enter
ss
gs
lret
lret
jle
lods
pop
push
or
cmp
clc
stos
jne
test
fnsave
cmp
lock
test
inc
mov
ja
fiaddl
xchg
stos
sti
push
mov
sarl
add
xchg
adc
mov
popa
jae
movsb
xor
push
jb
in
movsb
call
hlt
push
pop
mov
sub
gs
push
cmp
xorl
enter
loopne
aas
xor
jns
aad
mov
ds
out
jno
lcall
push
std
sbbb
test
adc
jne
mulb
inc
sub
xchg
push
je
add
fsts
mov
mov
mov
xor
and
aam
pop
mov
cmc
les
les
lds
in
popf
add
scas
movsb
jns
lods
in
xchg
or
negb
iret
nop
xor
mov
divl
aas
and
dec
cli
adc
sbb
outsb
push
mov
mov
aam
scas
les
mov
movsb
sub
ss
jae
daa
mov
int3
pop
mov
mov
push
das
in
leave
dec
sub
aad
jne
mov
sarb
push
ret
sbb
out
xchg
sbb
ljmp
imul
pop
cmp
lds
xchg
pop
xor
add
mov
or
pop
sahf
or
jnp
fnstenv
daa
push
mov
or
jg
das
push
sti
xchg
stos
sub
je
stos
stc
int
ficomps
xchg
aaa
adc
mov
jmp
mov
insl
mov
jo
and
adc
add
lahf
mov
clc
clc
loopne
sub
ret
mov
in
jle
cld
sbb
pushf
stos
ret
std
fsubr
decb
jg
inc
sti
das
cmp
rorb
push
jp
xchg
mov
jl
je
sub
stos
pop
je
ret
lods
sub
sub
dec
push
adc
aaa
push
in
add
es
shrl
das
fstps
lds
adc
mov
mov
mov
mov
scas
or
xor
push
shrb
xchg
nop
aad
stos
test
xchg
hlt
lret
lahf
fidivs
cmpl
lahf
and
out
jb,pt
imul
pop
popa
push
add
jae
fs
ss
cmc
mov
push
shll
jb
sub
xchg
outsl
ret
cmp
adc
stos
xchg
adc
mov
je
int
mov
add
add
lcall
mov
cmp
jl
inc
dec
nop
jle
decb
mov
dec
sub
sbbl
leave
mov
adc
or
cmpsl
sub
xor
sub
mov
jp
jo
xor
in
or
lcall
ds
or
xor
aad
loopne
dec
cwtl
sahf
adc
fld
and
hlt
cli
or
pop
stos
cltd
call
imul
push
popf
xor
inc
cmp
mov
std
xchg
icebp
cmpsl
add
cmpsl
mov
xchg
adc
sti
mov
push
andl
mov
test
cmp
sarb
es
in
mov
mov
sub
adcl
nop
sbb
popf
repnz
xorb
xor
jmp
mov
stc
sub
mov
movsb
adc
pop
xchg
add
or
push
jl
inc
test
jns
js
inc
test
mov
mov
int
xor
push
sub
pop
add
scas
stc
nop
dec
mov
cmp
sbb
aam
jb
leave
cmp
pop
pop
sub
cltd
mov
lret
loopne
dec
mov
cmpsb
arpl
dec
inc
decl
or
and
xlat
mov
mov
mov
lods
ja
pop
push
scas
push
pop
movsb
add
cmp
pop
movsb
mov
ret
sarb
stc
pop
jnp
popf
inc
cmc
push
or
in
cmp
flds
push
sub
cwtl
repz
inc
jae
sti
xchg
mov
push
cmpsb
jne
push
sub
fucomp
imull
sub
mov
scas
mov
dec
or
xor
popa
inc
pop
sbb
mov
xor
nop
daa
jp
test
fwait
scas
scas
lds
test
lret
insb
pop
outsb
sahf
in
adc
push
das
dec
and
lret
ja
cmc
ss
cmc
push
mov
lret
in
out
negl
mov
inc
sbb
aad
mov
dec
jne
sbb
mov
xchg
xchg
arpl
repz
mov
stc
lds
in
cmp
xchg
fs
add
cmp
dec
and
cmp
cmp
loopne
xchg
xchg
scas
fidivs
push
jmp
dec
je
mov
lods
and
add
jmp
add
sub
iret
data16
cmpl
or
fisubs
and
sbb
dec
popf
dec
repz
cmp
jp
lret
cmp
xor
shl
rcr
repnz
mov
xlat
xor
std
or
xor
js
popl
aam
in
adc
xor
out
imulb
jecxz
js
arpl
push
or
dec
add
jb
adc
push
pop
das
pop
scas
xor
loopne
sbb
push
imul
repz
icebp
push
cmc
out
negb
ja
pop
add
cmc
paddsw
push
fsubs
stc
sbbl
xchg
push
cmp
or
aam
cmp
jae
mov
movswl
xchg
sub
insl
jnp
outsl
scas
ret
mov
xlat
mov
or
push
mov
js
dec
fsubl
or
lahf
sbb
add
scas
sub
in
mov
ret
aad
add
xor
adc
sarl
nop
xchg
cmc
hlt
pop
push
rcrl
cmpb
sti
negb
mov
push
xchg
test
das
mov
fsubs
test
dec
add
dec
jmp
out
nop
insl
add
cmpsl
push
and
cmc
pop
mov
push
adc
sub
jle
jo
xlat
pop
addr16
mov
mov
sbb
cmp
push
outsb
sub
mov
hlt
add
or
lcall
movl
cli
or
mov
repnz
pop
pop
sarb
test
repnz
sbb
mov
jp
std
push
sbb
or
sub
aaa
std
add
fldl
addl
or
pop
jp
sbb
lret
mov
cmpsb
out
adc
icebp
les
pop
cmp
les
jne
sbb
test
pushf
or
mov
dec
int
jl
xchg
inc
xchg
frstor
fcomip
push
push
pusha
mov
idivb
out
aam
cmp
xor
or
xchg
mov
xchg
out
pop
hlt
loop
data16
imul
jl
ja
add
xchg
push
sub
popf
pop
xor
xchg
outsl
pop
scas
ffree
add
cltd
and
xchg
mov
int3
into
sub
add
cli
popf
sub
iret
dec
fdivr
xchg
push
jno
mov
inc
movsl
or
pop
addr16
fisubrs
shlb
scas
enter
faddp
cltd
mov
je
mov
nop
mov
in
cmpsb
push
jo
mov
cmpsl
xchg
enter
scas
adc
in
xchg
or
es
loopne
fcompl
pop
add
mov
scas
test
insl
jbe
jae
push
and
aaa
ljmp
sbb
pop
es
xchg
xchg
stos
ret
mov
es
and
aam
fsubs
aaa
mov
mov
ret
cmp
aam
lret
hlt
imul
push
je
nop
testb
insb
movsl
cmp
outsl
xchg
sbb
dec
in
movsl
addr16
pop
cmc
insb
add
xorl
cmp
pop
mov
adc
add
andl
out
aam
mov
add
or
xchg
push
xchg
mov
lahf
sti
xor
test
dec
sbb
dec
in
mov
imul
popa
and
jnp
inc
fdivrs
dec
fsubs
outsl
int
dec
orl
lret
mov
shrb
aad
or
loopne
popf
es
push
push
and
cltd
sbb
inc
dec
ss
rcr
out
ficompl
cld
pop
icebp
cs
int3
jmp
enter
xorl
xchg
dec
loop
dec
and
clc
imul
jno
xchg
mov
xchg
and
enter
cmp
xchg
adc
cli
in
push
jns
mov
jp
xor
lock
push
js
iret
cmp
stos
add
pop
fildl
cmpsb
mov
out
push
xchg
pop
xor
push
mov
test
inc
pop
cmp
pop
xor
cmp
sbbl
mov
or
loop
out
jmp
enter
inc
add
xor
sub
sbb
xor
adc
daa
and
out
int
dec
incl
outsb
add
fistl
push
inc
mov
sbb
data16
shl
in
jecxz
fbld
jae
inc
movsb
fcmovnu
pop
or
leave
pusha
cltd
aad
mov
outsb
dec
inc
push
cmpsl
push
sub
cmpsl
or
sub
popf
xor
pop
jecxz
pusha
push
aaa
dec
out
rcl
repz
outsb
pop
mov
outsl
jo
mov
jle
cli
enter
dec
lock
int
cmp
les
push
dec
lods
leave
aaa
xchg
insl
imul
lea
mov
fldt
dec
sbb
pop
outsb
mov
js
mov
mov
mov
mov
fadd
pop
lret
orl
cmp
cmpb
or
push
jl
nop
dec
fcmovnu
pop
mov
into
addr16
xchg
pop
inc
sbb
nop
xor
push
outsb
push
insb
add
or
hlt
aaa
rorb
iret
lods
push
mov
xchg
jp
popa
push
fstps
fisubs
sub
adc
loopne
mov
adc
dec
test
cmc
jecxz
rclb
gs
inc
repnz
out
ds
das
test
jp
jb
int3
fmulp
sub
je
mov
sti
nop
mov
push
pop
cmp
rcll
jp
cmp
iret
cwtl
shll
mull
xchg
dec
scas
enter
and
inc
push
mov
stos
shr
push
mov
jns
jbe
mov
mov
shrl
jo
pop
mov
icebp
pop
mov
je
hlt
xor
push
mov
lahf
fildll
mov
movsl
cmpb
push
jl
sub
mov
enter
push
fistpll
fiaddl
lret
test
ret
push
scas
pop
cltd
or
lods
xchg
mov
iret
daa
outsl
mov
mov
mov
rorl
mov
outsb
icebp
xchg
mov
push
mov
mov
adc
ljmp
push
mov
dec
and
fwait
xchg
inc
inc
lret
cmp
aad
int3
cmp
jle
mov
sti
xchg
lods
shl
jno
push
adc
mov
and
insb
test
xchg
outsb
add
adc
sahf
mov
shlb
leave
sti
mulb
jb
out
shrl
xchg
add
add
sbb
popf
jae
xchg
mov
cmp
movsl
insb
cli
mov
imulb
xchg
pusha
xchg
sub
sub
jns
pop
cmc
test
sbb
int3
leave
jnp
cmp
pextrw
jo
inc
pop
push
rol
movsb
rclb
xor
add
xor
ljmp
add
imull
push
sbb
or
jo
mov
pop
or
lock
rcrb
pusha
into
cltd
fs
out
out
xchg
mov
pop
imul
addb
sub
leave
sbb
mov
mov
adc
data16
cli
iret
icebp
and
mov
pop
xor
jle
loopne
mov
mov
mov
addr16
movsl
orb
dec
mov
mov
pop
xlat
cmp
insl
dec
mov
pusha
lods
loop
pop
adc
adc
imul
enter
jnp
mov
mov
aad
inc
pop
lock
mov
ror
out
call
addl
fwait
jbe
movsb
ja
xchg
and
dec
test
outsl
sbb
mov
push
mov
loop
clc
inc
lods
mov
lret
movsl
mov
popfw
adc
add
adc
add
push
lock
push
popf
lret
push
stos
adc
dec
sub
sbb
lcall
pop
out
icebp
xor
sarb
mov
cmp
bound
pop
fildll
leave
push
shlb
mov
push
loope
test
push
mov
xor
bound
sbb
or
inc
pusha
dec
orb
cwtl
inc
sbbb
push
iret
adcb
adc
add
pop
dec
cltd
or
and
pop
push
sub
inc
mov
push
mov
shrl
paddusw
sub
mov
inc
fldl
into
xor
aaa
jbe
jne
sub
test
inc
and
cld
or
add
cmp
dec
cwtl
pushf
scas
pop
sub
add
adc
push
rclb
and
int
dec
in
out
out
xchg
inc
push
fldl
movsl
inc
jecxz
test
jle
lds
stos
cmp
pop
cmpsb
sbb
jb
mov
xchg
not
aas
jnp
icebp
jp
fisubrs
adc
sbb
or
inc
adc
xchg
inc
movsb
xchg
jb
mov
clc
repz
enter
or
cmp
jmp
inc
mov
ret
and
int3
fisubrs
xchg
mov
mov
into
data16
shr
repz
popf
and
cmp
add
and
sub
lret
mov
jmp
aas
fsts
test
clc
mov
movl
mov
addr16
push
mov
sub
sbb
mov
rol
adc
or
pinsrw
mov
aam
repz
pushf
out
pop
cmp
fs
and
xchg
int
fs
cmp
lds
mov
lock
lret
adc
divl
clc
inc
dec
cwtl
addl
pop
mov
fadd
call
out
rcrb
add
mov
push
lods
lods
cmp
or
xchg
adc
rclb
or
push
and
in
popw
mov
in
test
and
lret
mov
mov
cmp
cmp
les
jae
or
add
out
dec
cmp
mov
mov
andl
scas
enter
jb
xor
xchg
cwtl
repz
dec
mov
mov
mov
fbstp
push
xor
loop
add
lods
addr16
dec
adc
sbb
sahf
xor
mov
push
push
inc
pop
or
jl
sub
inc
cmc
js
cmpsl
jecxz
negl
fcompl
or
push
mov
or
sbb
jge
rorb
mov
into
xor
inc
rclb
lock
adc
jecxz
bound
jecxz
les
mov
or
mov
je
sti
std
and
das
sbb
frstor
mov
pop
push
out
cmc
test
xchg
test
push
movsl
xchg
sub
inc
call
mov
ljmp
leave
lods
mov
add
push
inc
add
push
daa
mov
xchg
fnstenv
ljmp
test
ror
das
lcall
push
and
add
test
xchg
and
push
aam
mov
push
in
sbb
inc
je
mov
jb
ds
fmul
push
stos
lds
in
cmp
adc
stos
inc
das
fs
inc
sbb
leave
mov
cmp
in
scas
loopne
fnstcw
push
pop
jmp
xchg
jb
inc
lock
sub
movsb
cmp
test
outsl
stos
inc
enter
mov
dec
pop
jbe
pop
cmp
mov
lods
call
or
push
sbb
xor
lods
cmpl
or
sbb
mov
or
repnz
mov
arpl
fidivl
ljmp
jne,pn
cmpsl
dec
sbb
testb
jg
mov
lods
inc
out
jle
int
fidivrl
add
int
jo
push
lret
jo
jmp
add
xlat
data16
adc
mov
jb
ret
pop
movsb
cmp
jae
ret
sub
dec
dec
loope
outsb
inc
insb
xchg
mov
xor
imul
sbb
fldpi
push
or
arpl
fld1
aam
dec
cmp
dec
sub
sahf
mov
sarb
or
out
mov
mov
lret
popa
rclb
call
sub
iret
jecxz
in
cmpsl
or
add
pusha
xrelease
adcb
and
push
lock
push
daa
xchg
xor
mov
stc
call
jnp
mov
xchg
cs
insl
out
pushl
aaa
jge
add
enter
jmp
test
mov
imul
int3
test
push
lock
pop
cmp
outsb
scas
test
loop
lcall
cli
int
sti
icebp
out
and
sti
cmpsb
mov
dec
scas
xchg
add
div
dec
pop
pop
mov
cltd
jne
mov
aaa
pop
fwait
xor
out
cmp
fidivl
mov
cmp
lret
and
lods
inc
mov
loope,pt
sarb
lret
sar
stc
inc
sub
sbb
dec
pop
xlat
mov
sub
ja
aad
push
or
mov
dec
add
cwtl
inc
cli
or
stos
imul
lcall
in
das
mov
test
sub
ja
dec
pop
inc
sbb
xor
xorl
pop
cltd
scas
mov
cwtl
jnp
lods
mov
xor
jmp
mov
sub
cmpsb
jp
pop
push
stc
mov
cmpsl
aas
or
movsb
push
repnz
push
mov
mov
arpl
subb
lret
int3
int
lcall
pop
aaa
cmc
ljmp
bound
pop
mov
jmp
sub
mov
pop
insb
sbb
int
mov
hlt
js
andb
loop
outsl
out
stos
mov
test
jnp
xor
ljmp
mov
jb
test
loopne
movlps
or
and
fsts
das
adc
cs
pop
cmp
call
and
sbb
mov
dec
movsb
mov
pop
mov
out
mov
pushf
clc
dec
cmpsl
stc
fldenv
pop
lds
push
jl
jge
cmc
jns
cmpb
aad
push
xchg
sub
add
dec
hlt
mov
lds
xchg
sub
xor
test
sub
dec
sbb
addl
in
movsl
xchg
adc
dec
imull
add
xchg
test
push
cmp
dec
inc
lea
xor
scas
insb
sub
mov
repz
sbb
adc
adc
ficomps
icebp
jo
cmpsb
test
aad
mov
pop
shrb
push
lahf
lods
popa
ficoms
adc
data16
inc
push
sbb
jmp
jp
je
xchg
cmpsl
int
pusha
test
and
mov
cmpl
addr16
stos
sbb
daa
ret
xor
xlat
outsb
cmpsl
clc
in
sbb
or
js
ret
inc
pop
dec
jp
ds
dec
popl
imul
and
push
sub
inc
addl
aaa
sbb
and
mov
dec
and
repz
jle
dec
xlat
test
cmpsb
pusha
stos
mov
push
mov
mov
sbb
cmp
cmpsb
rclb
and
mov
in
test
rcrb
lahf
les
jns
aam
cld
inc
sbb
rolb
cli
jge
sub
mov
imul
pop
lret
cmp
mov
loope
pop
cmp
jb
pop
bndstx
pushf
dec
in
daa
cs
fld
cs
jae
test
push
cmc
and
icebp
dec
in
sti
dec
add
or
cs
sub
adc
jnp
push
sub
lods
xor
cmp
jmp
das
test
adc
int
ftst
mov
int3
pop
push
sbb
shrb
lea
mov
xlat
pop
xor
sub
add
cmpsb
std
xchg
inc
or
lods
lahf
inc
fxch
sbb
in
inc
clc
jge
fcomi
and
bound
jl
lds
hlt
leave
in
push
icebp
dec
xchg
in
test
or
cmp
jnp
or
lea
mov
fistps
jno
mov
les
stos
fs
jbe
xchg
frstor
out
lods
in
or
inc
push
in
je
mov
push
or
mov
push
fidivl
call
clc
cmp
xchg
or
mov
jp
scas
and
cwtl
insl
or
mov
sub
movl
jmp
in
movsb
pop
and
mov
pop
lret
dec
hlt
gs
pop
lret
push
out
mov
lea
inc
lock
outsl
push
dec
loope,pn
jecxz
inc
std
rorl
lahf
adc
fldpi
mov
inc
test
xchg
subl
js
shrb
scas
int3
pop
push
mov
ret
adc
iret
enter
fdivr
inc
pushf
mov
mov
inc
mov
aaa
jae
adc
pusha
pop
pop
lock
and
pop
fldcw
mov
mov
xchg
push
sub
out
movsl
ret
mov
pop
cld
mov
xlat
stc
xchg
and
imull
lds
sbbl
adc
sarl
mov
jge
test
push
xchg
adc
or
xor
mov
lds
addr16
aam
cmc
or
mov
xchg
scas
dec
adc
inc
int3
gs
pop
data16
add
push
mov
sbb
sbb
mov
fwait
pop
insl
ja
mov
mov
sahf
inc
jno
jbe
push
in
shll
dec
fucomip
dec
sub
loop
push
cmpl
lock
add
loope
int3
inc
xlat
push
inc
popf
int
or
loope
fsubs
sarl
jle
popf
or
popa
sub
mov
imul
jecxz
cmp
mov
push
push
push
cmp
rclb
jne
test
pop
insl
fwait
or
and
mov
ja
pop
shrl
into
sub
out
sbb
cmp
sub
hlt
adc
popa
mov
jno
mov
clc
xor
negl
scas
pop
pop
jbe
adc
ja
jg
push
scas
and
lods
xor
or
sbb
jnp
jns
sub
lret
adc
cli
sub
or
gs
and
ljmp
test
adcb
insb
push
jbe
adc
mov
pop
dec
shlb
fs
push
sbb
and
fbld
loop
mov
icebp
fst
cmc
push
jecxz
popf
inc
testl
mov
mov
orl
inc
imul
xor
lcall
icebp
lds
push
mov
push
mov
mov
xor
cmp
dec
bound
rorl
pop
or
push
mov
dec
fcmovb
neg
cwtl
push
fldt
sbb
cmc
jno
dec
xchg
sub
pop
mul
pop
or
jmp
andl
mov
cmp
movsb
insl
adc
stos
jo
test
mov
pop
mov
add
mov
mov
push
jmp
push
mov
inc
loop
loope
rcl
push
mov
and
cltd
inc
clc
pop
and
xchg
stos
jle
arpl
mov
popa
fwait
cmp
repnz
test
aas
adc
xor
xor
mov
pop
fists
xlat
insb
mov
pusha
repz
in
cmpl
shrl
pop
push
pusha
js
stos
test
fistpll
fcompl
fnsave
in
xor
sub
cmpps
xlat
inc
jecxz
inc
adc
mov
popa
mov
jmp
push
loopne
pop
push
ljmp
iret
push
scas
fidivrl
or
mov
cli
or
addl
mov
adc
mov
mov
jnp
pushf
outsl
mov
maskmovq
imull
inc
lea
cmp
dec
cmp
aad
and
ret
sar
icebp
mov
mov
inc
cmpsb
mov
jmp
mov
jle
leave
xchg
idiv
iret
ljmp
xlat
fadds
or
mov
xor
dec
mov
dec
cmp
xor
dec
fucomi
jl
mov
pop
insl
lcall
or
movsb
mov
pop
cwtl
pop
adc
mov
js
push
fwait
mov
cwtl
mov
in
sbb
push
out
sahf
movsb
std
pop
lahf
xor
sbb
and
dec
test
pop
into
adc
sbb
push
mov
inc
xlat
add
mov
xor
negl
push
sbb
clc
outsl
mov
sbb
movsb
inc
outsb
popf
xor
outsb
lret
es
mov
scas
xchg
or
mov
fst
fstpt
mov
jae
add
jne
cmpsl
push
cmp
xlat
mov
pop
xchg
mov
mov
scas
adc
adcb
mov
test
inc
loopne
pushf
jecxz
mov
stos
cwtl
jecxz
outsb
xor
jmp
cmc
dec
xchg
test
xchg
push
cmp
mov
cli
mov
push
out
pop
xchg
js
mov
jl
stc
fwait
or
lret
mov
dec
hlt
inc
push
inc
mov
fcmovnu
ljmp
mov
pusha
shlb
cmp
jle
dec
mov
outsb
lcall
mov
mov
fnstenv
adc
iret
cwtl
xor
inc
out
mov
insb
jmp
fnsave
cli
leave
pop
adc
in
sbb
mov
pop
aaa
arpl
ficoms
and
xlat
and
jb
nop
dec
loop
fdivrp
mov
mov
inc
xor
xchg
add
ljmp
idivb
and
push
dec
data16
into
arpl
jge
call
adc
jo
jl
lock
mov
out
lock
je
loopne
jnp
gs
mov
cmp
mov
movsl
mov
cmpsb
sbb
fld
addr16
mov
inc
xlat
stos
rclb
insb
test
lock
push
jmp
loope
dec
pusha
xchg
inc
fld
int3
in
xchg
sub
fldenv
mov
pop
jp
fcomps
dec
and
mov
cmpsl
mov
leave
call
into
lret
pusha
xchg
clc
test
mov
imul
fcmovu
out
or
sub
mov
pushf
stos
call
ljmp
mov
add
lcall
pusha
test
in
push
jg
loop
mov
push
mov
shll
into
in
out
ret
pop
or
xor
iret
sbb
lahf
cmp
pusha
cld
dec
loopne
cwtl
mov
cmpsl
pushf
in
nop
repnz
mov
mov
dec
aas
scas
scas
movsb
fbld
arpl
lds
test
outsl
in
mov
nop
add
cld
dec
xor
les
dec
lahf
mov
pop
pop
dec
lcall
scas
or
je
int
inc
pop
out
mov
adc
repz
or
pop
xchg
das
ljmp
push
push
adc
js
sahf
add
xor
or
popa
pop
in
push
inc
lcall
nop
dec
mov
ret
pushf
adcl
ja
mov
mov
xor
pop
adc
adc
mov
popa
mov
dec
mov
mov
shll
lds
shrb
adc
insb
clc
mov
imul
seta
loop
add
sub
xchg
outsb
sub
inc
stos
outsl
lret
scas
mov
sbb
xor
insb
cmp
rcll
mov
mov
ds
lahf
mov
add
sub
pop
and
lds
adc
lea
xor
out
inc
push
pusha
testl
push
xchg
nop
adc
mov
jo
ret
or
dec
in
js
fld
fcomi
or
stos
jmp
inc
dec
stos
shrb
scas
inc
jne
enterw
add
lea
insb
stos
mov
mov
add
jecxz
out
out
mov
mov
outsb
xor
mov
mov
jbe
jnp
cli
inc
adc
jae
mov
movsl
mov
out
xchg
push
loope
lcall
cmpsl
cli
test
mov
inc
out
fs
mov
in
mov
cmpsl
sub
cmpsl
mov
xchg
jg
inc
testb
ror
xor
leave
push
cwtl
add
fcom
cmpsb
xchg
or
mov
repz
loope
xchg
push
xor
movsl
push
push
dec
js
adc
iret
pop
xor
pop
shlb
leave
mov
or
movsl
int3
mov
adc
sub
mov
and
movsb
arpl
loop
notb
stc
aad
sti
xor
cs
jp
pop
xor
clc
jbe
xchg
and
sti
icebp
adc
xor
mov
outsl
into
cld
cmp
out
push
lea
mov
movsl
out
int3
popf
xchg
mov
xchg
aaa
stos
jbe
cmp
pop
lahf
ret
repnz
xchg
mov
ret
shlb
les
inc
push
daa
loopne
inc
sub
outsl
sbb
aaa
or
push
pop
ja
xchg
les
xor
xchg
and
aas
mov
ret
xchg
cmp
test
outsb
loop
sbb
add
movsl
xchg
stos
pop
fistps
or
cmpb
add
lahf
rcll
and
add
xchg
pop
fimuls
mov
pusha
dec
mov
xchg
pop
sub
mov
xchg
adc
xchg
data16
xchg
fiadds
insl
sti
and
sar
inc
pusha
setae
push
sahf
ret
sahf
mov
dec
mov
xchg
inc
scas
mov
push
stos
inc
test
out
and
sbbl
sbb
popa
or
mov
jo
jge
into
mov
shlb
cmpsl
inc
pop
mov
cmp
jecxz
sub
mov
mov
xor
xor
jg
push
and
mov
adc
sbb
and
xchg
daa
jo
xor
aas
test
jbe
or
cs
out
sarb
or
cwtl
mov
xchg
loopne
pop
cmp
dec
out
jae
pop
push
in
scas
xchg
stos
cmpsl
pop
and
adc
lea
jb
jmp
stc
addl
adc
adc
inc
jg
insb
jae
xchg
insl
cmc
mov
xchg
add
pop
pop
sbbl
mov
mov
and
test
mov
repz
pop
dec
aaa
ljmp
mov
push
movsl
dec
pushf
adc
bound
xchg
test
loopne
pop
adc
das
scas
enter
push
jne
fwait
ret
dec
and
jbe
loope
xor
roll
mov
cwtl
mov
arpl
lods
call
pop
loope
lret
jnp
cli
popf
movl
push
icebp
push
and
lods
fidivs
mov
ja
and
and
fmull
fsubrp
xchg
mov
test
jp
adc
sub
xchg
cmc
fnstenv
decb
sbb
in
and
inc
loopne
fdivrs
adc
xor
movsb
mov
add
sub
inc
loope
pop
mov
sbb
loop
xchg
or
cmp
jle
out
pop
testl
mov
cs
nop
sub
inc
xor
enter
popf
cmp
and
add
popw
leave
testl
mov
jecxz
push
add
outsb
jb
js
pusha
and
jo
sarb
idivl
add
dec
test
mov
pcmpgtd
mov
cltd
std
push
cmpsb
cs
mov
pushf
sub
arpl
popa
jecxz
scas
push
push
push
inc
cmp
in
adc
decb
pop
insl
add
jno
out
xchg
jmp
shlb
cwtl
nop
xchg
or
add
cmp
repnz
aam
loop
xor
jo
int
pop
sbb
mov
stc
arpl
push
call
rcll
jnp
mov
ret
pop
mulb
dec
xorl
push
mov
pop
add
subl
loope
mov
xor
xor
addr16
bound
mov
movb
fs
lock
mov
shrb
dec
xchg
clc
add
arpl
inc
fwait
enter
repnz
sbb
scas
mov
cmpb
sub
lcall
cltd
and
stos
or
lock
jecxz
movsb
pushf
and
xchg
push
shl
loopne
cmc
xchg
pop
in
or
add
jecxz
stos
int
or
jle
inc
stos
sbb
xchg
add
bound
mov
add
jb
stc
mov
inc
rcll
mov
inc
mov
pop
inc
mov
in
lock
adc
dec
shll
fcmovb
fdivp
mov
jl
pop
loope
mov
call
or
sbb
add
leave
xor
xor
inc
push
and
test
dec
cli
cmpl
xchg
adc
mov
adc
adc
and
int
stc
loopne
test
scas
jmp
incb
loope
fistpl
jp
lret
cld
xchg
mov
test
sbb
add
jns
mov
imul
adc
xor
or
jns
pop
lea
imul
push
jb
push
jae
cmp
inc
fwait
xor
mov
ljmp
sbb
xchg
sbb
xchg
or
lds
mov
in
mov
mov
ljmp
push
xchg
mov
cltd
jmp
mov
lret
push
dec
inc
pop
jge
imul
into
jge
xlat
loop
jno
jg
mov
push
push
mov
xchg
arpl
leave
test
mov
insb
shrl
out
lret
push
mov
mov
test
pop
imul
pop
ffree
jg
test
jg
adc
or
mov
mov
shrl
adc
inc
and
rol
std
ds
fsubrs
iret
mov
sub
sub
pop
push
xor
push
out
jbe
jnp
sub
cmc
push
jns
vfnmsubps
mov
insb
add
nop
mov
xor
xor
div
lods
mov
fidivl
or
inc
fadds
mov
outsb
xchg
repz
clc
adc
mov
cmpb
out
mov
sub
insl
push
or
dec
mov
lret
leave
sbb
fmul
cmpsb
lds
push
shrl
mov
popa
push
roll
pop
push
shll
add
test
and
jl
lcall
adc
popa
movsb
jp
sbb
out
jns
jo
adc
ret
in
stos
les
lret
push
outsl
int
fbld
decb
mov
daa
push
aam
nop
push
pusha
or
xchg
jge
dec
mov
xchg
jp
ret
jg
fidivrl
mov
mov
fistpl
cmp
or
pop
sti
mov
shrb
movsb
ja
popf
xchg
arpl
cs
rol
in
ss
xchg
or
xor
jmp
jmp
mov
lock
stc
xchg
add
into
enter
xor
shlb
mov
lods
inc
sbb
xchg
pop
mov
insl
xor
fwait
jbe
mov
leave
dec
pop
jecxz
or
lcall
cmp
or
jmp
sub
xor
push
fs
gs
push
loopne
negb
adc
pop
and
push
xlat
out
mov
ljmp
out
cmp
test
sub
in
out
inc
out
xchg
adc
cs
iret
data16
out
inc
imul
int
leave
pusha
push
pushl
ljmp
sbb
jp
mov
adc
add
arpl
push
subl
jo
repz
inc
xlat
dec
mov
mov
and
push
mov
xchg
cmc
imul
dec
fs
xor
sbb
enter
mov
mov
add
lods
xor
dec
scas
mov
test
mov
in
aaa
jg
mov
inc
jle
or
test
iret
xor
adc
xor
push
ficoml
int3
arpl
stos
push
jae
js
xchg
mov
inc
inc
jbe
popa
xor
clc
popl
aad
fld
jb
mov
aaa
inc
xchg
repnz
sbb
out
xor
cld
adc
xor
pop
out
jbe
sub
loop
aaa
clc
cli
xchg
sub
and
fs
push
data16
fs
out
ficompl
gs
xor
xor
movsl
push
int
pushf
ret
push
seta
popa
xchg
sub
xchg
push
test
inc
call
fsts
mov
arpl
arpl
mov
into
mov
mov
cmp
push
push
adc
xlat
cmp
and
arpl
xchg
xchg
out
inc
jecxz
imul
mov
and
je
cmp
cmp
rclb
test
xchg
xor
rorl
pushf
pop
xor
or
xchg
ljmp
and
mov
sub
lds
ret
imul
mov
fucomp
lret
loop
push
add
sub
inc
adc
jns
cmp
icebp
lret
mov
mov
pop
mov
inc
out
lret
int3
xor
push
or
lea
scas
xor
mov
aaa
pop
mov
pop
sub
fdivl
cmp
jl
gs
out
lcall
imul
movsb
aas
movsl
popa
mov
fmuls
xchg
iret
or
push
cmp
add
xor
xor
and
cmp
loope
test
call
add
and
add
in
dec
and
mov
out
aad
std
inc
fnsave
imul
pop
xchg
xchg
dec
jbe
in
fisttpll
or
sub
psubsb
in
push
cmp
imul
mov
shrl
in
mov
pop
mov
mov
shl
aas
mov
add
frstor
ror
sbb
fs
sub
enter
aam
pop
cmpsl
out
sar
pop
loopnew
and
inc
ljmp
sbb
inc
pusha
adc
iret
jecxz
xor
int3
mov
addb
mov
rcrl
jb
dec
into
nop
xchg
jns
in
nop
notl
sbb
sub
inc
and
pop
scas
dec
scas
ret
jno
sub
push
or
inc
pop
jb
or
ds
jp
leave
ret
sub
mov
pop
ss
out
mov
or
sub
jno
cs
fildl
add
out
jb
mov
in
xlat
sbbl
push
jne
xor
add
pushf
lea
mov
adc
xchg
xchg
cs
cmp
xchg
cmpsl
xor
roll
dec
loop
ss
jecxz
in
lock
test
fwait
and
push
cli
les
jl
popa
xor
add
mov
movsb
cltd
pop
cmp
jns
or
and
imul
pop
mov
in
ret
jbe
or
mov
or
dec
lods
aaa
int3
lret
jne
cmpl
xchg
clc
sar
leave
shl
lret
and
adc
push
mov
adc
ret
rcr
push
ss
out
outsb
loop
in
jp
stc
mov
or
pop
call
pop
fdivp
cmpsb
seta
mov
mov
pop
sahf
into
add
mov
shlb
mov
inc
aaa
enter
xor
leave
or
xor
je
repz
xchg
xchg
mov
cmp
xor
mov
lds
rcl
hlt
lea
or
xlat
and
cmp
mov
rcr
stos
js
in
jae
in
jg
orl
jge
push
mov
xor
data16
stos
sub
mov
int
hlt
xchg
es
push
pop
xchg
dec
out
jno
scas
pop
jge
scas
pop
jl
sbbb
addl
sbb
mov
or
int3
mov
dec
hlt
push
pop
cmp
cmp
dec
pop
inc
xor
mov
xor
inc
shlb
push
push
push
test
xor
das
fsubs
sbb
rcrb
insb
dec
lcall
pop
sbb
push
or
ja
pop
dec
fsubr
dec
sub
mov
popa
sbb
inc
dec
xchg
sub
or
aad
dec
repnz
sub
out
mov
dec
insb
inc
lret
daa
shlb
pushf
stos
in
popf
cmp
mov
aaa
cmpsb
inc
pop
aaa
shll
int3
and
pop
cltd
cs
mov
inc
lea
shl
data16
rcrb
rcl
push
sub
or
sub
push
cs
in
lock
mov
cli
cmpb
jecxz
stc
inc
push
xor
lds
sub
xchg
cli
lock
test
xchg
insl
in
adc
stos
movsl
les
xor
fnsave
mov
test
mov
mov
jl,pt
pushl
roll
cmp
mov
mov
popf
hlt
dec
es
pop
dec
pop
scas
shrl
test
int
cmp
cli
lret
fdivp
dec
cmp
cli
adc
imul
push
dec
sbb
mov
rclb
imul
cld
sbb
shl
add
xchg
add
mov
addr16
cmpb
and
dec
repnz
push
cmc
ja
loopne
pop
sbb
dec
movsl
test
xor
or
repnz
fnsave
lcall
andb
pop
loop
jbe
jle
xor
jge
fldt
and
jae
mov
mov
mov
dec
sti
dec
pop
xchg
ljmp
insb
sbb
in
nop
imul
int3
fdivrp
add
jp
lcall
add
push
cwtl
test
test
sub
jg
ja
shlb
xchg
or
loope
xchg
dec
dec
call
subb
and
xchg
pop
mov
fsts
call
push
repz
pusha
incl
jmp
int
and
cmp
sub
cmp
jns
or
test
cmc
jmp
nop
mov
cmpl
shl
cmp
iret
sbb
or
mov
xor
outsl
mov
insb
out
mov
aas
push
adc
jp
adc
lret
dec
pop
cs
pop
jmp
push
push
pop
fs
ljmp
pop
xchg
ret
rol
xchg
lds
pop
dec
jecxz
testl
mov
pop
mov
outsl
add
idivl
ds
dec
or
bound
loop
pop
out
pop
cwtl
scas
daa
jmp
js
pusha
das
jae
dec
pop
xor
test
mov
cmp
ds
pop
push
mov
dec
shl
jge
sbb
pop
ja
cltd
sar
loopne
scas
insb
xchg
jae
mov
pop
push
out
jge
and
ret
mov
adc
pop
and
negl
push
das
dec
ss
sub
popa
cmp
jns
sarl
aad
sbb
ficompl
xchg
and
arpl
cmpsl
lahf
hlt
sub
xlat
repz
jg
pop
shlb
sub
push
sub
xlat
mov
push
stc
or
pop
rcll
push
jmp
adc
mov
sub
iret
add
and
cmp
lahf
inc
mov
sbb
jb
mov
lahf
ss
pop
repz
dec
mov
cmp
adc
jne
in
das
mov
mov
frstor
ret
xchg
jg
call
pop
and
pop
orl
out
inc
jnp
add
pop
mov
push
sub
stos
jl
fcompl
fiaddl
aad
add
sub
cmpsl
enter
incl
xchg
mov
or
or
xchg
cmp
pop
sbb
xlat
repnz
xor
bound
xchg
push
test
out
arpl
or
pop
mov
jecxz
xlat
dec
cmp
jl
notl
add
minps
jb
call
mov
cltd
adc
cmp
sarb
xor
setbe
sbb
or
bound
push
sahf
loope
sbb
jmp
xchg
inc
test
mov
push
ss
cmpsb
stc
stos
test
ja
in
mov
sbb
repnz
dec
inc
pusha
jp
sub
inc
adc
mov
fmull
or
test
pushf
lods
mov
mov
fwait
xchg
inc
int
mov
xchg
push
fimuls
scas
pop
and
cld
xchg
cmc
inc
mov
jbe
aas
test
stc
push
scas
jp
shrb
into
pushf
add
test
and
push
lods
lret
pop
movsw
ret
add
cmp
aas
rcl
sbb
mov
mov
ds
pop
sub
cli
fdivrs
dec
push
add
sbb
mov
cmc
clc
jnp
cmpsb
lods
sbb
pop
dec
xlat
orb
dec
lock
stos
mov
mov
xor
push
mov
adc
mov
es
xchg
stos
inc
fwait
dec
int3
push
sti
std
insb
and
int3
ret
and
aaa
push
fwait
gs
dec
inc
adc
into
jmp
es
insl
inc
fdiv
cmp
loopne
add
js
out
xor
xchg
jmp
popf
jmp
out
dec
loope
aad
mov
and
adc
sbbb
lret
rol
cltd
mov
fildl
mov
or
mov
xor
dec
push
movsb
jo
sbb
les
pop
dec
jecxz
in
or
add
shlb
adc
and
mov
xchg
stos
es
sub
sub
icebp
fsub
mov
cs
enter
jns
std
push
push
das
jl
push
mov
push
ficomps
pusha
mov
adc
mov
mov
xorl
lret
sti
mov
xchg
sub
xor
dec
cmpsl
dec
in
jmp
lds
dec
sbb
ret
xchg
fidivrs
dec
xor
sbb
mov
scas
add
loope
imul
jo
jb
jge
dec
scas
and
mov
int
lds
adc
pop
js
push
lcall
fsubrs
repz
leave
cltd
push
cmpsl
inc
and
sbb
sbb
and
jb
adc
dec
mov
mov
cmp
xlat
jl
or
jg
push
test
mov
popf
sub
clc
mov
mov
cmpsb
pop
hlt
push
push
pop
add
pushf
jnp
int
dec
dec
sbb
shl
push
add
stc
mov
sub
movsl
inc
loop
mov
js
repz
bound
cld
xor
mov
bound
enter
sub
xchg
lret
jnp
dec
in
jl
das
cwtl
add
or
sbb
lahf
shlb
pop
in
mov
mov
out
lret
cld
adc
js
nop
adc
cmpsb
pop
loop
out
push
sbb
xorl
cmpsl
xchg
xor
movl
pop
xor
sti
adc
and
cmp
lahf
jg
or
loop
imull
out
stos
sbb
and
out
dec
lret
mov
fisubl
shrl
repz
pusha
test
iret
insl
into
repz
inc
scas
ror
adc
aad
add
sbb
inc
mov
xchg
ffree
add
jne
add
out
jnp
mov
adc
xchg
xchg
mov
loop
push
repnz
add
jmpw
pushf
out
rcrb
add
data16
cmp
and
shll
adcb
faddl
test
ljmp
fsubs
inc
pop
out
cmp
cmpsl
ret
xlat
adc
xor
cmp
mull
jle
out
sbb
mov
out
pusha
nop
mov
sub
mov
sbb
test
add
imul
sub
cli
jnp
sbb
nop
xchg
add
repz
clc
lahf
rclb
es
jge
shlb
test
dec
jge
mov
dec
cltd
sbb
dec
loop
mov
jns
fdivr
xchg
push
enter
loope
adc
lcall
dec
loop
or
inc
int3
push
pop
pop
cmc
cmp
lahf
dec
inc
add
ud2
cmp
jecxz
lods
inc
stc
cmp
lods
cmp
mov
sbb
add
out
loop
mov
mov
jge
out
push
arpl
cltd
dec
dec
push
cmc
mov
cmpsb
addb
fnstcw
mov
add
pop
mov
imul
test
adc
outsb
jl
xor
cmp
xchg
out
outsb
out
mov
xorl
lret
sub
data16
xchg
fxch
fcomip
in
test
push
pusha
jecxz
nop
daa
bnd
xor
scas
in
inc
adc
adc
fstpt
and
xchg
dec
test
fs
ja
xchg
fisubs
test
pop
cmc
or
inc
mov
mov
scas
imul
xor
jbe
pop
push
push
addb
cmp
pop
push
addr16
addl
jb
jp
cs
push
and
test
hlt
mov
push
or
bound
in
ja
sbb
adcl
pop
mov
pop
inc
add
sbb
ds
pop
push
xchg
xchg
or
push
fsts
mov
les
add
insb
add
or
mov
lcall
adc
outsb
aad
js
out
sbb
xor
xor
sub
out
pop
adc
jp
mov
push
rclb
lock
mov
cmpsb
cmp
xchg
mov
lret
rcr
push
sub
mov
pop
jle
mov
and
int
movl
inc
cmp
cmc
loopne
out
xchg
mov
push
sub
sub
xor
xchg
xor
out
into
lahf
cs
adc
popf
add
sbb
bnd
lods
xchg
cmc
pushf
add
addb
cmp
pop
repz
pop
sti
jbe
icebp
jp
mov
mov
xor
sahf
call
fdivrp
mov
dec
dec
jecxz
imul
adc
mov
dec
sar
or
mov
jo
or
lahf
mov
adc
imul
cs
jae
sub
sub
dec
inc
mov
mov
mov
push
repz
test
je
insl
push
iret
push
lahf
pop
sub
jp
jnp
jecxz
leave
or
std
es
ret
stos
int3
test
sub
adcl
dec
daa
repnz
and
sbb
cmpsl
ret
dec
shl
dec
push
popa
packssdw
insl
jge
rorb
xchg
mov
hlt
leave
pop
add
xchg
mov
xchg
lods
pop
call
jle
sub
dec
mov
std
cmp
pusha
jmp
xchg
jbe
insl
call
lret
pop
mov
dec
in
cli
movsb
enter
mov
xchg
stc
push
daa
out
test
notl
clc
insb
scas
push
insb
cmp
imul
test
aam
fidivs
das
pop
mov
cmc
dec
pop
push
lods
dec
out
mov
enter
stc
std
adc
decl
pop
pop
icebp
rolb
imul
push
push
aam
or
mov
cmp
popf
and
xor
loope
and
mov
inc
sbb
loopne
in
out
out
add
mov
pop
lret
mov
sbb
rorb
andb
je
jae
add
jbe
xchg
dec
push
bound
int3
lret
jo
aad
adcb
mov
cs
adc
imul
jg
adc
imul
inc
sbb
mov
ror
mov
sub
out
inc
sub
fsubr
das
test
xchg
push
jle
mov
lea
fsubp
push
outsl
or
or
xor
xor
movsl
or
mov
scas
shl
lret
push
cli
xor
adc
out
or
lcall
cmp
imul
xor
sub
ret
adc
push
dec
test
xchg
notl
flds
mov
nop
xlat
aas
push
mov
dec
fstps
mov
popa
nop
pop
outsb
ret
aad
pop
ret
jge
aam
sbb
jle
das
mov
in
xor
xacquire
cmpsl
sbb
add
push
in
add
mov
dec
gs
pushw
jbe
mov
cmp
mov
xchg
sbb
push
cmc
and
cltd
pop
lahf
jl
in
jl
sti
mov
mov
xchg
leave
push
out
jecxz
loopne
pop
add
pushf
xor
xor
sti
pop
shll
cwtl
loope
ret
lcall
idivb
std
pusha
movsb
mov
jp
test
push
adc
jp
aam
dec
inc
xor
add
std
aaa
into
jae
xchg
dec
sbb
or
cwtl
jno
pusha
xor
jne
sbbl
xchg
sbb
cmp
cmp
add
xchg
decb
xor
mov
sub
and
fs
push
push
xchg
jne
xchg
jecxz
fimull
lcall
stos
mov
or
xchg
nop
xchg
add
notl
hlt
cmp
cmp
xchg
sarb
sahf
gs
aad
es
jbe
pop
inc
fbld
lret
pop
jne
jbe
icebp
sbb
xor
ret
pop
and
dec
out
popf
lea
push
lahf
xor
roll
dec
loopne
out
xor
push
cmp
add
push
jne
jb
mov
pushf
inc
push
dec
lods
mov
mov
push
jg
pop
lea
jae
mov
mov
daa
mov
mov
and
cltd
loopne
out
imul
sbb
xor
sbb
iret
cmp
push
int3
fmull
lods
xor
lock
fistps
or
pop
shl
shlb
inc
pop
gs
add
aad
xchg
mov
leave
bound
adc
out
cwtl
int
ret
mov
ret
into
aas
pop
cmp
inc
push
movsb
cmp
aad
enter
push
repnz
jno
pop
inc
sbb
test
lahf
push
pop
pusha
aaa
mov
push
shl
repnz
lahf
xor
xlat
push
and
cmc
inc
xchg
mov
xor
xlat
sub
mov
mov
fiadds
lcall
jmp
and
ficomps
adc
dec
pop
inc
xor
rcl
push
rcll
push
loopne
movb
mov
push
inc
rcll
push
dec
scas
inc
scas
push
jl
mov
inc
push
es
mov
cmp
cmp
aas
in
aam
sub
imul
push
shr
mov
pop
cs
icebp
test
add
xchg
mov
sbb
jg
sbb
push
jno
cwtl
dec
scas
notl
cmp
xchg
sahf
adc
mov
lret
out
and
sarb
out
dec
cltd
pop
jo
push
add
push
sbb
mov
add
cmp
jl
enter
mov
push
pop
sbb
mov
adcl
mov
mov
daa
xlat
mov
outsb
xor
jb
mov
pop
scas
std
jns
push
push
pop
cwtl
loope
orb
jne
sub
cwtl
dec
test
inc
inc
ljmp
cli
aaa
call
adc
add
mov
inc
mov
clc
jae
dec
mov
hlt
lahf
inc
in
sbb
push
repz
push
rdpmc
cmpb
adc
daa
or
sahf
mov
jo
sub
sub
or
xor
out
fldcw
and
jp
pcmpeqw
adc
fdivrl
jmp
or
push
fisubrl
ljmp
push
leave
or
or
das
js
jo
scas
xchg
loope
mov
sbb
inc
bnd
lods
fdivl
rorl
fmulp
aas
cmp
cltd
pop
out
std
mov
xor
repz
scas
mov
cs
pop
mov
fs
imul
sbb
std
mov
inc
notl
inc
push
and
ja
negl
xor
or
push
push
dec
rep
gs
mov
nop
cmp
test
rol
dec
ret
add
cmp
mov
ficoms
xchg
mov
mov
push
cmp
push
add
jno
push
clc
wbinvd
mov
int3
jge
pop
sub
rcrl
in
jg
or
cmc
jge
cmp
inc
inc
in
sbb
int3
loopne
ss
lret
sub
lret
adc
insl
shrl
mov
pop
and
adc
cmp
dec
jne
xchg
pop
aaa
pop
jle
sbb
xchg
pop
stos
lret
ljmp
imul
or
xor
gs
fs
mov
inc
xor
iret
cmp
jmp
ret
dec
add
iret
hlt
push
int
inc
xchg
pop
les
adc
dec
int
inc
fsubl
fistpll
incl
stos
jmp
sbbl
stos
fsubrs
sub
pop
push
gs
lods
pop
jle
or
testb
idiv
dec
fmul
xchg
jmp
imul
bound
add
cmpb
xorb
sub
lods
es
imul
sahf
pop
inc
out
inc
ss
imul
mov
int
dec
rol
imul
push
int
xor
pop
push
test
pop
pop
les
dec
push
mov
stos
lods
mov
sub
aas
push
mov
gs
pushf
test
mov
lcall
xchg
push
sub
shll
sbb
xchg
jns
jle
pop
movsb
cmp
push
scas
mov
mov
arpl
push
ljmp
mov
inc
push
in
and
cmp
leave
icebp
imul
es
push
sahf
pop
xor
stos
cmpsl
jns
add
xchg
lahf
ret
fdivrs
add
push
ljmp
jno
bnd
dec
ficoml
cld
jg
and
cmp
mov
js
add
dec
test
mov
mov
jno
pop
cmp
lret
dec
jne
cld
and
mov
jg
pop
cli
popf
xchg
mov
and
sbb
ss
cmp
test
scas
scas
pop
call
push
movl
ds
out
xchg
mov
cmp
jge
pop
mov
and
xchg
test
lds
imul
stos
or
adc
or
xchg
addb
jl
fimull
sbb
loope
pop
cmc
aam
subb
pop
dec
testb
push
jg
cmp
pop
dec
pop
xor
pop
test
inc
scas
pop
mov
fsubs
pop
jb
mov
cld
add
sbb
xchg
sti
and
jmp
ss
mov
jno
je
std
test
scas
adc
jb
fmulp
sub
jne
js
cmp
mov
cmpsb
in
call
mov
xchg
pop
les
xor
test
fwait
pop
ret
mov
addr16
nop
mov
mov
and
rorl
sti
pop
repnz
fstps
or
call
mov
lret
sbbl
pop
lds
fdivrp
cwtl
icebp
movsl
lcall
xor
inc
mov
nop
test
or
sarb
hlt
mov
push
dec
ljmp
sti
pop
loope
test
je
pop
cmp
jg
or
lcall
xor
ljmp
cmpsb
jae
sub
daa
into
in
pop
lret
push
push
jne
sbb
pop
jo
sbbb
leave
jmp
push
test
mov
icebp
mov
loopne
xchg
add
xor
in
fstl
mov
das
enter
sarl
sub
repz
dec
dec
push
mov
pop
xor
data16
mov
mov
clc
imul
lahf
test
fsubrl
add
jg
ljmp
insl
add
lahf
xchg
nop
popa
push
xchg
js
testb
jge
mov
or
adc
cmp
movsl
outsb
sbb
mov
add
or
outsb
jecxz
lahf
cmp
fistpl
jecxz
cmp
xor
sub
popa
aad
push
mov
or
adc
ljmp
imul
in
dec
jl
shll
cs
xlat
sbb
subb
cmp
inc
mov
push
sti
inc
cwtl
xor
out
mov
arpl
repnz
adc
jecxz
repnz
pop
jno
mov
adc
call
and
repz
gs
outsl
add
js
sub
dec
mov
jp
mov
rcr
das
xorl
xchg
add
aam
push
jmp
xor
or
adc
fisttps
shlb
and
sub
inc
gs
sbb
add
mov
pop
popa
repz
rol
lock
inc
inc
popa
les
lret
dec
mov
cwtl
in
pop
imul
daa
sbb
rcr
mov
xor
bound
ficoml
cmp
bound
out
cmp
divb
push
and
in
decb
xor
insb
cmp
or
out
or
cmp
sub
inc
jae
ljmp
aas
adc
dec
imul
push
pop
call
and
outsb
iret
nop
dec
aad
aad
lret
in
clc
adc
int3
stc
lods
or
cmp
outsb
jg
push
mov
mov
pop
sub
test
mov
loope
mov
out
push
mov
lods
in
cmc
jne
ret
cmc
in
push
loop
push
insb
or
and
sbb
adc
push
mov
aam
movl
mov
jmp
adc
mov
mov
cmp
jb
adcl
daa
mov
sbb
int
xor
aad
test
sbb
int3
xor
mov
mov
xor
adc
dec
push
rcrl
movsl
in
ficoms
test
xchg
and
fistpll
cwtl
bound
subb
mov
xor
iret
int
les
sbb
sbb
fsubrl
push
fs
shll
pop
aad
lret
lds
sbb
ret
mov
scas
mov
fsubl
js
cli
aaa
add
add
pushf
xor
icebp
push
outsb
push
mov
int3
mov
lret
and
inc
and
jb
out
cmp
lahf
jo
mov
rorl
std
inc
data16
jnp
lret
sbb
pushf
fidivrl
mov
or
push
cmpsb
mov
cwtl
gs
pop
cmp
adc
xchg
pop
arpl
out
aaa
jmp
es
xlat
adc
push
test
add
push
cmp
int
and
sbb
push
dec
ljmp
mov
adc
mov
xchg
mov
push
inc
pop
test
sub
sbb
cmp
fidivl
sbb
jp
in
pop
mov
jnp
in
inc
out
mov
push
jmp
ja
test
mov
leave
xchg
inc
loope
ja
xor
mov
imul
mov
jecxz
add
mov
ret
outsb
mov
mov
inc
outsl
inc
sbb
mov
lock
insb
xchg
les
shrl
out
loope
adc
movsl
test
shrl
add
mov
adcb
and
ret
js
mov
notl
inc
pop
add
cs
arpl
lods
xchg
sbb
mov
hlt
pop
lret
bound
mov
ss
push
cmc
cmc
inc
push
jmp
fdivrp
inc
inc
lods
inc
dec
add
fisttpl
or
es
pop
out
aaa
aam
mov
sbb
mov
pop
jecxz
mov
arpl
scas
push
popf
loopne
test
inc
sahf
xor
jae
push
cmc
dec
or
adc
mov
xchg
add
sbb
and
adc
add
int3
xor
jno
xor
mov
call
data16
mov
mov
cwtl
fdivp
or
roll
aaa
out
push
fcmove
repnz
es
test
fstl
jl
adc
jnp
jp
sahf
fidivs
add
ja
popa
icebp
lahf
hlt
imul
leave
cmp
mov
jnp
hlt
lahf
ret
adc
mov
dec
push
aaa
stc
mov
or
xor
pop
push
jle
loop
repnz
call
mov
je
cmp
inc
jno
insb
add
cmp
pop
bound
or
aas
cmp
push
xor
les
sbb
pusha
dec
mov
sbb
or
cmp
xchg
add
mov
inc
orl
out
movsb
mov
das
lret
cli
xchg
jno
dec
jmp
lods
fucomi
orb
or
sbbb
add
pop
cmp
jbe
fistps
adc
inc
ljmp
mov
jnp
jle
add
xchg
cwtl
lods
inc
call
outsl
jns
ds
sarb
mov
repz
lcall
jecxz
pop
fnstenv
sub
jae
adc
js
mov
pop
out
push
loope
inc
imull
pop
cmp
push
mov
movsb
ret
pop
adc
jbe
xor
jnp
mov
add
fcmovne
and
mov
mov
movb
xchg
mov
arpl
out
loop
dec
dec
jmp
out
xchg
pop
cli
in
sti
icebp
fistps
adc
jnp
jb
mov
dec
daa
fdiv
insb
lea
sub
cmp
push
out
cmp
sarl
jp
push
mov
shrl
jae
adc
mov
push
xor
mov
bound
lds
adc
inc
loope
mov
mov
mov
mov
sub
test
or
clc
nop
pop
adc
stos
enter
mov
mov
inc
mov
mov
push
addr16
push
int3
dec
push
fs
sbb
xchg
dec
adc
mov
and
pop
fs
jne
fisubl
sub
das
xchg
lret
stos
sub
insb
and
ss
cmp
loop
add
in
xchg
test
fisubrl
fbld
dec
popf
xor
mov
loop
dec
repz
or
ljmp
stc
mov
or
push
pusha
xchg
out
or
xor
ror
lods
std
dec
scas
push
pop
jnp
cmp
repz
test
push
popf
popaw
imul
clc
push
popf
aad
in
cmp
ds
push
fnstcw
adc
cmpsb
leave
add
xchg
jmp
xchg
fisttps
daa
lcall
cmp
add
dec
xor
xchg
dec
out
push
fisubs
jo
shll
and
leave
leave
push
adc
ljmp
xor
pop
shl
popf
or
into
pop
sahf
stos
pop
fnsave
add
mov
in
add
or
lret
cmpsl
xchg
ljmp
pushf
out
outsb
jge
pop
and
sub
das
jecxz
arpl
arpl
iret
push
fcoml
bound
dec
lahf
mov
cmp
sbb
out
cmpsl
out
cmp
lods
int3
daa
add
dec
pop
inc
pusha
ss
int
int3
iret
fists
push
sti
mov
mov
test
dec
pushf
in
mov
cmc
inc
xor
pusha
push
fbld
enter
int3
mov
adc
and
mov
nop
dec
icebp
xchg
mov
mov
pop
push
shrb
ret
pusha
xor
test
inc
xchg
pop
in
scas
loop
inc
sbb
test
gs
jecxz
icebp
mov
cmpsb
mov
andb
test
mov
rcll
shr
repz
sbb
mov
data16
leave
mov
ficoms
add
xor
popf
rcrl
cmp
nop
inc
in
jb
xchg
int3
mov
pop
dec
cmp
in
xchg
pop
and
imull
nop
lods
ret
xchg
out
repz
mov
and
stc
adc
xor
ret
xorb
sub
repnz
es
lcall
cmc
out
mov
leave
pusha
mov
js
xchg
push
je
xor
jl
mov
sbb
stos
test
xor
and
jl
xchg
arpl
and
rcrb
shlb
sbb
insb
xchg
iret
lcall
popa
lcall
sub
loop
idivb
nop
movsb
jo
loope
fistps
fs
lods
xchg
aas
sub
in
outsl
ficompl
ds
in
repnz
in
or
rolb
sbb
repz
in
mov
dec
icebp
std
xor
les
int
sahf
ja
dec
fstpt
xchg
out
cltd
xchg
or
lret
and
xor
push
push
lods
test
inc
in
or
in
cmp
mov
ja
dec
pop
pop
dec
dec
mov
xchg
pop
cmp
test
jmp
sub
movsb
cmpsb
cmpsl
sub
insl
jp
sbb
mov
xchg
lods
ljmp
mov
aam
data16
dec
push
loop
ja
popf
push
push
cwtl
call
call
xlat
icebp
xchg
push
xor
sub
lcall
in
xchg
or
loope
imul
mov
mov
jo
es
xchg
neg
xor
sti
leave
pop
cmp
lahf
data16
mov
and
ds
rol
xchg
loope
cmp
xor
push
xchg
movsl
dec
mov
push
sub
out
jae
cmp
xor
nop
sbb
jle
nop
xor
inc
aaa
mov
nop
dec
pop
cwtl
icebp
xor
push
push
push
lret
in
pop
push
out
push
shl
jle
adcb
test
xor
lods
cmp
xchg
lea
adc
adc
cmp
xchg
xchg
out
xchg
mov
xor
inc
arpl
push
arpl
mov
fldt
push
add
icebp
mov
shlb
jmp
frstor
mov
pop
lret
mov
cmp
ljmp
stos
fwait
aaa
sarl
jns
ja
arpl
lcall
cmp
les
rclb
cmpsl
fs
fimuls
js
rorl
scas
pop
repz
imul
sbb
mov
cmpsl
mov
out
jecxz
and
nop
and
or
out
mov
jmp
mov
shlb
xchg
adc
popf
jo
out
stos
push
int
int
test
push
ds
mov
dec
fwait
mov
outsl
push
addb
aad
enter
cmpsl
daa
mov
arpl
test
into
andl
adc
push
stc
ljmp
xor
push
xor
inc
inc
dec
movsb
div
movsl
aas
sub
pop
inc
je
ret
push
fsubrs
frstor
sbb
leave
pusha
jle
out
lods
lret
xor
jmp
int3
sbb
into
mov
mov
mov
fistpll
iret
adc
rorl
ret
aaa
int3
dec
push
mov
insl
jmp
pusha
popf
loopne
xor
and
sub
stos
inc
jg
ds
mov
or
je
movsl
pop
dec
cmpb
lods
mov
les
adc
xor
js
cli
sub
lds
ss
and
add
inc
xlat
test
or
xor
out
arpl
mov
cmpsl
jo
addr16
gs
pop
cli
xchg
mov
pop
stos
sbb
stc
cmp
leave
int
cmpb
daa
xchg
cltd
add
imul
sbb
mov
mov
and
lea
cmpsl
ds
lods
jle
imulb
dec
add
jle
out
jns
sbb
push
dec
insb
push
pop
jp
gs
sbb
aaa
repnz
jae
pop
lret
inc
movsb
imulb
push
aaa
inc
mov
jp
sub
pop
cmp
fbld
cmp
pop
dec
dec
loop
add
shl
add
loop
add
xchg
jp
and
mov
inc
jnp
fsubrs
inc
xor
imul
sbb
fidivrl
add
cmpsb
rcl
sub
lret
cmp
gs
movsb
stos
test
and
sahf
notl
inc
jmp
mov
outsl
and
out
imul
adc
mov
out
xor
xor
rcl
or
sbb
add
sub
daa
cmp
inc
jo
fcoml
push
test
fisubs
ret
je
icebp
dec
jl
mov
mov
pop
pop
testb
stc
inc
das
ret
mov
jp
out
rorl
outsb
shlb
gs
das
cmp
in
inc
pushf
add
inc
mov
ret
and
cmp
xchg
or
hlt
sbb
test
mov
push
movsb
cmc
xchg
jae
mov
ja
les
mov
out
ret
pop
in
in
out
sbb
push
dec
cmp
add
cltd
jae
push
mov
lcall
in
movsl
mov
cli
xor
inc
gs
ljmp
push
push
outsb
mov
je
pop
push
test
sti
fwait
std
sti
cli
pusha
and
jmp
repnz
mov
fwait
pop
dec
out
mov
jp
add
mov
inc
out
inc
fwait
jb
inc
mov
into
lahf
pop
or
outsb
iret
sub
inc
scas
mov
or
add
and
add
and
sub
dec
loopne
jns
dec
hlt
aam
clc
cmp
xchg
mov
xchg
jp
sub
popf
fs
sbb
fdivs
sub
adc
pop
cwtl
test
fstpl
int
or
mov
push
pop
loope
adc
leave
sub
and
jnp
pop
lods
rolb
iret
dec
scas
nop
mov
sub
add
or
fwait
imul
or
adcl
outsb
dec
mov
inc
imul
and
idiv
stos
xor
lock
inc
adc
mulb
pop
mov
dec
nop
add
shrl
dec
and
cmpsl
and
inc
in
add
in
pushf
push
pop
scas
push
mov
fs
sub
imul
xchg
outsl
sbbb
mov
popa
out
icebp
mov
je
pop
pop
movsb
xchg
stc
popl
pop
pushf
fldcw
imul
loope
pushf
push
push
and
movl
push
or
xchg
sub
popa
into
out
addl
jmp
and
aas
cmp
insb
dec
or
flds
xchg
pop
mov
insb
xchg
mov
test
sbb
lods
out
or
mov
adc
arpl
dec
jmp
and
call
and
jo
jge
mov
dec
pop
and
jl
add
or
pop
test
and
movsb
fcmove
aad
scas
inc
pop
repnz
aaa
xchg
dec
cmp
fwait
leave
pusha
int
in
lcall
imul
jle
leave
push
fsubr
mov
fidivrs
cmpl
lahf
imul
adc
and
adc
mov
mov
push
push
and
jle
fucomip
jle
lock
push
test
pop
and
sti
dec
pusha
sub
icebp
or
sbb
cmpsb
fsubl
imul
mov
xchg
cmp
mov
loope
adc
dec
cli
mov
std
int
repnz
and
inc
stos
mov
jl
adc
enterw
inc
sub
les
mov
lret
pop
test
mov
sub
fsub
mov
mov
push
scas
inc
add
fadds
sahf
lcall
fdivr
inc
sti
push
fwait
rcr
data16
imul
dec
fisttpl
push
xor
cli
loop
fisubs
out
test
mov
xchg
add
push
and
rcll
inc
pop
mov
xor
bound
aam
mov
pop
mov
shll
and
fbld
sub
pop
push
mov
pusha
xor
pop
or
or
push
pop
pop
jne
mov
cwtl
or
mov
mov
push
jmp
push
mov
lds
mov
iret
pop
shrb
outsb
adc
mov
notb
inc
mov
mulb
lret
and
iret
data16
addr16
push
mov
rcrl
mov
jb
adc
or
adc
and
daa
xchg
sub
push
inc
push
cld
scas
fidivs
inc
push
pop
in
jb
lret
clc
pop
cmp
addr16
shr
sbb
loop
and
pusha
mov
xchg
int
lock
add
test
mov
adc
cmp
lret
aas
les
popf
sbb
lcall
insb
leave
xchg
pop
push
push
cld
xchg
inc
and
clc
in
sbb
jmp
cmpl
out
mov
das
inc
cmp
dec
sbbb
mov
or
divl
push
cmpsl
ret
xchg
cmp
mov
xor
js
repz
pop
and
sub
add
xchg
cmpsl
add
test
push
xor
mov
push
in
dec
xor
mov
push
mulb
push
dec
sub
lcall
call
adc
shll
mov
xor
jo
adc
rorl
cmpsl
cmp
sbb
aaa
push
orl
das
xchg
dec
adc
jecxz
pop
imulb
jne
daa
mov
sub
and
dec
sbb
cmp
paddusb
jno
gs
sahf
cmpsl
mov
aaa
push
or
jb
jae
cwtl
pusha
popa
js
lods
mov
or
dec
jp
and
and
sbbl
mov
pusha
ss
bound
sbb
out
popa
jbe
imul
mov
addr16
xchg
jg
test
out
push
jle
adc
push
dec
or
xchg
bound
dec
push
inc
cld
mov
out
iret
leave
lds
repnz
jmp
cmp
icebp
xor
jmp
test
sub
push
lods
jno
cs
pop
repnz
cmp
movsl
shr
dec
sti
ret
shlb
jg
and
call
cmp
lret
cltd
movsb
add
inc
xchg
jbe
outsb
add
add
mov
dec
push
mov
in
sarl
inc
ficoms
mov
in
inc
fs
stc
aam
cmp
mov
icebp
lcall
xchg
jmp
xchg
ss
sbb
movsb
into
jl
ret
dec
and
fcoml
loope
inc
sub
leave
test
pop
sbbl
sbb
imul
push
imul
jmp
fldt
mov
inc
aaa
mov
xchg
pop
clc
or
cmpsb
mov
sti
imul
sub
fcomps
iret
loope
sub
mov
sbb
ljmp
xor
out
sub
cmp
cmpsl
inc
sub
scas
and
jbe
out
cmpsl
and
mov
jns
fsubrl
jbe
cltd
xor
push
jbe
jg
out
sbb
imul
js
data16
xchg
dec
adcb
cmp
sub
add
sub
roll
outsb
sbb
adc
jbe
push
and
mov
sbb
aam
rcll
movsl
jle
fildl
je
jae
push
pop
xlat
out
mov
push
lcall
roll
mov
shrb
jns
pop
jb
or
mov
loop
dec
shl
dec
xlat
adc
shrb
daa
or
or
lock
dec
push
mov
insb
jb
add
fwait
jo
mov
push
pop
pop
loopne
inc
shr
repz
int3
mov
out
xor
das
xchg
mov
lds
or
sahf
push
test
lret
jl
push
out
mov
mov
test
roll
cwtl
add
dec
xor
out
iret
dec
cwtl
mov
cmc
mov
push
sub
or
pop
movb
imul
cmpb
or
fisubs
push
xchg
stos
xor
mov
lea
bound
imul
insb
into
xor
arpl
xchg
lock
mov
pop
fdivrs
mov
movsb
iret
gs
mov
in
lcall
mov
adc
sub
lea
dec
repz
adc
or
add
repnz
sub
mov
test
mov
jecxz
jno
sub
jecxz
test
push
mov
scas
mov
in
and
push
pop
mov
adc
and
ret
ret
stos
inc
cltd
jge
pop
and
lea
push
test
stos
out
adc
jb
das
and
cli
lret
pop
subb
in
add
xor
jno
mov
test
aaa
stos
testb
inc
movl
mov
push
and
push
inc
or
sbb
dec
dec
in
inc
das
nop
xchg
add
add
stc
or
pop
pop
jle
cmp
push
out
push
and
jne
sub
daa
imul
mov
push
pop
mov
jae
sub
dec
pop
or
dec
cltd
std
in
mov
call
frstor
push
dec
icebp
pop
xchg
pop
subb
out
imul
push
shll
sub
mov
sbb
xor
push
pop
fwait
or
insb
mov
vpminub
cltd
inc
adc
inc
xor
addl
out
dec
pop
and
mov
or
js
sub
mov
jg
lock
leave
aam
iret
xor
or
xor
cmp
into
imul
std
maxps
push
je
roll
nop
push
dec
pop
test
lret
stos
jae
xor
into
xor
out
or
in
fnstenv
dec
pushf
pusha
mov
js
or
pop
out
adc
ret
shrb
inc
mov
cmp
lock
mov
mov
aas
ljmp
loope
push
cmp
and
push
cmp
je
sti
xchg
pop
ss
xchg
scas
sbb
movsl
lds
cmc
cmp
mov
add
fwait
ljmp
push
dec
aaa
add
or
movsl
dec
dec
or
aam
push
cmpsb
les
out
pop
push
les
lds
pop
jnp
pop
out
lahf
push
pop
in
testl
add
jmp
imul
mov
out
and
cmp
mov
imul
pop
pop
pushf
sti
dec
dec
mov
idiv
mov
push
shlb
lcall
sbb
push
leave
pushf
cmp
adc
dec
xchg
sub
push
aam
fld
sub
lret
xchg
adc
out
cmp
ljmp
adcb
fisubrs
ret
pop
adc
inc
int
loope
leave
mov
je
loope
jecxz
sbb
xchg
sub
sub
outsl
js
insb
stos
mov
cltd
xor
nop
jo
sub
or
sub
pop
addr16
xchg
or
pop
rep
push
mov
dec
add
jo
push
xor
cmc
mov
xchg
bound
push
das
sbb
test
ja
shrb
or
test
ret
push
cwtl
test
cs
xchg
rcll
inc
pushf
adc
jbe
add
sbb
jne
rclb
xchg
mov
ds
out
mov
test
shr
stos
push
dec
pushf
lret
sbb
mov
inc
cmp
cmp
sbb
adc
push
sbb
inc
dec
fildl
neg
icebp
mov
dec
test
ret
xor
mov
fldcw
dec
adc
pop
sbb
or
jb
sub
insb
add
push
mov
es
inc
xchg
popa
nop
add
push
mov
aad
in
sbb
lret
pop
add
mov
into
xchg
sub
push
sbb
push
mov
xorl
xor
jo
adc
loop
mov
jb
in
add
dec
js
jbe
std
or
mov
sbb
xchg
repz
mov
lahf
jno
shrl
filds
jnp
push
and
pushf
scas
ret
xlat
imul
cltd
sbb
es
jb
andl
add
nop
cmp
lret
rorb
xlat
jmp
loop
lods
pop
sub
mov
in
lods
xlat
sbb
and
movsl
in
push
adc
sahf
fnstsw
mov
cmp
mov
pop
inc
add
cli
and
shlb
aas
imul
stos
or
jp
leave
sub
cmp
in
push
out
push
sysexit
je
cwtl
pop
std
xchg
cli
sub
mov
rcll
movsb
sub
dec
push
inc
dec
cmpps
pushf
adc
dec
loopne
mov
sbb
inc
fiadds
loope
or
adc
int3
imul
mov
xor
insl
add
jbe
cmp
mov
jg
sbb
or
lcall
mov
bound
das
and
mov
sub
fwait
iret
pop
test
xchg
test
xor
aas
ss
cs
xor
int3
loop
jp
js
fs
xor
mov
dec
loop
pop
out
cli
cmp
cmp
lcall
scas
test
fsubrl
adc
mov
push
imul
and
jecxz
cmpsb
cmp
inc
xchg
les
sbb
sbb
jns
add
mov
cmp
iret
test
sbb
addl
push
sbb
add
daa
xchg
lock
dec
push
lahf
ss
js
and
nop
incb
sub
dec
dec
sbb
fmull
jle
mov
sub
ja
pusha
imul
cwtl
or
ss
ljmp
push
push
enter
sti
push
and
or
xor
sbbb
adc
test
and
decl
pop
mov
aas
xor
push
in
pop
in
cmp
mov
fs
sub
jg
mov
fcmovu
fisubl
sub
sub
sbb
xor
std
mov
insb
jg
scas
outsl
adc
mov
mov
stos
xchg
mov
jno
mov
popa
pushf
xor
addr16
fidivrl
std
dec
out
dec
lods
shl
loopne
jo
sub
mov
mov
lock
enter
lret
outsb
cs
rcr
fdivl
jl
stos
mov
int
push
sub
pop
push
fucomip
inc
test
push
pop
idivb
fmul
lret
mov
inc
aad
and
sbb
into
jl
xchg
hlt
mov
lret
and
xlat
test
pop
in
cltd
ret
pop
cmp
ja
ljmp
ss
std
jl
or
adc
clc
mov
je
lahf
cltd
stos
add
insl
add
and
and
mov
adc
lds
push
and
jns
cwtl
in
nop
mov
lods
ret
hlt
xor
or
cmp
imul
test
cwtl
das
sub
xor
mov
test
jge
insl
pop
xor
pop
xchg
cmp
aaa
out
push
call
pop
mov
add
sahf
aaa
jbe
call
lret
stos
adc
subl
inc
fsubrl
idivl
pop
arpl
push
notl
lods
lea
aas
aam
sub
adc
arpl
in
test
sbb
call
pop
and
cltd
and
jmp
lods
inc
scas
ds
pop
mov
jb
cli
and
mov
cmpsl
pop
out
pop
js
pop
pop
icebp
inc
popa
shrl
lds
insl
sbb
pop
daa
dec
mov
push
pop
out
or
cmp
add
sbb
shll
adc
fwait
add
sahf
xchg
movsl
sbb
aas
ds
bound
jp
test
add
lret
sbb
jge
dec
add
xchg
cmp
pop
pop
in
mov
lock
jo
fldenv
cmc
mov
pop
pop
dec
mov
mov
cmp
and
fcomi
mov
and
jge
lds
das
mov
mov
adc
mov
test
js
out
inc
fldenv
add
mov
add
dec
sarl
test
add
daa
sarl
dec
in
rcrl
bound
push
ja
aad
mov
and
and
add
add
adc
int3
xlat
je
mov
dec
dec
gs
sub
loop
sub
xchg
or
mov
enter
mov
push
inc
nop
cmp
sbb
push
fwait
rcrb
mov
arpl
int3
sbb
test
dec
repz
ja
gs
push
test
ficomps
xchg
add
das
lods
cmp
push
adc
in
je
filds
test
inc
loopne
sbb
jp
aaa
lcall
cwtl
sub
mov
popf
sub
inc
push
mov
out
pop
dec
in
inc
mov
add
mov
push
mov
push
imulb
loopne
xlat
aad
test
cmpsb
outsb
jl
icebp
bound
out
lret
punpcklwd
sub
idivb
sub
test
icebp
pushf
inc
stos
mov
test
test
xchg
mov
jmp
mov
movsl
sbb
mov
dec
pop
mov
mov
and
mov
cmp
sti
add
or
lcall
call
and
push
fisubs
jbe
mov
xchg
inc
std
or
xor
xchg
loop
frstor
pop
dec
dec
mov
add
sub
lods
mov
xorb
xchg
sahf
mov
ret
add
in
aaa
into
pop
adc
push
push
dec
test
cmpsb
cmp
addr16
cmp
xor
xchg
ret
fsubrs
std
push
test
jno
popf
push
dec
dec
jle
scas
fwait
cmp
mov
adc
adc
sub
cmp
and
gs
adc
daa
fs
pop
jo
int
jp
loope
add
lods
ret
xlat
push
outsb
jae
push
int
out
nop
out
mov
sbb
ja
bnd
enter
push
mov
popf
stc
lret
enter
and
fs
mov
push
mov
jecxz
lock
dec
les
in
xchg
sbb
leave
push
in
outsl
pop
iret
enter
and
mov
pusha
aaa
clc
inc
sbb
movsl
or
inc
ds
fwait
scas
test
pop
mov
filds
insl
popa
js
iret
shr
icebp
movsl
or
jmp
jbe
and
add
mov
xor
jmp
aad
repz
mov
dec
or
cmc
mov
or
fwait
es
and
jmp
and
inc
pop
push
repz
cwtl
mov
xor
xor
pop
insl
push
popa
inc
push
int
or
xor
rcr
lock
cltd
xor
rcl
std
in
mov
rcr
fnstcw
add
int3
pushf
hlt
call
outsl
inc
test
pop
cmp
mov
stos
xlat
sbbl
jb
pop
mov
mov
cmp
add
out
or
pop
loop
movb
pop
add
leave
inc
sbb
xchg
inc
push
sbbb
pop
ljmp
xor
adcl
jo
imul
cmpsl
jne
movsb
cld
push
and
mov
outsb
inc
sbb
cmp
mov
fwait
shl
and
mov
sub
cmpsl
das
shlb
xor
xchg
cs
dec
dec
iret
inc
rorb
jno
test
jmp
dec
mov
cmpsl
add
mov
clc
iret
mov
or
fcoms
mov
jne
mov
mov
add
daa
or
lods
imul
sbb
hlt
sub
inc
cs
pop
insb
mov
ss
xor
push
mov
push
fsts
ds
mov
xor
sub
outsl
roll
pop
lock
xor
dec
mov
lcall
out
out
ljmp
stos
xchg
pushf
lods
mov
xor
into
push
adc
lret
or
jno
and
add
roll
push
or
in
mov
jne
movsl
imul
xchg
sti
sar
stos
in
das
sbb
add
dec
dec
and
roll
sbb
sub
mov
mov
in
cmp
dec
adc
in
rorb
pop
mov
xchg
mov
repz
inc
ja
mov
scas
push
in
cmc
adc
gs
imulb
cs
js
pop
in
imul
jge
and
or
rcll
cmpsb
xchg
pop
stc
sub
es
mov
cmp
fwait
into
jecxz
rolb
cmp
subb
push
test
mov
loope
cmp
mov
rorl
xchg
xchg
stos
sti
ljmp
fiaddl
std
dec
add
inc
imul
jnp
aas
fnsave
fldenv
push
push
lock
cs
or
mov
lea
test
imul
jo
jns
pop
adc
cmp
mov
cmpsb
mov
or
jno
pop
cmpsb
sub
mov
dec
adc
or
pop
adc
mov
and
stos
pushf
in
xchg
inc
imul
cmp
ds
mov
pop
pop
scas
js
sbb
jo
cltd
jbe
out
data16
pop
test
cmp
cmc
push
cwtl
xchg
add
test
xor
xchg
pushf
ss
pop
pop
xchg
adc
ret
push
and
push
sti
mov
ret
add
mov
call
xchg
outsl
push
sub
mov
jbe
xchg
sub
lret
jle
add
and
es
sbb
loop
sbb
shrb
jge
fildl
jae
add
xchg
dec
stos
inc
jae
loop
and
mov
mov
mul
mov
fwait
sub
fistpll
push
push
outsb
jmp
mov
pop
sub
mov
xchg
and
cmp
sbb
sbb
mov
xchg
cmp
add
xchg
aaa
in
fisubl
adc
cltd
test
aad
lret
mov
inc
lea
push
sub
std
mov
jb
sub
jp
rorl
ror
out
sbbb
xchg
mov
iret
push
or
cmp
and
sbb
push
xor
out
adc
push
movsb
lods
adc
int
mov
xchg
pushf
imul
pushf
dec
gs
orl
jb
ds
push
call
add
jno
inc
inc
sub
push
add
jg
out
xchg
lahf
jnp
int3
cwtl
xchg
xor
repz
sub
inc
xor
xlat
call
mov
dec
mov
mov
push
inc
loopne
mov
xchg
push
xchg
inc
decb
enter
jg
enter
mov
xchg
push
jb
popf
push
cmpsl
dec
cli
and
sbb
fwait
sbb
notl
push
fsubl
ljmp
pushf
xorb
loope
sbb
sbb
push
out
sub
cltd
xchg
insb
and
adc
jle
jg
test
add
lcall
jns
test
lods
fidivrl
inc
push
out
aas
mov
into
jns
mov
mov
imul
cmp
mov
dec
ja
insl
mov
data16
cmpsl
mov
aas
lret
mov
imul
mov
popa
pusha
jae
pop
or
mov
xor
mov
xchg
lahf
jmp
movsb
popa
fstps
push
ret
mov
sub
fisubs
or
sbb
cmpsl
sub
adc
mov
and
or
shrl
push
and
icebp
lret
sar
sub
pop
pop
mov
xor
push
stc
int
and
popf
hlt
lahf
dec
jl
hlt
insb
pop
or
xchg
pop
imul
jno
dec
xor
cmc
orl
mov
sbb
pop
dec
mov
jb
xchg
add
mov
test
inc
sbb
ret
addr16
inc
pop
sbb
out
nop
adc
lods
aas
lods
pop
mov
add
aas
inc
adc
sar
es
mov
push
bound
push
jmp
add
or
shll
iret
push
and
and
adc
mov
push
mov
sbb
nop
lcall
jp
mov
pushf
xor
jmp
stos
xor
push
jne
popa
fildl
andl
push
test
sub
xchg
pop
add
sub
fwait
bound
lahf
ljmp
xor
out
cmpsl
arpl
mov
dec
push
mov
lea
les
sub
adc
aas
lcall
mov
js
mov
cmpsl
test
call
inc
xchg
sahf
clc
or
adc
mov
jo
repnz
push
push
adc
fsubr
jno
stos
xchg
dec
xchg
xor
loope
mov
nop
mov
jl
sbb
leave
mov
test
inc
ficomps
xchg
cmpsl
dec
in
pop
dec
outsl
clc
mov
hlt
push
or
fstpt
dec
cmp
jnp
xor
out
test
ret
push
lret
and
xorb
dec
fwait
aaa
enter
shlb
cmp
push
xchg
dec
rcl
mov
das
jmp
stos
add
jbe
dec
inc
int3
cmp
dec
xchg
ret
popf
sub
mov
sbbb
adcl
out
dec
xor
cmp
mov
sub
xchg
inc
push
sbb
sahf
mov
pop
les
cmpsl
cld
sub
adc
mov
leave
jnp
aad
jge
xchg
add
in
and
test
jbe
fldcw
lahf
mov
and
cmp
subb
pop
inc
dec
push
mov
sub
pop
jb
xchg
or
dec
test
dec
arpl
loop
dec
jb
mov
and
mov
xchg
jb
ds
pop
mov
dec
pop
or
inc
mov
sub
fs
loopne
dec
test
mov
je
dec
lods
mov
xchg
jae
cmp
sbb
pop
js
pop
sbbb
aas
pop
jge
stos
sbb
rcl
ljmp
test
stc
cmp
jmp
bswap
sub
add
enter
xchg
push
scas
push
loopne
mov
pushf
inc
test
pop
or
and
sub
lods
inc
leave
cmp
mov
cmpsb
in
icebp
fcmovbe
jge
mov
pop
rorb
pop
mov
aas
dec
push
or
sbb
sub
inc
mov
jg
push
mov
mov
data16
in
mov
dec
dec
movsl
cmp
pop
in
sbb
jmp
std
pop
push
jmp
or
inc
aaa
scas
out
sbb
fs
push
rcrb
loop
movb
test
das
loopne
out
ffree
xor
test
cmp
jno
les
mov
out
rorl
sbb
movsb
dec
scas
cmp
push
fs
stos
and
inc
add
add
inc
inc
adc
pop
shll
jbe
xchg
insl
icebp
adc
addr16
push
punpckhbw
and
cltd
adcb
or
aad
scas
dec
ja
ds
mov
pop
adc
mov
mov
cwtl
inc
jle
jp
push
dec
adc
repz
xchg
insl
les
add
popf
out
enter
mov
lret
jne
dec
cli
sbb
lea
cmpsl
loop
jecxz
sbb
push
in
pop
test
call
inc
and
sahf
out
insl
cmp
or
pop
in
jl
mov
es
out
sub
aas
jne
in
mov
lret
pop
scas
xchg
test
xchg
gs
mov
jp
add
mov
cmp
mov
xchg
add
dec
add
pop
fs
popa
lahf
jb
cwtl
sar
enter
popa
xchg
mov
pop
lea
mull
pop
sub
mov
addr16
icebp
cmpsl
jl
cmp
add
cmpsb
push
xchg
lahf
sbbb
pushf
aad
outsb
and
mov
movsb
xchg
xchg
fs
mov
inc
arpl
rclb
cmc
cmpsb
xchg
mov
jae
dec
pop
dec
mov
lret
aad
pop
or
lods
push
out
test
and
inc
xchg
mov
rolb
push
test
mov
mov
ds
sahf
das
ret
inc
mov
cmp
dec
xchg
and
movsb
mov
mov
jmp
or
int3
out
dec
jae
pop
cmp
das
shll
mov
negl
mov
test
inc
add
xchg
dec
cmpsb
sbb
outsl
xchg
lods
ds
test
lret
or
shll
push
adc
lds
scas
and
xchg
inc
mov
int3
nop
cwtl
mov
xor
or
cmp
movsl
pop
out
orl
fisttps
stos
data16
and
add
xchg
adc
testl
mov
push
test
add
stos
stos
add
adc
cwtl
jmp
lret
mov
push
aaa
lods
xchg
out
inc
dec
mov
sbb
push
xchg
cmpsb
cmp
fwait
lret
pop
jae
cmpsl
jbe
repnz
hlt
pop
loope
lret
and
into
aaa
into
call
push
inc
xchg
sbbb
sub
mov
aam
inc
lret
loop
mov
movsb
jb
or
ljmp
jmp
insb
inc
stc
pop
xchg
lods
cltd
call
into
icebp
fwait
sub
shlb
hlt
stos
sub
fcompl
xlat
repz
inc
sbb
dec
mov
in
push
cmp
ja
outsl
adc
adc
mov
int
jle
pusha
orb
push
add
loop
jnp
aaa
sbb
shl
mov
mov
mov
xchg
sub
icebp
jp
je
adc
shll
cli
xchg
sub
sbb
out
jb
cmp
idivb
loopne
hlt
adc
adc
sti
in
inc
fisttpll
das
jg
pushf
jmp
and
cmpb
xchg
lcall
out
xor
add
xor
mov
push
jae
mov
xor
in
pushf
dec
xchg
in
add
push
xor
sti
jo
and
dec
mov
inc
loopne
ret
test
or
add
xor
orb
scas
mulb
data16
test
xor
jb
jbe
push
add
jecxz
jbe
js
les
into
push
mov
add
and
inc
cmc
mov
mov
push
idivb
in
outsl
push
loop
push
aaa
cli
sub
orb
xor
sbb
gs
divps
inc
jle
rcrb
mov
mov
jg
push
adc
sub
mov
push
testb
xor
addr16
xchg
mov
xchg
xlat
dec
movsl
cmc
inc
aaa
stc
mov
sub
cmpl
push
and
sbbb
mov
mov
mov
stos
add
hlt
movsl
and
lahf
lds
sbb
cmp
lcall
movsl
push
movsb
push
add
mov
sbb
pop
cmc
es
sbb
loopne
jge
mov
imul
add
xchg
push
sub
mov
repz
iret
clc
push
in
jmp
int3
and
cmp
xor
cld
pop
insb
adc
test
sub
adc
adc
xor
push
sbb
pop
out
dec
loope
mov
mov
jmp
cmp
dec
mov
sti
out
mov
mov
mov
daa
movsb
int3
push
jne
mov
adc
out
and
jae
mov
xchg
pop
pop
adcl
and
lods
inc
cmp
shrl
pop
std
cmp
lret
jle
jmp
jo
stos
push
or
popf
xor
scas
and
inc
cltd
enter
mov
shlb
ret
jmp
adc
or
xlat
cmp
cmp
ds
jae
std
inc
mov
pusha
sub
cmp
dec
rclb
aam
shll
popf
pop
push
insb
incl
arpl
sub
das
leave
jns
xor
inc
hlt
enter
shr
aaa
jb
pop
sub
xor
cmp
cmpsl
roll
mov
add
es
fidivrs
ds
mov
mov
jno
cmc
push
and
lahf
dec
mov
sbb
inc
ret
pop
mov
stc
leave
inc
jmp
fiaddl
or
lcall
mov
mov
push
incb
sub
or
cmpsl
lds
inc
inc
xchg
adc
jno
call
inc
arpl
inc
or
or
fs
cmp
lcall
mov
or
scas
addr16
into
inc
jno
scas
cmpsb
aaa
mov
xchg
js
into
data16
imul
cmp
mov
shll
pop
imul
lret
stos
cs
sbb
arpl
mov
mov
sub
jno
pop
add
testb
andl
in
rcrb
nop
test
leave
xlat
addr16
and
leave
dec
mov
insl
ja
lret
pusha
push
mov
sti
add
pop
test
data16
mov
outsb
jp
sbb
in
jbe
mov
lds
inc
dec
mov
push
pop
dec
push
dec
xchg
pop
clc
lcall
hlt
ret
les
xchg
fisttpll
or
add
fisttpl
ds
aaa
popf
mov
lea
rcll
negl
ss
sbb
bound
jns
xchg
incl
mov
jne
adc
aas
adc
insb
adc
stc
popf
ret
sbb
and
mov
jl
inc
test
mov
ja
cmpl
push
or
scas
call
stc
dec
mov
pop
popa
sub
ficomps
cmpsb
ja
mov
ret
sub
notb
daa
sub
in
jnp
mov
aad
pop
jo
lods
inc
cltd
fmull
mov
pop
mov
adc
jge
sbb
dec
fucomi
or
sbb
scas
testb
loopne
mov
cmp
addr16
ja
scas
xchg
popf
arpl
inc
xchg
add
or
clc
push
or
out
sahf
and
fidivl
push
and
clc
inc
gs
lock
popf
es
das
mov
jle
sbb
push
jne
xchg
add
adc
stos
orb
fwait
and
nop
insl
mov
sub
mov
ficoms
jle
adc
push
dec
and
sbb
fsubs
lcall
inc
pushf
and
aas
repz
sbb
jb
push
mov
fs
push
or
fidivl
fbld
scas
lret
and
dec
ds
and
pop
scas
inc
scas
add
ret
leave
cld
jno
dec
push
xchg
cmp
jo
mov
fbld
dec
stos
inc
mov
dec
mov
and
mov
pop
lds
lret
bound
lds
fisubrs
push
mov
cld
dec
xchg
or
imul
sbb
or
js
or
les
xchg
sbb
mov
mov
fiadds
orl
mov
push
sub
cltd
dec
jecxz
jno
and
lret
push
aad
test
dec
mov
cmp
out
shrb
mov
xor
out
test
adc
push
call
test
cld
popf
ljmp
add
je
push
mov
ljmp
pop
jo
adc
imul
or
repz
pop
xchg
pop
hlt
add
negb
arpl
and
mov
mov
adc
push
xchg
dec
jmp
and
or
jno
lahf
cld
dec
mov
push
repnz
xorl
mov
mov
push
sub
push
iret
cld
push
add
sarl
xor
test
shll
ss
and
dec
inc
mov
cli
sbb
cmpsb
fs
int3
cltd
xor
mov
gs
hlt
adc
aad
mov
fsubrs
add
insl
mov
mov
or
cmp
mov
push
xchg
push
clc
dec
mov
shl
adc
repnz
jle
mov
lahf
out
xchg
leave
shl
cli
sbb
pop
dec
xchg
add
mov
or
fnstenv
mov
mov
mov
xchg
cli
push
stos
sbb
lods
in
into
andl
movsb
stos
shlb
mov
fcmovnu
mov
xor
sbb
jo
jle
test
rcrl
and
aad
mov
and
adc
outsl
fnstcw
pop
insl
xchg
inc
icebp
movsl
in
mov
aaa
push
add
cmp
lods
mov
out
inc
adc
cmp
mov
arpl
loopne
stos
adc
jecxz
add
sub
setns
loopne
mov
jbe
outsl
popa
jb
ja
add
jns
cmp
stos
mov
out
imul
arpl
and
andb
popa
and
nop
lods
stc
xor
fucomi
pop
loop
dec
or
pusha
ret
js
push
out
mov
jne
faddl
ret
iret
jecxz
push
dec
fwait
int3
dec
xchg
sbb
dec
in
jp
jb
js
test
add
aas
jl
dec
outsl
dec
push
cmc
mov
pop
sub
xchg
dec
xor
cmp
xor
add
jmp
stos
fistpl
mov
pop
jmp
add
cltd
mov
lret
inc
int
jge
dec
and
cmp
inc
iret
popa
mov
shrl
lret
xor
mov
int
mov
pop
icebp
mov
icebp
xor
and
push
scas
mov
stos
mov
push
into
xchg
insb
add
xor
cmpsl
lahf
push
xor
lahf
ss
inc
mov
xchg
pushf
inc
and
in
sub
xor
mov
lock
jae
sahf
into
cmp
int
adc
inc
lahf
pushf
xor
inc
cmp
fstpt
cmp
loop
aam
pop
sub
test
cmpsb
push
insl
es
decl
mov
inc
outsb
sub
mov
xchg
lods
xchg
test
adc
push
add
cli
add
sub
or
or
sbb
mov
pop
sub
aas
sub
movsl
sub
pop
rcll
es
cltd
lcall
add
outsl
jo
aad
in
mov
cmp
repnz
invd
movsb
push
xchg
es
sub
mov
xlat
into
or
icebp
inc
inc
sbb
inc
data16
push
jmp
rclb
loopne
aam
lods
and
xchg
pop
jbe
lcall
outsl
jo
cmp
nop
out
test
fistl
mov
mov
icebp
shr
cmp
insl
sub
ret
scas
xchg
sub
repz
pop
sbbl
or
mov
xchg
sbb
xchg
mov
insl
cld
push
subl
mov
xor
sub
inc
ficompl
push
push
lahf
jle
shrl
inc
in
jbe
test
mov
leave
dec
imul
vpsllw
addr16
popf
dec
loopne
sbb
repnz
cmpsb
aas
or
xchg
sub
lock
dec
cmp
loopne
movsb
add
jmp
xchg
inc
mov
jns
into
push
sub
stos
aas
push
mov
pop
or
frstor
sti
orb
xchg
in
pop
xchg
out
rclb
ja
popa
jl
adc
insb
stos
test
aas
xchg
addr16
std
lret
sti
mov
jl
jl
scas
add
lcall
movsl
pop
arpl
push
xchg
or
and
es
dec
cld
call
sbb
xchg
sbb
lcall
icebp
xorl
hlt
lds
jnp
sbb
mov
sbb
jmp
or
outsl
pop
mov
je
sbb
and
mov
cmp
xor
mov
inc
pop
mov
adcl
lods
fistl
mov
inc
je
dec
das
sbb
ret
mov
mov
ds
pop
pop
out
cmpsb
je
in
aam
nop
push
sub
subb
mov
cmp
mov
out
jns
cmc
or
and
sub
in
iret
sub
mov
repnz
add
pop
in
add
lds
or
mov
xlat
mov
inc
lea
lods
popa
xor
lret
push
jo
js
dec
ret
or
mov
movsl
sarl
icebp
addr16
sbb
or
inc
repnz
fists
push
and
js
mov
jl
in
push
jp
ja
dec
pusha
arpl
out
je
stos
das
dec
sub
cmp
and
or
xor
inc
data16
hlt
cli
cmp
jg
les
cmp
stc
sbb
outsl
leave
jle
rcrb
out
jnp
push
imul
lock
int
mov
sbb
lods
mov
enter
xor
ret
stos
and
pop
cmp
int3
cmp
sub
jmp
clc
dec
pop
fbld
bound
xor
fs
shrl
sbb
bound
add
cmp
scas
adc
insb
cmpsl
in
cmp
jecxz
test
inc
or
pop
dec
xchg
jo
sbb
dec
out
jmp
and
lret
and
cmpsb
notl
jl
decb
rorb
cwtl
push
insl
inc
jge
mov
cmpsl
pop
sub
adc
pop
outsb
pushl
icebp
cmpsl
loop
adc
aaa
fs
call
ret
jl
xor
sbb
adcb
imul
les
cmp
loop
add
and
sub
lret
adc
and
out
into
jns
add
ret
xchg
ficoml
and
ret
dec
hlt
push
push
dec
lcall
jp
sbb
adc
divl
test
jnp
daa
outsb
add
xorl
shl
aam
gs
loope
push
mov
sbb
xchg
sub
into
jns
xchg
mov
adc
jecxz
xchg
mov
insl
iret
mov
repz
out
xchg
push
clc
fbstp
sbb
js
idivl
push
mov
inc
push
add
xchg
mov
imul
xchg
sub
sub
xor
daa
and
leave
pop
loopne
mov
addb
push
and
addr16
xchg
insb
shl
cmc
cmp
push
int3
dec
add
xchg
retw
in
fwait
pushf
xor
or
sub
jp
cmpb
pop
pop
pop
test
adc
out
fwait
pop
int3
test
call
mov
cmp
ffreep
pop
xor
call
or
xor
cmpsl
inc
rcr
inc
mov
mov
xchg
imul
mov
push
jno
sahf
out
mov
jbe
fs
sub
cltd
mulb
icebp
xor
jl
pop
jge
fbld
jp
popa
jo
push
int3
push
sahf
fldcw
mov
ret
xchg
push
xor
fwait
xor
push
test
shr
push
pop
cmpsl
fidivl
popa
push
mov
data16
cmc
inc
loope
xor
aas
add
shlb
and
mov
pop
stos
dec
mov
rorb
fwait
iret
jo
cmp
repnz
adc
mov
in
cmc
dec
xor
mov
out
mov
jnp
add
mov
jns
and
dec
adc
call
or
icebp
or
jbe
xchg
add
aam
mov
mov
lret
mov
inc
push
int
bound
iret
push
cwtl
in
dec
stc
mov
xlat
adc
adc
pop
mov
mov
xchg
sub
add
arpl
outsb
into
lods
jb
mov
sbb
iret
adcl
cmp
sti
cmp
data16
mov
imul
xchg
into
sub
mov
std
test
ffreep
jmp
pop
xlat
cmc
imul
mov
jne
push
iret
pop
mov
testb
mov
shll
rcrl
clc
sub
aas
movb
mov
fadds
add
pop
imulb
dec
mov
cmp
add
jp
push
out
add
into
test
les
rorl
test
push
push
cld
xchg
xor
jne
sti
push
sbb
inc
pop
adc
push
cwtl
push
push
push
mov
incb
cmc
mov
dec
cld
pop
int
xchg
incl
rorl
out
xor
sub
ss
push
popf
mov
lods
mov
adc
mov
jae
arpl
mov
or
mov
mov
rcrl
rcl
fldt
lret
leave
lea
iret
push
pop
sub
enter
jns
inc
xchg
stos
in
lahf
loopne
ret
data16
insl
and
cmpsb
lds
jge
push
pop
cmp
stos
sbb
dec
ds
adc
fstp
cli
or
sub
scas
jb
sarl
adc
or
mov
mov
and
scas
and
cmp
lret
add
daa
cmp
xor
xchg
pop
add
xchg
push
and
lret
xchg
sub
test
rcrl
mov
sbb
ljmp
or
adc
jl
in
mov
insl
loopne
pop
imull
daa
dec
pop
cltd
sub
fmull
xchg
test
cld
mov
jle
add
pusha
test
mov
lods
lock
mov
jns
inc
adc
loop
sbb
mov
and
rolb
ss
movsb
loopne
xchg
adc
cmp
and
cmp
push
negb
lea
lock
mov
scas
inc
xor
pop
jne
in
dec
pusha
push
loope
push
icebp
mov
or
hlt
stc
jecxz
das
shrb
ja
push
lods
ja
mov
data16
cltd
das
mov
ljmp
dec
or
mov
das
scas
mov
sbbb
sahf
iret
pop
lahf
orb
adc
notb
je
lret
aam
cmp
dec
and
in
std
lcall
xor
mov
mov
cmpsl
xchg
test
dec
dec
pop
dec
repz
jecxz
sub
or
pop
mov
mov
lcall
push
in
testl
or
pop
fsubl
fadds
shr
loopne
jnp
or
fwait
nop
bound
jecxz
fcmovnb
xchg
mov
cltd
imul
and
int3
lods
mov
rclb
adc
sti
sub
inc
out
add
xchg
movsl
lds
mov
lahf
enter
repnz
push
ss
lcall
add
pushf
in
sahf
aam
or
aam
xor
ja
cmpsl
push
jns
sbb
mov
dec
cmpsl
mov
out
neg
cmc
daa
pop
pushf
bound
je
fisubl
cmpsb
xor
stc
and
push
lea
mov
adc
popa
rcl
fisttpll
loop
scas
ret
clc
dec
dec
cmp
jecxz
pushf
xchg
lds
sbb
push
int
nop
sbb
mov
add
aad
ljmp
lahf
xor
sbb
das
cmp
insl
scas
lds
sub
imul
sub
and
stc
sbb
mov
int3
xlat
add
data16
pusha
ds
mov
sbb
les
adc
stos
fsubl
gs
movl
mov
push
xor
fisttpl
std
aam
scas
adc
mov
dec
dec
pop
cmp
stos
cld
push
jmp
xor
jne
outsl
sbb
out
cld
aad
ja
inc
mov
pusha
int
fldl2e
adcl
gs
pop
mov
lret
repz
push
mov
lret
repnz
test
push
test
inc
jbe
ja
and
pop
rcr
jle
inc
fisubrs
jno
cld
mov
mov
es
repnz
and
daa
in
jb
jecxz
fisubrs
test
rclb
addb
adc
mov
mov
jp
mov
sbb
dec
push
mov
popa
mov
cmp
pop
hlt
sbb
cmpl
mov
cltd
inc
and
aad
loop
or
test
mov
xlat
sub
xor
add
lods
push
dec
pop
pop
stos
sti
stos
and
ret
sub
inc
movsb
popa
xor
inc
flds
fidivrs
push
pop
cli
fsubrs
lahf
data16
xor
add
sarl
aaa
dec
jecxz
sub
insb
aas
mov
repz
mov
fstpl
rol
dec
in
fs
mov
fwait
jl
jbe
mov
or
mov
cld
xchg
dec
sarb
xchg
jl
mov
pop
jg
andl
in
cmpsb
cmc
or
fisubl
sarl
sub
in
push
xchg
into
test
mov
fsts
pusha
stos
out
ret
cmp
fs
add
pushf
sbbl
pop
punpckhdq
and
push
xchg
add
dec
cmp
test
xchg
cmp
scas
shl
loopne
mov
mull
aad
mov
mov
es
test
mov
xchg
dec
pop
and
jecxz
mov
sbb
xor
rcrl
add
push
sub
outsb
jle
or
push
popf
xchg
loopne
fidivrs
and
mov
loopne
stos
sub
mov
mov
mov
pop
cli
inc
xchg
enter
out
stc
dec
stos
jle
and
cld
push
popf
xchg
and
xor
add
adc
or
aam
scas
mov
insb
repnz
mov
ja
iret
clc
and
sub
mov
or
jg
mov
and
jge
aam
cs
mov
xchg
in
xor
jmp
jmp
inc
and
icebp
jno
xchg
mov
mov
imul
dec
cmp
les
push
sahf
mov
cld
xchg
cmp
lcall
and
mov
mov
jnp
icebp
movsl
int
fcmovbe
push
popa
loope
push
cld
or
fidivs
loopne
test
movsl
mov
mov
cwtl
mov
out
push
jo
pushl
rcrl
cmc
mov
mov
mov
and
mov
movsb
in
xchg
cmp
lret
add
adc
xor
je
popf
stos
out
and
xlat
movd
icebp
int3
arpl
xchg
divl
imul
add
mov
lods
xchg
enter
je
movsb
cmp
mov
sub
cwtl
jle
mov
fistpl
sti
sbb
sbb
lcall
dec
aad
rolb
jge
pop
xor
pushf
jo
dec
das
out
xlat
cmc
mov
mov
cs
adc
popa
adc
js
out
cltd
out
sbb
outsb
jp
orb
vmread
subl
or
or
adc
and
jne
popa
mov
clc
jnp
negb
adc
imulb
or
sahf
dec
es
push
sub
inc
xchg
cmp
ret
and
lea
cmp
jp
cli
lret
lret
nop
pusha
data16
xchg
cltd
loope
fwait
cmp
shrb
test
hlt
mov
push
push
or
ja
js
inc
in
or
inc
leave
cltd
or
xor
int
inc
in
icebp
mov
imul
stos
cmpsl
loopne
lahf
out
jbe
cltd
cmp
inc
stos
xor
and
mov
fisubrl
shrb
or
pop
jmp
sbb
scas
inc
out
adc
imul
jg
jl
sbb
frndint
fs
fstpt
ret
and
fwait
testb
xchg
dec
shll
sub
enter
insl
inc
fnsave
mov
push
bound
rcrl
mov
cmp
xlat
das
inc
jno
cmpsb
arpl
mov
xchg
and
xchg
or
imul
jo
or
mov
testb
xchg
mov
inc
fs
cmpsb
in
push
cmp
inc
pop
jl
push
mov
aad
jb
inc
out
xchg
push
dec
mov
lret
js
leave
and
fimull
push
dec
loopne
xchg
cmp
inc
push
shrl
ljmp
pop
push
ljmp
hlt
add
mov
inc
mov
dec
testl
in
cmpsb
mov
mov
push
loop
outsb
xchg
pop
cmp
fnstcw
mov
imul
push
frstor
loopne
pop
fwait
sti
mov
add
cmp
or
arpl
clc
push
inc
insl
jle
jp
popf
sub
inc
pop
sub
insl
add
icebp
aaa
clc
aad
mov
push
mov
out
mov
addr16
popa
mov
stos
inc
lea
sbb
mov
sub
inc
std
cwtl
les
repz
mov
push
mov
or
lret
out
sbb
adc
lds
ficoml
mov
loopne
lahf
out
add
addr16
rolb
call
or
and
std
jge
in
xchg
sahf
xchg
mov
fsubrs
lock
data16
js
imul
inc
fcomip
cli
jp
cmpsb
stos
aaa
pop
movsb
push
fsubp
pop
jl
adc
into
mov
xor
imulb
mov
adc
int3
repz
jae
add
xchg
cld
pop
ja
mov
and
jno
lods
pop
pop
sbb
mov
rcll
cmc
jo
or
or
fwait
mov
lds
insb
aas
cmp
notl
xor
xor
std
push
sub
cwtl
jae
fdivp
xadd
shrl
mov
or
push
jge
xor
cmp
jg
mov
cmp
jecxz
ss
sbb
sub
or
js
mov
in
inc
cmc
jb
daa
dec
nop
and
and
leave
mov
mov
lods
jno
push
cli
or
out
ret
pop
adc
jbe
out
popf
cmpsl
xchg
adc
push
and
mov
pop
mov
ss
mov
int
enter
mov
sbb
dec
cmc
jb
stos
insl
testl
dec
pop
mov
gs
rcl
out
mov
in
push
lea
cmpsb
sbb
int3
mov
fwait
mov
inc
movsb
test
add
call
daa
mov
fisttpll
xchg
adc
loop
jne
push
cs
test
cltd
mov
inc
xchg
pop
and
xor
jne
stc
rorl
jne
push
cmpsl
pop
jne
fadds
jle
sbb
popf
stc
cmc
fisubs
pop
loope
pushf
jns
std
test
rol
mov
mov
xlat
mov
addr16
sbb
out
sbb
incb
insl
push
jmp
mov
sbb
jno
test
mov
jns
pop
mov
jbe
jns
jmp
pop
inc
std
lock
jno
sub
cs
xchg
bound
in
movsb
in
leave
mov
mulps
std
jl
test
ret
add
mov
jp
pop
ret
push
daa
jp
and
ds
in
mov
inc
popa
or
stos
sbb
scas
outsl
dec
add
test
add
lret
in
pop
push
arpl
cwtl
flds
fdivs
jno
stos
cmpb
rcll
scas
shlb
mov
and
add
push
fnsave
jne
pop
push
lret
das
ret
and
xchg
fdiv
int3
push
push
or
stc
test
and
mov
out
int3
push
push
xor
pop
jae
xchg
push
adc
shlb
lods
popf
add
stos
pop
fwait
adc
rorb
or
test
or
lods
xchg
dec
mov
mov
repz
aad
jl
mov
repz
sbb
push
dec
mov
mov
cmpsl
pop
inc
in
mov
imul
pushf
jp
cltd
test
sbb
ja
std
push
xor
push
and
jg
sub
bound
pop
mov
lods
xlat
mov
test
xor
mov
shlb
arpl
insb
jle
push
sub
xchg
cld
jle
and
and
in
xor
xor
mov
cwtl
adc
testl
xchg
jmp
inc
out
cmc
icebp
in
xchg
sub
adc
or
das
fwait
stc
aad
test
sbb
jp
pop
divl
repnz
xchg
xor
sub
push
push
sbb
gs
aas
enter
add
xor
in
repz
sub
and
or
stos
sbb
xchg
cmp
sbb
jl
ret
pop
fadd
adc
push
adc
enter
insl
adc
out
dec
xor
pop
dec
fwait
or
jne
cwtl
sbbb
sbb
andb
aad
mov
sub
push
addr16
pop
call
iret
push
les
scas
scas
fistpl
cld
fs
iret
cwtl
jle
sbb
inc
push
cmp
out
insl
loopne
popl
add
jnp
pop
in
add
xchg
mov
jae
es
lahf
stos
lret
pusha
fidivl
inc
jmp
add
dec
push
xor
add
ficoml
bound
ret
push
stos
xchg
mov
dec
dec
pop
xchg
pop
jbe
jl
scas
ds
into
test
inc
and
ds
jl
jle
xor
pusha
jns
addb
adc
jo
out
das
push
adc
push
pusha
jecxz
shl
or
mov
push
push
and
and
addb
cmp
fisttps
mov
stos
and
arpl
xchg
add
xor
xchg
mov
movq
sahf
xchg
insb
add
nop
pushf
xor
pop
adc
int3
insl
mov
and
mull
add
pop
fdivl
pop
mov
sub
jne
dec
out
mov
test
fwait
popa
faddl
inc
stos
mov
xor
xchg
sub
inc
and
cmp
lods
cmp
insl
add
int3
loopne
stos
mov
jmp
or
jg
sbb
jle
xchg
fs
je
xor
sbb
xchg
dec
mov
or
repz
and
in
push
dec
adc
sbb
xor
mov
imul
lahf
rclb
mov
sbb
repnz
loope
das
sarl
addl
jno
data16
sbb
mov
push
je
das
cmp
and
adc
push
fwait
loopne
sub
xchg
pop
jmp
sbb
scas
mov
popf
jnp
pushl
sbb
fbld
dec
dec
xchg
jp
mov
imul
xor
jns
sub
cmpsl
imul
lds
fcmovbe
mov
in
test
into
cs
jnp
int
ss
stc
xchg
or
mov
push
and
test
push
stc
push
cltd
sbb
jg
push
cs
or
add
pushf
out
arpl
outsl
and
fs
sub
or
int
pop
xchg
lea
dec
sub
rolb
mov
or
das
xor
test
gs
cmpb
imul
lret
outsl
jae
jge
cwtl
cmp
pop
and
mov
dec
ret
leave
push
leave
push
lods
mov
mov
int3
arpl
fwait
addr16
mov
adc
ja
ja
lcall
sbb
xchg
das
sub
mov
jbe
ret
loope
jnp
shl
sbb
enter
lods
push
dec
push
jmp
faddl
gs
sti
pop
mov
in
dec
movsb
pop
aas
xchg
sbbl
add
and
loope
xchg
cmp
add
push
mov
mov
pop
mov
push
loope
mov
xorb
bound
sbb
pushf
addr16
stos
lret
pushf
dec
mov
movsl
and
jg
mov
lahf
out
arpl
jecxz
sub
in
loop
mov
jg
or
inc
mov
ss
das
xchg
dec
popf
daa
imul
lods
adcl
cmp
xchg
jae
daa
mov
lods
add
mov
jb
pusha
xchg
lahf
dec
cmpb
imul
rcl
sbb
addr16
mov
pop
in
or
add
or
sbbl
mov
sbb
mov
ds
add
sub
cmp
sub
cmc
dec
pop
push
sub
lret
jb
adc
xchg
lahf
xor
fstl
jnp
push
inc
mov
jnp
mov
shlb
loope
sarl
cmp
js
cld
jb
sbb
addr16
mov
ffreep
inc
inc
xor
ficoms
js
inc
imull
lock
movsl
gs
cld
test
ss
push
jle
mov
testb
int
dec
mov
or
mov
push
insl
mov
imul
mov
sbb
pop
lret
leave
cmp
pop
mov
dec
in
loope
inc
cmp
jmp
lea
fidivl
inc
xor
inc
arpl
inc
out
jnp
das
or
movsl
xlat
stos
push
sbb
mov
shrd
add
popf
jmp
test
jae
xchg
pop
mov
scas
sahf
xchg
daa
fcoms
cmpsl
push
clc
inc
add
js
lret
xchg
decl
cli
xchg
rorb
dec
int
out
and
add
fldl
das
mov
subl
in
cmpsl
cli
daa
and
stos
xchg
jmp
out
and
push
or
mov
mov
nop
aam
std
cltd
in
incl
ss
lahf
idiv
cmp
or
inc
out
in
sub
sub
mov
xchg
cli
lods
in
into
pusha
ss
popa
jg
cltd
lret
mov
fsubs
out
pop
enter
mov
std
testb
ds
cmpl
add
bound
jne
dec
repz
pop
mov
fs
loopne
xor
jns
push
ds
stos
dec
mov
out
rclb
stos
mov
push
mov
cmpl
and
loope
insl
pop
int
repz
push
sub
pop
pop
jns
frstor
int
cld
ja
orb
jg
mov
sarl
lods
cmc
cmp
popf
clc
cmpsl
stos
cmp
fcoml
xchg
cltd
ljmp
lods
scas
adc
jle
int3
addb
pop
int
mov
push
sub
add
xchg
inc
add
inc
divl
lcall
rorb
mov
es
cmp
sub
daa
call
mov
stc
std
or
sbb
das
data16
push
lds
xchg
dec
sbb
xor
out
in
xlat
negb
dec
jo
cmp
sub
xchg
enter
cmpsb
xchg
mov
mov
pop
call
fistl
in
and
neg
jmp
test
ret
adc
and
adc
jns
sub
outsb
test
jne
mov
push
cmpsb
pushf
xchg
or
repnz
sub
sar
sahf
hlt
cs
sub
sbb
test
jns
cmp
mov
pop
sub
cmp
or
pop
mov
addr16
movsb
mov
nop
push
dec
mov
sahf
fdivrs
sti
xor
mov
clc
pop
push
push
pop
sbb
ds
push
cld
xor
pop
les
je
fidivrs
and
movsb
scas
bound
ret
dec
inc
xchg
add
movsb
ret
gs
cmpsl
addl
jnp
lock
inc
and
pop
add
pop
or
xor
xor
push
mov
bound
inc
lret
mov
call
test
lcall
and
mov
adc
loopne
add
movb
in
dec
ljmp
push
loope
ja
sub
ret
sbb
pop
insl
loope
rclb
jo
call
in
pop
negb
stc
dec
movsb
outsb
fs
add
fdivrs
sub
push
shrb
dec
dec
lds
mov
mov
sbb
push
mov
popf
jbe
into
rclb
cmpsl
add
ds
stos
cs
xor
mov
out
dec
mov
inc
popa
repz
push
mov
clc
and
add
push
mov
ror
lret
bound
lock
mov
cs
xor
out
jl,pt
pop
pusha
rclb
sbbb
sbb
repz
dec
dec
pop
mov
push
xchg
pop
cmc
sbb
sbb
adc
jbe
movsb
push
and
push
cltd
adc
or
xor
lcall
popa
addl
lods
sbb
dec
jmp
jnp
fcompl
mov
jne
add
fnsetpm(287
mov
inc
mov
iret
adc
test
scas
in
fsts
loope
jle
mov
inc
mov
adc
pop
shrl
sti
loopne
pusha
mov
ljmp
fmull
dec
jne
aas
movsb
pop
ficoml
fists
or
mov
cwtl
bound
ret
dec
loope
pop
lock
cmp
adc
pop
or
gs
pusha
sti
mov
rorl
test
imul
subb
movsb
popf
add
mov
aas
mov
pop
xchg
sub
adc
decb
xchg
jns
xlat
add
aaa
xor
jnp
mov
xor
add
ja
and
rorb
mov
repz
sub
scas
enter
inc
sbb
push
andl
mov
jne
jbe
mov
fsubrs
mov
test
dec
stos
jmp
cmp
pop
pop
cmc
test
and
or
enter
sbb
jbe
push
push
daa
xchg
jecxz
push
lock
push
lods
lds
sbb
push
xor
or
add
pop
xor
dec
clc
xchg
das
mov
jle
inc
pop
mov
sbb
cmpsl
xor
test
test
bound
sysexit
or
and
scas
push
mov
xchg
aas
mov
lahf
add
push
dec
popf
lods
dec
lret
lds
cmp
repnz
daa
sbb
dec
mov
xorb
or
ja
sub
pop
jmp
mov
fs
fistpl
add
addr16
bound
lds
cmp
aas
aad
or
nop
mov
sub
icebp
push
sarl
and
mov
xor
add
cmc
inc
lret
inc
negl
dec
push
sub
popf
sub
je
sbb
lcall
dec
dec
inc
dec
repnz
mov
movsb
push
ds
inc
lock
push
inc
fcmovb
lahf
adc
cmc
aas
pop
lods
aad
adc
cmp
pop
xchg
loope
jae
lock
lods
fisubrs
std
mov
xchg
or
adc
push
iret
pop
cmp
and
ljmp
pop
push
cmp
pusha
fisttps
mov
imul
aaa
lds
cmp
ror
mov
popa
shlb
es
push
mov
jg
bound
adc
aas
push
push
jmp
lret
and
sbb
loopne
jmp
inc
sbb
sub
cltd
in
nop
daa
fisubrs
sub
cmc
fdivr
or
add
sbbb
push
sbb
inc
xchg
fnstenv
test
inc
push
push
test
fists
inc
mov
std
movl
lret
bound
ss
fsubs
pop
or
fldl
mov
stos
out
mov
sbb
inc
add
cltd
add
add
mov
fnstenv
mov
push
jmp
cmpb
xor
popl
rorb
stos
insb
push
scas
pop
inc
cwtl
div
ret
lods
pop
int
ds
push
gs
int3
int3
cs
out
push
push
cmc
ja
and
or
sbb
ret
negl
mov
pop
pushf
arpl
cmc
lods
push
pop
out
and
inc
xchg
pop
call
fists
cli
test
or
fisubl
add
lds
outsl
pop
repnz
sahf
xchg
mov
daa
js
stos
sar
or
pop
fisubrs
mov
mov
jb
fsubs
and
push
pop
popf
stc
fdivrs
lret
sbb
mov
mov
and
and
insl
inc
out
adc
mov
mov
bound
or
mov
iret
cmp
pushf
adc
sarb
inc
fldenv
out
testb
cmp
jl
dec
in
push
ret
mov
pop
cmp
pop
testb
pop
imul
fnstenv
jns
fs
mov
add
iret
mov
adc
loope
das
aam
fwait
jbe
cmc
mov
cmp
fnstenv
push
xor
bnd
nop
movsb
iret
xorb
inc
out
mov
mov
sti
daa
pushf
andb
xor
cmp
insb
add
incl
out
xchg
mov
leave
adc
test
sub
call
ss
bnd
imull
pcmpgtw
in
dec
out
mov
call
data16
mov
in
sub
xchg
dec
out
shl
iret
mov
stos
sti
mov
sub
scas
cmp
hlt
mov
ljmp
mov
push
lods
dec
or
lds
cmp
mov
mov
push
push
mov
mov
popa
xor
and
add
or
or
popa
ret
jb
in
ljmp
dec
inc
xchg
sbb
push
loope
outsb
xchg
cltd
sub
push
rcrb
jne
ss
dec
test
dec
lock
mov
adc
sahf
gs
in
cmpsl
fbstp
mov
icebp
mov
cld
fwait
xor
or
xchg
test
das
insl
cmc
pusha
pushf
push
out
add
adc
test
xor
dec
mov
mov
cs
jl
inc
mov
adc
adc
cmpl
mov
repz
lods
add
in
xchg
nop
sub
dec
and
ja
icebp
dec
in
cmpsb
lock
mov
add
ja
push
inc
and
push
scas
inc
test
das
xor
mov
out
xchg
push
jmp
out
insl
aam
mov
scas
fsubrl
ja
and
and
in
mov
add
data16
aaa
movsb
shlb
mov
sub
idivb
test
sbb
inc
in
cmp
mov
xor
xor
fstps
mov
adc
or
mov
push
ljmp
arpl
sbbl
fnstsw
adc
sub
pop
mov
imul
add
dec
inc
int
pusha
mov
add
sti
xchg
sti
push
lock
mov
add
mov
call
lret
xor
lret
wbinvd
sbb
movsl
cmp
push
cmpsl
es
fsubs
and
or
mov
ja
jp
jecxz
sbb
xchg
js
lds
push
mov
lea
mov
push
mov
jg
and
push
nop
inc
dec
je
jns
fucomp
int
or
dec
jmp
rorb
lea
xchg
sub
add
popa
add
stos
lea
out
lcall
sahf
lahf
xchg
cs
and
cmp
push
jne
fwait
popa
cld
mov
ficoms
ljmp
jno
fiaddl
push
out
inc
and
jbe
sbb
sub
out
inc
cmc
push
sahf
pushf
popa
add
test
xchg
fxch
xor
xchg
or
pop
xchg
lea
ljmp
push
xor
pop
xchg
out
mov
and
rcrb
outsb
and
jmp
addl
fmuls
inc
stos
test
decb
cmpsb
rorl
outsb
insl
push
popf
pop
or
or
cmp
add
pop
jmp
mov
es
sub
or
mov
sub
push
dec
add
dec
jbe
call
and
xchg
cmpsb
out
out
mov
imul
xchg
fldcw
pop
ljmp
out
cmp
mov
ffree
shrl
es
mov
sbb
add
shr
or
cmp
out
add
repz
ljmp
xor
xor
jnp
cmp
mov
fucom
aas
sbbb
adc
in
aas
mov
fcmovb
pusha
dec
loop
fisubrs
divl
mov
push
pop
jo
pop
xchg
push
shll
pop
cmp
std
cmp
cmpsb
xchg
cld
outsl
pop
push
jbe
push
and
pop
jno
mov
out
mov
xchg
dec
dec
loope
and
pop
and
call
xchg
lahf
loop
ret
adc
fwait
mov
notb
aaa
push
in
pusha
rclb
push
xor
insl
dec
aas
outsb
mov
add
mov
push
cmp
xorl
push
fbld
psubsw
or
lock
repnz
dec
arpl
cwtl
add
jb
jno
into
test
mov
or
sbb
ss
lds
adc
cltd
sub
cli
out
xor
lods
pop
push
jmp
aad
push
jmp
mov
icebp
or
cmpsl
and
jmp
or
mov
arpl
adc
sbbl
dec
xchg
or
push
in
and
mov
inc
je
fcomi
cli
or
std
fiaddl
into
ja
jmp
loopne
push
addl
push
pop
jle
iret
push
lock
cmp
jno
sti
jbe
sbb
in
lods
cmp
stos
mov
out
fsubl
jmp
inc
mov
cmpsb
shl
xlat
les
jo
jle
pop
mov
fwait
imul
outsb
imul
jmp
dec
loope
mov
lods
fucomip
or
pop
lods
add
dec
iret
sbb
mov
in
stos
mov
push
fcomps
xchg
adc
add
xor
dec
mov
icebp
sbb
decb
xchg
jns
pushf
pusha
pop
les
xchg
or
imul
xchg
fdivr
inc
ds
push
hlt
imul
dec
arpl
testl
sbb
andl
push
sub
test
lret
mov
mov
mov
sub
cmc
dec
add
lahf
adc
jecxz
insl
ds
pop
jo
mov
mov
ljmp
testb
das
sub
repnz
sbb
pop
mov
cmpsb
push
xlat
repz
enter
lea
and
inc
mov
jle
mov
push
mov
daa
cwtl
adc
mov
xor
out
sti
sub
pop
dec
int
mov
dec
pslld
adc
out
add
je
jo
sbbl
push
xor
sub
scas
clc
outsl
or
xchg
das
loop
testb
mov
inc
and
sbb
xor
add
sbb
and
xor
sub
pop
repz
cmc
push
mov
mov
lds
sbb
mov
xchg
push
std
lret
mov
rcr
test
and
in
jg
or
lret
test
and
or
inc
out
es
inc
mov
xchg
lahf
lcall
cmpsl
dec
clc
inc
dec
enter
and
movsl
ret
sub
pop
dec
cmpsb
sbb
clc
pop
imulb
sbb
je
pusha
mov
xchg
rcl
xor
sbb
push
xchg
or
shl
pusha
push
and
nop
mov
inc
sub
in
jns
mov
dec
inc
imul
jae
fsubrl
fsubs
scas
lods
pop
adc
cmp
sarb
and
add
push
roll
lds
int3
or
repz
adc
dec
mov
dec
push
je
iret
jp
movsb
pop
stos
pop
sub
add
je
xchg
ret
outsl
push
jp
mov
movl
into
fistl
out
jmp
in
test
add
inc
cmp
aas
pop
lods
inc
stos
ffree
loope
or
cltd
or
imul
jl
jno
xchg
sub
nop
or
inc
jmp
rolb
mov
cmp
scas
fldl
xchg
mov
pop
cmc
std
mov
push
push
repz
and
xchg
add
mov
adc
mov
loopne
mov
outsb
dec
mov
pop
mov
shrb
sbb
dec
aam
jp
push
or
inc
dec
dec
mov
cmp
shlb
jae
ret
pop
daa
inc
adc
adc
or
mov
out
ds
sbb
jo
mov
jp
iret
nop
daa
imul
sbb
icebp
ja
push
jnp
jg
mov
rcrl
in
mov
shl
sti
inc
pusha
sub
insb
adc
inc
adc
sub
mov
adc
sub
and
movsb
mov
inc
sbb
popf
push
lcall
in
test
and
cmpsb
pop
fidivrs
in
enter
mov
ror
jnp
jp
cs
enter
cltd
icebp
mov
idivl
add
shrl
in
cmp
out
sub
bound
lock
test
gs
scas
mov
lods
cmp
movsb
pop
or
mov
cmp
sbb
and
rcr
jecxz
push
cld
push
cmpsl
mov
scas
or
arpl
xchg
daa
sahf
clc
rorl
adc
lods
std
cmpps
or
jb
add
xchg
out
inc
and
add
mov
in
test
pop
sbb
push
rcl
push
out
mov
movsl
mov
adc
ss
dec
inc
in
fdivp
dec
decb
aad
dec
fisubs
xchg
sub
scas
test
add
jns
aam
dec
push
scas
add
stos
scas
stc
int
arpl
sbb
push
mov
dec
rcrb
sbb
mov
fmuls
aas
lret
movsl
js
inc
adc
out
push
out
fstpt
fs
mov
aam
adc
jle
mov
mov
sbb
adc
jbe
sub
sahf
stos
pop
jo
sbbb
mov
jmp
push
repnz
movsl
fwait
ror
mov
bound
and
cmp
fs
flds
setle
and
jno
jmp
xchg
arpl
jmp
cmpsl
sbb
lock
push
and
fwait
push
inc
mov
xchg
hlt
mov
push
jae
and
sub
lods
out
mov
pop
shr
aad
data16
in
mov
outsl
mov
sbb
movsb
or
fisubrs
cwtl
ret
hlt
idiv
xchg
mov
addr16
sub
sub
dec
mov
mov
cmpsl
adc
adc
pop
adc
out
outsl
and
insb
push
mov
fisttpll
in
sub
dec
inc
ret
out
pop
in
loop
push
xorl
pop
sti
in
std
sbb
adc
cwtl
jmp
inc
mov
and
or
pop
aas
ss
pop
je
gs
xchg
and
xor
pop
mov
dec
push
idivb
loopne
sub
test
add
lret
aas
int3
out
mov
push
adc
cmp
insb
xacquire
push
xchg
aad
jae
or
mov
out
outsl
adc
mov
and
xchg
movlps
ljmp
aas
and
xchg
push
mov
mov
jmp
dec
pop
add
pusha
push
pusha
repnz
idivb
add
scas
mov
fcmovnu
cltd
and
rcr
rorl
inc
in
lods
test
add
and
push
add
in
popa
rorb
sub
aam
xor
repnz
ret
imul
fldcw
inc
lahf
inc
dec
int3
loop
enter
push
out
jae,pn
inc
dec
pop
hlt
outsb
jno
adcb
test
xor
inc
pushf
imul
in
xor
shrb
repz
xor
addr16
enter
lahf
mov
inc
push
mov
insl
jg
loope
mov
or
fwait
and
outsb
add
nop
mov
out
dec
into
dec
ds
jle
lahf
push
push
insl
inc
pusha
xchg
or
cli
lahf
data16
inc
mov
stc
mov
roll
xchg
mov
fsubrp
mov
sahf
jno
in
popa
xor
xor
lds
dec
mov
push
dec
sbb
mov
mov
cmp
sub
ja
xor
fs
out
xor
cmp
movsb
stos
fidivrs
push
mov
mov
mov
stc
cmp
cwtl
mov
mov
or
mov
pushf
push
repnz
xchg
movsl
xchg
adc
movsl
dec
dec
adc
or
push
push
or
sbb
xchg
pop
pop
fstpt
sbb
adcb
sahf
ds
push
and
test
mov
push
jo
popa
les
loope
sbbb
mov
add
enter
sub
inc
scas
sbb
int3
mov
adcb
aas
mov
jnp
loop
mov
jno
sub
ja
mov
fbld
es
lods
jge
xchg
out
dec
bnd
sub
mov
add
fwait
popa
mov
xchg
mov
or
insb
jecxz
mov
out
icebp
shll
je
sub
xchg
das
test
lret
mov
and
xor
mov
xor
rcrb
inc
xor
or
xorb
push
xchg
lods
fdivrs
jo
fstpt
lock
sbb
xchg
mov
inc
mov
clc
in
cld
out
pop
lds
aas
dec
in
sahf
adc
out
xor
incl
cmp
lock
sahf
scas
lods
dec
mov
adc
push
pop
stos
push
fidivs
sti
adc
or
cltd
pop
cmp
dec
mov
lods
pop
aaa
pop
imul
divb
cltd
sub
rorl
rclb
cmpsl
decl
push
in
scas
cmp
roll
shll
int3
jns
mov
xor
xchg
stos
imul
imul
dec
pushf
cmc
sub
jge
outsb
jb
outsl
mov
xchg
cmc
lahf
fldcw
pop
dec
pop
je
and
fstps
inc
xchg
test
xchg
je
inc
mov
in
push
dec
pop
ret
xlat
xorb
hlt
cld
sub
orb
cmp
push
mov
addl
js
inc
cmp
test
jno
loopne
pop
xchg
pop
pop
jno
cli
xor
fidivrl
or
push
xchg
je
adc
cli
test
or
xor
jne
ret
addr16
mov
fnsave
imul
or
imul
dec
imul
mov
adc
inc
pop
xchg
adc
icebp
movsl
rcl
cmpsl
dec
es
dec
fstpt
cmp
mov
dec
int
mov
xor
in
lods
xchg
es
dec
pop
lcall
mov
stos
or
push
sbb
dec
lds
cmc
mov
mov
adc
addb
data16
mov
mov
xor
daa
jnp
jne
icebp
inc
add
inc
movsl
popf
cmp
push
sub
push
scas
in
leave
push
add
jp
inc
pop
xor
cmc
ret
rcl
xlat
pop
jae
pop
mov
dec
sub
rcr
dec
add
rorb
aad
mov
popa
adc
sarb
js
loop
inc
cmp
pop
sbbb
hlt
repz
cmpsb
sti
mov
push
js
shrl
scas
dec
and
movsb
insl
cmp
inc
stc
mov
mov
pop
jo
fldcw
es
or
and
scas
cmpsl
push
jle
jle
fcomps
test
and
fiaddl
mov
sbbb
mov
sbb
sbb
mov
bound
mov
ss
xor
adc
gs
jno
popf
pextrw
mov
rcrl
sbb
and
bound
inc
push
or
dec
in
jecxz
jmp
in
popf
cmc
hlt
push
movsl
addr16
es
pop
andb
jo
mov
sbbl
cltd
jae
push
fs
push
push
aad
or
cmp
add
xchg
dec
dec
loope
sub
in
and
jl
lods
xchg
cmp
scas
rcrb
or
shrl
cmp
data16
push
xor
out
add
adcl
or
dec
dec
movsl
lea
and
bound
pop
dec
iret
lahf
ret
xlat
xchg
in
test
and
xchg
mov
pop
adc
mov
movlps
fwait
out
jmp
mov
sub
bound
movsb
mov
push
jecxz
push
mov
call
dec
in
repz
sub
lods
sbb
pushf
gs
dec
mov
pusha
and
mov
aam
xchg
xchg
xor
jbe
sbb
or
or
mov
in
adc
sbb
leave
push
imul
nop
or
mov
rorb
ds
shrl
call
push
fnstsw
jno
aam
mov
xorl
xchg
xchg
into
movsl
and
mov
cmp
mov
js
arpl
mov
sbb
test
in
imul
or
add
cs
out
cmp
ret
test
in
mov
das
pop
push
push
enter
adc
dec
mov
loopne
femms
lea
in
stc
sbbb
dec
push
fdivs
call
dec
xor
mov
sub
pushf
cli
aaa
inc
lret
xor
arpl
xchg
push
inc
std
mov
sbb
mov
out
jmp
cmp
jge
add
out
dec
cs
sbb
push
mov
mov
pop
dec
movsl
or
xor
addr16
dec
fnsave
mov
inc
mov
and
lcall
fsubr
sbb
pop
in
bound
data16
or
pop
scas
pop
js
mov
adc
lock
addl
xchg
xchg
mulb
push
loop
mov
inc
bound
and
je
mov
andb
mov
jne
mov
pop
lea
mov
push
daa
in
lret
popa
aaa
cwtl
loopne
leave
pop
call
das
mov
rcr
bound
sbb
shl
fwait
xor
add
xlat
lods
test
pop
mov
ds
sub
sbb
sub
hlt
aas
ret
popf
mov
pop
jno
or
scas
sbb
dec
sbb
mov
sahf
out
cmpsl
daa
fcmovnb
pop
mov
mov
dec
pop
negb
xor
lret
lds
add
test
add
pushl
xbegin
out
mov
mov
xchg
jnp
int
incl
and
nop
jne
hlt
push
mov
jnp
push
stos
aaa
sbb
scas
addr16
daa
or
jle
clc
pushf
bound
xchg
std
jno
jg
dec
and
mov
add
pop
cs
mov
sub
out
adc
int3
aas
xchg
jp
ffree
fsubl
ret
loop
add
clc
arpl
aam
inc
in
js
and
cmc
adc
push
mov
or
sub
lds
jb
jl
jecxz
out
mov
int
inc
fs
aam
ret
pop
add
sub
fcmovb
loopne
outsl
mov
inc
mov
jmp
sti
rcr
lods
adc
cmp
mov
iret
and
xor
inc
pop
imul
inc
pusha
loopne
scas
cmp
lods
shlb
call
repnz
jno
das
add
mov
xor
stos
addr16
ja
mov
dec
fs
lcall
fadd
fmull
sbb
dec
movsb
push
mov
cmpsl
stos
cmp
dec
and
loopne
ja
ds
shlb
mov
mov
mov
insb
jle
mov
pop
js
int3
add
lods
jle
lods
cmp
shlb
fldt
lods
push
sub
xor
inc
std
dec
cmpsb
xor
push
arpl
xchg
into
dec
std
lods
cmp
lock
sbb
mov
sub
and
aas
add
push
fidivrs
data16
adc
or
test
scas
shr
sbb
mull
pop
inc
pop
mov
cltd
int3
rorl
or
push
lods
jae
mov
ret
iret
popa
js
adc
shrb
out
mov
mov
popa
cld
mulb
insb
sti
pop
mov
negl
in
jge
mov
aam
xor
ret
push
lahf
repnz
std
cwtl
push
rorl
xor
jnp
push
and
xchg
inc
out
cwtl
out
dec
and
mov
sbb
std
jo
mov
sahf
sub
mov
loopne
sbb
fs
dec
dec
addr16
jbe
aaa
push
cmp
or
xor
add
and
bound
lds
sbb
in
test
sub
test
inc
data16
inc
test
push
lods
pop
push
push
mov
shl
fisttps
push
cli
jl
in
push
mov
lcall
movsb
ss
aas
imul
lock
xchg
je
or
xor
push
add
pop
and
testb
and
bound
mov
rorb
ljmp
pop
jae
movsb
jl
push
cld
adc
movsb
mov
in
or
adc
pushf
xor
xor
shll
out
mov
int3
gs
mov
pop
push
fidivs
sbb
and
cmp
mov
ret
and
xchg
out
xchg
adc
sbb
ret
lds
xor
dec
jne
into
fmull
xorb
dec
test
repz
mov
push
test
scas
mov
inc
arpl
aaa
in
dec
dec
xchg
sub
push
mov
inc
dec
popa
add
lock
and
ds
add
mov
push
push
andl
add
ret
subl
call
and
mov
enter
popa
lods
dec
cmp
sbb
xchg
and
lcall
in
and
arpl
dec
or
aaa
aam
insl
sub
xchg
push
cmp
mov
dec
ja
jbe
pop
cmc
cwtl
jle
adc
mov
fwait
test
js
outsl
stos
in
out
inc
and
iret
enter
xchg
sub
ds
stos
fnsave
icebp
adc
add
mov
rol
ficoml
nop
sub
movsb
xorl
and
adc
dec
fidivl
cmpsl
push
scas
jmp
dec
jg
seta
mov
mov
pop
rclb
cmp
sar
shll
cmp
addl
les
lahf
jae
and
inc
sub
jge
push
add
add
es
push
sbb
jmp
mov
jg
inc
rdmsr
shrl
mov
mov
iret
or
fdivl
hlt
in
mov
jbe
mov
shlb
jae
loopne
jo
insb
js
lea
hlt
ret
inc
cmp
push
lcall
in
pusha
mov
push
popf
call
push
and
push
jge
push
outsl
inc
sub
out
or
sbb
sbb
sbb
push
add
fsubrs
sub
fldcw
rcrl
cwtl
mov
push
je
in
jne
xchg
jnp
xchg
mov
xsha1
cmpsb
iret
mov
cmp
cs
and
pushf
mov
push
xchg
pop
adc
push
negb
daa
jbe
jge
cwtl
cld
jae
jne
sub
and
inc
outsl
or
lock
nop
inc
scas
loope
and
sub
rolb
mov
and
fiaddl
and
push
and
adc
leave
leave
jns
adc
lods
movsb
pop
adc
inc
push
push
mov
psrlq
aaa
cmp
out
jb
jmp
mov
cltd
add
jns
enter
sbb
inc
push
in
ja
loope
xor
mov
push
mov
adc
int
int3
cld
cwtl
cmpsl
in
in
push
push
dec
out
xor
frstor
or
or
sbb
sbb
fldl
std
dec
mov
shr
xchg
lret
sbb
mov
mov
sti
rcr
sub
adc
cld
jge
push
pop
sub
jae
jge
negb
cli
push
stos
adc
pusha
mov
es
jno
jae
jmp
pop
pop
call
imul
sbb
add
jb
xchg
aad
xchg
inc
int
add
andl
pop
mov
nop
es
int3
mov
dec
aam
xlat
insb
jecxz
shr
jo
test
xchg
pushf
icebp
dec
inc
sbb
dec
stos
ss
rcll
sub
sbb
sbb
pop
mov
lods
jns
testl
sarl
push
xchg
jmp
orb
pop
adc
sbb
cld
hlt
pusha
mul
add
pop
sbb
mov
jae
mov
mov
xor
lcall
cltd
mov
mov
mov
fsubl
and
rcrb
sub
scas
add
rcrb
int
incl
xchg
dec
and
rorb
leave
xchg
push
sub
add
stos
or
push
xchg
pop
stos
adc
jl
rol
mov
pusha
cmp
movsl
adc
es
movb
sti
push
test
enter
sbb
or
int3
or
clc
and
jbe
pop
popf
cmpsl
addr16
leave
int
inc
lret
insb
loopne
int
fiaddl
mov
xor
inc
aas
and
loope
and
mov
int
and
aas
mov
nop
movb
es
mov
stos
enter
int3
jl
push
add
out
pop
pop
lds
push
push
xor
popf
lea
inc
push
pop
lods
pop
arpl
popa
imul
dec
mov
lea
iret
push
add
cmp
xchg
sub
scas
xchg
mov
in
sub
icebp
dec
adc
inc
mov
adc
mov
test
add
sbb
ja
out
xchg
fadds
ss
sub
push
out
movsb
and
gs
and
lea
outsl
mov
andl
testl
sbb
sahf
enter
fucomi
gs
lock
stos
push
xchg
push
lcall
jmp
daa
jp
inc
dec
pop
pushf
ljmp
movsl
pusha
sti
cld
push
in
movl
loop
xchg
xchg
cmp
and
lds
test
xchg
dec
jecxz
cmpsb
sarb
adc
iret
adc
and
xlat
cmp
mov
shl
and
add
sahf
loope
rclb
pop
adc
mov
and
or
into
cmp
mov
push
mov
imul
popf
cmc
ja
cmpsl
pop
lock
add
stos
pop
adc
jnp
cmp
mov
repnz
bound
cmp
cmpsl
es
xchg
dec
xchg
cmp
inc
bound
out
jp
mov
repnz
and
mov
aaa
les
loop
int3
inc
inc
xor
stos
fcmovnb
pusha
stos
ljmp
repz
call
mov
ffree
imul
jmp
mov
popf
je
jns
data16
mov
gs
pop
dec
scas
jecxz
loope
adc
and
int
call
jmp
clc
ja
xchg
push
cmc
idivl
scas
and
and
int
mov
xor
xchg
daa
repnz
testb
push
add
leave
and
out
ficomps
stos
inc
cmpsl
mov
xchg
sub
scas
inc
jg,pt
mov
int3
push
push
inc
imul
shlb
test
and
iret
and
mov
dec
ret
cmp
dec
adc
add
jne
movsl
sub
pop
push
cmpsl
jp
mov
add
sbbb
movsb
jle
das
mov
cli
cmp
add
aas
aas
sub
push
je
out
lods
xchg
fnstcw
stc
xor
xor
outsb
loop
mov
dec
add
repz
push
and
xchg
aas
add
push
lods
pushf
jl
xchg
pop
fisttpll
sbb
dec
add
mov
xor
mov
enter
lds
movsl
adcb
jo
outsb
sub
ret
mov
pop
push
or
jle
sub
mov
out
shlb
cmp
or
sbb
adc
clc
push
pop
mov
sahf
lds
cmpb
imul
pop
sbb
in
jmp
inc
test
lcall
push
xchg
xor
fs
cmp
dec
push
sbb
gs
push
ficoml
sti
rclb
call
insb
fistpll
push
repnz
orl
sbb
push
cmp
xor
test
jmp
xor
xor
out
jge
jg
and
in
es
pop
imul
jp
movsl
jnp
arpl
pop
call
and
jle
cmp
lock
cmp
bound
xchg
add
pop
popf
das
adcb
popf
adc
cltd
cwtl
mov
in
jl
inc
fucomi
mov
sub
in
push
pop
cmpsb
cmc
add
fcoms
leave
fadd
jge
jge
imul
sub
pop
jp
mov
and
dec
icebp
sti
shrl
cmpsl
mov
stos
add
pop
test
and
cmpb
cvtps2pi
mov
mov
xorl
mov
add
mov
jl
inc
xor
jmp
rclb
lods
subl
cmp
cmp
inc
outsl
out
mov
push
frstor
sub
fisttps
mov
mov
lds
jg
repnz
push
mov
jge
out
mov
ljmp
mov
push
test
jecxz
loop
cmp
jmp
mov
int
outsl
mov
mov
cmc
xchg
scas
adc
xlat
sbb
push
ljmp
adc
mov
rcr
enter
cmpsl
bound
mov
int3
or
repz
movsb
popf
pop
lret
sub
stos
sub
mov
cs
and
mov
aam
ret
mov
ret
jle
pop
and
dec
mov
sub
imul
jno
inc
aaa
lock
pop
dec
pop
jg
lret
bound
pop
inc
sub
push
pushw
hlt
jg
xor
test
push
outsl
xor
lahf
push
mov
cmp
jno
pop
mov
pop
push
data16
and
aaa
or
cs
lret
arpl
push
ljmp
mov
inc
jl
jmp
adc
movsl
js
aas
outsb
lret
pop
add
scas
hlt
pop
cmpsb
outsl
or
mov
gs
test
in
mov
mov
push
divl
cmp
and
mov
sbb
mov
push
sub
lods
das
loopne
and
cmp
js
popf
lcall
xchg
outsl
mov
push
imulb
fnstenv
or
mov
xlat
and
movsl
cmp
jge
inc
sub
scas
inc
sti
push
sarl
pushf
das
cmp
add
aam
sti
push
or
rcr
lcall
mov
leave
inc
daa
call
cmp
loope
sbb
push
dec
fbstp
mov
ss
arpl
or
push
mov
pop
xor
fstp
jae
and
out
dec
jl
add
jmp
cltd
call
mov
jecxz
sub
adc
cmovl
mov
mov
mov
xchg
lods
loope
leave
and
addr16
shlb
outsl
jns
ret
fisubl
js
cmp
add
mov
add
rcrb
push
dec
pop
negl
cmpsb
jge
add
and
sbb
xchg
mov
mov
or
sub
lods
cmc
dec
ljmp
jbe
gs
call
loop
adc
jge
dec
andb
sahf
mov
arpl
movsl
sbb
insb
notl
adc
enter
outsb
adc
aad
or
jmp
scas
xlat
xor
cmpsb
mov
cmp
inc
fcmovnb
pop
pop
out
mov
and
push
mov
sbb
lods
or
pop
dec
popa
adcl
xor
xchg
jmp
sub
mov
and
mov
test
xlat
daa
andb
xchg
mov
hlt
divl
dec
int3
lods
sbb
sub
mov
ja
pop
add
sbb
push
xchg
in
inc
popa
xchg
sub
imul
mov
aas
hlt
cld
sbb
mov
adc
push
cwtl
popa
xchg
jno
or
ja
adc
xchg
sbb
jo
fnsave
outsl
jns
pushf
mov
adc
pop
inc
adc
sub
xor
mov
mov
ret
pop
inc
xchg
mov
cltd
and
cwtl
addr16
addl
test
mov
inc
mov
inc
repz
mov
loopne
inc
xchg
mov
xchg
cs
sbb
in
cmc
push
out
leave
insb
fnstcw
fdiv
push
add
xchg
jle
fidivl
mov
stc
jne
xor
out
cltd
sub
push
dec
in
ljmp
pop
ljmp
pushf
je
inc
sub
decb
dec
iret
xchg
push
sub
repz
aam
xchg
mov
mov
lock
lcall
inc
push
pop
cmp
loope
xor
xchg
je
in
test
lret
push
jo
shll
mov
xchg
leave
lret
mov
outsb
xorb
xchg
scas
mov
pop
cmc
into
mov
in
sbb
jno
int
push
sbb
xchg
lods
les
xlat
sti
in
cmc
cmp
sbb
repnz
loope
daa
imul
scas
lds
daa
aas
pop
cmc
jle
das
pop
jo
jle
jns
stc
clc
sub
sub
xor
pusha
mov
inc
xor
mov
mov
subb
mov
fwait
jecxz
and
adc
lret
into
xor
test
dec
bound
aas
aas
outsb
and
in
addr16
or
jno
pop
jge
or
jge
popf
xlat
or
push
xchg
and
jbe
imul
dec
or
testb
lea
ds
fbstp
xchg
pop
pop
xchg
sub
ret
cmc
stc
or
in
jle
jb
push
js
xchg
lret
imul
testl
arpl
jmp
into
xchg
incl
mov
das
fmull
pop
dec
pop
jle
gs
std
out
and
and
lods
jg
fistps
addb
in
cmp
push
xchg
scas
pop
icebp
popf
jmp
jle
out
js
adc
mov
rol
sub
push
outsb
test
lds
idivb
dec
push
out
sub
pop
loope
repz
or
mov
pop
test
lds
inc
mov
in
push
cmp
inc
and
push
adc
xlat
jb
xor
andb
lds
ja
jne
ss
call
int
lea
fs
jle
inc
mov
push
aas
xchg
adc
cmp
popf
rcrl
ret
jecxz
push
adc
pop
xchg
in
int3
sbb
add
mov
stos
xchg
dec
mov
sub
cli
or
aad
add
dec
push
cltd
popa
mov
aad
and
mov
movsb
cmp
ret
jle
roll
mov
testl
ss
sub
mov
pop
pop
jmp
adc
arpl
fcmovb
jge
out
jge
ds
jb
popa
int3
lret
xchg
mov
push
test
mov
shrb
cmp
mov
stos
js
js
outsl
cltd
xor
mov
jmp
mov
imul
mov
bound
insl
pop
jnp
adc
fadds
fs
stc
mov
sub
xor
cmpsb
mov
test
sti
nop
repnz
or
xchg
daa
sbb
push
fsubs
imul
xchg
jmp
inc
adc
jp
inc
repnz
sbb
loope
inc
cld
mov
add
sub
in
dec
aam
subb
xchg
inc
fimull
push
adc
mov
dec
mov
push
xchg
subb
or
mov
jge
xchg
push
cmc
lds
leave
jnp
imul
push
or
icebp
jg
js
cmp
jnp
mov
jl
not
push
nop
dec
dec
mov
jae
mulb
sbb
cmp
dec
dec
pop
aam
aaa
push
pop
imulb
fldcw
sbb
sbb
fmull
fbstp
es
repnz
sub
popa
cmp
outsb
in
test
testb
xchg
in
das
mov
in
loop
and
mov
cmc
mov
mov
cmp
out
xor
inc
lret
lea
mov
push
lds
addr16
push
adc
xchg
cmpsl
pop
out
in
jne
test
icebp
pop
or
inc
scas
push
cwtl
fidivrl
fs
das
test
std
jbe
sub
lods
xor
sub
jl
rclb
adc
arpl
in
loopne
mov
add
fmuls
mov
mov
ds
dec
rorb
dec
loopne
in
orl
pop
aaa
pop
into
out
xchg
les
scas
xlat
mov
fldt
fnstenv
std
in
imul
movsl
cmp
adc
add
ret
in
push
test
jp
test
inc
cmpsb
nop
add
push
ja
push
inc
pushf
mov
push
in
mov
clc
jae
out
cmp
das
orb
jle
divl
mov
sarb
adc
or
lock
sub
pop
nop
inc
mov
ret
sub
in
push
out
push
push
ljmp
xlat
clc
mov
xchg
imul
insl
stos
and
aas
inc
jbe
sbb
inc
inc
imul
pop
dec
jnp
jg
insl
aad
sahf
incl
or
mov
out
fwait
sub
or
push
loop
jo
xchg
ret
fwait
xchg
or
ret
mov
jno
dec
pop
sahf
xor
ds
mov
fcomps
jl
fildll
gs
das
test
mov
gs
das
cmp
xchg
and
add
mov
lahf
jl
inc
jno
and
fcoml
sarb
rcr
inc
xchg
sub
push
lock
add
mov
sbb
fldenv
nop
cmp
mov
movl
out
pop
cmp
push
pop
cmp
add
scas
jo
dec
xchg
jb
jecxz
clc
jecxz
ret
popl
in
lods
adc
aas
lret
aad
jae
cmpsl
jno
mov
sahf
shrl
cmp
or
fs
xor
push
push
fs
add
xor
xchg
xchg
pop
lock
fwait
movsl
cmp
xor
mov
mov
ret
inc
in
icebp
test
pop
outsl
cli
push
mov
adc
pop
mov
lods
add
mov
aaa
icebp
repz
dec
aaa
xchg
jle
xchg
into
jge
add
incl
lcall
stc
mov
dec
arpl
sub
sub
sub
pop
cmp
jmp
lods
cmp
mov
stos
scas
sbb
cltd
ret
mov
pushf
xor
mov
pop
add
inc
jle
xorl
lret
orl
mov
arpl
dec
aad
out
xor
mov
ret
scas
xchg
insb
and
dec
inc
xchg
lock
mov
adc
dec
sbb
mov
lahf
jle
dec
enter
mov
dec
or
jns
inc
ror
inc
mov
ret
inc
ds
push
dec
mov
outsb
cli
popf
cmp
pop
call
lds
divps
je
xchg
leave
mov
cmc
call
inc
xchg
fwait
repnz
popa
fwait
adc
cmp
cli
mov
iret
mov
add
jns
daa
inc
mov
add
popf
xor
test
mov
adc
leave
sbb
sub
push
fcom
aam
std
or
test
decb
lcall
call
sbb
jae
into
dec
pop
mov
xor
mov
test
push
pop
lock
pusha
pop
movsl
pop
fwait
cmpsl
fwait
adc
jge
mov
daa
and
test
ret
ds
xlat
push
dec
xchg
jns
enter
clc
das
stos
test
jno
jnp
addr16
es
test
push
xchg
pop
jae
mov
xor
outsb
imul
mov
sbb
inc
daa
dec
clc
jle
adc
add
and
inc
sbb
lret
push
out
in
inc
inc
sbb
fidivrs
aad
jmp
jg
nop
movsb
cmp
into
sub
pop
sub
add
dec
icebp
push
xchg
mov
test
cmp
mov
xchg
data16
mov
mov
int
push
pop
cmp
rcrl
aaa
out
jle
push
add
push
fidivrl
push
popf
loopne
aam
dec
sbb
pop
xor
sar
add
cmc
sbb
stos
xchg
pop
inc
xchg
add
xor
jmp
adc
or
outsb
loope
mov
and
cmpsb
sub
int3
ljmp
mov
add
fsubp
in
cmpsb
xchg
gs
mov
ret
hlt
jno
push
popa
insl
sbb
popl
sbbl
pop
inc
jmp
in
in
mov
jmp
inc
insl
cmc
jns
jae
xchg
sub
aad
fsubr
testl
mov
ja
movsl
call
bound
testw
insb
js
repz
dec
adc
movsbl
cmc
lds
cmpsl
push
sbb
lahf
js
push
and
inc
fwait
mov
pusha
mov
and
subb
popa
call
jle,pn
scas
xor
popf
fsubrp
mov
test
ja
loopne
or
add
shrb
pop
pusha
movsl
mov
xchg
pop
mov
popa
jl
pop
xchg
sub
xchg
fildll
sbb
jb
daa
ds
dec
into
push
je
sub
push
or
cmc
xlat
ljmp
and
js
mov
mov
adc
in
rol
pusha
testl
jge
jp
add
pop
dec
cmp
adcb
pop
in
cmp
lret
fidivrl
add
inc
cmp
out
sub
xorb
shrl
xchg
cld
pop
mov
out
add
pop
xchg
ss
out
sbbl
jecxz
mov
in
clc
iret
flds
inc
mov
or
pop
cli
jp
pop
jmp
adc
jo
cltd
inc
fcmovne
add
xlat
sub
adc
je
xchg
sub
das
xchg
mov
inc
sbb
pushl
jae
sbb
mov
sbb
loope
cs
jl
sub
cmp
pop
xchg
adc
scas
inc
push
fmull
lahf
ljmp
loopne
lcall
aad
cmp
shll
int
stos
mov
jmp
clc
lds
xlat
scas
std
xchg
jecxz
lahf
int3
test
stos
xor
push
int3
std
mov
push
pop
in
inc
push
rcrb
out
inc
ficoml
xchg
cmpsb
icebp
mov
lods
and
shlb
scas
inc
test
ret
jns
fisubl
adc
gs
sbb
scas
inc
stc
push
mov
enter
sti
jmp
xlat
icebp
jge
pop
scas
push
inc
fldenv
in
pop
ds
call
fwait
add
jne
cmpb
mov
push
push
cmp
sub
mov
into
pop
sahf
push
out
jnp
insb
sub
adc
dec
push
iret
flds
sbb
push
je
leave
lret
test
xchg
sbb
pop
cmp
sub
cmpsb
std
mov
fimuls
es
subb
int
mov
and
sub
or
cmp
dec
pop
ss
push
cmovb
dec
mov
jecxz
cmp
xor
xchg
xor
aam
inc
lock
cmc
ret
push
pushf
cmovnp
inc
popa
cwtl
bound
add
orl
sbb
adc
cltd
sbb
das
popa
jo
rcrl
adc
mov
or
mov
push
mov
xchg
cmp
outsl
pop
sahf
push
in
mov
ret
jnp
inc
push
out
push
inc
mov
dec
jmp
or
pop
mov
out
mov
mov
ds
repz
and
sub
ljmp
or
mov
and
dec
nop
orl
cmp
fistpl
and
fldt
lahf
mull
push
mull
adc
push
in
aam
jb
jmp
mov
outsl
push
xchg
xchg
pop
and
in
cltd
adc
push
fs
jbe
push
xor
jl
dec
sbb
jo
or
xor
ret
nop
test
xor
lret
xor
pop
out
or
xchg
jg
jg
int
imul
test
sbb
xlat
outsb
mov
xchg
jecxz
pop
or
sbb
xchg
add
movsl
dec
sub
shll
or
call
dec
mov
xor
insl
sbb
pusha
mov
xchg
xchg
sub
cwtl
mov
sub
bound
cmc
cmp
dec
fs
and
pop
and
fwait
jno
aas
fisttpl
hlt
adc
outsb
popa
outsl
jl
int3
arpl
das
icebp
cmp
sub
test
sbb
lret
imul
test
adc
jecxz
xchg
adc
push
pop
stc
je
mov
nop
dec
jp
cmc
loope
fsubp
bnd
and
pusha
jl
add
orl
clc
pop
and
jg
fdivs
jecxz
insb
lcall
adc
xor
sarl
pushf
inc
dec
or
jl
pop
pop
jg
push
mov
cmp
cld
stos
ss
cmp
stos
pop
push
test
xor
int
fnsave
jnp
out
rcr
push
rcrl
and
loop
dec
cmc
jmp
out
lret
mov
sub
push
shlb
jo
add
cmp
testb
sub
cwtl
das
test
scas
leave
mov
inc
je
add
imul
fcomip
xor
pop
adc
mov
dec
enter
pusha
jmp
pop
inc
gs
adc
inc
mov
cld
xchg
test
dec
std
incb
call
aam
cmp
pop
nop
sub
lret
mov
loope
pushf
popf
mov
aas
push
xor
sbb
mov
inc
popa
mov
testl
push
xchg
xchg
xor
notl
mov
cmc
and
int
ljmp
cmp
dec
bound
sti
inc
mov
mov
rclb
or
sbb
cmp
cmpsl
push
out
mov
jge
push
testb
jecxz
insb
inc
push
outsl
jmp
lds
stc
enter
dec
jae
or
lcall
adc
mov
mov
test
in
in
adc
sbb
inc
mull
xchg
stc
xchg
jecxz
dec
dec
adc
sbb
negb
aaa
jg
cmp
pusha
stos
jmp
das
sti
push
jo
test
mov
loopne
and
rorb
jp
pop
push
cmp
jecxz
cs
test
test
xor
std
xor
and
test
inc
sub
dec
aaa
dec
mov
jmp
mov
jecxz
adc
popa
sbb
xor
outsb
out
stc
iret
andl
adc
mov
fidivl
xchg
inc
inc
xchg
aas
jmp
push
cli
or
cmp
test
mov
movsb
adc
pusha
scas
orb
xchg
pop
cmp
inc
out
push
sub
rclb
in
cltd
das
ficoms
nop
out
or
cmp
xlat
jnp
in
push
adc
daa
inc
outsb
pop
push
jno
loopne
in
cli
adc
sub
test
int
out
xlat
outsb
loopne
imul
in
out
lods
data16
mov
pop
ror
or
sarb
pop
shlb
cld
pushf
scas
fildl
and
inc
cmp
inc
jp
out
push
test
mov
in
add
adc
mov
push
mov
jmp
add
lret
sti
push
in
dec
aas
pop
cmc
cmp
lcall
stos
xor
test
inc
cmc
xor
cmp
loope
mov
hlt
mov
jcxz
stos
and
sbb
mov
xchg
in
dec
dec
xor
mov
or
leave
out
xlat
sub
dec
jne
sub
push
mov
test
mov
inc
dec
fsubrs
push
gs
cwtl
sbb
in
cmp
jnp
dec
dec
adc
sbb
jbe
in
mov
ss
ss
pop
xchg
jne
lahf
int
rorb
xchg
jo
stc
sbb
call
push
in
into
shlb
inc
dec
pop
xor
movsb
cltd
mov
aaa
repnz
inc
pop
mov
and
in
nop
jb
aam
dec
fnstsw
data16
sub
push
lock
mov
xor
adc
cld
push
fcoms
cli
mov
xlat
sub
out
sbb
xchg
xor
daa
fs
sbb
call
in
rcll
add
mov
out
xor
or
inc
fisttpll
jg
lods
outsl
cmpsb
xchg
mov
es
fcmove
and
aam
xor
test
cmpsb
pop
shl
je
outsb
hlt
popf
and
sub
jg
adc
addr16
xlat
es
gs
jge
sub
adc
pop
pusha
aas
jecxz
add
add
repz
or
xlat
cs
loope
mov
mov
scas
adcb
lcall
test
cli
xchg
xor
mov
add
stc
jne
adc
jmp
mov
mov
stos
shrl
into
fimull
mov
xor
xchg
push
aad
js
pop
repz
hlt
add
shll
cmp
pop
divl
arpl
lcall
popa
sbb
push
ja
sar
arpl
mov
mov
inc
cld
cld
mov
inc
fcomps
lret
int
dec
or
enter
xchg
nop
imul
sbb
lods
mov
loopne
or
mov
xor
sub
popf
aas
xchg
push
fwait
ret
lcall
outsb
ret
pop
mov
out
les
mov
lods
jmp
jle
lds
repnz
outsl
jne
outsl
xchg
push
dec
orl
and
or
dec
loop
stos
inc
in
add
sti
pop
pop
addr16
mov
ret
ret
adc
insb
mov
gs
push
inc
fisubrs
jmp
inc
in
jns
push
cmc
dec
mov
outsl
mov
jl
inc
xchg
jno
dec
ja
adc
ja
loopne
and
das
add
das
sahf
loopne
adc
push
push
icebp
jns
fimuls
push
or
les
in
mov
daa
cli
push
sbb
lods
xrelease
fsts
addr16
xchg
and
cmpsb
cltd
push
push
jnp
cmp
ja
jb
dec
cmp
jnp
idivl
popl
dec
cmp
lcall
fwait
cmp
and
das
add
xchg
adc
repnz
data16
lahf
xchg
out
fldt
add
int
sbb
xor
fnstenv
inc
and
mov
pop
cmpsb
adc
push
popf
in
ret
pop
cld
lods
push
push
mov
rcrl
cld
call
xor
popa
inc
pushf
movsb
adc
sbb
repz
push
or
dec
xchg
add
icebp
inc
addr16
mov
push
sub
xchg
jmp
lret
push
pop
repnz
pop
iret
mull
push
and
movsl
mov
dec
testb
popf
and
daa
es
xor
push
jge
push
push
xchg
in
imul
popf
out
andb
std
push
xor
push
outsl
pop
sub
shrb
adc
and
or
pushf
rclb
xchg
xor
dec
pop
lahf
dec
cmp
out
subl
pop
jbe
out
stos
or
cwtl
arpl
cmpb
mov
or
out
inc
push
out
xchg
das
repnz
je
jle
icebp
mov
mov
addr16
jp
xchg
cmp
cmp
cltd
add
pop
push
pop
pop
testb
movsl
inc
lods
lret
pop
pop
xor
pop
push
and
fnsave
cmc
and
call
lods
push
aaa
xor
inc
in
pop
pushf
xor
mov
ret
sbb
add
dec
mov
xor
gs
fcmovb
jge
jmp
xorl
pushf
cli
cmp
bnd
loopne
sbb
sbbl
ljmp
push
adc
popf
xor
jne
popa
add
arpl
jo
call
shr
push
popf
test
rorl
pusha
fcmovnu
sbb
push
jno
and
shl
test
fsqrt
jne
movb
imull
push
out
xchg
push
sbb
popa
icebp
mov
or
xrelease
inc
fmuls
mov
fdiv
aaa
hlt
and
shrb
outsb
jle
adc
cmpsb
cmp
pop
stos
push
fbstp
movl
push
data16
pop
arpl
mov
jg
mov
dec
lcall
cwtl
das
mov
and
or
push
xchg
mov
gs
pop
in
adc
pop
sbb
hlt
imul
nop
cmpsb
mov
jg
call
shll
aad
mov
arpl
outsl
and
js
dec
inc
clc
cmc
mov
pop
in
lock
cmp
xor
xor
stc
jmp
out
add
xchg
jb
mov
fidivs
lret
adc
xchg
rorl
lock
mov
cmp
sbb
js
sub
repz
jo
dec
cli
dec
dec
push
out
iret
insl
aaa
into
cmp
dec
ja
sub
jae
shll
xor
das
or
int3
and
dec
in
pop
sbb
xor
or
roll
in
jl
and
pop
sbb
aaa
cwtl
add
or
dec
loopne
and
xchg
xchg
aas
shll
xchg
imul
in
mov
negl
cmp
cld
outsl
mov
aam
int
out
out
outsl
and
jp
stc
xchg
jg
inc
dec
aam
sbb
les
or
mov
jno
lods
repnz
icebp
mov
stos
jl
adc
lea
xchg
xchg
sub
rcl
pop
inc
hlt
mov
inc
cld
dec
fs
and
adc
push
cmpsb
dec
test
jb
test
xchg
imul
xchg
adc
insl
add
in
push
iret
js
pop
jge
pusha
je
pop
xchg
lods
inc
and
dec
add
push
jmp
or
fs
adc
push
dec
sbb
mov
inc
sbb
xor
jl
xchg
stos
sbb
push
dec
mov
and
add
push
inc
in
mov
jge
aad
xor
cmp
adc
jge
in
xchg
stos
pop
repz
ja
and
push
mov
xorb
hlt
push
add
loop
rorl
lahf
subl
rol
ficompl
xchg
inc
mov
inc
and
jle
jmp
cs
imul
adc
mov
jp
mov
mov
xchg
push
lret
sarl
add
xor
inc
mov
movzbl
push
or
outsl
pushf
arpl
repnz
dec
inc
outsl
jnp
insl
mov
mov
mov
push
fwait
es
adc
std
jne
lods
stos
jne
mov
adc
jmp
inc
jp
cmp
orl
inc
out
adc
rolb
or
dec
xchg
mov
xchg
fwait
jecxz
add
adc
pop
arpl
mov
jp
sbb
pop
outsl
mov
or
leave
ja
cmp
cmovno
xor
push
nop
mov
ficomps
mov
les
inc
fiadds
xchg
insb
mul
xor
dec
jb
stc
xchg
fisubrs
in
sub
test
movsb
sbb
jmp
in
mov
inc
addr16
inc
mov
sbb
and
aad
mov
lret
fnstenv
xchg
clc
cmp
sub
pushf
pop
add
and
cmpsb
dec
mov
xor
inc
pop
sub
mov
push
push
xor
push
mov
mov
xchg
add
sub
push
mov
pushf
mov
add
mov
cmp
shl
jle
mov
in
mull
xchg
mov
dec
pop
out
sbb
fcomp
orl
mov
sub
stc
fdivrp
inc
fs
or
scas
ss
je
xor
cmp
icebp
or
xor
test
adc
out
xor
cmp
mov
cmpsb
jmp
fmull
push
test
adc
std
push
add
fucomip
or
ss
xchg
ret
xchg
ds
push
out
jno
je
loope
jl
sbb
hlt
js
lret
stos
inc
lds
or
pusha
leave
pop
xchg
lods
test
cmp
fwait
push
cmp
jbe
icebp
xchg
mov
adc
data16
aad
sub
pop
xor
in
jle
out
fsts
pusha
mov
cmp
gs
dec
clc
mov
mov
fldl
mov
daa
jle
lcall
aaa
push
dec
adc
mulb
cwtl
jl
ret
insl
adc
or
aam
out
popa
xchg
sub
or
xorb
sub
cmp
cmp
les
data16
sub
mov
xchg
cmp
sbb
addl
mov
scas
in
ljmp
popa
ret
cmpsb
push
push
cmp
pop
imul
leave
push
inc
scas
xchg
gs
sbb
dec
mov
xchg
push
mov
test
ret
jl
xor
into
fistps
out
sbb
movsl
push
cmc
mov
movsb
out
push
cmp
fwait
out
mov
sbb
test
pop
add
leave
imul
jo
inc
adc
mov
aaa
jbe
push
pushf
pop
test
sub
jbe
jg
ret
jnp
shl
fnstenv
shlb
lahf
xchg
inc
inc
xor
iret
inc
mov
mov
push
xchg
mov
mov
mov
mov
lds
push
and
fildl
lea
popf
mov
std
inc
adc
in
pop
js
inc
mov
jae
or
out
stc
jg
out
gs
in
cmpsl
mov
add
je
leave
lock
jnp
sti
shlb
mov
data16
cmp
add
popf
in
or
ds
test
xchg
lret
fsubl
push
faddl
push
adc
adc
out
xor
in
cwtl
psllw
ljmp
imul
pushf
cli
ljmp
mov
lret
adcl
push
imulb
cli
lods
fldenv
shll
sub
mov
ret
into
lret
or
pop
mov
jl
ds
inc
cmp
in
inc
mov
pop
mov
jge
pop
ljmp
push
in
adc
lahf
idiv
mov
cmpsb
cld
and
push
aam
jg
ret
loope
xchg
sahf
push
and
push
loop
enter
xchg
add
push
stos
mov
dec
sti
jbe
int
push
into
pusha
fnstenv
mov
addr16
add
inc
xchg
push
mov
loop
jp
jnp
ret
and
dec
loope
aaa
mov
push
mov
push
lea
dec
pop
call
aaa
xchg
shlb
inc
cmp
mov
add
push
xchg
and
mov
add
dec
repnz
rcll
fnstcw
into
scas
scas
fiaddl
push
lods
jp
lcall
jo
push
xchg
pushf
shl
xchg
fimuls
sahf
sub
mov
ss
iret
es
lret
or
push
push
sbb
push
mov
stc
outsb
pop
mov
cmpsl
dec
js
jmp
subl
frstor
add
or
xchg
cmc
push
pop
xchg
jmp
ds
lods
xor
enter
sbbb
xor
push
rcrb
into
mov
fldl2t
and
and
sub
push
mov
repz
mov
arpl
or
jae
xchg
imul
pop
inc
mov
xor
sbb
and
in
icebp
inc
jg
jge
je
scas
fwait
call
mov
in
pop
jmp
loop
ljmp
mov
xor
ficoml
xor
pop
int3
fdivrl
aam
and
fidivrl
push
push
mov
sbb
push
ret
cmp
lds
popf
arpl
adcb
mov
mov
mov
insl
shlb
dec
adc
dec
cmpsb
test
mov
hlt
mov
adc
sbb
aas
bound
out
push
ljmp
scas
inc
outsb
xchg
dec
inc
or
cli
sub
jnp
jmp
jg
cltd
lock
bound
stc
pushf
aaa
pop
xchg
mov
xchg
sub
mov
or
mov
fcmove
inc
or
push
outsl
xor
xor
push
mov
inc
sbb
fisubl
xor
or
adc
gs
add
xchg
fs
inc
shl
cmpsb
in
fidivl
ja
cwtl
pop
mov
cmpsl
cmpsl
mov
inc
inc
cli
pop
sbbb
adc
nop
mov
sbb
mov
xor
loop
lds
jle
out
iret
xchg
adc
arpl
fldenvs
dec
dec
cmp
addr16
icebp
xchg
pop
xor
push
mov
gs
std
add
clc
nop
cmp
stos
mov
push
ds
push
stc
push
cmp
and
aaa
fimuls
das
repnz
cmp
adc
mov
fildl
adc
sahf
into
js
add
xor
push
cwtl
and
dec
pop
adc
jae
mov
jno
aaa
stos
inc
test
jb
cmc
mov
ss
inc
jb
lea
sub
popa
adc
xorl
mov
cli
pushf
adc
and
ret
test
inc
into
je
inc
mov
idivl
or
rcrl
insb
inc
out
dec
gs
cmp
jo
cmp
push
fimuls
dec
or
pop
cmp
scas
test
mov
cwtl
test
mov
je
gs
lds
shrl
adcb
ret
xor
jbe
insb
adcb
or
adc
mov
fsubrs
mov
ja
test
add
loope
mov
cs
jo
lods
add
sbb
int
or
pop
arpl
lea
cmp
fnstenv
sub
pop
mov
dec
call
test
adcb
sbb
fs
repz
hlt
jb
sub
lea
nop
and
shrb
mov
stc
cmp
loop
imul
push
mov
fucomip
call
sub
pop
mov
cmp
fwait
dec
in
push
push
out
push
lods
imul
mov
clc
daa
pop
call
xchg
fidivl
inc
fisubl
clc
and
sub
js
data16
imul
push
add
out
sbbl
out
cmpsb
sub
and
roll
fsubrp
rorl
mov
xchg
lea
or
mov
pusha
out
pop
cmp
into
adc
es
dec
pop
or
jb
sub
mov
dec
cmp
jnp
push
fucomp
xor
sub
daa
int3
xchg
or
sarb
insl
into
outsl
mov
shll
jecxz
lcall
aas
ret
and
cmp
xor
bound
jmp
pop
ja
mov
insb
mov
adcb
sub
xchg
addr16
jno
cmp
lock
dec
xor
mov
push
ja
adc
push
jecxz
mov
push
in
cld
push
pop
ds
fdivs
jo
mov
les
aam
movsb
inc
push
pop
lret
jmp
fisttps
jb
sub
fistpl
cmp
in
cmp
fdivs
aam
pushf
adc
jmp
sub
adc
jmp
mov
and
imul
popa
movsl
fidivl
sub
sarl
pop
loop
insl
mov
mov
fldt
flds
jmp
cmp
lods
jge
out
mov
xchg
daa
arpl
pop
rcll
lret
jmp
hlt
push
jecxz
cmpsl
lea
cltd
pop
jno
dec
mov
jne
stos
sbb
es
mov
or
loop
xor
outsl
jmp
xor
mov
ret
cmp
mov
test
imul
pop
stos
mov
les
xchg
fidivs
dec
call
mov
or
xor
enter
lret
imul
or
shrl
xlat
addr16
adc
xchg
cmp
jb
repz
into
mov
jno
sbb
lods
jg
pop
enter
jecxz
dec
ds
sub
in
sub
aas
iret
imul
popa
iret
jns
cld
cmp
gs
inc
cmpsb
mov
mulb
icebp
leave
mov
inc
push
sub
sbb
push
rcll
sub
and
fnstcw
or
cmpl
int
movsb
les
scas
xor
xchg
mov
xchg
hlt
pop
push
pop
das
cwtl
jge
lahf
scas
pop
dec
add
es
inc
out
rcll
fs
xchg
or
xchg
lods
out
mov
jae
lock
inc
add
sub
lret
dec
pop
mov
mov
in
push
jno
push
xor
cmc
mov
jbe
popa
mulb
cmp
out
sbb
stos
ret
dec
mov
rcll
mov
mov
cwtl
push
mov
ljmp
mov
xor
sbb
out
sti
dec
in
dec
push
or
cmp
lea
xor
sbb
ljmp
ljmp
ljmp
rcrb
or
andb
sub
lea
jmp
jne
cs
mov
or
lods
shrl
in
mov
sub
cmc
hlt
insb
lahf
sbb
lret
dec
imul
and
nop
cs
ret
decl
lods
int3
rcll
es
mov
popa
mov
hlt
mov
mov
push
inc
fldl
mov
out
jmp
xor
dec
test
cmp
lods
push
push
mov
cmp
out
mov
mov
int
rcrb
mov
jmp
inc
pop
das
fnstsw
cmp
adc
dec
inc
mov
dec
fstl
or
mov
mov
bound
popf
fbstp
fistps
pop
sub
mov
jo
test
mov
xchg
xlat
jp
inc
lahf
fsubs
sahf
mov
push
or
jne
cmp
mov
arpl
xor
dec
cltd
lods
dec
out
pop
nop
clc
in
dec
pop
out
cmp
sahf
pop
jmp
push
adc
int
push
fistpl
daa
sbb
xor
pop
call
xor
imul
sti
xchg
cld
scas
jae
sbb
pxor
outsb
mov
stos
inc
mov
popf
mov
jle
leave
arpl
xchg
pop
fs
cmc
adc
sti
leave
bound
jne
stc
cmp
out
ret
fadds
mov
pop
adc
lds
outsl
push
dec
sub
dec
mov
lea
sarb
ljmp
push
xchg
pop
in
xchg
push
int
mov
jne
lock
imul
adc
mov
in
xor
test
pushf
mov
mov
arpl
push
jo
into
mov
repnz
mov
add
or
enter
xor
push
jle
ljmp
mov
or
dec
imul
pop
push
aam
mov
orb
inc
mov
sub
pop
dec
inc
mov
xchg
out
roll
and
cmp
imul
jge
xor
xor
add
scas
add
adc
fidivrs
sub
in
mov
data16
scas
cmpsl
fcompl
sub
rol
fnstsw
fldenv
cmp
add
add
mov
loopne
xchg
inc
pop
inc
test
pop
bound
mov
pop
test
or
pusha
jl
sub
jo
dec
les
repz
ja
rcrb
xchg
adcb
jl
push
inc
jo
ljmp
addr16
inc
mov
les
mov
push
jg
repz
movsl
jmp
or
stc
bound
or
aas
stos
in
mov
or
lret
adc
jno
aad
and
inc
inc
or
je
loopne
xchg
pop
jp
iret
mov
call
icebp
mov
cmpsb
add
mov
lcall
ja
fisubl
movsb
les
jae
cmp
stc
cmp
imul
aad
imul
jg
rcl
out
lar
cwtl
gs
mov
and
mov
gs
fiaddl
nop
inc
scas
movsl
inc
cmpl
dec
jbe
adc
iret
pop
xchg
jno
cmp
scas
or
pop
pop
scas
gs
mov
stos
enter
jbe
mov
dec
dec
rol
in
inc
loope
inc
aad
xor
pop
jno
jb
xor
xor
shr
mov
imul
rcrl
mov
ret
mov
or
lds
gs
xor
mov
or
xchg
pushf
xor
jnp
fdivs
sbb
shrl
jb
arpl
shrl
mov
ljmp
fcomp
out
std
testl
sbb
test
adc
in
test
fwait
push
pop
mov
xchg
pop
hlt
add
stos
jle
pop
enter
inc
ljmp
gs
adc
cmp
lea
push
mov
mov
out
sbb
es
adc
dec
and
repz
stos
mov
insl
enter
cs
xchg
add
ret
popf
ss
aaa
aaa
in
xchg
push
dec
mov
fisttps
xchg
mov
mov
mov
add
ljmp
inc
xchg
cmp
dec
icebp
loopne
push
fdivr
cmp
js
inc
test
leave
int
gs
cmpsb
scas
pop
ret
ror
mov
test
jne
push
out
xor
dec
test
or
icebp
sahf
imul
and
adcb
sbb
dec
popa
add
mov
scas
stos
jle
fstl
dec
mov
fisttpll
sub
in
sbb
mov
push
call
daa
aas
sahf
xor
jmp
fcompl
mov
jno
and
sbb
hlt
cmp
scas
imul
sub
push
stos
jle
jae
jmp
or
mov
jae
je
xchg
jbe
mov
int3
jecxz
sbb
ja
pop
aaa
sti
and
xor
test
jmp
jb
cmp
xor
sbb
out
data16
fdivl
cmpb
std
adcb
jns,pt
cmpsl
xchg
nop
xchg
ljmp
mov
out
notb
bound
inc
bnd
lods
stos
aaa
xchg
inc
inc
test
js
out
test
test
addr16
stos
pop
test
loope
fisubrs
pop
sbb
clc
fiadds
mov
sub
mov
pop
ret
insb
jae
sbb
and
cmpsl
push
cld
sbb
jo
outsb
das
inc
push
inc
mov
mov
dec
frstor
es
mov
or
lods
lea
cli
insl
adc
hlt
pop
add
xchg
mov
push
cmp
loopne
cmpsl
out
push
sbb
cmpsb
xchg
push
mov
xor
aas
sbb
scas
or
adc
and
ss
loope
hlt
push
idivb
addr16
in
sahf
pop
xor
js
xor
dec
sbb
cs
in
cmpsl
jne
outsb
addl
aaa
pushf
je
or
cs
jp
rorl
dec
loope
leave
sbbl
into
outsb
mov
lahf
or
sbb
sub
rcrl
dec
mov
sub
xchg
insl
inc
rcrb
loopne
je
gs
rorl
dec
loop
iret
out
out
out
lret
or
sahf
xorb
mov
cltd
xor
out
jnp
std
lods
pcmpeqd
and
and
and
inc
rcll
test
rorl
test
jecxz
pop
arpl
sbb
mov
push
push
clc
jg
or
mov
cwtl
lods
shlb
push
out
jns
ret
mov
inc
sahf
cmp
mov
push
int
adc
sub
dec
pop
adc
xchg
xchg
jp
out
lret
ficoms
cmpb
in
ja
xchg
pop
ja
jecxz
cltd
loopne
movd
daa
xchg
dec
xor
imul
dec
int
movsl
mov
xchg
pop
sub
mov
inc
inc
leave
mov
mov
fdivs
aad
mov
push
push
rcrb
shrb
cwtl
out
inc
add
fs
adcb
jg
ljmp
enter
aaa
mov
shrb
or
out
cmpsl
adc
dec
aam
mov
dec
pop
inc
movsb
inc
inc
sahf
in
repnz
cmp
leave
add
mov
inc
jmp
xchg
sbb
fsubs
mov
paddd
or
cmovbe
sub
sub
sbb
rcll
sub
sub
repz
lock
pop
add
pop
sahf
lahf
inc
or
lcall
and
loopne
rclb
xorl
mov
jl
inc
ret
push
lods
jecxz
add
jecxz
movsl
add
ss
sbb
int
jbe
ds
add
add
sahf
mov
mov
lret
pop
sarl
sub
inc
cmpsb
rorb
in
ja
jge
jmp
pop
cmpsl
jmp
fs
fistpl
shll
or
sub
lea
push
add
leave
dec
dec
rol
add
add
in
pusha
mov
jnp
add
push
push
pop
cmp
fisttpll
add
xchg
inc
cmpsl
ret
dec
fcomip
enter
jbe
shlb
in
pop
sbb
loopne
sbb
push
es
pop
jle
fsubr
cld
or
mov
out
int3
cmp
sub
adc
sbb
fnsave
unpckhps
sbb
jl
adc
jb
sarb
notl
test
pop
xchg
and
lcall
arpl
arpl
in
xor
stos
bound
cmpsl
loop
ja
xchg
push
dec
cmp
inc
cwtl
adcb
fstl
leave
stc
cld
fldt
inc
cmpsb
xchg
push
push
mov
pop
mov
clc
push
push
data16
add
mov
ja
xchg
imul
mov
int3
insl
add
adc
lahf
lret
jecxz
out
clc
dec
mov
adcb
jne
and
jl
data16
adc
int3
arpl
adc
mov
push
mov
int
jmp
xchg
scas
cmp
clc
inc
test
leave
lret
lcall
mov
lcall
jo
push
mov
pop
xor
mov
inc
mov
imul
mov
pop
or
cmc
xlat
adc
or
jge
and
and
pop
push
fdivs
sbbl
push
loopne
mov
cld
loop
shlb
divb
pop
pop
mov
mov
adc
cmp
stos
jg
sub
pop
rclb
pop
push
jmp
or
push
pop
inc
push
loope
imul
and
jb
inc
mov
push
je
into
xchg
push
and
xlat
loopne
pop
loop
pop
in
loop
dec
push
mov
lcall
ficoms
lret
ret
jae
rcl
arpl
add
mov
jg
cmp
popf
jns
adcb
test
sbb
and
ljmp
cmc
lea
add
xchg
xchg
cmp
xor
in
dec
test
ficompl
lahf
ss
pop
lahf
mov
filds
push
pop
jbe
inc
xor
in
jl
imulb
mov
repz
insl
cmc
ja
ss
mov
jmp
ss
lock
inc
ss
cmp
adc
stos
daa
imul
addl
lret
jb
adc
sbb
ret
mov
push
or
aaa
ds
xchg
shrb
adc
and
lods
adc
or
addr16
lock
iret
out
divl
int3
leave
pusha
sti
shll
cmp
out
test
push
mov
ficoml
rol
aam
test
inc
cmc
push
sbb
fs
or
jle
fsts
pop
adc
iret
lods
push
movsb
and
scas
xchg
inc
pop
sbb
cmp
dec
pop
dec
inc
fucomp
loop
add
mov
test
fnstenv
pop
ficomps
mov
add
jecxz
inc
inc
call
cmpl
sub
sub
popf
pusha
pop
pop
stos
test
jno
sub
inc
ficoml
lods
mov
int3
mov
pushf
sbb
pop
cmp
iret
push
adc
mov
lret
mov
push
and
xlat
push
jbe
cmpsb
cwtl
inc
sahf
or
cpuid
push
cmp
or
push
push
fwait
inc
sub
scas
lret
lods
xlat
mov
jle
jne
xchg
cmpsl
int
lods
iret
mov
arpl
cli
aas
ljmp
push
mov
xchg
stos
adc
icebp
xor
je
insl
add
mov
mov
cmp
icebp
pop
inc
sub
lret
mov
dec
pop
repz
jbe
outsb
sub
jmp
ds
lret
adc
data16
insl
scas
xchg
aam
insl
inc
stos
daa
popa
dec
aam
cmp
pop
xor
out
sti
add
lods
dec
fs
ljmp
pushf
arpl
and
sbb
cli
jne
movsl
data16
push
in
push
jg
jmp
pop
lret
mov
inc
outsl
or
jl
cmp
into
or
xchg
push
dec
jp
dec
pusha
out
inc
fmull
repnz
movsb
jbe
ljmp
stos
sbb
xchg
and
cmp
push
sahf
sbb
jl
xor
negb
pusha
mov
cwtl
das
xchg
icebp
test
cld
push
loopne
or
stc
js
out
sbb
jno
xchg
sbb
mov
cltd
jmp
out
pop
cmp
lea
test
pusha
jl
shrl
dec
loope
or
adc
shl
xor
scas
fstl
data16
notb
sub
aam
imul
aaa
adc
dec
aaa
or
gs
fs
pop
fnstcw
scas
mov
add
in
lea
dec
mov
sub
inc
rol
jge
in
in
lods
xor
sbb
into
add
arpl
push
pushl
jae
lods
divl
dec
mov
cmp
lods
push
jne
loopne
push
sbb
shll
cwtl
int3
test
test
and
fbstp
or
xorb
mov
cmpsb
outsl
adc
mov
imul
push
insl
xchg
push
loopne
or
adc
std
xchg
push
mov
stc
inc
pop
xor
jno,pn
js
jp
inc
icebp
movsl
jmp
dec
mov
cli
daa
push
push
push
xchg
sarb
popf
out
aaa
sahf
xor
pop
add
fdivrs
add
movsb
xor
and
sbb
ss
roll
dec
dec
ljmpw
mov
popf
add
ja
push
addb
cs
ja
pop
adc
push
push
mov
aad
mov
aad
xor
sub
cmp
mov
dec
or
andb
cmp
jb
sub
jnp
inc
mov
stc
hlt
mov
gs
push
push
jns
std
cltd
stos
mov
push
and
enter
ds
and
ret
repz
push
cmp
call
aas
cmp
adcb
cmpsb
lret
movsl
xor
stos
outsl
negl
repnz
fnsave
test
jns
ljmp
out
xchg
jl
jo
pop
mov
aaa
sbb
mov
xchg
sub
pop
incb
cmp
xlat
hlt
and
fmulp
jno
xor
cmp
jae
scas
sub
jnp
xchg
ja
repnz
cmpsl
mov
les
and
xchg
ret
outsl
xor
jecxz
rorb
pop
cmp
add
cwtl
sub
jecxz
or
sarb
and
push
pop
addr16
sub
adc
mov
enter
inc
inc
and
mov
push
adc
cwtl
sub
mov
push
xor
mov
add
mov
cwtl
repnz
pusha
in
mov
data16
adc
cli
int3
jns
negl
leave
mov
sbbl
xchg
sarb
push
rol
jl
mov
loopne
and
int3
mov
fmul
cs
mov
mov
sbb
ret
mov
testl
jge
pusha
pop
outsb
popf
test
sti
xchg
lcall
or
movsb
pushf
xor
sbb
jns
jge
test
xchg
cmp
mov
data16
repnz
mov
mov
or
js
mov
and
enter
dec
mov
xor
repnz
rclb
shrl
testb
and
or
cmp
xor
xor
gs
jecxz
out
adc
pop
mov
mov
and
xchg
cs
imul
loop
or
push
and
mov
jecxz
lea
imul
mov
cmpsb
push
sbb
icebp
shr
in
inc
xchg
icebp
test
jne
jg
inc
imul
or
mov
sarl
jle
xor
in
pusha
repz
and
pop
jb
rclb
pop
out
ja
pop
push
out
push
addb
repnz
jnp
or
adc
inc
dec
sub
xchg
outsb
add
loope
inc
pop
or
or
adc
jle
gs
mov
add
mov
js
mov
xchg
lea
clc
arpl
stos
sbb
fdivl
jns
and
mov
xchg
testl
sbb
push
ljmp
call
jb
and
fs
sbbb
in
sahf
imul
and
les
mov
jmp
adc
and
cld
int
stos
add
mov
dec
jbe
fldenv
out
dec
jo
imulb
iret
movsb
pushf
sbb
das
or
xor
jnp
fwait
insb
pop
mov
nop
cmp
xchg
icebp
mov
movsb
adcb
lock
xchg
lret
lahf
ja
int
and
push
cwtl
imul
cs
pop
mov
pop
js
or
scas
and
testb
test
sbb
daa
and
or
and
imul
mov
sbb
lods
insl
andl
leave
mov
and
icebp
lret
xlat
xchg
fnsave
fs
inc
cltd
mov
fdivrl
sub
pop
dec
inc
mov
les
imul
sub
mov
and
and
cmc
push
sbb
ljmp
cmp
in
sub
cmc
dec
mov
push
and
add
xchg
lret
repnz
lahf
dec
fnstsw
xor
push
cmpsl
mov
fsubr
inc
int3
sub
push
test
cmpsb
pushf
repnz
loope
inc
lea
movsl
and
loope
cmp
push
sub
mov
shlb
loopne
mov
inc
lods
jae
out
and
fwait
xlat
aaa
push
or
pop
jns
test
mov
in
outsb
pop
pusha
testl
jp
sbb
out
sbb
inc
pusha
leave
pusha
cmp
test
popa
sbb
push
dec
je
dec
call
cld
push
icebp
nop
or
mov
cmp
sbb
mov
adc
scas
ss
movsl
lcall
es
inc
push
nop
adc
push
jno
popa
dec
into
enter
imul
xor
iret
and
lahf
popa
adc
sbb
dec
sub
or
addr16
outsl
xchg
push
movsl
sbb
scas
mov
fdivrs
iret
or
push
inc
scas
mov
test
cmc
cmp
ds
jae
xchg
bnd
stos
adc
test
popl
outsb
fwait
xchg
pop
in
jbe
outsl
ja
and
lea
xchg
hlt
mov
mov
ja
sub
cli
xchg
dec
hlt
sbb
popf
mov
es
sbbl
add
cltd
cli
fwait
cmp
leave
stc
in
sub
cmp
jl
dec
pop
dec
sbb
cltd
shll
cs
les
jmp
filds
or
std
or
dec
fdivrl
loop
mov
and
inc
in
jne
std
scas
mov
lods
cmp
pop
stos
and
icebp
lret
xor
jae
bound
test
lret
mov
xchg
mov
fs
mov
std
inc
cltd
out
aad
xchg
sbb
jl
mov
and
inc
pop
mov
in
scas
ret
mov
cli
cwtl
push
mov
leave
push
ret
or
jae
mov
cld
dec
mov
cli
adc
pop
or
orl
add
jb
cmpsb
jecxz
or
sub
fwait
add
enter
sbb
ficoms
sub
pop
mov
jl
jg
xor
adc
push
push
pushf
xor
repz
cmp
sub
xorps
mov
aad
repnz
mov
dec
call
or
push
lods
movsb
add
cmp
ret
jl
dec
xor
cmc
rcrl
push
mov
dec
push
pop
mov
cwtl
pop
icebp
outsl
inc
loop
adc
pop
hlt
gs
div
xchg
mov
sbb
jp
je
push
mov
mov
inc
and
sub
xor
cli
pop
jl
test
dec
jecxz
into
pop
je
sbb
and
outsb
iret
out
add
bound
pop
pop
ror
das
out
insl
in
cmp
sub
mov
mov
push
or
ds
cvtdq2ps
test
aad
scas
or
jle
sbb
inc
sbb
int3
bound
cmpsl
mov
xchg
scas
stc
mov
dec
in
scas
lret
mov
int3
jg
test
sbb
sahf
jmp
dec
loope
mov
repnz
test
sarl
lds
punpckhwd
je
cld
or
clc
in
inc
xchg
addr16
fimuls
mov
ja
mov
and
mov
adc
lret
push
jb
fsubs
and
add
test
inc
or
dec
cmp
dec
jecxz
pop
pusha
xlat
scas
test
jp
es
jno
jmp
hlt
sub
dec
rcrb
add
mov
icebp
je
pop
into
pop
xor
out
and
xor
cs
jmp
xor
cmpsl
or
cmp
out
ja
and
xchg
ja
cmp
push
bswap
push
add
shl
cs
and
mov
jbe
and
mov
push
cmp
sbb
orl
xchg
sub
xor
out
ds
sub
mov
outsl
jb
pop
sbbl
xchg
cmp
xor
mov
in
pop
cmp
insl
hlt
jbe
inc
adc
out
push
test
and
add
inc
fdiv
je
lods
inc
cmp
pop
popa
push
mov
cs
and
ret
rcll
cld
xor
xchg
push
rorb
mov
jecxz
unpcklps
add
xchg
sub
cld
enter
pusha
pushf
out
adc
packsswb
jge
mov
or
movsl
push
gs
jnp
mov
fsubl
sbb
es
add
or
imul
add
rclb
in
dec
outsb
sub
outsb
jbe
mov
lods
cltd
inc
or
pop
mov
pop
subb
xor
mov
fucom
mov
movsl
dec
inc
fnstcw
pusha
in
sbb
orb
push
out
shlb
jmp
xorb
mov
in
xchg
sbb
ret
xor
mov
add
fistpll
mov
push
fnstsw
push
leave
mov
aam
xlat
cmp
pop
stc
lret
and
xchg
loopne
repnz
mov
sbb
stc
fs
inc
and
aam
or
xchg
out
addr16
sarb
pop
aas
mov
jae
sub
cld
std
mov
data16
xchg
popl
pop
loopne,pt
loope
or
xchg
xor
sub
pushf
push
xchg
xlat
mov
enter
xchg
mov
repnz
dec
jmp
mov
popf
add
xor
mov
ss
inc
add
jmp
xor
push
push
sub
jecxz
cmp
mov
adc
adcb
mov
int3
and
lahf
inc
dec
sub
mov
xor
dec
xlat
pusha
jbe
test
sub
lahf
addr16
arpl
pop
nop
stos
sub
outsb
clc
inc
mov
jb
add
call
mov
cmpsl
fsubl
xchg
xor
jns
inc
or
je
dec
in
pop
dec
pop
mov
ret
mov
jecxz
cmp
ss
sub
jg
test
fisttpll
lret
es
or
scas
jmp
test
inc
pop
inc
or
mov
movsl
mov
or
nop
mov
ja
dec
loop
pop
inc
mov
push
add
pop
mov
push
data16
gs
ficompl
int
or
in
repnz
jp
cmp
cmp
out
leave
inc
xlat
push
dec
pop
pop
pop
sub
cmp
fsubrl
xchg
sub
sub
outsb
push
adc
popa
repz
aad
cmp
cli
sub
popf
pushf
xchg
in
pop
roll
dec
out
mov
sub
pop
or
jno
icebp
into
gs
popa
insl
repz
ffree
sbb
push
cld
stos
in
xchg
pop
dec
fwait
int
dec
std
cmc
push
out
les
xor
push
xor
out
lds
add
in
sub
cltd
fimull
in
cmp
pusha
scas
fcmovnb
fistpl
dec
test
cmp
push
test
cltd
jmp
shld
sub
mov
bound
push
pop
aad
jmp
jmp
shlb
imul
leave
mov
mov
stos
fidivl
shlb
aad
mov
movsl
xchg
leave
dec
mov
push
mov
leave
pushf
jnp
lea
testb
loope
loope
lods
loopne
iret
popf
push
push
enter
pusha
or
jb
andb
adc
mov
leave
test
in
mov
icebp
pop
addr16
and
push
sub
mov
outsb
inc
sub
xchg
sbb
out
adc
pop
push
in
jae
je
jb
daa
and
sbb
stc
je
mov
into
sub
rcrb
imul
adc
mov
orl
cmpb
notb
xlat
or
dec
loop
in
jmp
pusha
inc
mov
mov
dec
pop
sbb
add
xchg
jne
or
push
std
fcmovbe
mov
int
jnp
dec
inc
mov
std
push
outsb
mov
cmp
sub
mov
loopne
push
lods
push
lock
stos
nop
jbe
fldenv
jbe
sub
sbb
xor
adc
or
or
pushf
mov
push
mov
dec
lret
je
pop
sahf
aam
dec
push
or
inc
arpl
mov
xchg
mov
in
xor
lods
lock
jno
sbb
xor
cmp
ss
push
inc
pop
cld
lcall
clc
jae
cmp
jecxz
data16
stos
xchg
cld
imul
push
mov
jbe
fmull
loop
arpl
and
cltd
mov
cltd
loop
inc
inc
fs
sub
dec
add
js
xchg
dec
dec
adc
dec
xor
xchg
cmpsl
out
push
mov
adcl
xor
incl
mov
pop
mov
push
pop
daa
movsb
add
jne
jle
mov
lds
lret
lds
mov
inc
clc
push
fwait
cmpsl
clc
daa
cmpb
inc
xchg
pushf
fyl2xp1
sbb
stos
cmc
push
pop
movsb
dec
mov
jle
xchg
int3
or
xor
rolb
enter
cmp
faddl
sub
xchg
inc
pop
call
in
cmpsl
dec
sti
jmp
dec
scas
sub
les
jns
jecxz
inc
sub
test
movsb
push
loop
add
das
jae
xchg
sub
sbb
mov
vhsubps
int
push
jp
jmp
lret
fs
imul
scas
push
cmp
lods
push
data16
jno
shr
leave
cmpsl
js
fbstp
inc
mov
outsb
mov
mov
les
out
pop
and
test
cmpsw
ds
std
mov
xor
js
push
mov
gs
dec
sub
mov
negb
fdivs
inc
fdivrl
sbb
mov
test
inc
bound
lea
or
xchg
xor
pop
insl
inc
aaa
gs
test
pop
dec
mov
xchg
mov
xchg
mov
sahf
and
mov
mov
jbe
xor
je
jp
gs
addr16
cmp
jo
dec
fsubr
xor
sub
mov
cmp
cmp
sub
stos
sbb
xchg
add
lods
jmp
cmp
sahf
xor
or
dec
and
stos
xor
sub
in
sub
adc
cmc
clc
or
jae
orb
lcall
mov
scas
cmpsl
call
or
inc
shrb
mov
int3
pop
icebp
jo
xchg
jnp
or
inc
xchg
pop
cmp
repnz
mov
push
fs
jge
or
sbb
adc
iret
sbb
in
movsl
add
dec
outsl
cmp
sub
push
mov
shlb
fs
rep
adcl
adc
out
cld
scas
mov
cld
xlat
mull
scas
inc
jne
and
jnp
xor
mov
and
imul
in
je
cli
fisubrl
test
or
outsb
out
mov
push
add
sbb
inc
vaddsubpd
xchg
stos
mov
pop
lds
inc
pop
pop
jp
insl
lods
jle
add
out
das
jne
cmp
and
sbb
repz
popf
cmp
mov
mov
sbb
out
lret
mov
mov
or
pop
int3
aam
std
aaa
mov
movsb
cli
cmp
mov
xchg
inc
dec
mov
sub
orb
xchg
mov
lock
inc
cmpsl
push
cld
ficompl
xor
shll
mov
push
out
loope
xchg
repz
pop
xor
addr16
jnp
cmpsl
std
lret
out
jb
sub
cmp
pop
pop
test
cltd
xor
leave
xlat
xchg
dec
int
push
aad
inc
fldcw
outsb
add
test
jns
mov
or
cs
fists
ficoml
fwait
loopne
incb
aad
and
push
in
mov
xchg
dec
in
dec
mov
jge
idivb
dec
adc
pop
and
cld
stc
jo
mov
daa
add
or
daa
cwtl
sub
call
add
out
sbb
and
adc
jo
inc
jecxz
sarl
ds
push
push
test
dec
test
cs
nop
fsubrl
dec
or
cli
and
xchg
sub
mov
insb
jmp
stos
pop
sub
roll
outsb
ljmp
jp
fwait
inc
xchg
in
cmp
out
sbb
sub
test
incl
xchg
enter
and
lahf
xor
mov
jbe
jge
push
sbb
loopne
loopne
mov
dec
arpl
dec
and
jecxz
cmpsl
sub
aad
mov
sub
int
inc
dec
cmp
mov
dec
push
mov
jno
push
sbbl
pop
mov
mov
adc
ret
adc
add
movsl
call
push
inc
push
aaa
sbb
in
sbb
lds
cmp
mov
sahf
sub
cmpsl
lds
test
int3
subb
mov
cmpsb
clc
or
test
jae
cmpsb
xchg
add
xlat
fisubrl
nop
cli
scas
inc
arpl
int
aas
push
lret
sbb
lcall
lret
or
test
mov
inc
jge
ret
push
mov
lret
dec
nop
jmp
les
push
movsl
push
loop
cmp
add
sub
imul
and
loop
rolb
sub
je
loopne
icebp
out
push
inc
test
jmp
xchg
out
lods
jl
dec
scas
into
inc
pusha
sub
adc
xlat
inc
dec
iret
jne
cmp
dec
std
and
xchg
divl
rolb
popa
inc
lcall
and
in
out
mov
insl
cmpsl
std
add
xchg
js
sub
xchg
xchg
inc
push
jge
mov
adc
out
mov
mov
lds
cld
stos
daa
jo
loopne
ret
pop
add
loopne
sub
out
fmul
lods
scas
push
arpl
stos
test
test
cmc
jo
in
pushf
dec
dec
call
js
mov
in
hlt
push
clts
xchg
dec
pop
sahf
lock
lock
lods
or
aas
cmp
subl
dec
mov
adc
je
test
arpl
xlat
ljmp
and
lock
out
and
dec
mov
imul
jp
mov
fwait
enter
repz
cmp
in
mov
popf
sti
push
shl
cld
jmp
subl
clc
ret
sbb
in
push
cs
dec
mov
sub
jo
add
shll
bound
fcoml
mov
aam
call
sbb
pop
cwtl
push
stos
pop
ds
add
pop
test
ret
loop
jns
rcrb
inc
test
aam
push
data16
mov
mov
inc
ret
cltd
pop
push
mov
mov
sub
js
enter
jmp
jmp
cmp
or
push
loope
push
es
loope
xchg
xor
bound
orl
sub
inc
xor
xchg
push
mov
les
adc
daa
mov
popf
js
or
lods
mov
sbb
out
push
adc
mov
push
popf
push
in
push
cmp
xchg
out
imul
daa
pop
bound
sub
stos
xor
popf
cmp
fisubs
mov
sbb
cmp
push
cld
out
jae,pn
xchg
and
push
sarl
jbe
mov
loopne
add
pushw
sub
xchg
pop
dec
aad
push
and
cmp
in
dec
xchg
pop
jno
adc
stos
out
jne
cmp
lahf
ss
pop
out
lods
add
xor
jle
mov
and
int3
adc
test
mov
inc
xlat
jecxz
cmc
dec
in
inc
push
cmp
das
push
enter
and
jno
and
or
push
and
lret
addr16
shlb
dec
cmp
add
fnstenv
push
fimuls
data16
push
cmp
push
or
pushw
mov
sub
mov
lods
mov
xor
shrb
mov
addb
dec
loopne
fdivrs
aam
push
dec
in
dec
dec
inc
jmp
out
dec
cmpsl
xor
cmpsb
rep
adc
xchg
inc
les
aaa
pop
or
ret
sub
stc
sarl
mov
int3
enter
jge
xchg
mov
xchg
push
mov
repz
cmp
sbb
mov
sub
out
xchg
icebp
xchg
fistps
loope
mov
lds
mov
je
add
adc
cld
in
jl
pusha
mov
test
adc
jno
pop
or
imul
push
lods
mov
sbb
mov
movsl
inc
lods
push
loop
test
adc
cmp
xchg
and
cmp
stos
hlt
pop
adc
and
je
andl
sub
scas
pop
jle
xlat
lret
mov
gs
aaa
fs
cmp
and
lds
stos
bound
pusha
inc
into
ficoms
fnstenv
repz
jb
and
dec
fldenv
rclb
or
push
aam
add
fcomi
xchg
nop
aam
out
test
or
jg
cltd
sub
lods
jns
xchg
and
mov
andl
pushf
outsl
pop
hlt
pop
fnstenv
enter
lods
ljmp
pushf
arpl
outsl
les
mov
ja
lods
pop
bound
idivl
push
inc
in
add
sbb
outsl
lret
cmc
push
jmp
sub
xchg
jbe
lret
xor
int
cwtl
in
and
sbb
aas
jmp
pop
es
jg
mov
ficoms
xchg
cli
add
cmc
xchg
fsts
test
or
mov
movsl
lret
pop
or
push
call
test
sbb
push
repnz
adc
lahf
cmpsl
pop
repz
test
cmp
add
shll
sub
adc
daa
stos
sbb
mov
cmp
push
in
mov
div
mulb
add
sbb
out
push
bnd
cld
cmp
loope
rclb
mov
clc
push
loop
stos
xchg
jp
lahf
jnp
mov
and
shrl
mov
inc
aaa
push
fadds
push
push
jle
jg
pusha
jp
mov
ret
mov
cmp
cmp
add
mov
inc
jle
mov
add
nop
mov
fwait
hlt
mov
push
sub
push
inc
fstl
jbe
xor
and
xchg
sub
inc
cwtl
das
jae
dec
adc
insb
add
jno
xchg
ds
addr16
mov
jmp
cmc
loope
sar
dec
stos
pusha
ret
cmp
ss
cmp
loope
dec
ret
repnz
cwtl
cs
sbb
int3
xchg
fs
sbb
movsb
and
or
add
ss
sbb
add
push
add
xor
xchg
subb
mov
mov
xor
or
jle
stc
jnp
sub
stc
testb
outsl
fs
and
dec
mov
sarl
cmp
inc
xchg
lret
sbb
rorb
cmp
lret
jns
mov
gs
xor
jbe
ret
push
dec
xchg
std
push
fisubs
jns
ffree
cmpsb
lahf
pop
rol
dec
repz
je
test
adc
lods
ss
pushf
xchg
aas
aad
mov
mov
vxorps
sub
cmp
cmp
nop
cmp
test
xor
mov
fidivs
sub
pop
pop
testl
mov
mov
and
inc
add
lods
jb
popfw
xlat
repz
and
in
cmc
aas
aad
cmpsb
pop
enter
jmp
arpl
cwtl
push
inc
pusha
mov
pushf
mov
cmpsb
test
mov
xchg
jl
aad
jp
jp
jbe
mov
mov
jmp
psllw
pop
andb
xchg
sub
xor
mov
and
mov
mov
aaa
xor
popf
insb
push
xor
xor
dec
out
inc
mov
ljmp
mov
inc
lds
push
xor
fidivl
mov
test
sub
adc
outsl
loop
out
xchg
jb
js
gs
out
pop
mov
add
std
jp
test
mov
pop
shl
dec
lahf
push
fmuls
pop
push
jno
mov
lock
imul
icebp
mov
mov
adc
mov
gs
cmpsl
push
sub
aad
lods
push
jge
lret
scas
and
cmp
or
pop
cmpb
scas
gs
jnp
xchg
pushf
adc
mov
scas
mov
outsb
inc
cltd
xchg
cli
xor
inc
out
out
adc
xchg
pop
xchg
adc
xchg
push
adc
jle
das
cmp
data16
sub
push
in
mov
pushf
hlt
and
mov
pop
in
mov
pop
std
push
mov
cmp
sbb
adc
pusha
mov
adc
mov
jne
mov
stc
cld
call
idiv
icebp
add
dec
lcall
pop
out
push
lods
xchg
adc
xchg
in
and
shlb
in
loopew
jmp
and
and
lea
loopne
sub
pop
inc
test
lods
add
pop
adc
add
int
sbb
ss
inc
lods
inc
mov
rclb
mov
out
out
dec
mov
ficompl
push
dec
jnp
lret
sti
sub
shrl
icebp
cmpsl
jb
in
add
mov
fucomp
add
sbb
addr16
cs
nop
shl
sub
adcb
lret
sahf
cli
sbb
sbb
and
sbb
fldt
loop
sub
popl
test
aaa
jne
in
rolb
fisubl
inc
into
push
mov
dec
mov
lock
rorl
jne
incl
mov
cmpsb
in
push
std
cmc
out
push
aam
jl
rcr
add
popf
push
je
sbb
sub
mov
dec
loop
or
mov
adc
dec
mov
jg
stc
divb
rorl
jecxz
push
testb
stos
cmp
inc
push
into
out
add
sub
adc
ret
push
mov
test
iret
add
sub
out
mov
inc
sbb
pushf
in
movsl
in
mov
inc
jnp
icebp
sub
xchg
rclw
fsubrl
test
xlat
xchg
out
mov
in
sbb
pop
xor
in
mov
imul
pop
dec
pop
je
xor
bound
jnp
or
daa
mov
sub
mov
in
loop
inc
mov
shrb
xchg
lret
and
mov
dec
jecxz
repnz
pop
jp
xchg
add
mov
or
pop
mov
jbe
add
pop
test
test
pop
and
nop
jl
cltd
in
xor
inc
inc
stc
pop
cwtl
das
mov
into
sub
xchg
icebp
es
xchg
push
add
or
pop
dec
sahf
inc
ret
pop
pop
mov
loopne
adc
xchg
xor
jmp
int3
jl
mov
jbe
mov
inc
xchg
add
cmpsl
cmp
push
or
cmp
and
or
in
push
pusha
pop
cmpsb
mov
fdivp
stos
mov
mov
mov
test
sbb
mov
adc
cmp
sbb
ss
sub
xor
mov
mov
cmp
mov
rorb
inc
enter
jbe
and
test
or
xchg
ljmp
jne
add
jg
out
icebp
mov
fidivs
imul
andb
pop
cmpsb
leave
adc
mov
xchg
test
lcall
enter
into
loop
inc
and
push
int3
lret
push
inc
jmp
dec
dec
hlt
scas
mov
test
shll
and
subb
ljmp
aad
sbb
pop
mov
ds
push
dec
dec
jnp
cmp
mov
cwtl
scas
sahf
cmpsl
bound
shlb
enter
sbb
cld
addb
cmpsb
cmp
jmp
inc
addr16
or
cmpsl
incl
fisttpl
and
repz
nop
fwait
ljmp
push
pushf
scas
test
int
cmc
cmpsb
mov
pop
sub
xlat
cmp
inc
popf
sub
cmp
div
sub
in
or
cmp
bound
cltd
inc
scas
push
jo
mov
or
xchg
sub
pop
sub
insb
fstpt
add
or
mov
out
and
cmp
enter
lahf
notb
cmp
inc
adc
aaa
mov
push
add
jne
xor
adc
add
test
popf
xor
loope
lods
out
inc
popf
fsubrs
aas
and
and
mov
lret
pop
inc
or
call
ss
fdivrs
xchg
js
mov
xchg
pushl
xchg
decl
push
lods
in
jbe
adc
nop
xor
push
inc
sbb
loope
mov
add
lds
cli
jne
pop
pop
add
js
mov
adc
mov
icebp
test
adc
sbb
xchg
pop
mov
sbb
movsb
and
mov
loopne
jg
or
xor
stos
rcrb
dec
adc
and
iret
xchg
sub
leave
fcoms
jle
or
cmp
jecxz
scas
out
sbb
cmp
pop
ds
lock
bound
pop
out
pop
adc
lea
sub
push
pop
das
fcoms
lret
xchg
sub
jae
push
push
movsb
pushf
outsl
push
push
loop
sbb
dec
xor
pop
movsl
shl
ficoml
insl
jge
jmp
popl
mov
in
and
fwait
xchg
ds
mov
add
fwait
jae
mov
jae
pushl
pop
mov
mov
push
ds
pop
out
in
sub
sbb
xchg
dec
mov
rcr
test
cs
rcrl
fisttps
add
and
ret
sub
rorw
insb
aam
fldl
sub
mov
rolb
fwait
cmpsl
and
push
xchg
pop
push
call
or
pop
adc
leave
pusha
dec
push
xchg
mov
pop
out
cmp
rorl
stos
jne
add
pushf
sub
fsubs
push
and
scas
sub
out
outsl
sbb
adc
xor
repnz
jo
inc
inc
pop
in
jno
shrb
push
insb
roll
aam
push
outsb
gs
xchg
xchg
jp
xor
jbe
int3
pop
ss
xchg
sub
pop
push
jle
cwtl
pop
sub
adc
rorb
lods
outsl
imul
out
test
push
xorb
out
dec
data16
icebp
sbb
xor
aas
xchg
add
movsl
outsb
notl
and
push
dec
mov
xchg
bound
xchg
fs
insl
and
mov
sbb
pop
inc
mov
std
jmp
mov
push
nop
repnz
dec
int
jl
addr16
rcr
add
mov
pushf
add
cltd
je
xchg
aad
mov
mov
and
enter
sbb
lds
jne
imul
inc
pop
popf
nop
push
int
push
mov
or
mov
imul
push
push
jmp
and
cmp
mov
adc
cltd
lret
fdivp
loopne
sti
movsl
sahf
mov
xchg
lods
loopne
icebp
mov
dec
inc
inc
mov
clc
loope
sahf
popf
divl
xorb
jno
push
mov
fsubs
xor
jbe
pop
gs
push
add
mov
out
lcall
inc
cmc
mov
sub
out
rorb
adc
jg
xchg
insl
or
push
add
jecxz
push
in
js
pop
sbbl
add
ja
or
cltd
lock
rorb
mov
out
aas
inc
adc
aad
loopne
fstpl
mov
pop
mov
icebp
stos
xchg
sub
sub
int
xchg
sub
imul
ja
xor
out
xor
sub
sti
das
push
rorb
xchg
subl
dec
mov
sbb
decb
mov
gs
inc
fdivs
pop
and
jle
adc
aaa
nop
fs
or
shrb
adc
lcall
iret
jno
pop
mov
test
pop
xchg
insl
jg
mov
sbb
or
jl
fdivl
sub
aas
lcall
out
xor
scas
xor
mov
repz
insl
scas
cmpsb
bound
outsl
dec
stos
loop
dec
hlt
cld
xor
loop
in
loope
or
mov
mov
push
mov
pinsrw
mov
subl
scas
xor
dec
lret
mov
cmp
adc
in
xor
inc
xlat
cmc
dec
mov
push
outsb
adc
outsl
xchg
hlt
push
jecxz
scas
xor
sub
ds
out
sbb
clc
mov
ret
sub
es
mov
inc
xchg
iret
popa
js
fstps
inc
inc
flds
sub
cld
lds
xchg
mov
inc
jl
outsl
test
testb
push
std
in
nop
pop
add
xor
or
ss
iret
push
inc
notb
data16
rcll
sarb
leave
lret
in
adc
ja
xchg
bound
gs
ljmp
test
push
adc
and
xchg
test
mov
shll
inc
insb
repnz
lds
cltd
sub
repnz
repz
push
leave
mov
pop
push
jge
mov
and
insl
xchg
jo
mov
rcpps
xchg
lahf
cmpb
lods
mov
into
sub
jbe
adcb
sub
dec
aaa
mov
or
iret
sbb
cmp
mov
cmpsb
in
jnp
mov
mov
movb
sbb
insl
fadds
enter
cmp
fisubs
data16
add
fdivp
lret
jmp
in
xchg
dec
lret
push
test
call
ljmp
and
dec
test
jle
sti
js
xor
push
jecxz
fs
mov
in
mov
pop
repz
jns
or
fsts
aas
mov
add
jle
imul
out
pusha
dec
rcl
add
mov
clc
jge
fsubs
clc
int
lcall
ds
and
sbb
in
scas
pop
jmp
xor
push
jns
pushf
push
out
ljmp
push
or
lea
sar
pop
repz
dec
movsl
adc
push
jnp
adc
les
out
push
xchg
push
out
and
insb
sbbb
sti
ret
mov
adc
in
xor
lahf
pop
lret
adc
push
or
ljmp
inc
dec
mov
sub
out
stc
mov
push
sbb
mov
ficoms
lcall
adc
out
pop
sbb
pop
cli
sub
mov
adc
test
cs
add
outsl
lods
lods
inc
fistps
pusha
in
dec
dec
jg
insb
das
mov
push
jge
xor
leave
pusha
pop
cmp
out
cmpsb
lcall
sbb
mov
mov
sub
fidivs
mov
mov
icebp
rorl
pusha
out
jnp
add
outsl
sti
fsin
mov
lock
mov
aas
fistl
or
mov
pop
push
mov
or
xchg
sbb
jge
pop
sbb
dec
mov
movsl
xor
fstpl
aam
and
inc
push
cli
clc
leave
pusha
sub
out
cld
dec
cs
dec
clc
je
mov
push
push
jmp
sub
jo
mov
lcall
dec
je
jo
xchg
mov
out
or
pop
jmp
dec
data16
lods
out
sahf
jmp
iret
fbld
lock
jmp
test
pushf
jb
fildll
mov
adc
xor
sbb
dec
cmc
push
ss
out
mov
stos
aas
iret
std
add
xor
dec
cmp
popf
sbbb
dec
insl
sub
test
ja
sbb
mov
popf
adc
mov
jmp
sub
orb
sbb
cmpsl
jmp
daa
ljmp
dec
fistpll
outsb
aam
loopne
dec
cmp
out
cs
pop
sbb
mov
js
xor
mov
cmp
jg
jmp
cwtl
loope
popa
jnp,pn
push
in
mov
fdivl
iret
dec
pop
repnz
xor
lret
push
nop
mov
xlat
sbb
xor
push
out
or
int
inc
ds
in
aad
js
xor
lds
add
mov
sub
xlat
add
pop
cmp
inc
call
pop
inc
mov
repnz
aam
xlat
cmp
dec
cli
in
jns
or
xorb
add
pop
mov
movsl
ror
fmull
pushf
es
stos
test
rcrb
xchg
dec
test
inc
adc
pushf
jbe
push
jg
imul
mov
push
and
jb
sahf
or
cli
cmp
mov
push
lret
push
into
mov
test
into
test
add
pushf
ljmp
mov
xor
mov
xchg
push
jle
ss
cmp
xor
mov
push
xchg
jl
lcall
repnz
add
mov
cs
aad
dec
mov
outsb
sub
negl
inc
iret
lret
stos
shll
jg
jnp
pop
and
incb
dec
decl
scas
dec
rorl
rol
outsl
dec
das
jl
daa
xchg
lods
lahf
loope
inc
sbb
das
les
scas
xchg
enter
out
test
mov
ret
adc
cmp
ja
and
bound
lods
inc
push
cmpsb
inc
gs
and
popl
cmp
je
xchg
mov
xor
lock
lahf
jbe
call
std
adc
iret
data16
dec
or
and
aaa
pop
imul
mov
jnp
sub
sarb
fcomip
mulb
in
out
pushf
mov
xchg
imul
push
jb
pop
jmp
jno
pop
addr16
mov
outsb
jo
xchg
sahf
pushf
shrb
mov
sub
mov
inc
imull
fstl
push
and
mov
xchg
jp
xlat
jmp
jne
fmuls
mov
push
fs
xchg
pop
mov
or
lods
add
mov
and
sub
mov
pop
adc
mov
outsl
mov
shl
sub
xchg
ss
movsl
lahf
ficompl
sbb
xchg
scas
cmc
add
mov
sub
xchg
inc
out
fnsave
lea
in
mov
pop
xor
loop
stos
es
cmp
lret
pop
sbb
in
adc
ficompl
cld
push
aas
mov
add
ror
mov
jno
push
sbbl
push
loopne
iret
mov
pop
lret
inc
add
les
test
adc
hlt
xor
adc
insb
inc
sbb
test
push
stos
mov
cmp
pop
mov
mov
xchg
inc
cmp
in
loopne
mov
fs
fdivs
out
and
cli
or
stc
popa
int3
imul
sbb
ret
jge
sahf
pop
xor
cmp
imul
adc
and
test
and
or
adc
stc
xor
ds
xchg
jae
dec
movl
xchg
rorl
adc
push
sub
pop
jg
xchg
mov
lock
pop
and
and
mov
adc
push
mov
lock
add
or
push
adcl
stos
addr16
pop
inc
inc
sbb
push
insb
xchg
mov
int
icebp
mov
sbb
popf
outsb
iret
stos
mov
cmpl
mov
sbb
dec
mov
outsl
adc
rcl
mov
adc
push
cmc
outsl
ret
push
add
add
xchg
mov
cmp
ret
gs
movsl
cmp
xchg
data16
adc
cwtl
dec
faddl
cmp
sbb
inc
mov
jns
pop
in
jnp
lds
jmp
xchg
xchg
in
push
mov
fists
jle
dec
push
sub
sub
leave
mov
adc
jp
push
xor
lods
test
sti
mov
dec
or
shrl
fsubr
ret
jp
pop
inc
daa
dec
jge,pt
rcrl
push
jge
push
lea
filds
inc
out
cmp
loopne
dec
push
sub
out
inc
in
pop
ret
in
fstl
push
loopw
inc
dec
mov
or
lret
and
mov
jmp
push
iret
mov
inc
fs
sbb
stc
and
mov
and
enter
in
fbld
ja
mov
fwait
pusha
pop
xchg
inc
dec
sub
lods
cmp
push
add
movsb
pop
push
fxch
sub
into
test
or
sahf
stos
dec
jb
xchg
insb
dec
xchg
shrl
sub
pushf
mov
add
sub
inc
inc
cmp
push
insl
inc
ss
lret
and
leave
mov
iret
lods
xor
mov
test
fsubr
scas
and
pop
mov
pop
xor
xchg
pop
lock
rcrb
xor
or
push
movd
add
cmpsb
hlt
pop
push
mov
xchg
or
lcall
and
je
jb
iret
mov
sub
jecxz
add
jg
jg
push
mov
sbb
or
cmc
mov
aas
scas
bound
das
ret
fiaddl
sbb
mov
inc
sub
aam
fwait
xchg
ret
jl
mov
inc
loop
aas
mov
outsb
pop
fstpt
or
or
or
mov
jmp
jno
cmp
pushf
pop
push
xchg
mov
js
jle
fcoml
les
pop
ret
lock
mov
lret
cmpb
push
insl
mov
push
lods
pusha
xchg
jnp
inc
cltd
adc
add
in
ret
mov
iret
gs
int3
es
jbe
sub
jp
mov
mov
pop
ds
and
mov
lcall
xorb
mov
mov
mov
adc
pop
imul
sub
out
out
mov
xchg
xchg
andb
insb
ljmp
mov
jecxz
sub
rorl
js
jne
xchg
test
sbbl
in
test
mov
aad
jl
aaa
cmpsb
jns
mov
jmp
push
insb
call
mov
movsb
aaa
fisttpl
mov
fidivrl
push
or
js
jb
les
xchg
cmp
sbb
or
jmp
jmp
mov
xor
pop
or
clc
jbe
call
add
and
je
xchg
mov
data16
mov
or
dec
movsl
pop
lret
adc
xchg
xchg
insl
mov
scas
push
pop
data16
int
cmc
in
jb
xchg
mov
enter
sbb
movsl
test
pop
xchg
insb
add
js
dec
fsubrs
jae
iret
clc
aad
cmpsb
arpl
out
dec
push
or
or
cmp
xchg
cmc
mov
sub
mov
mov
mov
dec
jl
sub
mov
dec
ret
xor
inc
arpl
arpl
lret
fildl
add
pop
repz
test
cmpsl
mov
sti
jbe
pusha
adc
fstps
or
fildl
loope
movsb
and
pop
jg
or
mov
xchg
jmp
add
mov
cmpsl
pop
aas
outsb
jge
pop
mov
dec
ret
add
push
insb
xchg
insl
in
cmp
in
fidivrs
cs
xorl
sub
mov
cmp
fisttpll
icebp
push
pop
pop
mov
jmp
and
sub
punpcklbw
loop
scas
dec
pop
and
xchg
icebp
ds
inc
mov
leave
test
or
mov
shrl
jnp
sbb
inc
mov
xchg
je
js
mov
inc
insl
dec
repnz
jmp
xchg
cltd
mov
pop
and
mov
cs
adc
push
or
push
out
xchg
mov
jecxz,pn
or
lret
inc
dec
mov
xor
cmpsb
orl
pop
pop
adc
ds
cmp
sbb
lahf
xchg
adc
dec
pop
stos
push
into
insl
loopne
cmp
adc
enter
fstl
loop
xor
fidivl
lea
mov
adc
in
mov
sbb
shll
inc
andl
jl
mov
push
stc
out
cli
call
adc
andl
shlb
in
je
stos
pushf
add
daa
cmp
loopne
stc
and
inc
js
hlt
pop
mov
jnp
jae
orl
fcoms
dec
jge
mov
ret
jae
repnz
test
stos
cwtl
lock
mov
lods
dec
sub
xchg
sub
lods
inc
ret
dec
in
sti
and
inc
inc
inc
dec
aas
aaa
into
jo
lret
roll
or
pop
cmc
mov
jge
pop
cmc
sub
add
es
or
sahf
out
jge
xchg
mov
xchg
aaa
push
fimuls
or
and
pop
cmp
xlat
loop
mov
mov
cmc
aad
sbb
or
xchg
mov
xchg
pushf
cmp
iret
add
mov
xorb
call
and
xchg
cld
arpl
rorl
lea
mov
out
fnstenv
sub
data16
mov
dec
cmp
sub
mov
je
jns
into
adc
inc
lahf
cs
push
daa
inc
repnz
mov
lret
sub
jo
inc
in
mov
shll
cmc
jp
punpckhbw
sahf
push
pop
jbe
push
fs
sbb
pop
mov
lret
dec
daa
push
imul
xchg
cmp
push
sbb
xor
sub
lock
mov
mov
shrl
icebp
test
cmp
pop
dec
loopne
stc
movsb
movsl
sbb
outsb
iret
loope
out
imul
test
push
ffreep
pop
mov
inc
js
test
lcall
out
test
shl
xor
push
push
insl
je
into
imul
sub
sbb
hlt
mov
pusha
testl
jle
jae
add
push
inc
daa
jo
fisubs
jae
sbb
out
cmp
in
inc
mov
jne
je
mov
orl
popl
rcll
jne
cltd
sub
pop
xor
lds
subb
enter
insb
rorl
movsl
push
xor
jns
mov
jge
sbb
orb
push
jno
sub
mov
mov
in
dec
fwait
or
xchg
aad
mov
jbe
sahf
stos
movsl
les
dec
cmp
mov
popf
lods
mov
shlb
pop
add
jne
insb
mov
into
mov
push
pop
mov
popf
lahf
js
popa
xor
nop
lods
jge
mov
sbbb
jnp
sar
lea
in
jg
xlat
mov
push
jmp
repnz
sub
xchg
jmp
dec
pop
inc
movsb
add
inc
clc
negb
lods
dec
sahf
addl
fldcw
bound
pop
dec
add
pop
mov
fcoms
mov
sub
lahf
hlt
repz
js
inc
test
call
dec
inc
push
cmp
sbb
rclb
stos
daa
imul
inc
test
movsl
xchg
add
stc
popa
jae
xchg
push
fldcw
lods
dec
adc
test
mov
sub
sbb
pop
jo
sub
mov
fstpt
pop
xor
add
repz
je
jae
mov
iret
fs
add
mov
in
xor
lret
xlat
sbb
out
mov
pushf
xchg
cmp
jg
or
jg
add
aad
pop
xchg
das
enter
pop
scas
aad
mov
sbb
gs
js
and
movsb
nop
lds
sbb
or
pop
add
idivl
dec
out
jp
rolb
push
test
or
test
shrb
inc
and
adc
scas
inc
sbb
and
pop
cmp
inc
shll
aam
mov
dec
ficompl
mov
fldenv
test
pushf
jg
mov
mov
lds
stc
jle
mov
jl
add
and
in
sub
xor
cmp
mov
loope
insb
xor
leave
cmpsl
xchg
sti
fdiv
or
adc
outsb
iret
aas
cmp
lret
xor
insb
jecxz
mov
aas
pusha
pop
fmuls
outsb
dec
push
fbld
ja
push
in
out
jnp
out
bnd
mov
push
jp
push
push
adc
add
arpl
fs
and
scas
mov
xchg
jne
push
fldpi
cmp
aas
aad
gs
dec
aam
pop
adc
mov
cmp
inc
std
cmp
fstl
mov
pusha
test
pop
lahf
cwtl
jae
mov
ja
lods
rclb
add
jne
fsubrl
adc
or
aas
adc
scas
jp
roll
adc
inc
ds
mov
movsl
inc
scas
rorl
mov
pop
leave
cs
sbb
cli
xchg
ret
xlat
out
fidivrl
dec
aam
pusha
lock
cwtl
mov
mov
xlat
push
js
aaa
or
es
out
mov
jne
sbb
aad
dec
fisubl
pusha
in
push
movsl
sti
xchg
xlat
aaa
and
bound
das
mov
xor
insl
sbb
jo
pop
bound
daa
rcll
jle
outsb
mov
push
fstp
adc
adc
push
repz
mov
cmp
adc
add
cs
push
or
mov
sub
call
xchg
es
mov
sbb
icebp
push
pop
in
xchg
push
dec
movsl
sbb
das
loopne
sbb
cmpsb
jns
adc
dec
pop
ja
xor
mov
push
jnp
mov
mov
sub
stc
je
mov
aaa
mov
aas
rcr
gs
fidivl
pushf
xor
xchg
dec
mov
xor
xor
and
shlb
add
xchg
push
xor
xchg
jno
mov
xchg
jns
fbstp
jle
mov
dec
adc
pop
push
mov
mov
push
xchg
arpl
rcrl
xor
ficompl
jp
sub
mov
repnz
or
popa
clc
mov
push
clc
inc
rcrb
stos
dec
mov
pop
cmp
dec
in
outsb
xchg
sti
fwait
daa
inc
mov
mov
jmp
clc
in
es
ficoml
adc
js
das
xchg
cltd
mov
xchg
pop
repz
adc
dec
jp
add
jne
test
lret
or
ss
dec
cmpsb
cmp
loopne
mov
xchg
in
mov
jecxz
dec
jecxz
cmp
je
loopne
pusha
mov
adc
xor
mov
mov
das
mov
fmul
pusha
or
mov
mov
rol
shrl
ret
in
mov
cmp
lock
cld
pop
jae
mov
dec
xchg
pop
lds
sub
mov
mov
mov
sbb
mov
mov
cmp
daa
inc
inc
fnstenv
rorb
add
repnz
fcmove
nop
negl
cli
xchg
out
stos
sub
jo
cmp
fistpl
andl
pop
scas
fsubrl
sub
dec
xchg
cmp
and
mov
cmpsl
jg,pt
pop
mov
nop
and
xlat
rcrb
inc
int3
pop
xor
fs
fcompl
lods
fistps
out
xchg
cmpsl
sbb
aad
mov
jge
adc
ret
shrl
out
test
inc
pop
insl
jb
xchg
adc
ja
mov
lcall
subb
jo
notl
sub
sub
rcrb
xchg
testb
sbb
test
stos
or
data16
mov
cmc
repz
cmpsl
rol
stos
ds
mov
stos
xor
jns
mov
fmul
mov
dec
push
xor
pop
imul
pop
cltd
test
cmp
jbe
aam
dec
xchg
rcpps
adc
ficoms
loop
pusha
and
clc
jg
pop
aam
cmp
ljmp
xchg
cwtl
xor
mov
call
mov
jno
arpl
xchg
inc
sahf
xor
imul
stos
xor
push
rcll
repz
ficoml
sahf
cli
sub
sub
sub
inc
pop
adc
pop
movb
jns
jne
mov
mov
aas
add
sub
loop
jae
jbe
xchg
mov
loope
fiaddl
dec
jecxz
inc
push
ja
inc
push
int
std
xchg
xchg
add
cltd
lret
xchg
cmc
mov
or
mov
sub
or
sbb
bound
mov
out
xchg
mov
dec
in
pusha
cmp
rorl
dec
cs
int
mov
fldenv
mov
add
faddp
and
imul
scas
aam
mov
loopne
mov
addr16
and
push
and
hlt
adc
sbb
lea
in
sbb
dec
sahf
cmpsb
xor
lea
jecxz
imul
xchg
inc
mov
dec
mov
pop
aaa
push
lahf
push
push
mov
xchg
sub
rcr
xchg
lods
pop
stc
mov
push
cli
test
in
lods
or
fwait
arpl
mov
inc
mov
mov
sub
fucomi
fcos
popa
clc
cmp
cmc
dec
pop
jg
cmp
xrelease
inc
nop
imul
adc
dec
loop
outsb
sbb
cmp
ds
mov
cwtl
aaa
lea
loope
pushf
cwtl
dec
ljmp
hlt
lock
adc
cmpsb
adc
xchg
dec
jmp
hlt
mov
mov
in
cltd
movsb
xchg
sahf
sbb
iret
mov
sti
pop
dec
cmp
pop
or
sub
add
mov
add
fcomi
and
popf
dec
lcall
mov
dec
inc
pop
lcall
mov
add
fadds
mov
imul
rcrl
popa
dec
mov
daa
xchg
sub
add
sub
xchg
add
sub
orb
lret
or
dec
ficoml
lret
cmp
in
shrb
loopne
loope
push
or
aas
push
out
and
jo
mov
inc
fisttpll
movsb
sbb
lcall
pusha
mov
clc
in
ja
cmc
xor
gs
sahf
cmc
test
adcl
es
xchg
imul
shll
inc
leave
and
sti
jle
lock
pop
jae
shll
imul
mov
fnstenv
xchg
loope
loop
dec
rcl
add
and
add
sub
std
sahf
lret
shlb
aaa
movsb
push
cmp
mov
aas
mov
mov
nop
test
fnsave
lret
lret
fwait
jbe
enter
fldcw
cli
cmp
in
das
insl
xor
inc
insl
inc
lcall
and
dec
mov
loopne
xor
add
xchg
inc
fwait
inc
xchg
adc
in
or
lds
jbe
fimull
xchg
sub
ss
outsl
je
pop
insb
or
out
rdtsc
mov
xorl
and
add
xor
sbb
xor
inc
enter
cmp
imul
push
leave
pop
jo
mov
xchg
aad
mov
jge
add
pop
mov
out
pushf
cmp
mov
pop
add
cmpsb
sti
scas
cwtl
pushf
pop
dec
or
mov
xor
test
xchg
and
or
mov
sub
xchg
hlt
push
jnp
out
sti
xor
inc
pop
insb
inc
push
mov
add
or
incb
lods
ds
sub
dec
cwtl
imul
mov
repnz
mov
dec
loop
add
sbbb
xchg
adc
mov
pop
cmp
movl
mov
push
scas
push
inc
mov
dec
and
xchg
inc
mov
mov
repnz
aad
icebp
inc
test
xchg
or
sbb
push
leave
sbb
scas
dec
mov
mov
out
inc
imulb
shlb
add
inc
sarl
shlb
insb
jg
jmp
loop
mov
pop
stc
pop
mov
clc
pop
pop
xchg
popf
cmp
jnp
jge
clc
movsl
pop
int3
cs
jbe
enter
stc
in
out
jnp
das
pop
fdivrs
push
inc
mov
xor
and
into
pushf
lret
fidivrs
xchg
test
in
nop
mov
sbb
repz
addl
inc
inc
pop
and
cmpsb
xchg
jo
enter
push
lods
lods
and
xchg
sub
jnp
inc
in
mov
or
jae
sub
dec
mov
movsl
hlt
mov
sbbl
or
push
and
push
cmpsb
xchg
jmp
loop
popa
jg
inc
js
cmp
loopne
ds
push
stos
adc
push
jns
cmp
push
adc
inc
ljmp
sub
xor
mov
mov
bound
int3
loopne
int
in
test
dec
push
inc
push
dec
sub
xor
inc
push
and
mov
in
data16
mov
lods
cmp
jnp
and
xor
cmpsl
shll
and
cmpsb
js
in
mov
in
fstl
dec
dec
inc
jbe
jae
adc
or
jo
xor
inc
repz
int3
push
shll
mov
ret
xor
fdiv
mov
lahf
inc
or
dec
push
lods
dec
mov
cmc
mov
js
daa
mov
and
cmpsl
cmp
ffree
jge
ret
pushf
xor
mov
push
sub
pop
stos
jbe
bound
in
loop
cmp
cmp
add
retw
and
test
sub
mov
inc
or
sarb
stc
cmpsb
sub
pop
add
movsl
xchg
or
or
mov
shl
cmp
subb
sahf
pop
push
sbb
add
cwtl
mov
fsubr
test
sbb
addr16
arpl
notb
dec
push
or
sub
push
sub
ret
call
xchg
nop
jbe
or
push
sarb
imul
ja
lods
mov
pusha
pop
mul
jne
jmp
jge
ret
sub
shll
aaa
fwait
movsb
call
jecxz
adc
cmp
mov
cmp
imul
fistl
adc
mov
cmpsb
add
lds
in
sbbl
xchg
cmp
mov
cmp
mov
sbb
mov
out
mov
pop
mov
call
cmp
jb
jnp
sbb
cwtl
push
ja
fisttpll
cli
test
xchg
adc
stos
xlat
mov
xchg
ret
adc
xchg
shlb
aaa
test
sub
jecxz
mov
test
mov
push
fwait
push
push
das
jo
pop
clc
std
cltd
cmp
roll
scas
ficoml
sbb
mov
xor
stos
push
frstor
push
cltd
and
daa
push
notb
fiaddl
xor
fisttpll
and
add
push
movsb
pop
push
ret
aas
mov
pop
add
jg
cmp
jne
fisubs
fstl
test
sbb
js
rolb
push
vmwrite
xchg
jg
pop
mov
push
fdivl
fistps
push
out
loop
data16
aas
ret
movsl
mov
jae
cmp
sbb
cli
or
rcl
jae
int
scas
fidivrl
dec
jp
loopne
fdivl
shl
xor
fsubr
data16
inc
inc
inc
arpl
cmpsb
jg
je
sahf
lds
ljmp
adc
inc
xor
mov
jbe
pop
loopne
cmp
push
test
aam
pop
insb
jnp
inc
xchg
es
mov
inc
std
xchg
lock
cmp
movsb
inc
es
push
dec
inc
cmp
mov
lret
mov
dec
and
jp
mov
test
inc
xorb
ss
adc
xor
adc
mov
out
xor
or
into
jnp
arpl
scas
xadd
loop
int
adc
repnz
lock
xchg
adc
inc
scas
rclb
stos
dec
xorl
popf
dec
mov
jl
mov
stc
jl
pop
sbb
pop
adc
repnz
aad
int3
fcomps
rep
aad
pop
and
ja
mov
rcrb
mov
mov
fdivrp
pop
push
clc
push
inc
movsl
js
mov
push
or
jecxz
pop
pop
jo
js
jns
cs
ret
orl
mov
data16
cmp
and
cltd
test
mov
dec
mov
mov
mov
jge
aad
sub
popa
xchg
out
mov
clc
int3
sti
bound
addr16
mov
push
push
or
jo
sub
dec
fcmove
inc
cltd
das
mov
mov
mov
push
pop
ret
in
inc
imul
adc
inc
mov
fistps
xchg
scas
call
cmp
call
mov
outsl
inc
scas
into
xlat
push
incb
sti
fwait
imul
in
cmp
mov
push
loopne
mov
leave
mov
mov
add
mov
outsb
sbbl
stc
ss
mov
shlb
mull
fistl
je
inc
clc
jge
mov
cmp
or
iret
mov
push
jg
movsl
in
adc
jmp
insl
lcall
aam
add
mov
mov
xor
mov
sub
cmpb
cwtl
push
in
dec
sbb
dec
cmp
push
js
cmp
push
outsl
cmpsb
jg
mov
adcl
rol
arpl
rcrl
fs
fimuls
outsl
cmp
loope
cmp
jno
jecxz
cmc
mov
dec
jo
mov
out
xlat
sub
fisubl
adc
jae
sahf
punpckhwd
nop
pop
fbstp
cltd
push
lea
adc
fisttpll
mov
mov
andb
pop
mov
add
fwait
cmp
hlt
sbb
adc
dec
lods
fnsave
sub
fldt
shrl
fistpl
hlt
pop
gs
xor
and
xchg
push
jecxz
sub
dec
in
jl
mov
sbb
cli
enter
insb
call
xchg
add
sub
test
push
cwtl
jbe
mov
push
lss
and
out
pop
lods
lds
or
or
data16
cmpsl
mov
mov
loopne
imulb
push
sbb
mov
push
nop
enter
pop
stos
xor
inc
lret
mov
xchg
subl
fsubrs
mov
mov
stc
jp
rcrb
sti
lock
xchg
inc
adc
jge
loopne
pop
adc
lea
and
rolb
mov
es
inc
fisttpll
sub
mov
and
xor
sbb
leave
xchg
ss
ljmp
outsl
cmpsl
jle
in
mov
mov
das
imul
ds
cwtl
xor
xchg
aas
fisttps
inc
int3
cli
jmp
jne
xchg
bound
jecxz
ds
xorb
and
mov
sti
xor
push
fnstsw
clc
cmp
into
dec
out
jl
fsubr
and
jmp
icebp
dec
out
pop
cli
add
ret
xchg
mov
mov
in
fsubrl
call
or
fwait
sti
aaa
cwtl
add
mov
xchg
ljmp
pusha
pop
fdivr
add
jg
xor
leave
or
flds
ljmp
insb
xchg
pop
sar
popa
cmp
ja
dec
xchg
adc
inc
fimuls
aas
notl
mov
push
mov
sub
jne
fcoml
pop
fisubrs
mov
call
movsb
inc
dec
out
adc
push
insb
mov
xor
lds
in
in
lods
inc
sbb
or
lret
xchg
imull
add
fs
clc
pusha
pop
fsubr
inc
pusha
mov
adc
mov
push
mov
sbb
sbbl
add
sbb
xor
xor
pop
fnstcw
cmp
ss
or
cmp
mov
shrl
and
ss
xor
mov
ljmp
cmp
add
mov
fldt
cmp
and
mov
push
nop
lret
rol
fcomps
push
outsb
mov
push
js
orl
add
pop
xlat
test
cli
inc
lock
pop
mov
imull
movsl
push
push
inc
cmpb
movsl
inc
push
jae
cmp
mov
aas
add
xor
pusha
lds
jecxz
xor
jecxz
lds
repnz
dec
jnp
outsb
lods
imul
dec
sub
sbb
iret
loope
cmp
ds
mov
sbb
push
scas
or
stos
cmp
scas
cs
lret
jo
or
or
cmpsl
cmp
ss
xchg
jecxz
ja
cmpb
incl
adc
test
inc
popa
sbb
mov
insb
xor
adc
cld
movsb
jecxz
fucom
jnp
cmc
mov
push
loope
movsb
ds
gs
mov
mov
add
push
push
orb
mov
test
aas
or
mov
lods
ficoms
dec
push
push
xlat
bound
push
push
jno
add
inc
jns
xchg
cmpsl
sbb
scas
lcall
andb
sbb
test
data16
stos
jmp
fnstcw
mov
imull
lock
dec
push
pop
jne
push
xchg
mov
dec
dec
popf
cmc
cmc
pop
cmc
scas
testb
push
pop
imulb
cmp
lea
dec
movsb
movb
hlt
jne
stos
inc
jnp
jg
in
fs
jns
inc
push
mov
push
push
movsl
inc
pop
and
icebp
dec
pop
std
and
incl
out
call
outsl
decb
idiv
jnp
notl
iret
shr
je
in
mov
fsubl
inc
jns
mov
push
bnd
sub
es
cmp
mov
clc
sbb
add
pushf
scas
ljmp
fcomip
inc
add
pop
xor
adc
nop/reserved
lret
ret
icebp
push
jno
inc
scas
inc
mov
mov
push
push
or
sub
in
ror
jo
stc
pop
je
fistpl
test
rcr
out
test
dec
adc
sub
ds
lods
jmp
push
xchg
mov
cld
xchg
sbb
dec
mov
adc
stos
fsubrl
and
push
arpl
lret
mov
push
popf
std
add
xchg
pop
inc
fs
fidivl
and
mov
xor
cmc
pop
cmp
imul
das
mov
dec
je
jle
push
arpl
push
xor
or
cs
icebp
pop
jecxz
mov
push
jo
or
repnz
in
les
xorl
pop
and
mov
or
insl
test
sahf
and
cmp
mov
push
push
sbb
sub
js
and
add
jo
shrl
daa
out
aas
xlat
lret
and
ja
pop
xor
and
lret
lret
neg
sbbb
xchg
push
and
popf
testl
jo
pop
pushf
add
mov
loope
rcrl
shrl
ja
in
xchg
xchg
push
jbe
inc
push
mov
arpl
inc
mov
repz
fstps
shll
add
xchg
xchg
mov
mov
testb
mov
or
dec
call
xor
rorl
sub
pop
sarl
jecxz
rorb
cltd
icebp
test
sbb
mov
push
push
dec
push
jae
adc
xor
push
fists
cmp
cmc
sbb
jnp
clc
xchg
sub
lea
shrl
dec
pop
mov
mov
fsubrl
pop
dec
test
es
je
sub
mov
nop
jns
daa
aad
mov
inc
in
xor
insl
mov
cmpsl
cmp
push
inc
mov
aas
ss
mov
shlb
inc
pop
jns
sahf
clc
jg
and
jo
jne
sub
dec
roll
lahf
popa
jp
mov
js
pop
nop
jae
cltd
rolb
ret
cmp
cmp
jo
mov
ret
and
dec
sub
jno
xlat
les
fidivl
push
cli
test
sub
adc
das
out
jae
push
and
call
adc
es
pushf
int
shlb
shll
pushf
dec
ljmp
jge
jne
push
mov
enter
out
dec
aam
dec
inc
pusha
ja
dec
push
mov
mov
std
aam
lret
cld
ret
popf
jo
cmc
adc
xlat
rcr
ret
fnstcw
sbb
xchg
cli
addr16
loop
add
inc
pop
popf
pop
mov
inc
out
les
add
pop
mov
scas
pmulhuw
stos
xchg
pop
push
jbe
stos
push
aad
imul
mov
in
or
cwtl
incb
mov
dec
add
rcr
out
push
mov
movsl
inc
and
mov
mov
push
jge
sub
fidivrs
push
fdivl
push
push
mov
sahf
cmc
lock
mov
pusha
sub
mov
inc
decb
sbb
xchg
push
push
and
mov
out
lods
addb
lcall
jp
test
fwait
daa
in
lea
add
sub
sbbl
fs
sub
aaa
adc
outsb
or
adc
add
jno
mov
test
push
sub
pop
xchg
sbb
lods
subb
idivb
btr
sub
aas
lock
push
insl
mov
mov
fsubs
sub
and
jmp
call
jbe
cmpsb
mov
rcll
je
cwtl
leave
movsb
cmp
jmp
out
jp
mov
jno
cvttps2pi
out
or
das
les
xchg
adc
out
lret
jmp
aad
mov
xchg
mov
iret
repnz
jnp
nop
sub
fxch
pusha
or
jmp
pop
ds
shrb
ret
lcall
jne
push
mov
cwtl
imul
in
sub
cmp
ret
lcall
push
and
les
cwtl
jb
pop
imul
xchg
sbb
xor
inc
lods
xchg
dec
or
sub
movsl
cmp
cmp
test
ja
fidivs
xlat
mov
xchg
mov
push
mov
pushf
or
pop
cmpl
scas
mov
sbb
std
addr16
push
fnstsw
addb
mov
jnp
sbb
test
mov
bound
fiaddl
sbb
xchg
fildll
stc
add
inc
repz
stc
nop
rclb
bound
sti
and
sub
pop
int3
loopne
cmp
sahf
xchg
js
orb
int
xchg
dec
les
and
mov
mov
pop
sub
ja
cwtl
add
test
lahf
add
add
shl
rcrl
aaa
jae
and
ljmp
imul
mov
stc
inc
in
cmp
test
leave
push
mov
adc
and
insl
fsubrs
inc
jg
out
loop
cltd
jae
aas
sub
out
cs
aam
mov
imul
jmp
andb
es
push
dec
cmp
pusha
ss
out
cmp
lock
lea
cmp
je
mov
cmp
into
jmp
add
pop
sahf
xchg
dec
xor
and
jo
mov
int3
out
jb
in
std
dec
xchg
mov
ss
in
ret
adc
push
ss
jb
call
es
lahf
push
leave
std
testl
mov
and
iret
iret
fidivs
and
dec
aaa
inc
js
roll
push
popa
andl
dec
movsb
outsb
dec
pop
mov
cmpsl
sub
adc
sbb
scas
daa
pop
test
in
jp
sbb
cmp
fs
aam
jmp
sbb
jo
popf
pop
cmc
sbb
cmp
cmpsb
jnp
inc
fdivl
ret
stos
cmpsb
hlt
adc
les
add
mov
lock
pushf
mov
lcall
nop
jnp
xor
xchg
adc
jno
rcl
sbb
icebp
in
inc
enter
fstpl
subl
inc
outsb
loopne
mov
pop
add
imull
lret
test
lret
xchg
mov
je
jne
xor
dec
into
subl
jle
xchg
daa
out
xchg
les
mov
fistps
mov
mov
xor
fs
mov
lea
das
orb
adc
ret
mov
dec
jecxz
not
loopne
rcrl
xlat
or
out
fiadds
outsl
cli
pop
loopne
lahf
cmc
ds
repnz
push
jne
push
lret
stc
mov
popa
addl
imul
repnz
xor
add
test
bound
jl
in
sub
and
mov
shll
sub
sbb
aam
dec
pop
mov
out
dec
out
setge
lods
inc
ljmp
mov
mov
mov
xor
test
into
dec
or
and
dec
sub
rcl
lods
push
pop
push
jg
inc
cmp
stc
xchg
push
dec
loopne
aas
add
and
addr16
pop
das
outsl
dec
fsubl
push
sti
inc
push
jb,pn
aad
pushf
xchg
in
addl
mov
pop
xchg
or
test
adc
xchg
jbe
add
push
cltd
test
xchg
leave
push
adc
shl
mov
imul
std
aaa
les
repz
pop
andl
ror
leave
mov
js
cmpsb
inc
dec
jge
mov
inc
and
add
out
inc
fnstsw
sti
dec
or
ss
adc
stos
sahf
or
xor
jb
adc
inc
mov
sti
into
arpl
cmp
push
fsub
jns
push
dec
pop
adc
sahf
outsl
xchg
cmc
jmp
iret
popf
xor
sub
imul
and
fidivrs
outsl
loop
push
test
cmp
mov
in
pop
xchg
cmp
mov
in
les
test
xlat
jae
pop
add
and
add
dec
xlat
sub
pop
and
cmpsb
mov
stos
or
faddl
js
or
pop
xor
sbb
fldl
jecxz
fisttpll
inc
fcomps
fcomps
xor
cmp
aam
fidivrl
inc
scas
cmp
jg
mov
rcll
ret
es
nop
filds
into
int3
pop
inc
sub
jb
push
sbb
dec
pop
insb
orl
stc
iret
pop
inc
jl
sub
dec
mov
js
and
inc
std
mov
jne
ret
inc
or
add
or
data16
push
adc
adc
popa
enter
lods
jmp
aad
movsl
pop
push
lds
popf
push
idivb
push
lahf
sub
or
mov
mov
xorl
cmp
shll
lret
mov
pop
jnp
in
mov
jns
cmp
push
push
jnp
test
pop
sar
jg
cmp
shrl
jge
jb
or
jmp
pop
xchg
inc
in
cltd
jle
lcall
pop
test
pushf
mov
xlat
cld
outsl
out
nop
jge
cwtl
cmc
sti
mov
scas
rolb
cmp
call
mov
fdivrs
jg
pushf
mov
std
mov
outsl
int3
loopne
inc
adc
testb
lds
push
cmp
mov
movsb
pop
repz
add
rol
pusha
icebp
dec
mov
inc
iret
inc
mov
pop
push
je
mov
ja
mov
int3
and
mov
dec
add
in
mov
sti
outsb
cmp
call
adc
mov
test
loope
lods
pop
push
daa
adc
mov
arpl
or
dec
mov
lods
and
mov
xor
decl
sbb
pop
aam
mov
mov
in
or
adc
in
add
mov
adc
lcall
pop
mov
xor
or
in
jo
lods
and
or
fisttpl
lods
xor
out
popa
loopne
sahf
jb
aas
add
in
aam
loope
jo
mov
out
or
nop
arpl
jbe
pusha
nop
xlat
leave
dec
pop
imul
fstps
lret
mov
xlat
dec
jae
aaa
jnp
shlb
sarl
jl
pop
out
scas
nop
stos
mov
aam
adc
aam
nop
cs
fldt
sub
loope
xor
mov
fimuls
cmp
sub
frndint
imul
aam
loop
jg
cmp
inc
insl
mov
lret
push
and
mov
adc
and
inc
movsb
inc
and
je
lds
jnp
cld
jecxz
repnz
or
jmp
mov
mov
mov
loop
ss
mov
sub
dec
sbb
popf
aad
cmc
push
push
cmp
repnz
stos
push
push
sub
bound
sbb
sub
js
inc
aas
cmp
dec
inc
daa
test
xchg
jmp
mov
shrb
fucomi
jne
inc
inc
cli
jb
mov
lcall
lods
clc
daa
lcall
daa
jmp
leave
test
in
insb
adc
inc
sbb
push
jbe
imul
push
xchg
mov
jmp
sbb
daa
mov
dec
cmp
nop
les
fdivrs
xchg
sub
je
movsl
xor
jl
in
ret
inc
stc
fistpll
in
sub
fstps
das
push
push
mov
jo
loopne
leave
pop
out
dec
cmp
in
jae
xchg
call
into
push
jge
ficoms
daa
cmpsl
mov
scas
rcll
add
and
pop
int
add
mov
pop
jbe
cs
scas
pop
in
rcrb
dec
add
leave
mov
pop
cli
or
scas
pop
mov
mov
xchg
hlt
pusha
aaa
shrb
int3
mov
or
jmp
cmp
sub
loop
pop
shll
inc
repz
inc
xchg
imul
cmp
push
sar
inc
or
mov
mov
mov
test
insb
scas
cs
test
mov
or
sbb
mov
lea
frstor
xchg
dec
adc
push
bound
mov
cld
mov
dec
imul
mov
mov
stos
dec
add
in
sbb
cmp
pop
in
xchg
push
out
mov
adc
movsl
inc
cmp
out
cli
je
inc
test
movsl
sub
dec
dec
mov
aam
mov
cs
fsts
sub
imul
mov
mov
test
cmp
daa
jb
sub
or
loop
loope
mov
jp
adc
pushf
adc
jns
xor
je
fsubs
sbb
mov
mov
mov
inc
sbb
mov
mov
adc
jl
or
aam
xorb
or
pop
mov
addl
shl
das
icebp
imul
cld
jne
adc
aad
xor
cmpsb
jbe
pusha
pop
mov
and
iretw
add
daa
insb
inc
out
xchg
incb
notb
lods
mov
add
xor
lods
sbbl
cli
dec
xchg
or
inc
jo
int
sar
jg
mov
xchg
xchg
fs
dec
and
sbb
ret
xor
es
inc
inc
xor
jge
sub
lock
pop
sub
mov
popa
dec
push
in
jge
fsubs
sub
and
cmpsl
out
jbe
fidivs
sub
xchg
cwtl
fdivrs
pop
mov
jns
sub
mov
aas
jecxz
mov
loopne
pop
cwtl
jno
rclb
aaa
sub
je
lret
mov
in
in
nop
fsts
cmp
out
cltd
xor
sub
filds
mov
pop
xor
pop
imul
or
sub
inc
popa
sbb
lods
sub
js
dec
xor
inc
xchg
movsb
xchg
cltd
pop
hlt
lret
fcmovnb
movl
pop
mov
lret
mov
in
pop
repnz
and
and
sahf
sbb
sub
sub
aas
daa
adc
fwait
mov
mov
out
les
jge
lea
mov
addb
mov
dec
int
jge
and
sbb
addb
mov
xchg
sahf
pop
fisttpll
cmp
sbb
adc
sub
mov
dec
out
iret
loope
iret
aad
shrl
nop
loope
ret
ret
or
pusha
fildl
mov
ds
outsb
xor
and
xchg
pop
jns
xor
ja
mov
int3
cmp
std
mov
loope
aas
push
push
jne
push
lods
int3
sahf
add
push
pop
inc
sbb
nop
pop
mov
add
lock
dec
cmp
fdiv
imul
out
xchg
outsb
xchg
pop
xlat
repz
shll
cwtl
adcb
sbbl
lret
fistps
add
pusha
jle
mov
les
mov
jl
mov
pop
adc
and
push
loope
inc
xchg
push
repnz
pop
aas
inc
jbe
mov
push
push
iret
xchg
mov
xor
cmp
je
jbe
ret
jnp
xlat
push
leave
and
ja
repnz
lret
xor
sbb
adc
push
leave
add
pop
in
lea
jg
jno
jno
mov
cmc
std
sub
inc
xlat
sub
mov
jecxz
xlat
and
xor
adc
in
mov
mov
pop
cmc
inc
mov
in
adc
fists
mov
and
mov
je
movsb
enter
add
fwait
ss
or
mov
pop
gs
nop
fs
pslld
pop
inc
push
ja
push
push
sub
repz
push
xchg
sub
adc
aaa
jbe
add
dec
push
imul
scas
lahf
push
mov
ja
push
sub
add
pop
lods
iret
popf
pop
fldcw
pop
push
das
test
dec
push
mov
jg
stos
lods
mov
push
out
or
repnz
push
outsb
push
mov
cli
xchg
scas
adc
dec
mov
inc
cltd
adc
bound
and
pop
aas
es
je
test
int
sbb
adcl
mov
lret
or
adc
int
cmpsl
bound
das
mov
pop
jmp
push
and
nop
mov
adc
cwtl
das
rorl
cs
rcrl
xchg
notb
inc
or
pop
pop
hlt
test
ja
inc
rolb
mov
bound
mov
lea
xchg
sbb
mov
dec
ds
sub
and
leave
stos
dec
jg
jl
arpl
sbb
inc
pushf
imul
push
fldl2e
or
mov
ja
inc
dec
fs
mov
sbb
sbb
test
sub
lds
jne
adc
int3
xchg
arpl
cmp
or
cmpb
xor
aas
ret
shr
cwtl
scas
push
push
add
xor
shr
jnp
repz
dec
and
inc
sbb
sahf
mov
test
scas
mov
mov
ds
adc
xchg
inc
fiadds
adc
push
jnp
cmp
ret
hlt
mov
jno
or
push
or
aad
rcrb
test
push
cmpsl
mov
push
ror
sub
shl
lcall
push
lods
pusha
push
out
test
sub
pop
sub
pop
lcall
orb
ret
insl
sbb
inc
xor
insl
push
fwait
inc
fisttpll
sti
xchg
xor
fistpl
ds
adc
jnp
call
add
xchg
stos
sbb
push
pop
xor
les
push
mov
or
addr16
mov
push
insl
call
bound
fmul
xchg
inc
lods
scas
jbe
push
call
lcall
sub
in
ljmp
xchg
inc
push
fst
push
add
hlt
aam
jg
mov
jnp
out
loopne
scas
mov
lret
mov
call
into
sbb
jne
dec
aaa
mov
addb
sub
jmp
mov
fmul
iret
mov
push
xchg
push
pop
testb
fidivrs
sub
lcall
push
and
jb
push
sti
repz
push
push
into
push
jo
aad
dec
int3
mov
sbb
and
iret
pop
ja
int
fidivrs
adc
mov
inc
jno
lods
idivl
adc
int3
cltd
inc
pop
shl
mov
test
insl
adc
cltd
dec
mov
add
jnp
xchg
test
scas
add
addb
mov
int
loopne
sub
mov
or
and
cmpsb
lret
loope
out
cmp
pop
outsl
inc
out
ss
and
mov
fwait
and
popa
insl
loopne
pop
push
mov
jo
mov
stc
adc
pop
subl
cli
jp
mov
mov
pusha
adc
xchg
int3
sbb
icebp
mov
mov
test
dec
mov
int3
movsl
lahf
sbb
dec
fst
xor
lods
add
aas
gs
cmpsb
jle
fcoms
cmpl
loop
int3
mov
dec
test
push
add
or
je
les
add
data16
xchg
pop
das
leave
ret
into
das
cmc
test
dec
call
aas
dec
xor
lea
sbb
xor
imul
jno
xorl
xchg
cmp
das
in
ret
adc
xor
xchg
xor
or
ljmp
pusha
adc
ja
or
cltd
dec
pop
cld
dec
daa
je
mov
stos
and
or
mov
add
sbbb
int
mov
mov
sub
rolb
cmpsl
mov
scas
cmp
mov
test
je
mov
in
add
fwait
sti
inc
pop
nop
pushf
test
nop
mov
testb
aam
and
or
popl
mov
mov
aas
add
mov
and
jl
jecxz
orl
mov
add
in
aam
mov
xchg
lret
inc
and
and
jl
inc
cltd
dec
cmpl
or
mov
leave
fnsave
xor
add
stos
pop
lock
and
cld
gs
cmpxchg
inc
fmull
jb
pop
ljmp
sahf
jbe
sbb
enter
xchg
jmp
push
jmp
ja
orb
inc
sti
nop
inc
sub
test
pop
pop
stos
inc
dec
dec
bound
jle
inc
fisttpl
outsl
in
mov
in
js
in
lahf
loope
jl
mov
adc
insb
dec
cmpsb
call
mov
mov
pop
fucom
ljmp
mov
adc
mov
in
in
jbe
cmpsl
adc
test
mov
fidivrs
push
les
imull
dec
mov
fld
dec
jb
xor
popa
into
and
int3
insl
mov
add
mov
lock
out
xchg
leave
outsb
inc
jle
jne
mov
mov
std
or
rclb
mov
jnp
and
std
xchg
jge
jge
mov
punpcklwd
leave
rcrl
in
pop
jmp
jns
mov
stos
mov
mov
imul
ficoml
int
pushf
cmpxchg
mov
rolb
cmp
jo
shll
push
push
mov
adc
sub
loope,pt
push
jb
jmp
dec
pusha
or
lods
fs
inc
fdiv
repz
lahf
adc
scas
adc
cmp
lea
cli
call
stos
inc
mov
sahf
leave
shlb
push
cmp
cmpsl
je
mov
pop
adc
lret
push
cmc
clc
or
je
lcall
and
pop
enter
inc
pop
jecxz
push
jge
fdivrl
sbb
or
xchg
lods
stc
mov
hlt
xor
adc
mov
mov
gs
inc
sbb
bound
cmpsl
sbb
cmpsb
dec
or
cmp
shlb
dec
pop
ljmp
jb
js
sub
inc
fwait
pop
arpl
aaa
xor
mov
fistpll
rclb
add
popa
test
dec
push
outsl
sahf
xor
mov
lods
in
adc
int3
loope
jne
push
mov
sbb
gs
jle
movsb
in
ret
push
fadds
aad
and
push
ds
outsl
dec
sub
pop
insl
divb
sub
in
jae
inc
dec
js
stc
mov
fildl
mov
scas
mov
mov
je
mov
bound
lock
leave
insl
enter
mov
add
incb
sub
push
out
cli
aam
mov
dec
mov
lds
jnp
pop
lods
stc
push
cmp
loop
dec
icebp
cwtl
xor
popa
aam
sub
dec
jae
rol
sbb
mov
push
xor
xor
xchg
inc
dec
leave
mov
xorb
jge
cld
mov
lcall
pop
outsl
add
out
mov
xlat
repz
aad
mov
les
ficompl
out
jae
inc
loop
in
cwtl
ljmp
leave
dec
mov
pop
ja
xabort
lret
fbstp
rorl
icebp
xor
dec
mov
xlat
mov
addr16
negb
and
stc
jnp
and
std
shlb
cmpsb
inc
jo
jge
mov
mov
push
stc
push
sub
mov
movsb
popf
xor
cld
imul
test
stc
mov
lods
ret
sub
cmp
cmp
sbb
mov
xchg
push
out
mov
nop
sub
test
push
xchg
addb
cmp
int3
and
stos
mov
inc
cmp
pop
aad
jl
int
setle
push
shrl
mov
pop
jl
aaa
scas
xor
mov
ret
mov
fimull
pop
xchg
sub
fdivrs
mov
cltd
pop
cmp
and
mov
or
mov
scas
jno
cmp
mov
jo
xor
mov
lods
jmp
imul
leave
pop
inc
je
lahf
xor
in
adc
testb
jp
cs
ljmp
es
fwait
mulb
sbb
jmp
pop
jecxz
les
pop
repnz
xchg
loope
lock
push
fsubl
cwtl
fbld
add
inc
inc
ja
or
out
sbb
les
push
ja
or
cmp
mov
mov
xorl
outsb
in
jl
je
pop
mov
jge
cmpb
aad
jge
cmp
loopne
jecxz
cli
push
mov
push
aaa
sub
xchg
adc
out
pop
sarl
sti
in
pushf
repnz
jge
mov
js
xor
rorl
sbb
xchg
push
add
imul
fcoms
mov
lcall
adc
inc
push
jmp
sub
jne
mov
sub
fldl
shll
jge
sbb
fstpl
test
aad
sbb
inc
movsb
repz
in
cmp
cmp
rorb
mov
icebp
and
pop
cmp
ljmp
gs
les
mov
jo
add
loopne
fisubrs
fdivrl
in
or
shl
test
mov
xchg
dec
fidivs
mov
xor
cmpl
lcall
pusha
shrl
mov
mov
leave
int
in
cmp
aas
dec
ja
mov
cmp
push
imul
mov
jno
jae
and
inc
add
push
std
fwait
les
jmp
mov
pop
mov
in
cmp
push
subb
push
insb
clc
pop
lds
fisubrs
mov
push
rcrb
fwait
sub
cwtl
das
inc
in
dec
inc
popa
mov
xchg
insl
out
sahf
aam
in
insl
loop
in
int3
jle
int3
push
dec
icebp
mov
xchg
mov
push
not
jg
jg
pop
mov
xor
xchg
push
sub
test
imul
inc
movsl
icebp
jp
idivl
xor
mov
iret
push
mov
aas
inc
xor
jg
popa
mov
ja
pop
bound
inc
cwtl
bound
jmp
or
test
cmp
lock
fildl
dec
fidivs
cmpsb
out
mov
inc
cmp
rcrb
addr16
lcall
sti
push
test
mov
xor
flds
ljmp
push
add
jnp
fidivrs
cmp
lods
fwait
dec
jg
lods
shlb
sbb
gs
outsb
adc
mov
fs
lcall
sahf
mov
dec
ljmp
sub
scas
shr
or
fdivp
scas
jmp
mov
adc
and
add
lret
lret
xchg
jae
sub
sub
clc
cmpsb
pusha
xchg
fsubr
jg
add
mov
ljmp
imul
das
push
rolb
scas
lret
adc
je
jb
and
stos
dec
push
mov
enter
repz
adc
adc
jns
or
outsb
mov
inc
in
mov
jae
and
push
lret
jae
cmc
sub
sub
push
mov
cmp
imul
out
mov
bound
xchg
in
into
mov
test
jge
inc
inc
fisubrs
shll
loop
push
or
hlt
rclb
es
jle
mov
stos
jno
stc
and
lock
aaa
idivb
cmp
add
or
fidivrl
or
mov
mov
lahf
cmp
push
cltd
pop
inc
inc
ja
mov
mov
int3
jo
sub
icebp
add
push
xor
loopne
mov
cs
test
repnz
fidivrs
test
outsb
mov
les
int3
fmul
xor
cmpsb
xor
mov
inc
fwait
bound
mov
xchg
or
rcrb
sbb
mov
cmp
aas
mov
add
and
mov
mov
cld
das
test
xor
sti
xchg
cmc
adc
negb
jbe
std
and
idiv
push
jl
cmpsl
imul
jnp
sti
movsl
sbb
mov
cmp
adc
in
pop
in
jbe
mov
adc
mov
out
roll
test
jge
negl
inc
pop
mov
jl
call
add
dec
push
or
loop
incb
cs
mov
or
daa
and
inc
fcomip
nop
jle
push
mov
inc
fnstenv
add
inc
cltd
push
lods
adc
cmc
lret
in
xor
jl
and
test
mov
cmpsl
in
push
pop
enter
mov
mov
pop
push
mov
jecxz
leave
inc
pop
cmp
testb
mov
insl
mov
stos
push
nop
data16
add
rol
pusha
fwait
push
testl
cmpsb
xor
mov
xchg
jno
lret
mov
xchg
pop
xchg
adc
and
dec
addl
lret
jle
pusha
loop
adcb
int
mov
add
mov
stos
xchg
hlt
test
push
lods
out
mov
fldenv
in
adc
test
push
bound
xchg
add
jb
test
adc
push
ds
jg
push
sub
lret
repz
push
cmp
push
xlat
pop
xchg
and
and
push
mov
arpl
std
mov
lea
xor
push
pop
mov
ljmp
pop
pop
pop
mov
movsl
and
dec
dec
push
out
jns
mov
jne
movsb
fldpi
data16
repnz
jne
pop
and
mov
mov
aad
xor
stc
adc
cmpl
stos
sahf
sub
and
cmp
xchg
jp
push
cmp
mov
mov
cmc
cmp
gs
call
xchg
int
push
mov
dec
mov
lock
out
loope
xchg
out
test
sbb
cwtl
sbb
dec
inc
in
lahf
push
xchg
iret
sub
pop
pop
ja
cs
cmp
cmp
mov
xchg
fcomps
rcrb
sbb
mov
mov
jp
sbb
sub
sbb
mov
dec
adc
lret
lods
lds
insb
sbb
leave
dec
call
idivl
loop
cmp
xchg
lds
addb
adc
int3
mov
dec
or
stos
fiadds
xlat
jle
pop
fucomip
adc
jge
lcall
arpl
sbb
outsl
push
mov
or
roll
jmp
andl
jle
lock
hlt
dec
adc
movsl
xchg
es
xchg
pop
lock
xlat
mov
in
xor
mov
mov
inc
insb
sti
pop
pop
into
jbe
jecxz
xchg
ljmp
mov
call
mov
rcrb
repnz
cmp
pusha
ret
add
arpl
sub
js
pop
into
loop
sbb
ds
push
shrl
dec
mov
sti
push
push
popa
or
stc
add
cld
inc
xor
pushf
scas
mov
jmp
sub
and
movsb
inc
idivb
adc
out
test
cmpsb
ja
data16
jp
rorl
mov
jl
test
xor
push
mov
pop
aaa
aaa
pop
pop
jne
fs
repnz
je
stos
inc
mov
bound
pusha
incb
fs
xor
push
cmpsb
pop
or
repnz
int
fldt
bt
loop
movsb
in
push
sahf
divb
imul
sahf
jb
mov
push
adc
out
push
jp
lcall
outsb
cmp
lods
mov
jo
popa
aam
pusha
jl
sbbl
pusha
cmp
bound
fistl
xchg
pop
push
es
push
pop
ffree
das
add
add
mov
inc
in
sarl
mov
loop
dec
hlt
das
and
insl
icebp
xchg
dec
pop
cmp
sbb
in
sbb
mov
repnz
and
lock
and
adc
movsb
scas
out
push
out
addr16
jmp
inc
push
out
push
test
and
push
push
jecxz
clc
jae
fmuls
decl
repz
mov
mov
fidivrl
clc
addb
out
mov
push
cmpsb
test
adcl
int
lea
or
inc
movsl
add
dec
adc
insb
sbbb
outsb
jg
pop
mov
hlt
inc
cmp
mov
fnstcw
push
jbe
pop
call
xorb
mov
scas
out
cwtl
jns
std
sbb
in
cmpsl
xor
lcall
pusha
jp
add
mov
popf
fbstp
frstor
movl
xor
mov
ds
sbb
aaa
xchg
xor
inc
pusha
loopne
inc
pop
cmp
xor
int
rcr
xchg
xor
jp
gs
cmp
sub
ret
xchg
test
add
mov
xchg
jge
shlb
mov
loopne
mov
cmp
mov
fadd
hlt
aam
loope
jp
xchg
inc
xlat
jb
mov
int3
pop
sub
jns
mov
xchg
push
adc
mov
mov
bswap
rcll
xchg
pop
sahf
adcb
fmuls
adc
stc
scas
pop
mov
filds
rolb
stos
add
add
xchg
or
pop
push
bound
or
subl
mov
outsb
aad
mov
dec
cmc
mov
push
add
add
clc
xor
mov
ficoms
leave
mov
jne
jae
sbb
adc
iret
dec
xor
stc
inc
loop
fcoms
imul
jno
aaa
stos
ja
inc
cli
mov
push
leave
movsl
sub
add
jmp
movsl
cmp
fdiv
jb
icebp
push
sub
das
dec
in
mov
adc
inc
cmpsl
mov
call
incl
outsl
gs
push
pop
scas
dec
jge
jnp
sub
test
je
jno
repnz
icebp
lods
das
cmp
xchg
ja
aaa
adc
into
mov
ret
and
add
and
or
shrb
shll
mov
or
fiadds
xchg
jbe
stc
jae
sub
or
push
repnz
push
sub
dec
sub
or
add
fiadds
in
imul
fidivs
xchg
addr16
cmp
xchg
insb
repnz
cmpsl
or
sub
enter
aas
sub
jecxz
mov
icebp
aad
ja
jmp
lea
sub
lahf
mov
std
xchg
xchg
cmpsb
dec
std
aas
stc
aam
pop
les
mov
jne
popf
insl
mov
shll
arpl
loop
das
ret
mov
pop
mov
iret
adc
or
xor
xchg
push
imul
sbb
xchg
pop
loop
ss
in
ret
cmp
std
cltd
lea
mov
sbb
movsb
roll
mov
pop
inc
fnstcw
cmc
sub
pusha
ljmp
stos
and
movsl
insb
inc
push
jmp
dec
or
dec
mov
cmp
imul
pop
in
push
in
nop
cs
push
mov
pop
lock
dec
call
add
add
in
scas
lahf
cmp
add
sub
in
xchg
ja
scas
dec
inc
pop
cmpsl
fidivrl
jno
mov
aad
test
xchg
push
jmp
xor
out
int3
sbb
add
icebp
loop
mov
loop
out
loope
or
mov
jae
and
jns
jmp
test
mov
movsb
daa
mov
in
es
mov
adc
mov
sbb
repz
jnp
jno
movsb
test
stc
fildll
mov
mov
cmp
push
and
xor
mov
jp
push
lcall
cmp
lock
inc
sbb
xchg
ljmp
cltd
jg
nop
outsl
shll
addr16
aas
lods
dec
cmp
mov
ljmp
cmp
lds
mov
inc
loope
fistps
rol
jne
push
mov
sti
xchg
push
test
adc
test
push
xchg
dec
xchg
and
jnp
loope,pt
stos
out
lret
xor
jmp
loopne
negl
jnp
lcall
cmp
lret
pop
test
es
jb
inc
gs
out
mov
push
out
hlt
pop
adc
jo
mov
xchg
push
lcall
imul
add
dec
fisttpl
imul
popa
sbbl
je
xchg
orb
xor
dec
ret
cltd
jp
imul
sbb
mov
jo
add
sub
loope
xlat
cli
jne
sbb
jp
rcll
pop
inc
cs
pop
inc
lods
pop
je
push
idivl
or
cmp
sbb
inc
mov
cmp
and
enter
aaa
mov
inc
mov
mov
adc
enter
mov
push
sbbb
jp
pop
and
int
push
icebp
std
jmp
clc
mov
outsb
xor
mov
inc
add
cmp
sub
sub
call
in
repz
adc
jo
dec
scas
jae
cmp
adc
arpl
fwait
call
add
lcall
and
popa
clc
xchg
jbe
inc
lahf
dec
data16
xchg
and
xchg
cmpsb
sbb
cmp
mov
out
or
aas
push
jge
cmp
shrl
mov
cmpsl
mov
push
dec
jg
in
pop
adc
sub
insl
data16
or
push
mov
xchg
xor
fisubrs
xchg
mov
fcomip
mov
scas
cmpps
push
xlat
scas
inc
pop
xor
xor
jle
iret
jbe
push
sbb
dec
mov
xchg
cmpsl
pop
les
adc
hlt
ffreep
xchg
or
dec
mov
push
xchg
int
enter
arpl
lds
rorb
ds
cmp
sbb
pop
xor
mov
ficoms
adc
mov
jnp
fidivl
cmpsb
xor
ss
js
stos
pop
in
cwtl
push
cmp
mov
movsl
jg
fistl
xchg
scas
cli
sbb
push
dec
xor
enter
icebp
adc
dec
pop
lea
xor
lret
data16
mov
cmp
lret
inc
push
mull
and
stos
int
and
jmp
pop
mov
pop
shll
add
cltd
mov
addr16
push
outsl
or
mov
in
xchg
pop
xor
clc
jge
push
pop
or
mov
dec
fidivrl
jg
add
pop
mov
inc
cmp
repnz
sahf
pop
jl
int3
xchg
add
push
fstl
or
pop
outsl
test
jl
xor
aas
jp
js
aam
jae
mov
xchg
fnstsw
sti
repz
bnd
dec
frstor
divps
dec
int3
pop
repz
insb
pop
test
lcall
lret
in
pop
fwait
cli
jo
sub
pop
sub
inc
and
dec
enter
insl
inc
mov
inc
push
out
mov
outsb
add
fnsave
mov
cmp
xor
rclb
je
jl
orb
in
cwtl
ret
sbb
std
xchg
imul
xchg
clc
stos
and
dec
pop
lret
jg
testb
inc
setp
dec
lds
dec
cmpsb
mov
rorb
lahf
into
mov
push
es
xor
add
repnz
mov
pop
adc
push
xchg
out
or
je
adc
popf
push
arpl
aad
lods
push
mov
int3
dec
mov
xor
stc
xchg
xchg
mov
loop
scas
cs
pop
adc
cmp
mov
sub
stos
mov
fwait
mov
or
mov
xlat
outsb
inc
adc
daa
test
cmc
add
and
loope
pop
cltd
shrb
rcll
ret
pop
scas
jecxz
addr16
dec
pop
outsb
jle
out
xchg
fimull
or
pop
aaa
mov
mov
les
xchg
push
aaa
into
and
cli
fsubrp
stc
nop
push
mov
outsl
xor
mov
rolb
in
inc
fistpl
movsl
bound
daa
pop
adc
cld
cmp
out
sbb
stos
mov
xchg
adc
dec
movsb
xor
mov
mov
aaa
into
and
sti
push
icebp
insb
adc
enter
jg
mov
mov
fisubrs
outsl
gs
inc
pusha
or
xchg
mov
add
sbb
jl
xchg
rcl
repnz
pop
jmp
out
outsl
daa
jmp
test
lock
or
call
aam
xchg
fldcw
mov
mov
ljmp
jo
jae
daa
or
scas
cmp
add
mov
mov
nop
shrd
jmp
lods
mov
cmp
xlat
loopne
and
inc
mov
xor
jecxz
adc
dec
push
std
xor
pop
gs
incl
jge
mov
in
mov
imul
mov
out
mov
push
stos
inc
xchg
xchg
ja
adc
jne
int
movsb
loopne
mov
ret
mov
repnz
cwtl
or
push
ds
pop
je
cmp
and
inc
lock
inc
or
cltd
les
adc
jae
mov
ficoms
jge
push
jbe
sbb
icebp
out
sbb
xor
pop
cwtl
sbb
leave
dec
loope
jl
rcll
ret
add
mov
adc
xchg
sub
inc
insb
add
inc
inc
je
fidivrs
mov
loopne
inc
call
out
jnp
xchg
cmp
push
inc
inc
lods
jne
inc
mov
loop
mov
and
inc
pop
inc
aaa
repnz
jmp
filds
je
jl
sub
stos
aas
mov
dec
loop
push
pop
dec
out
xchg
cmp
inc
mov
mov
adcb
mov
int3
cmp
jge
xchg
mov
sub
cmpsl
cmp
loop
je
inc
cmpsb
int
push
add
insb
ljmp
out
and
xchg
inc
mov
or
xchg
cmp
cmp
decb
xchg
pop
jbe
sbb
imul
jg
inc
xor
cs
fnstenv
or
mov
insb
in
mov
dec
clc
jle
mov
xor
arpl
pop
shlb
pop
xor
lock
sbb
sbb
mov
lock
mov
std
lret
inc
and
mov
push
add
clc
stos
mov
vandnpd
xchg
xor
loope
shll
xchg
adc
sbb
jecxz
pop
pushf
lds
and
or
mov
fldcw
shrl
repnz
fs
xchg
mov
shr
repnz
pusha
mov
push
stos
mov
pop
stos
push
mov
pusha
or
push
jae
and
in
lret
insb
xor
pop
dec
jnp
inc
std
daa
adc
scas
outsl
add
xor
xor
lahf
sub
dec
and
xchg
rcll
inc
vmread
mov
or
stos
scas
xchg
jl
adc
int
xor
arpl
pop
test
sbb
outsb
add
dec
out
imul
popa
or
xchg
or
mov
loopne
adc
jns
and
jbe
les
mov
fists
mov
dec
or
jp
cmp
ds
dec
inc
and
rcrl
loope
jge
push
sbb
je
sti
jbe
and
dec
adc
xchg
stos
mov
jmp
cmp
pushf
and
ljmp
jns
notl
imul
fbstp
iret
bound
in
test
scas
or
pop
scas
insb
jle
cmp
adcl
or
in
push
jo
sbb
out
jle
xchg
test
lods
int3
arpl
imul
popf
cs
je
or
imul
movsb
jmp
mov
jge
loopne
inc
xor
pop
sbb
sub
inc
pop
mov
pop
inc
hlt
bnd
jns
adc
jbe
rolb
inc
lods
loope
fisubs
loopne
push
adc
jp
mov
je
lahf
aas
aad
sbb
cmpsb
imul
inc
push
xchg
inc
and
mov
cmp
xchg
add
dec
ret
mov
mov
gs
call
inc
aas
int3
stos
lds
xor
mov
jo
mov
push
roll
inc
inc
loop
dec
in
mov
push
dec
cmp
pop
push
mov
aas
fnstsw
mov
sub
lods
xchg
cmp
mov
jle
sbb
sbb
push
mov
adc
mov
cli
icebp
mov
insl
popf
cwtl
movsl
fistpll
add
aaa
sbb
repz
dec
pop
push
in
out
pusha
test
ljmp
fists
push
xchg
xor
loopne
cli
lock
or
push
loopne
cltd
dec
pop
jl
mov
xor
sbb
cmp
add
jecxz
sub
pop
jbe
and
sahf
fidivl
clc
or
rorl
jl
and
or
in
pop
movsl
mov
sarb
call
out
sahf
mov
pusha
stos
jmp
xchg
fcomip
mov
jmp
xor
add
imul
roll
and
mov
mov
cmp
in
xor
int
mov
xchg
xor
xor
in
push
mov
shl
repnz
sbb
scas
inc
xor
push
repnz
sahf
xchg
jbe
mov
jae
shll
jg
sbb
jecxz
jo
aaa
clc
jmp
lods
jmp
subb
jae
pop
and
push
in
push
cmpsb
jno
or
nop
mov
or
adc
pop
lds
out
mov
push
divl
fstpt
cmp
jne
push
pop
mov
repz
sbb
popf
das
pop
daa
mov
inc
js
or
lods
mov
repz
push
mov
pop
aad
jecxz
jmp
ss
daa
loopne
sahf
sub
ljmp
mov
rcrl
push
xor
insb
xchg
jmp
lea
xchg
xchg
sbbl
xor
lret
insl
add
cwtl
inc
mov
ja
inc
popa
xlat
pop
lahf
test
lods
mov
fmulp
jno
enter
jge
popf
dec
xchg
pop
push
and
pop
dec
fnstcw
mov
stos
clc
les
fcomps
mov
add
jne
aaa
iret
sbb
cmpsb
sub
lock
loope
xchg
mov
xacquire
adc
pop
shll
xor
pusha
inc
pusha
mov
je
outsl
cmp
push
pop
das
mov
aaa
push
cmp
inc
xor
fs
int
mov
pop
dec
dec
mov
jae
fdecstp
in
cmp
scas
imul
mov
jnp
sarl
pop
data16
daa
xor
pushl
mov
aam
hlt
shl
push
bound
and
mov
pop
push
insl
pop
and
mov
mov
mov
push
mov
inc
pop
stos
cmp
jo
xor
cmp
lods
xchg
dec
test
add
dec
fidivrl
push
or
pop
repz
test
cmp
fnsave
inc
pop
inc
int3
push
les
adc
or
jae
push
js
test
aad
not
jno
add
mov
lock
mov
lea
cli
jge
sub
or
add
sbb
adcb
and
flds
dec
arpl
push
pop
jne
inc
and
stos
rcrl
ret
pop
ret
repnz
pop
shrl
mov
push
gs
icebp
scas
les
push
lods
stos
int3
shrl
xor
push
push
mov
imul
and
inc
add
jbe
lods
inc
mov
cmpsl
lret
xchg
jecxz
enter
or
into
mov
or
cmp
loop
add
mov
jnp
sbb
loopne
mov
add
xchg
cli
mov
add
mov
xor
adc
add
pop
cmp
pop
inc
fstl
mov
sbb
outsl
loopne
xchg
or
mov
idivb
sbb
sbb
mov
rep
add
pop
ret
xor
dec
cmp
push
lahf
neg
es
out
jnp
push
inc
xchg
scas
xrelease
inc
loopne
ljmp
lret
jae
out
sbb
testb
call
push
icebp
gs
insb
sub
jl
jne
push
pop
jno
test
xchg
fidivl
add
or
xchg
mov
enter
call
mov
es
hlt
dec
in
lahf
mov
out
in
dec
sub
jecxz
jbe
fmulp
int3
mov
movsb
jns
lds
lock
out
fsubrl
sub
clc
adc
out
in
sub
inc
adc
cmp
lods
aas
sbb
mov
mov
repz
shrb
push
jmp
push
xchg
jge
pop
mov
pusha
into
mov
mov
movsb
les
daa
inc
dec
mov
mov
aas
in
in
push
push
mov
sbb
pop
aaa
stos
lods
xor
test
adc
lock
jb
imul
jmp
movsb
fisubrs
add
mov
aas
and
mov
incl
cmp
hlt
adc
out
out
add
and
dec
fsts
repz
out
out
fwait
std
push
sub
js
int
jle
mov
jle
aad
push
mov
mov
xchg
test
xchg
aad
pop
cmp
int3
adcb
cmp
add
inc
fistpl
add
inc
xor
repnz
inc
arpl
adc
jl
das
mov
push
addl
test
out
in
or
stos
push
pop
push
adc
testb
ja
add
jb
cs
repnz
dec
aaa
int3
dec
and
dec
repz
and
mov
xchg
sub
lahf
shl
mov
sub
es
jg
mov
repz
or
push
pop
jp
xchg
xor
sbb
push
inc
sbb
shlb
mov
inc
cmp
fstpt
mov
fdivl
lahf
pop
and
rcrl
mov
out
or
mov
out
insb
std
or
ret
cmpsl
mov
das
sub
ds
xchg
mov
dec
mov
ja
inc
cltd
das
aas
cmpsb
popa
call
adc
scas
add
icebp
or
or
mov
stos
sbb
sub
lods
sbb
push
hlt
mov
add
out
xor
std
dec
fsubrl
sub
icebp
cmpsl
push
mov
daa
jl
mov
mov
sub
pop
stc
js
xor
mov
push
in
mov
or
scas
add
dec
or
xchg
push
scas
dec
int3
pop
into
repnz
add
dec
xchg
sahf
cmpsl
popf
es
cwtl
jmp
inc
pop
scas
sbb
xchg
mov
data16
jae
pop
sub
xchg
sub
xor
nop
bnd
pop
enter
push
pop
das
xchg
pushf
xchg
hlt
add
sub
add
sub
or
adc
outsb
push
stos
xor
pop
jp
lcall
push
jbe
xor
or
shr
nop
in
xchg
not
xor
add
popa
jmp
cld
ret
jl
js
adc
mov
cmp
sbb
jl
in
movsb
xchg
push
mov
inc
or
jp
jmp
and
iret
in
notl
rcrb
push
insb
bound
repnz
jnp
fistps
push
mov
sub
addl
inc
ret
sbb
pop
xchg
in
and
pop
insl
or
test
loopne
mov
mov
dec
push
lea
out
div
test
push
jns
inc
clc
push
pop
push
ss
mov
add
xchg
stc
pop
fcomp
dec
arpl
lea
cmp
cld
push
mov
std
outsl
pop
pushf
insb
push
fnstcw
in
jae
pop
out
js
dec
xchg
pop
jmp
sub
cs
movsl
inc
out
xchg
lock
mov
data16
cmp
mov
push
pop
clc
cmpsb
jl
cld
and
mov
xchg
jge
int
in
mov
fldt
fisubs
sbb
dec
loop
pop
and
xchg
adc
cmp
push
pop
popf
stos
lahf
push
and
sahf
push
jbe
std
paddd
cmp
arpl
xchg
xchg
mov
push
arpl
push
inc
jmp
in
stos
xor
inc
xlat
aam
movsl
icebp
xchg
cmc
pop
neg
aam
minps
jge
sub
mov
ficompl
jg
mov
mov
aaa
push
loopne
mulps
and
mov
or
in
xor
push
cmpsb
cmp
loopne
cmp
js
arpl
inc
aad
adcl
push
outsl
out
gs
stc
lret
xor
dec
aas
xchg
xchg
sub
pop
xchg
add
cmp
lcall
punpckhwd
mov
mov
mov
sbb
jbe
pop
mov
jae
push
mov
shll
push
or
jns
rorl
and
fisubrs
inc
push
adc
xchg
lds
lods
dec
lcall
test
adc
lea
js
fmull
inc
jne
fldl
pop
out
lret
pop
jo
fcoms
addr16
shl
sub
sahf
test
in
cld
mov
cmpsb
aas
mov
icebp
loope
and
int
jnp
dec
mov
dec
jg
cltd
xor
icebp
insb
and
mov
rorb
mov
and
inc
cmp
in
dec
and
xorl
mov
xchg
jecxz
jo
arpl
jne
mov
movsl
les
xchg
lods
mov
cmpsb
cmp
mov
pop
or
rcr
rol
push
inc
arpl
sub
inc
push
jge
inc
loope
inc
mulb
les
out
jnp
cmp
inc
pusha
cmp
jbe
dec
and
fdivl
fiadds
cmp
sub
jp
les
inc
popa
outsb
mov
hlt
fsubrl
xor
test
shlb
sub
mov
out
sub
sbb
je
lret
adc
xchg
pusha
sbb
movsl
cwtl
push
or
leave
sahf
jl
out
lret
or
mov
leave
and
mov
mov
les
sahf
cmc
arpl
cmp
sub
es
mov
stc
je
push
in
adc
and
mov
imul
loope
and
sbb
mov
popf
jge
scas
mov
or
mov
les
push
add
nop
xor
mov
xchg
cmpsl
adc
pop
or
add
xchg
and
pop
out
pop
cmp
add
push
sbb
aas
dec
loope
push
lods
mov
mov
outsl
jnp
stos
stos
mov
adc
test
jb
inc
jnp
add
sbb
pop
sbb
shrb
test
mov
mov
pop
sub
pop
es
pop
pushf
sahf
or
clc
jecxz
dec
jecxz
push
push
shll
bound
aad
aas
call
jl
push
in
push
sbb
xor
jmp
jmp
or
pop
cmp
xchg
cmc
xchg
cltd
cmpsl
mov
and
je
cmpsl
test
sbbl
pop
xchg
in
pop
mov
mov
movsl
outsl
loop
cmp
fisubrs
sub
mov
mov
rclb
shlb
mov
ret
lds
leave
dec
mov
jle
sar
repnz
add
pop
cmp
push
test
xor
adc
inc
mov
sbb
test
mov
mov
pop
add
mov
fisubrs
shr
nop
es
mov
out
out
push
sbb
sbbb
mov
pop
les
in
cs
lods
jo
inc
pop
xchg
out
or
jg
cmp
jnp
std
imul
and
fcoms
and
imul
mov
mov
push
or
les
dec
mov
movsb
cmp
in
or
or
popa
data16
mov
mov
mov
sbb
adc
cmp
out
pushf
fidivrs
scas
sub
leave
pop
jmp
bound
fs
stos
sbbb
or
fildl
xor
inc
les
lods
dec
inc
pop
test
lods
std
lret
add
jae
xor
mov
sub
popf
pop
sahf
inc
std
pop
ret
iret
data16
jnp
mov
pop
and
add
pop
adc
jmp
je
push
insl
mov
push
push
dec
filds
inc
xchg
push
sub
movsl
shl
je
pushf
shrl
mov
xchg
aaa
mov
and
cwtl
push
int3
lret
sbb
jne
movsb
cmp
mov
cmp
xchg
dec
fadd
stc
pop
xor
mov
pop
mov
scas
inc
or
xchg
stos
stc
or
add
adc
adc
xchg
test
stos
movsb
mov
push
imul
and
push
add
inc
pop
push
mov
gs
cmp
push
mov
addr16
jg
lods
xchg
lock
xchg
mov
dec
add
cmp
push
mov
xlat
fmulp
xor
loope
loopne
lcall
and
push
iret
inc
ljmp
mov
icebp
dec
push
adc
jae
mov
xchg
out
mov
mov
and
nop
cs
jb
insl
and
loope
xor
mov
popf
xchg
and
xor
sub
fmuls
dec
sahf
mov
mov
cs
xchg
mov
jns
iret
pusha
add
popf
psraw
jns
push
cs
shl
push
leave
mov
inc
jnp
sarb
pusha
loope
stos
jg
mov
rcrb
leave
or
stos
js
and
ja
mov
ret
mov
mov
mov
adc
add
mov
adc
or
out
punpckhbw
outsb
aas
outsb
loope
or
lahf
or
lcall
js
push
test
or
imul
outsb
stc
ja
shll
push
lret
gs
push
mov
out
mov
mov
shlb
push
idiv
xchg
es
dec
sbb
sbb
sub
jl
fidivs
out
roll
sbbl
loopne
sbb
mov
fs
sti
sbb
jns
push
add
mov
leave
adc
or
xor
sub
fcoml
jns
aas
movsb
cmp
pop
out
in
ret
shr
jl
je
push
bound
adc
mov
aas
gs
gs
cltd
cmp
lea
dec
pop
ret
push
pop
pop
aaa
rclb
dec
xlat
outsb
jle
mov
or
in
es
sbb
jl
adc
sbb
repz
cltd
jl
sub
out
xchg
fsubrs
sbb
sub
mov
out
rcll
jns
les
cwtl
repnz
and
mov
lock
push
jmp
xlat
pop
jo
or
pop
in
ss
loop
mov
dec
lret
out
rclb
inc
pop
es
jbe
pop
jbe
lods
sub
mov
jae
divb
leave
test
rcll
icebp
leave
lret
ds
cmpsb
insb
mov
push
mov
xor
loopne
xchg
jbe
les
or
add
dec
pop
icebp
pushf
push
arpl
xchg
mov
add
gs
mov
fdivrl
sbb
add
mov
mov
leave
pusha
clc
dec
mov
in
lret
lea
adc
mov
dec
lahf
push
cmp
jp
pushf
sub
fs
addr16
fstp
mov
jnp
mov
jg
xchg
lods
pop
outsb
lret
gs
icebp
call
stos
push
pusha
fwait
dec
mov
bnd
int
imull
pop
push
push
xchg
cs
jne
movsb
mov
addr16
and
outsb
hlt
cmp
fldcw
cmp
push
cmp
popl
lods
test
jns
lds
adc
mov
fisubs
out
or
inc
enter
jne
je
lcall
loop
or
sbb
sbb
mov
rcr
cmp
insl
scas
je
mov
adc
pop
pop
pop
sbb
loope
stos
mov
mov
push
lods
adc
nop
daa
adc
arpl
ret
scas
mov
adc
aas
mov
shrb
outsb
aam
pop
fwait
xchg
inc
roll
ret
or
or
cmpsb
cmp
sbb
cmp
sub
dec
hlt
test
jge
test
add
das
jg
aam
mull
cmpsb
push
ja
add
ret
and
ja
inc
imul
lcall
xchg
imul
xchg
xchg
pop
sarb
jb
pushf
out
ficoms
fistps
mov
call
cmp
icebp
dec
mov
andb
cmpsl
imul
cli
jbe
lds
xchg
mov
push
insb
add
jg
push
cs
xchg
daa
negl
or
out
cltd
adc
pop
mov
xor
cmp
daa
inc
push
popf
push
adc
clc
adc
mov
sbb
and
jo
inc
mov
jle
pop
mov
movsl
in
pop
xchg
add
icebp
pop
out
bound
imul
inc
mov
xchg
push
xchg
push
mov
inc
hlt
push
jb
or
test
clc
nop
mov
ret
out
mov
mov
gs
add
xchg
adc
jne
andb
jae
notb
es
decl
rcrl
adc
and
push
insl
sbb
jecxz
in
movsb
ja
pop
rorl
cmp
mov
das
jb
push
mov
cmpsb
pop
jno
out
enter
mov
aam
push
pop
adc
sub
loop
inc
adc
and
aam
and
xor
sahf
clc
push
out
xor
iret
pop
adc
mov
lcall
sti
jp
es
and
or
sub
sub
mov
mov
out
xchg
ljmp
int3
jmp
test
or
sbb
sub
mov
add
ss
rep
stc
stc
nop
sub
es
mov
lea
movsl
jle
jp
dec
aaa
mov
lock
das
xchg
test
dec
js
mov
or
test
test
dec
adc
xchg
push
adc
mov
cmp
fwait
gs
push
test
sub
and
idivl
cmp
dec
push
mov
mov
sub
and
xchg
xchg
xor
scas
int3
mov
add
xchg
add
xchg
mov
int3
nop
xchg
mov
lcall
inc
gs
in
test
add
sub
xchg
test
xchg
jo
cltd
inc
jle
jnp
inc
push
sbb
in
push
dec
popw
xchg
mov
add
mov
pop
cmp
das
ja
mov
inc
inc
mov
cmp
test
or
cmp
xor
shr
loop
cmpsl
mov
cs
mov
clc
sahf
mov
jns
sbb
xchg
add
pop
xor
cmpsb
adc
pop
repnz
adc
loop
les
sarb
js
inc
stos
push
andb
sub
mov
cwtl
imul
xchg
das
fsubr
mov
pop
mov
mov
cmp
add
test
stos
push
inc
mov
inc
clc
fldenv
mov
push
cli
add
pop
stos
cmp
xor
adc
jmp
sbb
or
sub
sbb
pop
mov
adc
mov
mov
imul
sti
leave
aas
inc
lds
adcl
xchg
insl
enter
bnd
push
mov
sbb
ret
cmp
cmp
cmp
mov
push
cli
xchg
mov
addl
xchg
sub
xor
jle
cmc
and
cmp
mov
pushf
xor
outsl
rorl
mov
or
fnstenv
mov
lcall
or
dec
addr16
in
pushf
test
add
jmp
mov
dec
in
push
ret
adc
es
filds
jbe
fdivrl
rcrb
or
lock
pop
fimuls
leave
imul
fbld
aas
and
lret
enter
sahf
jmp
cmpb
arpl
xchg
ret
popa
mov
outsl
or
out
adcb
pop
adc
stos
lods
xor
jbe
sub
cmpl
xchg
stos
inc
sbb
loop
adc
leave
mov
std
adc
xor
mov
call
mov
cmp
lds
stos
pop
mov
mov
test
mov
iret
sbb
jo
lahf
outsl
xor
repnz
rcl
mov
or
cwtl
adc
mov
call
push
cs
jne
sub
or
jb
add
sbb
cmp
xchg
dec
jecxz
xorl
ss
push
jmp
cli
pop
jo
aam
sarb
adc
inc
adc
xchg
push
insb
push
out
popf
xlat
push
jmp
jne
loop
hlt
mov
lds
adc
inc
cmpsl
in
sbb
mov
jnp
sbb
movsl
addb
and
or
push
pop
test
je
or
xchg
insl
int
sub
adc
hlt
mov
loope
decb
and
addl
mov
jecxz
stos
xorl
pop
xlat
dec
out
push
repz
shrl
jl
jp
rorb
adc
ficompl
xchg
jecxz
insb
sarb
pop
or
sub
jecxz
movsb
cmp
aas
cld
ret
fisttps
cmp
loop
jecxz
incb
in
mov
xor
into
adc
cli
mov
sar
clc
add
sub
pop
bnd
lods
mov
xchg
jns
leave
jle
pop
adc
out
testl
imul
lods
ljmp
daa
lahf
push
push
aad
xor
aad
cmp
in
gs
and
stos
mov
adc
leave
pushf
repz
in
or
pop
test
mov
push
gs
cmpsb
lods
cmp
cmp
inc
push
jle
lds
pusha
popf
out
fsubr
fisubrl
int3
or
lret
imul
and
call
pop
mov
nop
sahf
adc
xchg
in
test
inc
imul
pop
mov
jbe
mov
imul
push
fs
pusha
rcll
mov
or
sub
dec
mov
jg
mov
adc
or
nop
es
add
jp
sub
daa
xchg
adc
icebp
mov
pop
fsubl
enter
sub
lds
das
add
dec
and
imul
xor
mov
jae
rolb
mov
cmc
lret
push
mov
jg
sub
jp
fldl
mov
mov
fistps
insl
neg
ljmp
test
rcrl
adc
fisttpl
pop
jg
pop
loop
in
sub
xor
jmp
movsb
lret
les
iretw
lods
test
hlt
sarl
mov
xchg
or
fisttpll
sub
aas
dec
hlt
int3
test
fldl2t
test
mov
fisttps
cmpl
push
dec
int3
ja
js
ret
jmp
mov
test
dec
out
xchg
pop
and
sbb
aad
sub
fs
and
pop
jmp
xor
mov
fimull
mov
mov
sbb
pop
negb
xorb
sub
aad
or
add
cmpsb
mov
xor
js
mov
inc
jne
cmp
fsqrt
stos
cwtl
add
iret
xor
xchg
cs
outsl
shrl
mov
mov
nop
mov
in
adc
jmp
xchg
add
fists
sbb
insb
loope
cmpsb
add
inc
loop
repz
push
lret
int3
mov
or
outsl
mov
loope
ja
fs
addr16
icebp
mov
xlat
mov
mov
aaa
push
jmp
inc
mov
jl
jbe
arpl
mov
pop
sub
xor
fwait
mov
add
and
in
stos
xchg
lds
movsl
negb
pusha
mov
fadds
sahf
arpl
jmp
imul
or
mov
rclb
aad
aaa
lods
cmp
mov
fnstenvs
and
sahf
andb
or
mov
adc
jns
mov
ds
or
into
adc
pop
hlt
xchg
push
add
mov
mov
add
pop
xor
mov
push
lods
rclb
inc
inc
inc
xchg
cwtl
cmc
dec
or
adcb
or
ficoml
aam
sub
popf
pop
pop
leave
pop
push
sbb
loope
sbb
scas
hlt
cmp
scas
mov
int
out
jl
xchg
mov
test
popf
dec
and
dec
xchg
les
add
xchg
arpl
sub
enter
jge
cltd
in
mov
or
xor
and
pop
cmp
jl
sub
or
call
mov
pop
sub
bound
negb
sbb
dec
sub
mov
cmp
stos
sbb
rcr
jbe
adc
sahf
and
cmpb
push
cld
lcall
mov
insb
dec
pushf
xor
inc
sub
mov
adc
pop
xchg
repz
push
sbb
adc
fidivl
lods
sub
jne
clc
or
insl
in
mov
in
lea
xchg
mov
pop
je
mov
cmpsl
insb
push
out
add
fwait
cmp
pop
outsb
hlt
pushf
adc
cld
or
stc
push
sbb
dec
lret
push
push
aam
in
ss
pop
dec
clc
push
jmp
addr16
ds
xlat
je
add
ret
sbb
bound
fwait
cmpl
pop
notl
andl
jnp
inc
push
jp
inc
ret
seta
mov
adc
xchg
and
sbb
out
inc
pop
sbb
add
mov
sbb
lock
add
out
mulb
daa
out
cmpsb
lock
dec
test
jnp
in
stos
inc
outsb
add
xorb
das
fcmovbe
sub
mov
and
daa
sbb
jle
movsb
cmp
push
scas
xor
pop
mov
mov
inc
fildl
sahf
repz
pop
push
arpl
push
jae
mov
icebp
xchg
fnstsw
push
sarl
pusha
cmp
sbb
lds
nop
stos
jo
jecxz
fistps
std
and
push
jns
loope
lock
add
jbe
mov
fistps
aaa
cmpsl
cmp
andl
xchg
xchg
mov
and
js
pop
cld
jle
sub
imul
pop
lds
in
mov
mov
lods
sbb
aam
sbbl
pop
fcompl
out
or
jp
test
lcall
insl
sbb
dec
mov
add
ds
pop
jno
test
scas
in
loope
push
icebp
std
jbe
jns
push
js
adc
and
xchg
add
or
aas
sbbb
out
leave
scas
cmp
insb
xor
sbb
xor
out
inc
gs
xor
in
lds
cmp
in
xor
iret
fldt
in
test
mov
test
stos
rcrb
nop
mov
fldcw
or
fisttps
xor
dec
repnz
adcb
mov
stos
in
mov
push
xchg
push
je
cmp
push
push
or
mov
push
dec
adc
xchg
jne
mov
mov
xor
mov
mov
ret
jle
bound
fsubrl
lods
sub
cld
sub
jle
je
cmp
icebp
adc
fwait
cli
fstp
pop
mov
inc
mov
push
and
mov
cmpsb
data16
pop
int3
shlw
cs
hlt
xchg
loopne
push
mov
das
mov
insb
sbb
dec
add
pusha
adc
stos
inc
loopne
pop
xor
add
int3
daa
fldenv
int
push
pushl
popa
mov
xorl
fucom
and
or
stos
jge
fcoml
inc
loope
adc
rolb
movsb
pop
lea
enter
inc
push
ret
loope
subb
or
popa
jae
jle
data16
pop
addb
aas
clc
js
sub
push
push
adc
test
and
test
sbb
shl
mov
and
add
ret
addb
inc
aam
push
js
sub
mov
adc
gs
xchg
cltd
cltd
bound
or
lret
xchg
scas
iret
fisubrl
adcb
add
out
mov
mov
jmp
fadds
lret
bound
or
rcll
cmp
stc
testl
add
in
lret
jb
sub
and
decl
aam
imul
mov
cmc
fcomp
cmp
imul
mov
daa
loope
push
aas
and
pop
xchg
mov
outsb
aad
xor
or
jl
xchg
add
loopne
pop
and
pusha
jno
push
leave
mov
fistps
mov
mov
and
cmc
sti
inc
push
pop
ljmp
cmp
pop
pop
cmpsb
and
add
xchg
sub
and
jnp
inc
and
adc
inc
mov
mov
cmpsb
out
aad
adc
shlb
fisttps
mov
je
addr16
aaa
ror
arpl
xor
mov
ljmp
sbb
int
sbb
mov
jno
into
icebp
movsl
bound
lea
jmp
push
xchg
out
sti
sbb
jnp
and
inc
inc
mov
scas
rolb
sub
and
cmp
ficoms
das
rcll
testb
add
pop
and
cmp
or
lret
cld
cmp
cmp
mov
hlt
aas
mov
ret
repz
test
icebp
sub
push
mov
clc
jae
insb
movsl
cmp
xlat
mov
mov
pop
push
mov
mov
mov
dec
movsl
stos
fadds
mov
into
sub
arpl
dec
mov
shl
pop
add
notb
fistpll
mov
pop
popf
pop
and
test
rolb
jbe
shld
je
lods
dec
sub
pop
mov
xorb
mov
notl
xor
inc
test
push
jb
pop
movsl
ret
cld
into
jns
in
test
cmp
xchg
aad
xchg
add
push
shll
into
add
mov
stos
push
jne
aas
cmp
push
push
es
hlt
pusha
inc
push
aad
fs
fsubr
notb
push
in
sub
roll
sub
in
test
inc
mov
jmp
hlt
mov
adc
inc
xor
int3
cmp
or
daa
cli
sbb
mulb
icebp
jmp
cmp
lret
rcll
and
clc
nop
shlb
les
fstpl
pop
in
add
sbb
jnp
inc
mov
inc
and
jnp
pop
cmp
enter
cmp
sbb
mov
ss
rcll
push
push
icebp
or
adc
jl
push
popf
test
mov
xchg
and
jno
or
and
movsl
sbb
leave
lods
outsl
xor
out
cmpsl
mov
mov
fists
jnp
pusha
inc
test
pusha
or
push
lret
std
sub
xchg
lcall
mov
shr
jnp
dec
xchg
lods
mov
pop
mov
add
es
pop
xor
adc
ret
imul
push
sbb
dec
out
data16
scas
jo
rcll
sbb
adc
nop
mov
add
inc
sahf
lods
jbe
mov
out
test
scas
lahf
notl
ret
cmp
clc
dec
pop
sub
mov
sub
adcb
push
test
mov
and
add
outsl
rol
ror
jl
test
push
push
pop
fbstp
je
mov
jmp
clc
aas
inc
sahf
or
cmc
dec
cmpsb
and
aad
pop
es
push
mov
and
mov
data16
push
xor
leave
xor
and
sti
push
repz
adc
or
pop
dec
cld
push
movsl
icebp
fisubs
sahf
push
add
push
lods
lds
sbb
mov
adc
popa
sbb
dec
addb
lock
lahf
fldt
jno
adcb
fiaddl
out
cmp
mull
in
push
into
cmp
mov
sbb
lret
mov
ret
aad
xchg
or
rcll
mov
xor
lods
adc
out
add
jo
jbe
jns
mov
push
test
jb
xor
and
cmp
and
out
jb
adc
inc
xor
stc
push
and
into
and
push
stos
orb
xchg
and
pop
fcompl
sbb
std
mov
jns
xchg
xor
pop
mov
rcrb
adc
cltd
jb
dec
shrl
test
push
jns
scas
test
fnstenv
pop
xlat
or
decl
mov
mov
popa
xchg
inc
cwtl
mov
fcomps
hlt
testb
rclb
lea
add
fs
lods
lods
dec
xchg
xor
mov
jecxz
ret
mov
rcrb
push
in
inc
cmp
jns
add
es
pushf
cmp
xchg
mov
rolb
or
insl
push
jb
stc
mov
dec
cmpsb
jg
sbbl
fndisi(8087
cmp
pop
lea
and
sbb
in
inc
addb
ja
lcall
xchg
popf
lods
xchg
mov
das
mov
or
mov
xchg
mov
dec
mov
mov
enter
roll
adc
pushf
sub
xor
fwait
ja
outsb
xchg
mov
push
fldt
shlb
push
xor
mov
mov
jo
fnstcw
popa
in
push
push
fistl
push
mov
cmp
mov
cmp
pop
mov
cmp
sarb
js
sbbb
lret
mov
pushf
jne
das
cmp
pushf
pushf
mov
xor
aad
ja
inc
mov
xchg
and
push
cmp
adc
xor
fisubrl
ret
int
xchg
lods
dec
out
out
pushl
fists
insl
movsl
push
lahf
jl
hlt
dec
jns
es
mov
aam
inc
pop
adcb
mov
jb
xor
lock
into
mov
push
jmp
movsl
push
scas
mov
jae
insl
inc
xor
test
add
xor
pop
sti
cmc
dec
cvttps2pi
mov
icebp
dec
push
mov
sub
inc
adc
mov
mov
into
mov
adc
imul
outsb
ret
out
fdivl
lahf
in
xchg
outsb
dec
mov
cmc
dec
add
aad
arpl
or
mov
adc
in
inc
mov
mov
movsl
mov
clc
sbb
add
mov
xor
cmp
inc
cltd
pop
in
pop
sahf
cmp
movsl
pusha
jle
dec
and
lret
sarb
cmp
or
push
in
scas
pop
lock
outsl
push
out
loopne
ja
lods
fwait
repnz
dec
inc
xchg
sub
imul
cltd
lcall
jnp
scas
sbb
nop
jo
lcall
sbb
in
or
insb
xor
push
fstps
adc
mov
mov
mov
and
fnstcw
sahf
mov
imul
adc
or
pop
mov
cltd
stos
dec
sbb
imul
pop
lock
cli
xchg
shll
push
aaa
sti
cmp
dec
add
dec
mov
jp
les
mov
rorl
or
xchg
jnp
fisubrs
mov
test
mov
inc
fbld
cltd
outsl
imul
stos
jp
scas
jae
ret
pop
mov
xor
mov
mov
stos
mov
ret
pop
cmpl
cmp
sbb
gs
insb
pop
push
rcll
cmp
das
out
mov
push
mov
jl
orb
push
xor
lahf
mov
int
scas
cmp
imul
jno
jmp
pop
sbb
std
xlat
ljmp
push
hlt
dec
and
mov
add
cwtl
inc
inc
mov
adc
adc
leave
pusha
adcb
adc
fmull
cmpsl
lock
bound
jle
xor
test
push
pushf
push
sub
imul
push
push
scas
mov
mov
lods
in
fildll
fs
sbb
xor
jne
in
add
adc
cltd
xchg
push
fisubrs
sbb
lea
into
bound
cmp
cmp
ja
jp
outsb
sbb
push
mov
sbb
add
dec
aaa
or
xorl
aaa
into
push
stos
push
lret
jb
push
scas
pop
mov
sub
cmc
dec
xchg
mov
mov
mov
insl
inc
fdiv
icebp
jo
jp
pusha
jl
sub
int
js
cmp
int3
sarl
fsubrp
adcb
add
ret
mov
jecxz
aaa
aaa
into
test
arpl
pop
ret
inc
lret
hlt
sub
sbb
cmp
fldcw
mov
mov
adc
divb
sbb
fidivrs
pop
sub
mov
cwtl
dec
call
fmull
jl
pop
cmp
mov
loop
lods
fadd
pop
or
sarb
loope
cmp
xchg
or
add
xchg
sub
and
sub
push
mov
test
push
mov
mov
cmp
sbb
bound
fwait
mov
divb
pop
dec
pop
aaa
dec
in
jo
mov
jmp
cmpsb
out
jg
mov
ficoml
mov
cmp
inc
add
adc
xchg
push
adc
iret
xchg
lea
lahf
inc
cmpsl
mov
fldenv
sbb
jl
inc
scas
inc
pop
inc
inc
clc
imul
push
lds
sub
out
xchg
push
mov
pop
pushf
sub
push
sbbl
pop
inc
add
lea
pop
xchg
adc
xchg
in
dec
cmpsb
test
iret
imul
inc
mov
aas
divb
leave
push
xchg
push
jle
mov
jae
sub
sbb
sub
push
add
mov
xor
imul
xor
in
fwait
jp
add
cld
jg
cmp
andl
mov
movsl
jge
subb
dec
pop
in
ljmp
adc
pop
xor
cmp
cld
xchg
jb
pop
sbb
xchg
sbb
push
cmp
dec
in
sub
adc
cmp
imul
out
ffree
sbb
sub
daa
fcoms
adc
add
jnp
add
cmp
and
xlat
inc
test
jae
pop
cli
pop
sbb
pop
fldt
pushf
test
and
inc
jp
jae
sbb
cwtl
test
shl
fidivs
mov
inc
fdivrp
pusha
inc
data16
test
into
fildl
mov
arpl
jb
iret
aaa
cmpsl
adc
dec
push
adc
rcll
jl
stos
mov
jecxz
divl
lods
test
lea
inc
xor
mov
test
mov
negb
cmpsl
in
xlat
adc
cmp
add
or
cmp
imul
mov
ret
aad
push
pop
aad
daa
and
mov
icebp
fdiv
and
ds
daa
shll
sbbl
js
xchg
pusha
jp
xchg
mov
sub
aaa
cltd
cmp
scas
mov
mov
in
jl
icebp
xchg
mov
mov
sub
hlt
mov
inc
fstpl
pop
jo
mov
mov
out
int
hlt
cmpl
fiaddl
fwait
and
push
mov
inc
and
fstps
cwtl
fsubl
jne
jecxz
enterw
mov
add
and
cmp
daa
lds
das
add
adcb
or
fs
test
or
pop
pop
icebp
sbb
cmp
int3
jmp
mov
je
and
add
mov
push
xorps
dec
lcall
or
test
mov
push
mov
pop
mov
lds
testb
mov
clc
outsl
cmpl
fcmovnb
inc
call
dec
xor
iret
movsb
cltd
ret
cmpsl
add
rcll
clc
mov
sub
mov
xchg
inc
dec
pop
dec
add
jecxz
xchg
adc
sbb
movsl
fidivrs
lods
jmp
dec
or
mov
data16
stc
in
pop
in
test
cmp
gs
jge
js
fisubl
sbb
cmpsb
enter
mov
pop
out
lds
sbb
imul
dec
dec
xchg
jb
ret
imul
fildl
aam
aam
sbb
mov
dec
push
add
lds
lcall
and
jl
call
ror
cmp
out
call
test
aam
out
or
arpl
jg
popa
pop
dec
shll
jl
enter
jae
mov
push
jecxz
fimuls
jae
cmp
mov
or
pop
or
mov
insb
dec
iret
mov
out
xor
inc
stos
inc
int3
push
jno
or
leave
test
push
push
sbb
daa
daa
movsb
pop
lea
push
pop
in
mov
loope
dec
adc
aaa
xchg
call
sarl
cwtl
dec
sbb
pop
xor
pop
popf
or
out
jno
sub
out
pop
push
xchg
cs
pop
or
mov
pop
data16
es
bound
sarb
mov
sub
inc
xchg
loop
cmp
loop
aas
fwait
cmp
mov
fs
mov
jne
scas
inc
stos
and
loopne
out
mov
push
ljmp
les
inc
addr16
imul
push
adc
pop
inc
jae
add
xchg
cmp
mov
aas
mov
push
into
stc
xor
jne
mov
ljmp
xchg
add
cmp
and
jp
je
sub
arpl
sbb
int3
rol
push
xchg
movups
rorl
sub
mov
imul
adc
mov
out
xchg
sub
movsb
adc
in
dec
mov
mov
xchg
jp
sub
mov
push
lcall
rsm
sbb
push
inc
xchg
dec
add
arpl
adc
mov
ljmp
mov
dec
fiaddl
jp
cmp
shrl
cmp
icebp
xor
cs
xor
mov
icebp
mov
cltd
arpl
jae
rcl
scas
popl
repnz
push
inc
push
iret
adcb
add
fidivrl
xchg
mov
aaa
sub
pusha
imul
sbb
movsl
out
iret
stc
push
cmp
xchg
test
sub
jl
and
lcall
add
adc
dec
mov
xchg
sahf
jne
in
sub
cwtl
push
mov
mov
mov
mov
mov
fcomp
insl
dec
inc
xchg
push
and
mov
fiaddl
add
dec
mov
push
call
leave
fidivrl
inc
mov
dec
in
xor
cmc
or
push
stos
xchg
bound
inc
in
xor
ss
ja
cmpsb
movsb
and
movb
leave
decl
mov
cmc
mov
mov
in
mov
push
fidivl
cmp
jge
and
push
dec
mov
mov
dec
setns
or
out
out
mov
loop
mov
adc
mov
bound
rcl
shrb
xchg
inc
sahf
jno
mov
fnsave
mov
aam
pop
mov
mov
mov
fsts
xchg
and
jmp
push
stc
mov
push
mov
push
repz
cmc
mov
xor
or
pop
pop
aam
xor
lds
and
lock
cmpsl
mov
outsl
xchg
add
mov
push
fidivl
pop
and
andl
stc
scas
mov
shll
jle
mov
ja
sbb
jno
mov
or
mov
cmc
sub
sbb
mov
xlat
test
jg
jl
rep
out
lcall
shld
pop
cmp
clc
push
jge
mov
or
rolb
icebp
out
loope
adc
loopne
lea
xchg
xor
sub
notb
jmp
lods
add
popa
in
or
dec
loope
xchg
adcb
icebp
aad
jb
lods
mov
xor
and
adc
sbb
lea
in
lods
imul
jg
icebp
in
inc
and
cmp
in
jecxz
stos
jne
xchg
xchg
int3
pop
or
xlat
and
push
pop
mov
ja
stos
push
mov
in
adc
fbstp
es
pop
sarl
aad
or
pop
aas
mov
lcall
roll
test
sbb
aas
xchg
pusha
aad
and
jb
enter
repz
and
in
jnp
cltd
jmp
cmc
adc
rolb
jno
cld
xchg
loopw
xor
int3
inc
std
add
add
push
fsubrs
or
dec
mov
notb
pop
jecxz
inc
cmp
pop
frstor
jmp
mov
cmpsb
testl
lret
insb
popf
insb
jmp
pop
loopne
cmp
add
dec
inc
xor
shrl
stos
sysenter
stc
aas
iret
and
loope
fisttpll
aaa
fmulp
fs
mov
push
cmp
scas
stos
ffreep
popa
push
dec
test
out
adc
xor
push
lds
and
xchg
sbb
jecxz
jp
dec
jnp
ss
adc
fisttpll
push
adc
psllq
or
lods
mov
sub
aam
cmp
and
inc
adc
out
sbb
sbb
je
js
jmp
je
mov
popf
nop
cmp
xchg
jp
cld
pop
loope
sbb
flds
or
mov
jnp
fiadds
and
lahf
cmpsl
shrl
leave
ret
inc
out
xchg
adc
ficoml
jg
mov
test
xor
jp
or
adc
pop
sahf
sbb
push
es
inc
and
jae
inc
inc
dec
js
xchg
stos
push
std
nop
subb
push
dec
pop
popa
cmp
lcall
jmp
pop
cli
adc
out
mov
lahf
xor
arpl
fs
pop
repnz
mov
ljmp
pop
xorl
add
pop
and
inc
inc
adc
jge
in
flds
dec
push
lret
stos
inc
pushl
jb
mov
stc
cmpsl
and
stc
cwtl
stos
jo
sbb
cwtl
outsl
mov
xor
xchg
mov
out
aam
mov
pop
ljmp
imulb
out
and
into
fadd
push
cmc
mov
xor
int3
jno
out
push
shrl
sub
in
aad
mov
sqrtps
dec
sub
ret
jmp
add
outsb
icebp
jno
shlb
pushf
lods
outsb
jmp
ret
repnz
pop
fadds
pop
dec
adc
ss
in
add
outsb
add
push
mov
sbb
inc
pop
arpl
gs
jle
mov
or
mov
out
cmpsb
fstl
bound
std
inc
stos
lock
loopne
insb
mulb
test
push
jl
outsl
adc
loopne
xchg
push
jne
inc
fmul
mov
mov
mov
pop
jno
loop
ljmp
jbe
jbe
in
fs
mov
inc
js
xchg
mov
loope
icebp
popa
add
pop
ja
fwait
fs
cmp
cli
mov
pop
cs
movsl
xchg
out
push
icebp
mov
in
inc
push
loop
jmp
lea
ljmp
das
clc
decl
xor
xor
push
std
xchg
mov
loopne
jl
insl
andl
push
dec
jbe
call
into
pop
dec
cli
in
mov
in
inc
mov
jg
stos
sub
repnz
or
inc
ret
shr
xor
repz
call
loope
aad
sbb
arpl
mov
mov
jne
cmpsb
push
jmp
call
repnz
or
push
or
jne
xchg
xchg
adc
adc
stos
cmpl
popa
sbb
mov
js
pop
in
stos
cmp
add
or
push
mov
add
ret
xchg
pop
or
cmp
inc
es
inc
and
sub
xchg
fstpl
mov
pusha
in
sti
adc
pop
xchg
push
in
daa
push
js
in
and
jle
dec
sbb
testb
xor
push
js
shll
cs
or
mov
loope
sbb
and
mov
fisttpl
cwtl
into
fbstp
lock
push
mov
sbb
sbb
aas
dec
mov
jecxz
xor
stos
inc
inc
aam
pushl
sbbl
and
push
cmp
push
mov
sub
pop
cltd
addr16
jg
lea
push
push
stc
sub
xorb
xlat
cmpsl
incb
jmp
rcr
sub
xchg
rol
rolb
adc
inc
sbb
vpunpckldq
or
pop
ds
mov
jbe
test
lcall
out
repnz
mov
aam
mov
sub
test
pop
push
pushf
dec
mov
iret
mov
fists
imul
divb
test
ja
call
add
mov
and
push
push
out
sub
mov
test
inc
mov
xchg
test
js
stos
inc
fistl
idivl
aad
fnstenv
cmp
cli
cli
pop
lods
mov
lods
andb
xor
xchg
bound
sub
adc
push
mov
jne
nop
out
imul
cmp
add
into
adc
lods
push
sbb
mov
xor
and
sarl
imul
dec
fsubs
or
push
xor
popf
ret
int3
xchg
jmp
and
xchg
fildl
xchg
bound
or
xchg
lret
inc
inc
aas
push
and
or
dec
sub
out
out
jno
rep
sub
ret
adc
mov
add
xor
dec
xchg
pop
mov
xor
add
inc
fxch
sbb
pop
push
mov
lahf
aam
xchg
push
push
pushf
mov
add
xchg
aas
outsb
hlt
fmuls
test
jecxz
inc
in
cmp
mov
test
leave
and
lret
sbb
and
adc
data16
and
xchg
call
jno
sbb
popa
lds
xor
sub
mov
sahf
rorb
xor
mov
hlt
int3
out
in
xor
xchg
test
ds
fsubr
outsl
sbb
adc
wrmsr
stos
mov
js
xlat
xor
dec
fildll
push
out
push
daa
popf
mov
lret
mov
fsts
out
xchg
cmp
cmp
movsb
lahf
pop
stc
inc
dec
test
into
push
fdivrs
sti
fs
outsb
insl
cwtl
or
push
ret
hlt
add
mov
pop
stos
sub
lret
cld
or
dec
sub
insb
adc
in
xor
mov
xchg
cld
mov
jg
stos
mov
xchg
adc
jmp
cltd
loopne
jne
fcmovnbe
adc
add
cmp
insb
push
in
and
jns
cmpsb
popf
or
inc
cmp
cmp
push
mov
rcrb
sbb
inc
fcomip
in
in
neg
mov
dec
out
xor
pop
xlat
lods
push
nop
stc
test
sub
rclb
mov
mov
or
rcrl
cmpb
shlb
pop
addb
enter
mov
shl
cs
mov
outsl
mov
loopne
scas
pushf
xor
xchg
addr16
jmp
add
adc
imull
or
adc
aaa
push
adc
dec
mov
dec
adc
pushl
fisttps
adc
ja
movsb
stos
jbe
es
notb
stc
push
cmp
into
inc
sbb
mov
out
lds
imul
leave
xchg
xchg
sti
jbe
inc
xchg
pop
cmc
sbb
sub
lret
pop
call
or
jnp
roll
jmp
aas
sub
stos
push
aad
aas
shl
mov
sbb
leave
lea
aam
cmp
bound
and
xchg
jp
push
cltd
xchg
fwait
cmp
out
sti
dec
pop
das
mov
pop
mov
nop
addr16
pop
imul
xlat
enter
nop
cmp
lret
cwtl
mov
sbb
stc
or
shrb
nop
sbb
mov
pusha
sub
inc
cmp
jl
lods
dec
and
xchg
shl
not
loopne
push
adc
lods
pop
stc
lds
cli
pop
sbb
add
cmp
mov
les
cmp
mov
lea
cs
int
hlt
data16
mov
call
adc
int
sbb
push
cmp
push
dec
cmc
xor
add
push
sub
or
rcll
and
cwtl
cmp
add
pop
inc
std
inc
sub
dec
fstpt
dec
shrl
push
jae
cmpsb
into
fsub
cmc
or
xor
push
rolb
add
es
rol
js
hlt
hlt
pop
xor
xchg
push
or
xchg
xor
popa
clc
push
sbb
jg
mov
bound
shll
mov
hlt
scas
xchg
repnz
adc
cmc
mov
adc
adc
insl
jnp
lds
jne
das
adc
push
dec
pop
in
ret
mov
out
std
out
iret
push
push
test
lds
movsl
das
addr16
push
dec
arpl
add
and
push
sub
out
inc
mov
stos
add
mov
outsb
push
loope
je
pop
sarb
stc
sbb
push
pop
add
add
aas
movsb
int
test
mov
pop
test
fisubl
push
xorl
push
mov
in
pop
hlt
cmp
sahf
jnp
cmp
dec
xchg
sahf
xor
jb
mov
into
sub
xor
mov
or
fs
mov
push
ret
fistps
fimuls
mov
jo
sbbb
popa
aam
mov
aad
aas
jge
lods
mov
arpl
xchg
mov
rcrb
shrb
or
cmpsl
cmp
push
enter
mov
cmpsl
lods
sbb
pop
addl
mov
mov
adc
movsl
push
push
popf
cmp
pop
mov
pop
fs
mov
das
stos
sbbb
xchg
rorb
and
mov
stos
mov
iret
cmp
mov
insl
jg
push
and
pop
das
in
leave
and
sub
mov
call
mov
pop
jbe
stos
sub
push
std
lds
outsl
push
and
adc
inc
std
cmp
imul
xchg
mov
hlt
push
xor
pop
insl
jb
fdivl
push
xchg
dec
in
mov
in
push
xor
push
lds
jo
jecxz
add
pop
repz
mov
jp
out
xor
push
paddsw
push
mov
faddl
lods
and
scas
rcr
xchg
mov
stos
xor
lods
mov
mov
aas
jmp
aaa
inc
arpl
mov
cmp
mov
rclb
xor
and
pop
sub
xlat
mov
mov
std
push
push
xchg
out
xor
icebp
arpl
jge
invd
aas
loop
jp
cmpsl
in
cmp
mov
fninit
xchg
insb
inc
inc
or
adc
fs
pop
push
cld
inc
pop
shll
cmp
cwtl
pop
sbb
dec
jg
adc
pop
test
sub
add
pusha
lcall
outsl
and
in
inc
aad
jae
sub
push
test
hlt
sub
stos
fadd
addr16
xor
inc
jecxz
push
inc
push
xor
dec
into
pop
mov
add
cmp
gs
in
test
arpl
xchg
das
sub
jmp
mov
sub
pop
push
fisttps
add
adc
or
ljmp
mov
sahf
adcb
daa
out
orl
mov
dec
pop
popf
ljmp
and
in
xor
jg
sbb
adc
test
test
and
add
sub
or
cwtl
sub
sbb
aas
outsb
push
xor
cmp
or
xchg
mov
push
sti
xchg
cs
xor
jp
pop
adc
lret
and
add
and
xchg
aaa
je
mov
mov
fs
and
rcrb
rcrl
adc
loope
mov
mov
clc
inc
sahf
or
mov
sahf
xor
inc
ds
dec
pusha
lcall
add
leave
je
sti
or
xor
xchg
xchg
add
shrl
adc
mov
mov
lahf
add
cmp
cmpsb
xchg
rep
mov
lock
pop
je
xchg
lcall
gs
int
push
pop
lock
adc
push
mov
pop
cs
into
fmul
test
cmp
pop
push
pop
push
sbbl
testb
inc
sub
subb
dec
lret
ffree
shlb
roll
cmp
xor
pusha
dec
in
sahf
push
stos
sbb
imul
add
andb
jp
sbb
into
bound
aas
call
aaa
adc
repnz
xchg
pop
movsl
mov
sub
mov
jg
je
jne
loop
loop
push
dec
pop
lock
pusha
mov
sbb
cmpsb
push
jp
ss
pop
push
insl
push
jbe
faddl
addb
loopne
jb
out
and
mov
mov
fucomip
jg
pop
push
push
sarl
push
lock
xor
dec
out
push
xchg
push
push
pop
jns
dec
adc
sub
fisubl
sub
data16
push
outsb
jnp
xchg
inc
mov
loop
cltd
mov
out
cmp
inc
int3
cmp
stc
std
mov
incl
mov
shrb
fstp
cmc
xor
stos
jmp
stos
decb
test
or
adcl
in
pusha
mov
in
movb
mov
dec
jp
dec
nop
ds
mov
mov
cs
mov
fs
xor
int3
adc
pop
push
mov
cli
loope
data16
cmpl
or
xor
xor
sub
pop
xor
in
test
push
fndisi(8087
ds
push
or
repz
icebp
adc
sbb
test
test
fisubrs
inc
push
sub
subl
mov
inc
into
inc
shlb
pop
xor
xchg
push
mov
ljmp
mov
sub
sbb
and
rclb
xor
shr
dec
xor
lock
mov
push
or
and
adc
push
notl
ds
lds
in
mov
and
pop
insb
sarb
or
pusha
and
pop
mov
arpl
adc
jg
mov
pop
push
cltd
and
in
push
pop
mov
cmc
mov
jp
push
cmc
js
loope
cmp
stc
adcb
sbb
mov
inc
ljmp
notb
mov
in
push
xchg
xlat
push
cmpsb
je
pop
into
lcall
sub
sub
xchg
and
mov
mov
lds
xchg
xchg
fidivrl
gs
movsl
les
mov
pop
ret
mov
and
outsb
scas
xchg
mov
push
dec
ror
xchg
xchg
fisttpl
call
movsl
mov
aas
scas
movsb
pop
jge
cmp
nop
jle
lods
xor
arpl
cmp
and
pop
push
mov
iret
pushf
sbb
int
dec
inc
mov
fstpl
ret
mov
pop
outsl
mov
push
test
xor
inc
addr16
jp
nop
lahf
pop
xor
push
or
mov
jo
mov
push
add
aad
jns
imul
stos
xor
call
divl
icebp
adc
cli
out
repz
mov
mov
cmc
dec
clc
in
add
xor
shr
adc
inc
fisubrl
pushl
pop
fcoms
cmpsb
in
mov
push
xor
add
pop
rol
jmp
dec
mov
mov
xor
cld
pushf
mov
mov
xorl
cmc
mov
dec
xchg
daa
push
sbb
inc
popa
lods
inc
jl
insl
add
push
add
sub
stc
xchg
les
out
aas
dec
in
mov
xchg
sub
or
mov
pop
repnz
sbb
scas
stc
add
and
pop
xchg
and
clc
jnp
pop
es
and
or
movsl
push
dec
pop
jmp
cmp
orl
push
sub
dec
cmp
scas
loop
pop
inc
xorl
mov
das
in
jmp
jle
pop
pop
add
mov
pop
cld
aas
push
and
inc
dec
adc
rcl
jbe
fstpt
lret
bound
jns
adc
dec
int3
lret
jne
mov
dec
dec
cmp
outsb
popa
push
pusha
paddw
sub
popa
mov
mov
adc
push
out
loop
jb
into
cwtl
pushf
push
sti
sbbb
jns
add
in
xchg
ds
or
mov
fiaddl
or
mov
incb
jno
addr16
adc
pop
fisttps
clc
or
movsl
sub
sbb
sub
xor
mov
jp
jge
sub
xchg
dec
outsl
mov
adc
mov
sub
mov
sbb
in
int
cmp
mov
cmp
imul
imul
push
in
dec
ss
ss
lret
xchg
aam
repnz
push
cwtl
dec
lcall
daa
xchg
mov
push
dec
mov
gs
ret
ja
and
cmp
jmp
mov
lahf
repz
shll
push
mov
mov
cmp
ljmp
pushf
test
mov
imul
lods
inc
clc
out
xor
xor
jo
or
outsl
push
or
movsl
cmp
or
xchg
pop
push
je
movb
leave
inc
movsb
jne
xor
psubsw
adc
or
sarb
loop
sbb
mov
and
inc
fstpt
pop
fstl
pop
mov
js
daa
add
lods
mov
pop
stos
in
test
popa
aas
push
or
imul
cmp
and
jno
jmp
lods
inc
shll
push
insl
lret
add
popa
xor
sbb
jae
mov
shrb
loop
mov
cmc
je
loop
inc
lret
or
ds
push
sub
jae
mov
arpl
ja,pn
push
pop
cwtl
mov
stc
push
call
call
dec
loope
xchg
cmpsb
mov
sub
mov
xor
aam
or
pop
cmc
xchg
sbb
pusha
mull
cmp
mov
out
ret
loope
scas
rcr
mov
dec
test
mov
sahf
stos
shl
ret
pop
scas
pop
xor
add
push
xchg
sbb
pop
jmp
jge
or
sbb
ret
insl
push
xlat
outsb
mov
shrb
inc
mov
shlb
int
cmp
xor
js
pusha
out
adc
lcall
shlb
mov
sbb
sbb
mov
push
cltd
ja
adc
fisttpl
js
push
and
pop
mov
fdivrs
cmpsl
cmp
xchg
mov
mov
cs
imull
inc
or
inc
fnstcw
dec
mov
pop
xor
xor
js
loope
inc
sahf
mov
inc
push
andb
shr
xchg
push
sbb
adc
add
push
pop
cmp
inc
mov
dec
sti
jae
repnz
sbb
adc
pop
nop
xchg
cmp
add
lods
inc
int3
inc
sbb
mov
push
je
cmpsl
and
sbb
sub
aaa
xor
lahf
pop
xor
xchg
es
ljmp
negb
out
ret
rcll
dec
enter
iret
fstl
mov
in
icebp
pop
jb
sub
mov
mov
js
lret
jmp
std
mov
test
mov
lods
jmp
push
aad
outsb
jl
jne
not
pop
addr16
es
jl
cmc
cld
mov
jl
pop
add
xor
out
sub
fmull
jne
in
shrb
xchg
xchg
ljmp
jno
mov
cmp
dec
mov
inc
sbb
clc
xchg
inc
or
dec
loopne
pusha
adc
insb
inc
out
sub
xor
repz
xlat
pop
fldl
pop
jnp
cltd
and
out
push
cmp
xor
das
aaa
pop
inc
in
add
sarb
notl
jmp
pusha
jl
shll
mov
sbb
jp
dec
arpl
add
add
mov
push
scas
mov
push
psubw
inc
add
aam
sti
add
push
mov
loopne
adc
pop
cmc
idivl
pop
sub
add
sub
nop
or
mov
pop
movsb
inc
int
pop
insl
jnp
mov
filds
jp
push
addr16
sahf
mov
shrb
sub
dec
push
es
adcb
fwait
or
mov
in
xchg
je
mov
das
and
push
dec
test
maskmovq
and
cld
cmp
imul
cmp
movsl
stc
xchg
add
test
inc
jno
push
xchg
add
pop
add
dec
repz
ja
pmulhw
dec
inc
mov
aad
pop
nop
enter
sub
cltd
fs
pop
mov
in
insb
xchg
pop
adc
notb
mov
mov
clc
gs
mov
std
outsb
insl
stos
das
fdivr
leave
pop
mov
fldenv
into
ret
jns
sub
push
in
inc
jg
int
in
mov
pop
push
mov
rdtsc
push
cltd
adcb
inc
shrb
mov
sahf
hlt
lock
fidivs
sti
xchg
jl
pop
jge
lret
mov
jge
mov
add
push
adc
push
test
dec
rcr
sbb
push
push
pusha
cli
out
iret
adc
arpl
add
push
push
cmc
jp
lret
hlt
mov
mov
imul
jg
inc
xchg
insb
cld
mov
shl
ss
cwtl
mov
das
mov
mov
or
adcb
sahf
sahf
jecxz
pushl
cmp
pop
sbb
mov
push
mov
arpl
rol
lods
cli
aas
loope
test
data16
pushf
xorb
movd
mov
insb
add
out
test
pop
insb
in
xchg
mov
ja
ret
aas
addr16
jecxz
nop
ret
lcall
mov
imul
inc
data16
cmp
mov
dec
nop
dec
or
dec
loopne
in
outsb
in
addr16
bound
bound
xchg
mov
dec
pop
popf
ds
addr16
sbb
mov
lahf
jb
mov
xchg
xchg
mov
sahf
mov
enter
enter
jecxz
hlt
push
mov
imul
pop
add
fdivrs
or
jnp
mov
insb
or
dec
inc
mov
out
pop
stos
jbe
inc
icebp
mov
iret
seto
jecxz
xchg
adc
pop
mov
pop
push
mov
jle
cmp
jge
sub
cwtl
scas
loop
pop
lods
push
mov
cmp
mov
lret
into
nop
insw
sub
adc
mov
jge
mov
stc
pop
lock
xlat
lret
out
sahf
dec
jge
xor
xor
sub
inc
xor
aam
cmp
inc
or
aam
clc
mov
xor
or
movsb
fadds
add
mov
loope
mov
mov
js
inc
push
cmpsl
cmpsb
lock
add
xor
push
stos
jo
dec
pop
xchg
xchg
das
adc
call
clc
mov
fcmovb
jbe
je
ret
dec
xchg
aad
repnz
mov
or
jecxz
mov
ds
xchg
mov
add
xchg
inc
jg
dec
mov
ret
pusha
sbb
les
xchg
nop
mov
push
jno
test
push
mov
popa
inc
xlat
or
jne
insl
mov
loope
pushf
ljmp
xchg
mov
mov
sbb
xchg
mov
fnstcw
sbb
loop
xor
sub
xchg
add
add
add
std
mov
addr16
scas
mov
lods
dec
mov
mov
or
aas
mov
mov
mov
ljmp
daa
ja
fidivrs
jno
cmc
cs
xchg
clc
adc
xor
outsl
loop
imul
cmp
andb
or
pop
xchg
jp
mov
aaa
jns
mov
jnp
nop
sbbl
push
mov
xorb
incl
cmp
xchg
les
and
cwtl
das
xor
inc
insb
jb
icebp
push
aad
sub
jmp
jb
mov
jmp
cltd
inc
addl
pop
in
addr16
jno
imul
outsb
pushf
rcrl
or
mov
or
adc
vmaxps
and
and
addr16
push
sahf
mov
push
imull
loopne
ret
int
imul
mov
sarl
enter
insl
movsl
adc
xor
add
cmpsl
ja
sbb
imul
jle
das
pop
ret
jnp
sbb
pop
pop
xor
sub
sbb
or
rcr
ds
cld
push
cwtl
sub
push
fldl2t
mov
pop
mov
cmpsl
not
arpl
shll
test
stos
xor
test
rorb
sbb
dec
loope
loop
out
ds
cli
nop
daa
jge
pop
dec
pop
pop
scas
inc
dec
or
cld
cmpsl
push
repnz
loopne
xchg
in
cli
or
mov
adc
push
dec
xor
lahf
bound
es
rolb
adc
pop
mov
jno
repnz
mov
iret
xchg
add
sub
ficomps
in
dec
fwait
cmp
out
hlt
xchg
imul
nop
paddd
sub
mov
jae
sub
sbb
sub
ss
je
loop
push
mov
out
mov
and
or
in
ret
roll
orb
cs
jo
ds
sub
xor
lds
push
rclb
and
outsl
inc
pop
es
mov
les
xchg
ja
loop
rcll
sbb
mov
mov
call
jb
jmp
dec
nop
xchg
out
xor
cmc
mov
or
pop
mov
nop
daa
pop
push
in
push
mov
fidivrs
lcall
xchg
add
shll
jle
lods
mov
pop
jg
stc
xchg
push
icebp
or
mov
jle
aad
outsl
or
ja
subb
test
call
add
sahf
sbb
popf
nop
xor
or
loope
scas
rorb
jno
hlt
dec
jmp
cmp
push
les
sub
and
sbb
add
pop
cltd
ficompl
lret
cmp
out
movsb
cld
out
xor
jg
ret
jge
cli
xor
add
ret
pop
shll
and
fs
push
test
mov
inc
inc
movsl
repnz
sub
pop
les
adc
ss
adc
cld
jg
jmp
or
cmp
shrl
rcrb
push
cwtl
call
pop
and
mov
xchg
xchg
rcrb
fs
mov
xor
ds
lods
inc
negb
repz
mov
adc
pusha
sbb
add
xor
ret
cmp
push
lods
pop
icebp
aam
inc
jbe
pop
xchg
loopne
adc
mov
push
sub
sbb
ret
fsubl
iret
in
hlt
jge
sti
gs
mov
jle
push
ljmp
mulb
cmp
mov
mov
cmp
roll
mov
inc
in
xor
push
out
push
das
inc
nop
push
pop
cmc
xorl
out
test
inc
push
hlt
mov
add
sbb
and
add
push
sub
stos
cmpsb
pop
cmp
insb
insb
cmp
loopne
sub
inc
loopne
inc
ret
inc
jbe
push
add
xchg
fcompl
hlt
mov
pushf
jae
int3
push
sub
pushf
orb
push
xchg
jno
test
and
jmp
out
lahf
jmp
and
push
cmpsb
out
cmp
call
mov
jl
lret
mov
scas
enter
jbe
and
dec
xchg
inc
mov
outsb
mov
adc
mov
dec
nop
test
les
mov
mov
xchg
adc
jne
xchg
fsubl
cmp
dec
mov
pop
nop
pop
in
mov
cmpsl
inc
sub
imul
cmp
sub
xchg
ror
add
addr16
adc
push
and
test
cmpsb
lock
loop
push
rorl
rol
inc
sub
mov
inc
mov
mov
push
mov
sub
hlt
adc
gs
ficoms
ss
call
dec
pop
in
adc
cltd
mov
icebp
xchg
jnp
aaa
and
mov
dec
arpl
out
dec
dec
push
aam
shrl
cmc
sbb
pop
std
sub
enter
lods
and
xorb
sbb
and
test
mov
scas
mov
lahf
cmpsl
hlt
push
movq
or
jae
xor
stos
dec
dec
mov
sub
cltd
hlt
add
cli
push
outsb
jne
fcomip
gs
jne
out
cmpsb
shll
scas
inc
iret
sbb
filds
loopne
sub
repz
mov
jno
and
jno
xchg
cmp
pop
loope
dec
xrelease
xchg
pop
mov
adc
sbbl
xchg
mov
clc
in
test
pusha
pop
fnsave
test
shrd
out
jne
and
hlt
insb
into
gs
imul
cmp
icebp
jns
pusha
insb
sbb
adc
mov
adc
jne
adc
pop
cmpsl
xor
mov
jae
stos
test
and
lods
jmp
xor
ss
rcrl
push
mov
repz
icebp
inc
repnz
adc
ficoms
mov
stc
stos
mov
icebp
mov
push
loop
inc
inc
arpl
push
push
mov
addr16
out
dec
dec
icebp
ljmp
cmp
orb
jl
out
mov
xchg
aaa
sub
imul
adcb
push
repz
lock
pop
mov
mov
xchg
mov
stos
sarb
xchg
ja
and
cmpsb
mov
lcall
push
jne
imul
popf
cmpsl
lahf
jae
out
or
lret
ret
clc
arpl
movsb
sub
sub
dec
dec
sub
mov
daa
jp
mov
xor
or
inc
jb
inc
out
xlat
mov
or
xor
mov
jne
mov
pop
and
std
push
outsl
les
bound
aad
sbb
adc
mov
ja
in
aam
outsb
xor
dec
ret
ffree
lea
cmp
rorl
ret
pshufw
sbb
dec
mov
pushf
and
rcr
and
mov
sbb
jle
lods
sahf
scas
cmc
adc
push
cltd
pop
dec
inc
sub
add
push
jmp
dec
ret
cmp
stc
sbb
xchg
inc
add
outsb
aaa
adc
jle
xor
lahf
cmp
mov
rcrb
push
jbe
out
bound
push
jno
xor
xor
mov
out
imul
ds
sub
jp
inc
pusha
xor
or
jnp
sub
jnp
and
or
gs
cmp
xchg
add
dec
push
lods
mov
and
std
xor
out
decb
loop
fldenv
loop
or
imul
or
xor
xchg
dec
data16
mov
add
sub
mov
inc
inc
mov
sbb
outsl
add
jp
outsb
sub
outsl
mov
sbb
out
rorl
sub
and
push
pop
mov
out
inc
pop
xorl
lock
xchg
out
test
int
loopne
in
and
pusha
movsl
das
mov
inc
jae
test
jo
dec
ror
xchg
punpcklbw
out
jo
and
xchg
mov
add
or
lods
xor
mov
and
call
popf
sub
rcrl
jae
loop
test
hlt
fidivrs
scas
push
int
jae
pop
loope
sbb
inc
dec
jl
and
call
cmp
loop
test
ficompl
movsl
mov
cmp
lret
jecxz
cmpsb
dec
cmp
pop
popf
pop
pop
loop
stos
outsl
dec
push
cmp
loope
test
aaa
iret
xchg
add
ror
lahf
fistps
push
push
push
iret
fs
xor
mov
movsb
hlt
xchg
push
movsl
ret
jg
in
shrb
jbe
mov
and
sub
mov
rcr
in
mov
rol
mov
jmp
cwtl
ret
movsb
inc
xchg
es
rcrl
push
repz
pop
rcll
filds
jns
jb
out
jb
mov
stos
dec
decb
xchg
xor
je
pusha
mov
jbe
popa
push
push
sbb
jae
sti
inc
out
js
jmp
movsb
push
lea
push
add
mov
and
test
mov
inc
adcl
push
pop
mov
gs
sub
ret
je
and
das
mov
test
adc
add
jbe
xchg
add
dec
test
fstps
mov
adc
push
repnz
loopne
mov
jmp
pop
int
xlat
ds
fucomi
pop
testl
add
pop
mov
rcrb
test
push
out
xor
xchg
add
je
mov
outsb
test
stos
hlt
push
cld
testb
js
outsb
and
ret
lret
pop
adc
adc
shrb
jno
xor
insb
mov
sbb
jns
sub
mov
mov
sub
ds
js
aas
mov
lret
ret
or
enter
dec
ds
and
fiaddl
faddp
pop
outsl
mov
sub
insb
xor
lret
cmp
insb
lods
insb
iret
addr16
int
jo
sub
xchg
pop
mov
sahf
daa
inc
or
inc
dec
jnp
mov
ljmp
jae
enter
sbb
movsb
jns
inc
inc
fdivs
ljmp
push
test
aaa
pop
ss
xor
lds
repnz
hlt
mov
lcall
data16
lret
call
and
cmpb
pop
std
sub
pop
sbb
mov
add
adc
mov
div
in
movsb
dec
rolb
xchg
xchg
xlat
adc
cmp
enter
bound
mov
rorl
push
movsl
js
push
push
mov
dec
sub
jle
pop
adc
cmp
xor
pop
ret
jge
add
or
push
add
or
adc
jo
or
and
scas
inc
jb
pusha
je
mov
call
and
xchg
sarl
mov
sbb
mov
add
xor
out
jl
cs
or
push
pop
xchg
jmp
mov
and
out
mov
sbb
xor
pop
fs
shlb
enter
fsubrl
pandn
push
loope
mov
lret
dec
adc
pop
dec
cmp
jmp
jb
pop
movsb
mov
sbb
in
jle
jmp
jbe
aad
fcomi
cmpsb
ljmp
addl
pop
dec
mov
and
rolb
cmpb
pop
inc
mov
sub
das
jbe
in
jge
mov
popa
mov
mov
mov
push
fbstp
jns
iret
mov
popa
mov
and
mov
or
jne
enter
in
ficoml
out
sub
jl
test
push
sbb
out
popa
mov
shll
test
outsl
push
push
std
inc
ss
pop
mov
fwait
xor
insl
adc
push
ds
inc
pop
ss
push
sahf
xchg
cmpsl
mov
sbb
iret
xor
hlt
in
xor
inc
fwait
jbe
pushf
jmp
call
mov
mov
adc
aaa
mov
pop
imull
pop
test
fs
idivb
out
loopne
enter
sbb
mov
lea
addr16
xchg
or
lods
mov
inc
inc
push
test
push
cmc
adc
je
push
je
das
mov
jl
inc
push
mov
aaa
mov
shr
test
adc
std
cmp
or
mov
into
adcb
pop
xorl
adc
stos
sub
xchg
pop
stos
mov
outsl
daa
mov
push
jmp
and
scas
fucomi
xor
call
add
jb
cmovne
adc
call
sbb
xor
pop
pop
inc
mov
jo
push
rol
sub
xchg
dec
loop
sub
mov
mov
sub
push
rcrl
imul
mov
mov
adc
insl
in
cmp
xorl
or
int3
inc
cmp
xor
xchg
movnti
mov
mov
or
lds
pop
popl
mov
imul
sbb
cmp
ror
pushf
out
jnp
mov
test
nop
btrl
pushf
cli
add
popa
test
ja
push
dec
leave
dec
mov
outsb
cmp
mov
sahf
jge
jle
jno
add
int3
ja
mov
add
mov
out
and
sub
sbb
sbb
outsb
push
jae
psrad
dec
js
icebp
cmp
in
mov
in
shrb
sbb
and
pop
outsb
cmp
mov
pop
cmp
leave
mov
mov
and
push
push
nop
sub
jmp
cli
fwait
push
mov
cmpsb
mov
push
icebp
add
dec
test
shrb
stos
rcl
les
call
jge
mov
movsb
sahf
mov
inc
push
in
xor
sbb
stc
jmp
notb
mov
fcmovnbe
repz
hlt
fistl
daa
inc
cmp
lret
in
data16
push
pop
inc
dec
mov
inc
data16
enterw
enter
scas
sti
inc
aam
dec
sub
adc
mov
fldl
cmpsl
mov
inc
insb
dec
mov
ds
icebp
scas
inc
imul
testb
scas
mov
adc
cmp
enter
addr16
inc
add
pushf
sbb
mov
sbb
in
lcall
or
sub
jo
pop
add
xchg
pop
scas
add
mov
lcall
push
sub
adc
shll
or
fcomps
mov
loope
fcoml
mov
push
cmpsb
xchg
jbe
shrb
xor
xchg
outsb
sbb
testl
test
pop
sbb
jp
loopne
negl
fisttpll
cmpsl
pusha
mov
mov
or
addr16
les
cld
enter
sub
mov
add
in
mov
repnz
mov
inc
lock
sti
popa
fcmovne
les
xchg
jge
ja
icebp
xor
jmp
pop
pop
loope
xchg
adc
imul
arpl
inc
popl
dec
mov
lea
pop
dec
dec
aad
daa
lds
dec
mov
inc
or
xor
hlt
adc
cmpl
pusha
shlb
fdivrs
add
fdivrs
mov
jnp
jb
xor
pop
push
imul
xchg
jle
mov
xchg
push
cli
in
ss
xchg
outsb
rcrl
dec
jecxz
xor
mov
xchg
dec
sbb
repnz
outsb
icebp
jl
cli
dec
and
movsl
push
repz
scas
adc
mov
rorb
aas
jnp
jno
dec
loop
adc
imul
push
jl
push
dec
pop
sub
xlat
inc
in
imul
rorl
divl
cwtl
std
xchg
movsl
sbb
test
lcall
shrb
shl
inc
sahf
push
inc
mov
loopne
jo
xchg
das
mov
out
xchg
inc
lods
mov
pop
and
cmpsl
sbb
in
or
pop
ljmp
mov
ret
xor
mov
push
dec
dec
out
pop
ljmp
lea
lock
lds
sbb
cmp
out
in
jl
jo
jo
pop
xchg
test
cmp
call
cmp
stos
in
sbb
inc
lods
cmp
arpl
out
jb
sub
push
dec
jno
jl
sub
dec
sbb
jmp
xchg
scas
jge
sbb
lods
shl
or
cwtl
icebp
jg
test
arpl
out
cmc
aad
out
jle
jmp
xorl
xchg
mov
ss
dec
stos
in
dec
add
cmpsl
outsl
push
sahf
sub
inc
movq
xlat
cltd
inc
mov
clc
push
cmpsb
dec
popf
jbe
into
addr16
jne
mov
add
xchg
add
out
icebp
mov
ret
sub
and
fldcw
stos
push
fidivl
lret
lods
xor
mov
and
and
xor
pandn
sbb
or
fsubl
aam
mov
scas
loop
sbb
iret
stc
sub
data16
xchg
push
fisttpl
jp
or
push
test
movsb
cmp
cmp
es
sar
sbb
mov
jo
mov
ds
mov
jle
testb
jmp
pop
xor
aaa
sub
xlat
cs
jge
dec
lcall
add
xchg
dec
movsl
push
cmpsb
adc
cwtl
mov
aad
jnp
sbb
lahf
ds
fisubrl
xlat
push
clc
aam
jo
sub
fwait
ds
mov
mov
dec
mov
cli
dec
movsl
cld
arpl
lahf
outsb
shr
push
lods
inc
mov
sub
cmpsl
fisubrl
jae
add
jne
push
mov
ret
aad
mov
hlt
fidivs
fistl
mov
mov
icebp
add
and
cltd
xor
mov
mov
mov
dec
mov
add
sarb
jmp
int3
sub
mov
lcall
push
push
call
jmp
lahf
lahf
inc
or
ljmp
jge
sbb
stos
xchg
cmp
hlt
mov
jp
ds
adc
aas
jge
pop
xor
inc
lcall
mov
inc
addr16
lea
dec
xchg
stc
mov
sub
add
lret
xchg
mov
mov
or
mov
mov
jne
in
push
call
adcb
mov
pop
paddq
stos
cmp
fwait
jle
pop
sub
mov
pop
xchg
sub
xor
adc
push
jae
ds
js
fldcw
adc
xor
push
in
pop
insl
and
dec
cmp
and
push
add
cld
lcall
jne
test
test
jge
inc
cmp
mov
xor
fprem1
adc
cmpl
jnp
inc
mov
mov
movsb
pop
insl
lret
out
mov
jge
das
aad
lea
fcoms
lcall
inc
stos
dec
add
mov
lds
jb
xchg
mov
jle
shll
rcrb
mov
inc
jecxz
std
clc
cmp
sar
mov
shrb
or
sahf
mov
mov
sub
enter
cmp
in
outsb
dec
shrb
sbb
repnz
test
dec
mov
loopne
rcrb
jge
mov
int3
mulb
leave
sub
sbb
lahf
push
lcall
or
sbb
inc
lock
mov
into
mov
cmp
js
or
rcr
jmp
pop
jg
out
lock
sarl
jo
mov
cmc
orb
pxor
pop
stos
popf
jns
jmp
mov
xchg
mov
ss
ja
dec
dec
leave
je
pop
mov
movsl
incb
cmpsl
insl
sub
xor
pushf
jle
pop
insl
fwait
push
sbb
and
mov
push
inc
pop
push
push
inc
inc
pop
in
pop
dec
fdivs
in
addb
outsb
cmp
lock
fdivl
fs
mov
bound
sbb
mov
pop
pop
push
jae
sub
out
dec
inc
out
shl
aas
mov
xchg
das
adc
repnz
cltd
sti
shr
lods
pop
je
repz
sub
icebp
dec
mov
push
push
sbb
pop
movsl
shlb
mov
ret
les
roll
test
mov
push
jg
adc
add
xchg
add
inc
invd
and
ljmp
mov
notl
mov
add
or
loope
nop
sahf
fs
pop
scas
jge
bound
rorl
int
out
jns
sbb
pop
inc
inc
jns
lock
pushf
cmpsl
js
mov
enter
divb
sub
ja
sub
adc
jae
add
inc
push
sbbl
leave
xlat
shr
or
mov
pop
mov
pop
push
sbb
fldcw
jmp
dec
mov
subb
std
add
es
test
repz
jge
cltd
mov
pop
cmp
dec
adc
sub
mov
icebp
dec
xchg
sub
repnz
mov
push
ja
inc
adc
cltd
or
pop
sub
mov
pop
int3
fdivl
jle
orb
xchg
inc
bound
add
mov
fnstenv
scas
pop
ljmp
jmp
sub
xchg
gs
add
aas
dec
xor
and
addr16
pop
mov
mov
lods
in
xchg
sub
xlat
xlat
mov
or
ret
ret
rol
mov
xchg
ljmp
lock
add
repnz
and
and
sub
jg
rcrb
les
pop
or
call
add
xlat
dec
repnz
rcr
jbe
mov
das
ljmp
cmpsb
mov
pop
fdivs
pop
call
ss
xchg
aad
pop
jo
cld
lahf
clc
xchg
mov
mov
mov
cmp
cld
xchg
aad
jno
leave
rolb
dec
add
adc
xchg
sbb
shl
sbb
and
ret
cwtl
cmpsb
fwait
pop
call
test
test
sbb
mov
int
inc
pushaw
push
test
out
mov
xchg
cmpsl
js
mov
out
pop
adc
inc
inc
test
push
sbb
popf
idivb
aaa
bound
test
adc
in
mov
xlat
mov
ja
sar
adc
mov
lret
pop
mov
mov
ds
pushl
test
rclb
hlt
inc
lcall
mov
jb
aad
pop
sbb
push
es
imul
inc
nop
push
test
adc
out
or
sbb
and
sub
loop
dec
fcmovbe
mov
fisttpl
mov
test
mov
dec
inc
or
jecxz
mov
mov
mov
outsb
xchg
shrb
pop
test
shl
or
adc
mov
test
push
lcall
or
mov
sahf
add
push
add
mov
push
lea
pop
xor
js
rclb
out
jmp
or
push
cmp
xchg
mov
sbb
dec
sbb
out
sub
lea
or
jp
push
cmp
dec
jo
or
and
cmp
jbe
dec
jmp
xchg
sub
jno
xor
mov
cmpsl
out
mov
mov
lcall
sbb
push
sbb
jle
shl
jg
push
popf
dec
jle
xchg
stos
lds
or
jp
int3
or
stc
xlat
or
out
lds
mov
mov
mov
adc
xchg
mov
sub
cmp
jmp
push
mov
jns
and
nop
sub
mov
mov
sbb
push
xchg
stc
stos
push
scas
push
lods
fs
mov
int
mov
cwtl
xchg
imul
lahf
jecxz
push
sub
rcl
repz
loop
cmp
sub
insb
jle
call
mov
shlb
mov
sub
push
movsl
nop
imul
daa
or
pusha
les
testb
mov
pop
push
xor
clc
jmp
daa
loope
mov
sub
mov
mov
or
jbe
enter
inc
stos
inc
dec
pop
mov
mov
loope
cwtl
push
cmc
adc
cmp
test
jp
adc
ss
or
das
aam
cmp
sub
mov
adc
xchg
pushf
xor
add
mov
out
sbb
mulb
ret
movsl
inc
mov
adc
mov
xor
jnp
mov
repnz
adc
xchg
sub
iret
or
sub
test
mov
xchg
not
cltd
mov
add
or
adc
insb
push
push
adc
lret
inc
dec
push
dec
push
insb
cltd
iret
jae
push
test
xchg
pop
cld
shlb
cmp
mov
inc
pop
jl
and
ret
lahf
popf
in
rclb
cld
lock
inc
sub
pop
inc
aad
je
mov
xchg
ror
adc
mov
adc
and
adc
push
jecxz
enter
jae
bound
sub
sub
cwtl
lods
aam
push
jmp
sub
cmp
jg
jmp
mov
cmp
mov
imul
out
sbb
scas
push
mov
aam
xchg
in
add
leave
loopne
push
cmp
mov
inc
subb
cmp
mov
sbb
sub
push
mov
dec
lret
insb
inc
push
mov
hlt
mov
and
ret
repnz
push
sub
dec
xor
push
shrb
jb
mov
push
or
inc
xchg
inc
fnstsw
fldenv
rol
test
movsl
ret
xor
push
movsb
ss
mov
lds
aad
hlt
ret
dec
pop
cmp
mov
or
movsb
sub
orl
in
mov
jge
rcrl
pop
sbb
cmpsb
inc
pop
ficoml
lret
cmp
das
dec
jo
pop
mov
push
and
mov
dec
pop
sbb
ljmp
xor
dec
test
xchg
mov
int3
mov
ret
pop
mov
fisubrs
aaa
adc
jns
pop
dec
shr
aam
adc
lret
lret
and
sub
jb
add
call
cmp
imul
mov
out
xor
in
into
push
and
or
lcall
jecxz
in
das
xchg
or
mov
cmp
mov
shrb
xlat
lea
ret
xchg
int
stc
xchg
enter
mov
or
enter
push
push
adc
ret
dec
jl
call
imul
cmp
mov
ret
lcall
dec
loopne
cmp
addr16
jb
jno
rclb
mov
push
inc
neg
dec
bound
rolb
fisttps
mov
bound
mull
mov
cwtl
mov
daa
mov
ret
xor
test
js
loop
outsl
and
jne
cmpl
sti
pop
clc
cmp
sub
sub
jns
pop
xor
sbb
mov
jb
aad
sub
lahf
enter
lock
add
push
push
dec
test
lds
aaa
iret
add
call
pushf
dec
les
mov
insl
in
fstl
mov
pop
xor
add
fldt
push
jne
aad
mov
rcll
lret
jns
push
into
loopne
fwait
push
lds
cmpsl
push
push
jnp
fiaddl
mov
mov
cmp
in
ss
call
rclb
lock
cmpsl
aad
lahf
mov
jg
mov
xor
lret
loope
mov
xchg
rclb
inc
inc
and
mov
and
inc
cmc
mov
cmp
add
push
inc
xor
fs
xchg
inc
mov
mov
jecxz
scas
aam
fs
jp
repz
xchg
mov
gs
rolb
xor
push
pop
jmp
repz
inc
sti
inc
fwait
call
xor
fstps
ret
cli
and
fistl
imul
scas
mov
test
xchg
pop
jle
lea
leave
mov
sub
testl
lahf
adc
push
repnz
stc
adc
movsl
sub
cld
stos
rorl
int
mov
out
cmpb
mov
push
les
lea
das
cmp
aam
push
pop
mov
lods
jnp
xchg
mov
jle
sub
je
out
sbb
mov
fstps
cs
xchg
and
iret
test
adcb
jo
arpl
mov
fs
mov
push
in
push
cmp
mov
sbb
xor
outsl
mov
push
aam
leave
and
nop
inc
je
xchg
cmc
das
sahf
add
adc
stc
push
adc
adc
pop
push
repz
repz
iret
xchg
push
cs
rolb
repnz
das
cmp
jno
shrb
iret
fcoms
out
mov
std
cmpsb
or
adc
sub
flds
cmpsb
in
push
cld
xchg
push
jecxz
ret
clc
push
xchg
dec
arpl
inc
inc
cltd
inc
fwait
inc
jp
ret
inc
sub
mov
fs
sbb
cmpb
xchg
fsubrl
or
data16
sbb
push
fnstcw
xchg
pop
je
addl
pusha
jp
xchg
inc
cmpsl
cmp
popa
in
cs
sub
sti
out
bnd
dec
xor
and
arpl
xor
movsl
sub
pop
pop
cmpsb
mov
or
loopne
inc
sub
and
imul
adc
roll
push
add
mov
out
mov
test
mov
insb
jle
insl
ret
out
push
fists
mov
mov
add
out
mov
pop
cmp
fcoms
sbb
sub
in
shrl
sub
jge
outsl
fwait
ss
adc
and
or
mov
cltd
cmp
and
inc
inc
sbb
mov
outsl
fcmovnb
jno
movsl
aad
pop
push
into
stc
sar
jne
jns
pushf
dec
dec
cli
add
addr16
sbb
aam
cltd
cmc
std
xchg
daa
es
test
sbb
idivl
xchg
pop
movsb
push
sbb
aas
iret
mov
xchg
jns
and
push
pop
lcall
mov
mov
jae
xor
xor
outsb
jae
push
scas
and
xchg
stc
or
dec
int
not
add
insl
pop
lds
pop
sahf
out
fimuls
outsb
je
inc
xor
xlat
cmp
mov
fs
fs
into
icebp
popf
sub
test
jecxz
test
ret
jo
pop
aaa
sub
jl
xorl
jns
and
movsb
cs
clc
leave
out
addr16
iret
push
inc
rclb
adc
into
adc
arpl
sub
call
leave
or
add
sbb
ret
xlat
std
gs
xor
cmp
mov
test
js
jae
enter
jo
arpl
loope
xlat
pop
xchg
aad
mov
mov
mov
add
inc
pop
add
sub
shrl
push
mov
rcrb
push
mov
cmp
movsl
xchg
push
sbb
lret
dec
cmp
imul
adc
jo
incl
dec
mov
xor
es
fs
into
andb
pushf
sub
repz
ss
test
rorl
push
jge
mov
add
push
fsts
inc
or
jne
pop
stos
lret
ficoml
cmp
gs
mov
mov
rorl
sbb
bnd
or
popa
lds
inc
mov
pushf
xorb
dec
shrl
inc
pop
jns
movsl
cmpl
xchg
inc
cwtl
test
bound
out
mov
leave
hlt
paddw
jge
add
enter
rclb
mov
sub
sub
mov
fisubrl
sahf
cmpsl
nop
repz
in
nop
leave
push
dec
je
adc
mov
fwait
sbb
cwtl
mov
mov
dec
arpl
daa
xchg
loope
xor
or
aas
mov
js
and
push
int3
mov
jp
cmp
lods
fwait
test
orb
xor
sub
fs
dec
jbe
cltd
icebp
jo
insb
xchg
xor
pop
mov
lret
stc
dec
call
push
jg
or
adc
mov
int3
lea
jecxz
pop
xchg
rorb
ds
xor
test
cmc
pop
fstl
inc
int
fdivs
das
jb
rolb
fldt
mov
fcmove
and
mov
or
mov
mov
and
xchg
ja
dec
add
iret
push
mov
cmp
xor
stos
outsl
in
dec
mov
cmpsb
out
nop
jns
push
test
sub
dec
or
nop
ss
push
subl
cltd
cld
dec
pusha
sub
lret
jns
lcall
sbb
jg
shrb
lahf
mov
xor
rcll
nop
stos
push
stos
mov
push
pop
dec
xchg
mov
pusha
sbb
xchg
push
dec
pop
jae
ds
gs
xor
mov
cmpsl
mov
push
icebp
mov
lods
jb
test
mov
loop
loope
std
adc
in
inc
push
jecxz
inc
lock
xchg
mov
pushf
add
push
jae
adc
inc
inc
pop
jne
xchg
inc
jne
and
andb
pushf
pop
fcmovnb
and
subb
xchg
add
jne
adcl
test
stos
rcrb
inc
xchg
jecxz
xor
cmc
cmp
jle
cmp
mov
mov
sbb
subb
fcomi
xor
push
mov
pop
xchg
mov
xchg
cmp
xchg
xor
jecxz
pop
leave
inc
inc
lahf
push
arpl
mov
ljmp
aam
rol
leave
mov
stc
mov
scas
inc
mov
je
mov
out
dec
push
or
cmp
out
dec
or
mov
in
out
mov
inc
popa
iret
xlat
jne
mov
scas
test
adc
test
mov
pop
repnz
push
test
mov
inc
xor
add
mov
aam
cmpl
jmp
stos
adc
inc
lea
ja
ret
mov
jecxz
fnsave
enter
mov
leave
xor
pop
cmp
loop
call
test
rorb
jmp
cmp
inc
fcoms
cmc
pop
jnp
xor
pop
cmpsb
jg
cltd
mov
pop
mov
xlat
scas
and
or
mov
inc
mov
pop
jns
pushf
js
push
adc
jnp
cld
add
xchg
push
xor
test
adc
add
jecxz
and
ss
or
fs
daa
data16
jmp
repnz
adc
aaa
jle
jl
mov
stos
cmp
lock
lock
cmpsb
lcall
jne
fisubl
out
or
jle
xchg
xor
sbb
sbb
cmp
or
mov
xlat
mov
int
push
iret
loope
repnz
cmovns
or
dec
fs
mov
arpl
insl
sbb
add
inc
mov
je
sahf
clc
push
ret
cmc
js
add
fdivrs
arpl
push
lods
addr16
mov
sbb
test
xchg
push
mov
out
rep
cmp
aas
adc
outsb
xchg
mov
add
pop
mov
mov
iret
pop
mov
aam
pop
shrb
pusha
mov
mov
jnp
cmpsl
ds
nop
push
adc
add
pop
scas
jmp
xorb
pushf
cmp
add
rcrl
xchg
repz
cltd
cltd
mov
jmp
pushf
xchg
call
notb
jb
cmp
enter
pop
sub
inc
sbb
mov
stos
nop
pop
movsl
test
xchg
into
je
js
push
xor
push
pop
jno
lods
cmc
pop
fucom
cmp
push
push
and
push
inc
stos
mov
mov
push
or
add
cwtl
test
jl
dec
ljmp
mov
mov
es
pop
pushl
dec
icebp
insb
dec
shrl
sub
push
mov
xor
nop
mov
cmpsl
mov
rcl
or
jg
mov
xchg
rclb
mov
aaa
or
mov
xchg
xchg
mov
dec
jne
sub
xchg
hlt
inc
test
je,pt
push
and
test
inc
cmp
cli
leave
fdivrl
push
pop
loop
xchg
add
cmc
adcl
dec
add
mov
push
xchg
jg
loope
pusha
dec
add
movsl
mov
addr16
fistps
test
shll
mov
cmp
xchg
push
or
js
in
xchg
ror
popf
out
pop
sahf
and
pushf
dec
and
dec
cmp
pop
push
inc
shll
fwait
xor
mov
push
and
jno
test
repz
pop
xchg
ficoms
stos
mov
mov
fistpl
leave
sbb
lods
insl
lock
and
cli
cmpsb
add
fcomps
jmp
dec
rclb
jmp
pop
sbb
jb
out
jl
dec
jecxz
out
mov
xchg
xor
js
or
scas
adc
mov
loope
add
aaa
cltd
adc
fcmovbe
push
xor
aad
lock
ljmp
out
test
stc
xchg
js
pop
fidivs
sbb
mov
inc
pop
mov
jb
rcll
xor
mov
lret
jae
fucomp
jle
add
jns
push
push
add
and
pop
fucomi
movsl
jecxz
and
mov
stos
sbb
rorl
mov
mov
mov
stos
adc
bound
mov
sub
and
mov
stc
je
mov
lock
lret
mov
dec
dec
jmp
lods
cld
mov
fcmovu
outsl
movsb
pop
push
jbe
shlb
roll
adc
mov
inc
or
test
fnstsw
pop
sarb
inc
icebp
fsubl
imul
je
shrl
fwait
dec
int
shl
icebp
out
bound
scas
and
pop
sub
ret
int
inc
ficoml
push
ret
andb
xchg
add
adc
shlb
pop
dec
dec
xlat
sarb
jge
shrl
add
ja
out
push
frstor
push
mov
pop
mov
out
in
or
std
adcb
pop
int
pop
push
jbe
outsb
jo
imul
mov
mov
xchg
xor
fnsave
and
mov
cli
popa
inc
das
mov
dec
call
lods
sbb
and
ljmp
add
ds
popa
pop
xchg
pop
hlt
hlt
cmp
dec
icebp
inc
mov
sub
and
add
push
lcall
push
mov
fisubs
dec
dec
and
mov
fistpll
scas
lods
sbb
es
sbb
stos
mov
xchg
pop
mov
mov
pop
sahf
lret
push
mov
nop
push
or
in
pop
cwtl
and
lret
scas
inc
and
fwait
jnp
push
jb
aam
mov
repz
cmp
push
xchg
and
push
mov
sbb
repnz
mov
imul
repnz
out
scas
and
repz
insb
pop
ja
push
insl
bnd
imul
imul
cmp
lods
sbb
outsl
sbb
dec
fs
ret
mov
fldt
das
inc
xor
cmc
sub
adc
jle
aas
and
sub
jge
push
or
mov
jne
xor
inc
mov
mov
ds
leave
push
pusha
xchg
jb
inc
adc
stc
ja
push
jmp
loopne
sub
bnd
mov
or
sub
scas
inc
push
and
lock
cltd
dec
sti
cmpb
push
xor
pop
mov
jp,pn
mov
mov
jo
inc
mov
or
push
mov
cmp
xchg
xchg
push
jl
sarl
idivl
jl
std
mov
pusha
sti
cmp
insb
jae
and
push
sub
rcrl
ljmp
dec
mov
jecxz
sbb
sbb
shl
cli
scas
ret
mov
hlt
scas
std
push
or
outsb
std
pop
cmc
movsb
pop
add
jb
push
jle
jle
shrl
push
fbstp
out
iret
andb
push
xchg
push
dec
fmuls
cmp
xchg
jecxz
or
cmpsl
icebp
insb
adc
data16
push
cmp
add
pusha
cmc
add
mov
ret
jae
mov
mov
sahf
pop
mov
push
sbb
pop
test
out
outsl
pop
xchg
sub
call
mov
add
inc
add
mov
mov
inc
push
rclb
mov
ret
inc
cld
in
push
repnz
in
dec
stc
sbb
out
adcl
and
push
jae
cmp
popa
in
sub
mov
and
out
sbb
cmc
fldcw
pextrw
mov
iret
pop
inc
hlt
cwtl
cmp
stc
push
mov
stc
xor
decl
dec
fwait
lods
adc
fmul
fsts
pop
pop
test
insl
in
lods
add
push
popf
fstpl
ret
xchg
xchg
mov
movsb
cmp
mov
add
inc
pop
stos
adc
jae
mov
cmpsb
pop
fidivs
jns
test
daa
or
jno
ret
pop
sbb
inc
loopne
push
cmp
popl
js
jg
or
add
outsb
cmc
mov
adc
test
xor
inc
call
and
ja
xchg
push
pop
fwait
mov
mov
xchg
push
xor
cmpb
into
push
xchg
mov
push
mov
daa
add
jbe
push
jno
cvttps2pi
cmp
insl
xchg
jnp
int
xor
xor
arpl
adc
jae
jmp
shll
xor
mov
fwait
xor
and
and
pushf
cwtl
aad
leave
mov
adc
push
or
repnz
idivb
std
add
ja
adc
adc
mov
jno
popa
cmpsb
pop
ss
xchg
jbe
add
push
push
lods
dec
xor
aam
out
xor
adc
iret
ficomps
sub
push
jbe
je
daa
pop
sbb
dec
dec
add
or
dec
sbb
mov
clc
dec
jne
aam
xlat
mov
icebp
adc
enter
lods
sbb
sbb
imul
jmp
fiaddl
nop
mov
xor
je
imul
or
xor
mov
cmpb
xchg
pop
mov
aaa
ds
sbb
outsb
and
out
cmp
fisubs
cmp
lahf
mov
sbbl
jne
hlt
out
inc
mov
fldenv
repnz
negw
lahf
js
call
test
xchg
call
jnp
inc
jecxz
cmpsl
out
cmpsl
mov
call
xchg
mov
iret
push
cmc
sub
popf
adcl
js
call
fcomps
bswap
jl
fs
adc
lock
arpl
push
ja
mov
and
ficoml
adc
cmp
lods
cmp
repnz
push
loope
scas
and
mov
fwait
cmp
notb
adc
loope
add
xor
inc
and
lock
xchg
mov
fcompl
leave
jmp
insl
mov
xor
xor
jno
out
push
test
lea
stos
sub
rol
mov
popf
ljmp
mov
push
lock
js
dec
ret
add
outsb
xlat
xchg
lods
cmpsl
jbe
pop
push
xor
fyl2xp1
pop
dec
push
push
data16
xchg
cmp
cmp
cwtl
mov
lcall
jp
adc
sbb
pop
jb
push
cwtl
arpl
inc
add
jmp
jecxz
xor
or
stos
ds
imul
dec
mov
test
fadds
xor
ss
xchg
push
mov
aad
xlat
mov
fs
sub
fsub
sub
jle
mov
mov
or
repnz
icebp
sbb
xorb
es
push
jns
add
lea
sarl
push
outsl
cmp
sub
in
stos
dec
pop
cmp
loop
aas
fbstp
dec
popl
adc
sbb
movsb
aaa
cmp
test
sub
cltd
je
pop
xor
xlat
insb
push
adc
dec
jbe
mov
dec
adc
scas
dec
das
fmull
test
cs
jno
out
mov
test
ljmp
outsb
lock
dec
pop
mov
lret
int3
in
sbb
daa
xchg
popf
push
in
ljmp
loopne
dec
imulb
push
push
sub
pop
js
arpl
jb
xor
pushf
into
lcall
inc
popa
shr
jbe
mov
sbb
mov
data16
out
xor
push
pop
xlat
repz
push
out
xorl
mov
push
jo
dec
mov
iret
sub
jno
sbb
cld
lcall
cmpsl
ds
sub
sub
ficoml
andb
jbe
fsubrl
mov
xchg
mulb
cmp
mov
jl
sub
cli
push
movsl
repz
add
push
ss
jle
fcoml
insb
outsl
repz
sub
or
pop
dec
pop
fisttpl
pushf
sub
ss
push
mov
test
jl
xchg
inc
xchg
mov
jle
std
mov
ret
test
jmp
loope
xor
ss
cmp
fxam
mov
mov
jb
stc
fsubrl
jg
dec
icebp
or
das
cmp
scas
cld
dec
sbb
test
add
sbb
inc
dec
jle
adc
nop
inc
scas
repnz
fwait
push
xlat
stos
and
stos
inc
fdivs
add
dec
and
dec
lds
and
sub
in
sbb
or
mov
push
orb
repnz
or
adc
stos
xchg
pop
sub
xchg
jg
inc
fdiv
xchg
dec
jge
xorl
mov
mov
insb
cmp
les
pop
lock
adc
and
imull
add
out
loop
loop
pop
nop
xchg
ret
mov
jle
iret
lods
add
mov
sahf
mov
or
push
xor
mov
fiaddl
test
cmp
movsb
jnp
divb
stc
add
or
sub
mov
push
fld
mov
lret
call
test
mov
loope
mov
les
mov
push
leave
add
aas
repz
les
dec
in
cmp
and
sbb
cmpb
pop
cli
pop
sbb
push
mov
addr16
sub
addr16
fists
jo
orl
dec
es
sbbl
pop
and
shrl
xchg
inc
rorb
clc
or
cmp
pop
adc
dec
shrb
cli
adc
mov
lock
aam
add
lock
imul
jb
sub
rorb
push
out
fwait
pop
rclb
jp
shlb
mov
push
push
inc
mov
pop
fwait
xor
loope
push
mov
call
jle
ljmp
ss
sahf
out
mov
cmpsb
sbb
jo
mov
enter
fidivrs
addr16
or
adc
int3
cmp
cmpsl
std
or
jmp
pop
daa
mov
ja
mov
xor
xor
push
pusha
or
and
imul
imul
lret
scas
xchg
pop
in
pop
testb
mov
into
fidivrs
aad
cld
adc
or
cltd
movsb
push
shll
stc
jne
mov
loope
int3
lahf
cmc
push
mov
loope
addr16
mov
sarb
and
pushf
loop
cli
xchg
and
sub
mov
add
dec
leave
xor
sub
or
mov
jecxz
push
mov
inc
je
xor
push
xchg
sub
push
lods
icebp
js
jl
adc
xchg
fisubs
mov
xchg
push
andl
ret
pop
sbb
ljmp
lock
imul
aam
outsl
cmp
mov
fnsave
xchg
mov
das
or
daa
call
int
add
or
cmp
sarb
cmp
add
xor
and
mov
xor
and
out
sbb
sbb
imul
mov
in
dec
imul
es
pop
out
sarb
mov
mov
mov
dec
xchg
idivb
flds
lahf
push
fisubs
pusha
shlb
xchg
fsubs
jmp
fcoms
cmpsb
andl
xchg
mov
mov
cmp
adcb
sbb
dec
xchg
stc
lret
outsl
sub
mov
jge
pop
dec
xchg
mov
clc
arpl
notl
xchg
add
sbb
into
push
add
mov
ret
fisttps
sbbl
in
es
xchg
cmp
xchg
stos
add
lock
pop
out
sub
rol
add
mov
pop
sub
or
and
shr
jge
xor
shl
lock
adc
in
roll
mov
mov
or
cwtl
shrl
pop
popa
ror
jo
push
out
enter
lcall
cmpsl
lcall
jl
jnp
sahf
sarl
in
dec
jmp
sti
fbld
inc
adc
mov
rorb
dec
mov
xor
outsb
add
fcoml
push
adc
adc
js
cmp
add
mov
stos
cmp
nop
cs
lret
or
mov
sbb
pop
cmp
or
xor
inc
int3
cltd
icebp
dec
inc
inc
dec
and
push
cld
clc
mov
incl
in
xchg
cld
andb
ret
mov
xlat
repnz
sbbl
test
std
repz
cmp
xchg
pop
scas
mov
adc
std
into
sbb
mov
repz
in
or
pop
call
scas
shll
inc
subb
inc
and
cmp
pop
push
push
clc
sbb
mov
push
mov
lea
fs
or
std
outsb
jle
cmpsl
xchg
pusha
xor
aam
push
outsb
pop
lret
sahf
inc
add
push
dec
or
and
int3
inc
popa
adcl
mov
mov
int3
out
jmp
test
loope
sti
jmp
rcrb
inc
push
ficompl
xor
sub
or
loopne
cwtl
push
dec
imul
jl
xchg
jl
iret
xchg
les
xchg
mov
cs
movsb
xchg
orb
inc
ret
imul
mov
add
div
test
cmpsb
sub
cltd
stos
jnp
push
sub
xor
popa
cmp
cmpsb
shl
cltd
ret
shl
ret
outsl
les
jne
cmp
cmp
lods
das
push
enter
push
adc
or
gs
cli
and
jne
ret
xchg
mov
or
dec
sbb
inc
es
arpl
mov
fstpl
push
mov
dec
in
push
jb
movsl
jbe
sbb
inc
lahf
push
cmp
xor
pop
ret
fnsave
inc
dec
pop
xor
mov
mov
sbb
and
arpl
aam
mov
popf
subb
jo
adc
dec
and
cmp
mov
pop
pop
jb
dec
clc
jb
shl
xchg
icebp
ret
out
lahf
movsb
add
pusha
mov
insb
xchg
adc
add
cli
mov
scas
rorb
sar
inc
xor
shrb
adc
out
mov
neg
pop
out
ret
inc
push
out
mov
outsl
add
cmp
mov
push
lahf
lods
mov
sub
incb
sub
arpl
dec
pop
ss
mov
test
outsl
inc
arpl
stos
pop
aas
cmpl
lret
cmpb
in
cmpsb
movsl
mov
push
add
aam
loop
xor
pop
in
jne
xor
shrl
dec
jbe
jbe
jb
ficompl
push
ljmp
jno
testb
jns
movl
addb
or
add
add
icebp
or
or
enter
aaa
stc
and
lods
notb
xlat
lcall
insb
in
mov
ret
mov
pop
aaa
mov
pop
sarl
inc
xchg
mov
int
shl
mov
jmp
adc
mov
jl
jb
insb
rorl
and
scas
xor
insb
rol
push
pop
adc
loope
into
mov
daa
ret
shl
inc
shlb
mov
les
rorl
push
mov
jmp
lods
mov
bound
insb
lahf
pop
test
divl
inc
das
add
mov
scas
jb
mov
cli
lret
data16
daa
jge
mov
mov
test
sbb
push
repz
and
fldcw
out
fstpt
pushl
jno
and
pop
hlt
and
test
leave
icebp
mov
push
jmp
inc
cmpsl
sbb
mov
sbb
popf
mov
xchg
or
dec
sbb
push
test
dec
and
mov
cwtl
hlt
pop
fidivrl
inc
dec
cmp
push
fidivrs
popa
fnstcw
leave
sbb
shlb
push
fstpt
arpl
mov
fldenv
push
ret
mov
test
fcomi
repz
in
dec
jmp
push
add
faddp
push
or
adc
je
push
cltd
inc
lods
jp
push
js
les
xor
cmp
mov
hlt
cmpsl
dec
mov
repz
push
aas
sub
shrl
xchg
pop
xor
push
adc
das
jae
popa
cmp
push
repz
shl
ds
xchg
add
inc
sahf
or
repnz
movsb
xlat
lret
and
mov
sub
clc
xor
pop
dec
hlt
sbb
lods
inc
mov
popf
dec
arpl
lods
int3
xchg
ret
pop
mov
test
lret
mov
fdivrs
mov
ds
fildl
mov
ret
es
enter
gs
mov
jmp
mov
cltd
aad
fs
sub
xlat
jmp
jno
mov
cwtl
pop
sbb
mov
stos
inc
jl
add
sahf
enter
lahf
ss
cli
addr16
mov
xlat
push
stos
sarb
sub
xchg
int3
inc
test
ja
sbb
jp
mov
data16
jg
and
mov
fdivrl
jecxz
jl
outsb
loopne
push
fucom
rcrl
sbb
sub
arpl
stos
lcall
or
mov
outsb
adc
adc
cmp
scas
mov
in
movsb
mov
push
out
xor
addb
jns
mov
and
mov
leave
mov
sti
movsl
enter
andb
push
je
jge
les
push
mov
fisttpll
mov
add
sbb
enter
mov
inc
repz
addb
bnd
cmpsb
push
lahf
shr
sub
out
jp
adc
lock
push
aas
out
xchg
adc
inc
ljmp
cmp
mov
test
mov
dec
mov
and
inc
loope
fimuls
adc
jb
ljmp
lret
sti
dec
shrb
cs
lahf
xor
in
mov
les
xor
and
cmp
adc
test
imul
fwait
mov
jp
mov
mov
sub
cld
xchg
xor
inc
sub
in
inc
call
loopne
rclb
jl
xor
rolb
xlat
pop
lods
js
fnstenv
xor
and
push
lods
xchg
sarb
mov
mov
cmp
lret
addr16
sub
adc
jg
jno
add
add
sbb
mov
mov
sahf
or
fwait
inc
imul
cltd
cs
das
pop
or
mov
mov
hlt
mov
add
sbb
ljmp
mov
dec
xor
lret
xchg
add
mov
lods
jo
andb
str
aas
insl
popl
jge
dec
insl
hlt
aad
fcmovne
dec
pop
int3
cld
sub
jne
mov
mov
sbb
sbb
stos
mov
mov
mov
mov
adc
cwtl
sbb
iret
push
hlt
jecxz
or
stc
movl
add
roll
mov
xor
std
push
stos
cmpsl
lds
repnz
mov
iret
sbb
repnz
cs
out
xchg
aaa
jmp
mov
psraw
mov
shr
jnp
ljmp
push
imul
cmp
pop
test
scas
pop
data16
lcall
and
push
mov
rorl
sub
sbb
push
test
loopne
xor
int
imulb
dec
mov
icebp
mov
mov
rcl
lock
pop
mov
or
mov
dec
es
sarb
loop
repnz
andb
lock
or
cmpsb
cmp
sbb
aas
es
out
push
dec
rclb
ret
jg
in
test
idivb
lret
mov
mov
insb
enter
sbb
mov
xchg
jg
push
or
add
mov
lea
sub
and
xor
mov
jb
stos
inc
mov
clc
inc
pushf
sbb
mov
addl
imul
xlat
xlat
jno
test
and
aam
in
sbb
mov
jp
xlat
pop
lods
popf
push
and
int
add
pushf
mulb
adc
ja
jl
adc
jecxz
pop
inc
mov
mov
push
dec
sub
xchg
shrl
pop
mov
mov
ret
ljmp
mov
lahf
dec
pusha
js
xor
sbb
or
sub
pop
mov
aad
pop
lock
fwait
sti
ds
ja
mov
jge
xor
push
mov
roll
mov
jno
jmp
clc
enter
lods
sub
jp
inc
jnp
lea
pop
mulb
fldcw
mov
xor
mov
or
jns
inc
int
xchg
pop
xor
mov
iret
push
cmp
inc
push
cli
insl
fnsave
adc
add
int
mov
sbb
adc
lods
subl
jbe
push
cmpsl
xchg
adc
sbb
rcr
push
sarb
jno
push
add
xchg
in
mov
push
lods
sbb
jae
imul
jecxz
gs
aaa
das
bound
into
push
in
inc
push
xlat
stos
sub
sub
fldl
lret
dec
jmp
inc
test
dec
xor
aad
popw
std
lret
push
or
outsb
xchg
push
in
xor
test
and
xor
xchg
nop
add
pop
dec
adc
adc
stos
push
out
inc
jmp
add
data16
outsl
loope
ss
jge
sbb
cs
pushf
pusha
xchg
jp
out
in
sub
add
pop
mov
jno
popa
cmpsl
outsl
or
aas
mov
jae
shlb
sub
ret
sbb
nop
aas
andl
add
mov
xor
pop
dec
mov
stc
repnz
iret
dec
adc
jbe
sbbb
jae
inc
mov
ret
jmp
fs
sub
mov
ja
stc
lahf
mov
adc
out
test
or
mov
inc
inc
ds
out
fnstenv
ficoms
push
cmpsb
stos
lret
xor
loop
mov
jl,pt
jno
mov
aad
pop
mov
in
lret
imulb
jne
adc
xchg
dec
or
cs
lret
lods
outsl
dec
icebp
rcl
jle
cmc
jl
mov
jl
pop
insb
push
faddp
jb
add
and
mov
mov
outsb
fcmovb
loop
and
cs
mov
mov
hlt
int
cmc
pop
cmp
mov
mov
push
subl
aas
mov
adc
mov
and
mov
aam
jae
aad
mov
subl
aaa
repnz
jmp
dec
popf
stc
loop
sbb
pop
fnstsw
rorb
mov
cmp
cli
fdivl
and
mov
dec
jnp
cmc
mov
jb
nopl
iret
adc
or
data16
xchg
sub
divl
pop
fbstp
jns
add
xlat
mov
cwtl
mov
stos
jb
frstor
nop
pop
fimuls
xchg
add
push
mov
fldenv
cwtl
cs
fstpt
and
in
lods
std
das
cmp
push
adcl
gs
adc
ljmp
js
push
and
mov
pop
jns
sahf
mov
xor
sbb
pushf
das
mov
imul
int
test
and
sbb
xchg
inc
imul
imul
dec
jge
aad
jl
push
pop
push
sbb
js
lcall
xchg
pop
lcall
dec
dec
mov
rcl
rolb
sbb
mov
mov
jae
cli
leave
test
xorl
ds
mov
or
cltd
js
cmp
fwait
add
xchg
xor
dec
and
jcxz
inc
iret
push
cmp
lcall
cmp
and
add
push
xchg
dec
mov
nop
repnz
sbb
imul
data16
dec
pop
or
add
aam
movsb
pop
inc
js
sub
data16
out
movsl
clc
push
fsubp
jp
negb
add
or
fwait
xor
or
cltd
repz
push
addb
cmp
mov
push
inc
adc
xor
cmp
xor
jns
hlt
pop
pop
jg
sbb
xchg
sub
or
pop
das
fildl
jmp
pushf
cld
stos
cmp
pop
lahf
dec
dec
int
out
lea
jbe
jo
mov
add
loopne
inc
pusha
lcall
fbstp
incl
jbe
mov
test
xlat
aas
pop
push
xchg
aad
pop
std
jg
repnz
dec
icebp
or
inc
out
cmp
fmul
add
xchg
xor
pop
mov
push
nop
or
insb
scas
mov
push
or
ret
cmpsb
jl,pt
ds
lcall
or
lret
mov
mov
sahf
add
push
adcl
jle
ret
loopne
clc
cmpsl
or
in
sub
clc
data16
scas
aas
aam
shr
adc
mov
sahf
add
inc
mov
dec
sahf
pop
fsubl
xchg
scas
or
pop
fistpl
into
jg
fldcw
pop
mov
adc
mov
je
push
add
xor
inc
xchg
les
aaa
xchg
mov
iret
fisubs
mov
cld
xchg
sbb
jecxz
int3
inc
roll
and
push
mov
mov
sbb
inc
jl
nop
stos
mov
jle
imull
enter
push
push
lcall
pop
inc
push
and
lods
fists
outsl
das
sub
jnp
xor
xor
popa
mov
mov
stc
shll
xor
sbb
loop
cmp
push
sbbb
outsl
jae
pop
movsl
nop
adc
or
cs
jmp
sub
pop
pop
sub
sub
mov
mov
test
dec
aad
xor
loopne
fistps
or
out
push
mov
in
lea
adc
jno
jbe
jne
mov
jg
pop
movsl
sbbb
lods
popa
mov
pop
and
and
hlt
or
xchg
add
outsb
lds
sahf
sbb
mov
arpl
enter
xchg
sbb
dec
daa
sti
inc
xchg
cmp
scas
sahf
mov
cmp
sbbl
leave
dec
jbe
mov
fildll
mov
enter
cmpsl
sti
shlb
stos
or
int
cmc
xor
mov
gs
test
insb
pop
sbb
mov
mov
mov
rcl
sub
outsl
daa
or
mov
faddl
pushf
or
ja
lahf
mov
addr16
je
inc
ret
shr
cmp
push
adc
lret
or
fisubrs
xchg
gs
mov
loop
enter
daa
push
and
mov
stc
or
push
or
push
orb
nop
pop
outsl
ss
cli
jae
sbb
stos
mov
stc
loopne
int
jbe
xor
mov
filds
pop
dec
aam
addb
jle
out
adc
cmp
stos
adcl
or
rclb
cmpsb
jecxz
shl
mov
sub
cmp
jle
adcb
add
mov
and
outsl
daa
sbb
lock
pop
xchg
adc
xor
sub
decl
push
jge
xor
pop
add
sub
sub
leave
ret
sbb
and
movb
je
adc
int3
daa
mov
push
ds
or
out
mov
aam
xor
mov
sub
fdivs
mov
ds
lods
xchg
sub
cmpsb
adc
iret
iret
xchg
mov
push
outsb
aad
data16
xchg
add
xor
xlat
sub
mov
sbb
push
add
add
sbb
scas
test
sub
push
andb
ja
or
subl
cmp
push
jnp
jns
out
fnstenv
adc
popa
ja
mov
out
es
pop
jge
xchg
cmpsb
inc
dec
mov
sbb
and
inc
mov
int3
shll
int
mov
adc
and
icebp
movsl
jnp
cmp
shr
sub
insl
cmp
cmpsl
cmp
mov
lods
pop
push
push
popa
mov
or
cmp
fs
shrl
or
addr16
fs
push
into
mov
jge
mov
fistps
mov
outsl
test
pop
jb
and
cmp
insl
idivb
push
mov
cmc
push
or
push
shl
xchg
aam
adc
cwtl
inc
decb
mov
into
and
jge
sahf
cmp
push
cld
fdivrl
sbb
mov
testl
adc
stos
and
pop
cmp
stc
clc
pop
mov
lret
adc
scas
ss
adc
sbb
aad
hlt
cmp
mov
xor
cmp
and
inc
daa
lcall
inc
pop
and
and
xchg
xchg
sbb
and
dec
jbe
jge
aaa
int
jp
jno
cmp
xor
popa
jbe
cmp
mov
mov
xchg
js
add
fsubrl
push
outsb
pop
inc
and
xchg
je
fnsave
shlb
ss
jmp
mov
popf
adc
test
daa
mov
pop
sub
rcrb
sbb
push
insl
mov
sbb
cmp
int3
hlt
pop
enter
iret
xchg
je
aam
add
mov
cmpsl
cwtl
push
mov
ret
push
pop
pop
cli
pop
nop
ds
pop
jo
hlt
mov
cmpsl
adc
mov
mov
mov
stos
jnp
mov
mov
ds
insl
sub
add
push
xlat
mov
ss
sub
pop
addr16
mov
xchg
or
pop
xchg
inc
push
fisubl
cmp
pop
aam
or
lcall
out
mov
pop
adc
or
sub
mov
xchg
adc
xchg
cmpsb
cmp
or
movsl
lock
mov
mov
insl
pop
mov
mov
mov
inc
jbe
shr
fidivl
lea
sub
shlb
stos
jns
in
pop
dec
pop
mov
int3
scas
add
sbb
cwtl
shrl
ret
jne
insl
or
xor
or
in
stos
mov
aam
dec
movsl
loopne,pn
into
xchg
daa
or
mov
inc
lret
pop
adc
cli
and
inc
cwtl
shl
and
mov
xchg
mov
std
lods
pop
jae
mov
lahf
add
fstpl
pushf
sub
jnp
imul
adc
hlt
pop
pushf
xor
out
push
fcos
adc
lret
lahf
loop
fwait
and
out
movl
push
sbb
jne
roll
cld
test
push
in
mov
fnstenv
sbb
jnp
adc
xchg
pop
mov
or
and
or
fstpt
cmp
leave
adc
rep
and
jp
movsl
loop
add
sbb
aas
shlb
inc
xchg
in
sbb
mov
sahf
imul
pushl
or
adc
mov
movsl
adc
push
dec
adc
out
repnz
enter
lahf
xor
mov
stc
nop
push
mov
pop
scas
fmull
out
es
xor
jne
addl
testb
push
sbb
arpl
jno
aaa
sub
popa
push
push
test
push
xor
adc
in
sub
aam
fs
jno
in
inc
rcl
cmp
scas
sbb
mov
sahf
decl
or
nop
das
add
into
lods
dec
arpl
scas
inc
jns
ds
adc
inc
sub
mov
cmp
push
mov
jg
vmaxss
adc
insl
mov
jne
in
shlb
add
fcomps
inc
inc
dec
xchg
cli
xchg
addr16
dec
aaa
stos
cmp
test
bound
cmpb
out
pop
pop
push
cmpb
adcb
jle
and
rol
pop
cmpsb
imul
out
aam
loopne
add
adc
lahf
inc
ret
imulb
fbld
mov
jns
leave
jno
es
push
mov
call
jmp
rcll
stos
add
subb
out
ds
mov
test
adc
sub
mov
xchg
mov
inc
mov
pop
daa
test
xor
lds
jecxz
push
or
sbb
movsb
addr16
mov
jmp
in
sub
cmpsb
cmc
imul
sub
insl
cmp
repz
push
out
jmp
sbb
jp
xor
mov
xor
in
cmp
movsb
mov
inc
and
or
xchg
dec
in
mov
push
cli
push
mov
xchg
pop
pop
std
jo
cmp
push
insl
push
les
jae
fwait
ret
jge
loopne
adc
dec
cmp
sarb
dec
cld
fdivs
mov
inc
rolb
loope
stos
jle
dec
subl
iret
ret
or
cmp
mov
popa
aad
out
or
ja
inc
nop
pop
cltd
push
subb
arpl
inc
and
fcoml
dec
pusha
inc
mov
mov
ret
je
in
xor
mov
xchg
sbb
xchg
cli
cmpsb
sbb
addl
pop
adc
ret
adc
dec
stos
sbb
ret
in
and
pusha
mov
insb
ljmp
inc
mov
test
xor
sbb
cmp
or
mov
mov
push
insb
rcl
mov
add
xor
jnp
lret
or
leave
stos
iret
sub
lcall
insb
lret
out
and
mov
jmp
inc
icebp
adc
cli
loopne
pop
mov
rcll
adc
pushf
push
lcall
and
mov
out
jns
push
fstpt
data16
push
fnsave
adc
cmp
in
jl
push
in
mov
ret
add
les
inc
jp
xor
int
leave
and
mov
daa
lods
sub
pop
imulb
nop
push
fbld
cli
xchg
dec
lods
sub
sbb
cltd
cmp
xor
scas
or
mov
or
jl
and
icebp
xchg
movsb
arpl
xchg
inc
test
cmp
mov
adc
mov
rol
les
stc
and
inc
inc
add
lret
ss
das
adcb
lret
cld
out
inc
into
sub
int
in
nop
mov
push
xor
add
popa
mov
xchg
and
fs
dec
scas
test
aam
jo
out
inc
lock
ds
or
mov
push
fsincos
mov
lsl
sbb
insb
sysexit
add
push
jge
outsb
mov
sbb
lret
or
cmp
jmp
pop
cs
or
mov
aaa
sarb
aas
mov
push
xchg
mov
imul
adc
add
clc
jl
sbbb
lahf
jp
mov
iret
lcall
xchg
lock
outsl
xor
sub
push
pop
jo
and
push
jp
dec
popa
cmpl
pop
insb
jle
in
mov
int
mov
aam
jg
mov
pop
dec
movsl
cwtl
mov
mov
jmp
mov
loopne
mov
ret
push
fidivs
pop
xorps
lea
fisubl
xor
dec
mov
mov
dec
and
jge
je
mov
cmp
sbb
mov
pop
in
cmp
push
out
sub
mov
dec
lds
dec
out
pop
inc
pop
jo
adc
pop
jle
mov
addr16
loopne
sub
pop
scas
mov
icebp
mov
movsb
add
shlb
cmp
bound
insl
sub
outsb
loope
or
add
and
ds
push
jb
fs
sub
mov
jg
ret
xorl
mov
push
in
add
outsb
add
roll
adc
xor
stos
inc
xor
lods
inc
int3
outsl
rol
xor
lret
cld
sbb
or
aam
repnz
les
push
test
cmp
vpackssdw
stc
push
in
cmp
fdivrl
push
fnstenv
adc
dec
inc
sarl
shr
sub
pop
push
cltd
xor
sub
jns
inc
mov
std
insl
add
orb
lods
jl
ret
fbstp
popf
ja
xchg
lea
in
sub
jae
pop
leave
faddp
pop
dec
in
in
rorl
dec
call
sub
mov
ret
cmpsb
enter
sub
pop
jo
sarb
adc
rcr
repz
xor
inc
xor
push
lcall
dec
fs
push
cmpb
cmp
adc
fstl
popf
in
ret
das
nop
adc
inc
sbb
in
mov
lahf
adc
outsb
lods
lods
addr16
es
inc
aas
dec
add
mov
jmp
push
orb
push
jecxz
mov
aas
mov
aaa
dec
jo
stc
pop
inc
mov
lret
fstp
jmp
xor
nop
jns
add
xor
or
or
in
cld
push
cmp
jne
jns
fs
mov
test
lock
clc
int3
cmc
dec
bswap
cltd
sub
fstp
xor
cmp
arpl
cmp
xchg
inc
pop
rorl
mov
xlat
mov
and
int3
lea
popf
stos
aaa
jg
test
rcrb
add
inc
push
movsl
in
sbb
push
lahf
inc
dec
cmp
xor
jmp
cli
sbb
inc
mov
pop
stc
inc
mov
divb
mov
cmp
sub
dec
arpl
jne
call
shlb
popa
cli
sub
mov
daa
scas
xchg
test
mov
mov
sub
mov
stos
test
jne
repnz
imul
pop
int
add
mov
hlt
test
mov
fmull
xchg
ret
mov
out
xchg
ss
sbb
fwait
enter
ficomps
push
out
sub
jmp
mov
aaa
fmul
leave
mov
js
sbb
mov
pop
jnp
pop
xchg
adc
and
mov
push
in
dec
add
push
lret
cli
pop
jns
jmp
out
std
repz
xchg
xchg
andb
gs
mov
rcrb
addl
jl
pop
paddw
and
lcall
xor
xchg
popf
jae
iret
cmc
test
repnz
sbb
and
insb
jmp
dec
jo
mov
sub
je
add
add
rcll
adcb
mov
jb
or
mov
vcvtsi2sd
clc
icebp
jbe
dec
sbb
jl
mov
nop
jnp
clc
xchg
cmp
or
gs
inc
or
mov
pushf
daa
dec
pushf
jb
mov
adc
aam
mov
push
in
inc
pop
inc
repz
and
sub
test
shlb
lods
cmpsl
jnp
xchg
adc
fnsave
addr16
andb
outsb
add
add
lret
lods
aam
mov
push
arpl
out
loop
dec
mov
push
mov
int
add
cmp
xor
rolb
xor
inc
data16
jnp
mov
lahf
or
mov
adc
jp
and
fnstsw
fcomps
rorl
movsb
addr16
lcall
cmpsl
jecxz
daa
outsb
xchg
gs
mov
cmpsb
lahf
in
xor
add
mov
fs
sbb
sub
out
dec
lahf
push
fidivs
push
gs
icebp
dec
lds
imul
mov
dec
fnstenv
or
test
jno
loopne
push
adc
repz
mov
mov
ss
mov
sbb
std
cmp
jle
not
xlat
cwtl
stos
inc
repz
xor
leave
daa
jmp
hlt
push
jns
insl
jge
xchg
imul
ja
or
mov
cwtl
std
les
es
fistl
in
popf
adc
cmp
jbe
dec
imul
popf
cmp
shrl
sarb
bound
push
jmp
leave
xchg
test
xchg
adc
adc
ret
insb
data16
dec
pop
fs
imul
xor
aad
add
add
in
ret
or
loop
lock
enter
test
lock
rol
inc
xchg
xor
push
mov
leave
jge
int3
scas
cmp
outsl
cld
mov
out
lcall
mov
add
mov
jb
hlt
push
ds
bound
les
or
push
mov
push
imul
xchg
aad
out
mov
and
fwait
sbb
pop
notb
pop
insl
lahf
xor
test
and
imul
jge
mov
in
out
jl
xor
stos
rcrb
inc
sub
or
loope
popf
jnp
aam
jbe
xchg
xor
aam
lods
test
and
xor
or
cmpsw
out
mov
lds
or
aad
xchg
and
dec
fsubs
adc
lods
int3
xchg
outsl
push
xchg
mov
leave
jl
dec
dec
dec
cmp
rclb
test
int
into
dec
add
cmc
roll
test
subl
adc
mov
inc
xor
sahf
mov
mov
ljmp
stos
jg
cmp
frstor
or
pop
mov
shrb
xorl
clc
icebp
cltd
xor
arpl
dec
rolb
stc
adc
aas
or
pop
int3
pop
xor
cwtl
push
push
inc
sti
push
push
cwtl
jno
pop
decb
repz
call
test
stc
andb
jmp
mov
das
push
mov
mov
fistpll
add
into
les
fildll
push
ret
je
mov
dec
rorb
cmp
jnp
mov
sti
scas
lret
out
hlt
mov
mov
arpl
sub
inc
cmp
es
pop
or
dec
ljmp
jp
inc
mov
jb
inc
mov
cmpsl
ret
lret
leave
adc
rolb
loope
add
cmp
mov
pusha
and
mov
adc
stos
pop
insb
fisttps
testl
mov
sbb
jno
pop
dec
mov
mov
imul
inc
xor
bound
je
push
sub
mov
je
xchg
ja
aad
jbe
push
push
hlt
inc
out
add
push
imul
push
aad
xchg
sub
mov
cs
sub
fstpt
jno
fldcw
outsl
jle
dec
rcrl
insb
cpuid
pop
adc
xor
pop
scas
mov
adc
mov
dec
mov
shlb
adc
fs
add
pop
jecxz
lea
sub
orb
jno
ret
inc
mov
dec
sahf
out
add
decl
sub
fimull
fwait
pop
aas
sbb
adc
std
iret
mov
mov
adc
push
iret
mov
arpl
fucomi
clc
push
xchg
std
in
cmpsl
out
adc
pop
inc
sub
xchg
mov
inc
add
inc
addr16
cwtl
dec
popa
or
mov
sti
adc
push
cltd
pop
loope
inc
arpl
lods
gs
stos
andl
test
lahf
jbe
cltd
pop
or
insl
pop
movsl
mov
pushf
movl
movl
aas
push
mov
mov
lock
dec
sbb
fldt
inc
or
fwait
or
imul
inc
push
test
sub
test
mov
fistl
mov
push
mov
or
loopne
adc
jae
sub
les
das
iret
dec
cmc
sub
ja
push
dec
cmp
jecxz
ret
adc
xor
sub
xchg
xor
iret
pop
add
and
jae
jbe
sbb
ss
hlt
mov
cwtl
mov
dec
xchg
xor
stc
ss
cmp
mov
outsl
push
ljmp
add
sub
gs
and
leave
dec
xchg
ret
push
popf
in
lock
pusha
btc
lods
jne
jl
dec
mov
das
cmpsb
sbb
aad
adc
loope
jg
aad
das
icebp
movsl
add
adc
add
lods
stos
push
cltd
jne
lret
aaa
movsb
jecxz
mov
dec
dec
adc
mov
adc
rcrb
mov
in
inc
int3
xchg
jp
repz
xchg
cmp
into
fisubrs
out
inc
jecxz
and
jl
test
test
lret
aam
mov
cmpl
rep
sbb
incl
add
xor
mov
out
cli
outsl
inc
mov
ret
fs
mov
xchg
jne
icebp
mov
xchg
out
cmp
cmc
int3
dec
xchg
push
sub
xchg
addr16
pop
mov
push
fwait
xchg
aas
loop
inc
xor
sub
lcall
add
stc
ds
subb
jle
movsl
and
mov
dec
adc
dec
mov
mov
stos
mov
mov
inc
mov
jg
popf
pusha
into
push
sarl
pop
dec
push
pop
sub
cmpl
pop
mov
sub
pop
sbb
pop
and
sar
mov
ss
or
inc
inc
je
cltd
in
dec
int3
pop
je
loope
lea
cmp
xor
leave
push
loopne
mov
cld
je
outsb
pop
jnp
dec
imul
mov
inc
or
shrb
add
and
in
popf
lods
inc
cmp
pop
lret
in
popa
stc
xchg
mov
ss
mull
aas
push
fdivs
jb
in
stos
inc
notl
enter
pop
push
es
inc
jne
xor
xchg
jae
mov
push
addb
lock
fs
loope
dec
or
int
pop
fcoms
fldcw
push
daa
sub
ss
lret
int3
fs
fwait
popf
in
inc
imul
popa
jmp
aad
pop
xor
fwait
aas
xchg
xor
cmp
call
movsb
jecxz
out
mov
insl
daa
scas
fsubl
loope
in
mov
mov
outsb
stos
inc
pop
mov
xchg
and
rcll
xchg
es
sub
xchg
fwait
movsl
repnz
rorb
xchg
divb
outsb
jl
adc
xchg
jbe
call
pop
adc
dec
inc
divb
movsb
inc
mov
lret
or
testl
pop
in
nop
adc
rclb
sbb
cmp
rclb
xor
dec
sub
sub
push
mov
pop
push
sbb
inc
popf
jb
dec
cmpsb
jmp
push
insl
push
scas
mov
testb
pop
dec
ret
cmp
lcall
and
leave
das
pop
add
rclb
out
adc
in
shll
aam
aam
sub
mov
test
cli
lods
sub
rcr
cli
pop
inc
out
pop
sub
loop
adc
jo
push
mov
mov
std
aad
cmpsl
cmc
cmp
mov
fdiv
mov
and
fstps
mov
cwtl
add
jb
sahf
lret
in
daa
pushf
scas
pop
inc
cmp
in
in
sub
inc
or
push
jno
int3
inc
xlat
pop
inc
mov
repz
xor
test
hlt
mov
xor
bound
jae
ret
pop
xor
jg
add
or
fs
and
xchg
lods
or
pop
lcall
and
les
pop
aad
mov
pop
les
test
insl
ljmp
es
push
or
xorb
mov
mov
adc
mov
popa
jge
or
inc
dec
jae
jae
bound
iret
mov
lea
cltd
pop
and
xchg
in
jle
push
xchg
and
sbb
enter
mov
test
mov
jge
mov
dec
mov
std
pusha
mov
mov
out
sub
ss
out
in
dec
sbb
ds
mov
adc
sub
hlt
xchg
lods
cmc
sti
hlt
pop
es
jb
inc
inc
shll
int
rcl
pop
mov
pop
adc
xchg
push
mov
lock
sbb
sub
and
push
stos
xchg
push
sbb
in
mov
and
imul
mov
insb
xor
pop
jmp
and
mov
cmp
cmpsb
rorb
xchg
sarl
jae
enter
push
pop
xchg
lret
rcrl
add
push
rcrl
sub
xchg
mov
add
sbbb
sti
inc
aad
std
frstor
add
push
call
mov
popf
or
pop
lret
mov
shrl
pop
mov
nop
iret
dec
movsb
add
push
jge
mov
adc
test
push
xor
int3
aaa
repz
jge
scas
mov
stc
pop
in
insb
or
jae
or
lock
outsb
cltd
fwait
mov
sub
lock
fcmovnb
iret
add
enter
xor
aad
js
pop
jle
aam
inc
jp
mov
mov
bound
sub
repnz
pushf
loopne
mov
jae
mov
loop
lahf
idivb
push
fsubrl
mov
movsb
add
nop
test
pop
inc
repnz
ja
push
mov
shrl
hlt
mov
or
or
dec
rcr
jl
add
dec
cmpsb
lods
jbe
cmp
push
xor
push
pop
xlat
mov
das
pop
pushf
push
xor
fstpl
adc
movsl
int3
jno
daa
jo
daa
push
inc
arpl
fwait
inc
jne
jbe
fwait
or
sbb
imul
jne
adc
inc
pop
and
adc
xchg
call
lock
and
ret
sbb
mov
lcall
pusha
mov
jo
int3
ffree
js
sbb
enter
dec
cltd
mov
in
mov
adc
cmp
cmpsb
cmpsb
pop
out
xchg
sbb
push
mov
inc
xchg
scas
mov
cmc
mov
or
cmp
es
jbe
pushf
push
test
movsl
cmpsb
sahf
adc
mov
sub
sub
ja
sahf
aaa
add
jmp
or
dec
pop
sub
pop
lahf
sub
jne
out
or
lea
sub
inc
imul
mov
push
xchg
pop
mov
pushf
pop
xor
sbb
and
lock
jmp
jo
scas
aam
sbb
lock
ret
daa
aaa
stos
mov
bound
add
push
or
stos
je
rcll
jmp
pop
loop
sarb
clc
lret
cmp
lock
cwtl
stos
sbb
xor
and
inc
xor
push
jno
mov
mov
popf
nop
popl
out
sbbb
push
or
mov
in
mov
inc
mov
mov
and
dec
cmp
jmp
sub
rclb
add
mov
lea
and
lahf
outsl
dec
add
push
inc
gs
xchg
fistl
pop
je
cmpl
or
sub
jbe
inc
push
add
inc
out
addr16
pop
test
lds
rcrl
rol
cmp
xor
inc
cmpsl
cmpsb
push
stc
cwtl
push
pop
aas
push
cmp
out
test
cmp
std
jp
dec
in
xchg
ret
sub
push
mov
insb
adc
pop
test
or
in
xchg
and
hlt
mov
add
adc
pop
cli
and
cmp
add
fwait
scas
xchg
mov
stc
mov
jne
dec
xor
dec
mov
xchg
adc
inc
and
lret
lea
arpl
rorb
jmp
test
sti
cmp
call
test
mov
mov
jmp
dec
shl
dec
lea
cmp
jecxz
inc
in
inc
pop
bnd
out
mov
jp
dec
das
js
sbb
cwtl
xor
or
adc
in
inc
sbb
xor
push
imul
ja
fcmovnb
xchg
mov
popf
inc
cs
inc
fdivp
test
cmp
lret
add
push
aaa
and
loopne
cmp
inc
test
adc
add
cwtl
stos
in
cld
aam
stc
out
cli
or
ret
add
sub
pop
push
iret
cli
hlt
push
add
and
xchg
scas
movsb
pop
enter
mov
and
or
in
pop
ss
jp
xchg
jae
sbb
xchg
shll
pushf
hlt
fsubrl
in
sbb
ds
arpl
enter
gs
dec
pop
push
add
xchg
jmp
cwtl
stc
xchg
sub
popf
mov
sub
xchg
pusha
jg
insb
pop
or
ret
insb
daa
mov
scas
mov
daa
jl
cs
xchg
xor
mov
aaa
aam
nop
push
jmp
movsl
lods
jo
mov
ret
outsb
push
std
pop
or
addr16
pop
test
inc
les
test
movsb
jae
scas
outsl
ds
sub
sbb
arpl
xchg
ja
in
call
or
jge
cvtps2pd
outsb
lods
cmp
jge
mov
jmp
push
call
fisubs
dec
xchg
add
pusha
popf
and
or
sbb
pop
pop
mov
lcall
xchg
mov
and
mov
jmp
leave
nop
scas
xchg
dec
sbb
pop
add
dec
movsb
aas
sbb
cmp
into
pop
mov
imul
and
cmpsb
aaa
add
les
dec
hlt
or
ret
sub
jae
xorl
mull
les
subl
lea
js
pop
ret
jno
pop
xchg
and
sti
cmp
push
stos
dec
sbb
dec
pop
and
movsb
and
push
sub
mov
daa
mov
push
jo
test
mov
aas
ret
lcall
pusha
mov
in
pop
bound
and
repz
sbbb
mov
aaa
insl
add
mov
lea
das
xor
adc
sub
xchg
xor
arpl
sbb
adc
pop
inc
push
out
mov
shrl
xor
and
fmull
into
ja
popf
fs
mov
mov
xchg
sub
pop
ficompl
sub
ds
cli
test
loop
mov
aam
test
cmc
mov
mov
add
xchg
mov
jg
pop
cmpsl
dec
pop
pushf
idivb
sub
or
in
loopne
pop
lahf
arpl
addb
push
out
adc
and
mov
sub
dec
pusha
fstpt
sbb
outsl
or
dec
sti
es
xchg
xor
dec
pop
push
pop
sub
negb
xor
stc
mov
inc
hlt
add
bound
dec
test
or
imul
pusha
jae
je
popf
sbb
jle
mov
sbb
mov
pop
push
mov
mov
jae
mov
in
and
jle
jle
lret
mov
push
fwait
mull
pop
out
xor
add
decb
pop
hlt
cld
xor
push
scas
inc
dec
inc
pop
inc
or
mov
jns
or
ret
or
ret
jb
dec
fucomi
jp
out
stos
jl
mov
add
xor
arpl
lcall
in
pop
add
lds
nop
adc
das
mov
dec
cmp
adc
pop
mov
ljmp
adc
mov
ds
mov
cld
outsl
nop
pop
in
push
cmp
insl
das
div
mov
and
add
push
mov
cmp
xor
inc
jecxz
into
gs
add
mov
pop
sbb
inc
scas
xor
ja
mov
ret
sbb
dec
jg
icebp
pop
sbb
mov
orl
in
xor
adc
dec
icebp
enter
or
in
fdivrs
cmp
and
dec
scas
inc
jle
divb
push
mov
dec
test
clc
int3
movsl
aam
test
fnstcw
jbe
hlt
iret
sbbl
mov
cmp
jecxz
sbb
in
pushf
aas
or
frstor
aaa
dec
push
mov
adc
out
push
adc
dec
movsb
out
inc
add
iret
push
rorl
lahf
stos
push
js
lock
sbb
sub
or
add
mov
in
test
leave
mov
imul
repnz
cmp
mov
sbb
sub
bound
js
testb
ljmp
inc
fnsave
sbb
sarb
sub
push
jmp
ret
jae
icebp
xchg
mov
push
sahf
ds
imul
cmp
data16
data16
out
xchg
je
mov
add
lea
fisubl
and
mov
mov
ficompl
xchg
jg
popf
cmp
inc
add
cltd
popf
push
fcom
dec
imul
xchg
cmp
add
push
jo
dec
add
repz
push
cmp
shrl
or
cmp
mov
push
loopne
and
jo
push
mov
fstps
sbb
dec
and
push
lods
dec
adc
jbe
ds
push
push
roll
sub
and
xchg
paddd
and
pushf
jo
push
dec
pop
jbe
pop
push
add
nop
sbb
int
vcvtsd2ss
sub
aas
movsb
pop
inc
push
pop
dec
loop
jg
dec
imul
fwait
ret
jb
jns
xchg
sbb
les
dec
fsubrs
xchg
mov
cmp
mov
mov
inc
lret
jo
pushf
dec
pop
sbb
dec
dec
mov
out
inc
mov
scas
adc
fcmovne
data16
add
daa
inc
gs
xor
mov
imul
fsts
test
jle
xor
push
add
pop
das
scas
repnz
adc
add
frstor
dec
mov
lret
test
scas
inc
stc
or
loopne
int
pop
int
enter
fnstenv
into
movsbl
sub
sub
hlt
inc
movsl
cmp
push
mov
ljmp
xor
movsl
popa
rolb
cld
inc
adc
jo
xchg
cmpsl
xchg
xor
fs
cmp
out
sub
aad
out
insl
cld
inc
and
movsb
adc
cli
popa
add
mov
cmpb
scas
aad
lds
push
cli
cli
or
push
dec
add
out
xor
jl
fidivrl
lods
push
out
push
imul
and
loope
add
dec
pop
sub
add
cmp
pusha
jmp
rolb
jns
jnp
or
fadd
pop
int
divb
test
fsts
push
inc
rcrl
mov
and
sbb
test
bound
bnd
sub
xchg
xchg
mov
loopne
cmp
push
dec
mov
or
pop
xor
imul
sbb
cmpsb
outsb
jmp
leave
test
lcall
mov
pop
sbbl
or
cld
cmpsl
pop
lock
mov
sub
lods
mov
push
pop
js
mov
inc
jnp
adc
int
dec
add
ret
xor
adc
xchg
test
in
push
jae
mov
xor
xchg
jge
pop
ljmp
and
push
jl
test
fdivs
scas
mov
mov
cmp
test
jno
leave
sub
dec
popf
int3
push
je
shl
pop
es
push
adc
shrl
mov
jne
and
xchg
mov
or
mov
dec
pop
lret
mov
sbb
lods
fucomp
pop
pop
mov
xor
outsb
pop
ret
jge
mov
xor
testb
sub
push
stc
sbb
or
enter
nop
dec
hlt
daa
lcall
or
xor
push
push
sub
push
xor
ss
push
fisubs
cwtl
js
push
mov
in
and
scas
ss
add
jg
mov
fistps
jg
add
fsubrp
stos
or
xor
fsubl
gs
xchg
out
sub
mov
pop
out
daa
gs
nop
dec
ffreep
test
jnp
fcmovnb
cmpl
jmp
xor
cmpsb
sahf
test
pop
call
xor
mov
sbb
xor
mov
mov
fs
rol
dec
dec
std
xor
adc
jns
xor
andb
cmc
xchg
jge
mov
data16
push
jo
out
stos
mov
sbb
xor
cli
mov
or
xor
xor
nop
daa
mov
xor
fisubrl
negl
inc
out
leave
data16
test
repz
negl
pop
sbb
out
cltd
les
mov
imul
test
ret
outsl
cmpsb
push
ss
jp
lds
adc
aam
xlat
sub
idiv
xchg
imul
fstps
xchg
decb
cmc
aam
jmp
xchg
ss
cmpb
rol
dec
sti
add
fwait
leave
dec
out
cld
sahf
push
jg
push
into
stc
xchg
jno
dec
scas
inc
add
insb
xchg
lods
fcmovnbe
sbb
mov
or
clc
or
dec
cmpsl
sbb
dec
add
and
daa
jbe,pt
loop
mov
movsb
dec
loop
sbb
out
movsl
cltd
push
adc
leave
pusha
icebp
fnsave
cli
jmp
and
std
or
and
jmp
into
in
jnp
xor
cmp
and
mov
mov
pop
adc
or
dec
sub
sbb
push
outsb
scas
xlat
mov
mov
xor
pop
in
mov
pop
mov
nop
mov
mov
jno
popa
arpl
jle
cli
pushf
mov
mov
jg
cld
xor
and
pushf
mov
sub
ret
jmp
cli
pop
int3
xchg
and
ret
xor
insb
mov
jb
cli
mov
clc
js
inc
or
pop
das
and
mov
popa
in
mov
call
je
flds
push
outsl
inc
fxtract
cmp
ja
pusha
jp
dec
ljmp
mov
es
mov
mov
jp
mov
int
adc
and
dec
push
push
inc
mov
pop
loopne
inc
out
ss
idivb
aas
pop
pop
push
pushf
pop
imull
adc
push
addr16
jle
sub
pop
lahf
les
insb
in
cmc
cmp
push
je
sbb
mov
int
sub
imul
or
and
repnz
sbb
arpl
adc
dec
mov
xchg
mov
lcall
xchg
push
out
mov
lahf
push
mov
loope
jb
cmp
jg
mov
xor
or
icebp
push
lds
adc
addr16
lret
mov
rclb
dec
call
or
outsl
sub
fisttps
pop
push
insl
call
movl
psllq
and
jb
icebp
leave
insb
test
int
mov
sbb
aas
sbb
imul
cmp
clc
jg
leave
jo
adc
test
cmova
fbld
icebp
lods
cli
jmp
inc
or
xchg
push
imul
lds
mov
cmp
pop
dec
sahf
rclb
sbb
in
cltd
fidivs
popf
das
nop
xchg
mov
lcall
dec
mov
add
inc
mov
push
mov
adc
jae
aas
movsl
popf
mov
dec
inc
lock
pop
and
xchg
loope
push
dec
icebp
add
incl
and
push
cmpsb
and
in
mov
nop
push
sbb
rcrb
imul
mov
lea
ret
outsl
loopne
add
mov
cwtl
das
mov
push
testl
insb
push
sahf
jo
fdivrs
add
xor
sti
shl
add
pop
aad
adc
shll
mov
sar
loop
fwait
push
cltd
fbld
jns
mov
dec
inc
xlat
jl
cwtl
loop
dec
pop
cmc
andb
sbb
jl,pn
pop
clc
lahf
ss
stc
aad
fidivl
cmp
jp
das
sbb
mov
insl
pop
imul
xor
pop
add
xchg
sbb
test
mov
lcall
mov
xchg
add
cmp
xchg
mov
pushf
out
movsb
pop
out
and
xor
inc
inc
jns
jbe
push
fwait
xbegin
sbb
fisubs
and
lahf
call
and
inc
inc
push
adc
loop
fdivl
movsb
mov
pop
lea
or
mov
sbb
and
je
mov
leave
fdivrl
sti
cltd
xor
inc
mov
adc
sbb
ss
loope
fmuls
xchg
in
mov
pop
ss
mov
and
test
cmpsb
fstps
mov
rcr
dec
push
pop
lahf
mov
lds
jp,pn
sbbb
pushf
subl
shr
jmp
mov
arpl
sbb
jp
out
cmp
xchg
and
add
scas
add
mov
cmp
add
outsl
fiadds
stc
lock
push
addr16
adc
push
ret
stos
inc
pop
addr16
rclb
xor
pusha
add
sarb
arpl
popf
in
mov
lcall
jmp
scas
js
fs
mov
adc
sub
decb
and
add
adc
scas
pop
scas
ljmp
lea
xor
mov
xchg
data16
sub
out
into
imulb
dec
cmpsb
lret
xor
jg
push
push
inc
loope
jbe
arpl
stos
inc
fldenv
shlb
test
mov
outsb
jmp
dec
jb
jle
arpl
out
xchg
xlat
mul
mov
cmp
or
pop
mov
adc
jle
sbb
jge
jns
stos
in
cltd
test
shrb
and
gs
lahf
sbb
shr
out
xchg
es
pop
outsl
inc
les
outsb
dec
cmp
cmpsb
imul
stc
pop
xor
mov
pop
add
and
punpckhdq
jo
sub
inc
add
jae
bound
test
stos
mov
pop
pop
sbbl
mov
cmp
sub
adc
pop
xchg
cld
xchg
and
jecxz
or
cmc
and
add
pop
mov
cmpsl
sbb
insl
xchg
add
shr
sbbb
xor
sbb
mov
push
call
repz
out
ret
cmp
xchg
mov
pop
lock
sbb
rorl
cli
pop
icebp
jmp
pop
mov
mov
inc
mov
pop
loop
pop
std
xor
dec
int
jns
sbb
sub
push
mov
fimuls
dec
push
fidivrs
xor
mov
sti
push
fwait
clc
or
daa
adc
sub
lods
lcall
das
and
sbb
xchg
add
push
jo
ror
out
push
xchg
and
or
jle
scas
inc
sbb
mov
dec
adc
scas
mov
in
sub
mov
dec
cmpb
das
push
fwait
pop
in
pop
ret
iret
movsl
icebp
add
mov
cmpsl
xchg
xchg
fdivrs
and
xchg
inc
push
dec
je
jb
pop
xor
addl
mov
mov
jo
dec
jp
paddb
out
test
push
sbb
sub
jb
jmp
pushf
sahf
or
or
jne
in
pusha
and
adc
iret
push
sub
ret
daa
inc
aas
fidivs
cmc
mov
out
dec
mov
pop
fdivrp
mov
test
addb
inc
mov
pop
cmp
insb
jle
pop
dec
ficomps
or
leave
sub
xchg
add
pop
pop
xchg
es
pop
fnclex
mov
jb
jle
pop
sub
in
mov
iret
fldcw
or
xor
daa
push
repnz
dec
cmpsb
les
sbbl
js
jb
in
add
dec
mov
xor
jmp
pusha
inc
jecxz
les
pushf
in
bound
mov
add
push
mov
add
shl
push
pusha
sti
mov
lods
pop
lcall
dec
and
out
loopne
pop
xor
mov
repnz
inc
inc
pop
sub
test
pop
push
sub
sbb
fsts
orb
popf
inc
mov
cli
xchg
stc
mov
test
sub
pop
dec
imul
imul
insl
sub
sti
pop
dec
stos
push
lock
lods
mov
inc
std
lret
imul
popf
int3
in
movsb
cmpsb
jp
std
stos
sub
clc
sbb
mov
pop
jnp
cmp
pop
stos
out
jno
xchg
pusha
mov
lds
gs
jecxz
pop
dec
stos
cld
lcall
cwtl
das
lcall
jge
or
xchg
or
aaa
add
push
jo
add
lahf
push
ret
inc
fcomi
pop
mov
xor
stos
xchg
add
jge
sbb
cld
xor
inc
xor
or
fwait
mov
pop
sbb
jmp
pusha
cmp
adcl
out
xchg
stos
pop
jp
lahf
push
xor
out
mov
pop
cmp
or
add
lock
xor
shlb
xlat
push
push
adc
add
sbb
nop
mov
xlat
sbb
test
pusha
shl
adc
bound
sbb
adc
add
sub
and
mov
xor
sbb
out
lcall
aaa
into
push
and
jle
adcl
inc
mov
in
jb
push
or
mov
adc
fxch
xlat
push
and
jp
xchg
mov
and
dec
mov
cmpsb
test
out
jbe
pop
ljmp
gs
aas
fsubrp
lahf
scas
cmpsl
ret
xor
mov
cli
xchg
mov
cmp
leave
and
dec
and
mov
mov
data16
or
sub
repz
add
gs
loope
jp
and
jmp
ja
xchg
cmp
in
xchg
test
shll
aaa
dec
call
sub
mov
js
mov
pop
aad
push
aaa
sub
rcrl
fwait
repz
loop
fistps
mov
cmpps
stos
push
lds
aad
pusha
adc
insb
dec
fsubrs
mov
sbb
pusha
in
add
mul
sbb
cmovp
dec
dec
jne
ficoml
cmp
jmp
xor
call
hlt
lock
add
xchg
adcb
mov
out
pusha
push
je
sub
mov
dec
aad
pop
add
mov
lret
in
fsubs
fwait
test
push
flds
push
inc
in
jb
adc
pop
push
pop
loope
clc
rorb
popa
adc
cmc
mov
in
cwtl
sbbl
mov
inc
adc
ret
orb
xchg
fwait
test
mov
sub
mov
jnp
pusha
lret
push
fsts
mov
cmpsl
and
std
jl
std
jle
das
cs
dec
pop
xlat
testb
xor
xchg
stos
ja
jbe
inc
data16
mov
sub
leave
std
aam
mov
ret
sbb
jbe
mov
add
cmpsb
cwtl
sub
sahf
insl
fcoms
or
inc
inc
mov
jns
pop
das
rcr
push
or
push
and
xchg
push
xchg
outsb
dec
icebp
pop
andb
jnp
jb
insb
add
stos
fsubs
push
mov
lret
push
divl
sub
push
out
test
js
clc
mov
imul
stos
add
int
pop
addr16
adc
and
fisttpl
les
adc
mov
add
lahf
ja
or
xor
imul
cld
std
push
inc
repnz
mov
pop
dec
push
roll
fcompl
sbb
das
pop
rcrl
push
jge
jo
data16
daa
jge
fldl
scas
je,pn
notb
xlat
push
sub
or
pop
sub
or
repz
in
mov
pusha
cmpb
adcb
leave
mov
mov
pushf
ret
pop
into
icebp
pop
adc
enter
xor
lds
sbb
lret
outsb
imul
push
cmp
or
push
loop
mov
adc
pop
cmp
call
cli
test
bound
cmpsl
inc
adc
mov
xor
lods
dec
mov
inc
cmp
data16
fldcw
or
push
mov
adc
mov
fimuls
fxch
and
es
ljmp
jle
in
es
int3
daa
lock
inc
xchg
or
fs
pop
cmp
addl
pop
insl
ss
lcall
xchg
inc
or
mov
mov
xchg
ja
shrb
out
leave
mov
popf
adc
or
mov
repnz
mov
mov
mov
mov
mov
inc
cmp
xor
shlb
ss
dec
loopne
add
sbb
pop
jl
inc
mov
sub
arpl
sbb
pop
xor
cmp
mov
sub
xlat
dec
cmp
add
or
scas
or
fisttpl
fnstsw
mov
jl
pop
fsubl
inc
inc
adc
ss
and
or
cmp
adc
lret
push
mov
nop
bound
push
sarl
hlt
ret
xlat
pop
xor
fwait
stc
fs
xor
xorb
jnp
aas
fisttpll
mov
pop
cltd
mov
clc
fldcw
ror
test
xchg
pop
cmc
inc
add
rorb
fidivrl
xchg
mov
cld
xchg
sub
mov
outsb
cmp
cmp
sub
shrb
pop
mov
ret
mov
jecxz
xchg
stc
loopne
rorb
xor
cld
hlt
stc
aad
sbb
adc
inc
push
or
cmpsb
and
sub
repz
xchg
xor
hlt
data16
stos
popa
sbb
test
leave
lret
mov
into
pop
pop
les
adc
jne
mov
jle
mov
jmp
cmpsb
hlt
outsl
xchg
jge
repnz
call
iret
mov
lret
xor
cltd
into
lea
mull
sub
sub
xchg
adc
jno
icebp
addr16
mov
and
jne
jb
jp
mov
xchg
clc
mov
nop
sub
ja
fdivs
in
scas
outsb
jl
test
test
scas
adc
loopne
and
mov
outsl
and
loopne
add
imul
addr16
or
inc
aas
push
cld
jl
push
je
push
clc
nop
or
cmp
dec
aad
sarb
imul
cld
orb
xchg
imul
pop
icebp
lds
dec
pop
ja
xor
mov
aam
dec
subb
inc
cmpsb
xor
or
sub
ss
pop
mov
push
inc
fistl
mov
ja
test
sbb
and
jbe
mov
adc
xchg
inc
mov
pop
mov
lahf
data16
stos
ficoml
mov
push
xchg
mov
mov
clc
jno
sub
jae
push
addr16
aam
pop
push
addb
xlat
fwait
pop
icebp
daa
cmc
shl
es
js
repnz
xor
dec
dec
ds
in
jg
add
rclb
sbb
xchg
test
mov
or
push
aas
inc
iret
jb
dec
xor
shll
dec
jp
out
bound
ret
push
jnp
pop
and
mov
out
push
inc
cltd
mov
inc
in
push
and
push
gs
in
lods
fisttps
mov
push
push
iret
pop
sbb
xorb
ret
pop
add
es
inc
and
xchg
nop
jae
xchg
into
sti
addr16
gs
adc
add
jmp
cwtl
sub
movsl
decl
or
inc
and
jle
or
fldl
nop
mov
inc
repnz
xor
jmp
popf
and
dec
mov
xchg
jp
pop
jne
shll
mov
aas
push
cmp
sbb
in
push
pop
jbe
les
xor
int3
sbb
push
fwait
and
data16
xchg
ljmp
les
ds
sub
daa
cmp
add
fbstp
and
into
mov
adc
jnp
mov
sbb
dec
repnz
push
in
xchg
and
loop
lea
ficomps
sub
mov
icebp
jbe
mov
je
ljmp
pop
mov
stc
cwtl
push
out
and
mov
cld
pop
mov
outsb
in
aaa
mov
leave
inc
rcrb
out
xchg
or
mov
notl
mov
imul
push
jg
add
in
arpl
sub
push
jmp
jns
push
lods
lea
xor
or
lahf
mov
fs
cld
clc
iret
xor
mov
lea
dec
xor
inc
cmp
xchg
stc
fimuls
pusha
out
mov
movsb
mov
pop
sub
sub
ljmp
lods
scas
aas
push
popf
or
es
fnsetpm(287
std
jo
jns
js
sar
es
sub
nop
xlat
pop
mov
cmp
and
call
repz
lea
adc
or
pop
jno
xchg
xchg
test
mov
mov
repnz
es
outsl
or
sub
push
push
xchg
mov
fstl
jp
sti
sti
fwait
pop
mov
and
mov
or
int
adc
outsb
inc
das
pop
mov
pop
pop
movsl
mov
sub
test
divl
je
pop
mov
push
arpl
cmpl
adcb
dec
cs
enter
imul
adc
or
add
xchg
sbb
add
sbb
adc
mov
stos
lahf
mov
scas
mov
repz
cmpsb
ds
aam
pop
xor
nop
mov
dec
jg
orb
xor
sbb
fdivrs
dec
popf
push
dec
bnd
inc
push
iret
add
pusha
or
cmp
fists
faddl
scas
cmp
push
repnz
mov
or
fs
mov
jno
mov
mov
mov
pop
cmp
jp
stos
pop
dec
push
int3
js
mov
fs
or
rcll
mov
out
call
cs
lret
pop
jo
dec
lods
mov
pop
movb
push
sahf
mov
adc
mov
mov
je
sub
xchg
out
out
rorw
mov
push
xchg
adc
ss
mov
jmp
je
scas
pop
clc
popf
adc
hlt
cmp
test
xchg
xchg
add
mov
sbbl
ss
pop
roll
add
mov
or
inc
lret
mov
xchg
or
mov
xchg
imul
clc
lcall
push
stc
and
mov
rcrl
mov
fdivrl
scas
push
data16
mov
add
cmp
scas
pop
lods
fisubl
push
jl
pop
in
and
pop
push
or
outsl
cmp
in
sahf
in
sub
fs
jge
orb
jg
insb
pop
loopne
rcrl
test
insb
shl
adc
int3
mov
shl
push
mov
out
mov
add
mov
addr16
lods
lea
lds
stos
mov
popf
sub
pusha
adc
movsb
repnz
clc
push
mov
pop
loope
or
lods
jae
outsl
push
jmp
lods
push
jbe
and
rolb
push
xor
cmpsl
sti
imul
add
inc
jnp
cmp
push
cmc
inc
cmpsl
xchg
jae
iret
movsb
insb
mov
stos
adc
loope
ds
jnp
or
test
cmp
or
xor
fisubs
scas
ds
dec
jecxz
sbb
sub
int3
xor
sbb
or
xchg
mov
lods
imul
int3
inc
mov
jp
cmpsb
scas
pop
je
fildl
xchg
jg
bound
cwtl
pop
rorl
and
into
pop
sbb
push
pop
mov
sub
je
dec
test
mov
mov
adc
dec
xchg
add
cmp
and
test
or
adc
push
lock
int
add
jbe,pt
testl
sbb
push
movsl
mov
lods
inc
ret
cmp
mov
fsubr
mov
jo
sub
popf
sbb
into
mull
cld
stos
push
pop
xchg
add
cltd
idivb
fstpt
jmp
or
push
inc
stc
sbb
fists
out
xchg
in
mov
and
shlb
mov
es
sub
dec
jecxz
push
add
dec
ss
xorb
jmp
push
imul
imulb
sub
mov
iret
insb
popf
add
dec
in
or
sub
call
and
sbb
out
cli
daa
dec
mov
flds
nop
adc
xor
cmpb
clc
aad
mov
sti
sbb
outsb
outsb
fcmovb
fiadds
xchg
nop
mov
push
sahf
mov
jns
jb
dec
xor
movsl
xchg
xchg
sub
sub
iret
lcall
adc
and
pop
mov
mov
add
or
xor
aad
in
dec
jg
ja
cmpsb
cmp
mov
jge
leave
daa
test
test
out
cmpsl
cmp
loop
pop
aam
dec
xchg
cmpsl
pushf
pop
cltd
mov
or
cmp
shrb
pop
cmp
jbe
test
test
adc
sbb
sbb
xor
arpl
inc
fadds
inc
into
repz
jg
xor
sub
mov
lahf
inc
mov
mov
std
jae
out
adc
repz
push
pop
mov
cmp
xor
xor
adc
lods
sbb
push
push
xchg
push
pop
imul
sub
aas
jle
outsb
jno
cld
push
iret
lcall
movsl
loopne
movsl
stos
test
loope
repz
gs
pusha
cmp
stos
inc
push
aam
mov
aad
stos
enter
xor
outsb
aas
div
xchg
stc
add
sahf
xchg
sub
pop
mov
imul
test
push
xor
mov
repz
adc
into
xor
xchg
dec
dec
ds
addr16
sbb
inc
pop
cmp
push
mov
stos
jl
push
jmp
adc
mov
mov
negl
and
mov
jmp
dec
add
adc
xorl
test
mov
sbb
mov
pop
call
xlat
adc
mov
add
mov
sub
sti
sub
adc
mov
mov
lock
sub
icebp
imul
jp
xor
lahf
js
mov
fstl
xor
fs
jmp
int
mov
adc
cmp
addl
inc
add
jg
xlat
outsb
in
xchg
das
movb
je
xor
hlt
adc
rol
or
or
dec
add
decl
rclb
imul
je
ds
repnz
data16
stc
nop
jmp
push
pop
cs
ret
cs
repz
inc
sub
clc
xchg
ret
popf
sbb
mov
in
add
add
xchg
decl
mov
mov
add
xchg
in
inc
dec
test
dec
pop
nop
frstor
stc
shr
pop
push
nop
lods
mov
loopne
mov
and
stos
aaa
mov
push
mov
xor
aad
xchg
sbb
cmp
movsl
push
pop
shrl
dec
jl
fnstenv
loop
rorl
inc
jp
xcrypt-ofb
cmpsl
outsl
mov
mov
enter
add
mov
sbb
jl
pop
cmp
inc
inc
iret
jo
loope
fstl
cmp
pushw
movsl
fmull
dec
sub
mov
leave
add
jl
insb
in
mov
jecxz
adc
push
data16
imul
scas
pop
jle
add
push
outsb
cmp
icebp
xor
adc
push
bnd
push
sub
sub
fstpl
sbb
popa
repnz
mov
aas
add
jns
xchg
and
dec
in
aaa
mov
scas
lcall
hlt
ljmp
aaa
std
punpckhdq
xchg
mov
loopne
int3
fs
pop
popf
hlt
xchg
in
mov
fdecstp
cmp
movsb
dec
iret
stos
out
push
sbb
dec
and
ljmp
cmpsb
xlat
mov
or
push
push
je
xchg
gs
or
adc
sub
push
sbb
dec
xchg
adc
cmp
dec
mov
or
xchg
stos
fidivl
pop
xor
adc
loope
cld
pop
jnp
mov
dec
add
xchg
sbb
das
mov
das
mov
shrb
dec
pop
icebp
mov
and
mov
pop
push
mov
dec
mov
ja
mov
stc
ss
xchg
fst
jl
inc
ja
add
lock
inc
aaa
push
mov
mov
rcr
or
sbb
and
jne
sub
cmp
rcrl
in
pop
pop
mov
cmc
shrl
push
enter
lret
xor
jb
mov
aas
ret
jp
sbb
mov
lods
xor
jmp
add
insb
sub
sbb
cmp
pop
popa
rolb
hlt
aad
popa
mov
mov
xor
leave
push
aaa
stos
jne
sbb
in
mov
sahf
adc
or
and
jbe
mov
aaa
idivl
inc
xchg
int
pop
and
and
hlt
sub
push
jb
push
out
rcrb
subb
stc
aam
and
pop
call
jg
jo
subb
sbb
pop
mov
add
cmc
mov
xchg
push
push
gs
stos
push
mov
loop
mov
mov
stc
mov
sti
jbe
pop
lods
inc
dec
jl
jae
lods
int3
inc
jbe
loope
les
rcll
mov
popf
addr16
jp
sub
sbb
loope
leave
gs
enter
jge
test
ret
lods
cmpsb
xor
xchg
je
test
jl
fmulp
xchg
sahf
xor
xchg
lock
inc
hlt
aad
dec
mov
jmp
xchg
xor
fisubrl
pop
in
scas
inc
mov
test
inc
fnstenv
pop
ja
dec
mov
iret
push
sub
dec
jo
scas
call
stc
xor
cltd
and
inc
inc
fidivrs
and
jge
inc
sahf
mov
sbbl
xchg
negl
lahf
or
mov
xchg
roll
subl
mov
inc
adc
in
outsb
popf
dec
push
xchg
je
ret
aas
lret
add
lock
lahf
ss
push
je
mov
xchg
rolb
loop
rol
jo
cmpsb
jg
xchg
sbb
dec
sbb
dec
pusha
jg
adc
jne
push
add
pop
jg
push
jne
test
icebp
xchg
insb
imul
lret
and
mov
mov
pop
es
push
inc
pop
jb
add
push
cmpsb
sbb
mov
adc
add
add
loope
imul
push
mov
jae
xorb
ljmp
stc
cmp
xlat
xor
pop
adc
popa
jbe
movsl
bnd
leave
sbb
jl
cmp
cmp
adc
push
fsts
sbb
mov
dec
xlat
insb
add
repnz
popf
add
rcrb
cmp
pop
out
out
pushf
scas
in
and
cs
fdivl
push
mov
xchg
pop
push
jmp
imul
addr16
stos
dec
fstps
in
popa
mov
jp
ljmp
rcr
lcall
mov
fstpt
lret
aad
xor
push
add
adc
pop
andb
mov
dec
mov
pop
pop
fs
sbb
push
cwtl
and
xchg
jae
sbb
mov
fldt
lret
popf
cwtl
push
jge
pop
mov
jmp
sbb
dec
lea
lret
cs
jg
jnp
xlat
pop
je
loope
push
pop
scas
aaa
xchg
int3
xchg
sub
inc
pusha
mov
push
iret
push
inc
or
pushf
icebp
loopne
pop
xchg
int
aas
push
das
push
push
icebp
cmp
pop
cmc
das
lret
sti
xchg
mov
ja
jge
lods
outsb
test
inc
mov
jns
sub
cltd
rclb
pop
mov
repz
and
lret
add
cmp
mov
fldcw
dec
call
lret
xor
or
into
pop
lock
jno
adc
movsb
xchg
out
fidivs
lods
add
xor
sbb
loopne
dec
arpl
stos
pop
mov
push
dec
repnz
jno
hlt
jmp
or
pop
repnz
nop
push
pop
lret
mov
mov
mov
aam
or
fcompl
add
in
sbb
cld
ror
iret
mov
movsl
inc
test
xor
cltd
out
cli
xchg
fiaddl
and
inc
sbb
cmp
cmp
lcall
jo
fstpl
fnsave
fldcw
cmp
mov
xchg
nop
lods
aad
vunpckhps
std
int
xchg
mov
inc
jbe
lods
stos
jp
fucomi
outsl
jecxz
cmp
adc
pop
je
pop
pop
addr16
int
mull
adc
pop
call
and
scas
sbb
mov
pop
std
sbb
inc
mov
jns
dec
loope
aaa
mov
mov
mov
inc
shr
in
dec
mov
aam
test
leave
insb
pusha
insl
dec
or
mov
or
and
lahf
inc
mov
cwtl
addb
stos
ljmp
in
movsl
dec
sbb
stos
lock
dec
dec
call
fistl
mov
cmp
pop
data16
pop
dec
fisttpl
outsb
addr16
xchg
out
add
in
xchg
mov
lea
sbb
jo
mov
push
stc
dec
cmpb
mov
int
adc
inc
mov
inc
loope
insl
fidivrs
addl
pop
jge
add
out
sub
xchg
lret
out
dec
cmpsb
imul
cwtl
in
int
push
jge
out
adc
adc
xor
pop
fmul
pop
in
shrb
mov
and
xchg
call
movb
outsb
or
test
or
jg
inc
icebp
sbb
sbb
inc
lcall
jb
mov
and
out
cmp
fcmovb
stos
add
push
push
dec
xchg
loopne
mov
aad
sub
xor
jnp
push
push
adc
jl
jo
imul
imul
stc
sbb
xor
inc
sbb
outsb
call
sti
mov
xchg
push
lds
push
mov
mov
pop
cmp
or
popa
scas
je
or
gs
mov
add
test
fsts
out
es
jnp
push
jnp
js
inc
fcomi
mov
idivl
bound
dec
dec
or
scas
pop
mov
decl
insl
mov
cs
shlb
stos
mov
neg
imul
sbb
mov
pop
push
push
xchg
jmp
fcomip
fwait
or
xor
pop
adc
popa
push
mov
ds
xor
lea
mov
insl
push
cmc
and
inc
push
lret
inc
jl
clc
in
call
inc
and
cs
dec
xchg
out
cs
movsl
cwtl
fnstenv
es
ja
xor
sub
inc
cmc
aas
adc
aaa
fnstenv
push
adcb
test
loop
mov
push
popa
jae
adc
ljmp
xor
pop
bound
dec
dec
lods
sti
outsb
inc
mov
lret
loop
ror
in
mov
test
js
mov
add
xor
notl
pop
int3
add
dec
push
sbb
jl
jns
stos
mov
add
leave
push
mov
fstp
mov
jno
mov
or
in
aaa
mov
xchg
add
js
test
movsb
inc
xchg
and
int
pushf
mov
adc
cld
xchg
call
fs
adc
mov
imul
test
filds
sub
daa
loope
inc
daa
jno
aad
int
xchg
adc
mov
ja
negl
clc
outsb
sti
cmpsb
stc
je
shrb
xchg
xchg
pushf
jg
sub
mov
inc
push
je
insl
movsl
fistpl
mov
jl
mov
notb
nop
sbb
mov
pop
xorb
mov
pop
int3
rcrb
test
mov
ret
inc
push
outsb
je
xor
mov
repnz
cmp
orl
inc
mov
cmp
push
clc
aad
stos
or
cmpsb
sbb
les
xchg
sbbl
xor
cmpsl
xor
out
and
cltd
mov
rcll
pop
movsl
ljmp
jmp
sbb
xor
mov
jb
in
push
scas
in
push
inc
shrl
sub
pop
sub
xchg
aas
daa
out
or
add
insb
imul
mov
mov
int
xchg
in
push
cmp
sub
xchg
call
jnp
add
cmpl
leave
int
dec
pop
cmpsl
ja
aam
jp
test
gs
popf
or
mov
movsl
push
js
rorl
imul
push
cmp
test
xchg
jne
sub
xor
mov
pop
pop
xchg
rclb
inc
fsubrp
call
pop
pusha
inc
mov
in
rcll
test
inc
jnp
mov
fidivs
xchg
or
push
push
xor
icebp
sbb
enter
pop
lcall
or
test
xchg
stc
pop
icebp
mov
and
pop
aaa
pop
and
rorl
add
sahf
stos
inc
and
test
icebp
pop
sub
stos
gs
push
inc
cwtl
or
pop
inc
add
and
sub
enter
movsl
loop
mov
pop
xor
in
incl
push
je
imul
xchg
add
inc
inc
dec
jmp
movsb
aaa
or
xchg
xor
dec
mov
xchg
add
lea
cmp
data16
pop
cmp
lock
das
pop
mov
testl
in
adc
mov
or
out
icebp
in
xchg
pop
in
lahf
xor
pushf
aas
jle
js
fistpll
lods
push
decl
je
xor
push
push
jge
add
out
sahf
fstps
cmc
rorl
jne
mov
jmp
stos
insl
push
mov
test
and
mov
iret
std
ret
ret
lret
fistps
mov
rcrb
fcoms
pop
xor
shlb
push
sbb
outsb
aas
sahf
sub
add
aam
sahf
add
dec
repnz
jmp
adc
mov
mov
ss
icebp
aam
lss
mov
add
outsb
inc
mov
ja
lods
fidivrs
or
es
in
bound
xchg
sbb
iret
daa
mov
push
mov
mov
cmp
mov
cmp
out
lea
cmp
mov
in
fcmove
hlt
call
fnsave
loop
ret
lcall
ds
or
mov
push
and
sbb
add
lahf
add
push
jbe
inc
add
aas
adc
mov
mov
out
pop
in
adc
add
in
xor
bound
daa
lock
mov
cli
cmc
xchg
jns
loop
clc
push
sbb
lret
std
and
adc
and
aas
pusha
jle
jae
cwtl
add
inc
stos
push
test
in
push
jo
adc
shrb
sub
scas
lds
hlt
fnstsw
addr16
jo
lods
sbb
inc
ja
add
pop
lods
iret
rcll
mov
push
mov
mov
out
test
add
mov
fidivrs
mov
into
pop
cmp
push
hlt
jp
jae
xchg
fsubl
lea
cltd
mov
or
sahf
nop
xchg
jmp
jnp
fwait
outsb
jle
push
mov
cmpsb
inc
test
dec
inc
dec
cmp
mov
dec
in
in
popl
adc
mov
jbe
cli
adc
mov
insl
dec
rcl
mov
fnstsw
push
rcl
mov
fnsave
nop
sub
or
cmpb
lret
xchg
mov
popa
push
ret
push
xor
ds
sub
pop
cmp
or
outsb
inc
sarb
rcl
mov
arpl
leave
cmpsb
inc
cmp
mov
inc
fistpll
and
mov
dec
cmpsb
out
pop
jge
fisubrs
dec
gs
ds
sarb
movsb
or
popa
cmp
fld1
scas
pop
mov
fdivrs
xchg
mov
or
iretw
adcb
bound
mov
dec
sub
movl
fimull
test
push
cwtl
test
das
sbb
stos
mov
addb
xchg
ja
insb
cli
int3
test
shrl
pop
lds
jle
inc
ja
jo
jno
shll
push
jo
add
insl
rclb
outsl
loopne
es
testl
mov
fdiv
test
inc
cmp
outsl
pop
scas
fwait
sub
or
mov
jb
jbe
mov
cltd
ret
mov
jnp
sub
inc
push
inc
jmp
sub
cmc
sbb
fcmove
aas
cmp
out
aas
sbb
cmp
mov
sti
mov
fisttpll
js
notl
jno
sahf
dec
dec
mov
dec
cmp
clc
push
sub
les
jo
jp
pushf
cmp
popa
adc
mov
shll
push
leave
mov
sbb
imul
jo
les
or
rorb
cmp
fisubl
mov
pop
jae
xchg
mov
push
add
mov
fisttps
mov
add
lret
add
movsb
push
inc
mov
and
mov
xor
xor
stos
in
daa
scas
shll
mov
xor
xor
loop
bound
adc
sti
mov
inc
add
loop
or
xchg
jb
daa
mov
push
jge
push
mov
push
fisubrs
push
sbb
dec
xchg
pop
cmp
mov
push
inc
sub
mov
fadds
and
cs
cmp
repnz
jle
add
pop
mov
mov
pop
mov
xor
xchg
mov
jns
sub
jb
xchg
or
orl
xchg
sbb
sub
mov
cwtl
sarl
cwtl
cmc
rcrb
outsb
shrl
add
add
xchg
gs
pusha
pop
mov
pop
and
call
xor
ss
add
ds
jg
shl
test
and
inc
outsb
jmp
lea
inc
sub
sahf
push
pushf
shr
sti
stc
mov
stos
insb
cmovne
mov
lock
lahf
mov
arpl
add
jb
mov
mov
ja
repnz
xor
stos
pop
repnz
sub
inc
xlat
xchg
cld
xchg
mov
cs
mov
imul
aas
cmpsl
mov
add
aad
scas
inc
xor
mov
aad
add
aaa
dec
movsl
cmp
in
in
out
aas
fimuls
inc
dec
lret
aam
or
out
jnp
ficomps
dec
dec
push
movsl
cmp
out
mov
filds
pop
ss
in
test
jmp
rcl
dec
out
dec
arpl
cmp
mov
lock
xchg
lds
pop
movsl
outsb
push
ljmp
movsb
cmp
jne
push
imul
mov
and
mov
lock
pop
sub
cltd
pop
mov
enter
adc
mov
imul
mov
insl
es
dec
mov
sbb
mov
hlt
pop
sahf
out
int3
arpl
xor
mov
lock
inc
in
push
in
imul
push
mov
ja
fisubrs
push
fldt
or
xor
jle
inc
push
ja
mov
in
adc
fsts
add
movsl
push
sub
xchg
andl
enter
dec
ror
xchg
or
mov
jg
pop
jno
je
cltd
arpl
mov
imul
div
xchg
and
loop
inc
cltd
icebp
mov
jno
rcl
mov
mov
lret
jle
push
inc
pop
xor
das
lds
jecxz
lods
dec
adc
cmpsl
jle
mov
xchg
out
in
inc
mov
lret
daa
daa
dec
dec
fldenv
xchg
int3
add
adc
fidivl
push
xor
cld
js
sahf
sbbl
mov
cmp
inc
cmc
pop
addr16
das
repnz
fidivs
gs
jae
dec
xorl
in
cs
mov
iret
adcl
aaa
dec
arpl
ret
popa
xchg
jo
lea
lret
lret
xchg
jno
lret
mov
push
inc
xor
movsl
cmp
adc
mov
and
add
fs
sbbb
int3
inc
jecxz
test
mov
out
sub
movsl
add
fcompl
and
and
dec
xchg
mov
scas
test
shrb
mov
fistpll
ss
add
push
daa
add
adc
ret
outsb
inc
dec
mov
xchg
and
adc
mov
inc
lods
inc
cmp
fnstenv
out
adc
test
int
dec
dec
jecxz
sub
loop
mov
inc
test
outsb
cli
and
lea
mov
push
rolb
imul
enter
sbb
adc
mov
fwait
jecxz
adc
cmc
xchg
inc
dec
int
jge
cltd
stos
dec
pop
in
mov
ret
fcmovnu
cmc
inc
imul
cwtl
mov
movl
jle
cmp
push
pop
addr16
fsts
jle
mov
sub
clc
aaa
push
aas
movsl
pop
push
fmul
jg
sub
out
adcb
push
mov
aas
lds
xchg
outsl
xchg
movsb
out
dec
repnz
or
push
cmpb
xor
scas
add
loope
inc
xchg
inc
mov
mov
loope
fnstcw
dec
or
or
push
adc
in
jnp
sbb
std
pusha
enter
pop
sub
mov
xchg
insl
jp
insl
out
pop
sahf
pop
sbb
cmp
js
pop
and
mov
xchg
out
pop
xor
cmpsb
mov
movsl
adc
or
dec
add
sbb
cmp
jne
sarb
push
mov
dec
xchg
inc
sbb
jnp
testl
pop
fdivs
inc
cmp
jo
clc
and
add
cmpsl
sbb
aas
leave
fcomp
lods
sbb
pop
notb
scas
movsb
addr16
stos
lods
shl
imul
jl
inc
stos
mov
xchg
out
int3
mov
pop
jmp
movsb
inc
xchg
iret
insb
stos
fs
orl
cli
or
pop
jl
dec
sbb
xchg
inc
adc
pop
lcall
aaa
xor
mov
jg
aas
jmp
xor
cmc
xchg
enter
test
daa
arpl
or
adc
pop
fidivs
or
inc
dec
mov
fnstcw
xor
jne
sub
pop
stos
mov
nop
add
mov
adc
sbb
psubsb
or
or
outsb
mov
and
jo
cmp
aam
dec
loope
jbe
dec
call
test
lret
loope
in
jge
push
mov
push
or
push
pop
sti
push
fildl
hlt
fisubrs
loop
xchg
test
mov
dec
mov
ret
test
pusha
jns
mov
push
dec
out
ja
std
inc
mov
addr16
cmc
fsub
data16
adc
mov
in
scas
aas
push
or
mov
pop
addr16
loopne
cwtl
add
in
lods
rcll
inc
cli
dec
in
jb
jge
std
cmc
dec
test
nop
repz
nop
aam
roll
jae
and
out
cmp
fildll
xchg
add
arpl
shll
insl
mov
popf
movsl
adc
jecxz
repnz
aas
dec
lcall
dec
jno
in
lods
mov
out
clc
iret
lret
cmp
stos
lcall
inc
iret
mov
loope
gs
fcoml
pop
hlt
imul
xchg
adc
je
es
cmp
outsl
mov
in
les
shll
dec
es
sbb
inc
rol
dec
cmp
into
pop
or
mov
int
mov
pop
test
lahf
and
ljmp
in
cli
push
mov
ljmp
scas
fistpl
in
adc
sub
int
jp
mov
mov
fwait
inc
arpl
stc
xor
fcoms
pop
repz
fstps
and
sbb
decl
mov
jg
out
rcll
jle
jle
add
push
aad
lcall
imul
or
scas
imul
shrl
movsl
mov
xchg
fwait
xor
sub
xchg
stos
fs
add
into
and
pop
cmp
cmp
stos
sti
fwait
test
xor
in
dec
ljmp
stos
imul
mov
or
cli
lret
push
push
call
sbb
or
lea
pop
adc
scas
das
add
xlat
lret
insb
add
aaa
pop
call
in
sahf
or
out
xchg
pop
ficoml
shrl
pop
adc
push
lds
arpl
sbbl
test
and
and
loopne
out
dec
inc
or
pop
test
inc
loope
imul
dec
inc
or
movsl
pop
mov
ss
xor
shlb
ljmp
popa
sbbl
add
loope
loop
lods
adc
xor
sahf
inc
sub
sti
mov
scas
jg
add
sub
or
xor
outsl
rol
lret
mov
insb
gs
inc
fmull
es
jns
mov
out
and
cmp
fidivs
ss
xor
popa
jg
add
jns
jno
sub
jae
mov
test
inc
fldcw
inc
idivl
sbb
dec
mov
insb
imul
pop
je
fwait
in
push
adc
lock
dec
sti
scas
inc
pop
mov
push
xor
loop
adc
adc
jno
clc
into
loop
mov
and
dec
test
lods
pop
jb
mov
xchg
in
inc
pop
sub
jns
xor
ss
adc
mov
cli
sub
neg
lock
scas
fdivr
ds
cmp
fldl
scas
inc
int
ja
fstpl
and
xor
lret
pop
outsb
lock
xchg
add
xchg
adc
mov
data16
in
xorl
insb
inc
sbb
test
aad
test
popa
mov
push
enter
xor
mov
lret
mov
sub
xchg
pop
fisttpl
xor
movsl
mov
dec
lea
lcall
sbb
leave
mov
mov
pop
pop
hlt
mov
ffreep
cld
jnp
xor
and
dec
or
aam
jp
leave
mov
jmp
test
daa
outsl
push
fwait
sub
xor
push
or
or
or
cmp
dec
lret
jle
mov
leave
jp
scas
ret
adc
shrl
pop
movsl
lods
jae
inc
int
mov
mov
insl
sub
cmp
inc
lret
jns
push
cld
addr16
pop
inc
mov
dec
ljmp
xchg
ret
or
outsb
test
mov
addr16
xlat
inc
popa
fcompl
insl
pop
jne
xchg
and
js
das
outsb
xchg
sub
pop
xor
int3
daa
pop
xchg
and
test
ja
mov
mov
sub
adc
and
and
lcall
sub
lahf
push
jle
or
dec
mov
and
xchg
push
cmp
jmp
outsl
repz
stos
ja
lea
cwtl
inc
ljmp
call
cmpsl
push
xchg
sub
cmp
inc
bound
iret
pop
xchg
mov
loope
lcall
outsl
outsb
loope
inc
into
getsec
testl
add
fcomp
dec
and
clc
dec
fidivl
hlt
add
and
mov
inc
pop
insb
add
popf
jle
jb
ja
das
mov
das
xor
jnp
mov
inc
int3
or
mov
mov
pop
nop
lods
ja
adc
push
rorb
push
mov
push
cwtl
and
notl
mov
xlat
mov
sbb
xor
mov
ret
rcll
mov
js
mov
aas
dec
sbb
dec
jo
xchg
adc
mov
in
inc
stos
pop
clc
push
fdivl
popf
fildl
cld
cltd
xchg
in
ja
je
fsubrl
ret
push
push
std
insl
sbb
into
int
push
les
je
mov
mov
insl
fs
aaa
iret
jnp
add
insb
mov
and
and
movsl
mov
inc
or
clc
xor
insb
add
dec
cmpsb
roll
imul
adc
int
cmpsl
ds
push
dec
nop
pop
vmovdqa
mov
stos
dec
shl
or
jno
lahf
xor
jl
aam
fwait
pop
or
inc
nop
push
imull
sub
xlat
xchg
imul
mulb
sldt
push
aas
push
lods
add
jecxz
test
xchg
xor
add
dec
push
out
iret
icebp
mov
outsl
add
mov
mov
arpl
mov
mov
xor
pushf
pop
pop
fistps
out
ja
inc
or
xchg
pop
sarb
imul
cmc
sbb
aaa
or
jnp
jne
push
mov
cmp
jmp
jmp
xchg
push
call
test
jns
xor
ds
xor
cmp
mov
js
rol
jns
mov
stos
adc
les
ds
mov
cmp
dec
xchg
xchg
sub
jmp
scas
rorl
mov
sbb
pop
cli
insl
mov
into
adc
fdivrl
fimuls
data16
xor
lds
das
adc
xchg
sub
test
iret
cmpsb
icebp
enter
adc
je
in
aam
push
adc
or
push
shlb
lret
sti
push
push
or
leave
rcl
bound
mov
divb
jp
jne
rcll
rcrb
fmull
roll
repz
in
inc
lahf
out
test
push
and
pop
lahf
ret
imull
mov
dec
adc
pop
cmpsb
add
sbb
xor
lock
pop
fwait
cmp
jno
test
mov
sbb
fdivrl
pop
lods
push
cmovo
icebp
adc
or
mov
gs
ficomps
xchg
popa
add
and
mov
xor
fwait
out
lds
mov
daa
sbb
jne
jle
scas
jmp
push
mov
pop
and
into
frstor
jno
mov
pop
and
mov
lea
xor
fmul
mov
ja
mov
adc
pushf
add
arpl
cltd
jmp
jae
les
arpl
fnstsw
adc
lcall
mov
test
outsb
in
fwait
mov
or
add
in
aas
in
lods
mov
cmp
daa
cmp
ficoml
sub
andl
stos
xor
cltd
int3
out
add
mov
and
shll
inc
clc
or
sub
adcl
gs
sub
xor
cmp
push
shlb
xlat
jae
pop
movsl
sbbb
pop
pop
aaa
popf
dec
ss
push
roll
mov
jl
sub
lahf
pop
xchg
sbb
lods
jne
pushf
sub
jbe
shll
mov
or
fisubrs
sub
inc
jmp
cwtl
or
or
stos
dec
ds
or
pop
rorl
and
mov
dec
dec
cmpsb
mov
push
mov
icebp
js
sbb
ret
jae
shrb
into
mov
rorb
mov
cmpb
sub
ds
lret
repz
fldcw
adc
sahf
out
int3
hlt
jae
adc
add
dec
testl
sti
pop
fisubrs
or
cs
mov
jl
flds
imul
mov
mov
add
ds
push
jo
xchg
jge
flds
mov
xchg
add
jnp
imul
lcall
push
test
mov
pop
or
iret
mov
mov
mov
push
and
arpl
adc
pop
mov
mov
jp
dec
or
in
jp
mov
or
jp
sub
pop
repz
mov
push
aad
sub
jo
jb
pop
push
leave
mov
or
adc
cmpsl
loope
shll
cmp
rcrb
cmpsl
mov
jae
aam
pop
dec
pop
jle
or
mov
cmp
nop
xorb
data16
jmp
pop
addr16
jmp
stc
fiaddl
loope
ss
popa
mov
mov
icebp
mov
push
mov
popa
mov
pop
mov
cmp
sub
lods
xchg
lcall
dec
filds
mov
xor
in
sti
push
dec
push
cmp
ss
mov
xchg
push
add
xchg
adc
fs
xchg
nop
movsb
xchg
bnd
mov
push
repnz
mov
hlt
lret
pop
cmc
push
add
cltd
sub
jl
fs
enter
jg
enter
sbb
and
cmp
gs
pop
outsb
jg
shrb
pop
loop
cltd
ljmp
add
and
sbb
pop
hlt
push
mov
cmp
shll
adc
xlat
repnz
fnstenv
add
xchg
pop
inc
fidivs
mov
lret
out
shl
mov
sti
mov
scas
movsl
ffreep
aam
ss
daa
scas
xchg
pop
das
xchg
ja
stos
mov
xor
sti
cmpsl
inc
dec
and
enter
sbb
jae
fwait
aad
jno
add
lahf
scas
call
jp
test
adc
or
mov
dec
mov
scas
test
jae
cmpsl
adc
test
inc
scas
xchg
sub
pop
inc
enter
xchg
aaa
aam
cwtl
or
ja
and
dec
rorb
or
repz
xchg
rol
cli
or
icebp
pop
cli
cmp
sub
rol
cmp
shrl
cmp
aad
out
dec
rcrl
mov
fisttps
test
mov
hlt
mov
popf
and
std
daa
cmp
fbstp
pop
mov
jge
push
push
lahf
mov
fsubr
sbbb
adc
fisubl
out
xchg
and
loop
xchg
or
mov
adc
add
or
icebp
dec
sub
fisubrs
sub
lds
test
jno
cmp
or
and
push
rcrb
rcrb
ds
jbe
int
data16
js
int
sbb
and
pop
adc
cmp
and
iret
subb
adc
lock
aas
repnz
fisubrs
cmp
pop
fcom
movsb
mov
fistps
stos
dec
icebp
fstl
lds
fs
xchg
out
test
xor
inc
scas
inc
cwtl
movsl
push
mov
and
xchg
in
sbb
lds
add
mov
es
push
dec
sub
push
cmp
movsb
jnp
ljmp
sahf
pop
adc
int3
xchg
adc
xchg
mov
outsb
insb
jle
xchg
add
jl
mov
cs
push
test
xchg
pusha
ss
and
jnp
jmp
sub
out
push
cwtl
add
cmp
cld
sub
aad
shl
outsb
sub
in
jl
push
mov
movsb
aam
test
insl
push
test
or
cli
insl
test
dec
scas
inc
xchg
lock
inc
sti
dec
add
in
into
enter
imul
js
mov
sub
iret
mov
in
movl
ss
adc
mov
dec
inc
add
mov
loopne
cmp
lcall
lock
xchg
dec
sbbl
jecxz
sbb
addb
jnp
arpl
into
ficoms
lret
call
or
jno
in
movsl
push
sub
int3
sub
lret
mov
fwait
das
and
cmp
scas
pop
inc
push
addr16
test
and
cmc
fsts
icebp
les
idivl
cvtdq2ps
out
and
sahf
faddp
jbe
or
out
cmp
dec
mov
mov
cs
pushf
add
mov
into
repz
ret
outsl
shlb
lods
and
rcrl
adc
xorb
add
sbb
or
pop
loope
adc
or
and
cmp
hlt
aaa
xchg
data16
mov
das
test
leave
ss
adc
push
inc
push
fnsave
mov
fistl
icebp
cwtl
pop
in
lret
inc
mov
ja
cmpsl
xchg
adc
push
call
push
fwait
lods
push
dec
popa
xor
aad
push
sub
test
js
in
arpl
sbb
mov
pop
dec
pop
lea
fs
sbb
sti
cmp
in
cwtl
xchg
mov
pop
ja
popa
dec
fs
bnd
inc
loope
push
and
sub
loope
xchg
jmp
ss
movsl
addr16
aam
inc
in
shlb
fistpl
or
jp
ja
jge
push
dec
aad
call
or
or
shl
or
and
icebp
stos
jle
call
push
and
xchg
aaa
aas
enter
ja
mov
inc
mov
pop
inc
shll
aam
data16
push
mov
insb
xchg
jecxz
push
dec
sub
in
sbbb
shll
call
int
xor
adc
mov
jge
jo
outsb
dec
daa
inc
cwtl
fcmovnb
mov
pop
push
mov
add
or
dec
out
adc
pop
and
pop
mov
cmp
sbb
adc
pop
test
popa
out
pop
push
leave
pop
mov
test
jle
cmp
stos
not
scas
out
pop
jbe
xor
in
in
push
arpl
test
fimuls
and
dec
sbbb
mov
addr16
jnp
insl
and
enter
repnz
bound
jecxz
sub
addb
jbe
stos
add
loop
repnz
jg
push
lds
cmp
repnz
push
int
xor
mov
fidivrs
negl
aas
mov
into
push
pushf
jle
and
imul
add
je
pushf
movsl
testb
in
sahf
fiaddl
xorb
inc
in
push
add
repnz
or
jno
sarl
pop
fadds
jg
sub
movsb
cmp
pop
insb
sub
js
jle
test
add
lods
cld
fstpl
inc
cmp
mov
lock
lret
lret
std
repnz
add
aaa
xor
adc
mov
icebp
out
sbb
mov
jmp
add
pop
pop
xchg
jg
mov
xchg
stc
in
jne
sahf
lahf
repz
pop
cmp
pop
pop
std
cltd
mov
std
mov
jle
fisubrs
sbb
push
mov
imul
jb
sbbl
sbb
test
xchg
das
jmp
xor
add
xchg
push
pusha
inc
hlt
out
or
and
mov
mov
bound
xchg
rorl
popf
adc
mov
shrb
lods
mov
or
inc
and
jae
rolb
addr16
fcomps
push
outsb
lea
ret
adc
repnz
hlt
mov
sub
sbb
insb
sbb
mov
mov
int3
jae
and
sub
sub
lret
leave
xchg
pop
aaa
ljmp
cmp
push
shl
incl
pop
lods
mov
mov
dec
or
loope
ss
outsb
out
imul
xchg
jecxz
xlat
insl
xor
lahf
ss
mov
mov
xor
rclb
sbb
sbb
mov
mov
clc
in
add
out
dec
ret
insl
jmp
sbb
nop
leave
inc
notb
dec
lcall
cld
mov
or
sub
dec
lock
mov
mov
xchg
sbb
add
cmpsl
pop
mov
xor
adc
cmp
dec
dec
inc
clc
aaa
out
repz
xchg
jmp
icebp
adc
mov
data16
mov
push
daa
or
or
mov
mov
sub
and
pop
and
inc
jp
pop
and
sbbl
stos
shrl
add
cmpsl
mov
dec
push
lcall
add
popa
dec
lock
cmp
jno
lds
cli
mov
push
lock
pop
and
shrl
cmp
dec
xor
aam
insl
cmp
int3
push
push
lcall
cwtl
sti
cli
lea
sub
xor
stos
xchg
lcall
push
stos
sub
das
test
jg
xor
rcl
xor
iret
push
in
enter
cmc
pop
fwait
fwait
stos
imul
xor
aam
sahf
dec
mov
out
daa
mov
lea
add
hlt
outsb
repz
loopne
pop
cmp
mov
lods
pop
add
nop
ret
pop
and
scas
les
mov
scas
les
sbb
add
xor
jno
jl
push
adc
fnsave
int3
lret
cwtl
push
in
or
out
out
xchg
aaa
mov
sbb
fcmove
mov
mov
ret
mov
fwait
inc
xor
hlt
jecxz
push
mov
addr16
push
inc
xchg
ljmp
mov
iret
idivb
push
sub
sub
jge
jmp
std
fiadds
adc
test
xor
cli
xchg
mov
pop
sub
lahf
sub
or
inc
arpl
xchg
adc
xchg
sbb
mov
and
mov
inc
mov
dec
dec
movsl
xchg
push
popf
xchg
into
enter
jo
pop
inc
in
mov
push
insl
fisubrs
mov
push
sub
or
adc
xor
xor
mov
mov
addr16
sbb
mov
lods
xlat
jmp
xor
sub
sub
clc
jae
dec
cmp
daa
insl
inc
xor
jne
cmpsl
shll
adc
mov
mov
and
jne
jmp
xchg
stos
xor
and
xor
pop
cwtl
fs
adc
addr16
lret
ret
inc
mov
sbb
movb
loope
mov
jge
cwtl
add
mov
jbe
in
add
in
test
jne
sbb
add
add
inc
arpl
addr16
fs
inc
in
mov
lock
push
stos
insl
or
push
icebp
mov
call
popf
leave
cmpsb
mov
es
sbb
mov
jmp
dec
dec
push
xlat
fildll
mull
ljmp
test
pop
sub
cmp
movsl
call
push
mov
xchg
cmpsb
xlat
sbb
test
in
push
xchg
outsl
mov
cmc
les
call
imul
push
mov
dec
pop
push
rcrb
imul
jg
insl
fcomps
aaa
popf
stc
cld
pop
mov
cld
lcall
push
inc
scas
jns
and
or
test
inc
pushf
ds
lods
js
repz
dec
pushf
or
aad
push
push
dec
popf
lods
dec
mov
shrl
pop
testb
and
sub
inc
or
shr
jle
icebp
pop
and
cmc
arpl
dec
cli
enter
notl
dec
sub
inc
popf
stos
es
or
dec
stc
in
das
imul
outsb
fiaddl
test
push
imul
jbe
mov
add
mov
ja
cld
cs
outsl
cmp
ret
push
xchg
outsb
mov
jnp
lea
outsb
jo
pop
lea
loop
in
mov
dec
aam
pusha
lods
add
inc
cltd
xor
jae
sub
and
jg
loopne
andl
mov
out
cmp
inc
push
fbld
mov
mov
sbb
dec
call
data16
push
sub
cmp
loop
cmp
sub
cmpsl
or
cs
and
jl
shl
es
or
addr16
mov
pushf
and
pop
aad
sahf
sbbb
fistl
mov
cld
mov
out
ljmp
js
or
int3
adc
hlt
and
sahf
addr16
dec
lds
jbe
push
dec
cmp
cmp
mov
shlb
sub
xchg
loopne
in
cmp
push
stos
loope
sub
pop
inc
adc
roll
cmp
out
add
fldt
jmp
jl
pop
xchg
iret
insb
xor
jns
jbe
or
cs
adc
xchg
mov
in
pop
scas
pop
push
mov
cmp
xor
jbe
scas
mov
cmpsb
push
mov
add
stos
sub
sbb
pusha
cs
faddl
pop
cs
lcall
movsb
mov
xlat
je
test
cli
test
add
std
int3
mov
or
xor
pop
ljmp
test
ret
xchg
into
je
dec
push
fwait
pop
fiaddl
into
mov
mov
mov
fwait
or
sub
cmpsb
mov
aam
sbb
es
pop
xchg
imul
dec
in
test
loope
mov
outsb
fisubl
inc
mov
fimuls
lahf
pshufw
push
fcoms
mov
jp
mov
in
aad
sbb
jle
sbb
xchg
mov
cli
mov
dec
in
sar
inc
add
imul
mov
cmp
xchg
pop
jg,pn
mov
pop
mov
or
nop
test
stos
mov
or
ja
or
divl
decb
cltd
adc
aaa
dec
es
jno
mov
fucomp
jl
mov
or
stos
dec
sbb
jg
cmc
mov
jg
jbe
mov
mov
fnstcw
pop
movl
imul
cmp
xchg
movsb
sahf
sbbl
lods
dec
int3
fbstp
leave
lret
mov
and
scas
add
jo
ret
mov
imul
or
mov
pop
xchg
xor
dec
sbb
call
mov
lods
rcrb
mov
adc
xor
int
cmp
hlt
sub
aas
mov
jg
outsl
mov
sbb
lret
dec
push
inc
out
hlt
inc
push
aam
adc
leave
adc
jb
adc
repz
sbb
mov
mov
or
push
insl
mov
jnp
jo
addr16
adc
cmpl
aam
jl
xlat
sub
out
mov
cmc
mov
push
addr16
test
push
movsl
and
adc
xchg
in
lods
add
mov
push
in
mov
add
jmp
mov
pop
sbb
or
add
cmp
out
dec
test
mov
push
xor
rcl
cli
imul
cs
and
jp
mov
sbb
pop
rorl
xchg
or
lret
out
mov
pusha
addb
cmc
lds
push
or
dec
sbbl
int
cmpsl
ja
jns
cwtl
mov
stos
and
xor
mov
mov
add
repnz
jns
icebp
stos
cmp
push
mov
jg
movsl
imul
cwtl
pmulhw
push
movsl
mov
popa
mulb
push
add
es
les
int3
dec
dec
in
dec
mov
jg
rclb
mov
pusha
or
cwtl
das
mov
loope
mov
push
insl
add
xchg
rcl
dec
movb
cmp
sbb
pusha
stos
aaa
xor
mov
adc
fldl2t
mov
add
mov
xchg
cmpsb
ret
repnz
pop
push
pushf
pop
dec
gs
jp
mov
mov
insl
inc
es
inc
mov
ss
fadds
xor
xor
notl
sbb
roll
mov
call
clc
inc
dec
test
jno
xor
int
aas
sti
mov
add
daa
adcb
sbb
sub
scas
stos
inc
popa
das
les
add
adc
ljmp
pop
daa
sbb
imul
sub
cmpsl
sarb
sbbb
pop
push
and
cmp
in
pop
repz
andl
aaa
or
mov
jbe
jp
xchg
arpl
les
inc
push
xor
loopne
mov
xchg
jle
sti
jbe
data16
sbb
je
movsb
aas
and
lds
insb
aad
mov
hlt
push
push
insb
xchg
jle
mov
lds
in
jg
xchg
scas
insb
xchg
jle
dec
push
cltd
in
lret
je
xor
xchg
data16
pop
dec
mov
loopne
inc
push
das
push
and
outsl
push
fs
jae
sti
xor
sub
dec
push
ljmp
jno
insb
dec
addr16
jns
mov
mov
mov
push
xchg
sbb
iret
dec
add
pop
xchg
js
test
negl
loop
out
pop
mov
jp
iret
pop
adc
push
lock
call
and
mov
scas
fistpl
xor
cli
gs
fs
sbb
add
xor
jge
fistl
xchg
xor
jb
mov
inc
dec
jbe
jnp
icebp
xchg
jge
push
mov
and
push
cmp
mov
mov
lods
imul
lcall
xor
popa
xor
sahf
mov
rcr
push
mov
push
lret
cli
sub
movsl
xchg
push
cmpsl
loope
je
lret
lret
hlt
scas
pushf
sub
dec
lcall
mov
out
add
push
mov
mov
es
lcall
jmp
popa
leave
sub
repnz
jg
and
scas
fbstp
adc
es
adc
xchg
sbb
ret
pop
test
push
jb
lret
scas
mov
paddsw
xchg
fistpll
les
fcompl
pop
push
mov
inc
ficomps
mov
pop
dec
pop
cmp
fisubs
call
sbb
add
xor
jno
sbb
xor
jmp
cmp
xchg
imul
inc
lahf
cld
and
push
rcl
inc
sbb
mov
aam
aaa
lcall
jo
or
xor
cmp
divb
pop
jnp
popf
stc
adc
test
mov
and
fisubl
cli
test
repz
xor
jno
es
push
sarb
xchg
jp
sbb
in
jne
icebp
sbb
out
mov
insb
hlt
incl
xchg
call
fsub
mov
lods
fbstp
mov
xchg
pop
leave
lret
and
iret
mov
xchg
mov
ljmp
lods
shlb
inc
in
test
cmp
mov
jle
mov
cs
mov
inc
fmull
lods
cs
gs
pop
jecxz
sub
pop
stos
mov
sbb
subb
arpl
mov
pop
sub
mov
cmp
orl
inc
dec
jo
shl
add
testb
sub
jl
xor
lods
dec
sub
cmpsl
sbb
fwait
mov
inc
mov
push
std
jp
mov
cltd
xor
leave
cmpsl
jnp
pop
inc
stc
fwait
add
sub
lods
jmp
cmc
jge
mov
sub
adc
cli
xor
dec
cmp
push
aas
adc
push
jecxz
outsb
movsl
data16
into
add
jb
out
popf
gs
cmpsl
lds
cmp
andb
mov
mov
fldcw
aad
add
xlat
mov
jge
daa
mov
sahf
jbe
data16
fisttpll
adc
xor
pop
cmp
lret
push
ja
cmp
sbb
and
rcr
xchg
test
push
inc
push
sbb
jbe
push
rorb
jmp
loop
cwtl
xchg
sub
jg
icebp
push
mov
push
lock
sbb
add
mov
add
mov
xchg
dec
call
lods
cmpsb
insb
push
and
in
jle
push
out
mov
inc
lods
dec
vandps
sbbl
lods
cwtl
lahf
int
gs
push
mov
mov
loopne
add
xchg
jo
sub
clc
xchg
push
scas
nop
sar
jle
bound
dec
mov
or
pop
adc
mov
xchg
inc
ficoms
repz
lods
fwait
inc
and
inc
dec
inc
jo
add
push
push
jmp
popf
inc
and
sub
cmp
lahf
pop
iret
lods
jmp
fadd
mov
mov
xchg
jns
add
test
xchg
out
popf
or
into
jp
testl
stc
pop
mov
sbb
and
out
xchg
sub
or
inc
lea
lea
ljmp
movsl
aaa
das
shlb
cmp
enter
jp
lcall
dec
cmp
dec
popf
or
sbb
je
pop
or
xchg
cmp
aaa
adc
sbb
gs
jmp
sbb
mov
stos
daa
inc
out
mov
mov
sbb
mov
aaa
sub
gs
mov
lods
xchg
ficoml
orl
push
movsb
jbe
xchg
sbb
jbe,pt
sbb
ret
repz
mov
add
jl
sbbl
pop
mov
into
fldt
out
pop
pop
push
mov
mov
out
dec
out
dec
mov
stos
fwait
arpl
sbb
mov
les
fimuls
pushf
repnz
push
sbb
outsb
inc
arpl
mov
test
push
mov
ficoms
push
movsl
mov
or
pop
insl
xlat
xchg
dec
clc
cmpb
int
mov
cltd
lds
adc
or
cmpsl
xchg
loope
adc
and
loop
cmp
call
lds
add
push
daa
ja
outsl
or
push
inc
scas
idiv
es
pushf
cmpsb
mov
sahf
cs
shll
and
mov
push
lcall
dec
jge
sahf
dec
pop
inc
fidivs
imul
dec
mov
pop
xchg
int3
xor
lea
sub
out
add
mov
push
je
mov
loop
jp
adc
sarl
pop
push
lods
dec
jno
cmp
lahf
add
or
out
or
imul
jmp
adc
ret
jl
xchg
rcrb
dec
mov
in
push
in
push
adc
mov
shlb
stos
mov
or
mov
imul
mov
inc
cmp
and
or
mov
nop
fdivrs
and
sub
or
test
jge
mov
add
xor
loop
xchg
mov
ret
pop
jne
mov
xor
iret
fadd
push
xor
xor
cmp
inc
daa
push
pop
repz
dec
push
sub
mov
repz
mov
in
jo
jno
lods
xchg
lcall
test
add
rol
pop
stos
lret
xor
fidivl
ljmp
hlt
adc
xchg
mov
adc
xchg
loopne
mov
ds
dec
or
into
push
pusha
xchg
or
cmp
out
xchg
cmp
fwait
jo
add
cmp
push
out
pop
inc
pop
mov
rcll
lods
xchg
mov
xor
cltd
cmp
and
mov
fdivl
add
jne
mov
int
cmp
ja
inc
ss
stc
sub
loopne
lret
mov
pop
or
movsl
roll
call
mov
mov
popf
inc
mov
mov
movsl
add
dec
das
mov
xchg
xor
adc
mov
jae
pop
bound
pop
inc
insl
jmp
lret
ja
out
cmpsl
jnp
jns
fsubrs
inc
std
popf
out
nop
cmc
cli
dec
mov
fisubl
cltd
outsb
or
je
lahf
ss
xor
jb
stos
mov
dec
xor
popl
shrb
loopne
arpl
and
arpl
sbb
jmp
stos
push
lods
pop
dec
insb
fldl
xchg
movsb
repnz
mov
sub
loop
cmpsb
fwait
pop
int
add
inc
movsl
and
jae
mov
lahf
xchg
xchg
inc
mov
in
and
out
outsl
sar
pop
pop
in
fs
mov
ja
in
sbb
stos
aad
fcompl
push
idiv
stos
inc
and
jno
inc
andl
and
jne
pop
decl
sub
data16
sbb
int3
pop
jecxz
mov
dec
adc
ss
insl
push
mov
sti
roll
mov
mov
jne
xchg
inc
and
xchg
push
popa
inc
fisubrs
movsb
shrl
in
decb
jmp
test
dec
jb
jg
cli
test
sbb
test
out
sti
xchg
jbe
out
fwait
stos
xchg
inc
je
ss
jne
xor
ficomps
pop
dec
test
aas
push
iret
fs
fwait
inc
mov
inc
inc
loope
aas
push
dec
sub
xor
cs
mov
or
inc
movsl
sub
push
mov
les
xor
imul
hlt
aam
and
pop
push
insb
loopne
xchg
inc
jno
sarl
aaa
imul
cmp
js
icebp
movsl
pop
mov
nop
push
mov
xchg
outsb
add
push
fisttps
shrb
adc
mov
aad
out
mov
jb
push
pop
xchg
orb
stc
orl
lea
rcpps
adc
in
sarb
push
jmp
mov
jb
ja,pn
mull
sub
mov
and
cmp
fwait
mov
movsl
data16
mov
inc
cwtl
pop
mov
mov
mov
adc
mov
ja
lea
sbb
cld
dec
xorb
vmulpd
inc
fisubl
mov
cmpsl
sbb
ret
sbb
jo
mov
adc
jo
xorb
popf
jg
sbb
ret
outsl
pusha
adc
cltd
cmp
push
xchg
xchg
stos
fwait
sbb
xchg
xor
push
fwait
in
or
in
mov
jbe
adc
cld
cvtdq2ps
push
jae
xchg
lods
movsl
js
cs
inc
xchg
scas
ljmp
stos
insb
sbb
mov
fldt
sub
jle
mov
repz
stos
sarl
rolb
int
fs
adc
sub
or
xchg
fdivrs
sahf
lds
cmpsb
xchg
and
clc
dec
mov
mov
push
inc
notl
mov
es
arpl
cld
push
or
xchg
ljmp
or
in
jns
addr16
xchg
popf
test
lret
les
or
sbb
movsb
xchg
lea
aad
je
jno
sti
pop
movsb
and
lsl
adc
cmp
lods
pop
pop
je
jecxz
mov
cmpb
movsb
shlb
add
or
and
divb
lock
aam
push
xor
xor
repz
xchg
popa
aaa
inc
fisttpll
decl
clc
andl
jb
in
iret
cmc
mov
gs
sub
je
std
xor
mov
ss
daa
scas
inc
jmp
daa
in
xchg
dec
xchg
mov
mov
add
xor
gs
cmp
dec
mov
dec
mov
sarb
fsubp
mov
dec
cmpsl
aas
out
mov
add
shr
and
imulb
pop
mov
dec
adc
pop
mov
cli
in
xor
mov
aam
aas
mov
jg
clc
mov
or
and
jg
iret
leave
jl
jo
insl
scas
rcll
xor
jp
scas
scas
test
push
fsincos
in
es
sbb
sub
rcrl
xchg
adc
mov
mov
dec
mov
xchg
rcll
pop
iret
cltd
push
and
pusha
stc
clc
mov
jecxz
add
fisubrs
pop
fildl
in
hlt
fimull
aas
insb
mov
out
cmp
bound
outsb
test
movsb
movl
pop
stos
jge
lret
mov
adc
jne
rcl
loope
pop
fs
lss
cmp
mov
in
lcall
mov
cmp
xor
or
sbb
stos
sarb
out
xchg
loope
lods
call
cmp
clc
sti
mov
js
cmp
cltd
cmp
in
jns
mov
insb
cltd
daa
push
pusha
inc
lods
inc
inc
xlat
js
test
cmpl
sub
std
cmpsl
loop
popf
mov
xchg
ja
mov
jle
inc
and
push
jle
imul
mov
jns
cmp
ret
loop
jecxz
sbb
movsl
adc
pushf
dec
into
xchg
cmp
shr
inc
imul
jle
in
and
jmp
and
mov
mov
fwait
lcall
cmpsb
cmp
mul
mov
xchg
pop
repz
aad
rorb
insl
call
dec
mov
dec
fdivr
inc
mov
jns
movsb
cmp
mov
sub
imul
pop
xchg
lods
fildl
rcrl
ret
cmp
mov
sub
sbb
jb
pop
pop
loope
xorl
sub
xchg
repz
outsb
fs
in
ret
xchg
shrd
sub
movsb
ljmp
jne
push
sub
sahf
frstor
jbe
arpl
hlt
mov
int
inc
inc
mov
mov
sub
pop
pop
add
add
mov
scas
and
daa
ret
sub
and
mov
daa
inc
in
xor
and
adc
test
mov
pop
insl
inc
xchg
lahf
negl
xor
jmp
sarb
xor
pop
fnstenv
add
scas
mov
loop
sub
inc
pop
dec
cmpsl
jg,pt
xor
lds
in
shlb
data16
lret
aad
jns
insl
imul
int
cmp
dec
mov
xor
xchg
adc
sub
gs
or
negl
scas
lds
dec
pusha
cmp
ret
outsb
sbb
adc
adc
pop
jp
or
xchg
repnz
sub
xchg
arpl
outsb
push
mov
bound
fnstenv
into
jmp
sub
lods
and
out
nopl
xor
mov
and
adc
dec
cld
mov
mov
pop
pop
mov
rcll
repnz
call
test
pop
jmp
cs
jge
cmp
mov
jle
inc
fldt
jae
sub
lret
int
cli
shll
mov
js
cmpsl
aam
mov
out
loopne
add
xchg
in
push
pop
mov
imul
jg
fbstp
xchg
pop
inc
inc
or
mull
nop
and
in
testl
mov
sbb
ja
sbb
nop
sub
xchg
dec
mov
jo
cwtl
shr
subb
sbb
loope
jbe
hlt
in
lods
cld
cld
or
iret
test
xorl
pop
cmp
jp
insl
xchg
dec
or
outsl
adc
inc
rcrl
xor
or
subl
pop
rcrb
dec
fmul
pop
xchg
sub
mov
mov
inc
insl
call
fmuls
mov
test
scas
sbb
test
jmp
das
push
js
fmull
sbb
xchg
adc
sbb
add
idivb
cmpl
das
jnp
dec
int
jo
cmp
jg
scas
jb
cmpsl
fcoms
mov
cmp
xchg
notl
std
pushf
xor
clc
imul
xor
mov
push
das
movb
mov
outsb
sbb
or
pop
shl
cmp
insb
xchg
jl
pop
add
cmpsl
sub
aas
pop
enter
mov
jnp
test
push
es
cmpsb
lds
jg
pop
dec
or
aam
sbb
and
sbb
inc
or
cs
int
push
jae
push
loop
les
xchg
mov
and
outsl
push
inc
test
shlb
push
cmp
xchg
imul
push
sub
mov
push
js
mov
out
mov
sbb
imul
inc
je
flds
cmc
movsl
xchg
bound
add
popf
push
lret
sbb
out
int
jno
inc
in
jp
jle
xchg
mov
or
sub
enter
leave
data16
mov
push
pop
sti
insb
dec
pop
imul
aas
adc
mov
push
jnp
cmp
les
xchg
rcll
fwait
lret
pushf
ss
movsb
nop
inc
inc
pusha
inc
scas
mov
test
xlat
mov
ficompl
xchg
sbb
test
jns
mov
xor
sub
repz
jle
and
pop
pusha
imul
ja
sub
sbb
jbe
inc
push
mov
leave
xchg
test
mov
loop
std
jecxz
pusha
pop
xor
fs
stos
jecxz
adc
es
push
arpl
sbb
js
ja
mov
in
fldcw
or
push
inc
sbb
xchg
jp
repz
shrb
lahf
jo
cli
push
movsb
xchg
add
ja
test
fsubl
push
arpl
out
outsb
sub
cmc
pop
xchg
cltd
push
jp
mov
iret
es
nop
dec
sbb
testb
sbb
cmc
leave
pop
sbb
and
bound
or
or
xor
sub
pop
fsubl
jbe
subb
pusha
notl
pop
mulb
sarl
add
mov
dec
icebp
xor
mov
lods
jmp
xchg
dec
push
mov
or
add
incl
das
into
dec
pop
fcoms
or
repz
mov
adc
inc
popa
mov
decl
fisubrl
add
xchg
mov
lret
adc
mov
pusha
cmp
mov
and
pusha
cmpsl
pop
outsl
xlat
sbb
mov
sbb
mov
xor
fmuls
fisubs
dec
gs
in
in
pop
adc
bnd
mov
hlt
cs
jge
or
cs
and
mov
mov
cs
cmp
pop
push
into
mov
push
cmc
lret
cmpsl
divl
pop
mov
imul
jp
xlat
and
or
mov
mov
jl
call
cli
inc
cwtl
jnp
lds
mov
mov
jns
fidivrl
insb
out
jb
mov
jae
push
cmpsl
xchg
mov
xor
repnz
loopne
adc
mov
mov
mov
pop
out
and
jno
cli
jno
lea
loopne
fsubrs
lcall
call
dec
rol
ja
fs
pusha
sbb
mov
jns
push
pop
jnp
aas
cltd
sub
ds
mov
loope
in
bound
xchg
and
sub
out
xchg
aam
insl
sub
std
and
cmpl
xor
shlb
mov
xchg
xlat
cs
stos
in
into
into
data16
je
gs
lret
mov
test
or
push
aad
pop
fists
adc
jne
pushf
cmp
inc
cld
cmp
test
mov
fdivrl
mov
test
bound
cmpb
fstps
in
scas
mov
out
add
cwtl
fwait
jp
pop
mov
pop
out
or
outsl
pushf
and
out
xchg
pop
mov
push
push
jecxz
loopne
mov
xchg
adc
mov
jbe
mull
push
cs
xor
mov
repnz
aad
cs
fdivrl
xlat
jecxz
aad
loopne
cld
mov
scas
jo
xchg
add
adc
push
cmp
push
push
push
fs
nop
leave
and
lret
lahf
in
rcrl
cmp
mov
sti
cld
mov
fbld
add
addr16
xlat
mov
enter
sub
sub
and
xor
test
test
fidivrs
mov
outsl
daa
popa
sub
or
imul
jns
xor
js
les
aas
dec
push
sub
xchg
mov
mov
mov
fs
pop
dec
pop
add
into
cmpsb
fstps
sbb
icebp
mov
roll
pop
popa
inc
call
aam
push
jnp
loopne
fwait
and
mov
and
fstp
rcl
xchg
mov
and
push
inc
fcomi
in
mov
je
stos
imul
cmp
pop
jne
push
dec
cwtl
das
or
add
lods
sub
sub
push
fidivrl
into
fsubrl
xlat
sbb
mov
mov
jle
and
pop
and
aam
bound
cmc
push
movsl
es
jb
inc
pop
test
inc
add
push
rclb
or
outsl
cmp
or
adc
pop
repnz
mov
and
jp
leave
jmp
fcoml
push
push
cmp
not
ja
test
cli
mov
aas
loop
dec
loope
outsl
xchg
mov
sbb
insl
sbb
dec
pop
dec
add
and
mov
mov
cmp
mull
mov
adc
sbb
push
mov
in
notl
fildl
std
inc
inc
fucomi
inc
fnstsw
push
mov
aam
inc
or
in
sub
xor
movsl
out
add
in
push
xchg
or
scas
mov
data16
mov
int3
lret
faddl
jl
fdiv
sub
fs
pop
xchg
xchg
jne
fld
test
cli
into
scas
inc
addr16
pop
out
pop
or
dec
adc
idivl
jl
jo
mov
loop
fldt
out
adcl
push
add
push
pop
es
out
cmc
sbb
insl
xchg
xchg
xchg
test
dec
jmp
push
jmp
xor
and
sbb
lods
push
push
repz
data16
decb
dec
in
push
mov
push
test
sahf
pop
mov
mov
or
xchg
sub
subb
pop
and
sbb
xchg
adc
out
pop
insl
pop
adc
scas
xor
testl
cld
mov
sub
sbb
dec
jmp
popf
ja
or
sub
or
inc
call
in
xchg
mov
cmp
or
movd
or
sub
rcr
adc
shrl
arpl
push
in
movsl
pop
mov
cmp
loope
lret
sub
mov
sahf
xchg
xchg
test
cmp
ret
iret
call
lea
push
mov
movsb
int3
stc
push
ja
bound
leave
inc
gs
test
sub
scas
repnz
mov
dec
push
ljmp
mov
mov
ret
xlat
mov
push
lock
push
or
or
dec
cmp
cmp
test
imulb
es
push
test
add
mov
repz
jecxz
mov
sub
shrb
test
pop
mov
adc
cli
cmc
sub
test
lea
cmp
push
cmp
lahf
jg
xor
sub
sub
sbb
pop
and
pushf
pop
jl
shl
inc
push
scas
and
mov
scas
jge
shrb
jnp
aad
xor
jae
icebp
pop
stos
push
push
xor
jae
mov
inc
ret
and
xlat
int
outsb
xor
lods
ja
fstpt
popa
pop
xlat
jae
stos
ss
pop
adc
lahf
xor
mov
out
popf
inc
mov
int3
leave
and
push
and
and
lock
xchg
in
cld
cmp
sbb
xor
repnz
sti
xchg
les
out
outsb
imul
in
std
rolb
adc
mov
std
xchg
mov
sub
add
mov
cmpl
mov
fimull
fsts
inc
push
dec
hlt
adc
adc
ja
jnp
xor
dec
movsb
mov
push
cltd
adc
add
adc
xchg
sahf
int
push
cld
ret
sub
push
push
cltd
insb
push
mov
iret
push
into
adc
shrl
incb
aas
jno
jno
mov
fnstsw
repnz
mov
sub
lcall
call
cs
mov
xor
cmp
scas
mov
out
out
jae
ja
jbe
mov
je
iret
js
fs
int3
push
jecxz
adc
sub
in
fwait
add
lcall
xor
movsb
dec
sub
repnz
pop
loop
cmp
inc
lret
outsb
fwait
clc
jne
inc
sbb
imul
es
movd
push
dec
in
inc
aad
or
ja
and
popf
je
mov
jae
mov
imul
test
sub
jg
shrb
push
cmp
clc
in
test
push
cs
dec
inc
movsb
les
les
add
loop
lahf
pop
xchg
mov
cmp
mov
out
or
cmp
adc
mov
jne
jmp
ret
push
push
pop
aaa
xchg
fisubs
jbe
pop
add
dec
icebp
or
pop
mov
push
jno
and
paddw
mov
xchg
push
dec
or
in
cmp
aas
mov
in
mov
mov
mov
icebp
aam
out
add
mov
arpl
push
add
xor
xchg
loop
and
pop
xchg
dec
std
fdivrs
test
ds
sub
cs
hlt
daa
or
inc
cmp
xchg
adc
xchg
mov
bound
sub
incb
inc
ret
clc
mov
xor
lret
sahf
mov
push
je
sbb
outsb
outsl
mov
jge
cmpsl
sarl
xchg
inc
divl
sbb
push
adc
lret
mov
mov
leave
rclb
mov
inc
xchg
xchg
sarb
push
xchg
out
or
mov
das
add
sbb
xchg
hlt
pop
dec
mov
cmp
jmp
scas
dec
scas
adcb
aam
fcoms
orb
repz
add
jecxz
arpl
add
out
out
rcrl
and
adc
popa
scas
dec
ja
jbe
or
insl
jg
mov
sahf
pop
ja
test
jb
movsl
in
sbb
adc
inc
lret
pop
sub
mov
sbb
mov
mov
cld
xchg
cmc
je
cltd
test
out
xchg
lods
or
movsl
pop
adc
fdiv
nop
in
push
aam
fadds
test
out
test
in
xor
xchg
addr16
push
add
cmpsl
add
fbstp
xorb
clc
xchg
dec
mov
loopne
outsb
in
xor
add
das
insl
aad
cs
cmp
mov
ret
iret
lods
pop
aaa
dec
xor
sbb
gs
imul
pop
icebp
test
cmp
fimull
push
mov
dec
cld
adc
pop
test
adc
or
sbb
mov
xlat
scas
sbb
or
out
jle
sti
sub
aam
push
pop
dec
testl
jp
cmp
jno
imul
inc
mov
xchg
lret
lock
je
cmp
xchg
sbb
test
loop
and
mov
and
into
jmp
divl
test
dec
hlt
cmp
scas
jo
repnz
lret
cmpsb
mov
imul
dec
sbb
shll
ss
cmovle
inc
push
adc
jnp
lcall
xor
xchg
pop
sahf
dec
out
inc
xchg
imul
xchg
sbb
sbb
outsb
das
xchg
adc
jmp
mov
pop
shlb
add
xor
inc
cld
fstpt
bound
pushf
xchg
das
or
test
ljmp
scas
cli
test
cltd
push
pop
out
dec
icebp
test
shr
test
das
daa
sbb
push
dec
fbstp
aaa
test
into
pop
or
push
inc
cmp
ljmp
ds
jno
in
add
aas
mov
mov
sbb
inc
adc
xor
xchg
or
and
cld
adc
mov
xchg
scas
lcall
add
push
rorl
loopne
pop
push
cmp
xlat
mov
add
cwtl
push
mov
mov
push
fldlg2
std
xchg
mov
int
imul
shlb
add
mov
xor
and
xchg
xor
mov
xchg
inc
int3
and
lret
jl
mov
jns
mov
std
outsb
xor
xchg
push
sahf
mov
stos
adc
cli
test
ss
sarb
pop
mov
or
divb
int
sbb
jmp
dec
dec
cmpsb
repnz
es
or
and
jmp
cli
arpl
xchg
and
mov
movb
sahf
cs
and
jp
and
mov
mov
dec
andb
or
out
dec
testl
repz
pop
push
pusha
ds
ss
lret
fwait
pop
push
ficoml
bound
mov
push
idivb
out
imul
jo
sarb
mov
jo
jno
push
push
fdivrs
add
pusha
enter
popf
notl
daa
inc
aam
push
pop
adc
pop
adc
pop
dec
add
loopne
jmp
cwtl
mov
dec
add
nop
pop
jne
je
lcall
leave
cli
and
add
mov
xchg
insb
add
test
mov
xchg
mov
cmpsb
sbb
out
mov
push
mov
out
xchg
pslld
imul
sub
mov
into
ss
xchg
and
inc
xor
imul
cli
push
fcom
sbb
dec
xor
and
fbld
pop
cmp
outsl
fidivl
flds
adc
mov
cmp
sub
pusha
lods
add
je
into
push
pop
test
mov
scas
cmp
loope
fidivrs
jp
push
inc
adc
jb
pop
movsl
dec
scas
fiadds
rorl
sbb
roll
add
test
jno
es
add
in
stc
aam
pop
mul
cmc
sbb
mov
fstl
dec
mov
jns
jecxz
out
test
mov
lahf
jle
xchg
shr
mov
inc
clc
jp
jno
cmpsb
dec
add
enter
mov
loop
adc
mov
test
in
movsb
es
enter
inc
movsl
ljmp
and
add
pop
lods
cmp
lds
mov
pop
movsl
addl
sub
das
fiaddl
enter
push
fidivrl
insb
push
inc
push
mov
inc
popa
shll
adc
mov
subb
mov
in
rcll
push
mov
sbb
cmp
jp
fbstp
jnp
cmp
rcl
je
int
ss
bound
jp
dec
and
and
xor
repnz
pop
add
stos
dec
popf
push
rol
cmp
loop,pt
dec
aaa
or
jne
sub
xchg
xor
inc
cmp
je
cmp
rorb
mov
mov
or
shrl
jae
mov
sahf
adc
ret
and
test
pop
push
mov
out
xlat
leave
hlt
cmp
push
mov
insl
fadds
mov
repz
cmp
mov
hlt
addr16
aaa
dec
popa
fs
inc
mov
pop
cmpsl
mov
dec
in
xor
cmp
mov
out
les
jae
jg
loop
push
cli
inc
mov
inc
scas
jle
mov
mov
icebp
mov
or
fmull
in
jne
sbb
sub
mov
mov
das
loop
inc
dec
aad
xchg
mov
pop
repnz
ret
fidivrl
inc
cmp
add
mov
pop
mov
gs
cmp
mov
jne
imul
test
loopne
push
popf
ret
test
inc
mov
inc
dec
inc
add
or
stc
jns
or
pusha
pop
mov
ljmp
sbb
xor
aaa
jns
sbb
fstpl
rorl
adc
mov
loope
sti
and
jge
inc
pop
gs
hlt
sub
xor
mov
insl
and
sub
mov
insb
imull
imul
xchg
lahf
add
inc
cltd
cmp
int3
jge
push
inc
pop
loop
imul
das
lret
cmpsl
enter
adc
and
andl
or
dec
push
ds
pop
stc
addr16
jns
sub
add
rorl
cmc
mov
mov
xchg
test
inc
pop
call
push
insl
out
cmpsl
ret
rorb
imul
push
xor
je
in
sub
pop
push
repz
mov
repz
jle
and
adc
out
in
mov
pop
jmp
int
cmc
stos
mov
lock
jl
or
scas
pusha
jge
cwtl
stos
popf
sub
leave
mov
test
das
or
add
call
addl
inc
mov
out
fsubrs
inc
mov
fildl
inc
fiaddl
or
add
repz
out
cs
inc
adc
leave
lret
jb
mov
add
jne
dec
data16
out
add
repz
pop
out
push
sarl
ja
mov
mov
stos
add
mov
mov
stos
inc
inc
mov
in
aad
aam
cltd
pusha
add
xor
jae
jb
cmp
jecxz
dec
sub
cld
ja
mov
not
aam
cmc
or
nop
inc
pop
addr16
test
call
cmp
das
stos
movsb
repnz
shlb
mov
push
mov
enter
push
mov
flds
shrl
or
aas
mov
push
xlat
js
mov
les
jl
or
sahf
arpl
das
ljmp
push
fwait
cmpsl
cmp
clc
mov
adc
sbb
dec
js
jmp
jnp
mov
push
pop
ret
push
int
and
stc
rorl
in
and
jge
push
mov
iret
jmp
cmp
jne
add
ja
fidivrl
pop
cmp
mov
sub
insb
jl
sbb
or
adc
cli
rcll
outsb
test
mov
xchg
push
shlb
ljmp
adc
in
fbstp
or
mov
push
adc
faddl
pop
rcr
ret
dec
pop
jb
cmpl
lea
xor
inc
xchg
xor
imul
cmp
add
loopne
inc
push
shll
xor
dec
aad
call
shll
fimull
inc
rcrb
js
data16
clc
push
aad
loope
clc
int3
jne
mov
cmp
jno
dec
pop
xlat
sbb
loope
jl
mov
add
leave
jo
repnz
jecxz
xchg
jl
mov
out
sti
cwtl
jo
fs
fldl
push
cmp
inc
mov
test
and
lret
push
mov
adc
out
lret
and
push
stos
sti
fwait
xchg
lahf
addr16
and
fcoml
xchg
inc
imul
mov
xlat
les
and
jb
mov
jo
in
bound
ds
sub
rclb
push
dec
shlb
aam
mov
pop
and
mov
notb
icebp
addr16
dec
pop
std
nop
aas
popf
mov
or
mov
rorb
movsl
pop
in
jnp
ret
addr16
add
test
fidivs
inc
lods
inc
pop
out
or
sub
sub
data16
mov
aaa
and
push
cmp
pop
fwait
adc
push
js
pop
push
dec
xchg
cltd
aaa
ret
push
lahf
xchg
lods
int
fidivrs
in
pop
xchg
inc
je
cmp
adc
out
push
jecxz
dec
xor
mov
dec
fldl
cmpsl
sbb
test
fiaddl
sarb
mov
aam
and
sbb
movsl
dec
cltd
push
dec
loop
mov
imul
in
fidivs
insl
mov
or
push
daa
xchg
ja
push
push
repnz
adc
cmp
loop
call
repnz
cmpsl
mov
mov
mov
push
rcl
movsb
sub
test
pop
push
push
lret
sub
add
arpl
sbb
xchg
xor
cli
shl
pop
gs
push
shrb
sahf
cmp
pop
mov
mov
xor
gs
pop
xor
mov
mov
out
mov
jmp
lds
stos
inc
add
loop
cwtl
cmp
not
in
sbb
adc
arpl
leave
or
lds
in
mov
cmpb
xchg
xchg
dec
adc
imulb
or
sbb
adc
cmp
icebp
inc
stos
cld
mov
imul
jle
cs
pop
sub
mov
leave
mov
pop
lret
and
rol
pop
adc
push
insb
scas
call
into
popf
inc
call
mov
mov
pop
fistl
jl
push
bound
jge
fisttpl
jb
pusha
cmp
pop
sahf
xchg
inc
sti
push
adcl
pop
mov
sbb
mov
popa
sub
iret
or
loopne
ds
sbb
lock
cmp
or
icebp
scas
in
addl
sbb
push
mov
mov
sub
stos
adc
inc
mov
sti
shlb
cmp
and
fst
scas
xchg
in
test
out
mov
mov
jmp
xchg
adc
lods
fwait
and
and
shl
mov
mov
mov
loope
loope
out
sahf
sub
movsl
addr16
push
jb
fsubrl
cli
adc
scas
cltd
push
inc
cltd
and
in
xor
push
sub
inc
inc
test
std
inc
fucomp
mov
test
imul
lea
fdivs
or
lods
out
push
movsl
xor
rol
loopew,pn
lret
leave
pop
push
scas
xchg
cmp
mov
test
fisubrl
cmp
nop
loop
cmc
adc
push
pop
shlb
push
movd
mov
xchg
lea
fsts
mov
mov
cwtl
push
fucom
mov
insl
cmp
mov
push
jne
xchg
pop
xor
mov
xor
lds
or
lcall
xchg
enter
cmp
ret
or
pop
dec
dec
cmp
imul
shll
fstps
rcr
and
shrl
jb
jae
stos
fadd
and
lods
jmp
cmp
jmp
ds
fsts
aaa
pop
mov
or
add
dec
data16
push
loope
std
dec
and
sbb
mov
mov
inc
adc
pusha
shr
inc
pop
data16
add
adc
mov
addb
cmp
push
push
mov
xlat
cmpsl
sbb
jl
sbb
sub
test
inc
shrb
aaa
stc
sub
mov
addr16
mov
cmpsl
lds
pop
pop
sbb
fdivs
pusha
cli
cmp
stos
inc
push
jl
pop
inc
inc
adc
jns
cmp
daa
xor
pusha
daa
xlat
and
mov
popa
add
lds
sub
add
add
jb
lock
jmp
mov
xchg
sub
and
jno
xor
pushf
int
add
push
or
xchg
xlat
sti
add
les
push
movsl
loope
cmpsl
out
pusha
mov
iret
and
cwtl
loop
xchg
cmp
mov
sbb
inc
addl
sti
das
int3
and
and
dec
mov
jb
sarb
lods
rcrb
xchg
inc
adc
jbe
lds
push
lods
mov
pop
fs
iret
push
push
mov
mov
mov
aad
int
repz
inc
xchg
push
mov
insb
incb
cmp
aad
sbb
mov
push
sbb
fsts
in
sub
mov
shlb
cmpsb
in
xchg
cmp
test
sbb
jecxz
nop
dec
add
andb
mov
sub
loopne
dec
cmp
pop
add
mov
push
inc
jnp
jae
aaa
movsl
inc
xlat
es
stos
outsb
inc
pop
jno
mov
popa
addr16
cmp
mov
inc
aaa
push
inc
or
negl
js
shr
leave
cmpsl
pushf
pop
push
out
int
jbe
push
sub
mov
ret
fstpl
mov
mov
sbb
fidivl
insl
les
adc
int
jo
xchg
mov
sti
mov
aas
scas
xor
sub
pushf
lods
sbb
fidivrs
gs
inc
aam
lcall
loope
movsl
lods
jg
push
lret
jo
adc
push
xchg
mov
sub
rorb
sub
test
add
sbb
xchg
out
popa
fsubl
scas
jnp
dec
pop
sti
pop
test
enter
pop
ljmp
pop
push
stos
jnp
jbe
jmp
shlb
inc
arpl
or
jmp
aaa
push
mov
das
int3
stos
fdiv
test
js
mov
nop
mov
pop
jbe
jb
mulb
dec
jle
popf
adc
push
std
cmp
add
lods
in
add
test
lock
push
cmp
lret
cld
lock
cmc
and
fcompl
aaa
je
fwait
or
push
sahf
clc
frstor
lcall
hlt
adc
and
and
xchg
pusha
inc
xchg
mov
lcall
shrb
pop
lock
cmp
popa
inc
into
ja
jge
jno
push
mov
arpl
pshufw
push
mov
lds
add
or
cltd
std
stos
mov
cwtl
sarl
xchg
jl,pn
xor
ret
repz
mov
shl
mov
mov
mov
lret
add
jg
std
jecxz
inc
and
sti
inc
mov
fnstenv
or
dec
loop
mov
repnz
divl
add
and
insl
jmp
and
mov
nop
jecxz
push
into
shrl
jno
sub
adc
test
mov
mov
rorb
fwait
push
sub
push
jbe
cmc
iret
jb
sarb
int3
mov
lds
arpl
mov
outsl
int
push
outsb
in
xorb
lret
lock
mov
xchg
fisttps
dec
jp
idivl
pushf
pop
sub
jecxz
ret
lock
jle
daa
cmpsb
js
pop
cld
hlt
mov
xchg
fsub
jg
cmp
cmp
loop
movsb
pop
pop
xchg
ret
mov
xor
inc
cli
in
sub
cwtl
xchg
in
push
lea
pop
imul
fistpl
lea
inc
mov
or
push
stos
dec
jo
cmp
cmpsl
inc
stc
push
lret
push
mov
cmpsb
adc
and
es
ret
lret
inc
addr16
imul
jecxz
ret
rorb
out
cmovnp
adc
push
pop
out
xchg
add
inc
in
xchg
sub
xchg
cmp
or
pusha
push
xor
mov
sti
or
addr16
enter
stos
xchg
xchg
dec
rol
mov
or
dec
pop
dec
adc
cs
jle
es
mov
push
imul
call
push
mov
inc
cs
int3
std
je
test
lahf
xrelease
or
imull
outsl
inc
pushf
adc
pop
aas
push
call
adc
and
sbb
or
mov
fimuls
cmp
cmpsl
push
xchg
movsl
out
add
hlt
fwait
cmpsl
pop
lds
dec
and
int
sarl
cmp
dec
cmpsb
dec
sbb
push
pop
in
jbe
pop
icebp
push
xor
mov
mov
rolb
arpl
fs
dec
dec
dec
inc
adc
inc
ds
mov
xchg
push
jae
and
dec
mov
add
xchg
test
and
insl
add
mov
addr16
mov
push
pop
out
xchg
jge
adc
push
movsl
ds
out
test
lret
fdivr
cmp
loope
pop
addl
popa
cmp
mov
jecxz,pt
fdivl
add
jle
xor
lahf
sub
pop
pop
xchg
je
enter
gs
xchg
inc
mov
fcmove
cmpsb
adc
or
lcall
stc
adc
pop
inc
fs
test
xchg
xchg
push
push
inc
xlat
xchg
push
or
lret
jge
xchg
jmp
in
scas
ret
repz
push
push
push
sbbb
mov
sbb
or
fwait
xchg
mov
std
jb
cmp
pushf
lea
inc
ret
push
lock
pop
mov
loopne
imul
in
jbe
adc
das
adc
xchg
fmul
sub
test
inc
aas
jl
out
inc
push
int
sub
xor
mov
aas
jl
outsb
into
test
ret
sub
repz
mov
out
lods
and
cs
and
jne
imul
push
pop
inc
xlat
xchg
stos
add
jb
xchg
pop
adc
push
add
cmpsl
mov
mov
imul
cmp
inc
imul
sar
out
mov
mov
std
xchg
xor
int3
loop
push
inc
pop
imul
pop
out
fwait
hlt
push
dec
adc
mov
pop
or
aam
stc
sbb
lahf
sbb
mov
pop
enter
lds
sub
mov
popf
mov
fdivl
mov
out
jecxz
insb
leave
cmp
and
pop
jbe
dec
popf
add
cmpsl
lods
jo
pop
mov
xchg
mov
add
in
push
jmp
sbb
jno
cs
fsts
ret
and
adc
mov
or
hlt
mov
add
or
jne
out
enterw
aam
je
sti
shll
jge
in
lods
scas
push
negb
push
xchg
fcoml
sbb
cmp
jl
xchg
xchg
addl
push
push
mov
xchg
mov
lock
scas
fcmovb
mov
mov
push
push
pop
addr16
lods
xchg
add
pop
xor
cmpsb
push
mov
adc
stc
nop
scas
pop
adc
jmp
pop
xchg
test
icebp
push
mov
js
enter
mov
mov
mov
lret
in
ljmp
test
movsl
shll
lret
xor
ds
clc
and
or
inc
and
sub
or
add
xchg
jns
pop
popl
call
aas
dec
push
sbb
cmpxchg
imul
cmpsb
repnz
or
add
test
fdivl
in
xchg
sbb
popf
inc
shrl
outsb
pop
fnstenv
outsb
out
jmp
pop
mov
jbe
mov
lock
adc
pop
cmp
fs
inc
pusha
imull
sub
ud1
int3
mov
outsb
aam
outsl
push
std
xchg
jo
aad
scas
and
mov
lock
cmc
lea
or
mov
or
aad
in
aaa
dec
push
jg
ret
mov
dec
test
sub
mov
dec
sbb
sahf
imul
gs
xchg
out
xor
sub
sbb
mov
jg
dec
in
testb
cmc
pushf
jne
hlt
out
icebp
dec
outsl
push
jp
push
or
inc
mov
xor
adc
aaa
icebp
jno
imul
shrl
cmp
scas
push
jl
out
jge
popf
in
lea
ds
imul
xchg
xchg
mov
sub
das
xchg
ds
fs
decl
push
inc
xlat
jbe
add
mov
clc
mov
or
pop
ret
iret
flds
nop
sarb
jle
popf
stc
test
sahf
mov
lea
adcb
lods
shlb
loopne
js
xchg
mov
popl
push
repnz
or
cmp
xor
sub
in
mov
inc
aad
mov
js
mov
jecxz
loop
cmp
scas
mov
push
xor
adc
push
sahf
xorb
jne
adc
xchg
int
cmp
sahf
gs
insb
loop
sbb
rolb
les
enter
add
or
cmp
push
mov
or
mov
out
push
mov
cmc
push
jbe
call
leave
shrl
dec
xchg
popw
mov
cwtl
xor
mov
push
call
cs
aam
mov
jle
nop
imull
sbb
jns
ficomps
or
sub
inc
sub
or
popf
mov
movsb
adc
add
out
or
inc
icebp
xchg
insb
lds
inc
cmc
cmp
push
rcrb
inc
popf
jae
mov
aam
mov
pusha
shlb
aad
pop
shll
xor
insl
es
mov
mov
sub
bound
scas
test
xor
repz
sub
adc
xchg
in
dec
sahf
mov
jge
lret
xchg
jmp
sbb
jo
mov
gs
notl
inc
and
in
outsb
popf
pushl
cmc
mov
add
popf
add
ss
addr16
xchg
jge
cltd
jae
jns
jno
jnp
xchg
clc
xchg
ret
repnz
pop
loope
outsb
or
lds
mov
inc
mov
push
bound
mov
adc
mov
fsubl
xchg
fistpll
pop
pop
js
cmpsl
nop
daa
fstps
out
jg
testl
cltd
sub
adc
dec
outsb
loope
xorb
and
push
xor
lahf
mov
and
lods
std
popa
clc
cs
je
mov
xchg
out
mov
sbb
std
fsubrs
out
rcll
add
insb
sub
and
aad
lds
xor
mov
leave
adc
sti
mov
clc
popl
adc
shlb
and
imul
nop
mov
sbb
test
pop
imul
mull
pop
icebp
das
push
jnp
xchg
jecxz
mov
mov
push
mov
jne
push
sbb
xor
js
inc
push
push
aam
daa
data16
xchg
sti
xor
fistpl
sbb
jne
push
sub
mov
rcrl
and
adc
repz
into
mov
addl
sub
call
jno
cmp
and
out
test
test
cmp
insl
ficoml
mov
fwait
dec
lcall
insb
mov
sahf
fmuls
and
sub
je
test
mov
sbbl
or
push
mov
mov
nop
pop
cmpb
aad
outsb
or
dec
rcll
mov
les
insb
adc
adc
mov
fs
cmc
jno
xchg
sub
xchg
jl
dec
add
pop
test
mov
ret
lahf
cs
or
cltd
sahf
sub
aaa
adc
push
push
adc
clc
xor
push
sub
lea
cwtl
lock
aas
jno
divb
into
mov
mov
or
sub
add
add
mov
push
jb
inc
add
pop
cmp
adcl
or
pop
xor
sbb
mov
popf
stos
out
pop
out
pop
ja
movb
sbb
mov
pop
subl
inc
pop
andb
push
inc
cld
test
stc
jbe
inc
in
stos
sbb
and
filds
mov
fnstcw
adc
push
xor
and
or
aad
mov
push
jae
adc
dec
add
loop
mov
clc
xchg
shrl
stos
push
arpl
mov
or
sub
xor
insb
cld
shrb
andb
repnz
mov
pop
repnz
movsb
xor
push
in
aaa
mov
cmp
jb
in
mov
imul
sahf
clc
call
xlat
dec
daa
cmp
sbb
jno
lock
or
inc
pop
mov
mov
mov
cli
popf
ss
fadds
xchg
pop
mov
lahf
andl
aas
aam
jae
add
pop
repz
in
cmp
js
dec
push
lcall
cwtl
sbb
insb
rcr
dec
adc
mov
jns
mov
jnp
mov
mov
inc
xor
push
lds
aam
out
test
call
pop
test
insl
mov
pusha
mov
idivb
out
stos
dec
xchg
insb
popf
fcomps
das
jae
xor
dec
and
je
testb
jns
add
jmp
jl
les
fildl
xor
sbb
push
stos
mov
xchg
in
js
and
add
jg
or
inc
mov
jbe
xor
mov
int3
jp
out
mov
mov
addr16
pop
cmpsb
les
xchg
xchg
je
ja
sub
rorb
jo
inc
cmpsb
push
mov
imul
inc
popa
frstor
fsub
xor
pop
sub
inc
pop
not
insl
cmp
sub
jle
decl
test
shll
int
dec
fs
jno
call
dec
inc
out
xchg
rolb
jno
cmp
lock
adc
jno
and
lods
movsb
repnz
pop
test
call
mov
push
or
sbb
loop
sbb
ret
cmp
sbb
cwtl
int3
xchg
mov
jbe
sub
shr
scas
add
sub
clc
add
cmp
pop
popf
jecxz
in
dec
cwtl
mov
or
jne
mov
rorl
in
inc
push
xor
push
in
std
xor
dec
loopne,pt
loop
lock
loope
aas
add
inc
push
fadd
xor
test
outsl
dec
inc
ret
ficompl
cmp
shll
push
inc
mov
inc
fadds
andl
out
sbb
lds
sub
fisttpll
ret
jns
popf
pop
xchg
loope
int3
xor
mov
hlt
popf
andl
cltd
lds
popf
idivb
dec
sbb
aam
xchg
lock
sarb
aad
in
or
aad
jb
jne
push
mov
out
jp
sar
adc
mov
push
imul
das
addr16
pushf
push
je
jle
cs
bound
clc
cmpl
or
cwtl
sub
and
icebp
jmp
insl
sub
add
std
js
rcll
and
mov
mov
sub
mov
push
dec
nop
insb
add
lds
cwtl
sti
cwtl
pop
in
mov
sbbl
push
icebp
sbb
aaa
dec
dec
lods
movsl
pushf
stc
enter
pop
pop
lea
push
pop
pop
sub
and
pop
std
jb
xor
sub
pop
shl
aad
jns
cli
push
cmpsl
add
fldt
mov
test
jecxz
shll
shlb
xchg
and
push
mov
xchg
mov
jle
mov
push
push
push
pop
inc
xchg
mov
out
mov
fdiv
outsl
push
dec
sub
clc
cmp
push
xchg
mov
movsl
test
arpl
das
in
test
mov
pop
mov
push
and
arpl
pop
adc
sbb
repz
or
cmp
or
mov
pop
mov
or
out
add
adc
int3
scas
imul
lcall
in
xor
daa
insl
mov
add
mov
jae
test
xor
lret
into
js
inc
mov
loope
lds
xchg
sbb
mov
rolb
dec
ror
mov
fildl
add
out
fisubl
or
mov
into
adc
add
push
fldt
mov
mov
mov
pop
fldt
jbe
push
loopne
mov
push
or
cmpsb
dec
mov
pushl
jo
sbb
inc
dec
xchg
jp
int3
pop
adc
mov
pop
jge
ficompl
pop
dec
xorb
out
dec
dec
xchg
jbe
cs
add
mov
clc
insb
inc
adc
testl
jl
shrl
or
sti
dec
push
pop
loope
gs
test
out
sbb
and
xchg
jne
xchg
pop
ds
and
pushf
pop
mov
jb
lods
pop
xlat
decb
mov
test
push
xor
icebp
cmp
cmp
sbb
setnp
adc
scas
jmp
fiaddl
mov
shlb
hlt
mov
cmpsb
jp
and
pop
xchg
mov
fisubrs
fs
push
ret
addb
and
cmpsl
pop
mov
bound
cmp
imul
mov
test
scas
sub
loope
iret
inc
jp
jp
dec
mov
xor
sub
fdivl
jecxz
shr
addb
pop
jb
out
outsb
push
sub
mov
cmc
push
cmp
dec
sub
mov
xchg
sbb
jae
sar
lcall
in
dec
dec
out
repz
mov
or
xchg
cmpsl
inc
test
shr
push
loop
clc
xchg
jb
mov
addr16
xor
insb
sarl
inc
aas
das
nop
adc
dec
js
jge
shrl
jno
iret
sbb
insl
mov
sbb
mov
xchg
mov
stc
jmp
out
repnz
jle
pushf
pop
lahf
inc
sbb
mov
loope
adc
rol
pushf
les
es
subb
add
popa
and
and
stos
jge
inc
jge
jb
cld
stos
les
mov
test
mov
cmp
pop
out
pop
mov
cmp
mov
xchg
call
mov
push
mov
jp
add
cmp
bound
shr
jg
mov
xchg
jl
mov
push
jl
add
das
mov
mov
and
sbb
jno
lea
imul
xchg
sbb
imul
notb
adc
xor
stos
lea
dec
pop
pop
jae
loope
je
aad
push
mov
das
adc
stos
ror
repnz
hlt
inc
push
stos
add
int
sbb
movd
push
mov
sbb
pop
in
dec
lods
mov
cmp
adc
xchg
inc
pop
les
mov
in
pop
mov
xchg
jg
pop
lcall
xlat
loopne
adc
pop
out
jno
adc
xor
and
outsl
or
add
das
fwait
push
mov
hlt
jno
jmp
sub
test
scas
mov
push
or
lcall
push
mov
push
cwtl
repz
mov
rol
cmc
and
insb
adc
push
sub
leave
imul
enter
xchg
xchg
sahf
out
daa
jno
cmp
sti
call
fldcw
cmp
popa
inc
fs
fdivs
push
out
loope
add
shrl
adcl
pusha
cld
xchg
xor
test
push
and
cmp
popl
push
lds
das
cmp
pop
aaa
jnp
dec
ljmp
jmp
fldt
cmp
cmp
rolb
xchg
ljmp
sbb
xchg
mov
imul
and
lret
aaa
xor
xor
mov
je
mov
stos
test
sarb
xorb
sbb
xor
push
xchg
pusha
lds
pop
adc
inc
pop
mov
imul
xchg
add
cltd
jae
dec
add
clc
mov
jne
popf
jno
fsubs
repz
sub
adc
int3
pop
xor
mov
sbb
gs
cmpsl
adc
and
leave
loope
out
gs
in
mov
sub
repnz
and
cmpsl
sub
ljmp
popa
xor
lret
cmp
movsb
fwait
sbb
push
xchg
sbb
add
sbbl
and
leave
xchg
adc
sub
or
xor
inc
pop
pop
adc
xor
cmp
popf
jo
or
addl
lret
adc
jp
push
mov
jbe
fucomip
push
ficoml
lods
jmp
inc
hlt
popf
xor
mov
int
push
loop
push
bound
push
sbb
push
ss
cmp
sub
loope
dec
pop
imul
mov
mov
scas
jnp
xor
jno
cmpsl
shlb
mov
adc
sub
sbb
pop
hlt
push
daa
mov
ret
mov
cmp
aam
jle
cs
stos
add
fdivr
aam
and
xor
dec
and
fcomip
rorl
daa
mov
adc
std
jns
xor
test
push
fsubrl
shrb
adc
jle
dec
mov
pop
outsb
push
fcoms
lea
hlt
popa
and
mov
or
adc
or
rcr
call
fisubl
loopne
jae
pop
cmp
sub
inc
fsub
sbbb
in
mov
jecxz
test
dec
dec
pop
push
mov
lods
sub
ds
pop
cmp
cmp
dec
aad
jno
xor
movlps
stos
test
push
push
mov
dec
outsl
mov
pop
outsl
push
jns
mov
jl
mov
dec
nop
notb
mov
cmp
mov
push
sbb
sbb
stos
push
xchg
dec
mov
cld
mov
les
int3
mov
ret
cmp
call
push
pusha
movl
sbb
movsb
and
fsubs
mov
pop
jns
pop
sbb
pop
jns
aad
repnz
jg
mov
push
push
call
scas
and
jmp
lcall
pop
xor
mov
test
xor
dec
sbb
test
inc
das
fcomps
pop
sar
dec
mov
ficoms
xor
dec
stos
jle
inc
inc
sti
enter
adc
fwait
xchg
call
xchg
push
insl
cmp
lea
or
mov
and
shl
js
sub
ffreep
xchg
shll
inc
dec
mov
dec
mov
sub
je
push
xor
cmp
cmp
inc
ja
insb
test
mov
mov
clc
cmp
sbb
in
push
mov
push
ds
xchg
push
rcrb
mov
pop
jg
mov
cs
out
jne
out
sbb
out
sub
mov
shrb
push
xor
test
scas
nop
xchg
rcrb
pop
sub
dec
pusha
insb
xchg
int
cltd
sub
aad
xchg
dec
mov
stc
push
je
add
cmp
lock
mov
rclb
in
add
cwtl
mov
out
loopnew
cld
adc
mov
clc
fwait
mov
mulb
fbld
adc
je
push
cmp
mov
sbb
inc
inc
pop
in
pusha
es
mov
enter
gs
addb
xchg
mov
fsubl
bndstx
loopne
mov
into
lahf
cmp
jb
jb
bound
dec
out
iret
mov
lock
xor
xchg
push
sbb
dec
mov
mov
mov
es
mov
addb
aad
int
aam
pop
or
mov
jmp
cmp
or
sarl
movsb
pop
repz
sub
aad
push
sbb
push
aas
imul
cmp
adc
cmp
sub
and
stos
data16
mov
adc
shll
cwtl
lret
xor
movsl
cwtl
das
xlat
cmp
mov
sub
or
in
mov
push
jl
add
notb
jo
xchg
pop
xchg
xlat
and
das
pop
pop
add
imul
mov
test
out
iret
cmpsb
shrb
or
rol
fs
cmpsb
pop
pop
pop
mov
add
jo
pop
pop
mov
pushf
jnp
dec
inc
test
push
sub
fdivl
pop
aam
test
daa
cmp
jp
or
mov
pop
jge
mov
mov
nop
and
fistl
or
mov
or
jg
lahf
js
inc
inc
rcrb
xor
xchg
lods
clc
clc
mov
test
rclb
mov
mov
iret
cmp
mov
ret
push
lods
cmp
mov
sub
xor
popl
int3
notb
and
or
jnp
addr16
jg
mov
nop
pop
push
or
and
mov
jbe
cmpsl
sub
fimuls
dec
mov
cmp
jmp
loopne
inc
xchg
xorl
sub
sbb
repz
fwait
pusha
arpl
sbb
add
mov
fsubp
std
add
aam
sbbb
movsb
fwait
cmpsl
mov
cmc
xchg
and
sub
pop
jge
push
mov
pop
xor
test
enter
push
out
mov
hlt
push
fstps
push
xor
pusha
inc
push
lcall
cwtl
mov
xor
gs
dec
les
cltd
mov
push
mov
push
adc
lds
scas
aaa
pop
ds
push
dec
icebp
mov
ss
mov
push
lods
inc
sub
xor
stos
lods
lds
mov
icebp
pop
icebp
sti
test
cmp
pop
dec
inc
rorl
pop
fdivrs
and
jbe
out
es
xlat
jmp
sub
insl
add
add
neg
js
mov
xor
sbb
and
loope
dec
jno
xchg
out
and
sbb
push
mov
fbld
pop
jbe
outsb
aas
daa
in
aam
lret
hlt
add
es
pop
mov
gs
add
add
mov
push
lods
ljmp
lock
rclb
jg
mov
roll
out
add
sub
test
cld
xchg
fs
add
outsb
push
push
fs
xchg
sub
xchg
xorb
pop
icebp
jmpw
into
sti
cmpsl
imul
ds
xchg
mov
stos
pop
scas
addb
rcrb
or
xor
cmp
shll
sbb
sbbl
xchg
xor
add
leave
test
xor
ljmp
add
fcoml
mov
sbb
sbb
ret
pop
jno
mov
pop
cmp
cmpsb
sti
inc
stos
cwtl
jno
imul
cmp
mov
mov
shll
add
sbb
aas
addr16
mov
addr16
int
xor
cwtl
mov
jmp
add
lock
sahf
dec
pop
les
mov
sbb
mov
pxor
mov
mov
lods
inc
stos
lcall
xor
lea
jmp
inc
scas
xor
into
mov
and
cmp
jle
and
mov
repnz
or
stos
ret
dec
sbb
inc
mov
ror
incl
arpl
aaa
and
pop
mov
fldenv
sbb
movb
pop
jno
sub
loop
jb
js
iret
jo
repnz
sbb
pop
call
fadds
lcall
mov
fs
insb
adc
mov
sahf
xor
sbb
jnp
stos
inc
mov
aad
call
icebp
mov
pop
repz
pusha
mov
cmp
arpl
sub
outsb
lcall
popa
dec
mov
shrb
sbb
js
push
orb
mov
adc
push
sub
dec
sbb
dec
lret
push
xchg
jmp
ss
scas
sahf
stos
ficomps
scas
mov
movsb
test
cld
push
push
jg
push
icebp
mov
pop
cld
xchg
loop
lds
xorb
shl
mov
hlt
xchg
jmp
inc
mov
mov
cmp
sbb
in
jge
lds
idivl
fwait
sbb
jnp
imulb
jge
shlb
aad
xor
cmp
xchg
mov
lret
and
ret
orb
loopne
push
adc
mov
jo
pop
mov
dec
ds
pop
insb
aas
dec
cltd
in
lcall
mov
sahf
pusha
xchg
js
xchg
stos
outsl
fisubl
sbb
fs
xorl
dec
mov
int
cmp
aaa
inc
call
pop
int
push
testl
daa
jbe
gs
popf
mov
gs
ja
mov
scas
sbb
and
outsl
lahf
dec
data16
fs
sub
pop
and
push
xor
pop
push
ret
pusha
popf
adc
fucom
out
sub
popf
sub
fsts
push
es
mov
aaa
gs
pop
insb
mov
je
iret
mov
andl
inc
aam
lcall
fcmovu
sub
push
xchg
mov
das
dec
out
add
cmp
jg
sbb
push
aad
xchg
mov
mov
adc
adc
dec
jns
jnp
fldenv
pushf
xchg
or
xor
inc
add
xor
jo
push
out
ret
cmp
mov
dec
sbb
lahf
enter
pop
je
xor
bound
and
jns
jae
sbb
ds
add
dec
sub
sbb
xchg
jnp
cli
movsl
rclb
rcrl
sbb
mul
mov
dec
sub
dec
push
xchg
cmpsl
ficompl
lods
cmp
inc
pop
pop
and
mov
and
insl
aam
dec
dec
dec
icebp
sub
fisttps
cmp
mov
push
pop
push
xchg
mov
mov
aam
jle
andb
sbb
shr
xchg
adc
sbb
jbe
or
fstps
mov
lods
jl
sti
lds
mov
fiaddl
pop
mov
daa
inc
adc
fmuls
pushf
cli
adc
fmul
inc
sbb
mov
sub
bnd
imul
push
sbb
popf
lods
and
mov
push
jmp
int
mov
iret
movsb
pop
jp
les
jge
pop
bound
xor
push
arpl
xor
mov
pushf
gs
test
jmp
aaa
jne
cli
movsb
outsl
inc
push
pop
shll
gs
aad
push
adc
and
call
inc
out
out
ret
dec
rorb
dec
dec
and
pop
ds
dec
pop
sbbb
dec
adc
mov
mov
mov
mov
ss
bound
add
and
icebp
or
rcll
leave
add
cmp
pop
call
mov
mov
scas
lods
inc
or
xchg
add
ds
cmpsb
dec
loop
lcall
in
stos
enter
mov
jge
pop
out
xchg
xor
jecxz
adc
aam
and
xchg
arpl
sbb
std
iret
cmc
fbstp
adcb
jb
fnstsw
nop
pop
mov
push
pop
dec
xor
ds
xchg
cli
xor
mov
push
lods
std
or
jmp
jne
arpl
inc
arpl
stos
in
xor
lcall
xchg
inc
jns
addr16
push
push
sub
mov
mov
or
mov
rorl
sub
and
jl
dec
mov
jne,pn
pop
cmp
push
scas
ficomps
sbb
jbe
adc
xor
jl
and
roll
jmp
clc
movsl
je
call
rcll
in
pop
push
push
jecxz
xor
mov
notl
jecxz
mov
mov
rcl
sti
sub
scas
fsubl
xor
mov
add
jne
mov
mov
mov
or
in
sub
jl
adc
and
push
sbb
xor
aad
orl
inc
inc
orl
ficoms
or
das
shr
cld
pop
addr16
mov
daa
fs
push
mov
xor
pop
or
add
mov
or
xchg
jle
mov
mov
adc
repnz
test
data16
js
mov
shlb
cmp
sub
xchg
xor
push
je
mulb
pop
or
scas
and
leave
mov
push
mov
add
loop
push
mov
repnz
lds
or
loop
aad
scas
out
jno
mov
out
sub
cmp
jnp
faddl
pop
adc
iret
xchg
int
mov
fdivrl
adc
into
leave
stos
jmp
jge
scas
dec
pop
es
hlt
adc
mov
sti
cmpl
loope
stc
sub
stos
inc
jno
pop
insl
pop
xchg
scas
out
xorl
stc
fstpt
movsw
std
test
xor
add
or
dec
cld
arpl
sub
and
cs
sbb
orb
popf
jne
or
dec
stos
ljmp
fistl
push
orl
xchg
lock
mov
fisttpll
xlat
shlb
sbb
ret
lcall
sub
jg
inc
gs
lods
inc
lcall
in
test
ds
pop
in
or
fistpll
lock
xchg
outsl
jne
push
cmp
lods
insb
or
xor
test
in
sbb
adc
mov
clc
loop
pop
sub
dec
mov
enter
decb
push
nop
fs
and
cmp
decb
movsb
mov
je
xor
insl
aam
ret
inc
daa
or
or
push
dec
push
testl
cmp
dec
pop
inc
jnp
js
mov
sbb
lock
ljmp
mov
sbb
and
or
mov
fildll
std
orb
mov
leave
jle
mov
jo
lret
mov
or
adc
es
cld
dec
lods
and
push
out
pushf
adc
insb
aam
out
mov
mov
adc
and
adc
inc
xchg
mov
call
scas
inc
jo
jmp
and
xorl
adc
jmp
dec
scas
nop
pusha
mov
mov
rorb
aaa
fsubrl
imul
dec
add
xlat
pop
jp
mov
mov
ds
jae
xor
fistl
inc
seto
test
cli
add
mov
cmp
pop
shrl
ja
mov
loope
inc
fucomi
andl
dec
or
sub
popf
gs
repnz
fistpll
cmp
test
push
sub
std
leave
push
dec
inc
popa
sbb
xchg
aas
ss
mov
int
mov
jnp
sbb
adcb
push
icebp
adc
inc
adc
jle
jmp
insl
out
cmp
jb
dec
xchg
sub
pop
fsubr
cmp
in
js
jb
sub
xchg
scas
xor
jnp
call
add
insb
jo
sbb
or
jmp
or
jg
xor
sbb
fldl
popf
push
or
data16
xor
jl
inc
lds
nop
addb
push
loop
mov
int
push
or
aas
push
or
sub
pop
clc
xchg
cmp
mov
mov
jmp
xchg
test
sbbl
mov
call
push
test
in
dec
or
push
cmp
ljmp
or
test
pop
mov
mov
stc
ds
fldt
data16
pop
mov
test
fcoms
xor
add
call
fcomi
mov
insb
cmp
sub
in
push
loop
cmp
mov
mov
pop
cmp
push
mov
cmp
xchg
pushf
gs
inc
push
ljmp
jno
lds
push
and
test
jmp
xor
fs
jge
in
fs
xchg
push
dec
out
xor
add
andl
mov
and
outsl
out
jo
jbe
negl
push
loop
push
mov
jl
add
orb
mov
mov
aad
jg
push
lods
ljmp
pushf
inc
in
xlat
lea
test
adc
and
popa
inc
subb
cwtl
push
mov
jae
daa
pop
insl
push
push
mov
adc
or
rolb
dec
sbb
aas
xor
add
mov
mov
jno
in
fcmovnbe
ja
mov
insl
jle
punpckldq
cmpsl
push
adc
test
mov
jnp
cld
ja
fstpt
xlat
pop
jno
xor
out
addr16
inc
push
adc
and
gs
xchg
jg
inc
in
adc
dec
adc
dec
inc
cmpsl
rcll
push
jnp
aam
mov
js
scas
sar
shl
gs
cltd
xor
arpl
lock
cli
inc
inc
xor
bound
xlat
mov
pop
call
in
fs
dec
dec
pop
jle
mov
sub
bound
pop
lret
xchg
xor
mov
mov
cmp
icebp
adc
repz
mov
and
jmp
nop
xor
std
xchg
or
scas
xor
fwait
std
dec
xor
scas
and
push
or
sub
stc
add
addr16
outsl
cmp
cmpsl
notb
jge
out
push
call
cmp
and
xchg
insl
push
mov
std
fimull
idivb
push
cs
dec
sbb
cmp
sahf
aad
loop
hlt
adc
dec
sarl
mov
mov
in
mov
loopne
xor
xchg
icebp
pop
cmpsb
jp
push
push
inc
xor
mov
inc
xor
sbb
or
rorl
jnp
ja
or
cmp
ret
push
lods
outsl
push
clc
cmc
pop
mov
fisubrs
or
not
dec
stc
rorl
es
data16
test
lods
inc
and
push
in
shl
roll
add
sti
cmpsb
inc
dec
lods
dec
xchg
jge
cmc
cmp
xlat
jb
adc
pop
pop
je
mov
inc
adc
jmp
xor
aas
sbb
add
adcl
cld
in
vshufps
pop
jp
jbe
jb
inc
in
iret
adc
jl
jge
adc
mov
jo
pop
out
mov
xchg
sub
out
sbb
jo
pop
jl
push
scas
sbb
add
cmp
mov
mov
cmp
adc
fxam
xchg
outsl
mov
push
and
or
imul
test
jmp
clc
fsubs
scas
stc
out
fwait
out
aaa
dec
mov
xchg
gs
cld
jg
stc
lock
cli
mov
jle
mov
fdivp
dec
test
mov
ficomps
je
outsb
fsts
aad
push
pop
cmp
bound
icebp
sbb
or
pop
push
test
xor
push
inc
cmp
push
or
push
pop
and
loop
mov
sbb
stc
xchg
adc
jmp
inc
xor
push
xchg
cmp
fists
dec
sbb
ret
pop
sbb
and
les
adc
push
fcmovnu
mov
xlat
subb
jl
xchg
sub
insb
jle
cmp
cmp
add
lods
out
mov
lret
ja
bound
mov
and
sub
push
mov
cmp
popf
popa
mov
jmp
xor
fsubl
sbb
dec
int3
xor
in
cmp
jnp
dec
sahf
scas
jb
es
test
std
lcall
cmp
lock
xor
int3
mov
sub
dec
imul
cli
nop
mov
inc
or
adc
sbb
and
insb
lcall
add
cmp
xchg
in
sub
mov
arpl
push
std
cmp
ss
inc
bound
int3
and
outsb
sbb
test
jne
jno
mov
adc
cmp
xor
mov
scas
push
sarb
and
mov
mov
add
inc
mov
rclb
mov
cwtl
fdiv
xchg
jno
adc
imul
loope
imul
mov
in
popf
cmpsb
and
cmp
loopne
das
jno
in
add
push
xor
cmc
mov
cltd
inc
pop
out
push
lret
je
sub
sbb
inc
cli
push
fcomps
test
test
arpl
xchg
xchg
lcall
and
mov
mov
rorb
aas
pop
adc
mov
jne
push
mov
or
and
pop
in
push
sbb
cmp
mov
jmp
mov
cmp
decb
cmp
popf
fwait
daa
iret
sbb
xor
jnp
or
and
out
jb
xchg
das
add
sub
xchg
lret
xor
mov
call
lods
or
jl
jns
mov
push
cmp
lods
xchg
outsb
out
aaa
ds
nop
cmc
xchg
ret
je
jae
add
lcall
lods
and
push
ss
seto
mov
cmpsb
jg
outsl
adc
push
repnz
adc
xlat
sbb
push
mov
push
js
cmp
mov
fiadds
pop
imul
or
imul
les
gs
and
dec
cmpsb
scas
int3
add
in
adc
push
mov
out
adc
aaa
inc
mov
inc
sub
out
sbb
call
jl
jno
or
sub
out
push
adc
add
mov
adc
enter
out
repz
into
scas
fs
pop
push
movsl
xor
jns
mov
out
inc
fiadds
shrl
pop
push
and
adc
aad
pop
sahf
lods
mov
lock
sub
inc
dec
loope
repz
dec
leave
inc
cld
xchg
test
cs
push
pop
jbe
mov
or
pop
lock
ljmp
ss
in
addl
dec
pop
outsl
add
dec
addr16
out
dec
lret
or
mov
stos
pop
jno
push
lret
cmp
push
pop
sahf
cmpl
or
cmp
in
lahf
lret
fistpll
fildll
push
add
jb
stc
sbb
sub
jmp
adc
call
in
adc
lret
negb
scas
adc
mov
es
pop
pop
mov
lods
adc
das
mov
mov
test
and
ljmp
adc
add
mov
xchg
inc
dec
dec
out
out
or
cmp
mov
lds
xchg
fnstenv
adc
clc
lret
cli
inc
inc
xchg
and
scas
jns,pn
test
div
mov
sub
lea
cmp
sub
sbb
ljmp
movsb
pop
testl
int
mov
cltd
jbe
xor
popa
mov
add
jle
addr16
mov
cmp
mov
cmp
pop
hlt
mov
dec
dec
mov
mov
sbb
ljmp
sub
mov
push
fdecstp
decb
inc
xor
ret
cmp
loope
push
shll
xchg
scas
stos
xlat
or
jne
ljmp
xor
cmc
loop
lds
lret
xchg
dec
data16
sub
jmp
mov
std
dec
inc
in
sub
test
sbb
les
pop
mov
popf
ss
aaa
ret
xlat
push
lea
mov
leave
or
xchg
mov
fsubs
mov
or
or
movsb
inc
adc
js
negb
out
push
dec
sar
xor
lahf
mov
pop
sahf
adc
cli
push
pop
jmp
mov
push
mov
sub
xor
fstpl
in
cmpsb
cmp
mov
les
sub
push
mov
insb
loope
incl
push
inc
mov
das
arpl
aas
xchg
imul
gs
andl
mov
or
orb
or
cli
jmp
out
popa
xchg
sub
xor
mov
xor
popa
clc
mov
jg
pop
ljmp
mov
dec
shl
nop
test
je
es
xchg
jl
std
push
adc
daa
cli
ret
jb
pop
pusha
mov
inc
cld
pusha
mov
in
jnp
mov
shrl
cmpsb
sub
inc
pop
cmc
push
inc
ljmp
mov
movsl
data16
xor
jb
outsl
movb
jne
andnps
pop
outsb
fs
repnz
scas
les
lret
jnp
fwait
dec
mov
add
movsl
jp
and
inc
inc
icebp
inc
fs
scas
jp
push
mov
mov
mov
imul
jle
mov
dec
cmp
pusha
loope
xchg
movsl
stc
clc
fs
cmpsb
ret
sbbl
pop
into
cmpsb
jo
cmp
pop
loopne
mov
or
push
fbstp
inc
mov
and
xor
xchg
clc
enter
dec
lahf
jle
shlb
imul
xor
xchg
push
and
or
test
push
xor
push
jo
push
int
mov
mov
lea
jb
xor
mov
aaa
pusha
xorb
dec
mov
jo
mov
stos
xor
push
dec
mov
aad
loopne
jmp
in
ret
scas
sbb
lods
cmp
ret
nop
cmp
loope
adc
mov
xorb
out
mov
xchg
sub
shrl
nop
mov
jb
fcomps
outsb
mov
mov
iret
and
nop
add
pop
aas
insb
push
test
inc
lret
inc
push
daa
cld
iret
pop
icebp
add
mov
mov
xchg
mov
aaa
adc
pusha
jp
repnz
es
adc
movb
fbstp
addb
jbe
jnp
jno
in
add
xchg
mov
les
mov
or
mov
call
movsb
cmp
in
pushf
xchg
xchg
jmp
jmp
xchg
fstpt
nop
mov
popf
add
and
jne
adc
dec
je
sub
pop
cmp
fldcw
mov
sbb
push
mov
jb
stos
cmp
inc
or
jg
push
jbe
pop
push
jmp
mov
and
and
addl
mov
add
rcrb
dec
mov
incb
xchg
ret
pop
in
inc
pop
seto
push
jg
push
in
repnz
dec
jbe
iret
test
pop
call
lahf
xorb
pushf
push
fldl
dec
pop
icebp
cmpsl
mov
ret
test
sbb
icebp
leave
pusha
out
jl
test
mov
mov
icebp
cmc
or
cmp
jle
jecxz
stos
in
sub
add
push
xchg
cmc
sti
call
gs
shrb
paddsw
add
in
and
lret
testb
mov
test
xor
repz
adc
dec
and
addr16
movsl
and
mov
mov
aam
rolb
xchg
lahf
in
add
xchg
mov
jbe
push
xlat
sbb
push
mov
into
pop
dec
ds
test
out
sbb
aaa
loop
add
cld
ss
aas
inc
enter
insb
push
in
pop
out
push
es
sub
sub
adc
in
test
ljmp
pop
lret
in
cmpsb
push
les
mov
lret
fs
out
mov
xlat
add
outsb
add
xchg
orb
ds
cmc
add
aad
pop
mov
mov
incb
popf
das
idivb
pop
inc
in
in
inc
push
pop
out
and
sub
jl
in
adc
push
fucomip
cwtl
mov
or
ret
pop
test
in
insb
sub
xor
dec
pop
mov
popa
sub
in
leave
cmc
out
call
mov
lds
cmp
dec
dec
and
mov
jbe
jo
rclb
decb
and
dec
out
adc
add
cwtl
sbb
scas
int
and
mov
add
idivl
pop
xchg
ljmp
pop
test
dec
fidivrl
fwait
cltd
addr16
not
shll
sbb
test
cltd
fsubs
cltd
in
filds
add
dec
pushf
jo
xor
insl
push
sbb
movsb
push
dec
xor
ror
rolb
movsl
mov
mov
dec
mov
mov
inc
adc
test
pop
mov
push
cmp
xchg
cwtl
int3
and
jne
and
hlt
add
jl
shlb
xlat
into
push
aam
inc
fsub
fisttpll
divl
pop
jle
aad
mov
mov
popa
push
push
mov
test
out
jmp
cld
adc
bound
test
decl
dec
sbb
xlat
adc
mov
jl
sti
stos
mov
mov
pop
mov
mov
pop
out
sub
dec
pop
ljmp
lahf
test
loope
addr16
outsb
sub
pop
aad
stc
popa
sbbl
test
push
push
ldmxcsr
dec
aam
xchg
xchg
divb
mov
int
push
jns
shll
lods
pop
icebp
jmp
add
dec
ja
repnz
xor
cli
or
fdivrs
in
in
lret
push
stos
sbbb
mov
sbb
shll
loopne
push
popf
push
pop
cmp
fidivrs
cltd
es
aas
add
dec
popf
adc
mov
jmp
addl
fcmovne
push
xchg
xchg
mov
test
cs
bound
aad
xchg
jb
mov
push
nop
scas
test
xor
out
xchg
xchg
jb
jo
int
pop
incl
mov
es
jns
jnp
xor
shll
dec
sbb
aas
aam
xchg
jg
push
stos
or
xlat
mov
pop
sti
inc
into
mov
lcall
cmpsl
insl
jnp
lds
into
pop
sarl
xor
data16
out
cmp
lods
ficoms
out
mov
add
sub
mov
dec
lea
scas
inc
xchg
gs
data16
dec
out
inc
sahf
push
pop
shl
push
jns
cmpsl
fwait
stos
lock
mov
notl
test
xchg
xchg
lret
sahf
mov
mov
lods
fisubrs
adcb
jmp
sahf
xor
cmc
mov
test
mov
arpl
int
sarl
xor
jp
sarl
lods
sbb
xor
mov
cmpl
fcom
cwtl
roll
test
or
test
lret
aaa
push
scas
jecxz
mov
jae
and
jp
repz
sub
sbb
xchg
out
mov
test
xor
movsb
cmp
add
shlb
jg
mov
xchg
inc
cmp
adc
mov
mov
add
mov
clc
and
or
pop
pushf
ds
fistps
add
jge
cmp
cmp
pop
cwtl
sbb
or
out
aad
and
leave
arpl
dec
daa
mov
mov
push
pop
lds
sub
sub
jnp
aas
dec
out
mov
clc
adc
bound
test
jmp
push
cmpsb
es
pop
xchg
insb
ret
pmullw
push
mov
sarb
lcall
dec
ja
jnp
cmp
push
cmp
int3
arpl
enter
daa
xchg
cmp
sarb
mov
mov
xlat
addr16
aam
inc
pop
mov
inc
mov
in
sub
push
or
outsl
push
sbb
adc
inc
jns
or
push
nop
sub
ljmp
rorb
xor
shl
mov
dec
decb
divb
imul
jecxz
cmp
ret
mov
xlat
xchg
mov
push
pushf
in
pop
daa
xchg
and
xchg
push
adc
inc
or
pop
ds
xor
xchg
in
inc
dec
pop
dec
fs
out
mov
imul
or
mov
mov
movsl
shr
or
outsb
fstl
xor
cmpsl
ds
cmc
popa
shl
mov
movsl
sti
repnz
pop
xor
scas
rolb
mov
rolb
sub
push
and
ret
mov
cs
imulb
pop
mov
rorb
jmp
aaa
dec
add
sbb
cmp
fsubr
mov
jns
xchg
sub
sti
mov
pop
in
dec
jmp
mov
insb
pop
sbb
add
inc
or
sub
cmp
aam
lock
dec
lods
xor
pop
pushf
sbb
ret
mov
mov
imul
scas
aam
aaa
sub
ss
xorl
mov
dec
dec
in
mov
aaa
lcall
push
push
xchg
lret
xor
push
fs
jno
in
leave
sbb
cmpsl
rcrl
in
subb
int
das
aad
mov
push
js
shrb
fisttpll
add
and
test
mov
scas
cs
inc
mov
popa
ljmp
mov
fincstp
or
lea
xor
incb
es
add
lods
jnp
dec
and
xchg
pusha
add
dec
cmp
inc
ss
test
adcl
fiaddl
in
out
pop
pop
mov
or
sbb
scas
xor
xchg
xchg
sub
cmp
aas
xchg
mov
stos
test
cmp
pop
mov
sub
ljmp
jp
imul
push
test
mov
pusha
ljmp
mov
adc
sub
xchg
shll
fcomip
iret
jbe
jge
mov
push
xchg
loope
jle
mov
and
push
scas
adc
jp
movsl
rcrb
ret
push
cwtl
cld
or
lcall
in
jge
xor
pop
jbe
sbb
popf
sbb
and
add
bswap
xchg
hlt
sti
xor
dec
mov
sub
and
shll
cmp
js
je
ds
dec
pop
or
xchg
lret
pushf
mov
sub
add
outsl
dec
mov
or
jo
aaa
mov
int3
cmp
mov
inc
jo
jge
ss
and
inc
fimull
mov
hlt
cmpsb
int3
xchg
popa
push
loopne
cmp
cmp
iret
ja
xor
or
add
inc
xor
xchg
subb
add
mov
xor
sbb
adc
insb
fs
xor
xor
cmp
fsubrl
outsb
nop
mov
dec
clc
aad
xor
mov
test
aas
pop
pop
jmp
push
test
aam
jno
or
sbb
cli
jo
dec
mov
adc
push
push
sbb
mov
xor
adc
icebp
mov
sub
outsl
mov
mov
lret
daa
enter
sub
sub
jne
gs
pop
movsl
lds
lcall
xchg
inc
push
mov
outsb
test
scas
test
out
lds
mov
test
or
out
lds
in
push
fdivs
sbb
dec
mov
insl
loopne
andl
mov
jmp
sub
shrb
add
lods
inc
mov
imul
arpl
jns
add
ja
adc
push
lret
xor
mov
loop
mov
xlat
int
xchg
stc
jno
loope
cmpsb
ds
push
and
clc
fstps
out
int
das
or
out
xor
add
ds
push
in
shr
pusha
push
mov
shl
or
cmp
int
push
lahf
stos
jne
push
ljmp
jno
and
and
sub
notl
mov
adc
movsl
testb
jo
stos
sub
inc
popa
mov
scas
cmp
and
cmp
ljmp
pop
idiv
pop
mov
clc
ljmp
add
pop
mov
jne
mov
xor
lret
xlat
jno
imul
ljmp
jae
cmp
dec
loop
cli
jno
inc
push
popf
js
clc
push
push
pop
loope
nop
jae
jb
mov
test
fcmovnb
pop
dec
mov
fnsave
dec
push
lea
cld
xchg
xor
xor
mov
mov
push
sbb
in
jp
enter
cltd
jbe
int3
mov
mov
cmp
add
loopne
bound
xor
mov
in
pop
ret
mov
cmpsb
dec
ljmp
pop
arpl
aaa
adc
adc
add
out
pop
test
sbb
addl
mov
das
js
push
out
loopne
push
sub
adc
dec
inc
in
mov
mov
ret
hlt
ret
mov
pop
and
push
lret
out
push
aam
inc
adc
lods
fdivp
loope
mov
hlt
out
adc
xor
xchg
inc
inc
or
ds
je
mov
add
scas
int
subl
and
cli
add
mov
pop
cmpsb
ja
dec
repz
push
sbb
int
cwtl
das
mov
ret
mov
mov
pop
out
add
scas
dec
xchg
out
mov
enter
movb
push
dec
aad
lods
mov
mov
mov
daa
ljmp
dec
inc
test
sub
adcb
int3
mov
les
lods
in
negb
fldcw
or
aam
xchg
outsl
adc
mov
dec
xor
shlb
arpl
loope
mov
add
in
and
dec
push
jge
mov
adc
push
xorb
or
adc
ficomps
xor
jle
xchg
test
lret
cwtl
je
mov
fwait
mov
adc
pop
cmc
mov
scas
adc
or
push
xor
sahf
pop
xlat
cmp
cs
in
xor
adc
es
and
push
pusha
jne
sub
ret
out
xor
mov
push
das
out
mov
js
xchg
xlat
push
call
fdivrs
subl
xchg
aaa
insb
shlb
push
inc
inc
into
jne
mov
add
cmp
shlb
in
or
lret
jno
pop
lret
xlat
mulb
mov
or
mov
lret
stos
mov
ja
push
ds
cltd
outsb
dec
aas
mov
jmp
xor
stos
inc
cmpsl
xchg
repnz
dec
enter
in
fsubrp
and
xor
push
ret
xor
mov
sbb
xchg
inc
xlat
add
filds
push
mov
mov
les
sub
ret
xlat
pop
mov
lahf
pusha
cld
sbb
inc
push
ss
fwait
es
fbstp
movsb
push
jo
sahf
cmp
jns
inc
nop
fwait
es
outsb
dec
mov
adc
jmp
divb
shl
push
shll
cmp
fldenv
pop
pushf
out
xchg
mov
or
push
jl
dec
xchg
and
sbb
mov
cmpsb
in
enter
push
stos
insl
xchg
mov
lahf
mov
rcrb
fs
cs
jge
movsb
stos
add
jno
test
adc
test
lret
sahf
out
and
xor
ljmp
dec
cmp
push
xchg
popa
jp
mov
or
mov
je
into
arpl
negl
roll
clc
cwtl
andl
xchg
mov
dec
jmp
jne
lahf
arpl
aaa
into
fistpll
bound
mov
sub
das
push
icebp
push
ja
jmp
insl
jo
sahf
ret
jae
xor
loop
sbb
cs
mov
dec
mov
mov
test
adc
jne
jmp
cmpsb
inc
xchg
or
lcall
in
stc
jne
lods
inc
adcb
fildll
test
lds
cltd
int
xchg
mov
xchg
cs
mov
fldcw
dec
pop
repz
bound
mov
sbb
add
xchg
aam
sub
cwtl
sub
test
cld
push
jmp
mov
inc
sbb
cmpsl
nop
mov
ret
xchg
mov
jl
push
in
pop
jge
jge
idivb
lcall
cltd
cmp
mov
dec
pop
stc
mov
xchg
xchg
jmp
popf
mov
adcb
xchg
rol
movsl
add
das
and
xor
negw
inc
sub
rcrb
cmp
mov
ret
jb
cmp
xchg
ds
lcall
push
xchg
xor
or
js
pop
jmp
mov
cmp
pop
js
ds
mov
sbbb
push
mov
lea
into
pop
loopne
scas
fildll
sub
movsl
sti
push
pusha
dec
insb
sti
aaa
or
pusha
ss
cli
jecxz
inc
lds
cli
xchg
cmp
or
xchg
sub
cmp
push
push
or
decb
fs
addr16
xor
fists
pop
scas
ds
out
xchg
xor
mov
mov
inc
out
push
les
cmp
add
gs
insb
sub
movsb
addr16
je
dec
call
dec
hlt
dec
stc
js
dec
ljmp
popa
adc
jb
pop
sbbl
inc
aaa
xchg
cli
fsub
push
dec
ljmp
cmp
int3
and
sbb
jno
adc
fimull
out
call
mov
ljmp
xor
dec
jo
das
pop
xchg
shr
int
test
in
lcall
lahf
mov
push
xchg
adc
push
lret
mov
mov
and
std
cltd
add
mov
pop
out
shrd
ret
xor
iret
testl
and
jecxz
sbb
sbb
mov
test
xor
mull
es
mov
std
adc
hlt
push
jae
xchg
scas
cmp
xchg
fidivrs
sarb
cwtl
xchg
push
cmc
aam
pop
mov
sub
ja
sub
adc
and
push
lods
lds
mov
add
xor
xchg
add
inc
adc
loopne
xor
ss
mov
push
sub
or
fdivl
push
dec
pop
xor
mov
jns
movsl
cmp
jecxz
aaa
bound
xlat
mov
adc
lods
popf
insb
adc
xor
insb
pop
push
cld
and
adc
leave
cmp
pop
push
popf
or
pop
pop
movsb
dec
mov
stos
pop
inc
push
jae
jne
lcall
enter
iret
xchg
and
ret
out
iret
fldcw
ljmp
outsl
push
xor
mov
cmpsb
pop
aad
push
mov
xsha1
cmpsb
leave
cwtl
mov
sahf
lods
mov
and
js
mov
push
push
insb
test
adcl
stc
lods
out
sbb
insb
xchg
push
insl
jp
pop
push
icebp
sbb
cmp
sub
in
sub
sub
or
lods
inc
mov
and
mov
and
sbb
dec
cmp
xchg
or
push
jmp
test
pop
push
out
or
jne
lods
cmpb
mov
add
nop
sub
shlb
mov
shl
cmp
lds
jnp
ret
push
mov
dec
inc
fwait
push
xchg
movsb
jp
hlt
mov
push
jne
imul
inc
test
int3
inc
fiadds
sahf
das
movsb
sbb
add
lods
stc
ja
cmp
xchg
jg
mul
clc
and
pushf
pop
loope
enter
mov
test
sub
xchg
mov
hlt
cmp
hlt
cmp
mul
push
movsb
sub
nop
dec
pop
ret
dec
mov
repnz
shr
insb
aad
jle
pop
mov
push
call
cmpsb
mov
lock
ror
repnz
xlat
adc
addb
lds
push
repnz
jge
shll
les
xchg
dec
push
hlt
push
sub
daa
rclb
dec
mov
lahf
mov
lret
adc
insl
aam
pop
fstpt
mov
lret
int3
test
mov
xchg
jge
fcomip
bound
mov
data16
movsb
sub
cli
je
sub
sti
mov
push
out
push
jae
cmp
pop
push
pop
add
xchg
ds
out
push
loope
jmp
imul
insb
into
aad
in
int
mov
mov
sub
push
into
jge
jg
outsb
icebp
cltd
jbe
mov
scas
fnsave
outsl
or
popa
adc
mov
cmpsb
sahf
dec
sbb
and
mov
dec
pop
push
push
inc
pop
call
mov
movsl
subb
mov
xorl
push
mov
sub
sti
popa
xor
sahf
mov
lods
jno
sbbl
or
dec
pop
sub
sub
in
cmpsb
sub
outsl
lret
pop
rcrb
mov
mov
shrl
mov
cs
adc
push
and
cmp
mov
xlat
icebp
js
mov
adc
jp
rcll
mov
mov
xor
and
ja
or
orb
imul
xchg
lock
xchg
les
sbb
mov
push
pop
ficoml
lock
loopne
out
push
or
lea
lahf
fdivrp
push
scas
movsl
pop
rcrl
nop
lock
and
nop
shrb
dec
jns
test
mov
sub
or
or
push
dec
xor
mov
fldt
into
push
jb
lods
test
dec
cli
adc
cmpsb
and
xor
xor
adc
xor
sahf
outsl
push
lock
imul
lods
mov
ret
mov
xor
mov
pop
mov
sbb
std
pop
into
faddl
es
xor
xor
gs
pusha
xlat
mov
jb
adc
dec
cmp
fs
repz
loope
mov
jne
jg
call
fidivl
daa
hlt
ret
cmp
jno
mov
frstor
cmp
call
cmp
sahf
scas
roll
cld
mov
shll
lods
xchg
aaa
movb
jne
mov
jno
fidivrl
lret
xchg
lds
outsl
lods
inc
scas
dec
insb
mull
lret
mov
mov
fnsave
lret
sbb
gs
sub
fs
or
lret
push
xchg
push
dec
popa
lock
jmp
lock
cmp
fwait
adc
jmp
pop
jbe
test
inc
into
test
jmp
or
xor
pop
dec
jecxz
pop
out
xchg
sub
scas
ljmp
insl
adcb
jno
data16
mov
sti
inc
adc
stc
adc
dec
sbb
sarl
std
orl
daa
sub
pop
inc
xchg
cs
cmp
leave
stos
ret
jb
jmp
pop
call
test
sahf
inc
adc
jne
loop
mov
sbb
ja
inc
mov
outsl
xchg
mov
pop
cmpsb
cmp
xchg
pop
les
iret
mov
scas
jl
mov
dec
stos
fsub
pusha
push
addr16
jb
pusha
cmp
sbb
fucom
mov
cmpsl
push
nop
sub
scas
push
inc
pusha
fwait
sub
mov
aam
mov
pop
insb
add
jle
fnsave
lret
xchg
pushf
scas
ret
push
shlb
push
cwtl
pop
pop
das
or
loope
xor
fcmove
mov
nop
pop
negb
dec
nop
aas
shll
out
rol
adc
pop
mov
cs
cmpsb
movb
or
shrb
out
add
stos
enter
pop
mov
pop
outsl
push
lds
mov
mov
adc
and
mov
shrl
and
hlt
fs
xor
lret
mov
stc
xchg
fmull
jo
push
push
mov
pop
xlat
in
jns
les
lahf
add
adc
ljmp
insb
mov
nop
jp
in
mov
notl
cmp
mov
inc
sbb
dec
ret
mov
xsha1
cmpsb
sub
call
das
sub
jnp
enter
adc
pop
or
inc
mov
mov
jo
inc
dec
mov
enter
and
in
ror
xor
cmp
pushf
enter
shrb
rep
das
or
sub
jg
bound
cmc
inc
repz
popf
and
and
stos
lea
fwait
mov
cmpl
cmp
lret
in
and
iret
sub
push
addb
das
mov
push
pop
aas
cltd
in
cmp
pop
cmp
dec
pop
les
jl
add
mov
ss
aaa
adc
icebp
je
movsb
scas
aad
dec
enter
pop
insb
cld
mov
cmp
mov
test
insl
lahf
push
out
shl
rol
xor
xchg
fcmovnb
pop
std
icebp
jl
and
loope
jae
or
hlt
mov
andb
loopne
add
ss
push
pop
xchg
test
stos
xchg
leave
les
loopne
movb
ja
aad
stos
inc
lods
adc
xlat
daa
fbstp
and
jge,pt
movl
cld
adc
cmp
clc
add
xor
xchg
mov
push
mov
nop
cmp
shll
fs
sbb
leave
inc
sub
add
mov
push
mov
lahf
cld
int3
push
in
sbb
or
jl
mov
xchg
sub
in
inc
pop
adc
ss
jo
xchg
dec
mov
out
fsubrp
xchg
sub
sbb
sub
cmpb
shll
sub
xchg
lret
je
push
add
sbb
enter
aad
pop
cmc
xchg
mov
sub
jge
sbb
fldl
sub
cmp
cmp
das
dec
insl
ror
jecxz
sub
iret
shrl
push
bnd
and
sti
pop
jnp,pn
and
mov
mov
int3
adc
int3
and
scas
arpl
pop
adc
mov
pop
out
clc
inc
push
xor
pop
scas
push
push
fsubrs
cmp
xchg
out
test
push
mov
sbb
xchg
ds
cmp
xchg
test
xor
test
repz
xor
inc
push
sub
add
mov
push
mov
scas
push
mov
add
mov
or
repnz
aad
add
sub
icebp
inc
les
fcoms
mov
ret
adc
dec
cmp
loope
xor
mov
outsl
push
pushw
adcl
das
bound
lret
lret
ljmp
add
sbb
fnstenv
jns
jl
cmp
sbb
pop
lods
cmp
fisubrs
loopne
decl
xor
jmp
addr16
inc
add
addb
cmp
aas
dec
cmp
xchg
jmp
movsb
mov
clc
dec
leave
jne
push
mov
inc
test
imul
arpl
adc
adc
pop
fldz
pop
in
dec
das
movb
cmp
dec
rcrl
test
push
ret
cmc
shl
es
and
ss
lret
call
addl
ret
or
sub
icebp
js
lret
bound
shr
addb
and
mov
jge
or
test
out
push
jmp
es
mov
xlat
out
inc
jle
jo
xchg
sbb
dec
inc
test
jbe
fidivrs
bound
sbb
sub
lods
stc
pushf
imul
into
data16
scas
pop
lret
in
push
ljmp
movsl
jg
aas
popa
xor
inc
fisubrs
insl
fisttpll
or
cmp
inc
cmp
and
adcb
pop
loope
pop
jo
ds
lods
inc
sub
std
mov
dec
pop
jbe
lahf
nop
mov
push
xchg
into
push
out
bound
jne
pushf
test
leave
mov
arpl
sbb
ja
or
out
mov
dec
or
mov
fstpt
jl
add
push
iret
hlt
sub
bound
xor
cs
dec
xchg
mov
dec
jecxz
xchg
popf
sub
push
imul
mov
adc
cmp
aad
gs
mov
in
jg
ds
sub
mulb
sbb
sbbl
xor
lea
push
xchg
sub
insl
cs
mov
jg
jno
insb
dec
fcmovu
jle
push
mov
pop
cvtdq2ps
jg
loope
add
sub
in
cmp
fidivrs
sarb
sbb
xor
fsts
ja
dec
jmp
scas
outsl
xchg
ss
add
mov
lods
push
and
addb
xor
push
jge
mov
pop
repz
ss
and
adc
cwtl
jae
ljmp
outsb
daa
idiv
shrb
xchg
addr16
out
movsl
mov
mov
les
je
in
jne
movsb
push
sbb
add
inc
push
outsb
cmp
inc
mov
mov
cmp
xlat
jo
or
xorl
push
fs
int
idivl
fidivs
jp
andb
fdivp
adc
stos
inc
sub
or
fnstcw
sahf
and
jg
mov
push
lcall
cwtl
jmp
pop
sbb
mov
pop
dec
insb
das
xor
subb
add
bswap
and
dec
sbb
adc
lret
mov
pop
or
repnz
call
xchg
pop
popf
xor
push
fsubrs
clc
ds
ljmp
inc
js
jno
sbb
push
repz
shl
push
add
mov
pop
xor
scas
popa
clc
loopne
lea
inc
cli
xchg
loopne
shlb
xor
ret
mov
mov
fidivs
lret
xchg
jmp
pushf
sbb
sahf
cmp
popf
jno
call
mov
les
fcmove
pop
adc
nop
insl
adc
pushl
and
outsl
xchg
in
aaa
mov
adc
and
rolb
push
inc
jl
jmp
mov
outsl
outsl
sahf
sbb
test
test
jo
jecxz
fiaddl
shrb
inc
sub
int
enter
je
insb
ret
int
out
xor
shll
fimull
cmp
in
mov
lcall
jp
leave
mov
sub
mov
jmp
mov
mov
dec
inc
loopne
nop
daa
add
popf
xchg
xor
xchg
movsl
js
adc
cmp
and
lds
mov
and
pop
jno
bound
cmp
xor
loopne
popf
mov
ljmp
call
inc
jnp
call
shlb
cs
push
xchg
lcall
sbb
mov
pop
inc
push
adc
popf
xor
pushf
repz
dec
cmpsl
outsb
sub
push
sub
aam
dec
xlat
sub
psubsw
les
call
loopne
cmc
ds
sub
nop
push
mov
pop
int
pop
sub
dec
dec
xor
xlat
adc
sub
or
cmp
sub
leave
sub
jl
ljmp
inc
in
push
aaa
adc
lods
out
or
hlt
adc
push
pushf
cmpsl
aam
cs
leave
lret
frndint
jne
pop
andb
adc
icebp
or
addr16
sahf
xor
dec
rcr
xchg
push
daa
dec
pop
rcrb
stos
mov
jnp
sbbl
mov
icebp
push
pop
mov
lock
aam
mov
fnsave
inc
xchg
pop
xor
aam
dec
jecxz
jb
nop
scas
cmp
test
mov
cmp
popa
or
push
mov
mov
repz
jne
lret
jle
push
cmp
std
mov
jbe
pop
adcl
iret
stc
dec
bound
mov
push
cmc
xchg
les
rcrb
cmp
cmpsb
push
inc
mov
movsl
xor
dec
out
lods
jg
or
adc
test
icebp
mov
divps
out
fnsave
cmc
and
pop
lea
sub
lret
popf
or
scas
xor
stos
xor
push
leave
lahf
jbe
dec
ret
call
rol
sbb
jle
cmp
ss
adc
repnz
pop
das
or
pushf
mov
push
sub
push
jne
xor
daa
cmpsl
stc
sti
nop
cmp
push
xor
ja
loope
jae
shll
pop
out
mov
in
sub
loopne
sub
and
mov
out
sbb
outsb
int3
stc
push
daa
lret
movsb
in
out
scas
popa
fstpt
in
ja
push
dec
sub
mov
test
jb
cmp
pop
in
mov
ja
xor
xlat
aam
inc
shl
mov
add
xchg
arpl
xchg
mov
rclb
ret
sub
mov
dec
fwait
out
stc
mov
mov
mov
js
int3
fdivrl
iret
adc
ja
shlb
cmp
lock
movsl
cmp
sbbl
or
pop
mov
das
push
mov
jae
jne
test
push
aam
je
fbld
push
shrl
call
out
cmpsl
mov
sbb
mov
ret
pop
test
sub
in
add
ljmp
fwait
push
mov
mov
add
cmc
iret
push
je
fs
mov
or
in
cld
in
rcrb
push
lcall
or
push
dec
fists
dec
mov
test
test
and
out
ret
mov
add
mov
fs
push
bndstx
mov
pop
jmp
inc
xchg
pop
in
pop
xor
push
je
sti
loopne
sub
sbb
xlat
mov
cli
addb
jp
jp
dec
push
out
cmp
data16
push
mov
sub
pop
arpl
aas
cmp
mov
adc
sbb
or
test
fsubs
xchg
mov
pop
test
jle
adcb
out
aam
pusha
sahf
mov
dec
out
repnz
shrl
fdivrl
and
sbb
out
sti
loop
lahf
cmovns
add
push
mov
sub
add
sbb
scas
add
mov
int3
in
mov
and
into
insl
pop
daa
xor
cmpsl
jmp
inc
mov
aas
sub
xchg
sub
js
mov
mov
ljmp
xchg
cmp
sub
cmpsb
dec
push
call
jmp
int
int3
mov
fistl
mov
test
mov
imulb
sti
cmpsl
ss
dec
sub
in
popl
mov
mov
call
not
sub
or
push
push
dec
mov
mov
or
out
and
sbb
les
cmp
or
sti
or
or
jbe
xchg
mov
cs
lcall
lgs
xchg
out
shrb
lea
mov
pop
xor
pop
mov
jnp
adc
sbb
xchg
es
pop
sbb
sub
insl
dec
mov
popa
shrl
pop
adc
xlat
je
dec
push
scas
lods
or
fildl
cmp
xor
imul
pusha
addr16
sub
cmp
pxor
mov
jle
xor
and
pusha
mov
mov
cmpsl
cmp
mov
pop
or
int3
sub
or
fwait
dec
pop
test
sahf
stc
mulb
add
inc
sbb
add
lods
inc
push
mov
sar
fdivl
ljmp
mov
insb
dec
xchg
mov
ret
cltd
pop
xchg
or
iret
fs
lret
xor
lods
ficoms
xchg
call
ljmp
test
shll
pop
xor
out
popf
leave
and
nop
push
icebp
mov
sub
inc
xchg
push
pushf
cmp
jge
jns
lret
add
sbb
ret
jge
cmp
loopne
ds
insl
jge
pop
ret
lcall
jecxz
int3
push
cmp
inc
data16
and
lods
outsl
aaa
push
addr16
sbb
mov
push
jle
add
lcall
add
popf
sbbl
adc
outsl
out
aam
cld
notb
push
mov
xchg
sub
cmc
xchg
or
jl
cmpsl
pop
xlat
outsl
js
or
nop
mov
int
fbld
iret
jl
push
nop
xor
xor
insb
push
dec
lods
or
andb
jb
mov
outsb
int3
es
add
in
mov
push
mov
testb
lret
dec
dec
pop
sub
repz
lods
mov
sar
data16
out
shl
or
mov
aaa
clc
add
movsb
push
mov
int3
in
inc
ljmp
adc
inc
repnz
inc
xchg
mov
aam
dec
pop
push
frstor
dec
adcl
dec
sbb
adc
or
mov
add
addl
and
stos
pop
out
aam
es
mov
cwtl
ss
orb
add
dec
fsubrp
mov
data16
js
dec
cmp
jp
in
pop
stos
inc
cmp
pop
leave
int3
inc
xchg
jecxz
jno
into
pop
lahf
adc
sbb
pop
adc
cmpl
scas
das
js
andb
dec
inc
les
mov
pushl
scas
sbb
cmp
lcall
jecxz
push
shlb
rcll
std
adc
cs
call
ljmp
cmp
fdivr
les
mov
rclb
fcmovbe
mov
fcmovbe
lods
pusha
emms
xor
scas
or
cmc
dec
call
int
jg
xchg
mov
fstps
pop
mov
ret
hlt
pop
cmp
mov
push
rcr
aam
fdivr
les
repz
mov
shl
add
cltd
fidivrs
inc
mov
sti
sti
and
sbb
ret
fwait
or
out
jg
and
addr16
push
inc
xchg
ret
mov
mov
push
scas
add
or
sbb
pop
xchg
mov
and
cmpsb
fsts
mov
push
stos
jb
or
movsl
inc
pop
adc
cmp
pusha
ljmp
add
js
push
stos
fidivrl
xor
push
jl
sbb
les
mov
dec
dec
pop
in
add
xchg
xchg
lahf
ja
in
sub
xchg
mov
mov
xor
cmc
mov
xchg
sub
ficomps
test
out
inc
imul
mov
jb
lret
shr
lods
pop
push
and
loop
jp
sub
mov
inc
test
ss
pop
xchg
xor
das
mov
dec
ja
insl
push
fbstp
push
fucomp
jae
lods
adcb
cmpsl
movsb
popf
and
mov
pop
or
push
jge
pop
lea
mov
arpl
pusha
sti
mov
pop
scas
dec
and
ljmp
cltd
xor
mov
ljmp
lock
pop
sar
mov
jl
fmul
jo
fbld
ret
xchg
sub
cld
and
stos
ds
mov
rcrl
cli
push
dec
inc
lret
dec
jmp
cmc
mov
out
pop
jg
mov
in
js
imul
fisttpl
call
cmp
push
js
test
mov
xlat
push
inc
flds
inc
and
iret
or
cmpsb
inc
mov
in
dec
lret
adc
adc
inc
jo
cmp
cmpsb
cmp
sub
fs
outsb
add
mov
inc
push
xor
mov
in
and
push
arpl
or
cs
mov
jno
int
dec
ror
jae
mov
in
xor
xchg
mov
xchg
pop
sub
fcmovnu
imul
xor
xor
jno
jmp
add
inc
sti
xchg
fildl
sbb
mov
loopne
mov
xchg
inc
lock
std
mov
rcrb
out
jle
push
loopne
shrl
daa
or
jle
sub
rcrb
stos
in
xchg
shl
int
lcall
mov
and
mov
leave
idivb
out
mov
fidivs
std
mov
lea
lahf
leave
nop
pop
stos
dec
mov
cmp
lods
nop
push
mov
int3
jge
shl
and
in
mov
sub
notl
lds
insb
aad
pop
xchg
or
dec
dec
dec
addr16
je
inc
pop
ret
jle
clc
lods
sbb
add
jnp
arpl
jo
pop
push
loop
shl
imul
jp
arpl
lret
xor
and
loopne
push
adc
mov
cmpsb
mov
push
lods
js
push
js
jge
std
inc
in
sub
xchg
adc
mov
push
and
iret
test
dec
xchg
fldt
mov
push
sahf
sbb
repnz
ficoml
shlb
ljmp
test
mov
or
jne
mov
subb
mov
stos
rcll
mov
mov
sbb
lahf
test
mov
bnd
and
cmp
mov
je
mov
shrb
xor
push
adc
inc
xlat
lods
mov
fdivrl
idiv
inc
sti
xchg
popa
push
dec
mov
pop
ljmp
je
loope
iret
shrb
inc
loope
lret
in
pop
repz
in
aam
xchg
sub
dec
rorl
adc
repz
cwtl
ficompl
cli
xchg
and
call
arpl
je
inc
fcom
jle
jns
sub
call
pushf
popf
dec
loope
nop
iret
and
add
adc
pop
xchg
cmp
mov
jnp
sti
adc
mov
into
dec
and
das
cmp
push
in
sbb
ljmp
lret
xchg
pop
out
sarb
aas
inc
sub
jae
jae
clc
sarl
movsl
loope
fnsave
bound
pop
pusha
shll
movsb
push
xchg
loop
lds
and
mov
outsb
ret
jno
jecxz
outsl
jne
in
push
push
xchg
mov
xchg
into
enter
jge
cs
add
nop
add
loope
loopne
enter
push
mov
fdivrl
xchg
push
sub
out
or
xchg
sub
mov
xor
repz
cmpsb
int
fsts
leave
sub
std
mov
jle
fisttpll
xchg
add
test
sar
xor
sub
out
cmc
js
push
inc
in
cmp
lret
jl
jo
pushl
cltd
insb
and
or
pop
xchg
dec
sub
sbb
jne
scas
inc
inc
stos
iret
jmp
or
rcl
pop
repz
sub
test
mov
sub
push
ss
movsl
icebp
xchg
cmp
aaa
outsl
mov
iret
nop
add
lods
add
fistps
jno
or
mov
xchg
enter
cmc
sbb
fmul
mov
xor
mov
sbb
ja
mov
out
mov
les
sbb
or
or
pop
jo
adc
enter
aad
stos
dec
dec
jp
mov
jo
iret
ficompl
jle
push
int
inc
dec
adc
cwtl
shld
jnp
push
xor
cwtl
fidivl
stos
aas
jae
popa
pop
pop
adc
mov
movsl
divl
lret
call
out
cmpsb
mov
out
jbe
adc
add
loop
mov
out
pusha
xchg
sbb
or
gs
test
popf
inc
fmuls
sti
adc
in
sbb
daa
mov
jle
jp
fistps
fs
inc
sub
je
xor
cmp
mov
shlb
mov
bswap
inc
pop
xor
push
pop
pop
and
push
mov
add
xchg
cmp
bound
out
repz
hlt
scas
stos
insl
sub
dec
dec
pop
jns
fwait
xor
lcall
popa
inc
int
adc
inc
pop
stos
or
push
sarb
pmaddwd
repnz
pushf
cmpsl
dec
idivb
in
lock
shrb
loopne
nop
cmpsb
xchg
lock
rorl
out
adc
insl
jbe
pop
setnp
ljmp
subl
jp
push
mov
std
mov
iret
stc
rcrl
mov
jns
dec
les
push
jo
clc
sbb
decl
sub
add
testb
orps
jl
out
repnz
or
mov
insb
mulb
in
and
mov
cld
out
xchg
mov
ret
ds
and
mov
add
mov
cwtl
sbb
aad
les
mov
dec
sbb
dec
repz
aam
daa
xchg
pop
add
push
add
movsl
ret
loop
fiaddl
call
sbb
imul
mov
loope
sub
dec
or
ret
js
shr
fwait
cltd
dec
loope
mov
in
fs
push
cmp
push
sub
sbb
mov
out
lock
sbb
add
jne
test
pop
mov
movsb
mov
mov
dec
push
jne
xchg
mov
dec
xchg
jo
mov
movsb
les
mov
sbb
inc
jmp
ret
xchg
ret
inc
into
mov
shlb
lcall
nop
push
inc
jns
ljmp
es
dec
clc
push
fs
fs
mov
les
inc
jl
movsb
mov
push
fisubrl
jo
jo
bound
dec
hlt
cmp
jnp
ret
or
in
cmp
pop
or
push
inc
out
xor
mov
inc
jmp
es
stos
pop
fidivl
popa
rorl
pop
icebp
cs
and
int3
push
mov
enter
mov
arpl
movsl
andl
decb
insl
test
cld
mov
das
ss
addr16
mov
mov
xchg
shrl
mov
xchg
add
mov
movsl
ret
dec
out
in
sbb
inc
dec
in
mov
movsb
divb
jo
fdivl
addr16
rcr
jb
data16
test
insb
addb
leave
mov
sarl
and
js
adc
mov
rolb
test
mov
push
insl
out
mov
mov
sbb
and
cmp
imul
aas
push
std
int3
insb
jl
and
jne
lcall
push
popa
and
dec
push
aaa
push
xor
sbb
push
shrl
adc
imul
cld
xchg
xor
dec
cmp
adc
inc
inc
pop
inc
jns
lods
inc
mov
test
mov
sarl
mov
daa
sbb
sub
add
add
sbb
mov
jae
push
in
push
fwait
es
sbb
dec
repz
imul
lret
addr16
clc
out
adc
xchg
dec
bound
aam
repnz
jno
sbb
mov
das
repnz
mov
pop
push
jp
sarb
aas
sub
mov
sti
cmp
mov
lds
or
sub
scas
adc
rolb
jno
insb
push
popf
xchg
cmp
xchg
push
repnz
es
sahf
in
and
pop
jae
jo
mov
jl
lods
into
pop
push
mov
insl
xor
testl
aad
cmpsb
add
es
les
mov
popa
insl
orb
push
sbb
adc
scas
dec
imul
dec
outsb
imull
loope
lret
adc
repnz
dec
loop
cli
cs
ja
lock
cwtl
push
adc
insl
pop
fsts
dec
xchg
xlat
not
push
js
out
sti
mov
sarb
shl
test
lock
xchg
decb
repz
cwtl
xchg
mov
push
in
dec
mov
add
out
mov
sub
pop
inc
lods
adc
jo
cmp
sbb
imull
loopne
xchg
jno
xor
imul
mov
xchg
cmp
or
roll
mov
inc
shll
aas
stos
adc
fs
xchg
mov
inc
xchg
scas
in
or
fwait
roll
mov
pushf
mov
xchg
icebp
xor
stos
mov
clc
xor
loopne
push
jne
insl
cs
rcrb
cs
icebp
repnz
mov
pop
mov
gs
cli
aam
lods
xchg
clc
pop
ret
int
jo
repz
rol
insb
jle
testb
xor
xor
mov
std
mov
or
mov
push
mov
and
xchg
jo,pn
sarl
mov
cmp
ret
pop
icebp
adc
inc
test
and
fdivrl
es
mov
aas
push
xchg
mov
xchg
mov
xchg
sub
enter
nop
mov
dec
mov
cmc
sub
inc
fdivrp
add
jp
je
jne
pop
and
jecxz
inc
and
sub
push
jg
fdivs
push
or
icebp
dec
cmp
pusha
xchg
out
push
and
dec
mov
pop
es
rcl
mov
push
jge
rol
cmp
rep
cld
fdiv
das
sub
mov
sbbl
hlt
inc
lahf
sub
outsb
sbb
mov
scas
mov
sub
inc
jmp
dec
popa
sbb
cmp
xor
cld
cmp
adc
xchg
mov
rolb
push
mov
jae
push
sbb
push
jp
inc
in
adc
mov
les
mul
inc
mov
mov
lock
pop
js
mov
ret
sub
jae
test
push
inc
fsubl
push
sti
xchg
mov
mov
jp
jle
pop
and
testl
push
fiaddl
and
or
test
push
movsl
dec
les
pop
inc
mov
std
fdiv
lods
lret
xor
in
jo
pop
lods
les
cmpsl
ds
xor
pop
push
jae
cld
mov
dec
outsl
jl
mov
and
xor
push
hlt
ret
jp
fldenv
pushf
in
out
pop
outsb
mov
adc
or
rcll
sbb
dec
es
sub
add
mov
daa
sahf
outsl
aad
xchg
rclb
icebp
xor
inc
addr16
xor
jge
fucompp
xor
fsubl
xorl
lds
add
adc
push
out
dec
jmp
mov
xor
dec
push
fsts
pushl
rcr
jmp
nop
daa
ds
call
cmp
push
fwait
jns
mov
out
sub
dec
cmp
data16
or
jo
push
icebp
scas
inc
or
int3
repz
mov
rcl
xchg
dec
mov
and
mov
mov
out
xchg
fldt
test
pop
repz
bound
imul
inc
outsb
push
les
loope
outsb
daa
mov
int
jne
cmc
data16
mov
mull
mov
fisubrl
sub
adc
cmpsb
sahf
mov
xchg
clc
inc
inc
add
add
sub
jnp
push
test
repz
push
enter
lods
jmp
xor
test
sub
cmpsl
mov
out
mov
insb
add
mov
insb
and
jns
xchg
mov
cli
aas
mov
mov
mov
xor
scas
movsb
js
inc
frstor
ja
inc
xchg
push
jb
ja
push
divb
sbb
add
fmull
mull
rcrb
add
mov
cltd
es
sub
les
cmp
lret
dec
mov
scas
and
or
mov
add
pop
push
stos
jns
fsubrl
loop
adc
mov
jns
fnsave
or
mov
imul
cmp
push
addr16
mov
fidivrl
inc
pop
xchg
imul
jl
mov
lods
movsl
mov
in
xor
xor
es
mov
inc
data16
push
dec
add
in
addr16
sub
mov
mov
and
mov
dec
sahf
mov
lods
test
lret
pop
inc
aas
dec
ljmp
jns
cmp
pop
mov
xor
aam
mov
test
and
stos
clc
enter
sbb
in
sub
insb
inc
andb
pop
sub
ficompl
int
jno
mov
and
jl
push
xchg
jle
jb
in
js
aas
int
movsl
int
in
loop
aad
jmp
imul
push
push
ret
insb
sbb
repz
cmpsl
add
pop
das
add
into
rolb
jae
stc
fists
mov
mov
push
sub
addl
fldcw
mov
sbbl
jb
xchg
adc
loop
imul
mov
push
movsb
push
insb
mov
sbb
test
insb
dec
dec
pop
loop
frstor
push
imul
movsl
decb
mov
ret
lret
mov
sub
pop
loopne
in
jmp
in
shl
mov
jae
stos
inc
xor
int3
loope
jbe
pusha
test
loopne
in
fcoml
sub
lods
mov
fidivs
sbb
push
cmc
sub
or
pop
bnd
xchg
sbb
adc
pop
in
inc
mov
or
add
gs
sub
lahf
mov
cmp
cmp
je
outsb
outsl
notl
js
pop
pusha
push
mov
fdiv
mov
inc
xor
lea
and
inc
mov
lcall
fcompl
out
test
sub
int3
jmp
mov
jl
push
push
jmp
lea
add
fisttpl
jnp
mov
pop
fnstenv
push
ljmp
repz
cs
jg
xor
inc
cmpsb
pop
pop
and
add
es
sbb
add
aas
jno
imul
push
sbb
lret
xor
out
cmp
or
cmp
inc
fldenv
addr16
out
mov
cli
jmp
lcall
and
fdivrs
and
pusha
jg
jae
enter
or
xor
cmpsb
and
in
notb
mov
lret
jnp
adc
dec
mov
stc
jmp
and
sub
lock
dec
pop
icebp
jle
add
sbb
fwait
push
int3
das
jl
mov
aaa
ja
imul
bound
mov
push
lahf
add
or
ljmp
das
fcmovu
sti
or
or
enter
dec
repnz
in
or
or
or
out
cmc
dec
push
or
mov
inc
in
rcrl
in
xlat
jb
movsb
mov
dec
mov
sub
les
pop
push
mov
xchg
jae
push
push
rcrl
xor
in
push
and
stos
mov
fnstsw
aad
ja
pusha
xor
or
mov
sub
inc
pop
leave
push
pushf
jae
xchg
sbb
pop
sbb
xlat
repnz
lea
adc
fisubl
aaa
ficompl
fwait
pop
jmp
mov
push
icebp
shlb
fadd
addr16
cltd
loope
cli
adc
pop
out
adc
xor
cmp
pop
imul
xor
pusha
pop
stos
sbb
outsl
xchg
xor
mov
setl
into
xor
mov
in
aaa
xor
loope
loopne
scas
add
push
stc
push
adc
xor
and
stos
out
lods
std
neg
std
or
std
mov
out
insb
mov
xor
lret
mov
push
jne
adc
lret
dec
inc
sbb
push
subb
sbb
nop
out
pop
dec
fs
mov
fidivl
xor
add
mov
jecxz
inc
push
popf
sub
fcoms
lret
stos
jmp
repz
inc
ret
adc
outsl
stc
nop
stos
xchg
mov
negb
lods
addl
push
mov
jae
shrb
das
sub
pop
cmp
ret
push
dec
push
sbb
mov
jp
cmp
into
mov
jb
aaa
es
cmp
int
mov
xor
adcl
add
sarl
lods
adcl
fldl
pop
mov
adc
adc
notl
and
xchg
xchg
out
add
ret
shll
mov
inc
fbstp
mov
out
test
fwait
insl
push
push
adc
xchg
mov
movsl
mov
pop
sub
lods
add
cmc
pop
loopne
outsb
rol
jl
and
data16
out
push
push
cltd
inc
sti
xchg
jae
jb
jge
mov
inc
ds
aam
nop
test
push
lods
cmpsb
cmp
fistl
lds
add
jp
mov
jge
pop
mov
push
or
sbbb
insl
pop
ret
lret
or
daa
mov
xchg
mov
dec
inc
fisttps
and
adc
sahf
test
lret
sti
sbb
in
lahf
xchg
sbb
jo
mov
in
cmp
ficomps
cmpsl
out
stc
ss
xchg
subl
jbe
mov
cmp
aad
scas
push
mov
fcmovnb
dec
or
and
push
out
ret
and
pusha
pushf
mov
std
aad
cs
mov
gs
enter
inc
cmp
stc
or
and
pushf
or
fdivrl
dec
mov
stos
into
stos
dec
push
mov
es
jp
push
in
jb
mov
stos
pop
cmpsl
push
movsb
int3
cmp
rcrb
jne
mov
shlb
xor
mov
sub
test
int
aaa
push
shrb
or
sub
into
test
shll
sbb
cmpsb
add
icebp
jle
inc
fyl2x
inc
movsl
add
into
adc
dec
pop
or
pop
scas
jmp
subb
mov
lcall
pop
sub
pcmpeqd
xor
cli
xchg
sti
shr
imul
cwtl
stos
mov
shrb
add
xor
sti
aas
cmpxchg
fdivs
and
stos
mov
inc
lea
jbe
mov
out
loopne
and
xorb
inc
sub
dec
dec
lds
sbb
xlat
dec
mov
add
push
mov
push
xchg
mov
cmc
rclb
mov
jg
add
cmpsb
cmp
out
and
lods
loopne
call
aam
cmp
out
cmp
pop
repz
out
push
adc
outsb
cmp
cli
jl
push
add
test
jno
call
mov
faddp
in
add
rolb
shl
adc
cmpsl
inc
and
ret
dec
push
mulb
sbb
lcall
sti
insl
sti
ss
pop
ja
and
in
arpl
sbbl
jmp
cmp
in
andb
mov
insl
jge
sbb
into
mov
inc
pop
mov
push
cmpsl
or
std
mov
data16
sbb
sub
pop
nop
jmp
jne
mov
dec
mov
push
inc
loop
add
mov
mov
sub
fcomi
dec
sbbl
lea
or
mov
stos
ja
insl
test
dec
xor
pop
mov
sbb
add
push
sarb
lods
loope
popl
fs
js
xor
mov
arpl
inc
fcoml
frstor
in
push
cmp
daa
cli
xchg
sub
divl
jb
gs
sbb
fst
rcr
push
iret
pop
mov
jne
and
enter
call
lret
pop
jge
mov
outsl
test
lock
lods
mov
testl
out
mov
jge
shll
push
mov
jle
push
gs
xchg
mov
sbb
inc
push
cmp
xchg
jle
cmpsb
jns
or
pop
mov
or
pop
int3
jp
pop
lods
in
shrl
pop
bound
mov
leave
pusha
sbb
std
xor
sbb
in
sbb
or
xchg
sub
sub
aas
mov
je
inc
inc
popa
and
pop
xchg
bound
out
cmp
add
jp
dec
sbb
movsl
xlat
insl
popl
mov
nop
sbb
nop
les
push
push
rcrb
jg
mov
add
mov
icebp
stos
cmpsl
insb
jl
pop
add
movb
push
cmp
shl
bound
addr16
scas
push
and
jb
or
pop
leave
dec
xchg
sbb
aad
cmp
push
cmc
jmp
xlat
outsb
lret
mov
insb
ja
inc
montmul
cmpsb
subb
es
sub
dec
stc
cld
xchg
lds
push
and
xchg
add
mov
sbbl
jle
pop
in
adc
add
mov
sub
cmp
push
cltd
mov
jne
pop
and
jle
fwait
fwait
dec
sahf
fists
and
mov
lods
pusha
or
in
ret
xchg
sub
cs
push
lods
arpl
loopne
xor
push
cmp
ret
fsubrl
shll
mov
shl
loopne
mov
fwait
stc
data16
and
adc
fwait
je
push
cmp
pusha
addr16
out
sub
xor
ss
inc
fisttpl
loope
jae
das
sub
sub
jmp
sub
dec
cmp
xor
sub
mov
mov
outsb
fdivr
lret
inc
ret
pop
sub
and
adc
inc
stos
out
push
lret
pop
scas
mov
insb
sub
xor
das
fidivs
pop
aas
mov
sub
push
or
cld
test
es
dec
pop
or
pop
mov
xor
pop
adc
xchg
out
in
icebp
adc
call
out
xchg
movl
insb
jbe
pushf
cmpsl
dec
inc
aad
cmp
cmp
dec
jle
outsb
jle
pop
das
sub
cli
cmp
fildll
int3
scas
push
mov
push
fidivs
out
add
xchg
xor
mov
lock
in
push
call
jae
xchg
xor
dec
loope
movsb
lahf
ss
not
insb
fstpt
cmpsb
dec
push
jl
xor
xchg
cltd
xor
mov
cmp
fcoml
push
les
aam
mov
test
movsb
inc
dec
int3
in
pcmpeqd
add
pop
loope
adc
sbb
xchg
orb
out
adc
or
mov
movsb
clc
cmp
mov
xor
jecxz
mov
xchg
movsl
mov
push
inc
or
scas
inc
data16
ja
out
adc
xor
mov
mov
nop
sbb
in
ret
jae
mov
lods
int
push
xor
and
mov
lock
xor
sbb
pop
add
mov
inc
xchg
jbe
push
imul
popf
addr16
cltd
shrb
and
shlb
sub
in
xchg
jnp
test
scas
add
jno
xchg
mov
test
or
xchg
dec
dec
xor
jp
add
xchg
pop
lahf
inc
fcom
push
and
ret
repz
test
lds
or
xchg
sub
mov
push
sub
xor
sub
fwait
out
ja
sbbl
pop
sbb
stos
push
movsl
cmp
pop
aas
xor
test
jb
push
filds
or
cwtl
arpl
pop
mov
xor
stos
lods
add
lret
and
mov
mov
mov
fwait
mov
jecxz
in
and
jp
outsb
sub
ja
mov
pop
sbb
bound
cld
xor
iret
loope
xor
inc
scas
push
loopne
lahf
out
add
out
cmp
adc
add
jnp
mov
inc
sti
pusha
das
lahf
int
pcmpeqd
stos
xchg
dec
pop
je
aam
add
ds
iret
mov
cmpsb
mov
cmp
push
jns
cmp
call
or
sarb
fwait
popa
jg
fs
pop
out
mov
es
pop
divb
xchg
push
push
lret
adc
clc
loopne
mov
loopne
fsubs
mov
push
mov
add
or
jp
fwait
jge
fwait
shrb
add
es
sub
aad
sti
pop
fldenv
test
addr16
cmp
js
or
out
xchg
push
or
pushf
das
sbb
sbb
outsb
imul
inc
push
lods
and
aas
addl
lock
cltd
mov
fwait
sub
and
mov
and
outsl
adc
fs
mov
nop
dec
mov
lret
bound
inc
enter
jmp
sahf
or
lcall
fsubl
ljmp
rolb
pop
imul
sub
lock
leave
cmp
mov
call
scas
mov
lea
push
ljmp
icebp
les
add
cmp
ds
movsb
pop
loope
mov
imul
icebp
push
and
xchg
push
and
packuswb
cmpsb
sti
sbb
mov
and
dec
repnz
jns
ljmp
push
aas
and
es
movsb
arpl
add
jno
movsb
scas
fstl
andl
je
mov
roll
inc
jecxz
jo
test
inc
sbb
lahf
pop
movsl
jns
jge
into
mov
lret
dec
mov
scas
out
ja
inc
es
jl
je
adc
iret
mov
bound
shlb
cmp
lea
pop
or
mov
rcrb
add
pop
out
ljmp
pop
adc
testl
loop
fldenv
call
and
mov
mov
stos
mov
fcmovb
push
push
push
mov
ljmp
data16
cmp
into
popa
fcompl
cli
aam
aas
rcrl
mov
loope
cmp
in
gs
inc
out
xchg
bndldx
fdivrs
cmp
or
jmp
hlt
lods
mov
fstl
adcb
inc
es
lcall
push
ds
ficomps
sbb
mov
cmp
fimuls
lock
scas
jge
mov
data16
pop
dec
scas
sbb
das
adc
fstpl
xchg
mov
out
lea
jg
movsb
cmp
inc
daa
mov
iret
xor
inc
les
and
scas
push
xchg
dec
pop
sbb
mov
shrb
xor
jge
jecxz
les
fisubrs
add
rolb
push
add
sbb
mov
mov
icebp
jne
push
out
inc
fadds
cwtl
sub
pop
stos
pop
or
lcall
xor
shlb
mov
fistps
mov
outsb
rolb
pop
mov
jmp
je
xor
roll
stos
imul
cli
outsb
lock
mov
mov
mov
push
outsb
repz
push
fnstenv
mov
fdivrs
cli
inc
push
cltd
xor
mov
sbb
cmp
pop
icebp
loopne
cmc
cmp
ret
push
sbb
and
std
mov
inc
jno
cld
xchg
sbb
rcrl
shl
je
loop
xchg
pop
xor
mov
mov
xor
imul
lahf
mov
js
sub
xor
pop
adc
lods
inc
lea
std
scas
push
adc
jb
rol
mov
sarl
call
mov
fdivrs
fsts
add
xchg
les
or
lods
cmp
dec
repnz
sub
push
rclb
lds
stos
mov
call
xor
fdivrs
popa
add
add
insl
push
add
inc
xor
jmp
enter
int3
push
push
aas
call
jle
push
sub
jl
sbb
adc
dec
add
aaa
mov
adc
push
ds
cmp
adc
inc
sbb
ret
arpl
mov
pop
inc
inc
movsb
push
aaa
jno
mov
sbb
mov
push
xor
push
movsl
sub
xor
shlb
push
or
mov
mov
sbb
int3
arpl
ljmp
sbbb
xchg
cmp
fiaddl
cmp
in
dec
ds
pop
stos
jbe
daa
xchg
inc
pop
stos
cwtl
add
push
add
das
outsb
movsb
cmc
daa
inc
cmp
pop
lods
movsl
and
xor
clc
bnd
daa
xchg
push
mov
xor
xchg
push
lods
sub
mov
pushf
aaa
pop
xchg
mov
out
in
fldcw
push
fsubrp
inc
cwtl
jae
inc
sahf
jne
out
or
jl
daa
inc
add
jno
dec
cmpsb
les
aaa
add
inc
dec
cltd
lods
jmp
sbbb
jno
mov
fnsave
cmc
jp
js
lahf
mov
mov
iret
loop
test
or
jge
and
add
call
jae
ss
xor
stc
popa
mov
cmp
and
ret
iret
jecxz
ret
lret
add
mov
push
out
dec
stc
nop
xor
outsl
push
xchg
pop
scas
les
lea
jg
inc
mov
push
in
push
mov
mov
ffree
pop
vmread
stos
xor
shlb
sbb
add
mov
insb
add
rorb
pop
xchg
insb
add
fwait
sub
lret
cmc
sbbl
push
pop
cmp
add
sahf
sub
mov
sbbl
outsb
pop
inc
es
add
fisubrs
mov
sbb
push
bound
std
sub
das
jno
mov
scas
mov
pop
dec
sahf
das
adc
cmp
leave
add
mov
sub
js
mov
push
mov
shl
dec
lods
push
sub
mov
icebp
push
test
andb
xchg
adc
sub
bound
mov
std
ret
es
jns
idivb
push
inc
leave
pusha
ja
std
inc
mov
call
mov
ret
sbbl
int
or
push
xchg
mov
jg
daa
leave
imul
clc
repnz
int
stos
sbb
pop
shrl
out
push
out
mov
outsb
or
clc
movl
jns
inc
daa
dec
add
push
sub
inc
popa
data16
sub
pushf
ja
shlb
mov
push
fidivl
mov
mov
cli
and
mov
fmuls
jmp
imul
aad
test
aad
test
lods
pop
ja
vmulsd
mov
mov
mov
movsl
adc
or
icebp
push
jmp
jle
insl
stc
jb
mov
cwtl
lcall
outsl
bound
addr16
icebp
mov
out
rorb
dec
jecxz
add
push
sbb
cltd
xchg
imulb
mov
push
mov
xor
sub
aam
fmul
pushf
sub
adc
add
dec
cwtl
je
xchg
jg
shrl
mov
push
pop
sub
jl
out
movsb
cmp
mov
cld
lods
test
cmpsb
out
jp
dec
ljmp
mov
ret
ret
dec
iret
mov
sbb
shlb
fcmove
mov
js
jg
push
inc
xor
arpl
icebp
push
mov
rcr
sbb
mov
mov
mov
outsb
push
xor
mov
movsl
dec
jne
mov
notl
lret
rol
aam
scas
fcoms
sti
std
jecxz
outsl
jmp
cmp
test
sbb
cmp
and
negl
repnz
jmp
xchg
fimull
pop
js
push
stos
sub
cmp
jmp
or
fldcw
cmp
mov
pop
jo
add
inc
sbbl
repnz
sub
clc
and
pop
les
in
lock
mov
ficomps
sub
clc
dec
xchg
inc
popa
lds
fstpt
popa
xor
fisttps
mov
mov
jle
dec
fadds
mov
icebp
dec
mov
out
jle
jno
shrl
xchg
testl
data16
mov
push
insb
sbb
add
lods
sbb
loope
mov
test
into
cld
dec
lds
pop
push
mov
sahf
mov
movsb
or
pop
dec
cmp
xor
jg
push
sti
cmpsl
aad
adc
xchg
xchg
call
or
ljmp
daa
xchg
inc
jno
jge
ja
or
mov
mov
or
jp
std
lods
push
jb
sahf
mov
inc
sti
fs
notb
lret
xor
cmpsl
and
sbb
add
pop
adc
mov
out
shll
rcr
dec
cwtl
lea
add
shlb
cwtl
cmc
xor
notb
mov
in
lock
cli
jg
mov
repz
jmp
pop
rep
fmulp
jbe
and
cmp
mov
xor
popa
sub
adc
inc
xor
repz
lahf
cmpsl
or
daa
push
xchg
cmp
jb
insl
mov
jno
imul
test
mov
test
fiaddl
pop
shll
hlt
clc
das
pop
add
sub
pop
popa
movsb
cld
jecxz
cmp
stos
mov
lds
or
dec
pop
shl
adc
leave
pop
adc
push
jb
fnsave
rorl
fs
pop
cmpsb
mov
ds
divb
test
movsl
data16
in
aas
outsb
stc
inc
add
insl
dec
loopne
cmp
xchg
push
inc
cli
push
jne
gs
enter
push
fucomp
test
xchg
sub
aas
aad
lds
das
stc
or
fdivs
sbb
repz
xchg
fidivrl
sahf
addr16
xor
mov
divb
test
pop
push
sbb
mov
pop
xor
mov
adc
outsl
daa
inc
sbb
rol
pop
jno
mov
rcrb
mov
leave
aam
mov
xchg
out
test
inc
xor
fdivp
int3
ficoms
pmaxsw
adcl
icebp
es
repz
jmp
or
shll
adc
cwtl
add
test
fcompl
out
inc
xor
out
insl
imul
enter
and
ret
mov
cltd
nop
push
adc
scas
xchg
insl
fisttpll
sti
andb
fstp
lret
mov
inc
stos
adc
xchg
leave
icebp
jno
mov
add
jl
pop
addr16
cltd
test
je
insb
and
mov
mov
pop
jne
mov
roll
mov
in
fcoms
std
movl
rorl
sbb
pop
mov
sbb
jns
inc
mov
xchg
daa
cwtl
sbb
push
mov
jae
arpl
push
mov
outsl
in
sub
jae
loope
jp
mov
push
xor
orb
daa
into
pop
push
mov
fsubrs
std
js
dec
jae
jg
inc
fiaddl
jg
fistl
cmp
mov
cmpsb
dec
popf
into
lea
dec
sub
stc
dec
push
lods
aad
xchg
sbb
stos
xor
inc
loop
pop
adc
push
add
imulb
int3
pop
push
movsb
pop
mov
repnz
add
iret
pushf
test
ljmp
ret
pop
dec
cli
xchg
inc
scas
dec
push
mov
add
sub
fcomps
cltd
aam
and
in
rcrb
jecxz
push
hlt
dec
cmp
sub
add
push
lret
mov
cltd
out
shr
and
adc
push
cmc
or
mov
xchg
pop
mov
mov
cmpsl
imul
jle
lods
in
aas
push
xchg
inc
test
add
inc
fisubs
insl
and
pusha
subb
dec
xlat
sub
fcmovu
movsl
pushf
xor
call
ret
and
js
or
pop
sahf
addb
stos
mov
outsb
xchg
lds
mov
inc
js
and
popa
flds
leave
pop
cmp
jae
mov
inc
das
pop
xor
lea
loope
std
inc
cmp
stos
mov
mov
fisttpll
mov
pusha
mull
test
ja
fidivl
xchg
fwait
test
add
sti
xor
int
stc
xchg
test
fisubrl
gs
sar
sbb
pop
xor
rcrb
dec
fs
pop
fidivs
adc
pop
or
les
sbb
push
dec
push
imul
in
popf
in
movsb
push
loope
mov
addb
outsl
xchg
rcr
daa
mov
stos
rol
jae
pop
test
out
xor
mov
iret
mov
mov
sub
cwtl
shlb
pop
insl
mov
add
imul
dec
xchg
sub
sub
mov
mov
fbstp
stos
lret
or
test
mov
popa
mov
adc
jecxz
xchg
push
lret
loopne
mov
or
mov
rolb
cmp
popf
xor
pop
insl
mov
outsb
lods
sub
jns
sbb
cltd
inc
mov
adc
loope
and
mov
xchg
jae
xchg
lea
mov
je
int3
fmull
or
shl
and
jle
push
push
mov
jecxz
inc
mov
iret
cwtd
sub
movsb
scas
xor
popf
hlt
sbb
dec
xchg
dec
cltd
rcll
leave
ja
or
adc
enter
mov
jl
xor
and
lahf
dec
lret
in
sti
mov
leave
ret
loopne
mov
jae
push
repz
loope
std
cmpsl
dec
ljmp
out
xchg
movsb
sti
jmp
fs
mov
or
jbe
mov
and
test
pop
inc
add
mov
in
cltd
jg
pop
mov
sbb
roll
adc
lahf
hlt
adc
ret
dec
add
out
jecxz
out
fisubrl
mov
xor
sbb
adc
mov
xchg
in
std
and
cmc
xchg
push
push
mov
and
xchg
mov
daa
xchg
data16
dec
lods
inc
pop
jmp
mov
stos
fdivl
dec
push
xchg
jo
push
testb
pop
lahf
pop
insb
add
insl
scas
rcrb
pop
sub
push
inc
cmpsl
out
push
pop
fidivrl
cld
sub
imul
aas
dec
outsb
adc
lret
pop
aad
shlb
lret
push
cltd
push
push
int3
jne
sahf
jg
push
jo
sub
mov
clc
sub
ja
adc
shrl
sbb
mov
adc
scas
adc
cld
insl
jnp
adc
ror
lea
test
cld
and
das
outsb
stc
or
cmp
loope
dec
pop
pop
mov
pushf
repnz
mov
adc
lods
jg
shll
mov
jne
cmp
or
cmp
cmp
pop
pop
fildll
push
mov
je
or
push
adc
arpl
movsb
jo
addr16
sbb
adc
jo
adc
add
or
push
cmpsb
mov
shll
fcoml
xchg
mov
dec
mov
enter
xchg
inc
mov
dec
aam
inc
data16
aad
mov
stos
jmp
outsb
mov
in
jmp
sbb
stos
push
inc
mov
sbb
jo
push
shl
ja
popf
subw
lods
stos
pop
add
push
enter
or
cmpsb
decl
lods
mov
and
mov
jnp
lret
sub
movsl
movsb
dec
loope
in
fcomip
es
lret
mov
enter
lcall
and
lods
mov
movsl
sub
in
push
out
cmpsl
push
sub
mov
pushf
out
and
push
adc
push
add
js
push
pushf
push
mov
jmp
mov
mov
lods
jae
dec
lock
lahf
push
mov
outsb
cmp
cmp
xchg
outsb
leave
or
shll
jb
cs
add
pushf
inc
add
mov
pop
pop
cwtl
fbld
lret
ds
sbb
fsubrs
test
xor
sarl
jl
add
loopne
push
mov
or
mov
adc
and
and
rcll
sub
call
repz
fmulp
data16
pop
or
sub
mov
frstor
and
mov
cmc
inc
push
orl
xchg
addr16
mov
push
cmp
and
out
pusha
ss
dec
mov
xor
stos
mov
mov
lods
cli
insl
mov
mov
inc
push
mov
ljmp
pop
testw
and
pusha
and
addr16
mov
cs
in
into
clc
call
add
orb
jle
ja
jle
push
xor
adc
jo
mov
fidivrs
clc
sub
sub
popa
push
xchg
mov
xchg
add
pop
lock
or
mov
bnd
cmp
sbb
cltd
dec
sbb
loopne
cmp
mov
pop
push
mov
jb
mov
stc
push
mov
xor
imul
fwait
stc
into
test
push
sahf
inc
out
rcr
inc
dec
cmp
rorb
popf
das
insl
lcall
push
cld
push
scas
ds
cs
inc
dec
ljmp
mov
insb
in
sub
pop
add
mov
xchg
mov
fwait
pop
xor
xchg
jns
fsubr
outsl
dec
mov
in
sub
inc
stc
pop
std
sbb
jg
mov
cmp
adc
push
and
adc
dec
sub
lret
pop
sub
aad
xorl
push
addb
or
jb
mov
xor
push
fnstsw
lock
arpl
jmp
push
add
pusha
cld
fwait
or
add
shrl
data16
out
js
test
rcrl
cmp
jmp
add
sbb
mov
sub
mov
cwtl
add
je
ss
sti
push
and
add
inc
mov
xchg
enter
test
jecxz
xchg
mov
mov
push
andb
test
and
or
daa
cmp
jle
sub
in
test
ljmp
lcall
sub
sub
out
cs
push
xlat
repnz
sarb
pop
test
lods
mov
cld
or
scas
mov
jp
cmpsl
sbb
in
sub
xor
stos
out
dec
push
lods
xchg
fdivrl
push
andb
into
andl
fdivrl
cwtl
test
inc
dec
push
xor
pop
insb
and
cld
repnz
jne
xor
jp
inc
jno
pop
cmp
int3
push
inc
fs
mov
jb
mov
mov
or
fprem
mov
cli
imul
ret
xchg
cmp
inc
sbb
stos
or
incl
les
testb
mov
repz
add
repnz
adc
mov
aas
push
or
lds
sub
scas
out
insb
inc
cmpsb
jp
popf
and
dec
mov
or
jp
sub
out
xchg
lret
cld
pop
call
cmpsb
pop
and
cmc
stos
in
and
cltd
test
aam
fistps
mov
pop
mov
adc
mov
mov
cmc
mov
fcomps
mov
test
cmp
push
pop
jns
or
mov
mov
adc
orb
dec
and
sub
arpl
scas
clc
sahf
push
jmp
fnstsw
push
clc
ficoms
ficompl
cmp
cwtl
ss
psrlq
aam
cmpsb
or
leave
and
insl
in
pushf
xchg
bound
je
or
sti
shlb
nop
dec
out
mov
into
or
cmp
shlb
shrl
xor
mov
lahf
scas
inc
int
mov
adc
rorb
lock
push
into
xchg
push
jle
sub
cmp
cli
out
mov
push
xchg
xchg
and
aad
roll
sub
mov
pop
xchg
push
sub
pop
scas
scas
sbb
cmp
sbb
or
sbbb
fcoms
sti
mov
icebp
outsb
sub
dec
das
cmp
add
push
xlat
das
inc
repnz
jg
or
jle
loopne
and
iret
or
mov
add
pop
push
jno
out
int
pop
or
and
add
xchg
push
inc
in
xchg
imul
mov
mov
pop
arpl
mov
int
mov
sti
pop
insb
pop
out
cmp
call
pop
stos
sub
sub
out
es
int3
arpl
pop
xchg
out
scas
sub
jg
imul
inc
sbb
outsb
int
dec
out
popa
xor
dec
pop
cmp
aam
rcll
popf
enter
fisttpl
movsb
loopne
lods
sbb
push
sub
in
inc
fisttps
dec
loop
cs
pop
ljmp
dec
js
inc
stos
push
jno
lret
lret
mov
xor
mov
aad
and
xor
xchg
jmp
mov
scas
loopne
out
push
mov
xchg
mov
test
je
arpl
adc
xchg
add
lcall
outsb
inc
gs
aas
and
push
cld
dec
mov
aas
adc
xor
pop
xor
push
mov
fldenv
push
in
sti
or
ss
test
mov
and
sub
in
cmc
repz
fst
stc
or
or
sbb
xor
add
mov
enter
inc
gs
add
lea
jge
push
mov
out
lock
sbb
std
aaa
xor
xchg
and
inc
ret
push
mov
hlt
xor
xor
xor
loope
repz
shll
mov
into
gs
aas
scas
inc
std
xchg
sub
lds
into
int
test
fdivrl
bound
lret
mov
sub
cmpsb
xor
and
sub
xchg
js
mov
add
js
fcomip
push
pop
and
pop
lret
js
mov
mov
xor
lds
add
cmp
or
xchg
mov
and
lcall
out
mov
int
xor
xlat
mov
mov
push
in
dec
ljmp
xchg
push
out
dec
nop
adc
mul
push
add
rolb
dec
cmpsl
sbb
loopne
frstor
pop
fdivrs
dec
fbstp
das
cmp
data16
outsb
xchg
add
mov
es
daa
xchg
divb
js
je
je
xor
xor
hlt
aas
sarl
jb
sub
js
mov
xor
xchg
pop
out
sti
clc
or
jno
lret
mov
aaa
push
lods
mov
hlt
mov
movsl
jl
out
xchg
sbb
rcrl
movsb
pop
les
cli
xor
dec
pop
nop
stos
xchg
cmpsb
inc
out
dec
inc
push
xchg
aaa
pop
push
sti
and
test
mov
cs
int3
lret
sarb
push
push
outsb
xor
sub
dec
add
leave
mov
popf
pop
pop
pushf
adc
lods
enter
push
bound
scas
incb
jmp
inc
sar
add
mov
les
jns
fstl
adc
jge
mov
in
pop
or
push
aas
mov
mov
testb
mov
daa
push
jae
inc
aaa
jge
bound
lods
fcompl
sbb
lret
imul
lahf
jo
jmp
loopne
add
cwtl
xor
mov
icebp
pop
les
cs
dec
jge
shlb
inc
inc
mov
inc
es
pop
ss
jo
or
outsb
mov
adc
pop
fisubrl
pop
fnsave
sbb
push
push
testb
push
fwait
sub
inc
icebp
aaa
cmp
adc
adc
fnstenv
sbb
push
leave
cmpb
or
push
cmpsb
leave
or
dec
cli
sub
lock
or
ljmp
scas
lods
cmp
pushf
jmp
pop
loope
lret
mov
pop
mov
ret
loope
mov
cmpsl
popa
dec
enter
fcoms
std
sbb
dec
adc
mov
popa
push
pop
cld
aad
ljmp
mov
outsl
inc
xor
cltd
std
add
xor
outsl
movsb
subb
ret
pop
imulb
cltd
push
and
pop
dec
btr
jle
aad
jp
xchg
pop
shrb
dec
add
xchg
idivl
lea
andl
ret
fidivrl
pop
push
movsb
dec
xor
xor
leave
mov
cmpsl
and
loope
mov
jecxz
in
jle
push
movsl
jmp
push
je
rcll
nop
sub
orb
or
mov
dec
shrb
xchg
fisubrs
mov
jg
sub
clc
je
mov
xchg
enter
lock
hlt
mov
inc
xor
into
mov
dec
jecxz
push
rcll
out
std
icebp
cmp
dec
loop
inc
lods
js
into
cs
jl
js
cld
movl
sbb
test
ss
push
xchg
xor
dec
jmp
mov
mov
pop
mov
xchg
fdivp
cmp
cmpsl
in
hlt
push
std
dec
mov
mov
mov
fcomi
inc
dec
cmp
xchg
mov
sbb
pusha
adcb
popa
rolb
mov
or
psrlq
pushf
imul
data16
sub
ljmp
je
gs
loopne
push
dec
mov
sbb
loop
sbb
jge
dec
push
sub
int3
stos
or
insb
int
popf
mov
or
mov
adc
fists
outsb
into
xchg
cmpl
rclb
stc
adc
mov
fisubrs
mov
xor
and
add
mov
stos
jns
push
scas
jecxz
loopne
xchg
gs
xchg
and
rcrb
mov
je
lret
outsb
ret
push
push
inc
push
rdtsc
rcrb
fldl
loop
in
mov
jmp
add
test
out
inc
xlat
cli
mov
xor
cmp
mov
das
xchg
iret
dec
cmp
lea
dec
mov
inc
sub
icebp
and
shlb
jnp
xchg
xchg
xor
push
sub
fsubr
pushf
insb
rorb
arpl
jp
inc
mov
loope
mov
mov
xchg
aam
daa
lret
cmp
lret
addb
jecxz
xchg
mov
adc
jns
or
rolb
add
mov
int
jg
mov
xchg
push
xchg
shll
lds
dec
jecxz
mov
adc
gs
mov
inc
xchg
cwtl
add
insl
push
adc
int
into
adc
xor
int
mov
movsl
mov
xor
or
pop
cmp
pop
loopne
insb
mov
xchg
popa
add
sub
push
fwait
shll
cmp
lea
mov
sarl
add
aaa
xchg
push
push
hlt
arpl
fldcw
mov
pusha
movsb
cmp
jae
add
cmpsb
adc
scas
mov
in
insb
jle
add
sub
xchg
loope
test
or
icebp
insb
dec
xlat
jns
imul
xchg
arpl
test
mov
js
jmp
cmp
je
cmp
popa
sbb
cmp
mov
data16
aam
imul
jns
test
stos
fimull
in
cmp
inc
and
bnd
adc
bound
xor
adc
sub
or
jbe
outsl
adc
out
repz
fbstp
push
adc
mov
or
xchg
ds
out
test
loop
xchg
scas
int
and
cld
xchg
or
stos
in
push
hlt
mov
push
cmp
pusha
mul
mov
rclb
push
mov
sub
or
push
sbb
sbbb
cmp
insl
add
xchg
mov
pop
jbe
bound
jns
mov
pop
adc
push
inc
inc
aaa
pop
icebp
int
push
movsl
clc
jp
cmp
dec
in
test
lcall
and
shrb
lds
pop
cmc
lods
sbb
pop
je
sub
pop
icebp
sbb
adc
hlt
aam
jae
mov
cld
jnp
xlat
lods
sbb
scas
inc
data16
and
dec
cmp
cltd
xor
mov
xchg
jbe
xchg
push
pop
inc
fimuls
jo
out
fsubrs
in
add
icebp
stos
and
and
out
push
sarb
mov
lea
dec
in
cltd
bound
jge
cmp
and
out
jmp
cmp
lds
pop
or
sub
cmp
adc
mov
popa
fmul
arpl
xchg
mov
cs
push
mov
xchg
xor
out
sub
push
jmp
jp
xchg
sub
mov
rclb
inc
loope
add
addr16
xchg
push
inc
fnstcw
cmpsb
cmc
xchg
sub
stc
stc
nop
sub
dec
jl
pop
scas
es
mov
jmp
adc
out
cmp
outsb
or
xchg
sahf
test
clc
icebp
mov
icebp
mov
cmpsb
jns
mov
jbe
dec
in
rorb
adc
aas
inc
xor
mov
mov
ret
repz
pop
imulb
adc
sub
pop
adc
add
lods
inc
pop
add
arpl
push
cli
lcall
sbb
dec
push
jmp
push
inc
fnstsw
xor
mov
fists
adc
pop
jg
fdivl
hlt
mov
scas
dec
loope
loope
test
aaa
xor
jnp
inc
stos
inc
js
sahf
xor
lret
add
cwtl
and
sarb
stos
inc
and
leave
pusha
ja
and
mov
fprem1
mov
lretw
xor
xchg
bound
sbb
es
aaa
into
pop
dec
xor
jns
push
in
pop
cmpsb
mov
hlt
dec
inc
xlat
subb
adc
iret
data16
push
or
pop
xchg
ss
enter
pop
xchg
nop
sub
or
mov
negb
outsl
mov
xchg
sub
out
ret
lds
xchg
mov
inc
fcoml
shlb
int3
xchg
add
std
mov
lods
push
xchg
lock
lret
mov
cli
push
jp
mov
mov
push
xchg
int3
arpl
iret
mov
push
fsubrs
and
in
or
sub
repnz
in
test
sub
iret
xorb
fdivrl
aaa
ja
testb
jle
mov
adc
cld
xchg
xor
jmp
xchg
sub
cli
xchg
mov
fldcw
push
mov
ss
or
jle
scas
pop
mov
xor
fisubrl
pop
repz
add
stos
mov
fldt
and
jl
sbb
in
push
pop
aaa
mov
pushl
mov
pusha
testb
mov
jae
cmp
push
or
out
movsl
cmp
xlat
cmp
add
out
scas
out
fistpll
jo
push
mov
cmpl
mov
imul
add
jmp
lds
jo
push
push
push
inc
notb
xchg
sub
cmp
or
imul
inc
fxch
push
sbbl
mov
adc
aam
xchg
dec
inc
push
lods
jb
and
add
mov
je
sbbl
lea
mov
test
cwtl
das
or
sbb
or
mov
or
push
std
xchg
aam
enter
pop
pusha
out
xchg
into
xchg
sub
xorl
pop
data16
inc
xchg
int3
jno
add
es
xchg
rorl
mov
jg
inc
data16
pop
xchg
loopne
cmp
push
mov
aas
pop
stc
nop
out
hlt
mov
test
cltd
mov
imul
in
pop
hlt
pop
lea
rorb
sub
xor
sbb
enter
daa
pop
add
es
sub
std
push
popf
das
orb
sti
lods
inc
sub
sbb
mov
movsl
adc
mov
jno
movsb
jecxz
dec
adc
adc
js
test
jg
icebp
lods
add
xor
fildll
sbbb
push
cmp
dec
jl
pop
mov
mov
repz
out
cmp
fidivs
mov
adcb
pop
mov
xchg
inc
add
into
mov
add
push
mov
test
adc
and
dec
loopne
mov
sbb
dec
push
cmp
lds
xlat
outsb
lds
vmovhpd
lea
mov
mov
ficomps
jne
jnp
fsub
clc
or
subps
mov
repz
sbb
scas
dec
daa
mov
pop
insb
ss
lds
idivl
push
scas
sub
pop
shl
jns
les
mov
sbb
js
add
add
sbb
jmp
es
push
iret
insl
dec
fidivs
and
jns
sbb
inc
xlat
std
roll
xchg
push
sbb
jo
dec
lods
inc
jmp
jl
push
and
jnp
rorl
jbe
sbb
mov
out
xchg
insb
adc
inc
cmpb
or
mov
pop
mov
movsl
clc
gs
sbb
cmc
mov
imul
pop
or
mov
add
mov
jp
nop
stos
mov
xchg
sub
jb
mov
shr
cmc
jnp
mov
lret
ljmp
stos
popf
sbb
in
mov
cli
xchg
popf
or
ds
or
mov
jecxz
cmp
pop
jmp
sub
mov
gs
push
movsl
fcoms
sbb
sub
fdivl
std
cwtl
scas
cs
ljmp
out
mov
aam
sub
jae
push
call
movb
jns
jo
push
lcall
jbe
push
and
dec
arpl
cmp
sbb
cmc
jo
ljmp
xor
xchg
imul
loopne
mov
fnstsw
setae
push
lds
push
movsl
gs
xchg
pop
xchg
cmp
xor
out
or
popf
pop
fidivrs
push
adc
or
xor
outsb
addr16
test
test
inc
push
fadds
or
sub
bound
fbstp
test
mov
push
out
xlat
mov
pop
test
into
cmp
js
out
lods
xor
bound
hlt
xchg
lods
ss
mov
push
call
or
mov
sbb
push
xchg
add
int3
jmp
pop
sbb
flds
sahf
lock
mov
and
repz
mov
sti
es
add
mov
sti
in
add
xlat
xor
push
test
loopne
mov
pop
mov
inc
ret
pop
out
inc
cmp
repnz
pop
sub
push
or
add
push
sbb
sbb
jmp
insl
cmp
pop
xchg
add
add
jo
adc
jbe
adc
xchg
aaa
xchg
imul
push
aas
popf
mov
jae
push
outsl
popf
jp
pop
lock
xor
aaa
or
in
lahf
ret
ljmp
push
lods
test
cmp
add
cmp
and
pop
adc
sarb
mov
filds
subl
subl
jns
jns
fdiv
lret
sahf
adc
fmull
in
mov
arpl
loop
rdtscp
pop
mov
psubw
fldt
push
ljmp
cmpsl
pop
or
popa
cmpsb
fcompl
pop
iret
sub
or
loop
sub
adc
jne
lock
mov
sbb
repz
ja
rorb
pop
mov
add
mov
scas
push
jno
push
out
push
sbb
rolb
pop
fwait
push
xor
fs
mov
xor
and
push
into
aaa
push
sbb
je
mov
aas
jno
push
xor
imul
sbb
push
fdiv
dec
out
mov
and
pop
int3
push
push
mov
inc
mov
adc
pop
rcrl
pop
or
decl
push
push
loopne
xchg
inc
fidivl
out
jmp
rclb
call
adc
or
xor
arpl
arpl
sub
pop
testb
in
dec
lds
in
cmp
pop
sub
insl
mov
jge
mov
sub
sarl
jp
popf
pop
mov
jns
jo
mov
mov
push
push
mov
nop
fs
es
gs
push
push
mov
fs
pop
icebp
arpl
cmp
and
add
xchg
aaa
jl
mov
dec
pop
pop
out
push
outsl
push
loopne
addl
pop
or
outsl
xchg
pop
enter
jno
les
fldenv
inc
cli
xor
mov
and
mov
pop
jne
out
xor
iret
inc
jne
fnstsw
dec
and
pop
pushf
addb
push
insb
add
bound
sbb
jge
stc
aas
inc
gs
mov
mov
push
loopne
inc
insb
add
ret
jecxz
enter
jp
or
dec
shrb
fs
fimull
mov
mov
xchg
adc
fstpl
mov
dec
sbb
mov
retw
push
xchg
rorb
mov
and
push
jns
imul
xchg
jbe
sub
fldl
cltd
pop
int3
daa
cld
mov
push
cmp
push
pop
push
sbbb
xchg
sub
mov
rcll
test
sub
pop
lods
aaa
push
cs
gs
mov
stc
pop
aas
repnz
cmp
mov
xchg
rcrl
pop
stos
aad
pop
xlat
int3
jns
rcll
jl
rcrb
pop
add
cmpsb
je
xchg
dec
in
shlb
pop
out
sbbl
movl
and
movsl
imulb
add
outsb
lahf
jp
into
fs
ja
and
pop
fs
mov
sub
sub
mov
bound
addr16
sahf
xchg
mov
adc
je
dec
in
xchg
xchg
pop
adc
sub
negl
in
xor
ds
jbe
jno
mov
fldenv
dec
movsl
pop
xlat
dec
das
loope
divb
mov
sbb
sub
inc
mov
dec
pop
int
pop
out
pop
scas
pop
enter
fidivl
nop
inc
mov
xor
pop
icebp
pop
popa
or
adcb
clc
xchg
orb
and
adc
jae
jbe
mov
cld
jae
aad
fcmovne
bound
aaa
in
xor
and
adc
mov
mov
fidivrl
mov
fcompl
fdivrs
cmp
jo
dec
push
cs
lods
push
dec
sarb
mov
dec
pop
inc
es
mov
pop
cltd
push
shlb
cmp
pop
jp
daa
loope
push
mov
xchg
divb
cld
adc
dec
test
lret
and
out
jo
pushf
rorb
mov
mov
rclb
xchg
pop
ret
les
add
xor
addr16
cmp
cmpl
lret
aam
loope
dec
ret
enter
inc
mov
mov
adc
filds
inc
mov
dec
jo
mov
push
pop
jo
pop
inc
mov
ss
inc
xchg
mov
loopne
pop
cmp
fisttpl
sbb
scas
jl
dec
add
cs
aad
xchg
ja
mov
mov
mov
flds
es
into
test
mov
add
xchg
sub
std
add
ret
adc
ljmp
daa
in
fwait
jge
sub
sahf
dec
add
cmp
inc
fisubl
js
jmp
sbbb
mov
xchg
jge
stos
cmp
stc
fists
out
out
mov
mov
orl
pop
sbb
ds
iret
adc
fcoms
daa
gs
add
and
jo
mov
sub
jne
fwait
xor
jle
mov
clc
pop
add
cmp
pop
or
imul
insb
lea
dec
push
pop
ja
pop
les
aad
int3
pushf
nop
shlb
mov
lret
pop
sarb
sbb
out
cltd
xor
test
and
loope
mov
mov
cld
das
in
pushf
jae
sbb
add
jns
push
cmp
xor
pop
sub
mov
stc
sub
add
in
mov
sbbl
inc
mov
add
xchg
xchg
addr16
jg
and
xchg
xchg
iret
mov
push
lods
xchg
add
jg
add
std
outsl
jb
in
cmp
adc
rorl
inc
add
push
cmp
xchg
mov
push
or
js
js
cmc
dec
in
pop
leave
dec
or
shll
and
outsb
ja
dec
lods
cld
xchg
fisttps
ss
and
fnstsw
loopne
fisttps
mov
xor
loope
cld
and
sub
inc
insl
dec
bound
dec
mov
xor
or
gs
push
jle
inc
mov
xor
pop
ret
pop
ret
cmp
out
dec
lahf
dec
stos
pop
sti
cmc
inc
jp
stc
push
sbbl
pusha
add
sub
and
fidivs
scas
mov
pop
push
aam
sbbl
adc
cmp
pop
xor
push
mov
inc
and
int3
pop
imul
cwtl
xor
aam
sbb
icebp
popf
and
stc
js
lahf
cmpl
incl
adc
stos
inc
shll
xor
mov
rcll
test
inc
daa
mov
mov
sub
adc
jb
push
push
add
ficoml
ds
movsl
outsl
add
sbb
sbb
pop
push
xor
and
ret
push
lea
push
mov
movsl
mov
pop
or
pushf
xchg
xchg
lahf
mov
add
adc
and
and
dec
jbe
rorl
and
mov
fisubs
lahf
pop
xlat
pushf
imul
fcmovnbe
dec
loope
fnstenv
fdivrs
mov
cli
mov
sbb
mov
mov
cmpsb
fistpll
jecxz,pn
data16
fs
clc
test
adc
insb
addb
jno
scas
dec
rcll
out
pop
mov
sahf
push
pop
movsl
or
insb
clc
ret
lea
xor
push
push
pop
repz
cli
push
inc
das
repnz
fdivrl
xor
or
sbb
in
adcb
mov
add
jge
push
mov
cli
sbb
cmpsb
mov
sub
push
cwtl
in
repz
adc
xor
add
mov
inc
addb
outsl
daa
xlat
dec
js
movsl
arpl
add
stos
jbe
xchg
dec
out
jl
rcrb
rol
sbb
out
movsb
fldt
adc
lahf
scas
pop
and
inc
ret
fsubrs
out
dec
xchg
sub
cvttps2pi
lahf
dec
jmp
jno
aas
xchg
aas
lret
inc
test
sti
stos
shll
loop
inc
enter
mov
cmc
pop
cs
out
aas
mov
nop
push
cmp
fiadds
jae
pop
push
mov
cmp
jbe
pusha
inc
jge
jno
dec
nop
mov
scas
pop
xor
jg
jg
ret
pop
mov
movsb
les
popl
mov
jge
mov
and
shl
mov
mov
push
mov
fldt
mov
sti
iret
dec
shr
add
lods
xor
icebp
sub
or
stos
movsl
in
pop
or
dec
mov
stc
sub
rorb
push
int3
cmp
lahf
xchg
jne
add
jnp
sbb
jg
cmp
aam
dec
lcall
xchg
sbb
sbb
xchg
es
push
enter
or
pop
ljmp
rep
test
enter
mov
ffreep
dec
call
mov
sbb
ja
jp
mov
stc
push
arpl
clc
es
mov
mov
cmp
clc
iret
and
lret
sub
mov
or
loop
int3
push
adc
inc
fsts
movsb
addr16
pop
or
rorb
mov
roll
in
ss
and
gs
dec
fstp
jb
push
mov
inc
inc
pop
iret
dec
mov
test
fiadds
pop
orl
inc
jb
push
jl
dec
inc
jb
fdivs
dec
lahf
adcb
cli
dec
push
push
in
addr16
and
cmp
sbb
xchg
aad
daa
dec
out
test
mov
repz
jbe
add
jg
cltd
pusha
test
jmp
xchg
jle
and
fstpt
mov
repz
rclb
pop
push
test
loope
mov
rorb
cmpsl
jne
mov
xchg
or
push
mov
les
movsl
fisubrl
push
lret
mov
sbb
cmpsl
test
sbb
fimull
loope
xchg
ficoml
test
or
mov
lahf
stos
inc
cli
pop
pusha
leave
dec
lret
push
sahf
sbbl
add
or
rolb
inc
mov
push
fildl
loopne
sub
scas
dec
mov
pop
sbb
cmpsl
push
subl
push
xchg
int3
pusha
jb
xchg
mov
out
and
jge
rorl
push
adc
sub
cmc
xor
sbb
hlt
add
push
add
jb
leave
and
cmp
ds
mov
adc
lods
or
and
mov
pop
sbb
fistps
test
out
jne
jge
lcall
mov
sbb
cmc
mov
fs
or
xchg
pusha
gs
push
dec
cmp
aaa
fdivl
pop
adc
jo
scas
sbb
inc
sahf
je
xchg
sub
fbstp
in
mov
mov
test
xchg
add
xchg
dec
test
mov
es
stos
subl
push
sbb
stos
and
push
call
xchg
jno
int
rcl
mov
shrb
sbb
int
repnz
add
sbb
xor
and
fcoms
sbb
pop
dec
int
outsl
shrb
dec
rcrl
or
addr16
fisubl
or
or
sub
cmc
loop
ret
mov
mov
push
es
mov
inc
adc
cmp
adc
jae
jnp
xchg
xor
mov
adc
adc
test
pop
mov
sub
sbb
imul
push
pop
inc
ret
gs
cltd
das
std
xchg
and
inc
mov
ss
aad
ja
xor
loope
idivb
loopne
vpaddw
cli
out
out
xchg
ja
mov
movsl
pop
rcr
mov
loope
roll
mov
out
cmc
push
enter
mov
aam
into
loop
dec
fdivl
sub
loop
pop
add
mov
incl
cltd
and
sbb
aas
xchg
pop
jge
bound
imul
xorb
inc
hlt
out
inc
bound
add
scas
je
dec
in
inc
xor
xor
mov
add
jno
loopne
xchg
lea
mov
movsb
push
addl
mov
addr16
in
mov
ljmp
and
jo
or
in
int
imul
push
dec
cmpsb
mov
fcom
adc
lret
sti
mov
xlat
fsubs
or
xchg
push
mov
out
lds
jno
shll
sarl
sbb
mov
insl
leave
push
jmp
loopne
mov
pop
lret
ret
test
lret
sub
rcrl
and
mov
push
call
in
jg
sahf
mov
decl
adc
xchg
jl
adc
sbb
mull
add
mov
adc
fldt
addb
jns
testl
or
jns
cmp
mov
dec
adc
lcall
ss
lds
lods
fcoml
dec
or
jo
les
push
cmp
cmp
mov
inc
cmc
les
mov
fcompl
or
pusha
fadd
cmp
push
sbbb
stos
loope
sub
adc
sub
ljmp
ljmpw
xchg
xchg
aaa
stc
das
cltd
mov
jecxz
adc
pop
movsb
orb
and
add
imul
xchg
test
cmp
add
cltd
out
jns
and
notb
mov
jmp
std
shrb
testl
scas
ret
xor
mov
jle
ljmp
icebp
sti
fstps
mov
or
cmp
cs
jmp
js
addr16
or
xor
int
xchg
cmp
out
and
in
and
cs
mov
dec
sbbb
imul
sahf
dec
scas
jne
popf
xor
aas
ret
adc
jb
aad
ljmp
cmp
mov
cmp
rcrb
dec
sub
jns
in
rclb
movsl
movl
xchg
mov
or
inc
pop
push
addr16
jecxz
jno
into
aaa
jae
int3
cmp
lret
bound
adc
xchg
xchg
mov
outsl
movsb
mov
hlt
dec
rcl
lcall
sub
lods
subb
test
mov
or
mov
add
push
mov
jecxz
fwait
adc
push
lret
pop
into
movsb
filds
lret
loope
jmp
iret
daa
pop
rcl
or
mov
mov
add
pop
xchg
ljmp
xor
dec
and
jb
inc
cmpsb
mov
ret
mov
xchg
adc
aad
add
and
xor
xlat
outsl
mov
xchg
mov
lahf
push
pop
dec
sti
pop
jns
inc
inc
push
fiaddl
loopne
dec
xor
cmp
mov
cmp
gs
addr16
cmp
test
sarb
inc
std
inc
frstor
arpl
aaa
xor
add
arpl
dec
inc
push
call
je
stos
repz
imul
mov
popa
scas
xor
dec
pop
lret
pop
mov
pop
pop
out
pop
lahf
cmp
add
xchg
mov
push
inc
fldl
inc
enter
xlat
push
inc
xor
push
daa
cmp
cmc
add
xor
mov
adc
clc
je
lods
dec
mov
es
mov
and
jne
dec
push
sub
div
xor
push
jb
jg
ja
in
jle
dec
mov
sub
sbb
pop
hlt
pop
xchg
imulb
and
loope,pt
arpl
and
sbb
bnd
sub
pop
mov
insb
int3
inc
push
jl
and
lahf
pop
movsl
sahf
inc
leave
dec
sbbl
mov
scas
popa
xor
xchg
js
jle
bound
mov
jl
rcrl
push
jb
arpl
inc
mov
mov
in
mov
pop
or
xlat
outsb
mov
fdivp
fcoml
call
lret
rorl
sub
nop
mov
lods
jb
sub
jg
mov
repz
sub
ds
in
mov
fnsave
xor
in
mov
lods
sub
icebp
sbb
adc
push
movsl
test
mov
and
dec
dec
les
fstl
push
cmp
sbb
add
jmp
mov
push
movsl
add
jns
outsb
mov
push
ds
lds
pop
mov
jb
loop
pop
addb
mov
sti
in
sbb
out
out
cmp
sti
jo
sbb
dec
outsl
mov
cmp
sbb
in
std
and
dec
icebp
stc
dec
loop
ficoml
cmpsl
mov
and
jb
inc
and
and
or
mov
dec
and
aas
jo
sub
sub
adc
jecxz
jbe
cs
add
xchg
mov
push
addb
add
xor
xor
fistl
mov
mov
dec
aad
mov
fisttpl
jmp
adc
sahf
js
or
push
es
push
xorb
popa
xchg
xchg
ss
mov
xchg
sub
gs
daa
xchg
cwtl
jg
ja
int
insb
xchg
mov
inc
mov
xchg
jae
lret
popa
mov
imul
inc
mov
dec
xor
rcrb
movsl
lea
out
pop
out
jae
mov
stos
fisttpl
orl
stos
lea
jb
enter
xor
jg
adc
arpl
outsl
xchg
jns
pop
insb
mov
cmp
imul
sub
insl
add
cmp
shl
in
in
pop
push
mov
sbb
push
add
add
sub
ljmp
push
xlat
sub
ret
dec
in
xchg
testl
mov
cld
fnsave
xchg
arpl
jl
dec
mov
das
pop
rorl
scas
pop
add
and
pusha
pushf
mov
mov
fwait
movsl
pop
into
cmc
hlt
adcb
mov
pop
int3
enter
fnsave
push
cmp
sub
jecxz
push
fstl
xchg
into
lods
pusha
into
xor
jg
fcompl
sub
div
push
mov
call
inc
ror
data16
jp
sbbl
movsb
cmp
xor
aad
cmp
lods
ret
pop
sahf
sbb
and
add
cmp
repnz
dec
sbb
sbb
mov
or
psubsb
jb
and
sub
inc
inc
jnp
imul
jp
adc
pusha
push
out
dec
mov
pop
in
daa
out
leave
dec
repnz
pop
enter
dec
fnstenv
mov
mov
add
mov
xor
mov
lods
dec
into
adc
in
push
add
pop
sbb
and
enter
test
pop
das
sbb
mov
imul
mov
adc
mov
je
adc
orl
pop
push
test
push
pop
hlt
aam
incb
rolb
shll
jl
ret
jne
push
js
or
clc
cmp
xchg
jle
lods
aas
pop
ret
outsb
push
int3
dec
sbb
or
pop
inc
lods
inc
rcll
mov
dec
mov
xlat
push
cmp
rorb
mov
ficoms
mov
mov
sti
mov
fcoms
rclb
inc
mov
pop
cli
push
mov
xchg
ficoml
in
and
loop
scas
les
sbb
xrelease
and
hlt
jbe
pop
stc
adcb
scas
sbb
cltd
dec
loopne
sbb
xchg
js
repnz
dec
js
xorl
jecxz
push
mov
cmc
sbb
mov
mov
adc
pop
lcall
lea
stc
or
das
orb
and
jg
mov
xlat
xor
dec
clc
dec
mov
ljmp
push
fistpl
lea
sub
lcall
cmp
cmp
pop
leave
ret
notb
fsubrs
sar
aas
out
test
sbb
lock
sbb
sbb
push
icebp
mov
imul
mov
push
mov
xchg
mov
inc
xchg
sub
mov
imul
ja
jo
mov
cmp
cmpsb
aad
dec
in
adc
cld
mov
out
jmp
xchg
mov
leave
or
out
push
stc
xor
or
dec
xchg
adc
adcl
leave
pusha
cwtl
pop
daa
mov
jmp
inc
fmull
stos
arpl
fcompl
mov
das
mov
push
lahf
addb
clc
xor
mov
push
xchg
test
stc
nop
jnp
mov
scas
into
dec
fnstenv
out
xor
mov
inc
push
ljmp
jno
dec
xor
cmp
icebp
mov
aaa
sahf
xor
pop
mov
pop
std
jns
loop
loopne
mov
mov
mov
fists
int3
divl
movsl
sbb
aas
imull
or
xchg
shrb
inc
popf
lahf
pop
clc
aam
mov
int
movsl
pop
repnz
add
xor
jns
sub
and
negb
xor
dec
stos
inc
jl
sti
xchg
jg
inc
fcmovnbe
mov
loope
xorl
stos
inc
ss
js
daa
pop
leave
pusha
mov
insl
jl
out
jge
hlt
mov
sahf
add
test
push
jnp
pop
movsl
add
mov
xchg
xchg
or
or
jecxz
sub
pop
mov
int
stc
add
dec
pop
and
adcb
push
out
mov
xchg
mov
and
dec
sbb
je
and
ss
lods
dec
sbb
cmp
arpl
sub
fsts
push
andb
sbb
add
push
popf
daa
jmp
jmp
sbb
lds
lods
xor
hlt
subb
or
and
jmp
sub
sbb
jmp
sub
xlat
cld
sbb
imul
mov
pop
inc
xchg
dec
add
sbb
bound
lret
test
xor
push
les
xchg
jle
pop
ret
loopne
mov
dec
sub
pop
icebp
xor
xchg
pop
push
push
movsl
mov
mov
dec
sti
ja
dec
jb
outsl
int3
inc
mov
adc
mov
and
fldcw
jno
mov
test
inc
sti
inc
lret
bt
aad
push
xor
sub
arpl
cs
cmp
outsl
out
pop
ja
outsb
incb
add
pop
and
pop
dec
adc
add
sbb
test
hlt
pop
out
out
fimuls
bound
sub
mov
cmpsb
leave
icebp
jb
ret
dec
std
lret
mov
cwtl
cmc
loope
fcomip
adc
es
out
xchg
sti
jl
adc
adcl
push
push
enter
scas
test
jae
std
xor
xchg
add
ss
scas
stos
mov
adc
inc
adc
adc
out
mov
iret
arpl
lea
mov
sbb
mov
adc
ret
push
push
pop
or
mov
mull
xchg
jne
jno
lret
push
in
insl
mov
nop
das
test
cmp
rclb
pop
ret
roll
inc
pop
dec
push
dec
scas
mov
in
into
push
push
je
push
fildl
ds
shlb
xchg
xchg
shl
enter
dec
add
fisubs
imul
mov
inc
mov
aam
jno
jae
mov
pop
sbb
pop
sub
hlt
mov
dec
loop
jge
adc
push
out
sub
jl
jnp
aad
and
cmp
aaa
fnstenv
bnd
in
xchg
cmp
add
neg
jmp
cmp
arpl
ds
mov
add
shrl
jp
bound
mov
scas
hlt
in
and
stos
inc
inc
xchg
xchg
stc
loop
cltd
and
or
lods
lds
mov
lods
inc
popf
jb
stc
arpl
scas
jne
mov
mov
add
loopne
int3
arpl
in
xor
push
movsl
fwait
jo
mov
push
shrl
inc
enter
out
xchg
xchg
out
movsb
sub
ss
sub
movb
cli
mov
mov
jecxz
outsl
adc
aaa
ret
inc
fs
imul
and
rolb
or
sahf
ja
and
insl
imul
inc
sub
pop
xlat
mov
push
add
jae
pop
add
cmp
mov
roll
subb
pop
repz
test
sbb
pop
mov
insb
repz
stc
movsl
fisubs
adc
mov
cltd
inc
inc
test
je
xchg
jnp
nop
jnp
sahf
fadd
mov
leave
es
push
std
into
cmp
and
cmp
sub
enter
sub
in
or
mov
out
push
cmpsl
or
cmp
push
clc
gs
adc
ret
mov
inc
sub
fisttpl
cmc
pop
and
enter
out
pop
and
fisubrs
mov
shrb
fisttps
clc
popa
les
dec
push
jmp
incb
mov
in
mov
nop
xor
daa
or
cmp
fwait
aas
ret
xor
jle
mov
mov
pop
fiaddl
aaa
push
fwait
aas
sub
inc
or
inc
adc
sub
aas
mov
mov
jecxz
pop
xor
mov
es
shll
lcall
jp
sahf
inc
ret
outsl
inc
or
mov
and
dec
dec
cmpsb
sub
cmpsl
test
bound
mov
xchg
sbb
cmp
cmp
inc
ss
ret
fiaddl
fstl
repz
or
mov
bound
lock
cmp
outsl
icebp
sub
cmp
pop
push
dec
adc
mov
dec
push
and
int3
ds
jbe
xchg
cmp
popa
cmp
dec
mov
pop
scas
xor
mov
stos
iret
nop
js
adc
xchg
addl
ret
out
jo
or
andb
gs
cs
inc
fsub
bswap
movsb
add
fnstcw
or
mov
and
mulb
cmp
add
adc
pop
pop
xchg
adcb
rolb
mov
js
inc
adc
mov
xchg
aas
fsts
add
cltd
lock
mov
sbb
pusha
pop
mov
dec
or
xor
mov
or
nop
mov
sbb
pop
fidivrs
adc
mov
into
ja
mov
ds
enter
cwtl
adc
hlt
inc
push
push
add
pushf
scas
sub
stc
outsl
jmp
ret
or
outsb
in
inc
push
cmpsb
xor
mov
dec
rorl
je
or
cmp
stos
into
mov
ds
mov
xchg
inc
adc
xchg
jbe
mov
adc
xor
lds
lods
js
jge
sub
imul
dec
xor
pop
rolb
loopne
jo
hlt
or
jno
arpl
loopne
stc
pop
in
std
rcll
lcall
sub
ja
insl
mov
and
not
stc
pop
mov
rcll
test
mov
out
pop
in
movb
add
gs
mov
jns
inc
mov
mov
jmp
jmp
clc
nop
out
loope
shl
icebp
arpl
stc
adc
mov
mov
rcll
cli
rcll
outsl
loope
mov
movsb
and
cmp
and
xchg
stc
xchg
push
shl
out
cmc
mov
adc
leave
lods
and
mov
rcll
mov
xchg
adcl
sbb
adc
pop
inc
in
aad
gs
adc
mov
mov
fisubs
inc
inc
add
rcrb
mov
std
jecxz
mov
in
mov
add
testb
arpl
mov
scas
adcb
pop
and
clc
xchg
cmp
fimull
push
mov
mov
xchg
xor
jle
test
cmp
fcmovnbe
cmp
jecxz
mov
enter
incb
ficompl
in
popf
mov
iret
or
sarb
and
and
jg
imul
inc
cltd
data16
insb
lret
fdivrs
xor
sarb
and
xchg
icebp
test
negb
ret
dec
dec
adc
mov
lret
xchg
inc
loopne
mov
xchg
or
out
inc
xor
in
in
data16
adc
inc
or
inc
adc
ret
and
adc
or
jmp
adc
les
add
leave
aas
cli
xor
xor
cmp
pushf
mov
inc
or
imul
leave
mov
mov
insl
push
dec
pop
ljmp
test
jns
ret
insl
les
loop
add
fcomip
repnz
and
data16
push
xor
cmp
or
test
fiadds
mov
mov
jl
mov
dec
adc
cli
pusha
mov
adc
fimull
iret
push
mov
ljmp
test
pop
popa
in
push
pop
add
inc
subl
lods
and
xor
lock
dec
in
sarb
fs
outsl
sti
data16
daa
stos
mov
cmp
push
dec
fadds
push
jno
push
popa
adc
pop
test
stos
or
push
testl
cli
data16
push
jg
dec
adc
imul
pop
add
push
lods
xor
insb
icebp
and
adc
xor
xchg
mov
je
cld
add
in
ror
int
adc
adc
or
popa
push
in
dec
or
mov
inc
xor
mov
jbe
xchg
scas
test
add
pop
das
lods
add
jge
or
sahf
push
jl
mov
fidivl
test
scas
sub
xor
roll
add
mov
and
pop
stc
sarl
and
sysenter
add
sbb
dec
xchg
inc
shl
cmc
data16
cmp
pop
and
ret
jns
test
jg
adcb
mov
xor
pop
mov
lock
gs
test
mov
xchg
popf
fstpt
insb
aad
popa
js
sbb
mov
and
in
xor
adcb
lcall
dec
jg
inc
mov
add
adcb
ss
sub
mov
xchg
sub
push
mov
mov
repz
fcomi
in
jg
mov
mov
sub
xchg
pop
outsl
out
rcrb
mov
insb
sbb
aam
dec
inc
push
mov
pop
xchg
pop
ret
or
cmp
enter
rcr
jg
aaa
popf
inc
lods
sbb
inc
adc
add
sub
mov
sarb
sti
push
xchg
cmp
jg
std
je
xchg
bound
loope
frstor
mov
fxch
or
cmp
mulb
mov
add
icebp
pop
jb
rolb
fs
jae
jns
shl
mov
add
dec
dec
or
stc
cwtl
xor
leave
jp
in
stos
ljmp
lock
cmp
inc
test
sbb
dec
inc
into
xchg
jbe
xchg
cmp
lock
cli
jge
sub
movb
rep
xor
scas
sub
mov
repnz
out
clc
mov
enter
sbb
inc
and
mov
data16
and
iret
mov
insb
ja
pop
add
ljmp
aas
push
das
pop
ret
mov
ds
xor
testl
gs
dec
adc
and
outsb
icebp
arpl
jno
xchg
push
pop
aam
into
insb
push
arpl
mov
mov
sahf
decb
jno
subl
mov
xor
adc
sub
xchg
xor
jo
test
mov
ja
inc
or
arpl
inc
dec
mov
sahf
inc
adc
inc
in
mov
lods
rcll
jmp
jle
fucomi
dec
or
mov
shll
sti
jge
clc
pop
not
jg
dec
in
mull
xchg
pop
sub
scas
sub
cmp
jb
or
in
fisttps
jb
outsl
xchg
test
jae
push
pop
or
test
cmc
xor
jb
sbb
push
outsb
add
xor
in
lea
cmc
cmpsl
das
jecxz
add
cmp
outsl
jbe
add
dec
push
int
scas
pop
hlt
loopne
nop
aaa
icebp
orl
lock
cmp
xlat
mov
push
out
lods
loop
mov
mov
lret
xchg
stos
xor
pop
sbb
in
enter
sbb
and
cmpsl
jb
aad
mov
mov
inc
icebp
pop
jge
leave
xchg
mov
sti
arpl
movsb
mov
add
ret
jne
ljmp
adcb
jns
jp
mov
cmp
fsub
jne
adc
cli
cld
js
mov
mov
popa
dec
aam
fidivrs
and
pop
mov
or
in
push
shl
stc
jnp
loop
sbb
sbb
dec
sahf
push
jno
test
push
jmp
cmpsl
adc
pop
jg
or
cmp
fst
sub
aas
add
scas
dec
adc
mov
push
cmp
lret
fiadds
hlt
sarb
jae
or
dec
pop
mov
outsb
mov
ljmp
lock
xor
xor
fdivrs
aad
fs
adcb
push
mov
cmp
ret
or
and
mov
or
xlat
adc
popa
out
pusha
mull
mov
ljmp
dec
and
or
pop
cli
pop
fdivrl
mov
clc
loop
push
cld
out
xor
int
fdivl
sub
test
jbe
flds
das
push
mov
cmp
mov
push
mov
fdivrl
xor
xchg
mov
aas
pushf
cmp
cmpsb
xor
leave
mov
push
dec
or
shr
insl
jns
and
add
mov
push
sub
ds
js
jp
jns
rorb
cltd
xchg
cmpsl
sub
xlat
js
cltd
cmp
aam
fidivrs
mov
and
lcall
mov
movb
insb
pushf
xor
shl
push
insb
adc
xchg
mov
or
loopne
lahf
cmp
pop
std
mov
fists
into
enter
les
mov
repz
das
test
dec
in
ds
data16
dec
pusha
hlt
gs
lret
sbb
popa
repnz
add
into
lock
sub
xchg
inc
loopne
jecxz
incl
iret
sarb
sub
movsl
mov
mov
jne
xchg
or
nop
sbb
outsl
adc
cltd
cmp
lods
xor
inc
adc
mov
inc
pop
dec
iret
data16
jne
jb
in
test
scas
mov
ficoml
out
jae
sbbl
push
xor
mov
sbbl
je
xchg
negl
test
loop
jecxz
sbb
jae
outsb
icebp
jno
jmp
mov
ret
lahf
aas
daa
or
mov
stos
out
lods
mov
stos
bound
lcall
in
or
mov
int
cmp
ljmp
and
cmc
ja
mov
adc
push
inc
adc
mov
pop
icebp
or
jg
sahf
stc
pop
sub
aaa
mov
cmpsb
sahf
or
into
gs
pop
ret
or
xchg
inc
fidivrl
divl
movsl
in
roll
test
cltd
ds
jae
xor
add
push
shrb
add
js
push
lods
test
repnz
movsl
push
sti
mov
lods
dec
adc
push
clc
push
sarb
test
ja
adc
jae
pop
enter
inc
pop
dec
push
insl
out
rcrb
xchg
aaa
mov
lods
pop
pop
mov
sarb
test
test
inc
adc
mov
insb
es
jo
js
xor
xchg
bound
adc
movsb
xorb
out
repz
nop
mov
xor
xor
jne
pop
cmp
or
xchg
cmp
mov
test
add
push
inc
mov
test
adc
mov
inc
jnp
scas
jno
and
mov
stc
out
jb
cmp
call
insb
xlat
movsl
js
test
or
pop
fnsave
mov
test
lods
add
insb
push
dec
or
shrb
mov
leave
pusha
mov
je
dec
sarl
mov
xchg
jl
je
cltd
inc
lock
movsl
sub
insl
fs
jnp
fwait
mov
mov
fisttps
lahf
cmp
and
cmp
cmp
enter
pop
adc
or
push
imul
fdivs
filds
movsl
jmp
loope
mov
ds
dec
xlat
jge
xor
jo
and
imul
lods
mov
divb
loope
in
and
imul
icebp
enter
out
inc
mov
inc
or
mov
xchg
jo
ret
fadd
push
cli
jo
mov
out
mov
aad
cmpsb
dec
stos
push
fs
push
cs
sub
cmp
inc
adc
mov
scas
mov
je
jle
hlt
arpl
addr16
imul
ljmp
bound
cmp
mov
rolb
and
jns
outsb
cmp
pop
int3
jns
icebp
pop
cltd
insb
fwait
aas
xchg
lret
in
ss
cltd
inc
das
daa
push
mov
fisubrl
cmp
dec
scas
xchg
pop
add
dec
adc
fs
repnz
xchg
aaa
push
in
jecxz
xor
movl
inc
jae
aad
sahf
addr16
and
pop
aam
xor
mov
adc
call
out
sbb
adcb
rcll
xor
jbe
jnp
call
lcall
loope
iret
or
addr16
pop
movb
fildl
inc
xabort
movsb
xchg
lahf
inc
lods
mov
stos
in
ror
cmpsl
add
mov
or
mov
mov
ret
mov
push
mov
xchg
jnp
xchg
jle
xchg
inc
or
push
leave
sbb
or
push
mov
test
addb
pop
ljmp
leave
dec
adc
lds
mov
mov
rorb
mov
ljmp
addr16
out
jns
cmpsl
icebp
xchg
cmp
mov
cld
push
in
ja
add
sbb
imul
repnz
test
push
mov
sti
pop
mov
test
dec
cmc
inc
rcll
push
mov
nop
out
push
pop
clc
mov
adc
pop
sar
pop
fwait
xchg
mov
es
lods
bswap
sub
fwait
cmp
dec
shl
jns
xchg
fbstp
mov
xchg
in
popf
inc
dec
cmc
mov
and
push
cli
mov
mov
xchg
lret
daa
inc
pop
jnp
sub
inc
sahf
jge
mov
movsb
mov
xor
jg
lods
daa
and
pusha
stc
ds
adc
sbb
inc
push
add
insl
in
imul
out
cmp
jg
popf
pop
add
mov
rorl
bound
cwtl
dec
scas
mov
dec
lahf
mov
fwait
pop
cld
loop
aam
aam
sub
or
out
outsb
xchg
push
dec
or
ret
iret
lea
insl
lods
sub
scas
nop
inc
inc
addr16
ret
mov
scas
pop
push
lds
xchg
sahf
aaa
jns
repnz
addr16
popf
cwtl
in
sub
push
dec
and
jnp
cmp
jg
jl
mov
movsb
sub
cmp
xor
popa
dec
dec
les
pop
lock
mov
mov
pusha
lds
mov
pop
inc
fucom
insl
mov
mov
mov
mov
lods
fistpll
inc
jo
fstpt
cld
push
add
call
sub
std
pop
lret
xor
test
lahf
mov
jo
icebp
pop
add
jecxz
scas
xchg
jp
mov
aas
mov
xchg
imul
ror
xchg
js
adc
or
pop
and
rcr
gs
rcl
into
dec
pop
roll
sbb
or
xor
aas
stos
loop
mov
movsb
loop
pop
outsl
cli
pop
push
inc
mov
fists
or
jne
cmp
insl
fadds
sahf
or
cwtl
das
adc
adc
ret
inc
jne
ret
sub
out
dec
xor
push
push
jmp
xchg
aaa
cmpl
fadds
adc
dec
rcll
cwtl
movsl
xor
movsb
cltd
add
dec
mov
movsb
jbe
xlat
mov
clc
pusha
mov
lods
mov
mov
lds
xor
lret
adc
adc
fidivrs
or
mov
add
aaa
fidivrl
add
xchg
repz
movsb
jns
cmp
les
das
pop
fidivrs
cmp
mov
xchg
mov
ja
pop
sti
mov
pushf
cmp
pop
out
mov
jae
jno
and
cltd
push
int3
mov
sub
clc
stc
loopne
sub
inc
ficomps
xchg
cmp
mov
mov
lret
nop
cmp
in
je
cli
or
pop
shrb
bound
filds
cld
test
jle
add
push
stc
add
dec
push
dec
adc
pushf
clc
popa
pusha
out
aam
jae
push
lret
js
pop
lcall
dec
sub
push
clc
imul
inc
jns
mov
dec
lcall
xchg
pop
add
pop
jle
jecxz
mov
jnp
mov
loop
pop
sbb
mov
movsb
mov
pop
inc
mov
sbb
enter
add
sarb
push
adc
mov
scas
fildl
pushf
push
sbb
push
sub
cmp
push
test
mov
jecxz
jb
int
lods
das
fcomps
sbb
fwait
push
jp
iret
inc
or
scas
jle
call
incl
ljmpw
std
cltd
inc
lahf
mov
pop
push
and
popa
out
call
jnp
out
insl
xchg
scas
imul
pop
mov
dec
mov
mov
mov
int
pop
mov
sub
in
addr16
pop
and
pop
sub
ja
mov
fiadds
rorb
dec
pop
mov
xor
mov
cs
icebp
pop
ja
mov
lahf
sti
mov
lret
test
mov
inc
pop
testl
mov
and
xchg
cmp
sub
jg
inc
cmp
scas
cltd
addr16
outsl
mov
xchg
jmp
sbb
mov
enter
pushf
push
add
mov
jge
lcall
inc
fisubrs
rorb
in
push
sbb
inc
ds
adc
aaa
into
jle
xor
negb
lea
sbb
imul
fisubs
stos
rol
cmc
xchg
pop
pop
incl
iret
nop
inc
push
rorl
movsb
loop
ja
cmp
pop
sarl
adc
ja
aaa
or
outsl
xchg
stc
gs
pusha
out
xchg
cmpsb
notl
jp
pop
mov
gs
push
mov
mov
mov
outsb
sahf
xchg
notl
lret
mov
and
scas
data16
ja
mov
jns
pcmpeqb
push
pop
notl
dec
out
adc
jns
mov
stos
xlat
ja
cmp
xchg
xor
jge
pushf
notl
dec
daa
mov
mov
pop
stc
sub
fistl
adc
jecxz
sub
lea
enter
icebp
inc
adc
roll
mov
xor
lds
mov
inc
test
or
hlt
test
inc
xchg
jno
lahf
pop
sti
mov
jle
aaa
cld
roll
pusha
orl
pushf
test
sub
rorl
xchg
in
jbe
in
mov
lock
or
jo
add
dec
lea
lods
xor
std
orl
xor
or
repnz
mov
mov
in
mov
cmpsb
and
dec
mov
xchg
inc
aad
repz
mov
cmpsb
dec
or
std
mov
fsubr
mov
jle
aas
lcall
add
bound
aas
dec
push
pop
repnz
rol
aad
sub
adc
int
adc
arpl
jnp
pusha
in
in
jl
push
jle
mov
iret
inc
or
pop
add
subb
jle
xchg
push
popa
icebp
bound
int
stos
cmpsl
xor
fmul
out
adc
xor
popf
inc
mov
inc
dec
xor
test
fwait
pop
les
ret
or
or
sbb
pop
lahf
dec
push
inc
int
xor
xchg
sub
jns
xchg
lods
xor
or
addl
push
testl
inc
or
xchg
xor
jl
rcrl
jb
xchg
aaa
cmpsl
addr16
pushl
mov
out
jp
loop
fwait
outsl
adc
adc
inc
or
mov
pop
add
int
out
xor
mov
dec
xlat
pop
mov
pop
jge
push
mull
ds
cmpsl
sbb
pop
out
aam
stos
pushl
xor
test
adc
test
add
into
push
mov
mov
stos
in
jno
scas
mov
bound
mov
into
sub
ret
dec
push
and
sbb
xchg
and
into
push
mov
inc
push
push
pop
mov
sbb
dec
negb
ds
xchg
sbb
repz
shll
outsb
inc
or
lcall
and
or
jge
mov
push
mov
fsts
pop
pushl
push
sarl
sub
and
movsl
repnz
addr16
aad
jno
cmp
ds
gs
sub
iret
mov
movsl
mov
dec
push
sbb
fdivrs
inc
xchg
inc
xor
mov
cs
cmp
and
aad
lret
or
movsl
cmp
fwait
xor
push
in
sub
sub
jle
fwait
cmp
push
pop
test
and
mov
test
out
add
jne
in
mov
xor
in
fsubs
popf
insl
movsb
sarb
insl
out
and
xor
mov
fsts
mov
shll
and
leave
xor
dec
and
scas
movsb
xchg
daa
scas
pop
mov
mov
adc
dec
adc
into
pop
mov
inc
inc
dec
fdivl
arpl
push
sub
cwtl
aas
push
cmp
test
adc
in
icebp
pop
fcmove
pop
add
or
popa
ljmp
clc
mov
lods
sbb
scas
xor
shrb
pop
cltd
mov
sub
push
lcall
xchg
pop
mov
push
cmp
and
lds
sti
or
leave
and
fwait
mov
lret
mov
fnstcw
xchg
push
add
jnp
test
ret
mov
insl
dec
or
movb
notl
mov
pop
int
mov
dec
popa
das
cmpsl
dec
cwtl
cs
xchg
mov
mov
cmpsb
cmp
push
or
pop
cmp
out
jne
sub
mov
fldt
addr16
jmp
xchg
xchg
xlat
inc
or
lds
int3
insl
pop
sarl
jl
pop
ljmp
test
push
push
mov
push
mov
fwait
lds
loopne
and
push
lret
mov
sbb
arpl
popf
aaa
push
arpl
cmp
lret
add
pop
add
aam
fldl
enter
and
adc
inc
psrld
mov
xlat
jl,pn
xor
cmp
push
xchg
mov
iret
inc
adc
pop
dec
xchg
push
enter
mov
icebp
pop
fdivrl
in
test
push
sbb
lods
sub
pop
rolb
xchg
cmp
push
jp
and
jae
lahf
xor
and
push
lret
addr16
dec
incb
int3
mov
push
dec
xchg
nop
xchg
hlt
arpl
dec
jg
cli
sbb
add
mov
or
adc
into
sti
fidivrs
push
movsl
xor
int
jo
aad
jae
and
xchg
aaa
inc
sub
xor
ja
add
dec
imul
add
ret
xchg
jb
inc
adc
outsb
mov
sahf
xor
inc
inc
jne
fsts
jp
inc
enter
xchg
pop
add
jno,pt
fldl
aad
or
into
push
mov
les
dec
xlat
xchg
leave
dec
or
insl
mulb
clc
clc
push
scas
pushf
insb
jmp
mov
cmc
push
lcall
push
dec
fidivs
mov
jle
xchg
xchg
fisttpl
pop
jmp
lea
mov
xchg
scas
enter
stos
sub
pop
jns
or
push
fdivrs
iret
ret
out
imul
movsl
push
sbb
les
pop
stc
and
aas
test
or
push
dec
or
jbe
or
pop
data16
jne
jnp
call
in
int
adc
repz
mov
cmp
add
data16
lds
mov
test
sub
lods
mov
sahf
shlb
fwait
data16
addr16
loopne
and
and
push
fnstenv
stos
das
cld
or
jb
lock
mov
dec
cmp
movsl
lret
mov
mov
and
mov
lods
call
repz
adc
cltd
sbb
dec
sti
add
lea
in
outsb
or
push
jmp
loope
cmp
stos
cmp
aaa
loope
mov
adc
das
stos
cs
push
add
enter
lret
jne
stos
cmc
fwait
ds
mov
data16
xchg
jo
inc
adc
outsb
test
push
inc
adc
push
jae
popf
loop
cmp
movsb
xor
gs
fs
mov
int3
xchg
aaa
out
movsb
sub
sub
or
adc
xor
fs
dec
adc
lret
or
pop
add
xchg
data16
xchg
jecxz
fistpl
leave
insl
idivb
test
add
outsb
jp
stos
ljmp
nop
ror
mov
jmp
mov
repnz
mov
int
lcall
sarb
mov
push
ja
out
jno
arpl
pop
push
sub
mov
and
jo
pop
rcrb
daa
test
incb
fmull
aas
sahf
mov
or
dec
lods
jl
push
jno
pop
pushl
call
pusha
out
das
and
test
dec
or
xchg
pop
std
loop
pop
cli
inc
stc
xor
sub
push
inc
xlat
imul
rorl
in
test
xchg
cmp
ret
pusha
dec
adc
jns
adc
pop
mov
aad
aam
adc
mov
mov
dec
or
scas
mov
jg
pop
cmc
adc
inc
mov
mov
and
add
push
into
rsm
sbb
decb
sbb
mov
inc
push
test
xchg
push
cld
sbb
lds
pop
mov
push
inc
push
fadds
lods
cmp
lea
mov
jp
mov
inc
cltd
ss
add
in
outsb
push
pop
lock
mov
es
jp
cmp
mov
add
ljmp
cmp
jmp
ss
mov
and
and
test
fxch
es
cmp
xchg
inc
inc
jl
and
popf
ret
cmp
ret
roll
pusha
xor
sub
mov
jo
cmp
and
jge
int3
mov
test
sub
sbb
ljmp
or
out
iret
xchg
inc
negl
rcr
pop
jmp
sarb
jae
cmpl
insb
jl
je
and
dec
or
jmp
xchg
data16
add
pushf
sub
lods
std
aas
push
cld
int3
in
mov
jge
shll
scas
dec
pop
cmp
mov
scas
add
inc
mov
pop
daa
mov
push
add
into
sbb
fidivrs
sub
call
xor
loopne
popa
out
xchg
lahf
aaa
popf
dec
les
and
sarl
je
ss
xor
sub
mov
lods
mov
mov
orb
push
iret
add
inc
or
push
push
add
cmp
imull
mov
cltd
out
sbbb
or
fimuls
cltd
test
mov
int
push
mov
cmp
mov
pop
aas
aaa
sub
dec
xchg
or
pop
fdivrl
dec
test
arpl
icebp
sub
sbbl
jmp
repz
test
inc
or
mov
add
pop
and
ret
xchg
pop
test
jae
cmp
repz
stc
pop
xchg
mov
subl
adcl
out
sarl
adcb
in
test
jae
adc
xor
cwtl
out
adc
gs
rolb
cmpb
lahf
cmp
shrl
pushf
adcl
fstpt
icebp
data16
push
mov
jge
jecxz
std
xchg
fdivr
ret
mov
mov
push
int3
lret
add
pop
xchg
pop
test
add
push
adc
cmp
sub
adc
mov
cmpsl
shrl
aam
les
push
data16
lods
or
mov
mov
xchg
push
pop
repnz
movsb
call
sbb
mov
cmpsl
and
fsubs
or
mov
pop
fisttpl
mov
mov
movsb
popa
ret
js
jle
mov
sbb
sti
popa
or
or
pop
pop
add
cmp
mov
and
xor
mov
sbb
xor
daa
add
mov
scas
push
lret
pop
add
lds
inc
insl
loop
mov
jl
imul
mov
imul
inc
xchg
jle
xor
mov
jbe
ja
popa
push
mov
mov
lcall
adcb
xchg
mov
loop
clc
imul
add
in
xor
test
jle
cmp
rcrl
rolb
or
mov
call
xchg
pop
nop
xchg
cmp
dec
lcall
jo
lds
push
stos
test
inc
push
push
cwtl
adc
push
not
clc
bound
das
inc
or
or
push
hlt
mov
xchg
loope
movsb
cmp
add
pop
push
push
mov
ja
test
xchg
mov
ficomps
adc
popa
mov
pop
out
mov
dec
in
aad
or
jns
xchg
sub
mov
int3
jnp
dec
lods
in
test
pop
iret
shlb
inc
pop
jae
out
test
jnp
jne
mov
sbb
sub
stc
cmp
mov
sbb
dec
mov
aad
insb
addr16
popf
fstpl
mov
jp
popa
adc
mov
ret
aad
dec
pop
mov
aam
pop
or
xchg
jnp,pt
mov
into
adc
loop
das
push
add
xor
dec
in
push
js
xchg
imul
test
sub
dec
sti
mov
sub
dec
shrb
mov
lock
adc
jl
hlt
push
movsl
and
inc
sub
ja
and
leave
or
cmp
push
cmc
lea
sbb
loopne
movsb
cmp
add
pop
adc
mov
ja
test
outsb
fimull
cmc
mov
dec
adc
pop
mov
pop
out
mov
dec
out
shll
add
es
sub
mov
lret
jns
dec
stos
in
test
addr16
aas
pop
jno
out
xchg
in
les
movsb
movsb
in
lcall
and
dec
mov
mov
fistpl
or
xchg
pop
adc
xor
shll
js
es
pop
or
xchg
cmp
mov
int3
adc
fistps
xor
dec
add
xor
in
push
jns
test
insb
add
movsl
xchg
xlat
adc
mov
sub
inc
fwait
dec
shrl
mov
icebp
mov
jge
icebp
and
fwait
xchg
inc
sub
mov
movb
fdivrs
out
add
pop
pop
testb
jge
fimuls
fwait
xor
loope
pop
adc
push
test
js
cmpsb
xlat
outsb
fadds
cmc
mov
fistpl
stos
jle
cmp
pop
lahf
xor
sarb
lock
dec
out
shlb
add
insl
add
and
mov
leave
js
dec
stos
ljmp
cmp
lock
in
ret
movsl
mov
lds
divb
dec
loop
xchg
mov
fstps
or
jnp
pop
adc
xor
shll
jns
and
insb
push
or
cwtl
cmp
mov
lret
sti
scas
cmp
dec
add
outsb
dec
in
push
jp
test
insb
add
movsl
cwtl
das
xlat
adc
dec
sub
inc
cltd
dec
aam
jge
pop
in
sahf
repnz
or
adc
xchg
inc
lds
mov
movb
add
pop
pop
testb
jge
fmull
fwait
xor
loope
pop
adc
push
xorl
data16
xlat
outsb
xchg
xchg
mov
ficompl
mov
dec
adc
pop
popf
xor
into
jle
icebp
scas
out
dec
out
sarl
add
add
and
sub
ja
dec
test
lret
shrb
cmp
pop
insl
push
icebp
mov
in
shlb
mov
les
mov
inc
test
mov
push
lcall
pop
out
sub
pop
ds
jl
xor
iret
mov
add
aad
push
or
cltd
cmp
mov
enter
lods
ds
sbb
dec
lcall
insl
dec
in
push
jp
cmpl
das
adc
dec
sub
inc
cwtl
dec
aam
jl
pop
jmp
repnz
or
jge
lock
xchg
inc
lds
and
lds
fdivs
push
pop
testb
jge
fisttpl
xor
loopne
pop
adc
push
xorb
jns
mov
add
sub
push
mov
dec
adc
pop
pushf
xor
int
pop
icebp
scas
out
dec
out
sarb
add
add
and
and
jbe
dec
test
test
imul
sbb
in
mov
loopne
lcall
and
inc
test
mov
push
cltd
pop
hlt
pop
mov
jnp
pop
push
cmpsl
ds
jnp
xor
into
mov
add
aad
push
or
cltd
cmp
cmpsb
pop
and
clc
lods
ds
sbb
dec
pop
repz
insb
dec
in
push
jp
cmpb
das
aad
mov
inc
divb
inc
xchg
dec
aam
jnp
pop
ljmp
jge
out
adc
nop
inc
lds
and
les
inc
fdivs
pop
testb
jge
fimull
fwait
xor
dec
mov
jns
mov
add
daa
fcomps
mov
dec
adc
pop
fwait
xor
int3
jl
icebp
lods
in
dec
out
iret
js
add
add
and
and
jne
dec
cmpsl
out
inc
sbb
shrb
cmp
pop
imul
dec
mov
jl
outsl
mov
ret
repz
mov
inc
cmpl
mov
push
cwtl
aad
hlt
push
mov
jnp
pop
or
cltd
xor
mov
pushl
insl
push
push
add
movsl
pop
and
imull
xor
dec
cld
pop
repz
dec
jp
cmpb
das
rcll
mov
inc
hlt
mov
es
inc
xchg
inc
aam
jns
enter
repnz
or
jle
in
adc
aas
lds
and
ret
fnstenv
jecxz
add
mov
push
mov
xor
mov
jns
mov
add
es
push
mov
dec
adc
jns
cmp
pop
lcall
stos
in
push
out
int
ud0
outsb
add
push
xchg
mov
ret
jae
dec
movsl
in
inc
push
shrl
aaa
enter
repnz
jge
insl
adc
push
shrb
icebp
das
and
inc
addl
xchg
rcrl
add
mov
ljmp
aas
cmp
pop
pop
nop
lret
mov
jnp
push
xlat
outsb
push
add
lcall
and
cmc
test
fsts
xor
inc
cli
pop
hlt
sub
out
dec
jnp
jle
outsb
add
rorl
lea
repnz
and
stos
inc
xchg
inc
aad
ja
leave
pusha
out
repz
or
jg
jmp
test
pop
push
popf
lea
and
fisttps
inc
fidivl
loope
add
push
popa
clc
test
and
jg
xlat
xchg
xor
fcmovnb
pop
or
jecxz,pn
pusha
lahf
fnstenv
addl
mov
pop
mov
inc
adc
aam
cwtl
xor
leave
js
repnz
lret
jns
std
cmp
push
outsb
push
cwtl
das
push
lea
jno
dec
mov
divl
repz
out
mov
fildl
out
sub
dec
in
jg
fdivs
rcrl
add
jge
push
or
xor
leave
mov
jl
sbb
outsl
dec
add
xor
lea
ret
repz
inc
xlat
xlat
adc
lret
pop
cmc
sub
call
jl
outsl
push
jmp
lcall
lock
inc
xchg
inc
insl
jne
lret
xchg
hlt
mov
push
jmp
test
mov
xor
insb
lods
and
in
incb
das
loopne
add
push
popa
clc
xorb
and
jg
aad
test
mov
fcmovb
pop
or
mov
jnp
popf
fnstenv
addb
mov
testl
jne
ds
xchg
xor
ja
repz
push
call
cld
cmp
insb
sbb
lea
jo
dec
mov
aad
divb
leave
pusha
gs
hlt
mov
out
mov
flds
out
sub
mov
inc
jge
fsubrs
iret
pop
testb
mov
out
jge
push
or
xor
mov
jge
sbb
outsl
dec
add
lea
rclb
movsl
inc
fcom
adc
lret
pop
imulb
gs
call
jnp
outsl
push
jmp
or
push
and
inc
nop
inc
xlat
outsb
je
lret
xchg
cmc
mov
add
xorb
adc
mov
xor
imul
out
cld
inc
fisubrl
dec
popa
clc
xorb
and
push
roll
popf
xor
fld
pop
or
push
jp
in
pop
fstenv
jg
lcall
and
jae
aas
push
xchg
xor
lds
hlt
cmpsl
out
call
sti
cmp
push
lcall
outsl
mov
inc
adc
insl
cmc
xor
pusha
arpl
cmc
mov
out
mov
adc
or
mov
aas
jnp
fsubrs
pop
idiv
mov
and
pop
jle
push
push
stos
inc
cmp
xor
mov
jle
sbb
jo
incl
mov
mov
inc
fcom
adc
inc
cmc
pop
mulb
fs
jmp
jns
jo
call
or
push
pop
pop
lods
inc
popl
outsb
jb
lret
xchg
cmc
mov
add
xorl
cmp
enter
mov
mov
cmovle
jg
mov
bound
test
xor
or
push
jns
in
pop
lcall
scas
in
clc
pop
shlb
mov
jb
aas
push
xchg
xor
les
movsl
in
jmp
stc
aaa
jo
imul
mov
lahf
repz
popa
bound
jg
adc
push
popf
pop
mov
and
pop
or
out
jp
fldcw
int3
pusha
idiv
mov
and
push
jg
push
add
inc
ss
xor
push
leave
pusha
mov
mov
jle
pop
fidivl
std
add
popf
dec
and
out
mov
xor
mulb
push
ljmp
jno
out
fwait
xor
or
push
sbb
xlat
outsb
jo
int3
arpl
xchg
cmc
mov
add
xorb
stos
adc
ss
addr16
mov
mov
fldt
or
mov
pusha
lahf
sbbl
mov
lahf
ss
pop
pop
inc
mov
jl
cltd
jnp
lcall
and
jo
inc
xlat
push
xchg
xor
cmc
mov
lds
xor
fwait
xor
es
fldt
outsb
icebp
cs
bound
testb
gs
xchg
aam
sahf
add
es
call
test
lret
sti
scas
lea
sbb
pop
dec
add
mov
ret
hlt
test
jg
adc
push
popf
sub
stc
nop
fwait
dec
and
jle
pop
scas
in
lahf
inc
fnop
push
ss
icebp
pusha
mull
popa
push
jmp
inc
jle
jne
jb
in
pushf
xor
push
xchg
sub
jmp
scas
inc
mov
outsl
outsb
lods
int
fisttps
in
xorl
adc
adc
test
leave
cmpsb
sub
mov
inc
fldcw
or
sti
jl
mov
pop
popf
sbbb
jg
inc
mov
mov
pop
add
es
pop
xchg
fdivl
jns
fwait
stos
ljmp
std
cmp
inc
fmuls
ss
jo
mulb
ret
jge
cmc
xor
gs
pushf
xor
nop
daa
mov
fldcw
outsl
out
sub
arpl
testl
xchg
rorb
lahf
add
es
cmp
enter
lods
mov
dec
add
ss
push
lret
bound
cmpsb
jmp
jae
stc
pop
sahf
sub
xchg
cltd
dec
and
scas
jmp
inc
fcmove
or
into
cmp
pop
push
in
nop
inc
jg
jae
jae
jecxz
popf
xor
add
sub
out
push
sbb
inc
mov
fnstenv
stos
into
fisttpll
in
xorl
adc
mov
movsb
sub
mov
inc
frstor
fsubrs
or
sti
jp
lea
jle
inc
mov
mov
pusha
add
mov
jle
xchg
fdivl
js
pushf
test
lret
and
insb
sbb
ss
outsl
pusha
mull
ret
hlt
xor
arpl
nop
daa
mov
mov
inc
or
arpl
popl
ljmp
rorb
lahf
add
es
cmp
movsl
pop
jno
mov
stc
imull
sbb
lods
inc
xor
sahf
push
lret
bound
jmp
jae
clc
pop
sahf
sub
xchg
cwtl
dec
and
scas
ljmp
into
cmp
popa
clc
pop
pop
push
in
popl
push
jb
jae
loop
popf
xor
add
push
sbb
inc
mov
fnstenv
stos
into
fmull
subl
adc
mov
arpl
push
call
xlat
outsl
push
or
sti
jns
lea
lcall
scas
in
mov
pusha
add
push
jae
out
push
xchg
fdivl
ja
pushf
test
cli
xchg
sbb
and
imul
dec
mov
int
outsb
pusha
negl
sarl
xor
bound
daa
mov
mov
inc
or
int3
arpl
clc
popl
ljmp
iret
or
in
es
aaa
jae
stc
imulb
sbbl
xor
ss
push
lret
bound
movsb
jmp
jae
testl
xchg
xchg
dec
and
scas
jmp
or
into
cmp
popa
clc
push
pop
push
in
mov
jg
jno
jae
loope
popf
xor
add
push
pop
push
mov
mov
fnstenv
test
testl
adc
mov
bound
push
call
and
inc
fs
js
lea
cltd
sbbb
jl
inc
scas
in
mov
pusha
add
push
jb
out
push
xchg
fdivl
jbe
pushf
cmpsl
out
xchg
sbb
and
push
inc
int
insl
pusha
negl
sarb
das
jb
popa
adc
daa
mov
mov
inc
pop
mov
int3
arpl
clc
aas
jnp
subl
mov
lret
jecxz
daa
mov
xor
push
jno
mov
arpl
cmc
test
sbbb
cld
lods
inc
cs
aaa
pushf
dec
lret
bound
mov
fnsave
pop
sahf
es
xchg
xchg
inc
and
mov
cltd
inc
fcmove
or
iret
cmp
popa
clc
sbb
push
in
lea
je
loopne
popf
xor
add
push
adc
fnstenv
test
data16
in
test
dec
or
pusha
mov
push
call
and
outsl
push
push
inc
gs
ja
lea
cwtl
sbbl
jp
inc
lods
jmp
cmp
aas
mov
jle
xchg
fnsave
add
xchg
pop
and
imul
aaa
into
mov
fcoml
or
jae,pn
pusha
adc
sub
aam
inc
push
mov
int
pop
or
cmp
pop
push
lods
int
mov
loope
sub
xor
frstor
ret
fs
hlt
cmpsl
fsts
lods
inc
sub
mov
bound
mov
adc
fidivs
repz
sahf
and
cld
xchg
xchg
inc
and
mov
xchg
inc
fcmove
or
sarb
jmp
push
out
mov
jg
insl
lods
jne
fisttps
xchg
sub
loope
push
adc
xchg
jo
cmpsl
shlb
xchg
mov
fistl
mov
pop
mov
push
call
and
outsl
push
add
data16
jbe
lea
xchg
test
leave
js
inc
stos
ljmp
cmp
call
jne
jb
popf
mov
lds
divb
sbb
dec
mov
iret
mov
ficoml
or
or
sahf
xor
mov
mov
inc
add
fidivl
and
stc
nop
cmp
subl
or
fistps
push
jmp
outsl
inc
fisubs
shll
movsl
nop
daa
xlat
adc
sub
cmp
mov
ljmp
icebp
or
xchg
inc
es
in
inc
fcmovnb
push
cmp
aaa
out
stc
sbb
out
mov
adcb
stos
jbe
rorb
or
stos
sbb
bnd
nop
cld
jp
test
sub
gs
ljmp
dec
imul
not
cwtl
rorb
jo
or
inc
adc
aaa
aad
adc
add
imul
jne
pop
push
shrb
add
imull
add
mov
rorl
cmp
cmp
lea
stos
ja
sarb
mov
dec
lock
adc
jns
dec
adc
jl
cs
xchg
neg
movsl
cmp
add
pushf
mov
push
jle
es
stos
dec
fcompl
sbb
jne
pop
imul
cmp
mov
xchg
mov
cs
or
in
mov
leave
ret
xor
sbb
mov
inc
jno
xchg
into
xchg
mov
pop
aaa
jae
imul
xor
fstps
out
jmp
and
xchg
or
sub
inc
pop
data16
inc
stc
mov
inc
or
repz
ror
iret
dec
sub
push
lock
dec
xor
jae
inc
mov
mov
arpl
movsb
in
rcl
in
cmp
pop
or
pop
mov
imul
adc
xor
loop
add
idivl
lahf
in
cmp
adc
orb
sub
jl
and
jb
outsb
mov
mov
pop
sub
cmpsl
inc
rcl
iret
cmp
xlat
add
sub
adc
mov
inc
cmp
mov
test
dec
lret
out
insb
aad
dec
lret
mov
pop
adc
shrb
in
je
inc
je
sub
push
mov
sbb
hlt
gs
xor
mov
icebp
dec
cmp
pop
mov
adc
or
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
jae
repz
js
in
dec
leave
dec
cmp
jb
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
jmp
aaa
ss
lods
scas
and
dec
mov
movsb
jg,pn
clc
cmp
iret
inc
incb
xchg
jno
